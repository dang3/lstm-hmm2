sbb
add
sbbb
pop
add
out
xchg
ljmp
rcrb
faddl
pop
jno
push
cld
in
sub
cwtl
outsb
mov
bound
aam
das
xorb
jle
add
loope
cmp
mov
pop
adc
dec
in
inc
pop
add
mov
jno
cmp
lock
push
scas
sub
xorb
xor
jg
into
data16
das
lcall
xor
js
pop
incb
cmc
aas
out
ss
xlat
stos
imul
lea
fs
lds
icebp
sub
dec
or
xchg
pop
dec
jecxz
hlt
negl
push
dec
jno
add
push
mov
cmpsb
pop
sbbl
xchg
shld
call
pusha
fs
movsb
add
repnz
notb
sti
imul
sti
mov
rcrb
jp
test
pop
in
dec
fsts
xchg
and
jns
cld
cmp
faddl
testb
out
test
stos
and
pop
inc
or
push
cmp
aad
in
ljmp
mov
ss
and
and
pop
or
mov
test
inc
xor
aas
mov
notb
scas
shlb
mov
je
cwtl
sbb
pop
jnp
adc
test
jg
es
aas
and
int3
mov
aad
addr16
xor
or
pop
data16
dec
adc
mov
xchg
push
lahf
sbb
jo
mov
imull
sub
repnz
push
jno
cli
mov
sahf
hlt
adc
shrb
insl
aad
movsl
fimull
mov
cmp
nop
fs
mov
test
sbb
mov
sbb
cmpsb
daa
xchg
fbstp
iret
mov
dec
mov
pushf
add
adc
dec
mov
pop
dec
sti
jno
xlat
imulb
lcall
adc
push
push
call
mov
pop
and
sub
xchg
stc
lret
ret
inc
cld
shlb
imul
das
jl
cmp
jae
mov
int
pusha
in
push
mov
outsl
cmpsb
dec
fisubs
incl
in
push
inc
subb
lds
inc
jbe
pop
adc
xchg
mov
jns
push
in
jbe
cmp
or
outsl
cmp
or
jnp
fdivrl
xchg
mov
push
push
lret
and
out
clc
fldl
ret
iret
mov
shl
insb
adc
inc
call
cwtl
rcrl
cmp
inc
std
push
sub
xor
ljmp
stos
sub
mov
add
push
inc
mov
fisttpl
sub
cld
inc
aas
fistpl
out
fmul
ficoms
cmp
shlb
mov
in
cwtl
inc
dec
mov
cmp
fdiv
pop
inc
inc
shrl
add
jo
xchg
pop
sbb
gs
cmp
scas
in
es
fisubrl
mov
push
fisttps
lea
ljmp
jne
ret
mov
mov
lock
pop
inc
pusha
dec
out
sahf
ljmp
jecxz
xor
dec
stos
xorl
popf
push
ret
pop
xor
outsb
sub
addr16
aad
sub
jp
xchg
dec
sub
inc
shl
cli
fs
or
jns
push
hlt
mov
test
add
push
aad
fnstcw
cld
mov
lcall
int3
hlt
test
adc
rolb
push
mov
fsubr
aas
pop
test
cmp
inc
mov
jg
add
lea
push
leave
insb
cmp
fdivs
rcrb
addl
fdiv
fstps
dec
fadd
out
cmp
jg
fs
xchg
adc
push
adc
mov
data16
or
add
dec
jno
mov
jo
aam
dec
xor
jno
dec
mov
pusha
mov
add
and
mov
fildl
aad
test
sbb
out
sahf
cmp
jmp
inc
add
mov
je
jmp
xchg
in
fwait
popf
jg
arpl
aad
rorb
adc
push
int3
or
mov
xchg
lods
lahf
jae
sub
mov
mov
or
mov
mov
in
out
aad
movsl
cmp
je
test
loope
pop
adc
xlat
setns
rdtsc
out
sub
sahf
scas
inc
push
sbb
lods
xor
dec
fnstcw
js
incb
xor
imulb
or
adc
fldenv
sti
dec
imul
cli
es
cltd
mov
xchg
inc
scas
mov
insb
pop
lcall
iret
pop
stc
jo
cmp
sahf
sbb
popl
mov
xchg
popa
fwait
xchg
pop
xchg
sar
jb
sbb
scas
in
fadds
pop
lods
inc
ret
fwait
xchg
sbb
xchg
inc
cmp
xchg
out
test
adc
dec
cmc
jl
lcall
repnz
cmp
fisttps
fildl
push
xchg
insb
mov
mov
sbb
xchg
in
enter
hlt
or
jne
loop
enter
adc
inc
jmp
mov
push
aas
push
lret
adcl
push
xor
sbb
xchg
test
inc
ret
cltd
rcrb
xchg
sbb
mov
jbe
dec
or
xchg
pushf
fisttpll
fcom
inc
push
notb
mov
in
sbb
sahf
dec
out
xor
dec
lock
xor
mov
jg
push
and
in
mov
push
nop
xchg
mov
mov
adcb
lods
xor
jnp
int3
add
scas
call
xor
and
cld
xor
repz
xor
adc
shll
jae
gs
push
aam
or
dec
jne
push
sub
sbb
dec
adc
mov
push
push
mov
add
jno
movsb
mov
xchg
shlb
sbb
and
add
mov
mov
loop
push
push
mov
sbb
dec
mov
fcompl
in
outsl
jl
movsl
mov
aas
sub
les
jo
cmp
xchg
jg
push
adc
stos
push
out
testb
in
mov
xor
out
sbb
incl
loop
jge
pop
jp
fisubs
aas
cli
loop
mov
nop
adc
mov
cwtl
or
pop
mov
add
mov
xchg
jmp
push
cli
mov
inc
lock
inc
mov
movsl
ja
test
test
in
fnsave
mov
push
sbb
dec
push
aaa
loope
aaa
inc
mov
test
inc
lahf
fsubr
sbb
pusha
inc
mov
std
test
jbe
sbb
push
jmp
mov
cld
mov
jo
xor
shrl
add
fisubs
and
arpl
dec
dec
jae
insb
cmpsb
push
mulb
mov
iret
testl
out
and
lods
or
inc
sub
pop
and
cmp
movl
jae
cmpb
or
xor
dec
cmp
ret
jg
dec
jmp
in
sub
xchg
add
add
lock
sub
push
repz
clc
std
xlat
mov
sub
lock
out
es
add
mov
dec
call
add
adc
adc
sti
or
pop
loope
icebp
mov
hlt
jg
jl
orb
je
dec
pop
push
cmc
outsb
jne
in
mov
pop
xlat
movsb
add
inc
stc
cld
mov
adc
pop
imul
add
in
xor
cmp
adc
getsec
push
push
fsub
xor
mov
fidivrs
mov
ja
or
movsb
sub
pop
lock
cmp
inc
mov
sub
inc
repz
idivb
or
cltd
jne
and
mov
rclb
mov
clc
jns
ret
out
stc
out
mov
jle
jge
dec
xchg
cmp
xor
hlt
sbb
or
into
aas
or
movsl
pop
xchg
mov
fs
add
adc
subb
int
fdivrl
and
lods
mov
loop
sub
sub
lods
fwait
mov
sbbl
inc
jle
lods
clc
dec
jl
push
shll
gs
lcall
and
psubb
insl
and
stos
out
clc
sub
sbb
cmpsb
pop
jmp
jl
adc
push
test
sub
lods
and
lods
xor
scas
pusha
sub
shll
lods
cmpsl
outsl
and
jno
inc
out
cmp
mov
cmp
fstpt
xchg
xor
fdivl
mov
mov
inc
jg
inc
mov
cmp
pushf
mov
pop
fsubrs
leave
jbe
insl
push
cmp
jnp
into
mov
sub
in
movsb
test
std
pop
adc
mov
cmp
pushf
or
stc
mov
sub
sahf
dec
push
add
icebp
fcomps
sbbl
jl
dec
and
xor
mov
sbb
mov
or
or
loope
jo
aaa
mov
add
cltd
mov
or
adc
out
jge
sub
or
or
mov
inc
test
ss
scas
outsb
iret
push
sub
sbb
and
dec
ss
lea
jbe
sbb
xchg
or
mov
sbb
bnd
fadds
test
incl
out
cmc
mov
adc
dec
mov
out
lods
in
add
mov
mov
addr16
push
xchg
mov
clc
divb
push
cmp
inc
or
insb
and
push
rcll
lock
je
adc
cmp
cmpsl
js
dec
adc
loopne
fsubp
xor
xchg
in
or
mov
popa
stos
pop
and
into
bound
push
test
fsubrp
xor
push
push
and
ret
mov
cmp
jg
ret
adc
fmulp
in
cld
sbb
mov
jno
add
insl
sbb
or
adc
lahf
mov
lahf
adc
int3
ret
dec
inc
shr
ret
sbb
mov
mov
mov
push
cwtl
xchg
cmp
xor
push
seto
pop
mov
insl
pop
mov
lock
mov
iret
shlb
pusha
pop
jle
dec
bound
sub
bound
test
pop
les
in
in
dec
sbb
and
push
and
pop
cmp
add
cmp
fimull
mov
clc
cli
push
adc
push
mov
cmp
mov
test
add
xchg
push
jle
out
xchg
jecxz
sahf
mov
push
ffreep
cmp
out
fistpl
in
jg
mov
mov
xor
dec
lahf
sub
pushl
movsl
add
shll
les
in
jo
add
and
nop
outsl
stos
rorb
das
popa
daa
inc
enter
or
fwait
ds
movsl
xorb
cli
clc
aad
push
xchg
xor
sub
hlt
mov
mov
mov
ret
repnz
xor
fdivl
inc
push
and
sarb
pop
jnp
repz
shll
sub
push
mov
or
mov
jp
clc
dec
sbb
cmp
adc
into
jb,pt
mov
pop
sub
aas
push
pop
inc
xchg
mov
popl
in
mov
fmuls
inc
out
or
aas
mov
sub
mov
sti
out
cmpsb
aam
add
mov
mov
sarb
vprotd
movsb
mov
mov
nop
into
and
loope
aaa
dec
js
inc
sahf
dec
loope
inc
push
add
pushl
fidivs
fnsave
xchg
or
jae
scas
cmc
stos
jmp
dec
inc
pop
ss
mov
into
add
push
bound
or
loopne
ds
or
jns
shll
mov
and
roll
ret
mov
cwtl
rolb
loopne
lock
movsl
jp
std
jl
notl
sbb
movsb
dec
aaa
pop
xor
pushf
rorb
clc
outsl
into
mov
sub
daa
adc
andb
inc
cmp
jne
dec
or
push
mov
push
in
imul
xor
inc
mov
mov
ret
mov
out
jbe
out
dec
lods
mov
fnsave
imul
es
push
lock
lahf
mov
fldcw
sub
mov
dec
pop
push
ret
jne
into
xor
dec
sub
scas
orb
rclb
push
dec
cmp
jmp
addr16
and
andb
xor
inc
mov
das
add
mov
sahf
pop
xchg
pop
push
lret
cmpsl
ja
test
outsb
repz
push
and
ds
iret
lods
add
int3
cld
leave
cmpsl
iret
daa
xor
adc
jmp
data16
shll
mov
je
add
mov
adc
icebp
cmp
arpl
andb
cmpsb
and
cmp
lret
out
outsl
jns
icebp
sub
inc
or
cmp
jecxz
jnp
rol
cmpsb
cs
out
jae
pop
xchg
dec
mov
or
mov
movsb
adc
add
xchg
stc
jb
sbb
mov
or
iret
call
pop
loope
push
sar
or
jnp
ror
mov
daa
jecxz
adc
xchg
xchg
lds
repnz
xor
xor
inc
scas
sub
bound
gs
mov
test
mov
mov
sbb
jno
cmpsl
adc
into
pop
or
call
negb
das
movsl
sub
pop
out
sbb
xchg
adc
daa
in
add
jbe
aad
fistl
pop
scas
dec
push
shll
and
jo
jg
sub
pop
mov
inc
mov
inc
inc
and
scas
ret
psraw
out
sub
dec
xchg
test
pop
mov
xor
dec
fnsave
testb
in
std
xchg
xchg
sarb
add
push
cmp
push
mov
jp
pusha
popa
mov
mov
adc
shlb
scas
mov
cmp
or
jl
ja
test
inc
icebp
les
sub
push
outsl
push
test
jmp
or
lahf
adc
call
dec
mov
rcll
test
cmp
pop
stos
mov
xor
ja
cmp
pop
jns
mov
xor
push
xor
mov
pop
popf
mov
mov
cmp
add
rcll
scas
ret
mov
dec
adcl
mov
dec
jecxz
ret
cmp
sub
cmp
jg
xchg
imul
cmp
push
add
sub
jecxz
inc
jmp
pop
jg
add
data16
xchg
lret
cmp
push
cmp
jbe
mov
shl
sbb
leave
call
test
ror
cmp
call
xchg
nop
js
mov
lds
adc
rol
jo
rcr
je
push
imul
xor
xor
sahf
test
adc
icebp
pop
call
xchg
lods
lahf
push
xchg
xlat
pop
xor
pop
xchg
pop
xchg
daa
add
lods
push
add
js
mov
mov
das
sbb
lods
xchg
lahf
iret
sarb
sub
add
inc
cmp
push
rcrl
insl
lds
xchg
inc
iret
cmp
pop
adcb
repz
dec
sub
mov
scas
ds
push
js
fwait
cmpsb
sub
mov
addr16
cwtl
dec
xchg
add
sbb
sub
jmp
dec
aad
movsl
orb
push
jle
popf
jecxz
into
jg
push
mov
mov
mov
sbb
push
xor
fs
sub
mov
cmpsl
push
cld
pop
js
scas
push
xchg
inc
cli
pushf
stos
pop
out
aad
ss
inc
ret
fcoml
xor
mov
test
sbb
add
mov
xchg
fiaddl
push
push
sbb
mov
push
mov
imul
jne
sub
insb
dec
aaa
imul
push
out
cs
shlb
jge
insb
lods
mov
xor
outsl
jge
stc
hlt
imul
and
cli
pop
pop
int3
dec
outsl
dec
sbb
mov
jns
jae
fucomip
inc
outsl
daa
adc
sbb
or
ljmp
iret
aam
xchg
sahf
enter
repz
mov
lret
pop
bound
push
fsubl
sub
stc
inc
push
clc
out
add
stos
lcall
sub
fucomp
sbb
cmp
pop
jmp
mov
xchg
jns
ds
es
jno
fwait
dec
xchg
leave
fistl
xlat
mov
lods
adc
ds
fs
sbb
gs
jae
call
mov
insl
fisubrl
es
xchg
jecxz
mov
dec
pop
pop
frstor
jle
out
or
cmp
pop
imul
push
cmp
out
aad
aam
decl
movsl
out
jl
out
les
xchg
bound
fwait
add
xchg
cs
jb
inc
ficompl
push
xchg
mov
xchg
mov
cmp
aam
lock
into
jmp
hlt
in
adc
dec
jo
xchg
pop
adc
bound
stos
data16
lods
stos
mov
hlt
ret
dec
and
jle
pop
mov
push
data16
in
test
jmp
xchg
test
sarl
lcall
lret
or
cwtl
or
jno
pop
std
jns
or
es
sub
mov
mov
sub
and
adc
jmp
fimull
imul
mulb
pop
repnz
in
sub
adc
imul
in
sbb
push
testl
les
pop
clc
push
clc
je
and
inc
mov
lret
sahf
sub
in
out
pop
sub
pushf
and
insl
pop
icebp
jbe
push
pop
jno
inc
cmp
fsubrl
xor
notb
cmpl
out
rolb
ljmp
mov
cmp
mov
je,pt
iret
sub
leave
cli
push
adc
sub
stc
cmpsl
or
in
lods
sub
dec
insb
pop
or
cltd
push
push
aad
push
aas
inc
and
push
sbb
into
imulb
scas
dec
imul
sub
pop
or
add
aam
out
in
std
stos
pushw
xchg
push
test
jp
xchg
call
lea
pop
cltd
mov
xchg
inc
outsb
xorl
or
push
push
outsl
cld
test
mov
fsubs
aam
sub
std
mov
jbe
push
repnz
sbb
and
cmp
mov
fildl
shll
adc
aam
xor
popa
cmpsb
into
push
inc
cwtl
lods
jnp
bnd
mov
out
jmp
add
and
inc
mov
dec
add
out
sbb
push
push
popf
adc
bswap
push
jbe
add
mov
aad
xor
jb
lea
mov
pop
imul
hlt
mov
aas
adc
imul
or
stc
xor
dec
and
scas
sbb
in
out
popf
popa
sbb
out
stos
dec
fcoml
mov
jge
call
adc
lea
outsb
xlat
hlt
dec
hlt
shrb
mov
xchg
adc
fcmovnu
stc
dec
ds
xchg
cmp
xorb
or
mov
jecxz
and
orl
cmp
xor
and
jge
cmp
dec
add
sbb
jl
test
sti
push
sub
scas
pushf
mov
xor
loope
xchg
and
mov
mov
lods
out
pop
jl
mov
or
in
mov
sub
add
sbbb
xchg
popa
inc
ds
lea
sahf
int
outsb
push
jbe
jg
imul
push
jecxz
test
out
push
cmp
xchg
inc
fwait
sahf
scas
fstpl
out
mov
mov
jle
adc
sbb
xor
cld
movsbl
jg
adc
les
jl
sarb
rclb
dec
sub
xor
mov
mov
fdivrs
push
pop
lods
jns
add
out
std
cmpsb
mov
in
jne
adc
push
jg
call
je
jae
out
scas
xor
push
lret
lahf
addr16
and
inc
xor
scas
inc
icebp
cltd
imul
push
mov
stos
mov
or
add
les
pop
aad
push
ret
jns
out
loop
rol
mov
sbb
mulb
mov
in
loope
stc
mov
push
sub
sbb
outsl
mov
jno
bound
cmc
aas
pop
jg
push
mov
lea
mov
dec
test
mov
enter
popf
sub
loop
lock
fadd
negl
and
or
jl
lds
pop
sbb
ljmp
cmc
cmc
test
mov
scas
and
in
js
in
cmpsl
mov
and
add
jle
fidivs
pop
mov
jno
fsubs
popw
sbb
scas
out
mov
jae
dec
iret
stc
sbb
and
into
jno
push
mov
ds
sub
xlat
add
cltd
cld
test
push
adc
xchg
or
roll
push
test
in
cmp
sub
inc
cld
mov
push
enter
pop
jl
sbb
adc
fcmove
xchg
sarb
jae
mov
lods
inc
lods
ds
sub
xor
leave
pop
xor
mov
push
int
std
dec
sbb
mov
mov
pop
push
push
jl
pop
inc
cwtl
imul
and
shlb
je
mov
out
dec
xchg
in
lret
sub
std
leave
repnz
inc
fsubl
jo
jmp
rcll
test
xchg
and
andb
pop
mov
roll
js
add
inc
cli
pop
push
adc
cmp
mov
inc
mov
pop
daa
dec
mov
loopne
arpl
sbb
into
push
xor
jl
xchg
fcompl
or
dec
filds
or
sub
pop
lcall
loopne
bound
sti
repz
or
mov
jno
push
push
sub
mov
insl
jl
push
hlt
push
pop
jae
pop
pop
pop
ljmp
fimull
insb
mov
addr16
outsl
inc
push
xlat
mov
mov
in
out
inc
cs
insb
pop
jo
incb
push
test
lcall
xor
cmp
faddp
mov
outsl
movsb
dec
sbb
mov
in
dec
ret
aaa
clc
stc
popaw
adc
cmp
ja
fst
inc
stos
mov
push
adc
pop
hlt
inc
test
mov
dec
pop
or
jle
int3
inc
mov
xor
addb
mov
add
mov
xchg
pop
or
jne
sar
jne
ss
fbld
fcoml
mov
push
sbb
iret
push
jmp
pop
dec
cs
in
xor
add
gs
mov
jmp
lods
pop
jns
inc
or
test
imul
rcll
cltd
dec
jecxz
call
adc
popf
inc
and
int
add
stos
xor
sbb
or
repnz
stos
out
mov
xorb
out
test
mov
aam
xor
pusha
mov
xor
mov
sub
jg
dec
cmp
outsb
stc
mov
mov
dec
mov
lret
mov
mov
insl
shrb
jg
xor
sbb
test
loop
scas
jecxz
loop
mov
arpl
lcall
add
jb
jmp
insl
cld
inc
sbb
mov
mov
cmp
or
shlb
jp,pt
jbe
popa
pop
mov
or
adc
imul
pusha
sbb
sub
popa
sahf
or
mov
stc
out
add
ljmp
test
fstps
adc
mov
dec
imul
pusha
ljmp
jnp
sbb
push
out
lahf
mov
jecxz
cs
addb
mov
hlt
sar
mov
pop
int3
jl
push
into
xchg
sti
mov
sbb
push
leave
xchg
ds
dec
neg
out
and
or
pop
jp
and
and
inc
or
je
in
out
adc
adc
test
pop
jbe
int3
xor
fnstcw
mov
mov
shll
pop
stos
xor
mov
xor
lods
fsubl
outsb
pop
or
push
xchg
lods
and
sbb
lods
shll
pop
push
and
and
or
insl
cmp
notl
pop
insb
stos
sbb
lahf
mov
inc
dec
bound
inc
and
and
xor
je
push
cmpl
sbb
jbe
sbb
dec
jns
push
jbe
cmpsl
mov
add
ja
imul
test
filds
sbb
das
mov
sbb
stos
test
mov
mov
outsb
pop
xchg
cld
jne
or
mov
pop
cmp
pop
jno
nop
jo
fmuls
hlt
outsb
xchg
jns
sub
xchg
and
out
in
popa
dec
jle
sub
dec
lret
xchg
mov
or
adcb
mov
lcall
out
cmp
dec
jg
add
xchg
cmp
or
mov
les
test
xadd
mov
inc
mov
je
popa
jge
dec
loopne
sbb
aas
adc
enter
jge
stc
ljmp
or
fisubrs
pop
jno
push
insl
or
int3
mov
shl
test
cmc
cmp
fwait
mov
xor
into
inc
or
xor
and
dec
push
inc
push
lea
mov
mov
loope
mov
repnz
hlt
cmp
push
imul
stos
add
xor
xchg
rclb
ret
scas
xor
and
outsl
adc
push
push
mov
sub
andl
inc
dec
fst
add
jle
xor
sub
jnp
push
ja
sti
scas
int3
dec
mov
andl
mov
push
xchg
cmpsb
pop
cwtl
repz
loope
pop
mov
loope
jmp
cmp
iret
mov
stc
clc
mov
adc
and
pop
je
inc
dec
out
stc
sahf
push
mov
aam
imul
jns
mov
jecxz
mov
pop
inc
fidivrs
daa
lcall
dec
mov
dec
and
push
cltd
adc
outsb
pop
ret
test
gs
push
fcompl
mov
sbb
add
imul
xor
push
or
ljmp
stos
fimuls
scas
cld
cmp
testb
in
mov
push
mov
cmp
stos
scas
das
add
in
inc
dec
pop
jo
adc
std
test
imul
ljmp
push
stc
es
loop
fs
loope
mov
xor
addb
and
inc
pushf
dec
pop
bound
xchg
ds
inc
jne
mov
fsubl
nop
sbb
std
pop
push
xor
sti
loopne
mov
cmpsb
test
aam
jno
popw
test
push
pusha
sbb
push
test
stos
dec
std
cwtl
jge
insl
cmp
lahf
bnd
popf
incb
sub
sub
aam
push
in
fwait
std
and
xchg
divb
mov
or
adc
cmp
jecxz
call
cmp
sbb
jmp
push
jne
jmp
js
xor
jle
cmpsl
imul
push
aas
adc
push
shll
jmp
movsb
fwait
mov
std
outsb
cld
mov
xchg
test
lea
test
test
and
lea
sub
lea
and
outsl
xchg
adc
scas
into
inc
pop
sub
xchg
inc
mov
addr16
xchg
cmpsl
sahf
clc
into
outsl
cmp
arpl
or
outsl
jo
jg
push
pusha
mov
add
xchg
mov
movntq
pop
jne
pop
or
xchg
pop
jmp
cwtl
xchg
xor
test
adc
mov
jp
or
add
and
out
pop
mov
push
fnstcw
sub
movsl
pusha
incl
jle
imul
push
push
jg
sub
rcr
mov
sbb
test
pop
shll
add
sbb
stc
jns
pop
cmpsb
jecxz
cmp
and
jmp
push
pushf
test
lock
dec
adc
test
cld
js
out
fnstenv
mov
jo
hlt
insl
movsl
add
pop
icebp
push
stos
inc
sbb
gs
or
outsb
xchg
mov
inc
js
js
xchg
pop
adc
jb
xchg
test
jno
add
sarb
jnp
sub
dec
cs
sbb
xchg
inc
cmp
aam
or
outsl
add
sub
lea
and
out
gs
mov
mov
mov
cmc
orl
dec
adc
sbb
push
outsl
roll
jb
jge
jo
dec
rorl
sbb
and
push
pop
pop
and
sub
shll
rcrb
hlt
ss
adc
outsb
adcl
clc
loopne
insb
subl
pop
fildll
fcomps
into
into
insb
xchg
inc
lret
loop
movsb
push
sub
sub
xchg
push
test
inc
mov
xor
out
pushf
mov
stos
and
dec
mov
ja
jne
ds
mov
mov
call
enter
movsl
shrb
aaa
or
ljmp
mov
in
inc
lea
test
fsubl
mov
or
sub
mov
adc
rorl
mov
adc
iret
out
mov
pop
pop
lahf
shlb
in
shrb
mov
cwtl
add
test
stos
out
jmp
pop
push
and
xchg
pop
push
out
ret
data16
xchg
dec
cmp
sbb
push
jmp
inc
pop
out
xlat
iret
bound
cmp
pop
add
test
xchg
pop
adc
pop
js
mov
loope
add
mov
jnp
jne
lea
jp
std
push
jmp
loopne
dec
cmpsb
pop
jne
int3
ficomps
push
andl
gs
inc
adc
sbb
cmp
or
aam
mov
addr16
xor
test
inc
nop
loopne
jmp
mov
or
sub
dec
push
ficoml
call
pop
fstpt
and
hlt
pop
lds
jns
cli
mov
cmc
shr
dec
shl
push
mov
pop
stos
jno
nop
and
enter
mov
sbb
ja
add
out
call
repnz
fstps
mov
sub
xor
and
or
pop
shlb
pop
js
cmpb
jge
add
out
cmp
inc
pop
movsb
sbb
jo
jno
out
and
enter
xchg
aam
into
mov
mov
cmp
out
adcl
cmp
sub
out
pusha
insb
xor
icebp
xor
mov
out
mov
mov
roll
cmp
sbb
pop
aad
mov
out
sub
sbb
push
fidivs
mov
test
add
and
sub
or
sub
mov
jae
inc
shll
jo
cmp
rcl
repz
inc
push
xchg
loop
into
fistl
out
adc
mov
sbb
adc
loopne
mov
mov
or
lahf
and
lahf
insb
push
cltd
nop
pop
data16
adc
stc
clc
in
sti
push
dec
pop
sahf
lahf
inc
jae
xchg
or
mov
repz
add
mov
iret
pop
in
xlat
int3
pop
xchg
rcll
sub
cmp
lcall
add
inc
mov
rolb
push
sahf
mov
cmpsl
call
push
mov
mov
in
mov
jle
jns
cmpsl
cwtl
stc
cmp
mov
in
mov
and
xchg
jecxz
clc
and
inc
jne
push
and
add
sub
lea
mov
push
ljmp
popf
cmp
or
out
pushf
pop
dec
pop
negb
les
in
imul
mov
mov
and
mov
pusha
dec
and
sbb
repnz
div
outsb
int
xchg
sbb
jo
ret
je
sub
or
xor
adc
movsb
lcall
sub
adc
adc
sub
idivl
xor
das
mov
dec
sub
leave
hlt
jne
insb
mov
push
insl
pusha
loope
lret
mov
out
pop
popa
adc
mov
xor
out
dec
cwtl
test
popa
fsubl
sub
jge
and
loope
cmpsb
cmpsl
shrl
xchg
das
shll
cltd
movsb
fistl
jp
push
push
jmp
scas
icebp
mov
xor
insb
jmp
ret
mov
xor
arpl
jp
popa
lcall
ljmp
aad
and
mov
mov
pop
insb
xchg
jmp
cmp
adc
push
mov
xchg
insb
xchg
push
mov
and
pop
adc
dec
idivb
xchg
loope
xor
fbld
sti
mov
jecxz
ror
movsl
push
aas
shrl
addl
mov
push
repz
pop
clc
inc
xchg
mov
pusha
push
pop
imul
fs
dec
aaa
rol
jae
pop
aaa
and
push
pop
lret
pop
std
and
push
and
mov
inc
sbb
add
jo
mov
add
push
mov
js
pusha
outsl
enter
and
sbb
outsl
and
mov
lahf
jp
or
fists
jns
scas
jg
xchg
imul
sub
cmpsl
or
leave
add
out
sti
pop
in
fistl
sub
jmp
in
pushf
inc
pop
push
mov
aaa
imul
adc
pop
aam
out
adc
dec
cs
or
pop
and
std
icebp
addl
inc
mov
xor
dec
rcll
sbb
push
push
pop
jecxz
sub
cli
and
fists
cmp
jno
mov
sbb
ror
and
push
mov
jbe
std
push
add
and
gs
fistps
inc
adcl
push
andl
fst
dec
add
loopne
imul
mov
inc
or
push
std
push
adc
fwait
aas
mov
sbb
mov
cmp
fmul
jo
les
andb
pop
cs
jb
mov
in
or
imul
negb
mov
xor
mov
dec
dec
dec
cmp
outsl
sbb
int3
xchg
sub
xchg
xchg
or
out
out
mov
inc
loopne
adc
cmp
dec
fadds
sbb
jmp
inc
outsb
push
xchg
xchg
dec
pop
dec
xchg
push
or
pop
shll
adc
je
out
jno
push
movsb
mov
inc
xchg
xlat
loope
nop
fisubl
xor
mov
push
mov
jmp
dec
popf
mov
add
fcompl
in
push
int3
push
cmp
xchg
cmp
hlt
outsl
aas
es
push
imul
cmovge
and
ja
mov
mov
dec
jp
sub
ret
mov
adc
push
lcall
mov
shl
out
mov
adc
cmc
sbb
decb
mov
mov
push
aaa
xlat
in
movsl
adc
in
pop
repz
addr16
test
push
out
popf
rcll
fs
std
push
adcb
outsl
jno
bsr
xor
adc
loopne
iret
jmp
shlb
and
or
sub
popa
in
push
lret
clc
hlt
cmp
nop
or
stos
cmpb
rsqrtps
dec
mov
xchg
mov
lea
mov
push
jle
jl
push
das
insl
shr
ret
popf
xor
rorl
xchg
jle
push
xchg
mov
adc
inc
inc
xchg
push
dec
cmp
outsb
test
pop
insb
shl
negl
pop
stos
lods
ret
lret
out
gs
aas
outsl
aad
loop
xor
leave
jmp
mov
dec
ffreep
jae
mov
mov
mov
xchg
pop
sub
iret
sub
sbb
cmpsl
push
test
push
out
fldt
pop
es
pop
mov
xchg
repz
ss
lret
xor
sbb
imul
push
mov
ret
push
pop
out
scas
lock
push
jnp
lock
adc
pop
hlt
popa
jo
pop
sbb
dec
negb
xor
mov
fsts
jns
ja
dec
dec
mov
add
scas
and
imul
dec
jp
into
dec
jo
or
mov
inc
push
into
xor
mov
dec
sbb
lock
in
lock
jae
ljmp
push
inc
sub
test
xchg
cmp
aad
inc
or
mov
out
xchg
adcl
pop
push
or
out
push
ficompl
xlat
push
leave
mov
imul
pop
lea
movsb
jb
or
mov
addb
iret
pop
sub
sbb
mov
pusha
mov
cli
or
mov
sub
mov
adc
leave
std
cmp
sbb
xchg
pop
cmp
bound
add
movb
mov
mov
addb
mov
xchg
and
mov
lock
sbbb
pop
mov
jo
mov
push
push
adc
push
lock
jo
xchg
repnz
outsb
push
cmp
popf
jno
mov
lds
inc
frstor
or
int
dec
cmp
test
outsb
ljmp
add
push
cmp
orl
out
pop
mov
pusha
mov
das
test
xlat
xchg
add
repz
and
popf
add
add
mov
bound
mov
test
or
jecxz
push
gs
push
inc
inc
mov
xchg
aam
push
js
ljmp
ret
packsswb
addr16
sub
imul
sub
shrb
dec
mov
loope
mov
cmpsl
push
loop
les
rcr
mov
xor
cmc
inc
stos
cs
insl
cli
push
adc
out
popa
fstpt
cmp
es
fs
je
xchg
test
mov
and
repz
ds
mov
pop
mov
ljmp
sub
fs
or
cmpsl
or
aas
inc
mov
jmp
sub
pop
push
adc
mov
mov
adcb
cmp
xor
xor
lock
movsl
ret
pop
or
add
fldt
subl
negl
out
repz
lsl
mov
push
ds
add
cmc
pop
xor
into
insl
jl
jl
movsl
aaa
mov
icebp
leave
pop
out
dec
add
rcl
push
clc
aam
lcall
inc
outsl
cmpsl
inc
outsb
xchg
sti
xor
stc
aad
or
mov
daa
mov
test
cmp
adc
push
and
lods
es
pop
aaa
aas
dec
jle
xlat
pop
mov
cld
leave
jne
xchg
jg
mov
jo
stos
das
imul
stos
popf
sub
outsl
xor
mov
sti
test
pop
inc
popf
popaw
push
mov
sbb
xor
jbe
pop
dec
mull
push
mov
stc
test
sbb
jp
xchg
in
inc
lahf
in
cwtl
add
ret
aas
add
out
jbe,pn
xchg
dec
pop
adc
sub
movsw
or
lret
inc
gs
sub
stos
int3
out
test
sbb
ja
dec
sub
inc
pusha
movsb
in
push
mov
daa
js
cwtl
js
mov
mov
cmp
fs
mov
push
fbld
pushf
les
jecxz
mov
pop
fstpt
or
push
movsl
int3
push
nop
jae
xchg
push
inc
daa
repz
out
outsb
xchg
shll
jae
pop
xor
mov
sbb
pop
or
mov
loope
rorb
and
mov
xchg
sub
loope
jg
cmp
jl
cs
testb
dec
pusha
jmp
dec
jg
jmp
jns
bound
push
mov
jecxz
flds
mov
xchg
aad
mov
sbb
sub
dec
fnsave
mov
mov
and
ljmp
push
adc
push
pop
arpl
outsb
jge
push
movsb
repnz
lcall
mov
push
andl
or
outsl
ja,pn
inc
jge
bound
shl
jno,pn
daa
xor
cwtl
lock
jle
loope
int
push
dec
insl
jp
rcrl
jne
jmp
iret
lods
sub
dec
dec
enter
rcll
pop
aam
lods
lret
add
lcall
popa
jg
mov
sbb
sbb
push
jno
cwtl
sub
fstpt
add
sbb
fstps
imul
das
hlt
iret
push
sahf
nop
sahf
jo
sub
filds
cmp
bound
in
ss
movsb
push
mov
loopne
popl
mov
xchg
iret
mov
push
mov
push
or
xchg
out
fmull
or
sub
add
mov
push
jecxz
js
ror
cmpsl
scas
push
and
add
push
mov
mov
adc
dec
les
cmp
pop
sub
rol
push
loopne
jo
sub
or
imul
leave
push
pusha
es
mov
inc
pop
mov
mov
into
or
loope
inc
cmpsb
xor
nop
pop
xor
das
repnz
repz
dec
fldt
jge
rcll
dec
mov
jmp
sub
cmp
and
push
fwait
add
adc
add
les
mov
into
lods
pop
test
pop
push
jno
addr16
pushf
cltd
dec
rcll
rdpmc
or
lret
in
mov
mov
in
into
subl
or
iret
fdivrl
cltd
push
add
mov
and
and
cwtl
and
mov
dec
mov
divl
aaa
stos
leave
dec
scas
popf
pop
inc
xchg
test
mov
mov
push
jge
rcrl
loopne
mov
xchg
fscale
push
xorl
jne
leave
mov
rcll
aam
fmul
pop
jp
jns
add
cmp
mov
sub
and
xchg
mov
dec
jo
and
dec
outsl
or
fcoms
repz
xor
divl
rorb
cmp
lea
cmp
cmc
jp,pt
pop
inc
and
cmp
sub
pop
cmp
lahf
mov
or
cmp
xor
stos
mov
pop
clc
ret
sub
dec
pop
jge
scas
outsb
inc
mov
repnz
not
cmp
or
fdivrs
xor
fdivs
into
std
mov
cmp
and
mov
xlat
bnd
outsb
je
ja
add
loope
dec
jp
mov
rcrb
fildl
je
ret
lea
pop
jb
fisttps
mov
aas
ret
mov
push
mov
sbb
adc
xchg
div
iret
loopne
scas
dec
idivb
std
dec
xor
dec
lock
test
xchg
pushf
mov
arpl
popf
sub
jmp
cwtl
adc
xchg
inc
das
ss
pop
and
mov
cwtl
cmp
sbb
add
lret
aad
or
push
jae
imul
pop
inc
movsb
pop
pop
adc
insl
pop
sbb
lahf
or
faddl
sub
and
enter
fs
inc
inc
pop
mov
ret
jecxz
sbb
sbb
xchg
mov
mov
fdivrl
orb
sbb
test
jge
js
shr
mov
ss
je
scas
push
pop
scas
xchg
enter
cmpsb
mov
sbb
xlat
mov
rcrl
jbe
dec
aam
cmc
pusha
jge
sbb
outsl
arpl
sahf
xchg
mov
xor
ret
cmp
sub
loop
jl
into
fldcw
repz
nop
insl
mov
dec
cmpsl
popa
ja
repnz
sbb
and
fiaddl
hlt
lret
or
ja
rcll
cld
cmpsl
shrb
mov
jno
sbb
and
sub
cmpsb
sahf
xchg
jnp
jge
sub
jge
push
sbbl
divb
add
add
push
jp
inc
fwait
aas
dec
in
ss
lock
inc
addr16
out
outsl
jb
sbb
jmp
insl
pusha
fwait
inc
push
inc
mov
adc
int
scas
xor
inc
out
pop
xor
mov
xor
lcall
repnz
outsl
popf
add
stos
pop
dec
cmp
loop
mov
pop
push
inc
sbb
jns
leave
divl
sub
test
out
aas
bound
daa
push
addb
pop
jne
inc
popf
adc
inc
push
repnz
fadds
notb
lea
xchg
pop
inc
pop
imul
jmp
loop
mov
mov
sub
cwtl
arpl
arpl
movsl
js
cltd
inc
sub
add
xlat
mov
aam
adc
jae
xchg
pop
ja
push
mov
ljmp
test
mov
movsl
cld
mov
por
aad
lea
cld
jl
outsl
repz
adc
in
out
ret
sahf
cli
mov
cmp
xor
ds
add
mov
jnp
aaa
in
pop
in
push
mov
dec
cwtl
fldl
xor
popf
inc
test
xchg
push
add
arpl
ret
cmc
sub
sbb
add
mov
mov
add
cli
fnstcw
in
and
rolb
icebp
mov
sub
lret
in
add
xorb
and
mov
scas
cmp
adc
and
rorb
mov
mov
stos
sahf
add
data16
inc
adc
jbe
imul
cltd
cmp
xlat
je
push
jnp
and
mov
cmpsl
imul
insl
dec
repnz
fistl
xor
pop
mov
std
ss
dec
lret
cltd
cmpsb
dec
pop
mov
cmp
enter
or
fisttpll
arpl
or
pop
shrl
outsl
mov
clc
movsb
dec
movb
hlt
add
dec
pop
add
or
push
inc
adc
push
mov
sbb
lret
leave
imul
ljmp
mov
aam
and
dec
dec
in
in
dec
pop
into
xlat
into
mov
cwtl
shrl
loopne
shll
mov
int
sbb
mov
mov
or
lret
adc
subl
and
shl
inc
xchg
test
dec
rcrb
sub
enter
popl
shll
call
mov
outsl
pop
idivb
cld
shl
out
out
jo
ret
in
sahf
imul
adc
stc
xchg
ds
jecxz
out
sbb
js
aaa
icebp
imulb
adc
test
jbe
cmp
js
jge
mov
jns
jno
out
inc
cmpsl
cmpsl
add
inc
std
mov
lea
sbb
cld
pop
cmp
jp
aam
xchg
hlt
sub
dec
and
pushf
cmp
adc
pop
repnz
pop
inc
out
dec
xchg
add
mov
inc
cmp
mov
pop
mov
fsubrl
jl
aas
icebp
out
mov
push
sbb
push
dec
push
addr16
aam
sub
loop
push
push
lds
sbb
xor
sbb
xor
sbb
mov
popa
insl
scas
ja
xchg
fldt
stos
sub
mov
fdiv
ret
psllq
add
push
sbb
shl
bound
ss
push
mov
push
inc
xchg
xor
xlat
mov
push
xchg
stos
jecxz
mov
hlt
xchg
push
jnp
push
cs
rol
inc
xor
iret
or
mov
gs
xor
ret
jg
mov
pop
mov
push
push
add
xchg
movsb
cmpsb
and
imul
insb
fs
stos
cmove
mov
popf
rorb
sbb
js
mov
std
hlt
aad
cld
xchg
mov
outsb
jecxz
jae
xchg
lods
xor
clc
sti
adc
mov
pop
xchg
or
outsl
mov
jae,pt
test
mov
lret
and
ss
jg
and
inc
xchg
push
sti
adc
out
pop
push
xor
jge
sti
movsl
add
sub
mov
lret
inc
js
xlat
scas
pop
fiaddl
jns
cmp
adc
enter
dec
popa
scas
inc
lods
jp
mov
xchg
mov
mov
test
mov
mov
insb
push
sahf
jnp
out
xor
lock
inc
pop
nop
icebp
xor
loopne
mov
push
call
jns
cmpsb
fimuls
inc
cmpb
mov
gs
xchg
push
inc
mov
lret
mov
loope
add
xor
inc
cmpsl
cltd
fs
cmp
pop
lock
dec
arpl
or
mov
lret
out
fsubl
mov
inc
add
inc
js
roll
lods
addr16
xlat
daa
inc
fdivrp
sub
lods
mov
and
ret
pushf
mov
and
sarl
addr16
jmp
cli
stos
inc
add
or
lods
xor
mov
and
sub
cmp
pop
mov
pop
iret
mov
dec
mov
mov
test
fsubrs
movsb
cmp
pop
sub
mov
mov
pop
pop
je
sti
cli
mov
inc
dec
push
insl
bound
sbbb
add
mov
cwtl
leave
rcrl
lds
mov
out
shll
and
fiaddl
fnstcw
in
daa
cltd
mov
push
popa
mov
out
mov
sub
jge
popa
int3
push
and
sub
mov
and
std
daa
mov
inc
push
push
in
add
pop
xor
add
dec
xchg
xchg
imul
cli
mov
jge
pop
ret
push
cmpsb
xor
and
ret
pcmpeqd
outsl
test
imul
ss
in
pop
movsb
loop
xlat
and
clc
inc
ds
push
dec
mov
into
sub
call
mov
sub
fs
testl
and
pop
xchg
mov
sbb
fwait
cmp
sub
jne
bound
jmp
cld
fcmovu
dec
loope
outsl
rclb
add
cld
fsubl
lds
les
jle
shlb
fldenv
aad
sti
xchg
jb
enter
adc
sahf
jo
sti
clc
jmp
xchg
dec
das
lods
xor
xor
xor
xchg
enter
mov
adc
cs
je
pop
xchg
lcall
mov
xchg
nop
lea
sbb
push
adc
outsl
and
das
xor
add
sub
shlb
inc
std
cwtl
cs
sbb
aad
add
shl
movl
adc
inc
ss
xchg
outsl
je
int
sbbl
in
cmp
es
dec
lea
loop
in
repz
data16
ret
push
sbb
add
cmp
shll
jmp
push
in
or
fdivp
lds
aaa
push
and
add
sbb
mov
pop
cmp
lret
gs
dec
in
daa
mov
add
cmp
xor
out
aas
rol
mov
sub
add
scas
sbb
fwait
les
fcmovnbe
pop
or
push
inc
sbbb
push
inc
lret
ret
xchg
jecxz,pt
cltd
call
fwait
ljmp
test
sbb
sbb
dec
add
mov
pop
cmpsb
and
les
and
fcmovne
out
lea
cwtl
xor
dec
orb
pop
mov
fxam
imul
dec
das
xchg
movsl
xor
xor
aad
jg
out
in
cli
add
pushf
rorb
cmp
ret
and
loop
das
add
cmc
cmp
push
movsb
xlat
out
xchg
and
sub
add
dec
xlat
cmpl
jns
jmp
lret
mov
push
push
notb
push
inc
push
xor
arpl
popf
mov
mov
mov
pop
lret
mov
leave
jecxz
shlb
push
push
test
loop
mov
lcall
ret
jns
mov
mov
dec
mov
sarl
stc
int3
movsl
hlt
out
cmpsl
xor
or
inc
mov
xlat
out
xor
sti
cmpsl
icebp
push
nop
mov
mov
daa
int
out
xchg
mov
out
pop
hlt
push
adc
int3
add
mov
jnp
nop
and
cmp
sub
call
jae
addl
out
add
and
mov
mov
stos
push
add
jl
lods
push
sub
pop
iret
push
loope
ss
mov
sbb
cmp
cmc
pop
jns
pop
ljmp
xchg
dec
cltd
movsl
repz
lret
rcl
movsb
popa
push
push
xchg
int
cmp
jae
push
add
push
mov
out
xchg
sub
icebp
ret
xor
hlt
mov
insl
rol
adc
xor
sarl
rolb
ret
out
mov
push
cmpsl
gs
stc
lcall
xchg
jno
les
repnz
mov
mov
testb
lds
xchg
push
outsb
jge
cmc
aad
aam
xor
dec
sub
fsubs
lds
int
add
stos
cmpb
dec
mov
xchg
cmp
jns
push
movsl
loopne
and
xchg
shrb
cmp
adc
push
cmp
shll
cmpsl
jg
fildl
imul
mov
xchg
loope
ret
xlat
push
mov
mov
jl
movsb
xor
cmp
cmp
push
jo
jmp
adc
mov
push
cld
es
and
dec
jmp
cmc
mov
push
cmp
cltd
out
jp
xor
inc
jp
push
jnp
loop
xor
mov
test
lds
pushf
les
xchg
sbb
jb
push
xchg
mov
adc
xor
xor
sarb
jl
adc
jns
subl
adc
push
xlat
call
mov
repz
jp
repz
adc
jns
push
into
sub
hlt
shrb
dec
mov
xchg
nop
mov
cs
xchg
fildll
divl
mov
mov
cmp
mov
insb
push
and
repnz
inc
rcrb
jnp
leave
aaa
xchg
xchg
cmp
add
lcall
fwait
jp
sahf
sarl
dec
imul
mov
mov
cltd
rcrb
and
outsb
pop
out
pop
pushf
into
cwtl
inc
ljmp
cmp
push
push
dec
mov
cmp
mov
shll
fstps
sbb
cmp
push
movsb
pushf
lret
aaa
lahf
dec
daa
cmc
ss
sbb
inc
cld
pop
xor
lds
jecxz
pushf
mov
xchg
ret
adc
and
xlat
lock
dec
dec
adc
paddusb
mov
test
add
cmp
jne
rol
xor
adcb
pop
fiaddl
les
inc
xchg
popa
mov
inc
inc
imul
adcb
lcall
jmp
lea
pop
inc
xor
mov
add
popa
scas
fs
mov
test
popf
movl
add
jbe
imul
and
xchg
mov
repnz
xor
test
bound
out
out
or
out
call
loopne
jl
mov
xor
xchg
vpsubsw
xchg
ljmp
xchg
cld
aad
test
icebp
das
rcll
mov
add
stc
mov
mov
mov
mov
fisubrs
xor
data16
xor
fs
add
mov
addr16
inc
add
push
into
or
sti
jmp
inc
push
mov
mov
sbb
xchg
mov
rcr
and
sub
xchg
adc
pop
cltd
sbb
fldt
stos
mov
xchg
dec
pushf
loopne
adcb
adc
subl
rclb
out
aam
test
gs
pushf
pop
aas
sbb
dec
push
in
mov
leave
adc
loop
aas
insb
shl
fcmovne
inc
sub
sub
aad
push
push
cmp
js
std
andl
mov
xor
mov
or
cmp
rol
outsl
addr16
ret
outsb
mov
shl
fists
xor
loop
mov
push
rcl
mov
jg
mov
dec
jp
pop
or
test
cwtl
cs
mov
cmp
ljmp
jnp
lods
xor
das
push
adc
lock
dec
mov
pusha
ret
div
inc
in
test
adc
cmp
test
xor
jae
mov
or
and
sbb
lret
cmp
inc
jp
mov
aam
sub
adc
loop
pop
idivb
push
add
cs
mov
insb
xchg
adcl
dec
ds
jl
sub
fbstp
inc
jb
frstor
jmp
lods
scas
in
xor
shll
clc
xchg
jge
jne
xchg
jns
inc
daa
insl
mov
loopne
mov
adc
xchg
test
les
rcll
fprem
lret
ret
movsl
dec
push
sub
int
loope
mov
adcb
mov
mov
insb
or
int
mov
insl
pop
mov
mov
sti
ds
test
in
daa
mov
cmpsl
lods
mov
out
xchg
arpl
mov
lret
faddl
pop
pusha
lods
mov
lods
xchg
pop
mov
sub
imul
faddl
adc
sub
imulb
dec
adc
xchg
push
pop
pushf
adc
pop
pop
add
addr16
scas
out
mov
std
sub
fucomip
jl
mov
or
pop
inc
and
mov
cli
roll
lret
mov
icebp
fwait
lods
pop
push
andb
repnz
shll
ret
xchg
sbb
popa
inc
fldl
fstps
dec
das
cmp
andl
or
daa
and
dec
cltd
mov
ficoms
sub
cmp
rorb
pop
push
or
data16
repnz
rol
call
push
and
nop
lret
rcr
les
xchg
mov
cmp
inc
movsb
inc
psadbw
test
mov
adc
int
ja
mov
cs
rolb
aam
les
jae
cmp
leave
int
xchg
jae
lods
mov
pop
fmul
lret
cmpsb
adc
aas
stc
or
out
ficoml
push
cmp
and
and
shll
je
xor
je
jnp
aad
pusha
adc
or
cmp
inc
mov
cld
push
sbb
mov
ficoms
jle
xchg
scas
aad
inc
in
inc
pop
dec
push
loopne
mov
int
pop
adc
xor
fs
push
insb
movsb
or
idivl
inc
sub
out
push
subl
addr16
sbb
outsl
ret
das
shlb
insb
popa
movsb
mov
shr
xchg
add
sbb
lret
pop
xor
adc
xchg
xor
or
insl
push
sub
mov
push
sbb
cli
dec
and
xchg
bound
stc
jae
ja
mov
jecxz
icebp
fwait
les
push
inc
and
or
testb
cmp
ljmp
iret
add
sahf
jecxz
mov
pop
pop
inc
xchg
fwait
jmp
out
push
mov
js
mov
inc
aas
add
popl
ficompl
xchg
outsl
mov
dec
sbb
mov
and
adc
sbb
pop
mov
push
jmp
rcpps
cmp
jae
jb
in
lods
xchg
stc
sub
subb
in
imul
daa
int
scas
aas
sbb
fisubs
stos
pop
inc
repnz
daa
push
jae
sub
xlat
jno
inc
pop
sub
or
pop
jp
push
xchg
cmp
fxch
adc
sub
dec
add
outsl
xchg
jecxz
sbb
int
test
mul
mov
sub
insb
jge
cltd
lret
mov
inc
mov
cmp
iret
sahf
popf
add
movsl
mov
xchg
ficoms
adc
pop
aad
lret
ret
xchg
inc
sahf
sbb
sarl
fiadds
ja
sub
and
sbb
outsl
popf
xor
lret
cmpsl
sub
stc
push
jae
out
mov
icebp
mov
lds
lahf
jl
notb
xchg
adc
in
sti
das
in
xor
sbb
fwait
cmp
pop
xor
cmp
ljmp
sub
mov
push
nop
pop
sbb
sbb
adc
insb
stc
mov
lcall
cs
fnstenv
jnp
push
adc
lret
ja
mov
into
ret
xchg
stos
cmpsb
jne
or
repnz
push
lahf
or
call
fbstp
in
in
ds
loopne
arpl
mov
popa
sub
jp
jecxz
test
fadds
mov
inc
mov
inc
insl
addr16
insl
sub
add
out
jl
cmc
sbb
insb
lods
shr
scas
sarl
sub
sahf
int
scas
cltd
out
lcall
lods
in
adcl
pusha
push
mov
jecxz
fucom
xchg
repz
xor
inc
or
orb
fcoms
mov
notl
insl
jecxz
sbb
or
dec
ret
mov
dec
mov
hlt
test
testb
jl
repnz
icebp
test
add
lahf
ss
xchg
cmpb
rolb
popa
xor
mov
cmp
call
xor
push
mov
fwait
int
dec
repz
mul
xchg
fwait
mov
jp
mov
push
sub
push
in
xchg
inc
test
inc
outsl
jp
push
or
or
inc
inc
imul
fisubl
iret
loopne
mov
and
cmc
fisttpl
jnp
adc
xchg
jns
mov
fcomip
xchg
fnstcw
loopne
adc
push
insb
and
mov
in
pop
nop
dec
xchg
bound
cltd
or
jmp
loope
mov
xchg
test
jecxz
pop
stc
ret
xor
or
call
fwait
pusha
lahf
inc
sti
in
mov
scas
rcll
stos
add
movb
add
test
dec
and
fs
mov
jge
push
int
mov
adc
push
mov
icebp
in
jl
mov
pop
in
fdivs
cmp
pop
inc
mov
mov
shrl
adc
and
mov
mov
std
bswap
or
shll
inc
unpcklps
enter
pop
enter
cmp
lret
in
cltd
jle
jp
xchg
mov
jno
fisubrs
clc
mov
push
sahf
test
js
shlb
push
mov
loope
pandn
cmp
loopne
jae
popf
je
rcrb
pusha
or
sbb
push
aam
push
mov
int3
out
xchg
add
dec
add
jns
and
mov
out
clc
or
addr16
je
nop
and
jecxz
sbb
xchg
push
jns
stos
cmp
mov
sbb
mov
sbbl
xor
fwait
aas
sar
movsb
and
idivl
mov
addl
cmpsb
push
outsb
pop
and
stc
es
mov
repz
pop
xor
pop
lcall
dec
lret
jno
jns
dec
mov
fldcw
je
mov
push
cmc
leave
ret
lds
rcll
outsb
sbb
lock
jb
sbb
push
xor
adc
nop
lahf
test
jbe
mov
adc
stos
pop
or
xchg
xchg
out
shrl
dec
sarl
and
push
lahf
and
push
mov
ret
and
ss
xchg
add
dec
dec
pop
insl
mov
adc
add
cmp
cmp
mov
leave
pop
data16
test
sbb
adc
in
ret
movsb
pushf
lods
inc
jae
and
xchg
adc
xor
pop
dec
repnz
pushf
popl
iret
mov
aaa
dec
or
inc
lods
cltd
fists
add
jns
call
xor
jle
dec
rorl
sbb
stc
or
sbb
cmpsl
mov
nop
push
push
and
or
xor
ret
push
jo,pn
and
or
test
cs
out
stos
mov
imul
scas
cmp
outsl
mov
addb
loopne
dec
movsl
in
movsl
std
jae
ss
repz
push
div
pop
movsb
mov
lock
js
pop
cmpsl
and
mov
cmc
adc
lahf
jbe
loop
ret
imul
jne
fsubs
jae
inc
adc
out
shl
gs
lock
cmpsb
call
mov
incl
and
adc
mov
dec
mov
cmpb
arpl
cmpsl
mov
adc
inc
lret
jle
fdivrs
stos
mov
add
adcl
lds
in
sbb
pop
sbb
adc
gs
and
lcall
mov
sti
sub
cmp
or
adc
push
xchg
sub
addb
imul
sub
inc
popf
lods
lods
push
sahf
in
inc
sub
hlt
ret
inc
dec
or
pop
lcall
fisubs
cmpsl
inc
les
icebp
addr16
dec
sarl
xchg
incb
mov
jns
insl
dec
clc
js
xchg
pop
xorl
fs
ja
push
jb
adc
hlt
je
notb
in
ljmp
mov
xchg
mov
outsb
lods
dec
pop
fimull
mov
dec
imul
sbbb
pop
cmp
iret
xor
sub
aaa
pop
sbb
es
add
push
mov
and
cmp
imul
jb
fsubs
xor
fsubs
cmp
add
stc
outsb
pop
mov
adc
jb
lods
ljmp
inc
das
lods
or
sub
leave
jp
dec
test
adc
push
pop
lret
add
std
mov
push
mov
or
pop
mov
or
sub
or
ljmp
lea
rcl
ljmp
pop
in
jbe
adc
xor
mov
dec
jnp
jne
scas
xchg
call
rcll
repnz
cmp
cmc
int3
cmc
ds
adc
jle
sub
mov
inc
mov
stc
sub
push
and
cmc
add
mov
pop
loop
jno
popf
dec
lahf
pop
and
les
sbb
and
or
orb
call
xor
je
cmp
and
cwtl
inc
int3
mov
iret
in
iret
jl
jno
cli
jmp
addr16
scas
rorb
cmp
dec
sbb
and
loopne
xor
mov
movsl
stos
ss
jne
mov
lods
jmp
popf
cmp
repz
dec
xchg
out
sub
dec
push
pop
jl
loop
add
into
mov
iret
push
and
cltd
andl
cmp
sub
xchg
mov
shlb
push
out
inc
cs
push
sbb
jecxz
sbb
outsl
sub
sub
adc
or
adc
mov
loopne
sbb
into
in
pop
ret
fisubl
add
enter
popa
pop
and
mov
cmp
xlat
mov
maskmovq
dec
sub
dec
nop
jne
or
xchg
dec
push
sbb
imul
mov
repnz
cwtl
xchg
mov
std
lcall
jl
mov
rorb
mov
cmpsl
mov
cmp
adc
bound
mov
js
sbb
jecxz
xor
iret
xchg
addb
mov
shlb
xor
cli
test
pop
sti
xchg
dec
dec
sti
mov
ja
sti
mov
push
fcoms
ucomiss
divb
loop
cmovae
or
data16
aad
add
lret
shr
cmp
inc
mov
jbe
push
mov
inc
adc
imul
cmp
push
mov
lock
pushf
inc
and
arpl
lock
xor
sbb
in
ret
cld
pop
jmp
jmp
cmpsl
push
gs
jmp
test
dec
dec
or
add
fimull
out
and
mov
sub
jb
or
or
jb
and
inc
pop
scas
and
ret
xlat
lods
or
aad
cltd
xchg
sbb
call
loope
mov
scas
xor
and
add
sbbl
repnz
add
lods
mov
and
adc
in
mov
cmc
adc
in
add
repnz
daa
into
mov
sbb
lods
shll
fidivrs
mov
xchg
and
sub
xchg
test
loope
outsb
mov
loop
das
iret
jle
adc
ljmp
sbb
adc
dec
lods
jmp
fdiv
fildl
outsl
mov
or
push
outsl
gs
push
add
mov
pop
push
aaa
je,pn
adc
inc
jbe
leave
popl
pop
lods
xchg
mov
sbb
sub
jp
and
in
sahf
aad
dec
jns
cmc
aaa
mov
mov
cs
or
push
mov
xchg
lahf
sub
mov
pop
je
dec
sub
dec
xchg
ja
pop
jae
testl
ret
push
popa
jmp
iret
xchg
inc
out
mov
cld
mov
mov
aaa
xor
fdivrl
pop
cmp
mov
in
out
mov
jne
inc
mov
loope
imul
sub
and
mov
aam
rcl
int
dec
mov
sub
cmc
mov
add
jbe
sbb
ds
cmpl
inc
fisttpll
and
data16
push
xlat
adc
xor
clc
push
and
aas
adcb
push
adc
jge
sub
js
lret
insl
push
sbb
or
mov
call
mov
lahf
add
les
cmc
push
mov
aad
sbb
xchg
mov
repz
cmpsl
ret
sub
add
loopne
push
cmp
mov
xor
and
imul
push
lea
lret
jnp
sub
or
loope
and
dec
dec
lret
mov
cmp
jmp
pop
pop
dec
or
out
or
fdivs
cld
sbb
cli
adc
and
scas
adc
sbb
add
shlb
add
xchg
ss
call
aad
lret
dec
test
sub
fldl2t
sbb
xchg
pop
hlt
xrelease
in
jg
sub
pop
movsl
mov
push
negl
xor
fwait
inc
je
add
aaa
rolb
cltd
mov
test
orl
hlt
pop
clc
dec
push
xchg
add
cmp
ja
jl
mov
dec
cli
or
clc
push
mov
jae
mov
mov
mov
dec
aaa
andl
inc
and
sub
mov
out
sbbb
fsubl
imul
sbbb
clc
lret
fs
adc
xor
adc
sub
int
inc
sahf
loopne
cmp
or
idiv
mov
xchg
or
jl
mov
dec
lret
push
ss
jecxz
mov
mov
and
push
sbb
js
mov
mov
stos
lahf
lods
enter
or
or
rcr
out
xorl
or
jmp
cld
sub
jecxz
pop
test
test
shrl
outsl
cmp
or
roll
mov
push
inc
xor
pop
inc
adc
in
push
outsb
fs
pop
test
cmp
pop
setle
mov
xor
movsb
lret
xor
daa
stos
lods
pop
sub
das
sub
or
std
pop
mov
testl
lcall
jg
enter
je
test
in
inc
pop
push
xor
cmp
aas
gs
imul
aam
testb
inc
cmp
fdecstp
mov
push
mov
ret
sub
cmp
orb
dec
xchg
jl
push
nop
aaa
adc
inc
in
pop
test
xchg
mov
mov
inc
dec
test
cmp
and
outsb
mov
movb
adc
and
test
pop
jb
jns
insl
inc
aam
in
inc
and
bound
adcb
pop
in
xchg
scas
and
sbb
inc
dec
sub
mov
or
imul
mov
jp
stos
stos
and
adc
das
fildll
lcall
dec
and
push
fdivs
out
xchg
and
xlat
push
shlb
jmp
push
push
inc
cld
js
jecxz
push
add
repz
icebp
fcomi
daa
mov
add
cwtl
push
mov
clc
popa
xchg
xchg
add
dec
aaa
idivl
push
jne
daa
sub
xchg
push
arpl
inc
mov
cli
push
mov
push
imul
mov
out
pop
sbb
xchg
mov
adc
inc
stc
add
mov
jecxz
jl
hlt
mov
mov
xchg
jmp
jmp
faddp
lcall
mov
in
push
mov
lea
or
mov
jecxz
pop
mov
inc
je
iret
clc
mov
imul
mov
sbb
sbb
imul
cltd
pop
xchg
jecxz
nop
cmc
loope
je
and
fists
add
fiaddl
jbe
jge
push
push
xchg
mov
sbb
cmp
flds
ja
and
mov
testl
xor
mov
loope
cli
inc
pop
addr16
mov
je
push
mov
lods
jo
lods
jne
fdivrs
mov
cmp
mov
je
push
dec
xchg
scas
xchg
scas
fsubl
mov
xor
cmp
jmp
es
mov
popa
popf
mov
cmp
and
mov
sub
add
adc
cmc
in
sbb
into
or
out
leave
jl
ja
mov
stos
les
pop
lods
sub
call
jge
adc
popf
notw
test
jb
stc
outsb
gs
jecxz,pn
adc
cltd
push
loop
push
or
jne
xor
lods
mov
xchg
sbb
cs
jge
mov
pop
and
ret
add
mov
outsl
sar
pop
xchg
or
popf
sahf
xchg
mov
and
push
pop
mov
sbb
pop
jge
adc
nop
mov
add
cmp
roll
mov
hlt
aam
in
test
data16
inc
cmp
jb
adc
ret
dec
cwtl
push
stos
pusha
addr16
iret
pop
pusha
and
cmpsl
adc
sbb
gs
pcmpeqw
jmp
popf
push
imul
ret
mov
or
jo
adc
fiaddl
mov
mov
sub
jmp
jns
ret
mov
outsb
data16
mov
or
lods
lahf
and
xlat
shll
push
ss
aas
push
sahf
test
jl
ja
out
lcall
sub
daa
pop
ret
dec
xchg
mov
pop
inc
aad
fistps
and
mov
sarl
or
cli
popf
adc
test
insb
lods
arpl
fxch
popf
insl
mov
scas
cld
jb
sub
pop
push
loop
pushf
outsl
das
and
mov
and
inc
pop
sahf
push
push
fstpl
push
leave
adc
sub
fwait
lcall
inc
fcmovu
mov
daa
loop
or
ret
xor
jle
andb
push
roll
sbb
xchg
xor
cmp
imull
pop
dec
pop
mov
push
sbb
pop
mov
movsl
adc
dec
scas
xchg
into
mov
mov
enter
xchg
cmpsb
and
mov
add
xor
repz
xor
jae
adc
inc
mov
pop
cs
js
int3
sbb
bnd
sbb
mov
xchg
add
cltd
lcall
push
and
inc
rorb
lods
mov
sarl
pop
inc
adc
sbb
or
pushf
mov
test
dec
testb
mov
jecxz
insb
cmp
out
pop
outsb
xchg
int
daa
push
pop
mov
rcll
pop
or
or
sti
lret
pop
lock
nop
pop
jecxz
add
cmc
div
and
inc
int
frstor
jg
push
mov
adc
loop
or
in
pop
ss
int
lahf
mov
addr16
rol
outsb
lret
cmp
inc
mov
xor
push
cld
inc
sbb
imul
or
add
dec
and
addl
and
cmpsb
int
cld
pop
test
pop
lahf
loop
xchg
and
sub
sub
pop
fnstcw
loope
inc
sbb
lock
xor
js
adcb
imul
loop
jge
push
xchg
adc
loop
xlat
hlt
test
sti
imul
psubd
mov
sbb
iret
lea
push
xchg
xlat
jecxz
add
push
and
sub
sub
mov
mov
fidivl
pop
sbb
pusha
imul
jl
repnz
in
movsb
mov
dec
jmp
jns
cli
lods
adc
pop
push
incl
jne
or
jnp
and
pop
push
dec
jns
roll
jo
adc
sbb
leave
xchg
xor
inc
ds
adc
and
sub
icebp
lock
lds
fsubs
jb
pop
scas
test
hlt
mov
aas
xchg
sub
and
lahf
inc
xchg
lea
lock
clc
into
out
imul
add
push
mov
jge
cmovns
scas
je
nop
addr16
sti
mov
clc
jle
fcomps
pop
mov
or
xlat
cmp
sbb
lods
mov
test
mov
push
mov
pop
adc
in
push
outsb
sbb
and
into
and
mov
int
mov
roll
mov
push
out
or
jno
mov
xchg
cmc
mov
adc
push
xlat
popa
xor
inc
inc
adc
sti
out
lahf
sub
push
ja
push
lods
jp
into
xchg
xchg
xchg
lfs
js
mov
jge
inc
daa
xchg
mov
ficomps
repz
negb
lcall
out
out
aad
pop
or
or
cmp
pop
mov
mov
cmp
cld
popa
sbb
push
negl
mov
mov
mov
out
sbb
and
lods
stos
ds
pusha
xchg
xor
fdiv
xor
pop
xchg
pop
mov
jo
pop
fiaddl
cmp
test
ret
push
loope
push
arpl
and
enter
gs
jmp
jb
mov
xchg
dec
jecxz
enter
pop
xchg
or
sbb
inc
inc
or
xor
xlat
mov
mov
push
pop
cmp
sub
mov
popa
adc
and
push
mov
pop
and
pop
stc
pop
or
pusha
dec
movsb
rcl
addr16
loopne
inc
icebp
test
lods
popf
pusha
ja
mov
xchg
sub
insb
test
bound
xlat
movsb
hlt
mov
cmp
xchg
sub
jo
lahf
pop
adcl
add
es
roll
mov
out
xor
jmp
add
add
jl
lds
cs
mov
mov
xor
in
push
js
jg
cmpsl
shrl
cmp
mov
in
fdivl
mov
data16
lods
push
inc
sbb
add
mov
mov
das
fcmovnu
orb
neg
lcall
in
mov
pop
mov
push
xor
jno
cmpsb
dec
jecxz
daa
pop
pop
pushf
subl
dec
fnstenv
dec
test
adc
loopne
push
ret
dec
lock
sub
pop
mov
clc
inc
fsubrl
fcmove
sahf
mov
shll
in
lret
push
cmp
push
das
add
repnz
xchg
add
jmp
mov
fcoml
lods
fwait
repz
nop
ja
gs
sbb
dec
mov
adc
mov
shll
jbe
add
inc
mov
pop
pop
loopne
inc
or
sbb
add
dec
fsubs
mov
mov
sbb
sti
iret
mov
dec
cmpsl
lock
enter
ret
inc
mov
mov
call
aad
sub
add
js
test
cwtl
mov
fs
sub
pop
int3
adc
sub
mov
mov
dec
lret
rorl
xlat
mov
movsl
fisttps
scas
in
mov
cmp
shll
faddl
pop
enter
jl
xlat
hlt
add
ljmp
int
in
xor
js
add
int3
mov
push
fwait
mov
clc
push
std
fidivs
les
test
inc
push
roll
ja
addr16
mov
lods
shr
mov
leave
and
lods
add
adc
xchg
xchg
mov
adc
mov
xchg
inc
popf
or
sub
sbb
add
jg
ret
xor
add
sbb
sbb
jbe
movsl
cmp
jl
psubsb
imul
ljmp
test
cld
and
push
add
pushf
jb
imulb
pop
sbb
jg
mov
sbb
cmp
jmp
lods
subb
loopne
test
into
dec
mov
inc
adc
out
push
or
enter
jg
pop
aam
out
add
out
jmp
fildll
inc
out
stos
jl
incl
flds
aaa
jmp
jmp
push
aas
ds
xor
cmp
and
out
arpl
sgdtl
add
inc
dec
repnz
jmp
xchg
repnz
pop
pop
or
jo
ljmp
les
inc
mov
push
cwtl
jno
cmp
add
addr16
shll
mov
xor
fsubl
test
and
pop
pop
sbb
scas
dec
divb
push
xchg
or
xchg
sarl
cmp
jp
repnz
pop
scas
jecxz
filds
cmpsl
cmc
add
mov
in
in
popa
xchg
or
fwait
push
je
push
hlt
mov
aas
push
pusha
jmp
and
pop
outsb
loop
mov
fdivl
mov
test
iret
mov
mov
jbe
jecxz
adc
shlb
mov
addr16
aad
push
adc
cmp
out
stos
and
pop
sbb
cmp
rcl
in
lcall
xchg
dec
outsb
jnp
into
rorl
push
jge
lock
inc
cltd
xor
cmpsb
mulb
repz
addl
cmp
cmp
xor
lret
cmp
push
cld
inc
jle
push
lret
out
push
and
ror
adc
dec
push
xor
inc
sub
imul
xchg
xlat
mov
xorb
test
lahf
pop
pop
loopne
or
sub
sbb
mov
movsl
in
push
mov
rcrl
jae
or
dec
mul
lods
mov
sub
xchg
outsl
add
stos
add
idivl
push
nop
mov
orl
jne
mov
sbb
mov
sti
xor
test
sbb
mov
mov
aaa
add
popa
arpl
dec
pop
mov
fadd
lock
stos
xchg
rcl
pop
movsl
subb
repz
xor
bound
inc
cmp
aad
pop
decb
sbb
mov
add
enter
mov
leave
icebp
stc
jmp
fs
push
or
and
ja
mov
mov
push
mov
push
xchg
inc
inc
jns
mov
or
add
stos
push
jmp
outsb
xorb
aaa
mov
sbb
sbb
test
call
sub
and
stos
jns
lret
push
int
dec
and
sahf
aad
mov
push
and
jg
pop
and
fs
sub
sub
mov
push
ss
pop
mov
pop
insl
lock
inc
push
jb
fdivrl
mov
cmp
insl
sahf
repz
add
or
inc
mov
jl
mov
push
leave
int3
ds
mov
les
push
stos
mov
fldl
add
movsb
mov
mov
jbe
shlb
xor
lock
mov
dec
adc
aas
notb
mov
lods
rcr
sbb
ficomps
lds
jnp
push
subl
pushf
in
aaa
insb
push
push
cltd
enter
mov
push
jno
mov
ret
mov
mov
fsubrs
adc
sbb
push
pop
add
push
mov
fstl
or
imul
movsl
movsb
ds
mov
je
push
xchg
adc
js
jns
mov
inc
pop
pop
cltd
jns
add
xchg
cmp
fdivs
lret
lahf
sar
lcall
add
into
lcall
movsl
jmp
insb
xchg
lea
sub
imul
and
testl
xor
fstps
popf
xchg
es
fistpll
cs
xor
lds
dec
and
imul
jmp
cmp
lds
pushf
jo
add
push
iret
mov
and
ja
in
fs
mov
das
mov
xor
mov
int3
sub
loop
mov
push
loopne
aad
add
ss
sub
mov
mov
jecxz
daa
xchg
xchg
out
inc
mov
sti
cwtl
inc
and
insb
mov
stos
adc
jbe
or
fs
inc
pop
add
push
pop
comiss
test
daa
out
rolb
pop
xor
shl
sbb
popa
inc
arpl
jp
mov
sti
jbe
or
or
cvtpi2ps
jmp
mov
jmp
bound
push
clc
inc
cmp
stos
hlt
dec
xchg
imulb
stos
fs
ret
pop
push
ret
mov
pop
mov
rorl
xor
inc
sbb
adc
mov
mov
add
hlt
sbb
xor
push
cmc
jecxz
adc
std
mov
and
or
stos
rcr
dec
scas
inc
push
sbbb
cli
je
into
movd
push
push
gs
adc
pop
sbb
stos
cmp
dec
nop
iret
dec
dec
inc
dec
inc
and
fwait
in
mov
and
jne
inc
inc
cmp
push
sbb
out
adc
mov
mov
pop
aaa
shrb
pop
adc
push
xor
xor
pop
imul
les
shrb
cmp
jae
rcrb
arpl
ret
jae
push
outsl
jbe
in
je
addr16
xchg
addb
sbb
adc
test
arpl
or
imulb
loope
testb
pop
stos
dec
mov
popf
aad
jg
sub
pop
or
shl
scas
gs
and
jno
mov
scas
sahf
dec
pop
stos
ficoms
notl
sbb
test
repz
cmp
push
cmpsl
xchg
es
loopne
sbb
xchg
inc
xchg
clc
mov
pop
test
cmp
fistpl
cmp
cli
bound
xlat
out
inc
fldcw
clc
je
test
mov
test
lret
sub
cmp
add
sub
push
cmc
cmp
das
repz
and
mov
or
dec
stos
shl
mov
xor
call
outsb
fnstenv
lods
xchg
ss
mov
or
test
pop
gs
mov
mov
jb
fmuls
fcomps
test
inc
sub
sbb
in
lods
mov
dec
scas
into
adcb
inc
orl
fcmovb
jb
fisttpl
pop
inc
js
push
clc
fwait
pop
sub
movb
xchg
jbe
and
cmp
sbb
sbb
outsl
sahf
jg
adc
dec
daa
mov
test
jl
orb
fdivrs
jbe
mov
pop
xor
push
fcomip
xor
faddl
sbb
push
jge
aam
fldl
push
cwtl
mov
cmpsb
sbb
cmp
dec
sarl
aaa
ljmp
sbb
add
sbb
or
or
inc
xor
sbb
mov
jl
mov
pop
mov
mov
insl
ja
mov
jns
fs
repnz
xchg
dec
in
and
shrb
or
sbb
mov
lods
mov
sub
dec
adc
lock
cmp
sbb
fmulp
push
push
fs
sbb
ret
sbb
or
mov
pusha
lret
jne
lods
jns
daa
adc
push
adc
mov
sub
pop
int3
mov
mov
int
sbb
fs
js
dec
pop
mov
fisttpll
js
jle
ficomps
mov
out
ss
shll
pop
repz
fildl
arpl
je
stc
cltd
push
fldcw
mov
xor
loop
xor
mov
out
data16
pop
xlat
push
ljmp
add
xchg
ficompl
adc
pop
filds
push
jge
cmp
movsb
outsb
lock
add
aam
or
insl
out
cmp
aad
fwait
mov
cmc
cmp
mov
insb
fwait
inc
adcl
lahf
mov
leave
mov
push
sbbb
jmp
lret
pop
jno
adc
inc
repz
fbstp
push
mov
or
ds
mov
stos
and
sbb
testb
xchg
insb
add
rcrb
adc
adc
mov
std
icebp
lds
jne
add
ss
jnp
repz
inc
push
mov
push
pushf
and
nop
fwait
hlt
shr
and
mov
sahf
dec
mov
in
xor
mov
aam
lea
out
push
and
jns
ja
ret
loopne
adc
cmp
ficomps
mov
into
outsl
aaa
aaa
insb
mov
jmp
fsub
es
imul
and
lock
lock
add
or
sub
lcall
jmp
push
adc
repz
add
in
addb
mov
pop
mov
sub
push
loopne
std
jns
pop
mov
mov
out
daa
cwtl
rcrb
je
jl
push
cmpsl
icebp
lods
push
push
mov
aad
push
jns
and
adc
push
roll
sub
iret
push
cmpsb
xchg
jecxz
mov
push
lret
mov
inc
js
mov
cs
adc
push
add
push
jne
fstpl
es
push
dec
in
xchg
popa
in
cld
or
sbb
inc
mov
mov
cld
mov
jne
je
jo
cmpsl
scas
sub
daa
rorl
and
imul
shl
fldt
stos
in
clc
cmp
adc
lret
sbb
inc
sbb
jg
loope
loope
mov
sub
fildl
je
inc
test
and
aam
iret
and
push
sub
lret
bound
shl
pushf
adc
repz
iret
lret
xchg
sbb
cmpsb
fstpt
sub
idiv
fcoml
sub
dec
xor
pop
jle
insb
xchg
cmp
push
scas
cmp
cltd
xchg
and
or
or
leave
imul
mov
xor
lret
and
nop
mov
filds
mov
xchg
outsb
push
jno
dec
jnp
and
out
push
sub
inc
mov
shll
sahf
or
cmp
fucom
xchg
sbb
scas
das
xor
cld
ficoml
outsb
inc
inc
nop
in
push
imul
and
fsubp
cmpsl
mov
adc
xchg
popa
lods
xchg
push
dec
popl
cli
mov
outsl
or
aad
jl
and
je
in
cltd
dec
mov
scas
lods
and
das
pushf
repnz
xchg
sbb
lret
mov
les
cmpsb
dec
inc
int
bound
cmp
adc
jp
add
pop
sbb
mov
movups
testl
mov
nop
xchg
mov
or
xchg
xor
or
in
jnp
xor
neg
push
jmp
aam
in
cltd
bound
push
aas
add
ret
adc
xor
fistps
add
fs
jecxz
pop
dec
push
add
mov
cmp
jbe
fistpll
dec
push
pop
ficoml
or
cmp
mov
outsl
rol
and
xor
gs
jns
adc
xlat
pop
scas
xor
dec
xor
and
or
and
xorl
xchg
mov
xor
xchg
xchg
test
jae
lea
rorl
or
jg
aas
mov
jo
shlb
sub
mov
or
sbb
sbb
pop
not
lock
pusha
lret
jne
cwtl
outsb
popa
pop
addr16
xor
shlb
push
sbb
mov
xchg
loope
stc
int
sub
addb
push
or
push
jb
mov
dec
dec
movsl
or
xor
outsb
add
sub
dec
push
jns
push
aad
out
mov
mov
mov
insb
jo
lret
repz
sbb
repz
arpl
dec
cmp
mov
test
out
or
orl
push
fcomps
jp
call
pusha
mov
jbe
neg
ret
popa
sbb
je
adc
lock
sub
sarl
jne
jne
divb
mov
fwait
pushf
lret
cmpsl
sbb
mov
adc
dec
lods
fs
and
inc
fldt
dec
inc
aam
jnp
cmp
rorb
add
mov
mov
dec
arpl
rcr
aad
fldl
outsb
cmpsb
cs
sub
mov
cmp
inc
cli
mov
pop
inc
mov
std
push
add
xchg
xlat
lcall
xor
iret
push
aad
push
cli
and
fwait
fs
inc
mov
shlb
and
xor
pop
jp
in
lcall
out
xor
mov
jecxz
cltd
fnstenv
dec
mov
lret
lahf
aad
pop
iret
push
out
call
jl
enter
ljmp
mov
mov
jge
loopne
push
sbb
add
push
out
out
fadds
stos
xchg
aad
in
mov
pop
fs
or
jae
cmp
jno
mov
pop
fstpt
mov
sub
loope
sbb
repnz
mov
bound
xchg
jle
dec
stc
cld
into
xlat
xchg
pop
lods
in
iret
hlt
xor
jae
sti
xchg
or
pop
jne
fadds
xlat
pop
xor
add
packssdw
push
in
jge
movsl
xchg
dec
inc
cmp
ds
push
gs
fcmovnu
inc
call
or
jns
adc
cmpsl
mov
dec
je
inc
jno
pop
cmpsl
negb
sub
mov
jbe
mov
dec
cmc
dec
xor
inc
push
cs
mov
push
mov
lahf
sub
cwtl
ljmp
sub
lahf
mov
sbb
mov
pop
mov
or
lods
movsl
loop
sub
lahf
mov
inc
mov
inc
inc
gs
call
and
ljmp
insb
mov
dec
mov
add
lcall
ja
dec
or
outsl
dec
cwtl
push
pushf
push
nop
pop
ret
icebp
xor
push
dec
adc
pop
lds
les
push
aas
push
mov
ja
mov
mov
push
push
and
or
pop
incl
add
popf
ret
out
inc
mov
mov
fwait
loop
jno
jg
fmuls
popa
mov
fwait
sub
jns
mov
mov
imul
mov
repnz
stos
inc
cmpsl
and
xor
imul
int
push
insl
sub
test
into
pop
cmp
pop
insl
js
xorb
cmp
sbb
push
lahf
js
mov
out
pop
das
jo
bound
stos
xchg
pop
out
jmp
xchg
fwait
xchg
push
je
fdivrl
stc
insl
test
mov
xor
dec
cld
ja
push
movups
mov
stos
fdivrl
dec
mov
lods
push
cmp
ret
imul
add
xor
add
xor
cmp
fists
mov
aam
out
mov
mov
or
std
pusha
push
inc
jnp
lret
in
adc
test
push
call
data16
inc
push
loopne
popa
inc
push
xor
cmpsb
sub
ljmp
decb
inc
shlb
ljmp
aas
sub
jmp
enter
fmuls
outsl
shlb
inc
push
push
xor
ret
pusha
fstps
mov
rorl
pop
fisubrl
gs
mov
sbb
jae
in
fidivrl
enter
ret
or
xchg
ljmp
mov
adc
fwait
bnd
sub
mov
ljmp
push
mov
push
fs
imul
movsb
in
sahf
fdivrl
filds
dec
pop
mov
inc
aam
in
mov
xchg
xor
mov
jg
ljmp
mov
adc
shr
ja
pop
dec
lret
push
hlt
xchg
push
xor
popa
jns
jne
movsl
popf
cmc
sbb
jnp
fnsave
push
push
jbe
fdiv
subl
cmp
sti
jno
dec
arpl
cmp
stos
jno
adc
in
xchg
add
sbb
in
jmp
dec
mov
cmpsl
je
adc
mov
mov
mov
xchg
adc
adc
mov
in
out
das
jns
in
dec
cli
jno
sbb
jecxz
mov
sub
xor
daa
push
or
or
and
mulb
cmc
enter
xor
xor
or
mov
popf
sub
pushf
adc
pusha
mov
or
bt
bound
leave
ret
sti
pusha
jle
pop
ja
cmp
cmp
fwait
dec
outsb
adc
mov
jp
mov
fs
fsubr
cmp
movq
lcall
bound
sub
sbbl
pop
insb
test
cs
call
or
push
int
pop
pop
cmp
and
xchg
mov
out
jae
mov
lods
push
aas
gs
daa
cwtl
pop
rol
dec
js
mov
jmp
mov
clc
jp
mov
jmp
jae
fldl
in
idiv
js
pop
mov
mov
stos
lcall
ds
mov
jae
fs
aaa
neg
mov
mov
sub
adc
ljmp
jns
icebp
cli
jl
cmpsl
jbe
inc
aaa
outsb
xchg
mov
int
xchg
jb
ljmp
add
adc
mov
jo
repz
repnz
sahf
inc
push
movsl
js
fcompl
sub
pop
pop
push
sbb
lcall
test
pop
popa
mov
push
in
enter
inc
andb
xchg
push
adc
outsb
dec
ss
outsl
movsb
cmp
lds
inc
shll
xchg
mov
jp
movsl
jle
loop
outsb
int
mov
push
add
lock
xlat
out
sbb
popf
sub
lds
mov
sbb
into
stc
lea
sub
bound
shr
sbb
rcrl
iret
or
dec
inc
les
mov
stos
cmp
movsb
repnz
fisubrs
in
clc
lds
push
or
cwtl
fisttps
mov
push
mov
lcall
inc
jp
aam
xor
sub
test
adc
sbb
xchg
cmp
insb
cs
sub
lret
shrl
dec
stos
dec
mov
xor
rolb
ja
sub
enter
mov
shll
repz
mov
movsb
and
sbb
cs
divb
xchg
mov
push
pop
test
in
fistpl
mov
leave
adc
push
and
adc
fisubs
popa
adc
jnp
mov
or
adc
adc
adc
jno
and
push
jne
xor
xlat
bound
jo
pop
fmuls
je
adc
out
lods
xchg
xlat
cs
outsb
ret
jo
jl
notb
addr16
dec
mull
cs
es
xor
cmp
and
push
jg
hlt
sbb
xor
mov
add
clc
repz
inc
into
mov
sbb
in
adc
js
dec
cmpl
dec
xchg
or
jg
xlat
out
lsl
jle
gs
divl
and
xor
inc
sbb
push
aaa
jmp
outsl
mull
insb
ror
push
sbb
or
push
mov
out
fucom
jl
mov
cmpsb
into
sub
nop
je
xor
rol
std
cmp
jo
and
popl
mov
push
adc
iret
adc
inc
inc
lcall
sbb
mov
fldpi
outsl
mov
inc
lods
cmp
insb
push
push
inc
or
sbb
xchg
fsubrs
adc
ds
arpl
and
inc
dec
pop
orl
pop
xchg
test
jecxz
int3
and
sub
dec
in
push
mov
jns
subl
adcb
sbb
jns
lret
or
scas
or
or
outsl
and
dec
aaa
jnp
xchg
dec
cmp
push
insl
push
std
lret
add
loope
xor
add
jno
push
ds
and
push
or
inc
in
and
test
loopne
fnstcw
mov
push
jp
cmp
cmp
ja
lahf
insl
or
mov
les
push
push
mov
mov
push
dec
les
mov
or
mov
mov
test
xchg
pop
mov
mov
aaa
mov
fsubr
xchg
jl
inc
mov
imul
shll
mov
or
mov
cmp
inc
adc
adc
xor
fsubl
repz
mov
mov
xor
sub
in
imul
jecxz
repz
xor
adc
cld
pop
std
mov
fdivl
iret
lock
mov
pushf
mov
out
shll
cmp
xor
dec
loop
in
mov
push
aaa
stos
jmp
mov
adc
arpl
subl
imul
ds
and
sub
popa
cmp
pop
jno
faddp
pop
lret
cmp
xchg
dec
mov
hlt
sbb
cmpb
mov
sbb
loop
fs
xchg
scas
enter
popa
mov
inc
sub
lods
cmp
sub
sub
mov
iret
xlat
test
mov
int3
xor
insb
inc
jp
dec
inc
std
jp
xor
cmp
lret
adc
roll
jbe
in
jbe
xchg
mov
and
insb
dec
mov
mov
cmpsl
ljmp
adc
cmp
push
xchg
cmp
pop
and
adc
jb
fcom
in
push
push
push
lcall
sahf
imul
lret
enter
ret
jnp
test
fldcw
and
mov
shll
pushf
test
mov
jg
xchg
int
arpl
aaa
sub
jns
pop
mov
push
and
push
movsb
rorl
xor
and
dec
or
test
fmuls
sub
test
aas
or
ljmp
sub
aaa
dec
cmp
iret
fsubr
jmp
jnp
dec
fidivrs
xlat
inc
popf
cli
pop
pop
pop
movsb
cmp
sub
in
emms
out
and
and
mov
mov
xchg
insl
out
stos
inc
icebp
pop
int3
fmul
inc
sub
loop
out
cmp
outsl
mov
aam
enter
dec
sarl
inc
mov
push
cmp
push
fwait
pop
sub
or
pop
inc
push
ds
push
or
lods
call
sub
xor
cmpb
push
push
in
push
loopne
arpl
xlat
pop
inc
scas
sub
cmp
mov
std
push
jno
cltd
xchg
mov
or
push
cmp
outsb
fs
loope
push
test
loop
repz
aaa
out
std
cwtl
push
push
mov
icebp
push
push
mov
test
jl
bound
mov
push
ja
pop
inc
into
mov
add
icebp
inc
pop
shrb
in
sbb
cmc
adc
clc
and
fdivl
dec
mov
aaa
adc
fistpll
push
in
push
adc
sub
loope
adc
bnd
rclb
adc
out
stc
movsl
adcl
sbb
add
shll
xor
sub
dec
sub
push
popf
push
push
shrb
pop
inc
xchg
push
xchg
sub
out
inc
idivl
xchg
inc
pop
xchg
les
sbb
jmp
pop
xchg
add
mov
seto
fucomp
jae
lods
loopne
xchg
cld
sbb
jno
popa
fcomps
fildll
gs
js
outsb
push
fldenv
xchg
push
xor
sbb
sbb
hlt
inc
mov
iret
ja
push
push
dec
sbb
cmc
sbb
push
lcall
in
cmp
jle
inc
xor
dec
insl
dec
xchg
mov
scas
imul
shrl
inc
mov
push
addl
out
aam
sub
sti
dec
out
sub
daa
lods
dec
dec
flds
fsts
jp
arpl
and
testl
shrb
mov
sti
sbb
add
ret
insb
add
repz
test
js
push
dec
mov
cmpsb
adc
loope
aas
inc
gs
pop
bound
mov
pop
cli
test
cmpsl
lods
pop
lcall
or
dec
stos
subl
je
pop
inc
and
pop
jmp
sti
std
call
jle
jl
mov
mov
sub
fcmovu
pop
jb
js
popa
inc
mov
mov
add
mov
mov
stos
pop
inc
xor
mov
push
push
mov
lods
scas
cwtl
aad
gs
in
sbb
push
sti
mov
or
jnp
push
sbb
pop
xor
enter
cli
add
pop
popf
xor
std
add
jmp
ret
popf
and
sub
adc
sub
je
mov
xchg
mov
pop
mov
dec
scas
cmpsl
es
sbb
mov
fidivrl
jne
jge
mov
jge
sbb
in
mov
push
les
adc
add
or
or
add
sti
fisubrs
inc
andb
daa
xchg
mov
mov
mov
pop
ds
adc
push
cmp
lock
cmp
dec
neg
push
jbe
sub
jb
mov
rclb
inc
fldt
sub
jbe
lcall
mov
xchg
inc
insl
inc
dec
out
or
and
ja
test
fimuls
push
jmp
imul
cld
outsb
sub
cmp
and
push
insl
xor
cmp
aaa
test
push
inc
mov
in
jecxz
outsl
cmp
rolb
imul
jl
scas
push
popa
mov
lock
push
mov
add
mov
xchg
notb
scas
rorb
notl
mov
fadds
int3
xor
sub
fsubs
inc
pop
fmul
pop
jle
shr
sub
shrl
sub
in
dec
insl
pop
xchg
xchg
popf
push
jns
movsl
call
add
fs
arpl
call
inc
mov
outsb
xorl
xor
mov
seta
push
addr16
cmpsl
mov
xchg
add
jp
xlat
pop
push
shl
xlat
pop
xchg
adc
call
stos
lods
movsl
mov
push
inc
dec
fdiv
pusha
test
mov
cwtl
adc
stos
and
cwtl
pop
xchg
xor
pop
call
loopne
nop
add
and
pop
in
or
stos
dec
sahf
push
loop
mov
xor
hlt
add
and
icebp
add
mov
push
stc
dec
cmp
loope
scas
fwait
lods
mov
pop
lds
and
or
adc
repnz
pop
mov
ss
sbb
xchg
pop
aas
pusha
xor
icebp
lods
icebp
data16
fucomip
jnp
and
mov
push
and
addr16
sub
dec
mov
and
shrb
fnstsw
cmp
outsl
xlat
cmp
pop
inc
repnz
add
shl
mov
pushf
fimull
push
mov
and
lahf
pop
dec
js
cmc
add
inc
jmp
cli
dec
pop
stos
imul
fimuls
ljmp
enter
sbb
fstps
dec
out
mov
rcrl
ds
and
lret
or
mov
push
push
cmp
jns
push
imul
in
adc
mov
orl
dec
dec
outsl
fwait
push
insb
fs
addr16
push
jb
or
mov
inc
cmc
dec
bound
rol
clc
inc
mov
jbe
xchg
push
push
insb
inc
cwtl
xchg
or
pop
and
test
rcll
mov
add
xlat
repz
add
or
dec
mov
fists
int3
inc
xchg
mov
fcomp
pop
lahf
jp
ret
and
popa
jno
mov
push
lock
and
ss
add
ret
insl
popw
inc
cwtl
dec
nop
jmp
loope
xchg
push
xchg
adc
mov
out
cmp
mov
outsb
aaa
nop
push
xor
xor
lock
imul
and
lret
test
popf
cmp
jb
mov
fistpll
mov
cmp
cmp
aam
rcrb
call
rcll
pushf
mov
xor
push
movsb
add
fisubrl
jbe
sbb
inc
push
out
add
push
mov
cmp
sar
fdivrl
arpl
dec
mov
test
scas
insl
leave
nop
in
sub
testb
movsb
and
mov
push
loopne
xor
shrb
cmp
push
daa
das
cmp
push
out
jae
ret
jbe
mov
inc
movsb
out
mov
adc
loope
pop
cmc
add
mov
mov
or
test
adc
xlat
das
fcoml
sub
inc
aad
jp
fbstp
sub
xor
ja
cld
mov
xor
dec
call
lret
loop
loop
mov
sbb
mov
fdivl
jmp
pop
dec
add
and
xchg
ljmp
add
mov
xchg
lret
dec
dec
cmp
outsl
mov
mov
test
adc
ja
xchg
fmul
or
dec
mov
push
jae
lds
mov
mov
mov
jae
fldenv
ljmp
fld
adc
fidivrl
cld
clc
dec
mov
into
out
push
xchg
outsl
into
fwait
sub
mov
push
lock
out
add
xlat
inc
jge
outsl
and
aad
sub
mov
popa
xchg
andl
jp
pop
imul
xchg
xchg
out
outsl
shlb
add
pop
cmp
or
inc
jbe
rcrl
or
mov
adc
jnp
lret
jnp
mov
add
jbe
or
dec
ret
loope
inc
mov
push
je
and
ret
xchg
mov
es
mov
xchg
add
pop
xchg
cmp
xor
in
fcoms
push
outsl
push
test
or
insl
mov
xchg
sub
fnstsw
ljmp
add
push
mov
or
mov
adc
aas
sti
shrb
jns
loope
imul
mov
add
jb
mov
ret
scas
movsl
inc
pop
pop
into
pop
pop
hlt
sub
cmp
or
lods
jg
repz
lret
or
xchg
jno
add
outsl
outsb
jl
enter
push
inc
pop
mov
pop
mov
inc
fwait
dec
gs
pop
mov
or
cld
andb
dec
test
pop
in
mov
es
je
pop
mov
xchg
add
int3
and
and
add
lret
in
add
pop
sbb
es
cmp
dec
sbb
notl
lds
or
sub
rcl
add
aas
popf
sub
push
mov
std
out
mov
mov
aas
mov
adc
mov
mov
mov
pop
leave
popa
sub
mov
xchg
jnp
inc
mov
das
lahf
mulb
shrl
sbbl
repnz
pop
push
stos
jecxz
sbb
cs
jmp
jns
movsl
dec
test
sub
gs
data16
add
test
push
sti
push
leave
lret
mov
dec
lret
mov
stc
jecxz
stos
pop
mov
call
subb
push
jbe
and
inc
inc
jb
cwtl
stc
mov
sar
mov
jno
adc
jmp
cmp
xchg
jno
push
sub
cmp
mov
aam
popf
roll
subb
jns
sar
push
pop
sub
das
and
xor
cmpsl
push
inc
sub
adcl
in
fs
mov
push
mov
pushl
push
pop
sub
mov
push
mov
inc
mov
xchg
xchg
cs
xchg
adc
jl
cmc
stc
xchg
xchg
rorb
jg
dec
pop
jae
les
pushf
mov
or
dec
xor
cmp
xor
enter
iret
out
xor
cwtl
add
repz
inc
bound
jae
dec
jmp
sti
xchg
and
mov
push
push
daa
cmp
out
mov
or
fstpt
mov
sbb
daa
xor
cmp
shrl
xchg
or
pop
xchg
movsl
scas
sub
pop
addr16
pop
mov
shl
xor
jmp
inc
scas
outsb
in
mov
repz
movsb
test
jo
inc
lods
pop
cmc
rorb
ficoms
fadds
imul
pop
push
or
es
xchg
sub
sti
ja
sbb
insb
xor
movsb
repnz
loopne
faddl
stos
jne
and
dec
popa
xchg
enter
out
shll
jmp
and
mov
inc
pop
lods
lods
cmp
jb
scas
movsb
pop
insl
inc
insl
imul
ljmp
push
movsl
mov
jmp
jne
icebp
jge
xor
mov
fldcw
scas
lret
movb
je
scas
cltd
xchg
andb
shrl
cmp
in
andb
shll
les
pusha
xchg
xor
aaa
addr16
mov
jbe
inc
addr16
hlt
sub
inc
xor
ret
jp
jno
sbb
iret
jmp
or
aad
repz
cmpsl
das
ss
clc
cltd
lds
call
push
inc
cmpsb
insl
test
andl
mov
xor
push
sub
pop
icebp
cli
aam
jl
mov
or
inc
mov
cmpsl
push
inc
cmpsl
inc
mov
fistpl
repnz
sbb
and
jge
push
incb
loope
lods
sbb
xlat
imul
rep
sbb
cmp
xor
int3
mov
jne
mov
aaa
loopne
loope
add
xor
inc
outsl
ret
inc
or
adc
add
pushf
test
sub
dec
pusha
sarb
mov
nop
stos
int
dec
scas
imul
push
popf
aam
or
je
xor
rcl
adc
pop
lock
mov
jl
test
mov
repz
fildl
push
mov
das
lret
jge
sbb
mov
pop
sbb
or
out
cmp
add
data16
hlt
jmp
adc
and
inc
shrb
jecxz
cli
inc
pop
sub
lods
pusha
pop
mov
fbstp
pop
xchg
pop
pop
mov
insl
and
dec
push
mov
inc
hlt
adc
mov
loope
sub
jl
or
je
scas
mov
mov
adc
je
mov
std
jb
jg
add
inc
pop
rorb
jno
adc
mov
add
mov
jmp
jmp
cmp
push
jne
aad
das
sbb
ret
add
jge
xchg
cli
cmp
cmp
pop
iret
inc
dec
fstl
sbb
repnz
mov
bound
cmp
gs
sub
mov
loope
xor
nop
andl
dec
xchg
outsl
shr
rorl
mul
mov
jge
std
movsb
loop
push
sub
cmp
jl
lods
pushf
xchg
dec
or
imul
jmp
sub
jns
outsb
xchg
mov
and
jnp
xchg
call
stc
mov
aad
fwait
cmp
shl
ficomps
jge
inc
out
and
pop
hlt
or
iret
cmpsl
or
test
test
stc
mov
jno
repnz
add
cmp
xchg
push
jmp
xchg
pop
push
mov
aad
pop
jg
or
mov
je
stc
inc
rorl
push
iret
mov
lds
sbb
movsl
test
xor
xor
lcall
fadd
dec
xorb
mov
dec
aas
dec
lods
mov
sub
lods
adc
adc
scas
int
push
add
pusha
mov
and
ret
xor
xor
aad
add
sub
bound
lcall
sub
aad
xor
or
cmpsl
inc
xor
int3
cmpsb
mov
cwtl
leave
jno
icebp
aas
sub
push
dec
cltd
push
imul
fwait
out
repnz
ja
enter
xchg
lea
jg
mov
es
inc
mov
arpl
jp
jo
mov
xchg
in
add
push
push
pop
mov
ret
mov
push
repz
mov
or
jg
rorb
and
mov
incl
mov
dec
or
ljmp
nop
out
or
lahf
jb
jle
shr
mov
pop
lods
aad
pop
mov
xchg
fldcw
xchg
mov
scas
aaa
stc
sub
adc
jno
mov
addr16
cmp
xor
xchg
cwtl
xchg
lods
push
xchg
mov
and
insb
sub
adc
add
jmp
cmc
push
call
inc
fcmove
jnp
notb
stos
arpl
bound
mov
popa
adc
jae
jge
xor
pop
mov
das
inc
dec
xor
push
lret
lock
pmullw
jmp
js
adc
out
fwait
loop
scas
sarb
mov
jle
pusha
arpl
or
sub
cmc
into
into
dec
cmp
push
and
sahf
mov
test
mov
movsl
mov
and
cld
add
and
sub
cmpsb
jp
pop
sbb
jno
or
cld
cmpsl
cs
aas
push
sbb
js
std
fwait
or
stc
test
cld
push
test
outsl
dec
jmp
mov
pop
orb
sub
xchg
xchg
mov
shll
fcomp
stc
cli
or
pushf
or
jnp
pop
dec
push
aaa
es
pusha
xor
int3
sbb
les
jbe
add
inc
sub
lods
aam
mov
ficoms
int3
iret
cmp
jecxz
add
adc
movsb
popf
cmpsl
js
pop
dec
sbb
mov
test
jb
test
pop
cwtl
adc
jnp
mov
ljmp
or
and
xchg
inc
das
or
sub
xor
push
call
clc
dec
lcall
push
mov
dec
cltd
pop
call
pusha
mov
mov
pop
int
cmp
sbb
mov
in
fwait
jb
sbb
add
fisubrl
addl
movsl
or
jb
push
lea
jnp
in
pop
in
dec
loopne
imul
and
and
sbb
xchg
int3
sbbl
imul
xlat
xchg
push
filds
mov
leave
pop
je
sbb
xor
jle
sub
push
jo
or
popw
xor
mov
fcoms
inc
sbb
or
lds
xor
inc
jle
sub
xlat
adc
xor
repz
dec
fstpt
scas
bound
sub
cmp
pushf
mov
insb
movsl
add
cmc
push
jp
mov
sub
mov
test
mov
mov
cld
xchg
pop
sbb
cli
fnstenv
jns
xchg
sbb
mov
stc
adc
mov
insl
push
out
jno
outsb
mov
addl
insl
lret
test
ret
adc
pusha
xor
in
shll
dec
mov
mov
mov
mov
xor
test
popf
cmp
ds
rcl
out
lahf
sbb
cmp
mov
mov
push
lock
fidivs
adc
push
lcall
dec
push
mov
push
jo
jae
mul
in
ljmp
cmp
in
inc
outsb
xchg
push
std
xor
out
and
ds
repnz
je
inc
jle
data16
lods
repz
mov
xor
adc
cmp
je
loopne
cltd
pop
sub
mov
mov
inc
add
sbb
jecxz
push
inc
jnp
mov
dec
lcall
mov
rcrb
cmpsl
jo
xchg
mov
push
ja
sbb
leave
aaa
js
xchg
pop
push
shl
mov
dec
ljmp
fwait
and
mov
dec
bound
inc
out
clc
test
mov
pop
in
sub
lret
and
mov
jno
outsl
repz
cmp
dec
outsb
or
adcb
push
dec
adc
pushf
xor
mov
xchg
push
mov
and
lock
or
sub
test
mov
xor
stos
ret
in
cmpsb
sub
mov
push
mov
iret
cmp
stos
bound
cmc
or
cmp
cwtl
xadd
test
outsl
xor
mov
loope
xchg
int3
outsb
outsl
aaa
sbb
mov
dec
cmpb
pop
cmpsl
cltd
jg
in
and
inc
js
sbbl
scas
call
jb
and
mov
mov
in
inc
movsb
xlat
sub
js
arpl
mov
incb
iret
into
out
lds
cmpsb
std
or
pop
push
notl
insl
and
mov
and
add
cmp
mov
jo
xchg
pop
or
arpl
and
push
jle
sub
mov
not
in
stos
pop
les
arpl
jne
inc
xor
xchg
cld
sub
mov
fistpll
test
cmp
aad
cli
scas
mov
call
dec
mov
push
jg
ret
inc
mov
jle
jne
and
add
filds
into
or
inc
add
scas
mov
fdivl
aaa
leave
cltd
in
pop
mov
xchg
push
std
pop
jb
loop
in
fcmovb
and
add
mov
pop
cmc
sbb
std
mov
mov
cltd
jge
subb
sbb
pop
xor
out
xchg
cmp
dec
sub
stos
jne
mov
mov
pop
icebp
jb
fs
pop
aam
jmp
loope
dec
mov
mov
jbe
xchg
cmp
sbb
sub
xchg
scas
inc
or
push
xrelease
mul
sub
pop
stos
mov
mov
popf
cmp
jmp
aam
int
cmc
imul
stos
or
or
in
xchg
test
adc
mov
xor
cmp
out
dec
adc
test
adc
iret
bound
loop
add
cmp
andl
in
rol
pusha
imul
ss
in
cmp
pop
dec
adc
sbb
push
cs
inc
sbb
stos
or
add
xor
mov
jae
pop
lods
es
sub
jmp
cmp
mov
and
int3
loop
xchg
xchg
ds
iret
sub
nop
stos
fnstenv
in
cmp
enter
pop
insl
xor
cmp
pop
sbb
dec
in
je
scas
nop
inc
es
jne
test
call
push
push
lods
icebp
push
pop
xchg
jo
dec
pop
mov
pop
bound
fs
push
inc
xchg
mov
cmp
xchg
push
inc
fildll
decl
inc
sbb
sbbb
dec
lods
sbb
leave
mov
ret
test
cld
xchg
sbb
xchg
cmc
xor
stos
jo
ds
xchg
inc
cmp
add
call
in
repnz
jp
jp
lods
mov
xor
sbb
fistps
dec
adc
mov
sahf
dec
inc
dec
sbb
scas
es
or
aad
push
mov
sub
std
fsubrs
lret
notb
leave
jmp
ja
repz
inc
aaa
into
das
push
fimuls
subb
sarl
mov
ret
out
push
or
aaa
inc
lret
or
enter
mov
or
adc
lret
mov
jmp
sub
jns
test
dec
push
nop
and
jno
push
js
push
or
test
cmpsl
add
mov
pusha
negl
sub
mov
adc
add
push
mov
in
jbe
push
sti
ficoms
push
in
test
jae
mov
fs
inc
mov
cs
insb
aas
mov
jp
loopne
outsl
xor
ja
into
pushf
push
xor
mov
add
ficompl
jg
xchg
dec
xchg
sub
sub
and
push
cli
jb
xor
add
jl
mov
rcrl
aas
test
cmp
ret
cmp
loop
repnz
sub
cli
sub
or
aad
sbb
in
pushf
je
ret
pushf
mov
repz
xor
mov
sbb
testl
lock
sbb
popf
xchg
test
cltd
inc
out
push
sbb
cmp
xchg
pop
fstl
push
mov
in
int
arpl
push
out
out
inc
loopne
adc
notl
dec
enter
or
inc
push
aaa
adc
lret
pop
js
lret
imul
into
mov
das
push
xor
scas
dec
scas
and
dec
sbb
mov
or
add
aas
sbb
add
xor
jp
xor
fstps
jae
pop
nop
push
lds
insb
shrw
xchg
insl
dec
arpl
mov
inc
jb
push
bound
loopne
lea
jecxz
jg
mov
pop
adc
mov
mov
popf
daa
test
push
add
popa
cwtl
adc
les
inc
jmp
add
fcmovnb
outsl
inc
mov
jmp
sub
int
sub
scas
repnz
bound
jge
in
scas
and
add
mov
data16
jg
and
add
dec
out
add
loopne
push
add
jmp
pop
hlt
loopne
cmp
inc
xchg
scas
mov
stos
jg
push
gs
add
adc
or
push
ja
loope
or
inc
pop
pop
pop
cmp
push
aam
xchg
add
xor
push
lods
push
ret
push
fdivl
ds
lds
nop
icebp
int3
adc
fs
out
scas
std
mov
icebp
dec
popf
imul
iret
fwait
std
sub
jmp
cmpsl
jle
inc
loop
jle
dec
sbb
insl
mov
insb
inc
lret
mov
and
or
or
mov
mov
cmc
ficoml
dec
outsb
pop
in
jge
and
data16
xchg
xchg
pop
pop
leave
dec
lret
mov
rcrl
or
movsl
and
jne
pmullw
sarl
add
and
std
or
fnstenv
nop
mov
fwait
loopne
mov
push
xchg
adc
loope
adc
mov
inc
fsubs
cmpb
cwtl
repz
out
cmp
ljmp
mov
push
ss
jg
pop
faddl
fiadds
daa
mov
ret
jp
clc
lret
cmc
adc
pop
cmpsl
fistl
loop,pt
lods
cs
leave
and
jl
mov
xor
sahf
daa
repnz
insb
sub
mov
mov
in
xchg
xchg
cs
call
fstpt
xchg
js
inc
ret
imul
lds
inc
iret
xor
std
xchg
out
lret
lcall
push
cld
inc
mov
mov
out
push
frstor
imul
mov
lods
mov
leave
and
roll
xchg
ja
push
xchg
cld
cli
shll
mov
mov
hlt
pop
xor
mov
rclb
je
js
cmp
add
mov
pop
sub
repz
stc
mov
sbb
stos
mov
push
test
pop
mov
adc
xchg
mov
inc
mov
push
cltd
and
inc
sub
cmp
jge
or
xor
mov
sbb
mov
mov
or
scas
inc
cmp
hlt
imul
push
mov
cli
or
mov
lods
negb
push
jae
push
jecxz
mov
fcmovb
popf
sbb
cwtl
xchg
cmp
mov
clc
pop
adc
test
insb
loop
push
lcall
shl
inc
jbe
inc
adc
adc
adc
jb
xchg
sbb
mov
dec
xchg
dec
mov
fadd
sahf
inc
out
icebp
mov
popa
jno
xchg
and
dec
divl
jge
cmpsl
aam
cli
mov
add
fldl
in
mov
cli
rolb
sub
mov
adc
cs
in
xchg
or
scas
dec
lret
jmp
add
out
push
push
mov
sbb
sarl
pop
mov
mov
js
jle
ss
fiadds
mov
xor
push
cmpsb
mov
xchg
xlat
shl
rcll
add
mov
mov
pop
jb
cltd
scas
orl
sahf
jnp
inc
fnstsw
xchg
sbb
mov
daa
and
adc
mov
std
adc
lret
mov
orb
fs
fistl
inc
pop
jo
mov
lock
lahf
ss
sbbb
sbb
lahf
push
int
sahf
mov
outsl
lds
xchg
jecxz
push
or
loope
adcb
jge
and
aad
dec
inc
xor
mov
inc
shll
xchg
shlb
add
or
int3
mov
loopne
arpl
mov
mov
mov
xchg
pop
cmp
test
ss
fisubs
push
adc
call
decl
hlt
jmp
imul
pop
xor
test
mov
stc
stc
mov
inc
rorl
cld
out
push
in
jnp
pop
mov
cld
insb
je
test
arpl
test
jo
adc
fildl
repz
fs
inc
add
add
data16
inc
dec
cmpl
loope
sbb
xor
xchg
mov
jmp
adc
inc
push
mov
shl
xor
xor
xor
pusha
in
push
xor
dec
jmp
rorb
arpl
lods
sahf
jl
test
jmp
inc
out
in
in
cwtl
movsl
das
clc
bound
and
sub
fildl
fnstcw
fisubl
push
movsl
pushf
rorl
out
pop
pop
or
dec
mov
sahf
adc
fistpll
xor
adc
leave
xchg
rcl
aas
inc
jge
dec
xlat
or
jbe
cli
hlt
xchg
adc
imul
aas
mov
jl
test
cld
dec
popa
cmp
loopne
js
repnz
add
insb
lds
cmpsb
incb
mov
push
mov
push
lock
lret
aam
mov
int3
dec
imul
add
incl
and
dec
xor
xchg
xor
inc
pop
mov
push
pop
cmc
xorb
jnp
adc
loope
mov
xor
orl
inc
loope
mov
sbb
loop
mov
loopne
jb
push
sub
popa
mov
push
dec
adc
inc
in
cld
inc
out
pop
xor
leave
xchg
xchg
repz
scas
mov
sub
jne
and
ss
insb
ret
push
push
jmp
xchg
scas
xor
dec
lds
sar
je
clc
jo
inc
fmull
cmp
dec
mov
fisubs
push
lods
aas
arpl
cmc
push
mov
bound
movb
adc
roll
mov
stc
movsb
mov
fiadds
cli
aam
xchg
lret
test
ss
cld
and
sub
jmp
clc
pop
and
call
cmp
or
push
adc
enter
lods
add
nop
es
sub
repnz
xor
push
sti
pop
dec
neg
fadds
inc
scas
lahf
sub
dec
and
mov
or
test
inc
pop
xchg
rorl
inc
int3
outsb
mov
push
add
xlat
mov
dec
imul
in
jo
aad
jecxz
fnsave
out
add
add
adc
adc
jbe
std
mov
dec
popa
cmp
outsl
les
add
movsb
dec
test
out
testl
arpl
jmp
mov
mov
pop
shrb
fstp
rcll
out
mov
fcomp
popf
fistps
dec
loope
push
xor
pop
arpl
test
subl
add
or
stc
insb
insb
lahf
mov
mov
pop
mov
inc
outsl
jnp
jg
lock
int
sbb
ds
stos
and
xchg
ja
bound
cmp
or
ds
rol
in
xchg
arpl
mov
pop
push
adc
lock
sub
dec
mov
dec
pop
adc
jmp
test
mov
shrb
out
add
pminsw
add
rclb
ret
pop
adc
or
loopne
push
jbe
jbe
dec
bound
cwtl
lcall
mov
xor
xchg
ds
adc
loop
arpl
sub
mov
adc
mov
fnstsw
ds
subl
or
call
push
add
icebp
setg
pop
adc
push
sub
cmp
pushf
das
pushf
cmc
mov
shll
or
inc
cli
fidivl
stos
outsl
jb
dec
xor
jno
mov
aad
push
idiv
in
in
int3
int3
dec
xchg
cs
gs
inc
jns
idivb
js
dec
das
aas
xor
xor
fs
bound
adc
lahf
pusha
hlt
sti
mov
add
shlb
add
ljmp
sub
inc
mov
mov
or
jne
rorl
test
dec
jmp
shrb
loope
lret
sahf
cltd
ljmp
sub
xorb
jns
xor
in
icebp
lods
dec
addr16
nop
fistpl
daa
add
sbb
fs
mov
leave
sub
or
jo
mov
fcomps
inc
xchg
xor
xchg
cmp
repz
jno
mov
out
movsb
fcmovb
pop
cmp
inc
out
cmpsl
jg
add
cwtl
cmp
sub
jecxz
mov
mov
lods
dec
lods
fcmove
loopne
ja
lods
cmc
daa
fcomps
cmpsl
aad
push
or
xchg
and
leave
sub
loop
sub
shlb
pop
test
jns
aaa
inc
jg
sub
insb
stc
xor
ja
cmp
fcomps
push
fidivs
loopne
add
mov
inc
or
push
and
shl
insl
aas
mov
or
ror
cwtl
imul
js
rcrl
pop
loopne
mov
mov
mov
cs
xchg
es
test
mov
push
sahf
and
cmpb
mov
xchg
ret
gs
std
pusha
jno
xchg
mov
xlat
mov
adc
popw
test
call
mov
rorl
subl
jnp
mov
jmp
sub
xor
loope
and
mov
stos
mov
call
loopne
push
outsl
xor
ds
mov
test
repz
inc
rolb
not
ds
imul
je
mov
add
dec
xchg
inc
call
push
mov
push
cld
jecxz
aas
test
ja
cmc
mov
dec
mov
mov
dec
gs
aam
xchg
xlat
xor
inc
lret
pop
xchg
hlt
lret
icebp
sub
sbb
inc
ret
popa
es
push
adc
cld
xchg
adc
subl
les
bound
or
ret
stc
rcl
call
adc
pop
xchg
pop
inc
push
shlb
scas
pusha
sbb
mov
vpunpcklbw
xor
outsb
sahf
and
sbbb
pop
and
dec
cmp
jo
and
and
pop
cmc
xor
fldl
icebp
nop
jecxz
inc
jge
jl
lds
jecxz
addr16
fcompl
mul
push
icebp
xor
mov
mov
adc
push
xchg
or
les
aas
dec
cli
xchg
jg
pop
fidivrl
jnp
shrl
into
jbe
cltd
mov
sub
cld
mov
mov
je
mov
leave
jge
in
dec
mov
cmp
inc
pop
cmp
mov
adc
or
jle
sub
cmp
mov
sbb
or
and
or
imul
sub
mov
leave
or
cltd
xor
cmpsl
rorb
outsl
pop
jge
dec
mov
adc
jb
lret
inc
and
pop
sbb
push
ficomps
lret
push
pop
push
rclb
xchg
cmp
or
cmp
subl
push
stos
insb
xchg
stos
xlat
push
cmc
jno
mov
std
rcl
stos
inc
lahf
enter
mov
jae
pop
push
lret
rclb
or
and
bound
inc
outsb
pop
pop
mov
ret
xlat
pop
xor
pop
je
cs
fcoml
push
lea
je
fisubl
cmp
shl
sub
scas
aaa
pop
xchg
xchg
pop
flds
mov
push
or
fcomps
xchg
movsb
xchg
sub
fsub
add
outsl
jnp
fs
push
jb
sahf
loopne
xor
cltd
push
xor
aad
shrb
lret
imul
mov
adc
add
int3
repnz
insb
cmp
dec
xchg
test
dec
outsb
icebp
xchg
sub
in
test
jne
xchg
and
add
adc
sub
jae
fadd
push
cli
push
adc
ljmp
in
int3
mov
xlat
je
js
mov
mov
pop
hlt
dec
and
nop
ss
aas
or
inc
mov
adc
shlb
addr16
leave
cmp
mov
iret
es
inc
xor
repnz
xor
push
in
loopne
xorl
ja
xchg
addb
dec
outsl
xchg
cmpsl
pop
sti
movsl
pop
lock
enter
push
dec
lret
cmp
jns
fs
pop
mov
stos
ss
sti
loopne
jns
jo
popf
push
out
aad
cli
push
insl
adc
cwtl
fstl
xchg
lcall
test
mov
add
movsl
shl
jno
inc
fcomps
sub
out
mov
lods
insb
mov
jp
movsl
rdtsc
flds
imul
and
pusha
and
xchg
xor
sbb
out
sahf
roll
jmp
lret
cmp
dec
ret
lods
not
fs
mul
xor
arpl
adc
pushl
negb
pop
sub
icebp
ljmp
cli
mov
xchg
leave
sub
jne
loop
mov
daa
mov
loop
sahf
adc
inc
out
sub
add
xor
push
fildll
xor
int
jne
or
mov
pushf
clc
std
push
loopne
ds
fistpl
xchg
lock
stos
add
push
xchg
outsb
pop
mov
cmp
enter
pop
int3
in
sbb
imul
mov
cmpsb
jmp
divb
bound
iret
sbb
jb
xchg
in
push
in
push
inc
cwtl
lods
push
mov
jnp
stos
aad
push
lret
pop
push
cmp
pop
adc
push
sub
cmc
scas
es
cmpsb
insb
xchg
mov
ljmp
and
dec
pop
ds
outsl
dec
in
test
xorb
add
sbb
jl
mov
add
hlt
outsb
sub
xor
sub
adc
pop
add
popa
push
fadd
dec
adc
test
ss
xor
cltd
neg
push
in
dec
pop
test
xchg
insl
dec
ret
out
or
subl
mov
fcmovnb
push
repnz
cmpsl
xchg
mov
mov
dec
fwait
inc
fisttps
push
out
in
in
iret
adc
call
sbb
mov
pop
mov
scas
sub
hlt
lock
jns
xor
out
mov
int3
sbb
push
dec
mov
das
add
inc
mov
pusha
or
push
cltd
dec
mov
fwait
and
add
cwtl
mov
sub
xor
dec
jp
ljmp
add
jne
push
addr16
mov
mov
ja
pop
cli
jnp
stos
mov
arpl
pop
daa
pop
std
add
dec
int3
sub
xor
jecxz
mov
mov
xor
scas
sub
push
push
or
addr16
mov
inc
loopne
dec
lret
fidivrl
lock
xchg
aad
lcall
out
mov
sub
sti
imul
mov
pop
dec
inc
dec
adc
sub
loope
dec
scas
sarl
push
fiaddl
mov
adc
ja
xor
clc
popf
jmp
mov
jmp
sti
sbb
jo
loope
aam
mov
push
sahf
adc
nop
mov
xchg
cmpsb
mov
loop
xchg
mov
test
dec
push
sub
addr16
and
roll
mov
repnz
cmpsb
test
xor
pop
mov
scas
mov
fbstp
decb
mov
adcb
pop
sub
mov
int
fimuls
fcompl
loopne
mov
sbbb
mov
xchg
xor
push
loope
push
sbbb
or
mov
dec
fdivr
cmpsl
in
fxch
inc
ds
pop
sub
add
addr16
out
test
inc
or
scas
push
shl
jo
pop
sbb
and
popa
xchg
or
and
leave
xor
js
cmpb
jbe
dec
dec
dec
jle
adc
or
scas
jecxz
scas
pusha
je
aaa
adc
arpl
data16
imul
ja
jle
lds
outsb
jecxz
pop
xor
lea
outsl
inc
rcr
jge
inc
push
lods
sub
xchg
cmp
stos
movsb
xor
jb
mov
xchg
jmp
ja
call
fcmovbe
jp
adc
stos
in
push
mov
xor
pop
inc
push
leave
push
dec
mov
daa
in
mov
and
dec
or
das
sbb
sub
cmpb
adc
pop
xchg
cmpsl
xlat
adc
pcmpeqw
mov
clc
add
call
inc
push
in
inc
into
sub
jmp
dec
and
pop
and
lret
cmp
test
sub
frstor
sbb
dec
or
call
decb
fucom
or
xchg
xor
insl
dec
notb
xor
jne
pop
sarb
xor
popa
xor
mov
call
int
xchg
clc
mov
push
in
mov
lock
add
sbb
xor
fcmovnbe
cmc
cmp
ljmp
scas
ret
ss
sbb
sbb
jnp
shrl
lcall
jns
repz
fs
xchg
pop
stc
iret
bnd
lods
es
inc
sti
cmp
imul
ds
cmp
mov
shll
jle
test
es
xchg
xchg
and
inc
movhps
stos
ss
aas
scas
dec
cmp
mov
popa
push
cmp
movsb
popf
cmp
insl
test
mov
cmc
and
idivl
cmpsl
xchg
mov
aas
fbstp
pop
push
fcomps
mov
outsb
or
push
push
int
mov
jl
stos
jmp
xchg
add
cmc
mov
loopne
add
push
daa
jae
in
xorl
sub
lock
fisttpl
jmp
push
push
adc
adc
jae
hlt
mov
push
iret
in
leave
rolb
push
mov
ret
imul
mov
fisttpll
push
fcomi
add
rol
test
mov
mov
lock
fstpl
push
outsl
xor
int
and
cmp
sub
addl
cmp
mov
loopne
imul
jae
leave
add
sbb
pop
testb
mov
dec
sub
into
mov
cmpsb
pop
ret
push
pusha
jl
xchg
jmp
negb
inc
orl
push
xchg
outsb
int3
repnz
mov
rorl
cli
cmp
dec
or
dec
in
mov
rolb
ljmp
pop
fsub
outsl
in
jmp
push
sbb
xor
lret
jne
loope
add
lahf
frstor
insb
push
les
mov
int
push
pop
lods
out
xor
push
cwtl
mov
stc
xchg
loope
nop
aam
stc
fdivrl
push
gs
mov
push
lret
pop
lahf
xor
fadd
push
cmp
mov
les
add
shl
and
push
mov
bound
mov
push
xlat
xchg
sbb
dec
sub
ret
shrb
mov
sbb
xchg
clc
aad
or
add
subb
cmp
jne
in
and
and
pop
stos
cmp
jecxz
jle
adc
mov
pop
fabs
xchg
mov
add
jl
and
pop
push
aam
arpl
jp
pop
movsl
mov
fwait
inc
outsl
aad
push
push
fsubs
xor
shrb
and
jns
xor
stc
inc
pusha
outsl
add
stc
or
mov
jg
cmovb
out
ljmp
push
xor
mov
cmpsb
pop
mov
insl
or
icebp
or
push
test
jne
push
dec
jecxz
scas
dec
outsb
xor
push
gs
jge
mov
stos
inc
ret
mov
jle
stos
test
pop
or
push
push
sub
imul
pop
mov
lret
ljmp
inc
jns
testl
in
inc
pop
movsb
cmp
add
or
xor
mov
or
loope
repz
mov
push
lods
push
cmp
test
push
sub
xchg
and
addl
sbb
jne
xor
xchg
addl
lret
mov
iret
cltd
pop
mov
fstpt
add
into
xor
jmp
movsl
push
in
or
jno
out
mov
sub
mov
mov
pop
jae
xchg
stc
bound
leave
xor
rorl
inc
ficomps
or
sahf
xchg
std
adc
inc
adc
push
push
mov
out
or
mov
pusha
mov
push
aad
fsub
sub
je
call
mov
push
jo
jne
daa
cmp
test
rorb
fcmovne
add
ja
test
test
out
daa
jmp
sarb
into
mov
push
das
or
lods
jge
lods
xor
xchg
dec
push
push
ljmp
mov
flds
sub
push
mov
push
jp
js
inc
shlb
add
inc
testb
add
cmp
sarl
cmp
cmpl
ja
mov
scas
xor
pop
jle
bound
movb
int3
mov
test
mov
shlb
fmuls
cmovnp
daa
iret
ret
mov
ret
jno
xchg
xchg
pop
push
jne
mov
hlt
adc
pop
or
addr16
adc
and
scas
xor
inc
inc
cli
pop
mov
push
sub
cmpsl
pop
or
call
jg
mull
xchg
mov
dec
dec
or
push
int3
dec
inc
mov
shll
out
adc
lcall
push
inc
insb
jb
sub
sbbb
jmp
loop
stos
sbb
je
mov
ja
aas
in
mov
fadds
int
adc
lahf
add
sbbl
jg
inc
mov
sbb
xor
jl
fwait
mov
and
stc
inc
ret
js
pop
jle
adc
inc
adc
xor
push
jecxz
fnsetpm(287
mov
xchg
arpl
shl
lcall
and
cmp
adc
es
and
mov
in
scas
jae
jle
add
inc
lock
xor
cmp
jae
nop
cmp
loope
loop
push
sbb
aas
outsl
add
jno
gs
aam
xchg
xchg
arpl
sahf
repnz
push
xorb
add
int
addr16
sbb
into
movsl
pop
nop
mov
decl
leave
movsb
mov
push
pop
sbb
incl
outsl
clc
xor
push
sbb
push
or
hlt
mov
loopne
cs
movb
fisubrl
push
imul
mov
sub
stos
sub
sbb
lock
sub
cli
shl
stos
inc
push
pop
push
sub
out
sub
adc
push
dec
mov
push
adc
sbb
js
xchg
scas
stos
push
mov
xchg
fwait
in
xor
jns
into
sbb
cmp
js
fistl
fwait
jbe
adc
outsb
xor
lahf
sub
sbb
je
inc
pop
push
shr
movsl
adc
push
cmp
cli
lds
and
xchg
dec
inc
sub
imul
sbb
fcoms
loopne
inc
fistl
cli
push
negl
arpl
push
add
hlt
add
jno
aaa
sub
scas
xchg
and
repz
test
test
test
sarl
loopne
pusha
dec
lahf
lods
jg
cmpsb
mov
dec
int
ss
repnz
lods
xorb
ret
sub
inc
xchg
mov
sub
sub
mov
mov
push
pop
sbb
xor
sahf
dec
fcoms
sarb
xchg
pop
mov
cmc
aad
cltd
cmp
mov
ds
xor
jbe
push
xchg
sub
sub
push
pushf
xchg
push
test
and
imull
jne
push
std
mov
dec
pop
and
imul
fwait
out
jb
push
pop
push
inc
cmp
jp
xor
cmc
pop
inc
pusha
xchg
xor
jge
sar
jecxz
push
popf
and
shll
cmp
inc
cmpsb
ficompl
shrb
lahf
lods
pop
rcrb
xlat
fdivrl
divb
jg
xchg
rolb
lock
pop
arpl
lea
xchg
mov
pop
mov
imul
sub
mov
sub
mov
arpl
pop
es
scas
dec
adc
dec
jp
popf
and
jo
sub
enter
movsl
push
sub
ja
stc
mov
into
mov
and
dec
dec
loope
jo
mov
rcr
pushf
leave
std
xorb
lock
add
adc
dec
jmp
rorl
adc
fnstenv
fidivl
lret
sbb
jle
cmp
out
and
cmpsb
in
js
out
leave
xchg
nop
pop
sbb
pusha
sub
rcl
cmp
inc
imul
xor
into
std
push
ss
ret
or
push
in
in
je
ds
sbb
sbb
xchg
jg
outsb
fmuls
inc
aad
mov
scas
dec
sarl
xchg
std
fsubrs
jbe
dec
pop
cmpsl
loop
xor
pop
fwait
xchg
pop
mov
and
ret
scas
or
push
jl
pusha
std
xor
leave
jbe
nop
dec
scas
jbe
test
negb
xchg
in
jne
push
mov
in
ja
mov
push
dec
pop
push
test
int
aas
mov
xor
insl
sar
das
mov
or
lea
ljmp
push
add
std
cmpsl
xorl
xlat
sbb
fs
addr16
aad
push
add
jg
push
push
mov
cmp
mov
ds
stos
push
add
cmp
xchg
sti
aas
clc
cmp
sub
push
mov
faddl
mov
mov
jne
push
cli
push
fstl
insl
pop
jnp
add
jbe
das
hlt
cmp
inc
jae
jp
cmc
push
mov
sbb
mov
push
pop
loopne
mov
push
pop
ja
xchg
popf
cmp
fistps
notl
xor
mov
mov
pop
movsl
je
imul
idivb
xchg
pop
scas
jp
or
sub
mov
out
push
lcall
xor
in
push
ja
mov
aaa
dec
popf
orb
push
out
shll
pop
stos
ss
pop
mov
mov
push
xlat
test
test
pushf
pushl
sbb
xor
icebp
and
les
rolb
mov
lds
inc
push
aad
jl
ret
xor
dec
shrl
ret
and
mov
push
pop
and
jb
inc
add
sub
adc
test
ret
push
fimuls
cmp
or
je
scas
in
mov
out
cmpsl
or
mov
pop
xor
cmp
mov
mov
add
pop
ret
cwtl
cmp
pop
pop
jmp
jmp
push
push
mov
xor
add
jo
test
adc
out
mov
call
arpl
bound
lcall
xchg
xor
mov
fs
nop
scas
int
dec
filds
jl
aaa
out
jecxz
test
push
out
jns
scas
xchg
movsb
inc
push
xchg
jae
fcomps
cmp
or
mov
push
adc
addr16
into
pop
mov
lods
iret
lahf
cmp
cld
sub
or
fs
test
and
and
fsts
test
jmp
sbb
shll
sub
mov
fdivrl
pop
clc
mov
js
xchg
out
add
popf
xor
xchg
popf
insl
in
enter
jle
int3
mov
sub
sti
xor
imul
jo
push
fbld
test
lock
adc
cld
pop
test
cmp
enter
ljmp
push
mov
test
clc
mov
ror
cmp
dec
ss
dec
scas
mov
jecxz
das
jnp
mov
call
ja
xor
aas
sti
aaa
inc
mov
mov
sub
ret
jnp
lcall
jne
outsl
mov
cmp
cmpsb
mov
add
rorb
imul
push
mov
pop
pop
insb
popf
push
aas
stos
arpl
mov
rcr
jecxz
cli
nop
dec
cmp
in
orb
push
pop
std
scas
xchg
xchg
shl
push
adc
in
mov
jmp
dec
pop
xor
pop
push
fwait
sti
or
mov
ficompl
add
xor
js
fnstenv
adc
sbb
mov
jmp
repnz
jp
xchg
jb
push
cmp
push
cmpsl
jl
loopne
test
push
mov
adc
xchg
pop
push
int3
scas
adcl
addr16
add
and
cmp
ss
cmp
insb
pop
xchg
mov
pop
mov
jno
mov
mov
clc
cltd
ja
cmp
je
push
jnp
or
inc
aad
lds
int
inc
mov
or
and
add
int
push
insl
rolb
pop
cmp
mov
pop
sbb
inc
cmp
fs
jae
out
ljmp
inc
mov
ret
shlb
mov
mov
ret
stos
jmp
subb
fs
cltd
mov
in
test
pop
mov
popf
xchg
push
shll
mov
gs
jmp
mov
aaa
or
push
push
leave
in
aam
push
cld
and
pop
out
jo
out
repz
and
jb
dec
aam
iret
jnp
add
mov
insl
lahf
popl
pop
mov
jbe
xor
in
pop
or
ljmp
ja
ret
divl
subl
and
test
xor
jns
loopne
xchg
sbb
inc
adc
cmc
orb
jbe
mov
sub
add
mov
add
cmp
xor
pushf
repz
test
cmc
cmp
adc
addr16
adc
or
sbb
add
sbb
les
ljmp
sub
fcmovbe
xlat
loope
sbb
int3
stos
dec
ds
in
fwait
dec
imul
cmp
inc
push
dec
mov
dec
mov
push
push
neg
pusha
inc
fstpl
fsubp
leave
data16
cmp
imul
arpl
push
push
cmp
call
inc
mov
mov
sbb
iret
xor
pop
push
dec
jp
ret
cmp
xchg
out
or
mov
addr16
data16
add
pop
mov
xchg
fisubrl
inc
fnsave
outsb
in
cmc
mov
xor
dec
scas
push
clc
push
movsb
insb
pop
cmp
push
cmpsb
stc
add
aad
pop
cmp
and
jno
mov
xchg
sub
or
jp
inc
cmc
cmp
pop
xor
mov
fsts
into
xchg
outsl
fmuls
mov
out
cwtl
mov
sub
out
add
jmp
push
xor
loop
int3
dec
cmc
lret
std
ds
mov
sahf
mov
cmp
leave
mov
pop
mov
xor
es
mov
stc
mov
push
push
je
jno
push
mov
adc
push
into
pop
xorb
lods
cmpsb
jecxz
sti
cmp
jno
outsb
jecxz
add
leave
lock
fisubs
jecxz
jne
sub
push
add
adc
leave
mov
andb
pop
out
orl
jo
lahf
rcrl
inc
cltd
xor
push
pop
outsb
xchg
sbb
popf
out
popa
xchg
mov
sbb
pop
cli
mov
pushf
mov
pop
jns
cmpl
jns
stos
loop
dec
das
and
jne
fmuls
xchg
push
mov
outsb
jp
pop
xor
subb
lods
jg
scas
addl
inc
sbb
test
sub
ss
and
cmp
add
push
jp
mov
and
cmp
push
pop
dec
sahf
test
dec
pop
popf
sub
hlt
or
xchg
cmpsl
jmp
inc
loope
inc
adc
call
or
je
pusha
pop
jb
hlt
mov
hlt
push
jno
dec
ss
xchg
iret
jg
push
jmp
add
add
mov
xchg
jmp
in
icebp
mov
xlat
int3
add
mov
add
lahf
jae
adc
enter
in
data16
inc
ja
icebp
sub
lcall
mov
and
sub
dec
pop
insb
addr16
sahf
push
push
sub
push
push
shrb
mov
jmp
sahf
jg
in
pop
out
dec
fwait
adc
scas
lods
xchg
aaa
out
cmp
jge
and
mov
movsl
adc
add
inc
adc
add
jmp
cli
mov
add
daa
adc
or
and
and
mov
mov
ficompl
dec
out
out
or
pop
mov
out
cli
mov
pop
leave
pop
cmp
xchg
mov
mov
hlt
dec
and
or
mov
cmp
cmp
xchg
adc
or
xchg
cmpsb
or
std
stos
ljmp
xor
push
push
cmovl
and
imul
sub
repz
add
cs
add
lcall
push
rclb
pushf
loope
pop
mov
mov
or
aad
aad
inc
dec
add
push
addr16
insl
loop
mov
sub
out
in
dec
jmp
mov
fcoml
cwtl
ja
pop
mov
repnz
dec
mov
movsb
popf
jbe
or
inc
mov
add
jp
push
inc
add
and
inc
movsb
stc
xchg
ja
ljmp
jle
fsubl
xlat
cmpsb
outsb
mov
inc
and
push
aad
jge
test
shrb
jmp
jcxz
inc
pop
int3
fcoms
jnp
ja,pt
stos
and
arpl
push
icebp
mov
lahf
movsl
or
push
imulb
mov
push
hlt
in
ret
inc
scas
mov
mov
dec
dec
sub
fadds
inc
test
pop
adc
rcrb
xchg
or
pusha
xrelease
divl
add
push
sbb
in
push
mov
jne
inc
cwtl
jbe
roll
pop
test
testl
and
xor
sub
sub
stos
les
jbe
dec
jnp
aaa
mov
or
xor
out
jae
add
call
push
or
add
pop
scas
dec
mov
shld
mov
call
push
mov
cli
enter
orw
xchg
test
and
cmpsl
subb
das
rcrb
add
or
aas
jne
lock
xchg
imul
xchg
icebp
mov
add
out
aam
shl
push
mov
xchg
and
jle
push
jl
push
int3
mov
push
mov
jae
ja
pop
mov
dec
adc
shlb
in
push
jne
lock
sbb
add
test
aas
outsb
jg
mov
and
push
or
xor
aam
int
lds
ret
cmc
aaa
jns
cmp
mov
imul
icebp
ja
gs
jl
pop
sub
stos
leave
imul
dec
cmpsl
cmpsl
inc
xor
mov
or
out
sarb
push
stos
or
sbb
jns
mov
dec
jl
fsubl
push
jo
scas
shufps
sub
in
loopne
sub
pop
into
mov
mov
adc
pop
loope
push
testl
cmpsb
or
decl
add
out
cld
mov
mov
add
popa
add
popa
jge
stos
les
push
fs
add
pop
xchg
mov
int
aas
push
out
jne
arpl
std
push
adc
in
xchg
xchg
aad
ljmp
fwait
inc
push
push
andb
idivb
clc
icebp
leave
sbb
das
nop
ljmp
popa
jle
mov
nop
loop
addb
sub
cwtl
cmp
push
in
sub
lock
pop
add
aad
inc
mov
insb
mov
adc
jp
div
dec
xlat
shrl
cmp
jmp
lock
arpl
popf
gs
xchg
jno
hlt
popa
imul
jp
push
stc
mov
xor
push
in
jg
push
push
xchg
enter
je
inc
notl
incl
js
out
mov
rolb
imulb
vptestmw
popf
and
std
ret
mov
into
inc
sbb
pop
aas
and
je
pop
sbb
dec
fsubrl
jo
mov
je
mov
out
adc
js
push
hlt
and
xchg
shll
inc
test
fistps
add
dec
in
mov
xor
xor
fnstsw
clc
dec
data16
jne
inc
dec
int
ret
add
or
fdivs
jmp
loope
mov
push
stos
lods
in
fdiv
in
mov
inc
add
roll
cmpsl
lods
mov
sub
pop
xchg
xchg
das
or
pop
dec
sbb
in
popf
lods
aaa
out
enter
mov
pusha
outsb
xor
dec
mov
int
xchg
stos
ret
sbb
scas
cmp
mov
mov
cmp
insb
dec
push
xchg
outsb
stos
push
das
jge
test
jge
icebp
imul
xlat
xor
or
dec
inc
cmp
jl
into
mov
pop
cli
imul
lret
test
jno
out
daa
and
je
popa
pop
cltd
das
pop
pop
and
mov
clc
adc
xchg
dec
sub
dec
test
push
fcomp
xchg
or
cmp
lret
outsb
pop
ss
das
ficoml
dec
jecxz
pop
and
imul
sbb
insb
ret
lea
jne
jmp
cmp
cmp
ljmp
inc
out
sub
sbb
test
loope
mov
cmpsl
mov
add
fucomi
add
sbbb
aas
orb
xchg
faddl
movb
jb
adc
stos
jmp
push
scas
push
lret
push
inc
aad
or
xor
int
and
mov
sahf
xor
mov
and
mov
mov
idivl
xor
rclb
xor
lds
push
sub
adc
push
pop
arpl
cmovbe
mov
lods
bound
push
or
pusha
xor
sbb
dec
cmp
sub
pop
pop
push
cmp
pop
scas
xlat
sbb
jae
mov
test
fs
nop
mov
xchg
out
popa
inc
push
icebp
sbb
mov
jnp
jo
or
jmp
sarb
push
lret
jbe
jo
pop
or
rclb
icebp
lds
nop
popf
mov
sub
into
adc
into
mov
pop
loopne
pop
add
adc
lret
inc
jbe
sub
mov
mov
icebp
hlt
rorb
sahf
sub
jbe
inc
mov
mov
mov
mov
dec
fwait
sahf
fisttpll
dec
and
cmp
mov
or
mov
pop
adc
ljmp
pusha
mov
sbb
dec
jecxz
test
mov
push
pop
dec
sti
add
sbb
scas
in
pop
jmp
mov
fwait
sbb
bnd
scas
rcr
into
mov
pop
out
arpl
iret
jecxz
cmpsb
mov
sub
repz
sarb
lods
adc
jae
mov
in
pop
dec
divl
es
dec
add
test
sbb
pop
insl
pop
jecxz
dec
popf
lret
cmp
repz
xchg
mov
push
sahf
jb
and
pop
out
cmpsl
jns
insl
mov
and
mov
xor
loop
dec
sti
mov
lds
or
xchg
in
mov
rolb
add
or
or
cltd
sub
loopne
mov
aad
inc
and
adc
mov
fldcw
cltd
mov
mov
shll
sbb
add
pop
sub
mov
ret
cmpsb
sarb
stc
mov
test
push
shlb
movsl
test
js
xchg
roll
ret
jmp
loope
in
ljmp
ficoms
mov
mov
gs
data16
icebp
pop
push
xlat
sub
xchg
shll
loop
fisubs
xchg
lds
hlt
inc
and
test
lea
enter
fstp
dec
shlb
or
movntq
push
leave
and
or
dec
mov
jge
and
popa
call
inc
test
push
movb
jae
pushf
sbb
and
add
sbb
add
mov
mov
cmpsl
outsl
les
xor
push
lods
push
bound
push
xor
cltd
sub
cli
dec
insl
xchg
in
out
cld
call
cwtl
push
je
xchg
mov
mov
rorl
std
adc
xchg
lret
adc
hlt
dec
adc
enter
sti
xchg
out
push
cmpsl
enter
into
jl
sbb
mov
mov
arpl
cmp
ja
std
fsubrl
daa
in
cmpsl
or
dec
or
lret
push
push
mov
std
imul
dec
push
out
and
aad
push
jg
fldl
or
jbe
inc
aaa
stos
loope
pop
ror
cmc
cmp
loopew
xor
inc
lods
aad
into
jne
popf
push
pop
call
mov
clc
cwtl
sbb
adc
pop
stos
inc
sub
test
sub
push
xor
xor
ja
jo
cld
testb
inc
pop
jle
inc
test
adc
mov
daa
mov
and
xlat
nop
hlt
push
sub
pop
lahf
lret
loop
xchg
inc
pop
mov
mov
es
sbb
xor
add
popf
and
rcll
ficomps
imul
jnp
dec
hlt
xchg
mov
fld1
nop
dec
testb
into
dec
pop
pop
mull
xchg
jl
mov
js
lods
inc
jl
fptan
inc
lods
mov
rcrb
ret
jo
fidivrs
xlat
in
mov
add
lahf
mov
lahf
out
dec
daa
shrb
xorl
mov
adc
sub
cmpsl
repnz
or
pop
hlt
testl
push
clc
pop
mov
pop
mov
jmp
inc
jae
mov
lret
ss
cmp
mov
sub
xchg
lahf
cmp
jp
mov
add
sti
dec
inc
div
lods
sbb
dec
je
inc
xor
test
or
pop
mov
mov
add
roll
sbb
xchg
push
sbb
sbb
das
jo
mov
adc
bound
mov
pop
adc
call
mov
or
aaa
pushf
out
sub
shl
movsb
or
daa
scas
mov
fs
mov
jns
mov
int
jo
and
and
pusha
jmp
jl
mov
jl
ret
dec
out
mov
push
or
and
ja
push
call
mov
ficomps
mov
pop
dec
fstps
xchg
jp
xor
js
mov
jg
pop
xor
dec
pop
jmp
test
dec
or
ljmp
scas
in
cld
imul
cli
jmp
and
lahf
xor
xchg
fistps
cmp
or
jo
lock
adc
xchg
inc
imul
scas
imul
sbb
dec
std
inc
sbb
ret
int
test
fcmovnb
jmp
movsl
jp
icebp
adc
mov
jo
dec
mov
add
jnp
cmp
jbe
push
sub
sub
jne
ret
int3
dec
pop
push
ljmp
clc
push
ss
bnd
add
les
mov
repz
das
jmp
call
in
out
testb
mov
cwtl
mov
add
jne
aam
adc
ret
ljmp
dec
rol
out
add
pop
push
xor
adc
aas
pop
push
lods
cmp
aaa
jle
stos
rcrl
les
mov
cmpl
bnd
or
daa
cmp
filds
mov
cmpsl
and
es
cmpb
xchg
mov
ret
xor
dec
cwtl
subb
repz
pop
dec
aad
mov
int3
inc
xor
test
mov
ss
sahf
imul
aas
inc
ds
mov
cmpsl
fwait
sub
mov
or
shl
lods
cmp
pop
dec
stos
push
adc
push
popf
pop
pop
clc
leave
inc
mov
les
loope
jae
ret
nop
fstpt
insl
jbe
out
jmp
cmp
andb
sarl
imul
xlat
xor
xchg
dec
cmp
pop
sarl
shrl
out
mov
cmpsb
xchg
pusha
icebp
cmp
jno
push
lahf
cltd
lahf
pop
in
add
testl
sbb
hlt
sbb
xchg
xchg
fwait
rolb
enter
push
push
jg
lcall
sbb
sbb
jnp
cmc
arpl
cmpsb
sbb
xchg
xchg
psrlw
insl
jb
and
leave
inc
dec
ja
push
push
lahf
jae
add
lods
pop
aad
cmc
iret
lea
or
cmp
sub
popa
out
and
addr16
adcl
das
pop
inc
cmp
xor
fidivrs
inc
mov
das
jmp
ja
inc
sahf
push
push
dec
cmp
mov
mov
jne
cld
mov
pop
mov
gs
repz
bound
lret
pop
insb
dec
mov
xchg
insl
jmpw
int3
insb
push
adc
inc
mov
popa
pop
push
rcll
pop
fsubr
jecxz
movsb
std
dec
inc
xor
push
nop
mov
mov
xchg
aas
xchg
test
xorl
push
jb
pusha
fwait
xchg
es
xor
xchg
stos
xor
rolb
xchg
and
pop
mov
xchg
mov
aad
movsl
insb
lcall
pop
lret
outsl
enter
movsl
loop
mov
std
xchg
jo
rolb
mov
ret
pop
push
dec
mov
jle
inc
or
jecxz
jb
sub
push
stos
stos
aas
movsb
clc
jl
es
cltd
stos
adc
leave
cmp
xor
inc
gs
pop
stc
add
outsb
pop
add
inc
outsb
outsl
jmp
adcl
mov
shll
stos
mov
add
fmull
inc
mov
mov
pop
push
pop
mov
arpl
pop
ljmp
adc
iret
and
loop
addb
out
lea
movsb
cmp
cmp
push
test
push
sub
sbb
pushl
loop
fdivs
sbb
rolb
cli
dec
mov
in
loope
int3
imul
mov
lds
cmpsl
dec
fnstcw
insl
ret
mov
aaa
std
rcll
jbe
adc
movsl
and
sbb
cmc
in
out
and
cmc
iret
sbb
cli
add
lea
jns
scas
in
cmp
movsb
rcrl
xor
push
xchg
cmp
insl
cli
mov
lret
in
loopne
inc
add
mov
ja
in
push
inc
lcall
sub
dec
clc
inc
xlat
pop
insl
mov
movsb
in
js
loopne,pt
aas
xor
cli
mov
xchg
outsl
iret
pop
fsubrl
orl
stos
mov
femms
dec
jae
movswl
aaa
xchg
cld
adc
inc
pop
adc
push
rorl
and
ret
imul
cmp
mov
dec
call
fcomps
pusha
lea
lret
pop
adc
mov
inc
imul
push
pop
sar
in
cmpl
fmull
loopne
inc
ret
push
jmp
sub
add
dec
imul
lods
subb
dec
or
fdivl
sbb
ret
mov
pop
pop
adc
idivl
loopne
push
xor
adc
cmp
xchg
push
or
out
and
loop
inc
rorl
xchg
cltd
addr16
loope
mov
adc
inc
dec
je
out
mov
dec
ljmp
adc
pop
mov
cmp
shlb
pop
test
push
pushl
popa
jns
and
cld
pop
fidivs
ljmp
mov
lret
mov
pop
imul
lock
add
and
mov
outsb
mov
orl
push
insb
sbb
push
lods
js
mov
mov
out
xor
iret
ljmp
aam
mov
shrb
or
stos
xchg
scas
js
mov
test
mov
testl
jae
mov
fcmovu
rolb
mov
imul
fiaddl
fsubl
jle
ss
jg
addr16
lea
xchg
dec
addr16
or
or
fdiv
imul
push
enter
push
pop
xchg
pop
adc
movsb
pop
das
test
fcoml
mov
jcxz
jo
lock
jmp
mov
mov
fdivrp
mov
inc
cmc
inc
call
icebp
fcomps
dec
into
sahf
hlt
test
outsb
dec
outsl
mov
cmpsl
popa
movsw
xor
sub
or
mov
xor
xor
xor
xchg
pop
jecxz
xchg
lods
fists
pop
fidivrl
getsec
mov
and
shll
inc
or
add
sbb
and
push
movsb
pop
sbb
out
xchg
rcl
sbb
mov
imul
dec
testb
gs
ret
inc
fcompl
sbb
sub
mov
or
fwait
aam
rclb
xchg
icebp
inc
or
leave
pop
cli
push
leave
out
dec
mov
loopne
cmp
lock
pop
push
in
int
fstpl
xor
dec
int3
xchg
pop
ljmp
or
loop
mov
dec
xchg
sub
in
fisubl
push
dec
out
in
mov
repnz
pop
outsl
fdivl
rorb
incl
fisttpl
pop
adc
stos
shrl
or
pop
push
inc
mov
daa
clc
loope
stc
add
xchg
xor
pop
push
bound
push
adc
pop
popf
xor
add
in
cmp
mov
lds
jmp
push
pop
test
xchg
repnz
push
inc
xchg
dec
cmp
xchg
lods
fidivrs
cmc
dec
mov
mov
jne
sbb
popf
fdiv
insb
cmp
cmpsb
cwtl
push
out
test
mov
cmp
in
jno
mov
sbb
or
dec
in
sbb
aam
sub
fbld
ja
cwtl
je
adc
and
lret
ss
mov
jo
pop
adc
std
mov
loop
cmp
inc
aaa
push
lahf
xor
es
stos
ret
dec
push
repnz
lea
mov
jmp
in
rclb
pushf
stos
imul
sub
inc
aaa
mov
or
pop
loop
loope
inc
into
sarl
daa
xor
dec
arpl
addb
cmp
jb
enter
sahf
movb
mov
cld
into
cli
push
jo
mov
lods
bound
into
mov
repnz
lret
pop
dec
or
shl
push
ficoms
cmp
jle
push
outsb
pop
scas
pop
inc
or
pop
ret
imul
leave
pop
and
rcrb
jmp
sub
outsb
dec
cmp
mov
lea
mov
xchg
roll
call
ds
xor
mov
stos
inc
aaa
out
mov
cmp
jbe
jecxz
stos
xchg
add
in
paddb
scas
loopne
mov
and
cld
sub
test
mov
mov
push
dec
sbb
decb
ja
lcall
sar
insb
aaa
dec
fnstcw
mov
pop
and
dec
leave
jp
int3
adc
hlt
add
mov
test
xchg
cmc
sub
fldenv
xlat
pop
jne
dec
jno
imulb
lock
iret
aad
or
shrb
psadbw
or
cmc
and
xlat
xchg
out
outsl
stos
mov
push
push
mov
sub
pop
or
mov
pop
in
add
icebp
aam
scas
ja
mov
add
cs
out
jbe
add
cli
and
test
out
mov
out
aad
xor
push
stos
out
mov
into
pop
mov
andb
mov
jno
nop
es
decb
push
sbb
pushf
clc
in
clc
loopne
popl
std
pmulhuw
imul
inc
mov
push
aaa
and
aaa
daa
sbb
xor
mov
stos
addr16
sbb
pop
inc
test
or
loop
aaa
in
fisttps
xor
mov
jo
fldt
sbb
xlat
hlt
daa
std
test
jb
and
repnz
js
xchg
mov
pop
mov
or
outsb
repz
arpl
mov
nop
int3
mov
pusha
addl
pop
out
addb
dec
xlat
cld
lock
outsl
xor
je
jg
lods
dec
xchg
jle
movsb
jmp
jmp
adcl
dec
cmc
jle
fsubr
and
jno
cmp
popa
lock
popa
mov
clc
mov
xchg
fwait
add
cmc
mov
dec
adc
push
movsb
push
ds
shl
push
hlt
movsb
pop
loopne
push
xchg
icebp
xchg
mov
test
and
xchg
mov
push
mov
mov
test
in
push
and
testl
lahf
xor
imul
test
fsubrp
lret
xor
into
inc
insb
adc
ljmp
xlat
sub
adc
stos
call
call
ja
sub
int
test
xchg
push
cmp
dec
test
shlb
fistpl
jecxz
mov
xchg
adc
mov
sbb
adc
jne
imul
loopne
inc
in
and
inc
jp
ds
gs
sub
mov
addr16
cmp
add
jnp
sbb
add
mov
jp
icebp
aaa
imul
std
jp
cmc
mov
mov
aas
dec
test
add
enter
test
jns
mov
mov
int3
mov
jnp
inc
xor
xchg
ljmp
mov
jmp
push
in
aas
jbe
or
jmp
pop
add
ret
mov
push
or
xchg
dec
testl
cli
hlt
aas
add
inc
push
daa
jl
andb
mov
subb
jae
dec
xchg
fs
mov
int
rcl
and
stos
xchg
daa
pop
mov
js
push
jbe
repnz
pop
or
adc
lret
mov
adcl
stc
cmpsb
pop
and
pop
insl
mov
div
push
mov
xor
sub
inc
xchg
mov
jg
pushl
js
cld
pusha
aad
popf
insl
int3
decb
sub
push
dec
dec
push
paddw
insb
imul
sbb
pop
mov
dec
movsl
jecxz
xchg
sub
fwait
ss
in
outsl
xchg
cld
mov
mov
mov
movsb
lahf
bound
jg
test
out
mov
fs
lods
rorl
scas
ret
jnp
jmp
xor
push
xchg
dec
lahf
jecxz
sub
xor
incl
mov
pop
inc
xchg
and
test
movsl
stos
lods
mov
jns
sub
negb
inc
fs
dec
roll
cmp
push
hlt
push
and
inc
xchg
ds
inc
and
push
pop
out
stos
cld
inc
cmp
mov
mov
and
jno
and
sbb
sub
jbe
call
and
call
stos
fists
daa
ljmp
inc
insl
and
fildll
fsubs
testl
outsl
cmp
mov
bound
and
push
cmc
jl
test
mov
outsl
es
inc
fs
test
mov
lret
sub
in
add
call
sbb
push
push
inc
int
fiaddl
icebp
push
inc
pop
test
sbb
push
lods
jp
addb
cmp
xor
icebp
push
imul
mull
jle
xor
jae
out
iret
push
sub
stc
lahf
push
nop
out
jecxz
mov
jmp
dec
js
xchg
push
jae
fwait
push
or
jo
mov
outsb
inc
insl
add
in
jg
mov
inc
lds
dec
call
jp
inc
ficompl
insl
aaa
scas
les
sbb
dec
adcb
adc
jae
inc
add
sbb
dec
sbb
xor
push
popf
push
cltd
pop
daa
mov
fcomip
into
imul
lret
dec
addr16
pop
loop
dec
or
xlat
pop
lods
jae
sub
pop
cmpsl
rolb
xchg
movsb
les
lcall
insl
adc
or
xlat
cmp
mov
cwtl
sub
mov
and
mov
add
push
int3
add
push
repz
pop
mov
scas
in
fstps
aam
adc
outsl
mov
push
or
int
and
repz
cmp
inc
jnp
inc
mov
outsb
inc
js
and
fs
cmc
push
push
cmp
mov
dec
pop
cmp
push
mov
ret
xchg
pop
je
or
ret
out
pushf
cmp
inc
pop
ret
mov
xchg
je
sub
and
test
jl
pop
inc
mov
xchg
test
jae
xor
xchg
fldl
pop
stos
test
xchg
mov
int3
out
js
or
inc
jecxz
shr
movsb
jmp
xchg
mov
inc
lock
cltd
adc
jo
mov
sub
adc
push
movsl
idivb
test
sub
dec
sub
sbb
adc
aaa
push
sbb
mov
push
pop
push
and
shl
sbb
xchg
jle
lret
in
jnp
add
lods
push
jo
fcmovnu
arpl
out
pop
subl
mov
jne
push
dec
lds
jle
pop
adc
push
negb
fldcw
pop
add
sub
adc
movsb
push
jp
or
mov
lds
jmp
fucomi
and
xorps
push
popf
mov
dec
pop
cmp
addr16
xor
les
jo
hlt
dec
gs
ja
and
jae
fucomip
addr16
mov
xchg
ret
inc
jb
sub
jno
xor
andb
and
push
pop
lcall
pop
xchg
lods
jae
pop
xor
cs
insl
mov
andb
stos
sbb
xchg
xchg
adc
adc
fcmovnbe
add
sub
les
repnz
adc
int
dec
roll
push
xchg
pop
adc
jl
int
add
jns
cld
aam
stos
stc
ret
repz
fldenv
add
ss
cli
aas
push
popa
loope
inc
cltd
test
subb
aaa
mov
mov
fwait
xor
test
dec
loope
fwait
addr16
push
add
rcr
and
sbb
fnstsw
loop
cltd
jno
scas
mov
jle
cltd
lahf
imul
testb
rcrb
pop
xchg
mov
push
jb
jae
push
mov
das
sahf
scas
lahf
sarb
call
shr
xchg
jo
jecxz
in
dec
shl
adc
pusha
adc
xor
inc
mov
cmp
test
dec
ret
mov
mov
add
sarb
adcl
adcl
sub
adcb
test
lret
mov
push
leave
pusha
imul
adc
pusha
popa
or
sub
inc
sbb
icebp
bound
push
cs
sub
enter
testl
test
mov
in
outsb
shrb
mov
dec
mov
movsl
loopw
adc
test
xchg
adc
mov
mov
or
push
insl
xchg
sub
mov
dec
push
push
jmp
jo
jnp
pop
inc
pop
nop
lods
test
cwtl
fcmovnb
ret
pop
loope
mov
add
xlat
mov
inc
loopne
mov
test
ficoml
hlt
mov
adc
mov
cld
repz
je
jmp
dec
pop
pop
outsb
lret
jbe
imulb
out
sbb
mov
mov
xor
or
jne
jnp
cs
add
pop
inc
enter
repnz
push
in
mov
dec
ja
inc
lcall
mov
into
sarl
add
into
movsl
std
loopne
and
mov
in
sub
jo
lcall
jnp
scas
adc
cltd
pop
cmp
js
jg
popf
stos
into
adc
insl
ret
leave
sbb
into
push
mov
addr16
pop
in
pop
pushf
pop
fisubs
xor
ss
cmc
ss
xchg
popa
stos
xchg
lret
dec
add
stos
outsl
add
lret
out
addr16
jne
mov
inc
push
fldl
shl
mov
scas
mov
pop
cmp
xchg
sub
stos
add
mov
and
in
mov
mov
stos
or
outsl
xor
sahf
xor
push
push
ss
push
repz
add
inc
in
jno
dec
sub
data16
mov
xchg
jg
sbb
jge
mov
xchg
sbb
push
dec
outsb
push
or
dec
je
add
ljmp
pop
movsl
loop
mul
pop
adc
insb
xor
in
mov
xchg
pop
je
jp
inc
rcrl
xor
iret
rorl
inc
mov
scas
or
fs
fcmovnu
in
pop
in
lea
or
push
push
jmp
xchg
inc
fiaddl
pop
push
dec
ficoml
call
dec
pop
int3
decb
jge
pop
lods
insb
push
aad
insb
mov
leave
cmpsb
dec
jb
add
mul
sub
mov
mov
sahf
nop
adc
int
mov
scas
test
adc
or
icebp
dec
mov
pop
push
inc
inc
or
push
std
fwait
sbb
sub
sahf
mov
sbb
jo
sahf
xchg
adc
jle
add
mov
adc
enter
bnd
aam
mov
and
lds
jmp
cmp
xor
push
pushf
add
inc
adc
fstpt
imul
xchg
cwtl
shr
add
jo
mov
testl
icebp
push
mov
dec
xchg
mov
out
xchg
inc
pop
inc
add
test
imul
stos
dec
lds
mov
jl
stc
push
ja
cmpsb
andl
and
jbe
or
cmc
xor
in
rcrb
movsl
repnz
lea
mov
sbb
push
jecxz
in
xchg
in
stos
int3
dec
jb
fwait
rol
add
pop
cmp
lods
or
jl
daa
jmp
sbb
loope
outsl
cmc
nop
mov
inc
lret
in
cmp
sbb
cmp
xchg
pop
sub
xor
push
jecxz
andb
roll
and
pop
xchg
js
pushf
fndisi(8087
lea
mov
inc
fimull
lea
push
dec
mov
inc
mov
xchg
mov
inc
lcall
mov
hlt
jmp
pop
daa
aam
add
sub
stos
push
andb
inc
push
pop
xor
xchg
arpl
mov
ja
lods
sub
cltd
xor
call
scas
aaa
int
fimull
and
adc
lods
in
cmp
add
jb
pop
pop
in
jne
pop
neg
mov
adc
and
inc
adc
test
repnz
lods
push
or
out
fsubp
jg
js
and
adc
push
pop
popa
mov
add
dec
int3
insl
push
dec
daa
xchg
in
jnp
aaa
jo
push
mov
mov
loopne
pushf
mov
mov
xor
arpl
push
xchg
push
cs
fwait
cmp
cmpb
pusha
mov
jecxz
or
enter
cltd
orb
add
xchg
loopne
mov
jge
or
clc
aas
in
mov
pop
mov
in
in
mov
scas
rorl
inc
xchg
mov
adc
xchg
xchg
mov
fxch
sub
loopne
xor
int
int
jo
lock
push
gs
popa
mov
pop
gs
jge
out
sub
mov
clc
nop
sbb
mov
lock
mov
adc
testb
add
dec
xchg
scas
xchg
push
mov
inc
jnp
pop
nop
inc
lret
insb
mov
lahf
and
fs
cwtl
popf
lock
mov
popa
mov
jle
aas
xchg
mov
adc
sbb
loope
and
pop
cmpsb
outsb
mov
xor
fisubrl
out
jg
cs
add
xchg
pop
out
inc
ss
pop
movsl
mov
adc
mov
push
stos
sbb
decb
xor
mov
jae
jae
and
insl
out
push
repz
jns
mov
in
sahf
fsubrp
pop
aas
jl
xor
enter
cmc
rcll
sub
subb
scas
adc
dec
push
mov
jle
cmp
push
add
fistps
mov
mov
mov
out
outsl
xor
fwait
sub
and
cmp
dec
loope
mov
lcall
dec
dec
add
cmpl
xor
mov
int3
insl
jnp,pn
xchg
fmull
or
push
ds
mov
push
and
or
cmpsl
mov
repnz
add
bound
imul
js
mov
loopne
js
ja
insl
aas
outsl
inc
iret
test
push
jb
lock
jno
movsb
and
mov
xchg
popl
lods
mov
mov
sbb
jbe
addr16
scas
jp
xor
xchg
inc
rcrb
ljmp
push
fcmove
shrl
push
adcl
lea
out
add
imul
xchg
stc
leave
dec
jg
pop
push
idiv
dec
ljmp
out
adc
imul
add
stos
pop
mov
not
sbb
fsubs
repz
sbb
xchg
out
pop
lret
push
cmp
fiadds
xor
stos
inc
out
sub
test
mov
jbe
scas
dec
push
cli
out
xor
push
mov
push
push
sbb
lods
inc
push
cmp
push
cmp
nop
pop
paddsw
leave
sub
stc
clc
adc
cwtl
and
in
xchg
pop
enter
sbb
adc
sub
sbb
stc
inc
sub
andb
enter
mov
sub
mov
mov
push
stos
addr16
frstor
scas
lret
dec
arpl
cld
jno
stc
inc
daa
ja
cs
int
daa
jle
jmp
enter
dec
iret
xor
mov
inc
aad
int3
mov
fwait
pusha
mov
jno
mov
pushf
int3
sahf
scas
and
jle
cmp
or
data16
pop
inc
aas
in
mov
cmp
sub
pop
push
ret
fimull
mov
push
ss
repnz
mov
test
push
pop
xor
push
pusha
jl
jb
mov
mov
inc
mov
pusha
inc
xor
cmp
call
cmp
adc
xchg
sbb
ljmp
sbb
fs
cs
cmp
jae
dec
cmp
loope
xor
sub
dec
mov
adc
test
xchg
into
adcl
inc
subb
push
dec
cli
ficoms
xchg
xchg
ret
in
in
ja
cld
fisubl
jno
mov
in
dec
aaa
xchg
movsl
dec
int
mov
rcl
mov
add
xchg
inc
inc
ret
pop
push
pop
push
add
pop
and
mov
pushf
xchg
cmc
add
aam
in
lret
jmp
outsb
xchg
lods
jp
cmpsl
mov
mov
or
inc
scas
fs
sbb
or
andb
int3
shll
cmpsb
push
mov
fstp
xlat
in
jge
in
dec
add
arpl
fsts
mov
mov
pop
mov
ljmp
mov
and
push
xchg
sub
ss
lea
fsubrs
add
mov
mov
in
je
mov
mov
mov
mov
inc
adc
imul
lret
aaa
movl
mov
das
and
repz
ja
push
pop
les
pop
fs
add
adc
pop
out
lahf
icebp
popa
mov
xchg
sub
sar
cmpl
gs
dec
xchg
jne
adc
sub
jg
sbbl
ja
ja
fildll
aaa
repz
cmp
mov
roll
dec
jg
mov
js
dec
stos
xchg
jbe
and
xchg
push
mov
and
xor
fcmovnu
mov
pop
xchg
lods
rcrb
mov
es
add
mov
sti
repz
mov
or
xor
add
stc
and
push
dec
xchg
repz
pop
lcall
mov
sbb
xor
dec
ret
xchg
scas
iret
call
dec
mov
xchg
pushl
sub
sub
outsb
out
idivb
cmc
add
adc
inc
fsubrl
inc
mov
loop
test
daa
xorl
incb
and
add
insl
test
jg
lahf
fcompl
sub
inc
or
arpl
xchg
xor
mov
sub
mov
lds
lds
icebp
mov
add
shlb
rcrb
leave
inc
notb
fs
fs
outsb
cltd
out
aam
inc
dec
xorl
popa
sub
adc
loope
lahf
test
popa
push
xor
cmc
jne
popa
cmpl
cmpb
popf
es
aas
xchg
xor
xchg
cs
loop
jae
dec
or
xchg
je
stos
or
int3
mov
sub
adc
lea
aam
dec
aad
cmp
adcl
push
pop
addr16
das
mov
arpl
and
mov
addl
or
jecxz
imulb
xor
bound
std
xchg
mov
test
jg
test
imul
jne
push
pushf
lods
xor
push
and
and
shlb
mov
idivb
adc
mov
mov
ss
scas
dec
aaa
add
dec
cmp
jge
inc
imul
mov
imul
adc
lds
out
cmp
mov
je
push
out
pop
out
mov
pop
rcrb
shlb
inc
pop
and
imul
insl
sub
pop
push
idiv
push
adc
dec
roll
repz
adc
sub
or
outsb
mov
lds
dec
xchg
mov
aas
or
sbb
iret
dec
mov
mov
clc
pop
mov
fstpt
clc
xor
mov
xchg
cs
movsb
push
dec
adc
pushf
fmull
out
dec
cltd
or
inc
jmp
sbb
jmp
pop
cmc
pushf
mov
clc
movsl
or
sub
push
dec
test
or
jl
and
pop
inc
movsb
mov
loop
inc
leave
mov
insb
aam
clc
loop
jl
or
jp
lds
ret
bound
dec
fstpl
cmp
dec
jecxz
das
jnp
push
sbb
or
fs
jno
pop
push
leave
in
lock
xor
push
mov
or
cmc
subb
lods
inc
sbb
ret
pop
push
push
jo
rorb
push
pop
add
out
int3
and
mov
int3
mov
in
dec
lods
loope
inc
mov
push
and
push
push
mov
scas
pop
in
jbe
adc
pop
fstp
adc
repnz
mov
jbe
mov
cwtl
adc
cmpsb
adc
push
incl
movsl
jnp
mov
cmp
mov
ret
jns
das
leave
dec
push
test
imul
inc
or
outsb
sbb
shll
std
mov
jp
pop
cmpsl
repz
jecxz
ss
cmp
icebp
jbe
push
in
and
mov
cs
in
jmp
push
push
mov
xchg
mov
icebp
jns
jns
pop
mov
icebp
inc
push
sbb
cmc
cmp
add
nop
outsb
or
movsl
xchg
jb
inc
fcmovne
xor
adc
das
xchg
cli
adc
bound
int3
add
adc
rol
repnz
jno
inc
dec
xchg
push
in
sbb
mov
js
loope
xchg
adc
jp
sbb
int3
mov
repz
cmpsl
jo
sbb
pop
scas
push
lea
jns
in
bound
repz
aad
ds
xchg
adc
jae
outsb
dec
loopne
mov
push
pop
out
jae
mov
mov
fisttpl
mov
out
jno
push
push
inc
mov
jno
mov
mov
scas
cmpsl
rcrb
xchg
xor
sbb
and
icebp
stos
popa
lea
xlat
icebp
es
add
and
pop
pop
test
scas
jp
inc
fmulp
jl
xorl
lods
mov
sti
push
popf
es
xor
sbb
push
pop
xchg
fidivrs
clc
sbb
das
push
ret
fcmovnb
lods
gs
stos
in
mov
xchg
mov
int
cmp
or
push
jmp
call
pop
jle
xchg
movsl
xchg
jo
sub
psubusb
jge
mov
push
sahf
xchg
ljmp
jns
test
imul
jnp
xchg
and
xchg
in
mov
sbb
pop
pushf
outsl
xchg
push
ja
les
cmp
je
lods
xor
hlt
mov
insb
add
xlat
xchg
lods
add
mov
jmp
sub
push
push
test
insb
inc
lea
mov
adcb
cli
popa
xorl
jg
mov
rorl
movsl
stos
popf
out
or
arpl
aam
mov
push
decb
mov
ljmp
pop
mov
in
push
inc
pop
inc
aaa
out
and
mov
jae
xor
fcom
enter
jne
ljmp
gs
xchg
pop
push
scas
les
ljmp
dec
push
fimuls
pop
xchg
push
fwait
out
lds
jb
jo
imul
insb
push
add
andb
sbb
jae
jne
mov
cmp
push
jo
dec
std
sbb
fdiv
dec
mov
push
insl
ffreep
push
jnp
mov
or
xchg
outsl
pop
outsb
popa
or
add
xchg
divb
sbb
out
in
jns
lods
test
movb
mov
imull
lock
xorb
cmp
adc
and
lret
or
or
leave
subl
mov
rcrb
addr16
aad
push
daa
sbb
mov
jae
mov
jmp
push
adc
divl
in
icebp
adc
mov
aad
lods
or
jp
je
and
dec
fldl
sarb
lds
jo
and
sbb
fistpl
dec
insl
insb
stos
sub
mov
dec
incb
insl
mov
lock
sahf
sbb
mov
and
pop
jle
stc
and
mov
inc
daa
sahf
add
es
ss
or
pop
push
inc
adc
add
and
lahf
orb
sub
pusha
pusha
jne
outsb
dec
andl
out
xchg
mov
push
xor
push
in
mov
lock
shll
pop
and
lds
jmp
push
loop
cmp
cli
addr16
pop
xchg
lods
mov
das
dec
add
sbb
sbb
testb
fadd
mov
mov
and
fwait
aas
mov
add
sbb
xchg
pop
test
xchg
add
sbb
xchg
mov
lods
data16
imul
inc
lret
push
add
sub
movsb
sarl
adcb
pop
jle
jnp
arpl
cmpsl
sbb
xchg
into
fbstp
mov
clc
jns
loope,pn
push
outsb
pop
inc
in
xor
sub
jne
push
in
ret
push
xchg
add
push
add
and
jle
xor
sahf
shrl
fnsave
ficompl
mov
inc
push
add
test
rcl
adc
mov
mov
cwtl
pop
je
or
jo
jl
dec
hlt
mov
rcrb
jecxz
sub
add
lret
aas
das
cmpsl
pop
imul
call
pop
pop
jns
push
fldt
push
pop
popa
lret
push
mov
nop
sti
jmp
push
jnp
add
and
js
cmp
pop
jg
sbb
scas
outsb
sbb
xlat
pop
jbe
pop
mov
cmc
jne
push
push
adc
mov
lret
mov
dec
mov
es
lcall
in
xchg
shr
mov
mov
sbb
imul
out
inc
out
in
pop
int
sbb
outsb
aas
mov
cmp
arpl
fmul
call
sbb
adc
sbb
dec
testb
sub
sahf
fidivs
xor
sahf
cmp
inc
push
repz
ja
mov
add
out
mov
sub
add
sub
pushw
pusha
xor
mov
cli
adc
sub
add
or
out
into
das
loope
test
lret
xor
lret
or
hlt
insl
aaa
bnd
lds
lcall
shr
shlb
fwait
pop
into
fldcw
neg
cli
rcr
jmp
and
pop
idiv
mov
popf
into
out
cwtl
sbb
cli
cmp
shrl
addr16
mov
inc
test
in
sub
leave
and
pop
push
xor
dec
ljmp
xchg
push
dec
popf
lods
dec
movsb
jge
lea
pop
mov
les
jo
cmpsl
jmp
xchg
shr
cmc
and
sub
xchg
stos
add
jmp
pop
pop
ja
fcmovne
and
dec
js
mov
pop
insl
sub
xchg
in
sti
cld
imul
cmp
and
es
mov
test
add
mov
lahf
or
lods
jmp
jno
or
out
lds
or
mov
sahf
fsubrp
ret
clc
out
fcompl
sarb
xor
repnz
push
outsl
and
ja
pop
mov
add
insb
loop
out
cmp
xor
mov
push
aaa
mov
outsb
out
cmc
xchg
adc
inc
cmp
mov
push
ror
stos
fsub
arpl
jnp
add
push
sbb
ljmp
shl
and
arpl
xchg
cmp
or
push
repz
out
dec
sub
xor
jb
dec
mulb
sbb
cli
inc
push
xchg
outsb
inc
xchg
cmpsl
mov
insl
out
add
and
movsl
daa
sub
sub
rcll
push
pop
cmp
dec
cmp
in
lock
and
ds
in
and
push
test
mov
mov
xor
and
or
cli
stos
ja
fwait
mov
xacquire
mov
daa
xchg
cbtw
dec
jb
add
shrb
sbb
push
jp
out
jecxz
jmp
xor
test
ss
add
cld
push
cmp
jb
sub
adc
lcall
ljmp
push
sbb
push
sti
or
and
dec
out
fcoms
cmp
loope
pop
jmp
jmp
dec
xchg
and
or
inc
sahf
testl
add
xor
cmpsl
je
cmp
add
shrb
push
loope
lret
pop
aas
cmpsb
mov
push
insb
stc
ja
mov
movsb
and
ja
pop
adc
cli
inc
dec
cmp
sbb
int3
mov
negb
jge
mov
push
xchg
loopne
ljmp
push
push
push
mov
push
ss
mov
adc
push
sub
movsl
jge
cmp
pop
gs
pop
fimull
movsb
inc
shl
pop
jbe
mov
push
dec
cmpsl
mov
outsb
aam
cmpsb
dec
fistpl
mov
adc
lock
test
xlat
test
sub
sarl
andb
cmovge
mov
jge
test
movsb
cmc
jae
inc
cltd
xchg
test
add
xchg
out
xchg
dec
pop
bound
xchg
sbb
cmp
xchg
xchg
pusha
and
dec
mov
xchg
mov
mov
and
rcll
push
jmp
cmpsb
mov
sub
mov
jle
sub
cwtl
outsb
push
lds
scas
dec
xchg
or
icebp
dec
mov
jg
adc
pop
popa
mov
ja
or
loope
push
cmpsb
xchg
or
sbb
xchg
mov
mov
adcl
inc
fs
mov
inc
and
xchg
mov
sbb
jbe
adc
mov
lods
arpl
add
andl
jbe
mov
push
insb
jnp
ja
lret
jnp
sub
cmp
aaa
adc
aas
ds
and
imul
sti
dec
lods
fdivs
push
add
enter
aam
sti
cmc
mov
inc
inc
das
and
mov
jbe
xchg
sbb
repz
test
lcall
jecxz
pop
and
or
imul
les
daa
mov
and
ljmp
repz
idivb
imul
mov
mov
jecxz
and
mov
mov
minps
mov
add
fcmove
loop
and
gs
scas
iret
in
pop
add
pop
add
scas
dec
rcll
pop
lret
push
dec
aas
cli
popf
andb
or
test
lock
lcall
popa
dec
scas
mov
cs
and
outsb
cmp
leave
sbb
ljmp
out
adc
pop
jnp
sub
cli
ja
pop
pop
adc
cmp
insb
fldt
idivl
dec
mov
sbb
push
std
movsl
mov
fldl
mov
test
push
or
addr16
rcrl
loopne
out
adcb
and
repnz
push
push
mov
xor
and
and
test
mov
arpl
xchg
pop
aas
jecxz
mov
pop
inc
xchg
mov
sbb
out
aaa
je
xchg
sbb
jae
leave
popa
shr
or
and
mov
popf
andb
stc
pop
jge
popa
inc
pop
in
push
icebp
jl
scas
shl
jmp
xchg
push
sub
fwait
pop
xor
adc
mov
sub
jo
test
lret
inc
stc
in
roll
in
inc
aam
sarb
loop
push
lret
push
shr
ljmp
popa
les
das
out
das
call
sbb
jmp
out
xchg
test
cmp
outsl
xchg
lods
stc
test
xchg
cmpsl
inc
xchg
out
loope
jge
jb
dec
jb
dec
cmpsl
mov
leave
shll
roll
scas
cwtl
cmp
cmpl
iret
mov
mov
iret
dec
push
add
fldl
aam
sub
pop
sub
jb
push
dec
outsb
jg
mov
mov
xor
and
xchg
pop
mov
mov
push
repnz
jne
and
cmp
push
filds
sbb
lret
add
cmp
leave
mov
imul
and
pusha
dec
mov
out
ss
xor
sub
sub
xor
sahf
cmp
clc
xchg
mov
rorl
sarb
dec
sbb
loop
mov
add
mov
xor
pop
shll
sbb
dec
and
xchg
into
loopne
sub
jae
xchg
dec
test
cmc
outsl
clc
aas
aam
jmp
cmp
mov
mov
mov
push
aas
mov
inc
aas
xor
cmc
xchg
mov
add
sar
ss
movsb
addr16
or
loopne
and
fcmovnu
mov
pop
cli
mov
sbb
or
dec
repnz
jecxz,pn
je
sti
fnstsw
push
sub
fwait
rclw
movsl
sbb
gs
inc
or
loop
ja
mov
dec
repnz
in
stc
mov
pop
pop
cmp
rolb
add
stos
enter
mov
jne
mov
pusha
call
add
out
or
fnstenv
sbb
or
into
fiadds
call
lret
and
lods
loop
pop
test
sub
insb
sar
sbb
lea
pop
add
in
rcr
sbb
push
pop
aas
inc
fwait
push
sbbb
jl
push
mov
clc
jmp
sbb
filds
daa
xor
out
sbb
xor
sbb
pop
mov
mov
aas
mov
jp
fs
sub
or
insl
or
mov
movsb
pop
or
loope
lret
gs
scas
add
push
inc
push
inc
sbb
ret
mov
jle
orl
dec
test
cltd
cmpsl
stos
fwait
add
aam
popa
divb
lret
jbe
outsl
call
mov
rorb
test
push
out
mov
pop
sbb
lds
clc
rcr
fcmovnb
dec
xchg
sbb
scas
jmp
addr16
rcll
xor
jae
jbe
jmp
mov
sub
and
jo
scas
in
dec
sub
into
mov
fiaddl
insl
cltd
cli
jp
sti
pop
nop
pop
ss
fwait
sub
shufps
or
fcomps
add
pop
or
enter
addr16
jno
imul
xchg
xchg
push
sbb
xchg
xchg
or
popa
mov
pushf
jle
loopne
cmc
add
jg
call
jae
int3
dec
cmp
or
fwait
ljmp
int
fprem1
xlat
mov
aad
cmpl
push
loopne
stc
cli
es
xorl
adc
push
jmp
test
aad
xor
movsl
xchg
xchg
lods
out
aad
inc
push
cmp
xchg
in
lods
jmp
xchg
push
pop
pop
adc
xchg
inc
movsb
mov
sbb
sarb
adc
aaa
sti
scas
dec
movsb
cmp
adc
stc
inc
fdiv
mov
lret
lods
out
int3
sbb
arpl
lcall
popf
pop
jmp
jmp
out
push
mov
out
sbb
adc
sbb
aaa
out
ljmp
stos
cmp
gs
enter
jl
push
jg
add
adcl
push
lods
cld
cmp
mov
out
test
add
sub
repz
adc
mov
popf
ds
adc
xchg
loope
es
mov
and
inc
imul
xchg
add
inc
dec
dec
push
insl
aam
loopne
in
ss
xchg
mov
mov
lret
jecxz
leave
sbb
jg
int3
loope
leave
cld
jne
lret
enter
addr16
jg
push
imul
mov
loop
les
icebp
rorb
pop
adc
fucompp
ret
jae
pop
mov
inc
std
jno
sahf
jg
push
mov
xor
cwtl
adc
xchg
cmp
sub
popa
aas
and
ret
jnp
pop
sbb
jnp
push
jns
jle
popa
add
pop
ljmp
call
in
xor
cld
xchg
int
imul
into
aad
andl
or
bnd
sbb
outsl
aas
pop
loope
jg
lds
sbb
ds
dec
cmp
sub
roll
sbb
rorl
in
push
out
adc
test
rcrb
fs
cwtl
lea
jne
mov
mov
ljmp
in
lds
xchg
mov
mov
jb
arpl
faddl
test
pushf
mov
adc
cmp
sbb
clc
pop
dec
into
cmp
xor
xor
aaa
sub
and
enter
into
daa
out
jne
insb
adc
fwait
xor
mov
aaa
add
outsb
test
mov
and
aam
mov
enter
mov
in
mov
and
lea
push
sub
out
faddl
addr16
jb
sbb
aam
push
in
lret
sbb
xlat
push
test
lret
sbb
or
mov
mov
leave
outsl
movsl
or
ds
and
adc
clc
sub
aaa
cwtl
xchg
add
add
inc
cwtl
push
jb
cmpsl
jb
and
push
xchg
mov
ja
push
dec
mov
xor
lea
jne
sub
push
dec
mov
stos
mov
pop
ds
sub
pop
sbb
adc
insl
sub
mov
jge
sub
jg
mov
push
push
mov
call
dec
cmc
jmp
test
fs
push
leave
xchg
adc
jbe
rorl
insb
cltd
jno
fsubs
sahf
or
fsubp
and
xor
fistps
mov
lods
jmp
cld
popa
cltd
idivb
fistl
xor
add
pop
rorb
mov
loop
jb
ret
or
call
and
mov
xor
sbb
cwtl
adc
xchg
mov
out
daa
xlat
dec
insl
and
fdivr
jae
int
fwait
pop
cmpsb
fs
es
cmp
push
push
imul
inc
xor
out
sub
sbb
sti
aas
xor
outsb
out
flds
imul
out
cld
movsb
sub
lock
mov
inc
jl
inc
lock
push
lahf
mov
mov
inc
mov
push
adc
popw
cld
cltd
in
dec
xchg
fs
je
pop
mov
pop
aam
aad
mov
rol
fs
in
inc
or
fisubrl
mov
jb
adcb
shl
repnz
int3
cmp
cmp
daa
push
fadd
or
ss
push
mov
cmp
push
leave
in
dec
dec
mov
add
jge
dec
movsb
mov
adc
insl
add
aad
xor
int
les
test
cmp
mov
hlt
shrb
dec
mov
je
xchg
add
adcl
sbb
ja
and
push
sbb
pop
inc
lea
inc
mov
cmp
scas
aam
cs
xor
sahf
and
test
negl
or
push
loopne
add
enter
lea
in
fadds
jmp
mov
inc
imulb
or
inc
sub
push
mov
xbegin
stc
xchg
test
add
dec
push
or
ja
adc
shlb
dec
push
das
lds
pop
jmp
mov
rcll
sahf
jo
orl
xorl
dec
aam
lods
lods
add
pop
into
lret
ss
mov
in
xor
or
push
mov
push
mov
arpl
movsb
push
imul
and
ror
inc
cltd
push
lea
xor
sti
sub
in
das
mov
or
mov
mov
insl
sub
jae
js
jns
or
pushf
std
punpcklwd
or
in
sub
repnz
xor
aad
jnp
shll
loopne
mov
out
add
xlat
repnz
mov
xchg
mov
lds
push
jmp
xor
jg
test
sbb
in
mov
jne
ret
loopne
filds
cmp
jecxz
cmp
in
xchg
fsub
ja
popa
andb
jle
out
and
push
mov
inc
test
test
fwait
pusha
xchg
cld
and
mov
mov
lret
pop
out
into
in
movsb
jle
dec
xor
orb
cltd
enter
push
push
int
sub
pop
mov
inc
imul
mov
push
inc
jg
push
and
repnz
add
sbb
mov
cmpsl
pushf
fbld
mov
scas
lods
test
lods
mov
lret
mov
xchg
lret
repz
loope
repz
fmuls
pop
popf
cmp
in
addr16
lods
das
mov
mov
stc
adc
lret
mov
cmc
xlat
fwait
aas
add
jnp
cltd
sub
mov
mov
dec
nop
sbb
add
mov
repnz
hlt
xchg
cmp
ret
arpl
imul
in
fsub
iret
xorl
fwait
and
cmp
push
stos
jbe
movsb
ljmp
icebp
dec
sub
neg
mov
fstl
stos
and
dec
push
aaa
stos
push
js
xchg
andl
fsubrp
shlb
add
add
add
test
aaa
fsubp
aam
add
leave
or
loope
push
fwait
xchg
xor
shlb
and
mov
mov
insl
int3
mov
stos
mov
inc
cli
xchg
add
xchg
fwait
mov
ss
xor
mov
xchg
and
mov
out
addl
mov
cltd
filds
jecxz
inc
sbbl
ds
mov
adc
gs
out
push
sub
mov
inc
or
ror
mov
daa
lea
jp
dec
leave
pop
popa
cmp
xor
adc
or
or
scas
pop
or
pushf
fnstsw
push
pop
das
pusha
mov
addr16
jbe
xorl
fwait
xorl
movsb
adc
test
push
cli
inc
pop
ja
pushl
inc
clc
xchg
xor
jns
push
call
mov
push
lock
xlat
mov
sub
lcall
jne
sub
subb
xor
jbe
pop
sbb
leave
loop
sub
rclb
je
pop
or
sbb
arpl
rorl
jbe
and
inc
lea
mov
cmpsb
xchg
in
addl
jne,pt
adc
fiadds
inc
andb
mov
insl
imul
insl
lcall
lcall
mov
jns
rcrb
mov
lods
js
adc
mov
xor
ret
add
mov
adc
ret
iret
or
jb
xchg
jle
fiadds
into
outsl
leave
test
ret
sbb
cmpsl
nop
sbb
pop
xchg
mov
mov
mov
xor
popa
xchg
sbb
add
cmp
stos
out
push
es
sub
jno
data16
adc
pop
jne,pn
daa
popa
xor
es
pop
sbb
inc
inc
mov
add
incb
es
daa
push
in
jmp
sbb
outsb
cmpsl
incl
cmp
lock
sub
adc
pop
bound
rorl
rcr
add
out
repnz
dec
mov
sub
mov
xchg
cmc
inc
push
adc
dec
push
in
jbe
test
cld
dec
mov
ds
in
mov
imul
scas
mov
and
cmp
jmp
add
lock
pop
fnop
mov
jae
aam
loope
lahf
mov
outsl
icebp
int
orl
and
pushf
and
sbb
fidivrl
out
aas
xor
shl
cmp
gs
mov
cmpsl
sahf
pop
xchg
jnp
pop
call
test
jmp
dec
push
lcall
loop
pusha
or
fistl
xchg
cmp
push
mov
cmp
and
and
das
in
fcoml
push
cmp
mov
push
push
mov
add
sub
add
and
push
mov
lods
aas
call
in
bound
fldenv
adc
stos
cmc
out
or
xlat
shlb
push
vpsubsb
nop
fstpt
or
or
imul
add
aam
push
dec
aad
jg
or
mov
jle
mov
lahf
mov
mov
jnp
push
lds
jle
jno
aaa
mov
xchg
std
jbe
fwait
pop
test
pushf
insb
and
mov
ficompl
mov
test
insb
iret
xchg
rcr
dec
mulb
mov
mov
pop
mov
and
divl
dec
lret
lock
mov
push
ljmp
les
lret
add
cmpl
test
cmpsl
je
movsl
into
mov
hlt
fisttpll
sub
push
pop
mov
int
stos
and
xchg
jns
mov
stc
icebp
std
add
pop
adc
mov
lock
pop
add
scas
imul
add
int3
cltd
lret
scas
cmp
scas
mov
imul
pop
mov
xchg
push
mov
sbb
adc
div
jns
jnp
rcll
jne
repz
mov
lcall
jmp
adc
adc
and
adc
shlb
mov
scas
in
lahf
or
jecxz
pop
movsb
test
test
mov
inc
stos
jmp
xchg
jne
jmp
popa
lea
loop
xchg
mov
daa
push
aaa
and
mov
or
xor
or
imul
xor
and
pusha
mov
pop
sbb
dec
jp
hlt
sbb
ja
adc
push
push
jo
push
outsb
lcall
push
arpl
psrld
mov
jge
out
rol
lcall
sub
js
add
lret
adc
pop
or
ja
push
mov
adc
push
in
dec
or
test
ror
out
lods
pop
add
mov
je
push
into
inc
jb
and
out
dec
mov
aam
js
mov
mov
stos
mov
sbb
lahf
mov
ja
into
in
out
test
scas
cmp
mov
push
movsl
inc
movsb
jmp
jb
jp
outsb
adc
inc
lock
mov
push
sub
adc
jo
fs
das
icebp
pusha
jmp
ret
jg
fmulp
pop
xor
dec
mov
imul
cmp
jo
push
lock
pop
sub
xchg
xor
or
int
cmpsl
movsl
mov
mov
push
jge
push
sbb
jmp
xor
rclb
push
pusha
push
bswap
xor
repnz
xchg
and
stc
mov
xchg
sbb
movsl
lods
vmovshdup
add
push
push
cli
jo
test
jmp
push
out
pop
shlb
data16
pop
mov
loope
sbb
adc
sbb
aas
push
and
xor
lret
mov
sbb
push
dec
fucom
pop
mov
dec
nop
add
mov
jo
sbb
and
jno
xchg
shl
rcll
or
in
std
ret
shlb
add
mov
and
insl
and
push
inc
shl
popa
mov
jne
mov
adc
sub
call
in
xor
mov
inc
mov
das
js
cmp
xchg
out
pop
rolb
lods
push
imul
adc
sti
cwtl
fsubrs
ja
ljmp
scas
in
stos
mov
out
xor
shll
mov
stos
out
inc
xor
fs
sub
xor
hlt
shr
xor
lds
and
xor
stos
xchg
dec
mov
add
xchg
mov
mov
insb
cmp
sahf
sti
or
xchg
cltd
cs
xchg
xchg
mov
jns
pop
push
inc
jno
cmp
stos
push
mov
mov
neg
iret
scas
xchg
jl
mov
sub
or
mov
xchg
data16
and
outsl
sub
stos
ret
and
dec
sbb
cmp
mov
movsl
adc
sbb
loop
lds
mov
cwtl
inc
jge
inc
or
pop
mov
ljmp
xor
ret
hlt
popf
mov
or
dec
fmulp
call
push
mov
cmp
mov
and
dec
cmp
mov
jno
repnz
or
mov
add
int3
ss
dec
push
or
and
mov
pop
stc
pop
and
xchg
pusha
repnz
add
rclb
adc
inc
sbb
xchg
or
test
sbb
add
mov
inc
add
addb
add
xor
and
mov
push
call
sbbb
lods
pop
stc
push
xchg
in
mov
out
xor
testl
arpl
push
dec
out
sub
adc
rcll
pop
xchg
mov
push
xacquire
adc
push
mov
addr16
mov
mov
jecxz
cmp
ds
cld
sbb
cmp
xchg
movaps
push
mov
pop
mov
sbb
in
cltd
cld
sbb
mov
into
ljmp
mov
jg
mov
insl
ljmp
xchg
jb
sahf
cmp
mov
xchg
incb
jge
cmp
popf
arpl
jns
jae
test
pusha
push
lock
lret
aaa
fcmovnb
movsl
mulb
mov
aad
and
pop
into
arpl
pop
clc
pop
jne
test
ja
mov
jnp
push
mov
or
mov
inc
sub
stos
cmp
mov
sarl
nop
nop
movsb
sbb
nop
xchg
ret
push
xor
xor
jne
fstpl
rclb
stos
sbb
pushf
jge
jp
shlb
mov
imul
mov
adc
pop
ret
sbb
movsl
dec
mov
sub
les
out
lods
xchg
lcall
xor
gs
add
or
sbbl
push
fistps
dec
sbb
scas
mov
stos
add
xor
icebp
lock
mov
std
jne
sbb
pusha
je
loope
ret
and
popa
fcmovbe
push
cli
les
lea
pushf
adcl
cmc
cmp
and
nop
pop
ja
movsl
adcl
rorl
jge
dec
loop
mov
xor
ret
inc
or
xchg
incl
adcl
flds
lods
jg
cmpsb
ds
fwait
movsb
jbe
cmc
neg
xchg
sub
rorl
ror
hlt
cs
and
adc
ss
xor
mov
dec
pop
insl
add
pushf
push
rorb
lret
mov
pop
add
dec
fbld
mov
popa
aad
cld
pusha
imul
inc
jno
sub
jae
psubusb
incb
cmp
fucomip
das
pusha
pop
cs
xor
movsl
sub
push
inc
cwtl
mov
inc
imul
ljmp
xchg
stc
cltd
cltd
lods
xor
pop
divl
imul
ret
push
push
cmpsb
pushf
push
push
addr16
or
rcrl
adc
and
add
loopne
movsb
shl
push
push
mov
xor
mov
subps
push
enter
lds
mov
es
scas
into
nop
cmp
lea
lods
xor
fcmovnbe
cmp
mov
jnp
ret
pusha
lcall
mov
inc
stos
int3
inc
add
adc
mov
xchg
sti
faddl
loope
pop
push
push
aas
mov
scas
imul
stos
xlat
mov
cld
shl
insb
popf
icebp
xor
mov
xor
cmpsl
jo
nop
jmp
lret
in
jno
pusha
jns
and
mov
pop
in
sub
rorb
jae
mov
addr16
dec
daa
jl
jno
icebp
or
jo
xor
mov
pop
fdivs
lcall
fidivs
lods
lock
mov
les
mov
cmp
push
mov
rol
and
push
ficoms
mov
dec
inc
push
addb
and
loop
add
push
jo
mov
pusha
subb
aad
scas
jns
mov
popa
ja
pop
inc
inc
add
hlt
out
jge
jg
pop
cmp
loopne
xor
lds
dec
clc
sub
sbbb
adc
ret
mov
movsb
loopne
ja
js
data16
inc
inc
xchg
xor
cwtl
sahf
cmp
cmp
jp
dec
sub
cmp
andb
mov
add
aaa
inc
sbb
das
jnp
in
in
out
cmpsb
and
and
pause
jbe
add
mov
xorb
in
lods
xor
popa
sbb
pusha
mov
jp
cmpsl
mov
pushf
sub
fidivrs
fsts
scas
sub
mov
aaa
pop
arpl
cmp
lock
dec
jb
sub
push
shll
xchg
iret
cmp
fcomps
and
test
pop
jnp
in
sarl
pop
jle
mov
pop
dec
outsl
sub
pop
addl
pop
and
pop
mov
adc
xchg
lahf
mov
pop
fistl
mov
icebp
lods
dec
inc
and
outsb
inc
test
aad
std
jno
sub
rcrl
out
movsl
rorl
sub
jns
mov
add
pop
pop
sbb
dec
jle
daa
dec
mov
adc
push
dec
shlb
bnd
filds
pop
icebp
bound
push
adcb
repz
cmp
xchg
das
xchg
add
mov
jo
jle
pop
test
sub
ja
xchg
aam
addr16
daa
xor
sbb
mov
imul
push
jp
jno
rcll
mov
mov
pop
jge
out
data16
mov
in
mov
aas
mov
fistpl
cmc
loop
gs
rolb
dec
test
repnz
sub
cmp
cmpsb
pop
mov
xchg
push
notl
ss
adc
pop
mov
out
jo
in
cmp
mov
or
jge
mov
mov
add
inc
or
or
cmpl
mov
inc
push
xchg
jae
ret
xchg
mov
insl
and
leave
mov
fdivs
inc
aas
and
insb
test
stos
xor
push
es
adcb
mov
lods
adc
sub
pop
lret
push
sbb
dec
or
lahf
fcomip
inc
fucomi
jmp
sbb
out
mov
xchg
jb
or
pop
inc
inc
in
stos
and
aaa
jb
stc
mov
pop
pusha
jg
sub
push
movsb
aam
cmp
dec
xchg
mov
jmp
jmp
jns
ja
clc
push
movl
mov
mov
lds
xchg
pop
xor
mov
and
inc
sbbb
mov
les
mov
xlat
int3
inc
xchg
dec
repz
add
hlt
adc
mov
flds
mov
mov
mov
test
sbb
into
inc
push
adc
es
in
cmpsl
pop
in
dec
ds
sub
or
cwtl
dec
mov
jmp
es
mov
cmc
mov
mov
stc
push
inc
mov
adc
frstor
sbb
push
add
repz
mov
pop
cmp
xchg
and
jmp
test
push
out
jo
enter
mov
hlt
das
out
cmp
stos
and
hlt
mov
hlt
shl
icebp
dec
popf
add
outsw
jno
call
dec
xchg
fists
sahf
push
jne
cmp
ja
scas
push
jb
cmc
dec
adc
fs
jne
mov
dec
in
mov
ret
sti
fisttpll
pop
ret
popf
mov
and
movsl
inc
ds
push
sti
call
or
scas
movsl
lahf
out
jp
pop
inc
xchg
repnz
pop
mov
pop
push
jbe
sub
iret
sub
mov
rorb
cmpsl
pop
addr16
and
sub
add
gs
adc
ret
stos
out
push
out
mov
add
pop
mov
test
dec
and
mov
push
pop
mov
jecxz
pop
jg
lahf
dec
push
xor
out
je
dec
mov
add
mov
out
pop
data16
inc
mov
and
mov
mull
insb
or
xchg
jle
xor
xchg
test
mov
mov
punpcklbw
mov
jns
pop
dec
repnz
lds
aam
pushw
cld
cmp
or
or
adc
pop
and
das
xor
fnstsw
icebp
push
push
lds
push
xor
dec
jnp
adc
repnz
jp
jns
inc
loop
je
aaa
je
dec
mov
push
jbe
shl
push
ljmp
adc
int3
cmc
or
arpl
repnz
sbb
xor
ret
mov
outsl
xor
mov
fucomi
das
mov
xchg
push
inc
push
clc
mov
fs
dec
mov
mov
mov
test
out
fisubrl
test
aas
dec
jecxz
mov
jns
cltd
stc
pop
fcomps
and
xchg
scas
lods
add
insl
insb
daa
scas
and
cld
lea
shrb
movsb
jg
sarl
xchg
in
cwtl
ss
outsb
rorb
outsb
pop
fwait
out
ss
test
jnp
lods
cmp
cs
arpl
and
sahf
aam
or
shl
fstl
pop
xchg
adc
fisubrl
out
sub
fnstenv
int3
mov
cmpsb
leave
or
or
stos
jmp
inc
and
call
scas
fnstsw
fldcw
lret
mov
pop
add
bnd
or
popf
leave
nop
or
mov
shll
push
or
daa
ss
popa
fldenv
push
xchg
cmpsl
sub
adc
loope
test
movsl
imul
dec
es
push
fs
or
pop
mov
in
adc
add
shl
push
inc
push
test
inc
sub
std
rcrb
or
rcll
inc
pop
cmp
mov
dec
es
and
test
cmp
pop
xchg
out
dec
or
pop
push
loope
push
rol
mov
mov
jbe
aam
in
iret
xchg
pusha
test
mov
mov
sbb
dec
out
xchg
jle
cmp
test
es
movsl
pop
jp
sbbb
adc
movsb
and
aas
insl
inc
or
mov
mov
or
dec
fwait
stc
imul
int3
shlb
fcoms
out
in
xlat
movsb
jecxz
lea
sarl
jno
dec
jbe
sti
rorb
push
dec
cli
push
cmp
pop
mov
push
push
ss
mov
cld
fs
jae
int3
push
jbe
push
cwtl
scas
push
xchg
adc
addb
mov
add
outsb
sarb
mov
pop
add
out
sub
test
cld
loope
hlt
sbb
ljmp
mov
lock
clc
pop
fldenv
cltd
call
or
in
mov
jne
add
sub
daa
mov
push
ljmp
aam
pop
fisubrl
dec
sbb
push
orb
rorb
adc
in
pop
jg
das
pop
adc
fimuls
mov
push
sbb
dec
lret
out
sub
adc
push
mov
sub
inc
fwait
mov
xor
imul
imul
ja
sbb
xor
shll
mov
hlt
les
imulb
jns
jbe
adc
sahf
inc
or
mov
fmul
hlt
movb
fs
aaa
jae
fdivr
ret
sbb
mov
jl
xchg
mov
fs
sbb
rcll
divb
cli
dec
leave
rcr
mov
cmp
jbe
out
loope
or
sub
inc
inc
mov
mov
scas
pop
cltd
lds
jo
sahf
pop
sti
mov
push
dec
xor
inc
sahf
push
aad
jmp
in
inc
push
fiadds
in
mov
pop
add
and
mov
inc
or
cltd
jg
enter
mov
dec
cmp
sbb
fstpl
xor
fadd
push
xor
les
cli
mov
jo
inc
loop
pop
sbb
rcr
mov
cmpsb
sbb
mov
mov
mov
inc
cmp
dec
inc
cmp
pop
xor
inc
dec
gs
js
aas
popfw
jge
cmp
bound
scas
add
xor
adc
aaa
lcall
adc
jecxz
retw
dec
add
cmpsb
dec
pop
jne
push
ret
jle
jl
pop
ret
cli
lahf
cwtl
push
sub
lret
add
cli
loopne
pop
xor
stos
enter
jmp
movsl
dec
xchg
cli
mov
in
pop
pusha
mov
pop
or
sbb
mov
sar
icebp
rcll
dec
gs
movsb
pop
mov
sub
jle
jp
mov
xor
fisubrs
xchg
push
imul
or
movsb
aam
push
cmp
mov
add
jle
add
rcll
jae,pt
pop
insb
int3
negl
add
aas
pop
xor
pop
xor
rcll
and
mov
loope
inc
or
data16
cmp
and
call
lods
stc
lcall
adc
xor
jo
movsl
xchg
mov
xchg
sub
jmp
pop
mov
imulb
cwtl
add
mov
mov
movsb
stos
jmp
cmpsb
rcll
add
shl
mov
vpunpckhwd
push
iret
fwait
jae
push
jge
inc
push
mov
aas
or
daa
pop
sbb
orb
out
mov
ret
jle
dec
cmpsb
leave
dec
pop
push
sub
pop
inc
dec
cmp
loop
xor
stos
xor
call
sub
fistl
stos
and
and
dec
sbb
pop
add
cs
adc
loop
dec
xor
add
mov
xor
hlt
notl
ja
push
xchg
pushf
call
arpl
cs
add
pop
movsb
loop
mov
inc
cmp
jge
cmp
jb
lds
popl
xchg
xor
out
std
cmpsb
neg
ja
jae
mov
push
lret
mov
icebp
ficompl
inc
pushf
add
out
daa
xor
pop
test
ja
add
xchg
mov
pop
fstpt
fsts
mov
sahf
mov
movsl
scas
sub
jne
scas
or
pushl
call
ja
jno
and
mov
insl
addr16
cmp
add
lcall
pop
dec
mov
sahf
xor
mov
mov
mov
int
repz
xchg
add
pop
xor
pop
push
mov
fcomi
sbbl
pop
pop
dec
cmp
sub
mov
sub
pop
mov
test
xor
pop
idiv
lods
cwtl
jl
add
dec
shr
sub
lahf
and
mov
test
inc
ret
test
aaa
lcall
xor
inc
push
loopne
stos
bound
cs
dec
mov
shlb
ljmp
je
out
fildll
cmpsl
mov
push
or
and
mov
xorl
adc
xor
adc
inc
pop
and
pop
orb
pop
pop
adc
dec
das
fwait
daa
hlt
gs
gs
mov
rcll
pop
fsts
pushf
gs
sub
jns
imul
les
adc
cmp
mov
ret
movsl
test
mov
cld
hlt
repnz
inc
sahf
jg
cwtl
pop
cmp
mov
xor
push
and
jno
and
daa
jecxz
mov
add
add
push
aad
rcll
or
dec
mov
cmpsl
sub
mov
movsb
and
subl
add
mov
push
pop
mov
dec
mov
xchg
cmp
sbb
stc
dec
fdivr
mov
add
pop
mov
xor
adc
dec
pop
es
and
mov
push
xor
mov
push
jne
pop
cltd
cli
movsl
mov
jnp
lret
xchg
movsl
xchg
mov
ja
inc
jl
push
adc
inc
in
cmc
dec
leave
xor
cmp
nop
js
jmp
lret
addr16
popf
pop
mov
popa
rcrb
sahf
fisubl
les
int
std
mov
shlb
fiaddl
int
lcall
in
xor
and
xor
cwtl
sbb
pop
insb
adc
mov
xchg
inc
dec
adc
rcl
scas
mov
and
test
ret
or
aam
sbb
daa
fdivrl
mov
fistpl
mov
sti
or
int
pushw
xchg
lock
stc
ss
mov
js
adc
stos
lahf
xor
sbb
inc
popa
mov
pop
and
push
int
pop
iret
cmp
jne
movsb
sub
cmp
xchg
mov
dec
jg
into
sub
ss
xor
xor
scas
mov
call
mov
mov
mov
nop
xchg
cmp
out
xchg
and
push
fst
ret
pusha
test
test
sti
and
push
cmp
mov
xlat
or
jo
and
faddp
pop
loopne
jge
popa
lds
or
mov
lods
inc
sbb
sbb
sar
rcll
into
stos
pop
subl
sti
std
or
test
push
je
imul
add
push
ljmp
xchg
fmull
and
jp
mov
sbb
jl
imul
loop
pushl
mov
dec
cmp
test
mov
xor
lret
or
mov
in
xor
xor
sbb
push
xor
cmp
sbb
mov
gs
push
add
scas
es
cs
mov
or
xchg
jno
mov
jmp
testl
sti
jnp
lds
push
fstps
xchg
addl
push
xchg
mov
arpl
mov
fldl2e
push
pop
stos
jp
sbb
aad
xchg
push
add
mov
xor
add
and
je
push
stc
inc
cmp
ds
fs
sub
pop
sbb
std
imul
das
out
jmp
enter
sbb
ret
sub
in
mov
sub
std
int3
xchg
js
mov
xchg
sbb
out
inc
int3
jmp
add
scas
add
jns
loope
or
icebp
mov
push
dec
cwtl
push
jle
test
arpl
roll
popf
jge
mov
outsl
fcompl
cld
mov
add
fisttpl
icebp
incl
or
xchg
dec
mov
add
lret
int3
cmp
data16
dec
mov
fwait
rorb
sbb
popf
dec
imul
lret
lods
jns
push
mov
mov
push
sbb
cwtl
leave
mov
imul
stos
repnz
push
mov
les
aad
fmul
inc
mov
jg
in
push
rorl
cwtl
mov
jl
inc
adc
cmp
cmp
imul
hlt
pop
fldlg2
pop
mov
movsb
xor
shrb
xor
push
pop
xchg
and
pop
adc
push
divl
popa
int3
fs
outsl
jnp
mov
or
or
data16
cltd
xchg
call
das
inc
jo
es
pop
xor
add
mov
cmp
ss
loope
shr
sub
sub
int3
jb
sbbb
mov
cld
lods
and
iret
data16
add
imul
sbb
outsb
inc
das
in
xor
ret
jl
or
jns
sti
inc
and
inc
int3
jne
jg
jnp
stos
in
inc
dec
sbb
adc
jae
aam
sub
sbb
loopne
mov
ljmp
jbe
fstpl
stos
pop
test
and
mov
mov
and
fisubs
aad
xchg
stos
xor
or
xchg
adc
fnstsw
push
mov
fmuls
jecxz
icebp
lds
push
and
or
decl
stos
movsb
sahf
imulb
rcr
mov
test
mov
sbb
pop
fnstenv
xchg
sbb
loopne
push
cmp
in
sahf
jg
cmp
ret
mov
mov
adcl
mov
sbb
arpl
movsl
dec
insb
or
sbb
cli
or
dec
mov
sahf
mov
sbb
mov
jb
gs
or
dec
lods
dec
mov
sub
mov
mov
xchg
dec
lods
imul
fs
push
and
push
sbb
test
sbb
adc
mov
mov
mov
mov
xor
sub
scas
fldl
cmc
push
cmp
filds
rcrb
enter
lahf
jne
jbe,pn
test
mov
or
addr16
sbb
add
aas
dec
cli
or
xchg
rolb
cld
adc
cld
dec
adc
adcb
idivb
adc
inc
lret
mov
inc
sbb
subl
idivb
xchg
inc
push
xchg
or
push
pop
cld
dec
sar
or
pushf
mov
lock
cmp
ja
ss
test
aas
dec
add
iret
enter
dec
insl
jne
sbb
pop
jmp
xchg
ret
jge
lahf
sbbl
lock
mov
cmp
imul
fimull
orl
pop
leave
cwtl
add
outsb
pop
xor
cmpsl
cmpsl
addr16
pop
aaa
cmp
stos
cli
ljmp
mov
test
mov
adc
outsb
add
cltd
aam
js
jo
into
lods
test
or
mov
xchg
ret
mov
sub
jle
add
and
mov
push
mov
cmp
repnz
pop
or
cmp
adc
jmp
push
pop
mov
sbb
push
xchg
mov
rorb
push
xor
lea
xor
jns
mov
xor
mov
sub
add
mov
xlat
sbb
or
and
push
mov
pop
jne
or
mov
xchg
cmp
xchg
aaa
xchg
add
and
mov
mov
subb
mov
ss
jo
loopne
mov
lods
pop
jnp
inc
mov
pop
inc
fsub
or
repnz
push
sahf
and
movsb
pushf
inc
fsubl
aaa
inc
popf
push
cltd
or
sbb
ds
in
adc
jl
sbb
xor
mov
in
clc
ljmp
ljmp
xchg
xor
jae
push
imul
dec
incl
and
mov
into
ss
test
hlt
mov
mov
jg
pop
push
push
cwtl
lds
sbb
cmc
dec
xchg
cmc
fstpt
and
fnstsw
jmp
push
data16
mov
fs
or
inc
or
or
mov
sbb
out
pop
repz
add
aad
clc
int3
mov
andl
inc
mov
xchg
pushf
aad
dec
adc
or
cwtl
clc
sbb
mov
add
imul
cld
cltd
inc
dec
sbb
mov
aam
push
dec
adc
in
orl
rcrl
dec
sub
aad
jecxz
les
std
adc
xor
sbbb
dec
jecxz
cmpl
flds
shlb
cmpsl
cs
imul
lret
in
dec
aad
adcl
fs
dec
add
adc
mov
mov
sar
stc
push
insb
repz
and
or
adcl
xchg
add
cmp
cmp
push
xor
add
xlat
dec
cmp
gs
lcall
pop
cmpsl
icebp
idiv
hlt
les
or
cmpsl
or
or
aas
test
jg
push
shrl
pop
mov
or
fcmovu
imul
pop
insb
or
mov
std
xor
mov
es
insb
scas
hlt
or
jecxz
popa
push
js
dec
ljmp
cwtl
jl
dec
cmpsb
or
cltd
adc
xchg
mov
mov
jecxz
jno
cltd
jl
lds
add
fwait
jp
jnp
iret
clc
rorl
and
add
jb
lret
cwtl
jb
cmp
add
inc
mov
add
test
fildl
mov
jecxz
pusha
dec
iretw
add
push
clc
pusha
call
ficoms
fdivs
aas
push
mov
xlat
adc
cwtl
mov
popa
pop
mov
andb
xchg
movsb
mov
lods
je
lock
nop
pop
dec
repnz
inc
aad
addl
xor
sbb
and
push
inc
mov
nop
inc
and
and
imul
cmp
aaa
ss
or
sbb
jae
xlat
mov
lret
pop
xchg
lods
jg
mov
dec
aaa
jge
out
sbb
imul
inc
push
negb
mov
aaa
xor
test
or
inc
repnz
jle
loopne
jnp
mov
ret
push
mov
or
mov
push
fwait
cld
out
and
je
jne
nop
sub
xchg
and
lahf
test
sbb
out
cmp
xchg
hlt
mov
jae
leave
jp
stc
mov
aam
in
fldenv
xchg
faddl
cli
adc
and
dec
cld
cmpsl
jmp
in
das
xor
jg
push
or
adc
cli
jne
insl
outsb
std
fmull
mov
inc
aad
ljmp
or
jle
rcr
into
dec
pusha
sarb
mov
sbb
sub
mov
out
lds
sub
aad
clc
mov
inc
out
xor
addr16
sbb
push
cmp
xlat
push
call
mov
idivb
mov
divl
mov
jmp
jno
jne
mov
pop
das
add
fucomi
mov
add
nop
call
add
push
in
mov
sub
fdiv
shlb
jmp
into
inc
xorl
call
lret
fs
loop
jae
jl
xchg
sub
push
adc
push
and
mull
push
int
clc
push
mov
mov
mov
mov
mov
adc
sarb
lcall
or
mov
fcoml
fimull
cmpsb
pop
sbb
inc
sbb
pop
es
lahf
dec
or
xor
mov
lods
xor
pop
or
and
cmp
xor
inc
ds
in
mov
mov
cmp
dec
lock
push
imul
inc
push
cld
ret
out
lret
mov
mov
xor
popa
inc
aaa
inc
into
jae
cmpsb
outsl
les
xor
mov
iret
or
xor
sbb
lods
jle
stos
pop
out
mov
push
imul
int3
clc
dec
cmp
ret
pop
jb
sbbb
dec
shll
push
inc
jecxz
pop
aad
inc
add
loop
out
repz
push
test
mov
adc
stc
mov
mov
loopne
sub
test
clc
jge
pop
ja
jae
loope
push
aas
lods
test
xchg
mov
mov
cmp
shll
inc
into
sti
fistps
jnp
or
add
sub
jl
inc
test
cmp
sbb
nop
jmp
pushf
scas
cmc
and
clc
mov
jae
imul
decl
xor
iret
xchg
xor
push
sbb
jle
pop
add
and
arpl
pop
mov
sbb
push
jmp
fwait
insl
sub
xchg
pcmpeqw
pop
idiv
mov
pusha
or
test
int
cmp
pop
cmp
mov
mov
pop
adc
lock
std
insb
addr16
jne
jp
mov
ja
push
mov
jno
inc
orb
ffreep
lods
xchg
adc
pop
lahf
cmp
push
cmpsb
and
add
push
mov
imul
es
push
mov
or
daa
fst
loopne
pop
daa
or
mov
pop
jl
dec
xor
cli
jo
push
xor
push
sub
testl
out
mov
ret
cs
rcll
daa
ss
mov
cmp
push
sbb
pop
sbb
pop
pop
add
xor
xor
mov
mov
cmp
adc
add
dec
andl
push
push
shrl
pop
lods
outsb
mov
xchg
mov
add
jl
ret
push
test
leave
mov
pop
sub
bound
test
push
xor
add
ja
add
rcrb
jmp
imul
insl
js
mov
adc
xor
adc
mov
mov
movsb
xor
cmc
sbb
mov
dec
dec
pop
jecxz
mov
adc
adc
cmp
xchg
in
repz
inc
sub
jmp
pop
inc
repz
mov
mov
pop
xchg
inc
push
mov
vandps
data16
push
mul
cmc
pusha
xchg
xchg
cwtl
int
inc
fstpl
adc
sbb
push
fisttpll
mov
mov
fisubs
xor
je
inc
nop
pop
cmp
mov
cltd
out
in
into
sub
push
mov
dec
out
sub
sbb
jbe
mov
add
ds
pushf
xchg
mov
repnz
xchg
cld
iret
sbb
xchg
push
and
aas
outsl
xor
push
jg
mov
push
dec
clc
fs
ret
mov
sarb
neg
xchg
das
repnz
out
add
xchg
out
pop
cmpsb
cmp
je
in
mov
je
aad
mov
loopne
dec
addr16
ss
mov
fnstcw
cmp
cmp
clc
pop
aam
push
ret
xchg
and
movsb
adc
ss
mov
sti
mov
std
push
inc
cmpsb
mov
pop
adc
jnp
in
push
xor
call
inc
jne
addb
fstl
test
repnz
inc
xchg
dec
rol
cld
pop
lods
test
ss
inc
xchg
sbb
orl
mov
adc
or
in
jne
test
xor
sub
mov
push
lcall
repnz
mov
push
sub
int
push
pop
sbb
psubd
adc
daa
clc
jg
cmp
test
int
mov
dec
das
mov
mov
lock
add
inc
fldt
lahf
push
test
mov
mov
push
xchg
std
and
cmpl
hlt
push
icebp
test
bound
mov
pop
das
push
out
cld
cld
bswap
adc
cld
and
mov
or
mov
jnp
xchg
ljmp
adc
jno
dec
ja
and
ds
sbb
add
pop
pusha
jmp
lea
jno
pop
aas
jecxz
pushf
inc
test
lock
std
shl
pop
adc
aad
lock
mov
icebp
pop
add
mov
add
aas
mov
dec
lea
mov
in
outsl
cmpl
pop
lds
inc
cmc
sbb
outsl
add
xor
mov
xchg
fcmovbe
and
pop
lret
sbb
push
lret
loope
mov
mov
in
push
nop
mov
xor
xchg
inc
and
cmpsl
cwtl
add
std
dec
pop
xor
out
cs
out
cmp
or
shrl
aad
mov
inc
andb
test
pop
xchg
add
and
mov
or
lahf
imul
imulb
add
xorb
cmpsl
dec
dec
inc
push
imul
sbb
stc
data16
xchg
inc
and
sbb
int3
jecxz
in
dec
setno
mov
icebp
bsr
cltd
enter
test
lcall
repnz
mov
jecxz
in
jecxz
ljmp
out
rcrb
pop
cmp
or
lods
mov
mov
sbb
int
out
cmpsb
xchg
xchg
xchg
adc
imul
mov
cld
mulb
and
xchg
daa
sarb
jb
add
call
jb
aaa
xor
arpl
test
xor
in
cmp
inc
mov
xchg
push
test
divb
jno
iret
subb
dec
repz
out
mov
lcall
jb
outsl
out
mov
cmp
sub
lret
dec
jbe
cs
pop
sbb
dec
push
sbb
cmp
mov
mov
adc
pop
xchg
int
in
lcall
test
int
mov
cmp
xchg
mov
sbb
cmpb
lret
adc
mov
sbb
sti
mov
pop
xlat
daa
or
push
cmp
sarl
jg
push
stc
push
lahf
pop
inc
adc
push
stc
jns
push
repz
insl
outsl
inc
add
out
sbb
inc
dec
scas
insl
sbb
mov
aad
clc
push
fstl
or
outsb
mov
adc
scas
sbb
and
and
adc
or
mov
negb
mov
push
jge
lods
xchg
arpl
hlt
xchg
push
mov
ljmp
push
jp
lcall
xchg
inc
in
dec
jp,pn
in
into
add
lods
dec
mov
mov
mov
push
xor
addr16
repz
sub
mov
loop
push
fsubr
mov
jmp
push
nop
jp
xor
out
fstl
pop
jmp
adc
out
insl
mov
xchg
sti
sub
out
cmpsl
mov
shlb
pop
mov
ss
jmp
mov
or
das
sub
mov
test
mov
sub
pop
jmp
dec
imulb
xlat
pusha
cmp
bound
adc
sub
xchg
adc
pop
aam
mov
ss
jl
sub
jp
popf
xchg
test
or
jnp
adc
popf
push
mov
jl
sub
daa
popf
pop
and
ja
lahf
jge
mov
sbb
adc
push
lahf
popa
movsb
or
or
mov
outsb
clc
add
movb
in
inc
arpl
jle
cmp
add
jmp
xor
xor
test
pop
pop
movsl
popa
adcl
inc
pop
test
lret
sub
adc
mov
je
jnp
sub
repnz
sbb
aad
and
push
fstl
lock
dec
jecxz
mov
idivl
mov
mov
mov
push
in
cmpsb
pop
call
mov
js
push
add
jnp
push
cli
xor
pop
xor
pusha
test
and
fsubrl
iret
shrl
fistpll
or
mov
iret
es
or
nop
clc
out
call
repz
fiadds
cmpsb
xchg
insl
jecxz
out
add
push
fadds
outsb
loope
repz
inc
lret
adc
cmpsl
shll
les
jo
popf
std
cli
mov
imul
mov
insb
jg
cmc
jnp,pn
repz
cmp
jo
jb
es
repz
pop
sahf
das
jne
and
adc
sti
out
test
sub
and
sub
adc
adc
int
ss
pop
pop
stos
mov
mov
es
std
out
mov
mov
repnz
pop
fistps
int3
jle
push
aad
xor
pop
mov
mov
aas
mov
inc
add
xchg
sbb
imul
iret
test
xchg
jno
popa
xchg
xchg
stos
aad
ror
lcall
pop
lds
out
fdivrs
lds
xor
adcl
std
jns
sub
push
adc
into
dec
out
jg
std
and
xlat
sbb
push
or
xor
out
mov
pop
mov
xchg
mov
jl
pop
dec
ds
arpl
test
cmp
dec
mov
pop
sub
fs
cmc
dec
sbb
imulb
xchg
xchg
or
adc
cmp
or
dec
jge
loope
hlt
jmp
js
scas
pop
jle
inc
pusha
std
and
ja
ss
sub
jbe
shlb
pop
lods
jecxz
fs
gs
xlat
push
sub
or
cmpsl
rorl
pop
sub
mov
pop
pop
fistl
arpl
ds
mov
jecxz
pushf
sti
sub
fs
mov
stc
nop
push
push
pusha
int
adc
xor
adc
lret
maskmovq
notl
fs
cmpsl
mov
cwtl
test
and
cmc
out
lret
repnz
fisubrs
xchg
daa
loope
or
xor
xchg
mov
and
test
dec
xchg
scas
mov
mov
cwtl
sbb
dec
outsl
mov
sbb
cmp
imul
lock
pcmpgtw
inc
fistpll
and
add
cmc
push
cmc
lcall
jecxz
test
mov
loop
xor
xchg
pop
inc
fimuls
and
pop
mov
fbld
mov
cmp
imul
shl
or
loopne
frstor
adc
and
cmp
int
outsb
pop
push
xchg
jge
push
xchg
pop
dec
lock
mov
insl
sub
cwtl
imul
iret
sub
sub
xchg
sub
int
cwtl
out
jb
into
jno
sbb
ffreep
jl
outsl
in
inc
pop
mov
imul
mov
sahf
scas
cmp
popf
push
jne
gs
sbb
dec
pop
negb
divl
imul
outsb
pop
mov
jno
cmc
and
mov
hlt
pusha
popl
xor
mov
popa
test
inc
inc
adc
sti
call
adc
sub
aas
mov
mov
pusha
faddl
fisubs
lods
cmp
popf
sub
jne
lds
xor
mov
cmpsb
cs
mov
xor
mov
pop
pop
sub
mov
add
inc
aad
ja
mov
arpl
lcallw
pop
pop
fcomps
sub
popa
push
push
or
add
iret
mov
repz
push
sub
jb
inc
mov
repnz
lret
repnz
xchg
mov
lock
mov
fsubrp
sbb
mov
push
or
aas
lret
test
sbb
cmc
inc
mov
shrl
fdivrl
aaa
mov
movsl
mov
fmul
jl
cmpsb
push
mov
aam
or
movsl
xchg
xchg
mov
xor
das
test
add
jg
loope
push
sub
fdivr
sbb
inc
adc
jbe
shll
dec
test
popa
clc
inc
pop
imul
insb
mov
or
rclb
dec
push
in
mov
jle
cmpl
push
dec
les
movd
mov
sti
xor
push
in
popf
mulb
scas
int3
mov
movsb
popf
mov
cmp
ds
mov
mov
cmc
addl
sub
jmp
addr16
sbb
push
subl
sub
rcrl
sbb
icebp
leave
and
push
cmp
lds
addr16
shl
nop
xor
cmp
test
cmc
jecxz
ffree
into
add
movsl
adc
mov
xchg
int3
adc
mov
leave
jle
mov
sbb
notl
rcrl
add
stc
lret
repnz
js
dec
fidivl
pop
mov
and
outsb
push
lahf
adc
sub
into
or
dec
lods
ret
adc
and
xor
jl
cmpsb
leave
inc
jo
stos
sahf
push
or
clc
std
pop
stos
cld
sbb
les
dec
fstpl
jle
fcoml
jmp
in
adc
cli
pop
std
imul
sbb
outsl
mov
cs
in
push
rcrb
push
add
enter
iret
into
pop
inc
cmp
pop
pop
lods
imul
scas
inc
out
inc
in
xor
sub
xchg
fdivl
adcl
mov
pop
add
fbstp
jecxz
adc
inc
mov
lds
nop
and
pop
mov
jmp
push
out
aaa
repz
sub
jnp
dec
jg
cmp
imul
pop
outsb
fisubl
aaa
out
out
jbe
push
dec
out
popa
lock
rcrb
repnz
sbb
xor
push
ret
mov
mov
lods
mov
pop
iret
push
inc
pop
jg
inc
dec
fsubs
sbb
popa
shll
fnstsw
cs
pushf
leave
test
jp
and
jge
enter
fisttps
insb
clc
sub
push
loope
sbb
adcb
andl
lods
stos
push
mov
xchg
sbb
cwtl
loopne
dec
adc
adc
push
lea
hlt
stc
sub
jb
cli
jmp
jmp
mov
lret
cmpb
gs
sbb
out
rclb
cmp
out
jl
popf
mov
iret
test
inc
mov
jge
clc
hlt
pop
jae
insb
stc
scas
and
mov
mov
enter
xchg
xchg
sahf
sbbl
jmp
popf
jae
pushf
jne
mov
sbb
sbb
cwtl
nop
lods
and
test
lret
xchg
cltd
mov
stos
stos
push
xor
shlb
movsl
xor
or
mov
insl
xchg
in
into
bound
and
or
jnp
or
in
jno
cmp
pop
in
das
in
inc
in
sub
adc
insb
or
inc
xchg
add
or
ja
dec
movsl
outsb
jmp
loop
sub
loopne
jnp
loope
mov
cmp
nop
aad
inc
mov
ret
aad
jl
dec
adc
jnp
sbb
pop
or
jb
stos
and
mov
rcl
rcl
mov
in
les
sub
inc
cmp
outsb
cmp
cmpl
int
mov
mov
xchg
out
mov
sbb
mov
xor
and
faddl
xor
jg
mov
neg
add
cmpsb
sub
add
push
xor
leave
mov
jbe
ss
mov
xchg
pop
hlt
inc
mov
adc
mov
aam
add
sahf
pop
pop
inc
lret
xor
lahf
jmp
sbb
xchg
push
cwtl
ret
ficoms
cmp
outsl
push
hlt
repnz
push
push
sub
clc
dec
adc
mov
and
imul
xor
or
data16
es
rol
int3
lods
xchg
sub
inc
mov
in
pushf
jg
shll
pop
add
in
adc
aam
js
inc
jecxz
and
adc
ja
pmuludq
push
push
stc
sub
push
dec
cld
scas
sub
pop
sbb
lret
add
pop
jg
add
sbb
xchg
mov
stc
mov
in
push
inc
aas
pop
dec
jg
inc
aam
repnz
push
outsl
in
mov
pusha
mov
mov
sbb
stc
ds
jge
arpl
mov
dec
aad
inc
fcompl
mov
pop
shrl
outsl
inc
hlt
loopne
enter
das
lods
sub
in
sub
adc
dec
sarl
dec
jge
inc
cmpsb
inc
sbb
shrl
xor
bound
ja
jp
push
bound
sub
pop
lret
fmuls
mov
mov
add
or
adc
ds
jge
mov
js
sub
pop
jl
mov
jb
insb
lods
cmp
mov
jae
add
scas
test
jnp
xor
and
test
xor
pusha
sbb
mov
enter
imull
in
orb
xor
add
jl
push
add
test
xchg
jmp
xchg
adc
cwtl
bound
push
ja
add
rclb
sbb
and
out
shl
sub
inc
pop
push
xor
in
inc
sysexit
xorb
mov
das
and
cmp
cmpsb
xchg
out
jp
cmp
ds
pop
xchg
test
add
sbb
cmpsl
cmp
cltd
jnp
enter
add
shll
in
cmp
jne
jl
pushf
jp
pushf
sub
jo
dec
mov
inc
and
jnp
sahf
call
adc
jno
mov
pop
ret
or
daa
mov
fsts
xchg
movd
xor
mov
hlt
cwtl
fsubrs
sbb
aaa
dec
repz
out
mov
mov
test
ret
mov
fisttps
je
cmpsb
jecxz
cltd
lods
xor
test
jmp
jb
xchg
addl
mov
add
mov
dec
mov
aam
enter
jmp
dec
xchg
sub
test
push
mov
inc
mov
jne
mov
adc
rorb
sbb
push
push
xchg
xchg
push
imul
ljmp
xor
shll
add
add
or
aaa
aam
add
xor
xchg
cmp
inc
dec
add
push
in
decb
fcomi
push
mov
cs
mov
add
addl
stos
inc
jne
test
jle
sub
jb
repz
shll
roll
push
insb
fadds
aam
dec
push
ljmp
lock
pop
sbb
dec
dec
and
je
jno
xchg
and
scas
cwtl
push
xchg
mov
mov
mov
sbb
mov
and
fnstcw
les
inc
xchg
scas
cmpsl
aam
jge,pt
in
imul
xchg
scas
insl
pop
into
inc
out
icebp
push
or
sub
mov
sbbl
outsl
push
mov
mov
dec
bound
sub
mov
addr16
jecxz
pop
mov
or
sarb
sub
push
dec
call
or
and
adc
ficompl
or
ret
pop
mov
int
adcl
test
xor
mov
imul
loop
push
pop
andb
pop
leave
cmp
gs
jns
shl
pop
mov
and
push
stos
pop
leave
sahf
push
pop
cmp
mov
dec
dec
jl
push
sbb
jp
je
or
push
out
call
fdivs
mov
xor
fmull
lea
adc
lcall
or
inc
jecxz
cmpsb
mov
sbb
pop
aam
sub
cmp
fwait
jns
sbb
mov
jbe
push
loope
shr
push
in
dec
sahf
push
sub
inc
fwait
mov
insl
push
xchg
test
jo
mov
comiss
jo
aam
fs
xchg
dec
les
adc
sbb
xchg
and
rclb
and
mov
mov
loopne
mov
mov
mov
fadd
mov
sbb
outsb
cmp
mov
mov
cwtl
jno
lock
addl
repz
jne
insb
xor
sub
orl
lea
in
ret
imul
mov
jno
push
pop
inc
sub
roll
and
outsl
pusha
add
adcb
mov
aad
sub
imul
mov
imulb
lds
mov
sbb
jns
sub
mov
aam
cmc
imul
cmpsl
aad
int3
cmp
aam
lds
cmc
adc
daa
gs
cli
mov
pop
pop
jo
fsubrs
cltd
ror
sub
mov
and
je
sahf
in
or
ret
test
and
shl
dec
adc
in
mov
int
jne
jge
ret
popf
mov
jle
cmp
mov
dec
mov
mov
push
dec
mov
jle
jg
and
and
fsts
stos
mov
fldl
push
lods
mov
push
ret
rol
cmpl
pushf
adc
ss
inc
cmc
ret
je
ss
jecxz
push
push
jmp
and
lods
fwait
mov
jae
fwait
sbbb
add
daa
addr16
ja
dec
adc
xchg
xlat
imul
mov
fdivrs
pop
dec
jnp
jge
mov
push
sarl
cmp
clc
cmp
pushf
mov
inc
cmp
ss
cld
sbbb
fxtract
inc
mov
pop
enter
loopne
gs
pushf
bound
repnz
jecxz
inc
scas
roll
jns
push
mov
aam
lock
movsb
leave
mov
lret
aad
andl
popa
or
push
int
jno
aaa
fs
mull
add
mov
clc
pop
sub
xchg
jb
xchg
lret
out
push
sahf
and
cmp
inc
out
cld
mov
movsb
leave
or
add
jbe
push
push
inc
in
in
sbb
mov
ret
enter
adc
pop
add
mov
dec
mov
or
inc
jg
lcall
or
lea
mov
lds
ret
fs
dec
ds
xchg
ljmp
test
cvtps2pd
mov
ja
int3
adcb
xchg
mov
fldenv
imul
xchg
jnp
gs
adc
or
out
cmp
push
int3
dec
mov
mov
rolb
loopne
jns
pop
mov
jbe
or
movsb
test
pop
pop
and
ret
cmp
fstp
fiadds
push
fxch
sub
and
add
mov
shlb
mov
stc
jg
mov
cmp
mov
bound
mov
pop
xchg
ficoml
jmp
mov
out
test
loop
insb
into
pusha
adc
inc
push
dec
out
dec
lock
dec
scas
into
sbb
sbbb
fcmove
mov
jl
fwait
cmp
mov
rol
nop
mov
loopne
push
pop
mov
fs
std
dec
leave
and
cli
push
call
repnz
jmp
sbb
fistpl
push
add
add
icebp
data16
xor
xchg
and
andl
pop
jmp
cmovg
sub
sbb
jne
sbb
push
mov
jge
insb
pushf
aad
cwtl
mov
xchg
add
adc
popa
out
lods
dec
xchg
test
std
sbb
cmp
jge
cmp
insl
dec
arpl
dec
push
adc
sbb
clc
xchg
aaa
mov
lret
aaa
pop
jg
popa
cmp
bound
imul
cmp
dec
lock
movsl
cmp
mov
adc
jmp
test
pop
push
sarb
xchg
sbb
mov
xchg
sbb
sbb
out
test
movsb
pop
xor
pop
mov
clc
sahf
mov
pop
clc
add
add
mov
cmp
and
push
je
in
sbb
mov
jmp
into
and
ret
shll
mov
add
mov
xor
add
xor
pop
pop
jo
and
xor
out
mov
or
and
and
movb
hlt
mov
xchg
xor
fdiv
adcb
inc
fisubs
cmp
adc
inc
push
mov
adc
pop
stos
sub
roll
push
ss
mov
popf
xor
xchg
sbb
cs
icebp
or
jo
ret
push
pop
xchg
dec
mov
lock
cld
loop
cltd
sub
les
addr16
popa
jne
mov
js
roll
movsl
sub
jp
lret
leave
fstpt
inc
stos
movsl
call
sbbl
push
xor
lea
into
dec
nop
pop
adc
jo
jge
jns
lds
adc
jne
outsb
push
adc
loope
jno
cmp
lods
cmp
mov
mov
fstpl
sbb
adc
and
les
and
clc
jb
repnz
movsb
jle
push
inc
or
mov
sub
das
inc
pop
push
push
push
pop
inc
pop
xlat
setno
mov
jbe
jnp
arpl
mov
lock
and
fimull
push
insl
mov
mov
divb
xchg
int
fwait
cld
push
and
inc
or
or
adc
out
cmp
loope
leave
dec
mov
push
adc
push
cltd
icebp
call
sahf
pop
outsb
or
add
ds
idivl
insb
sub
sbb
lcall
addr16
sbb
int3
lds
aaa
mov
push
and
jp
loop
shll
dec
fwait
sti
pop
inc
or
aaa
jns
sub
mov
outsl
jnp
push
fisubrl
mov
jo
stos
jecxz
lds
jne
mov
gs
adc
jmp
sub
push
pop
dec
jmp
add
cmpsl
pushf
int
shll
stos
notb
sbb
out
shl
cmp
or
add
push
xor
fmuls
scas
movsb
dec
inc
inc
xor
ss
add
lods
or
cmp
cmp
xchg
insb
sub
push
fwait
daa
mov
mov
cmp
fnstsw
cs
xchg
jge
jns
fwait
popa
adc
in
mov
mov
out
lret
jge
push
pop
sub
dec
aaa
pop
add
xorb
lea
fisubl
in
and
in
dec
ret
mov
mov
cwtl
dec
enter
mov
add
into
mov
dec
inc
in
fsts
mov
pop
dec
sub
sbb
cwtl
xchg
clc
pop
mov
sbb
stos
testb
je
lds
test
mov
ja
lret
adcl
in
cmp
jno
push
fld
loop
cmp
shrl
repnz
mov
mov
mov
xchg
or
pop
repz
add
aad
aaa
mov
push
mov
in
adc
subl
sbb
gs
and
xor
add
in
push
jae
sub
mov
mov
lret
cltd
imul
popa
lret
lea
sub
popf
insl
push
subb
jnp
loope
push
scas
xchg
fisubrs
daa
mov
nop
xor
dec
mov
movsl
insb
fs
fldcw
push
cmpsb
in
pop
ljmp
das
and
and
xchg
mov
clc
dec
scas
test
jecxz
lea
xchg
out
push
ljmp
jne
cmp
in
adc
xchg
adcl
data16
sti
cmp
add
rcrb
mov
jae
arpl
mov
or
ror
stc
popf
dec
sbb
data16
pop
cmc
dec
test
test
dec
xchg
dec
xchg
fcmovbe
sub
cmc
mov
push
push
inc
inc
outsb
and
out
and
and
popa
mov
add
not
popf
hlt
pop
mov
cmpsl
xchg
xchg
pushf
jecxz
leave
mov
add
or
fmulp
inc
cld
test
cmp
inc
dec
add
or
fstl
pop
and
daa
jle
lret
negl
sub
mov
insl
mov
inc
fbstp
add
inc
lds
cmp
dec
mov
inc
add
adc
cmp
mov
mov
jge
rcl
les
inc
jge
jb
push
test
inc
mov
pop
jecxz
ret
int3
push
adc
adc
in
add
idivl
and
xor
aas
add
sahf
adc
mov
incb
sbb
loopne
shlb
push
sbb
pop
sti
xchg
sbb
outsl
mov
xor
cltd
cltd
insb
sub
int3
xrelease
sbb
outsb
cltd
mov
push
mov
push
pushf
gs
pop
out
pop
nop
wrmsr
mov
loop
pop
jae
xor
int
sbbl
or
data16
neg
pusha
mov
das
int
dec
mov
aaa
mov
adc
imul
dec
add
xchg
mov
in
jno
leave
in
inc
fisttpl
mov
push
jge
aam
popa
mov
cmp
gs
mov
mov
repnz
dec
sbb
movsl
dec
jle
jae
xchg
repz
loopne
dec
arpl
in
xor
xor
outsb
sbb
jb
xchg
fwait
icebp
out
lds
dec
lret
sub
adc
and
mov
push
andl
mov
shrb
ja
and
inc
loopne
lea
and
arpl
outsl
push
inc
out
jecxz
pop
push
push
jmp
xchg
pop
frstor
hlt
and
lcall
dec
xchg
jae
inc
in
dec
fistl
sti
js
or
push
cmp
or
mov
pop
adc
test
pop
mov
push
pop
cmp
or
mov
fs
sbb
jmp
in
mov
shl
js
iret
mov
stos
lret
add
clc
mov
call
and
inc
insb
xchg
inc
aam
and
sti
xor
scas
in
inc
sbb
push
outsb
cmpl
mov
add
loop
add
test
sbb
cmp
pop
leave
cmpsl
push
mov
fs
xor
das
lock
insb
jg
int
push
insl
xchg
or
dec
xchg
stos
cmp
fs
sbb
and
mov
inc
test
subb
stc
in
inc
sub
push
mov
xor
subb
pusha
jne
daa
push
loop
mov
pop
lock
fadds
dec
in
xchg
addr16
adc
cmp
jne
fmuls
sub
xchg
and
iret
or
mov
cmp
cmp
push
mov
lds
repnz
jmp
cli
xor
push
add
push
std
out
int3
out
push
test
inc
sbb
push
or
test
push
jmp
mov
out
adc
in
dec
jp
or
pop
popf
dec
insb
mov
test
out
and
jecxz
stos
out
cmp
xchg
aam
rolb
adc
stc
int
inc
or
cs
iret
std
mov
mov
js
pop
insl
stos
js
shlb
and
mov
or
push
scas
inc
mov
frstor
mov
mov
fninit
push
in
jg
cmpsb
pop
jg
mov
xor
outsb
mov
mov
push
xor
pop
xlat
xor
test
lds
pop
movsl
fldl
insb
inc
aam
pop
cmc
cmp
pop
inc
jno
mov
lods
out
sbb
fildll
clc
fs
out
hlt
aaa
imul
push
stos
movl
push
dec
jo
sti
adc
jge
fstpt
fisubrl
pop
mov
aaa
push
lea
mov
jge
pusha
adcb
and
cmp
test
sbb
add
xor
mov
inc
adc
test
mov
into
shlb
stc
push
mov
loop
push
push
jp
fidivl
push
pop
andl
arpl
mov
out
out
enter
and
inc
mov
fdivl
push
or
mov
outsb
push
adc
scas
add
sti
insl
xchg
ret
xchg
roll
dec
inc
das
ljmp
mul
xchg
mov
jmp
imul
lret
push
jmp
std
push
cs
jecxz
rcl
jl
or
cmp
push
lock
xor
add
add
lds
sbb
push
adc
and
outsl
inc
push
out
in
push
in
sbb
rorl
mov
aad
fscale
out
add
add
dec
sub
mov
mov
js
mov
test
insl
in
hlt
mov
mov
inc
pop
testl
cli
and
js
into
adc
lods
xor
sbb
adc
call
push
aam
jae
cmp
and
pop
arpl
insl
sbbb
cmp
or
rclb
and
cwtl
fldenv
pop
push
fcomps
mov
mov
push
test
out
stc
push
es
int
loopne
and
mov
jle
mov
je
push
movsl
sub
in
cmp
icebp
add
dec
add
std
leave
cs
test
jmp
clc
mov
mov
leave
jge
or
mov
fwait
mov
std
ljmp
jle
lods
mov
xchg
and
pusha
aam
loop
or
fnsave
insb
aas
loopne
mov
jg
sub
cmp
in
idiv
dec
cwtl
mov
mov
mov
rcl
mov
add
xchg
jb
test
push
dec
dec
rorb
xor
dec
scas
xor
outsl
mov
imul
sbb
mov
add
jb
in
orps
sub
xchg
and
out
push
mov
idivl
and
mov
or
test
push
mov
movsb
sub
pop
cmpsb
dec
ret
fldl
jae
cld
mov
pop
jb
push
loopne
adc
lret
xor
xor
sbb
sbb
aam
and
mov
sub
sbb
push
or
ficomps
cmpl
scas
xchg
inc
mov
mov
mov
mov
lds
push
or
call
sarb
pop
insb
int
sbbb
pop
subl
dec
sbb
out
push
jl
stc
xlat
mov
mov
enter
shlb
daa
mov
jge
add
sub
pop
xor
arpl
mov
xor
add
or
mov
mov
push
add
leave
push
iret
je
inc
jmp
sahf
mov
gs
pop
inc
mov
push
jne
jge
inc
mov
inc
and
inc
dec
dec
das
sub
xlat
enter
push
add
cmp
divb
sub
fisubrl
push
outsl
imul
cwtl
cld
cmp
xchg
test
iret
cmp
cmpsl
cli
cmp
pop
pop
sbb
sbb
mov
cmp
pop
sbb
in
rcrl
lods
test
lods
lcall
imul
insl
push
push
mov
or
mov
or
js
add
inc
lds
cmp
ret
ss
cmpsb
fs
mov
mov
imul
bnd
mov
std
mov
mov
jle
mov
dec
lret
rclb
std
sub
cmp
mov
divb
mov
adc
das
xor
and
sub
in
xor
mov
daa
lret
jg
jg
ljmp
inc
sbb
xchg
adc
icebp
pusha
notb
add
adc
or
mov
in
popa
push
js
mov
les
adc
aaa
fidivl
lahf
sti
sbbl
imul
xchg
out
dec
add
xor
pop
mov
gs
icebp
push
test
mov
cmp
cmp
mov
jns
mov
inc
leave
dec
dec
test
jge
lret
adc
mov
test
pop
jno
mov
xchg
mov
adc
sbb
mov
and
or
bound
das
inc
stos
test
adc
sahf
xchg
out
cs
push
loope
or
cmpsb
sbb
or
ja
xchg
inc
loope
push
jle,pn
add
xchg
jne
jecxz
sbb
or
xor
inc
hlt
push
decl
loop
cli
sbb
sub
push
mov
rolb
sub
cld
pop
xchg
jo
xor
int
outsb
cli
and
pusha
jle
push
mov
mov
frstor
scas
mov
mov
jns
insb
aaa
outsl
push
arpl
div
jp
pusha
jns
jae
xor
or
outsb
xchg
mov
mov
nop
lods
out
out
repz
cmp
sahf
cwtl
push
mov
xor
mov
sbb
fdivrp
xchg
dec
out
mov
pop
pushf
lods
add
sbb
cmp
fcoml
mov
loop
push
sub
in
ljmp
jp
pushw
stc
test
jp
jae
and
xchg
lods
lock
inc
push
outsl
add
fmuls
sahf
sbb
push
pop
ljmp
sbb
maxps
mov
cmp
add
mov
add
arpl
cmp
inc
shlb
xor
aam
idiv
push
lea
inc
stos
fists
inc
sub
aam
fpatan
mov
pop
and
popf
sti
mov
pop
out
inc
pop
or
and
xchg
cmp
dec
rorb
or
fs
sub
in
inc
jb
and
or
pop
aas
mov
cmp
pop
lds
ret
mov
fsubs
inc
xchg
aad
mov
icebp
xchg
mov
pop
xchg
lods
cli
addl
decb
sbbb
and
pop
xlat
add
int3
das
sarl
sti
lret
xchg
jo
addr16
jg
sub
xor
mov
fadds
push
or
jno
gs
cwtl
popf
fsubl
cmp
int3
in
fs
and
clc
dec
lods
push
addl
cmp
sbb
or
mov
cmpb
dec
int3
sub
call
cmpsb
fucomip
in
in
sbb
in
outsb
sbb
aas
mov
mov
pop
cltd
cmp
arpl
pop
inc
aam
shr
fnstcw
inc
into
mov
jbe
lret
jnp
imul
shll
std
hlt
shlb
inc
aaa
xchg
pop
lock
adc
clc
lahf
dec
xor
xlat
fldt
cmpsb
fisubs
sbb
adc
xchg
xchg
cmp
push
int
cwtl
jo
dec
add
mov
xchg
cmpps
scas
jo
mov
in
mulb
test
roll
push
push
mov
mov
fcmovnb
pop
lock
fbstp
insb
scas
xchg
pushl
vmovq
push
sub
sbb
stc
mull
cli
and
fmuls
inc
stos
push
jge
test
pop
movsb
xor
ret
or
jmp
pop
mov
xor
mov
scas
push
xchg
or
add
mov
cs
adc
aad
mov
push
mov
add
lahf
mov
into
xlat
sarb
cmc
and
jae
cmp
jp
nop
xchg
xchg
ljmp
add
scas
inc
inc
stc
imul
aaa
mov
lds
rcr
rcrl
ja
out
mov
loope
inc
xchg
and
lahf
pop
popf
cmp
pop
sahf
push
adc
popa
jns
addr16
cmp
xor
xor
mov
out
mov
pop
jle
pop
add
into
jg
filds
sti
lock
pop
repz
mov
cld
jge
rorb
js
pop
sbb
mov
push
or
xor
push
cmp
fstps
xchg
lea
mov
insb
lods
pop
and
xor
push
movsl
push
fsts
outsl
jo
lret
mov
mov
arpl
dec
mov
push
pop
aas
or
fsubs
adc
adc
pusha
push
xlat
mov
xor
rolb
cmp
mov
mov
shrl
loope
inc
sub
inc
pop
hlt
arpl
jae
push
cltd
inc
mov
inc
pop
cs
add
das
ret
mov
or
jecxz
ja
adc
lea
xor
fdivrl
and
test
out
lods
clc
std
mov
sbb
lahf
sub
movsb
push
sub
shlb
xchg
cmp
xchg
pop
imul
adc
pop
aaa
insb
jp
pop
fcomp
int
in
ljmp
jno
fsubrl
sbb
push
outsb
adc
arpl
loopne
aad
lds
push
jo
push
es
faddl
mov
divl
dec
mov
lods
and
mov
adcb
adc
mov
xor
add
jbe
xchg
or
or
mov
cltd
iret
mov
cmp
arpl
xchg
enter
mov
pop
int3
add
jns
jo
ja
addr16
daa
fs
fbld
push
lods
or
cmp
fisttpl
lahf
fnstcw
inc
sahf
mov
add
sbb
aam
adc
pop
daa
xchg
cmp
jmp
add
outsl
fcmovnbe
fstps
mov
pop
inc
sub
rcll
mov
mov
jecxz
pop
pop
lea
outsb
adc
adc
stos
push
add
sbb
dec
in
xor
and
push
jmp
les
mov
cmpsl
mov
adc
cmp
orb
or
repnz
or
mov
push
cmpsb
push
cmpsb
scas
jecxz
jno
lret
cmp
push
dec
fwait
rclb
mov
test
dec
adc
shlb
cmp
dec
cs
xchg
or
pop
es
ret
sub
adc
push
push
mov
outsl
add
add
arpl
imul
xor
pop
mov
ljmp
sub
addb
sub
push
addl
inc
sbb
fdivrl
imul
mov
iret
rcr
aas
addl
pop
js
hlt
dec
xchg
mov
aaa
je
mov
cmp
xchg
mov
or
and
mov
cmpsb
lcall
pop
mov
xchg
push
pop
cld
xchg
sub
push
jmp
jae
pop
sub
pop
mov
out
push
test
and
mov
jmp
sub
pop
sub
xorl
loop
testl
shll
push
cmp
mov
mov
sub
add
jns
jge
mov
fstps
iret
jns
fcmovne
aam
test
das
cmp
dec
subl
cmc
jb
xor
cmp
adc
mov
xchg
out
imul
out
dec
mov
xchg
and
inc
jae
and
or
pop
in
scas
xchg
cmp
adc
fstl
lock
push
pop
pop
xchg
push
outsb
mov
xchg
fwait
jmp
in
out
adc
hlt
popa
push
mov
push
mov
dec
sbb
lods
or
ret
pop
push
es
and
jecxz
into
jne
cs
sbb
dec
xchg
pop
sti
std
and
addl
mov
sub
sarb
ret
or
dec
mov
imul
xor
std
in
sub
js
enter
sub
or
mov
bound
idiv
cmp
pop
or
mov
sbb
bound
dec
aas
cmp
pusha
jno
push
add
fsubl
daa
movsb
jno
jns
mov
or
rcr
mov
test
addr16
test
sti
cmp
add
push
sub
or
mov
push
int3
push
pop
mov
cmp
fisttpl
pop
cli
fidivrl
js
aaa
push
push
lret
insb
insl
icebp
cmpsl
es
imul
dec
add
outsl
mov
gs
jp
or
mov
cmp
lahf
int3
je
clc
and
lret
ret
fcoms
stos
into
clts
pop
jl
push
les
aam
and
mov
adc
fsubrl
push
sub
mov
rcl
jae
xor
mov
dec
scas
xchg
inc
sbb
out
rcl
pop
stos
cmp
push
pop
loopne
ficoms
xor
mov
ds
xchg
mov
xchg
in
and
fimull
or
xchg
enter
push
jb
sti
stos
scas
adc
outsb
pop
cmp
xchg
pop
sarl
sub
jg
test
out
inc
push
adc
push
push
push
jnp
xor
jecxz
enter
gs
out
add
adc
rcl
pop
mov
addr16
push
pop
int
mov
mov
ret
test
mov
inc
icebp
xor
dec
loopne
fsts
inc
xchg
mov
jnp
ja
cmpsb
icebp
lds
pop
mov
aas
fisubl
pop
jecxz
mov
subb
or
jne
jns
cmp
sub
push
call
pop
es
inc
dec
cmp
push
mov
call
pushf
rcrb
jle
mov
cmpsb
cmp
push
jmp
push
vpsrlq
inc
call
pop
push
loope
mov
cmc
enter
mov
mov
int
and
push
inc
jle
pushf
adc
mov
xchg
sbb
add
pop
arpl
mov
mov
dec
jb
aaa
dec
cmpb
scas
shll
cltd
sti
stos
push
mov
xlat
or
jmp
lret
sti
add
sub
das
xchg
mov
mov
sti
btr
mov
pushf
sahf
in
repz
rcrl
add
out
push
xchg
push
pushf
jbe
mov
in
sbb
gs
loopne
in
pop
mov
es
jns
pop
scas
adcb
lds
aas
mov
push
inc
dec
ljmp
aaa
pop
push
dec
cmpsl
cmp
fmuls
adc
stos
adc
insl
stc
dec
fbstp
subl
lret
js
mov
fimull
addr16
es
aam
out
add
lret
push
pusha
aad
lret
push
daa
loope
repnz
xchg
jbe
ret
mov
mov
lock
gs
inc
cmp
loopne
and
in
push
nop
jl
pusha
leave
pop
push
push
sbb
insl
inc
mov
int3
fs
adc
pop
cmpsb
pop
call
in
data16
mov
insl
push
xor
sbb
sbb
cltd
mov
mov
lods
add
and
imulb
cwtl
sbb
pop
or
imul
rclb
outsb
out
cmp
and
jno
dec
nop
sub
jne
in
dec
mov
in
pop
loope
inc
sarl
rcl
aam
mov
push
adcl
mov
xchg
cmpsb
movsl
push
cmp
push
and
test
sub
push
push
push
jg
jle
push
addr16
jmp
in
out
push
addr16
clc
loop
mov
loope
in
cmpsl
mov
cmp
mov
in
mov
pop
loopne
nop
mov
dec
jp
sahf
out
mov
mov
mov
fs
pop
ja
jns
nop
xchg
scas
ja
add
push
or
jecxz
or
mov
jmp
imul
repnz
dec
lcall
xor
enter
jle
mov
mov
cld
mov
daa
sub
jo,pt
movsl
jmp
push
aaa
ds
les
jno
mov
out
out
mov
or
icebp
xchg
dec
sub
mov
sub
ret
fmull
out
xchg
cmp
lahf
icebp
sbb
daa
xchg
lods
mov
outsb
mov
test
push
or
xor
jp
add
div
adc
jmp
or
xor
cmpb
mov
adc
sub
std
rclb
add
jg
fsubl
pop
xlat
icebp
sarl
jmp
xor
sub
inc
inc
iret
js
dec
pop
ljmp
xor
dec
arpl
mov
dec
cmpsl
lea
dec
loope
or
xor
push
addl
rorb
push
in
sub
adc
xor
push
aaa
iret
sbb
lds
adc
sbb
int3
jle
push
sarb
cmpsl
es
dec
and
loop
pop
mov
incb
inc
pop
push
or
out
imulb
dec
mov
shll
mov
in
lret
iret
dec
cltd
push
sub
les
insb
aad
cld
inc
add
mov
xor
pop
lds
cmpsb
jne
sbb
jmp
rolb
lock
push
rclb
pushf
lds
sub
dec
stc
shrl
rcr
hlt
pop
xchg
sahf
jmp
or
or
pop
push
mov
dec
fisttpl
sbb
iret
mov
xlat
mov
mov
iret
mov
jne,pt
into
jbe
inc
mov
dec
dec
pop
sbb
adc
add
sub
mov
xchg
int
loop
dec
and
or
out
mov
pop
out
lahf
push
or
cmp
pop
xor
adc
ljmp
fsubs
movsl
ret
ret
cmpsl
inc
dec
push
les
ret
inc
adc
xchg
or
adcb
idiv
fsubl
dec
cmpsb
sbb
inc
sarl
dec
rcll
arpl
scas
sub
jp
dec
sti
jnp
outsb
adc
cli
aad
lods
adc
imul
ja
xchg
xchg
pop
xchg
inc
mov
loop
push
pushf
jno
popa
xchg
add
in
imul
mov
pushf
out
test
cld
movsb
adc
dec
mov
mov
pop
sarb
daa
ret
pop
lahf
jle
jl
addb
xor
xor
std
loopne
test
sub
or
addl
push
cmp
es
pop
sbb
pop
adc
sbb
pop
push
xor
cmp
mov
cmp
insb
mov
je
lods
rep
bound
and
dec
psrld
nop
ret
add
inc
or
pushf
mov
insl
push
inc
mull
and
sti
inc
std
imul
js
in
mov
loopne
inc
movsb
stos
stos
int
mov
push
sub
jns
cli
in
or
push
in
stos
push
mov
inc
nop
movsb
sbb
ds
lret
and
pop
sbb
push
repz
leave
lea
push
push
or
sbbl
ds
jno
int
imul
fcmovnb
ja
push
das
mov
pop
stos
jbe
aas
jne
sti
adc
sbb
int
out
es
insl
shlb
inc
and
mov
inc
mov
mov
xor
inc
popf
lea
test
cmc
or
mov
adc
dec
mull
clc
popa
test
mov
lock
addb
out
rorb
push
sahf
mov
push
les
inc
mov
sbb
xor
loop
cmp
or
mov
mov
fnsave
xchg
sub
mov
mov
mov
lods
ljmp
inc
stos
mov
outsl
in
dec
test
or
in
out
pop
jne
cs
mov
cmp
nop
fdivrs
push
inc
pop
add
mov
and
andb
sbb
cli
fcoms
cmp
rolb
mov
cwtl
xor
jle
insb
push
daa
or
mov
xchg
rcl
out
std
js
mov
adc
enter
divb
lcall
shr
sub
aas
mov
popa
dec
jp
mov
push
in
inc
lahf
enter
andb
push
push
fsubs
test
pop
cmp
and
js
sub
cltd
xor
pop
pop
popa
lods
addr16
les
push
cs
pop
ffreep
cmp
in
xor
cmpb
mov
stos
movsl
rcrb
cmp
jle
inc
fimull
test
push
cmpsl
cmpsb
lcall
div
sbb
sub
das
cmpsl
fwait
add
outsb
rorl
lock
leave
rcl
shll
sbb
mov
icebp
mov
nop
call
mov
fmul
movsl
scas
sbb
jmp
cli
cmp
mov
into
sub
xor
mov
test
dec
loope
out
xchg
lahf
mov
inc
jecxz
imul
mov
mov
stos
or
std
ss
pop
ja
lods
bound
loop
mov
mov
adc
lock
mov
movsb
cmp
adc
mov
pop
pop
dec
gs
in
stos
ficoml
xchg
inc
insb
inc
repz
push
lret
pop
out
leave
loopne
push
mov
outsl
pop
aaa
lock
jg
ss
cmp
cld
xchg
int
in
cmp
cld
xchg
dec
pop
frstor
sti
js
idivb
aam
in
pop
jns
in
push
jno
gs
stos
movsb
add
xor
push
cmc
outsb
outsb
cmp
and
outsb
in
mov
or
in
shlb
xor
cwtl
pushf
inc
insb
jo
add
shrl
jmp
movsl
fnstsw
mov
mov
jne
std
das
mov
clc
cmc
pop
sub
pushw
inc
aaa
mov
bound
inc
addl
jle
dec
xchg
lods
sbb
fildll
in
dec
loop
ja
mov
cmpsl
pushf
pop
and
sbb
push
sarb
inc
dec
aad
fstps
or
fildll
and
push
cmp
mov
push
repz
inc
pusha
sbb
mov
add
mov
dec
mov
push
fsubrs
mov
mov
push
push
int
cld
adc
xor
cmp
sbb
stc
sbb
loope
fidivrs
sbbb
lcall
sub
test
out
stos
popf
enter
shll
cmp
imul
sbb
stos
mov
and
imul
mov
jbe
mov
mov
add
mov
ljmp
xchg
bound
test
movsb
ds
int3
mov
fdivl
and
mov
ds
int3
jge
data16
cmp
sub
lods
xchg
fcmovbe
and
addl
mov
or
test
pop
arpl
xor
mov
dec
sbb
stos
imul
jb
xchg
in
cmpsl
mov
std
mov
into
cmpsb
push
adc
xchg
lods
sbb
adc
push
mov
ljmp
aaa
mov
and
pop
shll
rcll
jmp
push
mov
ret
dec
add
jne
sbb
adc
pusha
aas
add
sub
cmp
xor
xchg
andb
adc
out
adc
lahf
outsb
dec
pop
dec
push
repnz
in
sti
pusha
and
lock
fcmove
push
cmp
mov
aad
push
fcoms
cs
xchg
adc
mov
sahf
mov
cmc
sub
mov
aaa
out
dec
mov
lock
jle
sti
or
lret
pop
xchg
pop
fsub
jg
xor
mov
push
mov
jmp
pop
les
cltd
shll
rorl
mov
dec
jns
insb
gs
popf
leave
cmp
xchg
mov
shrb
std
mov
and
filds
mov
jb
addr16
mov
push
cmp
jbe
daa
cli
enter
cmp
sub
and
out
pop
pop
fdivrs
push
jns
push
rol
cmp
sub
lret
outsb
dec
into
jb
dec
rorb
dec
mov
add
push
std
js
shlb
sub
imull
mov
or
xor
fsubrl
sub
xchg
sub
ljmp
negl
lds
loop
ficoms
lods
test
adc
loop
sti
loop
cmp
pop
mov
ja
addr16
or
addr16
movsl
int3
ss
scas
cmpsl
enter
hlt
push
push
lret
jb
aad
mov
xchg
arpl
add
rorb
pusha
push
fwait
mov
lret
push
lock
mov
and
jbe
mov
mov
mov
test
add
clc
dec
in
arpl
dec
int3
cmp
push
dec
int3
add
ss
rcl
adc
aam
mov
fwait
clc
aas
fdivrs
js
push
bound
and
jae
jae
dec
xchg
mov
movsb
cmc
push
shll
or
cmpsb
shlb
enter
fists
subl
dec
insl
aam
xchg
adc
lcall
mov
mov
test
gs
mov
fsubrs
fucom
pop
unpcklps
outsb
adcl
cmp
cmpsb
mov
mov
push
jp
mov
stos
iret
inc
add
mov
xchg
dec
test
sub
and
fistl
jae
movb
sub
arpl
jle
xchg
in
xor
ja
nop
into
xchg
cmp
jecxz
lea
call
cmp
cmp
lcall
icebp
push
fsubrs
jo
jmp
je
test
out
sahf
dec
mov
inc
dec
lahf
aad
jnp
hlt
xchg
jne
push
jmp
outsb
outsb
mov
in
mov
or
pop
dec
sbbb
mov
icebp
loopne
push
das
xchg
push
ret
add
jae
xor
jmp
adc
sbbl
nop
xchg
outsb
or
mov
jp
sub
mov
cmp
jb
cmp
iret
and
aaa
sub
scas
sub
mov
xchg
adc
cmp
ffreep
pop
add
push
loop
stc
in
xchg
arpl
jl
and
icebp
inc
test
mov
cmp
hlt
push
jl
sbb
sub
pop
mov
cmc
jnp
push
ss
xchg
or
test
jae
aaa
pop
dec
pusha
fwait
into
mov
jno
ds
call
cmc
out
pop
jne
and
inc
push
stc
pop
scas
and
out
je
outsl
pop
out
lret
jecxz
sub
daa
cmp
movsl
cli
fs
cmp
pop
inc
insb
mov
scas
js
dec
adc
fisubs
dec
cmp
dec
roll
xor
cmpb
mov
pop
xor
jb
mov
in
mov
or
adc
cmp
push
or
or
inc
push
mov
cmp
ror
xchg
mov
push
cmp
push
inc
lahf
or
xor
and
leave
mov
out
ja
adc
jns
andl
enter
add
movsl
mov
movsb
ja
fildll
cmp
mov
xchg
pop
adc
jno
data16
fdivs
push
cwtl
adc
sti
int
in
int3
push
stos
mov
dec
push
adc
das
cwtl
pop
loop
daa
inc
dec
dec
lock
lcall
cwtl
pop
addl
fnstcw
xlat
cmp
into
xchg
inc
sbb
pop
fimuls
push
push
lods
and
cli
movhps
test
mov
fists
cmc
in
scas
mov
cmpsb
cmc
enter
sub
xor
add
test
xchg
orl
rolb
mov
pop
mov
jns
movsb
mov
sub
call
js
adc
sbb
pop
inc
aam
shl
xchg
pop
jecxz
lea
dec
xlat
dec
dec
mov
outsb
je
inc
insb
cmpb
lret
xchg
pop
sbb
pop
xchg
sub
scas
inc
mov
clc
or
sbb
mov
imulb
pop
and
in
mov
jg
les
adc
mov
scas
dec
cmp
cwtl
push
outsb
and
or
mov
mov
cmp
movsb
push
cmp
cld
sub
adc
imul
xchg
shl
ja
adc
scas
nop
loopne
ljmp
popa
jne
add
pop
clc
je
fdivs
mov
repz
mov
les
dec
push
add
test
bound
out
adc
fwait
loope
mov
mov
das
into
mov
pushf
sub
lcall
fidivs
jns
pop
jnp
inc
loope
out
lahf
and
fxch
dec
xor
mov
xchg
push
mov
push
sbb
orl
mov
cmpb
repz
enter
and
cmp
fsub
dec
movsl
lret
add
out
movsl
icebp
psrlw
loop
cwtl
jp
pop
xchg
pop
gs
jmp
or
into
jp
jmp
cltd
mov
gs
jg
aas
into
loope
cmp
dec
xor
popa
mov
out
or
in
imulb
adc
std
js
jg
and
cli
ss
or
pop
push
sbb
repnz
xchg
xor
adc
rcl
add
std
das
rcrl
lods
data16
lds
push
fsubl
xchg
dec
bound
dec
adc
in
adc
orb
adc
dec
andb
cli
or
inc
jb
js
call
arpl
fs
daa
in
out
insb
xlat
dec
in
div
inc
int
mov
notl
dec
adc
fdivl
cwtl
jne
xchg
das
fbstp
mov
clc
in
fisubrs
xchg
pop
pusha
scas
scas
ljmp
pop
adc
iret
gs
lds
loop
add
sbbb
mov
lea
cmpsl
rorb
lea
jo
mov
jl
mov
stos
movsb
mov
jmp
iret
idiv
leave
arpl
sbb
fwait
lods
and
test
lret
sbb
mov
xchg
sbb
nop
dec
sub
or
or
in
jnp
xor
lret
mov
mov
adc
std
jp
jp
popf
sbb
scas
jno
push
test
mov
and
sbb
xchg
push
cwtl
jecxz
insb
enter
leave
jmp
pop
and
pop
jns
mov
xchg
sub
mov
nop
lods
inc
and
cmc
jae
iret
mov
adc
imul
mov
inc
push
jns
adc
mov
xchg
mov
or
cmp
jno
or
jnp
cmc
arpl
in
test
dec
pusha
inc
jns
xchg
xorl
in
rcl
and
mov
pop
xchg
cli
inc
xchg
mov
mov
out
aas
es
mov
mov
rolb
dec
or
mulb
inc
test
xchg
lahf
and
je
inc
jle
pop
xchg
movsl
mov
jg
xor
pop
scas
pop
out
add
or
enter
pop
lds
ss
or
dec
mov
call
sahf
dec
jp
ret
jno
jecxz
jge
or
mov
pop
lods
pusha
lcall
inc
lock
sub
jo
fcompl
mov
shr
cmp
dec
stos
pop
cmp
mov
shl
fisubs
jl
or
sbb
or
test
test
add
jne
adc
jl
add
movsl
mov
sub
cwtl
or
cmpb
jg
push
sbb
cmp
outsl
mov
dec
enter
into
and
aas
jmp
add
ret
push
mov
xchg
dec
pop
pop
out
mov
shll
shrb
test
mov
into
cmp
sbb
mov
inc
mov
or
push
shll
adc
jl
ret
adc
mov
into
lret
dec
add
lds
ret
cli
xor
add
jae
and
scas
stc
cmp
push
movsb
or
cmp
jp
arpl
sbb
lahf
pop
popa
in
test
mov
add
hlt
loope
cld
roll
pop
icebp
rcr
mov
jge
mov
jno
sahf
test
mov
add
inc
jo
add
jle
lea
xchg
movsb
mov
or
pop
sahf
rorb
pop
int3
dec
jo
jecxz
or
movsl
jmp
in
aas
lret
rcrl
pop
std
adc
inc
xchg
dec
xor
int3
fildll
cmpsb
sub
int3
idiv
mov
rcrl
sahf
pop
icebp
mov
divb
push
aaa
or
es
fistpll
lods
jo
sub
popf
xor
inc
fdivrs
pop
and
out
add
popa
jno
ror
jge
aaa
jecxz
sub
xchg
arpl
cmp
add
shll
pop
jo
push
jnp
inc
add
cmp
sub
mov
inc
add
jnp
ss
push
mov
push
add
cmovae
leave
cltd
lahf
rcr
lea
jae
sub
xor
fiadds
sbb
or
xor
sbb
leave
adcb
and
je
loop
or
inc
sbb
sub
and
inc
xor
ja
mov
movsb
pop
nop
stc
iret
into
jp
aam
push
xchg
sbb
inc
icebp
xchg
push
dec
lock
lretw
jl
inc
cmp
inc
subl
loopne
aaa
nop
movsb
pusha
stc
jb
xchg
cmpsb
jno
xchg
aaa
imul
lret
repz
xchg
popa
mov
mov
xor
mov
data16
pop
jae
pop
jecxz
jbe
cmp
jle
insb
cmpl
mov
nop
daa
adc
mov
sbb
xchg
pop
inc
xchg
ljmp
pop
cmpb
cwtl
call
out
inc
das
es
out
arpl
jecxz
shll
cmp
movsl
addl
lahf
push
popf
jl,pn
or
int3
dec
mov
scas
andl
push
inc
lea
push
xchg
cltd
mov
mov
mov
pop
adc
mov
lods
and
stc
mov
pop
mov
xor
mov
popf
in
cli
sbb
aaa
out
test
sbb
pusha
mov
push
push
cld
loop
into
in
push
lahf
mov
sbb
movsb
cwtl
ror
scas
in
mov
sub
in
imul
add
xchg
pop
stos
fistps
push
mov
arpl
lcall
iret
add
cmpb
xchg
adc
mov
pop
pusha
xor
or
cmp
aam
sti
pop
push
aaa
add
repz
cmc
mov
jb
add
fmul
adc
mov
inc
pop
push
xchg
movsl
adc
cltd
out
or
mov
adc
pushl
out
xlat
mov
inc
inc
inc
mov
ret
pop
fwait
cmp
das
int
jnp
dec
jne
icebp
sub
lods
mov
sahf
jnp
adcb
notb
cli
fistl
and
jnp
stc
outsl
xchg
sub
lcall
inc
mov
xchg
into
lock
ret
cmp
cmp
jge
bound
jnp
jecxz
mov
orl
repnz
push
aam
sbb
scas
push
fisttpll
jb
in
aam
mov
imul
dec
fcoms
pop
push
lret
and
xor
dec
call
loop
and
add
daa
jmp
and
and
popa
fsubs
dec
scas
or
pusha
adc
inc
js
add
arpl
pop
push
or
insl
shrb
or
cmc
push
xor
mov
and
xor
hlt
test
xchg
movsl
loopne
popa
cmc
mov
cs
int3
pop
out
inc
push
mov
enter
adc
mov
push
stc
int3
cli
cld
xchg
pop
imul
fidivrl
enter
cli
rol
int
xor
popl
mul
xchg
iret
xchg
add
mov
xor
stos
test
cmp
cmpsl
sub
leave
adc
mov
mov
movsb
inc
and
push
push
lock
test
cmc
arpl
mov
and
adc
gs
cld
aaa
xchg
mov
cmpb
xchg
into
dec
mov
push
jbe
and
jb
mov
sti
in
dec
sbb
or
lahf
add
enter
ljmp
sub
jl
and
aad
lret
cld
shlb
sbb
es
js
movl
nop
roll
pop
sub
in
sbb
leave
icebp
jmp
xchg
inc
scas
cmp
inc
lahf
out
loop
push
inc
addr16
dec
outsb
xchg
insl
andl
cmp
xchg
xchg
stos
sub
cld
and
test
out
mov
rcrb
jbe
repnz
inc
sti
xchg
mov
in
mov
bound
dec
jo
mov
xor
ret
notl
mov
pop
adc
call
inc
int3
lock
jnp
cmc
xor
pop
in
inc
cmp
outsl
or
vpcmpgtd
aaa
call
add
subb
jge
fdivl
clc
lock
inc
imul
dec
xchg
xchg
fstpt
dec
bound
sti
lahf
add
and
outsl
push
inc
jnp
inc
adc
stos
jne
add
mov
inc
shll
int
scas
mov
mov
mov
or
sbb
xchg
mov
pop
dec
push
leave
cmpsl
xor
or
push
xchg
mov
push
clc
xchg
loope
rolb
adc
inc
and
ss
dec
mov
and
ret
ja
mov
repz
pop
add
push
jl
mov
push
push
inc
loope
lret
cmovno
jp
iret
iret
sahf
pop
push
cmpsl
push
pop
add
inc
lahf
icebp
or
sbb
mov
nop
or
and
push
aad
add
dec
test
inc
mov
dec
stc
je
mov
mov
dec
cmp
bound
or
leave
sbb
loopne
pop
out
outsl
mov
es
dec
mov
sub
xor
mov
rcrb
or
into
les
sub
imul
fisubs
and
pop
ljmp
lds
cmp
push
xchg
in
cmp
aam
push
or
xchg
outsb
mov
and
mov
sbb
outsl
push
mov
mov
xchg
mov
push
mov
pop
ficoms
aad
data16
add
lret
mov
jmp
cmp
jo
and
or
cmp
icebp
push
jno
and
pushf
scas
add
dec
push
push
push
lahf
mov
and
xchg
jmp
jns
jb
and
int
and
div
mov
je
add
cmp
rolb
jge
or
call
adc
cmp
ds
jle
dec
push
or
call
and
or
aam
xchg
jmp
xchg
inc
jecxz
or
loop
int3
or
mov
push
inc
mov
adc
in
or
cmpsb
in
js
mov
pop
jo
in
xchg
add
cltd
xorl
pop
add
push
mov
xor
mov
adc
mov
outsb
mov
ds
filds
sahf
test
cmp
lea
in
sbb
add
repnz
repz
push
lcall
mulb
sub
jns
rol
adc
xchg
ficoms
add
inc
dec
pusha
jae
popa
push
mov
xor
push
jmp
xchg
lock
inc
cli
movb
mov
lods
stos
pop
out
imul
push
sbb
stc
pop
or
fistl
nop
pop
stc
dec
out
and
sub
iret
fwait
xor
aas
and
add
stos
in
lds
pusha
push
mov
pop
arpl
mov
fxch
lods
pop
pop
xor
into
lods
dec
cs
imul
jnp
sbb
push
sub
jns
sbb
sbb
pop
jmp
adc
xchg
add
stos
sbb
jp
pop
popa
lods
pop
sbb
and
mov
pop
int
sub
jae
dec
jmp
enter
push
rcr
rorb
sub
dec
sti
add
loopne
imul
dec
or
xchg
es
mov
insl
lods
ljmp
inc
cmovns
cmp
fstl
lret
cmpsl
xor
icebp
std
add
xchg
cmp
daa
cmp
jp
cmp
mov
xchg
adc
adcl
dec
lret
popf
cmp
xchg
fidivrs
out
jbe
mov
sbb
adc
sbb
cmc
xchg
lock
outsl
inc
and
pop
mov
or
outsl
lds
jl
ret
cmpsl
aaa
not
mov
jno
sbb
das
shrw
cmpsl
pushf
or
xor
addl
sahf
mov
addr16
sub
lahf
add
jno
and
add
jb
push
roll
sub
xor
jecxz
ret
stc
or
dec
shl
ds
lret
push
or
addb
les
ret
popa
push
insl
mov
out
shrb
pop
std
add
sbb
xchg
fsubl
add
pop
sbb
cmpsl
lods
leave
pop
xchg
fwait
in
rcll
mov
sti
dec
sbbb
mov
stc
pop
cmp
cmp
mov
sub
mov
scas
add
xchg
sub
jp
xor
popa
test
jno
jo
xchg
movsl
adc
inc
adc
push
mov
bound
dec
mov
icebp
int3
sub
call
fsub
cmc
insb
mov
orl
ss
or
or
mov
gs
test
jbe
and
lea
imul
add
and
movsb
icebp
or
inc
movsb
mov
sub
gs
xchg
xor
pop
mov
fldcw
push
push
fwait
loopne
fildll
ret
sahf
fwait
pop
cmp
pop
orb
push
inc
inc
data16
xchg
dec
std
sbb
outsl
push
cmp
shll
adc
adc
mov
adc
fbld
lret
stos
inc
test
insl
xor
sti
mov
in
mov
mov
inc
cmc
mov
adc
fildl
fimuls
jns
outsl
jge
mov
push
and
adc
or
ljmp
test
iret
lds
outsl
popf
pop
cmc
mov
dec
dec
cld
lods
in
pop
lds
push
mov
adc
sbb
in
fchs
arpl
dec
xor
ret
lock
outsb
fs
xor
mov
adc
mov
imul
lea
arpl
push
and
push
jne
popa
loope
mov
stos
push
insb
pop
je
cli
out
dec
aam
into
inc
ja
jnp
pop
push
jmp
jmp
mov
lcall
sahf
outsl
sub
popf
dec
out
xchg
stos
stos
mov
xchg
cmp
pop
and
xchg
sti
push
push
scas
inc
jl
inc
jmp
movsb
addr16
pushf
fisttps
jge
dec
push
cli
mov
or
xchg
mov
mov
mov
mov
dec
cltd
cmp
pop
mov
add
pop
jnp
std
cmp
bound
fwait
cs
sbb
js
add
mov
movsl
xlat
sar
inc
fsubp
in
push
outsl
sbb
cli
les
clc
stos
pushf
icebp
fistps
subb
or
add
adc
xor
sbbl
imulb
inc
and
add
adc
push
or
icebp
mov
jbe
cmp
das
dec
cli
mov
push
adc
inc
mov
cli
sbb
jg
popa
sti
jmp
cmp
imul
shrb
xor
jnp
or
adc
loop
pop
mov
jns
adc
lods
mov
push
js
and
jmp
inc
ret
into
xor
inc
push
fstpl
mov
jge
xchg
out
add
leave
push
jo
mov
ja
lea
mov
imul
jnp
adc
outsb
and
rcr
inc
fidivs
xchg
xchg
addr16
cmpsl
sub
mov
shll
or
mov
test
xor
aaa
out
movsl
icebp
repnz
mov
xchg
mov
xchg
std
jae
pop
mov
out
push
sub
mov
or
stc
jbe
push
hlt
push
iret
ret
pop
imul
xorl
dec
test
jo
sub
in
bound
enter
sub
mov
cmp
bound
loop
cmpb
movsl
stc
xchg
hlt
daa
mov
leave
insl
daa
movsl
lret
loope
pop
movsl
bound
iret
test
test
jmp
sub
outsl
mov
adc
movsl
sbb
stos
adc
sbbl
xor
push
xor
mov
and
iret
lcall
fwait
gs
call
and
adc
ret
jb
addl
jmp
dec
mov
mov
jecxz
es
outsl
cmp
jge
and
dec
sub
mov
in
dec
dec
pop
and
cmc
lods
mov
dec
push
scas
inc
scas
cwtl
icebp
push
add
mov
pop
fwait
xor
mov
lods
push
hlt
push
cs
movsl
mov
dec
add
add
cmp
faddp
push
push
mov
xchg
xchg
pop
jns
sub
jo
je
xorl
in
inc
mov
fsubrs
sti
or
stos
stos
mov
inc
xchg
ss
push
cli
dec
sbb
outsl
jecxz
sbbb
fdivs
lock
push
mov
jnp
in
in
sub
push
mov
push
ljmp
or
fisttps
sbb
loopne
cmpsb
xchg
fucomi
daa
ret
pop
movsb
inc
test
icebp
push
and
xor
popf
inc
popf
adc
sbb
loopne
pop
pop
movsl
add
inc
xchg
fwait
pop
add
clc
sbb
ret
rorb
or
orb
lahf
sbb
or
pop
dec
rolb
enter
in
cmp
jb
es
out
sbb
pop
out
xchg
mov
pop
sbb
test
add
cmp
les
xchg
mov
xchg
ss
fisubrl
push
aaa
aam
ljmp
jnp
sahf
out
stos
sbb
ffreep
shll
clc
addr16
cli
add
repz
sub
sbb
pop
push
pop
xlat
inc
rolb
inc
fadds
mov
ss
sub
jo
stc
pop
dec
data16
mov
adc
cltd
sub
cmpsb
lods
cs
jp
push
inc
fnsave
int3
lds
into
jmp
leave
idivb
jg
mov
push
jb
mov
shll
pop
cmpb
mov
push
stos
sub
addr16
enter
repnz
jmp
mov
lret
movsl
jne
loopne
mov
not
movsl
pop
xlat
call
pop
adcl
aad
stc
pop
dec
mov
std
adc
mov
lret
iret
out
xchg
dec
pop
pop
push
cmp
lret
and
fstpt
rolb
hlt
fwait
sub
cld
daa
sub
inc
sub
lea
adc
xor
inc
imul
jp
adc
stc
inc
push
pop
add
cmp
shrb
jmp
mov
notb
cmpsl
idiv
adcl
xchg
push
cmpb
in
pop
pop
xchg
sti
mov
lods
xchg
mov
scas
out
add
add
jp
add
ficoms
cmp
lods
mov
daa
notb
dec
jo
mov
hlt
sbb
jle
pop
clc
je
in
test
es
mov
push
lds
out
lods
cwtl
lods
cmp
pop
scas
push
inc
loope
mov
stos
sbbb
sub
pop
inc
xor
push
lods
push
sbb
pop
lock
scas
scas
jb
ja
and
dec
ror
push
sahf
daa
aas
rcrl
es
fnstsw
adc
fs
mov
xchg
or
push
cmp
addr16
mov
adc
or
inc
mov
aas
xchg
add
dec
and
inc
insb
xor
popa
loop
clc
mov
nop
das
loopne
out
cmpsb
adc
aad
xchg
testb
mov
sub
mov
popf
es
push
dec
fidivs
fistpll
sub
jecxz
mov
je
test
sbb
mov
repnz
bound
out
push
jno
and
fldl
jg
dec
sub
mov
stos
addr16
cmpsl
out
fisubl
dec
imul
mov
lcall
pop
fs
cltd
dec
mov
xchg
xchg
cmc
xlat
or
sub
shlb
lcall
out
dec
test
outsl
inc
pop
adc
fdivr
add
adc
and
or
mov
in
cmpsb
sbb
mov
int
je
shl
fs
adc
nop
fildl
pop
mov
xlat
push
jmp
shll
fistps
cmpsl
jmp
jmp
cwtl
outsb
xchg
out
stc
xor
inc
insl
das
xrelease
ljmp
sbb
jns
xor
mov
iret
dec
cltd
mov
push
xor
sbb
sub
cmpb
xchg
dec
xchg
stc
fidivs
sbb
sub
mov
push
xchg
sbb
push
push
out
cmpsb
sbb
bound
or
cmc
enter
push
insl
push
pop
jae
lahf
sub
jns
fs
dec
ljmp
jmp
mov
lret
or
data16
insl
fisubrs
repz
jecxz
cmp
stos
or
push
inc
jp
dec
out
cmp
inc
mov
lock
aam
loope
cld
sub
add
int3
push
xchg
ss
test
jge
inc
rcll
sbb
popa
adc
call
test
dec
sub
fwait
icebp
push
inc
aas
push
imul
rcr
mov
test
pop
or
sbb
pop
mov
inc
pop
add
inc
lret
addr16
mov
cmp
mov
testb
pushf
int
or
jae
std
mov
in
jle,pn
outsb
inc
jno
dec
inc
inc
or
pop
das
add
lret
xor
fdivrp
cltd
insb
loope
mov
aas
pop
cmp
daa
orl
jnp
lahf
pop
cmc
repnz
cmc
adc
or
loopne
test
cmp
jle
lock
push
and
cmp
test
in
lds
lock
or
sub
and
add
int3
or
mov
mov
jmp
and
imul
mov
adc
and
and
clc
inc
xor
loop
je
cmp
cli
jle
es
pop
add
loop
arpl
xchg
jbe
imul
insb
pop
je
sub
out
inc
jle
jbe
pop
push
lock
pop
add
add
mov
leave
aam
dec
cmp
movsb
and
jmp
mov
mov
mov
mov
pushf
push
into
test
jecxz
rcll
push
fcomp
in
mov
dec
enter
test
pop
jne
mull
sub
sti
jno
push
jae
jae
test
dec
ficoml
mov
movsb
and
add
mov
aam
movsb
cmc
dec
xor
xchg
push
mov
lods
mov
mov
gs
adc
pop
mov
cmc
xchg
lds
push
jne
loop,pt
mov
lods
dec
hlt
add
cs
sti
pop
dec
xchg
in
dec
ret
aam
cmp
xchg
and
mov
cmpsb
sbb
dec
iret
add
pop
je
notb
in
mov
je
in
or
adc
pop
mov
sbb
dec
pop
dec
int3
mov
xor
dec
jle
mov
movsl
sti
add
xchg
scas
or
shr
daa
mov
mov
or
cmp
mov
mov
mov
idiv
dec
outsl
push
dec
add
inc
mov
mov
in
lret
cmc
inc
ljmp
ret
jo
mov
dec
or
shll
ljmp
pop
mov
mov
jecxz
pop
add
and
mov
jnp
insl
mov
xchg
loop
add
push
xchg
adc
fwait
lret
shrb
nop
jmp
sub
add
fs
out
jecxz
mov
jb
lock
iret
rcl
mov
gs
js
lea
jecxz
stos
subb
pop
lret
test
mov
out
pop
lods
outsb
ljmp
cs
test
lods
xor
jmp
mov
in
inc
lds
shll
sub
movzbl
jmp
arpl
push
xchg
and
fcoms
add
xor
aaa
movsb
cmp
jle
lods
subl
jbe
ret
cmp
dec
idivb
adc
mov
les
fidivl
inc
das
and
xorl
add
sbb
js
mov
inc
nop
and
ret
shl
or
add
mov
lret
arpl
inc
mov
rcr
sub
mov
cwtl
sub
xor
js
adc
cld
mov
inc
xor
jo
test
dec
loope
rcrl
mov
cmpsl
cmp
dec
es
dec
movsb
cmc
adcb
lods
in
or
mov
add
repnz
popf
lcall
cmpsl
ja
sar
pushf
sub
mov
cmp
inc
fisttpll
pushf
jmp
call
popa
aad
pop
pop
pop
and
adc
add
mov
lea
xchg
xlat
js
cltd
gs
sbb
xchg
add
in
xor
ffreep
push
mov
mov
inc
repnz
movsb
leave
xchg
and
mov
dec
pop
aam
test
jbe
mov
outsb
and
aaa
and
xchg
stc
adc
or
and
jbe
popa
xor
dec
test
lahf
xor
in
es
inc
test
in
hlt
push
data16
insb
lcall
cmp
push
push
xchg
adc
in
movsb
jg
jp
leave
xchg
and
test
les
adc
push
dec
pop
xchg
xchg
ret
add
ret
mov
fisttpl
fcmovnbe
sbb
mov
pop
or
pop
mov
in
ss
xchg
push
or
push
ljmp
scas
jo
into
and
test
insl
rcrb
mov
or
shrl
out
arpl
es
mov
sbb
pop
test
rorb
insb
or
sbb
jle
push
mov
dec
lds
leave
ficompl
es
mov
mov
xor
pop
test
xchg
data16
shll
cmp
xorl
mov
enter
out
and
sub
test
add
push
fwait
pop
roll
idivl
push
hlt
sti
std
hlt
push
mov
lahf
outsb
nop
add
cmc
jl
pop
repnz
sbb
adc
adc
xchg
outsl
mov
movsb
cmpxchg
and
dec
repnz
mov
or
aas
out
shrb
add
outsb
pusha
cmp
lock
xor
ljmp
shl
mov
mov
jl
jnp
xor
or
or
ror
cld
insb
cs
repnz
add
scas
mov
push
push
pop
jbe
xchg
test
fldt
mov
scas
inc
push
add
jl
push
push
mov
lods
subb
push
shrb
jne
les
jge
mov
sbb
in
iret
fsubrl
xchg
cmp
cltd
jle
repz
mov
aas
push
adc
clc
mov
dec
pop
sub
push
xor
test
stos
inc
lock
out
outsb
push
aaa
push
and
je
je
stos
out
sub
cmp
or
popa
rorb
or
movsb
hlt
loopne
cwtl
outsb
jmp
mov
bound
insb
ret
jno
cs
jmp
xchg
and
inc
or
ret
inc
aam
and
xor
cmpsb
sahf
pusha
xor
aam
addr16
mov
mov
pop
nop
repz
add
mov
and
stos
addr16
cld
push
adc
fmuls
sbb
jne
stos
sbb
lcall
mov
sbb
dec
push
and
cmp
ret
into
out
jb
pop
dec
mov
mov
cmc
fadds
push
das
cmp
and
dec
cwtl
push
repnz
pop
jns
dec
ret
aaa
jae
imul
or
sub
faddl
jge
push
mov
loop
jp
inc
lret
out
and
std
insl
inc
les
out
pop
je
or
and
mov
nop
hlt
jle
mov
jecxz
pusha
xor
cmpsl
dec
les
popa
sbb
mov
outsb
or
adc
jb
popa
mov
mov
mov
jl
add
sub
jg
mov
in
xchg
cmp
in
cld
fisubrs
ret
out
add
cmp
stos
das
xor
xor
ds
aad
jb
push
and
jle
addb
mov
hlt
xchg
fucomi
iret
xchg
push
and
cli
arpl
subb
adc
sar
inc
addr16
mov
leave
cmp
stos
push
loopne
nop
cmp
xchg
jno
stos
jns
xor
sti
cmp
seto
fs
add
ss
add
mov
fdivrs
sbb
sub
adc
jle
ret
pusha
pushf
pop
sbb
xchg
dec
pushf
mov
sub
mov
shlb
insb
cmpsl
xchg
or
out
xor
xlat
or
mov
lock
popf
cli
push
imul
sahf
adc
rorb
cltd
test
or
outsb
and
rol
stos
jbe
clc
adc
dec
mov
es
jge
pop
xor
mov
shll
gs
jae
out
xor
fildl
mov
je
mov
cmpsb
in
or
jmp
cli
and
hlt
xor
pop
dec
int3
lds
fxtract
mov
sbb
jge
dec
shll
fdivp
jmp
push
and
xchg
fbstp
out
dec
movsl
xchg
into
pop
push
mov
outsl
aaa
xchg
fstpt
sbb
inc
mov
inc
fwait
jg
xchg
sub
pusha
fs
jb
scas
outsb
mov
mov
xor
aaa
addr16
xchg
and
pop
xchg
int
lea
sbb
aad
dec
mov
cld
loope
cld
push
fimull
loope
pop
mov
or
stc
ja
setl
dec
js
xor
mov
mov
movsb
pop
pop
pushf
jle
repz
fwait
pop
push
les
ret
jno
xor
in
fmull
jl
sub
lret
enter
jg
cld
cmpsl
fs
popf
pop
xor
jmp
jo
flds
lret
mov
lret
inc
jnp
mov
ss
push
jmp
jnp
andb
push
mov
das
bound
addb
mov
icebp
test
sarb
sbb
push
out
cmp
pop
aas
lds
outsl
sub
std
push
mov
inc
jg
bound
popa
cmp
jmp
mov
fimuls
mov
push
mov
insl
mov
push
iret
pop
js
rcll
add
pop
stos
dec
jns
or
les
mov
in
data16
ljmp
mov
ret
add
push
into
mov
cwtl
push
pop
inc
ret
or
jne
in
fisubrl
lods
sahf
sub
sbb
sbb
in
pop
outsb
scas
dec
xchg
in
xor
sbb
cmc
xor
sahf
xor
les
mov
fsubrs
js
scas
or
dec
push
scas
dec
roll
push
test
ja
dec
mov
bnd
mov
push
and
push
sti
fstl
lret
fptan
and
mov
shrb
hlt
jo
lock
mov
inc
push
xchg
dec
adc
push
nop
pop
add
lds
jmp
jo
das
outsb
cmp
pop
push
adc
test
int3
xchg
jno
ficompl
bound
aam
iret
test
sbb
rcl
mov
pop
inc
ret
xor
aaa
lahf
test
repz
fwait
sbb
das
call
nop
xor
aad
out
loope
inc
rcll
dec
fstl
xchg
das
push
xor
fimull
in
lea
mov
dec
xor
popa
test
dec
mov
mov
movsl
rcll
imul
pop
shrl
sub
aad
and
push
fcomps
mov
aam
out
inc
iret
push
inc
cld
push
into
repz
mov
out
add
xchg
lock
sbb
or
sub
sbb
jmp
sahf
test
insb
xor
pushf
add
and
cmpsb
sub
mov
cmp
mov
cmp
or
cmp
push
movsl
cs
or
in
fstl
push
mov
cltd
dec
outsb
lret
mov
cwtl
xchg
mov
in
cmp
roll
pop
mov
sbb
jnp
xchg
inc
or
dec
jno
fwait
test
mov
xchg
sub
cmpsb
orb
mov
xor
dec
hlt
jg
xchg
mov
jmp
mov
cmc
mov
add
testl
mov
imul
xchg
xchg
add
mov
mov
pop
lods
ret
sbb
sarb
test
push
lock
cmp
in
aam
push
fidivrs
addr16
lock
push
stc
inc
xchg
rcl
pushf
and
out
mov
repz
imul
aas
inc
and
rolb
mov
cmpsl
sbb
or
ja
movsb
add
std
add
push
fnstcw
pop
cmc
adc
xchg
mov
inc
cmpsl
lods
fsubl
mov
dec
divb
shll
aam
loop
das
lahf
out
call
divb
inc
pop
mov
movsb
fistpll
sub
sub
sbb
andnps
xor
push
jmp
movsl
sbbl
fistl
adc
cmp
dec
daa
rcll
ret
cmp
push
jo
pushw
test
jecxz
sbb
jne
mov
or
lret
push
mov
mov
add
mov
movl
iret
sti
sbb
imul
sti
rcll
ss
out
pushf
jo
push
sbb
scas
test
aam
pushf
push
ss
jbe
loop
inc
push
jns
adcb
mov
es
daa
js
enter
pushf
enter
xchg
adc
mov
pop
push
lea
stc
dec
imul
inc
push
cmpsb
int3
repnz
cmp
sub
out
inc
xchg
jns
sub
imul
push
sub
insl
sbb
inc
xchg
sbb
cld
sub
inc
divl
add
movsb
popf
cmp
nop
mov
das
outsb
xor
push
xchg
frstpm(287
adc
les
cmp
add
stos
dec
dec
sub
insl
dec
sub
pop
inc
dec
iret
mov
repnz
aas
stc
adc
sbb
ljmp
and
adc
sub
xchg
add
adc
leave
pop
jp
out
xor
push
xchg
mov
pop
dec
xchg
lods
lret
dec
pop
inc
cmp
inc
negl
hlt
xchg
sbb
cmpsl
aad
lahf
aas
xchg
mov
xchg
out
aas
xor
lcall
mov
cmpsl
andl
cmpsl
out
sub
mov
pop
pushf
in
dec
fdivrl
push
daa
xor
pop
cwtl
in
aad
sub
add
pop
fbld
mov
sbb
jns
repnz
out
mov
pushf
sti
mov
popf
insl
adc
or
pop
jb
sbb
int3
mov
push
inc
pop
dec
movsl
popf
int3
xor
adc
sub
dec
imul
mov
pop
pop
sub
cmc
arpl
add
outsl
scas
add
push
cmp
xchg
mov
cmp
insl
jmp
xchg
xor
test
mov
mov
xlat
in
mov
subl
insl
inc
push
loopne
jae
jo
daa
pop
jno
push
loop
jns
xorl
in
push
sub
or
arpl
adc
mov
test
ss
addr16
stos
stos
push
push
push
notb
sub
frstor
cli
pop
call
call
jnp
ret
filds
outsb
jbe
xor
pop
ja
jp
shrb
xor
mov
scas
inc
rolb
xchg
xchg
stc
mov
outsb
aaa
xchg
std
xor
stc
pop
cmp
fcomps
imul
sbb
popa
push
xor
nop
das
fdivp
or
sub
scas
shlb
push
gs
push
jle
mov
lret
in
ds
rcll
je
xor
test
and
lock
fcoms
xchg
call
daa
push
lea
das
shll
xchg
push
sub
xchg
xchg
insl
test
cmp
enter
shll
pop
dec
mov
add
nop
idivb
inc
cmp
pop
pop
pop
fnstenv
rorb
lret
dec
fnstenv
es
jno
jo
stc
push
lret
aam
nop
and
mov
xchg
into
mov
and
aam
xchg
sub
fists
jo
ficoml
outsl
cmpsb
dec
jns
sbb
cmp
sbb
aad
jp
xchg
mov
mov
lcall
add
dec
loope
leave
sbb
inc
push
cltd
outsl
xor
lods
lds
icebp
and
fidivrs
out
push
jnp
push
push
imulb
ljmp
insb
ret
pop
lods
push
push
push
cmc
push
mov
mov
inc
jae
aad
lcall
cld
xchg
insb
mov
and
leave
lret
fistpl
scas
ljmp
adc
pop
or
pop
push
fbstp
xlat
mov
xchg
es
mov
push
push
repz
out
or
js
inc
fistps
aaa
jmp
jb
int3
mov
repnz
popl
or
adc
dec
leave
shlb
inc
mov
inc
hlt
rcll
mov
jnp
xor
push
and
mov
add
mov
in
jl
mov
in
xor
faddl
push
test
pop
jg
push
cmpsl
test
popf
mov
out
push
xchg
cmp
push
aad
movsb
and
cmp
cmp
std
leave
sbb
js
adc
test
inc
ret
adc
ror
call
cmpsb
mov
insb
mov
xor
jle
cmp
inc
jns
repnz
lock
push
mov
or
adc
and
mov
fidivl
icebp
loop
xchg
dec
jb
ja
aam
mov
std
lock
xor
fwait
or
push
out
mov
addr16
mov
lret
jnp
stos
mov
mov
xchg
das
jg
std
push
orb
fcompl
movsl
faddp
pop
push
nop
mov
xor
jp
mov
scas
enter
mov
rol
add
fs
inc
mov
std
aad
rcll
dec
div
repz
aas
xor
xor
or
sbb
mov
and
xlat
imul
xchg
mov
out
mov
nop
aam
clc
mov
cs
nop
out
fs
xor
in
cmp
comiss
mov
sahf
xchg
dec
cli
cli
xorb
inc
jmp
jo
fstps
gs
and
xchg
fcompl
mov
sahf
aam
cmp
arpl
push
push
mov
inc
icebp
mov
adc
mov
jae
sub
xor
xor
dec
or
and
leave
push
or
and
mov
mov
clc
popf
cmp
adc
or
fimull
shl
imul
add
mov
stos
loope
or
push
cmpsl
xchg
bound
or
pop
inc
mov
sbb
and
lods
imul
lock
xor
rorb
test
and
dec
stos
xchg
dec
scas
fldcw
and
fidivrs
movsl
outsb
add
out
xchg
inc
sub
sbb
jg
inc
jbe
pusha
mov
rorb
jl
adc
icebp
sahf
mov
repnz
sbb
outsl
icebp
and
jb
ret
push
add
mov
aam
adc
or
in
test
ja
sbb
movsb
lds
jb
inc
jg
iret
push
add
pop
shll
and
cmp
cld
cmp
ret
or
ljmp
ret
dec
add
imul
pop
sbb
pop
sbb
cmp
test
mov
jno
cwtl
enter
push
xchg
repz
fisttpll
ja
adc
scas
lret
out
ret
mov
push
repnz
adc
cli
outsb
xor
test
testl
test
lret
sub
or
hlt
mov
pusha
mov
sbb
and
inc
add
xchg
ss
push
xchg
rolb
jecxz
or
xor
mov
mov
mov
mov
jge
sbb
push
decb
adc
inc
pop
push
xchg
jl
lret
xchg
mov
xchg
bound
push
or
xchg
push
add
test
les
sahf
xor
and
mov
addl
adcb
inc
sub
cmp
add
or
mov
fidivs
jo
jecxz
mov
sti
cmp
cmp
sub
adc
jecxz
call
lret
ja
and
rcll
push
add
call
xchg
xchg
pop
and
out
shlb
push
test
mov
xchg
dec
xor
cltd
xchg
jns
pop
das
xor
xchg
out
movsl
ss
push
stos
xchg
daa
mov
dec
std
hlt
fiadds
fs
ds
push
and
jae
jge
push
mov
xchg
lock
fnstcw
mov
push
stc
mov
daa
xchg
adc
sbb
ret
femms
fcom
sub
xor
jmp
jge
fs
rol
inc
mov
mov
push
sub
stc
mov
pop
loop
sbb
inc
jne
addl
jo
xchg
sbb
pusha
lock
imul
mov
or
inc
mov
sub
mov
cmp
mov
repz
inc
lods
dec
lret
in
inc
add
adc
or
xchg
rcl
cltd
push
incl
pop
stos
jle
roll
inc
test
ljmp
les
mov
pop
adc
outsl
jnp
push
lcall
mov
xchg
cmp
push
or
outsb
cli
call
mov
sahf
pop
jecxz
cli
ja
add
xchg
pop
out
jl
pop
scas
mov
xchg
idivb
cltd
xchg
ficoml
punpcklwd
cmpsb
inc
add
cwtl
mov
test
mov
push
call
out
pop
scas
jb
out
dec
mov
aad
xchg
in
arpl
out
cmp
arpl
in
or
xchg
test
in
mov
aaa
gs
push
jge
push
sarl
pop
lods
add
pop
jecxz
scas
jnp
fnstcw
sub
pop
lock
ljmp
stos
adc
mov
mov
movsb
fstps
xchg
adc
dec
xchg
sbb
sub
adc
pop
loopne
pop
pushf
push
fisubrl
push
dec
xchg
loop
jno
pop
shrl
jnp
mov
aaa
imul
imul
dec
outsb
sbb
mov
and
push
cmpsb
out
ret
imul
mov
adc
pop
push
fbld
ret
je
sbb
cmpsb
ljmp
ret
jmp
ffree
pop
dec
lahf
mov
pop
push
inc
dec
fstpl
fsubrl
and
mov
push
inc
mov
shl
popa
std
sbb
out
cmpsl
push
movsl
lea
sbb
jmp
xor
aam
push
and
insl
mov
iret
sbb
insl
add
add
push
out
les
pop
cmpl
cmpsl
cmp
xchg
pusha
inc
orl
cmp
mov
es
or
call
cmp
fs
pop
stc
cli
out
insb
pop
ret
xor
arpl
inc
in
push
jmp
xchg
popa
push
sub
sbb
aam
inc
mov
in
mov
jge
mov
test
rcrb
dec
mov
xlat
nop
pop
inc
andb
ret
lock
jl
aaa
inc
repnz
je
jl
std
subl
jnp
pop
mov
iret
lret
cmp
sbb
adc
push
jle
push
cmpsb
sar
pop
int
lea
mov
jns
mov
dec
add
lock
lahf
dec
movsb
hlt
in
popf
setl
mov
out
ljmp
mov
gs
sub
push
push
inc
push
and
fcoml
enter
mov
xor
adc
rcl
and
cld
pop
mov
std
inc
xchg
fildl
jo
push
loop
aam
popa
cmp
or
xchg
push
dec
push
pop
inc
aaa
and
out
jecxz
imul
inc
cwtl
mov
xor
loop
cmp
pop
mov
inc
xchg
lret
push
cs
mov
cmp
sub
mov
inc
xchg
sub
inc
mov
jbe
xchg
inc
mov
or
sahf
push
repz
int3
add
xlat
pop
into
mov
ss
in
popf
xor
pop
push
shll
jnp
enter
fisttpl
subb
shlb
leave
jg
ja
clc
outsb
sbb
in
pop
mov
push
clc
dec
nop
arpl
mov
xlat
aas
pop
sbb
shlb
lahf
fldenv
popa
mov
xor
adc
mov
mov
jne
push
idivb
into
test
cmp
mov
mov
das
js
mov
mov
sbb
or
dec
ret
repz
stos
xor
push
xchg
xor
mov
inc
cmp
mov
insl
in
rolb
mov
add
popf
and
pop
mov
test
adc
sub
cmp
into
js
jbe
and
adc
insb
repnz
mov
xor
ret
imul
cmpsb
inc
fcomps
inc
push
and
shlb
enter
lods
sti
adcb
aad
daa
dec
addb
push
cs
stos
push
loop
icebp
out
xor
aaa
out
xor
cmp
add
mov
xor
push
pushf
int3
pop
aad
or
inc
pop
push
mov
inc
mov
cs
ret
cld
insb
shll
ror
jecxz
xchg
fistpl
push
mov
inc
insb
je
push
outsb
iret
aas
pop
xor
xor
cmp
in
jns
les
outsl
fistl
lret
sbb
cmp
push
push
xor
sbb
dec
mov
dec
out
inc
xor
dec
push
mov
sub
jge
mov
lods
popa
imul
mov
lds
popf
pushf
inc
inc
aad
bound
addr16
xlat
jno
ja
sbb
mov
pop
clc
adc
xorl
push
lods
cld
pushf
add
add
mov
aam
inc
push
inc
je
cs
pop
pop
lret
out
in
push
mov
mov
dec
pop
push
cwtl
push
mov
dec
mov
aaa
adc
add
ret
cmc
outsl
sbb
out
in
enter
cmp
sbb
xchg
outsb
inc
pop
sti
and
stos
fisubrs
xchg
jne
scas
pop
adcb
out
std
and
push
iret
shl
js
cld
add
push
sub
scas
mov
fcoml
shll
into
fldt
add
ret
mov
pop
mov
lret
scas
lea
movsb
dec
popa
shl
adc
push
xor
xlat
inc
stos
pop
in
sbb
pop
cli
push
cmc
cmc
cmp
int
dec
jnp
fs
popf
fisubl
test
add
pop
fsubr
jge
adcb
sbb
out
jae
and
mov
imul
adc
dec
pop
mov
fiadds
adc
lcall
xor
adc
sahf
imul
inc
or
push
mov
fdivrl
movsb
mov
xchg
jp
scas
xor
and
popa
lret
xchg
jne
cmp
sub
lret
xor
mov
add
outsb
add
imul
dec
xor
jae
fistl
testl
add
sub
data16
jge
ss
pop
mov
pop
call
pop
add
repz
adc
mov
sbb
daa
xchg
popa
xchg
and
add
data16
push
out
lods
movsb
rolb
iret
cli
push
ljmp
mov
cld
mov
popf
sahf
xchg
pop
fwait
push
repz
mov
push
popaw
inc
test
outsl
adc
adc
pushf
cmp
mov
les
pop
jle,pn
scas
test
fidivrs
stos
or
pop
inc
mov
addb
dec
cmp
cltd
ss
mov
cmp
push
div
insb
fmul
push
test
xor
push
mov
push
mov
shlb
xchg
pop
nop
add
int3
ja
jmp
push
cltd
pop
int
mov
test
shrl
pop
pop
int
daa
test
std
inc
mov
stos
cmp
in
xor
and
mov
out
rcr
xchg
jmp
pop
mov
sbbl
sub
decl
pop
xchg
insb
dec
xor
insl
cmp
cmp
mov
fsincos
lods
mov
adc
mov
xlat
iret
xchg
sub
andb
hlt
adc
or
mov
inc
dec
ljmp
and
and
lret
int3
xchg
adc
mov
test
testl
push
insl
mov
dec
test
mov
pusha
adc
mov
incl
cli
setno
lcall
or
sub
xchg
cmpsl
icebp
pop
mov
xor
daa
push
pop
movsb
dec
rcrb
ss
xlat
add
data16
mov
sarl
sub
mov
push
movsb
mul
in
popf
push
flds
lock
sub
bnd
stos
hlt
std
into
add
add
insl
arpl
pop
adc
popa
negl
out
out
outsb
dec
push
adc
lea
mov
stos
jne
imulb
mov
jns
jb
cmpsl
es
mov
rcrb
push
adc
nop
inc
dec
stos
mov
pop
adc
fdivl
cld
jmp
sub
mov
jg
mov
add
push
cld
shrl
jae
sbb
fcoml
mov
or
or
push
cmp
or
mov
aad
stos
rep
das
adc
lock
or
push
in
sahf
in
fxch
pop
inc
mov
std
leave
jb
stos
add
sub
fld
test
jg
stos
and
sbb
in
sbbl
sahf
sub
bound
fiaddl
and
dec
or
fisubrs
jns
pop
push
aam
mov
out
mov
dec
pop
inc
lahf
cmpsl
pop
es
jg
or
inc
jb
outsb
sub
test
mov
add
js
add
jmp
fbstp
int
imul
add
inc
rorl
and
test
arpl
or
dec
leave
sqrtps
push
stc
fdivp
or
pop
xchg
stos
movsl
popf
mov
stc
cwtl
stc
pop
push
mov
sti
repnz
incl
ret
mov
add
iret
or
dec
dec
enter
stos
sub
int
mov
mov
fst
repz
fldt
pop
movsb
ret
or
inc
in
in
pushl
xor
add
test
loope
lock
out
dec
sub
pop
int3
call
or
int
jecxz
scas
out
int3
sbb
mov
push
push
mov
sbb
xchg
cmp
jbe
jns
pop
out
sub
cmpb
or
jae
rolb
fsubs
adc
mov
sbb
xor
dec
incb
out
insb
jmp
push
cmp
pop
lock
or
mov
mov
in
scas
push
sahf
daa
dec
push
fsubl
dec
cld
loopne
insb
stos
lcall
stos
cs
scas
cmp
mov
insl
push
andl
cmp
fsubl
jge
aas
shll
in
mov
push
add
addl
sbb
rorb
cmpsl
int
mov
jno
dec
gs
sub
pop
mov
dec
mov
push
push
aas
repnz
add
xchg
inc
nop
push
nop
jo
call
inc
roll
in
out
jo
stos
lods
sub
lods
push
push
icebp
insl
int3
xor
jno
xor
out
lret
sbbb
ds
jg
push
into
push
jno
jmp
hlt
mov
push
cmc
xor
mov
popf
cli
outsl
jmp
push
xor
mov
stc
imul
out
mov
adc
dec
adc
into
dec
push
lahf
es
xchg
jns
int
adc
or
push
out
in
imul
pop
add
cmpsl
mov
add
cmp
lods
adcb
cmpl
push
or
mov
in
push
sbb
in
int3
jnp
rclb
clc
cwtl
xchg
xor
cmpsl
mov
jp
icebp
icebp
add
mov
jae
mov
nop
and
mov
push
in
add
imul
js
lods
pop
xor
sahf
cmc
push
xchg
push
pop
mov
push
ja
in
dec
sub
mov
adc
sbb
pop
insl
cs
add
repnz
les
mov
push
sahf
or
mov
pop
rorl
insl
mov
loop
adcb
xchg
test
mov
popa
sub
es
adc
dec
dec
idivl
aaa
arpl
clc
data16
outsb
push
push
xor
mov
add
xor
and
or
pop
in
ljmp
loop
pop
fs
cmpsb
rclb
scas
std
xor
iret
pop
or
test
mov
xchg
and
jae
or
sahf
shlb
inc
jg
insl
fisubrs
cli
push
es
pop
lds
sub
jmp
or
adc
cmp
and
jns
dec
cli
cs
lcall
cwtl
push
pusha
insl
cmp
cmc
adc
and
sbb
dec
adc
out
sbb
insb
mov
sahf
xlat
mov
dec
outsl
pop
add
push
xlat
xlat
sarl
mov
xor
inc
push
or
in
into
push
add
ja
jne
or
aam
inc
dec
jl
inc
fisttpll
push
in
mov
sti
inc
xchg
adc
add
fildl
mov
jb
xor
dec
push
push
xchg
int3
fidivl
mov
cmovl
pop
fisttpll
jecxz
cli
pusha
psubq
pop
aas
adc
lret
ret
mov
inc
add
cs
mov
xchg
cld
jg
jns
bound
sbb
jo
xchg
lret
cmp
imul
mov
adc
dec
test
xchg
mov
lds
mov
sub
lods
popa
lock
xor
pushf
sbb
cmp
imul
sbb
cld
xor
sbb
stc
out
out
xor
addl
test
clc
push
bound
das
or
cs
dec
add
mov
das
loope
in
mov
fwait
push
or
out
cld
mov
bound
loope
adc
push
pop
mov
push
push
int
cmp
add
lds
jg
or
aam
jmp
stos
mov
inc
mov
outsl
inc
lods
testb
push
mulb
les
les
je
mov
xor
dec
lea
lahf
xor
out
push
mov
mov
sub
mov
hlt
icebp
imul
fwait
push
lea
pop
rclb
ja
inc
jnp
roll
mov
sbb
faddl
cwtl
ficoms
cmp
pop
xlat
xchg
adc
loopne
and
testb
jp
and
test
adc
ret
mov
test
int3
jle
cwtl
in
idivb
push
pop
pop
mov
jae
js
rorb
pop
mov
loop
outsl
push
pop
lcall
ficoms
pop
push
daa
in
jl
mov
cmpsb
jmp
sbb
pop
stos
cmpsl
xchg
lock
das
fcmovne
cmp
xchg
cmp
subl
daa
xchg
and
fldt
push
and
dec
xchg
cltd
fistpll
cld
fcoms
out
fmuls
jmp
std
jge
fistl
cmp
stos
nop
and
jle
xchg
xchg
addr16
mov
ss
add
enter
sbb
sub
stc
fnstenv
mov
addb
subl
lea
adc
push
arpl
push
jae
pop
jo
cmp
int
xor
in
icebp
cmp
jno
dec
mov
cli
ficoms
dec
add
popf
add
mov
xor
sub
stos
movsb
movsl
leave
shr
sbb
in
dec
push
push
addr16
enter
pop
xor
dec
mov
loopne
inc
cmp
push
cmp
cwtl
jge
mov
or
adc
xchg
push
cmp
leave
in
mov
int
ds
jmp
cltd
fisubrl
add
or
sub
stos
jg
daa
sub
mov
mov
xchg
jbe
fstpl
cmp
mov
iret
enter
mov
ret
mov
shrl
faddl
or
pop
mov
in
loopne
sbbl
repz
sti
sahf
add
jmp
test
pop
dec
iret
xor
xchg
cmp
mov
mov
fdivl
add
jecxz
mov
in
pop
pop
int3
push
inc
rclb
adc
loop
pusha
int
jo
push
sub
in
shrb
or
cmpsb
js
dec
jl
in
mov
mov
xor
outsb
mov
in
in
stos
xchg
lods
pop
mov
stos
ljmp
nop
nop
cs
mov
inc
aad
jnp
into
mov
mov
add
xor
loopne
pop
xor
push
sti
cmpsl
enter
repnz
or
fiadds
dec
cwtl
jp
loope
jge
push
push
mov
fmuls
into
mov
daa
push
jnp
iret
loop
dec
leave
push
or
ja
shrl
mov
fisubs
jns
jmp
push
jg
jno
mov
cmp
movsl
lret
jp
mov
push
pusha
aas
call
mov
pop
mov
in
ja,pn
in
cs
jns
scas
gs
mov
cmp
loop
aaa
lret
inc
jge
rorl
push
dec
jmp
xchg
loope
sbb
mov
cmp
ja
push
insl
mov
fwait
and
adc
mov
sbb
jo
cld
mov
nop
lar
pusha
xor
in
lahf
inc
in
fcoms
adc
imul
pop
sub
stc
sub
aad
insl
movsb
test
or
cli
fadd
gs
fmul
lods
in
dec
das
rorl
jbe
clc
push
or
shrl
stos
cmp
mov
xor
adc
add
loopne
cld
fld
add
jmp
pop
push
lods
test
dec
out
notrack
sbb
test
lock
fs
fsubrl
add
pop
or
repnz
sub
outsb
or
je
int3
fcomps
dec
mov
ja
pusha
or
test
pop
dec
fisttps
lret
stos
cld
inc
or
mov
pop
cmp
cmp
iret
out
pop
adc
jge
pop
cmc
test
jo
pop
outsl
nop
inc
imul
popa
iret
push
and
push
sbb
es
pop
mov
pushf
mov
pop
fstl
loop
sahf
cmc
stos
jle
adc
aam
jl
cmpsl
add
mov
push
ror
in
in
xchg
and
sub
lret
imul
sub
push
into
push
repnz
fwait
imul
adc
rolb
sbb
fisubs
or
lcall
mov
lahf
push
scas
daa
in
lahf
mov
addr16
hlt
mov
xor
and
jecxz
loop
ss
shrb
jnp
jnp
popf
push
in
xchg
or
decb
sub
ss
filds
xchg
dec
lahf
pop
push
sub
insb
insl
shll
pushf
xchg
sarl
pop
and
push
enter
repz
dec
loopne
sub
xchg
mov
push
imul
sub
sub
loope
xchg
mov
push
jp
xor
add
push
insb
cmp
xchg
pop
popf
adc
cmp
inc
sub
mov
mov
mov
jo,pn
shll
fmul
push
clc
mov
sub
mov
rclb
fsubrs
and
arpl
ds
cmp
scas
dec
jno
clc
out
lcall
cmp
addb
push
xchg
jo
adc
push
enter
mov
or
data16
popf
jne
jle
xchg
mov
fwait
out
inc
dec
call
jne
cmp
or
loope
sbb
stos
ja
nop
outsl
xchg
mov
push
mov
jl
aad
xor
and
jae
push
inc
popf
and
sbb
pushf
and
add
jecxz
mov
lods
popf
movsb
mov
xchg
and
int3
rorb
fcoms
loop
repnz
jmp
mov
and
jno
mov
push
fdivl
fsubs
repnz
es
das
daa
movsb
nop
test
push
aaa
or
push
sbb
adc
test
shlb
mov
adc
repnz
cld
xlat
jae
clc
int
mov
sbb
jmp
dec
outsl
cmp
jge
dec
push
cwtl
xchg
xor
repz
add
and
mov
shlb
sub
fs
daa
or
sub
xor
in
test
add
mov
mov
xlat
add
dec
jp
push
cmpsb
data16
push
jmp
jge
mov
inc
negl
pushw
xchg
ret
addr16
inc
mov
mov
sub
pushf
adc
xchg
and
mov
jmp
daa
and
lods
xor
or
sub
sub
mov
xchg
inc
jecxz
or
cs
jecxz
mov
cmp
dec
mov
iret
pop
js
bnd
push
push
and
add
shll
pop
push
xchg
lds
mov
sub
jle
xchg
lret
sahf
idivb
loopne
lcall
mov
ss
dec
pusha
test
shlb
add
popa
ljmp
int3
dec
dec
xor
icebp
mov
xlat
mov
outsb
movsl
lahf
js
std
pop
xor
mov
insb
ret
xchg
out
or
jl
or
fsubrl
jecxz
mov
mov
mov
pop
mov
cs
jecxz
aas
repnz
stos
adc
popa
pop
adc
out
popf
mov
pusha
mov
leave
jmp
mov
dec
call
out
sbb
pop
outsl
push
push
fmull
dec
inc
add
aas
cmp
insl
sbb
xlat
jge
jl
and
je
adc
lret
inc
or
cmp
cmpsl
cmp
outsl
cmp
jbe
pop
clc
xlat
stos
add
pop
cmpsb
cli
jg
pop
stos
xchg
and
in
sbb
icebp
and
sub
mov
inc
inc
lods
sub
out
aam
mov
rorl
das
jg
xchg
test
daa
shrl
sbb
cmp
jmp
popf
jle
test
imul
jne
mov
loope
test
dec
push
rorl
jecxz
pop
into
sbb
test
rol
stc
and
and
push
out
js
test
jnp
cmpsl
lret
shr
in
pop
faddl
stos
cmp
in
out
pop
pop
fsubrp
inc
lahf
sbb
cli
add
jg
push
sarl
inc
ficomps
cwtl
and
ror
mov
mov
rorb
lfs
add
cs
outsl
shrl
xchg
jo
ret
sti
lds
adc
mov
icebp
mov
fdivr
imul
add
out
scas
or
lahf
dec
mov
movsb
ss
cmp
jg
jp
test
mov
xor
sbb
mov
stos
inc
dec
add
pop
mov
in
mov
cld
push
or
aam
andl
test
test
mov
xchg
inc
insb
iret
aam
add
pop
lods
jbe
movsb
xchg
or
popa
jb
aas
test
fucomi
add
xchg
pop
push
xor
ljmp
fsubrp
jns
mov
mov
xchg
imul
gs
mov
inc
daa
jb
jns
into
add
lahf
cmpsl
in
cmp
out
mov
xor
mov
loopne
cmc
sub
push
into
mov
aaa
add
sub
ja
jo
int
sti
in
insl
xchg
cltd
xor
and
test
add
xchg
nopl
aaa
pop
push
cmp
ja
xor
ja
mov
push
adc
dec
mov
cmp
lret
sub
or
das
lods
movsb
inc
sahf
das
sub
xor
inc
cltd
push
ja
mov
mov
addr16
fisubrl
subl
dec
mov
inc
flds
or
je
sbb
scas
jmp
pushf
pop
sub
sbb
into
movsl
push
jae
out
fwait
push
xchg
into
pop
insb
xor
cmc
andb
rolb
js
jb
mov
lods
cltd
test
mov
sahf
sahf
sub
push
daa
xchg
mov
mov
fwait
stos
rcr
loope
insl
stc
push
sub
es
sbb
or
cmp
in
jae
in
cmc
pop
mov
loop
shlb
push
jb
int3
xchg
fdivp
mov
mov
loopne
jbe
sub
cld
mov
mov
subl
inc
pop
xchg
mov
orl
cwtl
mov
dec
or
cld
mov
sbb
ja
fbstp
leave
fidivl
pop
mov
jecxz
adc
jns
push
aaa
mov
mov
pop
sar
ror
orb
outsb
xor
or
js
inc
addr16
adc
hlt
cmp
hlt
xchg
xor
std
nop
stc
mov
and
fwait
xor
sub
or
aas
jo
jae
fnstsw
push
and
mov
push
or
bound
jp
cli
or
xchg
ljmp
push
fisttps
nop
ret
mov
mov
ret
mov
mov
mov
pop
xchg
mov
ret
mov
adc
add
adc
mov
popa
sbb
ss
mov
aaa
sub
inc
pushf
scas
push
jge
test
xor
and
xchg
mov
adc
push
mov
les
test
lcall
sahf
xchg
sbb
push
mov
mov
push
test
mov
pop
sahf
pop
lcall
sti
jns
or
cltd
mov
aaa
cmp
lods
outsb
out
pop
add
xor
cld
leave
lea
cmpsl
and
adc
in
jae
pusha
js
enter
cmc
xchg
out
pushf
jns
test
mov
add
fstl
xchg
mov
fidivrl
lods
jnp
add
pusha
push
lods
and
mov
das
inc
out
in
shr
outsl
push
mov
int
mov
xchg
in
lret
pop
aaa
movb
cmp
mov
into
cmc
fmuls
dec
xor
adc
movsb
push
cmpsl
lret
sbb
add
mov
adc
fwait
ja
or
enter
leave
pop
pushf
push
movl
outsl
or
cwtl
inc
add
lret
scas
ss
lea
jo
imul
lret
add
ficoms
adc
bound
cltd
or
fimull
std
lret
popa
clc
lret
sbbb
sbb
out
mov
cmc
adcl
insl
jnp
jp
push
or
adc
ss
pop
aas
mov
dec
ss
shl
call
mov
push
dec
pushf
ljmp
adc
mov
insb
dec
adc
xchg
jg
push
sbb
cmp
sub
push
sub
xchg
sti
repz
test
push
inc
std
fnstcw
mov
out
mov
pushf
addr16
arpl
pop
xor
pop
mov
xlat
rorb
inc
fimuls
adc
out
and
cwtl
decl
pop
mov
dec
lret
mov
loop
mov
jns
fstpt
pop
mov
mov
push
ds
push
stos
lods
fnstcw
push
mov
xor
addr16
pop
scas
fdivrl
enter
adc
movsl
xabort
je
fs
fwait
adc
mov
pop
je
iret
mov
iret
es
divb
testl
nop
pop
adc
add
inc
mov
arpl
dec
fdivrs
aad
jns
xchg
in
loop
xor
ljmp
insl
mov
xchg
fidivs
add
in
pop
mov
ret
cmp
and
in
das
xchg
cmp
jl
push
xchg
lds
lret
inc
ficoml
push
cs
pop
inc
btcl
sub
dec
inc
mov
xlat
or
hlt
cmp
push
dec
fs
add
in
sub
ja
std
xor
int3
xor
iret
fs
adc
int
pop
fistl
popa
rep
gs
pop
adc
aam
pushf
cmp
sahf
fbld
out
push
sbb
and
xchg
inc
call
mov
ds
mov
ret
add
test
cmpsl
fucom
sahf
scas
inc
arpl
lcall
out
fsubrs
mov
pop
je
vpminub
dec
stos
inc
loope
bswap
xor
and
movsb
xchg
push
arpl
pop
add
insl
test
add
arpl
ja
mov
pop
mov
jae
dec
daa
pop
inc
incb
pop
xchg
jns
inc
sbb
or
out
stc
stos
shll
adc
icebp
sub
insb
cmp
or
call
push
sbb
sahf
dec
mov
dec
cs
mov
adc
std
repz
mov
xor
adc
outsb
mov
or
jnp
out
vminsd
lods
mull
xchg
sbb
gs
mov
loope
pop
inc
and
xchg
ror
adc
insb
xbegin
sbbb
jp
mov
inc
adc
pop
push
cld
cmp
cli
add
jl
pop
jge
cwtl
imul
imul
xchg
std
jmp
jecxz
notb
lods
lds
pop
call
cmp
jmp
ffree
mov
jp
sbb
outsl
test
or
ss
lret
faddl
or
das
dec
sbb
mov
idivb
out
or
xchg
ficoms
fwait
fwait
jb
int3
fs
lahf
out
les
mov
add
add
leave
mov
sarl
adc
lahf
jp
add
sarl
sbb
lods
jle
loope
fimull
xchg
inc
into
push
dec
cmp
push
testl
lock
daa
shll
sub
adc
icebp
inc
mov
sbb
jbe
hlt
and
pushf
icebp
mov
mov
stc
adc
pop
inc
cmp
inc
filds
inc
mov
jg
jge
mov
pop
xchg
out
lcall
jae
test
pop
das
sub
jecxz
xor
scas
or
adc
pop
dec
lea
xchg
add
mov
jmp
aas
mov
inc
adc
pop
add
sbb
fs
out
cmp
lds
dec
sbb
cs
aad
sbb
xlat
and
jno
ror
inc
insl
pop
push
int3
int
scas
xor
push
mov
stos
push
movl
mov
mov
jl
cmc
ficompl
movzwl
dec
sub
ljmp
sub
ja
dec
sbb
jae
mov
and
mov
insb
or
dec
ret
std
jmp
mov
push
repnz
mov
jp
xor
bound
and
mov
test
test
pop
dec
mov
mov
add
fcoms
xchg
or
adcl
insb
stos
andl
outsl
dec
mov
push
fists
inc
inc
ds
hlt
push
out
movsl
mov
mov
push
aaa
sub
dec
std
repz
insl
inc
in
enter
in
pop
sbb
add
mov
sti
sbb
dec
push
test
movsl
insl
cmp
and
negl
jbe
mov
or
adc
sbb
enter
sub
std
das
in
int3
jo
leave
or
in
fists
mov
push
dec
jg
and
in
data16
mov
and
xchg
pop
adc
mov
mov
sbb
jnp
mov
mov
push
xlat
mov
stos
out
xchg
call
sbb
pop
punpcklwd
xchg
arpl
mov
lahf
in
int3
jbe
push
incb
loopne
insl
subb
xor
pop
mov
inc
mov
fidivs
jbe
lds
scas
loop
and
imul
push
roll
lcall
sbb
sbb
inc
fucomi
mov
shlb
mov
add
and
bound
ds
cmp
cmpb
enter
add
mov
jmp
ljmp
cmp
xor
ret
mov
inc
push
xchg
xor
jnp,pt
aaa
and
or
bound
sub
shrb
movsl
nop
mov
jecxz
mov
sbbb
pop
mov
cs
leave
test
enter
icebp
sahf
inc
out
xchg
test
mov
sub
sbb
stos
int3
jl
push
loopne
jns
out
sub
cmp
sub
sbb
mov
pop
ret
loopne
pop
inc
mov
mov
callw
cmpsl
push
mov
stc
and
pop
xor
clc
jns
std
mov
xchg
mov
lret
cmpb
push
ljmp
stos
les
fs
in
xlat
sub
add
mov
test
insb
add
pop
add
lret
stos
inc
inc
xchg
sahf
es
lds
addr16
xor
test
negb
pop
cmc
aad
sbb
sbb
cld
or
ljmp
repz
fdivl
movsb
cmp
sub
inc
sub
push
cli
pop
or
fistl
mov
mov
sub
and
mov
and
shl
inc
aaa
inc
int3
loopne
cmp
lds
jns
xchg
pop
add
xchg
mov
jmp
mov
push
stos
mov
mov
lahf
or
inc
inc
fadds
movsb
mov
test
daa
sub
jns
inc
testb
pusha
and
fs
push
mov
pop
sub
add
in
fimull
fsubrp
cmc
add
repz
cld
jne
xor
lods
dec
xchg
dec
xlat
and
insb
dec
idivb
adc
or
lods
in
movl
movsl
and
shlb
mov
mov
inc
cmc
insb
flds
xor
pop
int3
not
adc
push
mulb
cwtl
cmp
jg
mov
mov
dec
pop
pop
jbe
xchg
aas
loop
iret
push
xor
enter
or
inc
fildl
jno
inc
jb
sub
ss
push
scas
cmp
mov
sbb
fwait
testb
pop
js
jne
popf
cmpsl
mov
rcll
pop
inc
mov
dec
or
je
popa
nop
in
lahf
inc
sub
loope
or
insb
xor
cmpsl
fcompl
or
test
rclb
inc
sbb
es
test
aam
cs
adc
movsl
movsl
sbb
and
ja
movsb
xchg
ret
xor
jl
lods
pop
or
dec
cmp
es
jle
cmpsl
dec
mov
fildll
pusha
outsl
lretw
popa
fs
pop
stos
mov
add
clc
hlt
xlat
add
push
sbb
add
stos
xchg
gs
ret
fnstsw
inc
ds
arpl
pop
jp
mov
pop
inc
push
sub
inc
out
and
ljmp
push
jge
lcall
cmp
loope
adc
mov
add
std
popf
inc
sub
xor
push
sub
xor
scas
xor
cmp
outsb
popa
mov
fidivrl
pop
les
fs
pop
shr
movsl
scas
je
mov
fwait
js
lods
lods
jnp
xor
popl
pop
dec
fstpl
lret
imul
and
lea
sbb
push
and
sti
lret
js
dec
pop
adc
ss
jae
loopne
inc
dec
adc
mov
lcall
inc
ja
pop
popf
push
lock
mov
pop
fistl
and
inc
imul
mov
pop
cmpsl
jno
xor
xor
xlat
fucom
decb
pop
out
aas
lods
push
xchg
scas
xor
scas
movsl
push
mov
push
pop
out
in
or
ret
cmc
or
inc
sbb
jbe
daa
leave
jb
sub
inc
add
mov
or
and
loope
or
outsb
mov
shll
xor
xor
jne
imul
in
outsl
and
push
sarl
fcomps
aas
sub
ds
mov
sub
adc
rclb
sub
sub
push
ret
xchg
lea
or
mov
mov
jo,pn
jg
mov
fsts
jg
iret
scas
mov
ja
xchg
hlt
cwtl
jo
sar
sub
cmp
ret
or
adc
or
push
jbe
dec
in
cmpsl
adc
sbb
mov
lidtl
in
inc
call
nop
or
stc
aaa
ljmp
popf
add
stc
pop
cmp
ds
insl
subb
testl
fadds
jns
fsubr
or
loop
inc
repz
rcr
xor
mov
mov
inc
fistps
mov
push
outsl
sbb
cmp
xlat
sti
push
push
loop
rclb
xor
fadd
add
ret
dec
jecxz
cmpsl
stos
ljmp
xchg
pop
int3
or
xor
fwait
enter
cld
ja
jbe
cmp
mov
loopne
ret
daa
inc
pop
and
ret
shlb
out
test
adc
mov
add
sbb
mov
jb
sbb
mov
movsb
pop
in
push
xor
fs
clc
lret
test
fmuls
repnz
dec
sub
fdivl
dec
mov
fmul
sub
clc
stos
into
adc
outsl
or
scas
or
sub
jmp
mov
sub
jecxz
insl
sub
in
pop
out
pop
and
lock
lods
dec
inc
shl
add
sub
in
daa
fistpl
mov
sbb
inc
and
imul
out
lods
pop
xchg
bound
rclb
mov
push
jmp
les
push
pop
mov
stc
sbb
data16
and
out
enter
sub
data16
lock
pop
stos
inc
cmp
and
rorb
xor
sub
cmpsl
xchg
add
lea
mov
xor
mov
hlt
push
stos
fisubs
enter
push
mov
test
sub
popa
mov
xchg
mov
xchg
shlb
leave
add
int3
cmpsl
mov
xchg
mov
push
sub
dec
sti
nop
ret
sbb
add
pusha
and
push
ljmp
pop
clc
movsl
rcl
and
cmc
mov
cs
dec
mov
sbb
jb
pop
and
mov
popf
in
in
and
or
stos
das
arpl
inc
push
push
xchg
and
mov
cmp
mov
in
gs
loop
cmp
and
je
ja
fwait
dec
add
dec
or
add
push
mov
in
sbb
nop
or
adc
and
lods
lcall
jb
mov
mov
iret
xlat
hlt
imul
aam
mov
stos
xor
add
sub
subl
subb
or
mov
cmpsb
int
sub
repz
pop
cli
cli
sbb
int
sub
add
rorl
popa
js
xchg
cmpsl
adc
mov
inc
dec
and
movsl
pop
or
mov
nopl
hlt
adc
add
pop
cmc
in
xchg
imul
xor
std
faddl
pop
rcrl
xchg
lret
sbb
popf
cmp
cmpsb
shrl
and
repnz
addr16
lds
insb
push
jp
movsb
out
scas
inc
test
push
jb
ss
or
aaa
xor
scas
cwtl
scas
mov
push
test
sub
push
sbb
ret
pop
divl
add
lahf
inc
scas
int3
push
xchg
gs
xlat
or
adc
xchg
out
rolb
arpl
pushf
sub
jge,pn
lods
cwtl
dec
cmp
jno
xchg
cwtl
aad
xchg
cmp
adcl
out
inc
ret
xor
insb
mov
out
pop
das
push
insb
pop
mov
cwtl
add
jle
in
lahf
mov
adc
sti
mov
mov
call
pop
jmp
imull
mov
jne
inc
xchg
push
enter
fcmovu
pop
popa
xchg
push
sub
leave
call
mov
or
inc
in
mov
and
fstpl
push
arpl
ret
repz
pop
je
orb
jp
cmp
ret
mov
xor
dec
cmpsb
add
jb
lods
mov
imull
push
aam
and
repnz
out
mov
ror
cltd
mov
and
mov
pop
repz
xchg
inc
sbb
aam
nop
movsl
xor
in
pop
addr16
lea
sub
das
popf
lret
sarb
insl
fcomip
push
lahf
jl
adc
mov
loope
or
rolb
and
movsl
aad
cmp
inc
fmuls
clc
add
call
cld
push
fmull
add
xor
sbb
jae
sti
jmp
lahf
lds
iret
out
sbb
xor
enter
dec
movsb
add
pop
push
shlb
mov
in
and
pushf
jne
mull
push
push
stos
mov
jns
rol
testl
or
lret
sbb
rol
subb
mov
cmpsb
xor
xchg
aaa
jmp
dec
jecxz
dec
dec
cs
scas
lods
sarl
jp
and
xchg
out
popf
lret
fwait
dec
cmp
loope
aad
ja
jcxz
sbb
imul
ret
mov
mov
mov
mov
mov
int3
add
push
xor
inc
lcall
add
lret
fs
xlat
or
jb
iret
icebp
and
int3
dec
icebp
sub
and
rorl
jle
jmp
xor
test
in
negb
jecxz
mov
xchg
xor
mov
mov
cli
sar
jnp
pop
cmp
adc
movsb
mov
mov
and
divl
rcl
jnp
xor
adc
into
jp
push
dec
dec
out
mov
mov
push
sbb
ret
sbb
cmp
mulb
mov
outsb
adc
js
push
fneni(8087
lds
clc
mov
pushf
jno
mov
fistpll
sub
es
cli
cli
xchg
stos
adc
push
mov
xlat
add
scas
jge
mov
jae
aaa
add
addr16
incb
and
cmp
mov
mov
mov
clc
pop
ret
xor
push
mov
mov
mov
repnz
js
cld
les
sub
inc
xchg
loop
ss
mov
jnp
mov
aam
and
dec
xchg
ljmp
mov
lods
movsl
out
push
xchg
movsb
sqrtps
out
daa
ja
dec
inc
sub
pushl
cmpsl
cmc
aas
pop
dec
popf
loop
imul
in
mov
dec
int3
push
aad
and
and
stos
pusha
adc
mov
sbb
sbb
in
or
popf
push
jae
pop
sub
jmp
mov
mov
pop
xor
jle
push
cld
push
rclb
fiaddl
mov
es
mov
loopne
mov
add
inc
xor
adc
fwait
push
mov
adc
cli
mov
cmpsl
pushw
add
push
sbb
lret
xchg
mov
imul
rclb
mov
cwtl
mov
stos
inc
sahf
out
jge
popa
xor
pop
inc
cmp
pop
testb
shlb
xchg
inc
das
cltd
and
add
push
pop
push
hlt
cli
sub
call
push
arpl
cld
int3
fdivs
xchg
ret
out
xor
xor
mov
sbb
cmp
mov
dec
xchg
or
daa
adc
or
mov
pushf
ja
jno
aad
xorb
xor
lock
sub
sbb
fisubrs
lret
xchg
push
xor
mov
mov
pop
push
cmpsb
idiv
sti
jno
mov
mov
fsubr
xchg
xchg
int3
inc
inc
stc
xchg
and
int3
xchg
xchg
add
add
push
int
add
outsb
inc
sti
mov
pop
mov
in
push
fs
push
sub
xchg
leave
fidivrl
dec
sbb
dec
sub
lds
sbb
pop
enter
and
or
iret
xchg
push
mov
xchg
fsubl
dec
pusha
pop
sbb
mov
push
mov
data16
xchg
lods
stos
xchg
jecxz
push
sub
call
dec
mov
jns
rclb
cltd
ds
pop
mov
daa
inc
jne
jno
jg
sbb
mov
pop
in
ret
je
cmpsb
xchg
ja
sub
in
icebp
sahf
mov
or
adc
adc
pushf
inc
inc
jo
cmp
ficoms
jl
mov
and
mov
jo
jp
mov
push
mov
inc
fcom
push
xor
imul
inc
mov
sub
mov
leave
fwait
jle
fdivr
into
leave
lods
test
outsb
cwtl
ret
nop
and
imulb
call
shll
or
aas
mov
shl
jne
inc
repnz
sbb
xor
or
and
int
mov
pop
dec
lods
add
addr16
repnz
sbb
or
arpl
xchg
push
jne
xchg
fisttps
out
mov
fcmovu
push
mov
ljmp
jno
pop
sub
lret
adcl
loop
dec
jne
test
scas
sub
mov
or
das
lret
inc
fstps
stos
pop
inc
shrl
stos
loope
mov
mov
cmp
push
sbb
outsl
jne
inc
xlat
fidivl
jns
mov
popa
cltd
push
movsl
movsb
mov
lahf
fidivl
mov
xchg
aam
pop
xchg
push
enter
int3
in
mov
scas
call
jb
loop
mov
mov
or
mov
fldl
xchg
pop
jl
shr
dec
and
xchg
sbb
dec
daa
call
xlat
pop
or
cmp
addl
inc
or
lock
lods
in
pop
aaa
push
in
jmp
jg
and
pusha
jmp
cmp
fildl
or
mov
jl
aaa
fisttpl
lods
dec
add
and
scas
pop
jo
cmpsl
pop
sub
and
xor
in
adc
lcall
jl
cltd
jg
imul
test
rcrl
xor
es
lret
mov
or
je
gs
mov
and
or
mov
add
inc
fsubs
dec
in
mov
inc
push
mov
std
jge
dec
aad
cmp
daa
notl
cli
mov
repnz
xchg
add
push
insb
jb
je
hlt
sahf
sub
push
xchg
xor
mov
push
mov
aad
movsl
jb
imul
js
sbb
scas
out
jle
sub
and
and
sub
test
imul
aad
pop
lcall
fmul
mov
scas
cs
subb
imul
push
lods
mov
push
cmpsb
movsb
cltd
dec
cmp
test
sbb
xor
lods
pop
popa
popf
bound
sub
push
ljmp
int3
movsb
adc
cmp
adc
int
or
sub
movsb
sarb
dec
add
adc
and
mov
and
out
push
lcall
mov
mov
imul
add
add
arpl
adcl
jnp
fildll
repz
sbb
shlb
cmpsl
loope
mov
sbb
stos
and
sti
xchg
orl
arpl
loopne
xchg
rorl
jmp
sar
sbb
imul
push
add
xor
mulb
loope
js
ret
inc
stc
sub
cmpsb
fabs
cmp
test
f2xm1
stc
push
push
sub
into
push
xchg
xchg
movsl
popa
jno
or
je
cmp
fidivs
shlb
lahf
xchg
movl
shl
mov
iret
out
push
adc
sub
lea
xor
push
pop
int
adc
lods
add
push
ljmpw
push
mov
leave
test
sbb
or
in
int
pop
dec
mov
mov
adc
mulb
daa
neg
gs
js
adc
pop
jne
int
xchg
mov
movsb
std
cs
inc
js
outsl
mov
mov
push
arpl
out
dec
mov
arpl
shlb
mov
pop
mov
xor
shlb
insl
xchg
push
lods
pop
ret
out
sbb
sbb
xchg
lret
rcll
lcall
mov
rcr
das
push
mov
push
cmp
aas
std
add
inc
dec
adc
pushf
push
dec
stos
roll
add
mov
add
cs
out
pop
nop
add
push
iret
clc
and
ret
cvttps2pi
gs
push
mov
inc
jns
into
les
add
insl
imul
cwtl
movl
jbe
loopne
cmp
mov
mov
mov
push
std
das
sub
cmp
inc
fst
adc
adc
test
dec
sub
push
test
push
adc
xchg
inc
in
xchg
xor
adc
and
xor
lea
dec
enter
xor
les
pop
fisubrs
out
xor
jmp
dec
pop
cltd
std
cmc
xlat
cld
aam
addb
pushf
pop
lods
adc
movsb
cwtl
xchg
push
dec
stos
sbb
fidivrl
nop
jmp
iret
add
scas
dec
repz
mov
xchg
scas
inc
repnz
lock
das
sub
shlb
add
sub
push
pop
adc
pop
loope
icebp
imul
shll
fcomps
xor
popf
mov
push
test
push
nop
and
mov
cmp
fists
or
ficoms
adc
cmc
clc
imull
inc
lods
pop
xchg
adc
daa
mov
xor
mov
inc
and
pop
scas
push
xchg
fsts
retw
mov
xor
cmc
push
scas
in
pmaddwd
mov
push
xlat
nop
shl
cmp
jge
mov
dec
mov
insl
cmp
je
sub
cli
adc
mov
aad
push
push
pop
mov
sbbl
cmp
xor
cmp
sbb
ljmp
subl
push
xor
shrl
lods
fsubr
dec
dec
push
fnstcw
out
out
and
inc
mov
push
inc
mov
popa
out
call
in
mov
mov
mov
add
mov
jnp
fsubrs
fisttpll
sbb
arpl
sub
and
int
aaa
jge
sub
test
imul
push
mov
jb
cltd
loopne
mov
jns
aaa
ret
add
cwtl
rcr
pushf
inc
xchg
rol
rorb
outsb
adc
js
subl
mov
fidivrl
daa
mov
xor
xor
xchg
sub
dec
adc
inc
add
jl
adc
push
hlt
outsb
imul
mov
mov
dec
jmp
fldcw
hlt
aad
repnz
push
fisubl
push
fnstsw
inc
mov
ss
mov
sarl
sahf
or
mov
jae
aam
std
pushf
inc
jno
in
xchg
mul
sahf
mov
jbe
mov
add
pop
shrb
inc
pop
iret
inc
js
in
pop
lea
jg
mov
fcoms
ds
xchg
movsb
test
dec
test
mov
sub
das
sub
lds
stos
sub
stos
mov
jmp
sub
aad
mov
outsb
mov
sub
stc
addl
pop
lock
lcall
add
std
out
jne
or
test
cwtl
adc
sbb
cwtl
cs
mov
insb
pop
and
cmpsb
dec
cmp
xor
shlb
mov
pop
sub
cld
les
fidivs
or
xchg
outsl
and
call
nop
adcl
lret
inc
pop
adc
sti
in
sarl
cmpb
test
test
mov
mov
cmp
push
pop
dec
int
xor
out
push
das
xor
ljmp
and
addr16
inc
movsl
loope
inc
fdivrs
imul
pop
lret
nop
xchg
pop
ljmp
rorb
jmp
out
xor
mov
outsl
loope
icebp
sbb
popa
mov
repnz
bound
cmp
adc
sub
aas
fidivrl
mov
stc
mov
mov
stc
cmp
popf
jmp
mov
insl
fldenv
lret
lds
cmp
pop
mov
aaa
push
xchg
fstpt
rcrb
jnp
daa
xor
pop
into
fimull
xchg
testb
cmp
ret
xchg
pop
pop
mov
ret
in
test
shll
cli
inc
mov
sub
jbe
xor
pop
sub
outsb
mov
mov
std
shll
fs
sub
inc
mov
mov
push
xor
aam
ffree
and
rcl
fcmovnb
cmpb
or
sbb
sar
mov
ja
pop
or
outsl
adc
ds
mov
dec
push
repz
mov
cmpsl
add
stos
sbb
mul
cmp
mov
xor
cld
cmp
fistps
mov
inc
pop
orb
or
adc
in
mov
inc
push
jbe
jbe
cld
or
sbbl
movsb
pop
push
push
dec
std
fdivs
xor
inc
inc
jge
xchg
or
fmul
pop
pop
arpl
add
or
xchg
sub
ret
mov
adc
negb
aam
add
fs
cli
das
mov
add
aam
inc
rolb
sbb
in
adc
cmp
ss
ret
and
pop
mov
jmp
pushf
js
push
dec
or
add
push
subb
aaa
loopne
mov
call
scas
idivl
je
or
add
and
scas
inc
xchg
jmp
sub
test
sbbb
lods
jecxz
movsb
jle
dec
popf
addl
cmp
or
stc
jp
loopne
insl
mov
in
xor
inc
adc
fadd
mov
or
cmp
jmp
mov
mov
cmp
pop
insl
jle
lods
xor
rcrb
push
jge
js
loop
idivl
jns
out
aam
dec
pusha
in
scas
cs
nop
fs
mov
xchg
mov
ret
sub
lcall
pop
or
es
sbbl
test
mov
stc
fsubs
in
push
je
pop
in
test
push
cmp
push
lsl
and
sub
fstpt
xor
clc
test
pop
movsl
xchg
push
fidivrs
hlt
pop
or
and
in
inc
jmp
ljmp
fucomip
lds
fsubl
or
mov
fcmovne
mov
sub
lahf
push
mov
adc
mov
push
jge
lret
fisubl
dec
jmp
xchg
test
fisttps
dec
scas
test
push
add
out
cmp
cmp
call
push
loop
dec
movsl
dec
cmp
xor
and
xlat
pop
test
mov
push
nop
roll
pop
mov
xor
cld
loop
push
xchg
mov
pop
je
xor
in
jno
xlat
insl
pop
out
fwait
pop
mov
lret
mov
ds
push
stc
or
icebp
imul
cmp
dec
hlt
pop
pushf
shr
push
cmp
mov
or
sahf
add
mov
mov
and
pop
sub
test
inc
ljmp
sbb
mov
lea
ljmp
addl
push
test
mov
jmp
cltd
in
icebp
xchg
adc
sbb
jle
lret
add
xor
pop
clc
shrb
pop
inc
out
sub
sub
arpl
mov
loope
out
add
mov
pusha
int3
ja
jns
push
scas
jne
pop
mov
push
xor
mov
stos
jp
andl
out
xor
daa
test
sub
movsb
sub
out
test
stc
jmp
cltd
movb
ss
js
xchg
lock
cli
daa
jle
movsb
std
test
pop
xor
add
mov
aaa
enter
mov
add
sbbb
push
mov
cmc
insl
sub
inc
xor
pushf
pushf
and
sbb
mov
aad
sbb
es
lds
lret
sbb
add
mov
sub
addr16
sbb
sahf
loop
xorl
cmpsb
mov
pusha
divl
sbb
mov
test
pop
out
pop
neg
jg
icebp
sbb
mov
fs
jbe
addr16
jg
out
repnz
push
mov
mov
loope
inc
mov
jle
sub
mov
outsl
out
sub
dec
shlb
cmp
cmpsl
clc
dec
pushf
lret
dec
int
loop
sar
or
adc
add
loope
xor
fnstcw
dec
jo
bound
dec
or
push
xchg
negb
lahf
fidivs
inc
aad
xor
jb
loopne
popf
stc
test
xchg
imull
xchg
fimuls
divl
call
dec
xor
cli
sbbb
jge
pop
cmpsl
adc
jo
sahf
daa
xchg
repnz
mov
push
xchg
sub
lret
iret
int3
fcoms
add
pop
add
sub
jno
mov
jno
mov
add
cmp
addr16
addr16
xchg
aas
xlat
test
xor
fs
or
jp
jne
in
fisubs
pop
test
dec
popf
clc
aaa
iret
test
adc
and
push
fnsave
addr16
gs
movsb
arpl
jg
adc
xchg
rorb
cmpsl
aad
and
adc
sti
push
arpl
xor
nop
lock
or
or
jnp
mov
or
mov
push
mov
xchg
in
test
xor
sub
mov
fcoms
je
xor
mov
push
cmp
inc
mov
popf
mov
adc
fucomip
lahf
cmp
adc
mov
out
mov
fsubs
push
inc
call
or
push
js
sahf
adc
outsl
xor
aam
cld
mov
sub
pop
sbb
and
cltd
ret
cltd
in
shll
mov
inc
cmpsl
push
sbb
inc
adc
mov
inc
sahf
sbb
inc
add
xor
xor
adc
mov
fwait
sub
jmp
ret
dec
or
dec
adc
jne
mov
fadd
gs
scas
jne
clc
pusha
es
jecxz
lods
sub
pop
imul
push
adc
xchg
pop
inc
adc
js
and
add
or
clc
pop
ret
add
add
cmp
xor
fwait
int3
and
fdivs
in
ljmp
data16
push
xchg
mov
mov
ret
shrb
pusha
add
mov
shlb
mov
dec
xchg
mov
push
fdivs
inc
out
xchg
xor
mov
repz
sbb
shll
jns
outsb
sub
dec
dec
pop
or
aam
shlb
andl
mov
mov
daa
sbb
add
sahf
or
pop
cltd
add
or
inc
pop
aas
enter
push
sbb
data16
icebp
mov
sbbb
mov
aaa
inc
add
lret
scas
inc
adcb
adc
cs
ret
xchg
and
das
repz
xor
cwtl
iretw
push
push
out
scas
cltd
cmpsb
js
mov
mov
ja
subl
push
jle,pt
jb,pt
mov
cwtl
loop
and
insl
push
in
sbb
daa
imul
insl
push
inc
or
cmp
lods
sub
jns
mov
jbe
in
mov
xchg
push
js
pop
jmp
out
arpl
cmp
xor
mov
lret
mov
inc
testl
adc
hlt
rorb
pop
ror
mov
cltd
call
mov
push
adc
pushf
sahf
imul
mov
aam
lds
mov
ds
cmp
mov
mov
xchg
testb
mov
push
jecxz
jno
ja
ret
mov
xchg
xlat
xlat
push
mov
lret
ja
stos
mov
push
mov
add
je
in
sbb
inc
sahf
aaa
outsl
fbld
inc
outsb
inc
adc
pop
push
movsb
test
ds
pop
or
clc
inc
stc
mov
mov
adc
dec
insl
dec
jmp
sub
out
inc
fstpt
add
cmp
stos
out
dec
pop
pop
shrb
jmp
mov
ret
lahf
rorb
adc
mov
add
push
stos
xchg
dec
inc
cmp
enter
insb
cmc
fmuls
dec
mov
stos
cltd
push
inc
sub
pop
scas
add
cltd
jbe
das
and
sub
mov
mov
xlat
jecxz
lods
and
adc
das
jae
iret
mov
xchg
test
mov
jbe
mov
movsl
aam
andb
mov
mov
lds
sbb
fcomip
mov
movsl
addr16
cmpsl
fnstenv
push
and
add
stos
ret
insl
addr16
ret
fdivr
pop
inc
pop
fidivs
xor
jb
and
into
adc
stc
test
jne
rclb
xchg
xor
das
inc
jmp
push
popf
xchg
pop
inc
sahf
sbb
xchg
mov
scas
jno
shrl
xchg
jbe
or
aam
cmp
mov
ljmp
mov
inc
les
cmp
mov
aad
jmp
xchg
sbb
inc
mov
push
lea
stos
push
cltd
fstpl
stc
jnp
and
int3
pop
add
xchg
cs
push
int
dec
rcr
push
jg
lods
imul
sbb
xchg
jmp
fwait
mov
adc
sysexit
mov
lea
iret
out
or
addr16
shlb
jmp
xchg
icebp
icebp
ret
test
fldl
sbb
xor
cmpl
cmp
ja
xchg
adc
insl
dec
dec
aad
cmp
or
mov
mov
mov
cmpsl
ret
and
fwait
mov
and
lods
push
adc
movsb
insl
mov
imul
mov
icebp
pop
rcrl
mul
xor
mov
jg
jae
mov
dec
vmovapd
dec
loop
sub
je
fld
ss
lea
jno
jmp
jne
test
jb
aaa
mov
ret
push
sub
dec
inc
fsubl
clc
lret
jo
mov
test
cld
mov
popf
mov
shlb
imul
pop
std
jecxz
inc
xchg
sbb
add
jge
sbb
out
pop
jg
cmp
out
mov
sub
jbe
xor
ret
xchg
dec
out
lods
inc
rolb
dec
icebp
in
ret
js
cmpsl
mov
push
mov
pop
push
inc
xor
icebp
or
pop
test
outsb
jne
or
xor
ja
stos
cmp
xchg
mov
adc
lea
and
imul
inc
or
outsb
js
sub
leave
repz
sub
lcall
int
cmpsb
mov
cmp
jae
dec
cmp
fmul
pop
xor
daa
fisttps
and
loopne
dec
dec
enter
lods
dec
fdivl
test
pop
xchg
sbb
imul
pop
mov
stos
and
daa
push
das
imul
mov
cmp
push
in
test
cmp
pop
dec
sahf
pushw
xor
sub
insl
jns
imul
pushf
fstp
pop
enter
adc
test
sub
mov
mov
sbb
lahf
and
ljmp
adc
sub
das
mov
mov
pushf
mov
dec
lds
lock
mov
ja
jge
mov
dec
fs
loope
and
sbb
outsl
pop
imul
clc
and
out
test
aaa
jbe
pop
pop
push
add
jp
sti
add
dec
icebp
imull
hlt
pop
mov
cmp
enter
mov
mov
mov
push
mov
mov
test
and
cmp
add
stos
mov
sbb
xlat
and
out
mov
fs
daa
cmp
jnp
pop
ja
inc
pop
mov
and
inc
jns
xchg
mov
jp
mov
std
fnsave
sbb
jmp
movsb
sbb
mov
dec
cld
mov
push
adc
js
mov
xchg
in
rep
inc
loop
scas
adc
rclb
pop
lret
sub
sub
or
pop
adc
insb
pop
xor
adc
sbb
cmp
push
sub
jecxz
lahf
in
sarl
ret
fs
fsubl
into
push
and
idivl
cmpsl
cs
mov
in
andb
and
cwtl
jle
sub
jmp
mov
xchg
ret
pop
scas
jmp
pop
cs
pop
cmc
xchg
jge
pop
xchg
shl
inc
es
lret
jno
add
call
inc
inc
icebp
jp
mov
cmp
loope
mov
pop
xor
fdivrs
mov
leave
sti
icebp
xlat
call
andl
push
mov
adc
rorl
imul
subl
push
js
imul
jl
mov
rcrl
and
arpl
sub
stos
ljmp
mov
fisttps
inc
repz
add
loop
lods
adc
or
nop
ret
push
cmp
clc
xor
lret
pusha
imul
jmp
fsub
sbb
lret
popa
call
fstp
mov
add
aam
test
inc
cmp
inc
xchg
lea
stos
into
pop
leave
or
out
int
aam
pop
loopne
xor
mov
bound
cmp
or
pusha
je
ss
dec
lret
add
mov
iret
mov
lds
and
mov
aas
push
aam
test
loopne
or
jle
popa
es
iret
add
sahf
test
stos
push
cwtl
dec
lahf
lods
add
testb
push
fiaddl
jle
loope
inc
aas
and
xlat
push
inc
test
enter
inc
int
jb
and
icebp
jg
sahf
aaa
mov
mov
bound
lret
adc
pop
faddl
repnz
cmpsl
sub
mov
mov
std
sbb
ficomps
out
fucomi
adc
fcmovne
imul
pop
mov
sti
lods
xlat
and
in
push
sbb
dec
mov
inc
jmp
xor
cmp
cmp
imul
mov
jle
pop
or
cltd
shrb
jl
or
jmp
into
jge
int
sub
mov
dec
lods
inc
xchg
add
loope
or
sub
add
hlt
mov
sbb
lea
xor
jp
shlb
adc
push
dec
loope
cmp
repnz
aad
std
cmp
pop
outsb
push
stc
lock
jmp
ds
xor
cld
test
mov
xchg
and
imulb
pop
stos
pop
pop
aad
jmp
xor
pop
dec
dec
cli
jge
dec
adc
aas
ficomps
insb
in
test
or
nop
jne
mov
loop
cmp
cmovae
mov
jmp
or
push
andl
rol
in
loop,pn
les
sbb
push
mov
or
push
les
je
xlat
cmp
push
sub
add
shr
data16
push
subl
fwait
lcall
in
aas
adc
mov
add
mov
xor
cmpsl
jge
mov
and
mov
cli
dec
push
fs
sub
pop
fdivrl
mov
mov
and
pop
push
or
sahf
pop
add
out
lea
jns
jg
push
mov
into
int
pop
movsl
ss
xorb
fldenv
mov
jne
insl
orl
cs
dec
push
cmp
push
shlb
mov
sbb
lods
mov
ss
in
dec
jbe
xchg
ljmp
xchg
stc
loope
jp
shl
jo
pop
aas
cli
mov
and
mov
mov
fidivs
push
shrb
and
lcall
adc
addr16
or
xlat
inc
bound
and
add
daa
sub
mov
mov
fs
xchg
or
adc
mov
imul
xchg
and
sub
cmpsb
add
or
and
fs
xchg
and
xor
dec
mov
fistpll
pop
addr16
mov
mov
stos
jg
xlat
and
push
ljmp
and
in
popa
mov
repz
cmpsb
jae
jb
jle
jl
lods
scas
arpl
sub
nop
mov
cltd
iret
pop
mov
lret
or
sub
or
add
rcrb
ror
fnstenv
mov
or
xchg
ja
loopne
nop
mov
clc
mov
shrb
or
jne
cmpsl
mov
jns
inc
ljmp
cmpsl
in
adc
xor
xchg
pop
ljmp
js
dec
popf
cmpsl
les
sbb
and
test
jmp
xchg
mov
fiadds
ja
mov
mov
fldenv
inc
inc
data16
aam
icebp
add
popa
loop
lock
pop
in
inc
loop
pop
cwtl
fnstsw
movsb
jnp
lods
cltd
jp
jg
repnz
aas
and
fldt
clc
push
sbb
xor
pushaw
lret
les
cwtl
fsqrt
and
push
dec
dec
adc
inc
ss
fstpt
inc
sub
outsb
pop
xchg
inc
lods
jns
out
jns
sbb
jnp
jbe
xchg
pop
inc
mov
jnp
pop
inc
or
jb
fists
out
push
shlb
inc
std
mov
out
dec
pop
lea
and
and
insb
dec
movsl
in
cmpl
cmpl
sbbb
cmpsl
mov
xchg
mov
sub
sub
subl
mov
add
out
push
pop
pop
ds
fadd
mov
push
pop
or
jg
and
lahf
movsb
inc
xor
sbb
mov
or
xor
lock
xchg
mov
lret
loop
xchg
rorl
jge
add
jb
sub
cmp
inc
lahf
cmpsb
push
gs
ljmp
sbb
outsl
push
cltd
das
repnz
hlt
stos
imul
ljmp
add
inc
lret
sub
cltd
in
push
jg
lds
push
cli
in
jne
mov
sbb
cmp
addr16
and
xor
shll
xor
fincstp
call
xchg
movl
shlb
and
dec
es
int3
dec
sbb
stc
mov
mov
lret
outsb
push
push
cmp
sahf
mov
mov
add
mov
pop
cs
dec
rol
lahf
jp
sbb
mov
ljmp
out
cmc
mov
ss
cmp
inc
cmp
daa
xor
data16
and
inc
dec
ret
xchg
lret
mov
jne
inc
dec
les
movb
jnp
inc
ret
test
fdivrp
mov
sahf
inc
add
out
sbb
pop
or
lods
subl
mov
mov
sbbl
cmp
adc
roll
out
shrb
jl
push
in
popa
jmp
mov
sub
sub
and
sbb
add
sub
das
loope
js
pop
jb
roll
add
lods
xor
pusha
jb
out
inc
cmp
sbb
xor
sbb
rcll
jo,pt
pop
mov
out
rolb
or
insb
or
sahf
pop
fwait
pop
clc
and
mov
dec
jnp
xlat
movsb
js
shrb
and
cmp
push
fnsave
cmp
aam
cld
rcrb
aam
or
pusha
pop
neg
mov
mov
mov
xorl
jb
pop
mov
mov
test
int3
jne
pop
mov
xchg
pop
mov
sbb
inc
cmp
cwtl
std
jmp
int
cmp
xchg
cmpsb
repz
sti
shl
daa
add
aaa
popf
lahf
cld
push
aas
psraw
loop
push
add
outsb
xchg
xor
adc
daa
jmp
jbe
iret
mov
fldenv
clc
lock
and
jmp
ss
pop
shlb
xchg
loopne
outsl
add
decl
fsubrp
jl
xor
jne
mov
mov
out
mov
sbb
xchg
ror
fwait
mov
xor
insl
jae
mov
adc
movsb
jne
add
and
call
push
or
imul
stos
outsl
stc
mov
mov
mov
jns
xor
cmp
bnd
fs
xchg
test
test
movsb
push
stos
das
mov
lea
iret
dec
pop
stos
nop
push
decb
aam
xchg
xchg
pop
aam
add
xchg
mov
popa
stos
pusha
imul
fcmovb
std
in
pop
stc
js
js
sub
and
jb
cmc
test
nop
sbb
in
neg
lret
out
dec
stos
mov
push
xchg
jne
push
fisubrs
int
cmp
mov
sbb
fcmovu
xor
inc
ljmp
xchg
cmp
std
adc
push
jmp
test
das
jno
dec
bound
stos
stos
lret
sub
ja
mov
sbb
scas
adc
into
mov
movsl
outsb
in
cltd
mov
call
push
out
cmc
call
add
xor
hlt
stos
in
jp
lret
xchg
rorl
dec
push
cwtl
jmp
in
pop
add
mov
outsl
mov
mov
sub
xchg
leave
cmp
push
fdivrl
aad
aam
dec
scas
fadds
adc
popw
xorl
mov
call
pmullw
jnp
push
xchg
xchg
mov
inc
xchg
mov
sbb
jb
xchg
inc
jns
lret
dec
out
add
inc
inc
aas
into
mov
sbb
or
add
mov
add
pop
idivl
insl
lahf
pop
andl
jl
stos
cwtl
je
inc
loope
jmp
cmpsb
cmc
cmp
adc
cmp
movl
push
movsl
lret
lret
push
fstpt
push
mov
cmp
cmpsl
lcall
push
loope
cmp
mov
xchg
pop
test
mov
dec
xor
lcall
xchg
mov
rcrl
pushf
inc
ficompl
cmpsb
leave
adc
mov
pop
adc
ret
cli
adc
insl
cmc
or
adc
cmpsl
das
enter
inc
mov
adc
filds
insb
dec
cmp
call
imul
pusha
pop
mov
out
repz
nop
fdivl
jbe
lcall
xchg
mov
scas
mov
scas
jno
adc
adc
mov
adc
mov
sbb
pop
fiadds
cmp
mov
test
jno
jno
aad
in
test
xchg
fadds
push
loop
ljmp
pop
mov
mov
out
pusha
mov
and
ret
stos
sub
shrb
cmc
cli
mov
pop
sub
jo
pushf
xor
pushf
or
mov
outsl
and
jp
sub
pop
fs
push
sbb
pop
or
notl
cmp
popf
mov
xor
shlb
jle
mov
jnp
std
jae
sub
shr
imul
or
je
imul
inc
push
sub
mov
mov
cmp
cmp
pop
aas
jno
ss
lods
ret
or
mov
roll
lock
lea
insw
sub
or
out
mov
enter
jl
ret
jns
faddl
adc
pop
and
loopne
mov
daa
sub
adc
in
or
aad
sub
aaa
test
lds
push
xor
or
jne
jg
jmp
out
mov
adc
paddd
popf
adc
aam
fildll
loopne
test
mov
push
mov
call
and
out
and
jmp
insl
or
adc
insl
inc
into
stc
in
testb
stos
lock
sub
stos
sbb
push
das
xor
frstor
mov
adc
icebp
push
sbb
js
push
enter
addr16
pop
inc
jne
push
fsts
lock
xor
insl
sub
lods
popf
gs
in
xchg
dec
mov
cmp
mov
mov
arpl
cmp
lahf
adc
cs
and
inc
movsl
roll
out
fidivs
xchg
or
cmpsl
pop
data16
lods
inc
and
pop
sahf
icebp
xor
in
and
dec
icebp
hlt
push
mov
cltd
xchg
sbb
fildll
loope
mov
push
pop
add
in
push
pop
or
sahf
jo
xchg
xchg
pushf
mov
out
int3
dec
in
fwait
stos
cmp
cs
js
sub
ret
and
push
fdivrl
dec
xchg
xchg
or
lds
xor
test
rcr
mov
cwtl
shrb
adc
or
lahf
mov
js
pop
pop
test
or
aaa
movsb
pop
dec
push
sti
push
mov
jno
loop
xchg
test
scas
sub
int3
fwait
int
js
sub
and
or
repnz
ja
lock
icebp
dec
xchg
jecxz
jecxz
add
jmp
xor
jle
pop
int
pop
je
jecxz
xor
sub
cmp
adc
loopne
xchg
add
orl
inc
pusha
lahf
in
lea
in
cmc
dec
inc
rcrl
add
je
fxam
push
pushf
outsb
jg
inc
add
movsb
pop
not
push
push
dec
pop
push
sbb
cmp
lods
loope
clc
stc
mov
popf
cld
sbb
cli
adc
mov
outsl
in
aam
cltd
sub
dec
ss
js
or
icebp
add
and
sbb
mov
xchg
lret
jne
mov
je
adc
repnz
ss
mov
aam
mov
cmp
sub
dec
jnp
aam
outsb
jb
lret
jne
std
ljmp
lcall
mov
sub
ret
mov
xchg
adc
outsb
mov
cmpsl
subb
std
ss
into
ret
lods
gs
adc
enter
out
xor
sbb
or
xchg
push
into
inc
inc
mov
pop
pop
shll
jae
cli
dec
enter
dec
gs
fwait
jmp
cmp
cmp
pop
cmpb
mov
xor
icebp
sub
gs
jp
aaa
adc
pop
xchg
xchg
nop
js
mov
xchg
mov
adc
jno
les
and
fnstenv
pop
jp
pop
gs
mov
xchg
stos
inc
mov
jae
aaa
dec
hlt
ljmp
sub
push
sub
fldl
leave
add
ljmp
jl
imul
jo
cs
aam
filds
mov
mov
mov
jnp
hlt
flds
add
int3
cmp
out
inc
sbb
push
stc
ret
int3
mov
cli
dec
je
xchg
pop
push
push
mov
pop
lcall
inc
jle
xorl
adc
sub
popf
das
cmp
ljmp
add
push
ja
push
aaa
clc
cmp
xchg
data16
es
dec
mov
loop
pop
popa
and
frstor
xor
and
js
cmp
or
add
data16
aam
or
movsb
fidivs
icebp
pushf
add
xor
cmp
cmp
ljmp
pop
enter
ljmp
mov
shl
lods
popf
jb
cmc
ret
lret
clc
hlt
call
adc
jg
lds
stos
mov
xchg
lea
and
xor
mov
mov
outsl
call
xchg
out
test
fs
push
sbb
push
test
ljmp
fnop
pop
ret
mov
push
xchg
test
push
in
mov
mov
mov
scas
outsb
arpl
push
fs
mov
sbb
cmpsl
test
adc
jmp
mov
je
jnp
sbb
jne
jo
lret
ljmp
push
xorl
sub
or
xorb
push
scas
je
fxam
dec
inc
fdivs
push
mov
movsb
subl
dec
cmp
bound
and
xchg
movsl
into
adc
dec
adc
out
hlt
push
xchg
sbb
cmp
loop
inc
fisttps
xor
mov
pop
insb
sub
push
repnz
pop
sbb
add
mov
or
or
push
add
or
pusha
xchg
mov
xor
sub
fldenv
outsl
push
es
mov
js
fwait
test
shlb
das
out
adc
fnclex
pop
cmpsl
lcall
mov
lret
scas
adc
fcompl
push
fidivrl
push
scas
ret
xchg
xor
stos
aas
jmp
std
aas
iret
sbb
divb
rol
loop
mov
repz
push
leave
add
jmp
aas
add
loop
faddl
pop
push
les
mov
mov
pusha
inc
arpl
stos
push
out
push
out
xchg
out
push
cmp
add
ds
or
xor
inc
sub
add
insl
iret
cmp
out
test
cmp
jp
pushf
test
and
fdivrp
lock
in
mov
push
mov
jbe
jae
shl
orb
popf
imul
mov
push
stos
enter
jmp
push
mov
adc
fisttpl
jg
out
or
movsb
loope
adc
mul
pushf
mov
fsts
jns
xchg
fs
push
pop
xchg
mov
adc
test
addr16
sub
rcr
loop
jne
sub
mov
and
xor
jmp
subb
test
cmpsl
mov
mov
jne
int
push
in
mov
xchg
cwtl
sub
push
enter
das
sbb
sub
add
or
lahf
out
xor
popf
mov
mov
test
and
xchg
mov
addr16
mov
fcomi
lcall
sub
movsl
pop
dec
or
ja
cmp
add
in
ds
aad
cltd
mov
ljmp
push
push
sbb
nop
in
add
and
xchg
outsl
add
jbe
enter
sahf
dec
inc
and
mov
cmpsl
aam
fmul
mov
mov
js
mov
lcall
pop
push
mov
lock
test
enter
pop
in
fldl2e
cwtl
insb
xchg
lret
or
jge
xchg
ja
pop
test
pop
dec
dec
stos
mov
cmpsb
lahf
pop
movq
outsl
add
and
mov
mov
popl
subl
mov
loop
subb
add
dec
aaa
mov
std
dec
jae
add
inc
into
mov
mov
xor
enter
lods
faddl
inc
sub
cmp
lret
aam
and
std
daa
or
dec
popf
jl
xor
mov
xor
mov
fisubs
add
test
sub
dec
lcall
xorl
cmp
sahf
fs
mov
sbb
xor
enter
pushf
inc
mov
insl
lock
shr
adc
int3
inc
adc
jl
push
and
cmp
add
cmp
push
cmp
cmc
sub
lret
jo
jge
mov
push
push
and
xchg
cmp
push
pusha
xchg
sub
and
cmpsb
xor
push
outsl
add
jp
repz
mov
fcoms
xor
scas
xor
arpl
cwtl
xchg
sbb
in
scas
int3
dec
adc
stc
mov
neg
push
mov
push
jno
test
lods
sub
jae
rcrb
mov
insl
xchg
inc
jbe
ss
dec
add
sub
and
jae
mov
mov
xchg
cmp
xor
mov
adc
adc
sarb
ror
pop
lock
mull
cmp
pop
pop
aad
mov
cmp
push
sbb
pop
or
or
cwtl
and
fdivrs
inc
pop
mov
aad
pop
je
aaa
fwait
or
test
inc
xor
push
pop
out
adc
adc
xlat
xor
xchg
mov
popa
mov
popf
lds
btc
push
aam
pusha
add
lret
xchg
nop
ja
pop
jns
pop
movb
xchg
dec
test
scas
pop
lahf
insl
mov
into
ret
aaa
dec
test
add
in
scas
jmp
cs
loop
mov
dec
jp
sahf
or
movsl
mov
lcall
adc
xchg
in
cmpsl
std
aas
ds
mov
cmc
xchg
cmc
sub
fildl
cmp
cmp
sbb
add
arpl
cs
data16
and
nop
xchg
mov
in
lahf
cmp
popa
mov
jmp
daa
add
rcrb
pop
inc
shl
mov
pop
jb
or
push
push
mov
dec
cmp
data16
mov
imul
ss
rclb
add
lods
pusha
das
divb
xchg
sti
and
stc
and
mov
pop
sbb
aam
lea
adc
nop
cmc
dec
daa
pop
movsl
into
dec
jae
sahf
jmp
test
inc
push
xlat
push
lods
mov
inc
or
xor
int3
loope
mov
mov
jb
pop
int
sub
in
rcll
mov
mov
popf
repz
jns
cs
xchg
xor
out
fcomi
imul
adc
sub
add
outsb
mov
inc
mov
or
pop
sub
pushf
insl
test
cmp
dec
jge
push
pop
mov
shll
xchg
xchg
add
adc
xchg
sub
das
or
out
sbb
mov
cmpsl
add
xchg
mov
pushw
inc
loopne
or
inc
mov
hlt
push
xor
pop
pop
stos
pushf
xor
dec
movsl
lods
dec
jb
int3
jg
mov
movsl
mov
adc
fldt
xchg
test
adc
aam
add
inc
jns
out
mov
add
dec
insb
xor
mov
xchg
cmc
pop
xor
mov
rorl
adc
adc
loopne
jle
jb
inc
xchg
mov
push
rcl
scas
fdivl
push
mov
jbe
enter
call
fadd
dec
mov
aad
mov
data16
ljmp
loopne
cmp
add
sub
inc
pop
jo
pop
pop
mov
pop
sahf
adc
and
push
scas
jo
xor
ljmp
hlt
xchg
popf
int
push
aas
and
shrb
cltd
jnp
mov
mov
addb
inc
sbbl
in
push
in
and
dec
or
mov
call
scas
mov
mov
sahf
pop
adc
adc
xchg
icebp
stc
movntq
cmp
lret
sub
adc
call
es
out
dec
sbb
push
xchg
lods
pop
sub
mov
add
sub
cld
out
rcrb
push
movsl
or
pop
adc
lods
lds
adc
into
sub
pop
cmp
sahf
jns
mov
sub
cs
bound
mov
stc
fucomi
push
xchg
gs
inc
and
shr
push
shll
fadds
adc
xor
mov
adc
adc
push
push
fidivl
loope
je
test
inc
in
int3
ret
pop
push
mov
lret
pusha
inc
mov
jne
mov
jecxz
mov
sti
les
mov
jl
push
mov
xchg
lods
cmp
lods
xor
movsb
lcall
jp
rcll
fdivrs
dec
add
adc
mov
sub
push
mov
cwtl
arpl
rcrl
outsl
mov
mov
or
dec
testl
mov
adc
pop
inc
fdivl
xor
pusha
push
xchg
xchg
les
or
add
push
cmp
dec
xlat
push
out
movsb
test
push
cmp
pop
inc
cmp
sub
jns
jmp
adc
fs
nop
xchg
popa
repz
lods
mov
mov
cmpsb
test
dec
add
pop
inc
je
insb
pop
addb
xchg
push
sbb
add
mov
scas
pop
mov
cwtl
jecxz
or
std
bound
stos
test
fwait
xor
cld
test
adc
mov
pushf
sbb
lock
insb
sub
pop
add
lods
lret
mov
or
jg
and
stos
adc
mov
sahf
data16
ds
pop
push
fwait
sbb
pop
mov
testb
fdivrs
xchg
sbb
jb
mov
sti
ss
mov
clc
push
pop
push
inc
xor
sbb
stos
jno
fnstsw
addb
test
mov
test
push
push
out
jle
popf
fstpl
out
arpl
and
dec
jae
add
fsubs
pushf
divl
bound
ud1
lahf
out
inc
rolb
push
fistpll
xchg
mov
dec
push
jg
stos
push
andb
lret
or
mov
sub
imul
sub
pop
push
jle
dec
pushf
push
sarb
push
into
in
loope
pop
mov
fwait
std
xchg
cmc
dec
xor
cs
test
mov
ja
call
outsl
ficoml
das
js
and
jbe
pop
daa
mov
inc
cltd
jne
insb
in
add
mov
aaa
add
mov
fwait
ret
test
fsts
imul
or
lea
cmp
jbe
push
aad
push
adc
movsl
lret
int3
das
jb
mov
sub
push
lret
mov
js
repz
call
or
lds
imul
test
adc
int3
inc
pop
jns
push
scas
pop
test
lcall
idivb
jecxz
xor
jno
xchg
add
inc
xchg
jae
imul
jge
ss
ss
push
cs
jg
iret
adc
xchg
mov
aad
pop
pop
mov
inc
xchg
pop
pop
xchg
lds
jl
mov
jae
xchg
push
shll
pop
lock
jo
xchg
and
jae
lods
adc
enter
imul
loope
jg
mov
adc
xor
das
cmp
mov
aaa
ret
sarl
add
addl
imul
jae
jnp
pop
xlat
add
mov
cmp
dec
aaa
or
sub
pusha
fnsave
jae
and
lcall
adc
inc
out
add
mov
xchg
pop
mov
dec
inc
jl
popf
push
std
jmp
addr16
sbb
arpl
xor
mov
jne
rorl
push
lods
mov
addr16
inc
je
dec
fists
popf
clc
fisubrl
bound
sbb
cmpsb
loope
in
mov
decl
out
lahf
cli
int
cmp
add
sub
mov
test
ret
mov
jb
mov
jbe
push
jae
pop
test
lret
loopne
mov
in
adc
cs
test
dec
sub
lcall
jmp
mov
nop
andb
mov
stos
ficoms
lret
popa
push
xlat
cmpsl
daa
jg
push
xchg
pop
fisubl
jmp
addw
xchg
iret
cs
ret
clc
push
iret
repnz
incl
sub
push
xor
stos
jnp
loop
add
inc
nop
popa
pop
xchg
out
cmc
xor
add
xor
push
das
imul
xor
inc
ss
aam
ret
daa
cmp
cmpsb
sbb
popf
sarb
adc
xlat
addr16
iret
daa
scas
dec
cwtl
test
out
jne
add
dec
mov
addl
ret
push
std
inc
test
in
jge
xchg
mov
call
aam
xchg
jb
iret
rorl
scas
inc
ret
aad
stos
jg
push
cwtl
cmpsb
test
mov
push
add
imul
in
lret
sub
jo
xchg
cli
enter
jo
inc
aad
outsb
xor
arpl
std
jbe
sub
test
jecxz
shrl
dec
pop
lret
loopne
add
lret
fisttps
mov
pop
inc
sub
cmpsl
xchg
or
gs
mov
push
pop
cmp
data16
lods
jge
js
out
fldcw
mov
sub
adcb
shr
popl
inc
es
dec
popa
int3
jp
mov
jnp
xor
mov
lcall
jecxz
roll
repz
mov
xor
dec
gs
or
jbe
sbb
sbb
inc
pop
push
into
fildl
push
push
daa
or
clc
mov
cmc
push
enter
nop
fsub
mov
cmp
dec
sbb
jno
xchg
adc
mov
dec
jnp
pusha
pop
pop
push
and
jl
js
das
and
mov
cmp
dec
cld
xor
ret
movsb
add
mov
sbb
xchg
mov
aam
add
loope
mov
sbb
cli
in
les
insl
xchg
dec
imul
cwtl
es
mov
sub
gs
jmp
fidivrl
dec
scas
push
repz
jle
inc
push
mov
fwait
jns
pop
mov
pop
pop
rorb
mov
sub
leave
cmp
lock
movsb
aam
or
xor
into
ret
mov
push
gs
push
sub
sub
xlat
movsl
jecxz
cli
adc
scas
push
in
add
add
ret
loop
mov
aam
jns
in
gs
lret
xor
jns
cmp
out
add
pop
sub
into
cmp
sub
aam
ficompl
and
pop
push
and
in
flds
mov
pop
idivl
dec
test
sub
lods
sub
scas
inc
jp
icebp
test
popa
push
int3
pop
cmp
call
mov
out
mov
xlat
and
popf
jmp
push
or
js
loope
add
sbb
mov
arpl
aas
decb
outsb
cmp
jge
xlat
in
mov
xor
mov
mov
fisttpl
and
xchg
sbb
out
mov
stc
push
sbb
lahf
dec
lods
into
popf
xor
jbe
jp
xchg
gs
pop
aam
stos
and
push
into
fisttps
sbb
sub
pop
fcoms
mov
cltd
fwait
test
push
insl
mov
repz
adc
test
movsl
inc
xor
mov
pop
push
add
push
nop
aam
mov
add
jg
fcoml
mov
xchg
mov
aad
cmp
mov
lods
push
pop
imul
fnsave
or
movsl
ljmp
imul
bound
push
lret
jne
repnz
les
mov
ljmp
xchg
jbe,pn
pusha
sbb
dec
aas
sub
les
pop
lret
lret
cmpsl
js
rcrb
push
test
xor
inc
add
f2xm1
xorl
adc
popl
test
lahf
dec
add
cmp
inc
addr16
sti
pop
popf
hlt
dec
sbb
das
add
mov
pushf
lock
aam
push
leave
and
addr16
sbb
fstl
inc
out
loop
jbe
dec
lahf
int3
sbb
es
fidivs
cs
sti
push
notb
mov
ljmp
or
and
outsb
out
pushf
mov
adc
or
cmpb
pop
rcll
sbb
cmp
lock
test
adc
cmp
leave
mov
outsl
xchg
push
jno
in
inc
mov
sub
enter
lcall
ljmp
or
insl
add
ss
cmc
int3
jmp
push
in
hlt
cmp
and
lret
pop
dec
sbbl
pop
ret
mov
pop
sbb
mov
subb
or
gs
arpl
loope
fs
xchg
inc
scas
sbb
sbb
push
xor
insb
push
in
cmp
outsl
mov
sbbb
inc
lcall
cld
dec
jecxz
test
ds
jg
test
repnz
pop
into
movsl
pop
aas
stos
dec
lret
cmp
hlt
test
pop
pop
cld
rcrb
test
popl
and
fs
adc
idivb
xchg
iret
imul
setb
repz
mulb
outsl
xchg
dec
mov
orl
xor
cmp
inc
jbe
subl
addl
xchg
hlt
jne
lahf
cmp
push
dec
leave
jo
jae
push
rorb
lret
mov
mov
mov
push
lods
sub
dec
test
loop
jge
inc
cld
lea
mov
push
and
mov
cli
cmp
mov
add
sbb
dec
mov
je
pop
fs
xor
imull
dec
inc
js
adc
aam
mov
movl
sub
or
cmp
repnz
inc
cmp
xchg
test
movsb
pop
push
scas
mov
std
mov
sub
xor
cltd
jb
leave
int
cmc
jp
sbb
movntq
cmp
mov
movsl
cmp
jmp
cmp
out
pop
jp
movsb
pop
xor
adc
cltd
fsubp
push
fdivrl
popa
pop
and
mov
jmp
lods
cld
cmpl
cld
mov
push
orb
jne
icebp
aas
mov
mov
dec
dec
ja
add
adc
lds
inc
pushf
test
sub
cli
in
sbb
push
sbb
and
gs
and
fimuls
inc
xor
xchg
lea
and
lods
sbb
xor
sub
push
inc
and
add
cld
sub
in
fs
mov
dec
in
sub
adc
pop
cmp
shlb
dec
push
cmpsb
loope
mov
sbb
pop
xchg
std
xchg
mov
pushf
xchg
insb
inc
mov
jno
and
pop
or
mov
adc
adc
jge
jne
sbb
jecxz
add
ss
stos
sub
movsl
aam
cmpsl
add
mov
lcall
icebp
das
pop
out
sbb
aaa
enter
fbld
sbb
mov
in
jne
stos
in
mov
xor
mov
dec
mov
jne
negl
pop
xchg
inc
xchg
xor
iret
dec
fwait
push
iret
repz
arpl
push
adc
or
jnp
lock
sar
sahf
dec
xor
mov
aas
sbb
lret
ficoml
push
and
push
sub
ljmp
cmp
mov
mov
fnstenv
pop
shlb
mov
in
cmp
test
test
jo
iret
add
std
outsl
out
mov
push
test
sbb
jmp
iret
xor
dec
into
dec
mov
cmp
test
and
std
jle
ja
or
dec
cmp
jo
js
push
pop
push
clc
stc
xor
fidivrs
test
lods
dec
add
jmp
jmp
dec
adc
inc
pushf
xlat
out
std
xlat
and
mov
in
mov
jmp
xchg
jno
popf
jl
ret
mov
sub
adc
mov
iret
pop
or
adc
inc
add
adc
dec
rcrl
add
popf
xor
xchg
inc
and
pop
xor
ljmp
or
or
pmuludq
lock
xlat
repz
arpl
shll
cld
jg
sub
shlb
or
cwtl
scas
add
loope
mov
push
push
or
call
mov
cli
jg
lock
sub
adc
pop
pop
repz
testl
movsb
cltd
jecxz
jg
jb
or
pop
incb
pop
inc
mov
flds
jae
mov
fnstcw
sub
mov
into
ds
inc
pop
sarb
bound
xchg
out
stos
bound
ja
enter
jmp
roll
repnz
xlat
and
jge
popf
dec
ds
ja
div
sbb
and
mov
mov
cmp
add
xchg
adc
lods
je
add
shll
mov
fimuls
int3
in
adc
dec
adc
cmpsl
push
js
ret
and
das
mov
enter
adc
fs
push
sub
gs
sub
or
pop
add
cs
xchg
add
mov
ljmp
orl
mov
loop
cmp
stos
pop
pop
sbb
lcall
push
nop
sahf
loop
jno
jo
jne
cmp
sbb
dec
sbb
cmp
pop
jns
negb
adc
pushf
rcll
imul
sbb
cmp
fsubl
test
mov
repz
push
mov
scas
or
xor
test
mov
out
cmp
das
jmp
psubb
rorl
adc
test
push
sbb
xchg
push
xchg
ret
out
repnz
mov
or
cmp
pop
inc
jp
pop
or
lds
mov
rol
mov
pusha
cmp
dec
sub
xchg
and
cmovns
and
cmp
inc
xchg
lods
movsl
or
mov
ffree
clc
push
test
push
popa
das
jne
push
test
roll
xor
std
xchg
jno
enter
shll
or
and
mov
mov
out
imul
sub
sbb
cltd
pop
mov
loopne
pop
xchg
stos
icebp
fcoml
sbb
push
lahf
sub
pop
in
and
jge
lahf
adc
push
xchg
ret
lock
xchg
je
fs
js
dec
lods
pop
lock
adc
pop
mull
and
nop
mov
lahf
push
xor
bound
xchg
in
dec
sbb
jmp
jb
mov
scas
int
dec
xchg
orb
mov
push
ret
push
mov
fbld
int3
sbbl
lea
hlt
stos
das
rcl
add
push
cmp
cmp
pop
shlb
pop
roll
ss
enter
cmp
adc
js
cmp
fnstenv
inc
inc
push
insl
iret
pop
jl
nop
inc
andb
mov
xorl
fistpl
xchg
xchg
jnp
in
push
negl
adc
pop
jns
jns
lds
pop
cs
lcall
cwtl
cmpsl
pop
inc
pusha
mov
push
xor
sub
pop
push
dec
out
mov
jge
or
fldcw
add
pop
fyl2x
sbb
idivl
push
cmp
push
test
inc
iret
add
sbbl
in
lods
xor
adc
ds
inc
inc
sahf
aad
pushf
and
cwtl
loop
int
sbb
out
inc
cltd
xchg
leave
mov
jbe
add
cmpsb
jecxz
jno
or
aaa
adc
out
je
pop
inc
lock
cmp
inc
outsl
mov
inc
add
stos
pushf
push
inc
inc
mov
sub
jl
out
js
lret
mov
mov
push
inc
and
ss
push
call
inc
push
xor
sbb
orl
out
in
cwtl
aad
scas
cmp
adc
push
out
dec
dec
mov
add
cltd
add
pop
cmp
jns
je
or
jns
xor
xchg
inc
cmp
xchg
xchg
and
xor
jecxz
adc
stc
inc
ljmp
pop
jge
out
xchg
or
adc
push
sbb
or
xchg
fcmovbe
fidivrs
cltd
data16
out
mov
mov
movsb
jo
mov
outsl
inc
imul
pop
cmc
testl
and
add
mov
and
push
mov
add
pushf
jns
cmp
cltd
clc
out
jmp
xor
sub
das
call
mov
fs
adc
dec
ret
cmp
sbb
mov
mov
jnp
push
jbe
ja
adc
das
pop
dec
roll
adc
sbb
lahf
imul
push
jne
pop
testw
inc
stos
shrb
rep
imul
mov
sub
cld
dec
sub
ret
adc
cmp
das
out
pop
xchg
outsb
sbb
push
movl
push
inc
jno
or
loopne
jmp
xor
xchg
jecxz
rol
jmp
add
je
in
aas
lret
je
lock
sub
push
sub
pushf
mov
xchg
mov
jns
popf
or
imul
divb
inc
gs
aas
xchg
push
push
out
or
movsl
jge
lret
inc
jbe
outsl
mov
cmp
add
pop
test
rcll
sub
rolb
mov
insl
cli
loopne
lret
fsub
out
lret
adc
pop
mov
or
dec
ficompl
sarl
out
cmpsl
pop
scas
dec
scas
icebp
xchg
mov
mov
jle
idivb
xor
push
mov
stos
mov
pop
add
jb
jecxz
imul
dec
pop
jo
xor
sub
mov
les
fwait
pop
add
bnd
or
addl
mov
xchg
xchg
pop
xchg
sti
mov
inc
mul
arpl
insb
adc
fistpll
or
adc
mov
je
filds
idivb
push
mov
nop
lods
push
and
test
inc
inc
xchg
jmp
arpl
jno
adcl
loop
adc
inc
int3
fcmovnu
lcall
clc
xchg
inc
les
pop
mov
sbb
fstp
rorl
pop
mov
cmpsl
mov
movsl
jmp
mov
mov
sbb
mov
popf
cwtl
mov
xchg
xorl
scas
jb
pop
mov
xchg
movsl
inc
jnp
adc
aam
gs
add
fmull
pop
or
jne
insl
mov
dec
push
ds
pop
jae
mov
pushf
xor
dec
push
cmp
sti
lods
popf
and
sub
stc
mov
sbb
xchg
pop
cld
in
adc
inc
inc
pop
xor
test
lds
add
fidivs
add
jbe
in
into
arpl
stos
daa
pop
insb
xor
push
in
notb
mov
adc
mov
dec
jns
arpl
xchg
jns
pusha
fmull
dec
or
jmp
adc
pop
inc
cmc
cli
pusha
adc
mov
aad
sub
mov
pusha
int
insl
jp
mov
or
sbb
inc
jne
cmp
adc
imul
movsl
pusha
mov
fbstp
les
ja
and
mov
scas
sub
test
sub
sub
dec
add
push
fdivp
pop
jnp
cli
adc
leave
hlt
shll
sbb
cmc
mov
xchg
or
or
add
int
mov
jb
xchg
stos
add
dec
stos
cmpneqps
fisubl
sbb
push
jae
sbbb
mov
dec
pop
imul
jbe
xor
xchg
shl
int3
rorl
ljmp
loopne
in
arpl
xchg
lcall
jge
or
dec
adc
ljmp
mov
inc
jle
mov
and
dec
sbb
into
xchg
test
mov
pop
fsubp
pushf
pushl
fcmovne
fxch
and
stos
subb
adc
mov
arpl
push
jle
lret
cs
rol
les
add
lret
xor
xor
idivb
push
push
sbb
sbb
ja
cwtl
sub
pop
mov
lea
movsl
lods
fildl
mov
int3
push
sar
cmp
push
lret
and
rcr
sbb
fs
loop
dec
es
repnz
push
loope
ss
lahf
loope
leave
call
add
add
scas
lcall
insb
xchg
cmpsl
lods
sti
mov
push
or
imul
inc
into
mov
jg
clc
lret
and
out
out
add
mov
mov
lods
leave
pop
fwait
iret
adc
daa
fwait
sbb
les
dec
adc
push
add
pop
mov
test
sarb
mov
xor
inc
mov
pop
pusha
aad
aaa
mov
or
lahf
nop
jb
adc
and
sarb
adc
rcrb
inc
repz
shl
lock
scas
sub
push
jmp
adcl
sub
fisubs
sub
push
sbb
fdivrp
ret
jo
or
icebp
aas
and
cmc
dec
push
scas
test
rcrl
shrb
sub
sub
push
dec
xchg
sub
lret
and
push
push
mov
inc
dec
int
inc
notb
add
adc
inc
mov
and
or
mov
mov
jecxz
fnstsw
mov
cmp
xor
dec
cmp
mov
sub
gs
pop
nop
and
pop
and
je
dec
xlat
leave
cwtl
and
xor
insl
push
fldenv
push
mov
dec
xchg
lods
ds
adc
adc
mov
jle
or
lcall
add
aad
bound
push
mov
cmp
xor
rclb
push
lret
xchg
lods
push
pop
inc
movsl
inc
or
mov
int3
dec
pop
jmp
and
pop
xchg
push
dec
mov
mov
push
mov
lcall
bound
insb
das
fcomp
adc
and
fisubs
out
out
mov
xchg
js
das
and
call
jns
pop
adc
inc
shll
or
loope
adc
nop
sub
in
inc
cwtl
xchg
push
mov
aad
or
jmp
xchg
test
lods
cmpsb
inc
loope
stos
adc
lea
addr16
push
lock
out
sbb
ljmp
ljmp
mov
in
or
sub
xor
and
ljmp
add
inc
adc
push
adc
add
call
mov
mov
adc
dec
jle
pop
xchg
test
mov
sbb
fwait
mov
andl
fwait
stos
in
inc
cmp
sbb
inc
data16
or
in
mov
leave
and
or
out
les
or
ret
lret
mov
gs
test
add
popf
aad
cld
xchg
ja
and
dec
shll
push
addr16
push
mov
xchg
lea
cmp
dec
xor
mov
jae
pop
adc
fadds
jg
movsb
sub
mov
push
mov
mov
adc
mov
pop
xor
dec
sub
add
movsb
push
ja
mov
inc
in
fistps
in
dec
xor
xbegin
pop
push
xor
dec
insl
sbb
add
bound
adc
sbb
xorb
js
imul
dec
bound
jb
jle
mov
inc
jbe
jg
outsb
aam
pop
outsl
aaa
je
aam
xchg
faddl
hlt
loop
adc
pop
jl
test
popa
xchg
sbb
pop
outsb
push
mov
movsl
call
mov
rcll
lock
clc
jnp
pusha
cmp
mov
or
push
push
pop
in
push
jae
add
jnp
sbb
std
pop
jns
loope
and
pop
sub
push
adc
sbb
pop
xor
add
scas
add
mov
subl
jno
fmuls
pop
imul
sbb
test
stos
sbb
and
xchg
cmpsl
xchg
imul
push
xor
xor
gs
cs
mov
je
or
fistpl
push
dec
shrl
add
or
mov
movl
mov
outsl
dec
rorb
jp
idiv
sub
mov
lds
xchg
in
push
adc
xchg
shlb
inc
ficompl
pop
jns
sbb
cmc
aam
arpl
cmpsl
inc
jo
jl
jae
in
xchg
aam
cmp
mov
jle
fst
mov
outsl
je
aaa
inc
int3
aas
mov
or
cmp
push
adc
ret
popa
cmp
push
mov
insb
stc
pop
and
sub
ljmp
inc
xchg
stos
cmp
fdiv
scas
and
mov
add
xchg
mov
adc
mov
gs
fidivrs
cmp
hlt
dec
mov
sbb
push
mov
movd
cltd
nop
sahf
cmpsb
ds
push
aas
push
sbb
lds
cmpsl
addr16
cmp
inc
shr
pop
mov
shlb
push
lods
push
mov
push
and
mov
test
incb
popa
dec
mov
mov
sbbl
lret
or
lds
loope
mov
cmpl
xchg
or
cmpsl
sbb
add
cmp
xlat
dec
cltd
add
jne
sti
sbbb
sbb
test
push
pop
in
sub
sbb
xchg
jnp
and
cmp
rcrb
fmulp
dec
loope
stc
push
mov
pusha
icebp
sbb
rep
outsb
or
jb
mov
fldt
in
addr16
lahf
pop
sub
pushf
push
xchg
cmpsb
pop
mov
xor
pop
dec
cmp
push
rcr
mov
jnp
mov
adc
xor
notb
push
leave
sub
addr16
subl
pop
popa
cmp
fsubp
jns
xchg
xchg
push
inc
xor
and
cmp
xchg
dec
lret
push
clc
fsubrl
in
mov
and
test
jo
scas
xor
out
dec
jg
xor
ror
cmp
push
xchg
out
mov
les
out
dec
mov
icebp
lcall
ret
mov
sub
sbb
scas
ss
jle
jg
rcrb
cmc
mov
not
mov
sbbl
cmp
das
xbegin
dec
aaa
ljmp
loop
pop
fmull
iret
xchg
push
and
gs
inc
push
ljmp
sub
fmull
adc
adc
inc
push
sbb
jno
movsb
jge
cs
mov
push
lret
xchg
jge
js
nop
pop
clc
out
pop
cltd
call
imul
insl
rcrb
sbb
adc
lods
xlat
shll
jmp
and
jp
fs
mov
ljmp
movb
mov
jnp
pop
sahf
scas
lods
adc
addr16
inc
int
and
mov
pop
cltd
mull
jp
fmul
scas
nop
sbb
fldl
push
mov
push
jo
fcmovu
sbb
lret
dec
and
xorl
dec
pop
clc
rorl
movsb
rcrb
jno
aam
insb
das
fs
movsb
nop
jmp
notl
lahf
mov
push
loope
add
hlt
lahf
in
and
mov
mov
adc
xor
pop
push
xchg
sub
fcoms
xchg
aam
xor
mov
sbb
jle
bswap
in
jo
in
in
je
pop
loope
inc
mov
stos
push
loop
mov
inc
lea
or
sarb
xor
xor
pusha
mov
pop
jbe
data16
scas
enter
in
int3
in
das
adc
adc
ror
stos
jb
jnp
sahf
ret
loop
xchg
sahf
daa
mov
push
sbb
std
jnp
and
mov
subl
mov
std
ds
inc
push
orb
aas
adc
xor
sbb
fsubs
das
and
std
repnz
jp
sub
iret
test
mov
jae
ret
cmpsb
daa
lock
cmp
call
fcmovnbe
adc
jg
jecxz
nop
fxch
addr16
and
fwait
js
gs
push
mov
dec
sub
or
stos
and
sub
pushf
dec
loope
jge
repz
adc
movsw
mov
inc
add
jmp
jge
lea
test
nop
iret
in
std
mov
notb
xor
mov
mov
stc
decl
pusha
fistpll
mov
repnz
mov
out
xchg
dec
leave
sbb
test
and
lcall
jae
hlt
loop
mov
inc
loop
cmpsl
cmp
mov
mov
inc
adcl
test
rcrb
push
jno
xor
push
push
xchg
push
jns
sbb
lea
inc
cltd
in
dec
adc
jmp
mov
dec
jmp
mov
fst
mov
mov
sbb
adc
inc
scas
andl
and
jno
imul
sarb
mov
and
loopne
push
insb
out
fwait
push
push
xor
iret
xchg
in
jno
pop
push
pop
daa
jmp
cs
sti
mov
cmp
inc
cmc
and
xchg
add
inc
or
ds
dec
xchg
test
hlt
pop
stc
scas
int
inc
mov
sbb
sub
xorl
mov
scas
fmulp
out
scas
jge
pop
push
in
out
fidivrl
andnps
and
in
dec
mov
or
lock
sahf
cmp
scas
repz
es
jge
lret
inc
dec
mov
xor
lar
in
jle
into
pop
mov
push
incb
mov
lock
cltd
insb
out
loopne
mov
cmc
fmuls
push
bound
je
push
xor
iret
xor
outsb
fsubr
jo
rol
and
movsb
sbb
idivb
adc
pop
jns
cld
jbe
adc
sub
mov
jecxz
insl
rcr
mov
movsl
mov
outsb
lret
or
loope
out
insb
imul
icebp
stos
ds
sbb
fiadds
lret
push
fisttpll
jbe
cmp
sbb
dec
mov
loope
adc
lock
leave
leave
jle
mov
cmp
cmpsb
enter
sarl
leave
adc
jmp
popa
push
sub
mov
cld
push
mov
lea
andb
lcall
and
daa
fmulp
pop
dec
and
stos
inc
addr16
jle
jbe
mov
fxam
sub
int
and
and
lods
out
fcmove
xchg
shl
loope
test
pop
idivl
ret
mov
inc
pushf
rorl
repnz
cs
xor
pop
stos
je
adc
jne
mov
pop
pusha
cltd
dec
ljmp
in
pushf
ja
add
popa
cmpl
fs
stc
sub
pop
cmpsb
inc
outsb
push
in
jns
imul
xchg
imul
dec
test
add
stos
xchg
mov
lcall
mov
dec
cmpsb
mov
push
xchg
mov
sbb
push
push
jmp
movb
xor
jg
enter
jb
lds
adc
sahf
arpl
or
xor
daa
mov
push
fidivrl
mov
aaa
sbb
mov
aaa
divl
popf
mov
mov
inc
std
fcompp
push
mov
arpl
nop
je
xchg
xchg
fs
adc
sti
mov
cmc
jp
cs
faddl
test
bound
cmp
inc
xchg
js
cmp
cmpl
dec
sub
mov
mov
iret
mov
insb
sbb
hlt
stos
movsb
ror
and
das
dec
push
mov
xcrypt-cfb
cmpsl
mov
pop
jnp
stos
cmp
jmp
mov
pop
mov
lods
mov
stos
pop
rolb
subl
push
mov
and
outsw
and
dec
sub
mov
cmp
push
add
int
jle
bound
sbb
je
aaa
sbb
inc
dec
dec
sbb
adc
xchg
nop
and
adc
xor
icebp
insb
sbb
dec
stos
fistpll
sbb
xchg
dec
jo
fwait
mov
imul
incl
rol
add
jl
scas
ljmp
neg
iret
jle
ja
les
lock
clc
scas
int3
push
aaa
mov
mov
pop
adc
ja
pop
pusha
rorb
cmp
ja
xor
out
add
adc
push
lods
sub
xor
scas
or
fs
pop
fisttpl
cmp
jnp
push
fwait
lret
mov
dec
cmpsl
jge
insb
iret
repz
lret
xchg
subb
mov
int3
mov
mov
push
mov
sub
inc
mov
jb
mov
in
and
inc
push
mov
push
imul
xor
jg
mov
pop
orb
mov
and
lret
mov
or
outsl
rsqrtps
scas
cltd
dec
mov
lret
xor
push
adcl
lds
sti
xor
or
out
scas
jo
in
sar
or
ret
addr16
fisubrs
xor
mov
test
leave
test
aam
dec
lcall
jecxz
in
arpl
ret
inc
fwait
push
mov
add
add
movsb
pop
or
xor
rclb
mov
mov
dec
into
mov
bound
xchg
or
popf
lcall
movb
and
xor
loopne
xchg
mov
or
xor
cmpsb
mov
dec
jns
cmovg
adc
sbb
out
xchg
insb
push
push
add
sbb
mov
cld
or
dec
xor
sbbl
adc
in
add
aam
push
stos
sub
push
sub
insl
jbe
pop
jnp
lret
lea
cwtl
dec
mov
fldl
aad
je
sbb
push
in
or
adc
js
outsb
hlt
jl
pop
inc
mov
dec
jmp
ret
fisttpl
stos
xor
inc
pushf
pop
cs
in
ret
pop
mov
and
cld
cmc
sbb
adc
xor
mov
flds
mov
jne
mov
mov
es
sarl
xchg
decb
pop
fdivrs
fcoml
jne
loope
data16
or
adc
or
sub
xchg
push
inc
cmp
jmp
imul
cltd
jns
cltd
fs
shll
cmp
mov
cmp
xchg
dec
sub
ficomps
fwait
or
fiaddl
scas
out
xchg
repnz
ret
mov
testb
in
cli
lret
add
xor
and
inc
xchg
add
xchg
test
packsswb
inc
xor
outsl
lods
daa
mov
inc
and
mov
inc
mov
jl
mov
in
hlt
imul
mov
dec
push
fwait
push
dec
testl
test
mov
popf
fs
add
dec
jl
add
mov
add
popa
pop
or
ret
or
adc
xlat
fwait
les
add
test
adc
or
dec
fucom
mov
nop
jle
ja
sarb
jne
cmp
outsl
and
mov
or
pop
mov
jae
mov
add
jae
fdivr
pop
clc
jg
push
push
das
subb
testl
jl
lret
orl
pop
mov
push
mov
dec
cmp
mov
rclw
les
push
jbe
pop
repz
and
and
inc
dec
cmp
mov
adc
into
fldt
mov
adc
mov
pop
cmpsb
dec
in
mov
in
ss
out
push
aam
ret
sbb
das
mov
fwait
adc
mov
cli
mov
ja
shlb
dec
push
adc
lret
sub
iret
sub
out
cltd
push
cmp
mov
fisubl
orl
jb
cld
loopne
adc
ret
mov
fcomi
mov
and
sbb
inc
movsb
in
xchg
mov
and
in
add
adc
jmp
shl
daa
push
nop
daa
addr16
jne
or
ljmp
movsb
inc
and
je
or
push
idivb
fnsave
xchg
adc
sarb
mov
lcall
enter
sbb
mov
mov
imul
jns
adc
int3
jns
adc
sbb
cld
mov
xorl
xchg
lcall
mov
test
cmpsb
dec
inc
idivb
lea
dec
jne
pop
insl
add
or
lcall
cmp
int3
adc
add
xchg
lods
mul
jge
mov
in
adc
mov
xchg
cs
stos
mov
xchg
das
xchg
and
mov
mov
sbb
jl
jne
and
loopne
and
dec
imul
dec
cld
jl
fs
lcall
push
jle
jmp
sahf
out
or
mov
pop
cs
mov
xchg
scas
ja
inc
dec
testb
lret
inc
xor
mov
jo
dec
mov
mov
shll
or
mov
lret
or
inc
roll
pop
sbb
out
fmull
adc
xchg
inc
shll
adc
inc
mov
sub
lds
add
bound
fcoms
push
xchg
cmpsb
cmp
ljmp
aaa
adc
pop
xor
incl
repnz
mov
hlt
mov
sbb
cmpsb
dec
pushf
sbb
xor
mov
jl
leave
loopne
lock
mov
mov
subl
arpl
and
add
lods
loop
subl
pop
jecxz
and
out
mov
cmp
pop
sarb
adc
dec
cmpsb
push
test
lods
or
cmpsl
popa
adcb
cltd
es
push
rclb
sbb
sub
std
lea
cmp
shrl
repz
xchg
lret
xchg
imul
pop
lods
add
cmpsb
ljmp
fimuls
mov
pop
xchg
jge
pop
and
mov
mov
scas
push
andl
std
testl
leave
sti
mov
cmp
ret
in
nop
fisubs
push
jns
xor
cld
or
enter
aad
jl
dec
fsubp
dec
sti
xor
sub
mov
bound
mov
mov
lock
shl
inc
aam
mov
rolb
mov
aas
mov
sahf
repnz
or
les
in
cmp
push
mov
pushf
scas
xchg
cld
popa
movsl
out
rcll
fbstp
test
push
xchg
cmc
fstpl
pop
jns
push
xchg
out
cmp
xchg
xor
cwtl
mov
lret
cld
lods
das
fwait
ds
pop
adc
flds
mov
add
imul
stc
arpl
je
inc
bound
loop
push
cwtl
fistps
xchg
or
mov
add
add
loopne
out
lret
enter
in
pop
dec
push
jnp
mov
cli
mov
rcrb
std
cmp
add
xchg
outsl
les
adc
aam
jnp
aad
jo
pop
mov
xor
inc
andb
imul
pop
cmovs
sbb
xor
leave
or
mov
call
or
mov
jnp
jbe
dec
sbb
jecxz
pop
bound
dec
mov
test
inc
clc
arpl
sbb
out
mov
fstpt
ljmp
out
daa
and
or
and
mov
aad
mov
pop
enter
push
cs
cmp
push
or
repz
into
pop
std
adc
push
mov
jnp
neg
cwtl
jbe
je
in
hlt
dec
mov
adc
pop
jl
xchg
cwtl
icebp
mov
scas
std
jle
pop
xor
lods
movsl
cmp
xor
lea
mov
adc
add
sub
mov
pop
dec
or
cmp
icebp
pop
mov
jle
gs
in
jmp
xor
in
pop
push
sub
or
adc
pop
sbb
jmp
lret
pop
ja
mov
pop
int3
pop
daa
pusha
repz
cmp
xor
mov
add
mov
jmp
lock
sub
cmp
andl
sub
insl
pop
cmp
in
mov
jmp
ss
dec
mov
sub
push
clc
or
testl
pop
je
ret
jp
sahf
shll
fadd
in
sbb
cmp
popf
push
rcrl
loopne
mov
in
xor
stos
xchg
lcall
adc
push
popa
adc
or
or
popa
and
pop
inc
pop
fdivr
test
push
mov
sub
repnz
push
add
mov
js
movsb
xchg
das
mov
addb
aas
sbb
nop
pop
nop
cmp
and
sbb
jne
xlat
jp
cmp
sub
jae
adc
xor
into
fsubrs
subb
out
mov
clc
or
ds
ret
mov
xor
fcompl
xchg
sarb
ffreep
ja
enter
or
out
call
add
xchg
test
clc
xchg
push
pop
mov
aas
mov
sbb
mov
inc
mov
dec
ljmp
bound
jle
iret
cmp
mov
pop
dec
or
lret
addb
test
in
mov
cld
xchg
pusha
sub
xchg
mov
dec
jo
pop
mov
push
fdivrs
jo
xchg
loopne
lods
ja
xor
sahf
sti
inc
sub
xor
mov
pop
ss
xchg
inc
sbb
outsl
idivb
ss
xor
add
clc
sub
insb
cwtl
push
out
es
dec
mov
mov
daa
cmp
adc
out
fninit
fdivs
inc
cmc
cld
sub
lret
mov
pop
and
jp
and
push
cmp
mov
pop
les
mov
push
cmp
and
or
aad
out
or
dec
and
jmp
xchg
xlat
dec
sub
mov
or
dec
mov
add
pushf
insb
sbb
in
out
jmp
mov
mov
xor
or
aaa
dec
dec
push
push
nop
lcall
adc
sbb
sti
jo
insl
sbb
lock
push
test
cmp
cmc
stos
push
jae
mov
cmp
rcl
mov
dec
add
jo
insl
cwtl
or
in
int
inc
dec
sbb
popa
cli
push
movb
sbb
inc
fstl
inc
lods
or
xor
mov
xlat
movsb
push
data16
mov
and
test
jle
push
inc
repnz
lret
jge
inc
rol
push
adc
jp
cmp
cli
ds
pop
stos
test
push
xor
jmp
ss
sub
dec
gs
add
stc
rcl
cwtl
mov
cmpsb
inc
call
xchg
stos
test
aam
mov
sub
push
dec
lret
lods
popa
jne
or
mov
movsb
dec
imul
fwait
lock
fistpll
and
cmp
cmp
push
fdivrs
mov
lret
dec
inc
add
outsb
mov
jp
and
jb
inc
fsts
rcrl
mov
js
mov
sti
dec
mov
xorb
mov
sub
and
leave
xchg
in
jle
aad
mulb
mov
push
jmp
jle
sub
mov
int
jnp
cmp
xor
scas
js
ds
imul
ret
cmpl
fwait
test
xchg
and
gs
pop
fwait
fwait
add
inc
push
jp
mov
mov
or
xchg
pop
dec
sbb
frstor
jo
mov
aaa
fldt
adc
sarl
mov
xor
je
in
leave
das
cmp
mull
filds
mov
mov
loop
sbb
icebp
mov
fiaddl
adc
or
cmp
shrl
cld
cmp
aaa
movsb
or
mov
jo
push
data16
lds
pop
ret
lock
les
push
js
in
jmp
mov
mov
xor
jg
lcall
outsl
imul
inc
pusha
int
sub
test
add
jb
je
jge
in
stos
icebp
mov
xchg
dec
das
loope
mov
or
inc
pop
mov
dec
loop
and
xchg
fcoms
aam
sub
xor
cmc
dec
xchg
jmp
std
xorb
jne
mov
pop
orb
inc
jl
push
les
lret
bound
lds
xlat
or
repz
inc
cmpsb
stos
adc
jbe
sar
ret
stos
scas
push
mov
mov
adc
lahf
push
andb
in
loopne
pop
sbb
test
pushf
movsl
jle
cwtl
jno
aas
mov
in
mov
into
mov
ds
out
pusha
outsl
jno
ret
dec
push
insl
sbb
mov
jl
fnstcw
mov
jecxz
je
icebp
mov
hlt
jg
test
std
loop
sub
leave
shll
daa
or
scas
push
mov
repz
subb
mov
daa
mov
mov
xchg
add
cmp
jle
xchg
and
leave
imul
sbb
hlt
xor
bound
leave
mov
mov
add
mov
rep
or
mov
ret
xlat
mov
xchg
movsl
das
out
or
cmpsb
mov
int3
and
push
call
inc
cld
pop
and
in
pusha
mov
fstps
mov
out
mov
or
dec
insl
adc
incb
xchg
mov
js
lods
xor
push
aaa
leave
aaa
sbb
pop
addr16
in
sub
jns
test
push
adc
aam
push
loop
add
xchg
and
mov
mov
lret
shlb
iret
cmp
movsb
add
xor
pop
int3
in
lret
out
mov
mov
sbb
fbstp
hlt
mov
mov
jecxz
pop
rolb
cmp
or
fstpl
movsl
push
cwtl
push
cmpsb
pop
inc
inc
and
dec
sbb
adc
xor
mov
pop
inc
testb
sti
lea
pop
jnp
test
inc
decb
fldt
sub
mov
cs
out
xchg
pop
pop
stc
inc
add
sahf
fists
jbe
cmp
fwait
je
inc
inc
xchg
arpl
test
ret
mov
adc
jp
mov
adc
pop
mov
xchg
jo
enter
insb
dec
push
and
mov
pop
mov
inc
push
stos
jecxz
arpl
es
icebp
jne
add
pop
out
jmp
jns
rcr
inc
loope
xchg
aas
fnstsw
push
loop
mov
icebp
inc
loop
xchg
mov
lret
cmp
jp
in
pop
xchg
sbb
fwait
xor
lcall
dec
repnz
sbb
push
dec
ret
jne
movsl
insl
add
es
outsb
push
jp
mov
lds
out
jo
mov
jmp
ret
sub
insb
sbb
lahf
lock
add
nop
xchg
mov
sub
pop
pop
push
add
inc
mov
hlt
sbb
fdiv
dec
in
adc
mov
dec
inc
fldl
cld
pop
iret
repnz
ds
ds
ficompl
or
stc
xchg
adc
scas
fistl
sub
scas
ret
into
lods
adc
mov
sbb
add
clc
jmp
fwait
aaa
lods
les
pop
ret
xlat
fisubrl
inc
das
add
and
jb
addr16
outsb
pop
or
cld
out
pop
imul
sub
inc
or
loope
iret
inc
dec
pusha
push
aaa
movsl
andb
jecxz
bound
les
jbe
jl
aam
push
adc
and
fwait
push
cmp
dec
aaa
xchg
mov
sar
inc
test
xchg
stos
xchg
pop
inc
popa
les
sti
out
sbb
imul
or
leave
jno
jb
dec
mov
and
lcall
adc
push
or
push
lods
push
hlt
xchg
nop
aaa
outsl
std
ret
jno
mov
and
pop
rol
adc
les
popfw
mov
jg
lock
sahf
sbb
sbb
push
cli
or
mov
cmp
ljmp
inc
lods
addr16
push
cld
movsl
jbe
fistpl
ljmp
call
hlt
imul
jae
insl
fcom
push
cmpb
pop
mov
testb
daa
es
aad
xchg
jno
sub
sbb
pop
in
jb
or
cs
call
cmc
into
mov
mov
ret
and
sub
insb
ret
sbb
test
sbb
push
inc
decb
push
jge
in
dec
fdivrs
scas
and
insb
arpl
mov
stos
aaa
loop
pop
popa
inc
mov
sub
jmp
sbb
daa
push
mov
stc
movsb
sub
mov
cmp
test
or
scas
push
imul
xor
mov
add
pop
gs
inc
bound
mov
lods
cmp
in
mov
pop
xor
and
fucomi
sbb
inc
mov
mov
stc
inc
cmp
push
xorb
repnz
mov
cmp
arpl
push
jge
imull
add
aaa
pushf
mov
jnp
mov
movsb
mov
xchg
test
lock
add
mov
pop
jno
and
pop
mulb
fwait
test
shl
push
test
repnz
out
cmp
pop
sarb
mov
fstp
cmp
jo
mov
cmpsl
adc
imul
adc
mov
sarl
and
add
cmpsl
push
aaa
jo
fistps
fstl
cmpsl
jp
xchg
pop
xchg
movsl
mov
xchg
pop
jns
aaa
xor
pop
inc
mov
insb
out
xchg
outsb
lret
outsb
xchg
jns
std
mov
data16
mov
sbb
lock
push
dec
adc
sbb
xchg
mov
mov
sbb
add
repz
or
arpl
je
sarl
int
sbb
push
shll
rcrl
inc
sbb
test
outsl
imull
outsl
imul
mov
xchg
xor
jae
popa
and
or
push
mov
mov
dec
xchg
sbb
jmp
sbb
sub
in
scas
pusha
ja
pushf
out
push
or
or
fisttps
mov
push
mov
pop
mov
popa
xchg
pop
repz
sub
and
inc
pop
aas
and
bound
mov
test
fnstsw
mov
adc
aad
cli
adc
cli
cmp
je
jns
push
or
rep
sub
arpl
sub
test
enter
dec
xor
arpl
pop
inc
nop
inc
mov
jae
je
movsl
imul
popl
in
testl
mov
in
xor
insb
popf
es
fdiv
std
xor
jmp
add
adc
sti
int3
popf
mov
shll
sub
scas
adc
pop
push
and
ds
mov
or
cli
xor
or
xchg
sub
mov
jnp
lcall
push
lods
or
jo
cmp
dec
pop
and
xchg
pop
jae
xor
rolb
inc
clc
into
xor
and
out
dec
fwait
je
jmp
xchg
jge
mov
fs
daa
scas
mov
loope
pop
int
adc
push
sbb
mov
pop
cmp
jnp
in
xchg
xor
lock
push
popf
cmpsb
test
sub
pop
mov
sbb
mov
test
sub
inc
das
xchg
shrl
push
not
jg
add
jecxz
adc
dec
lods
pop
clc
add
fs
outsl
loopne
mov
xchg
imul
aas
nop
mov
push
mul
in
sbb
sbb
jno
aas
repnz
js
enter
arpl
jp
push
leave
hlt
shlb
xor
dec
insb
gs
sti
or
cwtl
push
stc
mov
js
ds
and
loop
push
and
les
jns
cltd
insl
jl
xor
mov
add
es
push
pusha
adc
mov
aas
push
or
popf
dec
jnp
in
or
icebp
scas
lds
ret
movsb
xor
jmp
xor
shll
sbb
jecxz
lods
sub
inc
add
enter
lcall
adc
xorb
sbb
out
adc
imul
sub
fs
adc
dec
inc
pop
push
mov
mov
xor
xchg
sbb
cmp
push
sub
in
icebp
add
aam
icebp
sbb
cmp
mov
sub
loopne
icebp
and
inc
and
add
adc
sub
adc
xlat
sbb
adc
mov
std
push
push
jbe
dec
lret
das
push
iret
and
mov
pop
jbe
mov
addl
lret
out
inc
pop
push
mov
jp
popl
fmuls
mov
xchg
mov
xchg
push
pop
push
fiadds
inc
pop
sbb
outsb
jnp
dec
pop
ffree
dec
pop
sub
add
mov
mov
sbbl
pop
mov
lods
sbb
inc
out
imul
inc
lea
or
mov
ss
push
addr16
pop
les
xor
jp
jns
test
mov
outsb
addl
ror
jae
jmp
and
push
mov
stos
stc
adc
pop
inc
sbb
add
adc
adc
std
pop
dec
or
cmpsl
xchg
jle
jb
cltd
loope
addb
ret
mov
enter
lds
mov
aaa
push
mull
mov
sub
pop
fimuls
fsubs
insb
adc
push
inc
fldenv
cmp
jno
repz
iret
inc
xchg
in
mov
repz
test
mov
adc
cmpsb
mov
mov
push
les
popa
inc
pop
jp
jp
push
mov
mov
push
std
mov
xor
loopne
push
scas
in
xchg
in
negl
insb
mov
sub
push
adc
sbb
pop
xchg
push
imul
xchg
es
imul
rcrb
and
dec
aas
int
mov
mov
and
sub
inc
jbe
xchg
inc
cwtl
test
jg
das
mov
lcall
push
fldt
outsl
in
xchg
dec
jg
jge
ds
mov
fdiv
aad
mov
in
pmullw
cmpsl
dec
mov
sub
jo,pn
mov
xor
or
pushf
push
jp
addr16
inc
call
dec
and
add
pop
aad
fcomp
int3
fwait
cmp
loop
pop
cmp
ret
frstor
shl
lds
xchg
jge
imul
arpl
js
cs
cmp
pop
fwait
add
xchg
bound
push
in
ss
mov
adcb
and
aam
shr
test
movsb
xor
into
repz
push
arpl
push
inc
int3
adc
ja
arpl
sub
mov
mov
xchg
test
mov
jp
dec
cmp
hlt
push
cmp
jbe
test
xchg
or
pusha
ret
mov
mov
dec
mov
jne
das
push
lock
pop
sbb
mov
sub
jo
pop
cmpsb
mov
jecxz
rolb
rcr
lcall
mov
icebp
mov
ret
pop
das
jbe
aam
lret
mov
pop
imul
in
add
idivb
stos
dec
xchg
push
fwait
pop
fwait
mov
not
inc
sbb
inc
mov
in
in
push
pop
movsb
shlb
stos
jl
cltd
icebp
gs
sub
rolb
ja
cwtl
addr16
fadds
push
mov
mov
jecxz
xor
sbb
pop
mov
lcall
jmp
lds
sub
js
xor
ret
add
push
lea
jno
lahf
shll
cmp
pop
sbb
cmp
jb
lds
sub
int3
sub
or
movsl
imul
cmpl
stos
mov
gs
inc
xchg
fs
cmpsb
mov
inc
cltd
movsl
inc
loope
lcall
cmp
fs
and
stos
mov
das
push
inc
mov
dec
push
adc
push
js
out
je
jge
mov
imul
mov
mov
fiadds
pop
lcall
int3
int3
cmp
aad
push
jae
push
lret
jmp
bsr
repnz
cmpsl
adc
les
in
movsb
mov
sub
cmpsl
xchg
mov
pop
push
cwtl
sti
adc
inc
movsb
or
push
lods
xor
ret
add
sbb
call
mov
fsubl
cmpsl
lcall
xorb
insl
cmc
cli
push
test
sub
jno
inc
mov
push
mov
mov
sbb
adc
movsb
ret
pop
addb
ja
test
cltd
xlat
mov
pop
jge
cmp
inc
out
out
dec
cltd
ljmp
jmp
arpl
jnp
lcall
mov
ror
mov
shrl
ret
outsl
push
mov
push
jg
lea
test
loop
mov
add
adcb
push
int
out
mov
pop
xorl
push
loope
sub
pop
sub
cmp
and
scas
js
sub
test
jnp
mov
shll
adc
and
mov
orb
movsb
xor
icebp
iret
lods
les
mov
jbe
fld
and
or
stos
mov
dec
outsb
mov
test
cwtl
addr16
xor
jmp
rcl
roll
adc
xlat
es
cwtl
outsb
int
inc
arpl
cs
pop
fldl
iret
addl
out
cld
pop
int
das
and
dec
add
xor
add
loopne
in
adc
lcall
mov
jbe
adc
cmp
adc
pop
in
mov
lods
int
jmp
push
jp
das
mov
fucomp
fistl
cmp
cmp
arpl
negl
ss
stos
bound
je
sub
fucomip
or
imul
fstps
xor
xor
ss
decb
rcl
in
inc
addr16
sti
cld
jmp
loop
ds
gs
leave
and
out
cmp
xorl
pop
xchg
sub
negl
loope
call
fsubrs
lea
in
lret
addb
fcoml
or
stc
sahf
mov
mov
inc
adc
inc
rol
aad
pop
pop
cli
loope
xchg
adc
lds
test
pop
jle
mov
lahf
imul
pop
adc
mov
xchg
mov
sub
mov
adc
or
stos
mov
inc
sbb
aaa
cwtl
scas
mov
int
adc
mov
dec
xchg
in
insb
lcall
enter
jl
inc
cld
mov
sbb
inc
insb
pop
sub
jle
push
sub
hlt
or
rcll
lds
and
xchg
mov
nop
ret
cwtl
mov
sbb
daa
mov
popa
mov
sub
lret
push
mov
ret
push
test
loop
andl
popa
test
add
sbb
rcrb
pop
or
pushf
lahf
dec
push
pop
stos
imul
sbb
or
add
cli
xlat
fwait
jno
mov
pusha
jno
sub
mov
nop
push
fldenv
mov
push
lods
stos
into
cmp
cmp
aam
sbb
mov
rcr
mov
aas
mov
jle
mov
xor
sbb
pop
aam
loop
pop
sbb
nop
sti
mov
cmp
and
scas
inc
jg
jb
icebp
leave
jb
or
clc
nop
into
xchg
xchg
movsb
sahf
push
mov
jl
inc
sbb
mov
jno
xchg
sbb
push
lods
popa
push
shlb
dec
fsts
ffree
and
sbb
or
ficoml
jl
mov
hlt
jne
lock
push
fmull
add
and
pop
push
pop
push
cs
or
push
rclb
lds
push
lret
push
nop
mov
mov
pushf
adc
mov
loop
adc
ret
push
fnstsw
movsl
adc
mov
mov
xor
test
test
fucom
jp
inc
dec
leave
mov
pop
dec
pop
mov
into
or
mov
cli
repnz
dec
ljmp
dec
push
xchg
mov
xchg
adc
pop
imul
rorl
xorl
cwtl
jne
jl
jg
and
bound
jmp
cs
mov
jmp
jg
fwait
in
push
in
jle
pop
lret
adc
or
fisttpl
push
lret
fiadds
daa
hlt
nop
hlt
xor
mov
vdivsd
fdivr
xchg
shll
xor
scas
aaa
in
inc
pop
jge
aas
imul
lds
lods
dec
push
repnz
push
push
inc
mov
jecxz
fcmovu
sbb
jg
or
rorb
addr16
mov
jne
test
popl
dec
pushf
cmpsb
ja
push
xchg
enter
or
negl
push
daa
pop
adc
outsb
push
mov
push
adc
xchg
and
pop
inc
xchg
sub
adcb
dec
dec
pop
sbb
popf
aad
insb
mov
stc
jecxz
xchg
and
sub
mov
in
ret
fisubl
das
rorl
pushf
daa
sbb
insb
ret
mov
mov
repnz
cli
adc
imul
movsb
mov
rcrb
push
inc
and
dec
out
and
adc
je
or
dec
cmp
loope
js
inc
dec
sub
pushf
icebp
or
or
mov
fwait
adc
mov
pop
out
arpl
or
insl
in
frstor
xorb
xor
lret
cltd
pop
shrl
fdivrl
and
and
popa
sub
mov
cmp
sahf
push
xchg
dec
subl
sub
xor
sarl
in
and
inc
pop
hlt
adc
push
fcomip
pop
mov
jle
jb
inc
pop
xchg
sbb
rcr
mov
add
shll
or
pop
loop
fwait
ljmp
stos
inc
mov
push
daa
push
jo
test
test
ja
pop
mov
test
lret
addr16
cmp
clc
fwait
inc
jbe
and
mov
mov
jmp
cli
out
loope
test
mov
or
mov
mov
loopne
xchg
in
fwait
or
adc
jmp
lods
and
enter
or
mov
je
icebp
leave
ja
jns
test
jg
out
aas
in
es
pushf
sub
loopne
in
or
lahf
and
iret
cli
xchg
push
idivl
in
sub
cld
int3
cs
jns
xchg
test
stos
adc
fs
data16
add
jbe
test
dec
xorb
cld
and
inc
and
out
in
mov
ret
or
cmp
sub
mov
arpl
mov
sbb
fisubs
out
lret
sbb
xor
or
std
sbb
and
icebp
lods
ljmp
sbb
dec
add
adc
mov
sub
rorl
pop
cmp
or
lahf
add
adc
mov
int
int3
push
ret
push
or
pop
mov
dec
mov
mov
jp
add
lods
push
sub
in
push
sub
mov
insb
adc
out
pop
dec
push
lret
rol
lods
scas
jecxz
mov
and
jp
stos
and
push
jecxz
push
push
cmc
or
jmp
bound
adc
aam
ficoms
add
mov
adc
enter
jae
in
dec
mov
sbb
jmp
shll
sub
add
jmp
mov
fnstenv
xchg
xchg
aas
imul
das
out
pop
lea
pop
mov
adc
and
adc
clc
movsl
insb
add
js
rorb
js
sub
repnz
fdivrl
jnp
dec
add
icebp
xchg
aam
mov
repz
pop
mov
das
movsb
push
ret
pop
and
hlt
std
and
ror
push
xor
inc
push
xor
arpl
sarl
scas
cmpsb
fs
test
sub
push
push
or
jp
inc
mov
fwait
dec
dec
add
fistpl
jae
adc
pop
mov
dec
aam
scas
ret
mov
xlat
sbb
jmp
out
ret
inc
add
and
ror
ror
mov
jnp
fcmove
xor
push
push
add
mov
outsb
lcall
fldl
mov
cmp
pop
mov
xor
test
repz
test
jno
lret
ja
stos
pop
xchg
push
outsb
jle
aam
add
dec
in
and
xchg
or
mov
inc
daa
adc
xor
popl
int3
cmp
into
cltd
inc
and
pop
enter
movl
inc
mov
movsb
dec
outsb
mov
int3
xlat
stos
lock
call
add
push
dec
adc
inc
inc
add
pop
pop
das
jb
xchg
mov
mov
scas
movsb
test
movsb
and
dec
jle
inc
push
mov
fmull
je
sub
fsts
lods
adc
pop
jg
pop
loopne
clc
loop
mov
lds
out
fcomps
ljmp
mov
int
in
in
daa
gs
cmc
pop
mov
pmulhw
popf
movsl
daa
out
iret
sbb
or
scas
mov
add
pop
call
cmp
rcr
std
fsubrl
cs
jg
dec
pop
dec
dec
je
je
add
ds
pop
xchg
or
fldcw
jle
popa
dec
dec
addr16
xchg
lret
push
and
lea
cwtl
cli
mov
mov
scas
lock
add
mov
pop
fnstsw
pop
xchg
jne
fistl
jle
das
into
pusha
or
add
xchg
clc
test
rcrl
jae
stos
cmp
movsb
jo
arpl
add
imul
jg
fdivp
pop
adc
mov
dec
mov
popa
push
call
flds
push
out
or
gs
aaa
or
mov
mov
fdivp
mov
lret
lock
push
jle
ret
int3
pop
mov
inc
dec
es
mov
in
add
lock
fadd
fdivrl
sahf
dec
pop
out
inc
push
movsl
dec
daa
and
scas
push
adc
gs
adc
arpl
cmp
inc
jg
jae
test
jbe
mov
push
add
inc
xchg
pop
daa
xchg
xor
sbb
xchg
lea
and
cmp
ljmp
dec
adc
jg
idivb
sub
cmp
mov
push
movsb
stos
push
and
push
daa
lds
adc
into
es
popf
ja
test
push
idivl
jp
test
mov
xchg
sub
dec
or
adc
inc
pop
mov
or
pop
mov
aam
icebp
inc
add
sbb
dec
pop
or
stc
xchg
push
xchg
popa
xor
inc
iret
les
clc
adc
add
cmp
int3
lret
push
or
jp
stos
pop
mov
xlat
daa
imul
adcl
fldl
cli
pop
mov
mov
jge
gs
xchg
cmpsb
push
mov
xchg
inc
mov
insb
sub
jle
lock
mov
out
imulb
cmpsl
les
xor
lds
push
scas
mov
imul
cmpsb
push
outsb
and
daa
and
lods
push
mov
cmp
aaa
push
pop
mov
jne
inc
xchg
icebp
out
pop
push
lods
test
xor
lcall
icebp
mov
pop
stos
insb
addb
cmc
xor
and
push
aad
push
cs
movsb
loop
mov
hlt
jge
mov
rclb
gs
ret
pop
cmp
push
add
mov
jmp
and
popf
out
xchg
add
into
inc
add
aam
push
inc
ret
iret
fldenv
dec
push
push
sbbl
js
repz
or
aad
cltd
jge
lahf
dec
sti
ret
mov
xor
js
add
int3
mov
dec
popa
sub
push
mull
stc
ljmp
mov
and
jb
pop
xor
inc
js
sbb
shrb
sbb
cmp
inc
stos
add
fwait
inc
jns
or
pop
xor
lods
xchg
repnz
in
sub
mov
jmp
add
pop
and
xchg
dec
mov
mov
mov
lret
outsl
aam
sti
iret
or
aad
mov
xlat
cmc
jl
rclb
negb
dec
adc
shlb
ljmp
or
dec
push
pop
mov
mov
cmp
inc
cmpb
push
push
and
movsl
stos
push
scas
dec
inc
call
xchg
sub
scas
dec
xchg
mov
cmp
filds
dec
adc
stos
sub
outsl
sbb
mulb
arpl
fsubl
pop
cmp
add
out
dec
sub
loopne
mov
pop
jns
adc
sahf
cli
mov
andb
jmp
pop
ud2
out
scas
sbb
dec
icebp
insl
or
ljmp
scas
jb
dec
scas
lcall
adc
icebp
mov
es
and
std
sbb
in
jle
cmc
cmpsl
lahf
incl
push
sub
test
in
cwtl
push
inc
cwtl
data16
add
inc
mov
add
sub
mov
fucomip
and
aad
popl
and
aad
lds
lock
lahf
push
add
sub
cli
lds
sbb
mov
sbb
insb
movsl
daa
js
mov
dec
scas
jcxz
std
out
jl
fwait
mov
pop
sub
sbbb
iret
std
add
xor
ret
decb
jl
data16
xlat
pop
mov
aad
pop
loope
fistpll
mov
and
sub
xchg
mov
jns
lret
add
pop
push
ret
pop
outsl
xchg
fsts
ds
loopne
push
pop
gs
push
mov
rcr
add
adc
iret
arpl
mov
or
arpl
int3
outsl
and
mov
js
in
icebp
push
fsubr
pop
cmp
push
leave
rol
and
fadds
push
fwait
inc
jb
in
dec
aam
add
ljmp
divb
xorl
in
lods
mov
ljmp
sbb
ss
adc
leave
xchg
push
das
lods
repz
adc
cmp
push
mov
scas
cmp
insb
sub
movsl
xor
inc
add
xchg
dec
inc
and
and
xchg
repnz
enter
mov
xlat
in
mov
sub
loope
pop
xor
add
add
push
lods
in
mov
js
inc
scas
scas
inc
stos
fisubrs
rcr
add
in
and
test
or
hlt
adc
mov
dec
fsts
and
lret
pop
lea
inc
xchg
sbbb
int3
xor
dec
or
pop
daa
push
pusha
aam
jp
ja
sub
push
arpl
mov
cwtl
or
push
in
cmpsl
sbb
out
mov
imul
lret
xor
cli
fstpt
xchg
stos
hlt
jno
or
xlat
cmp
or
or
je
and
fwait
call
int3
adc
jne
lcall
cmp
add
or
ret
leave
mov
shll
dec
out
ss
out
sbb
loopne
xchg
rep
sub
pop
pop
loop
jo
inc
cmp
mov
fisttps
mov
jp
pop
pop
in
inc
pop
ds
sbb
mov
adc
inc
shrb
jb
out
iret
or
jo
pop
loop
xor
push
or
dec
jg
cli
fdivl
mov
lret
cs
pop
dec
xchg
insb
repz
scas
push
mov
jb
insl
fnstcw
in
pop
sbb
jnp
pop
imul
pop
pop
dec
sub
call
data16
loope
xchg
stc
imul
pop
xor
sub
sti
rcl
push
pop
mov
dec
sbb
pop
pop
movsb
gs
push
dec
xor
push
scas
in
xchg
ret
mov
sbb
repnz
out
test
ja
rolb
pop
ret
adc
add
pop
mov
inc
adc
call
cmp
mov
mov
adc
inc
push
data16
stos
adc
push
inc
lods
pop
bound
dec
je
aaa
sbb
jmp
push
jmp
xchg
sub
push
pop
pushf
int3
cmp
roll
cli
mov
std
nop
repz
daa
mov
xor
aas
dec
cmp
test
lods
inc
testl
or
or
pushf
jne
lcall
pop
dec
shl
mov
lods
and
mov
xchg
iret
popa
push
aas
jbe
mov
jns
pushf
loop
cmp
mov
lret
xchg
aas
xor
fldenv
cmc
mov
push
ret
cmp
sbb
jne
or
jle
mov
sub
mov
loope
add
bound
xchg
inc
leave
ja
test
cli
push
jbe
jne
mov
cs
aam
cmp
rolb
inc
jge
adc
xor
add
mov
iret
xchg
jecxz
rep
ja
xor
cmp
mov
dec
push
stos
imul
in
hlt
arpl
fwait
mov
cwtl
cmp
ret
clts
push
inc
adc
ljmp
pop
dec
inc
and
in
icebp
push
jge
mov
or
pop
push
dec
lcall
std
aam
je
test
daa
test
cs
and
aaa
xchg
sbb
in
mov
bound
addl
idivb
inc
adc
mov
push
mov
lahf
stos
xchg
cmp
cmovo
mov
aaa
std
xor
adcl
mov
cld
and
sub
ja
adc
mov
push
js
xchg
adc
mov
add
fstl
adc
push
or
scas
clc
call
sub
xchg
push
ds
sarb
je
cmovae
add
mov
pop
cmp
loop
aaa
xor
xor
ret
inc
nop
inc
js
cmp
and
adc
mov
test
push
lock
jl
ret
notb
cld
lahf
cltd
fwait
fs
lods
js
out
addr16
cli
push
pop
cld
outsb
loope
add
cmp
outsl
jle
jg
inc
sub
xchg
in
mov
jge
pop
mov
mulb
in
adc
xorb
push
icebp
xor
mov
jge
xor
jae
lods
cld
mov
imul
insl
jae
xor
arpl
jb
cmc
push
mov
adc
movsb
lcall
ret
xchg
movntps
jno
test
sub
outsb
cmp
xor
es
sub
mov
daa
xor
xor
arpl
shrd
je
sbb
and
scas
loop
sbb
call
loope
int3
les
sbb
cmc
mov
repz
dec
les
fld
and
jno
push
aas
hlt
push
xor
scas
sub
mov
push
fisttps
push
test
add
loopne
imul
repz
jmp
popf
shrb
push
into
add
jbe
dec
and
jno
lcall
xor
push
cmp
or
jle
mov
idivl
xchg
dec
imul
mov
imull
mov
scas
add
xor
fistpl
aaa
int3
aam
push
ds
mov
inc
in
das
push
dec
or
cli
xchg
push
das
iret
dec
orb
fwait
cmp
js
test
jns
outsl
test
mov
cmpsb
cmp
fildll
or
andb
jno
dec
clc
test
jmp
test
ud1
and
push
xor
scas
or
xor
inc
roll
pusha
add
in
pop
hlt
bound
adc
movsb
mov
icebp
pop
mov
mov
imul
and
nop
movsb
xchg
lret
inc
dec
or
jl
bound
pop
push
filds
js
and
or
add
out
push
test
cmp
daa
push
jnp
lret
out
inc
dec
pop
repz
lcall
icebp
out
cmp
lods
pslld
fmull
enter
cmpl
cmp
ljmp
add
bound
or
pushl
sbb
clc
adc
mov
sbb
bound
mov
and
jge
cmc
mov
xor
fstpl
mov
push
inc
pop
pop
cltd
lea
loope
fnstenv
push
mov
inc
sub
and
subb
and
cltd
in
xor
shrb
adc
add
leave
mov
mov
adc
dec
inc
push
mov
retw
sub
aaa
icebp
adc
xor
push
lods
mov
cmp
fistpll
pusha
lret
pop
out
test
add
fld
push
pushf
clc
sbb
jbe
mov
add
or
das
inc
pushf
popa
xor
push
jp
cltd
jno
push
fisttpl
adc
ficomps
or
cmc
jb
xor
lods
add
jp
pop
inc
mov
aaa
movsl
push
push
sub
sub
jmp
jae
and
test
sbb
sbb
mov
mov
pop
in
push
mov
sub
sti
fistpl
ffreep
aad
or
fidivl
and
pop
test
jbe
stos
imul
movsb
jb
mov
cmp
flds
addl
and
cmp
xchg
cmpsb
clc
sbb
stc
jmp
nop
cmp
aaa
dec
inc
les
cmp
clc
push
arpl
cmc
jbe
popf
mov
sub
loopne
sub
pop
xchg
or
mov
cmpsb
mov
ja
xor
mov
mov
je
fistpll
pop
loopne
xchg
mov
cmpsl
cwtl
and
icebp
push
imul
jne
dec
nop
cli
imul
mov
cmp
lds
cmpsb
cmp
popa
and
movsl
mov
mov
leave
jl
movsl
aaa
loop
int
clc
mov
push
push
xchg
push
xchg
arpl
dec
mov
stc
inc
inc
mov
icebp
jg
xchg
jl
movsb
sti
pusha
push
jmp
push
add
inc
pop
ja
sarb
or
mov
push
mov
scas
repz
cltd
test
xchg
xchg
les
jnp
sbb
scas
insl
cmc
dec
into
loope
cmc
std
mov
arpl
xchg
out
add
lea
xchg
mov
dec
scas
movsl
shlb
mov
and
inc
and
aad
and
in
xor
mov
jae
cwtl
mov
sub
cmp
into
into
add
fs
into
fistpll
mov
popf
jbe
jmp
add
lcall
dec
je
roll
push
mov
roll
jne
add
pop
std
mov
fwait
subb
inc
xchg
pop
sbb
in
lcall
dec
lea
push
mov
pop
jae
insb
sbb
mov
inc
adc
cmp
sbb
push
dec
xor
mov
mov
inc
repz
bound
mov
in
push
push
shlb
out
xchg
adcl
loop
or
std
mov
jnp
and
push
inc
stos
sbb
aas
mov
sbb
icebp
adc
inc
ds
add
adc
sarl
mov
stos
jmp
pop
fidivs
aam
in
test
push
dec
leave
fidivrl
aad
movsb
pop
sahf
xor
aas
das
inc
sbb
ds
xchg
add
pop
icebp
mov
je
jle
cmpsl
or
call
inc
sbb
lcall
mov
outsl
lock
xchg
in
ret
es
js
fisttpll
sbb
addr16
jle
imul
movsl
stc
imull
jmp
dec
mov
lahf
rclb
fsub
andw
or
cmp
leave
clc
jg
rcrl
ja
add
int
mov
dec
xor
sbb
bndstx
out
or
jp
inc
xor
shrl
sbb
idivl
cmc
in
xchg
aam
bound
mov
jb
dec
dec
fidivs
xor
and
jl
ret
mov
ljmp
pop
mov
lea
and
icebp
mov
les
or
nop
sub
lret
scas
enter
aas
cwtl
sbb
add
xchg
mov
jmp
fwait
mov
imul
mov
nop
mov
xchg
mov
lods
pop
lret
imul
fdiv
lcall
jne
or
mov
inc
pop
pop
aaa
or
lcall
sbb
dec
pushf
je
nop
or
and
pop
jbe
mov
or
nop
sub
icebp
popw
jecxz
stc
adc
inc
xor
popl
das
and
mov
in
add
arpl
sbb
or
mov
add
xor
sub
subb
xchg
and
push
inc
test
sub
pop
mov
ss
nop
arpl
push
jae
jno
xor
lret
addl
and
cmp
cld
incl
outsb
jge
xchg
stos
push
jae
fcoms
js
add
fistl
pop
movsb
mov
mov
adc
inc
jmp
gs
cmpsl
inc
lea
mov
and
stos
inc
cli
pop
push
or
pop
jle
ret
test
call
adc
xlat
dec
mov
leave
mov
rolb
mov
xchg
push
test
xor
mov
or
or
mov
icebp
and
sub
aaa
into
pop
dec
unpckhps
adcb
push
sub
lcall
rcr
cmp
cmpl
sbb
movsb
adc
jnp
xor
pop
idiv
mov
lods
mov
jo
lcall
lock
jecxz
pushf
fcoml
stos
mov
jp,pn
int
push
loopne
iret
mov
push
aad
fs
xor
mov
icebp
add
mov
loope
mov
and
mov
sub
loope
roll
cmp
push
bound
push
dec
mov
loopne
push
lds
xchg
or
nop
iret
jae
xchg
xchg
push
pushf
mov
and
adc
shll
and
cmp
cltd
dec
dec
ss
pop
jp
pop
pop
jns
std
or
dec
rolb
aam
fwait
daa
jle
int3
dec
in
pop
dec
cli
sbb
testb
int3
stc
fsubrs
pusha
sahf
push
aas
push
sbb
sub
mov
lcall
sbb
and
repz
pushf
mov
int
xor
std
rcpps
cld
jge
xchg
or
cmp
movsl
mov
pop
sbb
daa
push
mov
fsubs
sub
mov
jg
and
bound
xor
ja
mov
insb
pop
fstl
xchg
mov
hlt
gs
bndstx
dec
xchg
repnz
ss
lahf
cwtl
inc
lea
lock
and
jp
jle
inc
sbb
push
loopne
sbb
sub
inc
repnz
xchg
add
cld
pusha
sub
stos
sti
mov
xchg
insl
cmp
inc
dec
fwait
add
scas
stos
cli
fdivrp
daa
xchg
xor
xchg
test
into
sbb
cmp
frstor
fisubl
sub
cli
sbbb
int3
and
push
adc
and
lret
ds
lock
clc
mov
ljmp
xor
fs
out
das
xchg
push
out
lret
cli
lods
mov
sbb
inc
loopne
arpl
push
arpl
push
inc
xor
leave
in
or
in
outsb
les
mov
inc
dec
jge
push
stos
mov
hlt
jmp
js
and
ljmp
cltd
int
mov
sbb
xchg
or
xchg
leave
adc
jmp
sub
and
adc
bound
xor
mov
out
inc
jnp
xchg
cli
movb
hlt
aam
icebp
push
add
lret
cmp
daa
adc
cmp
sbb
enter
xchg
jno
mov
movsl
jle
xchg
and
inc
in
mov
mov
nop
aam
decb
scas
neg
mov
ror
inc
cmp
aaa
stos
push
pop
or
es
mov
sub
loopne
leave
pop
pop
xchg
das
nop
dec
xchg
pop
jmp
cld
mov
push
sbb
stos
jg
sub
aas
bound
pop
pop
rcll
sbbl
mov
fcmovne
loope
adc
dec
add
aad
jp
scas
mov
xor
dec
xchg
lea
xor
xlat
pop
cmp
fisubrs
add
pop
popf
or
xchg
add
mov
int
jg
xor
repnz
fsubl
sub
push
dec
push
dec
xchg
call
jnp
mov
jp
xchg
ljmp
pop
fcoms
sub
lock
xchg
ds
das
xchg
and
jmp
das
xor
outsl
lock
das
clc
cmc
rorl
pop
and
mov
dec
and
hlt
mov
and
mov
cltd
mov
or
mov
jg
std
pushf
push
hlt
das
gs
outsl
fcom
and
in
cmpsl
mov
xor
int3
sbb
mov
pop
lock
or
adc
int3
xchg
insb
pop
loop
jp
arpl
jns,pt
repz
enter
cld
mov
inc
fdivr
xor
pop
push
add
jmp
inc
stc
dec
push
pop
mov
in
insb
jno
out
sbb
jne
push
popf
test
dec
hlt
idivb
out
add
adc
sub
xchg
into
add
jge
add
mov
enter
imulb
pop
mov
inc
lock
dec
cmp
je
insl
mov
cmp
test
stos
jnp
push
inc
arpl
pop
sub
repnz
sub
or
js
inc
dec
and
dec
push
push
aas
testb
push
push
pinsrw
cmpl
sub
pop
xor
lret
call
lcall
add
dec
fimuls
sub
jg
rcr
test
lcall
das
shlb
xor
mov
in
or
cmp
xchg
xor
jecxz
in
icebp
cmpsb
cmp
out
loop
and
mov
mov
mov
xchg
mov
adc
rcrb
sti
lods
sub
js
fld
in
adc
addb
push
fsubp
decb
mov
mov
push
mov
out
xchg
adc
out
ficomps
cld
aaa
test
inc
mov
pop
push
inc
leave
jp
test
adc
pop
sub
in
jae
xchg
lret
jo
xchg
pop
push
call
stos
ja
dec
div
test
fistpl
xchg
ret
ss
jmp
int
cwtl
inc
adc
js
inc
aaa
xor
mov
xorb
test
jb
add
pop
cmpsl
or
fcoml
sarl
fnstcw
inc
xchg
push
stc
gs
icebp
mov
inc
pushf
insb
std
or
sti
pop
cmc
bound
inc
dec
and
and
pushf
fs
mov
sbb
cli
dec
mov
out
jmp
and
xchg
mov
push
in
mov
sbb
and
and
repz
addr16
jge
inc
and
loope
fidivl
add
adc
sbb
adcl
sub
xor
mov
xor
ja
push
mov
xchg
lcall
pop
sbb
inc
pushw
fnstenv
lahf
gs
fnsave
sub
cmc
sahf
dec
shll
cwtl
out
sub
mov
sar
sti
loop
adc
add
in
and
push
add
xor
stos
mov
push
pop
push
addr16
mov
test
mov
cmc
mov
jnp
xchg
lret
push
pop
lea
fsubrs
imul
loop
ljmp
lds
or
or
enter
adc
pop
out
push
jmp
and
cwtl
mov
mov
push
lea
scas
popf
and
xchg
mov
push
jnp
lret
sbbb
cmp
jnp
cld
shrb
shr
mov
addb
push
scas
mov
xor
jl
in
mov
mov
cltd
mov
pop
jns
mov
mull
fidivrs
adcl
xor
in
cmc
add
shll
aas
jnp
lods
es
pop
push
cmp
fistps
cmp
jg
fcmovnu
push
imul
dec
pusha
aaa
push
add
jns
mov
in
sahf
mov
mov
mov
in
daa
adc
and
enter
jne
jg
arpl
xchg
xchg
inc
lea
clc
pop
into
arpl
je
pusha
out
fsubp
aas
cld
dec
xor
pop
aam
cmp
roll
push
pop
ds
mov
xor
mov
icebp
repz
pushl
pop
cmp
aad
inc
mov
into
inc
adc
jg
add
rorb
into
push
push
jg
je
ja
in
dec
mov
push
ja
in
into
jmp
popa
adc
or
push
lock
mov
sbb
sbb
lret
push
xor
int
dec
mov
neg
or
push
pushl
sub
lds
data16
testl
xchg
repnz
ja
inc
insl
push
ret
adc
jno
xchg
push
xorl
or
mov
pusha
pop
push
fistl
add
sub
xchg
popa
xor
ljmp
ret
test
sbb
mov
lret
push
sbb
cmp
pusha
into
aad
pop
sbb
decb
and
stc
cmp
lret
int3
int
in
lods
jg
cmp
out
popf
or
imul
pop
jmp
sti
mov
jne
push
dec
pop
xor
push
xor
loopne
cmp
popa
jge
lds
std
cmpsl
push
repnz
std
push
push
fsubrs
aad
cmp
pop
mov
aas
jae
ljmp
in
iret
sbbl
cmpsl
lds
pop
dec
jp
scas
andl
jg
cmp
shl
or
fnstcw
add
cmc
cli
mov
int
sbb
cli
pusha
mov
add
mov
push
gs
test
addr16
les
mov
into
pop
sub
mov
push
or
adc
dec
popa
je
mov
sbb
je
sub
lods
loopne
add
clc
push
ds
dec
mov
jnp,pn
mov
xchg
aas
push
dec
mov
pop
add
mov
stos
mov
jp
jae
insl
pop
repnz
sub
add
dec
jae
jmp
leave
idivl
pop
push
in
lret
mov
push
mov
sub
repz
push
popf
xor
out
test
testb
mov
pop
jns
jnp
dec
ja
inc
repnz
xchg
testl
imul
sti
sub
or
ret
rep
dec
add
pop
sbb
out
mov
cltd
outsl
repnz
sbb
adc
xchg
jae
into
popf
es
stc
add
aad
cmc
mov
lock
cmp
pop
jns
add
xchg
jmp
lea
movsl
sbb
data16
push
cmc
int3
fs
shr
test
inc
push
jge
inc
or
and
data16
fwait
xor
les
cwtl
cmpsb
cmpsl
sbb
stos
shll
rclb
mov
xchg
rol
mov
lret
pop
push
into
or
fimuls
movsb
dec
movsb
adc
push
in
xor
pop
lods
push
leave
push
xchg
popf
sub
ret
fstpl
jae
sbb
xor
sti
and
aam
int3
popa
sbb
fcomi
adc
xchg
push
addr16
scas
push
jmp
fcomps
ljmp
and
fisubl
and
outsl
mov
mov
jmp
pop
je
mov
fdivs
sub
jae
jecxz
sbb
jnp
xchg
call
push
into
loopne
dec
fbld
scas
hlt
imull
imul
loopne
aad
or
pop
test
repz
ret
adc
add
xor
mov
and
xor
divl
sub
pusha
jge
adc
xor
shrb
loope
test
mov
pop
dec
sub
or
push
in
xor
call
and
lds
mov
or
or
jbe
mov
jnp
pop
pop
push
pop
addr16
jp
xchg
cmc
xor
cli
push
in
insb
dec
mov
mov
and
mov
xor
inc
fdiv
dec
pop
mov
enter
sahf
std
repz
in
nop
addr16
scas
mov
or
fsubs
in
push
mov
ret
popf
lret
push
pop
es
icebp
cwtl
xchg
pop
shll
cmpl
ljmp
jp
or
xor
aad
psrlw
das
mov
loopne
mov
dec
dec
xchg
mov
into
inc
add
fsubl
enter
aam
jne
pop
jecxz
lret
test
daa
sbb
inc
es
je
nop
push
add
filds
mov
stc
testl
push
lods
mov
jo
or
cmp
fldenv
movsb
icebp
stc
fmuls
imul
les
push
imull
dec
leave
or
mov
mov
je
aas
inc
std
jo
xchg
les
cmp
adc
jbe
icebp
aad
call
jne
mov
addl
pop
addr16
inc
mov
inc
lea
jecxz
dec
aad
loope
das
pop
mov
movsl
std
or
dec
outsb
mov
stc
sub
cmpb
pop
fwait
fwait
jmp
or
jmp
xchg
push
mov
push
mov
jbe
inc
add
bound
hlt
pop
es
std
sahf
pushf
loopne
cmp
std
jne
pop
enter
fbstp
pusha
and
out
mov
in
inc
or
jmp
xlat
lea
dec
fsubl
cli
and
lahf
enter
pop
pop
incl
mov
call
lahf
ja
andl
sub
insl
xchg
cltd
push
test
cwtl
mov
cmp
add
sub
fcompl
loopne
pop
fs
mov
stos
pop
and
bound
data16
push
jb
insl
sub
outsl
in
scas
jno
mov
adc
mull
sbb
dec
xchg
out
push
sbb
add
js
adc
lret
cmp
sahf
pop
imul
adc
inc
or
push
iret
and
aad
popl
aam
adc
call
jnp
sbb
pop
add
fldcw
daa
xor
or
mov
cmp
jge
push
or
icebp
in
or
imul
xor
dec
orl
icebp
lea
and
xor
cmp
imul
rcrb
and
sub
xchg
or
arpl
jnp
fs
fsubrs
add
ss
cmp
or
cwtl
stc
es
dec
and
adc
and
shll
cmp
es
inc
pop
cmpb
pop
xlat
pop
adc
push
jmp
add
cli
push
push
scas
call
inc
jne
cli
mov
mov
dec
cmp
pop
fisttpll
inc
xchg
mov
pop
jecxz
cmp
cmpsb
dec
ds
movsb
shlb
push
test
fwait
or
andl
loopne
outsb
add
and
pop
lret
cwtl
xlat
mov
fcompl
dec
fwait
push
insb
cld
mov
push
incb
pop
mov
sub
mov
xchg
push
mov
imul
ljmp
and
jae
mov
push
ljmp
addr16
ret
mov
jmp
sarb
jl
mov
jne
adc
inc
in
jae
mov
jmp
sub
fwait
xor
negl
pop
stos
adc
andl
mov
mov
out
jns
xchg
je
adc
mov
sub
into
out
adc
mov
aaa
push
pop
jno
fsubs
pop
daa
inc
sub
push
fsts
aad
dec
push
jge
inc
bound
lret
inc
call
and
dec
fcompl
rcll
nop
pop
dec
lret
push
out
sub
and
xchg
scas
pop
dec
adc
idivb
shrb
push
imul
mov
mov
pop
xchg
je
mov
mov
outsl
or
cmp
sbb
add
andb
mov
ss
rcll
pop
cmp
add
mov
std
testl
xlat
mov
inc
mov
mov
cmpsl
adc
loop
fdivrs
cmpb
add
xor
shl
dec
mov
dec
xor
out
xchg
cs
dec
dec
in
xchg
rcl
sbb
into
fs
mov
mov
push
fistl
repnz
iret
sub
xor
mov
inc
adc
or
int
insb
das
shl
in
rcrl
adc
fwait
sub
sbb
adc
push
adc
mov
in
fldt
in
ret
lret
into
adc
dec
sub
push
and
dec
inc
mov
jmp
hlt
jmp
mov
daa
xor
call
dec
int3
inc
cmp
add
pop
fidivrl
divb
sub
sub
sbb
in
inc
fnstenv
cwtl
or
inc
in
jno
imulb
mov
ret
or
pop
mov
in
ja
push
lcall
aas
sbb
not
adc
out
cmp
lcall
in
out
and
aam
cwtl
push
cmp
in
cmp
psrld
push
and
shl
scas
inc
or
xlat
xor
add
jge,pn
sbb
mov
adc
pushf
mov
stos
loop
test
shrb
fucomip
int
sub
xor
xchg
mov
ljmp
jecxz
into
push
ss
cmp
push
in
icebp
call
sbb
addr16
mov
mov
imull
imul
fwait
mov
mov
push
jne
rorb
scas
push
sahf
fcoms
out
jnp
add
push
outsb
mov
addb
lahf
dec
add
push
push
fnstsw
xor
adc
in
cs
or
outsl
inc
fwait
xor
cmp
in
outsl
add
fbld
dec
popa
testl
inc
mov
popl
jne
repnz
enter
cmpl
xchg
mul
repz
push
leave
jge
cmpsl
mov
fcom
mov
loop
popf
aam
jbe
push
out
sub
ss
sbbb
push
out
stos
xchg
jl
xchg
ret
xor
fistps
adc
popf
lret
mov
into
dec
hlt
insb
movsl
cmpsl
push
adc
fstpt
or
in
sub
pop
jae
gs
dec
sbb
popf
push
cld
mull
jmp
push
std
push
push
dec
xchg
jae
gs
int3
jns
pop
repnz
xlat
leave
aaa
imul
sbb
and
shr
jg
sbb
gs
jp
sbb
jecxz
push
lods
xor
icebp
cwtl
and
mov
sub
cmp
lds
lea
lods
loope
pop
outsl
push
add
shll
sbb
xchg
sbb
jae
dec
cmc
jmp
negl
and
xorl
ret
jo
daa
clc
into
addr16
je
adc
ficomps
pop
ret
in
je
pop
xchg
iret
xchg
hlt
ret
ds
repz
pop
dec
sub
push
add
mov
daa
mov
gs
in
imul
jbe
es
push
xchg
fdivrl
mov
pop
add
std
push
cwtl
add
jp
xor
xchg
fs
xchg
jnp
pop
sbb
pop
fsubrp
jno
push
aas
sar
sti
dec
cs
outsl
stos
enter
aas
out
add
mov
shlb
repnz
mov
sbb
sub
sub
in
outsb
mov
outsl
dec
push
inc
xchg
or
dec
xchg
js
iret
or
jmp
scas
mov
jns
and
adc
mov
push
jmp
adc
mov
cli
mov
repnz
shlb
mov
push
inc
push
mov
int
bound
push
in
mov
aad
sub
insb
call
pushf
push
or
lret
aad
and
out
mov
dec
scas
movsb
out
adc
lahf
and
ja
and
lcall
adc
adc
subl
and
cwtl
pop
call
mov
cmp
mov
push
and
mov
aas
bound
xchg
add
push
fsubl
sets
xchg
fsub
pop
mov
dec
mov
enter
push
mov
xor
lock
push
pop
gs
inc
daa
cmpsb
adc
xor
inc
sbb
xor
call
cs
test
dec
pop
sahf
arpl
popf
fsubrp
jl
mov
arpl
jnp
aaa
out
pusha
or
lret
les
pshufw
movsb
lock
shll
imul
inc
jmp
xor
xchg
test
lods
call
aas
jp
nop
xchg
imul
adc
dec
out
mov
push
ror
test
xchg
fimull
fcoml
cmp
cmp
imul
insb
xchg
lret
adc
cmp
aad
xchg
ljmp
insb
jmp
xchg
insb
cmpl
dec
push
int
data16
or
cs
fcmovb
xchg
dec
jne
sub
not
pushl
inc
mov
cs
out
jb
repz
jg
fchs
pop
insl
inc
inc
lds
or
pop
cli
imul
addr16
jg
push
iret
dec
xchg
pop
in
dec
pop
out
ds
mov
stc
pop
pop
inc
sub
cmp
cmpsl
fwait
mov
xor
xchg
sub
inc
das
fmuls
in
fdivl
jo
mov
xor
ret
adc
dec
sbb
test
xor
roll
dec
push
ss
clc
loop
test
push
scas
or
out
aad
sub
fwait
outsb
into
aam
popa
mov
xor
xchg
test
mov
pop
testb
sahf
pop
pushf
fmul
inc
insl
imul
jo
dec
or
sbb
sub
mov
and
mov
push
in
stos
jne
int3
mov
mov
sub
push
push
adc
js
mov
and
push
push
push
dec
int
pushf
out
dec
insl
xorb
cmpsl
or
cmp
mov
xchg
xor
fdivl
popf
mov
subb
push
in
cmp
adc
mov
adc
stos
movsl
adc
jbe
pop
mov
movsb
stos
sarl
out
inc
or
pop
cmp
xchg
addr16
xor
inc
orb
mov
js
sbb
mov
lock
test
cmp
std
xchg
cmp
test
push
and
or
cmp
sbb
leave
fdivrs
in
out
xchg
cmp
fnsave
rolb
fists
cltd
lahf
push
cmp
rcll
sahf
xor
subb
and
sbb
inc
out
es
daa
inc
dec
std
sbb
mov
addl
mov
pushf
inc
mov
cmp
pop
add
dec
addr16
mulb
pop
cmp
dec
sub
popf
jb
outsb
fildll
mov
jg
inc
xor
repnz
sub
pop
fcoml
popa
mov
addr16
sbb
add
adc
fcompl
mov
fwait
in
adc
call
test
iret
movsb
movsl
or
popw
je
or
lds
lods
scas
mov
push
loop
push
add
sti
mov
xor
ret
sti
aas
pop
scas
dec
or
pop
cmp
xor
lret
stos
add
dec
xchg
or
cmc
pop
shlb
pop
in
cld
and
ljmp
sub
bound
cmp
scas
adc
scas
out
inc
js
xor
or
mov
mov
sub
push
pop
sbb
mov
xor
arpl
dec
xchg
pushf
lods
push
inc
int
mov
test
mov
mov
cltd
pop
decb
mov
outsl
mov
jge
testl
aaa
fcomps
fbstp
ret
xor
mov
sbbl
dec
scas
push
and
dec
mov
sub
scas
lea
jl
pop
test
pop
push
mov
jne
mov
push
das
das
and
aaa
arpl
mov
rep
sarl
mov
lods
jo
mov
loop
in
xchg
lods
jmp
xchg
xor
retw
mov
jno
jle
lcall
cltd
lret
insb
jecxz
push
sahf
and
adc
pop
mov
mov
orb
jns
int3
jb
sbb
mov
aas
push
imul
add
xor
add
or
xchg
cld
lahf
push
push
int3
xchg
mov
stos
jp
mov
xchg
lahf
test
das
dec
les
stos
jno
xor
jmp
into
add
push
aas
push
test
mov
mov
aaa
ret
push
repnz
cmp
leave
push
testb
add
pusha
insl
push
addr16
sub
repnz
fildll
loope
pop
into
jns
movsb
push
xor
or
push
pop
dec
jbe
std
inc
cltd
cwtl
in
clc
push
mov
jno
adc
out
call
dec
sub
adc
cmpsb
shr
inc
push
and
cwtl
lret
call
cli
cmc
rcrb
fs
aam
jecxz
mov
fcoml
and
dec
pop
sbb
jne
cmp
pusha
dec
popa
sbb
sub
rclb
mov
jle
rcrb
js
jmp
sub
aam
push
and
jno
movsb
jbe
jo
or
mov
push
mov
mov
mov
pusha
outsb
push
out
or
sbb
dec
jno
stos
mov
ja
xor
in
andl
dec
inc
push
movsb
cld
dec
cmpsb
or
xor
jmp
gs
rcrl
inc
lea
mov
sub
lods
sub
cmp
test
cmpsl
xor
jecxz
fwait
cmpsb
jne
push
add
sbb
sahf
jmp
loope
test
insb
mov
pop
pop
jo
xor
mov
adcb
fdivrs
inc
or
js
cmpsb
inc
sbb
aam
inc
lods
test
xchg
cmpsl
movsb
pusha
sbb
fst
sar
pop
cmp
lahf
scas
in
scas
scas
mov
cltd
add
xor
cld
jnp
xchg
or
push
mov
inc
dec
sub
mov
rcll
adc
pop
jmp
sbbl
sbb
add
or
scas
repnz
pop
notl
cmp
push
repnz
xchg
into
sbb
stos
mov
xchg
pushf
push
sub
pop
push
ret
bswap
xlat
and
inc
cld
scas
sub
hlt
pushf
call
mov
pop
pop
popa
mov
fs
mov
movsb
imul
add
nop
add
sahf
push
dec
adc
punpcklbw
fucomip
lea
shlb
das
push
int
es
cs
mov
lret
into
mov
sub
addr16
add
fisubrl
clc
pop
pusha
cmp
sahf
mov
inc
xchg
nop
cmp
dec
push
mov
sar
fsub
pusha
xor
xchg
outsl
push
out
xchg
jg
xlat
jge
dec
xchg
shlb
mov
push
jno
js
cmp
lcall
push
outsl
pop
stc
push
jbe
into
out
mov
sbb
stos
jnp
in
pusha
arpl
and
out
adc
mov
inc
sub
loopne
test
pusha
incl
adc
scas
test
inc
rcrb
cmp
fisubrs
sub
shrb
sbb
xchg
and
arpl
add
mov
push
jo
cwtl
inc
leave
xchg
jmp
je
push
ret
fldenv
add
nop
xchg
adc
gs
pusha
push
or
sbb
pop
push
mov
inc
inc
jge
dec
adc
ss
or
jo
cmp
out
imul
sub
jle
inc
jb
jg,pt
mov
cmp
sbb
cwtl
imul
mov
cwtl
arpl
lret
pushf
mov
insl
xor
cmp
mov
dec
adc
xchg
dec
das
push
out
xchg
out
jae
int3
push
pop
outsl
jo
inc
pop
fsts
repnz
je
pop
ss
stc
cwtl
rcl
sti
cmp
jns
xchg
xor
insl
das
fbld
out
sbb
movsb
pushf
cwtl
stos
add
out
jge
jg
scas
jns
iret
jp
push
xchg
jb
std
sahf
inc
mov
pop
and
xchg
pop
int3
test
shlb
pop
in
cltd
dec
xchg
mov
xor
aam
pop
int3
adc
and
sbbl
jg
mov
out
cmp
xor
repnz
lods
sbb
jmp
mov
and
es
dec
jae
jmp
dec
sub
call
out
scas
xchg
sub
in
inc
js
xor
push
mov
xchg
jns
pop
mov
in
inc
inc
fbld
cmp
dec
popa
stc
aas
mov
mov
jae
cwtl
lods
rol
rorb
or
or
in
test
lods
cmp
xchg
sub
scas
cwtl
mov
test
inc
mov
mov
cwtl
inc
jecxz
out
arpl
jle
fsubp
mov
idivb
mov
xchg
sub
loope
adc
mov
stc
in
repnz
shlb
das
test
push
sbb
mov
push
jne
out
mov
enter
jecxz
mov
push
inc
cli
dec
xchg
jne
xchg
nop
daa
call
adc
adc
mov
lds
cmpsb
push
mov
out
dec
and
adc
xchg
pusha
aaa
lods
cmc
jo
adc
xor
jge
add
add
movsl
popf
dec
sub
cmpb
lea
push
lods
addl
inc
out
fs
ss
or
xchg
mov
mov
imul
xor
int3
mov
add
jge
cmp
sbb
jge
lods
sub
adc
inc
cmc
dec
popa
jge
dec
int3
ror
bound
aad
arpl
dec
xor
ror
mov
dec
cmp
mov
xchg
fmull
lods
cmp
push
dec
mov
xchg
and
inc
rcrl
into
scas
imul
or
test
dec
stos
add
dec
insb
inc
mov
mov
pop
imul
aam
cmp
cmp
dec
xchg
cld
stc
jmp
neg
jp
adcb
xor
aas
leave
add
pop
scas
cmp
xor
sti
and
add
cmp
mov
add
cmp
add
addr16
sub
adc
ljmp
mov
jmp
jb
mov
xor
or
push
xor
test
dec
sbb
mov
sarb
ljmp
sarl
imul
dec
shlb
adc
sbb
inc
insl
test
loope
sti
inc
mov
and
nop
aam
hlt
and
loope
stos
dec
in
mov
sbb
cli
adc
in
movl
inc
xchg
dec
push
lods
add
xor
push
sub
ss
gs
movups
in
pop
mov
addr16
add
aam
jae
aaa
dec
jnp
scas
lret
bound
cli
push
scas
xor
push
popf
int3
mov
loop
pop
je
push
out
hlt
rorl
aam
lret
add
int
scas
inc
stos
shrb
mov
jno
cld
mov
inc
ss
ja
fs
lahf
mov
sub
mov
leave
xchg
lcall
jge
fidivrl
inc
rcrb
add
aam
add
cmp
sbb
into
mov
dec
aad
ja
xor
mov
or
es
loop
loope
jge
gs
cltd
lcall
fsubrl
pop
inc
jae
inc
mov
insb
xor
xchg
aas
xor
dec
aas
add
cld
push
mov
call
mov
ficompl
dec
lods
cmpsl
dec
dec
add
and
mov
in
cmp
movsb
xlat
jmp
mov
push
xchg
jae
or
pop
push
xchg
xchg
sub
movsb
sub
aad
jno
out
mov
jl
dec
and
xchg
stos
fists
rcrl
cs
lock
aad
mov
push
sub
inc
xor
shlb
or
jo
je
jge
xchg
mov
stos
imul
add
pop
out
xor
loop
adc
sbb
aam
jae
xchg
sahf
push
push
fmul
and
test
add
pop
and
xchg
ds
addl
ss
inc
lret
repnz
and
icebp
dec
mov
and
int
jns
daa
xor
movsb
cmp
stos
frstor
cld
int3
dec
dec
jmp
out
ss
out
loop
loop
mov
inc
mov
push
add
test
in
in
inc
sahf
jg
cmp
adc
cmpsb
ja
dec
pushf
xchg
mov
scas
mov
jb
xor
lds
mov
mov
inc
test
cmp
cltd
jno
fdivrl
cmpsl
mov
into
pop
movsb
xchg
inc
test
sbb
xor
jp
jg
movsb
cltd
fadds
push
sbb
cmp
stos
add
adcb
cmp
shl
fcmovne
in
push
int3
xlat
pop
loope
add
push
add
xlat
out
fisttps
adc
ret
push
insl
push
out
lds
clc
repz
mov
into
ja
push
xchg
arpl
cmpsl
dec
les
ret
push
pop
and
dec
adc
shll
fistps
mov
test
mov
inc
jle
int
out
jp
daa
jnp
les
mov
ficoms
cmp
and
mov
imul
icebp
dec
mov
test
fdivrl
negl
mov
sar
pop
cmp
shlb
cmp
ds
inc
and
cmp
ljmp
hlt
and
loopne
mov
cmpsb
pop
jge
pop
clc
dec
jl
ja
icebp
call
adc
inc
push
mov
and
mov
aam
cltd
cwtl
and
lods
decb
es
xchg
jmp
xchg
push
outsw
cmp
out
neg
dec
mov
push
add
jns
cld
jbe
cmp
lods
jno
xlat
lcall
and
mov
dec
xchg
pop
inc
push
and
aad
js
and
outsl
sub
adc
loopne
pop
mov
fbstp
mov
out
jg
adc
hlt
mov
add
repz
clc
movsb
push
pop
lret
push
xchg
iret
or
je
scas
iret
repnz
pop
fmul
jae
pop
andb
xor
imul
fsin
xor
into
xchg
bndstx
adc
push
mov
outsb
jae
je
sbb
shlb
jmp
inc
jno
pop
testb
xchg
or
sbb
sbb
or
mov
movsl
incb
fwait
imul
in
imul
inc
aas
jns
rcrl
jns
inc
sbb
fisubl
mov
rcr
mov
sub
sbb
fwait
mov
sbb
jo
sbb
or
xor
mov
sbb
test
push
sbb
lods
cmp
xor
ja
mov
inc
les
mov
inc
out
xlat
daa
cmp
cmpsl
scas
jnp
movsb
js
or
jl
pop
in
sti
vmwrite
mov
adc
mov
pop
and
inc
pop
insl
fs
mov
mov
xor
jl
je
sub
lock
in
xor
inc
xor
icebp
test
xchg
xor
test
inc
rcll
shll
sti
inc
sbb
fstps
xchg
pop
pop
clc
dec
inc
dec
push
imull
enter
out
rol
dec
loopne
add
add
adc
adc
decl
in
xorl
push
pop
out
push
sub
mov
mov
and
add
mov
xor
add
jmp
shll
push
push
cmp
movsb
jmp
mov
adc
cmpsb
shll
sbb
dec
icebp
cmp
test
adc
jmp
or
mov
sahf
shll
mov
adc
je
and
jbe
lea
cmc
mov
mov
in
ljmp
fisubrl
jp
rclb
hlt
cmp
nop
loopne
mov
push
stos
inc
cmp
pop
fimuls
das
push
push
es
adc
sbb
xchg
adcl
dec
loope
xchg
xor
js
nop
outsb
add
jg
mov
imul
jge
out
out
fidivl
mov
rcrb
jmp
bound
jnp
lret
pop
xchg
std
repnz
xchg
push
lock
push
sti
fldcw
cmpsl
pusha
dec
aad
daa
stos
in
sbb
dec
mov
add
adcl
rorl
push
mov
inc
add
jecxz
repnz
insl
sahf
fwait
pop
adc
loopne
fdivs
mov
aas
cmp
leave
shlb
es
inc
mov
add
xchg
ljmp
and
lods
cmpsb
mov
fdiv
outsb
int3
mov
mov
lds
inc
sub
sbb
decb
loopne
bnd
xor
adc
push
push
fsubrl
jp
movsl
scas
push
adc
nop
or
aam
add
sub
mov
ja
mov
mov
jne
outsl
push
jne
sub
fs
rcrl
inc
jns
adc
adc
mov
cmp
outsl
sbb
fnstenv
or
dec
adcl
inc
lods
outsl
xlat
jmp
xchg
aaa
push
jne
push
outsl
or
mov
adc
xor
mov
out
ret
daa
nop
popf
xor
ret
cltd
inc
xchg
jo
pop
xchg
adc
push
test
imul
repnz
jp
movsb
hlt
popf
adc
cmc
add
inc
dec
fimull
lcall
insb
stos
js
mov
push
cmp
pop
repz
stc
ret
jo
mov
add
aad
repnz
ret
mov
je
xor
cmpsb
push
cmp
outsl
mov
jbe
inc
sub
mov
jns
sbb
jne
cli
pop
out
jge
sbb
mov
push
pop
hlt
sahf
mov
mov
inc
or
lea
movsl
mov
cmp
rcrl
stos
push
js
loope
sbb
xchg
xor
out
sti
mov
fdivs
push
out
dec
jnp
mov
int3
inc
inc
rolb
sub
test
cmp
xchg
popa
cs
or
sbb
or
popa
sub
xchg
repz
nopl
mov
inc
lock
pop
cmp
insl
sbbl
lea
lret
stc
mov
test
pop
xor
repz
leave
setne
jecxz
pop
insb
xor
jns
mov
adc
xor
dec
ret
out
push
lcall
mov
mov
ret
xchg
pop
in
mov
dec
leave
xchg
leave
xchg
movsb
inc
push
aad
shlb
pop
xchg
fsubr
xor
test
jp
dec
push
sbb
cmpsb
pop
insb
sub
ds
test
mov
cmp
loopne
mov
add
adc
les
test
movsl
xor
dec
adc
pop
jo
imul
dec
out
pop
imul
pop
sub
sbb
pop
mov
mov
push
pusha
ficoml
div
daa
ret
adc
dec
dec
mov
jo
cmp
in
test
iret
jl
js
dec
rep
std
fsts
lods
pop
fs
jge
or
jmp
push
add
pushf
addl
sbb
pop
inc
sub
add
xchg
adc
outsl
pop
out
or
test
mov
mov
add
lods
cmc
jmp
mov
inc
sbb
add
pop
and
mov
mov
cli
std
push
mov
sbb
and
mov
jae
push
cmp
sbb
insl
add
fwait
push
cmp
sbb
aas
lods
adc
outsl
dec
jge
stos
jle
dec
jnp
loope
jle
orb
inc
mov
aad
lods
mov
fdivrp
lock
cld
mov
cltd
fnstenv
mov
mov
lds
and
adc
rorb
push
add
xchg
lock
popl
arpl
mov
nop
les
loop
xchg
mov
cmp
ja
ja
outsb
mov
pushf
inc
fidivrl
xchg
lahf
mov
cmp
data16
and
mov
std
jmp
add
addb
dec
imul
test
fiadds
mov
cmpsb
lcall
mov
push
sub
cmp
pop
scas
mov
add
push
add
ja
scas
cld
das
lods
incl
mov
sbb
pop
jle
pop
dec
xor
xor
push
jge
lret
clc
sbbb
outsl
dec
adc
mov
ret
push
sbb
xor
mov
fsubrp
js
mov
push
daa
int
iret
cld
xlat
cmp
sbb
fistpll
mov
xor
sahf
adc
push
mov
icebp
mov
addr16
sub
sub
and
mov
pop
pop
in
xchg
ret
shrl
inc
leave
out
sbb
or
sub
xchg
fisubs
mov
xchg
je
mov
or
lods
ja
mov
inc
arpl
mov
sarl
inc
sub
xchg
icebp
test
jle
faddl
std
dec
popa
pop
ret
call
cmp
mov
jo
dec
push
lock
mov
mov
aam
stc
pop
in
jbe
and
in
cli
iret
ds
je
add
xor
mov
popf
push
xor
xor
outsb
adc
sub
pop
test
cli
cs
adc
sti
inc
xor
and
fs
es
inc
popa
and
push
sbb
jnp
pop
ret
int
xor
mov
xor
jp
test
std
pop
and
aas
mov
pop
es
enter
and
scas
cmp
push
popf
leave
jle
jae
add
bound
and
mul
out
ss
aas
sbb
xchg
xchg
mov
subl
std
shll
mov
sbbl
movsl
inc
gs
jmp
es
pop
xor
in
xlat
nop
ds
bound
es
mov
cmp
pop
shl
cmp
dec
gs
jb
add
push
xlat
dec
lds
ds
or
mov
jmp
mov
mov
or
push
in
lret
sar
aam
xor
js
cli
pop
shrb
data16
les
arpl
loope
add
adc
sub
fisubl
ljmp
je
clc
ja
xchg
imul
mov
cmp
loop
insl
test
clc
push
add
loop
dec
push
lfs
push
cmp
xchg
je
addr16
flds
aam
shrd
in
lret
aad
mov
ljmp
push
nop
jbe
xchg
pop
es
jmp
jg
add
xchg
cmpsl
dec
leave
pushf
movsl
or
lret
sbb
sbb
push
or
imul
jnp
lret
lock
xchg
dec
mov
mov
xchg
leave
dec
popa
cmp
les
pop
adc
movsl
push
xor
into
out
adc
repz
mov
or
xchg
shlb
dec
mov
fmull
inc
mov
enter
push
loope
xchg
ret
xchg
xchg
fadds
pop
xor
test
dec
dec
sub
jmp
jmp
loop
sub
xor
outsl
fcompl
push
inc
push
popf
or
cmp
sbb
insl
xchg
roll
inc
mov
or
add
or
push
xor
push
lods
in
les
vpmovsxbd
mov
int
xchg
mov
mov
jnp
or
or
push
fdivl
ret
push
divl
stc
outsl
out
in
mov
pop
and
int3
call
das
aam
xor
dec
adc
pop
cmc
das
sub
adc
in
sbb
pop
sub
popa
cmp
adc
jl
lods
dec
add
push
ret
imull
mov
pop
or
jecxz
sbb
adc
sbb
jns
int
sub
mov
leave
xchg
push
shlb
and
stos
jae
daa
pop
out
fisttpll
mov
lret
cmp
mov
xlat
sub
in
ljmp
ret
pop
cmp
in
and
aad
pop
lock
mov
and
sub
mov
ljmp
test
lcall
pop
adc
imul
lret
movsl
fs
inc
mov
dec
mov
fildll
or
fs
adc
testb
push
inc
popf
add
mov
das
jno
lods
frstor
pushf
into
jl
inc
stos
or
xchg
jo
and
cmp
out
jl
adc
je
das
jecxz
cmp
hlt
push
enter
mov
add
push
out
xor
lock
push
fisubrs
bound
scas
outsb
mov
addr16
dec
push
rorb
fstl
bound
and
inc
mov
adc
and
xor
push
jno
sub
mov
stos
inc
sarb
jb
inc
lcall
dec
fwait
xor
dec
std
sbb
mov
sbbl
lret
test
cmp
jb
xchg
aaa
add
sub
sahf
jg
push
jecxz
scas
roll
sbb
mov
lret
pop
repnz
test
dec
fistps
clc
cs
ret
jge
pusha
daa
adc
shll
mov
inc
cli
nop
or
pop
adc
lret
pop
movsl
push
or
aad
stos
push
xlat
and
into
xor
js
jae,pt
or
pop
push
or
adcl
add
push
pop
lds
pop
dec
jo
push
lahf
jne
dec
inc
mov
mov
mov
cmc
mov
xchg
aam
test
mov
mov
aaa
pop
jp
xchg
cmp
or
into
or
adc
adc
xchg
cmp
sub
jle
lea
repnz
pop
cmp
jp
fsubl
pop
add
dec
mov
dec
call
pop
insl
out
or
bound
outsl
mov
pop
sub
cwtl
inc
sbb
aaa
popa
jns
mov
mov
insb
xor
sarl
sbb
fldt
mov
rclb
in
jl
jno
adc
lcall
pop
mov
outsl
roll
je
lods
frstor
cmp
iret
inc
iret
add
cs
les
fs
fcomp
ljmp
scas
sub
and
xchg
adc
inc
cmpsl
jb
mov
mov
aad
out
sub
push
xor
sahf
shlb
push
mov
xor
or
push
inc
insl
cwtl
or
inc
movsb
push
pop
repnz
push
xor
rcr
pop
fwait
int3
shll
shlb
xchg
adc
or
inc
xor
push
mov
arpl
in
adc
and
int3
cmp
repz
xor
notl
pop
pusha
sbb
cmp
roll
lods
fistps
int
jae
jmp
jp
cmp
cmpb
xchg
sbb
jp
cld
aaa
shr
jne
dec
aam
dec
addr16
cli
push
loopne
jle
daa
push
jns
sub
sub
inc
scas
ss
ds
dec
add
in
add
rorb
dec
lret
mov
daa
jnp
out
jae
jg
xchg
lahf
or
outsb
push
xchg
sahf
push
mov
cmc
iret
push
jmp
in
in
int
fcoms
sbb
mov
jmp
xchg
jmp
adc
xchg
dec
xchg
shlb
or
mov
and
sbb
adc
cltd
and
or
and
inc
xchg
or
and
xchg
push
mov
pop
fiaddl
or
adc
std
or
int
adc
jp
outsl
lods
fnstcw
xchg
repz
and
test
pop
enter
repz
stos
cmpb
adc
negl
pop
ss
xchg
cmp
fadd
shl
fstp
ss
lcall
mov
aad
dec
jb,pn
mov
adc
mov
or
fs
mov
ror
xchg
jg
xchg
clc
cmp
dec
sbb
cs
in
call
pushf
dec
in
xchg
into
mov
mov
adc
lcall
mov
adcl
add
in
es
and
mov
notb
fwait
imul
ret
xchg
jecxz
xchg
aad
push
sbb
xor
ffree
jge
shrl
addr16
lcall
jecxz
push
push
hlt
gs
dec
xchg
les
cwtl
xchg
setl
repnz
test
stc
sub
and
mov
mov
int
push
in
xchg
inc
loope
cmpb
aas
xor
or
dec
repnz
mov
jbe
pop
icebp
imul
pop
xchg
test
inc
pusha
cmp
stos
dec
mov
pop
fsts
xor
fwait
sbb
fwait
mov
repz
jbe
incl
cmp
loop
cmp
notb
cli
ss
pop
jecxz
xorb
dec
pushf
sbb
frstor
ds
out
dec
lea
jle
fincstp
test
adc
shrb
add
mov
repnz
scas
nop
ret
pushf
xor
dec
fsub
and
dec
loopne
nop
adc
jno
cmp
mov
xchg
stos
cmpsb
pop
adc
mov
testb
xor
jp
xchg
jmp
ficoml
in
call
dec
lcall
cmp
xchg
pop
mov
xor
jo
or
clc
mov
outsl
enter
popf
pop
dec
xchg
mov
loope
jo
test
mov
jo
lock
adc
fistl
orl
or
mov
add
add
lea
xor
mov
xchg
add
lds
lock
add
xlat
jle
fistl
jmp
nop
lea
inc
adc
xchg
adc
jne
test
call
addr16
aaa
sbb
adc
mov
inc
pop
sahf
or
and
sti
movsl
rorl
imul
scas
inc
push
jns
not
jbe
std
pop
or
cwtl
addr16
xor
sbb
add
fidivrs
cltd
xor
int3
mov
lcall
pop
cmp
push
sarl
std
aaa
fcom
inc
call
ljmp
cltd
pop
jae
mov
pop
add
repnz
leave
adc
pop
xchg
xor
das
sahf
xor
push
je
mov
aam
jns
subl
mov
test
ret
int3
call
push
cltd
inc
xchg
iret
ja
inc
add
repz
test
pop
mov
jmp
xchg
into
cwtl
enter
and
xchg
jle
add
jb
cmp
rolb
sbb
jl
cmpsb
aam
rolb
mov
sub
hlt
xor
push
scas
sub
shr
mov
add
lock
push
or
insl
bound
and
insb
cmpsl
push
mov
movsl
pusha
int
lahf
int3
pusha
add
mov
inc
jb
out
rol
push
test
sbb
sbb
push
lods
stos
cmpsl
adc
push
cmp
sbb
mov
cmp
push
mov
mov
xor
push
cmp
jnp
dec
sub
pushf
movl
loopne
loop
imul
jle
test
les
test
xchg
out
dec
jb
stos
ljmp
shrb
roll
jle
adc
inc
aas
dec
inc
loop
iret
mov
in
xor
pop
ret
mov
dec
test
loopne
data16
fcmove
inc
xor
xor
mov
lret
sbb
fnstsw
loope
mov
test
mov
movsb
iret
adc
jmp
xor
dec
nop
mov
adc
mov
rcll
or
out
jo
sbb
adc
lods
and
movsl
pop
add
std
lcall
pop
daa
cmp
std
inc
daa
sbb
mov
outsb
dec
pop
sarb
rorl
imul
xor
cmc
and
test
xchg
xchg
in
lret
and
xchg
xchg
je
pop
pusha
mov
sbb
xor
push
loopne
fstpl
lods
dec
push
fbstp
pop
sbb
repnz
sub
and
xor
ret
aam
pop
pop
sub
loop
pop
xchg
mov
in
sbb
mov
and
pop
or
popf
fwait
dec
jge
subb
cmpsb
jle
lcall
lods
stos
adc
into
xchg
pushf
push
negl
pop
mov
jns
sub
mov
dec
je
xchg
mov
gs
sub
xor
mov
push
sub
push
rcll
rol
inc
inc
loope
mov
inc
jae
popa
js
fidivrl
test
testl
dec
mov
cmpsb
adcl
xchg
shrb
sbb
call
lock
inc
call
popa
je
adc
test
je
shll
pop
movsb
cmp
mov
mov
pop
push
repz
fsubr
inc
fnstcw
or
xor
xor
mov
aam
stos
rcl
or
adc
sub
imul
sub
push
jmp
mov
mov
sub
cmp
push
xor
hlt
lds
dec
lds
sahf
mov
sub
adc
mov
jecxz
jo
sbb
mov
fistpl
mov
imul
int3
test
outsl
xchg
cmp
or
aaa
sarb
xchg
xchg
sbb
mov
jns
push
stc
push
push
cmpb
jg
ret
mov
orl
xchg
xchg
jae
add
cmp
jle
push
inc
pop
mov
mov
sbb
jno
push
data16
shrb
adc
or
sahf
mov
inc
ret
mov
cmc
iret
inc
mov
mov
inc
test
mov
nop
lret
and
push
cmp
loop
into
outsl
pop
xor
daa
pextrw
mov
loope
pop
jp
addl
mov
bound
dec
mov
fistpl
push
xor
sbb
sub
icebp
fwait
inc
in
and
xor
pop
xchg
and
iret
mov
inc
clc
mov
in
stc
inc
fs
fstpl
cmp
pushf
lock
sbb
call
popf
sub
dec
sub
pop
movsl
xlat
cmp
mov
aaa
fisubl
imul
std
imul
xor
in
xchg
fwait
sti
jo
call
popa
mov
mov
xor
dec
ret
push
shll
xor
ja
sbb
in
sbb
daa
cmpb
push
mov
mov
outsb
inc
insb
pop
add
ja
leave
sti
add
mov
addr16
sti
xchg
sbb
or
push
fdivp
dec
sbb
pop
or
dec
ficomps
xor
test
push
insb
sti
outsb
in
out
add
inc
shll
iret
push
mov
sub
jg
xchg
mov
adc
testb
and
sub
pushf
pop
fprem
xchg
shrb
in
in
jge
mov
rclb
mov
mov
popf
scas
pop
cmp
xor
lcall
cmp
ja
mov
jmp
aam
lret
js
call
push
xchg
andl
lcall
and
xor
adc
xor
imul
and
inc
stos
jae
xor
pop
sbb
mov
mov
pusha
push
or
call
das
mov
rol
ret
jb
sub
sbbb
dec
dec
js
lods
mov
imul
rorb
fdivl
and
aam
push
cmp
push
dec
push
jb
imul
xor
das
push
jmp
rclb
push
sbb
popf
sub
pop
fstpt
mov
or
repnz
cwtl
ret
inc
lcall
imul
test
dec
xchg
inc
cmc
pop
aad
fld
ret
inc
test
js
bound
xlat
pop
push
add
cmp
mov
sbb
imul
cmp
jo
push
aam
push
aad
and
xor
xchg
mov
and
ljmp
jae
xchg
jne
dec
in
adc
adcb
subb
push
or
aam
out
popa
cmp
dec
leave
sbb
fidivl
lea
dec
out
and
loop
cltd
fcomps
iret
dec
stos
sbb
and
dec
mov
faddl
inc
ss
inc
enter
notb
arpl
pop
xor
cmp
jg
movsb
lods
mov
out
lods
movsl
lret
test
enter
loope
ss
xor
rorb
xchg
jecxz
fcompl
out
xor
or
xchg
mov
dec
xlat
lret
mov
sub
hlt
cmp
pushf
mov
inc
shlb
leave
push
fisubrs
xchg
ds
pop
jb
insb
lods
mov
lahf
shll
dec
inc
ljmp
mov
sub
cld
lods
mov
inc
ss
test
loope
mov
fsubrl
lret
dec
sub
fwait
sbb
aas
mov
sarb
bound
js
into
xchg
cmp
and
xor
fld
ja
or
sub
enter
jp
xor
dec
inc
mov
fs
arpl
inc
xor
jmp
std
test
xchg
mov
aas
setne
lods
into
sub
out
rcll
in
mov
mov
adc
test
or
loop
cli
dec
push
pop
stos
cwtl
inc
jp
sub
and
mov
test
out
or
cmp
mov
xor
xor
int
sub
and
mov
push
cwtl
insb
es
rolb
sub
xor
cwtl
cmpsl
mov
outsb
xor
push
mov
inc
and
xor
cmpsl
mov
sbb
ja
lcall
push
fisttpll
popa
mov
test
sub
mov
or
and
jo
cmc
dec
cwtl
xor
add
pop
ficoml
addl
pop
sub
mov
cmp
rcll
pop
repz
sub
js
add
imul
dec
pushf
jbe
mov
ds
sub
pop
icebp
ret
cmp
adcb
jno
jmp
ss
cmp
clc
insl
popf
lea
dec
stos
fs
sahf
int
inc
or
scas
mov
jae
adc
jbe
incb
pop
fistl
pushf
ja
stos
pop
mov
mov
das
dec
mov
in
adc
sub
xor
ljmp
pushf
test
fadds
cmpsb
sub
leave
cltd
sti
cmp
add
lret
mov
mov
sti
add
in
shlb
cmpsl
jb
lea
lods
pop
mov
fiaddl
ja
int
test
aaa
sbb
cmpsl
add
popa
push
ror
cltd
mov
mov
add
lret
mov
xor
fs
xchg
sbb
insl
push
mov
dec
jge
jo
push
icebp
ret
dec
jbe
jl
pushf
fdivl
adc
mov
pop
push
xor
jmp
mov
or
adc
adc
cmp
and
arpl
adc
pop
mov
lcall
loop
jmp
pop
adc
adc
test
jmp
divl
push
cmp
enter
pop
or
aad
stc
js
insb
mov
add
mov
mov
or
dec
enter
jg
les
adcl
lea
mov
les
lock
aas
in
rcrl
cmp
bound
mov
add
sahf
loop
lds
adc
push
sbb
out
jecxz
xor
fiaddl
xor
push
jo
test
movsb
sbb
lods
dec
mov
lahf
pop
sub
testb
push
mov
aad
add
ljmp
imul
jle
mov
and
sbb
das
outsb
insb
sub
hlt
jmp
movsl
loope
xchg
fmull
aad
pop
dec
incb
es
xrelease
push
cmp
movsb
mov
add
aad
and
lock
sbb
mov
ljmp
rcrl
icebp
test
jnp
idiv
jmp
mov
add
arpl
jle
mov
xchg
dec
cmpsb
inc
dec
cld
mov
pop
add
mov
xchg
cli
push
xor
adc
shll
cmp
int
adc
jecxz
bound
repz
and
xchg
sbb
incb
mov
mov
sahf
scas
les
repz
pop
out
lret
xchg
sbb
inc
dec
lahf
xlat
int
pop
ds
cmp
adc
lcall
add
mov
and
pop
inc
mov
sub
or
ja
shld
mov
loop
sti
test
jg
jecxz
adc
test
xchg
mov
icebp
and
inc
mov
or
test
push
cmp
inc
mov
mov
push
mov
xor
xor
in
cmp
mov
and
movsb
stos
xchg
push
pop
push
scas
adc
pushf
push
out
cmpsb
adc
mov
sub
int
mov
pop
pop
xor
push
popa
xlat
sub
js
ficoml
or
cmp
mov
js,pn
dec
fcmovnu
mov
pop
loopne
jp
sbb
cld
sbb
daa
push
jae
cmp
add
sahf
ret
push
mov
mov
mov
pop
sarb
xor
mov
sbb
ja,pt
sbb
jns
inc
das
sub
pop
jge
cmpsb
push
pop
stos
cs
imul
or
inc
add
adc
test
into
jge
gs
sarb
ja
mov
sbb
push
lock
adc
xchg
out
and
insl
ss
clc
mov
rcr
cmove
mov
or
test
out
jnp
test
mov
ljmp
bound
enter
ss
incb
pusha
sti
mov
jnp
adc
not
adc
adc
ja
ret
fistps
fs
fwait
pop
insl
scas
aas
adc
fs
into
inc
out
cmp
xchg
rorl
leave
cld
fstpt
fidivs
add
cmc
sbb
decb
adc
push
addr16
push
dec
adc
lret
mov
or
sub
or
sbb
inc
jmp
mov
je
push
pop
loope
shlb
filds
scas
in
xchg
xchg
lods
and
adc
pushf
pop
lahf
xlat
lds
out
daa
xor
loope
or
xor
and
adc
mov
mov
mov
mov
fcoms
test
fidivs
xor
jl
mov
pusha
ret
or
adc
pusha
jmp
sbb
lahf
movsl
test
jmp
lahf
arpl
pop
aam
imul
fcoms
mov
mov
pusha
cltd
ss
stos
lods
and
mov
jmp
jns
dec
pop
or
in
imulb
das
lea
mov
jmp
adc
mov
fwait
and
aad
sbb
sbb
ret
ffree
arpl
fs
and
xchg
add
sbb
sub
roll
clc
xchg
scas
lds
movsb
sub
xchg
sti
enter
hlt
mov
mov
cld
adc
or
mov
int3
adc
push
dec
and
mov
inc
adc
frstor
jge
movb
jb
jae
xor
dec
push
inc
jns
mov
std
mov
loope
xor
lods
icebp
adc
decl
jmp
or
loopne
cmovne
dec
fcomps
and
adc
inc
sbb
pop
pop
imul
cli
testb
cmp
or
notl
lds
cmpsb
jmp
jns
mov
pushf
jge
into
or
ss
mov
pop
mov
push
push
mov
pop
popa
and
int
imul
aas
sub
add
xchg
rcll
adc
sarl
popa
int
jns
mov
push
pop
daa
cwtl
push
lahf
stos
pop
outsl
cmpsb
and
xchg
cmp
jmp
dec
shlb
stc
mov
adc
or
popf
loope
xchg
jmp
lcall
and
test
dec
popa
jge
push
inc
jb
inc
hlt
mov
xchg
mov
push
pop
sub
xchg
adc
nop
mov
pause
mov
fbstp
push
xchg
loopne
setns
subb
cmp
scas
loopne
mov
fildl
adc
jle
adc
out
in
pavgw
and
xchg
bound
sbb
or
psrad
jne
or
pop
pop
dec
pop
and
dec
fidivrl
addl
cmp
lret
push
pop
jb
sub
jnp
sub
pusha
lea
xchg
pushf
stos
lods
dec
les
xchg
shll
xlat
imul
pop
fistl
dec
scas
mov
out
imul
out
or
add
cmp
int3
and
pushf
xchg
scas
add
dec
sbb
iret
lcall
jl
add
xchg
test
push
push
mov
aam
inc
jae
cmp
mov
jecxz
or
fwait
jb
lcall
aam
push
mov
mov
xor
addr16
nop
test
jecxz
mov
push
fdivp
pop
xor
mov
xchg
repnz
stos
jne
or
insb
sub
mov
and
and
call
outsl
mov
sub
adc
push
adc
pop
push
jp
fs
lds
mov
js
xor
add
mov
jge
mov
mov
xchg
daa
popa
or
pop
sub
aam
mov
push
sub
fdivrs
aam
lret
gs
je
jbe
popf
clc
popa
cli
inc
cmp
add
ret
cltd
cmp
jl
cwtl
cwtl
int3
lcall
adc
jle
sub
sub
sbb
les
lret
jns
imul
inc
mov
xchg
adc
adc
incb
fdivs
into
lret
add
sub
xor
imul
jge
dec
xchg
pop
addl
pusha
loop
mov
sahf
jns
or
call
jp
movsl
bound
push
mov
add
jp
pop
jnp
and
push
fwait
sub
in
andl
or
xchg
faddl
mov
mov
xchg
aad
fninit
push
mov
enter
jmp
dec
shrb
xor
insb
adc
outsb
cmpsb
int3
scas
das
lea
pop
cli
ret
lcall
pop
orb
jl
inc
jno
lret
cmp
xchg
jge
cld
push
fs
rorb
rorl
dec
cltd
dec
int3
xchg
pop
push
push
cmpsl
lahf
shll
cli
sub
fbld
adc
add
push
gs
or
dec
xchg
rorl
and
outsb
inc
icebp
mov
jo
ret
mov
xchg
cwtl
fwait
dec
xchg
faddl
dec
stos
testl
xchg
push
out
out
lods
arpl
add
and
decl
pop
dec
mov
and
arpl
pusha
int
and
movsb
jle
jg
das
push
mov
repnz
cmc
test
sar
arpl
pop
nop
dec
pop
mov
add
mov
aaa
aaa
inc
xchg
xor
das
sti
inc
push
xchg
clc
ss
mov
lds
dec
mov
jp
push
rorb
scas
push
scas
fmull
sbb
cltd
xchg
lahf
pushf
pushf
jg
or
mov
xchg
into
cmpsb
add
sbb
leave
pop
ret
scas
mov
jae
xchg
add
lods
fucomip
xor
in
aad
pop
in
pop
movsl
adc
aas
dec
and
dec
outsl
dec
push
clc
jno
lret
xchg
xchg
test
ret
inc
outsb
cld
xlat
icebp
in
insl
mov
pop
out
ret
movsl
or
loope
adc
mulps
xchg
jmp
out
jo
lret
je
nop
sbb
xchg
or
inc
test
mov
syscall
inc
in
push
std
pop
scas
movl
test
enter
outsb
mov
inc
push
pop
insb
xor
fwait
orl
and
fildll
shrb
mov
add
xor
cli
ljmp
ja
int3
sbb
outsl
mov
in
cmp
js
pop
js
aaa
bswap
es
pushf
add
dec
pop
lcall
add
push
scas
in
xchg
mov
loope
push
inc
or
jge
mov
pop
fsub
popf
scas
arpl
mov
mov
adc
adc
inc
cmp
iret
push
mov
add
fwait
pop
add
push
jmp
jae
clc
mov
dec
lock
call
mov
dec
lock
adc
insl
call
cmpsb
movsl
pop
sub
out
mov
aad
lahf
mov
scas
xchg
cmp
fiaddl
dec
std
cltd
ret
and
mov
jle
cmp
push
xor
pushf
loop
fwait
dec
sbb
ficoml
mov
mov
neg
mov
call
cmp
pop
fcompl
idivb
xor
subb
movsw
sub
xchg
dec
movsl
cmp
movsl
sub
aad
xor
dec
insl
sbb
rorb
les
andb
mov
les
dec
test
and
pop
loope
dec
outsl
popa
call
retw
lock
sub
push
sbb
push
cmp
jl
sub
lock
mov
push
cmc
popf
sbb
repz
imul
pop
mov
gs
adc
nop
jns
ds
stc
pop
jecxz
std
cmp
and
mov
pop
push
into
dec
jnp
mov
mov
icebp
push
cmp
adc
ss
hlt
fsubl
jne
push
call
xor
sbb
cmpb
lahf
adc
jnp
mov
adc
jne
cmp
jmp
xor
dec
inc
adc
xor
lds
dec
ret
or
or
cmp
aad
cmpsb
fldcw
pop
nop
clc
adc
add
mov
aas
jno
in
icebp
aas
fsubrl
dec
rcrl
push
aam
cmpsl
lods
inc
xor
pop
sbb
test
mov
lret
mov
push
push
xchg
adcb
jp
jno
cmpb
mov
jo
mov
and
xchg
dec
sbb
imulb
sub
xchg
cmp
inc
pop
ret
adc
pushf
push
sbb
popa
clc
ja
add
mov
mov
push
fs
cmp
dec
jno
xchg
shl
std
out
xor
sarl
movsl
push
mov
inc
shrb
and
dec
inc
mov
cltd
ret
cmp
lcall
xchg
add
mov
xor
addl
inc
mov
push
pop
hlt
inc
out
shl
mov
cld
push
insl
jnp
or
pop
dec
sbb
outsl
cmp
lock
loope
xchg
adc
mov
push
push
sti
movsb
cs
ss
cld
sub
fwait
ja
fiadds
push
mov
and
push
inc
pushf
push
lock
cmpsb
enter
dec
js
mov
and
mov
fwait
push
pushf
xchg
mov
dec
mov
ja
pop
lret
call
push
out
daa
inc
mov
aaa
xor
jae
out
leave
pop
sub
or
stc
call
sbb
mov
fwait
and
data16
nop
xchg
ret
or
xchg
stos
sub
popa
add
sbb
mov
sub
ficompl
loopne
add
mov
stos
sbbl
push
pop
xor
xchg
ret
lods
in
mov
jbe
mov
jle
push
lock
sub
loope
dec
add
adc
pusha
xchg
pop
pop
lods
fldl
mov
das
shll
out
pop
out
loopne
and
inc
push
and
cld
xchg
imul
pop
dec
insb
pop
lret
xchg
pop
repz
dec
sbb
dec
mov
pop
into
popf
sbb
jo
sahf
mov
je
pop
jnp
mov
lret
inc
pop
xor
sub
test
loope
mov
and
or
call
pop
push
push
and
cmp
mov
and
or
js
fdivrl
insl
shl
les
push
shll
jmp
cli
outsb
nop
psrad
xchg
addr16
nop
nop
xchg
daa
mov
ret
and
xchg
or
imul
sbb
cmp
andb
mov
lret
lock
sbb
data16
jl
adc
jg
imul
in
jg
and
int3
add
fs
stos
cmp
mov
out
mov
ror
daa
mov
gs
jne
add
test
les
mov
scas
loope
out
and
sub
test
add
cmp
mov
mov
push
sbb
xchg
enter
test
js
clc
xchg
dec
jb
shrl
add
fildll
call
pop
gs
inc
ljmp
iret
or
out
adc
fcomi
icebp
lock
jnp
dec
lock
cmp
lods
andl
pop
clc
cmp
test
lea
pop
divl
pop
add
popa
stc
pop
adc
mov
mov
mov
mov
inc
in
inc
cld
bound
xor
addr16
out
fisubl
out
adc
xchg
adc
push
mov
xor
neg
mov
adc
cmp
in
or
out
xchg
push
fistpl
cmc
aam
ja
imul
and
xchg
or
imul
inc
dec
xchg
pop
rcrl
frstor
dec
pop
mov
jo
or
dec
lret
mov
cltd
add
push
mov
add
jge
enter
push
cmpsl
test
loope
cltd
jnp
cmp
shr
pxor
cmp
xchg
jbe
sub
rorl
xchg
push
scas
aas
arpl
pop
mov
pop
jl
movsb
sub
test
xor
cmp
cmp
es
mov
mov
adc
loop
test
fwait
cmp
call
iret
pop
hlt
push
mov
out
pushf
adc
mov
sub
dec
jle
std
sub
int3
dec
mov
xor
clc
test
push
add
mov
inc
sbb
or
and
cmpsl
pop
pop
mov
shll
cmp
dec
aas
int3
adc
outsb
mov
mov
sub
repnz
mov
mov
push
fdivl
inc
push
aaa
insb
xor
insb
pop
cltd
je
cs
out
dec
gs
jb
ret
mov
call
cwtl
adc
mov
test
adc
js
popf
dec
mov
test
aam
or
stc
add
fidivrs
test
mov
add
imul
fnstenv
das
adc
movsb
inc
das
adc
add
push
jl
lea
mov
jecxz
dec
imul
xchg
repz
add
or
out
imul
sahf
xor
mov
pushf
adc
test
mov
mov
sahf
pop
xchg
sub
aaa
aas
aas
movsl
in
adc
push
push
mov
hlt
pop
add
insb
xchg
das
aad
loop
ja
mov
push
fmul
mov
and
push
scas
mov
mov
jo
adc
inc
mov
jae
sbb
arpl
fcompl
xchg
xchg
sbb
xchg
mov
ljmp
add
push
jg
xchg
leave
addl
inc
and
mov
cmp
pop
jmp
pop
jns
adc
out
lret
ja
aaa
mov
loopne
adc
roll
jne
int
fbstp
fnstsw
out
movsl
dec
inc
mov
push
cmp
in
hlt
cmp
cmp
inc
outsl
dec
mov
inc
add
mov
push
in
aad
cmpsb
fwait
rcrl
ja
and
sbb
cltd
mulb
adc
sbb
out
les
dec
mov
vpunpckhbw
aad
cmpsl
cmp
lret
dec
cmpb
add
xorl
add
jb
add
pop
dec
push
stc
daa
sbb
inc
sti
sbb
cltd
dec
or
jecxz
jmp
pop
rcrb
sub
push
stos
fbstp
adc
fstpt
mov
aad
mov
cmp
pop
mov
cmp
lock
jo
and
movsl
scas
aad
es
or
xor
das
cmpsb
or
stc
out
xor
repnz
imul
inc
inc
lock
or
xor
push
push
repz
arpl
psrlw
cmp
xchg
sub
addr16
add
imul
cmp
or
add
jl
sub
pop
rol
push
lods
dec
add
jo
std
push
ret
cmp
rolb
jecxz
xchg
push
pop
iret
lods
push
lea
xchg
ja
add
add
xor
mov
xlat
inc
inc
repnz
movsb
les
mov
scas
insl
pushf
dec
cmc
ss
add
enter
imul
cmc
sbb
lret
movsb
mov
cltd
or
rcr
aad
idivb
les
aas
jle
repz
pop
movl
scas
xlat
jnp
or
adc
or
fistpl
pop
or
ret
and
push
sub
adc
xchg
ret
ljmp
cmp
mov
push
pushf
xchg
xchg
mov
xorl
sbb
and
fwait
in
cli
std
add
mov
call
stos
adc
pop
xorb
notb
jb
aas
jnp
mov
outsl
mov
out
jecxz
push
popf
cmc
xor
mov
pop
mov
imul
cwtl
xchg
addr16
out
imul
ja
movsl
sti
popf
push
mov
cld
mov
idivb
cmp
cltd
pop
mov
and
testb
jl
or
or
mov
xlat
push
dec
push
mov
sbbb
jp
aas
xor
mov
mov
mov
pop
push
mov
dec
xlat
and
call
mov
sub
mov
pop
outsl
push
dec
lods
ret
mov
movb
xchg
push
add
adc
das
sarl
inc
bound
shll
iret
adc
scas
sub
mov
ljmp
pop
fcomps
adc
jo
cmc
adc
mov
std
mov
sbb
outsl
mov
std
pop
in
push
negl
negb
outsl
pop
ds
leave
in
lods
fdivrs
push
test
es
test
add
inc
iret
iret
test
push
sub
pop
cmp
in
out
cmp
outsl
scas
or
cli
bound
xor
dec
test
jb
aad
jg
cmp
xor
inc
xchg
mov
jne
sahf
jmp
into
stos
insb
dec
pushw
sub
xor
push
fs
mov
pop
out
gs
jecxz
ss
sbb
mov
stc
divb
and
fwait
ret
dec
dec
in
jge
push
add
add
cmpsb
mov
aaa
aad
stos
test
pop
lahf
and
lock
sbb
mov
fdivrs
aad
sub
lods
cmc
mov
fs
pop
or
adc
add
mov
sbbl
cld
scas
scas
hlt
push
sub
dec
pop
xchg
std
lcall
adc
dec
idivb
cmpsl
xchg
jae
sub
push
test
les
push
sbb
and
lock
test
mov
cli
cltd
test
and
dec
outsb
push
std
pop
cli
aaa
das
into
cmpsb
ja
mov
mov
daa
dec
sbb
in
adc
fsub
sbb
std
loope
dec
fsubr
lret
inc
pop
imul
arpl
jne
cltd
xchg
idivb
xchg
push
bound
lea
jp
orb
sub
sub
mov
stos
dec
mov
sbb
ret
sbb
sbb
gs
sub
enter
popf
loop
dec
cmp
lahf
aaa
push
xor
pop
adc
lods
data16
xchg
dec
pop
jmp
in
add
cmp
push
pop
mov
mov
sub
jmp
daa
icebp
pop
lret
adc
jle
rcr
mov
loope
pop
loopne
add
fs
adc
lods
push
lods
rcrb
jne
mov
push
daa
scas
xchg
aaa
lea
mov
sub
out
lret
sbb
neg
xchg
fistps
cmpsl
movsb
pop
dec
xor
dec
pop
out
pop
dec
xchg
pop
push
in
xchg
sahf
cmpsb
mov
aam
mov
push
pop
xor
clc
adc
xchg
repnz
or
adc
pop
adc
mov
sub
push
stos
mov
addr16
daa
fcomp
mov
mov
out
or
sbb
cmpsb
in
rcrb
daa
xchg
mov
sbb
shll
lods
cmp
mov
or
subb
add
ret
repz
xor
arpl
leave
cmp
pop
sub
jns
sub
mov
sbb
out
jle
adc
lock
sarb
imul
jle
dec
xor
ss
xor
cmp
pop
push
adc
sbb
dec
mov
xor
inc
notl
cmp
dec
lods
pop
insl
hlt
sub
push
pop
je
stc
dec
push
or
imul
ljmp
lret
cld
pop
insb
jb
lea
push
loop
lds
pop
mov
inc
mov
popa
xchg
ret
flds
push
ret
ds
sbb
lds
std
jae
decl
jno
int
push
mov
inc
test
jns
push
mov
popf
sub
cld
pop
adc
insb
pop
xor
insl
xor
pop
jmp
outsl
mov
jge
pop
test
jmp
xor
pop
jmp
mov
gs
ss
sbbb
dec
mov
daa
sbb
push
cmp
cmp
ljmp
mulb
jg
lea
jb
dec
scas
adc
rolb
push
ret
mov
fs
or
pushf
mov
cld
xchg
adc
fildl
mov
pop
roll
jnp
sarb
mov
movsb
cmp
xchg
xchg
lcall
add
fdivrl
sbb
repnz
in
cli
int3
add
aaa
and
daa
stos
xor
mov
cmpsb
dec
mov
rolb
or
lods
in
rcr
xchg
out
sub
mov
pop
andl
adcl
test
clc
add
xor
lret
in
lea
dec
lea
xchg
or
cmpsl
add
ret
fptan
cmp
or
hlt
dec
data16
push
cmp
jne
das
jp
cwtl
sti
testb
stos
clc
xchg
xor
mov
enter
repz
pop
bound
add
cs
xor
mov
neg
jg
clc
sub
cmc
cmp
inc
xchg
pop
xchg
pushf
shll
test
mov
ja
pushf
pop
dec
mov
mov
loopne
jge
pop
daa
xor
jne
test
inc
mov
popf
call
jmp
enter
inc
cld
enter
inc
cmp
imul
and
cmp
mull
rclb
xchg
fwait
xorl
daa
mov
xor
out
push
inc
popf
leave
lahf
pop
adc
rorb
lods
mull
sbb
daa
sbb
insb
mov
dec
incl
mov
mov
out
fcmovu
pushf
mov
int3
lods
xchg
push
ja
ret
stc
imul
jb
outsl
and
jge
sahf
ljmp
mov
icebp
jg
push
xchg
rorl
xlat
mov
push
ja
cmp
loope
or
shl
push
gs
dec
rcr
jg
or
stc
xor
cmpsb
xchg
mov
std
mov
dec
lret
popf
pop
shlb
push
popa
scas
dec
pop
in
pop
mov
jp
mov
aad
leave
fsubl
or
into
push
mov
in
mov
fsubs
sub
or
cli
dec
mov
icebp
in
add
repnz
imul
sub
push
xor
fcomi
addr16
mov
inc
loop
mov
inc
jmp
push
mov
aad
into
hlt
pop
jo
jle
and
push
clc
and
scas
cmc
js
xor
and
cwtl
dec
push
mov
pop
mov
shll
dec
jne
je
mov
pop
mov
repz
xchg
sub
sbb
stc
clc
mov
sbb
fwait
dec
aas
xor
cwtl
add
jae
inc
xor
xchg
pushl
push
mov
adc
aam
cwtl
loop
xchg
or
jne
pop
fstp
daa
cltd
mov
aas
fidivs
adcl
or
jnp
inc
dec
test
das
dec
es
jmp
iret
mov
push
ret
cs
mov
pop
daa
scas
cmpsb
fists
dec
mov
xchg
and
pop
ljmp
inc
fbld
fcomps
jecxz
mov
add
dec
inc
mov
and
dec
loope
aas
popf
hlt
dec
inc
mov
and
in
jp
mov
mov
adc
dec
cmpsl
icebp
xor
dec
push
cmpb
mov
xor
cmpsl
shlb
dec
jno
sbb
mov
xchg
or
test
sub
mov
or
dec
jmp
jmp
sub
jb
stc
icebp
ret
xor
or
cmp
add
mov
leave
mov
js
fs
xor
inc
mov
mov
std
rorl
ds
stos
rclb
mov
xchg
sub
repz
jp
push
mov
add
aaa
gs
dec
mov
cmp
cmp
jne
out
jmp
fnstcw
cltd
pop
xchg
loope
insl
mov
jo
dec
xchg
js
inc
push
and
pop
stos
add
insl
lcall
push
cmp
mov
fwait
xchg
imul
movb
cmp
xchg
push
mov
mov
sub
jne
insl
lea
xchg
and
mov
aad
sub
addr16
sbb
dec
sbb
dec
mov
sbb
inc
fdivr
or
fcoml
nop
adc
pop
push
jp
cmp
dec
jge
lods
xchg
lods
or
data16
xor
push
sbb
add
jg
mov
mov
addr16
jbe
adc
jp
cmpsl
add
xchg
aad
or
fdivl
xor
loope
mov
subb
sbb
cmc
imul
enter
jne
loope
jp
jle
aam
enter
jbe
test
inc
adc
movsb
inc
inc
cmp
cwtl
xor
sub
add
ret
xchg
inc
sub
xor
jl
cmp
push
add
jbe
push
pop
and
pop
imul
aaa
fistl
xor
outsb
sbb
jle
or
and
dec
aas
mov
test
aas
mov
test
mov
dec
pushf
add
xchg
lret
jmp
pandn
cld
orl
and
incb
je
mov
xchg
mov
mov
pop
dec
call
pop
xchg
mov
cmp
daa
xor
out
and
and
sti
in
xor
cmpsb
lds
lcall
mov
pop
or
leave
js
loope
outsb
rorb
cs
dec
push
add
xor
jmp
xchg
sbb
mov
dec
cmp
movsl
in
dec
pushl
or
and
cmp
sub
test
int3
pop
pop
dec
ss
push
int
insb
xorl
push
push
mov
in
scas
and
enter
movsl
ljmp
addr16
sbb
cli
cmpsl
or
fs
stos
inc
filds
jp
mov
sub
sbb
adc
mov
mov
lods
les
xlat
movsl
push
mov
xchg
sbb
or
pusha
cmp
subl
hlt
sub
jns
cmp
daa
ret
mov
arpl
shlb
arpl
pop
adc
dec
inc
inc
inc
ja
loope
lock
loope
dec
fisubs
add
cmp
lahf
xor
mov
mov
sub
mov
jo
add
lods
mov
sbb
movq
popa
push
push
mov
imul
pop
xchg
inc
dec
mov
sbb
mov
mov
je
xchg
fistl
jo
stc
mov
push
sub
jno
out
sbb
ret
pop
sti
push
rorl
jno
push
fmull
xchg
dec
ficoml
aam
imul
gs
mov
enter
loopne
gs
arpl
je
es
jg
pop
mov
mov
lds
sub
push
test
xor
shlb
sub
es
fadds
enter
fidivrs
push
sahf
inc
int
xchg
dec
adc
xchg
dec
pusha
hlt
int3
in
add
add
xlat
leave
jmp
out
in
or
or
jne
dec
stc
jecxz
mov
lock
je
jecxz
mov
fmuls
mov
cs
adc
arpl
inc
ror
stos
enter
outsl
push
mov
cmc
rcrb
or
adc
pop
xor
push
mov
iret
rcll
aad
sbb
dec
inc
mov
pop
sub
cmp
jp
adc
xlat
daa
cmpsb
mov
inc
add
gs
fsub
repnz
and
inc
or
jnp
out
jecxz
int3
xlat
jns
push
and
sub
jl
das
mov
stc
cwtl
jae
sub
push
shr
out
xchg
push
mov
fucomp
mov
cmp
xchg
les
mov
mov
add
mov
cmpsb
popa
cmp
inc
adc
adcb
fnstenv
adc
ret
ret
cmp
adc
sub
dec
nop
push
adc
lods
lds
jnp
stos
shll
int
inc
les
pushf
sub
adc
inc
aam
out
jnp
adc
lock
std
jns
xchg
mov
xchg
sub
push
clc
lock
inc
popa
lds
jecxz
clc
mov
mov
xchg
xor
mov
aaa
push
sub
push
lea
test
cmp
jl
ds
fistl
mov
mov
lds
out
jns
outsl
leave
stos
in
sbb
inc
pop
hlt
mov
outsb
pop
and
popf
push
lods
and
push
cmp
fcmovnbe
mov
lds
roll
je
and
ret
pop
sbb
and
xor
sbb
jmp
mov
loopne
sbb
insl
int
push
xor
adc
mov
cmpsb
dec
repz
push
jmp
inc
lcall
cmp
mov
lock
or
xor
sahf
dec
mov
cmpsb
cmp
pop
jnp
test
repnz
lret
insb
mov
dec
adc
jmp
sbb
insb
inc
notb
xor
pop
enter
mov
pop
lock
lahf
dec
jecxz
inc
mov
xor
adc
movsb
cld
xchg
lea
inc
pop
mov
mov
dec
lods
imul
addr16
pusha
push
lea
out
aas
xchg
lret
scas
push
jb
pop
das
mov
push
test
push
rcrb
lret
cmp
xchg
ret
mov
jbe
rcrl
cmp
pop
sub
aaa
cwtl
or
insb
aam
sbb
lcall
imul
pop
jns
push
in
mov
fisubl
pop
push
lahf
test
cli
adc
iret
and
or
int
push
sub
mov
mov
jbe
dec
fs
mov
add
add
mov
push
sahf
adc
clc
pop
loope
lret
pop
mov
push
xchg
lret
xchg
ffreep
adc
dec
pushw
jbe
push
arpl
jmp
dec
lods
dec
and
lcall
mov
dec
jmp
mov
xor
enter
pop
mov
and
aad
hlt
push
outsl
aam
push
sub
out
hlt
jno
pop
mov
sbb
js
add
leave
pushf
and
das
pop
movsl
in
das
mov
aad
jns
cmp
cwtl
jmp
jb
loopne
stc
into
jge
xor
adc
lods
and
jp
inc
lret
shrb
ss
add
sbb
cmpsl
pushf
into
fnstenv
sub
mov
sbb
push
add
fcoml
aad
out
inc
push
outsb
and
jb
movsl
call
push
cmp
pop
pop
iret
mov
es
fs
add
mov
add
push
test
insl
pop
popf
data16
mov
pop
mov
stos
fs
data16
dec
pop
or
fs
jmp
sahf
out
push
popa
cmpsb
or
stos
xchg
stos
or
insb
aad
cmc
mov
cmp
and
rcrl
shlb
fnstsw
mov
sub
stos
mov
aas
inc
push
pop
ss
bound
es
push
jae
cmpb
push
in
inc
movsl
mov
rcrb
cltd
adcb
push
sub
fisubs
jmp
insb
xchg
push
jne
push
mov
test
test
xor
test
repz
xor
sahf
add
dec
test
adc
jmp
sbb
mov
aam
enter
pop
roll
pop
adc
jne
cmpsb
subb
jmp
sbb
mov
repz
fs
cmp
sarl
xchg
inc
popa
popf
push
pop
pop
addr16
ret
gs
scas
lret
sbb
mov
test
jl
mov
adc
divb
lods
fldenv
adc
mov
pop
mov
jecxz
inc
xchg
jmp
movsb
call
addr16
rcrb
aam
jns
scas
test
in
fidivl
xor
push
mov
js
out
pop
in
into
jnp
pop
mov
dec
ror
xor
sub
jns
leave
and
psubsb
xor
leave
jg
push
cmp
xchg
sbb
call
ljmp
sbb
sbb
or
int3
mov
hlt
cltd
testl
mov
ret
lcall
mov
mov
xor
loop
aam
push
ficomps
mov
sbb
stc
xchg
imul
mov
push
repz
cmp
inc
iret
and
jp
lea
gs
test
or
mov
lods
or
push
xchg
dec
jg
dec
mov
jno
leave
int3
in
leave
pop
into
fmuls
xor
jae
cmp
push
or
aaa
add
adc
pop
addr16
popa
jl
xor
and
cmpsb
adc
cltd
icebp
cmc
jl
repz
jmp
pop
in
les
jne
es
sub
push
fwait
das
jg
mov
data16
dec
fs
daa
add
xor
mov
les
sub
mov
cmp
outsb
fwait
xchg
fldcw
je
addr16
ret
insl
cmp
dec
test
xchg
sahf
nop
sub
outsl
xchg
xchg
ss
rcll
frstor
mov
daa
mov
dec
mov
xlat
lahf
jno
cmpsb
pminsw
fistl
les
fs
ret
sti
fildll
add
or
mov
in
sub
mov
add
jne
xchg
fxch
enter
mov
fs
push
sub
cmp
push
repnz
mov
out
pop
or
cs
cld
loope
push
inc
jae
and
lock
sbb
test
fadds
sbb
fiaddl
in
xor
bound
adc
xchg
leave
imul
repz
cmp
test
insb
roll
lahf
xchg
push
and
xor
cmp
daa
stos
das
es
insl
stos
xchg
shrl
iret
push
into
mov
jl
sbb
lock
gs
xchg
pop
dec
movsb
push
mov
sahf
sub
add
test
cwtl
imul
xlat
fwait
mov
cmpsl
ds
fmull
lret
je
dec
movsl
push
xchg
shll
sub
mov
lock
jl
mov
sbb
das
jne
add
ficomps
cmp
js
data16
dec
cmpsl
push
cmpsb
mov
jp
loopne
shrb
bound
sbb
ret
sbb
adc
stos
sbb
jno
test
in
cmp
roll
and
sbb
aas
mov
loop
pop
aas
outsl
mov
fadd
xchg
mul
push
aaa
test
out
adc
sahf
movsl
std
add
pop
cmp
insl
cmc
cmpb
out
inc
xor
sub
jno
jne
push
sub
fsincos
scas
loopne
jno
adc
mov
cmpsl
cmc
clc
mov
adcl
mov
fsubr
fs
pop
pushf
mov
rcl
flds
decb
xor
mov
lock
or
out
and
in
jp
std
in
xor
xor
dec
mov
or
dec
cli
mov
adc
or
gs
mov
mov
test
cli
sub
fmul
mov
xchg
mov
xchg
jo
aaa
xchg
insl
fisttps
test
xor
jmp
xor
cli
mov
add
int3
add
push
jo
shl
aad
sahf
cmp
mov
sti
inc
mov
add
xchg
xchg
inc
aam
shr
lret
stos
call
aad
pusha
push
in
dec
cmpsl
scas
mov
hlt
das
or
or
loopne
mov
daa
mov
fwait
mov
sub
mov
mov
test
scas
enter
in
imul
xor
das
xchg
scas
jecxz
rcl
aas
addr16
sub
xor
push
or
movhps
push
sub
mov
mov
cld
adcb
rcl
out
mov
sbb
pusha
pop
je
cmp
mov
xorl
add
add
push
imul
and
nop
push
mov
in
int3
pop
in
mov
pop
mov
js
hlt
scas
ret
shll
ja
ljmp
stos
inc
cmp
adc
cmc
or
ja
divb
aam
adc
sahf
and
mov
imul
cs
mov
cmc
scas
fdiv
jl
jbe
lods
stos
ret
adc
push
fwait
mov
ds
shlb
dec
out
xor
aam
pop
ffree
xor
faddl
mov
xor
dec
mov
push
vphsubdq
int3
xchg
gs
sahf
xchg
lock
call
hlt
xchg
dec
lods
arpl
mov
push
xlat
xchg
pop
adc
cmp
les
push
and
je
je
cld
mov
sub
xchg
cltd
mov
ja
imul
out
clc
adc
and
cli
sti
pop
scas
push
addb
pop
mov
insl
rol
dec
inc
movsb
push
push
xchg
cld
jno
fistpll
fcmovb
and
lahf
ja
into
sub
pop
fwait
dec
leave
push
subps
test
jns
mov
and
jmp
jp
push
sbb
loope
push
mov
or
in
cmc
inc
in
ljmp
inc
call
data16
je
hlt
inc
sbb
bnd
in
pop
and
xchg
imul
loope
pop
icebp
inc
cli
push
roll
add
mov
mov
pop
pushw
sub
inc
outsl
or
mov
pop
dec
mov
mov
loopne
stc
cli
icebp
fwait
inc
bound
or
popa
jg
lock
mov
dec
test
ret
jmp
lahf
and
clc
ret
arpl
inc
stos
push
aad
insb
add
or
pop
mov
stos
sahf
xor
sbb
into
ja
sbb
cmpsb
cld
shufps
cwtl
in
push
data16
jecxz
sbb
arpl
orb
sbb
dec
decb
mov
loop
pop
xorl
nop
add
iret
test
arpl
into
sub
enter
jnp
jb
pop
out
int
or
or
sub
jmp
scas
in
mov
cltd
mov
push
mov
cwtl
mov
pushw
xor
fwait
jmp
rolb
push
mov
outsl
aam
xchg
jo
mov
pusha
dec
jnp
roll
aaa
test
fidivrs
lock
nop
and
mov
push
sti
in
mov
leave
and
lret
xor
and
push
sbb
cmp
xchg
test
sbb
pushf
xor
or
xchg
into
pop
les
jne
pop
mov
fnstcw
sbbl
or
adc
push
mov
out
ljmp
push
mov
mov
pop
rcl
lret
loopne
cld
ljmp
mov
jmp
dec
dec
pop
test
std
adc
insb
jge
mov
push
push
jle
fs
lds
mov
xchg
or
push
lea
jno
js
mov
sub
fdivp
mov
aaa
cmp
popf
inc
xor
mov
lods
sbb
mov
mov
push
add
mov
push
dec
push
add
addr16
sbb
push
and
push
add
xor
mov
pop
pop
sbb
aad
add
fildl
add
xchg
or
ljmp
lods
sbb
fsub
fdivp
cmp
lock
gs
sub
addr16
dec
testb
or
mov
es
test
xchg
dec
push
inc
or
mov
insl
inc
push
mov
push
adcb
jmp
xor
divb
mov
push
arpl
push
nop
mov
fidivrl
rcr
and
shl
mov
sub
xor
shl
fdivrl
movl
lock
cs
pop
sub
add
lock
subb
xchg
and
dec
dec
dec
les
or
stos
mov
bound
push
pop
mov
mov
xchg
sub
scas
pusha
cmp
and
js
aas
scas
push
in
push
xor
mov
inc
int
enter
mov
pop
es
jp
mov
xorl
push
mov
enter
stc
iret
repz
fcmovnb
fdivr
ror
xchg
std
mov
in
std
dec
hlt
xor
int
clc
das
jb
addr16
int
dec
xchg
stos
aam
fistpll
addb
mov
adc
aaa
mov
sub
jno
das
inc
mov
popa
mov
pop
mov
hlt
push
xor
inc
add
xchg
push
aad
js
lds
mov
data16
push
sbb
movl
out
test
xchg
cwtl
mov
jge
mov
sbb
sub
test
arpl
cltd
icebp
shll
ret
out
cs
cwtl
sbb
jo
es
sbb
shll
sub
xchg
into
or
and
xor
jle
test
js
jno
pop
call
push
sub
xlat
add
loope
lock
mov
and
mov
mov
jge
repnz
pop
sbb
cmpsb
or
out
jnp
xlat
cld
or
adc
clc
out
addb
test
outsl
insl
cmp
adc
aaa
ja
and
lahf
push
out
lahf
arpl
push
repnz
pminub
sbb
pop
jnp
loop
mov
sbb
movaps
in
jo
xchg
mov
inc
lret
in
outsl
popa
aam
loope
sbb
mov
dec
or
mov
adc
rcrl
stos
loopne
or
les
adc
stc
add
push
insb
js
xor
sub
xor
cmc
xlat
loop
inc
or
lcall
movsb
jle
or
mov
lahf
mov
jnp
jno
hlt
js
sub
out
cmp
mov
or
fldt
cmp
mov
inc
clc
cmp
in
clc
lea
and
push
scas
out
jmp
inc
jle
adc
cmp
pop
xor
push
mov
popf
adc
add
test
and
andb
push
shlb
sub
aam
push
mov
in
js
xchg
lods
ss
mov
xchg
es
jge
push
out
daa
pushf
das
das
scas
rorl
xor
test
mov
pop
pop
pushf
cmc
repz
xlat
je
push
mov
cltd
out
push
lods
sub
lods
jae
cmp
jo
sub
jle
aam
mov
and
add
pop
inc
xlat
xchg
add
out
movsl
xchg
lea
in
nop
mov
stos
xor
pop
sub
add
rcrl
sahf
xor
sbb
ss
hlt
fisttpl
jno
inc
popa
data16
mov
mov
push
lcall
clc
fldt
arpl
mov
outsb
xchg
push
fs
aas
jns
xchg
pop
jne
insb
out
lods
xchg
sub
xchg
sti
pop
add
inc
sbb
mov
cmpsl
adc
cmp
cmpsb
pop
sub
push
push
push
mov
dec
push
or
std
fcoms
jnp
pop
fsubr
addr16
jnp
ja
pusha
mov
ret
mov
stc
ret
or
add
inc
lods
inc
movsl
in
cmp
jl
test
call
pop
arpl
add
in
pop
std
push
roll
mov
xchg
imul
push
inc
xor
ret
les
data16
adc
call
adc
mov
mov
bound
in
les
inc
fsubl
test
adc
xchg
mov
and
or
pop
inc
testb
sbb
icebp
dec
xchg
xor
cmp
mov
inc
clc
je
rcrl
push
mov
mov
mov
loop
push
jns
dec
shll
mov
mov
push
jbe
or
mov
mov
leave
or
or
mov
xchg
scas
out
adc
das
sbb
insb
push
int3
lea
mov
iret
ret
jns
insl
out
das
cltd
rorl
pop
sub
push
shl
ficompl
pop
mov
mov
push
repz
ror
xor
addl
imul
dec
pop
and
arpl
xorb
xchg
insl
imul
inc
jge
push
mov
mov
and
xor
je
lahf
pop
ljmp
mov
out
ret
push
cmp
xchg
jb
aaa
mov
leave
jecxz
fimuls
cmp
push
mov
xchg
sti
in
cmpsl
pop
daa
mov
mov
sub
lahf
push
stc
es
loope
pop
jl
int
stc
ret
iret
std
sbb
jne
and
sahf
cmc
incl
adc
jno
sahf
lods
sub
xchg
ljmp
xor
inc
repz
adc
clc
popf
bound
mov
scas
cwtl
mov
imul
jmp
femms
loope
xor
jno
stc
aad
mov
popf
add
jle
fcoml
lods
loopne
add
pop
ja
inc
int3
das
test
pop
scas
mov
incb
leave
clc
dec
push
lea
dec
sub
popf
lods
test
enter
leave
fstps
leave
mov
sub
and
in
test
pop
ljmp
mov
ja
xchg
test
pop
repz
push
ds
js
shl
lods
dec
jno
pushf
out
cmp
mov
xchg
sbb
ja
aas
add
sbb
incl
mov
loopne
xorb
mov
scas
push
cmp
pop
cmp
ror
outsl
mov
leave
mov
sub
mov
mov
add
mov
and
jb
push
pushf
cld
movsb
sub
jae
adc
dec
mov
dec
fcmovnb
je
sub
cld
cmpsl
sub
mov
mov
add
xchg
add
adc
call
cwtl
mov
clc
jp
fldt
sbbb
pop
xchg
mov
ljmp
in
mov
dec
std
int
mov
arpl
add
into
stos
sub
iret
lcall
mov
lret
sub
or
outsb
xor
mov
pop
xchg
push
and
addr16
in
stos
inc
inc
cmpb
sbb
mov
mov
cwtl
out
inc
and
sbb
mov
stos
sbb
faddl
pop
adc
cmp
sbb
int3
push
data16
and
mov
and
inc
shll
popa
call
sbb
xchg
movsb
aas
repnz
loopne
cltd
insb
push
std
jge
mov
dec
inc
shr
popl
les
jecxz
xchg
inc
jmp
lea
movsl
pop
aam
fisubrs
lds
loope
fsubp
les
or
in
data16
std
test
sahf
ret
sbb
repz
pop
adc
jb
int
add
mov
cmp
enter
add
sbbb
push
outsl
hlt
mov
pop
jae
cld
stos
xchg
jle
loope
fdivs
movsb
mov
aad
addr16
mov
mov
push
insb
mov
popf
adc
jne
inc
push
fildl
int3
addr16
sbb
jl
sub
push
mov
or
lret
push
or
orb
adc
ja
or
aas
ficompl
js
jmp
sbb
movsl
inc
jae
aam
aaa
fs
loop
xchg
test
outsb
mov
rolb
mov
loop
push
mov
les
or
je
fnstcw
sub
lret
fcmovbe
dec
inc
push
mov
mov
cmp
adc
mov
jmp
cli
inc
jnp
adc
aad
or
mov
stos
inc
jns
jnp
imul
dec
cmpsl
xor
push
dec
pop
cmp
push
ficoms
mov
cld
push
ret
enter
mov
lcall
bound
ljmp
lods
inc
jo
push
ds
cmp
push
rcrb
inc
mov
jmp
xor
dec
pop
dec
ss
add
push
ds
repnz
push
popf
pop
push
in
stos
mov
sahf
pop
push
loopne
or
sub
pop
sub
test
pop
in
mov
and
daa
pop
pushf
xor
mov
or
lahf
dec
cmp
push
bound
push
push
xchg
jno
bound
or
cmp
add
add
lds
and
xchg
mov
rsm
in
jno
shll
mov
or
ss
xchg
shl
mov
gs
xchg
pop
clc
push
popf
jne
xchg
fldl
pusha
test
jecxz
leave
mov
and
push
or
lret
pop
leave
cwtl
xor
arpl
xchg
cmc
movsb
popf
add
pop
jge
mov
insb
xchg
jg
xor
outsb
adc
je
lret
mov
adc
mov
int3
movsb
sub
lret
scas
mov
push
sbb
mov
or
nop
sbb
mov
mov
jnp
lods
xor
clc
inc
loop
mov
lods
add
jo
out
icebp
pop
push
or
mov
pop
jbe
or
pop
mov
jae
data16
test
shl
movsl
cmpl
xchg
jg
pop
mov
adc
out
filds
test
and
adc
sbb
ljmp
ret
das
in
daa
sub
sbb
iret
mov
lret
popa
ret
push
inc
and
jb
lds
scas
mov
sbb
xchg
hlt
cli
je
pop
pop
fbstp
or
je
stos
dec
mov
idivl
adc
xchg
xchg
hlt
dec
jmp
in
fisubs
sub
jno
test
xchg
mov
xchg
dec
imul
inc
xchg
ret
lahf
ds
popa
inc
pop
dec
shlb
outsl
jecxz
lods
mov
scas
jo
sub
or
int
in
cs
lahf
xchg
fwait
mov
hlt
sbb
cltd
jmp
push
loopne
or
push
inc
push
and
out
push
push
jae
jnp
sbb
mov
mov
or
imul
jne
jp
pop
jmp
call
adc
mov
ljmp
lahf
stos
adc
fimull
pusha
adc
add
adc
fldt
jecxz
mov
stc
push
sarl
or
jmp
in
xor
push
mov
clc
mov
push
push
ds
cmp
inc
adc
push
jecxz
jne
mov
jnp
xlat
xchg
cmpl
sub
call
pop
int3
cmp
jo
ret
push
pop
insb
sarl
insb
insb
fcoml
icebp
sahf
dec
xlat
hlt
loop
mov
out
mov
sbb
sub
test
push
fs
shlb
imul
sbb
mov
pop
mov
imul
cmp
cltd
es
lea
jb
push
inc
bound
call
bts
xchg
cld
insl
xor
xor
ja
pushl
out
subb
xlat
xor
leave
out
jle
out
adcl
cld
outsl
mov
das
jns
loop
pushf
roll
out
arpl
cmp
fadds
jle
lods
push
mov
mov
imul
xchg
mov
leave
inc
push
pop
es
adc
movsl
inc
test
pop
mov
push
push
cmpb
popf
mov
adc
xor
inc
push
dec
fldt
and
rcrl
repnz
sub
cmp
mov
imul
push
mov
loop
or
scas
iret
sbb
jecxz
loopne
fwait
test
aaa
jns
fidivrs
mul
jle
push
or
adc
cmpsl
stc
dec
add
push
mov
cltd
cmpsl
push
sti
jecxz
or
xor
jp
or
cltd
dec
int
xor
push
xor
fidivrs
gs
sub
or
loope
sbb
and
lods
fcmovnu
xor
daa
aaa
push
xor
outsb
sbb
xor
add
and
push
push
mov
iret
jns
cmpsl
imul
xor
stos
in
jp
cmp
mov
xchg
or
jnp
data16
test
xor
pop
xor
jnp
push
imul
out
and
xlat
push
testl
into
inc
or
or
std
inc
xchg
iret
sar
cmp
out
js
in
test
push
insb
les
cmp
out
cmovo
add
ds
out
jp
rol
int
ret
iret
push
in
cld
jl
pusha
clc
fadds
sarl
faddp
jo
xchg
xchg
add
push
jne
sbb
push
cmp
mov
subb
pop
push
cmpl
xchg
bound
xchg
gs
testb
pop
movsl
add
fprem
mov
jno
lock
pop
data16
pop
mov
ret
sub
mov
or
and
dec
and
adc
stos
push
arpl
dec
in
xchg
pop
pop
jl
sbb
fildl
dec
inc
xorb
addb
es
and
and
jb
mov
stos
mov
pop
jmp
fwait
lock
loope
fistpl
sbb
jmp
jne
lret
sub
cwtl
pop
stos
push
inc
cltd
test
dec
or
hlt
pop
cld
push
cmp
nop
xor
hlt
ds
lds
jle,pn
pop
pop
push
pop
mov
pop
push
and
icebp
inc
std
fisubrs
lods
rorl
adc
int3
mov
add
cli
mov
pop
jne
lret
sub
into
adc
ficompl
push
jl
sub
push
popf
aaa
lea
in
leave
int
and
dec
pop
addr16
pusha
jnp
mov
cltd
sbb
jl
outsl
pop
add
scas
je
outsl
mov
inc
mov
pop
divb
stos
jne
aaa
adc
push
dec
xchg
mov
xor
inc
es
cmp
mov
cmp
mov
mov
bound
adc
fldenv
fdivs
popa
das
pop
aas
dec
sbb
xchg
mov
push
fcoms
mov
call
cwtl
xor
mov
aad
nop
pop
adc
sub
sbb
mov
pop
sbb
inc
fstl
sub
or
cmp
cmp
out
or
xchg
movsl
pop
dec
jecxz
je
lret
fdivrl
aam
daa
jb
push
jne
or
jnp
popf
mov
aam
and
sahf
sub
xor
pop
sarl
testb
fsubr
adc
fidivl
out
and
dec
subb
shll
cmp
aas
jmp
frstor
add
lods
std
and
jge
xchg
adc
mov
in
mov
test
nop
and
dec
jbe
lret
xor
test
mov
cmp
test
sbb
pop
add
jmp
add
xor
xor
movb
outsl
cmp
push
lds
cltd
ret
cmp
dec
mov
adcl
lahf
popf
mov
lds
mov
push
enter
out
popf
jae
jl
sahf
movsl
jb
fisttpl
idivl
negl
fwait
out
push
lods
mov
and
pop
sbb
cwtl
mov
fsub
push
aam
adc
sbbl
and
es
repz
mov
jp
lods
jae
outsb
push
insl
pop
dec
scas
add
test
scas
and
adc
mov
scas
sub
out
jecxz
in
mov
fdiv
jns
pop
adc
testb
mov
mov
hlt
pop
push
adc
inc
sbb
xor
loopne
lcall
dec
dec
push
or
push
inc
inc
mov
jnp
sbb
add
pushf
xlat
lods
outsb
add
adc
imul
or
push
cld
jae
fdivs
scas
or
jnp
xor
psubq
cmc
lods
mov
repnz
and
imul
js
arpl
gs
and
ljmp
dec
mov
pop
fists
js
in
inc
aad
pusha
cmp
inc
sub
rcrb
dec
shlb
enter
into
out
cmovle
std
repz
adc
push
mov
mov
cmc
ret
mov
out
enter
pop
lods
push
xor
das
cmc
scas
imul
movsb
shll
outsl
testl
mov
adc
adcb
cmpsb
pop
mov
adc
push
cmp
xchg
xchg
cmpsb
xchg
sub
nop
mov
jmp
std
repz
test
das
or
xchg
aaa
mov
daa
pop
xor
push
xor
and
dec
in
jg
fprem1
and
cmp
arpl
outsl
or
in
loop
xchg
add
leave
inc
sbb
lcall
sbbb
jae
mov
cld
sub
jle
mov
test
imul
jmp
dec
bound
gs
or
dec
add
js
and
movsl
xchg
pop
add
adc
pushf
jl
testl
lahf
popf
notb
idivl
mov
cmpsl
mov
ret
push
aad
xchg
test
or
adc
xor
inc
pop
lds
cmp
rep
push
inc
xchg
dec
sahf
popf
test
push
pop
in
jg
pop
and
xchg
mov
stos
or
mov
ss
mov
and
sbbl
gs
iret
sub
dec
sub
scas
jbe
in
movsl
imul
scas
stos
and
cmp
cmp
push
lea
lcall
test
xor
ss
inc
sub
test
adc
mov
ret
enter
jno
fwait
pop
add
sbbb
movb
iret
sbb
adc
sub
decl
das
in
adc
xor
push
jp
fdiv
add
rep
aaa
cmpl
jne
jg
cmpsl
and
inc
stos
dec
fucom
xor
push
in
sbb
mov
xor
push
fiaddl
push
cltd
xor
inc
xchg
iret
ds
outsl
xchg
or
dec
add
lods
clc
xchg
adc
xchg
mov
mov
push
cmpb
enter
mov
popa
fisubs
aas
aad
sti
test
xchg
xchg
add
pop
inc
mov
xchg
push
sbb
in
pop
push
loope
popa
mov
xchg
xchg
call
in
in
inc
inc
imul
int
cmp
inc
or
in
mov
rcl
and
sbb
cmpsb
jb
jmp
movsb
or
push
mov
incl
fdivrs
movsb
shrb
jbe
push
push
mov
mov
in
mov
arpl
shlb
insl
push
rcr
fstps
inc
das
movsl
test
lods
fadd
dec
push
jns
xchg
inc
rcrl
add
xchg
mov
cmpsl
setae
call
mov
cmpsl
dec
add
mul
ja
add
fisubs
bound
stos
push
push
int
or
imul
dec
je
mov
dec
test
lahf
fsubrl
pushf
lret
sahf
push
inc
cltd
es
mov
dec
sbb
jecxz
push
jne
sub
dec
mov
leave
ljmp
imul
xor
pop
movsl
jg
jae
xchg
sub
addl
scas
adc
bound
pop
sbb
sub
sbb
jne
adc
cmp
mov
and
jp
int3
lcall
add
aaa
in
pusha
scas
iret
jle
sahf
insl
pop
xchg
sbb
xchg
pushf
out
std
stos
mov
loopne
sub
lret
sub
nop
imul
jb
mov
icebp
scas
addb
inc
sub
cli
fmull
inc
xor
xorl
fcomp
dec
clc
pusha
cmpsl
shll
popa
out
insb
imul
pop
or
std
insl
fdivl
cld
lahf
or
jae,pn
les
jno
cmc
push
jge
add
lods
or
fsubr
jnp
pop
lock
mov
fadds
outsb
cmp
subb
jo
cs
jbe
int
mov
das
cmp
xchg
dec
push
xor
mov
mov
vmovddup
dec
and
paddusw
fcoms
jno
fs
outsb
fcoms
or
mov
imulb
push
add
jecxz
aas
adcl
in
data16
cwtl
data16
xchg
in
cmpsb
push
xor
stc
mov
sti
in
test
adc
ljmp
js
lret
pop
test
xchg
hlt
fs
add
sub
mov
test
int
push
int3
test
cmp
xor
xchg
fidivrs
outsb
stos
dec
push
sbb
adc
in
icebp
and
stc
insb
lods
jnp
adc
out
cld
inc
xchg
fadd
xor
mov
int
jns
cmp
xchg
cmp
mov
adc
loopne
adc
dec
das
xchg
leave
mov
and
scas
mov
cli
es
mov
out
mov
lahf
xchg
push
dec
lahf
sbb
scas
jle
iret
fistps
pop
jge
push
int
jbe
mov
lods
jge
jne
in
nop
test
add
imul
xchg
ljmp
push
faddl
int3
fldcw
insb
mov
stos
jmp
push
inc
inc
loopne
jno
movsb
mov
pop
sbb
lds
test
pop
cltd
int
sbb
jbe
and
sbb
nop
jne
jne
dec
sbb
out
les
aam
sub
mov
shll
cwtl
jl
mov
pop
dec
mov
mov
adc
mov
and
jecxz
rclb
aad
and
sbb
jge
flds
xor
aam
sbb
andb
out
sub
add
mov
ja,pt
sub
sub
sbb
fcomps
jnp
movsb
cmp
popa
mov
sub
aam
xor
daa
push
inc
aam
push
gs
jno
lahf
das
sbb
das
in
dec
push
aas
or
movsb
or
push
dec
int
aaa
sub
in
adc
dec
out
inc
cld
inc
dec
gs
movsb
fnstsw
nop
ss
daa
lods
mov
sbb
sbb
xchg
push
sbb
stos
add
fmull
je
xorl
jge
pop
pop
cmp
imul
jmp
cs
je
sub
mov
mov
push
or
jg
out
or
inc
adc
or
repz
imulw
xchg
ret
int3
scas
andl
int3
popf
sahf
test
int3
nop
sub
push
fwait
mov
push
hlt
cmp
out
les
andl
mov
fisubs
je
mov
ds
lds
mov
outsl
imul
cmp
lods
push
aas
pop
lock
xchg
and
push
jns
lods
sub
dec
fstp
push
mov
lods
inc
ljmp
mov
and
repnz
mov
jle,pn
jnp
cmc
push
xchg
dec
fnsave
dec
sbb
xchg
xor
sbb
out
into
aas
xchg
dec
cmp
jle
fistpll
lock
xchg
fmuls
pushf
loop
and
iret
pop
mov
inc
in
jmp
outsl
scas
mov
in
fimull
or
popa
fmul
nop
mov
cli
add
and
mov
push
xor
mov
jecxz
andb
mov
push
dec
jg
jnp
sub
lods
test
jae
sbb
je
adc
pop
jno
xor
jne
or
in
pop
loop
fcompl
push
pop
das
lcall
popf
stos
pop
mov
fmul
or
xchg
jecxz
lods
inc
lea
sub
in
push
imulb
inc
xchg
scas
int
xor
ror
shlb
int
xor
je
cltd
sub
cltd
sbb
jb
cmp
cmp
rorl
outsl
push
lods
and
out
push
icebp
jp
cmp
pop
hlt
pop
sub
sbbl
ret
sbb
stc
int3
test
mov
sarl
lds
xor
sub
subl
iret
sbb
out
popl
out
fs
cltd
jmp
aad
fisubl
xchg
imul
cmpsb
gs
hlt
jl
arpl
insb
es
cmc
insl
mov
shrl
push
xchg
jne
imul
inc
movsb
jge
outsl
call
dec
leave
cld
pop
ss
inc
mov
dec
jno
jge
ret
jnp
sbb
pushf
ret
mov
ss
jns
mov
hlt
ds
imul
or
mov
push
or
stc
mov
es
out
inc
dec
ss
lods
jecxz
push
ja
ffreep
jg
insb
sbb
jl
mov
mov
in
lret
inc
mov
dec
sarl
loop
xchg
stc
jno
mov
out
data16
xchg
nop
imul
mov
or
sub
mov
fwait
jp
mov
and
popa
jo
jle
mov
sahf
movb
dec
mov
aas
inc
mov
add
push
sub
cmp
or
dec
jg
int
in
and
call
sbb
addl
dec
scas
jno
push
mov
inc
in
faddp
int
sub
lds
inc
aam
faddl
dec
mov
add
xchg
push
and
cmc
mov
fisubl
push
adc
or
push
push
imul
leave
dec
or
cmc
outsb
dec
ds
mov
arpl
addr16
sbb
adc
push
dec
loope
out
mov
out
out
arpl
ret
std
dec
dec
cmpsb
or
mov
fisubl
icebp
jle
int3
dec
jecxz
fwait
mov
cltd
sbbb
push
push
bound
lods
rolw
inc
jb
lea
fisubrs
loopne
stos
mov
in
dec
adc
popa
jmp
sbbl
leave
out
mov
jl
jnp
push
rcrb
pop
pop
lods
push
in
mov
xchg
and
sub
pop
push
popa
cmp
daa
sub
mov
sub
push
in
out
pop
js
jo
add
pop
dec
aaa
imul
or
mov
popa
je
out
sti
cmp
andl
out
jge
jno
mov
and
jecxz
loopne
mov
insb
dec
mov
xorl
xchg
adc
jmp
cli
stos
call
pusha
xchg
aas
or
mov
in
das
pop
push
in
inc
cmc
or
dec
jp
je
jg
pop
stc
pusha
outsl
adc
push
dec
movsb
loope,pt
jne
fwait
xorl
into
sbbl
push
fwait
shl
je
jge
scas
shrl
pop
or
lahf
in
inc
jmp
data16
out
pop
popf
push
push
sbb
orl
and
mov
loope
push
out
or
idivl
sub
divb
scas
ds
inc
mov
aad
pop
fisttpl
mov
loope
mov
pop
leave
movsl
aad
xchg
mov
ret
push
inc
mov
jns
xchg
xchg
bound
pusha
push
test
cltd
push
dec
or
mov
imul
push
jb
repnz
xchg
aam
mov
ret
sbb
adc
jle
mov
iret
add
in
mov
ljmp
pop
xlat
push
push
fldcw
push
stos
inc
ds
rclb
js
jb
mov
bnd
adc
loopne
mov
mov
dec
lcall
mov
call
std
test
pushf
jns
add
lea
jnp
push
push
fsubrs
iret
addr16
lods
sub
add
pop
in
sbb
add
pop
xchg
aad
fdivp
jbe
pushf
pop
or
ret
sbb
xchg
push
mov
lahf
stos
or
cmp
jecxz
lret
push
imul
test
xchg
xchg
dec
xchg
adc
icebp
and
adcb
daa
shlb
pusha
aam
sbb
mov
xchg
add
cmp
cmp
inc
dec
cmpsb
jl
xor
push
cld
cltd
mov
xchg
inc
sub
jmp
xchg
orl
sub
or
fildl
sahf
arpl
inc
push
rorb
sub
mov
nop
in
push
clc
cmc
insb
xchg
hlt
or
cmpsl
out
mov
gs
insl
outsb
pop
inc
jo
insl
sbb
add
lahf
sarb
pop
mov
mov
repnz
jae
outsl
sub
mov
mov
push
push
ds
ljmp
imull
mov
xor
mov
jg
pushf
jge
jo
imul
sub
movsl
adc
int
lcall
scas
pop
and
lods
ficoms
sub
repz
xchg
sbb
inc
das
lods
pop
cmp
negb
and
mov
shl
test
jno
out
mov
iret
jnp
out
or
aas
addr16
mov
pop
sbbb
mov
adc
pop
pop
pop
push
cmp
mov
dec
cmp
and
xor
movsl
loop
jne
mov
loope,pn
ja
popf
add
test
add
adc
adc
stos
fwait
mov
mov
xlat
ficompl
dec
push
sub
aam
ljmp
mov
cltd
pusha
xor
inc
testl
mov
loopne
bound
cwtl
clc
lds
pop
jns
cmp
movsl
mov
loop
jl
push
mov
js,pn
sbb
mov
sbb
xchg
nop
in
dec
pop
int
cltd
ljmp
pop
mov
adc
inc
sub
std
fmuls
test
cmp
hlt
adc
push
xor
loopne
cmp
cld
xor
loopne
fiadds
sbb
iret
jp
jecxz
sahf
std
insb
adc
adc
sbb
jmp
mov
cmp
sbb
push
pop
lret
xor
mov
and
inc
jp
mov
fs
jle
out
movsl
jb
jnp
insl
pop
cmp
pop
imul
lods
dec
flds
mov
add
inc
pop
mov
mov
ja
les
jb
testl
jno
fnstsw
pop
repnz
loop
sub
arpl
daa
jp
mov
mov
mov
push
jmp
inc
pop
lahf
cmp
or
in
fadds
sbb
mov
adc
cmpsl
inc
cmp
shl
pop
pshuflw
xorl
lret
sbb
ficompl
iret
jge
fimuls
aad
push
add
sar
mov
mov
pop
es
xor
aas
les
push
scas
shrl
fistpll
mov
scas
outsb
lds
in
jae
sub
sbb
sti
into
cmp
xchg
sbb
dec
dec
in
repz
inc
iret
call
in
mov
mov
pop
ret
sbb
push
ret
outsl
or
jecxz
scas
arpl
std
andb
pop
sbb
sbb
cmp
add
adc
in
call
fstl
rcll
loope
push
mov
dec
pop
sub
sbb
dec
mov
pop
mov
xchg
pop
shrb
clc
jle
out
lret
mov
fimull
cmp
add
das
or
mov
and
cmp
sarl
rclb
inc
jg
push
pop
sbb
mov
ljmp
add
pop
orps
nop
mov
add
shl
adc
lret
jmp
sarl
pop
push
inc
or
call
xchg
ficomps
sahf
sbb
push
imul
push
cmp
mov
addl
cwtl
xchg
out
clc
sti
cmpsb
icebp
dec
jnp
inc
jbe
sarb
out
add
sub
mov
cltd
push
xchg
out
fiadds
aas
cld
adc
or
fnstcw
jecxz
jno
lods
sbb
dec
idiv
fxch
mov
xchg
or
cmp
pop
xor
leave
jmp
mov
pop
xchg
mov
loope
push
sub
out
push
or
call
testl
xor
in
scas
int3
sbb
shrl
adc
rcrl
push
lret
loope
mov
pop
dec
xor
out
ds
jmp
sti
push
and
inc
or
push
js
xchg
push
dec
out
sub
inc
or
sub
lock
rclb
test
mov
loop
xor
in
xor
mov
into
lods
jecxz
adc
mov
test
std
mov
mov
xchg
imulb
add
sbb
scas
jp
jg
mov
sub
subb
call
mov
push
ret
clc
es
pushf
xor
repz
jne
push
repnz
loope
push
inc
fisttps
sbb
or
or
out
add
out
bound
std
push
push
setnp
jnp
sub
cli
pop
in
sbb
insb
fsts
pop
cmp
inc
loope
addl
xor
hlt
sbb
test
arpl
add
scas
pushl
pop
ss
or
sub
daa
dec
dec
mov
dec
stos
cltd
leave
rcr
and
adc
sbb
ds
and
xor
imul
idivl
push
stc
pop
pop
pop
xchg
add
dec
clc
pusha
xchg
pushf
cmp
in
pop
cmc
shll
les
cmpsl
jbe
cmpsb
leave
or
jnp
es
fxch
mov
xchg
mov
xchg
subb
adc
pushf
pushf
sbb
jmp
cmp
movsl
mov
push
sbb
xchg
mov
ja
dec
sub
dec
ret
andb
fmulp
push
std
iret
sti
stos
fwait
ja
je
arpl
jnp
inc
xor
cmpsl
jg
add
insb
movsl
aas
subl
sub
cs
push
fstp
fadd
push
jnp
sub
mov
adc
xlat
cmpsb
or
fcmovbe
dec
push
aad
cmp
mov
idivl
dec
or
lcall
stos
mov
jp
xor
xor
or
pop
push
dec
insl
shlb
imul
xchg
xchg
pop
insl
mov
stc
push
xlat
jecxz
mov
lock
jae
sbb
xor
fs
stc
push
cmp
loop
mov
xchg
xchg
repnz
pop
or
add
pop
repnz
mov
fistpll
aam
sub
ret
addr16
out
cs
mov
test
pop
sti
sti
adc
inc
popf
jns
sub
stos
mov
sahf
push
sbb
popf
fs
sbb
lods
in
xchg
sub
stos
xchg
mov
jge
dec
or
adc
loope
pop
mov
punpcklwd
dec
cli
cld
mov
pminub
adc
or
push
inc
mov
jmp
in
stc
ret
mov
in
movsb
fs
adc
out
and
mov
loop
test
jmp
inc
xchg
jne
jl
inc
cmc
xchg
shr
aad
sub
or
mov
cmp
repz
rcrl
frndint
repz
scas
negl
stc
cmp
cmpl
lcall
push
pop
adc
and
mov
lods
mov
xchg
sbb
pop
ljmp
and
lret
cmp
jo
push
xlat
cpuid
test
adc
in
movsb
test
fcomp
out
mov
adc
fldl
adc
stc
sub
stc
xchg
cmp
pushf
orl
push
adc
mov
cltd
ljmp
or
mov
add
jno
cs
out
mov
icebp
pop
gs
cmp
push
xchg
fs
cmp
dec
and
iret
inc
jmp
and
adc
sarl
lahf
xchg
xchg
jmp
pop
mov
mov
xor
dec
gs
mov
push
sub
dec
gs
aaa
xchg
sbb
in
cmp
fcmovbe
inc
sub
xor
push
or
jp
das
xchg
xor
data16
sbb
dec
and
enter
push
daa
push
lods
test
int
adc
int
cmpl
mov
sub
lcall
repnz
mov
xchg
cltd
and
xchg
and
jecxz
jbe
lods
mov
daa
xchg
mov
xor
xchg
jmp
sbb
xor
fdivl
movsb
pop
ss
aam
and
ja
scas
push
xchg
mov
inc
mov
mov
fbstp
cmc
pop
jmp
mov
jecxz
es
mov
out
nop
fs
loope
aam
popa
mov
cmc
jg
push
mov
test
adc
jl
xor
inc
xor
pushf
notb
fs
cmp
sarl
fs
mov
cwtl
xchg
xor
iret
pop
int
mov
jnp
add
mov
ds
leave
out
fsubp
mov
pop
mov
hlt
inc
cwtl
xor
int3
into
inc
xor
xchg
stos
lcall
push
mov
inc
shll
mov
push
pop
xor
sub
js
out
adc
insl
jnp
stc
and
inc
loope
rcrb
sbb
and
pop
xchg
insb
pop
push
orb
mov
outsb
push
add
test
cs
loopne
and
push
push
adc
or
addr16
xor
mov
fisttps
push
jns
jbe
pop
adc
add
push
das
xchg
mov
pop
jge
sbb
ljmp
jl
mov
lock
loopne
pop
mov
mov
popf
cmp
jle
insb
mov
adc
addl
jnp
and
fwait
nop
dec
fdivl
inc
and
cli
add
imul
mov
jmp
std
jmp
leave
mov
cmp
mov
cmc
cmpsl
out
in
xchg
or
jae
sub
lret
scas
jge
xor
fists
repz
imul
inc
push
mov
dec
cmp
aaa
lds
loopne
dec
fsubs
scas
cmpsl
fcoml
adc
push
lods
in
inc
test
xchg
arpl
iret
loope
pop
pop
inc
inc
imul
insl
movsl
scas
pop
add
fwait
lods
xor
jns
pop
mov
outsb
mov
pop
ja
in
mov
cmp
xchg
rcrb
sub
pusha
xchg
adc
xor
pushf
dec
push
bound
dec
inc
lcall
jle
push
outsb
sbb
outsb
adc
mov
mov
xor
rorl
loope
xor
lcall
lock
or
mov
nop
adc
add
in
mov
into
adc
icebp
jp,pt
test
xchg
xchg
push
adc
jns
test
ljmp
mov
mov
pop
out
icebp
xor
addb
sub
mov
es
pop
repz
arpl
insl
mov
jb
pop
mov
pop
mov
ffreep
push
mov
xor
and
mov
aad
ss
mov
fcom
lret
bound
jle
dec
int3
in
adc
in
js
ret
lea
and
out
mov
pop
adc
dec
fcomip
or
inc
ss
out
les
into
aad
shll
insl
ss
imul
jg
insl
or
inc
cmpsb
pop
sbb
cltd
jnp
scas
inc
clc
sbb
jns
and
test
cmp
repnz
inc
test
mov
outsl
aaa
frndint
cmpsb
pop
mov
mov
cltd
push
imul
dec
sbb
popa
xchg
cmp
sar
mov
in
push
xchg
int3
rcl
push
gs
sub
inc
jl
push
and
jb
and
dec
data16
daa
in
jo
xchg
mov
int3
ficompl
testb
fiaddl
add
push
push
ds
xlat
or
js
orb
xlat
adc
and
mov
mov
jg
sbb
mov
xchg
testl
cmp
adcb
jns
and
mov
lods
lret
jne
ja
mov
loope
fcoml
cmp
dec
xchg
xchg
push
push
or
pop
fimull
and
push
ret
inc
addl
mov
mov
cmp
jecxz
sti
lods
out
cmp
dec
into
and
xchg
push
cld
sbb
pop
ljmp
ss
test
pop
jmp
push
sbb
sub
sti
in
inc
xchg
and
mov
jecxz
mov
jae
xchg
inc
std
push
lcall
cs
sti
outsb
fildll
dec
inc
mov
lock
fs
ljmp
inc
cwtl
aaa
stc
jns
leave
inc
clc
or
pop
jno
cmp
ljmp
scas
aam
mov
aas
cmp
dec
imul
sub
xchg
jg
repnz
cltd
dec
xchg
les
into
arpl
xchg
jl
fnclex
rep
jmp
lods
mov
shll
sub
jns
jg
lret
jg
outsl
pop
sub
sub
insl
sub
pop
fisttpl
pop
daa
cmc
ss
nop
sar
or
mov
or
iret
jno
imul
pop
and
lahf
imul
lea
shrb
and
fdivl
mov
or
push
add
pusha
outsb
ret
pushf
jge
fchs
jne
mov
scas
repz
rclb
xor
outsb
loopne
or
cmp
cmp
inc
jmp
sub
mov
sbb
mov
jmp
pop
pop
icebp
lock
mov
pushf
dec
das
xchg
push
lea
dec
and
cmpsl
aam
sub
stos
je
dec
inc
daa
push
sub
xor
xor
mov
sti
mov
xchg
xchg
mov
andb
test
lods
push
add
push
pushf
ja
scas
push
out
data16
jge
xchg
mov
notb
xor
cmp
xchg
mov
xchg
in
fcomip
and
lcall
divl
push
adc
adc
and
notb
cmc
aas
jnp
pushl
dec
call
or
cmc
data16
adc
cs
dec
inc
mov
loopne
inc
mov
mov
sbb
xlat
loope
stc
fists
hlt
cmovp
leave
mov
adc
mov
inc
insb
or
pushf
cs
fimull
xor
in
push
addr16
cmp
call
loopne
jnp
outsb
lods
sub
dec
and
jg
sub
or
mov
mov
pop
shlb
mov
sbb
in
add
pusha
cmpsb
loope
inc
movsb
mov
movsl
popf
mov
shrl
pop
ret
leave
lods
and
add
fdivs
in
mov
push
cmp
xchg
cmpsl
pop
sub
mov
fsub
pop
adc
adc
mov
lahf
mov
dec
clc
xchg
mov
int3
xchg
jl
jg
xor
inc
shlb
je
mov
dec
or
sbb
mov
insb
aam
std
add
mov
shlb
rol
scas
cli
adc
xchg
and
in
ss
ret
enter
paddusb
aad
out
insl
loope
mov
sub
fiadds
test
add
jg
fisubrl
pop
int3
aam
fnstsw
add
lds
sub
cmp
jnp
mov
std
mov
xchg
fadd
add
sahf
fsubl
mov
and
and
js
or
xchg
das
ja
cmpsl
lahf
ja
sub
orb
out
xchg
sub
inc
movsb
jge
pop
xchg
in
adc
repz
inc
jecxz
rclb
xor
mov
mov
and
add
andl
outsb
mov
movsl
aas
iret
nop
ret
push
dec
and
xchg
jno
fdiv
cmpsb
jo
jg
das
cmp
mov
and
mov
add
mov
data16
mov
fwait
into
les
outsb
mov
inc
ret
or
inc
xchg
mov
lret
jne
jl
mov
insb
sbb
pop
push
mov
push
dec
push
fwait
pop
mov
mov
adcb
sub
pop
dec
jge
cltd
mov
ljmp
sbb
cwtl
push
cmp
in
or
pop
cld
arpl
pop
lds
mov
sbb
rol
iret
push
pop
cmp
sub
or
idiv
push
mov
movsl
clc
loope
repz
pop
lea
rcrl
sbb
add
inc
push
xor
pusha
mov
sub
test
orb
js
fstpt
add
pop
gs
lret
mov
aas
pop
lods
js
ret
lods
in
or
sub
repnz
cld
jnp
js
add
int
pop
jne
push
lea
popf
jge
mov
outsl
push
sbb
lods
xchg
repnz
push
xor
push
mov
rcll
std
jge
xor
scas
aaa
cmp
sub
data16
lahf
ds
mov
mov
dec
sub
imul
mov
fdivl
ret
test
mov
in
dec
insb
lret
fadd
jp
mov
xchg
mov
enter
cmp
shlb
mov
loope
roll
mov
pop
or
push
mov
lds
cwtl
dec
or
xchg
mov
xor
ret
arpl
xor
mov
mov
out
cs
insl
out
int
pushf
sub
push
ret
and
mov
jbe
popa
lret
test
add
shrb
or
push
mov
or
jl
mov
adc
fs
push
leave
add
add
and
pop
and
xor
dec
xchg
in
insb
xchg
fwait
scas
sbb
hlt
pop
jmp
xor
test
adc
int
or
jns
fcoms
lcall
dec
mov
xchg
sbb
loopne
test
test
sti
nop
out
pop
lock
push
add
fnstenv
pusha
xchg
dec
add
sub
mov
xlat
cwtl
push
jecxz
jge
inc
gs
xchg
sbb
test
sub
or
int
mov
sub
inc
xor
mov
fstl
fmull
ret
dec
test
mov
movsb
insb
adc
shl
or
insl
cmp
inc
les
xchg
mov
daa
movsb
mov
push
out
inc
fistl
sbb
cmpsb
in
sahf
es
iret
fidivrl
jmp
popa
sbb
jge
inc
mov
xchg
imul
push
imul
in
shl
fldenv
repnz
mov
or
lcall
lret
movsl
adc
rclb
nop
std
adc
ja
scas
cmp
sub
inc
add
mov
enter
mov
mov
pop
sbb
scas
shrb
sbb
aaa
inc
mov
nop
cmp
lret
fnstcw
scas
dec
cmpb
out
fadd
lds
subb
cmc
shll
scas
add
into
imul
fidivl
jae
std
in
scas
mull
loope
mov
or
and
jns
mov
mov
mov
push
sarb
fstpl
hlt
push
pop
xchg
sbb
das
notl
or
call
inc
mov
js
or
push
lea
je
rcrb
les
test
sbbl
pop
jmp
cmpsb
pop
out
jo
sub
xchg
adc
hlt
mov
xor
loope
fwait
push
cltd
fcomps
lcall
jp
ss
bound
xchg
incb
or
daa
lret
cwtl
popa
add
clc
ret
aad
xlat
cmp
sub
rolb
push
mov
call
jae
ljmp
icebp
sub
ret
sbb
xor
mov
lahf
pop
orl
std
out
rolb
sub
aad
clc
cli
in
imul
cmc
pop
push
add
outsb
leave
call
push
mov
rol
lods
jns
test
cmp
pop
xchg
push
adc
scas
jge
fdivl
mov
popa
pop
dec
and
pop
mov
pop
pop
hlt
push
scas
lods
andl
stos
push
inc
mov
adc
lret
mov
push
lahf
call
es
bound
adc
mov
mov
jmp
ljmp
sub
push
push
aad
push
mov
or
ret
cmpb
ss
movsb
jo
cwtl
push
cmp
push
incl
mov
sub
jecxz
cli
aas
ds
cmp
lock
sub
add
mov
pop
mov
pop
in
jge
cmpsb
mov
sub
jmp
push
inc
mov
push
push
lods
or
fsubrp
push
lds
popf
push
fisttpl
shrb
leave
mov
push
sbb
rorb
dec
rcrl
xchg
and
inc
call
movsb
shl
xchg
psubd
mov
outsb
cmp
and
add
cmpb
ss
push
sub
push
loop
test
leave
xor
push
mov
and
jg
mov
lcall
popf
popa
iret
aas
mov
lcall
pop
outsb
cmp
push
pop
jns
out
cmp
test
inc
push
popa
pusha
pop
xchg
cld
mov
jnp
leave
rorb
or
shl
aad
movsl
push
nop
push
push
lcall
in
fimull
jg
mov
push
test
test
and
sub
or
fucomi
je
sbb
sarl
jecxz
ret
mov
pop
pop
inc
out
outsb
insb
mov
xchg
and
mov
and
sub
test
push
shrl
mov
inc
cmp
jg
outsb
gs
jo
loope
and
dec
inc
pop
mov
leave
loop
jp
push
fisubs
mov
mov
xchg
mov
mov
xchg
movsb
movsb
in
sbb
es
xor
fisttps
inc
test
push
xchg
jle
push
int
mov
mul
and
in
sbb
pop
inc
and
cmp
lods
pop
dec
cmp
jl
sbb
push
pop
rcll
add
pop
xor
subb
jno
or
cmpsl
pop
dec
and
out
push
xchg
pop
fst
pop
inc
add
loopne
ficoms
mov
jb
and
clc
inc
sbb
dec
pop
sbb
lahf
cmp
andl
sbb
lock
dec
and
lods
iret
pop
mov
popa
leave
jmp
xor
repnz
xchg
mov
pop
cli
aad
and
cs
mov
les
stc
lret
mov
pop
jns
sub
stos
outsl
mov
daa
into
pop
sub
arpl
pop
lock
ljmp
int3
cmp
and
mov
insl
cltd
push
inc
pop
and
scas
jp
ret
pop
mov
in
addr16
sti
xor
cmpsl
xchg
xchg
inc
add
push
movsl
insb
cmp
mov
mov
pop
mov
data16
data16
jo
xor
dec
jp
push
xchg
hlt
or
or
and
gs
pop
rclb
push
or
xlat
and
test
les
cmc
xchg
idivb
adc
imul
mov
imul
push
cmp
mov
ljmp
in
lret
fbstp
fmull
mov
mov
pushf
mov
pop
pop
xor
cmp
stos
stc
pusha
or
cmpsb
cmp
push
ret
sbb
loopne
lds
sbb
mov
dec
hlt
mov
xchg
shr
popa
push
sub
outsl
adc
scas
arpl
add
nop
xor
adc
push
paddsb
dec
les
jge
test
lea
into
in
adc
hlt
inc
cmp
cmp
cmp
sub
mov
and
push
les
cltd
and
neg
inc
or
out
fldenv
push
movsl
push
ja
adc
lock
int
sti
adc
pop
mov
xchg
inc
sub
adc
jl
mov
imul
orl
inc
pop
mov
mov
fbld
and
rcl
mov
add
dec
dec
addr16
and
lea
jge
pop
fsincos
fwait
imulb
pop
mov
das
mov
xchg
mov
or
bnd
es
sbb
je
and
lods
mov
aas
and
push
cwtl
enter
fwait
xchg
dec
cmp
and
imul
adc
fxch
pusha
pop
int
jge
push
aaa
aas
or
es
sbb
les
mov
jo
ja
sbb
sbb
popf
mov
and
cmp
mov
int3
hlt
shrl
and
sbb
in
sub
leave
addr16
mov
loopne
jns
mov
in
mov
dec
jb
mov
js
jmp
and
enter
mov
or
jo
xchg
xchg
hlt
cmp
fmulp
stc
adc
stos
push
push
cmp
pop
lods
mov
cmp
jl
out
aaa
add
decl
repnz
cmpsl
dec
aad
xchg
scas
into
mov
add
sbb
cmp
sub
imul
subb
outsb
jo
lds
sub
cmc
out
or
pop
add
daa
sub
aas
or
mov
or
sub
add
inc
lods
fwait
cmp
push
sub
sbb
fisubrl
outsl
and
add
das
xor
test
xchg
outsl
jmp
fdivrl
fldz
jo
out
mov
repnz
mov
jae
test
imul
into
fwait
enter
cmpsb
stos
loope
out
dec
push
pop
jae
xor
xor
je
mov
loopne
cmp
inc
mov
pop
es
xorl
pop
cmpsb
pop
xchg
sar
pop
pop
fildl
lea
pop
push
inc
ficoms
mov
idivl
in
icebp
sbb
aad
add
adc
mov
jo
push
popa
test
mov
xchg
stos
push
xlat
push
arpl
fbld
je
fiaddl
mov
pop
xchg
push
mov
jecxz
jb
push
dec
lds
outsb
sbb
xor
mov
sysenter
push
repnz
aad
inc
xchg
lcall
mov
cmp
xchg
add
dec
das
fsubl
mov
ja,pt
bound
rolb
add
inc
xchg
pop
pushf
sbb
mov
mov
out
mov
push
mov
xchg
mov
mov
das
push
jae
rcrb
aam
pop
lret
ljmp
sbb
test
jge
sub
mov
sbb
cmp
xor
jge
jo
iret
jl
hlt
mov
cmp
repz
ret
add
popa
roll
inc
test
lret
aam
lock
jno
repnz
push
or
imul
insl
fsub
adcb
rcrl
adc
mov
cmpsl
xor
mov
lods
inc
inc
nop
loope
mov
dec
mov
mov
lock
mov
inc
jns
enter
popf
inc
outsb
sbb
popf
push
xchg
xor
stos
push
sar
stc
jae
or
jbe
lret
gs
ljmp
aad
aaa
arpl
xor
out
cwtl
xor
shr
popa
fmuls
xchg
mov
sahf
mov
dec
cwtl
and
mov
sub
test
push
add
out
stc
mov
push
into
mov
sbb
pop
int3
xchg
mov
je
or
insb
add
leave
jl
call
fs
sbb
mov
aas
lret
ficoml
sbb
and
push
sbb
dec
push
rorb
xlat
jecxz
xchg
jecxz
sbb
imul
adc
es
pop
mov
push
pop
sti
imul
or
int3
mov
ss
xchg
add
addb
fisubl
call
gs
inc
js
out
push
addr16
loopne
fs
leave
mov
daa
mov
jecxz
push
xchg
pop
outsl
and
out
into
stos
mov
push
jle
or
add
mov
icebp
adc
cmpsl
lods
inc
pushf
stos
mov
pop
inc
jecxz
dec
addr16
cli
xchg
mov
xor
out
jl
stc
cmp
add
mov
popa
lock
fwait
test
jg
jno
cltd
stc
pop
add
dec
lcall
adc
cwtl
ss
into
shlb
push
dec
mov
js
lods
lahf
pop
lds
mov
std
es
mov
mov
cmp
cmc
inc
mov
leave
ljmp
xchg
mov
mov
add
rolb
sbb
push
fwait
lock
push
or
push
mov
cmpsl
int3
xlat
out
push
lahf
push
pop
add
filds
std
fcom
mov
iret
stc
je
pushf
jb
or
mov
mov
bound
outsb
dec
pop
fdivs
int3
hlt
xor
dec
lret
sbb
loope
mov
outsl
aam
test
mov
dec
cli
movsb
enter
or
push
lret
in
xor
fdivr
popl
sub
push
lret
dec
lahf
mov
cmp
inc
cmpsb
jnp
inc
and
push
sbb
std
sub
sbb
les
loope
rclb
pop
fsts
ds
out
cld
lods
pop
sbb
out
cwtl
adc
cmp
mov
push
ljmp
andl
das
bound
loope
dec
scas
jno
cmp
aaa
xchg
mov
mov
dec
sub
cmp
sbb
sub
xchg
push
pop
xor
xchg
adc
dec
cltd
pop
xchg
sub
fcoml
cmp
dec
pop
shl
and
push
xor
cmc
add
fildll
out
mov
fbld
in
lahf
cmp
push
pop
sub
cmc
dec
jno
insb
pop
mov
xor
addr16
rorb
cmpsb
add
enter
hlt
pop
xorl
imul
lods
push
jecxz
arpl
in
inc
or
mov
sbb
push
sub
roll
dec
loope
xchg
arpl
jp
div
mov
adc
mov
push
xchg
jae
cmpsb
jb
jle
mov
sarl
leave
cwtl
xchg
push
incb
sub
dec
ljmp
insl
xchg
add
fisubl
mov
lret
inc
mov
push
push
jmp
mov
mov
stos
stos
fisttpl
dec
cltd
ret
les
ficoml
sbb
shl
adc
lock
mov
int3
call
sbb
nop
xor
lods
sbb
fmul
add
sub
mov
xor
lea
dec
and
adc
sub
mov
out
sbb
js
or
push
out
inc
test
or
sub
and
or
fisubs
dec
and
pop
jb
cmp
into
dec
xor
pop
xchg
cmp
orb
aad
xchg
mov
ret
dec
inc
cmp
out
inc
leave
push
push
push
xor
lods
inc
das
fistps
cmp
aas
lock
inc
ret
mov
push
cs
icebp
les
or
test
mov
addr16
nop
rcr
or
xorl
jae
cmpsb
pusha
andl
cmpsb
adc
jge
xchg
sbb
pop
sbb
hlt
loopne
jne
sbb
push
int
jge
jae
jmp
ficompl
dec
cmp
test
mov
xchg
out
je
xchg
cmp
jge
mov
mov
repz
fdivrl
pop
hlt
mov
push
filds
jbe
lretw
cmp
stos
inc
jecxz
fcmovu
mov
scas
and
lcall
mov
jg
adc
dec
cmc
sahf
fcomps
daa
call
adcb
test
mov
dec
add
cmp
adc
sbb
testl
or
mov
scas
lret
mov
sub
int3
stc
or
hlt
xor
mov
aaa
ljmp
add
xor
popa
cld
mov
loop
xchg
loop
pushl
insb
out
inc
sbb
adc
push
loop
or
pushf
mov
jo
sub
inc
lcall
xchg
insb
lcall
dec
xchg
cs
push
pop
mov
and
sub
and
lods
pop
mov
mov
pop
jae
fistpl
pop
int3
fidivrs
call
pusha
cltd
jmp
shlb
push
jp
sub
aas
add
jno
fistpl
inc
mov
cmp
and
out
je
adc
push
xchg
sti
loop
and
mov
push
out
sub
adc
cmp
ret
data16
jno
push
push
mov
movsl
lods
frstor
movsl
imul
call
fs
pop
mov
test
sub
push
lret
jecxz
and
push
fsubs
sbb
nop
ja
clc
cmp
jo
lea
pushl
repz
adc
scas
fsubr
mov
dec
ret
adc
jo
xchg
add
arpl
add
das
ss
sbb
ljmp
mov
dec
mov
xchg
jg
dec
lcall
jle
jae
adc
into
into
xchg
inc
fs
add
sbb
adc
inc
mov
fisubrs
inc
loope
mov
call
addb
jbe
mov
jns
bound
sti
push
lret
sbb
ret
sbb
sub
lahf
cmp
mov
test
mov
push
jae
sbb
mull
and
sbb
or
rol
fstl
xlat
mov
add
cmp
or
cltd
out
hlt
cmc
jge
jns
add
dec
sub
mov
xchg
xchg
sbb
sub
in
ja
fucom
loopne
xor
adc
dec
mov
add
mov
sahf
fidivs
jb
inc
in
test
xchg
pop
dec
imul
sbb
jbe
fcmovbe
daa
mov
mov
movsb
mov
std
mov
jmp
lcall
mov
pop
jae
sbb
mov
pop
mov
mov
stos
mov
mov
or
jns
pushf
adc
mov
div
add
xlat
stc
push
popa
imul
push
repz
ljmp
das
pop
mov
aam
sub
shlb
loopne
sbb
sbb
cmp
test
jo
push
je
sub
sub
fxch
mov
movsl
inc
and
pop
movsl
pop
mov
xlat
lods
inc
icebp
mov
pusha
das
lds
divb
pop
sub
lods
icebp
and
mov
sbb
and
out
imul
xchg
mov
lret
pop
cltd
dec
nop
mov
cld
sahf
cs
push
jl
cmp
or
mov
push
mov
dec
movsb
std
jne
pop
mov
scas
xchg
dec
scas
insb
aas
popf
pop
cld
jno
outsb
int3
mov
mov
cmp
push
add
fistl
insb
add
stos
pop
push
aaa
test
adc
mov
loope
jecxz
gs
sub
ss
add
mov
shll
iret
call
inc
add
std
jecxz
sbbb
xchg
dec
test
out
or
jne
cmp
ja
and
sbb
iret
pushf
mov
hlt
mov
jle
jmp
jg
popa
cmpsl
enter
fstpl
cltd
and
stc
loop
mov
pushf
and
pop
pop
into
ret
lret
outsw
rolb
mov
adc
adc
mov
push
mov
mov
jb
cli
scas
inc
fwait
into
std
mov
dec
out
xchg
and
pushf
in
dec
inc
xchg
ret
mov
mov
les
shr
jp
das
mov
popf
aas
jnp
jb
fidivs
imul
aad
jmp
jo
cmp
in
cwtl
ja
and
push
adc
pop
lods
and
lcall
or
clc
loope
push
fsubs
cmc
jb
pop
inc
bnd
cmpsb
cmp
pop
dec
lahf
sub
jp
sbb
popf
mov
inc
or
jle
fucomip
in
clc
push
hlt
mov
hlt
movsb
inc
dec
push
enter
lcall
ret
arpl
aas
fs
pop
ret
out
adc
outsl
mov
in
int
ficoml
mov
dec
jne
lret
hlt
fcomp
je
cltd
inc
movsl
sub
imul
xchg
shll
add
std
pusha
add
or
lahf
cmp
fwait
mov
and
dec
jge
test
inc
test
jl
adc
std
mov
mov
inc
inc
jmp
mov
add
lahf
jne
scas
push
cmp
pusha
aad
fisubl
icebp
imul
cmpsb
mov
insb
popa
andb
stos
adc
sbb
mov
sub
dec
fbstp
popf
mov
sbb
push
addr16
outsb
inc
test
lods
jnp
lret
addr16
xor
cltd
inc
add
mov
mov
push
mov
enter
adc
mov
andb
and
mov
inc
push
xorb
into
sub
std
xchg
pushf
push
movsl
inc
out
fimuls
rolb
inc
insl
movsb
cli
mov
add
cs
mov
fcomip
inc
mov
push
jne
cmp
jno
sarb
push
cmp
mov
pop
popf
scas
or
int3
mov
xchg
push
mov
sub
mov
jbe
mov
mov
dec
mov
jmp
inc
xor
add
jecxz
dec
or
in
adc
xchg
pop
iret
or
repz
divb
loop
cmpsl
sub
popf
iret
cmp
dec
aad
mov
xor
pop
push
mov
mov
jns
or
and
pop
repz
shl
bndstx
jae
push
into
fistps
popf
pop
mov
jnp
mov
mov
inc
and
jg
pushf
or
lock
shll
rcll
jae
push
loopne
mov
inc
or
push
rclb
jmp
mov
jbe
lock
mov
pushf
arpl
aad
lahf
inc
call
rclb
shll
and
cmp
pop
mov
addl
mov
ficoms
movsb
mov
shld
jno
mov
xchg
and
xor
adc
pop
adc
xor
out
nop
mov
push
or
pop
jecxz
ja
jge
pop
pop
test
pusha
imul
shlb
push
xor
cmc
addr16
iret
xchg
mov
or
ret
adc
addr16
sbb
in
jb
andl
sbb
imul
dec
pop
pop
xchg
push
sti
das
or
inc
sarl
pop
imul
test
push
mov
daa
sub
xor
data16
hlt
dec
add
push
mov
pop
sti
xchg
test
sub
pop
int
jnp
ljmp
adc
mov
lret
int3
outsl
pop
int3
dec
pop
out
shrl
das
cmc
jb
in
orl
mov
pop
jg
cmp
pop
xor
pusha
inc
pop
pusha
xor
dec
jae
pop
and
sbb
mov
and
xlat
or
daa
push
pop
stos
imul
lahf
or
mov
cmp
cmp
int
inc
sarl
sahf
jge
jae
sahf
popa
std
int3
jle
mov
aas
lods
push
cmp
shrl
xchg
cs
insl
cmc
adc
les
or
adc
int3
cltd
mov
pop
lcall
lahf
mov
or
filds
push
dec
cs
cltd
rcll
pop
push
sti
mov
daa
mov
cltd
xchg
pop
test
pushl
sbb
cmpsl
sub
pop
pop
adc
xchg
insl
mov
outsl
mov
cs
out
jnp
in
sbb
jmp
stos
popf
sbb
rclb
mov
mov
mov
xchg
in
mov
test
or
lods
or
stos
fisubrs
mov
mov
push
popf
xchg
pop
test
outsb
push
dec
jmp
add
adc
clc
std
and
or
pop
clc
mov
outsb
cmc
scas
lds
lock
jne
mov
std
inc
nop
sub
sub
bound
repnz
aaa
xchg
subl
std
incl
push
or
and
js
out
or
movsl
ret
push
ret
xor
add
movsl
stc
or
scas
mov
mov
test
sub
sub
pop
repnz
push
push
jmp
cs
push
adc
addr16
loope
mov
hlt
fucomip
push
aam
sub
xchg
in
sub
pop
fdivrs
loope
fdivrl
loopne
gs
je
mov
add
into
sub
adc
inc
mov
int
iret
mov
loope
sbb
das
shr
scas
daa
mov
lods
test
aad
inc
mov
ret
mov
movsl
subl
push
jg
sbb
jmp
sbb
push
hlt
sarb
xchg
std
sub
jbe
mov
clc
jo
or
ss
dec
mov
jns
sub
jmp
jae
dec
imul
inc
xchg
xchg
pop
jecxz
daa
mov
roll
enter
mov
inc
es
pop
dec
adc
sub
mov
xor
sub
pop
dec
push
jae
data16
pop
in
cwtl
fld
jmp
mov
mov
lret
jno
fdivs
fs
aam
jmp
sbb
sbbl
pusha
jl
mov
inc
pop
dec
mov
and
mov
cld
imulb
fiadds
fiadds
iret
loope
notb
ja
pop
xchg
jne
scas
mov
dec
test
jle
fadds
fwait
pop
rcrl
adc
dec
arpl
adc
nop
sbb
add
push
je
out
jl
sbb
pushw
push
stos
or
dec
mov
loope
rcrl
mov
imul
ss
dec
js
xchg
mov
cmp
inc
movsl
push
add
mov
mov
int
in
lds
shll
scas
inc
adc
lock
push
ja
and
out
xchg
mov
or
stc
cmp
push
test
int3
push
stos
sub
in
lret
nop
xor
cmpsb
repz
push
add
or
jecxz
sbb
enter
test
rcl
jns
dec
je
ja
and
out
push
fidivrl
xor
subb
lea
mov
xor
rclb
push
test
push
mov
rcl
add
call
mov
nop
jle
jns
xchg
pushf
shrl
sub
jne
std
or
outsl
enter
or
fdiv
push
shlb
test
push
fdivs
aad
enter
cmp
cli
mov
mov
ljmp
pop
sti
mov
sbbb
push
movsl
jg
movsb
mov
dec
mov
xchg
mov
cmp
fidivrl
jns
jo
adc
mov
cld
out
movsl
dec
cmp
in
addb
xchg
lods
addr16
in
add
jo
xchg
negb
mov
sbbb
nop
xchg
outsb
insb
mov
xor
sub
sbb
mov
outsl
jns
loop,pt
xor
fstpt
js
int
mov
mov
shll
addr16
xorb
jle
jmp
loope
pushf
inc
insl
lret
fwait
and
orl
mul
mov
jg
push
cmp
in
xchg
add
sarb
mov
pop
je
xchg
fadds
sub
xorl
sub
mov
pop
aad
sbb
in
pop
andl
xor
in
sub
stc
ljmp
mov
in
dec
not
insb
ss
cs
fnstenv
xor
ss
lds
jl
rorl
push
lahf
adc
cmp
push
and
pop
xchg
shll
dec
xchg
bound
sbb
outsl
fdivr
xchg
push
pop
push
mov
pop
xchg
je
loope
stos
ret
aaa
clc
mov
imul
jp
mov
loope
add
dec
xchg
mov
test
adc
pop
mov
push
inc
sar
mov
rdmsr
jb
push
das
or
cmp
or
lahf
lcall
and
out
xchg
repz
pushl
out
xchg
ret
orb
sbb
inc
clc
in
lock
mov
sbb
das
leave
rcll
dec
push
fildll
inc
pop
adc
push
out
pop
stos
inc
sub
sbb
loopne
jp
cltd
out
mov
pop
inc
test
pop
inc
inc
outsl
xchg
clc
pushl
in
push
pop
mov
arpl
rcr
mov
jl
and
scas
lret
cmp
jbe
mov
jecxz
pushf
jecxz
push
inc
xor
call
popf
pop
mov
inc
mov
and
imul
push
xor
lahf
call
daa
adc
inc
shll
adc
imul
inc
pusha
iret
jmp
and
ds
push
mov
pop
lcall
xchg
into
mov
icebp
test
add
test
dec
fcompl
into
dec
daa
je
xchg
mov
push
nop
sbb
inc
jo
repz
cwtl
ljmp
adc
gs
loop
call
fbstp
shll
cs
mov
or
test
mov
fwait
int3
and
lods
adc
mov
sub
pop
mov
lea
movsb
mov
xchg
cmp
clc
push
jbe
mov
popf
int3
iret
cmpsl
movsl
outsl
adc
out
addr16
ret
pop
pop
sahf
arpl
data16
mov
sub
push
xlat
test
xlat
insl
add
ljmp
pop
sub
sbb
push
push
rorl
cltd
adc
adc
pop
pop
nop
pusha
mov
subb
mov
lods
call
loopne
divl
mov
xor
sub
inc
mov
jne
push
sbb
aam
dec
and
out
mov
xchg
nop
roll
fwait
mov
lock
add
in
in
xchg
mov
and
adc
jl
cld
inc
inc
and
stos
xor
mov
mov
xchg
loopne
sahf
shrl
jbe
xchg
jmp
sub
push
cmp
sub
cld
xchg
fwait
in
dec
js
cli
mov
push
lods
out
test
fucom
push
jnp
xor
arpl
sarb
pushl
pop
shrl
sub
addr16
cmp
ret
inc
mov
andl
int
add
loopne
in
fs
or
sbb
je
jl
mov
mov
adc
test
dec
scas
call
pop
mov
aam
cmp
xchg
int3
inc
pop
mov
push
std
sahf
iret
in
dec
mov
scas
pop
rep
repnz
data16
and
lods
and
test
imul
movsb
push
or
cmp
scas
adc
mov
sbb
cmp
lock
lcall
mov
adc
dec
dec
or
xchg
xlat
pop
sub
push
add
jae
fmull
mov
les
and
ret
and
cs
and
cmp
cmpsl
add
xchg
xchg
mov
adc
cmp
dec
enter
sbb
cmp
or
jecxz
or
mov
jle
icebp
int3
lock
repz
push
adc
in
cmp
mov
popl
dec
dec
mov
dec
lahf
arpl
push
mov
in
and
cmp
aam
mov
not
fistl
js
dec
daa
xor
push
das
nop
es
lock
adc
mov
shlb
sub
rcll
sub
push
and
aaa
fs
and
add
rorl
clc
add
std
stc
stc
xor
pop
fidivs
mov
repnz
mov
mov
push
sbb
xlat
roll
pop
hlt
cld
movsb
fnstcw
mov
rorb
sub
sub
push
jecxz
jo
push
notl
mov
lahf
rcll
loop
addr16
xchg
jle
jb
iret
pop
push
cmp
xor
aam
ret
cmp
pop
dec
and
inc
sbb
rorb
test
icebp
rcll
mov
jle
scas
inc
test
mov
daa
inc
cmpsb
cmp
push
xor
mulb
repz
in
xchg
jae
dec
xor
xor
fisubl
test
adcb
leave
adc
stos
sub
test
idivb
lea
sbb
loop
les
test
test
fldenv
rcl
dec
jns
adc
inc
dec
jp
in
add
dec
cld
cltd
gs
and
cmp
cmc
cmp
jns
mov
stos
shlb
leave
sub
movsl
or
iret
fdivl
cmp
inc
lret
lods
dec
enter
inc
aam
lret
adc
jbe
pop
mov
cmp
and
cli
test
sti
das
xchg
or
mov
sbb
jae
clc
mov
push
rcl
call
into
pop
mov
pusha
add
jo
mov
or
cwtl
sub
sub
inc
scas
or
arpl
or
scas
loope
test
mov
scas
outsl
cltd
dec
lcall
pop
and
cwtl
aad
fdivrs
fisubl
addr16
aas
cmpb
or
test
insl
mov
sbb
and
dec
loopne
jns
jg
movsb
mov
dec
dec
sub
jb
or
int
sbb
cmpsb
fisttps
mov
mov
lds
sub
mov
jg
xchg
dec
shl
js
mov
push
std
mov
and
out
test
mov
inc
jb
mov
stc
lods
xor
cmp
mov
sub
or
mov
mov
lods
cmp
mov
add
les
leave
mull
call
dec
push
mov
adc
pop
mov
leave
pop
cmp
sub
outsb
and
mov
stos
cwtl
jmp
fsts
sbb
lea
add
adc
sub
movsl
outsb
fisubrs
push
push
iret
sbbb
or
mov
popa
pop
jne
xor
pop
or
daa
test
mov
lea
es
lret
nop
andb
mov
fcoms
sbb
mov
mov
das
xor
dec
test
xchg
add
icebp
mov
rorb
test
sub
adc
sub
push
push
jmp
add
mov
or
stos
test
in
lret
sahf
fdivr
in
orl
push
push
mov
lret
push
cmp
and
scas
push
add
psrlw
fistl
pushf
aam
cwtl
inc
dec
hlt
adc
sub
sahf
dec
dec
in
out
pop
mov
iret
mov
test
test
out
inc
cmpsb
mov
xchg
test
cs
inc
cmp
std
inc
or
outsb
shll
inc
dec
insl
mov
sub
add
pop
xchg
sti
outsb
xor
push
fsubr
lahf
dec
movsl
movsl
test
or
scas
add
jmp
imul
xor
fsubrl
lock
out
mov
aam
pop
add
imul
addr16
jl
ret
add
pop
call
xor
sub
in
out
into
jmp
lret
cmp
xchg
fimull
sbb
lahf
sub
mov
lods
fwait
push
pop
sub
std
adc
ret
aad
bound
pop
or
add
add
mov
xchg
ja
adc
ds
rcll
fsubrl
scas
xchg
xchg
cld
or
xchg
and
ljmp
cmpsl
ficompl
add
jmp
jnp
mov
mov
call
or
and
ficoms
fadds
in
adc
movsl
sbb
jo
test
pop
mov
adc
insb
loopne
cmp
xor
mov
mov
gs
lea
nop
push
cmp
fsubr
jns
lock
scas
or
push
and
test
jmp
mov
fwait
lret
mov
fnstcw
arpl
scas
nop
rorl
push
xor
and
loopne
xor
and
in
or
jbe
dec
xor
addr16
fs
cli
xor
out
sub
loop
push
lahf
mov
xchg
movsl
sbb
pop
push
jb
lock
pop
lahf
mov
lcall
hlt
jge
adc
lock
int
out
xchg
movsl
stos
outsb
iret
cmp
fwait
or
fwait
adc
jmp
mov
rcr
testb
gs
jmp
jae
add
mov
lret
stos
push
xor
les
cmpsb
lret
cmpsl
fsts
xchg
cmc
sahf
sbb
ret
xor
jb
pop
sti
add
add
add
rorb
aam
add
into
or
enter
mov
adc
mov
adc
lea
sbb
mov
inc
mov
add
jecxz
sub
dec
hlt
stos
loope
dec
adc
pop
loop
lret
cld
inc
lods
jp
js
std
in
cmpb
repnz
sahf
ja
dec
cli
inc
loope,pt
ja
sbb
lods
mov
test
movsb
es
clc
xchg
add
loop
pusha
and
cmp
repz
sub
add
js
jl
jo
lret
xchg
mov
sti
add
lods
dec
inc
jge
jp
sub
jecxz
sti
adc
push
dec
stos
cmp
cmp
push
sbb
xor
or
std
push
pop
or
test
enter
jae
sti
test
out
add
ljmp
jns
push
fsubrs
ds
inc
cmp
push
xchg
lea
inc
movsb
sbb
and
xor
push
jmp
cld
test
lds
adc
dec
pop
cmc
jmp
jns
dec
inc
push
jb
pop
push
push
mov
test
mov
adc
jnp
sbb
mov
adc
data16
scas
sbb
test
daa
out
pop
mov
out
cld
push
enter
orl
clc
xor
enter
mulb
std
pop
dec
pop
push
fcompl
stc
mov
pop
test
lock
out
rep
cmpl
cli
lds
imul
jp
pop
cmp
inc
sarl
mov
cwtl
outsb
sbb
mov
gs
adc
pop
repz
rol
pop
out
sbb
test
adc
cs
pop
cmp
adc
fmull
out
mov
xchg
lret
sbb
jmp
sti
add
ret
and
in
and
cmp
daa
leave
popf
daa
fsts
imul
lods
mov
mov
lret
adc
aas
inc
and
add
repnz
mov
dec
xchg
mov
scas
into
pusha
sub
sbb
std
sbb
sbb
sub
shrl
cmp
dec
mov
outsb
notl
mov
adc
xor
adc
push
ss
repnz
fwait
jno
aaa
mov
xor
ret
add
xor
cmp
mov
pop
push
mov
in
xchg
aas
fdivs
mov
jl
outsl
adcb
push
cld
mov
xchg
sbb
jmp
mov
lahf
cwtl
fcomp
mov
rclb
mov
scas
mov
cwtl
mov
outsb
sbb
mov
push
enter
cwtl
lcall
add
rcrl
pop
push
lcall
sti
fcoml
mov
mov
gs
mov
test
fcmovbe
fcomip
cwtl
mov
roll
dec
fadd
aam
mov
aas
dec
inc
cmp
scas
sbb
jns
fsubl
fistps
pop
xchg
mov
repnz
movsl
fwait
in
mov
mov
lret
ds
mov
popa
jg
pop
dec
es
or
xchg
xchg
and
int
inc
jne
cwtl
adc
mov
mov
loope
jge
rol
fcompl
shl
cli
mov
adc
cmpsl
mov
fwait
cs
cmpl
leave
lods
jne
cli
mov
enter
cwtl
push
dec
mov
dec
mov
jl
mov
mov
mov
mov
lahf
aaa
mov
add
add
mov
xor
bound
popa
inc
mov
je
aaa
jnp
loop
into
or
lock
jle
test
dec
jg
imulb
popa
xor
jb
dec
lock
push
out
ret
stos
cs
inc
xor
xchg
mov
aad
xchg
adc
push
sti
aam
ja
xchg
mov
sarl
push
cmc
leave
mov
leave
ljmp
dec
out
xchg
in
mov
pop
mov
mov
sbb
cmp
dec
in
ljmp
imul
clc
lret
cmpsb
cmp
imul
xlat
into
pop
mov
cli
mov
dec
sbb
mov
mov
in
insl
and
jge
jg
jl
pop
popa
dec
cmp
cwtl
or
aad
in
outsl
stos
xchg
xchg
js
jns
pop
lahf
jbe
ja
jb
iret
pop
arpl
pop
clc
xor
in
jnp
sub
mov
rorl
repnz
lret
lock
xchg
sti
leave
gs
stos
mov
push
std
sbb
rcr
jb
adc
hlt
das
push
cmp
out
xchg
mov
stc
test
push
jb
ret
negl
sahf
scas
stos
xchg
mov
mov
das
and
data16
cmp
xchg
repz
mov
mov
pop
test
ljmp
push
arpl
inc
cmp
xchg
gs
xor
outsb
and
popa
cmp
test
test
jle
iret
xchg
call
jno
rcr
and
jo
imul
or
cld
lods
jno
insb
fld
pop
shr
or
cs
adc
bound
jle
jb
pop
xchg
or
push
fdivr
inc
inc
loope
test
push
mov
pusha
cmp
lahf
sbb
push
leave
inc
mov
pop
bnd
daa
push
fstps
dec
cltd
push
sti
out
cmp
pop
clc
pop
js
xchg
sbb
jecxz
xchg
add
out
sub
pop
cmc
popf
push
cs
testb
out
pop
pop
in
mov
sbb
cmp
ja
jge
push
push
sarl
shrb
gs
and
lret
lret
cld
cwtl
inc
fwait
arpl
clc
push
nop
in
subb
pushl
clc
mov
mov
xor
sub
pusha
mov
pop
dec
jmp
sub
mov
jae
push
fmuls
andl
push
jp
mov
cmc
lcall
jns
push
jnp
int
arpl
mov
pop
movsl
sti
mov
cmp
sbb
xor
mov
xor
roll
add
ss
push
cmp
loop
jmp
mov
subl
jmp
xor
inc
fdivs
test
jmp
adc
push
popa
mov
push
mov
xchg
shld
cmpsl
shrb
out
popf
loope
dec
sub
push
cltd
mov
inc
popf
adc
pop
insb
insl
adc
fldcw
popf
cmp
push
or
jecxz,pt
jp
and
andb
sarl
in
stos
repnz
or
xor
scas
dec
clc
xchg
mov
xor
int3
mov
dec
test
inc
adc
xchg
and
in
vmovntps
fwait
jecxz
pop
enter
sti
mov
fistpl
dec
mov
lcall
call
pop
xor
mov
push
repnz
lea
dec
push
inc
xchg
mov
push
push
cli
xor
jns
mov
je
leave
mov
sub
push
mov
leave
fstpt
mov
sub
popa
sub
shr
jae
add
das
inc
sahf
jnp
inc
push
sub
sbb
cltd
push
mov
pop
jp
call
jle
cmp
pop
aad
je
dec
cmpsb
jne
push
jb
inc
lahf
fldt
pop
fisttpll
pop
cmp
out
cmp
imul
pop
sbb
test
sbb
mov
push
fs
lods
or
movsb
xor
sub
insb
data16
push
mov
dec
mov
lcall
ds
xor
fstpt
xor
dec
cmp
fmuls
pop
xor
sti
ds
and
mov
outsl
jo
jne
or
pop
or
cmp
clc
add
sbb
lcall
lahf
dec
loop
pop
adc
pop
cld
jmp
roll
into
lret
stc
inc
lods
int
jnp
int3
xchg
bnd
int3
fs
cwtl
jae
xchg
sub
push
pop
fucomip
adc
rcll
mov
jne
xor
scas
ss
pop
ljmp
lret
mov
push
icebp
xor
addr16
sbb
push
dec
push
das
push
sbb
ror
in
pop
fisubrl
jo
sub
mov
in
mov
test
push
sub
sbb
enter
push
in
inc
inc
jecxz
out
sub
lcall
mov
jae
ja
fcmove
inc
or
push
and
add
jae
cld
mov
push
push
outsb
and
xchg
je
pop
inc
pop
pop
inc
in
xor
pop
xchg
mov
test
or
jno
test
movsl
xchg
mov
mov
inc
cmp
sbb
or
sub
sub
add
pop
loope
loop
jbe
cli
outsb
dec
lahf
and
sbb
mov
jecxz
daa
jnp
sub
les
push
push
push
bound
and
xchg
fs
sbb
add
movsb
pop
aas
out
jbe
or
mov
sahf
rclb
imul
pop
fs
clc
inc
and
addr16
mov
in
stos
push
jp
xchg
cli
push
in
and
addr16
add
jmp
insb
nop
or
dec
jmp
xor
jge
fists
mov
jae
add
xor
or
orb
lret
xchg
lret
xchg
mov
inc
insl
test
push
pop
dec
add
lock
frstor
mov
clc
add
loopne
loope
inc
ds
gs
test
push
leave
sub
and
in
jmp
packssdw
ss
loope
jecxz
popf
out
cmp
stos
xchg
cmc
mov
popa
mov
fmuls
int3
mov
dec
dec
cs
faddl
push
or
call
insb
sbb
jae
mov
stos
add
lret
insl
adc
sbb
pop
clc
sub
pop
or
addb
vcvtsd2si
andb
es
fcoml
nop
sbb
bnd
adc
xchg
iret
cltd
enter
dec
fldcw
sub
int
and
nop
inc
pop
push
add
xor
mov
inc
adc
in
inc
lret
fldln2
ljmp
icebp
aam
imul
scas
pusha
mov
dec
mov
mov
lods
sbb
cli
add
cmpb
icebp
imul
repnz
mov
adc
stos
lret
das
cmp
adc
xor
clc
pop
inc
mov
pop
adc
loopne
and
mov
rcl
out
cmpl
aad
inc
push
cmp
pop
das
xor
out
iret
repz
xchg
xchg
or
rcrb
fisttps
or
lods
daa
shlb
scas
outsl
cmp
dec
dec
cmp
imul
or
nop
pop
inc
push
lret
pop
adc
aam
test
clc
bound
pop
mov
sahf
gs
icebp
or
push
movsl
push
shll
scas
pop
ret
cmpl
lds
andl
pop
or
lea
xchg
xchg
test
push
sbb
pop
pop
add
mov
mov
sub
dec
mov
test
outsl
lret
adc
lcall
cli
xchg
insb
and
add
lcall
loop
xchg
mov
int3
adc
out
mov
or
pop
out
sti
popf
xor
and
xor
dec
aas
dec
push
add
sub
outsl
repnz
in
scas
mov
mov
sub
data16
orl
mov
push
mov
pop
jne
add
int3
xchg
ret
lret
mov
out
inc
std
mov
insl
adc
test
lahf
data16
xor
mov
cwtl
xchg
rclb
cld
mov
or
inc
push
or
push
and
adc
cli
push
fdivl
jge
repz
push
jmp
pop
push
jbe
adc
fwait
xchg
sub
dec
in
xchg
pop
jbe
xor
icebp
push
xlat
cli
lcall
add
jmp
pop
lea
mov
fistpl
pop
jb
pop
add
mov
cltd
rep
jno
icebp
stos
iret
scas
push
imul
aad
cmc
daa
ljmp
push
notl
add
repnz
fcomps
icebp
cltd
xchg
decl
jae
enter
xchg
sahf
arpl
notb
jns
cltd
out
adc
shll
push
repz
mov
fdivrl
mov
fsts
sahf
sub
mov
sbb
popa
dec
lock
iret
pushf
psubsw
sahf
jo
jno
popa
ret
xchg
addr16
sbb
jns
ljmp
sbb
js
dec
jbe
cltd
jmp
mov
dec
inc
mov
add
loope
jo
fistpl
loopne
ds
cli
mov
pusha
jnp
loop
inc
pusha
mov
inc
cmc
pop
pop
adc
sbb
pushw
in
and
sbb
or
xchg
icebp
cwtl
scas
or
xchg
jb
in
call
mov
push
push
rcrl
inc
cld
cmp
sti
pop
insl
data16
orb
cs
push
lea
and
js
fldenv
and
mov
push
cmp
inc
mov
mov
ret
jae
xchg
shll
inc
adc
mov
adcb
mov
pop
xlat
movb
rcrb
jbe
addl
cwtl
cld
cs
pop
repz
and
cs
xchg
repnz
adc
fs
push
and
and
dec
add
or
pop
push
es
lret
cs
jae
pop
ud2
lock
dec
add
push
fs
sub
mov
or
fisttpl
mov
pusha
out
sbb
or
cmp
lock
push
std
pop
cmpsb
lods
test
aam
xchg
adc
mov
pop
int
mov
jle
add
mov
stos
push
rsqrtps
fwait
mov
je
jge
clc
sub
inc
stos
sbb
clc
xchg
imul
push
dec
stc
je
loopne
ret
and
scas
mov
data16
pop
sub
insb
xchg
push
hlt
divl
jnp
add
and
pop
sub
ds
mov
rolb
pop
xchg
sub
jnp
aas
data16
repz
insb
lcall
mov
rcl
lcall
in
jbe
xchg
ja
bound
or
adc
bsr
pop
sbb
loopne
add
pop
stos
scas
mov
inc
mov
jnp
xor
xor
sub
push
push
std
inc
cltd
adcb
jp
xchg
xchg
cs
repz
fidivrl
lock
and
out
ds
test
mov
out
out
test
fisttps
pop
or
lods
mov
inc
mov
jle
sbb
sbb
adc
enter
lods
pushf
push
rolb
dec
test
movsb
push
cmp
sub
xchg
fmul
push
xchg
imul
aad
stc
mov
mov
mov
mov
das
ss
push
push
jecxz
mov
mov
add
addl
fisttpl
mov
int
outsl
jo
mov
lock
sub
es
cwtl
inc
fmull
or
jge
fwait
ja
sub
mov
pop
push
and
popf
int
xor
mov
lods
mov
loope
and
ret
test
mov
jbe
fisubl
and
cmp
ficompl
cmp
push
add
jp
jo
pop
dec
adc
pop
into
addr16
push
leave
mov
stos
push
push
dec
pop
adc
in
dec
mov
jp
mov
fdivrs
ds
enter
adc
cmp
adc
add
mov
pushf
inc
flds
pop
xchg
mov
sub
shlb
cmp
stos
testl
mov
or
pop
daa
imul
ljmp
or
xor
push
xor
xchg
rcrl
sub
addl
pop
loope
lods
push
fwait
sbb
ret
ss
daa
arpl
loopne
shrl
dec
lcall
in
inc
in
add
mov
mov
xor
sub
sbb
fcmovnb
out
fbld
mov
cwtl
mov
cmp
icebp
ror
popf
test
sub
push
jno
xor
sarb
aas
sbb
mov
aaa
xchg
rolb
out
pop
mov
test
pushf
dec
negb
xchg
repz
leave
lahf
sub
shlb
arpl
js
call
hlt
mov
shll
ss
sub
push
add
sbb
lods
repz
xchg
xchg
xchg
loopne
mov
dec
adc
ja
add
invd
clc
mov
adc
stos
pop
mov
adc
pop
sahf
sbb
inc
ret
je
push
andb
es
mov
lds
adcb
shlb
sub
cmp
pop
ret
dec
aas
pop
bndldx
adc
jp
pop
in
ret
xchg
into
test
xor
fsub
movsb
cmpsl
push
pop
or
jmp
sbbb
mov
mov
aas
outsb
fldl
mov
ja
or
out
lods
adc
mov
jae
jg
pop
mov
andb
jo
movsl
pop
faddl
push
fcom
mov
jle
or
cltd
cmp
lret
out
test
push
pop
movsb
and
ja
or
loop
and
ret
shlb
cmp
ret
pop
mov
jbe
cs
das
insb
cmc
ss
in
xchg
or
add
sbb
hlt
cmc
sub
aad
cld
xor
push
sbb
add
fdivp
data16
sub
out
xchg
adc
sub
lahf
mov
push
andl
fs
in
inc
mov
cld
das
pop
dec
fucompp
xchg
push
add
loopne
push
mov
rolb
out
sarb
popa
mov
xchg
inc
stos
stos
jno
je
sub
daa
aaa
xor
ds
lcall
and
das
push
popa
mov
xchg
test
fistps
push
hlt
call
mov
aaa
loope
pop
loopne
out
mov
dec
lret
inc
adc
sbb
lahf
scas
nop
mov
jbe
lds
pushf
ss
int3
jmp
div
jg
je
pop
mov
scas
scas
out
mov
xchg
icebp
sti
mov
or
pusha
pop
out
notb
push
pop
lods
je
adc
dec
ds
xchg
imul
cmp
insb
pop
or
fisubrl
fwait
scas
adc
das
cmp
psrlw
pushf
pop
icebp
sarb
mov
sub
push
out
cmp
icebp
gs
dec
in
add
imul
inc
dec
or
pop
popa
mov
or
sbbb
adc
popa
je
jp
sahf
inc
and
xchg
into
sub
mov
ja
push
movsb
leave
pop
pop
xchg
test
xor
stos
repnz
add
call
insb
and
int3
push
cmp
pop
push
xlat
lods
das
pop
pop
pop
test
sar
shll
mov
fiaddl
pop
cwtl
fildll
fidivs
addr16
add
lret
mov
mov
xor
adc
adc
sbb
xor
in
fsubrs
sbb
cltd
pop
out
sub
scas
or
pop
inc
jmp
sbb
push
rolb
adc
mov
fwait
mov
and
mov
mov
ret
scas
cmp
push
mov
cmc
dec
cli
hlt
outsb
cmp
adc
mov
imul
cmpsb
cmpsl
cmpl
loopne
mov
lcall
pop
ret
xor
jne
cld
xchg
sub
addr16
sbb
adc
popf
lods
lret
divb
dec
sahf
and
out
mov
jecxz
inc
lahf
lahf
or
xor
sbb
add
adc
mov
sub
push
xlat
fwait
and
stos
fisttpl
bound
nop
mov
test
mov
nop
mov
mov
cmpsb
or
inc
xor
or
in
and
shll
repz
pop
sbb
lret
lods
sbb
cmpb
mov
add
shlb
jno
pusha
add
jnp
adc
xor
outsl
inc
xor
mov
mov
dec
jne
xchg
jle
fists
enter
pusha
xor
inc
add
jmp
int
ret
mov
popf
jns
add
outsb
dec
lds
lahf
hlt
inc
sti
jecxz
dec
fdivrl
xchg
and
xor
popa
aaa
outsl
repnz
roll
or
pop
xchg
xor
cs
push
mov
dec
mov
pop
mov
cs
dec
clc
leave
jno
int
push
mov
data16
jbe
or
cltd
mov
sbb
roll
mov
dec
jl
js
or
enter
pop
filds
loopne
rolb
repnz
mov
into
mov
out
loop
sbb
xlat
xor
pop
cmp
int3
scas
rorb
outsl
sbbb
mov
fadds
movsl
sbbl
mov
daa
xor
out
roll
mov
push
xchg
adcl
js
pop
imul
lods
or
xchg
movsb
insl
icebp
jnp
pop
loopne
out
jl
daa
into
cmp
xor
out
push
fisubrl
jb
cmpsb
test
js
or
mov
xchg
cli
rorb
pop
sahf
add
jp
popf
pop
jo
out
std
int
push
jmp
and
imul
push
std
in
push
mov
subb
scas
pop
xchg
inc
cmc
xchg
fimull
sub
mov
inc
cmp
dec
push
icebp
fnsave
rorb
and
or
int3
insl
mov
das
lahf
das
sbb
rol
loopne
mov
icebp
test
adc
fistps
cltd
pop
jne
fwait
mov
cmp
in
test
je
adc
rcrb
inc
sub
aam
notb
fs
and
xchg
fneni(8087
ds
xor
sbb
sbbl
or
jb
xor
lret
and
mov
or
push
imull
out
mov
mov
mov
pushl
aad
lds
sbb
xchg
mov
cmp
jns
cmpsb
mov
sbb
addr16
dec
repnz
pop
inc
cmp
shlb
cmp
cmp
clc
lcall
sbb
mov
push
and
shlb
loop
adc
test
cmpl
mov
sahf
arpl
add
popa
rol
cmp
push
lret
dec
fistps
sbb
repnz
jne
out
aaa
test
mov
push
jge
js
loopne
movb
in
push
stc
dec
shlb
aam
imul
mov
enter
pop
and
pop
ret
shlb
outsb
adc
jecxz
sbb
movsl
mov
stos
outsb
adc
or
jg
or
dec
fcmove
push
pushf
dec
xor
das
lahf
test
push
out
sub
adc
mov
sbb
cmp
mov
inc
sbb
lock
faddl
or
lret
data16
and
lea
std
mov
and
pop
aaa
in
cmpsb
pop
repnz
sub
data16
jl
push
fbld
ret
sub
addl
mov
repnz
int3
jg
lahf
xchg
mov
xchg
push
mov
pop
dec
cmc
pop
add
roll
fstl
add
das
inc
jmp
push
cmpsl
int
xchg
test
insb
adc
lea
jp
inc
or
cmp
push
ss
mov
sti
and
enter
loopne
xor
jbe
ja,pn
adc
sub
das
inc
int3
sub
jle
lock
xor
jp
jecxz
dec
cmp
xchg
mov
xchg
ss
mov
add
in
aas
push
ficompl
xor
sbb
dec
lcall
mov
outsb
cmp
xor
xchg
xchg
test
daa
data16
push
jns
mov
sbb
stc
or
addr16
hlt
or
jns
dec
clc
int
pop
dec
ss
insl
out
xchg
arpl
mov
neg
mov
cmp
imul
add
jo
jns
int
pop
sub
dec
aas
sbb
xor
inc
pop
xchg
fwait
int3
mov
and
and
dec
xor
aam
scas
inc
addr16
clc
or
call
and
pop
addr16
cli
push
movsl
push
push
xchg
in
ret
push
ljmp
mov
arpl
dec
adc
outsl
jp
cmpsb
loopne
pop
movsb
mov
adc
sub
gs
push
int
xor
icebp
clc
shl
lret
cmp
add
into
je
or
orb
cld
fisubrl
push
les
rorb
in
lcall
into
nop
mov
cld
les
xchg
mov
mov
cli
in
test
pusha
mov
mov
lds
pop
mov
jae
xor
es
mov
adc
jo
clc
pop
push
pop
out
xchg
fisubl
add
lidtl
sarb
popl
lds
jne
or
lea
rolb
and
mov
shrl
testl
and
sbb
add
mov
roll
xor
push
pop
and
pop
inc
ret
popa
pop
sub
mov
lea
inc
sub
hlt
rolb
xlat
aas
xor
cmp
into
stos
popf
mov
push
pop
jne
push
jae
test
shlb
outsb
xlat
or
es
dec
mov
fisubs
cli
jl
movsb
mov
fcoms
cltd
inc
popf
inc
xchg
into
xor
push
sahf
lds
pop
cmp
cmpsb
fimull
xor
scas
push
fimull
sub
push
add
mov
imul
sub
sti
arpl
xor
sub
cmc
cmp
fwait
lret
push
adc
loop
ja
test
rolb
mov
cmpl
rcrb
test
adc
les
movsl
xor
inc
loop
dec
mov
dec
imul
loopne
pop
jl
inc
outsl
mov
adc
lock
jnp
sbb
pop
push
sbb
mov
mov
stos
aas
mov
mov
in
and
ds
call
div
jecxz
cmp
aad
mov
cli
jae
test
sub
pushf
scas
jle
stc
leave
dec
cmpsb
or
add
insl
dec
mov
filds
xor
dec
jg
rcll
popf
cwtl
mov
aam
test
push
push
xchg
pop
adc
popf
fdivl
pop
xor
movsl
or
and
insb
movsb
insl
inc
test
add
sbb
dec
movsb
int3
add
push
loop
es
mull
js
ljmp
scas
sub
lds
and
jmp
movsl
xor
lcall
and
enter
mov
lea
lret
or
scas
int3
int
cmp
in
cmp
inc
pushf
in
push
call
push
pop
sbb
mov
mov
mov
out
arpl
and
bound
loope
sarl
xchg
push
sub
sbb
sub
inc
es
loope
xor
pusha
gs
push
sub
pop
aas
mov
cmpsb
test
out
xchg
psllw
in
cmpsl
and
sub
decb
int3
or
adc
mov
jp
aam
push
bound
xchg
sar
movsb
ja
pop
imul
repnz
popa
in
fildll
adcl
mov
popf
push
dec
mov
lretw
fsubrs
jne
es
orl
adc
pop
mov
std
roll
adc
mov
loope
imul
or
and
add
jbe
mov
add
xchg
cmp
pushf
in
faddl
dec
and
loopne
insl
rcll
mov
in
mov
iret
mov
jo
pop
int3
icebp
aas
push
dec
jle
ret
add
pop
fwait
ret
mov
imul
mov
mov
mov
cld
fldt
push
fcoml
inc
imul
mov
pop
popf
popa
mov
add
sbb
sti
pop
pop
aaa
add
jns
sub
aaa
ret
je
fidivl
subl
vpmacsdql
out
pop
push
cld
xor
mov
fildl
mov
cli
dec
jae
mov
aas
sub
jmp
int3
into
inc
pop
sub
cmp
fisubrl
cmpb
push
test
xor
ljmp
inc
adc
xchg
sub
mov
test
sbb
xchg
popf
rorl
bswap
fcoml
lea
or
sbb
mov
stc
inc
sbb
dec
lret
mov
xor
in
jle
mov
xchg
mov
cmpsb
pop
mov
cwtl
sbb
lret
dec
sub
cmp
xor
daa
mov
test
mov
mov
aaa
jle
in
jl
lret
adc
leave
aas
les
and
decl
inc
pop
hlt
lds
dec
cltd
or
mov
into
mov
je
cmpsb
lock
test
pop
out
gs
stc
movsb
push
jecxz
adc
push
cwtl
mov
es
add
out
imul
pop
or
inc
lods
ds
sub
inc
arpl
adc
popf
int3
ljmp
adc
or
sbb
in
in
xor
mov
cmp
push
addb
rorl
fmuls
stos
jne
add
decl
dec
iret
dec
repnz
pop
hlt
push
movsb
and
xchg
arpl
jne,pt
ret
movsl
push
push
leave
xchg
pop
pop
cmp
mov
inc
lods
negb
mov
mov
inc
fidivrl
mov
xchg
pop
adc
int3
xchg
lea
or
in
add
mov
jne
jle
mov
cmp
enter
cwtl
mov
xchg
cli
xor
add
scas
xchg
jo
pusha
or
pusha
jb
cmp
push
push
rorl
ficoml
cltd
adc
xorb
iret
inc
sub
ljmp
sub
mov
mov
push
mov
aas
imul
mov
shrb
ret
xlat
mov
pop
sbb
int3
repz
lret
pusha
lahf
add
add
mov
in
inc
pop
cmp
mov
test
or
cmp
xor
cmpsb
es
xchg
mov
jecxz
aam
adc
xor
sti
pop
inc
xchg
sub
cmpsl
test
cmc
lods
clc
pushf
xor
cmp
dec
mov
test
mov
cmp
and
push
pop
bound
mov
jmp
pusha
mov
les
bound
adc
in
jg
frstor
and
inc
fcmove
sub
adc
cmp
mov
add
cmp
mov
sub
xchg
ret
jmp
lods
inc
leave
hlt
out
xchg
enter
push
pop
mov
push
xchg
adcb
popa
bound
push
lcall
clc
rcl
mov
and
leave
sahf
inc
movsl
xor
cmp
sbb
xchg
outsb
fcomi
jmp
sbb
das
pop
mov
movsb
ds
cltd
lock
ret
hlt
lock
aaa
jo
and
fs
ss
dec
jmp
aam
cs
aam
or
jns
cmp
jb
mov
iret
mov
mov
jne
mov
mov
in
jb
cmp
test
or
pop
shlb
inc
adc
cwtl
out
jmp
ficoml
adcb
pop
pop
add
outsl
ja
inc
rolb
dec
cmp
xor
inc
cmp
enter
lds
mov
loopne
fwait
mov
dec
lea
push
xchg
push
inc
outsl
cmp
inc
dec
mov
jmp
xchg
mov
adc
int
cmp
lret
xor
xlat
int
mov
xchg
and
dec
sti
sub
out
push
jae
scas
mov
std
in
mov
mov
jb
ja
cltd
int
call
push
sub
popa
inc
ljmp
push
sti
lcall
sbb
jno
cmp
jne
popa
popf
imul
into
xlat
and
aaa
vpacksswb
movl
sub
sbb
mov
push
insl
mov
jmp
mov
movsb
loop
fnstcw
bound
xor
push
add
xchg
test
repnz
xchg
inc
and
int
add
ret
fcmovnbe
sbb
adc
xchg
sub
fucom
mov
mov
xor
es
mov
cmp
mov
repz
ficompl
in
inc
pop
jae
std
jle
cltd
mov
pop
xchg
jp
out
xchg
and
dec
xor
movsb
shrb
lcall
lret
mov
pop
mov
pop
sub
test
and
mov
inc
into
outsb
mov
xchg
sbb
adc
mov
popf
mov
push
or
sub
xchg
xor
cwtl
cmp
xor
mov
cli
mov
jmp
fwait
jne
cltd
fs
cmp
sub
aam
cmpsl
mov
dec
ret
data16
int
mov
add
shr
cs
push
or
jmp
xlat
imul
out
rcr
mov
xlat
mov
mov
xchg
mov
sbb
pop
addr16
aad
stc
cmp
loope
frstor
sub
or
and
dec
fwait
mov
es
das
and
push
push
out
mov
in
lret
mov
mov
sar
loope
inc
int3
popa
xchg
mov
insl
xor
hlt
sti
jmp
jns
call
cld
xlat
lret
loop
loope
or
or
fdivrl
xchg
gs
ja
lret
xor
les
jg
dec
lds
push
xor
xchg
stos
or
jecxz
mov
pop
xor
mov
pop
dec
mov
lock
pushf
scas
out
sub
lods
sub
and
dec
arpl
xchg
jne
in
aaa
pop
cmpsl
repz
mov
cmpsb
mov
js
mov
sub
jg
xchg
cwtl
adc
and
bound
into
ss
push
mov
cli
shrb
ret
ds
cmovl
insl
inc
sbb
lahf
insl
or
jb
mov
in
inc
xor
add
mov
mov
inc
enter
push
in
mov
xchg
les
cs
int
mov
mov
adc
mov
adc
iret
mov
fs
roll
xor
mov
and
insl
sahf
pop
movsl
xchg
mov
xchg
push
mov
mov
mov
dec
loope
inc
xchg
fildll
xchg
lds
pop
addb
xchg
popa
adc
les
test
fistps
mov
inc
adc
dec
xchg
push
adc
inc
bound
outsb
or
inc
fldcw
mov
dec
jl
leave
test
popa
mov
cmp
loope
scas
test
out
mov
ja
int
jmp
cltd
xchg
mov
cmp
pop
les
sahf
daa
mov
xchg
pop
cltd
push
cltd
jo
insb
ja
int3
and
ret
and
cmp
push
aam
mov
call
or
xchg
pop
adc
jge
inc
stos
testl
inc
mov
lcall
pop
stc
fsub
mov
jnp
lock
mov
and
mov
cvtpi2ps
orb
int
dec
aas
sahf
adc
inc
dec
ljmp
sub
cmc
xor
les
test
xor
jmp
std
xor
fidivrs
pop
push
sub
cli
inc
mov
or
push
sbb
imul
mov
xor
orl
cmp
movsb
bound
cmc
push
mov
in
fnstsw
adc
xchg
std
xchg
inc
sub
mov
fiadds
jne
push
add
outsl
sub
aad
adc
xchg
jge
scas
ret
stos
pusha
mov
hlt
loop
aam
mov
pop
jnp
xchg
mov
iret
cli
xlat
sahf
inc
pop
mov
jp
and
sub
outsl
cltd
dec
mov
push
nop
jmp
xchg
fldl
or
pop
inc
fidivs
mov
mov
pop
js
dec
or
outsl
fs
push
lods
fisubrs
or
ret
push
nop
out
ret
ljmp
jne
inc
push
lds
std
imul
add
sub
jmp
push
cmp
jl
movsl
movsl
idivb
in
lcall
lret
and
call
and
das
or
test
fnstcw
adc
or
enter
push
call
lds
jne
js
cmp
mov
pop
adc
xchg
cmp
ljmp
fdivrp
jmp
imulb
mov
mov
fucom
push
movsl
inc
out
xor
fs
xchg
je
int3
movsl
or
add
inc
sbb
mov
mov
out
enter
cmp
cmpsl
sub
das
cmp
lods
into
push
rorl
clc
adc
pop
cmp
ficomps
aad
sbb
stos
mov
movsb
loop
mov
cmp
pop
addb
dec
lret
outsb
outsl
inc
in
jo
hlt
aas
flds
fisubl
sbb
xor
test
pop
or
loopne
and
sub
pop
test
push
push
btc
cmp
les
stos
sbb
aad
lods
inc
xchg
add
xchg
jle
pushf
clc
pop
lahf
jp
ret
lods
dec
and
xchg
add
out
xchg
mov
repz
pop
xor
nop
scas
daa
fmull
ret
xor
inc
or
shlb
sub
cmp
adc
push
enter
pop
iret
mov
dec
loop
loop
and
add
ret
jb
ret
mov
inc
sub
adc
lea
mov
sub
jl
subl
xchg
scas
xchg
sub
sbb
pop
mov
xchg
addl
push
sub
pop
mov
dec
xchg
pop
sub
cmp
add
fimull
sbb
es
dec
sbb
sub
inc
push
rolb
mov
cmp
stos
in
adcl
push
sbb
ja
jmp
push
std
repz
jg
lock
into
inc
out
pop
imul
jg
fistpl
insb
mov
mov
inc
clc
lock
rorb
dec
sub
popf
cmp
es
xor
sub
outsl
sbb
inc
fnclex
movsl
jmp
stc
in
dec
mov
sbb
inc
dec
fimull
mov
cs
aam
inc
pusha
adc
mov
call
adc
dec
mov
loopne
cwtl
test
fsubrl
dec
pop
imul
cmp
pop
hlt
sub
or
xchg
jmp
les
lock
adc
or
pop
pop
inc
mov
mov
test
pop
push
mov
into
rorl
adc
ss
push
mov
dec
adc
in
in
outsb
movsb
jbe
mov
mov
fistps
bound
xchg
es
leave
inc
dec
mov
aas
dec
outsl
sti
stos
sub
popf
fadd
rcrl
push
daa
mov
and
jge
xchg
mov
mull
or
mov
iret
repz
into
pop
mov
xchg
sub
or
pop
pusha
xlat
sti
stos
mov
cmp
and
jecxz
xor
xor
ja
scas
out
dec
movswl
jge
arpl
lea
fcoms
scas
push
mov
loope
mov
lcall
xchg
mov
or
insb
dec
mov
mov
pusha
lods
inc
mov
xchg
aam
fsubs
imul
pop
in
rol
std
fadds
or
lret
pop
or
jp
jl
int3
mov
fstp
fistps
mov
aas
dec
ror
jae
je
pop
mov
xchg
int
jo
cmp
mov
in
shr
or
or
addr16
call
push
fcoml
bound
fdivrs
mov
push
sbb
leave
int
fbld
nop
adc
stc
add
int3
pop
jle
fadds
out
iret
sahf
out
inc
ljmp
jg
fstpt
push
arpl
fwait
aas
jge
dec
addps
pminub
cmc
or
shll
xchg
dec
ljmp
mov
mov
jb
out
ss
out
call
xchg
sbb
pshufw
mov
movsl
out
ljmp
stc
sub
or
xchg
aam
ja
scas
sub
adc
jmp
push
es
mov
xchg
pop
ficoms
popf
jge
das
rorl
xchg
sub
cwtl
je
cmp
repz
push
dec
js
fdivrl
aam
ss
and
pop
or
jno
arpl
in
icebp
jae
mov
dec
sub
cmp
pop
bound
out
in
mov
xor
push
inc
cmc
add
adc
scas
and
in
pop
stos
pop
dec
pop
insb
mov
or
sbb
andl
or
outsb
inc
xor
imulb
ja
add
xchg
arpl
addb
cli
scas
mov
cmp
push
push
lea
and
xchg
pop
add
and
pop
pop
pop
mov
or
push
int
repnz
mov
out
aam
push
ds
rorb
inc
or
sahf
aad
push
daa
dec
mov
sti
jl
jle
sbb
or
es
out
dec
outsb
fmuls
enter
pop
add
addb
cmp
jbe
pop
in
jg
adc
es
push
inc
xchg
rorl
fucomi
lahf
pop
dec
adc
enter
xchg
out
sbb
rolb
mov
scas
jae
aas
mov
sub
mov
lahf
inc
insb
addr16
jmp
scas
add
adc
push
mov
add
inc
jle
pop
sbb
rep
ret
andb
int
cltd
stc
push
loop
fs
or
cmp
lret
lock
sqrtps
push
jne
lahf
adc
cmpsb
sub
mov
scas
cmp
test
rcl
xchg
in
or
divl
sub
and
stos
xchg
insb
pop
mov
pop
dec
mov
scas
fldenv
and
ja
inc
movsl
test
sub
stc
mov
push
out
stc
add
loopne
and
dec
jo
mov
ja
movsb
fcomps
push
idivb
mov
pop
dec
pop
sarl
repz
sub
jno
xchg
xorl
adc
popa
pop
jns
test
pop
sahf
jmp
pop
call
xor
cmpsb
jp
fidivs
rol
adcb
call
mov
jnp
iret
xchg
rol
lahf
dec
gs
andb
jno
imul
rcll
hlt
add
mov
mov
stos
bound
cmp
das
or
in
adc
pop
jge
inc
mov
mov
subl
lret
loopne
loopne
mov
lods
or
lea
mov
popa
in
and
xchg
test
fwait
jmp
pop
stos
fildl
outsb
mov
fdiv
sbb
outsl
sub
push
cmp
int
mov
and
xchg
adc
fmul
cmp
jp
push
in
xor
pusha
sbb
shl
sub
das
push
mov
mov
outsb
inc
in
test
lahf
mov
dec
daa
xchg
jae
repnz
add
dec
roll
mov
bound
hlt
mov
cmp
sub
in
nop
jle
inc
cld
pop
and
add
pop
push
mov
lock
add
hlt
adc
add
xchg
adc
test
pop
lahf
js
mov
imul
cmp
push
orb
scas
xchg
or
cmp
test
and
mov
jle
ds
jge
sbb
cltd
jmp
jae
push
cmp
mov
popa
not
pop
insl
jmp
out
cs
sub
pop
std
repnz
add
int
fsubs
inc
add
loope
sti
das
imul
ret
popa
mov
lcall
jns
out
adc
mov
cmp
clc
rcl
filds
cmc
pop
jge
mov
and
jecxz
inc
shl
loope
stc
mov
daa
orb
stos
pop
jne
adc
add
push
mov
fstpt
push
cmp
cmp
xchg
sub
sub
faddl
or
mov
mov
popf
int3
xchg
cwtl
xor
int3
test
pop
cli
lods
mov
or
push
cmp
push
cmp
add
xchg
icebp
xor
scas
fwait
ljmp
pop
or
in
cmpsl
clc
not
jne
mov
in
pop
add
add
imul
adcl
and
scas
inc
repnz
or
pop
mov
push
nop
or
nop
pop
es
inc
sbb
xor
scas
icebp
dec
jp
jmp
push
sub
pop
out
xchg
aam
sub
lahf
xchg
ds
aam
dec
push
inc
sbb
fsub
add
and
insl
cli
adc
inc
mov
cmp
sbb
mov
sbb
mov
mov
in
jae
out
and
xorb
adc
jae
cld
sarl
aam
jl
lea
ror
dec
lret
mov
cmp
stos
jmp
into
shrb
mov
in
xchg
mov
lcall
ret
daa
stos
icebp
xor
lcall
add
mov
mov
lods
push
jno
jnp
aaa
mov
les
xchg
or
fisttps
pop
mov
mov
lcall
int
sbb
xchg
stc
cmpb
dec
jle
jne
in
fcoml
shrb
push
xor
leave
push
cltd
lcall
bnd
int3
pop
dec
mov
cmp
icebp
pop
fstps
mov
add
xlat
mov
sbb
cmp
ret
adc
fwait
das
jge
add
push
daa
xor
ror
cmc
and
add
xchg
lret
jbe
or
sbb
add
insl
xlat
jg
sbb
popa
bnd
push
je
dec
mov
aad
cmpb
xchg
pop
std
xchg
fwait
dec
jle
and
les
roll
xor
sub
js
cmp
into
xor
ds
or
scas
loop
pop
and
push
adcb
sub
aas
dec
fcomps
out
inc
add
jno
arpl
ficoml
test
mov
cmpsl
sub
adc
mov
jle
ljmp
xor
data16
xor
sti
or
adcl
mov
mov
stc
ss
sbb
fs
stos
xor
adc
xor
mov
cwtl
in
lea
mov
stc
and
cmp
lds
xchg
movsl
lret
repnz
push
jo
sbb
lods
sbb
mov
xchg
inc
mov
rclb
jecxz
push
mov
mov
shrl
sbb
mov
dec
push
cmp
movsb
iret
jb
inc
or
fsubs
addb
pop
loope
pop
repnz
xchg
or
cmp
lcall
mov
mov
lods
fsub
mov
mov
inc
or
jp
addr16
and
dec
and
iret
push
pop
test
mov
test
xor
outsb
mov
inc
imul
cmpb
out
std
xchg
fcompl
rcl
sti
pop
test
xchg
jnp
pop
jg
mov
push
pop
lcall
rcrb
cltd
hlt
cmc
mov
dec
mov
push
and
rol
test
push
pop
xchg
and
stc
pop
es
push
mov
popf
xor
andb
xlat
aaa
cld
out
bnd
gs
xor
jmp
inc
ja
and
adc
nop
xor
sbb
mov
shlb
inc
push
push
fimuls
inc
add
cmc
and
sbb
inc
cmp
loope
mov
fs
xorl
gs
lods
xor
xchg
or
test
add
out
repnz
and
std
dec
imul
and
enter
push
into
inc
loop
ret
mov
icebp
clc
shlb
arpl
sbb
inc
cmc
int3
xchg
cld
push
stos
mov
sbbb
adc
jecxz
pop
repz
adc
xor
xchg
movsb
push
sub
mov
mov
pop
or
fdivrs
adc
test
mov
dec
fistpll
xor
pusha
mov
test
movsl
jl
adc
mov
xchg
dec
adc
fidivs
dec
sti
mov
notb
sbb
mov
mov
adcb
arpl
sbb
aam
push
in
and
mov
mov
push
xlat
bound
adc
arpl
into
xor
mov
shlb
dec
ret
mov
test
pop
or
das
fcmovnu
dec
add
sbb
mov
ret
mov
jbe
pusha
lret
adc
or
in
jae
sub
lods
aaa
inc
sub
mov
push
mov
jle
jnp
and
push
imul
and
stos
push
xorl
dec
pop
cmp
xor
push
jmp
sub
ds
pop
dec
mov
pop
bound
push
add
enter
cltd
ljmp
cmp
cwtl
popa
shl
int3
xchg
or
add
test
jno
dec
lret
repnz
arpl
or
aaa
and
push
jns
xchg
cmp
cmc
push
sub
loop
fldl
mov
addr16
mov
ret
or
xchg
xchg
leave
push
jb
inc
mov
push
int
out
mov
seta
out
jle
leave
mov
or
xor
and
jmp
mov
adc
sub
into
pop
out
imulb
push
cli
sbb
stos
cmp
popf
arpl
jae
test
pop
fadds
mov
out
movsb
mov
mov
push
jnp
clc
xor
sbb
dec
xchg
pop
dec
pop
xor
cmp
push
adcl
mov
mov
popf
loope
push
lea
mov
les
fbstp
rep
test
in
fs
inc
push
cs
inc
xchg
mov
sub
fsubr
or
repz
aam
test
inc
push
mov
jecxz
dec
or
addl
push
ficomps
outsl
mov
enter
dec
mov
and
push
xchg
mov
or
jge
inc
loopne
mov
leave
inc
add
add
and
mov
and
jl
lret
popf
or
pop
out
jne
and
mov
notb
sbb
mov
inc
shlb
mov
xor
movsl
decl
push
pop
repnz
mov
shl
jne
mov
sti
adc
jo
iret
sbb
pop
pop
jnp
pop
push
xor
fstl
stos
mov
sarl
outsb
mov
jmp
push
sbb
and
pop
mov
sbb
xchg
xchg
or
push
scas
flds
jecxz
pushf
and
out
ficompl
inc
mov
dec
fcoms
lds
cmpsb
mov
sbb
pop
mov
inc
pushf
stos
cli
sub
das
inc
dec
push
cmp
xchg
fwait
sarb
push
cli
lds
or
ficomps
xchg
cmc
jle
sub
mov
jge
push
and
cmc
out
jl
mov
sbb
xchg
sub
mov
cmpsb
cli
or
mov
xor
inc
xchg
mov
fmull
sbb
push
fistpll
push
push
mov
out
sbb
in
cmp
add
jmp
jns
shll
and
mov
pop
jge
jg
sub
loope
insl
mov
add
sbb
cmpl
sbb
adc
mov
mov
test
fs
gs
mov
push
push
pusha
or
add
mov
shlb
in
push
outsb
inc
out
imul
mov
mul
stos
xchg
jnp
push
inc
push
pop
and
and
sbb
rcrl
jg
pop
std
shl
inc
dec
cmp
rolb
stos
or
xchg
lds
nop
push
add
std
sahf
insl
aam
cmp
les
add
adc
add
inc
mov
jg
adc
pop
mov
sbb
pop
jbe
push
pop
imul
aam
xchg
mov
lret
xchg
jnp
push
stos
mov
mov
stos
jne
les
mov
test
cld
add
das
in
add
rorb
mov
pop
mov
push
cmp
inc
ficoml
aam
sbb
enter
xchg
mov
xor
cmpsb
mov
in
push
jge
fwait
mov
aas
iret
aaa
movsb
adc
leave
ds
sbb
mov
lods
and
add
hlt
add
rolb
mov
jo
out
xorb
mov
cld
cltd
adc
in
sbb
push
xchg
mov
decb
jns
test
jne
pop
cltd
adc
push
xchg
push
nop
cmp
sahf
mov
data16
stc
lods
les
dec
movsb
lahf
addr16
repz
test
testl
jge
mov
cmp
ret
xchg
xor
fcmove
xchg
push
xlat
cmp
sbb
inc
ficoml
pop
sti
mov
adc
xor
movsl
shrb
es
push
mov
xchg
rclb
adc
xor
outsb
sub
or
scas
push
xor
insl
addr16
addr16
sub
popf
or
xchg
mov
pop
lahf
push
pop
in
fists
or
test
movsl
insl
lcall
and
gs
out
sub
addr16
ja
lcall
cmc
imul
setp
leave
cmp
rcll
or
lods
sbb
push
test
in
out
fs
inc
icebp
or
aaa
jnp
out
popa
addb
adc
push
xor
dec
sub
sub
es
or
xchg
outsb
cmp
stos
inc
stos
rorl
fadd
bound
fimuls
clc
cld
ret
jae
ret
out
pop
out
and
dec
mov
sbb
clc
inc
iret
mov
adc
fsubrs
add
push
cmp
mov
addb
sbbb
adc
or
jns
ret
fnstenv
int
stc
mov
or
cmp
lahf
rclb
fcmove
into
xlat
daa
in
lret
xor
int
xor
out
push
pop
jne
loop
pushf
fsubs
sub
xorb
loopne
cmp
std
ss
pop
or
jmp
adc
addl
xor
mov
test
popf
push
aad
mov
ds
ljmp
ss
and
into
cmpsb
jns
pop
int3
shl
jp
adc
dec
es
pusha
das
pop
push
lcall
mov
jo
push
movl
aaa
popa
cmp
or
inc
pop
cmp
and
negl
inc
mov
pop
dec
or
jg
faddl
or
cmp
push
leave
mov
jne
jo
lcall
dec
xchg
and
sub
add
cmp
cmpsb
fnstenv
jb
lcall
arpl
add
and
pop
fs
xchg
mov
jg
or
cs
aad
in
outsl
push
or
mov
cmpsl
out
aaa
lds
lods
pop
push
loopne
cmpsb
push
xchg
push
add
sbb
rol
hlt
bound
jb
jns
sbb
fistpll
mov
roll
lret
fs
lods
nop
inc
xchg
inc
into
pop
or
push
pop
test
pop
push
inc
insl
movsb
scas
mov
xor
pop
and
sub
sbbb
sub
inc
jno,pn
add
mov
dec
jmp
ret
in
fldcw
jae
xchg
mov
int
cwtl
mov
jnp
push
push
mov
push
pushf
pop
jne
mov
repz
sbb
addb
jge
cmpsl
and
push
xor
sarb
aam
gs
jge
jne
scas
popa
fcmovne
pop
sbb
jne
pop
mov
aad
pop
loopne
xor
das
aad
push
daa
xlat
test
mov
mov
lret
xchg
xchg
pop
shrl
inc
cmpsl
xor
lcall
cmp
orl
mov
xlat
push
lahf
into
push
ret
data16
cmpsb
dec
mov
mov
bound
sub
ss
sub
push
jmp
mov
mov
xchg
sbb
jmp
sbb
cltd
xlat
mov
xor
xchg
xchg
std
cmc
mov
lret
adc
stc
dec
test
fstpt
je
pop
xchg
in
sbb
in
sub
jmp
and
lds
clc
jmp
xchg
adc
out
xchg
lock
cmpsb
pop
add
rolb
jp
call
daa
cwtl
mov
cmpsl
icebp
push
ds
fisubs
std
fwait
or
in
mov
icebp
movsb
xor
inc
jns
jno
dec
lock
push
incl
jno
cmp
pop
pusha
adc
cmp
inc
outsb
fwait
xor
mov
and
jbe
pop
jae
les
mov
xor
scas
mov
repnz
ret
lahf
andl
divb
fdivr
outsb
frstpm(287
cs
icebp
xchg
call
pop
std
push
ds
xchg
adc
nop
xchg
out
push
pusha
push
mov
sbb
les
push
jge
sbb
and
xchg
lret
in
push
cs
test
push
out
sbb
or
or
and
push
call
pushf
aam
loop
xchg
pop
pop
repz
out
cmp
sbbl
jmp
sbb
mov
mov
xor
movsl
gs
pop
pop
les
imul
dec
push
inc
int
aad
pop
jne
imul
inc
sbb
bound
arpl
stos
mov
jle
dec
sar
test
mov
js
out
leave
mov
push
push
daa
addr16
cmp
lods
shrb
mov
loopne
divl
fs
cmp
test
push
xchg
cli
insl
in
pop
inc
jne
out
out
cmp
cmpsl
jno
cmpsl
push
jmp
popf
mov
mov
mov
pop
cmpsb
and
mov
dec
dec
jb
sbb
cmpsb
out
inc
push
jb
jo
orl
cmp
ja
icebp
push
aaa
in
sub
inc
pop
cmc
mov
in
in
xor
adcb
mov
or
adc
sbb
dec
add
mov
add
add
or
repnz
aaa
push
push
sbb
xor
or
add
idivl
fadds
mov
and
mov
scas
ror
fldenv
inc
ret
rcl
sbb
leave
mov
addr16
int
cltd
xchg
aad
in
lret
aas
mov
xchg
jmp
shrb
sub
addr16
mov
pop
inc
test
jbe
xor
clc
mov
cmp
notb
andb
push
aad
mov
hlt
mov
sub
cmp
inc
je
xchg
mov
or
mov
xlat
push
aaa
inc
fwait
cs
sbb
and
shlb
icebp
add
cmp
mov
jge
daa
xchg
imul
mov
fsubrl
jno
shrl
lds
mov
xchg
pushw
fld
scas
inc
add
fisubl
int3
sbb
xchg
sti
fmull
imul
xor
sbb
andl
cmpsb
mov
fisubrl
xor
inc
outsl
jl
dec
outsb
in
daa
push
pop
or
das
jp
push
dec
das
ds
adc
ss
xor
cmp
leave
bound
cmp
stos
xor
jns
add
add
cmp
dec
insl
insb
xor
mov
mov
push
data16
ja
mov
cmc
inc
push
daa
adc
mov
xor
arpl
jecxz
repnz
pop
xor
push
fdivrp
imul
push
shlb
jne
mov
mov
ret
sub
mov
mov
lock
xchg
test
pop
sahf
and
iret
xor
jp
orb
gs
mov
pop
cmp
sarb
leave
mov
xchg
pop
ret
int3
pop
loope
idiv
pop
movsl
jmp
ljmp
jge
fidivs
add
mov
inc
movsl
mov
cmp
into
sbb
sbb
mov
loop
xor
and
in
ljmp
out
jno
push
sub
add
sbb
inc
inc
mov
iret
imull
daa
rcrl
mov
sbb
mov
ja
and
or
pop
clc
xchg
inc
mov
mov
push
adc
out
xorb
lahf
and
ror
loope
sub
mov
xchg
or
orl
daa
mov
push
pop
mov
ret
sub
movsb
outsl
mov
or
pop
push
cmc
pop
fcompp
mov
cli
jg
sbb
loop
add
adc
mov
jecxz
outsl
int3
mov
insb
mov
into
int
push
mov
movsl
xor
outsb
xchg
jne
lcall
jbe
mov
int
fldenv
jae
popf
push
imul
out
dec
inc
dec
iret
fwait
out
mov
cld
mov
das
jl
or
lock
and
xlat
mov
inc
decl
mov
inc
imul
ds
or
sub
pushf
xchg
fnstsw
inc
lahf
shll
test
cli
lcall
jne
out
sarl
cmp
les
notb
ds
push
adc
je
pop
popf
xor
xlat
cld
adc
push
test
jg
add
arpl
push
pop
xchg
das
scas
add
les
inc
sahf
jp
je
mov
mov
or
mov
incl
jnp
mov
xlat
rorl
je
repz
push
jg
hlt
imul
gs
mov
inc
or
iret
cmpsl
popf
push
sub
enter
shlb
arpl
pop
addr16
jno
loope
in
addr16
mov
inc
das
testl
mov
inc
mov
inc
cmp
and
mov
ret
xchg
jecxz
sub
scas
jmp
xor
add
push
cmp
hlt
adc
ja
addl
arpl
in
fs
or
inc
sbb
lods
mov
cmc
shrl
mov
push
cmp
mov
xchg
daa
or
lret
pop
jmp
orl
ret
cwtl
mov
mov
stos
inc
dec
and
mov
lds
mov
pop
pop
fstps
or
adcl
pop
inc
pop
cmp
aad
stos
fisttpll
das
dec
inc
mov
xor
jge
popa
leave
movl
aad
pusha
aaa
mov
pushf
jmp
cmp
fsubl
aaa
push
and
or
xlat
imul
push
mov
adc
dec
enter
and
test
cmpsl
mov
rcll
pop
jnp
loop
inc
lea
mov
loopne
or
rcrl
jno
cmp
mov
popf
in
sahf
or
aad
cmovbe
rcrb
jne
xchg
movsl
shrl
and
jae
or
sub
mov
lods
pop
or
sub
repnz
mov
cld
gs
xor
inc
xchg
outsl
les
ret
sbb
sarl
xor
aad
add
in
mov
fdivs
fcmovbe
inc
and
inc
jb,pt
test
mov
fisttpl
cmp
add
adc
adc
mov
roll
cmpl
jle
and
cli
inc
mov
mov
aad
cs
cmpsl
pop
ja
xchg
icebp
fsubs
cmp
repnz
enter
mov
mov
cmp
sbbb
cmp
mov
aas
push
rolb
rcl
jmp
jae
sbb
mov
in
fnstcw
push
icebp
sbb
setae
inc
pop
loopne
jb
call
jecxz
xchg
enter
xor
fwait
xor
and
mov
leave
jbe
mov
lods
enter
shlb
sub
fadd
loopne
mov
ret
movsl
push
aam
mov
cltd
add
roll
dec
mov
daa
mov
add
outsl
xlat
in
push
jecxz
js
cmp
aad
fmull
push
adc
js
ds
mov
jbe
jl
xor
jae
bound
lds
dec
ss
cmp
jmp
push
enter
dec
cwtl
out
dec
xor
cltd
push
clc
pop
cmpsb
mov
or
movq
clc
ficoms
xor
and
int3
sbb
out
mov
mov
out
adc
push
mov
jp
jl
jp
xchg
and
lret
cmp
sti
cmp
adc
lret
cmp
bound
push
ds
out
push
sbb
icebp
clc
repnz
mov
pop
mov
mov
and
inc
mov
jge
inc
imul
fcomi
sbb
jle
xchg
repnz
in
test
mov
cltd
rcr
cld
and
pop
das
pop
fwait
test
pushf
pop
xchg
push
dec
xchg
addr16
rep
sbb
scas
cs
inc
inc
popf
push
and
fsubrs
loop
dec
lods
xor
push
or
lods
jns
and
and
jne
adc
adc
or
sbb
pop
gs
into
loope
adc
sar
cmpsb
jbe
lods
fucomi
and
xchg
ss
mov
jb
dec
jbe
andl
and
xchg
inc
push
roll
andb
aas
mov
xchg
mov
test
imul
or
xor
es
test
dec
fistps
rcll
or
test
lret
sbb
pop
fnsave
mov
ja
je
dec
jb
dec
repnz
cmpsb
xchg
adc
sub
or
out
mov
mov
mov
mov
add
mov
mov
xor
cmp
stc
jmp
sub
mov
pop
pop
shll
jae
fdivrl
es
ret
fdivr
push
xor
mov
xchg
adc
dec
push
imul
lret
push
inc
jne
xchg
or
cmp
movsl
adc
in
jmp
xchg
cmp
mov
sahf
mov
jg
and
pop
cmp
xor
cmp
push
loopne
xchg
xchg
xchg
aad
xchg
inc
ja
jns
lret
jo
xlat
adc
test
fwait
mov
mov
call
pop
add
inc
pop
fdivl
and
jl
push
jae
add
or
or
push
dec
mov
dec
ret
mov
jmp
xchg
sbb
insl
jns
or
lret
sbb
loope
jno
push
pcmpeqb
test
jl
cwtl
xchg
push
adc
das
mov
mov
lcall
xor
movsl
inc
in
or
sub
les
sbb
lock
push
pop
dec
mov
mov
add
xor
ljmp
xchg
jb
inc
dec
jb
js
jb
dec
cmp
cmp
dec
mov
inc
inc
negl
adc
imul
jbe
and
mov
out
addl
fwait
int
push
xchg
std
or
mov
daa
loop
shll
push
ljmp
in
add
cmp
icebp
bound
into
sbb
push
cmp
pop
mov
add
xor
and
or
xchg
or
push
add
add
loope
pop
mov
mov
fcoml
push
out
cmp
je
dec
xchg
dec
call
iret
pusha
test
out
scas
mov
add
or
pop
call
mov
and
cmp
mov
stos
cmp
xor
and
and
rolb
xor
add
jmp
pop
xchg
cmp
sti
cmp
inc
push
shll
mov
jle
mov
aam
in
in
daa
inc
xor
nop
xchg
dec
rclb
xchg
push
pop
jbe
mov
mov
sub
and
adc
jmp
ja
jmp
inc
mov
nop
add
movsl
movsl
dec
stos
push
ror
sahf
jg
ror
mov
fcom
and
pusha
or
inc
cmp
and
leave
enter
loopne
nop
adc
mov
push
cs
je
fwait
fs
add
and
cmp
mov
lds
cmp
and
stos
arpl
xchg
or
cwtl
ret
pop
sti
mov
cmp
sub
scas
inc
fstl
in
xchg
adc
shrl
das
pushf
mov
xor
add
popf
stc
in
or
jg
jmp
int3
mov
adc
int
mov
sti
gs
add
jecxz
sahf
cmpsl
xchg
imul
sbb
push
filds
xor
cmp
ss
iret
pop
lds
pop
cmp
int3
cmp
loopne
arpl
xchg
dec
popf
and
jge
loope
out
push
cmp
dec
aas
lcall
mov
and
out
lods
xchg
mov
dec
je
test
and
sbb
pusha
sub
pop
cwtl
or
xchg
cmp
mov
push
dec
jnp
pushf
pop
mov
lret
daa
xor
mov
ss
stos
and
jbe
leave
or
cwtl
pop
xchg
mov
out
nop
test
es
cwtl
push
pop
iret
jae
test
xor
stos
sti
mov
flds
ret
adc
push
cld
mov
jo
inc
adc
ljmp
adc
dec
pushf
sub
or
movsl
loope
jp
pop
or
ret
mov
jns
decb
push
mov
out
in
pop
cmp
lcall
movb
xchg
lcall
dec
inc
stos
xor
pop
scas
xchg
lret
imul
in
mov
test
mov
lcall
mulb
inc
and
mov
es
enter
fnstenv
jg
mov
dec
dec
fisttps
loopne
notl
jns
xchg
cld
outsb
push
push
leave
jmp
xor
iret
sbb
fisubl
lock
addr16
daa
stc
ljmp
sbb
jle
ds
or
call
notb
xlat
mov
push
les
mov
cmpsb
fsubrs
xor
out
mov
inc
daa
jge
ds
inc
cltd
cmp
ffreep
mov
aaa
jmp
mov
or
dec
std
or
enter
xchg
lds
dec
test
add
icebp
out
inc
xorb
inc
mov
dec
pop
repz
xchg
jecxz
sarl
bound
lods
popl
and
mov
int3
xchg
mov
mov
jbe
mov
mov
stc
aas
rclb
rcl
shrb
add
dec
mov
inc
das
andl
sub
pop
lods
mov
and
jns
ret
mov
xlat
movsb
lcall
call
pop
mov
mov
out
repz
inc
push
outsl
jmp
xchg
cmpsb
popf
mov
push
icebp
test
pop
testl
orb
lds
push
mov
movsb
ljmp
imul
mov
push
pop
sarl
sbb
ja
push
pop
push
xchg
enter
pop
in
ds
shr
adc
outsb
mov
orb
pusha
mov
and
mov
sti
mov
sbb
mov
call
cmpsl
dec
cmp
push
fcmovnb
sub
hlt
or
sub
xor
or
push
jb
lock
push
push
daa
sub
popa
out
inc
push
roll
pop
popf
cmpsl
mov
lcall
cmp
movsl
mov
pop
fsubrl
push
mov
loop,pn
add
and
cmpsb
rorb
pop
pop
das
ljmp
fxch
shrb
hlt
sub
cwtl
mov
dec
lds
daa
lods
sbb
inc
stos
loope
ja
xchg
cld
fwait
push
adc
popa
negb
jle
insb
stos
mov
rorb
sbb
mov
xor
out
das
lret
addb
fcmovnu
int
nop
loopne
je
mov
jg
push
insl
int3
jns
xor
test
or
inc
dec
es
js
sub
mov
daa
ret
cs
insb
jecxz
xchg
push
pop
mov
decb
inc
adc
lds
push
pop
jp
mov
pop
pop
mov
xor
outsl
push
add
mov
lcall
push
negb
mov
adc
adcl
dec
fisubrs
cmpsb
cmp
add
sbb
bound
repnz
insb
cmpsb
out
inc
cs
jne
nop
adc
ret
xlat
cltd
and
push
loopne
xor
addr16
push
dec
adc
dec
xor
test
pop
stc
gs
jns
xchg
lahf
adc
shlb
push
sbb
test
push
cmpsl
nop
and
mov
loopne
sub
mull
popf
sahf
pushf
xchg
dec
sub
sub
sub
push
sti
mov
data16
push
push
lock
pop
xchg
xchg
dec
shr
iret
es
and
mov
movsb
das
lods
loope
sti
lock
mov
add
mov
std
xchg
jecxz
iret
mov
negb
testl
scas
jno
and
add
add
cmp
lods
sub
sbb
lret
int
cmc
fdivl
ja
arpl
sahf
mov
notb
push
fisttpll
je
lret
dec
das
push
outsl
sahf
dec
mov
inc
call
test
adc
arpl
inc
into
xchg
cmp
mov
push
loopne
test
outsb
inc
lods
push
push
mov
int
mov
pop
or
and
test
inc
push
std
jl
jg,pt
rcr
pop
lcall
leave
xorl
xor
fcoms
mov
inc
sub
dec
sub
dec
push
aaa
imul
out
int
pop
xchg
call
dec
aad
sub
inc
pop
mov
jnp
inc
xor
fsubrs
or
and
cmp
cmp
adc
out
divb
or
cmp
push
bsr
js
hlt
pop
sahf
sbb
jmp
mov
or
or
cwtl
cmpsb
or
pop
int3
int3
notl
int
mov
dec
pop
add
jl
insb
lret
mov
popa
cmp
mov
pushl
in
cmp
iret
int
test
scas
out
inc
aam
rolb
mov
lock
ret
gs
sarl
inc
js
sub
push
mov
or
test
push
jne
rorl
push
jb
jb
push
in
dec
js
pop
or
ret
cmp
jmp
fcmovne
mov
lahf
clc
cwtl
cwtl
cld
je
call
daa
insl
scas
mov
sub
sub
sub
push
fwait
daa
mov
bound
xchg
in
mov
lahf
je
adcl
xor
lret
psadbw
imul
stc
leave
or
iret
pslld
xchg
rcrb
push
sti
jl
stos
mov
pop
sub
sbb
xchg
nop
clc
push
mov
adc
out
sub
pop
rorb
je
push
lea
ljmp
jl
lahf
fucomp
mov
ret
xchg
mov
push
scas
or
adc
push
gs
mov
rolb
lahf
xchg
mull
pop
shrl
push
sbb
clc
mov
dec
push
xchg
aaa
inc
inc
xchg
jae
push
xor
pushf
icebp
xchg
and
push
bound
rcl
jmp
sbb
mov
test
cmp
jg
sub
lods
mov
xor
jge
sub
hlt
and
mov
xor
add
mov
xchg
pop
jp
cmpsl
xchg
push
ljmp
xchg
sub
pop
mov
bnd
push
int3
dec
lock
xchg
ret
aad
cwtl
aad
jno
cmc
cltd
repz
into
daa
icebp
cltd
mov
daa
sub
xor
cmp
add
fsts
jns
mov
sub
and
mov
adc
outsl
xor
fstpl
jecxz
pop
inc
add
mov
shlb
pop
adc
mov
adc
pusha
jbe
dec
adc
das
sbb
dec
adc
mov
fstpt
xor
hlt
xor
pop
daa
mov
jecxz
nop
xor
lea
mov
inc
mov
adc
push
push
add
dec
in
testl
mov
int3
hlt
sub
ret
xchg
stos
test
test
mov
arpl
pop
inc
xchg
xchg
frstor
jo
stc
mov
dec
xor
gs
sub
push
sub
xlat
fstpt
iret
xor
out
das
call
xor
inc
scas
int3
and
inc
test
movsb
or
daa
in
or
lret
jne
mov
mov
lds
xorl
fmuls
popf
cs
test
mov
decl
fwait
pop
lods
mov
out
ljmp
lods
fcmovu
psubusb
dec
pop
dec
or
xor
adc
xlat
jo
data16
jle
mov
test
or
pop
mov
rol
lods
mov
jg
mov
pop
cmp
dec
decl
jmp
cmp
xor
pop
int3
lahf
xchg
pop
sbb
sbb
adc
lret
int3
mov
and
mov
jo
in
mov
xor
pop
cltd
xchg
or
xor
mov
ljmp
das
aas
pop
mov
lock
add
jbe
and
mov
rol
sub
rcr
lods
pushf
fisubrs
add
fcomi
lds
pop
cwtl
push
cld
mov
or
dec
fstpl
xor
add
cwtl
xchg
add
lock
dec
jno
push
std
lea
mov
inc
dec
icebp
outsb
rol
ret
inc
mov
adc
lock
inc
push
xchg
inc
stos
xchg
mov
leave
in
sarl
popf
sub
test
or
jmp
dec
and
out
mov
outsb
rcrl
and
addr16
jle
push
lret
sub
jbe
pop
cli
sbb
cld
out
push
lret
fdivs
jmp
and
enter
push
adc
mov
xlat
rorb
ds
mov
cmpsb
lret
push
adcl
mov
sbbl
xchg
jecxz
fs
dec
mov
shl
dec
in
mov
or
cmpsl
mov
fcomip
ja
out
push
out
ret
adc
add
cmc
mov
pop
sub
popf
and
aas
xchg
scas
mov
push
cli
mov
xchg
pop
lea
jae
and
aas
pop
push
into
rclb
xlat
adc
cmp
arpl
push
cmp
aaa
aam
mov
and
test
jno
or
aas
or
mov
adc
sbb
push
mov
or
mov
sub
std
or
hlt
mov
cmp
out
push
out
idivb
xor
sarl
dec
cwtl
pusha
pop
sbb
lahf
in
sbb
hlt
sbb
jno
pushf
loop
mull
dec
adc
aaa
rcrb
clc
xchg
mov
in
flds
jecxz
pmulhw
shlb
xor
push
nop
sub
sub
or
sbb
cltd
cmpsb
test
jecxz
pusha
sbb
stc
mov
aaa
sub
hlt
jmp
scas
ret
adc
shrl
fsubrl
test
pop
mov
and
fdivl
es
jge
mov
lods
cmp
lds
mov
iret
pop
in
pop
cli
mov
jo
push
cwtl
das
cmp
jl
out
inc
addl
cmp
int
leave
std
mov
add
aad
je
xchg
hlt
add
mov
jns
std
adc
in
and
or
and
push
negl
ret
add
mov
leave
pop
dec
push
add
push
push
xchg
jge
ss
shl
sbb
cld
loop
jmp
loop
ja
sahf
and
sub
mov
xor
adc
push
ljmp
sti
mov
jne
adc
cli
aad
xchg
shll
cwtl
xor
rcrb
jle
add
jb
stos
inc
and
add
clc
jne
pop
nop
cmp
cwtl
pop
dec
xor
insb
xchg
mov
mov
loope
fbstp
je
mov
into
sub
aaa
out
sarl
mov
rcl
sbb
push
clc
sub
mov
xor
pop
cltd
repz
mov
cmpsl
lods
sbb
out
dec
outsl
mov
dec
push
pop
pop
adc
sbb
dec
pop
mov
test
and
roll
mov
adc
andb
movsl
mov
mov
xor
clc
sbb
aad
lods
inc
addr16
andb
xchg
sahf
mov
sbb
outsb
mov
dec
ja
xchg
inc
sbb
push
out
imul
inc
aas
nop
push
xchg
rcrb
lahf
repnz
xor
in
call
stos
sbb
mov
imul
pop
inc
jbe
loopne,pn
pop
dec
add
jg
out
push
mov
pop
mov
push
neg
xchg
daa
dec
xchg
pop
or
addr16
stc
adc
lret
fidivrs
push
pop
aaa
nop
mov
dec
jnp
imul
sti
mov
add
divl
cmp
pop
sub
and
int
add
int3
loop
cmp
sub
cmpsb
mov
mov
inc
out
inc
add
mov
movsl
cmp
int
xor
mov
loopne
loope
ja
pushf
fsubrs
sahf
xchg
push
ljmp
dec
aaa
stos
stos
pusha
push
push
notb
xchg
mov
out
and
sbb
mov
sub
jne
and
nop
inc
cwtl
push
dec
push
jb
add
xchg
shrb
mov
outsb
mov
mov
popa
xor
fsubrs
cmp
movsb
mov
loop
outsb
outsl
nop
sbb
mov
call
inc
pop
xchg
push
dec
iret
jno
jo
lret
cmp
fcomps
push
mov
mov
jle
jge
les
int3
popa
test
pushf
arpl
in
jg,pt
scas
stc
test
bound
add
ret
cmpsb
out
fildll
jb
out
lods
mov
inc
call
sub
mov
fnsave
dec
push
xchg
jp
idiv
jecxz
pop
mov
lds
jbe
mov
inc
and
xor
out
mov
push
fists
mov
stos
push
or
jo
rolb
lret
mov
popf
imul
mov
cmp
push
inc
xlat
std
xchg
cmpl
cmp
ja
xor
lea
push
cld
lret
lds
cmp
dec
add
addb
mov
jnp
xchg
pop
cmp
lods
dec
mov
push
fstl
xchg
jbe
adc
fistpll
popa
js
xchg
inc
cmp
push
sarb
inc
std
mov
sbb
sti
cmp
pop
jl
into
add
push
jne
dec
stc
les
push
xchg
xor
xor
pop
lea
sub
cmpsl
fadd
shll
daa
in
xor
mov
decl
int3
outsl
fldl
popf
mov
gs
fcmovbe
fs
pusha
aaa
adc
adc
mov
sub
xor
pop
mov
mov
xchg
jge
cmp
and
fiaddl
out
adc
mov
jecxz
pop
jae
imul
dec
dec
int
pop
rolb
xor
pop
push
xor
add
cwtl
scas
cmp
sbb
test
jecxz
mov
sbb
pop
aas
or
test
sub
pop
mov
fldenv
sarb
test
dec
pop
test
testl
mov
test
mov
loopne
call
mov
cmc
pop
push
cmp
jp
fbld
jl
idiv
fidivrs
je
push
dec
sub
addr16
mov
or
and
sbb
mov
cmp
mov
pop
adcb
pushf
cmpsb
lock
stos
inc
sahf
stos
xchg
inc
stc
testb
sub
sbb
mul
adc
subl
mov
mov
dec
enter
mov
clc
iret
dec
push
fmull
aas
mov
add
test
shll
fnstenv
add
xor
or
jne
aam
out
mov
testb
and
in
add
fisubrs
mov
dec
jns
adc
push
fs
pop
dec
insl
stc
sbb
push
stos
dec
jno
fisttps
stc
popf
movsb
dec
inc
sbb
pop
mov
test
sti
pop
mov
cmp
push
or
add
add
cmp
pop
dec
out
movsb
mov
adc
inc
sub
int3
adc
adc
dec
inc
cmp
lcall
repnz
fidivl
lcall
je
xchg
add
fmull
push
repz
mov
sti
sub
and
call
mov
scas
in
and
jbe
mov
inc
outsb
sub
cmpl
repnz
sbb
inc
xchg
cmpsl
push
xchg
das
iret
dec
pop
sarb
xchg
sahf
pop
adc
mov
xchg
mov
iret
scas
sbb
fadds
sub
mov
outsl
mov
and
or
dec
add
cmp
mov
daa
rclb
dec
or
cmp
sbb
cwtd
loope
mov
or
jmp
add
mov
ja
or
mov
movsl
pop
or
testl
aaa
ret
rcrl
ljmp
add
repnz
aad
fdivrl
sbb
cmp
sbb
and
push
sub
std
push
jns
inc
loopne
dec
scas
out
fld1
mov
loop
sbb
int
dec
mov
push
leave
ljmp
mov
in
mov
or
add
xor
shrl
push
xchg
dec
mov
xor
inc
mov
cmp
sub
push
sub
jno
test
jo
jne
sbb
adc
push
mov
pop
jmp
xor
mov
out
aad
mov
xor
cmp
xor
push
jecxz
scas
and
rcrb
or
in
jg
in
mov
test
jb
adc
aad
mov
aad
andl
fisubrs
jne
aad
cmp
ret
jb
cmp
adc
lret
pop
ss
push
decb
push
mov
out
ja
testl
mov
mov
popa
call
and
xchg
sbbb
loope
mov
daa
pop
pop
push
pop
pop
mov
mov
fists
fwait
pop
dec
inc
cmpsb
and
shlb
test
push
push
test
inc
out
add
leave
push
pop
test
into
push
cmp
jbe
jbe
lcall
aam
adc
cwtl
inc
rorl
dec
and
aas
pop
xchg
cmpsb
cli
stos
xor
push
pop
iret
jae
cs
jmp
paddusb
scas
dec
mov
push
cmp
mov
sub
mov
add
or
pop
xor
clc
push
push
loop
ret
fdivrp
mov
sbbb
sub
adc
push
dec
xchg
sub
jmp
shlb
das
addb
test
cltd
mov
sti
add
add
and
cli
xor
out
sti
mov
cld
dec
mov
push
mov
jmp
xor
test
popa
rcrl
cmp
subb
lods
and
inc
mov
add
fwait
mov
pop
fnstenv
cld
out
inc
pop
test
jmp
pop
adc
dec
cmp
int3
popa
dec
dec
push
cltd
push
xchg
cmpsb
aas
adc
loope
sbb
sbb
insb
je
xorb
subb
xchg
out
and
xchg
sub
enter
push
or
insl
lds
mov
inc
rorl
hlt
add
cmp
pusha
mov
cli
fwait
add
xor
lods
mov
sub
lds
push
decb
ljmp
lret
jns
pop
pop
addb
and
popf
push
cmp
mov
or
xchg
or
and
movsb
push
outsl
jecxz
nop
repnz
add
dec
inc
sub
das
sbb
adc
push
adc
loope
cs
mov
xchg
cmp
rcrl
cs
inc
pop
test
dec
sbb
push
pop
adc
int3
testb
rcl
cmp
push
sbb
push
adc
mul
ret
jp
adc
stos
sbb
enter
push
push
lret
jle,pn
mov
pop
fildll
mov
add
xchg
cmp
push
test
or
fcompp
negb
les
sbb
cwtl
out
xchg
and
cmc
je
lret
cmp
cs
lahf
gs
xorb
mov
and
das
add
jg
into
lock
mov
adc
into
dec
xlat
inc
mov
inc
stc
sub
popl
mov
add
sub
and
fdivl
rolb
sarl
stos
jge
pusha
bound
pushf
xchg
dec
iret
adc
inc
mov
cmp
test
insb
and
sub
mov
bound
fwait
or
inc
lds
sub
ljmp
call
loopne
mov
inc
movsl
scas
lods
jae
xor
xor
push
ret
sbb
mov
leave
mov
jno
inc
pop
mov
cmp
das
enter
add
scas
mov
inc
xchg
sub
adc
rolb
and
jp
dec
or
or
xor
cmp
cmc
aad
outsl
negl
and
xor
mov
loop
or
rcll
mov
push
loopne
int
push
mov
push
xchg
into
ljmp
xchg
jmp
fmul
mov
mov
cmp
mov
pop
jb
mov
or
bound
jg
sub
pop
add
sbb
push
jmp
xor
jg
pushf
loop
rorl
movsb
rcr
int3
xchg
dec
cmp
pop
icebp
and
and
ret
int
xor
aas
out
out
xorb
lds
mov
and
jl
or
sbb
add
and
inc
adc
dec
jle
jne
jb
adc
mov
movsl
stc
out
cmp
jl
mov
add
push
scas
lds
add
jb
test
in
adcl
jle
or
fnstenv
xchg
xor
dec
mov
mov
xor
mov
and
inc
cmp
pop
mov
sbb
cmp
xchg
push
jp
loop
lds
xchg
into
fcomps
push
pushl
mov
and
mov
mov
mov
cld
push
adc
and
scas
add
lret
pop
inc
int3
mov
movsb
lret
sbb
dec
inc
and
data16
stc
jb
fisttpll
les
fimuls
mov
dec
dec
stos
cmp
dec
das
stos
dec
jns,pn
repnz
add
fdivs
jmp
or
arpl
pop
push
dec
or
push
in
xor
xchg
das
loop
adc
mov
mov
xchg
sub
out
punpckldq
dec
cli
sti
lods
cltd
mov
test
gs
ljmp
jl
test
es
mov
scas
repnz
ljmp
das
adc
mov
jno
inc
push
sub
mov
fstps
inc
decb
mov
add
iret
xlat
and
mov
rorb
jb
mov
cwtl
std
xchg
sbb
js
or
test
sarl
mov
dec
scas
push
pop
push
shll
sub
les
test
js,pn
mov
pop
xchg
mov
ficoms
xor
mov
out
cmp
jp
jb
ds
fcoml
inc
ljmp
fcmovbe
sub
add
mov
dec
mov
rcr
ljmpw
sub
std
adc
sbb
mov
fwait
test
repz
add
jmp
lds
lods
loope
inc
fistpl
rcll
jmp
sub
mov
push
sbb
pop
mov
movsl
sahf
adc
cmp
sub
es
iret
inc
xor
sahf
mov
fcoms
xchg
popf
cli
fmuls
jl
pop
data16
adc
shrb
fdivs
scas
scas
imul
shll
mov
pop
push
xlat
ja
mov
fmulp
xor
dec
fwait
out
ds
cmpb
fdiv
push
lock
pop
stc
fcmovbe
xchg
clc
aas
lcall
push
inc
mov
int
lea
les
pop
icebp
lea
xor
pop
and
clc
jo
enter
arpl
dec
push
insl
mov
shlb
and
out
and
add
jmp
inc
sahf
int
inc
cmc
gs
lea
jne
cmpsb
setnp
in
icebp
sbb
into
mov
popl
adc
imul
sbb
cmc
int3
fnstcw
push
dec
push
mov
add
and
add
push
and
out
jb
mov
push
aaa
lods
dec
mov
mov
je
pop
xor
lahf
insl
mov
lods
xor
rcll
or
mov
fldl
cmp
aam
xchg
aaa
notb
fnstenv
mov
sub
loopne
jg
jnp
push
lock
push
out
mov
sub
add
gs
sbb
and
cmp
push
and
push
xchg
mov
mov
mov
mov
out
das
xchg
loop,pn
pop
mov
hlt
rcl
mov
popf
mov
inc
mov
cld
push
int
iret
mov
push
movsb
jmp
or
popf
repz
dec
test
aas
out
cli
jbe
push
push
add
xchg
cmp
lahf
cltd
cmp
dec
xor
loopne
adcl
mov
aaa
mov
xor
push
mov
cltd
movsl
cmp
daa
pop
pop
mov
inc
xchg
ffreep
mov
jge
pop
mov
mov
sub
dec
outsb
dec
sbb
js
sub
or
gs
lock
xchg
adc
hlt
dec
add
xor
cmc
icebp
fs
nop
push
jo
mov
daa
cmp
push
jb
mov
inc
add
mov
adc
pop
sbb
test
int3
popa
mov
sahf
lcall
mov
clc
xchg
mov
and
roll
jmp
imul
mov
mov
data16
fs
pop
adc
xor
jge
inc
mov
push
push
add
popf
clc
repnz
dec
mov
add
jns
imul
aad
sub
pop
cs
lret
add
aas
push
sti
int
test
push
iret
cmp
call
dec
out
das
hlt
xor
pushf
outsl
and
xor
push
jl
mov
jmp
fldcw
inc
aad
push
cli
shll
jp
ss
arpl
dec
movsb
adc
mov
into
push
dec
jecxz
outsb
cwtl
iret
and
adc
repnz
fsubrl
cmp
cmp
test
jno
push
fs
add
arpl
repz
aaa
popf
movsb
add
xchg
pop
iret
iret
das
rcrl
jp,pt
sahf
movsl
ret
dec
ljmp
push
bound
and
cmpsb
dec
nop
jge
call
fdivl
cmp
sub
movsb
push
adc
das
mov
int
ret
test
push
mov
jns
jg
adc
jb
pushf
outsb
daa
scas
xchg
xor
jnp
movsl
sbb
sar
jae
cmc
lock
xchg
xor
cs
sbb
hlt
jne
xchg
push
xor
addr16
pop
pop
in
sub
cmp
pop
mov
movsb
sub
inc
loop
jae
cli
test
movsl
sahf
dec
cmpsl
sbb
mov
sub
pushf
mov
pop
aaa
in
mov
cmp
cmp
sub
in
xchg
adc
sub
and
inc
lock
mov
adc
pop
cmp
imul
dec
jae
arpl
aaa
scas
call
fnstenv
push
adc
cld
mov
insb
mov
cmp
and
movsb
xchg
mov
arpl
leave
jne
and
jnp
fstpt
mov
push
cmpsb
xchg
pop
push
jecxz
out
mov
nop
push
pop
adc
or
inc
sar
sub
js
aaa
pop
xor
cmp
inc
aaa
sbb
stc
add
insl
and
das
gs
lret
icebp
mov
mov
push
mov
je
adc
pop
pop
push
clc
insl
inc
inc
push
cmp
cwtl
xor
dec
push
dec
out
xor
and
dec
int
mov
sahf
xor
mov
push
jle
jp
sbb
sub
mov
dec
insb
dec
xlat
sbb
lds
xor
jae
inc
adc
scas
pop
pushf
cmp
outsw
loope
xchg
loope
mov
fimull
in
stc
test
cmp
inc
push
pop
push
fwait
cmpb
and
pop
or
mov
rol
imul
xor
push
sahf
ret
pushf
xchg
in
cmp
stc
into
sbb
xchg
push
push
lret
rcl
imul
mov
insl
in
mov
push
lds
stos
mov
dec
fimull
push
out
js
push
xor
pop
test
and
sbb
cmc
add
incl
adc
inc
sub
mov
sti
cmpsb
push
loopne
inc
fsubrs
mov
jle
mov
pop
ret
loope
mov
pop
rcll
cwtl
sarb
pop
cmp
stos
pop
fnstsw
inc
fwait
mov
push
xlat
outsl
popf
adc
cmp
jae
xor
subl
jmp
fcmovb
lahf
sbb
negl
rcll
call
dec
jle
aaa
dec
mov
sub
mov
fimuls
rorl
mov
dec
mov
jae
test
outsb
sbb
and
dec
subl
add
dec
mov
dec
ret
stos
sbb
add
xchg
aam
test
or
int
push
fwait
es
in
into
icebp
in
clc
cmp
shlb
jno
je
pop
dec
xchg
imul
sahf
xchg
inc
pop
jg
and
add
das
xor
xor
outsl
sub
jb
adc
push
ds
push
out
or
jne
imul
repnz
inc
add
lea
loop
pop
aam
fsubrs
mov
lock
nop
fs
push
mov
sarl
cwtl
shrl
xor
jp
xor
xor
sbb
push
rcll
jns
fbstp
cmpsb
arpl
insl
push
js
dec
jnp
jmp
jb
sub
das
lahf
mov
stc
jnp
xchg
icebp
sbbl
mov
inc
mov
hlt
out
mov
mov
pop
jle
sbb
add
inc
js
jae
pop
std
shrb
push
test
sti
sub
jno
mov
dec
repz
pop
mov
movl
cmp
jne
add
in
shlb
mov
gs
dec
dec
lret
mulb
push
pop
popf
pop
inc
out
mov
push
cmc
cmp
sahf
stc
xchg
ss
orl
and
popl
fsubs
lret
int3
repz
es
cmpsb
mov
jl
and
adc
inc
stos
dec
and
push
loop
and
insl
or
movsb
cmp
testl
or
aas
std
pop
mov
imulb
je
lds
pop
xlat
jle
rorl
pusha
mov
sbb
shr
add
cli
jb
adc
sbb
vpackssdw
insb
popa
mov
push
pop
jge
push
and
mul
inc
lret
sbb
jnp
push
test
xchg
insb
gs
mov
or
imul
lcall
jp
jno
mov
data16
xor
and
add
mov
dec
ror
adc
pop
jne
mov
mov
int
andb
ja
stos
stos
shlb
cmp
mov
xchg
mov
or
and
xchg
aas
icebp
mov
negl
mov
shl
fimull
pushf
loopne
mov
add
adc
xchg
out
mov
cmp
bound
or
dec
fisubrl
inc
jno
sub
test
dec
cmpsl
loopne
mov
push
int
dec
mov
das
ds
mov
popl
gs
jmp
add
mov
ss
sbb
fistl
pop
jbe
add
push
jg
adc
mov
mov
insb
mov
and
cltd
and
pop
sbb
xchg
out
or
dec
aas
pop
fnstenv
adc
dec
dec
cld
push
ret
mov
jle
cmp
pop
mov
imul
pop
inc
jle
cmc
add
or
mov
call
test
in
negb
jno
fistl
mov
xlat
mov
pop
mov
xchg
xor
pop
cmp
sarb
cmpsb
ficoml
fdivs
mov
xchg
inc
shlb
call
or
xchg
sub
xor
mov
cmp
add
or
in
bound
psubw
scas
pop
cwtl
mov
sti
inc
jno
fcmovbe
jp
ljmp
cmc
mov
lcall
mov
sub
mov
outsl
push
std
in
addr16
push
mov
fninit
jo
aas
and
xchg
jecxz
mov
test
mov
out
push
dec
stos
add
sub
fdivs
push
out
divl
jl
inc
out
xchg
fs
xchg
xor
mov
dec
dec
fneni(8087
xchg
daa
lahf
in
rclb
cmp
lds
jmp
je
outsb
outsl
or
out
mov
cmp
out
cltd
cmpsl
rcl
pop
pop
sarb
aad
jne
sbbl
xchg
jb
xchg
add
lds
mov
jmp
dec
test
aad
scas
sub
cmp
popf
sub
sub
cmc
dec
inc
pop
pop
bound
data16
mov
lahf
lcall
xor
pop
test
es
mov
frstor
adc
je
mull
pusha
dec
push
mov
movsb
inc
dec
add
fsubr
in
movsb
jmp
lea
scas
add
pop
mov
scas
adc
notb
xor
pop
jnp
lret
arpl
cmpsb
adc
mov
mov
mov
lds
adc
jae
inc
mov
dec
repz
add
mov
sbb
andl
sti
pop
shll
adc
dec
mov
xchg
or
test
aad
sahf
popa
sub
gs
mov
xchg
inc
in
fs
adc
push
push
jo
mov
mov
xchg
pop
je
repnz
fstpt
mov
pop
aad
arpl
add
arpl
xor
mov
mov
ljmp
cmpsl
cmp
xchg
cli
push
mov
add
enter
lods
dec
test
aaa
jae
fcmovnb
sub
test
scas
loope
pusha
in
clc
std
jno
fstp
bound
and
das
dec
ljmp
mov
mov
pop
pop
jle
sub
mov
or
les
add
ror
stos
push
sarl
inc
xchg
ror
mov
jns
fcmove
pushf
lock
push
sbb
adcb
cmp
add
mov
dec
fisubl
addr16
jge
aaa
xchg
les
push
int
adc
into
sahf
icebp
push
das
xchg
std
pushf
dec
adc
xor
or
popa
mov
lret
add
leave
ja
fs
mov
movsl
leave
out
stos
xchg
hlt
pop
scas
cs
mov
fwait
jmp
js
aaa
jmp
in
scas
lahf
cmpb
movsl
mov
sbb
std
cmp
lds
mov
insl
shrl
ss
mov
inc
cmp
ss
cmpsb
mov
dec
cmovle
mov
ss
inc
cmp
pop
or
push
dec
in
mov
fiadds
adc
rcll
hlt
jns
imul
fbld
int
and
imul
ret
icebp
pop
add
ficoml
aad
push
call
sbb
sub
jno
sti
push
pusha
dec
iret
std
mov
es
fiadds
int
cmpsl
and
popa
push
movsl
test
inc
in
jb
ss
ror
imul
dec
pusha
fdivr
push
pop
rorl
call
sar
rcl
je
in
stc
inc
sbb
sub
nop
add
repz
scas
adc
mov
gs
das
mov
jnp
je
jmp
mov
in
clc
ficoms
pop
lds
in
sbb
mov
popa
loopne
adcb
xor
adc
adc
div
daa
aaa
enter
pop
aam
pop
aad
xor
gs
add
jmp
pop
fisubrl
push
sahf
inc
cs
sbb
push
shl
cmp
gs
addb
sub
cmc
adc
adc
push
inc
popa
cmovns
pop
mov
add
xlat
sub
dec
and
xor
fadd
rorl
pushf
arpl
inc
mov
sbb
imul
in
ja
cld
mov
push
xchg
sbb
sub
int3
push
std
pop
jmp
mov
addr16
dec
fs
std
pop
fwait
push
out
subl
shlb
add
leave
cmp
inc
popa
aaa
test
sarl
arpl
add
iret
jns
addr16
inc
xor
jnp
mov
mov
inc
xchg
xchg
jl
aas
shrb
jae
fdivr
cmp
mov
pop
sqrtps
fldl
dec
xlat
shlb
push
ja
loop
or
outsb
and
push
cli
mov
bound
mov
add
and
leave
jnp
cli
outsl
ret
pop
and
gs
adc
or
negl
test
pop
push
cld
cmp
push
xchg
shr
imul
addl
add
rcrl
mov
mov
out
mov
loop
fwait
jns
and
add
or
mov
xchg
jl
mov
loope
enter
mov
repz
mov
and
sbb
pop
mov
mov
outsb
out
mov
bound
pop
mov
pop
push
shr
xor
lods
fstps
pushf
je
insl
int
pop
outsb
pushf
add
mov
or
neg
outsb
cmp
add
cmpsb
fs
sub
xchg
hlt
jg
push
clc
shll
scas
jp
sbbb
out
pop
arpl
mov
iret
xchg
mov
jae
dec
or
pop
ds
mov
mov
inc
std
lcall
loopne
jp
dec
adc
and
jge
repz
movsl
fwait
mov
negb
repz
pushf
and
mov
aaa
mov
adc
lods
rol
ficoml
cmpsl
mov
pop
push
cmpsb
mov
jmp
fisubs
gs
jmp
and
mov
pop
adc
imul
ret
mov
xchg
std
cld
pop
in
cmp
sbb
or
std
cmp
sbb
idiv
fwait
dec
adc
test
or
inc
ja
or
mov
das
sub
xchg
es
mov
shlb
aam
mov
mov
stos
pop
cld
lods
mov
sub
div
sbb
mov
lds
push
push
sub
cmp
out
jle
fstpl
in
out
jno
mov
jno
add
adc
push
push
and
push
repz
jge
sbb
pop
stos
inc
dec
fisttpl
jp
xchg
inc
or
sub
jmp
sahf
enter
xchg
mov
xchg
fisttpl
rcrl
add
imull
fbstp
pop
mov
fwait
push
mov
pusha
sbb
and
in
lock
in
popf
sahf
push
shl
jns
jecxz
jo
lcall
into
jbe
mov
imul
in
fistpll
addr16
in
rcr
in
popa
fbstp
lods
shlb
lock
stos
pushf
mov
sub
jg
lods
bound
imul
push
xchg
out
pushf
mov
sbb
js
les
xor
sub
sub
ss
cmpsb
push
sub
aaa
imul
insb
mov
mov
fstpt
fsub
cmp
cmp
sbb
jle
and
outsb
sbb
pop
jg
pop
jnp
sbb
jb
sbb
inc
cmpsb
scas
cmp
sub
addr16
and
jg
and
jae
sbb
orl
cwtl
stos
mov
rcl
sub
mov
std
or
icebp
xchg
xchg
xchg
mov
pop
mov
mov
lcall
xchg
bound
and
leave
outsb
aaa
xor
lret
jl
jb
push
test
adc
pop
fbstp
sbb
xor
add
repz
mov
lret
adc
hlt
test
jns
dec
xor
push
push
outsl
mov
jnp
dec
xorl
mov
iret
cmp
inc
pop
lods
insl
sub
outsl
rorb
pop
out
repz
rorl
dec
add
mov
aad
mov
shl
jno
xor
addr16
cmp
scas
pop
or
nop
and
scas
lahf
jecxz
xchg
lock
cmp
shl
fcoml
mov
cmp
dec
test
lods
pop
mov
or
rcr
sbb
dec
mov
ficomps
lret
push
sbb
insb
mov
idivb
adc
mov
mov
and
inc
mov
jno
mov
int
fisubl
outsb
das
cwtl
imul
sbb
int3
xor
or
sbb
dec
inc
ret
outsb
mov
in
xchg
or
jbe
call
push
add
repnz
fsts
jo
dec
das
inc
les
mov
lock
xchg
cs
xor
jecxz
jo
and
sbbb
jmp
mov
cmp
or
adcb
pop
and
sub
mov
fnstsw
sbb
push
mov
test
test
mov
mov
lahf
insb
outsb
imul
lea
test
repnz
fs
faddl
sbb
lcall
fdivrl
xchg
sub
mov
push
jbe
iret
daa
arpl
dec
mov
sbb
in
mov
or
mov
mov
mov
scas
test
lds
scas
push
icebp
pushf
ret
push
arpl
sbb
jg
div
and
and
mov
ja
leave
mov
or
in
test
adc
aad
aas
jecxz
shl
addb
fimuls
xchg
pop
cmc
stc
cmp
mov
jo
dec
ds
adc
sub
aas
sub
and
cwtl
mov
xchg
popf
add
or
mov
inc
xchg
stc
add
clc
jo,pn
jbe
dec
jo
in
and
inc
test
mov
jne
cmp
dec
mov
inc
repnz
xchg
mov
jae
mov
xchg
shlb
data16
cmp
js
inc
jg
cmpl
popa
mov
jo
ret
pop
or
fwait
push
add
mov
sub
cmp
mov
sub
mov
repnz
inc
xor
cmp
pop
adc
ror
sbb
dec
xorb
pop
je
lods
sbb
dec
fldenv
scas
jo
inc
push
mov
jns
adc
dec
xor
adc
fwait
sbb
and
mov
pop
xor
lcall
fsubrl
push
inc
jb
pushf
ljmp
ljmp
mul
push
daa
push
mov
loopne
dec
pop
lods
inc
cmpsl
outsl
dec
out
test
mov
ret
sti
mov
adc
xchg
js
add
pop
inc
js
push
push
xchg
xchg
popa
mov
addr16
or
cmc
out
jb
orb
ljmp
adc
push
push
shll
fstp
adc
lods
cmp
insl
push
arpl
mov
jecxz
mov
pushf
xor
inc
cwtl
cmp
insl
clc
mov
mov
inc
mov
fmuls
lock
dec
ja
lods
mov
lods
sti
mov
push
je
jns
test
subl
push
dec
in
xchg
sub
push
sbb
mov
jg
push
push
pop
shr
cmpsl
jae
stos
or
dec
dec
mov
mov
or
adcl
dec
shll
cmp
test
lods
lahf
bound
xchg
pusha
pushf
push
jge
or
pop
sub
cmc
rorl
bound
cmp
jge
and
jno
push
inc
xorl
xlat
cli
push
xorl
icebp
xchg
imul
arpl
push
adc
xchg
outsb
mov
or
cwtl
push
or
dec
push
and
and
pusha
jbe,pn
stos
cld
lds
cltd
push
gs
push
mov
push
fwait
sub
inc
pushf
shl
sbb
sub
in
xchg
or
and
lret
test
add
mov
dec
pop
addb
sub
cmpb
in
inc
inc
fmul
push
stc
mov
adc
les
adc
pop
cmp
xor
pop
dec
daa
sub
sub
jg
out
cmp
and
push
push
jb
loop
in
out
ret
sbb
std
xchg
mov
loop
jmp
add
pop
cmpsb
xchg
addr16
inc
mov
data16
add
push
aas
xor
scas
shlb
and
mov
rclb
sbb
sahf
cld
push
leave
dec
add
and
add
daa
xchg
dec
jmp
xor
mov
and
insl
push
out
mov
pop
dec
inc
push
jb
mov
sub
pop
fwait
lods
lds
popa
inc
push
pop
cli
jle
arpl
sbb
fucom
mov
daa
xchg
push
jp
pop
mov
and
lea
aaa
jecxz
icebp
iret
mov
popl
mov
dec
sbb
xchg
cmp
outsb
loope
adc
mov
mov
test
push
loopne
rorb
inc
pusha
lods
or
cmp
inc
int
inc
cmp
loopne
xor
or
insb
xor
xchg
jp
imul
jns
or
or
test
lock
inc
mov
pop
pop
adc
fs
sub
pop
stos
scas
sub
inc
fsubrs
xchg
hlt
shlb
adc
sbb
dec
jae
out
mov
stos
inc
push
adc
cmp
icebp
mov
imul
xchg
xor
int
push
adc
int3
push
rolb
mov
stos
cli
popf
outsl
out
daa
sub
xchg
adc
scas
cmp
or
or
jl,pt
test
sbb
aas
dec
cmp
scas
vpunpckhqdq
or
dec
jmp
push
in
cmpsb
fldt
mov
imul
cmpsb
fnstenv
inc
and
dec
mov
adc
fimuls
stos
fs
in
rolb
or
jnp
dec
xor
pusha
hlt
jb
or
test
jp
pop
mov
dec
or
jo
in
xor
pop
adc
stc
adc
sub
mov
iret
jp
pop
movsb
fadds
pop
lods
jno
sub
mov
mov
pop
fldenv
int3
out
data16
dec
dec
arpl
cmp
into
mov
test
int
xor
and
mov
inc
fucom
xchg
sub
jnp
jo
ret
jne
imul
and
lock
mov
cmp
push
test
adc
pop
push
xchg
xchg
ljmp
jmp
push
pop
test
cmpsb
scas
add
jo
lock
iret
test
xchg
das
pop
inc
push
fdiv
and
pop
orb
mov
out
iret
mov
stos
imul
adc
lods
xchg
std
decl
fsubrs
pop
sub
jecxz
or
into
incl
mov
jl
mov
pushf
xor
je
and
sbb
jno
mov
insb
xchg
or
pop
sbb
imul
jmp
cmpsl
repz
jge
inc
xor
sub
arpl
cmpsb
mov
sbbb
jmp
push
shll
mov
mov
daa
loope
jge
xor
outsb
push
inc
sbb
popf
push
xor
lret
sbb
xor
or
std
fcoml
cmp
into
js
add
add
gs
pop
and
into
fnstcw
cmp
fucom
inc
cmpsl
stc
sbb
jg
stos
div
pusha
jp
in
fs
xchg
ljmp
jle
addr16
fwait
pop
pop
lahf
mov
in
sbb
ja
adc
rclb
cli
test
mov
ret
loope
decl
xchg
mov
int3
jl
rclb
enter
ret
xchg
push
pop
repnz
xor
fcomps
mov
pop
sub
cmpsl
rcl
lods
js
lock
repnz
xchg
xor
xor
or
pop
divl
add
sbb
push
push
or
mov
xor
mov
and
xor
in
xchg
popa
jbe
icebp
popa
mov
mov
lahf
jne
cmp
leave
mov
inc
jae
adc
pop
aaa
ljmp
dec
xor
lock
addr16
and
sbb
je
xchg
lea
jne
shlb
pop
mov
fxch
in
imul
and
repz
mov
push
xchg
int
popa
mov
jbe
pop
sub
push
lods
xchg
cwtl
mov
xchg
cmp
push
scas
sti
sahf
xchg
sbb
sub
pop
xor
movsb
sbb
repnz
nop
cwtl
pop
imul
and
push
add
adc
sub
mov
and
sub
jle
addb
pop
fimuls
mov
xlat
orl
and
sahf
scas
mov
jp
popf
rorb
pushf
dec
cmp
int3
mov
mov
mov
bound
xlat
adc
jb
xchg
or
mov
xor
xor
bound
mov
sbb
mov
inc
mov
repnz
jo
pop
adc
aaa
loope
sub
cs
jno
test
addl
mov
aam
in
dec
xchg
mov
out
add
shll
nop
dec
lea
or
pop
repz
sub
jl
in
lret
dec
ljmp
ss
xchg
loop
out
negl
outsb
arpl
jnp
mov
inc
cmovle
dec
pusha
test
xchg
lcall
add
jmp
js
jno
xorb
loope
fstl
std
sbb
daa
rolb
je
fwait
orb
push
xchg
dec
fdivrs
lds
sbbb
push
test
inc
xchg
mov
movsb
xchg
xor
cltd
outsb
pop
rcll
xor
lds
pop
and
call
jo
in
lret
jp
arpl
inc
xor
jp
sub
lock
std
fsubrs
xor
scas
hlt
cmp
add
dec
push
sub
ja
mov
mov
xchg
or
shl
adc
testl
divb
lea
popf
xor
cwtl
push
std
mov
fldl
inc
pop
mov
test
fxam
mov
push
xorl
mov
es
cs
sbb
arpl
aas
lods
testb
mov
popf
hlt
movsb
sub
gs
dec
imul
cmp
into
jp
inc
adcl
pop
ret
es
into
dec
cmpsl
push
rcll
pop
mov
stc
icebp
jmp
push
cmpsb
jl
inc
pop
pushf
mov
jae
inc
inc
mov
loope
add
inc
jmp
jo
fnstcw
xor
mov
dec
adc
or
stos
lods
dec
subb
add
mov
shrb
mov
dec
aas
cs
jp
mov
push
mov
mov
dec
fwait
test
pop
adc
int3
sub
or
insb
pusha
inc
jbe
jge
mov
xchg
bound
xor
mov
xchg
out
or
clc
push
dec
jbe
or
mov
xchg
add
sahf
cltd
add
mov
fs
mov
sub
fsubrs
mov
pushf
lock
stos
inc
clc
sbb
cmp
fimull
and
jne
lds
gs
movsb
es
jecxz
dec
stc
aad
outsl
and
dec
insl
aad
mov
ret
inc
das
sub
lea
stc
cmp
or
add
mov
cltd
pusha
fisubl
push
xor
neg
mov
or
outsb
das
jnp
inc
movsb
jb
xchg
sahf
dec
mov
and
in
lret
add
leave
popa
outsb
sbb
xor
sbb
hlt
add
lcall
icebp
pop
lea
mov
sbb
cltd
ficompl
adc
out
sbb
pop
xlat
out
xchg
pop
push
xor
lret
subb
leave
outsl
xlat
cmp
ret
repz
fst
mov
jge
jnp
lods
push
jns
xchg
push
jl
cmpl
lcall
adc
pop
mov
jb
pop
mov
adc
jl
icebp
xchg
mov
in
in
in
inc
movsl
outsl
ret
add
or
sbb
rcll
xor
push
insl
notb
and
or
cwtl
and
mov
sbb
rcrb
cs
out
fs
mov
push
bnd
push
popf
adc
xor
sbb
jg
in
jecxz
and
push
mov
and
jbe
push
cmp
mov
std
in
pusha
pop
jns
enter
stos
lahf
test
jno
xchg
test
mov
ja
cmp
rol
movsb
inc
adc
nop
mov
popa
adc
rcll
cmp
jge
dec
cmp
ja
pop
mov
inc
mov
pop
mov
dec
mul
sbb
push
lds
add
add
rorl
xchg
pop
les
aas
nop
or
std
pop
inc
fsubrl
mov
sahf
pop
stos
push
mov
lret
mov
pop
popa
xchg
cltd
sti
insl
shlb
outsb
cmp
and
std
movsl
push
insl
pop
inc
addb
mull
addl
xchg
sbb
sub
dec
jge
ror
sbb
xchg
or
aam
mov
frstpm(287
lret
in
mov
cmc
xchg
mov
popa
nop
or
push
pop
lcall
mov
jge
fucomi
sub
sub
lods
ds
push
clc
arpl
shlb
pop
popf
pop
jl
fsubrl
stos
mov
cmp
mov
lods
push
pusha
arpl
dec
sbb
daa
rcrb
adc
test
ror
lcall
lods
push
les
mov
cmp
insb
jbe
ljmp
and
inc
sub
push
jae
out
mov
inc
and
sbbb
sbb
jge
dec
leave
dec
and
jmp
dec
movsl
mov
aas
jp
in
ds
and
je
push
popf
dec
mov
sti
xor
aas
shr
in
and
jnp
push
mov
inc
mov
cwtl
cmp
out
jno
loop
pusha
lcall
cli
cs
add
xor
and
insb
lahf
pop
pop
cs
cmpsl
lods
jl
xchg
sub
mov
mov
push
adc
rorb
jno
testb
push
mov
into
sub
pop
in
shlb
scas
mov
daa
xchg
inc
jle
stc
and
cmp
shll
jne
incb
dec
inc
xchg
popa
xchg
dec
insl
insb
mov
lods
movsb
fcmove
sbb
inc
or
xlat
mov
std
sti
push
adc
movsb
mov
pop
jp
gs
add
sbb
push
sbb
dec
dec
adc
sti
push
and
lods
sbb
cmpb
loop
jae
mov
sbb
repz
or
or
mov
icebp
mov
push
or
cs
stc
in
jecxz
outsb
test
dec
xchg
sub
mov
inc
mov
into
pop
mov
movsb
xchg
mov
loop
and
loope
or
or
push
xchg
daa
addr16
out
pop
dec
call
cmp
rcrb
repz
popa
push
in
scas
rorb
cmp
sub
into
lods
das
xchg
dec
adc
inc
dec
mov
ret
les
mov
add
rolb
mov
jmp
lret
sti
imul
cmp
push
ss
push
into
xchg
icebp
pop
pop
mov
les
pushf
inc
cltd
push
fxch
mov
ret
mov
and
sti
mov
xor
iret
dec
call
xor
mov
bound
es
sbb
cmpsl
push
in
rcll
or
dec
dec
dec
mov
xchg
rol
mov
ds
lock
sub
pop
add
add
outsl
sub
sbbl
inc
sbb
orb
push
pop
sub
sub
rol
mov
push
pushf
dec
je
int
or
adc
pop
jns
movsl
jnp
or
inc
iret
pop
xor
lahf
and
push
mov
fwait
rol
sbb
rorl
jl
jae
mov
push
mov
add
mov
addr16
xchg
test
cmp
pop
pop
adc
ja
fld
xor
mov
jb
mov
pop
ja
mov
cmp
xchg
cmp
out
cmc
cltd
lcall
pop
fcmovbe
mov
nop
ljmp
loope
and
or
push
jb
jae
cmp
lock
mov
jmp
mov
jl
bound
filds
lret
mov
nop
mov
sub
inc
les
out
mov
xchg
xor
ss
shll
scas
repz
js
xor
push
push
jo
imul
adc
insl
insl
push
cmpsl
mov
fbstp
or
jnp
pop
movsb
lahf
das
ljmp
or
mov
out
in
mov
and
cmp
jo
xchg
movsl
xor
jp
cmp
popa
das
lds
inc
popf
sbb
mov
jecxz
inc
in
cmp
fsubrs
mov
jg
pushf
xor
add
icebp
test
pop
test
sub
cmpsb
ss
sbb
nop
jge
cmp
and
sbb
dec
jb
popa
dec
pop
test
push
xchg
mov
arpl
fldenv
icebp
movsl
inc
lds
scas
sub
mov
cmp
iret
ja
push
jne
inc
add
fwait
mov
cmpsb
rcrl
inc
mov
dec
or
xchg
mov
xchg
imul
shl
aas
movsl
icebp
and
push
repz
imul
and
sub
cli
adc
jmp
test
insb
mov
xor
and
push
loop
repz
sti
add
adc
and
cmpsb
sbb
out
xchg
daa
dec
lret
cmp
push
test
mov
inc
push
inc
lcall
add
jle
mov
push
cmp
andl
adc
adc
ss
and
ljmp
xorl
and
addr16
in
ljmp
cmpsl
ret
add
lds
sub
cmpsl
sub
add
fmull
or
hlt
push
mov
fnsave
and
jnp
sub
mov
in
adc
mov
xorl
adc
fcomi
popa
push
jecxz
pusha
leave
pop
faddl
or
cmp
ja
subb
jp
es
cmp
cmpsb
out
xchg
sti
and
add
mov
jno
jmp
jbe
cmp
inc
lahf
xorb
stos
mov
mov
mov
push
dec
hlt
enter
dec
mov
lods
cli
adc
add
insl
aam
pop
repz
mov
mov
aad
push
ficomps
jne
mov
addb
popf
add
pushf
or
inc
mov
outsl
push
bound
jne
aaa
pop
inc
scas
aas
cli
add
mov
or
mov
test
push
adc
aam
sahf
add
sbb
xchg
jle
or
loop
push
ret
mov
sbb
mov
inc
xchg
cmp
fldenv
xor
add
shll
dec
test
movsb
cli
repz
pop
pop
jecxz
pop
mov
jns
mov
dec
data16
mov
mov
out
xor
cmp
mov
jge
adc
fdivrs
int
mov
daa
inc
cmpsl
mov
popa
xchg
rolb
and
cmp
repz
lock
pop
clc
mov
shll
pop
sub
mov
stos
inc
push
lods
xchg
fnstcw
xchg
shl
push
les
xchg
in
push
cltd
sbb
xchg
les
arpl
or
sub
pop
jmp
lret
push
sbb
pop
dec
cld
fwait
sbb
sbbl
std
lods
and
test
add
sbb
inc
outsl
xchg
push
clc
lcall
push
cmpsl
or
cmpb
lahf
ret
push
in
push
xchg
sub
inc
or
cmp
sub
test
pop
adc
cmp
add
movsb
arpl
lds
adc
mov
bound
add
std
adc
mov
sbb
imul
xchg
addr16
das
push
add
in
mov
mov
fs
adc
scas
push
lret
jmp
repnz
int
cmpb
mov
bound
imul
pop
sub
mov
sbb
leave
mov
sahf
inc
xchg
push
lods
mov
pusha
jg
sbb
cmp
icebp
add
iret
into
cmp
hlt
xor
jmp
push
daa
lcall
adc
dec
mov
test
cmpb
inc
and
int
testb
aad
mov
std
add
mov
mov
divl
mov
ja
jmp
aam
outsl
ficoms
jbe
jne
aam
mov
repz
sbb
push
adc
cmp
imul
xchg
inc
push
dec
mov
insl
leave
imul
sbb
adc
push
mov
adc
mov
aam
scas
jnp
dec
ret
lret
int3
fadd
mov
jmp
dec
push
mov
add
jecxz
mov
adc
es
ss
xor
mov
or
adc
and
sub
ljmp
lock
imul
and
sbb
pop
push
bound
sti
int3
fwait
test
xchg
lcall
jns
push
pop
mov
stc
jno
push
sahf
dec
std
sbb
inc
int3
cmpl
mov
js
outsl
pcmpgtw
sbb
inc
xchg
ja
adc
jnp
ljmp
and
push
mov
xchg
lea
sbb
sub
pop
pusha
pop
test
pushf
rcrb
jnp
jl
mov
adc
ss
scas
shrl
rcr
add
push
and
push
rorl
and
fldenv
insl
push
mov
lret
loopne
lock
and
outsb
rcll
pop
xchg
push
sub
or
cli
cld
and
cmp
cltd
mov
or
mov
mov
adc
jae
outsb
push
std
out
mov
mov
inc
addr16
inc
dec
test
insl
ss
aas
aas
cmp
cwtl
and
fcomps
fs
es
mov
les
and
hlt
or
das
mov
push
or
movl
jnp
test
popf
sub
mov
insb
push
nop
xor
out
push
dec
fwait
popa
xor
testb
adc
add
popf
inc
cmpsl
mov
ret
lea
clc
and
shrl
mov
sub
mull
mov
sub
insl
push
ficoms
shr
sbb
cli
sub
es
push
push
cld
cmp
or
dec
jp
adc
sbb
add
lahf
sbb
dec
mov
pop
outsb
jmp
xchg
pop
iret
hlt
sub
pop
inc
rolb
mov
out
jp
gs
adc
inc
push
mov
inc
mov
inc
pop
filds
inc
lret
xor
inc
in
jecxz
inc
add
and
mov
push
test
cwtl
or
jo
add
ljmp
lcall
scas
das
repnz
roll
xor
loopne
xchg
or
into
cmc
cmp
dec
sahf
cmp
cmpsl
iret
je
imul
xchg
lahf
adc
xlat
or
cmp
xor
int3
and
fs
cli
xchg
xor
xchg
jg
std
ja
aad
add
xchg
enter
fwait
or
mov
jbe
js
test
daa
call
testl
and
lret
int
dec
in
mov
mov
inc
scas
or
inc
push
test
jmp
cltd
inc
add
aaa
cwtl
fs
scas
mov
mov
ret
jmp
pop
push
or
xchg
cmpsb
outsl
sbb
aaa
fcompl
mov
loope
add
ficompl
cwtl
mov
inc
jae
xchg
ror
aas
inc
dec
je
repnz
add
mov
jg
jne
mov
call
pop
or
jae
fwait
pop
fwait
adc
repz
inc
push
pushw
sar
sub
ja
pusha
aam
xchg
xchg
mov
aaa
dec
adc
jo
cwtl
xchg
ja
ret
cmp
push
iret
and
lock
xchg
xor
data16
movsl
jne
pop
setno
mov
add
fsubrs
daa
test
aaa
jne
cmc
rcrb
add
adc
pop
pop
loope
psubd
xor
pop
sub
pop
pop
jnp
xor
mov
lret
mov
mov
popf
pop
sar
mov
stos
adc
push
jmp
mov
inc
mov
out
cmp
insl
test
adc
push
pop
sub
test
inc
xchg
xchg
push
icebp
aaa
inc
cmc
mov
fnstenv
cmpl
sub
push
psrlw
jns,pn
xchg
addb
or
fwait
inc
cmpsl
loopne
cmp
das
iret
mov
imul
mov
aaa
dec
mov
sub
jmp
imul
mov
push
insb
lahf
sbb
loopne
mov
mov
inc
jg
mov
xor
sub
lahf
add
xorl
int3
lods
rorl
mov
dec
pop
call
xchg
mov
popf
jg
mov
inc
adc
push
jno
xchg
jl
int3
jle
push
gs
xor
xchg
repz
sub
jne
pop
pop
pop
and
dec
adc
inc
out
mov
ret
jecxz
test
hlt
adc
xchg
xor
add
arpl
scas
push
inc
andb
dec
jmp
pop
push
cmpb
jo
je
mov
cltd
dec
js
stc
cmp
mov
add
mov
in
sbbl
sub
pop
cmp
sbb
cmp
and
int3
lcall
xor
clc
imul
sahf
pop
add
aam
mull
popa
out
sub
add
push
push
negl
fbld
pusha
lahf
adc
sub
addr16
and
shrl
icebp
mov
sub
and
inc
js
cmp
cld
fistpll
ljmp
jle
xchg
mov
fwait
xchg
lods
push
outsb
fcompl
mov
sub
mov
mov
xchg
cmp
mov
cli
iret
pusha
pop
pop
mov
cmp
inc
sub
stc
adc
in
push
imul
stc
hlt
arpl
lds
fcoml
pop
jle
or
jge
cmp
pop
mov
cmp
push
mov
inc
pop
xchg
sub
pop
xor
cmpsl
mov
inc
add
imull
lds
and
popf
rorl
and
orb
testb
outsl
sahf
ds
sbb
sbb
loop
sbb
and
popf
clc
cmp
cmc
cld
mov
outsb
xchg
loopne
aaa
xchg
cmp
sub
subl
inc
mov
rcll
sub
add
jle
aam
rcrb
cmp
dec
jb
adc
jp
push
shrl
jp
gs
push
push
inc
sub
jo
inc
jp
fadds
shll
inc
pushl
test
pushf
jb
fidivrl
pop
std
lret
nop
sub
jecxz
flds
pop
lahf
lcall
repz
stc
or
sbb
cmc
test
mov
dec
fildl
push
xchg
push
cld
cmp
in
in
mov
divb
js
inc
mov
and
addl
scas
push
inc
add
clc
test
into
fcomip
jle
inc
adc
pop
mov
mov
cmpsl
test
repnz
xor
test
fwait
add
notl
stc
cld
das
jmp
test
repnz
pop
icebp
add
sysexit
inc
xor
xchg
orb
xchg
rcll
jnp
and
loop
push
or
out
aam
push
repnz
es
mov
add
cmpsl
sub
jp
lahf
into
mov
cmp
incl
push
mov
add
out
and
mov
cmp
inc
push
in
dec
cmp
filds
imul
add
aaa
adc
jecxz
cmp
dec
jp
icebp
cli
sbb
out
xor
xchg
leave
xlat
mov
fwait
ret
in
add
mov
std
cli
xchg
dec
addl
xor
jnp
in
decl
inc
in
dec
pop
xchg
pop
imul
or
push
imul
or
sbb
insb
ret
and
mov
aas
lahf
mov
sub
and
lret
xchg
rcl
sub
jno
sbb
dec
aas
jb
jae
xchg
insl
shlb
mov
cmp
dec
pop
call
mov
inc
fdivrs
dec
xor
and
movsb
push
xor
mov
cld
adc
fwait
icebp
cmpsb
lods
inc
mov
jmp
adc
loop
movsl
daa
int
and
es
repz
xor
addl
out
insl
sbb
cmp
data16
pop
jnp
push
shl
std
inc
cmp
push
sub
xor
add
fdivr
ss
repnz
inc
or
push
clc
push
xlat
sbb
xlat
cwtl
test
mov
pop
adc
jae
aam
lods
push
push
or
xor
cmpsb
fwait
cmp
push
or
cld
ds
push
mov
xchg
or
push
cmpb
inc
xchg
movsb
jle
ret
xchg
les
sub
loope
sbb
jmp
sub
jb
roll
aas
mov
or
loop
xchg
les
and
insl
push
jns
xor
test
mov
mov
and
lret
das
jp
mov
xchg
clc
mov
insl
adc
jns
jge
push
lret
inc
dec
push
insl
and
test
dec
jecxz
nop
ja
enter
push
sub
mov
mov
int
adc
sbb
xchg
sbbb
scas
lods
scas
repz
mov
cmc
or
std
xor
jge
aaa
cmpsl
nop
mov
mov
xor
adcl
mov
lods
or
loope
or
sub
xchg
daa
movsl
xchg
inc
mov
andb
xor
lret
clc
mov
xor
sahf
mov
mov
jno
push
stc
ljmp
dec
inc
jb
test
decb
popl
out
and
into
add
push
sbb
mov
ret
mov
out
pop
clc
mov
mov
shlb
imul
xchg
in
out
inc
fldcw
mov
mov
pop
mov
mov
jne
and
incl
lods
pop
cli
xchg
cwtl
mov
adc
xchg
int
es
imul
cmp
outsl
mov
scas
sub
loope
push
jg
lds
mov
ret
shll
mov
ljmp
pop
jge
loope
push
aam
xchg
push
stc
mov
push
repz
cvttps2pi
sti
mov
xchg
fistps
and
mov
ja
ljmp
insl
jns
mov
add
push
je
popa
push
cmc
and
xchg
and
pop
pop
inc
xor
dec
divb
les
adc
mov
jbe
popf
std
jae
lret
and
imul
xor
ret
std
dec
adc
out
nop
jb
inc
push
jl
ljmp
xor
pop
in
out
pop
push
cwtl
lret
pushf
jae
jmp
xchg
or
cmp
pop
pop
and
sub
adc
ljmp
stos
fs
insl
iret
add
jl
push
add
sti
ret
leave
lods
xchg
and
sbb
es
jns
mov
fwait
cmpsb
dec
int3
popf
sub
push
mov
fcompl
popa
xor
cmp
or
fs
test
iret
cmp
jl
jecxz
mov
jne
jnp
nop
sbb
xor
insl
shr
mov
push
sub
mov
xor
or
pop
pop
aad
repz
mov
aad
out
dec
and
push
mov
cmc
lea
pushl
cld
movsb
inc
subb
test
or
aas
popa
jne
lahf
xor
shrl
add
fdivl
xchg
xlat
pop
adc
in
jae
cmpsb
das
push
xor
cmp
insl
cmp
push
push
adc
push
sbbb
sbb
xor
div
fs
xchg
les
aam
inc
stc
ds
pop
imul
sbbl
cmp
inc
jne
clc
xchg
fst
add
jbe
aas
lret
jo
iret
xor
addr16
cmpsb
mov
sahf
ja
jae
dec
rclb
repz
outsb
mov
jmp
movsl
dec
lock
sahf
push
movsb
sub
out
sti
push
and
pop
sub
mov
xchg
mov
push
xchg
adc
and
sahf
and
push
pop
jecxz
jg
lods
push
and
inc
enter
pop
jmp
lds
std
jmp
mov
int
jbe
repz
inc
popa
scas
xchg
cmpsl
es
iret
shrb
out
retw
nop
add
sti
into
mov
push
fbld
into
xchg
pop
lahf
ret
xchg
add
popf
add
sahf
arpl
dec
xchg
xor
roll
pop
jge
icebp
out
mov
fcomps
xor
mov
loop
mov
fs
cmp
push
aad
jae
addb
xchg
lahf
es
dec
int3
push
loop
mov
mov
mov
jmp
fistl
test
sbbl
jo
shlb
lret
test
ja
add
jmp
imul
push
mov
in
sbb
pop
xor
mov
fs
pusha
lret
inc
cltd
mov
ficoms
mov
icebp
adc
adc
aaa
xchg
sub
pop
mov
dec
mov
loope
dec
sarl
adc
sahf
pop
ds
lock
arpl
sub
out
xchg
in
and
sbb
mov
dec
xlat
xchg
sahf
mov
cs
dec
notl
icebp
rcrb
aaa
adc
mov
mov
lcall
test
fidivs
jbe
dec
inc
push
add
je
sbb
insb
cwtl
ss
nop
loop
adc
icebp
push
in
aam
lcall
call
adc
sbb
es
sbb
sbb
adc
jp
mov
leave
xchg
js
lcall
lea
xchg
and
js
addr16
mov
add
ja
lret
jge
pusha
fldenv
xor
mov
out
iret
out
pushf
jb
xorb
stc
rcl
ds
mov
rcrl
mov
in
push
int
shll
adc
adc
adc
and
cmp
sbb
xor
pushf
adc
jmp
gs
cmc
pop
iret
add
adc
test
cltd
lret
fwait
lods
cmp
daa
mov
sbb
sub
mov
test
xlat
jns
jp
out
fbld
fisttpl
sub
imul
shlb
std
gs
loopne
cld
lahf
movsb
pop
daa
mov
loopne
lahf
test
scas
adc
mov
push
mov
mov
sub
cld
faddl
sbb
jl
mov
shrb
clc
stos
dec
mov
adc
push
xchg
lret
sub
push
sbb
push
lods
cli
inc
or
dec
inc
popf
pop
add
mov
pushf
jmp
lods
dec
add
ftst
push
or
stos
and
dec
mov
mov
daa
lret
adc
xchg
andl
mov
fildll
mov
addr16
ret
lods
pop
and
adcb
pop
mov
fdivp
cmp
push
loopne
mov
or
movsb
pop
addb
push
adc
out
mov
pop
sbb
jo
mov
fcom
int3
cmp
cmp
scas
mov
dec
sbb
aad
outsb
push
and
mov
dec
mov
xchg
arpl
mov
adcb
lods
xchg
std
push
jno
mov
repnz
insl
mov
sbb
fistpl
sub
fs
inc
int3
push
xchg
std
rorb
jge
push
in
lret
out
pop
cmp
and
out
mov
push
rcrb
mov
jnp
mov
adc
out
data16
adc
imul
cmp
fstl
ud2
jmp
test
dec
mov
das
je
mov
bound
sub
pop
lea
or
out
mov
lcall
aaa
popa
pop
mov
clc
mov
adc
cmp
dec
cmc
pop
rcl
mov
jbe
mov
imul
mov
sub
push
cmpsl
outsb
fs
sub
lahf
mov
jnp
jecxz
int
or
xchg
or
iret
jge
add
ror
xchg
mov
jb
mov
stc
add
mov
and
and
int
adc
test
test
addl
or
movsbl
push
sbb
fildl
movsb
sub
sahf
and
push
in
andb
iret
xchg
arpl
andl
popa
movsb
sub
cwtl
stos
pop
mov
stos
lret
xchg
jge
subb
loopne
pusha
ret
in
imul
mov
in
nop
jg
cli
xchg
cld
xor
cmp
movsl
pushf
or
jecxz
fcmovnbe
loopne
stc
subb
les
repz
int
push
mov
xor
out
movsl
adcl
cmc
push
and
and
sub
mov
les
mov
or
inc
scas
cld
mov
negl
xchg
mov
sub
cli
div
ficomps
jecxz
das
stos
std
dec
cld
mov
fstpt
loopne
and
in
testb
adc
pop
negl
fadds
stc
bound
ret
xor
xchg
dec
idivl
add
out
cmp
add
push
xor
and
cwtl
pop
sub
pop
int
ret
sbb
iret
mull
lahf
mov
iret
jge
xchg
and
lds
imul
cmpsl
es
dec
jge
mov
pop
mov
cmp
loope
cs
add
adc
jns
pop
loop
out
cld
mov
call
out
xchg
das
shl
popf
cmp
sub
sbb
faddl
popa
xchg
mov
adc
xor
cmc
icebp
push
lret
jge
jnp
pop
pop
push
cmpsl
dec
push
xor
idivb
insb
xor
mov
les
das
and
insl
cmpsl
or
inc
push
daa
iret
rorl
and
sub
xchg
lahf
mov
add
xchg
push
in
decl
pop
mov
xchg
mulb
insb
popf
loopne
dec
mov
mov
aas
test
dec
jbe
mov
aam
xchg
mov
cs
jae
repnz
mov
ljmp
sub
xor
leave
int3
mov
push
mov
andl
inc
fnstsw
jnp
rcrb
fists
popf
sbb
imul
ds
imul
in
out
icebp
pop
loope
icebp
add
adc
orl
mov
jp
cmc
sub
jns
inc
adc
sub
adc
push
shl
push
shr
xor
jp
out
mov
cmp
xlat
sub
add
nop
inc
inc
loope
inc
shrl
lods
movsl
mov
mov
popf
jg
inc
fwait
test
xchg
cld
pop
into
and
popa
jbe
aam
out
jle
sahf
jbe
xchg
sbb
test
xchg
xor
push
mov
enter
lods
fildl
ja
sbb
sbb
sub
dec
or
scas
lcall
and
cld
data16
aad
stc
or
cmc
faddp
in
cmpsl
leave
popa
mov
or
fwait
daa
push
int
fists
and
movsb
push
cmp
sub
loopne
inc
sbbl
cmpsb
lea
adc
mov
mov
repz
and
bound
mov
lahf
movsl
xchg
cmc
push
cld
ret
inc
mov
into
es
mov
fbld
cmpsb
push
mov
lcall
daa
push
test
mov
dec
adc
stc
xchg
jae
loope
mov
dec
xchg
sub
lods
test
fdivl
cmp
jmp
les
mov
dec
sub
cmp
mov
pop
dec
cmc
pop
mov
xor
pop
dec
mov
icebp
scas
mov
add
lods
xor
int3
shlb
ror
das
mov
or
lods
in
imul
jno
jno
sub
pop
xlat
pop
or
push
mov
and
stos
mov
lods
push
ja
add
pop
sub
lods
cmpsb
test
cmp
out
div
cmc
cmp
xchg
add
xor
mov
shlb
cs
xor
imul
rcrl
lods
jg
data16
fistps
ds
divb
xchg
iret
call
aad
bound
pop
test
test
outsb
push
mov
adc
and
dec
sub
imul
movsb
iret
mov
cmp
aaa
cld
fcoml
cmpsl
stos
cli
cltd
inc
mov
push
ss
inc
in
std
pop
push
inc
test
mov
ret
mov
jns
or
mov
loope
les
or
dec
cmpsb
push
mov
push
and
stc
sti
insb
dec
pop
dec
cmp
or
adc
mov
int3
jg
test
addl
xchg
mov
js
movsl
xor
outsb
jle
xchg
mov
xchg
stos
mov
pop
pop
cld
dec
je
rorb
xchg
xchg
add
mov
fsubrs
and
test
in
ss
jae
jle
sbb
adc
outsl
ret
sahf
jg
addr16
addr16
pop
sub
test
test
push
push
roll
fsubrl
insb
dec
xorl
mov
out
add
data16
ret
xchg
ret
fmull
fiaddl
mov
gs
imul
fsubrl
inc
iret
cmp
mov
push
mov
xchg
cmp
mov
add
mov
std
lcall
es
pop
std
repnz
fcompl
gs
loopne
cmp
sub
push
push
push
mov
pop
mov
outsb
push
sti
mov
pop
fwait
rorb
sbb
and
and
mov
jmp
sub
popf
pop
call
invd
arpl
jmp
adc
scas
stos
mov
and
jns
pop
nop
test
lods
enter
repz
cmpb
ret
mov
adc
jb
jne
fsubrl
fidivrs
or
out
inc
sbb
dec
loopne
xchg
mov
cmp
cmpl
xchg
imul
ljmp
xor
lea
push
lods
and
sub
xchg
mov
xor
and
out
call
lret
xchg
xchg
and
mov
test
lret
inc
and
push
cmp
push
or
xor
cmp
aaa
push
xor
ret
imul
sub
cmp
repz
cld
mov
mov
pop
xor
lods
js
fdivr
mov
cmp
and
cwtl
cmp
icebp
jbe
pop
xor
or
fcomp
pop
daa
movsl
fisubl
adc
xor
jecxz
cmc
add
movsl
cmp
iret
out
sub
xchg
or
imul
mov
test
inc
adc
rol
cmpsl
std
or
jecxz
fsubs
xchg
jnp
fwait
inc
movsb
lods
mov
lret
stos
xchg
and
out
mov
inc
mov
mov
cld
fsubl
rorb
jmp
dec
mov
lods
xabort
rcrl
jne
fnstcw
and
enter
mov
jge
jp
pop
scas
imul
scas
pusha
sarl
pop
imul
pusha
mov
push
push
fcompl
shrd
mov
jl
iret
je
xor
in
or
xor
popf
jle
out
add
stos
test
push
fistpl
xchg
sbb
flds
sarl
fstl
jp
pop
test
and
cld
loopne
adc
stos
inc
hlt
in
cld
sbb
jns
stos
or
sub
xchg
pop
xor
and
pop
jle
aam
cltd
ljmp
enter
pusha
shr
mov
and
sub
jle
xchg
push
or
mov
mov
lahf
dec
push
sarb
mov
inc
and
out
or
roll
jge
lcall
jae
jb
adcb
cld
cli
leave
pop
popa
or
mov
xor
outsl
enter
jae
fisubl
jecxz
add
and
add
fimull
dec
arpl
push
add
jno
push
push
dec
mov
shrb
cs
adc
mov
in
lret
idivl
std
pop
clc
push
xchg
dec
stc
and
xor
dec
mov
jge
or
ds
fnstcw
add
dec
mov
outsl
jo
ficoms
inc
fs
add
out
and
inc
mov
frstor
adc
mov
push
addr16
and
inc
sti
cmpsb
mov
pusha
sbb
or
mov
cwtl
scas
loope
jne
push
xor
mov
mov
push
loopne
xchg
sub
mov
adc
icebp
lahf
xchg
popa
aam
xor
xor
push
in
add
adc
mov
fidivrl
mov
inc
sub
je,pt
les
xchg
xchg
fwait
imul
push
push
sbb
cmpsl
mov
mov
outsl
dec
inc
popf
push
inc
cs
rcrl
mov
ds
movsl
pop
adcl
insb
out
or
sub
pop
mov
dec
in
mov
movsl
test
cmp
cmp
jl
add
das
bound
sbb
jp
data16
das
test
jp
lock
scas
and
aam
pop
loop
cmp
je
jae
dec
mov
mov
out
fwait
xchg
loopne
shrl
inc
fistps
cmpsl
dec
jne
iret
adcb
jle
cwtl
cmpsb
sbb
test
dec
jl
and
faddl
in
scas
in
imul
add
sbb
sub
xchg
or
iret
insl
lods
aas
adc
fwait
mov
inc
sti
lahf
lahf
and
push
pop
sub
test
sbb
fcomps
inc
std
popa
decb
pop
mov
out
movsl
movb
mov
pop
or
fsubl
insb
inc
pusha
movsl
pushf
cwtl
xlat
mov
ds
push
ljmp
adc
inc
mov
pop
or
adcl
sbb
divl
scas
jp
push
push
idivl
and
sub
cli
in
push
sub
mov
adc
repnz
stc
std
xor
jae
into
shlb
imul
xchg
popa
dec
and
fists
imul
dec
call
xchg
push
addr16
mov
push
out
test
imul
lea
jo
fwait
ss
inc
outsb
mov
lahf
int3
scas
pop
mov
push
aam
push
test
cwtl
push
icebp
fists
add
xor
test
push
lods
les
mov
push
push
and
jae
xor
scas
jp
movsl
cwtl
mov
sbb
ret
xor
ficomps
out
cmp
cmp
movsb
gs
push
adc
lret
pop
cmc
loopne
adcb
cmpsb
xchg
scas
outsb
rcrb
hlt
bound
push
repnz
push
xchg
sarl
insl
cs
inc
sbb
fsts
push
bound
cwtl
cmp
out
enter
mov
rcl
ucomisd
dec
insl
inc
xor
cs
int
ret
rolb
fdivl
stc
lds
mov
xchg
or
sub
pop
cwtl
sbb
sti
fidivl
stc
push
mov
jl
or
cld
and
test
aaa
fwait
push
dec
mov
jbe
sub
adc
adc
cli
push
mov
xor
adc
sahf
jp
pop
sti
mov
loopne
and
mov
ja
adc
push
mov
sub
out
pop
mov
test
and
xchg
cmp
cmp
cli
outsl
push
nop
xchg
mov
or
sub
mov
loopne
or
sub
sub
lods
sbb
dec
lahf
add
orb
or
and
mov
sahf
pop
xchg
xchg
xchg
ljmp
rorb
ja
sarl
test
lahf
dec
jns
les
sarb
rolb
int3
pop
rcrl
xlat
or
push
imul
lea
clc
pusha
cmpb
std
idivb
jo
call
push
mov
stos
testl
sub
push
jg
sbb
or
mov
movsb
aaa
popa
mov
and
mov
ret
addr16
sahf
in
xchg
cmp
gs
xchg
jmp
or
xor
test
cmp
push
gs
mov
or
inc
xlat
dec
call
das
je
xchg
shl
mov
jmp
out
mov
fs
push
mov
fidivrl
movsl
fwait
jle
and
cmpsl
jo
pop
mov
out
xchg
sub
rcrb
clc
mov
add
sbb
adc
jle
mov
xchg
add
lahf
repnz
mov
adc
push
aaa
inc
sub
push
psrad
sahf
cmp
sti
cmp
cmp
orl
jbe
mov
pop
shr
das
sub
push
mov
int3
test
add
sub
fldenv
adc
popa
out
dec
pop
repz
lods
cld
pop
in
xor
push
or
adc
fsts
xlat
add
xor
dec
xchg
cmp
lret
sub
jb
mov
mov
enter
jle
mov
xor
out
aaa
ds
jmp
out
testb
xchg
scas
mov
xor
mov
rcrl
scas
push
sar
pop
or
insl
into
jno
dec
out
inc
mov
es
dec
loopne
mov
cmp
in
cmp
cmp
mov
lods
jge
ja
or
dec
push
or
mov
test
add
xchg
test
aad
mov
add
jo
and
xor
pushf
test
jg
fsubrs
sarl
cmc
clc
add
hlt
cltd
push
popa
lods
pushf
dec
andb
pop
aam
xorl
xchg
or
push
ljmp
sbb
outsl
push
sti
std
aaa
pusha
loop
mov
subb
cmc
push
mov
shlb
or
cmc
push
dec
cmp
mov
pop
pop
lods
js
push
sbb
in
jbe
xlat
imul
xchg
je
xor
faddl
cli
insb
das
mov
cmp
or
sub
lret
dec
push
fnstcw
xor
cmp
or
filds
clc
mov
inc
test
pop
jmp
jbe
cli
and
insb
mov
push
push
jno
jg
xchg
outsb
pop
pushf
int3
mov
mov
jle
mov
inc
pop
cmc
mov
add
mov
or
int3
loop
push
out
mov
xchg
lea
jnp
sub
cltd
cmp
ret
jmp
cltd
cmc
push
adc
push
loop
orl
xor
sarb
rep
mov
aaa
cmp
rol
xor
xor
pop
pop
in
ret
insl
fwait
data16
ds
fcomps
ffree
and
dec
inc
leave
add
xchg
push
lahf
xchg
or
sub
jae
cs
cli
mov
stos
pusha
nop
ret
xor
test
mov
and
aas
pop
or
or
rclb
xor
adc
or
xor
shll
xor
out
push
clc
dec
xchg
inc
jl
jmp
and
push
in
mov
pop
ret
pop
aad
hlt
shrb
popf
jnp
clc
lods
adc
dec
inc
or
mov
mov
mov
xor
push
iret
jno
icebp
je
xchg
adc
mov
fwait
cmc
pushf
les
add
cmp
outsb
jge
cmp
mov
out
add
mov
jnp
inc
jmp
push
pushf
dec
test
aas
jmp
shlb
pop
mov
cmpb
xchg
xchg
inc
cld
mov
mov
sbb
add
or
icebp
lcall
loop
xchg
dec
xchg
ja
test
fwait
jecxz
mov
popa
push
xor
mov
fwait
scas
adc
jns
call
xor
sub
subl
add
stos
ficompl
dec
mov
sbbl
es
xor
inc
inc
fistpl
mov
jmp
cmp
jl
repnz
jns
pushf
mov
pop
inc
rorb
jmp
inc
ja
push
rol
cmpsb
test
xor
push
aad
cmp
push
pusha
ret
cld
pop
pop
dec
or
add
cmp
jecxz
roll
dec
xlat
sub
jns
xchg
stos
add
and
or
nop
xchg
out
in
out
pop
and
push
lock
mov
js
lahf
cmp
lea
or
sti
push
and
in
ret
xor
sub
sub
mov
pop
mov
and
test
std
mov
jge
push
jp
int
mov
lock
push
dec
loope
add
mov
adc
mov
xor
loop
inc
sub
cmp
mov
dec
cmpl
pusha
dec
stos
mov
leave
in
cmpsl
jle
movsl
cmp
fimull
fsub
in
dec
mov
dec
sahf
push
push
cmp
push
bound
mov
xchg
leave
jb
and
sub
mov
shll
add
cwtl
cmp
cmp
scas
adc
inc
enter
mov
adc
sbb
insb
xor
clc
or
inc
or
pop
out
mov
out
popf
mov
movsb
loopne
cmp
sub
xor
cld
lahf
loop
arpl
aaa
popa
add
arpl
dec
out
pop
cmpsb
pop
push
setbe
mov
push
bound
add
outsl
cmc
mov
out
cmp
in
pop
cltd
fadds
icebp
mov
std
xchg
mov
mov
xchg
jns
test
dec
in
aad
repnz
out
clc
pop
in
or
arpl
popf
jns
sti
or
gs
stos
fldt
arpl
push
hlt
mov
add
xor
mov
clc
cs
push
repnz
cmp
shll
xor
pusha
dec
roll
fwait
cwtl
bound
dec
fidivs
inc
mov
push
push
jae
not
mov
lret
je
jns
adc
sbb
cltd
das
or
and
cld
aam
xor
add
push
cmc
mov
jnp
shrb
inc
lret
xlat
jno
call
popf
inc
sbb
in
ja
mov
inc
es
pop
jno
push
test
adc
cmpl
push
imul
ret
iret
mov
hlt
scas
lds
shll
fnsave
leave
mov
shlb
fnstsw
jne
popa
jle
jp
fdivrl
into
sti
or
adc
arpl
or
mov
mov
sub
sbb
js
pop
add
or
loop
push
or
test
lret
pop
movntq
out
in
add
sbb
imul
jmp
adc
mov
aas
fdivl
pop
mov
sti
adc
cld
pop
lea
jne
jp
jge
xchg
cmp
mov
mov
jno
xor
push
sahf
push
push
or
lret
or
sub
pop
mov
mov
shll
jecxz
push
cmp
fidivl
lods
in
lcall
sahf
xor
sub
clc
xchg
xor
outsl
mov
jg
mov
mov
cltd
psubw
int
stos
cmp
dec
out
push
xor
pushf
icebp
mov
mov
add
mov
xchg
mov
or
lock
stos
imul
pop
seto
out
shr
add
and
xchg
in
out
ret
dec
push
out
shrl
mov
xchg
mov
xor
int
in
out
fisubrl
call
xor
test
mov
lods
add
mov
xor
jp
stc
sbb
jge
lret
cmp
jmp
mov
popa
jle
pusha
ss
and
cmp
xor
cmove
xchg
into
mov
jg
mov
aas
inc
cli
ret
leave
loop
test
and
fmuls
fwait
mov
int3
jg
or
cmp
popa
push
xor
lret
insb
xchg
cs
int3
aad
gs
push
add
bnd
sbb
pop
pusha
push
movsb
pop
xchg
xor
mov
leave
mov
pushf
inc
jns
aas
sub
or
push
outsb
mov
add
dec
in
std
rclb
in
std
sub
into
stos
or
add
mov
je
pop
jbe
jmp
xlat
nop
fs
add
loopne
mov
or
xor
arpl
adc
sbb
push
adc
ret
sahf
nop
sti
sti
fdivl
rcl
xchg
mov
or
call
xchg
jp
cmpsb
cmc
cmp
xor
mov
and
mov
add
sub
repnz
insb
dec
dec
push
inc
mov
xorb
xchg
add
xor
ljmp
data16
loopne
hlt
push
cmp
cmc
movsl
push
lods
inc
push
jo
lret
rep
fwait
in
sar
ror
flds
inc
mov
jnp
rcl
xor
outsl
dec
jb
jecxz
fildll
add
inc
jae
int3
lea
sub
sub
fwait
lea
jle
fwait
ret
add
mov
loopne
dec
outsl
cmp
imul
jo
inc
mov
mov
or
mov
mov
push
std
and
test
xchg
lock
xchg
and
in
sub
mov
repz
push
shll
addb
incl
lret
jecxz
iret
rorl
push
mov
adc
addb
add
mov
mov
xor
xor
std
icebp
cltd
nop
dec
cli
repz
pop
shl
and
out
push
cmpsl
aad
push
jae
xor
mov
fldl
xor
cmp
sub
or
push
jl
aaa
in
aaa
incl
es
lret
sub
scas
pop
push
mov
lcall
filds
or
mov
inc
or
cmp
fcmovu
mov
or
loope
xor
mov
or
dec
jnp
mov
xchg
jmp
jp
and
lcall
enter
mov
push
out
push
inc
dec
pop
push
cmp
jbe
xchg
int
shlb
add
add
clc
shlb
or
cmp
movsb
xor
inc
pusha
add
mov
pop
mov
push
mov
pop
jmp
mov
xor
xor
mov
sbb
add
and
scas
notb
pop
mov
inc
jg
movsl
mov
sarl
cmp
mov
mov
mov
adc
aaa
fsubr
jg
mov
push
dec
xchg
test
fpatan
cwtl
push
test
pop
clc
sub
fisubs
mov
rcrb
dec
jp
and
push
lcall
push
and
lahf
daa
lea
xor
sub
sti
test
xor
call
addr16
rcl
push
mov
and
das
cmpsl
in
jb
lcall
scas
movsb
push
xchg
mov
fistps
add
add
cmp
repnz
and
sbb
and
xchg
mov
icebp
leave
inc
jnp
jmp
inc
push
pushf
int
into
fs
test
ja
fsubs
mov
and
xchg
iret
pop
jbe
inc
aad
call
test
lahf
or
xor
sub
push
jne
mov
pushl
jmp
sti
xchg
jp
jge
mov
shll
and
fidivrs
sbbb
aas
das
mov
xor
dec
pop
in
cmp
lock
dec
shll
repz
jmp
lret
xor
pop
nop
loop
std
dec
movb
cmpsl
inc
loope
inc
mov
sbb
ret
ret
cli
gs
rep
les
push
orl
add
jl
sub
ret
imul
mov
mov
test
mov
scas
mov
incl
and
outsb
js
jl
test
cmp
pop
pop
pop
jge
int
jle
cmc
mov
mov
mov
js
add
cli
sub
mov
adc
int
sarb
cmpsl
out
pop
and
mov
pop
sub
shlb
out
xor
fildl
andb
aas
cmp
fadds
xchg
sti
out
and
inc
jle
popf
pop
jle
sub
mov
adc
sub
ljmp
pusha
movsb
mov
scas
cmc
aaa
add
clc
fnstenv
cmp
cmpsb
jg
pop
stos
ret
out
aad
or
add
pop
cli
xchg
clc
dec
jecxz
data16
lds
jp
rcl
add
outsb
mov
scas
lea
lock
roll
and
rcll
or
popf
pop
add
out
sub
adcb
mov
mov
outsb
mov
or
rcll
pop
cmp
mov
inc
dec
add
fisubs
out
sahf
js
jecxz
out
add
xor
xor
test
aam
movsb
repz
pop
jg
test
sub
outsb
out
repz
jp
sub
imulb
cwtl
sbb
and
fs
cmc
les
mov
idivl
aaa
mov
sub
jle
or
dec
sbb
sub
pop
inc
inc
addr16
sub
insb
shrb
or
xchg
bnd
in
xchg
jo
mov
shl
cltd
push
xchg
pop
push
out
ret
aaa
stos
cmpsb
das
dec
sti
cmp
or
mov
lods
push
cmp
push
inc
or
xchg
mov
jo
call
addr16
mov
xchg
inc
mov
push
inc
fbstp
pusha
xchg
xchg
call
inc
imul
mov
sub
cmpsb
or
lea
adc
arpl
jge,pt
addr16
inc
sahf
mov
dec
outsb
cwtl
push
sub
jle
dec
mov
out
adc
div
dec
leave
shlb
aam
inc
jbe
mov
out
lods
sbb
pop
and
loope
sbb
sub
lock
cld
mov
jp
pop
add
cmpsl
in
adc
mov
or
aad
sub
std
je
jl
sbb
loope
inc
xor
sub
push
jo
dec
ret
or
mov
sub
push
dec
sbb
xchg
push
int
into
inc
push
mov
sub
push
adc
adc
insl
jmp
pop
in
loope
hlt
imul
inc
ret
fwait
dec
dec
notb
push
adc
sub
sub
dec
mov
xchg
add
jl
sub
mov
fwait
movsb
mov
pop
jecxz
scas
clc
andl
mov
jo
enter
aam
xchg
lods
inc
cltd
sti
jg
leave
repnz
pop
or
stos
sub
test
cmp
std
dec
dec
pop
mov
int
aam
xchg
and
mull
int
lock
xchg
in
hlt
mov
jb
push
xor
adc
jno
aaa
jno
pop
jne
sub
push
es
and
cld
pop
imulb
jae
test
mov
out
popf
mov
mov
sbbl
cwtl
test
sbb
popa
mov
add
adc
pop
xorb
lret
or
push
ficoms
adc
sbb
pop
pop
mov
adc
ljmp
outsl
and
mov
sbb
insb
sbb
push
gs
push
mov
insb
aaa
xor
cli
mov
aad
jne
dec
fs
pop
into
cli
cli
fwait
in
sub
rorl
cmp
xchg
jo
leave
jmp
out
pop
jge
out
addr16
push
sbb
xchg
jno
mov
pop
fnstenv
out
les
sbb
cltd
leave
dec
mov
cmc
mov
mov
stos
test
pop
std
sbb
or
divb
cmpsl
pop
cmc
and
cld
ds
aaa
push
pushw
out
out
sbb
mov
dec
sbb
pop
mull
jmp
jne
and
aad
aas
inc
aam
aaa
popf
rcrl
les
aas
mov
scas
lock
repz
mov
lret
sub
push
jno
decl
mov
stc
push
popa
cmp
add
xor
pop
scas
xchg
clc
lahf
loopne
and
dec
lods
subb
loop
jl
jnp
stc
cmp
pop
rorb
cmpsb
add
fwait
inc
shll
imul
test
insl
lcall
popf
mov
xlat
sbb
add
aaa
fnstsw
push
dec
and
out
and
jne
je
lods
lea
out
cmp
shll
xchg
cmp
enter
xchg
fnstcw
fwait
adc
xor
or
add
jo
addl
orb
hlt
test
fwait
add
cs
cld
jle
sbb
rcr
adc
scas
fidivrs
mov
mov
ss
xchg
and
lods
loop
es
testl
call
in
int3
mov
adc
push
fldenv
inc
jge
xchg
mov
lods
std
cwtl
or
es
dec
fsubrs
mov
and
push
jl
pop
insl
addr16
inc
lock
inc
in
rcr
mov
in
int3
sub
mov
aad
call
cwtl
lds
ds
mov
testb
cmpsl
cwtl
or
lods
testb
mov
mov
test
dec
and
fisttpl
flds
loop
aam
jg
push
or
popa
movl
or
and
fucomip
xor
lret
jne
push
insl
in
aaa
sbb
and
mov
jno
jp
lods
les
dec
adc
cltd
inc
cld
xchg
or
and
fldenv
xlat
push
movsl
dec
dec
in
dec
jg
xchg
dec
cmc
xchg
cltd
pop
dec
loop
test
push
lret
pop
stos
xchg
mov
sub
adc
mov
aam
cs
in
cs
xlat
shll
test
mov
enter
adc
lret
xchg
lods
xor
push
and
sub
inc
push
gs
js
aam
imul
sbb
test
int
ds
popf
lea
fldt
jno
add
xchg
lea
call
push
je
mov
lcall
inc
dec
or
negb
push
add
adcb
sbb
cwtl
repnz
rorl
push
loopne
test
add
test
inc
push
inc
scas
imul
lock
cwtl
or
or
push
xchg
rcr
pop
subb
pop
jg
xchg
or
mov
inc
xchg
sbb
inc
jge
mov
in
or
fdivr
jg
lea
in
mov
dec
adc
lret
jmp
std
mov
sub
int
mov
inc
fstps
roll
int
xor
lods
in
mov
jg
scas
cmp
adc
in
or
mov
iret
xchg
and
enter
xlat
dec
push
lcall
sbb
jb
je
lds
jnp
cld
lret
jmp
xor
mov
jne
push
fsubl
fisttpl
das
and
bound
mov
mov
pop
stos
push
sbb
push
lmsw
mov
adc
cmc
rcrl
mov
inc
fdivl
mov
inc
push
lods
pusha
xchg
jecxz
cs
outsl
xor
xchg
or
xlat
push
cli
insl
movsb
add
inc
xchg
adc
push
and
arpl
cld
cli
gs
adc
adc
dec
outsl
mov
push
stos
or
inc
cmc
add
push
push
ret
inc
jge
loop
xchg
cmpsl
sbb
je
inc
in
roll
repz
mov
rorl
stc
lret
adc
xchg
jmp
shl
iret
mov
ret
jl
insb
cmp
pop
xchg
mov
jo
int3
hlt
out
scas
fisttps
push
subb
jge
loop
mov
repnz
add
mov
xor
fstpl
dec
sbb
ss
inc
mov
pop
rcrb
movsb
cmp
repz
stos
push
addl
jno
addr16
jno
adc
daa
mov
add
jl
ficoml
mov
shr
dec
lds
or
dec
mov
jnp
repz
out
mov
jg
jae
add
stos
daa
data16
nop
fildl
addr16
or
xor
adc
mov
xor
adcl
ja
in
cmc
in
fldl2t
push
mov
shlb
mov
js
inc
xchg
out
sub
imul
data16
shlb
hlt
or
ret
insl
mov
cwtl
inc
cmpsl
mov
nop
jnp
or
lret
ret
jo
in
xchg
bound
andb
clc
std
ja
outsl
mov
lods
loope
jg
pop
popa
push
push
xor
aam
hlt
ret
mov
xor
push
inc
lock
cmp
xchg
adc
cwtl
mov
sub
cld
test
mov
push
and
xchg
popa
pop
jp
int3
sbb
lret
xlat
outsb
mov
mov
adc
dec
sahf
gs
in
push
sbb
and
adc
faddl
add
rorb
xor
mov
sub
sbb
stc
push
sub
lcall
mov
in
sub
scas
testl
add
fsts
sub
sbb
xor
push
std
xor
in
decl
fistl
dec
lds
insb
push
inc
xor
mov
fnstenv
xor
mov
jl
jle
jae
inc
adc
testl
inc
stc
daa
subb
jns
aaa
and
push
loope
dec
push
ss
xchg
ja
xor
fdivrp
xchg
dec
sbb
add
push
xchg
sti
push
hlt
test
dec
jo
mov
push
and
cmpl
repnz
into
shll
test
add
mov
xchg
pop
pop
mov
pop
imul
outsl
data16
int3
inc
jae
cmp
jb
push
pop
icebp
out
outsl
insl
enter
mov
mov
xchg
lret
mov
pushf
scas
pop
repz
lcall
jmp
lods
mov
lock
adc
popa
ss
ja
js
and
adc
pop
xor
aam
jl
xor
lahf
jbe
push
ret
lret
std
xchg
jl
mov
jb
fs
mov
dec
roll
sbbl
dec
xor
mov
pop
dec
and
ss
pushf
jge
pop
jg
repz
or
mov
cmc
jl
aad
pop
idivl
push
pop
xchg
fmull
and
nop
test
mov
xchg
mov
bswap
mov
pop
jmp
mov
test
push
fcomp
movsb
cmp
dec
out
in
adc
sbb
shr
xor
cmp
dec
cld
push
add
add
mov
push
cmpsb
test
ja
xchg
add
lret
fsqrt
jp
imul
xor
lret
jge
ret
call
bnd
jo
xor
mov
in
scas
xchg
cmc
pop
sub
cmp
cmp
rorb
sbb
aad
cmp
xor
pop
test
inc
ja
push
jmp
xchg
add
ss
ds
xor
jg
inc
mov
negl
pusha
jbe
and
adc
lods
cmc
fdivrp
inc
inc
dec
sub
mov
or
and
mov
inc
push
push
les
mov
lods
or
cmp
and
inc
cltd
cwtl
subps
bound
mov
into
inc
jo
mov
imul
rolb
add
pop
int3
scas
cmpsl
inc
mov
or
imul
cltd
push
dec
mov
out
fnstenv
inc
or
mov
jae
cmp
push
jns
dec
icebp
jo
mov
mov
fidivrl
lahf
mov
push
push
enter
fmulp
push
sbb
mov
bound
into
addr16
sbb
mov
pop
sbb
mov
repz
shll
pop
mov
xor
mov
mov
rcll
mov
arpl
mov
mov
ret
jno
sti
pushf
insb
pop
call
ljmp
dec
push
dec
mov
dec
lds
sbb
jae
jne
fldl
loop
and
arpl
add
call
inc
cmc
push
movsb
into
dec
pop
fnstsw
push
aam
jle
pop
into
lock
in
jmp
aad
scas
ficomps
mov
lahf
xchg
rcl
add
in
out
dec
sbbb
sti
ret
mov
push
push
jle
or
sbb
aam
sahf
cmp
inc
test
scas
sub
in
or
push
sub
pop
pop
sub
xchg
loopne
scas
jmp
das
ret
and
sub
mov
ficoms
push
xchg
jecxz
dec
cmp
push
loop
jecxz
bndstx
repnz
xchg
nop
imul
jecxz
hlt
adc
mov
pop
out
add
push
and
movsb
mov
rcrl
cmova
dec
pop
aam
pcmpeqd
outsb
xchg
lahf
mov
femms
out
jno
adc
xlat
pop
inc
jbe
mov
mov
imul
movsl
adc
jp
jl
mov
mov
sbb
xor
scas
or
loope
cmp
sbb
inc
idivb
shl
add
or
lahf
aad
pop
divl
std
lds
mov
test
loop
xor
arpl
and
push
add
arpl
and
xor
adc
mov
int
dec
aad
mov
add
pop
sahf
fistpl
or
flds
mov
addr16
roll
cmp
inc
mov
mov
mov
push
jbe
shlb
cli
xor
imul
xchg
mov
add
imul
mov
xchg
mov
fcompp
xor
movsl
add
add
pop
mov
sbb
mov
test
jno
and
mov
sbb
xor
xchg
out
test
xlat
shll
and
scas
cmp
jbe
inc
bound
xchg
fcomip
xor
lahf
dec
imul
stos
push
lret
aam
sbb
dec
sahf
incl
lds
push
test
inc
inc
push
stos
mov
cmp
xchg
dec
pop
pop
mov
dec
push
and
ficoms
pop
ja
fcomip
mov
xor
dec
ror
dec
aam
push
jnp
mov
pop
cmp
lret
sbb
pusha
cmp
scas
push
ficoml
addr16
fisttpl
add
pop
test
popf
jge
insl
jge
inc
sub
mov
inc
icebp
out
or
and
add
cmp
or
mov
sbb
shrb
nop
arpl
sbb
hlt
lea
sub
out
jmp
xor
gs
pop
popa
inc
mov
cmp
scas
shll
shr
ror
xchg
and
mov
push
jae
hlt
mov
mov
cli
add
not
jno
scas
sbb
jle
mov
in
cmp
stos
pop
lods
ljmpw
push
das
mov
jno
dec
push
int
or
iret
pushf
pop
mov
pushf
fwait
or
inc
mov
repz
bound
adcl
push
pop
adc
ljmp
das
adc
fcmove
adc
xchg
or
dec
ret
popf
sub
js
cwtl
xor
lcall
jmp
out
or
scas
jmp
mov
js
xor
sub
stc
and
popf
pop
dec
mov
lret
add
loop
pusha
inc
jl
sbbb
lcall
pusha
push
cwtl
popa
push
mov
stos
jnp
lcall
lret
dec
xor
mov
mov
mov
cmp
xor
pop
add
imul
and
aaa
jns
test
ret
xchg
pop
mov
inc
lds
insl
lcall
ret
ds
cli
add
ja
mov
js
scas
push
aaa
or
iret
or
jno
cmp
sub
test
test
xchg
subl
in
popf
sub
mov
add
rcr
icebp
daa
fnstsw
jge
je
movsl
and
jecxz
aam
inc
aaa
adc
scas
iret
inc
fs
stos
ss
jle
cmp
inc
jmp
mov
xchg
inc
dec
xor
aas
or
insl
shll
adc
mov
cld
rcll
adc
xor
inc
sub
je
ret
mov
inc
outsb
push
sbb
imul
push
dec
mov
mov
and
cwtl
popa
fs
or
sbb
push
pop
xor
insb
pop
xor
mov
and
dec
daa
jmp
mov
lret
push
cmp
lds
pop
push
and
popf
dec
push
daa
int
out
mov
add
dec
pop
sbb
lahf
gs
and
add
cmp
push
and
mov
in
dec
out
pop
out
pusha
imulb
xor
data16
out
xchg
push
stos
cmp
fwait
sub
ds
push
mov
nop
imul
popa
or
pop
bound
lods
ss
inc
test
sbb
pop
clc
test
out
lea
fsubrs
testb
aad
mov
lods
lock
pop
xchg
cltd
mov
ss
bound
lea
in
rolb
fcmove
jnp
adc
add
jecxz
fs
xchg
nop
stos
negl
or
jns
xchg
lds
inc
dec
test
or
aam
xchg
inc
push
mov
out
add
jge
stos
mov
jne
insb
test
add
stc
mov
pop
dec
loopne
je
sub
pop
aaa
jnp
add
mov
ror
orb
mov
mov
les
ljmp
insb
pop
dec
stc
iret
test
insb
sub
rcll
jge
inc
pop
mov
aaa
pop
and
idiv
stos
inc
mov
inc
xchg
xor
cwtl
xchg
nop
xor
jbe
push
rcll
add
in
icebp
jbe
dec
push
jl
inc
inc
mov
lahf
xor
scas
xlat
sbb
idivb
push
lcall
dec
jno
pop
scas
mov
push
fbld
pop
mov
test
testb
mov
mov
test
lret
sbb
xorl
pop
sub
lea
jne
push
add
ds
dec
xchg
inc
lds
pop
pop
add
xlat
cmp
add
add
fwait
add
test
mov
sbb
inc
fnsave
or
pop
xor
or
in
sub
jo
adc
icebp
or
mov
pop
addr16
pop
arpl
aaa
or
in
call
or
leave
loop
inc
pop
xor
repz
inc
push
push
add
inc
or
fwait
stc
xor
push
aam
xchg
arpl
cmpb
fisttpl
imul
inc
mov
mov
mov
nop
nop
inc
insb
ds
fcomps
cwtl
xchg
jne
xor
xor
popf
add
adc
cmovae
dec
adc
xlat
es
cmpb
jb
outsl
or
dec
js
cmpsl
and
movsl
cli
lret
cmp
add
bound
cmp
inc
push
icebp
add
cli
sub
out
jno
test
aad
lret
inc
sbb
imul
push
add
mov
mov
call
and
add
xchg
push
mov
sahf
clc
in
mov
lahf
jmp
cmp
je
adc
jmp
adc
jg
cmp
push
pop
ds
adc
mov
xor
lcall
ret
xor
sub
loopne
push
ss
aaa
push
sbb
cmp
mov
clc
dec
movsl
jge
popa
mov
pusha
xchg
xor
cmovno
mov
sbb
adc
fstpt
in
jg
or
push
xchg
insb
jmp
cmpsb
imul
imul
rorl
inc
xchg
sarl
out
lock
sarb
cmp
div
and
enter
cmpsl
push
inc
pop
cmp
cmc
jl
pop
adc
xor
loop
jecxz
ja
jge
std
xor
add
adcb
jmp
xor
push
mov
aas
loope
shlb
mov
mov
test
sbb
repz
sbb
inc
ret
jbe
adc
scas
mov
je
clc
jo
iret
movsl
stos
clc
mov
pop
ljmp
mov
inc
jo
rolb
jecxz
dec
scas
add
imul
insb
mov
xor
cmp
mov
pmulhuw
sub
xor
push
hlt
adc
dec
xor
cli
shrb
test
sahf
inc
daa
add
inc
iret
jo
cld
mov
mov
in
mov
push
mov
es
mov
mov
jne
xor
pop
and
sub
pushf
mov
mov
mov
mov
xor
shlb
scas
dec
mov
mov
adc
stos
out
in
test
arpl
in
mov
cs
aad
insb
mov
loop
hlt
pop
sahf
sti
pop
test
shll
pop
xor
std
pop
sub
xchg
cmp
add
fwait
sbb
xor
bound
insl
test
inc
mov
nop
stos
sub
add
mov
into
fisttps
mov
add
out
imul
sub
or
out
ret
repz
lcall
daa
adc
out
jae
xchg
rcrb
fnstenv
ds
jge
mov
mov
pop
jnp
icebp
cmc
jp
adc
dec
imul
mov
fst
stc
mov
cmp
mov
xchg
xlat
imul
mov
sub
fxch
or
mov
xchg
lods
pop
icebp
out
mov
add
loopne
fwait
sar
adc
pop
mov
mov
mov
ja
mov
movsb
sti
repz
pop
loope
mov
xor
and
subl
sub
divb
jp
inc
or
fwait
jo
push
rcrb
cli
cmp
pop
inc
scas
mov
and
lahf
and
outsl
lret
push
icebp
aas
into
add
inc
shrb
adc
sbb
pusha
xchg
repz
cltd
mov
nop
lahf
sub
es
inc
adc
enter
mov
xlat
push
ja
xchg
or
xchg
lea
xor
xor
and
test
ss
fdivr
sub
mov
fwait
fwait
inc
in
mov
hlt
imul
out
push
out
call
xor
push
xchg
es
je
adc
xchg
mov
adc
jmp
and
movsb
inc
int3
push
popa
stos
repz
rorb
push
inc
or
sar
pop
je
xchg
mov
xchg
jo
popf
leave
xchg
mov
iret
idivb
xor
xor
or
lahf
out
mov
xor
pop
push
cmp
fcmovnb
nop
xchg
ljmp
arpl
test
shll
mov
adc
adc
rcrl
in
pop
sbb
cld
lret
xchg
imul
jecxz
inc
push
or
adc
mov
fstp
jmp
aaa
adcl
cwtl
sbb
sbb
push
cld
jae
call
jae
cmp
flds
or
push
ficoml
mov
mov
cmpsl
inc
xor
js
sbbb
lret
dec
cli
shrb
sbbb
cmp
inc
mov
ja
fdivr
inc
and
je
mov
xchg
pop
sub
cmp
mov
cmp
in
adc
xchg
movsb
xchg
or
test
xchg
xor
incb
push
sbb
pop
test
xchg
daa
xchg
dec
popf
mov
test
xor
adc
out
push
shll
dec
sti
push
decl
lret
stos
je
jb
add
push
ss
shlb
mov
stc
xor
out
dec
add
adc
idivl
mov
nop
in
daa
jp
push
scas
fisubs
pop
sbb
icebp
out
into
inc
inc
rorb
fimuls
dec
xor
icebp
or
mov
mov
dec
cmc
fsubrl
xor
mov
jp
push
ljmp
pop
iret
pop
orb
pop
cmpsl
out
cmpsl
imul
xchg
and
or
xchg
mov
subl
pop
loop
mov
mov
mov
int
mov
gs
adc
pop
mov
out
push
js
mov
or
jle
or
lcall
testb
pop
shll
sbb
add
mov
lea
and
and
sbb
jge
fdivrl
push
stos
cmp
pop
fcoml
cmp
and
mov
cltd
repz
cwtl
push
inc
mov
test
les
fstp
push
arpl
jne
jbe
sahf
sbb
rep
in
stos
adc
cmp
imul
mov
mov
lods
iret
xor
mov
xchg
push
pop
jnp
adc
push
aaa
xor
sub
dec
mov
push
sti
dec
hlt
push
mov
adc
test
incb
dec
add
push
xchg
jbe
or
inc
out
or
lock
enter
adc
pop
sbb
rolb
xchg
or
add
sbb
inc
test
insb
jae
adc
inc
adc
shll
mov
push
or
lret
cmp
sbb
out
mov
insb
js
push
and
mov
in
xor
std
repz
aam
lea
add
xor
sub
xrelease
cli
mov
xor
ss
pop
inc
sbb
push
mov
dec
hlt
fildl
xchg
xchg
jl
xchg
notb
mov
pusha
push
shll
push
add
mov
cmp
les
and
cmp
ret
mov
out
test
outsb
out
in
cmp
or
sbb
aas
sub
xchg
outsl
sub
jo
arpl
cmc
rol
cmp
popa
in
jp
mov
je
xlat
lock
pop
adc
push
or
inc
in
add
sub
add
cmpsb
adc
in
mov
les
scas
pop
out
pop
roll
mov
push
jp
dec
mov
pop
inc
mull
and
inc
xchg
sbb
arpl
cwtl
adc
adc
sbb
aad
sub
xchg
push
mov
or
push
cltd
pop
mov
mov
push
xchg
pop
shl
push
out
test
push
push
cmpsl
xor
adc
lea
mov
bound
sbb
or
leave
repz
arpl
gs
clc
pop
negl
add
sti
lret
and
dec
cmc
push
mov
jge
stos
xchg
cmpsl
sbb
or
scas
lds
fdivs
pusha
jne
fs
aaa
sub
ucomiss
jle
unpckhps
mov
push
jns
cmpl
into
into
fsubs
lret
int
push
fsub
and
pop
push
aad
cmp
lea
pop
shll
xchg
or
outsb
jecxz
flds
sbb
inc
or
addr16
ret
lds
lcall
enter
dec
sarl
dec
mov
jmp
mov
dec
enter
add
fucom
or
pop
pushf
push
cmc
mov
incb
cmp
shl
cmp
xlat
lods
push
aas
call
fnstsw
aam
sub
les
sti
cmc
mov
dec
jbe
sub
jl
push
pusha
in
add
daa
xchg
mov
lock
fimull
imul
test
sub
arpl
xor
xchg
in
jl
lods
aad
test
dec
or
dec
stc
pop
testl
jp
or
lahf
dec
add
dec
cmp
jge
adc
sub
lret
repnz
int3
xchg
int3
mov
mov
xchg
cmp
scas
fwait
bound
xor
mov
dec
and
insb
ja
mov
and
sahf
dec
out
add
sarb
mov
rcr
jmp
adc
inc
inc
jl
sbbl
add
hlt
insb
add
inc
inc
fldcw
test
in
imul
lea
lcall
stc
sub
mov
fistpll
and
sub
xor
cmp
pushf
movsl
rorb
lcall
jge
aas
call
lods
xchg
lods
lret
sub
call
mov
inc
xchg
shrl
adc
cmc
std
cmp
pop
rolb
mov
push
lods
out
jmp
dec
mov
inc
outsl
and
cmc
cmp
jae
orl
les
xor
daa
addb
mov
adc
jp
mov
leave
call
clc
xor
add
into
mov
in
jae
sbb
sub
pop
fsts
out
inc
shl
les
sbb
cmp
mov
adc
dec
mov
repnz
cmc
xor
aam
jmp
or
ss
outsb
rsm
add
jmp
adc
jle
popl
and
jb
jbe
push
insb
in
lea
mov
test
mov
and
sub
jle
dec
cwtl
pop
fsts
imul
mov
mov
bound
adc
mov
push
aas
lock
es
or
adc
je
pushf
cld
fsqrt
dec
sub
dec
adc
int
cltd
dec
test
enter
mov
pop
mov
repz
jnp
out
sub
adc
aas
mov
pop
pop
and
enter
sbb
ss
cmp
sbb
jmp
cmp
into
sub
out
cmp
xor
sahf
adc
jbe
pop
cmp
mov
cwtl
outsb
in
jmp
mov
mov
xchg
xlat
mov
stos
clc
mov
lret
aam
hlt
arpl
push
sub
mov
fdivrs
cmp
xor
add
gs
fldenv
adc
jmp
in
aas
mov
mov
lret
out
cmp
out
push
sbb
sub
mov
mov
inc
jbe
sbb
mov
pop
js
mov
mov
push
inc
daa
jl
jo
outsl
dec
dec
jnp,pn
scas
xchg
pcmpgtd
test
sbb
rcr
imul
sahf
fdivr
inc
add
mov
jnp
dec
mov
mov
mov
sub
ret
into
pusha
sub
mov
sysexit
in
int3
mov
test
dec
scas
push
mov
xlat
in
js
and
push
sbb
pushf
adc
sub
mov
mov
mov
fstpt
shld
dec
xchg
movsl
das
add
xor
jmp
arpl
sahf
mov
das
sahf
mov
fildll
pop
scas
or
pop
push
in
call
mov
xchg
mov
lods
scas
mov
mov
inc
adc
aas
mov
scas
repz
ds
gs
bswap
sbb
clc
jbe
inc
js
pop
scas
mov
add
jae
or
cmp
add
mov
mov
in
lods
lret
psubb
jl
stc
bound
mov
in
xchg
push
iret
popf
nop
pop
inc
inc
mov
push
lcall
cmp
scas
xchg
jg
lods
in
jg
push
jl
mov
or
les
mull
jb
inc
inc
add
lret
sub
inc
cli
shll
cmpl
mov
ficoms
insb
adc
lahf
mov
or
stc
jmp
gs
aam
int3
pop
ljmp
in
mov
sub
jae
movsb
add
jge
cli
mov
int
hlt
gs
shlb
jae
mov
fstl
inc
int3
leave
into
in
xchg
cli
leave
inc
jg
les
std
lcall
in
cmc
xchg
push
adc
lods
pop
daa
xchg
adc
and
mov
lds
jnp
dec
shrb
outsl
sub
sbbl
jg
dec
pop
sarb
call
mov
mov
and
fidivl
iret
pop
pop
scas
jns
pop
jg
mov
fisubl
js
divl
cmp
mov
ja
dec
sahf
sub
outsb
sub
sub
dec
mov
out
mov
int3
cmpsb
mov
loope
add
push
out
pusha
repz
andl
sti
daa
jle
fdivs
adc
cmpb
out
mov
mov
ficompl
add
mov
mov
push
sbb
test
jns
insl
xor
cs
mov
fsts
testl
das
stos
xchg
or
mov
es
pop
leave
adc
xor
imul
es
insb
sti
jns
cmp
cmp
loop
and
adc
push
packuswb
xchg
push
andl
cmp
jae
sub
daa
ret
cmp
dec
mov
shrl
aaa
and
adc
or
fwait
scas
dec
fimull
mov
adcb
dec
jne
sbb
out
fsubrs
clc
mov
in
jns
xchg
js
sbb
data16
push
cmpsl
sbb
xchg
jbe
push
xor
test
jnp
mov
jp
ja
pop
sbb
fdivrl
pop
enter
leave
daa
inc
and
xchg
mov
imul
and
jbe
pop
test
push
test
daa
jnp
in
aam
fstl
xor
pop
out
scas
cs
mov
inc
test
jns
jecxz
sti
lcall
pop
outsb
cmc
fsubr
adc
mov
sbb
xor
or
test
std
inc
dec
in
mov
and
lods
frstor
sbb
setp
or
mov
dec
push
push
xchg
mov
inc
lret
outsl
mov
and
mov
int3
add
mov
and
ret
shll
scas
in
js
inc
mov
xor
jbe
pop
or
and
aad
daa
jnp
cmp
mov
popf
push
leave
scas
inc
cs
xchg
out
inc
jge
enter
sbb
popa
aaa
jp
mov
jmp
sub
insb
iret
push
adc
cld
pusha
mov
loop
xchg
xchg
rorb
pop
pushf
adc
jl
std
xchg
add
xchg
test
or
inc
dec
pop
stos
mov
divb
pop
dec
push
and
push
pop
xor
xor
movsl
xor
sbb
jne
push
outsb
rcrb
xchg
aaa
sbb
jmp
push
adc
mov
inc
and
mov
xlat
jle
adc
adc
jnp
push
call
stc
imul
sub
mov
clc
stos
sarl
jbe
incl
movsb
lds
xlat
mov
mov
jnp
mov
mov
cmp
mov
je
arpl
subb
mov
ljmp
fwait
hlt
jae
jne
jbe
and
jmp
cmp
aaa
cmc
add
ljmp
aad
in
imul
cmp
xor
jmp
sub
popa
or
int3
pop
mov
rcl
inc
xchg
xor
push
out
pop
dec
dec
cmp
repnz
jae
iret
das
inc
jge
inc
mov
bound
and
mov
mulps
sahf
dec
push
or
dec
pop
std
fwait
jo
int3
mov
iret
cmpsb
jl
pushf
scas
pop
iret
stos
mov
shl
cli
std
insb
sub
sub
xor
mov
in
adc
adc
sbb
mov
add
push
add
out
cmp
rorl
fisubrs
jp
pop
ljmp
hlt
xchg
shr
jae
cmp
insb
adc
cmp
daa
xor
popf
outsb
or
std
nop
xchg
mov
incl
dec
lahf
xchg
push
fcomps
test
aaa
inc
adcb
mov
loop
dec
xor
sub
enter
pop
pop
xor
inc
xlat
ret
push
adc
sahf
pop
dec
outsl
das
scas
inc
ss
sbb
sbb
imul
pop
outsb
mov
pop
insb
inc
lret
push
push
subl
inc
mov
gs
jo
negb
fidivrl
mov
nop
cmpsl
test
mov
iret
pop
fwait
lods
inc
aaa
mull
lds
adc
mov
mov
jae
mov
cmpsb
jp
in
lea
das
adc
fwait
mov
sub
lcall
fadd
inc
outsl
test
arpl
sbb
pop
dec
enter
in
shll
push
data16
jne
and
rol
data16
aam
out
push
lcall
xchg
in
add
adc
lods
jl
mov
sbb
xor
outsl
inc
fistpl
mov
stos
test
add
xchg
rorl
shrl
jecxz
mov
popa
scas
cmpsl
dec
rorl
insb
adc
dec
pop
or
xchg
mov
std
mov
mov
dec
adc
fnstsw
push
lock
ljmp
imul
add
cmp
inc
out
cmpsb
jg
lods
popf
enter
and
mov
cmpsb
loop
push
mov
out
sbb
jp,pn
dec
push
or
dec
sub
icebp
dec
ljmp
inc
mov
jae
push
scas
stos
ret
or
mov
xchg
mov
mov
xlat
push
xchg
cmp
pop
sub
xor
cmp
or
es
sbb
inc
loopne
test
sub
into
fwait
int3
cld
pop
fwait
xor
popf
sbbb
loopne
nop
mov
ret
int3
push
mov
test
in
mov
push
cs
lcall
cmp
cmc
cld
leave
dec
jae
stc
imul
xchg
xchg
xorb
mov
leave
dec
adc
ja
dec
leave
outsl
xor
adc
test
jae
cld
mov
jno
cmp
stos
out
xor
mov
mov
sbb
inc
test
mov
or
in
or
xor
cmp
xchg
out
inc
jge
mov
inc
fstps
push
divl
mov
test
hlt
or
jmp
dec
mov
or
pop
imul
cmpsl
lret
cwtl
sub
mov
movsl
mov
mov
push
je
popf
sbb
cmc
sub
mov
sahf
jp
test
xchg
lcall
jae
mov
mul
pushf
inc
push
popa
clc
lea
das
sbb
shlb
movsb
push
fildll
mov
clc
faddl
adc
out
xchg
inc
sahf
dec
out
scas
or
mov
xor
or
ret
test
mov
mov
shlb
mov
ficoms
mov
outsl
movsl
xchg
stos
jge
xchg
or
fwait
shrl
pop
pop
and
ja
xchg
mov
mov
mov
add
leave
add
add
fisubrs
sbb
lahf
lahf
decl
pop
and
lea
jge
add
jb
mov
push
fisttpll
pop
gs
push
push
hlt
ja
jmp
mov
adc
inc
cmp
sub
decl
mov
icebp
inc
lea
jp
js
call
dec
pop
flds
push
xor
aas
mov
testb
mov
xchg
lods
xchg
ds
ret
add
and
sub
test
dec
js
push
xor
mov
aad
imul
cmp
test
and
push
xchg
mov
movsl
xor
adc
rcl
fbld
push
lret
xor
push
iret
push
add
mov
and
xchg
cmp
rorb
pop
nop
inc
mov
adc
nop
nop
xor
jns
pushf
in
pop
cmpsl
cmpsb
fldenv
in
sub
jle
pop
push
pop
sub
xor
stc
dec
sbb
in
cmp
loope
mov
inc
cwtl
pop
mov
jp
push
xor
add
mov
cmp
imul
xor
push
fstpt
incl
jns
leave
pcmpeqd
xor
pusha
subl
fs
cltd
loop
and
sahf
mov
adc
cwtl
pop
add
stos
sub
imul
and
cltd
jl
adc
mov
push
ficompl
int
pop
push
and
mov
mov
loop
adc
out
int
sub
gs
pop
out
adc
test
iret
dec
cmpsb
ljmp
test
lods
xlat
dec
test
sbb
sahf
dec
inc
adc
mov
sbb
ljmp
iret
loop
pop
xchg
sar
mov
sub
jb
lods
dec
mulb
cld
popf
cld
mov
es
adcb
sti
inc
scas
icebp
test
push
shrb
sbb
push
int
rcl
in
out
xor
stc
sarb
and
add
lods
cmp
fwait
mov
mov
push
cmp
push
push
jns
push
lret
sbb
and
pop
aam
push
ret
outsb
cltd
lods
mov
xor
sbb
mov
push
jae
insb
or
sub
lret
and
dec
mov
fs
or
sbb
push
mov
fsubrs
xchg
fnstsw
jb
ret
push
lcall
push
int3
mov
clc
out
jne
repz
call
push
into
je
add
imul
lods
sti
cmpsb
aad
push
adcb
mov
pop
insb
sub
cmpsb
and
xchg
aaa
mov
insb
loope
jmp
ret
jno
into
cmp
add
inc
pop
xor
jo
fsubrl
mov
popf
addr16
jbe
hlt
mov
mov
sbb
pusha
and
dec
push
call
scas
xchg
shrb
dec
mov
sarb
hlt
jmp
icebp
loope
fcmovbe
or
dec
sbb
ret
xchg
fldpi
pop
xchg
aaa
icebp
mov
jb
ficoml
and
push
stos
push
scas
sti
or
stc
aaa
mov
fs
mov
inc
dec
jb
insl
icebp
ret
adc
add
add
mov
bound
ret
loopne
xorl
icebp
sbb
mov
mov
xchg
scas
adc
mov
mov
pop
stc
lock
movsl
int
push
mov
cmp
adc
cwtl
mov
loope
leave
xor
pop
shrb
inc
int
test
outsb
dec
cmp
jb
adc
std
and
adc
jnp
adc
cmp
and
sahf
or
cld
sub
mov
and
push
shlb
fstl
ja
inc
popa
mov
fwait
xchg
insb
std
xor
pop
dec
mov
loopne
icebp
jl
gs
adc
cmpsl
aas
imul
gs
iret
lahf
push
add
insl
sarl
add
jo
jo
adcb
inc
sbb
cmpsb
pop
into
xchg
cmc
aam
or
push
dec
loopne
pop
bnd
popl
or
jle
jg
fidivs
fwait
pushf
fs
out
jo
or
data16
repz
inc
insl
push
in
xchg
cwtl
rolb
inc
es
shr
fildl
ss
lahf
mov
inc
xor
test
mov
push
xor
push
popf
fwait
jge
testl
xchg
dec
or
inc
rcrl
lods
sub
adc
jge
pop
test
lret
jl
cmp
pop
inc
mov
lods
or
loope
inc
xchg
scas
outsl
fldcw
stc
fstpt
jecxz
add
in
sti
movsb
cmp
imul
daa
ljmp
cmp
hlt
mov
and
rolb
xor
das
js
aaa
aaa
in
sub
or
enter
pop
inc
pop
fnstcw
fstpt
cmp
enter
pop
dec
cmp
lock
fisttpll
sub
scas
xchg
sub
cmp
enter
fsts
dec
aad
loopne
sbb
aad
add
cmp
pop
pop
xchg
das
mov
stos
adc
xchg
out
in
lods
and
dec
and
mov
flds
xchg
sbb
push
cmp
arpl
pop
xchg
clc
jo
jmp
sarl
sbb
sbb
shlb
mov
enter
jl
into
cmc
mov
decl
loope
sub
inc
stc
out
pop
mov
pop
test
push
sub
scas
or
jge
aam
inc
cwtl
out
in
xor
lods
fistl
inc
xchg
mov
mov
sbb
sub
loope
or
mov
mov
jo
cmpsl
push
pop
mov
jae
xor
aam
adc
add
mov
xor
mov
or
data16
ret
movsb
xchg
out
xchg
mov
mov
rclb
mov
aad
enter
fwait
adcl
push
xchg
or
jb
pop
sahf
into
add
jmp
gs
xchg
fimuls
adc
push
ret
shr
fs
push
mov
inc
sarb
mov
dec
add
add
clc
fnstenv
cmp
mov
xor
jp
cli
dec
xor
int3
dec
fwait
aad
sti
mov
dec
iret
mov
sti
int
xlat
jo
rclb
push
xor
cmp
pop
add
leave
mov
mov
iret
andb
loopne
jle
jmp
add
iret
divl
jge
sub
int3
lock
cli
xchg
pop
sub
pushf
inc
shl
mov
pop
or
mov
lock
testb
xor
lods
sbb
sarb
in
push
xchg
loop
sub
push
repnz
xor
jecxz
pop
mov
push
jecxz
pop
mov
ljmp
stos
sub
repnz
fildl
push
inc
xchg
xchg
and
sahf
jg
data16
sbb
in
adc
hlt
adc
mov
pusha
testb
faddp
stos
stos
sbb
push
outsb
js
and
enter
fs
aas
jne
xchg
or
pop
nop
sahf
inc
mov
push
stos
ja
inc
pop
and
popa
jne
push
inc
outsl
stos
mov
clc
add
test
sub
dec
cmp
adc
xchg
jne
push
mov
sub
orl
int
ja
enter
lods
mov
repz
jg
scas
js
test
ss
adcb
pop
and
mov
roll
out
lcall
dec
jle
inc
lods
loop
cmp
inc
stos
mov
movsb
nop
mov
int3
adc
scas
inc
dec
push
pop
cli
push
mov
sub
mov
and
lahf
add
add
sub
ja
mov
cmpsb
push
push
call
mov
outsl
lret
pop
fdivrs
data16
adc
sarb
mov
lret
dec
repz
in
mov
stos
repnz
test
cli
mov
pop
jp
jo
add
or
or
or
fldenv
push
pusha
bound
int3
mov
mov
fisubrs
sub
lcall
add
mov
lret
iret
out
into
push
jecxz
jae
outsl
inc
push
cmpsb
enter
fucom
pop
bswap
add
in
add
testb
insb
push
fdiv
dec
and
pop
insl
iret
mov
lahf
pop
add
pusha
pop
mov
sbb
out
cmpsb
inc
jae
sub
es
fbstp
mov
pop
les
push
mov
shll
xchg
or
data16
jb
pop
adc
insl
sbb
add
pop
xor
fcoms
jmp
repz
mov
sahf
call
scas
hlt
dec
mov
jmp
mov
subb
add
dec
xchg
xchg
xchg
orl
push
mov
adc
int
mov
aaa
negl
aam
rolb
in
add
sub
sbb
cwtl
jge
xor
int3
xor
cmp
iret
call
pusha
push
sahf
nop
std
enter
mov
xor
cmp
push
cmpsl
adc
push
fs
sahf
push
xor
lods
in
test
mov
jecxz
inc
mov
es
or
push
add
inc
mov
movsb
or
test
inc
lret
cltd
shlb
sbb
sbb
out
stos
insb
repz
imul
xchg
cmp
sti
xlat
mov
lahf
mov
xchg
daa
add
test
jb
or
xor
jae
mov
lret
imul
xor
sbb
shrl
cmp
loop
rolb
adc
and
rcrl
int
inc
adcl
adc
ror
cmp
sub
add
cmp
dec
out
cmp
shll
sub
idiv
js
xchg
xchg
call
ss
into
jo
pop
ret
mov
mov
aaa
mov
ret
insl
push
mov
and
sub
cltd
pop
add
loope
das
outsl
pop
loope
pushf
fs
rcrl
jae
cmp
push
outsb
int
movsb
test
lahf
pop
repnz
in
inc
std
sbbb
imul
call
andl
fwait
popa
inc
rep
pop
fwait
mov
test
into
adc
jp
popa
mov
lock
cmp
shl
or
enter
aaa
push
sub
add
daa
jb
sbb
push
xchg
imul
scas
push
shlb
out
out
and
mov
adc
xor
lahf
fimull
xchg
xor
dec
cld
and
mov
dec
xor
push
std
rcrl
sub
mov
mov
loope
jle
in
fucomip
leave
mov
loop
jecxz
cs
and
sbb
xchg
out
mov
sub
and
arpl
push
les
xlat
pop
cwtl
fwait
rcl
lock
adc
daa
pop
out
test
lret
mov
xchg
and
aas
or
cmp
outsb
jp
pop
loopne
ficoml
test
inc
fbld
mov
dec
daa
cmp
stc
cmpsl
jns
sub
add
push
out
rcrl
cmp
cmc
pop
lret
shl
push
or
push
stos
jp
insl
subl
mull
inc
loopne
mov
xchg
out
cwtl
mov
sbb
or
add
fbld
adc
xor
mov
imul
xor
loop
ret
xchg
mov
fidivrl
clc
sub
jmp
sub
fistpll
out
repnz
push
loop
shlb
jmp
sbb
outsb
xor
cmp
scas
inc
pop
out
jge
and
scas
imul
rclb
xchg
jl
divb
push
jb
jecxz
push
sbb
out
pop
imul
daa
push
nop
jae
jp
jmp
int3
out
lea
add
xor
cmpsl
repz
jo
fnsave
pop
loope
or
mov
push
gs
cli
inc
jmp
jno
aam
ds
and
dec
sub
mov
inc
cmp
lahf
rorb
xchg
lcall
jae
mov
sti
out
ret
jnp
gs
mov
lahf
mov
stos
jg
jns
add
adc
movsb
push
mov
jl
mov
pushl
jmp
add
sub
pop
fldpi
cs
shlb
mov
sub
add
or
fistps
mov
sub
fcomps
add
inc
shll
inc
ljmp
outsb
pop
xor
popf
dec
fstps
dec
ret
mov
movsb
jle
xchg
in
int
cmp
add
and
cmp
mov
pop
imul
imul
push
or
daa
cli
mov
imul
adc
fneni(8087
pop
inc
jge
cli
add
dec
ds
mov
mov
dec
dec
jo
push
cs
cmpsl
aam
sahf
fs
packuswb
push
push
xorl
cmpsl
push
test
imul
mov
scas
add
dec
mov
mov
ficompl
fdivr
jb
mov
sub
xor
iret
mov
mov
rcrl
fistpl
mov
aas
pop
insl
xor
xchg
cmp
jno
mov
and
ja
dec
and
cmp
mov
xor
jl
and
pop
out
cmp
jae
dec
inc
cwtl
sub
aaa
mov
pop
sub
add
sub
in
pushf
daa
sbb
mov
inc
test
pop
jne
inc
dec
sub
rolb
xor
test
sbbl
push
punpcklbw
inc
test
and
add
scas
cmp
mov
push
or
xor
push
shl
js
lods
aaa
test
push
sub
sub
push
and
ret
push
ja
mov
sub
rorl
insb
iret
sbb
push
dec
jmp
movl
movsl
xchg
and
jbe
xor
out
pop
or
rorl
jle
pop
xchg
pop
or
test
adc
mov
and
sbb
adcb
sub
adc
repz
lret
dec
xor
mov
xchg
push
loop
inc
bound
cli
in
jmp
stc
cmpsl
xchg
dec
out
push
sub
mov
pop
cmpsl
setg
mov
mov
mov
fistl
pop
rcrl
sub
sub
mov
imul
ret
loope
push
test
or
insb
dec
pavgw
push
mov
ds
and
push
add
gs
mov
mov
lods
movsl
jae
jl
cmp
loope
lcall
and
dec
and
fstl
sbb
sub
add
push
xor
aas
jnp
jbe
test
jb
push
dec
xor
xor
sbb
in
notl
sarl
jg
mov
movsb
pop
daa
icebp
lret
mov
and
cmpsl
jg
mov
testl
push
fwait
jecxz
mov
mov
lds
dec
adc
sbb
adc
mov
xchg
jbe
dec
jmp
xchg
sub
aas
in
repz
xchg
inc
js
xor
mov
je
push
rcr
js
mov
xchg
shrb
mov
cmpsl
push
cli
addl
xchg
dec
xor
enter
lock
js
jb
mov
rol
xor
cmc
in
push
xor
fcompl
sub
fnstenv
imul
jmp
data16
xchg
outsl
adc
clc
mov
dec
mov
adc
fdivrs
push
lahf
popa
int3
hlt
and
jbe
xchg
mov
sbb
xor
cltd
test
xorb
int3
mov
ss
jo
xchg
test
dec
inc
imul
jae
mov
popa
cmp
jecxz
rcll
shr
push
push
in
test
ret
faddl
in
mov
callw
push
dec
mov
data16
movsb
fists
mov
mov
xchg
jns
pop
xchg
repnz
loop
dec
lods
pop
or
or
shlb
hlt
and
jns
movsl
pop
adc
loopne
push
cmc
pop
clc
mov
stc
sub
repnz
call
loope
or
lods
fcmovnbe
cmp
push
sub
pop
ds
or
dec
or
mov
adc
push
lret
aas
cmp
mov
xchg
jecxz
sbb
or
adc
fnsave
adc
pushl
push
jmp
jl
dec
push
ds
imul
jae
push
adc
jnp
xchg
lcall
xor
das
call
fldenv
cld
cmp
jae
add
push
dec
dec
jb
out
jnp
cmp
jge
push
dec
inc
ret
mov
sti
insl
lea
xchg
imul
mov
xchg
jge
mov
cmp
dec
fistps
and
or
push
pop
lret
push
sbb
sub
sti
jns
daa
sub
jmp
sbb
adc
in
sbb
stc
lods
and
fsubrs
and
ret
and
fimull
mov
sub
testl
push
xchg
jns
testb
mull
fcompl
mov
sub
pusha
jge
mov
fsubs
cmp
pop
add
sbb
cmp
mov
push
cmp
sbb
ret
imul
sbb
mov
xchg
sub
push
sti
mov
mulb
cmc
das
aas
std
add
add
bswap
cltd
cli
sbb
into
jmp
stc
xchg
and
mov
pminsw
cmp
stos
pop
testl
adc
outsl
mov
data16
dec
jp
inc
fsub
clc
mov
jle
sbbb
iret
cmp
ret
das
ret
addr16
push
jns
scas
loopne
and
loopne
movl
cmp
jg
jle
jae
shlb
and
insb
icebp
imul
test
mov
pop
pop
adc
ret
mov
mov
pushf
push
xlat
call
enter
sysret
nopl
cwtl
push
les
mov
lcall
roll
cmp
test
add
pop
cmc
mov
push
out
mov
inc
div
inc
xchg
jno
outsl
ret
xchg
mov
jecxz
sbb
sub
aam
adc
jecxz
jg
in
lret
adc
mov
mov
rol
push
lret
push
push
or
mov
in
popf
adc
rclb
cmpsl
jp
jne
fwait
add
movb
push
mov
mov
inc
xor
dec
inc
jbe
rcrl
mov
inc
add
test
push
xor
adc
xor
inc
mov
dec
sub
pop
popf
in
sbb
sahf
inc
dec
movsb
subb
xchg
enter
repnz
add
xchg
mov
ja
cld
test
test
mov
jl
add
in
fadds
jle
into
sti
pop
jle
jmp
xor
icebp
xchg
add
dec
sahf
int
push
inc
cmp
and
inc
fisubs
popa
xchg
jns
shl
xchg
scas
xor
in
cs
mov
lock
and
dec
in
scas
sbb
xlat
dec
lret
lds
mov
aaa
inc
jno
mov
andb
mov
xlat
lahf
lea
dec
scas
pushf
cmpsl
mov
pop
shr
sbb
daa
out
and
cltd
lret
xor
dec
lret
pushf
out
or
dec
cld
dec
xor
xchg
jle
fcmovu
es
mov
adc
jae
loope
push
fst
lcall
and
inc
shl
imul
cmp
sub
pop
ret
mov
das
fs
cmp
fwait
cli
arpl
pop
imul
lods
outsb
repz
sub
mov
into
flds
mov
adc
jae
jb
aas
or
mov
sahf
cltd
xchg
outsb
mov
mov
xchg
adc
pop
add
mov
jle
stc
cmp
andb
scas
fsts
mov
mov
or
aad
jno
bound
jl
test
jno
push
test
cmp
negl
test
out
dec
mov
outsl
cmp
andl
cmpsb
fldl
push
add
out
data16
rorb
cmp
mov
fisubrs
jge
fcmovu
adc
push
xor
test
jle
loope
adc
mov
cltd
into
sub
xchg
or
xchg
add
repnz
push
pop
mov
adc
cmpsb
or
stos
or
jno
pushf
outsl
mov
inc
mul
push
aas
or
lds
cmpsb
lods
and
dec
ret
test
repz
stos
call
cmp
fistpl
xchg
lret
test
cld
std
int3
fucomip
or
and
mov
add
fsubrl
jle
push
clc
mov
fsubs
add
mov
jae
gs
xchg
push
pop
jo
mov
fnstcw
aas
enter
pop
jo
mov
imul
aaa
xor
pushf
sub
sbb
shll
pop
repz
test
jnp
pop
leave
sub
cmp
pop
inc
out
vmwrite
divb
call
ficompl
outsl
nop
push
mov
inc
cmp
mov
jecxz
pcmpeqw
sti
xchg
insl
adc
imul
fst
mov
fadd
fcmovnbe
mov
out
orb
sbb
gs
xchg
push
or
or
jecxz
test
jge
inc
es
in
mov
and
pop
sub
pop
and
in
icebp
pop
and
stos
sbb
shl
jno
add
mov
xchg
sub
loop
sub
insb
jmp
mov
mov
pop
mov
les
cmpsb
xorb
inc
add
mov
leave
sbb
scas
sub
rcll
dec
jge
jecxz
xchg
lret
inc
inc
adcb
clc
sbb
push
aam
push
push
and
xchg
aas
fs
adc
aas
or
xor
jae
in
jnp
push
das
inc
sti
mov
and
xchg
les
flds
movsb
stos
mov
sub
cmp
push
movsl
fwait
popf
lds
roll
jp
repz
or
cmp
mov
dec
lods
out
xchg
cmp
out
jmp
imul
mov
pop
adc
cld
and
les
dec
jns
cmp
int3
sub
fcomps
dec
dec
xchg
jecxz
or
repnz
cwtl
fwait
sti
stos
cmpsl
add
loop
enter
incl
xchg
push
stos
fcoms
inc
lret
stos
flds
pop
test
std
stc
lcall
pop
push
cmp
cmp
xor
mov
mov
xchg
push
repnz
mov
lcall
xor
in
push
add
add
and
inc
cmpsl
mul
xor
lods
ja
or
xchg
sti
sub
mov
cmp
dec
push
mov
sub
in
notb
dec
sub
dec
xor
pop
divb
test
xchg
inc
enter
sbb
call
push
cli
mov
ret
subb
std
dec
popa
dec
test
xchg
das
mov
aad
cld
jno
dec
stos
jae
lods
outsl
out
cli
sub
xchg
jns
cmp
xchg
idivb
adc
andl
inc
add
into
int3
into
mov
pop
in
or
scas
push
push
push
idiv
daa
jmp
mov
jp
mov
divl
cltd
popf
push
xor
test
sar
mov
xorl
movsl
sbbb
movsb
jnp
cli
outsb
mov
mov
jl
xor
pop
sub
cmp
dec
js
stc
mov
xchg
aaa
and
outsb
xor
mov
and
mov
ss
movsb
scas
pop
adc
push
add
je
imul
out
sub
push
nop
xchg
andl
lods
cld
int
add
push
push
lods
test
cwtl
mov
cmp
xlat
jnp
stos
xchg
pop
clc
dec
dec
sbb
lahf
shrb
stos
mov
cmp
mov
shl
ds
jg
sbb
stos
xchg
shlb
sub
push
clc
lahf
or
cmp
and
jbe
dec
std
daa
jmp
or
imul
rorl
popa
mov
mov
leave
ret
xor
ja
jle
cwtl
fs
test
sbb
fcomps
cmp
jbe
pop
jg
mov
pop
ret
inc
lahf
push
push
je
orb
push
jb
das
pop
jle
cmp
push
iret
rcrb
dec
xor
mov
jp
pop
imul
mov
out
in
mov
cwtl
test
icebp
cmp
xor
jg
cmp
sbb
jle
inc
cmpsl
repz
jne
cwtl
adc
out
aam
icebp
cmpsb
enter
das
mov
jmp
ljmp
subb
xchg
movsl
and
push
push
sub
mov
add
adc
out
push
add
mov
int
and
lock
sub
lock
or
dec
enter
lds
js
dec
aam
scas
jg
repz
dec
lcall
mov
inc
push
sbb
popa
popf
dec
xlat
nop
outsl
rcl
cmp
and
and
call
das
cmp
and
push
mov
jns
fsubrp
push
inc
mov
xlat
js
ret
mov
adc
mov
loopne
cwtl
sti
mov
std
cld
rcl
out
and
add
outsl
in
test
inc
adc
fmuls
lods
test
scas
add
fnstcw
sub
inc
ret
xor
push
mul
das
dec
arpl
in
xlat
mov
pop
mov
cmp
out
sbb
jge
and
outsb
sub
pop
es
ret
inc
jno
adc
xchg
sub
sbb
imul
or
dec
mov
arpl
push
cmp
lret
push
mov
bound
stc
add
lcall
adc
add
push
fs
ss
cmp
mov
jae
inc
outsb
cld
sub
daa
adc
mov
mov
xor
stos
jmp
add
mull
mov
shlb
sti
repz
mov
cmp
push
das
mov
xlat
xchg
movsb
fs
xor
mov
repnz
clc
inc
cmp
popa
xchg
fdivrs
push
mov
dec
sarb
imul
xor
push
push
fildll
stos
xchg
xchg
jge
testb
xor
xchg
fisttps
jae
lods
dec
insl
or
dec
jmp
clc
lret
pop
or
scas
clc
popf
popa
push
dec
les
mov
sbb
cmpsb
mov
xor
jbe
int
imulb
test
mov
and
jbe
clc
pop
dec
xchg
sbb
push
pop
mov
and
cli
adcb
cmpsb
mov
pop
outsb
leave
inc
sub
les
mov
xor
jmp
push
mov
repnz
shll
mov
leave
push
loopne
outsl
mov
addr16
pop
push
lahf
xlat
cwtl
cmpsl
ss
fcomps
imul
xor
nop
testl
sahf
sub
cmpsl
in
sub
bnd
icebp
xchg
sub
adc
pop
xor
repz
lods
stos
adc
xor
jl
adc
and
mov
jbe
xchg
out
add
loopne
xor
ja
rorb
adc
jecxz
mov
lahf
xor
and
ds
dec
in
add
test
icebp
hlt
mov
push
adc
sub
inc
add
fprem
shlb
or
xor
setge
lret
int
pop
sbb
sub
aaa
inc
bound
mov
int
fsts
jae
or
xchg
xchg
jp
cld
movsb
jmp
jbe
stos
xchg
jmp
mov
push
in
out
popa
jmp
mov
xor
mov
in
xor
jb
les
add
rol
negl
push
gs
adc
loopne
cli
mov
scas
push
fwait
adc
rclb
add
es
jne
popf
adc
jmp
inc
lods
mov
mov
mov
xor
inc
out
mov
jne
lret
sbb
xor
sub
fdivr
xor
cli
sub
mov
adc
scas
aam
lods
add
shl
shlb
xchg
addb
mov
jnp
mov
add
mov
or
jmp
fldenv
mov
push
lds
cs
inc
mov
shlb
sub
pop
mov
pop
or
out
sahf
mov
rcr
dec
adc
or
push
mov
push
add
popa
fistpl
mov
je
sub
jae
pop
xchg
mov
push
mov
stc
push
das
and
pop
out
mov
xlat
cld
ja
or
data16
jb
out
imul
xor
ljmp
inc
inc
pop
mov
into
push
in
inc
addr16
inc
repz
ret
scas
cmp
xchg
cmp
imul
mov
xor
add
xchg
aam
dec
enter
stos
push
jb
lea
and
or
xchg
cmp
inc
les
rolb
dec
push
in
jg
pop
stos
or
vmwrite
adc
loopne
mov
cli
outsb
jae
cltd
or
xchg
lock
in
test
xor
dec
inc
ljmp
mov
movsl
scas
shl
lea
mov
xchg
in
lods
jo
icebp
or
or
or
xchg
pop
popa
xor
imul
pop
inc
or
sti
divb
scas
data16
and
sti
stos
push
adcb
cs
push
dec
cltd
call
popa
sti
rcl
mov
cmc
std
push
sti
cmpsl
fst
xchg
sub
xor
pop
inc
inc
icebp
mov
jno
xlat
loopne
popf
fnstsw
and
xor
cmp
push
add
lea
adc
and
pop
and
sbb
pop
push
inc
stos
add
inc
inc
adc
cltd
mov
shlb
xchg
imul
std
dec
call
pushf
pop
mov
outsb
outsl
dec
popf
ror
xor
pop
in
or
sub
outsl
test
adc
dec
sbb
pop
iret
adc
or
out
cmp
fs
mov
in
xchg
shll
lahf
arpl
mov
sub
hlt
mov
push
jge
insl
add
popf
packsswb
iret
in
adc
rorb
int
push
dec
cmp
sbb
xchg
adc
and
pop
dec
push
and
and
mov
lock
js
mov
cltd
cmpsb
mov
out
pop
andl
lahf
xchg
dec
inc
jecxz,pt
packsswb
pusha
test
daa
call
daa
or
aad
mov
dec
mov
mov
pop
pop
jne
pop
sahf
stos
push
push
cmp
jne
fwait
mov
into
push
fnstsw
cmp
rclb
cmc
cmovo
add
ja
xlat
subb
xchg
fisttpl
or
enter
repnz
xorl
or
arpl
daa
negb
mov
dec
call
and
xchg
push
dec
es
sbb
and
fstps
adc
fisubs
add
push
add
and
push
cltd
jnp
imulb
clc
jmp
imul
jns
inc
repnz
sub
rorb
mov
adc
ficompl
cwtl
in
test
cmp
lahf
add
js
and
sub
scas
sub
jl
mov
fimull
mov
xor
or
mov
dec
lds
sbbl
cmp
outsb
xchg
xchg
push
cmc
cltd
or
shl
mov
jp
push
int
mov
test
xor
loope
push
and
lock
mov
repnz
mov
add
jb
xchg
inc
dec
push
stos
sub
iret
rclb
sbb
jmp
ret
mov
pushf
out
pop
sub
scas
push
mov
sbb
inc
sbb
sub
jae
hlt
push
mov
sub
outsb
cld
es
sub
mov
mov
push
mov
dec
push
fs
push
jo
add
dec
sti
jb
in
pusha
dec
add
inc
lods
mov
rcr
imul
shl
ret
sbb
mov
movsl
stc
dec
movsl
lret
pop
xchg
sahf
mov
in
daa
imul
push
sar
pushf
push
into
cmp
bound
loopne
and
adc
and
imul
std
cmp
jns
dec
xor
xor
movsb
sub
mov
loopne
push
jle
cmp
rorb
mov
imul
fwait
pop
push
sbb
out
or
test
mov
mov
scas
test
mov
jmp
stos
dec
fwait
add
lds
xchg
mov
repz
pop
add
dec
mov
pop
add
fcompl
cld
lods
out
daa
xchg
jmp
nop
dec
mov
adc
cmpb
lds
test
push
dec
pop
dec
dec
inc
cmp
add
adc
add
out
pushf
mov
arpl
rolb
das
or
cld
filds
cmc
sbb
inc
jp
outsb
clc
cmp
imul
dec
inc
bound
gs
push
mov
inc
mov
std
jg
fwait
mov
out
cmpsb
or
sub
clc
sti
adc
aaa
pop
imul
xchg
push
stc
dec
sub
jle
mov
jbe
inc
or
push
xchg
repnz
sub
dec
cmpsb
shll
loope
fwait
roll
cmp
lods
mov
adc
mov
leave
mov
mov
push
mov
or
push
mov
push
or
mov
pushf
enter
xor
add
in
and
aas
and
scas
cmp
std
inc
or
lock
push
sub
and
pop
mov
loope
xchg
xor
push
adc
dec
aas
xlat
test
sti
or
mov
cmp
notl
cmc
enter
sub
loopne
pusha
imul
orl
bound
jne
xor
sub
adc
mov
sbb
add
mov
inc
fidivrl
xchg
lods
pop
sti
jp
sbb
cld
xor
cltd
inc
push
mov
arpl
lret
clc
xchg
sahf
aad
sub
mov
xchg
pop
push
cmp
popf
psrlq
push
mov
and
fs
xchg
mov
shl
pop
mov
rorl
mov
mov
leave
fistpll
jb
ja
mov
mov
sbb
push
add
mov
sbb
sbb
jo
add
insl
ret
push
mov
loop
rcll
sub
cltd
mov
cltd
fwait
lea
sarl
xor
lods
into
mov
adc
lret
cld
jne
or
dec
inc
jb
inc
adc
or
mov
imul
mov
pop
cmc
xchg
and
lds
jne
js
jns
lock
mov
inc
test
stos
xchg
inc
mov
mulb
cwtl
adc
mov
enter
lock
call
loop
mov
and
add
mov
test
int
stos
and
mov
loopne
lock
es
addr16
je
inc
mov
push
jne
rcrl
cmp
mov
mov
push
lret
mov
in
pop
icebp
dec
adc
ss
xchg
pusha
je
mov
and
jne
jnp
stc
mov
stc
sbb
into
xor
popa
js
in
push
movsl
mov
or
jecxz
ret
fwait
mov
pop
adc
cmpsb
nop
mov
fs
mov
cmp
xchg
fidivrl
xor
mov
push
inc
sub
jo
jae
inc
packsswb
sbb
std
sbb
and
xchg
sbb
sbb
adc
and
jbe
shlb
jns
or
lret
scas
adc
cmp
loope
lds
jmp
in
scas
push
imul
scas
aad
aad
dec
arpl
add
xchg
scas
cmpsb
mov
insb
xor
lock
jns
mov
pop
stos
cmp
jo
aad
jle
adc
enter
pop
out
inc
mov
iret
mov
imul
inc
sub
xor
jl
pusha
adc
pop
sub
hlt
outsb
cmpl
push
cs
inc
sbb
inc
mov
movsb
dec
xor
dec
nop
mov
push
sti
jnp
test
adc
xor
cltd
lea
jno
insl
sbb
ret
mov
add
push
in
movsb
dec
aam
sbb
outsl
mov
xorl
xchg
jno
xor
jne
adc
test
xlat
inc
mov
orl
in
lcall
adc
insl
hlt
pusha
lret
xchg
nop
sti
mov
mov
pop
and
fcom
xchg
mov
inc
addr16
pushf
xor
ret
inc
inc
repnz
fcmovb
aam
mov
repnz
mov
mov
ret
movsb
movsl
mov
insb
icebp
in
jo
scas
pop
dec
or
jecxz
push
leave
xor
setg
fwait
or
lds
jbe
je
loopne
xlat
xor
dec
lds
ficompl
stc
cs
pop
cs
sub
cmp
ja
imul
clc
enter
roll
pop
addr16
add
sub
nop
add
scas
or
outsb
mov
iret
scas
gs
movsl
cld
iret
xchg
rolb
adc
enter
dec
stc
and
adc
arpl
push
flds
nop
sbb
xchg
icebp
mov
lahf
outsl
xchg
xor
cs
fdivrs
push
aas
gs
loop
out
ss
into
pop
lea
insl
sahf
mov
dec
fcompl
data16
inc
cwtl
arpl
lds
mov
cmp
fistl
or
dec
pop
cmp
xor
cmpb
lret
sbb
mov
jb
lods
into
cmp
jmp
lock
jae
cmp
push
out
cmp
pop
cwtl
push
xchg
pop
xor
bound
add
rcrl
push
xor
outsl
inc
xchg
daa
mov
sti
and
inc
mov
popf
into
ja
mov
shrb
stos
cmp
out
lahf
sbb
xlat
sub
pop
mov
ljmp
lds
xchg
icebp
xor
and
mov
adc
lock
adc
cs
stc
push
mov
jnp
inc
xor
mov
daa
fsubp
fstpl
inc
xor
pop
daa
and
rclb
jmp
vmread
out
xchg
add
jnp
scas
gs
mov
repz
pushf
clc
xchg
repnz
push
dec
mov
pop
sub
add
popa
mov
adc
lret
or
add
aad
dec
rcrb
push
lea
test
add
add
jmp
cmp
stc
popa
fwait
idiv
ja
inc
xchg
cmpl
or
out
and
sbb
push
pop
cmp
xor
sub
add
cmpsb
popa
es
pusha
in
loop
call
aam
xlat
mov
inc
push
dec
inc
inc
jno
inc
test
xchg
xchg
mov
push
xlat
xor
leave
rcll
int
inc
add
mov
pop
and
jnp
shlb
or
lcall
push
fwait
pop
daa
int3
inc
ljmp
push
lods
lret
fisttpll
in
push
and
dec
push
sub
xor
hlt
fsubp
imul
adc
push
int
push
cmp
mov
mov
stos
mov
inc
xor
sub
sbbl
jnp
pop
popf
jecxz
or
push
push
pop
push
xchg
mov
std
popa
pop
mov
fs
cmp
scas
dec
adc
in
cld
sbb
xchg
sahf
inc
mov
xchg
xorl
xor
dec
push
sub
imul
movsb
nop
or
push
fs
gs
je
sti
and
sub
rol
xlat
fldl
stos
cmpsb
mov
mov
notl
push
mull
push
cmp
es
out
aad
pop
lods
outsl
mov
mov
xchg
jns
sub
out
mov
pop
xlat
push
or
and
pop
or
mov
xchg
cmovg
iret
pop
mov
bound
jg
sub
inc
sub
sbb
pop
in
mov
sti
sub
iret
es
fmul
nop
cmp
pop
lock
shll
cli
sbb
jne
ds
sbb
mov
fsubrs
insl
cmp
pop
pop
sub
lds
push
adc
add
dec
mov
fwait
xchg
mov
jecxz
mov
fwait
jae
cmp
mov
das
jb
movsl
es
mov
inc
push
push
push
xor
test
loopne
or
add
adc
push
daa
jno
adc
add
jae
or
mov
insl
outsb
push
inc
mov
std
test
es
jg
mov
fnsave
add
pop
sbb
scas
pop
jno
mov
pushf
mov
xor
pop
mov
mov
inc
rcrb
call
inc
enter
mov
pushf
cmp
ja
cs
test
cmpsb
popf
vcvtpd2psx
and
mov
sbb
sbb
and
dec
push
jle
stos
adcl
or
mov
push
mov
pop
inc
and
adc
int
cmp
jns
pop
mul
loopne
repz
add
inc
xor
pop
mov
or
push
xchg
dec
push
enter
test
xorb
js
stc
xchg
jge
ja
negb
and
mov
lret
pop
ds
movsl
pop
and
outsl
ljmp
pop
hlt
test
inc
sahf
sarb
jo
fucomip
add
sbb
sub
mov
test
mov
pop
mov
adcb
push
es
adc
add
add
stos
jmp
pop
adc
inc
xor
add
or
jns
into
int3
fisttps
jl
jo
push
jns
mov
hlt
rorl
outsl
fsubrs
mov
dec
mov
fldcw
jbe
hlt
pop
and
jmp
aas
cwtl
and
mov
icebp
push
jnp
out
icebp
test
js
cmp
imul
sub
xchg
ljmp
jae
enter
sub
insl
mov
repz
dec
iret
ss
xchg
ret
nop
push
movsb
outsb
fwait
mov
test
and
imul
repz
adc
lods
arpl
js
andl
daa
jo
test
xchg
cwtl
sub
cmpsl
pop
or
insb
or
outsb
repnz
xlat
das
mov
add
aaa
fnstenv
mov
jno
push
rorb
popf
movsb
inc
rolb
fs
add
popf
jne
js
mov
mov
jge
ret
adc
test
nop
push
and
sbb
dec
or
mov
cmp
jp
cltd
mov
test
dec
push
mov
and
out
jns
fwait
or
xchg
xchg
mov
jle
cmpsl
adc
jnp
xchg
out
das
jl
jecxz
scas
out
in
pop
and
hlt
aam
jb
cs
jle
adc
loopne
cmp
xor
popf
aad
cltd
out
sarb
inc
gs
out
int
hlt
push
mov
test
and
or
lock
aam
mov
loopne
ljmp
mov
lea
scas
inc
data16
rorl
or
es
xor
mov
bound
mov
lods
xor
push
movsb
xchg
mov
orl
fcmovnbe
aam
cmp
stc
ds
xchg
jmp
and
pop
in
mov
fstpl
imul
mov
cmpsb
xlat
jl
dec
in
pop
enter
cmp
push
out
mov
and
inc
cmp
dec
repnz
enter
mov
cmp
xor
jmp
push
stc
inc
fnstenv
and
or
mov
scas
xchg
add
lods
mov
dec
hlt
int
addb
dec
pop
push
lds
rep
mov
push
daa
popa
fdivl
jbe
xchg
daa
inc
aaa
adc
insl
loope
jl
and
and
cmpsl
mov
clc
into
cmp
dec
or
sub
sub
mov
sbb
mov
idivl
hlt
fs
loop
jp,pn
pop
les
daa
push
sub
and
xchg
fsubr
ret
jmp
sbb
outsl
inc
std
inc
pop
lds
mov
cmpsb
data16
test
xor
add
cltd
push
mov
fdivrs
inc
rcrl
push
cld
xor
or
mov
jo
gs
or
sar
add
sub
mov
mov
in
pop
in
aam
packuswb
stc
ljmp
test
fstps
or
add
aad
cltd
leave
mov
call
mov
ret
lds
ja
dec
mov
jmp
sbb
sbb
fcomps
mov
pop
popa
xchg
movsb
mov
scas
inc
push
mov
sbb
adc
mov
xor
xlat
push
mov
leave
ficoml
in
cmpsl
push
in
xor
cltd
fs
jns
lret
in
mov
mov
loop
dec
dec
lea
push
imul
ja
notl
fwait
lcall
jae
movsb
push
mov
adc
mov
sbb
fsubr
lret
movb
das
mov
and
pop
inc
cs
outsb
dec
pusha
movsb
pop
ds
aad
add
loopne
mov
add
cltd
cli
pop
and
mov
cmp
test
ja
mov
xor
shrb
aam
or
inc
stos
negl
dec
push
subl
inc
cmp
aad
pop
dec
clc
mov
xchg
cwtl
out
ds
pop
inc
into
fisubl
fcoml
sbb
nop
add
pop
mov
and
fnstsw
sub
pop
add
mov
and
pusha
xchg
mov
mov
mov
rcrb
aaa
and
int3
imul
push
mov
nop
cld
inc
mov
sub
mov
movmskps
push
hlt
dec
add
xchg
aaa
outsl
push
leave
mov
sub
ds
add
jmp
jb
cmp
cmp
xor
out
fistpll
movb
dec
add
lods
lret
hlt
enter
push
add
loopw
push
or
bound
cmc
pop
and
imul
mov
aam
mov
add
bound
dec
xor
repz
outsb
cmpsb
xlat
jecxz
fs
shll
in
mov
jmp
or
cmpsl
dec
xchg
adc
mov
xchg
nop
xchg
repz
or
bound
hlt
scas
and
push
pop
adc
cmpsl
add
cwtl
add
sub
xchg
stc
daa
sub
xor
inc
rorb
cmp
jo
cmpsb
pop
sbb
push
mov
sub
icebp
adc
loopne
or
in
sbb
andl
or
or
vcvtss2si
mov
clc
xchg
add
in
ret
add
je
push
sub
xchg
xor
dec
cltd
cmp
mov
lds
add
mov
mov
jnp
sbb
bound
jmp
jae
clc
cli
cs
adc
cs
xchg
jnp
pusha
mov
xor
rclb
shrl
sbb
sbb
dec
ss
rcrl
fs
cmpsl
mov
jb
add
pop
cmp
dec
repnz
inc
xchg
push
pusha
add
ja
add
mov
and
dec
fcompl
mov
jne
in
je
clc
std
xor
cmp
sub
test
push
pop
lock
jbe
add
pop
dec
cmc
outsl
mov
mov
repnz
sbb
sbb
cmpsl
add
mov
xchg
cmp
gs
lods
sbb
int
nop
cmp
daa
je
inc
sbb
xchg
sbbb
arpl
and
nop
test
xor
das
jno
mov
paddb
daa
call
mov
inc
sbb
in
sub
ds
sub
xchg
sub
jae
or
mov
pop
sub
jbe
sbb
and
fwait
pminub
addr16
and
andb
cmp
mov
daa
jne
cld
and
dec
cld
mov
out
mov
sbb
cwtl
inc
cmp
pop
cmpsl
or
xor
movsl
sub
rcrl
pop
mov
ret
fwait
add
cs
xchg
ss
add
push
or
push
cwtl
push
loope
inc
mov
mov
xchg
aas
in
mov
dec
ja
fsubl
mov
fs
push
aas
inc
xor
or
cmp
rorb
mov
inc
cmpsw
cld
repz
imul
sbb
mov
push
jle
mov
in
and
lcall
jae
adc
mov
add
mov
xchg
xchg
mov
mov
xor
imulb
pop
nop
inc
inc
xor
sub
xchg
and
les
out
push
loop
bound
das
outsb
leave
cmp
xor
dec
aam
cmp
push
loope
ja
ja
mov
jecxz
pushf
mov
lcall
mov
popa
mov
inc
dec
mov
std
mov
pushf
mov
xchg
ret
mov
mov
stc
pop
loop
push
sti
idiv
shlb
mov
add
mov
sub
fistpll
in
sbb
ret
divl
std
jo
lahf
add
xchg
push
inc
in
fbld
aad
cmpsl
addr16
pop
xor
cmp
clc
cmp
fbld
iret
scas
inc
jmp
jecxz
hlt
sbb
rorb
stos
cmpsb
jnp
sbb
push
test
shrl
out
mov
or
push
fists
icebp
fstps
decb
inc
xor
adc
push
xor
jae
or
test
mov
or
sbb
cltd
or
imul
pop
cmc
fists
leave
out
jne
jbe
fmul
pop
add
jecxz
lods
pop
test
stc
imul
lahf
jns
sub
sub
and
mov
and
push
inc
mov
jne
cltd
mov
sahf
cltd
adc
fimuls
movsl
and
cli
jge
add
hlt
push
sbb
aam
ss
xchg
add
xor
rcll
andl
xor
mov
lret
mov
in
aaa
aas
icebp
xchg
adc
inc
fcompl
ds
sub
dec
add
aad
cmp
xor
push
jne
sub
inc
mov
fisubrs
sub
cli
fsubrs
push
mov
cmp
int
dec
andl
sub
xchg
addl
rolb
jg
add
push
xor
call
icebp
mov
adc
push
mov
jg
ss
mov
adc
lcall
cld
inc
add
mov
push
jne
ljmp
idiv
sti
into
out
popa
ret
pop
jecxz
clc
fdivl
ss
aam
pop
ja
xchg
gs
cmp
dec
inc
loope
dec
add
add
lahf
dec
das
xchg
shr
sbb
and
test
mov
jo
pop
imul
mov
lods
cmpsb
pop
out
in
xor
data16
push
out
out
xchg
xchg
jb
insl
adc
stc
jecxz
fldcw
aas
lods
les
ret
lds
popf
pop
mulb
arpl
push
fnstenv
mov
into
jmp
iret
into
nop
jnp
stos
push
or
pop
stos
lods
shlb
adc
aad
test
fdivrl
jo
dec
sub
das
lahf
loopne
ret
add
test
jmp
cmp
movsl
shlb
add
imul
lods
in
and
dec
dec
out
push
mov
xchg
mov
sbb
cmp
aad
adcl
xchg
mov
hlt
cmp
lock
or
dec
inc
aas
clc
adc
jmp
movsb
lret
pop
or
dec
cmp
lret
push
add
imul
sub
xorl
ja
mov
pop
dec
aad
push
xchg
mov
mov
fistl
subl
mov
out
xchg
jnp
or
mov
push
mov
insl
mov
lock
mov
xor
ss
sbb
cli
inc
in
sub
pop
sbb
xlat
adc
inc
pop
lret
pop
mov
sbb
in
dec
loopne
push
into
lods
or
xchg
lock
xchg
testb
aas
movzwl
lock
out
push
and
jmp
jecxz
in
les
push
mov
test
or
mov
push
cld
bound
or
add
outsb
inc
mov
sarl
lock
addr16
insl
imul
lahf
aam
mov
dec
push
cmpsl
iret
xorl
jp
mov
daa
and
sbb
push
mov
jecxz
pop
xchg
repnz
pop
jp
stc
sbb
pusha
movsl
fisubrl
js
sbb
outsl
in
cmp
cmp
jle
fstpt
mov
jmp
push
or
xchg
adc
jmp
lds
sub
sbb
push
inc
adc
icebp
cmp
insb
and
pop
and
shl
pop
push
lock
dec
cmp
or
push
popa
out
fdivs
les
aaa
dec
int
repnz
sub
into
testb
or
outsb
out
inc
sbb
pop
sbb
and
dec
push
xchg
out
dec
xor
cmp
arpl
mov
pop
mov
cmp
mov
lcall
jnp
out
shrl
ret
cs
xchg
cs
shll
flds
movsb
mov
in
lds
mov
fcoml
push
mov
mov
arpl
dec
mov
and
add
mov
fistps
arpl
repnz
hlt
push
js
movsb
std
movsb
lock
jb
inc
das
sub
pop
in
in
sub
loopne
sub
mov
mov
xchg
dec
enter
cli
sbb
sarb
out
imul
mov
lret
out
sarb
fcompl
mov
push
add
mov
aaa
cmpsb
add
mov
inc
sub
pop
jmp
jmp
mov
sbb
dec
popf
lsl
in
popa
mov
stc
cmpsb
push
mov
push
in
nop
and
mov
mov
idivl
gs
movsl
jl
jne
in
mull
out
mov
cmp
fwait
mov
outsb
dec
shll
dec
lret
inc
xor
push
mov
xchg
pop
movsl
fiaddl
out
lods
inc
stos
jecxz
jmp
jecxz
imul
and
push
ja
arpl
enter
cmp
test
movsl
lods
and
loop
pop
icebp
push
jns
lock
inc
outsl
cmp
mov
lcall
idivb
sarb
int3
jl
mov
int
or
mul
in
into
and
push
data16
jae
and
cmp
out
andb
int
ja
imul
fiaddl
scas
add
jmp
out
adc
jnp
jge
leave
leave
daa
inc
adc
stos
out
pop
notl
sbb
pop
dec
dec
jne
add
es
lea
jecxz
ror
sbbb
repnz
lods
jl
jno
inc
xlat
mov
and
lret
shlb
and
pop
in
xor
inc
cmp
sbb
pop
push
mov
pop
arpl
sbb
out
dec
movsl
and
aaa
cmpb
sub
je
lcall
test
xorl
sbb
jo
or
xchg
and
mov
cmp
nop
sub
ss
sbb
push
pusha
arpl
data16
or
ss
inc
ret
leave
rol
mov
test
andl
clc
xlat
cmp
cli
mov
xchg
addb
cmp
add
push
dec
xchg
popa
insb
sbbl
lds
stos
test
mov
mov
imul
icebp
iret
std
pop
adc
mov
xchg
aas
mov
ljmp
or
push
mov
cmp
cwtl
pop
or
pop
loope
pop
xor
ret
daa
sub
cmp
idiv
test
sarl
push
dec
jecxz
mov
test
push
mov
xchg
inc
or
push
test
pop
movsl
pop
dec
popa
lret
movsl
jl
mov
mov
es
mov
mov
mov
aaa
push
adc
mov
jns
jmp
inc
xchg
push
js
and
xlat
iret
out
cmp
leave
jg
repnz
cmpsb
cmpl
or
arpl
jbe
sub
ret
lcall
inc
das
xchg
or
pop
mov
xchg
lret
bound
mov
jge
dec
jne
ret
jg
xor
or
push
jo
push
mov
cmp
in
imul
mov
mov
add
xchg
dec
jmp
mov
add
fcmovnb
pop
lret
and
xchg
jnp
repnz
shl
enter
enter
mov
sub
xchg
cmc
jle
clc
xchg
into
adc
push
les
jb
lret
push
in
xchg
mov
daa
data16
out
pop
jle
loopne
mov
inc
and
pop
xlat
je
shlb
js
in
inc
imul
dec
jg
out
push
fcompl
into
ds
push
mov
and
dec
or
and
and
arpl
imul
xchg
push
adc
sbb
js
mov
popa
cmpsl
jge
dec
inc
bound
jnp
movsl
dec
imulb
cmp
dec
adc
icebp
popf
cmp
fbstp
adc
or
sti
mov
fwait
or
repnz
std
test
jmp
call
inc
xchg
mov
lods
mov
rcll
lods
popf
out
loope
gs
shlb
pop
jmp
cmpsl
in
mov
fidivs
in
test
xchg
mov
dec
jl
cli
fidivrs
loopne
jnp
mov
aam
aad
test
mov
adc
sub
xchg
xor
ret
and
fldt
out
loope
cltd
jle
xchg
and
cmp
daa
sysenter
xchg
push
mov
cs
xor
fs
pop
sti
stc
bound
outsb
popf
mov
scas
push
mov
mov
mov
loope
xchg
mov
jl
jl
add
in
and
sub
and
clts
and
idivb
lods
movl
jb
adc
mov
in
pop
and
js
cltd
outsb
pop
ret
call
int3
rorl
loopne
insl
mov
xchg
xor
negl
enter
push
cltd
or
leave
sahf
std
push
and
rclb
outsl
mov
push
inc
add
aad
mov
mov
xchg
fisttps
pop
sub
mov
add
fs
pop
shll
scas
sub
mov
dec
shll
lods
mov
daa
aad
push
dec
push
pusha
jae
lret
sub
inc
mov
movsb
rorb
inc
ror
into
fmulp
fbld
adc
flds
jmp
or
push
pop
xor
mov
xorb
idivb
sbb
mov
js
lret
or
aad
add
pop
clc
std
icebp
pop
sbb
push
ljmp
inc
out
cld
mulb
pop
shrb
lahf
mov
enter
pop
mov
cld
cmp
push
mov
rcr
push
mov
sbb
lahf
pusha
divb
popa
dec
fdivs
pop
and
lret
xchg
je
mov
and
mov
fistpll
or
pop
or
or
xor
mull
xchg
aam
fistl
inc
enter
out
insb
cld
repnz
add
xchg
mov
push
lods
ret
cltd
imul
lea
clc
mov
out
nop
or
scas
addr16
sub
int
inc
test
dec
pop
arpl
mov
mov
sub
xchg
mov
aas
aam
sub
adc
add
adc
iret
stc
jle
sub
in
push
push
in
push
fnstenv
inc
mov
fsubrl
shl
adc
repnz
or
nop
pop
push
ret
xchg
inc
icebp
inc
rep
scas
out
mov
mov
test
cmp
jmp
div
fcom
mov
imul
dec
cmpsl
xchg
mov
loope
push
pop
jle
shlb
sbb
int3
xchg
scas
test
imul
inc
fmull
xchg
jo
aas
addl
lahf
xlat
sbb
cmp
xor
sbb
push
popa
cmp
mov
inc
mov
dec
std
and
out
jns
pop
mov
mov
imul
loopne
fiadds
jge
sti
and
cmpsl
cmp
pop
adc
add
aad
push
icebp
call
and
es
fisubl
sub
xor
mov
xor
xchg
mov
xor
jne
loope
pop
push
outsb
test
add
push
jo
pop
and
dec
sahf
jge
mov
jmp
mov
popa
sarb
lods
add
jbe
out
into
sbb
cs
mov
into
icebp
xor
lods
jns
loop
jmp
push
push
adc
and
cld
sbbl
movsl
add
jae
mov
xor
jno
mov
out
jg
inc
inc
pushf
sahf
inc
xor
scas
stos
test
and
sbb
mov
and
mov
gs
pop
sbb
or
inc
push
xor
jmp
push
sub
jnp
xorb
shlb
push
mov
push
xor
mov
mov
inc
daa
cmp
out
sub
into
sti
push
incb
push
or
or
out
into
adc
inc
pop
out
loop
fucomp
and
mov
push
clc
xor
pop
ljmp
movsl
mov
dec
adc
and
cmp
xor
push
pop
and
pop
shrb
lock
fmull
aam
not
mov
pop
cmc
test
adc
push
jl
sbb
in
add
push
cwtl
repz
jmp
mov
add
mov
in
ret
jne
in
mov
imul
mov
cmp
outsb
push
dec
in
xchg
sbb
xchg
xchg
je
mov
les
call
adc
stos
stos
push
jg
les
sti
cmc
pop
push
adc
lahf
sub
ret
mov
imul
mov
cmp
imul
in
inc
test
cmp
fcmovne
jl
and
cmc
sti
popf
push
lea
inc
cmpsl
dec
neg
dec
jl
dec
subl
das
xchg
enter
mov
icebp
jge
xchg
xchg
dec
xor
jae
test
mov
stos
jae
mov
push
mov
imul
jge
fmulp
rclb
sub
clc
fidivrs
inc
es
sbb
fidivl
cmp
out
sbb
jmp
divl
push
imul
inc
jns
subb
mov
and
jns
fsts
rol
dec
ffree
pop
mov
sub
lahf
jp
cmp
xor
aas
lahf
add
or
and
stos
push
cmp
push
mov
mov
jns
mov
sbb
pop
rcrb
jecxz
or
xchg
jno
ret
sub
mov
push
or
or
inc
mov
push
inc
xchg
outsb
loop
je
out
xor
cmp
mov
dec
sub
pusha
xor
fcmovbe
mov
aas
xlat
jl
adc
cmp
mov
int3
inc
in
mov
repnz
mov
jle
leave
ss
mov
pop
add
pop
jmp
ror
leave
cmpsl
add
fdivl
movsl
imul
xchg
bound
pop
in
mov
bound
movsl
shr
add
pop
in
cmpb
leave
jbe
xchg
pop
lods
loop
insb
mov
inc
out
xchg
cmpsl
or
mov
mov
xor
mov
jno
mov
inc
inc
fsubrl
push
push
gs
cmp
test
jnp
das
movsl
dec
sahf
xor
sahf
out
xchg
or
cmp
dec
push
push
shrl
test
fstpt
jge
xor
push
das
sub
jnp
mov
add
adc
sub
xchg
mov
movsb
rcrl
ret
jge
push
cmc
sub
nop
or
bound
adcb
insb
mul
cmc
inc
xlat
orb
adc
dec
jmp
ds
ds
rcrb
in
lock
fldenv
paddusw
cli
in
mov
jp
mov
mov
shll
aam
sarl
adc
daa
lods
sub
cmp
and
sub
out
mov
fisubrl
add
xchg
sub
and
adc
mov
loopne
adc
inc
and
imul
aam
mov
cmp
cmp
mov
fwait
stc
js
mov
shl
jl
daa
pop
xchg
inc
inc
scas
adc
sub
and
inc
add
mov
loopne
dec
dec
inc
push
je
add
ret
lds
and
add
mov
adc
pushw
jge
cmp
aad
pop
add
jcxz
or
jne
xor
xchg
xor
leave
inc
sbbb
pop
and
and
xchg
dec
aas
xor
add
loope
loop
je
lcall
mov
and
xor
fsubr
aam
daa
movsl
xchg
popa
test
xlat
inc
mov
jo
leave
pop
xchg
add
pop
inc
cmp
bound
sbb
adc
mov
cltd
jg
mov
inc
or
out
lret
inc
push
std
pop
fwait
add
sbb
fmuls
iret
push
ret
cmc
or
push
jl
lcall
popa
sub
outsb
jge
mov
sbb
out
pop
test
mov
repz
ja
ss
push
imul
push
jge
out
jge
mov
push
in
dec
out
or
xchg
cmp
movsb
icebp
dec
jae
mov
sub
mov
sub
sarl
xor
push
push
gs
jecxz
mov
rcrb
fwait
and
rorb
aam
cmc
mov
mov
dec
es
push
fsubp
or
int
mov
pop
or
push
ljmp
and
adc
xor
fadds
mov
rcr
pop
mov
xchg
sahf
int3
mov
mov
mov
movl
and
mov
lcall
add
aaa
pop
call
fldl
sub
adc
xchg
xlat
sub
cmp
cmp
into
out
xor
out
fcmovnu
popa
push
or
fldl
pop
xorl
out
push
repz
and
sbb
clc
sbb
xchg
add
inc
cmpsl
loop
popf
insb
mov
cmp
daa
daa
xchg
jl
xchg
cmp
and
enter
sub
loope
inc
jb
icebp
loop
or
fwait
jle
cmp
mov
or
cmp
adc
rcrb
call
and
cmp
lock
push
dec
cmc
mov
out
xchg
lret
movsb
scas
pop
cltd
mov
fwait
xchg
das
xchg
xchg
mov
aaa
sub
push
lea
lock
lds
push
hlt
fwait
or
test
or
add
pop
decb
lods
mov
xchg
push
jnp
out
ficompl
xchg
pusha
sub
lds
xor
imul
adc
jge
push
dec
iret
inc
sti
xor
mov
scas
int
jl
sbb
cmpl
nop
mov
jge
cld
add
in
out
mov
shl
pop
gs
mov
jl
clc
jae
test
sub
mov
sbb
sub
sub
xor
lcall
or
add
sti
mov
and
xor
dec
insb
fldenv
add
scas
cwtl
mov
scas
addr16
dec
imul
data16
mov
jne
incb
mov
xlat
add
movsb
aam
push
mov
adc
mov
xchg
in
sub
jbe
mov
and
das
cmp
clc
xor
and
mov
gs
pop
out
outsb
daa
jmp
push
icebp
fsubl
push
mov
dec
call
testb
fiadds
shll
les
adc
dec
inc
ljmp
xor
push
xor
jecxz
or
out
stos
cmpsl
push
enter
or
mov
mov
int
jb
inc
cli
test
andl
xor
in
out
sbb
aas
cmpsl
xchg
arpl
out
pop
insb
and
insl
rolb
hlt
add
inc
insl
xorl
cld
out
lret
cmp
sub
sub
add
push
subl
iret
imul
sbb
lea
or
pop
inc
add
test
scas
xchg
mov
sbb
mov
jmp
adc
shl
xor
xchg
int
xor
lret
xchg
sbb
nop
pop
ja
out
mov
out
mov
jno
push
push
jl
fadd
nop
adc
pop
jge
lcall
clc
lods
std
xor
pop
outsb
inc
jnp
mov
adc
enter
leave
jecxz
cmp
sub
rcll
jnp
or
cmp
mov
int
enter
xchg
cmp
out
pushf
push
fimuls
scas
pop
jne
jne
cmpsb
jbe
or
leave
add
out
sub
adc
sarl
push
fstps
imul
inc
mov
sbbl
xchg
cwtl
xchg
xchg
les
cmp
inc
fsubrs
iret
rcrb
dec
push
or
rcll
flds
xor
pop
call
or
xor
xchg
mov
js
push
xor
and
in
jo
cmpsl
push
out
push
push
int3
dec
imul
and
fisubs
pop
and
xlat
mov
out
jmp
mov
into
adc
mov
iret
dec
cs
shl
cmpsl
mov
mov
test
repz
and
sbb
jne
fnstsw
ror
rclb
add
push
fsubs
popa
mov
cmp
mov
cmp
xchg
test
fimull
outsl
and
dec
ds
or
andb
adc
sub
xchg
mov
out
mov
push
push
addl
jnp
cmc
mov
and
mov
push
loop
push
push
dec
lods
cwtl
hlt
jae
pop
inc
into
add
mov
aas
clc
push
popa
mov
or
push
sbb
jno
stos
testb
test
push
push
loopne
or
jge
jbe
les
call
pop
out
jnp
in
mov
in
mov
pusha
pushf
rol
sub
push
cmp
jp
add
je
adc
js
or
xchg
inc
and
mov
inc
daa
pop
popf
pop
pop
jp
gs
jp
jno
sbb
shrl
or
jae
cwtl
adc
inc
js
mulb
inc
into
fidivs
pop
cmp
aam
mov
getsec
stc
insb
or
pop
mov
loope
mov
stc
jo
lea
les
adc
cmpl
popa
repz
fcompl
dec
add
lods
xor
scas
sub
adc
cmp
lock
iret
outsl
pop
or
test
lret
cld
add
jl
mov
out
add
xor
dec
sub
das
out
mov
pushf
lahf
mov
inc
lock
mov
pop
inc
int3
mov
inc
movsb
adc
iret
fsubrl
in
pop
add
jae
test
hlt
jp
jl
push
push
mov
push
mov
fnstenv
nop
xor
sub
mov
wbinvd
xor
xor
rcrb
mov
cmpsb
arpl
loopne
mov
fiaddl
leave
int3
aam
mov
inc
dec
xchg
cmpsb
push
sub
pusha
push
mov
xchg
inc
sub
je
lret
in
cmpsb
lds
inc
gs
stos
pop
adc
mov
mov
jb
push
int
sbb
aam
gs
loope
mov
subb
out
mov
ret
xchg
repz
fdivrl
jno
xchg
rcrl
test
pop
fmuls
mov
adc
aas
lea
xchg
xchg
add
popa
pop
scas
fs
xchg
add
mov
or
xchg
pop
pusha
iret
push
xchg
or
sti
les
pop
dec
mov
jmp
decl
push
jg
into
adc
in
mov
cmp
mov
mov
mov
frstor
xchg
js
mov
and
mov
dec
aaa
lods
or
add
mov
cli
push
add
je
lods
fs
ja
insb
scas
mov
idivl
aam
fadd
movsb
push
lcall
jecxz
lods
stc
push
jne
aas
cwtl
loope
inc
aam
nop
adc
mov
rcll
pop
pop
insb
xor
das
insl
fcoms
xchg
adc
popa
mov
adc
scas
and
jmp
xor
test
inc
in
xor
adc
dec
or
bts
cmp
rclb
push
inc
cmpsl
jg
lea
jmp
pop
pop
out
hlt
push
arpl
xlat
xchg
insl
pop
xchg
xor
clc
dec
sbb
fistl
scas
xchg
jg
push
jg
mov
int
enter
int3
cld
dec
sub
adc
adc
sub
or
lahf
add
xor
add
cmp
lods
lods
xor
pop
xchg
ja
xor
push
sahf
in
sbb
pop
mov
addl
je
mov
jbe
push
shrb
xchg
movsb
and
inc
sbb
dec
jb
mov
and
mov
sbb
mov
mov
iret
sbb
sarb
dec
into
lcall
or
or
mov
jns
stos
xchg
iret
sub
enter
xor
cmp
push
test
xchg
mov
repnz
in
ret
sub
out
xchg
aad
inc
inc
jecxz
out
and
add
fs
addl
adc
stos
shlb
mov
adc
mov
lods
pop
fyl2x
xor
push
test
daa
sbb
flds
pop
aam
ret
shlb
and
sbb
repz
orl
enter
push
jl
jbe
out
outsl
mov
jmp
into
adc
inc
sbb
mov
lods
xchg
rcll
add
cmp
cmp
add
jl
push
mov
xor
jg
and
fwait
sbb
fwait
push
and
or
adc
push
stos
adc
fcomi
xchg
rol
mov
pop
lcall
jg
and
in
mov
in
mov
cmc
sbb
gs
cwtl
jmp
js
and
mov
jle
sbb
out
adc
outsb
shrl
int3
xor
and
dec
jle
ret
loop
mov
jle
insb
jnp
mov
mov
xor
mov
rorl
jmp
iret
cmp
out
stos
xchg
les
lahf
andb
out
add
mov
mov
inc
mov
test
inc
mov
inc
dec
push
jb
jmp
jg
loop
subl
mov
jo
dec
pop
xor
outsl
nop
fstl
data16
fwait
or
cmpsl
jmp
scas
fldenv
jne
stc
cld
sarl
fisubrl
mov
inc
mov
icebp
xor
outsl
aam
cmc
test
dec
ror
sub
mov
push
mov
inc
cld
out
fisttps
inc
stc
mov
cmp
sarl
adc
push
inc
std
cmp
loopw
fiadds
das
pop
mov
cmp
cmp
sub
leave
stos
mov
hlt
mov
stos
rcr
shll
mov
xchg
pop
fmuls
jnp
add
les
loopne
int3
hlt
imul
mulb
adcl
mov
std
cld
push
lods
xor
cmp
jnp
push
sarb
fistps
mov
add
das
mov
movsb
enter
ds
clc
push
out
or
outsb
inc
dec
add
lahf
pop
cltd
sbb
push
jo
sbb
or
xchg
scas
aas
push
sub
adc
xchg
les
repnz
mov
cltd
xor
js
cmp
sub
sub
es
mov
ficoml
xlat
repz
aam
push
test
imull
xor
sub
push
or
cmp
and
sbb
es
adc
leave
subl
lahf
leave
jo
sbb
sahf
cmp
adc
fs
pop
leave
mov
pop
jno
mov
xor
xor
adc
sub
scas
mov
aas
clc
mov
mov
leave
xor
enter
cmp
xchg
int
inc
cmp
movsl
mov
push
loop
sbb
xor
in
mov
jmp
into
loope
pop
repz
loopne
mov
xor
hlt
mov
mov
jae
mov
dec
jbe
cmp
jl
add
call
add
fimull
sahf
les
mov
ds
repnz
loope
dec
andb
imul
in
shlb
outsl
test
shll
rcrl
jnp
inc
clc
dec
popf
imul
and
push
mov
fs
xor
lods
mov
rorl
lds
scas
sbb
out
xor
pusha
push
ret
test
ret
bound
sti
add
stc
mov
js
filds
and
lret
or
idivl
div
mov
fisttpl
add
jle
adc
js,pn
xchg
jo
lea
test
sub
sbb
lods
adc
push
xor
out
add
mov
and
sub
jo
jmp
cmp
dec
test
idiv
andb
or
xor
icebp
sahf
add
mov
pop
dec
push
es
out
cmpb
call
lds
pop
ficoml
aam
loopne
sub
pop
jnp
cmp
out
bound
dec
jmp
repnz
mov
sbb
add
add
sbb
lds
addr16
and
push
negl
mov
cmpsl
das
jle
pop
adc
or
adc
cltd
or
push
mov
xor
mov
mov
fcmovne
adc
movl
or
inc
xor
out
cmpsb
adc
dec
ret
xor
sbb
or
js
out
enter
pop
mov
dec
daa
fmuls
or
mov
pop
cs
inc
je
popf
jmp
dec
xor
clc
cwtl
jl
mov
frstor
jb
repz
nop
xchg
adc
fidivs
inc
pusha
jo
push
call
sub
aas
add
or
popa
sub
and
mov
cmp
imul
xor
jmp
movsb
cmp
mov
aad
icebp
push
jp
mov
outsb
dec
loop,pn
or
mov
push
cmpsl
test
aad
ret
test
ja
xchg
dec
dec
outsb
inc
xchg
xchg
push
cmpsb
add
jle
and
mov
scas
fbld
dec
fwait
pushf
jbe
fwait
jne
push
sbb
sahf
jecxz
adc
lods
pop
mov
ss
ret
add
out
inc
push
lcall
enter
fisttpll
jo
in
xchg
mov
inc
pop
dec
out
jg
sub
fadd
pop
add
and
jle
sbb
into
pusha
sub
lea
dec
nop
mov
add
stos
push
sub
call
jecxz
cmp
push
push
sti
or
test
and
inc
or
jl
mov
mov
popa
mov
fcomp
iret
imul
in
clc
fisttpll
add
xor
cmc
cmp
je
fdivl
mov
in
add
pushf
jno
sbb
aas
cmp
mov
adc
adc
loope
imull
xchg
mov
jbe
lcall
mov
or
cmc
fcmovb
or
lret
scas
movsl
pop
decb
inc
add
mov
outsb
inc
jmp
ljmp
fistpll
pushf
push
ss
mov
adc
lea
push
out
rclb
mov
cmp
cmpb
pop
mov
cmp
fpatan
push
xchg
mov
clc
push
dec
mov
fmul
jb
fimuls
mov
cmpsb
push
mov
jbe
xchg
jmp
scas
fs
sbb
xchg
lods
xchg
jg
lea
mov
and
xor
pop
aad
push
jbe
fsubs
ss
jae
pop
arpl
jmp
stos
pop
mov
popa
inc
iret
mov
scas
fsqrt
push
rcrl
push
push
outsb
pop
xor
arpl
xor
xchg
scas
mov
mov
fsubrp
into
fwait
mov
repz
push
int3
cmpsb
mov
jns
mov
aam
ret
mov
or
add
sahf
shrl
shr
cs
push
leave
pop
xor
dec
inc
shlb
pusha
jge
mov
out
jg
jno
dec
incb
outsb
inc
stos
mov
sarl
jns
cmp
inc
movsb
in
sub
jg
inc
cmpsl
dec
or
lods
xor
jne
inc
das
push
push
frstor
jecxz
enter
or
pop
clc
insb
sbb
rolb
sbb
aad
ss
imul
ds
imul
roll
push
jns
jmp
sbb
test
jmp
add
out
mov
pop
pop
enter
loop
inc
push
icebp
nop
test
and
jecxz
inc
jecxz
mov
and
mov
mov
daa
imul
sbb
push
aam
mov
cmp
inc
iret
adc
ja
icebp
out
leave
loope
xchg
popa
push
pop
mov
mov
and
stos
mov
jl
das
imul
pop
adcl
sub
sub
int
cmpsb
test
xlat
in
inc
mov
mov
out
mov
stc
cmp
cmp
xor
movsb
testb
jmp
and
inc
mov
lret
push
movsl
mov
dec
cmp
mov
mov
fistl
jmp
xchg
jp
lret
shrl
lretw
aas
cltd
inc
mov
ds
addr16
inc
dec
out
mov
or
test
mov
cwtl
push
push
mov
pop
pushf
xor
out
lock
mov
adc
inc
shlb
fdivs
stos
insl
add
adc
sbb
or
outsb
movq
movsl
mov
pushl
iret
daa
idiv
cs
aad
enter
clc
mov
out
filds
movsl
push
push
fs
sub
mov
mov
pop
sbb
mov
scas
dec
dec
or
pop
repnz
pop
and
bndstx
adcl
sub
ljmp
jno
xchg
jbe
cs
repnz
cmp
mov
dec
and
fmulp
aaa
jge
nop
das
idivb
add
xchg
inc
and
add
inc
stos
into
or
jae
insb
jns
fldt
cmp
outsb
cmpsl
xor
xor
add
push
sub
jp
imul
pop
add
add
xchg
or
jl
rclb
mov
lret
inc
ljmp
pop
dec
xchg
rcll
inc
lea
inc
aaa
mov
sub
iret
out
loope
cmp
inc
push
and
loopne
nop
stos
jnp
sbb
xor
mov
ljmp
sub
pop
bound
jno
mov
cwtl
dec
push
push
inc
test
fcmovnu
jg
loop
int
ds
pop
xchg
sahf
cmp
loope
cmpsl
push
cwtl
insl
aaa
mov
xchg
aaa
jno
or
xor
popf
fistl
int
jne
push
mov
jecxz
xor
mov
dec
mov
xchg
mov
imul
adc
mov
stc
or
pushf
cmp
subl
jmp
pop
in
push
pop
sub
xchg
insb
cmc
cs
cmpsb
js
mov
lcall
fisubl
add
mov
push
cmp
fnstenv
out
inc
dec
jmp
jmp
sahf
fwait
clc
divl
or
mov
aad
pop
inc
or
xlat
cmpsl
nop
and
mov
and
xor
into
sbb
int
icebp
cli
pop
jb
push
lcall
inc
pop
pop
jmp
or
lahf
or
movsb
mov
dec
inc
sarl
mov
loope
out
mov
ficoml
xor
fdivrl
push
imul
push
cwtl
pop
mov
add
cmp
aas
mov
add
push
in
pop
imul
cmp
nop
mov
seto
popl
pop
inc
aas
and
xor
jae
test
jge
shlb
rclb
pop
dec
sbb
pop
mov
pop
rcl
clc
pop
addb
xlat
pop
repz
xchg
cmp
test
rcl
gs
shl
mov
hlt
sub
cmp
stc
enter
int3
sub
inc
shll
push
pop
jp
mov
insl
mov
inc
xor
subl
mov
cwtl
adc
aam
daa
push
addr16
imull
into
adc
inc
pop
xchg
mov
add
xor
mov
cwtl
aaa
xor
mov
hlt
cmpsl
testb
cld
xchg
cltd
stos
in
nop
or
sahf
jecxz
jl
mov
cld
sti
mov
cs
into
lods
cld
jbe
add
orb
notb
cmc
xorl
dec
xor
lcall
out
push
push
pop
testb
ja
pop
xor
add
jo
ss
xor
jbe
pop
rcr
dec
inc
ja
mov
ja
push
pop
lds
push
or
mov
xchg
imulb
mov
sub
popa
testb
xor
stc
repnz
incb
fldl
xchg
or
or
js
pop
fnsave
sub
das
mov
jl
fldt
aad
ficoms
outsb
iret
jecxz
jb
insb
outsl
mov
sub
cli
int3
lods
add
lods
add
test
out
xchg
sub
fs
repnz
popf
mov
jae
jb
data16
loop
inc
add
imul
and
addb
aas
mov
xchg
xor
hlt
push
jle
adc
lods
inc
mov
ror
iret
and
jecxz
cmc
jmp
or
loopne
push
std
aas
cmc
jo
fwait
jbe
push
lret
cmp
sub
test
sub
mov
movsl
sbb
push
sbb
xchg
mov
lahf
cmpsl
ja
test
cmpsb
popf
pop
es
jle
add
shl
mov
or
sub
les
mov
add
popa
adc
cmpsb
inc
push
push
push
cwtl
add
adc
add
lret
dec
into
sub
test
lahf
fstpt
xorl
icebp
je
icebp
jl
data16
push
mov
arpl
lds
mov
mov
inc
xlat
jmp
sahf
xchg
fs
mov
arpl
or
stc
add
and
sub
add
jmp
ret
aam
ror
inc
aas
pop
and
fstpt
xor
sti
rolb
push
rorb
and
fbld
push
jg
jns
rorb
and
mov
cmp
or
cmp
inc
pop
xor
fcmovnu
movsl
sbb
pop
or
jo
cmp
cli
jo
pop
mov
mov
cmp
mov
sbb
sarl
dec
adc
pop
adc
out
mov
add
lds
xor
xchg
loop
mov
xor
xor
shrl
leave
in
popa
jno
loop
pop
push
xor
adc
mov
andl
dec
std
and
mov
add
push
push
dec
jno
notl
lods
addr16
sbb
jecxz
add
jmp
pop
jbe
sub
jbe
pusha
ja
mov
mov
enter
out
sub
es
push
cmp
jmp
sbb
shrb
inc
and
add
and
dec
mov
cltd
push
inc
test
jl,pn
push
mov
adc
xlat
pop
pop
mov
dec
xchg
jecxz
sbb
pop
xchg
arpl
out
jp
dec
pop
push
out
stos
mov
jecxz
add
jmp
andl
rolb
xchg
mov
cmc
sub
mov
or
cmp
in
imul
xor
movsb
cwtl
xor
jmp
inc
adc
xchg
fstl
cmp
pushf
push
mov
jecxz
inc
mov
fsub
pop
out
andl
xchg
mov
mov
movsb
mov
jle
popf
cwtl
shlb
mov
push
xchg
insb
cmpb
add
push
sub
test
sbb
cmp
lods
aam
imul
ja
xchg
jae
jmp
xchg
adc
cltd
stos
adc
imul
sbb
bound
or
push
sbb
loope
xlat
lret
push
push
pop
sub
mov
jne,pn
mov
jno
out
orl
mov
test
int
fwait
cmpsb
push
mov
xor
loopne
insl
mov
jns
mov
pop
sbb
mov
rclb
and
pushf
jmp
jp
lods
mov
pop
shll
scas
cmpsl
outsb
push
mov
xor
aaa
sarl
sbb
cmp
fcmovnb
jnp
imul
adc
fstpt
mov
repnz
aam
js
popf
jnp
lods
sub
sub
pop
mov
mov
dec
pop
rolb
adc
mov
fldt
push
adc
call
jns
scas
mov
je
out
sbb
xchg
or
mov
inc
lret
les
pop
cmc
cmpsb
or
imul
cmp
or
add
imull
pushf
out
dec
repnz
jbe,pn
and
leave
lret
xor
xchg
fcoms
fmul
outsl
popf
mov
loopne
xlat
loop
sbb
aad
int3
ret
mov
push
push
xor
sub
inc
cld
jle
mov
adc
pop
clc
icebp
in
sbb
hlt
imul
xchg
xor
mov
lock
popf
pop
mov
push
mov
push
insl
and
data16
mov
xchg
daa
dec
notl
inc
ss
repz
lea
ret
xor
push
push
mov
scas
roll
pop
add
popa
iret
mov
sub
icebp
xchg
daa
sub
movsl
xchg
subb
pop
and
add
ljmp
insb
lds
jp
jno
jnp
sbb
dec
dec
mov
mov
and
inc
nop
mov
mov
out
dec
dec
sbb
repz
and
cmp
inc
xchg
and
or
push
jb
and
lods
repnz
lods
jmp
inc
ret
lahf
mov
dec
xor
push
sbb
mov
in
pop
sbb
daa
pusha
sbb
sbb
pop
mov
sti
cmp
imul
cmp
push
imul
xor
jnp
sub
jge
es
pushf
mov
sahf
call
out
adc
sarb
mov
inc
fcomp
jb
cmpsl
pop
lds
or
cmp
mov
pushf
and
push
sub
mov
cmp
sub
in
aas
xchg
rcr
pop
mov
outsb
das
test
xor
mov
pop
push
clc
rcrb
cmpsb
jge
loop
pop
cwtl
test
mov
fsubrs
push
out
cmp
sbb
dec
or
test
inc
mov
adc
or
sub
scas
cmc
dec
or
sub
mov
mov
push
cli
insl
mov
sub
jns
lcall
cmp
test
shrl
lods
dec
mov
enter
hlt
clc
push
lods
sbb
pop
shl
dec
xchg
adc
in
lahf
xchg
inc
xchg
mov
cmp
sub
pop
pop
mov
mov
xchg
out
pop
test
jp
adc
mov
or
loopne
push
sti
testb
fistpll
cmpsb
mov
mov
pop
pop
and
mov
dec
ror
xor
mov
cmp
dec
adc
push
add
push
jecxz
clc
jo
lcall
pop
push
lret
test
push
nop
daa
mov
aad
outsb
or
cwtl
sahf
loope
sbb
or
xlat
movsl
or
in
push
push
out
fisubl
push
pop
fidivl
xchg
call
mul
in
and
notl
jp
insb
movsb
in
push
sub
imul
lahf
lahf
and
mov
leave
scas
or
push
adcl
fidivl
testl
pop
jno
lret
je
ja
test
sahf
popf
movsb
pop
lcall
mov
add
mov
cmpsb
jb
inc
repnz
or
inc
int
add
push
pusha
jmp
fdivrs
popf
testb
or
or
sbb
and
addr16
add
cmp
mov
aaa
pop
add
xor
dec
shlb
je
push
rcl
xor
xchg
cs
adc
add
add
rcll
mov
jbe
test
js
pop
loopne
sbb
sub
dec
or
mov
jle
loope
popf
push
insl
sub
sbb
and
popf
aam
push
imul
nop
fmulp
push
mov
jb
hlt
les
jno
mov
xchg
lret
xchg
ds
jmp
fwait
sbb
inc
outsl
imulb
das
stos
mov
pop
hlt
lret
dec
insb
andl
test
je
iret
mov
negb
push
out
js
int3
and
stos
addb
push
ss
outsl
js
orl
fisttps
sub
addl
sub
or
aam
cld
sbb
and
mov
mov
shlb
inc
add
fstps
repz
cmpsb
dec
mov
add
cmpsb
incb
dec
push
push
mov
ret
pushf
stos
stc
test
jp
in
shll
xor
orb
das
push
out
inc
pop
xor
inc
aam
add
cmp
nop
dec
mov
testl
popf
sbb
sti
aaa
xor
jbe
push
stc
insb
mov
lds
mov
imulb
test
mov
pop
rorl
hlt
sub
sbb
hlt
popa
dec
test
push
das
jecxz
sbb
mov
mov
sbb
cmp
movsb
pop
cmpsl
jl
jmp
lea
lea
fsub
lock
xchg
repnz
add
push
xchg
xor
push
std
lea
in
pop
dec
je
or
dec
adc
cmpb
fs
sub
cmp
outsb
sub
scas
push
mov
sbb
or
imul
push
adc
vandnps
mov
enter
lea
insb
adc
push
lret
lret
push
je
inc
rcl
fstpl
aad
ljmp
inc
mov
cmc
cltd
jl
negl
in
jl
ja
xchg
hlt
pop
mov
sti
jbe
out
mov
std
xchg
adc
arpl
or
mov
sarb
fsubs
jmp
js
lahf
hlt
bound
mov
mov
js
or
sbb
xchg
or
fcomps
fwait
ret
fimuls
test
sahf
movsb
repz
adc
or
repnz
cwtl
pop
and
or
aam
out
ss
push
ret
inc
jnp
fistps
movsl
push
mov
jp
jl
dec
jno
xor
sarl
popa
sbb
mov
aam
fadds
lods
sqrtps
cli
loope
pop
aam
pop
aaa
shlb
push
xchg
mov
fildll
push
inc
ret
mov
mov
adc
out
fistpll
scas
es
dec
outsb
mov
xchg
sbb
adc
mov
push
sub
and
push
and
cmp
bound
sar
int
sub
push
leave
adc
pop
fidivs
add
dec
push
mov
call
dec
nop
out
aas
popf
dec
mov
fs
pop
shrl
loope,pn
sbb
add
loopne
iret
dec
lods
lds
add
fadd
fistpl
std
loopne
repnz
and
jno
orl
imul
dec
inc
shrb
pop
roll
insb
rol
jp
push
std
aad
dec
push
xor
push
les
nop
or
xchg
add
ja
fidivrl
pushf
lock
call
cmpsb
ljmp
xchg
mov
lds
lret
xchg
xor
jns
aam
pop
push
sbb
xor
mov
xchg
inc
dec
xchg
and
xchg
es
push
dec
addr16
or
jg
push
sbb
jl
cmpsl
pop
pushf
data16
loopne
cmp
push
mov
fdivs
fidivs
fistl
push
aam
jg
xor
sbbl
test
xchg
popa
sub
cmp
mov
mov
push
loop
cmp
outsl
cmp
sub
rsqrtps
mov
idivl
int
lods
bound
mov
movsl
dec
or
testl
call
mov
push
out
insl
fwait
push
ja
cltd
push
or
aad
jle
aaa
xchg
lahf
pop
add
push
in
cmp
std
pop
jmp
je
or
addr16
out
sbb
dec
iret
outsb
cwtl
push
loop
nop
cmp
shlb
test
lea
aaa
sti
adc
pop
fsubs
sub
push
sbb
dec
and
push
movsl
inc
push
and
sbb
dec
paddd
movlps
clc
cmp
adc
js
mov
fwait
movsl
mov
adc
sbb
xorl
mov
and
xor
mov
shrb
sbb
lea
xor
out
and
rolb
jnp
pop
pop
sub
sub
daa
xchg
pop
mov
sti
xchg
in
stos
jmp
add
imul
enter
sub
add
xor
push
dec
test
sbb
test
sub
sbb
push
idivb
out
mov
cli
sub
jb
shr
pushf
add
stos
xor
loopne
repz
add
pop
cmp
sbb
xchg
std
in
cmp
ret
cwtl
xchg
xor
adc
jno
adc
dec
rorb
test
jmp
push
movsb
dec
adcb
popa
hlt
xor
daa
mov
inc
push
push
mov
jg
mov
imul
orb
mov
adc
mov
and
nop
lret
icebp
int
ljmp
push
lcall
int
xlat
je
dec
xchg
clc
xchg
rorb
jo
xor
mov
call
inc
jmp
rcrl
jp
and
lods
outsl
insb
xor
adc
cmpb
xlat
inc
fcom
imul
sti
icebp
push
sub
test
fnstsw
mov
lock
jmp
scas
sbbb
xor
insb
movsb
adc
mov
pop
out
aad
push
out
add
pop
fmull
popf
mov
out
rol
subl
fsubs
xor
movsl
rclb
jg
inc
fildll
in
stos
pop
push
loop
push
into
add
call
inc
mov
nop
jne
mov
cmp
sahf
ret
push
mov
or
jns
sbb
pusha
insb
add
push
mov
pop
arpl
mov
pop
push
jns
jno
in
dec
lods
jns
insl
ljmp
xchg
push
aaa
jl
scas
pop
outsb
lahf
mov
cmp
popf
rorl
js
mov
jecxz
sub
jo
mov
dec
mov
mov
mov
insb
mov
mov
jns
cltd
shrb
cli
or
dec
and
lds
pop
cltd
sahf
shlb
insb
enter
xchg
loopne
mov
sub
push
mov
mov
xchg
ljmp
fistps
test
mov
js
call
repnz
adc
adc
aas
imul
imul
and
sahf
push
popf
pop
and
pop
insl
in
add
dec
pop
lock
inc
cmpsb
and
fcoml
test
aas
sbb
ja
outsb
sbb
or
xchg
hlt
mov
mov
pop
cmp
insl
xchg
mov
xchg
jle
pop
std
or
inc
cwtl
scas
sbb
dec
jmp
clc
loopne
lock
and
sbb
daa
mov
mov
xor
cmp
and
call
jge
sar
cwtl
test
cmpsb
das
push
push
stos
movsl
sti
xchg
lret
push
and
stos
mov
xor
xor
cmpsl
ja
mov
and
pop
inc
push
fisubs
push
rol
sbb
addr16
sbb
das
pop
push
mov
or
and
cs
pop
lods
outsl
and
es
and
sub
aad
sbb
pop
outsb
xchg
in
sub
aas
mov
rcrb
mov
std
repz
jb
fldenv
jo
lds
jb
lret
jg
or
mov
push
int
xor
mov
pop
pop
call
call
and
push
mov
and
int
stos
xor
mov
jne
xchg
xchg
push
sub
jae
fsubs
inc
inc
outsb
sub
cmpsl
out
call
sub
or
xorl
test
dec
mov
dec
outsb
ss
cld
xchg
lret
xchg
insb
mov
or
push
dec
and
mov
cltd
clc
stc
leave
jbe
cmc
ja
jo
inc
dec
pop
mov
ret
jns
inc
call
iret
adc
mov
xlat
imul
sbb
stc
cmpsl
cmp
mov
pop
mov
bound
std
sbb
dec
pop
mov
xchg
les
cmp
jg
or
add
mov
sub
mov
lods
sub
mov
or
dec
and
pop
leave
fsubrp
in
push
add
pop
sub
jl
push
inc
lock
inc
ss
pushf
lods
sub
mov
jne
pop
xchg
xchg
jmp
test
add
add
add
inc
test
lock
jnp
sbb
push
insl
xchg
scas
test
rcrb
inc
or
jae
cmc
dec
jns
xchg
mov
cmpsb
xchg
push
sub
lds
movhps
shr
pop
and
push
mov
and
lods
push
add
insb
lahf
orb
inc
or
aad
dec
mov
xor
dec
xchg
lods
or
call
divl
or
or
aad
xchg
aaa
lret
dec
out
xor
out
push
stos
and
in
add
add
pop
sti
sti
in
imul
cltd
cmpsl
xor
adc
dec
add
stos
les
sbb
test
les
add
xchg
adc
aaa
fmull
inc
jl
sbb
enter
fimuls
or
scas
mov
push
cli
sub
inc
push
pusha
rcll
not
xchg
or
clc
inc
stc
mov
mov
jl
movsl
sbb
xlat
push
jl
xchg
aam
jg
out
xor
mov
je
mov
or
mov
loop
mov
pop
repz
adc
test
xor
mov
icebp
add
subl
lods
xchg
jns
lods
test
or
push
sbb
pop
adc
add
jbe
or
xor
or
add
shlb
cmpsl
push
push
cs
adcl
mov
fidivrl
aaa
int3
pop
dec
push
xchg
pop
push
inc
outsl
mov
adc
pop
mov
xchg
inc
and
gs
std
adc
jb
fs
mov
popa
jp
subb
orl
or
fwait
outsl
lods
pop
pop
adc
je
pushf
or
repz
shlb
clc
mov
cwtl
adc
icebp
mov
mov
mov
push
xchg
dec
idivl
outsl
pop
jb
out
imul
jnp
adc
jne
cs
xchg
sti
subb
or
xor
insl
in
mov
cwtl
popf
bound
ret
movsb
fsubl
xchg
push
cmp
test
dec
ss
xor
jle
and
jmp
ret
jge
sti
mov
dec
imul
dec
mov
iret
jl
mov
cmp
movsl
cmp
xor
mov
xchg
shrb
mov
xor
xchg
test
lea
push
add
sub
and
movsl
cmpb
in
lahf
fistps
push
mov
cmp
xchg
push
cmp
out
mov
push
push
xchg
int3
sub
sub
dec
not
xchg
ja
fiadds
xor
push
jne
cmp
aaa
push
bound
aad
cmpsl
jns
lds
inc
movsl
fistl
sub
loopne
xchg
mov
inc
add
les
sub
push
aas
lahf
rcrl
xor
cmp
dec
jns
inc
aad
cs
jecxz
in
dec
xchg
stos
cwtl
xchg
mov
push
mov
cmpsl
mov
dec
sbb
iret
or
insl
sub
test
fcom
mov
sbb
sub
xlat
sbb
jae
push
pop
sbb
dec
add
ja
subb
roll
out
push
imul
sub
mov
cmpsl
cmp
inc
cwtl
xchg
and
cmc
push
nop
and
adcb
or
push
dec
rolb
shlb
push
mov
adc
xor
repnz
outsl
insl
hlt
outsb
lods
jmp
sub
push
lock
sub
and
jmp
aas
fucomip
jp
jle
std
cmp
dec
and
loopne
ja
mov
sub
jbe
push
cmpl
ss
or
jnp
jno
stos
jns
jl
das
ds
mov
push
ret
adc
into
add
das
repnz
push
subb
mov
pop
or
int3
pop
sbb
jecxz
adc
dec
sub
data16
stos
pop
mov
sub
mov
pop
insl
daa
dec
stc
jp
shll
or
cmc
stos
push
pop
imul
dec
mov
sbbl
aaa
ret
sbb
icebp
inc
in
mov
mov
idivl
notl
aaa
movsl
in
dec
sbb
cmp
jmp
and
pop
push
jg
in
aad
sub
cmp
mov
adc
insb
jae
in
mov
lret
sub
lret
mov
jnp
leave
movsl
cs
mov
mov
dec
pop
mov
dec
mov
popf
dec
ffreep
imul
mov
ds
fcompl
into
inc
inc
mov
push
xor
dec
sub
nop
repnz
pop
mov
and
pop
outsl
das
mov
testl
mov
fiadds
adc
lret
mov
nop
xor
mov
jle
js
int
mov
sahf
mov
dec
mov
pop
ret
jae
mov
xchg
mov
fidivrs
pop
jl
xlat
insb
sbbl
mov
xchg
add
push
mov
mov
daa
ficoms
mov
and
jno
dec
andl
out
adc
push
add
add
cmc
mov
xchg
sbbl
mov
out
loope
fidivl
or
popf
lret
mov
testl
cmp
xchg
cltd
inc
jecxz
imulb
test
xchg
imul
into
mov
xchg
mov
jb
hlt
jl
push
adc
xchg
ret
hlt
mov
jne
mov
imulb
test
sub
push
mov
inc
mov
lcall
mov
jmp
das
flds
stc
mov
jmp
or
push
pop
sub
sub
push
push
xchg
jg
sbb
shrl
ljmp
stos
xchg
test
sbb
xchg
push
push
mov
data16
mov
adc
xchg
xor
xchg
repnz
gs
clc
das
mov
pop
stos
insb
xchg
add
inc
hlt
pop
dec
mov
bnd
and
fnstenv
jb
inc
faddp
mov
cmpsl
fsubl
cli
mov
mov
jmp
imul
sarl
mov
jnp
clc
test
push
gs
push
nop
push
sahf
arpl
divb
cs
pop
imul
loopne
xchg
dec
incb
out
jbe
jecxz
sub
imulb
stc
push
roll
add
cmp
pop
shll
iret
pop
pop
sahf
jns
rcl
pop
js
lret
sub
dec
sbb
sahf
adc
xor
popf
jnp
ficoms
mov
and
mov
cld
sbb
inc
pop
xchg
mov
jmp
stc
mov
ss
into
sahf
sub
xchg
mov
arpl
xor
xchg
lahf
sti
and
pop
in
push
cmpsb
test
sbb
pop
or
jns
mov
in
into
lods
adc
stc
hlt
xor
inc
fnstsw
mov
jp
cmc
or
or
xchg
sub
insb
jns
fists
out
mov
inc
dec
push
lock
cmpsl
cmc
test
and
in
cmp
cld
aas
inc
inc
aad
rolb
mov
xchg
jle
adc
xchg
getsec
pop
cltd
pop
inc
add
pop
stos
into
add
xchg
sub
push
out
std
jmp
iret
add
out
pop
sbb
add
shr
cmp
pushf
dec
cltd
dec
test
mov
pop
push
jno
xchg
ss
ficomps
sub
faddl
sbb
cmp
lock
loop
sbb
add
pop
addr16
dec
pop
push
leave
cmpsl
lea
leave
mov
aas
imul
test
movsb
das
pop
ret
jle
in
mov
push
mov
out
das
loop
test
push
dec
mov
sub
mov
sub
mov
mov
lock
pusha
imul
add
mov
sbb
aam
scas
cmp
sub
mov
pop
push
repnz
repz
push
cmp
dec
test
or
adc
out
aaa
fcmovnu
sub
gs
add
gs
and
pop
das
pop
dec
xchg
mov
aad
decb
xor
sbb
sub
int3
int3
hlt
testl
shrd
or
loopne
gs
sbb
popa
cli
leave
add
movsl
mov
lods
cmp
jnp
push
scas
or
inc
jl
sbb
insb
or
cmp
and
push
fidivs
pop
pop
pushf
out
negl
pop
ds
pop
loopne
add
pushf
out
mov
sub
roll
aam
mov
rcr
cs
repnz
cmpsb
or
in
subb
inc
jl
add
imul
stos
add
inc
popf
std
sbb
mov
cmp
lret
pop
pop
call
mov
cmc
out
test
in
cltd
dec
dec
push
jne,pn
xor
jbe
addr16
mov
jnp
cltd
mov
xor
push
stos
sbb
data16
fs
and
int3
mov
add
scas
test
fs
fstpl
push
jnp
daa
cmpsb
loop
push
loop
pop
pop
roll
inc
dec
sub
add
sarb
fnsave
imulb
sahf
add
add
aam
sub
sbbl
and
loope
push
or
icebp
inc
sub
int
cltd
push
stos
jb
fwait
ljmp
dec
cmpsb
cmp
ret
pop
pop
cmpsb
fmuls
jg
scas
aad
leave
xchg
mov
xor
scas
push
or
bound
pushf
mov
cmpb
add
pop
addr16
mov
cmp
adc
jecxz
jb
aas
cmp
xor
shr
mov
adc
lods
sti
and
fistps
into
mull
inc
sub
mov
mov
scas
and
jo
jecxz
mov
pop
scas
mov
mov
test
cmc
loopne
shrb
dec
inc
loope
mov
loop
js
adc
mov
movsl
adc
sahf
mov
push
bound
ss
adc
ficomps
inc
and
inc
cmpsl
sub
std
aad
data16
jmp
outsb
lock
out
sub
aam
and
push
stos
adc
and
inc
push
inc
dec
enter
add
xchg
repz
pop
popf
sbb
pop
repz
mov
and
je
lret
xchg
mov
gs
sub
xchg
mov
xor
push
sub
push
icebp
sbb
sbb
xchg
sbbl
inc
jb
jl
out
clc
cs
test
and
ret
push
inc
jnp
lods
adc
in
ret
dec
lahf
cs
aad
inc
dec
cs
divl
insb
aad
jg
stc
stos
ljmp
pop
push
ret
cmpsl
xchg
movsl
arpl
push
lret
outsl
mov
add
loop
xchg
ficompl
xor
bswap
or
dec
dec
add
pushf
dec
popf
push
cmpsl
shld
aaa
arpl
mov
insb
dec
std
mov
mov
pop
jl
sub
mov
or
xchg
inc
int
and
sub
mov
daa
and
lcall
ss
out
bound
sub
ljmp
dec
sarl
mov
mov
dec
loope
ja
mov
adc
inc
xchg
imul
test
daa
mov
lock
fidivrl
cmp
in
repz
es
out
push
in
outsb
sbb
xor
imul
pop
push
mov
cli
outsl
pop
xchg
mov
aad
jecxz
add
ja
ljmp
push
lods
mov
std
adc
in
pop
push
repz
mov
iret
rcrb
pop
ds
lcall
mov
or
cld
inc
jmp
or
ret
ret
idivl
punpckldq
adc
mov
dec
or
jmp
add
jecxz
popf
movsl
xchg
push
cmp
aad
inc
xor
repz
shr
sub
mov
sub
push
orl
div
insb
pushf
adc
in
cmp
mov
or
mov
push
ficoml
imul
das
icebp
enter
xor
pop
or
sbb
mov
nop
in
in
aad
in
pop
push
nop
mov
dec
mov
or
mov
add
mov
push
xchg
jg
popf
add
fs
jge
mov
adcl
push
subl
jb
pop
cmp
add
jnp
and
inc
jb
or
mov
mov
pop
adcb
call
sbb
lret
lret
sub
je
loop
nop
inc
adc
ja
lret
lret
pop
inc
loope
sti
hlt
dec
cwtl
inc
int
jecxz
push
loop
add
push
xor
push
push
into
outsb
push
mov
cmpsb
mov
imul
repz
sbb
int
pop
out
cmp
aad
in
fs
ja
ja
xacquire
add
dec
jns
inc
testb
mov
in
dec
aad
inc
xor
xchg
add
sbb
dec
ret
icebp
daa
flds
mov
mov
imul
pop
push
shlb
aam
mov
repnz
bound
sub
cmpsb
xchg
ds
icebp
push
dec
push
fmulp
int
cmc
cltd
cs
xchg
inc
mov
pushf
enter
lods
jb
sbb
hlt
lea
je
pop
cmp
cmp
mov
jp
iret
pop
je,pn
mov
bound
pop
sub
and
mov
jb
repnz
dec
dec
and
mov
mov
callw
xchg
mov
mov
or
inc
mov
cmpsl
lret
cmc
pop
sub
mov
scas
jmp
adc
scas
sub
mov
inc
imul
pushf
xchg
pop
push
xorb
stc
jp
sbb
movsb
cmpsb
cmpsb
popa
mov
test
jge
pop
sti
cli
xchg
lock
sbb
push
lahf
dec
out
test
push
or
or
lock
adc
push
out
test
int3
cmp
popl
shll
push
adc
rolb
cltd
xchg
pop
dec
outsl
mov
or
fistpll
lahf
sub
xchg
pop
shrl
jmp
popa
xchg
push
arpl
push
lret
sub
cltd
dec
pop
call
mov
je
icebp
mov
test
int3
xor
sub
mov
mov
shl
imul
fcmovnb
out
out
push
mov
cmc
push
aas
stos
movsl
outsl
jmp
ret
ds
xor
dec
loopne
cmpb
or
add
mov
inc
rcll
test
add
pop
out
push
and
adc
adc
scas
mov
sub
dec
sarl
cli
shlb
mov
iret
test
stos
fs
fwait
jg
mov
xchg
lds
pusha
data16
cld
filds
std
pop
ja
add
adcb
push
dec
aaa
int3
push
jge
mov
addr16
jmp
cwtl
mov
sub
push
aas
pop
sbb
mov
push
mov
xchg
icebp
mov
movsb
dec
and
mov
push
aam
or
test
nop
jl
ret
aad
in
or
mov
sub
pop
loopne
mov
inc
ja
xchg
add
or
dec
aad
jne
sahf
dec
sbb
test
mov
add
iret
testl
push
and
jecxz
and
xlat
shll
lcall
push
insl
stos
in
push
pusha
stc
repnz
xchg
mov
pop
push
inc
fldt
dec
popl
jae
mov
mov
xor
cmp
cmpsl
int3
or
mov
int3
jo
jae
and
add
pop
mov
out
pop
test
in
inc
lret
js
arpl
loop
sbb
pop
inc
push
loop
ret
cmpsl
push
rep
aaa
je
pop
loopne
and
pop
jmp
mov
xchg
inc
xchg
sub
aad
std
mov
inc
pop
and
fwait
jge
sbb
xor
pop
cld
stc
addb
repnz
adc
pusha
adc
dec
imul
dec
xor
rcl
cmp
daa
test
push
jae
out
mov
and
fisubl
cs
enter
gs
lea
cmp
inc
jae
jg
push
lods
or
add
xchg
lret
jmp
shl
pop
decb
movb
sub
fldcw
mov
push
call
bound
lret
jp
xchg
sahf
pusha
add
dec
cmc
rcrb
ds
cmp
or
rcr
popl
dec
out
sbb
cmc
loop
pop
jg
or
and
pop
cmpb
mov
out
xor
mov
add
shl
in
into
xchg
cmpsb
stos
std
in
imul
add
shrb
sti
ds
inc
ret
pop
add
mov
in
inc
rcrb
cmpsb
mov
lcall
enter
pop
stc
not
push
add
cmpsl
sbb
add
sub
jle
inc
xchg
mov
add
mov
or
hlt
fcmovne
pop
es
jmp
xchg
jb
adc
std
enter
sbb
loop
sbb
mov
cmp
cld
push
fldln2
stos
leave
or
dec
pop
cmp
dec
or
sti
loopne
add
scas
xchg
or
cmc
loope
jb
jno
shr
adc
mov
frstor
mov
sbb
les
jl
mov
cmpsb
arpl
xor
fisubs
mov
ja
je
and
lcall
out
insb
lret
out
arpl
nop
mov
sub
pop
and
lret
mov
test
or
and
adc
fdivrs
jmp
fwait
pusha
lds
je
fistps
lret
push
push
insb
cmp
and
popf
dec
negb
dec
jne
jl
lods
jae
fldt
cmp
imul
leave
mov
cmpsl
aam
jecxz
jecxz
in
push
push
stos
sub
push
mov
mov
mov
dec
inc
push
inc
movsb
fstpl
lcall
add
inc
add
sbb
mov
xor
and
inc
mov
xchg
mov
dec
xchg
inc
sbb
scas
lods
xchg
jns
push
mov
sbb
push
jnp
shrl
push
fiadds
popf
imul
leave
sti
xorb
push
mov
cmp
aaa
fnstcw
in
es
xchg
jle
adc
adc
stos
testl
testb
add
testl
inc
dec
int3
add
jns
pop
jb
jcxz
pop
pop
jns
xor
stc
and
pushf
xchg
arpl
xchg
sub
mov
hlt
ret
cmpb
mov
cmc
xchg
xlat
add
mov
test
cs
sub
jmp
lahf
push
enter
sbb
imul
mov
pushf
adc
out
xchg
jge
das
xchg
dec
xor
sbb
sub
xchg
mov
xchg
inc
add
in
cmovo
je
push
mov
and
and
jecxz
push
push
jge
xor
call
sbb
adc
stos
sti
mov
mov
dec
pop
outsl
movsl
hlt
push
pop
inc
out
iret
sar
push
mov
pop
fwait
movsb
and
push
loope
push
add
sbb
aaa
add
lret
inc
ret
and
lret
or
mov
sbb
outsl
fldcw
add
inc
jp
sar
or
sbb
arpl
arpl
je
push
test
test
sbb
sbb
scas
and
test
addr16
cmp
add
dec
sbb
lods
pop
mov
sub
mov
mov
jge
fcoml
daa
mov
inc
es
dec
dec
jl
jmp
push
xchg
cltd
mov
clc
std
jnp
xchg
insb
dec
dec
call
cmpsl
lock
clc
repnz
lahf
mov
outsb
cltd
cld
inc
aad
mov
sub
sub
push
push
push
out
cmp
jno
push
push
sahf
cmpsb
sbb
mov
inc
stos
inc
idivl
inc
cwtl
jge
ds
daa
push
enter
mov
push
xchg
jo
jno
loopne
mov
push
inc
stos
inc
push
push
jl
insb
shlb
lcall
mov
popa
dec
aad
pop
leave
dec
loop
mov
adc
flds
lds
mov
mov
insb
cld
sbb
ret
rclb
xchg
int3
cmp
stos
imul
mov
stos
rcll
push
popl
scas
andb
jge
push
pop
sbb
pop
shl
bound
clc
sub
mov
cwtl
mov
mov
pop
sub
sarb
cmpsb
and
inc
pop
sub
rcl
out
scas
leave
mov
lods
lret
push
insl
lea
lea
dec
mov
fstl
mov
sub
lea
shrl
imul
mov
jno
inc
mov
popa
jmp
out
sar
repz
or
jb
mov
ficoml
aad
mov
inc
incb
int
cmp
out
mov
xchg
test
fistpl
pop
sbb
insl
pop
sbb
hlt
shll
mov
bound
lods
lcall
in
aas
jg
ljmp
sbb
inc
mov
addl
sbb
scas
aaa
push
mov
xchg
fistps
data16
inc
cmp
gs
xor
cli
js
pop
jo
pusha
addr16
add
mov
scas
adc
shrl
jmp
jle
push
jns
jns
sub
sub
cmp
xchg
fs
mov
and
fisubs
into
pop
lret
dec
sbb
xchg
sti
clc
pop
inc
add
cmp
das
cmpsl
sub
sub
xlat
pop
xchg
nop
sbb
imul
pop
lret
pop
fwait
lret
idiv
and
sbb
addr16
sbbb
mov
in
inc
dec
pop
mov
fnstcw
mov
fisttps
inc
push
jbe
fists
or
xchg
pushf
push
cmpsb
lods
or
pop
xor
cld
add
inc
addl
xchg
sbb
test
sbb
jo
or
push
repnz
das
notb
out
mov
test
out
iret
jno
dec
push
sbb
std
jge
sbb
pop
ja
jns
icebp
fwait
enter
sbb
mov
cmc
cmpsl
inc
jnp
mov
adc
inc
stos
mov
ljmp
les
cmpsb
push
xchg
test
inc
xchg
enter
cwtl
sti
mov
out
shll
mov
cmp
sbb
mov
dec
push
pop
jg
inc
pop
cs
shlb
inc
jle
and
pop
test
inc
fs
sbb
dec
jae
jnp
mov
sub
out
fs
pop
test
mov
cmp
fiaddl
dec
sub
or
or
lods
lods
fadds
cmc
jno
divl
push
dec
push
sbb
adcl
adc
mov
loope
lcall
icebp
and
stos
add
popa
ret
lds
lds
sub
push
push
xchg
mov
inc
adc
loopne
das
cmpsb
jmp
sahf
or
xor
xchg
pop
fists
cmp
mov
add
in
subl
inc
push
test
mov
icebp
movsb
mov
pop
shrb
or
scas
pop
scas
jg
js
ljmp
jns
scas
xchg
sbb
js
add
enter
mov
test
lock
mov
lods
roll
inc
shlb
cmp
push
adc
rcr
ss
ds
pop
push
ds
jge
cld
imul
or
xchg
cld
leave
add
mov
sub
sar
dec
adc
test
sti
pop
dec
mov
jg
or
jmp
mov
pop
pop
enter
out
imul
inc
cmpsl
cmp
xchg
cwtl
mov
shll
xor
or
jno
cld
out
loope
sbb
std
lock
enter
aas
out
dec
and
or
pop
mov
fcoml
jge
into
imul
scas
into
dec
and
stc
mov
out
cmp
mov
aad
les
je
jg
mulb
mov
outsl
fiaddl
jnp
in
mov
js
loope
xchg
stos
stos
test
mov
jmp
stc
fwait
adc
dec
add
aas
mov
jl
movsb
rcr
popa
pop
sub
movsb
shll
mov
add
mov
cltd
fwait
sbbb
int3
pushf
imul
repnz
jb
outsb
movsl
repz
lds
out
lods
pop
xchg
mov
cli
mov
inc
loopne
fcomp
in
roll
cs
jae
outsb
inc
inc
test
into
stc
inc
mov
roll
setne
jno
lahf
mov
aad
shrl
sbb
fsubs
inc
xchg
or
or
in
je
es
scas
push
mov
jne
or
mov
inc
lds
jge
or
decl
rclb
arpl
inc
add
arpl
ljmp
lods
push
sub
lret
mov
push
inc
jnp
cmp
aas
and
mov
cmp
test
ds
mov
imul
test
inc
mov
sub
inc
inc
sub
add
xchg
stc
mov
int
dec
out
xchg
repnz
shrl
ds
das
jo
fmul
nop
je
mov
push
push
int3
test
lea
push
sub
or
shr
mov
mov
inc
inc
jne
mov
jno
sbbl
inc
pop
or
jno
push
mov
jl
loope
into
jne
mov
or
pop
xchg
adc
fs
addl
adc
sahf
mov
and
imul
pop
sub
sbb
andb
lods
jno
adc
flds
into
sub
adc
hlt
jl
jbe
ret
movsb
incl
aam
mov
ss
mov
xor
sub
adc
scas
aas
inc
and
in
xor
xchg
pop
sarb
stc
leave
ret
pop
lock
push
mov
cmp
in
cltd
shr
loope
mov
and
movb
ljmp
jae
push
jecxz
dec
enter
vprotq
ds
movsl
and
outsb
mov
cmpsl
ja,pn
xchg
xor
test
movsl
jb
jmp
int
xor
jge
push
xor
cmp
cmp
sahf
mov
dec
stos
adc
sub
adc
movsl
xchg
leave
mov
ss
jg
scas
xchg
inc
lahf
sub
sub
adc
insb
pop
push
in
jp
adc
pop
jo
clc
dec
js
or
push
loopne
pop
das
sub
push
sbbb
in
add
xor
sub
inc
push
stc
push
ficompl
out
xchg
sub
inc
or
popl
imul
pop
or
les
ljmp
in
pop
pusha
movsb
dec
out
ljmp
leave
push
and
in
loopne
sbb
ret
sbb
clc
add
aaa
adc
xchg
push
fisubs
cmp
sub
pop
inc
xchg
std
fildll
dec
sbb
fdivrs
adc
jmp
pop
je
mov
mov
jle
in
mov
or
sbb
inc
xor
mov
insb
adcl
mov
sub
shll
push
insl
repz
fnstenv
cmp
aad
pushf
dec
in
sbb
inc
outsl
mov
lret
fbstp
repnz
dec
jne
jmp
jecxz
xor
dec
sub
es
cmpsl
xor
andl
cld
sub
adc
ret
inc
sub
xor
push
pop
xchg
pop
cmp
sahf
sahf
adc
xchg
pop
push
dec
or
jp
jae
mov
or
adc
faddl
jne
inc
ja
bound
cltd
adc
shll
lcall
push
bound
fcom
dec
dec
lcall
sub
add
lods
imul
cmpb
mov
clc
lock
inc
movsl
add
add
mov
adc
int3
fcoms
mov
mov
and
into
sub
test
int
je
adc
movsl
dec
test
fists
mov
cmp
mov
in
jecxz
ss
adc
sarb
mov
hlt
sbb
lds
add
mov
jle
mov
or
lock
in
add
sub
mov
add
xor
int
mov
jp
fwait
ljmp
jne
fildll
jo
mov
jle
enter
dec
iret
xor
xchg
xchg
mov
fisttpll
sub
xor
push
mov
cmp
fistpll
push
ljmp
sub
std
fsts
into
es
sbb
adc
enter
cmp
push
scas
aad
inc
add
sub
ret
sbb
push
add
adc
inc
rorl
cmp
int
insb
filds
loope
scas
push
or
nop
movsb
mov
xchg
movsb
xor
pop
xor
mov
add
movsb
insl
push
cli
inc
inc
sbb
xor
aam
int
add
addr16
pop
xor
inc
push
jno
ljmp
shll
adc
mov
sti
dec
es
push
cmp
jb
sub
lcall
and
inc
push
inc
outsb
adc
adcb
and
ficoms
lret
add
in
cli
pop
jbe
mov
in
jecxz
rcrl
push
adc
sbbl
hlt
and
cmp
pop
cli
adc
pushf
jl
and
stc
aaa
cwtl
or
push
mov
or
dec
lcall
add
clc
mov
das
mov
shlb
test
inc
and
cmpsl
lods
test
push
addb
ret
pop
ss
out
das
dec
mov
out
cmp
enter
lahf
movsl
push
push
push
lret
pusha
xor
push
call
add
icebp
sarl
test
int3
test
paddb
in
fimull
cmp
lcall
or
addl
jp
jle
int3
jnp
incb
cmp
cmp
lods
add
mov
subl
xchg
xchg
cltd
push
push
jo
push
imul
rcrl
stc
mov
mov
cmp
out
push
adcl
pop
imul
insb
xchg
rorl
addr16
mov
xchg
test
cld
mov
cmp
outsb
or
mov
test
jl
fstl
inc
call
clc
fiadds
rcl
out
jb
dec
sbb
dec
or
adc
test
adc
jmp
adc
cwtl
insb
stos
inc
imul
push
js
push
into
pusha
and
test
stos
mov
mov
rcl
jp
cmp
rcll
and
dec
addr16
inc
ja
xchg
data16
cmp
mov
icebp
lcall
xor
inc
retw
stos
shll
js
cli
arpl
push
daa
and
xor
loop
push
sbb
ja
sar
cmpsl
sahf
cmp
out
call
push
and
jl
push
sub
cmp
test
add
jns
mov
sub
inc
stos
cmp
pop
add
out
cmpsb
mov
jl
cmpsb
lcall
sub
and
gs
lcall
imul
dec
loop
sbb
in
gs
sbb
fstpt
mov
rcr
add
sarl
andl
jecxz
inc
xchg
adc
sub
test
adc
insb
xchg
addl
call
jbe
cmp
pop
lret
stc
mov
dec
push
cltd
or
xlat
mov
ficomps
lret
rorl
push
mov
movsl
jnp
mov
cmp
bound
sti
inc
mov
jle
mov
cmc
add
pop
lcall
jbe
lcall
push
dec
cli
pop
gs
adc
lock
push
imul
sbb
mov
test
in
hlt
mov
gs
mov
sbb
fs
xchg
fdivs
loopne
jbe
enter
mov
jp
xor
jbe
jns
aas
jmp
test
xor
mov
push
ja
outsb
mov
cs
ret
adc
adc
and
and
aad
mov
xchg
fnstenv
ljmp
mov
or
ljmp
pop
jb
push
stos
scas
cs
mov
cmp
lcall
jne
fldl
xchg
cmpsb
mov
in
aaa
popa
sub
inc
or
xor
and
push
or
andb
mov
jne
icebp
add
fs
sbb
jae
mov
xor
and
push
mov
mov
pop
mov
push
mov
jno
rol
pop
xor
push
dec
xor
push
aad
jns
outsl
js
mov
cs
push
mov
mov
jns
push
out
dec
stos
sarb
in
in
pop
cmpsl
movsb
and
incl
mov
xor
mov
inc
test
xor
out
pop
and
jg
aaa
stc
and
adc
pop
xchg
pop
jae
lock
adc
xor
ja
xchg
shr
xor
bound
dec
xchg
icebp
dec
cmp
mov
hlt
cmp
mov
sbb
ret
mov
push
arpl
or
out
and
xlat
add
pop
js
mov
negl
mov
mov
ret
jp
mov
sub
jo
stc
xchg
stos
movsb
wbinvd
sub
decb
call
mov
and
xlat
popa
bound
mov
push
pop
ret
inc
stos
pushf
adc
ss
jle
inc
pop
mov
sub
adc
cmpsl
and
mov
inc
test
adc
add
dec
fs
fldcw
pop
cld
or
mov
in
xor
mov
lahf
lods
jae
mov
shrl
push
test
fwait
cmp
hlt
shrl
mov
mov
lret
inc
insb
jg
stos
pop
out
dec
sub
add
aam
push
push
ss
cltd
dec
adc
add
cmp
mov
ficompl
push
pop
adc
movb
cmpsb
add
lds
jl
or
pop
inc
mov
inc
es
int3
test
test
jne
mov
mov
pop
scas
push
mov
popf
pop
rcll
jl
fildll
scas
ret
data16
push
sbb
inc
dec
mov
adc
dec
xor
idiv
ret
inc
jo
fwait
loope
testl
jl
add
rcrl
jecxz
lcall
addr16
dec
push
leave
adc
ret
shrd
mov
and
aaa
inc
pop
push
jns
add
push
cmp
cmpsb
cmp
mov
sbb
out
xchg
cltd
ret
push
and
mov
pop
bound
leave
xor
addr16
mov
mov
mov
aas
neg
int
or
cltd
pop
and
or
in
and
fsubrl
repz
mov
and
sti
nop
push
aaa
in
xor
inc
testb
in
push
xor
ss
ret
xchg
mov
ljmp
pop
outsb
scas
lock
and
sbb
jge
movsl
pop
pop
bound
xor
adc
add
movsb
outsl
push
sbbl
ret
sub
adc
fldt
xchg
inc
sbb
fadd
int3
adc
sub
or
scas
sub
dec
out
pop
add
mov
iret
dec
adc
sbb
jge
dec
push
push
jo
pop
mov
mov
adc
pop
lea
insb
xor
cmp
adcl
xor
aam
sahf
add
shl
jecxz
fcompl
push
jecxz
cmpsb
jae
pop
pop
popf
or
dec
pushf
test
push
adc
or
push
mov
mov
lahf
imul
aad
je
js
cmp
dec
lret
arpl
push
cwtl
repz
cld
push
inc
jbe
jns
or
cmp
push
sbb
imul
addr16
out
jl
pop
insl
sub
cwtl
adc
ljmp
mov
mov
xchg
fisubl
mov
rclb
inc
or
inc
push
mov
test
add
andb
in
inc
adc
sbb
adcb
cli
xchg
mov
ljmp
fistps
aad
sbbb
cmp
sub
shll
pusha
loope
insl
pop
xorb
xor
xchg
mov
inc
mov
dec
lahf
fs
fsubl
xlat
mov
mov
lcall
or
das
cli
test
xchg
ds
add
in
in
push
and
imul
and
int3
xchg
inc
aad
inc
push
mov
jno
mov
lea
sub
fincstp
and
dec
sbb
xchg
cld
dec
jnp
repnz
outsl
xor
jo
push
imul
in
cmpsl
adc
test
ret
or
outsl
xchg
inc
cld
fdivs
push
push
popf
pop
pop
add
scas
nop
test
xor
adc
loop
add
push
mull
pop
lds
pop
mov
out
mov
mov
stos
and
in
inc
mov
es
adc
cli
loopne
pushf
ja,pn
cmpsl
fs
cmpsb
call
sbb
mov
loop
dec
outsb
push
icebp
jge
pop
pop
jmp
dec
mov
sbb
sbb
cmpsl
xor
aaa
dec
mov
mov
rcrb
cs
pop
mov
sub
add
fistpl
insl
xor
ja
sub
divl
sub
inc
push
sub
dec
enter
shl
and
push
call
popa
pop
jp
sahf
and
push
mov
inc
rcrb
pop
sahf
xor
fmuls
xor
xchg
xor
pop
push
into
leave
mov
xor
and
or
and
nop
pusha
popa
push
cmp
and
mov
sub
lret
adc
mov
mov
pop
jb
inc
push
push
mov
lods
and
lcall
mov
sub
leave
lea
cmp
mov
andl
jmp
fldenv
cmp
jnp
mov
fs
mov
lret
int
out
dec
jp
aam
jns
cmpsl
pop
testb
ror
push
jb
mov
fldl
fsubr
test
cli
push
xchg
or
cmc
sbb
and
in
int3
icebp
test
test
lods
popf
xchg
jl
out
adc
ds
xor
enter
sbb
fs
enter
lods
jecxz
and
int3
push
sti
aaa
dec
outsl
in
xor
popa
test
test
mov
ficoml
jb
mov
cld
mov
ja
imul
inc
inc
imull
fwait
aas
leave
outsl
jmp
subl
xor
subb
arpl
shl
fstps
push
inc
aaa
xchg
pop
cs
insl
ret
xchg
mull
inc
inc
in
sub
xor
stos
pop
xlat
inc
aaa
pop
add
lea
rcrb
fdivr
insl
push
shrd
decl
aam
test
mov
incl
mov
jp
xor
push
xor
dec
adc
dec
xchg
aas
push
sub
and
jge
mov
je
push
and
sbb
imul
scas
pop
mov
sysexit
adc
jnp
jmp
lret
dec
movsb
sbb
scas
fnstenv
ror
scas
push
sub
push
inc
imul
arpl
mov
dec
out
iret
inc
out
add
fucom
cltd
and
notb
loop
jp
imul
out
adc
insb
jbe
ljmp
push
jecxz
or
sbb
or
lcall
pop
or
mov
xacquire
testl
popf
sbb
lret
leave
in
ljmp
cmp
cli
outsl
xor
in
push
inc
outsb
test
fiadds
leave
xorb
adc
lods
and
aaa
fwait
popf
sahf
insb
in
je
xchg
call
in
sub
pushf
sbb
ret
sub
shr
cmpsl
inc
dec
jmp
pusha
sub
mov
loope
or
push
addr16
cltd
jnp
xlat
sub
cli
mov
xor
sar
sub
xchg
pop
pop
jbe
stc
lret
jp
mov
xchg
call
in
xchg
test
cmp
cmpsl
fcomip
std
repnz
jg
es
shll
mov
lods
leave
mov
repz
add
loope
shll
add
mov
out
inc
jne
mov
lahf
mov
add
fdivl
and
fs
pushf
test
and
aam
loope
test
adc
mov
out
sub
add
shr
add
cmc
int3
into
mov
sahf
inc
aas
cs
push
icebp
xlat
push
fcom
hlt
test
mov
es
mov
movsb
imul
cmpsl
mov
into
mov
inc
push
lds
cmp
cltd
gs
adc
dec
cmp
js
shrb
cmc
lcall
push
jp
jbe
ss
push
adcb
mov
jle
imul
mov
sub
pop
ja
or
cmp
jg
nop
mov
les
out
aad
shl
stos
fs
add
loope
cmc
loopne
scas
insl
movsb
jecxz
test
idivb
add
adc
stos
scas
dec
fnsave
popf
push
js
adc
fsubr
xchg
mov
mov
loop
and
jle
pop
data16
aam
js
hlt
pop
jbe
xor
int
stc
mov
inc
add
insl
mov
mov
in
mov
and
fiadds
clc
stos
popa
cmp
lahf
mov
push
lret
iret
loop
mov
aas
or
jecxz
popa
jb
out
and
mov
cmp
push
cwtl
stos
fisubl
and
jb
fistpl
inc
add
pop
or
jmp
dec
test
mov
loop
leave
divl
mov
push
clc
inc
mov
ret
adc
sbb
mov
shrl
sub
xor
cmc
lods
mov
push
fadds
xlat
jno
push
dec
xchg
jp
negl
xorl
xchg
lea
out
pop
inc
add
jle
or
sar
out
jge
push
sbb
scas
mov
scas
mov
jne
adc
cmpsl
add
movsb
jmp
cwtl
aaa
dec
sub
repnz
call
scas
adc
sbb
aas
adc
xor
cmp
mov
xchg
xchg
jl
int
les
fstpt
push
push
pushf
cmpsb
dec
das
cmp
and
mov
ds
sub
inc
xor
add
jo
push
adc
mov
je
xor
fwait
mov
dec
out
adc
fprem1
inc
mov
ficomps
out
lcall
fstl
insl
push
jecxz
jg
pop
lret
mov
sahf
mov
pushf
fists
mov
imul
ret
xchg
test
pusha
sub
dec
fcmovne
mov
xor
addb
loope
fs
and
aaa
out
adc
ret
stc
or
cmpsb
or
insl
cmpsl
mov
insl
out
addr16
scas
adc
jmp
cwtl
or
mov
aaa
ficompl
test
frstor
pop
xchg
jne
std
or
push
fs
movsl
addr16
jno
jns
orl
mov
adc
enter
push
in
stc
mov
stos
jb
push
push
adc
call
mov
mov
mov
cs
xlat
mov
int
sbbb
push
push
mov
push
push
cmp
push
aaa
xor
xor
ret
cwtl
adc
dec
int
jmp
sub
fadd
mov
stos
js
loope
ret
mov
aas
lock
fwait
xor
sub
test
jmp
inc
xor
lea
sbb
scas
mov
dec
push
shrb
in
imul
sub
test
std
jns
pusha
mov
jl
dec
xchg
mov
mov
call
ficomps
mov
ljmp
jmp
mov
fsubl
mov
cmpsl
mov
adc
incl
sub
xor
loopne
lahf
mov
test
add
jmp
sub
push
sub
mov
shrl
sti
cmp
mov
or
sub
jb
add
jb
add
nop
xor
cwtl
sti
movsb
inc
mov
test
shlb
add
sbb
scas
fs
inc
loop
adc
mov
gs
mov
stos
ret
sub
or
cs
xchg
push
imul
fdivs
mov
enter
pop
push
jg
lods
xchg
sub
dec
add
test
hlt
push
pop
pop
adc
mov
das
add
insl
cltd
cltd
mull
dec
enter
fisttpll
test
sbb
repz
shlb
dec
sti
or
jmp
and
arpl
rclb
cwtl
pop
push
adcb
mov
pop
or
insb
mov
movsl
stos
sbb
mov
jp
int
into
outsl
cmpl
mov
xchg
xchg
push
enter
mov
or
fcompl
enter
jmp
mov
mov
and
xchg
xchg
leave
into
xor
pop
jge
dec
add
lret
in
inc
jae
into
je
fistl
dec
sbb
jne
je
repz
mov
out
stc
xor
or
push
add
pop
ret
xorl
jne
push
popf
mov
pop
push
jmp
jns
lret
rol
mov
out
loopne
cmp
ljmp
pop
jg
insl
xor
adc
ds
sbb
xor
jmp
cld
stos
sub
ret
cmp
imul
xchg
jno
stos
add
sbb
sbb
dec
repz
dec
fstl
mov
jge
lock
mov
dec
call
and
in
mov
xchg
mov
jmp
mov
cmpsb
jae
dec
inc
pop
jmp
in
filds
jp
icebp
pop
repnz
xlat
bound
shr
ja
sub
pop
push
inc
xlat
int
repz
xchg
stos
add
and
and
mov
xor
rcll
pop
insb
in
dec
test
adcl
bound
not
sbb
rorb
push
xor
pusha
mov
sbb
insb
aad
cmp
mov
xchg
mov
adc
cmp
pop
addr16
mov
insb
lahf
fisubl
mov
stc
das
bound
gs
jecxz
and
push
jnp
add
nop
out
adc
in
adc
or
lods
fnsave
aaa
mov
mov
int3
push
sub
inc
popf
and
insl
xchg
lods
je
sbb
dec
call
mov
jnp
mov
cmp
add
jb
addr16
mov
cmp
cmpsl
pusha
test
push
jne
insb
lds
jo
aaa
dec
aaa
loope
xor
shl
fdiv
xchg
mov
sbb
cmp
or
gs
mov
fwait
je
mov
shlb
stos
push
cmova
scas
adc
sbb
hlt
or
dec
sbb
pusha
adc
xchg
push
push
xchg
dec
ficompl
jbe
ja
xchg
xchg
mov
in
mov
les
cmp
shlb
sub
outsl
push
sub
push
and
mov
repnz
mov
inc
subb
fsubl
inc
jno
sbb
cltd
mov
shl
sbb
stc
sbb
dec
and
imul
es
inc
push
test
lock
clc
push
adc
fs
jns
cmc
sbb
push
shlb
and
sbb
sub
pusha
xchg
arpl
xor
pusha
mov
cmpsb
ljmp
and
jae
int
xor
scas
pop
inc
addr16
xchg
xor
fcoms
push
mov
mov
push
inc
jns
push
jo
mov
pop
sub
mov
mov
lret
arpl
mov
vpcmpeqw
jnp
inc
outsb
add
in
push
cmp
ds
inc
or
bound
cmp
dec
pushw
outsb
or
add
scas
mov
std
icebp
cmpb
sahf
sbb
fs
cmp
pop
mov
int3
imulb
repz
pop
mov
aad
jl
push
pop
cmp
jecxz
data16
xchg
adc
cmpsb
in
xor
pop
push
sbb
int
sub
push
xchg
xor
lret
adc
adcb
shrb
dec
xor
ss
pop
jecxz
out
lcall
jnp
xor
cmp
orb
aam
xchg
adc
dec
mov
inc
in
cmp
sbb
or
cmpsb
inc
dec
jp
mov
mov
xchg
mov
dec
out
push
cmpb
and
pop
sub
ret
imul
lahf
imul
dec
fs
daa
mov
not
xchg
xchg
rcl
and
nop
lock
mov
scas
sub
mov
gs
lds
or
cmpsb
iret
pop
sti
test
jne
shll
sub
fdivrs
dec
mov
cld
mov
in
sub
adcl
fwait
out
das
or
xchg
dec
adc
xlat
inc
xchg
cmpl
pop
adc
jp
popf
imul
mov
lods
cs
and
pop
lret
jp
call
and
addr16
and
push
scas
push
jp
pop
or
add
lea
adc
scas
mov
and
int
mov
pop
imul
int
clc
ja
fsubl
xchg
imul
data16
mov
dec
das
sbb
mov
mov
lahf
jae
pop
sarb
sub
loopne
xor
mov
sbb
jmp
test
pop
mov
cmp
sti
xchg
dec
outsl
fiaddl
bswap
scas
insl
pop
sbb
jbe
hlt
arpl
enter
sti
dec
mov
inc
stos
sti
adc
outsb
dec
sub
bound
inc
test
pop
popa
std
mov
clc
mov
outsl
scas
testb
or
inc
cwtl
or
clc
pusha
dec
sbb
cli
cltd
fisttpll
gs
cmp
test
aas
sbbb
les
mov
push
pop
dec
cmp
repnz
in
orl
hlt
arpl
sbb
xchg
insb
lods
dec
ds
mov
shlb
push
push
push
dec
fsubs
xor
pushaw
cmp
fnstsw
loop
xchg
dec
jg
gs
aad
mov
xor
inc
mov
inc
dec
lea
mov
xor
sub
mov
xchg
out
test
cmp
push
xchg
popa
and
mov
imul
mov
sbbl
ret
push
ljmp
add
xor
inc
std
xor
notb
aaa
sarl
mov
imul
in
push
pop
ret
popa
rcrb
test
out
fdivp
repnz
dec
pop
cmp
xor
sbb
ror
sahf
pop
jno
jge
daa
push
in
jle
cmp
mov
xor
call
xchg
fistpl
push
xchg
pop
inc
add
dec
mov
leave
jge
add
or
test
adc
jecxz
or
fidivrl
jne
int3
es
xor
xchg
sahf
pop
repnz
ja
repz
testb
sbb
push
pop
or
lods
dec
add
loopne
push
aas
sub
iret
adc
xchg
out
cltd
mov
stos
cmp
sub
and
inc
les
xor
pushl
xchg
xchg
pop
loope
lret
mov
pop
sbb
jge
scas
in
rclb
sub
jecxz
enter
sbb
fistpll
pusha
xchg
cmpl
ror
mov
insb
mov
ret
inc
adc
mov
push
adc
lret
push
push
sub
stos
dec
cmp
imul
lret
dec
leave
jbe
enter
test
dec
sahf
daa
add
cmp
lock
jno
pop
je
xchg
addb
in
cmpsb
inc
cmp
sbb
imul
push
dec
mov
push
xor
push
adc
mov
outsb
push
sbb
push
mov
lods
out
aas
cmp
xchg
aaa
mov
in
leave
mov
fstpl
test
and
movaps
or
cmp
sbb
std
repnz
into
sbbb
cmp
subl
in
xchg
xor
xchg
mov
push
add
or
sti
ret
outsl
push
sti
xchg
addl
in
je
cwtl
incl
insb
fstpt
sbb
fwait
jmp
fsubl
pop
mov
adc
adc
les
leave
in
push
pushf
bound
xlat
sbb
or
push
and
xlat
xchg
fwait
in
add
push
inc
stos
mov
lea
mov
iret
js
insl
jmp
pushf
cmp
fucomi
jb
int
sub
mov
scas
push
push
mov
inc
sub
roll
ljmp
sbb
xorl
push
test
mov
inc
sub
xlat
jb
inc
ret
cmp
mov
jg
das
xor
push
je
add
cmp
jae
xor
data16
add
clc
or
repnz
sub
sbb
into
mov
jno
movsb
shrl
add
sbb
push
sbb
xor
push
push
inc
movsb
popf
mov
mov
sub
std
push
jge
jecxz
adc
dec
pop
repnz
add
aam
mov
daa
es
dec
pop
out
inc
adcl
ficoml
jg
mov
xchg
push
and
lret
jo,pt
aaa
push
cs
sub
push
sbb
or
push
aad
sbb
sbb
and
lret
sub
sti
push
push
icebp
mov
or
sti
or
push
popa
adc
dec
mov
iret
sub
in
or
push
jns
mov
xchg
xor
dec
test
cmp
jge
into
mov
call
outsl
ja
aam
aas
mov
add
es
sbb
inc
pop
jbe
nop
xor
cmp
cmp
sar
stos
aaa
cmp
and
arpl
or
lss
xor
push
fwait
push
dec
pop
or
push
push
mov
out
repnz
pop
mov
cmpsl
inc
int
or
shlb
js
ja
stos
inc
xchg
ja
add
sti
gs
xorl
jns
push
sub
nop
mul
into
cmp
cltd
ss
cli
enter
call
mov
push
cld
repnz
inc
dec
mov
sub
jae
insb
push
mov
inc
jae
pop
xchg
lcall
xor
mov
sub
xor
data16
movsb
fadds
cltd
repz
add
jbe
in
push
outsl
rorb
frstor
inc
pop
mov
add
roll
push
ret
pushf
cmp
scas
pop
add
inc
into
push
sub
inc
mov
pusha
add
mov
mov
mov
loopne
and
int
or
jmp
xlat
push
out
mov
movsl
pop
xor
ret
push
lods
lret
gs
jg
jecxz
jbe
shll
ss
in
in
rorl
in
push
sub
repz
shl
push
adc
inc
sti
repz
cmp
fimull
xor
mov
aam
lods
pop
popa
gs
dec
sub
rclb
mov
adc
jg
inc
jo
mov
lahf
out
test
dec
scas
in
mov
mov
jmp
es
lret
std
movsl
mov
fistps
cmp
jmp
sbb
and
fcomip
outsb
incb
sbb
sub
jne
ret
dec
aas
push
rorl
xor
jg
push
fsub
mov
add
mov
add
popa
push
mov
scas
xor
test
cmp
xchg
adc
addr16
cwtl
mov
pop
arpl
mov
sahf
or
call
and
cmp
pushf
xchg
and
sbb
imul
sar
mov
push
inc
outsb
cmp
pop
inc
lcall
int3
adc
push
mov
cld
or
dec
jecxz
jge
sub
cmp
adc
outsb
sub
mov
sti
jp
add
fstpl
jbe
xchg
jl
cmc
or
ljmp
pushf
jno
mov
in
test
lcall
dec
and
pop
mov
mov
pushf
adc
ret
dec
stos
jae
lcall
pop
scas
and
nop
lods
loopne
loopne
xchg
sar
stos
icebp
dec
stos
add
xor
rcrl
fdivr
inc
decl
enter
pop
add
fsts
push
mov
or
xor
xor
and
pop
mov
icebp
bound
mov
xchg
mov
or
out
mov
insl
xchg
lahf
xor
dec
push
add
fadds
pop
pop
dec
mov
add
inc
mov
aaa
mov
ja
lret
es
outsl
adc
outsb
imul
jecxz
mov
jg
and
cwtl
dec
xor
jno
xchg
test
jbe
lea
push
in
jae
cmp
iret
scas
adc
sub
pop
es
and
jg
adc
inc
in
add
pushf
test
mov
xchg
fstl
lods
add
xor
inc
lea
jb
adc
hlt
jle
sahf
jle
popa
mov
sbb
adc
cli
loop
aad
mov
shlb
dec
popf
xor
inc
scas
jmp
leave
pop
inc
or
scas
les
loope
inc
mov
lret
add
mov
fists
ror
fldenv
aas
add
scas
outsl
shll
pop
stos
xor
sbb
out
aaa
popa
and
or
add
pop
inc
pop
jns
cmpsl
inc
mov
stos
or
clc
xchg
mov
addr16
int
rorb
and
mov
sbb
in
push
mov
mov
jae
in
pop
ret
orl
jl
mov
lret
sar
repz
pop
push
test
jl
sub
mov
mov
sub
xor
int3
cmp
fisubl
mov
push
xchg
fsts
mov
out
push
cld
call
test
inc
ror
ret
sub
jne
sub
or
test
lods
shrl
icebp
pop
inc
mov
into
repz
xor
ss
mov
cmp
psadbw
push
sbb
mov
mov
incb
jp
cltd
pop
sub
mov
lcall
mov
cmp
mov
cmp
mov
jmp
stos
or
jp
in
lret
dec
mov
lock
cltd
or
jge
gs
sti
lahf
fidivrl
pop
ds
out
add
jle
add
cmpsb
cld
addr16
scas
mov
mov
imul
adc
lock
test
mov
scas
sbb
je
jo
out
lds
addl
jns
pop
sub
jo
pop
insb
jecxz
stos
xchg
or
push
sub
rorl
ret
sahf
mov
imul
popf
jne
mov
and
jg
mov
movl
or
in
sub
adcb
rorb
xchg
out
cmp
cld
call
push
test
xchg
xchg
lea
mov
pop
mov
and
jns
lods
je
xor
xlat
xchg
out
fwait
dec
in
repz
mov
fbstp
xlat
dec
push
daa
inc
bndstx
mov
gs
jmp
push
sub
fisttpll
ja
fbstp
loopne
or
add
mov
or
sahf
push
repz
ret
sti
sub
mov
sub
dec
or
adc
clc
out
jge
sti
stos
xor
xchg
sub
push
inc
aam
pop
jl
addr16
sahf
dec
jno
cmp
dec
jae
mulb
or
fcmovnb
push
jno
sub
jecxz
bound
adc
scas
inc
ret
scas
dec
imul
push
outsb
xlat
jmp
fldcw
aad
test
sbbl
iret
ret
enter
orb
cmp
or
cmp
jg
test
mov
inc
ss
sub
cmp
ret
xchg
cmpsl
nop
clc
pop
sar
pop
aaa
push
mov
xchg
es
cltd
into
outsb
data16
cmpsb
std
push
and
aaa
inc
jl
lock
pop
pop
xor
push
int3
xor
push
sub
add
jmp
push
xchg
sbb
out
lret
insl
mov
pusha
dec
xor
xchg
pop
aad
call
sub
and
stos
je
xor
xor
hlt
xchg
rclb
test
sbb
mov
les
adc
cltd
adc
addr16
mov
les
cld
xor
xor
cmp
jl
add
ljmp
out
pushf
aad
dec
adc
push
xchg
add
dec
arpl
cmc
scas
xchg
pop
mov
xor
mov
jno
ret
xor
aas
das
pop
xchg
shll
bnd
cmp
jmp
pslld
repz
jo
iret
adc
push
fnstenv
sub
dec
lcall
gs
cmp
lahf
cmpsl
test
das
aad
xor
xor
pushf
jns
mov
and
orb
xchg
mov
push
jecxz
ret
int3
lret
inc
andl
sub
mov
das
idivl
das
jl
out
lret
jg
clc
out
sub
loop
xchg
xor
and
ss
xchg
into
mov
push
ds
mov
cmp
add
add
cmp
push
fmull
mov
clc
or
push
sbb
mov
push
fs
mov
movsl
cli
jg
test
std
or
in
js
cmpsb
loop
pop
push
fsts
mov
sbb
outsl
out
mov
or
and
arpl
xor
dec
push
ret
sarb
mov
lds
outsl
ja
and
cmc
rcrb
stc
iret
jecxz
xchg
xor
out
fsubrp
fdivp
push
jmp
and
popf
sub
arpl
sub
stc
xor
lods
fcomi
or
std
pop
gs
pop
mov
or
mov
xchg
inc
rcrb
fisubl
lcall
insl
add
loope
cmp
lcall
inc
fnstsw
jecxz
mov
sahf
pop
rclb
add
xor
dec
in
mov
xchg
imul
jo
cli
clc
pslld
xor
mov
or
add
fwait
jge
adc
movsb
xor
scas
and
arpl
fidivs
add
add
hlt
mov
movsl
ss
and
inc
outsl
aad
adc
pushf
iret
mov
adc
mov
mov
adc
xchg
pop
stc
mov
jno
jl
sub
or
xlat
aad
mov
aas
out
mov
mov
clc
jae
ret
testl
idiv
lods
rcll
ds
mov
mov
sub
mov
aas
clc
rorb
pop
mov
outsb
jle
mov
xor
mov
push
mov
cwtl
in
jp
outsl
test
mov
push
popa
cwtl
or
out
adc
out
sahf
mov
out
jl
dec
movsl
xor
inc
push
adc
es
inc
adc
add
imul
jge
call
fcmovnu
sub
or
lock
mov
or
cs
shl
pop
jge
jnp
pop
mov
and
mov
adc
pusha
inc
rcl
in
scas
xchg
sub
clc
adc
push
pusha
mov
jecxz
jae
and
and
sarl
mov
ret
stos
setns
mov
adc
outsl
adc
orb
sbb
xchg
xor
enter
and
sbb
repnz
and
mov
jns
jno
test
push
fmuls
test
cli
lahf
lahf
pop
push
andl
mov
repz
call
mov
push
inc
sahf
sub
enter
mov
pushf
mov
sub
mov
scas
ljmp
out
inc
sbb
icebp
xor
xchg
cmp
adc
fwait
sub
out
dec
jmp
mov
push
fistpll
aaa
iret
sub
and
ja
mov
and
mov
jp
sti
lret
xchg
pop
addl
sbb
adc
cld
xchg
scas
sbb
xlat
inc
mov
jge
lea
dec
js
ja
je
dec
movsl
jmp
jp
sbb
into
jnp
loop
mov
mov
mov
std
push
pop
out
adc
sub
mov
push
sub
outsb
ds
sbb
fwait
dec
mov
jmp
xor
cmp
adcl
cs
sub
mov
clc
push
cmp
inc
leave
mov
test
iret
xchg
dec
pop
lock
test
inc
sub
xchg
fisttps
ds
push
push
xor
shll
push
sbb
pop
sbb
popa
bound
je
repnz
repnz
or
fcomip
bnd
stc
or
xchg
pop
jbe
xor
push
cmpsl
stos
fisubl
jns
jmp
sbb
sub
loope
xchg
pusha
les
and
cmc
sbb
inc
inc
push
mov
test
popa
xor
test
push
fsubs
cmp
mov
pop
pop
mov
jg
xchg
loope
hlt
sub
sub
enter
mov
pop
sub
jecxz
ret
or
push
int3
out
ja
and
fs
xorb
fildl
into
iret
push
leave
sub
orl
or
mov
lods
in
jae
mov
std
mov
subl
sbb
mov
inc
xor
insl
lret
inc
xchg
lock
jge
das
push
dec
das
fs
mov
gs
pop
lock
lock
emms
aas
sbb
repnz
pop
push
stos
xchg
xchg
adc
aaa
hlt
je
je
dec
adc
jb
fcomps
insl
and
mov
sahf
pop
fdivrs
xchg
inc
push
pushf
or
add
lods
and
lds
in
out
jns
xchg
pop
xchg
mov
insl
or
jge
rcll
pop
mov
dec
stos
loope
aas
add
mov
and
ret
adc
adc
aad
movsb
mov
push
dec
and
jg
mov
cmp
aam
mov
fcomip
idivb
loope
cld
push
jns
xlat
add
fistps
emms
pushf
cmp
or
push
add
sub
ss
pop
mov
jae
xor
jg
xchg
jmp
sbb
sub
mov
icebp
dec
ds
fs
popa
ret
xchg
rclb
fs
or
cmc
hlt
jns
mov
outsl
push
ret
fwait
es
dec
add
cmp
lret
lods
mov
sub
daa
movsb
xorb
les
repz
xchg
push
icebp
sahf
jb
mov
inc
clc
or
pop
repnz
fimull
jne
lock
in
fs
push
adc
mov
lahf
aam
or
adc
shll
pushf
pop
arpl
push
outsl
ffree
xor
dec
xchg
mov
inc
std
aam
lret
fsubrl
lock
sub
in
loop
xorb
les
and
pop
ret
ss
and
add
stos
cmp
test
xchg
call
cmc
and
pop
inc
daa
mov
ret
and
push
xchg
mov
ja
sub
iret
or
shrb
imull
cmp
mov
enter
add
jns
dec
cli
adc
and
stc
pop
jg
mov
and
and
pop
mov
mov
sub
adcb
jle
ss
std
in
add
mov
bound
xor
outsl
roll
add
sbb
fsub
cs
mov
mov
pop
jmp
cmp
push
or
sbb
dec
mov
decb
mov
cmp
mov
cmpsl
ss
andb
mov
xchg
scas
sbb
aad
pop
fucomp
fildl
popf
rorb
inc
stc
call
xorl
cld
ja
pop
fcmovnb
ds
mov
rorl
outsl
mov
in
shl
movsb
jo
andl
cmc
cmpb
ret
in
repz
in
pop
sub
pop
adc
xor
nop
ret
das
stos
xchg
hlt
jle
gs
mov
outsb
push
sub
andl
add
test
test
clc
cmpb
movnti
dec
loop
push
push
mov
xor
js
sbb
popa
ds
sbb
test
pop
ret
mov
cltd
stc
jno
pop
pop
cmp
lods
adc
add
ss
dec
enter
repnz
sub
rcll
pop
jecxz
js
mov
push
lret
push
jge
mov
loop
dec
or
adc
call
push
push
sbb
jbe
mov
rorl
in
dec
popa
sub
loopne
testb
dec
fwait
xchg
and
mov
push
mov
mov
cmpsb
cmp
ja
pushl
iret
shrl
push
and
fmul
lcall
jae
sub
mov
leave
push
orl
aas
jae
xchg
or
xlat
cmp
hlt
out
jg
daa
in
std
jmp
sub
test
gs
es
or
add
sbb
xchg
push
adc
pop
adc
fmull
or
and
movsb
pop
int3
int3
pop
sbb
and
loope
xchg
fldcw
add
std
cmp
xchg
mov
por
sti
int3
mov
jo
push
fisubrl
shll
aas
pop
mov
cmpsw
xor
push
xchg
in
push
int
popa
pop
mov
shlb
mov
and
aas
aaa
es
mov
push
pusha
and
pop
in
jns
sub
cmovge
inc
mov
push
outsl
popa
dec
cmp
loopne
xchg
adc
andb
dec
fcompl
xchg
mov
mov
mov
lods
jge
dec
pop
pandn
pop
push
xchg
add
adc
lret
xchg
xor
add
sub
test
mov
mov
sbb
dec
scas
lea
fstpt
ja
inc
xchg
mov
cmc
fcom
sub
sub
pop
and
in
xchg
outsl
movsl
adc
pop
jle
iret
dec
movsl
stos
xchg
hlt
jbe
nop
and
pusha
mov
sub
mov
movsl
pop
or
pop
stc
mov
loopne
ret
lds
add
outsb
sub
hlt
push
adcl
leave
dec
mov
cmp
outsb
jo
sbb
cld
sub
sub
push
cmp
xlat
fcom
jnp
pop
pop
dec
stos
jbe
stos
pop
lcall
pusha
inc
dec
sub
mov
test
and
xchg
js
sub
decl
sub
jne
or
mov
movsb
sub
xor
mov
lcall
fs
test
es
ds
lcall
and
ja
xlat
daa
insl
insb
pop
push
insb
std
push
in
ret
mov
mov
iret
into
jmp
cmp
xchg
inc
stc
lea
push
mov
iret
sbb
fbld
dec
cmp
repz
push
pop
push
pop
mov
or
sub
dec
test
fdiv
nop
insl
pop
mov
cli
push
scas
jbe
mov
lahf
lock
and
xor
fwait
lret
lcall
stos
arpl
div
cmp
mov
stos
mov
xchg
adc
sbb
je
in
xchg
repnz
sbb
fistpl
pop
pop
dec
jg
sbb
cmpsl
dec
cmpsl
mov
jg
jg
divb
dec
dec
and
fildl
aam
call
and
inc
push
adc
pop
popa
adc
hlt
lods
jns
in
adc
call
lods
dec
mov
and
dec
aam
or
aam
cmp
sub
push
pop
inc
cwtl
int3
inc
decb
lea
pushf
pop
jb
call
xchg
arpl
ja
call
mov
sbb
lcall
dec
insl
push
xor
push
movsb
pop
and
pop
lea
dec
adc
mov
inc
mov
cmc
push
add
jg
out
in
lcall
insl
fwait
adc
xchg
movsb
js
mov
pop
cmpb
xchg
and
adc
aad
push
dec
pop
mov
insb
ss
shrl
repz
xchg
dec
sub
xorb
xchg
test
xlat
sti
movsb
push
rcrb
sar
mov
or
xchg
scas
xor
fadds
sbbb
stos
idiv
and
or
mov
js
pop
pop
rcrl
and
jo
out
or
cmpsl
cli
mov
je
sub
adc
test
das
mov
jmp
scas
mov
cmp
data16
xlat
iret
push
mov
nop
inc
mov
aam
pop
scas
stos
mov
jb
fistl
into
rcrl
jbe
test
or
pop
imul
push
fdivrl
aaa
xchg
inc
push
imul
add
xchg
flds
lret
sub
jp
xchg
jmp
vpshlb
sbb
mov
mov
pop
mov
adc
inc
cmp
into
cmp
movsl
jo
ljmp
leave
pop
or
test
cwtl
or
jo
mul
stos
fucompp
pusha
xchg
jns
mov
and
jb
adc
jbe
push
movsl
xchg
ss
or
jne
mov
jnp
or
notb
push
dec
nop
mov
out
or
stos
stos
stc
sbb
pop
mov
movsb
lahf
sub
push
mov
mov
sub
xor
xchg
nop
ljmp
imul
orb
addr16
pop
xor
ret
out
and
push
mov
aas
inc
push
or
add
das
outsl
faddl
pop
daa
xchg
adc
out
dec
adc
pop
xchg
sub
pop
enter
aaa
fisttpll
neg
add
pop
adc
in
not
ljmp
ja
fnstsw
arpl
popa
in
repnz
inc
push
cmpsb
mov
add
out
mov
xor
pop
in
xchg
rorb
rorl
nop
xor
stos
int3
jae
call
int3
ret
je
jne
and
pop
or
pop
stos
shrb
int3
adc
out
or
sbb
lods
dec
rcl
js
mov
push
mov
push
xor
xchg
mov
pop
dec
orl
rclb
xchg
movb
mov
filds
daa
sarb
mov
sub
mov
test
jne
stos
lret
clc
pop
add
loopne
add
fstpt
add
pop
loop
cmpsb
push
mov
fimuls
push
sub
int3
sbb
ja
hlt
mov
cmpsb
sar
js
inc
cli
or
push
jb
sbb
xchg
and
dec
pop
out
dec
push
sub
inc
jp
xchg
jns
xchg
adc
mov
jp
sub
mov
negl
out
sbb
jns
sub
jno
outsb
popf
adc
ja
icebp
out
loope
pop
ror
pop
sti
repz
jnp
orl
aaa
mov
lea
js
xchg
lds
mov
add
lods
sbb
in
push
jmp
sbb
fwait
sbb
sbb
lea
test
jecxz
add
test
mov
clc
adc
xchg
pop
ret
xor
dec
loopne
add
cmpsl
loope
cmp
fsubrs
icebp
mov
add
and
mov
adc
notb
jo
pop
fidivrl
push
ljmp
popa
or
fidivs
push
xor
xchg
jne
or
mov
xor
imul
xor
add
jbe
lcall
mov
xchg
inc
popf
test
outsb
dec
sub
xchg
stc
xchg
cmp
in
and
sub
shl
push
cmp
mov
mov
out
icebp
test
mov
scas
ret
dec
and
rol
jne
cs
roll
into
push
popa
add
dec
dec
mov
out
xor
fcmovnbe
or
imul
pop
fiaddl
lret
shlb
lret
jge
div
mov
push
in
jns
add
adc
jmp
aas
test
sub
ror
pushf
scas
pop
inc
cli
cmpl
adc
inc
movsb
fidivl
inc
addr16
xchg
or
repnz
mov
out
jbe
leave
fistpl
iret
cs
in
mov
pop
mov
addr16
sub
push
mov
sbb
imul
pushl
aad
xchg
out
mov
dec
adc
hlt
outsb
test
lret
sbb
dec
pop
sti
stos
lahf
test
push
stc
loope
mov
dec
jo
repz
inc
sti
mov
inc
add
pop
inc
dec
rorb
outsl
sahf
mov
xchg
test
or
mov
rol
jno
cld
cmc
negl
xchg
pusha
scas
pop
out
aad
fidivrl
ljmp
pop
mov
ficoms
xchg
add
xchg
pushf
inc
sbb
push
mov
iret
jae
xchg
push
dec
add
xor
sbb
test
test
xor
or
push
test
rcl
jle
and
jmp
mov
xor
and
mov
mov
mov
pop
and
push
rcr
mov
cmp
movsl
loope
sbb
push
add
sti
enter
mulb
push
add
inc
orb
mov
sti
loopne
dec
and
rolb
les
dec
pop
popf
xchg
int3
lock
cmp
xchg
push
mov
fs
fs
mov
out
and
mov
inc
sbb
int
lods
cltd
pop
iret
dec
test
bound
push
cmpsl
cwtl
in
addb
inc
inc
daa
fmul
pop
fsubp
fadds
sub
inc
mov
cmp
test
dec
xchg
ja
add
popf
xchg
adc
pusha
xor
repz
movsb
test
imul
test
lahf
sarl
and
int
jns,pn
adc
adc
test
cltd
lods
fisttpl
js
leave
fsts
pop
sbb
pop
pop
addr16
mov
and
push
cwtl
leave
ds
out
cld
rcll
stos
int
xor
lahf
mov
push
adcl
sub
pusha
mov
subb
sub
dec
inc
cmp
out
sbb
cld
xor
sbb
enter
fs
push
sbb
adcb
xchg
xchg
js
inc
or
popa
lea
push
inc
dec
aas
movsb
pop
push
je
add
adc
fildl
pop
cli
xchg
dec
testl
popa
jge
sarl
rclb
mov
push
dec
fnstcw
cmp
mov
scas
or
out
test
ret
stos
cmp
enter
sbb
xchg
add
xorb
or
gs
stos
data16
mov
add
jmp
push
sti
test
fdiv
mov
aam
push
xorl
sub
mov
outsb
jno
pop
jmp
pop
mov
xchg
xchg
daa
fs
mov
lret
mov
stos
scas
in
cltd
scas
ret
imulb
sbb
jns
dec
push
test
ret
in
cmpsb
jne
lret
jl
push
sub
inc
pusha
sbb
xor
ds
shlb
sbb
and
popf
imul
xchg
sbb
clc
ret
stos
lods
call
add
dec
pop
dec
mov
in
arpl
jnp
mov
xchg
inc
and
scas
int
call
sbb
daa
jmp
filds
mov
pop
pmuludq
fidivs
mov
or
ret
aaa
cld
and
aam
outsl
leave
dec
fdivs
addl
das
mov
mov
loope
int3
cli
xchg
out
push
outsl
ja
xchg
ljmp
xor
jp
sbb
je
addl
daa
dec
cmp
inc
push
adc
leave
pop
fistpll
or
jno
xchg
jae
fists
xor
leave
lock
insb
repz
arpl
and
mov
jl
mov
dec
jg
jg
in
pop
imul
hlt
andl
fucomi
enter
push
push
je
dec
std
lahf
sarl
push
mov
mov
imul
repz
into
jmp
cmp
outsb
mov
mov
andl
nop
push
movsl
aaa
stc
jo
fsub
out
aad
movsl
in
fistps
push
rorl
shrb
push
add
sbb
sub
add
mov
mov
adc
or
lods
inc
imul
inc
cmp
xchg
stos
test
mov
jno
ja
sub
push
cmp
bound
ret
fwait
cwtl
adc
adc
out
and
jecxz
mov
sub
sbb
xchg
pop
fisttpll
aaa
enter
sub
das
dec
and
mov
cmp
dec
iret
idivl
pop
push
lds
inc
sub
add
or
sub
dec
dec
pop
xchg
push
subb
fstpt
sbb
jmp
sar
sub
xlat
test
jge
mov
and
cmpsl
into
cld
mov
lahf
jmp
iret
jns
movl
pop
data16
push
sahf
cmpsl
xor
cmpsb
lret
pusha
and
pop
or
and
mov
push
cwtl
inc
and
xlat
ret
sbb
cwtl
mov
xor
pmaxub
ss
lods
fsubl
insb
pop
call
sbb
into
jnp
adc
xor
fmull
cld
and
ss
movsl
leave
fneni(8087
loopne
popa
add
jns
aam
or
dec
xorl
mov
mov
imul
lea
out
mov
sub
jnp
pushw
sbb
idivb
shrb
sar
sub
andl
ffreep
arpl
cmp
add
xchg
or
mov
push
xor
jo
es
cwtl
mov
test
inc
loope
int3
stc
bound
arpl
dec
enter
inc
mov
out
mov
or
jns
std
xor
cltd
icebp
daa
sub
xchg
hlt
lret
fs
test
dec
xor
push
and
aad
xor
les
nop
jb
cwtl
test
jae
scas
imul
in
icebp
sbb
xchg
add
out
add
xor
dec
xor
xchg
es
add
mov
sbb
and
and
stc
pop
pop
ret
ficoml
outsl
push
jns
add
pop
jae
dec
test
mov
cmp
sbb
daa
nop
mov
inc
push
sbb
push
xchg
out
fcoms
mov
adc
aaa
adc
sub
lds
fldcw
pop
lret
sahf
pusha
add
mov
cmc
es
adc
sbb
inc
mov
mov
mov
xlat
enter
in
xor
dec
push
inc
jbe
mov
mov
insl
xchg
mov
xchg
push
enter
cmp
push
repnz
inc
lods
mov
push
jae
daa
cs
or
or
jecxz
outsb
add
andb
push
cmp
fdivl
cmp
movsb
fdivrl
int3
sbb
cwtl
sub
jns
inc
push
and
push
jle
xor
stos
mov
jbe
cmp
pusha
ss
fwait
push
lods
adc
test
ljmp
pusha
xchg
lock
out
fs
das
or
sub
adcb
loop
dec
subl
cs
xchg
dec
inc
clc
xchg
mov
mov
jnp
frstor
xor
stos
sbbb
push
test
rolb
das
jb
ja
jmp
pop
xor
pop
ret
jb
mov
aam
fdivl
dec
cmpsb
fnstcw
mov
xchg
mov
jl
aaa
sub
repz
repnz
cli
outsl
sbb
dec
in
inc
cmp
cmp
fcoml
fisttpll
es
cmp
repnz
xchg
xchg
movsb
idivl
seto
addr16
mov
mov
incl
insb
dec
mov
cmp
clc
sub
adc
test
das
and
pushf
push
insb
and
xlat
pop
mov
frstor
inc
push
call
in
xlat
pop
in
loop
shrb
int3
adc
cmp
dec
loope
xor
fists
adc
shlb
jecxz
jp
pop
or
clc
xor
sbb
pushf
jmp
mov
mov
pop
test
mov
pushf
ljmp
bound
fwait
mov
rol
cwtl
inc
mov
xchg
mov
sub
push
xor
and
ret
pushf
xchg
jne
jl
cmp
lods
inc
adc
pop
cmpsb
into
xchg
add
dec
in
in
jg
adc
outsb
in
ja
and
push
pop
andb
pop
pop
sub
pop
sbb
or
adc
jne
push
xchg
add
rcll
scas
fistl
fs
fnstcw
into
iret
dec
sbb
insl
and
stc
movsl
in
insb
in
mov
arpl
enter
inc
leave
popa
cmp
add
mov
push
clc
add
mov
push
pop
test
cmp
xchg
and
into
int
leave
test
push
divl
sbb
cmp
xchg
sti
cmp
mov
in
push
adc
scas
jno
rep
pop
mov
inc
mov
pop
mov
mov
fildll
sub
cltd
inc
adc
cmc
or
in
seto
dec
imul
aam
dec
mov
sti
cli
loop
sbb
out
repz
jmp
cli
mov
and
lcall
imul
push
xlat
les
lcall
xchg
out
dec
and
and
shrl
pop
rol
call
cmp
or
inc
push
stos
pop
mov
xchg
pop
cld
outsl
cld
outsb
js
sub
pop
shl
dec
cld
inc
jbe
sub
add
xchg
mov
xor
mov
ds
jae
repz
mulb
mov
ret
leave
or
xchg
mov
inc
pushf
xor
idivl
add
xchg
mov
push
push
imul
ret
cs
push
mov
jge
in
loope
jno
xchg
jne
cmp
rcrb
roll
stos
mov
fmull
jbe
push
adc
mov
mov
cmp
mov
sti
or
or
xchg
in
gs
pop
pop
inc
cmpsl
fildll
test
push
fildl
mov
jo
fnstcw
lcall
int
dec
js
lahf
pop
cmc
test
stos
jge
push
mov
mov
dec
sub
leave
push
sahf
imul
pop
sbb
ret
xor
in
and
or
push
lcall
push
fnstsw
push
in
push
jne
enter
std
and
fiadds
fcompl
mov
lea
xchg
clc
outsl
push
js
int3
dec
cli
sub
orl
mov
data16
adc
fs
and
dec
mov
mov
int
sbb
mov
scas
cltd
in
mov
add
sarl
dec
bound
mov
cwtl
cmp
jecxz
dec
mov
out
in
dec
push
cmp
bt
out
mov
jns
adc
repnz
sti
jb
jle
adc
stos
dec
inc
data16
test
sbb
or
into
mov
in
mov
aad
xor
xor
xlat
arpl
scas
pop
inc
xchg
stc
xorl
aam
push
fmull
cmc
cs
jg
xchg
ds
add
int3
leave
scas
mov
push
mov
inc
or
xor
les
ret
ja
xor
ja
pop
pop
mov
mov
sub
xor
aam
sti
xchg
rcll
xchg
or
jge
test
lods
out
dec
lods
mov
ljmp
pushf
lea
jo
movsl
xchg
and
lret
rcl
out
push
loopne
mov
inc
sbb
cmc
bound
js
push
insl
repz
in
ret
pop
mov
mov
repz
stos
ljmp
call
clc
insb
adc
or
add
faddl
fnsave
and
add
std
mov
lret
out
or
dec
or
es
add
pusha
aas
roll
out
jae
data16
enter
fbld
mov
lock
inc
jo
ljmp
cld
mov
loop
mov
ret
add
cltd
jmp
sub
mov
jne
stos
cmp
sub
xor
cmpsb
cmc
push
push
cmpsb
subl
stos
sbb
mov
or
mov
test
ret
mov
inc
adc
es
enter
out
repnz
rclb
jp
mov
in
or
sbb
addr16
aas
mov
mov
aad
and
fnsave
fbstp
jle
cmp
xor
push
mov
xchg
and
mov
setno
xor
push
jbe
mov
add
lds
xchg
jo
dec
inc
push
fcoml
sub
cmp
push
aad
sbb
lds
fcom
pop
cmp
pop
fwait
sbb
sbb
jle
fcmove
add
bound
and
rolb
fdivr
ficoml
lahf
xor
arpl
repz
pop
sub
call
mov
jmp
jne
jle
push
jne
shll
lret
shrl
xchg
xorb
xorl
sub
push
add
cltd
add
int
int
mov
divb
jbe
inc
or
dec
inc
lret
inc
popa
pop
and
insl
mov
push
xor
add
sbb
mov
push
mov
inc
cs
sbb
jg
and
sahf
leave
mov
xlat
aam
adc
test
xchg
or
add
jle
push
inc
data16
xchg
xchg
mov
push
in
aaa
nop
mov
in
push
jae
pop
ror
push
decb
test
mov
aas
adc
mov
test
xchg
jbe
or
add
icebp
push
dec
imul
mov
fs
pop
je
mov
imul
ror
cmp
mov
pusha
xchg
dec
inc
int
scas
cld
dec
adc
daa
dec
ljmp
jecxz
cmp
mov
and
insl
pop
movsb
rclb
dec
ret
sbb
or
mov
sahf
push
pop
in
lret
rcll
cltd
dec
nop
rcl
cmp
jbe
rorb
orb
mov
mov
sbb
lods
fldt
and
fstl
aam
pop
dec
xchg
rcll
xor
xor
inc
pop
imul
pop
or
out
sbb
repz
and
sub
jae
out
mov
mov
dec
cmp
inc
out
sarl
test
jbe
jl
xchg
stc
fadd
adc
cmpsb
in
lahf
dec
xor
mov
adc
leave
inc
or
xchg
lea
popa
roll
pop
push
push
adc
out
hlt
adc
mov
xor
aaa
xchg
xchg
cmp
fadd
jmp
pop
ret
add
push
dec
subl
pusha
add
mov
lcall
xchg
out
popa
add
adc
cs
rcrl
enter
xor
test
pop
push
dec
mov
pop
ds
and
cmp
mov
push
add
xlat
pop
mov
lahf
sti
mov
xchg
xor
jno
sbb
add
fcoml
stc
mul
mov
sbb
xor
xchg
pop
insb
in
out
mov
je
adc
pop
mov
mov
sbb
cmc
nop
pop
rcrb
scas
sbb
roll
test
mov
mov
scas
rorl
or
inc
cltd
clc
pushf
sbb
push
scas
dec
dec
inc
hlt
jecxz
fwait
lea
out
mov
in
jmp
xchg
jo
xchg
scas
push
lock
cmp
inc
fisttpl
fisttpll
mov
stos
mov
mov
arpl
aam
and
repnz
fsubrs
outsb
aas
dec
xchg
mov
xchg
jo
daa
mov
mov
xchg
push
lcall
cmp
jl
jbe
adc
mov
xchg
push
pop
ljmp
push
jle
xchg
rcl
clc
rcr
sub
mov
adc
test
sbb
addr16
and
in
adc
jg
and
mov
repz
xor
xchg
mov
fldt
ds
icebp
insl
xor
call
jbe
jge
sub
lods
and
inc
xor
dec
lret
pop
lahf
and
dec
push
out
mov
cmpsl
jb
sub
sbb
cwtl
jo
mov
arpl
jo
inc
mov
hlt
scas
jnp
je
inc
lret
and
and
mov
pop
and
dec
cmp
clc
mov
adc
inc
xchg
xchg
fs
dec
jne
mov
into
pop
in
sbb
xor
mov
push
and
jl
dec
cltd
pop
fldt
gs
mov
mov
push
aaa
imul
add
movsl
push
lret
sub
nop
test
push
cld
notb
push
addl
pop
add
and
push
out
cmp
dec
push
mov
mov
sahf
js
push
mov
gs
cmp
ret
pushf
ss
lods
cltd
ja
gs
repnz
dec
inc
push
mov
mov
push
mov
xchg
mov
mov
scas
pop
pop
lcall
inc
sbbb
ja
icebp
lcall
sub
jge
push
xchg
int3
inc
in
lods
ret
ds
or
into
shl
cs
pop
and
sbb
adc
dec
sbb
mov
or
mov
fcmove
jbe
or
mov
sbbb
pop
das
clc
lods
enter
mov
jbe
xchg
xor
outsl
outsb
mov
mov
mov
xchg
xor
bound
ljmp
sti
jo
stos
jbe
ss
les
ljmp
iret
or
sub
xor
and
bound
outsl
add
cwtl
mov
fistpl
outsb
mov
and
pop
xchg
push
pop
sub
in
cmpsl
loopne
jmp
ret
mov
popl
pop
xchg
sarl
shrb
adc
xchg
fisttpll
add
pop
call
mov
lret
mov
mov
rorb
xchg
adc
jge
ds
scas
push
mov
mov
pop
outsl
fldcw
roll
out
cmc
sub
fdecstp
shl
push
ret
cmp
sbb
mov
adc
mov
jl
mov
jmp
addl
jb
pop
dec
ja
mov
les
gs
and
and
movsl
xchg
lds
push
roll
in
movsb
movsb
inc
xchg
inc
loopne
mov
or
xchg
xor
mov
ret
ljmp
fimuls
sbb
comiss
adc
and
pop
rcl
cmp
mov
icebp
add
lahf
nop
lock
push
add
dec
test
dec
xor
into
push
scas
sti
pop
loopne
push
leave
adcb
mov
loopne
sbb
xor
jae
pushf
dec
ss
fldcw
sbb
sarl
idivb
lods
scas
addr16
mov
mov
jbe
mov
push
pop
jns
leave
cmpsl
mov
popa
incb
stc
and
fmulp
cli
arpl
pop
sub
mov
fs
sbb
cmp
daa
lds
xor
aas
cmp
mov
cmp
adc
adc
adc
fldcw
ficomps
sub
rclb
add
test
lods
jbe
into
mov
sub
cmp
adc
pop
pop
and
push
in
sahf
push
es
in
jle
xrelease
fadds
loopne
in
int3
es
adcl
adc
pop
dec
subl
div
out
mov
dec
aas
ret
test
push
sub
pop
sub
sbb
jo
xchg
pop
movl
loopne
adc
or
add
sti
or
stos
dec
add
mov
mov
das
daa
ljmp
push
xchg
fcmovne
jae
or
xchg
mov
aas
iret
test
jns
pop
sub
call
inc
pushf
subl
jno
mov
sbb
notl
call
aaa
cwtl
mov
add
adc
or
xchg
cmpsb
add
ljmp
outsb
aaa
in
inc
pop
stc
cltd
nop
fs
adc
call
fistps
push
stos
mov
aam
cmp
dec
jno
jns
lods
and
and
testb
mov
pop
movsb
and
push
in
xor
pop
lea
xchg
or
adc
inc
add
pop
push
mov
ficoml
sahf
stos
imul
sahf
aaa
jbe
mov
popf
lret
inc
push
pop
push
sbb
lods
leave
or
sahf
out
cmc
movsl
jmp
and
leave
and
rol
mov
mov
mov
xchg
movsl
stos
and
out
mov
xor
sub
pusha
ds
mov
cmp
lds
mov
jmp
dec
cmp
fs
adc
sbb
jl
popf
dec
cli
outsb
mov
add
xchg
jle
aad
pushf
cltd
arpl
jge
shlb
inc
mov
xor
adc
sub
cmp
pop
ret
int3
lea
arpl
xchg
divl
push
sub
mov
sbb
frstor
ja
lret
jno
iret
in
fistl
or
sbb
mov
xor
xlat
add
sbb
sbb
jae
int
iret
stos
fs
or
je
sbb
dec
pop
and
aam
das
ret
scas
mov
mov
daa
or
and
in
jg
int3
pop
movsl
add
sbb
aaa
jae
sbbb
out
cltd
and
fcompl
push
lock
cmpsl
out
cwtl
pop
adc
in
push
in
imul
and
popf
sub
sub
xchg
aad
pcmpeqw
mov
je
cmp
xlat
and
fmuls
inc
pop
xor
jp
in
push
decl
jnp
push
hlt
iret
jo
cmp
test
jns
inc
dec
fdivrs
ret
insl
mov
lcall
mov
pop
cmp
fiadds
divl
rorb
ret
dec
mov
dec
push
fldenv
mov
sbb
xor
cld
cs
roll
js
or
sti
div
sub
sub
xorps
rol
push
in
enter
addb
or
and
mov
xchg
int
pop
dec
movsl
push
pusha
daa
fistpll
aad
pop
out
mov
cwtl
and
nop
adc
jmp
fsts
jb
test
aad
cmp
add
dec
cmp
outsb
sbb
out
outsl
iret
pop
aam
movsb
adcl
xchg
fidivrs
mov
pop
mov
sub
pop
xchg
pusha
std
daa
xchg
lods
jp
jmp
icebp
adc
enter
sti
data16
sbb
push
xor
mov
cwtl
jo
stc
adc
fstp
incl
inc
out
loop
sarb
outsb
sahf
inc
jg
push
lds
push
aaa
lods
sub
push
lds
xchg
xor
fbstp
pop
lret
push
jns
mov
mov
loop
out
icebp
outsl
add
xchg
sub
cmp
out
decb
shlb
xor
jbe
dec
mov
pop
test
and
js
loopne
push
jno
push
test
mov
repz
lods
adc
scas
and
adc
adc
repnz
ret
repnz
andl
or
int3
insb
sub
push
std
jns
fwait
xchg
mov
fmulp
sbb
push
and
stos
je
push
add
cltd
outsl
and
stos
pop
xchg
mov
cmp
xchg
pop
xor
test
cwtl
inc
nop
cli
mov
adc
mov
inc
and
sbb
ljmp
imul
adc
sub
inc
fildll
aad
mov
iret
jns
or
mov
ret
repz
mov
jge
aas
cld
xor
into
pop
xchg
or
jbe
clc
insl
push
mov
and
icebp
stos
aaa
out
rcr
daa
add
sbb
sub
fisubs
pop
and
into
testb
addr16
bound
ja
push
inc
xlat
and
push
jge
cmpsb
into
mul
out
push
jmp
lahf
imul
inc
bound
jne
or
stos
sub
mov
faddp
mov
or
xchg
dec
arpl
mov
cmp
jmp
mov
loop
xchg
mov
mov
fiaddl
lds
fdivl
test
sbb
aas
adc
cwtl
gs
cmp
add
ljmp
jb
jno
loopne
aas
dec
mov
sbb
pop
adc
sarl
cmc
and
ret
orl
jbe
aad
loop
pop
mov
push
sub
jns
fcompl
lea
xchg
stos
out
and
scas
ja
and
jl
push
pop
push
icebp
test
stos
popf
int3
divb
daa
xchg
push
or
cmpsb
inc
or
test
cmp
out
inc
sbb
jno
pop
inc
push
mov
fwait
jg
and
fcomps
or
xor
hlt
sahf
dec
jmp
jle
popf
dec
mov
or
and
push
cmp
jae
rcrl
adc
lods
pop
push
xor
cltd
push
pop
mov
aas
lcall
push
sahf
stc
xchg
jnp
arpl
push
mov
sub
fstpl
cwtl
jb
les
pop
jmp
notb
push
cmc
fnstenv
or
rclb
std
outsl
or
sar
sub
lahf
mov
sub
ficoms
pop
inc
push
dec
hlt
mov
sti
pop
lcall
xor
out
inc
fcomip
in
inc
mov
add
adcl
aad
xchg
fdivl
subb
lea
negb
sti
shll
in
jmp
mov
jle
and
jecxz
inc
rcrb
or
jg
push
aas
cmp
movsl
push
loope
int3
es
bound
xchg
leave
in
inc
mov
addl
inc
jo
and
shrb
add
rclb
sub
mov
fwait
jecxz
test
xchg
adc
scas
dec
sti
bsr
repz
imul
shll
sbbl
xchg
rorl
inc
mov
outsb
cmpsb
jmp
out
int
push
aaa
fstpt
cmp
jp
outsl
or
movsl
dec
pop
xchg
mov
out
repz
les
mov
pop
lods
cmc
aaa
pop
movl
inc
cmpsb
and
push
enter
enter
mov
sbb
adc
jo
mov
mov
cltd
dec
in
fs
fiaddl
ret
push
sarl
adc
adc
xlat
inc
inc
loope
sbb
pushf
imul
mov
sbb
enter
fidivrl
aas
mov
and
and
dec
and
aas
pop
xor
inc
push
aas
adc
imul
sub
jecxz
mov
cwtl
xchg
data16
xor
sbb
and
sti
pop
in
mov
inc
xchg
xchg
add
push
xlat
ja
dec
xchg
push
jb
and
lcall
jg
xchg
or
lods
or
dec
xchg
lds
xor
ret
sbb
imul
cli
fistpl
sbb
sbb
or
popa
popa
popf
sbb
aas
clc
insl
repz
add
push
mov
fstl
das
push
adc
cs
popf
mov
or
cmc
mov
push
sub
cwtl
jge
fcmovu
mov
inc
xchg
mov
scas
aas
inc
pusha
lret
xchg
jnp
xor
xchg
shl
ret
scas
movsb
and
test
imul
adc
pop
mov
out
sbb
jne
lock
or
sub
test
and
sub
jnp
adc
shlb
fstl
push
inc
mov
gs
sub
ret
ret
shlb
and
pop
cli
or
dec
xor
testb
stos
scas
arpl
push
les
mov
mov
cld
pop
aad
or
js
or
filds
mov
cwtl
stc
gs
cmp
dec
jnp
cld
mov
jbe
iret
xchg
stos
cmp
aaa
mov
fnstenv
addr16
jno
add
pop
aam
cmc
incb
popf
xchg
inc
jae
and
add
fimull
lahf
dec
sub
inc
and
xorl
icebp
sub
dec
lock
jns
xchg
add
daa
clc
xlat
dec
cmp
ficompl
or
aaa
xchg
fs
imul
push
repnz
sbb
outsl
add
jne
nop
pop
fadd
inc
push
les
fnstsw
dec
rol
in
daa
stos
loop
aas
loope
xor
adc
sub
cmc
adcl
cld
pusha
das
lahf
mov
sub
loopne
or
movsb
stc
pop
cli
ret
push
cmp
dec
lret
adc
repnz
xchg
pop
out
ror
jno
jne
das
test
leave
xor
jb
in
test
vmread
pop
cs
push
mov
jl
mov
mov
or
ret
iret
add
mov
and
out
mov
cmpsb
aad
cmp
mov
jne
inc
ret
sbb
push
shlb
mov
stos
adc
jge
ror
add
cmpsb
ljmp
lret
pop
adc
sahf
hlt
and
sub
inc
pop
and
xchg
cld
shrb
xor
test
lock
in
push
push
in
sahf
test
add
pop
jg
mov
fcomps
push
inc
cltd
in
sbb
mov
adc
push
cld
mov
mov
add
dec
ljmp
inc
cltd
shll
pop
loopne
es
xlat
mov
mov
push
ret
sub
fsubl
ljmp
inc
push
mov
in
das
xlat
cmp
orb
clc
fldt
bound
inc
and
nop
fidivl
xor
cltd
xchg
fcompl
push
pushl
fldcw
sbb
movaps
insl
es
or
loop
lahf
aad
das
iret
cmp
aaa
add
aad
push
int3
mov
push
ljmp
or
shr
push
push
pop
push
adc
xchg
pop
dec
sbbl
xor
sub
mov
and
daa
jg
dec
lret
cs
ds
movsl
or
jle
xchg
mov
jb
sub
xchg
ds
daa
mov
mov
pop
mov
dec
mov
cli
pop
js
adc
andl
fisubl
lret
stc
fldcw
push
sbb
or
ret
hlt
lea
pop
mov
add
std
jno
fstps
jecxz
lods
add
dec
push
clc
js
xchg
ja
into
shlb
pop
mov
dec
xor
fnstsw
fnsave
pop
shl
loop
sbb
bound
or
xor
imul
loope
rcrl
dec
jp
pop
mov
mov
cmp
test
fdivrl
icebp
and
inc
or
mov
cmpb
lahf
mov
mov
popf
cmp
addr16
fcmovnb
xchg
jmp
mov
mov
pop
bound
pop
pop
andb
mov
mov
aaa
pop
or
subb
dec
lock
add
sub
pop
mov
ja
sub
shll
test
dec
daa
adc
out
pop
adc
cmc
cmp
mov
pusha
bound
cmp
ja
adc
sub
mov
int3
jmp
insb
lea
add
mov
inc
push
out
inc
lcall
cmp
pop
test
push
cmp
out
in
xlat
adc
dec
dec
out
mov
shr
repnz
dec
mov
rorl
addb
shrb
cmpsl
into
inc
cmp
test
cld
bswap
push
loopne
inc
jp
aaa
xchg
sub
dec
iret
mov
ja
push
inc
mov
pop
imul
sub
test
aam
sub
xor
sbb
repnz
mov
shlb
loopne
mov
sbb
icebp
inc
add
adc
mov
cltd
jle
ss
inc
fisubrl
or
insb
outsb
pop
nop
and
mov
inc
xor
xor
fistl
mov
lds
sub
add
xorb
pop
inc
sub
xlat
mov
or
cmpsl
push
add
sub
mov
and
leave
sbb
repnz
cli
rcrl
pop
aad
mov
jo
mov
adc
push
aaa
loope
push
fucom
fsubrp
push
push
cmc
adcb
fcom
ja
jmp
nop
dec
or
inc
lea
jne
jmp
cltd
not
dec
xchg
mov
mov
test
cmp
cmp
das
fs
popa
sahf
fimull
xor
out
sarl
out
mov
push
sbb
sarb
cmc
xchg
dec
xchg
xchg
daa
les
mov
or
add
imul
jne
jge
pop
cltd
and
pop
aam
xchg
out
push
or
int
loope
mov
scas
hlt
ret
pop
sub
nop
cmp
icebp
sbb
add
xchg
jno
inc
adcl
ja
xor
push
and
in
and
ds
adc
mov
repz
into
test
pop
rcl
sbb
jbe
and
test
pop
subl
addr16
rol
inc
int
mov
leave
sbb
js,pn
cld
and
pop
xor
jbe
call
add
push
or
inc
pop
cli
and
mov
fisubrl
pop
outsl
push
icebp
xchg
inc
ljmp
fstps
add
cmp
clc
inc
mov
dec
mov
das
movsb
sbb
jge
xor
xchg
xchg
add
jle
jns
mov
pop
jbe
dec
lahf
jl
adc
in
pusha
js
dec
divl
push
shll
or
nop
das
mov
bound
pop
mov
adc
pop
aaa
pop
fnstenv
cmp
and
rolb
call
cmp
inc
in
test
shl
fidivrl
mov
ja
jb
jb
insb
loopne
cmp
sub
ret
xor
or
push
aaa
mov
lods
cs
adc
sub
xchg
sub
xchg
dec
dec
data16
and
cmp
mov
je
inc
mov
and
cmp
iret
mov
test
and
add
int3
or
sahf
xlat
es
ljmp
aas
addr16
out
push
andb
jmp
dec
bound
inc
xchg
mov
pop
imul
dec
xor
adc
rcl
xchg
popa
mov
rorl
pop
add
pop
jle
cmpsl
sub
stos
jb
xor
jmp
je
cmpsl
and
in
das
int3
mov
fs
or
jne
je
fsubrp
fcmovnu
mov
popa
pop
adc
cmp
sahf
stc
adc
push
sbb
insb
push
in
push
out
sub
sbb
rcll
xor
imul
stc
jmp
add
inc
jmp
xchg
addr16
cld
ds
daa
shrl
call
iret
shlb
inc
push
adc
pop
mov
push
adc
push
lcall
mov
add
xchg
addr16
enter
jo
idivl
jle
adc
or
loop
jmp
imul
xchg
dec
arpl
sbb
js
rol
cmc
mov
rcr
sahf
out
cwtl
mov
ficomps
outsl
mov
sub
shlb
push
xchg
loop
ja
ja
enter
push
dec
loop
xor
xor
inc
lea
insl
sub
jp
push
adc
push
cwtl
in
insb
and
rcll
xchg
xlat
call
cmp
clc
bound
in
mov
fwait
push
cmpsb
mov
or
fcmovbe
push
mov
mov
pop
les
andb
stos
lods
mov
inc
or
push
pop
cwtl
add
test
inc
cmp
test
xor
into
cmp
ds
and
push
and
cmp
push
lcall
movsl
fcmovb
xor
cmp
cltd
push
mov
xor
xor
std
fstpt
xchg
pusha
push
and
inc
jb
push
add
cmp
pop
imul
sbbb
inc
xor
inc
mov
jbe
sahf
or
out
ret
leave
movsb
cld
sub
cld
inc
jmp
addr16
mov
cmp
je
cmpsw
push
xor
inc
or
mov
cwtl
test
push
je
sub
jge
sbb
jp
imul
inc
bound
pop
test
mov
xchg
xchg
adc
cwtl
daa
xchg
mov
jb
loop
sbb
adc
mov
ja
pop
fmulp
xchg
lcall
sahf
xchg
cwtl
mov
jnp
lret
push
jno
out
int
scas
xorb
dec
mov
out
fwait
lret
imul
mov
loope
iret
scas
dec
jo
pop
add
pop
xchg
mov
in
or
imul
subl
jp
clc
inc
lds
jmp
aaa
inc
mov
inc
popf
rorl
pop
xchg
cmp
sub
shl
jne
xchg
jp
out
push
cmpsb
stos
fcomip
jecxz
mov
pop
and
dec
cmpsb
xor
cmc
fmull
mov
insl
insl
aaa
test
outsb
mov
out
leave
pop
cmpsl
mov
push
scas
scas
adc
cmpsl
cmp
out
ss
popf
dec
lret
cmp
scas
loopne
pop
push
dec
test
fdivrp
adc
xchg
xor
fwait
push
push
mov
jl
bound
daa
push
or
xchg
sbb
je
cmp
jae
lds
jnp
add
push
push
lods
fidivrs
dec
push
adc
add
mov
and
jmp
mov
mov
pop
lds
cwtl
jp
std
xor
sub
sbb
xor
or
push
or
imul
out
fstps
adc
sti
loop
imul
andl
mov
xchg
pop
cld
leave
and
adcb
ja
dec
xchg
pop
in
std
ret
ret
repz
ds
sbb
sub
stos
mov
jecxz
stc
cmp
push
int
push
jne
insb
and
jbe
cwtl
push
xor
mov
pop
test
mov
inc
mov
mov
xchg
bound
bound
pop
and
fcomi
mov
inc
sub
jle
push
pushf
in
push
push
cmpsl
inc
mov
scas
mov
mov
ficoml
imul
inc
mov
icebp
cmc
push
sub
push
adc
dec
subl
sbb
lods
inc
push
push
xchg
xchg
jmp
std
inc
fisttpl
rcll
pop
dec
inc
outsl
outsb
push
jo
divl
cld
xchg
pop
std
in
cmp
ja
popl
dec
push
and
js
jbe
stos
ret
push
shll
adc
int
scas
xlat
dec
fisubrl
les
dec
pop
adc
scas
pop
jecxz
std
and
add
out
add
addr16
inc
in
repz
test
push
fisubrs
jg
cmpsl
mov
xor
fbstp
lods
fs
mov
xor
mov
mov
or
adc
test
gs
sub
xor
loop
lcall
jb
ja,pt
xchg
into
daa
bound
mov
ror
mov
cmp
popf
out
vpmulhuw
sub
jge
sub
outsb
pop
pop
movsb
std
pusha
add
mov
test
jno
sarb
outsb
dec
shlb
inc
repnz
insb
lea
gs
jo
xchg
pushf
dec
mov
loop
shlb
in
xchg
adc
inc
lret
lock
mov
dec
pop
sbb
pushf
dec
jmp
sbbl
xchg
push
divl
enter
xchg
subb
sub
xlat
and
add
daa
xchg
and
out
cmpsl
orb
pop
fwait
sub
or
lret
bound
pop
sbb
xor
inc
movsl
adc
shrb
xchg
push
cmp
ja
mov
cmp
add
or
rorl
fwait
popf
out
cmp
adc
mov
ja
iret
push
lret
insb
out
popf
or
bound
and
adc
bnd
cs
enter
push
stos
xorb
test
inc
out
into
fwait
int3
outsb
inc
test
jnp
pop
xchg
inc
sti
inc
adc
test
jno
mov
dec
mov
dec
xchg
jmp
mov
nop
inc
fildl
mov
push
pop
xchg
in
jecxz
pop
imul
or
fs
push
sub
inc
jp
pop
shll
sbb
call
jo
ficomps
or
mov
cmp
fwait
int
xchg
xchg
mov
gs
stc
ds
and
out
adc
push
mov
orb
pop
pop
mov
ds
push
cld
hlt
sar
cmp
int
iret
popa
inc
clc
cmpsb
add
cmp
dec
cmp
sbb
sub
mov
into
jmp
mov
bound
rcr
adc
dec
rcr
aam
repz
mov
dec
ret
jmp
sub
enter
dec
dec
lret
popf
mov
dec
mov
mov
mov
and
jle
je
jp
cs
sub
frstor
xor
je
outsb
sub
add
rcll
mov
outsl
mov
jns
addb
outsb
xchg
in
pop
dec
push
es
jmp
mov
mov
out
adc
pop
pop
mov
sahf
js
mov
add
xchg
aam
add
iret
push
movsb
or
lock
jmp
sbb
cwtl
sub
popa
mov
popf
loope
jecxz
xor
lods
pop
out
icebp
dec
lds
fsubr
je
lcall
es
es
adc
roll
fisubs
xlat
xchg
aas
or
sbb
sbb
popa
mov
cmpsb
lea
add
aas
addr16
lock
push
add
push
mov
rorl
and
inc
mov
dec
inc
loop
int
add
gs
in
sbb
lcall
call
jmp
lret
fisubrl
jno
clc
cmpsl
nop
test
sub
notl
mov
outsl
imul
fbld
push
xchg
dec
ret
cwtl
jle
mov
push
inc
cmpsb
fcomi
pop
out
adc
sbb
sub
add
aad
daa
or
inc
mov
cmp
outsl
loope
insl
lds
lods
xchg
cmp
push
jg
divl
mov
mov
lods
test
loop
ss
add
les
and
sbb
mov
cmp
cmpb
mov
mov
cmp
push
in
cmpsb
add
jne
cmpsb
lds
mov
push
or
jb
add
jecxz
fidivl
jecxz
in
sbbb
mov
arpl
adc
cmpsl
insb
and
inc
neg
aas
xor
and
sahf
testl
dec
jmp
adc
rcll
in
adc
add
sbb
sub
mov
movsb
push
dec
cwtl
mov
adc
xchg
jmp
pushf
cs
repnz
mov
lods
int
or
xchg
fsubp
pop
xor
sub
aam
pop
mov
mov
inc
add
pop
cmp
fdivrl
divb
adc
lcall
pop
scas
sbb
jbe
xor
nop
xorl
mov
jle
adcl
std
dec
sbb
push
negl
sbb
sub
out
stos
int3
inc
inc
push
or
pop
fwait
cmc
jmp
pusha
scas
fildl
xor
gs
lods
ljmp
mov
pop
mov
dec
lret
imul
mov
push
and
mov
jl
sbb
jns
fsts
jne
mov
aad
std
add
xor
adcb
arpl
adc
popf
jne
loope
loop
leave
pop
cmp
dec
in
push
addr16
xor
je
jno
addr16
mov
neg
shr
jg
mov
mov
sub
idivl
and
pop
cltd
imul
ror
in
in
push
movsb
xchg
dec
subb
xchg
testb
adc
or
pop
xor
push
cli
mov
sbb
push
add
and
loope
jecxz
hlt
jns
ljmp
loop
push
xchg
scas
cmp
ret
cmp
int3
sbb
mov
jmp
nop
arpl
icebp
push
int
or
xor
fcoms
dec
stos
ss
pop
cwtl
loop
mov
test
pop
lods
in
repnz
stos
xchg
jg
aam
in
add
adc
in
leave
cmp
cmp
in
cmp
int
push
sahf
outsl
icebp
jmp
inc
jbe
sub
int3
xor
cmp
push
pop
lock
xor
inc
std
and
xor
repz
aam
push
sbb
xor
or
jmp
into
jne
sub
fidivl
push
iret
call
xor
jp
out
xchg
dec
lahf
std
jmp
in
add
mov
mov
inc
mov
inc
mov
cs
jmp
jecxz
in
mov
hlt
lahf
stos
je
fwait
xchg
push
paddusw
cmp
decl
insb
adc
pop
ret
test
in
push
adcl
mov
add
fwait
adc
cltd
push
or
in
aaa
int
insb
out
mov
mov
pusha
or
cmc
cmc
xor
lds
lret
addr16
sub
cld
cmp
add
pop
loop
xor
ds
or
loop
sahf
lods
gs
xchg
enter
pop
dec
xor
and
adc
xchg
gs
pop
imul
popf
les
sbb
ljmp
pop
dec
imul
cmp
cwtl
inc
ss
inc
inc
jl
call
gs
xchg
fiadds
sub
jbe
mov
mov
fneni(8087
cmp
sub
js
dec
test
mov
fsubs
cmpsl
jl
mov
scas
cmp
fstl
mov
jbe
popa
lods
fists
pop
mov
inc
fwait
stos
lods
out
xor
or
add
das
cld
mov
jmp
mov
xchg
daa
adc
mov
and
lahf
xchg
jne
fbld
add
xor
es
push
add
shrb
das
add
pop
mov
stc
pop
loop
or
sub
or
dec
aas
outsb
loop
sbb
cmp
inc
and
inc
js
mov
adc
jno
outsl
iret
iret
xchg
hlt
es
lret
push
mov
and
xchg
mov
xor
sub
xor
xchg
roll
scas
and
xor
jle
mov
push
sub
lcall
faddl
dec
ss
mov
xor
push
add
inc
das
add
and
in
xlat
call
lock
sbb
add
es
pop
mov
inc
add
inc
cmp
mov
lods
inc
scas
out
mov
in
cmp
xchg
imul
pop
xchg
or
insl
add
gs
lahf
xchg
or
outsb
or
adc
orb
aas
ljmp
push
ret
push
call
fsubr
push
sub
add
and
shlb
jne
add
jne
mov
cmc
and
test
dec
or
or
loop
and
leave
insb
mov
test
mov
lds
or
mov
ja
filds
cmp
and
sahf
adc
jns
mov
insb
push
cmp
fisttpll
std
push
ds
jae
dec
and
mov
scas
test
popf
pop
dec
add
in
sbb
add
pop
lcall
sarb
sbb
cmp
jb
dec
enter
lds
call
mov
mov
std
push
push
insl
scas
mov
push
test
out
pop
jno
push
adc
pop
jo
mov
jno
sbbl
pop
das
std
popa
mov
mov
cs
pop
les
out
imul
dec
push
fcoml
push
into
fimull
and
cmp
cmp
jbe
pusha
and
out
jb
mov
mov
pop
xchg
inc
sbb
shlb
ds
mov
or
test
pop
jbe
lock
jo
mov
push
sub
push
adc
add
adc
pop
dec
test
push
test
jmp
dec
dec
pop
cli
out
out
mov
int
jle
roll
mov
xor
push
mov
rorl
inc
xchg
cs
jne
cwtl
cmc
jg
inc
shl
arpl
mov
mov
iret
pop
inc
or
movsb
insb
aad
daa
jno
pushf
stos
push
in
pop
jl
adc
mov
dec
pop
inc
cmp
fwait
sbb
mov
rcrb
out
mov
lods
xor
inc
dec
pop
inc
sub
loopne
sub
dec
dec
clc
push
loop
loope
outsb
out
iret
int
hlt
imul
xchg
je
movl
mov
out
push
xlat
aam
push
adc
dec
add
lret
push
lret
jb
lods
mov
aas
sub
xchg
add
xorl
and
mov
pop
sub
cmpsl
lds
cmp
mov
fwait
sbb
rclb
iret
fmul
push
cli
ror
jg
out
sub
sub
fimuls
jecxz
mov
ret
sbb
test
mov
cmp
mov
dec
push
pusha
sbbl
adc
ja
xorb
cs
outsl
loop
jmp
inc
or
mov
jne
and
cmp
idivl
xor
imul
movb
adc
mov
in
pop
cmp
jae
cltd
sub
xchg
repz
fs
in
xor
mov
inc
xor
test
es
inc
lds
js
imul
cmp
lods
aaa
xchg
lods
cli
jl,pt
sbb
mov
je
inc
inc
mov
mov
jae
pop
mov
sub
mov
mov
in
push
cs
aam
add
int3
pop
lods
mov
xchg
scas
hlt
xchg
and
fs
mov
push
jne
outsb
movb
mov
loope
shrl
adc
or
sbb
mov
xor
call
jle
and
add
xchg
rolb
xor
dec
imull
mov
jnp
pop
ret
mov
testl
ret
arpl
and
jae
jns
in
and
ret
lds
roll
and
sub
cmpsl
pop
int
adc
xor
mov
je
cmp
sbb
add
add
sbb
add
flds
add
dec
add
pop
std
les
xchg
or
call
aas
stc
lock
xchg
adc
dec
or
jecxz
xor
rol
aas
lret
and
cltd
mov
push
lods
lods
les
mov
mov
popf
sub
stos
stos
cmpsl
aaa
mov
sahf
inc
ja
sbb
popa
iret
mov
shrl
inc
leave
mov
xor
stos
enter
lret
sbb
xchg
test
cmp
frstor
add
int
loope
inc
inc
jae
leave
jl
hlt
js
or
pop
imul
add
push
sti
pop
out
add
fiadds
sbb
dec
xor
and
dec
test
add
pop
pop
sar
xchg
movsb
std
incl
mov
dec
mov
xchg
scas
and
in
popf
subb
das
loop
into
or
xor
testl
nop
insb
mov
scas
lods
mov
mov
inc
or
push
sbb
inc
or
in
inc
adc
aam
or
into
imul
or
mov
push
es
fcmovu
stos
cmpsl
lahf
ret
pushf
lcall
cmpsl
push
loop
push
lods
add
mov
pop
jl
jbe
push
addr16
xor
cmp
or
aas
cs
hlt
pop
pusha
sub
insl
imul
xor
xchg
mov
sbbl
inc
sbb
mov
sub
and
lods
mov
add
jnp
ret
divl
loop
or
iret
inc
jecxz
insl
mov
cltd
testl
fdivrs
std
mov
or
div
xor
mov
mov
mov
mov
sbb
pop
les
cltd
push
inc
out
or
stc
xchg
fiaddl
xor
int
jne
into
flds
add
fsubp
and
mov
or
dec
pop
out
mov
nop
adc
add
mov
or
inc
insl
lock
stc
inc
scas
out
push
mov
mov
int
and
lods
mov
stos
fisttpl
dec
cmp
pop
outsl
pop
lea
push
mov
cmc
fmull
add
rorb
nop
xor
imul
inc
int3
or
cli
in
cli
pop
mov
sbb
cltd
xor
and
jb
sub
out
sub
lar
stos
sbb
outsb
stc
mov
mov
int
cmp
dec
xor
dec
push
hlt
dec
int3
or
jns
aas
and
mov
adc
rclb
cwtl
or
ds
mov
jg
std
xor
test
cmpsl
inc
ficoml
inc
movsl
out
xor
repz
cltd
mov
dec
mov
pop
push
ja
or
icebp
roll
cld
sti
xchg
push
inc
fidivrs
lods
pop
lret
popa
aam
pop
cltd
rorb
shll
mov
jno
stc
stc
aaa
outsl
inc
adc
and
cltd
arpl
enter
and
mov
cmp
mov
sub
fnstsw
jnp
sub
fsubl
pushf
imul
loop
jne
aam
lock
sub
popf
mov
or
xchg
outsb
mov
lret
lahf
insl
aad
test
sarb
adc
lods
mov
lret
fmuls
aas
xor
cmp
iret
cwtl
cmp
push
daa
stos
inc
popa
xchg
mov
mov
jl
push
sahf
sahf
mov
fstpt
adc
inc
call
cmp
addb
js
and
icebp
fisubrs
sbb
push
nop
add
cmp
add
jb
mov
xchg
cltd
les
int3
or
mov
aaa
add
dec
jg
pop
insl
push
push
adc
push
mov
test
mov
jne
es
cmp
aaa
sti
fmull
cmpsb
mov
xor
clc
push
loopne
mov
js
mov
mov
pop
mov
scas
mov
mov
sub
push
inc
test
pop
or
sbb
push
push
cmp
xchg
mov
mov
mov
add
xchg
sub
xor
push
jb
rorl
ja
sub
xlat
adc
cltd
in
or
out
in
jle
cmp
jmp
push
add
test
dec
ficompl
xlat
xchg
push
inc
mov
pop
mov
int3
lods
mov
ret
or
adc
push
adc
imul
inc
iret
shl
push
mov
test
jp
sub
jno
mov
ret
xchg
cmpsb
push
fldenv
or
xor
add
push
inc
inc
insb
xchg
xchg
lods
leave
scas
mov
iret
dec
push
nop
enter
dec
shl
rorl
jbe
lock
cltd
sub
dec
jo
dec
fsubs
std
mov
std
xor
mov
and
sahf
jo
mov
dec
cmc
pop
addr16
xchg
adc
outsl
add
sbb
xchg
push
xchg
mov
jbe
sbb
mov
mov
inc
jecxz
or
pusha
lcall
jle
int3
clc
hlt
les
test
lods
movsb
xchg
dec
adc
sar
rolb
inc
or
sti
popf
movsl
andl
jle
sub
add
cmp
data16
xlat
jmp
dec
in
mov
dec
into
xor
sub
sub
pushf
mov
stc
call
pop
das
xlat
mov
shll
jl
xor
int
in
and
cmpsl
mov
or
out
das
je
cmp
jecxz
and
mov
cwtl
push
cmp
fcoms
pusha
and
pop
inc
jmp
push
jb
dec
addr16
push
aaa
dec
add
mov
movsb
out
jo
insl
mulb
dec
enter
mov
ja
lret
call
clc
inc
ss
cwtl
or
xchg
adc
mov
xor
scas
in
or
clc
jl
and
cmp
imul
into
dec
cmp
dec
bound
cltd
dec
adc
and
das
dec
movsl
movsb
ljmp
inc
ljmp
mov
sbb
xchg
cwtl
mov
cmp
mov
cs
push
pop
push
and
add
movb
pop
mov
mov
cmp
js
mov
adc
mov
sub
out
aad
pop
test
dec
sbb
out
imul
jmp
in
pop
sub
lahf
cli
xor
fs
mov
xor
cmpsb
es
stos
add
mov
sub
adc
flds
in
xchg
arpl
mov
test
xorl
cwtl
pushf
pop
mov
cmp
in
loopne
cld
mov
push
and
sub
push
outsl
mov
xchg
jb
push
cmp
stc
aaa
pop
sbb
mov
dec
ljmp
or
jbe
sahf
inc
daa
inc
xchg
imul
cs
es
xor
cmpsl
mov
pop
hlt
mov
movsl
jge
mov
mov
fucom
stos
stos
jg
cltd
lcall
loopne
jge,pt
scas
lods
loope
movsb
jno
clc
enter
and
pop
sub
lods
cmp
pop
push
sbb
cs
xchg
movsl
jmp
ja
imul
mov
mov
test
fiadds
xor
mov
ret
lret
push
test
out
sub
inc
xchg
stc
mov
repz
in
push
pop
mov
adc
add
lock
pop
testl
into
adcb
push
sarl
and
dec
or
xchg
fstps
andps
movsb
jae
push
inc
dec
sbb
movlhps
push
jns
les
mov
mov
xor
sahf
push
loope
gs
xor
fbstp
cmpsl
lcall
ror
out
lcall
inc
mov
lahf
push
jg
fnstcw
mov
out
call
pop
mov
jno
out
daa
fbld
mov
add
lret
nop
mov
loope
sub
rcll
jmp
leave
xchg
shll
subb
aas
xchg
jo
jl
xchg
clc
mov
xor
fsubr
cmp
sbb
test
outsb
dec
mov
xchg
das
fdivrs
sbb
clc
jecxz
adc
dec
and
loopne
add
decb
out
int3
jmp
sub
cltd
adc
mov
test
pop
enter
lods
jb
cmp
lods
idivb
cmp
inc
imul
jb
mov
sub
pop
and
xchg
cmp
lret
fisubs
test
xor
xor
sbb
mov
cli
mov
inc
dec
jmp
sti
mov
clc
je
pop
inc
push
cwtl
lcall
int
fnstsw
jecxz
sbb
imul
jae
add
setge
pop
shlb
aam
mov
push
sub
es
mov
ja
mov
popa
ds
xor
movsl
adc
jp
push
push
sub
sahf
dec
outsl
jns
inc
pop
dec
gs
add
sbb
sbb
mov
jae
js
ljmp
scas
jae
in
cmpsl
shl
fidivs
pop
and
inc
mov
push
inc
mov
push
dec
cmpsb
loopne
add
pop
test
mov
push
adc
repz
cmpsb
sbb
cmp
xor
insl
push
fwait
sbb
icebp
pop
and
sbb
pop
aas
mov
lahf
push
push
pop
sbb
lods
nop
insb
les
jnp
xchg
jecxz
xorb
ss
rcll
xor
adc
or
inc
or
pop
dec
outsl
mov
cmp
xor
aam
push
inc
and
ficoml
icebp
fstpt
xorb
add
jge
dec
leave
adc
xlat
push
xchg
sbb
nop
outsl
add
popl
add
cld
dec
loop
and
popf
fiadds
jne
mov
push
inc
and
clc
mov
fildll
mov
mov
add
sbb
insb
xor
xchg
stc
mov
xor
insl
push
inc
mov
cmp
in
aas
xchg
jns
out
scas
mov
xchg
in
cmpsl
cmpsl
sti
xchg
adc
pop
cmpsl
loop
xor
xchg
pop
mov
sarb
notl
jp
pop
xchg
sti
jg
inc
nop
jp
and
outsl
dec
add
sbb
not
or
cwtl
pop
out
lods
arpl
ds
out
pop
cmp
dec
loop
jo
test
inc
and
dec
js
idiv
jb
ret
pop
adc
cmpsb
cmp
dec
mov
mov
push
int3
es
in
iret
xchg
sbb
jmp
adc
hlt
jo
adc
loopne
push
xchg
adc
fstpl
push
test
xor
mov
mov
pop
out
mov
aam
out
sub
in
adc
and
pop
inc
test
cmp
test
mov
mov
pop
sub
push
arpl
inc
push
dec
lock
ss
inc
test
aam
cmp
mov
add
repnz
arpl
loop
dec
sar
jmp
outsl
sbb
dec
jb
pop
cmp
fldl2t
and
push
jns
xchg
mov
ror
stos
xor
jle
mov
pop
lods
aaa
or
pop
js
pop
cmp
das
mov
aas
and
mov
repz
xlat
and
mov
nopl
aad
xchg
cmp
out
pop
adc
mov
sub
incb
das
or
jns
ds
dec
repz
mov
xorps
cmc
push
dec
bnd
push
cmp
das
inc
add
jne
xor
pop
loop
out
repz
mov
push
mov
shll
or
jle
add
cmc
les
negl
mov
jne
imul
arpl
out
subb
jb
ror
jp
add
and
imul
sub
in
add
pop
aaa
cltd
mov
in
data16
movsb
mov
cmp
jne
sbb
xor
shll
inc
pusha
add
jecxz
add
mov
aad
je
xor
outsl
pop
loopne
lea
mov
stos
push
sbb
mov
mov
pop
ret
pop
in
cltd
clc
cmpsl
daa
inc
mov
mov
ja
out
in
dec
push
push
push
jg
adc
jl
mov
jnp
imul
out
dec
or
ja
xlat
mov
std
adc
mov
cmp
mull
imul
mov
sbb
jmp
ret
add
jae
push
jo
jge
push
inc
jl
mov
ja
pop
xchg
inc
xchg
mov
mov
mov
jge
dec
mov
ret
fisttpl
mov
mov
test
loope
mov
test
cwtl
mov
cmp
cmp
cmp
or
jl
in
stos
fwait
movb
and
cmc
lret
mov
fnsave
js
stc
insl
mull
and
mov
lds
mov
adc
dec
jge
add
adc
call
pop
aas
push
mov
cmc
push
dec
inc
dec
or
lret
imul
mov
jp
out
push
lea
int3
or
mov
std
fs
xchg
in
outsl
mov
fistps
inc
mov
push
test
xor
adc
jnp
adc
jge
or
fs
xchg
je
rcrb
test
ret
pop
mov
jmp
cmp
push
sub
out
shr
out
ljmp
movsb
out
jge
dec
aaa
daa
sub
sar
gs
cmpsb
add
mov
cmp
mov
pushf
lret
ret
inc
fistpll
xchg
lahf
not
dec
mov
inc
and
pop
jmp
sbb
inc
lods
pop
dec
fsts
xchg
cmp
lds
cmp
fisubl
divl
int
addr16
xchg
stos
cwtl
cmovbe
std
sarl
and
sub
cmp
lahf
xchg
cmp
fisubrs
dec
push
rcl
push
sub
lods
adc
jp
addb
pop
ja
lods
mov
data16
mov
xchg
sbb
and
es
inc
sub
mov
mov
sti
push
mov
aaa
push
outsl
or
add
js,pt
jne
iret
out
cltd
dec
jg
les
push
mulb
enter
stos
fs
lahf
fld
arpl
jle
push
addr16
mov
aam
dec
mov
mov
lods
and
je
cmpsb
fs
inc
xor
leave
sub
mov
cmp
push
shl
or
pop
jae
fucomip
or
dec
pop
ljmp
ds
mov
outsl
jl
aad
inc
es
popa
stos
orl
jl
rorl
push
andl
out
dec
popa
mov
test
lahf
lret
mov
dec
test
insl
mov
aaa
jno
je
stos
rorb
add
mov
sub
jl
hlt
jnp,pt
sbb
adc
lea
pop
dec
shr
sahf
lret
daa
pop
leave
jbe
loop
pop
fdivrl
in
or
sub
enter
movsb
adc
scas
arpl
jmp
gs
inc
xchg
inc
int3
dec
xor
outsb
add
aam
jno
dec
fldl
cli
mov
jmp
inc
sub
repnz
xor
cmp
loopne
inc
dec
insl
cmp
test
pop
loope
mov
sahf
arpl
cmp
aas
add
pop
add
leave
sbb
xor
jge
or
jmp
push
mov
popa
fildl
das
in
das
inc
sbb
test
popf
loop
xchg
enter
pop
cmp
pushf
jp
cmp
call
xor
popa
pop
ds
mov
or
xchg
mov
sub
bt
cwtl
or
cmpsl
or
aad
test
mov
aaa
adc
pop
xchg
push
imul
les
push
cmp
lret
subb
inc
clc
test
dec
xor
ret
push
sub
push
dec
imul
pushf
mov
adc
pop
and
int
sbb
adc
sbb
add
pop
in
enter
mov
js
outsl
dec
dec
sbb
mov
dec
jge
inc
ficoml
or
cwtl
pop
cmp
cmp
rorb
jl
mov
pop
loope
lock
ds
mov
movsl
enter
jle
xor
loopne
add
fs
jmp
sub
cmp
lret
iret
scas
xchg
fmuls
cmp
mov
xchg
dec
mov
pop
pop
ret
out
icebp
pop
inc
jl
inc
sbb
int
icebp
popl
shl
insb
scas
aad
dec
pop
xlat
mov
mov
jl
adc
lahf
call
clc
push
mov
fsts
and
lods
mov
lods
das
dec
jae
mov
adc
lret
cs
add
out
add
pop
sub
adc
hlt
sub
cli
clc
ret
cmpsb
inc
jb
sub
sub
ljmp
jns
cld
or
adc
mov
mov
negb
xor
ret
push
sbb
mov
loope
scas
push
sbb
ret
mov
cli
and
sbb
jo
std
sub
pop
sbb
aad
xrelease
xor
cltd
adc
sub
lods
jbe
mov
cmpsb
in
xchg
cmpsb
add
nop
adc
add
xor
addr16
cmpsb
dec
cmp
jb
or
and
push
adc
stos
jno
jns
lds
shr
hlt
out
push
or
sub
add
rcl
add
mov
sub
sbb
je
ret
je
add
mov
out
imul
xchg
push
fs
imul
jb
fwait
loop,pt
flds
jl
inc
mov
add
rcl
add
xor
jmp
sub
and
cmp
dec
rep
mov
sub
iret
rcrb
fidivrl
imul
jl
test
loop
aad
fstps
cmpsb
push
mov
mov
push
push
std
aad
add
test
inc
add
aaa
and
push
gs
outsl
dec
dec
ficoml
mov
cmp
lock
pop
add
jg
addb
loop
pop
push
movsb
aaa
xchg
mov
lods
mov
divb
into
arpl
lret
xchg
or
test
sub
aaa
mov
jae
rcrl
shlb
jb
adc
push
fildl
xchg
mov
jle
daa
jecxz
xchg
mov
arpl
jl
sub
jnp
loopne
add
in
shl
sub
sbb
cmpsl
jb
mov
cmc
sti
pushf
lds
popa
ret
and
bound
test
out
stos
ret
test
push
cmp
mulb
adc
mov
cmpsb
and
xchg
jbe
dec
xchg
xchg
mov
pop
and
std
inc
xchg
popf
dec
or
sub
push
stos
rorl
rcrb
ja
hlt
sbb
cmp
sti
mov
push
jns
test
sti
mov
push
cmc
clc
sub
xchg
adc
mov
cmpsb
mov
xchg
add
repnz
subb
xor
mov
push
fdivrl
out
enter
jle
inc
xchg
xor
cmpsb
icebp
fisubl
iret
leave
lds
pop
xlat
aad
in
fistpl
mov
pop
and
es
fistpl
or
pushf
fisubrl
mov
repz
leave
xor
pop
ds
sub
icebp
add
mov
dec
and
xchg
adcl
jg
xchg
pop
push
add
ret
ret
test
enter
sbb
sbb
cmc
out
test
ljmp
dec
stc
mov
pop
xchg
xor
pop
pop
pop
insl
mov
push
cmpsl
pop
adc
mov
or
scas
ja
add
inc
andb
jge
xchg
jns
and
sub
scas
outsb
inc
outsl
mov
insb
aam
mov
iret
mov
sbb
cmpsl
test
lret
faddl
imul
jmp
insb
pop
clc
test
sarb
jg
imull
andb
pop
mov
test
bound
int3
sbb
push
jo
and
xor
jbe
fiaddl
pop
xchg
xchg
adcb
std
lret
fs
xchg
sbbb
mov
movsl
mov
xchg
pop
popa
mov
iret
dec
in
daa
push
ss
mov
add
push
loopne
push
fstp
xchg
shrb
fdivrs
andb
fs
out
test
mov
nop
jo
inc
dec
imul
adc
hlt
jb
pusha
lret
xchg
xchg
cmpsb
add
addr16
adc
dec
sub
int3
pop
iret
sub
imul
out
in
dec
imul
xor
lret
jbe
sub
mov
ds
pop
push
movb
push
mov
pop
lcall
or
mov
fcmovne
push
cmp
mov
adc
push
dec
mov
xchg
fnsave
sbb
push
and
jae
adc
sbb
fld
mov
popa
dec
int3
pop
sub
lcall
adc
push
lret
mov
mov
addr16
cmpb
dec
xchg
cld
cwtl
push
push
pop
or
xor
shl
lods
test
das
and
push
lock
mov
pop
and
pop
repnz
out
jo
fdivrs
sti
mov
cmp
test
pop
push
popf
cmp
aam
stos
dec
mov
je
xchg
rclb
idivl
push
iret
jle
fndisi(8087
stos
negb
push
mov
loop
dec
dec
mov
imul
loopne
es
lret
movsl
mov
cli
jb
mov
jmp
mov
or
push
in
push
pushf
jecxz
sbb
stos
mov
or
sub
push
ret
xor
mov
out
pop
xchg
lret
push
cmp
and
mov
mul
push
dec
mov
popf
cmp
pop
jl
lret
inc
lock
mov
leave
push
out
sub
sub
mov
mov
orl
and
jg
jnp
cmc
jo
cmc
xchg
icebp
aas
adc
notb
inc
andl
into
dec
mov
std
xchg
mov
adc
mov
movsb
sbb
stos
cld
and
fsubrs
jns
fwait
mov
adc
mov
sahf
cmp
out
es
inc
jecxz
filds
ds
mov
mov
mov
and
xor
sub
push
adc
adc
shll
test
sahf
jae
and
mov
cmc
jg
icebp
pop
test
js
int3
arpl
cmpsb
push
xchg
int3
pop
jno,pt
dec
movsl
sub
mov
imul
inc
shl
inc
sub
inc
insl
mov
aam
lea
iret
xchg
std
sub
inc
cmpl
sub
stos
xchg
xlat
repz
data16
mov
insl
cwtl
mov
arpl
scas
movsb
push
add
decl
pop
loope
std
jl
pop
inc
jns
cld
cmpsl
adc
mov
aas
pop
into
cmp
sbb
clc
in
out
adc
mov
or
in
and
imul
or
pushf
sahf
push
scas
inc
mov
pop
stos
test
mov
jle
mov
sbb
fildl
mov
mov
xchg
sub
or
ljmp
pop
pop
xor
xchg
xor
notl
pop
mov
sub
sbb
int
neg
repz
sbb
sbb
push
adc
sub
dec
fldcw
cmp
dec
enter
push
and
int3
fucompp
rcll
mov
add
push
inc
or
test
call
scas
cmp
faddp
in
shl
fwait
mov
lock
sbb
jb
insl
push
fldcw
addl
les
sub
dec
enter
movnti
sti
lahf
mov
add
xchg
lds
cmp
sub
out
cmc
and
popa
jle
daa
push
inc
xchg
mov
mov
pushf
cmpsb
mov
push
inc
mov
cmp
mov
push
shl
test
lods
sar
mov
add
jmp
sti
data16
sbb
popf
cmpsl
push
out
mov
js
mov
jle
add
notl
push
mov
pop
jns
jecxz
leave
sbb
into
addr16
pop
mov
rclb
daa
fwait
or
ficoms
mov
xchg
cmp
fisttpl
in
mov
push
inc
sbb
mov
mov
les
xor
pusha
push
push
xor
sbb
dec
test
test
into
adc
jp
fistpl
repnz
pop
scas
scas
inc
daa
shrb
fidivrs
xorb
add
and
jle
adc
scas
add
mov
and
mov
xchg
mov
xchg
rcrl
lods
mov
jne
cltd
loop
or
and
adc
je
aas
bound
rcr
mov
adc
mov
test
xchg
pop
push
inc
mov
mov
mov
fsubrl
push
mov
inc
jmp
push
mov
imul
inc
mov
dec
mov
js
jno
dec
movsb
xor
pop
or
sbb
pop
rcll
add
mov
insl
movsl
bound
nop
lea
dec
pop
jecxz
ja
lret
dec
sbb
into
xchg
add
xor
psllq
cmpl
inc
jno
push
lods
out
ret
js
mov
pop
pop
test
pop
jle
scas
jl
shll
jg
pop
imul
dec
scas
mov
imul
mov
and
mov
lods
push
js
mov
lea
cmpsb
add
add
cmp
pop
push
shlb
cmp
movsl
lods
mov
xor
ret
and
sbb
mov
xchg
cmp
xlat
sub
push
adc
les
inc
dec
popa
or
mov
rep
cwtl
js
sarl
adc
cwtl
dec
aas
xchg
xor
call
mov
fists
sbb
pop
mov
jno
cld
push
and
ss
ret
adc
jnp
icebp
mov
inc
aaa
lcall
mov
mov
int3
fmull
outsb
adcb
and
jecxz
mov
dec
mov
blcic
out
push
mov
xor
adc
jg
leave
jecxz
lcall
in
fstl
dec
mov
ss
stc
fstp
in
stc
adc
adc
add
arpl
xchg
dec
inc
cs
fisttps
push
notb
popf
sbb
inc
bound
fwait
ret
lret
xor
lods
mov
mov
dec
push
mov
mov
mov
inc
adc
sub
insl
push
imul
mov
xchg
sbb
fwait
xor
cmpsb
decl
mov
pop
clc
inc
inc
or
out
adc
jns
dec
cld
fcmovbe
mov
pop
fsubl
dec
out
sub
mov
pop
mov
dec
outsb
mov
dec
clc
inc
add
out
cwtl
add
iret
add
cwtl
xchg
cs
sub
shll
repnz
lods
xor
mov
rolb
test
push
das
iret
jg
pop
pusha
imul
xchg
mov
pop
mov
adc
rorl
push
bound
rclb
and
sbb
mov
int
jbe
inc
pop
scas
and
je,pt
je
add
cmp
push
xor
pop
aad
sub
xchg
xorl
cwtl
lods
aas
imul
lcall
xchg
or
jne
movsb
in
stos
xchg
or
mov
mov
shrb
mov
and
jo
and
mov
fs
sbb
popl
in
enter
data16
xchg
adc
cmpsl
int3
mov
les
adcb
fstp
push
ljmp
xor
insb
loope,pn
mov
inc
dec
pop
adcb
xchg
test
xor
loope
lcall
dec
rcll
ljmp
enter
push
ljmp
and
and
lret
dec
mov
pop
test
jno
jmp
repz
sarl
push
add
scas
je
push
imul
lret
lea
add
push
enter
jb
jl
xchg
cmp
int
xor
mov
push
dec
push
sbb
push
push
icebp
fcmovbe
and
iret
loope
mov
mov
mov
xor
and
rcl
mov
xchg
pushf
in
xor
mov
jp
das
cld
sarl
and
xchg
pushf
leave
mov
pop
leave
jg
or
pop
mov
test
jle,pn
enter
out
add
xor
sub
push
jmp
addr16
adc
sub
stos
ret
ror
push
xor
outsb
jle
inc
stos
xor
in
mov
ds
push
mov
and
es
mov
aas
mov
xchg
jp
push
repz
enter
lahf
jl
gs
je
in
mov
imul
mov
mov
and
or
test
sbb
mov
adc
ljmp
iret
notb
fwait
jo
jae
inc
test
pop
mov
mov
clc
push
ljmp
cmc
adc
xchg
add
out
lds
adc
mov
data16
pop
sti
cmp
mov
push
mov
sbb
sarl
not
push
jo
jnp
pop
or
pop
or
filds
ds
cmp
cmp
push
sahf
mov
arpl
mov
hlt
or
or
sub
movsb
mov
push
cmp
aas
mov
mov
lcall
lods
ss
mov
popa
push
add
cs
jp
mov
outsl
lods
and
sub
outsb
je
xchg
shl
dec
adcl
stos
xor
add
cmp
push
mov
andb
es
in
aas
call
jnp
lds
xchg
sbb
xchg
or
icebp
adc
xor
mov
jl
lock
test
add
out
sbb
sub
notl
data16
daa
or
mov
push
cmp
push
add
xchg
push
adc
push
pop
ret
addr16
stos
inc
andl
add
mov
call
sbb
cmc
ror
jle
mov
ds
popa
jns
es
ret
dec
push
pop
xor
out
rorb
cltd
and
push
fcompl
les
mov
out
jno
push
dec
jno
shll
out
and
push
sbb
mov
and
sbb
jle
xchg
sub
and
pop
or
sbb
mov
mov
xchg
dec
or
out
mov
jle
add
push
or
mov
arpl
lock
fdivs
mull
jno
std
hlt
xor
mov
xchg
cs
mov
iret
in
push
jecxz
lea
mov
push
cld
sub
mov
ficomps
mov
call
add
ret
push
stos
xor
or
cmpsl
pop
les
pop
jne
push
mov
test
cli
or
xchg
scas
mov
cmp
outsl
scas
xchg
xor
mov
inc
pushw
mov
scas
dec
and
shll
out
test
dec
adc
sbb
mov
mov
jle
gs
shrl
and
fsubrs
inc
rsm
push
test
neg
int3
popa
fldt
lds
pusha
or
add
lea
xor
and
or
cmc
sub
popf
push
movsl
jns
push
xor
decb
out
es
push
and
hlt
lods
jp
je
cmpsl
adc
les
sbb
shll
pop
xchg
sub
inc
pushf
add
stc
xor
enter
pop
shrl
xchg
inc
push
fidivl
pop
lods
fisubs
sbb
pop
movsb
andl
push
pop
adc
mov
cmpsl
and
bound
in
jp
pop
arpl
dec
jmp
mov
int3
pop
sbbl
adcl
ret
mov
or
xchg
lock
inc
pop
mov
dec
mov
fdiv
push
cmp
icebp
das
or
ret
or
push
pushf
fistpl
pop
les
dec
les
sahf
hlt
hlt
popf
add
and
pushf
and
push
aas
movsb
push
iret
out
in
pop
mov
xchg
pop
fidivrs
jbe
sbb
fwait
movsb
imul
movl
movntps
call
popf
dec
or
inc
jp
loop
stc
sbb
or
je
cmp
sti
lahf
sahf
mulb
cmp
cbtw
xchg
cmp
lahf
lods
into
sub
cmp
cmp
xor
dec
insb
mov
mov
push
add
xchg
testb
push
imul
lret
enter
inc
ret
ss
adc
and
sub
mov
cmc
cmp
sbb
xchg
sub
ret
and
sbb
fcompl
sbb
xchg
mov
cltd
xor
cwtl
and
mov
or
in
xchg
icebp
sbb
jg
shrb
inc
arpl
inc
or
sub
pop
xchg
and
test
cltd
leave
popf
iret
sub
sub
xchg
outsb
pop
enter
pop
pusha
ds
lods
cmp
loopne
das
test
lret
xchg
pop
sbb
cmp
dec
les
jmp
loopne
or
dec
push
sbb
inc
mov
xchg
leave
arpl
pop
mov
scas
divl
push
lock
sti
mov
test
loop
mov
dec
cs
je
jnp
add
pop
fmuls
pop
or
adc
lcall
mov
jo
test
dec
add
cmp
popf
push
push
jb
or
jbe
stc
adc
xor
jle
mov
cmp
insb
pop
xchg
shlb
push
mov
xor
sbb
movsb
les
dec
push
aam
jno
out
push
sbb
pushf
test
jnp
shlb
and
scas
lcall
or
ds
std
dec
sbb
push
xchg
inc
mov
inc
mov
aad
sbbl
add
icebp
dec
aas
iret
jns
cli
sarb
clc
fisubs
lods
mov
dec
jg
xchg
daa
push
les
and
daa
adcb
notl
movsb
mov
data16
popf
int
das
mov
sbb
dec
xchg
ficompl
cmp
push
mov
sub
sub
inc
sahf
rcrb
fbstp
xchg
jns
inc
inc
addb
xchg
enter
out
adc
outsb
ljmp
adc
cld
cwtl
add
mov
outsl
ljmp
pop
mov
mov
mov
lret
idiv
mov
xor
xchg
pushf
mov
sbb
out
popl
xor
add
test
orb
xchg
xor
cli
cli
push
mov
jp
xor
std
cmpsl
nop
fdivs
or
inc
jno
sbb
push
icebp
je
cmp
add
adc
scas
adc
mov
mov
jns
into
aad
push
jne
movsl
and
movsb
pop
lahf
dec
imull
cs
lock
adc
sbb
movsb
scas
aam
test
sbb
mov
jge
pop
xchg
mov
je
test
nop
sbb
ficomps
jmp
mov
xchg
jbe
js
xchg
xor
pushf
lods
inc
andb
fimuls
xor
je
xor
xchg
ffreep
fistl
stos
cmc
mov
aam
loope
insl
loopne
push
out
lods
rcr
dec
into
dec
and
add
faddl
adc
js
inc
lds
push
rcrl
inc
mov
mov
lahf
pop
shl
movsl
jnp
insl
mov
stos
shr
push
inc
ret
imull
scas
and
inc
in
loope
adc
mov
adc
dec
xchg
jno
add
add
adc
or
cmp
loopne
outsb
lcall
push
lcall
jae
ret
out
mov
sti
and
cmp
push
mov
xchg
sub
pop
fucomi
push
or
mov
and
inc
in
jne
xchg
imull
jae
decb
or
imul
mov
push
stos
dec
lock
stc
push
rorb
dec
in
lods
cltd
sub
mov
rcll
sbbb
sbb
movsb
add
insb
jle
mov
sub
ret
popa
das
cmp
stc
sbb
je
popa
push
xchg
inc
sbb
push
cmpb
cmp
iret
add
pop
mov
inc
rclb
test
das
cli
sahf
push
imul
pop
or
lcall
sbb
adc
push
roll
adc
mov
xchg
cmpsl
add
lcall
mov
insb
into
je
out
jle
inc
or
push
mov
stc
lahf
dec
jle
jmp
insb
mov
pop
repnz
outsb
cld
imul
dec
or
push
data16
xor
and
js
pop
or
movsb
pop
push
xorl
sbb
pop
and
int
sbb
or
sbb
cmpsl
out
xchg
js
dec
pop
daa
and
test
loop
and
mov
out
add
outsb
xchg
xor
pop
cmp
popf
inc
std
add
sub
cwtl
js
adcl
push
mov
es
shlb
testb
push
dec
xchg
dec
std
pop
iret
push
add
clc
aaa
dec
test
ficomps
add
aaa
gs
repnz
mov
or
add
movsl
std
sub
xchg
daa
push
pushf
fisubl
mov
xchg
lret
push
sarl
fcmovnbe
sbb
in
aaa
mov
and
sub
nop
into
fcmovnu
cmp
and
sub
adc
jge
pop
pop
cmpsl
mov
pop
insb
icebp
jne
add
cs
lea
sar
int3
or
sti
iret
push
xor
in
ljmp
and
ljmp
loopne
cs
div
or
adc
testb
cmpsl
mov
and
push
nop
lods
dec
pop
stc
fadds
sbb
sbb
cmp
fnsave
jecxz
xchg
xchg
adc
adc
cmp
xor
mov
mov
aaa
nop
in
mov
xchg
sbb
mov
js
mov
mov
cs
and
sbb
stos
icebp
mov
pop
fwait
js
jge
shrb
mov
xor
and
out
mov
xor
mov
mov
or
pop
mov
dec
or
sbb
sbb
add
lods
in
cmp
pop
sbb
gs
adc
jl
or
in
jge
aad
xor
inc
popa
cltd
mov
cld
aad
mov
loop
or
movb
xor
enter
lcall
mov
movsb
aaa
adc
testb
out
outsb
mov
jmp
lret
and
pop
dec
cli
xchg
jns
xor
fnstenv
mov
and
test
xchg
es
xchg
cmp
dec
sti
xchg
push
push
mov
inc
ss
shll
lock
sub
lahf
xchg
pop
xor
popa
sbb
leave
sahf
popa
mov
imul
push
in
fidivs
insb
roll
push
inc
mov
jle
pop
jmp
cmp
pop
movsl
in
and
movsl
push
mov
xchg
pop
or
shl
jge
out
jnp
xchg
xor
aad
out
sti
mov
std
sub
xor
aas
adc
ficoms
push
inc
add
mov
aam
push
aad
test
std
dec
movsl
in
cmp
sti
cltd
pcmpgtw
or
xor
fstpl
xchg
sbb
inc
xchg
mov
imul
push
jle
repz
fimuls
hlt
and
imul
mov
pop
or
add
dec
and
pushf
sub
jne
insb
icebp
adc
out
out
dec
jno
out
jno
jne
cltd
mov
cmp
fnstsw
add
dec
push
mov
jge
or
in
jo
mov
addr16
enter
sub
push
fdivs
dec
mov
or
sbb
mov
scas
dec
xchg
add
jp
cmp
aaa
in
lahf
xchg
adc
test
dec
mov
insb
or
fdivrs
lcall
nop
adc
inc
ret
orl
sarb
js
popf
push
mov
or
jmp
repnz
int3
mov
loope
dec
mov
xchg
sbb
cmpb
jle
cmp
mov
add
cwtl
mov
ret
push
test
outsl
and
cmp
sbb
add
or
cmp
scas
add
inc
daa
jg
outsb
mov
xchg
mov
movsb
jb
shll
imul
adc
ds
pop
loope,pn
lcall
dec
fs
in
push
movsb
lret
ret
pop
adcl
cmpsl
loope
imul
icebp
roll
push
cmp
or
push
push
das
mov
popa
jnp
mov
bound
push
or
xchg
test
das
int3
lea
call
dec
pushf
jno
inc
call
mov
inc
or
addr16
ljmp
jne
push
das
add
shll
pop
xor
push
and
pop
or
adc
sbb
lret
jae
dec
divb
out
out
popa
cmc
xchg
add
sub
and
loope
pop
popa
pop
and
into
icebp
pushf
fisubl
in
mov
fisttps
lods
loopne
std
xor
jge
clc
push
scas
xor
inc
cmp
inc
mov
das
pop
loopne
cmp
pop
nop
lret
pop
inc
fsubs
sbb
fldenv
jnp
dec
insb
mov
movb
adc
dec
jecxz
pusha
shr
data16
cmp
push
or
xchg
adc
adc
pop
int3
dec
and
mov
mov
dec
add
stc
fwait
fs
aad
adc
mov
pop
xchg
loopne
adc
mov
dec
les
mov
dec
push
ret
in
dec
push
add
sbb
dec
lock
mov
fldl
pop
pusha
push
mov
cltd
or
mov
cld
mov
sub
lahf
push
clc
sbb
scas
arpl
inc
fildl
mov
pop
int3
outsl
cmpsb
in
out
cmp
lahf
add
lods
inc
repz
xor
gs
xor
jg
sbb
pop
test
adc
adc
subb
push
ljmp
repnz
pop
push
dec
sbb
loope
adc
sbb
and
es
mov
ljmp
mov
jne
mov
pop
leave
mov
sbb
cltd
jae
rolb
mov
out
sbb
arpl
mov
cmc
out
scas
out
pusha
mov
add
dec
inc
cmpsb
xchg
push
ret
in
sbb
jp
popa
jle
mov
or
clc
inc
test
dec
jo
push
in
xchg
mov
dec
test
test
push
mov
inc
das
stos
mov
push
shlb
inc
mov
ja
and
adc
arpl
outsl
jns
rclb
pusha
mov
jp
mov
mov
fs
inc
cld
enter
idivb
outsl
fnstcw
mov
xchg
cwtl
mov
lods
popf
adc
mov
mov
xor
in
insl
addr16
sbb
mov
int3
ljmp
nop
fdivrl
push
lds
imull
and
pop
roll
mov
psubsb
cmp
adc
mov
mov
cmp
sti
aam
lods
int3
push
aas
aaa
mov
daa
into
ret
inc
xchg
dec
fsts
push
data16
movsl
fimull
push
xor
mov
add
pop
mov
orb
mov
sub
nop
ret
pop
mov
popa
push
pop
orb
sbb
jle
std
inc
stos
pop
test
test
jno
and
or
push
mov
ljmp
sub
inc
mov
sbb
fs
flds
cmp
xlat
ret
sub
dec
add
push
aaa
mov
push
mov
negl
in
out
mov
test
push
or
push
testl
out
cmp
out
xchg
in
xchg
lods
sub
add
addr16
leave
jp
faddl
dec
jne
jecxz
dec
pusha
shl
jae
xchg
sub
mov
or
lcall
mov
stos
daa
pop
sbb
clc
aad
leave
mov
mov
jns
mov
stos
jne
lds
mov
cmp
sbb
test
xor
fdivrl
pop
test
fdivs
mov
jl
addr16
data16
mov
xchg
mov
mov
push
push
push
jb
jae
sub
out
push
sbb
pop
cmpsl
int
adc
lret
xchg
inc
pop
daa
mov
shrl
call
stc
jl
jne
into
addb
xchg
sub
jne
ja
mov
jecxz
adc
dec
call
pop
repnz
lods
imul
and
std
cmp
pushf
jmp
rorl
adc
sbb
mov
loopne
jns
in
icebp
push
lds
pop
jbe
xchg
daa
or
popf
loope
mov
sub
pop
mov
sarb
jp
insb
inc
shr
scas
in
outsb
pop
into
aad
in
push
scas
mov
ss
jle
arpl
aas
pop
pop
push
and
leave
or
into
lods
pop
sub
sub
mov
bound
int3
pop
xlat
inc
xchg
arpl
pop
cli
cmp
add
sub
fnsave
dec
cli
jne
popa
push
or
sbb
lock
mov
call
out
sbb
outsl
test
mov
ret
movsl
push
jle
cmp
sub
in
data16
dec
mov
xor
sub
sub
adcl
test
or
sbb
addb
sbbl
aad
test
aam
fistps
sub
insb
ja
xchg
sub
push
mov
mov
pop
sub
pushf
cmp
fld
lret
inc
inc
cmovb
xchg
arpl
imul
ret
js
cwtl
xchg
cli
push
lods
xor
and
mov
sbb
mov
pop
sub
sbb
jns
test
aaa
icebp
hlt
stc
imul
pop
movsl
aaa
pushf
mov
cmp
cmp
les
sub
out
pop
test
add
jno
insb
sub
add
adc
mov
fistpl
insb
pushf
xchg
and
ss
add
cmp
icebp
mov
jmp
pop
xor
push
aad
xor
les
and
pop
jecxz
jle
adc
sti
lock
jae
cld
ret
mov
fidivl
loopne
ss
or
lods
pop
orb
lcall
add
push
push
add
out
scas
bound
ja
sarl
pop
xchg
sub
arpl
sar
lds
jl
scas
inc
adc
ficomps
sub
fadd
dec
and
imul
mov
fldcw
fsubrs
iret
cmp
sbb
xor
outsb
mov
xchg
ret
adc
rcr
inc
cmc
mov
hlt
pop
cwtl
sub
repnz
roll
in
cmp
int
lcall
ss
mov
sub
cmpsb
adc
dec
inc
repnz
jb
rcrb
jg
jmp
cli
xor
gs
subb
dec
ja
push
adc
mov
adc
insl
sbb
inc
in
ja
mov
out
nop
mov
scas
inc
scas
inc
out
iret
idivb
mov
dec
out
mov
jmp
frstor
inc
repz
mov
add
sbb
push
pop
cmpsl
dec
add
ja
out
mov
popa
cmpsl
cmp
jmp
sub
mov
outsb
xchg
ret
addl
pop
sub
andb
int
and
jne
in
xor
dec
dec
xor
dec
dec
add
ret
fistl
nop
insb
movsb
xchg
leave
aaa
iret
jle
sbb
adc
adc
mov
xchg
loope
mov
mov
pushf
mov
xchg
inc
fs
decb
pop
pop
aas
mov
cmp
pop
out
pop
sub
mov
leave
repz
cmp
ret
or
sahf
ljmp
cmp
insb
mov
or
mov
call
dec
xor
xor
xchg
and
sbb
add
pushl
push
jecxz
imul
mov
mov
push
pop
xchg
dec
adc
dec
lods
pop
push
pop
stos
cltd
or
inc
adc
test
out
lods
cmpsb
inc
pop
sti
ret
pop
dec
or
je
inc
jle
cmp
sti
pop
scas
fimuls
pop
out
and
mov
scas
jne
sub
cld
lods
andb
push
lods
sti
or
cmp
push
stos
push
jne
stos
test
inc
clc
push
sar
roll
xchg
dec
mov
les
push
xchg
dec
fwait
fwait
cmp
ss
daa
dec
lods
aaa
mov
jno
mov
lahf
mov
popf
daa
loope
jecxz
mov
dec
lods
cwtl
jnp
pusha
test
xor
mov
ja
in
scas
rorl
push
or
pop
fsubrl
jae
sbb
int3
add
push
repz
or
aam
ds
pop
push
loopne
dec
fcomps
int
jp
daa
jmp
pushf
mov
ljmp
out
push
outsl
mov
arpl
jecxz
daa
add
xor
cltd
xor
jae
sbb
dec
push
xor
mov
enter
dec
jb
cmp
and
cli
aas
and
rol
jl
add
outsl
in
daa
addr16
and
dec
fstl
enter
orl
andb
cmpsb
jbe
imulb
adc
xchg
jg
and
insb
mov
mov
jecxz
or
mov
stos
lods
out
and
into
scas
and
push
sti
std
pop
sahf
cli
loope
divb
cmpsl
cmp
imul
mov
addb
mov
cmc
jl
or
out
orl
xlat
enter
sub
loopne
jg
add
xor
jp
or
push
jae
jae
data16
xor
setp
mov
xlat
sbb
push
mov
push
sbb
in
mov
mov
mov
inc
lcall
xor
cli
fcmovb
mov
fcompl
mov
shrb
xlat
cld
dec
cli
inc
dec
xchg
cmp
jge
jmp
push
inc
cmp
out
jl
push
mov
dec
jg
mov
mov
out
mov
mov
xchg
stc
jmp
lret
bound
mov
dec
add
jno
loope
movsl
push
jae
xchg
cmpsb
jp
pusha
out
test
cmpsb
mov
in
xchg
xchg
shlb
movsb
mov
xlat
cmp
xchg
loop
mov
les
cmp
sub
and
dec
pusha
or
cli
out
hlt
dec
sbb
aaa
push
testb
add
js
xchg
dec
sbb
rcr
mov
push
add
jl
stos
insl
cli
test
xor
icebp
mov
push
push
cmp
gs
push
pushf
xor
inc
popa
or
cmp
ljmp
popa
dec
and
dec
mov
mov
inc
lods
movsl
pop
out
jl
lock
lock
rcl
cmpl
rorl
mov
ljmp
or
jnp
jnp
gs
jne
outsb
or
insb
incl
mov
push
subl
lds
inc
sti
dec
and
int3
inc
lea
pop
testb
shlb
and
mov
jmp
insl
mov
mov
jle
stc
and
pushf
jl
dec
aad
mov
dec
cld
lds
jp
cmp
pop
aaa
hlt
jp
pop
mov
sarb
fadds
jae
mov
jnp
jbe
loopne
stc
ja
jecxz
insl
cmpsb
insl
and
mov
or
lea
aas
and
inc
fidivl
sti
cmp
adc
push
adc
lock
jo,pn
mov
popa
dec
movsl
scas
xchg
inc
arpl
scas
sub
scas
xor
jns
ret
push
roll
stos
jne
adc
xchg
aas
jo
cltd
fcmovnbe
sub
pop
mov
mov
pop
rorb
loope
frstor
ss
in
push
test
push
adcl
jnp
push
inc
xchg
push
aam
mov
lds
cmp
clc
pop
jnp
sbb
and
add
aas
xchg
sub
cmp
sub
xchg
es
out
xchg
ljmp
aam
jne
andb
push
sbb
fistpl
mov
mov
xor
popf
add
push
push
lcall
imul
xorl
scas
sbb
cs
cmp
xor
cmp
in
cmp
dec
mov
push
sbb
mov
and
rcrb
inc
cltd
sub
push
pop
test
ds
repnz
repnz
popl
sub
cmp
add
add
leave
lock
jle
sti
mov
push
xor
and
iret
in
sub
cmp
mov
or
sub
xchg
push
bound
aam
mov
xor
cli
pop
jb
adc
pushf
call
push
sbb
int3
das
push
jle
or
mov
decb
into
pop
subl
jbe
add
lds
mov
shl
stos
fldt
orl
loope
jp
incl
xor
sarb
aaa
xchg
data16
push
std
out
mov
push
jae
rcrl
jle
adcl
repz
sbb
popa
mov
ds
insl
insl
dec
mov
lods
divb
in
ret
fdivrp
mov
ficoml
xchg
cmpl
mov
outsb
mov
jns
mov
enter
add
dec
add
cmp
adc
or
add
ja
or
sbb
add
cli
sub
fs
fisttps
inc
jae
es
mov
jle
inc
daa
pop
push
icebp
push
mov
sti
mov
inc
mov
or
or
jo
out
push
das
xchg
mov
test
inc
sub
or
jbe
notl
decl
test
imul
add
arpl
mov
ret
fucomp
addr16
push
and
xchg
das
mov
mov
add
mov
loope
popf
mov
pop
icebp
sub
pop
push
mov
xlat
out
outsb
mov
mov
ja
jae
jg
push
push
mov
dec
ds
pop
shrl
adc
out
jno
xchg
xchg
loope
movsb
movsb
push
mulb
inc
push
int3
xor
xor
mulb
sub
popf
mulb
scas
in
cmp
pop
cmp
inc
adc
int3
lock
repnz
stc
and
sbb
les
ret
addr16
loopne
mov
fs
jo
push
push
push
xchg
dec
cwtl
inc
cld
sbb
mov
movsb
test
xor
pop
outsb
lods
clc
mov
and
fcmove
inc
lea
sti
xlat
dec
mov
pop
pusha
test
jmp
fs
xor
xor
inc
push
jge
inc
jp
jae
ds
or
fstpl
loopne
rcrb
jecxz
int3
mov
sbb
lea
jb
sub
mov
fwait
mov
mov
and
stos
mov
add
pop
dec
in
mov
fildl
int3
xchg
jb
add
jle
add
das
sti
ror
fstpl
rolb
sub
xchg
dec
sbb
cmp
or
xchg
cmp
aas
dec
or
imul
or
int
je
mov
clc
test
pop
lcall
jno
fstps
fisttpl
out
sar
les
lods
fldt
push
jg
shl
das
sbb
xor
lcall
pop
pop
jns
adc
pop
mov
in
daa
push
icebp
cmpsb
sub
imul
fbld
xchg
jp
inc
std
rcl
or
cltd
push
out
sbb
movsb
aam
xchg
int3
dec
sub
jecxz
mov
sbb
dec
fsubl
insl
push
aaa
fsubr
lret
aad
dec
dec
sub
icebp
decb
add
or
ret
test
cmp
pop
jmp
mov
ret
inc
leave
ffreep
nop
cmp
jmp
jnp
mov
pop
and
mov
dec
dec
dec
pop
xor
loopne
lds
and
cmpsl
adc
inc
xor
nop
sub
add
mov
xchg
ljmp
scas
cltd
ljmp
js
push
repz
mov
jns
jmp
subl
bound
push
je
in
jo
xchg
mov
and
push
jl
insl
xchg
cmp
ss
dec
dec
mov
xor
jp
fstps
pop
dec
cmp
in
imul
pop
fwait
std
push
jge
out
push
cltd
stc
int
lods
inc
pop
movsb
cmp
inc
cli
sbb
pop
push
sub
jg
jo
sub
fsubs
or
shll
jmp
jnp
mov
cwtl
call
rdpmc
pop
fmulp
jmp
mov
cmpsl
inc
cmp
jns
ljmp
inc
cld
xchg
arpl
mov
data16
lock
rcll
or
aas
adc
dec
mov
dec
sub
dec
insb
mov
adc
movsb
scas
movsl
add
scas
xor
xchg
pop
scas
lock
movsl
popa
ret
xchg
lea
inc
test
add
aas
adc
mov
xchg
xor
inc
cmp
or
sbb
pop
add
fcomip
imulb
or
hlt
cmp
add
pop
in
dec
ficoml
in
pop
dec
stos
mov
testb
mov
pop
or
call
mov
add
jg
decl
sahf
sahf
pop
add
ds
cmpsl
mov
cld
stos
int3
mov
pop
ds
jmp
popa
push
and
pop
sub
sbbb
ret
cmp
and
rolb
data16
xchg
lret
ss
paddw
xchg
ljmp
jno
jb
jl
jbe
sub
stc
fs
daa
and
je
push
or
sbb
movsb
imul
pushf
pop
jo
js
int3
or
inc
or
in
test
jl
fdiv
je
mov
sub
xlat
aas
gs
mov
cmp
pop
stc
cs
push
scas
inc
mov
icebp
out
or
je
pop
push
arpl
sahf
shll
mov
popa
mov
mov
mov
dec
push
repnz
rcll
lret
into
iret
fdivrl
ds
push
jmp
test
mov
inc
push
adcb
jbe
mov
imul
push
movsb
push
add
js
ret
sbb
inc
dec
fwait
pop
dec
subb
xor
lcall
call
push
cmpsb
jno
dec
adc
add
inc
int
add
int3
int3
mov
mov
sub
faddl
mov
push
or
and
xchg
cmp
or
dec
fucom
das
sbb
mov
cmp
fstpt
in
lret
adc
mov
aam
insl
in
lods
aam
mov
ss
adc
push
cmp
outsl
in
mov
xor
and
enter
das
cwtl
stos
mov
rorb
jle
mov
leave
int
or
mov
xchg
jg
mov
test
pop
add
outsl
lret
out
push
lcall
fidivs
adc
or
leave
out
clc
cmpsb
mov
push
jne
mov
rcrl
add
mov
hlt
cld
sub
or
dec
bound
mov
movb
movsl
or
ret
mov
dec
and
xor
jne
jns
dec
sbb
fists
adc
popa
bound
lock
pop
mov
fldz
ja
jge
bound
lahf
aas
std
or
cmp
add
decb
inc
adc
int3
adc
inc
into
jecxz
js
mov
sar
mov
nop
sub
xlat
inc
mov
out
leave
pop
cmp
dec
jno
arpl
cmpsl
iret
mov
cmpsb
cmpsl
and
pop
jl
mov
push
movsl
inc
and
pop
adcb
adc
jmp
shlb
in
enter
je
dec
mov
jecxz
cmpsl
pop
sti
scas
sti
test
lea
mov
testb
rolb
xchg
shrl
shll
jb,pt
mov
js
scas
pop
push
arpl
adc
push
jp
mov
xchg
jo
add
sbb
push
sbb
push
into
repz
cld
repz
fldenv
sti
sti
dec
cs
js
inc
pop
xchg
popa
mov
mov
std
mov
lcall
mov
pop
dec
pop
add
mov
in
sbb
adc
and
push
out
or
add
aas
loope
shll
ja
lock
stos
cmp
jnp
call
fdivrs
mov
addr16
push
add
inc
je
out
hlt
inc
push
xchg
popf
dec
sbb
add
out
mov
push
jb
inc
lea
loope
loopne
pop
cmp
aad
adc
popa
sbb
mov
lock
dec
lret
leave
out
inc
push
jnp
stc
push
mov
ljmp
jae
jae
shll
sbb
push
stos
push
adcl
add
leave
dec
or
outsb
dec
xchg
sub
fsubp
lods
or
mov
inc
mov
outsl
or
call
sahf
into
and
inc
cmpsb
cld
cmpsl
push
pop
movl
mov
ljmp
or
mov
cld
jae
mov
pop
popa
cmc
push
fcmovne
mov
call
frstor
aad
out
loop
mov
fildl
sbb
loope
imul
lds
repnz
xorl
inc
or
mov
push
out
xchg
ljmp
jp
out
shrl
mov
call
inc
fimull
pusha
gs
mov
sub
lods
push
cmp
clc
and
adc
inc
sbb
fists
out
xlat
stos
lea
mov
out
insb
push
sub
mov
xchg
inc
out
fimull
sbb
pop
and
pop
dec
push
inc
orb
mov
lea
and
add
push
sub
jbe
aad
or
or
mov
cmp
xchg
push
movsb
addr16
xor
add
dec
stos
jb
imul
lock
mov
in
loope
mov
or
loop
fcompl
adc
mov
cmp
scas
or
std
jle
iret
push
scas
pop
in
pop
aad
popa
icebp
dec
jno
inc
icebp
xor
test
mov
cmp
sub
bound
mov
notb
sbb
repz
lret
testb
outsl
out
push
and
into
scas
imul
sbb
jae
mov
fisubs
mov
xor
test
lods
cld
popf
mov
jge
lods
and
shl
ljmp
pop
nop
or
daa
jp
fidivrl
dec
jp
mov
xchg
outsb
fsubs
out
ret
aad
push
inc
mov
into
sbb
movnti
les
inc
loop
xchg
stc
pop
lcall
mov
pop
mov
cmp
sbb
pushf
push
push
mov
pushf
mov
imul
testl
jbe
notl
or
shlb
cmp
shlb
out
dec
shlb
je
rcrl
sbb
enter
dec
bound
mov
mov
sti
inc
mov
popf
pop
insl
jl
cmc
mov
in
jnp
or
fsubl
jl
xchg
daa
inc
mov
je
data16
mov
cmp
es
test
in
lret
dec
and
fisubrs
fsts
cmp
mov
cli
outsb
inc
test
cmc
andb
leave
xchg
cli
push
adc
test
mov
jmp
test
sub
loopne
lods
or
repnz
pop
inc
mov
jmp
xchg
sahf
jecxz
pop
or
or
cld
scas
or
daa
ds
test
mov
mov
leave
sub
sbb
mov
mov
cmp
cmpsl
lret
in
les
outsb
xchg
popa
jae
out
repnz
ljmp
mov
pushf
lret
lcall
push
xor
imul
mov
ret
in
mov
dec
fdivl
stc
pop
shl
shrw
or
sti
stos
lods
jp
out
lcall
popf
icebp
dec
and
ret
adc
or
std
mov
inc
adc
mov
mov
and
lods
hlt
jmp
mov
jae
jns
push
jl
pushf
fbstp
push
insb
or
test
xchg
test
scas
sbb
fwait
or
lods
repnz
pop
push
mov
les
mov
call
ffreep
icebp
mov
mov
jae
cmpb
and
and
cmc
adc
dec
js
xchg
fidivs
sarb
in
sbb
test
push
in
mov
fmul
add
sbbb
mov
into
inc
rcl
xchg
icebp
into
xor
mov
call
hlt
xlat
loop
mov
sbb
ret
push
mov
mov
mov
xor
es
cmp
adc
aam
pushf
xchg
test
adc
mov
shlb
inc
sbb
ja
cmc
inc
fldl
mov
push
jl
inc
lret
cmp
into
pop
mov
es
fiadds
add
mov
pop
dec
imul
mov
pop
sub
test
or
cmp
push
mov
in
lret
shl
inc
leave
add
cwtl
rcl
or
pop
push
sbb
les
ds
xchg
mov
xchg
jp
leave
cmp
int
cltd
mov
fldenv
mov
repz
in
or
mulb
into
mov
inc
cs
mov
jo
cs
fbld
cld
in
popl
mov
scas
jno
xchg
mov
jmp
cs
jbe
aam
add
lret
sbb
sarb
or
push
and
dec
mov
xchg
imul
lods
dec
cli
adc
ret
push
std
outsb
in
les
test
cli
outsb
loop
xchg
scas
mov
add
jmp
mov
es
shll
add
cmc
call
xchg
mov
cmc
sub
insl
add
fists
mov
xchg
or
into
int3
push
in
cltd
test
adc
push
rcrb
jmp
adc
xchg
shr
sub
in
std
es
into
jno
push
pop
mov
dec
fwait
inc
pop
dec
jecxz
sub
cs
test
push
push
push
jg
mov
fs
filds
jnp
cli
jge
xor
xchg
inc
add
pop
push
insl
mov
cli
xor
inc
inc
rcll
and
add
dec
out
inc
fdivrs
in
fdivs
hlt
imul
push
scas
or
cmp
mov
jmp
sub
mov
lods
aas
cmpsl
dec
pop
push
jl
mov
pushf
push
out
xor
dec
in
xchg
jp
in
or
xchg
popa
mov
cmp
and
repz
test
push
mov
xchg
leave
mov
aas
inc
add
cmp
cld
cmp
cmp
sarl
test
aad
into
sub
ret
pushl
adc
loope
or
push
pop
inc
adc
shrl
push
inc
mov
sub
aad
mov
jns
and
lods
jecxz
pop
aam
and
mov
icebp
xchg
add
push
popf
scas
das
repz
pop
popf
fldcw
cmpsb
pushf
dec
xor
mov
pop
cmc
inc
sbb
ret
jne
xchg
idivb
pop
pushf
fadds
call
adc
jbe
js
inc
fisubs
cmpsb
and
aas
dec
int
push
jmp
std
nop
push
js
enter
and
push
jle
mov
and
xor
add
clc
xor
fwait
sbb
inc
sbb
stos
or
out
iret
insb
in
jno
pop
and
ret
lods
movsb
roll
fs
dec
repnz
mov
outsb
add
sbb
lods
out
sub
loop
mov
aas
cmc
fisttpl
mov
pop
mov
or
inc
subb
pop
std
sbb
fcmovnbe
fs
sbbl
test
cmp
rol
push
int3
push
iret
xor
js
sub
mov
cmc
es
mov
push
cli
out
loop
xchg
cmc
insl
subb
push
loopne
popa
push
inc
pop
push
mov
adc
fisttpl
in
repz
rclb
stc
add
iret
jmp
addr16
jge
subl
cli
and
push
loopne
push
call
leave
adc
lock
loop
ret
jbe
in
mov
mov
xor
mov
dec
orl
outsl
cs
or
mov
mov
loop
mov
movsl
je
js
adc
mov
pop
les
push
scas
add
sbb
inc
xchg
jns
dec
xchg
aam
push
xchg
in
pop
cmp
sub
shl
pop
push
subl
pop
mov
aas
add
mov
push
stc
shrb
inc
sub
xlat
orl
fcomp
inc
sub
imul
dec
popf
pop
pop
imul
sub
and
incb
lret
xor
test
and
aam
push
jb
stos
sti
and
sti
add
aas
stos
add
xor
lret
sub
loope
pusha
inc
push
mov
dec
scas
icebp
movsl
jns
les
mov
fisubrs
fldz
clc
xchg
stos
daa
dec
push
jno
lret
repz
lret
dec
ffree
in
sub
xor
aas
je
out
xor
lods
mov
xor
add
rcr
popf
pop
mov
jl
lds
xchg
mov
sbb
shl
pushf
push
and
fwait
outsb
outsl
addb
mov
and
mov
add
pop
lret
aam
xchg
cmp
push
std
fsubs
sarl
mov
stos
shlb
out
loopne
popa
and
pushf
pusha
out
pop
je
sti
and
and
je
rcrl
fisubs
push
mov
clc
inc
or
je
push
mov
scas
lret
mov
fsubrl
imul
or
fmull
inc
loopne
jp
xchg
fcmovnbe
fildll
sub
add
mov
mov
pop
xor
mov
xchg
movsb
fldcw
popf
hlt
xchg
cmp
dec
cmp
or
mov
sti
push
sub
fcompl
xor
sarb
lcall
cli
fwait
push
pop
repz
or
cmp
sti
aad
inc
popa
fcomps
jle
loopne
sbb
imull
ret
stos
leave
sbb
es
sbb
mov
fsubrs
and
rolb
xchg
loopne
ss
inc
ljmp
aad
and
in
mov
push
int
outsl
out
cmp
xchg
loope
es
adcl
std
dec
pop
xorl
fld
fwait
cmc
bound
and
pusha
dec
fwait
add
inc
inc
cs
call
pop
inc
jp
in
and
jg
pop
js
cmpl
sbb
pop
pop
mov
adc
in
jnp
mov
push
int3
xchg
jecxz
or
outsb
mov
aam
loopne
insl
mov
jle
das
in
pop
sahf
mov
lock
pop
aam
jg
loopne
adc
mov
movsl
shlb
jnp
call
dec
aaa
negl
jecxz
and
js
incl
das
and
std
mov
leave
mov
push
das
scas
cmp
inc
rcl
aam
std
mov
mov
mov
into
sub
stos
pop
push
dec
lcall
sbbb
or
pop
xchg
cmp
popa
push
scas
push
pop
xlat
or
inc
sbb
or
out
mov
pop
sub
push
adc
adc
cmp
icebp
jne
ret
jl
mov
out
cli
xchg
test
jnp
cwtl
xchg
adc
fs
xchg
jecxz
inc
push
shl
xor
xor
mov
lret
sbb
stos
sbb
and
int3
xor
popl
xchg
jns
loop
cmp
shlb
jns
les
aam
mov
mov
inc
xchg
mov
inc
push
jg
lahf
ds
lret
aam
pop
imul
lods
and
sbb
ja
xor
inc
in
pop
sub
int3
pop
dec
repnz
jp
xor
lods
and
adcl
inc
call
pusha
inc
nop
in
adc
imul
jl
dec
mov
xorb
push
xchg
mov
push
icebp
test
insl
rcll
dec
ja
outsb
lahf
mov
mull
decl
push
test
jmp
sbb
push
lods
or
into
sub
cmp
mov
push
les
in
dec
stos
test
or
popa
test
push
inc
call
mov
pusha
xchg
mov
adc
stc
add
cmp
scas
popf
les
add
loop
pop
sti
movsb
popw
adc
fwait
js
cltd
in
insl
dec
dec
xchg
jecxz
mov
pop
inc
mov
mov
sub
add
or
mov
and
lea
inc
int
push
js
add
adc
test
lcall
mov
clc
sarb
es
mov
call
lcall
dec
dec
inc
push
mov
jle
push
popa
iret
lret
addr16
sub
int
rcrb
pop
or
dec
xchg
jb
push
inc
fdivp
lret
cli
repnz
and
pusha
cli
push
popa
ret
out
fdivrs
ret
adc
pop
mov
fwait
lods
mov
or
rclb
jp
mov
aas
lds
mov
xchg
sbb
push
jnp
lret
mov
jne
push
cltd
push
jp
into
sub
jmp
aam
cmp
mov
call
shl
sub
or
outsb
or
and
mov
inc
and
dec
sbbl
pop
xor
roll
in
inc
jne
cld
inc
mov
cmp
cmp
popf
imul
mov
in
mov
xor
inc
sbb
jbe
adc
mov
call
push
clc
add
ljmp
jmp
sbb
or
mov
mov
movsb
xor
insl
or
xchg
adc
ja
xchg
or
xchg
arpl
or
fidivl
fisubrs
xor
sub
out
and
mov
mov
xor
push
jmp
je
jb
test
push
jmp
xor
cmpsl
decb
rcrb
es
or
leave
fbld
push
in
adc
fidivs
cmp
mov
fxch
inc
roll
fimuls
sub
fiaddl
inc
test
pop
cmp
outsl
jg
aas
jb
stc
inc
rclb
fcom
and
dec
pusha
push
pushf
mov
popa
lahf
xlat
test
sahf
fdiv
ret
inc
adc
fsubrs
dec
adc
sbb
lods
sub
pop
shr
jge
into
inc
xor
aaa
pop
orb
and
aaa
pop
sub
xchg
add
les
sbb
cmp
pop
fistpll
lret
sub
sub
jecxz
sub
fsubrs
dec
mov
ss
dec
iret
push
or
arpl
lcall
repz
add
sbb
loope
stc
lret
cmpsb
jecxz
xor
mov
pop
rolb
jo
shrb
fucom
js
cmp
mov
loope
add
das
icebp
lcall
jnp
out
adc
adc
leave
lock
push
je
std
popf
jb
sti
pop
stos
fcomip
cmpsb
sbb
int
aaa
into
jbe
jmp
cwtl
scas
jl
cwtl
lea
adcb
xor
inc
movb
mov
xor
pop
cmpl
fs
xchg
scas
cmp
pop
in
lock
push
adc
fs
mov
xlat
data16
cld
aad
in
ds
or
or
test
add
or
add
ror
adc
mov
fsubrl
adc
pusha
iret
gs
jecxz
jno
mov
xchg
ljmp
sbb
fisttpll
push
mov
ja
lret
xor
or
mov
and
nopl
jns
scas
or
jge
repnz
add
test
mov
push
repnz
mov
xorl
out
cmp
orl
jo
or
jecxz
ljmp
mov
mov
push
push
lahf
neg
jl
daa
mov
mov
ds
cmpsb
jecxz
std
inc
stos
lcall
lret
je
pop
xlat
dec
lea
mov
sbbl
sub
jle
pop
xor
xor
testb
in
jp
add
iret
push
sub
sub
or
dec
mov
sbb
lcall
test
xor
stos
stc
mov
popa
int3
mov
pop
xchg
push
adc
pop
pop
imul
add
shrb
mov
mov
xchg
mov
xor
pop
test
sub
or
fscale
push
test
fisttpl
jnp
adc
push
pop
mov
pop
pop
fstps
sub
pop
lds
cmp
aam
push
sbb
into
out
test
dec
mov
stos
pop
sub
xlat
es
outsb
out
aaa
iret
add
cmpsb
imul
jmp
bound
jmp
pop
jnp
pop
jge
dec
nop
fcmovbe
push
xchg
decb
arpl
sub
fnstenv
mov
aas
push
addr16
aas
rcrb
or
ret
jmp
adc
sbb
mov
xlat
mov
mov
data16
and
xor
xchg
mov
mov
jne
dec
out
clc
jb
das
lcall
jmp
cltd
push
cmpsl
mov
jae
sbbl
mov
loopne
test
push
orb
or
div
rclb
in
pusha
jge
fwait
gs
js
jecxz
mov
mov
add
popa
ret
int3
pop
loope
call
fwait
pop
jo
dec
and
xchg
mov
insl
mov
sub
in
int
xchg
in
rcrl
int
inc
in
popa
mov
lods
pop
out
test
repz
mov
xor
mov
ds
fadd
xchg
mov
cmp
jo
lahf
dec
xor
mov
insl
xlat
ss
in
ret
sahf
dec
jns
sti
xchg
movsl
lea
data16
adc
push
mov
cmp
test
rcll
sbb
xor
fisubrl
xchg
xor
loop
push
and
sub
jecxz
loop
lret
ja
sbb
push
insl
js
lock
lret
push
cmp
mov
aaa
jne
fildl
jo
shl
pop
pusha
aad
cli
testb
jg
xchg
aas
cmpsb
mov
aam
jnp
mov
xor
rcl
xor
sub
aad
sbb
pop
or
xchg
loopne
fstpt
aas
fisubs
in
mov
add
in
ds
stos
in
mov
push
test
fcom
jl
test
stos
jbe
jb
sub
popf
push
jnp
add
ret
xchg
dec
data16
roll
add
in
mov
push
fwait
sbb
lret
cmpsl
mov
lcall
jle
inc
mov
jge
sti
jp
jne
push
xchg
out
aaa
sub
xchg
test
and
adc
mov
push
lahf
aad
xor
mov
push
inc
mov
and
cld
inc
movsl
pop
pop
mov
icebp
xchg
into
fildll
add
test
jb
ja
dec
sub
addr16
repnz
jl
xor
lahf
mov
bound
les
xchg
dec
test
push
in
mov
aaa
inc
jno
shll
stos
jmp
mov
fisubl
mov
scas
jle
or
push
testb
lcall
stos
test
push
mov
push
mov
mov
outsl
push
pusha
iret
outsl
loop
mov
pop
cmpsl
mov
stc
bnd
pop
push
xchg
push
mov
cmp
inc
js
orb
mov
mov
out
out
mov
mov
jmp
sub
jp
jno
test
lods
aam
mov
mov
lds
mov
xor
xor
adc
lods
jae
repnz
mov
mov
mov
movsb
das
pop
pop
push
push
or
sub
inc
push
sub
mov
mov
push
cmp
aad
fnstcw
cmp
fwait
enter
pop
cwtl
mov
iret
popa
inc
add
fstpt
ror
jg
jge
push
outsb
sahf
cmp
imul
dec
icebp
cmp
lcall
incb
mov
xchg
jns
push
jg
mov
ss
inc
xchg
jo
roll
lock
cmpsl
out
xchg
mov
xor
enter
cltd
fldl
pop
into
and
aaa
jnp
fs
pushf
mov
lods
xchg
mov
test
cmpsl
fs
jo
out
cmp
rorl
jbe
add
loopne
mov
xchg
add
inc
imul
and
in
push
mov
pop
movsb
or
sub
mov
into
mov
jae
inc
in
and
rcll
mull
mov
fcmovnu
andb
xchg
int
xchg
push
dec
aad
mov
in
lcall
lds
sbb
cli
psubusw
jbe
mov
std
cli
lock
inc
stos
jecxz
push
mov
cmp
cmp
sbbl
mov
or
bound
xchg
push
inc
gs
enter
je
sahf
push
pop
lods
mov
xchg
or
enter
mov
jl
xor
push
mov
push
xlat
hlt
xchg
lea
ret
cmp
movsb
sub
mov
repz
and
xor
mov
adc
pop
aaa
xchg
or
cmp
das
in
jb
enter
xchg
rorl
imul
cmpsb
add
ljmp
outsl
scas
outsl
mov
faddl
mov
adc
xor
out
scas
push
clc
dec
lods
scas
js
aaa
orl
fs
pop
xlat
push
test
pop
or
and
or
clc
lret
xchg
enter
stos
inc
das
inc
lods
stos
scas
inc
mov
ss
push
cli
ljmp
call
cmpsl
xorl
mov
mov
or
mov
frstor
jmp
das
loopne
push
std
icebp
adc
cmp
dec
cmp
lret
loopne
arpl
mov
add
lds
jl
imul
das
stc
mulb
or
cs
pop
sti
sub
sub
jg
and
sub
mov
jae
sub
gs
mov
jle
inc
xchg
inc
cmp
sbb
cmp
inc
mov
sahf
sti
loop
imul
adc
dec
pop
fidivs
cmp
push
repnz
loopne
jbe
popf
mov
dec
mov
inc
cltd
les
push
push
rorb
and
add
adc
cs
cmp
lds
inc
loop
push
andb
pop
outsl
test
or
popa
repnz
adc
stc
out
push
call
pushf
call
cmpsb
ret
or
jp
pop
mov
insl
or
cmpsl
repnz
sub
mov
sarb
btr
sbb
inc
mov
lods
jl
dec
xor
adc
arpl
insb
jl
xchg
jl
lret
insb
inc
cmpsl
lods
and
imul
or
xchg
in
repnz
inc
add
inc
add
sub
mov
testb
enter
pop
push
mov
aad
sub
lahf
jbe
jno
loop
addb
cs
and
int3
jno
or
and
jge
nop
or
dec
inc
adc
ret
cld
rcrl
push
add
and
fsub
xor
mov
mov
stos
jnp
inc
add
mov
test
sub
jl
subb
cld
subb
in
loopne
xlat
adc
adc
mov
pop
jg
sbb
sbb
pop
sbbb
push
inc
add
push
dec
mov
sti
jns
dec
xchg
and
repnz
sub
or
gs
mov
ss
mov
cmpsl
add
xchg
mov
sub
inc
pop
fbld
push
sub
arpl
iret
xor
jbe,pt
push
xchg
pop
cwtl
lds
pop
ret
jecxz,pn
xchg
cmp
push
jge
lret
mov
mov
je
adc
iret
xchg
adc
pop
iret
add
repz
lods
lret
pushf
cmpsl
adc
inc
arpl
xor
clc
adcl
dec
and
mov
js
sub
aas
sbb
pushl
and
aaa
in
daa
gs
or
out
test
and
fmulp
add
mov
out
sub
mov
adc
in
lahf
mov
inc
das
not
sbbl
int3
outsl
sbbl
js
pop
cs
mov
je
and
jmp
lea
cmpsb
jb
enter
hlt
dec
add
and
dec
jns
rorl
sub
fstl
push
push
pop
push
push
jb
xlat
mov
data16
mov
out
cmp
cli
rcll
sbb
push
lds
fisttps
and
hlt
mov
popf
jl
and
icebp
mov
in
ret
dec
xchg
adc
andb
shl
add
cmp
decl
sub
push
loop
jno
pop
addr16
mov
mov
and
out
icebp
mov
or
movntps
xchg
rcl
push
jo
in
popa
push
fcmovnu
and
xor
inc
pop
jp
lds
cltd
pop
add
jecxz
sub
cmc
fs
sub
mov
fists
inc
stc
pcmpeqw
xor
dec
xchg
inc
mov
mov
sarl
sahf
cmp
jp
mov
add
fistpl
xchg
mov
add
pop
mov
in
lea
xchg
bnd
hlt
rcr
inc
pop
push
fs
mov
jnp
push
push
jl
or
jo
movsl
jecxz
mov
cmpsb
dec
subl
imul
lods
pop
jge
push
mov
push
shl
arpl
out
lret
repz
insl
xor
addb
adc
mov
test
mov
xchg
dec
fstpt
ret
jecxz
bound
adc
cwtl
out
add
mov
mov
jae
cs
sub
jne
xchg
ret
push
lahf
sbb
aas
jmp
jg
push
mov
loop
rcrw
js
orl
aaa
cld
sarb
lahf
jae
scas
std
mov
add
mov
push
pop
negl
fnsetpm(287
sub
xchg
mov
mov
mov
rcrb
cmp
cmpsb
lcall
push
out
lods
inc
jl
iret
sti
test
sub
cmpl
and
mov
and
sub
push
jle
icebp
test
sbb
out
dec
adc
in
scas
push
mov
mov
mov
adc
cld
mov
mov
jg
loop
dec
push
jnp
push
cld
and
popa
mov
sub
cwtl
lret
xlat
sub
pushf
out
xchg
sbb
mov
pop
faddp
or
cmpsb
adc
outsl
loope
gs
jp
jmp
sbb
jge
adc
addr16
mov
sbb
pop
repz
pop
push
std
es
mov
daa
shl
sbb
push
popf
ret
rcrl
mov
pop
lahf
and
pop
mov
push
gs
xchg
sub
repnz
mov
shlb
pop
xchg
pushf
fxch
fisubrl
adcl
sti
mov
adcb
or
icebp
out
push
imul
adc
cmc
xor
insb
pop
mov
mov
js
pop
jmp
lods
dec
mov
popa
mov
jge
add
cld
sbb
lods
ljmp
push
xor
ficomps
loope
jg
pusha
push
ret
mov
mov
xor
push
flds
dec
xor
mov
insl
dec
inc
push
add
jecxz
addr16
mov
sbb
pusha
movsl
movb
dec
mov
jne
dec
xchg
pop
lock
mov
lret
pop
stos
fildll
aad
stos
not
sbb
mov
pop
cli
push
jmp
xlat
mov
jno
lret
jp
dec
rorl
mov
les
push
pop
testl
repz
push
sbb
js
sbb
mov
push
xchg
sbb
pop
imul
js
add
rcl
lea
sub
ror
fldt
test
push
jo
hlt
inc
das
sbb
or
mov
or
mov
repnz
stos
push
add
lahf
push
adc
outsl
es
gs
push
fdivl
or
dec
sti
inc
pop
insl
lcall
into
inc
popa
aas
jmp
and
ret
sbb
pop
inc
inc
gs
cmp
cmpsb
int3
pop
sarb
rcrb
xchg
dec
jo
mov
test
cmpsb
inc
imul
vaddsubpd
inc
ljmp
add
outsb
jae
add
lock
aam
adcl
scas
xchg
xor
ljmp
sub
mov
outsb
dec
test
fcoms
test
fstps
mov
pop
push
xlat
push
loope
imul
call
pusha
call
mov
add
sub
stos
fsubrs
int3
cmp
test
lods
sub
sub
hlt
xor
sbb
out
vpunpckhbw
test
pop
sti
inc
das
std
popf
jb
pushf
lcall
stc
aaa
jmp
mov
pop
icebp
daa
popf
aas
shl
jne
sub
loopne
xchg
nop
aam
sti
lods
adc
ret
inc
push
fnstenv
lods
xchg
arpl
sbb
mov
cltd
push
dec
scas
push
xor
mov
scas
popl
popa
push
gs
sub
sbb
pop
das
daa
jp
pusha
pop
adcb
shl
repz
lahf
lea
aaa
push
or
movsl
jns
or
mov
sub
test
pushf
adc
sbb
mov
mov
xchg
jge
and
shll
fwait
adc
ja
sub
push
jle
scas
fisttps
xchg
lods
push
cld
cwtl
mov
dec
in
dec
lods
and
dec
ja
inc
pusha
repnz
pushf
in
jne
sub
push
push
lcall
enter
jbe
adc
ds
dec
sahf
mov
cmp
cmpsl
mov
leave
push
popf
sbbb
subl
cmp
insb
add
int
ret
adc
add
push
cmp
bound
rorl
out
outsb
push
lock
mov
mov
or
jmp
jp
sub
ficoms
aam
sbb
leave
cld
sub
or
sub
pop
jp
jbe
lahf
pop
pushf
lds
sahf
push
inc
jl
ret
lret
pop
ds
in
sub
ss
and
mov
movsb
pop
inc
punpcklbw
imulb
ljmp
ret
inc
inc
aad
dec
imul
mov
push
hlt
adc
nop
mov
mov
adc
dec
adc
leave
push
outsl
std
enter
aam
sub
xor
and
loop
push
cmpsl
jmp
loop
xor
mov
shll
call
mov
loopne
fwait
add
add
sti
mov
inc
movsb
pop
and
mov
stos
sahf
cmp
lds
push
pop
sbb
outsb
outsb
adc
call
fcmovb
sub
xlat
lock
js
out
scas
dec
cmp
adcb
in
cmpsl
add
add
push
dec
stc
test
loopne
adc
mov
mov
es
push
mov
mov
pop
enter
in
mov
push
mov
js
add
mov
out
fisttpl
xchg
iret
in
sbb
movsb
inc
fsubrs
inc
test
push
cmp
xor
in
test
sbb
cld
test
cmp
add
sti
push
add
xchg
or
adc
outsl
enter
shll
jne
fistpl
shrl
mov
stos
mov
mov
and
sahf
push
inc
loope
addr16
scas
fistps
xor
xor
xor
hlt
sbb
pop
enter
scas
jle
shl
addb
repz
add
push
test
inc
cmp
sub
mov
fcomp
sti
sub
imull
mull
scas
adc
xor
sahf
into
inc
pusha
rclb
xchg
push
add
adc
lock
popa
ficoms
addb
xor
fstp
decb
cmp
adc
dec
adc
mov
popf
fdivrl
add
seta
imul
ficoms
push
fwait
jl
lret
jl
cmp
mov
pop
push
dec
cmpsl
and
sbb
mov
fcoms
cld
gs
ljmp
jl
cli
xor
loopne
lods
addr16
dec
out
shll
mov
jno
cmp
in
jle
sub
into
nop
pop
adc
in
popa
xlat
xor
push
inc
sub
nop
mov
cmpsb
inc
aaa
or
mov
cmp
jb
xchg
pop
or
dec
xorb
push
imul
add
loop
mov
pop
lods
or
inc
rep
sbb
clc
xchg
mov
mov
insl
sti
pop
xor
mov
fisttpll
jecxz
out
push
test
inc
add
sub
add
gs
gs
add
xchg
movsb
mov
push
scas
pop
lahf
push
je
mov
xchg
test
fcoml
add
into
add
xor
dec
dec
lret
inc
or
jnp
pop
leave
rclb
inc
pop
sarl
jge
enter
xchg
leave
fstl
stc
outsl
pop
hlt
sar
inc
xorb
dec
add
and
fsubrs
fsubl
sub
pop
sub
lock
add
test
push
cmp
mov
xor
dec
jl
sbb
aad
or
imull
out
out
mov
xor
push
cltd
mov
movzwl
call
cmp
leave
cltd
jo
mov
inc
jle
jnp
addr16
loopne
aad
push
cs
and
adc
add
and
fdivr
lret
add
mov
fs
shlb
jmp
add
rol
mov
jns
imulb
outsb
stc
rclb
xor
iret
cmpsb
jl
cmp
jge
xchg
stos
nop
xchg
hlt
clc
sti
add
mov
das
jl
gs
mov
xchg
mov
cmp
mov
imul
dec
hlt
loope
aam
cmp
dec
and
scas
adc
mov
push
jne
adc
mov
aad
out
jns
adc
stc
xor
push
fnstsw
pushf
mov
negl
lsl
imul
mov
lea
in
mov
sar
sub
xchg
cmpsl
jb
jg
enter
adc
cwtl
jne
cltd
jae
jno
or
mov
cmp
call
push
jo
pop
and
inc
lock
jno
lock
loopne
out
sbb
adc
pop
sub
popa
jl
mov
push
mov
imul
aad
mov
inc
push
xchg
out
mov
or
stos
ret
mov
pushl
out
cli
add
jbe
cmpsl
cmp
pushf
push
dec
cld
mov
test
pop
mov
rcrl
xchg
sbb
push
mov
sub
clc
xchg
lret
cmp
aaa
adc
add
mov
xor
adc
mov
mov
fwait
decl
xchg
dec
mov
push
jno
xor
movsb
sub
dec
xchg
xchg
lahf
cs
mov
mov
push
pop
test
pop
inc
sub
cld
cmp
mov
insb
gs
jecxz
lods
sbbb
cmp
xchg
xor
aas
or
fwait
popa
push
xchg
pop
lods
stos
push
int
xchg
inc
pop
testl
adc
clc
ret
mov
mov
das
mov
sub
and
into
fildll
pop
les
or
fcmove
fimuls
sub
mov
add
pop
insb
outsl
pop
jle
add
mov
out
dec
jg
cltd
adc
loope
lods
sbb
movsb
fidivs
or
fwait
call
jno
clc
dec
popa
rcrb
pushf
xchg
xor
sbb
fcmovu
rolb
cld
jne
push
in
add
lock
adcl
fwait
add
inc
insl
or
jae
repz
fbld
or
pop
pop
adc
add
mov
lret
adc
les
pop
sbbl
stos
cmp
inc
popa
jecxz
lods
fsts
fildl
pop
push
sub
sarb
in
rorl
inc
cli
pop
dec
jno
ss
pop
pop
jo
mov
add
imul
push
xor
call
xchg
mov
sbb
pop
mov
cmpsl
repz
push
lods
cmp
mov
lcall
sub
and
or
push
inc
lock
mov
arpl
hlt
xchg
in
cmp
mov
mov
les
das
out
or
adc
das
jge
cmp
scas
stc
pop
dec
not
pop
push
jge
sub
push
sub
scas
push
testl
inc
mov
jecxz
push
add
push
mov
mov
sbb
cmp
mov
ss
jecxz
in
gs
fldt
in
ja
imul
lds
shlb
out
sub
pop
loop
test
adc
mov
rcll
mov
neg
dec
hlt
mov
mov
mov
cmp
adc
insl
pop
sahf
fs
dec
push
sub
outsb
mov
mov
mov
inc
dec
mov
pop
cmp
mov
daa
cmp
mov
sub
outsl
mov
loop
cs
mov
gs
cli
push
add
and
test
gs
idivb
mov
mov
and
cwtl
pusha
xchg
mov
or
xor
int
pop
pop
mov
lea
fcoms
inc
and
xlat
mov
sbb
jns
les
lcall
popf
stc
sbb
inc
mov
cmp
vinserti128
pop
call
lcall
sbb
ret
ds
addr16
loop
xchg
add
push
lret
roll
scas
inc
jo
xchg
out
xor
cmpsb
sbb
cltd
inc
rcrb
mov
cmp
cwtl
cmpsb
adc
mov
lods
inc
in
sub
or
repz
and
xorb
vpxor
push
jle
daa
and
mov
sbb
in
jae
add
out
pop
lods
xchg
negb
pop
dec
and
xor
mov
lcall
mov
inc
aad
pop
mov
out
inc
and
rcl
out
lods
enter
mov
psubq
out
mov
pop
andb
mov
xchg
push
movsb
ret
and
es
popa
dec
in
sbb
repnz
test
cmp
jb
sub
adc
push
lcall
nop
aaa
inc
or
test
cmp
cmp
insb
jb
imul
hlt
repz
xor
lea
inc
xchg
bound
cmp
sub
jns
inc
repnz
fmul
push
fsubrl
jg
lret
xchg
insb
aas
lods
stc
adc
or
sbb
icebp
mov
stos
lcall
dec
mov
lcall
pop
sub
js
sbb
shll
pop
and
rol
loopne
repnz
cmpb
aaa
xor
decl
cld
inc
xchg
cmp
das
sub
sub
fnstenv
aam
cmp
sbb
adc
je
sbb
pop
xchg
std
fcmovne
pop
in
mov
daa
pop
cmpl
pinsrw
pop
xchg
lods
mov
insl
addl
xor
in
mov
push
pop
loopne
mov
xchg
dec
add
in
ret
ljmp
enter
inc
and
pop
out
mov
rcrb
pushf
outsl
jnp
icebp
js
push
or
jl
push
add
clc
incb
sbb
roll
loopne
and
inc
iret
ret
repnz
mov
pop
cli
rcrb
xchg
mov
es
xor
dec
adc
jl
mov
pop
xorl
sbb
mov
push
pop
sub
subb
movsb
int3
mov
scas
bound
sti
add
inc
mov
pandn
or
add
mov
jecxz
hlt
nop
test
inc
cltd
push
jp
ljmp
cld
lock
sub
jg
test
push
cmp
mov
inc
xchg
shr
and
pop
sbb
pop
mov
mov
adc
xchg
and
mov
pop
mov
arpl
icebp
cmp
xor
call
jns
cmpsl
outsl
cmp
stos
or
mov
push
cmc
dec
cmp
dec
mov
cmp
fimuls
cmp
or
push
daa
sub
je
les
bound
adc
push
imul
andb
xor
lods
sahf
push
sarl
adc
jne
push
sbb
mov
sub
call
pop
pop
mov
xor
cmp
je
call
addr16
inc
jp
dec
imul
roll
add
xchg
mov
mov
sbb
mov
ds
add
jb
subb
xor
adc
int3
fisubrl
in
and
in
mov
pop
in
into
lret
push
repnz
repz
xor
pushf
loopne
jecxz
insb
shlb
int3
mov
and
int
xor
xor
jge
enter
xor
and
shrb
addl
add
lea
out
lods
and
rolb
inc
sub
mov
rolb
add
xor
in
cmp
in
insl
adc
aad
icebp
clc
ror
ljmp
xor
arpl
orl
sbb
xchg
or
mov
scas
loopne
push
sub
cmp
and
xchg
inc
sub
in
and
xchg
and
mov
and
push
int3
cmp
icebp
mov
fchs
adc
sbb
les
inc
xchg
leave
fisubl
mov
sbb
cld
jno
push
shll
out
mov
loope
pop
lds
cmp
mov
cmp
fbstp
inc
add
jecxz
mov
pop
push
mov
les
cmp
pop
mov
cmp
pop
shl
cld
or
cmpsl
pusha
mov
or
sub
shrl
and
data16
pop
and
outsb
inc
add
mov
test
mov
inc
push
push
push
dec
out
xchg
mov
xchg
mov
mov
test
lock
push
mov
int3
sahf
fisubs
mov
push
outsw
xor
lea
inc
xchg
mov
fsin
and
in
mov
loope
jo
outsl
sbb
aaa
test
in
arpl
dec
sti
mov
pop
and
adc
pop
je
fistpll
cli
adc
cmp
out
scas
ja
scas
fildll
xchg
popa
mov
mov
xchg
xor
push
dec
cmc
into
cmp
shrl
add
mov
fnstcw
ret
push
and
ss
in
jge
jecxz
dec
jg
dec
or
mov
lcall
adc
adc
inc
fmull
pop
mov
xor
and
out
xchg
sbb
repnz
xor
aad
mov
push
mov
fwait
xchg
xchg
cmp
fcmovnu
out
mov
push
and
jmp
clc
cmp
or
cmp
out
sahf
leave
lods
dec
mov
fs
pop
shlb
mov
out
xchg
mov
or
std
lcall
test
mov
fcomip
insl
jns
test
mov
in
push
push
inc
dec
clc
xchg
lods
icebp
sub
je
test
mov
mov
test
in
adc
movsl
mov
xor
mov
mov
gs
call
pop
rol
aaa
adc
inc
test
imul
push
pusha
inc
ret
or
sti
roll
mov
lahf
repz
idivl
aad
xor
add
mul
js
aam
jl
cld
nop
xorb
adc
xchg
and
testb
mov
jmp
sahf
xchg
test
in
inc
jle
or
cld
scas
addr16
les
ljmp
sub
push
push
shl
mov
adc
test
and
inc
sub
test
cmc
add
add
pop
fwait
rorl
push
test
imul
inc
sub
dec
cmp
jo
push
xor
push
js
push
xchg
loop
jnp
lods
into
dec
fdivl
add
sub
mov
and
mov
sbb
aam
push
mov
mov
mov
outsl
adc
orl
fiaddl
mov
insb
jg
test
cmpsb
popf
or
pusha
push
cmpsb
sbb
lcall
sbb
mov
mov
aaa
stc
inc
aaa
dec
sub
sub
inc
xor
repz
outsb
jecxz
mov
mov
add
mov
cmp
repnz
pop
mov
cmp
mov
into
jns
rcrb
jbe
mov
sub
jmp
dec
pop
push
sbb
lret
cmp
pop
scas
sti
add
outsl
pushf
maxps
fwait
mov
ret
pop
loope
lahf
dec
sub
inc
fs
mov
lahf
in
pop
cmp
mov
lds
int3
inc
jne
cmp
fdivrs
push
mov
mov
adc
xor
cld
les
jp
fcoms
and
shlb
and
lods
out
mov
ret
ret
xchg
stos
pop
mov
cmc
mov
sub
test
cli
mov
outsb
aad
scas
or
pop
mov
lcall
test
cmpsl
ja
iret
pop
neg
sub
push
push
mov
loopne
aaa
out
mov
and
sbb
test
push
pop
popa
sub
dec
add
in
push
cmp
dec
cs
outsl
fsubrs
loope
xchg
in
sbb
andb
shrb
hlt
adc
cmp
adc
repz
pushf
lods
cltd
dec
fbld
lea
mov
int
pop
hlt
pop
int3
sub
clc
xchg
xor
and
sub
jmp
in
jl
in
push
popa
sbb
xor
pop
mov
add
mov
inc
or
sub
icebp
nop
js
incb
addr16
pop
daa
pop
dec
pop
inc
push
cwtl
jae
imul
add
ds
sahf
push
inc
mov
inc
lea
mull
ffreep
cs
mov
inc
cmp
cmpsb
jp
popf
sub
sbbl
inc
out
jbe
inc
loopne
nop
cltd
pushf
fbld
addr16
mov
clc
and
dec
out
mov
shll
cmpsb
sbb
or
les
gs
mov
aaa
dec
das
imul
shrb
xchg
sub
fwait
adc
inc
adc
mov
imul
shld
pop
mov
out
inc
cltd
std
popf
sbb
fwait
xchg
dec
cmpsl
scas
bound
sarl
adc
mov
pop
mov
jae
out
mull
and
pop
ret
aas
repnz
pop
push
xchg
das
pushf
dec
test
fistps
xor
mov
adc
lahf
pop
mov
cli
cmpl
sbb
push
addr16
outsl
add
cltd
outsl
jmp
repnz
or
xor
dec
cld
sbb
jmp
in
xchg
je,pn
test
sbb
pop
pminub
addr16
push
jno
push
pop
movsb
sbb
jnp
inc
dec
mov
es
jb
movsl
xchg
aas
aad
cmp
mov
in
xchg
nop
cmp
jnp
nop
arpl
xchg
jno
and
sub
and
dec
divb
sti
imul
retw
ds
mov
dec
sbb
inc
add
add
jbe
or
pop
sbb
loop
adc
leave
call
adc
rolb
push
xor
pop
sbb
mov
xor
out
pop
test
sbb
lret
inc
stc
mov
mov
mov
ret
mov
fs
repnz
ret
adc
pusha
icebp
shll
pushf
outsb
gs
pop
push
lods
mov
pop
stos
pop
pusha
sub
and
lods
ljmp
xchg
xor
xlat
mov
cs
lds
cmp
cwtl
inc
jbe
adc
push
gs
lods
xor
adc
mov
lods
lret
lahf
cli
or
mov
mov
arpl
mov
fdivrs
js
xor
mov
pushf
xor
scas
pop
xlat
pop
out
test
sbb
dec
pop
xchg
or
js
jecxz
push
push
push
mov
loopne
call
pusha
inc
das
sub
xor
dec
insl
fstps
push
adcb
cmpsl
xlat
lea
lret
bound
cmpl
add
mov
jo
cmp
add
or
mov
mov
push
rcrl
mov
out
leave
adc
fdivl
or
icebp
mov
inc
xchg
pop
int3
xor
add
jp
mov
out
pop
stos
test
inc
mov
test
das
xchg
pop
out
dec
xchg
mov
adc
stos
test
and
jne,pn
es
dec
leave
pop
pmaxsw
test
rcl
rorl
sub
or
ja
outsb
or
dec
das
jns
int
mov
add
fnsave
pop
popf
aad
inc
mov
movsl
fsubr
cli
sub
push
loope
int3
inc
mov
dec
shll
pusha
jle
loopne
push
dec
out
fucompp
nop
push
and
and
aaa
fldt
lock
xor
push
sub
sarl
call
mov
popf
daa
xchg
std
sbb
pop
fcomps
js
pop
pop
fmull
inc
je
das
add
lea
sub
frstor
mov
push
or
mov
sbb
imul
aam
or
shrl
xchg
sub
adc
jg
cmpl
notl
dec
cmpsb
mov
push
inc
in
add
pop
adc
imul
sub
mov
imul
mov
jl
mov
in
icebp
nop
dec
push
shl
jb
mov
sub
sbb
lcall
adc
hlt
and
mov
mov
mov
pop
mov
stos
push
jecxz
inc
xchg
lock
adc
inc
ljmp
dec
jmp
jecxz
gs
cltd
cmp
push
xlat
mov
enter
sbb
inc
and
sti
rolb
adc
test
loop
pop
je
or
jno
adc
sbb
cmp
mov
data16
dec
mov
mov
mov
into
es
adc
call
xchg
cmp
or
adc
sarb
and
and
lods
repnz
jl
sbb
cli
adc
test
insl
lret
insl
insb
xor
and
mov
test
fwait
cmp
pop
rcrb
mov
sbb
or
add
jno
fsubr
inc
push
fdivl
mov
mov
adc
ror
pop
fwait
jp
fwait
roll
jno
outsb
pushf
jle
jne
popa
outsl
xor
mov
xlat
scas
push
cmpsl
dec
inc
lds
sbb
jp
loope
aas
les
scas
sbb
lds
in
inc
icebp
pushf
pusha
and
jmp
fidivrs
and
idivb
sahf
lret
inc
pause
rcll
rorl
dec
inc
mov
mov
or
xchg
sbb
jmp
not
mov
mov
adc
movb
das
xor
mov
pop
jg
mov
lods
movsl
mov
inc
jne
cmp
inc
das
scas
bound
movsl
cmp
aam
cmp
imul
push
stos
test
aas
mov
and
jle
scas
loop
pop
filds
cmp
cmp
mov
rcrl
aas
cmpsl
mov
jns
jmp
sbb
out
icebp
pop
stc
xchg
mov
dec
stos
mov
mov
jbe
scas
lds
mov
mov
fwait
out
cmp
xchg
adc
adc
mov
jmp
jnp
ds
add
pop
inc
mov
pop
mov
test
mov
cmc
inc
daa
icebp
push
sub
test
and
arpl
fldt
jns
jns
notb
jge
sub
test
dec
test
fidivrl
adc
push
int
sub
rorl
jo
cmp
decl
dec
add
pop
add
outsl
inc
in
xchg
test
outsl
pop
and
lock
add
in
push
dec
cmpsb
xchg
or
loopne
adc
push
movsl
call
push
mov
mov
int3
fcomps
mov
ret
cltd
mov
xchg
ja
push
and
pop
add
fcompl
adc
lret
lret
and
or
lahf
adc
push
xchg
mov
xchg
adc
imul
add
mov
mov
fidivs
cltd
adc
sbb
pop
loope
loopne
enter
xchg
sbb
enter
mov
fcom
jb
cmp
jecxz
dec
ja
jno
push
movsl
dec
imul
push
push
pusha
repnz
inc
sbb
xchg
and
sub
mov
xor
xchg
out
ficoms
ret
jbe
shrl
repnz
dec
pop
push
popa
mov
addr16
pop
jnp
popf
mov
adc
jnp
jecxz
cli
xor
cmc
xor
scas
loop
lods
aad
sbb
adc
pop
aam
cld
cwtl
cs
stos
jb
xor
xor
mov
mov
mulb
dec
sbb
aam
xor
add
push
lods
inc
arpl
push
xchg
sahf
imul
adc
in
data16
add
mov
jmp
push
jbe
inc
aam
outsb
jae
push
add
les
jp
sahf
shrl
das
sbb
daa
pusha
pop
mov
add
lea
dec
dec
mov
add
ss
enter
inc
fdivrs
jmp
jecxz
mov
dec
dec
lahf
mov
movsl
xlat
out
stc
pop
pop
push
and
push
push
int3
xchg
add
cmp
pop
xchg
aad
out
push
mov
mov
les
out
std
movsl
ret
flds
mov
ss
adc
xchg
in
mov
and
lods
hlt
xchg
shrl
scas
inc
push
pop
add
mov
cmc
call
aas
jbe
imul
je
repz
in
repz
in
jbe
mov
cmpsb
add
loop
cmp
testb
fwait
inc
dec
inc
cmp
dec
cmp
push
sbb
pop
data16
jg
inc
ss
test
test
pop
xchg
dec
lcall
mull
sti
xchg
mov
scas
xor
imul
adc
and
jle
fisubs
add
or
popf
mov
cld
add
or
mov
jns
les
call
mov
sub
sub
mov
imul
lods
push
xorb
fs
sahf
std
packuswb
test
jle
in
sbb
out
mov
dec
cmp
lcall
adc
and
and
xchg
mov
ret
mov
inc
shll
cwtl
dec
dec
cld
sbb
add
flds
movsl
imulb
notl
xchg
xor
lods
pop
sti
movsl
dec
add
mov
sub
or
pop
sub
push
mov
xchg
das
aas
das
push
cmc
push
cmp
dec
pop
and
incl
xor
icebp
push
popa
xchg
mov
adc
sahf
test
addr16
call
push
push
daa
gs
loop
std
icebp
jno
fildl
fs
inc
cmpsl
pop
nop
stos
ret
cltd
adc
sub
lds
out
cld
data16
push
push
insb
ja
cmp
lret
nop
xchg
jo
cmp
pushf
test
stos
cwtl
fstpt
fdivp
sbb
imull
adc
stos
mov
int
mov
and
insb
ljmp
clc
sbb
pop
add
shlb
ss
cmpsb
je
or
pop
lea
aaa
inc
movb
lahf
out
sarl
fwait
cltd
lahf
cltd
sbb
int
test
ljmp
jno
nop
cmp
mov
jp
add
fnsave
dec
daa
aaa
push
xlat
adc
mov
dec
and
loop
negl
push
mov
pop
inc
ss
enter
mov
mov
cld
mov
in
pop
sub
lret
xchg
lret
add
sbb
add
insb
out
stos
mov
xor
imul
inc
clc
push
sbb
inc
cltd
inc
push
mov
stos
push
aam
or
lods
cmpsl
jge
sarl
ret
cmp
mov
in
ret
pop
mov
test
or
sbbl
out
aam
cltd
or
adc
imulb
dec
xchg
pop
enter
add
pushf
inc
sbb
test
xor
dec
lock
xor
and
pop
cmp
cmp
add
push
pop
sti
mov
aaa
in
mov
xorl
in
xchg
or
mov
fistpll
cmp
add
mov
cmp
aam
jp
mov
sub
pop
xor
push
aaa
mov
jg
lock
aaa
add
cmp
or
and
sbb
mov
cli
pusha
add
lahf
ret
pop
sub
sub
pop
scas
sub
hlt
stos
pop
int
xchg
sub
rorb
adc
cmp
ljmp
sub
xor
in
add
jle
mov
jmp
mov
sbb
mov
xchg
inc
into
dec
xchg
pop
rol
cwtl
test
cmp
ss
pop
sub
push
push
mov
adcl
mov
xor
aas
in
fcoml
adc
shrl
das
cmpsb
inc
in
ds
test
test
jmp
dec
inc
test
cli
addl
and
xchg
in
cmc
test
nop
insl
and
pop
inc
push
es
mov
jns
push
scas
dec
div
cmc
mov
pop
mov
dec
sub
mov
sbb
sti
scas
aas
and
sub
mov
incb
testl
test
cmpl
xor
sarl
lea
sbb
pusha
push
mov
in
fcmovbe
push
mov
jge
aas
and
clc
sbb
int3
xor
and
lret
sbb
xchg
ljmp
cmp
pop
lock
mov
dec
xchg
xchg
dec
xchg
xlat
push
loopne
gs
outsl
jmp
stc
dec
xor
cmp
sbb
shlb
pop
push
ror
jae
jo
out
push
jno
into
pop
jp
arpl
sbb
sahf
inc
das
sbb
dec
cmpl
cwtl
and
leave
int3
add
clc
mov
lahf
mov
out
or
inc
shlb
call
iretw
insb
adc
dec
push
js
push
imul
insl
data16
push
jnp
lret
adc
loopne
sub
les
out
pop
sti
cmp
test
cmp
test
and
jo
in
dec
add
daa
inc
ret
jo
pop
das
out
or
ja
divb
imul
rol
xchg
jne
mov
jp
repz
dec
sbb
cli
imul
pusha
fwait
pop
ret
call
push
pop
and
or
dec
fcomp
or
scas
push
mov
dec
add
sub
fwait
inc
xchg
shl
push
xlat
ljmp
cmp
cmp
lds
cmp
test
add
mov
xchg
lcall
mov
es
outsb
pusha
cli
dec
pop
imul
or
outsb
mov
jp
mov
jg
lea
cli
add
or
inc
pop
sbb
cmpl
int3
nop
mov
push
out
fsubrs
ljmp
movsb
pop
xchg
lcall
mov
adc
adc
adc
sub
jae
mov
and
jns
mov
inc
int
mov
out
dec
rcrb
lcall
inc
mov
stos
aas
add
dec
mov
adc
stc
dec
movsb
ja
test
pop
aam
insb
test
and
dec
outsl
pop
mov
lods
pop
push
scas
lldt
add
outsl
sti
imulb
jns
pop
cli
test
push
dec
call
into
out
inc
cltd
xor
xchg
cld
push
lds
int3
sbb
xor
add
mov
push
jp
sub
cs
pop
push
pusha
jmp
in
sbb
mov
fwait
mov
sbb
mov
push
out
cmp
adc
in
jl
jb
fadd
mov
repnz
pusha
pop
scas
into
xor
ljmp
es
jb
push
hlt
scas
and
push
idiv
inc
or
pop
pushf
sub
pop
stos
incb
leave
icebp
out
xor
sub
pop
loopne
lahf
dec
inc
add
cli
shrb
scas
mov
shlb
jp
in
jno
push
sarl
jle
jb
inc
inc
lds
xor
in
and
adc
jne
sbb
sbb
inc
jle
adc
cs
push
dec
iret
sub
fsubrl
mov
mov
jecxz
hlt
push
psrlq
mov
add
pop
cli
stos
leave
icebp
dec
movsb
add
sub
js
cmp
xchg
jb
inc
sbb
les
xlat
xchg
xchg
mov
imul
adc
mov
inc
jge
jno
sub
xchg
rcrl
ss
ljmp
dec
xor
stos
popa
cwtl
jl
pop
dec
int
bound
inc
cmpsb
pop
cltd
mov
sti
sub
idivb
pushl
mov
rolb
lods
ret
rcrb
testb
lcall
mov
ret
mov
rcrb
scas
mov
inc
rcrl
cld
dec
aaa
sbb
sub
in
xchg
mull
jns
outsl
jl
or
cmp
scas
test
ds
sahf
jecxz
loop
insb
cmp
in
push
sub
push
push
aad
cmp
cmp
lock
push
adcl
enter
fcomip
push
lock
dec
jbe
out
push
hlt
inc
arpl
int3
and
xor
lahf
pop
xchg
int
imul
div
pop
mov
lods
insl
jmp
pop
shrb
aas
mov
lods
jne
pop
xor
or
out
pop
pop
inc
jns
dec
negl
mov
adc
add
mov
bndstx
dec
xor
push
xchg
sbb
or
pop
shll
in
lcall
xchg
push
dec
dec
ss
ss
test
jnp
adc
aad
or
mov
mov
push
mov
dec
cs
mov
push
scas
jno
mov
xor
dec
rcl
mov
das
dec
inc
aaa
mov
and
pushf
lods
nop
xlat
out
inc
xor
in
jae
fwait
es
popw
cmpsl
insl
inc
mov
testb
mov
leave
stos
rcrb
lcall
push
nop
push
test
adc
jle
movsb
xchg
jae
shll
das
push
movsb
inc
push
xchg
and
test
aaa
jo
mov
mov
out
test
xchg
adc
shl
mov
js
shrb
gs
fisttpll
addr16
out
xchg
pop
aad
loop
addr16
sub
jae
pop
sbb
xor
ret
movsl
sbb
cmp
test
fs
repnz
mov
mov
add
push
leave
push
dec
xchg
rorb
mov
push
xchg
lcall
stos
es
stos
stos
mov
lods
dec
test
scas
cmpsb
dec
fbstp
mov
adc
fidivl
jns
push
and
lea
mov
pop
es
mov
aam
jmp
pusha
rclb
ss
push
xor
push
fidivs
out
mov
push
out
sub
mov
add
scas
jle
pop
jae
jnp
ja
inc
xchg
mov
cmpsl
cmp
aad
adc
pop
sti
test
repnz
inc
jbe
movsl
outsl
fcompl
inc
sahf
test
scas
cmpsl
ljmp
insb
mov
dec
pop
xor
shrl
inc
inc
push
or
add
aam
cmpsl
mov
pop
jnp
lret
andl
jp
inc
call
or
ret
xor
cli
testl
into
dec
not
es
in
sbb
movsb
in
or
jg
ret
in
movsb
rcrl
inc
mov
cmpsl
mov
loope
test
push
xchg
xchg
cld
push
xchg
repz
sub
pop
or
add
dec
pop
dec
enter
sub
dec
jne
rsm
or
je
xor
divl
enter
inc
out
mov
or
leave
mov
or
sub
push
push
xchg
mov
sub
mov
mov
and
repnz
and
fwait
cltd
loope
fistpl
loopne
js
mov
sub
sti
mov
decl
jb
adc
cltd
popf
sbb
lahf
decl
push
lods
lret
push
les
imul
push
out
shrl
or
test
negb
push
xchg
jle
push
push
imul
ret
cs
sti
cmpsb
nop
mov
jge
xor
xlat
xlat
adc
sbb
mov
pop
sbb
and
pushf
jns
pop
leave
das
xor
add
or
js
js
and
mov
icebp
add
jne
sub
mov
out
lcall
shlb
stc
cmp
xor
add
sbb
push
jle
xchg
adc
dec
das
sub
sbb
push
or
jb
or
decl
xor
scas
sbb
movntq
xlat
into
dec
pop
mov
mov
xchg
ds
mov
cmc
loop
dec
sbb
je
mov
mov
iret
lods
mov
notl
aad
stos
xchg
mov
ret
insl
mov
inc
and
dec
stc
repnz
sub
arpl
sub
fldl2t
mov
xorb
scas
dec
rcrb
daa
icebp
mov
pop
inc
add
shll
xor
sub
sub
mov
negb
test
jl
mov
bound
pop
divb
push
inc
sub
jbe
add
xor
int
xchg
test
adc
popa
mov
mov
jg
popf
add
out
jmp
pop
fisubrl
scas
pop
xchg
int3
pop
aaa
mov
lock
and
and
mov
cs
push
jne
mov
int
popf
pop
pop
mov
lcall
sbb
jl
ds
test
in
out
mov
xchg
pop
xchg
gs
std
mov
sub
sbb
or
inc
mov
jae
xor
mov
sbb
push
std
xchg
mov
aam
maskmovq
idivl
rclb
lcall
xchg
icebp
dec
dec
push
pop
push
dec
sahf
mov
in
xchg
andb
pop
sub
or
enter
and
and
je
xchg
js
adc
in
jo
cmc
sbb
or
loop
push
pop
or
fcompl
xor
aaa
jbe
cmp
sbb
outsl
std
sub
dec
in
adc
push
aad
les
outsb
ja
cmp
dec
jne
insl
dec
std
cmp
cmp
jnp
xor
dec
or
push
dec
dec
push
add
sub
cld
xor
push
pop
rcr
ja
scas
aas
xchg
cmp
cmp
int
adc
test
and
sub
outsb
icebp
adc
mov
aaa
mov
sub
lahf
push
scas
jp
xor
xchg
jp
ljmp
pop
fidivrs
xlat
mov
add
out
push
mov
sub
movsl
jl
jg
sub
leave
jmp
and
out
mov
and
movsl
das
test
cmc
lret
cmpsl
cmpsb
aaa
pop
or
pop
adc
mov
scas
cld
sbb
mov
cli
mov
lock
stos
dec
fiadds
cmpsb
pushf
fcoml
xchg
jns
loopne
ret
mov
in
in
sbb
sarb
nop
inc
add
sbb
mov
je
mov
mov
mov
outsb
push
daa
loope
leave
inc
mov
enter
mov
add
in
mov
pop
cmc
sub
push
push
sub
mov
push
adcb
add
dec
in
loopne
cmp
pusha
jno
outsl
fcomip
fwait
nop
aam
adc
fidivl
jne
and
rorl
jmp
aam
loopne
adc
mov
pop
mov
fstpt
push
jnp
lahf
loope
mov
shll
and
sti
push
mov
sub
jmp
lret
outsl
mov
add
scas
outsl
mov
sahf
je
fs
mov
sahf
or
fyl2x
add
pushf
fsub
jae
push
or
das
mov
sti
cmp
lea
sub
jnp
out
addr16
stos
adcb
dec
push
shll
test
and
pop
es
pop
fwait
lods
sti
cmpsl
clc
pop
test
aas
mov
aam
sti
mov
dec
scas
dec
add
aad
cmp
lds
test
popf
in
call
jmp
fldl
xchg
bound
cld
testl
cld
and
inc
push
in
mov
outsl
pusha
push
imul
in
fisttpll
sahf
das
inc
dec
lods
push
cmp
jae
cmp
or
hlt
and
push
push
icebp
fisttpl
xchg
cmc
dec
mov
out
sti
xchg
mov
adc
movsb
push
inc
push
flds
jl
les
arpl
dec
daa
pcmpeqw
ret
cmp
idivb
xchg
pop
lods
inc
inc
je
and
xchg
push
push
je
les
adc
xchg
cmpsb
ret
mov
adc
xor
jo
in
jae
gs
daa
movsl
mov
sti
out
xchg
ljmp
mov
call
pop
lods
push
mov
loop
jmp
dec
adc
fldenv
add
insb
into
xor
mov
into
inc
add
mov
jbe
sbb
push
mov
out
cmp
fnstcw
repz
mov
and
lds
ds
rcll
gs
jns
inc
test
inc
jg
mov
mov
in
imul
jl
in
push
cmc
and
jle
xchg
lret
test
mov
sbb
imul
mov
les
xchg
sub
mov
rcrb
je
pusha
add
xchg
adcb
mov
and
jl
fsub
mov
mov
sbbb
shrb
sbb
xchg
pusha
inc
movsl
into
adc
or
jns
das
mov
fcomps
adc
cli
es
lea
icebp
push
cmc
lret
xor
int3
outsb
jo
lret
push
inc
ds
in
jg
or
cli
add
and
fiaddl
addb
imul
scas
addr16
shlb
jnp
lret
inc
dec
jmp
add
test
iret
mov
xchg
mov
fstps
push
pop
imul
rcl
iret
fcoms
inc
call
jb
and
or
mov
add
xchg
adc
sbb
lea
sub
lret
mov
or
pop
sbb
test
notb
scas
shll
jmp
fisttpll
cmp
cwtl
and
ja
sbb
xchg
outsb
jb
or
pop
aam
jg
xor
sub
dec
add
stos
aas
inc
in
xchg
imulb
ret
or
in
mov
push
mov
xor
push
cs
ret
jne
ret
sbb
mov
hlt
sub
punpckldq
fists
int
jle
add
adc
xor
cld
mov
xor
jg
jg
and
dec
add
mov
or
sarb
cmp
cli
idivb
cmpsb
pop
sbb
sub
push
pop
scas
daa
imul
ja
xchg
pop
pop
fucomip
into
cld
adc
mov
sub
sub
test
aad
and
or
or
outsb
lahf
sub
ficomps
shll
jb
in
inc
add
pop
fwait
pop
add
sub
ss
push
xchg
imul
push
push
mov
rclb
pop
adc
ret
cmp
clc
push
jo
push
mov
lds
in
cmpsb
aam
daa
mov
pop
scas
push
fadds
mov
add
add
cld
out
dec
mov
loopne
mov
push
jge
jp
lock
aad
frstpm(287
aaa
jno
or
ss
pop
fs
mov
mov
sub
sub
rolb
jnp
add
lods
fwait
daa
xchg
xor
push
mov
push
lock
adc
imul
in
cmc
adc
add
fs
cltd
test
nop
mov
sub
adc
sub
cmp
cmpsl
mov
adc
aam
sub
out
je
cmp
in
jg
fisttpl
jne
jo
mov
and
sub
mov
and
arpl
xor
decl
addr16
inc
movsl
xor
scas
iret
xchg
flds
insb
mov
ret
lcall
lcall
aad
out
rolb
jle
inc
cmp
lahf
shr
dec
stos
lcall
inc
sub
push
xor
cld
push
or
test
out
inc
inc
sub
bound
sub
out
and
mov
outsl
mov
or
push
mov
lret
test
rcl
dec
popa
pop
das
push
sub
adc
xchg
cmc
ret
iret
out
data16
rcrl
jbe
fwait
popl
sub
adc
arpl
adc
in
test
mov
int3
sbb
test
mov
scas
test
pop
lock
ljmp
pop
hlt
imul
test
cmp
jbe
nop
ds
mov
mov
sub
mov
cmp
jbe
mov
sub
lcall
testl
rclb
lods
es
test
sub
jecxz
das
dec
dec
jns
sub
fdecstp
fs
sub
cld
sbb
and
sarb
add
shll
jo
insb
mov
outsl
div
ds
data16
sub
stos
sub
add
pop
jl
sub
pushf
sbb
dec
shrl
mov
inc
jo
mov
fs
push
add
int
or
push
sub
cmp
mov
inc
jno
xlat
inc
sub
jae
pushf
mov
fldl
sub
inc
xor
cmp
call
popf
pusha
sub
sub
fwait
out
jns
xchg
clc
pop
sub
jg
repz
cmp
sbb
int
aaa
push
popf
stos
or
faddl
fldt
mov
push
movsl
or
or
je
push
std
mov
jae
mov
jp
jecxz
js
push
test
mov
xchg
repz
cwtl
xor
addb
ficompl
mov
add
faddp
int3
adc
pop
dec
xor
sub
xor
cs
lods
nop
repz
test
addb
mov
lds
loop
mov
or
nop
add
in
mov
hlt
loopne
notl
dec
int
insb
mov
es
lods
mov
sbb
jne
mov
popf
sbb
popf
xchg
and
jo
cmp
push
loope
in
negl
xchg
cmc
jmp
adcl
rol
or
mov
jne
int
add
shlb
pop
fldenv
lds
repnz
sub
subl
call
pop
sti
push
and
pop
add
outsb
mov
es
dec
and
xchg
test
shl
xlat
cs
or
inc
push
mov
cmp
sarb
neg
xor
ljmp
pop
cmp
or
loopne
pop
aaa
xchg
cmp
and
orb
mov
shrl
stos
test
cmp
xor
mov
or
divb
pop
test
sub
jp
rcl
fcom
repnz
or
mov
and
in
ret
xchg
dec
jns
adc
and
adc
ja
push
fisubl
scas
dec
cmp
stc
xchg
dec
movsl
pop
ret
pop
mov
mov
orl
movsl
dec
dec
lret
xchg
mov
or
push
push
adc
mov
dec
addr16
movsl
add
test
inc
cli
movsl
lds
daa
dec
loop
aad
adc
aas
lahf
inc
test
sbb
sub
daa
sbb
lock
xchg
insb
ret
pop
mov
fldenv
in
pop
mov
jle
dec
and
and
fildl
or
xchg
dec
mov
sub
gs
jo
cltd
mov
aaa
insl
out
dec
sub
hlt
rorl
pop
mov
out
int
icebp
psllw
sbb
xchg
movsl
movsl
inc
rcr
lret
loopne
cmp
xchg
push
dec
jmp
mov
add
shrb
and
jbe
stos
sub
push
cltd
jecxz
sub
mov
shr
dec
mov
in
cmp
mov
xor
inc
xchg
xor
sub
sahf
imul
inc
xchg
sbb
jb
xchg
mov
sbb
xor
sbb
sbb
ds
mov
add
rcrl
in
pushf
jp
sub
nop
sub
pushf
mov
jg
mov
jno
mov
add
into
push
sub
bndldx
xor
ja
call
mov
in
sub
cmp
stc
pop
xchg
sbb
xchg
xor
cmpsl
xchg
out
push
inc
push
xchg
testb
jp
lret
pop
and
loop
pop
ret
cwtl
xchg
push
push
dec
or
dec
fstl
push
cli
mov
lret
fsts
cwtl
dec
push
push
mov
mov
pushf
lods
mov
outsl
lods
sbb
dec
stos
add
sahf
pop
fsubs
mov
and
cltd
jp
cmp
add
dec
mov
dec
pop
imul
in
inc
add
mov
jecxz
push
mov
repz
lock
inc
cmp
adc
mov
fnsave
ret
loop
pop
sbb
ret
in
sbb
sub
loope
and
shrb
push
sub
ficomps
jge
dec
mov
lret
adc
add
arpl
mov
dec
xchg
mov
dec
inc
arpl
loop
lahf
out
icebp
push
dec
inc
iret
pop
push
sub
mov
sbb
scas
cld
fiadds
test
xchg
add
out
cli
xor
ret
jg
hlt
or
inc
add
out
mov
adc
mov
or
clc
std
insl
xchg
test
ja
sbb
xchg
sbb
push
pop
je
lods
outsl
cld
lret
mov
adc
sub
mov
pop
bound
or
ds
fildll
jo
cmc
imul
push
xchg
lock
gs
lcall
mov
fdivl
adc
inc
lcall
cmpb
sub
inc
fldcw
xchg
stc
movsl
xor
lcall
hlt
pop
out
lret
mov
or
cmp
xchg
xor
cmp
iret
xchg
lods
push
mov
sub
jnp
mov
push
pop
pop
mov
stos
rol
xchg
inc
jb
fsubrl
adc
inc
mov
mov
mov
push
mov
mov
fdiv
xchg
push
mov
je
in
cmp
outsb
sub
or
repnz
sub
mov
sub
out
dec
pushf
outsl
add
sahf
loop
scas
and
and
add
pop
mov
jle
sahf
rclb
cmp
movsb
in
xor
dec
sbb
enter
dec
xchg
pop
lahf
mov
ds
fwait
dec
aas
pushf
frstor
cltd
push
shl
sbb
bound
adc
iretw
lock
xor
mov
mov
ret
js
imul
add
stos
in
push
hlt
jb
jle
xor
mov
insl
add
je
jecxz
pop
and
inc
popf
xchg
scas
pusha
mov
lock
push
pop
sbb
push
mov
xor
testb
mov
jge
add
push
in
push
test
mov
fnstcw
adc
push
xchg
es
pushw
mov
lret
sarb
pop
xor
add
fmuls
xor
xchg
in
push
out
mov
fadd
mov
xor
lret
add
outsb
rcr
dec
sbb
outsb
cwtl
shrb
xor
jl
mov
add
shl
into
lods
in
sahf
enter
pop
ljmp
pop
outsl
dec
push
psadbw
lea
sti
mov
pop
adc
or
jns
inc
nop
mov
mov
sarl
inc
xor
add
sbb
aam
xor
xchg
popf
mov
std
xor
rol
inc
lahf
xchg
jle
in
mov
cmp
jl
xchg
inc
mov
xor
sbb
sub
test
pop
push
int
dec
add
subb
xor
mov
xchg
adc
inc
sub
mov
inc
shll
inc
push
outsb
out
ret
push
les
push
sarl
cltd
repz
adc
jo
mov
int3
test
in
jns
mov
inc
lds
pop
in
cmp
stos
mov
xor
sub
inc
int3
cwtl
gs
push
sbbb
int3
adc
imul
sti
lods
movsl
push
cmp
pop
cs
dec
lea
bound
add
jae
int
aam
jle
inc
xor
inc
mov
fildll
xchg
xlat
lds
stc
mov
pmaddwd
cmp
mov
cmp
lcall
mov
mov
push
dec
stos
int
divb
scas
sub
scas
nop
and
mov
jmp
xchg
xor
cmp
jb
cmp
hlt
cwtl
pop
dec
jno
insb
ret
push
ds
fadds
insl
push
add
cmp
cltd
shl
push
sahf
cwtl
int3
jle
jp
rorb
inc
call
pop
out
dec
jns
iret
inc
call
push
jne
jmp
insb
cwtl
mov
push
ret
push
pushf
sub
jnp
ja
fists
cmp
into
jae
and
in
out
loop
aad
fnstcw
movsb
ficoms
jecxz
sbb
adc
dec
shll
pop
shrb
jp
sbb
xchg
cmp
stos
xchg
or
sbb
test
cmp
int3
xchg
xor
imul
add
mov
arpl
jno
xlat
test
popa
jle
sub
push
subl
aas
dec
stos
sub
loope
sub
dec
adc
xlat
sub
ljmp
js
ffreep
mov
lods
ljmp
mov
shll
xchg
jl
negl
fwait
cmp
insb
adc
sub
test
mov
or
loop
jno
mov
out
mov
mov
xchg
push
xchg
xchg
and
xlat
push
incl
stos
negl
mov
mov
mov
push
jecxz
cmp
leave
leave
lods
outsl
shlb
sub
sub
mov
sub
mov
cmp
sub
cld
cmpsl
xchg
aas
sub
arpl
add
mov
daa
inc
fsubs
push
mov
mov
cld
push
fs
mov
mov
scas
xchg
les
testb
imul
popf
lret
sub
pusha
daa
rcll
add
in
clc
ljmp
cltd
ror
fists
js
push
pop
sbb
mov
mov
push
dec
out
hlt
xchg
or
divl
sbb
and
ficompl
adc
and
add
xchg
in
loopne
xchg
lahf
data16
ja
push
lcall
into
push
es
sti
lods
jmp
xor
jnp
ljmp
sbb
orb
lods
scas
fcoml
ret
and
fisttpll
or
mov
cmp
lds
fsubl
cmp
sbb
push
pop
push
mov
ret
in
jnp
in
jns
or
cmp
pop
jl
mov
rcl
jle
incb
dec
jb
out
aad
clc
mov
cmp
inc
inc
cmc
aaa
les
rclb
sub
mov
cmp
bound
mov
sbb
and
mov
cmpsl
mov
dec
nop
mov
sub
in
mov
pop
mov
lahf
imul
repz
into
add
shll
push
xchg
leave
jp
push
addr16
xor
and
orb
mov
movsl
xchg
scas
xor
fistps
in
aad
and
sub
std
and
jns
icebp
dec
adc
sahf
shrl
dec
out
imul
leave
push
fucompp
cwtl
cmp
mov
mov
sub
pop
into
mov
pop
gs
mov
jecxz
push
dec
outsl
aaa
shll
dec
pop
icebp
mov
pop
in
leave
in
andb
lea
lods
pop
inc
jecxz
pop
ret
in
sbb
cs
sub
xchg
fstl
orb
mov
jmp
mov
ljmp
bts
cld
ret
mov
fdivl
sar
push
and
cs
dec
cli
movsb
arpl
ret
test
repnz
mov
in
mov
mov
arpl
add
or
fimuls
sbb
add
rcrb
popf
jecxz
dec
lods
leave
into
lods
and
ss
insl
insl
lahf
repnz
add
lcall
stos
dec
call
lock
jnp
dec
jp
jno
pop
aad
mov
mov
cltd
push
xchg
in
enter
cmp
xor
dec
scas
sbb
pop
js
icebp
mov
cmp
push
into
dec
push
fdivl
das
repnz
xchg
fildll
int
lea
mov
shlb
cmp
cmp
sub
adc
int3
in
inc
sub
jbe
dec
cld
cmp
and
sub
mov
lds
mov
ret
iret
sub
jl
lods
lods
jp
ja
cmp
mov
add
dec
pop
pop
mov
xor
pop
and
jg
xchg
scas
mov
ret
pop
and
push
outsb
fisubrl
out
arpl
mov
push
and
sbb
lea
add
loopne
dec
mov
fdivr
lods
stc
fildll
scas
aas
and
mov
sbb
jle
mov
je
or
pop
push
rolb
gs
sbb
mov
ffreep
add
pushf
popa
inc
xchg
test
sti
fidivrl
pop
jle
mov
jge
push
xor
jmp
in
out
push
cmp
test
imul
in
scas
mov
sbb
inc
add
scas
fnstcw
xlat
or
xor
pop
not
pop
lmsw
lea
pop
scas
outsb
out
fsubs
dec
add
adc
xor
loope
mov
mov
push
fs
lret
pop
insb
jo
pop
pushf
xchg
aam
jecxz
mov
push
pmaxsw
shrl
es
push
jnp
mov
subl
lret
sbb
int
mov
mov
imul
sub
mov
mov
pop
call
incl
loope
inc
scas
loop
imul
sbb
jae
sub
aas
lahf
push
inc
sub
jmp
push
or
ss
cmp
add
je
inc
mov
xor
scas
loop
cltd
iret
into
push
sarb
jecxz
faddl
dec
and
inc
add
inc
add
mov
or
aaa
ss
sub
cwtl
mov
mov
outsl
push
out
adc
stc
insb
faddl
cmpsb
jg
mov
repz
push
in
cmp
jns
inc
pop
out
inc
cld
jno
add
pop
popa
pop
inc
inc
aaa
pop
jo
leave
ss
fbld
clc
inc
shrb
scas
pop
jb
jnp
fcompl
add
fldl
popl
sbb
xchg
sub
pop
rcrb
das
imul
mov
mov
jp
cmp
mov
into
mov
mov
jbe
or
jo
js
lea
lods
and
shl
sub
mov
insl
in
shrb
mov
movsl
outsb
rcr
popf
pop
loop
xor
sbb
adc
sub
jecxz
push
in
pop
cmp
sbb
test
loopne
mov
test
xchg
loope
push
in
sqrtps
cs
and
pusha
sbb
test
cmp
lret
daa
icebp
scas
dec
pop
mov
or
rcrb
out
or
add
jmp
sbb
pop
pop
pop
cmpsl
stc
jg
xor
jmp
mov
pushf
repnz
sub
fstpt
inc
rcll
icebp
xchg
or
add
repz
push
add
sub
int
dec
dec
mov
inc
negl
cmp
or
into
cmp
jp
inc
rclb
shlb
inc
pop
xor
jae
ret
xor
and
js
lods
mov
xchg
mov
dec
in
mov
ja
sub
and
loop
movsl
mov
insl
and
aaa
cwtl
fwait
or
jne
pop
in
lcall
cmp
inc
fldl
aaa
call
into
mov
inc
ljmp
xor
and
ret
addl
push
scas
push
push
clc
fsts
movsl
mov
sbb
sbb
fwait
jno
aam
cmp
mov
mov
xor
sbb
inc
sbb
jl
cmc
adcb
jmp
mov
lea
sub
hlt
dec
sub
sbbl
inc
mov
xchg
movsl
inc
push
stos
sub
mov
test
adc
notb
mov
xor
xor
mov
icebp
repnz
ffree
jge
push
inc
sub
jle
rorl
scas
pop
sub
dec
jl
jge
xor
cmp
cmp
mov
enter
das
sahf
nop
jbe
sub
out
mov
add
sti
lods
mov
dec
je
enter
pop
out
outsl
pop
repz
jne
aaa
push
xor
push
sarl
sbb
rol
daa
xor
movsb
xchg
dec
inc
pusha
and
popf
lret
mov
pop
push
mov
xchg
sahf
push
daa
js
adcb
push
dec
bswap
ret
inc
icebp
pop
sub
mov
sub
jg
adc
inc
cli
and
adc
dec
cmp
cmc
pop
push
cmp
mov
xchg
jg
mov
jle
sub
test
es
std
jp
clc
inc
jmp
out
scas
and
mov
incl
cwtl
push
jnp
aaa
inc
xchg
cmc
out
xchg
inc
mov
sub
fs
jle
push
push
inc
xchg
gs
inc
xchg
sub
dec
jge
adc
gs
aam
cmp
out
dec
xor
pop
fistl
imul
jg
ja
xchg
mov
test
dec
xor
push
and
jecxz
negb
add
dec
popl
test
dec
int
xlat
out
cs
rol
mov
xchg
shll
flds
cmp
ja
add
mov
xor
inc
pop
loopne
sub
mov
test
aas
into
dec
jl
call
insb
lds
adc
push
lods
ret
jl
cwtl
fidivl
cli
outsb
sbb
jne
and
cwtl
inc
jle
cltd
add
jecxz
xor
jb
xor
cli
mov
sbb
sbb
lock
roll
and
mov
in
rclb
pop
lock
dec
icebp
xchg
mov
popa
push
cmp
mov
popa
sbb
and
or
sahf
popf
aaa
inc
lods
sub
xchg
push
lret
arpl
sti
ret
rcr
or
mov
xchg
or
les
mov
pop
jnp
and
mov
mov
arpl
outsl
add
pop
imul
call
xchg
sub
hlt
mov
sbbb
imulb
jle
test
jno
cmp
fwait
and
scas
mov
cmp
mov
call
jbe
sub
lcall
mov
dec
push
or
cli
push
movsl
xlat
or
movsb
inc
mov
and
inc
ljmp
das
jmp
mov
out
mov
and
ss
pop
andnps
cli
sbb
and
push
jno
adc
lret
cmp
dec
lods
pop
push
add
or
in
sub
test
add
xor
repz
and
seta
scas
bound
xchg
shll
and
lods
mov
cvtpi2ps
xor
call
lcall
lret
xchg
sub
push
es
clc
or
testl
push
add
cmp
mov
imul
pop
dec
xchg
shll
outsl
or
mov
push
int3
jnp
pop
gs
and
adc
subb
mov
mov
fwait
xlat
xchg
loop
outsl
out
stc
dec
fidivrl
add
cmc
pusha
leave
mov
in
jmp
fistpl
xchg
push
sub
sbb
pushl
addr16
inc
sub
out
adcb
sub
ja
mov
repz
xorb
fnstsw
fidivl
mov
jb
gs
dec
arpl
xchg
mov
pop
fs
mov
addl
mov
sbb
jno
loop
out
pop
xchg
sub
adc
ja
push
mov
ret
in
stc
outsl
sti
cwtl
xor
imul
divb
movb
jns
dec
cwtl
lods
sar
dec
xor
loop
push
xchg
sbb
int3
jnp
pop
mov
cmpsb
or
mov
ljmp
push
arpl
fists
dec
in
mov
mov
mov
sub
cmp
xchg
or
pop
ficomps
fldpi
add
in
lcall
and
adc
gs
adc
fmull
je
es
pop
loopne
out
sbb
lcall
mov
sahf
lods
int
xchg
popl
mov
clc
sti
fsubs
rol
xor
push
std
jne
lret
sbb
xor
push
jo
in
dec
mov
icebp
mov
pop
inc
mov
sbb
scas
popa
push
imul
mov
mov
cltd
sti
add
sar
lret
repnz
jbe
jecxz
insb
test
test
xchg
bound
imul
lea
pop
sbb
mov
xchg
cwtl
xchg
or
jo
jmp
insl
inc
inc
push
mov
test
fldcw
push
jae
push
sahf
jp
add
mov
fcmovne
lret
xlat
mov
cmpsb
pusha
jae
cmp
fcoml
addb
fdivrs
test
mov
sub
mov
cmp
fdivl
xor
div
jno
adc
sub
gs
xchg
imul
inc
jle
fadds
outsb
cmc
xchg
dec
je
cs
adc
enter
pop
xor
ljmp
mov
pop
fxch
cwtl
gs
cmp
scas
sub
sti
repz
outsl
mov
push
pop
loopne
aaa
shl
inc
mov
jp
push
jle
cmp
lcall
xor
jb
dec
int3
jne
popa
gs
sub
xchg
addr16
push
mov
shll
add
mov
es
andl
or
mov
dec
popf
sbb
push
test
pop
daa
shl
mov
add
or
mov
cmp
test
pusha
mov
push
mov
jg
adc
jmp
xor
aam
jnp
pop
dec
mov
lods
movlhps
dec
jne,pt
stos
clc
test
push
ret
testb
cs
ficoms
sub
mov
add
hlt
lret
mov
or
fisubs
ret
clc
faddp
gs
xor
and
jl
lea
in
std
fildl
stc
into
add
pusha
das
xor
pop
repz
mov
lods
scas
or
push
dec
mov
lret
negb
imul
clc
sarl
sti
ret
and
loop
cmp
push
test
mov
rcl
mov
das
ljmp
cmpsb
mov
fadd
and
cmp
xchg
pop
jb
in
in
cwtl
mov
or
or
cli
push
mov
xchg
call
cmp
push
inc
add
add
mov
sarl
cltd
push
in
xor
fmul
xchg
test
and
xchg
fsubr
xchg
mov
xchg
pop
sub
jge
push
mov
repz
inc
mov
jne
add
mov
lods
jb
push
mov
push
stos
mov
xlat
dec
dec
les
stc
or
call
popf
sarl
incb
subb
push
fnsave
mov
inc
gs
pop
mov
jnp
sbb
lret
aas
push
repz
scas
insl
and
jo
xchg
inc
fcmovu
mov
arpl
or
xchg
sub
sub
decl
stc
js
inc
int3
loope
in
mov
in
xchg
or
or
cmp
xchg
outsl
test
mov
or
fiadds
inc
mov
rcrl
mov
sbb
xchg
pop
roll
push
in
xor
in
fimull
jbe
or
ljmp
jbe
in
int3
mov
idivb
imul
packssdw
in
cmp
push
mov
and
popl
and
cmc
adc
mov
cmp
sub
into
inc
sbb
inc
les
xchg
aas
fst
aas
lods
les
test
popa
scas
ds
push
adc
ljmp
insb
fimull
or
xor
adc
xor
jecxz
jo
incl
pop
and
add
sub
xor
pop
mov
ret
pop
lods
lret
je
push
mov
imul
popa
stos
das
adcl
mov
mov
and
imul
jne
xchg
int3
or
add
or
vpsllw
sub
enter
pop
frstor
sti
aam
insb
hlt
ja
push
cmp
mov
bound
cmp
and
pop
loop
jb
dec
mov
lcall
arpl
xchg
xchg
and
sti
clc
mov
daa
or
and
mov
fstpt
test
push
mov
nop
iret
mov
arpl
insl
cmc
xlat
xchg
stos
pop
xor
aad
mov
rcr
pop
pop
xor
enter
or
xchg
push
and
mov
sub
bound
dec
mov
dec
lahf
imul
mov
mov
xchg
push
mov
mov
pop
xor
lret
cmpsl
jg
mov
addps
les
pushf
fs
push
and
push
add
jg
cmpl
sbb
xchg
sub
movsl
sub
lods
mov
push
call
leave
and
imul
push
sub
mov
jb
inc
out
test
sti
dec
mov
or
cs
sub
dec
dec
leave
in
dec
pop
repz
out
into
mov
lcall
leave
les
ss
cmp
inc
mov
lret
pop
mov
mov
push
or
mov
mov
aad
lret
fnstsw
cs
decb
jmp
or
stc
fs
push
sub
add
aaa
xchg
adc
add
imul
popf
pop
xor
pushf
dec
pop
cmp
add
jbe
int
fnstenv
insl
and
xor
outsb
dec
sub
sub
shl
pop
in
mov
outsb
mov
adc
test
aaa
rcr
mov
xchg
jbe
mov
xchg
sbb
jb
lock
std
sbbb
rorl
jecxz
icebp
mov
jp
and
mov
dec
dec
out
idivb
mov
or
dec
in
shlb
pop
add
mov
mov
jnp
pop
pop
addr16
mov
test
test
pop
aas
daa
cli
mov
bound
ljmp
sbb
shlb
daa
inc
mov
xchg
sbb
das
aam
mov
in
mov
xorl
aas
sub
out
mov
ret
test
xor
jg
and
fimuls
adc
mov
pop
in
or
bnd
mov
insl
lods
adc
pushf
icebp
xor
scas
imul
stos
inc
shrl
pop
mov
mov
inc
ljmp
adc
out
and
out
aaa
xchg
dec
imul
xchg
outsl
sti
xlat
stos
add
arpl
aas
cmpsl
add
cltd
adc
and
lods
cwtl
rorb
popf
out
icebp
and
icebp
arpl
sbb
sub
inc
lea
clc
mov
jl
cld
dec
cmp
test
adc
out
std
add
aam
mov
mov
pusha
loop
sub
cmp
je
cmc
inc
call
mov
dec
call
jne
aam
mov
cmp
add
loope
pop
and
int3
jae
call
sarl
jmp
push
popl
imul
or
jb
and
outsl
adc
test
mov
xchg
movl
pusha
dec
xor
inc
mov
add
mov
mov
fldl
shl
adc
push
test
pusha
xor
add
dec
call
add
test
out
pop
sub
pusha
or
and
xor
out
test
pop
test
dec
shr
and
jle
or
inc
inc
stos
fwait
xor
push
mov
sub
sub
out
dec
pop
ljmp
cmp
cmp
mov
jmp
call
xchg
hlt
sub
mov
insl
pop
lret
das
add
jae
fs
adc
mov
push
or
shrb
shll
pop
xor
repz
imul
enter
xchg
jle
lds
in
mov
mov
push
je
test
push
mov
mov
jae
adc
mov
push
xchg
out
jns
xor
or
orb
or
jb
ret
xor
arpl
fisttpll
or
cmp
sbb
mov
mov
mov
adc
mov
movsb
ja
jle
stos
negl
add
mov
xchg
adc
pop
add
inc
dec
and
imul
jae
mov
xchg
push
pop
mov
daa
js
pusha
sbb
jns
or
out
push
insb
push
out
cmpsl
cmp
and
test
pop
es
mov
mov
int3
roll
fs
inc
inc
cmc
xor
fisttpl
inc
cwtl
imul
je
push
das
stc
scas
sbb
repz
orb
loopne
adc
les
jo
sbb
movsb
enter
lods
orl
fstpl
test
gs
adc
dec
inc
punpckhdq
test
movsl
xchg
out
mov
xor
test
inc
mov
lret
mov
ret
cwtl
negb
std
loope
call
ficompl
or
test
mov
and
xor
push
mov
into
ja
add
shrb
pushf
pop
fidivrl
cmp
pop
add
pusha
sbb
insb
hlt
cmp
xchg
popf
cmp
xchg
int
les
leave
in
cs
dec
int3
inc
sub
fwait
pop
mov
sub
ds
bound
cli
sbb
adc
dec
rcrl
aad
push
ret
daa
inc
scas
jmp
mov
mov
xlat
mull
sti
cs
loop
mov
add
cmp
xchg
js
mov
sub
cmp
xor
jl
rclb
add
stos
cwtl
sbb
outsb
push
mov
in
dec
imul
sbb
sbb
test
adc
hlt
xchg
mov
xor
jo
and
and
inc
fiadds
in
leave
int
adc
cmpsb
test
xor
bound
loopne
xchg
movsb
xor
cmp
shrl
push
out
int3
sub
jbe
nop
ss
sub
mov
fdivrs
sahf
mov
xlat
gs
das
add
lods
stc
push
xor
cmp
lods
jge
cli
cmp
mov
jl
push
lods
push
mov
push
dec
mov
popa
sub
inc
jl
xor
xchg
sub
out
cwtl
ror
mov
cli
pop
aas
xchg
fstpt
jne
dec
and
call
sbb
lahf
dec
rcll
ljmp
movsb
push
shr
loop
cs
xchg
pop
xchg
aam
mov
adc
pop
loop
stos
pop
xor
xor
ficoml
cwtl
jbe
dec
mov
mov
es
int
insb
xchg
pop
ja
lods
mov
dec
mov
cmp
cs
movaps
push
aas
inc
and
test
push
dec
icebp
dec
stos
sbb
imul
sahf
mov
sbb
mov
dec
xchg
sub
adc
nop
dec
daa
lods
xor
aaa
sbb
mov
sti
fcomps
lret
std
add
mul
into
pop
pop
sbb
mov
mov
pop
xor
mov
xor
ret
or
pop
mov
hlt
pop
test
xchg
mov
pop
popa
cmpsl
test
dec
cmpsl
inc
es
aam
in
orl
mov
out
fnsave
push
imul
inc
xchg
loopne
jns
stc
jecxz
outsb
movd
xor
mov
add
mov
ljmp
repnz
test
push
pop
fcomps
inc
mov
pop
push
mov
orl
and
lahf
sarb
js
push
ds
push
pop
add
mov
sub
bound
fcomps
fldcw
lahf
fsqrt
lcall
push
daa
jg
push
cmp
adc
mov
aas
imul
pop
mov
lods
cmp
in
lret
rcrl
aaa
fs
mov
push
lock
cli
stos
adcl
push
and
xchg
pop
int
ret
xor
dec
xchg
inc
outsb
testb
es
mov
repz
cmp
negb
fwait
mov
je
loope
pop
dec
cmp
fs
mov
adc
movb
movups
pop
and
cwtl
fcompl
movntq
push
pop
loope
lcall
subb
in
cltd
shrb
mov
cltd
mov
in
push
lds
sbb
mov
sub
push
shlb
mov
mov
jbe
hlt
or
adc
int3
cmpsl
lret
or
push
jecxz
or
mov
mov
idivl
push
sub
in
lods
rclb
rcll
jne
cld
mov
loopne
push
pop
icebp
mov
mov
inc
pop
cs
dec
mov
mov
addr16
test
inc
dec
dec
jnp
aas
xchg
out
shlb
enter
imul
mov
lea
jo
pop
add
rorl
popf
and
rolb
cmp
loop
cld
xor
mov
lcall
imull
notb
push
test
out
ret
push
jge
adc
add
or
jl
jmp
mov
and
lea
push
pop
xchg
mov
subb
sub
cmp
pop
daa
js
lcall
loop
cmp
push
sub
sbb
fiaddl
call
ss
test
jl
loop
dec
cmp
hlt
neg
inc
ds
fsts
stc
add
iret
adc
cld
jno
aad
mov
dec
in
and
lods
data16
jns
xor
jae
pusha
xchg
nop
jmp
jno
inc
and
cld
loop
pusha
fstl
cli
scas
or
std
clc
popf
bound
jl
and
sbb
shll
cmp
jmp
adc
test
pop
lock
mov
xchg
repnz
enter
fnstsw
mov
push
sbb
pop
cld
adc
test
and
and
in
jecxz
jge
mov
mov
cmpb
xor
rclb
jne
hlt
bound
dec
movsb
adc
jne
jnp
mov
repz
mov
cmpsl
pusha
lods
xchg
iret
into
orb
stos
and
adc
ljmp
jle
imul
mov
icebp
push
cmp
mov
repnz
int3
leave
inc
fcmovnb
mov
or
test
mov
mov
and
fcmovu
sub
and
mov
int3
loopne
jo
add
push
and
cmp
rolb
mov
mov
shr
jl
xlat
jecxz
jb
dec
jmp
nop
or
jmp
pop
sahf
xchg
ret
inc
xchg
outsb
sti
jb
pop
jns
jnp
mov
aaa
adc
mov
cmp
rcl
jle
pushf
push
add
mov
orb
bound
mov
ja
ret
cmpsb
jecxz
rorl
fwait
push
adc
dec
adc
dec
xchg
push
pinsrw
popa
in
repnz
jg
vpunpckhbw
jae
mov
in
sbb
bound
into
push
xor
jg
cwtl
sub
cld
stc
mov
fdivl
inc
out
stos
inc
cmpsb
enter
jns
sbb
sti
add
pushf
fcoms
push
and
mov
mov
das
test
notb
inc
mov
xchg
setl
push
jae
adc
dec
adc
out
mov
jo
jecxz
push
jo
pop
mov
fnstcw
push
sbb
out
xchg
out
cltd
sbb
cmpsb
jb
xchg
out
adc
xchg
push
dec
lcall
or
push
leave
lcall
andb
cmc
mov
enter
fstl
ds
cmp
jmp
jbe
add
cmpsb
jge
sub
imul
add
vzeroupper
or
idivb
cs
xchg
push
and
aas
shlb
sbb
outsb
inc
cmp
xchg
fimuls
push
pushf
mov
sub
cmp
jecxz
insl
push
popf
loopne
add
adc
mov
gs
push
shlb
mov
sbb
sahf
rclb
xchg
push
mov
shlb
adc
push
lods
mov
xor
mov
js
pop
lock
mov
int3
ror
scas
push
in
ffreep
mov
mov
ds
test
sbb
xor
bound
call
sahf
mov
leave
inc
jbe
dec
iret
out
mov
out
xor
stc
jecxz
or
imul
pop
mov
shlb
xchg
cmp
test
ret
dec
jp
cmp
in
aaa
sbb
mov
ret
or
jle
inc
mov
xor
sbb
xor
stc
inc
pop
rclb
cs
mov
adc
pop
mov
movsb
pop
pushf
std
lods
xchg
xchg
xor
adc
repz
fimull
pop
pushf
mov
xor
or
jl
jae
mov
xor
addr16
mov
adcl
jno
jmp
or
out
mov
lods
fisubrl
testl
out
insl
sub
mov
mov
dec
xchg
xor
mov
dec
adc
xor
mov
mov
jnp
and
add
inc
xchg
or
inc
or
loop
jnp
arpl
rcrl
or
jne
iret
cmc
jecxz
xor
rcrb
xchg
jg
scas
movsb
mov
mov
cld
int
cmp
pop
daa
ret
sbb
adcl
jae
ss
mov
call
jb
sbb
mov
lahf
repz
xchg
mov
cmp
lock
addr16
mov
mov
xor
aas
stos
xor
stc
push
add
ljmp
mov
push
popa
jae
cmp
add
out
cmpsl
imul
adc
clc
mov
push
cmpsl
shll
stos
mov
aas
fwait
bound
pop
cli
dec
es
lods
and
mov
pop
mov
outsl
cmp
push
faddl
mov
cmpb
out
push
vmread
js
xchg
cltd
ss
stos
imul
jl
jns
lea
lods
mov
xorl
lods
jecxz
sub
or
adc
jne
dec
inc
push
and
ja
lock
jge
xchg
mov
repnz
and
and
imul
rorb
xor
jns
fs
dec
dec
sbb
les
inc
addr16
imull
inc
mov
jecxz
adc
aas
inc
sbb
jbe
aaa
add
negl
stos
mov
pop
push
mov
adc
repnz
rep
fsub
lret
mulb
or
data16
cli
xlat
or
xchg
mov
mov
sbb
xchg
inc
and
sub
jne
mov
adc
ror
xor
movsb
inc
hlt
sub
pop
sbb
mov
rol
lods
xchg
mov
cld
pop
arpl
adcb
mov
cmp
in
ficomps
cmp
lds
insb
insb
sbbl
icebp
jbe
cmp
ds
mov
outsb
dec
nop
rorl
fsubrs
js
orb
cmp
inc
jno
xchg
and
ljmp
loop
xchg
or
repnz
lock
push
popa
adc
adc
popf
mov
cmp
push
inc
add
or
cltd
xchg
mov
in
and
cmp
lods
fwait
sbb
mov
dec
cmp
shrl
pushw
xchg
xor
ret
mov
test
push
mov
loopne
cs
loopne
out
daa
frstor
testl
cld
push
or
dec
mov
hlt
in
scas
inc
cmp
mov
mov
vphaddubd
test
mov
add
stos
inc
lret
test
clc
sbb
adc
fs
pop
int
mov
shrl
jo
add
lahf
add
ja
jns
gs
out
jnp
sub
enter
lds
bound
xor
addl
inc
mov
mov
stos
aas
stos
xchg
dec
cmp
mov
sbb
cmp
ret
sub
aam
push
mov
mov
cltd
pop
adc
jns
pop
es
jge
sbb
cmp
jno
jg
pop
jge
xchg
pop
clc
dec
push
push
adc
popa
pop
xor
arpl
mov
sub
pop
dec
or
adc
jecxz
or
push
cmp
mov
add
imul
inc
sub
adc
nop
jae
je
fidivrs
stos
lock
push
push
inc
jae
sub
cmpb
jl
push
les
in
mov
mov
cmc
sub
scas
negl
pop
dec
lods
or
movsl
mov
mov
or
fstpl
scas
cmp
and
cmp
cpuid
pop
arpl
repz
jbe
aaa
sub
xchg
std
fsubr
mov
repnz
fs
mov
push
lahf
mov
aaa
xchg
fcmove
push
pop
push
pop
push
cmp
xchg
and
mov
xlat
mov
push
and
icebp
cmpsb
adc
repnz
pop
movb
add
std
fs
out
decb
xchg
inc
lea
cs
push
imul
pop
cmc
addb
xchg
arpl
inc
lret
mov
ret
cli
push
fs
lods
xchg
fcompp
push
add
sbb
popl
inc
push
pop
adc
mov
mov
fidivrl
push
fstl
dec
movsb
mov
xchg
ss
loop
les
fiadds
arpl
jb
fldenv
jmp
fstps
push
inc
lahf
mov
sbb
es
cli
mov
loopne
outsb
faddl
orb
inc
push
fldt
push
sbb
and
xchg
push
into
adc
mov
cmc
sbb
gs
jns
loopne
and
mov
sahf
addr16
dec
mov
pop
call
adc
sub
mov
inc
and
and
mov
loopne
xchg
shll
rorl
sub
cwtl
jnp
or
pushf
pop
and
sub
sbb
jp
cltd
fucomi
jbe
add
sti
adc
hlt
mov
lahf
jb
inc
push
push
fwait
xchg
out
out
push
aas
das
adc
dec
aad
cmp
insl
and
xchg
mov
dec
mov
add
push
cmpsl
data16
pusha
in
jo
push
sbb
sbb
jae
out
xor
fcomps
jp
push
mov
or
jbe
mov
cwtl
testl
and
cmpsb
mov
cmpsb
push
or
insl
stos
out
pop
nop
leave
dec
int
xchg
adc
pop
xor
xchg
mov
fs
stos
lock
xchg
std
outsl
test
test
outsl
shll
jae
aas
adc
mov
mov
fldcw
sysenter
in
and
cmpsl
pop
sub
pusha
mov
ss
test
lcall
xchg
xchg
in
repnz
fsub
xchg
and
cmp
and
lahf
int
loope
loopne
loopne
pusha
cmp
mov
or
dec
rol
int3
push
jecxz
and
ret
fimuls
mov
loopne
shl
dec
into
cs
lcall
lahf
cmp
cmpsl
pop
xor
stc
cmp
sahf
jle
pusha
test
inc
shrl
mov
and
sub
add
xchg
xchg
adc
mov
dec
dec
lea
out
arpl
imul
or
add
push
std
in
cs
jl
ds
sub
sbb
les
subb
adc
sbb
es
push
jo
inc
loope
add
push
and
aam
loope
inc
push
xor
push
xor
add
sub
mov
sbb
adc
mov
jo
fildl
test
xchg
mov
fsubs
es
andl
or
aam
cwtl
add
cmp
mov
mov
cwtl
and
jl
and
xor
scas
movsb
fucom
mov
sahf
mov
cwtl
sub
je
add
jle
rcpps
push
mov
hlt
cld
xchg
mov
sbb
scas
cltd
push
add
xchg
pop
lea
sub
sub
in
in
mov
xor
les
xlat
daa
push
aas
pop
jns
aam
sub
stos
es
mov
mov
loop
arpl
inc
dec
inc
push
lock
push
inc
es
ja
int
jmp
fldt
pop
outsb
lods
mov
or
or
mov
adc
ljmp
xor
clc
lret
mov
sub
lahf
in
add
sbb
rclb
jg
test
pop
adc
pop
jmp
push
or
loopne
and
pop
out
cs
pop
fs
jmp
pop
mov
inc
outsb
mov
test
lods
aaa
xlat
ss
mov
jno
inc
sbb
pushf
push
shlb
dec
fsubl
add
adc
cmpsb
cmpsb
std
sub
cmpsl
rorl
cli
push
xchg
jnp
mov
ds
inc
fs
push
mov
lea
mov
dec
fadds
je
add
std
jns
mov
fs
push
test
and
sub
xlat
jnp
lods
repnz
xor
push
jo
fsubs
clc
mov
je
stos
in
add
fcmovne
fidivrl
test
mov
dec
in
jbe
das
fcomp
mov
inc
nop
shll
sar
sub
push
add
jae
pop
inc
pop
sarl
call
jmp
jno
fists
jl
and
dec
int3
aad
push
cmpsb
xor
or
js
pop
imul
jne
xor
jg
jnp
divl
xor
inc
test
cmp
stos
xlat
adcl
jle,pt
mov
lahf
rcrb
repz
sub
adc
jb
and
rorb
out
in
das
aas
jb
and
or
neg
pop
lret
add
pushf
push
cmp
sbb
or
fsubrp
test
sbb
orb
je
add
imul
push
lahf
shlb
test
mov
xor
push
jo
lods
aaa
xchg
xor
loop
pusha
and
cltd
rcll
push
loop
mov
cmp
mov
mov
push
xchg
and
out
sahf
int
jne
mov
lock
lock
pop
xchg
add
xor
clc
lds
mov
testb
mov
push
adc
lds
lea
xchg
mov
pop
pxor
ds
adc
adc
sbb
mov
test
jnp
and
xchg
push
js
out
int
adc
xchg
fbstp
dec
add
icebp
mov
jne
sub
or
nop
lcallw
stos
aaa
cmc
leave
xchg
insl
mov
push
rcl
lret
jo
sub
adcl
lock
iret
cwtl
add
mov
es
inc
or
jae
cmpsb
jns
stc
data16
or
mov
js
and
pop
inc
pop
inc
xchg
lea
push
dec
inc
andl
mov
fs
adc
std
push
lcall
int
push
mov
sub
and
inc
pop
inc
or
repnz
dec
aam
jnp
xor
fisubl
dec
pusha
inc
jg
cmp
push
mov
mov
shl
mov
cmp
mov
int
push
xchg
or
xchg
dec
imul
lods
add
dec
or
fildl
jp
dec
mov
sub
jae
cmp
les
cmp
or
add
or
aam
mov
test
adc
mulb
out
mov
pop
stos
pop
and
pop
pop
subb
paddsw
adc
pop
hlt
mov
add
loope
xchg
dec
mov
or
cmpsb
cmp
in
add
inc
ss
test
xorl
sahf
cmpl
xchg
jnp
test
or
cmpsb
push
jno
mov
adc
adc
aad
ret
xchg
cmp
dec
add
push
into
or
pop
scas
push
cmpsb
cmp
mov
xchg
xchg
cmp
fsub
push
mov
push
stc
lds
imul
mov
and
std
push
pop
dec
jmp
arpl
cmp
mov
pop
mov
in
lds
sub
mov
mov
icebp
push
test
aaa
test
fs
add
out
push
ret
sbb
dec
dec
cli
push
cmp
cmp
mov
push
lret
push
xchg
xchg
adc
call
out
sbb
mov
test
mov
adc
sbb
scas
scas
cmp
movsb
fnstsw
test
test
add
loopne
xlat
lret
dec
cmp
sbb
sub
inc
push
inc
mov
ret
dec
loope
test
icebp
sbb
int
xchg
ja
insl
pop
std
lahf
cltd
pop
xchg
dec
push
xor
pop
pop
dec
addr16
xchg
sub
mov
push
xor
out
notb
xor
jnp
mov
sbb
in
shlb
orb
add
loopne
loop
xchg
mov
fstps
mov
jno
cld
outsl
push
mov
and
cmp
sbbl
dec
dec
pop
pop
inc
xchg
add
cli
pop
cld
jae
fdivr
xchg
ficoms
mov
pop
sbb
push
aad
das
gs
das
out
cmp
and
cmc
xchg
sub
shlb
mov
cli
movsl
pusha
jnp
pop
lahf
xchg
mov
imul
and
add
pop
mov
mov
jne
outsl
cmc
push
sahf
ljmp
dec
jns
imul
mov
mov
daa
sbbb
mov
testl
inc
test
sub
roll
pop
fnsave
inc
insb
push
addr16
and
out
jae
in
lds
mov
cmp
sbb
sub
mov
inc
push
pop
stc
sub
jg
les
das
cli
jp
ds
push
daa
xor
xor
lahf
movsb
ja
sub
add
popf
jne
ret
imull
mov
and
jne
mov
push
outsl
add
dec
sub
pop
fstps
divb
arpl
pop
jl
hlt
int3
push
jne
push
inc
dec
fldenv
mov
lock
rorl
mov
cmpl
mov
repnz
or
pushf
rclb
or
add
push
nop
in
cmpl
inc
cmpsl
fisttpl
call
stos
mov
mov
test
sub
movl
aam
xchg
or
inc
pop
mov
sub
lahf
xor
insb
xor
xor
push
xlat
das
or
xchg
fiadds
sbb
xchg
out
aaa
xchg
mov
jg
adc
aaa
xchg
loop
jns
aaa
mov
inc
cmp
in
inc
inc
pop
sub
jb
or
or
and
loop
and
xchg
ret
stc
int
imul
inc
push
xchg
mov
out
cmpb
movsl
cmp
aam
adc
lock
ja
cmp
std
shr
ds
rcr
xor
fs
cltd
shlb
inc
iret
ds
cld
or
xlat
push
mov
iret
cli
inc
dec
test
dec
cmpsl
dec
jge
lcall
mov
xchg
mov
roll
lcall
push
jno
imul
xchg
jl
adc
pop
dec
outsb
sub
stos
add
dec
fistps
xchg
cld
rcrl
sub
push
idivb
dec
iret
mov
stc
rcrb
sbb
sub
shrb
cmc
fstl
sub
repnz
leave
dec
or
popa
movsb
pop
mov
adc
ds
jbe
jne
in
out
push
cmp
lahf
lahf
mov
std
xor
xor
jp
sbb
adc
cmp
lods
lcall
icebp
mov
loop
or
lea
jle
stc
push
adc
cmp
dec
jp
mov
lods
leave
hlt
mov
inc
and
add
xor
mov
gs
push
mov
ret
cmp
mov
jmp
std
and
gs
inc
xchg
sahf
pop
add
sub
push
jns
les
and
adc
sbbb
loope
popa
jl
or
sahf
add
test
rcrl
adc
pushf
cltd
inc
mov
pop
fists
mov
mul
scas
fs
scas
sti
or
nop
pop
lret
dec
out
push
adc
mov
movsl
or
push
aas
cld
mov
fs
push
es
jb
mov
lret
mov
dec
lods
or
loopne
xchg
lods
pop
xor
and
cmp
rcll
push
cmp
je
cmp
mov
mov
mov
mov
add
jl
jae
inc
lret
jno
je
enter
adc
cmc
mov
lret
mov
mov
mov
outsl
pop
or
iret
xchg
test
jmp
div
mov
int
mov
mov
sti
adc
add
shrb
mov
fisubrs
repz
jl
test
sub
or
out
je
sub
mov
fdivl
jp
fwait
xchg
movsb
push
mov
jnp
pop
test
lret
stos
aam
leave
mov
jb
test
nop
fistps
jbe
das
pop
inc
mov
mov
lock
mov
out
fsubrp
and
mull
add
push
test
pop
stc
xor
add
negb
dec
daa
and
sbb
push
push
inc
jnp
ds
arpl
mov
mov
ficoml
rolb
fistpll
mov
xor
mov
jle
mov
in
repz
pop
mov
add
xchg
aas
into
shlb
lea
lcall
dec
or
lahf
or
mov
fiadds
mov
mov
movsb
sbb
stos
leave
xchg
xchg
gs
push
pop
test
and
xor
push
je
mov
pop
sti
xchg
pop
dec
pushf
decl
in
dec
push
pop
movsb
or
movsb
repnz
sbb
mov
cmp
add
mov
sub
cmp
fistl
jae
inc
imul
addr16
out
test
mov
fwait
add
lods
ja
dec
xor
mov
ljmp
push
ljmp
jp
cmp
out
mov
sub
mov
inc
push
sbb
bound
loope
dec
mov
arpl
popa
add
je
out
lret
mov
lods
loope
mov
shll
sub
mov
sbb
mov
lret
cli
icebp
fstl
push
dec
inc
inc
xchg
movsl
ds
gs
mov
add
sbb
mov
pop
fimuls
mov
lock
in
imul
inc
and
inc
mov
ljmp
push
mov
push
add
mov
or
add
xor
cmp
xchg
push
das
inc
stc
adc
popa
loopne
fisubrs
or
cmp
push
dec
or
call
xchg
xor
aam
les
idivl
mov
mov
xchg
repz
dec
xor
scas
sti
into
inc
les
dec
out
popa
mov
xor
addb
jp
ret
shll
add
test
sti
fistpll
clc
and
mov
push
fwait
push
mov
das
out
mov
inc
pop
iret
mov
std
sbb
roll
xchg
dec
xchg
cs
sahf
adc
insb
int3
les
mov
cmp
mov
xchg
push
lock
xchg
jae
cmpsb
fsubl
mov
stc
scas
and
mov
pop
dec
out
fcoms
jg
daa
popf
cltd
add
js
and
jbe
negb
ljmp
xchg
loop
cltd
xor
in
mov
push
sbb
pop
ret
fmull
and
and
push
adc
sub
pusha
jle
iret
pop
pop
inc
div
testb
lods
cmc
cmp
in
push
clc
add
pushf
sub
andl
xchg
mov
dec
mov
cld
sar
push
jae
mov
sbb
add
mov
shl
cltd
cmp
stos
jl
adc
scas
jns
pop
into
movsb
jae
push
ja
ret
and
xchg
mov
fildll
das
inc
mov
push
or
scas
and
xchg
inc
mov
lods
mov
push
and
add
push
mov
divb
pop
sbb
xor
test
paddd
pop
les
aam
je
jmp
lea
jne
sbb
fninit
shrl
sub
popf
inc
sub
or
fwait
das
popa
or
or
popf
aas
and
fsincos
cmpsb
scas
insb
loopne
sub
lock
xchg
std
add
adc
movsl
lods
cmp
aaa
enter
fld
mov
outsl
iret
and
push
mov
and
mov
add
push
mov
loopne
pop
pop
jmp
lcall
aad
xchg
out
lea
aad
cmpsl
out
pushf
add
mov
fsubs
jnp
and
filds
mov
ja
cwtl
push
jp
arpl
jg
jle
jns
cld
cs
test
das
and
inc
rcrl
push
mov
and
sbb
pop
fistpll
or
xchg
xchg
xor
fucom
pushf
push
push
push
jb
push
pop
ja
mov
dec
sbb
pop
dec
outsb
int
push
cmpsl
push
jmp
mov
movsb
xor
popa
in
xor
cmp
les
xor
incl
cmp
pop
sarl
xor
mov
ret
movsl
sbb
jno
outsl
jg
sar
sub
mov
inc
pop
inc
mov
out
in
jmp
ljmp
push
add
jnp
fucomip
imul
lods
add
push
adc
jne
js
imul
pop
or
bound
movsb
xchg
dec
pop
mov
fstl
or
hlt
cmp
mov
mov
add
add
sbb
or
jl
pusha
iret
rcrl
mov
xlat
mov
xor
push
ret
pusha
int
sbb
int3
addr16
out
cmpsb
sbb
mov
ficoml
sub
jns
mov
inc
cmp
push
gs
iret
out
cli
adc
cmp
push
das
mov
adc
mov
mull
sub
popa
mov
sahf
mov
sbb
pop
lods
pop
xor
pop
mov
jecxz
dec
mov
popf
ss
jns
enter
sbb
sub
fcoml
pop
mov
pop
test
std
lcall
pop
jmp
lds
mov
arpl
pop
fstpl
mov
jbe
out
addr16
or
shl
push
pop
into
cwtl
mov
in
xlat
inc
das
cwtd
add
jmp
and
out
ficompl
mov
xchg
test
enter
lds
mov
rcrw
bound
and
or
imulb
insb
mov
xchg
adc
mov
imul
adc
xchg
xchg
sbb
mov
lret
adc
fwait
das
sub
xor
cld
xchg
inc
das
pop
mov
les
push
arpl
adc
xchg
mov
ja
pop
add
push
xor
daa
sbb
rorb
stos
pop
add
xor
repnz
jle
stos
mov
jecxz
mov
jl
sbb
dec
xchg
cmpsl
push
or
sbb
lock
lret
sbb
pop
xchg
out
dec
lahf
test
add
cwtl
mov
out
loope
mov
addr16
or
in
xchg
ret
xchg
lret
pop
lea
push
sarl
xchg
out
sbb
sar
add
fld
and
inc
fdivrs
int3
iret
negl
pop
dec
js
pop
mov
mov
inc
pushf
inc
cmp
fsubl
sbb
out
mov
xchg
or
scas
cmpsl
xor
push
cmp
in
pop
aam
test
flds
mov
pushf
push
add
mov
insb
out
stos
ds
adcl
adc
sub
or
xchg
sbb
mov
jmp
push
jp
or
icebp
shlb
xchg
aas
enter
nop
stc
cmp
jg
nop
stos
cwtl
push
mov
sub
loope
and
sbb
lock
mov
cld
insl
inc
ja
and
lcall
inc
ljmp
adc
mov
stc
xor
out
push
and
pop
sahf
add
test
fcoml
roll
in
rorl
jp
cli
ljmp
icebp
pop
stos
subl
mov
loopne
push
push
nop
cwtl
fmuls
jle
jnp
roll
je
shlb
sub
and
cld
push
jo
jbe
in
or
jbe
jp
loope
cmpsb
pop
jp
jle
and
mov
cmp
or
sub
fldenv
inc
aam
lahf
test
cmpsl
sbb
enter
icebp
inc
in
fdecstp
movsl
jo
jno
mov
jg
cmp
jp
repz
jno
rep
sbb
pop
inc
adc
xor
ret
out
cli
xor
push
xchg
sbb
inc
call
shufps
adc
sub
lret
mov
out
inc
and
loope
inc
outsb
xchg
rolb
cs
popa
sarb
insb
ja
insb
pop
mov
js
rcrb
pop
push
cli
pushf
sub
pushf
rorb
mov
loopne
add
inc
sbb
xchg
mov
mov
repz
test
add
mov
xchg
cli
loop
movsl
xchg
cmpsb
sub
xor
fsubl
jb
cmp
les
dec
out
mov
xor
jge
pop
stos
insb
loope
push
std
out
sbb
repnz
jmp
mov
cwtl
push
pop
push
mov
mov
cwtl
faddl
jle
popf
jae
ja
rcl
roll
adc
fidivl
sub
es
mov
pop
sub
xor
fsub
adc
sub
mov
pop
mov
jp
push
les
test
and
pop
out
iret
bound
push
add
cmp
push
jno
fistpll
xchg
dec
sbb
sahf
adc
outsl
push
lret
mov
add
in
cmp
cld
mov
dec
mov
jno
xchg
cmp
jae
sub
cmpsb
adc
stc
jnp
mov
jecxz
shl
sub
cwtl
movsbl
push
dec
xchg
jne
mov
arpl
mulb
ss
sub
outsl
out
leave
xor
enter
cmp
cmpsb
or
jle
popa
cmpsl
popw
pusha
out
out
lcall
cmp
xor
push
sbb
adc
cmp
pop
loop
imul
out
add
dec
lcall
stos
out
sbb
and
fs
je
aas
sbb
outsb
jmp
adc
rcl
adc
pusha
fldcw
adc
mov
pop
movsb
dec
cld
test
jo
aam
jns
dec
bound
xorl
das
call
mov
inc
sbbl
daa
lea
xorb
inc
stc
cmp
dec
mov
mov
in
popf
in
sbb
push
popf
add
mov
aas
lock
stos
call
and
jnp
shll
fcoms
add
fcoms
mov
inc
std
pop
pop
int
cmp
sbbb
leave
cli
xor
mov
add
and
mov
jmp
push
leave
push
adc
ljmp
das
sub
mov
xchg
xor
and
fwait
cmp
fcomps
lcall
fcomp
fwait
cmc
jl
jecxz
inc
xchg
adc
push
mov
daa
jb
xchg
pop
lock
fs
rorl
jae
sub
in
nop
lcall
out
shll
pop
cmpsb
push
jo
sub
cmpsb
scas
pushf
aaa
mov
cmp
inc
mov
enter
xlat
pop
in
jle
stos
inc
cltd
jns
xchg
sbb
push
lds
push
out
cmp
ficoml
fcoms
outsl
jo
fs
xchg
and
jb
cmpsb
gs
outsl
dec
mov
push
dec
jle
xor
pop
add
or
jge
imul
cmp
addr16
pop
fdivl
mov
adc
movsb
out
loope
ret
pop
lea
scas
jmp
mov
shr
pop
lahf
js
gs
mov
and
adc
mov
mov
sbb
jo
hlt
mov
xor
mov
sbb
push
sbb
push
mov
repnz
xor
loope
inc
add
dec
xchg
filds
int3
ja
xor
inc
pop
xchg
mov
sub
pusha
mov
lcall
fimuls
pop
and
adc
in
mov
ret
xchg
and
inc
out
push
cmp
mov
or
outsl
stos
fisttpll
movsb
gs
mov
in
loope
xor
lock
mov
mov
mov
sbb
stos
sub
mov
inc
test
xchg
addr16
std
sbb
test
pushf
icebp
into
inc
sub
in
inc
or
jns
jae
adc
adc
lahf
sub
jns
enter
pushf
jne
rorb
xchg
xchg
cli
or
or
cmp
jmp
sub
rcrl
cld
orb
sub
loope
push
dec
call
jns
mov
outsb
test
sbb
xchg
lods
mov
inc
push
xor
xchg
or
xchg
stos
mov
inc
mov
mov
cmp
adc
test
fisubs
shlb
lods
test
repnz
ja
inc
pop
les
pop
fwait
xchg
cmpsl
sub
xor
and
adc
jb
lcall
add
mov
ret
int
jno
call
xchg
fwait
subb
jge
sarl
push
push
pusha
ljmp
push
adc
inc
lret
loopne
jp
cmpsl
jl
adc
adc
inc
and
shlb
frstor
sub
pop
fistl
lock
and
pushf
out
jmp
cli
mov
pop
and
pop
pop
lock
inc
pop
jo
sbb
add
pop
pop
xchg
sbb
fdivl
sub
imul
js
pusha
cmpsb
inc
sarl
push
fsubrp
push
cld
sbb
aad
add
das
lods
cmp
sub
notl
ljmp
not
sub
outsl
js
sbb
divb
hlt
mov
sub
test
dec
mov
icebp
dec
in
pop
in
sub
shrl
imul
leave
jnp
fdivr
push
sbb
arpl
xchg
add
testl
xchg
mov
int3
aam
out
pop
sub
jo
mov
popf
push
inc
adc
inc
iret
leave
jle
sub
lock
sti
ljmp
in
add
mov
cwtl
pop
call
out
dec
dec
pop
pop
dec
aaa
notb
call
sahf
mov
add
sub
pop
sbb
mov
dec
dec
sub
daa
rolb
cmpsl
dec
outsl
sub
mov
shll
popf
stc
push
adc
scas
fistps
push
mov
jne
push
or
xchg
mov
xor
xchg
into
out
out
stos
add
ret
mov
pop
lds
push
inc
xchg
jbe
shlb
mov
jecxz
jnp
movsb
test
dec
ret
add
out
jbe
movsl
minps
pushf
xor
sti
mov
fbstp
loope
push
mov
movsl
fstpl
out
mov
lods
call
ss
or
loop
in
adc
add
stc
popa
and
jge
negb
aad
fwait
add
xor
xchg
adc
shll
dec
insl
xchg
rcll
cmpsl
xchg
cli
rcll
pop
mov
lds
mov
fisubl
sub
bound
mov
clc
mov
and
cmpsb
ret
add
jb
cmpsb
xor
pushf
xchg
pop
aaa
inc
add
pop
ja
push
mov
mov
add
movsb
mov
out
sub
aad
sarl
cli
mov
pop
fldl2e
add
subb
iret
xchg
xchg
pusha
jg
cmp
loopne
shlb
les
lahf
inc
imul
xchg
or
cwtl
or
push
call
repz
push
mov
and
aas
jg
jne
jge
xor
dec
hlt
mov
xchg
add
and
arpl
imul
lea
bound
andl
popf
fistpll
sbbb
push
fucom
test
mov
add
jbe
icebp
icebp
or
dec
mov
fcomp
push
lahf
jno
cmp
pop
andl
cld
and
arpl
divl
push
inc
fwait
test
or
push
sbb
rcl
cmp
and
mov
mov
jl
test
and
cmp
sbb
icebp
and
movsl
pusha
mov
mov
movb
jnp,pt
push
add
insb
dec
movb
jbe
sti
scas
fmull
dec
out
shrl
nop
imul
insl
movsl
and
adc
sub
das
fbld
adc
or
or
xchg
mov
mov
out
or
insb
out
shrl
or
and
ret
cltd
cmp
idivl
repnz
sub
stos
xchg
shlb
lret
rclb
daa
mov
sbb
mov
fists
inc
adc
push
stc
popa
lcall
dec
mov
sub
cmp
dec
repz
dec
cmc
out
sahf
cmp
xor
packsswb
dec
ret
adc
xor
xor
xor
repnz
xchg
cs
cli
fnstenv
repnz
cltd
inc
push
dec
xor
cltd
imul
push
pop
fdivl
repnz
xor
icebp
xor
cmp
mov
ret
mov
lret
imulb
sub
pop
push
cmp
faddl
push
inc
sub
cmp
ficoms
stos
fisubrs
add
notb
lods
in
pop
fsubl
or
ljmp
pop
mov
sbb
fldl
xchg
xor
xor
inc
inc
sub
test
push
test
dec
xorl
test
xchg
clc
jmp
xor
cs
lcall
inc
andl
mov
push
aad
adc
jmp
mov
jmp
inc
repnz
and
stc
mov
jo
loope
movsl
dec
std
inc
int3
sbb
mov
dec
ret
adc
iret
push
jp
popa
fistl
and
pop
jle
rcrl
jle
into
test
mov
adc
mov
dec
ss
push
iret
movsl
push
mov
adc
int3
data16
inc
inc
fisttpl
sbb
add
ss
push
and
jmp
inc
push
cmp
imul
fwait
sbb
pop
cmp
dec
xchg
pop
sarw
int3
loope
mov
cmp
je
fwait
jl
inc
add
fsubl
cmp
inc
sbb
lock
mov
sbb
mov
in
inc
loope
cmp
popa
fisttps
int3
lret
mov
shr
imul
and
sbb
or
in
pusha
ret
divb
in
add
or
mov
mov
aaa
mov
icebp
mov
and
sbb
rol
addb
cwtl
int
mov
lods
mov
inc
dec
xchg
aas
xor
mov
add
fsubl
or
mov
into
adcb
add
cmpsl
mov
cmpb
xchg
jge
mov
leave
cmpb
push
jg
enter
inc
mov
mov
pop
and
out
add
xlat
dec
roll
mov
fsubrs
scas
jmp
inc
je
aas
cmp
fbld
add
add
mov
das
fbstp
adc
pop
nopl
and
sbb
dec
rcrb
inc
int3
aaa
mov
gs
sbb
sub
and
fs
cld
push
outsl
aas
lret
mov
inc
xchg
cli
mov
sbb
sbbb
std
arpl
popa
addr16
push
inc
mov
pop
repz
fcomps
stos
lahf
xchg
push
mov
jne
and
shr
jl
pop
popf
das
movsb
xor
xchg
add
loope
mov
ljmp
ret
push
stc
test
jns
add
loopne
xorl
cmp
jg
lds
rolb
pop
inc
adc
adc
sarl
xlat
add
movsl
mov
xchg
mov
jns
test
pushf
lods
mov
jecxz
imul
and
cmp
imul
or
jbe
mov
jp
aaa
jne
pusha
shrb
add
cmp
mov
jg
call
jns
out
ret
sub
out
shr
arpl
cmpsb
pop
inc
loope
xchg
push
mov
lock
insl
lret
loopne
adc
xchg
xlat
push
stc
mov
adc
int
xor
jne
cli
popa
cmp
fcmovne
mov
mov
ja
std
fnstsw
sti
or
sub
inc
inc
jbe
loope
aam
mov
es
mov
xchg
add
cmp
xchg
dec
fsubrl
and
sbb
pop
inc
fs
addps
pop
scas
sbb
mov
push
fisubl
or
out
in
sbb
xor
fistpl
insb
sbb
popa
mov
xor
mov
dec
addr16
cmp
mov
ret
sub
cmp
lret
test
clc
pop
fiaddl
and
cltd
invd
cli
mov
inc
or
insb
rorl
or
and
cwtl
mov
call
xchg
sbb
xor
enter
andl
rcrl
jo
loope
push
push
sbb
pop
xor
pop
mov
or
jecxz
dec
mov
rorb
mov
pop
push
dec
scas
out
test
mov
popa
push
jae
jnp
inc
jl
xor
test
pop
cmp
aas
test
jge
fistpl
sahf
or
les
cmp
jmp
clc
jl
outsb
into
jns
mov
adcl
jp
jns
push
inc
sbb
orl
sbb
mov
jb
dec
cmp
addr16
ss
jnp
pop
or
pop
int3
jb
icebp
and
pop
ja
inc
fdiv
and
xchg
ss
lods
aas
pop
inc
lahf
enter
mov
and
adc
sub
fsubrl
pop
inc
push
fistpl
pushf
fildll
adc
fistl
in
clc
cmc
jae
aaa
push
es
into
dec
xchg
ret
mov
mov
mov
dec
sarl
pop
inc
mov
pop
daa
les
sbb
stos
adc
or
xchg
inc
outsl
sbb
push
jo
imul
cld
stc
dec
and
stos
sbb
pop
loope
mov
sub
in
jge
in
jle
fwait
rcll
push
ss
ret
pop
nop
dec
xchg
xor
adc
fdivrs
out
cmp
mov
fidivrs
sti
mov
mov
push
xchg
xor
jle
or
arpl
mov
adc
hlt
mov
outsb
cmpsl
xor
mov
andb
notb
fmuls
push
in
adc
subl
lea
cmp
push
sbbl
mov
sbb
hlt
sbbl
addr16
mov
incb
xor
xchg
dec
inc
xchg
inc
lcall
test
es
mov
in
test
push
mov
es
dec
iret
or
push
push
xchg
shlb
sub
fistpl
jg
dec
and
out
jle
lds
cmp
dec
push
fildl
xchg
lahf
ja
insl
adc
sub
pop
xor
icebp
outsb
pop
fwait
mov
adc
popa
sbb
dec
orl
mov
adc
in
dec
mov
add
xor
push
cli
insl
test
int3
dec
orb
mov
or
les
pop
xchg
mov
dec
dec
push
lahf
aaa
insl
sub
push
cmp
std
cltd
or
push
and
imul
rcll
shll
mov
add
std
mov
sarb
sub
jp
adc
sarl
out
sbb
fwait
out
test
sbb
mov
mov
xchg
sti
fistpll
hlt
sbb
push
jnp
test
cmpsb
rclb
rcrb
ja
in
push
in
dec
test
scas
push
test
stc
fistl
ds
add
bound
orl
pop
jmp
imul
dec
int
inc
mov
clc
mov
cwtl
pop
ret
int
mov
jbe
mov
addr16
jge
inc
repnz
mov
bound
addr16
adc
gs
cld
xchg
and
mov
fsubrl
imul
lret
scas
or
xor
add
in
scas
adcb
push
aam
xchg
push
fisubl
cmpsb
pop
aaa
ljmp
push
and
mov
in
jo
sbb
loope
xchg
push
and
inc
push
add
repnz
data16
cmpsl
lods
jns
mov
cltd
cmp
sbb
fstpt
adc
and
add
add
mov
sti
mov
repnz
xchg
mov
arpl
jp
jo
cmp
shl
pop
int3
lret
inc
adc
jecxz
jnp
and
jle
insl
jb
adc
cmp
call
jl
or
jmp
outsb
ljmp
cmp
frstor
add
mov
add
hlt
imul
lds
xor
xor
sbb
xchg
jo
push
push
cmpsb
pop
dec
aas
mov
and
out
inc
xchg
push
inc
or
pop
sub
cmp
je
rclb
cmp
arpl
sub
lahf
daa
mov
rol
insb
mov
push
das
xor
lods
in
mov
insl
sbb
fisttpll
lcall
cmp
aaa
aaa
dec
inc
dec
data16
sub
aad
inc
dec
imul
xor
mov
fsts
pop
xchg
aaa
xor
test
ss
xor
push
or
iret
xchg
lods
inc
loop
popa
push
insl
sbb
xchg
gs
sbb
mov
jnp
and
iret
and
in
inc
mov
insb
call
xor
inc
xchg
adc
and
mov
cs
shl
ficomps
push
xchg
stos
test
jmp
xchg
pop
pop
sbb
xor
xor
sarl
jmp
xchg
mov
ret
sub
nop
lock
in
jge
pop
jmp
cmp
adc
out
rorl
cmpb
hlt
push
shlb
inc
paddsb
dec
mov
mov
pop
xlat
mov
and
dec
sub
cmovne
inc
ds
daa
lods
xchg
mov
push
adc
sub
mov
lahf
cmp
iret
arpl
out
adc
or
xchg
aas
jae
repz
cmc
adc
rolb
divb
cmpsb
pop
pop
div
dec
pop
lret
pop
sub
xchg
mov
push
popa
lods
dec
sbb
mov
aad
dec
call
insl
or
push
add
lds
fbld
aas
hlt
fldl
sbb
mov
dec
shrl
mov
loopne
out
add
add
in
push
test
push
xchg
pushf
jmp
inc
xchg
xor
adc
aas
or
push
lea
out
in
ljmp
push
dec
dec
mov
addl
inc
aas
push
int
sbb
stc
insb
repnz
sub
inc
jbe
cmp
dec
jg
push
sti
jge
roll
and
push
ja
adcl
lret
mov
or
mov
addr16
push
add
sub
fchs
mov
test
pusha
cli
sbb
adc
fnstenv
notb
mov
sbb
mov
xor
fdivl
inc
push
into
add
js
data16
mov
sub
jb
push
cmp
sub
xor
test
out
scas
addr16
outsb
push
mov
dec
adc
test
mov
add
push
mov
pop
push
js
xchg
sbb
ret
jne
arpl
rcrl
fisttpll
jno
or
lcall
jbe
cmp
loopne
xchg
test
push
xchg
sahf
cli
sub
adc
jmp
sbb
and
cmp
inc
jb
xor
ds
sbb
cmp
push
das
xchg
fldcw
testb
mov
dec
dec
mov
repnz
outsl
jnp
dec
or
push
push
nop
pop
sahf
dec
mov
push
push
popf
imull
xchg
testb
scas
popa
pusha
testl
bound
lcall
sbb
jmp
cmp
xor
mov
jge
lea
xchg
test
imul
push
push
dec
lahf
push
jmp
jns
push
cmp
enter
lock
subb
sbb
jle
cs
add
inc
incb
das
imul
and
faddl
fldenv
lock
ds
cmp
cmp
mov
test
call
jns
jae
dec
push
sub
mov
jl
cmp
cmp
out
jno
das
mov
cld
cld
mov
cmp
add
xor
cltd
dec
mov
jle
ret
jecxz
into
inc
push
test
aaa
cmp
push
dec
push
repnz
shrb
mov
aas
jmp
shlb
sub
dec
mov
rcll
imul
rolb
push
leave
sti
dec
inc
adc
or
xchg
sub
pop
xchg
adc
ret
cld
data16
pushf
fidivrs
inc
cmpsb
sbb
aad
dec
lcall
loopne
hlt
or
mov
sub
cmpb
loop
lret
push
pop
imul
push
rcll
lahf
and
es
adc
xor
test
ljmp
adc
inc
xor
xchg
adcl
std
xchg
fldenv
jno
iret
push
and
pop
mov
ja
sub
popf
push
and
out
mov
sub
test
test
shr
push
out
adc
sub
test
and
sbb
jnp
into
ljmp
in
xchg
and
sbb
cli
cmp
cwtl
cld
test
pusha
push
sbb
xor
scas
and
jge
mov
outsl
jbe
ret
inc
rcll
sarl
mov
adc
int
and
fmuls
adc
rorb
sbb
sbb
std
pop
dec
mov
aam
mov
cld
ror
push
jmp
arpl
inc
dec
or
dec
cmp
lret
adc
pop
enter
jnp
bound
jg
es
dec
add
xchg
mov
mov
pusha
subl
imul
in
lahf
rclb
or
call
inc
stc
pop
dec
dec
das
std
scas
shrl
lock
xor
pop
hlt
inc
clc
mov
push
outsl
dec
adc
lds
sub
test
pop
dec
mov
nop
out
lea
mov
cmp
and
xor
fmuls
out
xchg
mov
pop
pushl
int3
shr
xchg
jno
les
sub
push
cltd
xchg
pop
insl
leave
or
movsl
adc
mul
pop
sbb
data16
lret
addr16
daa
into
add
insb
andb
ret
jo
dec
adc
dec
adc
cmp
in
dec
daa
jb
xor
sbbb
jo
cld
sarl
out
add
fnstcw
rolb
cmpsl
jg
pop
sub
pop
gs
adc
mov
sub
icebp
sub
jne
arpl
xchg
or
cmp
les
jmp
xlat
push
das
loop
lret
arpl
cmp
sbb
lcall
fs
orl
cmpsb
loopne
xor
dec
clc
jp
xchg
test
shlb
dec
scas
dec
aad
pop
mov
ret
lahf
test
dec
fsubp
lahf
jl
or
jb
mov
aaa
add
rcrl
in
dec
push
sbb
add
stos
in
sarb
xchg
ja
cmp
mov
fstl
sub
into
xchg
sbb
or
test
fwait
dec
sti
popa
mov
dec
fwait
sbb
cmp
adc
or
pushl
mov
in
dec
xor
add
xchg
ljmp
push
sub
and
je
int
loope
pop
or
mov
ja
inc
inc
movsl
out
adc
cmova
cltd
cmpsl
dec
ds
mov
jnp
in
loope
lahf
jl
gs
dec
popa
in
push
jbe
sahf
ret
test
mov
mov
inc
or
andl
mov
inc
pop
mov
and
push
loop
js
pushf
aad
shlb
adc
in
mov
ja
sbb
cmpsl
sarb
jo
dec
fsubrs
fwait
cmpsb
mov
addb
fiaddl
inc
push
pop
leave
or
cmp
jns
xchg
xchg
mov
daa
dec
mov
xor
pusha
aad
jmp
fsubl
ret
repz
adc
out
jp
xchg
or
popa
pop
shrb
cmp
dec
jb
ds
cltd
rsm
in
adc
scas
inc
test
arpl
push
cmp
addr16
mov
sub
add
or
xor
test
mov
push
xor
mov
in
lea
lret
and
in
and
or
test
insb
ja
mov
sbb
sub
nop
stos
mov
inc
out
cmp
inc
cli
decb
jb
icebp
lods
into
lds
aad
popa
pop
jecxz
push
daa
dec
mov
lret
adc
jmp
ret
push
push
ret
cmp
fdivl
dec
jmp
ret
pop
in
pop
in
test
adc
inc
mov
std
lahf
rol
push
push
and
cld
shll
xchg
sbb
sbb
mov
pop
lahf
mov
out
cmp
lea
sbbl
loopne
inc
popf
sbb
jp
mov
lea
fwait
add
xchg
adc
jns
ss
data16
jecxz
mov
andb
sub
jge
fsubrs
int3
sub
push
in
sub
icebp
iret
fsubs
xchg
sub
jg
rcll
aam
and
iret
jns
pop
and
test
sub
adc
je
aam
scas
lods
inc
insl
cmp
inc
sti
xchg
inc
mov
cmc
xor
nop
jb
scas
scas
ja
jecxz
mov
bnd
bound
ret
add
movsb
mov
adc
lahf
icebp
mov
mov
repz
xchg
out
fprem1
aas
xor
hlt
ss
dec
fildl
push
mov
dec
icebp
and
jns
out
dec
shll
cli
or
sbb
inc
push
fldenv
pop
xchg
fcomip
add
push
xor
jp
lea
or
add
adc
mov
and
je
mov
mov
adc
inc
aaa
cmpsl
xor
mov
jb
sbb
popf
dec
cmpsl
jp
inc
aas
pop
sbb
cmp
jno
pop
mov
out
daa
mov
repnz
xor
hlt
mov
lret
mov
inc
cmp
lahf
xchg
push
cmc
mov
insl
sub
xchg
dec
sub
cli
incl
jbe
mov
lret
es
dec
sbb
fwait
les
add
and
popa
sub
inc
mov
and
mov
dec
mov
pop
add
push
std
scas
mov
push
xor
call
test
pop
lds
test
pop
aad
push
cs
pop
les
in
loopne
and
fsubrp
jmp
inc
xchg
in
lods
sbb
adc
jo
xchg
pop
stc
loope
mov
shrb
frstor
int3
popf
xchg
push
inc
test
lcall
loope
lret
dec
push
cmp
out
jmp
test
cld
cmp
call
push
mov
push
fsubr
test
or
add
cmp
cmp
cmp
dec
aas
stos
int3
jno
data16
xor
push
outsb
inc
dec
cmpsl
cmp
pop
mov
outsl
fisubrs
testb
into
cmp
dec
icebp
dec
push
outsb
dec
mov
push
dec
leave
pop
add
insb
push
xchg
js
add
aaa
insb
shr
arpl
mov
insl
sub
lock
aaa
mov
int3
inc
cmp
add
pusha
je
addr16
lds
ret
adc
sub
cmp
fs
mov
sub
ljmp
inc
dec
mov
cmp
lret
jns
xchg
cmp
lods
clc
das
sub
xchg
jle
incb
pop
mov
mov
lret
push
inc
xor
xor
ja
jnp
and
xchg
leave
xor
scas
out
xlat
xor
leave
sar
pop
pushf
inc
sbb
nop
push
or
inc
clc
cmp
es
mov
xlat
dec
out
push
add
insl
pop
hlt
cmpsb
aas
push
lret
and
popa
lods
mov
and
sub
cltd
push
push
mov
pop
pushf
rorb
pop
bound
mov
fmuls
movsb
xchg
test
dec
ficomps
hlt
rcrb
je
or
add
es
idiv
movsb
iret
push
mov
xchg
sub
loopne
adc
int
mov
xor
mov
hlt
sbb
dec
mov
outsl
dec
shl
mov
or
xlat
adcl
jle
enter
mov
test
xlat
jno
pop
mov
mov
aam
or
imul
mov
jnp
mull
push
mov
imul
sbb
and
in
inc
call
pop
inc
cmp
std
insb
pop
jne
sub
add
popf
cld
ja
xor
xor
mov
or
in
pop
hlt
push
lea
mov
mov
das
jecxz
adc
repz
mov
mov
outsl
sarl
jle
cmp
push
repz
lock
loopne
inc
aam
inc
ja
sbb
mov
js
sbb
pop
mov
jp
popl
dec
push
pushf
mov
iret
sbb
imul
lds
adc
inc
jne
fnsave
imul
lcall
dec
loope
inc
pop
lods
je
out
lret
fsubrl
push
out
xchg
es
scas
dec
pop
jae
das
mov
push
daa
sbb
xchg
mov
enter
dec
jno
lods
lahf
mov
jge
or
iret
scas
jl
test
adcl
and
mov
test
or
mov
int3
in
lods
sahf
test
sub
cmpl
jg
add
ret
popf
std
mov
push
xchg
and
sub
push
orl
or
rcl
cld
iret
adc
outsl
pop
imul
outsb
mov
bound
jno
xor
push
jge
dec
jl
leave
out
xchg
dec
enter
mov
fisubs
mov
jns
fistpl
xchg
mov
je
out
adc
mov
pop
aas
and
pop
pop
jo
call
push
mov
mov
push
std
lret
mov
xchg
push
sbb
adc
fs
adc
push
ret
jno
sub
jge
sbb
ss
mov
mov
insl
mov
loope
lds
fs
cmp
shll
jmp
fbstp
sbb
clc
icebp
repz
test
test
notb
int3
sbb
cmp
pop
lods
sub
std
fwait
int
pop
repz
shrb
pop
jmp
dec
dec
xchg
pusha
mov
cmp
in
stos
dec
nop
sub
or
sub
iret
ret
adc
push
shlb
into
add
test
push
inc
je
addl
fmull
push
adc
inc
adc
sarb
ret
inc
das
xor
lds
dec
mov
popf
out
cld
pop
fwait
sub
pop
fnsave
push
sub
push
dec
jb
insb
dec
push
scas
outsl
push
lea
arpl
inc
sti
movsl
jnp
icebp
mov
mulb
popa
jns
test
icebp
mov
test
je
push
lret
aam
mov
loope
mov
mov
lods
cmpb
xchg
out
push
cs
inc
adcb
int
lds
jg
pop
les
aas
outsl
iret
mov
jo
andl
cmp
xor
xlat
cmp
jae
stos
lods
stos
and
jecxz
add
repz
jb
out
repnz
inc
in
mov
cli
push
jno
push
add
jle
xchg
mov
jp
cwtl
int
sbb
xor
jmp
xchg
jo
rcll
enter
sub
sbb
push
jb
out
lret
push
push
jl
xchg
subl
insl
std
cmp
push
movsb
lods
adc
add
popf
ds
xor
xchg
push
dec
sub
bound
mov
ja
cmp
mov
pop
mov
nop
inc
sub
inc
test
fsubs
icebp
daa
fs
dec
mov
sbb
cmp
jo
push
cld
add
jl
pusha
rorl
xchg
pop
pusha
out
xlat
cltd
cmpsb
and
into
adc
insb
pop
sbb
lods
test
sbb
cmp
pusha
ss
std
mov
push
jbe
popa
loope
enter
popa
arpl
cltd
stc
sbb
sahf
jecxz
or
movsb
repz
push
adc
jmp
dec
inc
ret
xchg
mov
shll
cmp
add
push
shrl
in
jae
inc
dec
lods
hlt
add
jecxz
mov
sbb
and
sub
cli
repnz
xor
shll
lcall
sbb
aad
jne
mov
stos
movsb
std
add
leave
loopne
sbb
pop
push
adc
jl
mov
mov
repnz
std
push
sarb
inc
in
inc
mov
divb
cmp
dec
aad
daa
mov
sub
ss
aas
xchg
mov
sahf
cmp
jo
movsb
push
jae
pop
bound
xor
cmc
imulb
mov
stos
fadd
mov
aam
push
add
ficoms
arpl
lcall
jno
cmp
mov
sarl
out
jecxz
push
lret
dec
add
xchg
imul
mov
in
lock
mov
pop
mull
loop
cwtl
sub
sbb
inc
xlat
lea
xor
mov
and
test
iret
push
mov
es
adc
in
es
or
stos
rcl
test
js
loop
jecxz
andb
jns
push
or
ljmp
popf
aad
cmpl
jg
add
dec
das
sbb
clc
add
xor
jecxz
xlat
andb
xchg
lods
loopne
loopne
xchg
dec
add
cltd
mov
test
sbb
dec
rolb
leave
ja
or
pop
shlb
jns
loopne
loopne
pop
push
sub
lcall
pop
imul
add
mov
sbb
cld
xor
loopne
sub
pop
cmc
test
imul
xor
jb
lods
aam
js
pop
xor
pushw
pusha
out
in
iret
nop
hlt
int
sub
out
push
xor
mov
inc
push
mov
fsubrl
call
push
cmc
or
mov
bound
lds
mov
cmp
test
mov
aaa
dec
test
sbb
cli
and
pop
call
imul
cmc
daa
add
jmp
push
fbstp
add
lahf
mov
fstl
mov
push
fisubrs
cwtl
push
mov
xchg
jmp
push
mov
push
pop
lret
into
lahf
mov
mov
pop
mov
push
push
mov
into
orb
daa
pushl
push
sub
movb
dec
fnstcw
or
in
mov
mov
psubd
dec
enter
and
pop
cltd
rcrl
outsl
mov
or
push
roll
xchg
jns
mov
loopne
jg
scas
scas
pop
push
jns
or
mov
dec
push
outsl
sub
push
loop
adc
cmp
sub
imul
scas
mov
jnp
jns
xor
mov
push
enter
sbb
cs
int3
stc
cld
mov
subl
adc
cwtl
xchg
add
and
sbb
lcall
daa
dec
xchg
add
repnz
out
mov
dec
mov
push
cmp
mov
inc
test
pop
cmp
int
mov
pop
dec
out
leave
mov
subb
repnz
sub
cmp
inc
mov
jno
enter
clc
psadbw
mov
adc
sub
call
add
jno
adc
pop
pop
insb
sbb
dec
aad
push
sub
xchg
enter
xchg
mov
pop
push
xor
je
aam
stc
ret
sahf
fwait
arpl
cmpsb
loope
or
push
lock
pop
std
in
jno
cmpsl
jno
add
ret
dec
jp
xchg
jmp
fbstp
lahf
push
ror
adc
js
or
pop
mov
dec
shrb
mov
dec
loope
adc
inc
into
xchg
in
stos
mov
fwait
pop
jl
daa
sbb
jp
mov
push
adc
jbe
loop
push
push
sahf
mov
aaa
in
push
adc
cld
aam
xor
mov
jmp
pop
test
mov
test
push
sbb
mov
xchg
mov
and
enter
cmp
inc
sub
xchg
call
sub
ret
daa
in
lcall
filds
clc
pusha
outsb
jle
sub
cmp
jo
sbb
shrb
xchg
mov
sbbl
sbb
xchg
in
sahf
in
aaa
int
push
mov
inc
pop
cmp
les
dec
xor
jns
cmp
add
push
movsl
loopne
movsl
fisttps
inc
pop
inc
and
mov
pop
mov
mov
sar
movsb
fstpl
mov
xor
add
popl
test
rcrl
out
xor
lods
sbb
mov
pop
sub
mov
clc
cld
pop
and
and
xor
mov
inc
lahf
pusha
test
mov
xor
daa
add
jmp
aaa
int
pop
in
cmp
inc
bound
xchg
xchg
mov
pop
into
pop
int
ss
jmp
jne,pn
mov
out
inc
push
leave
popa
push
adc
into
sub
adc
hlt
xchg
jmp
adc
xchg
and
loopne
sub
in
js
mov
push
mov
inc
test
xor
movsl
add
lock
rclb
test
pushf
aad
dec
dec
insb
in
ss
aad
in
aad
cmp
cmp
insb
in
cmpsb
orl
inc
and
add
push
loop
flds
jle
test
push
jge
sbb
cmpsl
hlt
into
mov
fadds
out
out
fidivs
fsubrl
adc
xchg
sub
cmp
repz
es
movsb
inc
mov
int
jmp
jae
sbb
pop
xor
jmp
cs
cmpl
push
daa
xchg
aad
add
xor
cli
int
roll
aad
adc
xlat
mov
stos
stc
add
mov
xor
cltd
sbb
pop
scas
and
xchg
call
xor
dec
sub
cwtl
ret
push
in
pop
aas
cmp
mov
mov
xor
mov
leave
aaa
add
lock
jne
mov
mov
mov
pop
sbbl
jecxz
cmpsl
movsb
xor
push
or
paddsb
mov
inc
dec
stc
xchg
mov
mov
ss
jne
es
cmp
add
test
ds
and
mov
sub
inc
push
and
loope
pop
dec
inc
js
sahf
cmp
xchg
jmp
subl
mov
sbb
ds
stos
adc
jge
mov
insl
in
pop
jge
or
mov
push
sbb
cmp
adcb
stc
mov
mov
sub
mov
daa
lods
loopne
loop
lret
lret
push
js
mov
popl
ret
xor
mov
ss
or
mov
and
pop
adc
push
in
outsl
stos
das
add
mov
hlt
sbb
lcall
loop
xchg
test
mov
lret
xchg
fdivl
pop
sub
bound
mov
push
push
mov
fcomp
popa
sbb
das
push
xorb
repnz
pop
cmp
inc
andb
cmp
inc
bound
sbb
pop
mov
xor
movsl
add
in
adc
sti
ljmp
add
movsl
hlt
adc
push
xor
pop
xor
sarl
cmp
mov
lea
in
scas
jo
in
gs
push
pop
arpl
xchg
ret
inc
scas
je
mov
pop
andb
orb
mov
mov
mov
into
push
and
inc
xchg
cmp
fsubs
xor
pop
ficoml
lea
pop
and
pop
test
jb
lahf
push
or
xlat
out
inc
or
mov
clc
mov
fadds
test
mov
push
andl
sub
or
lea
je
xor
mov
mov
sub
hlt
or
rcrb
rcll
or
out
lods
sub
and
int
sbb
arpl
or
xchg
or
stc
dec
mov
std
xchg
in
pop
lret
out
cmp
fnstsw
mov
pop
dec
jae
sbb
xor
ds
push
stos
lcall
or
sub
cmpsb
mov
mov
aad
gs
sbb
aam
sbb
cmp
loope
sub
mov
cmp
insb
shr
pop
push
outsl
push
sub
xchg
and
fnsave
sbb
test
sbb
andb
jae
lock
addr16
lock
jg
outsl
pop
hlt
insb
ljmp
cltd
jae
push
outsb
mov
popf
cmp
sbb
sub
ds
loopne
fimuls
shl
lret
xchg
sub
mov
and
mov
into
aas
inc
outsl
adc
and
stos
jge
jg
movsl
lea
enter
fwait
ds
rol
xlat
movsl
shlb
in
pop
stos
sbb
push
or
push
xor
test
mov
cmpxchg
xor
sbb
cmp
xchg
daa
cmp
or
adc
xor
mov
and
lods
jle
insl
sub
sbb
push
fdivrs
jle
aad
mov
lcall
inc
daa
scas
cmp
cmp
jp
inc
inc
cmp
cmp
hlt
es
cmp
xor
ljmp
cmp
je
into
jne
jle
push
lds
imul
pusha
fldl
adc
mov
pushf
dec
xor
divb
icebp
scas
fdivrs
cld
and
jg
into
mov
or
jmp
dec
jbe
sbb
mov
push
in
jno
adc
out
in
adc
iret
jnp
in
mov
mov
aas
ja
cmp
pop
add
mov
jbe
cltd
cwtl
jp
scas
xor
outsb
xchg
fmull
inc
test
aas
jecxz
xchg
imul
addr16
xchg
xchg
mov
xchg
nop
mov
iret
lahf
push
mov
sbb
vpunpckhqdq
inc
mov
lods
inc
pop
ss
jo
jnp
negb
adc
jbe
and
test
int3
out
jne
cmp
push
lahf
sbb
test
mov
jmp
push
dec
das
cmp
orb
xchg
xchg
push
loope
pop
add
mov
xchg
dec
sbb
pop
sti
out
add
stc
xchg
xchg
decb
fucom
fdivs
sti
mov
pop
adc
loop
ret
inc
push
jge
mov
imul
jbe
jle
or
icebp
adc
sbb
adc
inc
push
and
js
lds
mov
jns
adc
sub
sbb
cli
shlb
clc
in
pusha
imul
sti
inc
adc
sbb
xor
sarl
fwait
test
adc
mov
dec
scas
in
insb
movl
js
sub
lret
sub
sbb
test
loop
dec
xor
mov
mov
mov
mov
adc
fsubrl
out
out
loope
xchg
sbbb
das
and
xlat
pusha
or
adc
cltd
and
cmp
mov
cmp
pop
fimull
outsb
repnz
aam
jle
je
int3
add
pop
repz
enter
sbb
dec
clc
mov
rorb
mov
sub
fcmovbe
fisubrl
jbe
pop
xchg
ljmp
adc
sub
pop
add
dec
sbb
call
mov
push
add
movb
mov
movsl
jp
dec
dec
dec
das
xchg
sbb
xor
ljmp
push
pop
rclb
xchg
xchg
dec
sub
jcxz
push
push
push
in
push
popa
cvtpi2ps
lcall
lret
aam
in
test
dec
xor
xchg
sti
insl
mov
xchg
call
mov
aaa
imul
repz
out
in
mov
jg
imul
ss
in
shlb
scas
repz
repz
pop
gs
mov
cmp
ret
or
push
scas
jo
jnp
pop
and
ficoms
in
jl
mov
jae
shl
mov
aad
push
sahf
addr16
xor
out
xchg
cwtl
loop
roll
mov
pop
je
push
pop
xor
adc
adc
int3
xchg
sub
mov
push
in
inc
icebp
lcall
mov
popf
inc
or
rcr
cltd
or
cmpsb
adc
aaa
ss
aas
mov
or
push
enter
dec
add
fwait
ss
jo
inc
push
mov
or
xchg
dec
cmpb
xchg
add
mov
ljmp
icebp
pop
out
cli
mov
push
mov
cli
icebp
inc
push
lcall
loopne
prefetch
fimuls
mov
int3
sbb
bound
scas
or
loopne
jmp
mov
sti
aas
scas
lcall
lahf
aaa
cmp
stos
and
insl
jl
and
cmc
pop
pushf
dec
loope
les
gs
push
lds
xor
sahf
out
xlat
push
andl
and
mov
shll
aam
popa
add
lahf
cmc
add
xchg
jg
imul
mov
mov
and
or
scas
std
adc
cmp
mov
cmp
mov
adc
test
mov
xor
ss
mov
push
push
dec
pop
addr16
gs
std
sbb
cmp
mov
mov
mov
ds
movsb
scas
pop
xlat
jne
jo
xchg
arpl
rcr
or
fisttpll
add
xorl
xchg
pop
int
mov
mov
ja
xchg
mov
jecxz
mov
sbb
ss
cmc
push
ret
or
fildll
dec
clc
mov
fimuls
imul
outsb
jle
xchg
dec
insl
fisubl
xchg
pusha
imul
clc
pop
mov
shl
dec
insl
nop
pop
cmp
rcrb
mov
push
xor
out
sbb
mov
in
adcl
sbb
sub
or
mov
bound
jecxz
sub
shl
jbe
cli
dec
imul
mov
jbe
dec
xchg
or
mov
or
jae
inc
mov
iret
aam
xor
or
movsl
into
cmp
pop
into
loope
xchg
cmc
cli
in
iret
movsb
std
add
cmp
add
movsl
cmp
in
aaa
lods
adc
adc
adc
sbb
pop
lret
cmp
xor
adc
lcall
aas
gs
cmp
sub
and
push
lahf
mov
mov
out
stos
leave
mov
mov
outsl
int
add
cmp
or
andb
jl
mov
sbb
adcl
jp
add
mov
clc
addr16
or
dec
cmpsl
inc
test
xor
sub
fucomi
loop
lahf
mov
or
sub
repnz
nop
jno
int3
add
dec
mov
or
inc
loop
repnz
in
pop
or
push
and
pop
cmc
pop
mov
imul
jo
jbe
push
inc
fs
push
or
mov
inc
popa
cmp
jo
scas
popa
mov
popl
jae
fwait
or
xchg
adc
mov
push
dec
push
xchg
jbe
je
xlat
inc
lock
ja
sbb
dec
inc
inc
std
ljmp
ljmp
rclb
inc
add
mov
arpl
movsl
mov
jns
mov
aam
hlt
cld
add
lahf
pop
mov
loope
sub
insl
arpl
shlb
lahf
add
fidivl
xchg
sti
jne
push
and
add
shrb
xor
out
lret
xlat
notl
cs
nop
nop
dec
cltd
imul
inc
cmp
adc
add
mov
stos
test
mov
fsubrl
das
repz
int
loope
insb
adc
lock
mov
mov
clc
sbb
aad
push
imull
cs
mov
ja
xchg
sbb
cmp
lock
rcr
fstpt
sub
adc
fldcw
xlat
outsb
frstor
insb
cmp
xchg
lods
das
ss
shrl
adc
rorl
push
nop
mov
aaa
mov
test
out
pop
iret
mov
clc
and
test
outsl
mov
inc
cld
fimuls
push
cmpsl
rorb
repz
je
ljmp
lods
ficomps
push
mov
sub
push
jns
push
adc
dec
popa
or
orl
cmp
xor
pushf
mov
es
int
mov
adc
imul
jnp
xchg
daa
inc
fsubrl
jb
sub
mov
xchg
frstor
push
int3
inc
jmp
test
data16
lods
xchg
lcall
iret
pop
mov
dec
lea
pop
push
sub
pop
cs
sbbl
push
nop
ds
mov
cmove
arpl
mov
and
push
shrb
jo
stos
adc
test
inc
xchg
or
jecxz
and
add
pushf
and
xor
cs
stos
sbbb
mov
test
xlat
cmp
mov
mov
jmp
cmp
pop
or
jmp
stc
adc
int
jecxz
and
out
pushf
mov
call
cmp
popf
xor
arpl
das
dec
cld
int3
pop
sub
xor
das
cmp
mov
xchg
xchg
es
xchg
inc
popf
decb
in
lods
subb
sbb
and
pop
insb
fistpll
cmp
je
les
ja
fistpl
popf
cld
cmp
cli
push
aad
mov
inc
cmp
orl
cmpsl
pop
xorb
adc
and
sub
jecxz
out
or
and
jb
scas
mov
ret
mov
cli
stos
and
imul
mov
sbb
mov
jb
inc
push
test
icebp
hlt
sub
sahf
mov
repnz
fwait
add
mov
pop
icebp
xlat
pop
lea
fbld
push
lret
cmp
dec
cmp
push
and
push
arpl
lret
adc
frstor
pop
int
dec
rcrl
xchg
jge
xor
pop
mov
ss
cli
lcall
pushf
xchg
addr16
daa
imul
or
jl
sarl
pusha
inc
out
sbb
push
mov
cmp
jbe
inc
or
test
in
add
pop
mov
add
pop
jl
sti
movsb
int3
xchg
mov
sbbl
pop
push
and
jp
sub
jae
scas
pop
mov
std
ljmp
fiaddl
das
mov
aas
data16
loope
mov
std
dec
xchg
cmc
sbb
add
lret
push
bound
xchg
fiaddl
sub
test
imul
pop
es
cmc
push
int3
cs
cwtl
popf
dec
inc
enter
cmpsl
call
in
dec
pop
out
mov
pop
and
mov
das
loope
pop
mov
and
loop
xchg
or
pop
jle
int
insb
sub
jle
push
xchg
push
cli
mov
xchg
mov
adc
mov
adc
and
and
mov
hlt
xchg
push
pop
cmp
test
jp
xor
pop
mov
jge
cmp
xor
push
push
repnz
dec
adc
xor
negl
adc
mov
les
sarb
add
imul
scas
pop
jb
adc
inc
test
and
bt
xchg
stos
sub
enter
inc
popf
add
cld
mov
mov
lods
je
mov
and
pop
jp
xchg
ljmp
push
fnstenv
jecxz
xchg
cltd
lods
in
insl
pop
jp
clc
mov
jle
jns
sti
push
push
or
push
shlb
rcr
out
ja
xor
jno
sub
lahf
mov
mov
ficomps
xchg
jge
sub
imul
in
fs
jg
adc
jae
mov
iret
daa
push
xorb
js
cli
mov
adc
sbb
pushf
adc
mov
negl
das
pop
xchg
sub
cmpsl
test
pop
jecxz
lds
mov
popf
out
or
shrl
out
bound
out
je
ficoml
sub
orb
stos
aaa
jnp
jb
shrl
cli
call
pusha
rcrb
cltd
jno
and
into
mov
ret
fistps
in
adc
aad
and
cmc
and
push
pop
mov
sbb
pop
lods
mov
inc
addl
pop
loop
add
pushf
jno
sar
and
or
dec
in
fnsave
hlt
lret
stos
adcb
inc
hlt
data16
mov
inc
imul
mov
cmp
pop
notl
adc
mov
add
push
bnd
pop
test
inc
imulb
sahf
adc
xor
sub
pop
int3
push
sbb
ficompl
jl
fcompl
pop
insl
repz
and
loope
in
data16
int3
fs
jecxz
imul
push
mov
ss
jbe
and
push
lahf
in
into
jge
or
scas
or
jb
fs
pop
outsb
shlb
mov
mov
frstor
popf
stos
je
sbb
fsubr
mov
and
shll
sti
add
aam
pushf
popf
fld
cmpsb
cmp
sbb
lods
scas
pop
loop
pusha
and
mov
mov
cltd
bound
pop
ret
sbb
jp
inc
out
mov
mov
push
data16
jmp
orl
testb
adc
mov
loope
fdivrs
cmp
lahf
or
xchg
icebp
mov
push
scas
fsubrs
mov
push
dec
and
in
ja
hlt
inc
or
or
jnp
adc
ret
and
ss
lcall
add
ljmp
mov
jp
loopne
xor
inc
pop
sub
lret
shrb
mov
ljmp
push
cmc
jne
and
jl
inc
imul
mov
xchg
jo,pn
and
aas
jmp
pop
ret
dec
push
dec
lods
lods
mov
cmp
cld
iret
ljmp
test
jae
jle
pop
clc
xor
adc
hlt
outsl
add
dec
enter
jecxz
out
fsubs
iret
aaa
push
pop
fidivrl
lds
jp
xor
pop
mov
fsts
add
and
pop
mov
lds
jne
mov
out
stos
xchg
add
out
adc
sbb
jo
stos
les
push
jg,pt
or
mov
mov
cmp
lock
out
jmp
jmp
cmpsl
mov
mov
pop
fwait
jge
and
dec
outsb
mov
test
adc
and
subb
cmpsb
lea
out
out
pop
push
pop
adc
clc
and
add
jb,pt
mov
lods
scas
xor
mov
js
cmp
push
mov
or
cmc
push
fucomi
std
xlat
push
fistpl
loop
shlb
push
sbb
sub
sub
pop
push
pusha
cmpb
ret
xor
popf
and
sahf
sbbl
int3
sub
cmpsl
cs
dec
loope
cmp
xor
loope
cs
sbb
jle
mov
push
add
xor
fidivl
aam
jge
xchg
loop
mov
les
lret
loop
cmpl
std
mov
push
cmc
adcl
mov
dec
lock
imul
fstpl
das
add
xchg
pop
jl
pop
push
fwait
test
cmc
cs
jecxz
pop
sbb
out
mov
fistl
mov
adc
sbb
mov
int
movl
insl
call
or
pop
inc
leave
jbe
mov
aas
xor
mov
fildl
xchg
mov
das
push
cmp
dec
add
out
mov
repnz
sub
xchg
adcb
or
push
dec
mov
mov
lret
xor
je
fnstsw
push
out
mov
mov
jmp
roll
mov
iret
jnp
fs
lcall
rcrb
mov
loope
jae
popf
das
jl
daa
cmc
xor
jne
js
xchg
sbb
pop
sbb
subb
push
push
jnp
mov
mov
inc
xchg
lea
fnstcw
es
xchg
stos
dec
or
test
mov
popf
lcall
cmp
les
mov
lcall
test
je
lret
add
xlat
movsl
jl
test
pusha
xchg
cmp
mov
add
mov
pop
mov
adc
inc
cli
imul
adc
dec
jne
outsb
add
data16
ds
mov
arpl
das
insl
in
cmp
cltd
lods
hlt
ljmp
repz
ss
jne
sub
mov
cmpb
inc
lock
mov
int
dec
arpl
fadds
and
lret
mov
jmp
pusha
dec
leave
mov
arpl
cwtl
in
mov
and
cmc
mov
and
xchg
lods
pop
mov
lcall
xor
or
scas
jns
push
lcall
js,pn
push
lea
scas
scas
xchg
fs
stos
sbb
cld
push
xchg
pop
xchg
cmp
or
cwtl
xchg
aam
repnz
fiadds
cmp
popa
push
outsb
sub
rcl
fists
movsl
inc
outsb
outsb
into
adc
mov
or
int3
fldl
and
insl
popf
pop
sbb
push
popl
lret
ret
in
pusha
mov
lahf
adc
xor
inc
call
aad
enter
xchg
lret
sbb
std
mov
rolb
cmp
xchg
jns
xor
shll
jp
ljmp
pushf
dec
push
mov
rcrl
jmp
mov
adc
fdivrp
mov
inc
cltd
sub
dec
cmp
ret
mov
pop
mov
ljmp
aas
adcb
adc
and
inc
daa
pop
sar
xor
lods
movntq
out
test
inc
fiaddl
in
inc
or
jns
and
cmp
dec
mov
sar
or
sub
sub
inc
insl
cmc
aas
nop
ficoms
xor
stos
std
fwait
adc
dec
pop
cmp
and
mov
mov
sub
call
add
xchg
cli
sbb
pop
pushf
mov
xchg
das
lods
cmpsb
xor
out
cltd
dec
push
jno
ficoms
fcoml
mov
loopne
or
sbb
and
and
dec
pop
or
jns
mov
loopne
scas
stos
cs
inc
iret
push
cmp
xchg
dec
sti
mov
fsts
out
ljmp
and
xor
lcall
push
lahf
xchg
jecxz
pop
and
test
xor
or
xchg
mov
mov
imul
js
insl
test
scas
cli
push
stc
push
jb
mov
jmp
inc
xchg
mov
in
sub
sub
dec
inc
mov
aas
dec
sub
movsl
mov
clc
add
xchg
in
test
rcll
cmc
loop
call
jge
test
dec
cmp
pusha
cld
or
jl
stos
mov
out
pop
hlt
fs
cmp
jmp
push
and
xor
cmp
push
ficompl
inc
lea
mov
sbb
jmp
jl
mov
into
jb
cmp
or
out
pop
js
xchg
clc
hlt
jg
out
mov
movsb
cmp
mov
dec
into
jmp
faddp
dec
add
andb
xlat
mov
and
shlb
xchg
fsubrs
mov
or
jge
out
idivb
arpl
fnsave
call
daa
dec
adc
sbb
fimuls
stos
dec
out
adc
mov
add
shll
and
cld
jne
mov
sub
sbb
push
xchg
aaa
jae
cmpsb
mov
jb
mov
xchg
fstpl
daa
inc
ficoml
lea
in
push
or
gs
sub
jns
inc
push
push
lods
test
lcall
mov
xchg
insl
sti
repz
call
pop
or
fwait
jnp
mov
mov
lds
lds
xor
jo
scas
ds
jle
pop
stos
cltd
mov
dec
popa
pop
in
mov
rorb
cmp
out
jne
pushf
lds
inc
jmp
loope
aas
shrb
sbb
cmp
adc
in
xchg
rolb
lods
or
call
stos
sbb
fbld
std
decl
mov
jle
xchg
aam
stos
push
cmpsb
inc
xchg
clc
push
cld
cld
scas
adc
repnz
mov
jnp
jp
mov
and
enter
imul
xor
loopne
test
sahf
fldl2t
pop
and
in
pop
rcrb
out
in
xor
push
cmp
push
fs
xor
out
dec
push
pushf
jg
aam
dec
sbb
pop
into
aas
and
mov
cmp
dec
pop
pop
addl
push
aaa
sahf
clc
popa
mov
sub
cli
adc
cmp
pop
fs
and
and
arpl
dec
fiadds
repnz
or
sbbl
std
jg
add
dec
fists
aam
and
aaa
out
push
add
mov
pop
cltd
fidivs
mov
shrb
xchg
dec
jno
cs
jge
mov
std
test
cmp
jne
addr16
popa
outsl
lea
cmpsb
mov
mov
in
push
int3
adc
jp
popa
cwtl
cmc
imul
out
js
insl
inc
hlt
xchg
adc
testl
cwtl
pop
mov
push
mov
loope
cmp
enter
insb
testb
push
pop
clc
cmp
fs
sub
cmp
in
repnz
lds
push
movsl
aaa
out
jo
push
or
jns
in
jb
mov
jge
adc
int3
mov
fsubl
in
pop
shll
cmc
xor
push
fnstcw
push
fidivrl
adc
shl
repnz
dec
pushf
je
insb
or
cmpsb
xchg
clc
mov
and
mov
orb
push
adc
xorl
xor
jge
mov
fistps
sbb
ret
push
popl
add
cmpsb
or
push
movsl
mov
mov
sub
pop
push
jmp
jo
aas
psubsb
ret
fdivrp
pop
sahf
mov
repz
jae
or
xlat
push
xchg
mov
fidivrs
add
ds
test
jmp
inc
inc
rcl
out
xor
push
and
jp
sub
bound
hlt
cmp
mov
sbb
cltd
jp
pop
lcall
outsb
push
cmpsl
dec
imul
in
lret
jge
xlat
shlb
in
ljmp
cmp
jmp
in
hlt
or
inc
xchg
cwtl
hlt
xor
push
movsb
and
inc
loope
test
and
xchg
adc
cs
fsubp
jno
nop
dec
adc
mov
subb
mov
outsb
outsb
out
xchg
adc
fmuls
jmp
cmp
in
sub
outsb
mov
aam
xor
add
add
movsl
push
pop
lret
cmp
add
repz
sbb
aam
sbb
jae
scas
dec
int
jno
xor
mov
adc
mov
fistpl
fsubrl
push
clc
ss
mov
or
lods
add
scas
test
mov
inc
jo
sbb
dec
or
pop
into
jo
imul
push
pop
mulb
test
sub
fiadds
fs
cmpsb
fstpl
test
out
mov
inc
push
ret
bound
adc
and
daa
lods
int
rcll
inc
push
iret
cmpsl
sti
divl
mov
push
in
sub
data16
or
jne
loop
push
or
and
inc
and
inc
div
add
rcr
dec
int3
movsb
adc
aas
jns
clc
xchg
dec
loopne
pop
fisttpll
mov
insl
fadds
cli
mov
add
pop
mov
repnz
dec
stc
sbb
jp
mov
inc
jp
int3
adc
mov
js
add
adcl
xchg
fwait
jge
mov
fcmovbe
imul
mov
call
sbb
mov
loope
mov
xchg
add
pop
push
arpl
data16
and
lock
test
fwait
call
loopne
subl
dec
push
and
lret
sub
sub
dec
cmp
repz
jge
xchg
das
mov
pop
push
inc
xchg
out
shll
xor
cltd
aad
faddp
cmp
movsb
push
mov
rolb
or
adc
test
dec
loope
stos
rorb
jo
lret
push
nop
mov
aas
loopne
js
testb
pop
cmp
jle
in
pusha
xchg
test
xchg
lea
mov
sahf
in
inc
pop
lods
inc
cmp
xchg
push
data16
bound
ljmp
jne
sub
test
test
pushl
addr16
pop
push
lcall
fs
pop
mov
stos
push
mov
ds
ds
push
enter
enter
stos
mul
lcall
lods
es
dec
adc
cmc
pop
push
dec
jae
leave
push
je
push
scas
push
lods
cs
arpl
mov
jge
and
push
inc
mov
mov
push
or
jle
jno
nop
mov
cmpsb
push
mov
jno
mov
js
sbb
mov
test
shrl
addl
cmp
mov
or
fldt
add
ljmp
sub
xchg
rorb
jmp
out
mov
mov
or
fimuls
xor
jne
mov
mov
dec
mulb
dec
scas
push
mov
mov
nop
pop
push
mov
and
int3
lret
xchg
mov
adc
dec
cmp
xchg
xchg
test
or
jns
or
mov
dec
test
pop
jmp
fs
inc
and
pop
xchg
xorl
aas
sub
jno
popa
aas
push
add
push
pop
or
js
xor
jno
call
mov
mov
inc
pop
jbe
mov
push
xchg
daa
loop
clc
add
mov
enter
fsubs
mul
mov
rclb
out
scas
pusha
stos
fistpll
push
data16
inc
test
mov
jmp
fs
pop
or
sub
shrl
dec
movsb
sub
cmc
pop
or
adc
mov
lret
in
aam
mov
add
and
imul
movsb
inc
push
arpl
paddw
push
mov
xchg
lods
mov
push
mov
inc
mov
pop
sbb
repnz
add
push
int
bound
sbb
push
mov
movsb
scas
fisubrs
mov
add
bound
loopne
shrb
mov
jns
jg
jae
pop
cmp
clc
imul
ffree
inc
jg
icebp
xchg
sbb
mov
xchg
ret
sub
jbe
jge
or
push
ret
in
lahf
stos
and
out
mov
ret
sub
mov
sub
subb
fsub
ficompl
sub
pop
jo
push
les
xor
int
mov
dec
mov
pop
cltd
inc
add
loopne
sarb
test
jecxz
daa
nop
andl
aam
xchg
rcr
or
sbb
popf
jno
lods
inc
push
adc
loop
stc
ja
push
or
lea
xlat
lods
inc
stos
arpl
jne
in
loopne
ret
fldt
daa
icebp
cld
mov
mov
js
mov
call
adc
mov
mul
sub
data16
jb
xor
loopne
cmp
adc
out
mov
sbb
cmpsl
mov
repnz
mov
xchg
fstpt
nop
enter
lret
fwait
or
pop
xor
xchg
xchg
testl
loopne
mov
xchg
stos
mov
psllw
lods
dec
dec
jns
push
sbb
out
jmp
adcl
insl
test
out
packsswb
dec
sar
fbstp
pop
aam
push
xlat
loope
sti
in
mov
in
int3
adc
fcoms
xchg
mov
or
cmp
xchg
jl
jecxz
dec
out
dec
lea
xor
and
mov
pop
dec
xor
or
daa
lods
pop
fwait
xchg
inc
pop
es
sub
push
xor
outsl
loop
repz
call
in
dec
int
push
mov
jae
aam
stos
jg
dec
ja
dec
push
imul
enter
and
stc
aaa
popf
ficoml
cmp
push
inc
scas
fcomps
or
fst
lods
sub
cmpsb
not
inc
dec
clc
das
mov
push
pop
xlat
aas
mov
push
repnz
push
mov
in
test
lds
dec
scas
dec
pop
mov
dec
xchg
mov
mov
jecxz
xchg
fcompl
fdivr
jmp
das
loope
mov
sbb
iret
lods
repnz
push
bound
out
xlat
cmp
lahf
cmpsb
inc
rolb
sbb
xor
pop
es
xor
mov
fbstp
mov
pcmpeqw
push
in
push
dec
xor
test
aam
shrb
loop
or
add
out
imull
add
incb
mov
dec
sub
cmp
dec
clc
ficoms
jg
cmp
shll
lods
mov
sarl
cmp
pop
stos
jbe
jno
and
imul
pushf
mov
repz
and
push
lea
fucomp
ljmp
inc
push
ret
adc
rcll
jae
mov
push
xchg
jle
lock
scas
push
xor
fbld
cmp
mov
adc
cmp
add
repz
mov
in
mov
mov
ffree
xor
mov
pop
loopne
fbld
xor
inc
jne
adc
icebp
fs
pop
fcoms
add
mov
subl
sbb
imul
mov
add
loopne
ja
push
sbb
pop
mov
lahf
mov
xchg
push
or
test
push
div
cmp
dec
inc
xchg
jle
push
dec
xchg
lds
push
popa
mov
pop
mov
orb
mov
pushf
push
add
test
ss
or
jae
mov
stc
inc
fldt
cmp
xor
cwtl
das
test
sub
call
and
sub
rolb
pusha
aam
add
pop
cmp
cmp
mov
xchg
stc
sub
xchg
push
lods
lods
jns
out
repnz
dec
mov
jecxz
sbb
mov
sub
aam
cmpsl
daa
sbb
pushf
xchg
mov
cltd
pop
jbe
pop
mov
push
add
icebp
int3
mov
rolb
rorb
stc
seta
loop
int3
xor
mov
jl
int
xchg
jp
sbb
cs
sbb
cli
mov
lods
xchg
ret
out
push
movsb
mov
sbb
lret
mov
cli
or
push
pop
push
test
movsl
mov
mov
cmp
call
pusha
add
stos
jbe
div
xchg
jecxz
pop
mov
sub
daa
jmp
or
movsl
jnp
pushf
pop
in
xchg
lret
push
insl
xor
lcall
in
push
aas
loope
outsb
mov
mov
push
out
lds
cmp
fnstcw
mov
pop
or
dec
add
mov
dec
inc
es
cmp
mov
xchg
jns
test
decl
clc
sbb
dec
scas
inc
adc
pop
fwait
jp
int
into
push
inc
add
arpl
std
adc
mov
movq
push
shll
mov
movsb
ja
pop
test
lret
test
inc
mov
jae
or
js
hlt
lret
fwait
lcall
rorb
dec
movsb
sbb
mov
shl
or
das
iret
push
lock
int
xor
jge
lock
and
int3
mov
cmpsl
push
cwtl
add
fs
clc
adc
sarl
add
mov
mov
xor
ja
aad
sbb
xchg
outsl
sub
add
loope
mov
xor
and
or
cmp
cltd
or
out
mov
adc
je
xchg
dec
mov
aam
mov
lea
fcmovnbe
mov
dec
hlt
jl
add
mov
xor
ljmp
cmp
xor
adc
lea
and
imul
push
test
gs
mov
fdivrl
dec
cmp
int3
add
mov
je
mov
mov
test
push
movsl
stos
inc
fs
dec
xchg
stc
dec
inc
clc
mov
mov
lcall
pop
test
popa
mov
sub
leave
ficoml
outsb
sbb
stc
pushf
xor
lock
inc
cmpsl
sahf
icebp
jmp
mov
mov
cs
adc
imul
enter
loope
js
fidivrl
cs
stc
xchg
insb
js
mov
mov
bound
fdivr
sbb
adc
dec
ret
pop
in
pop
inc
add
hlt
sahf
dec
lcall
pop
mov
decb
adc
jb
ds
or
bound
hlt
sbb
xchg
xchg
cmpsb
ds
stc
pusha
sbb
pop
sub
push
inc
or
mov
jbe
test
pop
push
and
jb
or
sarb
xor
adc
sub
ret
cwtl
xchg
xchg
pop
or
mov
mov
lea
jno
xchg
cwtl
push
out
cmp
or
mov
inc
data16
fdivr
fistpl
aaa
std
scas
sub
clc
dec
xor
inc
pop
fnsave
and
xchg
cmpsb
pop
ret
sub
add
enter
mov
insb
cmp
pop
lcall
jae
clc
je
repnz
xor
lcall
push
mov
push
fadds
dec
cmp
cmc
clc
or
aaa
push
out
mov
push
add
dec
inc
fadds
sub
inc
lds
ret
jle
movsl
inc
cmpb
pusha
dec
pop
cltd
dec
pop
fs
cmpsl
sbb
xor
sbb
dec
aad
mov
xorb
out
ss
cmc
out
xor
not
push
in
test
push
stc
push
push
sub
push
fmuls
jbe
out
mov
cmp
cld
mov
add
adc
add
mov
gs
notl
sbb
xor
bound
adc
imul
lahf
cmp
jle
mov
jl
mov
int
sbb
mov
loope
adc
cli
cmpb
sub
lea
popa
mov
pop
push
repz
fcmovnu
js
push
jmp
add
movsl
push
push
fwait
movsb
sub
rol
pop
rcrl
mov
sbb
scas
jae
dec
test
jg
or
xchg
out
pusha
mov
dec
fnstsw
add
cltd
ds
stc
push
rol
in
sbb
adc
mov
pop
shll
in
xor
inc
loopne
mov
fwait
push
jp
mov
bound
pop
lods
adc
ficomps
cmpsb
clc
or
test
sbb
data16
jno
mov
test
dec
mov
jg
push
sti
mov
xor
xor
inc
negb
insb
inc
adc
cmp
es
out
out
mov
xchg
out
pop
adc
jne
out
sub
shl
pop
sbb
xchg
mov
jp
and
sbb
adc
pop
add
outsl
lcall
sbb
jnp
xchg
cltd
push
pushf
ficompl
fldenv
mov
pop
movaps
fsts
outsb
jns
xor
ss
gs
add
add
in
lret
mov
inc
lock
clc
stos
lods
and
hlt
dec
mov
mov
mov
dec
or
outsl
ss
jno
outsb
gs
jbe
adc
hlt
jne
mov
or
mov
sub
mov
and
or
ja
mov
decb
jns
aas
cs
lcall
test
insl
xor
dec
push
push
mov
push
jno
jg
add
dec
mov
mov
xor
repz
int3
dec
add
es
add
into
aam
out
jle
jno
mov
js
pop
mov
out
push
xchg
imul
push
jp
imul
sub
xchg
jbe
mov
sarl
sub
add
bts
imul
imul
push
lods
test
and
jbe
pop
or
push
outsl
mov
or
mov
outsb
xchg
fidivs
lcall
xor
cltd
jnp
or
sbb
fcomi
mov
inc
sbb
xor
xor
into
pop
mov
push
stc
push
popa
dec
sub
and
std
lods
jg
out
mov
adc
fs
cmp
mov
mov
cmc
mov
sbb
inc
mov
hlt
pop
jl
dec
add
jg
jmp
outsb
xor
sbb
dec
pop
mov
clc
jmp
pop
loop
arpl
fildll
imul
adc
dec
fimuls
and
pop
divb
add
fsub
add
inc
push
loope
xchg
popa
sbb
cli
ja
cmpsl
js
push
xchg
nop
and
lcall
push
push
adc
pop
mov
push
dec
fs
mov
gs
and
push
sub
arpl
je
cmpsl
xchg
test
lea
rorb
sahf
cmp
jae
pop
lret
out
inc
push
call
cmp
dec
pop
jmp
mov
repz
xor
fisttpll
fsubrs
insl
std
mov
cld
add
jne
mov
cmp
push
das
dec
mov
xor
loop
mov
loope
fcmove
sbb
mov
xchg
nop
shr
in
inc
xor
mov
arpl
out
loopne
and
mov
into
js
insl
xor
push
shrl
mov
cs
mov
and
sub
xor
xchg
aaa
cmp
add
inc
xor
dec
mov
xor
pop
cmc
dec
scas
push
xchg
icebp
imul
outsl
push
insl
and
cwtl
push
nop
fwait
dec
mov
pop
xchg
pop
inc
jne,pt
and
and
into
mov
shl
mov
enter
inc
loop
rcr
out
cmpsb
sub
aad
xchg
test
ljmp
add
push
add
lcall
or
cmc
dec
mov
cmc
rcrl
xchg
xchg
adc
and
cmpsl
mov
push
adc
ficoml
cmp
fists
and
sbb
into
sub
sbb
mov
jle
cwtl
sar
pop
aaa
adc
dec
cmc
mul
sbb
jns
cli
lods
sub
pop
test
cmpsl
cmpsb
mov
inc
xchg
and
jo
stc
pushf
or
lea
sbb
into
xchg
pop
push
movb
mov
sbb
or
add
xchg
pop
adc
dec
pop
pop
or
push
stos
mov
faddl
cli
call
in
aaa
jp
push
xor
push
and
pushf
push
adc
lcall
pop
imul
adc
jle
frstor
lret
pop
adc
pop
icebp
cwtl
inc
mov
lock
cmpsl
xor
les
jns
testb
xchg
fistl
enter
out
out
mov
jmp
sbb
inc
nop
dec
pop
dec
dec
push
pop
into
call
repnz
pop
xchg
sbb
loopne
push
loopne
or
mov
xor
repnz
xchg
jne
pop
sub
sbb
lcall
and
pop
cmp
xor
loop
mov
cld
test
mov
aaa
cmpsb
rolb
lret
adc
push
loope
mov
push
xchg
divl
mov
test
and
addl
sub
add
out
ljmp
dec
ret
sbb
jbe
inc
sub
fcomip
cltd
leave
sub
insb
inc
sbb
fwait
mov
rcll
cmp
dec
jne
test
fcmove
push
xchg
dec
push
xchg
inc
cmpsb
lods
aas
mov
clc
pushf
pop
jo
movsb
test
imulb
sbb
sub
fistl
dec
inc
scas
push
aad
mov
mov
mov
push
sub
es
das
jne
loope
push
and
clc
push
lret
inc
push
adc
mov
pop
mov
sar
jnp
stos
xor
adc
push
mov
gs
test
out
sub
push
pop
lcall
shll
hlt
add
rcrl
xchg
jne
jbe
nop
orl
fistpll
dec
mov
das
xchg
inc
sbb
leave
daa
mov
in
lcall
jb
scas
or
insb
mov
xor
jmp
cmp
fxch
pop
xlat
xchg
jecxz
imul
cmpsb
sub
imul
lea
pop
push
jo,pt
xor
add
inc
outsb
loopne
mov
in
insb
push
mov
jb
imul
sti
mov
pmaddwd
dec
xchg
mov
mov
mov
lahf
adc
lods
xchg
sbb
hlt
adc
xchg
mov
push
jbe
mov
ljmp
add
mov
test
in
add
dec
sub
push
dec
stos
xlat
mov
std
mov
pop
test
inc
jge
sbb
enter
les
sub
jno
mov
cld
xor
pop
xor
ljmp
lods
enter
int
push
cmp
clc
mov
push
xchg
add
rcll
jecxz
loop
jne
scas
hlt
dec
and
pop
add
or
inc
rcll
sarb
cmp
daa
push
push
ljmp
jae
ret
inc
aad
popf
cmc
leave
pushf
loop
loope
jbe
xor
push
lcall
push
xor
jnp
jge
loope
scas
pop
pop
mov
idivb
inc
push
out
test
out
imul
in
loop
adc
mov
inc
cmp
sbb
jnp
movsb
andb
movsl
jo
mov
xchg
inc
push
inc
cmpsl
add
xchg
ret
adc
pop
and
scas
adc
jo
xchg
out
push
daa
sbb
js
dec
cmp
dec
loopne
sti
lock
ds
cmpsb
mov
popf
sbb
gs
stc
sub
pop
lcall
add
lods
mov
pop
enter
jmp
test
mov
jnp
sbb
je
xor
push
jp
xor
mov
mov
push
inc
push
dec
out
pop
inc
add
repnz
sbb
pop
jecxz
jg
test
jb
push
lea
sahf
mov
jnp
xchg
mov
sub
sbb
daa
adc
push
dec
xchg
ret
sets
dec
dec
stc
in
lock
pop
sub
and
jp
rorb
mov
push
fiadds
aaa
mov
and
fsub
sub
mov
push
bound
call
mov
sbb
lahf
mov
and
in
stc
add
jl
repz
outsb
sbb
sbb
and
std
mov
ss
jmp
pop
push
int3
mov
mov
loope
push
jae
mov
enter
mov
lds
mov
push
cmp
repnz
bound
cwtl
inc
imul
push
enter
xchg
subl
outsb
xor
sbb
xchg
mov
arpl
mov
movsb
cmp
dec
sbb
inc
ret
dec
sbb
rol
mov
xor
xchg
or
ret
and
sahf
sbb
mov
ljmp
add
inc
xor
jae
cmc
imul
ror
data16
xor
test
repz
arpl
adc
cmp
aas
push
lods
or
sub
or
addl
sbb
push
jle
call
cs
pop
das
stc
push
in
xchg
pushl
insl
js
inc
adc
testl
fiadds
lock
push
jl
cmp
movsb
shll
fldt
repnz
xor
jns
sti
push
dec
sub
stos
and
dec
cltd
pop
clc
mov
cmc
mov
push
fwait
testl
loopne
aas
mov
scas
into
and
cs
orl
xor
cmp
jp
mov
inc
xchg
pop
xor
push
jns
dec
shlb
add
pop
rcr
mov
popa
es
sbb
repz
jmp
jl
push
loop
movsl
imul
pop
jno
sbb
movsb
or
xchg
sub
dec
les
lret
xor
rol
fcomi
add
test
pop
pop
outsl
jnp
fbstp
bound
scas
shrl
out
lcall
call
mov
int
jnp
push
or
cmp
sahf
or
xchg
jae
push
in
lret
dec
fs
aaa
push
jns
aam
lods
xchg
aam
shrb
lock
dec
hlt
inc
mov
inc
shrb
popf
mov
scas
dec
inc
movsb
xor
dec
lret
lods
fadds
add
stos
aam
dec
xchg
dec
add
stos
cmp
or
push
sti
mov
mov
rolb
loop
add
mov
lcall
adc
push
push
je
mov
pop
popf
cwtl
cltd
sahf
mov
faddl
xchg
dec
jnp
mov
push
imul
adc
jb
scas
fbstp
sbbl
mov
and
mov
ds
mov
sbb
dec
xor
push
pop
pop
inc
shlb
in
jle
out
sbb
andb
xchg
in
sub
xor
lcall
outsb
shrd
pop
ficomps
jnp
xlat
mov
pushf
xchg
repnz
mov
lahf
dec
addl
push
adc
adc
test
scas
and
or
ret
test
dec
and
jmp
cwtl
sub
imul
or
imul
sub
push
push
popa
ss
ss
fwait
test
nop
and
adc
call
fisttps
mov
push
das
sbb
push
std
push
iret
arpl
jb
or
bound
or
out
imulb
mov
jno
dec
lock
inc
jb
adc
sbb
cpuid
lcall
push
sbb
lret
pop
push
in
adc
lods
sub
and
movsl
es
in
sbb
push
push
enter
ret
fdivrs
sti
push
fidivs
inc
pop
push
xchg
xor
addr16
mov
xor
arpl
pop
test
and
andb
out
sbb
test
test
lods
and
in
das
push
dec
cmp
rolb
addr16
sub
mov
out
mov
rolb
mov
and
movsb
popa
and
in
test
sub
or
add
ret
xchg
cmp
add
mov
push
jne
insb
lds
cmpl
std
lds
fldcw
mov
stos
push
sbb
jge
rclb
mov
daa
es
repnz
jo
pop
popa
dec
fsubrs
push
cmp
add
adc
cmp
mov
and
pop
push
repnz
std
loop
lds
out
les
pop
dec
mov
cmp
push
lret
inc
sub
mov
mov
xlat
xchg
or
cmp
cmp
dec
daa
and
sbb
cmpsb
push
mov
xchg
insl
jbe
jb
cmpsb
or
dec
cmc
push
ja
loope
movsl
inc
pop
lds
xchg
xlat
mov
pop
and
aad
stos
mov
aaa
add
arpl
push
push
mov
lret
or
push
dec
outsb
sbb
movsb
pushf
inc
int
aam
dec
repz
gs
addr16
xchg
xchg
rcr
add
or
adc
and
outsb
mov
push
cltd
loope
imul
iret
dec
adc
cmpsl
pop
out
scas
rcl
jb
sub
les
mov
mov
sub
push
ja
xor
dec
xchg
scas
rcl
push
or
sbbb
push
dec
mov
test
mov
jl
lret
or
mul
movsb
mov
sub
xor
ret
aam
jnp
xchg
xchg
leave
mov
push
aas
outsl
cmp
jg
push
fcmovne
mov
xor
push
pop
pop
inc
fistpl
sbb
pop
push
mov
enter
or
mov
jo
outsb
subl
push
les
fdivl
jbe
fsts
push
mov
jo
xor
jecxz
pop
test
dec
mov
in
and
lret
jne
ljmp
cmp
add
xor
inc
sub
jle
ret
inc
mov
flds
adc
fbld
in
out
movsb
lock
jae
ljmp
std
iret
dec
sbb
and
popa
mov
inc
fisttps
lahf
xchg
lcall
into
xchg
dec
mov
lea
cmpsl
xchg
je
enter
jb
insl
imul
cmp
cmp
fbld
popa
push
inc
push
inc
test
fsubrl
nop
cmp
mov
and
das
jae
sbb
gs
lds
and
jg
jle
call
movsb
sub
push
dec
add
adc
sub
mov
mov
adc
and
mov
enter
shll
cmp
jl
nop
faddp
jb
test
bound
shll
icebp
adc
jb
mov
sbb
push
push
push
fs
xor
loope
inc
pop
xchg
cwtl
jne
mov
fcompl
scas
push
or
iret
outsb
lods
lahf
sub
scas
push
nop
insb
or
test
inc
call
rorb
aam
inc
sbb
aad
aad
popa
jne
fildl
cltd
test
out
cmp
or
push
dec
int3
pusha
std
pushf
jno
stos
jno,pn
cmpl
data16
insb
xchg
adc
sbb
pop
fmull
sbb
jge
inc
cmp
nop
ljmp
das
leave
ljmp
xchg
push
in
clc
and
sub
mov
in
jp
daa
xor
inc
mov
mov
xchg
add
add
loope
xlat
and
fbld
ret
pusha
popa
jecxz
xchg
adc
jg
push
pop
sub
pusha
addr16
sbb
dec
mov
out
outsb
loope
outsl
pop
push
test
repnz
or
pop
mov
out
aad
mov
adc
out
popa
test
test
sub
arpl
adc
testb
mov
testl
xchg
or
mov
imul
ljmp
cwtl
sbb
imul
cmp
int
add
mov
ljmp
and
adc
pop
pop
pop
xlat
adc
pop
xchg
sbb
pop
xchg
mov
push
jnp
les
stos
cli
pop
cmp
dec
jmp
js
adc
je
push
test
in
or
push
mov
pop
dec
mov
lock
sahf
jp
movsb
mov
cmp
or
xor
push
pop
mov
mov
fimuls
pop
clc
jmp
in
sub
in
cmpsb
nop
fwait
cs
mov
jae
push
inc
dec
push
and
pop
push
lcall
js
xor
std
cmc
dec
das
lds
pusha
jmp
dec
pop
add
mov
push
es
fs
jge
mov
cs
inc
repz
lret
xchg
lcall
mov
fadd
mov
push
lcall
loopne
ret
cmp
push
into
int3
movsl
aam
mov
xchg
aam
stos
stc
mov
mov
pop
adc
mov
mov
loope
aam
xchg
subl
enter
mov
sub
outsb
mov
leave
jnp
lods
imul
or
add
nop
mov
int
ds
in
es
adc
or
rcr
gs
cmpsl
ret
xor
jo
mov
inc
mov
dec
mov
das
iret
adc
clc
jns
bound
pop
ss
sar
repnz
jecxz
scas
push
test
jae
cmp
add
pusha
or
sahf
mul
jne
add
mov
mov
out
out
int3
aaa
or
jge
add
and
fbstp
sub
into
or
pop
jp
lods
and
cmp
jl
bound
sub
push
sub
cli
mov
fsubrl
ret
or
adc
insb
ljmp
clc
pop
lods
xorb
fldl
sbb
mov
pop
subb
sub
in
and
loop
aad
ret
jmp
mov
mov
loop
pop
xor
xor
and
lea
in
mov
loopne
jb
pop
cltd
leave
sarl
sbb
pushf
xor
add
call
daa
aaa
pop
roll
mov
fldl
add
les
lahf
les
sub
pop
xor
xor
or
aam
test
aad
xor
test
dec
inc
std
mov
out
or
popa
inc
adc
fsubrl
xchg
push
sub
fstps
mov
dec
sub
or
inc
xorl
mov
mov
nop
daa
test
enter
cltd
cmp
jns
arpl
in
mov
orl
stos
pop
xor
out
lret
data16
mov
mov
sahf
add
inc
ret
jle
hlt
test
cmc
adc
mov
scas
or
repz
bound
ror
sbb
push
pop
fucomp
push
ja
lcall
xchg
scas
mov
cmp
mov
test
and
jae
or
adc
cmp
in
stos
lods
aas
xchg
out
add
dec
repnz
sub
mov
adc
mov
lock
xor
cli
mov
bound
xchg
popa
pop
push
mov
push
fiaddl
call
or
rorl
push
and
fimuls
ja
cmpb
mov
dec
inc
shr
mov
mov
mov
mov
mov
lods
fsubrs
fisttps
mov
adc
pushf
loop
sbb
sahf
cmc
loope
das
adc
iret
xchg
xchg
repnz
scas
cli
dec
in
imul
imul
add
adc
push
js
push
xlat
or
hlt
xor
add
test
sbb
sbb
mov
imul
jmp
fcoml
push
xchg
mov
or
mov
das
mov
adc
inc
shl
adc
xor
mov
fildll
icebp
lock
rclb
je
stos
cmpsl
pop
inc
push
fistl
mov
mov
mov
popf
test
pop
push
das
pop
jbe
or
adc
mov
push
movsl
dec
jno
inc
jl
sub
cmc
inc
push
mov
or
jl
inc
push
ss
sub
mov
pop
fimull
sti
ret
loopne
push
sub
popa
push
jmp
pop
test
adc
out
movsl
gs
inc
cmp
sbb
pop
xchg
xlat
cld
stc
pop
inc
out
imul
or
xor
push
in
push
dec
adc
push
jecxz
push
ret
mov
test
lret
out
mov
fwait
mov
out
rcl
scas
mov
or
xor
jnp
mov
cmp
decl
scas
xchg
nop
add
or
mov
dec
iret
xor
call
jecxz
and
inc
rclb
adc
jae
sar
sub
adcb
dec
call
pop
jp
jne
xor
add
and
test
outsl
add
xchg
and
loope
clc
sub
or
dec
fbld
sbb
pop
xchg
je
lahf
pop
xchg
add
outsb
dec
fimull
out
xor
ds
dec
mov
xchg
jnp
ja
rcrb
sahf
fbstp
testb
call
mov
in
jmp
loopne
xor
mov
lahf
push
cmp
nop
int3
sbb
pop
lret
movsb
iret
es
dec
mov
ficomps
xchg
sti
xor
repz
sub
nop
call
lea
fsubr
mov
cmp
jb
les
add
sbbb
add
mov
add
jno
mov
add
lret
dec
movsl
and
inc
and
jp
xlat
lds
mov
push
pop
sahf
or
nop
sarb
mov
xor
ss
jl
push
rorl
xchg
mov
inc
test
pop
xchg
in
adc
and
push
and
inc
pushf
sub
and
clc
es
push
inc
adc
cmp
int3
cmp
dec
mull
jl
xor
out
cltd
mov
ja
cs
test
imul
lods
inc
jecxz
bound
add
dec
orb
repnz
subl
and
stos
inc
in
shrb
btc
out
xchg
gs
jno
sbb
push
in
sar
or
xchg
fwait
aas
lods
add
mov
add
fimuls
les
dec
cmc
rorb
ljmp
shl
adc
call
push
inc
loopne
sbb
sub
jb
adc
pop
jno
push
xchg
xchg
fisubl
push
daa
mov
jle
cltd
xlat
jmp
sbb
push
cmp
adc
push
mov
pop
jb
mov
lcall
push
in
push
std
fs
dec
pushf
cmpsl
popf
loope
push
rolb
sub
xlat
int
xchg
push
and
mov
mov
mov
mov
add
adc
and
cmpsl
pop
push
mov
xchg
sbb
sarb
mov
gs
addr16
sahf
xor
add
add
out
push
pop
fldl
push
pop
loope
shlb
mov
pushf
ja
aaa
inc
cmp
aad
xchg
pop
xchg
push
clc
js
aam
push
pop
test
inc
pop
aaa
inc
bound
fs
pop
push
repz
push
add
jae
movsl
sub
mov
jnp
outsb
fistps
aaa
insl
mov
adc
repz
mov
scas
daa
pop
dec
testb
dec
mov
mov
loop
fnstcw
pop
clc
in
loopne
jge
aas
pop
xor
xchg
cmp
mov
add
addl
push
ja
arpl
xor
mov
lret
add
imul
push
and
fstpl
fmul
push
out
mulb
or
mov
adc
fistps
repnz
inc
js
jge
cmp
cmp
jnp
fdivrs
scas
lcall
pusha
fildl
lock
idivl
test
and
xor
cmpsl
inc
jle
out
je
xchg
mov
enter
dec
stos
and
cmc
cli
dec
loop
jmp
lds
loop
iret
inc
mov
into
mov
mov
outsl
jno
adc
adc
in
imul
jb
mov
out
outsb
mov
shrb
test
xchg
leave
std
loop
mov
mov
cmp
ss
shrb
jmp
decl
cwtl
cmpsb
push
into
sbb
lods
jmp
sub
mov
je
mov
xchg
or
jmp
cmp
pusha
ret
xchg
mov
arpl
pop
js
push
xor
push
loop
ljmp
popf
mov
dec
arpl
cmp
adc
dec
or
or
pop
fs
rcrb
dec
inc
mov
leave
pop
xlat
dec
shll
fsin
sub
jno
push
push
mov
jmp
cmpsb
adc
pop
or
xchg
dec
movsb
mov
or
pusha
call
outsl
pop
xchg
negl
shll
push
ja
mov
loopne
sub
sbb
cmpsb
mov
cmp
pop
sub
xadd
out
cmp
imul
jae
jl
xchg
std
repz
or
pop
jno
mov
mov
push
mov
mull
inc
in
pop
mov
in
sbb
or
mov
adc
mov
push
push
or
inc
je
stos
and
inc
adc
push
int
xlat
mov
fnstenv
dec
pushf
lret
ret
int
movsl
sbb
leave
jecxz
xchg
arpl
fwait
cmp
jg
int3
mov
adc
rorl
adcl
mov
pop
fs
jp
dec
dec
push
adcl
pop
and
xor
adc
fsub
aas
and
adc
dec
arpl
aam
outsb
xor
sbb
or
fdiv
jb
push
sahf
outsb
mov
cmc
out
clc
fld
out
sub
sub
xchg
jb
shl
les
cld
mov
ret
mov
icebp
ljmp
inc
clc
pop
sti
mov
daa
mov
mov
and
mov
push
loope
and
loopne
mov
stos
add
aam
jmp
push
negb
cmp
jecxz
pop
push
loope
sahf
subl
cmp
inc
movsl
call
icebp
lods
add
enter
cli
adc
or
inc
data16
inc
mov
xchg
mov
leave
jp
inc
pop
cmp
outsl
push
xchg
dec
lahf
out
add
xor
testb
mov
sbb
in
or
push
arpl
xchg
ss
outsl
sub
mov
fistl
sti
ss
push
sbbl
call
push
sub
push
pop
adc
subl
data16
lret
push
inc
and
adc
jle
cmp
ds
out
les
pop
insb
loopne
adc
pop
push
aam
adc
jmp
popf
mov
lcall
stc
shr
cmpl
rcrl
aad
cmp
mov
sbb
xor
pop
addr16
movsb
push
orb
mov
cmp
jo
ja
add
pop
inc
and
xchg
jp
lcall
and
sub
aad
pop
movsb
ret
add
in
gs
xorb
rolb
dec
leave
jp
or
dec
mov
aaa
popf
arpl
lret
or
movsl
pop
mov
sarl
mov
popa
fucomi
fucomp
lcall
sub
mov
lret
cmp
divb
rcr
inc
mov
ror
cmpsb
adc
cltd
cmp
sub
test
sbb
dec
popa
mul
push
mov
push
add
out
ja
ss
jmp
sti
ds
js
movsb
hlt
popf
call
push
cmpsl
jns
mov
out
je
js
rolb
pop
js
adc
cld
inc
aaa
aad
xchg
xchg
jne
pop
mov
push
cmpl
push
fildl
cmp
rcrb
push
sub
cs
sbb
xor
inc
xchg
jp
mov
cld
inc
adcb
ds
adc
outsb
shl
outsl
and
cmpsl
imul
xchg
mov
xor
imul
xchg
and
push
jno
int3
mov
out
in
sub
punpcklwd
test
mov
xchg
sub
sbb
pop
xchg
jno
cmc
sbb
or
xchg
test
pop
xchg
push
adc
loop
fildl
mov
add
add
icebp
test
std
cltd
xchg
jo
lahf
xchg
stc
xor
add
jge
sbb
fists
xlat
jno
ljmp
xor
leave
out
inc
push
sbb
test
ds
mov
inc
mov
inc
jo
xchg
scas
fisubs
xchg
cmp
jmp
sub
sbb
and
les
sub
insl
fisttpll
or
mov
in
or
adc
jge
lds
sahf
push
mov
pop
rorb
insb
add
jns
lock
add
ss
movsl
imul
out
xor
test
hlt
idiv
les
je
jb
ljmp
lahf
stc
sbb
leave
mov
jp
jns
jns
xor
out
pop
cmp
adc
jecxz
jne
lods
enter
addr16
popf
outsb
jge
loope
xor
pusha
loopne
cmp
icebp
in
iret
and
jae
lea
cmc
pop
imul
adc
and
xchg
adc
and
mov
jge
loop
rep
aaa
xor
sbb
arpl
sub
adc
inc
push
dec
jecxz
addr16
ja
add
jmp
push
mov
fildll
dec
arpl
xchg
xchg
test
push
movsl
mov
xchg
push
jp
pop
add
movsl
mov
mov
jg
dec
sbb
fsub
mov
adc
and
sbb
mov
aas
gs
pop
loope
adcb
push
inc
fwait
enter
cs
push
stc
arpl
loop
scas
cmpsl
mov
inc
cs
sbb
dec
cmp
mov
push
jae
add
mov
push
add
sbb
leave
xor
cmpsl
mov
scas
cltd
push
sarl
jge
inc
pop
jg
mov
popa
add
push
repnz
push
mov
fimull
jg
ss
mulb
repnz
mov
addr16
into
mov
add
fsubrp
les
mov
dec
dec
and
stc
cli
call
mov
fbstp
lret
mov
fimull
out
dec
fadd
andl
jne
sbb
cmp
sbb
rcrb
nop
adc
dec
test
mov
lret
inc
sbb
jp
repz
xchg
add
enter
cld
pop
adc
icebp
lcall
mov
cmp
rcrb
insb
jnp
inc
mov
mov
loop
movb
sbb
loope
xorl
cmp
andl
mov
je,pn
jo
out
mov
fnsave
arpl
lret
repnz
and
mov
sbb
jmp
or
addl
push
push
ds
shlb
dec
sub
cmpsb
mov
popf
rorl
lret
mov
sbb
jbe
sbb
stos
icebp
sbbb
popa
sbb
cmpsl
jle
inc
mov
fs
pusha
and
loopne
xor
push
dec
stos
push
sub
push
mov
pop
jbe
lods
push
sti
lret
xchg
fstl
aas
scas
xchg
mov
jp
addr16
cmp
mov
jl
add
or
pop
dec
xor
inc
imul
and
lds
push
cmp
xchg
lock
jne
out
adc
xorl
jecxz
popf
fwait
std
enter
ss
adc
cmp
or
sti
pop
jmp
sub
push
gs
jle
jg
pop
sub
les
xor
fdiv
cmp
mov
divb
cs
mov
cmc
jmp
cli
icebp
and
sub
enter
arpl
leave
sub
in
mov
movsb
jecxz
and
push
dec
jecxz
push
fwait
xor
mov
cmp
mov
sub
rorb
xchg
testl
push
insb
xchg
fxam
inc
cwtl
dec
test
repnz
dec
jp
pop
cld
arpl
adc
loope
xchg
sti
shl
xor
pop
mov
fimull
lret
sbb
lods
dec
or
bound
movsl
jne
sub
bound
mov
sub
movsb
add
xor
mov
mov
inc
lock
mov
mov
mov
rorl
sub
sbb
xchg
imul
pop
clc
cmp
popf
js
mov
out
push
jns
and
aaa
lret
and
repz
xor
dec
lret
mov
neg
aas
cltd
repz
call
insl
xor
push
push
xor
dec
add
xchg
cmpl
sub
movb
xor
cmpb
int
das
in
mov
fcomps
push
lea
test
ja
dec
mov
mov
rcl
jle
int3
sbb
jno
ds
xchg
test
push
test
int
int3
roll
ret
mov
lods
mov
pop
call
add
testb
inc
clc
adc
mov
inc
xchg
lcall
je
cmp
repz
imul
dec
mov
inc
aad
rorb
in
xor
add
sub
add
int3
out
mov
loopne
jl
inc
pop
sbb
dec
jl
adc
and
cmp
adcb
sbb
mov
in
push
popa
inc
jp
aad
cs
sbb
inc
add
jmp
imul
enter
push
repnz
cmpsb
sbb
mov
jbe
stos
pop
inc
sti
sahf
cmp
jp
imul
pop
lret
sbb
gs
out
js
jne
jg
mov
jge
fisubrl
xchg
sahf
aam
cs
sub
push
loop
jmp
daa
mul
js
fisttpll
inc
xor
andb
jge
pop
xchg
outsl
sbb
cmpsl
jo
out
mov
mov
popa
mov
mov
repnz
or
jg
rcrb
outsl
les
lock
aas
flds
jns,pt
sbb
outsl
imul
xchg
outsl
xor
pushf
loop
lret
and
push
adc
cmp
mov
pop
in
jb
sub
loopne
inc
jb
int3
pop
pcmpgtb
inc
add
xchg
mov
inc
mov
cmp
sub
or
or
mov
sbb
mov
dec
xchg
lret
rcll
cmp
dec
call
aam
jb
scas
jo
adc
sbb
in
js
call
sti
sbb
xor
addr16
das
sbb
arpl
orl
stos
insl
incl
repz
fchs
dec
stos
scas
xor
xchg
mov
cmp
test
cmp
push
lock
movsb
fwait
ljmp
or
jmp
push
jne
lds
insb
lods
popf
shrb
dec
loopne
inc
jae
mov
cmpsb
push
sub
test
xchg
cli
sbb
push
jo
out
mov
inc
mov
aad
bound
pop
mov
fiaddl
insl
adc
out
jge
push
mov
mov
repz
fs
mov
ret
push
xchg
jp
insl
jnp
sub
inc
mov
xor
adcl
and
jb
dec
cmp
inc
subl
inc
jmp
xchg
mov
xchg
pop
insl
pop
push
mov
insl
mov
bound
scas
jmp
mov
test
incb
icebp
xor
mov
xlat
ds
jo
stc
or
mov
add
sbb
loope
mov
ficompl
shl
repnz
jo
int3
jbe
mov
cltd
in
adc
sar
mov
ja
fs
mov
inc
hlt
out
insl
mov
pop
dec
loop
in
xchg
cmp
jl
js
pop
aaa
into
xchg
cld
jge
sbb
or
sub
pusha
add
lods
fistpll
mov
sahf
push
sub
and
ds
mov
lock
ss
test
enter
and
iret
push
add
cmp
rcr
stc
mov
xchg
mov
std
dec
popa
negb
loopne
shrb
mov
std
cwtl
cmc
cli
cwtl
sub
and
std
add
xor
jecxz
aaa
cmp
scas
test
push
xchg
or
inc
or
test
ficoms
fcmovu
popf
xor
scas
jae
subb
loope
and
pop
loope
and
xor
sub
sbb
push
fucom
adc
mov
int3
aas
xor
inc
flds
je
push
call
xchg
imul
mov
addr16
in
dec
das
add
test
cmp
pop
sbb
mov
and
rcl
sbb
mov
cmpsb
repz
cmc
jp
repz
dec
inc
jg,pt
mov
cmp
mov
adc
cli
adc
shll
inc
dec
outsl
xor
or
popf
subb
push
pop
mov
mov
leave
lahf
mov
jl
cs
cmp
repnz
repz
inc
add
subb
push
mov
pop
add
mov
outsl
or
push
mov
pop
in
xchg
sub
lret
xchg
or
repz
arpl
xchg
movsb
sahf
or
pop
cltd
pusha
xchg
out
push
cmp
aad
dec
lcall
loop
bound
inc
cmp
push
mov
inc
les
xlat
arpl
loop
adc
or
and
xor
jbe
sub
jo
or
push
outsb
scas
js
stos
stos
inc
insl
mov
gs
dec
les
sbb
mov
and
mov
inc
dec
add
dec
mov
cmp
cmp
pop
test
les
inc
stos
fidivrl
sbb
jo
nop
sbb
mov
ret
adc
test
xchg
xor
lahf
xchg
push
lret
xchg
jecxz
rorb
cmp
inc
insb
sbb
cmp
out
mov
outsl
xchg
repz
mov
aaa
ljmp
out
jae
add
or
shrl
inc
cmp
sbb
jnp
xor
in
pop
cmp
jo
ss
mov
push
addr16
add
out
pop
or
mov
jle
jmp
into
js
jmp
mov
std
adcl
addl
lret
daa
xchg
mov
dec
out
push
inc
sbb
mov
outsl
mov
push
div
mov
lahf
mull
dec
out
divl
jmp
cltd
sahf
xchg
xor
gs
push
cmp
int
sbb
adc
jnp
scas
test
test
outsl
adc
gs
scas
inc
dec
fbstp
mov
xchg
leave
mov
push
dec
in
or
adc
pop
xchg
xchg
mov
mov
inc
fidivs
jmp
xor
and
out
mov
cwtl
test
pop
in
adc
les
or
rcll
in
dec
imul
mov
xchg
decb
and
lods
dec
in
xor
sbb
adc
mov
aam
pop
cltd
cmp
jle
adc
sti
jno
sti
std
inc
cmc
jmp
cmp
cmpl
out
scas
adc
in
ret
test
xchg
je
arpl
inc
in
sub
ret
mov
dec
push
pushf
xchg
sti
pushf
lahf
insl
lret
out
in
pop
lret
xchg
adc
sar
xchg
inc
sub
adc
sbb
sets
sbb
jmp
outsl
mov
in
hlt
sahf
fisubs
adc
loopne
xchg
mov
lret
fldenv
jge
cmp
xchg
in
sahf
sub
pop
fldl
int3
fcomip
dec
lret
repnz
fimull
data16
push
jmp
aad
enter
pop
cli
dec
jp
inc
push
xchg
cld
test
mov
adc
lret
outsb
cmp
sbb
ret
mov
mov
loope
push
cltd
js
pop
add
les
dec
jmp
inc
loope
push
or
movsl
xchg
and
clc
aam
jns
xor
data16
mov
sbb
cmp
push
cmpl
cwtl
pop
pop
mov
cmc
scas
enter
je
ds
cmp
xchg
mov
fildl
iret
in
shrl
arpl
xchg
xchg
shlb
aad
push
sub
les
add
xchg
loop
insb
sub
jmp
push
add
lret
sub
xchg
xor
jecxz
push
push
push
inc
jecxz
test
mov
or
cmc
lods
jbe
sbb
outsb
stos
dec
ret
call
pop
leave
shrl
fmul
push
insl
ficoml
jne
and
cmp
movsb
mov
xor
in
test
mov
ljmp
sbb
shrb
mov
jnp
lods
add
stos
leave
mov
aam
xor
loop
and
les
or
decl
mov
outsl
movsl
fcoml
xchg
inc
clc
bound
sub
std
mov
in
mull
aam
aaa
pushf
cmp
mov
test
rorb
cmp
test
inc
xor
sub
pop
fisttpll
sub
loope
in
dec
aam
xor
pop
or
jg
aas
xchg
call
inc
pop
dec
jmp
sub
and
das
test
iret
fs
pop
add
pop
hlt
rorl
sub
push
gs
mov
lock
outsb
iret
xchg
into
inc
or
cmp
push
and
jne
dec
pusha
fstpl
add
rol
inc
adc
fcmovne
sub
fstl
insb
cmpsb
cmovg
cmp
xchg
sbb
mov
mov
mov
cmp
mov
das
sbb
sti
arpl
rorb
mov
int3
xlat
loope
xor
test
cmp
mov
stos
xor
loop
sti
cmp
cld
push
and
or
mov
cmpsb
stos
sbb
movsl
dec
or
out
pop
pusha
cmpsb
push
xchg
cli
adc
jno
jbe
jmp
adc
not
sbb
inc
fiaddl
mov
repnz
repnz
test
mov
sub
mov
mov
lods
fsubrl
push
gs
mov
cld
cmpb
into
sbb
push
inc
cld
or
mov
fisubl
clc
inc
addl
inc
pop
adc
xor
pop
cltd
in
add
fcomp
scas
add
sub
pushw
or
fwait
mov
in
and
jl
out
lret
rcrl
sub
and
sub
mov
fsubrl
jmp
sbb
inc
xor
insb
shrb
mov
cmpsl
sbb
ja
add
test
repz
adc
stc
insb
into
adc
dec
fs
lcall
adc
adc
push
outsl
jb
outsl
pusha
push
iret
lds
inc
push
fs
and
sahf
ja
incb
shl
push
cld
pusha
and
sbb
aas
cli
pop
movsl
pop
loop
rorl
jge
out
test
fimull
or
xchg
std
test
imul
cli
roll
ficompl
mov
std
loope
jne
loope
inc
lcall
movsl
cmp
mov
loopne
and
test
push
mov
aad
adc
xor
push
mov
cmc
adc
sbb
fxch
xor
cmp
gs
mov
cmp
pushf
pop
pop
inc
push
cmp
data16
mov
aas
rorl
push
lret
pop
lock
out
dec
aaa
mov
cmp
xchg
inc
aaa
shlb
inc
scas
fdivrs
mov
dec
push
stc
cmp
mov
les
and
xor
add
pop
inc
clc
jl
cmp
aas
test
mov
and
xchg
jns
addr16
scas
jmp
fsubrs
stc
fimuls
sbb
daa
push
dec
push
loop
push
mov
int3
pop
or
pop
dec
xor
mov
xchg
jae
jg
sub
mov
aas
sbb
pusha
test
fisubrs
xchg
mov
shrl
sbb
xchg
mov
fcmovnb
ret
cmp
and
xchg
int3
mov
mov
lahf
repnz
cmpsb
aaa
jmp
xlat
std
sbb
sti
aad
mov
jg
push
out
js
jae
sbb
mov
add
daa
cmpl
dec
in
xor
andb
mov
aam
mov
adc
cli
sbb
mov
sub
movl
sub
aam
ret
insb
sar
add
aas
in
out
test
mov
test
mov
adc
cmp
pop
xorb
pop
scas
push
bound
inc
mov
dec
xchg
mov
xor
pusha
dec
pop
ret
movsb
in
aad
std
sub
sub
leave
in
dec
mov
insb
cmp
jg
xchg
xchg
push
or
push
inc
fsubrl
ret
addr16
insb
push
xor
pop
lret
mov
cmp
arpl
test
loopne
fs
sub
in
sub
fnsave
rorl
scas
orb
icebp
adc
adc
inc
cmp
mov
lcall
sbb
mov
fildll
mov
sbb
push
inc
loopne
lcall
sbb
cmp
or
hlt
lock
js,pn
int3
sbb
lcall
out
push
popf
xor
imul
roll
pop
mov
pop
lret
loope
or
mov
call
inc
int
mov
push
dec
ljmp
mov
mov
xor
outsl
xchg
cltd
xor
aaa
imul
fcoml
inc
inc
lock
lds
xchg
pop
jp
xchg
ja
test
cli
push
cmp
hlt
jbe
fst
push
add
cmpb
dec
mov
hlt
iret
mov
daa
mov
add
xchg
jns
pop
cmp
daa
push
inc
inc
lahf
mov
movsb
jmp
sub
cwtl
int
and
sub
dec
mov
hlt
mov
pop
cltd
jb
ret
and
mov
jae
pop
mov
test
xchg
iret
or
out
idivb
jo
cld
jae
inc
loope
mov
pop
testb
mov
xor
mov
faddl
push
push
int
mov
jo
rcrl
scas
inc
sar
rclb
and
nop
xor
cltd
xor
jecxz
xor
mov
rcll
xor
and
and
imul
inc
ljmp
jge
fcomp
mov
sbb
inc
jno
ficompl
cli
add
jl
shlb
jb
or
xor
and
int
mov
sub
and
xor
push
inc
pop
sub
inc
hlt
in
mov
ret
ret
lret
pop
pop
int3
leave
fisubl
push
lret
pusha
jl
fstpt
adc
push
loopne
sbb
lock
push
mov
aam
and
cmp
push
and
mov
push
pop
dec
mov
daa
jmp
andb
and
xchg
test
lods
add
enter
push
sub
pushf
push
cld
icebp
or
repz
jl
sub
jo
out
xchg
push
arpl
jp
jb
fsts
cld
je
push
sub
ljmp
lods
mov
dec
cld
gs
int3
cld
cli
sti
out
lret
mov
lahf
jne
cs
sbb
fisubl
insl
jne
jb
adc
cltd
add
or
inc
add
jge
mov
push
out
cwtl
std
xchg
xor
sbb
push
push
fisubl
push
ljmp
ss
and
mov
or
cmc
insb
cmp
push
notb
xchg
imulb
mov
into
arpl
out
pop
adc
and
add
inc
pop
rol
divps
mov
movsb
adc
mov
pop
pop
addr16
mov
or
cmpsb
adc
mov
dec
adc
mov
clc
rcrl
jne
cld
push
cwtl
lea
ret
adc
fnclex
adc
shll
inc
hlt
adc
test
aaa
outsb
in
subb
test
mov
stos
lods
out
mov
ja
mov
cmp
mov
out
stc
push
scas
xlat
jno
nop
ret
jnp
cmp
lds
pop
aam
ss
push
test
pop
or
sbb
out
add
sbb
adc
mov
lret
daa
push
pusha
xchg
loope
inc
mov
xor
xchg
adc
cmc
stos
sbb
dec
divb
jge
icebp
pop
and
inc
mov
sti
push
cmc
gs
jns
lods
mov
push
jns
or
sti
fists
pop
add
xor
xor
fisubrl
adc
jecxz
inc
sarl
dec
outsb
loop
mov
notb
xchg
jb
mov
jmp
dec
xor
out
cmp
xchg
dec
test
cmp
pop
fimull
add
inc
jle
add
movsl
sub
cmp
mov
pop
and
mov
xchg
pop
jns
jne
fisubrl
xor
adc
enter
add
sub
xchg
jp
mov
jbe
loopne
ja
lea
scas
inc
fnsave
mov
pop
repnz
loope
pop
fs
jb
idiv
mov
lahf
inc
pushf
or
mov
aaa
add
shlb
rcrl
repnz
xchg
mov
add
test
or
ret
rcr
pop
aaa
xor
adc
packuswb
xchg
add
ljmp
ljmp
gs
and
ja
mov
mov
mov
xchg
loop
sub
push
push
push
scas
jl
shrb
add
repz
testl
dec
mov
mov
mov
fbld
mov
inc
add
push
mov
jo
leave
add
movsb
jne
xor
in
push
leave
hlt
insl
ljmp
jecxz
xchg
push
cmp
bound
jns
jo
push
mov
cmp
in
out
aam
mov
mov
xchg
mov
outsb
sbb
fs
adc
std
in
aam
cwtl
enterw
sbb
lea
push
adc
pushf
dec
jne
lahf
jo
mov
das
fwait
daa
or
dec
in
adc
ficoms
in
ja
in
push
add
dec
notb
leave
adc
andb
rclb
icebp
mov
pop
mov
pop
mov
loop
xor
sbb
inc
bnd
jl
push
rclb
das
cmpsl
fiaddl
push
fidivrl
imul
imul
sub
sbb
mov
cmp
sahf
jg
mov
sub
push
push
jmp
push
aam
in
ds
cmp
add
rorl
xchg
ficoms
in
popa
adc
ljmp
jge
insb
sub
shl
inc
test
or
ja
loope
adc
daa
flds
pop
cltd
ss
js
lds
mov
fnsave
mov
jb
clc
fbstp
xchg
ljmp
testl
leave
mov
insl
xchg
mov
dec
jnp
sbb
sub
decl
cmpsl
popa
dec
mov
out
sbb
jl
arpl
adc
sahf
and
es
movsl
inc
into
push
pusha
leave
pusha
and
imul
sub
jp
dec
js
cmc
shl
mov
into
jle
shr
push
movsb
inc
adc
and
adc
cmpsb
add
push
mov
leave
test
pusha
adc
loope
xchg
ret
lds
out
rcl
and
jo
mov
cltd
in
loop
mov
pop
sbb
pop
ret
xor
or
fdivl
jno,pn
fcmovnb
dec
shr
lahf
and
fidivs
and
loop
loopne
shrb
jae
jne
push
mov
lods
clc
jo
push
push
test
push
fisubs
cmp
or
out
jmp
jp
aad
xor
and
add
pop
ror
icebp
xchg
lret
pop
lret
xor
shll
fxch
mov
add
mov
push
sti
inc
out
pop
sbb
xor
rcll
ss
mov
xchg
fidivl
daa
lods
imul
shl
push
mov
xchg
gs
mov
jmp
or
push
dec
das
cwtl
cmp
fmul
stos
sbb
cwtl
lods
les
imul
mov
leave
dec
iret
popa
pop
icebp
sbb
adc
mov
lea
mov
push
and
das
xor
pusha
pop
test
xchg
jecxz
add
jmp
sbb
sub
cmp
sub
inc
movsb
dec
cltd
adc
adc
inc
dec
jp
aaa
cmp
lret
mov
fldt
adc
sarb
aas
jecxz
stos
ret
add
and
or
jp
sti
cmp
push
xchg
mov
daa
sbb
dec
popa
ds
lods
adc
je
cs
inc
jge
test
ret
in
mov
clc
jns
mov
inc
mov
fs
sub
mov
inc
enter
cli
mov
call
sbbb
js
dec
scas
sub
cmc
negb
aad
rorb
dec
pop
sub
mov
addr16
and
mov
test
setp
ret
int
ret
xchg
pop
mov
repz
inc
cld
dec
push
inc
mov
add
cmp
add
add
jmp
jecxz
inc
es
sbb
imul
mov
aas
lea
iret
pop
xor
pop
mov
mov
aam
test
lods
push
aam
mov
mov
pusha
ljmp
mov
push
lock
in
out
dec
cs
mov
pop
inc
sub
push
pop
in
jbe
out
inc
add
xor
xchg
or
mov
test
and
cmp
shrl
mov
fwait
sub
jp
mov
jae
daa
insb
or
jecxz
dec
insl
mov
xlat
xor
add
sub
popf
mov
ror
inc
stos
pop
push
loop
xchg
mov
iret
or
sub
push
adcl
fsubrp
fisubrs
mov
xor
sub
dec
add
paddq
or
pop
dec
sub
sub
scas
aad
out
lds
scas
add
je
or
ja
int3
cmp
sub
jno
push
les
push
sbb
jmp
pop
mov
dec
mov
push
sub
push
cltd
pop
dec
lods
les
push
outsb
push
dec
out
sub
push
mov
cmp
test
xchg
out
mov
iret
ret
push
mov
clc
imul
adc
or
imul
jmp
adc
mov
jmp
scas
sub
popf
mov
movsb
xor
sub
dec
aam
in
and
mov
outsb
popf
mov
pop
adc
icebp
les
cmp
adc
stc
dec
or
adc
jae
negb
sub
jmp
in
cmp
push
rorl
je
mov
loopne
dec
imul
and
cmp
ljmp
lcall
dec
ror
dec
out
dec
test
repnz
cmp
repnz
xor
gs
ss
stc
adc
pop
cmc
cltd
sahf
cmp
in
pusha
push
mov
int3
test
pop
loop
add
pushw
mov
xor
mov
or
jmp
ds
aas
and
data16
repnz
loop
jecxz
lds
dec
jns
cmp
cmpsb
jge
sub
pushl
call
std
std
cmp
xchg
scas
jle
div
xor
cmp
jecxz
and
dec
push
jo
push
cmc
clc
fistps
push
jnp
popf
xor
lret
gs
cwtl
mov
inc
jno
dec
xor
sbb
int3
sbb
insl
xor
mov
out
jmp
in
lahf
and
cmpsb
dec
dec
std
fildll
in
stos
repz
sbb
mov
mov
push
push
fwait
hlt
jge
orl
pop
in
aaa
cmpsl
pop
sahf
test
pop
sahf
gs
jl
bound
sbb
popf
mov
frstor
inc
ss
cs
les
shlb
xor
ds
jg
pop
fldl
das
jb
je
lahf
shll
aad
mov
dec
in
push
fistl
movsl
ja
orl
fnstenv
dec
adc
fildl
fistpl
in
xchg
ja
pushf
dec
add
pop
adc
adc
push
sub
sub
orb
push
xchg
push
sub
cmpsl
push
jns
sbb
aam
mov
ds
mov
dec
or
pop
clc
add
cmp
pop
add
mov
out
push
shlb
cmp
and
aas
or
loopne
mov
sbb
stc
sti
idivl
xor
shll
int
cmp
repz
inc
lahf
in
inc
add
loop
mov
push
jae
int
insb
inc
ret
inc
or
xchg
pop
cmp
call
dec
and
es
ficompl
or
push
scas
xchg
mov
pop
push
je
jmp
and
mov
test
mov
mov
cwtl
loop
test
roll
es
pusha
jb
nop
shlb
in
je
out
lock
and
aaa
clc
and
cltd
push
or
pop
jbe
xor
imulb
dec
int3
xchg
jns
icebp
lea
pop
imull
in
xor
repz
mov
xchg
call
cli
sbb
int3
mov
mov
outsb
pop
sub
inc
cmp
andb
sti
rcll
inc
cld
mov
movsl
loopne
jge
in
cmpsl
es
and
lds
sub
or
stc
inc
imul
dec
mov
lcall
mov
mov
mov
mov
sbb
insl
mov
xchg
push
mov
test
add
out
push
std
pushf
dec
push
and
fsubrp
pushf
add
out
jno
cltd
mov
aam
insl
sarl
mov
out
cmp
ja
xchg
cmp
hlt
es
cmp
and
or
adcb
dec
push
hlt
add
bound
xor
xlat
leave
jmpw
test
pushf
mov
dec
jg
sbb
mov
jo
fcmovnu
jle
jns
and
dec
adc
xor
ja
mov
jmp
out
stos
jne
mov
movsb
sbb
test
pop
inc
push
decl
xchg
add
mov
test
das
pop
adc
xor
cmc
dec
fmulp
notb
adc
cmp
lret
xchg
pop
jne
sub
cmp
setno
imul
in
pop
cwtl
pop
mov
fdivr
pushf
or
push
pop
or
jno
jg
jnp
adc
frstor
mov
rcr
popf
push
cwtl
cmp
add
stos
jns
pop
adc
insb
pop
lods
dec
loope
add
daa
cmpsl
iret
pop
fwait
negb
xchg
jl
push
sti
rolb
mov
cmpsl
mov
lret
jns
xor
jecxz
stos
sub
jns
lahf
scas
fisubrs
and
fdivl
fcomps
imul
and
imul
test
pushf
inc
inc
outsb
add
xrelease
jae
and
mov
fwait
out
add
mov
mov
jns
inc
adc
jp
imul
inc
cmpsl
push
imul
loope
inc
jnp
or
int3
mov
clc
incl
add
xchg
sbb
stos
ret
inc
ret
in
into
std
push
fisubl
adc
and
push
inc
in
or
xor
in
adc
jp
ret
push
cld
in
stos
cmp
repnz
inc
notb
in
jne
fstl
xchg
fstpl
adc
sub
pop
fcoml
gs
jbe
cmp
lds
inc
sbb
xchg
sbb
cmp
jle
js
or
roll
in
sahf
mov
and
lea
cmp
inc
pop
jle
pop
movsl
dec
das
adc
stos
cmp
mov
out
nop
jo
mov
sub
loop
lods
xlat
xlat
sbb
xor
ljmp
and
dec
imul
xchg
inc
dec
add
mov
sbb
stc
mov
testb
aas
popf
stc
mov
jmp
cmp
sub
xchg
mov
mov
lahf
clc
push
shll
pop
pop
or
lret
cld
dec
or
fsubrl
in
dec
clc
xchg
inc
pop
cmpsb
mov
jmp
jb
cli
jecxz
enter
js
mov
xlat
in
mov
aam
pop
pop
sbb
out
or
dec
in
pushf
insb
cmpsb
scas
mov
roll
xor
lds
xchg
mulb
and
flds
sub
pop
fs
stos
ret
imul
xor
jp
mov
hlt
cmpsl
int
dec
pop
pop
adc
fs
in
mov
sbb
dec
push
inc
cmp
mov
sub
cli
pop
das
pusha
lea
push
pop
mov
jae,pt
addr16
rcr
xchg
sbb
jo
xchg
mov
fs
and
arpl
mov
cmp
mov
push
daa
repnz
fdivrl
scas
cmp
xor
mov
xchg
xchg
aad
insl
sbb
push
xchg
mov
push
add
imul
cwtl
fidivrl
cmpsb
cmp
or
insl
outsb
xchg
dec
sarl
fdivl
push
cwtl
inc
popa
mov
popf
or
stc
mov
adc
xor
das
leave
inc
add
clc
mov
jp
inc
push
jmp
cmp
fmulp
adc
cltd
inc
pop
jp
cmp
sbb
cld
xchg
lcall
stos
fcmovnu
fdivr
loope
dec
cmp
dec
cs
ljmp
sbb
dec
test
leave
xor
js
aam
mov
push
leave
jno
test
adc
insl
adc
pop
cmpsl
das
adc
xchg
push
mov
ja
jae
in
mov
in
jne
xchg
xchg
je
lods
mov
mov
xchg
sti
and
push
jb
pop
push
movsl
pop
imul
dec
leave
lcall
ffree
stos
pusha
out
sub
or
ljmp
mov
mov
mov
loope
and
addr16
fstpt
arpl
cltd
lods
sbb
push
mov
cltd
cmp
je
or
cwtl
sub
popf
sti
movsb
mov
insb
xchg
rcrl
lods
adc
imul
subl
mov
dec
mov
imul
xchg
fcmovb
imul
and
inc
inc
lock
gs
in
movb
jbe
mov
repnz
push
xor
push
jmp
pop
cmc
ret
jne
clc
jecxz
mov
xchg
jge
movsl
test
jae
sub
adc
mov
xchg
popa
stos
lret
xorb
adc
test
aad
push
aam
mov
push
sub
cmp
inc
push
cmp
jne
cmp
arpl
jge
mov
push
popf
xchg
loope
xchg
leave
adc
xchg
add
out
gs
cmp
lea
fcomp
push
inc
sub
jg
jge
fsubs
ret
cli
rcr
xor
ret
cld
ret
adc
pop
jl
js
pop
aam
enter
inc
fwait
pop
repnz
sub
mov
scas
sbb
mov
dec
jl
add
sub
addb
cmp
test
and
lods
mov
jmp
sbbb
dec
add
std
xchg
popf
test
pop
roll
jecxz
fmuls
push
push
hlt
es
je
stc
sub
sub
dec
lods
xchg
push
rcr
imul
dec
and
nop
pop
jecxz
fwait
dec
flds
fmul
rol
pusha
mov
xor
jle
testb
andl
sbb
jb
mov
jl
inc
jecxz
inc
les
jg
aas
pop
cmp
and
es
ret
lock
lods
cmpsb
push
int
sub
into
jns
sti
test
hlt
adc
test
inc
cmpsb
push
sar
fwait
stos
dec
push
ljmp
idivl
loope
push
and
sub
xor
scas
mov
mov
test
pop
xchg
cmp
repnz
sub
and
sti
inc
int
pop
mov
inc
sahf
push
add
clc
mov
imul
fnsave
insb
test
jnp
popa
leave
sub
or
enter
outsl
fisubs
pop
push
cltd
inc
ljmp
sahf
lret
cmp
dec
mov
adc
sub
push
pop
mov
movsl
popf
mull
repz
and
stos
pop
mov
js
lret
dec
sti
xchg
push
push
enter
dec
pop
ret
andb
xchg
fldcw
lahf
cmp
fsubrp
cmp
ret
add
mov
mov
adc
inc
or
lea
in
addl
xchg
cltd
mov
test
cs
dec
stos
out
mov
sbbb
das
dec
sbb
xchg
lods
mov
insb
das
lds
sub
jmp
pop
lds
inc
sahf
incb
and
pop
sbb
jg
lcall
cli
lods
fsub
cmp
lea
aaa
in
mov
mov
in
xor
pop
movsl
lret
sbb
popf
lcall
mov
mov
and
movsl
pop
and
enter
jo
xor
aad
xlat
fs
iret
dec
mov
jne
mov
adc
mov
jne
test
das
dec
test
dec
ret
outsl
sub
mov
lock
stc
je
mov
arpl
jne
jno
pop
leave
dec
lret
pushf
jg
add
mov
and
cmc
push
loope
dec
inc
push
pop
das
shlb
insl
adc
cmpsl
add
pop
cmpsl
and
call
ret
sti
and
rcll
dec
cmp
sbb
adc
jg,pn
push
and
inc
sti
dec
pop
pop
pop
pop
sbb
hlt
sub
inc
fcomp
mov
imul
movsb
or
fdivs
decl
pop
and
mov
xchg
aas
aas
sarl
rcrb
jnp
pop
arpl
mov
jnp,pt
dec
call
cmc
jb
aaa
into
xor
loope
ja
out
in
out
add
mov
lea
push
fisubrs
jle
fnstsw
mov
pushf
orb
dec
cmp
mull
jmp
in
and
mov
push
nop
mov
movsl
les
cmp
iret
xchg
cmpsl
int3
inc
jge
ret
out
dec
adc
mov
hlt
rclb
or
aad
jnp
es
pushf
test
loopne
fisttpl
sub
lea
jl
xchg
adc
andl
sbb
bound
test
lret
cmp
mov
cltd
idivb
mov
arpl
mov
scas
mov
xor
adc
inc
xor
push
pop
pushf
mov
mov
subl
add
cmpsl
cs
cmpsl
std
rcrl
or
fs
out
xchg
stos
das
stos
mov
kaddb
xlat
lahf
push
movsl
call
ret
xchg
rol
adc
xlat
add
pop
pop
push
mov
in
lcall
push
jg
rcrb
sbb
cltd
add
dec
clc
int
push
dec
adc
in
adc
mov
gs
in
insl
movsb
mov
into
jae
daa
mov
shrl
ljmp
xchg
sub
cld
mov
imul
push
mov
incb
ljmp
loop
aas
paddusw
jp
je
daa
aam
mov
pop
mov
sub
mov
jae
sarl
push
mov
shll
push
js
out
cmpb
mov
inc
rclb
test
mov
pop
cld
lret
nop
mov
add
lahf
shll
pop
icebp
imul
aam
ud0
or
gs
cmp
popl
fidivrl
dec
sbb
ss
mov
push
push
iret
jge
in
mov
mov
hlt
or
test
cmp
sbb
cs
adc
scas
push
shll
jmp
stos
or
mov
fs
xchg
pop
or
divb
xor
push
cs
movsb
in
mov
fdivl
test
mov
fs
test
in
iret
rorl
cmpsb
mov
fucomip
mov
outsb
jmp
icebp
rcll
repz
gs
mov
gs
dec
in
fwait
push
fcmove
xor
push
lcall
je
shl
mov
fbld
stos
push
inc
fwait
lods
ds
sbb
sub
fldl
sbb
xor
in
fsts
out
push
repnz
std
mov
mov
ja
xchg
xor
pop
outsb
adc
inc
xor
mov
lret
or
lcall
sub
pop
xorl
sbb
ret
arpl
dec
sbb
cmp
sti
je
test
iret
shlb
sub
xchg
xor
sub
in
sbb
mov
adc
cmp
pop
pop
mov
repz
or
test
fdivl
xor
je
inc
std
cmpsb
mov
int3
outsl
xor
pop
movsl
stos
popl
sbb
sbb
fstp
ffree
fdivp
cmpsl
mov
mov
int
adc
xchg
and
add
iret
lods
pop
pop
push
pop
xor
pop
inc
lods
mov
inc
push
negl
mov
jecxz
imul
and
cmc
lods
cmpsl
pop
rcrl
daa
lds
in
into
push
in
hlt
pop
ftst
inc
jp
mov
adc
mov
mov
mov
dec
lds
cmp
xor
fwait
pop
repnz
push
insl
mov
cld
jl
int3
cmpsb
xor
dec
js
push
pop
loope
sti
in
mov
sub
mov
into
lock
movsb
lds
addb
mov
call
lcall
adc
sti
push
lcall
mov
xlat
imul
test
int
or
mov
cmpsb
mov
push
or
xchg
mov
sub
lea
jb
jb
jp
dec
xchg
sbb
ret
aad
ficoms
mov
test
mov
mov
pusha
pushf
fdivl
xchg
mov
sub
inc
and
mov
xchg
push
mov
sub
lock
pushf
pop
imul
in
inc
movsb
mov
loop
inc
mov
pop
pop
xor
and
sbb
mov
sbb
shr
sbb
ret
sbb
imul
int3
sub
dec
xor
lahf
add
pop
sbb
dec
sbb
subb
or
icebp
loopne
adc
sub
aam
cmpsb
jb
jmp
mov
jb
jo
adc
mov
adc
or
outsb
fsubp
push
rorb
fidivl
adc
pop
stos
xchg
xor
dec
mov
lock
xchg
imul
stc
out
and
pop
sub
das
mov
mov
mov
gs
fisubl
adc
xchg
mov
cs
cmpsb
jp
in
sub
mov
addr16
gs
push
jg
add
jb
loopne
add
outsb
fnsave
xlat
aad
popa
lcall
shrl
add
fnstcw
daa
pop
xor
mov
lcall
add
mov
fs
pop
movsl
int3
pop
pop
sbb
pushf
inc
outsb
imul
add
xor
jnp
jecxz
mov
mov
sub
cmp
stc
push
int3
ja
mov
mov
shrb
sahf
jmp
rcrl
cmc
xor
add
daa
xor
jns
mov
push
pop
in
je
loope
cmp
les
push
call
outsl
adc
clc
xchg
or
aam
outsb
rcr
sub
icebp
and
xchg
mov
adc
xor
adc
pop
aas
sbbl
outsb
jb
fs
pop
mov
scas
out
push
sub
or
fstl
add
mov
ss
arpl
data16
adc
movsb
xchg
mov
fnstcw
jl
cmpsb
dec
mov
pushf
xchg
mov
adc
pop
jo
in
cmp
xchg
cmp
adc
pushf
popf
jmp
sub
sub
jb
cmpsl
int3
mov
inc
ficompl
lcall
push
xchg
adc
add
sti
or
mov
adc
cmp
or
mov
inc
es
push
popa
ds
fdivl
insl
pop
push
pop
mov
inc
cmp
cmp
jecxz
aam
rorl
push
mov
adc
decb
xchg
mull
imul
scas
cmpb
mov
inc
pop
push
icebp
jne
jns
xchg
addr16
push
xchg
sbb
push
push
inc
in
sub
mov
sti
cmpsb
add
and
movsb
lods
jne
push
push
pop
jno
dec
jg
shrl
sahf
lret
adc
mov
cmpsb
je
mov
js
add
push
pop
pop
mov
rcll
xchg
cmp
cmp
xor
leave
js
adc
std
lcall
cld
xor
cld
dec
mov
icebp
inc
pop
sub
xlat
in
adc
loopne
mov
rcll
ret
fbstp
push
inc
int3
dec
je
mov
jne
je
add
jns
sub
daa
cmp
stc
das
pop
jl
in
js
fcmovne
and
lcall
mov
movsl
lret
mov
push
push
mov
mov
jg
mov
in
pop
sbb
xchg
loop
cmpsl
and
in
cmp
dec
xor
mov
shlb
rcr
ror
in
lcall
test
xchg
jmp
stc
jnp
pop
cmp
jge
aam
mov
mov
inc
sbb
es
xchg
std
lock
dec
xchg
bound
mov
mov
pop
movsl
xorl
and
fstp
es
movsb
sbb
aaa
popf
xchg
push
rolb
das
imul
cmp
dec
xchg
xchg
mov
cld
call
sbb
inc
jg
sub
ret
sahf
jno
mov
or
cmc
mov
ja
xor
xor
push
xor
and
dec
sub
bound
fmull
jb
mov
mov
mov
bound
jl
clc
jecxz
mov
xor
sbb
push
cmp
mov
int3
mov
data16
aad
cmpsl
les
jnp
out
prefetchw
or
or
xchg
les
es
shrb
cmpb
or
scas
push
insl
xchg
fcoml
inc
aam
roll
inc
icebp
loop
add
js
iret
inc
clc
and
insb
sub
dec
popa
mov
shll
out
inc
orl
stos
xor
and
ret
imul
arpl
dec
idiv
mov
mov
fcomps
mov
rclb
pusha
pop
testb
repz
pushf
mov
lock
movsl
jl
or
mov
mov
sbb
out
mov
cmpsl
inc
cltd
test
mov
scas
add
cmp
cld
push
je
inc
push
inc
add
adc
add
xor
cs
adc
fsubr
arpl
jns
int3
in
and
dec
test
mov
loop
dec
xchg
or
rorb
inc
add
and
dec
adc
sbb
inc
loop
jno
pop
test
fstps
aad
jl
pop
jnp
inc
lds
mov
and
inc
push
fnstsw
stos
xor
dec
mov
fwait
in
jbe
enter
idivl
dec
mov
push
dec
mov
aad
pushf
cs
les
xor
jbe
add
les
xor
pop
rolb
push
xchg
jae
jecxz
and
inc
mov
mov
ja
jb
or
into
daa
sub
insb
pop
imul
in
es
push
out
dec
outsb
sbb
nop
out
jle
lret
movsl
int
xlat
loop
pavgw
out
sbb
ja
xchg
and
or
call
jne
movsl
xchg
incb
movsl
add
into
das
push
jge
pop
jbe
push
lock
ret
sbb
loopne
jmp
add
inc
mov
insl
mov
mov
mov
insl
dec
xchg
mov
scas
push
push
bound
sub
xlat
into
int
sbb
jmp
dec
les
dec
inc
int3
jnp
call
andl
out
mov
sbb
xchg
in
inc
inc
ss
lea
fisubl
out
shrl
pop
dec
pop
movsb
and
pop
lea
js
pop
xchg
outsl
cltd
jnp
shll
mov
push
aam
je
test
clc
xor
lock
or
lods
jae
inc
push
ljmp
scas
mov
fistpl
fldt
cwtl
mov
adc
push
add
and
cld
jle
fisttpl
pop
ds
xchg
mov
sbb
int
xor
add
cmp
dec
push
cmp
jno
popf
cmp
xlat
inc
fcomi
jmp
jmp
push
bound
sahf
andl
in
jbe
xor
pop
dec
insl
out
lret
and
mov
ss
jne
gs
shlb
ss
repz
loope
fiadds
jg
xchg
lods
stc
insl
enter
je
sub
repnz
test
loope
shrb
fmuls
mov
xor
and
mov
mov
iret
das
dec
stos
pushf
lcall
xor
add
inc
es
xchg
pop
push
jb
rcrb
test
or
dec
aaa
add
xorb
push
jb
ret
sbb
xor
xor
call
shlb
add
push
jnp
jnp
pushf
insl
push
mov
ss
aaa
xchg
inc
ss
lret
cmp
pop
imul
in
ja
lods
xchg
iret
clc
xchg
fcoms
leave
dec
test
jno
inc
add
iret
ror
ds
movsb
cmp
fbld
cmp
push
pop
push
sbb
pop
lock
in
test
mov
adc
scas
adcl
mov
in
sbb
pop
pop
cwtl
fdivrl
out
sahf
adc
out
stc
pop
add
jb
mov
fwait
dec
shlb
add
inc
push
repz
enter
aam
shl
test
push
xchg
idivl
test
or
fmull
xchg
xchg
jecxz
adc
inc
sbbl
add
pop
lcall
push
pop
jl
addr16
ja
cmp
adc
mov
xchg
sbb
inc
cwtl
mov
aam
fldz
dec
mov
leave
enter
dec
jle
rcl
in
mov
mov
jmp
adc
xor
xor
sub
xchg
mov
cmpsb
aaa
scas
pop
jb
jge
faddp
xchg
lods
mov
aaa
out
adc
insl
shrb
xchg
hlt
jle
inc
std
imul
xchg
pop
sub
icebp
jg
mov
sbb
xchg
fdivr
mov
pop
fisubs
jno
loop
push
and
inc
and
mov
cltd
loope
mov
add
or
cld
lcall
xchg
sbb
cmpsl
mov
int3
testb
lahf
enter
adc
mov
pop
sub
xchg
stc
pop
aas
call
dec
mov
fcmovnb
push
mov
call
fdivrs
sbb
cmp
cmp
imul
adc
pop
push
mov
and
fstps
icebp
bound
ret
adc
dec
jb
push
stc
mov
push
and
mov
jnp
jo
add
je
jns
xchg
dec
xchg
je
aas
push
mov
or
mov
cmp
insb
pushf
mov
test
jg
aam
lods
int
sahf
in
mov
adc
out
mov
test
mov
jo
cld
xchg
xchg
xlat
jg
ds
pushf
arpl
mov
loope
imul
lret
lcall
out
or
xchg
stos
jp
inc
cs
lahf
sbb
nop
sub
xor
and
lahf
dec
ret
sbb
pop
push
lahf
fadds
mov
repnz
repnz
add
dec
push
out
ret
mov
data16
rorl
mull
les
xchg
and
add
fsubrp
cli
sbb
iret
jl
sub
mov
mov
test
mov
pop
mov
icebp
out
mov
mov
stos
push
pusha
jle
fisubrl
jb
xor
aas
mov
and
mov
and
cmp
push
mov
aam
push
fs
mov
dec
cwtl
mov
lahf
stos
push
cmp
pop
xchg
fucomp
dec
mov
and
rol
stos
lds
test
push
push
dec
pop
jg
mov
cwtl
out
ljmp
xor
xchg
insb
xor
test
shrl
dec
lahf
popf
test
pusha
addr16
xor
push
mov
ret
fnstcw
mov
ds
repnz
ja
add
or
out
testb
add
adc
fsubr
xchg
pushf
stos
rcll
jne
outsl
mov
mov
lahf
sarl
pop
in
xor
cmpsl
mov
rsm
cltd
jo
xchg
out
dec
movsl
out
fs
jmp
jp
push
xadd
xor
shrl
dec
out
inc
gs
ficoml
pusha
aaa
daa
sti
xor
inc
push
das
pop
cmp
inc
cld
out
xchg
cmp
insb
dec
rcr
in
and
push
pop
add
insl
mov
push
dec
popf
xor
pop
mov
cmp
push
scas
pop
pop
sahf
leave
inc
jg
xor
mov
sbb
or
ror
je
aas
test
cmpsb
arpl
scas
movsb
lret
jecxz
mov
xchg
in
push
xor
xor
lahf
test
cmpsl
ds
movsb
xchg
mov
sub
adc
movsb
into
jno
popa
mov
add
cs
jp
push
xchg
mov
scas
xchg
es
insb
call
xchg
lcall
xor
mov
scas
inc
dec
xchg
jl
into
sbb
in
mov
xchg
jno
pop
push
mov
and
xchg
mov
ja
dec
jno
dec
cmc
add
xchg
cs
pop
in
mov
stos
popl
mov
push
mov
add
test
scas
test
adc
adc
sbb
into
dec
imul
iret
aaa
cmp
add
adc
in
mov
in
psllq
sti
or
push
jnp
dec
cmpsl
add
add
andb
xor
jno
arpl
cltd
add
dec
mov
cmp
mov
add
sbb
push
cmp
sub
faddl
jg
mov
pop
outsb
dec
xor
jb
ret
leave
cmpsb
xchg
xor
ja
dec
sub
test
dec
pushf
bound
sub
popl
push
jecxz
push
adc
xchg
jnp
and
pmullw
jo
cwtl
out
fdivrl
add
xchg
and
dec
jns
bnd
inc
adc
mov
mov
rcrb
jle
in
shll
jae
mov
and
arpl
faddl
add
fld
loop
and
stos
xchg
out
adc
or
fisttps
and
mov
pop
sti
push
mov
dec
insl
lods
add
and
add
popf
jbe
aad
jge
fs
js
inc
or
add
sub
lods
into
mov
or
into
into
push
add
fisubrl
inc
adc
dec
rolb
jne
lret
jecxz
scas
mov
add
pusha
adc
ds
repz
mov
or
outsl
or
lahf
rclb
mov
iret
nop
mov
pop
push
mov
mov
inc
adc
push
int
movsb
out
inc
fiadds
and
adc
jno
int
lock
jae
subl
adc
pusha
sbb
and
jg
dec
sub
inc
adc
shlb
lock
movsb
stos
cmp
sub
test
addr16
push
das
pushf
jae
mov
jge
push
insb
cmpsl
sbb
jbe
xchg
jns
push
nop
mov
sub
ss
aas
xchg
cmp
jmp
aas
rcrl
pusha
flds
mov
lea
pop
pop
pushf
jne
outsb
lds
push
movsb
cmp
add
data16
rolb
pop
adc
jno
inc
pop
in
test
sbb
push
popa
mov
inc
pop
std
out
test
movsl
cmp
sub
arpl
int
push
xchg
push
and
fldcw
add
cmp
sbb
jmp
cmp
in
cltd
dec
leave
push
lods
mov
sti
push
mov
es
fildll
add
xor
pop
ror
mov
inc
sub
cmc
repnz
dec
movsl
and
xchg
shl
cmpsl
in
movsl
fcomi
xor
lahf
pushf
gs
jmp
inc
fcmovnb
push
sbb
or
jae
enter
xor
faddl
negl
loopne
mov
adc
and
cmp
std
js
push
daa
xchg
mov
push
inc
jo
cmc
mov
lds
imul
je
in
lds
inc
cmp
xchg
fnstcw
outsb
cmp
mov
and
sbb
mov
js
and
jecxz
mov
add
mov
fcoms
mov
mov
loop
in
loop
mov
adc
ds
imul
sbb
leave
sub
push
jae
or
leave
push
inc
push
sbb
sub
inc
in
lea
int
or
loopne
popf
rcrb
fistpl
pop
mov
cltd
mov
push
mov
jp
popa
lcall
adc
mov
ret
sahf
pop
mov
roll
xchg
sbb
mov
shll
jle
jmp
push
jbe
inc
rol
into
xchg
jae
cmp
adc
fisubs
icebp
xchg
stos
fnstsw
cmp
out
in
fidivs
enter
lret
pop
push
mov
scas
out
bound
out
outsb
ret
jmp
sub
xchg
int3
ror
dec
xchg
out
inc
jne
stc
cld
gs
lea
mov
pop
xor
mov
out
stos
sub
inc
sub
sarb
cltd
dec
fs
dec
popf
int3
mov
movsl
in
push
mov
adc
lds
adc
xor
push
cmp
pusha
mov
fdivrs
vpmacsww
ret
in
lahf
push
sub
mov
outsb
push
imul
add
or
mov
mov
loop
xor
leave
adc
push
cmpb
mov
mov
or
data16
addr16
jnp
mov
mov
adc
pop
negb
sub
sub
inc
das
lahf
adc
add
xorb
dec
or
sti
bound
rcrb
adc
lret
lahf
cmp
cmp
shr
and
jge
cmpsl
cmp
fwait
xor
xchg
mov
lret
push
test
outsl
ficoml
pop
jl
mov
sti
aas
push
pop
inc
cmp
xchg
mov
hlt
xchg
rcr
jle
inc
xchg
repz
push
add
xchg
xlat
leave
jno
shlb
nop
push
in
outsb
mov
dec
lahf
pop
fs
jne
jmp
ret
sub
adc
and
jge
pop
dec
rcrl
and
loopne
sahf
bound
mov
cmp
fldenv
and
dec
inc
push
ds
ja
mov
dec
dec
xchg
lds
mov
mov
or
in
and
jp
fmuls
xor
and
jle
sub
cltd
pop
notl
cld
and
call
and
or
or
ret
test
jne
ljmp
std
lods
lea
inc
sub
nop
das
mov
and
mov
inc
mov
dec
adc
in
cmc
xchg
cmp
arpl
xor
mov
push
outsb
push
jp
sti
mov
in
stos
inc
jle
outsl
movsl
add
adc
add
xchg
neg
scas
cli
pop
fildl
out
rcrb
aaa
js
sub
or
jmp
mov
pop
add
rcl
stos
sti
cmp
popa
scas
test
enter
repz
fbstp
mov
mov
lock
test
mov
mov
aam
inc
movsl
pop
into
outsb
mov
xchg
test
dec
shrb
inc
mov
mov
add
xor
mov
xchg
mov
scas
jae
sahf
xchg
jnp
fisubl
sbb
mov
mov
adc
test
mov
push
sbb
mov
addr16
jp
jb
mov
add
push
cld
cmc
inc
mov
stc
push
aad
push
aam
ja
inc
shlb
inc
shlb
icebp
ljmp
loop
push
dec
add
dec
pop
dec
sarl
stos
stc
pop
mov
out
lods
loopne
cmp
and
dec
mov
and
fimuls
push
inc
push
mov
test
xchg
jbe
mov
add
cmp
lret
test
in
in
addr16
fiadds
and
test
rol
xor
lea
pop
call
arpl
xchg
leave
cmp
icebp
popa
sbb
push
adc
and
cld
adc
xchg
fwait
lea
jle
adc
fcomps
inc
or
test
xchg
xor
add
inc
stos
mov
sub
cltd
mov
in
and
cmp
lcall
cmp
outsl
pushl
das
imul
and
adc
mov
inc
js
es
in
out
push
cld
mov
jecxz
push
insb
mov
push
stos
push
push
pop
subl
inc
cmc
imul
mov
inc
call
iret
push
xchg
sarb
int
push
hlt
jle
cli
xor
and
loop
mov
sbb
mov
insl
mov
nop
and
icebp
xor
add
lret
mov
rcl
mov
sbb
out
repnz
fistps
rolb
adc
std
fisttpl
push
cmp
push
inc
ds
xor
mov
imul
aad
movsl
mov
push
cmp
mov
sub
push
mov
and
or
insl
sbb
sub
sbb
and
xchg
add
mov
xchg
jecxz
lret
jo
pop
cmpsl
dec
outsl
adc
leave
cli
lea
in
lret
or
cmpsb
inc
xchg
mov
es
push
inc
jge
arpl
ror
imulb
lods
fcmove
and
and
in
paddsw
daa
cli
test
mov
in
inc
data16
push
and
call
imul
nop
ficoml
jnp
push
xor
sub
mov
xor
push
xchg
add
dec
cmc
lcall
inc
and
call
mov
movsl
dec
jo
cmp
push
mov
adc
jge
xchg
xor
jmp
and
pop
rolb
stc
inc
inc
jne
or
adc
jecxz
push
fimuls
mov
dec
jmp
stos
jo
loope
outsl
push
loop
mov
xchg
test
adc
insl
rcrb
jb
and
call
jp
or
jbe
adc
jmp
movsb
divb
into
mov
movsb
sub
add
popf
fs
out
or
outsl
mov
popa
jmp
fimull
rorb
imul
push
pop
jne
or
inc
cwtl
and
adc
mov
lea
in
jp
inc
jmp
inc
or
jl
sbb
mov
cmp
shr
jnp
push
jns
addr16
mov
movsl
mov
sti
cmp
cli
in
push
std
leave
sbbb
test
jp
dec
jle
xor
xchg
cwtl
mov
xchg
out
xorb
mov
cmp
push
sahf
or
push
mov
xchg
cmp
lea
mov
jle
fdiv
jp
ret
xlat
xor
mov
and
fucomip
fwait
cmovae
shlb
pop
sbb
movsl
mov
pop
sbb
aad
cmp
lret
bound
sbb
pop
sbb
and
subb
mov
call
jg
fstl
test
or
frstor
push
icebp
cwtl
inc
mov
in
jb
mov
mov
jns
jae
xchg
fisubrs
shll
insb
lcall
aaa
push
cmp
xchg
cmp
fstl
sub
adcb
ret
push
mov
lods
or
mov
mov
es
adc
add
mov
fists
adcb
fs
mov
sar
dec
mov
popa
jmp
ret
push
and
scas
dec
js
sbb
cmp
and
dec
xor
or
push
mov
dec
fsubl
pop
and
cli
push
test
mov
mov
mov
stos
stos
mov
out
xor
xor
mov
cmpsl
jo
or
xchg
shlb
ja
sarb
and
loope
jp
mov
popf
imul
mov
cmp
jb
cmp
jl
mov
mov
call
mov
aas
xchg
sub
mov
pushf
mov
scas
sbb
mov
mov
mov
lods
mov
into
stc
mov
rcrb
outsb
addr16
in
mov
pop
dec
loope
jbe
mov
sbb
mov
jmp
shrb
das
arpl
mov
stos
mov
lcall
ja
mov
dec
out
add
xchg
sbb
arpl
stos
xor
lahf
and
push
push
incb
lods
es
sbb
add
mov
lcall
jae
shrb
xchg
add
iret
test
ss
sbb
mov
insb
mov
fnstsw
adc
jl
stos
or
sahf
jle
outsl
jae
adc
sub
stos
int3
add
jnp
inc
push
mov
xor
mov
sub
aad
sub
mov
cmpsb
dec
mov
xor
dec
jae
pop
shrl
std
repnz
cmp
repz
scas
pop
nop
or
xor
cmp
inc
icebp
fidivrs
int
xchg
pushl
sbb
test
mov
out
xchg
add
adc
mov
shll
pop
jp
mov
jg
das
jnp
mov
add
fnstsw
loopne
and
loop
xor
std
daa
push
inc
or
fwait
mov
iret
popf
and
cmpl
pop
dec
pop
test
lock
call
xchg
or
lret
xchg
inc
cmp
cs
cmp
outsb
in
sti
cmp
dec
dec
push
dec
scas
dec
movsb
sub
adc
bound
push
in
jnp
std
out
orb
pop
xor
dec
sbb
repnz
or
fwait
and
arpl
pop
call
pop
mov
cmpsl
mov
movb
sub
jmp
aad
imul
mov
cmp
cmp
rorb
mov
aas
cltd
cwtl
shl
dec
lcall
add
loopew
imul
xchg
repnz
mov
mov
cmc
shlb
sub
scas
lods
addr16
xchg
addb
and
pop
repz
popf
pop
inc
lds
sbb
xchg
dec
ret
subl
cwtl
push
scas
fldt
dec
xlat
dec
insb
mov
insl
movsb
mov
cwtl
lcall
jmp
in
hlt
pop
inc
or
sub
inc
faddp
lret
dec
and
inc
sbb
inc
add
orb
cwtl
test
sub
sbb
fists
iret
sbb
push
dec
push
xor
fimuls
ja
mov
xchg
in
stos
aad
loopne
inc
in
aaa
sbb
push
pop
sub
push
cmc
or
xorl
scas
loope
test
push
cmp
sub
cs
je
adcb
xor
push
pusha
push
test
sti
es
pop
jne
leave
jge
std
mov
js
add
or
inc
lcall
mov
cli
adc
and
mov
imul
mov
jg
and
fiaddl
into
mov
hlt
inc
incl
jnp
sbb
nop
jns
rol
xchg
andb
testb
std
jae
aaa
insl
bnd
add
push
push
lret
mov
outsl
test
adc
jecxz
jno
adc
inc
mov
inc
in
aad
mov
add
sahf
add
xor
jno
mov
sbb
call
and
lahf
jmp
xor
jae
lahf
or
mov
cmpsl
repz
subps
xor
lcall
push
popf
sub
xchg
movsb
pusha
mov
jl
and
ljmp
js
mov
lock
addr16
push
push
scas
xor
sbb
dec
add
outsb
lock
sub
arpl
adc
push
mov
xchg
mov
sub
cmp
push
sbb
mov
clc
mov
in
rol
dec
les
ljmp
inc
mov
xor
push
pop
cmp
jo
sbb
push
fsubrl
mov
add
pushl
out
cmpsl
popf
dec
out
add
mov
loope
lock
push
cwtl
bound
shrb
mov
sub
subb
jbe
cmc
cs
inc
cld
iret
mov
lock
lds
push
sub
sti
mov
mov
xchg
jge
mov
jg
jg
inc
nop
push
pop
into
add
jns
sahf
loope
mov
repz
ds
and
push
xor
jb
std
repnz
gs
cld
stos
sbb
lock
pushf
std
mov
mov
insb
push
inc
ror
dec
rcll
cmp
pop
and
stc
and
sub
fcmovb
add
daa
xchg
ja
pop
xor
xchg
inc
xor
sub
add
cwtl
jmp
xchg
jg
sub
popa
cmp
cmpsb
sbb
pop
xchg
in
inc
add
xor
cmp
std
fcompl
jo
and
xor
inc
insb
shr
mov
in
mov
push
adc
and
dec
hlt
repnz
cmp
in
aas
or
mov
cmp
xchg
out
dec
int
lcall
mov
movsl
or
pop
push
jmp
test
into
xor
mov
incl
jle
out
into
fistl
fstpt
pop
sbb
sahf
test
mov
add
xchg
lea
push
cli
in
push
adc
insl
jle
ds
push
jge
mov
xchg
pop
jo
mov
les
mov
dec
mov
imul
cmp
pop
out
mov
jmp
cs
dec
out
push
mov
pop
gs
ret
mov
cltd
push
aas
movsl
pop
sahf
pop
or
xchg
xchg
in
cmp
mov
push
lods
xorb
insl
cs
push
icebp
adc
xchg
adc
mov
cwtl
and
movsb
ffreep
ds
mov
ret
add
push
mov
dec
in
mov
outsb
push
mov
and
jnp
icebp
cmpsb
int3
xchg
ret
loopne
inc
inc
mov
pop
repnz
ja
mov
mov
ja
dec
stos
shll
int
lock
jbe
jl
mov
jnp
idivb
imul
stos
mov
pop
cld
add
xchg
pop
lds
jge
daa
dec
jns
bnd
and
pop
cmc
xchg
std
cmp
faddl
mov
inc
pushf
adc
dec
and
pop
push
xlat
repz
mov
in
push
inc
dec
cltd
or
or
lds
jae
mov
movsl
inc
inc
cmpsl
test
inc
sub
xchg
add
sbb
in
xor
into
fwait
sub
add
inc
pushf
mov
xchg
hlt
lods
popf
ja
dec
push
mov
xchg
inc
add
dec
add
imul
fists
inc
inc
cmp
xor
mov
dec
shll
or
ss
mov
sub
push
int3
imul
mov
fsubrl
cmp
stos
cmp
fidivl
dec
xor
test
inc
out
fisubs
inc
adc
ret
in
inc
jne
jno
jno
cwtl
jae
mov
das
push
mov
push
sub
mov
aam
xor
sti
nop
mov
cmp
jle
mov
push
sbb
test
mov
sub
sbb
call
movsl
movsl
xchg
pop
lods
je
cld
add
inc
jmp
shlb
nop
mov
cmp
lds
repz
int3
into
adc
mov
stos
subl
enter
mull
add
jnp
js
mov
fldcw
sbb
pop
xchg
mov
clc
mov
out
push
das
mov
int3
jmp
ror
test
pop
mov
mov
push
pop
xor
mov
or
idivb
sub
mov
js
sbb
or
xor
aas
xor
sub
jmp
cltd
in
inc
add
insl
xchg
pop
jno
pop
out
inc
mov
imul
out
pop
jnp
and
lret
out
xor
dec
and
mov
shl
adc
sub
subl
push
or
inc
inc
sbb
push
pop
or
dec
push
cs
dec
subl
lods
fbld
dec
scas
mov
xchg
fcomps
ss
out
mov
pop
lret
jl
or
test
add
int3
and
cmp
mov
adc
loope
mov
lea
mov
aas
and
ja
push
test
in
and
mov
lret
aad
dec
push
mov
push
dec
jp
fcomp
or
mov
dec
mov
aaa
and
mov
fwait
mov
or
dec
movb
and
sbb
mov
mov
ss
push
sub
test
in
push
roll
jnp
inc
cmp
enter
inc
and
in
push
out
cmp
test
fcmovne
jge
dec
out
stos
cmpl
out
pop
cmp
sbbl
push
mov
xchg
adc
jae
stos
sub
or
std
xchg
add
or
ds
dec
xor
subl
sbb
icebp
jne
cmp
lods
stos
pop
push
fchs
ljmp
movsl
add
lods
sub
call
jmp
outsl
dec
jno
aaa
movl
insb
call
leave
jne
dec
filds
ret
adc
cmp
fcoml
movsb
pop
sub
or
stc
daa
ljmp
movsl
add
lods
sarl
test
adc
adc
xor
lock
xchg
pop
mov
outsl
mov
gs
leave
hlt
add
push
cmp
jns
and
in
dec
adc
push
pop
stos
stos
inc
popf
adc
sarb
add
and
inc
imul
movsb
adcb
adc
xchg
popf
push
lods
iret
mov
mov
xor
mov
popa
mov
pop
ret
iret
outsl
push
movsl
add
and
ds
aaa
mov
lcall
cmp
ss
lock
dec
leave
insl
jecxz
out
add
push
out
cmp
push
inc
insb
pop
or
andl
dec
add
jno
repz
adc
jle
ret
pop
push
add
xchg
jmp
inc
int
fdivl
mov
stc
cmp
lcall
pop
add
mov
pop
hlt
jno
sti
xor
pusha
bound
mov
sub
mov
sbb
cmpsl
pop
lret
xor
lea
aam
out
mov
je
mov
popf
xor
scas
icebp
fnstcw
fadds
cmp
jl
ret
sub
and
cli
dec
add
xor
cmp
add
xor
pushf
ljmp
loopne
insl
dec
sub
jg
loopne
sub
sbb
cld
loop
dec
lahf
or
pop
nop
pop
adc
mov
mov
mov
mov
cmp
pop
int
test
xchg
mov
in
mov
insl
pop
mov
lea
jmp
hlt
jnp
aam
rclb
dec
orl
xchg
lock
sbb
or
cmc
lock
leave
imul
push
nop
mov
mov
fsubl
mov
xchg
xor
dec
and
stc
in
out
inc
push
xchg
inc
mov
imul
cltd
cmp
enter
jge
push
jle
inc
adc
sbb
inc
inc
scas
repz
mov
mov
mov
push
jl
stos
lret
sbb
imul
shlb
xor
outsb
xor
ljmp
xor
or
xchg
mov
pop
fadds
clc
push
lds
clc
dec
les
mov
cld
outsl
fs
push
enter
scas
pop
and
push
out
xor
es
stc
lea
mov
adc
ds
push
divb
pusha
mov
or
dec
enter
sub
je
stos
xchg
mov
xchg
in
int
rep
fwait
pushf
movsl
mov
inc
fdivs
js
pop
and
lcall
cmpsb
test
mov
sub
insb
and
jbe
loop
sbb
cli
ss
pusha
dec
adc
inc
push
icebp
inc
push
inc
sbb
xor
jne
out
pop
rcr
mov
pop
cmpsl
das
inc
push
jge
mov
add
pop
loope
fs
lods
xchg
jmp
cmp
lea
mov
cmp
mov
xor
adc
shrb
js
fldl
fldl
mov
inc
mov
ret
inc
dec
imul
push
jb
out
jns
lret
push
les
loope
cmp
or
cmp
data16
or
or
out
lods
jmp
add
fs
push
pop
into
xchg
popf
ficompl
in
data16
add
pop
lds
add
sbb
xchg
mov
sub
dec
sub
in
add
pop
mov
add
pop
out
hlt
sub
aad
lret
ret
add
dec
hlt
mov
rorb
lock
int
push
loopew
sbb
push
sbb
dec
andb
fsubs
icebp
jg
es
cmc
addr16
mov
xchg
lock
rol
inc
mov
ss
add
or
int
jle
scas
lea
mov
js
xchg
mov
enter
lcall
in
pop
fldcw
mov
pop
popa
out
ret
loope
faddp
xchg
out
divl
lea
lcall
int3
mov
adc
insb
lret
inc
subb
add
jl
add
dec
inc
push
xor
push
jle
out
pushf
js
sub
and
cmovg
daa
stc
jne
filds
lds
cmp
add
jne,pn
testb
sti
ret
sub
in
push
mov
and
arpl
cmp
dec
int3
testb
cwtl
dec
cmpsb
andl
push
pop
pop
ja
xor
mov
or
adc
push
cmp
decl
cmpsl
jno
cmpsl
hlt
and
adc
into
cli
and
int
push
imul
push
xor
insl
xor
movsb
xchg
sahf
dec
insl
icebp
loope
and
add
mov
and
loopne
out
push
cmc
aas
aas
cmc
cmp
test
or
xor
and
push
es
in
push
mov
adc
arpl
data16
ret
fstl
sub
test
and
addr16
sahf
pop
and
cli
sub
inc
dec
inc
lret
mov
repz
xchg
mov
lea
addr16
pop
jge
data16
push
sbb
dec
mov
das
outsl
and
rep
mov
mov
imul
popf
xchg
jnp
outsb
dec
xchg
iret
and
jae
mov
xchg
leave
mov
sbb
add
lret
shrd
mov
sub
idivb
add
xor
jl
aam
shll
inc
out
mov
or
mov
div
dec
mov
pop
lahf
orl
fidivrs
inc
jmp
xor
pop
cmc
or
mov
cmpsb
rcrl
loop
sbb
rol
movsl
and
adc
insb
icebp
xchg
mov
out
rolb
fidivl
int
jns
add
mov
into
jns
mov
xor
adc
push
xchg
sub
pop
es
movsl
icebp
mov
enter
loop
mov
rcll
xor
and
adc
cwtl
ficoms
sbb
mov
jno
jl
dec
fs
or
mov
pop
neg
stos
jbe
nop
xchg
into
adc
ret
insb
imul
icebp
out
in
add
test
popf
sbb
xchg
call
sub
std
mov
stc
bound
lret
push
add
jg
negl
jle
jo
push
push
out
pop
dec
xchg
xlat
add
jo
jp
push
fisubrs
add
push
lret
sub
loop
imul
nop
mov
hlt
sbb
sbb
fstpt
ss
pop
out
inc
jp
leave
and
add
sub
movsl
xor
adc
xlat
mov
sti
or
test
rcll
fwait
jbe
imul
push
frstor
jne
and
dec
jbe
mov
aaa
int
push
imul
dec
mov
aaa
test
push
imul
psraw
sti
imul
jg
lds
xchg
add
inc
dec
or
out
in
lcallw
xlat
mov
dec
mov
aad
and
dec
cs
inc
cmp
cmp
in
dec
fs
jno
jno
in
mov
imul
aad
in
or
dec
imul
sbb
ljmp
adc
lods
add
sub
cmpsb
stos
mov
aad
adc
add
adc
iret
push
pop
jo
jbe
and
pushf
ss
mov
push
movsb
mov
int3
or
lock
fdivs
pop
or
adc
xchg
mov
inc
inc
int3
mov
test
inc
xor
arpl
lahf
cltd
lods
inc
std
pushf
negl
adc
jns
int3
push
ret
cmc
cmp
or
icebp
fidivrs
daa
shll
test
adc
lock
loope
xchg
dec
sbb
push
and
xchg
add
push
xchg
scas
lret
inc
out
push
add
imul
pushf
inc
stc
sub
loop
jmp
mov
repz
aas
mov
jp
xor
dec
inc
xor
add
xchg
cld
cmp
jg
fnstenv
jns
xchg
mov
dec
imul
dec
js
fistl
push
int
xchg
mov
ret
subb
sub
daa
mov
sahf
mov
xchg
daa
sub
sarl
mov
jns
pushf
jge
pushf
test
adc
inc
xchg
jmp
mov
gs
mov
xor
ds
out
xor
popf
test
lods
loope
jbe
shrb
push
jnp
in
ljmp
xchg
push
or
push
mov
sbb
clc
inc
jge
mov
xchg
adc
mov
aad
xor
das
add
and
stos
xchg
xor
inc
imul
scas
jnp
jo
mov
and
ret
pop
out
add
test
jnp
mull
aam
mov
aas
adc
mov
and
xchg
data16
jp
push
mov
mov
orb
mov
test
push
mov
or
jae
add
pop
repnz
dec
or
lcall
dec
aam
sub
cwtl
mov
into
cltd
test
or
fs
push
orb
cs
sarb
mov
std
or
or
popf
imul
push
xchg
xchg
std
fcmovbe
je
call
mov
outsl
in
mov
dec
mov
sbb
xlat
inc
inc
cwtl
push
xchg
mov
dec
cmpsb
daa
js
sub
cld
xchg
imul
or
mov
sbb
leave
leave
add
test
add
outsb
jnp
lahf
lret
loopne
or
clc
cli
loope
aam
cmpsl
cs
push
ja
cmpsl
lock
clc
fs
cs
mov
data16
cmp
push
subl
sub
xlat
in
dec
adc
xchg
roll
test
cmpsb
lret
aaa
add
loop
aaa
add
in
popf
jecxz
fcoml
jnp
imulb
lea
popf
and
add
sub
shrb
test
lahf
movsl
fdivs
jg
or
push
lods
mov
jb
push
call
fldcw
popa
rcrl
inc
sbb
add
inc
mov
mov
in
cmp
or
ljmp
cmp
sub
jnp
mov
in
andb
mov
dec
enter
pop
xlat
aas
fwait
mov
xor
incl
aaa
fmull
sbb
dec
sbb
mov
sub
xorl
adc
std
xchg
add
subb
xchg
add
pusha
aas
aas
cmp
test
mov
jne
pusha
je
mov
jnp
sub
pushf
lret
mov
dec
mov
adc
jns
fs
test
pushl
ret
inc
jecxz
pop
ret
mov
data16
cmp
adc
fiaddl
enter
dec
fcmovbe
jle
js
fnstenv
imul
rep
add
outsb
xchg
mov
xchg
cmp
into
add
inc
xor
inc
jmp
cmpb
in
jne
add
movsb
faddl
push
sub
and
cmpsb
pop
rcll
or
sub
xchg
xor
pop
imul
jae
push
pop
jno
and
mov
pop
iret
jmp
rolb
jno
mov
enter
add
jb
sbbb
test
fldt
xchg
sub
aad
es
lcall
rorl
out
add
inc
jmp
stos
sbb
cld
jb
pop
out
and
lods
es
lds
and
sbb
cmc
jg
and
mov
pusha
push
xchg
mov
into
fsubl
push
cmp
add
mov
cwtl
and
ss
push
xor
inc
notl
pop
mov
sbb
out
std
jno
scas
xchg
mov
xor
or
das
xor
xchg
fimull
sbb
dec
das
outsb
push
mov
dec
lret
jge
sbb
inc
iret
jmp
in
jp
cltd
test
popf
test
repnz
push
sahf
bound
xchg
inc
lret
sub
lret
leave
mov
lahf
jae
adc
inc
inc
pop
ja
mov
xor
xchg
aas
test
test
mov
sbb
xor
cmp
lods
sarl
scas
inc
dec
aas
xchg
imul
pop
jno
hlt
sub
add
call
pushl
push
in
push
sub
push
pop
lret
in
dec
jecxz
push
movsb
sub
rorb
inc
lock
mov
jne
mov
arpl
hlt
shr
pop
in
sub
daa
fsubrl
mov
xor
mov
or
jle
push
jmp
jnp
sub
sub
mov
inc
aaa
jnp
clc
movb
push
adc
lock
add
push
aad
int
dec
jge
push
pop
add
enter
or
hlt
fs
iret
sahf
call
mov
test
pop
into
jl
loop
pop
movsl
jb
lods
inc
bound
dec
cmc
pop
je
xor
xor
cmpsb
lret
sub
cs
pop
adc
cmp
in
movsb
cltd
out
or
pop
push
out
mov
lock
push
jns
cmc
cmp
jecxz
xchg
sub
ja
mov
adc
stc
xlat
xchg
mov
mov
jb
or
sbb
jle
jno
aad
push
popl
push
mov
fs
mov
stos
je
icebp
in
fdivrp
lock
jl
out
test
aaa
ret
cli
inc
inc
inc
sub
insb
loope
xchg
xor
sbb
add
mov
pop
push
mov
pop
push
mov
shl
stc
les
ret
iret
mov
gs
add
test
and
imul
repz
jo
sub
push
mov
sar
imul
stos
or
cmp
test
and
mov
mov
out
mov
and
mov
in
ret
mov
aaa
imul
cs
jecxz
sbb
xchg
dec
ret
jo
mov
jnp
xor
inc
inc
shrl
or
sbb
or
add
jb
cmp
aad
dec
frstor
inc
adc
imul
pusha
in
adc
jnp
mov
insb
mov
xchg
je
mov
lods
ret
hlt
cmp
fmulp
jb
mov
xor
jmp
pop
xor
mov
sbb
call
and
clc
leave
mov
dec
sub
inc
adc
jno
dec
sub
outsl
sub
mov
in
data16
lahf
lds
mov
mov
fbld
and
iret
std
aaa
jmp
lock
add
ffree
fcomip
data16
in
gs
iret
sub
pop
lods
sti
jae
in
jb
loopne
dec
add
jb
adc
rcr
pop
mov
add
dec
int
cltd
or
fistpll
xchg
lahf
adc
jae
data16
add
xchg
cld
and
ret
loope
mov
call
out
sub
fdivr
ja
sub
movsb
in
out
jnp
add
ror
pop
test
jl
sub
leave
push
rolb
jne
nop
mov
push
ret
add
or
or
cmp
stc
jge
jl
scas
repnz
enter
pop
adc
or
mov
ja
inc
and
pop
stc
xor
pop
xor
pusha
leave
mov
mov
daa
adc
shlb
sub
lock
ret
test
es
jge
cltd
adc
inc
sub
and
nop
push
dec
add
repnz
sbb
test
and
mov
je
cld
or
les
mov
xor
out
xchg
scas
mov
lcall
jmp
cltd
sysret
sbb
mov
je
out
dec
insb
sub
movsl
jge
out
aam
pop
lret
pop
cmp
jmp
addr16
mov
cmp
xchg
shrl
cmp
aam
and
or
mov
test
and
clc
test
xchg
xorl
fiaddl
mov
rorb
xor
scas
mov
out
dec
jno
inc
dec
into
inc
dec
cld
or
negb
pop
xchg
aaa
jo,pn
sahf
mov
popf
inc
xor
stc
and
jns
cmp
ss
xchg
xchg
inc
pop
pushl
fsub
stos
pminub
loope
cmp
push
repz
cli
data16
mov
xchg
dec
stc
push
stc
mov
and
scas
lahf
cmp
sbb
pop
push
xchg
adc
inc
xchg
repnz
mov
cmp
jns
xor
int3
mov
push
xlat
fwait
aaa
cmp
mov
mov
test
push
add
outsl
pop
jns
push
repz
xchg
int
cs
dec
aad
aad
rol
popf
lock
cmp
test
in
dec
add
cmp
ja
mov
in
add
imul
dec
and
nop
lods
jl
sbb
mov
mov
jmp
lods
add
sbb
jno
inc
mov
test
pop
adc
cld
mov
pop
push
mov
pop
xchg
cmp
mov
cmpsl
push
sbb
jmp
pop
cmp
in
adc
ljmp
pushf
jns
jo
addb
stos
addr16
adc
add
push
inc
pop
xchg
dec
ret
inc
pop
push
pop
and
aad
shrl
out
pusha
es
pop
pop
lcall
mov
addr16
insl
pop
cmp
cltd
sahf
xlat
test
mov
insb
ja
int3
adc
aam
enter
addr16
int
mov
call
xchg
cmc
neg
pop
add
cli
out
out
sbb
pop
mov
jmp
out
out
cld
icebp
jb
loope
imul
pop
sbb
cmp
mov
imul
mov
mov
mov
xor
scas
mov
lahf
inc
rcrl
lds
pop
fwait
es
iret
and
insl
jae
mov
jns
ret
imulb
mov
jnp
iret
pusha
popa
or
mov
jno
sbb
sahf
pop
push
push
enter
loopne
push
imul
sub
dec
mov
jno
repz
pop
cmp
sub
inc
ljmp
pop
dec
mov
daa
out
jge
leave
imul
lods
pop
loop
les
addr16
sbb
xchg
insl
sub
pop
xchg
lcall
mov
mov
cwtl
lds
cmp
test
in
add
pop
push
adc
xchg
aaa
jnp
idiv
push
adcb
cmpsl
mov
je
adc
in
dec
xor
adc
push
adc
int
mov
daa
add
push
call
outsl
mov
outsb
stos
sbb
adc
js
jb
js
jg
loopne
mov
inc
inc
sbb
sahf
jae
mov
dec
ss
test
fs
aam
pop
mov
xchg
outsl
pop
cli
gs
aad
addb
and
pop
pop
jne
add
mov
pop
es
mov
pop
jns
jl
adc
add
mov
int3
insl
shrb
pop
std
sti
scas
or
and
scas
scas
or
mov
sub
pop
push
adc
fcmovnb
testb
or
nop
loope
push
aad
int
mov
cmc
pushfw
and
mov
add
test
sub
notl
in
fstpl
and
sub
sbb
ficoms
sub
sbb
cmpsb
cli
pop
mov
sub
push
sub
dec
inc
jno
jo
stos
jle
xor
xchg
dec
push
adc
push
cmp
xchg
xchg
sub
setnp
cmpsb
test
push
fdiv
dec
cmp
pop
cmp
mov
invd
aad
idiv
cmp
push
pop
xlat
pusha
mov
or
mov
sub
cmp
jo
push
dec
sbbl
or
ljmp
jns
imul
rcl
into
adc
dec
adc
sub
out
std
push
mov
or
xchg
popw
cs
jbe
iret
rcl
mov
xchg
testb
jl
and
inc
pop
xchg
push
sub
out
xor
repnz
test
jbe
and
sti
imul
pop
jmp
lods
outsl
fidivl
repz
in
gs
xchg
fwait
js
inc
popa
and
xchg
lea
mov
mov
data16
mov
icebp
xchg
push
xor
add
push
imul
insb
shlb
mov
adc
cld
mov
push
outsl
movsl
xor
jecxz
dec
ja
xlat
sub
mov
ljmp
xchg
fwait
cmp
adc
das
jae
lcall
xchg
arpl
sbb
orl
add
cmp
nop
or
cltd
and
pop
or
test
test
insb
mov
lahf
jns
stos
push
mov
jns
out
sbb
sub
pop
insb
fistpll
ljmp
aad
test
cmp
cmp
clc
or
rol
arpl
loopne
imul
inc
sbb
addr16
movb
int
cmp
mov
sub
call
clc
xor
mov
int
push
test
xorl
cli
les
sub
fisubl
mov
mov
inc
xchg
jmp
cs
je
out
cmp
push
sbb
xor
test
daa
jg
lahf
popa
push
dec
xor
cmpsb
sbb
movsb
fisttpl
pop
cli
sub
cld
jmp
xchg
shrb
daa
js
cmp
roll
into
shlb
or
sti
out
faddl
pushf
sarl
jle
jo
adc
add
scas
sti
cmpsl
jb
xchg
dec
or
nop
in
inc
cld
rcrl
inc
adc
inc
fists
pop
popf
imulb
cmpsb
pop
jo
movl
push
je
push
fs
xor
dec
jae
aaa
mov
pop
jne
xchg
and
sbbl
and
pop
es
or
es
mov
sbb
andl
add
mov
dec
mov
loopne
lock
and
sar
in
add
pushf
jmp
arpl
xor
and
mov
scas
fcoml
mov
push
and
scas
xchg
mov
jp
jl
push
add
jbe
mov
js
cwtl
xchg
inc
dec
bound
shrb
insb
mov
mov
jmp
jecxz
int3
loope
jl
hlt
jge
push
stc
popf
inc
xor
mov
xchg
sbb
rol
jae
jmp
ja
inc
stos
mov
inc
inc
into
inc
xchg
pop
sub
fidivrs
mov
mov
mov
jb
test
out
loop
enter
lds
aad
iret
pop
outsb
mov
popa
mov
push
inc
add
and
int
fisubrs
add
ljmp
push
movsl
daa
mov
jbe
push
xchg
arpl
in
jmp
jno
lock
test
out
mov
mov
cmpsb
add
add
mov
cli
push
test
xchg
pop
adc
int3
sbb
ja
mov
xchg
dec
mov
test
inc
iret
ljmp
orb
data16
fldenv
and
enter
sub
or
fsub
cwtl
das
ds
pop
xor
pop
dec
sar
xor
add
dec
cmpsb
inc
repnz
subb
add
psubq
ljmp
cmp
add
out
int
hlt
stos
dec
xchg
mov
jl
out
mov
and
rcrb
add
inc
inc
xor
insl
outsb
or
call
mov
sbb
add
loop
xlat
je
push
sbb
push
lret
xor
sbb
push
push
cmpsl
xor
leave
xor
out
mov
fiaddl
mov
jb
lcall
jp
xchg
xor
cmp
mov
inc
lahf
sbb
rol
hlt
cmp
das
popf
push
cmp
imul
in
add
aaa
orl
enter
jo
pushf
gs
cmp
or
inc
pop
sbb
imul
ja
hlt
pop
lds
test
xchg
push
push
test
inc
push
push
jmp
in
daa
mov
fsubrl
sub
and
sbb
dec
jno
nop
or
push
fdivrl
jl
jecxz
jb
add
js
and
add
mov
dec
ljmp
inc
in
xchg
mov
pusha
ds
in
xchg
dec
into
daa
mov
xor
dec
cmp
push
jnp
xor
leave
adc
test
hlt
das
lods
mulb
dec
mov
jns
lcall
aaa
arpl
mov
arpl
lea
push
loopne
loopne
push
test
jo
jne
add
inc
pop
push
push
or
insb
push
sub
addr16
enter
inc
cmpsb
jbe
aaa
clc
mov
xchg
arpl
push
test
push
divb
fwait
push
leave
repz
push
inc
scas
push
mov
adc
push
add
fldcw
fs
fsubrp
pop
jl
xor
cltd
mov
xchg
xchg
jp
imul
lods
aas
out
aam
popa
ljmp
jle
shlb
push
popa
and
and
sti
push
cmp
fldcw
push
outsl
loopne
insb
pop
cmp
mov
cmp
popw
or
cmpsb
add
imul
push
lcall
mov
dec
xchg
repz
xlat
jle
xor
movl
scas
push
repnz
fsubrs
push
shll
xchg
aas
or
dec
push
sub
rcrb
sbb
sub
push
and
ja
push
mov
insl
jge
add
inc
xchg
mov
sbb
lret
icebp
and
sbb
cld
push
stos
mov
bound
and
ja
jne
pop
mov
movsb
sahf
test
out
aaa
inc
sub
fcompl
cmp
xchg
or
jb
data16
stc
rcrl
inc
push
jmp
adc
add
imul
test
ficoml
sbb
int
jb
js
jp
lret
lahf
push
pop
push
xchg
test
xchg
jno
mov
jbe
cmp
scas
sub
mov
dec
jns
jl
jl
in
andl
jecxz
push
out
cltd
sub
jecxz,pt
vphaddbq
mov
lea
das
dec
and
xchg
aad
mov
sbb
mov
xor
insb
dec
negb
into
mov
test
fisttpl
in
loop
jl
fwait
push
cltd
icebp
dec
movsb
fidivs
mov
insb
mov
lret
insl
mov
imul
cli
or
sub
ficoml
dec
inc
pop
pop
jno
sbb
rcll
or
mov
cmp
pop
fstpt
movsb
cmp
jb
scas
mov
into
scas
enter
je
sarb
or
std
pusha
fstl
xchg
push
inc
sub
push
cmc
push
push
sbb
clc
mul
inc
popa
adc
mov
jb
iret
daa
push
xchg
ljmp
pop
mov
mov
mov
in
xlat
mov
rclb
jae
cmp
aad
call
lret
mov
adc
add
fdivrl
mul
mov
cmp
push
test
jl
mov
pop
outsl
hlt
rcrl
pop
dec
pop
sahf
dec
stos
mov
sub
in
cli
lods
xlat
push
lret
lods
inc
adc
icebp
xor
int3
or
arpl
pop
test
pop
jno
enter
sbb
enter
cmovae
push
lock
sbb
std
sbb
or
outsl
sahf
mov
jbe
call
jbe
sub
bound
pop
or
scas
gs
hlt
mov
cmpsl
int3
pop
add
inc
aaa
std
lods
adc
and
lcall
sbb
cmpsl
or
adc
gs
ret
movsb
mov
cmpsl
pop
js
inc
jne
xorl
scas
mov
dec
loope
int
hlt
cmpsl
aas
addr16
out
scas
inc
mov
jmp
lods
popa
lds
and
dec
pop
adc
insb
push
roll
xchg
cmp
insl
out
sbb
testl
fisttps
ror
mov
outsl
mov
sub
mov
inc
ss
xchg
jmp
sub
fstl
push
outsl
and
cmc
icebp
int
adc
xchg
push
aad
fs
mov
call
push
dec
add
outsb
insl
adc
xor
or
rcll
ljmp
test
dec
icebp
arpl
cli
daa
daa
mov
pop
daa
out
std
je
xchg
loop
add
enter
and
dec
shlb
adc
lcall
clc
gs
or
movsl
test
or
push
mov
test
push
push
add
jp
lret
cwtl
mov
mov
sbb
sbb
or
ret
mov
push
xor
inc
xor
sti
into
popf
or
xor
into
push
daa
in
cli
cli
test
jle
cmpsl
pop
adc
mov
in
adc
ss
sahf
and
pop
pop
push
into
xchg
outsl
int3
inc
js
shlb
jns
loopne
xchg
addr16
idivl
test
jge
decl
mov
pop
loopne
mov
fistl
incl
jg
inc
enter
pop
pop
mov
flds
cmovge
push
xor
stos
mov
and
cs
mov
mov
test
stos
push
cmpsl
rcrb
lret
int
sahf
xlat
push
in
push
int
push
int
jl
aas
test
pop
sbb
or
jae
mov
cmp
xchg
push
fnstsw
mov
in
pop
lret
xor
xor
add
adc
or
lods
mov
mov
repnz
pop
and
push
and
out
ja
pop
fwait
push
pushw
shll
pusha
mov
mov
insb
xchg
mov
insl
xchg
inc
loop
mov
or
leave
push
add
and
in
mov
mov
out
mulb
jne
icebp
sub
sub
insb
mov
inc
push
subl
ss
fldt
sub
sti
add
pop
roll
outsl
add
cmc
mov
xlat
inc
test
mov
inc
nop
add
les
arpl
sub
shlb
lcall
in
lods
lcall
add
jecxz
pop
insl
and
lds
cmp
loope
add
and
mov
dec
mov
cmpb
dec
xchg
shlb
xchg
icebp
fistpl
popf
data16
stc
sbb
lret
adc
fildl
sbb
stc
lea
ret
pusha
sahf
negb
sbb
popf
stc
pop
push
cmp
loop
scas
xor
xchg
lret
lret
xor
cmc
clc
sbb
sbb
call
dec
pop
les
xchg
dec
jl
fbld
loope
dec
sbb
cmc
mov
lcall
dec
or
fidivrs
cmp
and
dec
xor
push
xchg
test
hlt
rolb
cmpsl
shrl
push
rclb
test
inc
std
movl
repnz
or
stos
pop
adc
xchg
dec
sub
arpl
inc
icebp
sbb
lcall
imul
cmp
std
outsb
test
loopne
out
out
dec
jbe
adc
xchg
push
pop
pop
sub
or
lret
cmpsl
mov
out
jns
in
add
fistpl
mov
and
fstps
inc
sub
cmpsb
jl
ret
in
mov
dec
jecxz
jb
xor
fisubrs
xchg
shll
testl
movsl
cmp
jne
inc
stos
mov
sahf
mov
incb
je
pop
sahf
dec
mov
es
repnz
mov
mov
sbb
cmpsl
movsb
outsl
mov
mov
cld
aad
pop
inc
int3
fwait
inc
ret
pop
xchg
and
fistps
jns
scas
addr16
push
mov
mov
push
pop
push
mov
lcall
scas
mov
cmpsl
cmp
sbb
hlt
mov
or
jnp
das
shll
enter
adcl
sub
rclb
inc
ss
ds
dec
pushf
loopne
pop
xor
inc
sbb
xchg
inc
pop
es
sbb
hlt
filds
or
add
scas
sbb
int3
sti
sub
lds
fwait
sub
or
imul
out
enter
jne
add
push
fwait
xor
mov
push
sbb
pop
into
cmp
sbb
ja
jle
mov
sarb
js
inc
pusha
xor
sahf
fisttpl
lahf
xchg
cli
arpl
lock
jno
jmp
ss
movsl
icebp
pop
sbb
gs
dec
jb
jo
mov
sahf
nop
lock
dec
inc
repnz
sub
mov
sub
or
cmpsb
sar
stc
cmpb
mov
sbb
mov
jg
mov
out
roll
mov
jns
xacquire
bound
out
mov
loope
mov
sti
mov
xor
add
in
test
cmp
or
shll
shll
cmp
cltd
mov
adc
negl
pop
jmp
dec
add
xchg
and
out
sbb
xchg
insw
cmp
call
orl
and
or
cmp
mov
mov
mov
mov
mov
jge
xor
add
out
mov
push
fsubrl
adc
les
test
sahf
pop
ss
or
cld
xchg
lods
add
mov
lret
pop
push
sti
mov
xchg
pusha
pop
das
bnd
mov
push
adc
inc
cmp
push
cli
sarb
or
sahf
pop
pop
subl
out
lock
push
ljmp
pop
cmc
mov
push
inc
jnp
jno
push
cmp
sti
pop
lea
imul
int
aad
mov
roll
or
in
std
mov
ss
ljmp
jb
jecxz
and
stos
xchg
lock
int
pop
pop
out
scas
dec
xor
cld
cvttps2pi
push
push
shlb
in
cmp
push
bound
out
in
add
adc
shrb
fists
push
sarl
in
xchg
mov
push
cmpsb
push
xchg
outsb
shll
pop
pop
or
mov
popf
xorb
aam
cmpsb
xchg
stos
inc
jnp
orb
fcmovnu
push
in
xchg
bound
stc
or
mov
and
cmp
lods
mov
jmp
repnz
icebp
lahf
je
and
jge
loop
push
cmpsl
je
sub
aas
xchg
and
call
inc
pop
gs
int3
xor
pop
pop
jg
dec
aad
scas
lret
out
aad
imul
dec
rolb
ret
or
mov
pop
adc
mov
mov
jle
push
in
subl
add
push
pop
jae
jl
cmp
adc
inc
addr16
pop
sbb
test
inc
shlb
test
and
xor
dec
sub
pop
xlat
ss
push
dec
dec
imul
addr16
es
sub
or
enter
fwait
sub
jne
int
jo
fs
test
fs
enter
int3
or
push
cmp
outsb
jb
lret
mov
bound
xchg
fisttps
loopne
or
mov
cli
mov
stos
into
xor
jno
les
cmp
imul
jns
lods
adc
pop
repnz
pop
pop
stc
xor
inc
add
dec
out
xor
cmp
insb
sahf
jl
sbb
ficomps
push
sbb
ffreep
fidivl
les
adc
data16
emms
xor
jp
cmp
mov
cmpsb
dec
incb
adc
stos
loop
mov
jecxz
jecxz
inc
adc
push
enter
sbb
jne
jnp
push
pop
add
pop
aaa
sbb
push
in
push
gs
xor
fdivl
jns
xor
sbb
jge
lods
leave
cmp
inc
push
add
or
lahf
stc
jg
outsb
testb
movsb
push
lahf
mov
je
imul
cmp
jbe
mov
daa
insb
cmc
hlt
insl
mul
and
and
jnp
cmp
pop
sbb
push
outsl
xchg
jns
cmp
aaa
pop
leave
test
adc
loopne
sbb
test
ret
jae
mov
jo
movsb
das
xchg
and
jg
push
das
jnp
and
push
xchg
inc
pop
cmp
iret
rcrb
jo
jp
les
mov
fcomps
test
pop
push
mov
into
jl
int
xchg
push
dec
lret
cltd
inc
pop
push
in
sarb
jno
fidivs
cs
mov
call
movl
js
addr16
pcmpeqd
mov
leave
cmp
xchg
lock
jge
rcr
std
pop
cmp
xlat
xor
mov
push
adc
mov
mov
filds
add
ds
ja
les
mov
mov
mov
ficoml
insl
fsubl
adc
lahf
mov
in
sbb
push
idivl
push
xchg
mov
notl
jmp
mov
and
xor
movb
lret
mov
aas
dec
mov
push
cli
inc
jecxz
fwait
mov
sub
jl
ds
test
sbb
inc
outsl
scas
sahf
lcall
xor
int3
add
daa
adc
mov
mov
jb
sub
push
outsl
lahf
ret
mov
insl
mov
jns
cmpsb
ret
sbb
jecxz
popf
out
cmc
sbb
lcall
jl
icebp
iret
fcompl
ja
test
es
jecxz
mov
int3
test
test
mov
mov
jbe
inc
push
aas
dec
pop
js
push
add
popl
popa
add
inc
adc
inc
aam
push
std
or
jae
xor
subb
lods
sub
lods
aas
mov
gs
sbb
aas
xchg
pop
xchg
fildl
add
xchg
xchg
aad
push
outsl
lret
rcrl
sbb
test
sbb
and
push
or
jae
cmp
xchg
movsl
jno
pop
js
push
push
ret
pop
push
leave
mov
fwait
sub
adc
in
dec
xor
push
paddb
jb
xlat
sti
jecxz
xlat
fcomip
xchg
mov
add
fiaddl
pop
fstpl
dec
and
inc
adc
stos
sti
fisttps
test
sub
inc
ret
pusha
pusha
xchg
push
jmp
push
or
add
xchg
xor
sub
jne
sti
push
dec
dec
cmp
xor
stc
insb
jne
in
pop
add
inc
adc
push
or
incl
call
mov
lds
mov
cld
jge
adc
int3
mov
push
cld
jecxz
dec
addr16
fcoml
fsubrl
and
and
clc
mov
dec
inc
inc
shll
xchg
mov
bnd
sbb
fnstsw
jbe
int
pop
inc
and
jecxz
orb
mov
imul
add
leave
push
loope
into
fnstsw
je
repz
or
std
mov
sbb
test
lock
sbb
stos
leave
movsb
fldl
inc
dec
in
aas
mov
stc
mov
mov
sti
inc
jb
scas
sub
mov
fcom
adc
inc
fwait
mov
in
icebp
adc
cld
ljmp
lods
xor
inc
aaa
xchg
mov
adc
cld
out
pop
bound
int3
fdivrs
sub
test
outsl
and
cwtl
fisubs
adc
sahf
mov
mov
mov
mov
adc
rcrb
sub
das
xorl
dec
neg
cmc
mov
add
jb
cmp
in
ds
stos
push
and
scas
outsl
arpl
out
mov
ret
add
icebp
out
push
add
aaa
icebp
rolb
or
jae
inc
fidivrl
pusha
mov
rep
shlb
pop
in
test
in
pop
adc
cmp
inc
pop
lock
jle
lret
pop
fstpt
sub
push
sbb
outsb
fisttpl
sub
gs
mov
adc
jecxz
sbb
add
faddl
std
aas
insl
push
out
imul
mov
ljmp
movsl
fwait
jmp
jae
aas
sbb
inc
mov
jl
fadd
repz
pop
mov
jge
out
aad
push
mov
add
fnsave
out
or
rclb
popa
mov
xor
sti
insb
js
fnstenv
and
and
push
sbb
push
retw
xor
mov
out
int
xchg
jo
adc
fidivrl
ja
in
fisubs
mov
mov
cli
nop
insb
cmc
cwtl
inc
arpl
adc
dec
scas
xor
ret
push
cmp
cmc
and
sub
dec
push
sbb
mov
fdiv
xchg
or
adc
fwait
fs
pop
pop
and
out
pop
push
adcb
dec
in
or
mov
aaa
jae
jb
popa
or
mov
or
dec
jg
clc
sbb
mov
jbe
scas
sti
movsb
cmp
adc
insl
xor
mov
movsl
sub
out
cmp
cltd
pushf
ret
push
mov
loopne
pop
dec
sbb
aad
pop
add
xchg
ss
inc
xchg
int
pop
pop
ss
dec
push
out
in
repz
sahf
jecxz
loop
ja
cmc
iret
out
push
mov
jp
jnp
les
fmul
xchg
aas
pop
insb
out
xchg
pop
inc
pop
mov
or
pop
and
sarb
jno
jmp
ljmp
rcrb
fistpl
out
fstl
jmp
cmpsb
mov
or
fbld
ds
je
scas
push
leave
stos
jne
xor
sbb
xchg
sbb
clc
es
andb
push
xlat
lods
jb
cmp
out
ja
sbb
and
insb
pushl
sub
ja
iret
jecxz
xchg
mov
jle
out
lods
in
jnp
es
push
mov
pop
push
jmp
fwait
test
jg
leave
out
icebp
sbb
push
adc
or
lods
mov
test
lods
mov
clc
ror
add
test
imul
fmul
les
test
jp
push
mov
inc
xor
push
jne
stos
cmp
test
stc
push
pop
scas
xchg
push
sub
pop
and
dec
inc
popf
pop
cmovg
hlt
mov
mov
sub
std
add
dec
enter
les
bound
mov
mov
aas
addr16
loope
aam
das
and
dec
int3
push
repz
fstpt
mov
mov
pop
mov
add
inc
xchg
xchg
mov
mov
xlat
lock
rolb
xchg
arpl
cltd
pushf
mov
movsl
inc
popf
xchg
dec
mov
es
loope
cld
jae
push
ja
popa
pop
out
xchg
in
jg
sub
cmp
xor
ret
adc
into
add
fisttps
enter
push
pop
lods
js
dec
loopne
mov
add
inc
mov
rcl
push
push
xchg
mov
and
sbb
mov
in
inc
pop
mov
jns
push
mov
and
push
cmp
clc
lahf
mov
or
jns
mov
aaa
fists
int
inc
stos
or
push
mov
add
icebp
pop
mov
jp
cmp
in
icebp
into
ss
dec
jb
ficoms
pop
cmp
cmpsl
pop
mov
xchg
out
adc
cmp
lcall
sbb
adc
cli
sub
cmp
pop
inc
inc
sarl
fisubrs
je
jne
out
or
mov
mov
push
ljmp
push
test
sub
in
scas
mov
add
dec
test
cltd
cmp
in
outsl
ret
andb
mov
adc
push
jg
pop
sbb
jns
stos
sub
and
jecxz
inc
mov
mov
mov
mov
and
push
sbb
inc
sub
lds
stos
mov
mov
out
mov
int
out
stc
xor
aaa
in
test
pop
dec
adc
pop
out
jns
stos
sbb
imul
shll
inc
nop
pop
and
inc
jle
sub
ss
mov
cmp
sub
hlt
fs
jae
scas
dec
push
add
xchg
mov
and
xchg
aas
nop
dec
ficoms
pop
or
mov
pop
jle
add
ja
jo
or
popa
cmp
scas
dec
jp
pop
adc
ficoml
mov
rcrl
lock
cwtl
mov
mov
dec
ret
xorl
add
shr
das
loope
sbb
xchg
sub
lods
push
cli
lds
pop
inc
shrl
cltd
mov
nop
aas
xor
fs
les
push
leave
loopne
cmc
ret
in
cmp
push
mov
fwait
jle
repnz
mov
adc
pop
mov
mov
mov
sbb
inc
repnz
xchg
dec
jecxz
pop
cmp
cmp
jo
jecxz
or
adc
loop
xchg
leave
xor
leave
adc
lahf
push
in
pop
mov
lcall
loop
ret
cs
and
xlat
dec
and
inc
mov
and
lds
adc
dec
ret
adc
and
mov
fisttpll
mov
mov
jle
insl
dec
cwtl
sub
sti
xchg
dec
xor
mov
mov
jbe
stos
stos
fs
sub
push
dec
notb
scas
lock
push
inc
ds
push
sbb
ffreep
jo
and
int3
push
enter
aam
inc
xchg
adc
push
jnp
dec
fwait
repnz
pop
jne
fiaddl
jmp
lahf
fsubl
mov
mov
hlt
dec
pusha
mov
das
pop
clc
dec
in
ljmp
cmp
cli
mov
rolb
loop
xlat
cli
shrl
fucomi
das
or
and
test
push
xor
jge
adc
xchg
les
inc
mov
scas
sbb
lret
test
cmp
push
mov
out
xorb
jl
repz
xchg
cmp
mov
shrl
adc
sti
ret
movb
in
inc
cmc
ss
xlat
mov
mov
cmp
xor
push
xchg
out
xor
pop
adc
popa
cltd
jae
jns
ret
into
cmp
loop
or
sbb
inc
loope
movsb
loop
dec
dec
dec
jg
jno
and
sahf
dec
ret
mov
inc
fnstcw
loope
mov
mov
or
cwtl
dec
movsl
cmp
icebp
or
call
adc
insb
cmc
ret
fisubs
movsb
in
stos
inc
repz
int
fs
shlb
mov
test
out
add
pop
fs
dec
mov
xchg
xchg
ljmp
test
inc
mov
cmc
mov
lods
scas
dec
addr16
mov
xchg
mov
das
jbe
jbe
cwtl
mov
xchg
popf
inc
pop
pop
dec
push
daa
mov
adcl
adc
jmp
xor
sbb
pop
cmp
scas
jae
cmp
dec
dec
jp
not
and
call
or
pop
jge
sbb
sub
hlt
repnz
pop
pop
cmpsb
dec
inc
push
daa
ret
mov
adc
inc
lret
sbb
das
cmp
push
mov
pop
ret
dec
adc
cs
xor
outsb
jne
mov
orl
push
xor
inc
inc
inc
repz
mov
mov
lret
nop
mov
add
ja
jo
enter
inc
lea
jns
jmp
xchg
std
mov
cmp
xlat
inc
push
gs
or
mov
add
jns
pop
push
sbb
jge
pop
stos
xchg
pop
repnz
lods
aas
cmp
iret
paddb
mov
movq
pushw
lcall
cmpb
or
mov
mov
pop
mov
xor
xchg
mov
jle
push
cli
rclb
cmp
mov
inc
dec
push
inc
cli
iret
inc
cmp
xchg
adc
inc
mov
push
push
pop
std
int3
xchg
das
pop
fsubrp
loop
sbb
je
cmp
ljmp
mov
xlat
pop
mov
imul
not
sahf
mov
lea
pop
inc
push
mov
mov
es
andb
mov
dec
xchg
lahf
pop
push
sub
decl
loopne
cmpb
sbb
push
cmpsb
pop
insb
xchg
add
jb
mov
cwtl
lock
into
sbb
cmp
xor
push
test
mov
adc
xchg
inc
push
scas
mov
testb
mov
mov
pushf
lcall
daa
or
in
lods
ljmp
js
lret
mov
ljmp
cmp
dec
pop
cmpsl
enter
sub
dec
inc
dec
jns
sub
xchg
mov
push
sub
push
jo
repnz
aad
sub
xor
xchg
fsubrs
pop
std
add
loopne
popa
jl
push
mov
cmp
int
cmp
sbb
aam
scas
shl
aad
loopne
gs
icebp
repnz
dec
jbe
stos
or
outsl
cmp
in
bound
mov
and
mov
in
jmp
adc
int
js
mov
xchg
jne
lods
pop
std
push
inc
out
xlat
and
jl
dec
adc
cmp
mov
push
mov
pop
out
mov
xlat
mov
xor
fdivrl
call
ret
mov
inc
leave
cmc
insb
adc
stos
xor
leave
push
clc
xchg
or
adc
fldt
push
outsb
mov
movsl
inc
mov
fwait
stos
pop
fsubrl
pop
push
ficoms
mov
adc
aad
sub
ljmp
fmuls
pop
mov
lret
inc
pop
push
addr16
hlt
xlat
repz
cltd
cmp
pop
jbe
dec
lock
int
add
mov
cwtl
jmp
xchg
aad
pop
push
pop
push
xchg
aad
add
sti
xchg
test
jae
jo
and
shr
cmp
sahf
mov
pop
test
xchg
int3
xor
pop
mov
out
mov
sub
mov
rcrl
repz
rcll
adc
rcll
mov
jp
dec
add
aad
push
repnz
adc
rclb
int
sbb
dec
pop
out
add
dec
enter
jno
stos
pop
scas
scas
jg
mov
fdiv
sbb
mov
mov
mov
cmp
cmp
rcr
dec
andb
cmpsb
or
or
sbb
jbe
cmc
iret
jp
aaa
push
fcompl
cmp
inc
cmp
les
mov
mov
xchg
or
std
cmpl
push
adc
push
xor
sbb
test
shlb
sbb
ds
je
cmp
or
lock
xchg
in
mov
jbe
bswap
je
pop
sbb
inc
push
mov
cmp
and
je
sub
in
push
stos
in
mov
ret
loop
cmp
jns
jnp
bound
dec
jne
cmp
test
xchg
cltd
push
sbb
std
push
xchg
ret
xchg
mov
xchg
nop
xchg
pop
push
sub
frstor
pop
sbb
jecxz
movsl
push
stos
bnd
xchg
xor
xor
dec
aad
pusha
aad
mov
push
fdivs
sbbb
push
and
cmp
mov
inc
leave
test
pop
add
lea
jg
in
mov
xchg
cmpsb
add
clc
dec
inc
sahf
sub
lds
decb
loop
cli
or
xchg
mov
stos
dec
xor
xchg
adcl
pop
subl
insb
push
jno
sbb
addr16
sbb
pushf
andl
mov
cwtl
and
cmp
aaa
daa
inc
dec
lret
dec
mov
lea
pop
movb
div
xchg
into
xchg
jo
adcb
pop
inc
arpl
jmp
sarb
sbb
rclb
and
or
or
fs
jnp
push
cli
cld
adc
fsubrs
xor
fidivl
les
int
lret
mov
mov
pop
in
or
mov
lds
adc
jg
add
inc
in
test
cmp
icebp
popf
repz
jge
mov
fisubs
push
inc
es
ja
push
jne
je
test
push
iret
cmpsb
stos
enter
pop
jo
adc
test
test
xchg
aam
and
add
mov
movsb
inc
into
cmp
adc
mov
popf
loop
scas
pop
enter
or
or
xlat
xchg
xor
les
add
sbb
cld
xor
mov
xchg
insl
in
loop
adc
leave
xorl
jne
inc
sbb
mov
xchg
sar
add
out
and
adcb
lock
imulb
bound
int3
enter
dec
add
lea
cmp
in
sbb
sti
pop
jle
sub
test
adc
or
movsl
roll
pop
lcall
lods
and
inc
js
test
push
rcrl
jmp
sub
push
mov
iret
fstl
hlt
dec
mov
push
cltd
stc
push
out
lret
jp
das
mov
mov
or
lcall
jnp
and
xchg
lret
test
dec
sub
adc
dec
popf
jb
daa
mov
push
clc
repz
es
ja
cmc
xorl
dec
inc
mov
fsubrs
xchg
out
cs
mov
mov
sub
jno
sub
pop
icebp
and
mov
int3
test
outsb
xchg
rolb
cs
pusha
mov
test
jmp
mov
jnp
mov
adc
add
sub
mov
sbb
sub
pop
inc
fdiv
mov
out
sbb
int
fidivrl
imul
ds
push
xchg
frstor
js
loope
and
push
daa
xchg
jecxz
xor
addr16
out
adc
mov
xchg
sub
jle
and
popa
neg
pop
fimull
mov
hlt
cmp
shlb
pop
std
iret
inc
pop
and
arpl
sar
outsl
dec
cmp
push
cmp
lods
notl
iret
sub
add
xchg
je
incl
adc
mov
cmp
ret
out
in
aad
test
lcall
adc
push
int3
pop
and
dec
or
jp
or
jne
or
loope
in
mov
fcmovnu
or
in
cltd
or
sbb
cmp
pop
dec
xor
repnz
out
in
cmp
and
stos
aad
sub
cmp
cs
and
std
jl
fcmovbe
fstl
lock
loopne
ljmp
inc
insl
call
mov
cmp
add
inc
repz
jmp
adc
or
dec
dec
shr
mov
data16
jmp
or
push
push
std
ds
or
out
mov
mov
xor
push
sub
andb
into
add
mov
cli
ret
dec
es
ljmp
sub
popa
cmp
adc
cmpsl
jnp
fsubrs
push
cmp
cmpsb
mov
mov
insb
jnp
sbbl
stc
stos
lret
bound
popa
sub
or
bound
or
mov
ror
pop
pop
and
in
add
repnz
mov
fidivrl
inc
mov
and
sub
push
mov
les
push
pusha
out
sti
xor
clc
bound
cmp
dec
insl
loop
jg
scas
pop
shlb
and
out
xor
adc
loope
wrmsr
ret
scas
in
stos
xor
insb
adc
mov
popa
mov
or
jne
adc
in
inc
pop
inc
sbb
jmp
mov
shrl
mov
repz
push
shrb
sbb
add
fsubrp
mov
pop
pushl
inc
pop
and
push
dec
mov
jmp
insl
jecxz
popa
ficoms
mov
sub
shll
mov
dec
push
cmp
enter
dec
jge
cmpsb
mov
lock
jno
mov
mov
pop
cmc
fdivs
jae
fwait
and
ror
xor
mov
test
pop
mov
sub
sbb
out
pop
test
sub
mov
aad
bswap
xor
imul
pop
in
and
fbld
lret
jae
outsb
xor
loopne
adc
lods
test
leave
mov
xchg
fbld
mov
xchg
int
cmpl
mov
push
aas
cmp
xor
adc
add
sbb
cmp
dec
in
xor
push
sbb
cmp
dec
imul
test
add
xor
test
push
or
xchg
pop
outsb
addr16
sub
mov
adc
fld
bound
cwtl
inc
arpl
sbb
jb
mov
fldenv
push
jbe
xchg
cli
outsl
push
dec
mov
into
lcall
lcall
or
outsb
icebp
push
sbb
addr16
icebp
testl
add
xor
add
cmp
int3
lds
and
data16
mov
adc
sbb
aam
xchg
daa
std
cmpsl
mov
fisttps
das
fimuls
jmp
adcb
sub
xchg
push
push
into
cmpsl
xchg
adc
push
jae
bound
fidivs
shrl
sbb
and
xchg
fstl
shrb
jns
or
sbb
loope
dec
iret
pop
sti
sub
jl
fldt
inc
cld
lods
or
cmp
hlt
mov
cmp
cmpsl
inc
and
notl
subb
mov
pop
cmpb
mov
inc
dec
cvtpi2ps
rcr
imul
mov
popf
nop
mov
mov
mov
rol
bound
add
test
add
neg
inc
inc
ljmp
and
clc
stos
add
pop
cmp
sub
jge
mov
cmc
iret
in
add
inc
sbb
fsubr
fwait
mov
rcrl
ret
xchg
sub
jne
push
data16
iret
ret
mov
scas
out
mov
loope
pop
adc
cld
shlb
sbb
rcll
mov
aam
mov
pop
add
pusha
imull
sub
inc
mov
stos
sbb
mov
cmp
fistpll
mov
sub
je
fnsave
mov
mov
push
mov
stos
fcoms
mov
jle
mov
add
xchg
ror
mov
mov
jb
call
mov
mov
adc
jne
inc
jmp
cwtl
mov
jb
or
lahf
fisubrl
mov
jecxz
mov
sub
push
cltd
fmull
xchg
pop
mov
test
out
mov
xchg
fimuls
loope
pop
ja
jns
rolb
cmp
dec
inc
mov
pop
leave
mov
pop
dec
sbb
arpl
xor
jno
mov
inc
out
sahf
es
dec
add
aas
xchg
adc
mov
pushl
pushf
orl
pop
cmc
frstor
bound
inc
and
sub
mov
jbe
sub
mov
scas
repz
mov
cmp
cmc
push
mov
lods
mov
mov
pop
jge
dec
insb
inc
push
pop
xor
popf
fists
inc
adc
clc
and
adc
mov
shll
std
pop
mov
pop
xor
std
jo
xchg
mov
add
or
mov
add
cmp
fnstsw
imul
jle
aad
sub
lods
dec
push
fdivs
jnp
cwtl
cmp
fisttpll
es
dec
pop
sarl
mov
mov
mov
cmp
jecxz
int3
or
nop
pop
inc
dec
xchg
pusha
pop
jmp
xchg
icebp
mov
push
mov
push
xor
lret
jg
dec
int
leave
jae
test
cmpsb
fimull
je
dec
rorb
xor
sub
ret
leave
imul
out
insb
repz
or
cmpsb
push
pop
ret
sbbb
lds
out
addr16
add
xchg
stos
outsb
lcall
fs
xchg
aad
adc
into
xchg
movsb
jmp
push
out
addr16
ss
pop
lods
sub
fldcw
or
add
and
leave
jno
out
dec
mov
mov
or
xchg
dec
repz
fnsave
rcl
dec
push
and
mov
sbb
mov
sbb
movsb
xor
inc
or
aad
mov
xchg
jge
roll
pop
push
jge
test
cwtl
xchg
test
jmp
push
dec
hlt
lods
fists
movsl
ja
sbb
sub
aam
dec
push
lret
cld
xchg
mov
stos
loope
stc
jmp
push
xor
outsb
enter
xchg
sub
adc
fisttpl
jbe
fwait
adc
sub
fldlg2
stos
push
add
shr
repnz
sub
cs
test
jb
inc
loope
xor
xlat
and
xor
push
and
push
pop
in
add
push
sahf
jae
add
dec
aaa
daa
mov
hlt
pop
fisubs
adc
scas
adc
dec
in
inc
cmp
jl
imul
mov
lret
lods
int3
sahf
mov
stc
imul
push
int3
lods
jp
clc
xor
cmp
imul
jl
int
mov
imul
rcrb
or
push
arpl
dec
test
inc
jo
in
push
outsl
pop
pop
cmpsl
and
leave
andb
fadd
or
inc
mov
rcr
aas
sbb
adc
out
xchg
cmpb
mov
jns
inc
push
or
or
add
out
cmp
mov
inc
pop
cmp
mov
mov
bswap
out
inc
aam
add
jle
xor
and
cltd
push
cmpb
push
ss
ret
and
loopne
mov
mov
mov
or
sub
sub
cli
jp
pop
dec
test
cld
fisttps
fistl
leave
fwait
xor
pop
clc
call
sbb
iret
movsb
pop
mov
or
xlat
push
scas
enter
mov
push
insb
std
push
dec
jne
fimull
add
mov
iret
lock
into
andb
sar
dec
jo
add
add
xor
and
or
inc
call
lret
jmp
out
lret
hlt
cmp
mov
push
and
jmp
fcomps
or
sbb
mov
adc
out
inc
push
hlt
popa
mov
sbb
rolb
mov
jp
push
inc
sub
adc
mov
mov
adc
mov
jne
lea
jg
cmpsl
cmpsl
lods
sbb
xchg
test
mov
lret
leave
fs
xchg
sbbb
test
repz
pop
std
cmp
loopne
inc
cmp
test
scas
ficoml
or
add
sbb
or
mov
xor
aas
push
iret
sti
sub
or
pop
lret
xor
inc
mov
cmp
and
add
push
xor
mov
pop
sub
jno
push
xchg
push
mov
xor
pop
js
sbb
ja
aam
xor
xor
aaa
packuswb
xchg
inc
push
test
mov
dec
push
mov
add
dec
xor
mov
push
test
push
xor
clc
add
xor
mov
xlat
mov
mov
or
xchg
or
mov
decl
cmp
inc
stc
std
fcompl
sbb
mov
xor
sub
cwtl
ja
jae
pop
cmc
stc
sbb
adc
mov
stc
data16
outsl
bound
ds
sbb
inc
sbb
pop
pop
push
xor
sbb
xchg
test
scas
inc
sbb
nop
mov
inc
les
dec
test
mov
ret
and
push
mov
mov
pusha
sub
jle
mov
push
out
sbb
cwtl
test
cmp
xor
out
inc
or
jno
jg
fadd
or
sub
jo
or
jl
add
mov
sub
sbb
and
fisttpl
sub
dec
daa
repz
dec
mov
in
pop
fisubl
mov
clc
push
out
psrlq
mov
into
push
leave
mov
pop
bound
mov
or
dec
mov
xor
lret
stos
mov
cwtl
sbb
ljmp
or
dec
jecxz
das
mov
or
mov
cwtl
or
fisttpll
ds
adc
hlt
in
loopne
clc
mov
mov
scas
bound
decb
lods
int3
dec
loopne
rol
dec
in
rorb
dec
push
mov
stc
jbe
pop
sub
xchg
out
sub
add
lret
xor
jg
jo
popa
sbb
xor
push
jnp
push
repz
inc
add
jnp
mov
insb
or
jno
movsb
and
pop
fwait
push
xor
mull
jp
gs
pop
ss
leave
and
push
inc
dec
and
subl
xor
lahf
jl
mov
or
popf
xlat
lret
scas
dec
lods
scas
inc
mov
xlat
sbb
insb
cmpsl
mov
leave
outsb
daa
ja
sub
mov
sbb
xchg
cli
dec
idivb
cmpsl
sbb
bound
lods
les
pop
push
xor
xchg
enter
insl
sub
pop
pop
mov
cmp
insl
arpl
sub
lret
pop
mov
das
lods
add
fsubrl
hlt
addr16
and
cmp
movsl
add
out
pop
out
scas
out
sub
sub
dec
dec
outsb
es
aad
adc
dec
cmp
sbb
pusha
mov
sbbb
cmpsb
fsubl
mov
lcall
fists
lods
mov
arpl
lahf
and
jmp
pusha
aam
and
ss
mov
outsb
rclb
dec
or
fildl
rorl
mov
pop
adc
dec
pop
addr16
pop
inc
cmc
cltd
mov
cltd
sbb
addr16
stos
dec
pop
sbb
sti
dec
stos
nop
das
mov
fbld
xchg
lds
xor
out
hlt
les
fcomi
xor
jge
push
rcll
add
and
pop
and
inc
xchg
jae
mov
fistps
mov
sbb
push
push
cmp
inc
fdivs
call
cltd
sti
ljmp
mov
mov
lret
arpl
jle
sub
in
push
or
setle
jecxz
cmp
stos
inc
push
stos
jge
fsubp
lcall
mov
imul
jbe
jbe
test
in
sub
nop
stos
ds
pop
dec
pop
xchg
pop
rclb
lods
pop
pop
mov
enter
lcall
mov
and
jge
nop
ja
jmp
cmp
sti
mulb
scas
mov
jno
movsb
ds
sbb
adc
out
iret
pop
lret
pop
mov
push
ds
nop
fistps
imul
enter
mov
rcll
push
out
cmp
add
clc
mov
aas
jp
xor
les
mov
dec
lcall
aam
sbb
jb
push
push
mul
or
cmp
pop
pop
dec
cmpb
dec
inc
ficoml
xchg
int3
leave
xchg
or
pusha
inc
sbb
mov
or
push
popa
repz
invd
jb
mov
jb
pop
xchg
sbb
mov
sub
ffreep
jg
popa
ret
mov
push
mov
js
dec
mov
fsubrs
mov
jge
pop
repz
mov
pusha
test
cmp
adc
fsubs
shll
pusha
int3
test
push
xorl
cmp
mov
xor
jmp
in
in
cli
mov
mov
add
insb
cs
mov
xor
push
repz
push
shlb
ret
xor
lcall
dec
push
add
loop
sbb
mov
imul
leave
push
adc
stc
jl
inc
cmp
pop
xchg
mov
sub
js
sub
xor
leave
xchg
stc
and
dec
mov
jo
cmp
mov
and
push
shll
sahf
es
imul
imul
or
dec
sbb
ror
sbb
sbb
inc
ret
imul
sbb
inc
iret
notl
pop
cmp
adc
lret
lret
loopne
mov
fbld
jae
and
pop
loope
loope
test
rol
leave
mov
inc
imull
repnz
rorl
jnp
gs
dec
pop
aas
loope
out
int
shll
xchg
clc
je
ret
sbb
jge
ss
insb
les
xor
mov
mov
adc
and
movsb
in
dec
fistl
cwtl
in
scas
cmp
push
popf
aad
lcall
dec
sbb
push
sub
push
inc
or
mov
xor
jo
mov
cwtd
nop
push
sbb
ror
call
push
add
pop
add
cmp
jp
shrb
jno
jbe
mov
daa
push
mov
shrb
std
lock
xchg
xchg
loop
push
int3
jnp
fmulp
xor
mov
adc
xchg
push
mov
jns
pop
lods
and
mov
add
mulb
arpl
lret
xchg
cmp
std
lret
pop
aam
pop
mov
les
mov
adc
movsb
test
jb
xlat
push
fistpll
fs
inc
xor
jno
fistpl
pop
fwait
or
xchg
inc
lds
stc
fdivl
lods
loopne
adc
jae
cs
jb
clc
imul
push
mov
mov
je
cmp
jnp
gs
insb
lds
aaa
lods
shl
add
mov
rclb
add
adc
cs
lock
into
cltd
and
and
jne
scas
adc
adc
out
repz
jbe
jg
mov
cwtl
or
pop
repnz
mov
jg
mov
out
es
out
and
and
mov
cmp
call
xchg
and
loop
dec
mov
and
jae
sub
sub
lods
sub
enter
push
in
inc
bound
sbb
jno
jae
mov
aad
push
call
or
cmc
repnz
ja
ja
in
dec
scas
insl
pop
mov
adc
sub
inc
fisttpll
xor
rclb
out
push
cmp
or
mov
xor
out
shrb
push
pop
inc
xor
mov
scas
pop
wbinvd
jno
sbb
clc
div
jns
add
fldl
add
mov
insb
std
bound
mov
jle
mov
cmp
sbb
jbe
add
popa
daa
push
lods
cmp
scas
lock
lock
loop
mov
mov
pop
push
ret
hlt
or
mov
push
sub
fwait
mov
xor
xchg
jge
int3
xor
xor
sti
enter
in
and
rorb
popf
and
scas
jle
loop
mov
add
jle
in
cmp
mov
lcall
sbb
stos
and
push
dec
aad
enter
pop
pusha
loope
mov
inc
fisubrs
mov
hlt
test
mov
adc
or
bound
add
scas
jb
sub
shll
xchg
inc
ret
mov
push
jp
cli
dec
jae
pop
cs
scas
add
ljmp
rcr
push
adc
test
sbb
cmp
insb
pop
rorl
les
inc
inc
pop
dec
inc
popf
sbbb
jle
lret
int3
adc
dec
loope
scas
push
ficoml
mov
add
xchg
xchg
aad
sbb
jne
loop
sarb
jmp
andb
les
mov
arpl
dec
lahf
js
pop
rcrb
daa
xchg
int3
stc
add
iret
sbb
je
or
stc
repnz
aad
ds
mov
jnp
or
lds
dec
jmp
jae
or
jbe
xlat
shll
scas
sub
cltd
ja
lea
sti
jle
call
bnd
sub
push
test
sub
out
clc
je
pop
rcrb
mull
loopne
mov
adc
pop
adc
pop
mov
adc
lods
add
aaa
sub
enter
adc
aas
mov
sub
dec
faddl
jg
pop
pop
pop
add
mov
daa
pop
dec
dec
sub
push
enter
sub
and
mov
xchg
push
xchg
fucomp
adc
xor
push
push
lock
test
pop
and
int
pop
mov
rol
add
jbe
and
xchg
fmull
gs
mov
fsubrs
loopne
enter
fsts
mov
mov
push
in
mov
das
xor
fsubrs
dec
lcall
xlat
ds
in
aaa
pop
rcrl
xor
scas
andb
pusha
push
jge
shrl
sub
sub
jecxz
jb
jle
in
addr16
cmp
les
inc
pop
pusha
cmpsb
pop
adc
xchg
push
xor
xchg
xchg
repnz
mov
jb
cmp
nop
movsl
fcomps
push
aam
outsl
in
iret
sub
fwait
and
mov
sub
jno
out
enter
sbb
insb
mov
inc
mov
sar
lret
cmovs
aas
pop
xchg
fmuls
sub
mov
lcall
jge
jg
add
adc
add
adc
sbb
arpl
mov
stc
cld
and
mov
cs
lds
add
jae
outsl
cs
or
in
xchg
push
test
mov
mov
mov
jae
inc
fmull
enter
fisubs
adc
adc
push
cmp
sbb
mov
daa
popa
pop
stos
mov
xchg
mov
test
cmp
daa
pusha
aad
sbb
or
sbb
pop
cmp
int
aas
loop
and
sub
clc
rorb
cmpsl
ret
lret
fcoms
lea
sub
gs
add
cli
les
sahf
hlt
jbe
scas
push
push
mov
insb
inc
push
stc
rcll
and
mov
movsb
nop
rolb
inc
xor
mov
xor
mulb
mov
pop
movsl
icebp
filds
jno
jl
or
mov
jmp
out
jo
jl
inc
fs
addr16
sbb
inc
pushf
or
dec
cmc
adc
push
aad
sbb
aad
addb
dec
sbb
inc
xlat
inc
mov
adc
andb
je
push
pop
add
adc
push
jg
fnstsw
sub
mov
or
gs
adc
mov
fbld
jmp
xchg
insb
mov
in
mov
arpl
mov
xor
lcall
cmpsb
dec
in
or
sti
pop
out
push
lcall
xor
shl
js
outsl
lds
lahf
aam
insb
mov
fwait
sub
decb
out
cmc
jb
ret
adc
shll
push
jbe
loopne
xchg
sbb
clc
push
aad
je
ja
push
inc
mov
xor
cld
daa
ret
and
sbb
shlb
and
jno
adc
sub
mov
xor
jns
cld
or
es
inc
loop
std
sub
outsb
jae
sbb
pop
out
out
jle
jge
cmp
stos
push
xchg
arpl
adc
into
or
bound
loope
add
xchg
or
fistps
imul
pop
xor
fnsave
sbb
and
or
mov
cmpsl
push
nopl
adc
insb
push
push
xchg
int
or
dec
add
mov
sbb
lods
and
ljmp
iret
fwait
enter
lcall
jno
in
mov
scas
xchg
mov
sbb
push
mov
jecxz
call
lahf
je
outsb
leave
push
cmp
arpl
movsl
dec
xor
jno
lock
mov
mov
mov
sbb
cmp
jge
inc
push
arpl
jbe
adcb
test
ja
loopne
cld
loope
or
aaa
int
xchg
mov
or
sub
lret
bound
jno
or
cmp
out
pop
ss
aad
sub
add
lcall
loopne
xor
jmp
jle
inc
notb
xchg
fadds
lahf
jno
mov
int3
pop
or
into
jne
and
cmp
mov
cmp
pop
test
jnp
xor
cmp
loop
inc
shr
data16
adcb
jge
xor
aaa
dec
int3
mov
dec
test
dec
or
xlat
unpckhps
push
mov
lock
or
cwtl
fidivs
loop
movsl
cmc
cmp
leave
nop
xor
out
mov
adc
insl
push
into
dec
jno
sbb
ja
dec
int
cmp
xor
jne
inc
fcomp
ljmp
mov
dec
mov
fistpll
sbb
add
jmp
insl
adc
in
test
sti
in
ds
or
pop
jne
xlat
pop
insl
imul
xchg
adc
arpl
dec
inc
lea
movl
iret
test
loope
sahf
mov
fwait
sbb
das
pop
cmp
mov
stos
push
dec
mov
fldcw
decl
inc
shl
push
or
cmp
jns
les
sbb
cmpsb
xor
lret
dec
out
add
xchg
repz
add
xchg
js
cmp
mov
ret
mov
xchg
cwtl
pop
lea
rcl
mov
or
fisttpll
dec
roll
adc
movsl
jmp
inc
imul
jp
mov
jno
insl
test
cmp
and
rcl
lret
or
jl
ss
adc
jp
sti
test
lods
mov
js
inc
or
mov
int3
pushf
xchg
pop
xchg
cwtl
arpl
jecxz
test
fcmovb
ljmp
inc
and
pop
xor
fwait
add
imul
js
sbb
fcoml
sub
cmp
cmpsl
test
add
sub
outsl
fldcw
dec
jb
das
cli
inc
jb
lods
jge
cmp
jle
add
xor
xchg
in
mov
nop
lds
jns
popf
push
cmpsb
lret
loope
in
sahf
dec
sbb
xchg
lea
xrelease
call
push
pop
movsb
xor
mov
sbb
mov
int3
loop
int
xor
fcmovnu
sub
dec
sti
jmp
and
lret
mov
gs
bound
cmc
pop
xor
flds
jo
aad
sahf
rcrl
out
xchg
in
mov
push
mov
addr16
mov
inc
ret
dec
insl
mov
and
loop
pushf
adc
mov
ret
inc
mov
fdivrl
xor
lock
inc
icebp
daa
out
cmp
add
int3
mov
mov
dec
pop
mov
jmp
cmpsb
jo
lods
jp
int
call
cmpsb
xor
inc
pop
push
mov
lea
aaa
mov
shll
cmc
aam
test
push
mov
in
pop
out
jno
mov
push
mov
jnp
adc
inc
mov
jnp
cmp
rolb
insl
adc
jmp
inc
pop
mov
int
outsb
aas
add
push
in
lock
xor
lds
xor
and
sti
popa
lcall
maxps
lods
cmpsb
lock
xchg
xor
mov
lods
pusha
in
adc
fcomps
ljmp
lret
mov
jge
push
loopne
pop
cld
frstor
rorb
jo
imul
sub
xor
or
lcall
fdivs
fwait
cmp
ret
push
es
mov
mov
mov
sbb
stos
test
aaa
mov
jl
scas
sarb
loopne
in
mov
loopne
loop
sbb
and
popf
jecxz
into
stc
inc
sub
leave
dec
and
cwtl
pushf
push
cli
sub
cli
and
stos
mov
movsl
call
dec
push
and
add
pop
mov
cmp
subl
pop
cmp
in
mov
xor
into
or
aam
sbb
adc
mov
dec
push
mov
mov
into
repz
ret
and
push
adc
jmp
addr16
addl
jns
xchg
sbb
loope,pn
mov
test
mov
xor
ret
inc
and
pop
in
pop
cld
or
xor
fiaddl
out
add
sbb
imul
cmpsb
inc
sub
insb
daa
sti
push
or
sbb
idivl
sbb
jle
ret
fisttps
pop
xorb
ret
xchg
xor
adc
aam
imull
jno
cld
fists
rcrb
mov
push
shr
fsubl
inc
and
aaa
jno
int3
xchg
sbb
jno
lea
daa
xchg
jmp
sub
adc
lcall
mov
jge
cmp
or
and
pop
cmp
outsb
shlb
sub
mov
or
add
mov
and
pop
aad
jle
pop
loope
jo
jnp
in
or
dec
mov
mov
imul
push
in
pop
enter
fwait
stos
sti
out
scas
sub
cmpb
xchg
ret
inc
mov
in
sub
push
cli
xor
rcll
jmp
add
test
pushl
mov
pop
sbb
mov
outsl
repnz
push
fucomip
push
and
arpl
mov
mov
pop
ds
push
sti
lds
fcoml
and
xchg
dec
mov
push
push
adc
cmp
push
repnz
hlt
jno
pop
inc
push
sub
mov
or
pop
jmp
out
imul
cmp
xchg
mov
scas
lret
mov
pop
fcomps
cmp
mov
aad
inc
lods
imull
sbbl
adc
test
lds
stos
jo
movsb
dec
cmpsl
pushf
cmpsb
dec
mov
in
dec
mov
jecxz
push
push
loope
cmpsb
fwait
sarl
and
push
gs
xchg
add
sbb
stc
xchg
cmp
lahf
scas
cmpb
aas
mov
les
sbb
or
cmp
inc
fcmovu
add
in
add
lahf
into
xchg
ret
repnz
jmp
repnz
ficoms
mov
xchg
notl
inc
adc
adc
frstor
inc
pop
fistps
out
rolb
xchg
pop
fwait
push
sbb
sahf
pop
rorl
ffree
lds
mov
enter
test
xchg
out
xor
add
loope
insb
mov
jg
mov
imul
call
mov
mov
popf
mov
aad
and
xchg
add
mov
out
push
mov
mov
cs
lret
jb
cli
pop
mov
xlat
dec
sub
and
dec
in
jge
xor
loop
mov
cmpsb
push
and
sbb
inc
or
andl
lock
cmpsl
ds
pop
pushf
cmp
incl
rcrb
cld
xchg
xchg
sub
jg
mov
push
outsl
fsub
je
sbb
sti
fcompl
int3
adcb
pushf
adc
movb
inc
mov
nop
mov
test
xchg
mov
cmp
mov
mov
cli
gs
pushf
dec
loope
sbb
lds
cmpsl
xor
dec
mov
clc
fists
push
push
jle
retw
outsb
inc
nop
rcrl
int
pop
aas
push
add
lea
jo
aam
dec
jp
xchg
inc
loop
add
sbb
jp
cmp
mov
xor
div
or
or
mov
jno
and
dec
stos
and
pop
mov
jbe
cmpsb
rorb
xchg
inc
movzbl
js
sub
dec
xchg
cmp
mov
xchg
jnp
iret
inc
cmp
out
mov
cwtl
leave
loop
pusha
inc
jmp
xchg
fwait
and
cmp
jmp
cwtl
mov
cmp
mov
scas
mov
call
push
mov
popa
jno
xor
cmpsl
sbb
xor
stc
int
push
aad
sti
bound
lret
sahf
repnz
cmpsb
in
mov
or
out
inc
shll
add
insl
insl
imul
sbb
add
sub
lret
lock
lret
add
mov
adc
dec
pop
pusha
outsb
mov
icebp
cmp
fstpt
cli
jecxz
dec
push
dec
out
ljmp
cmp
cltd
mov
jg
mov
add
imulb
sub
addb
sub
stc
push
jo
test
stos
pop
pop
fs
ss
sub
orb
dec
pop
sbb
nop
dec
and
and
imul
cmp
mov
xchg
jne
xor
mov
pushf
xchg
enter
xor
sti
mov
and
shr
int3
push
lea
sub
jne
scas
xor
repz
stc
fisttpll
pop
xchg
stos
sub
lods
mov
push
and
or
pop
sub
xchg
push
dec
or
imul
xchg
scas
pop
aam
lcall
arpl
fcompl
clc
sbb
xchg
jae
mov
out
or
adc
mov
fsubrs
inc
xor
lcall
in
mov
mov
aad
push
je
pop
es
test
add
xor
pop
rorb
cmp
mov
pop
add
dec
xchg
scas
mov
cld
add
or
outsl
movsb
sub
push
sbb
or
push
cld
xor
xchg
inc
cmp
mov
cltd
pop
adcb
sub
pop
arpl
cmp
lods
in
push
sarl
mov
sub
pop
roll
pop
jg
les
jbe
les
outsl
mov
inc
adc
mov
push
loope
add
test
push
adc
xor
negl
insl
cld
pop
pop
jle
test
sub
push
xchg
pop
jmp
mov
loope
jno
xor
adc
cld
lahf
mov
jns
hlt
in
int
es
bound
in
inc
out
loope
in
lods
icebp
sahf
je
adc
adc
movsl
xchg
loop
lock
ds
push
fidivl
out
cld
ror
clc
add
mov
ret
dec
arpl
out
ret
mov
nop
in
stos
cld
rcrb
cmp
push
jbe
jg
inc
addb
ds
xchg
xchg
push
andb
sub
cmp
or
or
shl
mov
mov
data16
sbb
fwait
push
pop
add
mov
adc
stos
mov
jg
std
aas
cmp
stos
mov
cmp
push
add
dec
sahf
jno
xchg
pop
mov
adc
addr16
in
xchg
xchg
and
mov
std
int
jns
aas
xchg
cmp
xor
pop
ret
mov
and
clc
mov
cmpsl
and
lret
cmp
dec
nop
int3
mov
cmc
loopne
lds
adc
sub
cmpb
inc
movsl
aam
dec
cmpsl
hlt
sub
push
or
stos
ljmp
sub
mov
and
pop
fisttpll
mov
gs
jg
mov
std
xorb
cmp
iret
insb
jae
rcll
xchg
xor
mov
inc
and
sub
add
mov
dec
mov
inc
xor
jo
add
jle
lods
xchg
mov
push
dec
test
adc
mov
movsb
mov
mov
jle
and
push
test
pop
adc
std
jo
enter
dec
enter
pop
test
iret
or
adc
or
fwait
jns
repnz
sub
mov
out
sbb
mov
and
push
xchg
cmp
mov
inc
js
dec
repz
test
xor
fsubrl
sahf
jl
out
and
aaa
add
dec
xor
cmpsb
aaa
andb
loop
test
icebp
mov
xchg
fiaddl
nop
popf
lock
fwait
cmp
mov
push
add
mov
in
add
dec
and
xlat
aad
ds
jmp
cwtl
sbb
sbb
in
dec
loop
dec
xor
jbe
push
mov
inc
xchg
lret
jp
add
push
xchg
cmc
les
xor
inc
and
in
sbbb
inc
pop
cmp
mov
stos
xor
mov
int3
in
in
mov
pop
test
popa
out
jbe
inc
ja
mov
cmp
xchg
lds
cwtl
pushf
mov
imul
sub
xchg
cli
jne
arpl
int
sub
mov
movsb
cs
in
out
int
mov
das
mov
mov
dec
cmp
ja
xor
xchg
xchg
popa
sbb
mov
scas
mov
inc
cli
push
ret
lret
fdivs
or
push
mov
push
mov
fsub
popf
cmp
push
push
pop
jmp
ja
fcmove
imul
mov
mov
sub
lods
inc
scas
outsb
mov
push
imul
fs
add
imul
cmp
xor
mov
js
inc
outsb
push
dec
in
add
mov
jno
and
and
mov
test
push
out
bound
popa
mov
pop
or
imul
data16
jb
inc
in
rcll
adc
insl
dec
or
adc
addr16
nop
movsb
mov
push
mov
jmp
cmpsl
push
test
adc
cmpsw
cmpb
fisttpl
jb
inc
jne
and
stos
jl
dec
cmp
into
xchg
jo
pushf
mov
jo
xchg
sub
add
xor
add
add
xchg
mov
ja
lret
cs
stos
push
mov
mov
int3
cmp
inc
mov
mov
jl
int3
outsb
adc
xor
loopne
sbb
popa
stos
lret
xor
lcall
mov
test
fisttpl
test
cwtl
mov
arpl
fstpl
lds
push
cmpsb
jbe
pop
notl
scas
cmp
in
push
shr
stc
inc
cmpsl
xchg
rcrb
mov
cli
sub
leave
mov
popa
add
dec
inc
xor
ds
inc
call
outsl
sbb
sti
sub
ds
sub
pop
xchg
out
divl
jno,pn
push
aaa
xorl
aaa
out
push
adc
jnp
sarb
inc
xchg
pop
mov
or
ds
mov
mov
stos
std
and
outsl
ljmp
mov
sti
and
xchg
mov
xchg
dec
pusha
xlat
inc
sbb
dec
arpl
mov
dec
mov
mov
rcrl
inc
fwait
insl
sub
mov
sbb
cltd
leave
jae
dec
jp
pushf
adc
sti
movsl
sub
sbb
movsb
aas
out
jae
push
stc
adc
lahf
fcmovb
imul
push
sbb
xlat
cmpsb
int
add
inc
icebp
inc
jg
sub
or
cmpsb
sarb
mov
outsb
pop
data16
pop
sbb
push
jp
dec
jge
mov
nop
push
cs
mov
lds
xor
je
or
js
roll
pusha
cmpsl
jne
dec
js
lcall
xor
and
mov
icebp
jne
loope
out
mov
pop
addr16
imul
pop
pop
iret
int
pop
lcall
add
mov
rorl
jo
movsl
int3
in
aaa
lods
gs
sarb
push
stos
lret
adc
cld
xor
and
insb
cmp
int3
test
jp
incl
sbb
ret
mov
jae
cmp
pop
adc
arpl
out
xchg
and
push
ds
int3
and
sub
push
cmpsb
ss
mov
inc
js
ljmp
movsb
cwtl
sbb
dec
shll
ds
out
mov
ss
out
pop
mov
movb
popf
sub
imul
dec
movsl
hlt
fidivs
mov
sub
shlb
mov
sarl
mov
mov
xor
pusha
mov
fbld
push
mov
fisttpll
inc
sub
add
pop
mov
addr16
mov
dec
das
ds
and
iret
sbb
dec
push
bound
roll
movsl
mov
jg
xchg
xchg
adc
xlat
mov
aaa
xor
ret
stos
jmp
mov
inc
lods
ljmp
ss
fnstcw
outsb
test
aad
pusha
xlat
dec
aaa
dec
daa
outsl
cmp
cs
out
das
data16
mov
mov
jbe
test
in
add
sbb
cmp
std
mov
fldenv
cmp
xor
xchg
mov
and
jb
inc
xor
daa
push
imul
data16
inc
pushf
push
les
fcoms
pop
jge
fs
push
inc
pop
xchg
or
repnz
and
pop
out
es
push
aaa
rdtsc
lock
outsl
cmp
addr16
stos
into
adc
inc
adcl
mov
or
add
cmc
adc
push
cli
shl
push
rorl
subb
cmpsb
loope
xor
pop
sub
push
out
dec
xchg
mov
mov
mov
cmp
out
ficoms
stc
or
mov
lret
scas
jl
push
mov
push
insb
dec
push
arpl
dec
xchg
pop
movsl
mov
jnp
lea
pop
mov
adc
pop
inc
inc
add
lahf
push
mov
sbb
lods
outsl
shll
lret
or
jge
or
popa
pop
mov
movsb
push
jb
jb
pop
inc
lods
dec
push
and
mov
roll
std
gs
rclb
sbb
dec
aaa
cmp
imul
mov
sbb
push
sbb
push
out
insb
cmp
or
xor
imull
in
test
leave
push
pop
ret
sbb
clc
sub
mov
dec
not
add
jp
add
or
pusha
mov
and
adc
jb
fcompl
fiadds
or
stc
xchg
xchg
stc
es
outsl
ss
je
ss
lock
mov
and
xor
cs
aas
dec
jmp
adc
or
dec
jmp
inc
lock
out
jg
faddp
inc
fistl
mov
push
mov
inc
mov
xchg
and
jne
mov
adc
dec
mov
jo
xchg
mov
sbb
mov
mov
jp
lcall
mov
inc
cmp
scas
xchg
seta
cmc
popf
fistps
push
and
icebp
movsb
and
pop
inc
jmp
add
repz
xchg
fistps
out
xlat
cmp
frstor
inc
push
scas
cltd
movsl
mov
aaa
xor
je
lcall
mov
lds
jne
data16
push
cltd
jp
push
cwtl
aaa
mov
js
pop
push
push
pop
and
pop
sub
cli
xchg
inc
sub
pop
push
inc
addr16
loopne
les
push
mov
out
std
ror
xchg
sbb
adc
fdivrl
mov
inc
and
mov
xchg
pushf
clc
outsb
out
sbb
add
push
dec
lahf
out
in
mov
clc
mov
sub
and
mov
into
adc
cmp
jb
das
inc
adc
ficoml
mov
jle
imul
mov
sbb
les
sahf
movsl
mov
test
dec
jb
clc
call
mov
fmul
in
mov
jae
int3
jbe
dec
pop
aam
or
mov
insl
jo
add
xchg
sbb
cltd
repz
fs
jp
pop
in
jno
es
xor
add
lds
or
mov
inc
and
and
mov
insb
pop
fldl
les
xchg
pop
lcall
popa
xchg
sarl
daa
int
dec
aam
nop
sbb
dec
lods
fmuls
imul
inc
push
loope
mov
rep
ret
mov
into
mov
adcl
unpckhps
std
xor
pop
mov
int
xor
fisubrs
popf
mov
sahf
pushf
andb
adc
dec
gs
mov
xchg
hlt
repnz
scas
cwtl
in
add
xor
cmp
and
insl
xchg
nop
sbb
push
fdivl
xchg
dec
out
adc
inc
pusha
xchg
inc
push
sub
mov
mov
jecxz
adc
bound
add
inc
dec
mov
lcall
sub
out
cmp
ret
lods
scas
jne
mov
rolb
ljmp
call
xchg
dec
cli
pop
jae
loopne
push
pop
and
iret
or
xchg
or
loop
mov
enter
add
icebp
repnz
int
jbe
fcos
loopne
imul
incb
movsl
xchg
test
ficoms
cmpsb
xor
lds
mov
mov
or
aaa
jg
insb
sbb
sbb
call
js
aas
and
mov
cmpsb
mov
cld
jbe
incb
movsb
lods
jae
in
sub
and
out
icebp
fcoms
push
cmp
rolb
hlt
inc
out
mov
sbb
dec
lret
es
jnp
xchg
jae
push
add
out
fwait
dec
push
call
mov
adc
mov
jmp
jae
icebp
jnp
adc
sbbl
subb
adc
xchg
pop
pop
sbb
loop
mov
iret
int
inc
pop
push
xchg
jb
clc
ljmp
aam
or
arpl
lods
mov
xor
jo
enter
cmp
ror
dec
cmc
and
jp
idiv
sti
add
lret
or
jle,pn
mov
lds
mov
fsubl
jmp
or
jb
xchg
jl
daa
mov
test
incb
fwait
add
jbe
pop
xor
dec
dec
jbe
imul
inc
mov
cmp
loop
inc
inc
fldl
or
pop
movsb
cmp
scas
add
cmp
cmp
popf
mov
ja
mov
and
loope
mov
sbb
scas
mov
push
sub
bound
xlat
loopne
addr16
jg
adc
sub
sti
sub
iret
fmuls
push
push
lods
dec
adc
mov
arpl
xchg
mov
mov
pop
ja
fwait
sub
scas
xor
jmp
data16
lret
xor
shrb
or
inc
mov
out
mov
mov
inc
pop
cmp
stc
hlt
inc
or
jno
repz
mov
or
mov
ret
jb
mov
pushf
rcr
jne
dec
repnz
or
loopne
push
mov
in
inc
cltd
nop
imul
mov
pusha
dec
aam
add
cwtl
pusha
lods
mov
sbb
std
mov
cmp
jno
pop
lea
fadds
mov
mov
ds
ja
cmp
cld
pop
jg
and
rorl
clts
pop
out
xor
sahf
inc
add
stos
sbb
and
out
jno
les
mov
mov
and
jg
sti
neg
add
aad
sub
rolb
stos
xchg
fstl
dec
dec
rorl
or
clc
fwait
jnp
lods
mov
mov
js
sbb
push
pop
dec
arpl
hlt
sbb
cli
and
sub
mov
shrb
jne
cwtl
test
mov
and
mov
icebp
hlt
push
outsl
ljmp
sti
sub
rcrl
lret
mov
xchg
insb
mov
add
repz
mov
ss
test
ss
ss
inc
test
iret
ret
or
xchg
lods
insl
addr16
fistl
mov
and
push
sbb
sub
push
sbb
xor
subl
jl
and
notl
jmp
mov
mov
xor
or
fxch
jmp
jno
movl
jns
add
sub
push
jle
cmp
cmp
ljmp
mov
mov
out
mov
enter
scas
repnz
sub
mov
aad
pop
add
jo
aam
jae
fimuls
std
call
inc
jbe
nop
mov
xor
mov
addr16
mul
dec
pop
insb
mov
and
scas
lcall
iret
cmp
sti
clc
inc
add
jl
inc
cltd
shrl
xor
mov
mov
int3
sbb
enter
add
xchg
stos
sbb
adc
dec
xlat
ljmp
shrw
lret
push
cmc
sbb
mov
sub
cwtl
sub
cmp
sub
xchg
loope
fstl
inc
ss
jge
cwtl
stos
clc
dec
popa
xchg
sub
sar
push
outsb
pop
mov
rorb
mov
dec
sbbl
add
test
aam
xchg
mov
mov
inc
mov
sbb
dec
sti
mov
mov
stos
cmp
nop
popf
loope
lods
and
ret
dec
push
das
mov
stc
pushf
gs
bound
jbe
add
dec
pop
push
pushf
faddp
cli
pop
sbb
mov
jp
pop
loopne
into
cli
dec
lret
pop
inc
ljmp
lods
test
jae
mov
adc
dec
jecxz
movsb
mov
and
aad
les
test
ficomps
pop
sub
cltd
cs
aam
mov
pushf
loop
inc
jne
or
inc
mov
xchg
movsb
lret
clc
inc
jne
push
add
push
lret
pusha
lret
cmp
andl
push
mov
sbb
jle
jle
fbld
mov
les
add
movl
enter
cli
and
lods
rcr
jl
stos
and
xchg
inc
cwtl
rcll
scas
cltd
mov
decb
push
fisubl
jns
xlat
xor
daa
scas
push
shll
jo
mov
xor
jb
sahf
and
jg
xor
gs
xlat
push
jle
fbld
sub
push
hlt
xchg
jbe
or
sub
fldcw
cmp
pop
xchg
inc
lods
xor
mov
repz
dec
lods
daa
rcrl
adc
gs
cmpsl
rolb
test
pop
movsl
pop
and
ja
sbb
dec
fnstsw
jl
mov
jae
mov
xor
mov
jo
pop
pop
or
nop
push
rolb
mov
and
mov
xor
bound
pop
hlt
popf
inc
addr16
xor
in
pop
xlat
insb
xor
sbb
ds
popa
cld
sub
jns
fwait
loopne
dec
pop
add
ret
cmc
add
jbe
lea
sub
mov
inc
clc
loope
fldenv
mov
jp
ror
add
push
das
int3
cmpsl
xchg
pop
cmpsl
lea
dec
dec
popf
pushf
in
int3
ljmp
push
pop
push
lods
cmc
mov
pop
mov
test
and
pop
mov
xchg
adc
loope
inc
push
lea
std
mov
and
ret
testb
pop
mov
sbbl
mov
and
jo
sub
mov
mov
push
cmp
ffreep
pop
xor
push
adc
push
jno
loop
ds
loop
loopne
inc
pop
add
les
jge
jno
inc
imul
mov
push
lret
xchg
movsb
aad
xor
push
test
dec
xor
mov
iret
pop
outsb
pop
aas
sbb
dec
mov
cmc
mov
rclb
sbb
mov
xchg
lds
hlt
mov
dec
push
mov
loopne
fmul
cmp
pop
inc
pusha
push
mov
jp
loopne
jge
ss
mov
sahf
xchg
test
add
cltd
push
cli
test
call
dec
cmp
xor
push
in
mov
adc
stos
cs
xor
mov
mov
inc
or
jmp
arpl
jb
in
out
push
dec
mov
mov
aad
sbb
cli
cs
insb
imul
pop
dec
xor
int
push
mov
cld
leave
cs
push
cmp
lahf
or
rorb
leave
in
outsl
push
div
adcb
push
nop
into
xchg
pop
pusha
add
scas
mov
xchg
ss
mov
pop
icebp
fimull
movsb
adc
into
leave
leave
inc
cmp
jo
sub
add
pop
push
mov
mov
add
enter
jae
jo
and
stc
inc
lcall
sar
into
add
pop
xchg
ficoml
jbe
and
sarb
aam
cmp
idivb
lea
imul
jg
mov
es
pop
insb
test
lods
loop
pop
lea
leave
cltd
pop
aas
lea
rcrb
test
xchg
mov
pop
dec
pusha
out
adc
cmp
pop
and
xor
push
ds
mov
int3
mov
mov
pop
mov
add
nop
cmp
je
mov
loopne
add
xor
aas
mov
aad
and
es
mov
outsl
or
popa
int
fdivp
lret
mov
and
mov
adc
aam
lods
jecxz
in
push
jnp
cwtl
sub
cs
inc
and
push
and
mov
mov
mov
mov
cmp
icebp
js
jge
js
mov
cmpl
push
pop
add
mov
bnd
and
lret
xor
daa
inc
cmpsb
enter
mov
cmp
out
icebp
imul
outsl
xor
and
mov
jp
enter
dec
jo
in
ret
xchg
adc
shll
stos
stos
into
fldcw
push
imul
mov
inc
cmp
je
inc
lcall
pop
sub
or
mov
push
xor
mov
addb
int3
out
aam
sbb
je
jo
and
xor
dec
inc
inc
inc
or
hlt
pop
jmp
popl
es
mov
jae
and
sti
daa
pop
jle
mov
xor
xchg
ror
jo
lods
and
push
adc
push
divl
lea
jp
test
inc
fs
fldenv
xchg
pop
lcall
dec
and
je
mov
xchg
push
xchg
inc
insl
dec
or
loop
add
xchg
mov
test
pop
adc
mov
mov
aam
jecxz
mov
lds
jge
pop
sub
ss
jp
push
stos
rcrb
jnp
mov
loopne
cmp
xchg
and
popl
ss
fwait
das
inc
cmp
add
push
jns
pop
mov
in
sti
seto
dec
jg
mov
push
sbb
lock
pop
shll
and
xor
inc
dec
inc
gs
fisttpll
xchg
jge
push
adc
xchg
jb
cmc
or
pop
in
std
inc
imull
adc
mov
jno
daa
enter
jbe
cmp
imul
lcall
dec
push
push
mov
fldenv
push
adc
fcoms
sbbl
cmp
jge
jo
imul
test
aas
out
mov
and
call
xor
mov
cli
jns
inc
sahf
leave
or
jle
push
sbb
pop
js
roll
dec
aas
out
pop
icebp
sahf
or
inc
shl
out
push
loopne
inc
mov
pop
sub
mov
xor
inc
add
sarl
push
mov
mov
jg
loopne
inc
push
mul
jp
fcomps
sub
sbb
inc
mov
ret
cmp
in
push
xor
inc
mov
fwait
js
stc
sub
bound
xchg
and
cmp
mov
add
mov
mov
aad
imul
add
pop
pop
mov
mov
sbb
psubsb
cli
ror
xchg
xchg
cmpb
or
sysret
fnstsw
shl
push
sbb
cmp
jmp
xchg
dec
mov
xor
pop
inc
sbb
insb
and
loop
sarb
orb
xchg
cmpb
dec
push
push
repz
iret
ror
mov
orl
cmp
inc
rolb
cmp
xchg
mov
add
pushf
fistpll
call
push
fmuls
jnp
jg
dec
pop
adc
mov
dec
mov
insl
add
out
dec
loop
xchg
in
cmp
sub
jno
pop
jno
jno
insb
mov
outsb
hlt
into
push
cmp
mov
out
pop
mov
mov
sbb
or
xchg
aas
pop
stos
mov
add
decl
push
mov
filds
adc
iret
pop
push
je
pop
dec
test
test
jge
mov
movsb
rclb
dec
mov
and
inc
stc
mov
stos
pop
push
xchg
scas
or
dec
dec
xor
gs
cmp
out
test
inc
sub
pop
into
lahf
dec
dec
sar
sahf
lret
lods
add
jmp
or
sbb
jp
jle
pop
fmul
and
mov
decb
push
push
pop
push
fwait
cltd
mov
lret
xchg
call
lret
popf
aas
out
cmp
add
popf
into
into
out
and
lds
xchg
mov
jge
lea
push
data16
outsl
cmpsb
mov
mov
enter
imul
inc
or
lret
aad
cmp
stos
xorb
adc
inc
daa
or
repnz
inc
mov
subl
cmp
mov
or
std
int3
idivb
adc
and
dec
lods
pop
lahf
ss
mov
add
dec
stc
pop
shrl
adc
jnp
repz
or
sbb
sahf
lret
or
and
fbstp
mov
loop
je
xchg
cmp
xor
enter
pop
hlt
adc
jne
push
ret
maxps
add
std
inc
mov
bound
or
aad
jmp
add
pop
xor
js
pop
iret
das
fs
sub
pop
inc
mov
pop
js
aam
xchg
xchg
sbb
pop
mov
rcrl
push
add
pop
push
cli
mov
cmp
dec
fwait
xor
inc
jns
and
in
or
addr16
shlb
jmp
das
data16
popf
mov
jp
mov
aas
jnp
rcrl
jmp
mov
mov
inc
cmp
push
cmpsl
pop
push
shll
dec
cmp
jmp
sbb
and
stos
mov
add
fisubrs
xchg
fisubl
outsb
push
daa
addb
add
pop
int3
out
les
fistpl
fcompl
daa
mov
daa
sbb
inc
mov
fld1
mov
mov
or
push
out
xorl
js
pop
inc
mov
pop
repnz
divl
jl
pop
jmp
daa
jno
stos
out
bound
jae
repnz
mov
or
mov
fnstsw
test
rcrl
sub
test
jo
push
dec
iret
in
and
xchg
xor
or
xor
xchg
cmp
imul
cmp
in
imul
xor
mov
ficoml
or
push
jns
fucom
mov
adc
jae
addr16
mov
dec
or
ret
mov
cld
jle
cmp
std
pop
xor
xchg
popa
pop
pop
out
mov
jmp
or
shr
mov
lock
and
pop
xchg
adc
movsl
cmpl
repnz
repnz
xor
imul
popa
pop
xor
push
cmpb
cmp
mov
cmpsb
pop
fs
cmpsb
push
pusha
insb
xchg
pop
stos
push
lock
sbb
loopne
push
mov
mov
ljmp
stos
cwtl
fnsave
cs
adc
mov
cmpsb
into
dec
loop
repnz
and
mov
lods
jp
daa
add
out
in
pop
rol
pop
mov
mov
pshufw
mov
mov
pop
pop
insb
cmp
dec
pop
mov
adc
insb
and
push
cmp
push
data16
jg
sbb
daa
mov
imul
jae
adc
push
lea
fiadds
leave
shlb
adc
shlb
dec
fbstp
mov
daa
push
sub
xchg
xlat
xchg
cmp
into
xorb
cmp
sbb
push
or
pusha
cs
mov
inc
and
rorl
bound
ret
push
sahf
rcl
push
aam
and
loope
pop
icebp
jb
sysexit
xchg
lock
int
push
loope
mov
jl
pop
push
mov
dec
push
add
jno
mov
fadds
cltd
inc
mov
decb
inc
mov
mov
imul
mov
push
jns
cs
xchg
jae
out
mov
lahf
xor
xchg
mov
or
pop
aam
xchg
js
rol
dec
push
fldenv
jl
subl
xchg
pop
jmp
mov
lret
pusha
insb
outsb
inc
enter
push
add
adcl
pop
stos
shll
mov
dec
popf
inc
mov
stos
out
push
sbb
add
inc
and
out
push
out
jg
pop
icebp
gs
xor
hlt
adc
outsb
xor
pop
mov
hlt
orl
ljmp
dec
arpl
mov
sbb
inc
dec
mov
jne
push
inc
ret
jb
or
lock
mov
outsb
sbb
lods
stos
imul
outsb
pop
cmp
mov
jo
sbb
shrb
or
mov
cbtw
ja
fisubs
mov
xor
outsl
sub
enter
or
cltd
stc
and
xchg
pop
bound
inc
out
dec
rclb
mov
lods
iret
jbe
push
mov
mov
xchg
scas
mov
jmp
out
mov
stc
fisubs
scas
xor
jmp
ds
xchg
jmp
cmp
mov
orb
fbstp
test
dec
cmp
inc
sahf
andl
mov
test
cmpsb
lods
and
jno
shrl
rorb
rorl
or
inc
inc
aaa
div
addr16
adc
jnp
lock
test
lahf
jmp
push
mov
inc
iret
mov
ljmp
in
push
imul
nop
mov
imul
dec
in
mov
jbe
sub
add
cmpsb
jo
and
aaa
ja
test
dec
or
insb
mov
dec
loopne
sbb
into
dec
fldcw
das
sbb
jl
scas
add
insl
ljmp
lret
jmp
adc
test
shr
and
clc
jge
cmp
loop
faddl
fistl
mov
scas
xchg
sub
addr16
mov
ficomps
loope
sub
inc
lock
dec
int
push
add
pop
pushf
push
dec
out
cmp
xor
xor
or
mov
in
sbb
ds
into
int
mov
test
nop
out
call
fmul
ss
push
pop
pusha
pmulhuw
and
fidivrl
bound
inc
sbb
movsl
lea
jecxz
lea
xor
movsb
cmp
adc
push
test
inc
out
adc
jno
dec
mov
xorl
inc
lret
xor
sub
cmp
out
push
pop
inc
pop
sbb
insl
gs
lods
add
jb
dec
nop
gs
icebp
mov
mov
push
aam
xchg
mov
jae
pop
ss
inc
pop
jmp
popa
dec
or
mov
js
xor
ja
push
sub
cmpsb
add
adc
push
nop
fsubrl
jnp
int3
push
dec
jb
mov
clc
orb
add
std
das
iret
mov
in
and
cld
mov
orb
test
mov
push
adc
mov
sbbb
mov
sbb
mov
test
outsl
repnz
jne
sub
jae
push
mov
pop
adc
xchg
sbb
sub
mov
xchg
fdivs
cwtl
pop
sbb
sub
dec
mov
jle
xchg
or
mov
roll
icebp
movl
pop
mov
and
dec
xchg
mov
mov
add
loop
clc
inc
andb
imul
add
mov
cmp
xchg
adc
mov
lcall
les
jge
dec
mov
mov
sub
inc
xchg
hlt
mov
lcall
repz
xchg
push
shll
mov
aas
jno
add
ja
scas
mov
jnp
push
sbbl
add
adc
xchg
or
cld
sar
jp
test
cmpsl
jae
movsb
cmp
push
mov
jg
xchg
mov
les
ret
mov
lods
push
jmp
push
jp
xchg
iret
lock
arpl
out
pop
lock
nop
fimull
movsb
xor
xor
pop
jbe
jns
arpl
mov
xlat
push
push
jae
rorb
sbb
lods
pop
call
cld
aam
test
das
mov
pop
inc
jb
fs
idiv
out
repz
pop
test
cltd
dec
cmc
rolb
sbb
incl
into
lods
xlat
ds
outsb
add
mov
iret
pop
sub
incl
sbb
fsub
mov
fnsave
pop
mov
pop
out
scas
addr16
mov
testl
fstps
std
aad
repnz
inc
inc
and
dec
cmp
roll
mov
add
lea
lret
test
pop
cltd
push
mov
push
lods
xor
call
daa
push
and
pop
inc
dec
pop
aad
mov
and
js
jns
sbb
pop
sbb
mov
fwait
in
or
jecxz
sub
push
jle
add
lcall
pop
mov
and
pop
xrelease
lods
or
outsl
fsubr
aad
xor
scas
push
movsl
out
mov
add
adc
jne
sahf
mov
repz
or
les
xor
std
insl
xchg
rcl
rorb
add
jle
mov
popa
es
and
cmp
test
pop
lcall
shll
shr
out
cmp
jno
inc
fdivrl
insl
fisubl
insb
test
mov
jge
out
ja
jbe
js
jns
inc
scas
out
push
jmp
and
mov
cld
sub
into
sub
arpl
test
call
inc
sbb
ljmp
push
aaa
pop
fcomps
lock
mov
sbb
std
inc
aas
stc
jne
out
xchg
scas
push
push
stos
mov
xchg
lea
mov
mov
cmpsb
jg
and
lds
ljmp
inc
lcall
add
popf
sbb
sbb
push
insb
in
test
pop
cmp
fidivs
outsb
push
push
mov
push
adc
adcb
sarl
stos
inc
push
iret
rcr
imul
and
jo
scas
pop
arpl
push
sbb
sub
lret
into
jmp
pop
cld
loopne
cmp
vzeroall
shll
cmpsl
push
push
mov
pop
push
mov
mov
adc
sub
ja
mov
les
pop
fs
dec
mov
mov
xor
enter
cltd
pop
push
pop
mov
xor
aaa
mov
sbb
mov
test
fsts
mov
add
mov
std
jmp
sub
ss
mov
add
pop
mov
test
in
dec
ds
fildl
pop
fstpl
cmp
push
mov
sbb
pushf
push
jno
lea
push
in
and
sbb
push
in
in
or
mov
push
dec
jno,pn
fcoms
mov
fwait
cmp
jnp
sar
movsb
xchg
add
cmp
push
mov
shll
cmc
add
cli
adc
mov
ja
sub
sbb
sub
xor
sbb
adcb
cld
pushf
jno
sbb
add
scas
mov
push
dec
in
insl
mov
jg
imul
xchg
push
xor
idivl
out
and
lods
mov
cmp
xlat
adc
add
insb
add
jae
add
sub
iret
xchg
jle
inc
cmp
fstpt
xor
or
xchg
imul
jne
cmpsb
push
add
and
pop
pop
stos
sbb
lret
adc
and
or
adc
cmp
xchg
cmp
rclb
xor
cmpsl
sbb
movsl
push
add
sub
adc
lods
ljmp
ja
fistpl
stos
xor
mov
and
push
mov
xorl
mov
mov
int
mov
in
xchg
xchg
or
push
ret
mov
fsubs
loop
xchg
sub
int
imulb
xchg
pop
xchg
cmp
push
push
outsl
rorb
mov
add
add
aas
jo
push
inc
dec
mov
sbb
mov
cs
mov
fiaddl
and
pop
pusha
xchg
sahf
popf
jle
cmpsl
shrb
xorl
lahf
fildl
test
lods
add
es
xor
pop
jne
adc
fmull
mov
lock
subl
inc
xlat
push
xchg
out
push
sbb
fistps
or
leave
jne
fnstsw
mov
jg
jmp
adc
sub
lahf
mov
xchg
jnp
imul
imul
push
sub
orb
adc
jae
int3
lea
push
inc
pop
push
jg
sub
xchg
leave
pop
sub
mov
movsb
sti
dec
outsl
sub
aam
cs
out
dec
cs
and
pop
call
mov
lret
cmp
and
inc
inc
mov
xchg
and
mov
fdivrp
dec
fs
inc
fistl
sub
iret
jmp
test
js
stc
add
addb
lcall
cli
dec
xor
pop
xor
jp
pop
cmp
push
daa
mov
movb
iret
dec
sbbl
mov
push
es
mov
in
pop
or
pushf
pop
les
cmp
push
pop
rcl
or
les
push
in
cmp
test
jno
xchg
pop
outsl
movsl
xchg
cmc
into
ss
ret
ficomps
mul
mov
js
andb
aam
scas
aas
ret
fadd
pop
int3
dec
mov
mov
outsl
out
or
pop
loopne
xor
push
jl
xor
inc
lret
xor
iret
xlat
outsl
nop
les
fcompl
mov
jge
mov
or
shrb
int
adc
loop
inc
xor
mov
orb
sub
in
insl
add
hlt
ds
fcoml
pop
cmp
dec
lret
jl
xorl
xorl
aad
movsl
test
cmpsb
out
push
fildll
in
jne
in
fwait
mov
add
cmp
add
mov
negb
out
outsb
jnp
into
mov
shrb
jo
std
dec
mov
and
stc
sub
xchg
sbb
mov
sarl
inc
push
stos
pop
adc
bound
fwait
dec
cli
fbstp
push
adc
sbb
xchg
rcrb
add
xchg
cmp
lahf
push
arpl
and
stc
dec
inc
mov
leave
pop
xchg
insl
adc
xor
push
hlt
mov
lret
sarb
sahf
lods
cwtl
popa
out
jecxz
mov
movsb
sahf
sbb
nop
ret
jle
sbb
ss
in
xchg
test
xlat
test
jge
and
xchg
sub
dec
outsl
add
xchg
insb
sbb
or
fiadds
ffree
scas
mov
scas
dec
and
sub
popf
mov
jo
cmp
mov
int
add
xor
lock
inc
or
dec
sub
fs
adc
fsubrp
or
aam
mov
cmp
arpl
mov
xchg
jbe
scas
pop
out
aam
jp
and
mov
push
inc
hlt
imul
repz
cli
xlat
cwtl
adc
xor
mov
push
jl
push
xor
aad
inc
outsl
sbb
jne
inc
inc
mov
stc
add
shr
xor
lods
decb
jmp
mov
lock
mov
stc
dec
sahf
jle
fimull
popf
adc
jb
lret
hlt
enter
or
adc
into
dec
movsl
pop
pop
mov
scas
dec
lret
inc
or
shlb
xchg
adc
adc
add
cmp
mov
scas
imul
loop
ret
push
sub
pushf
mov
cmp
les
std
jbe
adc
sub
push
je
mov
test
pop
imul
adc
cmp
mov
dec
gs
fsts
push
add
and
xchg
xor
mov
cmp
jne
mov
insb
cmp
xor
xchg
pushf
mov
mov
das
rcr
ljmp
adc
inc
push
enter
cmp
pop
pop
daa
cli
cmp
jae
push
subl
cmc
out
repz
lock
push
mov
push
sub
add
int
push
jne
sub
int3
jp
loop
jbe
icebp
loope
sub
insb
gs
jmp
insl
jmp
or
outsl
xor
xchg
nop
cmpsb
ss
add
jbe
or
ret
jecxz
out
stos
aam
mov
jg
dec
mov
rcrb
cmpsb
xor
adc
cmp
inc
mov
enter
dec
jb
dec
xor
aaa
xor
jbe
ret
xor
out
jge
rclb
pop
jns
mov
bound
mov
es
mov
push
pop
mov
add
sub
fdivrl
stos
rclb
fsubrp
or
cmp
icebp
mov
inc
and
add
add
jl
mov
fistpl
push
jmp
cltd
xchg
into
push
push
cmp
ret
inc
or
or
xchg
daa
rcrb
ja
cmc
sub
sub
sub
xor
jle
inc
xchg
mov
stos
js
sub
out
adc
sbb
push
lods
clc
loop
jmp
aam
dec
shlb
xor
add
add
ret
inc
dec
inc
mov
jp
push
push
jae
add
add
mov
incl
pop
jp
mov
dec
sbb
gs
fs
ss
xchg
mov
sarb
inc
jne
fmull
insb
stc
test
test
sub
dec
inc
and
ret
or
xor
orl
aaa
xlat
roll
mov
jmp
movsl
inc
sbb
popa
jne
inc
movsl
or
and
ret
mov
mov
data16
push
dec
push
test
lcall
adc
push
mov
pop
outsl
or
mov
std
and
pushf
lret
inc
push
xor
inc
ljmp
rcrl
fidivl
jecxz
lods
cmp
jb
es
sbb
mov
cmp
dec
in
imul
sub
stos
cmp
dec
jl
pop
push
aad
rcll
or
fistps
subb
push
imul
bound
mov
sarb
loop
mov
xor
pop
xchg
inc
mov
jmp
mov
lea
je
cwtl
push
add
shlb
mov
xchg
repnz
stc
lock
cmp
nop
outsb
clc
ficoml
lcall
divl
imul
cmp
pusha
lea
jg
xlat
mov
je
adc
enter
sbb
cli
insl
jnp
xchg
dec
bound
pop
mov
mov
push
pop
push
jne
rorb
push
pop
push
dec
mov
adc
aam
xchg
cltd
fs
imul
pop
mov
push
dec
push
mov
or
fdiv
lcall
push
adc
pop
push
lock
sub
and
or
pop
mov
mov
pop
sbb
insl
fcoml
pop
sbb
ret
test
mov
fstps
sub
mov
lods
xchg
mov
pop
push
and
jno
fs
gs
fbld
mov
ljmp
lret
mov
push
and
dec
push
fwait
mov
or
cmpsl
icebp
mov
mov
sbb
rorb
imul
movsb
test
dec
mov
xor
call
jl
or
xchg
mov
adc
rolb
pop
mul
xchg
jo
adc
loop
cwtl
cmp
aas
icebp
dec
mov
sbb
test
fsubrl
cmp
mov
divb
sub
ss
mov
out
xchg
xlat
sub
test
std
add
or
fdivl
and
cwtl
in
outsl
shr
add
sbb
sub
inc
mov
insb
mov
lahf
cmp
into
je,pt
adcl
mov
pop
adc
jecxz
and
or
pushf
ljmp
out
lcall
inc
mov
ljmp
cmp
push
out
pop
in
idivb
jg
mov
fldcw
in
sbb
shll
out
std
or
pop
cmc
mov
rcrb
dec
sub
inc
adcb
ljmp
adc
push
sbb
cli
mov
fsubrs
xor
and
cli
push
adc
es
data16
xchg
push
imul
push
and
pop
lock
push
cltd
cli
mov
repz
daa
jle
je
xor
inc
pop
addr16
in
dec
adc
shlb
cmp
mov
pusha
inc
xor
mov
pop
push
adcb
push
ds
mov
out
adc
lock
dec
jle
iret
neg
mov
call
jnp
jo
repnz
push
cs
mov
or
push
movsb
add
adc
xchg
or
cmp
js
mov
mov
sbb
mov
insl
clc
add
push
or
stos
pop
fisubrs
imul
jno
sbb
and
std
ret
lods
dec
push
jo
pop
movsl
out
cmp
push
sahf
push
lods
in
pop
sub
jmp
add
daa
sub
fwait
sar
push
xchg
sbb
bound
push
mov
out
push
pop
xchg
sub
mov
mov
xor
les
pop
mov
inc
dec
or
push
mov
cmp
les
out
and
jg
or
repnz
fisttps
fsubs
pop
loope
lds
in
push
or
int3
jbe
insl
dec
sub
or
je
div
idivl
dec
dec
and
popa
ret
mov
cs
dec
dec
ja
aas
or
xor
rorl
popf
aas
jecxz
repz
std
inc
xchg
movl
or
into
mov
call
dec
xchg
notb
xchg
mov
stc
adc
lds
fisubrl
cmp
les
enter
xor
dec
rep
bound
cli
push
or
push
sbb
xchg
cmp
mov
push
cmp
jle
mov
iret
and
dec
dec
loope
pushf
pop
jmp
jge
loope
xchg
or
jp
mov
xadd
push
in
rcrl
jecxz
popf
adc
stos
popf
inc
ja
xchg
popa
loope
inc
xchg
in
dec
push
sub
in
cwtl
dec
sub
dec
movsl
mov
aad
out
cmc
test
ja,pn
inc
movsl
outsb
inc
jno
cld
shll
test
xchg
aas
jmp
loope
jne
and
cs
push
sbb
dec
push
xchg
imul
into
orl
jecxz
push
or
mov
ljmp
mov
pop
repz
inc
lcall
stc
imul
insb
mov
std
add
call
fs
pop
loopne
mov
jne
and
jle
dec
hlt
pop
adc
testl
loopne
sti
imul
scas
sbb
mov
test
add
inc
xchg
xor
xor
les
fnsave
mov
jns
shlb
mov
inc
push
sub
std
xor
jp
imul
stos
add
mov
stos
xor
cmp
sub
xor
daa
movsl
cmp
cmp
jp
push
testb
cld
bound
fsubl
inc
xchg
mov
mov
popf
mov
in
out
popf
jnp
mov
xchg
loopne
jae
mov
cmp
dec
outsl
xor
movsl
je
ss
inc
daa
addr16
arpl
add
shll
aaa
testb
push
inc
or
int3
pop
jbe
mov
jge
fldl
xor
xchg
mov
in
add
mov
cmp
fnstsw
xchg
mov
aam
imul
rcl
je
in
stc
or
enter
lahf
jecxz
addr16
and
push
xor
mov
mov
rolb
jnp
push
adc
iret
mov
inc
js
scas
push
in
pop
pop
dec
movb
mov
daa
aas
jns
aaa
cld
mov
imul
mov
sbb
sub
in
adc
ficoml
popa
mov
dec
push
incb
lahf
movups
push
jno
scas
gs
pop
push
ss
outsb
iret
call
test
fisttps
scas
cmp
pop
adc
aaa
lret
add
cmp
jg
repz
popa
sbb
je
mov
pop
pop
sbb
enter
jnp
cmc
dec
xchg
xchg
inc
xchg
lods
sub
aad
jae
decb
dec
jno
push
sbb
jmp
dec
mov
jg
std
andl
pop
popf
pop
add
fwait
jecxz
jns
add
stos
adc
cmpsl
xchg
jg
pop
mov
fnstsw
xor
mov
jb
idivl
mov
mov
mov
or
ss
inc
into
jno
movsl
clc
dec
mov
mov
or
sbb
decl
pop
push
xchg
mov
mov
sub
cltd
cmp
test
pop
mov
hlt
xlat
movsl
enter
inc
add
in
fadds
in
cli
ljmp
movsl
std
dec
or
sar
push
lods
push
adc
movsl
or
test
sub
cs
call
incl
imul
sub
fs
arpl
mov
ja
and
bnd
push
sub
sbb
in
adcl
xchg
loop
lock
xor
mov
pop
orl
and
jno
ljmp
inc
dec
loop
outsb
fwait
xor
xchg
das
cld
sub
dec
sbb
xchg
mov
and
pop
lahf
and
lahf
loopne
in
outsb
orb
test
inc
pop
hlt
dec
jo
ret
fs
push
in
cmp
xor
mov
mov
xor
jle
repz
aad
mov
loope
fists
movsl
add
nop
pop
movnti
pop
xchg
loopne
and
movsb
jle
pop
sub
adc
ljmp
dec
xchg
xchg
in
into
push
outsb
test
fwait
aam
xchg
inc
sahf
push
push
jmp
add
jns
add
xor
sub
push
lahf
jns,pn
push
out
jns
cmp
sbb
nop
leave
stc
je
add
scas
sub
xchg
adc
pop
pxor
pop
mov
xor
or
stos
data16
sub
mov
xchg
sbbb
dec
sub
out
mov
arpl
push
xchg
inc
dec
sub
lret
inc
jge
mov
mov
aam
mov
inc
sbb
xorb
lods
push
sub
fbstp
in
dec
jns
jle
xor
mov
dec
lret
mov
out
out
mov
lods
xchg
sarl
dec
fcompl
sbb
inc
das
xchg
mov
or
popa
adc
movsb
push
inc
push
out
xor
sub
or
enter
xchg
mov
add
pop
lret
push
or
ret
or
pop
inc
enter
xchg
and
call
nop
je
mov
dec
imul
out
sbb
ss
lret
shrl
fs
push
movsb
add
stc
popa
test
mov
cmp
adcl
adc
mov
cmp
mov
pop
cmp
cmp
push
lock
jge
call
dec
sbb
daa
xchg
inc
out
rcr
push
aam
into
mov
add
out
pop
pop
inc
dec
movsb
decl
or
mov
fadd
nop
sarb
jmp
nop
test
out
xchg
mov
pop
xchg
jne
sti
sarb
ret
push
subl
jle
movsl
stos
cld
lock
imul
cmp
and
xlat
rcrb
lret
pop
jp
and
mov
inc
mov
cmp
outsb
pop
dec
inc
or
xchg
lods
or
xchg
rcr
dec
cmpsb
pop
dec
sahf
jmp
mull
inc
sub
add
call
dec
repnz
xchg
cmc
arpl
push
pusha
push
xchg
push
inc
sbb
lret
jo
sub
enter
imul
loopne
add
cmp
xchg
and
je
loopne
and
loopne
mov
jns
cmpsb
pop
adc
push
div
je
jecxz
lock
adc
mov
lods
mov
inc
push
fdivs
daa
sbb
rcrl
inc
and
push
fsubrp
mov
xchg
fwait
call
loop
out
sbb
scas
into
popa
pushf
out
mov
adc
jl
inc
cmp
je
popa
stos
jg
les
xchg
mov
lcall
push
adc
inc
xchg
and
lcall
clc
sub
push
pop
jg
jle
mov
push
xchg
nop
fstl
incl
sarl
sbb
popa
xor
add
mov
lods
push
cmpsl
loop
cmp
ljmp
mov
in
popa
imul
or
add
lret
in
xorl
fwait
xor
and
or
sti
inc
mov
pop
push
jp
scas
and
xchg
pop
cld
scas
nop
or
cld
push
je
imul
mov
adc
clc
add
js
adc
mov
ret
sub
bswap
sub
nop
adc
das
mov
movsb
les
mov
or
scas
or
dec
cmp
cmp
cmpsl
mov
lock
mov
fidivl
arpl
outsb
enter
pop
outsl
ficoml
xor
lds
stos
mov
mov
stc
repnz
and
xchg
imull
add
mov
fidivs
clc
cwtl
mov
pop
lods
sahf
xchg
sti
fucomip
test
dec
sbb
lret
cmp
jne
and
ucomiss
sbb
mov
insl
sbb
sarb
pop
sub
pop
push
xor
jns
jo
cmp
arpl
or
pop
and
lock
push
mov
mov
jmp
hlt
xorb
pop
movsl
fwait
aas
or
mov
sbb
cmp
add
push
or
stc
mov
xor
pop
int3
sbb
mov
pop
lds
das
test
fstpt
or
cld
xchg
push
flds
scas
adc
cli
adc
mov
stos
leave
cld
stc
data16
lods
xchg
push
adc
test
jns
pusha
pop
rol
xrelease
fnstsw
cwtl
mov
jne
and
lret
push
loop
xchg
lds
lret
mov
xor
push
dec
push
outsl
xchg
stos
fcoml
inc
dec
or
xor
push
fistps
daa
sub
dec
lods
dec
mov
lods
lret
test
outsb
inc
sbb
mov
aam
fmul
aaa
pusha
imul
js
add
in
push
mov
fiaddl
jae
ficomps
jbe
test
cmpl
sbb
mov
pop
test
pusha
sbb
das
int
and
out
and
test
push
jmp
inc
repz
cltd
and
jg
mov
sub
add
xlat
and
and
xchg
repnz
dec
xchg
out
sbb
xchg
sbb
lods
imul
add
daa
push
xor
push
mov
jns
mov
dec
inc
mov
xchg
subb
test
push
in
add
loopne
cmp
call
ss
sbb
pop
ljmp
dec
imul
mov
mov
leave
das
xchg
inc
aas
inc
inc
push
lea
sbb
dec
cmpsl
pushf
cmp
jo
out
pusha
mov
inc
leave
xchg
mov
jmp
sahf
dec
lea
ret
xor
cld
inc
jl
mov
pop
pop
or
sbbb
ficoml
jno
test
stos
data16
push
and
mov
inc
cld
cmp
je
push
push
xchg
push
mov
mov
inc
enter
mov
jmp
adcb
jbe
mov
in
in
aad
shr
adc
or
inc
mov
popf
into
add
pop
pusha
cmpsb
in
cmpsl
and
or
xchg
mov
insb
andl
in
mov
cmp
push
mov
add
mov
sar
in
adc
mov
shlb
xor
mov
fidivs
sub
pop
les
xor
lods
les
mov
cwtl
xlat
daa
xchg
das
shl
test
mov
push
or
ret
sbb
pop
repz
add
jecxz
xchg
bound
loopne
pop
mov
inc
xlat
dec
pop
das
call
add
dec
repnz
jb
daa
mov
enter
jno
hlt
call
lahf
mov
mov
pop
es
in
pop
xchg
pop
sub
lods
rcll
mov
mov
es
mov
xchg
loopne
dec
jnp
inc
outsb
cli
cmp
lds
scas
daa
sbb
mov
hlt
dec
stc
pshufw
sbb
cmp
push
stos
adc
or
cld
inc
and
decb
sbb
or
test
in
adc
mov
add
pop
mov
push
mov
fldenv
pop
add
stc
inc
cwtl
fmul
imul
inc
outsb
leave
sub
arpl
pop
bound
pushf
xchg
xchg
movsb
das
mov
sbb
push
adc
scas
jmp
jo
imull
pop
xchg
addr16
mov
and
and
or
dec
mov
cltd
rcll
pop
mov
lret
adc
add
sub
or
imul
test
fldl
cmp
jnp
movhps
scas
mov
and
pushf
mov
mov
jl
movsl
popa
push
sbb
add
inc
in
les
and
cmc
pop
adc
mov
mov
pop
mov
into
push
mov
divb
cmp
enter
mov
loop
cmp
sti
inc
clc
cmpsb
pop
inc
adc
dec
mov
cmp
ror
aaa
outsb
or
hlt
clc
orl
int
in
lret
sub
dec
inc
scas
call
xchg
rcrl
add
xor
frstor
and
sbb
or
loop
loope
cwtl
sbb
inc
and
out
and
fistl
jnp
into
imul
iret
mov
bound
xchg
inc
out
fcmovne
mov
shl
fimuls
pop
mov
sub
pop
insl
fcmovnu
movsl
sbb
xor
jp
test
mov
xlat
leave
insl
test
sbb
scas
inc
std
add
ret
sti
test
mov
sub
push
rol
and
mov
push
rcl
out
or
dec
push
or
mov
and
pushf
pop
lret
and
pop
mov
lcall
mov
add
dec
sqrtps
test
mov
aad
mov
xor
adc
test
jge
mov
movsb
add
js
mov
leave
jb
bound
inc
lahf
sub
sti
scas
push
adc
cmp
push
test
mov
dec
std
loope
cmp
or
data16
cmp
xor
mov
sub
jae
xchg
xchg
inc
sahf
out
adc
push
inc
ja
lret
fidivl
insb
fists
dec
jo
xor
push
sub
adc
mov
jnp
jo
lcall
popa
mov
testl
mov
adc
and
leave
sbbl
hlt
sbb
cmp
repnz
aaa
stos
xchg
imul
arpl
xchg
inc
inc
pushf
xchg
test
mov
outsl
xorl
lret
int3
mov
and
sub
mov
adc
jecxz
mov
xchg
mov
xor
stos
movsl
pop
mov
add
add
scas
xor
or
imull
movsl
call
lea
jns
or
fidivl
ror
jae
or
mov
ret
mov
pop
jne
inc
xor
add
lock
xchg
aam
jns
xlat
iret
jne
scas
fwait
mov
ret
dec
test
push
leave
imull
jecxz
push
incl
out
leave
mov
sti
pushf
or
push
in
dec
mov
test
sbb
popf
add
sub
xchg
fsts
lods
movsb
mov
cmp
adc
xorl
int
dec
mov
cmp
xchg
mov
sti
and
fistps
pop
mov
out
cli
mov
mov
jmp
pop
bound
sbb
cmp
mov
cmp
lcall
cs
ss
lods
lods
dec
in
push
xchg
pop
xor
js
add
sub
or
dec
cmp
or
nop
add
push
aad
int
cltd
test
arpl
pop
cmpsb
mov
std
repnz
xchg
es
add
xchg
xor
sub
jecxz
or
mov
push
jae
push
mov
xchg
sbb
lea
inc
lock
mov
mov
subl
adc
fcoms
add
mov
jge
or
fisubl
mov
adc
lods
sti
mulb
ret
data16
mov
xor
sti
mov
jns
mov
dec
cmpb
push
mov
shll
xor
lock
push
sahf
mov
and
xor
lcall
or
mov
mov
subb
push
sub
nop
mov
fsubrs
fdivrp
mov
pop
dec
adc
arpl
imul
cmpsl
jp
sub
cs
mov
add
sar
sub
loope
in
movsb
push
clc
pop
or
adc
xlat
mov
xchg
cltd
lods
mov
test
test
fwait
stos
sub
sahf
or
and
mov
adc
sub
dec
cmp
ror
adc
jbe
sub
lret
or
mov
lea
inc
adc
adc
pop
inc
jle
jmp
push
aas
aas
push
or
pop
jo
pop
call
fistpl
in
or
push
cmc
outsb
adcb
imul
outsl
filds
add
inc
pop
loope
cmpsb
xchg
cmc
mov
fisubrs
lock
outsb
lods
popa
lds
xor
cmp
aas
sbb
into
popf
enter
stos
arpl
lahf
jmp
divl
fxch
xchg
jg
loope
ret
mov
loopne
xlat
test
dec
add
fdivrl
ljmp
ja
in
pop
lods
stc
fsub
fisubl
jne
stos
pop
jp
adc
pop
insl
jecxz
xchg
adc
lret
movsl
pop
mov
out
or
jbe
shll
cmpsl
mov
nop
and
mov
sbb
xor
int
inc
test
repnz
rclb
adc
mov
rcrb
popa
dec
mov
sub
and
lcall
bound
out
mov
xchg
int3
out
add
xor
repnz
stos
mov
addr16
mov
pcmpgtb
repz
lcall
cmpb
scas
pop
je
sub
inc
fldenv
add
jns
jg
cmp
jno
mov
and
popa
push
sbb
out
sti
scas
in
jg
cmp
xchg
in
and
inc
loop
jl
adc
and
sbbb
sub
or
xor
cmc
out
pop
js
aaa
in
pusha
xor
in
sahf
push
sar
and
xlat
dec
sub
jns
push
jnp
jae
lock
push
arpl
shrb
inc
add
pop
dec
adc
mov
testl
imul
jnp
xchg
inc
adc
pop
dec
dec
addl
in
inc
popa
movsl
sahf
adc
cltd
out
sub
xor
push
cs
fmull
push
call
shll
pop
iret
push
mov
mov
mov
fistl
adc
loop
xor
dec
push
into
push
out
jno
inc
jnp
insl
scas
xchg
push
imul
fwait
sub
pop
cltd
outsb
adc
mov
hlt
and
shl
arpl
imul
sarb
into
mov
mull
mov
xchg
push
jg
mov
xor
push
xor
add
jb
and
lea
mov
imul
mov
std
xchg
sarb
push
out
sub
mov
fucomi
mov
mov
lcall
clc
leave
ljmp
fists
mov
test
mov
xor
cmp
inc
pop
icebp
lock
cld
mov
fstps
sbb
pop
cmc
mov
mov
cld
pop
arpl
lret
pop
xor
add
xchg
mov
aam
dec
cltd
push
push
mov
push
add
sti
inc
mov
xchg
jnp
push
icebp
int
and
dec
fldt
xchg
rorb
or
scas
repnz
sbb
les
inc
pop
push
fsubrs
adc
lods
inc
push
sub
lcall
add
jb
leave
stc
lods
out
adc
and
lods
leave
inc
test
adc
out
flds
fistl
aam
dec
mov
scas
cmpsb
pop
stc
mov
rcr
sub
jbe
adcl
or
inc
aam
lea
sub
cmp
and
outsl
mov
xchg
popa
dec
sbb
sar
popa
push
mov
inc
addb
cmp
or
jecxz
xchg
mov
fstpt
shlb
sbb
shrb
lods
lea
xchg
in
and
lret
fwait
cmpsb
bound
ret
aam
daa
sbb
fstl
xor
xchg
sbb
lods
sarb
lock
pop
call
cmpsb
mov
sbb
adc
pop
enter
sbb
xchg
sbb
insl
mov
push
and
insb
dec
lcall
inc
xor
xor
xor
int3
xor
ja
xor
fstpt
xor
cmpsb
out
ror
push
or
mov
lahf
jl
push
aaa
xlat
sti
push
gs
push
outsl
add
test
mov
das
push
sub
cmp
stc
adc
test
movsb
cmc
add
and
call
push
add
dec
popf
push
test
rdmsr
mov
in
inc
rcll
dec
frstor
sub
arpl
pop
xchg
push
pushf
mov
scas
cs
rorl
jne
aam
icebp
push
and
add
or
movsb
stos
mov
stos
pop
pop
in
mov
dec
push
scas
sub
jecxz
decb
das
repz
adc
in
xchg
sbb
xchg
sub
rclb
ss
push
mov
sbb
xor
sub
gs
fwait
sbb
movhps
pop
inc
mov
sbbl
dec
add
shrb
xchg
push
fs
add
fwait
outsb
inc
cs
data16
push
test
fwait
orl
xor
cli
jl
xlat
sub
xorl
notl
mov
outsl
pop
and
cmp
sub
dec
aas
adc
test
mov
rorl
rclb
mov
pop
imul
inc
add
jo
xchg
shlb
xchg
testb
rcll
jae
lods
ret
push
xorl
imul
popa
xchg
xchg
xchg
je
mov
test
push
add
xchg
sub
pop
sti
mov
in
out
je
sbb
mov
dec
mov
daa
movsb
rcrb
sbb
std
out
sub
stos
add
outsl
xchg
cwtl
push
out
mov
or
inc
push
and
data16
out
sub
dec
sahf
pop
fdivs
incl
mov
add
push
popf
aaa
sbb
jle
push
jae
mov
pop
in
insl
jmp
dec
push
in
loop
cs
fucom
fistpll
push
sbb
test
in
and
add
cmp
pop
mov
fwait
ret
pop
sub
pop
add
pop
cmpsb
mov
cmp
mov
add
sbb
cltd
pusha
push
imul
bound
inc
aas
xor
imul
pop
es
mov
icebp
stos
call
jle
clc
mov
sub
inc
jge
or
xchg
int3
sti
rorl
cli
xchg
or
adc
ficoms
jno
pop
movb
insb
pop
lods
inc
repz
push
fcmovne
add
loopne
dec
lcall
xchg
mov
push
aad
cmp
and
cmp
mov
scas
daa
pop
xor
push
mov
dec
jl
jb
push
push
ja
pushf
lds
pushf
or
cmc
mov
xor
sahf
add
iret
cmp
xchg
sbb
cmp
pop
pop
repnz
jbe
in
xor
leave
lods
mov
or
cmpl
stos
aaa
frstor
ret
or
pop
call
mov
mov
cmc
scas
jne
lahf
sbb
sarb
fists
shll
addb
adc
cli
push
push
hlt
sbb
pop
movsb
pop
gs
jle
sbb
icebp
sbb
adc
lds
dec
je
out
mov
imul
das
cwtl
inc
xor
and
pop
movsl
sbb
adc
sub
xchg
gs
cmpsb
aas
fcomps
push
inc
pop
jmp
ja
out
ror
push
inc
test
cmp
jg
aaa
pop
adc
flds
loope
pop
mov
lcall
mov
and
adc
shrl
cli
clc
and
sub
mov
adc
divl
cmp
jo
xchg
adc
adc
cmp
je
xor
pushf
mov
push
lods
subb
inc
pushf
fistl
fcmovb
push
mov
insb
movsl
and
add
loopne
inc
inc
ja
js
add
les
das
sub
popf
sbb
cmp
xor
push
imul
pop
lcall
jns
mov
cmp
and
jl
das
mov
fcomp
ret
add
push
mov
daa
xor
hlt
mov
shl
ret
std
xor
dec
mov
loopne
imul
xor
inc
jb
jno
jge
mov
sti
mov
ljmp
mov
adc
fbld
imul
lahf
scas
pop
mov
adc
sub
into
sbb
mov
sbb
jns
add
sub
and
mov
ss
or
push
adc
ja
mov
lea
push
cmp
ret
jno
and
inc
fwait
iret
lret
xor
outsb
bound
and
jp
push
xor
cmpsb
popa
jo
jo
hlt
inc
jb
pop
js
jno
aad
clc
or
popa
std
and
jg
mov
jp
scas
sbb
mov
mov
in
mov
js
xchg
dec
rol
leave
and
pop
mov
test
inc
or
inc
adc
pop
mov
xchg
rorl
outsb
cmpsb
in
adc
subb
jo
imull
rcll
repz
test
aas
adc
ljmp
aam
data16
mov
cltd
inc
sbb
lds
xchg
mov
push
and
cmp
pop
inc
mov
aad
add
fstpt
cmp
pop
decl
or
adc
xlat
out
sbb
ja
dec
push
insl
loop
call
hlt
imul
and
cmp
pop
jno
xor
lock
or
jg
insb
out
outsb
lds
imul
ss
loop
adc
sub
and
daa
jo
sbb
dec
mov
sbb
push
adc
stos
arpl
sub
jnp
sub
push
pop
xchg
pop
xchg
lods
sub
push
push
ss
imul
or
inc
fsub
sub
push
push
pop
lahf
mov
into
mov
inc
mov
clc
xchg
mov
not
pop
xchg
aad
enter
fs
or
repz
and
sub
dec
ror
xor
mov
in
mov
das
out
rorl
mov
xchg
jl
dec
jg
xor
rol
xor
mov
xsavec
frstor
imul
lret
outsl
xlat
iret
push
dec
loope
pop
iret
out
pushf
loopne
int
or
aas
sub
ss
xchg
xchg
push
dec
xor
dec
jns
cmp
push
xlat
call
push
inc
aad
mov
adc
lahf
mov
lods
mov
jns
push
stc
mov
xor
pop
je
test
sub
addr16
fistl
sbb
mov
lds
mov
lahf
call
mov
pop
sar
ljmp
inc
lahf
mov
xchg
mov
xchg
int3
cmpsl
inc
push
add
sub
cwtl
hlt
daa
loop
jp
or
push
jmp
and
and
insb
sub
neg
scas
mov
dec
mov
jno
pop
jl
cmpsl
adc
imul
pop
ret
popa
inc
test
shlb
sub
arpl
cmp
push
sub
movsb
in
push
orl
leave
mov
clc
adc
push
rclb
push
jle
xor
mov
cmp
xchg
imul
ja
pop
loope
mov
xchg
or
cmpsb
mov
lods
adc
sub
add
add
out
xor
scas
jo
cmp
out
loopne
idivl
cmp
jle
jmp
nop
sub
jnp,pt
adc
mov
ljmp
lahf
cmp
repz
scas
fdivrp
push
sub
sbb
sahf
into
sbb
cltd
sar
push
int3
icebp
jo
mov
xchg
outsb
lahf
pop
fidivrl
xor
das
cwtl
xor
loopne
sub
scas
jo
arpl
and
pop
imul
ds
push
lahf
ret
and
mov
mov
addb
jle
subl
clc
push
mov
mov
sub
add
sbb
cltd
or
xor
pusha
and
aam
xlat
ja
inc
jg
xchg
ret
ja
push
fwait
pop
movsl
jno
in
cmc
fildl
lock
add
fs
rcrb
mov
fsubrl
or
mov
sub
scas
sahf
scas
mov
mov
fisttps
enter
push
push
test
incl
mov
mov
pop
sbb
cmp
mov
rcr
jo
xchg
jnp
test
and
mov
pop
fwait
jmp
pop
pop
mov
push
add
stc
jbe
cmp
mov
das
negb
and
xchg
jg
mov
dec
fsubrl
shlb
pop
jg
aas
mov
sbb
inc
ljmp
dec
pop
sbb
inc
sti
fildl
dec
cmp
addb
enter
pop
xchg
cmp
movsb
lahf
push
and
or
insb
pop
lret
mov
lret
add
mov
pop
js
aaa
into
pop
sub
or
movsb
popa
loopne
mov
dec
and
nop
sbb
mov
lahf
jp
adc
shl
in
xor
pop
sbb
push
imul
mov
xor
js
pop
rclb
clc
sbb
aas
scas
sti
mov
addr16
cld
repz
push
ljmp
ds
int3
push
lods
fnstenv
adc
mov
fs
cwtl
cwtl
idiv
sub
lcall
and
cmpsl
sbb
int
or
or
nop
mov
std
jbe
fwait
sbb
pop
repnz
arpl
push
ret
icebp
cmpsb
scas
xchg
ja
mov
bound
aas
arpl
fisttpll
clc
jle
sti
cld
mov
and
pcmpgtd
xchg
jnp
pop
arpl
inc
scas
xchg
sbb
dec
cmp
mov
outsl
jge
sahf
stc
repz
xor
insb
addr16
bswap
mov
adc
push
shl
pop
pop
subb
es
jmp
adc
ret
cmp
pop
fidivrl
xor
pusha
arpl
rcrl
aas
icebp
mov
lods
testb
add
aam
and
mov
cmp
scas
or
mov
push
xchg
insb
mov
mov
jp
push
sub
sbb
ficoml
das
xchg
ret
pop
xor
pop
mov
pop
push
fs
cmc
mov
sub
cmp
add
pop
mov
mov
dec
mov
dec
xor
lahf
push
ror
xchg
sub
sqrtps
add
adc
shrb
scas
sbb
push
push
pusha
jp
adc
push
xorl
icebp
sbb
sahf
mov
jp
mov
push
pop
mov
jo
dec
pop
les
js
jno
xor
xor
inc
mov
inc
fs
pop
sbb
adc
xor
data16
mov
movsb
add
lret
jae
adc
pop
leave
lahf
jl
sub
inc
cwtl
into
adc
and
insb
int3
xor
xor
test
add
xchg
mov
pop
sbb
negl
xchg
mov
loop
dec
mov
dec
ljmp
push
xchg
aas
mov
insb
aas
jno
pushf
idivb
bound
adc
movsl
mov
xor
std
adc
sub
sahf
andl
add
lahf
ss
push
xchg
mov
incb
test
xchg
aad
cmp
dec
fmul
in
inc
and
ja
lods
stos
gs
fnstenv
daa
pop
clc
cmp
sub
jb
aam
mov
push
das
lds
in
outsb
sub
sbb
in
inc
repnz
popf
xchg
ffreep
mov
mov
sbb
popf
mov
dec
cmp
cmp
out
add
fadd
aaa
ret
xlat
mov
mov
ss
sbb
lods
mov
test
pmaxub
dec
mov
aas
inc
gs
mov
shlb
or
fisttpl
addr16
inc
pop
addr16
cmp
idivb
push
or
mov
dec
dec
stos
sub
cmc
mov
push
xor
mov
sbb
push
aas
xchg
lods
mov
rcll
psllw
mov
and
xor
inc
icebp
inc
push
push
mov
insl
xor
dec
shll
mov
in
cmc
and
xchg
mov
sahf
push
mov
lahf
mov
jl
fcmovne
cmp
bound
pop
jge
fisubrl
in
out
pop
lret
arpl
cmp
andb
aam
mov
pushf
cmpsl
jl
lcall
and
std
xor
fisubl
hlt
xor
jmp
addl
push
jmp
test
inc
pop
in
xorl
idivl
mov
inc
add
push
fnstenv
call
testl
rorl
push
inc
xor
sbb
out
das
hlt
test
mull
mov
xchg
or
pop
or
push
push
decb
sahf
ret
lahf
push
jne
sub
jne
mov
sbb
divb
cld
aas
jle
adc
jnp
ja
xor
xor
imull
shll
xchg
jp
pop
sub
pop
nop
xor
add
cmp
jmp
rcll
cli
icebp
push
fisubl
and
adc
arpl
adc
dec
cmp
inc
sub
lret
syscall
inc
xor
sub
jb
les
out
fisttpll
lods
arpl
jg
push
mov
into
xchg
sub
inc
movsl
popa
out
lret
cmpsb
addb
xchg
jo
cmc
movsb
inc
insb
mov
pop
push
pop
inc
or
call
lret
movsb
push
push
test
cmp
lcall
push
jmp
js
stos
cmp
mov
mov
enter
aam
sti
mov
les
inc
xchg
icebp
mov
cmp
rorl
cmp
mov
jecxz
xor
sub
addl
mov
cmpsb
scas
push
imul
sub
mov
rcll
mov
pop
pop
xchg
test
lock
cmp
test
adc
push
push
jecxz
push
or
inc
jge
clc
iret
loop
shrb
repnz
pop
cltd
lods
ud1
adc
fisttps
mov
lds
out
jo
dec
sbb
ds
cmp
fs
xchg
adc
movsb
mov
inc
dec
ret
pop
movsl
or
in
ds
mov
lea
and
xchg
sub
mov
js
pop
push
cltd
stc
aaa
dec
shll
xchg
icebp
cmp
xor
rorl
push
jnp
adc
pop
sub
fldt
inc
int
sbb
cmpl
rolb
pop
or
add
test
scas
xchg
lret
or
jl
mov
lret
dec
test
out
dec
jmp
ds
aas
pop
or
cli
jnp
pop
cld
mov
mov
mov
pop
js
xchg
inc
stc
das
aad
pop
out
sub
inc
mov
rcll
das
mov
cmp
fs
inc
sbb
xlat
gs
mov
aad
je
mov
rcrl
fs
in
les
iret
xchg
fs
insb
sub
lds
cmp
pop
bound
testb
mov
cmp
js
lock
mov
inc
cmp
cmp
fsubl
testl
loopew
xchg
inc
gs
ljmp
shl
sbb
xor
inc
push
jo
dec
lods
and
lret
test
adc
push
inc
add
push
adc
cmpsb
fwait
push
cli
jle
fidivl
push
lret
xor
fcmovnu
mov
inc
or
jns
lret
jmp
sub
xlat
stos
loope
push
inc
popf
out
mov
xchg
shll
cmpsb
mov
add
mov
pop
call
xor
fistl
xor
and
sub
or
mul
or
push
cmp
jb
lock
addr16
inc
push
inc
mov
or
jb
xor
cmp
sbbl
mov
cltd
stos
jb
test
or
iret
sub
leave
adc
pop
push
or
and
cmc
push
andl
test
loope,pn
repz
xchg
out
outsb
cmp
adc
mov
mov
xor
clc
xor
lcall
movsl
add
lods
jp
js
push
int3
arpl
in
bound
sbb
movups
mov
sahf
repnz
mov
icebp
pop
or
sub
fisubl
add
jle
push
stos
sbb
xor
fmull
test
cmp
mov
sub
cmpsb
cmp
cmp
inc
mov
mov
test
loopne
inc
mov
mov
dec
pop
clc
push
or
shl
je
mov
jns
pop
pushf
les
push
cmpsl
lods
jg
into
insl
xor
inc
lret
lock
lret
xchg
cmp
loop
fldl
cmpsl
adc
stos
daa
pop
je
cld
sbb
inc
xchg
adcb
jnp
pushw
cmp
rcrb
std
pop
mov
mov
fdivrl
scas
dec
and
jb
cmp
mov
jb
and
dec
stos
into
shll
mov
and
int3
lahf
and
int3
loopne
mov
mov
pop
and
jne
xor
stos
adc
cmp
push
ss
dec
dec
lock
dec
xchg
or
sub
fwait
repnz
xchg
test
iret
inc
fisubs
sbb
push
jns
and
pushf
ret
sarl
sub
xor
test
cmpsl
test
scas
and
test
pop
add
jmp
xor
scas
repz
pop
repz
ljmp
ja
jnp
or
fsts
mov
or
rorl
dec
inc
or
or
mov
adcb
pop
insb
dec
pop
out
mov
jne
test
repz
xlat
or
insb
and
out
imul
loopne
call
dec
jg
mov
inc
iret
shlb
stc
in
xor
mov
aas
add
pop
pushl
in
sub
jecxz
jb
and
in
sbb
inc
jl
pop
pushf
dec
sbb
pop
popa
jp
mov
push
push
js
sbb
loope
mov
or
out
cs
or
ficompl
lods
mov
jmp
pop
push
scas
dec
dec
fsts
lahf
pushf
les
call
int
push
negb
mov
pop
mov
loopne
inc
outsl
or
clc
adc
cmpsl
fstl
and
insl
jno
lea
mov
aad
pop
rcll
rorl
jmp
pop
insl
ret
xor
jle
add
std
inc
jmp
adc
adcl
sbb
and
dec
and
mov
rcl
sbb
mov
inc
xchg
mov
mov
addb
pop
loope
pop
inc
push
les
lods
mov
cld
inc
sbb
jns
push
cmp
mov
stos
dec
mov
cmpsb
pushf
mov
and
jle
fnstsw
push
cmpsl
rcl
fwait
mov
mov
pop
xchg
push
insb
jo
adcb
fnstenv
and
rcll
pop
push
fwait
adc
shrl
sub
das
clc
push
cmp
cmp
add
decb
mov
std
loopne
push
icebp
pop
aad
test
or
jbe
dec
sbb
mov
pop
sbb
orps
mov
and
lahf
sub
jbe
mov
lea
inc
addr16
int3
mov
jl
repnz
lahf
xor
add
adc
rorb
repz
adc
xchg
mov
mov
xor
lcall
adc
jg
shld
push
xchg
in
and
lret
scas
fisttpll
xor
fisttps
mov
sti
pushf
push
nop
pop
and
aad
or
pushf
int3
lret
dec
push
insl
cmp
xor
sub
cmp
push
or
cmp
mov
xchg
neg
cmc
or
inc
ss
popf
mov
movsb
xor
cmp
xor
ret
leave
push
popa
sbb
xchg
dec
jg
xlat
repz
cmp
in
inc
divl
pushf
sbb
push
dec
fmull
aas
push
adc
mov
jmp
add
dec
movsb
fldt
or
xchg
clc
jmp
dec
shlb
jne
sbb
mov
es
dec
cli
add
jnp
cwtl
or
mov
sbb
dec
mov
inc
pop
mov
imul
call
push
mov
add
ljmp
test
mov
xlat
lds
jno
ficoml
cmp
adc
xor
adc
adc
lret
popf
int
sbb
jno
xor
pop
scas
push
jne
out
jg
add
sti
jns
xor
jg
incl
in
sti
jo
pop
jbe
icebp
sub
cs
fdivl
dec
inc
and
das
test
mov
jle
scas
cmp
mov
dec
and
jno
cmc
pop
orb
or
ret
mov
lods
ret
ret
psrad
pop
jge
cltd
loope
cs
or
or
fwait
push
jg
lock
test
sbb
lds
adc
mov
jae
orl
dec
pop
addr16
out
jne
stos
or
add
jmp
ljmp
sub
movsb
xor
inc
xor
pushf
pop
ret
jne
repz
movhlps
fcom
sti
push
jmp
mov
mov
insb
and
mov
js
ret
pop
mov
cmc
retw
jb
and
push
pop
jo
inc
in
xchg
cmp
add
stos
fmuls
or
mov
sahf
adc
fidivrl
lock
xchg
fnstcw
push
xor
fstpt
divl
call
pushf
mov
in
jbe
sub
inc
mov
mov
push
and
lcall
push
xor
leave
arpl
push
stos
das
push
mov
xlat
out
rcr
sarl
jge
adc
pop
mov
and
mov
fsubl
sub
orb
mov
push
movsl
pop
leave
jnp
lret
inc
lods
cmpsb
data16
cmp
push
push
or
fwait
jmp
aam
jns
aad
test
fcompl
xchg
outsb
add
inc
jae
int
mov
in
movsl
add
ja
xor
cwtl
mov
mov
fidivs
popa
cli
or
mov
shr
cld
or
je
fsubs
scas
test
mov
pop
and
inc
sub
inc
or
and
mov
insl
out
dec
push
addb
out
scas
loope
std
xchg
rep
fwait
mov
sti
pop
dec
mov
lods
into
in
lods
cmp
lret
pop
jmp
ficompl
or
jne
sbb
jle
jne
mov
add
xchg
sub
mov
loope
subl
jns
popf
imul
and
call
in
xor
xchg
push
cld
outsb
imul
xchg
mov
push
rep
and
fbld
xchg
push
lea
mov
adc
imul
test
subl
out
push
mov
mov
arpl
pop
sub
cmpb
arpl
inc
mov
inc
and
mov
adc
push
stos
cwtl
and
inc
inc
cmpsl
aaa
jo
add
mov
divl
xchg
pop
movsl
sti
or
ja
imul
lret
adcl
stc
push
pop
inc
ja
mov
popa
bound
aaa
nop
xor
loopne
adc
add
leave
ficompl
cwtl
mov
and
add
hlt
data16
xor
incb
stos
popf
jae
jno
hlt
dec
jle
add
fwait
pop
rcrl
fsts
loop
sbb
clc
movsl
sub
cmp
xchg
add
adc
scas
cmpsl
stos
or
push
imul
in
and
mov
clc
fucomip
shlb
add
and
inc
or
mov
pop
stos
scas
pop
ret
inc
fisubrs
dec
jg
mov
hlt
insl
inc
ret
rclb
lock
jbe
jmp
pushf
dec
test
ror
cwtl
arpl
lods
pop
cmpsl
inc
xlat
cmc
pop
iret
push
sub
jnp
add
sbb
fildll
add
jae
sub
inc
enter
and
xchg
les
lret
lcall
outsb
ret
outsb
xchg
sub
sub
cli
scas
rol
inc
andb
inc
cmp
xchg
clc
adc
push
pop
arpl
push
jg
or
frstor
jno
sbb
std
int
sub
popa
in
fcoms
add
jb
gs
inc
aaa
mov
in
in
mov
xor
daa
dec
pusha
adc
sub
mov
lret
xchg
sub
xor
movsl
or
insb
and
sbbb
lea
dec
stc
mov
mov
and
sbb
sub
add
mov
inc
xor
ja
jmp
mov
sbb
mov
movsbl
arpl
cmp
cmp
fcmovnbe
repnz
jo
stos
mov
test
lret
xor
add
bound
pmulhuw
lahf
push
pop
sbb
lret
cmp
mov
push
dec
cld
int3
adc
lahf
std
jl
daa
pop
mov
inc
adc
filds
aaa
mov
mov
jp
out
adc
push
sub
xchg
mov
or
stos
jbe
ds
test
xchg
fs
call
movsl
jbe
push
cmc
scas
ds
adc
inc
adc
xlat
rcrb
imul
ss
add
jge
lods
jo
adc
imul
scas
dec
insb
mov
dec
loop
ror
jns
xor
sub
or
mov
pop
mov
xor
and
fs
xchg
jp
and
fsubrs
negb
out
sbb
fisttps
mov
stos
push
xor
inc
mov
dec
cmc
es
xchg
lret
stc
call
add
sub
in
leave
push
inc
call
xchg
and
test
jle
xor
xlat
ds
push
adc
lea
fidivrl
mov
std
cmp
and
jno
push
add
xchg
testl
push
xchg
mov
aam
outsl
shrl
arpl
ljmp
fwait
jl
xor
and
add
cs
lds
clc
rcr
lret
jecxz
push
push
mov
xor
adc
sbb
pop
je
insl
jno
in
test
add
pop
out
mov
mov
mov
cmpsb
mov
fyl2xp1
inc
xchg
incl
xchg
sarl
or
andl
cltd
push
nop
lret
mov
std
sub
and
xor
rol
cmp
jle
dec
pop
mov
leave
cwtl
cmp
mov
sbb
jmp
ljmp
js
jecxz
das
dec
daa
das
cmp
scas
jge
jge
jmp
mov
mov
das
jno
frstor
outsb
xor
jne,pt
outsl
cmp
mov
dec
add
orl
jb
aas
fiadds
xor
pop
xor
ret
xchg
jae
sbb
jne
xchg
and
lods
aaa
xchg
or
shl
inc
nop
push
mov
add
lcall
repz
int3
jnp
sub
and
mov
aaa
add
inc
arpl
cltd
js
jb
dec
popf
jo
outsb
jg
js
lds
lea
and
pop
xor
push
dec
dec
movsl
lea
dec
inc
xor
cltd
dec
incb
cld
dec
roll
dec
aam
inc
in
nop
xlat
adc
scas
mov
sbb
jp
call
rorb
push
enter
dec
jbe
mov
andb
or
push
outsl
aas
int3
sbbb
mov
pusha
aaa
jbe
jmp
cmp
cs
fs
out
int
push
orl
ss
or
cs
xor
pop
icebp
int
mov
xor
mov
sbb
push
sbbl
in
orl
sbb
push
lcall
push
add
and
push
lods
mov
pop
mov
mov
adc
push
xchg
popa
push
ds
xchg
push
xchg
lret
add
bound
int
enter
nop
loopne
sbb
add
sbb
es
mov
in
cli
sub
xchg
imul
stos
data16
dec
lods
movsb
push
test
out
pop
pop
cltd
mov
test
inc
mov
sbb
and
mov
inc
jl
ret
xchg
setnp
sbb
mov
mov
or
lods
xchg
scas
cmpsl
mov
xchg
xor
jp
jle
fcomps
sahf
dec
add
sub
decb
pop
push
pushfw
pop
movsb
xchg
mov
cmp
cld
aaa
cmpl
xchg
ds
mov
inc
das
mov
gs
jecxz
adc
lret
push
inc
mov
and
rcrb
adc
mov
jecxz
sbb
jnp
pop
loop
jae
add
push
mov
and
das
inc
cwtl
fdivl
mov
push
sbb
addr16
test
std
ret
fcompp
cmp
push
les
mov
sub
mov
xlat
loopne
int
lcall
adc
mov
rcrb
sub
ret
test
fidivrs
jmp
fcomps
filds
cmp
fnsave
lds
adcb
cmp
dec
push
pop
cmp
pushf
sbb
loop
mov
xchg
sbb
movsb
out
cmp
ret
pushf
mov
jns
mov
data16
shl
sbbb
in
mov
dec
lret
push
push
pop
mov
adc
clc
in
lret
push
dec
or
lock
pop
lock
rclb
subb
lcall
and
jmp
add
movsl
jb
loop
push
fisubrl
arpl
push
fldl
repnz
stos
mov
addr16
jns
cltd
and
clc
pop
sti
ficompl
es
scas
daa
addr16
pop
ljmp
and
in
lahf
pop
decb
mov
cmp
jnp
xlat
sti
mov
mov
sti
jmp
insl
imul
cs
sub
nop
bound
lret
filds
rclb
scas
mov
cmp
movsb
in
rcrl
jo
mov
dec
add
iret
stos
xor
andl
or
cs
xor
jle
enter
in
jbe
mov
inc
push
outsl
insl
cld
pusha
inc
jno
popf
jo
enter
lret
xchg
mov
pop
dec
sub
inc
mov
testl
stos
mov
pushf
lret
mov
mov
sbb
cltd
xchg
test
popa
mov
mov
cwtl
mov
pop
add
movsb
test
std
leave
and
scas
sub
je
mov
cmp
jns
mov
dec
pushf
outsl
imul
or
or
pop
mov
in
adc
jbe
scas
ja
push
inc
ret
std
and
in
cmp
and
sub
jbe
jle
in
xchg
xchg
das
xorl
fcomps
and
xchg
outsb
fdivl
bound
jmp
mov
clc
mov
or
repnz
dec
xor
jbe
sarb
es
push
sbb
shld
loop
into
cwtl
out
or
pushf
xchg
insl
das
mov
add
fldl
xchg
jl
mov
cmp
gs
mov
cmc
out
fistl
cmc
int
xor
loop
mov
imul
mov
test
pop
stc
jg
mov
inc
bound
fidivrl
div
add
jmp
sbb
mov
dec
push
dec
xor
lds
into
jmp
int3
pop
lds
pop
outsb
xchg
cmp
push
mov
push
mov
mov
stc
shrl
sub
jne
xchg
neg
dec
in
sahf
enter
adc
pop
pop
mov
xor
repnz
mov
mov
pop
xchg
sub
jmp
mov
fstl
imul
mov
xchg
clc
push
cmpsb
loopne
ljmp
movsl
insb
gs
mov
mov
fildl
leave
xchg
popa
dec
push
xchg
push
adcb
xor
pop
mov
adc
dec
mov
cli
lahf
mov
push
test
imul
pop
repz
jne
add
imul
jae
mull
andl
jnp
sub
cmp
pusha
mov
and
test
or
mov
sub
sbb
in
hlt
sub
mov
pop
dec
xlat
mov
test
repz
jae
inc
jne
or
hlt
outsb
cmp
aad
mov
and
xor
roll
mov
imul
rcrl
mov
lods
mov
dec
fwait
sbb
in
push
movsb
stos
mov
aaa
push
sub
mov
jp
loope
sub
add
add
sarl
andb
xchg
inc
fwait
add
or
xchg
cmp
pop
sub
scas
inc
xor
jno
lgs
out
jbe
lret
sub
inc
mov
and
cmp
xorb
and
mov
push
xchg
pop
nop
dec
adc
push
adc
sbb
mov
stc
mov
push
aam
sub
shrl
addl
popf
mov
mov
xor
xchg
pop
pop
addr16
dec
out
clc
mov
outsb
fucomi
push
add
mov
movl
jg
xchg
jno
cmp
les
pop
xor
das
xor
sub
arpl
movsl
cwtl
popa
jl
xor
mov
mov
push
jmp
inc
pop
or
or
out
in
movsl
addl
push
dec
gs
iret
in
out
inc
pop
jle
lcall
adc
lret
inc
out
icebp
cmpsl
fmuls
in
les
popf
mov
mov
sub
and
pop
aam
pop
in
push
fwait
or
push
and
pop
or
test
dec
push
pushf
stos
mov
push
jno
lock
xor
mov
fcomip
jns
inc
popf
nop
out
jg
adcb
mov
xor
add
inc
pop
cld
pop
dec
mov
mov
loope
xchg
rol
ret
xchg
sub
and
fimuls
push
aaa
mov
xchg
lret
stc
pop
ret
or
jbe
jae
data16
sub
ljmp
cmovg
cmc
xor
xor
and
daa
scas
push
add
lret
cmp
imull
cld
cmp
notl
pop
int3
test
jge
loope
addb
xor
and
xor
pop
mov
jg
xchg
jg
mov
and
insb
push
ficompl
add
pusha
pushf
std
or
inc
jge
mov
int3
pop
xor
cli
add
pop
sbb
and
repz
mov
pop
mov
adc
sbb
fstps
cmp
jge
insl
inc
in
mov
out
mov
inc
rclb
or
je
push
xor
mov
jae
cmc
dec
lret
enter
adc
jno
dec
dec
repz
in
xor
fisttps
out
cmp
out
cmpsb
xchg
fs
or
mov
loop
ja
gs
mov
jo
jl
mov
inc
and
mov
mov
and
dec
in
and
cmpb
aaa
dec
int3
lock
shll
stos
cwtl
scas
andb
outsl
sahf
cmp
push
jne
dec
mov
mov
or
sub
mov
mov
ds
jns
adc
pop
mov
scas
pop
mov
ljmp
das
cmp
ds
cmp
inc
fimull
xor
enter
roll
popl
fisubrl
addr16
in
dec
xor
sbb
sarb
cltd
mov
dec
loop
lods
add
mov
fwait
jno
sarb
add
ljmp
les
pop
imul
xchg
jecxz
mov
inc
stc
fsubs
imul
or
aad
ljmp
sbb
xchg
lahf
mov
das
xor
imul
sbb
out
xchg
pop
or
sbb
or
jge
pop
inc
inc
sub
pop
subl
outsl
jle
sbb
push
pusha
int
sbb
sub
inc
push
shll
mov
push
dec
cld
sbb
dec
xchg
and
ljmp
test
mov
cmp
xchg
pop
xchg
pop
push
dec
and
fdivrl
inc
add
adc
mov
sbb
orb
sahf
mov
shl
outsb
stos
lea
les
jnp
jne
fxch
call
shlb
cs
inc
cli
sbb
sub
out
cmp
push
push
mov
pop
cmp
dec
and
sahf
dec
xlat
sahf
test
std
test
mov
jae
mov
mov
mov
sbb
lahf
insb
std
ret
mov
mov
pop
adc
push
and
jbe
insb
pushf
pop
and
jg
addl
cmp
mov
pop
push
addr16
lods
mov
pop
mov
xchg
sbb
test
adc
adc
mov
mov
xor
jg
test
push
xor
sbb
xchg
mov
mov
enter
sbb
pop
push
test
sub
sbbl
xor
repnz
jnp
imul
push
pop
cli
xchg
mov
pop
imul
sbb
je
incl
aas
rol
jmp
sahf
xchg
fstl
mov
stc
pop
aaa
add
iret
pop
cmp
dec
mov
daa
push
mov
daa
sbb
mov
pop
adc
xor
pop
repnz
mov
cmp
or
and
outsl
in
neg
rcl
jecxz
insb
fs
jnp
mov
outsb
push
data16
lock
cli
arpl
jge
and
out
mov
xchg
cmpsb
fs
pop
sti
xchg
and
loope
jbe
inc
das
dec
push
out
mov
cmp
out
outsl
pop
fildll
cmc
push
inc
js
pop
adc
jmp
add
roll
jno
cmpsl
insl
icebp
aad
push
shlb
fsubrp
test
test
mov
pop
cmp
enter
data16
jo
daa
ss
push
xor
push
outsl
sbb
pop
in
adc
fs
mov
mov
and
sub
mov
ds
adc
test
test
ja
loop
enter
cmpsb
mov
xchg
sbb
ret
inc
jnp
mov
dec
adc
test
xor
enter
lock
cltd
push
arpl
push
sbb
outsl
adc
divl
mov
xchg
mov
cmpsb
xor
jp
outsb
arpl
push
sub
sub
xchg
imul
arpl
add
mov
add
jecxz
mov
sbb
out
lcall
stos
iret
jle
pop
push
into
fisttpl
cmpsl
xor
jecxz
inc
aaa
dec
clc
loopne
adc
daa
and
add
lahf
xlat
cs
add
loope,pt
sub
mov
int
mov
hlt
xchg
outsb
and
clc
cs
es
adc
add
rcrb
mov
cltd
daa
xchg
ljmp
jmp
mov
jno
jbe
mov
push
push
fmull
xor
lcall
sbb
push
orl
mov
repnz
call
hlt
cmp
sbbl
mov
stc
cld
inc
add
cmp
jg
pop
insl
or
or
ret
fnstsw
cwtl
push
pop
adc
roll
popf
and
xchg
cli
sub
pop
pusha
repnz
shlb
pop
add
lea
cmp
jo
push
lods
inc
pop
pop
int3
loope
push
decl
les
sti
xor
imul
jo
and
mov
fsubr
jbe
insb
popf
inc
add
movsb
fidivl
xchg
xor
mov
push
pusha
mov
jg
xchg
lret
js
xchg
or
ss
sti
cmp
xchg
dec
lods
add
jnp
jae
mov
xchg
add
shll
aaa
in
in
out
popf
cmpsl
cltd
mov
cmc
push
sub
mov
insb
xchg
cmp
test
cmp
mov
les
imul
pop
add
push
dec
mov
sti
in
aaa
out
es
aad
stos
push
lock
loope
ficompl
addr16
xor
mov
jp
sub
pop
mov
testb
ds
jnp
test
fisubrs
js
lods
std
and
adc
loope
mov
ror
add
rcrl
pop
dec
mov
mov
sbb
loop
jo
les
xchg
mov
xor
test
addr16
jb
out
les
aaa
repz
outsl
sarb
insl
aas
mov
das
cmpsl
push
ds
data16
jb
push
pop
jl
push
pusha
loopne
inc
sub
push
hlt
xor
or
inc
xchg
adc
fisttpl
add
cmp
adc
xchg
ror
insl
test
and
loop
jp
xor
push
arpl
jl
lds
daa
negb
rcrl
add
or
cwtl
or
push
stos
loop
mov
or
cmp
jnp
push
andl
jmp
jg
mov
cltd
lcall
push
pop
pusha
dec
clc
add
nop
cmpsl
in
cmp
jo
pop
mov
cwtl
sbb
lock
out
cltd
cld
mov
movl
lcall
xchg
mov
pop
and
out
sbb
mov
dec
fcoml
lods
sub
mov
sub
pushf
pop
sub
push
push
int
push
dec
xchg
mov
and
pop
cmp
jecxz
cltd
out
stos
push
mov
fldt
sub
push
push
imul
hlt
cmc
in
mov
cmp
mov
xchg
sub
sbb
and
mov
cld
stc
in
cmpsb
mov
lahf
xchg
mov
jno
std
or
insl
int
shld
into
pop
cli
pop
enter
mov
int
test
pop
adc
cmc
add
pop
pusha
call
jo
add
std
cmpsb
pusha
mov
xor
out
cmc
sbb
pop
adc
cmp
xor
sub
sbb
leave
fdivrp
adc
lods
lods
xchg
fidivrs
movsb
cs
adc
movsl
je
imul
add
jl
daa
mov
cli
push
loopne
std
push
dec
sahf
push
mov
ret
sub
test
fstl
inc
pop
sti
adc
daa
dec
pushf
push
adc
cli
jne
mov
add
xor
into
xor
adc
sbb
ss
mov
mov
in
pop
lds
jp
clc
push
pop
push
cmpxchg
mov
shlb
je
into
push
jmp
xchg
add
mov
aaa
adc
call
sarb
mov
clc
sahf
xlat
mov
repnz
xchg
pop
sub
fidivrs
iret
pop
sub
js
xor
outsb
or
adc
push
or
adc
mov
pop
sub
sub
in
mov
and
push
xchg
fsubrp
xchg
mov
and
add
idivb
inc
dec
gs
sarb
outsb
fldcw
push
xor
inc
cmpsb
fistps
add
jns
jo
or
dec
push
insb
cs
xchg
shl
out
xchg
je
add
mov
das
int3
hlt
bound
out
mov
lcall
jne
pop
xlat
lahf
sub
lods
or
jns
and
jmp
fists
lods
jg
cli
xchg
add
bound
inc
dec
rol
add
jge
pop
or
inc
push
dec
jecxz
cmp
or
pop
mov
jge
cmp
and
jae
dec
js
mov
mov
dec
cs
xchg
repnz
sbb
add
pop
cld
out
push
push
lcall
xor
repz
inc
insl
pushf
fistpll
mov
stos
gs
sbb
popf
test
addb
add
leave
pop
cmpb
or
sbb
ret
add
and
bound
cmp
mov
jge
sbb
inc
lods
and
pop
stos
inc
push
popa
mov
outsl
ljmp
mov
jbe
push
xchg
pop
out
dec
repz
push
sbb
jp
fdivrl
cmp
mov
arpl
jmp
fwait
sbbb
jmp
js
mov
adc
xchg
roll
push
sub
mov
das
cmp
sub
lods
and
xor
push
in
jo
push
cltd
and
outsl
or
cmpsl
test
jp
jecxz
cltd
inc
out
and
or
sub
jg
insb
in
out
xor
enter
sub
push
out
push
std
mov
aaa
jle
scas
sbb
xchg
push
jnp
xchg
je
mov
cmp
icebp
mov
sti
gs
cmp
es
fisubrl
dec
adc
push
push
leave
pop
xorl
repz
cmc
sahf
or
add
dec
nop
out
mov
and
sarb
insb
xchg
pop
jmp
out
sbb
sbb
inc
and
add
push
jle
add
cltd
push
mov
into
rclb
test
dec
jbe
sub
in
in
daa
fucomi
adc
xor
das
dec
insb
loope
xor
ret
repnz
mov
cmp
cmp
repnz
out
mov
push
aaa
testl
mov
pusha
negl
jae
mov
xorl
inc
fs
dec
sahf
jl
xchg
xchg
or
jl
fldcw
inc
jnp
sbb
std
arpl
sbb
pop
stc
mov
mov
test
pop
lahf
sub
hlt
sbb
xor
pop
ds
push
test
ds
lret
pop
mov
test
inc
lods
jnp
sbb
rol
in
xorb
subl
push
iret
add
ja
outsl
mov
in
mov
roll
cmp
stos
jmp
xor
adc
mov
xor
scas
dec
xor
jbe
rclb
pop
out
pop
nop
mov
mov
lret
pop
ret
xchg
int3
stos
pop
add
dec
mov
add
ret
cwtl
and
clc
pop
std
add
or
out
dec
stos
mov
mov
mov
adc
das
jbe
cld
sub
sbb
mov
push
fldt
pop
push
pusha
les
stos
xchg
xor
mov
enter
push
dec
sub
jl
dec
dec
inc
sbb
mov
popf
repnz
popf
ret
inc
xchg
jg
fs
dec
jl
jno
dec
sahf
push
xor
scas
lcall
sub
mov
add
es
popf
push
or
data16
sahf
jle
movsb
add
jno
je
jmp
jb
mov
arpl
loopne
ja
pop
lods
ds
int3
mov
test
and
mov
fstps
arpl
mov
imul
jmp
jo
shlb
inc
sub
sbb
xchg
jmp
dec
jo,pt
inc
fwait
cmp
mov
popa
lahf
in
adc
repz
data16
add
scas
sbb
ds
jb
xor
cmp
stc
outsb
adc
cmp
es
out
ret
jbe
cli
ret
or
push
lods
negb
sub
hlt
sub
sub
push
mov
mov
mov
ss
dec
add
je
mov
faddp
xchg
cld
pop
ds
xor
sbb
in
jo
mov
dec
jge
jmp
jo
stos
xlat
add
jle
xchg
cs
jl
js
stos
cwtl
cmp
repnz
jmp
jae
pop
mov
dec
dec
imul
fists
stc
inc
xchg
or
stos
sbbl
scas
adcl
int
mov
pop
mov
sbbl
movsb
addr16
rcrb
jp
imul
mov
enter
xchg
xchg
push
push
sbbb
in
dec
test
negl
and
xchg
pop
test
inc
andl
push
xchg
sub
jne
sbb
daa
lock
adc
lock
in
fsubs
xchg
in
sub
dec
dec
mov
fmulp
das
in
arpl
sbb
enter
mov
pop
jl
lea
and
je
cmp
jg
dec
inc
nop
ja
sub
pop
sahf
int
in
into
ret
cmpsl
aaa
in
push
mov
and
lds
fs
mov
xchg
xchg
add
leave
cmp
fstpt
jge
xchg
popl
adcb
jbe
xchg
cs
pusha
popf
ljmp
scas
pop
jl
xlat
push
jmp
adc
stc
pop
sub
mov
lret
pop
sub
fmull
push
ja
xor
test
and
and
ja
clc
inc
inc
sub
push
mov
mov
pop
sbb
enter
jg
xchg
lods
inc
imull
call
jno
and
sbb
inc
pop
lock
xor
imul
shld
icebp
xor
cwtl
jg
mov
and
stos
lods
push
stos
cmp
fsubs
jge
jp
pop
xor
jge
pop
sub
xor
lcall
dec
int
out
shl
xor
adcb
inc
add
imul
xlat
scas
cmp
sub
lcall
xchg
xor
mov
inc
push
mov
sbb
mov
imul
and
fmull
jge
jl
jo
lock
xchg
xor
fistl
pop
incl
mov
adc
adc
xor
fwait
or
dec
or
mov
xchg
xchg
iret
mov
xor
ds
iret
sbb
aad
sub
outsl
adc
push
repz
ljmp
inc
cmpsb
jns
mov
pop
test
and
movsl
inc
imulb
pop
es
pop
add
scas
mov
leave
inc
pop
push
jp
ret
lret
add
inc
push
jmp
sub
lahf
gs
xor
mov
mov
mov
dec
adc
test
push
add
iret
pop
lds
into
push
and
push
pop
xchg
sbb
in
fwait
lcall
mov
cmc
xor
out
add
orl
stos
pusha
data16
imul
stc
out
insl
imul
xor
clc
clc
sbb
test
aad
and
jnp
cld
ret
enter
jo
in
lahf
xchg
jnp
mov
in
jne
loope
shll
or
push
jo
push
and
daa
xchg
add
add
sar
aas
cli
jb
fs
int
push
dec
stos
mov
stos
mov
pop
mov
notl
xchg
fimull
data16
icebp
add
xor
push
les
out
jge
lret
add
aas
aaa
sbb
dec
dec
leave
test
stos
push
std
push
outsb
idivl
lret
insl
sahf
jmp
fadds
test
xor
cmp
jno
fiaddl
jmp
test
push
jae
nop
outsl
jp
xchg
into
jbe
icebp
dec
fsubrl
mov
sub
jecxz
popf
repz
push
cmpsl
aam
jl
push
ret
mov
push
cmp
and
push
xchg
loopne
jge
xchg
push
popa
cmc
jne
push
imul
adc
mov
mov
inc
adc
dec
ss
sub
dec
scas
mov
jae
mov
lock
mov
test
scas
arpl
or
sbb
add
ljmp
inc
add
sbb
filds
mov
out
bound
div
sub
aad
insl
vmovq
mov
fcompl
or
out
pop
push
mov
popf
cmp
mov
mov
jg
inc
in
push
xchg
mov
cmp
jecxz,pn
scas
insb
fdiv
lea
loop
ret
shll
vprotw
addr16
jmp
add
ds
data16
xor
insb
inc
enter
stc
lret
sarb
ficompl
adc
jae
xlat
xchg
sub
mov
xchg
movsb
jbe
enter
or
fwait
sti
cmp
inc
mov
cmpsb
pop
icebp
cmp
iret
int
int
cmpsb
int3
in
scas
inc
out
xor
inc
aas
xchg
jg
jp
in
pop
mov
dec
push
sub
mov
les
sub
inc
sub
xchg
shufps
in
dec
push
xor
jae
in
sbb
and
mov
sub
jle
add
sub
mov
cmp
jne
xchg
in
test
lds
push
mov
inc
xchg
aam
cmpsb
push
mov
loopne
shl
out
insl
jmp
mov
ret
cmpb
push
inc
mov
pushf
aaa
lods
add
out
inc
lds
pushf
test
cmp
xor
mov
jmp
lock
mov
fs
inc
into
insl
and
pop
jg
mov
out
rcll
outsl
mov
adcl
jle
pop
jns
fldt
fldt
std
push
mov
shl
inc
loop
mov
dec
fdivrl
or
xchg
cmp
inc
insb
push
clc
test
pop
idivb
jl
pop
shrb
add
mov
pusha
dec
lock
mov
cmp
pop
movsb
dec
add
sub
push
push
int
test
sub
stc
repz
xlat
imul
cmp
inc
adc
out
gs
cmc
pop
scas
jae
xchg
mov
ret
xor
jle
jg
lahf
mov
sub
dec
std
test
and
insb
xor
mov
sbb
push
push
mov
mov
inc
adc
and
mov
mov
mov
movsl
xor
mov
xchg
aad
les
adc
jmp
jle
lret
sti
sbb
ret
movsl
push
sbb
cli
xor
test
nop
enter
filds
adc
inc
out
repz
add
iret
int
rcrb
mov
cmp
mov
sub
imul
adc
jns
xchg
mov
push
or
adc
or
pop
jmp
cmp
xchg
pcmpeqd
cmp
mov
das
jbe
imul
mov
mov
pop
scas
dec
rorl
sub
jecxz
stos
loope
fisttpl
jecxz
push
xor
sbb
jno
xchg
enter
sub
sub
mov
icebp
xchg
aam
xchg
test
addl
adc
testl
jns
pop
dec
cld
xchg
sbb
or
mov
push
adc
adc
pop
mov
jle
push
ja
xchg
and
mov
scas
sbb
xorl
mov
bound
insb
leave
add
and
and
pusha
xchg
xor
mov
mov
stc
jl
pushf
or
ds
jbe
pushf
and
or
arpl
or
stc
lcall
imul
cmpsl
ja
mov
xchg
pop
adc
rorb
sub
das
into
sbb
mov
orb
ja
in
push
in
out
pusha
lods
inc
jno
jmp
lds
scas
jmp
pop
das
jl
sub
add
movsb
je
rolb
push
sbb
jne
jmp
lds
das
jns
xor
push
cwtl
cli
and
mov
xor
mov
les
loopne
popf
imul
ds
add
fwait
pop
stc
add
fdiv
in
lcall
sbb
jge
int
xor
loop
cmp
outsb
xor
jmp
or
out
sub
cltd
sbb
inc
jno
repz
mov
jmp
cmp
inc
divb
push
xorb
mov
add
inc
outsl
inc
push
xlat
xor
scas
sbb
into
inc
sbb
cltd
test
aaa
dec
clc
fwait
movzbl
dec
inc
pop
xor
xchg
dec
xor
mov
fsubrl
insl
xor
dec
cmp
fsubrs
std
sub
push
aam
xor
dec
mov
push
jb
movl
xorb
js
jge
push
dec
sub
xchg
xor
and
mov
insb
into
push
mov
test
lods
scas
leave
data16
mov
pop
mov
or
xchg
sbb
jecxz
mov
lcall
rorb
sbb
mov
jg
call
inc
adc
pop
cmp
pop
xor
out
mov
stc
inc
nop
add
pop
xor
xor
scas
imul
pop
pop
push
ds
mov
hlt
shlb
dec
jae
es
in
test
mov
setnp
mov
mov
sub
arpl
mov
pop
or
add
testb
ret
inc
orl
dec
sarl
jne
cltd
inc
add
dec
and
fs
mov
and
sbb
cs
sarb
sbb
mov
sbb
mov
lahf
ljmp
stos
mov
jecxz
inc
sbb
bound
iret
push
lret
rol
add
addb
pop
lret
dec
cmp
mov
mov
inc
push
pushf
inc
rorb
cltd
sub
rcll
xor
lea
xchg
pop
ret
jmp
ret
adc
aas
mov
aam
insl
jae
insb
loop
lods
ljmp
stos
mov
mov
ljmp
mov
movsl
shlb
movsl
and
sub
lods
mov
dec
fsub
fmuls
daa
mov
movsl
bound
movsb
inc
es
mov
pop
sub
les
mov
mov
imul
inc
nop
jb
in
test
cmpb
add
popa
call
xchg
xchg
adc
inc
mov
lea
fwait
into
imul
inc
xchg
mov
push
push
sbb
push
movsl
xor
push
repnz
inc
jbe
dec
mov
mov
inc
dec
and
jo
rcll
add
ljmp
lock
repz
int3
sbb
divl
dec
lea
clc
cmpsl
js
dec
mov
or
popf
movsl
xor
dec
pop
aam
and
shll
fwait
xchg
mov
clc
xor
or
push
jno
sbb
jg
mov
pop
shll
addr16
scas
dec
and
push
sub
and
or
dec
mov
adc
mov
push
xchg
mov
rorl
mov
dec
jle
test
dec
pop
inc
xchg
pop
jne
pop
fsubrp
in
xchg
testb
pop
xchg
cmp
rcll
mov
dec
adc
xchg
fsincos
loopne
sub
jmp
mov
test
mov
cld
sti
loop
fidivl
stos
lock
pop
aaa
push
adc
enter
mov
shrl
push
xor
inc
pop
lods
push
insl
sub
xor
ret
mov
rcl
pop
fwait
sbb
or
mov
daa
ret
inc
lea
ss
aaa
pop
and
leave
xchg
jl
icebp
or
cmp
mov
mov
in
xor
mov
stos
es
pop
pop
push
roll
cmp
popw
dec
jmp
cmp
jp
jbe
jp
aas
mov
ret
loop
std
mov
pop
add
or
movsl
lods
sbb
push
sbb
stos
fidivrl
add
andb
xchg
cmp
mov
mov
loopne
ja
jg
test
push
loopne
imull
mov
mov
push
roll
and
sbb
or
mov
pushf
mov
sub
jecxz
cld
fnstcw
inc
movsb
push
fcmovne
adc
xor
or
fucomip
add
les
adc
pop
dec
pop
lcall
mov
jns
fwait
mov
sub
fidivs
xchg
test
push
int
mov
les
dec
jmp
movsb
push
lods
jge
cmc
icebp
cmpsl
push
fnstsw
movsl
shl
fistps
xlat
or
daa
es
mov
lea
mov
push
mov
sub
and
pop
mov
adc
sub
fwait
cli
aam
sub
xchg
xor
mov
sub
xchg
push
push
out
pop
les
ss
scas
in
std
push
or
cmc
imul
cmp
xor
xchg
adc
jbe
pop
mov
mov
andb
xlat
ss
insb
scas
pop
js
mov
scas
nop
jge
nop
mov
sub
in
push
setnp
leave
adc
mov
enter
sahf
aad
add
xchg
fldl
lret
jge
xchg
add
push
rcrl
test
enter
out
pop
pop
and
shlb
push
adc
mov
data16
rclb
leave
add
adc
in
iret
in
fldenv
out
test
inc
pop
cmc
cwtl
mov
jne
sti
mov
inc
loop
jmp
aaa
je
xor
lea
mov
dec
add
cmp
test
sbb
pop
data16
rcll
in
mov
mov
lods
lret
and
cmpsb
jbe
lret
loopne
dec
mov
jp
adc
or
cmp
add
mov
ds
jmp
push
xor
lcall
xor
aaa
add
pushf
fmull
jns
nop
cltd
ja
ja
push
imul
imul
sbb
movsb
cltd
add
outsl
ljmp
scas
stc
inc
loopne,pn
mov
jp
js
nop
sbb
adc
into
dec
mov
add
pop
pop
out
test
shrl
dec
mov
mov
cld
mov
hlt
cmpsb
rcrb
xchg
and
das
jg
xchg
aam
cmp
movsl
into
out
xchg
pop
push
insl
sbb
push
mov
clc
jle
push
aad
xchg
outsl
or
xchg
cmp
sbb
test
sub
cmpsl
sbb
fcomip
xchg
or
mov
mov
cmp
and
inc
sti
arpl
repnz
xchg
jg
mov
testb
out
std
mov
test
mov
data16
mov
xchg
jg
imul
mov
fmull
lret
stos
adc
pusha
jne
dec
cmc
ja
movsb
and
icebp
pusha
stos
sbb
imul
es
xchg
xor
aad
mov
adc
test
sbb
xchg
mov
xchg
shrb
add
push
mov
stc
add
sub
fwait
imul
xor
dec
xchg
lahf
out
int
cld
push
js
jp
movb
repz
inc
loopne
dec
cwtl
adc
orl
lods
jge
jmp
mov
pushf
sbb
jae
xchg
adc
cmpsb
jecxz
xor
outsl
dec
xchg
in
aas
lds
int
pop
and
mov
fwait
push
sub
imul
jae
ret
sub
inc
leave
push
xchg
data16
mov
cli
outsl
cmp
popf
test
pop
inc
adc
lcall
int
sbb
push
test
push
cmp
xchg
xchg
fnstcw
cmpsb
repnz
scas
pop
or
lahf
inc
mov
arpl
nop
fnstenv
jno,pt
xchg
mov
scas
inc
inc
or
es
mov
xchg
dec
mov
cli
and
movsb
out
add
or
adc
clc
pop
mov
dec
aas
fistpl
and
mov
add
movsl
stos
pop
push
imul
mov
inc
mov
pop
jnp
shlb
insl
pop
jns
jecxz
xchg
adc
test
sbbl
push
sub
das
jae
outsw
jo
repnz
add
jge
and
dec
cmp
insl
inc
push
lods
xchg
xchg
or
dec
lds
push
lret
scas
lcall
sbb
sbb
jnp
xchg
mov
push
pop
cmc
gs
and
jb
inc
sbb
pop
mov
hlt
movsl
adc
repz
nop
inc
xor
jmp
mov
nop
mov
mov
mov
je
ljmp
inc
aaa
adc
xchg
div
mulb
pop
and
dec
sarl
notb
mov
dec
jl
push
out
inc
mov
adc
std
add
adc
clc
add
xor
rolb
rcrl
inc
add
mov
mov
xor
fnstsw
jmp
pop
jns
push
jb
cmp
jg
loopne
in
mov
aas
jmp
rorl
inc
femms
testl
jge
sub
push
xor
into
adc
ljmp
es
loopne
push
sub
out
xor
stc
and
in
jo
clc
lods
lds
mov
jne
and
pop
cwtl
sub
mov
push
std
roll
movsl
sub
imul
mov
ret
mov
scas
lahf
mov
int3
mov
not
test
hlt
or
add
test
mov
adc
lock
pop
xchg
sbb
mov
inc
jo
inc
addr16
out
push
xchg
add
adc
mov
pop
rcl
pushf
lock
add
cmp
fmulp
inc
mov
xchg
xchg
push
out
cmp
and
out
sub
mov
jg
add
lock
popf
xchg
xchg
into
inc
ja
mov
mov
dec
sarb
test
pop
push
insl
mov
add
out
mov
aam
stc
lods
push
ds
lret
cmp
aam
inc
inc
jae
sub
pop
xchg
insb
iret
cli
xchg
mov
imul
pushl
push
cmp
jmp
insb
leave
pop
imul
mov
mov
jle
or
lcall
fpatan
repz
shrb
in
fnstsw
jmp
dec
aas
adc
push
jmp
mov
xor
ret
cmc
add
test
jnp
inc
sbb
addr16
add
inc
inc
inc
movsl
es
jnp
push
cmp
dec
push
pop
addr16
arpl
xor
inc
out
adc
shl
repz
pop
jno
movsl
jl
pop
or
or
out
decl
fists
inc
in
or
or
insb
sub
xor
xor
in
and
jecxz
mov
push
push
fadd
lret
stc
shlb
mov
repnz
nop
loop
mov
popf
test
mov
pusha
mov
repnz
lahf
mov
pushf
sub
mov
mov
mov
mov
gs
sbb
mov
push
sub
push
inc
out
pop
adc
leave
sbb
mov
adc
insl
lret
test
inc
hlt
pop
rcrl
cmp
add
push
enter
dec
push
aas
ljmp
add
cli
and
sbb
add
jmp
out
adc
repz
mulb
push
sub
daa
inc
pop
inc
xchg
lock
pop
iret
fbstp
loope
fucomp
pop
cmp
dec
dec
movsb
fmull
das
or
pop
adc
jb
sub
inc
push
icebp
test
xchg
imul
or
dec
into
daa
sub
dec
std
stc
lock
adc
lahf
push
pop
ret
jae
push
jmp
inc
and
test
pop
je
daa
inc
and
pop
testb
mov
out
daa
jno
jp
push
incb
int
xchg
mov
std
lods
push
pop
and
cmp
scas
add
lock
shlb
ds
xor
lret
in
sub
sub
sub
movsl
filds
loope
dec
cmp
fstps
loopne
scas
jg
pop
loopne
lods
bound
sub
popf
call
sbb
lret
rorb
inc
arpl
xor
pop
and
sarw
shlb
dec
mov
shll
and
pop
inc
jecxz
mov
inc
cmc
movb
xchg
leave
add
fstps
nop
dec
push
rolb
ss
push
pusha
cs
and
popa
cli
fisubs
pop
mov
nop
fmuls
mull
jl
push
dec
push
imul
popa
dec
adc
xor
shlb
add
and
pop
lahf
loop
and
cld
xor
xchg
cmp
ja
fists
jecxz
imul
aad
dec
out
sti
clc
xlat
push
insb
int
inc
popw
enter
test
or
and
jmp
iret
loopne
xor
pop
flds
int3
out
test
addl
addr16
sahf
xlat
xor
pop
andb
data16
out
test
pop
mov
dec
jbe
and
das
xchg
jns
dec
push
mov
cld
movsl
push
and
rcl
jmp
sahf
push
fsts
mov
mov
adcl
clc
dec
sub
mov
mov
add
loopne
lret
jg
jp
data16
dec
out
mov
pusha
xor
mov
jbe
dec
add
jne
cmp
jmp
adc
repnz
xchg
or
arpl
jg
pop
dec
nopl
mov
rorl
or
sub
addr16
mov
push
push
mov
nop
addr16
stc
push
jg
xchg
push
add
pop
scas
jne
mov
insb
mov
lea
stc
and
popa
add
insl
test
push
sub
jge
and
ficompl
cmp
push
xchg
mov
adc
push
sbb
sub
pop
mov
inc
push
sub
xchg
cmc
stos
add
push
mov
jb
and
sbb
cmp
bound
mov
jle
jno
and
jb
or
test
sbb
in
pop
or
inc
clc
dec
sub
lea
xor
in
pop
lds
rolb
add
adc
jge
in
and
push
mov
pusha
ja
xchg
xchg
movsl
lret
das
outsl
icebp
jle
hlt
movsbl
push
dec
mov
jge
je
loope
xor
xchg
pop
jge
jns
xchg
cmpsl
mov
sub
add
pop
and
nop
dec
nop
xchg
jne
adcl
ret
rorb
sbb
or
cmc
scas
pop
rcrb
imulb
fistps
add
adc
sbb
add
cld
lods
mov
movsb
and
pop
cmpsl
add
rorl
xchg
pop
mov
mov
cltd
fwait
sbb
js
mov
jns
fsubs
adc
dec
ss
hlt
cmp
sub
mull
mov
movsl
pop
cmpsl
push
arpl
mov
jnp
pop
test
adc
dec
cld
ljmp
lahf
adc
iret
sbb
jmp
repz
inc
test
cmp
xlat
mov
mov
out
push
push
xchg
les
jns
mov
std
ja
leave
mov
mov
xchg
aas
std
pop
dec
inc
push
cmp
xor
in
sbb
sahf
add
ss
lea
pop
pop
pop
jge
pusha
in
mov
mov
cld
in
adc
pop
jmp
arpl
fwait
xor
divl
in
call
inc
push
push
push
das
xlat
hlt
lock
outsb
adc
lcall
inc
cs
fistpll
ds
scas
add
jns
mov
test
mov
xor
sbb
inc
bnd
lret
fadds
divl
shl
push
inc
sub
andb
push
decb
inc
dec
bswap
jae
push
cmp
sbb
lcall
movsb
inc
xchg
adc
sbb
movsl
jno
jle
pop
cltd
sti
pop
out
jge
ja
lods
sub
sub
dec
add
stos
ret
sub
inc
es
dec
xchg
pop
jp
cmp
outsl
sti
inc
pop
in
fwait
cmp
and
push
out
and
push
jbe
repnz
stc
mov
fidivl
das
les
int
adc
sub
adc
cmpsl
aas
mov
lahf
stos
in
rorl
iret
inc
insl
pusha
jl
push
addr16
rolb
in
mov
cld
mov
in
dec
bound
push
test
xor
lahf
in
outsb
jae
fistpl
mov
mov
and
cltd
stos
in
mov
dec
cmp
mov
das
sub
mov
jp
or
inc
leave
shll
dec
shrb
test
aad
mov
inc
add
sub
xchg
daa
scas
push
arpl
cwtl
cltd
ret
xor
insb
xchg
inc
popa
daa
and
push
mov
xor
data16
mov
push
mov
dec
into
mov
pop
insb
sti
mov
sbb
fsubrs
adc
mov
pop
mov
jns
out
sub
pop
clc
jnp
jge
je
mov
pop
outsb
push
lods
aad
mov
jae
andb
inc
hlt
cmp
ljmp
xchg
shll
dec
movsb
or
aaa
sbb
lret
cld
mov
push
mov
aad
xor
push
subl
jne
in
test
mov
xor
cmpb
outsl
mov
lahf
xchg
orl
pop
adc
fdivrs
xchg
stc
push
sub
sbb
dec
cmp
shrl
or
mov
jne
mov
in
mov
in
cmp
cltd
jo
jns
push
lret
xchg
inc
xchg
push
mov
xor
xor
int3
or
push
imul
outsl
pop
mov
dec
adc
ret
fnsave
fistpll
cmpsl
out
stos
fldl
hlt
and
dec
shll
ds
push
movsl
nop
negb
in
cmc
cld
ret
adc
pop
fwait
and
inc
mov
sub
xor
outsb
cmp
popa
and
in
xor
and
or
mov
xchg
jnp
add
jno
loope
call
xchg
cmp
push
jmp
shll
jb
fldl
xor
sub
out
int
rorb
mov
je
push
sub
or
std
icebp
aas
stc
sbb
ficoms
leave
lea
mov
ja
fnstsw
push
scas
and
xor
xlat
sbb
je
gs
cli
sbb
push
sbb
dec
mov
sbb
or
sbb
aaa
jae
push
dec
xchg
stc
pop
daa
in
push
add
fadd
out
leave
cld
andl
jbe
mov
jge
dec
xchg
cmp
rclb
sahf
cmc
lcall
mov
out
xor
jg
jns
fdivrs
repz
rclb
push
out
into
sub
imulb
pop
dec
sub
or
cmp
shll
xor
or
dec
negl
lods
adc
insb
pop
xchg
sbbl
cmpsl
lods
data16
sub
push
jnp
scas
mov
out
mov
push
pop
test
movsl
mov
and
xor
mov
push
cmp
rcrl
mov
mov
sbb
xchg
andb
dec
faddl
les
dec
iret
pusha
cmp
mov
rcl
out
push
test
popf
rorb
cld
cli
cmpsb
inc
loope
jmp
jmp
xchg
sub
pushf
pushf
xchg
rol
mov
bound
int3
jo
or
dec
add
dec
jno
mov
xor
loope
movsb
cmp
insl
lods
push
jns
mov
popa
or
sub
ficomps
xchg
stos
mov
xor
loop
pop
inc
addr16
in
xor
pop
pushf
ds
test
inc
sbb
jp
enter
sbb
mov
mov
xor
push
inc
test
mov
or
cmp
mov
add
jle
ss
into
fcomps
adc
cltd
xchg
ss
bound
fldcw
ds
sub
cmp
lods
hlt
fwait
mov
shr
mov
sub
loope
cltd
aad
push
push
mov
sbb
into
fwait
xor
das
js
sub
push
pop
mov
cli
mov
jae
push
cmpb
pop
loope
sbb
popa
out
testl
pop
jb
sbb
or
insb
cs
mov
test
ds
adc
add
or
jbe
es
cld
cmp
mov
inc
jmp
mov
ljmp
ds
loopne
jae
ljmp
lock
jb
mov
sarl
inc
jg
fdivrl
fwait
and
mov
mov
mov
sub
sbb
pop
pop
inc
fcmovbe
test
add
mov
push
fistpll
sub
lods
cmp
mov
rorb
cmpsl
push
sahf
push
xorb
cs
cwtl
xchg
icebp
inc
call
dec
pop
xchg
es
pop
loop
aad
mov
std
addr16
pop
loop
and
dec
sub
test
fstpl
jmp
iret
andl
pop
fildl
push
xlat
jnp
mov
popf
lret
xor
push
lods
inc
lock
stc
push
nop
clc
jnp
or
subb
mov
jecxz
xor
or
push
sbb
dec
dec
aaa
das
pushf
stc
rorl
adcb
jo
dec
ret
xor
in
sub
mov
movsb
mov
mov
and
jnp
push
jl
push
fildll
jl
mov
push
dec
sbb
sub
lret
pop
jns
dec
fs
in
dec
mov
out
dec
mov
xchg
push
push
pushf
or
jmp
imul
sbb
sbb
imul
mov
shlb
and
cmp
adc
loopne
cmpsb
scas
mov
xchg
sub
leave
pusha
mov
call
adc
fwait
fs
mov
push
out
andl
jo
sbb
jle
push
pop
or
push
xorb
and
ljmp
inc
outsl
jae
xchg
dec
pop
fisubs
andl
mov
sti
pop
stos
lret
xlat
inc
cmp
jb
jnp
daa
jg
xchg
fbstp
cld
jae
dec
mov
iret
jl
sahf
mov
mov
test
repz
dec
fstps
add
pop
ja
sahf
es
sub
mov
mov
stc
mov
aaa
dec
test
daa
or
and
push
adc
lea
mov
pushf
and
mov
testb
sbb
scas
fstp
mov
ret
test
mov
ror
xor
mov
mov
cmp
pop
insl
inc
xchg
dec
and
sub
sarl
shrb
sbb
dec
loop
jmp
ja
xchg
mov
mov
adc
dec
int
dec
cld
divl
enter
jnp
mov
in
fidivrl
addl
call
call
pop
push
jnp
cwtl
repz
cmpsl
mov
scas
mov
inc
dec
call
jmp
add
cmc
cmpsl
pop
je
add
arpl
jns
aam
sbb
mov
sbb
nop
je
pop
icebp
jg
fldt
add
incl
mov
mov
and
iret
dec
mov
pop
int3
test
orl
xchg
lods
mov
fmull
pushf
into
shlb
icebp
sub
inc
cmp
sub
mov
popf
add
xchg
nop
arpl
or
xchg
inc
scas
lcall
mov
mov
lahf
ret
and
fchs
or
fstps
pusha
pop
lcall
filds
push
mov
lds
std
xor
mov
mov
cmc
test
rolb
adc
add
jmp
jmp
sbb
dec
call
fldt
in
movb
sub
sub
and
fs
dec
gs
jae
xchg
jg
cli
pushf
and
push
xchg
es
fistl
aad
ret
nop
pop
out
pop
in
mov
out
stc
sbb
out
mov
icebp
les
add
movsb
dec
fcoms
nop
out
fbld
pushf
lock
jbe
daa
xor
mov
addr16
outsb
jbe
jecxz
mov
fldt
or
cmp
loop
xchg
xor
lret
leave
xor
and
aad
das
cltd
adc
cmp
xchg
fstp
outsb
push
adc
sbb
push
pop
faddl
shlb
sbb
lds
stos
ds
pop
jp
or
mov
cmpsb
imul
or
je
jmp
in
aas
std
das
pop
adc
dec
xchg
cli
scas
imul
xchg
bound
arpl
push
insl
sbb
call
cwtl
into
jno
cmp
cmp
shlb
mov
jno
leave
cltd
lahf
pop
push
sbb
inc
push
mov
jns
lock
lds
or
sbb
sbb
dec
pop
pop
dec
movsl
and
xor
push
ss
mov
dec
cmc
subl
mov
sub
sbb
pop
popa
rorb
inc
push
add
or
dec
or
shll
cltd
sub
imul
xor
lock
mov
dec
ret
push
xor
mulb
jae
fiaddl
inc
mov
pop
adc
movsl
mov
shrb
roll
add
outsl
and
nop
sbb
popa
inc
out
popf
insl
ds
inc
test
mov
cmc
ds
adc
ljmp
cwtl
call
or
aaa
push
imul
fldt
arpl
ret
cmc
or
push
lret
aas
mov
pop
fistps
xchg
loopne
bound
sub
and
push
mov
mov
and
adc
adc
cmpsl
imul
adc
hlt
lods
mov
aad
pushf
lock
xchg
stos
daa
cmp
int
xor
shl
lret
stos
das
adc
lods
pop
mov
or
in
sbb
subl
xchg
int3
call
in
mov
fsubl
repnz
mov
sub
ret
xlat
add
jnp
dec
inc
dec
call
out
mov
jmp
lea
sarb
lods
jnp
xor
mov
adc
shrb
int
les
mov
xor
pusha
movsb
lcall
mov
mov
mov
repz
ss
paddusw
mov
lret
int3
or
in
and
jecxz
enter
or
loope
and
xlat
lds
xor
sub
clc
ss
in
iret
add
cmp
pop
andl
xor
and
mov
adc
inc
bound
push
lcall
fidivs
push
adc
mov
iret
shr
inc
dec
cltd
pusha
aam
ja
jne
cwtl
shlb
fstpl
inc
adc
out
push
fmuls
test
xchg
repz
scas
lds
daa
je
sbb
lcall
mov
outsl
mov
and
movsb
lcall
mov
jmp
mov
lods
aas
cmc
in
push
sti
lds
push
or
and
xor
xchg
adc
imul
call
sbb
pop
cmp
mov
xchg
or
xchg
cmpsl
push
adc
das
ja
cwtl
in
jb
jge
dec
mov
pop
fstps
andb
loop
jle
jo
ret
push
fwait
pop
and
lahf
pop
insl
popf
add
push
mov
mov
sbb
push
idivl
push
sti
dec
jbe
jbe
or
aaa
sbb
or
shlb
fwait
push
pop
outsl
sub
fists
cltd
xchg
aas
repz
jecxz
inc
pop
js
dec
lea
inc
push
testl
or
cltd
mov
adc
lret
add
cmpsb
push
in
ficoml
mov
rcrl
xchg
jne
in
xor
sahf
pop
stos
das
inc
sti
imulb
in
pop
outsl
loope
adc
mov
fs
inc
jno
lret
xchg
jnp
sub
dec
loop
adc
ds
popf
xchg
xchg
lea
out
popa
jmp
push
movsb
imul
cmp
dec
mov
xchg
scas
cld
test
cmpsl
stos
pop
mov
mov
and
sub
adc
into
popl
jge
scas
sbb
lahf
mov
push
mov
or
daa
push
imul
dec
inc
jbe
lods
pop
xor
leave
ss
push
push
jnp
sub
scas
pop
adc
pop
and
sbb
mov
es
lea
mov
out
test
xorl
or
push
push
push
fdivp
dec
add
cmp
mov
pop
testl
and
test
dec
insl
pop
pop
dec
leave
pop
shlb
xchg
insl
ja
mov
cld
arpl
ds
xlat
inc
ret
popa
out
loopne
fildl
xor
pusha
jne
sbb
mov
sub
inc
test
cmc
cmp
shlb
push
js
scas
cmpsl
fisubrl
xchg
push
or
test
pop
jge
lcall
pop
leave
daa
mov
and
push
jp
clc
out
jne
adc
pop
inc
mov
mov
cmpsl
adc
xchg
nop
mov
mov
stos
ror
push
pop
mov
push
rolb
mov
jbe
sbb
or
fldenv
andb
fmull
inc
jecxz
or
or
mov
push
push
add
mov
xchg
pop
cmp
mov
shlb
je
gs
fmuls
ficoml
das
pusha
cmp
hlt
adcb
jnp
ss
jbe
mov
mov
xchg
jno
sbb
sub
cmpsb
sub
push
popf
xchg
jp
pushf
pushf
out
loop
test
rcrb
add
sub
lahf
popf
scas
push
mov
in
pop
pop
push
xor
sbb
shlb
cli
pop
inc
jns
pop
stos
mov
sub
cs
xchg
in
push
in
and
divb
dec
inc
mov
aad
mov
repnz
scas
inc
inc
and
lods
push
mov
clc
daa
scas
in
cwtl
pusha
outsb
shll
or
ffreep
in
inc
xchg
jg
or
popa
jp
loopne
push
and
wbinvd
jge
in
sub
loope
inc
mov
sub
subb
das
sub
sub
jb
jnp
aam
sbb
ret
jbe
sub
push
cmp
mov
clc
adc
mov
out
mov
xchg
cld
jmp
jg
mov
jnp
cmp
mov
sbb
pop
fsubp
frstor
jg,pn
sub
repz
cmpsb
or
xor
and
es
sub
inc
pop
es
push
sti
ja
add
setg
mov
ret
or
jbe
mov
sub
fstpl
fisttps
daa
jge,pn
push
sbb
lea
mov
fcmove
test
inc
or
push
cwtl
or
sbb
out
push
jmp
jne
dec
pop
lods
fmulp
lods
push
cmp
mov
xor
aad
imul
in
or
lds
jmp
and
xchg
in
mov
push
cmc
lods
test
and
mov
movsb
jecxz
stos
inc
xchg
cs
arpl
jnp
cmp
pop
xor
fs
insb
inc
cmovp
fcomip
iret
xor
lock
adc
aam
hlt
xor
pop
in
pop
lods
jge
or
loope,pn
xor
cltd
sbbl
xchg
dec
xor
jo
pop
mov
cmp
mov
dec
aad
sbb
stos
jl
sub
lret
test
jle
sahf
sub
add
dec
push
push
rclb
shll
cmpsl
inc
movsb
out
adc
add
sbb
rolb
and
xchg
pop
adcb
scas
xchg
mov
jnp
test
xchg
lods
icebp
xchg
ficoml
pop
or
pusha
jecxz
mov
out
inc
jae
icebp
in
pop
pop
jae
and
call
mov
popf
dec
ljmp
xor
cmp
mov
mov
and
add
inc
mov
test
fwait
test
fs
movsb
xchg
or
push
ret
xor
xor
mov
int
lea
cli
cmpsl
lahf
std
xor
and
sbb
shlb
xchg
xchg
scas
lds
pusha
xor
sbb
xchg
in
mov
jmp
pop
ss
sub
dec
lahf
lret
add
aam
xchg
pop
inc
jle
arpl
je
adcl
xor
into
xchg
xlat
and
xor
push
jmp
loope
xchg
add
clc
mov
das
gs
in
sbb
mov
and
fistpl
xorb
aas
cli
sub
lcall
jnp
sub
cmp
mov
bnd
dec
adc
mov
fucomi
daa
mov
jge
pushf
inc
fadds
lcall
notb
add
cmpsl
outsl
inc
pop
jle
lods
xchg
in
sahf
push
jb
xchg
xchg
stos
sbb
sbbb
out
cmp
dec
cltd
jns
addl
daa
arpl
sbb
shll
aaa
inc
cld
test
mov
dec
shll
xor
inc
shr
push
and
sti
jne
mov
mov
adc
adcl
movsb
sbb
xor
jo
mov
dec
xchg
jle
stos
dec
adc
stos
shll
in
mov
imul
sub
sbb
ret
ja
pop
hlt
cltd
hlt
test
ret
idiv
and
aaa
mov
call
jne
xchg
andb
mov
pushf
cld
sub
pop
fnstenv
test
mov
pop
imul
jns
push
hlt
loop
mov
test
add
and
cmp
aaa
lea
imul
out
and
loop
pop
cs
cmpsb
mov
mov
mov
add
pop
dec
inc
xchg
ret
mov
int
pop
inc
out
add
jbe
mov
sub
push
and
loopne
adc
xchg
xchg
xor
and
push
out
pop
ret
add
stos
in
pop
dec
pop
pop
mov
jbe
jge
push
sbbb
cmp
mov
push
aaa
pop
mov
insl
xchg
push
cld
bound
iret
movsl
add
lret
mov
loopne
popf
inc
mov
imul
and
lcall
and
cwtl
test
mov
popf
fdivrl
fidivrs
jae
in
jge
pop
das
stos
jae
test
push
mov
insb
mov
jae
je
xchg
lock
jo
adc
cmp
aas
dec
cmp
mov
ret
pop
dec
pusha
inc
jne
cs
ja
push
xchg
pop
sbbb
mov
mov
mov
arpl
mov
or
js
jae
push
fimull
push
std
in
push
pop
dec
mov
adc
addr16
jp
pop
repz
insb
ficompl
inc
mov
mov
jge
lret
outsb
sub
add
xchg
lock
dec
pop
sti
mov
repz
mov
clc
sbb
fwait
int
sbb
cmp
das
outsl
andb
mov
push
into
cltd
push
insl
dec
prefetchw
dec
mov
rclb
fmuls
pop
xchg
daa
inc
ror
adc
int
inc
xacquire
in
pop
push
inc
ljmp
adc
dec
fucomi
xor
dec
outsb
xchg
ret
popf
xlat
ja
jmp
outsl
fcmovnb
mov
mov
in
ret
icebp
xor
jno
pushf
push
mov
jbe
in
cld
or
out
jge
pop
push
cmc
xor
loop
add
mov
in
icebp
insb
jno
sbb
lock
dec
enter
push
push
or
fcoms
or
xor
and
inc
push
leave
inc
mov
fxch
inc
mov
xchg
xchg
fistps
mov
adc
xor
jp
mov
push
pop
sarl
std
outsl
popa
xchg
lock
and
insb
dec
sbb
cli
jl
mov
lods
and
and
popa
divl
std
scas
ljmp
cltd
inc
ret
and
dec
mov
or
inc
pop
mov
push
fisttpl
jns
popa
lret
push
sbb
lock
lahf
jae
sbb
mov
adc
mov
roll
dec
add
daa
rorb
add
and
xchg
cld
enter
jmp
mov
mov
out
das
ss
xor
mov
or
jns
daa
addr16
bnd
inc
xor
das
fmul
ja
aas
cmp
rcll
hlt
nop
xor
fiadds
inc
mov
movsl
push
stos
pop
or
repnz
push
leave
sti
popa
insl
ljmp
out
out
test
or
jge
out
and
mov
pop
loop
lds
jp
push
das
xor
cltd
imul
push
jb
or
push
lahf
hlt
outsb
lret
popw
in
mov
push
sub
sbb
fs
adc
in
xchg
adc
insl
sbb
loop
inc
jns
cmp
xchg
inc
add
jl
mov
add
inc
aad
dec
sub
daa
add
adc
mov
cmp
adc
cs
sar
adc
sahf
mov
pop
int3
push
test
addr16
clc
sar
movsb
cmpsb
mov
addr16
add
cmpl
out
dec
je
into
out
jmp
sahf
xchg
jne
or
sbb
test
stos
movsb
fstpt
cmp
xchg
cmc
out
push
ja
test
mov
daa
pusha
push
mov
mov
pop
stos
xchg
testl
xchg
xor
xor
fwait
jb
scas
xchg
ja
scas
shl
xchg
dec
cs
inc
dec
movsl
ljmp
inc
adc
cmpsb
push
inc
and
pop
mov
push
out
sub
test
pushf
rcr
or
pop
popf
push
shr
sti
neg
ss
test
inc
xor
daa
scas
or
imull
cmp
std
inc
lret
xchg
sub
sbb
push
mov
mov
and
insl
or
dec
jno
or
push
mov
ja
push
sbb
divb
jge
outsb
sbbb
in
pop
mov
sar
xor
push
jae
mov
scas
jae
jecxz
subl
js
jno
je
or
jl
stos
mov
adc
addr16
scas
push
add
ja
movsb
lahf
mov
test
cmpsb
or
int
je
inc
pushf
lea
inc
movsl
mov
aaa
pop
sti
mov
cmp
sbb
xchg
xor
inc
in
jbe
jo
jno
movsb
xchg
dec
shll
xlat
int3
dec
std
ret
sbb
add
das
out
push
mov
testl
dec
je
jg
nop
fcomps
inc
enter
xchg
and
xchg
imul
inc
fisttps
mov
xchg
jb
out
or
and
push
std
xchg
subl
lea
mov
cmp
clc
jne
mov
stos
xor
xor
loopne
add
push
movsb
inc
popf
out
mov
push
fnstenv
iret
sub
ja
jmp
call
nop
jecxz
mov
pop
cmpl
movsb
pusha
pop
mov
sub
cmp
mov
dec
test
push
sub
lods
cwtl
push
call
pop
mov
adc
rolb
pop
pop
sub
cli
push
shlb
pop
ret
out
cmp
mov
repz
mov
lods
sbb
jnp
loope
lahf
mov
dec
daa
sbbb
in
push
add
fcmove
inc
cmpsb
lock
xchg
lods
pop
xchg
rolb
cld
push
jmp
iret
dec
jae
mov
and
and
int3
and
out
mov
cmc
aam
out
pop
push
mov
xor
aaa
inc
ja
xchg
adc
xchg
pop
stc
xor
fcompl
cwtl
loopne
push
jg
pop
test
fisubrl
ret
or
fidivs
and
add
mov
mov
pusha
dec
enter
fs
dec
inc
js
lahf
and
mov
mov
cli
gs
jb
icebp
sbb
ret
xchg
push
adc
xor
sub
pop
push
imul
mov
pop
mov
out
sub
add
mov
xor
pop
sbb
jae
out
mov
cmp
pop
xor
mov
cmp
sbbb
xlat
pop
pop
into
lods
cmp
or
mov
pop
pop
cmpsb
xor
icebp
rcll
adc
insl
fcmovbe
and
loop
cmpl
cmp
scas
or
out
addr16
mov
lock
test
xchg
lahf
and
hlt
sbb
cmc
inc
psadbw
sub
ds
inc
mov
push
pop
push
fsubp
inc
call
movsb
xchg
add
orb
adc
stos
cli
xor
popa
jo
jno
or
push
clc
cmp
jb
pop
add
jecxz
and
jno
testl
in
sbb
incl
test
shll
jle
push
add
icebp
xor
ret
sub
mov
mov
xchg
pusha
cmp
es
push
or
outsb
add
popf
mov
lret
pop
lahf
clc
clc
mov
in
and
jmp
xchg
or
in
or
lods
hlt
or
jp
daa
inc
cmp
movsb
mov
add
out
mov
loopne
fidivs
mov
xchg
mov
cli
or
xor
inc
jo
inc
mov
mov
pop
inc
shrb
push
xchg
pop
cmp
push
jg
rol
adcb
adc
in
xor
xchg
mov
mov
adc
mov
and
leave
dec
cmp
and
sbb
icebp
jle
ja
adc
imul
loop
outsb
cld
in
mov
fs
test
loop
add
sbb
es
add
orl
sub
dec
ds
bound
dec
jecxz
rolb
out
push
lock
ljmp
mov
xor
ds
xchg
push
ss
xor
sbb
cmpsl
mov
out
insl
and
js
mov
insl
jecxz
xor
add
and
push
int
adc
xchg
jmp
mov
movsb
jns
gs
nop
and
mov
rcl
ja
fsubrs
call
sub
dec
dec
pop
jmp
cwtl
hlt
push
push
test
or
or
mov
inc
mov
aas
or
enterw
mov
jae
aas
dec
scas
arpl
jmp
mov
addb
gs
jb
dec
jecxz
push
outsl
dec
stos
cmpsl
popf
repz
std
out
cltd
imul
add
xor
push
inc
imul
and
xor
in
add
or
push
adc
push
jg
inc
xor
mov
std
lret
push
js
test
mov
popa
repz
jp
pop
mov
jecxz
fwait
pushf
inc
ficompl
jl
aad
mov
stos
lahf
push
lods
and
addr16
mov
inc
push
dec
mov
adc
sub
inc
sbb
bound
xchg
push
pop
fimuls
nop
in
fsub
addr16
fistpl
dec
loope
add
repnz
ret
fcoml
lds
mov
inc
sub
fcompl
icebp
jge
imul
dec
sub
lock
jne
push
int3
lret
pop
sub
test
and
loop
mov
mov
mov
mov
out
int3
xor
daa
push
outsb
sbb
lret
lea
les
arpl
aam
pop
adc
nop
aaa
mov
aad
ret
push
jbe
cmp
insb
addr16
xor
xchg
xchg
mov
push
and
int
cmp
and
lahf
push
pop
dec
out
aaa
add
repnz
inc
int
out
push
push
rcl
sbb
pop
sub
loopne
test
out
cmp
inc
adc
sub
mov
rcll
pop
add
cld
sbbb
pop
mov
xor
or
cmpsb
dec
push
aas
movsb
loop
rolb
popa
pushf
cmp
loope
sub
push
test
xchg
push
or
dec
clc
movsl
mov
sahf
mov
mov
xchg
adc
and
incl
lcall
jns
and
jle
insb
aas
push
test
or
jg
sub
insl
mov
mov
ljmp
insb
test
popf
pop
sbb
adc
xchg
or
and
fwait
imul
push
mov
and
jnp
mov
xchg
in
mov
inc
sbb
xchg
lds
xchg
lods
sbb
inc
mov
add
sti
mov
pop
sbb
mov
test
pop
mov
or
sbb
add
adc
retw
lods
or
lea
add
imul
xor
pop
in
push
repnz
into
or
xchg
jle
repz
ss
popa
xchg
icebp
push
cmp
out
clc
mov
sbb
jle
fildll
movsb
shlb
pop
inc
imul
add
fbstp
gs
fstpt
cmp
xchg
dec
push
and
cmpsb
xchg
loope
sbb
in
data16
aaa
inc
dec
in
insb
stc
mov
add
jge
or
pop
pop
fucomi
and
push
mov
xor
iret
insl
push
stos
sub
enter
sahf
out
cmc
fimull
mov
xor
add
fsubs
dec
fdivr
lahf
ret
add
pop
sub
movsb
and
fisubrs
jae
cmp
das
fcomp
fs
shrl
roll
lods
push
sub
pop
cwtl
imul
data16
dec
cwtl
xchg
rorl
xchg
sarb
and
orb
insb
xchg
cwtl
dec
cmp
sub
ret
ret
jl
mov
std
jmp
lds
rcll
jmp
stc
in
sub
add
mov
fsubl
repz
xor
pop
inc
mov
popf
add
in
pop
push
int
add
aad
add
les
adc
insl
inc
leave
lahf
es
aad
out
pop
mov
xor
in
sbb
push
addr16
js
or
cli
loop
lcall
inc
dec
cli
inc
dec
add
lock
xorb
in
sbbb
xchg
jmp
sbb
or
lods
or
pusha
sbb
sub
pop
into
imul
xlat
scas
mov
les
mov
pushf
push
pop
repnz
push
pop
pop
je
jae
ror
data16
shrb
pop
mov
mov
add
jns
dec
lods
push
out
add
mov
adc
imul
mov
test
cs
push
lods
clc
inc
xchg
cld
or
jnp
arpl
or
add
adc
adc
add
xlat
xor
jmp
shll
jo
dec
jo
jg
push
pop
xchg
ds
dec
or
cmpsb
idivl
push
das
jle
je
sahf
inc
aas
popf
lods
stos
cmpsl
mov
fisttpl
pop
push
push
fistpl
daa
pop
jle
jno
andb
out
hlt
push
cmp
ret
or
lahf
ds
loop
call
or
cli
andl
jbe
and
movsb
xor
push
jnp
dec
rcrl
loopne
out
rclb
cmp
mov
ret
inc
xor
add
xchg
pop
out
jnp
cmpsb
outsb
rcrb
les
xchg
movsb
or
pusha
scas
js
fwait
aam
inc
jbe
mov
je
or
imul
jbe
mov
stos
sarl
scas
jbe
cmp
dec
xor
mov
adc
adc
and
xchg
mov
xor
mov
mov
stc
inc
push
out
dec
mov
push
sbb
aaa
arpl
out
ja
and
xor
dec
sar
fstl
mov
mov
aas
outsb
rcrl
lret
inc
mov
fisubs
addb
dec
mov
icebp
push
pop
dec
sub
test
test
pop
jmp
test
xchg
leave
data16
inc
sub
cmpsb
inc
jb
mov
int3
aam
pop
dec
scas
xchg
inc
jmp
jle
insl
lods
push
dec
inc
mov
cwtl
faddp
cmpsl
push
dec
orl
inc
inc
aaa
data16
clc
jmp
loop
adc
sbb
dec
shrb
pop
mov
fcmovnb
mov
fcoms
mov
cwtl
pop
mov
pop
out
push
xor
mov
icebp
or
or
outsb
jne
dec
dec
push
mov
popa
rolb
mov
insl
test
rolb
fs
cmp
cld
lods
mov
imul
push
pop
scas
fcompl
test
mov
pop
and
push
mov
mov
testl
sahf
fcomps
fisubrl
adc
repz
add
mov
add
jl
stos
cwtl
pop
pop
cld
fwait
mov
dec
fdivs
fmuls
add
sbb
pop
adc
sbb
leave
and
xor
dec
cs
and
notl
sahf
dec
shrl
repz
mov
xchg
jle
mov
mov
out
nop
mov
js
ljmp
mov
movsb
loop
adc
stos
mov
and
loop
sbb
sarb
jle
fdivrl
mov
jp
js
lock
and
lea
dec
push
fwait
loope
aas
sahf
daa
es
cli
repnz
push
dec
aas
pop
dec
pop
jbe
scas
mov
imul
test
insl
fisubl
mov
xchg
cmpsl
mov
aas
jo
sbb
cwtl
adc
insl
xor
ja
add
jae
loope
mov
in
pop
int
add
mov
iret
adc
repnz
leave
ret
xchg
mov
pusha
mov
aam
jns
cmp
leave
adc
js
sbb
mov
lret
mov
jl,pt
push
add
js
fdivr
mov
mov
frstor
imull
push
push
out
js
xlat
iret
je
push
les
or
imul
adc
adc
adc
fcomi
test
ds
in
xchg
sbb
mov
imul
mov
or
or
stos
popf
neg
in
fs
popf
lds
mov
or
jg
loope
mov
int
mov
add
ret
ljmp
or
pop
je
xor
pop
std
stc
sbb
pop
out
enter
cltd
xor
mov
push
cli
pushf
aam
scas
push
mov
xor
iret
push
mov
fs
push
mov
lods
inc
inc
or
cmp
push
movsl
mov
imul
fwait
enter
inc
adc
shrl
xor
mov
in
jecxz
insl
call
ret
pushf
pop
stc
lods
mov
or
ja
xor
xor
fimull
scas
int
push
and
pop
loopne
lods
jmp
add
pop
cmp
sbb
dec
inc
dec
loope
int
outsb
mov
addr16
sub
repnz
pop
or
and
bound
sub
xchg
into
dec
stos
inc
xlat
push
mov
pop
xlat
fbld
sub
in
rol
jns
dec
movsb
movsb
cmp
sbb
pop
xchg
pop
les
jb
in
push
jnp
into
jns
jle
cmpsb
sbbl
lock
jo
pop
add
pop
data16
in
mov
inc
lods
dec
shll
cwtl
sub
inc
pushl
mov
sbb
add
mov
stos
popa
cmp
jmp
inc
and
push
push
push
daa
mov
pusha
pop
loopne
xchg
daa
sar
sahf
jns
mov
push
mov
or
leave
in
daa
int3
cmp
cwtl
xchg
or
inc
mov
cltd
ljmp
adc
pop
or
gs
ficompl
fimull
out
int
cld
negl
and
movsl
mov
cld
adc
and
sti
fidivrl
mov
rep
insl
stos
xlat
xchg
out
repnz
xchg
aaa
fdivl
fdivrs
aaa
in
lods
xchg
cltd
mov
sub
cmp
dec
std
jl
dec
inc
xchg
adc
fidivs
popa
rorl
mov
addr16
sub
ficomps
add
and
dec
mov
inc
mov
jb
add
pushf
lea
cs
adc
lret
mov
jne
sub
inc
aas
js
mov
das
pop
ds
and
sub
xchg
mov
fs
test
cmp
cmp
out
lret
icebp
push
sub
call
popa
into
sub
lock
and
dec
jo
aaa
push
or
push
jecxz
jo
negb
sti
subl
out
xchg
push
int
mov
adc
push
hlt
test
push
outsl
xor
out
pop
popa
jae
lret
inc
inc
jp
fwait
out
daa
insb
inc
mov
cmp
shlb
out
cmp
dec
and
loopne
es
dec
sbb
int
rclb
add
gs
push
pop
push
aad
lret
sub
push
scas
xor
mov
jne
in
push
jno
cwtl
fs
jae
dec
xchg
push
sub
fistl
in
ret
rcll
mov
das
movsl
aam
fistpll
test
sub
xor
fucomip
sbb
gs
sub
testl
scas
fsubs
pop
xchg
dec
fs
jle
lock
out
push
hlt
int3
add
test
dec
outsl
arpl
adc
push
movsl
pushf
mov
dec
insl
addr16
inc
std
not
pop
or
test
out
out
call
mov
leave
test
ja
aaa
sub
push
leave
xor
loop
push
sub
cmp
xchg
loopne
push
fnsave
sahf
xchg
and
in
stos
addr16
out
enter
mov
inc
and
sarl
faddl
jno
sbbb
in
stos
daa
jmp
jecxz
leave
cmp
test
push
xchg
and
and
xor
jno
push
lods
adc
jmp
cmp
dec
das
jae
sar
gs
xchg
fistpll
inc
push
ret
push
stc
insb
inc
out
xor
mov
shlb
repnz
and
and
cmpsl
fadds
push
pop
movsb
push
call
int3
xor
xor
jnp
xchg
fsubrs
mov
add
popa
xchg
movsl
push
and
push
mov
fisttps
push
mov
sub
xchg
cltd
cmp
pop
mov
test
frstor
mov
cmp
popl
cmc
shlb
into
mov
mov
out
popf
stos
xchg
mov
outsl
sbb
pop
lret
xchg
jno
push
mov
pop
sbb
shl
adc
push
repz
int3
inc
pop
push
push
xchg
imul
xchg
pop
pop
out
fisttps
sub
sbb
imul
imul
mov
adc
add
aas
xchg
dec
mov
dec
xlat
lahf
sub
pop
inc
cmpsl
adc
aad
mov
xor
cmc
jno
or
sbb
xlat
push
mov
popf
pop
gs
and
mov
inc
xchg
repz
xor
xor
mov
mov
shr
addl
int
fisubs
cmp
jo
mov
insb
pusha
out
xor
into
popf
insb
jge
mov
mov
hlt
repz
sbb
maskmovq
imull
rcl
sub
icebp
push
mull
xchg
loop
jno
sub
test
push
hlt
mov
call
or
mov
test
mov
ljmp
adc
mov
xchg
mov
ds
mov
sub
test
stc
shrl
push
fcoml
xchg
mov
aad
out
shr
pop
adc
leave
sbb
jae
popa
js
mov
cmp
inc
lret
mov
insb
cmp
sub
mov
lcall
inc
aad
xor
fld
rol
mov
or
sub
xor
push
jne
add
jg
cwtl
cmp
xchg
scas
and
movsb
loop
into
ljmp
daa
out
mov
dec
push
lret
mov
jecxz
popa
push
loopne
mov
repnz
xchg
push
icebp
scas
cmp
sub
das
repnz
lcall
xchg
mov
nop
out
hlt
jmp
push
lahf
andl
popf
and
ret
pop
pop
shll
aaa
push
sbb
add
int3
mov
adc
jbe
bound
lods
mov
je
jb
sbb
pushl
aas
aas
sbb
js
xor
mov
mov
mov
test
jmp
push
sbb
movsb
fcom
jle
sub
add
outsb
fwait
clc
aaa
adc
cld
sahf
or
jecxz
or
mov
outsl
repz
lods
test
adc
sbb
aas
sbb
ja
mov
dec
pop
push
inc
dec
dec
out
pushf
cwtl
mov
adc
stos
sub
jns
mov
leave
nop
test
inc
test
xchg
sub
xor
data16
shrb
mov
sub
xchg
pusha
and
xchg
test
push
jnp
sahf
sbb
dec
in
and
and
dec
or
adc
aam
xchg
pop
pop
dec
inc
cmp
mov
xchg
fisubrl
adcl
aam
test
adc
daa
mov
insb
mov
xchg
jge
and
pop
push
add
mov
jnp
je
mov
add
fstp
add
fistpll
mov
push
xchg
cmp
push
jecxz
mov
dec
subb
aas
mov
and
sbb
pop
mov
stos
mov
fmulp
jg
int3
and
xchg
jecxz
enter
mov
xor
scas
fwait
push
dec
lods
xchg
cmp
lods
dec
stc
dec
add
imul
bound
inc
inc
scas
add
or
push
mov
sbb
cmpsb
test
sub
mov
cmpsb
adc
pop
jmp
and
lds
mov
lret
xchg
add
jno
jp
leave
dec
loope
test
cmp
addl
dec
jo
les
ja
das
movsb
adc
xor
lods
in
and
shl
and
lahf
cwtl
push
andl
pop
popa
xchg
push
popf
inc
xchg
mov
adc
popa
sbbb
mov
xchg
fidivrs
fldenv
sbb
pop
lods
push
setl
sub
xor
ja
xor
jno
mov
mov
jg
cwtl
inc
jmp
sub
rsqrtps
xor
jno
and
push
lret
mov
jns
xor
stc
cmp
jns
cmp
push
shlb
gs
fsub
and
inc
sbb
fldenv
ss
inc
xor
movsl
add
xchg
jmp
in
jo
lcall
adc
aas
movsb
mov
mov
ja
das
ret
inc
mov
lret
inc
mov
cmc
sbb
rol
fistl
lret
xchg
sbb
insl
pop
movsb
jmp
add
sbb
inc
bound
cmp
sub
adc
loop
and
in
decl
fsts
enter
loope
xchg
in
and
pushf
xor
lret
adc
icebp
test
inc
xchg
test
pop
dec
divl
loopne
loop
mov
sub
aam
pushf
dec
stos
pushf
sbb
std
in
pop
pop
rcl
sub
adc
xor
add
aam
dec
cmp
inc
push
daa
ds
adc
sbb
je,pn
push
nop
je
inc
xor
aaa
xchg
push
sbb
out
push
jl
push
arpl
aad
lea
sbb
loopne
add
jecxz
add
shlb
xchg
or
mov
lods
mov
cmpsl
add
inc
fwait
or
fldenv
mov
xchg
mov
jb
lock
fldenv
dec
mov
pushf
pop
cmpsb
mov
das
lock
dec
fsubl
inc
sub
fldt
int3
mov
inc
sbb
aad
sbb
cmp
insb
mov
into
push
subl
mov
data16
pop
mov
call
mov
jbe
addr16
sbb
push
pushf
loopne
iret
xchg
jmp
add
mov
xor
cmp
jp
add
je
enter
push
bound
lea
loopne
stc
in
mov
jle
aam
jno
notl
insb
icebp
dec
dec
push
js
popa
imulb
cmp
out
xor
pop
push
ret
fwait
jge
nop
mov
cltd
and
pushf
aaa
lahf
loope
lods
mov
inc
mov
xor
ficompl
xchg
mov
xchg
popf
out
in
dec
mov
sbb
adc
fimuls
mov
lahf
aaa
insl
cltd
xchg
pop
push
orb
push
push
lock
and
movsb
push
stos
jmp
ja
jns
mov
mov
xor
hlt
pop
push
jb
aad
or
mov
hlt
scas
pop
cltd
out
ds
call
test
mov
flds
mov
xor
repz
push
lcall
sub
ret
add
rep
xchg
or
push
es
inc
adc
insl
cli
mov
test
pushf
sahf
jnp
adc
mov
cmp
popl
movsl
or
xchg
mov
sbb
test
fwait
jb
je
mov
movups
rcrl
mov
fdivs
sub
popa
sbb
add
stc
cmp
inc
imull
rcl
cmp
jno
push
movsl
inc
fists
push
jp
pop
les
inc
dec
ljmp
out
lahf
ja
push
sbb
mov
inc
push
xor
xchg
mov
stos
scas
cmc
test
cmp
push
nop
mov
pop
scas
outsl
cs
mov
mov
daa
jno
loop
sbb
pop
in
mov
mov
fwait
gs
scas
jns
mov
sbb
xchg
sbb
pop
aad
adc
test
xor
call
test
inc
cmp
jns
movsb
mov
inc
or
fdivrs
repz
and
xor
pop
lods
lds
pop
mov
sub
out
xchg
inc
in
shrb
xrelease
jg
xchg
pop
pop
int
sub
xor
and
jecxz
mov
pop
cmpsl
cli
cmc
sbb
adc
xor
out
pop
stc
jne
nop
decb
cs
test
test
rorl
push
lods
movl
movsl
addb
xchg
push
mov
jge
pushf
sub
dec
pop
inc
add
push
clc
mov
inc
mov
inc
adc
daa
into
out
mov
mov
dec
aad
or
test
shrl
lods
ret
outsb
pcmpeqd
fwait
cmpsb
lods
aaa
enter
inc
imul
xchg
mov
xor
sbb
or
imul
pop
pushf
add
mov
dec
add
or
and
cmp
test
or
ja
ficoml
sub
mov
inc
mov
in
mov
dec
shrb
inc
pop
xchg
in
out
bound
jno
in
shr
je
sub
cltd
pavgb
lock
jp
xor
rclb
xchg
mov
pop
push
loope
aad
adc
add
xor
mov
push
pop
push
pop
mov
jmp
js
adc
loop
sub
das
xlat
rorb
xor
verw
cmp
push
insl
dec
insl
out
mov
xor
cmp
xor
stos
je
adc
xor
addr16
push
dec
push
addr16
hlt
fnstcw
lds
xlat
dec
lock
and
shrb
inc
mov
mov
sbb
mov
dec
sbb
or
or
xchg
mov
lret
xchg
push
ret
mov
stos
enter
xchg
add
adc
pushf
mov
xor
cmp
lret
movsb
pop
pushf
movsl
ficomps
inc
hlt
lret
dec
into
fistpl
test
call
push
data16
dec
push
pop
iret
ja
popf
test
mov
xchg
js
mov
xchg
jb
in
push
push
jo
rclb
push
dec
add
clc
mov
shrb
pop
rclb
std
jg
or
mov
xchg
xor
push
add
add
lret
test
cwtl
sbb
mov
repz
lds
cmpsb
mov
push
popf
mov
pop
mov
mov
jb
adc
enter
pop
je
jno
jns
adc
out
xchg
dec
in
inc
rcr
lahf
or
cmp
lock
scas
nop
fcmovnu
imul
add
inc
dec
xor
notb
or
and
xchg
cmp
iret
bound
ret
enter
aad
pop
sbb
frstor
fldenv
cmp
mov
push
loop
lods
repz
fnstsw
xchg
aad
cmc
jnp
ss
jecxz
inc
xorb
cs
call
dec
js
jb
push
pop
pop
lret
pusha
mov
sub
test
int3
insl
es
mov
icebp
push
dec
sub
mov
mov
and
imul
dec
insb
xchg
pop
sahf
jmp
adc
ja
lcall
cmp
add
pop
add
sub
imul
leave
mov
and
shll
sub
sbb
and
je
pop
mov
lcall
rorl
bound
imul
loope
inc
imul
pop
daa
pop
nop
das
cmp
ss
mov
rorl
sbb
inc
cwtl
nop
xor
sub
push
inc
bound
movsb
lods
xor
fs
mov
add
dec
addr16
mov
add
add
scas
lods
push
mov
nop
enter
popa
cmp
data16
fcmovu
nop
hlt
xor
jmp
out
out
incl
daa
inc
xchg
hlt
add
xchg
jg
sbb
gs
adc
repz
pushf
pop
xor
xchg
sbbl
pushf
repz
jecxz
and
mov
icebp
in
loopne
incl
or
adc
mov
sbb
addl
rorl
add
inc
xchg
enter
nop
lock
dec
jae
dec
push
push
roll
push
lret
outsb
lret
xlat
jbe
push
add
sub
mov
pop
shll
sbb
mov
xor
sti
in
int
stc
dec
lods
push
enter
sahf
mov
jb
jle
mov
xor
ljmp
pop
mov
adc
addb
xor
add
frstor
and
and
or
cmp
imul
cltd
sbb
push
dec
in
inc
pop
jge
pop
mov
test
or
fistpll
and
pushf
mov
push
pop
popf
add
jne
or
lret
add
pop
orb
add
test
jne
push
mov
jmp
arpl
subl
ss
cmp
setns
ficoms
sub
fisttpll
sub
dec
out
dec
sub
fbld
ja
sub
pop
push
jb
repnz
cmpsl
ja
data16
cmp
dec
xor
movsl
push
xor
mov
test
call
inc
dec
out
jne
pop
push
in
cld
fmuls
push
out
movups
xchg
sub
cltd
movsb
jl
ret
or
decb
add
jl
cmp
xchg
mov
mov
popa
mov
and
mov
or
faddl
xor
inc
add
not
idiv
push
test
lods
adc
add
xchg
loopne
cwtl
roll
jo
movsb
sbb
dec
jecxz
or
dec
adc
leave
enter
pusha
ror
xor
push
loope
mov
sbb
call
adcl
jmp
adc
push
jne
mov
inc
or
rorb
push
testb
hlt
setge
cmp
push
sbb
cmp
inc
and
cwtl
xor
cmpsl
fcmove
lds
push
je
or
sar
std
out
imul
or
push
add
mov
sub
add
xchg
dec
loope
or
pop
push
arpl
mov
dec
call
jo
daa
loopne
enter
push
cmc
dec
lods
and
fisttpll
sbb
addb
pop
dec
out
mov
jnp,pt
les
add
add
push
pmuludq
fisttps
push
in
int
mov
ds
idivl
xor
das
aad
pop
adc
jne
mov
fldcw
lock
fwait
negb
cwtl
std
inc
popa
rcll
xchg
inc
xor
aad
inc
xor
test
std
mov
xchg
and
in
data16
dec
decb
cmpsb
inc
mov
or
int3
jp
xchg
xchg
shlb
repnz
dec
adc
sbbb
sub
adc
icebp
rorb
shll
pop
pop
stos
pop
cmc
mov
mov
jecxz
or
dec
pop
inc
pop
nop
add
mov
nop
cmpb
jbe
push
pop
pop
cmpsl
inc
inc
cmp
cwtl
push
cwtl
sti
pop
mov
ljmp
xchg
sbbb
push
testb
loop
leave
add
or
pop
daa
dec
into
xchg
sub
loopne
and
inc
jb
lret
test
out
inc
shr
enter
ljmp
repnz
jp
daa
fidivs
push
loope
mov
aad
pop
add
cmc
fsubp
popf
imull
pusha
out
xor
and
jmp
add
std
jne
mov
imul
jbe
xor
mov
jl,pn
cmpsb
clc
jmp
scas
inc
pop
cltd
jg
shlb
repz
jns
inc
es
pop
rcrl
pusha
hlt
mov
xchg
inc
repnz
mov
jb
sub
shrb
subb
push
xchg
je
mov
xor
jp
push
jmp
divl
xchg
fidivrs
jecxz
sar
lcall
leave
lods
es
dec
cmp
es
in
lret
jne
jo
sbb
or
mov
imul
pop
sbb
cmp
loopne
arpl
mov
mov
jle
add
and
mov
add
clc
mov
pop
pop
sub
push
adc
mov
inc
jecxz
movsb
loope
cmp
cmp
push
push
push
dec
inc
push
out
sub
cmp
into
out
cltd
pushf
loop
dec
addl
jmp
xchg
push
push
cmpsb
xchg
stos
rolb
cmp
nop
xor
icebp
cmp
push
cmp
mov
mov
pop
clc
pusha
clc
mov
adc
xlat
lcall
xor
sub
cs
sub
in
ss
mov
push
cpuid
ficoml
sbb
jo
and
insb
xor
add
leave
push
loopne
push
inc
cmp
ljmp
add
daa
and
outsb
mov
lds
movsb
arpl
jmp
das
xlat
fs
bound
inc
std
cmp
notl
scas
stos
sub
call
cld
fmulp
mov
lret
and
push
test
sub
js
adc
insl
stc
lahf
or
xchg
fcomps
mov
in
popf
repnz
cmp
shrl
fiaddl
enter
repz
or
jo
arpl
jb
mov
not
cmp
das
pop
push
call
outsl
cs
adc
jmp
sub
fs
les
lods
fdivr
imul
dec
push
mov
cmp
xchg
in
aas
movaps
or
or
lret
insl
sbb
adc
sbb
dec
arpl
push
ja
xchg
cmp
outsb
cli
mov
sbb
daa
outsl
mov
fldl
popf
cmpsb
mov
idivl
movsl
les
shrl
pop
popf
inc
push
test
jge
test
dec
loopne
scas
andb
divl
in
mov
pop
pushf
bswap
int3
inc
into
mov
jb
mov
fdivl
and
and
pusha
les
jmp
and
push
xor
jmp
and
pop
outsb
mov
mov
jge
das
xchg
mov
subb
in
sbb
lods
sar
scas
add
cmp
push
add
das
adc
or
mov
pop
mov
jmp
imul
stc
enter
loope
movsb
dec
sbb
hlt
cmp
mov
mov
les
mov
xchg
pop
or
xor
mov
push
mov
mov
repnz
pop
jbe
lret
and
test
out
adc
call
add
mov
cli
movsl
cmp
cmc
pop
or
dec
cli
cmp
std
add
pop
sbb
xor
ss
pop
sarb
movsb
pop
je
scas
xchg
inc
movsb
mov
pop
xor
fwait
mov
mov
cmp
sub
int3
imul
pop
mov
fucom
outsb
mov
pop
xor
sbb
iret
repz
dec
hlt
dec
aam
jmp
push
pop
mov
movsb
sbb
stos
sbb
mov
push
cltd
dec
test
add
daa
jecxz
pop
jg
xor
testl
xor
ja
mov
sub
pop
pop
sub
scas
dec
jnp
fnstsw
cmp
mov
fstl
pop
into
sub
pop
pop
aaa
orl
xchg
mov
mov
lret
scas
xchg
sub
adc
pop
or
add
jae
rcrl
adc
leave
add
sub
xlat
pushf
push
lret
jnp
sbb
pop
push
and
test
scas
inc
inc
int
cltd
push
and
fs
mov
xor
out
xchg
fcomp
notb
sarl
rolb
inc
cmpsb
push
adc
xchg
mov
inc
sarb
vmread
sbb
cmp
int3
cmp
gs
movl
ret
test
test
imul
decl
test
mov
sbb
fs
das
add
lret
sub
and
pop
icebp
cli
fsubr
psrad
in
jmp
sahf
mov
lahf
add
mov
test
jns
mov
scas
test
cs
and
pusha
repnz
mov
daa
fs
mov
lret
mov
xchg
sahf
lcall
pop
ret
lock
cmp
mov
in
cmpl
dec
les
and
test
mov
jmp
dec
dec
pop
mov
pop
loopne
xchg
cmpsb
pop
ljmp
inc
pop
lods
sahf
xchg
fwait
insb
sub
lea
movsb
ret
out
add
mulb
popa
and
push
sub
push
cld
sbb
push
xor
and
jo
push
sbb
ljmp
or
icebp
int3
xchg
and
push
jp
int
ja
add
repnz
mov
negb
sub
xor
dec
cmc
inc
jp
fucomi
sbb
inc
fcomp
push
stc
aaa
out
push
jmp
push
fcmovb
mov
sub
push
push
xor
jecxz
jb
push
push
subl
add
push
xchg
jmp
mov
lea
leave
mov
adc
pop
push
pop
mov
mov
xchg
or
push
jl
mov
push
cwtl
mov
sub
lods
fwait
lahf
jo
out
jb
out
sbb
scas
cld
jo
pop
in
rol
pop
stc
rol
inc
mov
mov
ficomps
mov
mov
sbb
or
aad
add
mov
insl
sub
cwtl
sub
jle
push
mov
cmpsl
mov
and
fwait
out
cs
scas
jge
fcompl
fdivrl
jmp
dec
stc
fbld
lods
add
imul
lods
sbb
pop
or
cmp
or
dec
push
out
ja
mov
imul
dec
sahf
fidivrl
sahf
repnz
divl
loop
cmp
test
out
mov
mov
xchg
mov
xor
das
push
jo
mov
inc
xlat
scas
xchg
push
scas
push
xor
mov
aam
js
in
pop
pusha
in
jnp
daa
fistpl
dec
jg
push
out
xchg
push
xchg
inc
jmp
jle
jmp
das
mov
fcomps
mov
shrb
cwtl
push
pop
int
inc
lods
jo
fcomps
addr16
mov
mov
test
jp
cltd
mov
mov
arpl
stos
xchg
xchg
aas
aas
sbb
or
jb
popf
cmc
adc
movsb
inc
adc
and
push
xchg
shll
ret
push
and
jecxz
push
pop
mov
mov
push
jle
ds
add
into
sbbl
sub
aam
clc
in
cmp
sbb
ror
jp
das
jecxz
bound
jp
sub
mov
xor
jns
mov
jns
movb
scas
mov
cld
insl
push
mov
aam
or
jae
mov
or
mov
dec
mov
cmp
pop
filds
fistpl
in
daa
nop
jmp
sub
add
gs
and
xor
stos
dec
inc
fnstenv
sub
sbb
fisubl
xlat
dec
stc
insb
pop
dec
pop
jmp
scas
mov
push
cwtl
lock
cmp
push
das
xchg
add
inc
jp
data16
pop
ss
push
mov
mov
xrelease
out
lret
enter
ds
jb
jnp
or
mov
sub
cmp
mov
in
in
not
aaa
dec
add
jg
add
mov
fiadds
arpl
xor
movsb
inc
jl
push
sub
jns
test
scas
pop
sti
pop
fst
inc
mov
bound
push
push
daa
mov
daa
inc
and
mov
aam
xor
scas
sbb
push
pop
clc
sub
jb
mov
stos
ljmp
mov
loop
cmp
arpl
or
aaa
in
notb
push
xor
jbe
pop
rcll
mov
or
dec
and
xor
jge
jae
sbb
mov
fs
pusha
mov
je
filds
outsb
mov
mov
adc
nop
dec
aaa
push
mov
push
frstor
fsubrl
testl
and
mov
movsl
or
pop
inc
testl
mov
xchg
shlb
push
pop
cs
mov
xchg
and
ljmp
pop
sub
psubb
cmpl
repz
fsubrl
fmul
inc
or
insb
fisubrs
push
mov
lret
addr16
mov
in
scas
pop
enter
mov
xlat
push
pushl
push
mov
mov
cmpsb
xor
mov
shlb
or
mov
cmc
sub
xchg
cmc
inc
out
fiadds
lods
inc
icebp
adc
dec
aad
imul
outsb
mov
adc
dec
inc
hlt
rorb
pop
fldcw
adc
fsubrs
sbb
insb
dec
jmp
cmpsl
mov
dec
inc
out
ljmp
and
or
sub
cmp
jns
in
lds
aad
and
ret
xorb
and
sbb
push
push
xchg
popa
pop
xchg
pop
add
jnp
dec
leave
scas
xor
jae
call
mov
repz
mov
push
mov
mov
mov
add
xor
xchg
xlat
xchg
out
imul
mov
mov
popa
pusha
jne
mov
aaa
fisubrs
mov
sbb
inc
push
dec
pop
ss
aam
inc
mov
fldenv
xor
jp
in
add
xchg
sbb
mov
inc
not
xor
xor
push
pop
cmp
adc
scas
dec
mov
pop
add
cmp
cmpb
ds
xchg
sub
mulb
or
je
into
jecxz
mov
xchg
mov
cld
rcr
iret
add
fwait
xchg
insl
loope
nop
pop
xorb
jns
pop
les
mov
jecxz
insl
dec
cmp
jno
push
out
loope
popa
adc
notl
push
jb
repz
lahf
dec
lds
fs
pop
ss
es
pop
data16
fistps
xor
sub
push
xchg
stc
or
pop
pop
dec
inc
cmp
test
sbb
cmc
aaa
push
mov
enter
mov
xor
or
fstpt
bound
sarb
daa
adc
test
xchg
mov
and
outsb
xchg
out
shrb
mov
js
mov
push
xchg
or
clc
scas
or
cmpsl
lret
xor
out
adc
inc
push
stos
sub
add
daa
pop
mov
test
iret
mov
adc
arpl
xchg
aad
or
cmp
add
loop
sub
lods
mov
add
cmp
jno
push
mov
cmp
jb
aam
cwtl
les
jb
cmpsb
popf
jo
leave
sub
dec
call
jp
or
mov
xor
faddl
dec
mov
pop
shrl
pop
hlt
mov
push
inc
ret
sbb
in
shlb
inc
stc
xor
xchg
repnz
imul
ds
icebp
hlt
pop
mov
inc
xchg
ja
movsl
mov
loope
cmpsb
sbb
push
out
push
jnp
movl
xchg
imulb
and
jecxz
mov
xchg
cli
mov
int3
shlb
fcmovb
fwait
and
inc
sub
fcmovb
add
sub
pop
in
scas
out
loope
in
inc
jb
fisttpl
push
cmp
dec
sbb
jmp
fwait
rcr
imul
and
cwtl
es
out
faddp
jb
sarb
sub
ljmp
gs
stc
lret
sbb
cmc
add
mov
push
lods
dec
outsb
or
aam
int
dec
dec
shl
outsl
fs
mov
cwtl
pop
std
out
sbb
and
stos
rolb
rcrl
xorb
pop
test
je
leave
fists
into
stos
pusha
mov
scas
sub
sub
cli
fimull
mov
mov
xor
insl
cltd
sbb
mov
lds
adc
dec
lea
test
push
xor
or
cmpsb
mov
mov
jl
inc
fbstp
insb
call
rorb
and
push
adc
cld
js
aas
out
dec
loop
push
jmp
mov
push
sbb
add
xor
jg
pop
lds
and
jo
or
push
dec
mov
jcxz
adc
sbb
mov
mov
cmc
fdivrl
in
lea
add
loope
lret
mov
sbb
jg
and
loopne
add
adc
jg
in
lods
ss
test
cld
or
push
jl
and
sbb
mov
mov
gs
sbb
shlb
mov
pop
pop
ja
sub
push
sbb
loop
insl
sti
or
inc
adc
xor
aas
fdivrs
popa
loop
jmp
mov
mov
xchg
cmpsl
xor
ss
push
idivb
nop
cmp
or
stc
aad
inc
pusha
xchg
iret
lret
ret
sub
sub
cmpsb
pop
fs
mov
enter
adc
sahf
stc
cmp
xchg
shrb
adc
stos
push
loope
loop
adc
test
pop
fs
out
inc
mov
aaa
cmp
xchg
pop
cmc
popf
fiadds
nop
mov
cmp
lret
mov
aas
rorl
adc
in
push
xchg
icebp
jp
pop
mov
fcomps
data16
sahf
rcrb
in
pop
into
push
sbb
dec
int
sbbb
push
pop
sbbb
xor
mov
into
lock
data16
rclb
repnz
mov
adc
sbb
mov
xor
out
int
cmc
imul
or
push
lea
ret
cmp
ds
es
icebp
pop
jmp
fcoms
shll
popa
pop
fldl
roll
or
je
pop
pop
mov
and
fs
arpl
popf
roll
mov
enter
dec
insl
mov
mov
mov
ds
or
adc
sbb
outsl
and
incl
imul
lds
movsb
aas
xlat
jnp
xor
cmpl
ljmp
push
movsl
lea
mov
jb
jge
sub
mov
cmp
rcr
mov
fimuls
adc
cmp
inc
jle
mov
add
out
nop
adc
mov
jl
push
push
jb
jmp
sbb
jecxz
gs
popf
outsl
fwait
pushf
leave
dec
pop
sbb
ficoms
or
lods
push
loop
inc
pop
push
cld
daa
xchg
cmp
clc
sub
mov
add
scas
divb
adc
cltd
jge
popa
scas
aad
cmp
xor
imul
inc
xor
and
sub
sub
lea
rcr
mov
mov
outsl
int
xor
cmp
cmp
xor
push
push
lahf
inc
out
lret
lahf
sbb
jo
loopne
fiadds
jbe
dec
adc
mov
xchg
call
imul
ficoml
cmp
inc
jge
test
mov
int3
sbb
in
cmpl
dec
test
inc
dec
xchg
rcrb
aaa
jnp
push
sbb
sub
sbb
add
jecxz
in
popa
mov
mov
stos
and
mov
mov
pop
mov
rdpmc
and
stos
cmp
pop
xchg
push
loop
je
xchg
inc
test
in
mov
aam
mov
lock
mov
mov
out
add
push
cmp
iret
sbb
nop
xor
mov
sbb
int3
mov
sbb
sbb
pop
call
and
dec
xor
test
or
icebp
arpl
mov
stos
xor
test
mov
and
in
dec
mov
pop
fcompl
or
insl
mov
push
aaa
push
jmp
sbb
popa
lds
xchg
ja
shrl
cmp
push
scas
mov
mov
in
popa
out
jae
add
std
push
push
dec
adc
adc
inc
sbb
not
cltd
inc
int3
pushf
cmp
dec
arpl
jmp
gs
fcmove
mov
out
mov
jbe
pop
or
and
stos
sub
cwtl
dec
push
add
rolb
pop
jmp
or
stos
in
loopne
neg
xchg
lret
in
adcb
xlat
ret
xor
ja
or
mov
rorb
sub
lods
test
jge
lds
out
push
sbb
sbb
add
ror
aad
mov
mov
in
push
and
push
imul
test
shll
stc
cli
dec
inc
stos
rclb
int3
aas
and
xchg
inc
test
lcall
rolb
aaa
jg
jp
out
ficompl
push
inc
push
push
mov
push
lods
divl
xor
mov
jecxz
out
push
test
add
movups
pop
mov
dec
xchg
dec
push
push
mov
inc
lds
push
jno
and
test
mov
sub
repnz
icebp
sbb
mov
outsb
jnp
imul
scas
addr16
cmp
jbe
fsubrp
adc
fcmovnu
mov
cmpb
rorl
lcall
dec
xor
push
pop
mov
mov
loop
sub
push
scas
cmpsb
aaa
call
aam
cmp
mov
add
cmp
sahf
mov
mov
hlt
adc
add
or
push
insl
stos
orb
adc
loop
pop
xlat
push
cmp
stos
mov
mov
int
f2xm1
ljmp
cmp
mov
fisubl
ds
mov
pusha
cmp
push
sub
pop
cmp
insb
nop
ud1
mov
mull
lret
and
dec
xchg
cwtl
lock
add
iret
int
inc
add
rcrl
cmp
pop
aaa
aaa
cli
xor
pop
inc
mov
shl
rcrl
in
mov
call
stos
jg
dec
sbb
test
jge
cmp
mov
xchg
xchg
inc
rcrl
jecxz
jbe
cmp
mov
pop
hlt
inc
mov
loop
push
push
jle
cmp
das
mull
dec
daa
cmpb
idivb
lds
into
jne
sbb
sub
imul
jne
add
fs
das
push
pop
xchg
out
push
xchg
insb
imul
jecxz
dec
int3
add
ljmp
scas
ja
adc
xchg
push
mov
xchg
mov
jg
inc
lods
push
jne
pop
int
mov
dec
adc
loope
movsl
test
subl
cmp
std
lock
push
sub
dec
pop
call
sub
je
addb
ja
mov
mov
ficomps
dec
ja
xor
pushf
inc
mov
add
dec
dec
stos
sub
jp
mov
xchg
cmpsb
and
sbb
es
mov
bound
mov
mov
stos
sub
mov
call
cmp
cltd
addb
aaa
and
cmc
mov
test
jb
les
test
in
out
mov
mov
in
jno
xlat
scas
xchg
int
lahf
lea
inc
mov
mov
pop
xor
adc
call
outsl
xchg
mov
cmp
push
into
and
xchg
mov
ljmp
pop
pop
pop
sub
rcl
iret
and
push
push
pop
je
push
fs
mull
insb
or
push
shl
xor
push
sbb
int
xor
push
stos
add
adc
mov
mov
mov
mov
fwait
in
imulb
xor
jmp
dec
cld
loopne
jne
add
sbb
aam
pusha
out
pop
pop
test
mov
xchg
repz
mov
inc
xor
mov
cmc
pop
les
mov
and
xor
dec
pop
pop
jne
jle
popa
push
test
add
push
cmp
add
dec
call
bound
scas
ds
pop
ret
das
inc
add
mov
inc
dec
xor
dec
dec
adc
pop
xchg
mov
pop
sbb
daa
or
xor
arpl
dec
mov
in
and
scas
ficoml
iret
jg
mov
cmpsl
in
js
cli
jmp
test
or
mov
cmc
lahf
xchg
mov
incb
dec
dec
sub
js
loope
das
sbb
pop
push
arpl
inc
inc
mov
mov
cwtl
adc
push
cltd
outsl
popa
sahf
adc
lahf
js
push
je
inc
scas
push
movmskps
ja
dec
cmpsb
fidivl
testl
push
int3
shrb
push
add
es
or
aaa
mov
outsb
adc
iret
mov
test
push
mov
mov
jne
push
push
test
insl
aaa
andl
xchg
mov
fcomi
call
xor
dec
sahf
test
mov
imul
jmp
pop
mov
test
fadd
mov
ja
push
inc
in
repnz
testb
imul
cmp
sub
pop
incb
cmpl
rolb
jmp
xchg
int3
inc
lret
nop
filds
out
out
add
data16
leave
mov
jecxz
pop
lahf
addr16
movsb
addb
sub
mov
mov
lods
mov
les
or
push
or
dec
rcrb
mov
pop
mov
cmp
adc
inc
mov
in
cli
movsl
jl
sbb
xchg
jno
stc
mov
push
mov
lea
clc
test
imul
ficoms
sbb
add
inc
add
cmpsb
cltd
dec
lds
mov
ffreep
aam
xchg
jno
and
mov
dec
dec
cmc
insl
pushf
in
daa
aam
mov
mov
jne
lcall
sarl
push
ret
lods
sbb
sub
jb
mov
mov
out
cmp
adc
in
fidivs
jecxz
add
sbb
or
jmp
popa
mov
cmp
stos
push
dec
fstpl
dec
mov
xchg
add
sbb
xor
les
rcrb
pushf
add
out
mov
mov
xchg
or
scas
je
test
jae
xchg
call
movsb
jo
iret
pop
inc
inc
add
or
loop
in
sarb
jnp
sub
movb
scas
and
xor
rclb
movsl
aaa
sub
mov
fistps
outsb
lcall
sti
or
xchg
push
pop
cmpsb
sbb
add
ret
xlat
and
iret
dec
cmp
shrb
out
popa
adc
addr16
push
add
sub
xchg
xchg
scas
cmpsb
adc
in
sub
mov
int3
out
pop
insl
outsb
popa
clc
les
dec
cmp
jecxz
add
call
mov
xchg
sub
pop
mov
or
jle
xor
pop
imul
lock
xor
inc
fbld
push
push
shrb
add
dec
fcoml
nop
inc
sub
sbb
outsb
adc
rol
sbb
cmpsb
ds
cmc
divl
dec
ds
mov
xchg
test
push
stos
fsubrl
popa
dec
cltd
mov
testl
xchg
movsb
or
aas
xchg
add
cmp
pusha
sbb
pop
stos
sbb
and
adc
xchg
lahf
movl
cmpsl
movsl
les
fisubl
push
repnz
movsb
out
out
adc
dec
sti
jecxz
pop
xchg
add
xor
cmc
stos
sarl
addr16
mov
push
stc
inc
push
in
add
fstl
add
das
iret
dec
jno
lock
sti
pop
les
cmp
scas
test
xor
jbe
cld
lahf
icebp
and
xor
or
sbb
dec
fiadds
int3
int
cmp
sub
sbb
sbb
jl
mov
in
loope
imul
and
test
add
dec
fdivrl
jns
data16
fs
pop
add
add
cmp
jecxz
adc
adc
mov
push
adc
int3
shrb
pop
jns
stc
lds
leave
jae
out
dec
ficoml
in
out
adc
sub
loopne
xchg
jb
in
xor
cmp
fidivl
je
sub
jg
pop
or
outsl
popf
insl
iret
adc
shl
ficoml
nop
fdivl
and
popf
enter
add
clc
jne
out
iret
pop
das
mov
test
cltd
adc
adc
fcmovne
pusha
xchg
add
out
out
imul
inc
mov
and
pop
or
cmp
push
iret
xchg
inc
les
lret
push
sbb
dec
shrb
inc
mov
inc
popa
adc
call
insb
xchg
movsl
adc
xchg
jne
push
mov
rcr
mov
add
sbb
adc
dec
sbb
lcall
loopne
xchg
aas
cwtl
repnz
cmp
call
pop
in
push
imul
roll
sbb
sbb
dec
or
stc
jae
pop
daa
mov
dec
call
xor
mov
xor
pop
adc
cmpsb
and
or
push
inc
cmp
push
push
popf
clc
test
int
mov
test
adc
and
cmp
adc
mov
popf
jge
push
inc
push
jae
je
aad
hlt
cwtl
mov
insb
mov
xchg
and
divl
mov
inc
and
adc
xor
in
jge
dec
and
stos
dec
xchg
iret
out
call
ds
cmp
les
xchg
out
xchg
aad
inc
xor
pop
cmpb
cmpl
shlb
adc
fdivrl
dec
sti
jmp
cmp
dec
sub
inc
aam
inc
xchg
repz
fstps
leave
pop
adc
je
popf
shrl
mov
xchg
stos
mov
dec
out
dec
aaa
xchg
adc
lods
roll
adc
pop
jnp
fists
fnsave
test
rcr
ret
xor
sbb
xlat
mov
popf
sub
xor
lcall
lock
jb
cmp
shll
stos
insb
sbb
in
rcr
push
sub
or
stc
jle
xchg
or
pop
sbb
loope
addb
push
in
ret
jbe
test
mov
mov
dec
xor
xchg
push
dec
mov
mov
xchg
and
jecxz
jne
push
fucomp
js
bound
sbb
sti
lea
push
icebp
fsubrl
jmp
pop
out
popa
inc
jnp
inc
lods
imul
sbb
sub
sbb
movsb
sarb
adc
clc
adcl
cmp
aam
and
inc
dec
or
xchg
sarl
adc
jbe
jle
lret
inc
mov
movsb
add
sti
js
mov
insl
jo
mov
dec
push
idivb
inc
push
js
testb
or
mov
jl
jb
fldl
cmpl
adc
div
jns
xchg
jmp
gs
insb
aaa
bound
mov
ss
insb
outsl
dec
jmp
les
cs
adc
fnstcw
push
cmp
mov
push
add
outsb
movsl
aaa
shrb
adc
lds
loopne
daa
or
les
test
call
dec
in
mov
sbb
xchg
imul
cltd
add
lods
push
pop
push
mov
or
cmp
imul
cs
dec
pop
mov
orl
cmp
adc
je
shufps
in
dec
cli
je
lods
xlat
shll
aaa
test
inc
or
les
lcall
push
jg
stos
pop
popa
jp
sti
dec
pop
mov
jmp
insb
pop
outsl
mov
adc
popa
adc
cli
das
es
jmp
stos
stos
adc
xchg
lcall
cmpsl
mov
sbb
loopne
fdivrs
adc
add
mov
pushf
xchg
xchg
add
push
aad
and
cli
ds
arpl
adc
and
adc
xor
dec
pushf
aad
je
mov
ret
es
mov
push
data16
inc
imul
push
jl
push
cmp
dec
shll
mov
cmpl
fucom
xchg
adc
ret
jl
xchg
mov
xor
mov
int
and
jae
mov
fwait
aas
nop
les
inc
sub
das
and
mov
add
push
mov
pop
add
cwtl
mov
jbe
mov
aad
sahf
mov
enter
stc
enter
add
outsl
aam
rorl
lcall
cwtl
mov
repz
or
loope
icebp
jl
ja
outsl
icebp
out
aaa
push
xorb
sti
jmp
lock
mov
mov
lock
dec
cmp
jg
sbb
popa
int3
cmp
gs
gs
ret
jne
insb
test
xchg
popa
dec
push
push
dec
arpl
dec
mov
js
movsb
xchg
dec
cmp
mov
adc
dec
mov
xchg
aam
or
jnp
push
or
jmp
mov
lods
cli
rorb
loope
push
das
fnstenv
mov
stc
or
cli
pop
cwtl
aas
repz
mov
push
pop
ret
pop
adc
std
sbb
cld
outsl
js
push
mov
sub
and
sahf
push
cmpsb
inc
mov
inc
rorl
es
dec
subl
stos
mov
notb
shll
out
mov
mov
xor
sbb
icebp
lea
loop
sbb
add
adc
lret
xchg
jb
jo
mov
xlat
mov
shll
and
cwtl
sub
mov
mov
lock
xor
repz
in
test
mov
clc
and
mov
or
push
push
test
jmp
push
push
andl
fsubrs
inc
inc
lcall
cmp
stc
add
aaa
outsl
out
push
inc
stos
jmp
fistl
push
push
adc
fs
data16
call
adc
mov
jnp
test
sbb
lods
push
fildl
xchg
fmulp
aad
push
xor
test
inc
push
jae
pushf
inc
outsl
adc
push
cmp
fnstcw
cld
xchg
and
xor
push
mov
inc
sub
mov
jecxz
adc
jnp
inc
sub
out
inc
bound
adc
xchg
loop
push
xchg
out
mov
and
and
and
xchg
fiadds
adc
repnz
das
nop
test
sahf
movsl
mov
arpl
scas
cs
sbb
rcll
pusha
xor
mov
mov
bound
mov
int
jnp
loop
mov
xchg
pop
push
mov
jno
clc
arpl
sub
cmp
cmpsl
jl
dec
lret
jno
jge
cwtl
aad
pop
mov
push
and
jne
mov
lret
adc
imul
push
out
lret
and
or
dec
push
pop
jecxz
mov
mov
cmpsl
icebp
add
mov
fs
imul
add
test
xchg
xchg
adc
stos
cmp
xor
fwait
pop
lahf
inc
pop
dec
cwtl
rclb
in
xchg
add
push
cmc
imul
add
mov
adcl
das
out
data16
mov
add
push
inc
insl
setnp
mov
inc
fidivs
or
out
cld
inc
push
repz
out
xor
push
add
jno
jmp
fildl
lret
sub
pop
mov
orb
inc
insb
out
cmp
cmp
mov
nop
mov
add
cltd
and
pop
dec
pop
shrb
jnp
arpl
and
movsb
or
aam
xchg
popa
cmpsl
mov
inc
xchg
jns
enter
mov
out
cmp
loopne
ja
shrl
movsl
or
push
and
fbstp
sbb
icebp
ror
sub
rcrb
xchg
vmovaps
jg
fsubl
adc
and
testl
das
cmp
fidivrs
inc
pusha
movsl
cwtl
cmp
xchg
pop
nop
loop
aam
pop
push
cwtl
clc
or
pop
loope
fmull
and
push
shrd
pop
xor
std
jp
inc
addr16
jns
in
xor
aam
xchg
inc
mov
and
push
xor
bswap
sub
test
xchg
popa
daa
jno
and
inc
add
aam
adc
scas
jmp
sub
inc
push
clc
add
call
dec
shrb
outsl
cli
push
dec
xor
add
inc
or
mov
jmp
lea
loopne
pop
push
xchg
dec
pop
test
xchg
inc
sbb
pop
cld
adc
outsl
stos
push
or
xchg
addr16
push
jle
jnp
push
cwtl
arpl
mov
clc
mov
mov
lock
shrl
xor
xlat
xor
or
adc
inc
dec
fdivrs
inc
push
rcl
sub
fists
sub
mov
dec
push
ss
sub
insl
mulb
push
popl
test
cmpsl
out
push
xlat
xor
clc
idivb
lret
mov
or
xchg
xchg
jo
jo
pop
mov
popf
push
jecxz
mul
dec
sbb
mov
add
mov
call
pusha
pop
jne
ds
rclb
jecxz
xorb
aaa
mov
adc
jnp
sub
xchg
clc
xor
ds
cmp
sub
mov
mov
inc
dec
ja
popa
jecxz
mov
mov
rcl
lcall
hlt
movaps
xor
psubsw
loope
je
push
hlt
jne
in
idiv
pop
insb
xchg
push
cmp
arpl
mov
cmp
shlb
call
push
std
xor
cli
xlat
inc
pusha
mov
and
mov
addr16
popf
in
es
push
sub
fwait
cmp
sbb
imul
cltd
xchg
hlt
jo
nop
jge
xchg
and
sub
and
push
pop
mov
imul
or
aad
pop
nop
ljmp
iret
mov
xchg
mov
pop
push
mov
dec
add
repnz
test
mov
lea
aaa
stos
scas
mov
ret
xchg
stos
cltd
and
sbb
and
sub
push
sub
ds
outsl
cmp
and
ss
repnz
jp
or
aaa
idivb
das
xchg
and
cmc
xchg
aas
jo
inc
sbb
daa
repz
out
sub
cld
sub
in
hlt
in
mov
add
pop
xchg
pop
iret
call
fidivl
insl
and
ja
pop
mov
popf
lock
dec
jnp
stc
pusha
sub
cmp
mov
popa
std
in
loope
jle
fs
stos
inc
xchg
ja
push
mov
xchg
insl
mov
pushl
popf
gs
cmc
ret
popa
aam
imul
xchg
lock
mov
icebp
push
pop
int3
loope
fsubl
cltd
inc
jp
jbe
cmp
call
aaa
xor
cmc
test
adc
cs
sub
subl
aas
add
xchg
lret
lds
adc
cmpsb
cld
mov
add
adc
adc
ffreep
jb
and
in
repnz
xor
scas
inc
fbld
aaa
stos
xor
dec
add
lret
cmp
adc
xchg
pop
into
dec
in
rcrl
out
ljmp
inc
push
jno
gs
rol
mov
dec
mov
mul
sahf
imul
add
dec
in
add
and
mov
pop
das
jge
add
xchg
xor
xchg
int3
pop
rcll
dec
and
sbb
xor
enter
insb
pop
movsb
fmuls
outsb
aaa
loope
je
vsubpd
inc
rorb
pop
cmp
inc
rcr
test
mov
jp
repz
lahf
stc
lcall
push
lahf
sarl
sbb
mov
and
das
jo
int3
xor
cmpsb
dec
iret
add
xchg
push
lahf
test
in
les
inc
jmp
popf
push
pop
rcll
mov
add
fwait
sub
pop
aas
jg
sub
addr16
sub
les
xor
aaa
bound
cmpsl
shl
rorl
test
jno
dec
dec
push
stos
adcb
mov
mov
scas
lock
xor
shll
cltd
popa
mov
xor
sub
jns
jmp
in
mov
xchg
stos
fcompl
mov
add
sahf
xchg
sbb
jmp
jnp
shll
xchg
mov
xlat
cmpb
inc
roll
sbb
rclb
xchg
pop
ret
cmp
test
ja
fwait
aam
popf
mov
test
add
arpl
cmp
sbb
push
and
adc
mov
add
cmpsl
and
jb
cwtl
add
pop
data16
cmp
call
push
in
xlat
dec
jl
ljmp
inc
pop
cmp
xor
mov
mov
sub
lods
xor
sub
cmp
outsb
pop
push
mov
jmp
mov
xor
dec
repnz
fistpl
push
cli
shll
or
es
add
xor
call
data16
jb
mov
insb
shlb
xchg
insl
ljmp
sbb
or
cltd
daa
jle
or
dec
lods
mov
xor
push
popa
dec
pop
sbb
ja
dec
ret
add
jle
pop
scas
les
lcall
movsb
je
push
sbb
mov
aaa
or
jnp
cmp
sbb
fcoml
cmp
or
aam
aad
or
fdivl
xchg
and
gs
mov
jmp
std
es
add
fadds
mov
jecxz
icebp
mov
dec
mov
or
push
divl
sub
cmc
inc
push
xchg
ss
lcall
push
icebp
insb
push
xchg
xor
add
movsl
movsb
insl
out
xor
es
add
rcl
jne
idivl
std
add
and
sti
fadd
xchg
jmp
cmp
sbb
fnstsw
movsb
xor
inc
lcall
jge
dec
loope
pop
mov
cmc
test
push
pop
rorl
idivl
pusha
pop
insb
test
xorb
jo
xor
aas
cli
aam
stc
rorl
loope
ret
mov
pop
fidivl
mulb
mov
and
sbb
adc
mov
test
sbb
or
ljmp
jno
and
mov
or
out
ljmp
sarl
inc
cmpsb
adc
xorb
mov
shrl
xlat
imul
out
sti
test
lret
outsl
mov
inc
sub
arpl
mov
xor
sbb
je
sbb
sub
std
pop
or
mov
xchg
xchg
inc
sbb
dec
js
je
cltd
test
xlat
bswap
sub
in
notl
jns
xchg
out
mov
push
mov
jmp
ror
inc
mov
popf
xor
mov
sub
push
pop
f2xm1
push
mov
adc
cmpsl
loopne
mov
or
dec
sbb
or
ret
xchg
rclb
ficoms
xchg
mov
and
lea
std
pop
push
negl
loopne
or
push
mov
imul
mov
out
add
fcomp
xor
pusha
inc
aam
xor
in
add
ror
add
aas
mov
or
or
lret
push
mov
push
xchg
xlat
dec
mov
mov
cli
scas
xor
adc
mov
daa
adc
shl
mov
test
push
cmp
jp
inc
mov
jnp
aad
scas
hlt
mov
xchg
shr
push
repz
xchg
fmuls
add
inc
push
ret
push
out
scas
inc
shll
mov
fs
pop
repnz
aaa
push
mov
jne
push
mov
push
inc
pop
arpl
out
popa
or
or
adc
hlt
ret
or
ja
cmc
das
ffreep
movsb
sub
lahf
mov
fucomi
pop
dec
xchg
addl
pop
dec
pop
test
out
fisttps
aad
repz
add
xorb
mov
inc
or
dec
dec
xchg
das
inc
mov
and
loopne
loop
and
adc
or
adc
add
add
inc
aad
dec
push
dec
cmp
andb
adc
pop
dec
or
adcl
jae
iret
push
pop
ljmp
cmpsb
or
xor
faddl
jo
and
jp
push
add
dec
jnp
add
add
lods
insl
adc
inc
mov
adc
dec
fidivl
push
xchg
loop
hlt
rep
movsb
jnp
adc
movsb
xor
fcompl
adc
fistl
mov
dec
sub
push
inc
jle
lds
add
or
mov
ret
aas
dec
ffree
rcrb
cwtl
mov
jmp
inc
ja
add
lahf
cmpsb
mov
cltd
enter
cmpl
aad
aaa
icebp
xchg
clc
jne
sbb
cwtl
rol
popf
test
out
sub
cmc
pushf
xor
or
incb
ss
push
xchg
add
int3
pop
mov
jge
add
in
aas
test
jmp
mov
mov
daa
cmp
add
into
cli
xchg
mov
in
test
dec
jns
inc
icebp
or
or
push
ja
jge
fs
xchg
pop
fidivrl
loop
mov
rolb
mov
and
mov
dec
sub
fwait
stc
xchg
push
xchg
push
mov
lret
dec
push
add
or
push
stos
jp
enter
mov
ss
cmp
bound
mov
fs
inc
ja
sbb
cmpsb
push
loope
jmp
outsb
and
push
inc
out
or
jp
jae
ds
jmp
mull
jle
ret
fbld
pop
jge
pop
push
das
ror
stos
push
sub
sub
cmc
dec
arpl
xor
pusha
add
test
rolb
xor
sub
cmc
pop
cld
arpl
mov
out
dec
xor
test
mov
mov
jb
int3
das
sbb
and
je
cmp
insb
jp
outsb
insb
sbb
pop
lds
push
mov
sbb
jno
stos
aam
out
sub
xchg
inc
or
movsl
push
push
and
dec
cwtl
fwait
in
arpl
xchg
cmp
xlat
add
cmp
inc
test
fs
jl
dec
and
repz
or
xchg
xor
xor
xor
into
pop
lds
fisttpll
loope
call
xchg
mov
inc
and
xor
add
jmp
and
or
gs
or
xorl
xor
es
das
pop
mov
mov
enter
pop
push
adc
cld
push
fdivl
push
arpl
out
imul
pop
pop
dec
xchg
or
adcb
add
inc
imul
aas
and
fcomip
imull
mov
icebp
push
xor
stos
inc
push
mov
add
dec
ljmp
cld
pop
jge
mov
in
sub
fcmovne
mov
mov
imul
cmpsb
push
push
xchg
dec
lds
popa
inc
dec
roll
clc
hlt
lds
xchg
rcrb
sahf
imul
stos
in
in
push
sbb
repz
adc
lods
xor
js
lods
jmp
sbbl
push
mov
jmp
push
lahf
jle
gs
sahf
ret
xchg
xorl
in
sub
mov
and
cmc
mov
mov
pop
dec
or
or
inc
mov
xchg
lahf
rcl
in
add
cmp
out
fisttps
jmp
sub
out
adc
inc
mov
cmpb
outsb
fdivrs
mov
sti
ret
dec
call
adc
popf
subb
sbb
ljmp
push
xchg
fbld
lods
or
out
jecxz
add
add
add
ja
daa
dec
inc
xor
jns
repnz
outsb
int
mov
arpl
xor
rcrl
test
ja
shll
cwtl
dec
cmp
push
ret
xchg
lock
xor
xchg
shll
int3
cmc
mov
js
add
imul
sar
fs
test
xchg
loope
stc
mov
ljmp
in
adc
push
sub
jl
push
xlat
add
ret
cltd
sbb
pushf
and
mov
push
adc
mov
jno
sbb
jno
pop
and
dec
sub
cmp
repnz
fs
lds
and
imul
ss
imulb
sbb
stos
push
lahf
adc
out
jmp
lret
jbe
add
mov
adc
and
push
dec
aaa
ret
adc
cwtl
pop
daa
push
fisubrl
scas
inc
lret
jne
xor
xchg
fcompl
sub
cwtl
jg
pop
fadd
xor
inc
cld
into
pop
arpl
lret
sbb
mov
data16
loopne
push
not
xor
pushf
adc
nop
loope
popa
lret
pop
test
add
jg
testb
dec
cmc
daa
mov
jp
and
dec
loopne
xchg
or
mov
lret
adc
jmp
jne
aad
subb
push
sbb
sub
call
scas
iret
sahf
pop
popf
adc
loopne
jb
fdivs
jbe
xchg
flds
sub
scas
mov
adc
repz
dec
imul
jns
lahf
ficompl
dec
lcall
call
jb
jno
mov
pop
push
xchg
jno
js
sarl
cli
pop
mov
add
aas
shll
cmp
pop
mov
sahf
xchg
jecxz
mov
out
xchg
xor
add
or
in
sbb
adc
mov
pop
shrb
je
jae
jb
popa
xchg
add
and
outsl
rorb
adc
mov
int3
xchg
jae
ds
push
inc
jle
call
out
push
fldt
popa
jnp
cmc
push
sbb
pop
sbb
popf
test
pop
jp
jo
sbb
pop
movsl
jle
inc
dec
insl
stos
icebp
hlt
fmul
stc
push
xlat
in
subl
js
aas
mov
aam
lock
mov
js,pt
out
mov
jns
setno
iret
pusha
xchg
mov
ja
xchg
test
jbe
in
subl
sti
xor
lret
jmp
out
mov
mov
ja
aaa
sbb
movsb
xchg
sub
add
clc
data16
aas
and
mov
sub
loop
inc
sbb
or
xor
sahf
pop
mov
mov
je
inc
push
ds
repz
in
ss
fsubp
or
push
mov
out
add
push
fwait
stc
xor
stos
arpl
stos
mov
xchg
scas
loopne
pushf
aaa
push
repnz
lret
lcall
and
xor
test
loopne
in
jo
je
das
retw
and
loop
mov
mov
mov
dec
addr16
mov
push
push
jno
cmp
inc
mov
je
push
test
subb
and
mov
movsb
lods
mov
pop
push
out
jmp
mov
sub
mov
stos
cmp
and
jb
mov
jne
sbb
dec
hlt
stos
insb
incb
inc
push
imul
frstor
xor
mov
lcall
aam
loop
inc
jmp
push
ret
negl
cmp
sbb
push
pop
add
sub
sarl
sbb
arpl
inc
cli
jecxz
outsb
and
or
mov
pop
or
mov
lret
test
into
pop
pop
dec
sub
data16
mov
or
fwait
loope
daa
test
sbb
mov
lods
jae
ficompl
xchg
inc
jle
mov
pop
or
aaa
ror
or
push
xchg
mov
clc
insb
mov
movsb
mov
enter
mov
out
mov
sbb
sbb
out
enter
adc
mov
inc
sarl
repnz
iret
push
arpl
jle
je
sub
in
dec
mov
jl
rcr
dec
inc
sbb
test
dec
icebp
mov
cltd
fnstenv
mov
or
int
cwtl
mov
ret
push
mov
sub
fidivrs
push
push
sbb
gs
out
imul
out
insb
mov
inc
jge
lahf
negb
popa
icebp
cmpsb
insb
sbb
pop
popa
in
xchg
or
mov
xlat
inc
xor
jns
shrl
lahf
pop
mov
push
loopne
test
adc
xchg
xchg
mov
push
and
xor
jno
aaa
sbb
adcl
mov
dec
bound
or
add
sub
in
add
stc
mov
xchg
lods
jg
mov
std
push
push
popa
cmp
ret
xlat
dec
rol
fisttps
xor
and
pop
jge
cmc
push
leave
cmp
xor
mov
jae
or
xor
sahf
cmp
or
call
dec
jne
ret
enter
mov
ljmp
movsb
dec
int3
fiadds
push
outsb
and
imul
pop
imul
cmp
mov
cld
jp
pusha
jecxz
inc
lods
xchg
push
out
adc
jnp
sbb
out
push
sarb
push
adc
test
xor
sub
sbb
mov
gs
imul
xor
inc
outsl
inc
push
test
mov
arpl
adcb
adc
imul
test
fdivs
es
sub
test
xor
pop
pop
pusha
cmp
scas
insl
movsl
lock
arpl
cmpsl
aas
pop
push
jp
or
lds
xchg
jle
lds
or
mov
inc
and
adc
fcmovnb
adc
stos
jmp
push
push
daa
inc
fs
or
inc
push
decb
cmp
pop
jecxz
dec
xlat
xchg
pushf
jge,pn
imul
jp
fcoml
stos
cmp
push
call
push
mov
js
cmp
pop
or
dec
pop
in
jae
push
jbe
dec
mov
mov
lds
pop
jecxz
jge
jmp
stc
sub
fmulp
cltd
mov
pop
mov
bound
jnp
add
in
arpl
pop
xor
stos
cmp
ljmp
sbb
and
stos
jo
dec
cmpsl
or
dec
stc
push
aam
sbb
and
pop
pop
outsl
add
mov
mov
sub
xor
or
sub
mov
cmp
xchg
jmp
repz
add
sbb
xlat
addr16
aad
out
subb
test
xchg
jl
xchg
sub
int3
in
sub
cmp
add
aas
mov
inc
loop
cmpsb
sahf
loop
push
les
push
ljmp
into
pushf
test
jns
enter
sub
inc
int
cmc
stos
repnz
xor
jns
std
cs
mov
xchg
pop
test
es
shlb
lods
and
mov
pop
dec
pop
inc
addr16
incl
int3
aam
lods
cmp
jmp
jecxz
push
xchg
lock
popa
pop
rclb
and
xlat
test
sti
cwtl
shrl
pop
inc
scas
fistpll
and
xor
in
lods
sarb
jae
push
pop
push
xlat
mov
jmp
xor
push
xchg
add
js
sbbb
ds
aaa
cmpsb
ja
pop
rcl
test
push
cmp
sahf
ds
push
jp
inc
mov
dec
add
fistl
add
pop
clc
mov
mov
or
vsqrtpd
aas
popf
in
push
cmpsl
fldenv
mov
sti
mov
es
lcall
pop
jmp
xchg
ret
add
mov
sub
push
dec
stos
shlb
push
sbb
cs
fiadds
out
outsb
lea
je
xor
jge
in
xchg
add
scas
rclb
inc
test
popf
aaa
aam
pop
paddusw
in
testl
rorb
jp
daa
std
mov
imul
ljmp
xor
inc
notb
jle
ficoml
enter
mov
cmp
fs
mov
stos
pop
loop
sub
pop
daa
mov
stos
adc
leave
xchg
mov
scas
cld
aam
cli
mov
sbb
insl
pushw
inc
out
mov
sbb
imul
xchg
scas
push
rorl
xchg
icebp
push
pop
xlat
repnz
ja
xchg
xchg
adc
mov
mov
mov
mov
xchg
xchg
negl
pop
pop
xchg
lar
adc
mov
enter
mov
in
jle
movsl
orl
pusha
add
iret
or
mov
aas
stos
adc
adcl
aaa
jmp
psrlw
mov
loopne
xor
or
out
lods
into
mov
dec
dec
int3
jae
aam
in
arpl
fdivs
test
pop
test
mov
mov
icebp
adcb
call
dec
jbe
jne
mov
adc
in
xchg
and
mulb
ret
lahf
fadd
fidivrl
loopne
mov
xchg
jecxz
cld
dec
lods
pop
ret
push
sbb
add
mov
sahf
cli
and
xlat
xchg
add
xor
lea
aaa
pop
fs
mov
jne
xchg
movsl
jb
and
hlt
and
lea
lcall
sbb
inc
jb
pop
adc
xchg
sub
mov
add
cli
ret
fs
call
add
lods
push
jge
stos
int3
inc
jno
dec
cmp
cmp
aad
out
mov
lret
inc
ficoms
pop
hlt
decl
sbb
cltd
inc
pop
das
xor
or
std
cmpsb
dec
repz
ficoms
mov
mov
sti
fcmovnb
movsl
adc
push
imul
mov
xlat
and
adc
or
adc
scas
leave
pusha
adc
adc
xchg
psrld
sub
push
cwtl
cmpsb
mov
in
cs
aas
sub
addr16
out
cli
mov
mov
lret
sub
paddw
in
test
sub
mov
int3
jg
mov
or
push
shrb
and
insb
lret
push
pop
movsb
mov
jae
lcall
dec
pusha
mov
icebp
sti
mov
inc
add
leave
testl
sbb
lods
mov
jle
pushf
mov
inc
repz
inc
push
mov
cmpsb
outsl
sub
hlt
xchg
daa
lods
jl
push
sbb
sarl
pop
push
lea
mov
fs
fs
push
jp
in
push
subl
or
push
mov
nop
stos
ljmp
inc
leave
arpl
xor
aas
cmp
sub
sub
push
imul
sbb
lock
popf
out
loop
adc
jnp
cmp
or
pop
test
push
fsub
out
push
outsl
insl
loope
jmp
inc
mov
xchg
mov
push
aaa
clc
mov
xchg
xchg
cmc
push
push
add
lahf
xchg
ljmp
lret
fists
cmp
mov
mov
adc
adc
aaa
in
lea
pop
push
ljmp
les
mov
lods
stos
popf
repz
pop
xchg
sub
cmp
into
mov
pop
pop
sub
iret
loope
loope
outsb
mov
adc
dec
in
iret
pop
push
out
les
adc
sar
jmp
leave
cmp
cmp
jb
pusha
lods
pop
lahf
push
test
sbbb
fsubrs
in
mov
fcom
arpl
jns
adc
xor
inc
push
std
in
mov
ja
jle
mov
lret
icebp
add
into
xchg
mov
ror
dec
adc
or
lea
mov
pop
adc
push
mov
sub
push
mov
in
jb
bswap
pop
test
jg
imul
inc
mov
repz
or
jmp
jecxz
cs
sub
test
jl
popf
inc
test
jb
cmp
dec
jmp
pop
lcall
call
orb
and
jle
add
cmp
test
xchg
movsb
scas
test
mov
mov
cs
xor
orb
add
imul
dec
ss
mov
mov
pop
sar
adc
push
cmpsb
push
cmpsl
adc
outsl
aaa
xchg
xor
pop
and
mov
sysenter
mov
and
sbb
push
jae
mov
jbe
and
repnz
out
xchg
jg
imull
push
or
sbb
jnp
addr16
into
test
adc
xor
add
pop
outsl
xchg
push
push
hlt
jmp
cmpsb
jne,pn
scas
sbb
inc
add
dec
jne
dec
pop
inc
cmp
pop
in
loop
mov
lcall
mov
aas
cmpsb
rclb
mov
pop
out
ficoms
out
sbb
sar
push
mov
jne
loopne
lods
lock
inc
ja
je
mov
push
dec
xorl
insb
in
and
cmc
push
push
xchg
inc
pop
ss
xchg
or
mov
movsl
cmp
and
stc
cmp
adc
fstl
mov
fdivrl
call
lods
cmovbe
dec
fldcw
loopne
shlb
vmaxss
enter
xchg
pushf
jp
xchg
lock
xchg
mov
cld
xor
lock
ss
jge
xchg
xchg
jecxz
shl
lds
fwait
js
test
mov
pop
mov
es
pushf
push
cmp
cmpsl
xchg
dec
inc
data16
mov
and
sbb
pop
inc
cmp
lret
xchg
rorb
inc
inc
xchg
es
pop
pop
js
andl
jne
scas
test
jbe
or
mov
dec
fsubrp
int3
or
imul
bound
repz
fwait
test
fisttpl
fidivrl
pop
in
loope
fwait
push
insb
das
xlat
jnp
fucomp
ds
das
push
std
rorl
sbb
xor
mov
psraw
clc
jno
cmp
jnp
xlat
and
inc
inc
fmulp
xor
cmp
nop
lret
notl
mov
movsl
cltd
mov
pop
leave
adc
jae
adc
jl
lea
js
sti
jne
jmp
imul
sbb
xor
jecxz
imul
xchg
add
lcall
dec
out
pop
ror
mov
movsl
add
sub
cmp
lods
pop
adc
or
or
outsl
jno
jecxz
fs
inc
dec
out
cmp
fmul
sub
repnz
rcll
leave
or
aas
aam
jp
or
jl
push
insb
push
fwait
jns
dec
and
mov
imul
pop
xchg
push
and
stos
sbb
stos
enter
xchg
or
push
loopne
and
mov
imul
sbb
popa
jp
iret
sahf
cmpsl
stos
pop
mov
jmp
inc
scas
testb
or
or
jae
mov
mov
test
test
in
imul
lahf
loop,pt
push
push
pop
pop
je
addr16
xor
out
lret
clc
loope
in
add
rcl
repz
adcb
out
cmp
in
mov
mov
jmp
mov
add
pop
lcall
pop
mov
cmp
repnz
outsl
dec
adc
data16
std
inc
lods
ret
ds
mov
imul
sub
lock
imul
hlt
out
shl
adc
pop
push
in
fs
or
jno
inc
mov
dec
mov
fnsave
lret
adc
int3
lcall
adc
lret
lock
enter
popf
mov
pop
icebp
and
dec
fiaddl
mov
in
cmp
mov
repnz
aad
add
xor
std
mov
xchg
lahf
inc
jnp
fcmovnu
rcl
mov
xchg
inc
outsb
lcall
adc
addr16
fldt
loopne
lcall
adc
lea
xchg
jmp
mov
loopne
cwtl
lods
test
rcrl
and
cltd
pop
std
mov
and
pop
jl
mov
xchg
sbb
test
shll
add
adc
sahf
xchg
bound
push
fwait
test
cmp
scas
push
dec
xchg
mov
push
or
pushf
or
mov
in
stc
add
int3
jl
loope
sub
leave
dec
pushf
xchg
stos
out
aad
jo
cmp
fldl
mov
cmp
cmp
cmp
scas
or
dec
push
aad
cmp
or
jmp
add
fsincos
push
cmpsl
jne
or
xchg
jmp
out
hlt
mov
dec
inc
out
sbb
lock
sbb
rcrl
inc
js
xor
or
xorb
add
and
xor
out
mov
data16
sub
fcoms
add
outsb
inc
popa
or
xchg
test
xchg
mov
mov
push
jo
loope
cltd
fiadds
clc
call
or
cmpsl
in
add
imul
mov
enter
ret
or
das
dec
pusha
cmp
and
test
aas
jbe
fmulp
push
fwait
scas
mov
add
ja
mov
fwait
xlat
les
cmc
inc
cmp
push
cmpsb
insb
cli
mov
ret
add
jmp
sbb
push
cmp
shll
ret
mov
lahf
rol
lcall
and
cmp
push
fiadds
sbb
or
ss
pop
sbb
jae
jno
jle
xor
outsl
les
pop
out
jns
jmp
and
cmpsl
cmpsb
cwtl
pop
call
movsl
mov
aam
pop
dec
and
ljmp
push
jmp
popf
inc
adcl
sub
sbb
sub
sbb
add
orb
and
inc
sbb
rclb
leave
in
pop
xchg
cld
or
jb
pop
jb
mov
xchg
inc
cld
loope
xor
pop
mov
inc
ljmp
mov
in
adc
jg
adc
gs
mov
mov
jns
dec
in
or
mov
jbe
into
push
sub
pop
or
sbb
cmp
movsl
mov
outsl
repz
mov
scas
outsl
mov
xchg
popf
mov
xor
add
pop
push
sbb
jecxz
jae
and
pop
mov
adc
sbb
adc
loope
inc
xchg
movsb
sub
jl
fcoml
rcl
dec
mov
int3
xor
pop
lcall
push
out
xor
push
aaa
je
mov
pushf
jg
pop
int3
lahf
test
test
mov
loope
push
fucomi
ret
fcomps
test
cld
loop
movsb
out
test
test
push
sbb
sbb
push
pushf
int3
sbb
jo
jno
push
clc
into
flds
xchg
xchg
mov
or
lcall
dec
cmp
out
push
imul
out
cmp
add
repnz
mov
push
bound
test
mov
dec
or
sub
add
add
je
push
ret
andl
div
test
add
sbb
sbb
aas
mov
jl
mov
pop
fs
pop
push
and
cmc
xchg
dec
mov
pushf
push
cmp
movsb
lahf
xor
sar
add
lea
inc
cmp
fidivl
push
adc
fsubl
outsb
sub
xorb
or
rolb
cmp
mov
xor
gs
inc
mov
daa
sbb
add
mov
xchg
sub
jae
scas
mov
sbb
je
lret
rcll
pop
pushf
sti
popa
out
fwait
rcll
cltd
test
dec
bt
and
lea
ficompl
lcall
jle
xchg
adc
xor
jecxz
sti
lret
mov
jns
inc
arpl
inc
lods
mov
jl
rclb
dec
sarb
xchg
sub
mov
mov
mov
inc
push
dec
and
push
cmp
jno
fnstenv
clc
std
xor
call
int3
cld
mov
pushf
shl
addb
inc
das
fisubs
sub
loope
arpl
mov
xlat
clc
jl
insl
nop
mov
iret
jle
fdivr
scas
cmp
mov
pop
pop
hlt
xchg
xor
test
dec
mov
test
jge
mull
jp
fwait
je
popf
popf
add
test
cmc
scas
adc
mov
dec
or
add
mov
jnp
mov
inc
test
pushf
dec
mov
xor
sub
rclb
xchg
dec
dec
shl
movd
jmp
iret
and
lret
pop
mov
ja
sbb
addr16
iret
outsl
negl
adc
pop
mov
popa
movsl
stos
test
mov
pusha
pop
std
push
adc
mov
inc
fdivrp
cmp
pop
jge
not
mov
popa
sbb
mov
movsl
imul
add
nop
call
cs
cli
dec
jecxz
hlt
push
or
loope
imul
sub
jge
aam
xor
and
rol
jg
adc
cli
xor
xchg
xchg
push
inc
xchg
cmp
pushf
push
out
add
mov
cltd
rcrb
js
clc
gs
mov
js
fldl
arpl
scas
jne
pop
mov
stos
mov
dec
dec
push
xchg
fisubrl
pop
xor
cmp
push
sbb
mov
lods
fxam
mov
push
pop
repz
aam
inc
mov
ljmp
int
mov
std
test
popf
enter
pop
int
jmp
iret
pop
int3
outsb
lahf
fcoml
dec
dec
adc
sahf
scas
jecxz
xor
ja
cmpsb
adc
je
std
or
popf
divl
gs
push
pop
fs
ret
imul
sbb
mov
mov
jo
dec
mov
iret
dec
cld
mov
je
pop
jmp
and
inc
inc
idiv
jnp
test
cmp
mov
push
mov
pop
sub
adcl
stos
mov
push
hlt
bound
push
mov
aaa
xchg
jno
pop
xchg
in
push
mov
lods
test
bound
add
add
call
ds
imul
xchg
or
mov
xchg
fsubs
dec
int3
xchg
ds
cwtl
xchg
pop
mov
ja
dec
rep
insl
adc
mov
and
daa
pop
in
lret
jmp
sub
dec
sbb
xor
xchg
or
aam
sarb
inc
push
dec
dec
and
xor
inc
push
jp
push
in
mov
xor
test
out
xchg
fdivs
pop
scas
test
xchg
lock
cmp
lds
out
imul
lahf
lods
sbb
fcmove
sbb
and
xchg
movsl
jns
jne
cmp
xchg
scas
div
loopne
push
imul
in
push
fisttpll
inc
mov
xchg
inc
into
sub
mov
mov
cs
divb
scas
mov
in
call
push
jns
and
in
xor
adc
push
or
cmp
sti
and
les
mov
jmp
pop
sbb
mov
mov
bound
push
inc
push
cwtl
xchg
repnz
dec
push
mov
cmp
leave
sub
mov
les
scas
and
or
imulb
loope
and
xlat
mov
out
push
fwait
mov
push
xchg
xor
mov
addl
dec
mov
out
fsts
inc
mov
or
loopne
in
movsl
or
lds
push
fwait
xchg
in
push
dec
mov
xchg
pop
adcb
add
inc
dec
and
jne
popa
sbb
push
add
xchg
fs
sbb
add
inc
mov
xchg
out
mov
lahf
push
sbb
inc
mov
push
scas
pop
mov
mov
pusha
mov
ss
test
lock
leave
jle
mov
push
cmc
mov
and
dec
and
test
adc
mov
sub
ss
sahf
arpl
xchg
and
repnz
or
mov
or
jp
imul
xchg
inc
cmp
mov
iret
mov
fldcw
jo
push
out
cmp
popf
imul
and
mov
shl
gs
pop
dec
call
inc
mov
movsl
adc
in
jl
cwtl
push
mov
movsb
cmp
stos
lcall
inc
xchg
adc
mov
mov
adc
sti
aaa
fistl
mov
fptan
cmp
cmp
mov
hlt
cmp
push
xor
sbb
insb
fbstp
loopne
pusha
rcrb
sbb
adc
push
popf
push
clc
mov
in
loopne
ljmp
inc
xchg
frstor
clc
mov
and
sbb
jbe
fdivrp
or
fsubl
data16
sub
nop
adc
es
leave
dec
fsubl
outsb
lock
adc
mov
adc
fidivrs
xor
cwtl
or
icebp
xor
shrb
mov
mov
dec
lss
enter
mov
fdivr
jae
aas
push
mov
and
enter
fs
xor
insl
negl
mov
movsb
pop
add
lahf
add
adc
dec
lret
scas
xchg
mov
cli
pop
pop
push
mov
lods
push
sbbl
jne
jp
push
icebp
scas
and
sub
enter
div
mov
iret
jae
xchg
jne
pop
push
inc
fisttps
mov
xor
ds
xchg
jno
xchg
ljmp
mov
int3
into
pushf
xchg
mov
test
lret
mov
pop
fwait
out
mov
rol
lret
loopne
jnp
stos
xor
je
pop
jecxz
outsb
lret
push
dec
fidivrl
div
outsb
jae
mov
and
mov
lahf
mov
popf
lret
fsub
hlt
jg
std
push
outsb
xchg
inc
dec
test
add
out
mov
stc
jmp
push
loope
notb
mov
test
in
jne
les
pop
repnz
into
data16
inc
mov
dec
adc
fsts
cmp
imul
mov
mov
shrb
jo
lret
inc
push
cmp
mov
mov
mov
icebp
test
repz
repz
xchg
in
scas
xor
iret
push
psubsw
xor
ret
lret
and
ror
jbe
cs
int
cmc
mov
andl
fidivrl
out
pop
add
inc
xor
inc
les
aam
xlat
inc
es
fnstenv
push
mov
fcomi
sub
clc
leave
out
stos
xor
mov
popa
lcall
lret
push
lret
lods
outsb
aaa
leave
cltd
nop
mov
push
cs
lret
xor
sbb
or
dec
inc
pop
jecxz
pop
xchg
or
pop
in
and
mov
add
aam
stos
cmp
push
sub
adc
lret
push
or
mov
aas
cmc
pop
stc
or
sub
mov
jae
adc
cmpl
xchg
mov
imull
adc
fdiv
loopne
sbb
lods
out
sub
fsubrl
lock
sbb
sbb
mov
imulb
push
pop
mov
test
jnp
aad
ret
jo
adcb
xchg
addl
gs
in
jbe
mov
lret
and
mov
and
rcll
cmp
inc
jp
sbb
iret
mov
cmpb
cwtl
std
mov
fisubs
rcrl
xchg
and
scas
cmc
out
adc
adc
test
sbb
out
pop
and
inc
adc
pop
or
aad
or
js
lret
nop
and
pop
rcr
xchg
mov
push
data16
mov
jo
gs
xchg
push
push
cmp
cmpsl
mov
lahf
test
jl
bound
movsl
repnz
fnstcw
scas
xchg
popa
and
test
outsb
push
loopne
mov
jns
jae
mov
mov
fsubrs
mov
push
xor
sub
lcall
adc
mov
mov
fs
mov
mov
mov
inc
add
or
call
jno
xchg
mov
divl
inc
popa
xchg
mov
adc
fs
or
pusha
ja
notb
cmp
push
leave
jno
fisubs
orb
mov
sub
add
cltd
inc
adc
xor
jmp
gs
ja
and
mov
fsubrl
add
les
or
adcl
mov
lcall
lret
push
cwtl
cs
stos
mov
jl
es
scas
dec
leave
adc
outsl
lods
mov
movsb
cmpsl
fsubs
inc
push
pop
lcall
stc
roll
adc
push
outsb
paddw
sahf
mov
aas
es
sub
xchg
sub
xchg
je
je
sbb
bswap
inc
mov
xchg
mov
push
pop
cmp
daa
pop
pop
push
push
xorb
fstpl
jmp
adc
test
and
pusha
and
xchg
mov
adcl
xor
jo
push
push
sub
insb
pop
data16
push
fiaddl
lahf
cli
into
jecxz
fldenv
outsl
imul
mov
xor
add
arpl
cs
mov
push
sub
cmp
enter
mov
xor
xor
xlat
push
cmc
dec
dec
add
pushl
xor
and
or
dec
sub
push
xor
mov
pop
push
arpl
fdivrl
inc
mov
arpl
je
sub
fistps
fbstp
in
mov
mov
cmc
out
fidivrs
jle
mov
fsubs
mov
mov
add
sbb
pop
out
or
ret
mov
andb
fisttpl
mov
add
into
jno
sub
or
mov
and
sbb
sub
xor
mov
lahf
xchg
pop
cmpsb
ja
scas
mov
iret
and
xchg
add
ds
frstor
icebp
stos
ret
or
mov
pushf
addr16
dec
mov
outsl
scas
data16
hlt
sarl
mov
out
cmp
imul
xor
ret
popa
insl
test
movsb
fistpll
mov
sbb
ret
fcoml
inc
xchg
pop
dec
pop
ret
movsl
sub
mov
fwait
push
and
or
add
lret
mov
mov
movsb
jns
shlb
sbb
insb
lock
xor
loop
rcll
jns
cmpsb
sbb
in
mov
inc
adc
lcall
mov
adc
fsubr
les
xchg
imul
jle
push
rolb
mov
adc
lahf
xchg
jg
popa
outsb
push
sub
popf
pop
enter
add
pop
outsb
push
je
imul
xchg
push
in
pop
xchg
fwait
imul
sub
mov
push
jns
lahf
or
lds
pop
cmp
clc
test
xchg
insl
push
out
out
push
pop
push
sub
leave
sbb
fincstp
pop
std
cs
gs
push
xchg
lret
jecxz
pop
adc
js
mov
push
cld
dec
cld
inc
dec
sub
pop
pop
iret
arpl
out
add
gs
int3
mov
idiv
mov
call
push
stc
addl
mov
and
stc
pusha
fs
out
inc
or
sbb
mov
js
das
mov
push
addr16
outsl
testb
loope
ljmp
add
adc
mov
mov
cmp
push
cmpsl
jne
outsl
cmp
push
lret
negb
push
pop
ss
pusha
push
mov
sbb
pop
mov
add
movsb
or
adc
and
pop
mov
mov
insl
pop
ret
dec
and
imul
hlt
leave
inc
sbb
lods
ja
sub
jp
jmp
in
sbb
clc
and
fs
pop
ret
pop
scas
dec
sbb
testl
ds
sbb
add
inc
dec
and
test
pop
xchg
and
and
test
mov
xor
leave
add
mov
arpl
in
aad
inc
mov
cli
jno
add
xchg
ds
ds
mov
lret
lea
repnz
movsl
pushf
mov
popf
cmp
enter
inc
lds
jne
hlt
xchg
dec
je
lock
std
sbb
xor
lods
pushf
mov
ffree
xchg
mov
rorl
gs
dec
in
xchg
and
outsl
mov
add
aaa
mov
ljmp
dec
iret
mov
dec
xor
mov
pop
jno
adc
push
repz
fsubl
push
in
jmp
xchg
sbb
xchg
dec
rorl
sbb
in
jne
jmp
in
stc
icebp
push
mov
ret
hlt
inc
stos
add
adc
add
or
xor
sub
jns
inc
adc
roll
sarb
adc
dec
sbb
or
popl
sbb
fstps
insb
lret
add
pop
cmp
cmpsb
pop
pusha
gs
in
insb
add
cmp
mov
mov
cwtl
cs
icebp
leave
or
jg
outsb
outsl
dec
cmc
inc
xchg
push
divb
dec
icebp
and
xchg
stc
addb
xor
xchg
dec
ret
cwtl
mov
inc
and
adc
inc
ss
xor
cmp
pop
ja
dec
aad
or
cwtl
repz
jns
pop
popf
and
dec
cltd
push
aam
xchg
pushf
jg
iret
jnp
call
inc
dec
jo
mov
bound
out
out
loop
mov
fsubrs
inc
add
xor
fwait
xchg
cmpsb
movsl
les
inc
adc
orl
rcll
jp
insb
test
fs
sahf
ror
mov
das
pushf
rorb
sbb
jg
in
jb
icebp
ret
iret
shrl
mov
pop
or
sub
fldt
mov
cmp
adc
or
jnp
push
faddl
or
adc
sbb
int3
push
mov
scas
inc
lods
cmpb
cltd
xchg
das
add
aas
arpl
sub
xor
scas
cld
into
adc
add
mov
dec
cmpb
ficoms
cmc
jno
mov
push
sub
stos
in
and
insb
push
sbb
js
inc
pushf
fadds
mov
hlt
rol
imul
cmp
dec
cmp
or
add
movl
jg
aam
hlt
or
loope
xchg
mov
jmp
lods
cmp
pop
arpl
mov
mov
xor
sub
dec
fbstp
sub
dec
outsb
imul
mov
xchg
dec
add
dec
not
add
gs
lock
push
lock
data16
test
lock
outsl
mov
cs
or
popf
pop
aam
dec
stos
outsl
outsl
mov
push
cmp
add
jp
out
lret
in
cwtl
sub
ficomps
roll
ja
jecxz
faddl
lds
lock
mulb
push
das
inc
arpl
les
cmp
mov
sbb
mov
jns
shrb
pusha
xor
or
push
jne
cld
pop
lahf
test
cmpsb
lahf
test
mov
mov
popf
out
and
xor
imul
shr
mov
insl
movsl
movsb
add
int
ror
push
out
stos
cli
jne
leave
nop
cmp
mov
cmpsl
pop
ja
imul
repz
mov
inc
sti
sbb
mull
repz
mov
test
imul
xor
les
out
xchg
outsl
jb
in
push
es
cmpsl
lret
jg
je
or
mov
push
mov
sti
test
mov
push
addr16
jmp
outsb
int
mov
dec
mov
or
push
pop
add
aaa
dec
cmp
mov
push
loop
out
sub
ds
fwait
jns
mov
jg
pop
mov
jge
mov
shlb
lods
mov
enter
push
std
je
sbb
adcl
adc
lock
pop
push
and
push
test
frstor
and
popa
repz
fisttpll
sub
das
in
shll
nop
mov
imul
cld
mov
pop
outsb
insb
fcoml
xchg
mov
ljmp
jae
mov
sbb
cltd
std
push
push
test
sbb
xchg
and
outsb
stos
fadd
mov
lret
sar
test
mov
test
jmp
or
arpl
jno
pop
fildll
aaa
xor
or
xchg
leave
mov
shlb
xchg
jnp
rcrl
mov
inc
lds
popa
sub
sub
clc
jb
xor
repnz
ss
and
xor
int
xor
dec
jo
arpl
adc
adc
sub
loop
inc
xchg
int
dec
mov
das
pop
dec
call
mov
test
xchg
call
call
mov
movsl
aaa
filds
and
xchg
mov
adc
xor
mov
out
out
xchg
lret
inc
add
hlt
and
or
cmp
fisubs
push
mov
ljmp
mov
enter
clc
pop
adc
mov
jp
fnsave
scas
fwait
jne
negl
mov
lea
sahf
xchg
shl
or
or
xchg
cmp
ror
imul
mov
cmp
in
lods
pop
arpl
mov
push
push
sub
jo
and
add
jnp
repz
jmp
mov
push
cmpb
lret
mov
ret
and
jo
inc
test
iret
dec
pop
sub
rcrl
xor
xchg
add
xchg
cli
and
sbb
bound
pop
cs
das
xor
ljmp
xchg
mov
sahf
push
sub
in
jg
iret
and
icebp
rcrl
and
data16
andb
dec
icebp
movsl
push
icebp
in
xor
in
loope
and
fdivl
aas
inc
bound
xchg
stc
xor
movsl
inc
loopne
mov
into
sbb
sbb
mov
ljmp
inc
mov
mov
xor
or
sbbb
scas
rcrl
repnz
sahf
lahf
mov
insl
xor
add
rol
mov
xchg
jae
out
rolb
pop
pop
out
push
mov
cmpsl
stos
xchg
jmp
lahf
std
aam
pop
push
jle
xor
std
push
mov
fs
shl
push
adc
push
data16
push
shrl
adc
mov
fnstcw
data16
icebp
in
inc
shlb
cli
mov
inc
pushf
js
push
pop
pop
push
mov
cmp
dec
adc
addr16
mov
xlat
pop
sub
jne
lret
cld
lds
pop
push
das
stos
cltd
insb
cmp
cli
jge
mov
test
lea
fldt
add
push
call
test
xchg
and
orb
xchg
jmp
jns
xchg
repz
ss
jb
xlat
gs
sub
mov
push
sub
out
sub
std
jle
es
inc
gs
movsb
mov
lcall
cmc
sarb
cmp
outsb
cmpsb
rcrl
popa
rcl
and
xchg
in
dec
and
test
xor
mov
push
pop
cli
sarb
and
dec
adc
je
lds
or
adc
mov
fcoml
push
mov
push
sub
fidivs
jle
jle
imul
out
adc
sub
mov
cmp
insb
int3
lret
push
loope
int3
stos
gs
lret
push
jmp
fdivrl
lcall
cltd
push
jae
repnz
outsl
mov
fdivrl
adc
pop
mov
cmpsb
repnz
sub
cmp
pop
cmp
add
nop
scas
lds
into
mov
xor
repz
adc
pushf
add
push
adc
leave
or
ja
sbb
shrd
add
filds
decb
fnstsw
push
add
stc
adc
ficoms
dec
daa
daa
test
jg
or
mov
xchg
in
outsb
sarb
pop
mov
mov
inc
test
sbb
lods
pushf
push
test
xchg
or
test
es
mov
mov
mov
sbb
jmp
dec
sub
dec
sbb
lea
jnp
xchg
loop
cmp
inc
cmp
imul
xchg
xlat
mov
insl
loop
rorl
push
xor
cmp
mov
mov
icebp
xor
enter
loope
mov
mov
sti
loopne
xor
ja
idivl
adc
sub
test
jo
in
inc
mov
dec
push
fwait
das
aaa
dec
sub
mov
out
xchg
in
test
push
sahf
push
fstpt
ja
or
mov
push
push
fdivl
outsl
lods
mov
outsb
add
pushf
enter
inc
sub
les
imul
add
rorl
inc
pop
add
mov
stos
adc
das
movsl
xchg
sub
dec
pop
sub
xlat
sbb
mov
or
inc
mov
cmpsb
shrb
mov
sbb
insl
inc
dec
stos
add
outsl
xchg
push
inc
xchg
lods
xchg
das
pop
mov
cltd
sub
xchg
add
xchg
xchg
mov
imul
push
pop
roll
adc
jo
repnz
or
aas
loop
dec
xchg
mov
xchg
aad
mov
ljmp
mov
adc
daa
imul
or
in
or
rcrl
jae
lods
scas
imul
push
sar
cmc
lods
cmp
lcall
push
fimull
lods
enter
mov
push
lret
jecxz
out
xor
push
std
sub
sahf
jp
xor
enter
mov
cmp
lds
mov
hlt
mov
lcall
cmp
lods
mov
mov
pop
rcrl
outsb
xor
daa
adc
iret
aad
jmp
inc
addr16
mov
jg
cwtl
rcrb
fxch
jp
mov
out
add
and
mov
ljmp
jae
shrb
mov
shlb
push
xor
inc
shlb
in
in
xor
xorb
iret
inc
and
push
mov
movsl
pop
inc
add
mov
mov
dec
aam
dec
xrelease
bound
xorl
xchg
mov
sbb
out
scas
adc
pop
fiaddl
shll
dec
push
daa
dec
mov
or
aas
push
in
cltd
out
sub
mov
fists
cli
insb
sub
out
inc
das
mov
push
dec
pop
dec
push
inc
lea
fmull
mov
lret
jecxz
shll
add
pusha
addb
jg
dec
scas
pop
mov
mov
movsb
fwait
mov
jnp
xlat
mov
out
nop
mov
in
jae
pop
pop
cld
stos
inc
outsb
lods
outsb
push
fiadds
lock
in
mov
lcall
pop
pop
jne
aad
push
std
loope
push
enter
and
aad
xor
pop
ss
mov
mov
xor
cmc
mov
add
xor
roll
out
fdivs
mov
inc
shlb
sub
dec
inc
loop
xchg
enter
aas
stos
outsb
das
xorb
lahf
int
mov
sar
insl
leave
fxtract
imul
mov
imul
cmp
jecxz
loop
sub
mov
inc
inc
pop
scas
pushf
mov
das
fcomip
jnp
fs
sarl
push
pop
sbb
inc
fwait
jno
fadds
fwait
sub
in
iret
xchg
cmp
xchg
jle
add
jle
jp
xlat
int
sub
or
push
mov
inc
dec
movsl
and
lods
jle
in
sbb
movsl
in
push
jae
jl
push
daa
sahf
xor
ss
je
jbe
hlt
stc
xchg
outsl
sbb
repz
mov
nop
test
cmp
in
fistps
std
push
inc
int
aaa
bound
mov
into
and
inc
push
in
andb
jecxz
add
push
xchg
push
mov
push
xor
push
or
sbb
and
sbbl
dec
bound
fnstenv
stos
aaa
cmp
in
ficoml
add
mov
es
xor
cwtl
jbe
cltd
es
mov
cmpsl
xor
or
aam
inc
mov
sbb
sbb
add
add
stos
movsl
jmp
jnp
dec
outsb
jp
fisttps
mov
repnz
xchg
enter
mov
adc
aam
out
mov
inc
xor
mov
lret
xchg
mov
inc
jge
inc
fcmovnu
sbb
inc
cmp
cmpsl
cmp
mov
sub
and
jns
and
mov
or
test
les
out
sbb
lock
jl
add
sbb
in
dec
adc
shlb
xchg
loop
push
enter
jae
pop
cmp
and
xor
inc
sbb
jo
pop
dec
mov
dec
or
xor
inc
jb
add
adc
popf
xor
or
mov
adc
pop
enter
pop
rol
dec
jl
repnz
push
inc
cld
fsubrs
cmpsb
xchg
dec
dec
and
int
inc
nop
pop
xorb
push
add
stc
or
pop
es
xchg
ret
pop
call
jle
pop
add
jge
jae
adc
fs
xchg
xorb
cmpsl
inc
sarb
and
push
movsl
ret
xchg
jns
mov
gs
inc
sbb
mov
ret
inc
sub
mov
movsl
subb
les
out
fisubrl
xlat
inc
mov
insb
loopne
mov
mov
lea
int3
pop
aaa
or
mov
mov
in
dec
xchg
scas
and
lock
add
mov
gs
xchg
sub
out
jmp
mov
orb
xor
mov
jp
and
dec
lea
sbb
repz
xor
rep
jle
sub
adc
or
mov
jmp
ret
pop
pushf
add
cmp
adc
call
outsl
mov
add
xchg
mov
je
mov
xor
fdivs
add
in
jnp
jne
mov
sub
jnp
sbb
mov
pop
lods
adc
sbb
in
rol
add
loope
push
lret
daa
call
mov
and
cmc
mov
dec
sti
cmp
repz
imulb
xorl
jbe
aaa
jo
mov
xor
insb
push
dec
sarb
sub
fcompl
lea
add
inc
lret
imul
shlb
push
xchg
shlb
add
rorb
mov
push
lods
stos
push
mov
shl
mov
jmp
dec
pop
cli
pushf
popl
repz
jne
push
out
fiaddl
dec
sbbl
rol
xor
xchg
fdivrp
mov
imul
jns
jl
imul
gs
pop
cmp
xor
add
mov
cli
xchg
clc
and
sti
mov
scas
icebp
xchg
or
addr16
cmpl
frstor
mov
xor
and
subl
push
movsl
add
jge
jmp
inc
pop
mov
xchg
fildll
mov
outsb
or
stos
push
cs
push
cmp
jno
dec
or
fdiv
push
cmp
jecxz
add
aas
mov
test
test
js
jge
pop
orb
add
jbe
pop
dec
call
es
or
sti
aaa
xor
sar
or
push
scas
add
adc
fnstsw
je
mov
add
jo
and
pop
ret
dec
out
stos
int3
das
adc
rorb
cmp
into
shl
push
aad
cmp
stos
cmp
ja
out
mov
mov
in
xchg
cmp
mov
mov
out
fxch
sbb
jno
push
pop
movsl
test
xchg
aad
xchg
jno
in
jo
sbb
test
dec
hlt
mov
test
ja
addl
pop
or
xchg
push
cltd
rep
adcw
insl
mov
mov
mov
dec
xor
jg
loopne
lahf
inc
loopne
adc
or
xchg
data16
inc
sarb
iret
sbbl
ljmp
cs
test
pop
dec
arpl
push
imul
or
add
lods
pop
scas
jae
pusha
and
mov
mov
out
test
notb
stos
test
push
mov
into
lds
or
rorb
mov
incb
add
subl
rclb
pop
xchg
sahf
int3
cli
cmp
lods
jne
lea
imul
inc
sub
sub
add
pop
and
inc
stos
jmp
xchg
xchg
les
or
rorb
fidivl
xchg
nop
cmp
xor
js
jb
loope
xchg
jecxz
push
lock
cwtl
pop
nop
mov
dec
scas
sbb
es
cmpsl
sbb
test
mov
mov
sbb
jb
rcll
insl
push
mov
aam
ret
iret
hlt
mov
ljmp
pop
push
in
xchg
subl
mov
and
sarb
pop
ret
mov
xchg
ficoml
test
js
inc
gs
sbb
fidivrl
lock
pop
sub
js
jmp
xorb
fidivrs
pusha
mov
mov
roll
pop
aaa
and
pop
jns
or
mov
xchg
mov
push
mov
mov
mov
or
xor
roll
cmp
cmpsl
xchg
ljmp
and
pop
mov
int
cmp
movsl
jmp
scas
adc
in
adc
pop
test
cwtl
call
pushf
xchg
gs
outsb
fmull
in
mov
dec
mov
out
jb
mov
pop
shrl
imul
xlat
adc
pop
dec
mov
push
xlat
push
rclb
repz
movsb
mov
mov
mov
xor
orl
cwtl
xchg
or
xchg
scas
out
pop
dec
jnp
bound
inc
js
xor
add
outsb
jno
xor
jo
xor
aad
addl
dec
adc
mov
mov
add
mov
adc
cmp
jl
cwtl
mov
in
mov
jmp
and
pop
or
cmp
pop
nop
into
imul
or
orl
lds
xor
mov
dec
mov
mov
daa
pop
sub
push
xlat
fs
and
daa
stos
mov
sub
sub
xor
imul
sub
xchg
fxch
mov
adc
fbld
mov
bound
inc
sub
inc
add
pusha
outsb
ss
pop
fwait
cmp
inc
mov
adcb
or
lret
addr16
test
out
xchg
push
loope
sub
jns
sbb
jg
icebp
rcrb
in
scas
jnp
out
inc
gs
out
in
ficompl
pop
sbb
push
mov
cmc
scas
cmpsl
lret
lret
insl
push
ja
dec
xchg
insl
imul
xchg
mov
subb
scas
shll
lock
iret
sti
fstpl
movsb
mov
ljmp
sbb
xorl
jae
mov
jp
es
sbb
add
jb
jp
repnz
mov
aaa
adc
ljmp
jl
daa
mov
imul
js
popl
dec
addl
ja
and
jnp
lock
or
lahf
fimull
sub
lret
jmp
pop
cltd
iret
mov
inc
mov
loop
arpl
mov
test
into
or
out
hlt
ret
jecxz
mov
adc
xlat
in
scas
ja
sbb
push
pop
and
or
inc
adc
add
out
leave
sbb
xchg
or
addr16
and
int3
cmp
push
mov
int3
xor
mov
cmp
mov
push
cmp
lcall
inc
lret
in
push
adc
ljmp
mov
jmp
jno
lret
mov
mov
imul
roll
jmp
add
popa
push
cmp
cli
mov
jb
push
js
ss
jns
ljmp
jnp
lret
and
adc
jnp
adc
outsb
jp
inc
test
sbb
jmp
aas
cltd
clc
int3
movsl
stos
popf
mov
mov
clc
repz
jecxz
js
cli
shrb
sbbb
pusha
cltd
jno
into
repnz
xchg
sbb
inc
outsl
repz
out
pop
ss
mov
ss
fs
arpl
arpl
shr
mov
loop
push
inc
std
sub
pop
cmp
sbb
add
ja
xchg
movb
rolb
cltd
push
adc
sub
jg
enter
xchg
ret
dec
aad
xchg
pop
xchg
das
jmp
cltd
lret
push
out
sar
insb
movsl
hlt
cmp
cmc
fisttpll
cmp
push
pop
xchg
mov
test
rorb
mov
add
mov
lods
and
xchg
test
mov
std
adc
add
pusha
pop
in
push
adcb
jno
cmc
fs
sub
or
iret
out
dec
mov
xor
in
mov
test
pop
sbb
aas
and
iret
jnp,pn
insb
and
jmp
add
into
xor
xchg
ror
mov
data16
mov
dec
lret
cmp
inc
jns
ja
testb
sub
xlat
cmpl
mov
sub
and
lock
jmp
push
in
and
arpl
loopne
les
mov
pop
cmp
js,pn
mov
clc
mov
sbb
or
jno
leave
cwtl
xchg
sub
and
mov
adc
inc
xchg
lods
push
adc
push
sub
jecxz
stos
xchg
dec
stos
push
xrelease
mov
jae
addr16
mov
aam
cs
mov
or
jb
sbb
pop
and
add
add
pop
mov
mov
fists
mov
mov
xchg
ss
out
lock
and
sbb
mov
add
aaa
adc
jle
pop
dec
inc
xor
roll
dec
decb
lods
push
pop
push
outsb
stc
jecxz
ss
push
lret
push
iret
cmp
sub
mov
ret
dec
or
xor
lods
enter
adc
xor
shrl
jg
loop
nop
call
dec
outsb
jne
outsb
test
pop
insb
pushf
xchg
push
push
mov
popa
adc
movsb
rcll
out
or
mov
repz
inc
cmpsb
mov
sub
clc
mov
jno
jecxz
out
rcr
jg
mov
cmpsb
xchg
scas
lock
or
mov
cmp
fwait
cwtl
es
cmp
out
imul
clc
jecxz
adc
loope
pushf
iret
dec
and
dec
xchg
pop
sub
sub
cmp
xchg
jb
jae
stc
out
jg
or
icebp
adc
push
cmp
aam
jno
int
outsl
clc
push
cltd
or
popf
jbe
movsb
rcl
mov
push
sub
addr16
in
loopne,pt
and
jp
ret
dec
or
out
fs
sti
push
pop
lret
sarb
sbb
out
add
cwtl
test
lock
or
inc
rorl
js
add
fdivl
js
shll
and
bound
adc
int
push
mov
push
push
outsb
mov
dec
popf
out
stos
fwait
outsl
inc
and
add
rolb
dec
loop
sub
xchg
jg
cmp
or
xchg
pusha
dec
dec
mov
fcom
mov
and
repnz
data16
pop
jno
in
jmp
pushf
inc
repz
adc
lods
outsl
add
and
adc
adc
mov
repnz
push
dec
push
lods
scas
repnz
sar
mov
sub
sub
mov
test
fcompl
push
negb
sub
push
cmp
xlat
jge
dec
loopne
pop
push
lds
testb
shll
and
cmp
fldt
xchg
and
sub
es
popf
and
aas
push
stos
add
cmp
test
mov
xchg
fiaddl
inc
pop
cmp
lods
aaa
pop
inc
inc
repnz
aaa
sbbl
dec
fistpll
sahf
dec
mov
jl
imul
movsl
add
mov
outsl
mov
mov
aaa
cmp
and
xor
push
loopne
rorb
leave
sub
and
push
inc
lcall
xor
test
xor
mov
inc
adc
jle
cmp
dec
or
fisubl
es
lcall
ficomps
xchg
sbb
sbb
lods
test
cmpsl
inc
test
xchg
pop
xor
iret
cwtl
sbb
cmp
jbe
lret
hlt
ljmp
or
mov
and
add
mov
push
inc
cmc
fidivrl
subl
jp
push
and
pop
and
xor
or
add
sarl
leave
mov
push
ljmp
cwtl
mov
rolb
sub
insb
push
jmp
push
dec
loop
cmp
or
fstpt
push
adc
push
test
pop
xor
cmp
outsb
lcall
pop
loop
push
mov
push
and
sbb
mov
arpl
push
ja
ja
jg
pop
repz
adc
push
or
sbb
fld
xor
mov
stc
ja
lret
push
imul
aad
adc
mov
add
dec
xchg
bound
popl
add
movsb
fs
xchg
mov
or
jp
insl
fstl
mov
cld
sub
int3
inc
pop
shrl
sbb
incl
dec
dec
test
xor
test
sbb
das
inc
add
dec
int3
pop
or
xlat
int
jo
jo
jg
lahf
lret
mov
stos
inc
sub
mov
iret
fnstcw
mov
faddl
jg
gs
inc
loopne
out
mov
fstl
addr16
sbb
mov
xor
je
dec
sub
aam
out
inc
aaa
cmp
or
mov
out
inc
add
aad
push
push
aas
mov
pop
xchg
in
lret
jle
js
sub
add
lods
loopne
inc
xchg
pop
push
dec
push
inc
aas
mov
or
imul
and
mov
fildl
push
addr16
sbb
push
imul
das
hlt
std
mov
aad
lods
xchg
sarb
xor
rorb
and
fstp
popa
inc
push
loop
sbb
mov
fimuls
lret
mov
cmpsl
jne
dec
inc
xlat
fnstcw
loopne
inc
add
jp
push
adcl
sub
es
lds
rorl
aam
mov
or
out
shrl
dec
sti
dec
pop
aad
sti
sbb
out
pop
jp
pusha
adc
lcall
shr
dec
es
and
sub
jns
jecxz
sub
cmpsl
inc
mov
xor
pop
sbb
aam
pop
or
jmp
and
outsl
out
ret
mov
bound
out
fsubrl
cmp
cmp
inc
jo
roll
shr
and
jp
movsb
cld
jmp
ja
and
xchg
mov
out
in
fists
jl
stos
js
xchg
dec
aas
test
add
dec
cmpsb
nopl
jns
pop
push
cmp
das
sub
push
mov
in
popf
pop
pop
pop
addb
lea
mov
cmpsl
jnp
testb
and
xchg
jae
ljmp
scas
xchg
icebp
out
lods
cmp
call
rorb
sbb
mov
mov
cwtl
xchg
adc
mov
clc
test
or
insl
popf
test
push
imul
mov
in
out
dec
inc
outsl
mov
lahf
outsl
cmp
mov
xor
enter
mov
and
mov
shrb
mov
adc
xor
ds
dec
lds
imul
xor
pop
or
sahf
sub
mov
icebp
xchg
xchg
pop
out
aad
mov
sub
jb
mov
les
out
cmc
add
cltd
mov
mov
sarl
ret
jle
ret
inc
fists
out
and
jbe
fidivrs
sub
clc
dec
jmp
pop
or
inc
mov
iret
lds
imul
push
out
inc
pop
fmull
lods
adc
jmp
dec
outsl
adc
mov
lods
push
add
mov
jmp
mov
sbb
fs
test
or
dec
jmp
pop
nop
cmpsb
jg
xchg
test
jno
popa
push
add
enter
inc
xor
cwtl
inc
and
sbb
xchg
inc
lret
aaa
xor
xor
mov
ret
insb
lods
add
repz
movsl
mov
add
in
sahf
mov
mov
or
inc
and
and
sub
jp
adc
adc
in
sbb
or
pop
and
sahf
loop
pusha
fbstp
andl
movl
hlt
aam
ror
inc
pop
xchg
aam
pop
into
jno
lret
xchg
cmc
fisttpl
shlb
test
int
mov
scas
mov
std
dec
aad
imul
or
enter
rcrl
pop
insb
scas
outsl
push
testl
or
mov
xor
sub
add
ret
sbb
dec
sub
movsl
xor
adc
cmp
sub
xchg
push
int
jnp
loop
jbe
xchg
pop
clc
xchg
xor
mov
out
or
in
aas
test
mov
addr16
pop
jp
fwait
aaa
xorl
ja
jb
or
add
arpl
and
inc
movsb
pop
popa
dec
and
movsl
inc
je
pop
cltd
and
pop
or
inc
sbb
mov
nop
repnz
cmp
mov
push
inc
pop
filds
sbb
jbe
adc
ja
cmp
adc
mov
out
mov
sub
popa
mov
cmp
mov
and
push
ja
jp
sbb
push
pusha
das
xor
daa
xchg
xor
in
scas
adcl
loopne
stos
dec
xor
xchg
popf
arpl
int
xor
xchg
out
xor
rcrl
fidivrs
int
pop
in
and
rorl
gs
lret
in
repnz
mov
fsubs
loope
ss
xchg
fsts
jle
and
jecxz
xor
les
in
jg
adc
jmp
int
pop
jbe
inc
sbb
sahf
loop
flds
dec
xchg
pop
xor
daa
jne
bound
out
or
mov
mov
pusha
xor
sbb
sub
inc
aaa
xchg
dec
cltd
pushl
das
cmp
jmp
aam
or
pop
das
add
lret
fwait
lea
cmp
jl
pop
mov
call
add
push
mov
ss
push
inc
or
push
add
jae
fsubrs
pop
clc
xor
and
jecxz
mov
xor
aam
pop
jns
pusha
aas
dec
mov
int3
sbb
push
xor
mov
inc
jg
dec
mov
addr16
cltd
sbb
out
mov
and
sub
fs
cmpsb
xor
adc
fistpll
sub
push
jns
movsl
adc
cwtl
enter
ss
bound
mov
xlat
add
pop
pushf
mov
mov
or
add
pop
inc
mov
leave
jae
pop
jo
inc
leave
push
pop
sbb
and
mov
mov
subb
dec
cmp
cmp
insb
push
lret
xor
ja
pop
adc
jo
cmc
andb
mov
or
add
and
jns
hlt
xor
jns
test
or
repz
scas
and
int
inc
js
stos
loopne
fistps
stc
cmpsb
fisubrs
jbe
pop
out
test
xchg
enter
fidivs
es
sarb
dec
into
inc
je
loop
inc
lock
test
xchg
sahf
repnz
je
fistps
push
enter
add
xor
dec
in
lahf
sub
out
xchg
pop
mov
shrb
dec
lahf
je
addl
test
jns
aas
push
cmpsl
fs
shrl
nop
inc
pop
jg
inc
sahf
pop
lods
mov
cmp
pop
nop
sub
outsl
aas
cli
xor
mov
xor
stos
xchg
aaa
xchg
rcrl
repz
movsl
fs
test
sbb
bound
mov
and
pop
movb
clc
lds
xchg
leave
hlt
inc
jns
jl
mov
ss
adc
xchg
mov
fstp
insl
mov
push
daa
stos
mov
insl
and
sbb
fwait
push
xchg
test
and
loopne
aaa
imul
aam
icebp
fdivrp
adc
sub
ror
fldenv
call
imul
cmp
in
lahf
fidivrl
mov
jb
jb
mov
fisttpll
push
stc
int3
fstp
xorl
sbb
mov
mov
out
and
mov
pop
orb
and
adc
imul
ret
and
push
shl
push
jns
mov
lcall
jp
movaps
push
add
insl
sub
jecxz
call
clc
add
pop
js
jne
xchg
mov
sbb
fisubrl
and
pop
xor
pusha
test
sub
cld
sbb
add
icebp
mov
adc
inc
mov
sub
bound
ljmp
sbb
daa
mov
loopne
ss
jae
sub
adc
repnz
mov
lahf
outsl
jne
and
xor
sub
jbe
pop
pavgb
mov
test
andl
inc
das
arpl
jno
mov
mov
xchg
mov
or
fcoms
movsb
outsb
dec
inc
xchg
adc
mov
aad
incl
xlat
pop
test
adc
adc
ficomps
stos
roll
add
jne
movsl
xor
and
cwtl
sub
loop
add
push
loope
dec
mov
dec
nop
mov
jne
leave
outsb
lcall
cld
call
mov
dec
fwait
mov
stos
addr16
repnz
ja
movsb
mov
mov
das
dec
arpl
xor
gs
nop
gs
scas
jge
hlt
rorl
pop
push
cwtl
insl
and
fs
lods
ja
xchg
push
adc
push
mov
add
xor
dec
and
int
adc
mov
dec
dec
hlt
scas
cwtl
js
mov
push
cmp
loopne
inc
jge
mov
dec
mov
xchg
add
dec
test
inc
pop
push
insl
sbb
add
inc
insb
xchg
out
or
in
in
inc
jae
push
int3
scas
cmpsb
insl
adc
loope
ret
cmp
jge
cmpsl
dec
mov
inc
fstps
adc
cmp
imul
jmp
push
add
adc
mov
addr16
in
mov
xchg
and
xchg
lock
mov
pop
sahf
pop
ds
add
adc
and
rcll
daa
lods
mov
lods
pop
dec
repz
inc
fwait
pop
push
jle
add
inc
pop
inc
push
mov
mov
fdivrl
fsubrs
aad
repz
mov
lcall
loop
xor
mov
mov
call
outsb
push
push
xchg
xchg
jae
dec
ljmp
mov
fs
inc
or
cmp
push
and
add
push
dec
ret
into
popf
jb
mov
pop
mov
lds
notb
mov
sub
subl
fisubs
cmp
cmp
movsl
mov
out
adcl
ljmp
scas
lcallw
popa
xor
and
js
pop
cli
sub
aas
push
imul
bound
mov
outsb
and
dec
ljmp
fimuls
in
xchg
pop
sbb
daa
aaa
jmp
pop
xchg
pop
or
fwait
jb
jp
sti
dec
repz
adc
in
xor
cwtl
cli
ja
inc
in
jecxz
sbb
push
in
mov
pop
and
lea
xchg
pop
or
push
daa
sbb
push
shll
sbb
xchg
in
out
dec
rcrl
das
fs
shlb
pop
mov
das
cld
jl
gs
addr16
xor
icebp
xchg
enter
rolb
sbb
gs
ja
mov
in
fs
movsb
xchg
fildll
dec
fwait
xor
aam
stc
add
push
jae
push
ror
mov
jecxz
pop
pop
pushf
sbb
add
inc
mov
hlt
out
pop
inc
fnsave
enter
dec
add
xor
mov
xor
into
sbb
cmp
iret
pop
sti
sub
push
flds
dec
stc
inc
andb
xor
xor
mov
icebp
stc
mov
lret
sbb
dec
push
mov
inc
adc
repnz
cld
movb
mov
adc
fwait
xchg
jno
jle
mov
add
push
icebp
push
addl
inc
int3
adc
out
int
cmpsb
std
mov
pop
aad
xchg
iret
mov
and
mov
movsl
mov
mov
cltd
pop
inc
rorb
lods
mov
icebp
dec
daa
jb
daa
in
adc
adc
push
push
fsubrl
faddp
jnp
daa
testl
mov
adc
mov
dec
mov
sub
mov
xchg
lea
add
sbb
inc
jo
xchg
scas
fstpt
nop
push
sub
iret
cmp
mov
push
cli
sbb
xor
push
rorb
and
sub
cwtl
push
in
jmp
xor
test
int
fisttpl
lret
aaa
xchg
es
aas
push
adc
shl
dec
mov
mov
cs
cmpsb
push
add
stos
mov
xchg
incl
lret
xor
stos
jne
mov
mov
inc
cmp
lods
or
pop
jp
xlat
jb
xlat
lds
push
lret
in
jbe
xchg
or
pop
cmp
and
cld
rclb
add
lods
repnz
pop
stc
fbld
and
add
fsubp
mov
lret
mov
sub
or
clc
cmp
adc
repnz
and
and
cmc
mov
pop
cmpsl
sub
ds
mov
push
outsl
aas
sbb
test
cld
cwtl
aas
sub
mov
inc
sbb
imul
mov
lret
sub
fistpll
xchg
mov
push
and
jge
add
push
hlt
fldcw
lret
push
test
hlt
imulb
lds
inc
dec
adc
pusha
imul
and
inc
jb
adc
insb
mov
xor
sub
aas
test
sarb
scas
inc
adc
jno
adc
xchg
stos
jne
clc
add
pop
scas
mov
push
repnz
add
int3
sbb
lods
mov
or
imul
mov
dec
aaa
lret
sbb
and
sub
mov
out
and
and
mov
int
cmp
repnz
ljmp
rolb
mov
rclb
hlt
lahf
push
aam
inc
pop
cmpsl
xchg
sti
adc
mov
add
cmp
stc
ljmp
dec
into
sbb
hlt
pop
push
pop
cld
pop
aaa
andl
xor
and
add
mov
cvtdq2ps
out
fisubs
xlat
mov
pop
addb
call
xor
jns
mov
test
jne
and
ret
inc
loop
xchg
sbb
push
add
roll
xchg
dec
sub
mov
std
xor
push
xchg
or
push
dec
test
xor
loop
sbbl
sbb
push
sbb
xor
testb
loopne
sbb
inc
dec
mov
iret
repz
outsb
sub
int
movsb
push
bound
pop
jg
imul
subl
ja
inc
imul
inc
daa
sti
cmp
aad
and
shrl
addr16
rorb
push
mov
sti
lds
mov
insb
push
pop
fwait
add
mov
mov
pusha
mov
cmp
loope
pop
push
dec
xor
xchg
fsubrs
jae
xchg
lret
xor
add
mov
dec
scas
sub
mov
movsl
jge
cmp
xlat
jl
jae
gs
xchg
sbb
sbb
pop
jp
mov
stos
pop
push
mov
push
xchg
test
cltd
push
testl
xor
jmp
jnp
xor
xchg
mov
out
arpl
mov
test
adc
das
cmp
add
sub
pop
mov
mov
fimull
test
fdivl
mov
data16
leave
sub
jbe
pop
xchg
out
and
jp
pop
in
jp
scas
add
call
add
aad
mov
in
cmp
clc
int
movsb
or
arpl
inc
in
nop
sbb
pop
mov
jns
push
fldenv
dec
icebp
daa
outsb
push
dec
and
xchg
ret
stos
inc
icebp
cmpb
stc
sahf
inc
imul
addr16
out
mov
bound
fldt
dec
mov
mov
sub
push
clc
mov
imul
mov
pop
xor
adc
inc
js
xchg
test
incl
mov
scas
pushl
data16
pop
stos
mov
loope
je
cmp
push
or
cmp
xchg
les
add
cmovl
xor
inc
adc
iret
pushf
data16
shl
push
push
mov
mov
sbb
adc
push
mov
imull
or
out
outsl
mov
jp
pop
in
mov
in
rcrl
xchg
or
xor
sub
pop
mov
fst
loope
sub
sbb
pop
jnp
fisubrl
adc
lds
sbb
fs
sahf
repz
pop
lret
push
imul
mov
and
lahf
inc
push
in
adc
mov
xor
xor
mov
push
lds
push
enter
sub
lret
into
lret
ss
insb
imul
cmp
jl
ret
std
or
jmp
imul
push
es
pop
or
or
push
int3
jmp
or
stos
push
jns
mov
push
ret
in
inc
mov
jb
adc
push
xor
push
or
imul
sub
ffreep
pop
pop
xchg
ret
icebp
in
xor
es
push
aad
cs
mov
mov
mov
mov
ja
and
mov
sub
jns
cmc
fisttps
dec
mov
xor
popa
sbb
into
push
rcrl
int
cmp
jno
jae
ljmp
push
sub
or
repz
xor
std
mov
pop
dec
dec
inc
pop
repnz
aaa
add
jg
pop
xchg
fldl
inc
dec
xchg
inc
pop
cmpsb
testb
jecxz
xchg
pop
dec
fwait
popa
repnz
lods
mul
adc
jae
pop
push
fidivs
lret
pop
shlb
ljmp
rcl
movsl
cmp
lret
int3
daa
inc
xchg
pushl
out
out
mov
add
sbbb
shr
mov
cwtl
sbb
daa
cmc
ficoms
push
mov
push
adc
xor
push
jb
lret
aas
aas
enter
cmpsb
fbstp
sub
add
pop
call
popf
outsb
dec
adc
outsl
xchg
add
pop
push
xchg
xor
es
push
sub
stos
and
out
imul
xor
pushf
popl
test
jns
mov
mov
pop
imul
lcall
adc
sti
xchg
fadds
imul
jae
repz
cmpl
cmp
mull
xor
lock
xor
je
mov
iret
mov
pop
enter
cwtl
inc
ljmp
fwait
mov
inc
adc
lea
shrb
setl
imul
pop
xchg
jl
out
scas
rcl
pop
mov
fs
rol
mov
jl
cwtl
imul
adc
les
jns
jle
xchg
sbbb
jae
lods
adc
mov
and
xchg
inc
push
mov
add
jmp
cltd
fwait
sbb
push
leave
inc
pop
aam
movsb
jecxz
cmp
jb
push
push
rorl
add
ja
sub
cmpb
es
dec
and
fdivrp
lret
in
scas
out
adc
sbb
in
xchg
std
dec
cmpsl
push
daa
outsl
mov
insb
lahf
jl
jne
lahf
jns
cmp
cmp
adc
sti
repz
adc
pop
mov
pop
aas
fmulp
cli
push
mov
arpl
decb
inc
push
mov
adc
pminsw
rclb
push
in
into
jbe
inc
stos
pop
xchg
adc
xor
xor
inc
negl
mov
xor
mov
fisttpl
fbld
enter
dec
xchg
shll
and
push
push
and
or
mov
iret
rorb
adc
jne
mov
cmp
dec
jmp
mov
cmc
push
jmp
cwtl
adc
inc
cwtl
clc
ret
lea
repnz
mov
cwtl
je
jae
daa
jecxz
jo
ljmp
ss
jge
aam
in
dec
mov
int3
or
incl
pop
sti
adc
lahf
add
mov
int3
sub
xchg
enter
sbb
and
adc
jb
push
mov
adc
xor
push
bound
xchg
mov
cmp
std
or
and
sbb
testl
jb
jecxz
lock
and
aaa
scas
lods
jae
std
and
insl
sub
cmpsb
sbb
xchg
leave
js
mov
adc
addb
xchg
jo
pop
pop
dec
lret
mov
scas
mov
mov
mov
shll
mov
or
xor
mov
imull
push
mov
sub
lret
xchg
aad
lods
test
inc
data16
icebp
mov
push
dec
xchg
or
mul
dec
sub
jns
imul
pop
push
xchg
push
dec
clc
adc
pushf
inc
int3
mov
mov
xor
dec
cmp
les
movsl
mov
mov
add
jecxz
int3
mov
jmp
into
popf
adcb
cmpsb
or
loopne
into
fiadds
xor
dec
lret
adc
pop
mov
sbb
push
xchg
loop
and
push
mov
push
mov
cmp
jle
popf
push
dec
nopl
mov
cwtl
mov
call
jns
or
or
loopne
cld
sub
mov
movsl
fst
les
pop
and
sbbb
adc
inc
pop
mov
xchg
mov
dec
sbb
test
mov
in
shll
rcrb
adc
ja
loopne
dec
inc
xchg
das
adc
repnz
mov
pop
js
mov
fisttpll
mov
mov
pop
aaa
fadd
xchg
sub
mov
mov
mov
outsl
inc
fstpl
ret
lods
sbb
cmpsl
into
sub
ffree
movsb
mov
mov
insl
lods
dec
and
hlt
or
ret
mov
xchg
fmuls
mov
fs
push
call
lds
adc
pop
test
ja
in
push
mov
lock
push
sbb
jno
cmp
jns
lret
movsb
pushf
hlt
cmpsb
test
sbb
jne
sbb
sahf
enter
mov
fwait
and
fidivrl
popf
push
mov
mov
adc
mov
jle
leave
loopne
mov
or
sub
xor
repnz
popa
xor
popf
pop
scas
and
jbe
outsl
rorl
mov
cmp
out
pop
scas
lret
scas
addb
jns
add
test
mov
dec
sub
xor
pop
dec
pushaw
lea
neg
mov
jns
mov
and
mov
xor
add
imull
push
xchg
je
ljmp
stos
lret
mov
jbe
nop
xchg
scas
ds
mov
dec
jae
sub
pop
out
sub
icebp
push
int3
and
mov
popf
or
in
insb
stos
lahf
aad
sub
push
and
mov
lea
add
imul
bound
fstpt
xchg
inc
stos
xchg
mov
mov
leave
mov
roll
lods
mov
mov
sbb
mov
mov
lret
mov
xor
inc
mov
cmp
rcll
std
jns
adc
mov
pinsrw
inc
mov
inc
xchg
xchg
lock
lsl
inc
imull
or
daa
xor
xchg
sbb
push
into
push
mov
bnd
addr16
pop
lea
dec
je
sub
jb
lahf
push
insb
pop
lods
add
idivl
lods
push
in
inc
jmp
mov
or
or
sbb
jg
pop
xchg
aam
lods
push
jmp
mov
jmp
shl
mov
movsl
mov
jb
in
in
xorb
dec
push
les
pop
inc
nop
loopne
xchg
xchg
test
sahf
mov
push
nop
lock
xchg
daa
mov
cwtl
int
loopne
push
pusha
loop
fidivs
add
add
ds
pop
shrb
mov
sub
push
push
adc
pop
rorl
add
push
mov
jecxz
stc
pushl
cli
mov
lds
dec
cmpsb
rol
jb
in
test
push
movsl
insb
pop
jecxz
mov
sbb
addl
cmp
or
gs
ret
fsubs
lret
dec
dec
int
mov
mov
push
test
xor
pop
jp
out
xlat
dec
shrb
ss
jge
push
xchg
adc
cmp
das
add
inc
rcl
or
aad
add
loope
or
xor
clc
mov
scas
mov
jecxz
inc
sub
aaa
mov
xor
pop
jg
or
mov
out
cmpsl
mov
adc
js
ss
outsb
and
sub
add
cmp
fidivs
mov
mov
icebp
adc
rorb
lahf
mov
mov
mov
xor
clc
mov
cwtl
pop
outsl
sub
cs
cmp
rcr
add
rcrl
fstpt
imul
xor
aas
ret
orb
sub
xchg
andw
dec
jl
movsb
imul
dec
jb
mov
inc
or
aaa
dec
fwait
aad
stos
jb
add
push
mov
pop
mov
ljmp
cmp
sbb
jo
xchg
and
mov
dec
pop
sub
xchg
mov
arpl
sbb
sbb
fisttpl
xchg
leave
lds
mov
test
push
aam
mov
add
ds
jge
pop
mov
addb
mov
data16
mov
push
dec
cmp
push
push
mov
push
mov
add
fcmovne
fs
data16
aad
dec
inc
mov
sti
mov
pop
shrb
dec
or
clc
jmp
ret
je
xor
xlat
jns
je
bound
shl
sbb
js
std
or
sbb
out
iret
int3
sbbl
call
hlt
dec
fidivrs
mov
jb
fisttps
mov
fstpl
mov
and
mov
repnz
pop
sbb
or
dec
pop
les
mov
xor
jl
sarb
flds
mov
cmovo
inc
mov
jne
stc
jno
in
jge
mov
push
sub
mov
mov
repz
mulb
mov
nopl
scas
sbb
jge
movsl
addr16
sub
lea
lea
inc
pushf
pop
cli
rcl
sub
pushf
mov
jle
xchg
aaa
lret
sub
push
into
scas
pop
jl
aaa
out
xor
in
and
ss
cmpsb
jae
aas
clc
or
jno
or
xchg
xchg
mov
inc
fucomp
in
data16
push
pop
xchg
das
or
pop
insw
jne
xor
jno
sbb
jnp
lea
sub
cmc
push
repz
idivl
iret
outsl
push
insb
or
sbb
xor
pop
inc
out
xchg
inc
stos
push
pushf
loope
dec
sub
scas
push
imul
arpl
dec
lret
lahf
rcrl
add
call
sbb
mov
lret
adc
std
or
lcall
in
cmpsb
lret
js
dec
push
jbe
mov
xchg
insl
and
pushf
cmc
jns
bound
ljmp
xchg
xlat
dec
pop
lea
hlt
shr
mov
fnstcw
jne
inc
adc
jnp
dec
mov
jp
not
mov
lret
fwait
jge
and
and
es
pop
jae
and
stc
inc
fisubrl
inc
jp
pop
mov
dec
jbe
pushf
mov
inc
or
ja
jne
popf
arpl
les
stos
mulb
xor
aaa
pop
mov
xor
stos
add
dec
cmp
sub
adc
mov
push
in
and
xor
xor
jp
jbe
fisubs
arpl
jecxz
push
adc
cmp
cmpsl
add
psraw
cld
mov
rorl
out
fxch
repnz
aad
fistps
pop
xchg
lahf
sub
add
jle
cli
shlb
outsl
or
inc
jbe
xchg
mov
dec
xorl
xlat
pop
rclb
dec
leave
push
adc
jg
mov
and
xchg
lret
aad
andw
leave
and
mov
stos
mov
cmp
ficomps
mov
aam
xchg
jge
mov
xor
mov
mov
add
mov
scas
cli
or
lods
sub
call
mov
popa
push
mov
push
data16
rclb
mov
and
and
jno
jno
jecxz
in
sbb
push
adc
mov
push
xor
bound
xchg
mov
and
ds
xlat
lods
mov
imul
ja
insb
pop
out
xchg
mov
fsubp
push
lahf
and
jo
std
dec
xchg
call
mov
mov
into
mov
mov
sahf
sbb
dec
adc
xchg
out
fnstenv
xor
mov
insl
or
lods
aam
dec
pop
pop
outsb
dec
or
jp
xchg
add
das
xlat
test
call
out
insb
out
ja
pop
outsl
mov
int
fstpl
xchg
xchg
sbb
push
inc
sbb
outsb
mov
int
pushf
shl
xchg
mov
adc
mov
mov
sarb
xchg
movsb
jb
xchg
bound
fistl
pop
add
mov
mov
sbb
pop
imul
stos
xlat
push
lods
adc
and
jo
fsts
es
sub
pop
std
pop
xor
es
fs
and
bound
sub
pop
call
adc
or
xor
jno
out
insl
repnz
stos
pop
inc
out
add
popa
pop
xor
scas
push
cs
xor
xor
dec
in
lahf
fidivrl
in
jle
insl
inc
push
test
inc
enter
lret
sub
fs
icebp
jno
sti
lds
mull
out
into
xchg
in
jge
loope
xchg
out
rcl
test
loop
inc
fadds
andb
repnz
and
pushf
adc
sub
pushf
push
out
lds
and
and
push
adc
adc
mov
cmp
pop
in
jb
bound
add
inc
mov
into
shrl
jmp
lock
les
mov
or
call
cmp
int
cld
les
xor
in
or
ds
pop
faddp
mov
pop
inc
and
clc
jge
fldcw
not
or
ja
jge
xlat
lods
les
or
int3
mov
jecxz
mov
jnp
rcr
scas
and
fwait
cmpsb
rorb
nop
sub
cwtl
repz
cmpsl
pop
fs
sti
mov
and
jl
in
add
or
test
ljmp
adc
mov
fwait
mov
push
jle
pushf
cs
hlt
jae
dec
mov
mov
cwtl
mov
fwait
sbb
lret
icebp
jo
loopne
or
outsb
mov
inc
fdivl
clc
push
and
roll
mov
pop
jle
loop
pop
sub
inc
cs
aad
divl
xor
sarl
mov
xor
and
inc
imulb
fnsave
outsl
test
mov
scas
or
jle
cmpsb
gs
ficomps
mov
mov
ja
cmp
cmpsl
xchg
adc
aad
loop
jecxz
call
cwtl
pop
adc
mov
jns
dec
cmc
test
pop
adc
outsl
iret
cs
popa
pop
sub
lock
push
fwait
push
scas
ljmp
dec
aad
fcomp
hlt
dec
repnz
xchg
in
pushf
mov
adcb
mov
repnz
movsb
xor
push
movsb
popa
ss
int3
dec
jo
xchg
add
push
cmp
pusha
nop
push
xor
cld
fstpt
imul
xchg
pop
stos
insl
sub
and
jle
lds
ror
mov
cwtl
mov
sub
push
mov
cmp
jmp
pop
xchg
mov
ds
xor
pop
jle
or
cmpsb
xlat
shl
or
pop
jns
pop
stos
sbb
push
pop
imul
jbe
scas
xchg
fidivrs
arpl
or
mov
mov
outsl
push
xchg
cmpsl
aam
pop
or
mov
or
pop
cs
sub
test
dec
aad
push
outsb
fldl
pop
jno
dec
setno
sbb
xchg
mov
xor
and
push
arpl
xchg
pop
fsubrl
stos
push
adc
add
movsb
ret
iret
and
cmp
scas
sub
inc
fadds
inc
test
insb
lods
jne
push
push
mov
inc
clc
lret
xchg
mov
sahf
xchg
add
jmp
and
stc
inc
int3
mov
cmc
mov
xor
test
xor
adc
pushf
out
popa
and
jbe
push
cmp
xlat
cld
push
jge
mov
push
adc
dec
xchg
and
sbb
mov
cmpsl
loopne
decb
sar
daa
push
sbb
push
sbb
xor
mov
pop
sbb
push
das
dec
hlt
flds
cmp
std
xchg
lds
adc
pop
dec
sbb
div
add
je
mov
mov
push
xchg
adc
sub
dec
xlat
pop
push
dec
int3
push
jmp
out
cmp
pop
es
inc
sub
add
xor
adc
sub
push
xchg
mov
in
pop
jg
inc
xor
mov
pop
pop
pop
add
sbb
out
mov
dec
push
fimull
hlt
fmul
pop
cmpsb
enter
sbbl
movsl
into
mov
or
pop
mov
loope
pop
dec
test
cmp
lock
xchg
mov
inc
aaa
cmp
dec
rorl
push
adc
lahf
adc
pop
out
clc
mov
fs
leave
dec
xchg
inc
jne
push
stos
dec
repnz
push
xchg
fisttpl
pop
loope
cld
leave
mov
es
cmp
jo
jge
mov
sbb
fisubs
pop
lock
gs
lods
scas
imul
mov
mov
shl
ret
scas
es
xchg
inc
and
lcall
mov
cmc
sbb
pop
loope
loope
enter
sar
jns
jmp
in
mov
ret
out
mov
stos
cmc
jg
mov
push
or
mov
mov
int
std
dec
movsl
stc
jmp
push
in
aas
dec
jo
int3
ds
mov
in
xlat
pop
out
mov
inc
jae
mov
xchg
scas
mov
mov
jnp
mov
leave
push
add
mov
sub
insb
cmc
xor
sbb
icebp
pushl
xchg
push
fisubrs
das
arpl
dec
push
sub
push
xchg
inc
sub
add
inc
pop
arpl
pop
mov
js
cld
roll
sbb
iret
cli
pop
pushf
mov
cmc
cmc
mov
cwtl
mov
call
out
mov
dec
ds
popf
adc
rcrb
notb
push
out
or
fwait
mov
outsl
stos
insb
xor
sbb
inc
mov
xchg
divl
movsl
mov
fcmovnb
inc
fwait
sub
mov
xchg
ret
lcall
jp
stos
pop
loopne
and
sti
lret
or
fldl
popa
enter
cli
jp
adc
ret
mov
push
and
fwait
dec
fs
js
mov
sub
cs
mov
mov
mov
add
xor
or
iret
popl
dec
cmp
out
or
cmp
aad
out
mov
imul
cmp
xchg
lods
outsl
icebp
xchg
filds
lods
ret
add
inc
jmp
sbb
mov
dec
sbb
mov
sbb
inc
jg
xor
divl
outsl
es
lret
aaa
sbb
sbb
sbb
dec
inc
dec
fidivrl
mov
loop
std
lea
push
sbb
in
inc
ds
mov
imul
push
push
insl
dec
jo
mov
xor
scas
outsl
mov
andl
push
mov
and
daa
int
xchg
jbe
add
in
or
sahf
mov
lcall
mov
pusha
frstpm(287
ret
ds
sub
lds
cltd
cmc
jecxz
lock
hlt
aad
pop
movsl
std
mov
test
rolb
jmp
jne
shll
xchg
aas
loope
int
loopne
out
imul
jno
mov
cmp
xchg
mov
test
mov
enter
cmc
addr16
sbb
loopne
shll
imul
roll
pop
xor
sub
mov
push
cwtl
fstps
int
cs
lds
push
iret
hlt
testb
stos
mov
daa
and
add
lahf
loop
popa
adc
notl
jae
popf
rcll
ret
mov
in
xchg
and
and
dec
jae
fstl
inc
popf
out
shr
inc
decb
ja
lcall
das
pushf
or
cmp
nop
cs
pop
aad
add
xchg
data16
in
adcl
inc
stos
clts
xor
cmpsl
dec
repz
sar
inc
add
testl
pavgb
movsb
adc
inc
dec
jbe
adc
or
xlat
orl
add
xchg
cmpsl
ret
js
and
out
shl
bound
mov
lods
dec
out
mov
dec
shrb
adc
repnz
js
mov
repnz
cmp
xchg
push
shll
sbb
repnz
mov
int3
add
stos
shrb
jns
popa
dec
cmp
popf
jl
sbb
xor
mov
rcl
xor
sub
in
ja
cld
jae
ljmp
outsl
mov
push
jno
inc
jb
insb
lea
sti
push
je
cwtl
fidivs
test
sub
mov
test
lahf
das
out
fisttpll
mov
or
xor
mov
movsb
jo
jbe
nop
adc
mov
adc
rcll
pop
jne
xor
jp
imul
out
sbb
ljmp
dec
xlat
adc
mov
inc
sbb
or
pop
xor
fbstp
push
cmpsl
cmp
je
jmp
push
les
lods
je
ja
fwait
lea
loope
sub
mov
movsl
hlt
ljmp
cmp
ret
jmp
cltd
fnstcw
push
xchg
push
add
sub
and
jae
dec
xor
popa
ds
push
mov
fnstsw
mov
test
scas
add
into
mov
adc
jge
lret
push
movsb
mov
inc
addr16
lods
sbb
or
add
mov
cmp
jge
addr16
aam
mov
lock
pop
mov
sbb
jl
dec
test
call
les
scas
in
mov
pop
enter
xchg
out
sub
insb
or
dec
pop
and
lahf
test
mov
mov
into
add
repnz
call
std
movsb
jg
stos
sahf
loope
mov
jb
mov
xchg
or
cmpsb
fists
jo
sub
jno
add
xor
inc
lcall
orl
jmp
nop
fs
into
mov
pop
stc
testl
jae
repnz
sbb
loope
shrl
lcall
sbb
lods
dec
pop
jecxz
popf
xor
or
pop
mov
scas
sti
push
repnz
add
lods
jo
mov
into
jecxz
xchg
es
add
stc
sbb
pop
pop
enter
ffree
add
push
rorl
push
imul
iret
inc
xlat
fistl
dec
dec
orl
orb
popa
movsb
mov
cmp
mov
xor
mov
insl
stos
inc
xchg
insb
mov
cmpsb
test
fwait
mov
test
ret
or
inc
mov
jmp
dec
lods
inc
ret
in
mov
add
lock
pop
rolb
xor
mov
xor
jge
sbb
push
xor
mov
sar
ds
sbb
xchg
xchg
fdivp
std
es
dec
adc
test
jmp
movsb
inc
mov
int3
aas
sub
mov
lret
or
arpl
leave
idivb
mov
out
enter
test
pop
lahf
dec
inc
in
ljmp
mov
push
in
cmp
lret
xchg
mov
or
sbb
loopne
mov
stc
imul
das
flds
es
mov
and
jle
xlat
gs
mov
adc
push
adc
in
pop
dec
imul
jb
lret
lret
push
lahf
rclb
push
sbb
mov
mov
xchg
adc
push
add
lahf
cmpsb
mov
imul
xchg
popf
sbb
sahf
sub
push
js
inc
addr16
aaa
fwait
mov
add
or
mov
mov
fs
fildl
cmp
dec
aad
cmp
movsl
outsb
and
adc
lock
filds
jl
adc
add
out
xor
pop
dec
cmp
mov
fwait
dec
pusha
in
lea
ret
jg
mov
jmp
mov
outsl
cmp
outsb
pop
ret
out
adc
jbe
xchg
insl
cli
in
test
icebp
fcomps
in
in
out
or
ret
lahf
in
inc
inc
gs
pop
jl
cmp
gs
mov
push
outsb
jecxz
jae
cmp
push
sub
shll
add
stc
loopne
xchg
dec
jne
sub
movsl
fldcw
call
adc
lahf
pusha
pop
xchg
cmp
dec
in
cmp
add
repnz
cli
dec
xchg
rcrl
push
bound
pop
inc
sub
mov
std
pop
jno
and
aam
push
mov
mov
push
inc
lea
js
mov
fwait
mov
mov
int3
dec
aad
aam
mov
scas
out
push
xor
mov
mov
xor
inc
inc
or
push
inc
mov
xor
bswap
cmpsl
xchg
popf
sahf
fidivl
cmp
imul
jp
inc
mov
stc
adcb
das
jb
aam
mov
push
adc
adc
aas
push
aad
cmp
movsl
out
sahf
xchg
mov
jle
jbe
into
add
leave
adcb
jle
mov
roll
test
adc
add
or
push
mov
dec
leave
add
movsl
in
call
pop
cmp
jp
mov
out
adc
mov
sbb
rep
mov
popf
push
ljmp
xor
ficoms
jg
xchg
stc
mov
das
inc
imul
pop
inc
mov
fidivl
push
nop
iret
daa
sarl
movsb
sbb
lock
push
jnp
stos
add
sbb
addr16
sahf
pop
js
rol
ja
rcrl
es
sub
loopne
and
xor
sub
lret
xchg
jp
stos
movsl
out
in
addr16
frstor
leave
pop
cmp
or
jl
les
and
ficoms
sbb
sub
pop
sbb
das
jmp
insl
xchg
popa
lods
add
xchg
xchg
dec
hlt
loope
add
ljmp
pop
gs
or
out
cmp
dec
call
loop
mov
fstl
popf
mov
inc
and
mov
jmp
cli
es
aam
push
xchg
jle
sub
mov
das
ret
pushf
push
add
daa
popa
pop
in
imul
xor
test
cmp
movsl
push
dec
in
mov
xlat
ret
lock
fstpt
fistpll
out
aam
gs
movsl
push
imul
into
cs
cltd
jno
push
fs
cli
into
loop
andl
jl
dec
pop
cmpsl
or
loopne
aam
mov
imul
int3
jno
in
aam
and
push
test
push
adc
mov
xor
pop
push
movsb
mov
loop
cmpsb
mov
bound
pop
mov
sbb
xchg
mov
sbb
loop
sbb
loopne
mov
int
loope
mov
jmp
dec
test
or
mov
das
sbb
fcomps
and
aad
jmp
fistpl
push
sub
iret
xchg
aam
mov
add
jne
dec
adc
loope
shlb
mov
pushf
mov
dec
movsb
pop
xor
dec
mov
in
idivb
gs
lock
jg
sub
std
repz
rorl
movsl
jo
lock
in
into
repnz
clc
addl
mov
xor
mov
cmp
data16
outsl
imul
in
mov
jp
and
loope
mov
adc
and
addl
inc
aam
stos
repnz
sub
sub
cmp
xorb
dec
pop
gs
popf
cmp
xor
xor
dec
xchg
dec
adc
rcr
inc
or
cs
repnz
outsb
cltd
clc
test
popf
lock
inc
pop
push
push
xchg
in
xor
shl
or
inc
mov
and
retw
jl
mov
pop
xchg
enter
mov
lret
xchg
rolb
nop
stos
fildl
mov
ficoml
mov
cmpsb
cmp
ficompl
xchg
mov
sub
mov
int3
push
jns
inc
jl
add
shlb
or
push
sbb
aas
add
outsb
es
mov
cwtl
lahf
sbbl
fiaddl
das
and
es
ds
mov
andb
ret
jecxz
jl
jae
mov
mov
jo
insl
mov
pusha
jne
dec
jg
test
cmp
push
test
or
push
xlat
dec
jns
mov
rolb
gs
fs
mov
dec
mov
add
lahf
shr
lds
mov
dec
jmp
and
pushf
fsubs
scas
cmpl
subb
aaa
push
mov
dec
push
mov
fs
xchg
fsubrl
sti
imul
jno
adc
and
js
dec
and
scas
and
push
lods
mov
xor
adc
push
popa
sbb
jecxz
jno
xchg
aas
mov
add
pop
imull
or
js
std
cli
adc
xchg
mov
cwtl
cmc
add
loopne
mov
push
push
adc
pop
iret
mov
pop
aad
jge
ja
cmc
push
sbb
rol
outsb
rcr
lahf
es
adc
in
and
mov
orb
jne
imul
or
dec
push
xchg
out
and
loope
popl
mov
add
or
pop
add
or
addr16
cmpsb
xor
dec
jo
add
cmpsl
xchg
in
cmp
test
mov
fldt
adc
xor
lahf
movsb
mov
sbb
fmuls
popa
jbe
mov
pop
shrb
dec
push
cltd
out
sbbl
xchg
inc
js
loope
mov
int
loop
inc
add
or
mov
and
out
xchg
outsl
sbb
in
dec
sahf
jo
insl
lods
iret
lahf
jg
lahf
popf
f2xm1
jb
add
adc
jo
cmpsl
ds
out
or
inc
ret
cltd
stos
xchg
sub
and
cs
pop
movsl
push
fisubl
push
ret
sub
pushf
jb
test
and
fldl
sbb
jbe
insl
sarb
push
push
pop
sub
jl
inc
mov
dec
mov
and
in
fistpl
mov
cmp
adc
push
stos
aam
or
shl
push
lea
adc
shlb
sbb
or
pop
scas
pop
and
mov
sbb
ret
std
mov
icebp
push
pop
xor
lahf
fwait
icebp
out
mov
outsb
outsl
ficoms
subb
pop
push
mov
out
sahf
mov
stos
imul
out
xchg
test
mov
fnstenv
xor
ret
mov
insl
fisttpll
xchg
xlat
push
mov
jge
mov
cmp
add
pop
std
mov
rsqrtps
int3
and
pop
aam
adc
insb
insb
insl
jp
jno
jmp
mov
fnstsw
mov
sub
sbb
push
scas
lds
cwtl
xlat
movsb
lock
adc
xlat
data16
add
push
sti
sub
aas
and
push
sbb
xor
pop
pop
out
and
insl
add
jbe
push
add
stos
inc
mov
mov
outsl
mov
movsb
inc
enter
inc
adc
inc
lods
sbb
out
xor
xor
shr
je
ret
jmp
xor
test
out
sbb
lret
push
test
les
xor
or
inc
movsl
jae
sub
add
mov
pop
rclb
jmp
cmp
pop
mov
mov
es
xchg
or
imull
ret
jb
fs
out
rcrl
fwait
xor
xchg
jb
test
cld
or
je
decb
sub
out
mov
int
cmc
shlb
stos
dec
push
sbb
in
fwait
push
push
mov
std
movsb
inc
xor
fstpl
adc
mov
xchg
insb
push
roll
xor
mov
int3
cmpsb
scas
push
stos
mov
xchg
or
mov
xchg
fsubrp
sbb
repnz
repz
jae
add
and
out
sbb
mov
mov
dec
xchg
xor
jg
adc
xlat
mov
inc
jnp
xchg
repnz
cmpsl
add
hlt
mov
aam
mov
mov
sub
xor
aad
push
jmp
and
mov
or
imul
mov
cmp
jno
push
or
pop
scas
stc
xor
adc
std
add
imul
adc
iret
aad
std
pop
xchg
jmp
sub
dec
adc
enter
mov
mov
clc
les
add
cmc
ret
sub
sub
jp
xchg
jb
mov
cmp
jl
lock
ret
jnp
jo,pn
lds
cmpl
repnz
xchg
popf
std
icebp
xor
xchg
pop
add
or
adc
pop
in
push
test
push
pusha
je
sub
cmp
mov
mov
test
fs
mov
aad
mov
xchg
sbb
outsl
into
sbb
fcmovne
inc
jp
test
mov
cmp
loop
sub
fs
leave
sbb
add
mov
sub
pusha
pop
pop
sub
leave
add
xorb
sub
cmp
jae
mov
std
mov
pop
add
push
aam
stos
sub
cmpsb
sahf
in
cli
nop
test
inc
add
adc
ljmp
jne
ds
pop
into
pop
pop
cmc
cmp
int
inc
sahf
mov
mov
add
lcall
and
push
pusha
mov
add
incl
sti
jge
lcall
sbb
shll
mov
imul
adc
push
cmp
adc
movsb
shll
enter
or
leave
mov
shlb
pop
mov
sbb
ljmp
xchg
popa
lea
jbe
xor
sahf
addr16
pusha
shll
rcl
jmp
sbb
imul
je
es
cmp
inc
mov
ret
jae
and
dec
negl
sub
pusha
mov
fisubl
data16
sbb
sbb
mov
push
aam
mov
std
jg
ret
enter
inc
in
fcoms
dec
mov
push
cld
mov
lahf
stos
or
jp
mov
es
cmp
lods
outsl
inc
je
sub
pop
test
test
sub
out
and
dec
fstpt
mov
iret
push
push
xor
xchg
cmpsl
aam
or
mov
mov
adc
in
sub
adc
xor
shrb
jge
and
adc
sbb
inc
add
ljmp
aas
cmp
pop
mov
fdecstp
lret
sub
inc
rcll
sub
ja
je
xchg
lcall
jns
nop
mov
jns
test
mov
and
sbb
dec
sbb
dec
mov
lods
stc
or
mov
mov
pcmpgtb
insl
add
xchg
movsb
inc
stc
add
push
xchg
fstpl
test
out
dec
cltd
sarb
andb
pop
out
jns
mov
xchg
and
fdivs
xchg
test
sbb
xor
ja
in
jl
gs
push
pop
sub
ja
int
insb
aad
xchg
or
cs
cli
hlt
data16
pop
fcomps
xchg
loopne
neg
xlat
out
sbb
cmp
in
jo
icebp
dec
xchg
imulb
fmull
xor
and
dec
sti
jnp
sbb
out
push
and
xor
jmp
pop
mov
xchg
and
sti
test
int3
sub
sub
nop
mov
dec
jecxz
mov
xchg
push
adc
sahf
lods
xlat
inc
call
and
and
dec
mov
fldenv
int3
xor
cmc
enter
xchg
xchg
xchg
cwtl
mov
lods
std
lahf
in
xchg
cmp
jae
aam
repz
ret
add
out
inc
cltd
shlb
add
fadd
cmp
or
cmp
imul
fwait
lock
es
mov
data16
in
mov
sub
cwtl
dec
jp
hlt
shll
cmp
push
xor
andl
dec
cli
inc
fisttpll
inc
jle
fstpt
add
test
cld
cs
lret
xchg
mov
inc
cmp
call
xchg
lds
or
dec
pop
stc
jmp
dec
insl
pop
mov
imul
inc
cmpsb
add
leave
les
rcrl
mov
pop
push
popf
inc
icebp
xor
push
xor
out
inc
cmc
and
inc
jge
call
sti
outsl
inc
sbb
dec
mov
mov
mov
xor
or
adc
jb
mov
fistl
testb
in
sub
movhps
jne
outsl
push
shl
jle
xor
dec
dec
fbstp
daa
fisubs
fstp
outsb
dec
jle
inc
int3
xor
mov
rcrb
inc
addl
cmp
adc
inc
or
scas
les
push
cmp
subl
xlat
mov
dec
les
out
push
fwait
pop
lret
and
adc
iret
aam
es
sub
xlat
out
sbb
insb
je
ror
cmc
push
mov
xor
clc
lods
aad
in
xchg
jne
sbbl
pop
jmp
adc
jne
nop
mov
mov
adc
mov
add
scas
loop
rcrl
cmpsb
loope
jl
int3
cmp
jae
data16
hlt
cmp
iret
and
add
push
fwait
or
js
jle
and
test
test
data16
xchg
or
mov
pushf
fdivr
jne
mov
cmp
mov
cmp
test
pop
mov
sbb
jg
cli
dec
sbb
lock
add
std
push
cmp
out
int3
mov
or
add
add
rorl
rorb
sbb
in
test
sar
loopne
fwait
inc
jmp
loopne
into
xor
xor
mov
jns
out
or
je
sub
inc
xor
rcrl
xor
jp
enter
xchg
push
jo
cmp
or
mov
call
push
xchg
push
mov
repz
cwtl
scas
pop
pop
push
cmp
mov
cmp
and
rcl
jp
roll
ljmp
fs
jl
daa
stc
scas
hlt
add
lahf
adc
movsb
adc
in
test
xlat
leave
mov
and
xchg
push
sub
mov
inc
sub
xchg
repz
in
lret
fsub
repz
movsb
xor
aas
popa
in
cmp
aam
mov
lea
mov
pop
mov
ret
or
xacquire
arpl
call
adc
nop
sub
aas
dec
je
icebp
pusha
push
mov
leave
mov
lea
fnstenv
js
cmpsl
ret
and
insl
pushf
add
jnp
jmp
lock
rol
add
imul
dec
lret
inc
push
lcall
mov
xchg
dec
sbb
add
sub
in
or
pop
fisttpll
fs
rorb
loopne
xchg
mov
rolb
lods
xor
repz
jbe
mov
xor
inc
add
fldl
dec
testb
mov
add
mov
dec
rclb
mov
clc
mov
lret
loope
fwait
pop
add
lods
rcrb
mov
xchg
loopne
and
ret
push
mov
sbbl
pushf
pop
adc
pop
cmpsl
stos
loop
mov
repnz
in
pop
mov
ret
into
xor
clc
int
aas
in
adcb
jp
cltd
jo
out
jge
inc
enter
clc
scas
pop
mov
lods
icebp
cmc
dec
pop
push
mov
dec
dec
into
fcomps
insl
icebp
pop
stc
cmp
loopne
and
stos
insl
mov
fisubrl
pop
add
mov
and
dec
inc
mov
jbe
sub
fs
imul
sbb
aas
jecxz
adc
xor
cs
out
mov
les
aam
push
mov
loop
enter
jge
push
icebp
add
popf
jnp
sarb
mov
mov
pop
mov
getsec
push
cmc
ret
or
cld
nop
loop
int
cwtl
cmp
or
mov
cli
in
daa
jae
sbb
mov
nop
dec
shll
adc
popa
scas
mov
sbb
and
cmp
xchg
or
mov
iret
cld
dec
and
imul
arpl
adc
cmp
xor
fidivl
adc
ja
inc
inc
lds
pop
and
loop
call
in
lock
adcl
sti
push
pop
stc
gs
sbb
aam
lods
pop
fcmove
mov
hlt
mov
and
cmp
lock
sub
movsb
into
xor
stos
fs
dec
fists
mull
clc
stos
mov
push
jle
cmp
fwait
push
sub
stos
xor
sbb
dec
adc
iret
jecxz
test
cmp
pusha
push
xchg
jge
ljmp
hlt
mov
and
xor
fstps
sbb
jle
adc
cmpsl
ret
nop
or
push
clc
jl
out
lods
or
dec
or
ljmp
mov
push
cmp
mov
cmp
hlt
cmp
sbb
fs
push
add
sub
and
js
xchg
leave
pusha
lds
jecxz
ljmp
pop
xchg
data16
mov
pop
push
xor
sub
jne
jb
cmp
adc
xlat
adcl
call
orl
pop
mov
xchg
loope
je
mov
mov
inc
or
sub
inc
adc
dec
ret
fisttps
or
sbb
repz
icebp
push
mov
push
push
dec
push
inc
test
fistpll
outsb
jns
or
push
and
ss
cmp
adc
lds
push
arpl
sbb
cmp
ror
xchg
push
xchg
inc
push
enter
pop
ja
negb
aad
or
jo
add
fs
cmpsb
subb
jecxz
flds
and
jno
inc
pop
dec
repz
inc
mov
iret
xchg
or
ljmp
pop
hlt
test
mov
mov
pop
shlb
andb
xor
add
jge
cmpsl
pop
ds
push
xor
lahf
jbe
rorl
hlt
jge
in
or
pop
lea
ret
cld
insl
xchg
pop
sbb
and
push
mov
fimull
pusha
xchg
or
push
mov
mov
loope
dec
stos
out
lar
das
xor
dec
fmul
nop
inc
jmp
and
in
pushf
or
xor
mov
pop
pop
arpl
outsb
dec
or
int
xor
jns
dec
dec
jns
test
adc
icebp
cmp
rcrb
mov
cmp
inc
inc
fisttpll
or
sub
or
xchg
mov
pop
lret
mov
mov
mov
cmp
fildl
outsl
sub
add
std
in
mov
inc
xchg
add
mov
test
jno
sbbb
mov
mov
subl
ds
jge
stos
lods
jno
pop
movsb
ror
mov
test
pusha
outsb
negl
insl
ficomps
xchg
test
mov
mov
shll
mov
adc
frstpm(287
inc
mov
inc
push
aad
aad
mov
loope
fstpt
pushf
rclb
andb
fidivs
mov
int3
fmull
repz
cmp
lds
stos
clc
bound
addr16
in
repz
sub
pop
mov
mov
popf
stos
inc
movsl
jg
das
imul
loopne
adc
or
dec
push
nop
lods
jno
jns
and
jne
adc
filds
pop
mov
repnz
rep
push
cld
shrl
push
xchg
test
bound
lahf
jae
test
outsl
mov
fdivs
mov
and
push
fistps
xchg
mov
add
popf
std
fs
mov
or
jg
out
cmp
scas
pop
xor
adc
pop
push
loope
fisttps
pusha
iret
mov
pop
lock
fcompl
mov
inc
fwait
enter
and
mov
shrb
jecxz
sub
gs
mov
clc
lock
ret
call
pop
jg
xor
ret
adc
dec
lret
mov
int
fwait
clc
into
aas
out
insl
ljmp
out
repz
fcom
or
pop
es
sbb
add
shlb
ljmp
int3
cmovo
les
ret
pop
into
cli
nop
popf
testb
out
dec
sbbl
or
enter
idivl
popf
sti
pop
inc
cs
push
jg,pt
add
lcall
adc
into
or
adc
push
inc
outsl
lock
adc
adc
inc
mov
test
rcrb
inc
ja
imul
fistps
testb
insl
mov
movsl
loopne
adc
jg
lods
int3
pop
lret
inc
pop
add
scas
stc
xor
mov
cmpsb
je
pop
jp
mull
xchg
daa
mov
or
outsb
scas
stos
in
in
mov
xchg
mov
xchg
xchg
addb
xchg
adc
adc
jno
dec
cmp
inc
dec
add
dec
add
mov
js
pop
mov
insb
dec
fstp
jne
popf
aaa
pop
pop
inc
popf
fdivrl
test
xchg
mov
xlat
daa
out
push
into
pop
pop
outsb
cmp
cwtl
inc
daa
inc
mov
cmc
and
in
mov
push
mov
or
icebp
pop
cld
std
add
jp
pop
lds
push
fidivs
pop
cwtl
add
xchg
pop
ja
dec
out
mov
dec
pushf
mov
sbbl
sub
push
enter
mov
push
mov
push
mov
shlb
pop
sbb
cmp
pop
cmp
call
test
mov
pop
lret
mov
icebp
or
adc
adc
lahf
stos
jg
lock
pusha
and
sbb
iret
dec
adc
cmpsl
xor
jecxz
mov
scas
sbb
dec
in
pop
adc
test
adc
std
dec
cmpsb
adc
arpl
clc
jg
jb
addr16
movsb
xorb
jbe,pt
jo
roll
popa
cltd
push
pop
dec
sub
daa
fld
test
cmp
jle
mov
push
ss
sub
xor
jge
sbbb
cmp
sub
dec
pop
into
push
hlt
inc
jl
negb
cwtl
push
mov
fucom
cmpsb
scas
repnz
sub
cld
sbb
js
add
imul
inc
and
cmp
fildll
jns
xchg
xchg
xor
out
adc
adc
mov
dec
xor
inc
out
fstps
in
jecxz
push
int3
jecxz
push
inc
push
movsl
jge
int
xchg
adc
mov
repz
js
mov
out
pop
roll
hlt
and
pop
or
mov
or
ja
jp
adc
div
mov
fstl
jmp
sbb
cmpsb
subb
loope
dec
orb
or
mov
mov
jg
pop
mov
ret
in
outsl
pmullw
dec
loop
shl
mov
ss
adc
mov
push
mov
jge
or
push
sbb
dec
in
pushf
aad
test
aam
stc
scas
mov
mov
pushf
ret
repnz
lods
or
das
in
lret
pop
repz
xchg
sub
and
frstor
pop
movsb
aaa
lds
neg
popa
out
in
es
dec
lcall
sub
lods
xchg
lock
stos
in
push
cmp
sarl
ljmp
jo
sbb
popf
fiaddl
out
inc
xchg
ret
addr16
outsl
pop
pop
test
mov
cmc
xchg
not
fdivrs
loope
mov
mov
xchg
popa
movsb
std
xlat
sub
inc
dec
fdivl
xchg
repnz
sti
fimuls
loope
icebp
pop
adc
js
lcall
adc
fbld
cmpsl
jnp
mov
call
das
cmp
loop
fwait
stc
push
jge
push
sbb
fs
xchg
sbb
lret
nop
inc
mov
bound
mov
repz
mov
shl
popf
xchg
cmp
sub
repnz
xor
jbe
iret
fisubs
mov
mov
sbbb
js
jne
iret
push
hlt
xor
or
cmp
and
fsubrp
xchg
test
fwait
push
jbe
gs
lock
loop
mov
inc
mov
pusha
outsb
sub
push
sbb
mov
jnp
cli
push
sub
jno
ja
mov
pop
movsb
adc
sti
popa
movsb
js
adc
mov
mull
out
or
mov
lock
jecxz
mov
dec
xchg
repnz
scas
sbb
pushf
inc
or
mov
pop
les
out
pop
or
je
imul
jb
pop
pop
add
int3
push
lods
lahf
mov
push
popa
test
xchg
or
sbb
lcall
push
inc
stc
and
sbb
prefetch
push
into
wrmsr
xor
aas
scas
xor
in
les
lret
sti
xor
stos
mov
pop
or
pop
dec
adc
addb
loop
mov
mov
jl
insb
rorl
cmpsb
adc
inc
into
outsl
jle
iret
cs
imul
jp
outsb
mov
push
mov
adc
notb
ja
jg
icebp
push
push
lea
ljmp
or
ljmp
jnp
jge
xor
data16
inc
ljmp
in
add
idivb
mov
ss
loope
xchg
aam
ljmp
cwtl
push
pop
sbb
mov
shl
je
xchg
idivb
inc
lods
addb
loopne
aam
push
sbb
popw
jle
out
mov
or
lret
lahf
mov
dec
mov
xchg
adc
mov
loope
orl
jbe
ficoms
xor
lds
mov
sbb
cmpsl
std
ficoms
mov
out
in
into
pop
mov
adc
push
cmp
cli
mov
sub
int
cltd
pop
iret
sub
pusha
ds
nop
jo
in
dec
jne
scas
cmp
or
stos
pop
push
pop
ja
xchg
push
fscale
mov
enter
push
jns
cli
xlat
fwait
xor
adc
mov
cmpl
dec
andl
jg
xor
sti
cmp
xchg
mov
mov
out
int3
cmp
testl
xor
es
mov
pop
mov
mov
cmp
or
loop
mov
loope
cmpsl
mov
xchg
ja
mov
loope
push
xor
aam
sub
or
xor
xchg
push
jl
ljmp
dec
sbb
mov
loopne
mov
sub
in
inc
xchg
mov
inc
aad
add
cli
mov
pushf
mov
add
jne
cmp
call
mov
mov
and
sbb
icebp
mov
push
test
imul
ss
js
xor
cmpsb
pop
cwtl
add
pushf
push
je
push
sub
movsb
add
jne
pop
cli
test
cmp
sbb
sub
rcrb
cmc
std
movsb
in
sbb
push
les
inc
push
js
push
adc
pushf
xchg
jno
jecxz
pop
lock
dec
rcll
mov
add
pop
int3
sti
ja
sub
test
bound
sbb
xor
fs
das
imulb
xchg
and
jg
into
mov
sbb
imul
cmp
sub
mov
lds
adc
xchg
fsubl
das
cmp
inc
out
fsubr
lds
orl
mov
imul
jge
add
xchg
xorl
enter
xchg
mov
int
inc
mov
sub
daa
fists
shll
add
push
add
jg
loop
aad
jecxz
xchg
sbb
adc
dec
pop
mov
shrb
dec
and
and
repnz
inc
dec
add
dec
ds
aaa
sub
repz
mov
in
jmp
outsb
mov
cmc
xlat
loop
or
cmpb
movsl
test
pop
dec
lret
mov
cmp
lods
xor
adc
add
push
xchg
outsl
sbb
pop
icebp
sbb
das
cwtl
mov
movsb
ljmp
adc
cwtl
or
jecxz
cmc
bound
add
adc
rcrl
xchg
imul
scas
leave
dec
jb
cltd
ds
adcl
aam
mov
daa
push
enter
xor
repnz
fcomps
mov
push
pop
ja
aam
fcompl
dec
push
out
inc
jp
call
add
aas
cmp
pop
push
test
ffree
xor
sbb
and
cmp
mov
mov
roll
aas
mov
xor
inc
into
aaa
clc
jo
outsb
int3
ljmp
push
movsb
js
inc
push
jne
fs
repz
stos
js
and
sbb
mov
aad
mov
and
sbb
pop
cwtl
mov
lock
mov
pop
inc
dec
lret
insl
setge
mov
sbb
cltd
or
ret
es
lahf
sbb
rcrl
lret
xor
pop
cli
mov
xlat
cmp
push
sub
jae
push
or
pop
call
ljmp
xchg
gs
addl
jae
xor
es
or
dec
jno,pt
push
jae
daa
test
in
mov
jns
and
filds
addr16
aam
fimuls
into
int
jge
in
or
arpl
mov
cmc
push
loop
out
xor
xor
xchg
jo
test
dec
mov
mov
in
ljmp
fdivrl
jno
icebp
jno
fistl
xchg
xor
sub
lret
insb
popf
cmp
cltd
shrb
pop
mov
dec
jp
pop
mov
cltd
dec
sbb
jno
adc
sub
aam
mov
jnp
call
imul
mov
jg
pusha
or
faddl
push
dec
call
cmpsl
out
mov
cmp
call
mov
jl
and
hlt
push
test
adc
or
das
xor
jle
in
clc
fcoms
mov
outsl
dec
shr
lahf
insb
scas
movsl
into
scas
jo
mov
add
stos
scas
xchg
jb
scas
and
outsl
or
lock
ss
xchg
xlat
inc
out
mov
fiadds
test
js
stc
adc
int
shl
lret
dec
xor
jns
add
cmp
rorb
dec
adc
xor
xchg
in
adc
loope
and
stos
jnp
inc
adc
test
movsl
or
sarb
inc
scas
jnp
scas
scas
adc
sub
jl
sbb
push
inc
dec
mov
inc
repnz
enter
scas
popa
mov
mov
xor
or
pushf
sbb
push
mov
lret
xchg
notl
push
mov
dec
add
jns
mov
test
mov
cmp
mov
roll
fcmovnb
aas
sarb
add
bound
fsubrl
outsb
jns
mull
mov
enter
add
dec
mov
in
mov
cmp
jmp
mov
outsb
in
sbb
push
movsb
scas
push
jmp
int3
push
enter
ud2
lods
lock
aam
ss
out
mov
or
mov
cli
cmc
cmc
sbb
mov
xchg
ljmp
sub
test
ds
aas
push
mov
int3
jp
popl
lret
gs
iret
movl
movsl
pop
mov
push
xchg
mov
lods
sbb
ret
mov
pop
mov
mov
insb
stc
sub
mov
out
xchg
dec
dec
loop
push
ja
cmp
mov
or
fsubrs
test
ret
addl
gs
ret
icebp
xor
int3
xor
daa
ret
in
sub
neg
mov
cli
push
and
sbb
dec
mov
sti
push
push
andl
mov
push
stc
imul
lret
mov
xchg
ficoms
adc
les
add
pop
cmpsl
divb
arpl
insb
lahf
cwtl
outsl
sti
jnp
test
xlat
stc
mov
xor
sbb
pop
push
or
sahf
mov
cmp
push
jl
idiv
call
js
in
mov
outsb
xchg
int
scas
imul
mov
mov
mov
and
jnp
mov
and
negb
cmp
cmp
sbb
sbb
ljmp
adc
jle
pop
push
in
pop
mov
sbb
mov
sti
rol
xlat
xchg
dec
je
pushf
xchg
test
imul
add
jo
mov
out
cmc
and
sahf
ret
sbb
lds
dec
int3
test
nop
adc
mov
push
pop
pop
pop
jbe
ds
movsb
cli
imul
call
pop
or
outsb
loope
andl
fwait
adc
addr16
jno
push
popa
xchg
sbb
dec
xchg
add
jp
clc
aad
je
sarl
les
pusha
jmp
xchg
leave
xor
insl
psllq
pop
and
mov
mov
mov
fdiv
repz
pop
mov
and
mov
xor
add
cmp
sbb
test
ret
push
cwtl
int
stc
inc
jmp
aas
imul
outsb
xor
sbb
jbe
or
cltd
in
shrl
pop
rorl
jmp
test
adc
fbld
sbb
ret
test
arpl
and
loop
movsl
insb
and
pusha
push
push
mov
mov
jmp
pushf
cmp
dec
enter
add
inc
cmp
cmpsb
pop
sbb
stos
and
pop
xchg
insb
outsl
add
outsb
push
mov
js
xorl
lods
int
xor
pushf
popf
roll
lock
mov
or
or
add
ljmp
push
arpl
or
subb
rcl
cmpsb
test
xor
xchg
xchg
aas
icebp
pop
add
cli
fidivl
mov
out
fadds
popf
insb
mov
adcl
jge
dec
dec
pop
sbb
xchg
cmp
inc
mov
std
cwtl
pop
call
cmp
pop
inc
xchg
sahf
out
movsb
in
scas
loope
mov
stc
loope
andb
stos
aam
aas
mov
and
push
fdivrl
sbb
pop
ret
movsb
mov
mov
adc
xchg
inc
shrl
cmp
mov
into
insb
mov
push
lods
daa
repz
inc
sbbl
push
in
andl
jne
pop
dec
out
aas
jb
xchg
rcrl
or
jne
imul
jle
sbb
sbb
pop
int
mov
out
cmpsb
shll
mov
and
push
push
sub
ljmp
repz
andl
mov
call
in
in
mov
mov
test
push
out
push
mov
push
shlb
je
jb
xor
ret
gs
out
mov
mov
sbbl
mov
repz
or
sub
in
mov
jmp
fcomps
adc
pop
hlt
shrl
pop
xor
mov
aad
xchg
sbb
ret
mov
mov
inc
addr16
mov
cwtl
mov
or
mov
cltd
out
fimuls
out
xor
imul
gs
sbb
mov
aad
jo
fs
sub
scas
movsb
lret
ds
push
pop
test
mov
or
test
sbb
sbb
mov
or
mov
pusha
in
movsl
movsb
push
fsubrs
push
mov
sub
das
cli
xchg
pusha
and
cmp
sub
mul
push
aad
js
mov
in
fnstsw
int3
inc
lock
scas
pop
fucomip
lods
ret
xchg
add
and
pop
mov
cmp
icebp
xchg
ds
add
ror
scas
xor
lcall
pop
dec
pop
jle
jno
ret
dec
mov
xor
bswap
push
jns
sub
lock
lahf
jo
pop
nop
bnd
int
add
ss
jecxz
in
inc
mov
push
and
adc
stos
pop
jg
in
test
ret
loope
push
stos
je
lcall
aaa
lahf
and
add
sub
xor
mov
loop
jnp
push
scas
rcr
test
in
dec
xchg
inc
int
in
sarl
call
sub
mov
aas
mov
cld
jecxz
mov
add
lret
or
add
ret
cmp
mov
imul
sub
push
lahf
cmc
incl
subb
xlat
mov
xchg
xchg
gs
jecxz
and
xchg
xor
psubsb
rorl
and
ss
test
fbstp
dec
cmc
push
push
pop
and
cs
push
push
les
insl
movsb
cmpsb
lock
gs
repnz
inc
movsb
pop
mov
js
stc
push
stos
mov
inc
aam
mov
adc
xorb
adc
iret
stc
mov
int3
out
mov
push
and
out
add
lret
icebp
out
lcall
pop
mov
jl
and
add
lods
stos
int3
icebp
ds
lock
pusha
and
bound
sahf
and
aaa
jbe
mov
inc
inc
ds
or
dec
insb
inc
mov
push
lret
testb
and
adc
xchg
int
rcll
lods
xor
iret
aam
and
mov
inc
xor
and
mov
lock
daa
jmp
sbb
xchg
mov
dec
xchg
clc
and
xor
mov
outsl
mov
add
cmpsl
sub
std
das
mov
add
test
or
sbb
pop
ret
scas
add
lret
push
rcll
adc
pop
rcrl
sahf
shl
cmp
sbb
loopne
imul
mov
adcb
test
push
adc
xchg
les
mov
stos
out
jno
in
jl
mov
stos
pop
in
mov
sbb
out
push
push
leave
fistps
insl
into
sbb
outsb
jo
arpl
pop
add
mov
mov
pop
out
push
imul
push
rol
xchg
jo
xor
push
adc
mov
pop
lahf
not
mov
cltd
mov
push
ret
cli
push
cmp
in
repnz
push
in
push
loope
xchg
les
jl
inc
pop
dec
pop
jno
cmpsb
lea
cld
jbe
mov
imul
fadd
lcall
adc
jecxz
xchg
ret
push
int3
cmp
push
mov
jge
mov
fisubrs
pop
inc
ret
insl
jne
jp
data16
in
add
ret
inc
mov
popf
out
push
pop
xor
xchg
stc
outsl
sbb
xchg
jb
mov
lret
scas
jl
pop
pop
pop
int
cmp
dec
jb
pop
jae
bound
mov
push
adc
mov
adc
sbb
pop
aaa
pminsw
enter
inc
and
adc
lret
repnz
fcoms
call
add
cmc
stos
stos
pop
xchg
jmp
mov
jle
dec
ljmp
pop
pop
out
xchg
test
adc
lcall
lcall
pop
cld
fstps
dec
adc
jmp
fs
out
push
addb
xchg
popa
paddusb
add
std
jl
adc
sbb
js
inc
mov
andb
mov
and
or
xor
shll
fcmovnu
sub
adc
dec
sahf
cmpsl
jo
into
loope
dec
cmp
pop
xor
test
mov
imul
push
cmp
xor
xlat
push
add
xchg
push
into
mov
movsb
inc
fld
adc
inc
movsb
ficompl
pop
fisttps
insb
cmpsl
ss
test
jge
xor
fstl
jne
pop
jle
negb
push
mov
sbb
test
mov
dec
or
dec
xchg
push
insl
mov
xor
mov
xor
push
cmp
pop
scas
aam
push
je
insb
adc
xchg
xor
ror
int
xchg
jae
jmp
xor
arpl
xchg
or
mov
mull
dec
mov
adc
add
mov
push
push
sub
push
sub
pop
ret
pop
int
mov
adc
xor
pop
mov
dec
mov
bts
jne
and
lahf
mov
cmp
and
jb
cmp
jae
loope
push
inc
fdiv
insl
jns
iret
mov
and
and
lsl
push
inc
lcall
lods
mov
leave
insb
inc
lock
ret
fisubrl
nop
adc
cmc
mov
call
push
insl
ret
and
fs
imul
pushf
sub
xchg
pop
call
mov
push
dec
xchg
in
jb
inc
lock
xchg
jnp
sub
inc
das
shlb
stos
lcall
mov
jo
scas
insl
or
and
mov
lret
add
out
adc
dec
and
loop,pt
push
and
pop
sub
ja
inc
sub
cmp
inc
arpl
scas
pushf
pop
cmp
jp
and
inc
pop
int
jne
push
sub
mov
hlt
andl
sub
cltd
xor
ret
es
mov
call
daa
addb
cmpsb
lahf
mov
int
mov
add
bound
out
sahf
lds
cli
sub
std
daa
out
cmp
jne
push
out
outsb
cmc
pop
enter
cmp
sbb
movsl
adc
jb
imul
in
pop
push
pop
xchg
or
dec
fldenv
leave
cmp
adc
lods
pop
rcrb
call
push
data16
push
in
jb
jae
bound
sub
bound
cmp
inc
mov
jns
fcoml
adc
lret
data16
xchg
add
cmp
je
mov
xor
dec
adc
enter
jmp
int
push
cmp
adc
push
out
push
xchg
call
and
in
push
mov
mov
pop
mov
cmp
jae
push
mov
fisubrs
pusha
add
and
pop
push
shlb
bound
or
fiaddl
mov
lahf
pop
inc
sub
jg
imul
shll
push
shrb
cmp
movsb
ljmp
inc
mov
sti
bnd
jne
push
repnz
lods
bound
or
in
cmp
inc
stc
add
xchg
sub
ret
mov
and
xor
adc
mov
cmp
xor
inc
out
pop
xor
fnstsw
add
sti
in
and
insl
std
imul
in
ret
and
adc
hlt
cmp
mov
mov
inc
cmp
and
repnz
sbb
mov
jb
addr16
jno
js
scas
scas
push
in
scas
or
rclb
cmp
cmpsb
inc
mov
mov
ds
int
popl
cmpb
push
lock
out
and
pushf
leave
leave
xor
es
pushf
adc
add
mov
xor
imul
rclb
pop
movl
lcall
repnz
mov
ret
jne
inc
cmp
in
add
mov
mov
es
gs
in
insb
rolb
jg
xchg
test
repz
dec
push
push
lcall
and
cmpsl
or
into
daa
mov
jp
jbe
push
jae
adc
jp
xchg
and
jnp
aaa
or
jl
daa
mov
mov
add
mov
xchg
mov
pop
imul
int
inc
pop
add
mov
out
mov
scas
xor
mull
lods
lea
pop
pushf
and
mov
jno
bound
xchg
ds
movsl
fs
cmp
cmpsb
xchg
fisttps
dec
add
push
xorb
mov
add
and
in
mov
xor
pop
repz
cmc
cmpsb
ds
jb
insl
or
decb
stc
xlat
sub
ljmp
ficomps
lds
mov
notb
outsb
into
test
out
inc
int
dec
pop
imul
inc
movsb
int
fldt
mov
add
fmul
xor
call
jmp
mov
sub
adc
mov
mov
cmp
into
add
pushw
push
add
leave
mov
mov
adc
and
mov
mov
sti
stos
movsl
push
jp
stc
push
or
bound
xchg
pop
mov
sbb
das
dec
movsb
add
mov
out
jg
mov
mov
dec
int
xchg
ret
xchg
cmp
jns
fiaddl
in
xor
mov
les
push
cli
inc
jg
xchg
popf
and
xor
pop
rolb
es
mov
adc
xor
lret
mov
jo
rclb
iret
pop
jbe
in
divb
or
pop
call
jne
mov
test
mov
mov
mov
fistpl
aaa
dec
pop
lret
subl
pop
test
insb
push
mov
ficoml
sub
mov
decb
jno
stos
insb
out
add
add
int3
and
stos
sub
cmp
inc
cmpsl
adc
call
daa
jmp
mov
fimuls
sub
cmpsl
int3
push
inc
lds
fisubrl
jge
jecxz
push
lods
fisubrl
cmp
jmp
inc
test
test
push
push
adc
ret
das
or
outsl
lds
pop
jmp
and
mov
pop
add
jl
mov
int3
lock
mov
call
or
lods
pop
and
fcmovnb
mov
push
addl
mov
and
mov
pop
inc
lock
and
or
out
mov
fbld
push
outsl
sub
in
into
inc
jge
das
loop
addr16
mov
rcrl
test
sub
fcmove
stos
sbb
test
loopne
les
lock
push
fistpl
add
dec
arpl
addr16
or
push
jne
adc
cmc
in
stos
mov
insl
sbb
add
stc
mov
dec
cmp
push
data16
sbb
leave
jle
rorl
mov
sbb
ret
dec
sti
fnstcw
stc
or
xchg
push
icebp
icebp
push
jno
xchg
iret
mov
pop
xchg
jmp
jae
stos
fcomps
push
xchg
sub
test
les
iret
pop
fldt
pop
mov
sbb
rorb
jae
inc
and
pop
into
jmp
loop
into
sub
notb
sbb
cmc
mov
push
jg
cmp
loopne
dec
enter
into
insl
adc
add
sti
xchg
mov
xor
test
xchg
mov
fldl
nop
push
sub
scas
or
pop
dec
sub
or
cld
scas
sub
ret
add
pop
adc
inc
out
sub
mov
enter
test
cmp
mov
or
mov
xchg
push
inc
js
das
sub
stc
cld
inc
push
push
mov
sbb
push
jo
mov
dec
mov
cs
jp
sbb
push
aam
pop
imul
push
sub
sbb
xchg
or
dec
mov
or
xor
addb
outsb
sub
clc
push
mov
stos
and
inc
pop
pop
rcl
mov
dec
pop
cmp
sub
mov
cmc
push
or
push
mov
jne
push
frndint
sub
loopne
mov
xor
or
jecxz
sbb
inc
div
adc
out
push
shll
xchg
add
and
add
lods
mov
dec
xchg
mov
adc
ja
cmpsl
cmp
pop
sti
and
jne
ja
inc
sti
cmpl
subb
stc
mov
mov
cmpsb
in
fisubrl
push
decb
add
gs
std
popf
sub
mov
mov
test
or
inc
push
and
mov
xor
lea
xchg
call
jle
sbb
sti
pop
sbb
idivl
out
test
mov
jl
push
push
mov
cmp
sbb
enter
sahf
test
mov
mov
rolb
jbe
mov
adcl
lahf
inc
fsubs
push
pop
jne
imul
lds
call
cld
je
ret
inc
sti
imul
add
int3
insl
in
mov
jns
nop
lods
mov
icebp
repz
loopne
sti
and
out
sub
push
mov
push
xlat
push
or
das
mov
in
and
push
shll
in
out
shll
adc
in
enter
cli
cltd
and
add
mov
or
lahf
xor
mov
or
xorb
adc
lds
stos
dec
or
dec
or
or
cmp
adc
dec
mov
xchg
push
mov
mov
push
mov
push
mov
lcall
lret
shlb
scas
jle
rolb
cmp
jmp
push
test
scas
call
mov
add
push
repz
pop
sbb
push
push
pop
fsts
pop
das
pop
or
xchg
lcall
mov
or
jg
ret
add
in
pop
mov
push
sub
stos
enter
ret
cmp
adc
mov
in
mov
cmp
and
jp
sub
push
xor
pop
daa
lds
adc
cltd
mov
aas
dec
into
and
lods
pop
ss
jns
bound
push
addr16
out
add
pop
arpl
xlat
add
inc
xchg
lock
fcmovnu
scas
sbb
imul
lcall
rcrb
imul
xchg
xor
sbb
push
mov
dec
or
fmull
lock
pop
mov
cmpsl
ror
andl
xlat
adc
dec
dec
jae
jbe
clc
jp
cmp
and
frstpm(287
mov
sub
cmp
adc
mov
sub
add
sbb
or
inc
adc
cmp
cmp
in
nop
popf
pop
dec
pop
xor
sbb
pop
cmp
stc
mov
pop
roll
inc
inc
push
pop
notb
gs
insl
cmpsb
add
and
pop
lods
loop
sbb
xor
enter
pop
push
xchg
xchg
mov
cmpl
pop
hlt
addr16
mov
test
ficomps
arpl
dec
loopne
pop
jae
cmp
xchg
cmp
fistpll
add
mov
movsb
add
pushf
fs
cmpsl
into
or
pop
jns
into
or
mov
fbld
cmpsb
sub
lret
cmp
push
fsubl
xchg
adc
clc
push
jo
mov
sbbb
mov
mov
sub
sar
nop
jb
add
add
test
jne
subl
jl
inc
adc
aaa
sti
jne
and
fldt
sub
xchg
xchg
ds
and
test
pop
mov
in
adc
jp
out
movsb
mov
push
imul
cmp
pop
stos
loopne
insl
or
pop
pusha
mov
mov
mov
dec
xchg
or
sarl
movsb
int
es
popf
jne
and
mov
dec
lcall
jmp
jne
sbb
mov
fcoml
sbb
mov
dec
adc
sub
call
pop
fiaddl
sbb
mov
xor
xchg
push
pusha
xchg
jge,pt
stos
fidivrs
mov
stos
sbb
dec
jns
orb
pop
jmp
movsl
adc
inc
sti
ret
sub
loope
jae
inc
add
mov
or
or
add
aas
jmp
icebp
inc
xor
xchg
loopne
lret
cmpsl
or
nop
add
jb
mov
out
cmp
xchg
stos
mov
pushf
int3
jl
bsf
repz
xor
fnstenv
pop
xchg
ret
inc
mov
int
pop
lahf
daa
cmpsb
pop
repnz
in
inc
sbbl
test
lret
and
add
mov
mov
das
adc
xchg
mov
mov
mov
dec
cmpsb
por
jne
into
mov
sub
into
rorb
cmp
fisttpl
repz
lret
mov
cmp
dec
mov
jae
sti
adc
out
push
and
sub
dec
loopne
and
fs
mov
mov
pushf
inc
out
fcomps
pop
imul
xor
or
movsl
lcall
addb
andb
mov
mov
in
mov
in
pextrw
sub
je
or
push
nop
jp
loop
hlt
sbb
fwait
aas
notb
mov
gs
in
test
mov
add
jle
addb
sub
inc
stos
pop
sbb
push
mov
outsl
fwait
lret
xor
add
fsub
sbb
jle
out
pop
rcr
mov
into
push
addr16
inc
int3
icebp
repnz
push
or
sbb
inc
lods
xor
xchg
sarl
xchg
lods
push
and
mov
sahf
mov
dec
xchg
cmp
fcomp
cli
into
push
pop
bound
fists
inc
and
ret
inc
xchg
jns
or
scas
nop
or
mov
mov
nop
mov
sub
repnz
dec
and
ljmp
dec
push
mov
fmuls
sub
xor
loop
loopne
aad
or
cmpsb
movsb
jecxz
fwait
popf
mov
add
sub
lods
jmp
xor
cli
push
adc
aaa
je
adc
push
mov
clc
lock
pusha
dec
and
sbb
sub
jmp
call
inc
into
stc
sti
mov
lods
or
outsb
idivb
cmpb
fisubs
sbb
pop
aaa
inc
dec
enter
and
mov
insl
and
or
or
popa
sbb
or
js
test
pop
stos
sub
mov
arpl
aad
dec
xor
sarl
subb
mov
mov
stos
xchg
sub
pop
imul
stos
aas
fiadds
out
rorb
push
pop
cmp
imul
adc
sub
mov
and
add
pusha
loope
ret
icebp
adc
daa
inc
mov
mov
sarb
inc
xor
in
push
int
pop
fs
jo
test
and
add
pusha
jo
pop
icebp
adc
rcrl
aas
cmp
sbb
popa
push
or
dec
adc
repz
pop
cltd
jle
mov
popf
loopne
mov
int3
jns
pushf
inc
insl
in
loope
adc
lea
dec
or
aam
xchg
dec
outsb
fistpll
inc
js
inc
cmp
xor
sub
jg
lds
inc
imul
cs
cmp
sbb
dec
xor
fwait
sbb
add
out
and
mov
or
mov
mov
mov
add
out
inc
mov
cmp
repz
ljmp
push
pop
or
rcl
into
sti
mov
movsl
out
sbb
jbe
es
cs
add
cmp
mov
out
mov
leave
in
inc
loopne
dec
cmp
movsl
push
xchg
movsb
mov
cmp
mov
out
leave
hlt
xchg
pop
rorb
mov
frstor
scas
dec
cs
fbstp
fsubrl
lds
movl
popl
cmp
cltd
aaa
insl
pop
arpl
cmp
clc
push
lahf
out
push
repnz
aam
shlb
shlb
cwtl
inc
aaa
pushf
ja
and
cltd
outsb
cmp
inc
leave
adc
and
test
add
sbb
mov
jno
sbb
out
push
hlt
pop
xor
mov
ja
addb
fsubl
and
xor
test
mov
inc
js
xchg
in
daa
cmpsl
mov
les
mov
lods
xor
cmp
jb
nop
and
popa
pop
loop
push
leave
fninit
nop
xor
mov
cmpsl
cmp
sbb
ja
pop
lods
jle
pop
fdiv
enter
push
loop
das
jb
cmpsl
lcall
xor
xlat
flds
xchg
stos
jne
shrb
or
jmp
add
push
jne
in
mov
ja
mov
jbe
sbb
gs
push
cmp
inc
in
movsb
vmovaps
xor
pop
out
arpl
nop
xchg
ds
mov
sbb
arpl
inc
inc
mov
lods
rclb
push
xchg
or
inc
jnp
shll
cwtl
mov
insl
fidivs
sub
xor
out
add
test
jo
and
out
ret
pop
stc
lea
repnz
fcmovnb
sbb
lret
repz
mov
mov
mov
xchg
pop
xor
mov
lahf
adc
int3
push
dec
sahf
inc
aam
lret
dec
aad
mov
and
out
test
les
pop
cmp
lret
cmp
mov
mov
sbb
push
pop
and
mov
add
cmc
fmul
cmp
mov
es
iret
mov
daa
cmp
icebp
push
and
mov
xchg
pop
push
cmp
lods
add
jg
jnp
movsb
cwtl
push
cmp
sbb
mov
jns
inc
mov
jae
mov
jne
loope
aaa
cmp
sub
xchg
sbb
cmp
imul
jecxz
adc
push
xchg
icebp
call
mov
loope
jmp
and
out
out
mov
jge
inc
into
loop
push
fldt
insl
mov
push
cmp
sbb
inc
xor
nop
aad
or
adc
mov
mov
nop
sbb
pop
push
fcmove
aad
sahf
outsl
repnz
stc
aas
mov
add
push
pop
push
sarb
xor
mov
enter
fmull
adc
arpl
das
lea
shl
cmp
xlat
jbe
adc
mov
icebp
pushl
shrl
push
roll
fpatan
push
aam
cmp
inc
lret
push
shrb
sub
loope
mov
xchg
push
ja
test
fcos
test
push
loop
push
mov
push
mov
addr16
mov
dec
xorl
xor
adc
or
sbb
jle
adc
inc
xlat
je
out
push
adc
mov
out
add
mov
and
shrl
push
aam
mov
mov
xchg
in
jbe
xorb
fwait
pushf
inc
mov
bound
push
das
icebp
or
arpl
mov
shll
cmpxchg
push
pop
movsl
enter
xor
test
inc
lret
stos
std
sub
xor
jb
mov
add
pop
lods
insl
pop
mov
xchg
fcmovu
cmpsb
inc
pop
and
or
jne
inc
jae
or
jmp
lods
gs
inc
cmpsb
xchg
jb
fcoml
std
pushf
pop
test
lods
push
xor
xor
fdivp
or
cmpsb
cmp
jge
scas
push
push
stc
and
call
test
adc
addr16
push
arpl
stos
cld
ficomps
sub
je
dec
pop
push
popa
push
inc
enter
loopne
add
mov
mov
ficoms
fstpt
mov
mov
lret
enter
shrl
fmul
imul
xor
xchg
pop
rcl
sub
sbb
pushf
fldt
jl
lahf
out
fdivs
sbb
into
lcall
add
xor
out
addr16
mov
movsb
mov
data16
dec
pusha
idiv
mulb
lahf
lock
mov
mov
pop
icebp
repnz
jg
and
addr16
mov
cmc
jmp
pushf
sahf
popa
cltd
rorb
sub
inc
mov
jge
dec
cld
cli
mov
cmp
adc
cli
mov
cs
addr16
xor
cli
xchg
push
mov
out
push
jae
cmpsb
dec
ret
sbb
addb
add
jo
jg
iret
inc
push
in
add
roll
mov
mov
xchg
inc
mov
rcrl
and
push
jle
sub
daa
push
xchg
das
pop
mov
das
cltd
cmp
pop
pop
inc
pop
fs
addr16
adc
nop
xor
rclb
sbb
fsqrt
adc
idivl
pusha
sar
lods
shl
xchg
ret
and
js
lcall
in
notb
lahf
movsl
dec
aaa
sbb
lds
lret
jp
in
push
ffreep
push
sub
push
inc
jo
popf
push
je
sbb
add
rcrb
in
or
int
repz
mov
loope
shl
daa
adc
lock
ret
xor
into
pusha
mov
jo
cmpsl
push
pop
mov
push
mov
test
das
je
jmp
xacquire
jb
or
mov
pop
sti
sahf
xchg
xchg
or
incb
icebp
inc
int
imul
inc
lods
aam
mov
pop
cmc
test
pushf
mov
mov
out
in
push
fcoml
xlat
test
cmp
inc
lahf
fs
in
popa
sub
lods
xor
pop
jbe
jmp
imul
icebp
pop
cmp
mov
dec
cmp
lods
xchg
adc
bound
jle
ss
push
xorl
pop
mov
aam
sbb
mov
imul
push
mov
filds
dec
push
and
dec
cmp
fcoml
xchg
addr16
xchg
inc
cs
repnz
mov
jbe
ficoml
sbb
dec
or
push
jno
call
mov
push
and
or
sub
push
inc
lods
xor
sbb
icebp
push
repnz
jle
in
dec
lret
jb
dec
ret
test
sbb
adc
push
int
jae
lds
daa
rcl
xchg
fiaddl
pop
push
mov
jp
dec
sbb
or
xchg
out
cld
dec
pusha
xor
cmpb
mov
xchg
rorb
inc
or
push
jno
jmp
mov
and
dec
mov
outsb
lock
rorl
int3
mov
xchg
push
xor
inc
cld
jae
loope
inc
or
stc
std
adc
mov
mov
or
cli
in
mov
je
add
inc
push
xchg
ret
and
sbb
int
pop
sub
pop
negb
mov
pusha
insl
push
cmp
inc
pop
add
pop
fisubrs
cmpsb
movsb
dec
sub
sub
and
scas
mov
movsl
shl
dec
and
sbb
fcoms
movsl
stos
ljmp
imul
sbb
sub
jge
push
in
mov
cmp
lahf
mov
cmp
or
and
add
xchg
mov
sbb
in
test
lahf
into
rcrb
xor
mov
pop
aam
rol
sbb
inc
aad
dec
cmp
inc
sbb
add
idivl
jp
add
imul
gs
loop
sub
roll
incl
jl
push
pop
pushf
in
xchg
or
das
push
in
mov
lahf
sti
inc
jne
sub
push
mov
mov
pop
or
mov
cmp
test
xchg
test
add
jecxz
mov
and
mov
in
pop
dec
stos
add
mov
adc
jns
jle
jp
inc
inc
inc
jl
lods
movsb
ret
test
add
ds
xor
leave
mov
fcoml
adc
add
inc
imul
xchg
jae
cmp
sub
pop
push
sub
popf
aas
and
ret
int
jmp
in
pop
out
push
sub
xchg
inc
mov
es
xchg
ljmp
xchg
jb
dec
mov
ss
lock
hlt
scas
cmpsl
std
orb
cmpsb
repz
inc
daa
aas
inc
out
aad
stc
outsl
push
movsb
xchg
loop
add
stos
stc
insl
and
push
mov
loopne
hlt
or
add
xchg
imull
fst
pop
or
into
or
sbb
in
cmp
adcl
les
cwtl
lcall
xchg
rcl
jl
push
mov
inc
cmc
loope
es
ss
dec
fdivl
xchg
sahf
add
int3
or
scas
sbb
mov
and
loopne
lods
subb
out
sub
jp
popa
int
test
daa
mov
iret
adc
push
inc
cmp
aam
push
dec
push
add
psllq
add
daa
lds
seto
nop
add
jecxz
test
fisubl
mov
fs
movsb
dec
les
mov
and
jg
lret
inc
jnp
mov
mov
fwait
orl
push
cmp
add
and
andb
sbb
push
or
js
sbb
add
fxam
and
jmp
mov
fcom
subl
fistpl
mov
scas
xchg
lods
pop
sub
pusha
fs
xchg
lock
pop
ljmp
mov
into
scas
jae
sbb
aaa
jle
mov
or
clc
mov
cmp
lahf
pop
push
adc
add
pop
mov
lahf
sub
and
pop
add
aad
pop
cwtl
mov
jmp
mov
aas
inc
ljmp
xor
std
stc
loop,pt
mov
popf
leave
test
adc
and
in
jg
mov
cld
xchg
pop
inc
inc
gs
iret
push
ret
addr16
xor
sub
inc
fcoms
mov
xchg
adcl
lea
popa
cld
movsb
fmul
rolw
sub
andl
or
jne
adc
leave
loope
cwtl
cmp
lds
push
and
cmpsl
dec
movsb
or
push
mov
fs
xor
insb
mov
dec
imul
mov
pusha
push
inc
jno
jl
sbb
stos
sarl
imul
test
sbb
sub
jo
or
enter
hlt
adc
divps
jne
and
roll
jg
xchg
jge
xchg
mov
add
imul
and
loope
xchg
sub
mov
sub
ret
lods
sub
outsb
incl
jecxz
mov
dec
or
xlat
push
js
test
sti
jae
add
out
out
sahf
push
orl
push
jge
xchg
mov
inc
sub
mov
jns
out
dec
notb
xor
cmc
testb
imul
rol
sbb
fsubl
orb
mov
xor
fnstsw
xor
fs
or
mov
ljmp
cmpl
or
push
add
arpl
cmpsb
cmp
insb
out
shlb
dec
jnp
insl
cmp
add
imul
ljmp
push
sub
or
pop
clc
push
jecxz
sub
rol
jnp
aaa
mov
fs
push
fldenv
push
pop
fisubrs
cmpsb
xor
js
adc
push
in
or
sbb
mov
aas
loopne
or
movsl
jge
insb
cmp
push
stos
insb
push
xlat
adc
dec
or
scas
fcomps
pop
lds
adc
mov
inc
add
mov
lahf
clc
mov
add
or
cs
fistpll
pop
iret
subl
loopne
mov
inc
jmp
push
push
sahf
insb
andnps
jp
pop
xor
sub
divb
push
scas
cmp
dec
or
mov
daa
mov
loope
fnstcw
dec
icebp
daa
es
push
push
or
mov
xchg
xlat
cmpsl
mov
add
mov
outsb
cmpsb
push
jg
stos
xchg
mov
push
cmpsb
scas
mov
in
ret
daa
lret
iret
and
fistps
in
mov
shll
jb
xchg
cmp
imul
adc
shlb
sub
mov
ja
sti
cmp
lock
jne
cli
in
orb
not
cmp
fs
cmp
push
and
inc
aam
mov
cmp
adc
leave
insb
xchg
fldcw
outsl
jecxz
lahf
inc
mov
cmp
fst
push
push
mov
jp
push
xchg
sti
adc
or
lods
or
leave
push
test
bound
fcomps
xchg
push
mov
scas
out
pusha
xor
or
loope
cmc
mov
add
fdivrl
test
insl
icebp
xchg
sbb
fcmovb
cmp
lods
or
cmpsl
shll
and
hlt
pop
aaa
movsl
cmp
outsl
push
leave
fimuls
mov
imul
addr16
flds
arpl
gs
aad
loope
jg
lock
mov
das
fdivp
cmpsl
xor
push
ds
faddl
stos
mov
lods
out
jnp
jne
dec
imul
imul
sbb
inc
insb
adc
lods
push
cmp
push
cmpb
sarb
je
xor
adc
out
inc
incb
inc
jnp
imul
in
notl
fidivrl
sub
cli
inc
bound
repnz
jnp
sbb
and
inc
mov
daa
lock
mov
add
push
roll
jae
subb
jmp
icebp
dec
out
movsl
sbb
pop
inc
je
out
mov
sbb
cmpsl
sarb
xchg
fcoml
and
stc
daa
push
loopne
adc
adc
ljmp
daa
mov
out
inc
or
cltd
inc
leave
sub
or
inc
lods
mov
call
test
cmpb
mov
mov
xchg
mov
cmpsl
jne
mov
jl
jg
pop
mov
ja
xor
xchg
mov
or
mov
cmp
add
mov
in
xorl
mov
ret
mov
and
sbb
xlat
les
dec
ds
ret
add
fstpl
mov
sub
xor
mov
dec
into
pop
sbb
xor
insb
pop
stos
enter
fistps
pop
pop
idiv
pop
fisubrs
pushf
mov
pop
lods
or
cmp
push
adc
adc
cs
jmp
cmp
push
and
ds
dec
ret
jl
int3
in
cltd
lods
push
adc
fstps
xchg
jnp
push
adc
pop
cmp
xor
pop
xchg
mov
in
sub
dec
popa
inc
fnstenv
and
pop
and
sub
in
rolb
pusha
ja
xchg
pop
sub
sub
aam
ss
aaa
loopne
xchg
popa
lods
mov
inc
xor
sbb
loope
xchg
dec
lret
jle
mov
xor
or
mov
xchg
pop
dec
mov
push
cmp
jae
pop
cmpsl
fcoms
dec
imul
sub
mov
push
push
dec
or
jo
in
fstpt
xchg
call
mov
jnp
or
ds
mov
loopne
lods
jnp
call
xchg
ljmp
mov
inc
test
dec
mov
jbe
roll
mov
mov
inc
fimuls
test
out
dec
lods
xchg
lea
es
mov
dec
xor
popa
out
cmp
test
loop
int3
data16
jo
loopne
outsl
jno
daa
lret
in
mov
jae
int
test
and
addl
std
pop
jl
call
mov
ja
test
mov
mov
xchg
int
movsl
mov
add
popa
pop
xchg
fscale
lret
movsl
orb
aad
push
rcl
or
jl
xchg
mov
cmp
jle
push
push
lds
fcomps
inc
rcrb
pop
mov
bound
pop
lea
fnsave
data16
fsubs
push
jmp
mov
ret
sbb
or
or
sub
js
nop
lea
push
es
fidivrs
add
test
mov
in
ret
sub
xchg
mov
mov
inc
and
pop
bound
and
push
rorl
dec
fistps
movsb
cmpsl
dec
call
cmp
adc
int3
xchg
bsf
jle
jnp
iret
mov
pop
or
sarl
push
insl
pop
or
pop
sar
lods
xor
int
ds
jno
sti
ret
inc
ss
rolb
mov
jg
xlat
lret
push
movsl
sub
int
push
cmpsl
xor
mov
ret
mov
outsb
or
mov
inc
js
xchg
sub
rcl
stos
clc
jb
adc
add
iret
or
or
les
inc
cld
jl
push
stos
popf
add
adc
pop
cmp
lods
inc
jo
pushf
dec
mov
ja
mov
mov
mov
mov
mov
jno
ja
nop
sub
loopne
jle
xchg
pop
push
push
push
pop
or
inc
les
or
or
lods
jle
cli
dec
mov
xchg
sub
sbbl
xchg
rorl
xchg
jl
xor
loopne
jns
push
mov
dec
xorl
ret
scas
repnz
in
and
cmpsb
popf
push
fwait
mov
in
addr16
scas
cs
fidivl
xor
xor
scas
mov
pushl
sub
add
in
cmp
mov
pop
push
inc
mov
test
jno
and
mov
adc
mov
dec
dec
cmp
push
inc
lahf
popa
mov
mov
fs
testb
jbe
push
sub
push
fadd
out
jl
in
push
xchg
stos
ret
lock
mov
fs
jle
inc
adc
and
repnz
or
mov
cltd
sbb
cmp
xor
xorb
xchg
add
sub
lahf
popf
mov
mov
or
sub
pop
leave
fwait
ret
subl
mov
sbb
inc
inc
xchg
out
xchg
mov
aas
sahf
divl
add
mov
mov
sub
mov
mov
ret
ret
sbbl
cmp
aaa
cmp
sub
mov
mov
inc
lret
insb
pop
inc
je
fisttps
inc
cli
cli
push
pop
push
jo
cmpb
out
pop
cmp
xchg
mov
sub
xor
test
push
or
lret
leave
adc
fs
jmp
insb
mov
xchg
int
xor
and
or
outsb
and
clc
es
pop
sti
popf
movsb
mov
xor
xchg
xor
stos
outsb
push
mov
sbb
sub
out
sub
outsb
iret
pop
cmc
jp
or
cmc
out
mov
mov
lret
push
das
push
rorl
and
enter
lret
js
xor
lahf
aam
in
arpl
mov
stos
sub
shrl
sar
test
and
movsw
mov
add
push
and
push
ds
push
stos
push
adc
jle
inc
mov
in
repz
ja
in
xor
aad
or
inc
cld
xchg
xor
add
lahf
xchg
cmp
jecxz
insl
dec
adc
cmc
dec
fwait
pop
je
test
daa
fsincos
and
sbb
sub
inc
xor
xlat
inc
pusha
or
test
in
lock
mov
push
mov
orl
jmp
push
pop
cli
pop
adc
xchg
mov
nop
xchg
ss
in
add
add
cmpb
inc
stos
mov
lret
outsl
push
pop
imul
rcrb
and
and
leave
scas
cld
xlat
mov
fistl
out
sbb
dec
jge
xor
jo
fbld
ljmp
and
xchg
pop
test
mov
jmp
int
rorl
lds
xchg
xchg
std
add
add
sbb
mov
std
and
fists
outsl
jo
in
fnsave
cmp
shll
addr16
mov
jp
xor
and
incl
rclb
gs
in
cli
mov
dec
cs
sbb
inc
iret
adc
fwait
popa
repnz
jmp
sbb
xorl
cmp
hlt
mov
imul
jl
adc
mov
and
sar
mov
mov
cltd
stc
icebp
adc
cmpsb
lds
ret
inc
push
mov
xchg
mov
mov
dec
push
push
movsl
adc
sbb
jp
movsl
lea
icebp
pop
or
inc
loop
stos
adc
or
sbb
mov
sub
out
imul
add
push
cmp
inc
repz
or
sbbb
cmp
xchg
jnp
inc
aam
cld
fsubrl
sbb
mov
sub
scas
sti
add
inc
xlat
mov
cmp
push
mov
loopne
xor
ja
mov
fldt
adc
sub
loop
xor
xorl
rorl
rol
xchg
mov
das
dec
xchg
xor
ds
sub
pop
pop
in
xchg
pop
sbb
dec
das
dec
roll
shll
mov
dec
jo
adc
sbb
push
mov
xor
out
mov
and
lahf
ja
and
out
push
xlat
pusha
lret
mull
jb
and
push
sbb
in
fistpl
cltd
jg
mov
sub
les
pop
faddl
fstps
sbb
repnz
push
sub
in
pop
sbb
enter
mov
push
ljmp
or
movsl
pop
adc
jmp
nop
cmp
lcall
pop
add
push
or
pop
adc
inc
jg
dec
int3
dec
pusha
lods
fldenv
out
out
ja
int
mov
shrl
xchg
fiaddl
sti
cli
pop
std
inc
rorb
std
stos
out
dec
mov
ficoml
mov
ret
das
aaa
shl
xchg
mov
sbb
shl
pop
ficomps
push
push
jg
jge
and
push
lret
and
xchg
je
inc
inc
mov
push
subl
sti
loope
outsl
addr16
sub
mov
fwait
hlt
fdivp
ljmp
scas
repnz
sahf
stc
cmp
sbb
lds
mov
cmpb
test
sbb
imul
call
sbb
and
fistpl
dec
lods
std
add
fildl
sub
lock
test
je
xor
rorb
loopne
inc
jb
sarl
les
fisttps
mov
aad
jno
jg
out
cmp
xor
pop
popf
mov
mov
cmpsl
into
in
sarl
ret
lds
ret
std
add
call
fdivp
sbb
arpl
stc
into
mov
fwait
xchg
lcall
sub
mov
out
and
mov
popa
fnstenv
shrb
xor
loope
loopne
cmpsb
mov
cld
fidivl
or
nop
aam
push
mov
mov
aas
sarb
push
adc
movsb
pushf
add
mov
xor
jmp
push
adc
aam
dec
in
mov
inc
popaw
outsl
and
loopne
inc
sahf
cltd
xchg
add
fwait
aaa
dec
jg
cmp
out
or
mov
mov
push
pop
dec
mov
hlt
movsl
sub
sbb
repnz
push
lea
fdivs
dec
int
call
sub
dec
add
cld
lret
or
add
jnp
test
sbb
js
outsb
cmp
and
stc
loop
aam
lea
mov
sarb
mov
outsl
cmp
out
xor
sub
ljmp
shll
lcall
jb
repnz
xchg
test
and
lock
cltd
enter
rcrl
les
fiadds
xchg
in
inc
sarl
xchg
orl
psadbw
adc
jmp
das
aam
lds
jg
scas
inc
mov
and
xchg
sbb
popa
aam
jo
js
not
stos
push
add
push
nop
fidivs
sub
jo
scas
mov
mov
pop
je
fimull
xlat
mov
out
and
addr16
insb
ja
push
int
mov
xor
lds
cli
push
fsubrl
jne
push
iret
insb
loopne
in
cmp
int
stos
in
dec
int
mull
mov
jge
in
cli
call
ret
or
cmpsl
repz
mov
aam
cmp
and
lahf
dec
ret
sub
adc
jmp
movsb
jb
je
rcrb
adc
jbe
inc
cmp
push
dec
fadds
push
bswap
sbb
aad
dec
aas
sahf
xchg
gs
jns
mov
sti
mov
addr16
sub
add
sub
in
pop
rolb
dec
push
nop
cmpps
and
inc
sbb
jbe
mov
adc
pop
bound
mov
push
in
inc
push
mov
push
lahf
cmp
sbb
or
int
loopne
or
cwtl
jbe
mov
cltd
inc
ds
push
nop
out
nop
test
popf
out
fs
sub
pop
inc
jge
inc
push
test
ljmp
pushw
and
pop
shl
mov
or
xlat
and
push
xchg
mov
and
repz
xchg
bound
pop
jecxz
sarb
insl
mov
add
mov
push
and
call
push
sti
shl
test
dec
imul
lret
fadds
jae
sub
pushf
inc
das
pop
movl
lock
mov
push
or
sbb
inc
cs
sub
out
hlt
dec
mov
jns
aaa
xor
das
push
pusha
push
ja
mov
push
addl
adc
imul
cltd
dec
pop
bound
insb
in
mov
insb
inc
pop
push
sbbl
fdivl
bound
jmp
jge
movsb
pop
inc
mov
popf
mov
les
mov
cmpsb
lods
mov
outsb
add
lds
push
sbb
aam
xchg
inc
lods
pop
xchg
inc
jbe
mov
mov
jo
lds
lret
inc
dec
dec
insb
mov
loopne
mov
jg
sbbl
icebp
jns
sbb
mov
aad
insb
jno
mov
pop
pop
fadds
mov
jg
cmp
loop
test
xchg
int3
mov
orb
jge
cmp
mov
mov
in
jmp
sbbb
sbb
icebp
adc
jbe
mov
sub
jns
mov
sub
jne
movsl
fwait
xchg
clc
scas
sarb
cmc
js
adc
jle
jo
pusha
xchg
mov
push
sbb
mov
sub
mov
popa
sbb
pop
xor
or
das
sbb
pop
inc
dec
cmpl
subl
ficoml
cs
jmp
xor
mov
lods
in
cwtl
add
mov
sbb
in
repnz
push
je
jb
iret
popf
and
test
jo
mov
xchg
xchg
out
lcall
pop
das
stos
test
ret
sbb
and
push
adc
push
jmp
push
in
repz
cmpl
push
movsl
subb
push
dec
inc
loop
das
mov
mov
enter
outsb
int
aam
clc
cmp
pusha
sti
mov
aaa
mov
cmc
sti
nop
sbb
mov
pop
mov
es
fs
rep
insb
xchg
jae
mov
mov
pop
push
cmp
enter
cmc
hlt
cli
cwtl
std
mov
adc
inc
aas
inc
mov
mov
aam
sub
aaa
or
test
fwait
stc
cli
arpl
push
jne
std
fcmovnu
rclb
xor
iret
sub
adc
out
mov
dec
in
adc
push
or
xor
stos
ret
dec
xor
sub
xchg
mov
pop
mov
stos
push
inc
jmp
cltd
cmpl
mov
xor
nop
fistpl
shrl
test
mov
iret
mov
inc
pop
les
push
stos
lods
adc
inc
popf
or
and
call
add
rolb
pop
daa
scas
jmp
dec
addr16
push
mov
out
loopne
bnd
fdivr
add
roll
xchg
insl
addr16
nop
fwait
popf
cmp
cli
ja
subps
jg
lock
xchg
imul
adc
imul
outsl
push
or
sbb
cmp
dec
or
inc
push
adc
push
lea
fistpl
test
mov
cmpsl
adcb
shll
dec
pop
rcrb
pop
push
pop
mov
outsb
jo
mov
xor
mov
rcr
out
nop
push
inc
dec
stos
mov
mov
sub
test
cmpl
inc
call
xlat
sub
js
fwait
in
inc
sbb
inc
pop
xchg
aam
mov
cmp
mov
jbe
add
adc
lds
cld
sbb
add
cs
add
pusha
popa
adc
js
in
or
dec
leave
jbe
les
lret
xchg
jl
jle
mov
sub
out
mov
test
adc
dec
out
mov
and
loope
shlb
mov
inc
inc
inc
mov
pop
add
mov
in
xchg
shlb
subl
add
mov
mov
lret
call
pop
push
lock
add
mov
pop
jae
inc
inc
xchg
jno
lods
sub
decl
jb
dec
jle
js
or
cltd
das
fsub
push
pop
mov
cmp
or
movsl
mov
sti
cmp
in
jle
fmull
xor
lods
scas
adcb
and
js
or
sub
cmpl
pop
aas
sub
icebp
ret
xchg
and
inc
push
cld
jns
add
xor
aaa
mov
push
les
xlat
loop
sub
imul
push
sbb
jg
sub
ja
rorl
clc
adc
add
loope
cwtl
ljmp
int
or
add
fisttpl
xor
mov
pop
loope
int3
mov
mov
cli
push
jecxz
dec
into
push
or
fstps
push
out
inc
sbb
aad
jg
xchg
mov
testl
or
loope
lods
sub
or
pop
lret
ret
jge
pop
lret
push
and
push
aaa
jl
add
ljmp
les
movsb
jne
ljmp
mov
mov
scas
int
mov
jns
mov
das
inc
xchg
in
mov
and
int
faddl
or
sahf
mov
ds
fisubl
bound
adc
dec
imul
push
ret
jno
adc
lods
xchg
cmp
loop
lahf
pop
cli
repz
pushf
xchg
mov
lea
jp
ss
fildl
pusha
stc
jb
push
and
add
cmp
rcr
movsb
test
outsb
dec
mov
sub
dec
jmp
fidivl
stos
jmp
cmpsl
mov
clc
and
sub
out
movsb
add
and
mov
dec
pop
add
mov
fs
fmuls
gs
jno
adc
sti
leave
sbb
cmpb
or
test
mov
inc
sub
mov
push
inc
push
mov
and
jns
sbbb
testb
inc
adc
add
add
mov
imul
pop
lret
mov
cmp
daa
xchg
movsb
mov
jae
out
rcr
xchg
mov
mov
ds
pop
xor
cltd
add
movsl
mov
leave
divl
mov
leave
clc
enter
sub
cwtl
or
repz
dec
xchg
lret
adc
pop
lahf
pop
movsl
mov
sahf
lahf
inc
pop
add
es
test
add
lods
ds
xor
pushl
sub
add
add
cwtl
mov
push
dec
sub
jp
adc
iret
movntps
stc
push
in
aam
jno
notb
adc
pushf
sbb
cmp
aas
lahf
fidivrs
fs
test
dec
inc
lock
mov
xor
mov
lods
out
js
dec
rcll
loop
mov
in
aas
pop
push
xchg
mov
jae
fnstsw
movsb
mov
jmp
sahf
je
cmp
pop
movsl
push
inc
jno
push
ror
push
sub
rclb
leave
outsb
cs
in
xor
mov
rorl
and
stc
imul
mov
scas
icebp
mov
jne
jl
or
or
outsl
js
mov
test
fldln2
push
rcrl
xchg
mov
jg
cmp
mov
arpl
cmp
cltd
das
in
out
jnp
mov
mov
sbb
out
mov
cmpsl
lock
sbbb
mov
or
xlat
jo
int
lea
fisttpll
fdivrp
dec
mov
cmp
fsubr
mov
scas
xchg
das
fistpll
xor
cld
xchg
arpl
mov
shrl
push
push
mov
popa
jmp
movsb
inc
xchg
movsb
sub
popf
push
ret
movb
or
mov
into
lcall
daa
call
push
out
das
fstpl
divl
inc
or
push
dec
out
xor
jbe
push
cmp
das
test
ret
jge
push
pop
add
sub
pop
push
out
push
and
std
and
out
sub
xchg
test
pushf
or
bound
and
sub
pop
jae
xchg
mov
sarl
cmp
test
arpl
inc
in
arpl
ja
js
lahf
ja
mull
cmc
ss
dec
jmp
adc
imul
cli
and
faddl
xchg
hlt
outsb
mov
add
into
cmp
mov
xor
mov
sahf
push
fwait
xchg
cwtl
add
jle
or
out
adc
sbb
jmp
lahf
rcr
push
mov
inc
scas
xlat
jge
jmp
out
sarb
gs
jbe
pop
pop
popa
mov
stos
push
mov
mov
call
fstps
push
adc
inc
mov
mov
out
je
pushf
mov
rorb
sbb
mov
jle
movsb
lahf
dec
mov
outsl
adc
lods
inc
xor
jle
xchg
fcmovbe
aaa
scas
fchs
mov
sub
and
test
dec
push
push
dec
inc
adc
ss
mov
xchg
fidivrs
cmp
jle
jle
gs
fs
in
add
lods
sahf
sarl
fdivs
xchg
fstps
pop
popf
and
inc
inc
sub
mov
les
jae
sub
pop
adc
pop
xor
aam
shrl
pop
arpl
push
les
mov
sub
xchg
mov
in
push
pop
flds
pop
pop
cmp
add
imul
pop
or
lock
popa
and
and
inc
adc
lods
repz
xor
cltd
jmp
jae
add
adc
push
arpl
test
add
cmpsb
sub
mov
mov
rol
mov
stc
movsl
test
mov
inc
mov
fnstcw
xlat
or
ljmp
test
push
repz
mov
mov
mov
sbb
jb
test
sub
adc
cmp
dec
in
push
jbe
xlat
cmc
rcrb
cli
lahf
ret
mov
cmp
ds
dec
push
add
lret
shrl
in
sahf
aas
pop
push
cmc
mov
movsb
lret
sbbl
pop
inc
inc
jg
inc
ds
cmpsb
xor
jb
jg
push
fdivl
loopne
xchg
into
fisubrl
xor
frstor
popa
fistpl
inc
int3
inc
sbb
cld
loop
lods
cmpsl
insl
mov
mov
iret
test
sub
test
mov
out
jno
jge
dec
loope
and
dec
notl
push
hlt
cmp
xor
icebp
xor
cld
notb
popf
adc
test
inc
cmp
outsb
and
xchg
and
loopne
test
cmp
cwtl
and
jnp
clc
mov
hlt
push
repnz
cmp
imul
sub
xchg
pop
or
jp
ljmp
dec
les
lcall
mov
adc
jbe
scas
ja
iret
dec
nop
cmp
outsl
insl
in
mov
adc
test
jne
outsl
out
lahf
andl
in
lret
subl
stos
push
cwtl
mov
cmp
mov
outsb
out
mov
das
icebp
mov
push
dec
mov
sbb
fcmovu
pusha
in
dec
fnstcw
iret
cwtl
add
mov
mov
fwait
adc
push
outsl
inc
lcall
and
sbb
gs
push
xchg
inc
data16
jns
ret
aad
leave
jne
cli
and
add
test
push
mov
mov
pop
sbb
xchg
lret
sbb
xor
ficoms
inc
jbe
sbb
test
xor
cmpsb
adc
xor
xchg
push
sahf
movsl
iret
xchg
jp
xor
and
and
test
lahf
popa
imul
sub
pop
out
rorl
fsubrl
cmp
jns
xchg
in
dec
popa
imul
dec
jg
xchg
cmp
xchg
into
addr16
ss
sub
or
mov
sbb
pushf
into
and
fisttpl
push
push
add
lods
es
ror
add
popa
repz
in
js
lret
mov
in
mov
cmpsb
xchg
jp,pt
clc
cs
out
and
data16
xor
lds
cs
inc
dec
sahf
data16
lods
cltd
test
push
inc
inc
sub
in
mov
mov
sbb
push
testb
ret
add
push
adc
test
push
rolb
jno
lret
jp
cmp
jl
mov
push
sbb
pop
fst
int
jns
pusha
fimuls
mov
cmp
cwtl
std
clc
shl
shr
lahf
inc
mov
loopne
ss
fisubl
push
stos
xchg
movsb
sub
addr16
repz
jb
xchg
decl
aam
jae
fadds
jne
sub
mov
adc
mov
xor
push
movsl
fnsave
xchg
int
pop
xchg
iret
mov
rclb
popa
loope
dec
add
icebp
mov
ljmp
push
mov
add
xchg
sbb
and
lret
push
pop
fisubs
mov
lock
mov
repz
ret
pop
jae
loop
lds
call
repnz
mov
adc
dec
sbb
sub
faddl
pop
aas
cld
out
cmp
test
or
pop
xchg
mov
inc
shrl
mov
adc
repz
jne
pop
pusha
and
jmp
jg
mov
clc
adc
fistps
lods
insb
pop
inc
add
popf
out
mov
lds
adc
push
xchg
add
testl
inc
mov
pop
lds
daa
and
sbb
fistpl
test
xchg
push
xchg
mov
and
daa
sbb
pop
jbe
loope
and
cs
xor
lret
repz
mov
cwtl
icebp
fldenv
sub
dec
sarb
outsb
cmpsl
clc
pop
stos
stc
pop
jmp
nop
cmp
cld
lock
repz
xchg
lods
ret
out
jb
push
cmp
mov
xor
fwait
pop
stos
adc
divl
xor
jo
lods
cmp
sub
mov
lahf
xchg
lods
jns
mov
test
stc
mov
stos
sarb
xchg
imul
sub
insl
push
icebp
pop
push
or
and
or
mov
push
fnstsw
dec
sbb
pop
jmp
cmp
int
mov
jg
mov
es
adc
dec
mov
sarb
ljmp
mov
lock
arpl
adc
xor
adc
pop
js
out
and
in
mov
mov
stc
jp
jns
fsubp
addl
inc
xor
or
jmp
fucomp
sahf
xchg
pop
in
ja
jae
hlt
imul
sti
repz
ja
cmpsl
fwait
push
and
or
push
lea
adc
jl
fsubs
pop
xchg
mov
cli
scas
push
shl
rep
pop
rcrb
adc
sub
mov
nop
js
test
fisubrs
repz
inc
jmp
mov
sbb
in
mov
mov
repz
pop
or
out
cwtl
mov
sbb
or
push
mov
mov
stos
fcomps
jle
push
repnz
dec
cmpsb
out
dec
aad
ja
pushw
ja
out
mov
int
cmp
and
xchg
or
jae
mov
or
aad
dec
pop
inc
cmp
jle
outsb
divb
fsubrs
fistpll
or
lds
inc
mov
stos
lea
or
shr
or
iret
sbb
int
pop
mov
test
fisttps
enter
icebp
fiaddl
mov
sti
jbe
aam
ss
shrb
je
mov
push
mov
sub
insl
and
iret
mov
pushf
mov
jecxz
repnz
stos
loope
sbb
gs
dec
adc
jno
xchg
inc
jge
push
inc
in
aaa
fildll
xor
add
jg
mov
jne
repz
cs
decb
daa
cmp
repz
push
sub
xor
cmp
dec
loope
dec
sbb
mov
test
rol
ret
mov
divl
mov
filds
push
jecxz
in
sbb
daa
adc
push
or
sub
idiv
std
popa
adc
jne
mov
pushf
popa
sub
jo
push
int
int3
pop
insl
lds
cmpsb
mov
mov
or
mov
sbb
aaa
xchg
adc
icebp
push
in
fiadds
push
and
lret
in
cwtl
aaa
xor
push
lahf
cmp
outsb
mov
cmpsb
ret
out
scas
in
jne
cli
mov
xchg
aas
loope
push
xor
mov
cmp
xor
stos
push
lcall
mov
adc
movsl
shr
jecxz
and
and
push
inc
repnz
mov
jp
sbb
ret
cmpb
int
dec
jle
cmp
add
or
sub
jns
shll
add
insb
lret
cmpsb
lods
push
out
ljmp
icebp
out
sahf
sbbb
push
mov
inc
fs
iret
xor
jne
mov
push
int
ljmp
add
jle
jge
push
add
mov
xor
cmp
mov
sarb
pop
sub
adc
popa
es
in
pop
cmp
test
sub
fsubl
cmc
push
and
sbb
jbe,pt
mov
fdivs
xchg
jg
sti
arpl
incl
imul
push
sub
ljmp
mov
mov
ljmp
push
lds
stc
pushf
ja
popa
jle
cmpsb
mov
in
add
adc
inc
jge
push
lods
adc
mov
jecxz
rolb
leave
mov
jb
rorl
out
jbe
mov
adc
and
pop
lock
jae
dec
je
pop
xlat
jl
add
sahf
das
pop
movsl
sbb
jecxz
mov
daa
or
lods
add
xor
push
clc
in
imul
rcll
je
or
test
int
cmpsb
repz
mov
mov
ds
sub
push
arpl
lods
decl
jge
mov
xor
xchg
insl
aam
ja
test
enter
divl
outsl
mov
cld
loop
daa
enter
pop
adc
in
fmul
les
repz
sbb
xlat
insl
adcl
lahf
and
sub
lock
mov
gs
xor
pushf
js
or
in
frstor
clc
jmp
mov
fsubl
data16
adc
sub
pop
mov
ljmp
jp
xor
hlt
movsb
outsb
jnp
xchg
cli
or
insb
ret
das
or
mov
cmp
pop
sti
dec
std
imul
mov
rolb
sbb
jno
cltd
push
mov
xlat
sub
ja
fbstp
aam
dec
jb
and
in
mov
and
aaa
adc
mov
fs
add
cmp
cltd
push
inc
hlt
cs
test
and
pop
cmp
sbb
xchg
scas
aam
jge
add
mov
adc
jmp
mov
xchg
xchg
xor
sti
sbb
mov
ds
mov
adc
xlat
dec
sub
lea
push
xchg
ficompl
fucomp
popf
mov
daa
lcall
lcall
dec
out
pop
je
mov
or
scas
cld
lret
cld
imul
sub
das
push
outsb
jge
mov
xor
adc
popf
ljmp
and
icebp
fimull
xchg
adc
and
ret
out
orl
pop
test
jecxz
cmp
sub
mov
fcmovu
cwtl
or
mov
push
ds
arpl
push
test
push
jge
sub
add
mov
dec
xlat
or
data16
cmp
rcrl
aas
jg
fs
add
lock
rcll
xchg
mov
xorb
js
imul
lret
rorb
pop
sub
pop
mov
insb
daa
loop
lock
movsb
aaa
int3
inc
and
bswap
jae
xchg
loope
ljmp
jno
pop
mov
xor
push
ja
test
test
sbb
lds
mov
dec
loopne
pop
loop
aam
das
arpl
cli
pop
dec
jne
rorb
movsb
inc
or
mov
inc
orb
mov
outsb
out
idivl
jno
imul
jo
fadds
movsl
insl
jne
lret
xchg
or
xchg
ja
adc
mov
mov
or
shlb
push
dec
jnp
outsl
into
mov
jae
cmp
movsb
adc
cmc
and
push
leave
xor
dec
mov
repz
outsl
add
lods
in
shl
jle
std
xchg
in
sub
aam
add
ljmp
imul
daa
dec
pop
cmpsl
push
lret
xchg
mov
test
outsb
imul
bound
xchg
ret
jbe
std
mov
mov
hlt
sar
xchg
cmovg
xchg
jle
sub
insl
lods
lea
jbe
mov
add
xchg
xchg
sbb
cli
inc
repnz
push
sbb
pop
mov
ja
add
mov
stos
cwtl
dec
adc
jmp
inc
stos
aas
lds
jg
loope
sti
cmpsb
jmp
push
cmpsl
dec
movsb
add
or
mov
push
dec
addl
add
pop
imull
pandn
jl
sub
mov
cmc
push
push
mov
test
adc
add
outsl
push
adc
fsts
push
aas
mov
dec
cmp
es
fisttpl
test
std
xchg
sub
fnstsw
push
pop
in
in
push
push
test
jo
aad
push
jle,pn
movsb
bound
mov
fcoml
push
pusha
fidivrs
pop
shll
and
pop
sbb
push
inc
adc
inc
into
lods
mov
cmp
fmuls
xchg
add
fdivl
adc
fiadds
or
add
jno
and
pushf
out
pop
cmp
push
fstpt
imul
leave
adc
cmp
cltd
xor
outsb
sbb
pop
into
mov
inc
push
sub
test
call
ja
dec
jo
add
insl
inc
js
iret
xor
imul
aaa
xchg
mov
shl
dec
dec
cmc
mov
inc
push
aas
stc
pop
por
jmp
adc
adcb
adc
pop
lock
dec
mov
loope
or
mov
jb
adc
inc
ljmp
inc
mov
mov
lcall
jae
and
jle
sbb
cmp
fadds
add
xchg
loopne
dec
jb
rorl
sub
loopne
imul
sbb
xchg
out
cmpsl
cmc
bound
shrb
cmp
push
stc
adc
mov
rorl
out
jb
push
rcll
outsl
je
into
adc
movhps
adc
push
ret
xchg
pop
xor
aad
jbe
xchg
or
iret
pop
rcr
hlt
cld
mov
inc
ss
add
daa
or
hlt
js
nop
les
call
lods
les
test
lods
sub
cmpsl
and
add
jp
out
cmpsb
dec
jmp
pushf
mov
xor
pop
inc
gs
and
arpl
jb
push
inc
sti
imul
mov
dec
ss
fwait
jo
les
ret
jmp
xchg
stos
in
pop
mov
cmp
fnstenv
cmp
cmc
mov
xchg
fisubrl
movsl
je
mov
mov
sti
jne
scas
mov
push
repnz
jge
fninit
push
mov
stc
inc
jle
xchg
dec
pop
into
inc
mov
push
lret
out
add
lods
sbb
sbb
jo
sub
mov
test
fstpt
pop
pop
sbb
scas
mov
mov
jae
adc
imul
mov
adc
js
es
xchg
pop
mov
pop
xchg
inc
jp
adc
mov
sub
sub
scas
stos
xlat
cs
adc
mov
pop
out
sbb
jl
pop
add
jg
cli
xchg
cmpl
sbb
fwait
jle
lret
in
xor
repz
in
cmp
lret
popa
mov
mov
clc
dec
sbb
dec
cmp
fcmovu
sub
pushf
mov
fsubp
add
adcb
ja
ret
xlat
fwait
push
andps
jae
int3
test
push
push
inc
fiadds
aam
jg
pop
pop
pop
fnsave
scas
rorl
mov
pop
in
xor
repz
cmc
cmp
jnp
or
movsl
sarl
ret
push
lret
fwait
das
fsubl
mov
inc
popw
outsb
mov
mov
ret
inc
sub
mov
jae
jg
sahf
fisttps
cmp
push
push
jno
lock
out
cmpsl
adc
fs
and
rorb
fistpll
mov
or
shlb
sbb
xchg
popf
arpl
lea
fwait
mov
jp
in
add
dec
lods
push
dec
out
adc
rorl
outsb
mov
dec
cmp
xchg
inc
imul
or
cmp
fcmovnu
cmp
jp
insl
hlt
and
aas
test
and
adc
fnstenv
fidivrl
mov
lods
or
xchg
pop
dec
cmp
orl
or
in
testl
xchg
fimuls
sahf
hlt
imul
push
jno
cmpsb
push
inc
movsb
pop
je
cmp
out
add
cwtl
push
xchg
jbe
xlat
adc
push
hlt
jno
movsl
outsb
push
and
cltd
inc
aad
jg
jae
jo
mov
sbb
and
xchg
xchg
inc
ss
sub
xlat
pop
mov
dec
cmp
test
cld
loop
jae
negl
addb
aaa
in
xlat
shlb
lock
inc
int3
fs
inc
lods
or
inc
or
xchg
addr16
ss
out
pop
jp
cld
adc
xchg
loopne
aam
idivb
cmpsb
int3
pop
xchg
pop
movsb
xor
or
push
cmpsb
cmp
mov
sbb
pusha
mov
add
std
mov
inc
xchg
filds
pop
scas
or
cmp
adc
int
or
mov
cmp
push
jno
pop
lods
mov
out
lret
push
sub
sub
sub
add
cmp
mov
dec
or
mov
push
mov
mov
outsl
outsb
fidivrs
or
and
pop
jmp
jg
xchg
das
sahf
xorl
ds
cltd
adc
mov
sub
mov
cmp
and
les
or
scas
out
mov
or
push
insb
add
mov
daa
jns
push
int3
xor
inc
mov
lock
sbb
ret
fwait
sub
popa
fwait
imul
repz
fistps
sti
popf
push
push
ds
xchg
mov
stos
leave
mov
stos
lret
jle
fisttpl
push
ja
or
mov
sub
movsb
mov
push
xor
push
imul
das
inc
or
or
xchg
jnp
ret
xchg
pop
ss
mov
xor
mov
cwtl
shufps
cmp
icebp
push
dec
or
int3
insb
sbb
and
pop
xchg
shlb
and
hlt
mov
cmp
mov
xchg
int
jae
fcmovu
mov
sbb
cwtl
int3
cmp
out
ffree
push
add
test
mov
mov
or
mov
cmp
repz
ret
aam
shrl
outsl
add
mov
mov
pop
testb
xor
bnd
xchg
sub
sbb
sub
std
push
sbb
jmp
rcr
mov
das
push
mov
shll
sbb
cltd
lret
mov
cltd
sub
mov
push
les
loop
xor
mov
pop
push
or
mov
inc
je
loop
pop
jge
popf
cmpsb
and
xchg
leave
mov
pushf
jg
adc
mov
sub
test
cmp
fdivp
or
cmp
lret
cmp
shl
and
shll
lea
je
sub
inc
add
bound
mov
and
jnp
dec
or
lock
repnz
push
pop
lea
inc
lea
dec
xlat
mov
dec
jg
popf
lods
cmp
shll
insl
or
jbe
adc
jno
cmc
pop
mov
sub
outsl
xchg
sahf
jmp
inc
and
mov
daa
mov
shll
pop
ds
jmp
pushf
or
sbb
jbe
fucomip
inc
cmc
add
and
btc
push
xchg
push
arpl
cmp
or
popf
loop
mov
xchg
in
sub
push
push
mov
xchg
add
mov
sahf
outsb
mov
fadds
mov
lods
jp
bound
jae
mov
call
lods
les
shl
mov
leave
aaa
cmp
and
xchg
sub
mov
pop
lea
mov
xchg
inc
sub
xorl
ficoml
or
push
xor
push
xor
fiadds
or
bswap
mov
test
dec
lcall
sbb
xchg
add
fcoml
nop
rcrb
mov
jmp
sub
mov
fsubl
dec
cltd
inc
sbb
pop
test
jb
fcmovb
cmp
jecxz
sahf
in
add
and
les
bound
or
loop
mov
addl
cltd
sbb
or
fistpll
rcr
or
imul
out
cmp
sub
mov
es
es
fisubs
pop
jg
cs
inc
jo
dec
adc
and
sti
cmpsb
sub
jecxz
daa
cmp
xor
mov
xor
jmp
loope
jb
sub
pop
jnp
adc
sbb
adc
or
mov
inc
xor
jne
rolb
in
mov
stc
addr16
pop
mov
sub
mov
stos
lcall
mov
loop
in
popf
stos
repz
notb
jb
sub
dec
pop
push
xchg
xor
cltd
int
mov
sbb
xchg
or
cli
dec
cmp
lcall
gs
push
les
sub
jp
or
mov
xchg
adc
mov
cmp
fcomi
or
jl
ret
mov
call
lods
std
ja
aad
xor
lret
jecxz
arpl
mov
mov
pop
mul
sub
ljmp
popa
adc
div
outsb
sbb
std
and
inc
add
shlb
icebp
fmuls
mov
inc
out
mov
cmpsb
add
or
jns
dec
cmc
insb
dec
hlt
sub
adc
shlb
push
data16
pop
or
das
push
dec
xor
cwtl
jmp
stc
shlb
inc
xchg
push
jae
fisubs
aas
addr16
fisubrs
sub
stos
das
mov
daa
cmc
repnz
shlb
fcmovnu
sbb
add
mov
mov
cmp
cs
bound
into
fmuls
pushf
out
sub
and
mov
mov
add
dec
cmp
sub
mov
in
sahf
scas
mov
imul
call
pop
lea
in
sti
inc
adc
shrb
pop
cli
cltd
daa
ja
pop
loop
stos
notl
pop
cwtl
popf
mov
decl
mov
xchg
sub
mov
imul
out
or
std
or
pop
cmpsb
loope
and
mov
inc
cld
lea
cld
addr16
mov
scas
cmpsb
mov
pop
push
inc
push
dec
loope
stos
mov
lret
pop
sub
jnp
pop
bnd
rcrl
aam
cmpsl
mov
or
mov
ficompl
dec
clc
inc
push
mov
dec
repz
loope
xchg
lret
in
inc
aad
negb
mov
data16
xchg
test
xchg
xchg
and
and
adc
lret
stos
test
mov
mov
loop
hlt
mov
mov
sbb
and
mov
xor
test
cmp
sbb
xor
mov
inc
jnp
in
lret
cmp
lods
pop
pop
daa
in
fsts
mov
fsubp
ds
out
mov
stc
inc
xor
jns
loopne
insl
and
mov
sbb
insl
in
insl
or
fidivrl
mov
shll
and
sbb
push
mov
dec
adc
lahf
mov
lcall
mov
mov
in
cli
daa
and
popa
adc
sbb
pop
push
pop
cli
in
insb
cs
and
mov
je
insb
jns
mov
mov
cmp
das
mov
jg
mov
cmp
cmpsl
lret
add
and
notb
ret
daa
mov
out
nop
xchg
call
loope
mov
in
fwait
push
xor
ss
add
xor
jb
enter
jae
fsubrp
lret
loop
arpl
push
pop
fsincos
rcr
insl
clc
hlt
xor
pop
adc
test
in
push
subl
mov
jmp
mov
add
ja
lret
cmp
or
mov
push
mov
fdivs
xchg
nop
pushf
div
jbe
mov
xor
scas
mov
cmp
push
pop
sbb
mov
and
jne
push
pushf
stos
cmp
test
lock
push
push
xor
jne
nop
stc
int3
daa
test
inc
shll
push
inc
xchg
cmp
cmp
je
sbb
repnz
xor
negl
stos
mov
cmpl
lods
dec
pop
outsb
hlt
aam
mov
pop
fstpt
mov
es
cld
into
sub
inc
pop
ror
nop
lcall
inc
fwait
enter
cmp
xor
mov
aad
push
xchg
jl
cmpsb
mov
cs
adc
cmp
fistpll
cmpsb
push
mov
mov
dec
mov
pop
stc
sahf
jecxz
inc
ljmp
mov
pop
das
jmp
mov
inc
cmp
push
jecxz
jae
push
adc
out
xchg
cli
jo
ret
mov
adc
push
xor
call
cmp
cmpsb
inc
xchg
adc
clc
pop
outsl
fwait
bound
cmp
aas
push
repz
cwtl
jg
test
aaa
fisttps
out
add
out
sbb
test
shll
and
adc
dec
push
aaa
add
and
pop
mov
push
dec
mov
mov
dec
pop
and
and
clc
in
into
cmp
shr
fsubr
int3
cmpsb
outsl
dec
arpl
mov
add
jne
jbe
jae
xor
fistps
lock
stos
xchg
bound
push
sbb
aam
mov
mov
test
mov
clc
cltd
xchg
jb
nop
xchg
mov
popa
pop
xor
sub
or
outsb
cmp
and
mov
mov
inc
push
call
lret
rorl
dec
push
push
xchg
push
mov
mull
jo
sub
add
les
mov
cmpsb
xor
shll
sbb
cli
mov
push
test
adc
movsl
or
fstl
pop
ss
sub
and
pop
cmp
add
xor
icebp
std
test
bound
pushf
aas
movsl
mov
out
repz
je
xchg
sub
popf
scas
push
das
pusha
mov
pop
imul
faddl
aas
lahf
push
lea
cmp
pop
cmp
sub
cmpsb
push
mov
lock
lret
mov
inc
add
test
cmp
in
nop
fisubl
mov
add
push
lods
mov
xchg
divb
shr
xor
ficoms
xchg
mov
jmp
inc
xchg
sub
cwtl
cltd
sti
scas
jo
and
ror
test
or
cmp
adc
pop
or
jge
sub
jle
jge
jns
enter
jle
add
int3
sbb
ret
lock
cmp
lret
stos
xchg
frstor
packsswb
and
pushf
std
and
lret
outsb
les
hlt
loopne
mov
stos
je
or
fisttps
popf
loopne
shlb
jle
adc
das
iret
adcl
jo
jle
cli
das
add
push
sti
rcl
add
xor
ja
or
testl
rcrb
lock
popa
mov
inc
xor
push
testl
inc
lahf
rcll
mov
das
lret
dec
or
xlat
faddp
push
loope
cmp
rcr
adc
ret
add
sahf
sbbl
adc
bound
push
fmuls
loope
adc
cmp
popa
jb
fcomps
cmp
and
stos
mov
aas
lret
int
adcl
pushf
or
inc
and
dec
popa
sub
pop
xchg
fisubrl
push
fisttpl
out
sbb
aaa
out
loope
decb
mov
sub
idiv
sbb
fldenv
sub
add
popf
mov
dec
pop
ficoms
push
add
xchg
int
sbb
xor
orb
cmp
add
mov
aad
jle
jg
mulb
std
js
in
lret
test
dec
pop
popa
in
push
xchg
int
xor
je
push
sbb
shll
xchg
into
cmp
pop
push
lcall
fdivr
adc
aad
jge
fildl
mov
dec
mov
adc
fdivr
pop
push
jne
lret
cmp
xor
mov
cli
and
pop
xchg
xchg
fcoms
stos
mov
repz
adc
mov
addb
mov
inc
dec
xor
jo
push
sahf
out
aam
sbb
dec
cld
pop
and
cmp
and
cld
imul
xor
shr
pushf
clc
clc
movsl
in
in
or
jbe
xchg
aaa
jbe
call
inc
or
push
push
mov
xor
push
pop
orb
cmp
lock
push
and
in
fs
out
inc
fldl
das
mov
fnsave
push
int
pop
or
pop
adc
sub
sub
ret
jecxz
repnz
mov
lods
or
pusha
jae
xor
mov
stos
fcompl
jp
hlt
sbb
loop
push
xor
lcall
pop
pusha
mov
add
orb
sbb
fistpl
sbb
push
nop
add
adc
fwait
push
imul
jmp
je
xor
jnp
stos
popl
lret
xor
add
inc
inc
jns
outsl
mov
mov
xchg
push
jbe
jl
icebp
mov
iret
xchg
mov
inc
mov
and
adc
vpinsrw
pmulhuw
aad
scas
mov
test
pop
mov
adc
loope
imul
mov
lods
and
ret
push
push
subb
jb
adc
in
mov
sub
xor
add
or
cmp
dec
fstpt
daa
jl
cld
pop
popa
sbbl
jb
call
loope
jge
jg
cmp
inc
sub
mov
loopne
leave
and
cmc
lahf
in
mov
shl
mov
cmp
movsb
aad
dec
adc
jne
pop
lahf
gs
or
inc
jle
dec
adc
inc
ret
pop
xlat
xor
dec
loop
cs
fcoml
in
insl
mov
xor
aaa
es
test
pop
nop
sub
aam
jge
push
cltd
cld
mov
bound
test
jnp
jo
lock
mov
pop
mov
mov
push
std
and
mov
sahf
adc
mov
dec
sbb
add
dec
push
je
cmp
mov
push
sarl
xlat
xchg
in
lea
ja
push
les
dec
cmpsl
mov
or
fstpl
insl
outsl
shr
inc
mov
data16
fnstcw
andb
cmpsb
loopne
add
or
push
jge
add
xor
testl
cmp
insb
push
pop
sub
cmp
xor
pop
add
test
stc
je
jp
pop
xor
push
or
jle
scas
mov
sbb
mov
pop
aam
aam
mov
popa
into
xchg
ss
stc
out
stc
loope,pt
in
mov
adc
mov
cmc
xorl
mov
mov
pop
sbb
mov
fs
mov
sti
lcall
or
ficoms
into
clc
ret
stos
mov
in
adc
sub
in
cmp
popf
cmp
and
rorb
out
incb
cli
adc
in
lahf
and
fisttpll
fwait
adc
push
pop
xorl
push
mov
cmp
les
and
fldenv
jmp
lods
dec
mov
inc
repz
pop
insl
mov
push
pop
pop
sbb
mov
push
js
aam
push
jp
loopne
mov
stc
shrl
sub
fcmovu
aaa
xchg
inc
jns
pop
push
je
jae
mov
xchg
fs
sub
in
arpl
pop
push
sub
dec
push
fadds
add
adc
or
daa
stos
add
clc
inc
insb
push
and
stos
jb
cmpsl
bound
fstl
bound
jmp
jbe
xorl
mov
in
jne
mov
data16
std
mov
dec
xchg
out
incb
fs
enter
xchg
and
cltd
xchg
lret
inc
test
inc
popf
data16
insb
in
shlb
jg
jb
xchg
clc
outsb
pop
dec
push
jbe
fisttps
fsubrl
arpl
xchg
lcall
mov
jecxz
pop
imul
sbbb
rcrl
mov
xor
ljmp
jns
or
orb
iret
pop
xchg
and
add
pop
or
xchg
inc
mov
xor
xchg
push
loop
rcr
sti
fdivrp
mull
cmp
stc
adc
es
pushf
stos
aaa
divb
dec
mov
jno
push
scas
fwait
push
in
xchg
faddl
outsl
imul
sub
sbb
imul
pop
add
add
test
lock
xchg
mov
push
xor
sbb
lret
inc
push
cld
push
cli
add
scas
shll
inc
ret
xchg
outsl
lahf
xchg
movl
mov
push
mov
mov
inc
fbld
jb
sub
push
adc
test
aad
dec
jo
repnz
jnp
repnz
je
popf
jecxz
popf
aam
or
fs
push
pop
jmp
jo
lea
inc
jno
dec
jl
push
std
out
cmp
hlt
xor
andl
xchg
mov
adc
jb
dec
jne
mov
xchg
inc
jp
call
mov
or
leave
inc
pushf
ret
mov
outsl
xor
rolb
rorl
xor
jmp
xchg
push
fildl
add
cmp
adc
push
jae
dec
scas
and
cmp
gs
mov
lret
mov
adcb
out
cltd
mov
push
mov
cs
int
cs
push
into
in
adc
push
loope
pop
xchg
fs
mov
sub
add
pop
pop
lahf
hlt
loope
ss
sub
xchg
lcall
mov
adcl
push
push
cmpb
push
enter
lods
adc
pusha
jecxz
xchg
subb
fwait
mov
shrl
loope
mov
dec
lods
adc
dec
fdivs
bound
sbbb
add
add
mov
fs
fcomp
mov
int
xchg
xchg
sbb
cmp
sbb
inc
jbe
shr
sub
lods
jecxz
mov
sub
lret
inc
lgs
cmc
ljmp
fwait
nop
add
push
outsb
cli
add
scas
ds
andb
out
scas
add
aam
cmp
sub
or
orb
inc
or
jmp
adc
push
xchg
mov
in
adc
jno
xchg
decl
cmpsb
xchg
addl
into
scas
push
les
pop
subb
sbb
incb
inc
xchg
addl
xor
jmp
push
jns
add
insb
dec
in
into
movsl
inc
jl
push
mov
xchg
das
inc
push
mov
gs
iret
mov
xor
mov
mov
stos
jo
jmp
loopne
sahf
sbb
or
cmp
jmp
inc
test
mov
fs
mov
mov
cli
push
or
jae
int
xchg
cmc
inc
ljmp
inc
into
icebp
xchg
cli
jecxz
add
fnstsw
or
enter
test
movsl
jge
dec
cmp
js
xor
cmp
pop
subb
sbb
out
das
inc
shrl
mov
fists
add
call
cmp
or
jns
pop
mov
lods
pop
mov
popf
sub
shll
push
cmpsl
and
int3
sbb
sbb
dec
pop
fcompl
nop
mov
fstpl
sbb
jg
sub
or
push
xorb
or
movsb
ljmp
sbb
cmpb
out
ror
mov
cmc
xor
int3
aam
insl
outsl
push
lret
lret
pop
hlt
cs
jb
cs
xchg
push
mov
mov
and
pop
push
dec
jle
and
ss
and
cmp
dec
pop
ljmp
sbb
cli
mov
mov
sar
aaa
data16
add
cmc
std
psrlq
cwtl
mov
or
xchg
add
push
cmp
cmpsl
ret
mov
loopne
pop
cli
sahf
shl
adc
push
adc
inc
push
mov
pusha
enter
sahf
mov
iret
push
leave
fisubrl
and
pusha
sbb
mov
jb
push
mov
aaa
add
ret
aad
ja
cmp
add
sub
xchg
movsb
inc
sbb
mov
mov
lret
cltd
mov
dec
fldln2
and
mov
cmp
lret
scas
fdivs
loope
lods
xor
xchg
je
mov
push
jno
pop
sbb
aad
call
push
clc
mov
cmp
stc
out
xorb
mov
fdivp
pop
dec
mov
test
lahf
test
loop
mov
cmp
call
loopne
adc
add
insb
jae
inc
adc
cmpsl
jmp
add
mov
fistps
push
aad
or
fadd
lcall
push
adc
push
inc
and
inc
pop
pushf
mov
scas
or
and
iret
cmc
icebp
xor
imul
fcompl
out
adc
pop
push
das
shlb
aas
lods
fcompl
inc
daa
popf
jge
clc
daa
jns
cltd
stos
hlt
frstor
mov
adc
bnd
inc
xor
scas
add
jnp
pop
add
pop
xchg
jp
push
push
push
mov
loop
and
in
jecxz
jnp
mov
out
push
notb
lret
jmp
pop
aad
cmc
out
lcall
sbb
mov
rorb
push
js
daa
mov
add
sub
in
mov
mov
sub
rcl
mov
sbb
jle
and
add
jl
xchg
inc
fwait
cli
add
outsb
rorl
push
popa
ret
xchg
outsb
movsb
test
push
pop
xchg
out
stc
in
sub
fs
jmp
push
clc
xor
movsl
pop
xorl
bound
shrl
push
xor
inc
add
pop
mov
call
mov
xchg
xor
lods
mov
xchg
pop
imul
aas
sbb
inc
data16
mov
loope
add
push
lea
test
decb
dec
jnp
and
jle
in
pop
scas
xchg
cmp
push
jle
fldcw
test
test
cs
adc
mov
inc
and
push
rolb
insl
sub
sub
enter
movsb
mov
stos
lret
xchg
sub
ffreep
lret
jge
sti
iret
mov
imul
xor
imul
fwait
mov
std
inc
pusha
rcrb
imul
pop
dec
daa
mov
mov
ja
pop
lock
scas
cmp
ljmp
lods
jae
int3
push
inc
xor
pop
out
push
mov
pusha
cld
in
fcoml
dec
in
mov
je
lahf
insl
adc
mov
in
cld
inc
jmp
les
sub
stc
scas
jl
test
xor
adc
pop
xorl
mov
add
jecxz
jecxz
xor
jecxz
mov
jno
and
in
loopnew
pushf
cmp
aaa
sub
movsb
shlb
jp
test
add
sub
lret
lret
sti
dec
cmp
sub
push
adc
das
out
fcoml
inc
pop
lret
mov
xor
push
dec
lret
adc
sub
mov
ljmp
mov
cwtl
jnp
in
in
mov
in
mull
outsb
jl
jg
mov
lock
xchg
add
push
dec
inc
lods
and
adcl
cli
js
pop
movsb
inc
outsb
mov
push
cltd
dec
sbb
sbb
mov
pop
imul
add
jmp
fstl
jg
push
out
mov
adc
mov
lret
dec
stc
imul
pop
sub
xchg
mov
push
jns
jae
fwait
xor
or
pop
inc
fisubl
adc
fcomps
out
hlt
inc
stc
pop
push
test
cmpsl
pop
cmc
sub
xor
in
lahf
out
sub
out
push
stos
pop
mov
push
pop
stos
sahf
pop
aas
push
mov
hlt
addr16
stc
popa
sbb
cmp
daa
jb
cld
pop
mov
imul
mov
sub
aad
mov
or
mov
fildll
daa
fildl
mov
and
bound
mov
jecxz
xor
test
mov
jns
push
stc
sub
push
mov
cltd
scas
xchg
or
add
mov
mov
std
add
mov
xor
cltd
jg
fidivs
jne
mov
sub
rcll
pop
pop
mov
aaa
lea
mov
lcall
adc
je
popa
and
xchg
dec
dec
mov
iret
movsb
sub
call
mov
jae
stos
aad
dec
pop
dec
sbbw
push
xor
push
jo
xchg
and
repnz
push
out
adc
divl
jo
xor
shll
push
leave
lahf
insb
cld
lcall
sub
es
loope
xor
movsl
mov
cld
les
add
jnp
test
shll
cwtl
xchg
aam
mov
js
inc
fistpl
jo
decl
das
imul
add
adc
flds
insb
in
sbb
testl
cmc
jle
shlb
push
movb
jns
jecxz
ficompl
adc
mov
cld
fisubs
and
lds
pushf
dec
cmp
adc
cmpsl
fwait
and
das
xor
and
fisttpl
hlt
mov
jns
mov
dec
loopne
stos
sti
decb
lods
in
repnz
sub
fucom
icebp
ja
or
loope
xchg
dec
push
xor
inc
and
fsts
imul
lret
shll
jne
mov
xor
repz
rolb
les
or
nop
cmc
mov
pushf
push
jbe
adc
lret
xlat
mov
leave
movsb
insl
lds
out
sti
or
cld
cmp
sbb
mov
adc
mov
scas
fildl
ja
aam
flds
in
imul
cmpsb
inc
mov
mov
and
mov
sbb
jbe
stos
insl
dec
push
popa
inc
mov
jg
aad
loop
fmull
scas
mov
lock
lea
jl
mov
mov
mov
add
xlat
cli
pushf
pop
lret
pop
test
fstpl
out
sub
xchg
inc
enter
jb
loop
stos
xor
pop
add
ffreep
rcl
mov
mov
jne
out
mov
push
sub
cmp
shlb
outsb
jbe
jmp
clc
push
lret
push
mov
out
and
sarb
push
aam
inc
mov
dec
add
icebp
or
add
add
mov
mov
dec
push
mov
jmp
shrl
popf
fcomps
mov
jp
mov
icebp
inc
inc
xor
push
jp
lahf
enter
repnz
mov
outsl
out
gs
sub
xor
int3
push
insb
pushf
test
lcall
xor
das
pop
mov
mov
xchg
int
bnd
jne
push
xsaveopt
clc
shll
cmpb
or
cmp
push
pop
xchg
jp
push
lea
popf
pusha
mov
add
xor
mov
iret
cmp
pushf
push
shl
inc
inc
je
mov
repz
xchg
out
cmp
das
sbb
and
movsb
into
test
lret
jno
vandnps
pop
xchg
stos
sub
popa
mov
mov
aad
fs
sbb
loope
fwait
out
push
push
fmull
pop
call
pop
rorb
push
cmp
fistpll
fadds
and
scas
in
stos
scas
push
jb
test
add
scas
jo
stos
jbe
push
das
mov
adc
sbb
fbstp
mov
inc
dec
xorb
popa
jge
cmp
shlb
sub
add
sbb
cmp
pop
fnstenv
ret
cli
out
or
add
add
bound
inc
jmp
icebp
pop
aaa
fistpl
pop
bswap
call
pop
mov
fwait
xchg
jle
es
leave
pushf
out
push
imul
movl
das
scas
xchg
mov
out
pop
cmp
outsl
and
pushf
pop
push
clc
frstor
xchg
out
enter
ja
pusha
jg
pushf
loope
mull
xor
pop
sti
jl
pop
stos
mov
gs
and
fcom
je
mov
lock
cltd
aaa
in
cmpsl
mov
xchg
inc
inc
jp
gs
stos
movsl
xor
lods
ret
mov
push
push
iret
flds
and
cmp
jnp
pop
mov
or
mov
push
stos
push
pusha
sub
jne
jno
or
pushf
sub
test
test
fcmove
adc
or
cmp
adc
inc
cltd
mov
adc
cmp
push
mov
adc
push
lods
lahf
dec
mov
cmpsb
lret
pop
xor
call
mov
jno
loope
into
movsb
pop
ror
adc
dec
add
fwait
outsl
lds
xchg
and
inc
setnp
idivl
jns
dec
fwait
jns
mov
xchg
jl
adc
test
lcall
imul
leave
jl
out
sti
mov
push
and
mov
fsubl
inc
lret
push
sbb
outsl
popa
xchg
mov
sub
dec
dec
xchg
dec
cmpsb
sbb
incb
xor
pop
imul
pop
inc
mov
into
or
popf
xchg
jge
push
psrlw
jne
mov
lahf
mov
cmpsb
movsl
loope
xchg
adc
mov
dec
movsl
enter
mov
jg
dec
stc
jecxz
inc
sbb
cmc
jp
ljmp
dec
and
push
pop
insl
aaa
mov
pusha
sbb
jle
popf
fwait
sar
fcmovne
or
sbb
push
rolb
jo
adc
sub
push
cmp
xor
dec
clc
push
scas
adc
and
jecxz
inc
cwtl
xor
outsb
mov
push
jns
mov
sarb
mov
int3
jle
lods
mov
add
xchg
int
dec
int
cli
insl
adc
add
mov
xor
ss
lock
pop
inc
xor
loope
jbe
fists
pop
inc
aas
pop
loope
sub
and
sbb
fs
push
add
or
cmp
xchg
cmp
adc
push
jg
mov
cmp
add
pop
or
stc
fsubrl
jae
insb
lock
cmc
adc
cmp
xor
ja
jle
jmp
cmp
pop
aam
or
in
ja
adc
out
cmp
cmp
es
daa
dec
int3
jae
test
mov
scas
das
sbb
push
xchg
dec
ljmp
sbb
outsb
pop
loope
dec
out
hlt
aas
xchg
hlt
mov
gs
mov
call
sbb
and
ljmp
in
bound
sbb
stos
push
xor
lods
les
sahf
aaa
lahf
bnd
and
lcall
andl
fsub
mov
out
or
xchg
or
movhps
aad
push
push
enter
dec
pop
pop
gs
dec
imul
mov
sub
xor
fidivs
xchg
dec
mov
push
loope
insb
aad
or
aam
fs
cmp
push
jp
inc
pop
fs
pop
xlat
lods
jno
in
or
add
int
mov
jge
int3
cmp
xchg
mov
sbb
mov
dec
dec
loop
mov
addr16
mov
and
fisubrl
mov
mov
shll
std
cmp
or
add
insb
test
shll
jp
pop
aad
aas
pop
sub
inc
in
lret
push
mov
test
or
divb
cld
dec
pop
icebp
xchg
adc
jns
aas
dec
sub
add
clc
test
cmp
add
out
xchg
adc
in
jle
insb
sub
jbe
daa
mov
sti
lods
leave
outsb
bound
mov
movsl
sbb
push
dec
mov
lods
fidivrl
lods
sbbl
xor
aas
xchg
loop
sbb
push
icebp
testb
pop
call
orb
pop
mov
lods
ret
in
ja
mov
mov
inc
mov
xchg
adc
dec
lds
es
pop
loope
and
push
shlb
inc
mov
loop
jp
shld
mov
std
jbe
jl
fucomp
scas
push
fwait
add
cs
sahf
dec
xchg
mov
lret
pop
xchg
jnp
popf
inc
cli
jmp
in
and
xor
sbb
shl
pop
repz
mov
scas
xchg
xor
pop
pop
fwait
jne
icebp
dec
inc
or
dec
imulb
cltd
clc
sbb
movsb
sbb
and
mov
rorb
rcrl
mulb
sub
imul
shrb
punpckhwd
jnp
popf
jnp
sbb
jle
push
push
int3
into
xor
mov
lahf
jg
add
fimull
jne
jecxz
out
jg
inc
fstps
rcrb
jne
lock
int3
popf
sub
add
ljmp
add
jne
mov
in
movsb
push
jecxz
ja
cltd
cli
cmp
fisttps
adc
adc
dec
test
hlt
xchg
add
je
fs
dec
mov
pop
sub
rclb
dec
pushf
cwtl
imul
xchg
mov
fwait
push
clts
ja
stc
leave
mov
inc
nop
cwtl
cmp
mov
xor
adc
inc
loope
lret
lods
repz
shl
inc
push
or
sub
sub
jp
mov
and
andb
fmull
outsb
popa
inc
and
jl
push
mov
sbb
lock
clc
push
test
jno
cmpsb
loopne
xchg
rcll
jbe
fsts
int
push
mov
stos
outsb
mov
loop
aam
popf
call
sub
mov
fisubrl
sti
roll
and
cs
sbb
fcmovu
movsl
inc
and
adc
ret
sbb
aas
out
scas
push
shrb
xor
dec
mov
into
sbb
dec
xor
std
popa
test
fcmovne
and
push
sbb
mov
jnp
cli
aad
and
mov
and
mov
cmpsb
cmp
inc
lock
push
push
dec
add
sbb
mov
dec
or
ret
add
sti
sub
cmp
mov
jne
xor
enter
xchg
iret
xchg
push
call
repz
or
dec
or
jae
push
sbb
pushf
cli
and
mov
inc
mov
sarl
push
mov
incb
lret
int3
xchg
dec
rorb
mov
dec
jecxz
fbld
adcl
jecxz
stos
xchg
rcrb
in
mov
mov
popl
int3
stos
or
push
leave
movsb
loop
push
inc
ljmp
dec
mov
adcb
fdivrp
movsb
loope
jns
cmp
adc
push
xchg
fildl
pop
push
adc
fwait
sbb
cld
gs
inc
cmp
ret
aaa
push
jae
sub
fidivl
mov
fisubl
jge
mov
scas
mov
arpl
inc
shlb
jge
test
insl
ret
divl
fldenv
pop
cmp
cmp
ja
fldl
fstpt
or
pop
xorb
leave
sbb
add
ss
into
add
xchg
movsb
addb
xchg
push
loope
mov
scas
out
insl
scas
mov
push
test
inc
sbb
sub
jae
adc
lret
or
lods
adc
insb
aas
push
std
pop
fs
inc
dec
nop
adc
imul
push
cmp
dec
mov
aas
or
stc
lods
cld
loopne
dec
js
or
pop
mov
or
add
mov
jmp
mov
xchg
mov
mov
dec
dec
inc
jae
das
adc
fs
sub
push
std
imul
es
mov
popa
cmpsb
aas
negl
fildl
jbe
jbe
test
sahf
sbb
loope
fs
aad
inc
daa
xchg
mov
jecxz
mov
push
loope
sbb
cmp
pop
jp
jmp
xchg
sub
inc
xchg
ds
xor
lcall
movsl
mov
mov
aad
fistpl
cmp
loopne
push
mov
and
adc
mov
mov
addr16
sub
into
xchg
mov
dec
push
push
sbb
cmp
out
jae
or
ficomps
cmc
cmpb
je
xchg
push
jmp
mov
mov
std
mov
xorb
in
enter
and
shlb
icebp
pop
adc
insl
ljmp
mov
xor
cmpsl
mov
mov
fucomi
push
pop
jb
pop
add
cli
inc
push
pop
xor
mov
pop
mov
stos
dec
jle
pop
push
mov
mov
into
sub
mov
aam
cwtl
repz
test
aaa
dec
scas
repz
xchg
adc
and
sbb
jge
mov
push
hlt
ljmp
insb
lahf
add
xchg
sbb
out
cmp
push
or
adc
cli
mov
dec
imul
inc
pop
mov
pop
out
in
dec
or
subps
in
push
jne
mov
xor
fnstcw
rclb
jnp
in
mov
lods
adc
xchg
icebp
xchg
sbb
mov
cs
ficomps
jo
lea
sbb
mov
popf
mov
jbe
cltd
dec
imul
push
popf
ja
ret
aad
mov
cmp
sub
call
nop
cmp
in
into
mov
add
jno,pt
loop
add
push
mov
cmp
cmpsb
mov
cld
stos
mov
xlat
mov
adc
and
xlat
stos
xor
lret
test
mov
scas
incb
sahf
fs
test
test
cli
inc
sbb
sahf
idivl
jp
sub
lods
or
sub
xchg
mov
fnsave
jmp
movsl
pushl
sbb
pop
jle
xchg
ja
jge
shll
add
jl
dec
pop
repnz
and
daa
cli
pop
lahf
adc
push
fnstsw
mov
arpl
pop
daa
jnp
iret
shll
sbb
mov
push
test
jne
fidivl
or
js
test
repnz
mov
or
out
arpl
jp
mov
push
mov
add
enter
jg
in
add
nop
sbb
nop
adc
mov
ds
inc
inc
add
roll
mov
leave
push
sti
mov
jg
mov
ss
inc
arpl
div
push
cmp
jp
xchg
cltd
push
pop
out
adc
or
out
jecxz
jo
nop
xchg
or
jecxz
pop
addr16
xor
sub
push
mov
mov
inc
add
stos
xor
inc
dec
movd
dec
inc
jae
xchg
cmpsl
and
mov
or
pop
test
jecxz
pop
inc
std
jbe
push
rcll
dec
xor
jmp
in
pop
arpl
lea
js
inc
dec
mov
xchg
in
popf
sub
cs
inc
ljmp
lods
lods
loopne
push
das
adc
and
dec
jns
push
dec
inc
xor
dec
lahf
cli
push
gs
mov
mov
mov
jmp
adc
xor
sbb
mov
dec
int3
pop
punpcklwd
pop
pop
decb
add
xchg
js
rcl
adc
sarl
lcall
cmp
mov
pop
cmp
rcl
popa
or
insl
cmp
insb
orb
std
mov
dec
inc
and
dec
sub
mulb
daa
pop
mov
ret
adc
push
push
mov
addb
ds
pop
sbb
pusha
fmul
xchg
inc
pop
mov
push
cmp
or
push
gs
fimull
sub
loopne
sahf
fistpl
insl
cmp
lret
das
sub
stos
lds
push
and
gs
jge
sub
orl
call
cmpb
es
in
pop
out
imul
mov
cli
pop
or
loop
jle
call
lret
sub
push
push
and
lods
or
lret
test
ljmp
jns
adc
push
movl
scas
aaa
leave
push
rcrl
fistps
outsl
lds
aas
jle
mov
inc
call
jno
xchg
movsb
loope
mov
push
sahf
test
sbb
push
into
in
pop
adc
rep
iret
jb
je
repz
adc
dec
push
or
cwtl
fucomip
adc
mov
mov
jmp
test
sahf
mov
sti
xchg
jl
aaa
sbb
scas
dec
mov
or
pop
cli
into
insl
les
fildll
cmp
jg
cmp
mov
insb
les
adc
adc
push
cmc
ficoml
loopne
dec
int
fiadds
popa
mov
mov
xchg
fmul
fdivrl
in
push
cmp
rcl
and
sub
or
ficompl
mov
loopne
add
add
jnp
sub
xor
out
ljmp
jns
lods
lahf
mov
dec
adc
ja
enter
mov
jg
fidivrs
and
push
lods
push
les
add
test
sub
addr16
int3
mov
jae
fsubs
addb
pop
or
add
fsubrl
scas
aad
stos
aaa
pop
mov
hlt
jb
dec
sbb
ss
dec
push
and
loop
loopne
push
imul
or
mov
push
add
aad
mov
cwtl
sub
and
push
push
dec
sub
cs
test
sub
cmc
xorb
gs
pusha
mov
sbb
stos
mov
push
iret
enter
jbe
fcomps
mov
sbb
mov
mov
mov
in
imul
or
test
xchg
dec
int3
jg
add
test
push
aaa
or
enter
mov
out
dec
inc
sub
nop
int3
and
or
call
mov
loop
popa
xor
pop
decb
xchg
test
mov
adc
xchg
sti
mov
repnz
mov
push
and
mov
adc
negb
xor
xor
out
dec
and
inc
cmp
pop
in
xor
inc
lea
or
cmpb
js
xchg
dec
push
leave
call
add
in
imul
jmp
cmpsl
movsb
fcompl
aaa
mov
sti
add
imul
sbb
xor
out
sbb
dec
sbb
stc
sbb
inc
imul
cli
cmpsl
jg
mov
stos
mov
clc
mov
add
and
pop
jmp
jl
add
xor
pop
icebp
adcb
cmpsb
jp
cwtl
jecxz
sub
das
xlat
movsb
adc
mov
dec
inc
jns
pop
scas
mov
mov
subb
push
pop
data16
out
pop
insl
lret
loop
jns
jbe
add
push
or
cs
dec
jmp
stc
sub
test
pusha
sbb
roll
xor
bound
faddl
push
shr
jns
adc
in
sub
scas
jo
out
in
xor
push
mov
cltd
lods
repz
cmp
xchg
bound
in
jae
out
add
xor
pop
cmp
outsb
mov
iret
xchg
pop
das
push
and
test
leave
push
insb
movsb
sbb
mov
cli
mov
dec
test
jno
es
clc
std
icebp
test
adc
das
xlat
jae
fistps
leave
push
fadds
scas
xor
mov
mov
repnz
insb
or
inc
incb
arpl
out
sbb
pop
lahf
jmp
test
pop
mov
cmpsb
ret
shl
lea
aam
das
inc
mov
insb
mov
nop
and
xchg
les
pavgb
scas
ret
add
adc
mov
lods
add
nop
push
mov
mov
mov
jne
ret
bnd
pushf
mov
fistpl
dec
mov
fistps
pop
xor
jbe
mov
in
add
ss
xchg
in
push
repz
mov
in
out
mov
xor
jge
andl
sbb
push
mov
sbb
add
hlt
ljmp
push
add
mov
fmuls
dec
jne
mov
jle
xor
in
aad
adc
sub
es
mov
sbb
mov
cmpl
ret
pop
or
push
mov
sub
mov
jp
lcall
fsub
sbb
mov
rorb
daa
jnp
out
cmpl
sbb
mov
push
out
push
leave
stc
fcompl
popa
das
adc
aad
add
ds
dec
dec
jne
mov
xchg
push
or
xchg
add
push
dec
sbb
movl
push
jns
test
repz
or
dec
mov
inc
push
mov
or
bound
push
ljmp
cs
pop
stc
outsl
mov
pop
mov
adc
ds
or
add
push
xor
lods
xchg
fsubr
or
outsl
jne
xchg
inc
push
dec
imul
sti
loopne
dec
xor
outsb
jmp
adc
cmp
xlat
stos
sbb
or
xchg
lret
and
rcrl
xchg
dec
jg
in
sub
cmpsl
test
jg
dec
aas
sbb
loop
lcall
push
lea
or
dec
insl
and
dec
data16
add
mov
sbb
lahf
pop
sub
xorl
in
loop
loop
cltd
sub
shlb
add
sub
xor
inc
mov
fiadds
xor
xor
jmp
add
out
push
cld
sub
and
notb
xchg
mov
sar
out
adc
mov
insl
jmp
jbe
pop
addr16
xor
mov
addb
inc
pusha
call
push
fidivl
sub
dec
ja
test
mov
movsb
dec
jb
inc
cmpsl
repz
and
or
xlat
dec
enter
stos
popa
stc
pop
adc
mov
cwtl
push
insb
imul
std
cmp
and
adc
aad
xchg
sub
lcall
inc
daa
mov
fcoml
pushw
push
sub
xor
imul
fnstsw
and
pop
iret
xlat
jecxz
std
imul
stos
sub
xor
loopne
sbb
das
popl
imul
pop
out
lock
stc
sub
mov
mov
in
sub
adc
popa
lods
xorb
imul
cmc
sub
jno
adc
sarb
rol
push
notl
fistl
test
xor
lods
mov
sub
popa
test
cmp
enter
cmp
jno
mov
cld
nop
repz
pop
mov
std
mov
mov
push
push
inc
mov
fwait
cmc
rcrb
lret
repnz
int3
stos
inc
xor
push
out
adc
sbb
push
cmpsl
sub
and
or
fisubrs
mov
xor
insl
mov
lods
fimull
in
nop
adc
daa
mov
in
dec
pop
ret
cmpb
cltd
std
jns
jle
int3
in
jge
enter
popa
aam
test
or
xor
add
jecxz
xchg
mov
in
int
mov
xor
out
ja
daa
mov
mov
cmp
sahf
fidivrs
adc
add
mov
or
push
repnz
or
inc
daa
xor
xor
mov
xchg
scas
push
std
mov
shrb
adc
and
shrl
pop
mov
repnz
push
xchg
insl
push
xor
mov
sti
dec
fwait
unpcklps
push
adc
ret
push
push
lahf
out
mov
push
insl
jg
xor
divb
xor
and
loopne
test
fwait
shrb
stc
dec
icebp
jmp
push
pop
mov
and
int3
mov
or
mov
pop
push
mov
popa
call
lahf
sbb
sti
adc
sub
fstp
call
sub
dec
stc
sub
in
cmp
pushf
fdivr
cs
xor
push
ret
into
dec
pop
pop
dec
and
xor
or
test
addr16
fcmovbe
sub
insl
lods
jbe
jns
sti
popa
test
add
pop
repnz
push
sbb
gs
xchg
scas
test
call
insl
jecxz
clc
push
jle
outsl
pop
shr
lea
xor
cmp
dec
cli
mov
dec
inc
mov
mov
movsl
pop
pop
test
loope
mov
je
lea
fsubr
and
xor
loop
mov
jno
lods
sbb
dec
fucomi
sbb
sub
sbb
and
or
or
push
popf
push
cli
and
cmp
jl
scas
aad
sbb
je
lock
mov
push
int3
pop
cli
je
sbb
add
xor
add
mov
push
cwtl
sahf
icebp
sahf
lods
jo
in
sbb
scas
cs
inc
imul
fwait
adc
addr16
sbb
xor
leave
ror
insb
call
fs
or
cs
mov
fadd
and
mov
jmp
adcb
sarb
or
icebp
xchg
rcrl
and
xor
movsl
lds
into
add
cmc
pop
sub
or
add
adc
out
sbb
loopne
xchg
in
mov
loop
movsl
and
xchg
scas
lds
aad
mov
lods
shr
xlat
fistl
push
jae
push
cmp
sbb
flds
and
mov
cmp
addb
int3
jecxz
or
sbb
les
mov
mov
shlb
cld
mov
scas
add
scas
push
push
push
xchg
and
add
pop
pop
inc
movsl
dec
jge
bswap
lods
arpl
rorl
or
fstps
mov
mov
lret
jbe
jle
push
movsb
in
jae
or
pop
mov
cmp
or
shrl
sub
add
sarl
sub
dec
mov
lds
in
pusha
sbb
fdivl
gs
aad
cmp
int
lahf
pop
shrb
and
ja
inc
out
xchg
mov
push
pop
int
jns
cltd
loopne
or
jne
rdmsr
ss
pop
jmp
movsl
sbb
leave
xchg
in
mov
sbb
call
fwait
push
popf
fnstcw
xor
dec
xchg
and
push
cltd
mov
adc
push
ss
push
pop
xchg
fiadds
xchg
jbe
xchg
sti
in
je
xor
jge
fiaddl
repnz
add
aas
jg
stc
fists
jns
xchg
cmp
fcmovu
sub
dec
fcoms
repnz
loop
jno
cmp
xchg
loop
test
mov
add
adc
mov
sub
xor
mov
not
int
iret
or
jae
mov
insb
xchg
ss
xor
mov
jo
mov
dec
mov
dec
fsubp
or
jge
call
adc
cmp
lret
out
xchg
push
cmpsb
aas
adc
sbb
in
push
push
jl
or
xchg
adc
aaa
adc
sub
das
iret
mov
sbb
lock
and
push
pop
xor
out
lret
js
xor
icebp
out
adc
adc
or
ret
js
lahf
test
dec
lret
lods
mov
push
and
push
jp
jmp
stos
cs
lret
xchg
and
orb
jg
ja
add
jmp
dec
jl
fnstsw
xchg
insb
bound
pop
pop
fwait
stc
and
mov
mov
sarb
aad
addb
inc
inc
mov
test
fdivl
jns
add
inc
fistl
int3
cmc
cmpsb
mov
dec
mov
xchg
hlt
adc
scas
adc
and
mov
jl
add
repnz
repz
mov
incb
mov
mov
jne
cmpl
sbb
adc
cli
lret
mov
shrl
mov
sbb
imulb
adc
fadd
fdivl
push
cmp
push
push
js
ss
cmpl
or
sarb
push
mov
sub
push
cmp
scas
mov
lahf
rcr
adc
icebp
lret
mov
sub
mov
pop
jg
push
adc
inc
movb
push
mov
loope
pusha
movsb
dec
dec
ret
jecxz
decb
xor
mov
test
pop
adc
push
lret
xchg
dec
aaa
mov
push
fcmovne
mov
add
push
push
lods
pop
sbb
repz
mov
adc
jl
call
add
cmpsl
lods
add
xchg
adcl
lret
inc
aad
sub
xchg
loope
movzwl
add
mov
stos
inc
repnz
mov
jo
and
cmpsb
aam
push
loope
mov
inc
test
lcall
icebp
cmp
sbb
aad
rcrb
pusha
adc
in
mov
adc
ja
or
cmp
jmp
rcr
sbb
mov
fiadds
dec
xor
xlat
add
cmp
jbe
xlat
push
or
pop
paddusb
sub
jmp
arpl
or
movl
mov
mov
jecxz
push
cmp
adc
lret
and
jl
dec
jge
push
jmp
or
and
sub
lret
mov
popa
adc
mov
jae
in
fwait
pop
call
je
js
sti
dec
adc
imul
xchg
sahf
sbb
loopne
addl
ja
mov
cmp
cmp
jne
mov
jl
jmp
lcall
sbb
int3
mov
xor
lods
es
daa
hlt
jle
jne
cmc
xorl
inc
push
cltd
ret
and
mov
mov
cmpsl
cmp
movsl
jb
cmpsl
adc
outsb
out
fwait
aaa
jnp
push
cmp
sub
imul
sub
shlb
xor
xchg
nop
lods
fdivrl
je
xchg
fdivr
mov
cmpsl
stos
aaa
mov
jno
inc
imul
jno
push
sbb
loope
ja
and
pop
dec
gs
jo
popf
icebp
insb
xor
jp
push
jecxz
mov
cwtl
iret
ss
jno
aam
add
inc
dec
sahf
cmp
sub
jb
pop
jo
mov
cmpl
mov
outsl
jno
push
fcoms
xor
adc
bound
imul
adc
cltd
test
repz
sar
popf
cmpsl
mov
out
or
ds
loopne
mov
aaa
sub
xchg
lret
mov
pushf
dec
push
arpl
out
pusha
gs
jbe
pushf
mov
mov
fmul
cmpsb
dec
mov
jp
jno
pop
sbb
imul
mov
xchg
repnz
mov
icebp
xchg
popf
sub
dec
or
lods
adc
xor
bnd
xchg
jge
inc
loopne
loopne
add
mov
hlt
mov
or
mov
and
mov
lock
fidivs
sub
fdiv
cs
sbbl
hlt
in
aam
xor
sti
inc
rorl
inc
mov
cmp
adc
daa
call
fnstcw
and
jae
jge
call
cli
scas
hlt
push
incb
out
pop
test
push
test
out
sti
cmpsb
sti
or
push
cmpsl
insl
ja
out
jnp
jmp
jle
pop
pop
xchg
sbb
mov
test
cmp
dec
aaa
ljmp
xchg
test
data16
mov
bound
push
rorb
xchg
insl
fwait
jecxz
xchg
clc
loop
and
mov
mov
enter
out
test
dec
jg
hlt
fstpt
add
es
push
sbbb
adc
daa
iret
push
mov
push
repz
or
cmp
mov
aas
jl
dec
out
ret
stos
inc
sahf
xor
xchg
mov
inc
mov
push
jnp
add
pop
movsb
xor
test
adc
loop
addl
dec
adc
into
jle
sub
loop
or
movsl
xchg
push
jnp
mov
sbb
xchg
int
xor
push
enter
xchg
inc
inc
in
clc
lret
arpl
sub
lock
imul
inc
arpl
jne
jnp
subb
or
das
inc
bound
jns
xchg
inc
repnz
dec
je
ss
sbb
and
insl
pop
jge
cmp
scas
in
xor
mov
mov
xlat
pop
nop
in
bnd
fcompl
and
xlat
lock
pop
rclb
mov
jmp
popf
in
mov
cmp
mov
or
lods
sbb
push
mov
xor
ss
fucomi
loopne
ret
dec
or
je
jno
notb
jno
or
clc
imul
mov
fmull
scas
cmp
loop
mov
movsb
mov
out
testb
in
fdivs
loop
xchg
enter
imul
cmp
out
sub
mov
inc
or
cwtl
aaa
or
in
in
imul
ljmp
test
jnp
or
sti
scas
mov
push
push
in
push
leave
jnp
popf
cmpsl
fnsave
add
jbe
push
mov
gs
mov
sbb
sti
mov
test
dec
add
cmpsl
aad
xchg
or
lods
or
dec
sub
roll
sub
mov
cld
jnp
fisttpl
mov
rorb
cltd
adc
ljmp
or
lock
inc
dec
call
loopne
jo
sub
jp
out
cmp
inc
fldcw
jbe
faddl
cwtl
movsb
pop
mov
lcall
popa
std
rorb
mov
pop
icebp
pusha
inc
pop
and
ret
sub
mov
ret
xchg
ficomps
mov
sahf
int3
pop
mov
stc
mov
aam
cltd
push
data16
cmp
adc
lcall
add
xchg
insb
test
push
iret
jge
adc
sbb
jge
imul
xor
movsb
xor
movsl
xchg
xchg
sub
pop
or
push
rcrl
lret
rcl
jb
psrld
jg
jecxz
fs
push
stos
mov
jbe
sub
arpl
sahf
lret
fsub
pushf
sahf
popa
rolb
fsubs
and
stos
jb
mov
inc
lret
adc
mov
mov
stos
shll
test
mov
mov
es
lahf
sub
loope
stos
sub
sub
daa
iret
aad
inc
dec
xchg
or
pop
add
aam
je
lret
sti
gs
and
hlt
fwait
imul
mov
pop
das
jge
jp
xchg
movsb
xor
sbb
xchg
mov
add
loope
and
mov
orl
test
push
imul
mov
andl
xlat
testl
sbb
addr16
cmp
push
daa
jle
pop
or
sub
out
push
mov
andl
movsb
inc
ret
iret
repnz
mov
nop
xor
jne
leave
lcall
fwait
inc
sub
mov
icebp
fcoms
inc
hlt
mov
xor
cmp
movsb
cmp
and
into
push
fbstp
mov
mov
mov
nop
push
cmpsb
adc
mov
addl
loop
popf
sti
sub
negb
jae
cld
pop
cmp
and
push
shll
and
stc
scas
fsubrl
xchg
push
pop
shrb
out
xorb
dec
aad
ss
xor
xlat
into
scas
inc
xchg
lret
addr16
push
insb
stos
and
inc
add
test
arpl
push
ret
inc
adc
js
lods
jne
in
pop
lods
cltd
inc
test
add
movsb
pusha
lcall
out
out
fisttps
fldenv
into
dec
int3
or
push
mov
sbb
cmp
in
dec
mov
cmp
jne
js
mov
xor
mov
daa
mov
frstor
dec
rolb
outsb
jge
add
repnz
dec
pop
sub
mov
stos
sbb
insl
sub
jno
sub
mov
mov
decb
sbb
pop
daa
addr16
jl
in
int3
aad
sbb
hlt
sub
jp
jl
pop
out
pop
pop
cmpsb
dec
lret
xchg
sub
pop
cmp
xchg
add
cmpsb
ljmp
fsubs
jno
inc
xchg
or
xchg
xor
test
mov
outsl
movsl
cwtl
mov
out
mov
movsl
adc
enter
or
fwait
neg
fs
adcb
sbb
or
scas
pop
rcrb
mov
das
scas
mov
inc
or
test
mov
out
in
inc
sbb
jo
xchg
adc
arpl
or
bound
loope
fisubs
mov
bswap
popa
aad
cltd
stos
lcall
and
inc
jp
in
daa
mov
adc
rorl
pop
push
push
cmpsb
pop
mov
loopne
rcrl
imul
adc
sbb
lret
rcrb
out
inc
dec
stos
aaa
xlat
dec
scas
outsb
inc
push
mov
sbb
xlat
adc
mov
cmp
pop
pop
test
add
loop
iret
aad
jno
das
and
les
mov
mov
mov
gs
push
clc
xchg
or
lret
adc
inc
push
loopne
push
rcrl
xchg
cld
or
add
cld
es
in
fucomip
movsl
sahf
sbb
loop
mov
out
inc
mov
sub
cli
cld
inc
lock
add
nop
or
inc
xor
es
inc
ja
cmp
out
and
mov
adc
lret
push
dec
jmp
cmp
sbb
sbb
pop
sbb
jbe
mov
cwtl
out
xor
pushf
jo
pusha
bound
or
lcall
clc
xchg
test
fldcw
sub
pop
cmp
xchg
in
xchg
jae
mov
push
bnd
inc
movsl
in
lretw
xchg
jns
mov
mov
jmp
jmp
lret
or
jns
mov
imul
outsb
dec
push
mov
loop
jge
adc
repz
push
inc
js
incl
mov
fisubs
dec
enter
mov
lock
sbb
dec
mov
movsb
pop
mov
pop
out
or
mov
test
jno
mov
shll
or
xchg
mov
pop
popf
testl
xchg
push
std
inc
adc
fisubs
iret
in
loop
aas
jge
in
mov
imul
mov
jne
into
cmp
aas
mov
mov
mov
lock
push
and
fists
add
dec
into
repz
repz
ljmp
test
nop
test
or
push
fdivr
push
mov
leave
jbe
loop
gs
cmpsl
loope
jno
cmp
inc
adcl
add
mov
mov
add
loopne
mov
clc
orl
xchg
mov
mov
outsl
mov
xlat
jnp
cmp
jmp
dec
push
add
movsb
stos
mov
aas
cli
jae
testl
mov
stc
inc
mov
mov
push
mov
xor
repz
pop
testl
adc
call
mov
xchg
mov
xor
push
cmp
adc
icebp
mov
out
and
arpl
das
lahf
push
mov
mov
jae
and
lahf
sub
scas
in
push
jmp
xchg
inc
sbb
jge
mov
outsl
leave
pop
cli
orl
imul
pop
sub
inc
xchg
pop
xchg
adc
cmp
loopne
xor
cmp
popa
fldt
outsl
pop
dec
into
push
sub
es
pushf
or
add
xchg
mov
and
and
stc
jl
sub
jb
repnz
sub
mov
lods
pop
lcall
lds
cmp
mov
stos
xor
xlat
mov
fadd
js
push
adc
cmp
and
xor
pop
xor
and
out
xor
mov
add
enter
mov
pop
add
push
sub
in
leave
inc
fs
hlt
sub
dec
jg
mov
movsb
sub
mov
stos
aaa
xchg
or
sbb
enter
in
dec
lea
stos
jp
adcl
test
add
enter
sub
adc
cmpsl
cmp
add
test
xorb
dec
aaa
add
enter
xor
data16
bound
sub
jbe
filds
int
repz
adc
inc
shl
mov
push
imul
inc
pop
xor
out
cmp
or
lods
mov
js
adc
push
repnz
aam
or
inc
lea
stos
xor
and
mov
sbb
into
jae
pop
inc
adc
pop
sub
pop
cltd
dec
inc
outsl
jmp
jns
jbe
iret
sub
mov
stos
in
inc
daa
dec
mov
fisttpll
fdivrl
and
lods
cs
in
xchg
jg
jp
pop
aaa
ret
mov
push
mov
shrl
add
and
jl
xchg
repz
cmc
pop
ljmp
imul
dec
test
movsl
popa
into
orb
inc
add
cmp
pop
xor
lahf
js
loope
push
sub
mov
cmc
adc
push
adc
sub
movsl
mov
fstpl
icebp
out
lock
cld
cmp
sbb
mov
inc
jge
mov
jne
mov
sub
stos
aaa
push
lods
negl
or
repz
scas
xor
bound
ficompl
xchg
cmp
mov
add
or
lea
sbb
jmp
lret
repz
jmp
stc
lds
xchg
jmp
inc
insl
cmp
shl
jns
insl
mov
mov
in
sar
mov
ljmp
outsl
lods
xchg
cmp
dec
ret
daa
imul
or
sub
mov
jbe
cmp
or
mov
sbb
repnz
inc
add
xor
insl
stc
fcmovu
or
mov
les
pop
add
cmp
pushl
dec
push
addr16
das
leave
dec
cmpsl
loope
inc
shrl
scas
ds
rclb
dec
sbb
data16
lock
adc
daa
xor
mov
popf
pusha
jne
cmp
mov
inc
cltd
add
xchg
xchg
stos
test
xchg
test
dec
mov
inc
xchg
xor
loop
pop
in
fcompl
int
out
xchg
ffree
push
dec
xchg
adc
addb
xor
daa
movsl
dec
mov
or
cmpsl
repz
or
xor
aaa
fneni(8087
or
push
imul
mov
dec
jae
cmp
rcr
cmp
xchg
es
mov
frstor
cmp
repnz
or
mov
pusha
jp
mov
or
in
scas
ret
shrl
mov
sarl
pop
roll
xor
or
xchg
shlb
xor
xchg
adc
rcrl
lea
sbb
cmp
push
gs
into
mov
mov
outsl
and
jp
insb
jns
adc
pop
inc
push
pop
xor
mov
lahf
cmp
jne
push
xor
loope
lods
dec
pop
sbb
cwtl
outsl
fstpl
sbb
lea
fildll
aad
stos
test
pop
xor
test
jl
repz
mov
add
je
pushf
das
nop
jp
pmulhuw
insb
push
rcll
jle
fldcw
sbb
push
ljmp
lds
or
sub
test
xchg
clc
aaa
mov
fcoms
xchg
sbb
ss
fdivrs
icebp
sub
gs
dec
push
ds
add
mov
mov
xor
or
fsubp
jae
daa
fnsave
jge
inc
je
daa
sbbl
fdivs
sub
xchg
jns
aaa
mov
stos
cmpsl
adc
imul
arpl
jnp
imul
push
rclb
sbbb
lahf
or
mov
scas
mov
xchg
sub
test
inc
adc
dec
fidivl
mov
jecxz
icebp
test
out
std
add
fs
mov
inc
and
xor
ss
aaa
mov
loope
adc
xorl
daa
pop
add
xchg
enter
or
sar
mov
mov
sub
test
mov
loope
mov
push
lock
test
imul
xchg
fstpl
mov
cld
xor
xchg
loop
fwait
notl
ss
out
loope
inc
xchg
push
addb
jae
push
cmp
and
push
ret
inc
jns
jge
loop
xchg
jg
push
ss
xchg
adc
dec
imul
std
movsl
and
push
mov
sbb
push
push
in
jno
fs
mov
out
push
cmp
ret
dec
je
pushf
outsl
shl
in
mov
insl
insl
mov
or
das
xchg
cmp
mov
adc
mov
in
push
xchg
inc
lock
in
mov
jae
bnd
xchg
inc
lahf
jge
and
addr16
cmp
es
frstor
push
jecxz
jno
lods
pop
push
dec
xor
sub
lret
stos
xchg
sahf
out
cltd
dec
sub
mov
movups
cmpsb
xorb
jb
push
stos
xchg
cmp
sbb
adc
aam
xor
or
mov
shrl
in
je
lods
rolb
pop
in
xor
mov
sub
mov
jg
jo
aam
push
jecxz
push
xor
fs
imul
dec
push
dec
cmpl
call
icebp
test
stos
test
adc
js
inc
adc
je
jmp
or
xchg
fxch
dec
mov
aas
inc
jle
popa
push
bound
push
mov
cmp
mov
iret
ljmp
dec
xlat
and
pop
lahf
mov
mov
lcall
jl
mov
gs
ret
sub
inc
rcrl
loop
push
addr16
sbb
dec
aad
shll
popa
dec
sbb
mov
pushf
or
mov
pop
orl
push
outsl
sti
adcb
cvtps2pi
sbb
enter
add
ja
mov
sub
pop
loope
xchg
mov
inc
hlt
pop
mov
jb
dec
scas
dec
dec
pop
test
push
fsub
mov
dec
cmc
pop
and
jae
mov
mov
jo
js,pn
in
mov
movsl
fs
lds
sub
movsb
xor
add
jle
xlat
cmp
mov
jns
fstl
mov
sub
fwait
mov
outsb
push
xor
sub
or
adc
movsl
filds
jp
fs
push
sahf
cmp
adc
lret
mov
lods
push
dec
sub
out
pop
fadd
inc
fidivs
push
adc
add
shrb
or
adc
aam
pop
and
sahf
rcrb
outsb
sti
stos
repz
inc
shll
xor
jbe
adc
imul
lahf
xchg
push
fwait
lock
fcompp
imul
jmp
shlb
cmp
push
xchg
xrelease
in
fdivl
jo
aas
es
arpl
fstps
push
dec
mov
xchg
push
cltd
and
in
popa
jmp
xchg
aam
cmc
in
pop
rolb
mov
add
xchg
sub
sbb
dec
mov
ja
dec
test
adc
lcall
sub
inc
dec
push
pop
push
ret
jns
loopne
in
jecxz
and
push
loop
xor
cmp
in
dec
les
xchg
xchg
adcl
bswap
repnz
push
stc
sub
xor
xchg
mov
adc
in
add
popa
push
or
inc
pop
sbb
or
mov
push
pop
call
cwtl
lods
mov
daa
adc
mov
cmpsb
movsb
aam
fadd
repz
push
dec
xchg
bound
lods
pushf
enter
or
inc
dec
test
loope
dec
fisttpll
ljmp
adc
inc
test
enter
xchg
pop
xor
xchg
lret
xchg
stc
fs
pop
jmp
call
es
insl
xlat
imul
push
add
sbb
sub
dec
mov
jno
icebp
or
aam
add
int3
movsb
mov
pop
ret
mov
shl
sub
or
mov
pop
insb
mov
and
cltd
jg
in
cmpl
pop
or
fisubrl
fistpl
mov
test
std
sarl
mov
addb
int3
vpsllq
into
or
xchg
add
into
cmpsl
pusha
mov
test
add
lahf
and
pop
repnz
mov
cmpl
popf
xor
dec
xchg
push
adc
and
xchg
cmp
jmp
mov
add
repz
inc
inc
mov
mov
sub
mov
sbb
jno
lds
pushf
and
sbb
cmp
push
setg
fidivl
mov
das
loope
sub
sub
xchg
hlt
mov
imull
sti
insb
xchg
or
hlt
loopne
std
fisttps
or
jmp
loope
mov
fdivrs
pop
inc
xchg
aas
test
sbb
mov
xchg
nop
call
lods
fsubl
cmpsb
and
pop
xchg
in
shl
inc
fisubs
shlb
add
ja
aas
or
xchg
push
mov
sub
aas
out
popf
xlat
leave
imul
add
test
xor
push
into
add
mov
cmp
dec
push
sbb
mov
cmp
in
ds
scas
test
cmp
sub
iret
mov
test
aas
int3
popf
es
int3
dec
inc
add
hlt
mov
and
jnp
xchg
dec
sbb
mov
aad
inc
je
add
lods
sbb
in
mov
fs
dec
and
push
mov
sarb
rorl
daa
andb
sar
or
mov
cmpsl
jmp
rcl
add
sbb
in
pop
pop
cmc
ds
pop
fstpt
or
lock
int3
jle
mov
daa
mov
xchg
out
sbb
clc
dec
aad
pop
xchg
mov
dec
or
xor
scas
icebp
fldt
lock
pop
push
notb
mov
xchg
dec
rcrb
mov
add
sbb
das
mov
pop
lods
stos
daa
mov
inc
push
pop
lahf
sbb
pop
or
push
dec
adc
out
cmp
xchg
popf
leave
cmp
fs
mov
or
xor
inc
rclb
mov
or
bound
sub
push
es
aam
jns
push
mov
fsubrs
daa
push
mov
les
lds
cld
in
cli
leave
rcll
popf
cmp
mov
std
cmp
test
daa
mov
jg
in
push
lds
std
sub
adc
push
xchg
lcall
pop
mov
push
mov
pop
aam
mov
push
jge
sub
mov
out
add
mov
adc
xor
cmp
fdivs
stos
sbb
push
sahf
es
pusha
push
and
mov
push
scas
lahf
pop
aaa
mov
sbb
jp
cmp
push
adc
mov
stc
cltd
mov
ss
cmpsb
mov
xchg
sbb
mov
xchg
xchg
out
jns
pop
jne
aam
dec
or
xchg
mov
jmp
mov
lods
adc
cs
fldl
outsb
movsb
dec
push
push
pop
mov
jmp
or
sbb
arpl
push
push
xchg
xchg
xor
jmp
clc
test
xor
cmp
sub
outsl
sub
jne
xchg
pop
sbb
adc
mov
imul
std
into
sub
and
mov
jnp
les
gs
push
test
stc
or
in
shl
enter
xchg
cmpsl
cmpsl
enter
call
xor
mov
mov
pop
sbb
ja
add
cmp
adc
and
iret
outsl
mov
push
xchg
idivl
out
leave
sbb
cmp
adc
lahf
fwait
sub
test
jne
ss
pop
div
mov
xchg
mov
mov
xor
aas
stos
ja
dec
or
inc
push
mov
andl
sbb
xor
mov
lahf
lcall
mov
mov
pop
loope
pop
hlt
push
sbb
mov
jnp
out
iret
lret
popf
cmp
in
pusha
lcall
jns
mov
out
add
mov
mov
push
dec
pop
inc
inc
out
or
inc
fcoms
sahf
jg
cmp
xchg
outsb
iret
bound
in
test
cmp
pop
mov
ljmp
pop
sub
dec
cmp
je
sub
subb
das
data16
scas
movsl
fwait
push
inc
cmp
mov
test
mov
adc
call
xchg
arpl
sbb
or
jmp
in
push
repnz
les
xchg
sbb
insb
sub
xchg
fnstcw
pop
mov
pop
subb
mov
mov
out
xchg
sbb
jge
inc
or
ljmp
xchg
mov
xorl
inc
mov
scas
insb
in
pop
push
cmpsb
pop
outsb
fstpl
dec
rcrl
mov
roll
je
rorl
dec
adc
movsb
dec
or
add
and
sub
sahf
outsl
mov
ja
xor
mov
xchg
push
mov
add
out
imul
fwait
jno
dec
andl
xor
xor
icebp
loopne
jb
push
mov
dec
fildll
or
jmp
test
data16
out
mov
mov
sub
xor
mov
bound
loope
or
repnz
xchg
insb
pop
movsl
filds
or
add
xchg
sub
and
fiadds
mov
into
xor
test
inc
stc
fwait
jg
fadds
pop
pop
mov
mov
ja
test
lcall
and
adc
les
push
lret
ss
mov
lahf
loopne
rcrb
jb
lea
and
aas
pop
xor
push
adc
dec
jo
fisttpl
inc
dec
aad
imulb
cmpb
and
cwtl
test
mov
rcll
rolb
or
push
arpl
fwait
bound
neg
mov
pop
jg
loopne
or
jg
inc
movsl
fisubs
out
inc
or
insl
xor
inc
test
popf
mov
lret
inc
cmp
xchg
and
xchg
adc
mov
xor
imul
in
int
dec
in
adc
rol
imul
dec
lret
jle
mov
repz
out
lods
mov
pop
cmpsl
xchg
outsb
pop
pop
jns
scas
cmpsb
test
jbe
pushf
pop
jae
and
ds
leave
lds
notl
sub
das
jae
push
adc
andl
cmp
scas
dec
cld
jle
stos
std
aaa
jbe
je
push
jb
fistpll
push
mov
add
jecxz
inc
push
or
mov
push
xor
mov
and
push
mov
andb
lods
jne
bound
jl
mov
mov
xor
test
jl
push
hlt
ja
xor
out
call
movsl
mov
imul
mov
out
mov
xchg
xchg
daa
shr
std
out
cmp
js
add
scas
gs
aad
add
sbb
vpsubd
pushf
loope
push
add
repz
adc
into
xor
aaa
jae
shll
mov
addb
test
push
cmp
jp
mov
mul
adc
add
movsl
lods
mov
cltd
mov
pop
cmp
lock
test
loope
xchg
adc
shlb
outsb
daa
mov
mov
or
daa
pop
jle
fsts
shl
loope
dec
pop
mov
pop
mov
mov
push
cld
stos
dec
lds
ret
inc
cld
xchg
test
loopne
xchg
add
int
test
negl
cli
sub
mov
push
jge
in
push
jl
int3
cltd
mov
insb
or
jecxz
stos
or
add
out
cld
loop
cmp
mov
icebp
add
push
addb
jae
push
add
mov
ficoml
push
sbb
imulb
lods
add
add
mov
push
jp
cmpsb
adc
jp
enter
xor
sbb
mov
add
inc
mov
sub
xchg
call
out
aaa
dec
add
movsl
inc
sbb
es
jp
or
xchg
adc
repnz
xor
out
or
aam
pusha
adc
xorl
push
outsl
inc
sub
or
js
lcall
stos
xor
scas
inc
cmp
stc
dec
pop
xchg
mov
int3
imul
jle
dec
mov
cmpsb
fists
mov
or
test
insl
ja
mov
pop
mov
pop
pop
fcomps
lods
xchg
test
jmp
mov
filds
testl
imul
inc
imul
jb
rorl
push
sub
stos
jbe
jg
push
nop
mov
adc
gs
test
lock
lahf
mov
jnp
cmp
ljmp
mov
mov
add
sub
xor
call
lock
scas
scas
dec
jo
sub
inc
sub
adc
jno
imul
xor
cmp
cmc
push
out
dec
mov
fisubrs
or
outsl
test
cmp
out
and
xchg
push
xchg
push
or
mov
cwtl
or
lea
pop
sub
pop
pop
nop
inc
pushf
adc
outsb
xorl
lcall
push
sub
pop
cmp
sub
imul
or
jb
mov
sbb
mov
iret
popa
into
rcl
dec
cmp
outsb
cltd
mov
dec
aam
imul
push
jmp
js
mov
fimull
pushf
ja
jo
pop
push
inc
int3
enter
and
mov
es
lcall
and
inc
test
dec
cmp
dec
dec
or
out
nop
push
in
jg
ja
mov
js
pop
and
jle
sbb
jae
iret
sbb
data16
cmc
movsl
inc
repnz
mov
gs
cld
push
mov
in
stos
out
mov
mov
and
shrl
jb
jb
mov
je
imul
js
test
xor
sbb
jns
hlt
push
push
xchg
mov
shr
mov
subb
or
mov
aad
out
andl
fimuls
test
shlb
add
fildll
cmp
adc
jg
mov
arpl
lcall
andl
loopne
in
sti
rolb
inc
pop
loop
jp
xchg
jne
cltd
aaa
rorl
jnp
jecxz
mov
sub
adc
shlb
nop
aam
jae
mov
add
pop
add
sbb
and
test
push
adc
scas
add
jb
xchg
bound
sbb
andl
sub
xor
fimull
fs
sarb
pminub
lods
outsb
pop
inc
les
pop
xchg
sub
out
ret
mov
jne
ja
inc
jnp
fsubs
lock
mov
fimuls
or
aas
sub
xor
fadds
jns
add
pop
push
add
mov
pop
or
add
mov
sbb
jl
fdivl
loope
pop
mov
adc
pop
push
sbb
jp
stc
imulb
cmp
xor
icebp
cmc
mov
in
paddsb
jge
xchg
aaa
shll
sahf
and
mov
je
cli
shll
int3
cvtdq2ps
je
popf
scas
xchg
daa
xchg
mov
cmp
mov
mov
nop
jns
data16
aad
cmp
jns
pop
jno
fisttps
cmp
aaa
sub
add
mov
inc
les
pusha
xor
mov
mov
mov
and
xchg
sbb
add
outsb
gs
dec
outsb
mov
test
movsb
add
mov
xor
in
jae
and
xchg
sbb
inc
xor
lds
inc
add
pop
iret
fwait
pop
sub
pop
sbb
mov
outsb
mov
fadds
pop
push
pop
lea
das
imul
into
sub
push
cmpsl
sbb
fs
jle
mov
xor
ret
in
xor
mov
test
aad
dec
push
pusha
add
mov
call
lea
xor
hlt
dec
mov
cmpb
jb
aas
mov
repz
pop
incl
aad
in
cwtl
pop
jo
or
jnp
cmc
cs
mov
sbb
cmp
pop
loopne
rorb
dec
cwtl
popf
xor
stos
and
ja
sbb
shlb
fidivl
test
out
cld
jb
mov
xor
out
xorb
push
idivb
pop
sub
and
fcoms
fs
add
inc
dec
inc
stos
or
dec
lret
ret
xchg
out
pop
fistpl
push
out
add
or
stos
call
cmc
mov
mov
cmp
rcl
push
sti
imull
inc
cmp
push
lds
add
mov
dec
lcall
mov
mov
xor
cmp
aaa
js
mov
push
lea
push
leave
hlt
jge
rol
dec
lods
push
rep
push
push
push
add
and
les
mov
push
mov
push
push
scas
mov
int
sub
imul
mov
outsl
iret
cmc
icebp
fiadds
inc
lahf
sub
mull
jbe
jg
ret
sub
xchg
jae
addr16
xor
dec
or
or
and
mov
and
cmp
mov
pop
stos
mov
and
orb
sbb
icebp
add
sbb
mov
xor
xchg
std
rcrl
inc
jbe
mov
incl
js
mov
or
mov
aam
or
lcall
fmulp
sub
push
push
inc
jae
mov
pop
cmpsb
fwait
mov
out
enter
jno
sti
mov
clc
xor
fiaddl
in
sbb
dec
sbb
mov
pop
or
inc
outsb
and
insl
shrb
mov
stos
push
xchg
out
int
andb
push
dec
adc
add
std
in
bound
inc
lods
aas
and
xchg
or
cmp
or
adc
idivb
fildl
stos
mov
int
testl
cmp
push
push
int
cld
sbb
lcall
or
in
push
pop
jle
and
nop
sbb
dec
adcb
mov
scas
test
dec
push
sbb
jp
or
pushf
push
js
cmp
add
enter
and
mov
sbb
pushf
push
cs
adc
sbb
xchg
ljmp
cmp
fsubrl
loopne
sbb
inc
adc
sub
cmp
add
and
sub
cmpsb
fldenv
adc
test
xchg
cmp
inc
mov
mov
jne
mov
sbb
add
scas
in
inc
lret
or
push
mov
cmp
rcll
xor
in
cli
scas
mov
stc
out
mov
mov
fnstenv
jbe
adc
adc
mov
add
in
xchg
inc
add
xor
mov
lods
mov
sub
out
pusha
mov
jo
mov
and
jns
mov
mov
inc
mov
xor
aaa
hlt
jo
mov
sbb
aad
inc
pop
shlb
ds
pop
rolb
daa
shll
sub
mov
sti
cs
test
mov
outsl
loopne
shrl
aaa
lahf
outsb
lcall
push
sahf
fwait
mov
push
push
xor
mov
test
je
mov
addr16
mov
inc
sbb
mov
cli
or
lret
repz
mov
inc
inc
add
pushf
mov
rcll
push
pop
add
xor
sub
sub
cmc
cmc
add
mov
push
push
stc
shll
addr16
popa
int
dec
loopne
sub
push
mov
rcl
mov
sub
mov
aaa
call
xor
inc
add
adc
adcl
ljmp
fs
sub
dec
pop
ret
mov
movsl
subb
test
adc
loopne
jecxz
push
das
push
inc
dec
outsb
int
mov
push
dec
sbb
jle
xchg
clc
loopne
jns
fisttpll
and
mov
or
jecxz
jnp
cmp
inc
sub
imul
dec
mov
adc
cmpsl
sub
pushl
je
sub
int
mov
jae
arpl
add
add
stos
int
into
aad
stos
lock
xchg
xchg
popf
add
das
and
into
dec
or
ret
int3
push
dec
mov
out
adc
sti
ret
pop
add
pop
mov
lret
mov
fisubl
xchg
andb
and
mov
sub
fs
shrb
fs
fcmovu
jo
xchg
mov
xor
jmp
dec
imul
fimuls
cmp
ret
mov
add
mov
jmp
push
xchg
dec
xchg
data16
fcomp
cmp
mov
pop
pop
jno
xor
loope
subb
lea
rorl
xchg
pop
push
mov
xchg
icebp
sub
xchg
pop
int3
loop
std
lock
dec
fstp
bound
ljmp
adc
movsb
pop
lods
jl
xchg
jmp
dec
les
aad
in
add
jae
fldt
outsb
mov
pushl
out
cltd
dec
pop
adc
out
mov
imul
call
lret
sbb
js
mov
jle
jmp
push
mov
mov
xchg
push
dec
sahf
test
or
arpl
push
cltd
mov
inc
icebp
int3
insb
movsl
std
insb
inc
adc
sbb
push
adc
fs
stos
aaa
and
out
adc
ret
xor
stos
pop
mov
repnz
mov
push
adc
mov
xor
sub
sarl
pop
add
mov
mov
lret
iret
bound
inc
ljmp
xchg
popa
ja
add
mov
cmpsl
repz
sbb
pop
add
loope
sub
sub
out
xor
xchg
add
insb
push
adc
push
lods
sub
pop
mov
cli
push
mov
fsubs
into
push
mov
pop
mov
outsb
sbb
loopne
movsb
xchg
addr16
rorl
imul
mov
jmp
sbb
mov
in
addl
xchg
daa
mull
in
adcl
fstpt
repz
jmp
in
outsl
nop
adc
punpckhdq
les
lahf
mov
pop
rcll
sahf
dec
mov
mov
leave
leave
inc
inc
mov
mov
pop
jmp
xchg
idivb
adc
int
xlat
lcall
movsl
mov
fbld
fs
mov
xchg
inc
cwtl
jne
add
add
js
adc
and
int3
xor
mov
jle
mov
in
in
std
pop
mov
adc
xor
xor
and
out
add
and
mov
sbb
in
imul
jnp
insb
dec
loop
inc
movsl
cmpsb
xchg
pop
lret
pusha
adc
xlat
into
fidivrs
or
push
scas
mov
out
loop
out
dec
adc
data16
adc
fdivrs
inc
and
and
test
fcmovne
repz
orl
and
fstpt
xor
mov
sub
cmp
sub
cwtl
in
sarb
adc
sbb
cmp
xorl
sub
pusha
push
cmp
pop
push
pushf
jp
nop
sub
in
in
aas
out
movsl
jp
lods
pop
push
loopne
movsl
push
push
jnp
sbb
or
pop
cli
ret
sbbl
std
call
inc
ret
jno
inc
mov
mov
clc
jns
and
neg
mov
in
or
test
repnz
cmp
jbe
ret
shll
test
ret
iret
mov
lcall
addb
adc
fs
in
inc
mov
clc
cmovbe
add
jae
dec
je
stc
cmp
jbe
addr16
mov
pop
pop
mov
sub
inc
scas
js
fimuls
xor
aad
data16
lods
xchg
jle
mov
jl
aaa
dec
push
dec
clc
or
pop
push
and
mov
jb
dec
jecxz
iret
sub
jmp
pop
dec
or
cltd
jp
mov
sub
fs
mov
out
and
sbb
mov
pop
jecxz
rcrl
aam
sub
in
jo
shlb
pop
push
mov
push
mov
cli
call
ror
cmc
and
loope
sub
sub
test
mov
push
adc
and
stos
xor
lods
sahf
add
js
subl
sbb
xor
sub
pop
insb
movsb
xorl
jns
adc
push
movsl
loopne
testb
lcall
out
fs
dec
add
or
sbb
lahf
leavew
pop
nop
or
sub
or
inc
mov
mov
push
sahf
cmp
in
jl
shr
mov
mov
xchg
xchg
test
lock
xor
mov
das
pop
mov
mov
insb
xchg
add
faddl
rcll
inc
loope
and
aam
cmp
sub
or
mov
cmp
je
push
adc
lcall
imul
push
jnp
dec
pop
iret
cltd
jbe
pop
push
add
jne
ss
lahf
enterw
imul
pushf
fcoms
inc
cmc
sub
ficoms
cltd
in
jecxz
jno
mov
or
push
or
int
aas
test
dec
cmp
pop
das
push
insb
xchg
pushf
mov
mov
xchg
stos
xchg
dec
lcall
aaa
push
dec
add
jbe
inc
movsl
lret
lds
int
popf
cmp
mov
xchg
push
xor
or
leave
xor
or
in
clc
add
ss
sbbl
arpl
pop
inc
aad
popl
jnp
repnz
decb
cmp
enter
repnz
pusha
xor
sbb
push
popf
insl
and
push
dec
outsb
icebp
decl
in
scas
sub
lahf
or
jns
insb
jae
adc
add
inc
push
mov
jl
cmp
movsb
jne
sbb
rcll
add
mov
fimull
lcall
push
pop
aaa
xchg
mov
imul
inc
xchg
aad
ret
mov
sbb
sub
mov
push
std
dec
push
adcb
sbb
adc
cld
ja
punpckhbw
out
add
pop
cmc
pop
push
dec
pop
dec
loopne
loope
in
bound
imul
outsl
jns
div
stos
mov
mov
inc
call
sarb
push
pop
pop
cmpb
fmull
inc
sarb
cmp
fbld
ss
adc
out
push
popa
sub
push
movsb
dec
jl
sbb
jp
sbb
lods
xor
fs
xor
loop
push
imul
scas
lods
pop
imul
dec
lahf
cmpsl
push
or
std
jns
mov
jne
in
lahf
int
mov
sub
jecxz
lea
jns
xlat
aad
js
js
jbe
dec
lods
adcl
mov
repnz
add
nop
xor
xlat
aas
pop
jp
shl
jbe
leave
fildl
test
fstpt
lahf
bnd
pop
outsb
ficompl
fmul
cmp
pop
xor
aad
mov
push
jbe
and
adc
out
subb
das
sbb
fcoms
jno
clc
rorl
and
lods
mov
add
pop
push
sub
and
mov
xchg
add
sub
inc
aam
mov
movswl
dec
out
aaa
xor
cmpb
xchg
jp
pop
stc
aam
ds
add
and
popf
jl
add
xor
adc
jmp
rorl
test
cmc
outsl
mov
bound
mov
mov
cmp
or
push
mov
lcall
mov
mov
add
or
loope
dec
test
mov
jecxz
daa
cmp
icebp
adc
sti
dec
mov
mov
add
in
popf
cmp
dec
in
mov
cli
fstpl
lcall
inc
in
sub
adc
xor
pop
add
clc
cmc
roll
mov
scas
mov
pop
rcl
imul
leave
xor
outsb
dec
push
push
arpl
insl
adc
sahf
nop
cs
mov
dec
in
mov
xchg
inc
inc
testb
repnz
xchg
pop
iret
mov
inc
adcl
xchg
sbb
xchg
scas
xor
sti
in
arpl
dec
data16
out
outsl
mov
dec
mov
dec
add
out
iret
loop
leave
cmpsl
jmp
adc
push
rcrl
ja
lret
xor
and
mov
fadds
cld
adc
pop
ret
adc
sub
adc
test
sti
ljmp
push
pop
add
xlat
call
ljmp
mov
sub
arpl
push
lret
pop
enter
or
push
std
jo
dec
jb
pop
repnz
arpl
push
cmp
arpl
icebp
xchg
sub
test
jge
cmpl
push
add
shr
fstp
or
test
adc
popf
mov
sbb
mov
xor
pop
mov
jle
xor
xor
mov
fs
cmp
mov
xchg
scas
loop
div
pop
or
mov
addb
cmp
mov
mov
pop
movsb
les
movsb
dec
addr16
int3
test
dec
test
scas
sbb
jmp
and
fadd
push
rolb
lret
mov
or
inc
jmp
pop
adc
mov
pop
js
cmpsl
inc
add
repz
jecxz
fldl
lret
and
jo
test
inc
jae
test
xlat
inc
or
xchg
je
xchg
sbb
test
ficomps
xchg
add
xchg
fimull
stos
js
scas
repz
or
mov
push
fildll
addr16
std
mov
fnclex
add
jns
les
inc
hlt
cmp
sbb
xchg
mov
into
addr16
fsubp
mov
inc
and
push
out
mov
jmp
fiaddl
pop
pop
dec
loope
mov
mov
pop
mov
push
sbb
mov
jo
pusha
sbb
ss
mov
jg
pop
push
mov
mov
in
push
dec
daa
push
jg
popa
xchg
push
cmpsl
inc
pop
adc
mov
sti
mov
in
and
xlat
cmpsb
push
and
dec
mov
mov
sub
push
insb
add
icebp
inc
adc
test
sub
xchg
jbe
roll
repz
sbb
mov
sub
jo
scas
insl
cli
outsb
mov
out
mov
push
push
das
dec
inc
dec
push
xor
xchg
jb
adc
mov
insl
ja
leave
outsl
fadd
add
fbstp
jg
sahf
inc
leave
faddl
aaa
sbb
mov
mov
pop
in
insl
iret
loopne
aam
xchg
pop
test
mov
loopne
mov
sub
adc
dec
loopne
jns
hlt
pop
jecxz,pt
pop
inc
cmp
jno
jmp
add
ja
ljmp
pop
ret
ffree
jle
cmp
mov
ss
mov
and
lea
in
loope
add
outsb
pop
nop
sahf
mov
call
cmp
sbb
loop
addl
popf
xchg
lods
out
xor
dec
fnstsw
sub
push
stos
inc
fnstcw
xchg
mov
jecxz
xchg
faddl
xlat
outsb
push
pop
xor
pop
xor
dec
mov
repnz
out
je
adc
ret
inc
pop
inc
adc
es
nop
cmp
rcll
mov
enter
inc
dec
int
jae
push
fcmovb
adc
fisttpll
ret
pushf
lods
xor
sbbb
push
sbbb
jo
imul
mov
cld
ss
or
inc
xor
mov
stos
popa
outsb
sbb
jne
or
das
sbb
movsl
mov
or
leave
xchg
jbe
cmp
fmuls
jne
add
fistps
pushf
in
jnp
outsb
aaa
or
dec
push
mov
adc
jne
subb
mov
lcall
out
orb
sbbl
shr
fcomip
pop
jbe
adc
jmp
mov
out
and
and
ds
mov
test
mov
sbb
cmpl
or
aam
addr16
mov
ret
and
cld
pop
roll
dec
scas
dec
mov
mov
scas
lea
xor
inc
fcompl
out
mov
mov
lods
sbb
mov
loopne
jne
cmovp
lods
dec
sbb
mov
lcall
pop
push
mov
repz
add
pop
add
insb
cmp
push
sub
cmpl
ds
and
xchg
stos
cli
jne
imul
inc
dec
sahf
jg
pop
test
mov
daa
push
scas
call
xor
sti
or
jp
ret
sbb
sub
inc
mov
jae
ret
cwtl
mov
and
mov
pop
or
push
push
jmp
xor
mov
aad
xchg
mov
push
push
sub
outsl
push
mul
pop
sub
test
cwtl
aad
jne
cs
out
jbe
lock
dec
jbe
test
imul
xchg
ret
pop
add
aaa
jp
mov
mov
and
out
push
xor
out
gs
add
pushf
or
test
loope
xor
hlt
mov
daa
add
push
es
popa
dec
loopne
jns
mov
push
or
inc
pop
xchg
insl
xchg
out
inc
outsl
inc
stos
jmp
xchg
mov
mov
repnz
fiadds
cmpsl
mov
jb
je
or
pop
aaa
jnp
lea
sahf
in
and
nop
faddp
and
push
out
or
pop
adc
repz
fst
or
lret
jmp
dec
mov
jg
roll
jp
enter
add
lea
hlt
jne
adc
push
pop
xchg
push
lods
aas
shll
adc
enter
popa
stos
push
lods
cmp
gs
sbb
pushf
divl
iret
int3
or
cmp
lea
push
mov
xchg
xchg
orl
jl
xchg
dec
out
adc
into
mov
lea
mov
push
mov
js
repnz
xor
xchg
aas
lea
mov
xchg
adc
js
inc
ljmp
mov
lret
mov
lret
negl
lods
adc
cli
ljmp
pop
pop
int
xor
testb
cwtl
andb
inc
add
clc
and
mov
mov
jge
in
lret
pop
in
in
andb
cmp
in
jge
jb
sbb
shll
mov
testl
mov
clc
test
jle
mov
mov
pop
xor
movb
int
add
inc
push
test
orb
bound
mov
jb
inc
scas
das
out
and
jmp
in
mov
inc
push
loopne
decl
mov
mov
outsl
xchg
or
and
add
mov
sbb
inc
sbb
push
stc
inc
fmulp
mov
call
into
or
xor
inc
adc
lret
gs
cwtl
xor
push
push
push
into
ds
xchg
adc
jp
fldl
and
dec
ret
int
push
aas
cmpsb
xchg
rep
leave
mov
fs
xlat
fs
lahf
aam
and
pop
test
jnp
jbe
stos
lcall
mov
xchg
das
test
sbb
scas
fisubrs
daa
dec
adc
js
jb
arpl
out
cmp
jae
add
imul
add
inc
sbb
lods
xlat
ja
mov
pop
xchg
inc
push
xchg
jae
gs
loopne
out
mov
pushf
je
out
popa
mov
in
add
xchg
arpl
jnp
cmc
pop
fdivs
pop
inc
jge
mov
mov
xchg
jne
popf
or
mov
lcall
xchg
enter
xor
dec
lret
inc
and
cmp
rorl
loop
cmp
dec
mov
ds
cmpsl
bound
pop
push
mov
movsl
test
pop
inc
popa
push
cmp
xchg
sub
push
int
adc
test
mov
lock
adc
dec
sub
addr16
iret
aas
into
xchg
jle
les
pop
addr16
jle
cs
nop
jnp
es
jb
mov
jp
mov
fbstp
jns
lahf
inc
lods
mov
push
adc
add
xchg
sub
inc
sub
ja
out
mov
in
stc
call
push
push
push
loopne
inc
std
pop
aaa
xor
jnp
fwait
lret
sbb
ja
outsb
or
sub
hlt
or
mov
jle
aaa
mov
dec
jb
or
push
sahf
mov
sub
mov
sbbl
je
adc
stc
je
or
xchg
test
stc
fs
xchg
sbb
jle
mov
mov
cmp
testl
lcall
xor
adc
xor
repnz
mov
fdivrl
xchg
jns
and
push
cli
pop
repz
es
lahf
cmc
lds
sahf
ret
xchg
mov
pop
leave
dec
and
notb
sbb
lds
cmp
repnz
jae
inc
mov
xchg
movsb
sbb
or
sbb
hlt
xchg
les
ds
jle
rolb
sbb
imul
mov
adc
pop
iret
and
sbb
outsl
lret
mov
xor
push
mov
xor
ds
dec
insb
int3
pop
ja
mov
dec
bound
pushf
rol
bound
pop
sub
jns
mov
jne
lods
popf
test
sub
loop
sbb
cwtl
call
loope
jmp
push
fucompp
or
js
dec
mov
les
mov
jb
xlat
sbb
pop
cmp
sbb
les
popa
jmp
lds
sbb
mov
sbb
das
xchg
pusha
sbb
shrl
cld
adc
fsubp
adc
mov
inc
sbb
adc
mov
mov
cltd
repnz
cwtl
loope
std
inc
xor
insl
fistps
add
loopne
lret
xor
lret
out
or
lods
cltd
pop
mov
ss
inc
mov
cmp
js
ja
aad
sbb
dec
jecxz
subb
push
lcall
jo
mov
lcall
cmp
push
fsubrl
cmpsb
xchg
rcrl
sub
clc
stos
cmc
lret
loopne
xchg
ljmp
add
mov
inc
dec
shrb
dec
cltd
mov
outsb
jp
loopne
and
mov
hlt
and
push
je
mov
mov
sti
insb
push
daa
push
cvtpi2ps
fdivrs
fcoml
cmp
cmp
mov
jge
pop
loop
scas
and
jb
ss
push
add
insl
push
out
adc
xor
sub
and
xorb
clc
fstps
out
inc
mov
int
mov
rolb
mov
rorl
jmp
sbb
push
fmul
mov
mov
dec
add
test
mov
bound
outsb
inc
ds
subl
repz
js
cltd
jge
outsl
mov
dec
pop
mov
js
loop
test
std
add
std
xor
jg
mov
repz
mov
mov
sbb
add
fdivrl
or
xor
rcrl
dec
ja
movsb
dec
cmpsb
fsubrl
jl
pop
sbb
popf
pop
daa
add
pop
pop
sub
pop
pushf
subb
jecxz
ja
insb
dec
cltd
xchg
stos
inc
ret
sub
mov
es
jp
pop
stos
lret
loopne
jbe
scas
ljmp
lods
pop
inc
into
push
inc
insb
lock
out
jo
inc
cmp
lock
cmp
out
and
aaa
add
sbb
lock
popf
aaa
xchg
adc
lea
inc
ret
adc
xor
mov
das
aaa
jne
inc
mov
and
popf
xlat
mov
addr16
cmpsb
aad
andb
pop
cmp
gs
aad
scas
inc
dec
sti
in
fnstcw
and
cmc
add
sbb
mov
jg
push
stc
inc
jno
mov
call
add
in
mov
in
scas
sbb
cmpsl
stc
movsl
sbb
popf
push
lret
lcall
andb
mov
rcl
bound
mov
lock
rolb
sbb
lods
outsl
fidivrs
je
xor
daa
pop
pop
aaa
es
mov
adc
sbb
mov
and
insb
xchg
es
sahf
mov
imull
in
inc
xor
add
sarb
xchg
gs
fnstcw
pop
or
lahf
or
imul
xchg
shll
iret
mov
aas
into
out
loope
dec
inc
jle
scas
iret
bound
out
mov
les
inc
in
pop
cltd
fidivs
fnstcw
pop
call
sbb
mov
fmulp
and
imul
enter
xchg
in
or
mov
mov
movsb
movsb
push
mov
sub
xlat
cwtl
ds
lods
addr16
negl
jl
fstpl
jg
mov
xchg
cmp
fstpt
leave
dec
push
fldt
int
adcl
adc
clc
cmova
stos
fstpt
inc
sti
xchg
sub
push
addr16
or
inc
hlt
je
xchg
daa
adc
inc
lods
adc
and
jb
mov
jns
mov
jbe
sti
pusha
cld
gs
cmp
pop
push
ljmp
jae
adc
mov
or
and
stos
pusha
xchg
cmp
pop
gs
xchg
mov
repnz
rol
cwtl
dec
in
push
push
fisubl
rcrb
xchg
or
int3
jns
xor
mov
loopne
inc
ja
inc
scas
insl
xor
daa
in
jbe
push
add
adc
rol
cmpsl
js
inc
cli
pop
aad
add
sbb
mov
cmp
arpl
dec
fs
notb
sbb
xchg
inc
push
pop
mov
or
xchg
push
dec
subb
xorb
int
aas
push
arpl
rorb
jmp
push
dec
lcall
xlat
js
scas
sbb
ret
test
jmp
jne
pop
dec
adc
mov
mov
movl
add
test
xor
cltd
xor
xchg
inc
rolb
ret
pop
rcll
xchg
cmpsb
cltd
loop
faddl
test
sbb
cmpsl
mov
outsb
mov
idivl
popa
ror
mov
fisubrs
mov
jb
mov
inc
mov
jge
les
std
fisubl
xchg
lock
mov
notb
sbb
pop
bound
pushf
jge
testb
es
mov
loop
fistpll
xchg
push
subl
bnd
xchg
jbe
into
xchg
lret
hlt
ds
data16
dec
aam
or
and
insb
fs
ficoms
dec
gs
lret
add
add
push
mov
mov
pushf
pop
sbb
or
inc
mov
cmpb
ficoms
sub
push
mov
repnz
adc
mov
or
pop
mov
aas
push
pop
xchg
mov
xchg
dec
call
outsl
ja
out
and
gs
push
push
ret
xor
xlat
stos
adc
or
into
xchg
movsl
test
aam
addr16
add
mov
xor
xchg
mov
pop
stos
dec
xor
add
pop
dec
pop
dec
test
push
xor
mov
cmpl
lods
inc
push
ljmp
mov
lcall
cli
xor
lcall
int3
cli
loop
movsl
lods
mov
lret
pop
inc
inc
rcrb
or
into
xlat
xor
or
xchg
sbb
fiadds
fisubs
cmpl
in
push
clc
pushf
cmpsl
mov
sbb
in
mov
es
sarb
add
mov
pop
test
dec
sub
nop
or
mov
jl
or
jp
int
cmp
mov
jnp
dec
push
rol
leave
xor
mov
or
and
stos
test
lods
xchg
ljmp
mov
push
sahf
fistpll
lds
out
xchg
rcrb
or
ds
lret
mov
jae
sahf
jmp
out
cmp
inc
sub
int3
dec
je
mov
cmp
xlat
mov
sbb
sahf
adc
adc
fidivs
fmul
adc
sti
adc
dec
imul
push
push
sub
test
push
pop
add
jle
xchg
stos
jecxz
lcall
mov
mov
sahf
dec
ss
xor
dec
popa
scas
adc
imul
rcll
aas
push
es
sahf
je
mov
push
mov
aam
rcll
cmpsb
addb
iret
push
ficompl
rcl
test
int3
mov
insl
loopne
mov
scas
insb
imul
and
repnz
fistl
loope
imulb
lds
xor
inc
push
xor
jne
adc
movsl
mov
push
loop
test
rorl
fwait
rorl
int3
add
mov
repnz
imul
daa
les
sbb
mov
gs
aad
fwait
adcl
scas
lods
pop
sub
icebp
insb
inc
leave
mov
pop
stos
xchg
fisubl
movsl
xchg
test
inc
xchg
clc
bound
sub
pop
sarl
mov
mov
ret
mov
shlb
int
jge
add
jb
pop
xchg
es
cmovb
jo
mov
pop
int
mov
jmp
je
loop
xchg
mov
and
pop
mov
jp
and
jmp
aam
pop
int3
inc
shrl
jns
cmp
movsl
or
cwtl
test
mov
or
push
mov
xchg
mov
lods
push
das
mov
push
add
jmp
pop
jmp
pop
xchg
loope
pop
inc
pop
mov
adc
add
imul
roll
movsb
push
xchg
out
js
and
mov
lahf
xchg
inc
in
xchg
rcrb
fcmovu
mov
aam
std
cmp
and
xchg
cmc
push
or
loop
push
or
push
mov
mov
inc
jno
cmpb
pop
xchg
lret
mov
dec
lods
lods
sub
jmp
into
movb
movsl
dec
lods
xchg
mov
insl
or
sub
xor
mov
pop
fwait
lret
mov
or
shlb
mov
jle
movsl
out
in
mov
jbe
ret
cmp
jl
cmpsl
jo
push
inc
sub
pushf
leave
movsb
jmp
enter
add
mov
push
aas
mov
in
out
mov
pop
mov
aaa
dec
pusha
dec
shrb
insl
mov
push
jb
xor
call
mov
lds
jno
and
jne
insb
lods
jg
inc
adc
push
add
adc
mov
outsb
loopne
cmp
scas
push
mov
adc
imul
int
sub
mov
dec
mov
jecxz
test
scas
adc
pushf
sub
dec
jl
fsubr
xchg
xchg
mov
sbb
inc
fbld
lods
inc
into
push
cmp
fs
cmp
mov
jb
pop
adc
pop
push
jmp
cmp
adc
mov
mov
movsb
mov
mov
or
mov
sahf
mov
or
adc
cmp
mov
mov
cmpsl
rcll
cs
inc
icebp
into
ret
xor
mov
dec
fimuls
shlb
fstps
loope
repnz
jne
xlat
push
out
push
mov
mov
dec
int3
sbb
mov
inc
dec
or
pop
aas
stos
leave
cmpsl
xlat
in
in
mov
or
dec
add
lock
fisttpl
out
into
xchg
push
mov
xchg
mov
push
mov
sarb
sub
inc
insl
pop
dec
add
jns
call
mov
lret
mov
cli
adc
add
jno
or
mov
cmp
pop
push
add
frstor
divl
add
imulb
pop
ret
push
imul
iret
xchg
and
call
mov
push
scas
inc
mov
adc
sbb
sbb
andb
cs
and
outsb
push
lret
adc
inc
inc
or
nop
mov
mov
mov
fisubrs
loopne
aaa
scas
xchg
xor
xchg
push
loope
jae
insb
dec
stos
pop
jns
xor
jne
repz
lea
aas
lock
mov
fwait
daa
les
insl
fisubs
xchg
mov
jecxz
clc
inc
push
push
gs
cltd
es
sbb
pop
cwtl
adc
pop
xchg
mov
and
sbb
sub
jnp
xchg
fbstp
idivl
fidivs
xor
and
dec
sub
inc
pop
lea
pop
or
cmp
pop
fs
inc
and
insb
es
cmpsb
jne
fstpt
pop
mov
pop
mov
mov
pusha
jle
sbbl
jae
inc
dec
or
jno
pop
pusha
fisubrl
mov
pop
dec
scas
cld
idivl
xlat
pop
mov
jae
or
xorb
mov
arpl
push
jb
xor
add
std
or
xchg
and
inc
xchg
inc
sahf
and
ja
dec
jg
in
push
inc
aad
stos
push
sub
push
sub
add
cmp
mov
jno
popa
out
nop
lahf
xchg
pop
ljmp
push
mov
pop
push
cmpsl
or
dec
jo
outsl
sbb
cbtw
shll
xor
addb
cmp
scas
stc
push
mov
test
inc
and
sub
push
push
stos
jl
imul
jecxz
ja
cli
pop
adc
arpl
fisttps
dec
sub
pop
inc
xor
repz
push
ret
mov
dec
adc
xorl
dec
insb
daa
lea
push
mov
ret
cmp
cs
lret
adc
dec
insb
jmp
push
adc
push
lods
mov
add
nop
adc
outsb
xchg
jmp
inc
fsubrs
out
add
es
jne
sbb
popf
lret
lock
xchg
movsb
movsb
int
adc
scas
mov
lods
push
addb
lret
data16
mov
pusha
repnz
xor
popf
sti
jl
repnz
fnstsw
jae
xlat
and
les
mov
in
push
ss
inc
adc
mov
out
push
ret
dec
cs
jns
std
inc
pushf
add
inc
dec
dec
fnstcw
mov
aaa
cmp
dec
test
popf
into
cmp
test
sbb
and
dec
clc
pop
xchg
ret
xor
add
adc
mov
scas
mov
xchg
push
pop
lret
xor
rol
into
lret
xchg
imul
popf
jge
inc
mov
fistpll
out
mov
lret
push
mov
scas
inc
mov
lds
push
or
cmp
aam
cmp
test
shll
mov
and
inc
insb
mov
cld
incl
jmp
je
jno
and
mov
pop
fcmovbe
hlt
cmc
popf
xchg
cmpsl
xchg
push
jmp
aaa
shrb
or
rcrl
inc
and
in
fcom
lret
sub
movsl
cmpsb
aaa
xor
nop
shl
xchg
gs
jp
mov
pop
pushf
es
push
adc
out
arpl
lods
add
loop
xlat
test
and
xchg
lahf
xchg
neg
push
aam
and
inc
fildl
jmp
mov
and
notb
sub
lods
xor
inc
sbb
imul
cmp
push
mov
mov
push
and
les
xor
mov
sub
testb
cmp
inc
dec
gs
jmp
mov
aad
sbbb
ja
in
and
cs
and
in
dec
xor
in
insl
ret
movsl
dec
cmp
sbb
ljmp
jo
fwait
adc
clc
mov
gs
fsub
pop
in
outsb
xor
aad
fadds
add
test
mov
jmp
push
outsb
mov
pop
jno
mov
mov
adc
sub
mov
inc
add
scas
dec
sub
test
repz
mov
inc
cmpsl
loope
pop
in
cltd
xor
pop
rcll
sbb
adc
mov
addr16
movsl
push
xchg
sub
mov
sbb
and
mov
cmpsl
in
jo
push
inc
xlat
arpl
shrb
jae
iret
push
ds
rorb
mov
xchg
movsb
insl
ds
sub
lcall
or
push
cmpsb
mov
fdiv
dec
sub
sub
pop
jecxz
add
cli
add
push
stc
jle
sbb
repnz
jl
and
mov
lock
jp
mov
call
cmpsl
mov
cmovge
ss
add
sub
mov
xchg
xchg
cmp
pop
cltd
cmc
mov
sub
outsl
cmpb
dec
arpl
lret
pop
stc
fs
cmp
pop
sbb
scas
aas
mov
aaa
out
fisttps
movsb
divb
out
jecxz
sub
inc
push
popf
test
in
xor
pop
mov
pop
insb
sbb
insb
test
and
push
add
imul
sbb
notb
pushf
xor
mov
lcall
mov
add
adc
xchg
cltd
cmp
fildll
test
iret
fimuls
ret
add
decb
add
gs
ret
jge
notb
sbb
jl
jl
dec
cmovne
xor
lahf
mov
cld
pop
and
mov
mov
and
shlb
in
movsl
and
push
mov
push
jo
adc
mov
pop
pop
icebp
xchg
cltd
mov
jp
inc
lods
clc
enter
mov
popa
popa
into
sbb
mov
sbb
clc
fsts
mov
and
pop
xchg
stos
inc
movsb
add
and
or
jle
nop
pop
dec
test
imulb
sub
and
or
icebp
mov
pop
ss
nop
cli
jmp
mov
call
mov
mov
cmp
mov
dec
xor
inc
push
movsl
int
pop
push
or
adc
repnz
btc
pop
cwtl
outsl
ret
mov
pushf
ljmp
test
movl
mov
repz
push
sbb
pop
iret
test
icebp
adc
xchg
dec
sbb
imul
and
inc
addr16
xor
cmpsl
mov
xchg
shlb
cmc
mov
pop
jmp
mov
inc
mov
sub
or
clc
pop
int
mov
adc
jge
insl
push
loopne
mov
fisttps
mov
pop
and
cmp
ljmp
mov
jbe
jmp
sbb
js
scas
sub
rorl
popa
out
repz
adc
mov
sti
in
push
ret
add
sub
pop
shrb
movsl
gs
or
sub
icebp
lahf
outsb
pop
jg
and
xor
into
jl
mov
inc
xchg
inc
lea
pop
sar
jg
push
fisubs
adc
or
cmp
lahf
ret
fnstcw
pop
xchg
xor
push
xor
mov
sbb
gs
repnz
in
xchg
je
xchg
mov
pop
imul
jmp
jnp
mov
mov
sub
jp
mov
mov
in
fistps
or
shlb
andb
lret
xor
pop
or
ret
pushf
gs
nop
shl
popa
fsubp
mov
scas
push
cmp
sub
add
xchg
aaa
pushf
sar
lds
push
int
fildll
cmp
jmp
repnz
inc
push
xor
mov
fstpt
popf
push
lods
or
mov
arpl
es
add
xchg
scas
pop
pop
xor
fiadds
dec
pop
mov
mov
call
aaa
xor
idivl
repnz
aas
loop
pop
insl
movsb
nop
xor
mov
push
adc
mov
add
out
ja
lret
test
inc
cli
push
bound
mov
and
sub
jns
mov
int3
fidivl
cmpb
mov
rcrb
popa
stos
int3
enter
jne
popa
test
add
mov
js
and
inc
jae
loope
and
push
mov
rcr
aad
jae
shll
jb
jl
xchg
scas
js
ret
xor
dec
outsb
bswap
mov
js
sti
dec
pop
mov
mov
sub
leave
mov
cli
test
jb
sub
fidivs
int3
push
fldenv
lods
push
mov
andb
jno
xor
push
les
sbbl
mov
shl
push
incb
call
fistps
aad
pushf
cmpl
add
inc
xchg
cmp
arpl
test
ret
dec
inc
sbb
xchg
inc
mov
imul
imul
imul
daa
mov
and
pushf
mov
out
rol
nop
add
mov
addb
sarl
push
pop
lods
movl
decb
and
aaa
ss
pop
sarb
inc
xor
jnp
fs
adc
pop
mov
push
push
mov
adc
dec
notb
inc
imul
adc
xchg
cmp
scas
add
jl
mov
mov
xchg
pop
push
popa
push
ja
les
fs
xchg
and
xchg
pop
repnz
mov
push
jnp
push
jp
addr16
imul
cmp
cld
fldcw
dec
fcmovb
inc
arpl
loopne
sbb
es
add
jne
sub
icebp
xchg
test
cmc
cmc
inc
test
push
mov
fcoml
ja
xlat
mov
sub
inc
ljmp
mov
mov
add
mov
sbb
imul
fdivl
cmp
or
addl
shl
ret
test
xchg
cmp
and
movl
addl
add
jmp
lock
or
rcrb
pusha
cmp
fdiv
addr16
fisttps
mov
xor
out
lods
dec
call
loop
jae
rorb
je
fbstp
out
sbb
inc
jmp
xorb
jp
jns
jno
cmp
xchg
pushf
adc
ljmp
push
in
dec
lret
inc
or
bnd
push
push
push
aaa
sub
xchg
sti
cmp
pop
adc
push
cli
imul
jl
push
addb
lret
mul
ror
aad
or
fldcw
loop
dec
popl
jb
fiadds
out
mov
out
mov
les
faddl
cmp
adc
adc
out
mov
jmp
fsub
pop
movsl
pop
or
inc
push
popf
mov
sbbl
clc
clc
sub
das
push
test
jp
or
mov
pop
pop
ds
fsubrp
push
push
aaa
ja
sbb
movswl
sub
pop
inc
cmpsb
out
in
dec
mov
fcomp
jbe
shrb
sbb
jge
dec
ljmp
push
ds
pop
lods
sbb
dec
dec
aam
aam
and
stc
xchg
inc
sti
push
jo
stos
mov
arpl
mov
mov
out
push
jg
int3
rclb
xor
jo
pop
in
push
icebp
jo
push
ljmp
xchg
or
dec
pop
jno
push
push
fwait
xor
cwtl
jb
ja
pop
and
or
jge
pop
mov
mov
aam
lret
push
cmpsl
fdivrl
rcrb
cltd
cmpb
loopne
addr16
cmp
push
pop
or
dec
repnz
sti
into
insl
dec
daa
cmp
repnz
sub
xchg
add
cmpsb
jge
in
aad
xor
pushf
jmp
hlt
mov
lahf
movsl
mov
movb
xchg
rcl
adc
es
cmp
mov
dec
cs
mov
xlat
mov
lret
mov
in
mov
scas
sbbb
adc
enter
and
or
mov
inc
sub
repz
repz
rol
negb
mov
xchg
inc
pop
mov
mov
fldpi
pop
and
ljmp
xor
aad
inc
pop
cmc
out
jmp
push
jno
sub
enter
sub
mov
mov
es
inc
sub
mov
dec
inc
ret
mov
lods
jmp
ret
push
fsubrl
rolb
sahf
out
roll
test
nop
rcrb
xor
jae
inc
mov
outsb
test
mov
les
adc
push
inc
add
mov
fistps
and
cmc
mov
xchg
adcb
adc
lock
or
rcrb
jne
mov
xor
jno
cwtl
xlat
mov
je
in
cltd
inc
push
mov
imul
fs
jno
pop
inc
mov
mov
repnz
ss
stos
insb
jge
into
jbe
and
and
adc
mov
stos
sub
clc
cmp
test
frstpm(287
lret
repz
imul
cld
and
fxch
scas
fcmovnbe
mov
add
push
adc
lcall
add
mov
int
fisubl
rcr
or
or
orl
int
daa
aad
out
inc
xchg
push
mov
imul
or
movb
mov
into
leave
imul
ss
scas
sub
dec
mov
sbb
int
jmp
cwtl
adc
or
inc
mov
test
push
mov
ljmp
nop
mov
insb
test
inc
mov
jne
scas
pop
sbb
and
inc
push
mov
jne
and
fsubl
in
push
cmp
inc
out
mov
negb
jnp
frndint
pop
dec
stos
dec
xlat
adc
lahf
icebp
in
jl
or
aaa
shrb
dec
stc
addb
push
je
push
push
pop
jp
mov
test
adc
mov
pop
xor
adc
push
inc
idivl
clc
pop
pop
adc
pop
xchg
inc
xor
cmc
add
inc
push
pop
xor
mov
sub
sbb
sbb
ss
gs
repnz
movsl
lcall
imul
mov
loope
mov
cmp
fstp
sub
fidivs
pusha
in
mov
jg
mov
pop
das
xor
mov
mov
aaa
xor
loope
or
lock
mov
fisubs
pop
insl
insb
push
cli
dec
xor
mov
test
int3
sbb
push
jb
xchg
xchg
mov
and
insl
mov
mov
sbb
pop
xchg
mov
aam
pop
inc
cmp
stos
stos
cmc
fmull
pop
jp
push
aam
test
push
enter
lahf
pop
lret
push
add
inc
adc
and
fimull
mov
adc
and
dec
cli
int
shr
movaps
nop
pop
in
add
cmp
add
movsb
rorb
lea
push
mov
mov
idivb
add
jle
int3
mov
or
test
cmp
mov
mov
pop
add
add
xchg
mov
test
outsl
pop
in
inc
xchg
add
cmpsl
add
fistpll
stc
push
or
inc
sub
fisttpl
fnsave
pop
dec
and
movsb
adc
and
outsb
incb
mov
gs
fcomps
enter
fisttps
mov
clc
fwait
lcall
sub
pop
movsl
cmc
int
mov
icebp
cltd
jg
fcomp
pop
xchg
add
cmc
sti
jnp
movsl
loop
xchg
sbbl
mov
mov
mov
adc
or
or
ss
xor
adc
test
dec
pop
daa
outsl
xor
add
mov
scas
fldl
negl
inc
xchg
in
add
jne
and
shr
jge
xchg
insb
ds
jns
sti
jmp
lods
sub
fidivrl
stos
leave
mov
push
hlt
das
mov
sub
fs
dec
out
push
and
sbb
repnz
cmpb
imul
mov
fiadds
loope,pn
das
push
add
and
notb
adc
add
outsl
scas
add
stos
fsts
mov
inc
loope
pop
aad
xor
cmpsl
into
clc
sbb
test
jo
inc
pushf
test
cli
out
imul
and
pop
dec
or
dec
dec
imul
xor
pop
js
js
push
or
mov
and
push
insl
push
mov
inc
cmp
xor
sbb
sub
jno
aad
mov
shrb
out
bound
in
mov
xchg
sbb
outsb
sbb
int
mov
xor
test
bound
or
test
push
loopne
mov
push
xlat
fdivrs
jne
insl
hlt
xchg
xor
push
inc
stos
pop
push
mov
and
adc
mov
pop
lahf
fwait
inc
outsb
out
or
sahf
and
adc
add
and
data16
xor
push
call
xchg
sub
nop
lret
pop
adc
filds
push
lret
out
je
push
inc
lea
cwtl
adc
in
and
iret
sub
mov
inc
mov
jle
daa
mov
pop
aaa
mov
je
pop
and
jg
and
mov
dec
push
bound
jecxz
pop
push
push
pusha
std
popa
or
sub
inc
jl
jnp
sahf
dec
add
stos
and
cmp
outsl
fiadds
aaa
inc
mov
cmpsb
jnp
cltd
jbe
aam
push
adc
xchg
pop
int
xor
push
lds
dec
popf
jb
inc
lea
mov
scas
repz
or
and
filds
iret
sbb
push
stos
aas
add
xor
push
sbbb
mov
into
fistps
inc
adc
inc
mov
cmp
sar
mov
mov
es
ret
mul
shrb
and
adc
hlt
cld
and
ds
cwtl
leave
in
sbb
or
inc
add
std
xor
sub
adc
sub
cwtl
mov
int
lahf
mov
cmpl
adc
movsb
cs
jo
lcall
pusha
rep
add
xor
jecxz
sub
xchg
pop
pop
test
xchg
in
ret
adc
movb
out
in
int3
aas
dec
iret
push
pop
or
lods
add
insb
daa
and
cmp
lahf
sbb
stos
lock
push
jle
pop
lock
adc
pop
xor
cmp
sbb
cld
mov
or
jmp
in
sti
addb
xchg
imul
xchg
cmp
ss
cmp
sub
fcomps
inc
push
ss
negb
jo
push
sbb
inc
inc
mov
sbb
ret
mov
pop
cmp
sbb
rclb
sub
out
adc
inc
mov
leave
push
sub
mov
sub
test
pop
les
and
push
es
push
outsl
sub
leave
pop
out
jp
mov
mov
mov
or
xchg
loopne
loop
rcrb
pop
addr16
cmp
imul
or
data16
loope
stos
push
push
push
jbe
mov
test
or
mov
cld
dec
jge
jnp
je
in
cmc
cmp
aam
inc
decb
aaa
xchg
xor
add
mov
pop
xchg
mov
jns
jnp
clc
das
repz
in
sub
mov
mov
call
fwait
jo
aad
stc
in
jle
jp
jl
dec
rorl
inc
aad
sub
test
or
mov
test
lods
adc
mov
in
xchg
out
pop
cmp
adc
mov
fcmovb
mov
hlt
ficoms
sub
inc
enter
mov
scas
popf
test
xor
cmc
lds
mov
jp
scas
mov
mov
jne
xor
fsub
mov
jnp
inc
fcomps
and
loop
xchg
sub
rolb
jle
mov
mov
xchg
cwtl
test
jno
mov
xor
jb
ljmp
lods
cmp
popa
std
or
cld
shrl
nop
sbb
push
sbb
ds
dec
mov
or
adc
int3
push
pop
sbb
mulb
and
call
enter
xchg
and
mov
push
rcll
xchg
imulb
ds
fwait
jno
inc
add
lcall
aas
outsb
cmc
cltd
mov
in
xbegin
dec
dec
pop
and
pop
lret
pop
test
or
push
insb
jnp
lahf
pop
std
dec
push
jl
push
icebp
jge
or
fstpl
push
popa
mov
repnz
pushf
or
pusha
xor
inc
adc
xor
mov
repz
mov
outsb
push
lds
fs
fs
mov
in
push
fistl
mov
adc
dec
dec
ja
lods
pop
lock
ficomps
mov
cmpsb
incb
in
xchg
loop
aas
adc
push
subl
sahf
imul
xorb
in
pusha
inc
sbb
jg
fmull
pushf
sub
mull
mov
cmp
xchg
sbb
fistps
xchg
sbb
dec
mov
ljmp
bound
mov
add
cmp
mov
adc
xchg
mov
xchg
fwait
mov
fnstenv
or
or
pop
push
dec
rorl
stos
or
inc
pop
nop
sbb
mov
add
rcll
cmp
enter
pop
xorb
pop
cmp
or
dec
and
cmp
popa
fildll
jp
mov
lock
inc
xor
mov
mov
rorl
mov
or
dec
cli
xchg
dec
decl
inc
gs
mov
ja
ret
scas
adc
in
jge
sbb
cmp
push
mov
jae
mov
dec
stc
cmp
lock
dec
testb
fwait
and
in
scas
or
and
cmp
dec
iret
adc
call
mov
cmp
xchg
lods
dec
pop
adc
cmp
jbe
sbb
jbe
leave
scas
inc
dec
cmpsb
push
jg
jp
pop
jmp
dec
test
or
dec
mov
pop
inc
mov
jb
xor
xchg
cltd
pop
adc
add
inc
mov
movsb
mov
pop
xor
popa
es
inc
lea
daa
cmp
push
jmp
and
sti
mov
mov
movsl
sbb
mov
mov
test
aam
jbe
imul
jmp
ret
scas
movsb
lahf
mov
pop
ret
mul
clc
add
fucomip
or
out
movsl
stos
shrb
adc
sub
or
enter
mov
cmp
scas
push
xchg
jmp
test
jg
mov
xor
movsb
pop
xchg
push
xchg
sub
push
imul
aam
jl
cmpsb
dec
es
addl
mov
bound
push
dec
in
les
jb
or
lds
aas
sub
sub
inc
or
rcrl
aam
lret
bound
push
xchg
loop
lcall
push
fwait
cvtpi2ps
push
inc
bound
fistpll
lahf
fs
push
not
iret
mov
mov
sbb
xchg
ds
adc
pop
jne
add
out
dec
adc
pop
adcl
jp
jno
pusha
ret
bound
mov
movsl
scas
sub
cmp
lcall
ret
sub
inc
add
jnp
data16
dec
sub
popa
mov
add
mov
adc
pop
fcmovne
pop
inc
xchg
add
loope
push
add
push
sub
test
jb
cmp
xchg
aas
add
sbb
out
fld
inc
adcl
popa
push
inc
hlt
sub
pop
mov
cmp
inc
into
xor
sbb
loop
pop
add
dec
or
inc
pusha
lahf
mov
sub
jo
mov
pushf
cmp
idivb
rorb
xor
jno
jb
push
cli
adc
adc
xlat
adc
cld
in
pop
mov
std
inc
xchg
ja
outsl
loope
sub
cmpsl
repz
cmp
scas
cmp
push
add
hlt
jmp
repz
xlat
adc
lret
pop
cmc
xchg
rcr
or
das
loop
pop
sbb
ja
cmp
jne
sbb
int
mov
aaa
jb
into
xchg
add
in
inc
pop
xchg
xchg
xchg
and
out
push
push
push
mov
jne
cmp
scas
inc
sub
insb
jnp
or
jb
push
add
inc
pop
cmp
dec
mov
hlt
lret
ret
bound
mov
jne
pop
aaa
mov
and
dec
dec
rcr
rorb
in
mov
int
in
and
push
das
pop
out
or
cwtl
mov
test
dec
xor
mov
stc
sahf
jns
test
pop
push
mov
pop
pop
pop
inc
inc
mov
call
mov
push
ds
bound
cmpsb
repz
loope
add
int3
ds
jmp
mov
add
sbb
stos
cmpsb
imul
push
jno
mov
ja
pop
xor
or
cmc
or
push
out
sub
or
xchg
mov
ret
les
jl
pushf
rorb
fstpl
dec
adc
jo
pop
mov
mov
push
sbb
mov
adc
dec
fsub
lea
and
inc
and
jp
fisubs
ret
jle
mov
rcrb
ss
jno
jae
addr16
popf
xchg
sub
and
mov
adc
cmpsb
sbbb
mov
ds
icebp
in
syscall
pop
push
imul
cmp
mov
jmp
mov
pop
cmp
push
add
or
mov
or
mov
cs
sahf
pop
stos
mov
jne
xor
pop
mov
int
mov
loope
adc
cmpsl
insl
push
leave
idivb
clc
aad
mov
jmp
push
pop
dec
orl
push
jp
cmpsb
out
adc
xchg
inc
inc
test
test
mov
add
mov
dec
leave
or
sub
rcrb
popa
leave
mov
push
stos
loopne
dec
pop
cwtl
mov
pop
scas
jmp
push
int
mov
into
hlt
sub
lods
ret
cs
shr
andl
lcall
dec
dec
sub
dec
mov
insb
add
inc
test
sub
and
sub
mov
jns
jecxz
aas
inc
and
xchg
inc
inc
pushf
jae
int
xchg
xchg
pop
in
cld
cli
push
push
inc
adc
lret
and
and
hlt
xchg
leave
icebp
dec
test
sub
popa
xchg
xchg
jp
fiadds
add
push
adc
out
dec
dec
push
loopne
sub
xor
xchg
test
add
sbb
cmp
inc
adc
push
ret
mov
sub
push
scas
movb
imul
and
mov
movsb
fsubrl
cmc
push
aad
or
inc
popa
enter
jb
cmp
dec
sub
mov
inc
je
pop
sti
cmp
push
mov
nop
xchg
xlat
push
inc
dec
xchg
outsb
fsub
mov
jecxz
out
js
or
jo
ds
and
add
jbe
icebp
cmp
in
mov
dec
movsb
fstpl
sbb
scas
or
jb
movsl
sahf
jo
cli
and
ljmp
outsb
jb
adc
fidivrs
call
out
cmpsl
mov
jb
repnz
jecxz
sbb
imulb
rolb
cs
pop
mov
bnd
pop
pop
push
stos
mov
icebp
add
in
fwait
movsl
dec
adc
inc
xchg
xlat
sbb
push
int
xchg
dec
fwait
in
and
mov
ret
fisubrl
shll
cmpsb
or
mov
lock
cmpsl
ds
mov
jle
or
cmp
push
pop
movsb
pusha
enter
and
mov
icebp
aaa
cmp
pop
lret
xchg
clc
xor
sbb
popa
jg
pop
add
push
push
fisubs
subl
fcompl
cld
sarb
ds
test
loopne
shrl
aam
jecxz
ds
add
movsb
lret
pusha
cmp
mov
movsl
sub
lret
gs
push
pop
xchg
in
xchg
in
daa
les
ljmp
jg
xchg
add
pop
lods
fiaddl
ud1
adc
lods
jne
repnz
sub
xor
cs
mov
add
add
pusha
push
push
movsb
jo
inc
or
scas
and
scas
sti
js
bound
lods
adc
mov
cmp
add
inc
inc
dec
bound
jmp
push
or
mov
adcb
test
push
jmp
insb
mull
xchg
bound
lret
imul
scas
sub
sub
in
jmp
and
jle
fsubrs
int3
cld
test
cltd
mov
pop
sbb
cmp
arpl
xchg
scas
out
mov
dec
ja
addr16
test
mov
adc
lea
fucomp
inc
popf
notl
mov
mov
or
ret
push
inc
enter
mov
cmc
or
les
mov
sti
mov
std
mov
mov
xchg
and
or
imul
pop
mov
icebp
mov
fsubrl
insb
jecxz
nop
imul
aam
mov
subb
sbb
xchg
add
cmc
sbb
fs
fldcw
fisubs
mov
add
mov
in
pop
fwait
mov
enter
shrb
sti
ret
cltd
dec
ret
scas
fsubrl
aaa
ss
dec
shl
xchg
cmp
sub
dec
addr16
xor
rcrl
or
mov
jno
mov
stos
push
repnz
dec
add
pop
jp
pushf
and
fisttpl
push
push
sbb
jecxz
cmpsb
mov
sbb
dec
xchg
cmp
pop
xor
movsb
subl
mov
nop
cs
push
fidivrs
and
push
dec
jl
xor
sbb
js
pop
icebp
mov
test
xchg
adc
cli
out
test
popf
jno
pop
xchg
jne
iret
mov
xchg
dec
push
out
jl
lcall
sbb
dec
iret
ja
test
xor
lods
inc
test
xlat
shll
sahf
and
clc
inc
lds
cld
imul
lds
out
cmc
or
test
cwtl
push
js
inc
or
inc
dec
repz
jle
leave
push
push
pop
xchg
leave
mulb
push
xchg
mov
or
iret
push
mov
or
adc
testb
rcl
add
dec
xchg
lahf
pop
mov
or
push
shrl
int3
pop
xor
mov
sbb
mov
sti
cwtl
cmpsl
adc
mov
in
xchg
pop
lahf
sti
mov
fistpl
mov
bound
jge
sub
mov
inc
and
cwtl
xchg
jne
dec
cmp
xor
adc
rorl
cmp
cwtl
push
sbb
movsl
loopne
lods
inc
jle
jge
aad
test
xchg
pop
mov
je
test
stos
popf
out
inc
addr16
insb
push
pop
or
ss
loope
mov
loopne
and
xchg
mov
stc
lds
ljmp
in
mov
clc
incl
test
mov
xor
adc
sub
xchg
mov
lret
xor
add
mov
pop
cld
ja
std
inc
lret
cmp
pop
shlb
insb
cld
cmp
mov
jmp
scas
ljmp
aad
mov
outsl
dec
pusha
loop
cmc
out
mov
and
aaa
ficompl
rcll
lret
adc
adc
es
cmp
aad
jle
daa
xchg
jne
cmc
inc
xchg
repnz
outsb
clc
jmp
pop
popa
aaa
adc
or
test
jl
dec
fimull
jne
xchg
xchg
ds
mov
test
or
push
xor
dec
fdivrs
xchg
adcb
and
cmp
test
jno
iret
stos
clc
xchg
fdivrs
dec
cmp
xor
lea
and
mov
std
add
stos
jp
pop
dec
cmp
add
pushf
push
adc
clc
int
pop
push
mov
int3
popf
mov
rclb
push
xor
lfs
mov
mov
jns
cmp
lods
std
xchg
jmp
lret
cwtl
pushf
sub
mov
lcall
mov
sub
ret
pop
dec
je
mov
movsb
gs
push
addr16
in
xchg
sbbl
bts
ret
and
test
mov
push
aas
xchg
into
ret
inc
fstpt
test
sti
and
adc
fidivl
add
and
adc
or
inc
ljmp
stos
aaa
sbb
dec
cwtl
cmpsb
imul
stos
xor
cmp
dec
addr16
cmp
ss
test
decb
push
imul
loop
cld
dec
hlt
or
add
ja
imul
aaa
or
pop
sbb
cmp
rolb
stos
cmpsb
aas
clc
push
iret
aas
pop
ficoml
cmp
sbb
xor
mov
imul
cmp
jle
je
and
push
loopne
jle
pop
or
inc
push
fsubr
lcall
hlt
call
fistpll
adc
jl
js
xchg
in
repnz
call
inc
fidivs
clc
push
jbe
ljmp
mov
stc
pop
inc
stos
mov
sti
jle
mov
push
mov
inc
insl
bound
aaa
js
lret
test
scas
pop
dec
push
push
push
xchg
jp
outsb
fmuls
loop
outsb
fsubrs
call
lods
xchg
out
fidivrl
push
imul
push
pop
jge
fistl
out
in
push
loop
daa
adc
and
push
fcompl
movsb
cmc
mov
pop
xor
adc
or
pop
cltd
pop
jns
ss
lods
xlat
dec
daa
mov
mov
stc
lahf
pusha
jo
pop
dec
add
mov
push
add
add
hlt
ja
push
test
and
and
mov
mov
push
subl
hlt
mov
scas
clc
dec
mov
clc
aad
xchg
xchg
shll
pop
cmp
mov
aaa
test
cld
pop
cmp
pop
das
sub
mov
mov
xor
mov
cmp
jnp
and
xchg
dec
pop
sbb
ds
mov
pusha
dec
add
das
cmp
arpl
xchg
mov
scas
cli
jmp
jb
adc
mov
xor
xor
sub
jnp
lahf
mov
xor
fildll
or
imul
loope
cmpsb
inc
adcl
cmc
cmp
xor
pusha
ss
sbb
loope
popf
test
pmaddwd
push
in
out
nop
push
xchg
xchg
pop
out
in
and
inc
lds
pop
in
mov
push
add
in
cmp
sub
sti
and
or
out
or
out
into
inc
xlat
or
mov
test
int3
insl
pop
scas
stc
ret
pop
jge
and
pop
fidivl
inc
outsl
dec
and
dec
xchg
and
addr16
jb
sbb
lahf
mov
xor
hlt
stc
inc
push
xchg
mov
pop
inc
aaa
enter
ror
insb
xor
imul
movsb
cmpsl
and
sbb
adc
sub
repnz
mov
loopne
call
push
sbb
push
mov
add
es
into
adc
mov
dec
add
mov
sub
push
xchg
hlt
fbstp
or
adc
jge
push
mov
and
sub
inc
cwtl
test
dec
sub
pop
lahf
push
iret
xor
xor
push
sar
xor
andb
mov
mov
jae
dec
notb
inc
loopne
add
lahf
dec
jb
pop
pop
mov
jecxz
push
push
adc
jmp
cmp
xchg
scas
shll
push
test
xchg
lock
aad
or
adc
rcrb
push
adc
push
lods
out
xchg
hlt
std
jbe
xchg
cmpsl
jno
cmp
rcrl
mov
xchg
pop
call
dec
das
clc
xchg
shlb
lods
repnz
aaa
adc
sbb
bound
sbb
cmp
js
clc
add
ret
repz
in
jb
mov
cltd
mov
add
pop
mov
mov
push
xchg
jge
test
fisubs
mov
mov
insb
mov
mov
fld
pop
add
es
xchg
call
and
jl
aaa
sbb
popf
dec
shrb
inc
sbb
out
sti
pushf
adc
inc
hlt
insb
ret
data16
call
sub
push
addr16
jbe
std
inc
jle
add
pop
cmc
hlt
movsl
call
cmpl
mov
xor
std
xchg
push
cltd
push
adc
dec
xor
pusha
cld
pop
xor
ja
inc
scas
xchg
test
loop
pop
icebp
add
cmp
aaa
test
mov
or
out
hlt
movsb
pop
fs
inc
ret
icebp
jge
sub
stos
das
in
push
cmp
fchs
xchg
or
mov
push
jl
in
movsl
push
cmc
fdivs
and
sbb
push
push
call
jae
push
dec
adc
loopne
adc
int3
movb
xchg
pop
mov
xlat
xor
push
sub
call
mov
clc
mov
shlb
jnp
imul
mov
adc
movsl
scas
mov
decb
ficoms
cmp
and
test
add
data16
icebp
out
cld
mov
orb
loopne
std
mov
add
xchg
jns
cmpsb
jl
adc
in
jbe
cld
movsb
pop
and
aad
lea
sti
pop
xchg
pop
in
mov
inc
stos
push
and
sbb
adc
push
in
loopne
xchg
inc
mov
out
push
sbb
test
stos
mov
stos
and
into
movsl
mov
loope
dec
aam
mov
dec
gs
mov
loopne
cmp
cld
and
cmp
insb
and
inc
aaa
arpl
mov
stos
mov
sub
imulb
sti
out
into
lahf
gs
ja
data16
xchg
dec
push
lods
mov
inc
adc
xor
stc
fnstsw
daa
and
movsb
mov
push
pushf
sub
push
lahf
sbb
leave
jp
xchg
lods
lret
aad
shrb
mov
and
fsubs
jge
inc
jmp
ja
cli
adc
push
add
iret
mov
movsb
popf
loopne
or
mov
mov
popa
fwait
inc
dec
jmp
out
jne
loope
cmp
fistpll
in
ror
mov
insb
adc
add
ljmp
aam
xlat
lds
adc
sub
or
dec
loop
hlt
movsb
mov
lock
pop
pop
xor
cmc
push
inc
pop
gs
pop
mov
movsb
out
cmp
int
sarb
mov
test
mov
dec
adc
aad
pop
or
xchg
xchg
cmp
scas
repz
xchg
xor
jb
and
ljmp
loopne
ds
mov
inc
pusha
xchg
imul
cmpsl
or
mov
imul
dec
arpl
pusha
cmpl
adc
arpl
scas
push
push
orl
scas
or
cmp
pop
jl
out
mov
and
ljmp
mov
mov
inc
push
xchg
stos
xchg
push
push
repz
je
je
iret
rolb
push
jge
xchg
mov
std
xor
outsb
scas
je
das
test
dec
shrb
and
and
test
xor
dec
call
mov
jle
cmc
pop
stos
in
fsqrt
sbb
lret
or
cmp
lods
inc
jle,pn
lret
stos
and
ret
cmpsl
jge
movsb
mov
push
shlb
cltd
setl
fmuls
sbb
xchg
cmp
sub
das
stos
sbb
lods
inc
fisubs
in
lret
mov
jmp
and
push
dec
adc
repnz
cmp
add
jle
dec
ja
dec
or
shrl
mov
ljmp
mov
and
push
fs
sarb
decl
les
or
pop
pop
mov
scas
cmpl
pop
ss
fisttpl
out
das
add
cmp
pcmpgtb
nop
mov
or
add
mul
ret
xor
aam
es
cmp
mov
dec
sub
fcmovb
shll
jl
pop
pusha
add
dec
xlat
gs
jb
test
fcomps
cmp
dec
mov
xchg
dec
cwtl
lea
popa
mov
clc
sub
popa
push
rclb
or
imul
arpl
out
repnz
mov
push
outsl
push
mov
inc
jbe
ljmp
pop
or
or
insl
or
cmp
dec
inc
mov
ret
adc
inc
xchg
filds
out
call
xorl
xlat
cmp
mov
mov
inc
movsb
jge
jns
mov
push
push
mov
lock
std
fld
notb
xchg
pop
or
repz
pop
and
popl
outsl
arpl
rcrb
insb
out
xlat
ds
add
jp
mov
and
inc
mov
inc
inc
inc
fistpll
pop
push
popa
mov
xchg
sbb
clc
sbb
insl
mov
das
pop
mov
test
sbb
jmp
sbb
cmc
inc
in
adc
mov
and
movsb
popa
add
cltd
ljmp
sahf
es
cli
in
add
sbb
pop
std
ss
ljmp
mov
imul
sub
jge
fnstenv
cmc
xchg
dec
js
bound
cmpsb
adc
outsb
fdivp
or
sbb
push
lock
and
push
arpl
scas
sub
pop
jge
cltd
cmp
fwait
addl
nop
std
mov
pop
jbe
pop
fdivl
mov
ss
scas
dec
add
hlt
lahf
rcl
inc
xchg
dec
ds
orl
mov
mov
aaa
xor
test
iret
int3
cld
nop
test
repnz
jg
cmpsb
push
je
imulb
xor
insb
mov
push
jmp
mov
cmp
icebp
mov
mov
sbb
pop
xor
imul
cmp
pop
sbbb
sbb
fs
ret
pop
or
jo
jns
jecxz
sub
jnp
int3
cwtl
push
mov
orb
sub
movsl
dec
sub
adc
sub
das
cmp
sbb
mov
cwtl
std
rclb
je
adc
mov
ss
imul
mov
test
lahf
mov
sbb
pop
imul
mov
and
mov
mov
mulb
mov
or
pop
insl
or
aaa
push
mov
mov
inc
xor
outsb
sub
cld
push
mov
fimull
ret
mov
stos
mov
add
xor
movsl
shll
dec
ret
push
loope
inc
lcall
fnstenv
pop
fwait
push
test
cmpsb
push
push
push
push
adc
test
in
mov
fld
mov
mov
pusha
bound
xor
pop
mov
cmpsb
bnd
adc
popa
enter
fwait
in
lock
data16
jmp
shl
movsb
test
ret
std
jb
jle
out
imul
stos
add
aad
insb
shrl
cmp
test
and
or
add
xor
inc
dec
add
push
lock
fst
scas
rcrb
push
arpl
and
add
jb
xchg
fs
push
pop
pushf
outsb
xchg
movsb
in
dec
rcrb
mov
mov
jg
cmp
imul
popf
xchg
fidivl
imul
test
pop
call
aas
or
mov
jae
cmc
cmp
dec
jge
push
inc
mov
out
ds
push
das
xchg
adc
mov
sub
sahf
aad
push
andl
sub
xchg
sbb
mov
mov
jns
cltd
dec
insl
in
movsl
xchg
ljmp
repnz
add
cltd
in
mov
aam
mov
pop
nop
jmp
dec
mov
and
stc
shrb
pop
xchg
or
scas
mov
inc
fistl
dec
scas
inc
ret
mov
negb
jb
cmpsl
aaa
or
mov
mov
mulb
pop
ret
lock
scas
rclb
xchg
mov
outsl
jo
outsl
jne
inc
cld
inc
out
imul
out
sbb
es
pop
push
ss
xrelease
sub
lcall
mov
mov
leave
jns
cmp
jb
push
xor
mov
push
mull
dec
stos
jp
cltd
pusha
ret
cli
sub
addr16
pop
sbb
lock
pop
xor
cmc
adc
stc
or
jnp
arpl
fidivs
pop
adc
cld
dec
and
cld
out
jecxz
xor
pop
subb
insb
bound
aam
hlt
aaa
adc
fucom
fwait
and
adc
dec
in
pop
mov
push
movsl
or
jecxz
push
popa
xchg
sti
and
xchg
adc
mov
cmp
pop
test
pusha
stos
es
adc
or
loope
pop
out
xchg
jle
aaa
scas
pop
scas
xor
movsl
add
xchg
cmp
mov
scas
push
ret
push
push
jge
sbb
jl
dec
jecxz
adc
mov
sti
add
mov
and
and
and
pop
mov
adc
int
lock
shrb
inc
dec
test
push
adc
inc
adc
cli
shrb
jne
lods
add
inc
loope
aad
shl
outsl
arpl
or
and
xor
std
xor
sub
les
int
je
outsl
fdiv
mov
inc
rcrb
dec
pop
or
and
pop
mov
jge
in
pushl
sub
sub
xor
popf
mov
pop
in
pop
scas
inc
jge
mov
fnstenv
fucomp
icebp
sar
lea
mov
xchg
xor
add
ret
dec
js
pop
mov
xchg
lret
mov
or
add
mov
dec
and
fstpl
push
xor
mov
ljmp
add
push
push
lret
lret
iret
jbe
sbb
in
xor
fldenv
pop
and
pushl
in
lods
dec
imul
push
cmp
fstpl
pop
xor
push
push
jle
mov
mov
sbb
pushf
pop
pop
enter
jle
mov
aaa
dec
xchg
insl
mov
mov
fidivrl
imul
movsl
or
dec
xchg
sbb
orl
in
sbb
arpl
jnp
sbbb
mov
lea
jmp
fwait
insl
inc
call
sub
cmc
push
imul
fmul
xchg
shll
testb
add
mov
mov
pop
push
inc
mov
cld
and
test
inc
mov
imul
int
sub
xchg
into
ja
cli
hlt
movsb
jno
sub
mov
lahf
mov
or
mov
sub
mov
psrlw
mov
mov
pop
xor
sbb
cld
cmp
roll
inc
out
icebp
in
imull
inc
mov
or
aad
das
fisttps
ljmp
lds
xor
mov
cmp
out
jbe
mov
mov
test
jne
fs
fucomi
clc
aam
mov
sub
lods
sarb
pushf
cltd
insb
jae
lea
andb
mov
jb
fisttpll
push
pop
jg
lret
cmp
rcrl
mov
stos
imul
ss
scas
lret
push
test
cs
mov
mov
aaa
lock
mov
xor
mov
mov
call
fiaddl
dec
or
inc
xchg
xor
push
aas
call
mov
dec
addr16
dec
xchg
mov
aad
lcall
pop
pop
je
cmp
std
xchg
js
mov
sti
sar
jbe
cmp
push
leave
mov
mov
mov
xchg
rcrl
mov
mov
jb
stos
lret
out
push
mov
shll
imul
stos
movsl
popa
push
dec
mov
lahf
cltd
cmp
dec
insb
xor
adc
pop
mov
or
and
or
xor
jnp
out
sub
shll
test
or
lods
push
and
xchg
loope
or
xchg
xchg
test
ret
fnstcw
out
test
mov
inc
pop
push
xor
shll
pcmpgtd
inc
out
inc
scas
fs
sbb
inc
lahf
pop
outsb
xor
mov
mov
xchg
ds
or
fnstenv
movsl
psubq
xor
xor
iret
sbb
pop
scas
add
into
js
fadds
adc
stc
je
and
shlb
rcrl
xchg
ss
push
stos
mov
imul
stos
ss
ja
jmp
ja
mov
data16
lret
repz
jnp
pop
mov
push
bound
mov
dec
cmpsb
dec
loopne
xchg
inc
fnsave
sbb
adc
pop
adc
xchg
iret
je
test
addr16
mov
sbb
and
jge
inc
mov
cmpsl
shrb
outsb
mov
lds
iret
out
repz
in
jo
or
lock
mov
stos
imul
and
cmp
mov
lahf
push
movsl
mov
or
in
mov
or
add
fadds
js
jb
mov
sub
add
in
popl
mov
mov
xor
push
popf
xchg
or
or
dec
and
bound
repz
adc
jecxz
stos
dec
add
push
lahf
mov
scas
test
in
out
adc
pop
and
jno
or
arpl
loop
lcall
mov
test
xchg
movsb
popl
je
test
adcl
mov
dec
into
mov
cmp
clc
mov
sub
jmp
cli
push
shl
in
pop
repnz
das
mov
daa
or
sbb
rcrb
lahf
jo
pop
inc
mov
adc
enter
sbbb
cs
xchg
les
fsubs
hlt
scas
add
mov
push
push
or
popa
into
lahf
adc
aas
or
in
mov
nop
jl
sub
add
or
outsb
mov
testl
mov
test
mov
scas
pop
into
mov
sbbb
xchg
mov
xchg
or
inc
std
push
enter
cmpsl
icebp
scas
mov
and
movsl
pushf
or
mov
sub
jl
je
pcmpgtw
sub
xor
sub
push
xor
xor
add
xor
xor
inc
insb
pop
sbb
shlb
add
adc
lret
and
sub
aam
in
imul
js
in
ljmp
scas
fs
xor
or
jno
mov
jl
in
out
popf
lahf
adc
mov
dec
xor
push
cmp
andl
gs
not
lea
in
cmpsl
xchg
push
out
push
pop
or
cltd
mov
les
jnp
jnp
mov
jp
loopnew
leave
push
icebp
xchg
fwait
sti
sbb
jge
inc
inc
insb
xchg
lods
aad
shufps
push
insb
cli
mov
pop
stc
fwait
pop
fcomps
ret
cmpsb
jmp
adc
mov
sbb
xor
cmp
xchg
xchg
push
imul
cli
jecxz
or
jl
mov
xchg
lods
cmc
test
push
xchg
xchg
fnsave
test
cld
enter
pop
sbb
jns
movsb
out
dec
jle
xor
xchg
dec
addb
push
call
int
or
cmp
mov
push
push
mov
lea
popf
mov
xchg
xor
mov
adc
das
out
loopne
pop
leave
pushf
dec
xor
push
pop
pop
xchg
or
imul
popf
cld
fdiv
js
pop
mov
shll
loopne
dec
sbb
sbb
lds
mov
sbb
xchg
jnp
jle
pop
aaa
dec
movsl
xchg
inc
fcmovnu
mov
xor
popl
sbb
push
das
push
mov
std
cs
xor
nop
xchg
arpl
mov
int
xchg
test
cli
xor
jecxz
movsl
mov
cmovb
sbb
inc
insb
ret
sub
push
inc
es
mov
sbb
pop
mov
nop
mul
add
int3
xor
mov
lret
loopne
inc
ja
fbld
lods
dec
mov
mov
dec
lods
repnz
fimull
aad
add
cmp
or
imul
in
or
mov
stc
aaa
dec
into
nop
nop
sbb
dec
fsts
add
sub
xor
roll
xchg
mov
xchg
mov
cmp
outsb
mov
fmuls
push
jns
ret
xchg
xchg
sarb
xchg
or
cli
mov
in
popf
lcall
inc
es
dec
gs
adc
mov
sub
les
pop
fbstp
rcll
or
jae
mov
push
mov
test
insl
mov
mov
aad
xchg
sub
mov
rcrb
cld
stos
fldcw
mov
sahf
cmp
mov
adc
lds
cmp
add
lock
cs
cmpl
or
enter
loope
xorb
cmc
cld
lods
dec
popa
xor
aaa
cmpsl
je
xor
cwtl
add
jnp
iret
sub
or
in
adc
mov
adc
sbb
int
pop
adc
or
jge
sbb
mov
fcomip
sbb
jnp
lods
mov
jmp
leave
add
insl
mov
or
sti
cmc
xor
test
out
pop
and
test
loopne
add
lret
jp
mov
push
xchg
fidivrs
sarl
mov
repnz
in
ret
inc
cmp
mov
call
jp
jo
and
or
fisubrs
out
mov
stc
popa
xchg
xchg
sub
push
mov
or
nop
mov
sub
mov
into
stos
mov
lods
out
addr16
push
push
dec
mov
jnp
fsubs
adc
rolb
mov
in
ds
sbb
push
xchg
ror
in
xchg
mov
push
push
and
sub
cmp
scas
sbb
in
out
lods
jno
push
cmp
xor
mov
adc
add
xor
orb
or
dec
js
shll
jge
sub
lret
mov
jo
jnp
xchg
xchg
push
mov
xor
xchg
sub
push
aam
push
stos
pusha
pop
cmp
imul
jne
pusha
test
popa
cmp
pop
push
adc
push
lret
and
insl
test
sub
push
dec
test
push
xor
mov
adc
mov
push
push
sbb
stos
je
pusha
movsb
cltd
nop
repz
push
leave
add
xchg
in
ds
sbb
imul
repnz
and
jle
sub
or
and
stos
insb
aaa
cmpsb
ds
ja
stc
mov
mov
fs
lret
mov
push
arpl
or
sbb
or
ljmp
mov
jp
js
xchg
stc
bound
loop
movsl
and
add
imul
jle
xor
mov
hlt
movsl
fiadds
pusha
sbb
lds
js
and
inc
cmc
pop
inc
add
ds
xor
push
dec
ljmp
repnz
movsl
faddl
xchg
push
iret
pop
pop
add
inc
mov
add
jl
pop
int
xor
mov
and
pop
les
lock
in
test
loop
dec
fistps
sti
fistpl
xor
shl
fcmovne
sbb
dec
arpl
test
inc
loop
xor
dec
add
pop
inc
inc
insl
leave
fstpl
or
adc
sbb
xchg
das
mov
sbb
out
ret
aam
add
jns
adc
mov
mov
pusha
mov
lods
aad
jne
popf
lahf
arpl
imul
push
cmp
fstps
add
sub
xchg
js
xchg
in
inc
inc
xchg
arpl
rclb
sti
bound
mov
ficomps
lret
xor
sbb
je
and
sub
dec
stc
inc
xor
pusha
xchg
push
sbb
mov
lock
or
or
out
arpl
pop
in
popa
into
sbb
arpl
jge
cli
clc
mov
cmpsb
dec
mov
mov
xor
dec
loope
insl
adc
push
aaa
test
or
sub
jmp
xchg
cmp
xchg
xor
and
pop
mov
fdivl
xor
stc
aaa
inc
adc
xor
mov
push
pop
jecxz
push
icebp
dec
std
sub
jno
mov
adc
inc
into
fadds
or
dec
test
push
test
fidivrs
imul
dec
in
in
popf
and
loope
outsl
pop
cld
cmp
cmp
push
lret
sub
push
lds
and
ss
pusha
jns
mov
ds
mov
add
jo
je
movsl
sarb
adc
stos
mov
inc
sbb
cmp
fisttps
add
mov
xchg
aaa
mov
mov
xor
pop
jns
xor
cwtl
mov
sete
mov
add
sub
jns
js
dec
or
jecxz
jo
jp
sar
xor
clc
negb
in
jg
inc
xchg
aas
push
push
iret
jmp
push
addr16
adc
cmpsb
dec
roll
xor
and
and
adcl
leave
push
and
orb
dec
push
inc
mov
pop
inc
imul
sbb
cmp
cmp
or
popa
or
imul
sub
insb
inc
mov
jl
insb
out
cmp
mov
enter
jl
sub
sbb
ds
jno
lock
adc
and
stc
nop
mov
push
and
in
and
lret
popf
bound
call
cmp
pop
psubsw
cmc
adc
popa
add
xchg
sub
pop
fldcw
mov
cmp
popf
loopne
inc
pop
mov
pop
add
lds
cs
je
outsb
int
pop
test
stc
and
ret
or
clc
les
sub
outsl
mov
stos
scas
je
loop
jns
adc
mov
popf
je
in
sub
mov
cmp
sub
mov
or
dec
fcmovnb
dec
and
jno
mov
and
outsb
pop
cmp
jo
outsb
iret
sbb
das
sbb
inc
imul
fildll
loope
jb
filds
lahf
xor
lea
mov
xchg
repz
iret
cmp
mov
jecxz
test
js
mov
sahf
xor
mov
out
idivl
pop
sbb
pop
push
sub
push
mov
ret
mov
shrb
pushf
insb
and
sbb
lods
and
lock
ja
push
inc
jg
cmp
imul
xor
sahf
jecxz
daa
arpl
inc
cmp
dec
daa
aam
incl
sbb
pusha
pop
rcll
and
int3
jnp
cmp
mov
lcall
inc
scas
mov
jl
lods
enter
rol
dec
lock
sub
ret
lock
or
cmp
daa
lods
mov
inc
inc
jmp
pop
dec
and
mov
jae
xlat
mov
or
inc
outsl
int3
sbb
add
aad
or
inc
push
xor
ljmp
out
sbb
pop
jg
sub
out
les
in
icebp
roll
std
ljmp
mov
mov
dec
mov
fadds
lds
and
add
add
dec
push
pop
test
mov
aad
cmpsl
outsb
mov
dec
push
lds
jne
sub
jle
mov
iret
sub
enter
pop
or
mov
dec
inc
addr16
ljmp
leave
cwtl
leave
inc
pushf
xchg
jge
test
or
repnz
jecxz
test
mov
jle
jns
imul
pop
sub
insb
mov
inc
mov
mov
cltd
je
xchg
cmpsl
aaa
lret
outsl
push
xor
out
or
inc
mov
ja
fdivp
push
inc
pop
pop
jmp
or
int3
rolb
adc
insb
fdivl
dec
popa
push
mov
rclb
xchg
mov
nop
xchg
insl
xchg
shlb
fucomip
adc
jmp
mov
jmp
in
jnp
out
add
xorb
ret
xchg
cmp
add
xorb
xchg
mov
xchg
add
rorl
push
cmp
add
lahf
mov
xor
and
push
lds
iret
sub
aam
or
adc
xchg
pop
xor
rclb
push
repnz
push
inc
hlt
xchg
es
add
sub
jnp
mov
push
jle
mov
push
bound
push
into
or
jb
pop
adc
fimull
push
xor
dec
sub
xor
sub
enter
adc
popf
or
data16
sti
mov
jne
sbb
mov
clc
movsb
jns
stos
jb
jo
push
mov
inc
orl
fdivrs
pop
and
movsb
sbb
dec
mov
jne
sub
frstor
xchg
arpl
add
cltd
int
pop
pop
sarl
mov
lock
aam
mov
cmp
and
loopne
xchg
mov
hlt
cmp
mov
shrb
pop
adc
dec
shrb
mov
loop
xchg
stc
es
fs
push
ret
sbb
and
mov
push
loope
push
pop
sbb
cwtl
or
pusha
cmp
mov
fldt
mov
jno
push
das
add
inc
ret
cld
inc
mov
xor
aaa
fbld
push
dec
fidivs
call
push
in
cmp
xchg
dec
push
xchg
xchg
insb
jecxz
andb
lds
je
xor
sbb
and
add
daa
dec
andb
sub
push
or
popf
mov
jg
pop
dec
pop
arpl
and
pop
sti
loop
mov
cs
enter
mov
ret
scas
jecxz
mov
push
add
cwtl
mov
imul
dec
inc
mov
xchg
mov
rorl
fdivp
pop
xchg
int
jp
jbe
xchg
fmull
pop
shrb
push
inc
cmpsl
push
hlt
inc
jl
jp
or
push
adc
cmp
icebp
or
xchg
adc
cmc
cmpsl
loope
pop
sti
inc
je
daa
repz
or
mov
fcmovu
sbb
enter
fs
xchg
mov
mov
out
jnp
out
mov
pop
mov
dec
out
push
mov
js
xchg
aad
pop
adc
dec
sahf
xchg
inc
mov
adc
mov
loope
lock
cmpb
pushf
mov
mov
sti
mov
xchg
push
add
mov
je
cmp
and
mov
xor
mov
jecxz
fiadds
icebp
jg
adc
mov
push
leave
jp
les
xor
dec
idivb
popa
xor
arpl
mov
xchg
iret
popa
dec
addr16
movsb
inc
cs
loopne
and
into
repnz
scas
enter
push
dec
int3
lahf
subl
stos
xchg
mov
stos
into
dec
fiadds
sub
aad
sub
add
mov
fbld
fcomps
and
add
iret
stos
fstp
jae
mov
cmp
or
dec
or
jl
movsl
mov
mov
inc
cwtl
dec
xchg
pop
and
lret
pop
cmp
call
jle
cmp
inc
lret
loopne
push
pushf
fbstp
pop
push
outsb
xor
mov
push
sub
test
in
mov
int
dec
inc
add
cmpsb
fnstsw
adc
mov
in
jb
in
or
dec
or
adc
jmp
aad
xchg
jg
cmp
test
call
icebp
sbb
or
xchg
mov
clc
sahf
mov
jle
lds
adc
xchg
mov
xchg
data16
cmp
imul
enter
insl
cmpb
sub
mov
outsb
repz
imul
or
mov
mov
pushf
icebp
sahf
rclb
cwtl
pop
fsubr
aad
xor
xchg
xor
shl
xchg
clc
jb
pop
inc
and
pop
je
cmp
popa
lock
cld
xchg
xchg
pusha
shrl
fistpll
fwait
jo
jns
xlat
sub
clc
das
sahf
pop
sahf
pushf
push
cs
cli
add
push
movsl
decl
idivl
or
dec
je
loop
jge
add
into
sbbb
aas
in
xor
pop
adc
outsl
mov
das
push
add
les
insb
fwait
jbe
mov
movsl
ja
mov
int
jo
push
mov
in
pop
scas
cmp
or
jno
jmp
test
int3
dec
scas
daa
testl
rcrl
iret
cmp
hlt
aam
addb
jnp
pop
push
sbbw
bound
ret
roll
lock
call
push
cmp
stos
push
repnz
sub
sub
push
mov
sub
dec
xchg
mov
push
aaa
push
lcall
dec
popa
xor
aam
sbb
cld
jmp
adc
decl
dec
adc
push
cmpsb
xchg
jae
enter
lcall
sbb
fcmovnu
push
xchg
fnstsw
sbb
into
or
dec
nop
leave
jbe
out
sub
inc
xchg
pop
or
inc
cmp
jne
push
aad
fadd
pop
jbe
mov
sbb
cmp
scas
mov
aaa
mov
fsincos
std
lods
push
xchg
push
out
cmp
lret
dec
call
rcrb
jbe
xorl
adc
mov
testl
lahf
cmp
scas
pop
add
fisttpl
fs
cli
outsl
jge
adc
sbb
shl
mov
mov
mov
sbb
movsl
sarb
mov
popf
dec
jmp
mov
lahf
xor
lock
jp
das
aas
xchg
movsl
adc
int
push
mov
nop
sbb
jae
xchg
cmp
jl
icebp
cmp
push
xchg
out
daa
dec
or
pop
sbb
inc
aam
fiaddl
gs
in
adc
and
adc
testb
andl
inc
out
push
scas
cltd
sbb
or
adc
adc
fsubr
dec
mov
xor
push
ret
xchg
and
shrl
enter
add
dec
andb
dec
scas
pop
xchg
mov
and
test
mul
pop
adc
xlat
sahf
sub
sub
dec
jle
sub
int
sbb
cmp
daa
or
sbbl
inc
shll
sbb
pop
outsb
add
jae
fdivr
das
xchg
iret
mov
and
fidivl
cmpsb
mov
out
or
mov
lret
xchg
inc
notb
mov
inc
jno
in
or
and
jle
push
rclb
sub
cli
or
pop
les
movsl
adc
push
popf
jecxz
jb
stos
add
sbb
sbb
lcall
stc
add
imul
rcrl
sbb
cmp
stc
jb
das
idivb
das
lahf
dec
jbe
aaa
test
data16
jge
enter
jne
decl
outsl
pop
fs
scas
sub
aaa
int
out
inc
mov
and
data16
dec
dec
call
imull
cmpsb
and
xor
les
xchg
push
scas
push
sub
xchg
mov
repnz
xchg
test
ds
push
call
imul
pusha
pop
lock
rcrb
std
dec
pop
push
rolb
push
lret
mov
loop
add
push
pop
inc
in
cmp
adc
enter
jne
ret
push
add
push
call
loope
jp
sbb
es
adc
stc
sub
xor
sbb
xchg
dec
dec
je
out
or
ret
lds
mov
xchg
add
or
cli
imul
mov
cmp
mov
stc
sub
iret
into
jl
lods
inc
out
inc
push
sbb
cmpsb
sub
cmp
push
jb
js
int3
cmp
testl
sbb
sbbl
loopne
into
lret
dec
bound
jnp
adc
push
mov
adc
jge
cmp
test
and
addr16
popa
inc
mov
cmp
mov
aas
pop
sub
call
dec
data16
cwtl
inc
dec
pop
daa
outsl
fcomip
xor
push
cli
jg
shll
mov
shll
xchg
inc
fiadds
outsl
push
lods
mov
xorb
mov
pop
fisttpll
push
je
jno
cmp
jl
sbb
cmp
test
iret
test
outsl
mov
outsb
xchg
jo
je
mov
cmp
test
scas
mov
mov
roll
cmpsl
or
inc
pop
xchg
dec
push
jne
neg
cs
pop
fwait
rcll
fwait
cmpsb
pop
ret
sub
lock
fldenv
mov
pop
xchg
add
push
popf
incb
sub
outsb
push
std
jp
aaa
jmp
neg
lret
int3
jne
iret
sub
in
std
xchg
ds
adc
add
dec
jg
cli
ljmp
push
sub
lret
mov
popf
fstps
test
sbb
ja
int
inc
or
mov
iret
push
mov
sub
les
jne
adc
add
adc
mov
movsb
daa
ss
cmp
inc
in
cmp
sahf
incb
push
add
push
or
or
sub
mov
cmpsb
sti
scas
loope
lods
cs
test
and
dec
fidivrl
out
add
das
fimull
adc
push
test
shlb
jne
ds
pop
mov
pop
cld
ja
stc
jbe
mov
andl
adc
popf
sub
bound
or
sub
imul
nop
push
adc
cmc
xor
repnz
mov
lret
push
jg
out
mov
jecxz
lret
fs
sub
jb
es
cmp
cmp
and
es
test
cli
lahf
mov
jno
inc
js
pop
adc
mov
jle
out
sub
lds
dec
cmp
into
outsl
cmc
bswap
bound
pop
mov
add
fs
xorl
cmp
add
jae
push
lahf
popa
add
or
sbb
sarb
cld
sub
add
lea
shrb
out
je
mov
lret
mov
fistpl
bound
adc
popa
mov
xor
movsbl
push
xchg
test
movsb
imulb
push
cld
pop
mov
push
mov
cli
dec
and
fsubr
loop
add
sub
movsb
aam
insb
repnz
in
mov
push
mul
push
push
cmp
push
pusha
sbb
scas
fmuls
jne
iret
adc
repz
cmpsl
ljmp
cmp
loopne
sti
cmpl
sbb
je
ret
mov
stos
out
or
add
jnp
lock
in
xchg
into
add
imul
arpl
lret
mov
in
rorl
jl,pn
icebp
stos
rclb
xor
ja
jb
pop
sti
imul
jno
mov
stos
xor
or
stos
in
aaa
xor
sub
das
cmp
pop
movsl
adc
xor
push
xor
mov
sti
mov
push
add
sub
jmp
repnz
aaa
mov
or
stos
in
mov
xchg
shll
in
cmp
sbb
jecxz
mov
push
jl
push
sbb
movsl
test
inc
rcrl
add
arpl
popa
pop
pop
mov
test
movsb
mov
movsb
dec
fcmovnu
aas
lahf
outsl
cmp
std
jae
out
cmp
pop
out
jge
push
mov
rorl
xlat
dec
jecxz
dec
sub
fs
mov
or
loopne
mov
and
ljmp
ret
movzwl
mov
xchg
jp
lods
pop
insb
push
ficomps
push
cmp
punpckhbw
mov
stc
xchg
add
inc
out
push
lret
addb
movsb
stos
sti
cmp
pop
into
cwtl
add
lret
jb
dec
out
subl
or
mov
stos
jmp
movsl
out
shlb
mov
pushl
mov
jg
cltd
jo
rcll
cmp
and
clc
int3
scas
int3
clc
out
jmp
outsl
or
and
in
popa
jae
repnz
sti
movsb
push
lahf
fsubs
cmc
mov
fstps
mov
adc
imul
mov
or
add
cmp
lods
iret
jnp
jmp
mov
inc
push
movsl
rcrb
mov
lods
pop
push
icebp
jge
lahf
jl
xchg
shlb
pop
call
mov
mov
testb
jmp
xor
cmpl
mov
pop
mov
fiaddl
jle
arpl
iret
lahf
pop
arpl
pop
call
mov
jae
aad
xor
cmp
repnz
ds
ret
sub
das
xor
or
cmc
pushf
fdivs
adc
aas
cmp
cmpsl
add
dec
lcall
mov
mov
push
cmpsl
dec
jmp
pop
mov
jns
shl
out
pop
je
ds
adc
mull
leave
sti
or
or
cmc
hlt
add
add
jnp
cmp
mov
adc
fimuls
leave
mov
mov
mov
fnstsw
add
lea
loope
out
jo
dec
loope
rcrb
dec
add
push
pop
int
mov
out
fisttps
data16
shrl
mov
or
notb
push
sbb
stc
inc
or
jb
sub
testl
jno
outsl
mov
or
aam
gs
xchg
sbb
xchg
or
adc
adcb
aas
jae
mov
adc
cltd
outsl
outsl
mov
clc
add
jp
dec
mov
sbb
hlt
mov
mov
pop
cltd
mov
aam
add
stos
cmc
mov
add
cmp
into
or
insb
cmp
sub
mov
jle,pn
xor
jne
pop
push
cli
imul
fcoml
push
push
sbb
add
out
pop
loope
inc
xor
push
and
aam
and
scas
hlt
cmp
outsl
leave
out
sbbb
sahf
and
popa
mov
mov
cmp
cmp
lcall
shr
adc
jle
push
outsb
lea
dec
mov
into
push
or
loope
xor
andb
jno
test
cmp
sbb
push
aad
sub
popf
in
insl
add
in
mov
insb
jnp
shl
mov
and
push
lcall
gs
scas
rclb
jl
idivb
loop
push
jmp
sbb
jecxz
mov
jo
jge
rcrl
ss
cmp
dec
dec
xchg
mov
adc
or
repnz
xor
jp
aam
sti
push
setbe
stc
out
setno
push
pushf
movb
dec
mov
das
mov
out
faddp
xchg
push
fcoml
mov
imul
insl
into
mov
sti
into
mov
dec
stos
sub
fnstsw
or
push
insb
push
nop
pushf
push
out
cmp
pop
push
sti
jmp
bound
adc
lahf
enter
nop
add
stos
ret
xchg
lret
cs
in
adc
xor
pop
adc
and
mov
and
sub
mov
push
stc
dec
push
inc
or
outsb
out
push
adc
mov
icebp
mov
cmpl
mov
shl
aaa
cld
pop
fisttpl
or
aad
sbb
sub
dec
and
ja
cmp
xchg
and
cpuid
dec
xor
not
push
das
cmc
stos
lods
push
push
jo
stos
mov
and
aas
sbbb
mov
or
or
xchg
mov
jg
das
ret
scas
mov
pop
dec
inc
push
aad
cmp
jo
push
mov
roll
je
dec
adc
popf
and
adc
jbe
leave
or
and
or
ljmp
inc
and
xchg
lcall
cmp
fildl
pop
xchg
mov
mov
xor
push
iret
xchg
insl
mov
aam
push
out
mov
ficoms
mov
pop
loope
aad
mov
lcall
pop
mov
shlb
fucom
ror
ja
xchg
xchg
aaa
fstl
mov
xchg
in
aas
out
and
cld
inc
inc
test
mov
clc
popf
cmp
jbe
ljmp
pop
cwtl
loop
subl
pop
mov
add
repnz
test
mov
lods
aad
adc
sti
imul
scas
test
adc
jmp
in
fisttps
jne
in
pop
js
jge
jp
add
unpckhps
xcrypt-cfb
cmpsl
popa
bound
test
movsb
cwtl
inc
lahf
outsl
insl
or
bound
xor
lahf
or
pop
cmp
mov
test
movsb
adc
hlt
cs
and
push
or
pop
das
cmp
mov
mov
push
aas
dec
mov
clc
mul
xchg
xor
xor
sub
jne
cwtl
mov
es
sub
xchg
jmp
fs
sahf
aas
jmp
sub
popf
shlb
and
sbb
adc
out
jae
mov
fsts
sub
mov
or
inc
jmp
mov
data16
sub
add
les
mov
cmp
cmp
push
cli
std
push
arpl
sbb
push
ret
hlt
fnsave
and
call
sti
dec
adc
cmp
jo
xor
sub
pushf
inc
push
stc
sbb
pusha
xchg
out
or
iret
and
mov
in
or
sbb
mov
push
out
add
lcall
movsb
xchg
repz
in
pushf
out
fstpl
push
cmpl
or
outsb
testb
and
mov
xor
mov
int3
adc
sbb
xlat
ret
dec
cltd
clc
jmp
pop
and
pop
xlat
and
dec
clc
scas
hlt
scas
xor
daa
push
in
inc
add
xchg
ret
data16
scas
xor
add
mov
pop
ljmp
std
mov
inc
jb
loopne
rcll
pop
add
out
dec
test
add
sbbl
push
pop
test
fwait
daa
push
in
pushf
or
shlb
shrl
pop
leave
cmpsl
mov
push
xchg
mov
push
push
bound
icebp
and
and
sub
hlt
mov
dec
mov
lret
cli
fucompp
sbb
sub
mov
lea
pop
sub
fsubrs
mov
test
xchg
inc
imul
mov
scas
aad
mov
loopne
pop
adc
add
jl,pn
fadd
mov
push
pop
adc
mov
pop
rcrl
aad
push
je
out
mov
ljmp
stc
icebp
and
xor
lret
push
dec
shll
jge
movb
in
mov
or
cltd
daa
cli
cwtl
pop
std
sbb
lods
fisttpl
pop
sarb
fsubr
push
xor
mov
imul
inc
subl
int
cltd
in
mov
shlb
fcmovnbe
int3
mov
stos
cmp
push
xor
dec
nop
scas
int
jl
pushf
inc
call
in
pop
mov
pop
xchg
call
mov
sub
dec
mov
lods
mov
adc
mov
lahf
and
dec
out
inc
lret
sub
or
sub
outsl
sahf
movsb
int3
xchg
inc
jmp
popf
mov
push
mov
jp
cmp
cmp
cwtl
rcrl
and
or
dec
and
inc
fists
lcall
mov
xor
lret
or
and
push
cmp
jbe
jne
sti
sbb
cltd
sbb
fistpl
pop
cltd
scas
je
pop
or
movsl
icebp
sub
je
jg
out
add
or
inc
subl
insb
call
xchg
in
enter
stc
push
inc
stc
inc
jle
ja
add
dec
test
out
add
xchg
xlat
cmp
push
mov
test
in
inc
adc
aam
cli
xchg
push
cli
daa
sbb
das
mul
cmp
cmp
sub
cmc
fisubs
shll
mov
mov
dec
mov
decb
xchg
xchg
push
adc
mov
into
fnstenv
rcrl
push
pop
xor
push
push
loop
jmp
mov
push
push
jl
and
in
push
insl
pop
and
mov
push
mov
or
cmp
lods
cmp
faddl
or
xchg
lret
sub
push
dec
ss
mov
adc
mov
cmp
jne
xor
scas
xor
dec
mov
dec
xchg
out
hlt
out
pop
and
dec
jb
jo
adcl
and
test
cltd
lret
cmpsb
call
pop
mov
in
or
push
push
sub
mov
je
jge
cmp
shr
into
repz
jae
push
dec
ret
sub
xchg
cmpsb
fwait
out
mov
pop
dec
repz
cmp
les
aas
jecxz
int
leave
pop
cmp
sti
mov
xor
jge
push
jbe
rcrl
mov
adc
out
fldl
pop
das
andps
call
rclb
cmp
xor
or
sbb
adcb
pop
fsubrl
sub
daa
pop
dec
out
cmp
sbb
shll
aam
xchg
gs
ds
mov
lcall
cmp
mov
xchg
dec
cld
shrl
sahf
adc
jmp
push
push
cltd
cmpl
sub
or
xchg
icebp
jns
adc
and
add
out
ds
sub
jnp
out
call
adc
or
xor
lret
subl
das
outsb
jne
mov
arpl
cmc
mov
aam
in
sub
and
sti
inc
sub
or
sahf
sbb
lret
loop
mov
mov
dec
pop
sub
sbb
dec
adc
lock
into
cmc
andl
adc
fs
mov
arpl
xchg
clc
push
stos
iret
mov
push
push
inc
lcall
pop
mov
cmp
adc
mov
jecxz
aas
xchg
dec
xchg
lods
mov
in
pop
sub
inc
add
jmp
mov
scas
inc
int
es
mov
add
inc
bound
testl
and
repz
icebp
add
lods
inc
xchg
imul
jo
daa
pop
and
inc
test
mov
inc
push
pop
iret
dec
jp
adc
xlat
add
mov
dec
cmpsl
int3
or
fbstp
inc
push
stos
dec
loop
sarb
faddl
test
inc
and
dec
test
pop
sbb
pop
mov
les
add
lahf
mov
shl
cmp
les
stc
xchg
pop
or
scas
cli
repz
scas
aam
repz
in
push
es
mov
adc
mov
add
movl
shld
sahf
icebp
mov
shrl
pop
jb
and
sub
pop
or
push
aas
push
lret
insl
pop
mov
mov
mov
mov
cli
jl
int3
inc
jg
cmp
arpl
push
jp
clc
ret
push
lret
push
jge
dec
pop
js
pop
lret
in
cli
and
lock
mov
int3
cmpsl
ds
decb
push
dec
lcall
movsl
fmuls
into
xchg
xor
mov
inc
lods
idivl
data16
mov
repnz
sbb
loopne
test
test
ja
xchg
cli
ret
insb
mov
fstpt
pop
cltd
ficoms
int3
lea
jmp
push
push
and
sub
sub
jne
push
in
xor
dec
cmp
mov
xchg
and
sub
cmc
pop
js
inc
xor
inc
movsl
and
xor
and
scas
xchg
sub
xchg
pushf
push
aaa
scas
xchg
scas
jle
cmp
cmpsl
jl
sub
push
imul
sbbb
dec
fmull
scas
fisubl
rcrl
jns
out
mov
add
arpl
popa
mov
dec
push
call
sbb
or
das
pop
sub
shll
hlt
stos
push
push
jp
popf
je
orl
inc
pushf
inc
aad
xor
push
lret
lock
addr16
or
aaa
hlt
out
add
inc
fisttps
lahf
movb
sbb
xchg
loop
inc
cmp
adc
out
push
insb
mov
pop
sbb
pop
mov
sti
dec
or
int3
cmpsb
xor
xor
bound
inc
sti
insb
loop
ss
adcl
push
es
mov
cmp
insl
sbb
pop
xor
movsb
loop
testb
or
insb
je
lret
test
inc
adc
jb
rcrb
out
gs
pop
lds
push
mov
inc
lcall
mov
lods
mov
test
popl
int
xor
adc
add
push
push
mov
jae
ss
xchg
addl
je
ja
cmp
push
gs
stc
lret
shrb
xor
pop
xor
ljmp
lahf
push
xor
xchg
xchg
add
test
push
dec
pop
fsubl
push
sti
pop
push
out
mov
loop
inc
test
test
jg
iret
or
xchg
cmp
shl
mov
test
insl
jge
insl
inc
pop
mov
rolb
mov
sbb
lods
scas
sbb
js
mov
add
pushf
leave
jge
jne
cltd
data16
jns
xor
mov
lock
or
xor
movsl
push
jle
add
jecxz
and
xorl
push
ficompl
cmp
sbb
push
adc
jge
mov
push
ficompl
mov
rclb
addr16
xchg
fldlg2
mov
xchg
sub
jp
jne,pt
push
insb
mov
daa
sub
xchg
fmulp
dec
sbb
add
lock
fistpll
mov
mov
idivl
cmp
leave
scas
xor
mov
mov
sar
movsb
cmp
movsl
pop
sbbl
insb
shlb
and
bnd
inc
es
test
loope
inc
xor
mov
jp
aaa
mov
movsl
pusha
incb
xchg
int3
dec
imul
xchg
scas
test
dec
pop
or
or
pop
xchg
iret
mov
sti
jmp
or
fcoms
xchg
lods
xchg
mov
pop
addr16
or
mov
enter
hlt
enter
and
mov
out
push
cmpsl
jo
adc
lcall
add
sbbl
pop
mov
in
pop
lds
fisttpll
je
inc
pop
repnz
sub
movsb
inc
mov
xchg
mov
xchg
sub
push
lret
int3
shrb
jl
xchg
push
jno
add
gs
mov
sbb
adc
sbb
xchg
in
adc
inc
push
addb
add
xlat
jnp
mov
and
xor
stos
mov
pop
outsl
push
cli
push
mov
pusha
ret
cmpsb
sbb
imul
jge
movsb
fsubl
test
bswap
cmpsb
mov
jae
jmp
add
fxch
lea
dec
cli
in
and
dec
repnz
mov
xchg
cmpsb
lret
mov
pushl
sarb
pop
inc
cmc
sub
jp
push
cmp
dec
mov
add
add
inc
out
imul
xor
fwait
cltd
lods
dec
sahf
subb
and
gs
cmc
jne
cmc
shr
dec
jmp
xchg
lock
lds
pop
lods
adc
imulb
loop
inc
sbb
test
xchg
addl
outsl
ja
xor
or
add
out
xchg
dec
testl
sbb
mov
dec
mov
pop
xchg
add
add
int3
imul
sbb
lds
stos
xchg
cmp
add
pop
inc
push
mov
sahf
mov
ds
and
ror
andl
and
xor
bnd
movsb
icebp
jne
fistl
inc
insb
rolb
sbb
xchg
xchg
js
push
xchg
fistpll
repnz
pop
pop
cmp
or
add
or
mov
push
mov
xor
or
ja
cwtl
outsl
iret
push
lods
in
jne
fs
pop
inc
inc
push
or
xchg
xchg
ret
pop
mov
imul
jge
add
cmp
stos
mov
imul
mov
data16
test
scas
mov
negl
sti
push
mov
sub
mov
and
in
dec
popf
outsb
cmp
mov
hlt
sub
pop
mov
inc
shll
push
cwtl
fwait
add
imulb
out
imul
cmpsl
dec
aas
pop
test
pop
adc
add
cmc
sub
or
xor
cmc
into
test
or
xchg
push
add
mov
sti
lods
cmpsb
pop
push
cmpsl
ds
jo
insl
test
pop
dec
inc
jge
stos
xlat
inc
enter
sub
pop
dec
hlt
mov
repnz
sub
mov
jnp
rcl
adc
jo
fwait
stos
mov
rolb
rclb
jg
dec
es
sbb
lret
xor
sbb
mov
mov
sub
lcall
push
sbbl
add
test
arpl
mov
sbb
into
lods
mov
or
mov
jp
clc
mov
enter
push
pop
mov
scas
mov
fwait
cmp
or
imul
sti
push
imul
negb
cmc
jns
popa
dec
cmp
test
stc
xchg
cmc
push
cmc
mov
adc
addr16
out
sub
shrl
xchg
mov
add
mov
repnz
fisubrs
sub
push
je
outsl
pushf
inc
mov
or
and
mov
xor
jp
je
pop
dec
sbb
cmc
fbstp
inc
mov
fcoml
rcrl
mov
dec
inc
mov
sub
ljmp
nop
lods
mov
xor
mov
mov
loopw
jo
pushf
ret
mov
stos
add
xchg
sarl
or
mov
pop
mov
pusha
loope
sarl
cld
jne
clc
lahf
pop
push
mov
shll
xor
addr16
fmul
or
xor
jne
mov
pop
movsl
ds
mov
ret
push
stc
mov
sar
xlat
in
decl
adc
imul
std
sahf
add
les
rcrl
int
lods
xlat
mov
movsb
and
insl
xor
push
test
mov
lret
insl
in
pop
sub
sbb
lods
pop
jle
mov
lock
xchg
adc
cli
dec
ret
gs
outsb
and
outsl
jo
and
frstors
push
push
and
sub
and
std
jne
mov
inc
clc
aaa
pop
xchg
push
mov
and
addl
pop
mov
xchg
fldcw
outsb
xchg
int
mov
cltd
push
mul
add
xor
mov
stos
mov
popa
jne
mov
cs
push
mov
sub
int3
test
push
jnp
lea
pop
mov
xor
fwait
in
cmc
mov
cltd
cwtl
or
add
mov
insl
push
push
test
lea
mov
mov
push
xor
push
mov
dec
insl
stos
pop
sbb
or
push
out
jmp
clc
cld
fistpll
or
push
pop
jbe
int3
cmp
cmp
mov
push
lods
leave
hlt
and
test
or
and
dec
sub
fs
pop
call
pop
scas
vunpcklpd
mov
movsb
aaa
dec
sub
dec
shll
adc
aad
addr16
stos
in
pop
mov
fabs
pop
cmp
outsl
aam
stos
js
mov
adcl
clc
mov
pop
ss
or
xchg
rclb
pop
lea
add
adc
lock
jns
aam
xchg
mov
xchg
pop
aaa
mov
mov
lahf
rcrb
rclb
out
sbb
xchg
in
call
or
add
movsl
arpl
lds
push
mov
mov
mov
mov
xchg
rcrl
sbb
xor
dec
mov
mov
cld
leave
fdivs
xor
mov
push
jg
cmpsl
lcall
ret
cld
pusha
mov
mov
and
fdivl
cld
xchg
push
mov
cmpsl
in
mov
push
jno
mov
xchg
in
rorl
jge
push
inc
lock
pop
lea
fistpl
pop
call
dec
pop
rcrl
or
addr16
cmpsb
inc
lahf
mov
dec
cltd
pop
enter
inc
repnz
lret
mov
stos
sahf
xor
cwtl
inc
xchg
push
inc
push
adc
sbb
push
gs
imul
and
pushf
loop
in
shl
mov
insl
sahf
cwtl
ret
scas
in
jnp
lods
jmp
xchg
lret
inc
xlat
mov
rcrb
lahf
lcall
dec
xlat
jnp
popa
test
sbb
add
les
clc
inc
xchg
mov
insb
cmp
dec
arpl
std
addr16
cmpsb
insb
stc
xor
addb
outsl
out
push
ds
int
xor
fcmovu
jle
inc
push
cs
fisttpll
data16
mov
test
rcr
pop
fwait
xor
rclb
stos
enter
or
rcrl
bound
inc
jae
xor
aam
or
shll
jo
adc
xchg
rcll
jmp
shld
in
mov
stc
xor
dec
push
push
xchg
xchg
imul
negb
mov
pop
push
gs
ficoml
xor
fistl
sbb
and
mov
and
ret
sub
sbb
aam
dec
adc
push
mov
pop
jecxz
mov
ret
pushf
cmp
mov
ja
sbb
jg
lcall
xor
add
and
xor
fucomip
bound
mov
nop
jo
inc
js
pop
cmpsb
fs
andl
adc
add
test
ja
jg
addr16
adc
dec
mov
and
in
pop
andl
xor
dec
sub
je
hlt
fisttpll
xor
adc
notl
mov
cmp
push
xchg
loopne
xchg
pop
push
push
and
xchg
adc
xchg
iret
mov
sbb
jl
call
aaa
cmpsb
pop
rorb
add
mov
push
shll
add
push
mov
adc
cmp
cmp
loopne
xchg
lods
pop
daa
mov
xor
push
push
and
sbb
sahf
jge
mov
es
out
and
clc
sahf
leave
cli
sbb
xor
bound
xor
or
inc
mov
xchg
lea
stc
adc
ret
movsb
push
sti
sti
test
xor
mov
leave
movb
rol
pop
and
add
or
dec
xchg
push
out
jmp
add
xchg
ljmp
mov
test
adc
lds
leave
bound
jmp
add
push
jmp
push
mov
or
xchg
inc
lock
and
dec
adc
mov
sahf
test
jecxz
jb
das
push
aad
icebp
movsb
mov
data16
stos
sub
add
inc
arpl
jne
pop
push
call
pop
aam
add
out
mov
xchg
jne
xorl
aam
addr16
jno
test
add
cmp
lret
sub
ret
adc
mov
inc
cmp
int
push
push
dec
pop
mov
js
in
dec
sbb
ds
rorb
imul
push
mulb
dec
inc
sub
inc
loop
inc
jle
call
adc
push
mov
push
pushf
mov
xchg
jb
leave
dec
outsl
repz
jle
xor
std
pop
sbb
mov
sbb
sbb
inc
push
arpl
in
jae
add
cmp
insl
setle
mov
mov
pop
es
stc
and
add
addr16
rcrb
arpl
push
mov
loop
cwtl
lods
mov
movsl
sub
add
outsl
pop
mov
outsl
mov
push
out
pop
inc
jo
movsb
jp
shll
mov
adc
jnp
inc
xorl
lret
repz
push
imul
jmp
xchg
frstor
das
je
cld
push
imul
mov
push
jnp
inc
adc
lods
div
test
testl
mov
lds
adc
lea
xchg
test
icebp
push
mov
and
and
mov
cltd
sub
in
pop
pop
push
xor
xor
leave
xchg
sbbl
sbbb
sbb
test
jns
xchg
insb
rcr
std
popa
shll
and
jp
xchg
mov
mov
std
jne
or
icebp
lahf
pop
mov
sub
hlt
and
das
dec
adc
out
push
and
add
rcrl
jbe
push
int3
jns
xchg
lea
add
test
cmpsb
popf
ljmp
rorl
fdivrl
es
cmp
daa
cs
lahf
cmp
sub
fxtract
xchg
mov
xchg
test
inc
cmpb
jno
push
nopl
xchg
or
adc
ljmp
jmp
or
aas
cs
or
sbb
aas
push
add
sbb
xchg
sub
pop
aas
sub
add
cs
rorl
mov
jo
or
push
mov
nop
mov
inc
insb
loopne
push
pop
int3
ja
lods
sahf
dec
out
bound
int
gs
clc
xchg
mov
pop
pushf
mov
mov
xor
pushf
and
mov
dec
aaa
cmpsl
xor
inc
call
dec
cmp
imul
xor
lods
jnp
pop
mov
sbb
lea
mov
test
cs
mov
sbb
test
gs
fimull
test
adcb
shll
jg
scas
lcall
rcrl
push
mov
mov
shll
cmpsl
aas
push
jns
push
pop
ds
xor
stc
sbb
cltd
pop
cmpsb
je
aam
sub
lret
or
outsl
pop
or
int3
es
inc
dec
arpl
in
mov
mov
xchg
pop
je
pop
jp
mov
sub
enter
add
inc
mov
jo
mov
pop
or
mov
jb
mov
xor
sbb
sahf
push
or
xchg
and
sbb
into
mov
je
xchg
adc
adc
mov
jbe
insl
adc
inc
mov
sub
push
decb
push
xchg
add
pop
dec
jb
fwait
sti
mov
add
mov
pushf
loope
jno
mov
std
dec
enter
sbb
dec
or
inc
pop
adc
or
repz
lahf
pop
jl
ficomps
push
cmp
or
jp
and
push
fwait
xor
inc
sub
loope
je
es
cwtl
lds
cmp
push
lock
mov
out
xchg
pop
loopne
fnstcw
lret
cmpsl
inc
or
mov
fcmove
cmp
in
cmpsb
clc
push
and
xchg
sub
xchg
lock
add
test
in
cli
add
fldt
cwtl
sub
inc
cmp
imul
push
push
lahf
xor
in
rorb
dec
js
fsub
int
push
stc
mov
dec
push
lret
bound
and
add
sbb
mov
or
sti
dec
mov
pop
fwait
push
outsb
sub
sti
sub
cld
push
xchg
jle
add
rol
sub
repnz
fidivrl
call
xchg
jne
in
and
push
xchg
je
mov
gs
daa
lods
xor
fadd
popa
int
xchg
mov
sub
jnp
jae
jp
mov
into
pop
jmp
js
fdiv
add
clc
stos
add
imul
sub
fucom
mov
mov
leave
ss
scas
daa
enter
test
repnz
cltd
pop
sub
mov
jmp
push
jbe
enter
inc
pop
inc
and
jge
bound
ljmp
lret
mov
outsb
mov
mov
mov
or
lods
push
insb
jl
cmp
ret
addr16
or
pop
loopne
je
jmp
add
sub
stos
mov
test
sub
ljmp
cmp
jg
test
sub
jmp
std
push
mov
cmp
adc
inc
sarl
add
pop
push
mov
dec
call
sahf
cmpsb
jecxz
std
jle
mov
scas
sti
sbb
pushf
cmpb
adc
push
shll
stos
fistpll
push
je
dec
and
or
lods
addl
inc
inc
inc
fldt
inc
int3
dec
pop
cmp
movb
into
add
xchg
inc
stc
cmc
in
or
or
rorb
shll
push
and
in
or
or
subb
cmp
fwait
xchg
and
or
push
js
and
addr16
mov
pop
sbb
ret
daa
pop
sbbl
aam
les
cmc
maxps
mov
sbb
cltd
push
out
sbb
shlb
mov
cmp
and
aaa
mov
adc
jbe
mov
cmp
xchg
popa
push
mov
fsubp
testb
arpl
xor
ret
fisttps
mov
inc
mov
sbb
mov
loope,pn
or
sub
inc
adc
fwait
imul
sahf
ljmp
mov
loop
xchg
jle
xor
add
pop
and
mov
hlt
xacquire
inc
lret
fidivrs
jo
faddl
cmpsb
sub
add
das
hlt
in
sbb
push
stc
ficompl
inc
push
dec
idiv
lock
out
adc
mov
jne
movsl
jno
rcll
jp
lock
jbe
and
nop
pop
sahf
pop
cmc
ljmp
cltd
addr16
jl
std
loopne
sub
inc
ja
adc
jno
dec
pusha
or
and
push
mulb
ret
lods
mov
mov
in
add
jns
push
pop
mov
lcall
out
fldcw
aas
aam
out
les
inc
mov
jge,pn
xchg
nop
add
jp
fdivrl
lret
int
push
sbb
fistpll
mov
xchg
adc
jecxz
fst
cmpsb
xlat
dec
imul
nop
mov
cmpsb
dec
xor
push
jecxz
sbb
xlat
mov
sbb
dec
lea
sbb
jns
out
sub
andl
xor
aad
mov
decl
mov
les
push
jns
xor
adc
dec
cmp
mov
push
sub
jmp
adc
cwtl
and
fwait
fs
add
push
fs
inc
pop
mov
inc
mov
int
pop
push
aas
mov
xchg
push
push
cmp
pop
cli
popf
aad
push
in
pusha
das
sar
mov
repnz
mov
or
lret
jmp
mov
fs
mov
movsl
scas
icebp
idivl
popf
xchg
stos
insl
push
push
xchg
sub
sub
sti
stc
cmc
push
pop
xor
bound
add
out
enter
sarl
jne
pop
xor
dec
adcl
sbb
jg
filds
dec
int
dec
lods
pop
fwait
shlb
add
fdivp
imul
es
stos
ficoms
icebp
xchg
push
xchg
push
adc
adc
and
shll
stos
adc
add
xchg
dec
out
mov
jo
imul
jno
xchg
cmpsb
cwtl
pop
jo
inc
cmc
scas
movsl
hlt
cmp
shrb
dec
iret
mov
stos
lock
pop
mov
fs
fwait
inc
imul
or
sub
pop
mov
loope
rcrb
cli
repnz
adc
sbb
test
out
jo
adc
dec
sub
fdivl
das
popf
sbb
sub
gs
cs
xlat
cmp
xor
mov
cli
push
ja
scas
jecxz
addr16
loope
mov
loopnew
lahf
mov
stc
addr16
lds
mov
loop
repz
int3
and
mov
push
mov
clc
sub
and
cmp
adc
push
cs
rep
int
sbb
movsb
pushf
sub
jge
push
push
jge
adc
cmp
adc
test
lea
inc
xchg
add
push
inc
ss
or
inc
pop
in
jecxz
dec
sahf
ret
mov
ss
xchg
push
mov
and
in
insl
xchg
push
xlat
xchg
jbe
sbb
lock
and
sti
push
jl
ljmp
out
cmpsl
push
in
repz
jae
mov
and
xchg
sar
lock
xor
push
ret
pop
pusha
ret
mov
push
out
inc
loopne
popa
lahf
lods
cmp
in
lret
xchg
mov
push
adc
or
mov
sbb
xchg
mov
adc
add
inc
fsts
aam
xchg
inc
pop
out
cmp
xchg
js
cltd
jns
sar
inc
pop
add
fisubl
sbb
imul
adc
add
push
dec
stos
mov
out
pop
cmc
sub
pushf
shl
fmuls
std
bound
sti
gs
neg
fwait
ja
push
mov
mov
push
mov
xchg
sub
iret
sahf
mov
cltd
dec
jge
loop
xchg
lret
aaa
add
in
add
mov
pushf
mov
inc
cmpsb
add
inc
lea
orb
adc
lds
lock
cmp
test
xchg
push
push
push
negl
pusha
sahf
sahf
xchg
mov
dec
lds
cwtl
jg
into
shlb
ja
cmp
inc
mov
movsl
pop
int3
mov
push
cwtl
aad
dec
jp
je
ret
ret
lcall
test
xchg
or
jg
push
sbb
push
shll
push
pop
or
jmp
inc
xchg
jbe
out
repnz
movsb
les
lret
les
lds
xchg
cmp
aam
popa
or
mov
mov
ds
xor
fwait
or
add
mov
cmp
incb
rcr
call
jp
jl
and
add
test
addr16
sub
pop
ficompl
je
aad
and
arpl
cltd
inc
dec
mov
roll
cmp
pushf
repnz
mov
sar
mov
jg
cmp
test
aad
push
push
dec
xor
stos
in
lahf
sub
cmove
xchg
adc
mov
cmpsl
pop
cmp
xchg
push
lret
push
nop
sbb
in
stos
cmp
lret
xchg
xchg
inc
int3
scas
inc
inc
mov
or
sbb
in
fs
jl
adcl
outsb
and
cmp
data16
inc
aas
mov
fbld
cmp
jmp
pusha
ljmp
loopne
shrl
fstl
push
aaa
ljmp
fistps
inc
lock
mov
and
test
lods
in
lods
ss
and
int3
in
mov
jecxz
sub
gs
sbb
repnz
cmpsb
dec
and
jae
clc
mov
cmc
mov
pusha
mov
push
dec
push
fwait
addb
fimuls
ds
stos
pop
dec
xor
cmc
cmp
jbe
push
into
dec
cmc
sarb
pusha
xor
lahf
je
sub
xchg
in
add
mov
loope
pop
pop
push
push
mov
movsb
out
cmpsb
cli
cmp
loopne
inc
mov
imul
adc
inc
push
xchg
rcll
std
je
adc
pop
popf
in
cmp
mov
xchg
push
xlat
jecxz
lcall
mov
jns
xchg
lret
jmp
and
mov
rorb
xor
popf
xchg
sub
pop
mov
jge
add
mov
xchg
loopne
add
jl
or
add
mov
sub
es
inc
fcompl
lahf
mov
mov
cli
jmp
jae
inc
adcl
and
notb
and
mov
daa
cmp
dec
pop
mov
cmpsb
pusha
add
outsl
jno
inc
mov
hlt
lods
daa
pop
mov
aad
lds
dec
add
jae
pop
cmp
mov
xor
or
rcr
mov
faddp
pop
andb
adc
das
and
sub
cwtl
sub
imul
sar
enter
mov
jg
push
pushf
push
mov
icebp
les
mov
push
imul
js
repnz
inc
into
fstpt
sbb
fs
dec
mov
mov
inc
int3
push
mov
and
mov
outsb
sti
shl
push
fstl
fdivrl
and
jle
jb
pop
push
fnstenv
jecxz
lahf
xor
dec
decl
push
pop
aam
mov
sub
pop
jns
ss
shll
mov
lock
and
notl
testb
aad
fldcw
xchg
enter
popa
mov
fidivs
add
inc
cmp
xor
into
iret
or
add
and
sahf
push
jecxz
btc
in
adc
xchg
and
iret
outsb
mov
xor
loope
shlb
jge
loopne
dec
das
cwtl
and
loopne
dec
fldenv
mov
ss
adc
sbb
push
rcrl
jbe
adc
mov
cwtl
inc
inc
ret
jb
test
dec
inc
jae
inc
and
out
cli
lret
imul
mov
shrl
fwait
lret
pop
mov
je
mov
xor
inc
mov
mov
add
repnz
inc
dec
fildl
inc
shrb
aad
sub
popf
outsl
jns
pop
mov
mov
xlat
inc
iret
lea
imul
sub
pop
in
push
xchg
adc
push
push
lods
stc
pushf
and
and
pop
mov
add
iret
jbe
je
in
sti
pop
sub
clc
movsb
add
popa
scas
sub
hlt
jne
and
jle
or
pop
cmpl
ret
hlt
or
outsl
fwait
jns
mov
fidivs
push
aam
jne
jnp
inc
shrb
je
and
lods
xchg
loopne
test
pop
xchg
mov
das
pusha
pushf
out
inc
adc
fcompl
jne
int3
pushf
dec
faddl
xchg
mov
mov
cs
fistpll
mov
lock
push
inc
shr
dec
dec
sub
push
xor
lahf
stos
cmc
push
jge
jns
jmp
pop
fstp
scas
xor
mov
jecxz
pop
stos
adc
mov
mov
inc
or
ret
xor
lcall
mov
mov
pop
add
rcrl
dec
jg
mov
cli
ds
mov
lret
xor
dec
jle
mov
in
fwait
xchg
adc
nop
aad
xchg
jne
push
pop
stos
push
or
cmp
push
fwait
pop
mov
stc
and
xlat
je
loop
add
test
mov
lahf
adc
cmp
jb
adc
ljmp
call
push
xchg
sarl
fdecstp
popf
xlat
repz
call
aaa
ja
int3
inc
das
jge
lods
jno
andl
jns
and
leave
pop
jle
outsl
xchg
cwtl
add
dec
sbb
adc
imul
jmp
adc
es
movsb
jnp
push
xchg
rcrb
ret
rclb
xchg
fwait
or
cwtl
adc
insb
cmp
pop
pop
adc
cmp
loop
mov
mov
sub
pop
add
mov
push
cmpl
jns
notl
lods
sbb
pop
mov
or
lcall
cmp
sbb
mov
cltd
outsl
pop
jmp
loop
bnd
pop
and
xlat
fistpll
cmp
dec
sub
shll
adc
pop
mov
pop
cwtl
ficoms
dec
dec
inc
rolb
jl
xchg
insl
iret
in
clc
orl
jl
mov
ficomps
outsl
mov
adc
cmp
xchg
sbb
imulb
mov
xor
xlat
pop
push
and
mov
or
jmp
into
inc
xor
cmp
mov
xchg
cs
and
test
mov
mov
mov
hlt
insl
lds
mov
adc
push
ret
subl
aam
mov
cli
rclb
push
outsb
mov
pop
inc
xchg
mov
xchg
jb
in
shll
or
aas
dec
jp
testb
xor
push
pop
pusha
nop
cmp
cmc
mov
jno
sub
fstps
push
xor
inc
push
add
mov
daa
addr16
das
jnp
std
pop
xchg
jo
bound
lods
push
sbb
shl
xchg
mov
int
fdivrs
push
aaa
popf
push
popf
push
jmp
cmpsb
adc
dec
and
fwait
or
test
sub
out
pop
test
cs
push
lahf
das
inc
test
je
push
ror
in
sbb
scas
outsl
push
fists
or
cmpsl
lret
or
mov
call
adc
push
std
dec
jle
test
mov
pop
movsl
out
lea
ljmp
jp
or
cmp
nop
roll
in
sahf
push
mov
andl
and
imul
mov
mov
int
and
xchg
pop
decb
jle
gs
mov
shll
and
xchg
pop
out
es
bound
jle
mov
adc
imul
pusha
cmpsl
mov
inc
mov
lds
je
shll
inc
cwtl
sbb
mov
das
cmpsb
inc
pusha
cmp
fwait
jg
fisubrl
stos
mov
cmpsl
nop
lds
sub
jns
jo
xchg
inc
aaa
jno
les
into
stos
ds
jge
mov
jl
cltd
push
pop
test
cmp
jle
xchg
mov
lret
push
iret
call
gs
fisubrl
sbb
cs
pop
imul
adc
popa
push
cmpsl
inc
inc
mov
sbb
cmpsb
test
and
lret
fiaddl
int3
shlb
adc
inc
cmp
jecxz
add
cmp
imul
std
cmp
out
dec
aaa
inc
xchg
push
inc
add
xchg
xchg
gs
ds
sbb
rol
mov
aad
cmp
stos
loopne
cld
das
pop
sub
cmc
cmp
ret
ja
mov
subl
insl
dec
push
xor
xchg
adc
xchg
clc
cwtl
in
xchg
bound
push
adc
sub
lahf
or
mov
jecxz
cbtw
xor
in
dec
inc
push
mov
push
add
xchg
hlt
mov
repz
add
daa
hlt
fcomip
push
int3
jo
test
sbb
jne
aad
mov
popa
or
ret
push
xchg
out
xchg
arpl
pop
xor
mov
mov
popf
fs
mov
psubusw
int
and
xor
imul
pop
arpl
ficomps
aad
jns
out
or
lods
in
sub
mov
cmc
dec
in
test
iret
rcll
xor
sti
push
stos
xor
dec
mov
sub
fsubrs
sub
pushf
cmpl
iret
imul
push
out
sub
and
lcall
cmp
mov
cmpsl
sub
lcall
scas
outsb
cld
cmp
jno
cld
out
xor
in
into
or
add
mov
lods
ret
fsub
inc
mov
mov
int3
imul
inc
push
sarl
ds
adc
xlat
cli
lods
jge
popa
jo
outsl
das
mov
pop
sub
adc
cmp
out
jo
add
stos
adc
out
pop
enter
aaa
shlb
stc
sbb
and
fnstenv
loop
fiadds
out
mov
aam
popa
mov
xchg
cmpsl
pop
pop
mov
push
inc
punpckhdq
mov
aad
fwait
sahf
clc
xor
imul
xchg
addr16
sbbl
cmp
lahf
lret
cmp
sbb
movsl
and
ret
dec
push
add
cltd
jns
inc
ds
or
xchg
nop
outsb
mov
lea
inc
cmpsb
lds
jae
fsub
mov
xchg
scas
pop
das
inc
or
movsl
imul
add
sahf
mov
xor
mov
loopne
sbb
vsqrtps
xor
mov
xor
loop
xchg
and
fimull
pop
xchg
or
and
outsb
and
dec
stos
mov
leave
addr16
xchg
cmc
lods
ja
lods
in
imul
ds
cltd
add
push
aam
clc
imul
lds
sbb
add
push
fcoml
sti
xor
je
xchg
and
push
mov
adc
push
xor
fwait
push
movsb
xorb
inc
ja
outsb
mov
pop
sub
shl
bswap
jle
fidivs
aad
enter
xchg
icebp
or
fwait
imul
mov
xor
xchg
daa
jae
in
or
dec
std
clc
inc
mov
in
dec
and
dec
inc
dec
sbb
cmc
out
inc
pop
mov
addb
sub
push
outsl
enter
xchg
daa
cmp
cs
pusha
or
movsb
dec
cmp
orb
add
loopne
cmc
test
cs
or
sbb
pushf
lds
aad
lods
xor
in
adc
repz
cmc
xchg
and
inc
jbe
arpl
mov
jle
adc
push
ret
mov
movsb
fnsave
imul
pop
xchg
out
push
mov
daa
dec
and
cmpsl
dec
je
jecxz
stos
xchg
add
sub
addr16
mov
dec
scas
pop
jp
dec
pop
loop
mov
mov
adc
lods
shr
movsb
ja
inc
adc
mov
mov
cwtl
in
int
idivb
xor
lret
sbb
fbstp
xor
push
test
push
inc
testb
mov
cwtl
mov
push
push
leave
mov
push
sub
sub
xor
inc
ja
lods
das
lods
into
pop
test
outsb
xchg
jns
or
and
shrd
and
loope
imul
push
or
sbb
test
xor
add
dec
int3
and
pop
push
or
js,pt
das
dec
xor
add
js
int
xchg
mov
sbb
mov
sbb
push
adc
insb
mov
sbb
push
pop
rcl
xchg
out
stc
in
mov
inc
inc
out
test
js
jl
push
cli
xor
pop
and
or
push
inc
jbe
jnp
xchg
pop
leave
or
fdivs
iret
adc
adc
movsb
dec
test
rol
xor
repz
jge
cmp
rcrb
inc
push
outsl
mov
inc
sub
js
and
xor
or
dec
jecxz
out
adc
mov
mov
fs
fdivrp
fnstcw
mov
sahf
das
cwtl
ja
jecxz
mov
aad
mov
fsubrs
lret
outsb
pushl
and
xorb
ret
and
aad
cmp
sub
lock
xor
xchg
rcl
int3
sbb
lahf
loope
addb
insb
xchg
and
into
mov
mov
push
punpcklbw
fstpl
fnstsw
inc
call
or
pop
rclb
or
dec
sbb
loope
jno
mov
and
dec
xchg
adc
popa
push
fisttpll
mov
ja
mov
or
pusha
scas
popa
cmp
cli
xchg
inc
push
stos
rclb
dec
addr16
pop
divb
mov
jecxz
in
int3
adc
mov
in
mov
rcll
push
mov
popa
dec
pop
setne
or
jns
les
adc
ret
aas
sbb
data16
dec
mov
scas
lock
mov
ss
sbb
rcrl
mov
push
pop
xor
aas
or
add
mov
adc
gs
out
divb
mov
dec
outsl
daa
mov
mov
cltd
xlat
pop
or
xchg
rorl
ret
fsubr
sbb
mov
and
mov
mov
sbb
in
hlt
daa
fiaddl
adc
rcrl
xor
dec
ja
xchg
lods
adc
adc
cltd
adc
sbb
fndisi(8087
in
sarb
xor
mov
mov
cmpsl
mov
cmp
shlb
fstps
insl
ss
push
data16
inc
std
sbbb
stc
push
stos
cmp
lret
push
and
cmp
push
jle
jae
fistl
jbe
pop
jnp
sub
pop
sbb
xlat
int
pop
add
leave
mov
pop
pop
lahf
mov
mov
xchg
testl
sbb
push
dec
aas
dec
aam
cmpsb
push
cmp
loope
push
repnz
ljmp
or
ljmp
popf
mov
or
inc
mov
sbb
scas
pushf
push
sub
les
and
xor
xchg
add
test
ja
push
call
cwtl
mov
sub
sahf
lret
imul
mov
push
repz
inc
loopne
and
xchg
xchg
add
daa
mov
mulb
lods
jns
fwait
notb
push
or
xchg
dec
adc
int3
out
js
inc
mov
mov
mov
sbb
push
call
jns
ret
pop
mov
xchg
xchg
xor
cmp
mov
cmp
cmp
jmp
or
es
subb
insl
inc
outsl
icebp
xlat
lods
push
push
jge
cli
mov
aaa
mov
jno
mov
fistpll
xchg
xlat
mov
sub
je
test
fistl
mov
xor
push
arpl
jno
sti
jp
push
inc
test
add
cvtpi2ps
int
xchg
fadds
lahf
lods
nop
inc
ljmp
lea
adc
push
and
push
cmp
push
cmc
rcrb
xchg
inc
mov
sub
jbe
out
dec
xchg
stos
popa
icebp
mov
fildll
jbe
ret
data16
rclb
sbb
mov
and
pushf
sbbl
lods
dec
sbb
push
xchg
add
sbb
xor
mov
xlat
jb
jae
out
push
pushf
xor
mov
or
cmp
sbb
test
push
and
ljmp
jns
add
push
mov
pop
cmp
rorb
and
ret
and
push
fadds
xlat
cmp
cmpsb
loopne
sbb
repz
imul
mov
jnp
iret
cli
xchg
mov
xchg
adc
mov
cmp
enter
xchg
ljmp
push
mov
in
in
mov
xor
jb
scas
lock
lods
cwtl
lea
stos
or
icebp
inc
mov
xchg
sti
add
and
inc
push
dec
adc
out
mov
fimuls
and
inc
rorb
cltd
fildll
sti
mov
sahf
in
mov
mov
sbb
hlt
sub
add
rep
jmp
in
in
insb
fwait
jae
das
cmpsb
sbb
out
dec
xchg
inc
xchg
int
out
call
insb
leave
fnstsw
scas
pop
jmp
mov
xor
ja
in
inc
test
mov
arpl
mov
decl
addr16
cmc
and
cmp
movsl
push
or
ss
xchg
mov
add
stc
adc
push
or
xchg
scas
into
aas
in
shl
shl
sub
mov
inc
outsb
sbb
aas
jno
push
mov
pop
sbb
inc
cmp
imul
cmp
xchg
dec
ret
mov
cld
test
xlat
les
push
scas
pop
mov
push
jo
cmpb
test
xchg
lcall
sbb
and
outsl
lret
repz
das
push
orb
mov
aam
inc
aas
aam
adc
pop
jns
les
mov
push
xchg
inc
xor
repz
in
mov
xchg
sub
dec
xchg
xchg
inc
in
fs
jge
iret
clc
int3
hlt
and
pushf
outsb
adc
and
mov
and
das
daa
mov
mov
xor
add
or
xor
arpl
pop
lods
or
std
cmpl
adcb
test
adc
add
xor
lock
inc
sub
jl
xor
cs
jmp
cli
ds
popf
push
sub
jmp
call
inc
sbb
shrb
xchg
adc
sub
sub
dec
adc
mov
into
cmc
mov
test
cmp
jno
push
fs
add
sbb
mov
clc
cli
ret
inc
dec
rorb
sti
idivb
adc
push
jo
or
jbe
daa
jno
push
repz
jg
shl
mov
inc
test
icebp
or
mov
ret
rclb
test
jae
xchg
out
adc
data16
push
cld
xchg
jp
fcompl
loope
jge
sti
cmc
aaa
adc
inc
sbb
sahf
sahf
fsubrl
sbb
fwait
divb
xor
mov
aam
jmp
mov
cwtl
stc
in
test
mov
xchg
pushf
dec
cmp
ret
cmp
jnp
out
lds
shl
lret
push
inc
enter
dec
js
insb
loope
sub
and
jno,pn
test
aam
pop
aas
fsubs
xor
test
mov
outsl
daa
dec
inc
mov
or
aad
cwtl
sahf
xlat
push
pushf
sarl
cmp
cmp
inc
pop
fcomp
sub
pop
test
in
fwait
dec
mov
loopne
or
loop
push
in
and
push
icebp
jno
add
dec
or
mov
jmp
pop
and
xchg
adc
mov
pusha
fcomip
xor
fnstsw
lret
push
xor
mov
sbb
jo
push
mov
cmc
test
and
xchg
dec
pop
sub
add
inc
xor
xchg
js
add
jecxz
cld
adc
mov
push
int3
jle
fdivs
and
mov
je
inc
fwait
cmpsl
fwait
pop
adc
xlat
pop
dec
pushf
xchg
push
outsb
in
test
daa
fistps
dec
cmpsb
stos
dec
jmp
ljmp
sbb
mov
jmp
pop
insb
mov
outsb
pop
sbb
leave
jno
xchg
mov
mov
dec
mov
insb
test
or
lahf
scas
fsts
push
test
fmull
cwtl
movsl
push
mov
pavgw
and
scas
sti
popf
into
sbb
gs
mov
sbb
adc
adcb
pop
add
jbe
cmp
inc
mov
movsl
mov
lds
sub
movsb
pop
inc
sbb
mov
dec
enter
mov
push
xchg
adcb
inc
popa
mov
sbb
xchg
add
xlat
daa
aad
jge
outsb
movsb
mov
je
xlat
ret
push
mov
cld
add
in
sub
dec
pushf
mov
inc
stos
in
das
sbb
cli
mov
adc
leave
mov
cmovp
ret
sbb
test
stos
xor
stc
mov
sbb
mov
jo
in
jbe
rclb
xchg
adc
clc
xchg
sbb
mov
push
ja
mov
enter
mov
popf
ficoml
divl
nop
loop
stos
xchg
add
cld
popl
test
adc
mov
sub
fidivrl
sub
imul
scas
pop
and
add
lods
sub
addr16
or
pop
inc
orl
xchg
lods
mov
xchg
jbe
nop
add
sub
adc
jbe
jl
push
push
mov
pop
sub
xchg
pop
loop
xor
inc
jb
inc
inc
outsb
mov
push
loopne
into
in
ljmp
loop
les
cmc
test
sbb
push
outsb
leave
jp
push
add
addr16
loop
es
sahf
inc
sarl
je
stos
jl
mov
loope
cmp
roll
pop
jp
es
sub
push
mov
cs
sub
repz
cli
ret
inc
jns
fistpll
pop
in
ret
xchg
dec
mov
mov
xchg
int3
pop
cmp
cmpl
andb
lods
push
xchg
add
mov
mov
push
in
inc
mov
clc
mov
ljmp
cmp
jecxz
sub
mov
mov
xchg
shlb
and
jmp
repnz
pop
dec
and
pop
sub
mov
sahf
stos
push
dec
loop
adc
insl
in
insl
ds
push
test
xor
jnp
pop
add
icebp
jle
inc
xor
das
adc
js
cld
push
loope
hlt
rorl
add
aas
push
jl
adc
jo
shl
outsb
or
push
fistps
lret
gs
dec
or
test
test
outsb
mov
ja
imul
xchg
adc
xor
test
pop
jno
inc
outsl
mov
shl
leave
sti
daa
inc
mov
mov
push
shlb
stos
call
xor
push
lret
dec
xchg
test
or
pop
add
cmp
mov
clc
test
or
add
jae
push
push
jg
jns
adcb
in
xchg
adc
fbld
in
cmp
scas
cwtl
pop
push
jns
sahf
test
and
dec
shll
pop
inc
push
aam
out
flds
in
sbb
std
ret
pop
inc
aad
rcrl
ret
mov
pop
popa
xor
orb
sbb
mov
sbb
iret
add
dec
pushl
mov
push
jge
sbb
movsl
push
mov
adc
push
xor
sub
pop
jg
push
mull
jl
xor
and
dec
jle
cmp
sti
shll
push
nop
adc
aad
lret
xor
aam
test
pop
jae
xor
lret
fs
cmp
lods
add
insb
test
jb
xor
fbstp
jno
out
sti
pop
stos
je
cmpl
out
add
inc
jle
push
xor
lods
lahf
cmp
pop
mov
add
cmp
mov
push
sbb
xchg
mov
ss
dec
xchg
iret
aam
ret
jo
jmp
cmp
mov
add
mov
jl
fwait
cmp
hlt
aad
add
in
xor
test
lret
lret
call
lods
lock
imul
into
cld
push
popa
jg
sbbb
clc
dec
xor
pop
mov
jb
insb
decl
push
pop
pop
sar
cmp
push
sahf
cld
and
or
lock
inc
and
mov
loop
lahf
cwtl
xchg
fdivrl
mov
mov
push
int
je
mov
mov
jne
cmp
push
mov
aam
adc
dec
or
xorb
fisttps
cwtl
ljmp
sbb
mov
or
call
and
mov
inc
es
xchg
out
dec
mov
sub
in
xchg
stos
pavgb
lea
lcall
push
ja,pt
out
or
and
mov
or
lahf
ljmp
pop
push
inc
imulb
cld
ss
scas
adc
mov
inc
adc
test
dec
pusha
xor
aaa
pop
mov
mov
mov
xor
ja
dec
push
andb
and
xor
test
fsubrl
push
es
mov
divb
cmp
aas
dec
jne,pn
sti
repnz
push
negl
lock
pop
xor
xchg
add
inc
pop
sub
daa
fists
subb
ss
jecxz
dec
dec
es
scas
ja
cmp
insb
add
or
lret
lea
cmpsb
in
cmc
xlat
mov
push
or
das
je
mov
sti
rol
pop
jp
mov
ds
test
int3
pop
mov
shll
mov
ret
adc
or
and
cmp
sub
mov
jbe
sub
pop
add
push
gs
mov
adc
inc
jne
pop
mov
pop
mov
or
cmp
out
dec
in
pop
mov
push
mov
test
jmp
dec
dec
cmpsl
arpl
into
lret
inc
inc
sbb
fcmovb
push
loope
mov
add
mov
inc
inc
sub
mov
shl
ret
add
dec
adcl
push
pop
dec
lret
add
ja
and
ljmp
bnd
jge
in
xchg
mov
imul
jmp
loop
lahf
bound
lods
pop
mov
adc
dec
nop
sahf
jns
mov
rorb
jp
addb
add
fisttps
int
pop
popa
fs
xchg
sbb
sbb
xor
push
mov
or
out
or
pop
decb
xor
mov
push
int3
mov
stos
adc
xchg
dec
add
es
pop
ret
or
add
addr16
mov
mov
pop
addl
rolb
lret
mov
or
jae
xlat
dec
xchg
hlt
movsb
sti
xor
shl
mov
dec
or
push
lahf
aad
jl
xchg
aas
push
sub
into
repz
xor
stos
sbb
xchg
jnp
inc
sti
add
jns,pn
push
lret
dec
nop
sub
roll
les
pop
inc
mov
or
cmp
repnz
xchg
repz
mov
loop
xchg
pop
rcr
ljmp
call
jp
js
inc
repz
dec
cmp
adc
fisttpl
ja
and
jp
mov
fs
jecxz
rol
or
fstl
imul
jae
movsb
out
outsl
sub
ret
rcll
mov
jle
or
xchg
les
test
stos
adc
pop
inc
lock
clc
arpl
test
lock
fldl
data16
lret
jb
push
cltd
add
mov
je
lret
sahf
inc
xchg
jae
repz
or
imul
push
mov
repz
pop
out
pop
mov
jecxz
insl
inc
insl
fcmovb
xchg
testl
pusha
mov
leave
xchg
into
gs
mov
inc
adc
movsb
cmp
mov
dec
mov
xor
or
mov
imul
mov
pop
aam
sbb
adc
inc
hlt
popa
push
stos
push
das
sbb
test
mov
cs
pop
push
jo
mov
or
cmpsl
dec
jl
jbe
test
adc
xor
scas
mov
or
or
cmp
pop
repnz
insb
nop
dec
mov
jp
or
pop
jnp
mov
push
out
sti
cltd
add
push
inc
xchg
cld
in
out
cmp
push
outsb
nop
mov
pop
adc
jmp
pop
adc
mov
mov
dec
dec
es
leave
mov
push
sbb
and
push
push
sbb
jb
jle
sub
fcomip
out
xor
lcall
sbb
and
popf
js
aas
aad
xchg
xchg
mov
or
daa
adc
or
lret
aaa
test
xor
pop
loope
mov
sbb
aam
out
sub
cmpsl
arpl
int3
inc
sbb
rorl
xlat
shlb
jbe
into
idivb
add
ret
cmpsb
cmpsl
and
pop
mov
cmp
xor
arpl
mov
jmp
loope
ds
arpl
or
and
jp
imul
sub
push
ds
lahf
mov
lock
rorb
outsl
aaa
sbb
cmc
into
int
cmp
aaa
mov
mov
cwtl
jo
out
cmp
imul
and
xlat
sub
and
fucomi
nop
xchg
std
bound
jb
in
pop
adc
mov
adc
adc
pop
cmp
icebp
cmovp
xchg
push
cli
jecxz
std
std
inc
jbe
ljmp
cmp
clc
loop
mov
lods
and
inc
xlat
testl
pop
add
xor
das
les
les
and
mov
adc
mov
cmp
mov
testb
push
and
dec
xchg
mov
push
lahf
loopne
add
scas
jge
faddl
sbb
orl
repz
dec
movsl
je
leave
pop
in
sarl
rclb
cltd
adc
mov
cmp
pop
jp
nop
pop
xchg
jge
jae
cmp
int
or
cltd
mov
push
and
fwait
rorb
aam
inc
or
pop
rclb
sub
idivb
icebp
in
stos
xchg
cld
mov
pop
mov
das
xchg
mov
xor
loope
test
jns
and
push
andb
aad
enter
cmp
mov
sbbb
aas
repz
iret
xor
mov
or
loope
push
xor
xchg
xor
dec
je
test
add
sbb
jmp
mov
add
imul
bound
icebp
aaa
loope
or
adc
or
shrl
sub
cmp
cwtl
inc
mov
in
push
pop
mov
pushf
subl
loope
addl
pop
loop
shlb
or
cmpsb
push
sbb
xchg
imul
inc
sub
fnstenv
jb
fcomi
xor
push
out
fsubrl
lea
xchg
cli
into
icebp
hlt
pop
loopne
pop
in
pusha
push
mov
mov
cmp
dec
add
out
sbb
pop
stos
jmp
cltd
popf
dec
push
scas
jnp
enter
adc
fbstp
push
add
push
pop
outsb
push
stc
enter
hlt
jp
add
dec
cs
lret
and
lret
pop
leave
dec
inc
add
xorl
notb
ja
add
jne
stos
cmp
add
cmpsl
dec
and
fsubrs
dec
mov
ljmp
loop
inc
cwtl
neg
push
mov
hlt
sbb
jge,pn
outsb
scas
pushf
jns
mov
lods
addr16
mov
mov
decl
pusha
xlat
mov
lds
rorb
push
repz
test
test
stc
add
and
inc
dec
mov
push
mov
sbb
das
inc
push
adc
sub
mov
inc
stos
mov
test
test
fidivrs
nop
int
hlt
mov
jge
int3
push
mov
fadds
cld
sbb
push
xchg
cmp
push
test
icebp
icebp
cli
ficoms
out
movsl
lahf
jae
ljmp
jne
jl
iret
subb
xor
adc
or
bound
push
es
cld
xor
das
loope
push
popf
out
inc
jle
jmp
sbb
mov
pop
clc
mov
popa
ret
mov
jge
pop
cmp
orl
into
push
xchg
shlb
call
repnz
imul
sbb
jl
pop
cltd
shll
or
push
xchg
add
inc
jae
mov
out
test
push
adc
sub
cltd
dec
fnstenv
mov
es
push
pop
push
ficoms
xor
in
or
les
fsubrp
adc
sbb
jnp
hlt
arpl
movl
lcall
test
sub
mov
push
test
push
add
sahf
inc
es
dec
arpl
fiaddl
pop
sub
inc
cwtl
popa
addr16
movsl
das
adc
pop
xor
in
fisttps
out
mov
ficompl
mov
cmpsl
or
insb
scas
ror
daa
adc
and
and
xor
fdivl
roll
mov
xor
sti
in
and
xchg
jg
jno
push
dec
jns,pn
push
rcl
mov
stc
mov
or
or
int
cmp
cmpsb
adc
inc
lcall
mov
or
jns
cmp
mov
xchg
clc
fstpt
add
cmpsb
mov
bound
pop
cli
inc
sbb
aam
cmpsl
push
sbb
push
lcall
jae
inc
jmp
cld
ss
cltd
test
outsb
dec
jl
add
aad
orb
sti
jnp
das
cmp
aaa
pushl
clc
ficoms
jecxz
ficoml
pusha
repz
and
jno
sbb
popf
mov
mov
pop
mov
sbb
out
fisubrs
cwtl
std
xchg
mov
loopne
nop
enter
jne
xchg
mov
shll
xchg
and
aam
inc
bound
jp
jb
add
lock
gs
push
imul
inc
test
shrl
pop
sbb
add
ds
loope
int
loope
mov
mov
scas
das
push
xchg
jp
orb
push
xchg
mov
loopne
xchg
pop
aad
push
icebp
cltd
push
mov
cli
add
out
sbb
fwait
xor
xchg
xlat
inc
adc
adc
fwait
rorb
jnp
push
sarl
pop
icebp
cmp
cmp
movsl
cli
inc
xorl
push
cmp
insb
rolb
sbb
fidivrs
or
and
jg
imul
out
pop
sub
test
in
mov
push
mov
jge
sub
movsb
data16
jne
push
loopne
xchg
outsl
dec
aad
in
outsl
or
mov
push
imull
push
lods
mov
pop
lret
out
iret
sarb
mov
fildl
jg
sahf
pushf
lcallw
cmpsl
adc
xchg
enter
cmp
test
lahf
sti
addr16
add
jno
loopne
xchg
stos
sub
cmp
fmull
mov
xchg
push
das
xor
sub
cli
iret
push
mov
adc
mov
cltd
inc
movsl
pushf
mov
and
mov
dec
ss
inc
and
add
inc
les
test
movsl
sbb
adc
in
cs
loopne
loope
xchg
cmc
push
jmp
xchg
nop
jmp
xchg
sub
jmp
mov
fdivl
push
mov
repnz
repnz
test
cmp
cs
sti
mov
gs
outsb
push
lahf
dec
test
aam
shll
ret
push
jp
imul
test
ret
inc
add
or
jb
imul
mov
aaa
jnp
lock
inc
or
mov
outsl
popf
jg
mov
sbb
push
and
jno
mov
popf
xchg
xor
jp
int3
into
fistpl
xchg
sub
mov
add
mov
adc
nop
scas
rcl
cmp
nop
inc
dec
sub
sahf
pushl
test
dec
mulb
dec
aaa
mov
push
scas
dec
repz
test
add
sbb
lret
fimuls
les
jg
out
inc
adc
popf
push
push
mov
mov
or
add
sub
loope
push
dec
add
mov
decl
or
add
push
stos
jl
pushl
mov
sbb
cmp
mov
cmp
or
ficoms
xor
mov
sti
or
icebp
push
cmpsb
jg
xchg
pop
adc
cmp
sub
xchg
mov
dec
xor
and
inc
cmpl
and
jo
fldl2t
sub
pop
lahf
fnstsw
lahf
pusha
sub
divb
flds
push
push
sub
push
and
sub
push
add
ss
xchg
jg
sub
sbb
out
stos
jno
arpl
cmp
xchg
popa
push
ja
dec
xchg
dec
mov
cmpsb
insl
jp
int3
repnz
loope
mov
adcb
inc
mov
push
je
xchg
xor
cs
jecxz
mov
repz
inc
pop
das
fwait
cmp
sbb
push
int3
mov
negl
cmc
aaa
or
mov
int3
cs
loop
popf
shl
mov
adc
adc
fmull
xchg
sti
js
lock
cmpsl
scas
jns
add
cmc
dec
and
cltd
scas
mov
adc
pop
outsb
dec
mov
loopne
fdivp
dec
mov
aas
dec
lret
pop
rcrb
and
pop
das
xchg
inc
push
ffreep
in
inc
jb
fiaddl
nop
ds
xor
push
jns
popf
add
pop
push
cmpsl
into
ds
jbe
es
add
push
dec
and
xor
fnclex
or
jmp
sbb
nop
mov
cwtl
push
xlat
cmp
mov
loop
imul
out
push
cli
movsl
push
aam
test
pop
jnp
and
add
enter
cmp
pop
jo
or
jo
jp
xor
jmp
inc
jmp
ss
stos
stos
cltd
xchg
xor
das
jmp
ss
sahf
xchg
jmp
pop
rclb
sub
push
inc
jae
jmp
je
scas
xchg
add
mov
rolb
pop
addr16
mov
leave
sti
dec
xchg
cmpsb
or
in
and
cmpb
add
fs
int
xor
lea
test
inc
lret
sub
jnp
xor
inc
inc
pop
mov
inc
out
mov
xchg
sbb
jle
add
mov
gs
push
daa
in
icebp
jo
push
in
xchg
shll
iret
aad
repnz
bound
pushf
dec
sub
inc
sub
fs
lds
dec
or
mov
dec
insl
jno
or
mov
add
fs
xor
stos
add
push
mov
jns
mov
or
js,pt
lret
arpl
add
xor
mov
loop
notb
push
lock
ret
jle
pop
shl
adc
cmp
sub
adc
cmp
xchg
adcl
int3
ljmp
or
jp
idivl
pop
cs
ljmp
mov
jp
ret
test
loop
jb
imul
dec
inc
jle
lods
nop
adc
xor
out
jae
std
mov
cmp
out
rcrl
jg
cli
push
jg
inc
pop
pop
fstl
js
push
pop
xchg
scas
sbb
inc
imul
or
dec
sbb
pop
mov
push
xchg
mov
push
mov
xchg
data16
or
mov
sbb
insl
or
xor
jbe
lock
into
outsb
sbb
je
iretw
test
in
mov
cmc
dec
push
stos
push
repnz
shll
mov
mov
out
jae
adcb
sub
xor
lahf
sub
dec
sub
iret
icebp
inc
or
mov
mov
mov
loope
sub
push
mov
das
mov
adc
leave
or
lods
ds
fwait
out
push
mov
movsb
movsl
sub
jae
xlat
pusha
mov
push
and
loop
ljmp
test
push
cmp
inc
movsb
loope
mov
idiv
jp
and
and
and
and
test
in
jae
sbb
rcrb
jmp
pop
add
jae
or
adc
and
daa
xchg
std
fwait
popa
sub
scas
push
xchg
addl
mov
movsl
icebp
into
arpl
cmp
sub
mov
sub
xchg
js
mov
sbb
pushf
jmp
adcl
jge
jmp
mov
mov
mov
push
inc
mov
lret
mov
in
adc
jl
xor
jns
jp
lcall
mov
outsb
xchg
push
dec
mov
mov
xchg
int3
fsubl
push
or
aaa
dec
js
insb
inc
pop
lock
xor
clc
in
leave
xchg
in
mov
jno
mull
fisubs
xchg
pop
lret
aas
jnp
adc
and
mov
popf
mov
pop
sarb
stos
mov
and
das
mov
mov
insl
push
insl
bound
daa
mov
call
fdivrl
pusha
les
gs
or
cmp
scas
jge
lods
xchg
mov
shlb
fwait
and
mov
mov
or
mov
rclb
dec
mov
mov
mov
jne
xchg
mov
push
push
int
fisttps
dec
insb
loop
mov
sub
push
jecxz
push
add
repz
xor
xor
cmpsb
mov
mov
push
cs
mov
mov
sti
fcomps
and
adc
divb
cwtl
inc
daa
mov
pop
mov
push
xlat
jnp
pop
fistpll
sbb
test
fists
cmp
inc
fisubl
add
dec
cmp
ret
push
push
xor
cs
lahf
imul
insl
jns
nop
sbb
mov
mov
lcall
mov
jns
dec
out
mov
aaa
or
fs
mov
push
inc
xchg
test
enter
loope
xchg
pop
ss
loope
pop
in
xor
cltd
cmpsb
ret
cmp
in
pop
mov
push
xchg
sub
mov
mov
test
in
xchg
int
shr
push
inc
cmp
loope
cmp
xchg
pop
leave
xchg
shl
loope
into
lock
pusha
int
dec
icebp
sub
cltd
xor
shll
out
mov
imul
scas
sbb
xor
adc
loop
push
popa
push
xchg
mov
movsl
enter
in
sbb
xchg
xchg
call
push
ds
ret
sti
lods
mov
jnp
or
in
mov
aad
mov
push
js
out
das
sti
inc
clc
imul
mov
loopne
dec
mov
je
mov
jg
mov
push
lock
mov
push
mov
push
xor
lods
and
rcl
xlat
push
movsl
mov
call
jae
fwait
mov
sub
and
fcmovb
je
sbb
fldl
xchg
ret
dec
xlat
pop
inc
lahf
or
mov
push
movsl
popa
leave
repnz
enter
test
xor
clc
fs
push
adc
push
add
rolb
fistpll
fbld
mov
push
test
mov
stc
mov
outsl
push
cmp
and
cmp
imul
and
fs
aam
cli
jo
cmp
push
dec
and
jmp
lret
insl
sub
mov
test
jno
loope
cmc
jge
mov
xchg
pop
loope
cs
inc
movsb
sti
out
mov
and
add
or
stos
clc
sbbl
dec
xchg
add
inc
mov
jae
xlat
cmp
add
cmc
sbb
fists
lds
pop
mov
add
aas
mov
mov
mov
xchg
adc
stc
movsb
clc
mov
or
enter
adc
aas
xchg
adc
mov
rcr
lock
aad
int3
inc
mov
adc
in
lea
or
jl
push
add
mov
orb
and
and
movsb
clc
push
data16
in
or
loopne
fcoml
repnz
movsb
pop
or
jns
mov
repz
adc
pop
pop
adc
loopne
dec
fsubp
lret
adc
rorl
pop
mov
int3
jecxz
mov
enter
or
lret
sarl
push
cmp
jmp
dec
ret
mov
xor
inc
ret
addr16
push
repnz
addb
dec
jecxz
dec
js
adc
jmp
cmp
push
dec
and
mov
movsb
ss
imul
out
xorl
sub
lret
mov
std
test
mov
in
lcall
lea
lock
lret
inc
add
lcall
inc
daa
imul
lods
mov
push
mov
dec
lcall
inc
mov
add
xchg
sti
jp
repnz
insl
fsts
xor
dec
push
mov
lds
sub
cmp
inc
inc
stos
sub
out
sub
aaa
iret
jp
ret
inc
push
add
int
mov
inc
push
hlt
xor
out
stos
push
sbb
pop
dec
lcall
xor
repnz
push
leave
gs
xor
dec
xchg
xchg
cmp
adc
cmp
stos
mov
scas
mov
pop
ja
arpl
andb
xchg
adc
jmp
addb
inc
das
add
xchg
pop
pusha
cwtl
aad
and
in
pop
je
mov
sbb
in
xchg
clc
ret
imul
jle
aad
sbb
lock
dec
mov
dec
movsb
push
ss
mov
xchg
ret
jle
push
pop
dec
cmp
stos
ficomps
in
int
jmp
pop
pushf
push
xor
enter
into
or
movsb
ficoms
sarl
push
push
shr
mov
es
dec
xor
cmp
sarl
arpl
jns
mov
scas
adc
jnp
add
jbe
add
hlt
jne
xchg
repz
mov
outsl
and
dec
mov
xor
push
xor
push
mov
lods
xchg
pop
js
ret
gs
jbe
pop
pop
and
shlb
fwait
cmpsl
pop
dec
testl
rorl
lods
aaa
stc
das
sbb
je
pushf
insl
ret
pusha
int3
mov
xchg
hlt
dec
nop
mov
xchg
loope
cmpb
jbe
fisubrl
test
mov
jnp
mov
lret
lds
psrld
imul
insl
push
scas
lods
cld
imul
addr16
pop
lret
mov
mov
mov
sub
xchg
bound
sub
inc
ret
xchg
add
insl
jp
pop
frstor
or
clc
out
mov
add
mov
test
jae
xchg
xchg
mov
das
inc
cmc
cltd
test
pop
shrl
adc
or
jg
mov
mov
push
mov
cwtl
add
fsubrl
xlat
sbb
and
mov
push
adc
xor
nop
ss
jo
cwtl
jo
push
dec
shl
test
lods
cmpsl
clc
ficomps
loop
sbb
aam
push
mov
sub
xchg
pop
leave
xchg
pop
mov
mov
mov
outsb
add
in
ljmp
and
icebp
jb
ficompl
xor
cwtl
int3
push
nop
push
int3
inc
cmp
cmc
xor
xchg
xchg
jp
aam
icebp
mov
mov
cs
mov
push
lods
sbb
push
mov
dec
add
and
in
mov
mov
push
dec
cmp
add
fists
or
int3
int3
xor
rcrl
ds
mov
adc
and
jo
lahf
mov
fdivrp
lock
mov
sub
or
add
insl
jg
shlb
loop
scas
push
dec
xor
or
dec
pop
sbb
add
movl
pusha
xor
sub
xor
or
sub
inc
rcr
jp
jnp
das
adcl
push
xor
xchg
std
testl
clc
cs
jo
add
nopl
and
sbb
rolb
leave
xchg
lret
clc
sbb
outsl
push
xlat
iret
sbb
into
pop
jo
loopne
push
sbb
pusha
xor
jg
rcl
loopne
loopne
push
sti
sahf
cltd
mov
cld
out
jo
pop
cmp
aad
jmp
roll
fnstcw
jns
sub
cmp
loope
push
or
jecxz
cld
adc
add
enter
sub
dec
and
jle
je
adc
sbb
addr16
add
aad
shrb
jmp
add
mov
sub
mov
mov
xchg
and
fldln2
icebp
clc
pop
in
mov
imul
push
xchg
cmp
arpl
hlt
sub
int
ja
push
lahf
xchg
inc
std
test
and
adc
pop
pop
inc
mov
sub
xorl
xor
stos
cmp
mov
mov
test
out
into
je
sub
call
sub
aaa
imul
jl
dec
xchg
push
jg
adc
mov
add
mov
or
nop
jmp
cmp
jle
xor
shrl
and
push
in
push
fwait
aam
test
sbb
adc
pop
dec
mov
and
adc
dec
add
out
sbb
xchg
ds
push
lock
data16
leave
popa
test
ret
pop
cmpsl
pop
movsb
fsubrl
shll
cli
outsb
aad
loope
test
pop
ja
mov
shrl
sbb
repz
dec
sbb
jg
iret
repnz
cmp
js
int
cmp
out
call
push
and
jo
mov
mov
loope
aam
dec
push
jp
mov
pop
or
in
cltd
bound
mov
dec
dec
jnp
fnstenv
xchg
mov
inc
int
jl
sbb
xchg
cmp
mov
xor
jecxz
mov
or
and
pop
rcrb
sub
loope
shrb
adc
inc
int
fisttpll
sub
and
push
sti
insb
mov
out
pmaddwd
mov
lret
jbe
repnz
push
inc
aam
dec
and
push
push
cmp
cmc
addr16
in
js
data16
ljmp
repz
and
stos
adc
sti
xchg
sahf
sbb
add
testb
cmc
test
mov
push
or
scas
stos
pop
fcmovu
loope
lods
dec
xchg
jmp
pop
xor
lock
xchg
mov
out
fldcw
mov
hlt
divb
aas
gs
jmp
jne
dec
pop
jle
lret
and
xchg
xchg
iret
cmc
fsubr
or
xorb
xchg
je
pop
xchg
fwait
dec
aad
and
pop
incl
call
aas
jecxz
ret
pop
mov
or
cmpsb
mov
ret
repnz
pushf
inc
pop
and
jnp
in
iret
add
jnp
mov
push
mov
movsb
add
icebp
inc
je
add
push
mov
inc
cltd
icebp
sbb
xchg
out
pop
sbb
adc
or
lds
stos
jbe
jbe
cmp
lds
or
sub
mov
sub
imul
cmpb
or
cwtl
pop
cmp
mov
stc
sbb
push
add
sahf
fcomip
xlat
add
sahf
sub
pop
in
fdivrl
out
sbb
adc
fistpll
repnz
mov
xor
sbb
lods
rcr
adc
dec
mov
sub
hlt
dec
cmp
in
cltd
push
jo
stos
fldcw
jmp
andl
add
mov
pop
adc
push
ss
insb
lock
push
ja
mov
sbb
addr16
or
pop
fstps
shl
jmp
adc
fisttps
add
pop
aas
repnz
inc
cmpsl
leave
adc
sbb
outsl
es
push
sbb
xchg
jnp
mov
fmull
outsb
notb
cmp
xchg
shr
mov
pop
xlat
ja
bound
fsubrp
lods
pop
sbb
sbb
jne
adc
bound
pushf
or
xlat
xor
mov
and
out
sbb
mov
call
cltd
add
sti
fsubp
stos
cltd
cwtl
dec
cmp
adcb
mov
icebp
push
imul
pop
out
ret
stos
and
test
jno
xlat
idivb
insl
mov
inc
repz
push
push
cmp
out
mov
enter
xchg
cmp
enter
ljmp
push
add
loop
fwait
cmc
or
or
lahf
and
fwait
add
pop
mov
mov
xchg
gs
fwait
sub
pop
or
sbb
or
inc
or
cld
imul
mov
in
mov
fcmove
aaa
in
fldt
insl
cmp
test
mov
shl
mov
and
sbb
int
dec
mov
lock
lfs
mov
popa
outsl
daa
add
inc
scas
add
outsl
bound
sahf
imul
rcl
fs
adc
mov
out
fildll
addl
pusha
nop
mov
scas
pop
inc
ret
mov
jge
les
jmp
enter
xchg
mov
inc
jp
test
dec
push
loope
or
push
xchg
mov
shll
push
push
enter
les
cmp
jnp
push
aad
enter
in
in
cmp
jb
test
addb
xor
xlat
mov
cmp
sbb
push
lcall
jp
out
or
mov
adc
cmp
mov
test
jg
cmp
add
mov
inc
shll
sbb
fwait
xchg
sbb
and
mov
lock
cmp
adc
cltd
jg,pn
aas
repz
pop
mov
insl
bound
mov
mov
cli
std
movsl
mov
push
sub
loop
pop
cli
bound
mov
sub
daa
test
xchg
mov
cmpsl
push
in
insb
cld
mov
popf
pop
adc
xchg
repz
les
sub
das
mov
add
gs
mov
mov
pusha
dec
out
xchg
leave
push
add
aas
and
mov
push
in
icebp
sti
mov
fwait
leave
mov
and
or
das
jbe
int
xchg
xor
mov
int
testl
cmp
dec
cltd
mov
cmpsl
popa
mov
cmc
mov
int3
int3
test
pop
jnp
flds
outsb
int
inc
mov
ret
push
xchg
mov
roll
repnz
sub
repnz
sbb
shrl
lods
fcoml
xor
daa
cmp
jne
ss
xchg
call
dec
pusha
adc
mov
lret
int
mov
or
out
imul
arpl
ret
ljmp
call
pop
call
mov
loope
js
scas
jbe
xor
mov
loopne
leave
adc
inc
mov
xchg
cmp
and
push
mov
shl
mov
aas
adc
mov
jnp
sub
in
jge
rclb
aam
mov
es
ret
cmp
loope
rcl
popa
pop
and
jae
sbb
mov
cmp
push
dec
pushf
insl
pop
xor
xchg
mov
movsl
xor
lods
jl
xor
push
sub
inc
sahf
ret
mov
inc
insl
test
fidivs
in
cmc
insb
jbe
shrl
mov
jmp
adc
inc
into
stos
xchg
js
dec
scas
test
mov
and
pop
dec
sti
and
adc
insl
call
push
inc
xchg
mov
adcl
sub
pop
push
andb
aad
loopne
lods
mov
xchg
in
scas
ja
jmp
subb
cmp
out
sub
and
dec
xchg
fsts
pop
out
sub
add
dec
mov
dec
xor
call
loopne
loope
mov
or
les
rcl
add
andb
push
inc
orps
ret
flds
addr16
das
not
xchg
je
arpl
push
sbb
fs
jmp
icebp
pop
test
mov
mov
xor
nop
sbbl
xchg
sbb
lea
pushf
std
test
sbb
data16
sbb
sub
dec
mov
inc
adc
mov
nop
push
clc
push
test
pusha
or
dec
jge
mov
and
xor
mov
pop
pop
pushf
gs
addr16
cmp
out
mov
pusha
and
xor
and
pop
add
dec
or
xlat
add
out
pop
and
in
mov
aam
das
cmp
inc
mov
lret
scas
ret
and
inc
inc
leave
add
ficoms
popf
xor
int3
cld
dec
push
xor
insl
push
lea
gs
fwait
imul
xlat
test
pop
pop
in
jp
and
das
outsb
outsl
mov
out
inc
cmpsl
and
or
in
jg
push
fiadds
fld1
jae
xor
sub
lods
cli
inc
mov
jae
ror
stos
add
sbb
push
mov
and
stos
pop
xor
inc
cmp
add
aam
aaa
cli
popl
mov
das
adc
scas
add
ja
mov
js
in
xchg
orl
mov
test
je
push
loope
outsb
xor
and
mov
scas
mov
ds
lahf
cmpb
pushf
add
test
mov
push
movsl
in
loop
stc
jmp
negl
adc
jecxz
add
xor
cmp
xchg
popf
ja
push
sbb
out
sub
mov
dec
jnp
or
dec
scas
mov
mov
jg
pop
lods
sahf
test
andb
or
es
sbb
cld
mov
imulb
add
lret
idivl
test
adc
sti
fwait
lcall
fs
jo
in
or
jne
push
test
dec
xlat
pusha
or
mov
adc
inc
xlat
dec
repz
lret
add
push
cmpsl
mov
sbb
mov
loopne
adc
outsb
push
aaa
decl
dec
jnp
xor
push
sahf
mov
add
pop
test
xchg
pop
xchg
scas
pop
dec
mov
test
jl
cmp
inc
sbb
gs
push
dec
fs
jp
cmp
sbb
cmp
fsubrl
pop
mov
xlat
add
lds
fisubrl
push
xorl
js
data16
dec
push
es
cmc
and
jle
enter
test
inc
enter
xchg
out
popa
dec
gs
lahf
es
cli
arpl
dec
dec
pop
adc
xchg
jmp
out
out
mov
sbb
push
push
xchg
jns
jmp
ljmp
sub
call
fistl
or
push
push
push
testl
ret
adc
sub
xchg
pop
leave
mov
xor
in
or
dec
mov
or
add
in
add
push
and
xchg
pop
out
jg
add
pop
mov
push
jge
shlb
inc
sarb
push
pop
push
aaa
mov
push
xchg
mov
loope
xor
mov
mov
clc
stos
mov
sbbl
lock
andb
mov
out
sti
leave
addb
inc
fisubrl
xor
sbb
inc
xor
in
daa
loopne
jae
jecxz
adc
leave
dec
sbb
mov
test
bound
pop
jne
lock
dec
pop
test
mov
cs
sub
ret
push
leave
nop
pusha
es
xchg
fisubrs
in
out
incb
cmp
mov
pop
sub
xor
pop
imul
scas
rcll
xor
fldl
in
outsl
mov
fcoml
cmp
xlat
fwait
mov
add
test
nop
cmp
mov
jl
cmpsb
xor
dec
xorl
cmp
stc
outsb
xchg
lcall
repnz
or
gs
mov
xchg
scas
imul
inc
sbb
inc
lret
jnp
movsl
mov
mov
shrl
dec
pushf
rcll
mov
dec
push
dec
sbb
daa
add
popa
fdivs
push
rclb
int3
inc
xchg
ja
or
sub
pop
pushf
push
jl
adc
push
push
sbb
and
int
jnp
imul
dec
push
dec
jo
rorl
and
jle
pushf
dec
icebp
cltd
dec
imul
dec
jo
mulb
cmp
cmc
mov
mov
xchg
sbb
xchg
dec
or
scas
mov
pop
cmp
mov
xor
outsb
adc
cmp
or
in
scas
xchg
jns
push
push
push
mov
stos
dec
adcb
cmp
popf
test
nop
ja
adcl
xor
jecxz
pop
cmc
test
cli
mov
xor
stos
inc
insb
ficompl
or
ss
addr16
or
add
pop
dec
fwait
aas
dec
les
mov
mov
stos
xchg
scas
cli
mov
xchg
sub
inc
mov
xor
stos
xlat
xchg
adc
loop
mov
jmp
jecxz
sub
xchg
mov
pusha
xor
mov
lds
pop
mov
sub
scas
xrelease
test
inc
scas
xchg
sti
movsl
pop
dec
push
into
in
mov
js
or
push
loopne
jp
mov
out
scas
dec
stos
mov
xor
pop
add
xlat
ret
jg
inc
jge
xor
in
movsl
movsl
js
mov
mov
repnz
xor
dec
mov
mov
pop
jnp
push
je
nop
mov
adc
addl
out
adc
mov
xchg
xchg
or
shrl
aas
inc
sbb
mov
scas
cs
push
aad
dec
mov
xchg
adc
mov
ja
in
push
fwait
ret
adc
or
fdivp
leave
and
aad
test
jnp
mov
fsts
jg
lods
ret
mov
aad
repnz
push
addb
loope
mov
ret
push
fucomi
ror
data16
dec
pop
xchg
mov
enter
and
jg
mov
adc
insl
cli
seto
jbe
jl
jb
out
or
cmpb
inc
mov
push
dec
test
into
push
out
push
mov
mov
sbb
mov
push
or
or
leave
push
cmp
pop
xchg
add
jo
or
mov
sub
push
ret
fists
mov
adc
mov
jb
fadds
dec
jge
mov
into
lcall
xchg
sti
jne
outsl
dec
xor
mov
lods
mov
xchg
out
sub
add
push
popf
dec
div
ljmp
jb
adc
and
mov
mov
xor
mov
cmpsl
cmc
xor
pop
mul
stc
loope
jp
test
push
adc
lock
aam
inc
xchg
icebp
mov
stos
push
pop
sub
xchg
inc
loop
stos
test
mov
sub
pop
sarb
mov
in
adc
xchg
outsl
adc
sbb
inc
roll
jmp
imul
push
mov
mov
lock
popf
push
jmp
mov
push
cmpl
cmpsl
push
movsl
inc
jl
adc
out
push
insl
in
insb
adc
call
ret
inc
pop
outsb
call
and
aad
loop
jmp
jbe
lahf
push
aam
nop
jmp
rcrl
or
mov
mov
add
hlt
mov
and
mov
rcll
cmpsb
leave
out
jns
in
sbb
fwait
push
mov
mov
pop
add
mov
mov
mov
jge
push
xchg
jo
add
push
stc
stc
in
jge
cmp
dec
cmpsl
dec
cli
push
mov
out
imul
aas
inc
notl
dec
aam
mov
lret
nop
dec
loope
jb
fisubl
xor
push
cmp
data16
push
mov
int3
mov
jne
xor
js
sub
lret
mov
and
cmp
insb
or
in
cmp
fwait
cmc
adc
jmp
push
not
jp
lahf
dec
mov
scas
push
sub
loope
out
in
cmc
inc
cmp
xchg
cs
adc
clc
rorb
sarl
std
test
dec
dec
in
mov
frstor
popf
inc
stc
sbb
call
cmpsb
out
cmp
aaa
jno
out
xor
pop
xchg
xor
repnz
int3
popa
push
mov
mov
dec
sarb
cmpl
ljmp
mov
jge
bound
add
shrb
add
inc
adc
sub
clc
sbb
mov
out
ljmp
push
and
addr16
bound
stc
xor
in
subb
mov
push
xor
fprem1
sbb
cmp
inc
test
addb
ss
in
ja
mov
mov
push
aaa
push
jns
xchg
cmp
outsb
adc
xor
test
mov
dec
outsl
or
popa
jno
pop
inc
mov
es
push
xor
cmp
sub
insl
sub
dec
cmpsl
rcll
repnz
out
cs
stos
pop
push
pushf
stos
push
rorb
adc
cs
mov
or
jns
adc
incb
mov
lock
mov
pop
in
imul
xchg
call
inc
pushf
sub
or
ficompl
sub
sub
pushf
rcll
loope
out
subl
mov
or
push
push
xchg
inc
mov
repnz
pop
pop
dec
loope
mov
test
pop
xor
movsl
sub
pop
imul
sbbb
pop
mov
cmp
test
or
jne
push
dec
clc
pop
jecxz
or
outsb
into
push
fsubrl
lock
lock
push
loope
adc
dec
sbb
icebp
xchg
jl
add
jl
out
mov
std
cli
lret
pop
xor
adcb
adc
xchg
outsl
xor
jb
insl
ljmp
minps
push
fisttps
add
imul
pop
push
iret
pusha
sti
sbb
int
and
mov
popf
push
rcl
pop
divl
mov
call
jle
movsl
dec
mov
jne
popa
mov
pusha
and
out
cmp
push
lea
pusha
imull
jmp
mov
iret
xor
jle
sub
nop
in
xchg
pop
popa
mov
ja
cld
test
push
lods
dec
outsl
jb
sbb
mov
pop
fiadds
test
shrb
mov
mov
es
push
sub
mov
push
repz
pop
push
and
js
jae
push
pop
add
jno
imul
outsb
fisubrs
ficomps
or
sub
jge
daa
pop
mov
mov
push
out
sbb
mov
fsubs
dec
pop
push
aaa
hlt
scas
fdivs
mov
cmp
push
or
stc
pop
in
insb
testl
inc
and
jno
pop
add
rcr
cmp
and
dec
loop
and
jge
fiaddl
add
adc
mov
add
xor
xchg
xor
sbb
push
jp
clc
adc
test
pop
jmp
inc
movsb
mov
adc
adc
das
shlb
enter
aas
adc
loope
decl
sbb
and
out
push
pop
mov
dec
stos
ret
xor
add
pop
adc
cltd
movsb
loope
inc
mov
fdivl
mov
inc
adc
jecxz
sub
fld
pcmpeqw
cwtl
imul
scas
test
and
stos
pop
inc
jg
add
push
cmp
ret
fisubrs
out
or
cli
adc
lcall
lahf
jb
mov
roll
pop
add
sub
mov
inc
movsb
dec
or
push
aaa
jno
scas
aas
jp
std
dec
adc
bound
lds
add
negl
push
mov
mov
adc
mov
shrb
inc
mov
mov
inc
lods
xlat
test
mov
cltd
add
dec
jge
add
test
iret
inc
out
jmp
testb
pop
inc
movsl
jb
int3
add
scas
cmpsb
push
movsl
popa
jo
inc
mov
cmpsl
xchg
clc
setne
out
aaa
jmp
das
repz
xchg
lock
ljmp
push
xorb
sbb
mov
aad
lret
dec
mov
adc
in
cltd
pop
stc
push
cmp
jmp
or
pop
push
xchg
push
mov
mov
shll
leave
push
mov
or
jne
xchg
pop
lea
pushf
pop
sbb
push
repz
subb
sub
mov
mov
jnp
dec
or
rcll
jns
faddl
loope
jne
xorl
shll
mov
or
inc
mov
fidivrl
sbb
push
hlt
push
mov
pop
fs
sub
jecxz
test
inc
popa
rcrl
pop
cwtl
xchg
rcll
jbe
dec
lock
adc
stos
push
mov
pop
dec
fcomps
and
adc
das
aam
sti
mov
push
outsb
addr16
xchg
aas
adc
add
xchg
xor
mov
and
adcl
add
fxch
or
nop
adc
in
sub
test
test
nop
cmpsb
xchg
popf
and
jne
push
or
cli
inc
mov
pushf
mov
fwait
sbb
clc
rcrl
ds
dec
rorl
cmc
mov
dec
arpl
decl
dec
cld
hlt
int3
in
rclb
subl
in
xchg
jnp
and
sub
insl
stos
popf
out
andl
push
or
fstps
push
test
js
test
scas
mov
out
lea
fists
mov
pop
jnp
test
sub
rol
mov
push
mov
sahf
or
sahf
lcall
es
mov
sub
jne
jo
inc
push
ret
mov
int3
mov
cmpsb
and
mov
xchg
inc
cmc
and
adc
xor
adc
lcall
add
push
fwait
pop
leave
xchg
jge
mov
xor
inc
fstpl
jg
inc
xchg
enter
clc
jb
jns
in
iret
xor
mov
test
push
ljmp
or
mov
sub
cli
and
mov
imul
cmp
aad
push
gs
jl
out
mov
or
lret
and
inc
test
gs
lds
mov
adc
subl
ljmp
in
mov
pop
cmp
push
push
ss
jmp
jmp
jne
clc
add
dec
lahf
call
mov
test
dec
sub
xchg
hlt
divl
in
sbb
push
and
pop
jmp
rcl
out
dec
push
add
adc
sub
nop
roll
lods
stc
pusha
mov
sbb
btc
pop
xchg
jl
movsl
sar
mov
xlat
xor
stos
out
sbb
adc
xor
cmpsb
push
ljmp
pop
out
cmp
test
push
xchg
jmp
lock
lret
das
mov
jge
pop
aas
sbb
ss
and
popf
mov
pop
inc
daa
roll
sbb
ss
shl
shr
lods
jnp
jb
xor
clc
sbb
jns
inc
mov
mov
daa
push
cli
jnp
clc
sbb
rcr
stc
aaa
out
cmp
aam
jge
cmpsl
fs
pop
stos
pop
sahf
adc
test
xor
or
shlb
orl
jb
daa
dec
jne
pop
outsb
adc
mov
cmp
repnz
lahf
mov
mov
into
or
pop
aas
inc
adc
sbb
cmp
xchg
mov
dec
das
sti
fisubl
shlb
push
cmc
mov
out
inc
stos
test
pop
inc
test
out
cwtl
cmp
int3
inc
add
pop
cmpsb
mov
clc
dec
ljmp
jnp
mov
rcl
out
push
mov
insb
or
aam
cmc
sub
pop
addr16
cltd
cwtl
dec
inc
fidivl
push
movsl
ret
sti
or
mov
xor
mov
stos
mov
mov
outsl
adc
jecxz
je
ficomps
popa
out
fdecstp
leave
and
dec
sub
or
adc
adc
dec
pop
outsb
and
sbb
es
sub
fstpl
iret
adc
xor
rclb
sub
inc
jge
dec
dec
dec
push
jp
mov
nop
popa
mulb
jno
hlt
dec
add
sub
push
test
test
int3
mov
sahf
or
cltd
cmp
bound
insb
imul
fwait
cmpb
sarb
sahf
fisttpl
cmpsb
sarb
xchg
outsl
aaa
movsb
aas
jmp
mov
int3
mov
dec
js
lods
mov
pushf
xchg
std
ret
cmpsl
out
test
mov
pop
sahf
dec
xchg
repnz
mov
in
mov
fsubrl
rolb
adc
scas
cmp
loop
negb
vmaxss
pop
fisttpll
xchg
int3
and
incb
cmp
mov
adc
movsb
xor
cltd
and
in
mov
ds
int3
add
adc
fcompl
data16
jg
jne
popa
pop
mov
lods
push
pop
pop
sbb
mov
cmc
add
jnp
daa
or
out
sub
sarb
repnz
dec
ja
lock
fwait
or
test
outsb
xor
outsb
mov
adc
pmullw
out
add
add
enter
ret
daa
adc
pop
and
jl
int3
inc
ja
pushw
xor
xor
popf
nop
xchg
ja
or
add
sarl
cmp
adc
and
add
jnp
xchg
dec
ljmp
das
dec
ret
mov
aam
mov
dec
inc
jno
rorl
dec
sarl
or
add
icebp
jb
add
push
ss
fcmovu
jle
add
dec
xor
jne
and
insb
outsl
loopne
ss
dec
fwait
jb
int3
sbb
test
adc
inc
mov
jle
xchg
movq
lea
add
push
insl
stos
pushf
xlat
gs
ja
pop
bound
lret
pop
iret
popa
push
dec
popf
mov
stos
xchg
pusha
cmp
into
or
ss
and
push
hlt
lret
add
mov
popf
aam
xchg
xor
xlat
cmp
pop
push
ja
js
adc
xchg
movsl
jg
in
xchg
jae
pusha
lret
arpl
pop
nop
xchg
aas
ret
int
repnz
stos
mov
fcoml
insl
mov
jne
fidivl
or
ret
ljmp
loopne
push
push
filds
clc
dec
xor
xor
dec
and
int
out
loopne
push
dec
out
mov
mov
dec
out
pop
mov
inc
lods
adc
xchg
mov
mov
sbb
and
std
dec
jnp
das
aaa
test
add
xor
xor
pop
mov
jmp
push
add
jae
jbe
int3
adc
aas
iret
in
jg
xchg
sub
sub
insl
inc
lahf
repnz
dec
mov
xlat
in
aaa
adc
out
inc
sbb
or
adc
inc
js
stc
xor
lret
adc
mov
jbe
leave
test
dec
cltd
add
push
inc
cmp
cmpsl
cwtl
enter
pushf
cli
scas
add
jle
movsb
xchg
fldl
mov
pop
cs
add
xchg
stc
fdivrs
fldt
cmpsb
jmp
sub
xor
pop
hlt
int
out
pop
ret
icebp
dec
data16
out
inc
sub
js
loopne
loope
mov
sahf
push
iret
outsl
aas
mov
out
mov
test
je
and
or
dec
mov
addr16
push
inc
in
ret
iret
mov
pusha
in
adc
call
gs
filds
cli
fnstcw
les
fists
mov
jnp
push
xchg
or
inc
pop
hlt
leave
movsb
or
sbb
fisubrl
xor
xchg
cmp
fnstsw
mov
out
dec
jle
movsb
jecxz
jns
imul
daa
cmp
push
mul
jle
out
outsb
call
mov
and
jb
int3
mov
iret
outsb
insb
jmp
fidivl
lret
shlb
mov
enter
push
xor
orl
cmc
ds
push
cld
and
mov
lods
addr16
and
xchg
into
xlat
inc
adc
out
aas
gs
idivb
add
filds
mov
push
push
data16
cmpsb
adc
jns
cmp
or
gs
lea
testb
jge
fxch
mov
rcrb
dec
daa
ds
sarb
sbb
mov
pop
xchg
xchg
cwtl
xor
aad
mov
int3
xor
mov
adc
mov
sub
xchg
sub
fisubrs
icebp
ror
rclb
mov
lds
mov
cmpsl
xor
push
insl
movsb
pop
pop
loope
cmp
sahf
pop
stos
dec
push
insl
cwtl
jne
cli
mov
and
lcall
sbb
inc
push
add
mov
stos
stos
pusha
imul
das
push
js
inc
xchg
loop
movsb
sbb
mov
cmp
push
and
dec
push
or
pop
fidivrs
fwait
xor
iret
subb
pop
inc
sahf
mov
jg
push
jp
pop
out
dec
and
aas
sub
jl
mov
pop
mov
fwait
or
mov
outsb
fimuls
inc
fcompl
fiadds
adc
mov
or
mov
sub
mov
jle
or
subb
ret
and
stos
dec
and
int
enter
push
or
lcall
push
pop
fstps
jp
sub
push
in
scas
dec
cmp
jae
mov
xchg
fs
add
mov
sti
push
jg
pop
daa
or
mov
in
push
pop
add
ficoml
jmp
jns
adc
outsl
pop
adc
cli
adc
stc
out
cmpsb
fsts
das
arpl
adc
cmc
pop
dec
sub
arpl
insb
mov
add
aad
mov
fsubrs
fisubl
fcoml
jnp
add
in
mov
cmp
or
fwait
adc
nop
mov
pop
or
js
lret
add
scas
mov
fs
fcoms
inc
cmpsb
imul
or
dec
push
pusha
and
add
xor
cmp
mov
xchg
mov
divb
pushf
xchg
xchg
cli
adc
insb
xor
neg
xchg
fs
sbb
xor
out
insl
adc
daa
andl
pushl
mov
xchg
cmp
mov
js
sub
jp
stc
mov
scas
into
aaa
xchg
xlat
cmp
dec
pop
jl
add
scas
push
rcr
and
les
mov
or
xor
in
dec
mov
inc
sub
fdivrs
adc
and
das
sub
in
es
cli
fldl
filds
mov
jno
sbb
fnstsw
mov
mov
ss
jle
xor
outsl
pusha
mov
push
arpl
out
xchg
cld
es
xor
xchg
sbb
push
repz
pop
lcall
data16
or
data16
pop
jnp
xorl
push
addr16
ds
and
add
mov
and
rol
stos
int3
jb
mov
lea
push
stos
push
push
aad
inc
mov
inc
or
push
add
gs
call
inc
dec
xor
call
add
xchg
push
jp
and
jbe
nop
mov
push
add
jo
mov
fmull
xchg
jmp
xor
mov
test
mov
xchg
in
jb
mov
fs
sahf
shll
adc
lea
les
and
mov
push
out
stos
aad
sbb
xchg
fs
cli
lcall
hlt
daa
push
shrl
inc
into
aas
icebp
mov
mov
xchg
cmpsl
inc
aas
sti
jecxz
test
cld
hlt
arpl
ss
xor
out
xchg
popa
push
lret
push
sbb
fsub
xchg
sbb
loopne
bound
stos
pop
push
pop
sbb
or
mov
push
std
cld
arpl
lcall
out
cli
pop
inc
rorb
test
adc
mov
int
aam
shrl
push
xchg
sub
addr16
lods
sarl
inc
ds
add
inc
xchg
xor
iret
add
hlt
push
loope
mov
fistpl
mov
int
std
mov
jno
idiv
mov
jbe
push
or
scas
dec
enter
sti
shlb
ret
sbb
mov
aam
cmpsb
out
in
push
adc
lods
add
jo
rcl
mov
rcrl
dec
sbb
arpl
mov
mov
insl
dec
fisubrl
fistpll
outsl
movl
jo
mov
dec
adc
ja
jnp
lret
dec
adc
in
nop
sbb
sub
out
scas
lcall
dec
fwait
sub
insl
je
outsl
sti
cmp
cltd
pop
cmpsb
iret
jg
push
add
into
adc
xchg
pushf
sbb
pop
and
cmpsb
inc
into
pop
jle
pop
push
adc
add
and
lock
xchg
ja
sub
jecxz
sbb
aam
test
mov
pop
push
aas
jae
lret
adc
popa
shll
lock
out
mov
test
adc
data16
cld
pop
faddl
lret
dec
pop
fwait
pop
adc
jl
lds
sbb
into
jbe
rcrb
xor
ficomps
add
jno
ficoms
jno
test
dec
fidivs
sub
mov
mov
xchg
in
push
rcll
in
sub
les
xor
fldl
bound
orl
rcrb
xchg
lcall
lahf
or
insb
pop
lret
xchg
test
inc
in
fs
dec
mov
prefetcht2
mov
jno
inc
or
hlt
cs
clc
jmp
call
popa
je
xchg
nop
shrb
pop
stos
xchg
subl
dec
mov
cmp
inc
ret
into
fxch
fwait
inc
dec
in
xor
inc
sahf
cld
mov
into
jl
jns
jb
or
inc
pop
lds
sarl
add
add
pusha
cmp
into
mov
int
or
mov
cltd
sbb
xchg
pop
or
in
dec
lcall
rolb
xchg
pop
aad
sub
and
out
lahf
push
ret
aad
shr
push
fnstsw
jmp
dec
cmp
leave
adc
stos
mov
lods
lea
shlb
xchg
fwait
mov
cmpsb
ljmp
lods
fbld
je
dec
insl
lods
fsub
js
jg
pushf
les
dec
cmp
sbb
and
mov
mov
shlb
leave
xor
jecxz
xchg
xchg
adc
shr
mov
lds
out
cmp
push
dec
cmp
insb
dec
je
sub
sbb
cmp
jae
cmp
jbe
adc
mov
nop
lods
or
pop
imul
push
sti
faddl
mov
bound
test
int
pushf
push
insb
sub
into
loope
out
inc
pusha
xor
mov
jle
jns
pop
add
scas
xorl
pop
dec
andl
int3
push
nop
fucomi
fwait
push
jnp
in
or
and
mov
fsub
fs
mov
into
xor
in
mov
pusha
arpl
pop
push
pushf
shrl
dec
mov
ficoms
sub
stc
lods
out
mov
jno
add
xchg
dec
jne
pop
lret
xchg
pop
pop
mov
es
repnz
mov
xor
pop
pushf
lahf
pusha
leave
mov
mov
adc
hlt
xor
loop
mov
inc
pop
subl
jg
out
jbe
mov
pusha
aas
mov
jo
sub
mov
or
dec
pop
cld
xchg
dec
sub
jl
add
jo
jno
popa
adc
lds
mov
les
shl
lods
pop
daa
adc
mov
outsb
repz
and
dec
lcall
inc
pop
cmpsb
sti
mov
pop
pop
mov
push
aas
sarb
hlt
mov
xor
and
out
subb
das
addl
cmc
xchg
out
pop
mov
fildll
sub
sub
sbb
jae
int
sbb
addr16
loopne
adc
stc
jl
leave
cli
xor
outsl
mov
dec
xchg
pop
imul
jle
outsl
add
sub
adc
adc
mov
mov
xchg
sbb
mov
dec
fists
decl
cli
push
xor
into
mov
cmc
bnd
inc
pop
shrl
mov
dec
cwtl
repz
dec
mov
sti
divb
xor
cli
inc
jmp
loop
addb
ret
jbe
adc
xlat
sbb
sub
xor
cmpsb
sbb
jo
push
ret
pop
jnp
jnp
sbb
xor
out
xor
cmp
mov
test
cmp
pop
out
dec
mov
out
jns
int3
das
leave
push
aad
cmp
sti
lret
pop
out
movsb
adc
mov
je
pusha
adc
xlat
je
iret
bswap
test
mov
je
mov
lret
add
fisubs
call
lock
stc
push
cld
in
ja
mov
sbb
negl
jmp
cmp
push
iret
pop
clc
lret
push
push
sub
mov
push
hlt
add
outsb
ss
cmp
dec
jno
cmc
test
leave
sbb
or
loop
dec
outsl
add
xchg
xor
cs
loopne
aam
or
psrad
pop
or
sub
sub
imul
je
ffree
out
aas
or
sub
mov
sbb
movsbl
test
adc
shll
xchg
cpuid
das
adcl
ss
aaa
add
dec
dec
dec
push
rclb
add
sbb
lds
and
fucomp
and
xchg
push
push
xlat
adc
out
insb
sbb
cmpb
aam
test
lahf
fcomip
lds
imul
inc
enter
xor
sar
adc
or
dec
mov
decb
imul
clc
ficompl
iret
or
mov
push
das
test
test
mov
andb
xor
repnz
mov
add
inc
or
mov
popl
jo
mov
add
adc
jp
adc
sbb
insl
aam
add
mov
xchg
popa
xor
out
popa
adc
imul
ljmp
shrb
aaa
fnsave
rclb
in
out
add
stos
add
outsb
jne
mov
dec
xor
xor
mov
dec
lahf
loopne
mov
cmpsb
dec
dec
add
out
arpl
mov
mov
mov
xor
pusha
pop
push
inc
push
mov
notl
adc
pop
ds
cmp
nop
adc
ljmp
nop
add
jns
fs
xor
sbb
xlat
inc
push
sub
jno
outsb
ds
mov
movsb
ds
test
mov
mov
rcrb
ret
hlt
push
int
shrb
inc
pop
inc
dec
push
loop
sbb
push
or
aam
mov
iret
push
ficoml
outsl
mov
rol
pop
addr16
xchg
adc
ds
loopne
adc
mov
sbb
push
push
cs
rclb
sbb
mov
in
imul
add
nop
and
jl
int
test
add
push
sti
stc
xor
dec
lret
xchg
inc
test
and
pop
in
cs
dec
pop
cmp
mov
xchg
pop
fcomps
mov
inc
push
test
test
xchg
dec
jmp
xchg
adc
push
mov
fwait
addl
in
std
shrl
mov
or
repz
int3
rcrl
mov
or
inc
sti
jmp
dec
ret
and
jnp
mov
and
inc
or
lahf
test
mulb
adc
insl
jne
imul
dec
push
repnz
cmc
jmp
cs
clc
cmp
and
xor
leave
and
pushl
negl
sub
mov
or
and
jae
or
push
stos
jno
sbb
test
call
ror
jg
rcrl
xchg
cltd
adc
dec
mov
out
push
subb
xchg
push
adc
sarb
sbb
adc
fmull
inc
xlat
int3
pop
outsl
iret
xor
adc
mov
std
icebp
enter
add
in
cmp
cmp
mov
cmp
addr16
fsub
fninit
push
dec
adc
mov
xchg
pop
rcrb
loope
dec
pop
push
push
repnz
xchg
lods
sbb
xor
popa
sub
pop
xchg
popf
jp
rclb
pop
xchg
les
sub
stos
mov
mov
mov
or
jl,pn
popf
cmp
ficoml
repnz
sahf
insl
sahf
inc
fdivr
fsts
aam
pop
pop
mov
and
push
or
imul
jbe
cli
push
pop
jnp
mov
sti
lret
sti
and
pop
and
mov
xadd
inc
int3
xor
orl
js
push
repnz
stos
fucom
jb
xchg
aad
and
push
shlb
jge
xchg
cld
push
or
orb
pop
call
fistpll
out
sbbb
dec
dec
scas
adc
call
rorl
data16
scas
push
mov
stc
lods
or
mov
sbb
test
xor
and
xor
ljmp
pop
loop
jge
xor
fs
xchg
mov
cmp
sub
addl
loopne
std
ja
xor
sti
das
jle
mov
movsl
push
push
out
jge
pop
mov
cld
adc
imul
scas
shl
ds
mov
call
fwait
mov
jle
inc
sbb
mov
pop
push
imul
mov
sbb
push
pusha
xchg
cmc
xor
jle
mov
dec
adc
add
lahf
pop
inc
mov
int3
adc
rorl
shll
lret
pop
test
mov
insl
jle
push
inc
push
lcall
ret
aam
shr
lret
lods
pop
jmp
xor
jp
push
jb
leave
or
cmp
lahf
xor
mov
cmp
pop
mov
in
jecxz
pop
mov
lds
subl
adc
mov
adc
pop
sar
ret
rcrb
xor
push
sub
sbb
fninit
subb
dec
lods
sub
push
xlat
out
add
xor
xorl
jbe
pop
incl
test
mov
jns
xor
subb
stos
in
rcl
mov
popf
push
repz
add
xchg
mov
pop
jb
out
mov
shll
mov
jmp
jne
xchg
xor
sbb
pop
movl
js
shrb
test
sub
or
pop
loopne
lea
inc
loop
xor
push
jb
out
push
jbe
push
aad
adc
pop
lcall
in
out
cmp
cmp
push
cli
pop
xlat
cld
push
and
mov
sbb
sahf
mov
mov
bound
nop
dec
cltd
lods
and
pop
mov
xor
jp
xchg
mov
je
shrl
sbb
in
adc
cmp
cmpsl
movsl
dec
nop
cwtl
sub
push
mov
lods
xchg
dec
pop
jmp
xorb
gs
dec
or
mov
cmpsb
repz
and
push
jmp
jl
shll
push
sbb
push
cld
mov
addb
mov
xchg
stos
cmp
mov
pusha
out
adc
or
test
jne
icebp
lods
fldcw
arpl
mov
add
test
xor
xchg
push
push
pop
mov
jp
out
dec
cmpsb
inc
mov
loopew
jg
rcrb
ds
dec
push
clc
mov
sarb
ja
aam
mov
sub
in
mov
cmp
adc
scas
adc
adc
jb
pop
adc
sub
sarb
inc
xor
bnd
bound
das
push
push
mov
loopne
inc
out
and
in
cmpsb
mov
repz
cltd
cltd
xor
adc
jmp
aaa
cmpsb
loope
xor
and
cmp
and
rclb
test
lods
and
jmp
ffreep
imul
or
adc
sti
ss
fldt
mov
push
into
in
jle
mov
cld
adc
rcrl
lock
mov
imul
das
inc
mov
call
sbb
sbb
jns
xchg
jecxz
sub
in
std
mov
fidivl
adc
mov
dec
mov
adc
push
cmp
shrb
fsubr
sti
xor
dec
test
adc
scas
sahf
fcmovb
jnp
adc
add
xchg
xchg
cmp
inc
mov
xlat
add
stos
push
push
push
repz
popa
int
add
dec
xchg
mov
ret
lret
ss
test
mov
pop
push
aas
stc
sub
test
push
sti
and
pusha
add
insl
jg
lds
adc
jo
jmp
mov
push
test
pop
negl
pop
mov
daa
inc
push
mov
rol
jp
dec
pop
arpl
mov
aam
divl
dec
adc
outsb
test
xchg
bound
pop
jp
jne
repnz
jbe
test
popf
cs
jae
jb
movsl
daa
and
cwtl
loop
les
aas
jo
mov
or
pop
pop
pop
mov
dec
dec
ret
push
insb
dec
in
cmp
lahf
movsl
ds
inc
scas
xchg
jecxz
xorl
jae
or
int
mov
fwait
sub
jbe
clc
or
daa
fcmovne
inc
cmp
add
out
jmp
scas
mov
in
mov
out
push
xchg
lcall
xchg
push
mov
insl
push
inc
adc
push
pop
xchg
loope
outsb
ss
aam
inc
adc
lods
xchg
or
xor
fsubrs
adc
push
dec
insb
outsl
push
cs
lcall
clc
pop
ds
sbb
pop
jb
pushf
inc
add
mov
push
push
dec
test
pop
and
mov
mov
sar
and
push
lods
push
mov
pop
outsl
shl
loope
xor
sub
cwtl
adc
hlt
jo
xor
clc
inc
push
or
mov
jmp
test
mov
testb
jns
nop
jp
fimull
clc
es
mov
stos
pop
imul
adcb
pushf
mov
icebp
push
sbb
cmp
xor
loope
loop
xor
mov
sbb
testl
lahf
ret
mov
dec
insl
dec
mov
and
jae
sbb
dec
cmpsb
pop
xor
jecxz
daa
rclb
paddd
outsb
push
mov
add
scas
int
pop
int
nop
cmp
lods
pshufw
xchg
idivl
stos
jns
cmp
jo
xor
rcrb
mov
lret
aaa
ljmp
inc
dec
sbb
ret
popa
test
aam
mov
mov
xlat
cmc
adc
ret
adcb
xlat
rorb
std
popa
cmpsb
and
cmp
test
or
pop
cmpsl
push
stos
les
cmpsb
lret
xchg
stos
scas
roll
sub
in
pop
add
inc
pop
push
cmp
mov
inc
out
inc
ret
sahf
incb
sub
test
dec
adc
stos
pop
xor
push
rolb
add
int3
sub
pop
into
aas
repz
sub
inc
lds
dec
sbb
mov
jge
outsl
repnz
adc
mov
jge
movsl
sub
push
cmp
daa
adc
mov
push
adc
push
scas
sbb
enter
adc
rcrb
cli
mov
jle
outsl
mov
ljmp
in
mov
dec
repnz
adc
pop
subb
rclb
push
mov
fdivrl
std
ss
or
dec
lcall
loop
xchg
mov
in
addb
mov
bound
outsb
into
insb
mov
add
mov
cmp
fbld
jg
in
popa
fnsave
fisubrs
xor
lods
aad
push
cmp
pushf
inc
dec
rolb
cmpsb
sbb
mov
into
adc
sub
mov
mov
xchg
or
or
mov
push
mov
jbe
push
orb
ret
push
xor
xchg
mov
test
lcall
data16
cld
pop
pop
pop
add
or
popf
nop
xor
hlt
and
add
mov
jle
pop
stos
rorb
push
orl
mov
lea
into
filds
cmc
mov
mov
mov
push
cs
in
xor
or
xlat
jecxz
mov
pop
mov
or
jle
pop
lret
lahf
aad
add
jg
sbb
xchg
or
and
outsb
and
xlat
loop
inc
loope
cmp
xchg
xchg
lret
push
mov
jge
mov
pop
adc
fisubs
sahf
fsub
mov
add
pop
scas
cmp
insl
cltd
fcmove
cmpb
in
cmp
std
sub
stc
cwtl
imul
insl
push
ja
pop
lea
xchg
lds
mov
push
cmp
popa
aas
xlat
or
push
jl
and
or
test
or
inc
out
xchg
mov
push
add
add
sti
lds
sub
insl
mov
lea
adc
push
jae
add
push
rorb
cmc
insb
push
popa
mov
and
stos
cmp
test
sub
jle
pop
ja
or
mov
mov
push
dec
or
xchg
inc
jl
dec
repz
sub
dec
sub
add
jno
sarb
push
jne
jae
or
int3
jb
mov
jb
xor
fcmovb
or
mov
rorb
mov
mov
sub
xor
push
xchg
jmp
push
mov
pop
std
mov
mov
lock
push
push
inc
sbb
pop
frstor
push
mov
cld
pushf
addr16
pop
push
mull
and
subl
shrl
je
lahf
mov
inc
pop
aaa
xor
subb
add
imul
jnp
clc
cmpsb
or
push
or
out
shl
jge
pop
dec
push
sarl
or
xchg
cmpsl
mov
sbb
cmpsl
imul
sar
pop
lcall
gs
adc
xchg
negl
xor
pop
sub
jmp
pop
push
in
push
sub
xchg
or
cltd
adc
gs
dec
or
popa
outsb
jb
fwait
pop
dec
and
push
add
push
rcrb
mull
addl
adc
fidivs
pmullw
push
and
add
mov
mov
xor
data16
and
mov
rclb
pop
cmpb
dec
and
pushf
cs
pop
jo
inc
jl
pop
jmp
fsubrs
aaa
popa
fmul
mov
es
ds
lock
hlt
je
pushf
repz
jge
cmp
pop
mov
mov
jo
scas
pop
je
int3
adc
inc
popa
mov
call
aam
popf
xchg
lret
mov
addl
ja
mov
xchg
aaa
mov
sarl
inc
xchg
or
dec
jo
mov
xor
int
mov
addl
imul
inc
mov
mov
push
lcall
cmpsl
in
xor
into
or
sub
test
mov
push
loopne
fs
lods
fsts
fwait
decl
mov
lods
lea
mov
repz
cmpsl
sahf
inc
aaa
dec
inc
mov
mov
ja
cmp
in
popa
pop
movsb
jne
test
cmpsl
mov
push
mov
jo
cmp
pop
subl
xchg
addr16
push
mov
popa
repz
addr16
cmp
and
mov
movsb
fwait
or
and
add
add
in
aaa
mov
sub
push
mov
leave
or
cmp
push
pop
mov
lret
rclb
or
sahf
cmp
mov
sti
xchg
sub
xor
pop
repnz
scas
mov
loope
aad
sbb
xchg
push
stos
stos
aam
subl
sahf
and
movsl
inc
fisubrs
sbb
imul
outsb
dec
cmpsb
dec
xchg
int
es
cld
out
xlat
xchg
cmc
push
sub
ljmp
movsl
repnz
das
dec
cmp
adc
mov
ret
xchg
out
jle
pop
lea
out
xchg
fimuls
stos
dec
insb
enter
aaa
add
std
pop
cmpsl
jg
out
daa
xchg
add
fistpll
dec
cmp
push
rclb
mov
out
jae
cmpsb
push
fwait
ret
mov
and
inc
xchg
mov
negb
sbb
lds
jnp
mov
pop
andb
repnz
nop
inc
mov
or
sbb
cwtl
inc
push
insb
mov
pop
mov
pop
cmp
add
push
pop
and
imul
push
dec
xor
pop
pop
push
fnstsw
lods
cmc
pop
ss
or
sbb
jle
clc
fs
lock
mov
sub
cwtl
ja
fucomi
mov
xchg
pusha
mov
out
subl
sti
and
jnp
xor
jnp
lahf
mov
and
rcl
adc
aam
jne
sbb
cmp
lret
inc
jl
add
xchg
repnz
dec
jb
pop
and
icebp
or
mov
mov
inc
xchg
mov
or
pop
pop
mov
test
scas
jbe
outsb
sbb
stos
pop
sbb
inc
mov
jl
cmp
out
adc
cwtl
xchg
and
pushf
xchg
lcall
xchg
movsl
pop
cli
aaa
lret
sub
jge
shr
mov
cmp
lcall
iret
aas
je
inc
and
jmp
out
fcompl
dec
cmpsl
loopne
xchg
and
mov
mov
adc
cwtl
sub
push
shlb
xor
mov
add
cld
pop
add
xor
jns
xchg
and
mov
fadds
dec
push
insb
and
inc
adc
loop
add
push
and
inc
roll
fdivrs
int3
and
mov
popa
add
add
nop
cltd
xor
movsb
shlb
push
push
pop
mov
or
push
and
scas
sbb
jg
arpl
negb
movl
cs
daa
out
cmpl
mov
rcrb
pop
lea
std
in
fcomps
xlat
inc
sbb
add
aam
jnp
out
mov
sti
dec
enter
inc
aam
insl
in
aas
pop
pop
mov
jmp
es
shrl
movsl
fsubl
sub
in
cs
imul
scas
mov
in
mov
jns
dec
push
sub
dec
push
inc
in
push
or
mov
fwait
adc
and
sub
pop
add
fucom
pop
cmp
lahf
pop
int
xchg
inc
push
pop
pop
lea
adcb
xchg
xchg
push
cmc
shll
fwait
inc
push
filds
sbb
adc
call
cs
push
aaa
aas
aam
add
addr16
cs
push
outsl
cmp
call
and
int3
in
push
daa
mov
aam
shlb
das
fldcw
stc
das
or
je
jnp
fdivs
push
pop
pop
xchg
pop
add
add
mov
ret
xchg
repz
jle
repnz
idiv
ljmp
mov
sbbb
inc
cmp
jnp
mov
lods
push
sub
xor
sahf
pop
push
push
dec
jle
pusha
das
adc
lods
push
stos
pop
data16
or
shll
and
and
inc
and
mov
xor
sub
loop
mov
fstps
and
in
dec
mov
in
mov
push
loopne
sarl
aaa
jg
int3
arpl
cmc
dec
sbb
push
mov
imul
cmp
mov
push
sub
mov
dec
clc
push
fdivp
push
ljmp
dec
mov
leave
sub
fwait
in
push
sti
jle
dec
imul
jmp
and
mov
jbe
into
fmull
jmp
popa
testl
dec
inc
rcll
es
mov
adc
mov
cmpsb
mov
add
and
cli
out
mov
cmp
test
jbe
mov
jmp
fidivs
pusha
and
sub
into
mov
shlb
cmp
push
loop
ja
jae
jnp
jnp
and
jecxz
lret
rsqrtps
into
add
lods
dec
cmp
dec
pop
push
fdivs
daa
fistps
fistpl
insb
hlt
inc
hlt
add
stos
cld
fisttpl
or
cmc
jnp
rorb
dec
or
inc
imul
negb
jp
scas
fcoml
pop
popa
adc
or
hlt
icebp
push
daa
nop
sub
or
setae
xor
xchg
out
testl
mov
dec
push
push
testl
mov
jmp
out
lcall
pop
dec
push
cmpsl
mov
mov
xchg
mov
dec
dec
add
fcomp
cld
or
fwait
ja
mov
dec
test
sbb
imul
jge
adc
movsb
inc
and
lret
movsb
and
push
cmc
mov
lcall
fs
iret
imul
xchg
jmp
jns
jle
jmp
scas
mov
and
mov
dec
ja
rcrb
jp
sub
push
vcvttss2si
std
loope
sbbl
xlat
dec
add
adc
dec
push
sbb
mov
cltd
test
xor
clc
imul
mov
pop
jns
push
int
stos
test
push
xchg
and
mov
mov
mov
in
pop
ss
xor
sbb
ljmp
xor
push
mov
mov
mov
gs
iret
ja
xchg
roll
cltd
ficompl
xchg
xchg
adc
and
fiadds
rcl
lret
mov
imul
lods
int3
test
adc
dec
inc
pop
push
addr16
jmp
cmp
push
adc
lods
or
hlt
ret
je
negb
sar
in
xchg
push
cmp
xchg
jbe
idiv
xchg
push
bound
jb
sub
and
pop
mov
icebp
pop
sbb
sub
outsl
fildl
xor
mov
xchg
hlt
arpl
mov
push
sbb
rorl
sarb
mov
mov
or
and
ficoml
cli
push
mov
inc
or
mov
mov
pop
dec
sub
jnp
mov
mov
pushf
mov
push
pop
out
les
ljmp
mov
into
cli
test
push
stos
test
mov
pushl
mov
mov
sub
test
inc
pop
fsubs
cwtl
dec
mov
xor
cwtl
mov
cmp
aam
push
mov
pop
mov
and
push
xchg
repz
pop
xchg
push
mov
jmp
xchg
inc
xor
js
pop
pop
and
push
mov
pop
popa
lea
mov
pop
mov
mov
test
sbb
repnz
and
xor
pop
dec
or
and
push
push
mull
loopne
xor
add
inc
pop
in
int3
mov
mov
pop
inc
std
scas
add
sub
push
sub
xchg
sbb
adc
hlt
inc
lock
clc
stos
js,pn
sbb
sbb
sti
mov
push
pop
cmp
mov
mov
mov
movsl
xchg
repnz
cmp
sub
mov
cmpsl
pop
scas
add
add
out
mov
in
cmc
and
je
fsts
repnz
add
mov
pop
pop
xchg
dec
sub
das
inc
loope
insb
xor
add
add
pop
stos
mov
pop
rcll
mov
jne
loopne
call
cmp
add
sbb
aad
add
rorb
pop
add
mov
inc
mov
aaa
jecxz
dec
mov
cmp
push
pop
mov
push
push
sarb
sbb
loopne
cmpsb
sbb
mov
imul
inc
cld
push
add
repnz
push
test
mov
imul
or
cli
fwait
lret
in
bound
xchg
or
je
aas
adc
jl
or
out
je
bound
test
out
sub
fists
pop
iret
push
ds
stos
adc
div
cltd
cmp
cmp
inc
inc
in
mov
popa
call
outsl
and
pop
sub
mov
xor
or
gs
xchg
in
call
sbb
hlt
icebp
inc
insb
mov
pop
adc
cmpsb
imul
sti
inc
test
pop
xchg
movsb
sub
dec
stos
stos
stc
xor
mov
mov
inc
sbb
iret
cltd
cmp
jno
fistl
cmc
sub
add
xchg
flds
lods
addr16
popa
push
lods
pop
add
add
cmpsb
xchg
mov
popf
or
add
in
jcxz
or
sbb
jg
xchg
mov
add
push
leave
enter
movsb
pop
mov
dec
mov
push
fimuls
jle
mov
cld
pop
fnstsw
push
outsl
mov
mov
mov
sahf
int3
mov
dec
lock
push
fistpll
cli
jl
inc
lock
cs
jl
out
lcall
add
xor
sahf
jbe
and
fmul
hlt
dec
popf
int
mov
xor
test
loop
adc
xor
mov
in
push
icebp
or
add
mov
fs
add
int3
outsb
insb
inc
push
xor
int
outsl
daa
ljmp
lods
mov
sbb
adc
out
sub
fcoms
xchg
jle
pop
lock
xorl
adc
hlt
or
xor
xchg
xchg
cmp
outsb
repnz
pop
test
or
sub
mov
dec
pop
clc
jno
test
mov
and
mov
mov
or
std
inc
dec
dec
imul
xchg
xchg
lds
jl
lock
inc
cwtl
sub
lcall
fld
add
inc
ja
insb
outsb
stos
fisubrs
int
push
adc
xor
cmpsb
dec
dec
das
mov
pop
push
mov
xor
rorb
cli
stos
iret
sub
iret
negl
repz
cmc
xchg
imul
test
mov
sub
popl
lods
pop
scas
and
aam
cmp
cmp
cmpsb
push
push
add
pop
xor
repnz
leave
add
testb
mov
jae
and
pop
ret
mov
stc
jg
negb
dec
stos
jl
xor
addr16
addb
clc
lret
dec
xor
add
in
mov
and
fistpll
call
test
shll
push
add
inc
dec
testb
cmpsl
lds
mov
and
pop
leave
xchg
stos
aad
fisttps
int3
testl
sbb
jns
loop
bound
cmp
push
sbb
xchg
nop
push
js
js
mov
fistpll
lods
xor
xchg
inc
xchg
or
xchg
xor
stc
cmp
mov
iret
bound
adc
ljmp
dec
sub
mov
and
xorb
xor
mov
out
das
insl
mov
lret
push
mov
addb
cmp
ss
sahf
xor
xor
inc
xor
andl
add
dec
stos
cwtl
xorb
cmp
xchg
mov
and
ljmp
mov
or
sbbb
push
aaa
push
mov
lds
and
push
fs
nop
mov
popf
sub
fsubp
cmc
and
mov
adc
hlt
mulb
insl
pop
jns
int
cmp
jecxz
call
lret
or
fnstsw
jns
jl
clc
std
push
loop
leave
push
orb
mov
push
out
jl
shl
dec
dec
adcb
xchg
jmp
jle
loopne
push
mov
xor
lds
adc
xchg
mov
icebp
rcrb
inc
or
mov
sbbl
dec
int3
call
pop
cmp
lods
popfw
fsubs
gs
loope
iret
pop
shlb
call
cmpsl
popa
mov
addl
or
in
test
je
sbb
mov
push
enter
out
addr16
pop
mov
add
shll
mov
aaa
or
push
rol
inc
arpl
insl
push
and
or
loop
daa
pop
mov
je
out
mov
adc
inc
mov
popf
pop
jmp
sahf
ss
sbb
inc
repz
mov
adc
fwait
loopne
push
or
loope
mov
test
aad
jmp
xchg
bound
jne
push
dec
mov
lcall
pop
jne
jmp
mov
push
mov
jne
sub
cmpsl
xchg
adc
push
push
jle
inc
mov
cwtl
xor
or
ret
int
jmp
in
lahf
push
sub
xor
cli
dec
push
jg
ret
and
mull
and
lds
loopne
andb
and
push
lahf
mov
cmp
xchg
lret
add
push
adc
and
mov
jp
ret
mov
inc
repnz
inc
jl
add
mov
cmp
jmp
out
xchg
je
cmp
mov
sbb
push
mov
pop
push
fisubl
icebp
mov
inc
pop
and
adc
dec
xchg
pop
out
sbb
dec
push
lods
xor
pop
inc
push
enter
mov
loop
test
bnd
shlb
in
mov
and
dec
xor
lock
inc
jl
jae
stos
sub
jmp
aas
dec
mov
in
jp
pop
mov
scas
shrd
rorb
and
shrl
mull
xor
lret
fstpt
arpl
jecxz
push
test
mov
sbb
or
divb
enter
ret
dec
les
xchg
sub
sar
clc
loope
add
dec
cmp
adc
mov
xor
arpl
and
add
inc
movsl
xor
add
jl
or
aad
pop
fmuls
add
mov
hlt
int3
mov
dec
mov
or
mov
add
jnp
cld
jns
nop
jno
hlt
or
push
dec
mov
setns
lods
mov
mov
scas
int
or
in
mov
nop
mov
test
add
mov
dec
and
ret
mov
xchg
xor
pop
leave
adc
daa
adc
sub
movsb
and
mov
ja
sbb
pop
daa
out
fdivl
sar
fdivrl
add
dec
iret
test
and
repz
and
cld
shrl
cmp
mov
addr16
loopne
xchg
icebp
sub
mov
xchg
int
mov
lods
loopne
ss
cltd
cmp
daa
ja
aam
sub
and
and
outsl
hlt
push
pop
sbb
lods
lret
sub
negl
sub
jno
inc
mov
mov
dec
jmp
paddusw
pusha
out
ljmp
cmpsb
sbb
or
and
pusha
jae
aam
js
imul
mov
test
scas
outsb
xchg
adc
inc
rclb
aam
bound
push
je
dec
rcrl
mov
pop
shlb
shll
fidivs
adc
ret
ret
xor
addl
and
rolb
loop
mov
stos
xchg
adc
pop
lret
out
cli
inc
push
pop
mov
cmpsb
sub
sbb
jle
push
xor
test
xchg
mov
adc
jecxz
hlt
mov
orl
cmp
cmpsl
stos
mov
push
cltd
loope
fdivs
ljmp
add
fistpl
in
pop
mov
add
enter
cmp
shl
jae
jl
push
dec
mov
mov
or
jl
xchg
lret
or
mov
mov
inc
jae
pop
xchg
pop
ret
sbb
jle
sbb
jmp
jge
push
aas
ret
ds
pop
icebp
rcrl
std
aad
pop
fdivs
sahf
add
movb
insl
mov
outsb
sbb
out
add
adcl
pop
cmp
fisttpll
mov
mov
in
sub
insl
iret
inc
bound
insb
xchg
or
nop
addb
iret
movsl
in
popl
and
or
or
mov
cmc
and
imul
das
out
out
and
aaa
jo
mov
sbb
lock
into
sbb
test
sbb
movsb
in
mov
jb
cmp
and
and
xor
jle
rolb
mov
mov
insb
in
aam
shrl
and
and
shll
pop
jl
push
dec
lds
imul
jne
bound
push
xchg
das
pop
or
ret
loop
cmpl
pop
sbb
pop
into
pop
sub
add
jge
imul
loop
or
mov
jnp
and
sar
and
add
fs
xchg
movsl
cmpsb
clc
leave
daa
lods
mov
cmp
fnop
sti
dec
push
repz
lods
test
sbb
mov
inc
dec
je
or
pop
cmp
sti
jge
pop
jle
movsb
inc
jge
add
mov
cmp
push
push
sub
adc
mov
pop
stc
adc
jp
jns
lea
xor
iret
mov
fsubrs
sbb
adc
ljmp
es
aam
rorb
nop
or
out
pop
lcall
lock
je
sub
aas
mov
dec
movsl
insb
test
imull
das
inc
test
push
in
xchg
loop
mov
insb
cmc
jo
aam
and
cmc
push
xchg
add
mov
mov
arpl
mov
je
jae
imul
xor
cmp
lds
fsubrp
cli
fcomi
fldt
sbb
add
icebp
jne
sbb
xchg
andl
push
mov
xor
daa
mov
pop
cs
pop
lods
xor
mov
xor
push
xor
icebp
fcoml
scas
pop
pop
stos
mov
dec
xchg
pop
jno
inc
add
stc
mov
fidivl
or
jb
mov
shl
add
sbb
dec
jns
jmp
orl
and
mov
cmpsb
fnstenv
xor
xchg
sub
xchg
dec
or
pop
sbb
movsb
dec
adc
xor
xchg
mov
fnstcw
lahf
pop
jp
std
pop
stc
out
popa
and
fisttpl
pushf
fs
test
xor
std
adc
popa
cmp
mov
push
or
lret
sbb
fmulp
jmp
arpl
pop
lds
dec
jb
cmp
xor
outsb
sbb
gs
je
cmp
fmuls
ja
movsl
lcall
mov
push
and
sbb
popa
mov
adc
dec
cli
fwait
hlt
fwait
popf
dec
gs
stos
mulb
addr16
cmpsl
lret
add
jg
insb
inc
popa
out
jle
mov
adc
leave
lock
or
jl
jle
xor
pop
inc
mov
jmp
adc
push
mov
adc
addr16
pusha
inc
sub
mov
adc
pop
sub
sub
cmpsb
jne
clc
sub
jp
pop
loopne
in
sbb
hlt
jns
jmp
inc
push
lcall
jns
cmpsl
xor
and
pusha
outsb
in
mov
or
add
out
dec
cltd
add
or
mov
in
push
divps
mov
xor
out
xchg
xchg
pop
lahf
pop
jg
fists
sbb
mov
sub
add
arpl
or
out
mov
push
test
je
push
rol
xor
jns
jne
and
enter
imulb
fs
outsl
stos
add
xor
shrl
call
push
or
jno
xchg
jnp
mov
push
xchg
pop
sub
mov
xor
or
out
mov
aam
dec
adc
fnstcw
adc
or
out
xor
add
pushf
sub
loop
xor
sbb
fisubrl
push
xor
or
lcall
cmp
or
loop
cli
das
cmp
pop
jae
std
mov
pop
inc
mov
aad
or
sub
lcall
or
int3
pop
fdivl
je
arpl
pop
mov
repz
shll
xor
test
mov
push
in
pop
negl
adc
sub
stos
fcmovne
dec
pop
mov
ljmp
mov
jnp
aas
pop
mov
sbb
inc
mov
adc
orb
xchg
cwtl
je
ljmp
orl
adc
fst
loope
repnz
add
ds
jle
dec
inc
popf
into
mov
loop
mov
aad
in
ja
popf
shl
and
jle
aad
sti
xor
lret
cld
in
andl
lods
cwtl
mov
push
mov
shrb
mov
imul
call
add
push
loopne
inc
dec
xorl
push
jns
insl
fadds
fs
rcll
mov
and
adc
cs
xchg
sbb
inc
cltd
mov
dec
lea
jl
push
mov
mov
int3
xchg
je
out
sub
mov
pop
dec
lret
loope
mov
pusha
in
movsl
adc
push
push
mov
cwtl
test
mov
sbb
stos
add
push
lcall
adc
add
loope
sbb
dec
add
leave
or
das
lcall
sahf
imul
fidivs
repnz
cmp
xor
mov
push
daa
push
sbb
inc
stos
lret
mov
ds
pop
movsb
push
cwtl
jns
data16
sub
push
cmp
pushf
cmp
lods
or
addr16
bound
sub
cmp
mov
hlt
int
imul
inc
mov
mov
dec
adcb
and
int3
js
dec
mov
jge
mov
pushf
in
mov
sbb
mov
push
rclb
in
jbe
pop
xchg
pusha
dec
fistl
cmc
repnz
xlat
jns
cmp
outsl
idivl
add
test
push
outsb
sub
cmp
ds
sub
pop
shlb
cmp
mov
jl
mov
push
or
pop
or
out
mov
lea
mov
testl
xlat
aad
sbb
pop
mov
loop
icebp
or
pop
jle
popa
test
xor
jge
pop
in
fisttps
mov
mov
dec
xchg
jmp
ds
imull
push
int3
lock
sarb
int3
cmp
sbb
mov
xchg
pop
fbstp
mov
ror
mov
xor
push
xchg
int
outsb
clc
pop
ds
into
mov
lods
fisttps
or
pop
iret
jp
jmp
pop
mov
ja
inc
lock
adc
filds
adc
inc
jns
adc
jns
test
mov
inc
shl
push
pop
aam
or
xor
ds
sbb
test
push
push
cmc
add
gs
pop
nop
roll
cmpsl
test
push
mov
inc
add
loopw
jo
aad
xchg
lcall
mov
pushf
jecxz
mov
cmpsb
popf
fwait
push
mov
mov
inc
stc
sub
and
push
mov
test
lods
push
lods
xchg
jg
cmp
push
dec
ror
push
push
nop
outsb
setbe
scas
mov
inc
mov
repz
and
lret
adc
jbe
loope
mov
inc
ljmp
into
push
mov
push
rorb
idiv
pop
jcxz
inc
xlat
cltd
jle
inc
or
test
jle
mov
adc
pop
inc
push
es
jg
jne
fistl
lcall
mov
xchg
lods
jne
cld
dec
adc
push
pusha
sti
xchg
insl
jl
dec
icebp
push
inc
lea
aas
cmp
add
stos
rcl
push
or
dec
cmpsl
scas
shrb
inc
jg
cmp
mov
inc
movsb
adc
jecxz
popa
cmp
pop
xor
inc
mov
stos
adc
jge
clc
lods
dec
pop
and
xchg
pop
dec
daa
xchg
rcrl
or
out
mov
xor
enter
jae
adc
sti
andb
dec
loopne
ss
outsl
cmp
andl
inc
adc
loope
stos
leave
das
sbb
jns
pop
lahf
testb
pop
flds
cmpsb
dec
loopne
lds
cld
pop
dec
out
out
mov
cmp
popa
mov
cli
dec
enter
decl
mov
sub
gs
add
sbb
sub
pop
add
mov
xchg
pushf
call
push
fisttps
stos
inc
cmp
mov
mov
out
rcrb
hlt
mov
mov
call
cmp
fcoml
out
inc
and
mov
out
sbb
addl
jbe
xor
pop
mov
pop
jne
lcall
mov
and
stos
sbb
mov
data16
js
push
jl
lahf
xchg
pop
cmpsb
sub
insb
and
out
loope
jb
setb
jg
popa
fstl
lret
pop
jg
sbb
sti
xchg
ja
cmp
push
push
daa
fld
les
push
les
and
push
test
test
dec
cltd
pop
xchg
cmp
add
into
js
xor
in
aaa
adc
add
xor
jp
xor
mov
fistpll
inc
mov
mov
insb
dec
in
repz
sti
pop
insb
sub
sbb
xor
fmuls
xchg
test
push
test
xor
mov
idivl
mov
mov
andb
loope
fwait
mov
inc
inc
add
jb
adc
xchg
xorl
ss
or
sub
in
jle
adc
std
dec
fiaddl
gs
cltd
push
mov
xchg
push
push
jmp
add
mov
scas
pop
hlt
adc
stos
mov
jecxz
pop
aad
iret
jecxz
scas
pop
test
push
xor
xchg
mov
cmpsb
cwtl
loop
push
xor
adcb
into
aam
dec
sub
sub
hlt
outsb
icebp
xor
outsb
xlat
sbb
cmp
cmp
pop
pop
sub
mov
popf
adc
xchg
addl
push
test
sarl
sub
ffreep
pushf
adcb
mov
cwtl
call
mov
fmuls
and
out
orb
fincstp
inc
movsb
aas
in
xor
mov
and
xor
inc
insl
mov
push
insl
fcom
aaa
lret
fdecstp
mov
ret
rorl
or
jle
adcb
popa
daa
inc
adcb
cmp
or
mov
jl
daa
shlb
arpl
xchg
sub
jp
orb
int
ljmp
cmpsl
or
popa
mov
in
jp
cli
das
negb
notl
sbbl
and
mov
mov
pop
ja
mov
push
shr
pushf
insl
pushl
scas
sti
repz
hlt
mov
pop
pop
cmp
mov
sub
pop
push
lret
test
scas
stc
repnz
xchg
cli
jo
call
ja
pop
jb
outsl
push
and
cmpsl
push
mov
cmp
ljmp
adc
xchg
xor
sub
or
dec
cmp
jno
cmc
fcomps
ja
lods
cmpsb
mov
sbb
sub
dec
inc
les
push
cmc
call
jle
test
cmc
lds
jmp
mov
jb
pop
nop
push
repz
pop
pop
in
popa
rcl
sub
cmpsb
xchg
enter
xor
sti
jns
scas
jno
dec
mov
xor
or
daa
pop
mov
ja
xor
test
sub
ljmp
cltd
jge
jne
cwtl
imulb
sbb
and
fldenv
loopne
aas
inc
shlb
int3
mov
adc
fwait
in
pop
xlat
ss
int
adc
insl
fisttps
xchg
push
mov
adc
shll
xor
int
subps
arpl
cwtl
pop
push
test
add
xor
imull
aad
dec
cmp
shl
dec
mov
xchg
jmp
jle
sbb
push
faddl
in
shll
add
rcrb
pop
int
stos
xor
push
pop
push
push
cmpb
pop
pushf
and
push
jb
inc
or
rolb
xor
push
call
mov
rolb
divl
mov
jo
int3
dec
lea
cmp
sar
das
adc
loope
dec
in
in
jle
jo
cmp
xchg
enter
xor
test
mov
xor
jmp
and
out
add
lret
inc
pop
jae
xor
mov
sahf
adc
push
test
cltd
cmp
or
push
push
cmc
data16
lea
rorb
mov
std
mov
mov
lock
aaa
in
and
cmp
or
push
adc
das
or
sbb
les
cmp
jnp
mov
sbb
adc
push
sarb
cwtl
mov
loop
test
cld
push
mov
inc
mov
pop
in
adc
outsw
jae
or
push
xchg
pop
xorb
loopne
ljmp
xorb
jno
sbb
cmp
js
or
dec
dec
ja
pusha
gs
out
dec
sbb
icebp
jb
insl
ds
rcl
push
in
adc
xor
sub
and
xchg
leave
sbb
addr16
cltd
pop
pop
dec
les
pop
mov
push
mov
xor
aam
hlt
xor
xor
inc
icebp
call
adc
add
call
jns
loop
addr16
xor
xchg
sti
sbbb
mov
sub
dec
lock
push
fs
jecxz
sub
lret
outsb
shl
cmpsb
int
gs
xchg
cwtl
push
jge
test
inc
sbb
cmpsl
fwait
inc
mov
mov
sbb
xchg
mov
cmp
and
lret
push
fwait
aad
shl
cmp
in
in
popf
inc
add
inc
ds
push
add
fcoml
jns
mov
sbb
out
cwtl
testb
adc
in
mov
orl
xchg
clc
je
sbb
jecxz
inc
inc
lret
push
sub
mov
mov
sub
push
mov
insb
jne
int
mov
jp
js
adc
cmpps
es
hlt
test
cwtl
push
xlat
cmp
push
dec
sbb
inc
cmp
jns
ret
push
xchg
outsl
scas
sahf
mov
jns
jnp
push
enter
xchg
cltd
adc
push
adc
push
in
fiadds
loope
daa
sbbl
faddl
ja
cld
mov
sub
and
or
into
jbe
cmp
cmp
push
xchg
jle
sbb
push
or
pop
xorl
adc
cwtl
mov
repnz
adc
push
and
mov
js
scas
std
out
lea
and
iret
stos
push
xor
pop
push
jg
fdivrs
mov
ret
adc
adc
loope
pop
xchg
cmp
hlt
shrl
sbbb
out
insl
mov
jecxz
aaa
mov
mov
pop
xlat
inc
insb
xor
fnstenv
inc
fadd
push
popf
push
mov
push
fs
test
and
inc
fwait
insb
push
addl
rcl
shll
adc
cld
pop
nop
mov
sub
cmp
mov
mov
and
or
jne
je
lods
mov
push
mov
inc
mov
adc
jg
xchg
push
divb
push
and
xchg
es
daa
mov
test
mov
xrelease
lds
inc
adc
int3
shll
mov
cmpsb
push
mov
int
adc
les
pop
mov
or
popf
jl
mov
dec
jl
shrb
mov
jnp
aam
jl
pop
mov
push
shll
leave
and
cmc
jmp
cmpsl
cmpsb
lret
pushf
mov
xor
xchg
pop
test
mov
sar
fidivrs
mov
mov
ficoml
ss
or
in
jmp
ss
cmp
int
fmuls
fs
dec
adc
adc
mov
mov
imul
jb
and
push
pop
imul
add
js
inc
bound
les
ljmp
lock
and
lahf
stc
sbb
jnp
cltd
mov
sbb
lahf
add
mov
repnz
push
es
inc
lret
aas
int
sub
stos
pop
sbb
mov
flds
hlt
ret
in
cld
cld
and
push
js,pt
cli
jne
mov
js
in
cwtl
mov
movsl
inc
jmp
notl
lret
or
adc
aas
adc
lods
pop
movsw
cltd
int3
sbb
push
pop
arpl
fiadds
cmp
push
add
or
stc
in
inc
mov
add
cmp
mov
repz
push
adc
mov
into
imul
js
pop
outsb
push
out
and
mov
jp
mov
adc
sti
lahf
nop
mov
cmp
add
xchg
hlt
xchg
jno
movsb
xchg
fiaddl
inc
pop
out
and
std
hlt
and
jp
jae
mov
mov
or
push
nop
mov
pop
adcb
notb
push
cld
sbb
xor
loop
mov
mov
and
repnz
imul
jge
xor
xchg
fldl
push
pop
sub
stc
sub
adc
mov
out
mov
aam
flds
fdivl
out
movsb
sti
push
jae
push
lock
test
out
jl
jo
popaw
jne
and
insb
mov
and
int
xchg
inc
adc
pusha
es
loop
popf
jae,pt
inc
cmc
rorb
movsl
pop
sti
jmp
pop
sbb
out
cmpsb
cltd
cltd
mov
es
ja
or
pop
mov
jecxz
int3
xor
jle
clc
mov
daa
ljmp
iret
lods
push
inc
sbb
out
repnz
out
add
dec
xor
sub
lahf
cmp
outsl
cmp
cwtl
inc
dec
xor
js
test
jl
ficomps
cs
xor
jmp
movsb
movsb
mov
pop
jle
add
and
jae
or
sbb
jg
pop
sub
shrb
push
fmuls
fwait
add
sbb
cmp
sbb
cmc
push
push
xor
cmp
cmp
paddd
icebp
mov
lea
cltd
xchg
or
fldt
test
xor
cmp
dec
dec
stos
cwtl
and
push
sbb
pop
nop
iret
mov
lea
rcrb
xor
mov
test
mov
sub
xchg
jmp
mov
out
mov
aaa
pop
insl
dec
jbe
xchg
inc
inc
inc
int
jmp
jmp
movsl
sub
mov
leave
xor
inc
inc
insl
sbb
jno
xchg
imul
rclb
aad
xor
inc
movsl
cmp
je
inc
data16
lret
mov
jno
aas
jnp
mov
add
xor
and
mov
sbb
sbb
inc
mov
outsb
sar
mov
aam
push
push
fldl
pop
lret
xchg
cmp
repz
sti
sti
adc
xor
or
icebp
filds
je
cmpsb
or
insb
mov
call
pop
jmp
stos
gs
mov
mov
les
mov
repz
cmp
jae
clc
repnz
sub
ja
lahf
sub
xor
icebp
sbb
daa
in
jl
sahf
lahf
pop
std
aas
test
inc
xlat
sub
cmp
dec
nop
rorl
ret
movsb
arpl
fwait
sbb
jb
cmp
arpl
adc
xor
add
add
lahf
outsl
add
lret
sub
and
dec
add
adc
mov
xor
js
mov
jae
leave
jbe
xchg
hlt
orl
jge
inc
aas
jnp
pop
call
sarl
daa
ficoml
xor
adcl
sbb
mov
add
add
movsb
or
mov
sub
push
jecxz
pop
adc
in
cmp
push
scas
idivb
in
jecxz
and
adc
repnz
adcl
inc
fstl
dec
out
push
call
in
cmpsl
dec
repz
adc
in
inc
push
out
test
cmp
stc
int
les
jmp
mov
jle
cmp
dec
push
andl
push
test
jg
jns
pop
sbb
jne
cld
dec
or
inc
fs
jmp
cmp
add
and
and
sarl
in
ret
enter
pop
push
fisttpl
xchg
pop
stos
push
dec
repnz
ret
in
and
inc
sub
pop
add
iret
pop
sub
pop
xor
sub
ds
jb
adc
adc
add
es
mov
pop
icebp
xchg
pop
loopne
fnstcw
jge
loop
adc
and
lds
sbb
fisubrl
jnp
push
add
sub
inc
push
ror
es
imul
std
imul
test
add
addr16
mov
sub
sub
jg
cmc
stc
and
pop
mov
daa
mov
cwtl
cli
pop
xor
jp
mov
sahf
je
push
ja
push
cli
cmp
or
jns
sti
jge
adc
int
dec
pop
fadds
add
and
mov
dec
xorl
jg
mov
cli
mov
sbb
mov
push
pushf
mov
cld
stc
jne
cmp
fcompl
mov
and
in
dec
test
adc
pusha
inc
inc
sbb
adc
or
xor
inc
stc
clc
and
jecxz
cmpsb
adc
xchg
mov
xchg
nop
sahf
mov
roll
dec
mov
cld
out
cmp
xlat
mov
and
mov
test
xchg
mov
adc
or
les
sub
sub
push
ss
dec
bound
outsb
mov
mov
idivl
inc
pop
test
iret
mov
push
js
push
push
mov
inc
mov
pop
jge
lock
sbb
mov
xchg
subl
gs
loopne
xchg
outsl
push
jnp
mov
sbb
arpl
out
mov
jbe
insb
pop
insl
aaa
insl
mov
mov
pop
adc
jle
push
aam
pop
and
imul
jle
mov
xor
add
jbe
fcompl
or
inc
push
scas
cs
mov
jle
mov
out
mov
loopne
inc
mov
clc
movsl
sub
jnp
mov
push
popa
lock
out
jle
fsubl
int
clc
pop
and
jbe
scas
movsl
jle
cmc
out
jno
lds
in
insl
js
dec
push
bound
addl
sbb
mov
pop
push
or
push
aaa
loope
pop
int
mov
into
push
js
scas
fstl
into
sub
mov
or
xor
jo
jg
sbb
jmp
push
dec
lods
xchg
or
ljmp
ljmp
aaa
test
insb
fucom
jo
push
mov
cmp
xchg
hlt
cmpsl
sbb
xchg
cmp
sbb
add
lahf
pop
lret
push
cmp
cld
add
push
jae
stos
inc
popa
mov
mov
and
sub
fists
nop
pop
xchg
add
xchg
mov
mov
es
or
or
sbb
bound
and
into
xchg
mov
mov
jg
sbb
cmp
fwait
test
js
lcall
stos
out
andl
out
orb
jmp
mov
xlat
popa
dec
mov
dec
push
loop
and
adc
xor
daa
push
into
adc
movsb
jnp
push
mov
mov
mov
je
push
inc
std
pop
cmp
fldcw
jb
jnp
adc
stc
xor
mov
in
rcll
shrb
mov
clc
push
add
inc
shl
shl
div
imul
negl
std
lods
jge
xor
loop
je
and
adc
inc
sbb
adc
movsb
cmp
xor
mov
daa
leave
shll
xchg
xlat
xchg
mov
lret
movsl
pop
gs
rdmsr
scas
testb
arpl
ja
add
or
iret
xchg
jno
shll
incl
out
ret
add
cltd
mov
ss
daa
lds
sub
xorb
insl
or
mov
mov
shrl
mov
pop
imul
shl
push
xchg
ss
jmp
xor
xchg
std
les
js
mov
div
mov
fnstsw
dec
mov
fnstsw
xchg
rolb
sub
xchg
push
test
loop
inc
fmuls
test
loopne
xchg
in
ret
daa
push
xchg
or
and
mov
cmp
add
mov
mov
dec
xor
or
mov
jne
fs
frstor
pushf
lret
repnz
or
xor
mov
je
push
ja
mov
dec
cmp
lret
lcall
pop
out
adc
mulb
jge
push
enter
and
dec
pop
cli
les
and
out
scas
mov
in
icebp
jns
add
into
mov
fs
mov
ja
push
orl
iret
psubd
xlat
shlb
pusha
in
jno
and
mov
daa
sti
cmc
jns
fsubrp
sbbl
xlat
adc
mov
dec
or
or
fcomps
mov
js
mov
subb
cmp
adc
mov
gs
mov
add
mov
sbb
mov
push
pop
in
mov
std
push
mov
pop
pusha
roll
lahf
popf
subl
pop
jecxz
scas
mov
pusha
fiaddl
mov
pop
cld
and
repnz
pop
pop
or
testb
loop
xlat
fwait
mov
mov
mov
push
cltd
imul
and
clc
sub
pop
cmp
mov
or
add
jo
or
push
xor
push
mov
mov
ljmp
push
movsb
outsl
push
jno
jmp
sti
sub
out
lret
dec
popf
pop
movsb
rcl
or
cmp
paddusb
hlt
mov
push
sarl
dec
jge
sub
in
mov
adc
add
add
enter
imul
cmp
test
ss
lods
and
inc
movsl
jle
mov
push
push
pushf
fbstp
nop
jnp
fsub
cmpsl
aas
push
push
jecxz
in
inc
ja
sbb
pop
fists
or
fs
jle
jle
inc
mov
nopl
mov
fdivs
pop
sub
aad
mov
push
adcl
xchg
sbb
mov
cmp
out
aas
and
sbb
add
inc
push
inc
pusha
ficoml
js
dec
popf
bound
pop
sub
push
or
cli
pop
mov
sub
push
ds
jle
push
fstp
pop
nop
out
cmpsb
mov
adcl
lock
mov
adc
insl
pop
stc
push
les
adc
addb
ja
pop
mov
ds
stos
xlat
push
jmp
xor
inc
mov
ffreep
movb
rcr
pop
mov
and
add
fildll
or
mov
loope
cmp
lock
pop
sbb
insl
xor
adc
ja
lods
or
addb
es
cmp
lock
or
les
ret
mov
push
or
jo
dec
or
xor
mov
ja
sbb
mov
fimuls
insb
movsb
sbb
fdivp
shll
mov
cs
xor
arpl
add
hlt
out
in
push
jno
lods
cmp
xor
push
or
rcll
fisttps
int
pop
sub
sbb
mov
push
sbb
or
adc
cs
cmc
mov
out
out
sub
mov
push
add
add
inc
test
xchg
mov
xchg
scas
adc
and
pop
sbb
fdivs
stos
in
cmp
out
push
sti
jle
je
mov
call
cmp
lret
stos
inc
movsl
pop
lock
shlb
jecxz
adc
xchg
addr16
and
jne
sub
xchg
sbb
mov
jnp
sbb
or
imul
nop
inc
xor
outsb
div
loop
jnp
xchg
loope
lods
out
mov
addl
lret
cmp
lret
xrelease
cwtl
aam
mov
and
xor
mov
in
fsts
dec
jg
stos
and
ret
div
fwait
cltd
mov
incl
mov
mov
outsb
inc
lds
pop
xor
and
sub
fdivrs
aad
add
loop
popf
insb
ja
daa
daa
jmp
jle
cmp
fucomi
aaa
or
sbb
clc
enter
mov
mov
sarb
into
jnp
call
inc
adc
push
aaa
mov
test
cmpsl
jb
insl
xchg
push
and
mov
stos
add
xor
stos
ljmp
sub
outsb
sti
lods
push
aam
rcr
lahf
xchg
xor
inc
add
mov
and
idivl
mov
mov
dec
insl
test
mov
out
jmp
jmp
daa
fldcw
inc
movsb
adc
mov
sbb
pop
and
sub
jb
les
incl
pop
inc
bound
mov
rcl
push
movsb
in
sahf
xlat
loope
les
push
sub
push
aam
mov
rcrl
xlat
or
pop
xor
imulb
out
xor
xchg
add
test
mov
cmp
or
ret
adc
aas
fistpl
and
push
push
add
fs
rclb
scas
sub
ret
adc
mov
outsb
pushf
xor
cs
sub
jb
out
filds
scas
sub
mov
jo
fsubrl
add
out
sub
and
clc
jnp
loopne
cmpsb
xor
pop
dec
int3
push
fcmovne
in
in
pop
dec
loope
std
jbe
shlb
stc
mov
and
in
insl
mov
cmp
or
pop
icebp
dec
clc
mov
clc
arpl
jae
test
insb
sub
push
stc
xchg
sahf
push
mov
shll
cmp
addb
mov
scas
call
sbb
aas
pusha
cmp
gs
xor
in
stc
call
jbe
icebp
push
lahf
in
xor
sub
mov
enter
xchg
nop
pop
sbb
sub
mov
scas
test
sbb
insl
push
cwtl
dec
xchg
dec
pushf
inc
popa
cmpl
jp
loop
repz
pop
sub
pop
fcmovnbe
xchg
jo
ret
es
cwtl
cmp
orl
xor
jmp
pop
cmp
jp
or
movsl
cli
ljmp
cli
sub
mov
or
inc
or
mov
xchg
lret
and
adc
arpl
and
fldl
or
pop
iret
push
imulb
je
xor
les
sub
xchg
adc
cli
cmp
inc
iret
adc
push
je
add
jmp
cmp
pop
sar
imul
ss
loop
mov
rcll
hlt
sub
cmp
push
loope
je
out
ficompl
push
pop
loop
dec
xchg
into
fs
jp
xchg
adc
loope
sahf
testb
add
rolb
push
test
mov
mov
mov
lds
loope
mov
shlb
xor
jno
cmp
pop
popa
pop
ss
dec
pop
cmpps
xchg
shll
or
out
adc
jle
mov
add
adc
pop
xor
outsb
lcall
and
xchg
cmp
xorb
shrl
sub
dec
shl
fcmovu
push
int
mov
push
in
es
mov
imul
repnz
push
add
inc
xchg
jecxz
xchg
pop
sbb
outsb
jmp
dec
leave
mov
cmp
sbb
or
sarb
jne
test
xor
frstor
or
dec
and
das
insb
jno
add
sub
pushw
pop
fsubrs
out
xor
pop
testl
mov
out
repz
push
iret
mov
hlt
arpl
push
lret
pop
inc
jno
insl
mov
shlb
or
sub
incb
ljmp
stc
imul
push
and
mov
mov
ljmp
sub
pop
insb
std
lahf
into
idivb
push
cmp
in
push
push
test
and
dec
in
mov
movsb
add
bound
jns
mov
mov
in
mov
scas
mov
jae
add
and
ds
or
imulb
leave
les
pop
mov
aaa
movsb
and
pop
lds
ds
mov
pop
pop
lcall
push
sbb
ja
test
arpl
xchg
fwait
loop
cwtl
inc
cmpsb
in
std
pop
bound
test
pop
or
imul
jns
and
loope
cmp
inc
jecxz
mov
mov
push
mov
or
popa
xchg
mov
lock
in
fisubl
jns
nop
or
out
imul
dec
stos
xchg
mov
mov
pusha
xor
icebp
xorb
push
xor
sarl
insb
outsb
cli
sbb
mov
xchg
cs
mov
sbb
mov
sbb
addr16
mov
cmp
mov
push
mov
lods
push
sub
pusha
popf
clc
test
inc
push
test
jg
mov
lds
inc
popa
push
mov
cmpsb
xchg
jb
fldenv
movsb
lret
scas
xlat
sbb
fwait
pop
stos
jnp
mov
xor
and
aaa
testb
jno
filds
icebp
mov
xchg
mov
addr16
sub
mov
adc
cmpsl
fwait
or
sbb
cmp
ret
or
sarb
inc
popa
jbe
push
mov
scas
xor
adc
outsb
jl
sbb
sbb
fisttpll
gs
or
rcpps
lcall
cs
push
lahf
jmp
jno
pop
out
push
dec
aas
int3
mov
mov
mov
mov
push
lods
or
mov
rcrb
cmp
iret
inc
add
add
imull
xchg
add
or
fs
pop
ret
ficoms
push
std
mov
pop
mov
dec
mov
fisubs
lcall
loopne
jmp
push
cwtl
imul
call
div
femms
pop
mov
cli
loope
cmp
mov
sub
push
js
mov
ss
mov
inc
std
add
jg
push
decb
xor
rcl
shlb
inc
cmp
les
pop
jecxz
pop
push
xlat
insb
shlb
pop
xor
stos
mov
addr16
adc
into
xchg
xchg
or
out
dec
scas
xor
cmp
popf
insl
enter
popf
cwtl
daa
scas
jo
dec
insl
arpl
dec
int3
adc
mov
add
push
xchg
or
scas
scas
fstpt
negb
fstpl
sub
bound
adc
dec
ret
adc
pop
push
loop
mov
in
aad
insl
fisubl
mov
out
xlat
pop
movsl
sbb
insl
nop
jbe
sar
sub
insl
jnp
jmp
sarl
mov
aam
repnz
outsl
lret
sub
clc
call
pop
bswap
les
jb
xchg
push
inc
mov
pushf
insb
ficoml
inc
add
sub
pusha
push
test
push
push
sbbl
xchg
lds
ja
pop
mov
stos
or
imulb
lock
loope
in
aam
rcrb
cwtl
test
loop
push
push
iret
fdiv
mov
adc
push
imull
mov
gs
sti
cmpsl
inc
std
push
icebp
aad
movb
sbbl
lahf
cld
sbb
adc
dec
clc
mov
sub
or
push
adc
inc
adc
fwait
pop
add
mov
dec
pop
leave
aad
movsb
xchg
sahf
jp
scas
and
adc
or
cmp
pop
jecxz
xchg
in
jp,pn
xorb
inc
lcall
xor
mov
packsswb
or
dec
ss
mov
daa
jg
stos
enterw
jl
loope
mov
lcall
fists
cld
cld
mov
pop
pop
sbb
mov
and
in
pop
add
fcmovnbe
aad
jbe
stos
cltd
lret
mov
or
gs
les
cmp
jo
add
dec
xorb
or
stos
stos
jne
popa
inc
and
cmpsl
jns
adc
adc
notl
mov
pop
jnp
int3
jnp
xchg
int3
push
cmp
add
mov
or
cmpsb
xchg
xchg
dec
push
jo
mov
aad
mov
xor
inc
mov
xchg
aaa
mov
cmpsb
mov
mov
xchg
dec
sar
adc
xor
pop
adc
scas
loop
and
push
push
jno
into
sbb
out
pop
negl
push
int
xchg
xor
stos
jne
jb
pusha
jb
nop
cltd
imul
popf
cs
out
cld
sub
mov
popf
sbb
sub
xor
and
dec
adc
aam
fs
loopne
shrb
test
cmp
sahf
xchg
mov
xor
push
jae
or
repnz
mov
mov
push
rorb
pop
sbb
std
xchg
es
jmp
cli
idivl
fistl
sub
ss
sbb
popf
movsb
dec
mov
jno
jb
ss
nopl
outsb
inc
cld
js
xlat
or
sub
cld
adc
sbb
es
divb
shl
mov
pop
inc
push
faddp
roll
and
sbb
xor
push
stc
je
mov
loopne
nop
dec
shrl
xchg
jmp
and
add
hlt
dec
dec
testb
cli
shrb
inc
movsl
cmp
rcrl
sbb
inc
mov
cmp
inc
mov
sbb
test
fwait
mov
pop
out
repnz
es
mov
les
and
jle
push
inc
add
mov
cs
in
jp
jno
test
sarb
loope
dec
add
lods
in
ss
aas
ret
int3
pushf
ljmp
lods
inc
push
icebp
shl
aad
out
mov
xor
sub
ficoml
mov
icebp
and
sub
or
js
xor
out
mov
mov
jno
xchg
stos
aaa
jns
jle
stc
pop
inc
mov
sbb
lock
sarl
xchg
movsb
inc
mov
popf
sbb
stos
in
dec
push
xor
and
pop
fadd
jnp
hlt
outsb
pop
hlt
fisubs
sbb
dec
std
testb
jmp
loopne
out
lock
and
push
pop
ret
in
test
bound
out
dec
loop
data16
and
bound
or
call
rorl
add
outsl
jno
mov
adc
xchg
xchg
jbe
pop
jo
sbbl
jl
fsts
ljmp
popf
mov
xor
aam
xchg
mov
xchg
pop
mov
jg
idiv
cmpl
xor
ljmp
xchg
adc
ret
xlat
mov
add
sbb
and
dec
mov
notl
push
ret
pop
mov
bound
call
out
popa
lds
or
and
lahf
lret
jo
cmpsl
lahf
sti
clc
sub
sbb
lds
xchg
scas
clc
les
insl
jecxz
iret
je
ds
inc
xchg
repnz
aas
pop
imul
fistl
test
mov
push
inc
sti
sti
sbb
mov
xor
imul
cmpsb
sub
cli
mov
add
dec
push
cwtl
xor
lea
add
shlb
jo
les
push
fs
lea
mov
bound
lcall
and
repnz
mov
add
mov
ftst
in
dec
jl
xchg
cs
xchg
pop
loop
jl
sub
stos
lods
adc
stos
mov
mov
repz
movsb
movl
sbb
nop
cld
pop
sub
scas
add
imul
int
orl
jge
incb
push
addb
mov
sub
xchg
push
icebp
push
decb
jb
stos
sbb
add
dec
into
sahf
sub
ljmp
adc
gs
lret
sub
sbb
dec
add
int
out
xchg
sbb
mov
aam
xlat
dec
and
std
pop
adc
rcr
and
sbb
xchg
stc
xchg
mov
cli
fists
push
push
adc
scas
lock
fwait
rcl
outsb
pushl
int3
iret
ret
outsl
mov
ljmp
and
mov
js
jnp
leave
mov
stos
and
sub
dec
sub
shll
lret
dec
xorb
xchg
xor
sub
outsb
loop
divb
stos
loopne
mov
enter
mov
xlat
sub
imul
out
mull
popa
cmp
lahf
lods
ret
repz
adc
pop
xchg
dec
cli
mov
sbb
divb
outsl
sub
clc
mov
clc
mov
push
loope
push
into
es
xorl
inc
pop
cwtl
pop
inc
inc
mov
add
in
mov
out
jg
sbb
pop
repnz
dec
dec
push
orb
inc
orl
into
and
pop
or
into
push
adc
call
push
push
mov
pusha
add
cltd
xchg
push
sub
xor
imul
scas
push
outsb
or
int
push
mov
sub
xor
pop
push
sahf
aaa
movsl
push
cli
repz
leave
shlb
pop
pop
adc
adc
dec
lea
dec
and
lret
push
int
movsb
rorl
dec
jbe
mov
out
or
mov
add
out
adc
xor
repnz
leave
or
push
lock
hlt
outsl
xor
push
mov
xchg
arpl
mov
pop
in
jae
shl
jg
out
mov
in
lods
jl
mov
cmp
and
ds
or
in
loope
arpl
ret
cli
repz
cmp
decb
mov
add
dec
jb
shlb
adc
mov
mov
push
out
out
or
rcll
ljmp
jo
lahf
subb
lods
ret
pop
cs
or
adc
or
loop
mov
and
push
movsl
mov
mov
mov
jne
out
push
in
push
stos
stos
fidivl
pop
or
pop
jle
pop
outsb
xlat
js
test
or
mov
test
mov
pop
rol
xorl
out
into
mov
loopne
shrl
out
imul
cmpsb
xchg
mov
mov
mov
push
aaa
xlat
sbbb
inc
pop
sbb
add
sub
and
dec
lcall
inc
js
mov
in
add
jmp
movsl
mov
stc
jp
and
mov
push
lods
jge
stos
icebp
xor
test
imul
jnp
pop
inc
cmp
mov
mov
pusha
lret
lea
ret
imul
shlb
xchg
mov
adc
leave
mov
test
rcrl
dec
sub
and
sbb
xor
sbb
repnz
sbb
push
push
xchg
bound
loop
fstl
das
leave
jo
adc
hlt
and
out
cli
sarl
shr
cmp
push
mov
movsl
pop
cmpsb
xchg
mov
sete
push
data16
fldenv
inc
es
lahf
and
in
int
daa
cmp
mov
mov
push
dec
das
xchg
sbb
ss
xchg
push
and
loope
clc
shl
stc
imul
lcall
and
repz
dec
xlat
pusha
insb
sahf
es
or
in
mov
fildll
push
movsl
clc
rolb
popf
loop
sarl
mov
sbb
cli
lahf
push
pop
cltd
stos
mov
cli
in
ret
fucomp
pushf
cmp
pop
push
and
fdivrl
mov
cmp
add
adc
jne
cmp
push
psrlq
xchg
jl
loopne
ljmp
js
pusha
lock
and
or
std
aad
cmc
mov
mov
inc
std
inc
jmp
js
mov
mov
cltd
dec
jge
mov
xor
mov
xor
sahf
lahf
push
daa
mov
jl
xor
and
cwtl
xchg
test
into
mov
dec
mov
lret
push
aas
cmp
les
or
dec
or
scas
mov
add
scas
jmp
xchg
push
into
jmp
ss
or
lret
test
fsubrl
mov
adc
loope
loop
adc
xchg
adc
add
jb
pop
sbb
sub
and
outsl
xlat
xor
mov
adc
ror
pop
adcb
aad
imul
add
xlat
sti
imul
es
jns
sahf
cmc
mov
jp
dec
cmp
and
or
xchg
cmp
and
inc
or
xor
stos
data16
lahf
jmp
fwait
dec
in
adc
into
leave
sahf
mov
dec
popa
fwait
sub
lret
movups
inc
cmpl
aam
mov
cmpsl
pop
xchg
ret
nop
pop
or
repnz
loop,pn
xchg
and
call
jmp
adc
pop
jle
sub
pop
fmulp
and
xchg
and
loop
bnd
add
push
out
xchg
sar
mov
insl
loope
fwait
mov
roll
mov
out
ss
jmp
cmpsl
sbb
test
ja
shld
stos
rcrb
sti
jbe
in
ror
or
adc
aad
test
fistl
scas
and
lret
inc
or
jg
nop
shlb
sbb
dec
adc
into
jle
cmpsl
das
xchg
iret
add
sbb
pop
cmp
sub
push
jl
loope
in
pushf
sbb
cmc
cwtl
int
out
orl
mov
sar
or
jecxz
add
insb
or
aas
loopne
push
add
mov
dec
jle
push
addr16
adc
out
shlb
inc
hlt
mov
lock
daa
dec
loope
mov
lcall
mov
stc
cmp
push
ret
pop
bound
push
mov
xor
push
movsl
dec
mov
or
mov
or
add
lret
jge
icebp
js
push
outsb
mov
xchg
gs
lret
sub
leavew
mov
test
bound
pop
inc
sbb
dec
imul
cmpsb
xor
adc
mov
push
adc
je
testb
or
and
inc
sbb
cmpb
mov
bound
ret
iret
cs
rcrl
push
pushf
aas
ds
popa
adc
sbb
push
push
xor
movsl
movsl
push
mov
outsb
mov
xorl
addr16
pop
mov
and
popa
out
inc
inc
inc
aad
cmp
xor
jg
lcall
push
in
lea
int
push
add
je
inc
xchg
mov
out
adc
lods
out
scas
rorb
in
xchg
lret
loopne
enter
test
push
xchg
ja
lds
in
scas
xorl
mov
lea
imul
jge
fistps
push
addr16
sub
lods
push
xor
xchg
scas
pop
jnp
flds
scas
cld
addb
popa
mov
orb
sahf
push
lcall
mov
sub
xor
in
cmpsl
sbb
dec
cmp
sbb
mov
je
fxtract
pop
test
jns
repnz
insl
push
push
pop
cmp
fnsave
mov
xor
dec
sub
or
stos
and
nop
pusha
mov
sub
jl
fwait
insl
scas
cli
ud0
pop
test
arpl
clc
push
xchg
pushf
lock
arpl
mov
fbstp
dec
test
mov
mulb
stos
mov
out
jnp
insl
leave
xchg
jl
push
xor
sti
stc
inc
jg
aam
and
push
inc
ficoms
popl
and
mov
test
and
rolb
xchg
add
mov
shl
scas
cli
es
jne
nop
xchg
in
js
jbe
mov
jb
mov
rcll
pop
cmp
mov
and
inc
lock
adcl
fdivrs
or
scas
pop
push
mov
cmpsl
cmp
sub
mov
lahf
adc
into
xor
aas
in
cmp
sbb
xchg
mov
cs
ret
loop
pop
pop
daa
lret
mov
sub
cs
sub
pop
outsb
push
test
shll
jb
stos
inc
lahf
int
rorb
ffreep
push
xor
xor
or
int
mov
popa
push
pop
xchg
push
sub
loopne
cwtl
adc
lds
into
xor
jl
dec
cmc
fcompl
jmp
adc
mov
rolb
sbb
xor
imul
popa
shl
cltd
je
test
lret
dec
fs
pop
ret
or
aam
mov
dec
imul
cwtl
xor
pop
fwait
mov
mov
lods
rep
in
xor
sub
add
loopne
mov
shl
fistl
fcoml
pop
push
mov
arpl
das
pushf
or
jge
cld
mov
gs
sub
sub
out
pop
bnd
xor
das
inc
or
nop
jp
mov
pop
dec
push
xor
jg
cmp
push
push
mov
adc
rcl
push
push
inc
imull
xor
cmp
repnz
insb
pop
ljmp
jae
xchg
loopne
ja
add
jmp
nop
cwtl
pop
xor
cmp
hlt
fdivrp
mov
xchg
cwtl
inc
push
dec
push
xchg
cltd
and
push
stos
arpl
mov
jge
mov
cli
mov
pop
xor
adc
sub
nop
in
rclb
pop
out
and
dec
mov
fptan
mov
pop
and
jle
mov
push
cmp
jecxz
cmp
out
xchg
inc
in
mov
push
scas
test
inc
sub
mul
insb
jmp
fmuls
outsl
push
ror
lcall
push
sub
in
xchg
xchg
lods
sbb
aam
fisttps
xchg
add
mov
inc
inc
push
mov
cmpb
xchg
inc
pop
cmp
test
or
cmp
jecxz
fimull
incl
xchg
jmp
add
sub
stos
cmpsl
testl
and
push
mov
and
mov
cmp
pop
sub
daa
adc
or
call
and
repnz
xchg
stos
divl
fcmovb
pop
xchg
test
int
js
jg
mov
ret
std
pusha
xchg
dec
and
add
cmpsl
lret
in
ja
fcoml
mov
push
enter
cmpsb
ret
jbe
lods
sbb
in
cld
insl
js
mov
movsl
in
push
xchg
out
std
out
adc
rolb
movsb
xchg
das
and
cwtl
aas
dec
push
xlat
int3
adc
in
imul
add
test
shrl
imul
andb
das
dec
inc
sahf
push
in
xor
sbb
fstl
lds
mov
cwtl
cmpsl
jno
add
cmp
dec
inc
jp
or
xchg
sbb
pop
mov
pop
mov
fists
out
test
loope
call
into
lds
rcr
ret
test
loope
bound
push
fs
xor
orl
fisubl
xchg
sbb
cli
cmp
mulb
xor
call
mov
inc
int
pop
and
ja
cltd
rol
or
mov
out
and
shlb
pop
cmp
mull
imul
mov
mov
dec
and
cwtl
xlat
pop
popf
dec
mov
jae
mov
add
push
adc
shlb
or
ss
sbb
sti
cmp
xor
daa
mov
cli
jb
push
mov
scas
stos
cmp
jns
sbb
out
call
dec
and
std
test
sub
xchg
inc
xchg
xor
out
pop
push
and
lret
pushl
ret
aaa
mov
lea
cmp
mov
pop
bound
rcrl
lret
adc
loop
add
mov
aad
mov
fwait
stc
aas
inc
jb
mov
mov
lods
inc
jge
sub
sti
fldl
lret
fbstp
clc
std
mov
jg
adc
mov
aam
jbe
xor
push
mov
inc
out
mov
push
out
out
ja
ja
out
stos
iret
in
cmp
nop
aam
or
lds
ret
scas
xchg
fs
xchg
es
lret
icebp
iret
jmp
sbb
dec
mov
xor
xchg
clc
xchg
ss
cli
cmp
add
mov
mov
outsb
mov
or
lds
and
dec
test
stos
xchg
clc
jns
outsb
dec
xor
divl
cltd
mov
jg
fistpl
jbe
iret
test
vprotw
int3
mov
dec
cmp
pop
daa
adc
movq
cmp
inc
data16
arpl
movsb
insb
pop
gs
imul
out
outsb
add
js
not
ljmp
lret
jb
xor
outsl
insl
fbld
jne
xchg
sbb
jmp
scas
jae
int3
test
jp
and
fnstcw
mov
mov
mov
outsb
data16
ret
or
cmp
fwait
ss
lret
jl
add
out
cmpsl
adc
or
sub
push
sub
add
sbb
ret
movsl
jb
adc
stos
data16
gs
push
repnz
sub
add
mov
enter
int
mov
ljmp
cmp
movsl
fdivl
scas
repz
cmp
mov
dec
xor
stos
xor
jno
mov
cs
cmp
and
or
sti
or
or
call
mov
cmp
sti
rcrb
mov
add
aam
movsl
es
cmp
pusha
inc
lods
push
adc
add
jo
cmp
jmp
popf
pop
or
xor
xchg
adcl
ficoms
cmp
xchg
ret
mov
fnstcw
mov
jge
mov
clc
es
lods
fildl
inc
ret
push
mov
int
jg
add
sub
aam
cmp
bound
dec
adc
imull
pop
jne
adc
loop
cwtl
cmpsb
lret
idiv
popf
int3
push
jbe
xchg
fwait
aad
lahf
clc
mov
xor
lods
cltd
pop
into
lods
test
popa
out
cmc
divb
mov
jno
dec
shl
mov
les
scas
popf
mov
addr16
insb
jne
das
lock
aaa
clc
lods
frstor
stos
popf
imul
adc
xorb
inc
mov
mov
xchg
outsb
cmp
cmp
pop
adc
bound
iret
xor
mov
and
js
or
sti
mov
cmp
dec
adc
int3
movb
xchg
mov
cmp
xor
sbb
xchg
dec
mov
outsb
cmpsb
cltd
test
add
daa
sub
cwtl
cld
xor
enterw
push
jle
repnz
in
imul
adc
pusha
push
mov
xor
and
imul
push
mov
mov
cmp
fidivs
in
test
imul
clc
scas
jno
pop
and
dec
mov
fwait
fdivrl
sbb
jb
in
movsl
sbb
repz
daa
or
lret
cmpsl
out
inc
xor
inc
pushl
xchg
dec
push
dec
inc
sub
xlat
pusha
jp
jae
fstpl
pop
sbb
cmp
jl
cmovns
push
rolb
adc
fwait
nop
pop
scas
cmp
mov
sbb
add
pop
sub
in
icebp
addr16
adc
in
insb
jl
test
xchg
rol
out
int3
cmp
jg
mov
mov
andb
movsb
xor
xchg
push
fwait
mov
jmp
pop
inc
cld
pop
mov
mov
sbb
test
mov
fcmovnbe
push
jbe
rol
pop
pop
test
push
movsb
in
cwtl
mov
test
cmpsl
inc
lock
lds
out
icebp
xchg
xor
movsb
loope
push
cwtl
mov
xchg
add
clc
lods
shl
add
adc
push
mov
popf
cli
inc
into
push
into
jmp
loopne
sbb
pushf
inc
xchg
ret
sahf
iret
mov
sbb
smsw
loopne
push
cltd
jg
popf
cltd
popf
sbb
mov
clc
rcrb
inc
lds
inc
mov
incb
arpl
es
inc
cmpsl
cli
mov
push
fiaddl
dec
and
mov
ljmp
mov
addl
aaa
dec
outsl
bound
adcl
sub
inc
hlt
cltd
xchg
imul
ret
imul
insl
fildl
dec
sub
xor
pop
and
movsl
pop
bswap
xchg
push
dec
out
in
scas
and
push
push
nop
ficomps
and
adc
cwtl
mov
push
enter
sbb
hlt
sub
and
add
jge
rol
cmp
add
dec
push
cmp
cmp
in
jne
and
xchg
lock
insb
stc
sbb
jae
lea
clc
cmp
jo
cld
jg
insb
out
push
sub
jle
or
push
int3
jne
inc
pop
pop
loope
mov
sub
adc
fdivrp
push
call
pop
inc
dec
cwtl
inc
add
mov
and
cwtl
cwtl
test
mov
sti
pop
add
popf
adc
ja
dec
cld
push
adc
imul
call
push
push
ret
ja
push
mov
stos
sbb
daa
lret
in
cmc
lds
xor
or
push
xchg
inc
inc
dec
in
fdivrs
xchg
cmp
jp
xchg
int
inc
pop
pusha
jne
sti
and
aam
ret
out
fucomi
mov
and
and
mov
cltd
std
sar
ljmp
lds
repnz
xchg
mov
cmpsl
mov
into
scas
bound
lcall
mov
cs
pop
dec
sbb
leave
mov
sbb
pop
xchg
mov
jl
and
out
lock
imulb
fcmovu
in
mov
ja
out
lretw
pushf
jae
int
mov
push
mov
push
cmpsb
test
out
pop
fwait
and
ja
and
inc
test
fwait
xor
sub
ss
outsl
lcall
test
lret
fstpl
xchg
or
addr16
sbb
xor
out
pop
fisubs
pop
fsubrl
inc
addr16
jmp
jo
push
loope
out
nop
aas
sub
and
negb
jnp
lcall
mov
jecxz
push
cld
ja
imul
and
mov
cmc
loop
jb
xlat
pushl
inc
repz
jecxz
cmp
inc
adc
xlat
mov
add
fs
daa
mov
and
in
nop
andl
stos
out
js
mov
sbb
sbb
insb
mov
mov
in
xchg
mov
mov
pop
mov
js
mov
out
insl
out
sbb
mov
mov
test
dec
fmuls
movsl
mov
add
mov
aad
dec
shl
test
int
sahf
jmp
stc
mov
leave
inc
testb
int
jl
leave
and
popa
mov
xchg
leave
mov
xchg
pop
push
mov
mov
aas
cmp
cmp
dec
fs
cmp
push
jae
pop
inc
cld
jns
loopne
mov
daa
sahf
mov
scas
sub
loope
add
sbb
mov
pminub
mov
mov
adc
clc
mov
cmp
aaa
cmp
ret
and
push
cmp
lahf
dec
push
mov
lret
mov
out
mov
ficompl
adc
out
loop
push
mov
lcall
pop
xchg
adc
sti
mov
jno
jns
cmp
inc
mov
mov
lret
adc
and
inc
and
dec
add
jmp
daa
inc
xor
cmp
mov
rcrl
and
stc
jl
pop
ljmp
adc
lock
fwait
sbb
inc
jmp
jo
lods
adc
cltd
out
or
add
or
adc
sbb
jmp
fldenv
jo
lock
or
jge
jge
roll
dec
dec
aas
stos
aad
xor
push
lods
mov
mov
stos
fmul
call
mov
inc
shll
xchg
addr16
in
mov
pop
or
out
lret
push
jo
jbe
jecxz
sbb
adc
xchg
and
andl
xorb
xor
adc
jns
repnz
stc
mov
clc
rorl
mov
jae
sbb
pop
aad
cmc
push
push
cmp
push
sete
or
in
les
adc
pushf
into
mov
rcr
aam
mov
sbb
and
fnstcw
in
cmc
ja
jle
mov
and
xchg
out
cs
pop
pop
popa
shlb
lods
scas
jl
sub
xchg
pop
sbb
jne
dec
jb
push
popa
rcr
mov
pushl
pop
jl
cmp
push
inc
jle
addr16
mov
lds
jmp
xchg
add
adc
jns
lret
notl
insl
mov
mov
jne
ds
pop
pop
js
cwtl
andb
mov
fwait
jmp
xchg
or
push
pop
pop
in
sub
inc
fbstp
jb
push
adc
cmp
pop
mov
repz
sahf
pop
cs
enter
adc
ja
adcl
imul
ljmp
aaa
adc
mov
flds
xchg
adc
nop
inc
push
xchg
lds
cmpsl
imul
iret
cld
test
lea
gs
shl
cld
in
sbb
dec
orb
pop
sbb
push
fsubrs
mov
rcl
lea
xchg
adc
pop
mov
and
push
inc
movsb
pushf
repnz
xor
in
imul
data16
scas
mov
inc
xor
mulb
movb
xor
dec
push
cmp
jb
sti
out
inc
cmp
jecxz
dec
xchg
add
test
dec
sub
mov
push
inc
fcmovbe
je
adc
sti
inc
dec
jmp
push
push
dec
adc
mov
pop
xorl
nop
push
xlat
xor
fstps
inc
mov
mov
pop
subb
and
sbb
mov
cwtl
insb
xor
std
cmpsl
xor
out
lcall
clc
xor
jne
fwait
adc
fcmovnbe
add
leave
imul
movsl
mull
pop
add
mov
xor
mov
jbe
adc
movsb
mov
fdivs
inc
add
sub
orl
add
fwait
out
stos
icebp
xchg
mov
or
popf
imul
lock
lods
jl
mov
sahf
fadd
nop
das
jg
mov
and
and
inc
push
lahf
pop
mov
idivl
in
dec
pop
mov
ljmp
lcall
hlt
aas
jbe
imul
repz
dec
shl
fsts
pop
adc
outsb
or
fadd
mov
fs
repz
mov
mov
inc
mov
xchg
mov
xchg
cltd
xchg
jnp
mov
or
mov
sbb
js
insl
jmp
mov
push
mov
outsb
loopne
les
jnp
jnp
test
push
jle
decl
lcall
adc
push
leave
push
mov
cltd
xor
push
xor
add
or
add
push
mov
jo
jecxz
ret
insl
outsb
jl
fsubrs
popl
scas
sbb
je
fs
int3
mov
mov
loop
dec
or
mov
xlat
pushf
mov
xorl
outsl
shlb
fwait
push
add
jns
dec
popa
dec
xchg
sub
add
insl
lret
cmpsb
iret
rcr
sbb
push
jg
lret
ret
scas
inc
frstor
add
lret
pop
pslld
shll
inc
push
dec
xchg
and
enter
leave
sti
fmuls
inc
enter
aas
push
pop
pop
and
outsl
out
dec
dec
jne
enter
lods
dec
mov
cli
insl
push
bound
pop
push
inc
and
rorb
mov
fsubp
mov
xchg
dec
pop
xchg
rcrl
lock
iret
fisubs
lea
mov
push
pop
and
jbe
lahf
dec
pop
pop
arpl
or
push
add
outsl
adc
mov
aad
nop
repnz
jl
shll
mov
std
mov
xlat
rcr
and
inc
sbb
jecxz
enter
mov
fstps
imul
leave
sub
sub
push
sub
cs
jo
ja
xchg
dec
dec
fsubrs
dec
cmp
cmpsl
int3
popf
enter
sarl
std
ljmp
mov
clc
push
push
xor
push
mov
popf
mov
loop
push
mov
cmp
mov
ja
fbstp
mul
insb
pop
add
cld
mov
dec
mov
mov
xchg
fsubrs
inc
shr
pop
cmpl
mov
jo
jmp
adc
pop
push
sahf
jnp
jge
stc
rcrl
popa
subb
jns
jge
lds
mov
cmp
aas
jmp
aas
jecxz
mov
test
stos
mov
and
insl
lods
insl
dec
into
fnstsw
popl
test
lock
inc
xchg
mov
fs
inc
das
sbb
std
hlt
pop
insl
push
into
out
mov
mov
je
call
aaa
sub
mov
flds
mov
inc
rcrb
dec
outsl
sub
or
outsl
rcl
pushf
fwait
popa
mov
cmp
andb
sub
push
test
inc
mov
addr16
mov
dec
xchg
fcmovnb
mov
cltd
dec
or
pop
jge
cli
cmp
xchg
popf
mov
or
je
sbb
xchg
mov
in
les
enter
lcall
pop
scas
sahf
in
jbe
and
dec
jl
push
pop
cmpsb
xor
add
iret
mov
aas
es
mov
test
negb
mov
fcomps
lahf
arpl
xor
leave
lcall
fisubl
aaa
adc
jnp
mov
sub
clc
lods
cwtl
test
ret
xor
in
mov
push
sub
push
xor
lea
pop
dec
jnp
cmpl
mov
lds
enter
mov
cmc
mov
call
inc
add
movsl
in
pop
xorb
sbb
adc
push
lods
cmpsb
pop
stos
addl
lock
imul
pop
sub
and
js
xor
jno
sub
je
cmc
xlat
and
push
add
xor
scas
adc
cli
rorb
add
sub
mov
sbb
adc
pop
out
mov
mov
xor
dec
lret
or
and
stc
mov
or
sub
imul
cmp
sub
shrb
mov
cmp
cmp
je
mov
not
insl
sar
pusha
pushf
enter
xchg
mov
cmp
mov
xchg
imul
push
int3
hlt
call
mov
adc
stc
iret
xor
cmp
movsl
cmp
sbb
mov
mov
sti
ss
dec
ss
int3
movsb
jns
ret
xchg
pop
sbb
or
mov
clc
and
out
popa
cmp
mov
aad
sbbb
mov
mov
adc
push
sbb
push
mov
test
int
cmpsl
dec
cmc
loope
hlt
imul
aam
lock
add
mov
loope
push
por
push
or
ljmp
rorb
mov
mov
sub
dec
pop
add
imul
jg
out
or
aas
lret
out
xchg
mov
aas
jno
pop
adc
lcall
inc
mov
push
data16
syscall
ljmp
cmp
sti
sub
std
in
mov
dec
mov
pop
inc
imulb
call
mov
sub
lret
and
fldt
and
dec
int
shll
pop
and
cltd
or
hlt
adc
dec
addb
ffree
cmp
loopne
das
dec
test
and
mov
xor
aad
mov
cmpxchg
xor
faddp
jno
jae
jge
dec
mov
or
psrld
fdivl
aam
fwait
orl
jno
xor
add
daa
in
and
scas
out
pusha
aad
mov
dec
pop
jnp
lock
loopne
push
push
leave
mov
xchg
inc
jns
mov
adc
add
dec
es
frstor
and
pop
aaa
iret
mov
dec
add
pop
popf
mov
punpcklbw
movsl
lret
add
pushf
test
cs
push
and
xchg
push
cmp
int3
lret
push
js
cld
test
or
inc
xor
mov
addr16
jp
mov
sbb
lods
lock
mov
xchg
cld
and
ljmp
mov
mov
shrl
dec
outsl
mov
mov
clc
or
add
fidivrs
jge
mov
jecxz
jno
shl
xchg
iret
test
mov
fcoml
xor
in
adc
xchg
inc
jbe
sub
add
loopne
pop
imul
push
loopne
mov
test
sti
lds
push
cltd
das
or
mov
out
lret
fidivrl
dec
mov
adc
shlb
mov
jecxz
aaa
sti
add
out
jns
inc
or
aaa
inc
out
lcall
jmp
inc
mov
adc
lret
cwtl
lods
popf
pop
or
inc
adcl
mov
inc
mov
pop
mov
clc
shl
dec
insl
and
aas
sub
and
sbb
loop
hlt
aam
lret
cmpsb
cs
pushf
mov
movsb
xchg
rorb
jg
mov
xchg
dec
hlt
add
stos
pop
bound
lds
ret
fstps
xor
xchg
mov
lahf
into
cmp
mov
fldcw
sub
int3
sub
mov
jbe
inc
test
push
or
pushl
enter
push
mov
gs
cmpsb
sub
adc
popf
sub
sahf
stos
pusha
pop
mov
push
or
popf
inc
aaa
dec
jae
in
mov
movd
cmp
or
jle
and
mov
mov
hlt
hlt
ds
in
dec
test
fwait
push
add
pop
cs
in
data16
mov
cs
cmpsb
mov
jmp
xor
loopne
mov
scas
add
pop
mov
cld
push
aam
push
push
or
mov
dec
fisubs
add
cmp
xchg
and
pop
pop
call
push
negl
jg
jnp
cld
lret
sub
pop
sbb
dec
pop
pop
outsl
add
imul
mov
lods
cmpsb
aam
mov
mov
in
or
sahf
in
cs
cwtl
decl
fistpl
xchg
jae
xchg
inc
not
cmp
jle
pop
xchg
lret
sbb
nop
sub
repnz
lretw
std
aad
ret
test
jge
pop
lcall
xor
loop
fisubrl
imul
inc
ljmp
mov
push
mov
pop
jb
jg
add
pop
into
fsts
jno
loope
je
std
iret
rcl
loop
popa
cmp
inc
ss
dec
shrb
arpl
bound
fcmove
or
cmpsl
jmp
mov
mov
inc
xchg
test
fcomps
push
fstps
sbb
inc
dec
add
jge
dec
inc
xchg
cmp
mov
pop
xchg
mov
xchg
fcomps
lock
jle
push
std
pop
aas
adc
mov
cmp
pop
sbb
push
or
cs
inc
xchg
xchg
mov
push
pop
push
in
mov
xchg
xchg
dec
mov
daa
mov
sbb
fucom
icebp
jmp
xchg
call
sbbb
sahf
mov
out
jecxz
inc
sub
xor
dec
neg
gs
imulb
push
sub
repnz
stos
cmp
lcall
push
pop
push
mov
stc
dec
pop
xchg
or
lret
xorl
dec
push
repnz
mov
inc
xor
loopne
mov
pop
fidivl
or
clc
pop
loopne
mulb
out
or
cwtl
inc
mov
iret
push
mov
add
out
fs
or
push
mov
jb
movsl
sub
adc
ret
scas
loope
mov
add
mov
mov
dec
inc
jo
ljmp
std
loope
jecxz
lea
and
ja
add
cs
pop
clc
inc
pop
idivl
mov
mov
mov
push
push
pop
in
sbb
int3
dec
cmpb
jbe
daa
xchg
cmp
mov
xor
pop
push
push
aad
hlt
loope
add
out
movsb
in
mov
sub
aad
in
mov
xor
adcb
cmpl
pop
mov
repnz
jle
dec
dec
ljmp
pop
scas
rcrl
cmp
cmp
mov
cltd
cmp
add
lret
sbb
sub
pop
lods
stc
out
mov
push
jl
mov
and
test
in
sub
mov
sbb
leave
pop
and
insb
in
jno
sub
icebp
xor
outsb
sahf
sti
int
sub
in
in
movsb
leave
adc
dec
xchg
ja
add
pop
fldcw
jnp
or
fiaddl
sub
decl
aam
cmp
hlt
scas
adc
stos
mov
pop
add
jmp
repz
cmp
mov
mov
sub
adc
jno
mov
xchg
pop
ds
mov
jbe
lret
push
xchg
inc
inc
stos
adc
leave
xor
mov
aas
out
mov
jb
cmp
jo
fists
mov
int
jg
in
inc
ljmp
loop
pop
mov
add
push
adc
js
and
lret
xchg
pop
mov
mov
sub
add
cmpsl
icebp
sub
daa
cmp
xchg
test
inc
pop
movsb
int3
jnp
cmp
pop
jp
in
xor
mov
cmpsl
out
pop
push
inc
xchg
adc
push
xchg
imul
push
or
dec
outsb
outsl
fs
sub
inc
or
ss
pop
sbb
sbb
push
push
add
push
jecxz
mov
xchg
or
lock
sbbl
scas
adc
cmp
jecxz
push
aam
test
lds
in
icebp
gs
xorb
mov
repz
sub
mov
sub
or
and
push
xlat
inc
imul
rcl
jge
dec
insl
ljmp
lock
shlb
rolb
mov
pushf
cltd
je
inc
mov
adc
out
dec
addb
or
inc
inc
push
mov
pop
adc
outsb
int
cs
add
sahf
or
aaa
arpl
sahf
test
jo
jbe
mulb
fcomps
stos
mov
das
pop
pop
sbb
mov
mov
xchg
pop
std
dec
and
pop
or
push
filds
hlt
pop
inc
sub
aas
add
xchg
addr16
inc
mov
aad
lret
test
adc
das
lcall
es
inc
ss
jge
pop
mov
fcomi
push
inc
aam
pop
incl
pop
bound
shlb
fnstcw
repnz
fsubs
outsl
dec
pop
lods
mov
icebp
jne
xor
fisubrl
jnp
sub
xchg
sbb
nop
xchg
das
imul
and
jb
or
pushf
rcrl
lret
lds
imul
clc
cmp
ret
shll
lea
jb
adc
out
push
mov
scas
or
lcall
xor
xchg
lock
xchg
fsubs
xchg
or
mov
sub
out
xchg
enter
mov
addr16
movsl
test
sub
mov
std
lods
or
xor
lods
xor
dec
aad
scas
in
cs
sti
enter
pop
shr
loopne
pop
dec
add
sbb
test
cli
cmc
rclb
out
mov
inc
pop
jne
cmp
loopne
dec
fsubrs
jbe
pusha
adc
scas
ja
pop
std
lds
adc
dec
insl
dec
out
test
xor
add
je
mov
lods
bound
add
shrb
pop
pop
mov
mov
dec
adc
std
hlt
add
fistpl
je
sbb
xor
pop
cs
movsb
inc
cltd
xchg
ja
push
push
loopne
iret
mov
pop
arpl
dec
clc
gs
imul
scas
ljmp
scas
mov
cld
gs
dec
dec
lcall
into
cmp
add
mov
cld
outsb
mov
pop
add
cmpl
pop
fdivp
int
mov
ljmp
ss
stos
and
mov
pushf
in
xchg
adc
cmp
jae
push
jecxz,pn
leave
data16
stos
addr16
push
xor
aas
gs
lret
sbb
arpl
das
lods
ja
xchg
xor
fnstcw
mov
js
jns
lret
fsubs
andnps
add
pusha
jns
call
fucomip
gs
mov
xchg
xchg
mov
push
dec
gs
xor
pop
addr16
push
inc
aaa
loopne
mov
sub
mov
shll
les
insb
pop
repz
fcmove
sub
push
or
subb
call
and
rorl
test
xor
jbe
sub
out
jbe
inc
sbb
xor
out
jbe
mov
out
sbb
xor
mov
std
cs
xchg
push
pop
push
test
cmpsl
popa
imul
sbb
dec
je
pop
std
pop
mov
mov
jnp
data16
shlb
inc
enter
imul
add
jbe
sub
xchg
lcall
ret
mov
push
sbb
cld
or
lret
dec
push
ss
les
ja
mov
jmp
mov
and
push
stos
push
repz
jmp
cmp
cmp
outsl
adc
xchg
jo
aaa
insb
push
lock
push
push
scas
push
std
pop
sbb
ds
inc
pop
loop
xchg
lret
cmp
mov
add
mov
xor
js
shll
aaa
sub
push
in
sub
mov
loop
or
jae
aam
push
fs
jl
imul
iret
jg
cmp
or
pushf
jl
call
mov
arpl
das
in
cwtl
addb
mov
push
testl
fcomi
dec
mov
pop
ljmp
fsubrs
xor
push
test
sbb
sahf
ss
add
sahf
push
sbb
ss
je
xor
add
jns
mov
cwtl
addl
out
push
xchg
insl
outsl
leave
push
or
popa
in
std
jns
clc
cltd
dec
scas
pop
sub
xchg
sahf
xor
mov
mov
sahf
negl
add
and
pop
push
js
add
xor
shlb
pop
mov
nop
movsb
fxam
aad
jmp
xchg
ret
push
test
into
stos
dec
arpl
pop
pop
mov
movsl
sbb
mov
or
popa
cli
jae
cli
imul
gs
jecxz
insw
es
mov
sub
out
push
push
out
hlt
mov
decb
ds
pop
in
sahf
aas
aad
mov
rcrl
mov
psrad
add
fs
lods
xlat
xchg
loop
jns
adc
inc
jbe
inc
std
nop
mov
xor
pop
xchg
dec
xchg
inc
pop
jns
mov
mov
int3
pop
xchg
jg
and
gs
xchg
mov
rcll
aas
mov
data16
push
add
repz
popf
mov
mov
cld
imull
xchg
xchg
inc
sahf
inc
push
les
pop
pop
xchg
lock
inc
scas
xchg
loope
fcmovnb
shll
push
mov
popf
jmp
add
insb
movsb
cmpsl
xchg
pop
imul
mov
cld
sub
or
lahf
cmpsl
out
mov
add
inc
test
scas
add
add
fsubs
movl
orl
mov
lea
test
dec
test
nop
ret
dec
sbb
xor
mov
dec
xchg
cmp
sbb
inc
sbb
out
sbb
adc
jmp
aam
adc
jmp
sbb
jbe
cs
je
jmp
in
push
je
and
das
cltd
js
iret
mov
sbbl
lea
jg
cmpsl
add
mov
inc
sbb
out
inc
mov
sbb
mov
xor
xchg
aas
jne
and
jne
pop
repz
inc
mov
pop
push
add
push
sarb
incl
or
or
xchg
fwait
dec
inc
ror
mov
outsb
xchg
push
or
xor
sbb
into
outsl
pop
fidivrl
sub
test
std
ds
and
pop
mov
data16
sub
cmc
out
add
inc
rcrl
stc
fists
mov
push
push
addl
cmp
add
out
fisttpll
xor
mov
adc
lea
cs
mull
fldt
out
aas
mov
pusha
push
jbe
jbe
hlt
nop
cmpsb
or
popa
out
mov
int
arpl
or
imul
icebp
cs
cltd
je
or
push
nop
mov
cltd
mov
sub
add
fucomi
mov
aas
jo
arpl
frstor
sub
sahf
adc
pop
jnp
pop
into
sbb
es
lret
movsb
loope
xchg
popf
lahf
and
sub
testl
push
dec
mov
pop
mov
and
adc
subl
outsb
add
call
mov
loope
clc
inc
sbb
xchg
sarl
push
iret
xlat
ds
pop
std
outsl
xor
pop
rolb
popf
jnp
pop
fsubrl
adc
mov
jae
rcrb
push
pop
shl
leave
jmp
dec
adc
xor
xor
xor
jl
into
adc
cmp
inc
flds
xor
scas
dec
and
decl
sub
mov
imul
sti
arpl
push
push
add
push
mov
das
pop
int
jmp
sbb
jmp
fsubrs
imul
scas
hlt
jb
mov
add
xor
pushf
addr16
lods
xlat
aam
add
in
lds
out
and
xor
jle
movsl
xchg
mov
mov
fcmovnbe
fdivrs
push
std
movsl
pop
rcl
cmpsl
pop
fsubrs
and
out
xor
adc
repnz
inc
enter
jbe
in
ret
push
or
mov
push
sbb
adc
insb
sbb
cs
rclb
addr16
clc
shl
mov
mov
jne
xorb
pop
add
cmp
mov
addr16
test
jns
xchg
lods
xor
stc
pslld
push
cltd
movsl
test
mov
shlb
jle
add
stos
jge
ret
in
cs
jne
hlt
fbstp
ret
dec
jns
ret
and
pop
push
cmp
ret
sub
repnz
mov
cwtl
adc
or
data16
mov
add
lret
push
jecxz
fcoms
or
push
jp
filds
xor
rorl
bound
jno
and
fwait
mov
pop
cmp
icebp
inc
sub
movsb
cmp
mov
jb
sbb
push
mov
repnz
jns
scas
push
sti
ljmp
sarb
movsl
sbb
jecxz
push
test
push
enter
into
mov
sbbb
fsubl
xchg
cwtl
test
and
mov
pop
cmp
nop
ds
mov
fs
xor
jle
xor
loope
scas
cmp
pop
cmp
loope
mov
pop
pop
out
jle
sub
inc
repz
add
scas
mov
into
dec
imul
pop
jmp
addl
retw
movl
scas
push
dec
push
jns
dec
xchg
add
out
sbb
ja
inc
or
insb
push
mov
jecxz
jae
gs
or
or
dec
jmp
ds
addr16
ret
jnp
out
lods
pop
ficoms
pop
xor
xchg
mov
pop
push
out
add
inc
decb
pop
clc
psraw
xor
or
adc
cmp
adc
ret
pop
pop
test
bound
sar
cwtl
xchg
sti
push
jo
mov
wrmsr
aam
insb
lods
add
xchg
addr16
test
mov
mov
jmp
lock
ret
mov
shll
mov
push
shll
sub
imul
add
push
adc
movsl
inc
or
jbe
fwait
or
stc
xchg
pop
hlt
add
mov
push
pop
and
and
pop
not
and
lahf
in
xchg
scas
movsb
int
adc
mov
mov
mov
clc
stos
ljmp
push
cmp
stc
subb
or
leave
jne
popa
sahf
push
push
ja
dec
call
push
data16
xor
imul
addr16
test
mov
sub
sbb
insl
inc
dec
jle
in
inc
jecxz
or
adc
or
jne
jge
call
adc
sub
mov
outsb
mov
mov
ss
cmp
out
cmp
icebp
in
add
mov
inc
inc
inc
test
sbb
mov
jl
imul
test
mov
sbb
and
ffreep
mov
sub
pop
inc
dec
sarl
sub
leave
inc
ja
shrl
cmp
cmp
fwait
sbbb
in
xchg
jns
pop
jl
sti
gs
lds
je
jmp
loop
fs
xchg
out
orl
hlt
pop
popf
pop
pop
lret
mov
es
rcll
jle
pushf
and
cmpsb
inc
push
mov
xor
jo
sbb
outsl
lret
inc
lret
rorb
sub
or
jge
loopne
fdivr
xchg
mov
adc
fnsave
mov
pop
dec
adc
loope
stos
mov
mov
outsb
push
in
mov
pop
sti
add
fdiv
push
sti
xor
dec
sub
cmc
dec
adcl
pop
test
rcrb
xchg
cmpl
inc
je
mov
jae
repnz
ffree
mov
xor
adc
mov
fisttpl
dec
aad
cli
loop
and
shrb
popf
pop
cmp
pushf
jmp
add
dec
into
mov
and
in
mov
imulb
and
xchg
pop
push
lods
jb
lret
xchg
push
loop
nop
push
sbb
lods
movsb
sahf
imul
fistl
and
mov
roll
movsb
mov
xor
lds
sub
es
mov
in
cli
fmuls
pop
lods
cmp
mov
and
pushf
shll
imull
fmull
add
cld
lea
xchg
cmpsl
inc
adc
cmp
imul
sub
and
mov
pop
lods
cmpsb
push
nop
and
stc
push
loop
xchg
es
mov
ljmp
test
mov
jne
or
cwtl
ja
rolb
pop
aam
or
jno
in
sbb
xchg
xor
aam
xor
pop
cmp
bound
inc
cmpsw
jns
pop
pop
lea
sbb
cmc
test
push
fildl
pop
daa
or
sbb
negb
inc
dec
pop
pop
insl
aas
stos
out
sub
out
push
sub
pop
xor
mov
in
pusha
sbb
mov
jno
jne
add
mov
out
cwtl
sbb
inc
nop
lcall
jg
fldt
call
dec
mov
scas
sarb
ror
repnz
inc
int3
push
gs
xchg
data16
and
xor
mov
bound
dec
ds
lock
scas
mov
jmp
mov
mov
bsr
or
xor
dec
das
mov
or
out
add
stos
clc
jp
jmp
into
xlat
mov
xor
inc
dec
adc
xorb
xchg
jg
push
outsb
mov
test
addb
dec
mov
and
pop
or
mov
ret
inc
xchg
test
mov
test
test
orb
dec
xor
loopne
jae
pop
mov
xor
xlat
dec
add
pop
int
imul
inc
inc
outsb
mov
rorb
jge
adc
adcl
cmc
cmpsl
sub
mov
adc
or
pmulhw
fs
test
fs
and
cmp
addr16
mov
jbe
out
es
jno
push
pushf
scas
push
adc
lret
cmpsl
pop
jae
fwait
sbb
xchg
inc
inc
add
xchg
lea
pop
lock
or
repnz
scas
adc
push
lret
cmpsl
inc
cmp
nop
jb
mov
in
dec
inc
cmc
aaa
push
leave
bound
gs
push
insb
into
jnp
mov
and
jne
xlat
ror
idiv
out
jae
dec
ds
dec
jbe
jno
adc
pop
push
inc
je
mov
in
adc
es
loopne
jg
push
jne
pop
mov
jp
inc
lcall
clc
clc
cwtl
sti
aam
roll
test
lcall
das
jp
xlat
in
push
jnp
mov
nop
cltd
or
pop
dec
jp
leave
jb
in
pop
aas
jge
pop
adc
sti
movsb
jg
rclb
stos
jne
pop
jne
movsl
xorb
xchg
ficoml
insl
out
les
adc
jge
pop
xchg
push
xchg
cmpsb
insl
cltd
repnz
mov
cmp
das
adc
sarl
dec
inc
sub
leave
int
mov
mov
lds
je
or
fwait
loope
iret
es
shlb
adc
add
enter
mov
insl
mov
and
mov
fucom
fcmovu
es
mov
popf
mov
add
jl
cmp
pusha
inc
cmp
mov
and
inc
movsb
xchg
insl
mov
in
lret
jmp
adc
xchg
imul
jmp
das
insb
leave
cmp
pop
push
mov
push
fwait
cmp
hlt
mov
mov
ja
fnstenv
lock
dec
mov
sub
xor
and
cmp
clc
ret
mov
pop
mov
outsb
jne
cmc
xchg
mov
fpatan
push
mov
fsubl
test
or
test
aam
out
call
icebp
incl
lea
cmp
xor
jb
test
or
push
mov
xor
inc
dec
jo
push
test
inc
xor
jle
add
repz
ret
push
lahf
ljmp
dec
cmp
adc
lret
and
sti
jp,pn
fisubrl
btc
das
jmp
mov
and
ja
and
cmc
loopnew
jp
test
mov
inc
insl
imul
in
and
or
scas
lcall
and
mov
les
out
inc
addr16
test
jle
orb
mov
and
shll
xor
out
mov
repnz
jno
lahf
sub
jnp
dec
cmpsb
sbb
push
jge
aam
into
and
dec
lret
adc
lahf
in
movsl
movl
lods
inc
or
mov
and
mov
mov
pop
jl
into
loope
lods
xor
jae
push
inc
push
xchg
cs
sbb
push
pop
dec
ffree
shll
jl
cs
mov
leave
pop
inc
aad
mov
lahf
dec
rcl
pop
jecxz
sti
rcr
jb
inc
enter
adc
fisttpll
jl
lea
pop
xor
sbb
int
stc
xchg
iret
leave
test
daa
jo
dec
out
jns
mov
lods
fldenv
push
pop
dec
jo
and
jmp
xor
test
dec
xchg
lahf
push
mov
rcl
nop
sub
pop
or
pop
popf
and
jnp
mov
mov
arpl
push
cmp
out
pushf
and
inc
fst
jecxz
mov
stos
pop
fsub
test
add
into
push
sbb
mov
lods
push
lcall
mov
iret
sbb
mov
mov
cmovo
in
jae,pt
repnz
dec
test
clc
stos
mov
or
mov
inc
pusha
or
sub
mov
sub
sub
dec
cli
mov
jp
xor
sbb
iret
xchg
xor
out
cmpsl
pop
cmp
aaa
js
push
mov
ret
mov
cltd
mov
jp
aaa
jns
or
iret
fwait
add
insl
jbe
pop
std
or
fsubs
add
sub
cmpsb
or
mov
add
into
add
sarl
push
mov
movsb
adc
imul
mov
sub
imul
fbld
push
sub
cmc
rolb
xchg
mov
cwtl
inc
out
lods
dec
mov
dec
dec
cmp
dec
cmp
cmp
mov
inc
mov
mov
cli
das
jecxz
and
push
sti
fisttps
mov
movsb
ret
mov
dec
insl
fdivrs
mov
popa
pop
xor
sub
mov
test
mov
push
ds
rclb
pop
fcmovnb
test
ret
xchg
push
in
and
jno
mov
adc
mov
subb
adc
inc
je
jns
or
adc
dec
rolb
in
insb
xchg
inc
cmp
aas
dec
pusha
pop
stos
or
ficompl
ret
scas
andl
xchg
adc
sub
jbe
shrl
mov
je
mov
fidivrs
sti
pop
push
cwtl
jmp
xor
and
mov
imul
mov
aaa
xchg
lret
pop
shlb
les
repnz
pop
movsl
mov
test
mov
stos
cmp
dec
es
int3
out
push
pusha
pop
popf
lea
adc
lret
aas
in
push
add
push
clc
pop
or
or
xchg
loope
mov
inc
fimull
in
adc
or
aad
cwtl
pushf
cmc
and
hlt
sub
fdivr
mov
loope
mov
mov
pop
push
sarb
cmp
sbb
jno
mov
and
or
negl
xchg
lcall
cmp
stos
testb
add
or
gs
mov
push
lahf
lret
shlb
insb
fisubrs
fs
aad
mov
xor
cmp
jns
sub
int3
loop
sbb
dec
mov
mov
lret
mov
cmp
and
pusha
idivb
jmp
mov
cmp
in
ss
in
xlat
inc
int3
notl
aas
fistpll
inc
mov
sub
mov
dec
adc
out
pop
push
jnp
decb
sti
pop
push
hlt
lahf
mov
sti
jb
mov
outsl
xchg
mov
cmp
pop
or
adc
lret
xchg
out
xchg
loop
adc
jae
mov
std
xchg
ljmp
jno
ficomps
iret
jb
fld
out
sti
shlb
das
inc
push
rcr
lea
jae
sbb
and
mov
syscall
inc
test
push
das
stos
xor
and
bound
movsb
movsb
mov
sarl
add
ficoml
int3
add
js
jno
add
rcrl
fwait
lds
fwait
ret
in
pop
add
lods
aam
fdivrs
mov
mov
pop
shl
loopne
repz
sbb
cli
movsl
adcl
popa
arpl
inc
mov
push
adc
add
sub
aas
rcrb
inc
jp
inc
les
pop
lret
lods
mov
dec
cmp
gs
xchg
cmp
xchg
jl
jecxz
shlb
ficomps
jo
cs
out
adc
adc
lods
shll
mov
and
jne
adc
mov
into
sub
jbe
mov
or
loop
mov
inc
mov
ds
xchg
and
sahf
lea
outsl
dec
cmp
pop
das
jmp
scas
in
out
cli
insb
idiv
jbe
bound
adc
lods
stos
iret
out
xchg
jp
leave
jns
xor
xchg
pop
mov
mov
sbbb
mov
clc
or
sbb
ja
sub
jne
mov
roll
call
notl
xchg
fimull
addl
mov
stc
sub
jae
jg
mov
cmp
aad
outsl
std
cmpsl
popa
adc
mov
cmp
inc
pop
xchg
mov
add
fstpt
jnp
fisubrs
aad
or
xor
iret
mov
iret
das
xchg
lret
clc
mov
or
xchg
push
jecxz
inc
aad
add
or
and
int
sub
ret
in
xor
testb
jl
jo
int3
cmp
push
cmp
jo
or
jmp
das
lock
mov
xchg
mov
iret
or
mov
iret
push
sub
imul
lcall
je
out
enter
fildll
or
gs
mov
lcall
pop
mov
roll
sti
sub
int
outsl
jno
pop
popa
sub
test
or
sbb
cmpsl
add
and
fdivrs
scas
fistps
jecxz
push
jl
mov
rorb
jno
in
in
test
lret
add
loope
xchg
sub
sarb
mov
sbb
jmp
out
pxor
sbb
add
sbb
js
xor
es
aas
sbb
cwtl
dec
dec
in
rcrl
xlat
cld
or
or
inc
cmp
jbe
lahf
int
cmp
mov
cld
and
movsl
cltd
fiadds
imul
mov
lock
mov
fs
dec
mov
xchg
pop
fildl
xchg
insb
pop
int3
mov
adc
xlat
pop
lods
fstpl
pop
pop
jg
fdivrs
jno
or
imul
call
int3
repnz
xor
fdivrl
rcll
cwtl
rorl
cmp
test
dec
test
xchg
cmpsl
clc
leave
jne
lcall
dec
push
sub
lret
mov
pop
push
mov
mov
in
fsubr
mov
shl
xlat
aam
cltd
fildl
sub
sbb
cltd
scas
mov
pop
ret
inc
jecxz
je
or
mov
sub
xor
or
daa
sbb
mov
sbb
and
jg
scas
or
xchg
into
subl
mov
and
clc
add
aam
jg
dec
pop
jecxz
shrl
in
or
mov
sbb
xor
sub
cmp
mov
in
push
sbb
mov
cmp
cmp
mov
push
in
cmp
ss
call
aas
or
das
jnp
and
mov
dec
shlb
adc
mov
ret
int3
scas
mov
mov
aas
in
imul
inc
xor
xchg
mov
out
sarb
movsl
shlb
mov
fiadds
sbb
lcall
add
fwait
xor
pop
jb
les
inc
add
xor
scas
fsubrl
push
dec
cmp
sarl
ret
mov
add
repz
aad
scas
adc
outsl
repz
mov
popf
int
leave
mov
mov
insl
cmpb
sub
mov
lock
ret
pop
fidivrs
shll
std
enter
fmull
mov
iret
xchg
add
sub
xchg
enter
mov
xchg
mov
in
mov
sahf
push
mov
test
sbb
in
movb
inc
es
mov
inc
lods
push
shll
inc
fisttps
add
adc
xlat
lods
cli
xlat
and
mov
mov
iret
in
iret
in
aaa
sbb
push
loop
test
dec
inc
pop
aam
cld
sbb
xchg
popa
bound
ja
fdivrl
jmp
sarl
push
jb
insl
ljmp
push
mov
cwtl
cmpsl
mov
xor
or
sbb
loopne
out
test
jne
push
push
pop
inc
fisttpll
and
pushf
mov
mov
scas
cmp
cmp
pop
pushf
sbb
mov
loop
jmp
mov
hlt
jae
cmpsb
push
testl
xchg
adc
mov
or
cmp
stos
sbb
mov
xor
adc
dec
adc
and
add
aad
popa
sub
sub
xchg
xchg
loop
dec
and
sbb
aaa
mov
mov
mov
xchg
pop
mov
lods
sahf
or
into
or
scas
in
jmp
push
pop
scas
jne
and
mov
sti
xor
aad
inc
stc
xchg
out
cmova
int
in
add
nop
and
cmp
lods
stc
xchg
mov
adc
ss
mov
jns
lock
cmp
sbb
lea
sti
mov
fs
lea
mov
iret
outsl
sbb
and
mov
inc
ja
dec
ss
jbe
adc
pop
iret
insl
mov
fdivs
in
pop
push
xchg
mov
out
mov
arpl
das
sbb
test
jae
in
jno
out
mov
jecxz
jmp
push
es
sub
push
fwait
pop
mov
lcall
sub
inc
inc
xchg
push
mov
xchg
adc
cmpsb
adc
or
das
fs
cmpb
pop
jecxz
and
pushf
mov
xor
and
clc
dec
jl
xchg
addb
out
mov
loopne
dec
rcrb
add
inc
cmc
push
sub
sbb
mov
cltd
je
sbb
jnp
push
mov
mov
call
sub
ja
pop
jb
pop
imul
xor
jo
and
or
mov
nop
adc
ja
xor
push
push
mov
inc
aam
gs
mov
xchg
or
xor
fldenv
nop
rorl
add
out
cs
add
xorl
mov
mov
repz
jns
shlb
out
sahf
add
in
vdivsd
jecxz
push
pop
das
lods
mov
stos
and
push
into
add
insb
xor
and
push
jbe
jo
clc
push
and
dec
outsl
sti
out
movsb
cld
fidivs
daa
in
ljmp
clc
jbe
mov
movsl
and
jae
xchg
xchg
jno
jae
movsb
push
leave
or
dec
dec
push
loopne
inc
sbb
sbbl
cmc
push
ss
fiadds
aas
jl
into
mov
fstp
fcomp
pop
and
test
jae
mov
les
jecxz
sti
mov
inc
mov
or
int3
aad
jns
jp
pop
insb
jno
aaa
fdiv
lds
cmp
sbb
test
inc
pop
dec
pop
aam
sub
ljmp
mov
aaa
xchg
rcrb
cmp
das
in
jbe
js
mov
jp
jns
aad
and
sbbl
fnsave
iret
push
mov
xor
and
xor
fcmovu
mov
mov
in
or
in
lahf
mov
jb
rorb
fcomps
or
pop
cli
cmp
dec
mov
mov
jnp
cmpsl
loop
js
lea
mov
pop
or
fucom
imul
lahf
insb
inc
push
lods
ss
jae
mov
cmpsb
aad
jns
inc
pop
scas
rcrl
jecxz
push
inc
pop
pop
cmp
and
jge
cmp
stc
cmp
inc
mov
imul
jl
jb
jl
je
cmpsl
jne
dec
mov
mov
pop
cli
outsl
and
adc
and
aam
mov
lcall
nop
popa
jae
iret
xorb
push
fs
mov
inc
rolb
pop
das
jnp
jns
lock
jg
xor
rcrl
stos
frstor
or
mov
in
xchg
add
and
in
mov
jmp
dec
pop
in
aas
mov
int3
pop
enter
mov
gs
xchg
aas
jge
inc
push
mov
xlat
sbb
adc
pop
pop
mov
add
iret
cmpsb
inc
out
dec
loope
xor
or
fs
popa
pop
call
xchg
pop
ror
pop
xchg
adc
cmp
out
js
jnp
add
jmp
sub
sub
scas
ljmp
mov
ret
sti
add
cmp
sbb
stos
movsl
pushf
subb
jmp
pop
into
push
outsl
inc
jg
shlb
xlat
push
push
in
pop
push
xorl
push
pop
and
test
movsl
push
push
or
popa
outsl
pop
xchg
cli
jge
insl
hlt
leave
pop
and
and
popl
adc
push
push
movsb
adc
pushl
addr16
ljmp
nop
fstl
cltd
adc
push
xchg
mov
mov
imul
call
mov
jmp
jecxz
xor
cmp
jl
xchg
pushf
and
out
repnz
nop
xchg
loope
and
inc
mov
mov
leave
ljmp
xor
fistl
cmp
jecxz
inc
jbe
mov
cmp
or
mov
cmpsb
fdivl
xchg
jne
adc
cmpsb
mov
fisubl
inc
hlt
sbb
int3
xor
and
sahf
lahf
pop
jnp
repz
mov
mov
into
sbb
pop
mov
lds
daa
jne
data16
sbb
mov
jne
jp
push
push
mov
mov
aam
mov
pop
xor
insl
adc
imul
test
jbe
jne
mov
rcl
in
push
iret
icebp
inc
push
gs
push
repnz
mov
scas
fsubrs
jecxz
lock
dec
in
loope
xor
test
inc
sub
adc
push
inc
aad
ret
fsubrs
jb
inc
in
out
stos
lock
push
rolb
out
sub
push
enter
fidivrl
out
sbb
shll
push
pop
std
scas
mov
sbb
mov
xor
movsl
add
and
and
aad
dec
aas
jb
ucomiss
ja
mov
mov
ja
xlat
xor
movsb
jno
stc
mov
shl
xchg
int
inc
jbe
mov
cmp
mov
xchg
mov
pop
xchg
iret
das
fmull
cwtl
add
enter
add
js
insl
sbb
insl
adc
dec
dec
or
movb
mov
mov
sti
orb
adc
jmp
sti
call
cmp
xchg
push
mov
lret
mov
add
pusha
mov
mov
je
fildl
divl
call
mov
adc
mov
stc
ds
cld
mov
icebp
orb
nop
repnz
mov
inc
or
cli
xor
pop
clc
or
inc
lret
std
push
jnp
dec
add
jb
mov
call
pop
shll
pop
push
shr
dec
leave
xchg
pop
mov
sbb
cs
stos
inc
imul
ss
stc
dec
imul
fsubp
pop
cmp
dec
dec
and
mov
addr16
jb
clc
push
stos
popa
mov
add
dec
lock
insl
pop
addr16
push
xchg
mov
cli
xlat
or
ficompl
dec
cmpsb
out
popa
data16
std
inc
mov
mov
scas
xorl
cwtl
imulb
and
add
or
movsl
jp
test
jnp
push
cmpsl
ret
jmp
in
fabs
cmp
test
aad
iret
jmp
ret
and
mov
cltd
xor
xor
sub
subb
pop
outsl
cpuid
pop
rorb
push
jno
jecxz
lods
sbb
movsl
or
mov
bound
mov
fimuls
mov
mov
jb
push
loopne
cmpsl
fwait
sbb
adc
lahf
pusha
mov
adc
js
dec
jl
movsb
cmp
cmpsl
std
lret
ficomps
imul
or
inc
lret
mov
add
pop
mov
cwtl
xchg
mov
xchg
add
stos
jb
scas
add
lahf
xor
xchg
dec
push
and
sbb
and
dec
adc
imul
mov
leave
out
inc
gs
xchg
xchg
jp
sbb
and
orb
cmpsl
minps
xor
movsl
insl
imul
or
fldt
jmp
sti
xchg
mov
xchg
sbb
in
mov
cwtl
mov
sar
fs
orb
dec
stos
push
imul
cmc
out
dec
xchg
fmuls
pop
xor
repnz
pop
fdivrl
add
pop
mov
inc
lret
cli
or
mov
xchg
into
aas
adc
dec
adcb
pop
fs
sbb
loope
adc
dec
mov
cmp
out
add
insl
add
cwtl
and
mov
add
add
xchg
popl
cmovb
sbbl
imul
dec
xor
jae
ret
out
xor
push
bound
shl
dec
sub
push
jecxz
mov
test
jecxz
jmp
scas
add
mov
xlat
dec
cltd
in
leave
int3
mov
adc
add
xchg
dec
test
and
mov
xchg
in
push
dec
adc
xchg
pop
sub
rol
push
out
sub
sub
xchg
jns
inc
jb
xor
loop
fwait
sbb
push
dec
push
sub
jno
cmc
dec
cmp
pop
xchg
xor
ds
mov
adcb
push
pop
jecxz
scas
adc
ja
xchg
xchg
jl
test
movsb
test
stos
popf
mov
and
sti
mov
ja
in
callw
add
bound
mov
mov
ja
sti
cmpsb
pop
or
ret
ljmp
and
mov
imul
shlb
pop
insb
adc
push
xor
mulb
aad
nop
add
je
pop
sarl
repnz
ret
xor
pop
inc
push
lds
and
std
sub
ja
sbb
sbb
xor
push
sbb
xchg
lcall
test
dec
rcll
or
dec
cmc
test
push
pop
or
pop
cmp
adc
xor
pushf
jle
sar
popf
in
stos
ss
sbb
aas
daa
push
inc
shll
mov
out
bound
dec
push
mov
in
jle
or
add
iret
xchg
popf
dec
icebp
xchg
push
push
sub
cmpsb
frstor
inc
jo
sbb
or
jbe
ret
mov
rcrl
cmc
jecxz
in
xchg
ljmp
rcrb
ret
fiaddl
pop
inc
cs
ret
cli
xor
jmp
stos
pop
lods
fadd
sbb
mov
movzbl
fidivrl
cmpl
mov
push
xor
insl
push
xchg
fldcw
and
repz
cmp
ficoml
lcall
das
ret
add
pop
enter
cmpsl
sub
scas
movsl
xchg
cmp
jne
subl
pop
inc
lret
adc
xchg
je
jmp
daa
inc
inc
aam
mov
jbe
imul
lods
adc
mov
fmul
loope
icebp
xchg
sbb
xor
adc
mov
jg
pop
subl
push
push
lods
pop
and
sahf
sbb
push
push
stos
inc
cmpsb
push
jne
push
outsl
push
mov
icebp
movsl
stc
imul
jno
cmp
ljmp
test
dec
scas
pop
pop
push
dec
jl
add
and
cli
push
xchg
dec
out
cli
test
mov
pop
insb
pop
ret
je
in
or
data16
iret
scas
push
adc
adc
pop
add
inc
and
push
mov
sarl
out
mov
mov
adc
scas
sbb
and
push
scas
add
repz
xchg
pushf
repz
fidivs
sub
scas
pmaxub
nop
push
dec
push
or
in
ret
jmp
jo
jo
incb
push
jno
mov
int3
addl
push
mov
mov
and
icebp
lcall
std
sti
mov
jmp
pop
lahf
add
je
aad
cmp
rorb
or
loop
std
mov
mov
cld
mov
adcb
lret
jb
scas
jmp
fiaddl
push
loopne
in
pushf
outsb
iret
hlt
push
and
lods
cmp
push
jmp
mov
cmp
insl
mov
icebp
pop
repnz
jb
cltd
cmpsl
bound
loop
das
cmpl
stc
fimull
sub
dec
test
arpl
or
lods
out
lahf
and
fdivrl
jb
lcall
jg
or
jp
mov
adc
insb
or
fdivl
and
xor
bound
mov
inc
imul
jnp
xchg
add
stc
pop
scas
je
mov
icebp
aaa
add
mov
adc
xchg
arpl
lea
aaa
popa
cmpsl
sub
sub
cli
inc
verr
jecxz
mov
push
xchg
cmp
ds
test
or
fiadds
sbb
insb
aad
aas
mov
xchg
mov
popa
sbb
inc
mov
call
adc
xor
xor
shlb
shl
data16
mov
fstp
xchg
sahf
dec
dec
mov
sbb
sbb
movsl
ret
cmpsl
lock
mov
int3
repnz
dec
ds
cmp
or
xor
fs
xchg
sbb
xchg
add
aad
in
test
mov
cmp
pop
jp
inc
in
inc
loop
ret
test
in
jmp
inc
in
rorb
aam
pop
sub
push
xchg
aas
lock
pushl
out
inc
decb
mov
sbb
lcall
jge
jae
sbb
jne
and
pop
adc
mov
addr16
adc
sub
adc
and
cmpsb
outsl
leave
out
loope
jb
insl
lret
lahf
mov
push
push
jg
aas
ljmp
mov
popf
push
jp
daa
cmc
lret
or
xor
mov
loop
mov
cltd
orl
or
in
push
pop
push
inc
cmc
test
sti
sub
or
xor
sbb
cmp
out
lahf
sub
sub
fnstsw
dec
pop
and
jo
xchg
outsl
sub
sub
test
ljmp
aas
pop
stos
insb
call
je
sub
inc
push
adc
jno
into
or
xlat
aad
loope
bnd
int
div
push
mov
add
cmp
mov
setno
ja
insl
enter
daa
jne
xchg
cld
stc
daa
punpckhwd
and
imul
sub
jle
js
daa
shl
ljmp
mov
mov
cltd
js
shr
sub
xor
mov
sbb
or
dec
dec
push
mov
cmp
pop
jle
insb
mov
sub
cltd
adc
lahf
mov
inc
mov
sbb
mov
adc
js
lcall
jge
sub
xchg
cmpsl
add
loop
lds
dec
xchg
leave
push
aad
iret
into
dec
or
lcall
xchg
adcb
leave
int3
inc
mov
mov
popf
xchg
cmp
pop
leave
xorl
push
shrb
lods
add
mov
lret
cli
jecxz
js
cld
cmp
or
in
push
mov
push
ss
and
ret
out
lock
jecxz
inc
xchg
aad
jg
push
xor
xor
je
insb
popf
fxch
fs
stc
jg
jp
or
lahf
sbbb
call
scas
loopne
in
hlt
jmp
mov
jae
fwait
pushf
and
fidivs
aam
ljmp
in
sub
mov
cmpsb
jl
dec
mov
jbe
dec
mov
pusha
sti
mov
push
divb
mov
pop
inc
mov
push
out
pusha
push
addr16
jmp
insb
cltd
addr16
lock
std
push
xchg
jg
or
push
loop
pop
jp
mov
test
or
xchg
push
dec
lea
jno
loopne
fwait
ror
cmpsb
jns
nop
jns
xor
outsl
stc
dec
shrl
mov
or
es
xchg
pop
mov
repz
orb
jnp
outsb
call
inc
ret
aad
icebp
cmp
inc
out
mov
in
pop
in
fisubl
jmp
aaa
sub
push
mov
jle
xor
xlat
cwtl
sub
mov
or
dec
or
cmp
xchg
inc
insb
inc
push
jae
inc
lahf
repnz
mov
jae
jle
cmp
xchg
ret
cmpsb
test
push
jno
mov
lret
inc
sahf
sub
mov
test
jecxz
repnz
sub
lcall
dec
dec
incl
mov
dec
jae
xor
int3
repnz
ret
popa
sbb
stos
sbb
xchg
imul
push
fdiv
sbb
push
push
fbstp
cld
into
pop
sub
into
adc
adc
out
push
xchg
lret
mov
add
test
adc
jo
mov
popf
fisttpl
adc
or
movsl
cmp
mov
inc
pop
add
into
lahf
test
mov
out
ja
outsb
push
sub
addr16
xchg
push
mov
movsb
push
inc
mov
fwait
mov
loopne
fs
add
out
xor
aas
and
mov
fistpl
pop
fisubl
dec
sti
push
push
cmp
rcl
push
cli
icebp
xor
icebp
jb
xchg
mov
push
in
out
push
ror
xor
scas
bound
call
mov
addr16
or
mov
icebp
adc
lret
or
sbb
cmp
out
js
lahf
mov
mov
dec
push
sub
or
pop
xchg
mov
outsb
scas
icebp
adc
ja,pn
push
push
mov
mov
movsb
aam
sarb
bound
cli
sbb
or
cmp
out
roll
dec
fwait
out
mov
fsubr
test
bound
movsl
rorb
fdivl
inc
mov
push
ljmp
mov
sarb
or
mov
dec
movsb
xchg
in
decb
mov
daa
or
jle
inc
mov
mov
lods
and
sub
mov
xchg
jb
fnstsw
or
out
loope
test
xchg
aam
test
out
sarb
orb
inc
inc
cli
ffreep
jg
pushf
mov
mov
xchg
je
mov
ljmp
push
sub
push
repz
pusha
fistpll
cwtl
push
stc
stos
xchg
aas
divl
xor
aam
cwtl
leave
fcomip
and
enter
or
mov
icebp
and
mov
jns
out
cmc
cmp
nop
or
call
jns
out
aas
ret
push
pop
pop
sub
rcll
xchg
mov
fs
jb
stos
add
lret
mov
lock
inc
mov
cmp
lock
daa
out
int3
xor
jge
outsb
dec
push
cmc
test
or
insb
stos
out
dec
enter
and
xchg
jae
jmp
mov
sbb
jo
std
xchg
xchg
mov
lods
jbe
jnp
int3
aam
repnz
dec
inc
in
cmp
add
xchg
or
or
arpl
icebp
lds
and
sbb
sbb
out
adc
dec
inc
sahf
pop
mov
nop
scas
std
mov
xchg
lds
or
jle
stos
xchg
push
icebp
push
repnz
sbb
or
cmp
xor
or
ljmp
jl
dec
xlat
pop
jmp
lods
loope
jl
addr16
dec
aas
mov
addr16
xor
in
scas
inc
or
iret
jnp
pusha
pushf
sub
xchg
ficoms
mov
repnz
inc
xchg
adc
in
aad
cmp
ror
mov
hlt
add
mov
xlat
daa
and
push
cmp
lahf
pop
mov
inc
pop
popa
push
adc
outsl
int3
leave
leave
jle
pop
inc
in
sbbl
aam
mov
push
mov
repz
fsubs
fadd
aam
inc
and
pusha
rcrl
cld
imulb
sub
aad
mov
mov
push
push
sub
aam
ss
stos
mov
enter
aam
aaa
mov
cmp
push
and
lods
push
das
es
jg
faddl
and
dec
mov
jbe
test
inc
push
addb
fadd
dec
inc
rcrb
out
lahf
pop
jge
rcll
pop
cli
jle
mov
xorb
add
xchg
sub
add
dec
push
dec
or
divb
or
sahf
loopne
stos
or
push
dec
push
sbbl
sbb
cld
mov
das
aam
loop
mov
or
scas
dec
jle
xchg
cmpsb
and
sub
push
pushf
add
in
dec
scas
pop
push
iret
mov
rorb
sbb
icebp
leave
imul
and
iret
mov
xchg
dec
push
stos
sbb
pop
cmp
test
daa
add
xchg
dec
popf
pop
ret
pop
loopne
mov
out
popa
and
loope
push
push
repnz
adc
lea
in
jns
jl
push
push
sti
xor
sbb
pop
sbb
ds
pop
mov
xlat
int3
mov
jo
dec
mov
mov
out
push
pop
fldcw
xchg
jnp
mov
test
lds
inc
dec
loopne
jmp
mov
out
pop
addr16
les
mov
adc
aad
or
loope
mov
test
loope
or
inc
adc
add
push
ffreep
jp
lock
cmp
int3
fdivrl
push
insl
ret
mov
imul
xchg
cld
xor
cwtl
test
lret
mov
rclb
lcall
pop
jns
fnsave
add
lret
xchg
or
rcl
call
pop
xchg
icebp
and
cld
ljmp
ret
clc
imul
out
dec
cs
push
and
jno
push
push
popf
fsubrp
inc
push
xor
out
sbb
ss
cld
pusha
inc
cmp
and
jmp
or
mov
aad
mov
sarb
and
xorl
inc
pushw
jl
insl
adc
jle
or
xchg
sbb
shlb
in
mov
and
outsb
pop
mov
icebp
test
add
sar
imul
mov
int3
xchg
jns
dec
add
dec
pop
pinsrw
lret
fidivs
cmp
inc
es
cltd
call
jg
add
mov
jo
lea
lcall
or
dec
gs
push
sub
mov
ret
notl
xchg
sbb
lahf
nop
or
and
xchg
pause
add
sbb
fstps
inc
adc
jno
sbb
push
and
push
hlt
arpl
mov
mov
push
adc
mov
jmp
xchg
pop
pop
push
outsb
cmp
js
push
scas
je
dec
mov
sbb
ljmp
ja
popl
sub
dec
xchg
jae
lea
lahf
cltd
imull
sub
jno
dec
movsb
out
test
ds
cltd
mov
xchg
or
cmp
dec
movsl
ss
xchg
cmp
sbb
mov
push
stos
gs
jmp
fcompl
aad
dec
dec
cmpsl
mov
test
bound
mov
add
jle
test
shll
mov
push
test
imul
inc
xchg
or
inc
imul
lret
xchg
movsl
inc
int3
adc
ss
push
mov
dec
add
mov
out
jl
push
arpl
loopne
pop
cwtl
jae
in
fsubp
cmc
jge
dec
call
inc
cwtl
or
cmp
push
sbb
or
mov
insl
mov
leave
xchg
pop
sub
cmp
adc
inc
lock
inc
leave
pop
lods
cmp
adc
lea
add
int3
aad
sbb
jle
adcl
pop
ret
sub
mov
dec
cli
gs
negb
inc
push
lcall
jmp
dec
out
xchg
mov
and
fsubs
sbb
ss
ss
popa
adc
test
jne
dec
scas
mov
aad
insb
jno
dec
rorb
sti
add
xor
rcr
adc
hlt
jo
add
xchg
push
xchg
and
in
lcall
in
int3
mov
loope
mov
mov
push
mov
jno,pn
shrl
adc
pop
cmpsb
test
pop
lret
fstpl
test
ljmp
dec
scas
ds
aad
dec
out
xlat
dec
sbb
icebp
adc
mov
sbb
and
or
out
lahf
pop
push
insl
lcall
push
jo
leave
mov
inc
cmpsb
jnp
in
cmp
insl
es
cmp
fadds
mov
push
sbb
scas
mov
jns
aam
mov
pop
test
test
xor
inc
stos
pop
mov
leave
fistps
mov
faddl
jmp
jno
mov
dec
leave
imul
repnz
and
cmp
call
int3
cld
push
lcall
lahf
lret
aad
inc
adc
mov
fwait
xor
repnz
movsb
mov
adc
xchg
enter
mov
push
cmp
push
add
mov
mov
outsl
jae
test
dec
jl
cld
fcoml
inc
pop
int3
sti
cwtl
xor
mov
data16
js
fcompl
mov
mov
inc
dec
ljmp
fsubrp
push
mov
jo
inc
adc
xchg
and
mov
lret
jbe
roll
and
pusha
popf
je
jno
adc
lret
out
push
cmp
sbbb
adc
test
add
push
pop
lcall
es
ss
sbb
xor
dec
pop
sub
mov
dec
lods
icebp
add
ret
ljmp
pop
inc
bound
mov
inc
mov
cs
pop
jp
mov
jnp
inc
jne
mov
js
xor
jo
js
roll
jecxz
push
lret
divl
data16
push
or
fs
fnstsw
jnp
hlt
addl
ds
cmp
or
in
clc
jmp
mov
push
push
ret
add
xchg
adc
test
rorl
ljmp
inc
cmp
jae
xchg
jecxz
push
ret
dec
dec
js
push
ds
mov
cmp
bound
adc
ss
cmpsb
pusha
aaa
pop
pushf
dec
adc
adcl
es
jg
sub
pop
jne
inc
mov
decl
mov
pop
mov
rcl
push
testb
popf
xor
roll
cmp
in
sub
out
aas
test
lret
xor
pop
fwait
mov
xchg
insl
dec
enter
or
fidivl
sti
cmp
lret
sahf
xchg
xchg
ret
fs
mov
and
out
ds
xchg
push
mov
dec
and
lret
mov
outsb
gs
repnz
add
enter
fdivrl
jl
pop
xor
and
in
mov
push
popa
and
mov
mov
bnd
fists
out
mov
add
push
adc
out
and
xchg
es
mov
add
popf
adc
clc
outsb
sub
fmull
or
xorb
jne
popf
into
imul
xchg
jb
jne
push
movsb
daa
jb
push
sub
cmp
std
into
mov
dec
jno
pop
aad
jne
fwait
fwait
add
cmp
jne
filds
pop
pop
daa
mov
push
in
sub
jge
ja
sbb
xchg
aad
adc
jne
adcl
push
lock
xor
test
into
dec
movsb
cmp
cli
lds
and
lahf
dec
orb
xchg
mov
aaa
jmp
clc
fstl
test
pushf
inc
inc
mov
sub
xchg
xchg
sahf
rorl
lret
mov
je
scas
sarb
mov
or
mov
lret
or
push
pop
jae
outsb
or
fcoms
lods
lret
addb
adc
push
hlt
cld
into
icebp
gs
aad
add
sub
stos
or
xchg
mov
outsl
pop
dec
ljmp
jl
inc
inc
loope
imul
sub
adc
lret
mov
ret
cmp
leave
add
sub
lret
xchg
inc
cli
in
xchg
fwait
inc
xchg
jae
mov
and
pop
and
dec
fs
mov
xchg
xlat
xor
and
xchg
icebp
popf
sub
roll
add
loopne
fdivs
sbb
out
fiaddl
incl
sbb
dec
outsl
pop
mov
jle
pop
push
cmp
adc
rcrl
push
mov
data16
or
dec
icebp
dec
addr16
lock
jnp
push
push
mov
iret
sbb
mov
mov
lahf
out
inc
in
das
mov
test
ss
push
pop
jbe
imul
out
divb
push
fldenv
js
pop
dec
and
dec
jmp
cmp
or
add
sbb
cwtl
xor
mov
jnp
xrelease
outsb
insb
shlb
pop
cmp
ret
outsl
test
and
subl
lds
pop
fcmovnbe
mov
shr
xchg
test
push
mov
loop
or
out
push
sub
aam
push
mov
sbb
incb
out
out
mov
aam
test
in
movsb
mov
mov
fsubrs
pop
sub
js
inc
mov
mov
movsl
fninit
ja
adc
sub
loope
fcompp
push
lret
mov
imul
in
or
enter
xchg
out
divb
pop
nop
pop
or
ja
leave
lea
lods
shll
and
pop
mov
and
xchg
sub
jae
clc
ret
cmc
andl
jo
push
sub
xchg
mov
xchg
outsl
pop
pop
cmp
cmc
or
fiadds
ficomps
mov
xor
pop
shrl
sbb
mov
add
dec
pop
popa
mov
leave
scas
xor
out
inc
xlat
xor
sbb
mov
rclb
dec
dec
xchg
mov
pop
pcmpgtd
mov
jmp
pop
mov
mov
cmp
mov
mov
cld
arpl
outsl
pop
imul
not
sbb
fstpl
test
stos
scas
and
mov
js
test
test
cmp
lret
xchg
mov
test
jo
adc
imul
push
hlt
ret
aaa
cmp
faddl
pop
xlat
sahf
pop
and
and
mov
pop
testl
jmp
pop
or
sub
repnz
inc
add
adcl
test
inc
insl
cmpsb
and
subb
rcrl
out
sarl
into
pop
fs
add
inc
sbb
push
and
sbb
mov
or
sbb
loop
mov
int
in
xor
repnz
in
imul
or
sub
std
xchg
sahf
enter
inc
add
rcrl
mov
inc
nop
pop
mov
dec
mov
incl
cltd
adc
sbbl
xchg
out
loop
sub
shlb
dec
push
clc
mov
fistl
outsl
das
push
push
jmp
fwait
rcll
test
clc
jl
rorl
xor
imul
mov
outsl
sarl
push
push
idiv
xchg
xchg
mov
mov
fidivl
sahf
inc
clc
sahf
jae
mov
rorb
inc
sub
mov
jp
dec
fisttpll
xchg
jmp
stos
into
je
out
pop
and
mov
scas
imull
cmp
jg
out
pop
lea
cmp
push
pop
pop
add
cmpsb
xchg
cmp
cmp
pop
xchg
stos
xlat
mov
sbb
sbb
ja
test
dec
ret
movsl
in
insb
jp
or
dec
int
xchg
xchg
adc
call
xchg
lods
xchg
sbb
call
in
or
iret
jecxz
mov
and
jns
or
test
stos
sti
cmp
sbb
rcr
popf
fistl
sub
add
mov
inc
fcoml
repnz
repnz
ret
xchg
xchg
je
and
gs
lret
in
inc
les
ficoml
add
ds
cwtl
fs
insb
inc
adc
fwait
cwtl
dec
push
push
mov
and
xchg
dec
sbb
jg
add
push
mov
pop
push
gs
mov
mov
pusha
sbb
sbb
sub
imul
es
inc
std
sbb
js
adc
cs
or
xchg
jecxz
outsl
mov
and
jnp
or
push
jl
sbb
pushf
call
xor
dec
shll
mov
in
dec
sti
pop
adc
movsb
jl
and
cmp
or
add
jg
pop
das
bound
repz
aad
lds
and
and
inc
fistl
aas
push
cltd
pop
push
dec
mov
sti
push
xchg
xchg
inc
xchg
cmpsl
sarl
dec
lret
xchg
ljmp
movsl
out
ss
xor
mov
cmp
mov
pop
aas
sbb
pop
std
dec
cmp
loope
jp
or
test
stc
or
sti
jp
xchg
cmp
ret
ljmp
mov
insl
sub
lahf
xor
shlb
mov
addr16
adc
pop
jne
sub
aad
cmpsb
rep
push
cmpsl
fstps
sub
lds
push
imul
clc
add
xor
sub
dec
push
add
enter
cmp
lea
imul
imul
inc
adc
insl
mov
out
mov
xchg
dec
popw
into
xor
testl
add
in
mov
sub
dec
data16
pop
cli
out
aaa
cmc
adc
push
pusha
add
mov
cmp
push
out
push
mov
int
mov
add
ds
bound
out
xor
dec
shrl
ficoms
mov
mov
loope
aad
xchg
mov
lcall
insb
int3
sbb
push
jne
in
push
pop
xor
sbb
insl
add
jp
adc
inc
ret
jne
add
add
push
xor
aas
incl
push
sti
mov
fimull
fdivrs
cmpsl
call
mov
iret
pop
mov
and
adc
jbe
add
sbb
sub
jge
xchg
adc
in
out
inc
push
out
sahf
pushf
dec
lahf
test
push
push
repnz
repz
out
dec
addr16
notl
test
push
lcall
ss
adc
mov
ficoml
inc
sbb
adc
test
in
scas
pushf
movsl
mov
pop
aaa
lods
mov
inc
shlb
aas
clc
mov
adc
pusha
test
cmp
or
adc
sbb
xor
loop
cmp
adc
jns
roll
inc
int
or
inc
lahf
dec
jo
lds
loopne
ds
and
mov
insb
mov
inc
sbb
adc
repnz
and
jo
mov
dec
outsb
cmp
push
fcoml
int
movsb
mov
mov
bound
aas
sub
ret
pop
push
icebp
inc
fdivrs
mov
mov
lods
pop
add
lahf
or
popa
jp
dec
rolb
ret
push
enter
sub
pop
ja
mov
imul
xorl
in
out
rolb
repz
iret
adc
or
fnstsw
subl
mov
add
ljmp
xchg
into
jo
insl
ret
test
xlat
dec
aad
sub
xor
rcll
mov
dec
dec
lret
out
icebp
xchg
or
sub
or
pop
mov
jae
xchg
xor
arpl
out
mov
pop
jbe
hlt
dec
loopne
add
inc
xchg
enter
inc
sbb
push
cld
cmpsl
adc
adc
mov
add
push
mov
inc
outsl
fs
fmull
scas
jbe
mov
jns
push
mov
cmp
dec
mov
out
movsb
mov
rcrb
mov
aad
sub
mov
lock
inc
mov
bnd
rorl
in
sbb
adc
mov
dec
push
test
jecxz
inc
push
sbb
jne
jnp
and
push
mov
pop
jnp
pusha
or
ja
and
lods
imull
loopne
adc
and
mov
scas
pop
nop
push
jg
sbb
adc
aaa
aam
xor
je
xor
call
xchg
test
mov
inc
aad
add
jg
scas
in
add
sahf
push
scas
sbb
bound
sti
mov
repz
jmp
sub
lods
cld
jg
imul
adc
popf
sbb
cwtl
add
lret
jl
sbb
mov
lahf
lcall
hlt
sub
xor
fiadds
hlt
gs
or
clc
les
mov
dec
icebp
in
rorb
mov
mov
adc
inc
inc
cmp
inc
inc
and
rcr
es
lods
rcll
test
push
mov
mov
dec
dec
mov
push
out
fistps
sub
or
dec
cmpl
leave
pusha
mov
scas
sub
js
add
mov
push
pop
inc
hlt
scas
gs
outsb
shl
add
inc
aas
outsb
or
aam
cmc
mov
iret
mov
lods
outsb
dec
cli
ret
stos
sbb
cmp
push
jae
mov
inc
sbb
pop
mov
dec
adc
inc
xchg
dec
hlt
or
pop
jp
add
xor
xor
divb
inc
pop
in
in
add
add
xchg
mov
aas
pushl
scas
xlat
int
cli
or
xchg
xor
mov
icebp
stos
shlb
scas
hlt
lcall
cwtl
and
xchg
xor
dec
ss
jp
ss
bound
inc
xor
popf
cmpsl
out
sub
insb
je
pop
das
push
dec
mov
imul
cmpsl
jne
outsl
addr16
stc
or
sbb
pop
xchg
jge
scas
inc
jl
mulb
push
or
jb
xor
sub
clc
test
scas
dec
fidivrl
add
add
push
adc
mov
mov
and
movd
int
nop
pop
stc
sub
mov
jge
mov
inc
mov
sbb
mov
xor
hlt
pop
cmc
popf
inc
lock
xchg
inc
pushf
push
mov
bound
sahf
lret
adc
jns
and
fisubl
push
loopne
mov
scas
cltd
fnstcw
jmp
sub
shll
fcmove
je
lock
test
movsl
sti
mov
push
in
stos
inc
mov
xor
xchg
shl
xchg
add
in
bnd
cs
unpckhps
adc
pop
rclb
mov
ss
adc
pusha
in
mov
inc
lcall
jp
in
mov
sub
xor
insb
and
add
pop
fwait
inc
dec
jo
add
ds
inc
loope
fldt
jns
mov
hlt
adc
js
lods
cmp
out
push
out
xor
aad
test
jbe
xor
cli
movsb
repz
leave
iret
fistpl
cmp
xchg
pushf
inc
pop
xchg
add
cmp
test
lret
jnp
imul
mov
xor
test
pop
xor
aaa
test
testl
jl
dec
movsl
clc
dec
cmp
sbbl
les
and
dec
scas
mov
popf
adc
out
adc
xchg
stos
outsl
jo
mov
xchg
pop
and
push
push
jno
adc
lds
les
lods
dec
cmp
lahf
ret
loop
dec
inc
inc
mov
or
cltd
rolb
cmp
call
push
fstps
pop
inc
xchg
je
mov
js
outsb
pusha
cmp
repz
and
popa
push
pop
xchg
push
xor
test
loopne
xlat
push
sbb
add
in
adc
add
aam
repz
and
lcall
out
jle
pop
inc
test
lods
imul
sbb
es
cmp
adc
push
mov
in
mov
in
pusha
insb
sbb
xlat
xchg
mov
sbb
test
sub
push
and
add
mulb
xchg
ljmp
aaa
aad
enter
jge
iret
shlb
add
mov
in
test
pop
inc
repz
lahf
mov
push
xorb
mov
ret
in
mov
sub
add
or
and
dec
mov
lahf
shll
pop
adc
loop
shr
jae
divb
jg
pop
in
stos
or
sbb
movl
inc
sbb
jge
imul
ficoml
es
push
adc
sub
and
call
in
aad
je
insl
mov
lea
push
sub
fisttps
outsb
and
filds
scas
inc
cmc
jno
cmc
mov
mov
outsb
jmp
pop
ficomps
test
jge
xlat
push
lods
pop
lods
data16
fwait
pop
xor
scas
dec
sbb
clc
call
scas
xchg
pop
dec
mov
inc
xchg
xor
lods
mov
jl
adc
sbb
xor
and
adcb
subb
jl
sbb
cltd
js
jnp
test
fldenv
into
in
lock
popa
mov
je
adc
pop
xor
mov
fcmove
pop
fsubl
mov
mov
push
fs
mov
outsb
divb
sbb
sti
dec
or
ret
imul
std
add
das
pop
enter
sub
push
add
idivb
rcll
rcrl
ljmp
mov
cmp
xchg
lcall
icebp
daa
call
xor
xchg
adc
mov
cli
pop
or
imul
or
ja
cmc
xchg
inc
in
loope
inc
sbbl
xor
test
lds
outsb
pop
xchg
sbb
and
cld
push
arpl
cmp
leave
lahf
xchg
push
mov
xor
cmpsl
inc
cmp
jmp
lock
pusha
push
mov
and
or
xchg
dec
decl
and
adc
movsl
arpl
sbb
sar
arpl
icebp
mov
bound
sbb
stc
shlb
xchg
dec
xchg
lret
mov
mov
fmul
mov
jnp
xchg
mov
dec
testl
cmp
int3
adc
sahf
neg
inc
enter
xor
adcl
loop
bound
adc
xchg
fdivrp
shl
mov
inc
add
ja
shrb
inc
cwtl
mov
push
mov
insl
repnz
arpl
inc
arpl
and
into
stos
adcb
je
or
sub
inc
cmp
push
cwtl
imul
xlat
push
lahf
and
in
and
inc
movsl
mov
iret
mov
sub
jns
popa
movsl
data16
repz
xor
inc
sub
cltd
push
xor
cmpb
xchg
cwtl
imul
mov
cmp
mov
jl
lea
popf
rcr
mov
mov
mov
sbb
pop
cs
or
dec
arpl
xchg
dec
in
jb
out
add
cmp
inc
imul
sub
adc
jns
cli
call
sbb
arpl
push
mov
cli
add
repnz
sub
xchg
stos
pop
int
fs
lea
dec
add
mov
sub
int
aam
int
or
aam
mov
and
jns
sub
adc
mull
adc
pop
repz
jne
push
and
push
cmpsb
icebp
pop
or
into
popf
insb
dec
into
loop
out
shld
inc
cmp
call
push
push
lods
sbb
ljmp
or
negb
or
ds
xor
enter
mov
jp
add
add
pop
test
xchg
inc
mov
mov
inc
mov
dec
aaa
out
stos
mov
cli
push
movsl
les
xchg
inc
sarb
mov
sarb
aaa
jecxz
mov
pop
js
das
inc
out
xor
inc
xchg
or
loop
frstor
imul
xlat
stc
and
lcall
push
inc
outsl
and
cmp
dec
xor
dec
pop
sbb
test
fnstsw
arpl
stc
jno
inc
outsl
daa
inc
and
mov
out
cmp
mov
mov
mov
mov
roll
add
ror
push
leave
shl
mov
mov
lds
inc
in
mov
in
mov
fbstp
or
add
inc
inc
xor
xchg
jnp
popf
sti
jmp
xor
adc
icebp
adc
mov
jle
jge
cmp
and
int
roll
out
dec
jo
jne
bound
or
jecxz
ret
sti
add
sbb
push
sub
xchg
aaa
icebp
out
lret
repz
stc
movsl
mov
inc
sbb
add
cmp
addl
mov
jno
test
mov
stos
push
and
vdivsd
int3
cmc
mov
mov
push
pop
rorb
push
dec
and
cwtl
sbb
inc
movsl
mov
es
push
inc
pop
jo
mov
out
mov
cmpsb
mov
out
push
ret
or
jl
mov
xor
sub
imul
pop
jb
sbb
daa
xchg
jns
xchg
arpl
dec
cmpsl
mov
inc
mov
push
out
sbb
cmpsb
rcll
mov
sub
jb
insb
jmp
test
cmp
adc
out
add
fstpl
movsb
push
icebp
pop
sub
sahf
rorb
xchg
inc
pop
add
jmp
adc
sub
leave
enter
jne
in
dec
add
test
std
ja
imul
fsqrt
test
sbb
arpl
adc
ljmp
lret
lcall
icebp
add
loop
rcrl
in
xor
lahf
shll
es
cmp
test
outsl
repz
icebp
outsb
stos
arpl
movb
movsl
dec
lahf
xlat
jne
test
mov
fsubs
dec
or
sub
sub
inc
pextrw
jl
scas
mull
sbb
je
or
adc
rcrl
in
push
pop
pop
test
test
out
dec
fdivl
test
movsl
jge
icebp
cli
stc
dec
push
out
xchg
jge
inc
xchg
repz
xlat
adc
mov
push
mov
add
popa
xor
popf
das
mov
xchg
mov
mov
pop
enter
stos
pop
xchg
mov
test
arpl
sahf
sbb
std
xchg
xor
subl
jo
in
pop
call
in
xor
scas
xchg
in
loope
pop
xchg
mov
push
leave
cwtl
mov
pmaxub
call
pop
jb
daa
test
ds
sub
inc
fcoms
pusha
movsb
push
hlt
insb
lds
movsb
rclb
aas
add
ucomiss
pop
mov
hlt
imul
les
and
jns
jl
xchg
ret
fxch
push
pop
data16
push
int3
shl
popa
outsb
cmpsb
xchg
sbb
mov
mov
fwait
lock
jle
in
inc
xor
sbb
add
mov
fdivrl
jbe
cmp
sbbl
jmp
mov
mov
and
ljmp
adc
mov
cmp
lret
mov
cmp
popf
arpl
mov
rolb
pop
rcrl
addb
mov
add
or
cmp
sub
jbe
ficoml
and
loopne
sub
daa
push
sti
jmp
loope
test
test
in
mov
cmpsb
or
cmp
rorb
jo
jmp
pusha
jle
cmp
out
outsb
nop
and
cmp
in
fdivrs
dec
sbb
insb
cld
js
push
ret
sub
subl
jle
mov
mov
loop
xor
inc
push
xchg
fcmovne
call
aam
movsl
add
aaa
fadds
int3
sbb
xor
sbb
cmp
mov
mov
lahf
lahf
mov
jge
ljmp
push
dec
or
repnz
hlt
call
push
cs
lcall
orl
rcl
jecxz
mov
insl
jo
dec
call
add
mov
mov
enter
js
xchg
mov
mov
test
daa
sub
push
fnstcw
std
mov
jmp
icebp
pop
cmp
adc
mov
jge
mov
lds
pop
aaa
pop
orl
inc
dec
pop
outsl
sahf
jnp
fmuls
inc
mov
mov
adc
mov
sbb
test
xor
cmp
mov
daa
xchg
jge
push
shrl
sub
sub
imul
jge
in
call
pop
sahf
cmp
add
xchg
and
jle
inc
and
sbb
movsl
xchg
cld
mov
out
sub
imull
test
pop
cmc
inc
jecxz
xor
mov
cs
add
cltd
shrb
data16
test
imul
out
ja
cmp
mov
call
in
sub
rol
xchg
inc
clc
cld
cmp
cmp
into
call
lods
gs
pmulhw
jle
loop
mov
cmp
das
dec
jecxz
bound
or
adc
ds
push
cmp
xor
aaa
int3
jg
jmp
mov
sbbb
mov
cmp
mov
sahf
aam
or
sbb
pop
lods
icebp
repz
cltd
scas
add
pop
popf
movsl
jmp
or
insb
inc
fdivrs
sub
insb
jbe
test
or
lcall
and
enter
roll
in
pop
fwait
mov
cmc
cs
push
js
pop
shlb
sub
pop
or
dec
xchg
cltd
enter
roll
aad
sti
cmp
add
cmpsl
push
ret
xor
jg
popa
push
mov
mov
xor
mov
ficomps
clc
sub
add
aad
in
in
and
cmp
inc
test
dec
fisubrl
test
pushf
test
mov
cmp
xchg
adc
push
leave
add
rorb
xor
jmp
push
jp
add
out
imul
jo
sbb
enter
leave
jne
mov
ja
pop
push
jns
jb
pushf
sub
call
mov
or
xchg
mov
inc
ja
jmp
scas
mov
cmpsb
ja
mov
cmp
out
idivb
int3
xor
inc
mov
add
add
adc
push
aas
push
jecxz
ret
mov
jle
or
xchg
test
int
ja
xchg
xor
sbb
les
mov
sarl
adcb
or
sbb
dec
dec
push
add
cmpl
jne
imul
add
pop
mov
inc
repz
testl
dec
jns
fcmovnbe
or
mov
call
and
add
cmp
add
shll
gs
icebp
pop
xor
je
mov
test
pushf
cmp
sub
mov
sbb
aad
sbb
nop
sub
push
int3
sbb
cltd
inc
and
out
mov
cmc
xchg
jmp
ss
fsubs
cwtl
rcr
test
insl
dec
xchg
mov
dec
or
sub
jle
loop
jno
mov
add
or
in
rorl
mov
push
aaa
mov
or
xchg
cwtl
sub
cmp
push
cmpsl
mov
lret
dec
arpl
or
push
push
push
out
xor
call
push
pop
and
shrb
rcl
movb
in
leave
push
out
pusha
jle
dec
jb
cs
pushf
push
fmuls
aad
jmp
sti
or
mov
arpl
or
lock
cs
dec
add
ret
push
fsubrs
push
adc
add
xchg
mov
jle
pushf
std
cmpsb
es
push
nop
inc
test
and
test
call
jle
mov
pop
push
ds
fadd
dec
add
or
mov
push
adc
mov
mov
mov
jns
pop
inc
sub
inc
mov
dec
or
jmp
int
pop
jecxz
add
nop
add
lret
xchg
pop
pop
dec
push
mov
aam
adc
fistpll
xor
jl
fwait
mov
cmp
mov
inc
lret
pop
and
pusha
stos
negl
jnp
lock
addr16
xor
aam
ja
xor
jmp
jmp
js
jb
sub
ret
clc
in
jo
arpl
aas
xchg
fwait
mov
in
add
arpl
rcll
xchg
fs
cmc
jns
xor
sti
aaa
ljmp
sub
and
icebp
out
bound
lahf
cmp
mov
fidivrs
add
mov
adc
imul
fcmovb
lret
and
mov
pop
cmpsl
sbb
lea
shl
es
xor
mov
rorb
mov
mov
repnz
mov
cli
mov
das
and
inc
ljmp
push
sbb
adc
dec
mov
sub
cmp
lods
xchg
insb
mov
movsb
pushf
jb
pop
out
mov
out
sub
scas
test
xchg
int
fs
addr16
aas
push
addr16
and
pop
pop
xor
pop
aad
pop
cld
xchg
xor
scas
cmp
sarl
icebp
sahf
jp
shll
cs
mov
adcl
in
cmp
orb
ljmp
les
stos
loop
cmp
inc
push
mov
push
lret
lret
fstl
xchg
mov
inc
pop
repz
push
cs
mov
or
adc
lret
in
out
sbb
cmpsb
mov
push
cltd
mov
jb
cmp
push
stos
push
lods
cmp
popf
sbb
pushf
inc
fimull
loop
daa
mov
dec
jmp
pop
enter
jmp
add
call
shrl
mov
repz
and
or
mov
movsb
cld
sti
jb
sub
adcb
subb
rcr
cmp
aam
or
xchg
add
push
pop
shll
enter
jnp
notb
test
shlb
add
push
test
push
mov
fs
pop
lea
jp
outsb
shlb
cmc
jg
aaa
mov
jnp
inc
adc
mov
cwtl
inc
lea
push
xchg
and
pop
jecxz
add
adc
fstpt
mov
rolb
adc
jns
xchg
or
pushf
loopne
cwtl
adcb
cli
rorb
mov
stos
cwtl
je
mov
sub
bound
fists
dec
or
popa
cmp
and
lret
inc
xchg
icebp
mov
stos
mov
sahf
mov
scas
fstl
dec
push
aad
mov
aad
ret
dec
pop
inc
sub
xor
sub
sub
je
movsl
pop
lods
lock
or
mov
je
pop
outsb
jle
or
mov
xchg
mov
inc
sbb
inc
daa
lahf
xor
xorb
stos
cld
mov
addr16
push
dec
mov
iret
jo
xchg
fisttps
adc
jge
ss
fnstenv
fsubl
arpl
sbb
xlat
jg
int
and
mov
xor
mov
jns
push
jns
mov
out
orl
add
lods
push
ds
jno
jl
dec
adc
cld
inc
aam
sbb
out
stos
call
sti
scas
aaa
imul
jg
adc
pop
xchg
sbb
sarl
movzbl
lcall
fidivrl
mov
pop
and
je
pushf
loope
ss
cmp
xchg
mov
xchg
add
mov
jne
pop
out
adc
pop
xchg
ja
hlt
aaa
and
push
scas
les
jb
loope
add
jmp
cld
imul
pop
sub
int3
inc
and
xor
int3
dec
je
xchg
lods
inc
insb
ljmp
mov
adcb
inc
repnz
and
js
xchg
inc
xchg
cmp
xchg
divb
sub
xchg
push
shl
clc
repz
je
adc
xchg
sub
push
sub
in
test
inc
ret
or
push
mov
popf
sbb
cmp
inc
xchg
xchg
mov
jmp
jge
jno
lcall
insb
jge
fistpl
cs
idivb
lods
je
loopne
push
and
cmpsb
aaa
pop
ljmp
mov
test
fimull
or
cli
add
lods
out
ror
cmp
xchg
data16
mov
push
xchg
aas
or
les
xor
loope
int3
or
scas
xor
cld
xlat
lahf
int3
rep
int
in
jns
out
jb
ljmp
stos
inc
cmc
cmp
dec
jecxz
mov
and
fisubs
call
stc
sti
sbb
rclb
jg
adc
cmc
cmp
mov
jl
rcrl
sahf
push
push
mov
les
pop
fadds
cli
jb
add
test
iret
aam
jo
stos
inc
mov
fistpll
das
loopne
mov
jge
lret
ds
inc
push
jo
sub
pusha
mulb
pusha
aaa
jbe
sub
add
in
mov
cld
jns
sahf
pop
mov
xchg
and
jnp
lahf
or
ss
sbb
lret
xor
mov
fists
sub
jns
aaa
adc
filds
icebp
jno
inc
sbb
loope
push
test
insl
int
out
cld
xchg
xchg
mov
scas
lock
jle
cmp
fisubrl
jge
jg
push
int
nop
jg
add
sub
cli
cltd
mov
int
or
ret
out
loope
jno
or
sahf
cmp
jle
cmpsl
loope
cmp
xchg
sub
shll
cmp
sbb
sbb
lock
pop
fucom
jle
daa
xchg
stos
inc
lret
pop
cltd
xchg
mov
sbb
xchg
in
fcmovnb
dec
jb
cmp
sbb
push
cli
sti
add
mov
cmp
out
sbb
daa
loope
out
mov
xchg
aam
pop
mov
xor
clc
xchg
and
sar
and
jg
loop
push
hlt
adc
and
les
pop
adc
mov
cs
cwtl
repnz
aam
sbb
lret
push
sbbl
js
out
xor
and
add
xor
lea
xchg
or
cmpsl
jg
popf
push
sbb
sbb
cltd
adc
mov
mov
and
mov
in
mov
pop
out
imul
pop
lds
adcb
addr16
push
xor
scas
lcall
sub
jno
cmpsl
ljmp
jmp
sub
pop
test
sbb
add
or
cmp
add
add
sbbb
sub
nop
int
push
xor
mov
mull
xchg
mov
sbb
add
loope
mov
movb
jbe
adc
in
cmpl
pop
out
and
mov
jbe
and
cs
test
rep
mov
mov
adc
gs
lahf
pop
xchg
test
add
mov
out
xchg
xchg
push
popa
jo
sahf
or
lahf
inc
rep
adc
sbb
xor
aad
dec
lods
sub
push
jge
sbb
add
jmp
adc
lods
xchg
ljmp
pop
ret
and
inc
faddl
lret
cmc
ds
push
loop
fidivrs
add
sbb
xor
popf
pop
icebp
sbb
and
cmp
mov
xchg
mov
cmp
jle
and
scas
ffree
xor
mov
pop
dec
adc
jbe
test
pusha
inc
stos
adc
jns
mov
pop
xor
jp
jp
stc
cmpsl
andb
and
leave
cld
add
cltd
scas
aad
push
push
adc
shlb
push
fsub
iret
inc
mov
pop
leave
arpl
inc
cld
sahf
test
leave
mov
mov
insb
das
data16
js
sub
aas
fucom
adc
mov
movsl
rcll
sti
mov
dec
xchg
push
push
push
xchg
les
xchg
push
pop
outsl
cltd
and
sbbl
pop
mov
roll
adc
push
insl
xchg
scas
iret
jmp
sbb
sbb
adc
loope
and
cmp
mov
push
jmp
xchg
in
jbe
popf
test
and
mov
pop
aas
ret
pop
imul
add
aaa
sbb
test
lds
sub
xchg
enter
icebp
cmp
dec
cwtl
mov
popf
mov
sar
dec
sbb
push
lea
outsb
lcall
push
movsb
addr16
lods
mov
mov
xchg
std
xor
jg
movsb
ret
inc
jne
call
mov
imul
mov
cmp
cmpsl
repz
dec
xchg
fwait
rorl
in
in
gs
fsts
fcomps
outsb
daa
mov
xor
mov
mov
lret
mov
mov
inc
pop
scas
push
clc
je
add
jmp
mov
lock
mov
add
cmpb
les
scas
sub
or
mov
lock
arpl
mov
sbb
mov
je
add
dec
gs
cmc
jae
orl
loope
lea
mov
scas
mov
lods
pop
pop
jmp
addr16
sub
and
pop
in
sub
lds
mov
mov
and
lea
pushf
fldenv
adc
mov
std
adc
call
xor
nop
sbb
pop
je
mov
pop
les
lret
dec
mov
jbe
or
iret
xchg
push
sub
inc
cmp
jmp
addr16
fistps
aaa
movsb
scas
mov
insb
enter
xchg
mov
idivb
jg
scas
cmp
movsl
or
movsb
adc
sbb
or
fstl
jns
adc
jmp
mov
lret
push
scas
dec
pop
stos
leave
pusha
out
pop
arpl
fisttpl
fcmove
shrb
lea
rcl
inc
dec
push
push
lea
int
mov
xor
mov
cmp
aad
pop
dec
xchg
hlt
sahf
mov
pop
cmp
cmpsl
and
push
bound
std
fdivrs
pop
repnz
mov
xor
xchg
mov
mov
fcoms
inc
mov
and
cmpsl
and
sbb
dec
sbb
inc
cltd
sbb
mov
sub
pop
jno
xchg
inc
sub
lret
or
mov
pop
sub
sub
pop
jecxz
xor
cli
stc
mov
and
jl
cld
jb
add
sub
cmp
aam
shr
or
int
cmp
idivl
and
mov
push
test
push
mov
pusha
popa
ljmp
push
cmpsb
pop
jmp
push
or
das
adc
loop
dec
mov
push
add
push
mov
mov
pusha
jle
push
adc
jbe
pslld
or
jmp
jecxz
daa
cltd
xchg
pop
and
dec
jbe
or
fs
mov
ret
out
push
xorb
cmc
arpl
jns
out
test
insb
sub
call
divb
sbb
jge
push
mov
push
xor
ljmp
jno
dec
add
or
sub
and
daa
adc
xor
les
cmp
lcall
es
ja
in
fisubl
pop
and
lahf
add
xchg
cmp
push
jecxz
cmp
lock
jl
addl
pop
push
aas
adc
out
jo
mov
pop
add
movups
jecxz
xchg
mov
dec
xchg
loopne
adc
sbb
lds
sbb
jno
jnp
bound
xchg
xchg
das
pusha
xchg
jle
inc
mov
rep
sbb
mov
push
inc
adc
int
fcmove
mov
mov
and
add
sbb
out
jmp
loope
pop
jbe
sbb
xchg
stc
push
jae
aas
mov
lret
and
xchg
ffreep
pusha
cmp
jae
loope
mov
push
dec
mov
gs
fbstp
inc
inc
mov
shll
add
stos
cmp
outsb
idiv
je
imul
mov
rclb
leave
lret
in
xchg
pop
jne
fcomps
or
or
test
cwtl
negl
test
inc
push
frstor
xchg
xorb
push
and
vpsubusw
sti
adc
inc
sbb
jle
xchg
dec
addb
rcr
pop
cmp
mov
push
insl
mov
cli
sbbb
cmp
ds
test
sahf
inc
rep
push
push
fdiv
es
cmpsl
pop
xchg
inc
cs
rolb
bound
dec
iret
mov
sub
inc
dec
data16
popl
pcmpgtb
arpl
jle
cmpsl
je
cmpsb
outsl
pop
fwait
cwtl
sbb
cmp
push
or
fmul
dec
gs
ror
jo
dec
fscale
sub
arpl
int3
adc
std
int
cmp
lea
or
mov
call
lea
cmp
mov
loopne
lahf
lods
aam
jo
dec
popf
test
pusha
mov
pop
xchg
mov
jmp
xchg
fs
cmp
movsl
ja
and
sub
mov
es
orl
sbb
push
sbb
push
aas
scas
xchg
popf
hlt
or
rcrl
mov
push
cmpsl
stc
stos
cmp
add
and
jecxz
inc
bound
scas
dec
cmp
pop
stos
cmc
and
xor
ja
repnz
or
cmp
mov
jmp
inc
mov
sahf
imul
dec
test
dec
rclb
xor
push
arpl
in
cmpsl
std
imul
inc
jg
mov
out
js
cmp
cmp
xor
cli
roll
scas
sbb
mov
fsubrl
sarl
push
cwtl
rcll
lret
test
fnstcw
jo
jg
jg
inc
xchg
lcall
add
in
add
cmpsb
movb
dec
loope
nop
popa
push
jge
and
test
out
xchg
popa
xor
pop
adc
out
cli
xchg
fildl
rolb
nop
ss
push
fdivl
mov
cmp
xchg
icebp
lods
push
sarl
lret
into
sar
jno
lahf
loopne
ret
push
aas
xlat
dec
pop
mov
ja
push
xchg
test
jns
push
adc
push
cmpsb
sub
jno
imul
push
sub
jle
or
push
push
xor
adc
aam
in
stos
jbe
shlb
sub
outsl
push
daa
stos
dec
and
mov
cwtl
and
sti
xor
mov
lds
or
in
test
popf
push
int3
mov
and
les
and
push
std
sub
bound
bound
pop
mov
fistl
xchg
shrl
in
testl
mov
test
dec
pop
push
enter
mov
lahf
outsl
push
dec
pop
jg
push
repz
and
push
insw
mov
push
jge
sub
pusha
lret
inc
and
loopne
adc
push
jle
arpl
jl
mov
out
or
adc
aas
movsb
mov
popa
cmp
out
pushf
ds
test
outsl
mov
inc
xchg
dec
sbb
dec
xchg
mov
sub
inc
shl
sub
stos
and
mov
lret
js
dec
scas
jmp
xchg
dec
repz
enter
imul
xchg
leave
test
je
mov
fdiv
adcl
pusha
rorl
inc
adc
xchg
call
scas
mov
mov
pop
fs
stos
mov
cmpsb
lret
rsqrtps
ret
mov
sub
mov
fldcw
mov
pop
mov
push
mov
cwtl
xchg
cmp
inc
iret
insl
cmc
fs
ret
mov
mov
inc
dec
repnz
call
cmp
stos
lcall
scas
fs
imul
xor
popa
addb
push
mov
test
xchg
cwtl
mov
daa
and
in
sbb
call
inc
dec
cltd
xor
fsts
bound
or
mov
adc
mov
cmp
mov
mov
adc
mov
cmp
std
nop
stc
xorb
iret
inc
movsb
hlt
or
in
fadds
nop
and
mov
mov
stos
mov
mov
inc
cs
jae
in
lcall
js
mov
sbb
popa
add
sahf
lea
or
mov
gs
call
jle
addl
mov
push
add
lds
lock
pop
cmp
lahf
sbb
or
cmpsl
aam
or
lcall
call
sub
pop
sub
or
test
push
shl
pop
add
add
cld
push
mov
in
mov
push
inc
sub
fmulp
notl
stc
cmp
stc
lret
sbb
adc
fiaddl
nop
ficomps
jns
out
cmp
push
dec
rcrl
pop
and
push
xchg
push
scas
pop
push
fcoml
inc
inc
les
cmc
nop
xchg
out
cs
cmpsl
fbld
imul
pop
stos
mov
mov
aas
rorl
sbb
fnstsw
mov
cwtl
sub
pop
leave
sbb
pop
lods
bound
or
adc
cmp
and
dec
xorb
imul
or
sub
out
mov
jne
dec
mov
bndldx
imul
repz
push
out
push
mov
adc
inc
stos
lret
cltd
hlt
fidivl
cli
addb
or
or
pop
shrb
ror
das
fsubl
paddb
or
enter
loop
mov
mov
mov
aam
dec
ja
mov
jmp
mov
mov
lahf
and
dec
dec
int
cmp
movsl
push
xor
and
std
cld
and
xor
or
call
jmp
fcoms
sbb
xor
inc
lret
mov
push
mov
std
dec
xchg
cmp
mov
icebp
mov
push
mov
imul
jg
stos
push
movsl
enter
inc
sti
jne
sbb
out
push
pop
push
push
in
shrb
or
add
lea
xchg
push
outsl
imul
lock
mov
into
jmp
or
clc
pusha
dec
dec
adc
mov
pop
aaa
mov
xchg
xchg
sub
jae
sahf
adc
or
jle
jmp
fimuls
and
aam
ficoms
mov
mov
in
insl
xchg
push
or
xor
fldenv
scas
dec
sub
jo
push
jbe
sbb
in
xor
or
ret
dec
negl
int3
pusha
cltd
lcall
pushf
push
in
add
add
or
mov
iret
cmp
pop
subb
dec
add
mov
dec
mov
xchg
stos
sbb
xchg
js
orb
xchg
loope
sub
mov
cmpsl
arpl
xlat
push
cs
inc
iret
mov
mov
leave
xchg
fwait
roll
mov
fcmovnu
std
icebp
jae
fs
leave
in
xor
push
adc
mov
mov
sbb
in
push
mov
ds
imul
in
sbb
lcall
sbb
leave
fcoms
mov
push
scas
gs
lods
loopne
pop
scas
fcmovnbe
pop
jecxz
xchg
and
int
mov
int
popf
push
mov
inc
mov
mov
dec
ss
cmpsb
xor
ljmp
xchg
mov
and
lock
fildll
cmp
sbb
stos
push
popl
push
adc
enter
mov
sub
mov
adc
das
out
xchg
add
shlb
jb
ss
jmp
loopne
arpl
jl
xchg
push
lahf
add
lcall
or
xchg
pusha
std
mov
mov
cmp
sub
sbb
jne
sti
loop
xchg
fcmovnu
sbb
pop
fcom
scas
addr16
nop
mov
sbb
add
mov
dec
lret
xchg
cmp
sub
xor
mov
jb
into
mov
dec
pcmpgtw
mov
in
sub
rcr
mov
push
lahf
jg
jnp
fdivrl
mov
push
or
add
subb
or
std
sub
ss
lahf
shrl
popa
or
movsl
adc
stos
sbb
int
jb
ljmp
ljmp
aad
dec
xchg
lods
add
dec
push
sbb
addr16
dec
je
inc
pusha
xchg
pop
sub
mov
out
mov
sub
out
cmp
sti
in
pop
out
in
lock
cmp
dec
ja
shlb
ficoms
xor
inc
pop
fs
in
test
xchg
outsb
shrl
mov
repz
push
fdiv
les
cmpb
outsl
in
aas
int
stos
lea
sub
mov
andl
push
cmp
or
inc
sahf
lret
add
cvtpi2ps
cld
in
outsb
adc
add
mov
popa
outsl
cmp
mov
mov
mov
mov
hlt
and
cwtl
fcmovnbe
xlat
or
sub
mov
dec
pop
gs
mov
dec
mov
repz
lcall
cmc
cld
cmp
insb
je
sar
inc
mov
popf
push
mov
outsl
xchg
inc
push
int
out
mov
daa
pusha
mov
push
mov
out
ljmp
popa
enter
pop
sub
xchg
and
mov
fwait
daa
xor
aaa
clc
xchg
inc
inc
sbb
repnz
fs
mov
sub
jo
inc
out
lahf
ja
insl
sbb
sub
or
inc
pop
xor
mov
or
dec
ljmp
clc
add
outsb
shlb
cld
pop
dec
dec
sbb
and
lahf
inc
xchg
add
cmpsb
mov
xlat
adc
leave
sbb
es
sbb
int3
sbb
add
push
or
sti
pop
idivl
fxch
lcall
push
test
pusha
mov
push
push
test
ss
dec
fcomip
movsl
fwait
xchg
cmp
cmp
out
popa
ss
push
loopne
jbe
adcb
mov
je
jecxz
jl
loop
jne
and
stos
stos
xor
pop
sub
pop
xor
dec
pop
rcr
daa
fildll
sbb
mov
into
fistps
stos
and
jge
enter
sarb
xchg
out
and
outsl
lods
add
jmp
mov
out
outsl
add
add
fcmove
subl
fbld
arpl
jnp
popa
popf
dec
mov
inc
jmp
outsb
jnp
cmpb
lcall
jl
pop
je
xlat
mov
mov
or
pop
fcom
jnp
or
fadds
lock
adc
scas
push
push
jb
jb
push
movsb
and
lahf
push
and
rorl
cmpsl
pop
mov
and
lcall
add
aaa
fsubrl
lahf
arpl
addr16
mov
out
imul
or
push
clc
mov
repnz
mov
les
enter
ja
inc
mov
call
sub
inc
loope
dec
mov
xchg
mov
mov
push
sub
and
in
fwait
repz
in
fwait
imul
sbbl
adc
outsb
dec
pop
push
into
push
sub
xchg
mov
mov
clc
shlb
push
mov
outsb
imul
mov
sbb
in
aad
jno
daa
rclb
and
or
mov
jge
mov
mov
movsb
in
mov
iret
pop
movsb
mov
in
xor
cmp
data16
xchg
pushf
cld
test
rcl
rorb
xorl
dec
stc
xor
jae
push
dec
fs
or
mov
xchg
hlt
add
insl
mov
insb
adc
fisttpll
dec
jge
sti
push
push
out
inc
adc
jns
inc
inc
mov
adc
lret
test
mov
xchg
fnstenv
lahf
xor
dec
pop
loopne
and
aam
jp
mov
mov
mov
out
sub
xchg
popf
mov
test
sbb
inc
sub
push
lret
mov
pop
call
dec
hlt
inc
pop
push
jno
ja
int3
xor
scas
add
dec
mov
mov
aaa
xchg
rclb
addl
add
add
pop
sbb
xor
or
es
mov
jo
and
pop
mov
mov
push
insb
adc
pop
pop
xchg
popf
test
insb
gs
cmp
addr16
std
insl
ss
ret
in
mov
jns
sti
fwait
je
xlat
inc
rorb
jg
out
cs
inc
pushf
push
or
mov
xor
loope
ds
or
pop
mov
xlat
jb
out
sub
mov
xchg
or
fstp
dec
jge
cmp
cmp
push
cs
inc
outsb
mov
rclb
testb
cmp
or
iret
jp
dec
and
jecxz
fildll
or
rcll
xchg
lcall
out
xchg
enter
lea
adcl
bound
stos
xchg
push
loopne
xor
in
inc
icebp
inc
xchg
stc
repnz
subl
sahf
push
pop
int
jae
xorl
mov
out
je
add
jbe
scas
repnz
xchg
sbb
outsb
orb
jbe
leave
ret
call
sub
fcoms
or
cmpsb
loop
or
in
xchg
pushf
bound
xchg
je
fwait
inc
shlb
mov
push
add
test
flds
cmpb
jb
jecxz
jnp
call
inc
adc
or
pop
cmpsb
test
test
mov
xchg
popf
dec
arpl
addr16
mov
push
mov
icebp
sbb
mov
pop
inc
aam
sub
adc
test
and
jne
inc
cli
loop
punpckldq
stos
in
fs
out
xchg
jo
mov
sub
mov
mov
push
xor
inc
fimull
sbb
aas
jmp
movsl
lcall
hlt
mov
jnp
add
add
mov
mov
xchg
push
xlat
mov
mov
adc
xor
push
hlt
cmp
fistps
lahf
repnz
nop
das
jns
add
aas
mov
sbb
ss
jp
bound
leave
in
hlt
jl
pop
or
fsubl
call
or
lret
mov
bound
pop
push
push
mov
icebp
cmpb
mov
or
add
dec
lods
adc
outsb
mov
aam
sahf
cmp
mov
lret
rorb
jg
xor
imull
push
xchg
mov
inc
and
test
mov
mov
les
mov
aaa
loopne
mov
pop
sub
sub
push
cmp
lea
iret
std
sbb
call
jnp
push
mov
add
sbb
inc
mov
pusha
outsl
imul
add
push
push
sahf
mov
xchg
repnz
cmpb
xchg
adc
scas
jns
jg
notb
sahf
mov
xor
push
push
dec
add
mov
cmpsb
xchg
fistpll
mov
dec
sub
jne
jmp
mov
sub
data16
shrl
popf
mov
sbb
divl
addr16
and
jp
lea
sub
jo
mov
popf
jg
dec
xchg
mov
mov
out
cmpsl
out
ret
mov
and
nop
mov
lcall
or
scas
pop
shlb
mov
rcll
loop
out
xchg
push
adc
fdiv
adc
repz
fwait
cmp
pushf
mov
pop
loope
pop
pop
les
cmc
mov
cli
xchg
sub
xchg
and
sbb
outsb
jo
mov
ret
imul
xchg
dec
add
out
fcomps
and
and
add
or
jle
sbb
nop
leave
decl
les
mov
or
scas
clc
and
jne
ljmp
jns
xor
sbb
call
out
js
mov
addb
xchg
jbe
sbb
xor
pop
fisttpl
enter
call
jle
mov
ja
ds
and
pushf
cltd
fwait
cmp
cmpsl
add
fcomp
and
cmpsb
push
mov
jg
gs
pop
test
or
dec
push
xchg
fwait
sbb
arpl
jns
adc
mov
adc
rclb
shll
les
fs
xor
clc
jo
cmp
lds
pop
daa
enter
push
and
loop
movsl
mov
outsl
lea
pop
mov
inc
sub
movsl
dec
sub
sub
or
pop
inc
test
lret
lcall
inc
sbb
push
sbb
insb
les
push
cltd
add
stc
fistpl
xchg
popa
ret
adc
lcall
xchg
jne
xchg
in
ljmp
cmp
mov
fdivs
mov
cmpsl
mov
dec
subb
sahf
jo
decb
shlb
sbbb
stc
or
xchg
sbb
js
adc
fwait
stc
mov
pop
add
inc
xchg
lcall
push
out
bound
mov
aas
dec
push
and
mov
dec
mov
push
sbb
xchg
pop
std
cmp
rcll
push
shll
je
fs
ljmp
adcl
adc
push
es
dec
aad
add
push
es
jl
test
mov
nop
cmpsb
test
mov
pop
jge
pop
cli
je
cld
adc
inc
push
jl
jne
int
lods
pop
jle
push
pop
jo
mov
fisubs
push
test
outsb
ffreep
mov
movsb
sti
or
lret
movsb
pop
pop
mov
xchg
inc
adc
dec
inc
call
jl
out
and
push
mov
or
dec
insb
inc
push
in
popa
inc
movsb
jne
push
and
jnp
test
ss
sub
mov
cmpsl
bound
inc
inc
iret
shl
loop
mov
push
sbb
mov
push
lret
add
jp
and
out
fidivrs
ret
adc
add
fnstenv
sbb
inc
mov
pop
and
mov
sub
fcmovne
and
mov
clc
in
mov
jp
popa
add
leave
arpl
fnstsw
pusha
push
cmpsl
push
daa
lcall
mov
cli
dec
imul
push
inc
in
ret
xchg
insb
rcrl
push
fcoml
cmpsb
mov
pop
xorb
imul
clc
jo
push
adc
push
out
loopne
dec
fcompl
inc
ficomps
mov
test
mov
xor
cli
bound
scas
sti
jl
or
outsb
mov
cltd
test
subl
mov
nop
xchg
outsb
sub
add
mov
adc
sbb
sbb
mov
loop
inc
cmp
add
xor
cmc
movsl
sbb
subl
imul
outsb
xchg
or
xorb
shll
jle
negl
lds
sbb
and
adc
lods
mov
divb
dec
add
sub
sub
cwtl
dec
inc
xchg
in
icebp
jge
xchg
mov
dec
outsl
loopne
sub
iret
pop
mov
testl
mov
mov
insb
adc
test
sbb
jge
push
mov
push
fldenv
adc
rcrb
decl
dec
push
xchg
in
add
inc
pop
jb
loope
dec
pop
jecxz
xchg
loop
ret
cmc
addb
pushf
fwait
xchg
cmc
or
mov
ret
out
mov
pop
jmp
mov
jnp
pop
mov
ds
inc
fcomip
pushl
inc
sbb
xor
dec
jecxz
pop
inc
mov
mov
push
sub
add
mov
push
xlat
sbb
inc
out
sbb
push
les
lea
jl
repz
subb
mov
push
mov
xchg
push
pop
sub
sbb
lds
inc
ror
xor
push
cmp
and
insb
int3
push
clc
mov
arpl
sub
addl
pop
mov
cmpsl
pop
in
adcl
mov
xor
and
hlt
jle
jb
mov
sbb
jmp
push
ret
add
into
mov
xor
cmpsb
ja
lods
enter
loop
dec
stc
out
fucomi
ret
aas
clc
xchg
xlat
xor
pushf
mov
sub
mov
mov
lock
fbstp
into
push
lahf
push
mov
decb
shrb
or
je
or
push
xchg
and
mov
jbe
out
sub
ss
fstpt
test
loopne
lods
sbb
movsl
fdivr
cmp
push
flds
imul
push
sbb
in
xlat
xor
fwait
out
cmpl
stc
mov
xor
sbb
xchg
gs
imul
jb
jmp
push
push
xlat
push
ffreep
xchg
cmp
lods
loop
mov
or
leave
adc
stos
fldl
sbb
nop
adc
or
out
ret
loopne
cld
stos
divb
fsubrl
loope
shll
xchg
dec
icebp
fisubl
loopne
fwait
mov
scas
jg
bound
sahf
imulb
enter
mov
negl
inc
xor
pop
int
sahf
ret
mov
movsl
mov
mov
push
mov
push
lock
xchg
jle
mov
xchg
cmp
loopne
push
cltd
jmp
dec
cmp
sub
aad
test
cmp
rolb
push
mov
pop
dec
out
add
dec
notl
cmp
shrb
sub
mov
cmpsl
shl
sti
jmp
scas
insl
fdivs
dec
xchg
sbb
in
movsb
pop
mov
and
ljmp
inc
pop
sub
mov
inc
scas
xchg
in
pop
out
sar
mov
push
pop
mov
mov
imul
xor
int
addr16
loop
cmc
xchg
mov
add
pop
int3
test
jg
nop
dec
adc
imul
fsts
fcomip
outsb
bound
mov
mov
addr16
cmp
lahf
and
fsub
les
fwait
jmp
push
mov
lret
push
rcll
jns
cld
lahf
and
jns
fs
outsb
and
push
mov
and
inc
movsb
test
xchg
lds
fs
or
jbe
mov
mov
fnsave
outsb
dec
jmp
loope
fidivl
out
sbb
push
dec
decb
inc
sub
mov
sub
iret
loopne
inc
mov
packsswb
mov
dec
ficomps
cmp
fisubl
push
mov
lahf
cmp
pop
dec
popa
popf
fs
jp
or
loopne
das
or
daa
adc
aad
movsl
xor
flds
iret
sub
jle
stos
iret
out
ds
mov
std
mov
lods
mov
mov
pop
movsb
add
mov
aam
std
ljmp
iret
out
mov
bound
mov
mov
ss
stos
fistpl
fidivrl
ds
cmp
mov
aas
fidivrs
into
nop
mov
movsb
cli
scas
cmp
int3
es
cmp
test
mov
pop
or
in
mov
adc
cmp
jne
cltd
int3
xchg
pop
or
pop
jno
adc
leave
jo
daa
add
or
mov
popf
push
xchg
lahf
outsl
mov
xchg
lds
leave
pop
divl
popf
imul
hlt
pusha
mov
dec
js
sbb
jp
jge
in
xor
stos
shlb
xlat
ret
scas
xchg
mov
lcall
test
shll
mov
mov
dec
sbb
insl
jle
out
lock
popa
popf
jno
cs
push
in
cli
sub
xor
mov
xor
into
pop
movsb
push
lcall
xchg
xchg
les
xor
sahf
out
outsl
shrl
imul
clc
call
movsb
xchg
pop
arpl
cmp
sub
lret
cli
ljmp
pushf
rclb
into
pop
loopne
clc
loope
incl
pop
leave
sbb
jbe
out
lods
xchg
movsl
int
nop
pop
sbb
mov
dec
ror
lcall
mov
pop
and
push
jmp
xchg
inc
push
push
out
arpl
xor
js
add
pop
dec
aaa
xlat
jmp
pop
push
cmp
movsl
cmp
mov
push
cwtl
mov
and
ret
fistpl
mov
xor
jmp
aam
test
mov
lods
adc
push
mov
in
adc
adc
xlat
mov
cmp
jo
aad
push
jne
cmp
mov
cmp
dec
sbb
mov
adc
xor
cmpb
dec
cmp
mov
push
insl
sahf
mov
mov
cmp
insb
add
jne
push
lcall
sub
sub
fsubrl
out
inc
lahf
or
sbb
jg
shr
push
ss
mov
in
dec
inc
fsubs
jne
outsb
push
in
dec
push
mov
test
lods
adc
push
mov
fwait
pushf
in
xor
fstpl
lahf
in
pushf
push
jbe
mov
jmp
xor
shl
mov
cli
jl
cmp
add
cmp
es
or
lods
stos
rclb
pop
test
sub
out
into
loope
or
pop
sub
in
cmp
pop
loopne
out
mov
ds
jmp
popa
hlt
jbe
movsl
stc
dec
mov
inc
je
mov
mov
sbb
mov
adc
or
xor
sarl
lock
das
daa
xor
jl
leave
out
sbb
mov
shlb
and
pmaxub
dec
push
stc
lea
lds
jns
mov
push
mov
stc
mov
xor
pop
push
xchg
xchg
cmp
inc
mov
xchg
in
and
and
jo
cwtl
inc
movsb
pop
lods
out
jecxz
xlat
movl
and
loop
faddl
rcll
or
pop
popf
pop
pop
movsb
xlat
and
in
jl
pop
gs
sub
outsb
xlat
mov
daa
mov
lea
sub
dec
fwait
mov
push
aas
mov
mov
add
int3
push
or
jecxz
pop
sbb
cmp
mov
cmpsl
dec
sub
push
xlat
xchg
inc
sahf
stc
adc
jl
sbb
pop
arpl
adc
push
and
stc
arpl
sub
mov
add
jp
lods
mov
ja
popa
pusha
rcrl
sub
stos
outsl
or
add
movb
inc
dec
fsubrs
std
mov
sbb
mov
aad
dec
mov
jae
pop
ds
iret
test
mov
sbb
sbb
cmpsb
and
fildll
test
adc
mov
xchg
push
test
sti
or
mov
add
pushf
pop
movd
out
in
std
inc
mov
fwait
lret
or
mov
push
in
inc
pop
pop
xor
xor
lock
push
xor
movsl
mov
dec
in
aad
push
fisubrs
pop
adc
dec
dec
lret
mov
push
out
jmp
jno
scas
sub
push
std
or
pop
ja
or
jne
outsb
jns
push
sub
push
push
test
pop
jl
fildl
fnstenv
rcll
lret
xor
push
movsl
jecxz,pt
ret
adc
inc
scas
das
xor
addr16
imul
inc
sbb
pop
sbb
js
sub
cmp
lods
jle
shl
push
xor
add
inc
ja
dec
jb
arpl
adc
mov
xchg
rolb
fs
cmp
inc
sbb
inc
xchg
mov
jge
jno
mov
movsl
mov
in
push
and
sbb
fwait
mov
cmp
jmp
push
mov
sub
in
and
push
repnz
dec
fsubrl
cmp
cmp
inc
clc
sti
mov
cmp
cmp
lea
fimull
dec
icebp
dec
inc
pop
enter
fstpl
dec
push
jae
out
mov
inc
mov
inc
xor
xor
push
push
cs
sbb
cli
pop
fistl
pop
jecxz
fadd
in
sbb
jp
jmp
xor
adc
lds
sub
aas
cs
jle
inc
jnp
cmp
fstpl
inc
cmp
mov
jg
outsb
mov
mov
les
jle
adc
test
in
and
popf
in
adc
out
js
cltd
jno
pop
cltd
cwtl
insl
or
xor
mov
jno
xchg
shll
leave
insl
cld
push
clc
adc
divl
adc
data16
add
aad
lock
movsb
ljmp
push
lods
sbb
cmp
js
adc
out
add
or
cwtl
inc
imul
adc
gs
push
fldl
mov
shr
fs
int3
out
fs
ret
loop
xchg
mov
gs
push
jp
test
mov
stc
jno
mov
jge
shl
lds
push
clc
and
inc
addl
ret
imul
leave
jl
jp
mov
in
popa
adc
shl
dec
imul
arpl
sbb
hlt
or
mov
enter
cmc
sar
out
xchg
sahf
aam
jnp
fwait
cmpsb
fwait
lret
ret
adc
outsl
ficoml
sub
insb
xor
jecxz
in
xchg
mov
test
sbb
inc
lds
addr16
repz
cwtl
pop
sub
and
lock
and
adc
mov
ss
pop
dec
push
arpl
ret
or
not
inc
jge
repnz
or
sub
orb
test
imul
mov
sbb
adc
sbb
je
push
rorl
mov
orl
xor
test
mov
jmp
pusha
cmp
jle
test
and
jg
test
inc
fildl
xchg
pop
or
pop
rcrl
lods
scas
pop
xor
sarl
aas
pop
add
ja
fists
mov
lcall
movsl
ljmp
shlb
filds
test
lods
fidivl
sbb
or
jns
rclb
adc
in
mov
cmp
insb
je
xor
inc
rclb
mov
notb
fbstp
sbb
push
dec
lock
lock
jge
pop
xchg
pop
xor
imul
add
mov
mov
sbb
jbe
mov
jle
out
dec
inc
dec
dec
cmc
jecxz
cmp
pop
dec
lahf
jmp
ret
les
push
cmp
imul
mov
loop
ficompl
loop,pn
cli
fcmovu
xor
fcmovu
std
sbb
pusha
sbb
cmpsb
cmp
dec
stos
add
inc
lea
cmp
jge
pushf
push
out
jecxz
faddp
add
xchg
sarb
fdivl
mov
inc
psubd
xchg
add
jecxz
sahf
lods
xchg
cmp
sbb
and
mov
push
int
stc
push
xchg
mov
mov
mov
es
sar
xchg
adc
dec
mov
inc
out
nop
sbb
bound
and
mov
mov
stc
fs
xor
aas
adc
mov
test
mov
cmp
dec
xchg
push
cwtl
xchg
fidivrs
movsb
jg
or
mov
mov
pop
xor
clc
js
imulb
addr16
popl
cmp
std
add
test
fcmove
fwait
dec
dec
bound
das
popf
dec
repnz
fs
ss
ljmp
hlt
dec
pop
scas
or
sbb
aaa
jle
arpl
ret
push
roll
aas
add
sbb
dec
ret
mov
push
cmp
xchg
insl
scas
or
bound
fcompl
ds
mov
in
jo
pushf
adc
adc
xchg
jg
iret
fbstp
sbb
in
scas
xchg
sub
xor
jge
stos
push
jno
in
icebp
mov
dec
mov
imul
or
pop
sbb
movsl
ret
imul
sbb
sbb
and
scas
mov
push
and
hlt
test
and
test
jns
movl
inc
sahf
push
pop
and
sbb
das
fstpt
push
orl
xor
jg
or
add
popf
adc
mov
shll
sti
mov
mov
fs
sbb
ret
imul
mov
icebp
inc
add
pop
lea
sahf
and
xchg
iret
dec
pop
mov
fistpll
cs
call
shl
stc
and
pop
or
jle
mov
sbb
mov
in
pop
js
imul
js
push
iret
fmul
stos
cltd
push
jmp
mov
or
mov
data16
mov
stc
bound
add
inc
mov
cld
push
mov
pushf
icebp
cmp
insb
inc
sbb
sub
dec
aas
pop
outsl
out
sbb
daa
dec
or
push
loop
sub
popf
nop
movsl
cmp
divl
popa
sub
divb
pop
add
cmpb
dec
mov
mov
lcall
push
adc
inc
sbb
sub
dec
leave
pop
aad
push
jp
dec
xor
add
daa
xor
xor
into
repnz
fs
push
xabort
ljmp
pop
notb
push
sbb
test
sahf
sub
cmpb
push
mov
dec
out
cli
psubsb
xchg
jnp
std
jb
add
mov
and
lea
mov
cmpsl
push
in
cltd
and
push
mov
dec
shl
lods
jae
ficomps
sub
xchg
lret
lock
jmp
es
stos
stc
mov
fst
addb
subl
lds
mov
adc
daa
int3
push
cmp
bound
dec
aad
pop
rep
dec
sub
pop
jne
loopne
inc
cmp
je
dec
std
mov
xor
pop
xchg
icebp
scas
sbb
stos
call
int
test
jl
fwait
sbb
push
pop
out
sbb
fnstcw
push
add
rcll
in
adc
and
call
mov
push
jg
out
in
push
jns
mov
cmpsl
mov
pop
lock
push
mov
mov
sbb
push
inc
hlt
pop
jmp
pusha
out
dec
les
loope
add
test
repnz
mov
mov
fdivrl
fnstenv
add
cmp
mov
mov
rclb
mov
jecxz
stc
sub
mov
bound
test
add
lea
popl
pushf
mov
ja
fwait
and
inc
icebp
clc
and
gs
or
mov
and
dec
mov
mov
push
mov
inc
enter
lock
jge
mov
ffreep
sbb
adc
inc
or
mov
insl
cmp
mov
mov
add
jne
xor
cmp
stos
test
cli
inc
sbb
loop
push
cli
sahf
icebp
lret
cmc
mov
sub
add
jns
pop
data16
mov
jg
lret
rcrb
movl
dec
push
rcr
subl
add
faddl
int
jl
or
cli
mov
or
je
add
out
in
cmp
push
je
add
cltd
lahf
lcall
jo
inc
iret
movsb
movsl
into
push
push
push
out
push
push
loopne
xor
stos
out
addr16
sub
xor
fxch
enter
jnp
sub
hlt
xor
lcall
cmp
lock
adc
adc
inc
xchg
shrb
iret
dec
bound
rorl
stos
add
adc
shll
lahf
aad
pop
mov
hlt
push
xorb
subl
mov
fwait
and
loopne
dec
pop
push
mov
mov
pop
pop
mov
je
mov
push
sub
and
arpl
in
fstps
movsl
enter
pop
pushf
jo
stos
inc
cmc
lcall
movsb
cmpsb
fs
jo
mov
ljmp
pop
dec
xacquire
mov
lret
adc
loope
dec
cmpb
jns
and
ss
gs
mov
leave
push
ss
lods
adc
xchg
pop
cmp
add
xchg
push
into
in
inc
fdivrs
lock
cld
cmp
pop
push
insb
notl
pushf
rcrl
pop
test
lret
jge
jno
aad
cmp
push
dec
or
sub
lods
mov
rol
es
and
ret
outsb
fsts
inc
call
inc
pop
insl
inc
dec
adc
dec
add
std
xor
or
fisttpll
addr16
push
shl
dec
xlat
stc
xor
cmpsb
sahf
scas
jg
dec
je
aaa
cmpsl
adc
js
repnz
js
push
adc
jl
in
push
add
add
je
push
and
das
ljmp
ds
aaa
jns
ss
mov
cmp
shrb
pushf
shll
mov
es
mov
inc
jmp
lods
jo
jge
js
sub
idivb
shl
mov
mul
sub
icebp
inc
jecxz
push
je
lods
cmp
lods
pop
call
clc
or
aam
mov
pop
cmp
cli
pop
sarl
repz
repz
out
add
mov
push
sti
sahf
test
jmp
pop
fwait
sbb
jno
enter
ss
cmp
js
repnz
mov
or
cmp
sub
out
packuswb
std
pop
pushf
cli
dec
das
insb
cmp
cmp
out
sub
xchg
test
xchg
iret
fisttpll
lea
pop
or
subl
sti
xor
stc
lret
xchg
out
jle
mov
sbb
push
jbe
ljmp
xchg
xchg
shl
and
or
out
outsl
iret
loope
xor
jl
sub
jae
mov
stc
add
and
scas
jl
sbbb
sub
andb
arpl
mov
mov
rclb
push
test
add
jnp,pt
dec
dec
sub
xchg
mov
add
adcl
mov
shl
test
negl
lret
fcmovnbe
push
fs
xorb
les
mov
cmp
or
pop
pop
hlt
adc
aas
adc
jne
inc
sbb
mov
pusha
mov
pop
dec
jle
cmp
fistps
outsl
inc
aad
repz
jmp
and
das
or
loope
xor
dec
pop
jle
sbb
jge
xchg
xor
adc
stc
pop
rcrl
push
shll
inc
cmp
repz
jmp
inc
dec
mov
pop
icebp
fisttpl
repnz
push
fstp
and
lret
repz
enter
imul
test
lods
shr
pop
jp
adc
inc
mov
mov
aad
sub
dec
push
jns
sbb
pop
fsubrs
imul
dec
lcall
scas
scas
mov
push
jne
sub
out
std
mov
mov
dec
lods
and
loop
xor
test
cwtl
ss
mov
and
fsubs
mov
shr
jmp
loop
inc
dec
divl
pop
nop
fldt
adc
sbb
stc
lods
popa
dec
push
test
push
mov
mov
jecxz
jge
cmp
push
mov
test
xchg
sahf
or
sahf
or
cld
push
in
push
mov
lea
dec
repz
popl
and
jp
cwtl
arpl
adcb
cli
inc
sub
pop
push
and
jl
xor
jmp
mov
sbb
push
insl
popa
orb
je
std
call
popf
sub
mov
cs
jg
fucom
mov
push
aaa
and
je
push
sbb
xor
mov
push
xor
sbb
and
stos
cmp
xchg
push
mov
and
fsubrl
lods
js
fs
out
dec
scas
push
je
js
imul
aas
das
dec
inc
sub
jae
andb
inc
sbb
adc
in
repnz
or
cmp
out
sbb
mov
mov
or
and
outsl
ljmp
cld
into
push
sub
push
cmc
leave
jp
dec
shlb
cmp
hlt
xchg
decb
repz
cmpsl
cmp
lret
or
mov
xor
mov
gs
stc
xchg
loop
hlt
shll
or
gs
push
ds
sbb
lea
in
std
scas
jge
addb
cmc
dec
stc
sbb
add
mov
leave
sti
das
imul
outsb
lahf
ja
gs
cwtl
jbe
enter
loopne
jns
adc
clc
cs
inc
fwait
push
push
dec
sub
dec
clc
xor
mov
xchg
pop
push
jno
cmp
dec
addb
mov
or
int
sarl
negl
push
leave
test
jecxz
adc
inc
jge
pop
mov
iret
mov
test
or
xchg
int3
xchg
xor
cmp
lcall
inc
add
mov
jl
cwtl
seta
fiaddl
decb
sub
adc
sahf
mov
pop
or
fistpll
rclb
mov
mov
movl
add
jg
dec
mov
jmp
lea
sbb
repz
pop
mov
iret
sahf
into
cmp
dec
mov
mov
jg
lea
in
iret
push
sub
mov
imul
hlt
and
bound
sub
push
out
inc
sbb
add
pop
pop
inc
jnp
mov
in
xor
push
test
or
pop
repnz
jle
mov
mov
cmp
jnp
lods
daa
mov
das
cmpsl
dec
arpl
lret
inc
pop
mov
jno
mov
jle
pop
aas
pop
mov
xchg
pop
inc
add
mov
repz
sbbb
dec
ss
mov
cmp
lret
ret
psrlw
inc
xchg
daa
jne
repz
mov
loopw
fidivl
push
cmpsl
fwait
mov
cmp
xor
cwtl
mov
mov
mov
test
sahf
test
jb
shlb
lods
pop
mov
push
test
sub
adc
fstpl
insb
call
dec
roll
push
dec
shll
insb
or
dec
incb
and
sub
daa
mov
cmp
cs
out
int3
test
mov
into
pop
mov
xchg
adc
sbb
add
nop
mov
repnz
pop
cld
clc
lahf
pop
jle
lea
cmp
and
xchg
fnsave
fmull
mov
push
pop
insb
add
ljmp
fs
ss
shlb
js
roll
push
fmul
dec
movsb
popf
ljmp
inc
in
outsb
sahf
mov
ljmp
jecxz
mov
xchg
imul
push
inc
bound
fdivl
arpl
ljmp
sbb
lahf
test
cmp
out
imul
out
dec
pusha
jmp
jne
dec
and
sub
push
mov
aaa
arpl
xchg
cltd
push
scas
mov
or
mov
icebp
lret
push
adc
aaa
push
popf
lret
cwtl
or
aas
sti
dec
sbb
lret
inc
mov
push
mov
rcll
rolb
mov
lods
pushf
test
and
or
addr16
mov
sar
sahf
aad
sub
adc
push
pop
std
adc
icebp
and
out
cli
arpl
repz
push
cs
mov
scas
fbld
mov
xchg
dec
orl
cld
sbb
push
push
lahf
ss
sbb
insb
pushw
push
pop
fdivrs
test
out
cmp
daa
jl
adc
mov
mov
and
nop
call
mov
int3
sbb
xchg
lock
outsb
cmpb
lds
add
xchg
xchg
mov
aaa
mov
xchg
push
mov
cmpsb
pop
imul
pop
das
bound
loope
imulb
test
aad
scas
iret
sub
cmpsl
subb
mov
cs
iret
pop
fsubl
cmpxchg
mov
cwtl
ja
mov
test
fmull
dec
xchg
lahf
popa
cwtl
mov
push
pop
xor
dec
in
rcr
in
xchg
xchg
cmc
int3
mov
push
inc
dec
les
cwtl
xor
mov
pop
addl
les
mov
pop
fiaddl
add
iret
pop
inc
ljmp
add
and
jle
repnz
je
or
add
jnp
out
mov
faddl
test
xor
lods
xchg
mov
adc
out
test
pushf
push
jl
jo
sbb
imul
and
arpl
fildl
adc
addl
aad
sbb
test
push
add
xchg
cmp
sti
inc
xchg
fildl
or
les
aam
xor
push
jns
cmpsb
lahf
cmp
pop
sbb
loope
or
in
sub
push
cli
daa
xor
out
push
outsb
xor
mov
jg
ja
xor
addl
inc
out
mov
and
mov
movsb
mov
mov
add
incl
jle
repnz
decb
ret
mov
shrl
push
inc
dec
nop
and
ficoms
dec
sbb
pop
hlt
ja
xlat
add
fsubl
mov
push
jmp
jge
sbb
xchg
inc
inc
test
mov
mov
inc
mov
mov
das
sarb
pop
pop
cmp
aad
sub
xlat
mov
aas
add
in
loop
mov
mov
inc
mov
pop
sarl
in
sahf
mov
xchg
dec
cs
fiaddl
loopne
xchg
pop
inc
in
xchg
sub
das
clc
sub
mov
inc
sbb
sub
leave
std
pop
popa
and
arpl
mov
inc
or
and
jl
mov
test
arpl
jae
jp
fists
divl
push
jle
xchg
int
mov
lods
sub
cs
leave
inc
es
hlt
popf
mov
and
sti
xchg
imul
out
adc
dec
dec
xor
fnstsw
jp
incl
aas
idiv
mov
mov
repz
fldt
dec
imul
ds
andb
mov
fnstenv
push
insb
arpl
mov
mov
or
xor
mov
arpl
arpl
cmpsb
xor
stos
scas
push
add
mov
in
pop
sbb
xor
or
cmp
int
jns
popf
dec
insb
aad
inc
dec
mull
movsl
movsl
xchg
push
lds
dec
pusha
repz
push
mov
sbb
scas
ja
push
loope
cli
xlat
jno
mov
mov
xlat
aaa
outsl
pop
imul
pop
sub
clc
out
sbb
stos
movsb
sub
out
fcomp
out
push
push
cld
or
mov
mov
fstpt
idivl
add
xchg
sbb
lods
test
cld
scas
shll
adc
gs
jmp
and
pop
sahf
push
in
subl
adc
es
jmp
out
cmpsl
add
cwtl
mov
inc
or
pop
enter
repz
adc
mov
dec
popf
inc
mov
divb
mov
xchg
mov
xor
sbb
in
ret
call
sub
jp
outsb
pop
jl
ficoms
leave
lods
mov
imul
push
ds
push
orb
sbb
enter
pushf
jno
fwait
ja
pop
jge
movsl
pop
xchg
push
test
out
in
popl
pushf
mov
addb
clc
mov
pop
or
cs
ja
gs
addr16
lret
inc
xchg
mov
fadds
push
loopne
ret
sub
ds
daa
call
into
mov
mov
push
jge
cmp
xor
dec
adc
jbe
stos
nop
inc
lea
cmc
in
jae
leave
cmp
mov
cmpsb
into
fs
sub
jb
sbb
loope
or
jbe
cmp
out
jl
pop
sub
cmp
pop
push
outsb
push
imul
ret
insl
test
jle
adcl
push
and
or
ss
cmp
int3
test
ds
mov
xchg
cs
ds
cmp
sub
dec
push
mov
enterw
jo
in
xchg
out
sahf
movsl
repnz
or
ret
lea
push
addr16
push
adc
pop
and
pop
mov
mov
and
xchg
fs
mov
push
loop
test
cwtl
mov
rcll
daa
sub
mov
aaa
ficomps
inc
inc
push
int3
or
lret
es
mov
push
or
sub
jp
mov
andl
insb
lret
mov
repz
pop
div
out
dec
scas
push
push
int
pop
testl
adc
xor
and
leave
inc
icebp
stos
add
idivb
pop
mov
ficoml
lock
jbe
dec
pop
adc
movaps
inc
call
mov
imul
ja
les
mov
xchg
mov
or
ficoms
data16
push
mov
jmp
sarl
dec
lds
pushf
loope
sarl
stos
jg
lods
ljmp
in
fcomps
iret
sbb
imul
lret
xor
ficoml
mov
mov
popf
adc
shll
popa
pop
cmp
adc
lahf
and
call
out
outsb
cli
fdivrl
in
xchg
xchg
out
out
popa
movl
xor
scas
cmp
mov
xchg
sub
mov
repnz
test
jo
rol
scas
insl
push
cmp
sub
ret
mov
push
insb
add
xorps
xchg
adc
pushf
scas
mov
cmp
add
adc
jp
mov
mov
jno
popf
push
xor
xor
ja
loop
std
mov
dec
arpl
pop
push
or
xchg
stc
xchg
push
cld
xor
out
dec
push
sbb
insl
mov
add
insl
movb
sbb
inc
scas
andb
mov
addr16
add
imul
fmul
cld
popf
fdiv
and
sbb
test
inc
push
test
cltd
dec
dec
pop
mov
sub
jge
mov
xchg
sbb
mov
jmp
or
lret
cmp
sub
das
inc
shll
ds
add
arpl
ret
lret
sub
movsb
sub
into
hlt
aaa
mov
dec
push
insb
scas
add
mov
adc
in
and
xchg
in
mov
push
or
xor
adc
stos
xor
xchg
outsl
pcmpeqw
mov
bound
mov
inc
mov
or
aaa
xchg
inc
dec
test
jbe
dec
in
cmp
orl
push
ficompl
adc
sbb
and
in
xchg
mov
imul
imul
outsl
jle
call
ja
jg
mov
dec
xchg
dec
rorl
lods
stos
jae
sub
in
dec
hlt
mov
cmp
cmp
stos
test
mov
add
sub
push
adc
in
ret
imul
mov
bound
sbbl
inc
shrd
nop
pop
sahf
mov
rcrb
imul
loopne
jns
fbld
in
mov
xor
sbb
sbb
lea
lcall
xchg
pop
dec
mov
les
psubd
loop,pt
rclb
addr16
mov
jno
mov
loop
loop
push
ret
pop
in
out
int3
mov
fsubrl
das
idivl
xchg
je
xchg
into
repnz
add
mov
dec
lods
or
jns
icebp
in
or
jne
cmp
icebp
jecxz
mov
es
shlb
jle
stos
js
or
dec
test
adc
sub
push
pop
pushf
or
add
xchg
iret
out
xor
mov
into
hlt
adc
js
pop
dec
xor
insl
mov
or
pop
movb
dec
stos
imul
jae
ret
fcompl
cmp
aas
inc
jl
fiadds
aam
mov
push
test
sbbb
mov
insl
xchg
imul
push
push
mov
ret
add
add
jmp
inc
and
jl
popa
add
dec
lcall
push
lods
dec
sbb
cmp
jns
sbb
xor
mov
cmp
ljmp
cmp
sub
shll
mov
cmpsb
leave
ss
xchg
fstpl
pop
sub
xor
pop
dec
sti
ret
fs
pop
xchg
pop
jne
popf
adc
mov
decb
icebp
sbb
mov
outsb
pop
js
cmp
cmp
xchg
push
push
jg
dec
outsl
or
push
mov
jp
inc
test
rcrb
daa
mov
adc
fidivrs
cmp
rcll
xchg
xor
push
ret
fcomps
xor
cmp
xlat
aam
mov
mov
mov
xor
into
aas
in
adc
cmp
xor
outsb
dec
jl
pop
stc
shll
es
shl
push
lea
jbe
mov
cmpsl
sahf
std
mov
push
xchg
mov
push
pop
add
jns
jp
sub
inc
or
movsl
pop
clc
cmp
aas
icebp
or
es
mov
gs
pop
outsl
mov
and
mov
jp
and
or
pop
jbe
mov
stos
mov
repz
pop
pop
jg
sahf
sbb
pcmpgtd
lea
mov
or
cmp
jbe
outsb
pop
or
sub
icebp
mov
cmpsl
aam
movsl
or
imul
mov
movzbl
xchg
les
sub
push
add
xchg
or
mov
jne
fistl
lods
pusha
push
test
popl
rcrb
xchg
pop
fdivl
push
int
into
sub
loopne
mov
cmpsl
jle
ja
sbb
cld
dec
sub
stc
inc
movsb
adc
cmpsl
pop
arpl
mov
xor
mov
lods
and
sbb
stc
in
and
das
pusha
les
adc
or
mov
lcall
add
test
jg
adc
jl
test
cs
hlt
mov
inc
jnp
mov
jbe
pop
fcoml
mov
and
shr
adc
mov
push
mov
cmpsl
cmp
sbb
push
leave
repnz
or
adc
xchg
cmp
mov
out
pop
dec
adc
testl
push
fcom
pop
add
xlat
fldt
jmp
enter
int3
jb
mov
push
aad
stos
pop
icebp
jl
data16
add
jg
mov
adc
lea
push
pop
enter
pop
push
push
add
pop
imull
jp
fwait
cmpb
mov
dec
xlat
loope
js
xchg
jg
sar
movsb
xchg
adc
fcmovbe
dec
mov
pop
sbb
pop
mov
dec
test
sub
fs
int3
mov
cmp
jo
mov
sbbl
adc
lods
jnp
lods
ret
dec
mov
movsl
jo
dec
sbb
xchg
sbb
fcompl
mov
in
repz
sub
and
dec
outsb
movsb
jb
jl
je
xchg
sub
imul
sarb
lods
inc
inc
outsb
rcrl
pop
clc
outsl
sbb
fcoms
aaa
pop
lret
push
jmp
andb
scas
leave
push
sub
mov
sbb
lcall
jbe
jb
addl
sbb
pop
scas
iret
xchg
stos
idiv
icebp
sbb
hlt
xlat
into
js
stos
pop
popf
cmp
in
and
pop
filds
repz
xchg
and
sbb
pop
lock
dec
or
ss
insl
lea
popa
jecxz
filds
incb
sahf
flds
imul
std
stos
mov
add
lret
movsl
addr16
addr16
cmp
bound
xchg
lcall
inc
testl
dec
inc
lds
dec
dec
sbb
stc
adc
xor
lret
sbb
and
test
push
cmp
add
xchg
cwtl
lret
sub
push
addr16
add
inc
out
imul
lock
test
cltd
jns
push
insl
lods
aas
add
mov
jbe
out
xor
inc
fdivs
sbb
pushf
lea
mov
mov
or
test
call
fidivs
js
aas
and
sbb
jno
add
add
jecxz
add
pushf
notb
gs
ljmp
insl
fstpt
cmpb
push
mov
and
add
hlt
pop
sbb
bound
mov
jmp
inc
and
push
sub
inc
xor
ja
in
pop
mov
lods
or
sti
push
cmp
out
xchg
int
xchg
inc
push
jns
mov
mov
sbb
roll
adc
ror
jge
xor
repz
jmp
outsl
mov
into
scas
dec
ja
out
shrl
mov
data16
fisttpll
ret
outsb
je
cmp
inc
or
test
gs
aam
sbb
mov
fmulp
push
mov
in
pop
push
mov
and
addr16
movsl
mov
frstor
xchg
and
dec
in
pop
sbb
addr16
and
push
movsl
hlt
fbld
inc
lds
adc
loopne
aad
push
mov
dec
mov
xchg
jbe
cltd
in
vprotq
dec
das
dec
adc
xlat
push
stc
test
clc
insl
in
sahf
aaa
mov
ja
xchg
sbb
je
es
sbb
outsl
repnz
pop
xor
sub
mov
in
sbb
es
xchg
mov
xor
enter
jl
mov
dec
nop
or
jne
fscale
and
ret
fldt
in
pop
lods
jb
adc
std
xlat
jbe
rcr
fisttpll
imul
mov
pop
pop
sub
stc
push
push
cwtl
adc
adc
neg
jp
xchg
fs
cmpl
mov
sub
xchg
ret
call
test
cmpsl
pushf
sbb
adc
sub
iret
hlt
xchg
mov
das
nop
add
jmp
movsl
push
pop
pop
sbb
pop
xor
push
jnp
inc
push
sub
mov
sub
xlat
lret
pop
xor
lret
dec
mov
lret
in
insl
push
lret
xchg
or
in
mov
leave
data16
test
gs
test
add
sub
lret
pop
sub
adc
mov
rorl
or
outsl
call
daa
mov
cmc
jns
aaa
scas
popf
ja
subb
jle
rcll
negl
mov
xlat
pop
test
push
inc
stos
jg
xor
lods
loop
and
mov
adcl
test
mov
gs
test
pop
leave
fwait
or
lods
test
dec
jbe
push
enter
dec
xchg
pop
enter
push
pop
in
movsb
dec
hlt
or
lods
mov
or
mov
xor
pop
inc
sbb
out
xor
xchg
mov
adc
and
imul
push
and
xor
add
mov
lods
iret
test
pusha
cs
push
mov
divb
sbb
in
xor
mov
adc
jbe
push
cmp
in
mov
fsubp
and
sbb
sbb
outsl
xor
jnp
sbb
mov
jle
pop
and
lods
mov
jnp
lea
jmp
std
out
pushl
fmull
loopne
jb
dec
mov
outsb
decb
push
fisttpll
adc
lret
xor
inc
dec
pop
lret
por
mov
xchg
int3
jg
lock
dec
shlb
rclb
pop
mov
adc
mov
pop
loope
sub
xchg
loop
and
sbb
dec
into
outsl
xchg
movsl
mov
jp
dec
adc
pop
jae
sbb
clc
outsb
cmp
add
pop
fs
test
xlat
neg
and
stos
movsb
xchg
push
filds
aam
mov
imul
stc
jl
push
push
jae
mov
dec
cmp
jbe
dec
cmp
lds
pop
sub
cwtl
stos
add
insl
cmpsl
mov
stos
dec
lea
mov
rcr
fs
push
loop
ljmp
sbb
sub
mov
sub
inc
mov
sub
mov
lea
or
xor
adc
adc
fs
jecxz
mov
jb
sbb
push
imul
sarb
int3
sbb
sbb
cmp
adc
push
hlt
incb
adc
fildll
ja
lods
jae
xor
jne
scas
and
lods
mov
pop
rcll
pop
stos
scas
fnstcw
add
inc
and
and
add
inc
jnp
cmpsl
sub
xchg
or
shlb
or
sub
fiadds
ret
mov
xorb
fadd
movsb
xchg
jb
arpl
adc
shlb
xor
mov
out
cld
mov
cmp
fildl
sbb
stos
dec
cmp
lods
nop
mov
mov
ljmp
xchg
mov
sub
ret
jp
pop
push
int3
test
stc
push
fidivl
add
dec
xchg
or
and
jle
jb
fld
lods
cmp
aas
xchg
in
xchg
jb
add
inc
or
dec
jno
xchg
jns
mov
cltd
test
push
in
sub
lods
sub
pop
cmp
jns
jae
cltd
add
xchg
fsubr
push
jmp
in
fadds
sbb
pop
addr16
jl
sbb
push
xor
outsb
add
mov
icebp
xor
ret
jns
into
dec
cltd
push
jg
pop
mov
adc
ss
aas
push
cmc
adc
xchg
xlat
lret
mov
sbb
repz
mov
or
stos
imul
xchg
cwtl
mov
dec
aas
mov
fstpl
jmp
sub
test
or
pop
aam
jl
push
imul
andl
mov
es
rol
fs
sbb
inc
mov
inc
stc
mull
push
fistps
jnp
ror
sub
lret
cmp
sbb
add
sub
jecxz
mull
mov
subl
mov
test
cmp
popf
cmp
test
mov
cmp
je
xor
out
es
into
fwait
push
jbe
inc
sbbl
shll
jge
inc
push
scas
inc
clc
pushf
popf
adcl
je
js
sub
fdivrl
jecxz
cmpsb
hlt
call
lods
xchg
dec
jmp
jb
insb
mov
dec
cmpsl
xchg
or
into
adc
shr
jbe
adc
sub
jg
repnz
or
dec
popa
sub
push
pushl
ljmp
lods
scas
hlt
inc
pop
pop
adc
and
pushf
push
pop
cmpsb
cmp
popa
dec
push
divl
andl
mov
pop
test
jmp
mov
sbb
shlb
sbb
push
popf
insl
xchg
sbb
sub
pop
arpl
lods
and
cltd
jns
xchg
xchg
jbe
in
jae
mov
out
test
xor
inc
outsb
sub
loope
jns
or
iret
and
insb
enter
in
xchg
call
pop
scas
aas
add
fmuls
hlt
inc
and
gs
sub
ret
cs
in
jae
enter
inc
sbb
pop
setnp
pop
negl
cltd
dec
in
adc
imul
push
push
pop
fwait
lret
pop
ljmp
sbbl
pop
lods
adc
xor
add
mov
inc
call
pusha
daa
or
pop
fdivs
sub
and
lcall
out
or
cld
dec
inc
cmc
ljmp
mov
and
lods
jb
xor
out
sub
sbb
jp
cld
push
sub
imul
dec
mov
mov
jmp
out
loope
daa
jg
lea
sbb
pop
sbb
out
jnp
decb
xchg
add
cmpsb
lea
mov
ljmp
movsl
loope
sub
pop
hlt
add
dec
jae
popa
andl
xchg
shlb
and
inc
jle
dec
loopne
in
imul
sbb
xor
ret
and
inc
inc
popf
or
mov
and
xchg
and
fstl
adc
pushf
mov
dec
hlt
les
and
clc
pop
pop
enter
inc
jbe
add
xchg
sbb
rcrl
loop
inc
insl
inc
scas
pop
push
out
xor
sub
xor
mov
adc
or
and
cmp
jle
repnz
xchg
das
sti
andl
or
sub
stc
sub
push
inc
ljmp
test
lods
sbb
aaa
std
fldenv
imul
push
lahf
mov
pushf
nop
mov
sbb
imulb
movsb
jp
and
lds
icebp
out
cmp
and
mov
sbb
aas
test
pop
movsb
mov
push
outsl
js
nop
push
fstp
mov
dec
je
sbb
pop
sub
pop
mov
and
mov
mov
std
dec
pushf
test
add
sub
cmp
push
xor
data16
js
int3
inc
cltd
popf
aas
push
xor
outsl
jmp
mov
test
push
outsl
xlat
pop
push
pop
push
sub
lods
in
clc
xlat
and
and
jbe
jmp
mov
cmp
lcall
inc
add
pop
mov
push
pop
repz
and
jb
mov
and
mov
ja
pop
cmp
push
iret
mov
mov
ror
iret
pushf
cmpsl
test
scas
test
jbe
arpl
or
incl
popa
leave
popf
push
es
mov
std
iret
xor
pop
dec
mov
add
call
pop
mov
in
xchg
iret
push
leave
lret
sti
xor
xchg
pop
cmpsb
cmp
push
loopne
mov
fsubrl
or
xor
adc
clc
insl
push
inc
pop
aam
stos
or
ja
ljmp
jg
out
into
mov
sbb
lods
mov
int
jne
mov
pop
add
cwtl
data16
inc
movsl
cmpl
pop
bound
icebp
mov
dec
in
dec
sbb
gs
shl
orb
inc
push
sbb
pop
xor
sub
push
rcrl
es
jmp
cmp
xchg
xchg
mov
mov
sub
and
out
test
dec
sbb
jge
jp
fs
lock
xchg
mov
jecxz
aaa
jmp
test
test
xchg
or
and
insb
gs
xlat
jmp
pop
inc
int
or
shl
lock
pusha
repz
into
push
or
mov
hlt
mov
inc
fsts
js
pop
rorl
dec
xlat
lahf
ffree
jecxz
incb
mov
dec
sub
pop
xor
into
ds
clc
aaa
lods
inc
lods
cld
dec
pop
mov
stos
lods
push
out
dec
cmp
ret
rclb
lcall
jl
or
sbb
test
jp
in
cmpsl
cmp
sbb
xchg
vpcmov
stos
out
mov
push
jns
xchg
inc
mov
cmp
outsl
gs
sti
enter
out
sbb
enter
sub
loopne
imul
push
popa
add
or
rcll
frstor
popa
sahf
mov
pop
jp
or
pop
dec
in
imul
leave
jne
jle
fisttpll
es
or
dec
movsl
es
ds
push
jns
shlb
aas
mov
jno
dec
mov
fadd
pop
std
and
adc
lret
fsts
sar
jg
cld
inc
push
inc
sub
mov
xchg
push
ljmp
mov
imul
inc
push
int3
dec
inc
aam
cmp
cmpsl
cmp
xchg
aad
add
sbb
scas
cli
sbb
loop
jbe
stos
cld
push
sahf
iret
stc
ljmp
mov
orb
sub
mov
mov
mov
mov
mov
pop
pushf
push
push
lret
out
fs
mov
and
mov
mov
lret
pop
iret
inc
addr16
sti
xorb
aam
jmp
lea
xchg
dec
sbb
inc
jmp
push
std
lods
push
adc
adc
xchg
xchg
je
cmp
and
rorb
scas
mov
aam
stos
int
inc
mov
or
cmp
aas
push
mov
dec
cmp
cld
lods
mov
xchg
sti
jnp
mov
jl
dec
mov
lea
stos
xchg
and
pop
add
pop
mov
xchg
cmp
mov
pop
xchg
mov
sub
sbb
and
add
das
inc
jbe
lock
cmp
sub
out
lea
sub
dec
mov
dec
outsb
imul
inc
and
pop
mov
sbb
jae
dec
jl
clc
ret
inc
stc
mov
sbb
inc
rcrb
pusha
mov
sbb
dec
mov
les
push
data16
inc
inc
lret
lahf
xor
xchg
and
lret
push
xchg
xor
lea
rcll
cs
dec
mov
xchg
insb
dec
scas
cmp
loopne
xchg
out
pop
pop
or
imul
pop
je
or
mov
lea
mov
pop
add
insb
fmuls
pop
out
in
pop
cmp
jnp
aam
mov
dec
in
xchg
ds
popf
leave
mov
into
adc
out
inc
add
ret
gs
dec
outsb
in
pcmpgtw
push
xorl
push
adcb
lea
shrb
jle
mov
mov
push
into
or
cld
in
pusha
push
inc
xchg
and
cmp
cmpsb
dec
lret
dec
pop
rcr
xchg
out
insb
inc
out
dec
jno
xchg
push
sub
divb
out
testb
ss
sahf
inc
mov
addr16
sahf
imul
mov
cmc
cmpb
sti
scas
mov
jno
and
jmp
cltd
xor
jp
lds
adc
dec
cltd
xchg
mov
into
rorl
gs
out
or
jge
mov
mov
shll
scas
or
mov
push
dec
lods
cs
inc
jmp
sub
in
lcall
aas
outsb
pop
sbb
pusha
and
filds
fstl
mov
call
stos
ret
sbb
loopne
aad
pop
lods
ja
mov
sahf
mov
xor
imul
jle
out
data16
rclb
jo
fstps
aam
push
jns
mov
jecxz,pn
scas
inc
dec
adc
jno
aaa
adc
cmp
inc
or
mov
pop
cld
sahf
les
das
repnz
xchg
frstor
add
push
int
add
mov
fwait
imul
cmp
int
enter
popf
add
mov
dec
or
sti
fwait
xor
stos
lods
ficoml
or
lret
add
arpl
rol
les
inc
push
xchg
mov
cs
jle
pop
pop
aam
push
mov
mov
fiaddl
es
mov
bound
mov
negl
adc
push
or
adc
pop
sbb
in
lea
and
test
cli
dec
sbb
movsb
jle
sbb
aad
sub
scas
jmp
mov
ficomps
sarb
pop
push
test
xor
test
outsl
shlb
xchg
adc
add
lcall
sahf
jb
cmp
pop
jge
add
mov
stos
orl
lock
cmpsb
fnstcw
ja
inc
out
xchg
cmpb
sub
das
sbb
dec
mov
fcmovne
int
adc
test
and
popf
sarl
stc
popf
ret
xchg
dec
into
cmc
hlt
cmpsb
out
pop
and
jg
jge
mov
outsb
decb
jbe
shll
mov
insb
repz
xchg
and
pushf
out
mov
dec
loopne
clc
xchg
mov
inc
subl
adc
jns
mov
and
ficompl
mov
or
push
popf
dec
inc
mov
xlat
push
pop
jl
out
sahf
fincstp
mov
jge
stos
fiadds
imul
shll
imul
mov
mov
push
xor
popa
or
push
mov
push
mov
fsts
movsb
jmp
mov
loop
mov
ljmp
add
into
sbb
test
out
sbb
aaa
repz
loopne
sbb
xchg
repz
mov
imul
stc
sbb
lret
push
pop
cmpsl
and
mov
fcmovnb
adc
push
cmp
and
inc
cwtl
loopne
jnp
cmp
popa
outsb
xchg
cmpsl
push
xor
ss
cmp
jl
pushf
test
fistpl
mov
orb
nop
mov
and
mov
sub
lods
mov
test
push
xchg
cmp
cmpb
test
push
insb
loopne
leave
mov
ds
sahf
cwtl
jmp
or
fisubs
js
cld
dec
mov
call
mov
cmp
xor
jb
loop
outsl
pop
inc
lcall
pop
insl
jb
out
das
fwait
and
adc
jbe,pn
cmp
out
xchg
sub
mov
aam
cmp
ljmp
fs
daa
movsl
jb,pn
outsl
xchg
lock
mov
lods
adc
std
jo
pop
mov
sbb
pop
jg
push
aas
dec
jnp
or
out
inc
cmc
adc
push
neg
sahf
fdiv
mov
or
xor
rorb
lods
icebp
and
dec
out
sarb
dec
or
cmp
add
push
or
cmc
ret
icebp
add
sub
mov
cmp
xor
jl
push
cwtl
lcall
out
pusha
das
sti
mov
xor
and
cmp
stos
or
pop
add
mov
xchg
sbb
jl
lds
subb
push
test
pop
dec
xchg
test
add
int3
sbb
pop
imul
ss
push
mov
mov
dec
lods
insl
xor
mul
popa
sub
popa
add
test
dec
sbb
out
pop
es
out
push
fwait
xchg
icebp
test
sahf
popl
int
insl
jno
hlt
fdivs
mov
lds
jbe
lcall
mov
xor
test
aam
dec
pop
imul
inc
xchg
lret
lahf
xor
sti
clc
loop
data16
jb
dec
mov
sub
or
rcl
xor
jae
inc
inc
cmpsb
jne
test
imul
jg
test
stc
push
repnz
mov
adc
and
mov
repnz
mov
sbb
stos
xchg
xchg
lar
lea
jno
mov
fs
leave
pop
daa
sbb
enter
scas
sbb
or
in
ljmp
mov
push
mov
xchg
iret
inc
push
bound
xchg
cmp
and
pop
cmp
lds
sub
mov
sub
push
sbb
les
lcall
scas
andps
clc
jno
cld
out
pushf
cmp
leave
shll
mov
jns
jl
lret
push
cmp
dec
mov
jo
mov
jp
sahf
xorb
jb
mov
mov
daa
insb
adc
cmp
add
sub
fs
mov
lret
enter
inc
addl
cmp
icebp
xor
and
daa
mov
gs
rcl
add
inc
shl
out
jno
sub
sub
idiv
lods
pop
and
in
insb
stc
shl
scas
push
bound
pop
jecxz
scas
aaa
jne
xchg
inc
ss
or
add
scas
insb
lcall
cmpsb
cmp
ds
cmp
lock
xchg
movsb
test
fldcw
jge
popf
cmpsb
inc
mov
mov
dec
test
ret
sbb
dec
push
xchg
xor
pop
or
rcl
ror
add
or
lock
call
push
pop
xor
popf
aaa
mov
inc
shrl
jmp
mov
mov
push
addl
sbb
sbb
pop
xchg
lods
push
cmpb
or
rcll
inc
repz
mov
inc
fidivrs
in
xor
lds
fdivp
movsb
stc
add
mov
pushf
mov
outsb
lods
mov
xchg
sub
mov
cmc
andnps
outsb
inc
out
xor
out
xor
popl
dec
jg
andb
xor
mov
pop
fadd
push
pop
mov
out
sbb
adc
popf
mov
rol
jne
movsl
sub
inc
mov
mov
add
cltd
xor
inc
xor
cmpsl
sbb
or
imul
lea
adc
jo
sub
mov
test
jp
sbb
and
pop
les
sbb
cmp
cld
outsb
out
lret
outsl
aas
pop
ja
xor
or
insb
mov
sub
cmp
das
enter
aaa
cmp
repnz
sbb
leave
movsl
in
xlat
ljmp
inc
mov
inc
push
jl
jecxz,pn
cmp
ja
mov
insl
pop
mov
push
test
ja
push
enter
push
lcall
cmp
mov
mov
js
mov
into
xchg
lret
gs
sbb
cltd
pop
sbb
testl
aas
xchg
xorb
rol
shrl
push
int3
cmp
aam
add
inc
pop
push
push
sahf
adc
cmp
push
repz
setge
push
adc
add
test
cmp
pusha
or
cwtl
dec
repnz
add
jo
pop
aam
push
out
sti
scas
in
add
dec
push
inc
scas
xor
addr16
loop
mov
cs
lcall
rcll
mov
mov
int3
jnp
in
or
out
sbb
sub
sub
fsubp
cmpsl
daa
notb
rcl
sahf
addr16
push
cmp
jl
sub
in
xor
xchg
in
outsb
cmp
jbe
mov
xchg
or
sub
pop
inc
mov
push
test
mov
and
dec
cli
adc
mov
mov
arpl
fs
sbb
subl
push
lds
mov
and
ss
xor
inc
xor
and
ja
faddl
jecxz
movsl
or
sub
adc
inc
fwait
cld
icebp
gs
dec
rcrb
shll
pushl
clc
out
scas
dec
filds
sbb
arpl
jg
adc
mov
sbb
test
adc
js
loopne
or
cmpsl
lret
and
pop
or
jno
jle
arpl
cmp
and
aad
inc
ds
lods
out
sti
je
adc
mov
movsl
cld
jb
int3
pop
jnp
jmp
je
fs
adc
lea
call
mov
shlb
push
sub
adc
shll
in
fcoms
mov
and
push
mov
mov
mov
dec
shr
cmc
ljmp
push
and
xchg
mov
cs
add
imull
adc
test
je
test
mov
aad
push
imulb
pop
rcll
ret
outsl
subb
arpl
mov
jp
mov
idivl
add
sbb
cli
jg
push
loope
popf
clc
ficomps
or
xchg
inc
jo
jp
sub
jecxz
ss
movsb
xor
dec
iret
in
ja
dec
add
movsb
mov
repz
or
or
xchg
adc
stos
stos
and
test
lods
cmp
aad
cmp
rclb
cmpsl
scas
xchg
inc
sbb
rcl
and
cmp
lea
mov
sbb
ss
in
xor
addr16
pop
sbb
fsubl
mov
add
sub
jge
int3
ret
repz
rclb
pop
push
fisubrs
xor
adc
mov
mov
clc
pop
out
cmp
fdivl
sar
ret
dec
dec
mov
cwtl
dec
lock
inc
push
into
inc
repz
adc
mov
mov
pop
out
and
mov
mov
mov
add
jle
cwtl
fs
pop
xchg
pop
jb
sbb
js
push
dec
mov
divl
icebp
dec
rorl
jbe
idivl
aas
aas
push
popa
adc
push
push
xlat
enter
enter
add
xchg
in
movsb
aas
sbb
mov
ss
sub
outsl
push
dec
cmp
test
sub
iret
sub
xorb
aam
mov
insb
push
add
aam
jae
mov
mov
rclb
dec
mov
push
xor
xor
jno
mov
push
and
jg
pop
inc
xor
jns
mov
data16
adc
mov
sbb
out
cmp
xor
jge
ret
push
and
pop
dec
pop
or
or
cwtl
dec
xor
xor
in
mov
daa
push
cmp
ljmp
xchg
sbb
repnz
jnp
push
mov
repnz
jae
cmp
pop
sbb
inc
pop
into
test
xor
or
rcll
push
ret
ret
sbb
testb
sbb
daa
fcomps
ja
jp
je
sub
out
enter
pusha
icebp
iret
das
nop
orl
fucomi
sbb
pop
mov
jp
pop
aas
movsl
sub
repnz
cmp
daa
sub
idivl
addl
or
cmc
inc
outsl
popf
dec
jmp
add
out
add
lods
imul
popf
incb
cmp
testl
push
sbb
xchg
mov
push
sar
pop
arpl
fdivs
push
adc
push
push
fldenv
xchg
dec
pop
cmc
or
xor
mov
je
in
ss
mov
adc
and
shrb
iret
cmp
xchg
jmp
ret
pop
faddl
cli
and
push
adc
addl
repnz
dec
movl
idiv
sarl
push
inc
mov
cmc
test
inc
lea
out
div
out
mov
sbb
adc
jmp
test
mov
lret
and
pop
dec
ror
ja
sub
xor
rol
clc
adc
out
mov
call
rcrb
insl
push
mov
loope
cmp
fwait
das
aas
in
cmc
imul
rolb
xor
jne,pn
inc
std
or
pop
mov
pminub
pop
mov
mov
jae
fs
test
arpl
aaa
addr16
in
hlt
aaa
jmp
ret
cmpb
out
insl
xor
push
and
xlat
mov
xchg
xchg
mov
test
into
cmpsb
jg
push
lds
push
xor
sbb
xchg
gs
push
stc
or
movntps
xchg
or
lahf
and
lock
adc
jmp
int
xor
ret
adc
leave
sbb
shlb
push
xor
out
sub
out
inc
stc
data16
jp
mov
lods
int3
and
lds
movsb
mov
xchg
inc
lahf
and
stc
or
pop
call
mov
dec
cwtl
mov
jmp
data16
rolb
xlat
sbb
bound
push
jo
mov
push
dec
and
pop
fadds
xor
and
nop
outsb
adc
xor
movsb
mov
ss
hlt
les
loope
inc
addb
inc
insl
cmpsl
mov
aaa
or
cs
fcomp
cmpb
mov
cmp
adc
cltd
pop
cwtl
out
icebp
imul
dec
int
fisttps
pop
sub
jne
jns
fsubl
adc
xlat
sbb
lret
outsb
lea
out
stos
jb
cs
pop
lcall
mov
sub
stos
fs
pop
dec
clc
push
xor
or
adc
xchg
cmpsb
les
stos
sbb
test
pmullw
push
fbstp
je
lahf
aad
sbb
fcmovnbe
mov
rorl
pop
leave
cli
ss
sbb
into
in
jns
jmp
mov
xor
lods
hlt
fidivl
jmp
or
rcll
pop
stc
xchg
mov
push
fcmovu
jg
push
mov
test
fcompl
out
mov
mov
mov
sbb
cltd
fs
add
jnp
fsubr
xor
aaa
adc
mov
mov
test
dec
sbb
push
sub
fbld
mov
xchg
loopne
pop
pxor
js
sarl
push
sbb
test
mov
adc
push
cwtl
pop
xor
pop
movsl
in
dec
test
cmp
arpl
add
mov
out
aaa
call
xchg
or
repz
adc
clc
pop
inc
clc
fdiv
pusha
push
xor
aaa
lea
inc
sub
fistl
sub
into
jge
pop
xchg
xlat
mov
cmp
cmc
jp
push
filds
sahf
jb
mov
xchg
sbbl
add
rcrb
pop
cld
sbb
divl
sbbl
mov
jecxz
scas
lret
push
mov
das
pop
inc
sbb
jo
cs
mov
ret
pop
incl
ja
dec
repz
repz
pusha
cmc
loopne
adc
scas
pop
sub
insl
cmp
add
js
and
xchg
lods
enter
adc
add
out
hlt
lcall
mov
mov
movsl
je
inc
gs
js
lock
frstpm(287
je
pop
imulb
daa
jl
iret
daa
sti
mov
cmpb
inc
inc
fwait
jae
push
dec
xor
mov
add
addb
xor
test
pop
daa
mov
test
shrb
int
mov
dec
cli
inc
or
mov
insb
and
sub
pushf
mov
test
cmp
stos
mov
nop
ds
ret
adc
popf
in
xchg
mov
jp
adc
stos
or
sub
mov
cmp
and
imul
fld
sahf
inc
xlat
divl
sub
fs
pusha
add
ja
adc
cli
or
insl
mov
loopne
cli
add
cmp
mov
movb
mov
sti
mov
lret
push
jb
mov
mov
mov
mov
pop
and
cmp
movb
and
sub
enter
into
fildl
xchg
rcr
jmp
aam
jmp
mov
stc
stos
popf
ds
cld
add
sub
lock
pop
sbb
test
lods
repz
mov
cltd
and
pop
in
rclb
outsb
add
adc
aas
and
mov
jg
mov
out
and
push
sub
out
loope
add
nop
sub
lret
mov
data16
pop
cmc
repz
cmp
mov
popa
mov
or
daa
push
mov
stos
mov
arpl
dec
shrb
ds
push
in
fwait
rolb
fistps
mov
mov
aad
popa
sub
mov
and
cmpsl
pop
xchg
insb
sbbl
aaa
mov
jae
stc
insb
nop
inc
and
pusha
or
lahf
stos
outsb
rorl
xchg
xor
cmpsb
outsb
lock
imul
sbb
mov
sub
repz
cmpsb
and
pop
fstl
sub
or
pushl
pop
aad
fs
ret
and
insb
add
add
scas
rcl
or
inc
pop
addr16
pop
add
aas
dec
sbb
pop
sub
cltd
sti
xchg
cmp
and
mov
shrb
outsl
cmp
stos
push
shl
out
and
scas
repz
mov
dec
cmp
cld
jecxz
add
xor
xchg
cltd
mov
inc
pop
dec
and
test
pop
ds
mov
scas
sub
lods
fisttpl
addb
ja
fimull
sub
in
xor
nop
fdivs
leave
shrl
imul
ficoml
sahf
push
push
xor
and
mov
fimuls
pushf
incb
push
aas
jno
xlat
dec
dec
push
push
dec
xchg
sub
pop
sbb
xor
jmp
or
ss
sahf
call
sub
insl
shl
push
stos
cli
sbbl
test
xchg
shrb
mov
int3
sub
pop
lahf
jae
fwait
jno
or
les
lret
fld
loopne
cld
mov
popa
sub
div
sbb
ret
jae
cli
or
mov
daa
or
jne,pt
movsl
das
icebp
nop
test
add
pop
lret
arpl
adc
fsts
nop
sti
push
arpl
test
ret
or
jo
mov
and
cmp
or
lret
out
or
inc
ss
sti
mov
jg
loope
push
mov
dec
mov
loop
sti
clc
shlb
jnp
out
mov
xchg
inc
add
into
push
lahf
mov
call
jns,pn
sbbl
je
enter
jb
loope
push
repz
call
add
out
push
dec
sti
mov
lcall
aas
xor
jne
sub
addr16
xchg
sti
sahf
out
push
pushf
xchg
xor
leave
fwait
rcll
or
test
push
push
xchg
mov
pushl
mov
inc
inc
test
insb
xchg
xchg
rol
mov
imul
pop
mov
pusha
in
xor
push
xchg
loopne
jb
mov
jae
add
xor
pop
sbb
test
or
sbb
sub
test
enter
loopne
ds
adc
mov
in
dec
pop
push
stos
jns
mov
arpl
sbb
cmp
cltd
push
bound
sbb
jno
fdiv
jmp
lods
rorl
or
xlat
mov
adc
cmp
mov
xor
inc
and
iret
loopne
cmpsl
inc
push
add
sbb
adc
pop
popf
or
scas
repnz
push
cmp
mov
pop
clc
insl
add
lret
jp
jns
mov
aad
mov
les
add
push
sahf
jno
and
les
xchg
das
lret
icebp
or
lcall
jae
cmp
or
fcmovnu
add
jle
adc
incb
repnz
xor
aas
pop
pop
loopne
es
shll
jno
mov
xchg
int3
je
mov
cmp
sbbb
jmp
jle
and
pop
lods
scas
cmpb
jbe
inc
call
fcom
sub
inc
and
movsl
xchg
add
cli
repnz
leave
pop
out
pop
stc
jbe
in
cmp
jg
gs
mov
jns
push
or
or
js
lahf
adc
lds
jo
aas
iret
jns
add
fdivrl
pop
mov
and
cmpsb
jge
push
aaa
lods
pop
jg
pop
rcrb
fisubrl
sbb
fbld
movsb
mov
imul
sbb
add
sbb
push
insl
xchg
cs
roll
xchg
mov
out
in
cmp
push
push
cmp
jle
sub
add
outsl
movsb
push
cmp
mov
jne
xorb
aam
fnsave
sarl
jecxz
jg
jl
and
movsb
std
or
pop
mov
mov
pop
and
insl
test
inc
pushf
or
sbbl
push
leave
int3
jg
add
sub
dec
rcr
pop
xchg
imul
inc
mov
sti
popa
dec
pop
add
test
enter
es
outsb
xchg
cli
jle
dec
or
dec
push
mov
and
sub
xchg
mov
sbb
sbb
cmp
jo
ror
testb
and
pop
push
nop
pop
mov
pop
mov
xchg
push
xchg
sub
repz
int3
xchg
cmp
pushf
cld
adc
insl
rolb
lret
inc
lods
push
clc
movb
mov
dec
xchg
in
dec
mov
mov
lock
shll
popf
in
js
sahf
push
adc
lods
jp
jne
xchg
subb
out
or
or
mov
inc
int
arpl
or
test
jo
and
call
pop
inc
xor
sbb
sub
xor
movsb
mov
pop
lea
jmp
outsl
add
dec
stc
mov
mov
adc
stos
aad
aad
adc
fwait
inc
sbb
xorb
push
mov
cmp
iret
lahf
cmpsb
adc
repnz
push
andb
lods
jno
sub
push
mov
popf
mov
dec
mov
sarb
arpl
xchg
mov
int
pop
sbb
iret
mov
std
pop
push
pop
push
pop
scas
lret
lahf
adc
stos
cmpsl
shl
inc
repz
and
insb
in
sub
jnp
in
sbb
sub
repnz
rcll
xchg
sbb
lahf
xchg
ja
xchg
add
jp
repnz
js
mov
cmpsl
xor
rolb
pop
stos
mov
inc
jl
sub
cmp
in
mov
aad
adc
jge
lret
repnz
scas
adcl
adcb
xchg
jp
sbb
mov
out
jb
int
fs
repz
fs
inc
in
in
ret
nop
pop
das
mov
cmc
dec
popf
mov
mov
cmp
adc
dec
push
scas
jl
jmp
push
push
aaa
xor
lahf
jg
lret
clc
sub
sahf
mov
addr16
ficoml
les
mov
push
adc
push
add
idivb
aas
push
add
mov
sbb
into
mov
lods
hlt
cmc
je
shlb
cmp
sbb
nop
rolb
cmp
lds
and
mov
cmpsb
stc
inc
movb
rcrl
jae
add
stos
lret
ja
push
out
pop
xchg
dec
inc
pop
xchg
jno
mov
mov
lret
sub
cmpsb
pop
jnp
stc
enter
pop
sti
adcl
dec
adc
fcmovbe
jno
inc
add
add
mov
mov
cltd
rcll
pop
inc
pop
daa
into
push
sub
sub
cmp
cmp
inc
inc
lock
dec
test
les
adc
fs
movsb
dec
pop
fildll
sahf
mov
xor
jae
push
pop
fcmovnb
and
inc
icebp
sub
arpl
outsl
int3
push
mov
hlt
mov
aad
scas
inc
adc
std
mov
jg
and
xchg
xchg
mov
sub
push
and
fsubrl
js
ja
add
dec
popa
pop
jmp
rcrl
add
fs
dec
ret
sti
cld
push
sbb
push
clc
clc
push
pop
lods
pop
mov
pop
xchg
mov
xchg
add
adc
ljmp
or
xor
mov
mov
push
mov
rcrb
cmp
lods
call
push
dec
neg
pop
mov
in
pop
mov
shll
mov
sub
mov
cmpsb
inc
inc
popf
push
mov
aaa
test
cwtl
shll
stos
arpl
pop
cli
push
fdivs
arpl
inc
scas
hlt
and
jecxz
mov
mov
mov
adc
je
mov
test
jno
mov
loop
cmp
test
jo
stos
mov
sub
test
cmpsb
lret
sbb
cmp
mov
mov
out
iret
insb
push
jle
movsl
push
mov
or
xlat
dec
je
out
movsb
add
push
fsts
dec
mov
xor
jecxz
cltd
sbb
outsb
adc
cmp
out
inc
pushf
notb
sbb
mov
cwtl
mov
in
iret
pop
ficoml
pop
fs
mov
dec
lea
les
cmp
mov
insl
xchg
cmp
into
jl
je
xchg
test
out
fchs
ljmp
mov
aas
or
in
out
ret
mov
or
gs
adc
jmp
ror
bound
inc
int3
les
or
scas
sbb
aam
inc
iret
out
jmp
push
mov
orl
add
add
test
ss
pop
mov
loopne
call
or
cmp
xor
cmc
call
xchg
cmc
pop
shlb
pop
sbb
out
subb
cwtl
scas
adc
and
sbbb
leave
cmp
rcrb
xchg
lea
rol
out
cmpsl
iret
mov
in
jne
push
cs
xor
cmc
insl
push
aaa
sub
out
or
cmp
inc
movsb
xchg
sti
iret
sbb
lds
inc
pop
xor
push
out
fs
xor
pop
cmpsb
dec
inc
cltd
mov
inc
stc
rcl
lcall
sbb
daa
cltd
mov
fwait
outsl
in
jne
popf
js
xor
xchg
jo
incb
sbb
jg
mov
push
dec
cmp
xchg
inc
mov
mov
mov
ret
adc
cmpsl
xchg
lahf
add
jecxz
xor
adc
orb
in
insb
dec
clc
iret
scas
adc
adcl
jl
xchg
inc
cmpsl
dec
push
nop
jno
cmp
hlt
subb
subl
in
jns
mov
inc
ss
pop
xor
pop
xchg
mov
and
push
movsb
sarl
xchg
xor
and
sub
or
mov
je
pop
gs
add
jnp
adc
les
jg
mov
shrl
mov
lret
hlt
sbb
lcall
dec
push
add
loop
idivl
mov
inc
xchg
pop
cs
add
outsb
nop
pop
pop
jp
push
mov
rolb
push
xlat
mov
fisubs
rolb
xchg
cmp
out
add
sub
out
sub
and
jnp
pop
dec
and
sub
test
pusha
mov
or
jmp
dec
pop
adc
mov
xchg
sysenter
jl
jl
call
lahf
jo
dec
js
jo
js
lds
lret
lods
fs
sub
adc
lods
andl
xchg
scas
pop
jecxz
mov
mov
and
mov
mov
imul
add
cmp
lea
jecxz
xchg
dec
mov
xchg
lret
fisubs
mov
insl
sbb
jno
sub
sbb
add
cmc
sbb
arpl
jnp
inc
push
icebp
je
cmp
xchg
dec
and
dec
jo
inc
xchg
pop
pop
jo
fsubl
dec
insb
mov
lods
mov
push
sub
cli
adc
mov
mov
std
fwait
dec
jp
or
shr
mov
sub
loope
or
fs
push
mov
cmp
ret
in
test
bound
mov
ja
in
pushf
pop
fisubs
push
rdseed
cmp
imul
lds
mov
gs
lea
cltd
imul
test
push
fidivrs
push
add
decl
ja
cli
lods
js
dec
outsl
mov
mov
ja
add
push
fstpl
and
enter
sahf
push
dec
stos
inc
jg
xor
mov
inc
std
push
lock
fildl
and
mov
cs
js
pop
lret
movsb
daa
fcom
and
dec
fwait
inc
jne
mov
out
jae
repz
icebp
xor
xchg
inc
mov
daa
aam
sub
xor
pop
jmp
inc
dec
add
shrl
jecxz
sub
lods
adc
sub
or
mov
arpl
out
imul
cmp
cs
mov
push
xor
movb
inc
addr16
ljmp
std
mov
adc
mov
test
dec
cmp
xor
cmpsl
sbb
divb
cmc
mov
in
xor
sub
or
add
push
ud2
std
jo
imul
lock
push
dec
cmp
arpl
and
test
inc
or
mov
mov
adc
sti
pushf
cmpb
sbb
out
movsb
sub
or
rcpps
dec
adc
and
sub
and
push
call
loop
sub
fsubp
sarl
pop
in
pop
icebp
or
pop
add
add
mov
insl
movsb
cmpsl
mov
jnp
dec
into
scas
pop
ret
andl
sub
cmp
or
mov
rorl
add
shl
or
psrlw
xchg
pop
push
xchg
mov
ss
stos
mov
xchg
fisubrs
dec
xor
adc
dec
cmp
jecxz
mov
ja
mov
lock
dec
mov
jns
lea
xchg
mov
frstor
mov
clc
pop
aam
fcompl
mov
and
into
dec
cmpsb
cmp
bound
iret
cld
pop
ds
mov
loopne
mov
adc
mov
push
leave
add
dec
mov
fldcw
jns
xchg
repz
xor
adc
push
push
cmc
jnp
repnz
push
lcall
outsb
stc
outsl
xlat
xchg
mov
into
add
movsl
sub
aas
mov
insl
pop
jb
adc
sub
in
testl
test
mov
mov
mov
lahf
cltd
shlb
enter
sub
ret
fadds
pop
loopne
push
call
add
jns
mov
arpl
rclb
cmpl
cmp
in
sub
or
je
ffree
ss
jne
stc
mov
or
pop
mov
lret
xchg
ss
mov
fs
xor
or
jl
xchg
mov
sarl
xchg
inc
stc
mov
xchg
std
cli
jae
sub
mov
mov
xchg
jg
cltd
lods
mov
mov
sbb
inc
outsb
aam
jmp
lea
push
sbb
pop
xchg
test
adc
push
mov
dec
inc
mov
add
cmpsl
jne
mov
push
pop
lock
mov
andb
mov
cld
scas
xchg
arpl
fcomps
sarl
and
adc
and
ljmp
cmpsl
test
push
mov
flds
sub
cmp
push
arpl
lea
mov
insb
push
js
xchg
dec
clc
adc
push
jae
les
inc
jbe
pop
test
lret
or
scas
les
test
pop
outsl
int3
ss
lret
pop
das
lcall
jae
jge
pop
les
ret
scas
jp
cmp
fidivs
xor
and
xchg
dec
in
lea
mov
arpl
or
mov
add
mov
push
gs
bound
xor
icebp
mov
xor
pushf
test
mov
je
fldenv
jb
test
out
or
rorl
fidivs
or
fimuls
mov
movsb
ljmp
sub
pop
add
dec
repnz
fwait
je
shll
cwtl
scas
jg
and
shlb
xlat
dec
mov
push
xor
sub
fs
repnz
push
js
fistps
icebp
pop
push
test
sti
shlb
fimull
lcall
lods
out
mov
push
cmpsl
mov
test
inc
adc
cmp
or
outsb
es
dec
andb
lock
xor
pop
pop
inc
aam
cwtl
push
nop
dec
and
jl
mov
and
out
movsb
xor
and
getsec
sub
sti
jns
pop
les
into
out
pop
bound
jecxz
frstor
mov
mov
setbe
ret
fs
sub
imul
cmc
in
pop
jb
in
pop
ret
daa
in
nop
lgs
mov
push
xchg
mov
sub
andl
jge
ffree
push
sarb
pop
testl
fiaddl
xor
cmc
sahf
mov
xchg
jns
mov
sub
pop
cltd
mov
ljmp
push
cltd
ret
push
mov
cmp
sbb
push
ss
loope
mov
test
cmpsl
std
push
jae
scas
sarb
jnp
jo
add
arpl
insl
xor
jo
subb
dec
dec
inc
roll
push
cmp
aad
pop
mov
cwtl
cmp
fs
dec
inc
xor
xlat
je
sub
or
cmp
jge
lock
ljmp
mov
mov
out
xchg
das
and
not
adc
xor
or
inc
xlat
out
mov
nop
mov
add
outsb
icebp
call
das
xchg
sub
int
fdivp
cmpsb
jae
fldcw
or
sar
leave
push
pop
aad
pop
mov
dec
aas
xor
jae
push
data16
daa
leave
xlat
into
cmp
push
psubw
shlb
ss
xorl
adc
faddl
cli
add
fwait
mov
add
and
cmp
mov
inc
lods
mov
out
sti
jnp
test
pushf
inc
xchg
sbb
lcall
jbe
in
pop
xor
jle
arpl
repnz
xchg
sub
mov
lret
rcrl
sbbb
addl
arpl
repz
xchg
or
or
cmpsl
jo
fsubs
fiadds
test
arpl
pusha
jecxz
repz
es
ds
into
or
stos
xor
cmpsb
mov
sarl
add
lret
repz
mov
daa
shll
cmp
daa
in
mov
cmpsb
cli
repnz
and
adc
test
sbb
push
push
in
lahf
mov
cmp
imulb
ret
aam
pop
fdivrs
out
nop
adc
dec
or
sbb
bound
sub
sub
clc
cmp
push
ss
stos
mov
xchg
and
jl
push
outsb
cltd
lods
and
gs
adc
ja
insl
jg
dec
jns
dec
xlat
sub
popf
stos
push
sbb
adc
mov
popa
dec
xchg
out
mov
test
jne
cld
xchg
adc
ss
pop
push
add
push
hlt
movsl
pushf
cmp
sbb
jo
mov
jo
lds
xor
repz
pusha
das
shlb
and
call
xor
dec
rcll
inc
sub
je
filds
fistpll
xlat
loopne
imul
mov
fldenv
ja
out
pop
fcmovnu
xor
xchg
jo
scas
iret
inc
pop
aad
rolb
leave
into
test
sar
sbb
test
inc
dec
jns
in
fisttpll
xchg
jmp
mov
cmpsl
icebp
jns,pt
pop
cli
addr16
jmp
or
push
pop
lock
pop
ljmp
test
idivb
daa
xchg
push
imul
push
test
loope
mov
sbb
sub
push
lcall
cltd
jmp
fimull
shlb
mov
in
jmp
lock
inc
cmp
push
pusha
jbe
xor
and
movsb
stc
aas
daa
outsl
mov
jbe
sbb
sbb
cmp
pop
dec
test
addr16
aas
lock
aas
loope
hlt
lcall
je
sbb
lods
xchg
sub
les
in
fnstenv
movsl
movsb
cwtl
addr16
mov
sub
jle
inc
mov
adc
js
scas
pop
mov
shrl
movsl
add
jp
inc
iret
adc
inc
dec
jne
into
insb
enter
jecxz
fwait
xchg
mov
jae
jno
stos
and
in
stc
into
sti
xlat
lods
inc
fs
subb
fwait
aaa
jb
xlat
mov
push
push
mov
adc
mov
sub
lahf
mov
inc
sbb
jb
sub
mov
add
bound
inc
mov
cld
xor
movsb
ljmp
test
jbe
mov
or
stc
and
mov
stc
xchg
aaa
inc
mov
movsl
andl
xchg
insb
insb
adc
push
and
cmpsl
mov
push
fsubrp
int
or
sbb
lcall
inc
sbb
pop
dec
mov
loopne
jmp
aad
cltd
out
fstps
mov
pushw
fiaddl
shr
aaa
leave
stc
mov
mov
dec
aad
lock
ret
mov
sti
jp
js
mov
decb
test
lock
js
add
push
pop
repnz
lds
dec
lcall
lahf
into
push
xor
dec
jo
or
subl
mov
ljmp
mov
fs
cld
popa
or
pop
incb
and
mov
lods
cmp
push
fnclex
dec
mov
and
shlb
insl
dec
cmc
dec
dec
scas
mov
shlb
and
adc
pusha
fildll
insl
push
inc
loopne
sahf
mov
lock
xchg
lahf
loop
mov
mov
xchg
mov
pop
sbb
xor
repnz
jecxz
add
xlat
stc
test
hlt
xor
test
and
js
sar
and
add
inc
test
push
out
insb
pushf
cs
mov
aam
sbb
xor
in
fsubs
pop
in
pop
in
iret
fnstenv
mov
repnz
push
mov
mov
pop
gs
mov
rcrl
and
ret
fsubrl
jle
and
sbb
std
lret
adc
andb
cmp
in
in
sbb
add
mov
jge
test
push
jle
out
pop
rcrl
lret
jb
add
lock
xchg
lock
cmpl
sahf
shrb
out
nop
hlt
sbb
sbb
orb
mov
popa
mov
insl
add
in
aas
add
in
fwait
push
das
xlat
push
mov
xor
je
mov
or
movzwl
stos
or
mov
ret
ficompl
pop
dec
sbb
mov
mov
xchg
pop
dec
dec
das
jae
incb
pop
sbb
inc
push
jno
sub
les
and
daa
xorl
orl
sub
ss
mov
push
movups
add
dec
mov
mov
add
or
xchg
lret
push
or
mov
test
xchg
scas
push
rcrb
fbld
lahf
xchg
out
push
add
sub
insl
sub
jne
imul
jnp
push
mov
cmc
xchg
mov
cmp
cmc
or
adc
cs
mov
cli
xchg
cmp
pop
push
dec
push
ret
cmp
lods
add
mov
push
rcrb
shrb
bound
popf
or
dec
dec
push
in
adc
gs
xor
ret
mov
push
fadd
shrb
test
xor
clc
mov
adc
popf
outsl
pop
xchg
push
or
clc
mov
stos
fs
divl
mov
add
fsubrs
enter
iret
ret
scas
jno
mov
mov
mov
or
out
push
testl
fwait
in
pop
lcall
inc
ficomps
jge
add
and
mov
add
nopl
hlt
inc
ret
xchg
testl
mov
fwait
js
and
ret
in
cs
mov
jo
xchg
xor
add
decl
sbb
pop
and
in
fs
inc
pop
add
les
and
daa
xchg
jmp
or
repz
cmp
fabs
push
xchg
ljmp
inc
cmp
xchg
jno
out
ss
and
cwtl
add
shl
pop
dec
mov
jne
cmpsl
js
jmp
and
mov
mov
cmp
adc
dec
inc
cmpsl
enter
cli
adc
or
add
bound
stc
andl
mov
ficoms
int3
fcomp
addr16
imul
jno
sub
cmp
fisubrs
cmp
mov
pop
jge
pop
loope
adc
add
adc
jmp
cltd
cmp
out
repnz
fucom
sbb
and
jg
jmp
pop
imulb
push
inc
add
ja
stc
loop
adc
cli
jl
std
ret
fmul
in
lret
inc
lods
aad
aam
insl
jmp
out
fnstsw
sbb
movsl
sbb
mov
or
fisttpl
adc
xchg
rol
repnz
bswap
out
mov
cmpsw
inc
dec
add
nop
adc
mov
loopne
cmp
int3
insb
cmp
xchg
inc
and
push
push
outsb
or
arpl
and
out
subb
sbb
push
shll
mov
data16
in
les
pop
sub
push
testl
pusha
ret
cmc
mov
cli
push
es
xchg
in
cmpsb
daa
or
int3
and
mov
add
mov
test
dec
xchg
popf
adc
std
and
stc
test
cmp
jmp
fiadds
xlat
xchg
stos
cltd
jnp
cmp
mov
sub
scas
or
inc
ljmp
pop
push
nop
jne
test
inc
in
ss
pop
rorb
imul
jb
pop
or
test
mov
dec
jbe
jb
mov
add
lcall
adc
inc
shrl
cmp
movsb
adc
es
outsl
mov
daa
and
xchg
adc
inc
push
mov
fidivrl
xchg
inc
aas
xchg
jns
enter
outsl
rorb
repnz
inc
movl
mov
dec
xchg
andb
ljmp
fnstcw
xchg
xchg
rclb
mov
mov
push
mov
adc
xchg
sub
inc
lret
push
push
dec
scas
add
rclb
mov
dec
sub
push
sbb
pop
sub
or
sub
mov
pushf
cmc
push
fldenv
lret
pushf
mov
shl
mov
xchg
inc
std
orb
hlt
notb
mov
rorl
hlt
gs
mov
mov
mulb
dec
sub
xor
inc
push
jmp
fs
int
mov
mov
loope
stc
fs
mov
mov
lea
cmpsb
ret
mov
pop
push
push
cmpsb
imul
mov
test
or
cmp
sub
add
inc
popa
jae
ficomps
repz
push
nop
xcrypt-ecb
push
cld
inc
adc
xchg
insb
out
mov
pop
call
xchg
pop
mov
dec
rcrb
cmp
pop
adc
or
sbb
ja
cmp
jns
dec
arpl
das
lret
aas
push
add
adc
sti
das
mov
jmp
dec
repz
mov
ljmp
add
stc
ss
sti
mov
imul
jl
cmp
xor
lods
je
icebp
test
decl
lcall
mov
mov
int
push
adc
test
sub
cwtl
loop
adc
fwait
push
test
mov
rcl
jbe
aas
inc
leave
lahf
gs
mov
lock
jns
mov
leave
mov
lahf
jo
adcb
cmp
fsts
inc
and
in
leave
daa
data16
jge
and
cmp
movsl
adc
mov
and
jecxz
sarb
fiaddl
mov
cmp
repz
sub
xchg
push
aad
iret
cmpsl
aaa
clc
dec
jmp
sub
add
subb
xchg
push
sub
sub
xchg
test
lret
inc
add
sub
jno
sub
repnz
xchg
iret
cltd
pusha
loopne
test
leave
adc
call
and
dec
or
aad
adc
scas
enter
push
hlt
mov
fs
pop
push
sbb
fbstp
bound
fdivr
lcall
sub
xlat
pop
cmovae
inc
lcall
mov
push
pop
sbb
insb
and
fistps
xchg
and
push
and
repz
sbb
and
add
lods
and
loope
mov
mov
sbb
ds
ror
pop
sbb
fcoml
mov
clc
test
mov
outsb
or
xlat
out
lret
inc
xlat
data16
inc
push
clc
sbb
mov
mull
mov
gs
or
jbe
pushf
xor
je
adc
hlt
leave
fisttps
pop
inc
mov
pop
insb
or
mov
mov
insl
mov
sbb
cmp
push
ja
jmp
cs
sub
in
jns
inc
cmp
addr16
into
fs
scas
bound
out
fs
daa
out
push
dec
sub
ret
dec
mov
nop
push
sbb
movsl
jnp
in
jb
dec
loop
adc
sarb
mov
push
int
sti
jae
inc
pusha
enter
iret
inc
adc
lods
mov
rorb
stc
fimuls
and
pushf
lret
ss
cmp
xchg
add
push
push
les
pop
ja
or
xchg
out
cwtl
sbb
or
cs
push
xlat
inc
out
int3
sub
cmp
icebp
outsl
movsl
lods
jmp
sub
call
test
and
sbb
dec
cwtl
xchg
pushf
je
ficompl
dec
ljmp
ret
fcomps
xchg
xlat
mov
adc
iret
or
push
add
mov
sub
jno
out
loop
out
sbb
insb
int
sub
scas
jmp
lahf
mov
mov
repnz
jno
mov
fmul
decb
adc
and
fsubl
cli
outsl
adc
in
in
pop
es
fucomp
test
unpcklps
scas
mov
shrb
insl
jns
popf
add
add
add
sub
cmc
inc
xor
jge
sbb
xchg
in
daa
xchg
sbb
pop
gs
and
dec
mov
mov
jecxz
adc
ret
cmp
mov
movd
jecxz
sub
mov
dec
lods
sbb
mov
lcall
sub
leave
mov
rclb
cmp
mov
daa
jmp
or
sub
ret
sub
mov
sahf
mov
inc
ficompl
outsl
xchg
scas
ljmp
cld
call
mov
int
xor
push
sahf
flds
ret
xor
mov
or
add
into
cmp
mov
mov
lahf
test
ja
mov
dec
cmc
cltd
cmpsl
jecxz
pop
mov
xchg
in
pop
outsb
movsl
and
jbe
jbe
sahf
inc
push
adc
popf
into
pop
mov
pop
in
mov
mov
mov
fs
cmp
popa
in
rcll
pop
xor
sbb
into
pop
inc
dec
fsubrs
jbe
pusha
ret
push
push
test
cmp
pop
ss
in
repnz
push
popf
xchg
jbe
pushf
adc
lret
xchg
push
daa
mov
ds
push
mov
jb
data16
dec
std
mov
mov
cmp
push
aaa
cld
fnstsw
inc
mov
xchg
jecxz
movsb
pop
dec
hlt
dec
cmpl
dec
mov
adc
hlt
adc
dec
jp
jno
push
adc
push
sub
or
nop
lret
cmp
push
fldl
ror
mov
insl
outsw
aaa
loop
mov
sbbl
xchg
fld
cld
xchg
in
sti
xchg
sub
dec
or
jae
rcll
push
lret
mov
bound
add
test
test
xchg
xchg
sti
pop
push
stos
mov
fldenv
movsl
gs
pop
je
inc
imulb
sub
rolb
inc
ds
or
add
insl
mov
or
fnsave
pop
outsb
mov
divl
mov
add
dec
jno
or
dec
mov
shll
insl
jnp
addr16
inc
or
adc
jo
push
ljmp
xchg
mov
test
repnz
xlat
fwait
pop
cmp
sbb
ljmp
ret
adc
mov
fwait
adc
call
mov
xor
loopne
mov
ljmp
inc
xor
pop
call
mov
mov
dec
test
and
out
bound
stos
xchg
push
mov
sub
dec
inc
adc
pop
pop
sarb
jne
jb
mov
xor
jne
add
mov
test
stos
push
and
jmp
dec
jl
loopne
xlat
add
jge
in
xor
cmp
jo
jae
movsb
clc
mov
push
sub
inc
lret
xchg
sub
jg
jns
in
out
push
and
rcl
pop
dec
out
cmp
add
adc
mov
in
push
mov
ret
leave
fs
cmpsl
aas
data16
movsl
sub
adc
rolb
xlat
push
leave
adc
stc
loop
mov
movsb
lahf
xchg
insl
push
lods
mov
outsl
das
test
dec
lock
cld
lret
xor
pop
cwtl
ss
or
mulps
popa
or
scas
insl
push
xchg
xor
arpl
ds
add
jo
out
inc
jp
nop
movsb
pushf
jno
lcall
rcr
insb
add
pop
shrb
fs
fistps
out
cmp
push
and
sub
jns
dec
ret
js
in
fnstenv
shll
fwait
xchg
sbb
jne
adc
movsl
packssdw
cmp
enter
mov
adc
push
addr16
insb
mov
sahf
sub
inc
dec
dec
out
out
and
dec
jno
fsubs
xchg
loop
mov
lock
cmp
data16
xchg
adc
ret
movsl
cmp
idiv
out
fnsave
sub
movsl
push
xchg
jno
dec
cmp
mov
es
lock
xchg
inc
mov
jecxz
adc
add
popa
xchg
movb
sub
lret
lods
push
push
adc
stos
add
aaa
cmpsl
mov
insb
pop
movsl
idivb
sbb
jns
xchg
test
jo
sub
sbb
imul
lods
mov
mov
mov
loope
or
adc
lcall
in
paddw
pop
and
mov
inc
inc
cli
mov
or
imul
sub
mov
not
daa
sbb
cmc
in
xchg
scas
sbb
cld
cli
pop
push
jo
dec
push
xor
dec
cltd
test
sub
lock
aam
lret
pop
pop
insb
push
push
fisttpll
es
iret
jp
les
mov
pop
fdivrs
xchg
and
aas
test
les
cmc
std
mov
jo
mov
lods
sahf
ret
dec
sahf
roll
pop
repnz
sub
inc
inc
shlw
inc
jns
xchg
stos
lret
add
adc
push
out
clc
aad
popa
stos
ds
sub
jo
lds
scas
int3
xor
xchg
mov
mov
pop
fnstcw
shl
ja
lcall
mov
pop
incb
xor
inc
lods
test
and
lock
imul
loop
pop
sti
and
jo
cli
sbb
mov
aam
shlb
push
fistpl
pop
roll
test
loope
orb
rorb
or
jo
mov
fs
adc
adc
push
mov
lock
aad
outsl
pop
cli
int
inc
sbbl
inc
cmp
jmp
js
pop
daa
and
fwait
clc
popa
call
sarb
dec
push
pushf
mov
ret
xor
pop
aaa
mov
aaa
inc
cmp
dec
cld
xor
push
xchg
and
daa
push
icebp
lcall
js
imul
in
maxps
data16
testl
push
cmp
xorb
insb
unpcklps
dec
push
fiaddl
cld
fldl
fwait
mov
add
lgs
xor
dec
mov
shll
ret
add
arpl
and
fnstcw
fsubl
mov
pop
aas
insl
repz
sbb
scas
jae
cmp
shlb
mov
and
jo
xor
ss
daa
jecxz
test
cs
jns
jbe
mov
sub
xchg
daa
clc
mov
cmp
xor
insb
cmp
dec
mov
adc
cs
jmp
jl
push
iret
jmp
xchg
xchg
xchg
in
inc
or
cwtl
stos
loopne
rcll
or
sub
push
mov
out
mov
jb
xchg
rclb
sub
aaa
movb
pop
pop
popf
dec
insb
and
sub
mov
je
gs
and
sbb
and
cmp
xor
ja
xchg
addl
fwait
rcll
cmpsb
mov
jmp
push
sbb
hlt
lods
cs
les
xor
xlat
repz
lret
fdivrl
jecxz
inc
stc
or
test
gs
and
mov
xor
mov
sub
bound
stc
inc
mov
jmp
mov
jle
push
adc
and
xchg
mov
xor
push
test
jle
std
testb
imul
or
stos
inc
pop
pop
es
mov
xor
int
mov
adc
call
xchg
xchg
jl
mov
cld
dec
or
pushf
and
jmp
pop
mov
xchg
lea
sbb
cli
fwait
arpl
inc
and
fs
sbb
arpl
popa
in
cmpl
das
cmp
les
imul
fbstp
mov
out
in
in
xchg
arpl
pop
insl
sbb
mov
add
shl
jl
or
push
aaa
cmpsl
stos
or
xchg
inc
or
aad
xchg
lcall
mov
jnp
push
ficoms
call
leave
mov
inc
out
test
mull
add
fistpl
aaa
xchg
test
repz
xor
scas
call
cmp
xor
mov
jecxz
mov
push
push
adc
mov
xlat
pop
pop
sbb
hlt
sbb
add
sub
sub
sub
add
add
push
adc
scas
mov
mov
inc
jae
cmp
negb
je
jo
xchg
push
test
lret
loopne
xor
xchg
iret
enter
jecxz
xlat
sbbl
add
xor
out
push
xor
jb
les
repnz
xor
jge
inc
loopne
daa
cs
pop
cmp
cli
frstor
pop
ret
jno
xor
sub
cmp
jmp
pop
sbbb
inc
test
sbb
les
mov
cmp
and
fucomi
cmp
jge
push
sbb
pusha
call
jnp
ss
jle
rclb
scas
lds
loop
xchg
or
decl
je
pop
mov
insb
xor
adc
mov
push
nop
mov
je
aaa
mov
adc
scas
adc
sbb
cmp
mov
ret
add
push
add
je
ret
adc
test
loop
jecxz
fstpl
mov
mov
pop
dec
clc
add
sub
adcb
scas
stos
sbb
mov
add
int3
cli
mov
fisttpl
inc
cmpsl
mov
ss
lea
xchg
cmpsb
rorl
fcmovbe
dec
dec
jb
add
adc
leave
xchg
daa
xchg
cs
orl
cmp
push
lds
dec
inc
or
jo
pop
hlt
outsl
jecxz
ret
mov
xchg
cltd
insl
or
xor
sub
and
icebp
repnz
shl
xor
and
xchg
pop
outsl
daa
sbb
and
addr16
pop
push
stos
fs
call
or
adc
into
jnp
ffreep
cmpsb
xchg
aaa
cmp
add
mov
lods
sbbl
leave
sub
lea
test
insb
dec
pop
rolb
xor
jnp
or
adc
mov
in
aam
or
insl
push
movsl
insl
xchg
cltd
enter
mov
pop
jl
adc
ds
adc
aam
pop
popf
orb
sub
sbb
add
and
or
xchg
out
into
js
movb
xorb
and
jecxz
cmp
add
xchg
dec
cmp
push
adc
hlt
push
and
insb
hlt
xor
xor
sbb
loopne
shrb
adc
cld
loopne
lret
xchg
mov
repnz
and
mov
jo
sysenter
out
xor
loopne
and
sahf
loope
in
xlat
xchg
test
stos
push
mull
add
js
test
or
ret
shlb
cmp
rolb
das
sar
loop
aad
xor
mov
popl
cld
xchg
cwtl
insl
shlb
add
push
sbb
jne
add
je
cmc
loopne
arpl
lcall
inc
arpl
mov
cmc
jp
ja
pop
fdivl
mov
mov
sbbb
pushl
movsb
mov
push
in
mov
mov
mov
lret
mov
pop
jmp
mov
add
popf
mov
and
xor
xchg
mov
jno
push
lret
dec
sub
and
popa
sub
xchg
sub
mov
lods
adc
mov
pop
shrb
push
popf
add
cmpb
fnstcw
mov
jl
cmp
xchg
and
stos
dec
push
outsl
js
push
xor
aam
cmpsb
xchg
loope
pushw
shlb
xchg
out
ret
dec
lock
lea
repz
cmpb
lcall
gs
dec
add
dec
mov
in
out
sub
sahf
and
fdivs
jmp
xor
aad
mov
stc
loope
mov
cmpsb
and
imul
in
mov
scas
or
mov
repz
xchg
int
imul
xchg
inc
mov
push
or
lret
sub
cmp
mov
sarl
hlt
inc
in
in
ficoml
lret
lods
lcall
scas
test
imul
stc
inc
pushf
gs
int3
leave
dec
mov
lahf
mov
ret
iret
aaa
mov
jae
push
addr16
roll
int3
mov
cmp
jecxz
ficoml
ja
sbb
sub
scas
decl
fwait
or
jp
repnz
sbb
daa
mov
adc
les
test
cwtl
std
fisubl
inc
shrb
rcrl
sub
push
adc
xchg
mov
ffreep
cs
mov
in
jl
mov
jecxz
mov
fwait
sub
popa
stos
push
mull
mov
lds
popf
push
push
cmp
jmp
xchg
or
sbb
sbb
ret
sbb
xor
insb
dec
fdivs
mov
loope
lret
scas
bound
mov
push
push
arpl
and
imul
sub
mov
repz
data16
add
adc
or
xchg
das
test
insb
cmp
in
sahf
cmpsl
mov
test
jbe
push
loop
inc
fists
in
adc
push
dec
xchg
popf
sbb
cwtl
add
and
push
out
nop
shll
xlat
out
jne
notl
aad
fs
fstpt
fs
sbb
mov
jo
adc
add
es
lds
or
push
sbb
sar
dec
jae
aaa
jnp
xor
sarb
jne
mov
mov
js
push
mov
nop
and
jp
ja
mov
adc
inc
jmp
repnz
pop
add
jge
ds
jl
mov
inc
lret
fwait
mov
inc
shr
or
mov
je
pop
dec
inc
sbb
or
pop
mov
dec
imul
das
add
pop
sbb
repnz
ret
rcll
mov
les
fs
sbb
cmpsl
ret
test
cmp
push
and
adc
hlt
pop
cmp
push
push
cltd
sub
mov
sbb
cltd
xchg
sbb
mov
or
lcall
enter
lds
out
sbb
sbb
push
bound
push
sbb
pop
pop
int
retw
jp,pn
loope
fwait
out
addr16
mov
scas
pushf
and
pop
scas
sub
cs
popa
movsb
bound
pushf
insl
dec
in
cltd
and
mov
shrb
fldcw
jmp
and
bound
icebp
sbb
xor
mov
cld
cmp
jp
scas
push
std
xor
cmc
lea
dec
in
dec
xchg
movsb
xor
xchg
pop
adc
cmp
loop
mov
shl
in
dec
and
movsb
adc
sbb
jns
imul
xor
sub
sub
sub
pop
adcl
push
or
packsswb
test
adc
xchg
adc
pop
pop
dec
in
pop
ret
mov
test
inc
cmp
add
dec
adc
daa
push
xchg
iret
lcall
stc
iret
xchg
out
les
inc
std
mov
jg
inc
sub
lret
mov
cmp
inc
pop
in
xor
repnz
jp
lret
xlat
push
lahf
ja
mov
sbb
inc
add
xchg
adc
lock
stos
outsl
idivb
cwtl
mov
mov
stos
sub
sbb
jmp
mov
roll
cli
mov
mov
sub
jmp
test
stos
repz
mov
lock
push
arpl
jno
xor
daa
clc
andl
inc
and
inc
mov
imul
and
sbb
stos
mov
lcall
je
mov
lcall
or
sbb
das
inc
aad
push
mov
push
movsl
data16
jecxz
out
movsb
dec
movsl
jle,pn
sahf
push
mov
push
push
sbb
mov
nop
mov
jno
or
xor
aaa
cwtl
jnp
or
add
and
or
sub
dec
inc
add
or
sarb
in
lock
xor
cltd
xchg
or
mov
and
cmp
xchg
dec
sbb
dec
andl
pop
rcrb
rorb
imul
xchg
push
jge
roll
mov
dec
shlb
xchg
lock
ljmp
inc
add
cmp
sub
push
mov
push
jb
loop
xor
mov
jmp
sbb
and
push
push
addr16
je
lods
mov
inc
sti
mov
mov
push
popf
lahf
popa
ror
mov
xlat
push
jne
jp
ljmp
fidivl
mov
into
mov
aaa
movb
xor
mov
jecxz
test
push
sbb
test
sub
hlt
pop
and
fwait
pop
rol
in
andl
imul
out
je
inc
lods
pop
sbb
nop
pusha
scas
int
call
js
adc
jo
jg
popa
das
je
aaa
sub
icebp
cmc
xchg
jnp
lods
icebp
scas
ds
dec
mov
pop
push
inc
mov
pop
or
mov
rorl
jb
in
fisttpll
mov
sub
std
ja
bound
popa
jo
js
shr
stc
nop
repnz
into
fidivl
cs
and
jl
push
lea
dec
adc
filds
ss
test
jp
aad
sub
dec
xor
ja
adc
and
and
pushf
add
ret
aaa
fsubrp
scas
mov
lods
mov
jg
adc
sahf
in
or
add
pop
aad
adc
rolb
cmpsl
ja
sbb
lea
add
sub
mov
or
jge
or
mov
loope
push
add
call
imul
cmpsl
xlat
xchg
fwait
dec
in
cld
fwait
pop
pop
xchg
dec
pop
or
dec
xor
aad
mov
mov
sub
dec
cmp
movsb
lods
nop
or
pop
push
inc
dec
loope
mov
xchg
jae
lcall
and
mov
icebp
cmp
ds
jge
xchg
pop
xor
xor
mov
leave
pop
dec
lea
mov
pop
ljmp
push
sbb
rolb
push
je
test
pop
inc
cmpsl
xchg
movsl
sbb
cwtl
jno
loope
adc
insl
pop
data16
cld
ja
sub
push
sub
sbb
aam
add
pop
push
push
imul
clc
mov
bound
mov
aaa
addr16
inc
rorb
inc
lods
cli
pop
out
xor
pop
cmp
sbb
rcl
enter
fstl
adc
cltd
pop
push
pop
lods
pop
lret
je
sarb
mov
xor
xor
test
negl
test
fadd
repz
push
mov
xor
xchg
inc
pop
cltd
icebp
xor
adc
rcr
je
lret
xchg
aas
repnz
mov
cmpsb
icebp
push
outsb
lods
jb
dec
in
add
cmpsl
insb
ljmp
mov
fwait
and
mov
xchg
insl
xor
stos
sub
cmp
jmp
cmp
mulb
and
ret
ds
call
es
ret
pop
loop
jns
push
je
jp
fcos
inc
push
adc
scas
inc
fildll
in
pop
jecxz
jl
xchg
out
xchg
sub
or
cmp
jmp
xlat
push
cli
xchg
inc
mov
mov
push
out
mov
push
dec
outsl
ss
out
data16
lea
icebp
dec
or
or
xlat
mov
mov
pop
fwait
xor
dec
push
ja
js
add
cmpsl
mov
lahf
clc
add
into
stos
stc
dec
jnp
push
fistps
jns
ret
test
scas
xchg
aas
aas
mov
test
outsl
mov
out
imul
aas
aad
je
pusha
push
sbb
xchg
inc
jge
loop
and
shl
sub
jnp
jl
imul
mov
pop
test
test
clc
mov
int3
add
mov
popf
scas
adc
loope
xor
lods
scas
inc
adc
mov
adc
mov
xchg
sbb
testb
inc
lahf
nop
add
call
das
jnp
mov
or
out
pushf
xor
test
mov
push
or
js
jecxz
sbb
in
aam
xchg
imul
repnz
push
sbb
push
jle
out
inc
das
psubb
xchg
hlt
subb
neg
hlt
push
loope
ss
inc
mov
psrlq
cmpsb
xchg
xchg
ret
jmp
fiaddl
xor
idiv
mov
jno
ret
inc
sub
push
int
jno
imul
mov
insb
or
mov
mov
out
arpl
into
popa
rolb
sub
jnp,pt
shrb
jae
cmp
ljmp
cmp
test
les
adc
add
into
and
mov
pop
mov
add
xor
mov
js
sub
and
mov
add
movsb
sar
movsb
cs
leave
popf
mov
sub
sbb
loopne
cltd
mov
insl
cmp
xor
aad
adc
imul
mov
lds
xlat
jmp
addr16
sar
decl
pusha
out
iret
cmp
movsl
div
jp
lods
adc
shlb
and
dec
fdivs
mov
sarb
aam
push
dec
fstps
inc
adc
mov
add
jl
dec
andl
push
popf
insb
xor
push
movaps
ss
push
mov
lods
pushf
add
push
jle
mov
int
push
aam
jbe
in
gs
insb
outsl
fabs
xor
dec
fwait
cs
push
daa
jg
dec
movsl
push
leave
shr
sbb
lds
fcompl
call
jle
in
cmp
and
into
adc
cmp
outsl
shlb
movsb
mov
cmp
into
ret
jne
adc
jb
push
jb
sub
lea
jle
dec
in
out
int
xlat
sar
scas
adc
or
mull
mov
adc
xor
mov
dec
iret
movsl
add
jae
movsb
jl
lret
sub
cli
lds
jb
adc
xor
xchg
in
lds
cmp
out
xchg
pop
pop
push
out
cmp
pop
push
stc
xchg
push
fdivl
ja
push
sub
add
xchg
or
clc
push
rorl
inc
iret
pusha
xor
pop
addl
scas
dec
cmp
and
out
rol
dec
imul
xchg
loop
popf
cwtl
or
lea
xor
sub
pop
mov
push
mov
mov
aas
mov
pop
jp
inc
fadds
xchg
rorb
stos
dec
mov
popa
sbb
mov
mov
iret
push
mov
mov
pop
push
mov
and
in
mov
insl
mov
mov
jo
stos
sbb
lods
fiadds
popf
mov
in
inc
leave
aaa
push
outsl
mov
inc
stos
and
xchg
sub
test
pop
sub
jb
push
test
ds
push
mov
jae
push
sub
adc
popf
mov
and
in
or
dec
mov
inc
outsb
or
aam
mov
dec
nop
sahf
or
jae
cmpsb
ljmp
shrl
test
jl
cs
inc
adc
test
lret
ljmp
stos
dec
mov
adc
movsl
and
pop
dec
mov
addl
lds
push
cmp
dec
jnp
fldl
mov
add
xchg
clc
mov
in
adc
mov
rorl
aam
and
negb
pop
clc
mov
mov
inc
jo
jno
cmovs
imul
sbb
jecxz
aad
lds
sbb
shlb
aaa
mov
fld
fwait
repnz
mov
fnstcw
int3
pop
adc
aad
or
sub
out
inc
mov
adc
dec
mov
insl
outsl
jo
mov
dec
jns
pushf
push
not
hlt
mov
sbb
mov
xor
inc
cmp
arpl
ds
out
enter
xchg
sbb
cmp
mov
mov
xchg
adcb
mov
adc
xlat
decl
dec
jno
rcrl
push
aad
dec
in
ret
add
dec
mov
imul
stos
mov
ss
sbb
roll
sbb
mov
xor
pushf
inc
push
sahf
fldt
in
loop
pop
dec
lret
fwait
mov
add
inc
sub
mov
push
mov
adc
add
inc
sub
sbb
test
dec
dec
inc
mov
adcb
loop
push
or
and
push
lods
scas
add
insl
jmp
jecxz
cmpl
lods
mov
test
out
adc
stc
jbe
jne
out
cld
loope
roll
push
popa
push
push
loopne
jmp
in
sbb
out
lods
or
xor
adc
shr
mov
xchg
xchg
imul
sub
in
inc
xchg
icebp
adc
pop
dec
test
jns
fiaddl
mov
sti
jne
jecxz
xchg
jb
ret
sub
ja
jmp
xor
or
hlt
mov
inc
call
ss
lods
and
or
fstpt
mov
je
pop
icebp
push
xchg
ficoml
cmc
xor
aaa
dec
jl
xchg
imul
sub
arpl
jecxz
sub
sti
adcb
shr
testl
jns
pop
cmpxchg
add
not
or
repnz
push
and
xorb
adc
jne
dec
ficompl
mov
jmp
mov
pop
sbb
loop
das
jb
push
or
ret
cmp
mov
and
sub
cmc
incl
sub
jbe
adc
daa
rcrb
imul
add
mov
cmpsl
mov
mov
js
xorl
dec
push
mov
mov
add
inc
scas
mov
cld
mov
cmp
xor
hlt
in
xor
inc
inc
xlat
dec
inc
push
pop
int
stos
arpl
sbb
adc
add
scas
cmp
cmp
adc
sbb
mov
iret
std
or
sub
xchg
sbb
jb
lea
loopne
bnd
xor
cld
pop
adc
ret
mov
xor
mov
inc
movsl
addr16
and
mov
shrl
jbe
aaa
jno
cmp
outsb
jae
xchg
dec
xor
adc
pop
jno
dec
cmp
pop
push
jne
dec
movsl
xchg
sbb
cmp
or
sub
out
imul
xchg
jo
sub
cmp
sub
sbb
mov
or
lret
dec
sbb
iret
jmp
xor
mov
push
dec
push
movsb
mov
or
hlt
addr16
sbb
inc
mov
gs
jb
xlat
aas
sbb
mov
mov
inc
sub
xor
repz
out
sub
jmp
lcall
dec
daa
mov
pop
shlb
aaa
fs
in
mov
inc
sarl
jo
or
sub
xchg
push
ss
std
not
dec
iret
xor
stos
aas
push
inc
mov
insl
jg,pn
dec
outsb
adc
sbb
push
lods
cwtl
jo
test
cs
nop
jnp
in
imul
xorl
jae
scas
cmpsl
roll
sbb
xor
pop
cltd
xchg
mov
dec
mov
lret
dec
fdivl
mov
pop
adc
iret
sahf
loope
lahf
add
mov
cs
dec
adc
add
pop
lods
cmpsb
xchg
jg
adc
add
aam
mov
pop
fistps
sbbb
inc
and
loop
sbb
sbb
add
lret
push
rorb
ucomiss
mov
into
inc
dec
pop
sub
mov
jmp
lea
ljmp
ljmp
mov
in
rorb
push
mov
adc
pop
push
enter
bound
sbb
rcr
xlat
dec
mov
xlat
sbb
push
test
rorb
divl
setge
jno
cs
loope
xorb
dec
mov
mov
xor
jp
push
cmp
and
push
es
leave
push
sub
push
xor
repnz
add
add
jae
add
pop
ja
bound
cmp
or
mov
adc
mov
xchg
add
jno
cltd
add
cmpsl
pop
adc
pop
dec
push
in
pop
ja
cmc
ljmp
adcb
daa
sub
test
pop
insb
adc
sbb
push
or
adc
cli
mov
aad
loope
xchg
push
and
rcrb
adc
jno
cltd
cltd
mov
imul
mov
test
or
jg
and
push
scas
in
sub
scas
lahf
lea
cltd
push
insb
mov
repz
mov
jmp
lret
arpl
fistpll
cmpxchg
dec
lods
sbb
lahf
dec
mov
in
xchg
mov
int
inc
push
pop
cmp
or
aas
pop
scas
inc
fmul
inc
adc
push
mov
outsb
aad
mov
add
aad
out
jae
jne
mov
cwtl
push
lea
and
into
and
das
nop
or
imul
in
stos
ljmp
data16
mov
jae
push
aaa
jns
pop
fists
jg
ljmp
ja
lock
sbb
into
out
mov
sub
hlt
not
mov
lret
xchg
xchg
in
frstor
loop
or
mov
pop
fldpi
add
subb
inc
aaa
stos
jb
sti
test
push
shll
xchg
mov
data16
movsl
cmp
in
push
add
xor
movsb
adc
sbb
adc
in
std
mov
lods
inc
mov
gs
insb
insb
push
xor
inc
push
dec
xor
jmp
gs
rolb
jge
pusha
test
pop
lret
call
pop
mov
jb
inc
mov
sbb
icebp
cmp
mov
ret
fldcw
xchg
push
mov
pusha
sbb
xchg
mov
add
pusha
dec
cmc
push
fnstcw
xchg
std
loope
cmp
xchg
imul
clc
test
push
push
mov
inc
in
jns
push
add
mov
jg
lcall
pop
sbb
mov
xor
aam
scas
add
inc
mov
out
shrb
ret
mov
mov
pop
int3
outsl
test
cli
xor
loopne
ret
mov
cmp
rcrb
fistl
add
shlb
mov
call
xor
movb
mov
sbbl
jns
ficoml
mov
xchg
mov
stc
faddp
mov
lret
adc
mov
pop
jp
fcomps
ret
dec
push
insl
mov
jl
inc
jno
cld
push
jp
adc
fdivrl
sub
je
bound
mov
mov
xor
mov
scas
dec
jno
push
sbb
ret
clc
dec
iret
out
adc
xchg
test
pop
mov
xor
and
push
sbb
movsl
xor
or
push
cld
mov
setae
xchg
mov
mov
nop
outsl
jp
loop
mov
stos
xor
push
dec
popf
std
jno
push
bound
in
cmp
xlat
out
cmp
icebp
or
ret
xor
adc
shrl
out
lahf
clc
stos
js
pop
push
mov
pusha
aas
ret
add
mov
sbb
cwtl
insb
movsl
push
test
rorl
mov
mov
xchg
clc
pop
adc
lret
push
cmp
call
ret
xlat
jno
push
dec
or
xchg
test
es
jmp
sub
imul
loope
or
imul
mov
sbb
pop
out
push
cmp
shlb
scas
xor
add
mov
and
and
lret
jae
int3
cmp
out
repz
push
nop
fcmovb
xchg
or
mov
xor
out
stos
jne
xor
push
lret
push
sbb
icebp
xchg
fwait
jg
adc
mov
mov
frstor
dec
add
xchg
in
sub
xlat
ror
jle
aaa
into
cmp
mull
pop
mov
sahf
pop
mov
mov
xchg
cmc
ja
and
into
and
sti
xchg
das
xorl
in
jae
into
cmp
loop
ja
push
decb
jp
ja
inc
scas
xchg
xchg
push
mov
pop
rcll
push
or
push
jg
adc
pusha
scas
icebp
lods
pop
ljmp
insb
popf
cmp
das
cmp
test
inc
xchg
dec
aas
or
mov
mov
mov
xor
int
push
arpl
xchg
mov
dec
lock
enter
mov
jbe,pn
decb
xchg
shlb
pop
add
shrl
hlt
mov
out
in
out
adc
xor
lea
mov
jmp
js
adc
les
ljmp
daa
mov
push
into
push
fwait
out
mov
cmpsb
outsb
sbb
mov
jo
test
xchg
push
shll
movsb
push
imul
sbb
cmpsb
add
mov
xor
add
pop
pop
pop
in
pop
sub
cmp
jno
or
pop
mov
or
xor
pop
mov
mov
mov
mov
push
fstp
jp
addr16
scas
aaa
and
pop
fidivrs
jmp
cmc
leave
xchg
dec
nop
pop
pop
subl
jecxz
mov
inc
fwait
outsb
and
js
pop
or
sub
aaa
adc
dec
das
xchg
and
sub
push
int
cmp
icebp
sbb
mov
jecxz
jp
arpl
stos
mov
mov
inc
cmp
xor
jle
aaa
outsb
inc
ret
loopne
cli
movsb
das
mov
xor
pushl
push
jo
and
jb
pop
mov
loop
mov
andb
aad
mov
outsl
jg
dec
lcall
sub
push
out
cwtl
mov
int
fwait
stos
xor
imul
and
sti
ret
jne
mov
sti
cmp
cltd
mov
pop
inc
dec
mov
iret
subl
push
je
std
mov
push
cmc
int3
and
push
mov
test
test
addr16
xor
pusha
shll
inc
pop
mov
lods
int3
inc
repnz
adc
aaa
lahf
loopw
push
add
mov
and
jmp
add
add
lcall
dec
aas
jbe
pop
movsl
cmp
insl
jl
scas
iret
dec
lret
fwait
scas
pop
push
mov
adc
push
pop
jne
aam
jb
into
lods
cs
xor
push
enter
xchg
fistl
sbb
leave
int3
cmp
adc
repz
repz
sbb
cmp
std
adc
and
mov
je
cli
sbbl
jg
fldl
push
xor
repnz
test
fisttpl
xchg
addr16
lcall
aaa
in
push
lds
push
sarb
rorb
inc
cmp
adc
in
mov
in
ja
push
mov
xchg
pushf
push
int3
cmp
in
add
xor
out
outsb
cmp
dec
jg
in
nop
jns
or
mov
int3
or
out
cmp
mov
fmul
in
loopne
xchg
xchg
cmp
xchg
adc
jo
outsl
mov
lcall
inc
dec
sub
fwait
loop
ss
sbb
add
movsb
mov
jb
jae
mov
enter
adc
out
loopne
addr16
jbe
adc
ret
sub
mov
cltd
ret
push
in
mov
subb
loope
and
pop
sub
add
add
ss
inc
lock
hlt
dec
shrl
push
movsl
mov
and
movsb
es
adc
dec
and
or
addr16
pop
xchg
jecxz
pop
loop
sub
mov
jae
in
add
mov
enter
dec
sub
jle
and
negl
push
test
mov
add
or
mov
inc
inc
gs
or
neg
daa
push
mov
mov
cmp
stos
pushf
xchg
sub
inc
sbb
adc
xchg
rol
sbb
or
push
dec
push
xchg
mov
xor
pusha
lret
push
adc
sub
cli
bound
popa
jne
ret
inc
out
sarb
enter
stos
xor
mov
popf
dec
cmp
scas
sbb
insb
orl
arpl
xor
sbb
jle
cli
gs
pop
iret
fcmovb
shrb
mov
xlat
fwait
das
pop
ret
call
add
mov
je
mov
sarb
cmp
add
test
into
es
cmc
dec
gs
jne
in
adc
ret
inc
shrl
and
dec
mov
in
mov
mov
or
sbb
sbbl
inc
mov
testb
dec
data16
dec
inc
or
stos
pop
dec
rorl
jnp
push
cmp
xchg
dec
fs
mov
loope
ss
stos
dec
mov
addr16
fucompp
stc
sbb
and
add
fdivl
sbb
mov
das
daa
mov
mov
test
jmp
sub
iret
jmp
jp
test
sti
mov
iret
push
icebp
rorb
aas
xchg
movsb
clc
inc
inc
mov
aas
mov
add
stos
mov
mov
mov
popf
mov
dec
pop
lods
add
int
and
jae
int3
ja
mov
aad
or
aam
push
xchg
aad
or
shlb
ret
and
jl
adc
orl
adc
aaa
call
pop
or
fnstcw
ret
lods
pop
mov
mov
jnp
or
xor
xor
mov
and
xor
cmc
adc
fcoms
out
mov
cmp
sub
fisttpll
movsl
pop
adc
xor
leave
dec
push
mov
pop
mov
sbb
and
in
stc
xchg
adc
cmp
jg
mov
jmp
clc
push
inc
inc
movsb
jae
jge
orb
je
sub
mov
popa
es
mov
or
mov
popf
lret
fisubl
outsl
pop
jae
out
mov
cld
out
mov
and
sub
dec
sbb
jnp
adc
pop
test
call
shr
push
aam
pusha
inc
sbb
or
push
in
mov
popa
call
das
pop
lods
enter
cwtl
fdivrl
rolb
push
sahf
repnz
add
out
jbe
out
pop
xchg
jno
inc
aaa
dec
sbb
sti
jb
push
mov
std
int3
mov
mov
ss
inc
dec
stc
jo
test
jne
push
imul
clc
push
ret
pushf
xchg
shll
inc
add
fldl
sbb
adc
loope
pop
sbb
add
rol
icebp
jbe
insl
pop
xor
xor
dec
out
mov
push
add
andl
shrl
mov
jle
lods
push
add
fidivs
add
stos
lods
push
out
fldcw
and
xchg
push
ret
mov
inc
pop
add
cld
xor
out
or
test
mov
or
push
fcomi
fstp
ds
sbb
inc
add
enter
fs
dec
je
fs
push
hlt
sarb
push
jno
js
movsb
xor
mov
mov
sub
sub
insb
andl
popa
cmpsb
or
jne
sarb
add
push
or
xchg
push
push
add
cld
movsl
cltd
add
iret
ljmp
stos
adc
push
fdivrp
jbe
pop
fs
dec
mov
ss
outsb
lret
jae
sbb
shrb
aas
sti
repz
imul
push
icebp
or
jae
fstl
add
rcrb
mov
inc
fwait
lods
jo
orl
inc
fwait
ljmp
mov
push
and
lds
or
sub
je,pn
repz
add
xchg
pushf
sti
fs
pop
xchg
inc
aaa
jbe
adc
sti
adc
mov
inc
pop
push
push
push
aad
rcll
cmp
int
in
inc
xlat
test
jl
movsb
shrl
and
jl
imul
xor
xorl
jl
int
fwait
add
test
push
jns
adc
aam
xchg
adc
sbb
int3
xor
push
pusha
notb
mov
shr
jp
in
pop
add
pop
inc
lret
pusha
adc
lahf
loop
cmp
dec
xor
lods
mov
jbe
pop
and
jo
fmull
cli
loop
inc
sub
insl
addr16
adc
jecxz
int
mov
adc
ficomps
mov
in
mov
sbb
mov
jp
loope
dec
push
imul
adc
mov
popa
out
sarl
pop
cmpsb
scas
push
mov
cmp
jb
mov
cmc
lcall
and
jg
mov
das
adc
imul
pushf
testb
leave
xchg
andb
or
nop
mov
clc
test
mov
xchg
jmp
mov
dec
add
divb
inc
jp
pop
gs
sub
mov
sub
into
in
dec
jge
iret
jns
push
pop
cwtl
xor
ljmp
mov
sbb
xchg
adc
mov
add
inc
add
in
aam
and
xor
or
int
aas
or
jmp
mov
clc
rcl
mov
popa
cmp
cmpsb
xchg
and
add
pop
and
add
pop
aas
sarl
test
xor
mov
ret
or
pop
mov
mov
sbb
out
mov
adc
jmp
cmp
sbb
jne
pusha
test
test
dec
xor
dec
pusha
lahf
pop
pop
or
mov
mov
xchg
jmp
std
rcl
insb
sub
push
mov
stc
sbbb
mov
and
call
dec
dec
shll
pop
ficomps
adc
imul
es
incb
adc
pusha
clc
rorb
dec
mov
js
xchg
enter
ret
es
pop
push
xor
sbb
scas
stos
lods
xor
into
fsubl
inc
js
inc
mov
int
pop
jp
gs
hlt
cltd
adc
or
imul
mov
jae
dec
test
hlt
in
fstpt
mov
movsb
xchg
in
or
mov
xor
push
mov
sbb
mov
cmpsb
lock
dec
mov
mov
repz
stos
sub
std
jnp
or
xchg
test
test
xchg
dec
std
mov
jae
mov
sbb
into
inc
push
jnp
mov
scas
jge
xchg
push
pushf
and
pop
enter
outsl
mov
xchg
sub
clc
daa
cs
ret
dec
push
daa
mull
sbb
push
rolb
std
cli
push
adc
imul
jp
pop
scas
push
cmp
sub
ds
bound
lods
call
or
push
pop
ljmp
addb
inc
movsl
dec
sub
outsl
out
rcll
ja
sub
inc
mov
jge
dec
push
xchg
add
push
xor
adc
mov
cltd
hlt
push
and
jmp
jno
xchg
repz
cwtl
enter
das
mov
jb
inc
ficomps
pusha
pop
adc
adc
loopne
movsl
mov
aad
sbb
mov
sahf
inc
cmp
ret
rorl
sbb
push
adc
mov
iret
aam
xor
pushf
mov
dec
data16
sub
add
adc
imul
inc
ss
cltd
mov
enter
mov
and
leave
or
fsubrp
popa
fsub
or
pop
xor
jmp
imul
and
and
sub
push
insl
xchg
inc
outsl
cmp
fldenv
sbb
or
lods
sub
movsl
cmpsb
jmp
out
mull
cmp
jmp
pushl
cmpsl
js
mov
dec
scas
add
mov
mov
lret
mov
addb
cmpsl
xlat
push
mull
sbb
adc
add
int3
je
inc
xor
push
iret
mov
pop
sbb
cmpsb
push
iret
inc
rclb
pop
jo,pn
xchg
punpcklbw
adc
xor
fisubrl
mov
or
push
sbb
in
push
push
daa
scas
add
fnstsw
dec
es
inc
in
xlat
cmp
decb
pushf
pop
sbb
pop
sbbl
cltd
lret
push
cmpsl
mulb
pop
popa
jne
xchg
sahf
xor
mov
mov
ljmp
xor
mov
cmp
mov
add
fsubr
hlt
xor
cmpsb
push
fwait
das
add
xor
aam
rclb
cmc
cmpsb
sbbl
scas
or
aad
xor
in
push
std
mov
mov
enter
movsl
lds
sub
or
sti
lods
insb
je
pop
add
imul
pop
mov
pop
mov
or
loop
aad
cmp
jg
test
mov
shll
mov
scas
xchg
es
outsl
scas
cltd
shll
pop
movsb
push
cltd
mov
and
hlt
sub
mov
dec
xor
mov
pop
andl
add
push
and
jmp
or
inc
sub
sbb
push
sbb
dec
add
out
aas
sti
movsl
pop
out
fwait
jbe
add
sub
ret
mov
xchg
xlat
into
xchg
pop
or
fstps
dec
repz
imul
daa
add
pop
fildl
inc
push
fcompl
jns
pop
outsl
mov
and
or
sarb
mov
lods
lahf
xchg
aad
sub
es
sarl
sub
clc
mov
pushf
sbb
cmp
and
cld
pushf
fstl
js
test
xor
notl
pop
sub
pop
xor
and
in
add
push
lret
lcall
push
lcall
std
xlat
add
pop
mov
fxch
out
stos
sbb
jo
aaa
xlat
or
dec
std
cs
push
or
jle
xor
or
repnz
stos
mov
rolb
cmc
jne
adc
mov
xor
sub
adc
and
out
and
stc
adc
aaa
inc
lret
call
leave
fsubrs
fmul
loope
ret
fcom
mov
cmp
xchg
mov
pop
sbb
pop
sbb
sti
aad
js
test
sbb
ljmp
mov
aas
jmp
sub
push
jno
dec
sbb
jp
mov
testl
sahf
jb
inc
test
hlt
loop
and
je
andl
pop
jg
leave
jecxz
insb
je
cmpsb
mov
loope
addr16
ds
es
lea
pusha
out
cmpsb
insb
pop
out
leave
mov
outsl
add
das
sbb
add
add
xchg
pop
lea
dec
imul
xor
sbb
xor
lcall
xor
cmp
xor
pop
xchg
loope
daa
aaa
add
sub
loopne
sbb
add
rcrl
push
setp
sub
sbb
fst
mov
out
mov
mov
addb
add
adcb
xor
out
nop
push
mov
dec
or
jl
ljmp
clc
les
mov
pop
xor
mov
mov
adc
pop
insb
hlt
xor
leave
cmpsb
xorb
mov
test
lds
mov
insb
and
jno
test
imulb
add
into
jp
xchg
adc
mov
in
pop
pop
les
cmp
xchg
in
or
bound
daa
orb
je
inc
addr16
lret
cmpsl
xchg
lahf
xor
out
fidivs
cmp
popf
mov
push
cmpsb
inc
pop
mov
pushf
rcll
dec
adc
notl
pop
sbb
cmpsl
or
jl
xchg
sub
sub
imul
xchg
mov
lods
dec
test
into
stos
pop
arpl
dec
pop
arpl
add
lcall
mov
mov
outsb
std
scas
popa
pop
ret
out
pop
int
mov
sub
xchg
sbb
jne
jp
sub
or
js
pop
fwait
mov
mov
add
mov
nop
test
mov
push
fwait
fwait
push
push
fcomps
jae
and
xor
mov
out
adc
xchg
or
xor
xchg
sub
add
push
lret
and
stc
cmp
incb
fs
lret
jae
inc
adc
xor
xor
sbb
jg
int
push
sahf
xor
pop
inc
movsb
or
sub
in
dec
push
rcrb
fs
mov
jge
inc
inc
xor
jno
pop
mov
push
cwtl
iret
xchg
out
loope
sbb
fcomps
push
or
int3
adc
clc
cmp
and
adc
lds
mov
inc
pmulhw
mov
leave
popf
inc
dec
jmp
xor
lods
notl
adc
fsubr
cvtps2pi
jbe
sahf
loope
movsb
fmulp
pop
ss
push
negb
int3
icebp
lahf
cs
pop
jbe
fmul
xchg
cli
lods
mov
xor
push
sbb
pop
mov
ljmp
mov
fwait
mov
mov
mov
insb
icebp
xchg
int3
dec
or
xchg
mov
ror
mov
mov
testl
push
dec
movsb
in
in
mov
jae
mov
mov
sbb
mov
add
or
testb
jne
inc
addr16
rorb
jmp
cmp
push
pop
xchg
mov
outsb
ret
dec
jo
cmp
aas
pop
test
fwait
rolb
jecxz
and
sbb
mov
ret
int
and
fs
sti
and
jae
arpl
sub
aaa
sbb
outsl
cmpsb
shr
sub
and
imul
inc
adc
ret
push
negl
mov
ret
sbb
mov
jo
test
sbb
mov
jne
push
jmp
inc
ljmp
pop
xchg
sbb
cmp
icebp
cmpsl
mov
adc
mov
push
insl
inc
sti
and
rcll
sbbl
sbb
scas
push
mov
jae
mov
push
insl
loope
in
cmp
or
outsl
pop
out
outsb
pusha
add
adc
js
mov
inc
mov
rorl
fst
inc
pop
shrl
adc
pop
aaa
push
dec
movsl
xchg
adc
ja
in
rcrb
ret
arpl
pop
rcr
dec
pop
ja
mov
pop
xchg
or
push
imul
add
or
ror
xlat
dec
scas
fnstsw
jb
scas
pop
mov
inc
add
cmp
inc
int3
addr16
out
adc
cmp
jecxz
ret
mov
cmp
add
lods
out
movsb
arpl
mov
stos
inc
pop
icebp
jbe
sbbb
push
test
mov
loopne
loope
jae
push
fstl
xchg
push
clc
imul
enter
clc
inc
hlt
dec
arpl
in
hlt
mov
outsl
imul
cmc
outsb
push
jle
nop
jge,pn
jb
ret
enter
cmp
dec
addr16
sub
mov
and
mov
xchg
ret
test
mov
ja
add
pop
imul
aas
push
loop
mov
xchg
sub
sub
sub
inc
es
pop
jecxz
jb
lret
imul
push
lods
ret
filds
mov
xor
jbe
out
pop
mov
xor
rolb
and
stos
push
and
sahf
out
push
int3
popf
xchg
iret
sbb
xchg
fsub
mov
cwtl
ds
push
aam
repz
mov
fucom
jno
addr16
clc
aaa
ret
lea
idivl
addl
xchg
out
mov
cmp
shll
or
aas
push
aam
lret
mov
divl
pop
fcoms
dec
mov
fildl
mov
mov
jns
daa
jl
movsl
push
mov
xlat
push
call
fs
inc
add
or
push
imul
cli
pop
mov
cmp
movsl
test
int
outsb
jns
dec
mov
es
dec
cmpsl
push
lods
ss
dec
mov
jmp
jp
sbb
call
test
ret
clc
adc
stos
and
aad
mov
pop
loope
add
fdivl
sti
sub
cmpsb
ss
push
xor
adc
xlat
sti
fistpl
dec
push
rcl
not
xchg
mov
pop
imul
sbb
mov
pop
sub
lcall
cmc
jo
mov
mov
jg
mov
or
sub
xchg
test
cmpb
sub
xchg
lahf
out
xor
das
in
rcll
push
mov
lock
stos
xchg
fsts
fs
cs
ffree
jns
xor
cs
jle
int
dec
aad
sahf
xor
add
inc
je
pop
es
dec
shlb
or
cmp
pop
ljmp
aam
push
xchg
jmp
vmread
inc
mov
aam
inc
fnstenv
jb
mov
jae
movsb
sub
mov
xlat
dec
test
pusha
inc
jg
pop
cltd
in
jmp
scas
inc
push
js
ss
cmp
fwait
xchg
push
fyl2x
enter
pop
mov
dec
das
pop
icebp
xchg
outsl
sbb
scas
adc
push
jo
cs
std
imul
mov
mov
push
imul
jl
xchg
jne
and
cltd
mov
rcll
mov
lret
mov
aaa
cld
fsubrs
adc
mov
pop
push
dec
cmp
movsl
repnz
jo
jmp
test
fidivrl
or
pop
dec
jl
ljmp
mov
cmp
and
fmull
adc
fcompl
sbb
and
cmp
sahf
inc
mov
jmp
xchg
and
add
stc
fs
xchg
pop
mov
mov
xchg
test
or
jb
mov
mov
inc
lods
shll
cmp
test
sbb
aas
es
inc
mov
in
xor
lret
dec
cmc
jae
ficoms
mov
mov
mov
and
mov
sub
lods
jns
call
jecxz
dec
add
test
stos
stos
adc
and
loope
ret
inc
lret
cwtl
pop
inc
aam
adc
pushl
pop
adc
xor
add
es
dec
xchg
idivl
inc
jbe
inc
addl
mov
scas
sbb
or
jmp
xor
pop
mov
add
imul
lret
in
and
enter
jno
aam
cmp
sti
or
iret
push
in
dec
cs
test
dec
out
test
sbb
mov
leave
sbbl
or
into
cmp
in
pushf
imul
mov
cs
and
aaa
and
jbe
push
test
mov
add
insb
sub
add
sahf
orl
in
inc
ds
push
mul
inc
sub
xchg
jo
inc
ret
insb
adc
and
dec
ror
ret
das
push
andl
fists
push
dec
lret
hlt
inc
add
test
push
scas
sbb
mov
testl
push
jae
in
stc
lods
mov
adc
loop
push
pop
inc
xchg
jae
loopne
sub
jno
pop
and
orl
xor
lods
xor
js
cltd
push
popf
test
js
fisttpll
and
clc
dec
sub
out
lock
scas
xchg
insb
pop
cmp
fs
int3
shl
arpl
or
ljmpw
scas
arpl
stos
insl
xchg
ljmp
loop
jo
dec
or
sub
sub
jo
sahf
adc
xorl
xlat
inc
cld
enter
mov
enter
iret
enter
call
inc
and
or
arpl
loopne
mov
repnz
cmp
sbb
mov
adc
adc
shl
in
mov
pop
or
test
add
aas
push
sbb
jae
push
in
dec
cs
push
xlat
mov
xor
cli
push
mov
fwait
mov
movsl
jecxz
push
hlt
jp
out
pop
pop
xor
mov
arpl
jnp
inc
loop
mov
sbb
cltd
test
test
xchg
and
or
mov
daa
pop
cmp
decl
loop
fistps
popf
pop
addr16
test
dec
stc
mov
sbb
or
insl
icebp
mov
adc
leave
and
pop
cmp
mov
mov
push
daa
into
into
fsubr
in
das
out
pusha
adcl
inc
push
popa
and
repnz
xchg
addl
pushf
sbb
xchg
repz
and
mov
int
stc
je
cmp
out
in
or
jbe
mov
push
stc
jmp
fldcw
scas
dec
sub
shrb
mov
pop
mov
add
cld
in
mov
jmp
or
lods
out
nop
out
popa
out
cmp
js
cmp
idiv
sbb
inc
gs
mov
mov
xor
call
les
loopne
mov
mov
lahf
jbe
cltd
adc
adc
pop
xor
shlb
add
adc
lock
mov
adc
ja
xchg
cmpsb
xchg
mov
ja
aam
shl
in
lcall
loope
aaa
addb
sbb
pop
add
jnp
cmp
pop
mov
push
rcl
lahf
adc
rorl
das
sub
aas
insb
aam
rorb
bound
inc
or
push
mov
pop
push
xchg
test
in
loop
fwait
pop
adc
add
xor
ljmp
jb
mov
imul
dec
or
ret
aas
out
imull
xchg
jp
hlt
pop
push
out
cmp
mov
add
movsb
sub
xor
push
pop
mov
adc
in
pop
fsubl
lahf
loop
jecxz
fisttpll
or
lret
clc
mov
enter
lret
cmp
js
dec
mov
adc
std
jg
lahf
inc
lret
fincstp
xchg
inc
stc
rcrl
pop
ret
cmc
addb
inc
mov
rcr
nop
mov
mov
mov
into
jnp
out
or
scas
and
fbstp
int3
xchg
fidivs
ss
lcall
add
dec
push
or
pop
cmpsl
out
shr
cmp
jmp
outsb
push
push
cmc
sbb
out
loope
mov
mov
cli
hlt
xchg
jg
push
mov
das
sbb
sbb
xchg
add
jmp
dec
add
cmc
ss
inc
js
clc
push
mov
sti
adc
scas
sub
stos
iret
dec
int3
jae
jp
add
inc
data16
jge
in
pop
sbb
jb
mov
pmaxub
mov
sbb
clc
and
in
mov
push
aad
mov
xchg
cltd
inc
scas
insb
call
mov
dec
shrb
jns
out
push
scas
jp
adc
pop
sarb
push
push
push
mov
std
imul
and
loope
es
bound
aaa
inc
dec
sub
jae
outsl
popa
ret
mov
out
or
daa
jg
and
mov
data16
mov
jmp
xchg
int
js
iret
jb
iret
add
ret
inc
sub
hlt
jl
jno
iret
lcall
scas
outsb
mov
push
movl
push
ss
pusha
xchg
daa
mov
xor
and
sub
rclb
pop
or
pop
inc
sub
data16
sahf
push
imul
les
nop
and
jb
mov
out
es
arpl
add
pushf
fucomi
lock
or
pop
dec
jle
push
jae
mov
imul
mov
in
sbb
movsl
mov
mov
clc
and
jnp
push
popa
movsl
ljmp
sub
lea
jne
out
aad
test
xor
dec
mov
dec
dec
mov
xor
add
test
pop
fnstenv
leave
movsl
sbb
sti
inc
sub
mov
jecxz
mov
jbe
outsl
test
scas
ljmp
add
cmp
stos
rorb
sub
jmp
andl
push
jp
addr16
push
push
pop
outsb
lcall
test
arpl
ss
mov
ss
jp
out
cmpsb
sbb
push
or
sbb
xor
mov
stos
and
cwtl
insb
dec
rcll
push
push
jecxz
lods
push
or
mov
lods
fldcw
push
pop
ffree
outsb
pop
or
jg
or
pop
mov
movb
fsubrs
mov
hlt
sub
pushf
test
mov
mov
nop
insl
pop
jo
lock
xchg
lods
pop
sub
fidivl
xor
fs
add
dec
inc
in
test
add
mov
xchg
aas
int
aam
mov
lds
push
cmpsb
add
xchg
mov
lret
loop
mov
test
cmc
sbb
push
pop
and
pop
lods
mov
mov
das
xor
into
lahf
sbb
cs
in
movswl
lret
pop
addb
push
sub
adc
sbb
push
addl
mov
xor
pop
cmp
pminub
popf
shrl
mov
movsl
inc
lret
xchg
out
push
jp
js
and
fdivl
dec
repnz
ljmp
xor
pop
das
testl
sub
mov
pusha
or
imul
cmp
push
and
push
add
insb
test
sub
stc
leave
shlb
inc
dec
sarb
jle
lods
or
scas
arpl
sub
ds
dec
sbb
jbe
subb
gs
lahf
aas
pop
mov
sub
fmuls
or
ja
fyl2xp1
es
in
cli
imul
or
dec
cmpb
xchg
mov
adc
in
adc
addr16
xchg
inc
mov
mov
rcrb
cmpsb
mov
popf
xor
lret
imul
lock
test
or
fs
inc
mov
xor
ficoml
pop
sbb
push
mov
int3
xchg
inc
test
or
sarb
dec
mov
and
and
adc
test
adc
popa
push
shlb
cmp
xor
lret
divb
fcoml
xlat
mulb
mov
lret
mov
pop
enter
xor
sub
dec
inc
mov
mov
clc
fdivl
loop
sahf
add
jae
flds
inc
inc
inc
jo
in
dec
mov
cwtl
test
or
and
xchg
xchg
pop
add
cmp
cs
fiadds
pop
arpl
test
pop
xchg
sbb
jp
push
pop
xchg
and
enter
cmp
lret
bound
sbb
jmp
imul
xchg
lds
call
orb
jno
mov
cli
fisttpl
daa
adc
mov
mov
rorl
push
adcl
mov
mov
fidivl
xchg
fbstp
xchg
inc
lds
cmp
mov
pop
imul
hlt
stos
shrl
lret
fstl
push
mov
sbb
or
mov
popf
pop
xor
sub
jne
pop
add
setae
cmpl
and
icebp
inc
dec
add
iret
int
out
sub
shrl
repz
pop
das
rcr
adc
pop
aas
xor
ss
mov
inc
xchg
sbb
push
scas
push
adc
sub
mov
jle
push
pop
repnz
or
adc
repnz
pusha
lret
movsb
or
arpl
out
jo
pop
and
inc
jle
xchg
and
or
mov
scas
and
fsubrp
jg
cmp
mov
jno
cmpsl
sub
leave
subb
inc
xchg
imul
sub
or
or
aam
and
mov
fistpll
test
es
movsl
fisubl
xchg
jecxz
mov
aad
loopne
xor
dec
pop
sbb
fdivl
push
mov
mov
push
or
sub
addl
adc
push
adc
in
mov
cmp
cmp
sbb
scas
loopne
int
fs
inc
jl
mov
arpl
shl
movsl
sbb
repz
xchg
lcall
xchg
in
jno
lds
andb
push
je
jbe
mov
stos
pop
sbb
xor
mov
xchg
fimuls
imull
push
iret
neg
loope
xchg
mov
push
aam
and
sub
adc
inc
inc
mov
fbld
fs
cmp
xchg
lret
cmp
fcomi
loop
stc
fs
arpl
mov
jns
inc
pop
rcrl
js
outsl
mov
push
mov
dec
push
shlb
jmp
movsl
xor
and
imul
rclb
push
jecxz
ret
dec
mov
mov
xchg
std
into
xor
dec
shlb
movl
adc
adc
stos
inc
pusha
hlt
ret
mov
divb
rcrb
aam
push
push
mov
mov
lods
push
std
shll
fdivl
dec
pop
arpl
dec
nop
inc
xorb
das
hlt
insb
push
mov
cmp
push
bswap
and
pop
pop
inc
and
inc
push
loope
pop
push
cmpsl
xchg
int3
inc
in
enter
fistpll
and
imul
or
dec
daa
mov
shll
inc
push
xor
fimuls
scas
test
dec
mov
mov
mov
mov
mov
adc
sbb
mov
pop
arpl
int
pop
out
imul
imul
cmp
mov
mov
hlt
push
fdiv
movsb
pop
adc
xchg
mov
dec
outsb
add
into
inc
icebp
sub
sub
lods
std
sbb
adc
inc
mov
add
push
mov
int3
adc
out
adc
enter
sti
je
lcall
cmp
call
adc
mov
stc
mov
xchg
jbe
leave
or
dec
popa
xchg
stos
lret
sub
pop
sub
mov
mov
les
dec
lahf
ret
cwtl
ficompl
pop
cmc
stc
pop
std
repnz
sbb
loop
lds
aam
roll
scas
xchg
addr16
cmp
xchg
mov
jecxz
push
lock
cld
cltd
or
cmc
or
mov
inc
sub
call
lret
rolb
addr16
push
fisttpll
insl
lea
mov
flds
adc
je
mov
jo
cli
jbe
imul
push
sbb
mov
sbb
mov
stos
xor
loope
or
add
pushf
in
xor
fdivr
shll
ret
daa
xchg
rclb
gs
adc
xchg
les
or
push
clc
sbb
in
popf
out
xor
les
pop
adc
mov
enter
dec
mov
call
repnz
cmp
cltd
rorb
stos
cs
xlat
push
push
inc
and
clc
sub
add
fdiv
push
repz
xor
divb
xchg
cwtl
cmc
dec
or
fiaddl
sbb
jae
jmp
loope
push
add
sub
sbb
and
push
into
push
adc
lret
std
sbb
adc
xchg
imul
daa
je
push
dec
xchg
jle
aad
pop
sbb
inc
cmp
in
adc
js
add
loope
jg
int3
int3
and
jle
cwtl
sbb
sub
hlt
mov
inc
dec
cmpsl
cmp
pop
inc
push
xor
pavgw
loopne
mov
pop
rcrl
ljmp
jnp
jo
stos
mov
aas
jge
mov
pop
dec
dec
int3
mov
scas
cmpsb
dec
shl
xchg
adc
icebp
out
pop
lahf
jb
int3
out
data16
stos
pop
jp
and
aas
cmpsl
insl
or
sub
xorl
cmp
popf
test
jo
out
inc
or
arpl
adc
dec
cmp
leave
dec
lahf
adc
js
mov
lea
xor
sahf
out
sbb
pop
das
fnstsw
ss
adc
dec
fwait
pop
xchg
neg
cmp
ret
xchg
mov
mov
test
mov
hlt
pusha
cld
cmpsl
mov
jge
lcall
xchg
xlat
sbb
test
xchg
stc
imul
cmc
es
ljmp
scas
scas
adc
mov
movsl
addb
xor
mov
sbb
out
push
lret
fprem1
jecxz
pusha
mov
cmp
cmpb
outsl
adc
lret
ror
ja
push
cld
aam
popa
dec
xchg
push
and
into
mov
and
mov
gs
or
sbb
cmc
test
mov
rcrb
mov
xchg
push
dec
and
into
push
lret
cld
and
push
testb
jne
xor
cmpsb
mov
lds
cmpsl
pop
xor
cmp
dec
cld
arpl
dec
cmpl
pop
gs
ret
in
and
dec
jecxz
add
dec
repz
ljmp
popa
dec
cmp
lods
cmp
pop
lret
mov
in
jbe
xchg
out
cld
add
incb
push
cld
xor
scas
add
loopne
inc
push
or
loope
lahf
inc
mov
stos
inc
aaa
repnz
inc
imul
testl
test
vucomisd
xchg
orl
mov
lahf
mov
push
stc
push
mov
fildl
jle
hlt
add
iret
dec
mov
sti
outsb
jge
dec
cmp
inc
push
and
jne
mov
fwait
aas
adc
fstl
or
adc
popf
push
push
cmp
adc
adc
outsl
loopne
cmpsl
mov
mov
int3
ret
pop
mov
int
mov
inc
fcomps
push
lea
xor
jg
loop
push
in
in
push
clc
jbe
jae
or
xor
call
and
adc
pop
cli
test
es
cwtl
outsb
xchg
or
xchg
push
xor
hlt
cld
std
std
mov
mov
dec
mov
cmpsb
sub
add
idivl
int
push
cs
sbb
cltd
loop
adc
fs
je
add
push
ja
pop
clc
lods
lds
jae
jp
push
xor
jne
mov
lahf
nop
sub
push
cmp
bnd
sbb
jg
std
jge
or
push
shlb
fsts
xor
cmp
enter
in
leave
cmpsl
int3
addr16
arpl
andl
fldenv
mov
adc
xor
sbb
data16
aas
divb
inc
jg
pop
jnp
push
sub
lret
ret
adc
xchg
cld
dec
push
fcomps
les
push
jnp
and
lret
pop
mov
cli
ja
jmp
out
inc
je
pusha
psubusw
jne
mov
xlat
push
out
push
adc
hlt
imul
sub
loopne
hlt
cmpb
and
jp
fdivl
loop
aad
fnstsw
push
mov
and
dec
sti
in
sub
or
divl
mov
mov
mov
ret
dec
iret
imul
fistpl
movsl
int3
jb
pushw
fcomi
xchg
popf
and
xchg
mov
add
push
lods
sbb
cmpl
sub
fdivrs
fbstp
fsubl
loope
in
cltd
test
ret
mov
inc
xor
and
les
sarl
sub
mov
rcll
daa
jnp
mov
mov
shll
cltd
xor
or
nop
cld
icebp
fists
push
cmp
inc
jmp
loope
jle
out
lcall
popa
mov
in
into
imull
xor
adcb
ds
js
inc
stos
jns
out
shl
adc
aaa
je
movsl
jnp
mov
cmpsl
and
dec
xor
in
mov
repz
cmp
adc
inc
cld
or
adc
out
mov
js
clc
mov
and
in
outsl
adc
sbb
insb
lea
xchg
mov
outsb
outsb
or
aaa
icebp
or
hlt
push
jle
adc
std
shll
ret
mov
or
and
out
sub
loopne
and
dec
fadd
in
rclb
adc
aad
pop
aam
pop
iret
subb
dec
jge
xchg
jo
pop
sbb
jg
test
in
dec
or
mov
scas
fsubrs
test
test
fidivrl
cmp
cmpsl
dec
push
xchg
sub
andb
adc
mov
xchg
movsb
cmp
push
into
repnz
cmpb
xor
clc
sub
mov
sbb
xchg
ljmp
into
mov
push
leave
out
icebp
jmp
sbb
mov
ljmp
cmp
dec
test
test
push
addl
stc
pop
test
stos
pop
pushf
cwtl
adc
sub
sub
pusha
or
sbb
ja
inc
repz
dec
jae
push
push
lret
loopne
jns
test
or
mov
inc
lods
sbb
lea
sub
rolb
push
inc
jne
xor
ds
dec
pop
dec
dec
shrb
pop
lock
shlb
shlb
or
dec
push
sub
int3
xor
sub
mov
mov
sub
mov
push
test
pusha
and
lds
bound
scas
mov
lahf
sbb
jbe
pop
mov
dec
mov
ret
dec
fsubrs
lahf
in
xchg
or
sub
stos
or
xchg
sti
dec
pop
loop
mov
fisubs
stos
pop
ficoml
jo
push
inc
xchg
sbb
sub
in
push
rcll
ficoms
bound
push
push
loopne
jne
cmp
ja
add
aam
jmp
mov
jnp
test
cs
mov
loopne
negl
repnz
mov
inc
jb
mov
popa
fisttps
ret
mov
jecxz
andb
mov
sar
and
push
mov
outsb
cmp
fistl
mov
js
dec
fsubp
sub
in
sbb
adc
je
shl
jecxz
push
out
push
fsts
lds
pop
pop
push
xchg
mov
cld
fstpl
add
loope
aas
or
iret
mov
into
mov
testb
jmp
dec
mov
mov
jno
gs
popf
jns
sti
in
je
xchg
js
aas
jno
or
mov
jns
int
gs
sub
adc
lret
idiv
pop
sub
mov
xchg
push
sub
sbb
inc
dec
lds
cmpsl
mov
les
jne
addl
cmp
lret
jp
loope
adc
test
out
fcompl
inc
lahf
je
mov
cmp
loopne
sub
jecxz
shrl
jno
cld
repz
or
ljmp
pop
xlat
push
push
xor
ss
iret
arpl
push
pushf
push
cmpl
jno
outsb
daa
rcrl
jae
sahf
test
test
scas
mov
sbb
or
push
push
xchg
sbb
iret
repnz
sahf
xor
pop
mov
cmpsb
mov
adc
pop
loopne
mov
fucomip
jmp
aas
ret
cmp
test
or
mov
repnz
hlt
in
xor
test
ljmp
adc
adc
shll
push
sub
insb
in
pop
lret
push
xor
mov
aad
out
cmp
mov
mov
je
sbb
outsb
sub
push
pushf
inc
stos
cmp
mov
cld
insb
xchg
out
mov
hlt
or
mov
incl
jb
test
lahf
cmp
inc
iret
repz
sub
or
fidivs
js
pop
movsl
adc
push
mov
mov
pushl
in
out
int
fadds
sti
pop
data16
inc
out
dec
add
shl
repz
push
push
cmp
sbb
or
or
leave
sbb
enter
stos
loope
aad
bound
mov
inc
into
add
imul
push
loope
enter
jmp
or
in
shlb
sbb
loope
mov
int
xchg
pop
mov
xchg
fstl
inc
aaa
cmp
cmp
roll
xchg
cmpsl
out
cmp
sti
jne
jl
inc
jle
add
insb
xor
and
cmpsb
mov
or
pop
jg
test
shlb
cmpsl
test
cmp
in
clc
icebp
xor
fistpll
push
xchg
push
dec
or
or
inc
push
mov
mov
pop
lods
xor
rcl
push
jle
mov
repnz
int
inc
jmp
xor
or
and
std
test
or
cwtl
out
mov
xchg
lret
xchg
ljmp
pop
inc
xor
movsl
jmp
lea
lock
mov
shrb
add
push
xchg
mov
loope
subl
mov
cmp
ret
ds
clc
or
mov
mov
gs
mov
jo
sbb
test
jns
sti
mov
cmpsb
add
sbb
add
sbb
lea
leave
pop
rclb
pop
dec
cmp
jbe
fs
call
inc
lods
pop
pushf
add
addr16
aas
sbb
clc
aas
divb
ret
inc
jae
lods
mov
jo
aam
push
out
sbb
outsl
mov
sbb
lds
or
data16
hlt
cmpsb
pop
jp
jp
insb
mov
ret
movsb
cmp
push
lcall
sub
adc
sbb
xchg
cmp
rcrb
mov
shrl
lret
popf
stc
mov
aas
inc
pop
sbb
mov
cmpsb
add
pushf
mov
sub
lods
icebp
sbb
dec
ds
pop
mov
in
xor
sbb
add
dec
mov
fbld
std
xorb
mov
lahf
sbb
adc
iret
out
jp
mov
and
jmp
dec
push
cmp
cli
inc
in
jecxz
mov
jae
fisttpl
aad
decl
xor
imul
mov
inc
and
fwait
ja
push
adc
xlat
cmc
inc
or
movsb
out
jge
lods
sub
add
push
jae
mov
aam
fwait
lcall
sub
inc
push
or
mov
imul
fdivr
out
lods
mov
ja
cmc
popf
out
rclb
pop
imul
aad
cmp
dec
pop
in
pop
fnstenv
jle
ja
mov
cmpsl
lock
inc
mov
push
sbb
push
jmp
hlt
sbb
and
outsb
pop
fistpll
cmp
bts
cmp
fistl
ficompl
leave
add
faddl
test
jg
dec
outsb
sub
test
je
iret
fadds
sbb
mov
pusha
or
dec
jp
data16
in
jp
jp
pop
adc
mov
es
pop
fs
lods
dec
ljmp
sbb
sbb
flds
push
jns
dec
pop
sub
call
out
ja
mov
inc
flds
adc
or
sub
out
add
sbb
adc
pop
sub
dec
mov
dec
xor
aas
lock
imulb
jne
out
push
mov
pop
xchg
inc
orb
pop
std
xchg
int3
enter
cmp
jl
int
fadds
inc
loope
xchg
push
sub
add
ds
pop
push
stos
cltd
xor
lock
push
fimuls
sbb
scas
aas
push
push
mov
fdivs
out
and
hlt
shl
js
sbb
or
das
xor
and
push
push
icebp
dec
mov
or
cmp
std
test
push
sub
ja
notl
lods
daa
cmp
mov
loope
jmp
add
out
xchg
call
jbe
and
mov
in
subl
imul
pop
sub
add
xorb
sub
and
mov
js
imul
lret
iret
pop
mov
arpl
mov
popa
out
pop
jle
adc
pushf
daa
jp
mov
andl
inc
adc
stos
add
mov
stos
add
cwtl
mov
fimull
out
ja
loope
ds
xor
dec
xchg
inc
dec
sbb
vucomisd
dec
les
and
cmp
enter
adc
cmp
dec
shrl
push
mov
xor
mov
jns
stos
addl
and
test
in
xchg
push
pop
data16
insb
aas
jnp,pn
push
jno
jnp
dec
int3
jp
test
mov
push
mov
loop
jp
mov
sbb
lods
mov
loop
loope
popf
and
sbb
mov
into
adc
adc
test
push
sbb
inc
negl
and
xlat
scas
pusha
in
rolb
je
or
push
out
lea
add
push
push
sub
cmpl
lret
mov
cmpsb
add
lcall
jl
jl
js
pop
dec
sbb
pushf
xlat
jp
cmpsl
adc
ret
call
or
sbb
insl
or
adc
mov
das
cwtl
and
ret
stos
or
inc
fisubrl
shll
cmpl
popl
cmp
mov
adc
ss
aad
lret
and
out
jbe
ud0
lds
add
pop
cmp
pop
bound
ljmp
xor
mov
call
mov
loop
inc
rolb
movsb
push
js
pop
cwtl
xchg
lods
scas
sub
ret
mov
test
lret
or
scas
cmc
sub
pop
sbb
jno
test
fstl
cmp
push
mov
es
movsl
ror
gs
push
mov
jmp
sbbl
mov
iret
lcall
and
inc
test
push
mov
xchg
movsb
jne
notrack
stc
jg
mov
dec
pop
push
sub
cltd
cs
in
inc
xor
jmp
stos
add
mov
ja
lahf
xor
xor
aam
imul
ret
lret
es
testb
orl
fisubrs
arpl
jno
pop
imul
adc
pop
xor
into
aad
pop
pop
test
push
imul
push
mov
iret
sub
lahf
sub
jle
sarb
add
lret
popf
leave
lock
xorl
sub
and
cmp
xlat
lds
not
push
sbb
mov
movsl
daa
dec
or
int3
adc
mov
fwait
outsl
out
int3
aam
mov
mov
jbe,pn
ret
or
insb
pop
outsb
push
or
sub
sub
pop
sub
push
pop
or
imul
in
jge
js
mov
adc
into
outsl
cmpsl
les
aas
push
mov
cmpsl
mov
mov
inc
int
cmp
xchg
mov
adcb
jp
lcall
in
gs
mov
fcmovbe
js
pop
sbb
push
cld
mov
inc
std
push
cmp
jp
loope
pop
sbb
xchg
test
xor
shrb
adc
fmull
je
and
fs
cmp
hlt
dec
icebp
dec
inc
sti
mov
imul
icebp
jmp
lret
push
orl
dec
ljmp
flds
pusha
sub
xor
imul
out
jg
dec
push
inc
add
mov
mov
stos
mov
jno
test
pop
pushf
dec
addr16
mov
movl
add
fs
mov
insb
lock
lock
scas
cmpsb
push
jno
lods
insb
mov
jmp
je
xor
repnz
ja
das
push
adc
push
into
jno
add
ss
lea
xchg
jmp
dec
cwtl
xlat
xor
pop
mov
ss
or
ja
mov
cld
sti
and
test
movb
sbb
adc
mov
sbb
rorl
cmc
movb
pop
xor
pop
es
cmc
cmc
and
dec
push
add
push
sbb
ret
ret
inc
gs
mov
lds
add
cmc
insl
sub
rcll
fistps
sub
inc
aaa
mov
push
lods
add
out
push
dec
mov
xchg
daa
push
push
sub
inc
mov
test
ret
adc
lcall
xor
ljmp
mov
or
mov
jmp
sbb
ljmp
adc
hlt
xchg
xor
mov
push
inc
jne
mov
mov
or
movsb
or
cs
pop
mov
and
movsb
jecxz
test
sarl
jle
jbe
fwait
daa
cmp
mov
mov
insl
mov
sti
pop
jno
out
popf
out
inc
mov
rol
mov
iret
loop
ret
add
inc
xchg
and
lcall
mov
dec
xchg
shr
adcl
mov
pop
sbb
sahf
adc
dec
data16
stos
push
rcrb
mov
or
loope
nop
dec
negl
les
or
aad
inc
int3
jg
fisttpl
xor
xchg
cmpsl
sub
and
outsb
imul
cmp
mov
fucom
idivl
divl
lods
xor
popfw
dec
adc
and
adc
fsts
out
mov
pop
inc
mov
cli
adc
int3
ret
push
lods
lods
stos
mov
adc
cmp
rclb
or
pop
sbbb
call
data16
jne
lods
add
test
or
out
mov
repz
dec
aas
cmp
add
in
leave
pop
add
insb
insb
and
shlb
aas
jmp
xchg
push
dec
lock
loope
xor
repz
ret
add
pop
loope
leave
mov
inc
sbb
es
jae
xor
outsl
icebp
and
mov
out
ljmp
pop
sub
mov
rcr
hlt
lods
xlat
pusha
pop
adc
loopne
push
xchg
shll
mov
aaa
sbb
jecxz
rcl
movsb
pop
push
fwait
cmpsl
jne
add
dec
ljmp
xlat
sub
cli
shlb
sub
sti
sub
add
loopne
xchg
mov
mov
push
into
mov
fld
ret
popa
imull
mov
xor
hlt
aaa
addr16
imul
push
stos
mov
loop
sbb
mov
lods
imul
push
sti
aas
lea
jbe
nop
dec
mov
push
mov
leave
jecxz
push
lret
inc
fdivr
imul
xor
mov
aad
pop
lret
mov
mov
aaa
inc
mov
ja
or
addr16
and
xchg
mov
inc
test
outsl
xor
push
sti
pusha
mov
pushf
popf
addr16
mov
in
sahf
add
aad
xchg
in
dec
stos
add
andb
push
enter
in
repz
cwtl
jl
ja
std
adc
rorl
clc
insl
mov
cmpsb
mov
push
or
and
mov
sub
sbb
leave
sub
data16
movsl
xchg
mov
jl
out
push
leave
jno
jo
adc
sahf
sahf
int
adc
inc
ss
test
add
imul
sub
sahf
nop
fs
xor
xor
jp
in
loop
push
xchg
jecxz
xor
lods
cmp
leave
xor
hlt
shlb
int3
daa
xchg
loopne
cmp
int3
sti
push
je
mov
push
push
add
xchg
test
jle
add
mov
test
adc
push
dec
andb
mov
out
xor
cwtl
mov
sbb
and
icebp
pop
xor
and
mov
rcrl
xor
adcb
xor
lret
jns
dec
jecxz
inc
mov
pusha
bound
lds
xor
jge
and
sbb
jmp
mov
repz
into
push
xor
rolb
or
movsb
inc
and
cwtl
push
xchg
ja
lret
imul
ljmp
arpl
mov
adc
imul
mov
pop
clc
mov
xlat
stos
xchg
js
arpl
cmp
adc
lahf
fwait
cld
pop
push
dec
mov
sbb
js
dec
mov
xor
or
outsl
or
and
loop
xor
jp
add
je
xor
and
mov
sub
cmp
gs
push
pop
pop
lock
mov
push
mov
lahf
and
loopne
cmp
add
or
or
pop
ljmp
out
sub
sbb
fsubrl
clc
loopne
iret
stos
pcmpgtd
xchg
fisttpll
jbe
fs
iret
mov
xor
xchg
jns
sti
filds
mov
loopne
stos
mul
pop
pusha
fcompl
push
push
test
mov
and
inc
sub
push
fiadds
jo
adc
pusha
jo,pt
xchg
jge
jmp
pop
sysenter
aaa
mov
or
subl
mov
inc
fidivrs
popa
cmp
int3
insb
in
outsb
repz
xlat
ret
mov
popf
out
shlb
pop
mov
xchg
shl
test
outsb
mov
mov
sub
or
stos
jmp
fistl
pop
pop
pushf
xor
xchg
in
or
movsl
push
pop
int3
inc
pusha
leave
inc
push
aad
jge
or
in
enter
xchg
test
mov
fimuls
add
out
xor
add
inc
movsl
scas
push
pop
xchg
or
ret
jg
mov
shlb
mov
xchg
xchg
push
icebp
outsb
dec
mov
mov
rolb
add
rcl
icebp
stos
out
xchg
scas
mov
or
sahf
mov
dec
fistpl
xor
jp
icebp
adc
push
mov
fwait
sub
lods
cmp
adc
jns
cmpsb
sbb
mov
out
sub
aam
and
push
call
leave
push
stc
jo
test
push
cli
dec
shlb
testl
and
or
push
sub
mov
stos
jge
adc
or
mov
fsubr
cmpsl
bound
inc
sub
adc
pop
inc
out
cmp
test
push
leave
sbb
mov
mov
lods
jmp
shrb
or
mov
pushf
sbb
movsb
add
dec
aam
cmp
mov
mov
adc
jge
cwtl
pushf
push
mov
mov
and
jnp
dec
jne
fsubp
xlat
jecxz
push
add
push
stos
mov
arpl
lret
pop
mov
cmp
cs
test
cmp
fisubl
movsb
cli
pcmpgtb
and
fchs
xchg
inc
mov
aad
jo
cli
aas
mov
dec
test
xlat
push
push
fsubl
cmpsl
sbb
and
jge
nop
push
and
or
xchg
popf
xor
mov
adc
test
aas
pusha
cld
int
mov
lods
jnp
or
loop
sbb
pop
filds
jp
mov
sub
mov
out
sarl
dec
xchg
sbb
xchg
fisubl
orb
int
pop
mov
rol
ficomps
xchg
repnz
movsl
xchg
jb
pop
loopne
dec
jno
jg
dec
push
divl
gs
movsb
stos
xor
mov
fimuls
lahf
xchg
jnp
mov
add
cltd
scas
fistpl
aas
mov
shll
inc
nop
pop
push
outsl
test
std
in
push
shrl
xor
mov
imull
sub
xchg
jns
test
fs
fbld
inc
jnp
sub
or
or
outsl
sbb
jnp
dec
test
push
in
iret
arpl
xor
fidivrs
jge
movl
add
hlt
lea
jle
cmpl
lock
lds
repnz
lock
inc
pop
push
and
mov
inc
sbb
mov
rcrb
jnp
mov
out
fadds
arpl
pop
cmpsb
cs
pop
mov
int3
inc
jg
in
imul
add
ss
mov
and
lret
inc
sbb
loopne
dec
daa
test
fisubs
dec
push
gs
pop
fistpll
enter
mov
loopne
cli
dec
sub
cmpsl
jbe
dec
lret
das
scas
xor
or
das
jnp
and
sbb
dec
lea
mov
mov
shlb
pop
dec
pop
rcll
cld
addr16
mov
insb
rep
dec
mov
and
mov
dec
pusha
fsubrs
and
sbb
push
fwait
jns
pop
mov
mov
mov
mov
fwait
cld
jo
mov
ss
adc
pop
fbstp
push
ds
ret
pop
push
push
fsubs
mov
aad
ljmp
or
xor
mov
xchg
aaa
sub
xchg
push
iret
push
fst
lahf
sbb
daa
mov
lret
popa
xor
mov
jae
jb
jno
xchg
rorb
jns
testl
nop
pop
sub
shlb
aam
lods
fnsave
adc
bound
add
stc
sbb
mov
inc
test
push
push
xchg
xchg
inc
lods
popf
pop
jp
sub
or
shrl
inc
std
mov
pop
add
jg
cmp
or
xchg
stos
mov
js
movb
jne
dec
out
sbb
inc
mov
or
add
outsl
notb
or
mov
add
fsubrl
lock
lahf
cli
adc
adc
xchg
add
adc
sub
push
orl
leave
fwait
mov
mov
testl
dec
pop
mov
pop
movsb
pop
inc
sarl
push
rcl
arpl
or
outsb
mov
test
sarl
imul
mov
out
pop
ss
xor
cmp
sub
adc
shlb
lret
push
sub
xchg
ja
and
xor
xchg
dec
add
sbb
andb
test
pop
sub
xor
adc
enter
rcrb
mov
in
lds
js
rolb
aas
test
adc
mov
add
jo
fwait
insl
dec
aas
add
pusha
divb
adc
xchg
cmpsb
or
and
enter
testl
adc
out
pop
loope
negb
clc
mov
mov
pop
sub
and
test
dec
stos
xchg
jae
ss
or
dec
mov
mov
repnz
xor
ffree
cmp
push
pop
sub
dec
dec
fcoms
sub
or
mov
call
incb
in
mov
aas
pop
shrb
add
cwtl
in
and
sahf
dec
shrb
divl
orb
inc
cmp
sbb
aam
or
out
adc
dec
xchg
push
dec
pop
outsb
icebp
mov
cmp
fistl
pop
fildl
push
test
hlt
pop
lret
js
pop
dec
imul
movsb
xor
cmpsl
in
es
mov
add
inc
jecxz
leave
repz
xchg
push
cmp
enter
sub
xorb
lret
xorl
lds
adc
aad
adc
or
mov
sbb
mov
push
cld
and
push
push
cltd
nop
cmp
fs
or
and
jge,pn
out
mov
mov
lahf
fsubs
fistl
cltd
and
cld
pop
pop
dec
bound
pushf
pop
call
loop
inc
sub
lock
mov
outsb
and
mov
jae
xor
lods
leave
fsubrs
push
and
addl
test
scas
xchg
fsubrs
cmp
mov
sub
mov
movsb
lods
ret
push
add
xchg
xchg
sub
cmpsb
or
and
std
out
add
enter
add
mov
push
or
shlb
ja
cmpsb
jle
inc
fxam
jmp
jl
add
sbb
inc
xor
fildll
cmpsl
dec
mov
out
mov
jmp
mov
ss
inc
std
inc
rorl
sbb
das
sbb
rclb
and
mov
jmp
mov
subl
push
loope
cld
xchg
aas
adc
roll
add
bound
xchg
aad
in
shlb
pop
bound
lds
movsb
addb
in
cs
fsubs
xchg
push
cs
mov
sub
addr16
mov
jmp
and
decb
repnz
hlt
sub
std
or
in
out
sti
and
in
sbb
fmul
adc
outsb
xor
sub
rcr
icebp
vsubps
std
and
rcrb
inc
xchg
imul
fnstcw
jmp
std
mov
mov
mov
xchg
in
push
lods
add
jae
mov
jecxz
jl
xchg
cwtl
lock
fcoms
push
push
pop
xor
push
leave
xor
addl
add
pop
push
xor
mov
lret
mov
sbb
popa
push
lock
adc
mov
pop
scas
cltd
imul
das
daa
xchg
sti
out
jno
xchg
iret
add
out
add
rcl
xchg
clc
adc
inc
or
xchg
ss
adc
aaa
dec
sub
sub
add
dec
pop
repnz
jb
movsb
push
mov
cltd
ret
inc
push
jecxz
pop
push
pop
int3
sub
inc
and
xor
sbb
xlat
mov
lcall
pusha
push
mov
xchg
test
xor
jno
cltd
xor
sub
shlb
into
add
cld
push
push
add
sbb
into
jns
mov
js
jns
sbb
out
aam
xlat
xchg
inc
mov
add
push
adc
ds
lahf
sbb
xchg
push
pop
cmpsl
jg
xchg
sbb
repnz
fstpl
sbb
inc
and
cwtl
inc
sub
adc
aad
xor
jno
fistpl
enter
call
clc
dec
jmp
jb
sub
shll
insl
mov
in
jno
inc
lcall
insb
push
or
insb
or
mov
pop
ret
push
inc
sbb
int
fisttpll
es
shrb
mov
xor
dec
outsb
mov
stos
stos
jecxz
pushf
movsl
sub
cltd
xor
add
cs
sti
arpl
push
sub
mov
mov
fs
pop
pop
push
push
jns
mov
jg
mov
pushf
add
push
negb
dec
out
ret
xlat
pop
lea
mov
add
daa
cwtl
pop
and
cmp
rclb
mov
jae
nop
xchg
ficomps
add
and
rol
sub
stos
call
mov
std
arpl
popl
enter
jmp
sub
insl
loope
popa
push
fildll
in
sub
sub
loopne
mov
add
cld
ds
push
and
icebp
or
outsb
cld
ljmp
outsb
inc
xor
push
inc
in
fdivl
decl
pop
cmc
or
mov
push
fildl
mov
mov
or
push
gs
jb
push
push
repnz
inc
shll
inc
shlb
test
data16
xchg
stos
jns
enter
fistpl
push
outsl
inc
or
nop
push
outsl
lahf
cmp
call
push
sub
andl
iret
xor
or
cmp
sub
xchg
fists
adc
cltd
jge
fs
inc
adc
xchg
test
decl
push
or
xor
sbb
push
pop
push
and
aas
outsl
insl
out
ret
les
push
add
jecxz
aam
cmp
fdivrs
pop
ja
xorl
int3
outsl
add
pop
sti
dec
call
jbe
test
pop
mov
xchg
inc
pop
gs
shrl
movsb
into
nop
xchg
mov
jecxz
pop
cmp
mov
sub
in
mov
pop
imul
push
add
xchg
dec
mov
or
push
cmp
xor
outsb
into
pushl
test
mov
cmp
andl
push
cmpsb
stos
add
test
subb
jle
jle
imul
pusha
pop
mov
mov
cmp
cwtl
mov
cmc
mov
lret
loope
cmp
jno
mov
pop
inc
or
jns
xor
mov
ljmp
into
and
mov
bound
cmp
jbe
ret
mov
jno
xor
popf
std
mov
cmp
mov
fidivrs
dec
add
push
out
mov
add
ljmp
fbld
call
out
cmp
arpl
push
pop
ret
or
lcall
mov
cmp
or
addr16
aad
and
and
mov
mov
mov
lods
sub
hlt
xchg
aaa
jae
sub
addr16
pop
sahf
push
or
cmp
negl
lock
jg
clc
push
xor
stos
mov
js
xchg
pop
inc
inc
je
movb
or
pop
out
fdiv
xchg
jno,pt
push
cmp
push
cmp
scas
imul
shr
enter
mov
mov
and
dec
out
mov
mov
mov
jmp
xor
mov
and
popf
stos
add
xchg
mov
addr16
aas
sbb
mov
sbb
cltd
sub
mov
or
icebp
sub
add
dec
cltd
pop
test
outsb
dec
fdivrp
mov
cmp
stc
dec
mov
mov
dec
lds
push
stc
gs
mov
inc
mov
out
mov
xchg
mov
aas
aas
ret
insl
pop
faddl
sub
xchg
sahf
mov
mov
ljmp
dec
or
lret
loope
fnstcw
xor
in
fsubl
jmp
inc
dec
fs
or
not
stos
sbb
or
sbb
push
pop
or
lock
rcl
pop
lea
or
cmp
pop
stc
xchg
jbe
xchg
aaa
in
xchg
enter
sub
inc
jne
push
cmpsl
jecxz
aaa
aas
lods
xchg
inc
imul
cmp
inc
or
pop
mov
imul
mov
and
lahf
lret
testb
mov
call
icebp
sbb
pushl
dec
loopne
mov
call
mov
add
and
ret
pushf
js
pusha
push
mov
or
push
push
dec
ret
jns
jl
sbb
mov
adc
cmp
clc
dec
stc
jno
out
jnp
lock
aam
mov
mov
add
cmp
arpl
dec
adc
mov
pusha
cmp
mov
aad
inc
hlt
pop
subb
shll
jnp
daa
movsb
cmp
fcmovb
inc
pop
std
insl
inc
test
dec
out
iret
mov
mov
jbe
or
stos
adcb
or
jnp
mov
pop
mov
addr16
notb
add
mov
clc
call
mov
mov
popf
loopne
cli
mov
and
pushf
xor
dec
pop
dec
int
sbb
mov
inc
int
xchg
movsbl
push
sbb
fstps
cmp
cwtl
push
fcomp
or
fwait
jno
inc
lahf
jg
pop
push
jbe
xor
dec
mov
cld
xchg
ret
pop
sbb
sarl
pop
pusha
rcrl
jl
add
xchg
cwtl
iret
test
int3
push
in
addr16
sti
pop
dec
inc
stos
xor
dec
fmuls
push
test
jo
sbb
out
push
sti
insb
bound
mov
mov
into
push
rcr
icebp
bound
xor
jp
inc
inc
xor
mov
es
fsubrs
adc
pop
push
inc
lcall
les
inc
clc
mov
nop
fidivrl
sub
data16
popa
mov
int3
inc
sbb
pop
test
pop
subb
nop
test
movsl
lods
cmpsl
mov
cwtl
inc
aad
xchg
or
stc
je
mov
test
pop
scas
push
mov
movsl
aaa
scas
cld
cltd
fdiv
cld
and
inc
mov
push
push
sub
fistpl
inc
loopne
jecxz
xlat
in
and
insb
out
mov
mov
push
xchg
jl
int
aas
pop
mov
dec
push
jp
pusha
and
fldenv
fsubs
popf
xchg
pop
adc
xchg
mov
icebp
loopne
sti
inc
in
ss
mov
aas
xor
dec
les
cmp
sahf
mov
pop
fcoml
mov
test
subb
jae
ja
mov
clc
jg
xchg
ja
jns
sub
inc
addr16
pop
imul
imul
arpl
mov
mov
stos
sbb
add
scas
jno
cmpsl
xchg
fistpl
aad
xchg
ss
aad
adc
rcl
jo
pop
test
xchg
lods
or
cmpsl
adcb
push
push
cmp
pusha
push
or
xchg
test
mov
mov
lea
pop
stos
in
xchg
mov
movsb
dec
mov
es
mov
stos
pop
add
fcoms
mov
sub
mov
imulb
fldcw
lret
cmp
fidivl
push
xor
inc
addr16
inc
mov
adc
data16
movsb
fstpl
add
lods
gs
icebp
jle
adc
aaa
fistl
popa
mov
test
sahf
lahf
ret
jnp
xchg
bound
aad
cmpsb
in
jmp
mov
xor
inc
insb
mov
subb
lods
add
push
xor
int
cmpsb
jg
pop
int3
xor
jmp
push
dec
pop
sbb
and
cmp
adc
in
fs
push
add
imul
pop
test
push
pop
jp
and
ds
xor
push
mov
fs
int3
cmp
cmpl
mov
loopne
stos
jl
xchg
and
pop
xor
inc
jmp
cltd
xchg
add
push
adc
lea
jmp
mov
out
add
enter
dec
mov
xor
cmp
lcall
popa
loopne
insb
mov
aas
out
xor
sbb
mov
or
mov
mov
clc
lret
loop
clc
aam
jmp
imul
int3
mov
inc
jp
pop
jae
mov
loop
xlat
mov
lock
es
adc
mov
cmpsb
orb
rcll
rorb
mov
sub
mov
dec
rorb
mov
movsb
fsubl
inc
js
cmp
aas
mov
test
hlt
mov
in
fmull
cli
sbb
sahf
sub
fchs
mov
pop
push
sub
jne
inc
mov
and
fisubrs
ds
je
inc
adc
add
mov
xor
mov
or
mov
pop
sub
cwtl
push
jecxz
lods
stc
sahf
fisttpll
xor
sub
pop
es
je
test
cmp
jb
movsb
les
cmp
shlb
add
jg
xchg
bound
mov
push
test
or
sbb
adc
test
pop
outsl
xor
stos
imul
and
fimull
fbstp
lock
aaa
push
ret
mov
addb
mov
shlb
jae
adc
jg
sub
adc
roll
into
jecxz
lods
sub
test
cmp
push
fcmovb
inc
add
push
sarl
cmpsl
mov
ljmp
andb
xor
and
loopne
mov
pop
dec
jno
mov
fsts
out
fcmovbe
lods
stc
sub
mov
jbe
test
loopne
sti
cmp
adc
and
icebp
sub
cli
add
out
xor
or
repnz
cmp
sets
cmpsb
daa
push
or
aam
scas
push
push
aad
rorl
std
scas
int3
je
shlb
jae
push
and
lods
inc
pop
jle
aad
mov
les
lods
mov
lret
fstpt
jge
dec
xchg
adc
mov
loope
add
mov
call
inc
push
dec
movsl
mov
xchg
data16
test
lds
or
add
push
in
mov
sub
and
dec
pop
mov
inc
mov
push
xchg
xor
mov
popf
movsb
cmp
or
aam
lods
in
and
cli
inc
dec
mov
stos
jmp
dec
or
fstl
push
repnz
push
scas
loope
in
dec
jge
adc
adcb
fbstp
xor
sbb
adc
and
repz
xchg
call
arpl
test
orb
test
loope
aaa
repz
xor
sbb
push
pop
mov
cmp
jmp
fstpt
push
les
imul
sahf
cmc
aaa
and
lret
inc
js
out
adc
mov
dec
push
out
ret
out
mov
jae
mov
push
push
mov
inc
cmp
dec
mov
enter
arpl
lea
pop
es
ucomiss
adcl
pusha
lret
enter
jmp
dec
sbb
in
cmpsb
mov
gs
sub
out
xor
mov
fbld
dec
xlat
xchg
xlat
xchg
aad
mov
jo
call
dec
scas
mov
stos
in
cmpsb
sbb
push
inc
and
or
jg
in
sub
xor
fisubrs
jne
xchg
mul
xchg
dec
outsb
movsl
call
sbb
jno
das
mov
icebp
out
sbb
imul
mov
lahf
sub
sarb
mov
push
add
xchg
add
inc
fwait
sub
pushl
lds
stos
outsl
sub
loope
jle
fwait
adc
das
or
adc
xor
push
jnp
repz
inc
xchg
sbb
notb
test
inc
daa
mov
add
lock
gs
loope
dec
sbb
pop
popa
fists
fnsave
mov
mov
sbb
test
gs
xlat
outsl
loope
push
pop
mov
adc
mov
stc
out
jmp
aas
jp
in
fs
jae
lock
pop
js
test
mov
jecxz
out
imul
ljmp
lcall
mov
aaa
pop
sub
sbb
cmp
mov
shl
lds
in
bound
imul
dec
subb
push
fnsave
add
push
dec
data16
sbb
adc
mov
cs
push
inc
fwait
insb
test
xor
adc
dec
and
subb
shl
lcall
insl
mov
outsb
mov
sub
loopne
stc
or
pop
fistpl
push
jbe
jge
fs
cmpsl
lods
imulb
sub
dec
cmp
data16
fsts
inc
aaa
fstl
decl
std
in
add
jecxz
and
add
insl
ss
cmpsb
faddl
aad
dec
in
jg
insb
ds
outsl
out
pop
jno
repz
add
sub
shll
xchg
pop
repnz
popa
mov
fsubr
mov
mov
mov
push
mov
pushl
in
ss
xchg
push
in
hlt
jns
enter
push
loopne
das
add
push
ljmp
aaa
leave
int
inc
jbe
rclb
in
or
jns
mov
movsb
and
jb
lcall
pop
scas
xchg
jecxz
sti
pushl
nop
leave
subps
inc
push
shrb
mov
xorb
pop
xchg
jmp
gs
jl
fisubrl
jp
enter
fisubrs
mov
cmp
andb
into
jo
outsb
xchg
adc
xchg
and
imul
shlb
push
sub
loop
loop
mov
das
jp
aas
repz
xchg
rcrb
cld
and
push
pop
ss
mov
sub
and
bound
fildl
imul
nop
dec
xchg
mov
popf
fiaddl
outsl
mov
mov
or
enter
dec
and
fstps
jp
test
sbb
std
out
jns
cmc
dec
xchg
pop
add
bnd
sbb
add
das
dec
push
cmc
mov
mov
out
lcall
jb
add
and
push
shrl
push
mov
cmp
jno
cmp
lock
fidivrs
sub
scas
sub
lock
mov
lds
sarb
add
stos
push
mov
xchg
hlt
pop
adc
sub
daa
adc
and
aad
ret
and
dec
enter
jge
xchg
lahf
and
mov
xchg
scas
out
hlt
and
ret
lods
cmpl
insl
sub
cld
idivb
dec
xchg
push
cwtl
aam
push
lret
push
cmp
mov
xchg
jge
or
push
add
icebp
mov
mov
ss
in
mov
mov
mov
adc
es
dec
mov
and
test
clc
push
lret
inc
xchg
sbb
std
mov
jo
dec
repz
je
pop
scas
aas
popa
fisttps
add
js
push
push
dec
rorb
test
stos
mov
lcall
cmp
xor
roll
inc
shlb
rcr
sub
into
mov
ficomps
adc
xor
ret
adc
cmpsl
nop
popa
jecxz
sub
jbe
sbb
pop
xor
jge
lret
flds
sub
jb
pop
insl
insl
sub
ret
inc
lahf
ret
push
jbe
xchg
xchg
jle
aam
into
in
aas
mov
push
add
cmp
repnz
into
fldl
add
std
lret
lock
into
stos
lods
mov
xlat
cmp
adc
mov
adc
ljmp
fcoms
stos
mov
in
aas
pop
popf
pop
int3
into
mov
lea
jecxz
mov
lods
in
gs
fs
sbb
notl
sub
mov
je
jecxz
adc
test
loopne
push
leave
sub
je
mov
negb
idivl
inc
mov
mov
movsl
loopne
jne
push
loope
jno
daa
inc
mov
pop
mov
add
mov
mov
cmpb
pop
jle
scas
sbb
sub
fstps
clc
int
sarl
leave
pop
std
xchg
mov
jae
dec
cmc
dec
inc
lret
xor
les
cmp
push
pop
cmp
adc
or
push
mov
into
pop
loop
rclb
popa
scas
pop
jmp
push
add
mov
loopne
cwtl
fmul
icebp
imul
mov
test
into
inc
cmp
lock
int3
lret
pop
loope
sahf
add
aam
push
adc
push
mov
sbb
subl
iret
jp
sbb
push
cmpsb
pop
pop
inc
or
sub
fimull
dec
das
adc
mov
popa
fs
pop
flds
inc
jp
into
lods
mov
mov
cmp
popf
adc
jnp
xchg
dec
out
cmp
push
popa
in
mov
std
mov
mov
gs
dec
sbb
imull
add
jge
xchg
sub
add
xor
gs
push
mov
bnd
movsb
mov
pusha
repz
idivl
pusha
repz
cmp
pop
outsl
loope
mov
rcl
pop
pop
xchg
jb
mov
push
xchg
xchg
pop
fs
cmp
test
negb
je
mov
test
cmpsl
adc
and
mov
or
fiaddl
xor
in
adc
mov
sub
out
gs
jl
into
adc
jg
mov
aaa
sbb
hlt
push
mov
addr16
dec
add
adc
adc
and
sbb
inc
jae
xlat
lods
jmp
dec
jecxz
jns
xchg
scas
cmp
pop
push
jle
pop
inc
out
cmp
lret
and
xchg
iret
es
in
fldt
add
sbb
out
push
ds
push
mov
incb
insb
loope
negl
push
scas
std
lock
or
push
and
xchg
dec
loopne
mov
mov
jo
jle
xchg
std
mov
insb
inc
xchg
lret
lret
add
dec
lea
xchg
fcmovnbe
xor
lock
pop
movsl
adc
call
addr16
je
ja
jp
pusha
aam
pop
pop
dec
pop
test
jecxz
mov
arpl
mov
ds
push
adc
adcb
in
rcll
mov
cmp
pop
mov
das
fbld
pop
or
mov
xchg
sbb
xchg
cli
out
jge,pn
fwait
hlt
pushf
cltd
leave
or
mov
cmp
inc
test
fcmovnbe
cld
fdivl
mov
dec
int3
cmp
inc
mov
cmp
adc
mov
dec
sbb
pop
iret
mov
je
inc
pop
fidivs
lahf
sbb
sub
ret
ljmp
jne
cltd
xor
push
rclb
pop
jmp
and
andb
mov
cli
add
mov
and
js
jecxz
cmp
push
jle
xchg
mov
addr16
push
hlt
pop
jge
pop
fwait
int3
jmp
sub
xchg
loop
jmp
in
sbb
cmp
lods
jb
push
mov
jb
neg
cmpsb
stos
lods
mov
scas
inc
stc
sub
and
dec
insb
cmpsl
pop
out
lock
movsl
inc
bnd
add
jmp
std
inc
xchg
adc
mov
out
mov
scas
add
lea
xchg
sti
or
int3
out
mov
sbb
push
sub
dec
call
adc
inc
push
data16
mov
out
jb
arpl
mov
bound
out
lcall
popf
in
gs
lret
inc
push
jbe
xorb
dec
popa
clc
cli
push
inc
jle
sbb
xchg
lcall
es
fcmovnbe
aaa
dec
in
fsubrl
xchg
in
sbb
jbe
mov
xlat
in
push
jo
adc
dec
js
mov
fildl
xchg
jb
sbb
cmp
xlat
push
cmp
push
add
jne
sbb
stos
das
nop
in
push
inc
popf
xor
inc
fst
clc
jno
imul
aas
in
cwtl
jbe
fwait
jl
and
cwtl
lea
xchg
inc
shrl
add
imul
ss
pop
xor
dec
jmp
pop
xchg
mov
mov
sti
mov
fwait
mov
aad
movsl
xor
rolb
pop
dec
aas
mov
sub
cmp
dec
les
xor
pop
or
addb
roll
push
or
shll
movsl
dec
repz
das
lods
dec
add
lahf
mov
out
xchg
push
rcll
mov
xchg
xor
cmp
jmp
fwait
mov
mov
mov
aad
aam
xor
in
push
mov
sub
jge
fcmove
aam
jns
adc
inc
xlat
das
xchg
mov
cmp
pushf
test
mov
jle
add
cmc
out
xor
flds
or
or
ljmp
mov
out
adc
mov
stos
fidivl
or
lahf
push
lcall
cmpsl
sbb
mov
add
jle
dec
fisubrs
mov
test
out
hlt
or
test
lcall
or
test
fdivr
ret
outsl
cmp
rclb
movsl
cs
ror
xchg
xchg
test
cld
test
icebp
je
push
nop
pop
push
loope
mov
pusha
ss
and
or
imul
cld
stos
stos
push
outsb
aaa
sub
pop
adc
addb
cltd
push
fs
std
mov
inc
xchg
mov
mov
inc
push
push
ret
movsb
in
imul
jne
lret
sub
push
or
stos
sahf
pop
pop
js
arpl
jp
psubsb
xchg
imul
in
lods
mov
in
lods
pop
out
std
popf
sub
inc
dec
sbb
bnd
jno
xorl
aas
into
cmp
mov
nop
mov
repz
cmp
orps
bound
sbb
inc
lods
or
jae
pop
push
fmuls
fnstcw
dec
sbb
cmp
sub
in
in
into
and
xchg
push
fdiv
bound
scas
xchg
cmc
lods
xchg
jecxz
iret
repnz
lret
mov
dec
out
cld
popa
sub
cwtl
popw
sbb
data16
out
sbb
scas
add
add
push
add
sti
adcl
mov
mov
push
push
jle
or
pushf
adc
rcll
or
jmp
in
imul
nop
sub
fldt
push
jo
daa
adc
aad
idiv
and
mov
addr16
xchg
adc
in
mov
pop
mov
inc
mov
pusha
and
insl
out
imul
call
mov
cmp
dec
push
pusha
jo
int3
outsl
inc
pop
cltd
lret
and
sbb
pop
xchg
arpl
mov
xchg
fdivrl
movsb
lcall
push
fdivs
inc
push
mov
add
xchg
push
sub
icebp
fsubs
xlat
pop
dec
sbb
jp
ret
cmpsb
insl
mov
adc
mov
add
mov
dec
lret
mov
lret
pushf
jo
ret
out
jo
pushf
imul
rorl
inc
push
xor
sub
loopne
test
mulb
je
es
or
mov
mov
sub
mov
icebp
lds
cwtl
cs
lock
divl
negl
enter
and
pop
sti
lret
xchg
jl
inc
outsl
bnd
int
mov
jae
dec
ja
test
jmp
mov
lds
sub
lret
fbld
pop
dec
jge
stos
in
jge
addr16
lods
mov
pop
shrl
sbb
adc
loope
adc
test
xchg
mov
mov
mov
mov
xchg
xchg
aam
jle
sarl
sahf
popa
imul
jne
pop
addr16
xchg
aad
fwait
and
shl
sub
repz
xchg
mov
out
into
std
jno
or
fs
aaa
loop
div
mov
jecxz
fistps
loop
sub
push
dec
pushf
sub
les
aam
aas
xchg
jae
inc
mov
mov
push
jp
leave
push
jnp
xchg
lods
jle
das
cmp
fsub
test
scas
outsb
xor
mov
sub
int
sahf
adc
js
or
sbb
jo
adc
jecxz
sbb
cmp
mov
jp,pn
adc
fsubrl
mov
loopne
jo
adc
daa
repnz
cld
mov
fwait
dec
lock
jbe
movsl
sub
insb
xchg
fsubl
sbb
cmpsl
insl
and
sbb
jae
xor
lahf
js
pushl
mov
inc
repz
mov
cmpsl
push
stos
out
js
sahf
incl
push
into
push
fucomi
ffreep
iret
sub
mov
data16
xor
mov
movsl
cmp
sub
ss
sbb
int
rclb
adc
loop
xchg
fs
shll
popf
sbb
ret
inc
sub
inc
xchg
jl
xchg
and
inc
addb
cmp
clc
mov
push
or
sub
adc
inc
cmpsb
bts
mov
fs
loope
movsb
mov
jge
loopne
dec
divl
mov
mov
divl
and
jg
notb
or
jo
mov
pop
mov
pop
pop
xor
scas
pop
sub
jp
cmp
mov
lcall
sahf
cmp
cli
xorl
jg
mov
ss
or
cmpsl
popf
jl
xchg
push
jne
in
or
and
in
rolb
outsb
lods
adc
cmc
sub
imul
testl
popf
popw
xchg
mov
or
pop
push
cmpsl
mov
xchg
mov
sub
adc
and
add
in
fidivrs
ror
test
sub
jp
jg
adc
and
daa
cmpsb
into
icebp
or
dec
adc
sbb
mov
ror
jmp
jo
pop
mov
cwtl
aad
sbb
push
lret
jg
in
xor
adc
popf
jmp
pop
mov
jl
jae
stos
stos
jnp
xchg
pop
sbb
out
sbb
dec
xchg
mov
mov
neg
jmp
pop
fwait
lods
adc
in
fidivs
fdivr
mov
or
fs
mov
bound
in
dec
cmp
shl
scas
pop
adc
mov
jmp
out
pop
adc
ja
je
sub
inc
aam
ss
mov
movb
mov
outsb
pop
mov
adc
jne
repnz
inc
test
fstpt
jb
dec
int3
sbb
jmp
es
mov
test
adc
loop
iret
mov
insb
std
jl
aam
ljmp
jl
stos
mov
or
pop
cmc
test
jl
jmp
dec
sahf
jmp
aam
bound
cwtl
mov
mov
sub
hlt
aad
outsb
and
pop
shlb
adc
mov
loopne
mov
push
outsl
testl
mov
sbb
enter
popf
cwtl
add
mov
stc
imul
in
mov
add
outsb
outsb
outsb
mov
test
popf
mov
jg
jle
cmp
fstps
out
ds
adc
sbb
mov
gs
or
loopne
or
test
popa
decb
sti
out
cmp
repz
addr16
mov
mov
xchg
std
stos
rorb
push
pop
mov
lahf
dec
mov
add
mov
out
lods
fnsave
pavgb
xchg
imul
push
sbb
mov
sbb
std
push
pop
or
mov
and
lea
shrb
jne
into
call
cld
or
pop
rcll
jg
adc
es
jle
cmp
mov
fcmovbe
pop
sbb
pop
ljmp
and
int3
inc
int
imul
outsl
shll
dec
jns
cmp
stc
in
outsl
mov
add
scas
sbb
pop
sub
test
in
jp
lods
mov
inc
push
notl
inc
push
movsl
xlat
mov
jge
pop
or
fstps
or
arpl
and
lods
or
inc
out
and
push
mov
add
adc
mov
ds
es
loope
pushf
dec
adc
sbb
xchg
push
pop
scas
scas
call
out
mov
ss
mov
fnstsw
push
fstl
xlat
pop
lock
in
shrb
adc
mov
and
ja
cltd
enter
cli
cli
pop
insb
sub
pop
fimuls
pusha
pusha
xchg
in
inc
dec
xor
xchg
lods
pop
mov
xchg
shll
cmp
mov
lods
adc
repz
ds
shrb
jnp
mov
das
scas
lret
stc
push
dec
sbb
dec
push
aad
pop
or
ja
add
sub
out
mov
mov
dec
mov
push
je
xor
call
sub
cmpsb
cmp
and
xor
fidivl
in
cmpb
imul
enter
ss
popf
xorl
shlb
mov
data16
mov
pushf
movsl
out
cmpsb
xchg
fs
sbb
and
aas
adc
xor
sbb
and
mov
aam
nop
mov
and
clc
in
arpl
xchg
fwait
xor
inc
lods
or
popa
xor
lea
cmp
sarb
lods
add
fdivrl
out
es
cmc
sti
std
xchg
jnp
idivb
leave
xchg
pop
lock
and
in
cmp
bound
xlat
xchg
daa
ficoml
int
hlt
ret
aas
mov
or
imul
push
mov
loopne
mov
scas
int3
cmp
gs
fidivrs
push
jb
std
bound
xor
fdivrs
and
mov
adc
sahf
popa
rol
fidivrl
push
lock
shl
pop
push
push
scas
mulb
adc
je
test
jb
pop
cmp
repnz
pop
push
test
dec
push
push
sub
push
mov
cwtl
into
add
sbb
xchg
xchg
in
jne
mov
sbb
pop
sub
jl
mov
ret
cmp
scas
les
repz
adc
jbe
adc
lcall
cli
mov
lahf
lcall
ljmp
inc
and
std
add
imul
xchg
mov
sti
repz
push
jl
inc
fwait
out
stos
pushf
pop
loopne
nop
mov
dec
in
jp
fsubrs
mov
add
xchg
lahf
lret
fs
adc
std
test
mov
adc
jo
adc
bound
js
negb
add
movsb
cmp
outsb
cwtl
bound
mov
jne
push
cmp
outsb
and
rcrl
outsl
lods
xchg
icebp
mov
call
cmpb
inc
pushf
aam
pop
stos
mov
sbb
movsl
test
test
push
xchg
jp
inc
jb
loopne
mov
decl
sar
lods
fidivrs
inc
pop
mov
add
jge
icebp
jmp
mov
call
mov
aas
fcoml
nop
lcall
pop
add
sub
in
lods
mov
mov
sub
pop
mov
pop
outsb
pop
xor
stos
inc
jae
push
in
movb
push
ja
mov
clc
lock
add
lods
sub
stos
jl
lods
lods
imul
imul
mov
repz
cld
in
adc
lea
std
pop
jecxz
jb
rolb
sub
lahf
sti
push
xchg
leave
test
aam
cmp
jo
fldt
cmc
loop
ljmpw
push
jecxz
sahf
aad
loopne
mov
jmp
jl
add
jo
negb
fsqrt
or
pop
push
lods
cmp
xchg
je
es
cmp
clc
dec
setbe
push
push
mov
gs
and
pop
sub
shlb
add
outsb
lahf
push
push
clc
inc
pop
fidivl
dec
lret
insl
or
sahf
sti
movsl
bound
ja
or
pop
adc
cmp
pop
pop
add
dec
sbb
pop
clc
mov
sbb
int
outsl
mov
inc
sti
push
push
dec
and
cmpsl
inc
shl
or
cltd
add
fiadds
lock
test
xor
out
add
add
jbe
ja
js
test
adc
inc
mov
iret
scas
loope
and
test
sbb
cld
ds
xchg
xor
inc
mov
clc
insb
xor
lds
fstpt
repnz
jl
les
ss
add
adc
ss
pop
push
hlt
pop
mov
repz
mov
xor
divl
adcb
jo
adc
jno
mov
sub
pop
mov
adc
arpl
add
cmp
inc
add
inc
and
push
xchg
jp
sbb
dec
aad
hlt
aam
mov
mov
shr
cmc
push
in
cmc
push
inc
popa
sbb
xchg
pop
pop
xchg
pop
cmp
mov
imul
addl
mov
inc
fstl
sahf
stos
or
mov
adc
pushf
mov
addl
sahf
adc
cmc
inc
xchg
mov
mov
nop
fwait
xor
cs
mov
loop
int
mov
scas
xchg
sbb
pushl
insb
sbb
das
rorl
pcmpgtb
jmp
ret
aas
push
cli
out
lret
lret
adcl
data16
xlat
pop
adc
mov
jne
ljmp
data16
inc
push
add
sbb
jp
or
cmp
or
xor
sets
aad
outsb
sub
push
mov
dec
js
loope
js
or
push
xchg
in
sbb
push
cltd
loop
or
add
and
xchg
in
cltd
adc
push
mov
mov
fmull
mov
or
imul
jl
mov
stos
push
push
test
cmp
xchg
outsb
stos
inc
jae
shll
mov
mov
pushf
cwtl
gs
movsl
addl
dec
aad
xchg
push
aaa
fldcw
inc
jecxz
lret
mov
xor
pushf
cmpsl
pop
mov
push
ficoml
add
or
pop
out
fld
mov
push
in
scas
mov
cs
fnsave
int
push
jge
cmp
imul
cmpsw
mov
je
clc
sti
xor
sub
adc
mov
sub
or
aaa
and
xchg
mov
js
rorb
lea
or
ds
push
dec
cmp
mov
in
movsl
jo
xor
mov
cmp
iret
sub
fnsave
js
jp
inc
mov
aam
fsts
xchg
inc
js
cmpl
mov
dec
inc
cmp
loope
sti
mov
cli
iret
stos
stos
sub
fucomip
out
aad
adc
pop
dec
push
fisubl
sub
fcmovnu
or
adc
lods
imul
call
ss
inc
rorl
sub
inc
inc
inc
fldl
cmpb
pop
adc
dec
test
enter
inc
mov
pushf
pop
rcl
out
fnstsw
into
cltd
push
add
sahf
xchg
out
mov
pop
push
and
adc
fisubs
aad
aas
int3
cld
jbe
hlt
add
stos
shrl
lcall
aad
sub
pop
incb
jns
cmp
inc
cmp
iret
inc
imul
rep
jnp
fcoms
cltd
pop
rorb
leave
fisttps
mov
push
lret
push
xchg
lret
mov
sbb
mov
adc
xor
mov
and
jbe
dec
push
xor
data16
dec
add
sub
jl
in
jne
mov
push
dec
mov
jmp
inc
icebp
pop
xchg
mov
inc
sbb
sbb
mov
jp
and
das
push
ret
dec
push
pop
mov
mov
and
and
jae
sub
inc
adc
and
pop
xchg
mov
lods
push
pushf
cmpsb
cli
xor
lods
and
xchg
push
pop
xor
add
push
jle
dec
sbb
xchg
leave
mov
xor
cmpsl
pop
cmp
mov
popf
cmp
mov
xchg
xchg
adc
jne
xor
adc
mov
push
xor
ficoms
pop
sahf
aad
sub
lret
pop
shl
lret
pop
out
dec
stos
push
xchg
mov
in
imul
jg
cli
movsb
jno
jno
cmp
dec
cmp
push
jmp
jnp
imul
sub
pop
and
xor
jne
mov
loopne
cld
sbb
adc
push
ds
data16
jbe
mov
sub
popf
scas
je
arpl
jl
xor
das
pop
clc
mov
test
jp
js
push
push
mov
add
xor
cmp
js
push
sbb
out
idivl
subb
mov
mov
mov
and
add
push
push
stos
pop
pushf
cmp
jmp
popa
imulb
loop
sub
push
adc
imul
clc
and
icebp
fcoml
out
mov
clc
ljmp
ret
test
sub
and
inc
push
int
js
cmp
test
push
mov
cmp
ror
out
push
mov
xchg
outsb
add
test
dec
out
test
arpl
shrl
inc
sbb
cmp
imull
push
push
adc
cmp
or
pop
sbb
or
xchg
int
mov
sub
push
and
ljmp
leave
jmp
fsub
into
lret
outsb
cmpsl
mov
mov
loop,pn
lods
add
xor
aad
cld
lret
clc
inc
jmp
in
cmpsb
xchg
shl
push
sbb
sbb
stos
bound
scas
roll
mov
cwtl
stos
adc
bound
popf
ljmp
push
gs
insl
jmp
add
fldcw
iret
pop
sbb
inc
push
sbb
dec
rsm
push
mov
lret
pop
adc
jg
loop
ret
mov
ja
cld
adc
inc
fidivl
push
into
ror
and
pop
movsb
iret
xor
cli
ja
and
loopne
or
and
and
push
xlat
inc
in
sub
incb
scas
leave
adc
sbb
jnp
sbb
inc
mov
outsl
mov
lret
ss
das
mov
add
bsf
mov
mov
imul
jge
push
xchg
sbb
mov
dec
and
adc
jmp
js
out
arpl
jecxz
cmp
xchg
mov
sub
xchg
add
sbb
je
rcr
or
mov
mov
mov
adc
cli
or
add
test
pop
push
aas
lret
mov
add
adc
or
andl
mov
loopne
cwtl
jp
or
je
fdivs
inc
in
sub
outsb
movsb
mov
mov
mov
mov
sub
stos
cmp
or
sbb
jg
lods
decl
jb
push
lods
popa
xorb
jbe
push
dec
mov
pop
pop
mov
jle
dec
xor
cli
fbstp
test
cmc
xchg
dec
out
pop
fimuls
sar
imul
mov
ret
xor
push
jns
test
xchg
dec
dec
imul
jno
cmpsl
dec
push
aas
lcall
and
push
cmp
push
testl
subl
lcall
subb
js
mov
punpckhdq
test
cmp
das
out
and
scas
pushf
push
inc
mov
pop
fnstsw
xchg
sub
add
mov
sbb
push
sub
in
cltd
cmp
mov
pop
pop
in
jo
xchg
adc
insb
dec
lds
pop
mov
push
stos
pushf
adc
scas
fadds
xchg
ret
scas
cmpsl
lock
inc
xor
jnp
and
mov
out
adcb
stos
xor
sbb
cmpb
dec
aaa
addr16
mov
daa
insb
insl
or
xchg
or
or
xchg
insl
xchg
push
fisubl
pop
sarb
xor
inc
dec
adc
sbb
jbe
add
jno
es
sbb
popf
push
sub
scas
adc
mov
ja
cmpl
mov
aad
push
or
shrb
mov
jnp
pop
lock
mov
or
jmp
sbbl
mov
loop
iret
loopne
in
xchg
and
xchg
stos
outsb
insb
xchg
nop
lods
sbb
stc
or
icebp
adc
loop
sub
jbe
pop
fwait
stos
mov
adc
ljmp
xor
inc
push
xchg
pop
loope
in
test
rclb
pop
imul
scas
iret
inc
addl
sbb
mov
cli
shlb
or
lcall
sbb
jl
out
sub
sbb
sub
ret
add
mov
cmp
ss
das
jne
mov
sub
jp
rolb
sub
lds
jl,pn
scas
iret
inc
mov
ret
cli
sahf
or
mov
pop
add
jo
in
insl
test
andb
lea
mov
ret
mov
gs
fcoms
mov
mov
test
dec
aas
dec
xchg
movsl
mov
xor
aad
es
sbb
aam
test
inc
mov
andb
push
sub
push
inc
lock
sub
mov
sti
call
or
repnz
xor
fsubs
imul
adc
cmp
shll
push
cmp
repnz
inc
aaa
or
xchg
and
icebp
jg
jmp
mov
fs
jb
xor
arpl
add
dec
or
imul
inc
add
pop
cmp
and
jb
pop
loop
cmp
std
mov
subb
jp
enter
notl
xchg
and
pushf
mov
iret
pop
outsl
fisubl
dec
pop
popf
into
ja
nop
mov
fmuls
cmpsl
ja
pop
call
xchg
dec
mov
mov
jg
repz
stos
pop
loop
adc
fimull
sbb
jns
ror
mov
stos
insl
sarl
add
mov
mov
pop
sbb
push
push
mov
ja
mov
int
out
inc
mov
pop
xchg
adc
add
jge
test
bound
lcall
pop
shr
aad
cmc
adc
movsb
jb
cmp
pop
pop
push
adc
arpl
jp
xchg
jl
dec
mov
stos
adc
icebp
sbb
cmp
leave
aaa
adc
mov
call
push
push
add
addr16
cmp
add
push
push
push
mov
lret
das
imul
add
push
enter
jae
mov
hlt
in
jp
rcll
jmp
lods
clc
adc
mov
pop
push
addr16
xor
xor
testl
mov
data16
inc
jmp
pop
rol
fwait
cs
mov
pop
jnp
push
mov
scas
lock
xchg
lods
sub
push
push
xchg
mov
mov
adc
dec
leave
aam
push
leave
xchg
mov
jge
jecxz
test
push
es
call
repnz
aas
jnp
out
mov
jns
enter
push
or
mov
and
lods
pusha
call
fs
push
es
jg
aam
enter
xor
and
sub
jae
adc
iret
pop
es
mov
cld
es
popf
arpl
mov
adc
popl
and
xor
inc
clc
push
mov
mov
jp
cmpsl
jp
push
leave
sbb
fisttpl
cmpl
shrl
imul
xchg
movsl
sub
shl
sbb
add
jge
fldl
cmp
cmp
movsl
inc
incb
cmp
xchg
std
rcrl
aaa
outsl
push
ljmp
rclb
xor
out
stos
clc
lcall
into
dec
out
sarl
dec
add
xchg
ret
cltd
add
pop
cmpsl
or
push
push
push
repnz
push
stos
or
lock
mov
push
test
and
xchg
adcb
add
icebp
sbbb
imul
std
shl
and
jb
cmp
add
icebp
loop
loope
cmp
movzwl
add
cmp
outsl
daa
mov
jge
cli
sbb
dec
lods
pop
cmpsl
xorb
xchg
sarl
add
pop
dec
stos
sbb
mov
outsl
cmp
out
ret
shrl
arpl
mul
pusha
addr16
cmp
or
aad
dec
mov
xchg
and
cmpsb
add
jae
out
xchg
push
adc
lods
pop
dec
rcr
sbb
cmpsl
stos
jmp
sbb
pop
mov
mov
push
jne
push
pop
aas
inc
ja
rclb
inc
mov
and
cmp
stos
push
lahf
jge
dec
jg
push
add
ret
andl
imul
fdivp
add
lcall
inc
jo
arpl
xor
push
cmp
mov
ret
out
cmp
add
test
lret
fiaddl
add
adc
repnz
scas
mov
out
cmp
xchg
mov
cmp
hlt
js
xorb
and
shr
test
int3
fnsave
adc
fsubrl
and
fucomi
mov
mov
rol
sbb
pop
div
enter
push
cmpsl
movb
and
arpl
inc
repnz
pop
ljmp
push
inc
int3
es
push
push
arpl
out
and
and
stos
mov
push
loope
lcall
cltd
or
mov
pop
into
xchg
push
xchg
movsl
push
mov
scas
add
fldcw
inc
xchg
insb
imul
mov
mov
stos
xchg
mov
out
outsl
mov
inc
es
out
jle
or
lcall
fwait
aas
daa
jle
jmp
mov
add
mov
push
test
add
lret
fs
push
mov
enter
lret
mov
inc
or
mov
pushf
xor
and
cwtl
jmp
jp
js
mov
sub
add
roll
lret
and
ror
lea
lds
out
out
xchg
in
pop
leave
testl
add
ss
pop
stos
jns
push
test
call
xchg
jp
leave
jb
mov
out
jmp
rorl
xchg
rorl
sbb
in
add
push
add
pop
and
ja
xchg
or
enter
les
ret
xchg
ret
jnp
fwait
mull
xor
cwtl
or
aas
int3
negl
imul
mov
mov
mov
or
push
sbb
inc
sub
negl
sbb
jge
fdivrl
hlt
cs
mov
imul
js
pushf
insb
fs
cmp
loopne
dec
aam
shlb
and
imul
and
sarl
inc
mov
scas
push
push
cmc
out
push
lods
out
cmp
mov
js
push
es
nop
sub
xchg
popf
dec
jge
add
jl
adc
andl
pusha
call
xchg
cmpsb
pop
pop
aad
shrl
enter
sub
icebp
push
test
jle
clc
aaa
lods
ja
ljmp
insl
std
sbb
pop
je
fsubr
shr
aad
mov
fadds
dec
mov
adc
xchg
sbb
daa
std
mov
adc
sbb
and
addr16
repnz
js
test
xor
mov
mov
sti
fbstp
mov
xor
scas
in
in
movsb
sub
test
jns
jbe
pop
std
scas
aam
fs
int3
pop
movsl
cmp
stos
pop
pop
aam
and
and
jecxz
push
mov
xor
ss
dec
adc
ss
sahf
fbld
loop
mov
mov
xlat
or
push
loope
cs
jbe
and
push
mov
scas
dec
loopne
pop
push
mov
repz
and
dec
data16
inc
outsl
test
push
or
mov
xlat
subb
iret
mov
pop
xor
mov
fcompl
mov
fdivl
imul
adc
inc
mov
mov
adc
jns
jg
push
sbb
lods
test
movd
xchg
cmp
lea
lret
sti
dec
ds
in
negl
jge
or
les
xor
jle
stc
xlat
pop
imul
and
adc
xor
jg
mov
rcll
repz
sbb
pop
sbb
int
test
jmp
pop
jnp
test
ja
shlb
repz
pop
loop
inc
xchg
jl
mov
jno
xchg
pusha
xorb
mov
sub
xchg
push
nop
std
dec
adc
sbb
push
pop
outsb
xor
leave
incb
sbb
dec
mov
mov
adc
mov
sbb
ret
xor
xchg
mov
add
or
arpl
mov
cmp
into
cmp
add
lds
and
dec
xchg
mov
xor
cmpsb
stc
sub
insb
aaa
xchg
lahf
dec
dec
js
xor
adc
test
mov
mov
xchg
sub
or
divl
ja
push
sub
popa
test
jecxz
jle
pusha
cmpsl
pcmpgtd
in
rorb
push
repnz
sarl
mov
in
jmp
test
push
sbb
and
aaa
sub
jne
jle
mov
fldenv
push
scas
into
push
mov
pop
adc
jge
loop
mov
push
add
aas
xchg
ret
out
loope
movsb
jge
mov
sub
add
call
mov
jnp
sbb
xor
cmp
sub
fstps
lcall
ja
jmp
lret
bound
into
cld
dec
mov
adc
aaa
mov
push
aaa
adc
jg
inc
mov
jmp
xchg
push
sbb
jge
test
popf
push
push
cmp
add
dec
push
mov
mov
jmp
std
imul
lock
pusha
pop
push
negb
mov
pop
sti
pushf
addl
in
es
hlt
sbb
cmc
or
xchg
and
inc
and
xchg
into
jecxz
mov
sub
jo
orb
idivb
dec
scas
mov
bnd
cmp
negb
mov
call
imul
pop
mov
icebp
into
fists
ror
cmp
sti
jne
pop
inc
scas
lret
fsubl
push
xchg
push
out
jno
push
xchg
and
sbb
xchg
xchg
jmp
fimull
sbb
mov
cld
out
scas
ret
inc
adc
leave
mov
popa
fwait
aas
and
dec
inc
test
test
sti
ljmp
jecxz
or
inc
adc
in
cmp
xor
icebp
das
clc
aaa
add
pushf
mov
jecxz
push
push
mov
addr16
dec
sub
mov
mov
xchg
mov
cmp
xchg
mov
jl
out
fisubs
gs
cmp
sub
fildl
jae
mov
rcr
mov
popa
push
xor
mov
or
repz
sub
out
xchg
aas
loope
int
out
cmp
mov
aaa
cld
cmp
mov
repz
mov
cld
int3
imul
xor
xchg
mov
mov
jmp
jbe
adcb
mov
es
lods
les
lret
sub
cmp
adc
and
in
clc
jp
mov
dec
ljmp
cli
sub
lcall
std
imul
push
and
scas
xor
iret
leave
mov
jno
nop
int
pop
mov
xchg
scas
inc
xor
and
mov
out
or
in
add
adc
lahf
xor
sub
sub
enter
addl
pop
and
adcl
pop
loopne
push
jle
icebp
mov
sahf
pop
and
scas
into
movsb
jecxz
cwtl
divb
aaa
enter
add
decb
cs
arpl
aad
repz
sahf
imul
add
cwtl
and
dec
and
pop
hlt
popl
xlat
xchg
mov
test
lock
incl
xchg
xor
cmp
jbe
mov
aam
pop
ret
or
ljmp
fdivl
scas
pop
fxch
adc
mov
popl
dec
add
add
jb
sbb
pop
or
add
imul
jecxz
out
or
dec
mov
push
pusha
push
xorl
fcmove
adc
mov
add
add
outsl
loop
out
mov
inc
or
scas
add
nop
les
sub
nop
mov
test
lds
das
je
sarl
nop
jp
or
leave
mul
push
sub
xchg
dec
in
sbb
hlt
hlt
xchg
pusha
push
push
jmp
dec
leave
sbb
mov
jne
repz
inc
inc
insb
fwait
fwait
jo
mov
xchg
and
es
aam
pop
xchg
mov
enter
lcall
out
loope
es
dec
inc
add
je
stos
dec
and
repz
ret
lahf
loope
push
clc
xor
ljmp
and
and
fists
aad
pop
sbb
push
insb
nop
and
sbb
cmc
stos
loopne
ret
jns
adc
inc
jp
pop
jg
call
jle
sahf
mov
js
pop
aad
ds
jae
dec
mov
rorl
mov
fldt
jae
mov
xchg
sub
and
adc
fists
shlb
test
sub
cmc
xor
out
ja
push
jmp
pop
insb
inc
test
ret
inc
test
test
xchg
add
cmp
lods
jle
jge
push
iret
cmpsb
inc
arpl
mov
sbb
iret
das
fistps
mov
aam
xor
pusha
xchg
leave
das
daa
xchg
into
daa
xchg
ja
jp
jge
mulb
mov
loope
mov
pop
jno
mov
mov
sub
cli
ja
jg
loop
xor
and
mov
sbb
adc
insl
ds
std
hlt
sub
movsl
stc
adcb
pop
sub
cmpsb
loop
aad
call
sbb
cmp
xchg
push
pop
sarl
movsb
leavew
cmp
lods
jle
fnstsw
fisubrl
daa
mov
ss
dec
mov
pop
and
std
sub
int
pop
shlb
les
inc
push
mov
xchg
mov
lret
roll
stos
sub
jne
add
mov
add
mov
inc
ja
scas
mov
test
pop
or
mov
out
lea
ror
hlt
inc
ja
sub
into
cwtl
andl
mov
inc
dec
enter
cli
insl
insl
mov
js
mov
test
pop
lds
mov
sbb
cmp
cwtl
mov
xchg
mov
cs
xlat
inc
in
adc
sbb
xchg
out
out
fisubrs
cmc
cmp
push
sbb
and
ret
mov
jb
pusha
popf
lea
sahf
aad
iret
dec
pop
cli
or
pop
jbe
mov
cmpl
icebp
mov
lahf
test
testl
popf
xchg
xor
lods
xchg
aad
jecxz
ret
fsubrs
leave
xchg
mov
rcl
faddl
sbb
into
ret
sub
aad
add
int
icebp
pop
mov
fnsave
rorl
sub
cwtl
mov
dec
jno
fmull
xchg
icebp
shrl
sub
shll
jge
mov
leave
fsubs
mov
outsl
jbe
dec
cmc
loopne
in
add
jno
pushf
jae
lea
and
mov
sub
mov
movsb
and
enter
sahf
aaa
shlb
push
arpl
mov
iret
cmp
cmp
mulb
inc
imul
dec
pop
sbb
insb
lods
aad
out
sarl
xchg
mov
pop
push
adc
aam
xchg
push
cmp
mov
and
add
insl
sub
adc
loopne
iret
xchg
out
xchg
fidivrs
jns
int3
mov
sbbb
orl
lods
pop
xchg
jecxz
mov
inc
cld
lods
ja
test
push
cmp
mov
mov
pop
xor
mov
dec
cld
pop
lods
ret
shl
adc
jne
das
rcrl
leave
sub
aaa
pop
into
dec
mov
decl
push
dec
sbb
les
pop
adc
aam
mov
fldt
lea
stc
subl
xchg
pop
mov
mov
xor
mov
mov
add
test
add
cmpl
mov
adc
pop
scas
dec
pop
sub
cltd
fisttpll
andl
mov
jb
cmp
or
out
mull
cwtl
testl
fdivr
enter
fisttpl
sar
mov
lock
pop
xor
das
loopne
sbb
subl
mov
push
repz
hlt
test
fcmovnu
push
lea
pushw
dec
sbb
mov
ljmp
in
dec
imul
repz
adc
daa
mov
scas
adc
popf
add
pusha
sbb
mov
inc
lcall
xor
pushf
push
and
add
dec
mov
xor
push
jnp
xchg
jmp
fwait
in
push
xchg
out
les
cwtl
or
cmp
test
loop
ret
lret
lret
jb
mov
les
jo
jle
sbb
jg
sub
mov
jle
lods
outsb
and
or
and
push
mov
add
sahf
jp
sub
sbb
fisttps
mov
or
jle
pop
mov
sbb
fadd
sbb
sbb
lcall
popf
inc
mov
test
xchg
mov
imul
cmp
in
jge
das
pop
xchg
jmp
stos
or
in
stc
push
push
jo
adc
xor
jg
aaa
ja
lods
pop
xchg
mov
fmull
ds
insl
add
mov
and
adc
call
in
cltd
mov
jg
in
divb
pusha
inc
jo
mov
in
mov
jg
mov
loope
iret
in
dec
mov
cmp
mov
jbe
mov
jnp
je
add
mov
mov
mov
dec
aas
xor
jns
xor
movsl
pop
jb
inc
cmp
push
mov
arpl
aad
lods
cmp
push
addl
movsl
scas
aad
or
dec
outsb
or
jl
fcoml
testb
mov
add
push
arpl
stos
mov
clc
xor
jo
mov
stos
fcoml
roll
dec
sbbb
out
fistpll
cmpsb
mov
out
inc
les
out
lcall
add
mov
idivl
mov
popa
fnstsw
out
test
xor
out
test
call
movsb
sbb
loop
xchg
fwait
push
mov
or
xor
push
int3
and
push
daa
sbb
bound
xor
fidivrl
sub
mov
mov
add
pop
adc
xor
cmc
jmp
ljmp
int3
sahf
out
xlat
cmp
imul
js
ss
adc
cmp
test
sbb
adcl
jge
nop
push
push
xbegin
movsb
or
ss
xorl
inc
imul
rcll
pop
push
fisubs
jge
cltd
popf
bound
mov
or
adc
dec
scas
lds
cltd
movsb
sbb
sub
push
decb
dec
imul
and
and
repnz
adc
xor
pop
pop
or
push
pop
popa
roll
je
popa
mov
repnz
insb
leave
mov
dec
loop
fwait
pop
scas
iret
les
lahf
pop
int3
inc
loopne
fs
int
stos
mov
cld
fidivs
dec
inc
or
test
stos
pop
sbb
jle
call
psubusb
in
mov
cmpsl
sbb
mov
cmp
pop
loope
test
xor
inc
jecxz
xchg
leave
sub
push
push
notb
xchg
and
pop
jp
pop
ret
jnp
movsl
mov
jns
cld
lods
adc
cmp
loope
jae
xor
jns
fmull
pop
lods
adc
xor
sbbl
int
fs
pop
jge
xor
jle
es
lahf
add
or
jle
int
xchg
fmul
mov
xchg
mov
or
mov
jmp
fcoms
fucomip
repnz
inc
jae
fs
sbb
ret
test
test
xor
fisubl
es
lods
inc
ljmp
push
xchg
inc
and
xchg
push
es
add
sbb
mov
xor
out
sti
xchg
push
dec
xchg
adc
scas
sarl
sbb
push
lods
ds
jno
ja
insb
shrb
jl
icebp
pushf
ds
hlt
dec
mov
sub
add
cmp
int3
ja
sub
gs
pop
add
in
test
dec
leave
mov
lcall
sub
push
push
dec
popa
fstpl
inc
test
lret
es
jp
sbb
push
lret
roll
stos
fnsave
push
dec
dec
adc
insb
cld
jmp
jns
or
nop
adc
jae
das
out
jle
adc
xorl
addr16
dec
mov
shlb
imull
push
sub
cs
movsl
sbb
push
mov
hlt
mov
adc
inc
popf
pop
clc
pop
mov
xor
and
pop
xor
sbb
hlt
pushf
addl
and
add
pop
or
stc
xchg
pop
dec
pop
out
pop
pop
dec
ja
mov
sbb
mov
movsb
iret
hlt
push
xor
popf
andl
adc
addr16
in
fcomps
loope
jns
das
addl
pop
jmp
aad
and
call
and
gs
xlat
test
clc
jb
mov
stc
aad
rclb
loopne
add
ret
mov
sub
jl
mov
fdivrl
xchg
nop
dec
divb
cld
lds
push
sbb
es
shr
mov
sub
nop
loopne
outsl
dec
or
push
jge
dec
prefetch
mov
ret
and
adc
sub
sbb
sbb
adc
dec
pop
ret
push
clc
mov
test
and
fs
cwtl
cmp
jae
and
jns
clc
sahf
jo
cmp
outsl
add
aas
out
pusha
out
pusha
inc
loopne
and
outsl
test
movsb
pop
and
jo
dec
jle
sbb
outsb
popa
mov
pop
lret
int
aas
rcll
mov
fbstp
inc
xchg
jbe
and
lock
lret
test
and
mov
lods
add
and
fwait
popa
inc
mov
insb
es
inc
xlat
test
lea
stos
in
pop
test
dec
pop
pushl
das
sub
xchg
jle
add
push
fldcw
pop
jb
lock
add
cmpsl
pop
adc
adc
push
xor
stos
mov
jbe
jns
lret
mov
inc
jmp
mov
push
mov
sahf
mov
mov
sub
addr16
add
bound
and
pop
mov
pop
mov
jg
xchg
and
lret
stc
dec
cmpsb
jl
sti
mov
lahf
stos
hlt
adc
scas
add
cmpsl
mov
bound
pop
mov
inc
inc
enter
or
mov
movsl
inc
inc
xchg
lahf
sbb
pop
shlb
pop
add
push
jl
and
jmp
sbb
lahf
or
push
iret
stos
divb
mov
add
adc
dec
repnz
and
or
jnp
jno
push
inc
in
xchg
xchg
push
mov
popf
cltd
stos
push
out
dec
cmpsb
loop
ja
sbb
sub
vmovdqu
repz
test
push
sbb
jnp
scas
scas
les
dec
or
and
aas
xchg
std
inc
jg
mov
sub
icebp
pushf
inc
add
cs
pushf
mov
sub
sbb
mov
fbld
iret
inc
xchg
movsl
and
out
scas
jb
adc
bound
in
mov
pop
clc
enter
cmpsl
push
mov
push
mov
or
pop
cmp
and
xor
pushf
push
push
aad
mov
mov
leave
sbb
test
xor
xor
jmp
xor
xchg
add
sti
daa
jp
jae
ret
inc
cmp
pop
mov
pop
mov
sar
shll
popa
aaa
pop
int3
sub
or
adc
push
sub
scas
push
and
setb
scas
jp
ss
pop
popf
lock
std
xor
sahf
sub
lahf
pop
jmp
ret
cmc
jbe
sbb
and
mov
pop
sbb
jl
loope
fidivs
jbe
movsl
insl
add
ror
push
std
pop
and
mov
push
loopne
xchg
test
cwtl
repnz
aas
orb
or
pop
inc
call
xor
adc
imul
ret
xor
sub
jae
fwait
add
test
lods
jge
inc
xor
lock
push
pop
and
fstl
sbb
pop
out
aad
enter
mov
lahf
cmp
cmp
xchg
cmpsb
movsl
mov
mov
jmp
cmp
inc
ret
sarl
hlt
jmp
sub
cmc
into
pushf
sbb
insl
rorl
std
xor
xor
push
lcall
mov
les
mov
out
sub
push
arpl
mov
or
pop
mov
push
nop
lds
jg
hlt
push
jmp
mov
or
push
pop
pop
mov
subb
dec
pop
rcrl
imul
cmp
mov
iret
xchg
mov
test
jl
in
mov
jns
out
cmp
cli
daa
push
sbb
push
lock
pop
fcmove
cmpsl
in
and
mov
movl
dec
or
or
aas
jp
and
mov
push
push
jge
pop
push
cmp
cmp
jg
scas
cmc
frstor
xchg
mov
xchg
rolb
sti
and
mov
sub
mov
lods
cmp
xchg
xorb
add
loopne
cwtl
fbstp
je
cmp
pop
mov
into
mov
push
or
adc
inc
sub
xchg
fistps
or
neg
and
adc
push
jecxz
push
sub
and
dec
xchg
incb
dec
adc
loop
testb
movsb
addb
sbb
adc
sbb
sbb
daa
push
mov
insl
mov
mov
add
jmp
xchg
push
shll
jg
jbe
push
cltd
cmp
pushw
inc
loope
fnstenv
xchg
cmpsb
js
loopne
pop
pusha
ljmp
lods
mov
push
test
cmp
jl
mov
enter
cmp
shrl
xor
sti
mov
out
sbb
jae
xchg
js
sarl
lret
sahf
popf
and
and
bound
add
mov
inc
cmc
aad
daa
mov
mov
pop
pop
mov
iret
fildl
add
push
int
mov
repz
shrb
mov
jbe
jecxz
mov
xor
shll
adc
mov
cmpsb
repz
pop
loop
pusha
mov
cli
cmp
lahf
jo
out
dec
in
or
outsl
scas
dec
xor
imul
add
or
push
adc
push
or
pop
imul
in
jecxz
xlat
xchg
xor
ds
adc
addr16
jo
push
pop
dec
test
cmc
nop
dec
inc
adc
inc
add
xchg
pop
xor
inc
popa
int3
data16
adc
push
jno
mov
test
xchg
in
scas
xor
fimuls
cmp
mov
sbb
sub
dec
xor
lods
or
lret
ficompl
int
mov
or
ljmp
mov
sahf
dec
mov
mov
mov
cmp
fldcw
xchg
stc
add
iret
fiadds
inc
out
movsl
inc
cs
popf
jbe
inc
inc
int
xor
mov
call
xchg
shrb
cmpsb
jl
mov
xor
sbb
pusha
mul
cmpsl
mov
sbb
mov
rorb
test
xor
xor
loope
hlt
mov
ret
hlt
shlb
pop
add
test
loop
int
and
stc
mov
arpl
sbb
imul
jb
out
or
or
inc
jae
out
pop
test
push
pop
xlat
inc
int
mov
movsb
pop
mov
or
mov
lods
cwtl
test
ljmp
jp
push
loopne
inc
adc
in
add
dec
xchg
jmp
hlt
xor
and
fildll
mov
pop
and
popa
mov
fdivl
adc
fsubs
add
cmp
jmp
sub
hlt
pop
insl
xchg
dec
jecxz
mov
aam
push
cmp
lods
mov
jecxz
push
jno
dec
adc
add
aas
pop
orb
adc
adc
scas
adc
stc
mov
negl
xchg
cmpsl
pop
push
in
add
sbb
fisubs
push
fscale
add
icebp
mov
jmp
sahf
add
fildl
add
lods
mov
popf
push
imul
mov
lret
leave
popf
cmp
cmpsl
lret
scas
xor
mov
mov
loope
in
xchg
xchg
gs
mov
lea
test
outsb
out
out
jp
jo
pop
mov
stos
xor
lcall
push
adc
bound
out
stc
rcrb
mov
cmp
add
subb
jle
in
ret
fidivrs
xchg
and
push
xchg
out
repnz
xchg
hlt
xor
push
fs
fs
fimuls
lock
push
data16
fstl
mov
jp
pop
jnp
jno
in
inc
or
push
mov
push
mov
mov
jl
call
xor
shll
mov
add
shl
loopne
ret
mov
mov
pusha
push
ret
addb
pause
mulb
inc
mov
rcll
jae
add
sbb
pop
push
stos
sbb
popf
imulb
push
mov
sbb
push
aas
cmpsl
dec
cltd
jmp
nop
and
rolb
adc
sub
aas
add
movsb
ror
in
inc
sub
and
push
xchg
xchg
stos
pop
mov
dec
xchg
and
notl
and
pause
cmp
dec
mov
push
sbb
loop
pop
dec
popa
ja
call
movsb
pop
push
fidivs
add
pop
cld
push
add
jno
scas
adc
adc
xchg
shll
ds
dec
or
add
add
cmp
fimull
jge
pusha
rcll
cmp
cli
mov
push
shl
jl
sbb
imul
test
loopne
out
mov
add
enter
shll
scas
mov
test
pop
mov
add
insb
cmc
bound
pop
pop
jmp
jle
cwtl
cmp
mov
aad
stc
add
or
mov
vpcmpeqd
vpmacsdql
pop
mov
nop
movsb
shll
inc
cltd
mov
fisubl
sub
aam
in
fisubs
nop
sbb
add
jne
andl
and
pop
push
inc
ds
push
sbb
outsl
test
shl
cmp
ret
shll
sbb
scas
xchg
les
orl
mov
test
push
cmpsl
sub
shl
lods
subb
out
jmp
test
ficomps
cltd
bnd
cmp
clc
dec
mov
cli
mov
fistpll
test
pop
out
and
enter
arpl
mov
fs
lods
orb
pusha
in
mov
lock
scas
mov
adc
leave
cwtl
daa
push
or
and
mov
fwait
dec
push
push
out
add
out
test
mov
scas
jmp
flds
or
cmp
or
fstl
dec
ja
mov
pop
test
mov
leave
push
cmc
out
repz
jbe
test
frstor
repz
popa
inc
shr
push
add
stc
xchg
repnz
call
jne
mov
jmp
xchg
rcrb
push
fiadds
imul
stos
adc
cmc
movsl
fldt
addr16
aaa
push
pop
and
push
xchg
loope
out
and
jnp
xor
xchg
movsl
cmp
notb
push
sub
mov
icebp
je
xor
push
sbb
les
jb
nop
pusha
inc
subl
add
mov
xchg
pop
push
jl
sbb
push
incl
out
pop
shlb
dec
fcompl
sub
pop
loopne
das
dec
shl
fidivl
leave
insl
popa
mov
cmpsl
fnstenv
dec
js
sbb
pop
adc
scas
ljmp
mov
sbb
imul
inc
std
test
mov
xor
lods
test
pop
xchg
insb
xchg
jns
call
aaa
and
lods
xor
jns
inc
cmp
xchg
sub
sub
sub
adc
shll
in
or
ret
rorl
pop
aad
popa
sbb
mov
mov
in
add
adc
std
ret
movb
out
ficoms
popa
cli
add
fs
fdivl
cmp
test
idiv
fadd
sub
ret
iret
pop
and
andb
sbb
cmpsb
add
cwtl
mov
fildll
nop
insb
xchg
sbb
mov
leave
dec
pusha
push
cmpsb
pushw
xchg
pop
mov
push
mov
roll
xchg
test
push
cltd
xchg
cmp
xor
jb
popa
push
in
ja
shlb
je
or
sub
mov
push
lods
xlat
out
sbbl
movsb
lret
in
pushf
sarb
xor
popf
loope
sarl
mov
mov
leave
pop
cli
inc
rcrb
imul
mov
cmp
ss
daa
mov
inc
rol
test
dec
sbbl
icebp
or
call
mov
nop
mov
insb
and
sub
fimull
clc
mov
ss
push
daa
enter
dec
daa
cmp
int3
mov
das
sub
pop
je
jb
push
addr16
call
push
lds
movsl
leave
std
xchg
mov
fisttpll
dec
xor
dec
je
dec
and
int
or
popf
les
inc
mov
sbb
arpl
cmc
cmp
adc
pushf
adc
in
daa
xchg
cmp
ficompl
imul
mov
xor
in
outsb
cltd
hlt
sarl
or
mov
loop
and
xor
and
ss
cmp
mov
push
int3
icebp
leave
imul
jo
cltd
adc
in
mov
jge
lret
jl
repz
pop
sub
and
stos
pushf
repnz
mov
lods
jb
and
and
dec
xchg
mov
push
xchg
jo
dec
pushf
add
test
dec
lods
int
or
iret
cmc
pushf
enter
and
mov
cwtl
cli
jg
jnp
pusha
mov
dec
loopne
mov
pop
imul
mov
adc
pop
out
sub
xchg
xor
add
sbb
or
push
ja
xor
cwtl
mov
scas
sub
aaa
pop
jne
sbb
aas
jl
scas
xor
and
call
xchg
and
lahf
jge
icebp
xchg
jbe
popf
mov
pop
imull
jns
push
into
lcall
cmc
test
rcrl
out
popa
mov
lock
in
scas
xchg
cmp
or
popf
dec
icebp
iret
scas
adc
fwait
mov
cmp
mov
imul
cmpxchg
movsb
mov
fadd
pop
lret
enter
jg
mov
pushf
lods
mov
in
ds
xor
jno
xor
pushf
stos
imul
mov
jle
dec
dec
adc
inc
inc
add
push
mov
inc
mov
iret
and
aaa
mov
pop
xorl
hlt
sbb
jp
shlb
aas
pop
dec
push
ds
inc
push
jl
pop
adc
mov
add
pushf
adc
divb
shlb
inc
pop
das
dec
pushl
and
inc
hlt
push
mov
dec
push
xor
jne
arpl
rcr
pop
ret
gs
add
mov
mov
cmp
xor
sub
xor
hlt
cmp
shl
fsub
leave
mov
adc
sub
push
sbb
rcr
jge
mov
lret
sahf
mov
dec
subb
add
mov
dec
and
fnstcw
xchg
xchg
cli
sbb
sti
and
mov
sub
add
shrb
subl
xor
pop
xchg
test
jno
xchg
test
mov
inc
jae
mov
sub
imul
adc
sbb
push
jl
add
inc
pop
lods
cmp
ds
jmp
arpl
outsb
adc
outsl
loop
jl
dec
cmp
and
enter
and
outsl
in
pushf
cmpsl
xchg
jle
or
jge
sub
fimuls
pop
xchg
fidivs
push
inc
pop
jmp
or
jp
hlt
out
mov
dec
ds
add
push
insl
jle
xchg
clc
pop
add
cmp
int3
push
outsb
cmpsb
push
mov
mov
xor
and
xlat
iret
xchg
xor
pop
sub
lea
stos
sahf
dec
lods
sbb
pop
ficomps
xchg
inc
sti
out
ficoml
xchg
jno
sbb
inc
loopne
lret
pop
pop
add
mov
or
pop
fsubr
imul
out
mov
stos
push
data16
xchg
mov
and
add
dec
out
into
shll
stos
idivb
adc
mov
xchg
mov
mov
mov
cltd
mov
jbe
icebp
inc
xchg
and
sub
outsb
outsl
xchg
insl
inc
and
mov
out
faddp
push
sti
dec
mov
ret
pop
in
dec
add
jg
cmp
jp
xchg
in
sub
mov
mov
sbb
repz
pushf
cmpsb
scas
xlat
popl
push
add
xchg
lcall
dec
xchg
loopne
lock
dec
lahf
mov
das
xchg
fstps
rcrl
out
lods
lret
in
jmp
inc
cmp
cli
js
sarl
in
loopne
jae
aam
adc
int3
add
aad
xor
adc
sub
jbe
insb
inc
aam
push
repnz
fsts
outsb
call
cld
ds
push
jl
inc
aaa
clc
fbld
adc
stos
or
loopne
jle
cmpsb
in
popa
outsl
sub
add
repnz
xor
push
enter
aaa
xor
mov
or
test
xchg
scas
mov
sbb
data16
ret
dec
jmp
mov
sbb
lea
in
test
push
add
push
in
mov
cmp
xlat
sbb
inc
andb
mov
ret
xchg
in
stos
lds
push
push
es
bound
nop
xchg
fsubrl
cwtl
ja
or
pop
adc
push
xchg
push
xor
pusha
pop
mov
mov
and
dec
xor
pusha
pop
call
lahf
push
js
loopne
push
cltd
out
mov
adc
aam
mov
sbb
loop
pop
dec
pop
jmp
xor
mov
ret
mov
inc
rclb
add
jns
push
pop
push
pop
cmp
sub
lret
ret
xor
add
outsl
push
add
repz
std
add
jo
fisubl
xor
lahf
add
cmp
mov
test
shl
roll
out
adc
inc
cmpsl
jp
nop
in
hlt
inc
orl
out
popf
cltd
mov
ds
cmp
sti
cmp
xchg
test
mov
push
and
aaa
loop
dec
lret
push
push
rolb
fstpl
sbb
push
fld1
les
fistl
push
mov
pmaxub
mov
test
out
je
inc
xor
loope
adc
push
xor
inc
dec
addl
xor
jns
loop
mov
jbe
pop
mov
cmp
stos
outsb
leave
dec
add
pop
fdivrs
mov
and
sti
add
mov
mov
std
push
imul
and
ja
aaa
push
sub
xchg
mov
jl
dec
daa
inc
lds
popf
out
in
sahf
adc
jmp
add
mov
test
jle
div
movsl
jns
sbb
aad
cltd
shll
je
inc
ss
mov
inc
mov
dec
lock
sub
sbbb
lcall
cld
fdivr
popf
push
cmc
xor
push
mov
mov
leave
sbb
clc
and
xor
cmpsl
push
rcll
fildl
and
push
mov
mov
imul
mov
jns
push
mov
fsubl
and
inc
adc
push
or
scas
pop
mov
gs
testb
inc
outsb
and
divl
gs
shrl
rcrl
jns
popl
pop
and
dec
sub
adc
mov
push
int
mov
ja
into
sahf
stos
repz
out
fsubr
mov
repnz
insb
pop
add
cli
mov
push
dec
sbb
push
orl
pop
loope
and
add
pop
sbb
jle
incb
in
jne
dec
outsb
pop
jns
mov
outsl
push
fwait
out
xchg
xor
les
pushf
fwait
mov
lods
or
incb
mov
sbb
daa
sub
lahf
mov
pop
das
popa
loope
sbb
daa
movsb
or
leave
or
push
pusha
xchg
mov
test
nop
mov
mov
scas
test
ljmp
jecxz
xchg
inc
ja
push
cmp
fs
sti
cmc
fldt
and
add
sbb
sub
cmpsb
cwtl
or
movsb
sbb
out
adc
dec
lods
and
sub
pop
add
or
xor
cmp
lahf
fadd
xor
dec
pusha
jno
and
nop
xchg
shlb
add
mov
cmpsb
dec
sub
fnstcw
xchg
cmpsl
leave
lds
jb
cmp
lds
mov
sub
clc
cli
mov
popa
sbb
imulb
rcrb
outsb
xchg
xor
and
in
or
loope
stos
push
repnz
clc
sahf
sub
loope
icebp
dec
pop
add
add
mov
add
sbb
push
xor
fisubrl
sub
jp
inc
andl
lret
hlt
xchg
dec
xchg
lret
adc
xchg
and
jecxz
pop
dec
sbb
pop
ret
sub
mov
mov
and
in
out
sub
sbb
jg
sub
cmp
mov
jo
cs
or
subb
jb
push
push
jb
shll
lock
jecxz
mov
fdivs
popf
cmpsl
inc
in
inc
xchg
mov
aad
sbb
jp
add
aam
sbb
and
cmpsb
mov
mov
inc
rorb
xchg
lea
cmp
or
lcall
or
jmp
xor
lock
jns
movsl
inc
and
sbbl
ljmp
aad
jb
push
xchg
and
add
das
nop
rorb
mov
pop
enter
sbb
ret
cmp
ret
and
shll
je
sub
xor
fdivrs
xchg
ljmp
scas
xchg
leave
or
inc
repnz
aas
or
jge
pop
xchg
sbb
adc
clc
mov
add
es
mov
dec
fidivrs
lret
insb
mov
inc
lds
cmp
mov
mov
and
xchg
xlat
test
jg
int
data16
xchg
outsl
jb
cmpsl
or
inc
adc
inc
mov
push
mov
enter
mov
mov
xor
dec
mov
loope
inc
jo
push
xchg
mov
out
xchg
sbb
in
rclb
adc
inc
lock
dec
adc
test
sbb
in
cltd
aaa
push
int3
repnz
filds
rcl
in
in
xor
stos
cli
lds
std
xor
sub
mov
cmpsb
jns
es
sbb
fcomps
push
fisttps
shll
pop
or
iret
cmpsl
cmp
addr16
leave
push
cltd
xchg
pop
ds
jecxz
jbe
xchg
aad
dec
inc
cmpsb
into
les
mov
add
scas
and
jae
jmp
pop
cmpsb
mov
arpl
fsts
adcl
arpl
and
cmp
shl
fwait
pop
imul
fdivs
std
shlb
ljmp
mov
leave
cs
stc
int
loope
repz
pop
inc
dec
test
adc
mov
mov
icebp
das
lock
repnz
mov
popf
inc
mov
mov
sub
adc
jg
push
cmc
enter
pop
pop
mov
push
xchg
adc
jb
inc
pop
and
mov
jl
push
cmp
pavgw
xchg
leave
jecxz
fsubs
and
shrb
lods
out
ss
sbb
cmpsb
pop
data16
js
adc
das
jmp
mov
mov
imull
repnz
inc
mov
mov
cmp
sti
popa
stos
pop
aas
jno
leave
xchg
stc
inc
jne
movsb
jno
jg
jg
adc
add
out
push
scas
jle
cmp
inc
js
js
or
inc
sub
scas
fbstp
das
mov
dec
int
xor
jns
out
dec
orl
enter
push
loope
xchg
gs
or
cmp
xor
xchg
mov
push
jle
andb
inc
cmpb
cmp
int3
mov
outsb
lods
dec
xchg
add
imul
inc
sbb
mov
test
call
and
cmp
stos
sub
nop
lea
cli
xor
cli
outsl
mov
cltd
fsubr
cmp
xchg
popa
cwtl
aas
popa
and
daa
out
sahf
adc
aam
push
out
lahf
clc
mov
mov
outsl
xor
mov
adc
loop
not
icebp
or
mov
fwait
push
das
jae
es
mov
mov
or
adc
sti
and
xchg
in
adc
sbb
sub
pop
stc
movb
xchg
ficompl
lret
jecxz
pop
inc
mov
out
cld
inc
mov
addr16
mov
cmp
mov
scas
faddl
cmpsb
lahf
jge
popf
cmp
xchg
shlb
inc
mov
inc
test
or
xor
add
sbb
or
lock
ss
pop
mov
pop
leave
dec
lds
mov
jmp
mov
mov
jnp
mov
adc
lcall
adc
adc
les
fsubs
rcrl
mov
ss
nop
pushf
sbb
loopne
shl
out
cmp
lahf
and
movsb
lret
outsl
int
pop
or
notb
inc
stc
cmp
dec
enter
out
mov
inc
adc
aas
lret
push
sbb
mov
out
dec
xlat
mov
fimuls
lods
jo
daa
imul
les
cs
push
xchg
notb
scas
xor
das
test
sub
les
dec
mov
into
stc
test
test
and
mov
fsubp
jge
xchg
cwtl
push
jge
loopne
or
add
arpl
dec
adc
cmp
mov
aas
and
add
fdivrl
sbb
cmc
jae
pop
inc
fwait
xchg
mov
lahf
or
adc
in
sbb
and
jne
out
push
mov
inc
jecxz
out
out
dec
mov
stc
into
push
adc
push
iret
js
in
cmp
stos
and
add
push
adc
xchg
push
cmpb
dec
insb
pushf
js
ficompl
mov
clc
scas
dec
js
jno
cmpsl
sub
mov
mov
stos
mov
inc
call
sub
dec
sbbl
sub
pop
mov
mov
adc
stos
popf
inc
stos
les
fsub
push
imul
xchg
cwtl
xor
fimuls
mov
ror
fnstcw
jmp
lock
or
inc
mov
mov
mov
test
insl
sub
stc
push
pop
fs
leave
sbb
adc
and
notb
jmp
fsubrs
test
lret
std
sub
xor
insl
std
cmp
scas
push
imul
sub
nop
cmc
scas
sbb
push
je
and
in
into
aad
sti
in
lea
movb
fisttps
mov
repnz
mov
sub
orl
dec
cmp
rcrl
movsb
pop
test
cs
jge
mov
shlb
test
pop
mov
add
or
gs
insb
sub
fmuls
dec
out
jns
in
cwtl
test
cmp
jo
dec
je
mov
hlt
sub
or
sbb
in
push
pop
inc
xchg
add
ja
repnz
sub
out
ss
int3
pop
rcrl
inc
aad
je
cwtl
push
ljmp
fwait
outsl
mov
cld
lds
xchg
sar
and
sbb
push
in
xor
dec
into
jno
mov
mov
movsl
sub
cmc
mov
xor
pop
dec
jo
cmp
call
adc
das
jno,pn
sub
jne
pcmpeqw
and
dec
repnz
loop
add
dec
push
addl
cmp
outsl
cld
aad
daa
scas
je
xor
inc
mov
sub
and
popf
cmp
push
mov
gs
mov
dec
in
lea
loop
inc
dec
mov
sub
fst
sbb
mov
outsl
inc
into
mov
jge
aaa
cs
leave
mov
das
aas
cmp
aad
fsubs
mov
mov
adc
mov
mov
std
and
push
ds
sub
inc
and
push
ss
sub
pop
mov
int3
xchg
inc
adc
and
xor
or
push
xchg
and
cmpsl
xorl
and
mov
sbb
jmp
jnp
cwtl
cmp
inc
fcompl
cmp
mov
sbb
aaa
pop
js
mov
gs
in
stc
dec
cltd
sahf
sbb
xchg
xor
xchg
push
inc
loopne
shlb
adc
insl
push
push
xchg
lret
in
pop
xchg
add
shrl
leave
sub
insb
decl
sbb
leave
jns
aas
mov
repnz
je
in
lcall
repz
dec
xlat
jbe
std
push
out
pop
cmp
std
mov
xchg
adc
or
stos
adc
push
ds
push
sub
mov
sub
hlt
lahf
loopne
push
test
lret
clc
lds
jnp
jmp
mov
movsb
ror
cmp
adc
data16
jmp
cmp
cmp
leave
pop
cs
xchg
sub
inc
push
or
into
iret
shlb
push
dec
mov
sbb
mov
loop
mov
ds
int
mov
push
int
loope
jae
xchg
test
cmpsl
divl
rol
jne
flds
push
out
pop
lods
fs
inc
and
pop
cmp
cltd
pop
adc
hlt
xchg
cmc
mov
jecxz
and
pop
lcall
pusha
pop
dec
insb
xchg
lods
test
leave
fldt
lret
inc
mov
mov
icebp
sbb
xor
in
mov
add
into
leave
arpl
js
int
sets
mov
sub
cli
xchg
subb
sbb
sti
sub
inc
cltd
es
and
js
inc
mov
push
cli
call
mov
sahf
ret
cmp
scas
out
insb
lock
mov
xchg
mov
fwait
pusha
outsl
mov
lods
xor
andl
scas
and
mov
inc
cmp
loope
push
inc
lea
out
cltd
xchg
out
clc
out
adc
sub
mov
mov
movsl
xorb
add
out
jmp
inc
lds
in
dec
mov
subl
out
dec
cmp
xor
fidivrs
sbb
mov
mov
lock
pop
and
imul
stos
pop
fsubr
icebp
mov
in
or
mov
adc
sahf
push
jno
sbb
xchg
ret
out
mov
iret
mov
fadds
jbe
push
mov
mov
dec
push
push
sbb
in
adc
fdivs
add
adc
outsb
dec
stc
ret
mov
jg
stos
outsl
ficoml
sbb
add
fnstsw
icebp
mov
dec
pop
add
fnstenv
pop
jmp
cwtl
jbe
shlb
pop
jmp
cli
push
addr16
push
clc
xchg
push
sbb
mov
imul
and
stc
pop
adc
inc
inc
loop
insb
sbbl
xor
clc
rolb
push
out
pop
std
bound
mov
cmp
hlt
cmc
mov
mov
popf
xor
dec
mov
scas
push
ret
mov
lods
push
imul
loopne
dec
push
xchg
sub
mov
aaa
add
sbb
push
shrl
adcb
sub
fimull
pop
lods
inc
mov
pop
das
xor
or
test
rcr
dec
bound
fistl
lret
xchg
mov
pop
ret
loope
inc
inc
cmp
es
mov
xlat
inc
jbe
push
je
divl
stc
lock
dec
aas
cli
pop
adc
icebp
ja
dec
cmp
jecxz
jge
outsl
je
mov
add
xchg
ss
les
imul
push
test
mov
pop
hlt
negl
jge
sub
mov
dec
in
mov
cmp
jg
bound
xor
cli
std
sbb
inc
xor
cwtl
push
pop
in
ljmp
pop
stos
and
mov
aad
jae
fildll
dec
xor
inc
mov
lret
fmulp
jle
adc
push
cmc
dec
sbb
inc
jge
mov
daa
pop
jbe
jmp
aad
addr16
lret
push
lods
mov
jmp
decl
mov
xchg
push
stos
cltd
ffree
sbb
jo
call
loopne
cmpsb
mov
and
or
lock
test
scas
jbe
jns
das
push
xchg
sbb
jg
push
pop
int3
out
sub
mov
les
mov
lods
xor
hlt
and
mov
xchg
fs
lock
mov
subl
push
imul
scas
test
sub
cmp
repz
sub
out
pusha
scas
mov
mov
xor
mov
inc
bound
mov
ret
xchg
cmp
cmp
into
sbb
shlb
sbb
xor
pop
dec
jl
repz
enter
xchg
dec
inc
nop
push
mov
je
or
test
push
xchg
xchg
scas
add
lock
shlb
mov
in
lods
shll
dec
jno
cmp
xor
jno
mov
mov
orl
repz
in
inc
push
xor
push
cld
ss
push
pop
subb
lods
fstpt
xor
mov
mov
mov
or
adc
add
insl
popf
push
and
xchg
and
or
push
sti
pop
nop
lcall
dec
jno
mov
movsb
iret
cmp
xor
cli
push
imul
pop
xchg
adc
sub
dec
dec
push
jne
pop
push
jnp
andb
nop
inc
xchg
sbb
xor
or
jns
or
icebp
jge
mov
mov
push
cmp
mov
std
into
sub
ret
dec
push
imul
iret
xor
ficoms
push
mov
rclb
call
push
mov
cmp
inc
inc
sbb
xor
test
insb
or
mov
shll
ds
sub
cli
or
int
mov
mov
xchg
sbb
stos
adc
sbb
push
xchg
xchg
mov
xchg
xchg
lock
jns
inc
mov
ja
mov
xchg
shl
xchg
out
jns
mov
jl
fmuls
xchg
mov
push
aad
pop
hlt
add
inc
jl
pop
xchg
add
lods
lods
movsb
movsb
out
inc
aas
jbe
scas
dec
movsl
imul
outsb
push
sbb
cli
or
cmovg
mov
jecxz
mov
adc
dec
mov
loope
mov
pop
pop
push
cmpsl
inc
xor
fsubr
xor
cmp
popf
mull
leave
mov
xchg
jae
rorl
jae
ds
or
mov
push
sbb
dec
iret
add
out
jge
sub
and
jmp
inc
pop
int
mov
inc
sub
mov
pop
enter
push
adc
jmp
mov
inc
mov
negb
sti
mov
ret
lea
scas
lods
in
xchg
or
mov
and
movsb
cmpsb
in
and
push
sbb
xor
je
gs
mov
cmp
cmp
shr
stc
enter
mov
xorb
ret
daa
insl
lahf
xor
push
pop
stc
mov
or
pop
aad
out
dec
add
stos
pusha
inc
jge
orb
call
xchg
shr
lods
xchg
movsb
fnsave
pop
xchg
jns
iret
xchg
loopne
inc
xchg
push
push
arpl
imull
stos
lods
add
xchg
pusha
mov
cmp
imul
shlb
es
aam
loopne
test
ljmp
mov
jle
inc
xlat
xchg
das
insb
inc
xlat
add
outsl
inc
rcll
xor
dec
mov
mov
sahf
pop
out
jb
add
or
sti
or
mov
and
jmp
add
iret
inc
roll
pop
lock
inc
xor
or
sbb
or
scas
decb
loope
push
xor
sub
cld
mov
std
cltd
add
popf
xchg
jns
into
sahf
test
aad
int3
fimuls
clc
lahf
gs
pop
lret
lods
ss
insb
ficoml
add
adcl
add
popa
test
or
out
mov
pop
xchg
adc
dec
xlat
mov
repnz
stos
jg
test
leave
test
cmp
mov
mov
std
xchg
mov
scas
ss
stos
mov
mov
rcrb
jae
push
out
clc
or
ret
or
add
repz
jmp
movsb
sub
mov
or
subl
and
aam
je
add
ficoml
adc
pusha
scas
dec
cmp
adc
lret
lds
lock
xchg
lret
cs
mov
pushf
sti
mov
mov
ret
mov
out
jne
adc
add
cmc
stc
ret
jnp
push
gs
adc
sbb
in
xchg
xlat
mov
cmpsl
xchg
nop
out
or
mov
cmp
push
outsl
jmp
pop
lret
xchg
push
add
mov
seta
ds
add
movsb
adc
pop
inc
in
mov
bound
data16
test
nop
or
out
repnz
lcall
mov
pushf
sbb
dec
mov
xlat
subb
mov
xchg
popf
inc
xchg
dec
ret
push
mov
jmp
push
push
lods
repz
iret
xchg
test
mov
dec
xchg
shrb
aaa
inc
mov
sahf
push
cmpl
pop
aaa
scas
int
mov
outsl
push
lahf
or
es
and
cmp
mov
push
or
mov
iret
dec
pop
dec
push
pop
dec
gs
xchg
je
lods
or
scas
mov
jbe
jne
repz
add
pop
sbb
pop
int
pop
or
pop
sbb
aaa
notl
xchg
xchg
int
push
dec
mov
fsub
and
adc
cwtl
or
or
xchg
call
cmp
add
movsl
sar
repz
dec
mov
lock
and
cld
stc
lock
mov
jl
push
lcall
lock
add
scas
ja
imul
mov
iret
xor
xor
xor
dec
xrelease
fisttpl
and
mov
xor
leave
jge
lock
loopne
cmp
inc
scas
scas
pop
adc
jmp
cmp
jecxz
and
xor
stos
jo
mov
or
mov
andl
lahf
mov
divl
addr16
jns
in
dec
stos
insb
ljmp
mov
aam
mov
fwait
adc
xchg
cmp
jbe
in
std
pop
mov
mov
add
movsl
and
add
fs
lcall
imul
mov
sarb
jae
add
fbld
std
inc
mov
adc
js
rorb
movsl
pop
fistps
xchg
or
int3
pop
dec
pop
aam
jbe
scas
ds
xchg
ss
pusha
or
fidivrs
adc
rcll
jnp
push
xor
add
pop
jne
outsl
xlat
pop
cmp
sar
fcmovne
cmc
and
push
test
cmc
adc
test
or
xor
es
mov
mov
mov
insb
jmp
push
rcll
std
fwait
aam
inc
or
push
call
sarl
mov
dec
sub
adc
loopne
xor
add
jle
orl
push
dec
stc
xor
add
xor
iret
in
fistpl
cld
push
scas
cmp
fwait
jp
adcl
push
ret
dec
sahf
jae
imul
cmp
js
and
loope
pusha
into
add
pop
cmp
cmc
add
inc
cmp
int
fsubr
push
leave
mov
adc
ds
or
mov
jo
cmp
ret
xchg
xchg
sub
int3
dec
pop
push
out
push
hlt
fwait
sub
scas
out
push
jecxz
lods
shll
into
mov
adc
movl
mov
ljmp
cmp
cmp
sbb
cmpsl
lret
roll
xor
sarl
fcomps
incl
int3
sbb
outsb
push
pusha
sub
push
or
data16
xchg
and
sub
ljmp
adc
repz
ss
or
aam
mov
xorl
inc
sarb
enter
andl
vpsllq
cmp
push
or
add
xor
mov
enter
inc
jo
arpl
dec
inc
mov
daa
icebp
jae
fstps
push
daa
sbb
adc
xor
push
mov
or
sbb
iret
loope
and
mov
repz
adcb
shl
out
xchg
xchg
lods
mov
mov
inc
xchg
aad
push
jnp
xor
mov
adc
int
aam
cwtl
out
jg
adc
leave
add
scas
xchg
shll
xor
sbb
addr16
movsl
add
push
mov
filds
dec
jecxz
stc
cmp
in
bound
fildl
xchg
adcb
adc
movsl
mov
into
mov
and
push
push
push
orb
es
mov
mov
mov
sub
mov
or
cltd
sub
jmp
mov
and
das
fdivr
jb
mov
ss
test
xchg
mov
mov
xchg
xchg
dec
stos
add
and
loope
push
cmp
jb
fs
test
cmc
jne
es
ja
push
sub
fmull
out
ja
outsl
lods
dec
xor
dec
lods
insl
or
and
pop
outsl
iret
sub
lea
js
sbb
rcr
sbbb
xor
adc
mov
dec
xor
cld
mov
in
dec
dec
hlt
ljmp
icebp
movsb
dec
in
jg
xchg
cmp
decb
xchg
xor
pop
pusha
ret
mov
xchg
mov
pop
xchg
enter
shll
xor
inc
sbb
cwtl
fbstp
xchg
jmp
xchg
aad
add
mov
arpl
mov
in
fs
lods
xor
jmp
ret
fisttpll
insl
imul
stc
ret
mov
or
orl
mov
sub
sbb
je
mov
push
loope
jae
xchg
cmp
jo
cmp
and
rcl
movsb
or
pop
push
dec
decl
mov
dec
jbe
fdivs
mov
lods
lods
aam
mov
dec
push
ljmp
dec
jo
into
jmp
mov
fstp
mov
jmp
dec
lret
lahf
ss
aam
daa
mov
mov
out
icebp
xor
push
iret
pusha
or
ja
push
pop
cld
repnz
out
mov
arpl
loopne
xor
fldcw
aam
push
jae
and
cmpsl
sbbb
pop
mov
mov
ljmp
jae
mov
pop
insb
adcb
cmc
sbb
ds
push
das
mov
mov
fnstsw
mov
cmp
mov
out
cs
pop
xlat
stos
fwait
mov
push
mov
inc
int
mov
movsl
orb
pusha
in
fsincos
push
nop
mov
dec
out
ja
call
mov
les
sbb
sbbl
cmp
mov
and
arpl
shll
push
jle
push
push
jo
xlat
lcall
popf
fdiv
aaa
xor
andl
jecxz
xor
adc
and
mov
ljmp
cli
mov
dec
les
ss
or
pop
mov
jle
dec
jmp
pop
jnp
js
lret
push
jno
inc
insb
adc
fldenv
push
jle
in
clc
sbb
into
pusha
and
fistpl
aam
fldcw
ret
cwtl
aad
mov
es
dec
insl
enter
test
loop
sarb
fistps
push
mov
push
sarb
xchg
or
or
pop
dec
aaa
mov
sub
fwait
out
cli
pusha
inc
outsl
sub
adc
cltd
repz
shlb
dec
push
dec
out
pushf
cltd
sub
and
pop
pushf
fwait
xor
mov
aas
inc
lods
push
sbb
mov
jae
add
fldcw
add
adc
push
inc
push
dec
jb
shl
stos
sahf
sub
mov
shll
adc
iret
aaa
inc
pusha
push
adc
dec
and
inc
ds
in
fsubrs
cmpb
adc
sub
push
ss
mov
imul
xchg
pop
fdivp
ljmp
inc
fs
adc
test
arpl
leave
push
shl
loop
rcl
lds
dec
lea
and
inc
jb
jnp
daa
daa
xlat
push
icebp
ds
pop
shr
inc
int3
movsb
cs
dec
lahf
xchg
shll
xor
xor
pop
pushf
out
or
sub
mul
outsl
es
loopne
adc
pop
aaa
dec
xchg
iret
fidivl
sub
sti
ret
jl
mov
aaa
push
inc
push
inc
mov
mov
jge
pushf
aas
push
add
push
or
or
xor
shrb
pop
popf
xchg
or
xchg
mov
inc
filds
mov
sbb
pop
into
call
icebp
out
stc
sbb
mov
addb
or
fiaddl
in
dec
cli
sub
push
add
dec
test
jmp
nop
mov
cmp
lret
push
leave
or
add
fldenv
cmp
pusha
mov
adcl
es
mov
test
pop
mov
pusha
jge
xchg
push
loop
lods
or
pop
pop
lods
pop
fcmovu
stos
and
shlb
cli
push
mov
push
xor
cmovle
shl
enter
lcall
and
xchg
inc
xchg
jecxz
cmp
xor
leave
test
int3
push
jae
or
cmp
fisubl
or
xlat
fdivr
sub
js
jmp
jl
xorb
pushf
es
and
inc
ja
adc
jnp
dec
and
mov
stc
sbb
mov
add
mov
or
aas
fistl
rclb
push
test
out
imull
pushf
test
sarl
out
adcl
insl
add
stc
rorl
add
mov
or
mov
gs
cmp
inc
sbbb
push
dec
dec
imul
push
adc
adc
adc
arpl
cmp
dec
adc
jb
aaa
or
outsl
fcmovb
enter
out
sub
in
enter
daa
pop
lods
mov
sub
cld
sarb
cmp
or
fs
leave
imul
pop
inc
sub
pop
jne
orl
xorb
and
int3
sbb
in
ret
icebp
adc
pop
fs
inc
cmc
mov
filds
adc
pop
andb
add
in
sbb
dec
scas
dec
adc
adc
mov
rol
rep
sbb
in
sub
test
stc
mov
lret
pop
shll
sbbb
and
mov
mov
les
sbb
pop
xchg
mov
sub
xchg
lcall
inc
push
add
lods
inc
loope
fbld
ds
sub
xchg
mov
mov
fs
es
popa
andl
xchg
mov
stc
or
sbb
mov
xlat
call
insb
clc
mov
lea
mov
xchg
pop
push
movsl
movsl
mov
adc
outsl
or
mov
testb
adc
ffreep
pop
enter
jo
fwait
arpl
jne
lcall
and
movsl
imul
and
loop
or
jnp
lahf
mov
fsubs
pop
fnstenv
bound
adc
xor
out
add
add
jmp
popf
vpmacsdqh
pop
cmpsb
rcrl
add
int3
mov
mov
fmulp
addl
mov
cmp
inc
sahf
cltd
push
loopne
out
stc
imul
dec
jno
dec
sub
popa
sub
call
daa
js
pop
inc
jmp
xor
adc
int3
and
push
std
fmull
dec
loopne
inc
rolb
mov
cmpsl
insl
movsl
push
mov
inc
dec
out
data16
cmp
ds
jge
mov
pop
out
divl
stos
fwait
sub
in
dec
popf
adc
popa
fldt
xor
sub
sahf
std
neg
stos
xchg
lods
loopne
fadd
ficompl
mov
pop
cltd
mov
jns
fldcw
xor
mov
iret
sbb
jns
push
sbb
push
mov
jnp
filds
push
fdivl
xchg
cmp
lods
push
es
stos
jb
shll
mov
in
adc
addb
inc
jmp
out
dec
xor
mov
loope
arpl
test
cmp
add
xchg
and
or
push
out
push
inc
xchg
mov
loop
push
sti
inc
mov
inc
add
sbb
mov
mov
icebp
jge
in
aad
lea
pop
sbb
lea
push
mov
fimuls
jb
clc
cmpsb
scas
or
mov
mov
clc
orb
jbe
stos
andl
ljmp
fdiv
lret
mov
push
add
add
repz
popf
jle
push
lods
inc
add
int3
adc
lea
cmp
push
adcl
gs
cmp
xor
es
xchg
lea
scas
test
stos
ret
xor
jmp
popl
xchg
adc
jge
imul
sbb
mov
cmp
mov
enter
shrb
xchg
popf
xchg
inc
das
mov
bound
add
jl
mov
mov
lock
jbe
ds
adc
pop
mov
mov
and
repz
jns
adc
xchg
out
mov
xlat
aas
outsb
out
adc
rorl
jmp
imul
sbb
lret
or
lret
sub
add
mov
lds
dec
xor
xchg
mov
xchg
mov
push
sahf
das
cmp
shr
loopne
sub
cwtl
loope
cmp
cs
lcall
mov
or
movl
dec
mov
data16
out
ljmp
dec
ret
pop
ss
outsb
es
js
ucomiss
sub
jecxz
lret
and
ja
or
jle
outsl
sahf
pop
or
xor
push
shlb
sbb
cmpb
push
repnz
push
inc
cld
shl
xor
cmp
dec
dec
adc
mov
call
xor
imul
cwtl
fsts
cld
sbb
lods
mulb
mov
cwtl
or
xor
adc
lds
dec
cmc
jns
fcomi
jp
push
mov
cld
adc
cmp
psubusw
lods
sahf
inc
mov
adc
push
iret
shll
dec
or
jno
out
jno
add
pop
cmc
add
jg
ficompl
jno
loop
hlt
cmc
push
inc
mov
sbb
and
xchg
jle
jl
in
aas
pop
inc
aaa
cmp
rol
pop
cmc
sbb
xor
jge
cli
jg
dec
lods
test
pop
or
adc
or
push
cltd
insl
loopne
lods
xor
shll
xchg
xchg
mov
jb
adc
out
dec
lcall
add
xor
sub
jecxz
lret
shll
push
add
mov
push
inc
fucomi
rcll
lahf
pusha
leave
imul
adc
setl
adc
cmp
loop
frstor
lods
xchg
xor
andb
mov
subb
outsl
mov
adc
pop
xchg
sub
fidivl
sub
adc
add
cmpsb
fstpt
test
scas
mov
arpl
pop
cs
inc
jnp
push
rorb
sub
cwtl
mov
movsl
bound
jo
in
inc
cmp
sbb
ret
mov
pop
push
xchg
in
popf
mov
pop
xchg
cmp
sbb
shrl
xchg
das
jns
rclb
loopne
pop
and
das
xor
mov
mov
and
shld
cmp
orl
sbb
daa
rcl
jmp
mov
cmpsb
push
in
mov
push
fwait
mov
ljmp
pop
dec
cmp
mov
dec
mov
imul
aad
stc
mulb
out
cs
pop
jle
call
call
sarb
rolb
sub
scas
xor
outsb
jo
mov
scas
sbb
cmc
jg
xchg
xor
mov
aaa
insb
hlt
and
std
pop
inc
ret
pop
xchg
push
adc
push
arpl
movaps
sbb
adc
or
or
sub
dec
testb
cwtl
add
xchg
cmpsb
and
jne
pop
loop
xlat
loopne
inc
jno
push
test
out
xchg
xchg
jns
inc
xchg
jge
mov
add
xor
ss
sub
dec
lret
and
jb
jns
imulb
xchg
iret
iret
dec
pop
cmc
int
test
xchg
insb
mov
mov
sub
xorl
leave
rcl
add
mov
popf
incl
rol
scas
xchg
cmp
or
imul
mov
les
xchg
sahf
cs
sbb
or
jb
sbb
adc
mov
pop
popf
fmull
aas
jmp
jg
push
jo
and
ret
mov
mov
jae
idivb
push
out
mov
xchg
aad
or
mov
imul
iret
cwtl
sub
fildl
pop
mov
xor
push
cld
sbb
sahf
inc
mov
jecxz
cmpsl
pop
cmp
stos
push
cld
inc
sub
and
loope
daa
pop
icebp
jno
cmp
lret
pop
xchg
mov
nop
data16
outsb
in
test
mov
data16
mov
jno
cld
jmp
mov
push
xor
orl
into
xchg
outsl
aam
fidivl
inc
jnp
jns
jg
push
je
fxch
mov
jl
test
xchg
inc
push
push
pop
sbb
in
decl
sbb
leave
fwait
arpl
xchg
loop
pop
sub
nop
add
dec
inc
or
pop
mov
sti
out
sub
mov
dec
decb
mov
mov
cld
mov
or
flds
pop
dec
xchg
xor
sbb
inc
cli
scas
mov
mov
jbe
mov
push
insl
int3
cmp
movsl
popf
out
mov
pop
mov
sub
pop
mov
mov
mov
testb
bound
jne
and
cli
repnz
push
pop
mov
mov
scas
inc
mov
dec
jge
adc
dec
in
mov
jl
jnp
cwtl
mov
mov
int3
xor
xchg
cmp
inc
mov
lock
push
call
rorl
xor
sub
xchg
pop
pop
call
mov
in
and
fidivrl
stos
rcrb
sbb
pushf
fcos
loope
sti
rorb
push
pushf
jno
cmp
cmp
fs
mov
mov
mov
fisubl
int
mov
push
paddusb
shl
fwait
mov
or
or
and
dec
repnz
cmpsl
or
mov
lea
fistpl
es
shrb
xor
icebp
ret
cmp
js
mov
mov
add
pop
gs
sub
sbb
jnp
iret
or
aad
adc
into
sbb
jp
fwait
add
popf
sub
pop
and
nop
lcall
add
dec
mov
add
js
mov
pop
loope
rorl
outsb
mov
dec
std
loope
insb
lcall
mov
in
andb
and
inc
jns
add
or
scas
pop
and
or
cli
mov
icebp
inc
and
cmp
lds
or
cmc
hlt
push
out
dec
dec
mov
hlt
inc
cmp
int
and
adc
mov
push
inc
mov
sti
cmp
push
xchg
mov
jge
push
jae
xor
pop
lods
push
adc
and
cmp
std
add
sahf
test
stos
out
or
fbld
pop
call
test
repz
sub
push
mov
imul
jns
lea
icebp
adc
ror
das
mov
cli
xor
fildl
adc
jmp
fsubl
adc
sub
out
sbb
xlat
loop
add
popl
cmp
or
mov
fadds
push
out
out
ret
rolb
cltd
shlb
rorb
test
jnp
jecxz
ljmp
cmpsl
jle
cli
stos
xor
popf
aaa
and
adc
movsb
out
movsb
xor
add
jmp
aad
out
mov
xchg
sbb
pusha
mov
popa
dec
mov
dec
dec
pop
mov
insl
push
mov
push
mov
pop
inc
jne
and
js
js
xchg
icebp
or
mov
xchg
mov
jp
lret
fidivl
xchg
mov
popa
repnz
or
adc
pop
sahf
sub
fcomps
jl
xchg
xor
sbb
adc
data16
fmulp
pop
sub
lock
add
push
jnp
into
les
in
inc
or
dec
sbb
rorl
loop
repz
lahf
gs
sub
fwait
jo
lcall
sub
mov
dec
add
lock
pop
pop
push
loopne
adc
jne
and
add
lock
mov
xorb
fistpl
inc
sbb
sbb
inc
xlat
sbb
dec
and
repnz
sub
cmpsb
pop
fsubrs
mov
mov
mov
or
mov
xor
push
outsl
and
into
push
cmp
push
jecxz
cs
call
ret
fcom
andl
or
out
dec
cmp
pop
sub
mov
add
pop
jg
faddl
dec
and
pop
inc
sub
or
repnz
and
lret
rcl
mov
cmp
es
shrb
adc
das
in
sbb
leave
in
mov
fmul
iret
outsl
add
scas
sbb
lret
rcrl
fcompl
xchg
cmp
push
aad
js
mov
popf
fmuls
or
es
iret
aam
enter
mov
jb
dec
sbb
ljmp
clc
sub
pop
mov
mov
jns
cmp
jle
inc
sti
sub
push
jecxz
xor
stos
out
aas
cmpsb
cmp
outsl
test
cmp
xor
lds
push
sarl
lock
rcrb
mov
incb
xchg
jae
sub
mov
out
repnz
add
mov
in
inc
sub
mov
cmc
xchg
cmp
lock
sbb
enter
jle
mov
and
cmp
lods
shlb
mov
and
pop
dec
xor
pop
and
lods
inc
lds
pop
shl
xor
xor
and
mov
hlt
mov
ja
mov
or
jns
shlb
shll
jb
mov
mov
mov
call
mov
pop
add
notb
lahf
jle
mov
ret
add
sbb
adc
dec
js
jmp
std
lods
pop
mov
inc
clc
pop
or
nop
fimull
add
jp
mov
cld
xor
adc
rep
mov
outsb
inc
das
mov
dec
pop
adc
push
xchg
jno
scas
inc
orb
out
xor
jns
out
call
sahf
movsb
js
std
sbb
mov
inc
and
inc
cmc
xlat
test
andb
pop
js
mov
xor
dec
push
outsb
enter
cmpsb
dec
test
mov
sub
mov
xor
ss
adc
fisubl
fistpl
and
test
inc
scas
push
pop
gs
test
pop
out
mov
adc
xor
and
add
jmp
add
leave
into
dec
xchg
xor
dec
dec
cmp
sbb
xchg
mov
sbbl
push
loop
arpl
sbb
add
xor
xor
push
lock
pop
mov
scas
insl
testb
loopne,pt
dec
insl
and
idivl
sub
js
loop
sub
test
pop
testb
mov
cmp
clc
push
adc
adc
shll
sub
outsl
mov
or
push
fldt
inc
out
repnz
jle
and
das
loop
mov
sub
jbe
and
mov
sub
nop
pop
sbb
lods
xchg
fistpll
fidivrl
cwtl
jle
lock
cmp
mov
nop
xor
popa
cmp
dec
aas
xor
adc
addps
cld
or
mov
ret
mov
cltd
cs
stos
mov
mov
push
outsl
sub
sbb
nop
xchg
rolb
std
pop
pop
add
fwait
hlt
stos
pop
arpl
pop
sti
sbb
sbb
or
mov
or
push
pusha
mov
dec
mov
lret
mov
push
or
in
lahf
lods
pop
leave
or
les
movsb
in
mov
bound
mov
jecxz
mov
push
jno
scas
mov
pop
fcomps
xor
or
jl
cmp
sbb
sbb
jle
mov
mov
sub
out
adc
aam
into
sete
xor
outsb
fnstenv
shrb
in
repnz
mov
in
hlt
or
lods
imul
ds
push
xorl
lcall
ss
mov
scas
jmp
add
mov
xchg
lcall
cwtl
adc
push
lds
dec
jbe
or
dec
sub
xchg
mov
lahf
enter
jnp
aad
jp
push
jp
push
jnp
and
add
pop
fs
add
or
mov
mov
pshufw
shlb
enter
mov
repz
add
test
shlb
adc
xor
cmp
insb
sbb
out
cmp
push
or
insl
cmp
js
sbb
aas
sahf
sub
push
push
jg
xor
mov
sbb
sub
ds
js
xchg
jecxz
and
push
hlt
sbb
mov
mov
outsl
cmp
sbb
sti
ja
add
mov
test
mov
mov
push
sbb
sub
jnp
mov
mov
stos
call
nop
inc
mov
out
fildl
pop
push
lret
push
test
inc
xlat
nop
mov
pushf
pop
insl
cmp
jl
addr16
imul
imulb
mov
ds
push
dec
lds
xor
dec
dec
stos
stos
insl
ljmp
jae
outsl
inc
jae
in
rcrb
pop
lods
adc
jl
fisttpll
daa
fdivs
cmp
outsl
cmp
rorl
out
jbe
mov
inc
fwait
orb
fistpl
mov
andl
negb
pop
cmpsl
push
xchg
pop
inc
repnz
cltd
push
adc
inc
xor
fildll
in
mov
aam
sbb
daa
xchg
jbe
ljmp
cmpsl
sahf
inc
or
sti
ss
insb
das
je
sbb
add
mov
cmpsl
loopne
js
js
repnz
xor
sub
adc
scas
ss
ds
int
pop
xor
imul
loopne
xchg
lea
push
mov
dec
inc
lret
fistps
rol
jb
push
pop
stos
insb
pop
mov
lret
jle
incb
push
out
sub
dec
sbb
pop
inc
cwtl
lds
xchg
mov
pop
push
jbe
pushf
mov
arpl
sti
in
es
test
pop
inc
fldl
and
pop
cmpsl
xchg
sbb
and
jns
fsubrl
stos
cmpsb
pop
adc
add
add
decb
cmp
xchg
pop
mov
pop
mov
test
jno
and
insl
mov
mov
xchg
in
and
stos
imul
and
or
call
mov
push
mov
dec
out
add
sbb
cmc
jecxz
sub
fcoms
or
adc
das
mov
mov
shll
popf
call
js
std
adc
dec
jno
lock
loopne,pt
push
push
fwait
mov
lods
jg
push
or
ret
lock
jecxz
add
test
nop
mov
adc
addb
ret
jbe
cmp
lock
loope
pcmpeqw
push
or
aaa
sub
xor
push
and
and
stos
add
adc
int
mov
jo
mov
mov
sbbl
test
arpl
push
inc
adc
leave
ss
insb
lods
icebp
stc
lea
dec
data16
xor
in
call
aaa
call
xor
aas
cmp
inc
mov
call
mov
or
pop
mov
push
scas
lods
pop
out
pusha
sub
in
dec
ja
mov
sahf
jne
rcll
mov
inc
pop
out
out
outsb
shrb
fmul
cli
jle
popa
jmp
jge
xlat
sti
aam
jmp
rolb
pop
push
dec
dec
repnz
fs
inc
xchg
adc
push
mov
clc
test
test
push
jmp
subb
int3
sbb
xlat
mov
sahf
add
and
sub
xor
test
sbb
test
iret
push
je
sbb
mov
pop
adc
addr16
adc
popf
or
aaa
shlb
scas
jl
cmpsb
cmp
vpminsb
fwait
mov
loopne
xchg
jp
dec
mov
repnz
rcrl
fimuls
aad
dec
inc
mov
icebp
xor
mov
jge
and
imul
pop
stc
cmc
lcall
enter
test
les
push
sub
and
mov
ret
xchg
pop
outsl
ja
sub
or
jmp
pop
iret
idiv
test
fidivs
inc
inc
inc
pop
add
sbb
andb
adc
cmp
xlat
jb
fwait
lret
lea
push
fnsave
movsb
xor
sbb
movsl
popf
inc
mov
push
mov
push
pop
jmp
xchg
into
xor
mov
push
cmp
iret
cltd
adc
xchg
sbb
pop
or
push
sbb
jne
lret
cwtl
push
jmp
aad
push
icebp
jp
add
mov
xchg
pop
pause
mov
add
lret
bound
mov
sbb
out
insb
mov
add
or
pavgb
fnstsw
xor
cld
sbb
fcoml
mov
ret
pop
xor
fldl
repz
pop
lret
int
fnclex
mov
pop
xlat
fidivrs
fistps
stc
in
mov
jp
inc
lea
xchg
mov
loop
sub
mov
and
fdivl
and
add
sub
divl
mov
mov
push
shll
mov
or
int3
mov
insb
mov
inc
aaa
out
and
mov
inc
dec
xchg
imul
mov
push
push
aam
add
clc
xchg
in
mov
scas
xor
stc
adc
mov
mov
icebp
out
in
inc
xchg
leave
cmp
cwtl
xor
and
push
shlb
add
aad
adc
orl
or
int3
mov
jne
jb
insb
test
lcall
lods
les
add
sbb
mov
repnz
mov
mov
inc
andl
xor
cmpsl
mov
cmp
shll
stos
jno
jecxz
xchg
jno
sub
rclb
loope
mov
jmp
dec
imul
les
imul
aam
mov
cmp
pushf
rclb
cltd
xchg
hlt
mov
xor
inc
adc
popf
cmp
out
imul
std
sub
xchg
adc
es
add
xor
test
jne
sbb
pop
outsb
es
loopne
jecxz
out
test
jnp
xchg
adc
push
inc
dec
in
sub
or
loop
cltd
fidivrl
cmpl
iret
rolb
call
in
lods
xchg
mov
mov
outsb
pop
push
out
in
fldenv
dec
sbb
out
mov
test
roll
jb
xor
lock
scas
test
jge
cld
aas
jl
pushf
sub
aaa
pop
ficompl
int
jle
add
pop
or
xchg
mov
stos
jne
sti
lods
dec
jbe
mov
lret
push
jmp
sub
xlat
imul
or
push
aaa
mov
and
fisttpll
ss
push
mov
ss
in
xor
scas
jo,pt
jne
inc
int3
pop
lret
add
cmp
cmp
aad
jecxz
js
fdivrp
pop
std
xchg
icebp
ss
int3
lret
mov
int3
imul
int
adc
imul
lock
add
or
insl
inc
xchg
dec
xchg
icebp
mov
imul
js
sub
push
in
mov
test
jmp
dec
jge
inc
lcall
cmp
sub
xchg
sbb
inc
pop
lock
push
pop
lds
sbb
jg
data16
mov
inc
xor
jno
sarb
movb
dec
and
jge
fcom
xchg
push
mov
or
daa
inc
jae
mov
js
add
push
push
in
fwait
mov
jbe
pop
in
scas
dec
xor
out
mov
call
xchg
test
push
sbb
cmpsb
mov
mov
fisubrs
pop
js
into
and
dec
mov
loope
push
mov
jge
icebp
mov
imul
dec
int
adc
pop
pop
loop
arpl
sbb
xchg
aad
repnz
int
xor
mov
ret
mov
into
sbb
pop
leave
push
lds
shll
stc
roll
test
shrl
adc
adc
pop
paddsb
push
dec
push
movsb
dec
add
sub
scas
loopne
pop
dec
xchg
int3
imul
lret
daa
imul
testb
inc
daa
outsl
leave
out
mov
lret
push
push
jns
movsb
mov
inc
xor
push
cli
jno
sbb
or
les
test
clc
ss
popa
out
rorb
push
hlt
xor
in
in
jl
sti
cmp
lods
repnz
mov
add
ret
add
xor
fnstcw
movsb
xor
pop
inc
dec
and
inc
adc
sub
push
push
or
rorl
fsubl
fwait
loopne
push
dec
mov
lea
dec
mov
jno
push
adc
rep
sub
xor
ror
pop
fsubrp
sahf
int
jecxz
clc
movsl
shl
mov
xchg
cmp
loopne
xchg
pop
or
xor
jae
fnstenv
add
dec
std
aam
loop
and
mov
dec
lahf
adc
adc
icebp
fisttpl
mov
lret
pop
ja
pop
xlat
data16
cltd
sub
xor
stc
xchg
jb
cmp
xor
inc
scas
xchg
sub
insl
iret
sahf
lds
jbe
mov
xor
aad
popa
in
dec
or
jae
pop
pop
sbb
pop
stos
dec
es
dec
adc
js
in
push
mov
imul
xchg
inc
cmp
jge
rorb
add
out
sub
cmp
jno
mov
add
in
mov
shl
cmp
xor
and
out
scas
add
inc
cmpsl
repz
cltd
adc
pusha
test
push
popa
pop
into
jp
or
cmc
push
lahf
mov
ret
jmp
scas
out
and
outsb
mov
out
dec
pop
push
je
push
mov
adc
sbb
add
es
aam
inc
jl
aas
jle
fwait
jne
ret
adc
jo
mov
jle
pop
ljmp
fsubr
outsb
adc
mov
xor
sub
cs
aaa
popa
mov
jne
add
subl
mov
xchg
insb
push
adc
jge
mov
js
in
xchg
adc
mov
pop
je
cmpsb
int3
stos
add
mov
fadds
out
testb
mov
daa
popf
pop
scas
icebp
aas
aas
jg
insl
nop
cmc
sbb
loop
hlt
push
inc
addr16
add
xchg
add
jae
xor
xor
mov
stos
in
sahf
mov
inc
sub
adc
addr16
xchg
mov
pop
imul
dec
and
adc
in
add
add
cmp
push
fidivrs
sbb
push
pusha
aaa
mov
and
jne
xchg
mov
scas
xchg
mov
mov
divl
fistpl
xor
leave
pusha
push
fstpt
cld
std
sub
imul
stc
sbb
jo
sti
scas
lret
jg
adc
jno
and
sbb
int
lea
or
jnp
jno
fisubrs
jb
pop
pop
fiadds
sbb
jl
and
inc
sub
mov
mov
pop
out
xchg
test
stos
adc
sbbb
mov
shrb
or
pop
xor
andb
mov
adc
xchg
subb
sub
call
hlt
sub
inc
lret
xor
fwait
int3
pop
mov
mov
and
hlt
mov
jo
shrl
inc
fldt
pop
hlt
aad
repz
inc
inc
pushf
and
int
ja
mov
xchg
shlb
pop
pop
push
lods
cld
and
scas
cmp
mov
std
leave
rorl
ja
lock
mov
sub
cmp
adc
stos
data16
insb
inc
or
sbb
sub
iret
inc
mov
loop
push
leave
xlat
add
and
shrl
pop
es
repnz
mov
inc
pop
bound
sahf
xor
out
mov
incb
mov
jb
sub
sub
pop
dec
push
jne
jno
cltd
or
or
mov
sub
jo
adc
pop
stc
push
rcr
inc
cmpsb
dec
xor
iret
aaa
push
dec
test
jg
sbb
aas
movsb
out
and
aad
cmp
add
imul
rcrl
and
pop
push
cs
inc
test
mov
push
icebp
lret
dec
nop
dec
cmp
and
inc
xor
nop
je
stos
clc
sbb
add
adc
lret
out
push
fildll
dec
mov
clc
jbe
mov
inc
xor
sub
addr16
out
mov
jle
xchg
mov
adc
arpl
sub
cld
pop
xchg
stos
inc
cmp
ljmp
stc
dec
sub
or
cmpsl
dec
das
repnz
scas
jne
inc
cmp
cmpsl
cltd
cwtl
incl
test
andb
sbb
out
jge
int
push
popa
pop
clc
and
xor
push
adcb
mov
cmp
jno
fwait
mov
test
and
cmp
insl
mov
xchg
inc
adc
pop
out
push
inc
repnz
fisubrl
js
xchg
fisubl
lods
shll
xor
inc
ret
dec
pop
aas
mov
jbe
push
inc
sub
shll
sub
mov
inc
xor
jae
inc
push
fnstenv
pop
mov
sbb
mov
push
test
lahf
lret
nop
xchg
adc
dec
jecxz
mov
je
popf
dec
mov
add
clc
mov
pushf
cld
mov
out
stc
mov
and
popf
iret
mov
mov
fidivrs
stos
roll
add
lret
lcall
sbb
dec
mov
or
outsb
in
cmp
mov
lock
jge
mov
aaa
add
fidivrs
nop
in
lock
push
push
in
js
out
test
and
pop
dec
mov
neg
sub
arpl
arpl
jns
pop
testb
test
imul
orb
jle
incb
jle
popf
ljmp
xchg
dec
sub
test
aas
adc
jo
mov
dec
cmpsb
xchg
scas
movsb
xlat
jnp
pushf
inc
pushf
cwtl
pop
sub
mov
test
or
leave
je
or
jnp,pn
bound
jg
mov
scas
push
jle
insl
jg
xchg
sub
mov
stos
ljmp
stc
mov
jne
xchg
shlb
lds
fcomi
int
sub
pop
pop
arpl
mov
adc
movsl
int
lods
orl
xchg
pop
das
mov
xor
insl
lds
and
imull
xchg
inc
inc
ss
mov
mov
or
pop
mov
into
lods
insl
inc
dec
push
fdivrp
pop
adc
leave
ja
xchg
xchg
pop
mov
push
inc
fsts
js
cwtl
jae
adc
mov
insb
pop
and
push
pop
lods
test
push
out
mov
mov
mov
add
gs
cmp
push
js
insl
mov
cld
push
fbld
loop
and
repz
mov
and
adc
nop
mov
mov
leave
push
sub
stc
jns
xchg
mov
xchg
adcl
jecxz
fs
cmp
cwtl
dec
fidivl
lock
inc
jle
test
test
int3
imul
rcll
cmp
jns
scas
jecxz
xchg
cmp
mov
mov
pop
inc
fadds
scas
and
jnp
out
test
or
test
icebp
test
or
mov
dec
inc
fwait
rolb
mov
lock
inc
rcrb
fwait
jmp
mov
pop
enter
xchg
and
pop
mov
bound
jmp
mov
adc
xchg
outsl
scas
neg
test
fidivs
mov
nop
jge
loop
lret
lock
jae
inc
pop
test
inc
and
test
inc
decl
jmp
pop
push
pop
ja
int3
lods
fisttpll
add
lds
push
ljmp
push
or
adc
hlt
jp
repnz
push
leave
adc
ss
push
lret
cltd
jb
mov
cmp
pop
icebp
xchg
jmp
js
out
mov
cmp
insb
hlt
xchg
inc
test
lds
mov
add
push
mov
sbb
push
mov
icebp
outsb
dec
jmp
or
insl
mov
xchg
push
aam
push
loopne
pop
fcmove
add
mov
dec
jge
xor
pusha
cmp
xchg
sub
movsb
xorl
lods
push
outsb
sub
push
mov
fbld
mov
std
jns
insl
push
aam
sti
lahf
call
push
std
cmp
cmc
dec
jp
mov
iret
inc
inc
adc
jg
xor
rorb
fwait
jne
xchg
int
aas
in
mov
push
aas
pop
ljmp
push
scas
cmpsl
outsb
fsub
icebp
add
std
xor
mov
pop
repnz
inc
cmp
in
jmp
xchg
std
inc
in
pop
cmpsb
jnp
cs
or
pop
mov
inc
mov
inc
in
fnstcw
or
push
lods
or
and
or
mov
xor
gs
mov
int
fidivrl
cltd
aad
lock
push
test
cli
mov
xor
push
or
mov
cmp
adc
mov
aas
scas
das
dec
inc
ja
xorb
cmpsl
xlat
popa
ret
mov
popa
call
and
in
lahf
xchg
cli
orb
pop
mov
add
mov
hlt
sbb
and
cli
sub
mov
into
fsub
cmp
mov
lds
or
shrb
xor
rep
hlt
stos
fdivl
xchg
int
leave
jb
mov
adc
jmp
xchg
es
inc
aaa
flds
test
jmp
in
sarl
xor
xor
loopne
fwait
cld
pop
data16
push
mov
arpl
movsl
daa
in
xchg
jb
dec
lahf
or
mov
jmp
pop
dec
pop
mov
jle
jno
insl
es
fsub
fcom
test
ret
cmp
mov
push
insl
xchg
jae
mov
dec
imul
cmp
data16
xor
jo
cmpsb
leave
lea
enter
fdivr
and
lret
shll
test
jb
outsb
sbb
out
ror
xor
notb
movsb
xchg
fildl
aas
std
lahf
ss
es
pop
add
cmpl
mov
cld
scas
stos
pusha
rcl
outsl
mov
fildl
push
lret
in
loop
lahf
ljmp
test
out
or
imul
loopne
dec
xlat
data16
sub
xchg
xchg
pop
xor
outsb
sahf
sub
jp
xor
add
mov
cmpsl
rclb
rolb
scas
testb
int
and
mov
cwtl
sbb
imul
aas
in
push
cmpl
or
sbb
cmp
adc
mov
aas
jge
arpl
cmp
jbe
mov
or
mov
or
adc
sbb
jbe
data16
shll
lret
cld
sub
cmp
jge
mov
in
cmpsb
inc
fcoml
push
test
xor
push
test
clc
cmp
xor
dec
repz
inc
lods
sbb
mov
int
imul
add
lea
pop
xor
or
pop
push
in
and
mov
aam
and
push
add
iret
jmp
dec
movsb
mov
leave
push
clc
jecxz
or
push
mov
cwtl
inc
adc
add
lods
and
cmp
jne
data16
inc
jle
mov
or
sub
mull
mov
and
lods
mov
lahf
lcall
mov
idivl
je
cmc
mov
sbb
pop
mov
or
cld
mov
inc
and
mov
in
or
in
int3
mov
mov
addb
fwait
sahf
mov
mov
push
std
sti
xchg
xchg
popa
popa
leave
jo
fstps
popa
pop
xchg
fisttps
into
imul
mov
jnp
mov
cmp
testl
jb
jl
and
mov
jg
rclb
mov
pushf
push
in
pusha
mov
movsl
test
int
ret
jo
xchg
mov
dec
inc
les
push
pop
or
lock
decl
adc
push
adc
dec
test
jae
clc
mov
xorl
cmp
imulb
mov
lods
cli
pop
jnp
jmp
inc
sub
scas
loopne
sbb
roll
popf
jno
cwtl
pop
inc
pop
mov
push
es
dec
rcrb
sahf
in
sub
push
scas
jnp
pop
or
mov
imul
sbb
mov
sar
sbb
sbb
roll
push
movl
or
fsubs
stos
cs
mov
pop
or
push
stc
ljmp
dec
mov
push
leave
stos
out
lret
or
scas
bound
fwait
inc
cmp
and
mov
add
jmp
xchg
pop
jne
sbb
push
shlb
aas
push
aad
stc
rcrl
mov
xor
repnz
xchg
mul
mov
jp
lods
adc
nop
mov
jp
and
lret
rorb
imul
loopne
dec
movsb
sbb
mov
push
scas
inc
add
xor
sti
neg
imulb
stos
ret
sub
dec
fists
insb
out
insb
lret
xchg
xchg
insb
and
test
sti
pop
in
inc
inc
fs
lahf
mov
mov
fs
push
mov
sub
cld
lea
fs
sbb
testb
xchg
push
pop
lock
scas
shlb
xchg
sub
sub
hlt
in
ret
sub
fs
into
test
test
jmp
jb
pusha
sti
push
shlb
pop
addr16
fwait
outsb
push
push
push
cli
adc
sti
aad
lret
lods
inc
imulb
mov
push
in
orb
and
xchg
fnstsw
cmpl
lahf
pop
mov
mov
mov
daa
and
dec
in
iret
or
ss
add
lret
stos
push
and
dec
xchg
dec
rcrb
in
xchg
mov
insl
cmp
mov
xchg
je
fidivs
xor
in
mulb
adc
aaa
or
je
mov
lods
lret
xor
sub
xchg
rorb
cmp
jle
je
int
adc
or
lds
xchg
lds
jmp
dec
cmp
add
bound
or
mov
xchg
nop
repnz
push
call
inc
aas
loope
sbb
pop
inc
adc
or
xor
add
jecxz
mov
dec
add
in
je
repz
xor
les
jl
push
mov
mov
xchg
jne
das
aam
inc
test
mov
inc
jb
testl
out
xchg
es
xor
dec
inc
sbb
sbb
into
xchg
adc
cmp
fisubs
in
ret
dec
fsin
xor
jnp
std
hlt
fdivs
lods
pop
popaw
mov
inc
jmp
and
fs
jp
test
aad
leave
in
adc
filds
shr
popl
in
sbb
ja
enter
clc
mov
inc
addr16
push
pop
xor
xchg
imul
pop
aas
jge
int3
repz
out
ds
into
es
pusha
mov
scas
popf
fbld
pop
mov
push
stos
mov
mov
ret
aad
xchg
cs
inc
sub
out
mov
icebp
int
jne
dec
cli
leave
jecxz
mov
arpl
inc
adc
clc
cmp
mov
jne
cmp
mov
inc
int
aaa
sbb
inc
repz
sahf
outsl
mov
sub
scas
cmpsb
cmp
setne
jne
mov
ljmp
orl
roll
and
iret
outsl
lods
dec
hlt
loope
movsl
pop
push
popa
jne
dec
pop
or
jne
inc
insb
nop
mov
cmp
out
push
lods
insb
or
sub
inc
xor
jp
js
mov
inc
cmpsl
sub
fwait
jmp
test
push
stos
or
rorl
jns
xor
sub
and
mov
ja
lods
push
pusha
inc
test
out
xorl
add
adc
mov
and
add
stc
pop
pop
in
pusha
rclb
in
sbb
mov
mov
xor
insl
sbb
inc
pop
adc
inc
mov
movsb
les
pushf
arpl
xor
fdivl
jmp
adc
inc
sbb
cmp
jmp
addl
cmpsl
pop
hlt
xchg
imul
fisubrs
or
dec
or
push
xchg
aas
rcrl
test
pop
aas
xchg
pop
into
dec
shlb
cs
mulb
mov
mov
out
lock
cli
push
lcall
inc
sub
add
mov
push
movsl
aam
xlat
push
push
stc
push
testl
hlt
mov
mov
xchg
aas
adc
add
mov
rorl
scas
fsubl
mov
fwait
outsl
out
adc
sbb
movsb
cmp
sbb
or
mov
flds
inc
mov
lock
mov
loopne
inc
call
xchg
cwtl
ret
adc
fst
add
sbb
or
dec
jns
sbb
mov
notb
subl
jle
iret
sbb
imul
scas
pop
idivl
insl
mov
cmp
das
fimull
xchg
or
mov
imul
stos
pop
sub
dec
xor
mov
sbb
pop
mov
out
aam
add
clc
bound
inc
sub
or
sub
fcomps
push
xor
bound
cwtl
or
lods
cmp
jge
pavgw
cmp
imul
jne
push
cmp
fisttpll
xchg
and
sub
imul
sti
inc
sbb
clc
push
repnz
cs
cmpsl
cmpsb
sub
pop
xchg
push
lock
inc
lods
jp
push
ret
mov
add
pop
pop
pop
into
push
inc
cmc
cltd
lahf
xor
push
inc
push
scas
jnp
jge
je
or
adc
add
jbe
pop
int3
mov
rolb
popa
rolb
test
jns
lods
cs
mov
mov
add
enter
shl
dec
test
in
cmpl
add
ss
cmc
push
movsb
cmc
mov
testl
pop
leave
push
dec
push
pop
aam
jg
fiadds
out
jmp
jo
inc
movsl
sti
jmp
pushf
sub
sahf
fnstenv
inc
push
cmpsb
filds
shl
outsl
or
add
lods
mov
arpl
cmp
imul
jnp
add
ret
sarl
mov
popa
bound
int3
aad
sbb
jl
insl
mov
loopne
mov
bound
rcrl
mov
and
jg
sub
mov
dec
jmp
sbb
mov
or
aad
or
adc
rdpmc
push
xlat
fdivrp
lods
xchg
mov
repz
inc
mov
or
and
push
mov
hlt
mov
lahf
popa
andb
adc
push
adc
prefetchwt1
in
mov
cwtl
lret
iret
shll
adc
pusha
ljmp
lea
adc
dec
gs
in
in
sub
aad
jp
mov
and
adc
xchg
fldcw
add
push
push
fstpt
mov
or
je
sti
pop
int
cld
add
rcrl
cmpsl
xchg
mov
dec
mov
xchg
bound
jb
mov
outsl
push
xlat
aam
pop
pop
adc
and
adc
in
jns
inc
xor
pop
add
fdivp
in
test
jmp
roll
popa
sbb
into
adc
test
je
test
fnstcw
pop
push
vmwrite
xlat
inc
mov
mov
mov
sub
out
fdivs
aad
pop
clc
jl
stos
inc
nop
mov
loop
cli
and
scas
push
roll
pop
xor
lahf
fsts
shl
mov
fisubrl
call
add
push
xchg
lods
mov
out
adc
or
mov
dec
adc
int
out
outsl
mov
cld
scas
hlt
pop
roll
xor
mov
dec
cltd
pushf
mov
mov
mov
mov
cmp
push
clc
movsl
mov
dec
add
dec
int3
xchg
fwait
mov
xchg
es
mov
or
les
js
pop
orb
jmp
pop
and
imul
add
mov
daa
test
adc
dec
jno
bound
mull
sbb
dec
repz
notb
mov
or
outsl
jmp
bound
pop
pop
or
xor
dec
rorl
sub
aaa
mov
jno
lret
dec
test
out
mov
pop
push
jmp
scas
adc
add
mov
dec
sbb
mov
aas
xor
pushf
mov
insl
test
in
inc
in
push
stos
data16
out
xchg
jmp
xchg
and
cmp
lods
mov
fxch
into
push
jnp
sbb
cmp
xchg
cmc
pop
xor
mov
loope
xor
or
pop
mov
xchg
push
negl
or
lret
sbb
push
adc
in
or
sahf
jo
mov
xchg
adcl
adc
jo
push
xchg
fwait
mov
ret
fiaddl
pop
push
nop
mov
lret
jecxz
das
xor
jb
adc
push
lock
push
mov
inc
idiv
jle
dec
aas
lock
data16
jmpw
dec
jno
mov
or
push
and
enter
outsb
mov
cmpsl
sub
cmp
repnz
jnp
and
ds
sahf
lahf
test
mov
xchg
mov
repz
mov
pop
pop
hlt
mov
xchg
pop
jns
xor
je
xchg
sub
mov
popa
or
sub
sbb
push
aaa
and
push
cmp
push
sub
std
movsl
into
ret
sti
sub
adc
cmp
and
mov
pushf
push
cs
mov
jmp
xorl
jo
nop
mov
mov
sub
test
inc
xor
imul
dec
xchg
dec
sbb
lcall
adc
pop
sub
jecxz
mov
adc
ss
mov
jb
cs
mov
aas
shl
mov
sbb
loope
xor
mov
pushf
sahf
cmp
xchg
mov
mov
fldl
in
sbb
mov
je
jnp
je
jns
sahf
sub
or
push
int
rcl
and
mov
xor
mov
and
popf
xchg
push
ss
lahf
cmpsb
pop
cmc
xchg
xor
sahf
xchg
adc
cwtl
in
push
out
sub
xchg
inc
fnsave
rcll
int3
mov
mov
sbb
jnp
popa
fadds
loop
ret
insb
pop
sti
push
mov
stc
or
sahf
and
jnp
mov
flds
mov
fcoml
jge,pn
scas
cmp
jmp
pushf
or
jns
sub
out
inc
out
or
mov
mov
xchg
out
sbb
cltd
bnd
stc
and
fsubrl
mov
jb
arpl
inc
jmp
aas
aas
or
ds
lds
mov
jmp
xchg
cmpl
jne
sub
lds
jae
inc
mov
push
mov
sub
scas
cmpsl
lcall
test
call
movsl
xchg
int3
in
outsl
ud0
sbb
fs
xchg
sbb
sarb
cmp
das
lahf
push
pop
scas
inc
add
dec
ja
sub
sets
xchg
adc
add
loop
dec
loopne
add
inc
ret
mov
adc
and
xchg
push
imul
imul
push
rclb
pop
pop
vmovups
neg
add
call
dec
mov
xchg
adc
jae
cmp
pop
loopne
pop
icebp
push
mov
ret
insb
xorl
jae
xor
push
pop
fildll
mov
cmp
add
mov
cli
add
xor
mov
aad
lods
xor
aad
dec
jnp
add
enter
adc
mov
adc
cmpsb
lahf
and
adc
and
call
push
sbb
add
xchg
fmul
es
test
flds
pop
cmp
mov
xchg
and
pop
push
and
push
mov
mov
dec
js
les
imul
dec
xor
arpl
loop
ja
in
popa
cwtl
stc
sub
pop
cld
inc
pushf
mov
add
jb
dec
ds
xor
fwait
inc
push
rcrb
dec
dec
mov
inc
out
sub
hlt
daa
xchg
mov
push
mov
test
add
push
inc
arpl
aam
sub
test
mov
xchg
push
scas
out
mov
jns
sbb
je
dec
clc
mov
push
mov
mov
out
nop
sbb
lds
dec
dec
sbb
or
stc
dec
shlb
cmovs
pop
es
adc
mov
es
dec
cmp
addr16
adc
cmp
xor
outsb
dec
sbb
repnz
push
sub
push
push
mov
iret
fdivl
test
int
je
je
mov
mov
and
repnz
inc
enter
pop
cs
rorb
les
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
jle
popf
imul
jmp
movd
jle
imul
fsts
cmp
cmp
cmpsb
push
std
sbb
or
fimuls
and
mov
add
inc
or
andb
pop
xlat
mov
movsb
mov
stos
cmp
mov
pushf
push
dec
or
fbld
adc
aas
sub
push
xor
xchg
push
adc
inc
aad
aad
enter
jecxz,pn
inc
arpl
xchg
lods
ret
test
js
rol
jne
mov
mov
sbb
push
cmp
xchg
jns
fsts
and
les
test
inc
test
out
xchg
mov
lock
jmp
jbe
ficomps
cmp
and
loope
scas
pop
xchg
rcll
shl
cmp
mov
movsl
nop
leave
xor
xchg
lcall
mov
mov
fistps
push
test
loope
push
testl
repz
aas
out
mov
aad
mov
mov
jle
mov
push
or
lock
pop
test
gs
or
sub
aad
sub
push
pop
pop
fbstp
popf
push
fwait
test
mov
cmp
sub
loopne
pusha
lods
push
mov
dec
cmp
popf
mov
pusha
push
sti
fidivs
bound
pop
icebp
jle
xor
insb
lea
scas
ss
sub
lret
rcl
ss
sub
jge
in
push
pop
adc
push
sbb
xlat
sbb
loopne
mov
popf
lds
adc
mov
movsl
cmp
lret
fcmovnu
test
and
scas
aam
xor
jne
add
lods
popa
add
xor
int
inc
cmp
stc
out
dec
jp
xor
int3
mov
xor
inc
daa
call
dec
dec
mov
mov
push
test
push
pop
add
fldl
sub
fsubl
pusha
mov
adcl
pop
movsl
and
dec
add
xchg
out
jmp
dec
or
push
xchg
iret
bound
sub
nop
pop
jo
add
inc
sbb
cmpsb
pop
gs
xor
imul
xchg
dec
push
je
mov
outsb
jp
mov
adc
adc
std
or
imul
int
mov
and
pop
push
stc
push
jae
sub
xchg
mov
test
movsl
mov
repz
notl
and
push
loop
inc
inc
mov
lock
fsubs
aas
pop
sub
icebp
cld
fcmovnb
decb
jecxz
movsl
xlat
mov
xchg
mov
add
pusha
mov
lea
movl
push
mov
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
mov
mov
add
