sbb
add
mov
mov
cmp
clc
push
mov
add
sbb
xchg
dec
dec
test
sahf
jne
push
xchg
test
mov
cltd
xchg
aad
mov
outsl
lods
push
mov
mov
popf
adc
pop
imul
in
xchg
aam
test
outsb
sub
icebp
sti
adc
push
pop
scas
out
ljmp
push
pop
andl
jmp
aam
repnz
mov
push
mov
pop
out
and
lods
loope
add
push
ret
dec
subl
js
mov
mov
mov
ret
adc
sub
pop
xchg
cwtl
cmp
enter
sub
push
in
pop
xor
adc
cmp
ficoml
cmpsb
ret
and
loope
push
push
xor
push
cmp
push
rcll
std
jo
adc
inc
stos
jno
shll
mov
and
inc
add
popf
mov
jp
mov
stos
lods
scas
out
scas
xchg
cmp
cltd
pop
arpl
and
cwtl
mov
sub
push
out
cwtl
mov
mov
add
jmp
sub
outsb
sbb
dec
lret
in
mov
xor
pop
das
pop
jl
xchg
xchg
xchg
arpl
test
fimull
icebp
int
add
pop
lods
jp
or
mov
mov
mov
push
push
jns
lret
push
call
sbb
adc
push
pop
mov
lock
mov
fdivrs
mov
mov
jl
sahf
es
xor
dec
repz
mov
divl
and
leave
xchg
ss
or
add
jnp
jl
idiv
or
pop
mov
stc
lret
xchg
push
dec
lea
scas
and
out
push
outsb
std
clc
scas
add
jne
push
fwait
push
mov
sub
clc
or
test
daa
int3
lret
push
pop
outsl
adc
arpl
cld
inc
adc
xchg
push
leave
pop
mov
push
loopne
lods
sahf
aad
js
int3
and
inc
insb
xchg
subl
xchg
stos
mov
pop
fwait
jno
pop
push
imul
ret
test
jae
cmp
in
sub
mov
lea
gs
pop
cltd
testl
ret
cmp
mov
cmp
pop
lods
insl
shlb
in
cs
arpl
mov
inc
divl
mov
adc
sub
fldcw
andl
aaa
push
pop
xor
in
xlat
fnsave
clc
mov
mov
inc
enter
pop
insl
into
in
add
out
clc
pusha
push
leave
mov
dec
outsl
sub
pop
add
imul
jl
insb
mov
mov
je
lret
xchg
sahf
int
mov
into
insl
test
mov
cmp
add
jb
outsl
iret
lahf
mov
sbb
jae
mov
add
pop
push
xor
into
aaa
mov
insl
imul
int3
xor
leave
pop
and
je
shll
mov
push
fidivrl
out
repnz
jno
enter
ficomps
push
test
mov
aaa
das
in
mov
mov
add
mov
or
mov
stos
push
add
cmp
imul
in
mov
pop
cli
pushf
sbb
cmp
shr
sub
pop
push
ljmp
jne
mov
pop
psubusw
sbb
dec
aad
xorb
ss
add
mov
shll
mov
dec
or
pop
dec
inc
out
pop
lcall
negb
jbe
lock
xchg
mov
xchg
pusha
jmp
xchg
cmp
dec
xchg
imul
sbb
sub
cmp
sbb
fdiv
and
sub
sub
jp
in
dec
js
pop
mov
inc
sbb
mull
push
jg
jno
data16
mov
sbb
adc
cli
xchg
cltd
or
push
jno
add
pop
mov
dec
mov
push
gs
shlb
mov
add
scas
jno
dec
ret
mov
adc
cwtl
sub
add
popf
mov
shr
out
icebp
adc
push
lods
nop
jae
fistl
fmul
fucomp
xor
cmpsb
addr16
sub
mov
sbb
inc
mov
push
xor
scas
int
push
push
sub
jp
cmp
test
mov
pop
mov
xlat
data16
ret
fisttpll
jb
pushf
sahf
inc
iret
dec
stc
fisttpll
jnp
daa
addr16
jbe
into
push
lret
repnz
sbbl
cmp
push
ss
push
and
mov
dec
loope
data16
push
push
rol
repz
clc
sub
dec
inc
fiadds
dec
xchg
sbb
into
jecxz
add
mov
movsb
shlb
out
jg
fistpl
fcmovb
das
xlat
test
lret
das
add
jecxz
movsl
cwtl
das
das
out
ret
fistpl
add
or
adc
jle
test
int3
push
scas
inc
pop
fcmove
push
jo
push
cmpsb
or
inc
movsl
dec
or
lock
std
inc
push
ljmp
dec
icebp
xor
push
ljmp
in
and
mov
sub
je
and
fstpl
xor
inc
cmp
outsl
cs
jno
jns
sub
in
cmc
idivl
xchg
jmp
xor
imul
xchg
in
fimuls
dec
iret
repnz
sub
fistl
int3
add
jae
adc
xchg
cmpsb
pusha
add
inc
daa
pushf
js
cwtl
jb
push
pop
ret
push
add
or
aaa
leave
fsubrl
xchg
imul
mov
das
mov
test
gs
out
out
jle
or
sahf
or
out
jmp
out
clc
mov
movsl
xor
in
nop
sahf
mov
inc
fs
adc
std
clc
and
dec
cld
lahf
adc
dec
jl
mov
movsb
xlat
mov
or
loop
aam
xchg
and
pop
pop
xchg
fistps
push
stos
mov
pop
sbb
loop
adc
dec
mov
and
loop
fwait
sub
std
sub
cmpb
cmovs
cmp
or
arpl
fistps
test
sbb
ret
pop
dec
lret
out
dec
cmp
or
add
jle
lret
rcrb
pop
dec
gs
ret
pop
inc
iret
inc
mov
jge
adc
add
pop
inc
and
jb,pt
sub
pop
std
push
jl
movd
call
out
mov
or
leave
xchg
stc
adc
xchg
jl
sbb
aas
inc
ret
ja
pop
arpl
mov
pop
xchg
dec
test
mov
ljmp
jnp
sti
jl
push
lea
inc
insb
sub
ret
fsubrl
pop
mov
mov
std
push
jp
fstps
hlt
jle
cmp
outsb
fwait
xlat
cs
push
sbb
mov
cltd
daa
sbb
xor
adc
xchg
out
cwtl
inc
ret
movsb
gs
cltd
inc
jp
mov
subb
lret
ficompl
call
mov
mov
repz
jbe
mov
jl
adc
push
jle
pop
loope
fucomp
test
insl
sbb
subl
or
std
push
xchg
cltd
les
inc
sahf
cmp
sbb
movb
dec
mov
jmp
sbb
cmp
push
xchg
movsb
fstl
outsl
movsb
fwait
cmpl
cmp
test
cmp
iret
mov
sti
cltd
jge
mov
sub
push
cmc
mov
add
xchg
arpl
inc
and
mov
sub
mov
lods
jns
outsb
in
fwait
das
xor
lds
and
lcall
daa
icebp
roll
inc
daa
dec
and
add
data16
mov
dec
add
sti
in
call
pop
test
push
outsl
mov
inc
fisttpl
xor
or
leave
imul
inc
xor
inc
outsl
int3
push
push
fs
pop
outsb
js
sbb
jg
pop
mov
cmp
jne
notl
cmp
lcall
repz
add
fwait
or
lods
adc
dec
add
in
fmull
xor
mov
sbb
outsl
sbb
lds
mov
dec
push
xchg
or
in
pop
xchg
push
mov
mov
out
std
fcmovnb
add
pop
sub
mov
mov
mov
sahf
adc
dec
aad
ss
xor
dec
inc
sub
xlat
xchg
ja
dec
dec
js
insb
or
rorb
inc
mov
mov
mov
sub
loope
sub
pop
and
nop
xor
icebp
and
push
and
jmp
faddl
loop
push
jmp
mov
mov
xchg
xchg
lcall
ja
test
and
sub
cli
cli
idivl
imul
hlt
mov
inc
addl
jns
push
daa
adc
sub
inc
mov
pop
mov
inc
sti
xlat
repz
aas
movsl
pusha
cmpsb
negl
push
inc
add
push
arpl
inc
sbbl
push
mov
inc
mov
inc
cmc
adc
sbb
addr16
mov
jns
pushf
aad
mov
fdivrs
adc
inc
mov
test
movsb
mov
dec
imul
rcr
push
into
sti
roll
pop
pop
mov
sbb
jge
scas
adc
into
stos
jae
fstl
add
pop
push
sub
dec
lret
gs
cltd
cmpsb
fmul
mov
insl
or
mov
add
fcmovnbe
jb
int
prefetcht1
loopne
pop
mov
faddl
orl
xor
cli
mov
pop
push
mov
pop
xchg
sbb
lret
lret
dec
or
mov
lock
or
sub
xchg
les
data16
inc
xor
int3
es
leave
imul
add
loop
cs
jb
cmpl
jmp
cmp
adc
adc
pusha
addr16
test
les
pop
jp
lret
xorl
sub
mov
inc
repnz
stc
jnp
adc
mov
call
pop
sarl
xor
or
in
xor
enter
adc
arpl
push
fstp
ljmp
ss
adc
push
jg
in
scas
push
or
sarb
xor
out
or
shll
imul
lret
into
sub
mov
testl
fiadds
add
mov
lahf
sub
shl
add
xchg
hlt
sti
addr16
and
pop
sbb
mov
pop
mov
and
mov
popf
stos
jno
outsb
sub
push
lock
add
sbb
dec
test
push
push
inc
popf
in
add
mov
jmp
mov
jp
cmp
xlat
mov
rorl
sub
adc
cmpsl
xchg
jno
insb
faddl
cmpsb
jae
mov
inc
subb
div
movsl
js
out
fmull
call
sahf
xchg
negb
fnstcw
mov
clc
daa
or
or
or
adc
fcmovnbe
push
pushf
mov
and
popf
fwait
inc
push
lock
arpl
jno
dec
cmp
push
jo
adc
aam
ret
cmpsl
adc
hlt
jp
leave
sbb
shll
fcompl
popa
cmp
mov
ret
xchg
cld
sbb
cmpsb
xchg
shll
repz
int
dec
mov
xchg
pushf
and
fistps
mov
pop
orb
movsl
divps
iret
push
leave
inc
cmp
test
dec
je
mov
vsubps
sarl
mov
or
aad
sbb
repnz
xor
and
adc
test
inc
je
call
popf
sbb
mov
arpl
xchg
out
inc
sub
adc
push
ret
clc
inc
or
cmp
std
divl
dec
mov
adc
xchg
ret
rorb
ds
shlb
insb
andb
cmp
inc
xlat
or
cmp
and
cs
xor
mov
inc
add
jecxz
into
out
sub
add
mov
hlt
jo
jl
test
sbb
test
sar
idiv
mov
mov
fwait
cmc
mov
iret
push
push
mov
dec
xchg
inc
adcl
sahf
mov
lea
stc
lods
dec
jnp
pop
enter
mov
cs
loope
sarl
xor
cmp
mov
cli
jecxz
ret
clc
cmp
stos
mov
sub
sub
int
mov
fdivrs
mov
push
adc
cmp
hlt
xchg
sub
jmp
aad
cltd
xchg
ret
cmpb
inc
and
xor
jecxz
sub
add
popa
or
jmp
bnd
xchg
mov
inc
dec
jp
rorb
fisubrs
and
and
pop
sub
shrb
popa
out
test
in
rclb
scas
out
jns
cli
pop
dec
enter
cmp
inc
das
jle
mov
sahf
fidivl
js
mov
out
dec
je
enter
cmp
cmpsb
rcl
cmp
shr
cmpsl
sub
xor
arpl
push
idivb
stos
and
jmp
cmp
mov
cmp
cltd
push
mov
lods
incb
push
subl
cli
xchg
xchg
jle
inc
push
adc
xchg
popl
xchg
mov
fldcw
adc
or
shlb
dec
sbb
or
movsl
mov
cmp
push
mov
ds
jl
data16
pop
lods
outsl
fstl
jb
mov
jns,pn
jne
hlt
roll
mov
aaa
cli
shll
mov
out
fdiv
loope
mov
xchg
jg
andl
mov
test
cmp
lods
mov
or
sbb
or
sub
xor
pop
sti
pushf
stos
sub
shlb
jmp
mov
inc
lret
jno
in
xchg
shrb
mov
fisubl
mov
jle
test
stc
mov
lcall
loopne
or
mov
iret
rol
sbb
pop
insb
loope
stos
outsl
inc
movsl
push
or
loope
nop
push
pop
dec
xchg
push
sbb
movsl
loopne
std
mov
cmp
push
cmp
leave
mov
rcll
adc
sbbl
scas
dec
push
jo
jge
js
testb
shll
faddp
jo
dec
push
popa
fs
call
xchg
pop
sbb
cmc
xor
adc
das
jbe
xchg
ret
out
lea
les
cmpb
and
cs
inc
call
es
cmpsl
xlat
imul
pop
cmc
inc
test
iret
jecxz
das
aad
adc
nop
push
out
imul
aam
sub
adc
pusha
add
inc
mov
fmuls
cmp
fidivl
jae
lret
insb
jb
popf
adc
pop
es
inc
sub
jbe
and
pop
lret
outsb
out
mull
push
hlt
lock
push
dec
mov
pop
stos
push
add
out
mov
push
enter
inc
jg
pop
push
in
inc
push
es
adc
ss
fdivrl
bound
fsubl
inc
inc
fimull
mov
leave
cmpsl
adc
ds
mov
inc
sub
mov
orl
scas
loop
jns
cmpsl
out
mov
aas
lahf
xor
xchg
adc
outsb
pop
lods
rcrl
push
icebp
or
pop
dec
stos
jae
aas
jle
xchg
push
leave
mov
push
and
shld
in
test
jl
dec
jbe
sahf
sub
xchg
aaa
adc
lods
outsb
stos
sub
add
jne
add
adc
daa
pop
movsb
cmp
leave
adc
es
js
jae
xor
xchg
push
repz
mov
xlat
int3
jmp
xchg
mov
adc
int3
push
mull
enter
outsl
pop
repnz
lahf
pop
mov
xor
add
pop
scas
adc
mov
ljmp
adc
sbb
push
loope
xchg
dec
dec
call
dec
xchg
out
inc
pop
xor
adc
xchg
in
or
rclb
mov
mov
xchg
cld
addl
jg
loopne
lret
xor
xchg
pop
mov
ja
jno
mov
dec
or
pop
jecxz
xor
cmp
mov
movsl
mov
sub
scas
mov
fldcw
add
pushf
dec
push
mov
aas
or
sbb
movsl
std
mov
jl
sub
sbb
lds
xor
xchg
imul
jne
outsb
dec
stos
into
inc
pop
shl
loope
dec
mov
mov
push
sarl
jnp
jmp
add
mov
and
sbbl
xchg
sti
pop
inc
cmp
test
out
aaa
mov
mov
push
jg
and
pusha
cwtl
cmp
imul
fs
gs
fistl
sub
andl
pop
cli
mov
loop
flds
inc
add
xchg
cmc
stc
popf
cmc
inc
rol
imul
ss
sbb
push
or
adc
mov
push
out
mov
das
cs
mov
push
loopne
xor
into
add
xor
mov
jecxz,pt
repz
mov
mov
sub
cmpsl
jnp
and
xchg
rorl
jo
cltd
insb
cmpsb
xchg
cli
adc
insl
test
loope
push
sub
lret
add
cmp
loope
test
icebp
icebp
imul
jp
fdivl
push
xor
push
dec
lret
mov
add
pop
push
push
mov
push
sahf
dec
sub
in
and
jbe
test
pusha
je
adc
and
gs
jp
adc
fwait
push
icebp
bswap
pop
push
sbb
bound
sub
notb
cmpb
mov
push
push
std
or
sbb
push
adc
cmp
inc
sti
mov
ret
dec
mov
dec
out
push
sti
scas
test
fdivrl
js
and
push
jae
add
xor
jns
addr16
cmp
mov
mov
and
mov
rolb
orl
iret
mov
cs
jg
mov
cmp
rorb
mov
sahf
arpl
aaa
movsb
mov
jle
mov
in
mov
andps
add
mov
pop
dec
cli
and
pop
push
cs
ja
mov
mov
mov
or
movsb
rclb
or
aaa
stc
pop
repnz
popa
mov
sbb
mov
movsb
test
xchg
xor
loop
fnstcw
or
dec
ss
push
xor
movsl
and
outsb
add
cmc
int
sbb
and
pop
pop
inc
dec
int3
cmp
ljmp
lcall
mov
push
mov
roll
rcrb
inc
jmp
out
fmulp
insl
out
mov
fcoml
adc
ficompl
add
mov
fisubl
sub
dec
or
stos
adc
fdivr
addr16
push
lds
cli
dec
jmp
add
nop
outsl
orb
into
sub
xchg
xchg
jno
jnp
push
sahf
cs
ds
cmp
or
xchg
jmp
inc
dec
shrb
or
das
imul
test
cmp
movsl
cwtl
test
or
out
or
mov
push
fimuls
jge
fcomps
repnz
mov
dec
repnz
daa
sbb
dec
lds
xchg
xchg
sub
or
inc
lea
adc
pop
xlat
xor
into
sti
cwtl
sbb
push
ret
hlt
lea
xchg
popa
dec
xchg
xor
sub
aas
push
aad
push
jmp
dec
adc
inc
adc
jb
inc
insl
in
pop
pop
xchg
mov
sbb
mov
jg
fsubl
subb
pop
add
or
shr
ljmp
fidivrl
cmpsb
push
scas
enter
sbb
loope
jb
cmp
jl
ret
jecxz
mov
mov
pop
jmp
adc
out
sarl
in
or
cld
inc
cmp
jne
fidivrl
jnp
movsb
xchg
pop
cmpsb
imul
inc
imul
sbb
movsb
push
lret
movsb
mov
out
jno
lea
aas
pop
xor
cmpsl
inc
mov
pop
xlat
cmc
repz
sar
sti
mov
in
cmp
enter
mov
popa
push
das
dec
rolb
xchg
and
jl
dec
jecxz
sbb
jnp
imul
pop
sahf
xchg
jo
jnp
out
sub
pop
push
dec
or
inc
mov
xchg
pusha
adc
pop
pop
adc
mov
test
jmp
adc
imul
inc
mov
jae
addr16
push
jl
cmc
cld
mov
xchg
mov
mov
pusha
cli
add
push
push
inc
adc
test
shlb
cltd
inc
cld
mov
add
sbb
mov
mov
loopne
andb
and
testb
lret
mov
call
or
int
daa
js
mov
fildll
insb
ficompl
xchg
mov
xor
aaa
gs
pushf
leave
outsb
int3
fwait
push
jle
in
and
push
fisubl
test
dec
jecxz
mov
popa
movsl
xchg
nop
gs
sub
clc
pop
sub
jp
fisubrl
lret
in
imul
dec
xor
dec
xor
xor
jle
je
and
push
inc
lods
ret
jmp
pop
es
dec
daa
inc
in
iret
gs
sahf
mov
int
cmp
and
mov
popf
cmp
cli
sub
cmp
jmp
scas
aas
sar
shl
jno
outsl
ljmp
dec
repz
test
fstpt
push
insl
std
test
call
mov
push
jo
jmp
sbb
dec
scas
pushl
std
dec
xchg
test
sbbb
sbb
fdivs
adc
cmp
mov
add
movsl
scas
mov
aad
fistps
ljmp
shl
push
xor
xlat
push
mov
xchg
pushf
lds
cmp
scas
call
pop
das
inc
sbb
adc
adc
movsl
or
inc
inc
pop
lods
or
cmpb
mov
cmpsl
pop
lret
jl
in
out
mov
sbb
jmp
inc
jnp
add
imul
gs
out
push
and
int3
movsl
inc
pushf
pop
jecxz
es
ja
push
jae
mov
lods
xchg
push
or
faddl
and
mov
jae
xchg
dec
inc
jmp
xor
test
ljmp
test
mov
test
sub
xor
es
jb
xchg
aas
or
lcall
inc
mov
aad
jle
and
rcrl
imul
mov
mov
xchg
cmc
adc
je
mov
mov
out
add
testl
in
nop
cmpsl
add
push
dec
mov
xor
sub
and
jbe
mov
cmpb
add
jno
sbb
addl
adc
imul
jo
jle
pushl
jg,pn
sub
negb
ret
out
es
mov
out
imul
mov
lock
in
frstor
insl
repz
mov
pop
les
pop
fmull
push
xchg
ret
jmp
ljmp
push
cmp
icebp
loopne
xlat
jmp
pop
mov
js
cli
sahf
lret
mov
fs
pushf
xor
shll
xchg
pop
outsl
jae
xchg
scas
push
jmp
adc
repz
int3
lret
outsl
and
das
xor
cmp
dec
push
or
and
je
sub
out
push
fsts
and
sahf
shrl
shll
out
shlb
push
fwait
insl
or
scas
pop
ja
std
xchg
gs
cmc
mov
hlt
sub
repz
xor
ficoml
clc
sti
dec
loop
mov
pop
or
sbb
mov
pop
inc
add
pop
dec
leave
xor
push
sbb
xchg
cmc
out
jae
iret
or
xchg
cmp
dec
and
sar
pushf
repnz
fwait
aaa
mov
sbb
fwait
inc
mov
xor
or
sbbl
add
and
pop
cmp
leave
int
xchg
cltd
or
pop
int
repz
adc
jg
lahf
scas
jge
mov
cwtl
pop
insl
loope
dec
iret
mov
cmp
and
dec
loope
jne
and
cltd
xchg
ja
les
enter
lret
jl
mov
cmpsl
mov
inc
add
insl
mov
lds
arpl
push
out
add
out
mov
lock
shrb
jbe
je
dec
icebp
imul
nop
repz
xchg
xor
cli
addr16
stc
les
lret
push
mov
imul
fcoms
jg
out
lods
fmul
or
push
jbe
addr16
in
sub
roll
or
loope
xchg
pop
push
cmpsl
jg
sub
push
jnp
mov
jge
pop
ret
dec
cmp
outsb
ret
or
lods
pop
add
std
int3
orl
cmp
push
into
int
outsl
sub
add
ret
ljmp
cmp
test
lahf
push
sarb
fisttps
sbb
push
xor
mov
cli
shl
or
scas
clc
pop
cmpb
loopnew
and
jnp
popf
movsl
sub
scas
cmp
cmp
imul
sbb
pop
inc
in
xor
sbb
xchg
je
adc
stc
in
push
imul
daa
and
mov
fnstenv
jle
lods
mov
jmp
pop
dec
fiaddl
lea
dec
xchg
xchg
or
cmp
or
in
xlat
mov
mov
test
aad
stos
sbb
rcl
mov
rclb
insl
mov
cmp
xchg
shll
js
mov
xor
push
push
cmp
cwtl
loop
scas
cmp
jne
jo
cmp
xlat
hlt
std
repnz
mov
clc
test
inc
sub
or
lods
jle
cmp
je
xchg
push
out
cmp
inc
fdivrs
out
imul
add
insb
cmp
ret
push
cmc
cwtl
jne
sub
mov
push
imul
cmc
adc
movb
sub
nop
mov
add
dec
je
sbb
sbb
sbb
and
dec
mov
lahf
push
xor
or
jns
push
add
gs
das
mov
dec
loopne
mov
xchg
xchg
pop
inc
ljmp
add
cmp
pop
add
add
cmpb
pushf
arpl
icebp
or
and
call
mov
imul
bound
gs
adc
stc
xchg
int3
stc
ret
out
and
pop
out
fmuls
in
pop
sub
shl
xor
mov
dec
xchg
test
adc
mov
repz
shrb
mov
jl
push
jl
repz
sbb
in
jne
movsl
adc
sbb
and
xor
stos
mov
lock
sub
or
lret
pop
or
dec
mov
sub
jge
or
and
inc
repz
mov
cs
cmp
xchg
sbb
mov
push
popa
dec
fdivrs
popa
testl
out
lret
gs
out
clc
and
cmp
add
pop
or
push
fs
or
add
cmp
add
call
pshufw
push
jne
ss
dec
push
ljmp
or
pop
push
fisttpl
decl
test
cld
push
call
pusha
ret
aas
js
fwait
xor
dec
roll
jbe
push
dec
and
and
sbb
imul
imul
mov
adc
or
imul
inc
inc
fsubl
aam
mov
push
movb
xor
pop
aas
push
cmp
daa
inc
mov
fs
in
gs
data16
cmp
std
lret
cmp
add
adc
mov
dec
push
sahf
or
cmc
sub
sbb
dec
pushf
aad
xchg
add
pop
mov
das
sti
mov
lods
jmp
nop
jg
jns
repz
push
mov
ja
adcb
aaa
ret
lods
adc
cmp
out
pop
jge,pt
es
pop
test
or
icebp
xchg
movsl
lret
in
pop
lea
inc
mov
add
in
and
stos
mov
mov
push
loop
loop
lods
xchg
decb
lcall
cld
loop
mov
dec
movsb
std
inc
add
leave
mov
je
out
imul
mov
clc
pushf
in
ja
lret
sbb
arpl
enter
pop
jp
in
iret
mov
cmp
dec
stos
or
call
popf
sbb
cs
and
or
inc
loopne
mov
mov
clc
inc
mov
sub
xchg
in
adc
mov
out
ret
std
and
ss
imul
jg
pop
sub
mov
dec
dec
gs
cltd
insb
outsl
or
scas
dec
mov
push
rcrb
dec
mov
mov
jmp
push
sub
inc
or
outsl
mov
test
push
xchg
cmpsl
scas
ss
push
jge
in
popf
std
jl
inc
cmp
loopne
push
das
test
out
or
push
sub
add
movsl
roll
dec
mov
sub
outsb
push
lret
in
xor
sti
in
mov
mov
mov
je
sub
lock
mov
push
xchg
or
jmp
xchg
lock
mov
jbe
je
shrb
ffree
or
imul
add
insl
push
std
add
fistpl
jmp
inc
push
dec
xor
mov
nop
aad
push
add
test
movsl
pop
dec
out
and
mov
push
fwait
aas
cmpl
jecxz
adc
popf
lods
mov
incl
int
add
std
stc
ds
outsl
add
sbb
xor
inc
inc
or
stos
xchg
and
mov
aam
inc
aam
xor
mov
and
fsubr
sub
inc
iret
negb
pop
cmc
sub
outsl
rcl
mov
jmp
mov
mov
lds
in
mov
pusha
xor
inc
pop
push
aas
mov
mov
xlat
mov
test
popa
fidivs
dec
push
and
pop
or
mov
scas
sub
not
pop
mov
cs
cs
push
adc
dec
lock
sbb
leave
inc
mov
leave
hlt
mov
push
cltd
or
popa
or
fists
sarb
int3
movsb
loopne
adc
push
fwait
divl
sub
lods
hlt
push
je
mov
mov
lea
and
push
iret
repz
push
fimull
sarl
sub
jns
hlt
push
nop
sub
cmp
adc
ret
cs
rorl
jns
movsl
jb
jecxz
lods
test
je
mov
adc
and
popf
xlat
cmc
inc
mov
jge
pop
adcb
add
mov
mov
dec
cmp
imul
xchg
cmp
in
fstpt
pop
cmp
lret
imul
rclb
movb
scas
fwait
mov
es
test
scas
mov
and
sarl
sub
lods
fiadds
std
sub
nop
in
adc
test
data16
fstpt
test
aaa
mov
push
mov
imul
lds
pop
shrb
xor
add
popa
pop
sbb
out
sub
xor
mov
aad
mov
and
mov
ret
mov
stc
mov
or
cmp
sbb
xorl
inc
jno
push
push
ljmp
xlat
lcall
xor
sub
inc
rcrb
cmp
xchg
dec
movsb
xor
fisttpll
cld
mov
sub
pop
shufps
incl
pop
cmp
jnp
pop
and
push
int3
xor
or
pop
or
pop
xor
pop
push
inc
es
inc
or
xchg
pop
jae
fsubl
sub
and
xchg
and
test
jne
cmp
fmulp
or
popa
jge
cmp
inc
pop
popa
dec
inc
clc
jns
dec
sbb
dec
shlb
insb
test
icebp
or
push
push
pop
push
fcomps
push
adc
iret
cs
add
repnz
scas
jno
dec
or
divl
lods
fisubs
mov
mov
mov
leave
sbb
sbb
jnp
movsl
push
repnz
clc
dec
sub
rolb
sbb
fisubl
jae
fnsave
cmpl
push
xchg
inc
ds
mov
pop
cs
int
adc
xchg
mov
pop
ja
xchg
mov
jo
mov
pop
dec
jp
cmp
push
std
iret
mov
pop
dec
sub
notl
ror
mov
outsb
sbb
pop
jl
test
leave
cwtl
hlt
outsl
sbb
or
lock
sub
mov
outsb
xchg
incl
sbb
iret
movd
dec
stos
fisubrs
inc
outsb
mov
sbb
jno
negb
cs
nop
inc
test
xor
bound
movsl
std
iret
subb
imulb
fwait
adc
mov
jmp
mov
sti
xchg
cmp
cs
rcr
into
out
jmp
mov
fnsave
dec
es
adc
add
xor
rolb
mov
inc
add
sbb
and
es
adc
inc
mov
mov
loopne
mov
mulb
push
xchg
das
cmc
xor
sbb
inc
xor
int3
cmpsb
loopne
mov
pop
cmp
lret
inc
les
aas
in
mov
mov
mov
xlat
pop
add
mov
imul
or
int
and
jecxz
jge
mov
test
jge
lds
jmp
stos
test
or
sub
js
sub
or
bound
adc
sub
xor
jmp
pxor
lods
outsb
sub
orl
in
les
push
push
dec
add
sub
cld
adc
mov
jle
push
addr16
dec
dec
mov
cmp
inc
idivb
jno
cmp
sbb
mov
aaa
dec
mov
lock
fildll
cmp
and
inc
shlb
pop
int3
sbbl
jmp
shl
jle
fcompl
iret
test
pop
mov
out
push
ret
mov
inc
mov
jbe
and
insl
loopne
test
nop
xor
push
sbb
loope
cmp
xchg
mov
jbe
mov
pop
cwtl
mov
push
add
add
addr16
pop
sub
mov
and
and
scas
clc
lahf
gs
sub
imul
jns
jo
sub
sub
push
lods
ret
fnsave
or
jp
jns
xchg
mov
call
cmp
lods
xor
inc
test
push
into
idivl
add
stc
scas
hlt
daa
pop
jp
push
jae
add
inc
jg
pop
inc
push
push
stos
arpl
testl
jnp
adc
adc
add
lds
imul
jne
ret
loopne
iret
mov
mov
inc
jns
or
adc
sahf
lcall
sub
or
push
sbb
inc
push
fcompl
mov
mov
push
add
xchg
in
xchg
sti
xor
sub
inc
xchg
inc
iret
into
insb
roll
push
or
jle
pop
dec
xlat
stos
arpl
jecxz
das
inc
add
push
lock
ss
add
call
pusha
mov
or
and
cltd
test
and
les
push
aas
pop
mov
jo
test
jp
sbb
aad
pop
add
cmp
lods
test
repz
outsb
lock
stos
lea
dec
in
fcoms
add
and
fdivrp
inc
subb
lock
dec
mulb
pushf
xor
xor
in
jns
mov
adc
xchg
andl
jno
out
mov
repz
xor
mov
add
or
inc
cld
adc
ds
adc
push
sub
xor
jg
dec
and
xchg
push
jae
push
mov
mov
mov
lods
rcl
xor
imul
push
outsl
jns
xor
outsl
aad
shll
movsb
ret
in
mov
mov
divl
xor
test
sbb
push
mov
jecxz
out
scas
mov
push
pop
loop
pop
fcomps
stos
aam
and
cs
mov
push
sub
in
xchg
clc
mov
cmp
gs
enter
div
sahf
fadd
inc
into
andb
mov
lahf
pop
xchg
test
add
fxch
xchg
cmp
sarl
push
mov
mov
sub
or
add
cmp
enter
xlat
into
stos
aas
xor
push
xchg
sub
adc
in
and
push
inc
roll
cmpl
sub
sbb
daa
jae
xchg
ret
pop
rorb
into
jecxz
je
sub
pop
lds
psubb
jbe
lods
mov
push
lcall
jnp
sbb
jge
fs
aad
xchg
sbb
lods
sbb
push
int3
dec
aad
inc
jno
nop
repz
xchg
stc
add
in
lret
dec
insb
ja
std
sbb
dec
jb
lcall
movsb
int
sahf
dec
lcall
shll
and
sahf
ficoml
mov
lret
inc
pop
mov
inc
outsb
jp
push
inc
imul
cmp
push
lahf
cmp
add
insl
inc
divb
test
outsl
add
xchg
outsb
out
xor
fiadds
xchg
jp
xor
push
adcl
scas
mov
mov
ljmp
mov
mov
mov
adc
fwait
scas
out
cwtl
mov
xchg
or
mov
out
repnz
loope
or
jns
sub
fists
scas
ja
mov
sbb
rcr
dec
test
jbe
pop
sbb
pop
sub
out
sbb
adc
ret
and
cld
mov
lea
xchg
sbb
insl
adc
lcall
xor
adc
jnp
ret
arpl
iret
shr
push
and
imul
test
jbe
mov
jmp
rcrl
pop
mov
pop
xchg
push
insb
sbb
ja
xor
and
aas
roll
pop
add
leave
and
jns
stc
pusha
popa
mov
test
fmul
or
jg
or
out
stc
loop
shlb
push
jg
gs
sbb
sti
adc
sub
add
lret
jp
adc
hlt
mov
pop
inc
cwtl
jle
pop
jno
loop
mov
mov
jp
pop
jb
or
sbb
jg
iret
sbb
inc
ljmp
inc
or
push
xor
adc
scas
notb
lcall
mov
insl
insb
fldl
xchg
push
pusha
adc
adc
jmp
push
adc
ficompl
shlb
inc
xchg
dec
mov
cmpsl
jmp
inc
loope
pop
jp
mov
jae
loopne
mov
push
or
adc
scas
or
adc
icebp
pop
cltd
movsb
out
push
mov
push
add
int3
insb
xchg
movsb
mov
mov
xor
arpl
call
xlat
push
dec
stc
call
shrb
and
dec
and
pop
mov
enter
out
cmp
sbb
xchg
cmpsb
repnz
inc
stos
xchg
mov
adc
rcr
mov
je
fmul
loopne
popa
xchg
xchg
jno
ja
mov
in
out
mov
dec
mov
cmc
mov
push
mov
jb
mov
jbe
mov
jnp
inc
stos
mov
test
mov
fdivrl
lret
cmc
repnz
mov
push
aaa
mov
mov
scas
orl
pop
insl
das
mov
inc
insl
rcrl
out
xor
push
rol
int
fstl
test
leave
push
aam
out
push
push
cmp
mov
enter
dec
push
lret
cmp
out
in
aam
xchg
push
inc
cs
ror
aas
sti
fxam
jl
jae
stc
jnp
xor
jbe
mov
les
test
add
dec
je
pop
push
aam
pop
dec
data16
cmp
jno
pusha
adc
int
aaa
cmp
inc
ret
push
mov
aas
test
adc
jb
jnp
fdiv
pop
mov
or
cli
add
fnstenv
cmp
sub
or
xchg
sub
inc
sub
adc
and
jne
jae
mov
test
push
subl
lods
mov
aad
xor
dec
sbb
loop
in
cmp
sub
add
insl
int
adc
inc
and
or
int3
add
xor
pop
addr16
aas
mov
push
leave
pop
aas
sbb
scas
xchg
and
sub
cmp
sub
insb
scas
and
jl
int3
mov
dec
aam
sbb
lcall
jae
into
je
or
sub
mov
rol
xorb
inc
jmp
add
xchg
mov
js
fnstenv
pop
push
cmpsl
lret
fsubrl
out
or
pop
or
in
sub
adc
mov
stc
sub
or
fstpt
repnz
mov
or
sbb
xor
daa
outsl
scas
mov
mov
mov
or
push
cmp
cmp
pushl
rorb
lods
xor
addr16
and
jnp
or
mov
sub
call
test
mov
adc
inc
loopne
loopne
sub
sbb
mov
jae
cmp
ret
ja
and
rol
in
nop
xchg
jb
aaa
or
inc
fistpll
outsb
dec
add
jp
jno
inc
cmp
dec
jecxz
sub
cli
loop
popf
aad
dec
push
js
mov
sub
cmp
pop
dec
out
and
lods
inc
mov
mov
mov
xchg
or
jbe
sub
add
out
dec
andl
or
mov
mov
inc
push
cmc
dec
or
mov
push
jo
aam
jae
inc
xabort
and
ds
fisubs
mov
mov
jp
aam
in
pop
ss
mov
adc
xchg
pop
xlat
push
roll
push
out
mov
aad
jns
pop
and
pop
jae
jmp
movsb
test
cmp
in
jns
sub
mov
dec
fwait
xchg
stc
mov
adcl
sub
add
mov
jge
cmp
stos
jno
jg
jb
xlat
adc
pop
nop
lock
cmp
es
xchg
cs
inc
jmp
scas
pushf
dec
jge
inc
lods
inc
lock
fstpl
les
or
insb
dec
sub
fsubp
lea
inc
xor
cmp
mov
add
jp
sub
insl
pop
push
lret
jmp
cwtl
xor
cwtl
lock
adc
cld
xchg
and
pusha
sbbl
inc
cmpsb
bound
out
inc
pop
out
popl
and
mov
or
rorb
lock
xchg
xor
mov
push
mov
hlt
cltd
xor
outsl
orl
insl
test
or
dec
das
or
fstl
fsubp
and
fisubl
das
cltd
sub
pop
les
fcomps
mov
sub
xor
mov
dec
jne
sub
in
sub
or
daa
pop
sub
push
inc
jnp
das
lock
adc
stos
popa
mov
aam
jle
or
dec
sub
inc
das
cltd
dec
dec
leave
xchg
mov
cmp
dec
mov
or
imul
sub
je
jo
dec
inc
push
mov
dec
arpl
cld
mov
mov
add
jbe
push
shll
lahf
sbb
lret
mov
add
pop
das
decl
hlt
cli
and
mov
jne
fistps
jp
adcb
sbb
dec
dec
or
or
pusha
hlt
gs
dec
dec
adc
repnz
dec
pop
cltd
aas
out
mov
movsb
outsl
cmpsb
sbb
data16
fnsave
pop
jmp
lods
js
push
sub
movsl
int3
adc
test
xchg
push
rol
jl
jnp
jge
mov
sub
loop
pop
jl
fsubrl
xchg
add
and
adc
int3
ficoml
cmp
mov
mov
xlat
orb
jmp
inc
nop
shll
ror
test
shl
sub
arpl
sub
ja
into
in
inc
sub
mov
mov
inc
inc
jb
test
cmpsl
add
xchg
mov
cmpsb
pop
or
or
cmp
movsl
mov
cmc
and
xchg
mov
or
enter
jmp
fwait
cmp
aaa
add
jle
xor
aam
add
sti
outsb
mov
imul
out
lcall
shll
push
xchg
pop
rcll
ficoml
xor
lds
lahf
inc
in
adc
popa
sbb
adc
dec
std
adc
lods
jle
sbb
jae
loopne
xor
decl
and
push
xor
pop
pusha
xor
push
repz
test
inc
mov
pop
sub
std
scas
jns
inc
test
cwtl
das
jbe
mull
pushf
popl
icebp
aas
in
lret
in
pop
xchg
pop
mulb
mov
addr16
jle
lods
lahf
mov
hlt
add
int
push
jmp
sbb
js
hlt
mov
je
pop
test
les
aam
or
pop
push
inc
xchg
jbe
iret
inc
mov
loope
dec
or
pop
movsb
jmp
sbb
stos
fistpll
std
cmp
sub
clc
pop
mov
inc
jns
cmpsb
cli
xor
mov
clc
xor
pop
sub
addr16
enter
stc
pop
mov
mov
mov
sti
fidivs
sbb
rdtsc
shr
bound
jno
mov
sbb
ds
pop
sti
inc
pop
and
loop
movsl
xor
mov
cmp
push
sti
adc
shrl
test
repz
sub
pop
int
popf
add
adc
cmp
mov
lds
in
inc
adc
cli
fists
lods
loopne
adc
adc
push
mov
addr16
hlt
and
xchg
dec
adc
push
imul
cmpsb
aas
and
aad
sbb
ret
jno
or
imul
loop
iret
ret
sahf
adc
sarl
dec
adc
dec
sub
pop
call
mov
jnp
push
in
inc
sbb
iret
fistl
test
pop
popa
aas
repz
dec
stos
ja
leave
and
mov
stc
jge
pop
jo
sbb
xchg
mov
insb
cwtl
lea
hlt
xor
push
xchg
repnz
push
mov
into
pop
fadds
xorb
pop
mov
xchg
or
mov
inc
negb
frstor
push
cmp
aam
mov
ret
jne
cmpl
jg
fxsave
ja
dec
cmp
mov
outsb
popf
mov
mov
lock
test
icebp
fmul
cmpsl
push
mov
seto
neg
movsb
or
mov
outsl
out
xchg
mov
dec
icebp
and
movsl
push
sub
lock
outsl
push
xor
xchg
data16
imul
dec
sti
sbb
fcomps
imul
xchg
inc
clc
fstps
insb
out
dec
dec
jb
test
mov
push
pop
data16
jmp
inc
xchg
mov
sbb
add
test
lret
lds
sbb
addr16
js
pop
dec
sub
dec
loopne
jmp
stos
pop
mov
add
popa
and
pusha
popf
pop
out
stos
or
sbb
jl
test
xlat
pusha
idivl
inc
out
pop
and
cmpsb
sub
push
clc
out
push
dec
xchg
int3
lret
cmp
enter
lods
in
stc
fst
sti
pop
hlt
add
jle
add
das
mov
xorb
ret
inc
mov
xchg
aam
fcoml
in
arpl
bound
add
popa
dec
sbb
addr16
adc
popa
test
push
inc
cmp
lret
fdiv
sub
imul
insl
and
mov
lcall
jl
ds
repnz
sar
pop
add
leave
jne
mov
ret
mov
pop
stc
out
insl
jmp
adc
adc
cld
out
xor
rcr
add
sub
ss
adc
lcall
mov
fldl2e
adc
and
jmp
xor
cs
stos
imul
add
adc
lahf
je
xchg
adc
sahf
je
or
in
push
lods
and
cli
clc
cmpsl
inc
cltd
sar
cltd
push
inc
push
dec
ret
test
test
aas
lods
loope
mov
or
jo
ret
sbb
mov
aad
subb
or
mov
and
jb
pusha
jnp
inc
cli
add
imul
xchg
arpl
inc
arpl
xor
mov
pop
mov
cmp
mov
imul
rorb
in
adc
mov
xchg
clc
jl
ljmp
dec
xchg
jl
mov
cmc
xchg
leave
mov
iret
push
in
jb
adc
fwait
cmpl
sti
cmp
pop
ljmp
or
iret
iret
roll
dec
and
mov
sub
cmp
sbb
insb
adc
cmpsb
cmp
out
arpl
mov
mov
daa
scas
push
addr16
popf
loop
lahf
and
jg
cmpsb
mov
xchg
enter
xchg
mov
jns
std
rcrb
cmp
inc
js
sti
sub
scas
sbbb
mov
test
push
jne
xchg
push
push
pop
inc
fisttps
vphaddbw
imul
cwtl
dec
pop
or
loopne
popl
int3
dec
sbb
adc
mov
outsl
out
sbb
push
outsb
push
daa
mov
pop
add
adc
or
scas
mov
cmp
into
pop
xchg
shll
shrl
add
ret
dec
ja
sbb
aam
sbb
out
mov
pushf
jmp
scas
inc
push
inc
push
mov
mov
push
sbb
js
sub
pop
cmp
outsb
mov
and
repnz
cmp
aad
std
loope
xlat
pushf
js
add
mov
ret
or
push
pop
int3
out
inc
and
das
cmpsb
dec
loope
nop
jp
xchg
sbb
push
mov
adc
in
rolb
inc
xchg
dec
shl
in
lcall
inc
orb
sub
xor
jmp
jnp
insl
nop
and
fidivs
pop
scas
outsl
inc
imul
add
or
call
cmp
ds
dec
das
jmp
jne
ret
xorl
in
jnp
add
andl
jo
pop
push
sarw
jmp
adc
fisubrl
outsb
add
fcoms
stos
and
lods
mov
dec
fwait
test
ja
cltd
push
jae
lcall
outsb
mov
test
orl
cmpl
adc
inc
lret
stos
inc
mov
add
aaa
mov
sub
mov
gs
lods
pop
xchg
mov
lods
pop
stos
add
or
stc
cwtl
or
add
ja
pop
sbb
mov
xchg
mov
xchg
or
aam
in
in
repz
xor
xor
sub
sbb
std
in
fildll
hlt
imul
flds
xchg
push
out
push
dec
xchg
push
stos
imul
mov
lcall
pusha
dec
cmp
push
rcl
sti
cmp
out
dec
out
out
jae
jno
or
xor
sub
sbb
mov
mov
mov
cmp
dec
add
test
cld
mov
xor
pop
jle
int3
sbb
fdivs
fwait
inc
fsub
xchg
dec
adc
or
ljmp
test
clc
outsb
fidivl
pop
push
ret
dec
add
xor
les
mov
jae
push
imul
pop
and
pop
repnz
cs
adc
imul
push
in
adc
clc
jmp
jge
push
adc
outsb
mov
xor
stc
fisubs
cmpsb
fidivrs
icebp
stos
les
test
lock
sub
sbb
out
pop
sub
imulb
sbb
aaa
std
lcall
cmp
das
jbe
xchg
jmp
cmp
push
bound
and
cmp
out
je
pop
xchg
add
lock
popa
or
push
inc
dec
add
jg
shl
mov
popa
outsl
lds
mov
add
dec
lret
lds
push
sub
mov
cli
push
jo
and
pop
cmp
push
mov
jnp
sbb
cli
sbbb
jns
dec
mov
pop
adc
cmc
vxorpd
inc
je
sbb
mov
dec
addr16
imulb
xchg
pop
dec
inc
icebp
ss
pop
test
pop
popa
stc
mov
aas
ret
stos
add
insl
scas
loope
sar
mov
or
movsb
inc
inc
add
mov
jae
sub
lahf
or
gs
inc
loopne
test
mov
pop
test
dec
cmp
inc
and
iret
pusha
jbe
xor
fxch
repnz
pop
daa
push
pop
daa
push
cld
aam
mov
sbb
or
inc
lret
clc
xlat
and
sbb
popa
push
loopne
add
aam
and
jge
seto
faddl
scas
adc
dec
mov
sti
ds
mov
cltd
dec
mov
xor
cmp
into
insl
jnp
push
jae
cmp
sub
std
imul
leave
pop
aaa
lret
fiadds
lds
push
cmp
add
inc
sbb
mov
mov
fstl
sub
dec
push
inc
push
imul
pop
xor
mov
out
fists
xchg
mov
lods
cmp
lret
push
das
pop
subb
dec
jb
mov
pop
cmp
ja
insb
in
pop
lea
jo
cld
mov
sbb
and
xor
mov
stos
pop
cmpsl
fcmovu
lea
cmp
jmp
sub
xor
fsubr
bswap
out
cli
cmc
xor
add
or
icebp
cmp
mov
xchg
ffree
pop
xlat
insl
cli
out
cmpl
jp
test
aad
testb
dec
roll
in
mov
pop
insl
fs
dec
leave
cmp
out
lods
sbb
cmp
es
sub
subl
lods
push
pop
add
inc
mov
cmp
or
out
jnp
push
or
xchg
push
inc
and
imulb
int3
fdivp
out
pop
pop
cmpsb
addr16
push
cmpsl
push
pop
and
pop
jp
fcomip
push
repnz
out
je
lock
or
inc
xchg
pop
sbb
pop
mov
add
pop
push
pop
insl
mov
dec
jmp
xor
int
mov
or
and
add
iret
stos
jb
cmp
cmp
pop
pop
xor
sbb
hlt
mov
mov
fsubl
xchg
ret
push
xchg
pop
mov
cmc
les
rorb
and
pop
fs
mov
inc
loopne
mov
adc
mov
pop
push
iret
add
xchg
lret
movsl
adc
in
sub
push
adc
inc
xchg
mov
xor
pushf
sahf
das
popa
xchg
inc
pushf
out
mov
xchg
cmp
fstps
lcall
xchg
jmp
popf
sbb
inc
jnp
inc
nop
sub
shll
sarl
xor
push
loopne
ljmp
ds
or
xor
mov
ret
jb
xchg
push
adcb
outsl
cmp
gs
jno
shlb
fs
sub
clc
add
ss
fnstsw
push
mov
mov
cmpb
cmc
push
ds
je
or
jge
out
or
ret
dec
mov
iret
cmp
push
cmpsb
and
test
hlt
arpl
stos
push
test
in
fs
arpl
shl
push
inc
mov
notb
xlat
rcl
jmp
mov
add
ret
pop
in
movsl
sbb
scas
rcl
pop
jg
ficomps
test
ljmp
and
jp
stos
test
push
mov
cmp
jmp
and
pop
push
mov
outsb
test
pop
mov
jnp
inc
sbb
mov
pop
clc
pushf
out
sbb
add
lods
fistl
xchg
and
add
jno
mov
rorl
in
push
push
test
loop
jg
and
xchg
jle
mov
mov
lcall
jae
xchg
imul
jge
push
cli
dec
sbb
cld
movsl
insl
xchg
mov
out
loope
cmp
insb
pop
mov
mov
mov
lret
ret
lock
inc
jne
sbb
arpl
outsb
negb
std
popa
das
mov
mov
mov
mov
push
mov
pop
mov
pop
add
in
mov
test
xchg
dec
dec
push
aam
cs
pop
data16
add
cli
or
mov
xor
mov
inc
ret
push
xor
pop
mov
pop
pop
lds
jnp
xor
hlt
test
sub
out
out
mov
sbb
sub
mov
jae
jmp
stos
add
xlat
and
leave
dec
dec
pop
popf
sbb
and
dec
movsb
aam
js
lret
mov
movsb
sbb
idiv
mov
js
lret
add
and
stos
in
das
adc
and
movsb
sbb
xor
pop
jae
mov
push
pushf
pusha
adc
jle
jbe
cli
bound
test
ljmp
adc
xor
hlt
and
test
pop
nop
inc
push
pop
clc
jl
aaa
pop
mov
mov
cli
jb
mov
jns
push
inc
xchg
or
mov
cmpl
dec
push
ds
js
out
pop
push
popf
icebp
fwait
into
in
in
jne
xor
mov
cwtl
jns
cs
roll
lret
lods
icebp
lcall
mov
in
out
or
push
and
pop
test
xor
inc
in
testl
mov
mov
or
jecxz
aaa
cltd
mov
outsb
and
sbb
sub
cmp
push
ja
das
jp
cmp
imul
mov
std
lret
lods
pop
pop
pop
or
pop
mov
sbb
or
jmp
add
dec
jns
inc
mov
pop
push
rorl
pop
cwtl
xchg
decb
inc
ror
pop
cld
pop
jno
and
das
add
cmc
push
dec
les
inc
in
mov
and
mov
ss
cmp
push
sbb
into
mov
mov
ljmp
cmp
xor
add
mov
out
mov
and
in
sbb
and
jne
roll
cwtl
fistl
push
ret
gs
sahf
movb
lds
jmp
adc
cmp
and
push
outsl
mov
call
adc
sub
push
inc
dec
jnp
inc
jb
es
sub
and
sub
gs
cmp
add
pusha
sbb
and
jnp
repnz
aad
push
push
loope
inc
sbb
mov
add
in
jmp
clc
pop
pushf
jno
addr16
outsl
mov
or
add
inc
jl
sub
popf
cmp
out
jl
mov
aaa
insb
pushf
lea
mov
rcrb
es
adc
sarl
sbb
xor
repz
sahf
jnp
or
je
sbb
and
aad
xchg
lahf
mov
pop
sbb
fistpll
sub
test
or
sub
test
sbb
data16
daa
lret
and
daa
aam
cmpsl
mov
movsb
sub
fnstsw
dec
sarb
push
mov
inc
xor
cmc
cwtl
push
xor
test
gs
push
adc
jb
inc
push
test
sub
xchg
insb
cmpsl
sbb
adc
jno
mov
inc
inc
sbb
add
jge
mov
sbb
pop
daa
sub
sub
push
jb
ret
xor
sarl
popa
inc
icebp
and
push
lods
mov
inc
jl
mov
ljmp
sbb
adc
cli
fisttpll
test
enter
or
push
and
int3
insl
popf
pushf
aaa
movsl
push
mov
lea
cmp
dec
popf
rolb
loop
les
stc
mov
int
out
movsb
cmpsb
mov
inc
cltd
movsl
js
sbb
movsl
mov
testl
inc
leave
xchg
push
lea
clc
loop
mov
xchg
sbb
sub
cmp
outsl
or
adc
push
insb
add
enter
adc
push
adc
iret
in
les
xor
or
jns
lahf
mov
xlat
aad
ficoms
lcall
out
pop
dec
sbbl
sbbl
repz
ds
nop
inc
or
aam
sbb
or
punpckldq
xchg
jle
or
popl
push
push
and
ss
dec
shll
stc
rorb
push
pop
jb
mov
orl
sub
xchg
inc
dec
xchg
in
vunpckhps
into
mov
push
pop
xchg
fsts
push
push
mov
jle
mov
fwait
xlat
sahf
imul
ds
cld
jecxz
and
mov
xor
fsubrs
insl
cli
in
xchg
inc
adc
icebp
pusha
scas
das
sub
push
lcall
je
jmp
sub
cli
and
sbb
push
sbb
aas
dec
dec
ss
adc
fdivrl
jecxz
mov
sub
lcall
sbb
add
pushf
lods
dec
cwtl
loope
hlt
mov
divb
or
scas
or
movsb
lret
jnp
mov
loope
pop
mov
repz
incb
mov
inc
std
roll
bound
adc
sub
mov
mov
int
imul
movsb
enter
push
loop
jge
ficoms
mov
pop
jp
orb
movsl
pop
push
iret
push
mov
loope
pushf
mov
xor
stc
cmpsl
lcall
cmp
cmpsl
push
aad
add
sahf
loopne
out
inc
fsub
out
es
ljmp
test
jg
cld
xchg
jae
xchg
xor
in
xchg
in
lods
prefetch
push
pop
sub
aad
jns
pop
insb
adc
scas
ss
clc
ljmp
push
mov
jbe
scas
faddl
pop
jb
mov
or
pushf
loope
sbb
test
movsl
sbb
pop
pop
pop
mov
loope
cltd
ret
mov
push
push
test
adc
sub
dec
jae
mov
or
outsl
lcall
lods
inc
adc
or
or
dec
jp
cmpsl
jno
addr16
insl
rolb
data16
mov
test
and
loop
addr16
ds
add
inc
ret
dec
mov
add
lods
push
push
mov
mov
mov
push
adc
mov
fwait
cmp
out
mov
add
aas
mov
stc
xor
sbb
adc
adc
pop
dec
sbb
mov
sahf
add
stos
xchg
mov
pop
outsb
out
pop
loopne
js
cmp
sbb
loope
dec
xlat
lret
in
cmc
lret
hlt
cmc
lods
xor
cmc
pop
dec
adc
push
lret
fisttpl
ss
cmpsb
sarb
dec
and
mov
dec
lds
out
push
and
jle
and
lods
mov
inc
pop
jno
sub
das
cld
mov
push
pop
jno
cmpsl
seta
shr
sbb
xchg
dec
nop
cmp
mov
cltd
push
push
dec
nop
rcll
jb
daa
sbb
jo
mov
xchg
cmp
push
xlat
push
push
in
mov
dec
pusha
and
pop
pop
pop
fstpt
mov
bnd
mov
mov
mov
jne
pushf
push
arpl
out
push
mov
js
loopne
jle
fdivs
mov
aaa
and
cmpsl
nop
stos
inc
shlb
cld
daa
fsubrl
ss
das
cltd
nop
pop
popf
jmp
out
rcrb
sar
lcall
inc
call
sub
adc
sti
pop
clc
popa
inc
add
mov
and
inc
sub
dec
cmp
iret
pop
lret
int3
add
push
inc
or
divb
xor
and
es
jecxz
mov
test
cmp
pop
fucomip
push
lea
shll
push
popa
imulb
add
faddl
sbb
filds
and
push
inc
fnstcw
arpl
xor
cld
and
pop
xlat
leave
mov
cltd
iret
fwait
and
mov
fimuls
jns
sub
mov
sti
loopne
pop
dec
adc
lret
dec
mov
jg
push
ret
addr16
pop
xchg
sti
test
mov
cmp
jo
push
inc
xchg
xor
test
cwtl
mov
enter
loopne
aam
rcrl
mov
in
push
dec
incb
mov
or
test
cmp
je
in
out
mov
gs
adc
leave
xor
push
cwtl
mov
stos
dec
fisttpl
fs
add
push
pop
mov
nop
arpl
mov
pop
sub
inc
getsec
aam
repnz
subl
inc
outsb
add
in
sub
push
pop
dec
pop
jns
je
out
mov
movsl
jnp
dec
xchg
or
cmp
sub
shl
dec
cmpsb
xor
cmp
adc
mov
inc
push
sbb
pop
pop
mov
mov
mov
cmp
insl
mov
pop
cmpsb
fucomi
aaa
sub
mov
fdivp
scas
or
js
clc
lock
push
add
jmp
ret
xorl
mov
ss
dec
pop
pop
mov
subl
out
xchg
and
cmp
std
fs
xchg
cmp
or
xor
stc
inc
inc
imul
jnp
lods
xor
sbb
mov
add
ret
jg
xor
iret
jns
cmp
rcll
mov
and
add
xchg
in
xor
sbb
mov
inc
aas
stc
rcl
push
jecxz
movsl
mov
push
xor
cltd
loop
push
add
in
mov
xchg
jae
popf
mov
out
lcall
push
xor
fisttpll
scas
pop
stos
mov
add
aas
cmp
test
cmp
jp
sub
call
repnz
mov
push
adc
daa
xchg
push
clc
mov
mov
push
fdivs
test
mov
pop
push
xchg
jbe
in
mov
cwtl
mov
repnz
jns
xchg
adc
ljmp
lds
and
insl
mov
fisttpll
push
lcall
repnz
lret
mov
xchg
inc
mov
fldcw
icebp
inc
sbb
shlb
mov
fsts
sub
pop
mov
notl
pop
adc
adc
rcr
pusha
sbb
adc
cmp
cli
jns
fdivs
inc
popf
cli
in
pop
outsb
bound
hlt
sub
icebp
out
jo
sar
out
adc
das
sbb
jno
divl
shlb
ret
mov
sub
stc
inc
ss
icebp
push
sub
subl
stos
sub
roll
das
stos
ficomps
sub
push
lret
jge
test
movsb
push
addr16
dec
and
sti
popa
mov
loop
mov
pop
dec
pushf
xor
sti
mov
adc
mov
lock
inc
mov
out
int3
out
rcrb
xor
fwait
jae
mov
adc
pop
cmc
sub
loope
mov
out
scas
loopne
dec
mov
sub
mov
mov
jbe
fwait
sub
adc
lcall
mov
mov
movsb
push
xchg
imul
pop
leave
nop
push
ret
inc
cmp
pop
cmp
xchg
mov
jg
or
loop
or
sbb
shrl
jp
adc
push
cmp
dec
dec
fwait
in
add
push
int3
sbb
cltd
int
adc
daa
adc
cs
daa
shrb
pop
repnz
adc
test
ret
jo
jb
jp
mov
xor
cmpb
pop
fistl
aaa
orb
int3
mov
into
fpatan
push
dec
mov
ret
inc
sbb
mov
iret
pop
movsb
mov
insb
or
dec
mov
pusha
shll
xchg
mov
cmpsl
sbb
mov
jmp
stos
add
jns
pushf
and
jge
jmp
stc
fisttps
pop
mov
aam
adc
cmp
ficoms
lahf
into
pop
sub
out
or
ss
jae
insl
jb
stos
or
pop
lea
loopne
das
xor
sti
imul
cltd
shrl
inc
mov
and
movsl
push
imul
mov
pusha
add
and
push
xorb
adc
pop
in
jecxz
sbb
xor
xchg
aaa
mov
call
add
cmp
stos
cmp
mov
sbbl
jl
jnp
inc
pop
iret
movsl
dec
dec
jns
call
xor
sbb
adc
sbb
mov
andb
inc
rorl
vpexpandb
aad
fwait
push
pop
dec
add
pushf
mov
fst
dec
and
testl
movsb
add
enter
pusha
xor
sbb
adc
push
jmp
pushf
jno
outsb
sub
push
roll
cwtl
sbb
inc
stos
icebp
in
iret
ror
or
in
pop
into
adc
mov
mov
gs
push
push
mov
stos
outsb
pop
sti
addl
push
adc
fimuls
mov
lds
scas
scas
int
outsb
les
gs
cmp
ficoms
sub
pop
lahf
in
repnz
dec
loope
mov
adc
jge
pop
mov
dec
sub
mov
test
movsb
lret
jecxz
scas
test
dec
lahf
add
lret
data16
std
aaa
ds
bound
mov
sti
and
or
fwait
outsl
dec
roll
imul
sbb
and
mov
sub
pop
inc
and
stos
mov
leave
sarl
mov
sub
jb
cmp
xchg
pop
cmp
push
mov
mov
icebp
or
test
fmuls
lahf
cmp
pop
ss
in
mov
push
sarl
cli
mov
fwait
or
rorl
mov
dec
fs
mov
out
leave
adc
xchg
and
imul
sub
or
rclb
adc
int3
inc
es
aad
inc
pushf
sub
ret
push
test
test
jno
fadds
mov
lock
inc
push
xchg
test
mov
ds
into
sub
pushf
mov
cli
cld
repz
fildll
mov
or
mov
std
pop
mov
shrl
pop
adc
ss
into
daa
cmc
cmp
mov
mov
add
pop
inc
inc
lret
jns
sbb
push
std
fdivrs
or
loopne
fcmovb
pushf
enter
push
sbb
popa
stc
mov
movsl
icebp
mov
cmpb
movsb
pop
loop
je
cmp
push
mov
jae
jne
lret
mov
add
test
adc
pusha
xchg
mov
jle
neg
lret
jmp
adc
ja
cli
dec
jnp
rolb
xor
loopne
hlt
loopne
mov
inc
jne
cmpsb
mov
sarb
jo
in
or
mov
add
out
mov
sbb
xchg
xor
inc
mov
lea
pusha
add
pop
and
dec
dec
daa
sub
sbb
mov
js
adc
cwtl
mov
jo
mov
push
push
rorl
jmp
xor
fcompl
nop
sar
lret
mov
fistpl
mov
push
adc
cmp
sub
lea
sti
cmp
aaa
fstps
les
or
inc
xor
mov
or
out
test
int3
mov
test
adc
jnp
pushf
ret
cmp
dec
sub
fisubl
jo
cltd
push
pop
cli
cmp
adc
movsb
xor
dec
adc
sti
inc
push
hlt
sub
mov
mov
shlb
or
dec
adc
nop
pop
pushl
fsub
and
pop
sbb
cltd
cmp
notb
adc
mov
das
xchg
pop
fcoms
push
pop
lds
sub
gs
mov
and
mov
test
xchg
xor
mov
cwtl
push
nop
mov
push
jbe
movsl
cmp
popf
xchg
xlat
and
sbb
fsub
sub
jmp
xchg
push
xor
call
mov
xsave
mov
test
out
mov
loope
mov
lock
or
cmpsb
aaa
sarb
call
cmp
xchg
cwtl
and
jo
jns
mov
or
divb
inc
and
lods
int3
sub
pushf
jne
inc
pop
orb
mov
popa
mov
inc
xchg
add
scas
jne
xchg
popf
add
cs
mov
vmwrite
jle
aaa
xchg
es
dec
and
inc
cld
pushf
movsb
fs
shll
mov
sbb
addr16
fdivs
ds
out
xchg
mov
cmpsb
in
cmp
shlb
pusha
lahf
ljmp
and
cmp
adc
cmp
pop
jge
adc
mov
int
lcall
sar
dec
push
arpl
xchg
insl
cmp
jne
sub
push
and
jns
inc
stos
pop
xor
inc
daa
sub
sub
mov
rolb
imulb
lock
xor
sbb
mov
adc
push
insl
stos
out
sbb
push
jnp
adc
mov
popaw
push
lods
add
add
insl
add
xor
idivb
insb
test
fs
testl
lahf
cwtl
int
push
pop
mov
incl
push
cwtl
and
jnp
repnz
out
mov
push
mov
repz
jo
or
push
pop
adc
fs
mov
repnz
ret
push
inc
sahf
repnz
repz
iret
dec
pop
stos
in
lret
int3
fistps
iret
iret
xlat
mov
ss
jmp
test
push
pop
pop
in
sbb
aaa
xchg
or
mov
xor
in
bound
or
mov
outsl
es
testl
add
inc
cmp
push
jge
push
out
arpl
leave
xor
xchg
mov
popa
sahf
insb
lock
xorb
sub
into
mov
push
xorl
shll
scas
sub
sbb
mov
clc
dec
jne
sub
xor
les
mov
gs
fcomi
fxch
nop
cmpsl
insb
gs
or
or
sar
aam
mov
jbe
aad
mov
clc
aad
jl
xchg
xor
jb
out
fs
sub
inc
mov
aas
inc
sub
dec
popa
or
push
jne
cmp
xchg
inc
lea
int3
shl
pop
dec
push
sub
outsl
jle
xadd
push
ss
push
insl
or
and
xchg
nop
lahf
push
inc
dec
jbe
scas
sbb
xor
mov
sti
nop
lea
lret
aam
cmp
rclb
int3
lock
lcall
mov
scas
xor
loop
icebp
inc
dec
xor
mov
divl
insb
adc
mull
xlat
int
or
push
push
xchg
lods
mov
cmp
inc
mov
mov
inc
sbb
out
in
pop
fcoms
arpl
mov
ret
inc
xchg
lods
bound
xor
fadds
add
cmp
sbb
jb
cmpsl
ljmp
mov
ljmp
loop
in
push
and
stc
mov
test
sbb
pusha
idivl
jbe
xchg
insb
xchg
or
test
aas
sub
mov
bnd
int3
or
pop
insl
xchg
xchg
subb
pushf
jae
pop
daa
sub
jmp
outsl
jb
leave
lods
add
test
outsb
test
jl
xor
inc
fbld
cs
xor
testl
or
inc
adc
jne
mov
loopne
mov
add
imul
out
aad
fldcw
in
mov
scas
cwtl
ret
push
ret
es
jge
mov
test
jne
sbb
jo
pop
clc
pop
inc
rcr
add
fcmovne
shlb
inc
out
rorb
lret
pop
mov
xor
jno
out
stc
pushf
and
xor
orl
mov
mov
and
lods
push
mov
ja
pop
fs
pop
adc
or
in
jge
jns
dec
push
lock
inc
mov
add
cmp
and
maxps
outsl
fisubrl
pop
push
pop
or
or
rol
cmpsl
jmp
add
nop
repz
fisttpl
mov
sub
std
out
inc
push
icebp
clc
add
aad
add
inc
rcrl
add
mov
int
pushf
sbb
call
dec
movsl
lock
jp
sbb
test
inc
mov
mov
and
movsb
add
mov
fs
roll
or
mov
data16
or
mov
mov
addb
xchg
loop
js
jle
pop
mov
out
jle
icebp
dec
inc
popf
fwait
call
ret
outsl
dec
nop
aas
lret
push
lret
xchg
fadds
dec
jmp
nop
jecxz
mov
pop
jbe
int3
cmp
or
inc
out
xchg
addr16
pusha
cmpsl
call
ret
repz
sbbb
sub
push
push
repnz
in
sbbl
mov
cmp
scas
andl
in
pop
cld
sbb
sti
pop
sub
or
cmp
loop
lahf
lds
sub
imul
and
in
outsb
jno
icebp
sbb
push
in
popf
ds
inc
jle
movsl
fisubrl
xchg
xor
repnz
testl
jmp
and
inc
xchg
add
inc
lods
xchg
in
ret
add
dec
or
adc
lcall
cld
aad
or
mov
xchg
cltd
data16
xchg
pusha
sti
jp
xchg
jbe
adc
or
int3
mov
cmpsl
or
rcrl
pop
mov
mov
mov
shlb
and
imul
pop
mov
jl
nop
fdivrl
std
insl
jo
test
xor
inc
inc
sub
push
cmp
jnp
jne
scas
inc
sahf
pop
xlat
sarb
mov
sub
mov
mov
imul
aas
cmp
insl
inc
mov
xchg
inc
dec
or
jecxz
scas
movsb
ljmp
ret
pop
lods
insl
mov
jnp
push
mov
enter
or
fists
sarl
les
fisubs
inc
cmp
and
xor
ss
xor
addr16
and
xor
shlb
jb
inc
xor
sbb
ja
adc
hlt
adc
mov
sub
pushf
std
xchg
cmp
stc
inc
shl
lods
test
push
push
ret
arpl
xor
inc
add
xor
pop
stos
xchg
pushf
sub
outsl
repnz
adc
adc
ret
adc
lds
xchg
pop
je
cmp
fmull
outsb
mov
pop
push
pop
lds
mov
mov
das
loope
dec
and
outsb
das
cli
or
icebp
add
ljmp
fst
jmp
decb
into
and
add
aaa
arpl
inc
in
aas
xor
mov
push
jns
fdivrp
jmp
mov
sub
iret
shl
mov
imul
iret
stc
sub
adc
add
fs
mov
mov
rorl
fidivrl
xor
arpl
sub
into
aaa
popa
icebp
lcall
sar
sbb
fcmovbe
imul
aaa
pop
cmp
aas
imul
cmp
icebp
push
sahf
lret
lret
jg
aad
xchg
fisubrs
jno
jo
xchg
sub
shll
fs
or
mov
imul
ficompl
cli
std
xor
jb
adc
mov
dec
adc
jae
pop
xor
enter
xchg
add
jbe
scas
in
out
sar
xor
and
cs
test
sbb
repz
mov
cld
sti
add
addr16
mov
in
in
in
or
jnp
or
push
out
addr16
mov
sub
cmovb
loope
sbb
mov
cmp
pop
xchg
repz
inc
xchg
andl
movsl
push
sbb
pop
sar
mov
aad
sbb
mov
idivb
jmp
cmp
nop
sub
mov
and
js
cmp
sahf
in
cmpl
lret
das
jg
adc
mov
cmpsb
mov
mov
lds
xor
mov
movsb
cmpsl
jg
outsb
mov
cmc
jl
clc
push
xor
pushf
loop
jnp
rcrl
loopne
push
and
push
mov
mov
mulb
inc
inc
int3
imul
jns
int
add
popa
idivl
lds
jge
sbb
cmp
scas
pop
jge
in
xor
negb
lock
inc
xchg
out
clc
data16
mov
pop
sub
mov
mov
data16
pop
and
add
xor
pop
lret
xor
inc
mov
ficoms
xchg
push
out
test
leave
mov
push
xchg
lods
imul
or
mov
add
in
push
outsb
cli
and
cltd
hlt
and
mov
jne
push
add
jecxz
aam
insl
sahf
decl
pop
jnp
popa
mov
call
jnp
cmp
arpl
xchg
out
add
cld
mov
outsb
mov
pop
sub
lret
pushf
jae
aas
xor
lock
or
stos
sub
and
sub
dec
sbb
and
push
sahf
lret
mov
sbb
xor
hlt
jno
in
mov
into
inc
jg
call
mov
push
push
or
fsubs
jb
dec
inc
pop
add
jp
aas
cmp
xchg
cmp
sbb
loop
inc
mov
add
mov
xchg
mov
lcall
iret
sbb
jae
movsl
scas
fsubrl
xchg
rolb
add
shll
cmp
gs
fimull
jno
mov
in
cwtl
fidivl
jge
and
mov
fstpt
and
mov
cltd
push
sbb
int
mov
add
sti
xchg
call
sub
adc
pusha
bound
repnz
addb
fdivrl
mov
jl
aas
out
xor
mov
and
sbb
and
dec
ds
call
fs
jns
pop
loop
std
call
push
inc
leave
leave
mov
inc
mov
dec
mov
pop
push
xchg
pop
daa
mov
scas
lea
cmpsb
add
or
ss
sti
in
pop
fsubrs
mov
cmp
cld
out
in
mov
jno
cld
imul
mov
sub
inc
nop
mov
jae
lret
inc
je
movsl
loopne
pusha
mov
sub
data16
mov
lds
push
aam
push
dec
cli
insb
cmpl
mov
popa
lret
xchg
cmc
pop
add
adc
push
fldl
inc
adc
pop
sub
mov
sub
push
cmc
movl
fcomp
inc
scas
test
pop
cli
dec
mov
sbb
and
add
imul
pushf
push
mov
loopne
mov
sub
push
cld
fsubrp
jle
adc
jne
fstpl
adc
fmull
adc
cmp
or
mov
xor
dec
mov
cs
add
and
dec
aaa
add
add
inc
insb
cmp
js
pop
roll
cld
ss
mov
push
push
cld
enter
jb
mov
in
add
les
test
dec
ds
imul
cmp
xor
sbb
clc
push
or
ja
cli
mov
insb
sub
push
inc
data16
or
cmp
pushf
jns
xor
movsb
mov
pop
fidivrl
mov
psrad
lret
ja
mov
dec
cltd
cmp
mov
push
icebp
cwtl
aaa
and
and
jecxz
frstor
out
sti
fwait
cmp
stos
push
mov
mov
jg
inc
das
int
jne
loope
jmp
out
or
fwait
xlat
pop
fldcw
imul
mov
xlat
imul
lahf
popl
dec
sbbb
scas
push
pop
mov
and
pop
jle
push
scas
cli
out
mov
decl
jb
mov
sbb
dec
mov
add
stos
sbb
mov
sti
ja
scas
push
xor
outsb
mov
jg
mov
and
sahf
xor
inc
sahf
xor
jge
stc
mov
cwtl
lock
leave
sbb
jno
stos
out
push
cmp
fadds
jl
inc
scas
mov
sub
sbb
push
movsl
fsubs
or
push
aam
xor
xor
movl
pop
sbb
pop
andb
aad
int
mov
ja
mov
cltd
mov
sbb
jle
sub
mov
jg
sbbl
sbb
movsl
clc
dec
aad
out
jne
push
sbb
push
jl
cs
icebp
push
sbb
sti
inc
pop
js
jbe
cltd
stos
ds
insl
jbe
movsl
mov
ret
fs
sahf
imul
outsl
lods
add
mov
cs
test
cmpsb
popf
push
xor
push
enter
cli
push
mov
cmp
mov
mov
mov
aaa
and
inc
loope
pop
add
loope
test
jo
cmp
call
xor
idiv
test
in
push
add
fnstcw
jno
push
fsts
push
test
dec
cmc
fnstsw
scas
stos
and
in
repz
jns
mov
lds
pop
fnstcw
lods
xor
mov
data16
mov
ljmp
stc
nop
adc
je
stos
stos
push
add
add
fs
insb
jnp
bt
cltd
mov
xor
push
add
push
mov
xlat
jmp
stos
repnz
add
jecxz,pt
idivb
dec
fisubrs
lds
xchg
xchg
jg
add
test
inc
xchg
jmp
mov
jmp
pusha
mov
and
fadds
clc
xor
cwtl
pop
ljmp
xchg
jae
jmp
icebp
push
xor
xlat
jg
adc
mov
cmp
mov
sub
loop
sbb
fwait
cmp
mov
ficoms
in
xor
movsl
cld
and
dec
inc
xchg
cmpsl
mov
pusha
and
mov
jno
adc
xchg
jnp
bound
mov
lea
push
mov
in
insb
adc
cltd
sbb
lock
data16
pop
jb
popl
xor
add
push
jmp
fnstsw
shrl
ficompl
fisubrs
mov
cli
scas
lods
pusha
ds
jbe
or
stos
push
aaa
xchg
mov
adc
xchg
jl
out
push
test
pop
jmp
xchg
push
mul
cltd
add
stc
inc
or
jae
mov
fidivrs
out
mov
lea
aam
frstor
mov
insb
pop
add
das
sbb
or
outsl
dec
repz
jmp
or
icebp
rcrl
loopne
lods
mov
adc
ds
mov
jne
das
inc
or
mov
insb
cmp
mov
push
imul
jb
push
cmp
jo
pop
jnp
sub
xlat
in
add
fstl
mov
jle
xchg
cmpsb
jp
and
jo
pusha
sarb
push
mov
xchg
lods
ret
mov
jo
loope
leave
fucomp
mov
adc
jmp
xor
mov
mov
pop
outsb
adc
loope
out
clc
ret
jg
add
rcll
and
pop
sbb
rorl
xor
dec
aad
mov
sub
loope
pop
mov
pop
mov
push
movsl
or
ret
jb
jp
movsl
fsts
shlb
jns
arpl
fimull
lahf
push
addps
aad
int3
push
andb
les
cltd
adc
mov
and
cmpsl
pushf
xchg
sbb
adc
js
imul
lds
pop
sbbb
xchg
cmpsb
aaa
cltd
push
arpl
sbb
or
pop
and
push
mov
clc
cwtl
dec
push
lret
call
mov
decb
sub
call
jnp
gs
pop
mov
es
push
xchg
lds
out
ja
stos
les
rcl
sbb
aas
and
test
add
add
fistps
sbb
add
mov
in
pop
fs
int3
mov
sahf
mov
push
xor
call
mov
ret
repz
jae
push
mov
mov
inc
or
es
outsl
inc
in
or
pop
test
xor
xor
cmp
dec
mov
fisttpll
xchg
push
out
lds
and
sub
fs
mov
lods
and
jl
and
test
jne
jge
or
popf
aaa
fs
xchg
xchg
jae
sbb
bound
jne
jecxz
bound
addr16
push
aas
test
or
jo
leave
cmpsb
fildl
mov
adc
rcrl
pop
push
sub
xchg
fprem1
nop
sti
out
fsubs
cwtl
mov
push
std
mov
lret
int3
mov
test
aaa
mov
xchg
jp
ret
cmp
andb
and
in
outsl
xchg
rol
sbb
inc
stc
stc
sarl
in
mov
mov
mov
mov
stc
je
add
add
pop
std
loop
xlat
aaa
push
jmp
stos
cmp
xor
lahf
test
xor
test
inc
add
xchg
pop
mov
inc
mov
adc
sbb
arpl
ljmp
and
in
mov
sub
xor
mov
jl
stos
rcr
push
daa
fisttps
mov
push
inc
add
add
pop
sub
xchg
rclb
int
std
xchg
mov
cmp
fbstp
fisubrl
xchg
test
fisubrl
ret
insl
lea
pop
inc
and
mov
xor
and
lcall
sub
add
cmp
jns
call
inc
xchg
ja
adc
jg
in
out
xorb
popa
xor
cltd
cli
repz
movsl
daa
xchg
mov
add
lds
aaa
out
pop
cli
push
lcall
repz
mov
cmp
and
push
scas
mov
cmpsb
nop
movsb
xchg
jl
cltd
adc
adc
repnz
into
pop
jae
dec
mov
into
shll
rcrl
mov
xchg
mov
cli
sbb
push
xchg
icebp
aaa
loopne
test
push
push
adc
push
adc
test
pop
mov
scas
push
inc
in
xchg
outsb
rorb
adc
push
arpl
xchg
lret
mov
adc
scas
out
dec
xor
jns
cmpsb
mov
call
div
push
dec
adc
stos
xor
push
jg
lock
rcll
das
decl
mov
and
test
inc
mov
jg
pop
xchg
fsubrl
ljmp
clc
xor
icebp
addr16
insl
cmc
fistpl
in
jmp
dec
cmp
pop
ljmp
fidivl
dec
cmp
push
or
inc
ret
mov
lds
mov
push
ss
outsl
daa
andb
test
in
cmpsl
in
adc
and
pop
imull
inc
dec
jo
dec
pop
in
cmp
repnz
mov
xchg
call
mov
in
cmpsl
sti
out
push
clc
sbbl
in
lcall
sub
push
sub
testl
pop
lcall
mov
cmp
dec
imul
pop
add
fwait
cli
jle
sbb
sub
lock
pop
xchg
repnz
jnp
dec
xor
shrl
notb
insl
js
jle
xchg
adc
sbb
dec
fmuls
pop
xor
push
call
add
loopne
mov
gs
es
mov
movsb
rol
in
mov
cld
mov
fisubs
popa
mov
ja
push
jecxz
cmp
mov
sub
stc
dec
or
dec
mov
dec
dec
fldl
or
in
jbe
push
add
dec
pop
mov
pop
and
stos
mov
dec
xor
in
bound
hlt
fwait
push
addr16
mov
stos
into
sub
mov
sub
push
cmp
sub
dec
mov
xchg
push
inc
cld
push
pop
lahf
jo
cmp
xor
fmull
iret
xchg
mov
sti
test
ret
fwait
add
and
push
mov
inc
sarb
inc
nop
add
movsb
lret
data16
in
insl
lcall
aad
mov
mov
jnp
cmp
xor
pop
add
ficompl
or
xchg
mulb
ret
push
xor
std
cld
or
push
call
fildl
scas
fadds
test
sbb
ror
mov
shlb
and
sbb
cmp
lcall
daa
pushf
mov
mov
push
dec
mov
repz
mov
stos
add
dec
push
mov
push
addb
pop
and
or
scas
jmp
pop
sub
add
mov
xor
pop
xchg
or
clc
aam
test
adc
adc
push
out
sub
mov
loop
xchg
sub
mov
addb
test
jb
and
adc
movsl
add
sub
pop
or
push
cld
cli
les
jge
and
xor
push
pop
or
xchg
cld
test
mov
fmull
or
push
mov
es
dec
sub
and
ror
sbb
fwait
add
lods
popa
cmpsb
xchg
inc
insl
sub
cmpsb
add
cmp
sub
jae
iret
jecxz
ret
lds
xchg
adc
mov
adc
arpl
push
test
mov
clc
adc
inc
lret
call
mov
xor
jbe
sbb
sbb
out
push
stos
jecxz
inc
and
push
mov
es
jle
dec
lret
das
daa
fisubrl
add
add
dec
cltd
push
cli
sbb
pop
fstp
sub
xchg
cmp
xchg
mov
sub
es
or
fcomip
fld
jmp
nop
mov
mov
pop
add
mov
ror
push
cmp
addr16
jg
mov
push
mov
cmpsb
sub
aas
les
xor
out
enter
outsl
ss
aas
and
lea
jecxz
cltd
fimuls
sub
push
fcoms
adc
jbe
test
shrb
cmpl
mov
mov
cwtl
fcmovnb
loop
ss
xor
subb
test
pushf
mov
cwtl
mov
inc
mov
xchg
inc
sbb
push
sbb
lock
aam
push
mov
sbb
out
mov
lock
ret
dec
jle
cmp
and
or
fcom
cmp
dec
mov
test
sub
mov
icebp
push
testb
jbe
xor
adc
mov
lods
loopne
outsb
decb
xor
gs
jae
and
mov
ror
mov
cmp
std
std
imul
out
xchg
sub
sub
aaa
add
mov
stos
push
cmp
inc
sbb
lods
filds
xchg
popf
out
or
xchg
push
jle
sbbb
test
into
cmp
or
gs
sbb
dec
inc
mov
ror
dec
mov
in
pop
pop
dec
insb
stc
mov
int
popa
imul
pop
sahf
xor
lahf
or
cs
test
out
fsubrp
in
fmuls
jp
ljmp
fisubrl
test
div
int
insb
sub
add
stos
gs
mov
sbb
lcall
or
fs
or
mov
fcomps
andl
cwtl
add
jg
clc
scas
push
push
sbb
and
push
xchg
iret
leave
mov
aad
sbb
je
mov
ja
inc
xor
fs
xor
add
pop
add
ret
jecxz
in
cmp
add
push
sbb
mov
push
jo
outsl
repnz
bound
adc
hlt
jmp
mov
test
xor
and
out
out
call
stos
push
clc
push
aam
sti
push
push
data16
push
call
adcb
in
add
rclb
fisubrs
or
jbe
mov
push
fs
in
inc
mov
mov
dec
arpl
rorl
dec
and
inc
lock
sbb
rorl
or
fnstsw
xchg
test
ret
xchg
cmpsl
jbe
and
cmp
outsl
xlat
push
inc
and
mov
std
jns
push
add
outsl
out
movsb
popa
ret
jnp
xor
addr16
inc
test
imul
stc
adc
mov
jge
dec
dec
mov
cmpl
pop
mov
mov
pop
push
push
jne
rcl
fs
mov
sahf
sub
jnp
pop
ljmp
jne
pop
push
cmp
sub
jecxz
shll
and
cmp
dec
stos
push
cs
xor
add
and
adc
fcomps
into
mov
push
lret
insl
adc
out
dec
add
in
jnp
cmp
and
sahf
pop
stc
fs
pop
add
imul
divl
or
ss
xchg
push
dec
xchg
ljmp
adc
sti
fs
sbb
push
push
sbb
enter
push
pcmpgtb
add
cmp
jo
inc
clc
sbb
xor
sub
or
mov
inc
mov
sub
inc
cmp
mov
adc
xor
in
fwait
shrl
jne
add
adc
movsb
ror
mov
orb
or
jo
movsl
mov
push
or
scas
inc
jae
std
and
pop
sahf
fidivs
xor
jecxz
cli
xchg
mov
mov
or
xchg
add
in
jecxz
cmp
mov
sbb
xor
inc
clc
mov
in
xchg
sbb
pop
sub
test
sbb
sub
shrl
psubb
mov
mov
adc
adc
pop
sub
inc
stos
xor
sbb
aas
dec
mov
test
mov
out
idivl
bts
orb
pop
loope
das
sub
repz
or
aas
lods
ret
cmp
add
jae
push
mov
daa
dec
mov
push
xor
cmp
pushf
stos
pop
int3
jle
dec
lret
lcall
push
cmpsb
adc
loopne
cmp
aas
xchg
xchg
imul
xor
nop
or
mov
xchg
jnp
push
hlt
imul
dec
daa
inc
xchg
mov
test
xor
xor
mov
or
xorb
cmpsb
inc
adc
cmp
test
insb
dec
scas
xor
movsb
imul
dec
ffree
jbe
sarb
mov
jg
aad
push
cmc
into
fsts
sbb
fmuls
out
adcl
ret
xorl
int3
test
sbb
xchg
std
or
sarb
in
xlat
jmp
test
adcl
or
call
pop
adc
adcl
push
scas
lock
mov
sbb
adc
jge,pn
xchg
shlb
fidivrs
fwait
test
mov
dec
xor
pushf
fisttpl
sbb
sub
sarl
jnp
mov
pop
daa
fwait
or
sbb
std
popa
subl
jmp
cltd
iret
mov
or
jmp
mov
push
outsb
sub
subb
sub
jbe
mov
iret
push
push
testl
faddl
sahf
aam
add
fistl
adc
add
mov
sub
pop
pop
repz
xor
fnstsw
ja
scas
ret
sub
in
in
leave
jge
pop
outsb
fisubrs
enter
dec
in
jecxz
jg
xlat
sbb
shrb
sub
ficompl
fstps
push
and
cmp
test
ret
test
cmp
or
popa
cmp
sbb
cmp
cmp
mov
jecxz
dec
and
jmp
and
mov
stos
lret
loop
dec
fiaddl
lock
fidivs
js
or
jmp
cmpsl
imul
imull
push
call
mov
imul
paddusw
aad
movsb
push
cmp
es
cmp
pop
lods
adc
mov
dec
or
and
mov
push
pop
push
scas
lahf
xor
cmp
ret
outsl
add
or
filds
aas
pop
outsb
dec
fcompl
iret
out
rolb
fnsave
je
mov
loope
jmp
sub
add
jno
pop
sub
incb
adc
stos
je
out
jns
sub
popa
pop
mov
lret
out
pop
and
je
andl
push
dec
movsb
mov
xor
aaa
dec
in
loop
pushf
push
push
add
mov
data16
or
gs
push
cmp
leave
scas
ljmp
mov
push
test
in
dec
test
sbb
std
cmpsl
push
adc
ljmp
sahf
sbb
push
xchg
pop
movsb
xor
add
mov
fildll
jb
loop
hlt
xchg
das
cmp
cwtl
xor
je
push
xchg
into
pop
ror
mov
jg
add
cmp
addr16
movsl
xor
test
outsb
pop
mov
xchg
dec
aad
lods
sti
mov
dec
lods
pop
xchg
xchg
adc
lcall
nop
pop
push
popa
adc
or
ds
jecxz
pop
adc
scas
mov
mov
push
rcl
jge
push
test
jg
xlat
inc
ds
sub
lret
call
shlb
mov
test
out
mov
push
push
cmp
mov
or
lods
inc
pop
xchg
int
out
aad
mov
testb
je
lds
int
cmp
jne
dec
addl
mov
inc
filds
das
fsubl
in
jge
add
sahf
and
or
push
and
movsl
mov
and
dec
stos
aas
int
xchg
jbe
and
cmp
ficoml
and
dec
lods
loop
or
mov
pop
in
push
fcoms
jge
mov
fiaddl
idivb
arpl
pop
push
fcomps
lea
mov
and
inc
movsl
fstps
mov
dec
data16
push
xchg
fidivrs
inc
dec
inc
mov
add
push
movsl
stc
movsb
adc
insb
out
jge
cltd
out
lret
inc
or
pop
mov
xchg
addr16
nop
dec
test
jp
adc
sub
sub
jb
js
out
sbb
test
sbb
jb
mov
dec
pop
jns
cmp
xor
jns
test
pop
push
sbb
push
lods
rorb
test
leave
leave
sbb
and
inc
cmp
or
jns
loop
or
add
std
cmpsb
pop
lcall
aam
push
aam
fdivl
loopne
in
stos
mov
aas
push
mov
imul
lcall
fwait
mov
mov
bound
scas
jp
popf
sbb
leave
aam
cld
in
add
jp
xor
repnz
out
push
out
ljmp
sbb
push
cmp
xor
stos
inc
mov
pop
mov
aas
cmp
push
ja
lods
xchg
mov
nop
negb
xchg
pop
mov
xor
pushf
sub
sbb
sbb
jns
jge
lods
dec
loopne
cmp
adc
data16
push
or
call
add
repnz
or
cmpsl
inc
cmpsl
aas
mov
stc
push
push
dec
lods
cmp
cmp
and
sub
add
inc
popf
push
inc
orb
stos
push
pop
mov
test
rolb
addr16
xor
push
ja
mov
out
je
idivl
es
sbb
cmp
std
xor
call
cmp
pop
ss
mov
mov
negb
mov
cmp
add
jl
push
mov
mov
cld
push
mov
les
jns
rcr
lret
jg
in
rol
pop
data16
fsubr
frstor
jne
in
or
inc
int
mov
pop
adc
outsb
dec
sbb
pop
sbb
addr16
loope
sbb
inc
out
adc
jecxz
xor
fs
push
or
mov
fwait
adc
jne
pop
cmp
sbb
call
pushf
fnstenv
xchg
xor
cmp
std
pop
jnp
cmp
out
dec
enter
mov
pop
xor
adc
dec
scas
out
pop
cmp
cwtl
lret
bound
loopnew
int
xchg
dec
orb
push
jno
add
push
in
es
test
ficoms
loop
mov
push
fs
xor
sub
inc
mov
pop
sbb
jecxz
sahf
xor
cs
mov
je
dec
mov
or
repnz
lahf
and
insl
jmp
les
ljmp
xor
lcall
pushf
pop
dec
lahf
les
mov
dec
add
mov
mov
pop
lret
mov
aaa
xchg
mov
jp
sbb
dec
daa
cltd
out
push
sub
out
adc
movsb
cmp
jecxz
stos
sbb
cltd
sub
cltd
add
insl
fs
nop
jbe
jle
add
int3
insb
sub
push
inc
sub
aas
ret
int3
adc
xchg
cwtl
xchg
ret
jb
pop
inc
pusha
mov
push
sbb
push
mov
cli
mov
jae
add
lcall
jl
divb
mov
stos
cmp
xor
push
iret
insb
adc
call
mov
dec
stos
and
mov
out
fcompl
add
fistpll
cmp
sahf
movsb
mov
xchg
pusha
rclb
jno
in
ljmp
cltd
std
in
inc
xchg
adc
and
jb
jno
xchg
insl
cwtl
push
pop
cmpl
jb
mov
add
mov
push
ret
sub
in
jg,pt
cmpsl
arpl
mov
fwait
xor
cltd
cmp
mov
cmp
push
mov
stos
mov
mov
lret
repz
xchg
iret
out
mov
test
aaa
xchg
jae
mov
iret
pushf
or
push
jg
cmpsl
data16
mov
addb
xchg
jnp
pop
xor
push
pop
aad
cmp
xor
out
pop
lret
mov
pop
iret
nop
fidivs
adc
pop
int
les
sub
mov
cltd
push
clc
jl
out
push
or
div
adc
jmp
int
adcb
sbb
int3
dec
mov
int3
mov
adcl
lret
and
cld
pusha
clc
call
in
lea
pushf
add
inc
stc
in
lret
mov
test
dec
pop
jo
out
push
mov
adc
test
test
pop
fidivs
push
sahf
movsl
loop
xor
mov
fmull
or
insl
pop
pop
jl
xchg
inc
jne
aam
addr16
out
and
push
lods
add
aad
fsubrs
imul
cwtl
les
imul
mov
testb
sub
ja
lcall
sub
jg
shll
push
popf
add
sbb
mov
repz
rorb
aas
adc
ret
sub
notl
dec
aam
xchg
mov
int3
je
pop
xchg
and
xchg
inc
pushf
leave
lahf
jae
xor
adc
sbb
sbb
lret
jbe
or
dec
sbb
pop
or
and
fadds
scas
push
jge
push
out
mov
bound
out
fsubs
leave
outsb
inc
fcoms
fsubrl
js
insl
push
mov
and
jno
cli
loopne
xchg
dec
xor
ljmp
in
jne
sar
jae
call
dec
fdivs
xor
and
sbb
adc
imul
arpl
and
js
xchg
sub
inc
ret
js
roll
insb
dec
mov
sbb
idiv
fdivl
out
bnd
cli
repz
adc
jae
pusha
jns
jl
fs
out
ss
jb
push
sub
es
push
dec
mov
mov
jnp
sahf
clc
or
pop
cmp
mov
rorb
cmp
mov
aam
ffreep
xchg
outsb
sbb
sbb
dec
test
cmp
cmpl
or
pop
xlat
dec
ret
lahf
inc
pushf
xor
cmp
pop
adc
push
insb
push
sbb
sqrtps
inc
lods
lahf
xor
cmp
js
icebp
pop
inc
in
test
pop
out
movsl
push
xchg
rcll
call
mov
or
mov
sub
inc
xchg
popa
dec
fisttpl
mov
add
pushl
orl
inc
lret
or
imul
shlb
jns
outsb
and
outsb
pop
outsb
jp
stc
cld
jge
sti
insl
in
sub
xorl
outsb
xchg
movsl
repnz
sbb
popa
ds
fwait
mov
push
movsb
aam
test
and
pusha
push
sub
jle
ror
push
mov
mov
ja
arpl
mov
push
mov
je
daa
fwait
adc
lahf
fisubrl
and
clc
or
es
adc
mov
lods
xchg
and
jbe
negb
adcb
idivb
test
jecxz
add
repnz
lret
push
jno
jle
xchg
add
mov
in
dec
cmp
pop
xchg
stos
push
adc
mov
movsl
mov
ss
inc
adc
in
ds
cmpsb
clc
rcll
sbb
add
icebp
xor
pop
adc
cmpb
aas
mov
fsubl
in
cmp
push
and
cmp
cmpsl
push
or
push
mov
mov
mov
das
sbb
jl
ljmp
mov
mov
sub
loope
insl
inc
cmp
aam
add
and
cmpsl
xchg
movl
dec
xorl
mov
stc
ja
test
js
bnd
dec
aam
adc
sti
fistpll
push
into
repz
cmp
jp
fisubrs
dec
jle
in
dec
mov
mov
lret
fistl
cwtl
sub
aaa
rcrl
sbbl
mov
mov
loope
movsl
ds
jle
adc
mov
push
mov
stos
repz
or
sti
les
lret
int3
lret
sahf
lods
test
add
clc
lds
push
xchg
mull
mov
xor
ljmp
pop
cli
sbb
loop
jecxz
clc
into
mov
lea
pop
pop
adc
jne
jge
xor
jne
inc
adc
xchg
push
stos
sbb
fwait
mov
js
add
lret
mov
or
insl
fildll
ds
pop
out
enter
stc
sub
stc
ds
fwait
pavgb
add
std
in
cmp
cmp
or
mov
adc
aaa
shlb
push
xor
jmp
jmp
pop
inc
add
icebp
sbb
cmpsl
addb
sub
jmp
or
dec
mov
push
mov
nop
pop
sub
sti
inc
lret
pop
pop
push
or
mov
and
add
mov
dec
mov
out
sub
add
aad
pop
mov
xor
ljmp
inc
jae
jmp
in
stos
mov
and
sbb
jmp
insl
outsb
and
int3
push
or
add
cmp
jne
jbe
lret
hlt
pusha
jo
addr16
int3
xchg
cmp
sbb
pusha
sub
xchg
mov
add
cmp
adc
ja
loope
push
mov
cmpsb
shlb
xor
stc
cvtdq2ps
data16
cmp
aam
aaa
sub
jl
frstor
pop
cmpsl
inc
and
sub
push
pop
es
or
inc
cli
lret
jge
adc
and
adc
outsl
sub
fidivl
cmpsb
imul
adc
push
arpl
in
pop
ss
cltd
sbb
add
add
int3
insl
leave
pop
and
mov
dec
pop
pop
and
jae
out
xchg
and
and
mov
sbb
mov
andl
jecxz
sub
pop
xchg
rcr
or
push
mov
xlat
mov
fwait
or
fcmove
inc
jns
xchg
int
sub
and
ret
xlat
xchg
sbb
lcall
add
hlt
mov
adcl
pop
jb
std
jne
sub
insl
mov
dec
adc
insb
dec
pushf
popa
adc
loopne
cmp
cmp
imul
rclb
ja
in
hlt
adc
nop
cmp
insl
jbe
iret
sub
cmpsl
mov
dec
jp
bound
sarl
xchg
popa
mov
gs
aad
nop
rcrl
dec
mov
cmp
mov
mov
test
sbb
fisubrl
loopne
mov
and
mov
jecxz
mov
ljmp
inc
arpl
cmc
pop
push
fwait
adc
js
push
adcl
push
dec
sbb
cmpsl
aaa
lds
neg
adc
mov
out
std
std
dec
lcall
int3
mov
cmc
outsl
xor
xchg
xor
movsl
popf
scas
xchg
inc
adc
fcmovne
mov
test
les
lock
mov
mov
lods
dec
out
lods
sub
pop
xor
repz
xor
inc
cmpsl
xor
mov
lods
loop
lahf
ret
popf
lock
fldl
ljmp
or
test
sbb
imul
in
int
imul
ja
dec
mov
js
insb
push
std
lods
fisubl
adc
jmp
test
jo
mov
ljmp
ljmp
sbb
xchg
or
sub
mov
or
pop
loopne
push
xchg
imul
fwait
or
adc
and
sbb
cs
movsl
or
je
add
inc
test
fsub
and
dec
xchg
mulb
pop
imul
xor
ret
push
xchg
jecxz
push
ljmp
out
sbb
int3
jb
inc
test
scas
pop
icebp
inc
rcrl
adc
ds
pop
jp
test
outsb
fnstsw
leave
xchg
push
jae
stos
add
in
mov
mov
mov
cmc
push
add
dec
or
sub
ljmp
mov
repnz
mov
int3
pop
into
xor
add
inc
stc
in
addr16
enter
std
sbb
mov
jp
lods
adc
cmc
and
mov
in
rorl
mov
sub
add
pop
pop
fiaddl
fwait
push
jns
dec
jb
mov
xlat
mov
icebp
push
mov
jnp
xor
sahf
dec
jae
data16
ss
stos
std
and
popa
sbb
sbb
mov
mov
rcl
xor
fidivrl
scas
push
pop
push
inc
jl
ds
fwait
and
dec
bound
scas
enter
mov
and
andl
loop
ficoms
scas
add
inc
jnp
adc
popa
mov
inc
rcll
fs
in
jnp
add
or
ds
adc
cmp
mov
sahf
in
addr16
dec
cmpsb
pusha
sarb
xchg
inc
xor
gs
ficoms
mull
mov
fstpl
loope
sti
call
lcall
jg
lcall
and
into
cmc
lock
adc
push
mov
cwtl
pop
jl
mov
push
or
mov
add
mov
sahf
incl
push
xchg
mov
xor
int3
or
in
iret
mov
fs
outsb
test
repnz
daa
push
adcb
fildll
pslld
fisubrs
and
sbb
sub
rcl
iret
cli
outsl
mov
jb
push
mov
xchg
mov
icebp
lock
jp
push
lods
xlat
test
add
xor
icebp
xchg
mov
call
loopne
pop
insl
adc
or
rorb
andb
pop
adc
sub
xor
shrl
popf
mov
popa
xchg
mov
mov
and
mov
jp
sets
fidivl
lret
jo
leave
jge
push
loope,pt
inc
out
push
in
xchg
push
and
int
pop
mov
xchg
pop
lods
js
jle
stos
push
jle
test
xor
dec
cmp
inc
fnstcw
cmp
sbb
enter
push
xorb
mov
mov
dec
aaa
pushl
cmp
icebp
sbb
test
adc
inc
rcrb
and
fwait
inc
popa
add
test
and
jp
adc
dec
daa
imul
inc
out
mov
arpl
mov
pop
pop
dec
imulb
stos
xchg
sbb
mov
ret
in
cmc
adc
imul
or
push
sbb
and
ljmp
lock
aas
lahf
add
cmp
fisubs
sbb
dec
out
add
mov
xchg
ret
xchg
into
ljmp
cmpsb
es
das
xchg
rcrb
js
rorl
inc
dec
rcrl
mov
or
mov
cwtl
arpl
scas
cltd
insl
ljmp
pop
dec
sbb
call
cmp
jno
mov
shrb
pop
notl
xor
ss
push
mov
or
cwtl
inc
pop
loop
aas
cmp
cld
and
fwait
push
ds
xchg
or
ret
stos
cmp
or
mov
mov
rcll
jno
push
scas
xchg
push
mov
sbb
pop
in
aad
iret
jmp
push
xchg
sarl
push
sbb
out
lret
movsl
insl
ret
pop
mov
add
dec
pushf
pusha
loop
mov
test
xor
int
push
sbb
xchg
sbb
out
dec
lods
sub
push
adc
mov
hlt
out
xchg
gs
mov
test
popfw
adc
cmp
xor
lods
pop
cmp
cmp
andl
mov
testb
jns
loope
loope
nop
fwait
add
lcall
cmp
lock
pop
mov
sti
popa
fldenv
dec
dec
mov
xchg
aaa
add
movsl
pop
jo
testl
add
push
dec
mov
or
sahf
pop
fbstp
fists
push
mov
xchg
dec
push
ds
js
mov
add
insb
in
fwait
jmp
in
ffreep
enter
pop
mov
and
push
dec
jle
jnp
imul
dec
ljmp
imul
clc
fbld
in
repz
jae
sub
popf
fildll
loop
into
push
jle
lods
out
mov
xorl
lea
test
sub
out
jmp
sub
incl
in
in
fsubrs
dec
xor
cwtl
gs
mov
xchg
cmpsl
adc
addb
mov
or
arpl
jmp
decl
dec
sub
mov
mov
out
xchg
mov
sbb
mov
loop
and
js
mov
inc
mov
cmpsb
dec
jle
push
test
scas
inc
add
push
inc
loopne
cmpsl
jg
out
out
cwtl
xchg
xchg
lea
mov
dec
xchg
movsl
inc
mov
fwait
push
pop
sbb
sbb
xchg
push
loop
sbb
dec
fidivs
sub
inc
icebp
mov
push
xchg
sub
in
loope
pop
or
xor
icebp
sbb
pop
popa
popf
lock
xchg
lret
jb
fisttpll
sub
pop
testl
push
sub
mov
jmp
and
rorl
fdivrl
mov
pushf
xchg
mov
subl
sub
and
loop
rol
pop
daa
into
lahf
push
mov
mov
mov
xchg
inc
mov
and
mov
lea
dec
jnp
fidivrl
add
mov
test
int3
icebp
ja
out
adc
cmp
mov
data16
xchg
cmc
js
loop
cmp
clc
mov
xor
stos
loope
pushf
pop
and
arpl
insl
jbe
mov
push
cld
or
rcll
push
sub
sub
call
faddl
adc
push
push
js
push
push
jle
mov
or
cmpsl
mov
cs
movsb
imul
jo
add
pop
push
adc
push
data16
inc
mov
ror
nop
in
mov
jp
lret
shlb
inc
push
and
xchg
or
inc
add
and
pop
xchg
push
ret
iret
xchg
mov
fisttpll
int3
and
jnp
arpl
jns
bndstx
test
xchg
mov
sub
xlat
ret
push
int3
fimull
mov
jae
xchg
dec
jp
and
je
sbb
mov
dec
arpl
jmp
int
into
sub
dec
lret
out
jmp
lahf
jp
or
dec
adc
stc
leave
push
repz
out
pop
inc
aas
ja
jp
pop
sub
mov
push
adc
add
mov
sbb
bound
inc
bound
mov
xchg
movsl
sub
jge
add
mov
adc
out
fisttpll
daa
add
pop
out
xchg
scas
jle
outsw
rcl
jecxz
adc
mov
inc
inc
lret
les
aam
inc
xchg
push
xchg
inc
inc
mov
call
cwtl
and
jg
lret
mov
sbb
incb
mov
in
loope
enter
mov
pop
mov
rcrb
aas
fldcw
sahf
adc
nop
jle
dec
dec
adc
xor
mov
fs
lret
pop
dec
push
sbb
mov
subl
xchg
add
push
aad
pop
lea
scas
or
or
test
cmpl
adc
data16
aaa
sarb
push
aad
xor
mov
jmp
loope
cmp
push
mov
sbb
jecxz
jnp
xor
shlb
shll
aaa
repnz
test
xor
test
inc
call
aam
mov
push
jp
dec
or
stos
imul
adc
subl
test
enter
inc
cltd
scas
push
out
mov
rorl
shrl
push
insl
and
into
sub
out
push
sbb
loope
nop
pop
outsl
out
popf
xor
jb
xchg
add
ss
or
setae
sbb
cld
mov
lods
mov
inc
pop
lcall
push
out
cmp
adc
mov
xor
or
mov
shrb
jns
mov
je
mov
fwait
nop
mov
adc
addb
mov
insb
movl
stos
sbb
popf
adc
push
lret
loopne
test
mov
sub
xchg
pop
pop
fwait
xchg
leave
fwait
lahf
inc
das
loopne
inc
jb
jo
flds
or
pop
jmp
je
ret
sub
mov
idivl
xor
ds
jmp
push
shll
jbe
cmpb
cld
lret
add
out
dec
loope
dec
pop
pop
idivb
sub
pop
or
pop
clc
movsb
out
adc
test
adc
or
sbb
dec
je
cld
iret
lods
clc
mov
mov
shrb
mov
mov
mov
shrb
scas
adcb
cmpsb
mov
fsubrs
loopne
dec
mov
loopne
dec
stos
test
aam
xchg
mov
aas
test
lds
nop
mov
sub
test
adc
and
clc
hlt
jne
cmpsb
fs
dec
inc
out
xchg
subl
mov
fs
aas
std
shrb
jmp
push
outsl
add
stos
jne
ret
sub
jb
stc
loopne
cmpsl
dec
push
jns
andl
movsl
and
adc
pop
mov
lods
out
inc
sub
xor
popf
icebp
pop
inc
lret
fwait
jbe
popa
dec
sbb
es
rorl
cmp
xor
lret
fsubrs
or
out
mov
or
add
mov
clc
pop
fwait
mov
push
les
and
pop
divb
and
cmpsl
mov
ds
mov
clc
sub
inc
jnp
out
xchg
clc
push
and
mov
sbb
test
iret
cli
dec
add
popa
mov
mov
negl
sub
test
shll
lcall
mov
jmp
xchg
outsl
xor
in
out
scas
push
roll
popf
sarb
mov
add
add
daa
cmp
sahf
lock
popf
adc
or
mov
repnz
adcl
and
or
jno
and
inc
testb
pop
and
and
in
push
xor
mov
xchg
test
sbb
shlb
jae
xor
xor
test
or
push
mov
sub
scas
sub
aaa
sbb
mov
lret
sbb
out
fistps
jecxz
xchg
aas
inc
cmp
xorl
jne
mov
adc
push
lods
add
add
pop
ds
fistl
jg
xchg
pop
mov
emms
adcl
push
in
std
cmpsb
sub
es
mov
rolb
addb
sbb
outsl
adc
mov
mov
repz
addb
cmp
xchg
nop
lret
add
mov
push
sahf
repz
sbb
stos
fsts
mov
daa
cmp
add
in
add
mov
jb
mov
sub
sahf
test
sbb
lahf
adc
xchg
clc
lcall
sub
adc
clc
aad
or
push
push
daa
mov
sub
dec
mov
or
aad
adc
call
or
xchg
jae
ds
fwait
xchg
mov
rorl
jle
lods
sbb
push
pop
xorl
cmpsl
sahf
dec
mov
inc
pop
dec
sbb
sub
pop
xor
cmpsl
movsb
mov
xchg
inc
mov
repz
add
cmp
cld
mov
std
mov
dec
outsl
in
xor
inc
std
out
sub
push
and
inc
cli
mov
jbe
or
sbb
repnz
ljmp
jns
or
stc
mov
push
in
lds
xor
or
insb
jle
and
mov
push
mov
inc
ror
mov
adc
pushf
and
vprotb
js
mov
adc
sbb
insb
adc
aaa
aaa
or
mov
lods
hlt
push
sbb
xor
xor
int
pop
xchg
int
sub
xor
std
push
cmp
repz
lcall
icebp
iret
call
decl
mov
subl
sub
movsl
or
imull
insb
in
jno
xchg
and
loopne
scas
ss
add
out
dec
inc
mov
je
add
scas
insb
mov
push
add
mov
dec
mov
jecxz
test
in
jne
scas
mov
loope
jle
aas
icebp
addr16
inc
adc
xchg
mov
jp
dec
enter
inc
test
je
mov
push
and
add
insl
dec
mov
xlat
sbb
fdivs
sahf
ss
jg
adc
push
imul
and
xchg
data16
sub
xchg
ja
std
fsts
sbb
mov
sub
xor
push
cmpsb
push
clc
jae
lahf
push
or
dec
mov
or
loop
xchg
and
xchg
xchg
pop
mov
adc
stos
or
or
rcrl
xorl
xchg
lahf
add
pop
push
inc
mov
pop
push
jle
sub
and
mov
lods
jecxz
push
dec
cltd
in
fldl
jg
lret
ss
and
ret
xchg
loop
stos
arpl
loopne
mov
out
mov
jbe
mov
push
pop
xor
or
sti
ficoms
inc
in
lods
cmp
jg
and
fistps
and
mov
iret
adc
ja
mov
add
push
lahf
sahf
jp
and
aas
decb
outsb
negl
push
fs
aam
adc
cmpsb
out
sbb
mov
hlt
push
aad
dec
dec
dec
dec
lret
and
xchg
xchg
inc
test
inc
adc
ret
sub
xorb
jb
cmp
and
lds
movsl
jmp
mov
idiv
pop
mov
push
jno
fnstenv
fucompp
lock
xor
add
push
dec
ret
pop
or
push
stos
push
cmpsb
xor
aaa
pop
rolb
cmp
inc
jl
push
sub
mov
cltd
or
xor
sbb
in
test
mov
inc
out
fildll
push
dec
dec
lahf
add
mov
bound
and
movaps
imul
jo
hlt
fidivrl
xor
push
mov
fbstp
sbb
jl
sbb
int
mov
jbe
add
mov
addr16
in
in
data16
cmc
dec
ret
out
mov
push
xchg
jle
or
push
push
or
adc
push
insb
add
aaa
out
xchg
leave
or
out
jno
pop
shlb
pop
add
jmp
inc
mov
call
push
ret
sbb
fsubrp
sbb
mov
scas
aad
jo
bndstx
fidivs
nop
jnp
jle
sub
stos
icebp
stc
xlat
inc
pop
ficoml
leave
movsl
test
dec
or
cwtl
into
out
add
daa
int3
daa
jg
xor
add
and
pop
mov
push
movb
aaa
xor
adc
mov
repz
xchg
cli
sbb
into
stos
add
mov
dec
loope
jo
push
stc
aas
mov
pop
xchg
add
loop
or
insb
in
fsts
pop
repz
rcll
add
adc
lret
stos
push
xchg
daa
aas
xchg
mov
jp
cs
fprem
shlb
in
sbb
daa
mov
jb
aam
jb
mov
bound
dec
ficompl
stos
mov
dec
push
inc
sub
iret
vunpcklps
xchg
pushf
sbb
or
xlat
xchg
andl
and
loope
mov
sub
outsl
or
and
shlb
xlat
rcl
dec
nop
mov
mov
into
mov
push
pop
mov
xchg
cmp
xor
xchg
inc
aad
je
imul
popa
lods
jae
gs
gs
jns
out
or
pop
and
pop
mov
fwait
clc
jae
xorl
jo
push
cmpsb
adc
lods
mov
xor
loop
lea
idivb
adc
mov
cs
out
sti
inc
sub
jnp
hlt
inc
nop
insb
sbb
lahf
xor
ljmp
push
popf
aas
mov
mov
cmc
cmp
pop
lret
icebp
push
scas
xorb
jno
dec
adc
iret
jecxz
das
int
mov
fistpll
jo
mov
sub
mov
sub
adc
sti
fmuls
or
cmp
bswap
fcmovnu
je
xor
push
ds
push
xor
test
cs
hlt
lods
es
test
in
mov
das
inc
fbstp
xor
imul
fisubrs
or
cld
ret
fs
insb
movsl
add
jne
stos
cmpsb
cmpsl
inc
std
mov
mov
jae
into
notb
cmp
stc
cmpsl
ljmp
fldt
sub
aaa
or
push
lahf
shll
cli
add
xchg
std
mov
sbb
dec
mov
lahf
outsb
lds
mov
leave
jle
dec
cwtl
dec
cmp
lahf
sub
add
and
call
int3
sub
adc
cmc
mov
xlat
push
dec
icebp
dec
arpl
insl
fcmovbe
xchg
push
cld
sti
lretw
xchg
fadd
fisttpl
push
insl
jecxz
or
xor
call
call
shlb
fwait
out
push
push
cmpsl
std
hlt
fsubs
stos
outsb
sbb
cmpsl
jl
cbtw
xchg
addr16
push
shll
pop
inc
dec
and
inc
xchg
repz
push
cs
add
sbb
adc
arpl
xchg
jns
fstps
add
pop
push
sub
xchg
adc
sbb
inc
cmpsl
pop
dec
sbb
pop
stos
mov
faddl
mov
xor
pop
push
ret
adcl
or
inc
pslld
out
lcall
xchg
test
lock
sub
insb
lret
lea
adc
jnp
push
scas
xchg
push
aad
shrb
cmp
rcl
shrl
test
mov
cmpsb
push
mov
sub
adc
insb
jl
repnz
sub
add
ljmp
pushf
xlat
add
dec
fsub
or
in
pop
cmp
sub
ret
cmpl
repnz
in
xor
xchg
mov
jo
add
pop
xchg
dec
addr16
in
test
lcall
ljmp
andb
scas
jno
cmp
mov
push
scas
ja
inc
or
pop
imul
mov
cmc
std
std
sbb
and
or
inc
jge
cmp
cmp
ffree
popa
int
jp
pushf
dec
imul
pop
in
cltd
push
aaa
mov
sbb
daa
push
cmp
mov
test
push
pusha
in
out
bnd
and
shll
lock
sar
les
iret
imull
cmp
repz
mov
xchg
leave
add
cmp
pop
movsl
jae
dec
pop
cmp
es
add
sbb
sub
fnstcw
jae
mov
shlb
popa
hlt
add
jb
ficoml
loope
fwait
sub
jbe
movsb
jno
xchg
sub
cmpsb
test
shlb
sub
test
mov
sti
add
mov
movsb
movsb
xor
inc
cmpb
add
insl
mov
scas
je
jbe
adc
push
dec
mov
push
fisttps
sbb
cmp
repz
or
loopne
cltd
push
ret
mov
xor
and
fldcw
dec
and
sbb
fdiv
imul
lods
cmp
cmp
cmp
pop
adc
jmp
push
and
jo
sub
push
loopew
in
lret
mov
push
out
sahf
xlat
stos
out
and
pop
fs
xchg
movsl
insl
mov
outsl
mov
divb
lock
fdivrl
push
fwait
jo
push
arpl
in
mov
xlat
mulb
cli
inc
into
iret
lahf
mov
adc
jmp
cmp
lock
rorl
shll
xchg
sub
movsb
jge
mov
xchg
icebp
pop
out
subb
adcb
or
aaa
xor
mov
fisubrl
fwait
push
xor
and
cmc
cmp
ret
roll
leave
sub
sahf
cld
loop
dec
je
inc
lcall
inc
es
xor
push
sub
hlt
mov
push
mov
push
lea
sbb
leave
xchg
imul
push
or
divb
add
sbb
imul
jae,pt
sub
repnz
xchg
in
pushf
sub
sub
xchg
pushf
cmpsb
inc
shl
sub
stc
je
clc
cmp
pop
dec
es
je
inc
mov
test
and
xchg
and
sbb
movsl
stc
ljmp
xor
test
les
xor
cmp
push
inc
dec
xchg
jbe
imul
fs
mov
mov
add
push
dec
sbb
scas
sahf
pop
push
loopne
divl
mov
dec
mov
push
js
dec
pop
sub
ret
test
jl
rol
sub
fisubl
popf
or
negb
jb
or
fpatan
lock
xchg
jmp
lcall
insl
bound
mov
mulb
popf
popa
cmc
fsubrs
mov
cmp
ljmp
lret
cs
shll
push
into
jo
dec
add
ss
stos
cmpb
popa
push
lahf
test
mov
aam
add
out
sub
enter
ret
mov
les
jae
adc
lahf
inc
mulb
lea
ret
aaa
outsl
or
insb
sbb
enter
sbb
push
pop
sub
and
adc
repnz
inc
enter
lea
jmp
add
data16
and
cmp
push
aaa
add
sub
out
dec
sub
aaa
xor
inc
bound
mov
addr16
mov
cmp
cmpsb
addr16
xchg
xchg
clc
xchg
xchg
mov
pushf
pop
test
in
xor
cmp
mov
pcmpeqb
in
or
dec
int3
sbb
mov
cmp
cmpsb
insb
jns
cltd
int
aas
sub
jo
les
sarb
adc
ss
push
push
clc
jp
loop
adc
or
hlt
int
pop
sbb
ret
outsb
jp
out
xor
cmp
and
lret
popf
mov
cmp
dec
pushf
leave
cld
pusha
pusha
mov
in
push
rclb
data16
stos
sbb
xchg
pop
xlat
int
test
lret
sub
or
dec
fcomip
stos
push
xor
in
stos
leave
flds
pop
lock
mov
pop
inc
sub
lahf
and
push
add
xchg
xor
repnz
or
jmp
xchg
dec
and
pushf
mov
jnp
rorl
cmp
ret
jmp
mov
stc
mov
call
and
pusha
dec
pop
or
mov
mov
xor
or
add
imul
mov
and
pop
mov
push
rcrl
pop
notb
js
stos
xchg
mov
jo
sub
iret
ret
mov
lahf
jb
sbb
adc
es
sub
cmpsl
add
or
das
sbb
xor
test
inc
imul
das
xchg
push
int
push
dec
xchg
adc
lcall
lcall
gs
dec
or
sbb
add
pusha
lahf
mov
dec
adc
test
test
adc
jg
fmuls
pushl
cmp
push
adc
sti
push
xor
loop
rorb
out
sub
and
lahf
lods
or
call
andl
jecxz
sahf
sub
sbb
add
aad
xchg
inc
imul
std
add
movsl
repnz
cmp
or
iret
lahf
dec
push
and
or
outsb
pop
dec
scas
shlb
xor
lcall
dec
mov
cmp
xchg
push
and
push
inc
sti
mov
sbb
pop
mov
mov
mov
add
pop
sub
xorl
add
pop
lahf
sub
into
out
inc
lret
dec
fwait
inc
lret
mov
pop
mull
sarl
lcall
icebp
xchg
test
stos
mov
pop
scas
cmp
outsb
test
mov
data16
adc
dec
aas
mov
rcr
xorl
add
shr
fcomps
cmp
sub
jecxz
insl
push
xor
jle
test
sub
cmp
mov
popf
mov
or
or
dec
repz
mov
nop
test
and
les
sbb
inc
sub
cld
repnz
lds
aaa
enter
rorb
inc
adc
sub
jns
jmp
leave
xchg
hlt
std
and
inc
mov
inc
arpl
mov
mov
loop
inc
stos
call
sub
rolb
jp
movsb
notb
fisttps
pop
out
lahf
inc
fs
push
in
sahf
and
test
inc
mov
ds
sbb
inc
out
aaa
sub
jle
cwtl
jbe
and
push
leave
xorl
stos
pop
or
cld
adc
int3
incl
sub
rcr
jns
push
ds
and
popf
xchg
inc
inc
push
pop
popf
mul
jecxz
cmpsb
push
sbbb
cmp
in
jne
es
push
out
inc
shl
mov
ljmp
sbb
loop
jae
adc
fnstenv
mov
or
mov
fwait
pop
mov
pop
daa
decl
adc
add
mov
xchg
push
inc
cmpsl
mov
sub
cmp
mov
sbb
sbb
xlat
stc
int3
rorl
jb
inc
rclb
icebp
ds
push
jbe
fs
add
js
pop
inc
jae
cmpsl
xchg
popf
fiaddl
jl
stc
aas
cmp
orb
les
lahf
xchg
push
jp
dec
fwait
add
stos
pop
cmp
cltd
push
adc
jp
jns
and
adc
mov
mov
mov
fists
xchg
sbb
cmc
mov
cmp
test
jae
sub
and
or
fnstsw
test
add
pushf
jl
shlb
es
ss
movsl
inc
jl
xchg
rcrb
sub
mov
sarl
mov
adc
lds
pop
gs
clc
mov
add
lcall
bound
ja
push
sub
lcall
and
xor
std
fmull
cmp
icebp
cmpsl
test
mov
pushf
mov
bound
and
fistl
push
sub
outsl
adcb
fwait
lock
dec
loopne
inc
fdivs
lret
sub
test
dec
prefetcht2
cmp
popf
inc
outsl
in
lahf
movsb
mov
cmp
mov
mov
mov
cmp
mov
stos
mov
mov
pop
out
add
std
dec
fwait
sub
bound
jbe
jbe
jae
xchg
add
and
les
mov
push
mov
mov
movsl
les
fldenv
and
fidivl
aad
shlb
mov
fdivrl
sbb
add
js
test
xor
cmp
loopne
ss
ljmp
repnz
mov
push
add
stc
scas
test
test
hlt
or
dec
cld
lea
scas
add
xor
jbe
jb
hlt
insb
and
jns
test
sub
xchg
lods
pushf
or
mull
inc
xchg
mov
lahf
data16
je
mov
sbb
insb
loope
xor
add
lret
shrb
ja
mov
fcom
lret
push
mov
rclb
rep
outsb
push
mov
stos
xor
imul
fs
pop
mov
or
imul
xor
test
cltd
or
imul
je
xchg
aam
inc
ret
daa
enter
dec
lods
stos
pop
jge
insl
lods
dec
xor
jle
stos
jbe
clc
lahf
cmpsb
dec
jge
fwait
mov
adc
adc
test
pop
test
dec
outsl
dec
dec
inc
subl
loope
pop
aad
push
sbb
jp
inc
fsubrs
pop
mov
push
imul
mov
cwtl
incb
aad
nop
jecxz
add
add
scas
inc
and
inc
xchg
mov
cmp
mov
and
pop
or
movsb
mov
ljmp
and
xchg
out
addr16
xchg
add
js
nop
outsb
sub
scas
dec
add
mov
sbb
jne
mov
insb
lea
lock
clc
rdmsr
and
and
inc
inc
movsl
scas
push
pop
lods
jmp
notl
jae
cmp
imul
out
and
stos
and
xor
aas
and
cmpsb
and
cmpsb
fcomps
mov
sti
push
cwtl
lods
add
pushf
inc
das
rclb
mov
mov
fdivs
mov
cmp
arpl
push
push
popf
fldcw
mov
add
mov
into
ficompl
xchg
jge
cmp
sub
aaa
dec
or
outsl
mov
or
and
and
adc
leave
andl
lock
and
std
xchg
ret
in
sarl
adc
in
cmp
pop
fildl
add
lds
adc
push
outsl
cmp
ds
add
enter
pop
imul
mov
bound
adc
rcll
sub
sub
sahf
jns
adc
aam
sbb
sub
xchg
xchg
or
ja
xor
test
jp
frstor
lock
cmp
jge
pusha
ds
fidivl
jae
aas
cwtl
test
dec
imul
hlt
das
adc
or
dec
sub
push
pop
mov
loope
xor
jp
outsb
gs
cli
xchg
lods
lods
xchg
in
push
dec
pop
mov
push
mov
gs
mov
ljmp
lcall
xchg
insb
mov
sbb
inc
adc
push
aam
jns
add
and
dec
pop
pop
mov
fimuls
fwait
or
loopne
aas
inc
xchg
push
lret
lods
inc
testb
lret
je
and
iret
arpl
int
icebp
pop
xor
add
movsb
test
icebp
test
jns
insl
jae
cmp
lock
sbb
xor
imul
mov
jmp
mov
clc
sub
cmpl
insl
cmc
inc
fdivrs
pop
nop
lcall
adc
mov
push
xchg
rcrl
pop
pop
pop
push
or
cvtps2pd
in
xchg
sub
jmp
aaa
and
es
mov
out
mov
cwtl
inc
jns
xor
inc
mov
pushl
sbb
and
jno
sub
test
loopne
insl
cld
xchg
stc
popf
inc
and
lahf
xor
mov
mov
insb
scas
sbb
jae
aaa
aaa
test
cmc
pop
leave
xchg
xor
mov
adc
sbb
cmpsl
jecxz
add
xchg
add
fs
xchg
popa
cmc
xchg
adc
ret
inc
push
inc
cmp
or
test
sub
fmull
mov
loop
adc
cld
scas
lcall
int
out
leave
lds
roll
in
mov
scas
cld
into
xchg
je
sbb
cwtl
imul
mov
mov
js
and
aam
inc
pop
inc
loope
inc
mov
test
test
faddl
std
sub
cmp
fnstcw
cmp
cld
xor
enter
cld
jae
dec
mov
sahf
pop
adc
leave
sub
push
repnz
inc
ficomps
lds
xor
pop
leave
lods
ficomps
ror
pop
push
hlt
xchg
sub
icebp
dec
fwait
xor
adc
insb
push
idivb
adc
mov
add
addr16
xchg
jg
out
notl
pop
pusha
dec
inc
shlb
mov
lret
push
lods
faddp
imul
push
xchg
sub
cli
pop
xor
pushf
insl
leave
ucomiss
xchg
pop
lret
mov
ret
cli
les
insl
xchg
add
jecxz
addr16
or
cli
nop
popf
sarb
xchg
jp
orb
pusha
sahf
xchg
or
cmp
sub
stos
dec
xchg
mov
sbb
andb
add
cmp
jne
inc
ficompl
scas
push
rep
ds
inc
jg
mov
push
in
mov
rcll
in
fadd
or
xchg
push
mov
xor
and
testb
xor
es
xchg
loopne
mov
and
fcmovbe
dec
sub
xor
stc
or
mov
mov
loope
jb
mov
mov
movsb
inc
mov
rclb
push
add
mov
dec
bound
stos
inc
pop
sub
out
inc
test
jno
test
jns
jo
sahf
xchg
addr16
sbb
xor
xchg
jne
pop
fiadds
adc
xchg
xor
mov
aad
test
sbb
in
lock
cmp
fimull
fists
inc
loop
xlat
imul
pop
movb
mov
leave
pop
adc
push
mov
adc
push
mov
cmp
xchg
xchg
mov
std
inc
xchg
adcb
arpl
pop
xor
adc
pop
xchg
les
frstor
jmp
lcall
push
ds
jbe
and
ficompl
ljmp
and
push
loopne
add
lret
add
repnz
pop
dec
dec
mov
push
sbb
cmpsb
daa
xchg
repz
mov
jbe
cwtl
mov
xchg
fistpl
lret
xor
mov
scas
call
cltd
fnstenv
fiaddl
ja
sahf
loopne
in
mov
dec
mov
mov
xchg
adc
loope
mov
in
hlt
sub
aas
xchg
xchg
fucomip
dec
movsl
mov
inc
imul
and
xchg
jmp
inc
pop
or
and
cmp
inc
or
mov
add
pop
nop
sahf
jge
cmp
mov
and
pop
inc
testb
mov
repz
int
mov
mov
adc
and
insl
ret
ds
pusha
in
push
jbe
clc
inc
add
push
aam
push
push
sbbb
jmp
insb
stos
mov
inc
mov
lock
add
jne
les
sti
push
data16
and
leave
cli
bound
and
xlat
dec
xchg
xor
xor
jle
push
fdivrl
fs
mov
and
sub
bound
push
xlat
pop
xchg
dec
pop
push
fists
jbe
sbb
mov
into
fxch
pop
mov
adc
dec
in
lods
push
rclb
push
mov
inc
push
jo
inc
mov
dec
out
and
sub
xor
xchg
icebp
les
push
les
sub
pop
cmpsl
dec
pop
imul
push
mov
or
out
push
jmp
pop
add
repnz
mov
nop
mov
ret
lea
mov
dec
lds
int
loopne
loope
int3
adc
mov
xor
daa
loope
je
xor
out
into
loopne
add
rcrl
or
cmp
or
add
cltd
and
sbb
mov
in
outsb
pop
xchg
cld
aad
popa
adc
inc
mov
mov
fistl
movsb
xchg
pop
dec
push
pop
nop
lock
hlt
sti
push
pop
mov
or
fwait
out
loop
test
nop
and
inc
inc
stos
out
cmc
mov
xor
jg
call
fisubs
add
sti
jb
pop
or
sub
repnz
test
pusha
adc
mov
or
cmc
hlt
shrl
inc
cmc
int
push
push
jg
mov
jge
ja
clc
subb
fdivp
dec
popf
pushf
adc
xchg
cmp
in
push
lds
or
push
xchg
mov
sahf
popa
and
push
jne
loop
mov
dec
shrl
cmp
mov
cmp
push
mov
pop
xor
int3
loope
dec
or
push
out
xlat
repz
les
add
fnstenv
hlt
and
cwtl
push
sub
jbe
push
fisttps
mov
mov
mov
jp
xchg
imul
outsb
xchg
in
sti
xor
push
dec
lock
shrl
or
adc
add
pop
or
in
insb
in
addb
enter
scas
out
jnp
or
add
imull
xor
pop
and
mov
cmp
fcoml
fldenv
inc
sbb
add
pop
xor
xor
sub
pop
jle
push
inc
neg
pop
pop
dec
xchg
dec
movsb
andb
adc
and
cs
dec
sub
das
cmp
xorb
rclb
ficoml
aaa
ftst
insl
outsl
inc
pop
inc
xchg
mov
and
rcrb
jl
mov
addr16
pop
clc
adc
sbb
mov
insl
and
cmp
sbb
or
or
push
int3
lock
icebp
dec
lods
push
dec
inc
jae
cmp
mov
ds
mov
das
mov
in
sbb
push
repnz
dec
stos
pusha
gs
test
and
addr16
arpl
xchg
jbe
rcrb
aas
cmpsb
mov
cmc
mov
jns
in
jl
mov
push
pop
lcall
fwait
mov
rcrl
pop
std
adc
inc
sbb
mov
jne
dec
nop
mov
gs
dec
jb
jns
push
inc
jmp
and
mov
mov
jo
xchg
xor
pop
adcb
push
lods
ffree
sbb
sbbl
das
mov
clc
adc
mov
sbb
imulb
push
repnz
pop
mov
and
adc
sbb
loop
inc
jecxz
cmp
insl
cmp
pop
cmp
or
push
jns
scas
inc
addb
sbb
lgs
dec
jbe
jae
notl
shrb
pminub
or
push
in
cltd
jb
and
bnd
mov
ret
sti
sbb
and
arpl
std
jp
mov
addb
add
dec
push
sbb
aad
mov
loop
adc
test
push
dec
xchg
xchg
inc
scas
mov
cld
mov
jnp
aas
jp
movsl
stc
cli
movsl
shrb
mov
dec
mov
push
dec
hlt
addr16
lahf
pop
lock
push
test
cmp
sbbl
int
es
or
add
lcall
push
aad
andb
xchg
jg
jo
jecxz
js
cmp
adc
loope
mov
jne
je
mov
pop
xor
pop
sarl
stos
das
cmp
fucom
stc
cmc
push
int
loope
sahf
popf
add
jne
in
ss
stc
push
adc
daa
pusha
in
or
rorl
and
sbb
or
push
fidivrl
xor
outsl
adc
in
cs
xchg
ljmp
mov
inc
inc
outsb
out
int
pop
aad
pop
add
cmp
mov
fwait
repz
pop
jns
ds
jl
test
xchg
lods
mov
loop
xchg
outsl
out
dec
pop
movsb
lret
or
and
aam
das
mov
dec
mov
icebp
pop
pop
ret
cmp
pop
mov
lds
aaa
push
xchg
pushf
outsl
sbb
inc
jno
popf
mov
mov
fsubl
fs
mov
faddl
je
lret
and
in
popf
push
push
fcmovne
mov
inc
push
xor
jecxz
test
dec
inc
dec
scas
or
pop
inc
out
mov
lods
popa
fdivrs
cmpl
push
iret
mov
fsubrs
rcll
add
mov
inc
arpl
pop
call
push
and
jge
and
int3
lahf
push
adc
cmp
iret
mov
in
paddw
outsb
subb
mov
bnd
pop
cmp
push
insb
jo
xor
das
test
dec
rcll
fwait
push
outsb
push
dec
mov
mov
lahf
movsl
cmp
icebp
xlat
mov
sarl
bound
enter
and
sbb
adc
stc
mov
dec
and
aad
push
dec
ret
sub
xchg
jmp
int
add
adc
rolb
shlb
pop
add
and
lods
add
and
imul
loope
call
aad
test
push
dec
sbb
sub
call
fcomps
divl
into
inc
les
pop
push
inc
repz
je
jns
div
adc
lods
mov
sbb
push
fsubrl
jns
xchg
jo
movsb
mov
and
push
xchg
inc
and
mov
jno
dec
push
or
mov
lock
sbb
popa
invlpg
jge
or
lahf
addl
inc
sbb
xchg
xor
and
inc
js
mov
fs
in
pop
bound
out
cmp
mov
movsl
clc
in
icebp
pop
mov
fnstcw
fmuls
gs
push
adc
jae
stc
push
sti
stos
scas
adc
sub
add
mov
jo
xlat
leave
cli
add
cmc
mov
xchg
jb
pop
imull
inc
loopne
jo
ror
sub
inc
mov
arpl
xor
clc
jecxz
lea
adcb
fnstsw
cmp
test
btr
mov
jmp
nop
and
mov
pop
mov
subl
sub
pop
lock
push
dec
insl
sub
jle
nop
jb
sub
icebp
sub
lods
daa
insb
mov
and
jno
push
xchg
pop
inc
enter
mov
popa
mov
xchg
ljmp
rcr
mov
subb
push
or
ljmp
out
daa
pop
daa
dec
xchg
pop
xchg
mov
test
test
cs
loope
jge
add
pop
adc
adc
mov
test
jns
fwait
jle
test
icebp
add
cmp
xchg
jnp
outsb
push
xchg
test
loopne
orb
movsl
pushf
mov
mov
cld
push
adc
ficomps
cmp
mov
pop
pop
and
sahf
repnz
popa
mov
jp
lret
or
insb
or
jmp
cmp
stc
lods
inc
ret
rcl
test
mov
orl
lds
and
sbb
push
ss
pusha
cmp
int3
jg
insb
push
push
test
in
sarb
data16
sub
hlt
gs
inc
inc
jno
sbb
cmp
and
dec
push
dec
sub
or
pop
les
sub
mov
aas
or
enter
jecxz
pop
ja
jae
or
mov
push
in
xchg
cltd
les
fidivrl
xchg
mov
ljmp
and
dec
pop
or
mov
jb
stc
cmp
sub
cmp
cmp
and
adc
or
mov
jns
push
ret
xor
ret
pop
fldl
in
push
stos
jae
push
or
jae
testl
xchg
or
dec
xchg
push
lret
call
je
push
push
dec
mov
nop
sahf
xchg
pcmpeqw
inc
inc
dec
push
and
sub
out
ljmp
rcrb
addb
inc
aam
fsub
in
je
xchg
push
shrl
shll
insl
out
mov
dec
aas
ds
dec
push
scas
aam
fldcw
and
fwait
jg
lods
out
cmp
push
mov
mov
loop
mov
or
mov
enter
jnp
test
cltd
xlat
lds
cmpsb
and
push
sbb
not
mov
jo
bound
and
iret
dec
xor
sti
fwait
push
adc
rcrb
xor
push
sub
mov
push
test
test
mov
adc
pusha
mov
lods
jne
and
pop
in
sbb
jg
xor
mov
mov
sbb
pusha
inc
and
xor
outsb
stos
repz
inc
mov
enter
or
call
jmp
jbe
jo
fwait
or
inc
cmp
shll
mov
cmp
test
add
pop
xorl
hlt
mov
clc
ficomps
sub
arpl
stc
pop
fstl
fldt
out
gs
idivb
fnstcw
or
jp
mov
jg
rcrl
inc
mov
or
ror
negb
mov
push
cmc
mov
cmpsb
xchg
mov
push
sub
push
mov
fidivrl
movd
lods
adc
xchg
lret
jg
jmp
ja
pop
enter
orps
xlat
movsl
lods
xchg
and
inc
popf
adc
inc
and
out
jns
inc
xor
fstps
pop
sub
cmp
ret
imul
outsl
imul
fnstenv
push
mov
sbb
sbb
pop
hlt
cmp
pop
dec
jno
repz
mov
push
in
outsl
fdivrs
pop
movsb
je
push
sub
repnz
dec
lret
xchg
lds
jae
lret
xchg
push
ret
imul
in
addr16
loop
sbb
movsb
or
mov
mov
mov
dec
test
insb
hlt
bound
fstl
adc
push
rorl
es
enter
int
mov
nop
pop
int3
cmovo
jp
addb
nop
mov
cmp
stc
cmp
and
fcoms
dec
ss
rclb
imul
xorb
and
aas
pop
cmp
ds
dec
fistps
aad
icebp
iret
adc
lods
pop
inc
xchg
dec
mov
das
stos
mov
sub
pusha
pushl
loop
and
es
mov
mov
mov
push
ja
inc
arpl
pop
fsts
mov
aad
xchg
add
andb
lret
fwait
push
jno
push
pop
cltd
test
mov
mov
dec
iret
mov
mov
inc
cld
add
xchg
pop
lahf
popf
jbe
xor
insb
sub
mov
in
cld
in
pop
xchg
clc
xor
in
pop
test
jmp
xchg
dec
xor
shl
bound
jo
lahf
sub
and
cli
les
adc
mov
hlt
ljmp
cmp
pop
mov
cmp
inc
cmpl
or
mov
jmp
push
jl
lods
add
in
rolb
stc
add
aaa
in
and
leave
and
inc
cmpb
dec
inc
xor
scas
in
scas
sahf
mov
loope
test
mov
jle
les
loop
pushf
sub
adc
push
xor
sub
xlat
es
leave
lods
xor
pop
pop
xchg
iret
mov
ljmp
mov
cmc
imul
push
mov
mov
imul
xlat
rcll
xchg
sub
lret
inc
jl
mov
ret
aaa
lock
adc
shlb
xor
idivb
pop
push
fs
jmp
shlb
loopne
cmc
scas
std
or
dec
cmp
repz
cmpb
stos
nop
imul
movsb
xchg
sub
aad
push
imul
inc
popa
cli
inc
bound
jle
insl
sbb
adc
jg
mov
mov
inc
jl
std
pop
mov
adc
fs
or
lcall
xadd
jns
inc
movsb
sub
jnp
fs
or
sub
out
or
movsb
sbbl
fistps
pop
shr
pop
xchg
addr16
aam
cmp
jns
pop
mov
dec
xchg
jle
and
mov
es
movsb
xchg
xchg
jp
lods
sub
sbb
pop
xchg
inc
lea
pop
xor
sahf
cld
dec
jle
bnd
or
cmpsl
sarl
outsb
lods
jo
das
pushf
fsubrs
mov
pop
out
int3
cmp
lock
data16
out
leave
cmp
popa
sbb
pop
rcll
pop
pushf
es
dec
jecxz
add
cs
aam
fwait
xor
imul
in
push
rclb
jg
xchg
mov
jbe
hlt
inc
and
scas
lods
adc
test
adc
inc
fisttpl
mov
repz
push
jb
xchg
enter
imul
aam
inc
mov
pop
push
out
mov
leave
jbe
jmp
xor
lods
jnp
jb
jno
stos
mov
mov
dec
inc
test
in
xor
sbb
push
jge
inc
xor
ficomps
movsl
fildll
stc
cs
sbb
cmpsl
jae
sbb
mov
inc
aam
into
or
das
mov
mov
cmp
pop
or
insb
enter
jg
push
mov
inc
loopne
movsb
out
mov
push
outsb
ds
mov
xor
pop
inc
test
adc
ja
push
pop
inc
cmp
push
data16
and
cltd
mov
xchg
sub
dec
sbb
dec
dec
in
loop
addb
inc
mov
test
lret
sub
mov
adc
imull
push
data16
jl
pop
xchg
gs
adc
cmpsb
inc
xor
add
gs
sub
push
lds
xchg
cmp
push
xchg
push
ljmp
das
xor
fs
adc
ret
mov
adc
popa
add
inc
cmp
cmp
into
icebp
insb
lret
mov
jmp
lods
icebp
jecxz
sarb
jnp
shll
pop
jge
aam
sub
lea
adc
sbb
pop
pop
lods
and
lret
push
sbb
adc
cmc
dec
adc
and
loop
mov
rcl
in
out
das
jge
int3
orl
sbb
pop
push
inc
sbb
xchg
xor
mov
movsl
jge
popa
int3
push
cld
mov
mov
jb
jne
push
mov
add
push
filds
xor
jecxz
pop
mov
adc
outsl
iret
pop
or
lods
jg
aas
cmpsl
ss
push
aad
loope
sub
lods
clc
push
subl
xchg
mov
and
shrb
pop
mov
ret
xor
jno
lahf
jmp
adc
push
repnz
cmp
je
push
xor
mov
push
jne
jecxz
mov
pusha
call
push
mov
popa
popa
repnz
dec
cmp
sti
icebp
pop
sti
insl
loopne
mov
out
shrb
pop
pop
std
push
leave
lcall
inc
cld
ds
shll
fisubl
movsb
in
cmpsl
test
pushf
in
or
sbb
cmp
sub
dec
fstpt
push
into
sahf
xor
sub
sub
mov
adc
cmp
stc
xchg
cmp
enter
and
aad
cmc
sbb
testb
xchg
outsb
jo
inc
ss
cmc
notl
outsl
clc
inc
xchg
jl
dec
xchg
mov
push
xchg
test
pop
shll
ljmp
cmpsb
sub
mov
or
aaa
inc
cmpl
fs
inc
loopne
hlt
pop
push
test
lret
test
outsl
jg
jl
xor
inc
xchg
aam
mov
outsb
add
inc
sbb
sub
aas
push
js
cld
sbb
adc
dec
adc
push
jno
jae
xor
adc
out
cmp
mov
push
cmp
sub
inc
sub
call
dec
pop
xor
ret
addb
jge
std
cmpsl
sbb
xor
aam
cmp
adc
cmpsl
sbb
pop
xor
sub
sub
pop
pop
jo
cli
orl
lods
pop
cmp
cmp
pop
cmp
stos
mov
outsb
lahf
jb
mov
lds
jo
rorl
xor
cltd
ficoms
xchg
jge
leave
xchg
call
out
outsl
fwait
xchg
out
inc
mov
dec
lahf
mov
mov
push
inc
mov
js
mov
icebp
jns
pushf
movsl
repz
jecxz
icebp
jmp
roll
dec
xor
test
popa
fsubrs
dec
int
shr
mov
pop
dec
sbb
lds
xor
dec
mov
fldenv
stos
push
lock
shl
ljmp
das
pop
shr
daa
jmp
add
les
xchg
inc
pand
lcall
je
inc
jle
call
inc
repnz
xchg
dec
lods
popf
push
sbb
leave
sbb
rcll
xor
jmp
shrl
xor
jae
adc
inc
scas
pushf
addl
push
or
shrb
clc
aas
xor
mov
sub
es
xchg
mov
pop
xchg
pmovmskb
mov
cmpsl
add
les
loop
and
sub
sbb
cld
jnp
xchg
stc
and
imul
jae
imul
sbb
inc
push
mov
adc
pop
gs
and
pop
pop
sbb
in
fcoml
inc
and
mov
ds
and
inc
into
add
adc
stos
pop
mov
fisttpl
cmpsl
enter
mov
add
pop
out
mov
ja
push
addl
sbb
pop
movsl
clc
ljmp
fiadds
cmp
dec
adc
push
or
imul
or
mov
sbb
jg
int3
in
test
push
imulb
mov
imul
loope
mov
pushf
xor
inc
lahf
push
add
lods
clc
movsl
and
sub
lret
mov
movsb
aaa
sub
sbb
and
xchg
lret
scas
dec
aad
dec
sbb
fisubl
roll
jge
ds
daa
lds
das
sub
out
mov
lahf
in
shll
adc
fildll
shld
insl
cli
fstpl
out
stos
push
jnp
lock
jbe
gs
scas
test
pop
rolb
outsb
lods
adc
in
out
pop
push
out
sbb
adc
push
or
loope
das
mov
xor
enter
idivb
call
inc
addb
push
add
sbb
inc
leave
dec
fidivrs
dec
mov
loope
mov
arpl
mov
or
stos
popa
mov
je
push
aad
adc
mov
push
imul
mov
sbb
pop
arpl
test
mov
jmp
pusha
lret
leave
sub
and
inc
sbb
pop
mov
jo
jmp
sub
lcall
setg
and
mov
scas
out
mov
lea
mov
popf
das
dec
jb
icebp
loop
call
mov
cs
in
push
pop
sub
xchg
inc
dec
inc
xchg
xor
jbe
push
mov
xchg
xchg
sti
mov
adc
iret
in
fisttpl
mov
sub
xchg
nop
and
sub
pop
ret
and
add
jbe
int3
jns
subl
je
ja
je
jb
sub
addl
xchg
jg
jecxz
mov
inc
sbb
mov
hlt
push
jae
int
inc
push
xchg
jno
popl
loope
mov
insl
xchg
add
add
pop
cmpsb
sbb
dec
jnp
dec
mov
xchg
mov
aaa
pop
adc
dec
pop
shlb
jb
and
push
bound
or
fsubrs
lock
icebp
cmp
dec
mov
sbbb
lret
adc
je
lret
in
cltd
push
clc
test
rol
or
inc
test
sahf
jne
jmp
aas
loope
mov
jge
lret
mov
cmpsl
pop
pop
pop
sbb
dec
push
pop
pop
insb
das
mov
int3
mov
cli
lods
int
cmp
decl
lods
test
ret
pop
dec
mov
mov
aas
lcall
icebp
loope
or
jl
in
jbe
out
adc
out
mov
pop
and
ds
sub
jl
shlb
push
ds
call
jne
enter
adc
mov
mov
xchg
or
add
adc
shrb
int
mov
cli
sub
adc
pusha
cmp
adc
repnz
mov
pop
ds
je
add
jmp
inc
fldenv
or
sbb
mov
popf
cwtl
mov
sub
sbb
push
pop
out
xchg
sarl
jb
push
push
cmp
fdivs
and
outsb
popa
sti
ljmp
jl
pop
or
xchg
jne
js
lret
arpl
push
cmc
mov
in
push
xor
mov
pop
lahf
push
push
aaa
je
pop
mull
shl
push
sbb
push
mov
iret
xchg
add
cmp
test
sbb
cmp
dec
stos
lock
pop
test
imul
ss
push
mov
fwait
jno
xchg
scas
xchg
xor
push
adc
or
push
jle
iret
test
stc
shll
subb
insl
iret
jae
mov
or
rol
es
push
cmp
dec
dec
sbb
mov
add
punpckhbw
lahf
lret
fstl
cwtl
xchg
mov
and
ds
leave
lahf
pop
in
lea
push
jecxz
cmp
mov
bswap
jmp
mov
push
cld
xor
inc
pop
or
add
push
pop
call
int
pop
fwait
pop
je
and
sbb
imul
jo
imul
imul
stos
jne
jns
aam
insb
insl
cltd
mov
sbb
cmp
iret
mov
or
cmp
jo
lea
and
mov
ss
iret
adcl
test
or
mov
jne
pusha
cmc
mov
cs
pop
mov
cmpsl
cld
push
pusha
ficomps
popf
dec
push
mov
adc
mov
sub
lcall
int3
out
add
jmp
and
xchg
mov
jae
mov
dec
push
add
popf
pop
pushf
sbb
cmp
fisubrl
lret
out
inc
out
and
ror
push
scas
xlat
aam
push
jo
jb
outsb
and
inc
shlb
adc
pop
popf
je
filds
push
imul
cwtl
push
sbb
push
xchg
add
mov
push
lods
add
or
lcall
xchg
fnstcw
sub
fcomps
stos
or
ja
cmp
rcr
mov
jle
xchg
inc
rclb
loopne
ret
cmp
call
movsl
pop
add
add
pop
fs
cmp
push
and
or
jmp
fsubl
and
cli
js
fsub
sub
icebp
in
adc
aaa
and
jbe
jp
aad
push
pop
inc
pop
fldcw
push
mov
fldenv
sub
ljmp
xor
sbb
sbb
aam
sub
push
fsubs
jl
adc
jle
and
xchg
dec
adc
inc
mov
addb
jmp
add
mov
pop
inc
in
and
scas
mov
dec
test
fsubl
into
lds
and
pop
out
iret
adc
insl
adc
adc
push
mov
scas
into
or
xchg
mov
cld
xor
jne
pop
add
pushf
int3
pop
adc
cs
cwtl
je
cmp
cld
pop
fisttpl
or
mov
hlt
les
outsb
push
out
insl
mov
das
das
cltd
add
jg
pusha
dec
cmp
iret
jb
mov
aam
dec
push
out
xorb
mov
std
test
jle
xor
loopne
add
shll
jge
insl
jl
dec
pushf
insb
sub
fisttpll
js
out
push
lcall
lret
sbb
les
xchg
jbe
cmpsb
inc
popa
lea
or
iret
loope
jb
jnp
lret
fcoms
out
mov
sti
jecxz
jbe
imul
ret
pop
xchg
dec
or
jo
and
invd
movsb
sub
add
scas
adc
xor
inc
shll
rcrl
mov
pusha
out
pop
dec
pop
push
jno
sbb
cmp
movsl
pop
adc
xchg
int
outsb
push
cld
cmp
push
imul
fistps
ss
call
out
out
mov
pop
cmp
mov
jg
sub
aaa
out
stc
mov
aam
mov
or
leave
out
cmp
add
ret
cmp
add
inc
cmc
lcall
mov
mov
das
cmpsl
add
bound
movsb
jns
shrl
out
pop
or
add
scas
nop
pusha
push
les
hlt
sbb
jnp
jmp
sbb
notl
sbb
adc
jns
mov
push
xchg
popf
inc
out
mov
xor
orl
jno
cld
cltd
orl
in
clc
das
push
movsb
xchg
adc
idivb
or
out
pop
add
inc
arpl
ja
sub
cmc
ret
insb
leave
or
mov
jg
xor
fs
in
xchg
push
pop
mov
aaa
cmp
jnp
adc
sarb
dec
stos
dec
mov
sbb
xor
dec
xorl
enter
mov
and
mov
sub
loope
jne
rol
les
mov
sysenter
sub
or
in
call
loopne
xor
push
outsb
inc
ror
dec
pop
fisttpl
sbb
dec
mov
fstpl
sub
sbb
cltd
xlat
js
pusha
shl
inc
jle
xchg
pop
adc
push
pushf
imul
sahf
fisttpl
pushf
loop
shlb
rep
stos
mov
out
and
aad
push
pop
fwait
dec
dec
int3
mov
mov
xchg
pushf
jb
sub
imul
push
rorl
mov
mov
sbb
iret
sti
jmp
insl
mov
mov
shrb
xchg
cmp
jno
data16
sub
jmp
mov
pop
push
int
or
call
sbb
je
lds
rclb
movsb
pop
popf
sub
mov
fstpt
fisubrl
or
mov
fsubr
gs
lahf
adc
add
mov
push
mov
push
inc
jo
mov
int
call
fimull
imul
or
out
pushf
push
shll
repnz
xchg
call
mov
cmp
xor
loope
mov
push
into
jmp
or
mov
fsts
fs
add
popf
test
test
inc
dec
lea
mov
mov
popa
notrack
fistl
sar
cmp
xor
aam
leave
fcmovnb
dec
dec
pop
sub
jmp
pop
xchg
sarb
fildll
xor
sahf
ljmp
daa
or
daa
pop
gs
sti
lret
add
popf
lcall
clc
add
insb
add
mov
scas
or
in
fwait
xchg
fsubs
mov
pop
fucomip
fcomps
fcomps
or
lea
daa
xchg
or
idiv
bnd
lods
jle
aaa
and
lcall
call
xor
mov
xorl
inc
mov
add
imul
adc
cmp
add
mov
xchg
cs
fstp
fsubrl
sar
add
popf
adcl
xor
cmpsb
sti
jbe
das
cld
or
jg
push
ljmp
dec
stos
cmp
push
mov
ljmp
jp
stos
ret
and
mov
lock
xchg
dec
loopne
push
jns
sbb
mov
in
push
fcoms
js
in
fcompl
shrb
inc
in
adc
call
or
sbb
leave
push
dec
adcl
ret
sbb
in
push
insl
stos
sbb
dec
mov
sbb
mov
insl
pushf
shlb
xchg
cld
movsl
test
xchg
xchg
rdmsr
fwait
xchg
mov
mov
or
outsl
das
push
or
jle
or
popf
mov
insb
sbb
popa
jecxz
pusha
cld
push
pop
orl
or
xor
popf
jp
mov
js
sahf
xchg
arpl
cs
fstpl
jge
lret
push
icebp
stos
jle
jns
orb
imul
cli
mov
pop
into
out
mov
pop
repnz
inc
mov
imul
xor
cltd
pusha
xchg
dec
out
push
repnz
xchg
pop
loopne
out
push
out
xchg
sub
daa
inc
xor
and
scas
leave
lret
add
cmp
imul
xlat
fdivl
dec
sti
push
push
add
aad
in
fistpl
mov
lea
jge
add
jb
mov
cs
aas
cli
mov
ljmp
dec
ljmp
jns
in
xchg
loope
or
push
in
lea
inc
cmpsl
xlat
inc
pushf
out
das
out
cwtl
cmp
xchg
jo
and
sub
ret
outsl
rolb
xor
xchg
sub
cmp
mov
xchg
cmp
inc
jno
xchg
cmp
arpl
scas
push
test
pop
rol
jae
jg
mov
mov
les
aas
std
push
inc
xor
cmp
out
push
cmpsb
xchg
into
push
enter
int
test
les
push
in
mov
mov
scas
add
xor
fbstp
ffree
mov
jp
push
sbb
or
je
int
add
mov
push
stos
inc
stos
test
mov
dec
pop
adc
sbb
mov
push
xor
lret
ficomps
add
test
into
ds
fwait
sbb
fdivl
bound
cmp
mov
xor
fdivr
addr16
mov
xchg
mov
push
in
mov
test
xor
dec
sti
addr16
add
dec
inc
dec
test
or
mov
lods
jbe
xchg
test
mov
xchg
sbb
cmc
and
sbb
push
jno
nop
roll
shrl
mov
mov
aam
pop
sbbb
fnsave
jg
loopne
push
inc
mov
sahf
add
cmp
mov
xor
rcll
pushf
push
mov
popf
sub
add
clc
jo
and
pop
jge
jb
iret
mov
dec
js
stos
and
iret
xor
xlat
pop
mov
int
daa
aad
popf
fnsave
and
and
fsubs
dec
lds
xchg
and
stc
dec
shr
rclb
out
fsub
shlb
leave
hlt
xchg
push
push
xchg
xchg
faddl
mov
data16
mov
xor
mov
push
cwtl
inc
lcall
and
mov
les
push
pushf
cmp
loopne
jmp
xor
adc
cltd
mov
or
pop
cmp
in
inc
enter
bound
cmp
sbb
adc
cmp
and
and
mov
fucomip
shrl
cmpsl
nop
sub
jg
sub
mov
push
mov
pop
roll
imul
notb
cmp
cmp
pushf
dec
jo
in
pop
ljmp
scas
leave
mov
mov
adc
cs
stc
stos
movsb
jns
mov
mov
fldl
int3
sub
cmp
insl
or
sub
popa
xlat
push
sbb
adc
cmp
cli
mov
pop
cmpb
aaa
sub
idivl
mov
mov
imul
push
in
or
xor
cmpsl
jge
sub
mov
repnz
xchg
inc
mov
fs
nop
cmpsb
pop
and
out
andb
jbe
loopne
into
dec
jp
xorl
mov
movsb
sub
jno
mov
mov
out
add
jns
cli
scas
xchg
jns
push
inc
push
outsb
enter
daa
and
dec
sbb
or
mov
call
rcl
test
icebp
imulb
xchg
dec
adc
in
xor
and
hlt
xor
sub
aad
xchg
hlt
push
into
pop
cli
loop
mov
div
aas
int
fsubrl
mov
and
xlat
or
rcr
fldenv
add
mov
xorl
or
ja
js
cmpb
pop
das
add
imul
iret
popf
fwait
mov
jmp
out
xor
xchg
jle
pop
inc
or
xor
push
fs
aaa
pop
push
cmp
cli
gs
loope
mov
cmp
mov
adc
pop
xchg
stos
vpmacsdql
cmpsb
das
xor
dec
ret
mov
xor
movsl
push
fsubrs
and
or
mov
mov
cli
lods
subb
ret
sub
jo
cltd
adc
imul
gs
bound
fsts
mov
inc
sbb
sbb
cltd
mov
push
jge
and
inc
and
sbb
inc
jnp
test
fs
aam
out
test
push
push
mov
shrl
sbb
repz
stos
adc
pop
sbb
sub
ja
and
repnz
mov
xchg
xchg
rorl
xlat
adc
cmc
xor
sbb
inc
push
adc
mov
mov
aad
xchg
sub
cmp
mov
mov
sbbb
sbb
jae
jmp
movsl
xor
mov
sub
add
ds
ret
je
pop
pop
cmp
jle
mov
fwait
push
mov
inc
loop
xchg
mov
sub
inc
in
iret
adc
lcall
lcall
rorl
or
push
outsl
ficompl
push
xchg
push
rorb
xchg
aam
int3
cmpsl
xorl
cli
ficoms
xchg
ror
cmp
mov
push
jle
rcrb
out
adc
stos
cmp
mov
pop
fcomps
test
push
dec
addr16
push
xchg
jmp
mov
xchg
lds
ljmp
inc
jge
call
andb
push
mov
addr16
ss
pop
outsl
and
pop
dec
and
mov
sbb
pop
aas
mov
pop
enter
jno
cmp
std
or
xor
popf
pop
scas
mov
inc
out
pop
pushf
or
inc
js
sub
or
push
xor
insl
divb
and
ret
pop
out
fcmove
add
test
aad
or
gs
lea
mov
div
test
nop
pop
js
pop
xchg
xor
mov
in
mov
setne
test
add
loop
mov
push
xchg
push
inc
sub
ja
xor
cmpsb
inc
pop
jo
xor
add
fdivl
imul
jns
pusha
xchg
inc
pushf
sti
mov
and
mov
or
jle
les
aam
rol
fst
leave
push
repnz
daa
xchg
jmp
es
dec
sarl
adc
popa
in
xchg
js
xor
insl
inc
xchg
add
mov
aad
int3
out
icebp
push
jecxz
ds
mov
inc
pusha
push
insb
push
or
and
cmpl
xchg
outsl
jle
nop
repnz
or
cwtl
mulb
fldln2
inc
dec
push
xor
pop
sub
mov
lods
int
les
xorl
push
sub
imul
stos
pop
in
rolb
sub
scas
jnp
push
lds
jl
out
inc
lock
mov
mov
mov
pushf
sub
jns
fisubs
mov
and
imul
int3
jne
popa
into
int3
push
das
cmpsl
rorl
sbb
adc
cs
pusha
xor
cwtl
inc
and
dec
jbe
add
shrb
scas
mov
sub
inc
jbe
dec
push
into
dec
pusha
andb
xor
add
push
repz
cmp
mov
lret
mov
pop
hlt
xor
ss
add
push
out
inc
cmp
inc
jbe
push
inc
imul
dec
mov
add
sbb
push
and
mov
decl
jge
and
jo
jne
adc
pop
adc
cld
xchg
sbb
aaa
cltd
jnp
push
repnz
call
jl
adc
lret
push
popf
movsb
fistpl
repz
jne
fdivrl
scas
cmp
add
loope
push
and
aad
add
mov
add
loop,pt
adc
aam
xchg
daa
iret
adc
fisubrs
mov
lods
lock
sbb
mov
rorb
xchg
xchg
ret
rolb
or
adc
outsl
inc
js
mov
repnz
das
push
jno
gs
dec
push
add
dec
jmp
jne
xor
or
idiv
cmp
pop
cmp
pop
fwait
shl
xchg
lret
push
and
push
add
push
enter
mov
in
inc
dec
cmp
sub
mov
iret
testl
jno
enter
inc
jnp
test
js
add
xchg
lret
lcall
jp
mov
lea
fisubrl
sub
push
sarl
mov
insb
dec
sub
pop
adc
cmp
xor
test
aaa
arpl
in
pop
shrl
rclb
lahf
fisubs
addl
call
dec
push
je
fnsave
mov
es
add
dec
lret
xchg
cli
mov
sub
icebp
inc
mov
dec
pop
lods
fistpll
sub
dec
add
nop
fidivrs
mov
jg
movsl
shlb
or
mov
movsl
adc
push
ss
mov
or
pop
out
push
mov
jno
mov
inc
fldcw
sub
pop
pushf
fldt
xchg
lahf
dec
jle
dec
sub
jns
pop
lret
js
mov
les
sbb
or
inc
fldt
stos
dec
mov
pop
mov
stos
cmp
pop
jmp
cmpsb
jmp
xor
enter
je
movsb
adc
mov
fadds
cmp
stos
xchg
mov
int3
aas
sbb
arpl
inc
fnstenv
sub
dec
sarl
out
adc
std
and
xchg
or
sbb
push
inc
bound
ret
ffreep
mov
mov
iret
clc
sub
lods
sub
dec
movsb
test
add
shr
repz
lahf
in
arpl
push
je
aaa
loope
sbb
mov
aam
ja
jns
scas
call
xchg
imul
sub
repz
lds
jbe
and
dec
lock
call
mov
insb
cli
mov
sub
call
mov
mov
jg
mull
shlb
mov
push
jg
dec
xchg
push
cltd
jno
pop
rclb
subl
mov
test
enter
dec
push
add
jbe
jae
push
insb
sbb
icebp
sahf
mov
pusha
adc
aaa
push
mov
ja
in
jne
sahf
inc
aas
shrb
sbb
mov
test
arpl
je
je
mov
or
pop
rol
fldt
push
lea
xchg
jb
imul
loopne
jno
pop
movsb
pop
cmp
pop
cs
lahf
pop
mov
imul
in
cmp
fildl
popl
pop
negl
inc
and
xchg
mov
pushf
add
jg
xchg
xchg
add
scas
pop
cmp
jbe
pusha
cli
push
push
mov
mov
ret
xchg
in
scas
cmc
fwait
lahf
jge
pop
shl
xor
push
movsb
mov
ds
int3
fcompl
fadds
mov
mov
ret
not
jle
int3
pop
enter
aaa
mov
cmp
mov
cwtl
add
icebp
fmull
xchg
xor
adc
jg
lods
sbb
stos
mov
lods
in
gs
in
xchg
push
call
cs
test
and
jl
aam
sarl
aas
xor
shll
mov
in
enter
cli
sbb
test
subl
and
sub
in
outsl
aad
in
mov
cltd
jge
push
das
inc
mov
lods
mov
or
pop
mov
add
add
fnsave
aas
mov
sbb
pop
push
jge
test
ds
js
push
xor
or
test
dec
xchg
xchg
pop
outsb
mov
subb
sbb
sahf
scas
pop
arpl
mov
dec
dec
mov
cs
xchg
sub
inc
out
sub
decl
faddp
and
iret
mov
jne
test
or
push
popa
or
lahf
mov
das
cmp
daa
inc
gs
inc
xor
and
bound
ret
loopne
insl
jae
scas
scas
sub
je,pn
hlt
shrl
loope
jb
loopne
and
jp
ret
into
out
icebp
cmc
mulb
das
jge
call
in
es
sub
das
mov
stc
and
sahf
scas
in
push
test
in
mov
pop
push
pop
cmc
pop
add
add
xchg
push
xchg
jmp
aas
push
push
push
mov
ljmp
fs
add
cmpsb
rcl
scas
mov
mov
add
mov
sbb
stos
mov
sub
push
lcall
fdivl
dec
push
push
lahf
pop
cmpb
testb
jecxz
movsb
ss
dec
mov
test
pop
push
mov
inc
jo
pusha
pop
repnz
mov
jl
and
xor
jnp
mov
aad
stc
sbb
xchg
pop
stc
inc
in
mov
shl
adcb
add
lret
mov
cmpsb
andl
inc
and
jno
or
cli
dec
xor
push
jl
push
repz
pop
jecxz
mov
hlt
push
scas
repnz
dec
aam
or
adc
pop
stos
and
lods
aaa
xor
add
mov
pop
xor
jb
loopne
xchg
leave
notb
push
lea
mov
add
das
insl
dec
scas
xor
shll
popf
add
push
dec
dec
cmpsb
mov
push
mov
test
les
loopne
divb
popf
jl
sub
in
xor
lcall
add
repz
or
mov
sbb
stc
dec
hlt
cld
mov
mov
xor
out
inc
mov
fdiv
mov
int3
shlb
cwtl
ret
inc
inc
mov
push
ja
dec
mov
add
push
cld
add
add
es
popl
xchg
cmp
inc
ss
jae
add
mov
mov
push
mov
hlt
dec
in
xor
xor
adc
mov
and
call
xchg
data16
and
mov
pop
jno
mov
out
mov
pop
cmp
and
insl
lock
loope
iret
rcrb
pusha
xor
add
cmc
in
xchg
dec
daa
lcall
pop
aaa
out
mov
mov
jecxz
push
cmc
sub
jmp
cmp
sahf
repnz
jno
popa
clc
test
pop
and
jne
mov
push
sub
xchg
call
push
sub
xor
outsl
insb
jmp
aas
pop
insb
int3
lret
inc
negl
add
xchg
mov
cmp
in
jbe,pt
lods
inc
jl
popf
xchg
or
stos
mov
fadds
fimull
xor
sub
cmc
addr16
mov
lret
dec
sub
mov
cmpsl
fisubrs
jl
add
xor
or
call
cmp
push
icebp
daa
or
repnz
ds
addr16
daa
mov
ja
shll
fisubl
mov
mov
jp
adc
lret
jns
aas
pop
cmp
jbe
in
push
jo
sub
cltd
cltd
and
outsb
enter
adc
dec
in
into
sarl
mov
add
call
lret
sbb
pop
inc
push
pusha
aam
sbb
inc
rclb
outsl
mov
mov
cwtl
imul
fcoml
sub
jae
and
mov
adc
sbb
mov
pop
inc
pop
push
cmp
push
packsswb
mov
sbb
dec
xchg
lahf
add
xlat
xorl
mov
not
xchg
jns
in
inc
xchg
push
xor
adc
lret
pop
scas
pop
sbb
jle
out
add
pop
ficoml
and
lahf
adc
int3
cld
add
push
idivl
add
or
mov
call
aas
mov
dec
cmp
mov
fisttps
les
repz
lcall
stc
or
mov
inc
mov
ds
lret
in
sub
pop
aas
mov
or
pop
leave
stos
mov
cmp
mov
jecxz
or
pop
xchg
fstpl
jle
and
stc
inc
or
int3
xchg
jl
push
imul
stos
inc
test
stc
test
inc
xorl
insb
call
mov
mov
addl
inc
pop
or
mov
ficoms
out
cwtl
leave
and
mov
mov
cmp
in
shlb
subl
mov
pop
jecxz
xlat
insl
inc
mov
sbb
mov
jecxz
mov
jp
inc
repz
aas
sbb
daa
je
dec
loope
icebp
int3
or
pop
mov
lea
sbb
leave
xchg
xor
xchg
call
add
jmp
imul
pop
and
push
scas
shlb
mov
and
xorb
loop
test
inc
call
adc
clc
rcl
jecxz
and
mov
jno
imul
mov
je
sbb
mov
mov
ret
push
mov
and
lods
ret
inc
sahf
arpl
fisubrl
scas
pop
cmpsb
sbb
add
mov
divl
imul
and
mov
dec
pop
test
enter
call
and
cmp
movsl
push
dec
cmp
cmp
out
jmp
repnz
popf
jns
mov
mov
pop
pop
call
xlat
imul
inc
and
cmpsl
or
xchg
xchg
mov
pop
aas
and
xchg
pop
cmpsl
dec
mov
aaa
mov
dec
out
dec
sub
pop
mov
cmp
lret
jne
mov
xchg
pop
ds
dec
pop
mov
mov
in
cld
inc
push
xor
das
add
bound
and
dec
xchg
and
sbb
in
dec
mov
xor
mov
shll
adc
sbb
xor
addr16
add
repnz
mov
mov
sbb
ds
imul
cmp
jns
and
and
mov
push
push
dec
pop
pop
sahf
outsl
adc
movb
cmp
xchg
pusha
xor
adc
fistpl
and
movsb
jg
xchg
sbb
dec
rol
mov
test
push
sub
xor
jmp
ja
in
pop
jg
fldt
test
sarb
xchg
jns
cmp
fnstenv
mov
inc
mull
into
push
scas
enter
cmp
and
xor
xchg
dec
jno
lock
les
mov
jnp
jecxz
cmp
push
out
addl
in
adc
or
mov
xchg
inc
dec
inc
jl
fistpl
ret
mov
fadd
and
ret
movsb
mov
mov
sbb
ret
or
std
jmp
std
mov
iret
or
scas
push
jbe
hlt
insb
mov
xchg
popf
pop
in
jno
fcomip
mov
cltd
or
outsl
pop
andb
mov
in
push
mov
cmp
and
xchg
ja
jne
mov
scas
outsb
arpl
mov
mov
push
out
jno
rorl
push
fwait
and
stos
mov
pushf
sbb
push
mov
cmc
cs
or
mov
mov
sub
leave
sahf
leave
lcall
insb
int
adc
and
dec
push
adc
pop
enter
or
pop
sbb
dec
out
push
movsb
jg
movsb
loopne
push
push
bnd
pop
cli
cmp
ret
in
push
icebp
lods
and
das
fwait
inc
mov
scas
cmp
jo
nop
mov
or
lahf
addr16
imul
jle
dec
das
imul
imul
aaa
mov
dec
push
mov
lahf
das
mov
mov
mov
push
pop
push
mov
adc
cmp
movsb
mov
push
cmp
adc
mov
js
add
sub
das
xchg
divl
pop
push
int3
ljmp
dec
jl
les
and
cli
inc
stos
rorb
adc
add
out
or
push
cmp
cli
add
jg
jb
fmull
rclb
pushf
ret
rorl
mov
cmp
push
les
jnp
inc
loope
adc
or
jb
test
xor
adc
jo
shlb
add
add
and
roll
fstp
outsb
cli
inc
mov
js
sbb
test
or
test
jmp
and
xchg
push
dec
nop
out
xchg
clc
jmp
mov
xchg
xchg
into
inc
orl
xchg
mov
mov
sbb
pushl
jmp
popl
cmp
jae
inc
push
fsubr
fisttpll
sbb
and
cmp
xchg
mov
stos
stos
jae
mov
in
mov
test
or
jbe
negl
ds
and
jo
mov
mov
mov
and
out
testl
adc
addr16
cmp
jl
sarl
mov
pushf
xchg
mov
jb
jmp
lcall
fs
mov
jae
fstpl
insl
stos
jp
adc
test
and
call
sub
into
adc
sub
mov
fsubl
inc
cmpsl
push
xlat
pop
rolb
stos
or
dec
jae
nop
dec
mov
cli
fstl
lds
andl
out
adc
mov
mov
push
movsb
das
mov
pop
push
xchg
cmp
sub
adcb
and
call
dec
xchg
xchg
and
std
dec
mov
fidivrl
push
insb
lods
stc
rcll
and
and
xor
xor
cmp
std
arpl
aam
xor
jge
lock
cwtl
sub
jp
test
movsl
leave
popa
imul
push
mov
in
aas
jg
jmp
fs
sbb
xor
add
movsl
stc
mov
or
push
enter
sbb
in
jne
imul
jo
pop
mov
xlat
in
aaa
popa
adc
jb
ror
or
aad
mov
lods
sahf
inc
dec
adc
sbb
mov
mov
scas
jmp
daa
dec
push
inc
jge
test
dec
jl
xchg
xchg
pop
add
mov
xor
xchg
shrb
bound
jae
lret
sbb
mov
or
ret
js
sbbl
inc
pop
std
lret
adc
movsl
in
adc
add
add
sti
gs
xchg
dec
xchg
adc
cmc
fnstenv
sub
jle
hlt
pop
fisubl
jns
mov
data16
mov
pop
mov
in
sub
jge
sbb
addl
fs
ret
adc
pop
gs
icebp
outsb
pop
into
adcb
in
aad
lock
pop
mov
ret
fiadds
scas
or
imul
push
adc
shlb
sub
divl
rclb
popa
pop
jg
cli
test
in
mov
fiadds
add
fistps
pop
es
int3
sub
push
data16
mov
outsl
pop
shlb
pop
popa
cmc
mov
popf
xor
shrb
mov
push
shlb
jecxz
fadd
sub
nop
mov
pop
les
inc
lock
test
lds
adc
jnp
les
addr16
jne
mov
ss
cld
icebp
lds
mov
loop
in
loop
test
iret
adc
pop
cs
sbb
aam
cltd
mov
imul
mov
ror
pusha
call
xchg
jmp
int3
stos
setl
lea
clc
xchg
mov
mov
sbb
and
push
dec
push
adc
xor
push
je
push
cmp
jecxz
adc
stc
rol
andl
xorb
or
lods
mov
mov
int
mov
or
add
ljmp
or
push
pop
mov
mov
jl
push
cld
nop
scas
push
imul
popa
adc
bound
dec
cmpsl
mov
cltd
outsb
xchg
jno
cmp
and
push
out
ja
leave
sbb
push
pmaddwd
pop
mov
and
mov
inc
jle
sub
or
jecxz
stos
mul
leave
addb
cld
es
push
push
fcmovbe
popf
ljmp
addr16
mov
std
mov
or
shll
mov
sub
xor
push
iret
push
jno
bound
inc
lret
and
fisubrl
jb
sub
mov
push
test
push
mov
and
scas
cmp
jle
stc
insb
xchg
test
stos
imul
and
jmp
cmc
or
std
jp
xchg
xor
pop
lahf
loopew
lret
jecxz
into
jbe
inc
mov
stos
push
in
fsts
repnz
rcrl
xchg
jae
fcoml
xor
jno
push
mov
scas
sub
mov
into
test
pop
dec
sub
test
and
ret
jo
and
sub
fadds
je
jl
stos
in
xchg
xchg
xor
fwait
lods
and
aad
cmp
imul
cltd
cli
push
sbb
faddp
daa
adc
sbb
orl
cmp
rcrb
and
nop
xchg
js
mov
lds
pop
mov
inc
shll
andl
in
mov
inc
and
cmpsl
hlt
add
mov
and
mov
sbb
out
leave
push
scas
sbb
setg
in
mov
addl
adc
insl
or
imul
dec
repnz
cmp
jno
cmp
cld
rcll
lcall
xor
in
pop
mov
les
ret
mov
lods
fisubrs
mov
call
xor
in
inc
out
cmp
test
cwtl
lret
int
mov
pop
mov
mov
push
shll
mov
mov
out
and
movsl
loope
ret
or
jae
nop
das
es
movsl
dec
jo
sbb
lods
pop
in
jnp
pushw
repz
add
in
dec
push
pop
gs
arpl
and
aam
and
in
dec
xor
mov
cmp
in
call
jns
movsb
gs
lret
pop
fldt
add
sarl
test
lret
int3
mov
bound
daa
dec
jbe
js
fcomps
popa
or
mov
popf
daa
cwtl
andl
push
movsb
pop
sbb
push
shl
fiadds
or
aaa
ret
aas
push
dec
jmp
ret
add
xchg
and
cmp
scas
xchg
shl
insl
or
jnp
dec
js
loopne
inc
mov
xor
mov
enter
pop
aas
inc
mov
xchg
mov
push
mull
mov
aad
fld
adc
cmp
test
fwait
xor
inc
adc
xchg
out
subb
xchg
mov
shl
mov
pop
shll
push
and
lock
xchg
jne
pop
sti
pop
jge
ss
adc
xlat
xchg
cs
jb
dec
push
pop
jae
ljmp
and
mov
mov
xchg
inc
cmpsl
adc
xlat
mov
sbb
insl
movsl
mov
mov
aam
jb
and
aas
jmp
test
mov
mov
stos
push
xchg
dec
enter
repz
xlat
add
mov
and
sarb
adcb
jno
pop
in
mov
test
out
add
bound
adc
push
xor
out
push
mov
cmp
jp
clc
push
xlat
mov
xchg
mov
push
dec
fucom
hlt
sub
cmpsl
mov
mov
insb
push
hlt
dec
and
mov
xor
inc
icebp
pushf
xor
int
add
xor
mov
inc
fistpll
mov
pop
out
mov
out
xlat
lret
mov
imul
adc
jmp
xchg
mov
mov
sbb
test
lods
xchg
sbb
jbe
popa
xchg
je
mov
aam
cwtl
inc
shll
or
rorl
repnz
xor
jecxz
adc
cltd
mov
cs
sub
xchg
and
sub
cltd
pusha
xor
movl
sub
pop
and
or
daa
aam
push
pop
xor
gs
jecxz
out
adc
data16
out
dec
fisttps
std
sar
add
addl
pop
repnz
loopne
push
repz
dec
inc
leave
jecxz
xor
cmp
add
and
rorl
subb
sti
sub
ret
sbb
lahf
int
pop
xchg
pusha
in
add
xor
sbb
jns
aas
push
stc
mov
xchg
jge
insb
sti
mov
je
xchg
fstpt
fcoml
cmp
cs
jp
lds
lods
out
stos
xchg
lock
fcompl
jns
sub
je
fwait
outsl
divl
pop
es
popa
mov
in
xor
cmpsl
cli
mov
ret
sbb
and
or
int3
pop
lods
out
jge
lds
or
in
cmp
jmp
mov
bound
fldl
pop
movsl
iret
aam
push
cmp
inc
scas
mov
sub
mov
dec
gs
enter
fcomps
sub
fidivl
jge
xchg
sbb
or
lods
and
add
in
push
xor
or
lahf
aaa
loope
fcoms
cmp
imul
adc
adc
pop
ret
stos
fbstp
cwtl
jb
shlb
sbb
leave
sub
and
mov
fmull
mov
mov
into
scas
pushf
mov
enter
mov
or
lret
or
int3
and
scas
mov
cwtl
pop
shlb
imul
in
xor
jnp
cmp
xor
mov
nop
jo
pop
iret
jecxz
xor
or
jp
test
test
hlt
clc
mov
xchg
leave
push
add
sbb
mov
lock
xchg
dec
jg
pop
xor
test
lods
mov
push
or
xor
mov
fwait
call
insl
mov
push
mov
aad
cmc
aas
es
fistpll
jb
pop
ja
call
inc
data16
jb
mov
sbb
mov
mov
jne
mov
add
sub
ljmp
push
mov
mov
inc
mov
fucom
jg
push
or
adc
push
sub
cmp
inc
jl
jo
mov
add
xor
pop
xchg
call
cmc
pop
mov
test
pop
stos
sahf
pusha
mov
scas
cmpl
sbb
movsb
add
mov
pop
aad
dec
mov
push
pop
mov
in
shl
and
pop
push
push
mov
fisttpll
cmp
mov
stc
daa
pop
mov
mov
sub
add
xchg
inc
shlb
ret
push
push
mov
and
mov
imul
in
shll
jae
pop
lahf
xchg
sbb
adc
movsl
mov
push
cmp
jge
mov
xchg
hlt
cli
sbb
jecxz
xchg
cli
out
lcall
cli
gs
cmp
mov
into
movsl
and
cmp
mov
jb
sbb
outsl
mov
mov
sbb
xchg
cltd
mov
sub
mov
cmp
mov
js
pop
je
jne
addb
and
mov
cli
mov
pop
add
add
jbe
jae
cmc
push
jp
mov
outsl
cmp
cmp
imul
adc
jne
mov
ret
sti
sti
ret
pusha
push
movsl
pop
fimuls
out
in
out
sbb
dec
in
pop
pop
jns
xor
cmpsb
aad
mov
xchg
fiadds
inc
clc
es
js
rclb
cmpsl
imul
in
or
inc
arpl
iret
call
ret
xor
js
cmc
adc
repz
lods
pop
or
cmp
xor
xchg
jp
pop
push
add
out
lock
mov
in
fxam
sub
lahf
sub
repz
repz
push
sbb
or
adc
movsb
mov
mov
jg
mov
jle
sahf
hlt
int3
mov
jo
xlat
test
pushl
inc
pop
cmp
popf
int
and
imul
lret
mov
aas
cld
push
dec
jg
jecxz
jo
aaa
cmpsl
stos
dec
pusha
stc
cmp
scas
and
pop
pop
pushf
ret
out
sub
mov
lea
popa
inc
sbb
lea
mov
or
pop
add
sbb
inc
test
lahf
push
push
sti
aaa
push
dec
jno
inc
loopne
sub
imul
sub
fs
cmp
insb
and
cmp
push
jne
sub
sub
insl
rcll
sub
push
out
jno
jo
nop
xchg
es
mov
adc
add
mov
pusha
cld
adc
cmp
int3
lock
adc
das
stos
xchg
inc
adc
sar
mov
mov
mov
je
das
cmpsb
in
mov
xor
jb
push
ss
cwtl
push
mov
test
sub
push
cwtl
pop
push
repz
jp
jb
repz
push
cmp
sub
xchg
pmuludq
mov
loopne
std
push
fdivs
sbb
fwait
shl
pushf
ret
jl
pop
dec
jmp
roll
nop
fimull
inc
cmp
jmp
xchg
stos
lret
ss
mov
mov
fdivrs
or
mov
jmp
jns
xor
sbb
pushf
test
dec
or
xlat
inc
cmp
cmp
cwtl
push
pop
cmc
mov
cmp
inc
push
sub
arpl
pushf
inc
xor
jbe
scas
das
jnp
clc
dec
sahf
push
mov
dec
filds
jl
sub
push
fs
aam
cmpsb
aaa
daa
or
cli
sub
push
lods
mov
sti
inc
jecxz
jmp
outsb
leave
gs
mov
xlat
adc
or
push
pop
imul
mov
add
data16
rorb
xchg
jg
ror
jg
push
or
push
test
scas
scas
out
mov
pop
lock
adc
jae
sub
ss
inc
mov
jbe
mov
inc
push
cmc
shrl
scas
fwait
or
cmpl
jns
adc
mov
lods
fisubl
scas
lea
mov
rol
dec
mov
jecxz
popa
cmc
push
mov
add
mov
xchg
gs
add
das
and
or
jne
mov
push
enter
adc
pop
jmp
cs
sub
ss
aaa
mov
fs
adc
xor
mov
cli
mov
or
out
mov
xchg
pop
xor
push
mov
sub
mov
mov
xchg
adc
add
pop
dec
inc
sbb
sahf
cld
jmp
inc
inc
jns
fistpll
fildll
into
test
mov
test
push
in
nop
pcmpgtd
in
je
repnz
stos
hlt
inc
push
cmp
inc
hlt
mov
adc
dec
leave
and
test
push
mov
pushf
pop
hlt
add
rorl
mov
int3
loopne
stos
jno
push
push
test
popa
ja
shlb
xor
xchg
int
push
push
dec
out
repnz
ret
adc
in
inc
jne
mov
add
pop
daa
sbb
cmp
lahf
dec
mov
gs
sbbb
xor
inc
adc
cs
call
xor
xor
add
into
mov
mov
enter
imul
sti
mov
ss
cmp
mov
inc
cmc
faddp
or
js
sub
mov
cmp
iret
sub
aad
clc
mov
in
jge
inc
inc
xchg
fs
adc
out
sub
gs
in
xchg
fwait
in
and
sub
or
push
xchg
add
and
outsl
jbe
and
pop
pop
cmpl
add
jbe
push
push
push
push
lea
cmp
pop
xchg
pop
orl
mov
sbb
fcompl
jecxz
push
xor
imull
mov
cmp
or
dec
dec
jno
inc
movsb
or
pop
shl
dec
cmp
iret
xchg
sbb
adc
cmpsl
fnstenv
in
jns
hlt
adc
test
cmp
xor
adc
lea
scas
call
aam
js
addl
mov
pop
faddl
adc
rclb
pop
das
or
lock
jmp
jl
aas
mov
loopne
add
in
neg
aaa
ja
addr16
insb
shrb
and
ret
pop
test
sub
das
xchg
and
mov
mov
xor
mov
out
inc
call
xchg
sub
or
mov
enter
lret
push
sbb
sbb
sub
jl
sub
test
loope
xchg
sub
pop
fadds
xchg
pop
push
jg
mov
pushl
iret
sbb
cmpsb
insb
mov
cmpsb
pop
loope
stos
pop
bound
nop
gs
fidivrl
push
xchg
xor
pop
sub
xchg
sti
xchg
fistpll
add
jns
inc
sbb
daa
push
lods
dec
int
adcb
out
dec
xchg
cmp
shrb
pop
ret
in
scas
xor
pop
push
or
xchg
in
push
jmp
pop
aas
shrb
pop
cltd
jg
je
iret
mov
ja
stos
fbstp
stos
sub
push
jnp
aam
adc
jle
fidivl
xchg
sub
mov
repz
cmp
enter
push
add
jno
and
imul
fs
and
cmp
into
aad
sub
sbb
adc
inc
int
mulb
enter
lea
xchg
mov
cmpsl
cmp
push
mov
jg
stc
cld
jno
test
dec
fs
lods
lret
and
adc
cld
cmp
xchg
jp
das
xor
dec
scas
xorb
icebp
or
cmp
xchg
mov
pop
xchg
mov
clc
fbstp
mov
aam
fdivrl
xor
sub
fimuls
mov
loop
mov
inc
jne
div
jo
and
out
push
adc
add
jecxz
dec
and
adc
xor
hlt
or
xlat
shrb
xor
xor
xor
pop
js
outsl
cli
mov
push
mov
push
push
sbb
dec
mov
sbb
push
outsb
sbb
cmp
aas
lds
and
mov
jb
lcall
dec
aad
js
mov
xor
push
pop
mov
mov
movsl
cmp
clc
cli
mov
sbb
lret
aad
hlt
ret
pop
mov
xor
icebp
xchg
push
xchg
xor
cld
xchg
test
mov
cmpsl
int
sub
xchg
fisubrl
gs
jecxz
cmp
fs
sub
dec
repnz
ret
pop
cmpsb
jne
movsl
xchg
inc
gs
scas
pop
mov
or
lods
adc
pop
enter
fs
jge
lahf
fmull
fstl
jl
adc
push
sahf
pop
fisubrs
push
push
movsb
add
jo
adc
or
jns
rorb
int
pusha
jp
sbb
adc
das
mov
push
xchg
xchg
mov
mov
pop
xor
stos
sbb
adc
popa
jg
mov
cmp
ror
mov
jo
pop
sub
lahf
xchg
xchg
jl
jns
cwtl
loopne
xor
js
cmpl
bound
imul
roll
and
or
push
add
mov
xor
add
inc
outsl
push
enter
stos
aam
arpl
xor
insb
je
xchg
frstor
incb
movsb
pop
sti
mov
fldl
jnp
xor
insl
enter
cmpsb
inc
or
out
in
movsb
call
fiaddl
xchg
sub
inc
pop
mov
ret
cmp
insb
and
mov
or
stos
sub
push
pop
cmpsb
leave
lcall
sub
test
jno
cltd
mov
cmpsl
subb
popf
push
imul
stos
out
or
jecxz
out
lcall
jecxz
lock
shl
push
std
cmp
nop
js
dec
lahf
inc
addl
dec
in
xchg
pop
mov
fistps
sub
push
jle
mov
dec
mov
mov
inc
insb
and
in
stc
adc
int3
in
pop
repnz
lock
sbb
mov
movsl
bnd
jg
mov
add
arpl
nop
das
rcl
inc
xchg
popa
xchg
out
jne
push
jg
lea
push
nop
testl
sti
and
sub
xchg
jnp
call
sbb
loop
xchg
dec
sbb
mov
mov
lret
call
and
in
pop
jo
or
mov
test
fnsave
test
push
insb
pop
ficoml
in
mov
push
cwtl
dec
push
pop
and
aad
jbe
stos
pop
xor
in
into
cs
out
cmp
ret
mov
outsb
xchg
aad
roll
out
dec
mov
movsl
sub
aaa
mov
dec
jb
js
mov
addr16
outsb
mov
mov
insl
fs
xor
jl
jbe
jmp
out
xchg
mov
push
mov
xchg
dec
pop
outsl
xchg
outsl
xor
outsl
pop
push
fld
repnz
inc
scas
popa
push
popl
callw
jo
in
xchg
mov
insl
mov
les
push
ret
sbb
xchg
mov
xor
in
inc
cmc
aaa
addr16
xadd
mov
dec
dec
sbb
les
push
mov
push
ret
pop
add
jns
add
sub
sub
xchg
lret
adc
mov
cmpsb
xchg
mov
xchg
ror
in
popf
dec
cltd
or
sub
sub
mov
mov
xor
loop
adc
jg
mov
adc
seto
inc
mov
in
out
pop
test
in
sbb
repnz
adc
cs
iret
jnp
pop
dec
mov
les
scas
push
xor
mov
adc
imul
inc
jnp
cmc
jns
cmp
xchg
or
sbb
clc
and
xor
jbe
xor
stc
scas
jmp
mov
xchg
in
fwait
arpl
jnp
outsl
lea
adc
xchg
fistpl
dec
mov
lret
fimull
fstl
or
xchg
add
xor
sub
and
out
and
imul
and
jl
imul
pop
loopne
sub
popf
stc
loope
jp
push
in
pop
mov
jns
mov
xabort
mov
dec
popf
push
arpl
sub
into
cmp
cmp
xorl
call
mov
lock
and
lods
imul
clc
rorl
dec
dec
outsl
mov
dec
les
std
adcl
mov
xchg
aas
or
cmp
sbb
pop
xchg
outsb
in
ret
std
clc
and
fisubrl
lods
pop
and
pop
mov
mov
jb
sbb
dec
int3
or
fsubp
iret
outsb
xchg
loopne
mov
int3
movl
rolb
pop
and
push
add
and
cmp
mov
test
lods
push
testb
addr16
addr16
imul
or
popa
or
rol
pop
mov
cmp
cmp
ljmp
aas
popa
push
lea
daa
jno
mov
lahf
rolb
std
push
out
mov
outsl
cwtl
lcall
push
outsb
ds
jnp
ret
mov
popfw
sub
sub
cmp
fistpl
adcb
cwtl
sahf
dec
ss
jle
lds
cltd
dec
jmp
aas
inc
js
ja,pn
jl
xchg
out
daa
inc
je
jp
cmp
jge
or
nop
dec
sub
bound
mov
cmp
jne
fsubl
jmp
adc
and
dec
fists
into
push
pop
push
in
aaa
jl
fs
popf
jae
mov
aaa
outsl
out
inc
xor
iret
add
cmp
inc
xchg
inc
nop
mov
dec
cmp
and
pop
push
push
mov
je
push
test
pop
inc
xor
xor
xchg
in
cmp
xchg
movsb
and
mov
jno
pop
je
clc
lret
mov
push
es
lock
mov
jbe
insl
add
or
push
xchg
xchg
push
xlat
rorb
cmp
or
xchg
add
inc
ret
js
mov
in
add
sub
loope
xor
jo
iret
mov
inc
loop
sub
lret
iret
pop
fwait
pop
cltd
xor
sub
ret
inc
cld
sbb
fwait
shr
adc
icebp
clc
dec
pop
push
cmp
mov
jo
dec
outsb
sarl
ret
dec
enter
insl
mov
insl
lods
pop
mov
adc
add
fisttps
clc
negl
dec
mov
ret
push
iret
jp
ret
lds
in
adc
mov
shll
je
xchg
cmpsl
pop
xorl
cs
push
test
clc
insb
cmpsb
pusha
jp
sbb
jae
mov
loope
pushf
daa
out
ja
sub
ss
and
cwtl
mov
and
test
fiadds
adc
inc
mov
push
sarl
mov
mov
pop
dec
pop
outsl
cli
mov
cmpsl
lods
jb
pop
add
jg
and
mov
lods
sub
ret
cmc
sbb
mov
inc
sbb
clc
xor
xor
dec
and
fdivs
fwait
les
lret
mov
filds
inc
std
test
pushf
data16
mov
repz
mov
insb
in
data16
fidivrs
dec
bound
aad
adc
mov
or
inc
jl
in
sub
dec
pushf
or
xor
mov
test
shl
pusha
mov
mov
sub
pop
push
imul
jecxz
jnp
popf
adc
insl
mov
or
loop
and
int3
lods
mov
mov
test
add
xor
add
inc
addr16
pop
das
les
sub
setns
decl
cwtl
jns
outsl
mov
dec
ja
out
mov
fstpt
mov
roll
shl
movsb
jmp
mov
mov
mov
jae
outsb
push
add
xchg
cmp
cmc
and
and
xor
loopne
mov
outsl
pop
fidivrs
and
mov
push
popa
inc
add
push
mov
lea
xchg
bound
push
mov
lret
frstor
sub
pop
jg
dec
test
xchg
mov
dec
leave
mov
mov
jle
inc
out
dec
fldlg2
pop
mov
jbe
aaa
mov
sar
push
imul
dec
sub
xchg
cwtl
in
push
jmp
imul
fs
xlat
push
aaa
rolb
push
cmp
sbb
out
loopne
shl
aaa
leave
adc
and
ret
and
sbb
xchg
popl
lret
cmovo
movsb
add
testl
arpl
sub
out
sub
pop
and
or
xchg
sbb
jp
xor
mov
jmp
fwait
outsl
ss
add
repnz
fadd
xor
int3
fistl
xor
adc
mov
push
mov
subl
sub
imul
dec
outsb
popa
or
inc
gs
mov
mov
sub
and
int
push
inc
add
std
popa
sub
rcll
mov
adc
clc
sub
add
add
xlat
mov
lcall
jnp
sbb
scas
repz
jbe
outsl
cmp
mov
and
add
je
xor
mov
inc
adc
pop
fmulp
mov
xor
jb
fdivr
jae
adc
ret
insb
inc
scas
jecxz
jns
and
cli
dec
jne
fidivrl
jb
cwtl
incb
xchg
jmp
push
cmp
repnz
adc
xchg
rol
cmp
in
cmp
or
ret
rolb
lds
pop
repz
mov
push
dec
mull
and
test
scas
fdivl
hlt
push
fmull
int3
pop
sub
cwtl
lock
or
xchg
push
jnp
xor
js
popa
and
add
das
or
dec
decb
fcmovne
inc
sbb
pop
loope
sbb
arpl
mov
icebp
mov
jp
lcall
cmpsb
jnp
jae
adc
xor
jae
sub
cmc
sbb
cmp
pop
jmp
out
pop
cmp
popa
loop
cmpsb
sub
xchg
dec
jle
sub
cmp
inc
lret
mov
fcoml
pop
aad
std
scas
mov
jno
mov
jecxz
pusha
push
lcall
int3
pop
cmp
xor
stc
andl
cli
lcall
and
push
ss
mov
xor
outsl
push
push
push
bound
leave
dec
push
dec
and
in
push
enter
sarl
xor
inc
dec
cmp
inc
data16
push
add
xchg
es
or
call
mov
cmpsb
clc
or
mov
xchg
or
testb
icebp
mov
xchg
jmp
sti
aad
or
and
xor
sahf
jns
aam
shlb
dec
xchg
lea
stc
int3
dec
test
in
fwait
xchg
jmp
test
mov
add
sub
xchg
cmp
js
nop
cwtl
jl
cmc
shlb
scas
mov
sbb
aas
imul
ljmp
data16
imul
test
xchg
sub
sub
ljmp
mov
ret
cmpsl
or
add
dec
test
stc
pop
cmpsl
sbb
jle
jle
sub
xor
mov
test
jb
loopne
popa
jnp
fnsave
loope
dec
pop
clc
adc
xchg
gs
inc
sbb
in
lahf
sbb
lea
cs
mov
and
cwtl
jmp
sbb
mov
xchg
ds
jle
aaa
testb
in
sahf
sub
pop
cmpsl
repnz
pop
stc
jmp
xchg
mov
sbb
mov
inc
pop
data16
clc
ds
lahf
test
xchg
mov
ficompl
fcmovbe
ja
aaa
pop
inc
ficoms
je
sub
mov
sbb
sub
add
pop
sub
pushf
pop
ret
push
mov
jae
jns
push
mov
in
rorl
aam
mov
test
mov
sub
ljmp
dec
sub
and
jnp
iret
pushf
fmuls
fbstp
das
repnz
xlat
or
and
hlt
aaa
fneni(8087
lcall
xchg
or
dec
les
daa
inc
sti
mov
ficomps
insl
mov
imul
shll
addr16
push
sub
fmull
cmp
push
mov
mov
jecxz
rolb
xchg
mov
pop
xchg
adc
ljmp
movb
or
xor
xchg
popa
repz
jo
pop
jge
in
pop
nop
dec
aas
xor
repnz
dec
in
inc
push
push
cli
adc
pushf
stos
jae
jmp
fmuls
adc
fisubrs
xchg
cmp
lcall
lods
lods
mov
imul
imul
orb
test
pusha
xchg
dec
into
cmpsl
lcall
xor
call
nop
push
fnop
xor
or
adc
inc
daa
push
dec
and
lods
pop
mov
dec
lcall
mov
cwtl
ret
mov
xor
mov
nop
cmpsl
cli
rcrl
lock
mov
inc
mov
sub
inc
das
ja
pop
shr
aam
mov
mov
inc
fwait
add
inc
sbb
stos
inc
jp
inc
sahf
dec
sbb
jo
pop
push
push
dec
xor
fs
and
jbe
pop
and
outsl
pushf
jo
sub
test
dec
mov
fcmovbe
cmp
xchg
out
xchg
adcb
mov
loopne
cmp
repz
xchg
dec
js
aaa
clc
sub
or
js
push
mov
icebp
push
sbb
xchg
sub
ror
mov
repz
insl
adc
or
test
or
out
test
or
xchg
pop
cmp
ljmp
ret
sarb
or
pop
xor
push
and
aam
scas
pop
sub
or
xor
and
pusha
inc
jge
and
mov
cmp
jg
pop
or
dec
fidivs
mov
out
mov
mov
sbb
fsqrt
and
dec
fidivs
fdiv
and
push
xor
adc
mov
dec
mov
xor
stos
lret
push
jmp
mov
fsubrs
cmp
xor
add
pop
and
xor
outsb
sub
xorl
cmc
xchg
testb
push
lods
adc
adc
cmp
fnstenv
mov
lock
cwtl
xchg
jnp
shrb
aas
ficoms
loopne
sbb
es
pushw
imul
ret
out
mov
sbb
test
lods
or
and
sub
es
jg
and
pushl
orb
insl
scas
mov
adcl
sub
std
pushf
mov
xchg
xchg
dec
inc
dec
pop
fnsave
lock
aas
pushl
scas
addr16
neg
pop
cmpsb
mov
cmp
rcrb
es
xchg
jp
fsts
inc
sbb
cmp
pusha
jp
fcoms
hlt
cmc
imul
test
fidivl
orl
pop
clc
cmp
push
bound
hlt
push
fstpl
mov
push
adc
sti
mov
add
in
jmp
vpavgb
or
pop
outsb
cmp
fldl2e
nop
movsb
and
clc
addr16
jns
shl
sbb
mov
loopne
rclb
rorb
addr16
lcall
xor
xchg
add
push
das
dec
jb
xorb
cmp
cmp
movsb
lret
push
push
bsf
jb
shrl
dec
into
bound
dec
stc
das
test
out
xor
jmp
sarl
sti
push
fs
pop
jg
cli
jnp
mov
cmp
loopw
jb
mov
into
pop
and
popa
call
imulb
cmp
add
mov
cs
pop
sbb
add
add
and
add
mov
sti
fildl
sbb
xorl
lret
das
sub
sbb
les
movsb
loopne
mov
cmc
mov
loopne
mov
jo
push
ret
sarl
daa
mov
cmp
xchg
bound
imul
out
lret
push
popa
or
cmp
xchg
sbb
nop
jo
push
pop
sub
loopne
jne
in
scas
leave
pop
push
and
dec
push
dec
jmp
cmpl
fs
icebp
cli
jecxz
ficompl
sarl
add
jb
mov
mov
sbb
loope
sbb
into
xorl
cmp
cld
decl
sub
outsl
xchg
mov
daa
and
and
push
ds
or
inc
enter
push
xchg
sub
xor
or
dec
jne
ljmp
dec
dec
push
repnz
inc
iret
cmpsl
gs
xor
sub
lret
mov
and
lea
rorl
push
insl
push
sub
icebp
sbb
imul
lcall
dec
push
out
or
stos
add
mov
clc
loopne
fistpll
mov
mov
add
cmpsl
outsl
bound
push
xchg
add
mov
jb
add
add
fstpt
shlb
jmp
xchg
cmc
call
add
shrb
push
and
lcall
xor
sbb
aas
aas
mov
cmp
cmc
jp
and
xor
mov
cmpsl
lcall
ror
jae
xor
cmp
sub
jmp
lea
mov
mov
icebp
mov
fwait
bound
popf
cmpl
test
cmp
test
shrl
adc
std
adc
daa
push
xchg
pop
push
add
outsb
jns
or
add
fdivrl
repnz
das
cwtl
or
cmp
insl
ret
cmp
push
push
xchg
in
adc
or
and
jle
or
into
push
fldpi
adc
nop
cmp
sahf
les
mov
mov
mov
and
lahf
ret
inc
cli
jo
xorb
inc
dec
lcall
push
je
ret
shrl
ds
enter
orb
xor
loopew
or
aad
xor
outsb
sti
sub
xchg
fcomps
incl
popa
xor
cmp
repnz
and
mov
pop
pusha
aaa
mov
push
sub
ljmp
and
and
loop
mov
movsb
adc
mov
or
decl
pop
jb
sub
xor
mov
cmc
cltd
outsl
add
loope
jmp
jnp
fbstp
fstl
ljmp
cmp
mov
push
test
jmp
push
adc
clc
outsb
sbb
inc
jle
ret
call
mov
lods
mov
in
aaa
pop
nop
xchg
popf
scas
jp
addl
cli
jb
xchg
mov
lret
cmp
sub
icebp
cwtl
xor
dec
cmp
sti
shl
mov
pusha
mov
push
hlt
popf
cwtl
mov
popa
adc
rep
mov
adc
sbb
mov
add
lods
lahf
mov
push
add
inc
ss
aam
cmp
dec
jo
shll
push
adc
loope
out
lret
push
push
and
sbb
mov
cmpsb
mov
sarl
bound
add
loop
je
sbb
call
jecxz
dec
mov
dec
stos
push
pusha
arpl
push
lret
std
xchg
mov
call
xchg
ljmp
dec
mov
ret
dec
cmp
add
rolb
popa
inc
ds
lret
mov
xor
dec
adc
dec
adc
stos
sbb
int3
lret
add
push
stos
jge
insb
imul
mov
ljmp
mov
sub
popf
xor
dec
cwtl
fcmovne
shrl
ret
fsubl
testl
cmpsl
idiv
cwtl
movsl
cli
mov
ds
cmpb
push
div
push
dec
or
mov
or
sub
xchg
ljmp
loop
adc
cmp
xor
push
dec
jno
add
in
sbb
mov
mov
das
or
xchg
ficompl
ljmp
lods
test
mov
cmp
mov
das
das
mov
cs
mov
outsl
mov
cmp
lcall
inc
call
scas
sti
sub
and
sub
mulb
in
or
sti
nop
xor
fs
ficompl
nop
jae
sub
sub
jmp
adc
out
dec
loope
sbb
add
lock
pop
test
jns
mov
jae
xchg
cli
push
pop
test
ret
stos
sahf
out
sub
pop
inc
push
and
mov
pusha
xor
push
out
push
ret
fsubl
lock
orb
enter
add
mov
and
jp
xchg
xlat
aad
lods
jg
sbb
sbb
nop
xchg
sub
addr16
cmp
cmp
lock
mov
xor
sbb
aad
das
push
cli
push
stos
or
sub
push
adc
ss
mov
aas
lret
mov
lret
sbb
lret
addr16
std
loop
std
aas
mov
or
jae
xor
xorb
rcl
mov
mov
movsb
aaa
and
idivl
pop
add
repz
mov
pop
cmc
ljmp
and
or
dec
and
sub
xchg
sbb
mov
loope
rolb
inc
int
filds
imul
lahf
idivb
push
adc
xlat
scas
push
pop
fstp
adcb
or
pop
je
push
mov
jle
fidivrs
clc
fisubs
inc
addb
outsb
add
xchg
andb
gs
jns
jmp
sbb
sub
cli
or
out
push
xlat
clc
pop
scas
leave
pop
push
addb
cmpsl
mov
xchg
or
hlt
sub
and
add
clc
shrl
sbb
lock
sbb
rol
jae
mov
js
lock
xchg
lods
fs
push
in
pop
sbb
mov
mov
movsl
fcomps
pxor
and
popf
jecxz
jb
adcl
out
subl
je
xor
cmp
adc
jo
jae
and
push
add
ss
push
jmp
ds
adc
and
lret
fisttpl
out
lret
push
mov
xor
mov
fstps
repz
mov
cmp
inc
sbb
in
cmp
or
cmc
gs
jne
jo
mov
dec
inc
scas
mov
inc
testl
popf
lret
jbe
lcall
mov
out
nop
jne
inc
push
hlt
push
sahf
and
divb
popf
xor
fldenv
divl
cmp
bound
pop
int
add
mov
test
out
das
out
repnz
xlat
hlt
test
sub
imull
in
out
outsb
sbb
mov
inc
sub
xchg
std
jae
popa
aaa
inc
ret
and
xlat
cld
jmp
add
jmp
pop
aaa
mov
nop
inc
call
loope
push
fiadds
pop
testl
int3
iret
or
adc
lea
lret
in
push
sbb
out
mov
and
call
cmp
add
mov
adc
dec
outsb
je
mov
leave
mov
std
jecxz
xor
dec
push
mov
mov
cmp
mov
aas
mov
call
test
inc
cmpsb
and
push
fs
add
fcomps
out
push
push
movsb
enter
out
xchg
repnz
aas
movsl
test
sbb
push
mov
lock
rolb
cmp
push
lea
lods
xor
lods
xor
mov
fcompl
mov
push
jne
cmp
std
mov
sbb
popf
mov
ljmp
pop
jmp
sti
fistpl
and
dec
push
lds
iret
jecxz
test
mov
xchg
pop
pop
sbb
ret
inc
add
jmp
inc
outsl
stc
push
repz
or
loope
stos
mov
test
stos
or
lods
add
in
adc
inc
in
mov
and
xchg
ret
loopne
sbb
rorb
jbe
call
xor
sahf
mov
mov
add
pop
cld
fwait
cmp
outsb
stc
and
outsl
dec
iret
dec
cld
add
call
js
cld
jp
mov
cmp
test
sbb
pusha
scas
dec
inc
sub
adc
lods
daa
mov
sbb
mov
insl
shl
inc
lea
dec
insb
cwtl
shlb
xor
shlb
xchg
iret
lret
mov
dec
inc
dec
sbb
lods
push
adc
sbb
aas
or
mov
xchg
adc
mov
dec
adc
lods
xchg
into
outsl
arpl
pop
ja
cmp
ret
inc
push
pop
mov
add
dec
mov
inc
xchg
je
inc
jge
adc
lds
sahf
jns
lcall
jb
bound
pop
xchg
push
pop
pushf
fldenv
cmp
scas
and
jmp
xor
cmp
out
jg
mov
pop
adc
iret
mov
inc
div
cs
in
fldcw
inc
and
pop
insb
lcall
bound
dec
xor
scas
jp
lods
int3
lods
dec
imul
iret
xchg
into
popa
sub
scas
push
jge
push
addr16
enter
lea
cmc
or
xor
fs
jae
add
mov
pop
ror
fcmovnbe
std
pushf
testb
pop
mov
adc
mov
test
adc
sub
add
out
inc
sub
fmuls
iret
lock
dec
or
cli
fs
sub
sti
into
clc
cld
out
jmp
ret
inc
rorl
xchg
fisttpl
fwait
mov
xorl
inc
rcll
fnstsw
mov
div
mov
sbb
mov
stos
sbbb
popf
sbb
pop
push
das
push
xchg
xchg
cmp
jle
dec
mov
outsl
call
jo
hlt
cs
jl
jne
pop
lods
sbb
loope
inc
sbb
push
inc
add
je
add
push
int
sahf
fistps
mov
add
adc
in
push
movsb
aaa
and
sub
daa
xor
mov
test
mov
or
mov
popa
sarl
aad
lea
sub
xchg
push
lea
negl
jne
fwait
in
mov
add
imul
inc
gs
pop
pushf
jnp
pop
ja
rolb
sahf
clc
inc
adc
int
call
out
ljmp
out
mov
rolb
ljmp
jecxz
fs
inc
pop
and
pop
fiadds
imul
mov
mov
push
pop
pop
rcr
pop
jne
pushf
add
mov
xchg
leave
loop
out
push
pusha
leave
jg
pop
mov
dec
xor
dec
js
pushf
and
push
nop
movsb
jle
popf
dec
adc
pop
sub
and
pusha
mov
aad
xchg
bound
sbb
pop
outsb
imul
ret
test
jp
add
sub
push
insb
cld
dec
add
adc
lcall
pusha
subl
test
push
mov
pop
adc
insl
lea
or
cmp
xlat
cmpsl
cmp
std
loop
mov
lret
push
jo
inc
addr16
fldt
clc
sub
pop
pop
nop
mov
inc
jne
sbb
pop
xlat
cmp
xorl
loope
push
mov
fsubrl
and
xchg
addb
cmp
out
incl
sub
repz
pusha
sarb
and
insb
mov
call
orl
lret
shrb
adc
addr16
in
iret
jmp
sub
repz
pop
pop
in
je
daa
jge
or
jmp
and
jnp
js
cmp
repnz
ret
adc
push
adc
es
xchg
push
jbe
xor
sbb
cltd
insl
sahf
or
cmp
imul
and
imul
pop
push
daa
cld
mov
ret
push
jmp
or
xchg
and
cmpsb
nop
dec
cmp
js
test
fdivl
sub
push
xor
pop
in
mov
and
daa
mov
and
and
js
jb
aad
iret
fucomp
cwtl
add
inc
inc
inc
dec
enter
mov
push
imull
fimull
push
cmp
sub
add
jnp
push
test
pop
aad
add
out
inc
loopne
mov
in
push
lock
repz
hlt
mov
cltd
out
test
adc
or
das
dec
xchg
enter
negb
mov
jne
sbb
mov
sar
rorb
loopne
xchg
cvtdq2ps
sbb
ds
in
aam
mov
lcall
imul
mov
xchg
jne
in
shlb
xor
repz
jae
jo
lret
inc
mov
jmp
push
pop
mov
inc
sbb
int3
lahf
fsubrl
pop
or
stos
cld
int3
filds
dec
loope
mov
addl
cmp
testl
mov
repz
iret
fistpll
repz
mov
push
xchg
xchg
rol
adc
mov
pop
pop
lea
js
das
mov
scas
jns
div
mov
mov
jecxz
push
push
pushf
daa
imul
jne
adc
adc
pop
jo
addb
jge
adc
mov
notb
xor
jecxz
paddusb
mov
stc
out
fs
scas
mov
outsl
push
jg
shr
out
xchg
mov
arpl
popf
push
cmp
pop
outsl
cmpsb
inc
jne
fcmovne
jno
xor
scas
nop
pop
loope
ret
cmp
mov
inc
mov
mov
fsubl
icebp
adc
push
call
mov
mov
or
test
fidivl
loop
stc
jecxz
pop
or
rep
rcrb
cmc
mov
fisttps
popa
int
lret
testl
dec
xchg
push
dec
sub
add
jb
and
adc
jmp
daa
add
je
outsl
xor
sub
jl
daa
fisubrl
add
xchg
insl
fnstsw
sub
sbbl
and
ret
pop
arpl
scas
bound
das
das
sub
push
jo
xchg
dec
sbb
sbb
repz
mov
pop
xchg
insl
cmp
pop
imul
dec
mov
jbe
push
or
adc
push
push
cs
ret
pop
in
jnp
mov
lods
jnp
sub
pop
dec
add
sbb
jl
mov
mov
add
das
lods
mov
imulb
or
ss
sarb
ljmp
sbb
fsubrl
or
mov
sub
test
lock
jge
mov
jle
mov
aad
aam
mov
sub
ucomiss
xor
push
in
cmpsb
jae
movsl
add
or
xchg
or
lea
jl
es
shlb
sub
pop
cs
repnz
popa
push
jbe
in
mov
push
movsl
cmp
outsl
out
push
and
push
fwait
sarb
dec
mov
iret
bnd
pop
aad
fnop
es
pop
or
mov
add
add
inc
mov
or
sub
test
jg
mov
cmpsb
add
cmp
pop
mov
mov
push
loopne
stos
add
mov
mov
mov
mov
sbb
loope
pop
into
xchg
push
xchg
ret
xchg
movsl
aad
adc
and
fcompl
jmp
inc
fwait
testb
fsub
pusha
rcrl
in
dec
mov
in
inc
jbe
rolb
ss
xor
rcrl
xchg
xor
cmp
lahf
les
jo
fadds
test
dec
enter
test
imul
xor
mov
es
mov
lea
push
aam
cmp
cs
pop
dec
cmp
iret
faddl
lret
ljmp
inc
scas
adc
pop
jge
jno
xchg
pop
das
loope
pop
mov
stc
inc
sbb
cmp
insl
push
das
xchg
xor
cmpb
pop
leave
adc
test
outsb
out
and
popa
jnp
out
adc
and
inc
xlat
pop
and
inc
lock
movsb
pop
pop
jb
push
dec
xchg
push
insb
and
dec
subb
imul
push
pop
mov
pop
adc
dec
leave
fwait
scas
hlt
daa
push
mov
ret
xor
adc
mov
ss
pop
nop
daa
hlt
push
jns
mov
mov
push
sbb
fs
divb
fidivs
or
push
imul
ret
mov
in
xor
pop
add
mov
outsl
mov
out
cmp
sub
lods
cmp
testl
movsb
imul
mov
mov
mov
pop
or
sub
cmp
das
pop
xchg
jbe
add
jbe
inc
push
inc
in
aam
sbbb
cmp
mov
push
dec
jp
inc
ljmp
xor
in
mov
mov
enter
call
mov
repz
pop
ret
cmpsb
aad
inc
push
jl
mov
inc
mov
xchg
xchg
fildl
pop
pop
pop
imul
fwait
adc
outsl
mov
je
inc
xchg
inc
adc
int3
sti
aam
pop
push
fsubrp
xor
cmpsl
xor
sbb
lret
lret
adc
je
mov
add
xchg
xchg
push
sub
mov
hlt
popa
clc
sbb
dec
push
mov
shll
ja
cmp
icebp
xchg
std
sub
pop
or
inc
push
lret
cld
int3
mov
sbb
rcrl
mov
cmc
mov
xchg
cmpsl
xor
dec
xchg
xchg
jne
push
cmp
cmp
fcmovnb
sub
shr
scas
sub
mov
mov
adc
xor
pop
outsl
mov
inc
mov
imul
outsb
pop
mov
pop
stos
jg
dec
push
aaa
outsl
out
adc
mov
jno
icebp
xor
mov
mov
and
sbb
adc
jbe
fcompl
pop
test
fimull
call
cli
fwait
lods
rorb
sub
and
fld1
dec
pop
fdivl
test
sub
shlb
shll
sub
sub
movsb
sub
outsb
insl
inc
lretw
pop
int3
xchg
inc
in
push
and
cmp
jle
in
push
add
testb
mov
mov
fwait
adc
cmp
mov
cld
hlt
js
imul
sub
xchg
outsl
popf
xchg
or
and
sub
and
jl
pop
addl
lds
adc
int3
movzwl
lock
ror
leave
fdivrp
or
fcompl
mov
jnp
dec
or
push
mov
dec
push
sub
mov
jne
outsb
mov
xchg
lcall
outsb
insb
push
nop
sub
xchg
jle
fmulp
das
mov
xchg
popf
mov
sub
or
call
adc
imul
out
push
test
scas
push
fwait
mov
test
mov
loop
push
je
jns
sbb
push
mov
mov
sub
jl
jnp
nop
sub
test
cmp
movl
mov
and
shlb
cmc
cmp
dec
int3
jmp
ss
pushf
xchg
and
js
mov
fidivs
jmp
mov
mov
aam
xchg
mov
es
or
loopne
add
int
ret
mov
ljmp
pop
mov
mov
insl
sti
or
add
cld
inc
and
rclb
mov
aam
aas
iret
test
cwtl
lock
mov
mov
cltd
int
push
pop
and
xor
aas
repz
es
and
mov
dec
push
shrl
imul
shr
in
dec
or
pop
add
mov
icebp
icebp
and
sbb
or
sub
dec
pop
std
fcomps
lods
pop
sahf
mov
lock
pusha
dec
mov
andl
lcall
imulb
xor
jnp
jne
sti
adc
xchg
dec
inc
mov
jg
mov
cmc
jbe
mov
stc
lock
pushf
je
sub
repz
cld
xor
lea
sbb
push
in
and
cli
pop
cmp
fldt
jmp
mov
sbb
push
and
xlat
in
jne
add
ret
inc
fstpt
pop
fisttps
cmpl
mov
dec
clc
imul
sti
icebp
sbb
xor
loop
les
cmpsb
int
pusha
in
dec
push
cmp
xor
push
sti
cmp
iret
and
add
addl
jbe
or
jmp
inc
loop
aad
cmpsb
dec
stos
cvtpi2ps
sub
ret
dec
leave
sbb
insl
and
dec
inc
jnp
clc
or
and
cmpsl
push
ljmp
sti
inc
jno
mov
mov
inc
cmp
or
or
push
adc
pusha
cmp
cmpsl
int
cld
sbb
int
xor
ret
sbb
movb
outsl
pop
mov
scas
fdivs
adc
std
decl
xor
xchg
imul
and
push
mov
nop
cmp
mov
cmp
jnp
test
je
push
inc
cmp
addr16
xlat
xchg
lods
lret
jns,pn
inc
xor
push
fisttpll
add
fsubrl
bound
test
into
imul
mov
les
push
add
mov
push
loop
test
or
les
lcall
loop
pop
inc
adc
mov
dec
push
in
mov
push
pop
adc
sbb
mov
out
ficompl
dec
mov
in
dec
dec
cli
xchg
mov
addl
mov
leave
and
jne
add
scas
xorl
dec
jge
aam
sub
outsl
pushf
xchg
mov
outsb
xchg
lea
adc
add
leave
lock
cmc
cmp
and
push
addr16
shlb
push
mov
stos
and
jecxz
adc
rcrb
movsb
fcomps
and
or
and
jbe
enter
pop
and
stos
mov
insl
or
mov
and
call
scas
in
rolb
adc
xchg
inc
push
and
push
push
pop
or
jle
fmull
enter
aas
sbb
jmp
mov
mov
mov
movsl
adc
lods
mov
arpl
lcall
xor
rcrl
push
andl
rcr
xchg
xchg
fidivrs
addl
push
lret
xchg
sub
mov
ljmp
or
ljmp
addr16
je
jb
loop
xchg
pop
add
jbe
jno
imul
stos
ss
icebp
lahf
data16
cltd
es
enter
out
std
lds
pop
xchg
test
in
clc
add
mov
xchg
or
inc
outsb
push
mov
fists
mov
test
ja
cld
pop
dec
pmuludq
mov
cmpsl
xor
inc
xor
xchg
dec
pop
and
shl
xchg
rcrb
pop
xchg
clc
and
and
iret
lods
ss
jp
loopne
pop
mov
sahf
push
xchg
jmp
sarl
aad
cmpb
idivl
fsubp
lcall
pop
mov
jge
in
daa
xor
jns
ss
mov
adc
cmp
imul
call
push
out
decl
je
add
push
sub
inc
mov
inc
icebp
or
stos
adc
inc
jae
push
out
pusha
push
ret
movq
xorb
jns
dec
inc
inc
xor
dec
inc
fmulp
cmp
sub
imul
mov
dec
sub
fmuls
in
arpl
add
call
dec
out
xchg
scas
and
lret
int3
and
in
and
cmc
arpl
adc
inc
fildll
push
cli
jecxz
inc
enter
int3
mulb
jl
pop
movsl
fsubrs
ljmp
les
cmp
xchg
shlb
popf
fldt
mov
xchg
mov
dec
outsl
adc
cmp
push
push
add
push
sbb
or
lods
insl
jmp
loopne
jmp
inc
outsl
ret
and
scas
mov
out
sbb
arpl
ljmp
test
add
sbb
es
fnsave
push
cmp
xor
xchg
nop
adc
imul
xlat
sbb
lds
iret
std
andl
or
xor
std
inc
insl
dec
addr16
pop
mov
push
pop
or
rclb
xchg
cmpsb
mov
sub
mov
ja
testb
stos
loope
pop
push
rcrl
jae
je
inc
arpl
imul
cmpsl
mov
or
inc
xlat
rol
xchg
fdivrp
cmp
push
jbe
jecxz
xor
jae
out
out
adc
stc
popf
mov
inc
add
jnp
jp
rorb
push
mov
push
lret
cmp
outsb
mov
pop
leave
xchg
ljmp
jp
and
jl
sbb
jl
xchg
adc
pop
cli
out
adc
popa
bound
jb
iret
pop
inc
mov
insb
pushf
aad
pop
mov
fistl
jae
hlt
cltd
push
outsb
aaa
lret
insl
insb
inc
xchg
dec
jp
aaa
add
adc
aas
stc
loope
aam
cmp
inc
sbb
pop
sarb
iret
or
and
jge
push
pop
lods
ss
sahf
cwtl
push
out
mov
shl
cmpsl
pusha
popf
pop
leave
jecxz
mov
cmp
cwtl
outsl
fsubp
jle
fistl
dec
sbb
shrb
adc
lcall
push
mov
das
push
lods
fsubl
add
cmp
mov
in
adc
sbb
push
add
scas
or
pop
adc
data16
sub
sbb
negb
inc
pop
cmpsl
adc
mov
loope
and
cmp
push
cmovno
gs
bound
adc
bound
dec
jmp
mov
add
lcall
outsl
inc
and
fists
push
xor
lret
mov
sub
and
sti
pop
imul
std
cld
in
mov
cmpsl
adc
mov
xchg
or
xor
leave
popa
inc
xchg
fbld
test
call
pop
mov
in
mov
pop
rcrb
rcr
fmuls
push
mov
adc
dec
and
dec
fwait
adc
data16
das
or
stos
adc
push
or
arpl
push
add
repz
sub
out
fucom
out
out
sbb
mov
data16
xchg
scas
inc
clc
idivb
cmp
cltd
aaa
sbbb
pop
mov
cwtl
xchg
test
ret
sahf
cmp
gs
movsl
sbb
lcall
rcll
test
fnsave
mov
ss
lds
sarl
sub
and
in
lea
cmpsb
fimull
push
adc
adc
shl
dec
xchg
xor
mov
aas
jnp
mov
mov
loopne
xor
cmp
pop
xchg
dec
fidivl
in
notb
adc
cmp
arpl
cmp
sub
dec
and
adc
inc
adc
or
mov
jbe
out
rolb
mov
jecxz
testl
xchg
fisttpl
add
xlat
mov
cmpsb
mov
xchg
outsl
xor
jg
dec
jecxz
dec
mov
dec
insb
inc
jae
jo
xchg
cltd
pop
mov
dec
push
inc
cmp
andb
fucomp
jo
loope
pusha
dec
add
aas
jae
cli
ljmp
mov
cmpsl
xorb
push
outsb
pop
and
xor
mov
lret
jnp
filds
jge
lods
dec
pop
daa
inc
mov
mov
and
fcmovnb
aad
dec
cmpsb
push
xchg
call
dec
push
aas
stos
sub
ja
xor
mov
ja
in
es
pop
jmp
mov
pushf
sbb
jns
sub
stos
out
mov
mov
sub
decl
mov
andl
clc
lods
pop
pop
push
and
daa
sahf
movsl
mov
push
xlat
inc
pushf
bndldx
sub
ret
addr16
mov
push
pop
xchg
rcrl
orb
cmp
push
aad
xlat
mov
fstpt
pop
sarl
js
sbb
sbb
mov
imul
xchg
lods
lods
lret
fbld
sahf
mov
nop
jg
scas
outsl
xchg
cs
mov
mov
fxch
jb
sub
sub
call
hlt
pop
iret
jns
inc
push
scas
pop
pop
push
loop
cmp
adcb
es
or
push
lret
pushf
shrl
fsts
push
aas
shr
das
sub
lahf
out
jmp
movsb
push
movsb
jne
inc
repz
mov
in
dec
jns
mov
pop
lock
jg
sub
mov
loop
shlb
pop
mov
push
xchg
rclb
inc
add
dec
adc
push
pop
add
or
mov
jmp
fldl2t
mov
test
ja
xchg
mov
mov
je
lret
mov
mov
out
lock
adc
dec
outsl
xlat
cwtl
arpl
xor
sub
xchg
test
cmp
jno
adc
xor
popa
out
mov
scas
sbb
test
cmc
repnz
and
add
push
lret
mov
mov
cwtl
rcrl
inc
in
jno
ds
or
add
mov
aad
pop
cld
push
test
sbb
jae
lods
lcall
loope
sbb
sub
fiadds
jle
and
mov
out
pusha
idivl
or
xchg
daa
int3
xchg
fs
ds
fistpll
sub
mov
lods
scas
and
sub
lds
ja
in
add
jno
ljmp
push
and
push
in
aad
dec
jl
out
shlb
add
sub
inc
inc
psrld
sahf
dec
mov
stos
mov
inc
and
jle
hlt
enter
xchg
and
bound
jo
xor
mov
fcomps
fsubr
push
mov
ret
lahf
imul
lock
sbb
or
push
jnp
or
sub
test
roll
xchg
out
arpl
rclb
cli
sub
push
out
ss
rol
loop
scas
sarb
sub
int
f2xm1
popf
insb
fcoms
cmp
repnz
std
xchg
insl
cwtl
add
sbb
enter
jg
pop
pop
imul
fidivrs
mov
inc
clc
sub
into
cmp
mov
pop
fs
test
mov
movsl
cld
add
ret
ret
jb
pop
xchg
aam
cmp
jbe
addl
mov
push
pushf
adc
dec
xor
in
scas
js
into
int
inc
rolb
xchg
loop
clc
in
mov
pop
mov
xchg
xorl
imul
mov
pop
outsb
add
push
decb
shll
jb
and
mov
dec
scas
pop
sub
jb
pusha
sti
cltd
pop
mov
push
ja
sti
scas
sahf
insb
add
xchg
push
fsubl
fnstsw
loop
bound
xchg
mov
icebp
test
nop
sbb
sbb
nop
dec
and
inc
popa
mov
lods
loopne
mov
push
adc
test
inc
adc
data16
rcl
enter
add
jge
je
outsb
sbb
roll
test
push
lods
popa
sbb
jo
out
mov
lods
mov
xchg
jge
mov
or
xor
inc
cld
outsl
in
es
cmp
outsb
mov
xor
int3
jb
ljmp
xor
lahf
push
jl
setne
clc
xor
inc
jp
fs
push
negb
push
inc
clc
dec
cmpsl
push
lock
adc
orl
or
pop
ret
mov
jno
sbb
push
inc
adc
push
add
popa
out
cld
sub
push
or
jbe
sub
cmpsb
mov
or
inc
int3
add
pop
lret
add
test
test
or
test
es
inc
push
pop
out
xchg
popa
rorb
adcb
sbb
jae,pn
xchg
mov
loope
xor
pushf
push
std
loop
loope
repz
and
fsubrs
mov
or
jl
jecxz
fstpt
dec
and
sub
cmpb
mov
xlat
pushf
or
jbe
xchg
xchg
rcrb
sbb
loopne
fimull
jl
pop
sbb
pop
add
mov
and
arpl
fs
sbb
xchg
and
pushw
xchg
adc
dec
ret
mov
inc
dec
sbb
or
cli
jnp,pn
and
psubb
pop
and
out
dec
and
cmpsl
scas
out
sub
mov
lret
mov
add
dec
push
lret
out
call
xchg
pushf
cmp
xchg
movsl
adc
mov
adc
push
xchg
hlt
ja
lret
mov
add
jle
leave
xchg
jge
in
mov
mov
mov
cmp
jno
incl
shlb
adc
out
mov
jbe
jo
fdivs
test
sahf
fisttps
fwait
mov
fwait
adcl
xor
pop
in
sbb
cltd
jmp
inc
jmp
mov
repz
sub
add
imul
push
rolb
stos
popa
mov
cmp
adc
in
jge
dec
sub
or
test
push
pop
test
scas
lock
aaa
popf
incl
push
mov
mov
nop
ds
push
out
jnp
pop
mov
outsb
sub
jmp
dec
sbb
lds
mov
cmp
enter
lcall
sub
aam
js
outsb
outsb
mov
test
push
lahf
cwtl
inc
mov
cmpl
popf
scas
andb
dec
orb
cmp
or
mov
fstp
mov
mov
cmp
les
movsl
mov
mov
les
pushf
xor
xor
xchg
or
test
repnz
addr16
mov
cmp
enter
sub
lock
push
mov
pop
inc
and
and
adcl
add
lahf
std
repz
cmp
pop
psrad
aaa
adc
das
frstor
in
add
fildl
cmp
fcompl
rclb
loopne
icebp
inc
stc
inc
fisubrs
push
pop
mov
pop
lret
mov
push
popa
fistpll
or
adc
mov
btc
lods
int3
push
les
inc
adc
fld
dec
push
icebp
mov
lret
loopne
xchg
test
lret
mov
xor
dec
stos
fildll
xchg
cli
jecxz
std
imul
push
xchg
jne
flds
jmp
nop
dec
adc
fucomip
adc
fsubrl
sbb
mov
imul
outsb
jno
stos
jno
outsl
leave
int3
out
jae
into
xchg
sub
inc
mov
pop
inc
fidivrs
in
cmp
inc
sbb
int3
addr16
mov
ja
shl
sub
add
sbb
xchg
pushf
lcall
or
mov
pop
lea
loope
js
mov
fidivl
js
xor
xlat
ret
sub
sub
xorb
or
dec
lods
mov
mov
jg
lret
add
mov
pop
add
jae
lea
negl
push
mov
pop
imul
mov
xchg
cmp
sub
push
cmp
adc
mov
add
lock
dec
push
xchg
nop
mov
enter
xor
pusha
pop
cmp
outsl
dec
adc
cmp
mov
dec
sbb
add
test
cs
xor
cmp
sbb
push
je
loope
pop
add
xlat
stos
add
xchg
or
mov
dec
imul
sbb
cld
push
xchg
push
sahf
imul
out
xchg
popa
or
jo
xchg
dec
cltd
xor
lods
cld
loop
add
xchg
jle
fwait
inc
data16
pop
insl
stos
xchg
out
mov
fwait
add
jmp
stc
and
add
adc
cltd
arpl
in
mov
out
int
int
lret
mov
mov
pop
xor
lahf
fs
or
int3
lret
imul
pop
bound
shl
inc
ficomps
loope
sbb
es
push
push
push
mov
aam
push
dec
jne
sub
sbb
fistpl
das
xchg
in
jnp
xor
mov
pop
fistpll
mov
enter
out
stos
outsl
push
lret
mov
xchg
sti
push
inc
sbb
xchg
call
inc
stos
inc
xchg
pop
iret
rcrb
in
jnp
lods
lret
mov
or
jmp
cwtl
cmp
cmp
imul
rclb
adcb
mov
cld
movsb
or
cmpsb
nop
lret
push
stc
aad
mov
decb
lret
xchg
jne
lods
sbb
xchg
dec
int3
mov
push
push
push
andl
xchg
insb
push
xchg
out
dec
movsb
or
sbb
mov
cmp
sub
add
sub
out
stos
iret
cmc
add
and
jno
mov
push
inc
adc
cmpsl
mov
daa
imul
sti
test
cmpsl
mov
jecxz
cltd
fiaddl
jo
in
jnp
inc
repz
mov
mov
iret
stos
adcl
mov
enter
jmp
inc
sti
xor
and
leave
rcrl
mov
les
adc
call
pop
jno
iret
inc
xchg
jp
sbb
int3
sbb
xchg
aad
cld
lea
jb
or
dec
push
xchg
mov
inc
cmp
push
enter
rcrb
pop
add
or
int3
jae
in
pop
loope
cli
pop
stc
cs
dec
dec
push
xor
loope
add
cmp
aaa
mov
cmc
pushf
mov
pop
inc
jbe
imul
mov
sbb
and
xor
adc
add
xlat
lds
lahf
in
xchg
pop
fidivs
cli
decb
rol
clc
inc
push
lahf
dec
ds
sbb
mov
insb
jo
lea
fidivrl
jl
cwtl
bswap
imul
add
aas
sub
pop
fstpl
and
sbb
cld
push
inc
daa
cmpsb
push
sub
gs
in
lods
fmull
aaa
shll
sbb
insb
pop
rorb
sbb
push
add
and
int
push
fucom
mov
add
std
jle
ljmp
mov
in
pop
cmp
daa
push
cmpsb
pop
sarb
test
imul
cmp
pop
sub
movlps
ds
mov
mov
outsb
movsb
js
sahf
cld
sbb
popa
cmp
int
inc
xchg
in
mov
pop
pop
pop
mov
jmp
aad
fwait
adc
pusha
ljmp
or
cmp
ss
popl
mov
in
in
pop
cmp
nop
cmc
adc
sbb
xor
adc
scas
and
mov
arpl
push
shrb
pop
mov
push
push
add
cli
aam
aad
jg
cmpsb
and
testl
jl
xchg
out
pushf
mov
jge
jne
xor
sbb
js
pop
das
inc
inc
je
iret
call
aad
call
mov
inc
sub
mov
and
cmp
in
sub
jb
cmp
fwait
popf
dec
xor
in
or
fwait
push
sbb
addb
lods
push
sbb
push
mov
popa
push
rol
inc
mov
inc
push
add
popf
xchg
adc
inc
xchg
mov
sub
mov
out
mov
jp
or
js
ja
xor
mov
cmp
ja
sbb
lods
mov
pop
fildl
repnz
fnsave
loop
cmpl
aas
mov
fwait
lret
testb
les
push
popa
push
call
inc
cltd
xchg
push
sub
pop
fucomi
icebp
jbe
fcos
icebp
jmp
xor
push
mov
xor
push
jo
push
cs
shll
shr
and
push
out
jle
push
jg
jb
cmp
mov
push
jmp
int3
sub
ja
out
nop
dec
enter
mov
sub
add
add
sbb
lock
insl
test
xor
jb
fistpl
jnp
sub
divl
mov
int
rol
repnz
add
fs
in
cmp
test
jae
pop
movsb
outsl
rclb
fdivrs
pop
add
bound
jb
mov
jl
imull
in
sub
add
push
loope
mov
push
mov
ss
xor
das
mov
push
in
notl
iret
imul
pop
lret
xchg
push
fdivs
jl
cmpsl
xchg
jge
add
ret
cmp
in
stos
mov
dec
mov
pusha
adc
xor
ljmp
insl
lods
ja
xor
xchg
sbb
mov
mov
cmp
xor
ss
add
mov
xchg
stc
add
push
inc
jne
fcomp
out
mov
ljmp
and
jns
cli
or
adc
stc
push
sub
xor
stos
xchg
mov
push
lods
test
dec
insb
dec
in
and
mov
push
int3
bound
dec
or
xchg
fwait
sub
mov
sbb
out
or
pop
push
or
popf
test
call
and
mov
icebp
es
stc
lcall
sbb
xchg
add
js
sbb
sub
rorb
pop
cmc
lret
lds
mov
adc
jp
and
push
nop
inc
jae
popf
lds
cli
sbb
add
dec
ret
add
lea
pop
ljmp
mov
jle
pop
lcall
pop
pop
jle
addl
out
xchg
jbe
xchg
push
push
pop
pop
test
jge
ljmp
push
mov
dec
lds
inc
jb
inc
test
cltd
lods
adc
add
xlat
xor
push
inc
sbb
sub
pop
loope
test
jbe
or
jae
mov
inc
mov
xor
ja
jnp
mov
ljmp
xchg
enter
sub
inc
mov
repnz
or
xor
sahf
les
xchg
imul
xchg
lods
fdivrs
lods
call
mov
mov
fisttpll
pop
mov
sbbb
sbb
mov
popf
mov
pop
fwait
mov
add
push
addb
in
xchg
rcrl
movb
in
shr
pop
push
cmc
add
ret
sti
call
jb
addb
push
mov
rcrl
or
daa
push
pop
js
xor
inc
add
push
test
jl
push
sub
je
or
xchg
mov
inc
push
jmp
mov
sub
mov
sub
mov
lret
push
dec
jge
adc
test
xchg
mov
cs
jo
pop
imul
shl
sub
ret
jae
ljmp
mov
in
dec
and
imul
push
sbb
or
and
lods
sbb
mov
mov
lock
inc
mov
adc
dec
leave
sub
xchg
jno
mov
sbb
lods
rol
cli
je
xor
aad
ljmp
push
stos
lret
insl
ret
pop
mov
add
ja
add
xor
loopne
push
das
test
inc
xchg
jg
imul
dec
pop
pop
or
stos
cli
lret
adc
leave
orl
and
xchg
and
xchg
xchg
call
jmp
icebp
aas
sub
repz
inc
jbe
xchg
jp
je
out
fidivs
andb
leave
mov
into
mov
inc
dec
mov
data16
xchg
mov
adc
cltd
push
dec
and
mov
lcall
mov
sbb
rsm
cmp
adc
cmpsb
lret
mov
es
pop
test
and
aad
push
xchg
out
add
iret
js
xor
hlt
hlt
ss
cld
repz
and
add
imul
push
adc
xchg
push
inc
popa
xchg
mov
mov
nop
and
cli
outsl
and
iret
adc
call
fnstsw
mov
push
jge
jmp
jmp
je
add
rcll
aaa
cmp
and
sub
sbbl
fstps
jmp
movsw
sub
cld
fsubrp
jge
and
leave
enter
dec
out
imul
xchg
xchg
outsl
jno
imul
jmp
sbb
add
or
lea
insb
cmp
insb
fstpl
test
sub
lock
shlb
or
pop
stos
das
jp
xor
cltd
mov
xlat
test
mov
fstpl
sbb
sub
mull
ficompl
cs
out
add
jl
jmp
add
or
test
inc
or
arpl
mov
repz
loope
xor
sti
cmpsb
cmpsb
mov
xchg
pop
mov
sbb
clc
xchg
shll
mov
jae
fs
xchg
andb
push
jnp
adc
xor
ret
pop
pop
rorb
mov
sbb
dec
in
ds
xor
dec
imul
cmp
clc
push
xlat
adc
or
or
in
mov
scas
aas
out
imul
ret
push
nop
lahf
jb
lock
xor
fwait
adc
cs
outsl
mov
rorb
cmc
jl
test
loopne
leave
insl
ja
jmp
cld
push
fwait
and
pop
movsl
and
lcall
pop
lods
gs
fidivs
dec
ds
mov
and
lock
adc
adc
subl
mov
insl
mov
cmc
jmp
pop
scas
ja
pop
and
push
movl
loop
js
dec
call
out
xchg
icebp
data16
insl
cmp
cmpb
pop
or
mov
cmp
sahf
and
inc
mov
pop
fwait
cmpsb
popf
mov
test
inc
add
jl
aad
jecxz
popa
jp
in
mov
inc
xor
in
nop
pop
and
mov
ljmp
push
rcrb
mov
imul
rorb
lods
std
lcall
and
das
andb
pop
mov
test
inc
xor
dec
test
sbb
test
adc
dec
fwait
cltd
fmul
mov
fimuls
shrd
pop
mov
ret
sbb
cmpsb
sub
and
xchg
push
je
inc
xchg
push
sbb
popf
xlat
and
sub
push
jb
inc
pushf
dec
movsl
push
xchg
fiaddl
jmp
mov
inc
inc
cmpsl
clc
mov
sub
push
mov
push
adc
in
adc
sbbl
or
xor
sbb
ds
mov
imul
outsb
call
and
enter
jnp
insb
bnd
inc
rorl
lret
inc
mov
push
inc
mulb
adc
imul
not
sbb
xadd
pop
cmpsl
push
mov
out
outsb
mov
mov
lods
mov
or
mov
aas
iret
jge
stc
mov
mov
push
dec
cmpsb
inc
repz
movsl
mov
sbb
and
inc
aaa
jno
sub
sbbb
cmc
mov
in
mov
pushf
sub
and
push
and
xor
mov
and
jmp
cmp
jp
repz
dec
orw
das
inc
jb
out
inc
iret
adc
adcb
inc
test
xor
jg
enter
int
loopne
mov
xchg
pop
cltd
in
xchg
ljmp
cli
ja
fldenv
enter
mov
std
add
lods
inc
or
into
dec
mov
mov
mov
mov
vshufpd
outsb
mov
pusha
and
adc
mov
xchg
mov
and
sahf
cmp
add
ret
adc
mov
sbb
and
lret
ljmp
in
dec
jge
mov
loopne
pop
dec
inc
cmpsb
or
iret
push
rol
sbb
push
mov
int3
daa
fldcw
xlat
es
inc
push
mov
ss
sar
insb
ss
outsb
lea
dec
lds
ja
lahf
lock
jns
outsl
or
pop
lods
jle
sbb
addb
out
sub
add
inc
lods
fdivrs
cmp
and
mov
aam
hlt
std
pushf
arpl
jmp
mov
and
or
mull
mov
fwait
notl
jae
cwtl
repz
jb
inc
sti
pop
push
int3
stc
pushf
xlat
fistps
sbb
jmp
mov
or
and
mov
dec
cmp
xchg
push
mov
sarl
mov
jmp
inc
stc
mov
lret
xchg
mov
rcll
incl
lret
dec
sbbb
data16
icebp
fildl
imul
iret
int
inc
in
fstpl
out
ja
andb
and
sub
and
imul
and
pop
cli
push
and
pop
ljmp
stc
loopne
mov
popf
adc
add
and
sar
mov
and
ret
movsl
push
sbb
aam
cwtl
lcall
pop
mov
mov
popf
push
inc
xlat
push
hlt
cld
pop
into
jg
mov
add
popf
pop
jge
mov
mov
cmpsb
popa
add
jae
sti
icebp
das
cmp
sub
jnp
jo
push
ljmp
and
out
aam
shll
stos
push
clc
nop
xchg
hlt
stc
jmp
pop
adc
cmp
aad
mov
jp
jg
out
ljmp
push
cwtl
popa
fsubrs
icebp
xchg
push
clc
test
insl
cmp
push
mov
sbb
imul
fs
pop
sub
imulb
int
outsl
jl
sub
fcompl
int
cs
stos
jbe
xchg
cmc
out
xchg
icebp
inc
push
mov
pop
push
addr16
mov
ljmp
pop
pop
push
push
les
or
dec
scas
data16
xor
lods
add
into
subps
jns
mov
mov
mov
in
ljmp
fldt
adc
push
pushf
jbe
fstp
push
call
lods
cld
inc
mov
ljmp
push
xor
adc
dec
enter
push
loop
push
dec
movsb
cmp
push
xlat
stc
and
jge
dec
inc
dec
adcl
popa
sahf
sub
adc
push
cmp
lret
and
pmulhuw
in
mov
push
rcrb
push
jnp
mov
jns
xchg
push
mov
arpl
fildll
outsb
cmp
jp
into
shll
roll
into
fwait
ljmp
inc
or
push
add
je
mov
xchg
mov
and
lahf
shrb
enter
popa
test
repz
jg
stos
mov
clc
sbb
aam
jne
jnp
xchg
jbe
inc
pop
dec
insl
or
test
aam
xchg
jb
lcall
pop
xchg
je
daa
fstpl
pop
lock
lret
pop
lcall
dec
fidivl
push
sub
mov
dec
sub
mov
jno
lods
lcall
sub
push
aad
repz
xor
in
jg
sbb
shlb
add
cmp
dec
popa
sub
notb
negl
leave
icebp
lods
rcl
dec
mov
cmp
adc
shlb
jmp
adc
rcrl
fs
add
xchg
lahf
push
rcr
and
xchg
sbb
xlat
icebp
mov
cmp
add
sarb
adc
sbb
sub
sbb
inc
sub
jl
jo
mov
sub
mov
decl
sub
jmp
lret
repz
push
cmp
ss
pop
inc
decb
test
js
jmp
imul
mov
jle
push
sub
dec
sbb
dec
pop
rorl
mov
pop
mov
repz
scas
fisubrs
xor
sbb
mov
or
xchg
add
add
pop
jl
cld
adc
pop
cld
jnp
adc
es
sub
leave
bound
cwtl
ffreep
xchg
jb
stos
clc
dec
test
mov
lcall
or
das
aas
jg
mov
inc
xchg
dec
sub
loopne
loop
fdivs
cmp
mov
pop
stos
cld
bsr
jne
sbb
pushf
sbb
jae
mov
add
jecxz
mov
out
outsl
mov
sub
mov
jg
ljmp
mov
aas
mov
jecxz
std
imul
push
pop
push
dec
imul
cmpsl
jecxz
test
jmp
lock
les
xchg
add
cmpsb
sub
test
sub
sarb
xchg
adc
daa
lods
mov
pop
out
bound
and
scas
mov
sti
mov
ljmp
aad
jle
addr16
inc
aas
mov
push
jnp
adcb
test
shr
xor
dec
pop
icebp
js
lahf
sub
adc
push
inc
fildl
mov
mov
fsts
cwtl
sbb
mov
mov
dec
add
jle
xchg
call
cli
jmp
pop
sbb
push
iret
leave
test
cmp
daa
inc
add
jns
cmpsb
ret
fcoml
push
mov
xor
call
cs
daa
mov
mov
pusha
xchg
inc
gs
imul
add
scas
test
mov
lea
pushf
insb
into
rcrb
sbb
ret
fistpl
jnp
mov
insl
js
jbe
xor
pop
cmpl
mov
inc
lret
jbe
lret
enter
lret
dec
or
sbb
mov
push
mov
sub
mov
adc
jae
jg
ret
xchg
daa
jbe
in
adc
mov
push
mov
xor
and
test
out
dec
dec
mov
cs
push
dec
inc
mov
sbb
mov
fistpll
adc
stc
sub
jb
mov
jnp
mov
sub
push
inc
jp
enter
in
shr
mov
cmp
push
jb
dec
mov
inc
adcb
pop
jnp
pop
xchg
xchg
aaa
and
pop
pop
jbe
bound
pushf
adc
cmp
jnp
lock
add
pop
jl
mov
cmp
lods
in
call
mov
mov
cmp
pusha
sbb
rol
inc
inc
adc
pop
push
mov
pop
popf
xchg
insl
add
aad
bnd
and
dec
inc
loopne
adc
lret
fmuls
inc
shll
jmp
nop
in
push
imull
ficomps
into
push
neg
adcl
in
jns
jo
add
lahf
stos
fbld
mov
push
cmp
loopne
and
and
pop
add
xor
ds
xchg
in
das
bound
mov
pop
mov
push
push
mov
addr16
rcr
push
inc
test
js
fscale
popf
out
insb
dec
xchg
inc
cltd
daa
lea
lods
je
xchg
ss
scas
push
push
or
fsubrs
sub
sarb
xor
xchg
adc
fwait
push
push
in
scas
mov
lods
inc
inc
mov
mov
fisubrl
or
fcomip
mov
xor
or
dec
xlat
ret
xchg
dec
loope
es
adc
jns
test
xchg
xchg
push
pslld
enter
xor
mov
jp
mov
and
in
pop
idivb
lahf
rorl
stos
jne
imul
add
xor
xchg
jl
into
movsl
xlat
loop
je
cltd
frstor
test
roll
int3
and
mov
nop
adc
leave
mov
popf
cld
int3
mov
in
idiv
or
push
pop
cmp
adc
adc
inc
xchg
insb
sub
leave
fisttpl
or
xor
loope
jge
out
popa
push
adc
popa
out
mov
or
jmp
jmp
pop
inc
lcall
ja
aaa
iret
push
popa
pop
arpl
aaa
js
inc
rclb
stos
scas
leave
addr16
mov
cmp
test
dec
jns
int
push
sarl
cmpsb
pop
aad
or
add
inc
mov
repz
incl
jg
mov
adc
andb
mov
loop
pop
aaa
inc
ds
dec
lret
enter
cmpsb
jb
cmp
aam
xor
push
pop
push
jb
addl
push
or
pusha
popa
push
cmc
mov
cmp
in
aad
rcr
mov
mov
adc
pop
outsl
es
inc
sldt
les
rcl
push
mov
cmp
pop
or
mov
shlb
sbb
je
rcrb
dec
push
gs
movsl
lahf
mov
je
add
aaa
repnz
xchg
and
jne
sbb
xchg
pop
jl
jbe
inc
shr
pushf
jo
dec
les
std
xchg
bound
cld
cmp
outsl
enter
in
addr16
push
dec
push
jb
or
push
dec
jbe
jg
movl
add
and
out
xor
loopne
jnp
lods
pop
push
mov
push
pop
adc
add
std
das
jb
ljmp
das
jg
or
js
jle
sub
scas
add
cltd
inc
rol
jo
mov
call
adc
pop
int
das
adc
pushf
dec
push
dec
mov
pop
mov
or
adc
and
push
dec
adc
sahf
fsubs
push
cmc
and
ffree
rorb
mov
jno
or
cs
sbb
out
jns
jecxz
mov
push
test
fnstenv
jg
ret
mov
divb
push
repz
mov
movsb
or
fcmovbe
fs
xor
movsl
jl,pn
in
pop
jl
iret
add
ss
sub
or
jp
cli
cmc
lret
or
push
shrb
adc
jnp
sub
xchg
pop
cmpsb
inc
ss
push
imul
push
mov
mov
cld
rolb
mov
inc
popf
ret
push
inc
popa
test
dec
ja
sub
sti
ljmp
inc
mov
ljmp
cmp
mov
jns
push
xor
andl
iret
or
dec
or
int
xchg
aad
insb
inc
shll
xchg
mov
add
call
mov
popf
add
and
dec
push
sub
cmp
inc
xor
or
pop
lds
ret
add
outsb
pop
je
fisubs
and
fdivrl
sbb
lret
ror
and
push
cmovae
push
pop
ret
jmp
inc
lods
adc
cmc
mov
idiv
pop
pop
pop
xlat
roll
fnstenv
sub
cmp
add
in
and
dec
in
sub
mov
mov
add
popa
sub
cmp
mov
fisttpll
out
jbe
adc
mov
mov
push
into
add
scas
call
test
pop
fsubl
repnz
xchg
jmp
sti
xchg
sbb
int
xchg
fists
jg
pusha
test
test
mov
gs
mov
cmpsb
add
aad
sbb
xchg
xlat
fcoml
jb
push
dec
sbb
and
and
sbb
cmc
sbb
xchg
in
int
aas
push
xlat
mov
jno
mov
mov
and
mov
iret
sbb
pop
and
xor
repz
pop
sahf
sbb
int
push
push
cmp
outsb
mov
add
in
sbb
enter
sbb
mov
mov
jmp
das
pop
das
cmp
iret
lret
push
flds
jl
mov
dec
mov
imul
sarb
adc
nop
ss
loop
orl
mov
add
gs
xchg
test
movsb
imul
mov
loopne
jg
jae
addl
mov
mov
not
jns
xchg
js
sar
orl
cmpsb
sbb
clc
dec
dec
orl
inc
xor
push
inc
ret
rcrb
add
imul
aad
mov
lcall
jmp
arpl
jge
cmp
fstl
inc
leave
test
call
cmp
cmp
ja
sub
orb
inc
pop
or
and
fwait
je
jp
cmpsb
leave
adc
mov
mov
jbe
aad
mov
ljmp
adc
inc
push
lods
addr16
outsl
pushl
add
pushf
mov
adc
test
add
jns
sbb
add
fsubrl
pop
cwtl
lret
js
scas
mov
pop
mov
ss
aad
jmp
sub
ds
and
scas
stc
xchg
push
push
mov
mov
mov
jle
in
cmp
mov
add
xchg
lock
in
les
pop
push
ficoms
inc
dec
or
pop
push
rcl
arpl
stos
jns
mov
pusha
and
pop
add
cmp
dec
adc
dec
mov
not
jae
xor
adc
imull
pop
ljmp
or
xor
rcrb
inc
xchg
imul
rolb
xchg
mov
inc
aad
repz
adc
dec
in
pop
push
sub
pop
cmp
aam
jnp
push
movsb
test
sub
aas
sub
cmpsb
shll
lret
adc
dec
ja
mov
inc
dec
adc
inc
popf
lods
nop
adc
add
sarb
push
inc
iret
sub
ljmp
repnz
push
aad
aad
mov
loope
int
dec
xchg
sbb
mov
xchg
das
fs
jecxz
jle
scas
jl
jne
jge
in
or
add
call
lods
cli
xchg
call
push
add
mov
push
sub
cld
loop
adc
push
jge
repnz
sub
imull
ret
jle
repnz
sub
xor
jmp
pop
push
leave
inc
arpl
lea
mov
in
popa
mov
imulb
cs
loopne
lcall
mov
add
mov
or
mov
daa
inc
pop
pop
dec
xchg
sub
lret
pop
imul
push
testb
adc
mov
adc
add
mov
fsubl
sbb
pop
add
loop
add
jb
enter
xchg
aam
ds
dec
xchg
lahf
sbb
repz
sbb
fadd
mov
daa
or
lea
notl
lret
jle
arpl
cli
push
outsb
cmp
shrl
push
fbstp
test
lock
int
ret
dec
rol
inc
jbe
jb
popa
dec
inc
push
dec
ss
cmp
or
cmp
pop
adc
test
mov
xor
jg
loop
jl
dec
add
xor
gs
ss
jge
scas
jp
sub
and
roll
imul
dec
arpl
fmul
mov
adc
and
and
mov
mov
pop
movsb
cmp
jg
cs
sbb
repnz
lret
int3
sub
lret
dec
jbe
stos
negl
push
mov
mov
loop
jl
addl
pop
xor
movsl
in
xchg
mov
fs
scas
loopne
je
xchg
idiv
adc
add
cmpsl
mov
adc
pop
ret
dec
push
addr16
icebp
mov
sbb
jnp
xchg
adc
adc
outsl
xor
cmp
push
gs
fisubl
dec
lahf
and
inc
test
xlat
sbb
rorl
mov
dec
mov
sarl
mov
fwait
mov
push
lds
jmp
bound
xchg
cmp
push
mov
sbb
cmp
jns
out
sbb
es
adc
push
fsubs
xchg
and
or
jg
jbe
in
aam
dec
push
inc
sub
rcll
mov
fdivr
je
jmp
mov
jae
loop
ret
popa
mov
cmp
xor
adc
push
fwait
repnz
test
fdivl
lret
xchg
inc
into
sti
mov
roll
in
je
ret
cmp
xlat
mov
mov
clc
push
in
insb
mov
or
mov
dec
ret
lods
and
repz
jge
jmp
fistps
fwait
div
dec
test
pushf
xchg
scas
aam
sub
sub
push
sarb
scas
jmp
fcomip
mov
mov
jb
shll
push
pop
jns
xor
mov
mov
out
xor
xor
neg
dec
lret
addr16
fwait
sarl
pop
inc
hlt
mov
mov
sbb
test
push
jp
repnz
sarl
cmp
or
jae
push
repnz
pop
adc
enter
mov
frstor
cmp
leave
push
std
add
mov
insl
add
loop
xor
jg
das
test
outsb
add
sub
js
push
cwtl
dec
lock
mov
pop
js
divl
lock
leave
ja
jne
insl
xchg
xchg
scas
cmp
adc
int3
cmpsb
mov
and
push
pop
adc
inc
adc
dec
nop
jns
adc
int3
std
pusha
fs
jo
pop
ficoml
push
cmp
fcoml
lods
and
mov
scas
add
imul
sub
fwait
mov
and
cld
xchg
arpl
lds
xchg
and
in
xor
aas
jns
pop
cmp
out
pop
adc
sti
hlt
sahf
adc
roll
push
jae
jp
jp
shrb
ret
cltd
xchg
xor
mov
outsl
daa
add
in
pusha
loop
xchg
popf
sbb
imul
and
rorb
cwtl
out
lcall
rcll
sub
or
push
jp
mov
pop
or
addl
sti
sub
jnp
mov
pop
pop
cld
inc
mov
in
icebp
test
call
push
mov
sub
mov
mov
cmc
movsl
fistpl
rorb
clc
scas
add
xor
cmp
fs
mov
xor
test
and
and
int3
jmp
adc
jecxz
mov
push
cmc
sbb
in
jecxz
ret
neg
in
mov
xor
and
movsl
pop
jge
or
xor
lods
jno
aam
pop
iret
out
scas
cmp
stos
es
lock
or
loopne
mov
pop
and
push
pusha
ljmp
lods
in
loopne
stc
mov
mov
add
sbb
ja
cmp
lods
test
push
jns
pop
push
push
ficoml
lahf
pop
adc
adc
push
xchg
mov
jns
and
jle
outsb
or
or
dec
hlt
sbb
iret
sbb
daa
lahf
or
arpl
dec
arpl
cmp
hlt
dec
cmp
pop
pop
dec
sbb
add
cli
dec
mov
mov
mov
insl
mov
cmp
inc
ret
mov
subl
push
stos
aad
mov
movsb
je
popa
push
fdivl
dec
imul
push
inc
pop
movsb
mov
sbb
dec
inc
jno
test
or
lea
stos
mov
jnp
ljmp
add
dec
imul
cmp
inc
outsb
cmp
ret
out
sub
inc
pop
xor
push
lods
adc
repz
push
test
gs
inc
fs
fnstcw
and
cs
dec
jecxz
add
fs
sbb
test
enter
ss
stc
inc
or
addr16
fisubrl
add
xchg
ret
cmpsb
sti
insb
insl
sbb
cld
or
pop
cli
fistpll
outsb
popf
out
mov
jbe
cmpsl
and
ss
or
and
xchg
stos
lahf
in
sbb
ret
sbb
xchg
into
das
enter
cmpsb
int3
lahf
lahf
pop
iret
mov
pop
ss
loopne
adc
xchg
and
or
outsb
cli
dec
fsubl
jmp
gs
or
sbb
subl
gs
push
daa
sbb
mov
sahf
dec
lret
xchg
mul
jns
jo
aad
hlt
lods
imul
mov
pop
mov
push
aas
repnz
push
and
sub
aaa
add
inc
and
je
fildl
jne
push
mov
lds
je
xchg
dec
cmpsb
fcomip
scas
adc
jle
leave
ret
mov
daa
xor
in
roll
pop
das
subl
bnd
int3
push
cltd
es
dec
lahf
hlt
adc
jmp
sbb
mov
imul
xorl
xor
out
jne
dec
push
fs
pusha
jns
xchg
lret
cmp
mov
push
cmp
xlat
repnz
shrb
push
xor
cltd
or
aas
daa
repnz
nop
into
lea
add
jp
jg
fwait
lahf
push
repnz
psllq
inc
inc
and
in
imul
and
outsl
in
mov
jmp
and
lret
xor
sbb
jg
pop
fiadds
xorl
or
les
movsb
popf
mov
or
sub
rcrl
xchg
push
xchg
push
sub
fidivs
scas
andl
adc
incb
lock
jb
push
scas
lods
xor
scas
addl
scas
mov
and
inc
or
subb
adc
fsubrs
stc
pusha
in
sbb
mov
xchg
pop
lods
lahf
cld
push
lea
lret
jecxz
push
jp
shll
cmp
sahf
sti
cmp
cmc
mov
xchg
and
mov
enter
out
xchg
adc
jle
pop
int3
jne
repz
mov
push
shrb
inc
cmp
cmpsl
repz
lods
fimuls
mov
pop
aaa
and
or
lret
insl
insb
je
mov
lcall
popf
fidivs
ret
jl
mov
out
inc
daa
into
push
sub
push
jg
das
adc
cmp
lcall
repz
and
insl
in
or
imul
aad
shlb
mov
or
int3
ljmp
mov
scas
mov
adc
cmp
dec
xchg
insb
repnz
push
and
push
frstor
out
xor
mov
sub
inc
shll
adc
lods
js
shrl
mov
dec
jbe
ret
push
les
and
cmpsl
sbb
out
cltd
pop
push
or
jno
dec
pop
cmp
push
test
push
icebp
es
mov
pop
into
jb
repz
daa
jp
or
dec
fsubl
sbb
aas
aam
es
jle
mov
mov
cmp
mov
es
cs
sbbl
out
lcall
mov
cmpsb
in
xchg
cmp
jl
lock
loopne
inc
test
sbb
xchg
cmpsl
xchg
fdivrp
lret
sahf
cli
dec
sub
imul
in
jp
add
hlt
or
dec
in
adc
pop
sub
dec
add
stos
repz
add
xchg
push
jae
cmp
flds
out
in
jg
fsubrl
std
and
les
imul
mov
in
int3
dec
sub
stc
rol
jb
and
daa
fcoms
ss
pop
mov
push
leave
movsl
dec
sub
sbb
adc
jge
mov
int
cli
adc
int3
ljmp
shlb
jo
fstpl
jg
dec
test
sbb
push
je
inc
movsb
ds
imul
cmpsb
icebp
push
xchg
mov
inc
push
push
sub
inc
sbb
cld
popa
movsl
movsl
or
push
cmp
loop
dec
and
loope
sub
mov
push
pop
ret
adc
into
imulb
mov
add
pop
stos
dec
push
mov
and
data16
pop
jb
in
mov
dec
jmp
jno
or
in
scas
fisttpll
mov
sub
das
out
outsl
mul
ror
lods
jecxz
cmpsl
push
out
cmp
pushf
incl
push
cwtl
and
xor
jo
test
sbb
mov
lock
dec
out
inc
test
adc
cmpsl
mov
jae
outsl
out
pushf
inc
aas
cmp
sbbl
push
mov
dec
insl
inc
or
mov
pushf
pop
movsb
fisttpl
ret
mov
les
dec
es
iret
cmc
mov
cmp
cltd
cwtl
movsb
sbb
push
and
loopne
adc
leave
sbb
mov
loop
mov
jle
mov
je
repz
cmpl
loop
frstor
mov
pop
adc
pop
sub
stos
aam
test
adc
push
cmp
test
mov
cmp
mov
xchg
rcll
push
test
push
pop
pop
enter
jle
scas
lods
lret
push
imul
and
sbb
out
repnz
lods
loopne
jbe
sar
inc
adc
pop
mov
sbb
cld
dec
xchg
rcrb
mov
cmpsl
pop
leave
aas
pop
fcmovnu
fwait
in
adc
test
shrl
shr
cli
cmpsb
ljmp
xchg
mov
aad
mov
inc
jecxz
ljmp
mov
mov
push
aad
cli
xor
add
xor
inc
mov
add
mov
lods
dec
fxch
adc
sti
in
hlt
fnstenv
rorl
lret
xlat
sbb
ret
adc
add
sbb
test
xorb
into
mov
pop
mov
fmuls
shll
loope
lret
sti
push
add
in
je
and
or
cwtl
subl
xor
dec
mov
inc
pop
xor
dec
xchg
mov
lods
imul
negb
push
inc
mov
pop
lock
dec
fldz
cmp
roll
pusha
push
jnp
xor
jge
add
aad
das
subl
xchg
test
addr16
std
popa
test
jge
rcll
pop
pop
xchg
dec
jns
std
jle
and
ret
sbb
out
insl
inc
sub
push
push
dec
sub
sbb
xchg
je
dec
inc
mov
or
push
out
jns
ds
adc
movsb
bound
mov
sub
dec
sub
dec
jmp
add
movb
push
call
sbb
mov
popa
dec
aas
inc
shll
pusha
insl
scas
aaa
call
stos
in
jl
mov
scas
xchg
in
adc
xchg
pop
and
test
jmp
xchg
xlat
push
xor
aam
pushf
fsubrl
imul
out
push
mov
lret
in
add
push
jg
push
outsl
fbld
lret
ljmp
sub
xchg
xchg
pop
icebp
inc
dec
mov
sub
imul
mov
mov
popf
rorl
rcrl
xchg
out
jl
addr16
jmp
pxor
je
into
scas
cmp
sub
icebp
and
jbe
and
cmc
lock
push
popf
int3
in
enter
lahf
dec
and
cmp
jno
mov
xchg
aaa
cld
sub
fmulp
push
ret
call
pusha
xchg
fbstp
sbbb
adc
sub
mov
cli
mov
cltd
adc
out
dec
pop
loop
cmp
jecxz
mov
add
push
cvttps2pi
pusha
push
in
mov
mov
aam
xchg
dec
mov
jnp
xchg
dec
or
pop
sub
pop
push
sub
test
aad
rorb
mov
and
adc
fidivrs
sbb
popa
pop
pop
cmp
xor
loope
adc
outsl
push
add
add
xchg
xchg
adc
ret
dec
pushf
or
fcmovnb
fidivl
addl
notb
dec
int3
jb
sbb
push
xchg
mov
pop
push
outsb
testb
pop
insl
jl
icebp
pop
mov
mov
add
pop
leave
loopne
mov
arpl
ja
sub
inc
into
jae
stc
push
ja
xor
sbb
jo
pop
fs
cmp
mov
es
adc
pop
mov
pushl
mov
push
mov
roll
mov
sbb
out
mov
jg
popf
jge
add
xor
out
adc
mov
jge
and
fsubr
push
push
mov
aaa
lock
mov
or
mov
pop
les
cmp
push
push
dec
loop
push
mov
push
adc
js
fcmovnbe
and
wrmsr
jge
adc
mov
push
xchg
xchg
push
insl
xchg
mov
push
push
fsubrs
sbbb
mov
push
mov
shr
sar
adc
or
bound
fistl
in
adc
dec
std
mov
je
dec
lods
mov
test
rcrl
outsl
mov
mov
daa
popf
ret
mov
adc
jecxz
movsb
push
mov
mov
sbb
push
pop
pop
sub
sbb
call
jecxz
jno
cltd
xor
lret
icebp
jecxz
insl
mov
pop
mov
sbb
scas
jne
sub
xlat
push
daa
shl
pop
loop
popa
in
int3
incb
push
fstpl
xorl
mov
int3
pop
jnp
popf
cmpsl
mov
xor
mov
cmp
add
movsb
or
out
call
shlb
popf
adc
mov
mov
add
inc
je
mov
pop
or
pop
test
cmp
outsl
fidivrl
adc
mov
repz
sub
lret
jmp
int
sub
shll
pop
hlt
mov
add
dec
adcb
cmc
sbb
or
mov
mov
sbb
es
mov
sti
and
add
jecxz
ja
into
pop
xorl
adc
jp
repnz
jno
or
out
sub
mov
in
or
out
xchg
xchg
xchg
aam
jnp
mov
loopne
enter
clc
or
je
mov
sbb
sub
aas
scas
dec
outsl
xchg
shlb
cmpsb
repnz
shrb
imul
mov
add
pop
add
sub
add
addr16
inc
pop
dec
shrb
fsubrp
sub
jle
cld
insl
insl
in
inc
sbb
cmp
mov
sahf
jge
xchg
cli
inc
sbb
out
sti
les
mov
cltd
push
xchg
cmc
cmpsb
aas
jecxz
sarb
aad
xor
repnz
push
iret
add
pop
cmpsl
sbb
sub
xor
jo
or
rorl
fcomps
loope
faddl
in
jbe
adcb
xor
pop
cmpsb
into
and
pop
xchg
dec
xor
pop
cli
push
push
out
bound
stos
push
es
mov
sbb
xlat
mov
dec
movsl
adc
jae
es
pop
push
xor
out
or
sub
int3
imul
push
jp
jns
mov
inc
cmpsl
icebp
jb
mov
mov
pop
insl
cltd
ret
ljmp
push
and
lret
movsb
mov
jns
aaa
icebp
lret
icebp
sbb
lret
subl
jne
out
mov
push
clc
dec
lahf
adcb
xchg
or
out
jno
adc
pop
icebp
mov
or
call
int
fimuls
popa
cmp
fwait
xchg
aaa
stos
aad
lret
adc
sbb
lds
ljmp
adc
mov
in
out
loopne
negl
jp
mov
sub
jae
xor
stc
rolb
repnz
mov
scas
pop
ljmp
jle
push
jne
out
pop
roll
sub
subl
adc
testl
mov
imul
mov
jp
fdivrl
mov
add
pop
and
mov
js
shlb
pop
loopne
int3
mov
in
sub
mov
out
mov
xchg
iret
lea
xor
mov
lcall
cmpsl
add
inc
and
aaa
jb
les
mov
pop
mov
mov
mov
sti
hlt
push
jmp
adc
loopne
or
pop
pop
cmp
xchg
mov
daa
addr16
adc
and
lcall
xchg
mov
jmp
sbbb
movsl
daa
stc
add
mov
mov
inc
xchg
in
mov
popf
dec
aam
repz
movsb
clc
inc
push
sahf
jg
sbb
sbb
xor
adc
repz
adc
pop
dec
adc
repnz
push
jg
adc
out
lret
cmpsb
std
scas
mov
xchg
pop
insl
arpl
jp
cmpsb
outsl
xor
js
sub
rcl
enter
fwait
mov
arpl
fsubrs
mov
aas
cld
adc
cmp
mov
lock
jnp
mov
ds
sbb
xchg
dec
mov
sarb
aam
add
divl
iret
dec
sbb
mov
sub
ja
pushf
cmc
lret
sbb
cmc
repnz
push
jns
sub
or
ss
or
push
lds
addb
mov
out
sub
jge
cmp
sub
ret
arpl
out
mov
xlat
xchg
pusha
or
das
pop
mov
dec
and
add
enter
jnp
aad
jle
jecxz
lds
dec
and
movsb
ret
xchg
fldt
mov
outsl
jle
xchg
out
sub
inc
sbb
pusha
push
inc
sub
in
rolb
shrl
cmp
inc
mov
push
cli
cmpsb
dec
cmp
test
lret
add
sbb
fs
or
lods
dec
inc
and
push
or
test
pop
clc
mov
mov
push
ret
rorb
nop
loopne
push
pop
adc
sbbb
sub
jo
out
pop
ficoms
stos
mov
adc
push
clc
shrl
jp
subb
push
pushl
ss
xlat
in
lods
pop
popa
in
dec
lcall
and
ja
adc
sub
xchg
cmp
jge
xchg
push
jmp
mov
aad
std
imul
sbb
push
and
cli
add
jecxz
inc
xor
mov
or
mov
push
mov
sub
jno
push
add
add
lahf
repnz
fstp
inc
cltd
mov
into
sbb
inc
and
gs
hlt
pop
or
push
mov
mov
sbb
push
jecxz
sahf
es
pop
xor
imul
testb
int3
icebp
mov
adc
cmp
push
pusha
test
call
dec
clc
lret
fwait
inc
adc
cmp
add
push
movsb
sub
jno
arpl
leave
pop
out
inc
mov
push
pop
push
sbb
push
imul
cmp
in
ret
fcmovbe
cmp
pop
lcall
fcomps
adc
push
and
hlt
sub
add
xchg
in
ds
lea
xor
out
sbb
popl
mov
ja
xor
mov
xchg
adc
mov
xchg
outsl
xor
fldcw
adc
jbe
ljmp
or
push
add
add
lods
lret
cmp
mov
ljmp
scas
xor
fucomp
jmp
jno
mov
pop
mov
mov
xchg
inc
mov
fidivl
out
xlat
jnp
jle
jb
aad
mov
bound
scas
push
cmp
cmpsl
mov
mov
push
in
xchg
je
jbe
inc
push
pushf
mov
pushf
push
sbb
sub
fidivl
ds
lret
cmp
icebp
xchg
sbb
out
aaa
cs
mov
test
sub
xchg
leave
adc
imul
aam
cmc
xchg
mov
fcmovnu
insb
les
sbb
inc
jnp
flds
fimull
jne
mov
xor
add
nop
mov
mov
idivl
lret
fadds
sub
daa
push
xor
sbb
scas
jne
sbb
in
sub
push
and
adc
cmpsb
inc
ret
dec
dec
push
xlat
rcrb
xchg
dec
lea
and
pop
nop
jns
inc
xchg
and
and
inc
xchg
xchg
test
or
mov
jbe
or
pop
loop
es
in
mov
iret
push
aas
and
mov
movsb
cmc
mov
push
cmp
push
xor
xchg
mov
pusha
xchg
xchg
push
push
in
imul
cmp
sbb
pop
fidivs
in
dec
and
xchg
mov
mov
jmp
mov
ljmp
inc
fnstsw
dec
cmpsb
xchg
rcrb
sahf
pop
mov
and
stos
or
xlat
insl
inc
pop
mov
or
xchg
in
cmpsl
xor
rcrb
sbb
xor
ret
das
jmp
push
pop
cmp
mov
test
popa
shlb
pop
movlps
jae
mov
sbb
push
and
lret
testl
pushf
cmp
jne
test
lds
cmp
cmpsl
pop
jmp
test
jae
pop
mov
loop
xchg
mov
and
lret
push
jbe
adc
in
pop
andb
cvtpi2ps
jo
jb
out
divl
repz
xor
fdivl
dec
sbb
push
cmp
xor
push
sbb
movb
pop
sbb
add
sbb
gs
mov
cmpsl
inc
stos
sbb
imul
adc
repnz
dec
sahf
pop
movl
aad
lock
lahf
loop
push
pop
dec
arpl
les
repz
pushf
push
dec
add
or
mov
jno
fisttpl
ss
aad
popf
imull
cli
xchg
xchg
pop
add
cltd
daa
mov
push
push
sbb
test
pop
push
or
fcomip
in
mov
movsl
pop
push
cmp
es
clc
push
inc
xchg
aas
leave
push
or
test
or
adc
rol
adc
jns
xorb
mov
push
arpl
fdivrp
adc
mov
insb
inc
push
pop
push
les
add
pusha
mov
lds
inc
int
in
push
adc
into
add
mov
xchg
mov
and
mov
in
aaa
scas
cmp
push
jb
dec
adc
and
add
pop
inc
xor
shll
iret
scas
jmp
rclb
push
pop
xchg
add
andb
push
scas
dec
dec
sbb
xor
in
pop
pop
sbb
loope
loopne
xchg
adc
mov
push
mov
ret
pop
pop
mov
pop
add
mov
or
in
or
outsb
xchg
xor
loopne
fnstenv
jae
adc
push
mov
cwtl
loopne
dec
xchg
or
icebp
loop,pn
fadd
dec
sbb
in
lret
dec
idivb
or
and
icebp
dec
scas
das
xor
mov
and
mov
sbb
lds
cs
lret
movsl
jb
inc
adc
cmp
cli
push
push
mov
xor
fnsave
add
mov
mov
das
sbb
pop
jb
ds
sbb
imul
pop
out
pop
iret
out
jno
push
imul
loope
dec
mov
gs
xlat
ljmp
lret
hlt
dec
outsl
lock
ss
mov
test
addr16
mov
or
pop
cld
cmp
cmp
in
xlat
fisubrs
xor
or
int
sahf
mov
bound
js
aas
iret
mov
loop
pop
movups
fimull
xor
fiadds
movsl
mov
movsb
xor
outsb
mov
cld
outsb
add
sbbb
mov
es
xchg
outsl
push
jb
loopne
cmpsl
test
cmp
shl
ficoms
inc
xor
xchg
call
cltd
mov
fisubrs
add
mov
fisubl
inc
mov
adc
pop
in
outsb
push
fwait
push
push
iret
cmp
sub
sti
ret
cli
es
mov
ss
mov
sub
sbb
xchg
adc
sbb
xor
cld
movsl
scas
inc
dec
inc
dec
and
pop
lea
cmc
push
sbb
add
pop
pop
ficoms
mov
dec
dec
pop
or
mov
cltd
je
mov
stos
jl
xchg
jo
cwtl
sub
push
sub
adcb
cs
or
in
add
ds
push
stc
jp
xchg
roll
cmp
inc
pop
cmpl
dec
loopne
sbb
ret
iret
mov
rcrl
lods
sub
mov
sub
enter
imul
popf
mov
into
insb
lea
sub
pop
in
pop
data16
ret
lcall
int
rol
dec
cmp
ficompl
mov
call
cltd
ds
or
into
fsts
pop
popa
ds
clc
out
ds
dec
add
push
sbb
jo
mov
ret
push
outsb
test
aam
dec
leave
push
or
out
daa
adc
fadds
negb
add
mov
xchg
jae
xchg
test
jp
mov
mov
sub
dec
jnp
xchg
faddl
jnp
sub
in
loopne
pop
push
shll
jp
jnp
and
jle
aam
aam
pushf
leave
jb
or
push
ljmp
imul
fnstcw
mov
mov
or
std
out
popa
inc
mov
adc
xchg
jno
jmp
stos
movsb
push
dec
dec
mov
xor
cmpsb
in
movsb
fsubrs
mov
mov
cmp
repz
jno
jg
xchg
push
fwait
shlb
mov
call
mov
out
cs
mov
sub
jle
cmp
cmp
test
data16
push
pop
cmc
out
ja
sub
xchg
rorl
push
jl
loop
xor
sbb
addr16
popl
mov
out
std
push
mov
pop
mov
mov
repz
loope
mov
faddp
cwtl
and
jo
fcompl
or
mov
sbb
ret
aad
jne
neg
xor
loope
push
and
lret
cmp
sub
icebp
or
cli
adc
push
lahf
xor
repz
cs
jbe
sub
sbb
cmpb
fisttps
cmp
aad
gs
aas
xlat
inc
test
nop
inc
add
mov
inc
out
enter
repnz
lret
sbb
lret
test
iret
jge
xchg
ss
mov
test
adc
outsl
dec
xor
xlat
dec
push
loope
add
aas
sub
shlb
repnz
ss
aaa
inc
mov
add
rol
xlat
jo
rorl
push
sub
jg
and
jnp
stos
or
ds
xor
cmp
mov
pop
es
sbb
xchg
cmc
xor
cs
jp
push
std
mov
mov
cld
sub
push
jno
or
fldenv
and
xchg
adc
fs
sbb
sub
ds
pusha
lods
mov
je
fbld
sub
or
movsb
push
sub
adc
int3
cwtl
xchg
jae
pop
out
lret
test
gs
or
jne
or
popa
fldcw
aaa
cmp
sub
fs
jnp
add
nop
xlat
pop
arpl
loop
cmp
inc
push
and
icebp
in
out
xor
and
jne
lret
movsb
fisubs
or
jmp
scas
fsub
inc
push
nop
jp
jns
pusha
pop
addr16
imul
roll
pop
and
dec
pop
push
xchg
jo
mov
jae
dec
out
out
jmp
xchg
push
add
pop
arpl
pop
push
in
mov
imul
in
in
lock
mov
mov
and
push
mov
nop
push
shrl
pushf
faddp
add
xor
pop
pop
jno
outsl
cmp
mov
jns
rcrb
int3
insl
xchg
lret
testl
fsubl
xchg
push
jp
stos
dec
jg
push
pop
add
adc
jmp
inc
bound
out
icebp
aas
aad
sarb
push
mov
addr16
or
add
jne
jmp
fdivs
xchg
sub
mov
cld
xchg
fisubs
sub
outsl
jge
stos
dec
int3
or
sub
mov
add
pop
add
mov
mov
mov
mov
rol
aam
cmpsb
aam
lret
outsl
stos
inc
cmp
test
push
fldcw
sub
add
inc
mov
sarl
push
jle
insb
jmp
push
es
addr16
xor
mov
dec
aas
lahf
push
inc
loopne
or
mov
xchg
rcll
sti
pusha
divb
pop
shl
dec
cmpsb
lret
adc
gs
in
mov
jecxz
adc
mov
and
std
cmp
and
inc
push
rorb
imul
xchg
repz
mov
xor
in
xchg
push
mov
gs
in
movsl
dec
sbb
xchg
pop
inc
icebp
xchg
bound
push
mov
add
test
sub
dec
jl
shlb
imulb
and
mov
push
sbb
std
out
cmpsb
jno
ret
cs
sbb
adc
jbe
jle
lret
push
fstp
cmp
push
stc
fdivr
inc
loopne
or
inc
add
subb
cmp
mov
clc
stos
movsl
shlb
ds
add
xchg
sbb
cmpsb
adc
push
mov
pushf
lret
sub
stos
mov
jecxz
aaa
cmpsl
cmp
xlat
cltd
sbb
in
clc
xchg
stos
outsl
sbb
pop
icebp
mov
and
pop
cmc
push
cli
mov
ja
add
aaa
arpl
jge
mov
lds
arpl
sbbl
out
shll
ja
cltd
pop
jg
and
lods
lea
add
push
xchg
pop
movsl
jmp
mov
jo
jl
shl
lods
mov
cmp
aad
inc
mov
popa
mov
push
xor
sar
push
cmpps
rorl
test
jnp
arpl
sarb
jl
in
js
insl
or
sahf
cmp
add
js
or
loop
pop
daa
jne
jl
out
mov
xor
push
std
mov
dec
enter
and
mov
mov
xor
add
in
pop
lret
ja
push
mov
test
xor
jb
pop
shrb
aam
jb
pop
pop
icebp
jmp
int
sahf
pop
loope
lods
mov
mov
ret
pop
or
sbb
dec
cwtl
pop
xlat
dec
in
ror
in
push
fbstp
adc
inc
fninit
je
or
testb
and
pop
mov
pop
mov
repz
daa
pop
xor
mov
movsb
pop
rorl
scas
lds
jg
adcl
fists
mov
dec
iret
xchg
loopne
mov
in
nop
lcall
add
jb
outsl
fmul
add
or
aad
adc
insb
pop
cmp
xchg
push
ds
cmp
fbld
stos
out
pusha
rcrb
jne
sbb
sbb
add
outsl
lea
hlt
and
scas
shlw
repnz
mov
xchg
inc
jo
xchg
decb
call
lods
inc
pop
call
subl
shl
cli
loope
les
or
xchg
js
popl
mov
subl
sub
cmp
mov
repnz
inc
xchg
xor
xor
arpl
cmp
fnstenv
les
xchg
adc
xor
mov
add
and
in
cmp
std
xchg
rcrl
push
hlt
insl
mov
mov
loope
dec
mov
xor
pushf
and
loopne
pop
xchg
dec
xchg
fcomps
pop
pop
fdivr
mov
scas
inc
or
mov
cli
inc
addr16
addl
into
jae
dec
inc
orb
scas
or
add
shrb
jns
or
pop
xor
and
xchg
inc
inc
pop
into
repnz
xchg
dec
jge
les
push
adcb
ret
iret
and
ljmp
xchg
inc
mov
hlt
adc
dec
lods
sub
xchg
cli
cwtl
test
dec
xchg
stos
ds
sti
push
cmp
add
adc
xor
adc
int3
or
push
dec
popa
jae
dec
sbb
addb
push
scas
sub
pop
pop
mov
cld
add
dec
lret
aaa
daa
arpl
cld
mov
mov
lock
inc
inc
push
cmp
push
stc
jl
adc
jno
bound
add
xchg
mov
outsl
xchg
punpckhbw
out
notrack
imul
sub
mov
push
dec
pop
push
jne
rcll
cwtl
sbb
sbb
push
cmp
jnp
cs
arpl
push
notl
popa
mov
fwait
add
pop
push
jl
filds
mov
flds
aam
not
inc
push
add
sbb
push
ret
pop
lock
jp
sub
mov
cmp
pop
sahf
pop
pop
xchg
jmp
aad
lods
test
push
sbb
jecxz
dec
xchg
scas
stc
mov
ja
js
push
jmp
jnp
mov
lods
adc
andl
pushf
pop
cwtl
sbb
jl
aas
into
test
or
push
out
mov
dec
cwtl
push
mov
jp,pt
push
cs
sub
lea
push
or
push
ds
nop
cmp
out
add
mov
adc
add
andl
sub
pushf
xor
or
xchg
xchg
bound
mov
jbe
imul
js
movsb
adc
daa
fstps
inc
or
add
loope
mov
mov
fwait
mov
dec
adc
inc
test
sbb
aam
rcrb
addr16
movl
xor
loope
stc
jmp
mov
jbe
dec
xchg
adc
cmp
add
fstpt
mov
aas
dec
std
or
daa
add
xchg
adc
jb
dec
mov
pop
pop
mov
push
jae
cmp
mov
mov
in
pop
mov
xchg
mov
cmp
outsb
jbe
xchg
in
outsl
loopne
not
xor
or
ret
lret
lods
cmpsl
adc
sbb
xor
shrb
fldl
pop
sahf
psubb
inc
dec
adc
aaa
push
add
or
popa
fidivs
mov
or
push
lgs
lret
std
fs
jecxz
mov
out
adc
push
shll
mov
test
and
insb
in
or
inc
cmpl
insb
sbb
nop
xor
jl
scas
adc
or
jge
movsb
adc
lock
arpl
stc
adc
cmp
pop
imul
filds
mov
cmp
mov
mov
loope
or
fsubs
mov
pop
push
xlat
fwait
in
sti
ljmp
sbb
push
nop
in
data16
sarb
call
fimuls
stc
stos
icebp
popf
inc
jne
xchg
sbb
dec
mov
jmp
mov
mov
adc
jge
jge
inc
dec
lahf
ja
lods
cmp
dec
hlt
mov
lods
adc
lahf
std
sub
ds
cli
mov
xchg
push
insl
std
cld
in
push
test
inc
dec
adc
mov
push
test
rorl
and
jmp
inc
adc
add
outsl
mov
xchg
mov
sbb
mov
mov
push
xor
jl
js
cmpb
iret
lret
and
push
stos
stos
test
adc
mov
popf
sub
xor
dec
movsl
mov
into
jge
and
scas
xlat
and
aaa
jmp
inc
xchg
test
mov
push
mov
lea
push
std
sub
imul
lods
mov
addr16
lods
in
sarl
cmp
clc
rcl
add
mov
lds
popa
mov
pop
sub
and
jg
roll
iret
push
xchg
push
dec
xchg
in
add
sub
and
mov
mov
ret
jmp
fnsetpm(287
cld
cmp
stos
xchg
cmp
and
hlt
iret
fcompl
rcl
out
ret
imul
inc
movsb
mov
fs
mulb
arpl
fs
js
inc
jae
js
pop
mov
inc
or
and
into
ljmp
pushw
jne
ret
lea
jbe
inc
loopne
lret
ljmp
lahf
out
adc
je
mov
stos
mov
mov
push
sub
add
inc
and
inc
cmp
xor
fsubr
aaa
out
pop
lock
hlt
insb
lcall
add
clc
xchg
or
cld
jo
stos
fnstcw
xor
mov
dec
pusha
inc
jge
jbe
lods
fiadds
sbb
popa
mov
lret
dec
mov
sub
icebp
adc
push
movb
fs
clc
xchg
out
out
outsl
cld
movsl
jecxz
cmp
adc
sub
repnz
mov
adc
and
mov
pop
insl
fsubr
push
mov
movb
or
adc
js
sbb
mov
push
dec
insb
adc
lcall
jb
dec
push
and
int
mov
jmp
mov
adc
pusha
xor
cmp
sbb
aam
dec
or
lahf
andl
push
sbb
or
xor
cmpsb
popa
mov
imul
repz
sahf
insl
pop
xchg
sub
xchg
sahf
ret
dec
outsb
fsubrs
mov
push
inc
push
lds
out
sub
cli
fs
adc
push
mov
pop
fisttpll
push
xchg
ret
imull
mov
nop
je
fmuls
js
test
pop
adc
pop
pusha
and
sub
jmp
repnz
inc
stos
mov
pop
cltd
repnz
test
xor
add
pop
mov
mov
pop
cmpsb
cmp
loopne
ja
push
pop
test
test
inc
jmp
mov
out
dec
pop
ss
lods
scas
cmpsl
cmpl
add
push
lods
dec
push
mov
or
shll
jae
cmp
cmp
int3
pop
push
dec
cld
sbb
sub
mov
popa
out
pop
sbb
ds
xchg
adc
insl
jae
sahf
add
aam
inc
inc
and
adc
and
push
push
jmp
cltd
cmp
jmp
rcl
call
cmc
lret
mov
sub
das
push
fstps
out
test
or
scas
mov
std
sub
mov
data16
jp
mov
lahf
ret
mov
test
push
push
sbb
mov
sbb
cmp
jns
inc
mov
inc
jge
testb
rcr
adc
sbb
mov
hlt
fwait
adc
pop
js
pop
xor
js
daa
test
inc
mov
pop
cmp
sbb
dec
ss
js
xchg
mov
out
das
stos
push
aad
mov
push
xchg
ja
shlb
jae
out
ret
add
je
into
mov
cwtl
sub
inc
nop
add
movsb
inc
jl
repz
jns
rcll
notl
cs
push
mov
sti
push
movsb
out
cltd
ja
std
out
call
mov
aam
aad
loop
mov
cmp
pushf
icebp
fidivrs
mov
mov
jecxz
and
stos
sub
enter
jp
and
movb
mov
mov
add
mov
int
push
pusha
lock
or
dec
jge
mov
add
out
ret
inc
cmpsb
jnp
sub
js
jmp
repz
pop
lret
mov
outsl
mov
dec
and
xchg
sub
xor
pop
pop
nop
xchg
cld
rcl
fstp
adc
repz
xor
lock
mov
ja
pop
push
imul
mov
xchg
scas
daa
popa
mov
or
std
sbb
mov
cltd
xchg
push
popf
push
enter
xor
pop
inc
outsl
mov
inc
pop
xchg
repnz
aas
hlt
inc
das
push
or
shr
inc
rcrb
in
sti
movsb
mov
adc
sti
je
xor
data16
cmp
jp
xchg
jg
xchg
lods
mov
inc
jns
pop
mov
add
pushl
pop
movsb
or
and
sbb
inc
jmp
cmp
push
shlb
out
cltd
aad
cwtl
add
pop
scas
loop
jae
fcompp
sub
mov
xor
cmp
dec
movsl
mov
jg
lea
mov
or
les
out
push
xchg
adc
inc
mov
orb
push
mov
and
mov
cmp
sbb
lcall
cmp
cmpsb
repnz
sub
push
mov
je
shrl
push
test
shrb
dec
call
adc
mov
push
jns
jl
test
scas
sarl
pop
sahf
test
xchg
mov
aam
push
js
adc
outsb
sbb
int3
jo
sub
jo
mov
sub
test
sub
mov
addr16
sbb
or
mov
les
push
outsb
sbb
in
daa
push
mov
add
mov
mov
sub
mov
add
movb
aaa
clc
push
pop
movsb
pushf
popf
cli
mov
pop
xorl
fdivl
push
mov
mov
incl
sub
adc
hlt
shrb
test
mov
adc
mov
stc
adc
dec
dec
mov
inc
pop
push
subl
mov
ss
lds
cmp
jecxz
ss
lahf
pusha
jge
adc
popa
jne
stos
sbb
or
mov
clc
cmp
xchg
xchg
pop
call
in
in
imul
iret
cmp
cmpsl
mov
fldcw
xor
jb
fdivp
jle
push
push
mov
int
inc
jo
ret
inc
clc
jne
cli
loope
pushf
outsl
xlat
mov
xchg
das
or
xor
mov
fmull
and
sahf
lock
jle
sub
ljmp
pop
inc
mov
ljmp
int
pop
mov
mov
fucomip
js
and
into
xchg
cmc
jecxz
cltd
jb
imull
mov
test
and
jno
sub
xor
mov
repnz
hlt
adc
or
push
lods
fsubs
or
lcall
das
push
sbbl
xchg
jbe
or
jnp
or
fbld
movsl
imul
sub
test
in
xchg
test
sub
add
out
inc
cmp
or
xorb
outsl
cmp
por
cmp
das
inc
fnstcw
mov
and
es
movsb
cmpsb
lret
jno
push
notl
mov
push
testb
insb
mul
jg
into
sub
push
xor
mov
pop
mov
ret
cmpsl
xchg
dec
aam
pushf
jg
popl
pextrw
fwait
nop
xor
movsb
mov
add
fwait
imulb
cmp
in
jnp,pt
lods
std
loop
xor
enter
xchg
inc
cmp
setne
pop
cmp
mov
mov
cltd
dec
lods
gs
mov
push
jge
lea
mov
test
pop
mov
cltd
adc
ljmp
pop
or
and
mov
xchg
xchg
xchg
sbb
or
imul
ja
mov
inc
negb
call
add
fsubrl
mov
adc
or
or
mov
andb
or
sub
cmp
stos
outsb
movsb
sarl
fld
mov
xor
mov
mov
jp
rolb
bswap
dec
mov
iret
es
std
mov
idiv
dec
into
push
out
movsl
std
pop
push
mov
fldcw
aad
aad
mov
ds
or
insl
push
testl
push
sbb
xor
in
outsb
jp
xor
dec
lcall
scas
mov
or
or
sbb
add
add
stos
hlt
imul
lahf
mov
ficoml
xlat
pop
into
adc
repnz
or
inc
or
mov
xchg
mov
insl
pop
dec
jecxz
mov
inc
jne
and
jns
js
insl
adc
loop
es
mov
insl
jb
sub
inc
test
in
cmpsb
in
loop
mov
fistps
imul
and
or
mov
xlat
mov
andb
jnp
pop
sbb
mov
cmc
pop
lods
cli
imul
jecxz
aaa
andl
fidivl
fistl
shlb
call
push
pop
mov
sar
mov
cmpsl
or
sahf
mov
push
mov
jl
ret
repnz
inc
dec
push
and
xchg
sub
mov
dec
fldl
dec
sub
mov
mov
xchg
dec
cmc
or
iret
or
sub
sbb
loope
cmpsl
jg
adc
and
mov
sub
jp
paddsb
xchg
mov
pusha
fstl
sarl
int
jne
into
mov
mov
jge
xor
pop
inc
cli
movsb
pop
xchg
fbstp
in
sub
inc
loope
mov
pop
adc
ss
pop
mov
inc
clc
dec
cmp
lahf
ficoml
mov
mov
es
js
jnp
push
das
imulb
add
das
imul
pop
andb
push
imul
mov
add
add
ss
pusha
jae
fmull
mov
rorl
pusha
test
lock
jge
and
lcall
dec
nop
and
test
fs
int3
mov
sub
jmp
or
mov
out
adc
push
stos
jae
jp
mov
nop
cmp
pop
shll
inc
xor
mov
ret
sub
pop
pop
jb
lret
jne
dec
hlt
inc
gs
mov
mov
lret
or
scas
leave
dec
pop
push
xchg
xor
aad
je
mov
adc
cmpsl
mov
cli
inc
jl
pop
cmp
mov
xor
xchg
pop
sub
mov
inc
rcll
das
sti
icebp
ja
mov
mov
adc
faddl
and
fcmovnbe
pop
dec
xlat
lahf
stc
push
imul
fisubrl
std
jbe
mov
mov
lret
xor
popf
pushf
inc
cli
dec
lcall
mov
xor
cmp
xor
fists
repnz
xor
sbb
pop
in
sub
pop
iret
imul
out
adc
push
push
sti
dec
aaa
sub
clc
push
mov
pop
movsl
into
out
imul
adc
test
in
mov
sbb
and
add
lret
mov
push
xor
or
jle
std
fistps
add
loop
inc
ret
ss
scas
into
push
icebp
je
mov
inc
jae
mov
cmp
and
jl
hlt
enter
xlat
cmc
ffree
mov
arpl
xor
xor
cmp
dec
insl
jecxz
adc
push
adc
jg
dec
jle
adc
mov
inc
xchg
insl
mov
sbb
rcrl
aad
dec
stc
ljmp
jg
push
aas
loop
movsl
xor
mov
sub
cld
pop
or
add
sub
movsb
xchg
and
data16
movsl
loopne
call
daa
vpsadbw
in
je
pop
inc
pop
sbb
lcall
test
jnp
pushf
shl
aaa
fdivs
lahf
jecxz
dec
adc
mov
arpl
mov
aaa
push
mov
negb
pop
cmpsl
pop
cli
xchg
and
mov
dec
js
scas
mov
xchg
call
je
addr16
sub
lds
xorb
into
mov
mov
and
pop
sbb
out
loop
push
mov
movsb
and
inc
aam
cmp
add
mov
pop
or
shlb
insb
fidivrs
out
xor
rorb
dec
cmp
mov
lock
test
cmp
sbb
les
rcrl
pop
or
xor
mov
lcall
push
test
xor
outsl
and
je
lock
test
cmc
out
andb
mov
push
in
sub
cmc
scas
cmpsb
les
or
xchg
and
inc
jp
push
push
adc
je
xchg
cmpl
fwait
dec
sbb
arpl
roll
into
addr16
mov
das
mov
mov
test
inc
notl
lds
imul
mov
dec
scas
adc
mov
sar
push
icebp
movsb
movsl
mov
imul
xlat
pop
or
fidivs
dec
stos
inc
cmp
mov
daa
xchg
iret
test
xchg
cmp
lds
ja
or
outsb
clc
xor
std
pop
xchg
repnz
sub
add
repz
push
mov
sub
dec
or
cmp
jno
fists
mov
dec
jae
std
outsl
dec
in
sarl
push
ljmp
xor
jge
es
and
rorb
jbe
push
lods
sahf
js
sti
ret
lods
pop
pop
incl
and
and
clc
cmpsb
cltd
orl
inc
aaa
mov
add
cmpsl
sub
or
stos
pop
ja
insl
dec
aad
and
push
lcall
cltd
xchg
enter
mov
clc
mov
aaa
xchg
sti
mov
out
jmp
pop
iret
loopne
test
repz
pop
insl
jb
aas
pop
popa
push
in
out
add
test
out
dec
sub
test
scas
movsl
and
sub
subb
sbb
cmpsb
jnp
xor
and
dec
cwtl
fnstsw
daa
jmp
mov
cmp
scas
roll
jne
sbbl
mov
pop
mul
jbe
in
xor
adc
dec
outsl
sbb
enter
hlt
out
cltd
or
or
sbb
arpl
adc
fldl
push
push
pop
in
add
rorb
dec
fdivrs
fimuls
sti
rclb
js
jnp
icebp
xor
mov
imul
enter
jmp
dec
mov
lret
xor
inc
and
dec
xchg
xlat
inc
int3
cltd
inc
push
xchg
data16
repnz
or
jge
jg
dec
sbb
sub
sbb
sub
es
xchg
addr16
sub
pop
or
mov
add
fcmovnu
xchg
dec
xchg
stos
rcrb
push
cmp
pop
out
loopne
sar
call
popa
sti
sarl
lods
add
adc
mov
xchg
stc
lea
push
out
je
inc
aas
shrb
ja
mov
pop
or
enter
sub
xchg
arpl
pusha
sbb
mov
lea
rcll
and
jge
into
adc
pop
add
inc
adc
mov
out
sbb
adc
xor
fcomps
repz
lods
xchg
xorb
mov
movsl
scas
mov
hlt
sahf
test
ror
push
xor
imul
push
and
xor
das
pop
mov
lds
andb
rorb
jmp
inc
cmpsb
stos
or
repnz
mov
adc
pop
xchg
cmpl
dec
hlt
test
orl
add
sbb
stos
jle
mov
lds
mov
adc
lret
pop
icebp
or
in
pop
cmc
repz
pop
repz
movsb
rolb
mov
imul
push
mov
push
push
cli
daa
jnp
mov
cmp
dec
xchg
push
pop
and
xor
dec
js
push
scas
dec
add
imul
pop
sub
jmp
mov
int3
jae
lcall
add
sahf
fldenv
pusha
je
add
xchg
dec
xor
cld
es
push
lods
sbb
rcrb
add
adc
pop
ljmp
sbb
and
imul
gs
or
out
iret
and
mov
loop
incb
dec
xor
lock
pop
pop
sbb
dec
sub
in
pop
xchg
rcrb
lock
dec
cwtl
mov
mov
cmp
xor
fisubl
aad
lret
in
out
mov
out
sub
cltd
imul
shl
xor
inc
int3
lods
push
clc
sub
cmpsb
test
pop
sub
je
jge,pn
insl
mov
xor
mov
push
push
popf
stos
decl
in
lea
std
ret
je
clc
ds
or
std
and
adc
cli
lcall
sub
push
dec
and
into
mov
xchg
sbb
imul
or
push
js
imul
dec
dec
sub
push
sbb
outsl
sub
add
jae
push
sbb
mov
jb
movsb
jno
inc
enter
enter
push
jns
addb
sbb
pop
cs
in
mov
pop
dec
mov
leave
adc
and
roll
pushf
push
xor
mov
push
push
adc
pop
lock
cld
in
pop
loopne
inc
push
int
mov
cmp
stos
shrl
shrb
dec
xor
mov
test
mov
scas
cmp
jne
loopne
push
fs
push
mov
cmpsl
stc
xlat
sub
sar
jae
mov
test
es
loop
or
scas
mov
or
in
mov
adc
xchg
push
rolb
fsubrp
ror
and
in
out
ljmp
loope
cmp
cltd
inc
and
lock
adc
or
fwait
xchg
sahf
xchg
nop
mov
cli
cmp
stos
pop
or
insl
cmp
mov
pop
cs
add
or
std
mov
test
inc
dec
test
cmpsl
xchg
jge
popf
add
cmpb
mov
lds
addr16
call
fldl
xlat
or
arpl
out
inc
dec
enter
push
pop
mov
test
jno
ret
inc
push
jge
outsl
push
mov
loope
dec
outsb
mov
in
sub
shl
ret
cmpsl
sahf
outsb
hlt
inc
dec
cltd
fsubrl
js
decb
out
aam
scas
and
xor
mov
xor
movsl
ljmp
fcoms
pop
sub
pop
mov
je
push
and
inc
je
js
fs
xchg
dec
idivl
pop
pop
cmpsb
shrl
loopne
ss
add
pop
fdivrs
inc
lret
inc
cltd
mov
cmp
xor
lea
adc
cmc
popf
jp
xor
pop
jle
popa
inc
data16
out
xorl
lock
jnp
xor
mov
es
orl
fists
fcmovnbe
lcall
jae
xor
cmp
insb
in
inc
push
xor
in
inc
enter
movsl
mov
push
lods
sbb
add
outsl
test
and
inc
or
notb
sub
inc
jae
psadbw
insl
inc
jnp
cmp
xor
mov
dec
in
sbb
inc
sub
fcoml
shrl
loop
insl
cwtl
lds
mov
jae
pop
cmp
or
inc
cld
mov
pop
aas
lret
mov
arpl
xchg
shlb
hlt
std
mov
pop
jge
outsl
mov
out
xchg
adc
inc
mov
inc
test
es
in
push
lcall
mov
inc
pop
dec
pop
outsl
add
shl
mov
mov
inc
xchg
fstp
or
or
cltd
bound
xchg
insb
in
shlb
sahf
push
mov
push
data16
es
push
leave
je
cmp
add
stos
mov
and
in
in
mov
dec
mul
test
sub
mov
sub
pop
push
std
mov
les
lcall
daa
cmc
es
pop
pop
jbe
subl
jo
shll
nop
sub
pop
out
scas
outsb
out
xlat
in
push
adc
mov
fdiv
xchg
sbb
out
and
sahf
cmp
sbb
sti
sbb
orl
cltd
inc
push
arpl
xor
ficompl
fisttpll
outsb
mov
push
sbb
pop
jne
xchg
pop
cltd
arpl
rcr
sub
mov
sub
int3
shrl
loope
sbb
adc
mov
das
subl
mov
xchg
jns
dec
push
pop
xor
test
adc
sti
inc
stos
adc
sub
test
das
pushf
popf
mov
leave
xchg
mul
sarb
sub
push
inc
ret
mov
ljmp
mov
jno
test
aas
lcall
push
inc
hlt
mov
shll
sbb
xor
imul
add
inc
fcom
adcl
in
mov
mov
cmp
filds
or
gs
in
pop
and
lahf
mov
cld
negb
hlt
out
aam
cmp
pop
sub
cmp
xchg
mov
xor
mov
sub
cs
sbb
mov
mov
xor
insl
sub
or
mov
mov
into
inc
orb
push
jae
dec
or
shl
xor
adc
add
popa
lods
sbb
cmp
push
fldenv
cmp
pop
dec
enter
push
in
mov
movsl
mov
pop
sbb
or
mov
cld
dec
add
rclb
fdivp
inc
xor
mov
add
push
dec
jp
xor
cmp
push
in
cld
fdivs
outsb
dec
mov
jp
pop
xor
popa
scas
lea
sbb
jnp
and
or
lahf
sbbl
popa
mov
sub
insb
roll
std
sub
jl
outsl
cmp
mov
mov
repnz
sbb
rcl
lods
loop
pop
mov
or
sbb
rorb
inc
loopne
dec
mov
sub
xor
repz
nop
adc
subb
and
sbb
loop
dec
push
outsb
push
rclb
mov
push
or
int
xor
daa
sbb
jo
popl
mov
pop
mov
ja
jecxz
imul
sbb
push
pop
push
inc
clc
mov
pop
jns
insb
dec
xchg
mov
adc
cld
push
fists
sub
jmp
adc
imul
movsl
stc
cmp
inc
orb
test
adc
add
cmc
leave
pop
mov
insl
insl
dec
pop
fsubr
in
inc
fcomps
fadd
fadds
iret
rcrb
iret
lods
or
push
adc
filds
cmp
dec
cltd
mov
xchg
inc
pop
add
jmp
push
and
insb
dec
mov
js
cmp
stos
call
mov
jb
push
mov
bound
ds
lds
stc
mov
js
cmp
push
add
fs
mov
inc
mov
cmpsl
inc
sub
pusha
movq
mov
loope
xor
push
mov
int
mov
andb
sbb
mov
lret
push
adc
push
stos
lods
repz
bound
add
xchg
lds
ror
shlb
lahf
test
lods
lock
inc
nop
and
push
dec
das
popa
data16
flds
push
fidivl
lcall
mov
das
sahf
xchg
fs
shrl
mov
test
fimuls
mov
subb
inc
cmp
push
out
mov
das
repz
shrb
cmp
call
mov
shrb
jge
pop
out
sub
push
scas
cmp
in
xor
lahf
nop
stos
int
push
push
push
stos
xchg
cmp
cmp
outsb
sub
jno
aad
cmpsb
push
mov
sub
xchg
sarl
push
or
sbb
or
jne
or
xchg
lods
addl
mov
pop
gs
iret
test
das
iret
std
inc
loop
inc
mov
adc
jmp
sbb
or
inc
sub
mov
aas
sbb
outsl
movsb
lods
jmp
xor
jns
add
push
mov
aad
sbb
dec
loopne
cmp
push
andl
lahf
jle
ret
inc
jp
jbe
jnp
jbe
fisubs
cmpsb
lock
dec
loop
cltd
out
fs
in
jl
loop
mov
mov
mov
inc
adc
testb
sbb
test
inc
xor
jg
mov
nop
pop
loope
xor
lods
pop
xor
cmc
push
mov
nop
and
xchg
je
iret
push
addb
bts
add
sub
sbb
adc
dec
push
lds
lea
push
and
ret
sti
jb
and
cmp
out
cmp
sub
jne
add
mov
sub
cmp
mov
adcl
xor
sarl
lods
and
adc
pop
pushf
lods
popa
xor
adc
mov
sbb
test
popf
and
pop
mov
movsl
fidivrl
mov
sub
jo
ds
mov
aaa
hlt
mov
xlat
rol
in
mov
xchg
es
xchg
ds
fnstcw
sti
push
test
data16
xchg
cmp
push
lret
test
inc
fsubrl
notb
adc
inc
dec
rorb
mov
es
pusha
nop
jo
and
rclb
movsl
fs
ja
mov
pusha
cs
push
pop
test
test
or
je
mull
dec
adc
aas
inc
jmp
leave
rclb
add
lods
inc
ljmp
inc
dec
push
pushf
push
repz
mov
outsl
imul
out
orl
xor
fwait
push
xchg
or
adc
cltd
mov
xlat
dec
xor
mov
jno
pop
ret
sub
aad
pushf
cmpsb
ds
dec
pushf
pop
data16
mov
mov
jl
adc
maxps
fs
mov
cs
imul
sti
pop
lret
dec
repz
pop
cmpsl
pop
dec
loope
jo
lock
push
rclb
je
xchg
pop
lods
ds
dec
gs
push
aam
not
push
pop
mov
or
inc
add
mov
xchg
shrl
pop
pop
stc
cmovg
inc
mov
dec
push
sti
add
sub
dec
sbb
fs
mov
xchg
cltd
mov
adc
pop
xchg
shlb
pushf
in
pop
outsl
pop
pop
push
jnp
dec
jle
pusha
sbb
lcall
mov
shl
adc
and
dec
mov
daa
and
fcmove
insl
jl
fadds
push
jmp
and
shlb
addl
popf
shll
jb
mov
push
loopne
and
xchg
ret
lret
push
pusha
outsl
xchg
push
nop
stos
bound
jnp
out
push
mov
pop
hlt
adc
cmpsl
out
adc
mov
inc
add
jo
jne
nop
sub
xchg
xor
out
add
add
xchg
or
hlt
cmp
mov
fcmovnu
rorb
mov
mov
lahf
jecxz
xor
mov
lret
sahf
inc
push
aam
fisttps
jge
test
imul
add
faddl
push
ja
add
and
mov
ficompl
pop
xchg
fs
out
int3
mov
data16
mov
pop
and
sub
adc
adc
cwtl
dec
mov
jbe
rcrl
pop
lcall
hlt
cmp
repnz
push
pop
push
ret
cmpsl
into
shlb
fisubrl
popa
aas
arpl
lret
jns
clc
sbb
cmpb
bound
cmp
push
loop
std
and
add
xchg
mov
jg
rcrl
mov
sbb
cmpsb
mov
inc
fwait
loopne
add
mov
es
mov
movsl
pop
pop
stc
and
cmp
ror
pop
sub
in
and
gs
mov
push
mov
inc
sub
lea
shll
and
sub
sbb
add
xor
sbb
mov
or
mov
rcll
int3
add
xor
sub
push
or
shrl
dec
mov
cltd
adc
imul
cmp
push
add
shlb
and
stos
pop
pop
mov
cmp
test
test
dec
icebp
inc
sub
bnd
cwtl
pop
lret
xchg
cli
adc
and
xchg
and
lcall
ret
and
ror
loopne
fs
dec
mov
push
pop
rclb
push
testl
scas
mov
into
jb
and
push
push
mov
mov
in
jp
mov
rorb
sbb
fwait
hlt
cmp
ret
movsl
cmpsl
adc
fdivrs
aaa
sub
jbe,pn
fstps
pop
roll
or
pop
aam
jbe
fidivrl
xchg
xchg
ds
cmp
shrb
sbb
xor
lods
pusha
sbb
push
inc
out
mov
and
and
lahf
mov
gs
lods
dec
test
dec
or
imul
mov
and
cmp
test
rcr
test
aas
mov
loope
jmp
cmpsl
inc
pop
pop
push
ja
stos
cltd
push
out
cltd
jmp
xchg
into
mov
mov
repnz
pop
sbb
fs
jmp
inc
es
les
adc
movsl
mov
outsl
mov
cwtl
xor
iret
sbb
loopne
in
dec
rcr
lds
mov
push
out
std
div
inc
xlat
mov
sub
pushf
cmp
push
into
sar
test
inc
push
jle
or
dec
sbb
fucomp
mov
mov
in
scas
cmp
adc
dec
int
sti
mov
sti
fisubs
adc
sarb
in
push
sbb
lret
mov
pop
ljmp
das
xchg
and
pusha
sub
sbb
xchg
push
and
icebp
dec
lret
call
add
popa
lret
xchg
push
xor
sbb
sbb
mov
cs
das
insl
xchg
mov
mov
xchg
push
pop
aad
mov
shl
mov
mov
in
mov
les
aas
inc
sbb
xor
frstor
aad
mov
stos
mov
out
cltd
push
xchg
xchg
mov
cmp
add
sub
ds
andb
mov
jne
mov
pop
outsb
test
not
xchg
movsl
xchg
call
or
xchg
cmp
mov
xor
sub
pop
movsl
mov
xor
mov
loop
ss
jne
stos
push
in
repz
std
pop
add
je
ss
mov
mov
xor
sbb
in
mov
xchg
push
cmpsb
int
jge
icebp
add
xor
jecxz
ret
push
int3
ljmp
lret
cwtl
lds
adc
negb
loopne
es
mov
mov
jne
aas
push
sub
stos
sub
es
xor
scas
push
xor
sbb
and
mov
fwait
add
jle
push
in
mov
inc
aas
inc
outsb
or
jle
lods
out
add
mov
push
pop
push
cmpb
out
gs
in
fwait
mov
filds
mov
add
xor
sub
inc
aaa
into
pop
jae
dec
hlt
dec
pop
sbb
dec
pusha
pop
mov
dec
aam
daa
aaa
bnd
xchg
and
adcb
nop
sbb
sub
xchg
jns
mov
insl
iret
sbb
filds
subl
popa
add
leave
test
mov
lcall
dec
push
in
xchg
push
jp
ret
xchg
and
test
add
jne
call
xchg
or
notl
cwtl
cmc
push
mov
mov
dec
fs
scas
push
xorb
add
addl
cmp
test
popa
inc
jno
and
shlb
cmpsl
add
je
lods
test
rorl
mov
mov
outsl
mov
jmp
push
push
xor
mov
inc
lea
sarl
add
adc
mov
shl
xor
imull
repz
testl
jmp
xor
inc
mov
jno
mov
add
addr16
mov
ss
and
jmp
add
loop
loope,pn
adc
and
aam
push
push
mov
fistl
js
das
mov
cltd
cmp
pop
cmp
adc
jb
dec
lock
mov
jmp
mov
scas
and
mov
sbb
rclb
push
mov
sub
fwait
push
stos
aas
xor
adc
sub
sbb
in
nop
lods
data16
stos
lea
mov
or
loopne
jae
ljmp
inc
sbb
mov
mov
sub
pusha
cmpl
xchg
push
shl
mov
jo
arpl
addl
mov
nop
cwtl
ss
lret
dec
jb
imul
je
pop
jns
fs
rdmsr
inc
push
scas
cmp
push
jecxz
cli
lret
aaa
push
sub
cmp
add
mov
out
add
jl
cmp
lahf
daa
mov
shrb
je
or
cld
push
inc
aad
push
sub
or
xor
mov
sbb
pop
jle
sbb
mov
loope
xor
outsb
popf
pop
cmc
xchg
mov
in
add
pop
hlt
loopne
int
loop
divb
or
pop
cmc
inc
ja
pop
ljmp
outsb
xlat
jp
sbb
mov
sub
enter
stc
dec
adc
push
movb
daa
fsubs
dec
daa
outsl
xchg
cs
and
arpl
pushf
in
test
push
test
outsb
cmp
sub
pop
xchg
push
dec
cmp
leave
and
rcrb
int3
orb
jo
pop
sarb
push
aad
xchg
dec
lret
xor
add
imull
inc
jge
popf
mov
adc
or
mov
cmpsl
xlat
xchg
pop
or
xor
icebp
add
mov
adc
aad
scas
mov
imul
add
movsl
test
sub
pusha
cmpsb
add
test
data16
rcll
dec
sub
jbe
movsl
cmp
add
cld
clc
ror
test
sbb
mov
popa
inc
dec
fistpll
jle
pop
or
and
repz
pop
xlat
xor
and
std
out
repnz
sbb
insb
lods
stos
fsubrl
adc
ds
push
popf
les
out
sbb
and
add
int
testl
xchg
push
cmc
push
mov
or
dec
insb
mov
sub
clc
pop
mov
popf
xor
es
loop
mov
out
xorl
aam
inc
mulb
imul
xlat
push
mov
or
ret
clc
sbb
call
jmp
mov
mov
mov
cmpsl
sub
mov
add
adc
sbb
mov
xor
stos
xchg
and
mov
imul
stc
lcall
xor
pushf
jno
jne
fbld
test
add
pop
incl
std
loopne
dec
pop
xchg
adc
cmp
data16
out
inc
sbb
mov
cmp
mov
lcall
jne
push
mov
dec
inc
cmp
mov
push
add
inc
lods
imul
out
es
mov
inc
inc
xor
out
cmp
aaa
roll
cli
jne
test
lret
fimull
fwait
cld
fwait
das
jbe
mov
pusha
in
adc
rolb
jne
imul
ret
inc
shrl
sti
fisttpl
lock
gs
popf
sub
push
mov
call
shll
daa
das
sub
mov
jmp
pop
pop
cmp
jne
or
inc
test
jno
out
and
mov
and
add
mov
inc
xor
sbb
sub
sbbl
arpl
ds
js
mov
jne
pushf
scas
xchg
jmp
or
loop
stos
mov
cs
xor
cmp
lds
pmullw
negb
or
scas
stos
add
cmpsl
dec
mov
mov
or
pushf
inc
shl
dec
sub
imul
repz
inc
shlb
mov
sbb
in
lret
sub
lret
cmp
int
scas
add
push
sbb
addb
mov
sbb
adc
xor
cld
sbb
mov
and
int3
stos
add
daa
push
sub
in
lods
mov
stc
xor
jmp
add
roll
push
js
inc
xchg
mov
dec
sub
mov
mov
lret
sbb
xchg
ja
xchg
xor
mov
mov
enter
jp
outsb
popa
sub
lret
sbbb
sbb
push
fwait
and
add
mov
adc
cs
outsb
mull
pop
in
test
pop
adc
xchg
adc
fdivrl
mov
mov
mov
mov
fcomi
jle
pop
or
lods
pop
nop
lahf
sub
idivb
sbb
shll
imul
xchg
scas
jl
movsl
dec
inc
or
mov
stc
jnp
cmc
cltd
and
sbb
mov
scas
sub
push
mov
sti
jb
addr16
out
mov
rcll
andb
xor
addr16
inc
in
popf
push
pushf
ficompl
out
sbb
jo
enter
mov
fnstenv
lahf
into
and
out
mov
leave
dec
add
lea
cltd
xlat
sbb
jae
ljmp
pop
insl
popf
imulb
iret
sbbl
ja
jb
popf
cli
out
xor
and
cmpsb
in
jno
push
mov
xchg
lock
xchg
aam
movsb
int3
data16
and
xchg
out
jle
gs
mov
rclb
mov
movsb
push
nop
xchg
ficompl
cmp
addr16
and
inc
ja
xor
sti
loop
dec
popa
push
pop
int
xchg
orb
pop
mov
inc
cltd
jmp
rcr
lea
sti
xor
test
fidivl
mov
test
stc
dec
mov
scas
nop
pop
int3
scas
xchg
cwtl
add
loopne
in
pusha
xchg
int
in
js
popa
push
test
jns
repz
and
jecxz
ret
add
add
jno
mov
sbb
jbe
mov
int
ficompl
addr16
push
xor
add
dec
sub
shrl
imul
sti
fs
mov
cmp
jle
jno
outsl
push
fs
jne
mov
fld
sub
or
mov
or
fldenv
or
mov
dec
negl
pop
mov
stc
push
cmp
inc
sub
insb
jbe
in
sbb
shufps
mov
push
lahf
pop
xor
mov
aam
daa
sub
sbb
cmp
sti
je
outsl
mov
ds
aam
add
dec
orb
sub
push
xor
in
fimuls
rcrb
in
jnp
std
pop
fdivrs
mov
pop
testb
cmp
xchg
push
jmp
hlt
xor
lcall
out
push
inc
jbe
mov
adc
push
cwtl
cmpsl
ret
xorb
aaa
out
lcall
test
jmp
notl
jb
cwtl
mov
data16
loope
nop
and
enter
nop
cmpsb
adc
cli
inc
rcrl
and
cmp
xlat
or
iret
dec
std
enter
pushf
pop
sbb
incl
aad
loopne
xchg
neg
xchg
mov
mov
iret
scas
xchg
add
in
cmovle
mov
pop
imul
stos
jbe
pop
inc
test
test
push
pop
imul
sub
pushf
cmp
sbbb
jnp
outsb
cwtl
daa
pushl
dec
pop
mov
mov
ficoms
pop
adc
lea
cmp
and
or
subl
sub
and
lcall
cmp
loopne
inc
sub
rcll
fs
ret
out
mov
push
mov
cwtl
imul
add
fdivs
aaa
pop
ret
in
cmpsl
pop
dec
cmp
das
or
push
inc
fisubrl
les
pushf
insl
or
cmp
jne
or
aaa
and
movsl
jmp
inc
orb
sub
push
xor
or
loope
xchg
push
push
pop
jno
mov
jg
or
rcl
xor
jbe
lods
mov
xchg
push
cmp
jae
popf
jb
pushf
hlt
mov
cmpsb
outsl
mov
jl
add
xor
mov
daa
xor
push
mov
lea
add
dec
xor
scas
push
push
loope
cmp
shll
mov
cmp
add
mov
aas
loop
loopne
sahf
sub
add
xor
adc
pop
ds
push
add
cmp
cmp
pop
movb
xor
scas
test
subl
iret
mov
push
dec
sub
xlat
mov
cmpl
cmp
fimull
inc
sbb
lods
mov
loopne
lods
sbb
jmp
pop
subb
lds
push
cmp
shll
test
xor
mov
push
cmp
and
push
and
cld
pusha
sbb
sbb
dec
outsb
xor
mov
insl
mov
idivl
or
jo
xor
loope
in
mov
cmpsl
gs
das
lds
sub
mov
icebp
sbb
push
nop
or
call
ffreep
mov
jae
jbe
enter
push
push
test
aam
adcl
dec
cmp
fcomp
imul
sub
fisttpll
xchg
fldt
insb
js
dec
clc
lods
mov
pop
out
sbb
dec
test
insl
fbstp
shlb
adc
add
rol
daa
shr
add
in
pop
je
adc
imul
inc
sti
lcall
push
push
leave
adc
adc
test
aad
scas
mov
jbe
mov
or
mov
push
shll
sti
or
insb
pop
out
pop
test
pop
lods
cmp
xor
jnp
std
addl
mov
jecxz
cmp
addr16
dec
xchg
out
fmulp
push
jno
insb
shr
fcomi
and
sub
inc
push
mov
push
xchg
mov
nop
movsb
jne
lret
mov
repnz
push
jo
or
mov
inc
testb
and
xlat
incl
in
fiaddl
popa
movsb
mov
inc
dec
xchg
scas
inc
jne
outsl
aaa
push
xchg
push
mov
addr16
add
or
adc
sub
jg
adc
or
std
shlb
and
in
or
or
mov
gs
cltd
push
stos
out
cmp
jb
pusha
sbb
mov
mov
lods
inc
fstpl
pop
imul
sbb
movsl
lret
andb
sbb
sub
cmpxchg
mov
jo
aam
adc
jb
fisttps
cltd
and
jno
sti
push
cmpb
sti
sub
adc
pop
leave
jnp
das
add
popf
sub
dec
inc
xor
fimuls
mov
test
adc
pop
xor
mov
scas
std
xchg
cmp
xlat
scas
cmpsb
pop
pop
push
pushl
cmp
repnz
xchg
mov
cmp
push
xlat
mov
mov
fnsave
int3
dec
mov
xor
sub
jmp
jns
sub
xchg
jo
js
sub
push
dec
leave
cltd
or
scas
inc
sbb
mov
adc
pop
jecxz
xor
inc
push
aas
jne
test
jbe
push
aaa
xchg
test
rcl
addr16
imull
or
scas
insl
xor
inc
push
cmp
cld
cmpsb
xor
push
pop
push
ja
notb
sub
leave
scas
lock
icebp
adc
icebp
inc
push
dec
mov
add
cmpsl
pop
lahf
sti
mov
lods
push
mov
aad
insb
out
lds
mov
test
dec
das
bound
psadbw
add
stos
stos
add
mov
push
dec
lahf
xchg
repnz
cmp
arpl
sbbb
mov
jl
mov
into
inc
into
sarb
aad
mov
lods
cmp
cltd
inc
add
xor
or
sahf
popl
ja
mov
lcall
or
adc
and
addr16
adcl
rolb
rclb
icebp
push
cmc
xchg
jl
outsl
nop
pop
push
test
push
cmpsb
adcl
mov
pop
iret
cwtl
lock
and
jecxz
cwtl
test
dec
jnp
iretw
mov
iret
jns
ds
fnstcw
ljmp
and
pop
negl
or
or
mov
loop
pusha
push
adc
pop
scas
pop
xchg
scas
movl
jbe
in
add
fstpl
xchg
push
inc
mov
or
ficomps
out
xor
push
fmull
out
stos
sub
sbb
sbb
mov
sarl
add
loopnew
inc
cmp
lret
out
mov
inc
mov
or
jecxz
xchg
fiaddl
sbb
push
sbb
xchg
sbb
sub
dec
jl
mov
sahf
sub
inc
sub
dec
push
rcrl
or
mov
mov
les
and
leave
lret
mov
cmp
dec
mov
jne
push
cmp
inc
inc
sbb
daa
add
mov
out
or
outsl
cmp
xor
shrb
dec
mov
jbe
cmp
stos
add
push
sarl
imul
mov
mov
add
pop
cmp
jns
mov
or
aam
xorl
xorb
mov
jnp
mov
inc
in
cli
add
dec
mov
pop
pop
adc
mov
adc
push
adc
push
inc
stos
ljmp
push
imul
aam
mov
les
int3
cmp
inc
in
push
loope
xchg
out
cltd
out
dec
pop
stc
stos
jbe
insl
adc
xor
cli
fld
inc
cmp
pop
fnstenv
sbb
cmp
fnstsw
mulb
clc
push
in
fimull
mov
push
es
incw
pop
pusha
push
cmp
shlb
ja
js
stos
sahf
inc
sub
push
or
mov
adc
cmpsl
loopne
mov
test
dec
mov
int
xchg
addr16
pop
shlb
mov
das
rep
in
dec
cmp
push
or
adc
jnp
adc
mov
out
mov
sbb
push
dec
repz
inc
sbbl
adc
add
mov
cmp
jecxz
fadd
add
sbb
inc
and
sub
aam
ret
arpl
push
nop
lods
dec
divb
out
jp
sub
loop
pop
or
scas
repz
lds
push
xchg
in
ds
push
jb
sub
lcall
pop
fstpt
gs
and
xor
cmp
jp
repz
push
fsubrs
push
xchg
les
xchg
test
lret
outsl
rcrb
lahf
xchg
popa
test
mov
or
pop
mov
mov
inc
mov
test
sbb
and
inc
mov
cmpsl
xchg
cmp
adc
cmp
cmpsl
xchg
pop
pop
pusha
mov
cli
add
push
testl
subb
fs
sbb
push
sti
stos
aas
leave
adc
sub
mov
adcb
stc
dec
mov
andb
sub
in
add
cwtl
xchg
cmp
push
fstps
xchg
jnp
inc
pop
xor
mov
repnz
rcl
adc
lods
sbb
pop
inc
lods
gs
and
sub
outsl
push
stos
xchg
push
push
inc
mov
push
jle
in
add
ficoms
push
xor
ss
scas
push
mov
mov
testl
int
jl
fs
sub
mov
dec
icebp
jae
jb
mov
pop
and
mov
repz
xor
sub
add
mov
mov
out
and
fstpt
mov
shrb
mov
adc
stos
iret
cltd
xchg
fwait
or
popa
and
repnz
loopne
cmpsl
andb
mov
mov
sbb
loopne
stc
jp
fisttps
jecxz
inc
mov
dec
out
mov
insl
xor
aad
jl
rcrl
adc
es
push
cwtl
ljmp
bound
aas
mov
sbb
xor
or
fcoml
imull
aas
fisttpl
sarl
lock
imul
jno
xlat
pop
and
pop
xor
das
xor
dec
in
jmp
cmp
jecxz
in
lahf
out
xor
cli
push
cld
and
lcall
lret
bound
out
les
sub
mov
out
mov
scas
movsl
or
lcall
sbbb
loop
and
push
std
jbe
jmp
and
jbe
mov
cmp
fsub
jmp
cmp
lea
ret
inc
es
xlat
fwait
add
cmc
bound
mov
movsb
data16
pop
cmp
xchg
insl
add
shll
push
push
cmp
cmp
cmpl
clc
pop
psubsb
pop
mov
testb
cmp
fidivs
mov
push
rorl
ljmp
push
in
add
pusha
push
das
fcoml
dec
add
sub
push
loop
mov
cltd
fbstp
sbb
jmp
mov
mov
jns
add
call
lods
or
out
mov
jns
mov
pushf
lds
and
add
mov
leave
lahf
lahf
jns
mov
rcrl
xor
push
sub
shlb
call
loope
bound
xchg
aad
push
outsb
insl
outsb
mov
or
adc
aam
and
mov
fldcw
popf
xor
lea
push
rorl
mov
inc
fst
cli
std
jmp
sbb
pop
and
adc
lahf
jge
sti
mov
test
scas
pop
sbb
ljmp
call
fs
sbb
mov
jns
add
insb
xchg
es
jne
popf
cli
inc
cmp
sti
push
mov
rcrl
jp
dec
cmc
adcb
push
movsb
sub
sahf
ret
cmp
lahf
inc
xlat
xor
push
pop
xlat
inc
inc
inc
aad
or
adc
fbld
push
fadd
sub
fidivl
bound
or
call
lods
mov
ss
leave
xor
jge
mov
jmp
xchg
lods
loope
jb
dec
nop
add
jecxz
pop
xor
or
lahf
mov
ljmp
fisttps
lret
lds
lcall
or
mov
sbb
inc
hlt
jmp
xchg
pop
sbb
mov
xchg
xor
jecxz
or
pushf
sbb
aaa
mov
mov
loop
ficomps
or
in
push
in
mov
lods
lea
scas
mov
fsubrs
jae
pop
pop
jp
in
xor
adc
mov
test
xchg
add
cmp
subb
cmp
jp
pop
mov
popa
repz
pusha
or
sub
hlt
scas
jnp
mov
repz
jmp
lcall
cmp
add
ds
addb
sub
add
cmp
cmpsb
sbb
dec
jle
push
pusha
jle
fcomp
jmp
xor
vmovlps
xor
push
lret
or
into
push
push
adc
mov
lret
push
test
cmp
adc
lret
cmp
iret
es
ret
push
shlb
pop
sar
pop
outsl
sub
cmpsl
sbb
sub
ljmp
enter
pop
and
push
sub
repnz
shrl
adc
loope
adc
lds
ret
jns
test
les
adc
and
hlt
lret
clc
movsl
lods
mov
movsl
out
mov
and
inc
loopne
push
push
and
fdivs
jecxz
ja
lds
cmp
dec
sarl
aad
jmp
mov
mov
mov
shlb
inc
loopne
test
mov
jg
es
cmp
dec
loop
mov
mov
cmpsb
jg
insl
dec
sbb
dec
jmp
or
adc
pushf
mov
sarl
add
je
pminsw
addl
leave
pop
inc
sub
jp
jbe
push
dec
adc
scas
jno
test
test
add
and
popf
out
sub
imulb
xchg
cmp
fcompl
lods
dec
ret
sbbb
bound
ret
test
push
das
repnz
ret
adc
pop
add
imul
mov
or
in
pop
sbb
stc
arpl
mull
mov
dec
pop
sub
stc
out
outsl
lods
pop
call
minps
in
out
fisttpll
rol
mov
in
xchg
adc
int3
xchg
jnp
cmp
push
push
fwait
dec
cld
xor
dec
xor
mov
scas
jg
call
scas
pop
xlat
mov
add
pop
xchg
or
dec
in
dec
les
jmp
adc
add
jbe
roll
push
dec
add
scas
push
sub
fs
ret
gs
enter
stos
mov
daa
das
jb
and
pop
adcl
sub
inc
jo
xor
roll
pop
lret
cmpsl
scas
lock
jl
pop
divb
lret
mov
shll
lods
lods
cltd
mov
lahf
cmp
jbe
xor
gs
sbb
lret
js
addb
sub
mov
mov
pop
test
pop
outsl
in
addl
test
push
das
mov
inc
sbb
cmp
hlt
pop
repz
xchg
mov
ljmp
lock
pop
mov
mov
int3
pop
sub
std
and
fsubl
mov
mov
jg
and
add
out
repnz
add
jmp
filds
hlt
pop
inc
push
stc
arpl
jb
jecxz
outsb
jecxz
popa
mov
jecxz
pop
inc
ret
or
pop
ds
pop
popa
mov
insb
xor
add
mov
iret
sbb
lahf
neg
std
mov
test
std
stos
fisttpll
push
pop
xor
aaa
lahf
fnstcw
push
push
loope
jmp
ret
sub
dec
shr
out
fwait
lret
sarl
into
xchg
dec
xchg
add
mov
cwtl
xchg
scas
mov
popf
loope
lds
sti
enter
inc
push
mov
and
cltd
xchg
clc
adc
fwait
jmp
mov
jno
popa
and
outsl
lahf
adc
mov
add
pop
in
jne
dec
insb
add
and
addb
ret
ss
sub
data16
mov
out
hlt
adcl
push
repz
mov
dec
mov
rclb
adc
insb
insl
add
addr16
dec
in
std
or
pusha
xor
adc
dec
cmp
mov
add
arpl
pop
shl
mov
fimuls
and
out
popf
aam
shlb
mov
mov
add
inc
scas
test
rorb
and
addr16
xchg
mov
sbb
cs
push
push
inc
adc
rcl
sahf
stc
push
outsb
jns
pop
sbb
das
les
push
inc
jo
or
push
call
mov
jp
in
arpl
sti
pop
inc
cmpsb
not
cltd
sahf
test
pop
mov
sbb
into
stos
add
mov
sahf
or
cltd
sub
mov
xor
sub
repz
jecxz
and
adc
jp
adc
xchg
pushf
in
sbb
cmpsl
or
mov
mov
jl
cld
jne
sub
or
mov
popl
iret
aad
stos
pop
movsl
ss
mov
fdivl
int
cmp
pop
jp
mov
add
dec
test
jne
xor
js
mov
and
cmp
outsb
push
lods
hlt
push
push
js
sar
xor
shrl
sub
in
stc
icebp
add
sbb
mov
imulb
stos
repz
gs
cmc
mov
sahf
ret
movsl
movsb
push
icebp
sbb
repnz
int3
jbe
mov
test
mov
test
pop
sbb
nop
xor
xchg
sahf
dec
sbb
mov
stos
xor
cs
icebp
inc
pushf
jnp
push
adc
pop
rcrb
in
pop
push
out
pop
rorl
addr16
inc
mov
fsts
xchg
mov
add
jno
cmp
push
mov
jno
or
push
lds
mov
xchg
mov
out
xor
je
pop
sbb
test
sahf
call
pushf
dec
inc
cwtl
and
mov
sahf
adc
cmp
cmp
pop
hlt
adc
dec
mov
push
inc
mov
popa
popa
aad
das
pop
cmc
fsubrs
push
and
ret
repz
jle
test
je
pop
mov
mov
mov
mov
add
adc
outsl
jmp
outsl
lahf
fs
out
movsb
in
and
cmp
xchg
xor
je
jnp
xchg
push
xlat
mov
mov
cli
xchg
sbb
xchg
movsl
inc
lock
je
repz
mov
jmp
add
sbb
ljmp
mov
add
mov
inc
inc
pop
or
fidivl
out
pop
aas
push
jge
pop
sub
cmp
add
dec
cmp
fistl
xchg
xchg
push
cmp
push
mov
ljmp
sti
ja
add
or
cmp
inc
aam
ljmp
jne
in
mov
lret
adc
inc
xchg
mov
push
std
decl
rorl
ss
jecxz
adc
ds
popf
xchg
dec
adc
cmpsl
mov
test
mov
adc
std
ss
out
orl
neg
push
lods
rcrb
add
and
ds
mov
in
movsb
fmuls
pop
xor
insb
test
shrl
dec
insb
inc
xchg
leave
adcl
test
add
js
push
jp
xchg
loop
jle
sbb
xor
js
aas
jg
test
cmp
dec
xchg
loopne
into
dec
popf
icebp
sti
xor
movaps
rcl
adc
lods
jb
add
aaa
lock
xor
sub
push
dec
movsb
int
ljmp
outsb
lds
movsl
push
dec
stos
sbb
mov
add
outsl
or
leave
xlat
std
and
out
xor
aad
rclb
xlat
mov
sahf
push
push
jo
out
xchg
mov
sub
out
fwait
mov
out
xchg
dec
mov
mov
sub
mov
test
xor
adc
inc
inc
add
icebp
sbb
stos
daa
addr16
sbb
mov
lcall
sbb
hlt
cmp
lock
scas
out
adc
mov
cld
popa
and
bound
jne
aas
xchg
out
push
mov
adc
pop
push
cld
sub
cmp
leave
call
sub
mov
outsb
sti
mov
ds
imul
stc
lods
mov
xor
and
jmp
movsl
mov
lret
dec
ret
dec
dec
mov
stos
mov
loopne
mov
sbb
clc
inc
inc
clc
mov
fdiv
mov
sbb
pushf
movsb
add
xor
xchg
mov
sti
in
push
lea
sub
in
xchg
push
outsb
loop
leave
mov
pop
push
out
cmp
out
xor
and
push
cmp
sahf
xchg
movsl
sub
xor
int
cmpsb
cmovle
pop
dec
inc
xor
pop
cmp
dec
push
pop
mov
aam
call
pushf
movsb
imul
mov
push
adc
cmp
xor
dec
jmp
xor
mov
cmp
sbb
fimull
js
push
mov
mov
jb
dec
gs
fisttpll
jo
lahf
movsl
jb
movsb
gs
divb
push
je
jp
xor
insl
xchg
stos
in
cmp
rcr
sub
mov
inc
dec
addl
and
mov
and
repnz
sbb
xchg
inc
jns
enter
pop
or
movsl
add
mov
inc
mov
fiadds
lahf
cmp
push
testb
xorb
out
inc
mov
jae
mov
push
bound
shlb
aam
daa
cwtl
cmpsl
mov
imul
icebp
jo
lds
adc
push
xchg
mov
lret
cmpb
mov
lret
mov
jns
aas
in
jo
jecxz
dec
fwait
inc
movsl
xchg
fistpl
jns
in
stc
sbb
pop
loop
mov
xchg
fwait
sub
nop
cmpsl
pushf
sbb
testb
mov
xor
mov
xor
pop
or
dec
jae
cmp
daa
addr16
mov
aas
or
ja
sbb
cmpsb
jmp
dec
and
pusha
fsub
or
and
loop
push
xor
jge
jo
outsl
mov
out
mov
xor
sbb
lock
adc
jnp
jne
mov
out
adc
mov
mov
mov
mov
out
shll
fidivrs
xchg
jg
fwait
cmpps
subl
mov
mov
leave
pop
mov
pushf
jp
adc
jmp
inc
mov
sub
inc
fcomp
bswap
cmpsb
int3
addr16
sbb
xor
sbb
fmuls
gs
arpl
bound
imul
and
mov
repnz
cmc
mov
lock
xchg
lods
mov
mov
das
repnz
push
popa
fimull
cmp
and
test
loope
je
push
pusha
rcll
test
pop
push
addr16
mov
pop
push
sbb
gs
fcoml
jle
into
fistpl
data16
pop
cli
jbe
sarl
lcall
cmp
mov
jnp
inc
xchg
jp
cs
mov
adc
pop
leave
pop
cmp
fwait
sbbb
or
adc
nop
dec
fcmovnbe
inc
test
cs
adc
jle
jnp
cli
push
jbe
adc
push
scas
and
in
xchg
jge
inc
or
push
ret
push
es
je
mov
out
mov
aad
ss
mov
rorl
sub
sub
xor
ja
pop
sbb
test
ret
jne
in
xor
cmp
nop
xchg
and
outsb
push
pop
cs
andl
xor
je
push
mov
push
xor
fbld
movsl
fistps
hlt
adc
and
adc
mov
pop
repnz
push
mov
dec
xchg
jbe
xchg
push
dec
or
jb
mov
shrl
jg
das
pop
test
mov
dec
push
adc
xor
adc
xor
jo
xchg
mov
and
gs
xchg
mov
jecxz
js
pop
inc
rolb
ljmp
cmp
jecxz
cmp
test
adc
outsl
sar
xchg
rcll
lock
sbb
scas
mov
or
push
pop
movsl
xor
cmpsl
xchg
pop
cli
or
rorb
into
adc
sub
and
andl
xor
or
sahf
rolb
jl
icebp
xchg
ljmp
aaa
dec
inc
and
or
mov
mov
and
inc
lock
mov
mov
xor
ljmp
fs
lret
dec
bound
in
fbld
fnstenv
in
and
int3
lcall
sbb
movsb
outsb
imul
push
pop
inc
sbb
das
inc
jp
stos
sahf
dec
rcr
xchg
test
mov
and
add
fsubrl
rolb
mov
cmp
cmpsb
mull
mulb
imul
and
pop
lods
mov
xchg
jecxz
cld
scas
or
lds
mov
call
jae
mov
aad
cmp
push
jmp
fldenv
add
shl
mov
xchg
cwtl
xchg
adc
aas
fstpt
mov
mov
in
std
cs
ret
xchg
adcb
add
push
frstor
lret
cmp
jb
push
xchg
pop
mov
sub
out
movb
cs
aam
adc
stos
add
enter
cmp
test
nop
mov
sub
movnti
in
add
sub
adc
stos
inc
in
xor
dec
cmp
std
mov
popf
fs
mov
mov
popa
mov
adcb
mulb
fsubl
mov
cmp
push
test
mov
adc
mov
cwtl
mov
push
cwtl
cltd
adc
inc
push
cmp
fs
setb
clc
hlt
push
jle
imul
sbb
mov
scas
cmp
mov
jl
mov
cli
push
mov
cmc
out
add
push
add
dec
xchg
pop
or
pop
adc
inc
popa
stos
lret
or
movsl
mov
lds
push
push
pop
hlt
dec
add
shlb
std
sbb
inc
enter
sub
test
adc
popaw
rorb
mov
popf
jecxz
int
sub
push
and
rcrb
mov
push
mov
rolb
jge
shl
adc
add
cld
or
cmpsb
or
dec
xor
repnz
jo
cs
mov
popa
rorl
lahf
pop
xor
pop
pop
stos
insl
cmp
jbe
mov
aad
popa
xchg
scas
insb
sbb
mov
sbb
pop
sbb
int3
push
inc
sub
mov
mov
pop
fcoml
aaa
insl
popa
repnz
push
add
push
loope
stc
xlat
mov
clc
mov
or
inc
push
sub
xlat
dec
jns
pop
pop
or
cmp
sahf
test
aas
outsl
xchg
insb
pusha
clc
adc
xchg
imul
xor
push
mov
call
add
cld
loope
xor
xor
push
mov
arpl
loop
movsl
pop
or
es
fisttpl
aam
dec
shrb
fs
sub
push
lret
test
nop
call
pop
stos
stos
mov
call
add
inc
jb
test
out
repz
rcll
push
lods
mov
div
sub
into
popa
cld
aaa
push
inc
dec
add
jge
adc
mov
das
dec
pusha
pop
hlt
jno
rcll
fdivrp
push
int
ficompl
push
insb
jge
ret
in
mov
add
pusha
adcb
int
aas
sbb
sbb
and
jle
adc
inc
adc
lds
dec
and
ds
adc
jge
sti
fistps
dec
mov
adc
lret
lock
push
push
push
in
jmp
test
jo
mov
or
fistl
lret
push
sbb
xor
push
rclb
in
dec
aam
das
cld
mov
mov
and
lret
in
jmp
mov
jge
mov
ss
leave
sub
sub
cmc
rorl
shrl
aas
into
push
aad
ljmp
aas
dec
pop
sub
lahf
hlt
xor
aam
andl
add
loopne
adc
mov
roll
pushf
pop
fiaddl
fcoms
dec
or
mov
mov
jne
jecxz
idiv
inc
jne
inc
jmp
fadd
add
push
out
das
sbb
andb
shrb
jmp
sbb
fcmovne
outsl
dec
repz
dec
jecxz
les
pop
pop
or
cmp
push
cmp
les
lahf
cmp
les
or
icebp
add
pop
insb
das
int
inc
push
dec
adc
test
cmc
mov
loopne
ds
stos
in
mov
or
lea
push
inc
cltd
mov
sbb
mov
push
sbb
shr
test
dec
cmpsb
dec
icebp
sub
jp
arpl
iret
stos
xor
xchg
xor
fincstp
outsb
lds
fisubl
cmp
jbe
lods
lcall
pop
pop
fistpl
int
or
repnz
scas
shr
mov
lods
mov
and
sbb
push
add
or
imul
addl
gs
out
mov
inc
pop
push
fwait
adc
cmp
insb
mov
sbb
mov
pop
rol
out
int
in
ret
adc
sarl
stos
add
push
or
xchg
nop
into
adc
pop
mov
aas
cld
inc
andl
adcb
sbb
sub
mov
inc
sub
fdiv
and
push
ds
test
aaa
stos
mov
iret
jmp
lret
roll
dec
sbb
sub
dec
js
cmp
fistpl
jle
ss
sarb
mov
mov
loopne
pop
adc
inc
rclb
stc
mov
xor
ror
clc
inc
into
negb
out
repnz
aam
les
test
xor
add
out
out
scas
stos
jecxz
inc
push
loope
aaa
fincstp
int3
pop
fists
stos
aad
aas
imul
mov
adc
and
adc
popf
mov
inc
sti
sti
ja
in
cmp
mov
insl
test
or
pop
aad
mov
fwait
adc
pop
cld
test
rcl
adc
dec
xchg
jo
or
add
jl
pop
fsubl
out
pop
inc
xor
call
mov
out
push
mov
mov
xlat
sbb
pushf
adc
xor
or
in
mov
push
pop
pusha
dec
fwait
inc
je
mov
enter
dec
daa
adc
ret
jo
jg
fldl
push
out
jp
std
xlat
mov
aad
sub
lods
stc
insb
and
push
imul
jne
mov
in
mov
in
lds
jp
mov
repnz
push
jecxz
jne
dec
stos
ret
jns
in
adc
in
add
sub
xchg
sbb
mov
test
fwait
out
frstor
lcall
pop
stc
std
adc
pop
aam
fwait
scas
fisttpll
fdivr
cmp
ds
inc
cs
pushf
pop
sub
in
cs
jb
dec
push
xor
rclb
push
lret
push
xor
jne
sbb
into
mov
push
cmp
in
stos
cli
or
stos
push
xor
sub
sub
jo
lahf
or
ret
pop
push
xchg
fcoms
pusha
mov
push
pop
adc
lods
jle
mov
sbbb
jno
mov
ds
jnp
and
dec
stos
xor
mov
clc
lock
ret
cli
lea
mov
stos
js
push
jle
jns
and
mov
lea
repz
adc
mov
movsb
cmpsl
add
insb
imul
inc
jg
scas
ss
jle
xlat
lock
dec
cmpsb
sub
xlat
jmp
aad
sti
jb
test
xchg
test
jmp
xor
in
jecxz
rcrb
das
pop
out
mov
mov
push
out
dec
popf
std
int
jmp
push
inc
or
sbb
fimuls
cs
xor
jns
lcall
dec
dec
and
stc
orb
xchg
or
popf
aas
inc
int
gs
ret
push
fdivp
jne
test
fdiv
cmp
movsl
pop
xlat
jmp
jmp
or
mov
cmp
add
jl
xchg
xor
and
sbb
loope
mov
imul
es
mov
cwtl
sub
mov
xchg
shlb
aas
aaa
cmp
jle
out
inc
xchg
adc
in
je
dec
mov
cs
popa
push
scas
jno
pop
mov
adc
xchg
cmp
dec
lahf
mov
cmp
or
sbb
mov
pop
cmp
out
in
mov
cmp
movsl
cs
sub
add
cmp
popa
inc
movsl
int
and
push
mov
jge
jns
jg
ret
fs
jne
shr
mov
sbbl
imul
aas
mov
repz
cs
fdivl
orb
repnz
mov
pop
aad
sub
outsl
mov
jge
cli
mov
and
int
into
fadds
loop
cwtl
cmpsl
and
inc
mov
inc
push
cmc
inc
sub
loopne
jnp
adc
mov
daa
je
or
bound
xchg
cmp
cwtl
push
push
push
lret
jbe
rcrl
jmp
or
popa
sub
sbb
inc
fs
add
push
hlt
popa
dec
mov
in
mov
push
and
jae
popf
jns,pn
mov
sarl
pop
sub
loopne
aaa
pop
incb
mov
movsb
imul
pop
mov
jnp
out
mov
int
addb
or
inc
hlt
test
sub
mov
sbb
loop
jle
ret
addr16
icebp
aas
popf
clc
jg
pop
mov
cmp
scas
and
pop
sub
inc
or
xchg
test
mov
adc
sub
aaa
pmaxsw
xchg
shll
aam
out
int3
gs
sbb
js
cmp
insb
insb
out
lea
and
push
cmp
push
mov
dec
std
cmp
push
jbe
lock
insb
out
mov
into
out
push
push
dec
xor
lods
ljmp
jge
fildl
add
arpl
push
jmp
jecxz
push
mov
in
outsl
or
jno
jl
mov
in
bound
pop
inc
mov
ljmp
iret
push
push
pusha
fdivr
mov
test
cwtl
pushf
repnz
fistl
lods
jae
or
xor
cmp
incb
sub
arpl
xchg
and
jge
jg
add
js
repnz
pusha
push
stos
outsl
add
xor
popf
push
dec
inc
or
in
inc
test
inc
test
ljmp
jmp
lds
fisubs
add
repnz
sub
inc
pop
cli
mov
aam
push
jge
dec
push
lahf
pop
cmp
push
xchg
int
jle
or
or
fsubrs
pop
adc
rorb
into
divb
xchg
mov
stos
cs
incl
aam
pop
jp
sarl
pop
mov
jle
adc
cmpsb
and
jle
jp
and
test
sub
mov
gs
mov
inc
xchg
push
fisubrs
popf
jae
emms
scas
sahf
inc
daa
jno
pop
sbbb
ja
imul
dec
fisubs
and
rorb
xor
mov
xchg
insl
mov
or
pop
mov
push
into
cltd
mov
dec
out
sbb
js
std
jne
stos
mov
mov
leave
cmc
sub
mov
dec
mov
ret
jmp
dec
lret
ja
adc
xor
xchg
sub
loop
inc
jnp
paddsw
push
addr16
sbb
pop
test
fwait
loopne
xor
rolb
mov
mov
jl
dec
cmp
mov
mov
pop
cmc
jo
cmp
mov
mov
scas
gs
testb
jg
jle
mov
mov
mov
icebp
jmp
adc
loope
imul
imul
inc
dec
xchg
xor
inc
rorb
cmpsl
xorl
jae
fisubrs
dec
mov
xbegin
shrl
pop
je
mov
cmc
mov
push
pop
in
jo
repnz
pop
cmc
cltd
sub
fistpl
jg
shll
dec
shlb
out
js
sub
jno
jns
ds
ljmp
mov
lds
cs
mov
iret
in
shrb
cmp
inc
xor
mov
jbe
popa
js
push
cld
pusha
and
xchg
pop
jmp
js
inc
bound
sbb
ja
jg
push
ret
sti
cltd
scas
mov
adc
pop
push
push
mov
or
movsb
jne
or
scas
dec
and
mov
mov
pop
mov
leave
bound
jge
xor
adc
aas
add
into
jl
sbb
xchg
push
pop
gs
and
leave
xor
jb
xlat
mov
or
and
stos
mov
in
inc
mov
pushf
cli
sbb
sub
scas
int
mov
inc
cmp
push
inc
outsb
sar
cs
or
cmc
fnstsw
ret
js
fisubs
push
jmp
mov
xchg
gs
pop
cmp
ret
out
pop
lahf
pop
adcl
and
jmp
ja
pusha
lahf
adc
fs
ds
pop
sub
jbe
adc
std
fstps
js
mov
cmp
pop
sbb
jno
jnp
fdivrl
test
xchg
decb
and
iret
xchg
xchg
or
cmpsl
lods
sbb
mov
decl
push
lcall
and
jge
jae
jge
pop
enter
jge
sti
pop
ljmp
cmp
inc
arpl
dec
cmp
lds
dec
insb
mov
and
test
xchg
ljmp
cmpsb
loopne
iret
dec
cmpsl
pushf
dec
lret
cmc
inc
popf
in
ljmp
or
into
mov
mov
test
or
out
sbb
leave
dec
leave
sub
repnz
jp
add
into
shr
out
inc
hlt
mov
sub
mov
cmp
data16
repz
mov
mov
cltd
fcomps
jns
data16
fildll
xchg
rcrb
cmpb
das
popa
mov
jns
and
inc
ss
pop
jb
sbb
imul
mov
mov
dec
adcl
mov
sub
xor
mov
rorl
mov
scas
ret
add
shrl
jb
outsl
mov
popa
inc
fisubrl
inc
pop
pop
pop
testl
dec
inc
scas
sbb
and
sahf
inc
jb
out
cmpsl
xor
jbe
mov
cmp
inc
xchg
jns
sub
out
enter
movsb
popf
add
mov
dec
mov
rolb
push
pop
out
lds
xorl
jge
mov
jns
add
fldenv
in
clc
sahf
jns,pt
jl
jge
daa
push
xor
int
shlb
push
add
pop
or
jnp
sbb
out
mov
sub
push
out
add
push
out
sbb
xor
insl
stc
jg
or
and
lret
cmpsb
and
cli
out
cmp
lahf
mov
push
shl
pop
inc
mov
negl
movzwl
mov
out
dec
pop
shlb
jnp
loopne
push
jmp
add
movsb
mov
xchg
cmp
mov
call
xor
fmuls
cmp
scas
jne
jmp
std
sti
aaa
pop
add
sub
xlat
sub
jno
push
icebp
lret
sub
or
mov
es
imul
jle
or
in
fcompl
add
ret
insl
dec
daa
dec
ret
and
push
les
and
cmp
jae
mov
dec
adc
and
ud1
faddl
fucomp
enter
gs
push
and
test
lea
inc
scas
stos
xor
and
shr
pop
fistpl
sub
mov
repz
cmpsb
xor
stos
inc
incb
pushf
data16
cwtl
lcall
std
mov
fisubrl
mov
jecxz
ss
lahf
dec
sub
cmp
and
xor
pop
popf
fwait
call
dec
adc
data16
push
enter
cs
mov
sbb
cmpb
clc
mov
mov
hlt
add
xchg
in
push
jg
and
xchg
xchg
leave
int3
mov
push
sbbl
test
xchg
push
das
inc
jnp
dec
cmc
cmp
pop
fsubs
fbld
push
nop
or
or
mov
repnz
mov
xchg
cmpl
jo
pusha
push
out
sbb
movsb
push
imull
addb
mov
scas
xchg
shll
aas
xor
repz
mov
xchg
sub
fs
test
jl
enter
out
xchg
jb
jmp
imul
add
fucomi
xor
les
stc
mov
xlat
sub
pop
dec
pusha
add
imul
xchg
fistps
iret
out
dec
es
cmc
test
into
loop
inc
mov
sub
pop
xor
push
in
call
and
sub
mov
fildl
sub
jl
push
and
pop
inc
pusha
aas
out
cltd
roll
filds
cmp
imul
mov
bound
mov
lds
xchg
mov
clc
mov
adc
push
adc
cmpl
mov
push
mov
aam
jmp
xchg
and
jae
cli
ljmp
cmpsl
icebp
cmc
dec
sub
out
and
xor
fistps
mov
cmp
loope
pop
adc
lret
or
add
int
adc
rcrl
add
inc
cmp
clc
and
aas
jg
je
xchg
std
mov
jg
test
mov
jno
cmp
pop
sarb
ds
sbb
add
push
xchg
lods
push
out
nopl
sti
xor
mov
lahf
pop
idiv
jl
xchg
or
inc
mov
sbb
xor
cli
imul
mov
icebp
bnd
rorl
and
mov
push
sbbb
jo
adc
cmpsl
aad
sub
inc
enter
out
ficoml
xchg
mov
xchg
dec
push
lea
arpl
hlt
cmpsl
mov
add
orl
cmc
add
and
sub
outsl
pop
push
out
lea
jae
and
ss
xchg
loop
pushf
ficoml
ret
in
jge
pop
dec
sbbl
sub
in
popf
aad
mov
xor
outsl
mov
pushl
cwtl
cmp
or
dec
clc
sub
in
dec
outsl
lds
or
mov
rolb
adc
and
push
cmp
ljmp
scas
pop
scas
lock
mov
cmp
scas
xlat
xchg
leave
jo
std
inc
andb
xlat
inc
iret
fwait
andb
sahf
mov
xchg
pop
jle
bound
sti
push
sbb
or
pop
fstpl
fnop
xchg
inc
js
imul
addr16
mov
and
std
lahf
inc
in
push
dec
mov
sbb
jle
popa
into
inc
add
adc
dec
ss
sbbl
push
xor
fsubl
faddl
mov
sbb
testb
dec
push
xchg
fadds
cmpsb
nop
in
out
aad
sbb
mov
jge
aas
imul
push
xchg
mov
sahf
fsubrs
decb
lods
sbb
add
push
popf
add
loop
mov
stos
push
repnz
xchg
push
int3
add
mov
jno
incl
out
xchg
xchg
call
lret
outsb
fsubrp
cmp
jl
push
xor
stc
mov
mov
sti
cli
jno
inc
rolb
adc
dec
lock
cs
es
das
lea
arpl
add
push
push
imul
push
es
push
popa
xchg
popf
adc
fidivrs
mov
jo
fbld
mov
and
sbb
xor
sub
hlt
or
fbstp
pop
xor
fimuls
dec
sub
sti
insb
cmp
sub
int3
fisubrs
jge
aam
and
ss
fistpl
xchg
jae
add
pop
fdivrl
xchg
ficompl
fisubrl
lret
pop
push
mov
jge
add
sbb
vmread
mov
call
sub
ljmp
mov
fldenv
jl
arpl
mov
imul
lock
addr16
jns
mov
movl
cmp
pop
cwtl
jmp
adc
sub
aad
ret
testl
add
gs
push
outsb
enter
hlt
outsl
push
or
mov
add
es
mov
mov
icebp
inc
ljmp
ljmp
jbe
mov
mov
in
cmp
jle
pushf
jbe
pusha
adc
les
jae
xor
adc
cwtl
leave
push
pusha
push
pop
push
imul
cmp
xor
adc
int3
in
adcb
roll
mov
or
xchg
out
enter
xchg
loop
idivl
call
incb
daa
fbstp
inc
or
cmpsb
movsb
push
ror
je
pop
xor
lret
inc
push
in
push
lahf
sub
xchg
movsl
cmp
dec
stc
test
pop
hlt
push
aaa
mov
sahf
jnp
add
call
push
or
xor
jle
es
adc
lcall
movsl
mov
mov
dec
mov
pop
pop
mov
out
insb
pop
fcomi
mov
xor
pop
cli
out
inc
in
scas
loopne
shlb
cwtl
cmp
or
add
jnp
add
mov
shrb
mov
insl
sbb
addr16
ds
jo
cltd
jbe
neg
push
lcall
sub
and
mov
hlt
sub
jecxz
xchg
mov
popa
sbb
scas
jge
inc
cmpsb
push
aad
lods
clc
jne
xchg
add
repz
ja
ds
pop
fisubrl
iret
bswap
pop
sbb
sbb
xor
enter
movsb
cli
aad
nop
xchg
add
stos
insb
add
std
ljmp
mov
outsl
lret
gs
divps
int
popl
cmp
mov
icebp
dec
add
xchg
loope
ret
outsl
adc
pop
data16
and
xlat
aaa
xor
sbb
ss
inc
sbb
test
movsl
in
or
inc
cmp
and
add
fs
jecxz,pt
std
add
pcmpeqw
cmp
push
mov
xchg
fidivrl
lds
mov
sbb
lret
cmp
jge
cmpsb
lock
sti
shll
sti
out
dec
sub
add
addl
lds
mov
aad
add
xor
mov
sub
xchg
cmp
dec
mov
adc
sub
push
adc
or
sti
jno
or
push
dec
testl
mov
in
push
loopne
das
or
iret
sub
adc
add
jecxz
gs
subb
cmpsl
pop
xor
mov
mov
xor
popf
imul
pop
loopne
or
mov
add
xor
fdivrs
mov
pop
in
inc
xor
js
push
insb
pop
or
mov
cltd
pop
pop
repnz
rcll
mov
je
dec
jg
dec
mov
push
mov
mov
scas
dec
mov
adc
lret
pop
scas
dec
sbb
xchg
cmpsl
push
bnd
scas
mov
incl
sub
stos
xchg
jae
mov
lahf
inc
pop
cmpl
cmp
lret
jno
repnz
sub
ret
adc
mov
cmp
pop
xchg
fs
incl
inc
mov
lahf
sbbb
mov
fists
dec
pop
out
xor
pusha
cmp
pusha
xor
mov
fwait
popa
int3
adc
lcall
mov
dec
out
cmpsl
decb
xor
das
sbbl
push
xchg
push
call
pop
mov
mov
add
ror
jbe
jmp
shr
js
roll
ljmp
out
sbb
dec
outsb
pop
jb
jne
decl
dec
sub
fimuls
xchg
jb
inc
mov
rep
negb
lret
xchg
pop
sub
mov
push
jecxz
popf
data16
insb
int
lds
push
xor
enter
sbb
jecxz
call
inc
inc
bound
inc
pop
mov
fstpt
cltd
xchg
out
dec
js
addl
das
cli
lods
out
je
outsb
inc
xor
loop
mov
xor
loopne
lret
adc
scas
outsl
addb
popa
mov
xchg
filds
ds
popa
xorl
dec
sbb
insb
jp
pop
pop
adc
sbbl
sahf
outsb
in
push
cli
jb
adc
mov
jb
mov
pop
insb
int
adc
jecxz
incl
cwtl
lret
jae
pop
lods
sub
xor
xor
pop
adc
shlb
push
popa
and
data16
pop
ss
pushl
adc
mov
ret
pop
mov
inc
shll
mov
lret
gs
or
ljmp
xchg
scas
pusha
shrb
and
enter
mov
out
push
add
dec
pop
outsl
daa
mov
mull
jl
mov
and
mov
mov
dec
pop
xorb
movsb
cmpsb
std
jne
in
sbb
mov
in
and
fists
data16
cmp
jno
pop
negl
inc
xor
mov
sahf
mov
in
add
or
push
ja
add
sub
inc
popf
cli
scas
fmuls
ja
sub
lret
mov
int3
xor
mov
dec
xchg
out
inc
and
ret
jno
dec
push
roll
adc
sbb
mov
jmp
popa
mov
into
push
or
sub
stos
orb
arpl
jno
jns
mov
mov
in
stos
adc
addl
mov
sbb
pop
push
add
inc
mov
mov
jecxz
jl
mov
into
int
or
pop
stos
in
mov
mov
and
xor
dec
jp
mov
ficoml
mov
or
xor
inc
xor
bound
pushf
in
js
add
shlb
ljmp
jge
mov
adc
xchg
das
ret
xchg
scas
lds
mov
inc
filds
mov
idivl
aas
test
cli
cmp
add
and
movsl
cmp
jp
xor
mov
mov
or
sbb
repnz
xchg
jne
mov
inc
push
push
jge
sub
jnp
push
ds
push
fadds
jecxz,pn
test
scas
and
jno
shlb
mov
iret
push
out
sub
pop
mov
jp
in
es
cmpsl
ss
mov
jno
out
stc
mov
lods
rol
in
lcall
adc
fistps
mov
fidivrl
or
pop
and
sub
stc
fsubp
pop
add
insl
adc
xor
or
dec
xchg
fcoms
rcrl
sub
cld
or
into
lds
lret
cmp
rorb
decl
cmpxchg
xchg
sub
pop
fistpl
je,pt
sbb
imul
into
jnp
notb
push
ror
fwait
xor
in
sbb
jae
shlb
lret
rcll
push
jne
lods
adc
insb
pop
aad
push
push
sbb
mov
sub
ja
pop
mov
mov
das
mov
adcb
mov
fmull
and
pushf
out
js
jo
add
pop
out
sub
sub
js
adc
inc
jae
xchg
scas
mov
pop
add
xchg
and
jae
add
pop
lcall
inc
add
cmp
cmp
hlt
lahf
xchg
divb
mov
pusha
sbb
push
ss
inc
call
xor
rcrb
sarb
xlat
dec
cli
dec
xlat
xor
and
fsubl
push
lea
xor
dec
repnz
sub
push
jnp
push
mov
or
dec
push
mov
jno
clc
jle
mov
mov
fucomip
mov
dec
add
sbb
cmp
and
push
fisttpl
mov
pop
aam
mov
lods
bound
mov
sbb
mov
fcompl
outsl
pop
in
fsubrl
cltd
ja
mov
gs
mov
sub
sub
movsb
sarl
data16
pushf
xchg
cmp
in
insb
loope
leave
arpl
xchg
cltd
int
stc
insl
mov
ficoms
or
dec
lret
popf
and
mov
scas
inc
mov
sub
mov
daa
gs
jae
sub
mov
mov
mov
popf
scas
adc
dec
xchg
bound
inc
imul
jno
shll
mov
shll
sti
ds
jb
call
sahf
push
xchg
mov
fistpll
jns
outsl
aaa
mov
shlb
mov
xor
mov
cmpsb
jle
nop
xchg
inc
sbb
mov
js
pop
inc
dec
inc
add
popl
lods
addl
push
hlt
pop
lcall
sbb
sbb
rclb
ja
and
jmp
lock
lahf
xchg
jne
pop
idiv
int3
sbbl
push
or
nop
jnp
pop
xor
inc
in
stos
aad
xchg
inc
aaa
xchg
cmp
repnz
pop
gs
insl
fistpll
mov
adcl
pop
mov
sti
aaa
movsb
lcall
les
xor
mov
jp
lret
sbb
add
in
aaa
incb
test
mov
mov
push
push
ja
lods
cs
mov
ljmp
jo
rol
stc
push
dec
add
xor
stos
push
cld
push
jae
or
cwtl
mov
pop
adc
cwtl
lock
out
mov
fstpl
mov
xchg
sub
push
xchg
das
in
into
loop
jp
int
xor
pop
pusha
das
mov
test
jmp
dec
mov
sbb
add
jecxz
lds
and
xor
scas
int
ror
xor
lea
fs
std
sub
popf
push
inc
sub
insl
insb
pop
mov
mov
loop
or
sub
inc
adc
ret
mov
mov
mov
mov
cmpsl
inc
lods
mov
repz
mov
jp
dec
repz
inc
adc
scas
in
mov
imul
lahf
inc
out
test
addb
inc
cs
shr
test
xor
sbb
push
and
xlat
mov
adc
pop
imul
push
stc
cmp
clc
dec
scas
pop
rcll
sub
xor
fsts
popa
mov
negb
sub
and
fdivr
pop
push
sbb
mov
lds
adc
xor
adc
rcrl
lock
rcrb
mov
inc
sbb
xchg
inc
cmc
lds
push
ret
in
xchg
ficomps
test
mov
jecxz
stos
xor
cs
push
cmp
xchg
gs
cmpsb
mov
xrelease
pop
aad
jmp
sti
mov
push
sbb
pop
outsb
scas
lcall
pop
jns
fildl
fiaddl
push
daa
mov
adc
or
mov
enter
fstps
test
inc
adc
push
xorb
or
lock
mov
xor
xchg
cmp
cmp
sahf
mov
sti
arpl
ret
scas
jg
sub
xor
js
pop
ds
es
push
mov
push
test
pusha
repz
xchg
in
add
fwait
cmp
dec
in
inc
xchg
mov
repz
scas
sahf
pop
inc
jp
rcrl
in
dec
adc
push
shll
inc
iret
inc
jp
cmp
pop
sahf
mov
aam
into
fcoml
gs
xchg
stos
xchg
push
jo
repnz
inc
in
fidivrl
adc
call
adc
sarl
or
popf
add
sbb
xor
adc
push
sub
lock
jmp
sub
xchg
mov
jbe
add
pop
inc
call
jp
cmpsb
rolb
int
xchg
shll
jle
xchg
int3
add
and
pop
push
dec
std
ljmp
fdivr
into
pusha
sbb
and
inc
xchg
dec
arpl
outsb
jb
mov
lret
dec
inc
sbb
mov
and
push
out
push
dec
in
pop
cmp
aad
cwtl
filds
ja
out
push
mov
rorl
cmp
push
mov
std
iret
or
cld
cwtl
add
iret
shl
mov
popa
stos
and
fwait
shlb
in
xchg
lcall
stos
andl
xchg
cld
xchg
mov
dec
mov
add
pop
sbb
out
sbb
xchg
stos
imul
mov
jg
cmp
mov
ret
ljmp
xor
or
xchg
mov
mov
cmp
inc
aas
insl
mov
mov
adc
shrl
or
add
movsb
mov
cs
jnp
nop
inc
imul
mov
sub
out
dec
test
cs
repz
data16
std
jmp
dec
fdivrl
scas
jge
xchg
pushf
jecxz
lcall
test
cmc
sbb
subb
cmp
mov
movhlps
cs
andb
adc
mov
adc
mov
test
push
sar
fdivl
aad
xor
in
sahf
xchg
mov
dec
xor
mov
addr16
push
mul
mov
popf
sbb
sub
adc
aam
adc
inc
les
jmp
fbld
lods
mov
iret
sbb
cs
push
push
mov
sub
inc
nop
les
pop
mov
mov
jmp
stc
and
inc
dec
xchg
pusha
sahf
mov
cmpsl
adc
xchg
add
sub
cmp
das
cld
mov
in
jns
stc
sub
decb
mov
mov
insb
or
cmpsl
rol
pop
push
xchg
loopne
bound
arpl
sbb
movsl
ja
mov
pop
sbb
mov
sub
xchg
add
add
sub
lret
pop
pop
int3
fldt
mov
sbb
xchg
cld
icebp
mov
xchg
xlat
jns
xchg
sbb
or
or
orl
jns
test
js
add
push
xchg
push
out
dec
pop
in
outsb
js
es
jae
push
dec
pop
push
xor
iret
sbb
xchg
xchg
push
pop
lahf
xor
scas
fld
pop
pusha
sub
xor
rcrb
dec
out
icebp
pop
jl
and
fists
cmpsb
and
and
dec
out
xor
outsb
mulb
insb
mov
jno
push
pop
mov
aas
push
jecxz
sbb
pop
pop
xor
dec
cmc
sub
outsb
add
loopne
test
pop
stc
and
mov
lock
and
lods
cmp
jne
sbb
dec
ret
les
push
adc
stos
in
or
jmp
leave
cltd
push
sbb
or
stc
dec
sub
lret
sub
lahf
insb
lcall
jle
outsl
cmpsl
mov
pop
mov
mov
jmp
mov
mov
std
push
jge
ja
add
fnstsw
lods
shr
and
xor
inc
ret
repz
adc
fwait
or
jo
push
push
add
push
jno
loopne
xor
jns
sub
fwait
sbb
cli
incl
repz
inc
mov
inc
es
pushf
xchg
lea
dec
xor
cmp
std
pop
int
mov
adcb
mov
sbb
scas
loope
and
cwtl
pop
nop
mov
mov
adc
mov
cld
movl
cmp
cmpsb
push
lods
jb
jl
leave
xlat
jns
movl
xchg
push
cld
call
push
mov
push
pop
nop
and
lret
mov
cmc
aad
mov
dec
mov
mov
cmp
jp
or
adc
pop
pop
lods
jnp
inc
xchg
sub
adc
xchg
sub
or
call
xchg
sub
jbe
xchg
pop
inc
fcmovbe
pop
scas
xor
lods
mov
add
mov
test
sub
lods
inc
dec
test
lods
call
mov
lret
loope
jle
mov
movsl
out
adc
jo
xor
icebp
cwtl
mov
or
js
lcall
sub
clc
fwait
xor
je
stos
dec
lods
rcr
mov
inc
in
sahf
cmp
fcoml
repnz
mov
mov
mov
dec
negl
mov
les
mov
fisubrl
mov
sti
dec
int
jl
lea
jecxz
sub
mov
pop
push
mov
loope
repnz
pop
jle
dec
adc
ds
dec
lcall
mov
test
sbb
and
adc
ret
in
jle
and
lcall
fnsave
shl
fnstcw
sub
jne
and
sub
into
ffree
leave
inc
aaa
cmpsb
cmpsb
into
sbb
xchg
call
int
dec
gs
dec
icebp
es
push
fdiv
mov
mov
adc
xchg
xchg
mov
sti
loope
aam
and
js
dec
aaa
xor
sbb
je
dec
mov
or
xor
fs
jp
adc
add
ret
insl
sub
aaa
push
inc
clc
sbbb
and
jge
add
dec
mov
insl
jg
fs
add
and
cltd
xchg
je
push
incb
inc
pushf
inc
loop
jle
mov
mov
std
adc
xchg
clc
orb
and
pop
sbb
gs
jno
mov
leave
adc
mov
ss
imul
pusha
ret
mov
idivl
dec
ljmp
and
lcall
andl
jle
mov
mov
outsl
ret
sub
mov
jp
mov
dec
mov
arpl
popa
push
sbb
pushf
outsl
xchg
ret
cmp
mov
mov
add
das
adc
lcall
adc
cwtl
push
movb
mov
pop
je
sbb
mov
cmp
jecxz
push
push
loop
xchg
fldt
mov
fwait
dec
outsl
call
or
mov
dec
mov
mov
or
cmp
out
loope
loopne
lea
cmp
cld
cmp
or
lods
xchg
incl
adc
movsb
pop
gs
jp
ss
adc
out
jp,pn
mov
mov
jbe
fwait
mov
movsb
xor
dec
das
dec
push
call
mov
sbbl
inc
adc
mov
loopne
dec
mov
dec
xchg
outsb
cltd
push
nop
lret
pop
fisttpll
pop
inc
pusha
cmp
mov
adc
mov
inc
xchg
dec
push
jp
stc
imul
or
sub
and
cli
cltd
dec
jecxz
inc
aad
js
pushf
ficoms
in
mov
add
imulb
insl
dec
mov
lds
mov
lret
lcall
call
gs
pushf
iret
push
cs
pop
or
or
or
sbb
push
xchg
mov
dec
mov
xchg
jne
push
sbb
iret
repnz
in
iret
cmpsb
les
bound
fiadds
and
inc
sti
mov
leave
cltd
push
cmp
ljmp
mov
repz
pop
cmpsl
es
mov
push
jmp
sub
aaa
cmpsl
insb
xchg
xchg
jg
into
mov
xchg
sub
cli
in
enter
sbb
dec
xchg
and
insl
rep
gs
xor
scas
xor
mov
inc
mov
jl
out
jns
or
mov
inc
add
fidivl
dec
and
mov
ror
lods
sahf
ficompl
mov
testl
xor
dec
push
mov
xor
les
mov
adc
ret
dec
rolb
sbb
ficoml
jmp
or
jns
jnp
repnz
mov
sbb
movsb
stos
inc
xor
lea
mov
int3
mov
subl
flds
push
movsl
in
out
mov
inc
mov
int
or
sbb
dec
jg
push
in
cwtl
lahf
or
dec
mov
push
mov
fisttpll
fistpl
lds
xor
jbe
jmp
add
out
xchg
inc
jnp
imul
mov
inc
in
mov
addr16
fsts
rcrl
or
add
mov
xchg
loope
aad
inc
push
inc
adc
fwait
and
mov
pop
push
mov
outsl
jne
adc
outsl
or
test
adc
mov
push
lods
cmp
inc
inc
dec
out
add
or
fidivs
mov
shrl
sub
dec
inc
pop
add
sahf
sub
pop
mov
pop
pop
pop
mov
or
sub
push
adc
stc
imul
fldenv
add
ret
scas
xchg
mov
daa
aas
mov
fisttps
stos
pop
xor
nop
xchg
cmp
pop
or
adc
pop
pushl
test
adc
out
loop
es
add
inc
xlat
cmpsl
test
mull
adc
mov
loop
rcrl
nop
cmpsb
pop
les
xchg
inc
sbb
mov
jb
in
adc
lcall
ret
mov
sub
jnp
test
jecxz
jp
inc
mov
out
push
ret
unpckhps
adc
stos
dec
inc
imul
mov
and
scas
dec
int3
dec
push
xor
and
outsb
push
adc
mov
cmp
out
in
pop
cmp
push
aaa
jmp
pop
and
es
inc
or
jne
stc
mov
fcomps
adc
imul
repz
xchg
mov
mov
incl
test
push
movsb
cmp
xchg
arpl
int
stc
popa
in
lock
in
lahf
add
test
filds
orb
push
es
jl
ret
cmp
leave
dec
or
mov
mov
xor
and
dec
nop
or
fsubrl
stc
jl
dec
negb
add
and
adc
push
jb
xchg
pop
mov
push
jle
scas
ds
push
fimull
and
sub
sub
inc
and
insb
adcb
xchg
popa
cmp
fcompl
lcall
mov
push
sub
and
rol
add
outsl
or
add
pop
cmpsl
mov
ljmp
test
push
mov
pop
stc
loopne
stos
js
inc
fwait
into
xor
out
cmp
test
jne
jb
mov
ljmp
fmulp
sbb
loope
hlt
mov
cmp
arpl
les
dec
cmp
push
add
jl
test
movsb
add
sub
lahf
pop
add
dec
push
add
fwait
sub
in
sti
gs
mov
push
decl
mov
gs
and
in
insl
xor
xchg
push
and
shrb
ficompl
and
push
dec
vaddps
rorl
ss
push
js
push
insl
xchg
rcll
fbstp
add
add
dec
fs
xor
pop
lock
dec
fwait
push
aad
and
pusha
dec
inc
nop
push
loope
or
int
rep
mov
jmp
sub
popa
mov
aaa
push
repz
mov
cmp
popa
ds
sub
pop
pop
sub
loopne
jl
scas
lock
jne
jb
push
scas
out
mov
jmp
push
repz
adc
adc
jns
fadds
orb
cmpsl
cmpsb
xlat
lahf
xchg
aad
push
or
sti
in
xor
inc
push
shrb
mov
cwtl
add
pop
xchg
mov
rorl
sbb
sti
jge
into
push
add
dec
movsb
dec
mov
jae
mov
mov
cmp
pop
inc
fisubl
xor
dec
cmpsl
mov
hlt
lods
push
xchg
push
jg
les
dec
mov
jo
and
repnz
push
pop
in
cmc
cmp
pop
sub
subb
cmc
jg
mov
fisttps
push
jbe
xchg
jo
aam
out
daa
jns
push
xchg
sub
insb
xor
cs
daa
lahf
mov
je
cmp
icebp
cli
mov
jo
adc
inc
xchg
subb
xchg
ret
call
jne
stos
sahf
arpl
or
lods
jmp
adc
insl
push
and
push
imul
imul
fldenv
scas
mov
mov
dec
pop
notl
in
and
and
pushf
test
mov
insb
jno
scas
ds
xor
sub
inc
aam
sti
xor
clc
jb
mov
pop
insb
out
and
push
cmp
ds
jno
xor
and
outsl
lods
jecxz
js
xchg
mov
out
or
mov
lds
popa
stc
push
pop
adc
cmp
inc
xchg
xor
add
cmc
pop
inc
mov
inc
scas
jbe,pt
add
cmp
xor
in
ss
xchg
jecxz
and
jb
xchg
pop
add
xor
call
cmpsb
repnz
cmpsb
mov
cmp
jmp
leave
sub
test
int
mov
push
push
cmc
imul
testl
inc
and
loope
jnp
bound
xchg
scas
popa
push
adc
in
fsubl
or
mov
sub
aas
arpl
pushf
xor
es
imul
sbb
adc
push
jg
ljmp
jp
ljmp
mov
push
dec
iret
push
into
lods
mov
xor
mov
add
clc
sarl
repz
out
inc
xor
mov
leave
shl
cmp
cmp
push
out
arpl
popa
xchg
test
sbb
imul
adc
mov
imul
and
mov
movsb
lods
push
adc
xor
jmp
test
add
test
subl
push
mov
mov
cli
test
je
sub
fwait
repz
jmp
push
cltd
es
mov
and
out
rcrl
pop
push
subb
dec
dec
scas
andl
cmp
sub
clc
cmpsl
std
nop
mov
jecxz
ret
adc
dec
test
inc
fs
inc
cmp
ss
or
ja
ret
mov
sub
and
push
lret
mov
pop
pop
push
shrl
rcl
pop
cli
mov
sbb
mov
clc
sbb
xchg
es
add
test
in
out
mov
jmp
insl
mov
scas
fdivrp
push
or
movsb
fcmovnbe
pop
push
pop
cmpl
cvtpi2ps
mov
mov
and
sbb
mov
lret
aaa
outsl
xchg
push
insl
outsl
aam
sub
jnp
in
test
popf
cmpsl
aam
lcall
xlat
mov
jnp
mov
mov
dec
and
hlt
jmp
mov
psubsw
mov
lea
xchg
cmp
les
xor
xchg
xchg
pusha
fbstp
decl
jmp
push
std
lods
mov
and
sarb
test
sub
sub
push
sub
pop
int3
dec
sahf
mov
sbb
dec
fisubrl
push
mov
mov
pusha
jns
adc
cmp
jmp
jmp
mov
movl
ljmp
sub
iret
adcl
add
sub
and
push
fisubrs
fimull
rorl
mov
jg
mov
mov
in
dec
jno
xor
shl
xorb
je
lret
shl
mov
pop
pop
dec
dec
scas
add
fsub
js
fstpt
lret
dec
pushf
aas
shl
and
add
test
clc
fcompl
xchg
pop
negl
jmp
xchg
mov
xor
cvttps2pi
stc
inc
mov
stos
outsb
into
sbb
sub
xchg
xor
pop
and
adc
xchg
ja
loope
mov
xchg
sub
xchg
pop
mov
stos
mov
lret
call
or
mov
mov
and
add
pop
push
cmpsb
cmp
xlat
jb
arpl
jmp
and
xchg
rorb
dec
daa
or
pop
jle
ljmp
jmp
jmp
xor
sub
insl
leave
test
out
test
mov
cmp
jne
loope
jb
ret
xchg
movsb
adcl
push
add
push
cltd
mov
pop
and
jb
xchg
aad
mov
je
movsl
xor
dec
cmp
push
ss
scas
jp
xchg
sbb
pop
sbb
out
in
pop
sti
int
mov
scas
mov
dec
dec
push
call
fwait
mul
notb
out
add
lock
ja
ja
push
test
in
js
jno
xor
clc
popf
xchg
add
push
popf
mov
push
cs
sub
or
call
cmc
fstpt
lea
test
lods
adc
xchg
mov
popa
int
xor
rorl
cmc
and
mov
fiadds
lods
pop
pop
mov
imul
cmpsb
out
cmc
mov
xchg
xor
xor
add
jns
daa
scas
xchg
mov
out
lret
insb
jmp
cmp
popa
leave
cltd
cltd
mov
inc
adc
shlb
push
inc
orl
or
xor
sarb
push
or
insb
dec
dec
or
or
adc
push
mov
push
jmp
xor
mov
and
push
loope
mov
lret
jecxz
mov
pop
cmp
cmp
mov
mov
test
mov
lret
push
test
aaa
add
iret
inc
pop
addb
inc
push
dec
insb
mov
add
add
cmpsb
lcall
ljmp
xchg
mov
jecxz
xchg
sti
xor
test
inc
add
jge
inc
mov
sub
in
cmp
test
shr
mov
mov
adc
les
repnz
cmpsb
add
data16
xor
jns
xor
push
xchg
or
addl
aaa
or
divb
lea
ss
bound
mov
fstp
xor
popa
push
push
sub
add
pop
dec
lock
cmp
adc
les
xchg
fisubl
and
data16
test
inc
rol
mov
out
push
ljmp
out
jecxz
add
xchg
ja
clc
sub
jl
mov
xchg
mulb
dec
jae
jbe
mov
xchg
xchg
insl
pop
pushf
mov
out
dec
ret
fs
imul
out
sahf
movsb
push
and
inc
aaa
xor
daa
and
dec
and
xchg
fwait
and
mov
jbe
sbb
lcall
pop
sbb
inc
jno
out
ljmp
jmp
sti
shl
xchg
mov
sti
mov
sbb
sub
push
inc
aaa
add
inc
scas
arpl
mov
add
loopne
adc
mov
shll
xor
push
ja
incb
cmp
in
mov
leave
dec
jmp
jl
sbb
xor
repnz
lahf
leave
sub
pop
fld
add
xchg
lret
cmp
mov
mov
mov
push
adc
sbb
push
jo
mov
jg
leave
mov
pop
and
ljmp
pop
cmp
xchg
imul
test
inc
sub
jno
mov
add
sbbl
mov
scas
adc
std
popa
enter
push
rcll
sbb
mov
sub
gs
ss
push
pop
pop
jg
in
movsb
lock
repz
pop
sub
mov
lcall
sbb
and
popf
out
rcrl
xchg
shlb
scas
sbb
enter
fidivs
les
ret
rolb
out
dec
mov
rcr
inc
dec
sub
inc
les
enter
in
xchg
in
es
movb
sub
mov
xchg
test
mov
mov
lods
add
push
fidivrl
sub
fisttpll
lods
and
daa
fiadds
or
mov
or
aaa
call
dec
cli
mov
sub
jmp
dec
xchg
pop
into
push
icebp
jmp
imul
jne
mov
xchg
out
test
out
leave
xor
pop
adc
cmp
adcl
mov
into
scas
add
lret
stos
fsubrl
pop
sub
add
dec
ret
mov
pushf
outsl
test
ret
add
out
aas
ds
sbb
out
mov
into
pop
icebp
and
cltd
in
ss
test
mov
mov
mov
enter
sub
test
cmp
jnp
das
mov
popa
dec
dec
sbb
add
add
fwait
xchg
mov
repnz
push
cwtl
test
iret
pop
mov
mov
in
outsb
xchg
test
test
out
inc
call
or
mov
mov
xchg
or
xorl
lock
mov
ret
mov
dec
mov
push
aas
movsl
inc
push
xor
je
inc
jae
movsb
inc
dec
pop
push
inc
ss
std
lock
cs
jecxz
lods
dec
es
push
addr16
pop
jl
shrl
imul
or
push
xchg
in
cld
fistpll
xor
xchg
or
sbb
cmpsb
xchg
xlat
xchg
xchg
jb
xchg
pop
push
fwait
xor
test
out
dec
mov
pop
out
sahf
ret
lods
push
cmp
gs
cmpsb
and
jge
daa
jg
cmp
xchg
aam
pop
mov
push
test
out
insl
cwtl
sub
lret
jl
sbb
aaa
repnz
dec
and
cmp
xchg
and
shlw
sub
test
int
test
mov
pop
cmp
sbb
add
shrb
sbb
mov
jle
cld
cmp
stc
xchg
mov
fdivrs
mov
sbb
sbb
mov
or
mov
mov
das
xchg
lahf
lods
aam
mov
andl
sbb
mov
dec
xchg
adc
loop
lods
out
mov
mov
xchg
sub
shll
pop
adc
push
cld
fadds
push
mov
repnz
mov
das
pop
mov
xchg
sbb
subl
cmp
mov
inc
mov
adc
insb
repnz
inc
pop
enter
das
cltd
inc
xchg
insb
xchg
repz
mov
jg
pop
sbb
into
dec
arpl
mov
mov
jo
or
std
outsl
xchg
push
xchg
mov
cwtl
cmp
icebp
test
jmp
std
or
jle
jl
push
cwtl
mov
mov
loop
jae
ds
outsb
pop
rcr
scas
faddl
shlb
out
or
into
and
xor
mov
mov
adc
mov
xchg
pop
lahf
jnp
stos
xchg
pop
pop
jbe,pn
lret
das
mov
xchg
xchg
dec
inc
daa
clc
outsb
fnstenv
imul
cs
addr16
pop
ljmp
inc
sub
inc
je
inc
push
cmp
sbb
sub
sarl
push
sbb
enter
test
movsb
mov
jae
bndstx
cli
das
ss
adc
test
jg
xor
adc
jle
aam
jae
inc
cmpsb
pop
jp
scas
movsl
or
leave
sahf
cmp
jge
inc
jp
or
xchg
cmc
mov
xchg
test
push
push
mov
push
jb
inc
ret
adc
in
es
mov
jae
loopne
aaa
or
xor
xor
mov
mov
push
mov
jne
aam
vpmuludq
and
mov
or
inc
cmp
imul
mov
mov
fmull
sub
popf
sbb
into
stc
mov
rolb
cld
lret
fdivrs
mov
pop
sub
add
xchg
jmp
push
aam
aas
bound
insl
in
sbb
imul
repnz
cmp
lock
imul
push
dec
std
sbb
sbb
jbe
adc
mov
dec
sub
idiv
pop
pop
xor
loope
cmp
cltd
cmp
sub
js
mov
push
pop
ret
pop
fistpll
movsb
js
pop
nop
arpl
lds
das
bound
pusha
outsl
mov
mov
xor
lods
xor
insl
or
xlat
jbe
push
add
jns
insl
je
sbb
fistpl
xor
dec
mov
inc
cmp
inc
fidivl
jbe
call
mov
and
jmp
or
xchg
pop
jp
int3
xchg
arpl
jmp
jne
lret
push
xor
filds
addr16
mov
adc
jg
cmpsb
inc
hlt
leave
sbb
inc
in
jmp
ja
subb
and
or
out
or
leave
xchg
lock
mov
rcl
out
mov
mov
pop
movsl
and
or
aam
mov
sti
test
in
push
add
sbb
arpl
fadd
or
adc
jle
inc
ja
jge
push
les
mov
inc
lret
adc
lret
sbbb
cld
movsl
mov
inc
nop
pop
inc
cmp
xor
lock
cld
push
gs
cmpsb
mov
jne
stc
xor
push
sub
movsl
mov
imul
loopne
fmull
mov
popa
dec
sbb
jg
mov
cs
xchg
lds
sbb
lret
jle
xchg
addr16
pusha
add
ljmp
frstor
mov
sbb
pop
in
dec
jns
test
fldcw
jo
std
aaa
cmp
jbe
fnsave
push
cmc
ret
fisubrs
das
mov
pop
xchg
inc
stc
icebp
fstl
push
mov
pop
pop
f2xm1
jo
push
push
push
jne
pop
lods
fistpl
and
jo
icebp
fldcw
aaa
mov
out
testw
xor
mov
add
out
pop
or
mov
inc
inc
pop
cmp
sub
ret
inc
in
ret
xchg
xchg
mov
sqrtps
orl
bound
mov
sbb
mov
xchg
in
shll
pop
lea
jnp
pop
aad
add
push
imul
jg
jb
dec
xor
popf
inc
mov
daa
roll
ljmp
notl
call
int
test
xchg
lahf
cs
or
mov
sub
test
cmp
push
jns
pop
and
adc
loope
in
gs
loope
push
in
push
aad
out
xchg
pop
pop
xor
shll
push
inc
shll
loopne
xchg
test
in
push
rclb
in
inc
jno
enter
sbb
cs
lds
iret
negb
mov
cmpl
mov
out
imul
pushf
cli
out
jne
icebp
ja
mov
repz
and
enter
scas
lret
sbb
mov
mov
bound
pop
xor
push
sub
rcl
pop
push
jns
adcl
add
arpl
push
inc
stos
popf
inc
std
xchg
dec
pushf
ljmp
inc
dec
jp
adc
cli
cwtl
fisttpll
xchg
inc
or
dec
orb
or
sub
or
jne
adc
xchg
fidivrs
adc
je
sub
sub
mov
mov
ja
mov
mov
mov
inc
out
jae
test
pop
ljmp
sub
loope
cmp
in
push
cs
pop
sbb
mov
lahf
dec
mov
daa
das
pop
push
jl
add
mov
outsl
mov
negb
leave
int3
popa
dec
xchg
shl
test
mov
push
cmp
sbb
mov
cmpsl
jl
aas
jno
mov
push
stos
lret
cli
mov
daa
lcall
imul
lret
cwtl
jae
clc
in
cwtl
sub
xchg
mov
xchg
sbb
jnp
pop
add
and
ret
and
lods
adc
jo
scas
imul
mov
jae
cmpb
es
call
pop
sbb
xlat
mov
mov
mov
xchg
or
out
dec
cs
aas
lods
pop
pop
fisttps
sbb
mov
sbb
mov
fisubl
jmp
or
cli
adc
pop
stc
adc
pop
outsl
pop
inc
or
icebp
shll
gs
jns
fisttpll
int
cmp
in
nop
cs
mov
sub
scas
mov
cmp
mov
pop
sub
aas
lcall
popa
scas
mov
dec
jge
dec
out
cmp
shlb
ja
adc
loope
hlt
mov
iret
mov
repz
pop
fists
dec
and
fldcw
inc
loope
xlat
ret
movsb
sti
aaa
loopne
pop
sbb
int3
or
call
andl
adc
ret
jnp
loopne
mov
jbe
push
and
ret
pusha
sbbb
test
inc
mov
andb
cld
ds
shrl
cmp
add
sub
shlb
dec
imul
add
jge
stc
orl
lea
nop
outsb
sahf
and
fidivrl
mov
pop
mov
inc
aas
les
mov
mul
mov
scas
stos
test
xor
xchg
inc
push
stos
sbb
fcoms
xchg
jle
and
in
js
adc
mov
sahf
cmp
push
push
pop
icebp
adc
popf
ret
pop
cmc
sub
xor
jg
push
cmpsl
addr16
ja
push
pop
or
sub
ret
mov
jns
sub
inc
and
jg
and
mov
add
movsb
xchg
xchg
mov
sub
sub
stos
mov
jp
loopne
adc
push
mov
jne
adc
pop
cmp
data16
adc
dec
fdivrl
outsl
imul
mov
sub
enter
pop
gs
rclb
mov
dec
cmpsb
and
shlb
adc
jo
data16
pop
loope
es
mov
loop
and
lcall
sbb
mov
xor
leave
sti
int3
int3
dec
shrb
imull
inc
pop
xor
pusha
stc
mov
out
mov
movzbl
leave
std
push
std
fwait
dec
xor
jmp
insb
ret
mov
inc
vcvttps2dq
lahf
or
ljmp
xor
movsb
push
test
pop
mov
dec
test
pop
jnp
add
jo
jo
sbb
sahf
call
mov
sbb
dec
fsubr
mov
dec
cmp
mov
stc
lret
jno
or
aas
enter
xchg
outsl
loope
loop
clc
jp
pop
loopne
mov
filds
in
jne
adc
pop
stos
xor
fwait
je
mov
cwtl
push
roll
mov
test
mov
cmpsl
cmpsl
push
lahf
or
loopne
xchg
inc
sbb
add
or
or
std
fistps
shll
xchg
cli
rcrb
and
add
fidivrs
in
sub
jle
add
xchg
mov
sub
inc
fidivl
in
push
jnp
mov
mov
push
and
sub
xor
fdivr
mov
adc
push
pop
mov
xlat
data16
or
push
js
mov
in
cmp
notrack
nop
jmp
in
fs
xchg
push
bound
or
repz
dec
cmp
les
mov
shl
das
cld
dec
cmp
mov
xchg
lods
loopne
jmp
adc
push
daa
inc
dec
sub
cltd
sbb
lahf
sub
shll
jae
cli
es
loopne
insb
mov
fildll
mov
repnz
lret
pop
jo
es
dec
jbe
mul
sub
dec
aam
int3
inc
push
push
fs
inc
test
pop
popa
out
or
sbb
andb
scas
sub
orb
imul
pop
test
ret
in
inc
xor
jb
adc
push
or
rol
in
xchg
cwtl
add
sahf
cmp
xlat
cltd
or
imul
stc
push
push
push
je
mov
sahf
stos
xor
pcmpgtw
imul
mov
addr16
push
adc
mov
push
cmp
in
jo
adc
lret
dec
sbb
cli
jp
orb
ret
push
push
inc
shr
pop
and
out
jne
mov
mov
hlt
cmp
daa
jl
cmp
sub
repz
daa
or
outsl
repnz
sti
mov
neg
pushfw
cld
lock
push
gs
push
sub
insb
cmp
int
mov
inc
iret
nop
xchg
or
xchg
push
or
sbb
pop
mov
sbb
push
inc
cmpsl
hlt
mov
vmwrite
jbe
sub
out
jle
outsl
das
dec
repnz
adc
jo
cmpl
ds
stos
xchg
ss
jp
hlt
fs
mov
imul
push
xlat
dec
push
xor
mov
sbb
cmp
bound
outsl
adc
jmp
push
mov
idivb
cmpsb
xor
mov
cmp
in
frstor
xchg
lods
fs
mov
xchg
ljmp
test
sbb
in
icebp
cmp
jge
xor
fs
sbb
push
lahf
int
adc
add
stos
sub
mov
push
out
adc
cmp
movsl
ljmp
jnp
fidivrs
fs
decb
pop
xor
repnz
rcll
jecxz
adc
mov
insb
mov
out
outsl
rcl
jmp
ret
push
xor
push
and
mov
add
xor
mov
jecxz
push
andb
xlat
jl
outsl
sahf
and
jnp
pop
jecxz
xor
sbb
in
xchg
das
shrb
addr16
std
ret
sbb
pop
push
pop
mov
out
test
test
cmp
std
jp
fcmovnb
aad
cli
fnsetpm(287
cmp
sub
aad
jno
or
or
lock
popa
sub
xor
mov
and
addl
pusha
rorb
roll
roll
push
repnz
mov
mov
jne
arpl
out
jmp
add
pusha
scas
incl
nop
shrl
data16
inc
jae
in
lcall
add
aam
outsl
xchg
jmp
and
into
aas
adc
stos
aaa
jge
loopne
jne
cli
and
jg
pop
nop
sbb
cmp
scas
xchg
xor
shrb
ja
mulb
fnsave
adc
enter
loopne
adc
dec
xor
leave
dec
inc
inc
jl
fldl
push
jno
pop
and
mov
movb
sub
js
cli
ret
sar
inc
cli
mov
xlat
incb
fimuls
outsl
cmp
jl
lea
pop
aad
xlat
xchg
xor
popa
cli
test
xlat
jecxz
ficompl
push
pop
xor
into
repz
je
je
lock
inc
or
xor
scas
pop
cwtl
pop
mov
cmp
cmpsb
mov
insl
les
ds
mov
out
mov
data16
xor
mov
sub
inc
dec
fdiv
fldcw
mov
xlat
dec
sub
dec
dec
jecxz
jne
or
or
std
cmp
mov
test
inc
mov
xchg
mov
ds
in
xchg
push
cmp
push
mov
leave
stc
jle
and
roll
inc
jecxz
inc
mov
cmc
lods
lcall
loope
out
cwtl
js
aad
lahf
dec
mov
sub
lods
fbstp
cmp
test
cld
xchg
mov
and
loope
jg
xor
inc
pop
shll
shlb
pop
xor
add
add
idivb
aaa
mov
in
lock
pop
xchg
mov
mov
loopne
in
stos
pop
in
dec
sub
inc
imul
mov
dec
or
xchg
adc
xchg
pusha
sub
in
shrl
aaa
int
in
cmpb
jge
sbb
push
insl
pop
mov
inc
xchg
fwait
cmc
mov
popf
into
ss
or
cmp
jnp
les
fcom
xor
ror
cmp
push
in
aad
and
addr16
pop
dec
push
out
dec
outsb
sbb
and
je
sbb
or
push
push
add
or
cli
pop
cmc
pop
jns
cmp
dec
shrb
es
icebp
jg
xor
push
sbb
xlat
sub
adc
dec
cmp
in
out
xor
icebp
jo
aam
fsubrl
das
add
dec
roll
and
xchg
xor
scas
push
stos
sbb
enter
cmp
out
push
out
dec
xchg
push
xor
dec
sahf
mov
pop
xchg
cld
lret
pop
xchg
jnp
loopne
xchg
and
xor
dec
bound
push
mov
or
push
inc
inc
and
mov
fldt
add
inc
sbb
inc
leave
jae
inc
cs
out
push
inc
movsl
imul
addr16
xchg
popf
lret
das
leave
stos
lret
mov
and
lds
push
adcb
mov
in
scas
mov
mov
dec
mov
and
gs
clc
mov
xchg
js
in
fistpll
sti
push
scas
mov
and
sub
sub
lahf
cmp
rorl
repz
jne
into
fisubl
cmp
aad
shl
push
js
mov
dec
fcomip
cs
pop
in
neg
inc
popf
clc
stc
pusha
jno
sbb
xor
das
cmp
cltd
mull
pop
pop
mov
loopne
jle
pop
loopne
cmp
mov
data16
sbb
inc
dec
aam
adc
into
in
pop
popf
fsubrl
mov
mov
lahf
or
jmp
clc
in
movsl
or
sub
jle
mov
ss
insb
rcll
shl
push
test
rorb
ja
pop
jae
hlt
ret
sbbl
clc
adc
adc
cmp
xchg
cmp
lret
pop
enter
dec
push
and
stos
pop
mov
mov
push
jbe
imul
call
lea
or
jno
shll
lcall
pop
dec
adc
inc
test
inc
imul
jge
mov
or
call
and
fs
add
scas
inc
and
jge
add
cmp
push
movl
outsl
and
jns
aad
loopne
cltd
lock
fnsave
inc
or
mov
iret
test
mov
mov
pop
jp
mov
mov
pop
sbb
inc
push
imull
loop
xor
dec
imul
and
mov
push
xchg
popa
dec
mov
sbb
mov
adc
sub
gs
outsb
mov
cmp
fdivs
ret
sbb
out
into
imul
pop
inc
ja
jmp
imul
xchg
scas
mov
ja
mov
pop
mov
call
xlat
or
rcrb
mov
mov
adc
inc
fistpll
jmp
int
push
fldcw
push
imul
imul
mov
sub
jne
in
cmp
mov
test
jmp
dec
mov
stos
adc
xchg
movsl
mov
mov
pop
loop
sub
incl
add
frstor
add
call
popl
in
mov
push
pop
push
ss
xchg
popf
in
jae
jmp
adc
xor
jno
sbb
fcoms
inc
mov
add
cwtl
icebp
jns
and
push
cmpsb
mov
jns
inc
add
jb
daa
call
sarb
sar
push
inc
jmp
push
mov
ljmp
and
adc
add
std
test
inc
or
xor
cmp
loop
push
pop
out
addr16
sarl
popf
nop
fcoms
je
mov
pop
stc
pop
and
aaa
idivl
aas
xchg
lret
xchg
pop
cmc
mov
xchg
test
stos
dec
pop
dec
and
insl
or
out
call
movsb
stc
adc
pop
and
xor
sbb
xchg
andl
mov
out
fs
sub
push
mov
dec
ret
jnp
pop
dec
dec
or
ja
dec
pop
repz
call
lds
add
sahf
imul
xor
outsb
aaa
cmc
adc
xchg
sub
pop
add
nop
mov
push
js
cmp
daa
outsb
sub
ds
fnstenv
xor
adc
inc
ret
xchg
inc
outsl
cmp
out
fwait
push
cmc
add
hlt
aad
call
sarb
jmp
sub
mov
insl
mov
inc
fists
fisubrs
jmp
in
push
and
rcl
xchg
popf
pop
and
pop
dec
adc
fsubs
addl
das
sbb
cmpsl
adc
sbb
pop
inc
enter
mov
sub
jno
push
inc
repz
mov
pop
cld
sub
imul
xor
adc
stc
lea
sub
mov
adc
cmpsl
jecxz
mov
add
aas
cmp
xor
xchg
or
pop
lods
push
clc
sub
popfw
test
ret
stc
lcall
mov
popa
out
imul
fsubl
pop
shlb
fs
jnp
lds
xchg
mov
sub
inc
or
or
xchg
bsr
cli
dec
icebp
pop
jne
movsb
push
cmp
addr16
cmc
xchg
fwait
push
lock
fmulp
mov
sub
dec
ficoml
dec
sbbl
push
xchg
adc
mov
lods
shll
sbb
inc
call
mov
fistpll
movsb
in
sub
aaa
sbb
popa
cmp
fisttpll
lfs
mov
pop
jge
mov
pop
in
je
inc
push
leave
mov
dec
add
mov
or
shrl
test
jl
inc
fdivrp
xor
movsb
jp
popf
in
fisubl
ljmp
add
mov
fiadds
cmpsl
in
mov
cs
fisubrs
fwait
daa
xor
popf
dec
es
roll
mov
jno
cmp
testl
loope
push
lcall
daa
loopne
sbb
fbstp
inc
pop
cmpb
lea
cmp
inc
cli
scas
daa
mov
dec
out
mov
adc
aam
enter
mov
out
mov
scas
lcall
fs
fs
fs
insb
jle
in
movsb
dec
jp
mov
arpl
inc
push
pop
add
not
fcompl
dec
cmpsb
lret
test
jnp
cld
mov
push
negl
jge
sbb
add
movsb
divb
mov
mov
nop
and
mov
jno
stc
push
fisttpl
mov
outsb
jae
and
and
mov
shr
mov
fidivrl
cmp
pop
mov
xor
jno
adc
and
push
cmc
add
iret
push
out
push
lds
adc
test
xor
in
stos
dec
push
push
popa
adc
insl
shrb
mov
jne
add
pop
mov
and
push
test
sub
lock
fldcw
in
pop
iret
push
loope
xor
in
xor
lods
in
xor
ret
add
fwait
add
cwtl
cwtl
sbb
out
mov
push
mov
or
and
scas
mov
mov
dec
jno
test
inc
shrl
pop
xchg
mov
fmuls
aas
xchg
push
in
add
fistps
push
repz
mov
subb
fadds
cmp
ss
sbb
xchg
xchg
imul
xchg
mov
js
xchg
push
pop
add
stos
out
and
jle
sbb
rolb
mov
push
ja
sti
and
loop
jae
dec
and
dec
ret
fsubrl
push
push
pop
xchg
sti
xchg
add
sbb
pop
add
sub
sub
add
gs
cltd
push
lds
out
sub
mov
cmp
les
les
dec
sbb
insb
pop
addl
xchg
enter
xor
mov
scas
loope
mov
cmp
in
outsb
add
xor
push
cmp
jg
rcl
sahf
pop
scas
call
sahf
cmp
push
lcall
mov
insb
inc
push
cltd
sub
data16
push
cmp
sub
cmp
sbb
cmp
nop
repz
aas
enter
notl
jb
hlt
push
inc
cld
push
adc
lcall
sub
add
mov
xchg
popa
xchg
cmp
adc
mov
xor
xor
inc
imul
fcompl
jae
sahf
out
jle
mov
repnz
in
sbb
bound
ss
mov
mov
mov
lds
xchg
dec
sub
fwait
je
gs
js
std
repnz
dec
sub
or
out
jno
sbb
cmp
hlt
int3
out
nop
popa
or
xchg
and
adc
test
sbb
adc
jne
xor
adc
pop
dec
cmp
jle
xor
cmpsl
xchg
jg
sub
pop
push
adc
jo
and
sbb
xorb
fnstsw
aas
leave
lcall
rol
js
sbb
out
icebp
pusha
loopne
mov
dec
cmpsl
inc
iret
push
pop
mov
nop
outsb
test
and
adc
xorl
sub
add
xor
inc
sbb
shlb
xor
jecxz
es
jge
imul
jbe
dec
mov
js
movb
xchg
cmp
jl
or
outsl
inc
fisttps
insl
ret
jle
aas
dec
push
pop
jecxz
pushf
orb
sub
ss
cltd
mov
mov
push
cmp
std
push
adc
mov
sbb
fmulp
arpl
mov
adc
jp
jl
dec
mov
sub
ds
fwait
into
out
pop
je
mov
dec
ljmp
add
cmc
insl
push
leave
cmp
es
jbe
sahf
inc
mov
fucomip
outsl
mov
mov
out
push
xchg
call
dec
inc
pop
sub
cmp
pop
xchg
fwait
xor
stos
push
push
dec
xchg
xchg
mov
adc
jae
jne
repz
sahf
sub
jae
add
pop
jb
repnz
aaa
decl
cli
icebp
xor
add
sub
push
adc
pop
jns
lret
push
fcoms
mov
cmp
mov
push
jbe
inc
inc
sbb
xchg
call
mov
popf
ja
scas
inc
cld
add
mov
adc
lea
jae
sub
out
xchg
aaa
stos
sbb
pushf
mov
fistl
dec
lahf
xchg
outsl
mov
int
pop
jp
jmp
xor
mov
fisubrl
mov
jmp
lahf
cmc
scas
dec
enter
push
pop
rcrl
mov
ficomps
je
xchg
cmp
fwait
adc
negb
cmp
testb
lods
mov
fcom
or
inc
loopne
testb
push
push
sub
lret
aas
push
or
cltd
sub
and
aam
xchg
scas
adc
stc
stc
ss
mov
popa
testl
mov
mov
pop
ficomps
cmp
or
mov
loope
mov
imul
addb
push
mov
inc
sahf
iret
pop
or
out
and
add
je
cmpsl
sahf
movsb
ret
xchg
add
cmp
sub
mov
mov
mov
mov
and
dec
test
fwait
mov
in
int3
add
call
mov
fmul
repz
popa
out
out
das
push
out
cli
je
ret
fadds
lcall
scas
add
push
call
mov
ficomps
in
jp
mov
ret
test
and
fs
xchg
sbb
fcomi
orl
adc
pop
aaa
lret
cmc
xchg
fadd
inc
test
push
push
and
jnp
test
out
pop
stos
xor
fs
in
or
rcll
xor
xlat
loope
fdivl
or
das
push
jl
mov
popf
addr16
cltd
repz
lods
pop
rclb
pop
out
inc
mov
ja
ds
sbb
sbb
sbb
nop
jmp
popf
js
mov
mov
xor
jne
dec
mov
clc
sub
lahf
adc
clc
in
xor
call
cltd
jns
mov
add
js
xor
fwait
pop
xchg
aas
aam
dec
out
ret
and
pop
xor
lods
stos
adc
and
or
sub
dec
xor
idiv
dec
xchg
xchg
push
lahf
sub
cmpsb
mov
pop
adc
pop
push
rol
mov
cmc
loopne,pt
outsb
jle
mov
push
call
or
jg
mov
stos
adc
sub
cmp
inc
arpl
mov
scas
cmp
icebp
adc
mov
in
and
sbb
cmp
jbe
pop
inc
pushf
in
push
sub
inc
imul
cltd
out
jno
mov
mov
jbe
cmc
add
insl
testb
jb
jne
mov
hlt
jg
std
mov
or
inc
jg
in
xlat
int3
cmpsl
and
sbbl
daa
clc
fisubrs
push
mov
stos
das
jecxz
pusha
or
outsb
sar
movsb
cltd
xchg
or
pop
lock
jb
xchg
out
xchg
inc
adc
movsl
adc
mov
xor
rcrb
cmp
jecxz
lret
or
jno
mov
pop
aad
or
rcrb
into
fwait
pusha
inc
pop
sub
insl
test
jle
cmp
push
and
loopne
mov
cmpl
lcall
fstpl
pop
xor
imul
out
jle
fimuls
dec
in
lahf
xlat
dec
cld
push
pop
fdivs
push
jg
fidivl
adc
sbb
push
xlat
mov
sub
imulb
cmp
xor
jno
daa
push
out
add
data16
int
push
ret
lods
or
sbb
mov
aad
test
adc
mov
sbb
and
add
dec
jmp
scas
add
shll
lret
xchg
add
or
mov
sbb
adc
addb
shll
in
jo
pop
cvtdq2ps
or
sbb
int3
jle
fisubs
add
in
inc
pop
mov
fcmovnu
lea
jp
aaa
adc
loop
mov
inc
dec
bswap
and
das
fwait
adc
lret
mull
mov
and
pop
mov
mov
into
cwtl
xor
aas
xchg
enter
push
pusha
sub
cmp
cmc
pop
repnz
dec
jl
dec
insl
and
pop
jmp
push
out
push
sbb
jle
out
mov
or
insb
pushf
loope
xorl
test
aaa
in
add
sub
fsubs
cld
hlt
shl
xchg
mov
cmp
pop
mov
mov
xchg
je
lahf
js
lock
outsl
mov
xor
xor
pop
adcb
movsl
push
xchg
gs
adc
into
sahf
into
int
pop
xchg
out
and
pusha
add
cli
mov
scas
jo
test
divb
mov
add
pop
incl
xor
jns
mov
ljmp
lahf
sti
pop
mov
movl
into
std
test
adc
imul
xchg
mov
add
mov
shrl
stos
ret
rcll
adc
xor
fimuls
cli
push
push
sbb
cli
pop
pushf
aam
and
mov
inc
xchg
addb
xor
fst
jecxz
jge
out
cmp
movsb
repz
gs
mov
cmp
enter
xchg
pop
dec
addb
insb
xchg
dec
xchg
lret
cmp
mov
or
sbb
and
imull
loop
pop
push
js
in
ja
dec
in
std
dec
leave
jmp
loopne
add
jnp
push
inc
clc
pop
fildll
in
xchg
sub
sbb
sbb
pusha
lds
adc
mov
int
shlb
insl
fcoms
cs
adc
lds
mov
lret
xchg
rcrl
daa
push
cmpsb
mov
sub
jbe
insl
push
pop
add
adc
fistpll
into
icebp
add
pushf
in
sub
aad
or
push
push
mov
jno
orl
or
in
test
es
mov
fwait
jg
test
xchg
lcall
loope
xchg
adc
pop
inc
adcl
mov
shll
xchg
out
lds
or
xor
je
mov
sub
movsl
or
xchg
cmpsl
inc
mov
mov
loop
sbb
xchg
jg
adc
xor
mov
arpl
fcmovnbe
loop
add
inc
adcb
arpl
enter
sub
stos
pop
daa
sub
xor
mov
in
xchg
call
adc
xor
loopne
cli
and
je
jmp
lods
adc
xchg
jmp
pop
sub
dec
lahf
mov
push
sbbl
jo
arpl
pop
xchg
loop
mov
in
shll
jno
bound
push
test
in
xorl
aaa
dec
fsubrl
imul
ret
iret
push
sub
xorl
add
mov
ja
mov
and
jp
jb
fs
inc
sti
push
cmc
test
jbe
outsb
add
and
sbb
inc
adc
sbb
mov
insb
lret
popf
rol
cwtl
lods
testb
fists
stc
data16
mov
cwtl
cmp
sbb
or
mov
mov
cltd
cwtl
add
mov
cltd
pop
push
mov
je
sub
inc
rorb
out
out
inc
lahf
mov
dec
push
inc
pop
mov
sti
je
cmp
gs
js
sti
fwait
es
jg
leave
mov
std
pop
push
add
int3
sbb
sbb
rcrl
rorl
loop
aad
out
outsb
jmp
lock
add
xor
cmp
mov
jbe
sar
lods
stc
jp
mov
dec
and
cld
mov
mov
dec
add
imul
scas
std
dec
test
fstpl
out
loope
dec
mov
out
dec
mov
outsl
dec
xor
adc
mov
jmp
mov
add
mov
lods
push
fstpt
in
outsl
loopne
inc
mov
out
loopne
or
negb
fists
xlat
xchg
cld
scas
and
pop
xchg
or
inc
adc
fdivrl
cmc
mov
rep
jle
test
xchg
jp
test
fdivrp
add
xchg
lea
fdivp
inc
inc
sti
repz
outsb
xchg
xlat
cmp
lret
sbb
mov
enter
cmp
lods
lds
loopne
push
fstpt
sub
mov
and
gs
fmull
or
dec
in
and
pusha
or
ds
add
fstl
dec
push
insb
rep
into
jnp
jns
sbb
loopne
push
scas
sub
fucomi
push
mov
lds
mov
add
int
in
mov
mov
mov
mov
dec
push
fldl
xor
lods
into
jge
fisttpll
cmp
iret
jecxz
cwtl
fadd
and
mov
call
insl
add
inc
in
call
jmp
or
mov
fcompl
jmp
dec
cmc
ficompl
xchg
mov
aas
nop
mov
mov
outsb
add
test
mov
dec
xchg
or
mov
out
pop
dec
xchg
mov
sub
push
sbb
jnp
icebp
movsl
pop
push
daa
jbe
add
lods
lock
jae
sbb
aaa
pop
push
iret
mov
push
push
or
imul
inc
dec
ret
and
mov
das
xor
hlt
jle
pop
and
jg
add
push
xor
aad
dec
sbb
push
lahf
xchg
push
ljmp
hlt
loopne
push
jbe
sub
mov
pop
push
sub
or
sub
pop
mov
arpl
jmp
lea
into
rorl
add
ret
adc
js
sub
popa
mov
pop
sub
pop
cli
cmpsb
and
mov
pop
jmp
pop
aad
flds
xchg
fisubs
shrl
add
push
jp
pop
sahf
in
xor
cmp
fdivs
pop
mov
xchg
rorb
adc
inc
mov
jp
outsl
adc
pop
xlat
dec
and
add
jmp
ss
aas
pop
insb
cmp
aad
xchg
sub
jb
mov
jno
and
int
and
imul
ljmp
mov
test
pop
fists
fldenv
adc
push
aas
loope
push
out
lds
sbb
push
popf
scas
cmp
mov
out
cmp
or
sahf
cli
je
push
arpl
and
inc
cmp
lahf
daa
push
dec
or
cmp
call
and
adc
lods
add
mov
push
pusha
pop
ss
dec
call
push
dec
lock
ret
sbb
push
addr16
stos
addr16
jl
aad
inc
xlat
in
aaa
jbe
imul
inc
xor
sbb
xchg
xor
shll
mov
or
pop
inc
xchg
xchg
mov
mov
ja
dec
stos
into
xchg
lods
xor
mov
outsb
cmova
add
jne
out
dec
jae
xor
mov
shlb
sbb
inc
mov
ret
fs
aaa
mov
mov
and
cmp
popf
pushf
icebp
iret
ret
sbb
push
mov
push
nop
aad
aam
pop
pusha
and
movsb
outsl
push
fsts
pusha
pop
lcall
sti
cld
ljmp
mov
std
xchg
xchg
subb
mov
pop
idiv
sbb
in
jle
sub
fdivs
jge
pop
sbb
int3
xchg
mov
mov
aas
cmpsb
stos
data16
push
xchg
je
cmp
scas
push
in
aaa
xlat
add
jne
cmp
inc
cmc
je
adc
imul
call
jnp
jo
daa
lods
je
hlt
dec
mov
xor
mov
push
cmc
cmpsl
test
dec
ja
push
dec
test
jecxz
in
inc
ja
imul
cmpsl
xor
lods
mov
stos
pop
gs
insb
leave
lret
cmp
inc
stos
rcrb
rclb
cmp
jmp
inc
into
mov
loopw
cmc
jle
mov
mov
lcall
sub
in
sub
adc
fisttpll
and
dec
cmp
movsb
pusha
adc
xchg
fstl
repnz
out
hlt
sub
int3
push
in
fnstcw
in
mov
in
mov
jp
aam
test
enter
adc
mov
ja
push
pop
or
lcall
inc
dec
insb
movhps
jmp
mov
dec
push
pusha
pop
lret
ret
ss
ret
mov
es
fucomp
das
lods
push
mov
xchg
inc
push
lcall
push
clc
test
aam
icebp
mov
shr
lods
pop
fsubrs
mov
aam
stc
fildl
cld
sahf
xchg
mov
les
jb
ficoms
or
adc
and
mov
jns
das
scas
sub
push
test
jle
mov
or
xor
push
mov
sbb
jmp
ret
or
xchg
cmp
cld
in
push
insl
inc
inc
sub
or
xlat
fwait
js
push
jp
testb
fdivrl
dec
loop
out
mull
lea
repnz
cmpsb
dec
data16
pushf
js,pt
jp
pop
aad
jmp
cld
aad
call
rcrl
neg
dec
lret
or
lret
xor
in
adc
aad
inc
pusha
mov
mov
imul
jae
or
xchg
xchg
push
les
frstor
insb
and
cmp
mov
pop
xor
fwait
jmp
lea
sarl
in
jle
lds
faddp
jg
pop
inc
mov
push
scas
mov
cmp
pop
or
push
lods
ljmp
ja
xchg
adc
sub
xchg
insl
mov
mov
leave
mov
lods
fwait
test
addl
mov
notl
loope
sti
movsl
jmp
in
lods
xor
pop
js
jecxz
mov
jle
pop
enter
stc
push
and
lds
inc
jbe
cmp
ficoml
and
mov
sub
mov
mov
icebp
sahf
mov
add
movsb
clc
mov
mov
pop
mov
imul
nop
mov
insl
call
mov
jno
push
push
pop
add
and
jae
adc
mov
push
es
mov
mov
and
or
fmuls
out
shlb
mov
das
adc
les
add
aad
aaa
mov
js
fcoml
xchg
out
aas
jne
pop
add
pushf
xorl
sbb
rcr
aaa
xor
call
scas
push
mov
movsl
hlt
adc
dec
stos
stc
orb
xchg
xlat
push
jns
les
in
das
mov
inc
push
mov
and
adc
mov
dec
sarb
imul
lret
out
adc
sbb
dec
jmp
jno
mov
rorb
xor
pop
out
cmp
or
push
add
cmpsb
jns
pcmpeqw
aam
imul
imul
aaa
icebp
mov
fsubs
adc
and
js
and
ret
jmp
in
or
pop
popa
mov
push
into
sub
ss
xor
lret
or
inc
popf
popa
push
pop
mov
das
cmp
sbb
sar
mov
inc
jge
mov
shrl
push
push
inc
repz
cmpsb
pop
sti
insb
pop
mov
cs
fs
mov
push
pop
jmp
adc
mov
jnp
pop
adc
mov
inc
jmp
mov
mov
mov
ret
xchg
mov
push
or
mov
call
or
mov
int
push
aas
add
ret
add
push
mov
sub
pusha
aaa
loope
cld
and
cmp
test
sarb
leave
enter
adc
mov
pop
xchg
push
out
fdivrs
movsl
pop
ss
inc
out
bound
leave
mov
and
or
jp
pop
add
cmp
push
or
mov
push
stos
push
mov
es
fdivs
test
leave
loop
loop
scas
lcall
xchg
push
fsubrl
cmp
xchg
adc
cmpb
cmp
mov
int
sarl
nop
or
fistpll
cmp
lcall
mov
lods
fimuls
xor
pop
ficomps
insl
call
call
jb
pop
daa
or
jmp
int
or
sbb
inc
mov
cmpsb
adc
adc
test
sub
addr16
mov
inc
jg
xchg
push
adc
das
sbb
sbb
xor
rolb
cmp
lock
fadds
push
dec
lods
add
bound
mov
test
or
aaa
mov
and
int
enter
fwait
jnp
and
nop
scas
call
jmp
inc
xchg
xchg
or
pop
aad
insl
and
xchg
mov
and
cmp
mov
cmp
call
test
rcl
sbb
scas
cld
mov
mov
vandnps
push
push
sbb
cmp
popf
pop
fwait
dec
ds
clc
and
lahf
mov
jp
jle
mov
add
shlb
pop
and
jnp
pop
fmul
rorb
jge
cmp
inc
and
cmpsb
adc
xchg
imul
push
mov
stc
mov
pushf
sahf
mov
cltd
mov
lret
test
test
imul
mov
sbb
sub
mov
push
scas
xchg
cs
fwait
dec
xchg
mov
pop
sti
and
rolb
sahf
lods
pop
adc
loop
sub
mov
cmpsb
inc
xchg
push
adc
mov
aad
aad
fisttps
pop
mov
gs
dec
jle
test
fucomp
aaa
les
pop
sahf
lock
jbe
or
xchg
shlb
ss
iret
adc
out
inc
sub
test
jnp
push
add
xor
cmc
mov
jbe
jbe
pop
inc
mov
bound
stos
mov
addr16
cltd
xchg
xchg
insb
movsb
shlb
add
fwait
inc
dec
mov
sahf
pop
fwait
mov
aam
arpl
mov
loopne
cld
gs
mov
mov
popa
ds
sub
pusha
stos
xlat
xchg
push
mov
sbb
cmp
mov
lret
pop
ljmp
cmp
out
add
xchg
and
fidivs
mov
xchg
push
sbb
fisubl
outsl
sbb
aaa
rcll
leave
mov
inc
and
scas
leave
pop
add
aad
lds
and
dec
pop
inc
push
popf
mov
sub
test
mov
jae
or
out
fldenv
adc
cmpsl
mov
pop
lret
test
repnz
xchg
mov
fxch
fisttpll
push
sub
call
adc
push
lahf
loope
inc
bound
xor
ja
push
adcb
es
int3
sbb
and
adc
rcr
add
mov
or
sbb
shll
mov
insl
out
jnp
or
test
bound
adc
push
xchg
mov
mov
repz
and
mov
cwtl
outsl
push
xchg
jae
jg
fildll
adc
mov
rcrl
add
jns
addl
daa
push
push
std
leave
ds
mov
mov
aas
inc
dec
sub
or
adc
cwtl
insb
icebp
push
adc
xor
cmpsb
sbb
ss
ljmp
add
adc
add
clc
mov
adc
ficompl
mov
inc
and
insb
imul
repz
cwtl
imulb
add
daa
push
cmp
push
inc
or
adc
sbb
pop
inc
or
dec
push
lahf
add
hlt
dec
lods
xchg
cs
repnz
mov
lea
test
dec
aaa
sbb
xlat
fwait
fwait
bound
pushf
fnsave
jo
inc
shlb
cs
test
add
push
push
mov
sub
stos
fstp
aam
mov
mov
cmp
xchg
shll
pop
cmc
xor
test
bnd
jae
pop
push
adc
mov
add
add
hlt
push
sub
movsb
pop
addr16
cmp
imul
push
ror
push
repz
and
and
mov
fdivl
xchg
movsb
nop
xchg
loope
test
outsl
mov
mov
cmp
push
jg
test
sub
cli
jns
loopne
dec
mov
dec
cmpsb
push
movsl
mov
arpl
mov
shld
mov
xlat
add
lock
xor
jns
test
mov
dec
cmp
push
pop
dec
push
dec
xchg
out
or
cltd
popa
dec
cs
movsl
loope
int
lahf
mov
mov
mov
popf
loopne
test
ret
leave
mov
add
lcall
mov
iret
ffreep
popa
cmp
clc
js
sub
sub
mov
sub
mov
push
adc
lcall
mov
mulb
dec
data16
mov
mov
pop
lahf
xchg
in
ljmp
cmp
stc
xor
cli
jmp
push
inc
das
mov
mov
adc
daa
rcrl
or
xchg
inc
push
mov
das
int
lahf
sbb
pusha
popf
lods
adc
jno
lea
dec
mov
mov
and
lea
fcmove
divl
in
popa
test
cmpsb
fwait
das
je
lock
sbb
in
sbb
mov
cmpsl
mov
fnstsw
int
repz
inc
lret
and
stc
mov
lods
and
mov
mov
cmp
inc
fisubrl
xchg
ljmp
sbbl
dec
stc
shrl
stos
aaa
or
cmpsl
test
shl
jae
cmp
jb
test
pusha
out
sub
pop
loope
sbb
adc
or
lret
imul
mov
cs
je
test
adc
shlb
movl
or
out
test
xchg
sbb
adc
add
or
xchg
mov
jbe
fwait
inc
gs
arpl
sub
mov
sbb
leave
or
and
fcoml
shrb
xchg
sbbl
arpl
int3
mov
sbb
xchg
xor
in
jbe
stc
adcb
cmpsb
adc
stc
xchg
aaa
mov
enter
inc
pop
imul
push
pop
hlt
addr16
dec
sbb
in
inc
mov
subl
test
adc
mov
mov
inc
je
gs
inc
pop
testb
leave
xchg
cltd
aam
popf
push
push
rcrl
stc
xchg
adc
push
lds
call
das
in
jae
adcb
xchg
jl
test
mov
mov
incl
imul
mov
mov
mov
insl
adc
adc
in
fcmovu
and
push
inc
out
jecxz
mov
cmc
lahf
mov
jmp
pop
push
out
xlat
jge
sub
iret
or
mov
push
mov
mov
xor
cltd
lods
xchg
popa
cld
ljmp
das
cmpsl
out
pop
gs
stos
cs
and
stos
add
sub
mov
mov
out
cld
int
add
xchg
push
dec
add
repz
outsb
js
xchg
xlat
mov
sub
jecxz
lds
push
jo
lret
fs
mov
cmp
lret
dec
popa
mov
mov
pop
outsl
push
or
lcall
ret
pusha
adc
call
xlat
or
cmp
cmp
nop
lcall
in
out
mov
sub
out
xchg
lods
sbb
sbb
cltd
fmull
loop
addr16
push
mov
dec
stos
inc
ja
adc
and
mov
test
hlt
cmpsl
in
push
sub
pop
xor
jmp
jnp
mov
stos
notb
stc
fs
cld
pop
jne
xor
leave
fildl
hlt
imul
mov
adcb
add
lret
dec
mov
lret
in
inc
jno
push
cmp
insb
sbbb
int
sti
push
jg
dec
or
adcb
xor
pop
or
xchg
add
inc
cmpsl
loope
enter
mov
rcl
inc
mov
ljmp
decb
pop
cmpsl
enter
ret
add
lods
fiaddl
lods
sbb
xor
dec
cmp
std
xchg
adc
jb
int3
shll
mov
mov
push
lock
enter
imulb
lahf
rcrb
jecxz
mov
lret
push
sahf
nop
add
fdiv
mov
test
jno
sbb
ss
popa
pusha
mov
push
xchg
xchg
sub
test
jno
sub
popf
icebp
jno
jb
ss
xor
push
sbb
dec
popf
inc
pop
stc
out
sub
rolb
cwtl
loop
lret
mov
inc
jp
inc
xor
add
movsl
and
xor
push
mov
mov
pop
dec
pushf
data16
fs
cmp
dec
mov
loopne
xchg
mov
add
inc
sarb
jmp
add
mov
iret
mov
add
mov
xor
dec
mov
or
addb
in
test
cmp
jle
loopne
outsb
fiaddl
sbb
mov
adc
add
push
xor
mov
jns
jp
jae
bound
fidivrl
add
fistpll
inc
addr16
push
mov
das
xor
fcompl
add
jne
mov
adc
out
movl
in
sbb
loop
mov
rol
clc
stos
jecxz
sub
or
ss
inc
cmpsb
sub
push
nop
cld
adc
mov
and
pop
and
lret
addb
mov
testl
mov
and
sbb
pusha
mov
andl
and
jno
push
leave
adc
scas
divl
cmp
mov
repz
pushw
rorb
mov
or
sub
rclb
movsl
inc
into
xor
sub
mov
pop
mov
xchg
add
movsb
mov
int3
lcall
cltd
push
orb
lock
push
or
xchg
rorl
in
pop
mov
sahf
adc
adc
cmp
clc
shrl
push
ret
jp
sbb
mov
sbb
pushf
clc
imul
lods
stos
int
mov
into
add
leave
sbb
dec
inc
rcrl
jecxz
xor
fisttpl
int
sbb
ss
jo
cmp
adcb
mov
mov
scas
lds
inc
xor
inc
push
cmp
mov
cmpsb
xchg
jge
in
and
push
scas
gs
pushf
push
dec
inc
pushf
hlt
dec
shrb
enter
shrb
mov
clc
inc
fisubrl
fmul
jne
scas
movsb
in
sub
adc
mov
mov
and
or
add
push
lahf
out
or
stos
jo
arpl
aam
lcall
sbb
mov
pop
dec
das
push
insb
push
push
adc
jo
adc
xor
mov
pop
adc
enter
iret
add
jno
mov
or
into
fsubrs
loop
sub
pop
iret
das
adc
jecxz
sbb
sub
pop
push
cli
jecxz
lret
push
mov
imul
mov
push
scas
xchg
aam
jge
inc
test
dec
jno
jp
add
xchg
or
cmp
adc
sbb
shlb
test
cmp
incb
dec
mov
test
ja
lret
add
popa
daa
mov
es
mov
in
ret
loope
test
dec
stos
mov
ds
sbb
pop
add
push
mov
lock
es
mov
pop
fcomip
dec
push
fildll
jle
push
jmp
xor
push
jno
pop
ret
xor
loopne
das
dec
nop
outsb
out
call
or
dec
call
popf
rorl
jg
mov
adc
adc
nop
cltd
pop
filds
cs
and
outsb
movsl
xor
outsb
andl
movsb
sub
std
sbb
test
xchg
xchg
adc
mov
pop
lcall
out
push
sub
adc
dec
cs
jns
xchg
cmp
xchg
adc
in
out
jge
pop
cmp
ljmp
idivl
std
adc
jmp
movsl
pop
mov
push
ja
loope
mov
xchg
or
push
xor
movlps
fsubrp
lret
scas
repnz
mov
pushfw
pop
mov
and
pop
pop
adc
jnp
loope
int
mov
mov
int3
gs
repz
int3
cmpsb
mov
gs
cmp
inc
sahf
cmp
push
hlt
add
scas
ret
pop
and
sub
not
pop
arpl
inc
add
or
js
pop
xchg
mov
scas
dec
sub
push
pop
sub
pop
fdivrs
xchg
sub
add
pushf
xchg
mov
aas
dec
dec
sub
or
ss
out
movsb
xor
mov
or
sbb
inc
loope
sbb
repnz
lcall
data16
cwtl
ds
mov
jge
pop
scas
xor
shrb
clc
push
mov
fdivrl
push
cmp
mov
fistl
dec
movsw
js
xor
cli
out
std
mov
stos
xchg
out
std
dec
adc
pop
sahf
adc
out
fwait
sbb
sbb
sbbl
sub
arpl
xchg
mov
mov
dec
in
imul
aam
movsl
daa
or
out
mov
sbb
loope
and
and
ds
in
jno
xchg
xor
xlat
cmpsb
test
mov
fisttps
or
or
test
call
sub
cmp
and
loopne
mov
or
adc
fidivrl
addr16
mov
mov
cmc
jo
mov
es
cwtl
std
in
cmpl
xor
cmp
frstor
enter
adc
popf
inc
sub
ds
out
gs
lods
jo
push
mov
xchg
loopne
pop
sti
cmp
mov
jno
xlat
adc
and
dec
sahf
faddl
xlat
lods
gs
std
xor
stos
sti
xor
sbb
into
sbb
imul
xchg
and
jmp
xlat
or
dec
ljmp
inc
rcrb
ds
dec
js
in
stos
inc
push
and
imul
jle,pn
lret
repnz
mov
mov
ret
lret
inc
sti
mov
adc
stc
cmpsl
jg
test
jae
mov
jb
and
pop
movsb
in
pop
daa
daa
std
hlt
scas
jno
mov
mov
daa
pop
ljmp
cmc
inc
xchg
mov
dec
mov
arpl
out
push
int3
lahf
add
es
and
mov
scas
repnz
sarl
movsb
cmp
push
rdmsr
push
jle
inc
subl
sbb
push
xor
push
xor
xor
and
loope
xchg
add
repz
mov
or
rcr
ss
int
fnstsw
jns
aas
imul
push
dec
cmp
fcmovbe
add
sub
cld
lock
outsl
ds
xchg
jl
cmp
push
cmp
das
add
mov
or
jg
xchg
roll
and
sbbb
fbstp
push
dec
ror
and
jmp
mov
cmp
cmpsl
pop
sub
aas
mov
cld
adc
mov
rcll
outsb
leave
mov
cwtl
iret
mov
mov
and
add
jl
dec
sbb
out
push
cwtl
rorl
sub
sub
insl
lahf
or
adc
mov
mov
lret
not
repnz
sub
ds
outsb
faddl
adc
or
xchg
out
add
fsubrp
inc
test
aam
mov
push
jno
jl
div
jne
dec
pop
inc
jmp
int
fcmovne
and
mov
int
dec
or
or
std
mov
imul
sbb
mov
inc
jae
pop
cmp
scas
xchg
cwtl
movsl
push
repnz
push
mov
add
ja
xchg
test
mov
into
shll
outsl
adc
hlt
cmc
repnz
test
adc
and
stos
ret
rcll
popa
or
sbb
or
lods
pop
xchg
movsb
xchg
or
jge
or
imul
push
push
sbb
cwtl
jns
test
sbb
sti
clc
jecxz
xor
insl
push
push
dec
insb
ret
fbld
loope
arpl
outsl
jl
mov
xchg
hlt
mov
push
mov
jl
cmpsl
xchg
repnz
mov
mov
inc
in
enter
inc
mov
mov
stos
and
mov
cld
sahf
push
push
xor
or
in
out
call
cmc
jne
jle
xor
call
xchg
push
ljmp
inc
mov
pop
mov
cmp
jb
xchg
mov
jae
addb
dec
fdivrp
xchg
pop
inc
rolb
mov
jno
push
mov
mov
pop
stc
sbb
sbb
pop
lahf
dec
fs
idivl
ret
dec
daa
push
pop
shll
loop
out
int3
enter
mov
iret
cld
iret
inc
xor
stos
push
repnz
dec
jns
das
jge
movsb
adc
add
cwtl
adc
dec
xor
stos
insl
sarl
xchg
popa
mov
or
mov
jnp
aad
dec
popa
dec
sub
test
dec
mov
js
jl
enter
cmp
pop
mov
aam
xchg
mov
rolb
mov
out
xchg
in
pushf
inc
in
out
int
movsb
cmp
add
scas
int
pop
fdivl
cmpsl
inc
nop
sub
decb
fnstenv
cmpsb
out
je
arpl
dec
lret
hlt
in
and
mov
clc
stos
in
movsl
arpl
jne
out
loopne
ret
push
je
std
pushf
cmp
fisttpll
pop
lock
mov
mov
pop
or
iret
aaa
fimull
insl
aad
pop
ss
shlb
lahf
adc
or
into
ret
sbb
popf
sbb
cld
or
inc
and
jb
ljmp
mov
dec
imul
test
dec
out
imul
aas
lret
or
add
call
pop
dec
jg
adc
loopne
ret
inc
shl
push
cmp
push
mov
and
xchg
jl
mov
fisubrs
inc
jecxz
sahf
push
cmpb
add
in
push
pop
lods
test
mov
lret
jg
sub
shlb
add
mov
call
xchg
sub
repnz
pop
and
ret
aas
dec
frstor
and
mov
je
data16
std
aam
enter
stc
mov
mov
and
adc
fisubs
adc
and
sub
mov
sub
fistl
cmp
pop
pusha
mov
mov
inc
hlt
fwait
movl
and
js
ret
mov
jecxz
scas
sbb
stos
addb
call
xchg
mov
pop
or
sbb
mov
push
push
lds
hlt
outsb
pop
pop
inc
mov
xchg
cmp
inc
sti
in
repnz
mov
mov
mov
loopne
or
ficompl
imulb
popa
mov
sub
dec
inc
nop
push
or
icebp
insl
sbbl
pop
xchg
sbb
dec
mov
push
fdiv
jns
in
cmp
xlat
stos
mov
push
gs
adc
insb
push
cli
lods
mov
xor
out
mov
mov
sbb
xchg
mov
lock
pop
orb
or
outsl
insb
pushf
shrb
cmc
fwait
outsb
scas
test
cltd
cmp
cmpsb
cs
and
mov
cld
dec
out
aas
out
jo
mov
mul
negb
sub
and
rol
and
inc
lods
xchg
pop
insb
test
add
lret
mov
test
jb
mov
push
lahf
cld
sub
add
aas
xchg
sub
push
and
jle
xor
popf
hlt
clc
lret
fldcw
repnz
jno
lret
sbb
shlw
out
pop
push
xor
and
cltd
adc
sbbl
jecxz
enter
xor
and
loop
jae
adc
sbb
call
inc
in
add
mov
push
es
ffreep
das
inc
test
sbb
fbld
xor
jecxz
mov
xor
mov
loop
sbb
sub
loope
dec
sub
cmp
xchg
int3
mov
rcll
sbb
pop
sbb
cmp
sub
sub
adc
enter
cmp
les
mov
std
add
mov
xchg
mov
ret
mov
add
and
je
push
inc
adc
inc
cli
mov
push
ja
clc
test
xlat
jbe
int3
test
iret
das
dec
jmp
lret
jl
and
cmp
imul
cmp
push
jp
shrl
dec
loope
call
aas
aad
pop
mov
shr
ja
in
adc
idivb
mov
jge
popa
fsubrl
bound
jne
xor
jns
mov
out
ja
aaa
lcall
test
fdivr
push
loop
in
jmp
ffree
mov
scas
inc
xchg
sub
mov
insl
lds
cmpl
xorb
ret
cmc
outsb
add
inc
cmp
mov
sub
pop
loop
inc
sahf
sub
rcrl
aaa
cld
sub
mov
loop
jbe
pop
and
iret
jae
lret
xor
or
push
dec
andb
jb
hlt
in
lret
mov
mov
pushf
xchg
inc
jge
lcall
xchg
dec
push
cmp
xchg
fldcw
or
inc
mov
shrl
and
adc
cmp
xchg
call
sahf
inc
fisubl
add
sbb
cmp
inc
sbb
xor
jg
out
pop
push
and
int
adc
mov
pop
xlat
adc
lcall
xor
push
movsl
jno
jo
lock
dec
imul
loopne
push
mov
insl
pop
icebp
fwait
ret
mov
stos
and
and
test
test
test
pop
test
mov
notb
out
inc
insl
outsb
add
add
xor
arpl
sbb
in
sti
dec
je
xchg
pop
lahf
mov
adc
xchg
push
xchg
inc
sbb
dec
push
js
int3
addr16
outsl
push
mov
inc
fildl
leave
fstps
add
push
add
in
and
in
pop
pop
pop
push
jg
movsl
cmp
sub
ja
inc
jle
push
sbb
sub
dec
nop
dec
in
repnz
into
nop
rcr
leave
stos
jp
loope
push
mov
jae,pn
lods
movsb
enter
aad
xchg
scas
dec
mov
lock
mov
sahf
dec
mov
sub
push
and
int3
flds
repz
or
stos
add
and
bound
mov
jo
push
lods
xor
fstpl
pand
fwait
subl
push
mov
push
cwtl
out
test
nop
fisttps
push
push
in
sbb
fwait
enter
int3
xchg
jno
adc
lret
test
push
arpl
imul
stos
out
xchg
test
es
adc
cmp
mov
jmp
hlt
loope
cmp
mov
sub
pop
cmp
mov
cltd
cmp
cltd
push
sbb
mov
mov
dec
movsb
enter
xchg
cmpsl
push
xor
call
cwtl
or
mov
enter
lret
mov
pop
enter
xor
xor
daa
dec
insl
cmp
jl
sti
cwtl
jbe
dec
sbb
js
xor
adc
jo
push
dec
push
testl
mov
dec
cld
je
leave
test
insl
std
ds
fsubl
sarl
stos
outsb
cmp
jmp
lods
cltd
jmp
ret
cmp
add
push
in
push
mov
int3
cmpsl
and
and
loop
mov
aam
jnp
enter
test
fdivrp
xchg
or
adc
ret
xchg
jnp
sub
ret
add
fisttpll
leave
adc
inc
test
popa
icebp
cmpsb
stc
je
leave
mov
jl
pop
mov
push
jb
idivl
stos
sbb
ss
add
xchg
je
ret
shlb
test
bound
or
test
cmp
mov
imul
icebp
jne
les
pop
xchg
xchg
jle
sahf
sbb
popf
call
and
jb
add
adc
dec
pop
pop
dec
push
stc
pusha
stos
xchg
sub
dec
js
test
mov
mov
pop
jae
mov
or
push
test
dec
sar
cs
nop
push
xchg
sti
aaa
sub
xchg
dec
pop
pop
lock
outsl
in
test
ud0
mov
jmp
lock
cmc
pop
inc
push
out
mov
mov
clc
mov
push
aam
xor
aas
sti
ja
imul
fs
dec
das
dec
mov
out
pop
pop
enter
pop
pop
aad
jl
orb
sub
mov
data16
pop
cmpb
in
cmp
das
imul
in
jge
mov
test
movsl
nop
xchg
pop
fiadds
sti
aam
mov
loopne
stos
push
in
dec
push
xor
fnsave
mov
and
pop
and
cltd
sbb
sbb
ja
in
xor
in
adc
sbb
ret
cmp
incb
xor
out
cmpsb
flds
mov
mov
xorb
in
lods
shll
lds
pop
jb
inc
cmp
cmp
pop
daa
mov
cltd
dec
adc
and
push
xchg
aas
mov
push
inc
shl
gs
sbb
mov
inc
in
mov
sub
stos
jmp
xchg
mov
cld
fistps
sbb
sarl
test
sub
mov
jns
or
pusha
stc
mov
jbe
dec
insl
popf
and
jnp
enter
es
int
add
jae
in
xchg
push
mov
test
mov
mov
pushf
imul
cmc
push
jmp
or
testb
decl
sub
enter
in
mov
jb
jno
mov
mov
int
inc
inc
push
roll
sahf
inc
jo
lods
xor
inc
xchg
pop
in
lret
in
ljmp
xchg
add
scas
insl
movsb
je
cmc
push
add
mov
or
pop
xchg
test
pop
add
push
ja
cmp
sub
add
in
xchg
xchg
mov
pop
stos
and
lcall
ror
cli
fdivrs
xchg
fdivrs
push
fiadds
imull
icebp
rolb
es
or
outsw
fsubs
pushf
shr
ds
adc
mov
nop
fnstsw
push
push
jno
sbb
jge
pop
das
and
mov
dec
pop
cmp
stos
sub
jl
mov
mov
adc
addl
inc
xchg
add
in
mov
rorl
outsl
mov
mov
rorl
call
xchg
add
aam
sub
orl
cltd
or
adc
push
daa
sub
lahf
cli
arpl
jo
fs
in
add
add
mov
jmp
mov
jmp
mov
ljmp
or
xchg
mov
sbb
jl
pop
mov
pop
inc
pusha
mov
pushf
lcall
ret
pusha
xchg
or
xor
jae
imul
mov
dec
lret
lahf
shll
cli
push
stos
lahf
or
popf
push
shl
cmc
mov
cmp
popa
cmp
imul
test
mov
adc
pop
popa
xchg
lahf
sub
inc
fisttps
pop
or
movsb
fiadds
stos
push
andl
sti
mov
xor
mov
inc
mov
dec
cmp
jns
mov
push
scas
push
out
sbb
insl
ficoml
jmp
xchg
pop
mov
mov
daa
int3
dec
jecxz
cmp
inc
cwtl
push
fisttps
push
pop
push
sub
shlb
fcomip
lock
das
mov
mov
mov
sbb
dec
push
lods
repz
addb
das
idivl
subl
push
popa
adc
dec
clc
rcll
pop
inc
jecxz
sbb
xchg
dec
popa
adc
and
sbbl
aad
aaa
jb
mov
pop
push
xor
push
sbb
dec
pop
push
push
xchg
pop
xchg
and
popf
out
sti
sbb
ret
mov
add
xchg
mov
push
and
xchg
jne
fbld
popa
dec
out
add
add
das
mov
adc
aam
mov
fsubl
cmp
mov
addr16
ds
or
and
push
lock
push
sbb
ret
hlt
push
or
mov
sti
in
xor
push
call
xor
dec
cmpsl
adc
push
sbb
dec
outsl
cmpsl
sub
jb
cmpl
inc
jnp
sbb
xor
sahf
mov
jb
fisubrl
push
int
cmp
push
bound
pop
movl
push
lcall
or
pop
cltd
lods
pop
sbb
dec
inc
test
movsl
mov
push
into
bound
mov
mov
push
cmp
dec
dec
cwtl
push
mov
flds
mov
jmp
push
xchg
push
fldenv
add
mov
cld
fbstp
mov
cmp
lcall
cmp
sarb
js
mov
xchg
jae
push
fs
dec
int3
and
sti
dec
std
sub
int3
enter
or
arpl
orb
in
xor
movsb
rorl
ffreep
je
cs
inc
ret
xor
sbb
loopne
ds
add
mov
fs
dec
pop
xchg
pop
and
lea
incb
out
or
sbb
mov
push
daa
push
pop
cmp
push
pop
jp
add
xchg
scas
aas
mov
int3
pop
aad
pushf
push
mov
adc
mov
mov
mov
rol
cmp
stos
push
aaa
in
xor
mov
inc
xchg
add
cmpb
jbe
out
xor
sub
jp
enter
xchg
ret
mov
mov
pop
push
xchg
xchg
push
sbb
orb
pop
mov
jns
test
sahf
cmc
pop
sbb
jne
mov
or
sbb
mov
push
and
xor
imul
xlat
inc
dec
jne
mov
movsl
scas
mov
ljmp
inc
test
lcall
xor
or
fldl
loopne
lcall
xchg
repz
cwtl
mov
cmp
rcrb
xor
out
sbb
lods
fbld
neg
pop
or
stc
xor
adc
push
ud0
mov
lock
and
inc
jnp
loopne
xchg
and
in
mov
adc
clc
neg
jnp
jp
pop
cs
jns
pop
aam
dec
adc
sbb
inc
in
jge
adc
mov
xor
pop
and
xchg
inc
mov
stos
adc
add
dec
in
sbb
scas
mov
inc
mov
xor
cmp
nop
enter
call
xchg
fsts
out
pop
adc
add
gs
popf
sub
or
in
push
sub
sub
mov
dec
mov
xor
fdivrl
sbb
xchg
sbb
scas
pop
loopne
repz
xor
insb
iret
ljmp
test
inc
cmpsl
jns
xchg
inc
daa
dec
sub
mov
or
or
das
xchg
xchg
in
bnd
or
mov
outsl
aaa
test
sar
mov
je
pop
popf
loop
jnp
mov
sbb
sti
lret
pop
lods
lock
jge
pop
js
inc
shll
lret
cld
test
nop
cmpsb
fsubr
fisubs
icebp
jno
jle
into
in
add
fisubrs
addb
sub
nop
cld
mov
inc
fdivrs
sti
dec
add
push
sbbb
xchg
fistl
or
mov
or
sub
jmp
out
pop
pop
pop
adc
lds
rclb
scas
shlb
push
add
popa
add
dec
rorb
pop
cli
pushf
push
xlat
popf
push
mov
xor
push
sbb
loop
popa
inc
mov
push
mov
lcall
shr
lock
stc
xchg
cld
test
mov
push
arpl
popl
sarb
jnp
push
sub
sub
ret
movb
repz
xor
cs
jae
leave
hlt
arpl
sub
push
push
pop
pushf
pusha
mov
xchg
pop
pop
int3
mov
sbb
jae
pop
push
cwtl
fs
sbb
aas
aad
stos
movsb
sub
xchg
rcrl
add
out
data16
fimuls
inc
mov
pop
or
pop
or
in
adc
pop
pop
add
loop
mov
js
js
js
and
idivl
mov
hlt
fadds
in
mov
insb
jmp
mov
cmp
sbb
mov
hlt
stc
movsb
aas
cmp
xor
lods
jle
inc
jnp
jmp
lea
xchg
les
stos
ljmp
inc
lds
pop
sti
xor
mov
je
aam
push
rcl
repnz
pop
imul
cltd
in
mov
mov
cmp
jl
mov
ret
xchg
and
push
pop
mov
sub
jecxz
mov
mov
xchg
lret
negb
stc
push
js
adc
cmp
pop
out
mov
iret
cmpsl
cmp
rcpps
push
mov
sub
push
jb
insb
fimull
xor
mov
fwait
xor
inc
into
stos
add
push
insl
cmp
cli
mov
adc
pop
stos
ljmp
pop
out
gs
jmp
std
dec
pop
jb
sbb
mov
mov
inc
pop
mov
lock
aad
inc
call
lods
les
ss
jp
pop
leave
and
stos
imul
cmp
rolb
jg
mov
aad
or
jae
movsb
xor
xlat
sub
sbb
and
scas
mov
push
push
add
adc
dec
inc
cmp
sbb
sub
lods
std
add
dec
das
adc
xchg
test
sbb
stc
adc
pop
ss
ficompl
inc
jae
loope
sbb
lds
test
in
and
inc
clc
and
lods
shrb
and
or
sti
fidivs
add
jge
pop
insb
test
and
xchg
fwait
sbb
xor
and
mov
mov
insb
xchg
bound
push
mov
decb
rorl
bnd
pop
lret
movsl
call
push
mov
fs
adc
sub
sti
or
icebp
ja
out
std
les
xor
xchg
cmp
mov
enter
aam
out
mov
add
adc
jge
push
stos
or
pop
aas
sti
mov
stos
std
test
lea
stc
cmpsl
pop
call
xchg
push
lds
iret
and
lahf
jecxz
shll
push
loope
orl
fiadds
mov
pop
divl
mov
and
push
je
inc
xchg
add
sub
xor
jnp
and
mov
sbb
mov
adc
rorl
xor
jl
test
movsb
pop
push
cmp
mov
mov
push
out
imul
xchg
or
ret
lcall
daa
shrb
adcl
lret
insl
sub
sbb
mov
clc
push
lods
scas
scas
ljmp
lea
outsb
in
js
lret
pop
pop
pop
mov
out
clc
cld
int3
pushf
and
int3
stc
jl
push
push
pop
and
std
lds
push
jbe
das
add
mov
sub
mov
mov
clc
leave
inc
pusha
in
mov
mov
fcoms
das
scas
mov
mov
shll
stos
and
stc
aas
loop
dec
arpl
scas
add
xchg
mov
fisttpl
aas
xchg
fadds
jbe
imul
pop
test
call
add
sub
add
and
fnsave
cmpsl
jnp
or
and
mov
fistl
push
std
jmp
mov
mov
outsl
mov
inc
clc
dec
inc
rol
sbb
pop
pop
mov
xor
je
rcrb
rol
cmp
loopne
mov
adc
xchg
fistl
mulb
xchg
lret
int3
jb
lret
loope
push
xchg
xor
daa
mov
mov
adc
lahf
or
hlt
xchg
jecxz
enter
jb
mov
mov
les
mov
call
repz
xor
imul
ret
dec
dec
in
in
xchg
mov
push
dec
dec
jl
pop
jl
push
mov
mov
push
insl
cltd
jmp
mov
fwait
lahf
cmpsb
fs
addr16
mov
and
lock
ja
mov
shll
lea
push
jg
out
push
jl
loopne
adc
xor
dec
test
popf
jge
in
cmp
orb
push
jae
das
loope
fldenv
inc
jl
and
mov
jnp
lret
xchg
inc
add
sbb
scas
in
outsb
sbb
sbb
add
imul
pop
add
sbbl
lcall
sbb
repz
dec
cmp
or
pop
rorb
repz
movsb
mov
adc
pop
stos
les
dec
iret
xor
xchg
mov
out
fistpll
pop
in
pop
mov
out
ss
in
adc
lahf
sub
in
and
add
pop
arpl
mov
jl
xchg
scas
jno
adc
ss
mov
test
popa
mov
insl
mov
cltd
jg
push
out
mull
mov
and
pop
test
jge
scas
lea
xor
push
adc
sub
adc
repnz
dec
lret
shrl
pop
xor
mov
pop
sub
xchg
out
es
jno
fdivr
add
lds
or
push
or
push
mov
cmp
scas
jmp
jnp
mov
xor
sub
mov
inc
adc
shl
sbb
pop
jns,pn
shll
movsb
jp
mov
and
stos
cltd
xchg
dec
lock
xchg
mov
nop
loop
and
icebp
and
pop
push
insl
push
and
in
ret
ja
xchg
pop
stos
xchg
pop
dec
pop
or
adc
sbb
sarb
jg
popa
pop
adc
sub
and
add
mov
pop
dec
jnp
cmp
cs
cli
pop
jb
mov
pop
inc
sub
and
cmp
pop
mov
push
dec
xor
push
frstor
xor
loopne
xor
sub
in
inc
test
fildll
out
in
jns
testl
push
arpl
imul
and
add
imul
add
sbb
xorl
dec
or
mov
ss
scas
xchg
aas
ret
inc
mov
cmpsl
xor
add
adc
xchg
sahf
pop
adc
sub
xor
fdivr
pop
xchg
hlt
xorl
xchg
push
imul
mov
xchg
push
mov
movsl
out
xchg
sarb
ja
lret
sbb
out
cmp
jmp
shll
jecxz
xchg
dec
in
inc
mov
shlb
in
adc
data16
xor
jns
add
loopne
imul
int
sub
leave
movsl
aad
popf
popa
pop
cmpsb
test
dec
call
jae
dec
mov
jnp
int
cmp
push
test
and
cmp
mov
mov
cwtl
daa
rcll
sbb
shrb
insb
jg
cltd
outsb
decb
pop
mov
and
out
xor
or
aad
subl
ljmp
adc
js
sub
xchg
cmp
repz
cmp
pop
add
fldenv
movsb
push
scas
and
xchg
aad
movsl
sbb
jp
inc
or
lea
xchg
inc
inc
mov
insl
loopne
dec
stc
dec
cmp
xchg
loopne
sub
jb
adc
lods
ja
std
jno
or
mov
xor
negl
pop
popa
ds
int
movsl
mov
fcompl
dec
leave
lahf
cli
lds
mov
push
mov
std
fnstenv
ret
je
lods
add
divl
adc
sub
jmp
scas
adc
hlt
inc
jo
in
clc
cmpsl
jge
loop
shl
dec
rorl
mov
mov
xor
mov
push
std
stc
jle
fcoml
repnz
ds
fwait
and
adc
push
outsw
test
repnz
andl
xchg
cmpsl
push
jecxz
sub
jae
mov
sbbl
icebp
push
adc
int3
mov
jecxz
gs
leave
fs
inc
jno
testb
into
pop
add
push
dec
push
es
jae
pushf
subb
icebp
cmp
and
and
ljmp
jmp
loope
sub
ret
andb
push
sub
mov
push
lock
mov
scas
add
jge
scas
or
add
cmpps
dec
loop
adcb
xlat
iret
call
lea
out
fstl
push
cmp
imul
sub
push
mov
mov
sub
call
mov
ss
js
int3
jae
fwait
sarl
ljmp
mov
jecxz
std
or
mov
bound
mov
mov
ret
xchg
and
xor
cs
xor
addl
lret
pop
jns
inc
sti
in
sbb
or
adc
add
pusha
loope
repnz
in
and
inc
dec
xor
out
push
inc
jbe
scas
out
or
fisubrl
stos
lods
push
aad
inc
mov
cmp
dec
ret
xor
fsubr
jg
xchg
loop
sahf
ss
xlat
jae
pop
les
cs
cmpsb
sub
push
out
jp
push
mov
mov
cmp
jnp
xchg
adcl
sub
dec
lahf
cmp
das
jne
pop
add
push
pop
fwait
sbb
std
push
pop
inc
xor
aam
add
jbe
rclb
js
push
jmp
rcll
loop
pop
in
mov
scas
popf
xlat
test
mov
repnz
cmpsl
lods
lret
or
rcll
movsb
daa
xchg
pop
cwtl
loope
sahf
repz
sub
pop
clc
jecxz
dec
jb
mov
or
rorb
sahf
stos
lock
inc
out
push
sti
xchg
push
push
adcl
pop
dec
xchg
pop
movsb
mov
mov
and
cmpsb
pop
pop
mov
ss
sarl
inc
pop
sub
mov
cltd
sti
fcmovne
push
jmp
mov
push
mov
aam
push
call
inc
gs
mov
out
movsl
sti
mov
leave
sbb
jbe
jo
cmc
xlat
fs
fucomp
std
jnp
imul
pop
xor
jmp
hlt
and
mov
inc
cmp
pop
mov
push
in
or
fmull
ror
call
repnz
mov
push
loope
loope
xchg
dec
sbb
jno
scas
lods
and
sub
xchg
mov
xchg
push
daa
scas
fmul
cmpsb
adc
inc
mov
ret
int
call
test
ret
aam
jnp
aam
mov
jae
in
mov
pop
mov
push
ret
jae
cwtl
decb
shll
mov
inc
inc
add
mov
cmp
mov
shlb
cmp
or
loopne
mov
pop
andl
dec
out
les
lahf
xorl
frstor
test
cmp
fisttps
xchg
out
sub
enter
or
orb
push
scas
sub
mov
aam
popl
mov
xor
movsb
fisttpll
cli
push
lret
xlat
ret
or
pop
dec
push
aam
mov
jle
adcl
inc
add
inc
push
mov
or
fs
jp
adc
das
orl
pop
mov
or
dec
scas
dec
mov
cltd
pop
in
aad
in
push
insb
jne
pop
push
mov
int3
mov
push
xchg
inc
mov
sti
xor
shlb
xchg
mov
hlt
jbe
pop
adc
in
or
cmpsb
mov
xchg
pop
jmp
int
in
push
dec
cmpl
pop
cltd
aad
mov
aas
push
pushf
cmpsl
shll
push
rorl
out
in
mov
in
dec
mov
out
outsb
test
jp
and
enter
aas
jbe
add
inc
dec
movl
mov
jmp
arpl
xor
das
clc
add
push
inc
jmp
repnz
xor
ds
xchg
fcomp
pusha
push
or
popf
jge
fimull
aaa
cmpsb
inc
push
and
hlt
push
shlb
mov
in
in
pop
mov
or
xor
ret
pop
popf
mov
notb
jns
data16
sub
pusha
ljmp
scas
ret
mov
into
xchg
ror
testb
syscall
cmp
aas
push
int
jne
mov
cmc
aas
sbb
add
loope
mov
divl
clc
adc
andl
mov
jno
mov
sbb
fcomi
jne
inc
pop
dec
rolb
mov
bnd
lea
or
or
cltd
int3
subl
sub
xchg
int3
imul
fisubrs
cmpsl
rcrl
cld
sbb
gs
imul
jmpw
push
pusha
cmp
lods
jns
jne
incb
int3
arpl
sub
sarb
sub
scas
add
sub
push
in
mov
js
mov
adc
jb
leave
mov
std
fwait
adc
add
js
into
shrb
es
gs
call
push
jne
jbe
dec
and
pushf
dec
pop
adc
sbb
popf
dec
out
pop
out
ret
lret
mov
pop
inc
aad
mov
sub
rolb
fwait
sbb
sarb
xchg
ds
mov
mov
or
jg
sahf
jecxz
pop
nop
add
jo
sarb
js
movsb
and
int
popf
or
sahf
inc
add
dec
imull
shr
stos
movsl
cwtl
rcll
imul
mov
xor
and
mov
push
inc
int
out
jae
cmpb
fnstsw
pushf
cs
xor
fbstp
rorb
je
jne
out
sbb
fs
push
fidivrl
inc
dec
or
call
outsb
mov
ret
sub
jle
fildll
and
inc
mov
jmp
ss
pop
inc
dec
and
xlat
jecxz
jl
mov
repz
push
je
lahf
mov
xchg
lods
pushf
sbb
in
ds
sub
add
leave
pop
test
xchg
cmp
int3
lret
std
push
lret
andl
outsl
and
mov
cmc
jmp
repnz
lcall
fmuls
pushf
sub
xchg
test
fsubrs
out
mov
inc
mov
mov
rorl
push
mov
mov
pop
jae
shl
lods
leave
push
sti
leave
cmpsb
cltd
pop
shlb
in
repz
xor
pop
jmp
mov
mov
pop
dec
or
mov
lea
out
jns
scas
mov
push
aas
bound
pop
imul
divb
push
testb
mov
mov
sub
xor
mov
repz
xor
xchg
and
pop
mov
jo
pop
stos
sub
cmp
xchg
push
lods
ret
sbb
add
mov
test
fwait
inc
repz
xor
cwtl
jns
fdivl
out
inc
mov
mov
pop
mov
into
idivl
aas
out
push
loop
sub
sub
pushf
js
jle
sub
and
inc
mov
jge
inc
sub
inc
pop
jge
out
push
lea
stos
loopne
outsb
lret
dec
inc
inc
jecxz
cmp
cmp
sbb
sti
mov
sub
sbb
pusha
cmp
inc
dec
in
adc
fldt
push
mov
sbb
repz
mov
push
and
add
fwait
jl
jb
fucomip
mov
xor
dec
aas
popf
pop
adc
cmp
lcall
pop
mov
insb
add
int3
into
xor
lea
mov
add
orl
ret
mov
push
push
mov
push
push
sahf
movsl
lea
mov
adc
aas
ds
cmp
xor
mov
aas
dec
dec
mov
xor
in
or
mov
xlat
or
pop
cltd
jg
mov
xchg
gs
mov
lret
lds
lods
sbb
mov
aas
sbb
mov
xor
mov
mov
fdivrl
inc
mov
jno
add
xor
adc
push
mov
outsl
imul
pushf
cld
xchg
loope
push
ds
cmc
loope
jns
dec
rorl
cmpsb
mov
inc
cmp
mov
aas
divl
or
adcb
aas
in
lods
aaa
push
int
push
dec
xchg
cmp
pop
aaa
int3
pop
fistl
shlb
ss
or
ficompl
aaa
jp
gs
push
jne
jp
jge
pop
cmpsb
pop
mov
enter
xor
dec
push
leave
icebp
rep
pusha
movl
sti
jge
jl
xor
lock
fcmove
mov
jne
jb
xchg
mov
loopne
ret
jo
sbb
mov
jg
aam
push
jl
push
jo
sbb
andl
add
ljmp
icebp
js
sbb
dec
xchg
inc
dec
xor
aad
xchg
les
ficomps
push
scas
dec
sahf
stc
in
les
daa
push
std
outsl
fisubl
pop
loop
iret
test
pop
sti
mov
fistl
inc
xchg
mov
mov
test
inc
out
sarl
or
enter
shlb
es
nop
fsubr
icebp
addr16
call
sbbb
in
ret
fmulp
repz
mov
and
pop
scas
fwait
cmp
pushf
movsl
mov
add
or
lods
xchg
aad
out
shr
repz
cmp
aas
negb
out
inc
mov
loop
int3
jp
jp
push
lret
cmp
push
and
mov
addb
shrl
pop
add
sbb
and
js
mov
jge
jl
shlb
xchg
mov
pop
dec
jp
mov
lods
cwtl
lods
mov
inc
push
and
fscale
add
or
loop
ja
int
add
mov
mov
es
data16
mov
out
test
repz
xchg
jmp
shlb
add
xchg
mov
adc
xchg
add
mov
add
divl
loope
sub
cmpsb
cli
mov
lahf
ret
push
jbe
and
mov
inc
clc
inc
loopne
lret
outsl
je
sbb
outsb
out
sbb
subl
inc
mov
lea
inc
imulb
cld
leave
mov
dec
push
xchg
xor
jmp
stos
add
in
mov
and
je
insb
fsubrs
sub
rclb
xchg
call
loopne
xchg
sbb
ja
fbstp
stc
aad
dec
test
sub
push
or
xchg
cmp
push
cmpsl
mov
insb
cmpsb
pop
xchg
mov
adc
es
imul
stos
push
jl
jb
mov
iret
sbb
ret
xchg
jo
sbb
push
adc
or
cld
and
pushl
fs
sarl
int
aad
sahf
pop
jnp
testb
pop
movups
in
adc
insl
push
iret
add
push
scas
xchg
int
mov
outsb
test
mov
pop
mov
rcr
jle
fs
xor
add
leave
fstpl
popf
cmpsb
cmp
icebp
loope
pop
ss
lock
add
inc
dec
mov
rclb
fadd
jecxz
cltd
out
mov
jmp
pop
mov
inc
inc
repz
mov
js
cmpsb
cmp
jle
adc
cmp
in
pop
xor
inc
std
popf
and
adc
and
mov
add
popf
loop
outsl
popf
mov
mov
bnd
repnz
xchg
jl
xchg
adc
mov
add
fnstcw
push
jp
xor
push
out
sub
fdivrs
jl
push
cmp
in
add
rol
lock
iret
sbb
xorb
inc
leave
mov
movsl
push
dec
cmpsb
or
mov
xor
push
sub
sbb
sub
mov
inc
cmp
xchg
xchg
das
nopl
adc
push
js
sub
add
cld
aam
sub
sub
jmp
mov
addb
cmp
mov
jg
mov
cmpsl
sub
addr16
sbb
cmpsl
dec
movsb
xchg
push
sub
into
add
adc
push
pop
stos
les
cli
sbb
cmpsl
scas
lret
insb
jmp
cmp
lods
push
sub
pushf
pop
fldt
rcll
pop
icebp
and
ja
ret
imul
xor
xchg
add
mov
cmp
cmpb
mov
mov
add
mov
orl
cmc
mov
inc
jmp
mov
in
sbb
xor
jp
lahf
dec
lods
outsl
insb
sbb
icebp
or
mov
insb
or
aad
nop
and
mov
popa
mov
or
push
ret
je
mov
icebp
lcall
jge
les
mov
jb
ret
fwait
jle
xchg
ret
push
mov
xor
inc
jno
das
xor
dec
testl
js
inc
scas
inc
fstps
popa
int3
icebp
xchg
lock
icebp
icebp
sbb
fwait
jno
lret
into
push
lret
dec
aad
adc
cmpsl
xor
cmp
pop
jnp
lods
mov
insl
lret
daa
inc
lock
xchg
addr16
pop
addr16
add
dec
adc
jmp
stos
pop
data16
pop
adc
int
cmc
cmp
mov
bnd
sbb
addr16
push
jl
out
and
fisubs
mov
pushf
pusha
push
pop
mov
movsl
loopne
mov
xor
push
js
data16
dec
inc
js
fsubr
mov
add
sbb
mov
iret
mov
int
pusha
in
jge
cmpl
insb
cmp
stos
lods
cmp
mov
fwait
add
rcr
xchg
ja
js
popf
cmpsl
insb
jl
adcb
xor
outsl
iret
push
sbb
fstl
mov
and
mov
outsb
xor
sub
aas
movl
sub
ja
dec
fildl
inc
jb
orl
hlt
movsl
rolb
enter
test
ret
sub
jmp
push
mov
xlat
xchg
scas
or
lock
roll
addr16
sbb
fadd
std
mov
jnp
js
mov
loop
push
inc
mov
inc
sbb
mov
movsb
pop
test
out
mov
stos
cmp
push
fdivrl
cltd
xchg
xlat
or
push
jle
pushf
jae
jp
or
cmpsb
pop
icebp
jecxz
jne
adc
mov
adc
fprem
das
pop
lds
hlt
iret
fldcw
mov
cmpsb
fmuls
insb
shrl
lahf
xor
cltd
loop
mov
jb
iret
sub
loope
js
jae
cltd
cwtl
test
daa
or
or
lods
mov
and
mov
mov
and
ds
ret
jo
repnz
and
outsb
push
xor
xor
in
inc
aas
push
ret
jp
mov
push
iret
mov
nop
cmp
lret
dec
sbb
mov
fldenv
lock
aad
jae
add
sti
or
movl
ss
mov
pop
andl
cmp
test
adc
popf
mov
xchg
jg
adc
mov
jnp
lret
mov
rcr
imull
int
mov
push
adc
dec
jge
loope
pop
les
in
sub
push
outsl
push
mov
test
nop
xor
sub
lea
pop
xchg
movsb
pop
lret
fs
xchg
lods
inc
popl
dec
and
insb
inc
cwtl
xchg
in
xchg
jne
loopne
fdivrs
aas
fcmovb
stc
filds
xor
adcb
or
arpl
popf
push
push
sbb
iret
arpl
pushf
jb
std
push
stos
sbb
xchg
mov
test
xchg
mov
sbb
pop
push
movsl
shll
or
leave
mov
mov
jns
sbb
jg
xchg
mov
inc
outsb
pop
into
mov
repnz
or
sahf
sahf
mov
clc
sbbb
movsl
jb
jno
push
mov
int3
fsubrs
lods
adc
cli
test
das
stos
loopne
je
hlt
js
xchg
xchg
popf
xor
jb
out
inc
cmp
into
insl
xchg
rol
add
cmpsb
dec
iret
ret
popf
push
in
push
dec
xor
outsl
call
xchg
dec
lods
cli
lcall
lea
sbb
sahf
pop
aad
ljmp
pushf
adc
mov
int
rcl
fiaddl
data16
nop
das
jg
test
push
adc
and
shr
and
mov
gs
mov
int3
popa
es
orl
cld
mov
adc
rcrb
sub
outsb
shrl
lock
inc
jb
out
cmpsb
mulps
cmp
lret
sbb
pop
iret
fnstenv
xor
fidivs
add
sbb
mov
xchg
xor
pop
inc
fcmovnb
stos
cmc
icebp
xchg
cwtl
mov
inc
ds
repnz
push
shlb
rol
loopne
mov
jns
pop
subb
stos
or
pop
repz
stc
stos
popf
aam
andl
leave
xchg
pop
std
or
mov
xchg
mov
jmp
mov
arpl
lret
mov
mov
jg
jge
xchg
jle
fnstsw
shlb
faddl
jle
sar
fcoms
push
adc
mov
push
dec
insb
add
aas
push
push
sbb
test
pop
enter
out
iret
lahf
xor
mov
imul
test
nop
int
sub
repz
repz
xlat
jp
or
push
ret
adc
mov
sub
mov
nop
inc
xchg
or
or
lds
and
push
add
fsubrl
test
xchg
add
stos
loop
jae
int
fistps
xchg
fcoms
xor
imulb
ljmp
push
mov
push
loope
mov
fs
imul
js
jmp
loopne
ss
push
add
xchg
dec
pop
jecxz
push
mov
mov
enter
sbb
lea
mov
dec
aas
aam
imul
mov
js
pop
jae
std
xchg
cmp
out
out
out
outsb
inc
push
pop
jg
xor
fs
or
insl
outsb
cmpsl
sub
adc
adc
mov
popl
push
mov
cmpsb
cmc
pop
cwtl
inc
cs
adc
mov
cmp
dec
sbb
push
outsl
ret
jge
movsb
int3
xor
jnp
mov
or
test
insl
stc
mov
fldcw
ret
popf
inc
pop
jnp
or
stos
fisttps
sub
lock
adc
mov
lods
adc
xchg
ret
push
roll
xchg
sbb
xchg
out
inc
mov
mov
loope
xor
out
inc
mov
jae
add
cmp
in
in
mov
das
scas
lcall
mov
add
mov
mov
inc
arpl
loop
sbb
jbe
iret
sbb
adc
xor
mov
pop
lret
iret
pop
cmpsl
cmp
insb
push
test
pop
or
adc
pop
and
mov
out
cmpsl
mov
mov
fisubrs
dec
mov
push
aad
cmpsb
dec
lret
mov
lret
adc
push
test
sbb
gs
enter
jmp
adc
lret
dec
rcll
ja
cwtl
call
jl
repnz
incb
sub
ret
pop
ja
pop
imul
lret
fmuls
std
arpl
loope
dec
mov
outsb
in
dec
mov
dec
jmp
lret
dec
cltd
pop
push
mov
push
mov
dec
loopne
gs
adc
adc
in
insl
sbb
add
fs
fbld
pop
dec
push
jae
pop
clc
pop
subb
sti
and
fs
mov
ljmp
mov
sahf
loopne
add
cltd
push
stc
inc
rcll
andb
fcmovne
dec
add
mov
fwait
cmp
aad
cwtl
mov
shlb
mov
outsl
mov
or
aas
dec
in
xchg
mov
fcomip
mov
shl
xor
push
sub
rorb
push
aad
loop
xchg
das
cli
dec
adc
jnp
push
adc
js
rcr
xor
lods
mov
lods
lret
pop
push
cli
nop
clc
sub
or
and
aaa
add
inc
outsl
add
mov
lea
pushf
dec
push
repnz
sub
xchg
or
inc
mov
lock
dec
mov
out
outsl
test
int3
and
sub
imul
jp
jp
xor
adc
jb
dec
xlat
jnp
ja
jo
dec
into
cmp
andps
cld
add
xchg
cltd
sub
aas
or
inc
cld
rolb
cmp
lea
repz
mov
mov
add
popf
xchg
cmpsb
vunpcklps
push
dec
push
push
movsl
cli
out
mov
mov
adc
adc
xchg
mov
mov
sub
lea
jg
push
clc
dec
int3
je
gs
sbb
mov
in
cmpl
add
repnz
loopne
adc
test
xchg
and
scas
aam
jp
leave
es
or
popf
cltd
add
sbb
mov
das
addr16
sub
scas
push
jp
imul
enter
jae
push
xor
dec
cmpsl
push
cs
cld
xor
mov
xor
aaa
adc
les
test
push
insb
inc
inc
cmc
sbb
imull
fisubs
loop
sub
pop
shrb
je
adcl
push
sbb
cmp
loop
cs
mov
out
call
rorl
les
adc
gs
cltd
jmp
fwait
jns
jl
decb
xlat
nop
xchg
cmp
inc
xchg
nop
jnp
mov
nop
mov
icebp
jle
fs
lock
add
test
pop
cld
mov
cmc
lret
sbb
daa
bound
aaa
fidivs
loope
pushf
stos
imul
inc
sub
add
mov
sbb
stos
xchg
mov
inc
sbbb
jl
mov
or
add
negl
jb
mov
aas
jne
xchg
lods
sub
aas
push
xchg
mov
aaa
test
sub
dec
ja
fnstcw
dec
push
jbe
dec
push
shl
pop
xchg
jmp
pushf
add
mov
imul
mov
mov
xchg
insb
add
jae
jno
fisttpll
xchg
notb
jne
dec
push
out
adc
sahf
cwtl
lea
mov
fistps
push
test
outsl
inc
cmp
xor
leave
xchg
pop
ficomps
add
xor
cltd
xchg
repnz
pop
xchg
es
mov
les
jmp
push
push
sbb
adc
out
mov
fidivl
hlt
mov
fwait
bound
int
negl
clc
xchg
sbb
cli
movl
xchg
adc
je
push
stos
scas
jo
mov
mov
mov
or
mov
fstps
lds
pop
mov
iret
shlb
ss
fnstsw
aam
jo
decl
pop
inc
aad
outsb
ds
inc
mov
and
add
xor
shll
leave
cmc
push
push
push
ret
jns
add
push
es
int
clc
das
cwtl
les
insb
cmpsb
sbb
in
fstpl
mov
adc
or
add
call
inc
out
jbe
xor
adc
js
int3
cltd
and
clc
sbb
pop
mov
int3
xchg
scas
stos
jle
mov
imull
lahf
jle
inc
pop
xchg
frstor
push
mov
es
shr
jbe
lahf
loope
inc
lods
stc
dec
cmp
and
jo
in
xor
pop
mov
xchg
xchg
test
sbb
push
outsb
nop
sub
inc
sahf
mov
add
ror
cmp
cmp
mov
mov
inc
sbb
rorb
cli
or
cmp
rol
daa
jle
xor
fstl
sti
cs
bound
rclb
cmpb
and
stc
xchg
mov
and
sub
dec
jne
aas
lcall
and
repz
lcall
movsb
es
out
mov
cwtl
sub
push
into
jp
rorb
aaa
outsl
inc
pop
insb
push
lea
and
jp
mov
mov
inc
movsb
and
ljmp
testl
fs
dec
dec
sbb
into
push
fnstcw
outsb
stos
dec
stos
inc
xchg
jge
iret
cmp
out
push
or
or
fldt
bound
or
adc
ret
push
into
test
out
lock
fistpll
idiv
ja
dec
lods
shr
mov
sub
sub
aaa
fwait
inc
int3
add
lret
stos
sahf
mov
cmpsb
movsl
in
dec
les
outsb
and
add
xchg
pop
mov
and
pop
pmuludq
mov
mov
inc
mov
push
fisubl
jne
decb
add
mov
pusha
sbb
and
mov
jnp
ret
push
adc
andb
cmpb
jns
mov
xor
inc
and
jo
sbb
adc
ret
sbb
xchg
mov
jg
ljmp
dec
call
mov
push
dec
lods
or
jo
mov
sub
jecxz
cmc
stc
adc
mov
pop
add
fisubrs
mov
sub
sbb
jbe
imul
xchg
sti
ds
sub
bound
jnp
lods
pop
mov
and
pop
aam
and
aas
pop
push
cmp
xor
mov
mov
add
rclb
or
ss
jnp
imulb
lock
xor
mov
or
adc
iret
pushf
fsubl
sbb
or
xor
add
jg
leave
aaa
jae
ficomps
out
fs
mov
dec
loopne
out
jb
xor
sub
mov
sahf
jnp
sbb
data16
pop
xchg
lret
add
insl
jecxz
xor
mov
pop
daa
or
lcall
out
inc
sub
sbb
mov
jmp
or
dec
loop
mov
out
dec
enter
adc
sub
jne
jbe
add
mov
push
jcxz
push
les
adc
ss
pusha
add
rcrb
stc
lret
cld
lods
mulb
mov
xor
sti
mov
sbb
lahf
jnp
mov
cmp
lret
inc
test
rcrl
aad
jmp
arpl
xor
hlt
in
inc
lahf
out
adc
les
rol
push
push
sbb
insl
or
mov
lds
mov
cmp
jne
test
xor
rcll
jle
aad
xchg
xchg
mov
lahf
jns
hlt
ja
push
arpl
adc
pop
ficoms
pop
rcrl
loop
test
sub
jo
mov
mov
and
jmp
andb
loopne
jmp
push
push
ds
xchg
inc
clc
sub
fucomp
enter
xchg
adc
popf
lock
push
fnstsw
mov
and
dec
popa
xor
jmp
cmp
mov
cmp
in
and
divl
aad
pushf
xor
enter
jmp
sbb
xor
mov
inc
sub
and
add
sbb
je
pushf
imul
cmp
or
ret
inc
and
jo
xchg
sub
sahf
cmpsb
out
xor
fs
dec
sbb
dec
negb
push
insb
mov
fs
and
insl
ss
call
xor
cli
lock
inc
cmpsl
pop
cwtl
scas
aam
dec
inc
push
pop
cmp
ret
enter
ja
aaa
push
xor
push
shrl
pop
cmp
pop
mov
xlat
or
mov
mov
iret
shll
jecxz
fstp
fcompl
insl
cmp
loope
and
sub
or
add
test
push
jg
and
add
mov
xor
into
imul
sbb
xor
pop
sar
or
mov
lods
mov
gs
hlt
ret
gs
fucomp
dec
fbstp
mov
dec
mov
mov
pop
jae
jg
jne
pop
std
push
andl
cli
push
push
add
xor
cmp
adc
adc
mov
mov
pushf
cmpsl
loope
dec
scas
inc
js
inc
mov
sarb
sbb
add
pop
or
es
mov
daa
and
push
loopne
sub
shlb
incl
xchg
shr
jno
ljmp
pop
pop
out
mov
inc
mov
pop
and
lret
push
pop
pusha
dec
or
mov
test
stos
pop
movsl
pop
adc
int
ss
test
shlb
lcall
js
hlt
jne
testl
outsl
addl
jg
xchg
loopne
jp
aas
sub
repz
cmpb
mov
mov
push
adc
fstpl
adcb
jl
xchg
popa
insl
adcb
outsb
and
loope
mov
dec
test
dec
mov
jne
lea
and
ds
stos
fsts
mov
push
mull
dec
test
pop
dec
pop
rcr
movd
dec
mov
subb
inc
push
hlt
cld
pop
daa
cmp
sbbb
xchg
mov
insl
xchg
sub
in
sbb
mov
push
fbld
test
mov
out
in
dec
jo
pop
imul
push
push
pop
das
vmovhpd
stos
dec
adc
add
inc
mov
or
jl
aas
mov
mov
sub
out
aad
mov
inc
and
mov
jge
push
hlt
xor
loopne
sub
mov
xchg
lea
and
jnp
xchg
std
cmp
andb
xchg
in
insb
sahf
repnz
and
or
arpl
divb
inc
hlt
cmpb
jo
loopne
aas
and
testb
lret
xchg
cmp
push
mov
sbb
mov
fmuls
outsl
int3
jbe
popa
xor
cmpsl
push
jg
inc
dec
cmpsl
sub
pushf
bound
mov
inc
rcll
imul
mov
popf
push
mov
movl
sbbb
push
adc
cwtl
push
xchg
outsl
lods
cmp
pop
pop
push
data16
aaa
cmp
dec
or
and
pushf
mov
clc
daa
outsb
jb
scas
mov
bound
das
aam
xor
mov
mov
push
mov
pop
dec
or
jp
in
stc
mov
jo
int3
aam
sub
mov
cmp
incl
xorl
inc
lahf
js
out
scas
and
add
sub
sbb
xor
lods
jle
cmp
mov
ret
jp
call
pop
rorb
xor
dec
loop
mov
pop
cmpsb
pop
sahf
jne
add
pop
stos
jl
jbe
lret
mov
dec
lock
fsubrs
fs
dec
dec
add
aaa
imul
nop
pop
mov
call
mov
das
push
daa
inc
cmp
fstp
lahf
xchg
lret
loope
nop
xchg
rorb
outsb
mov
scas
or
pop
mul
ret
push
xor
push
mov
pop
lock
adc
loopne
xchg
mov
stos
or
or
repz
es
dec
and
xchg
lcall
lds
or
dec
adc
pop
fcoml
add
in
scas
outsb
fildll
out
adc
sbb
aam
cld
adc
push
bound
jns
fdivrs
or
and
cli
pop
shlb
and
ret
or
inc
jl
fcmovnbe
push
mov
pop
icebp
aad
xlat
aas
sarb
jecxz
in
add
repz
test
dec
inc
jno
das
xchg
dec
pop
aas
test
test
aas
lea
pop
mov
inc
outsl
or
mov
rcr
mov
mov
push
xchg
dec
mov
test
lret
mov
rcrb
fistpll
pushf
mov
hlt
arpl
sti
outsl
mov
notl
sub
jae
lahf
or
jo
loop
test
hlt
mov
mov
mov
mov
push
and
clc
pop
or
sahf
imul
push
inc
cmp
incb
pop
inc
cmp
loopne
mov
fidivrs
in
notb
mov
and
cmpsl
pop
es
jae
lcall
mov
sbb
rorl
subl
pop
pop
sbb
mov
sbb
call
jae
or
xchg
test
in
cwtl
sbb
mov
adc
add
imul
cmp
and
test
mov
mov
int
pop
push
xchg
and
cld
pop
adc
pop
push
jmp
inc
rcrb
pop
test
movsb
inc
sahf
pop
inc
push
or
loop
test
mov
lods
std
or
out
xchg
jp
push
jnp
sbb
push
mov
push
cmpsl
push
cmp
dec
cmp
xchg
fisubl
mov
sbb
jg
ret
jbe
nop
cli
jns
xchg
pop
ret
lret
ss
cmpsl
mov
pop
sub
xchg
jnp
dec
cmpsb
ret
jmp
push
push
mov
sub
popf
push
or
fsubr
ja
xchg
jno
pusha
sti
loop
inc
insl
mov
imul
fcompl
inc
gs
and
and
ss
mov
jp
cld
inc
adc
pop
scas
jo
xchg
jl
mov
pop
xchg
insb
jne
mov
mov
shrl
inc
and
scas
push
or
xchg
add
jno
xor
aaa
das
inc
mov
lea
and
das
xor
adc
dec
jecxz
std
inc
mov
popa
in
arpl
cmpsb
sub
js
outsl
loop
jecxz
shl
cmp
jle
adc
push
sbb
xchg
mov
cmpsb
add
sub
cltd
adc
ret
sbb
arpl
and
inc
add
sti
jg
mov
jnp
mov
add
std
jmp
sarl
cmp
daa
sahf
int3
add
or
in
jg
mov
mov
push
cmp
jp
adc
sbb
mov
repnz
and
daa
adc
fistl
xchg
cmp
lods
lods
sub
int
mov
and
in
inc
data16
sbb
or
sbb
pop
fimuls
xchg
jns
cmpsb
sub
adc
in
cmpl
popa
inc
dec
in
outsl
sbb
mov
and
std
adc
mov
jns
cmp
hlt
rclb
orb
push
shlb
outsb
lock
inc
inc
mov
clc
inc
shrb
mul
mov
gs
ss
adc
xor
ja
jl
call
adc
lock
cmp
jmp
movb
or
mov
xchg
xor
pop
and
mov
or
fsubp
xor
ds
xchg
xchg
jmp
jb
jae
pop
stc
cmp
les
cs
imul
fsubp
xor
popf
jg
sti
rcrb
push
movsb
xchg
jo
decb
outsl
or
or
les
push
ds
pop
xor
idiv
push
jl
sub
lods
ret
int3
add
dec
fisubrs
icebp
rcr
or
imul
addr16
aas
cmc
sub
push
inc
xor
cmovb
cmpsb
rclb
cmc
jb
xchg
dec
popa
xor
outsl
scas
cmp
inc
jb
and
mov
mov
pop
jb
jl
pop
ret
and
dec
clc
adc
push
push
popa
mov
jo
add
sub
jae
lret
scas
xchg
push
mov
mov
outsl
mov
inc
xor
out
add
sti
stos
and
in
xchg
loop
into
cmc
sbb
fidivl
jbe
push
pop
dec
add
lea
js
inc
leave
sub
jne
or
fsubr
negb
insl
xchg
cld
into
pop
faddp
inc
mov
bound
xor
push
mov
in
pop
mov
jp
ret
mov
dec
jp
jl
fwait
ja
or
ret
gs
ss
dec
loope
pop
mov
lock
jnp
stc
push
push
or
pop
lahf
cmpsl
sarl
lcall
cs
xchg
pop
in
daa
mov
hlt
jecxz
roll
mov
movsl
lcall
jl
notl
lcall
in
sub
and
sbb
inc
pop
inc
mov
jle
push
dec
jnp
push
add
dec
add
outsl
dec
xor
mov
es
sbb
ljmp
jno
lahf
adc
daa
add
xor
or
int3
in
pop
movsl
mov
and
xchg
jnp
xchg
into
fildl
loope
inc
mov
loop
out
push
xchg
sub
push
clc
outsb
and
push
shll
push
or
adc
jp
cmc
xchg
or
or
inc
sti
std
shl
mov
cmp
push
popa
stos
sub
in
jecxz
icebp
pop
mov
jmp
xlat
dec
dec
push
xor
in
ret
pusha
sub
stos
cmc
dec
xchg
jae
imul
inc
test
clc
mov
pop
ljmp
sbb
out
push
ss
mov
mov
xor
fmull
push
cwtl
ret
ret
and
inc
or
cmpl
mov
mov
mov
test
and
add
and
xchg
mov
loop
clc
cld
adc
push
pop
push
mov
mov
pop
jae
out
stos
cld
and
fs
jns
and
and
int
add
and
adc
mov
cmc
stc
leave
pop
xchg
pop
or
loopne
lret
mov
roll
fistpl
pop
iret
dec
and
jno
adc
and
sbb
fld
movsl
mov
lahf
adc
arpl
arpl
scas
or
jge
sbb
or
fisubrs
inc
mov
and
fisttps
loop
mov
jo
push
xchg
les
mov
fcmovnu
xor
icebp
cltd
in
out
rorb
mov
push
jbe
data16
jb
js
sahf
mov
jle
push
das
inc
dec
ds
mov
cmp
inc
loopne
mov
roll
mov
add
mov
push
mov
xor
pop
push
sub
inc
fstpl
hlt
add
pusha
incb
shrl
data16
cmp
movsb
imul
pop
cmp
pop
ja
lds
cmp
and
lcall
jno
imul
mov
outsl
push
xchg
sbb
add
sbb
push
sub
test
hlt
iret
push
push
shll
sbb
insl
movswl
lret
insl
dec
fsubp
pop
sbb
lods
in
sbb
or
add
cld
adc
clc
je
push
loop
push
pushf
sbb
lret
mov
xchg
leave
push
mov
fs
dec
adc
mov
push
data16
aam
and
cmc
dec
fs
sahf
je
cmp
popa
cmp
or
push
inc
ja
sbb
test
adc
rcl
popa
notb
add
or
or
and
movsb
xor
into
lods
popf
call
mov
ret
movsb
pop
push
mov
shll
dec
sub
pop
imul
jl
hlt
mov
sub
dec
cld
inc
mov
stos
jle
sub
mov
inc
mov
sub
andb
mov
ss
test
test
jbe
ja
push
jg
xor
push
sub
lahf
cmp
sub
std
push
push
repnz
adc
movsb
imul
sub
xor
sub
add
cmp
inc
push
popa
sbb
lods
xchg
cmp
sub
mov
mov
fwait
fwait
xor
mov
pop
pop
subb
mov
cmp
xor
sbb
loopne
outsb
mov
mov
int
ljmp
testl
xor
rcr
dec
mov
enter
push
jmp
jo
jnp
mov
in
movsl
mov
shlb
lahf
adc
nop
fcomip
andb
enter
and
mov
stc
fadds
mov
ja
mov
adc
cmp
inc
gs
ss
push
bswap
cmpsb
jb
lret
lods
hlt
lret
mov
xlat
sub
pusha
push
int
xchg
movsb
cmpsb
sub
jge
sub
out
orl
mov
lock
jo
mov
lret
imul
inc
neg
xor
test
daa
ret
jne
int3
pop
aaa
lret
sub
pop
lret
sbb
sti
lods
fcompl
clc
push
push
sub
stos
ljmp
push
jnp
ds
sbb
sub
inc
sbb
push
push
and
mov
bound
push
cmp
leave
into
jle
ss
lods
pusha
and
aaa
stc
pop
xor
insb
xor
adc
les
mov
mov
sarb
addr16
xchg
lea
ficomps
jns
sub
add
xor
out
or
js
loope
outsb
dec
js
movsl
scas
mov
in
call
dec
fyl2xp1
test
lds
or
lods
xchg
adcl
or
icebp
cld
cmp
sbb
ss
adc
fwait
dec
sbb
loope
rcrl
in
xor
sarb
jae
and
inc
sbb
jge
xchg
and
pop
addr16
sbb
sub
pop
push
sbb
out
jns
mov
xor
aaa
fidivl
faddl
and
lods
lcall
or
mov
inc
sub
pop
mov
les
mov
test
shll
inc
ja
dec
fwait
jp
sub
ja
dec
int
xlat
or
in
les
inc
insl
jb
fnsave
aam
or
leave
in
add
jge
es
adc
imul
sbb
lock
mov
out
add
xchg
push
push
pop
and
imul
insb
ja
cltd
aaa
dec
adc
mov
inc
xchg
or
push
mov
scas
cmp
push
or
add
cmc
cmpsl
add
sub
xchg
scas
out
pop
shll
fmuls
jmp
push
into
pop
adc
fstpl
es
adc
inc
fisttpll
out
mov
sub
pop
cmpsl
dec
push
jg
sahf
mov
jae
xchg
scas
outsb
cld
out
push
jno
sarb
push
mov
pop
mov
sbb
in
cmp
imul
mov
push
mov
scas
out
insl
mov
je
call
jb
dec
mov
pop
outsb
out
lods
daa
pop
cltd
mov
pushf
mov
or
test
movsb
gs
adc
pop
xor
test
cwtl
test
fisubs
jae
add
lret
or
adc
or
fwait
out
lock
popa
push
data16
adc
movsl
xchg
ja
loope
push
xor
lods
cmpsb
in
loopne
ja
add
push
xchg
sub
add
test
xchg
push
jb
in
push
jno
mov
in
adc
pop
test
and
ret
cmpsl
std
stos
dec
mov
lea
add
cwtl
cmpsb
movsl
pushl
mov
inc
fcmovne
push
call
ficompl
inc
add
cwtl
ss
insb
out
out
adc
mov
mov
lret
loopne
cmp
jae
aas
test
inc
jae
subl
jl
xor
test
dec
mov
jae
or
shl
or
cld
fildl
mov
push
leave
inc
push
inc
push
aam
test
pop
std
xchg
mov
jle
xor
orb
add
loopne
and
mov
call
sbb
or
adc
fwait
test
push
xchg
sbb
xchg
iret
inc
imul
jg
pusha
je
movsl
sahf
in
lock
jge
ret
outsb
xor
dec
xchg
aas
add
nop
lret
push
jbe
mov
add
stos
stos
jno
sub
xor
incb
sbb
jb
xor
frndint
sbb
cmp
mov
cmp
and
clc
lock
ljmp
fstps
imul
dec
xchg
xchg
cmp
xor
xchg
bound
in
mov
mov
sbb
gs
lahf
sti
aas
cld
jmp
lea
repz
jbe
test
mov
addb
and
fcmovnu
nop
mov
cs
lods
cwtl
es
ret
dec
out
mov
dec
mov
add
or
andb
mov
mov
or
hlt
rcrl
pop
xor
lods
mov
jbe
test
je
mov
add
add
outsb
push
push
imul
scas
xchg
je
or
packuswb
jge
push
xor
test
clc
mov
clc
lret
mov
testb
sub
popa
dec
pusha
or
fistl
mov
add
fnstsw
mov
xor
pop
jo
cmp
stc
add
or
es
push
fisttps
xchg
or
out
sbb
cmpsl
shrl
jb
sub
imul
pop
mov
pop
mov
mov
imul
arpl
loopne
xor
lret
or
out
jmp
daa
and
mov
sahf
out
into
fidivs
lcall
adc
jnp
xor
popa
mov
xlat
cltd
dec
and
pop
scas
in
popl
std
out
imul
cs
aaa
jbe
push
adc
dec
dec
scas
and
push
fcmovne
test
movsb
dec
popa
sub
popf
add
test
adc
insl
cwtl
sub
mov
mov
adc
mov
mov
inc
imul
pop
int
push
xlat
jno
push
sub
jbe
shlb
pop
std
std
jae
xchg
pop
xchg
test
cmp
push
shlb
cmp
jb
mov
mov
in
jmp
arpl
arpl
jo
fisubl
cmp
cmp
jl
lods
inc
scas
aad
sub
cmpsb
pusha
mov
mov
imul
xlat
sbb
dec
fcmovnu
mov
cmpsb
dec
imul
dec
rclb
inc
and
cli
out
xor
shlb
testl
lea
adc
xchg
push
jmp
data16
add
mov
dec
adc
fdivr
ljmp
mov
pop
push
inc
adc
icebp
movsl
ret
out
sub
fcomp
insb
push
fsub
dec
sarb
push
les
ret
mov
sub
test
bound
mov
sbb
xlat
xchg
jl
adc
int3
xor
jnp
add
fsubrl
les
sub
xchg
xchg
fmull
adc
push
add
repnz
pop
out
push
or
add
xchg
mov
add
movsb
cmc
dec
xacquire
mov
adc
call
inc
mov
mov
pushf
jnp
and
in
clc
movsl
mov
movsl
xor
lds
or
mov
sub
addr16
sbb
sbb
ja
mov
mov
cld
jp
xor
stos
mov
or
ret
ret
data16
adc
pusha
hlt
fprem
jge
daa
outsl
adc
sub
lock
add
jbe
mov
mov
lods
sub
aad
adc
sahf
shlb
enter
jmp
adc
std
xor
xlat
mov
or
xchg
fadds
xchg
jne
idiv
mov
shrl
xor
ficoms
mov
push
mov
leave
mov
push
cmovg
into
sti
aad
ja
sub
pop
negl
mov
dec
push
or
lcall
sub
sub
out
xchg
insl
mov
and
in
fildl
sub
mov
add
loopne
gs
js
sub
add
fsubs
adc
pop
sub
mov
lods
test
add
push
dec
ja
push
push
mov
mov
dec
mov
imul
test
stos
pop
pop
jecxz
mov
push
movsb
cmc
enter
pop
xor
jmp
mov
insb
mov
or
ret
xchg
push
inc
jns
cmp
pop
shll
push
insl
xchg
loope
fadd
or
push
xlat
bound
cmpsl
jg
scas
pop
jb
add
sbb
in
rcrb
cmp
jne
sub
in
sub
cli
scas
shll
sbb
and
out
mov
cmpsl
test
aad
cmp
mov
mov
lds
pop
jl
or
addr16
push
negl
jl
dec
push
sub
int
fldt
pusha
cmp
mov
addr16
dec
cmp
push
jecxz
jmp
ss
cmpsb
pop
scas
sub
cs
hlt
idivb
fnstcw
sbb
or
mov
mulb
lret
and
outsb
xchg
insl
add
scas
push
push
xchg
adc
and
cmp
int3
cmpsl
mov
inc
rorb
repnz
andb
imul
fs
sbb
scas
data16
xchg
inc
dec
pop
scas
lahf
jnp
leave
jp
jns
ret
inc
push
xor
pop
add
insl
jmp
pop
lahf
cwtl
dec
es
test
add
xor
mov
fwait
int3
cmp
dec
pop
ds
xor
out
rcrl
rcl
mov
push
or
fs
enter
jbe
idiv
fs
mov
cld
dec
mov
push
je
data16
xchg
mov
imul
push
mov
push
adc
xor
sarb
leave
insb
jne
adc
int3
or
lods
jp
sahf
out
shrb
call
in
cmpsb
mov
inc
std
repnz
lea
jbe
jbe
cli
test
push
sbb
lahf
push
inc
push
mov
jge
aas
gs
xchg
incl
xor
sbbb
fisubl
cmpsl
jnp
sbb
xchg
and
push
adc
push
movsl
inc
ljmp
pop
enter
jl
mov
sarl
dec
mov
add
mov
push
sub
sub
cmp
lods
stos
scas
mov
xor
fisttpll
or
mov
and
cmpsb
orb
lock
inc
xchg
pop
hlt
out
mov
ja
mov
testb
adc
jle
test
inc
stos
call
fcmovne
or
mov
jnp
pushl
subl
pop
les
xor
sahf
and
inc
fdivr
mov
pusha
xor
lock
xor
push
enter
lds
fwait
pop
push
lret
push
icebp
outsl
push
sub
dec
iret
fildl
sub
int3
std
inc
add
in
leave
daa
push
sbb
cld
ret
imul
mov
and
dec
xchg
lock
nop
movsl
jns
pop
lret
mov
jmp
cs
cmp
jmp
test
mov
loop
mov
xor
add
jecxz
mov
ljmp
rcrl
mov
notb
inc
dec
sub
push
adc
and
dec
inc
xor
je
adc
jecxz
fwait
fs
fidivrl
sub
push
sbb
sbb
sub
mov
dec
aam
mov
xor
dec
and
mov
aad
dec
call
bound
in
push
iret
push
sub
and
leave
sahf
mov
add
xor
mov
stos
scas
femms
jno
js
add
gs
add
and
jo
and
sub
lds
xchg
movsl
gs
aas
data16
lahf
and
fcmovu
and
in
movsb
aad
xor
jnp
mov
xchg
adc
cmp
int3
push
aad
fldt
adc
or
rclb
mov
fwait
in
cltd
out
mov
xor
and
mov
mov
bound
fstps
cmpl
mov
cmp
icebp
aam
mov
cmc
pusha
ss
cmp
xchg
mov
cwtl
inc
cmpl
xchg
xchg
and
cld
aad
xor
add
faddl
push
fidivrl
and
dec
adc
mov
ja
jbe
dec
dec
pop
mov
movsb
sub
insl
mov
inc
add
repz
inc
filds
pop
dec
lret
push
popf
cmpl
dec
decb
ret
je
je
or
sahf
xchg
jl
cli
lret
lock
push
aad
and
and
popf
mov
adc
sub
dec
cli
jnp
cltd
lock
or
inc
jecxz
jp
scas
insl
mov
outsl
or
out
push
lret
iret
flds
movl
mov
cs
pop
sub
inc
movsb
jnp
sub
mov
mov
enter
bound
dec
ror
ret
or
aad
sbb
ds
repnz
enter
lock
lods
in
das
pop
mov
mov
aad
jo
xchg
orb
cmpsb
cmp
iret
and
add
cmp
mov
xchg
push
add
jp
mov
loopne
push
test
mov
inc
loopne
mov
cmp
adc
aad
xchg
fsts
dec
aaa
xchg
xchg
out
dec
dec
pop
push
sbb
jo
aam
adc
inc
jmp
jae
imul
cmp
cmp
xor
sub
dec
mov
test
dec
dec
dec
sbb
jb
adcl
push
decb
mov
cmp
dec
cltd
cmpsb
addl
repz
dec
lods
mov
int3
jno
add
lahf
gs
rorl
pop
stos
jns
mov
or
sub
sbb
lret
and
adc
inc
mov
jecxz
lods
push
jp
pop
jae
lods
leave
pop
cli
xchg
xchg
push
push
aas
xchg
jae
std
pop
or
arpl
sub
dec
adc
fdivs
ret
dec
mov
add
push
mov
imul
mov
jae
add
pop
lcall
mov
add
dec
push
mov
shll
dec
sbbl
jne
xchg
pusha
pop
lods
add
xor
and
in
add
sti
mov
push
enter
pop
pop
and
pusha
lock
out
cwtl
and
cli
loopne
movsl
cmp
bound
jle
dec
rcrb
mov
pop
jecxz
pop
push
jl
mov
pop
roll
lahf
pop
scas
jg
and
jo
data16
icebp
aad
mov
test
sbb
aad
addr16
inc
mov
cwtl
jge
jl
out
insl
test
xor
add
imul
out
mov
xchg
ret
mov
inc
nop
and
lea
mov
push
mov
roll
sarb
insb
jne
das
jp
sahf
ja
cmp
sti
mov
mov
aaa
icebp
es
xor
into
test
notl
and
jmp
movsb
scas
ljmp
sub
shrl
mov
int
sbb
sbb
mov
rcr
cmp
shlb
and
shrl
xor
stos
pop
mov
mov
dec
mov
push
and
pushf
mov
cmpb
std
inc
ds
mov
rorl
or
cmc
cmpsl
mov
dec
dec
sbb
cmpsl
pop
jecxz
jb
loope
xchg
dec
inc
xorb
xchg
pop
loopne
sub
xchg
and
lret
dec
cmovae
xor
aad
cli
int3
or
xor
xchg
icebp
sub
jecxz
add
shll
or
and
data16
js
pop
pop
imul
jle
push
jns
pusha
push
iret
aas
test
jb
scas
adcl
adc
pop
xchg
lods
inc
cmp
ljmp
es
cmpsl
cmp
movsb
mov
mov
jecxz
repz
lock
std
push
movsb
in
in
xchg
mov
add
into
into
inc
mov
mov
popf
imul
rcl
and
insb
and
ljmp
dec
lods
icebp
scas
orb
out
scas
outsb
lret
int3
xchg
or
lret
dec
and
in
cwtl
sub
fucomp
mov
and
lcall
stos
lds
shll
loope
sub
rep
mov
inc
insl
mov
cld
pop
arpl
jbe
fs
into
inc
xchg
pop
push
adc
jo
or
nop
pusha
subb
cmpsb
adc
outsb
jb
mov
push
jnp
xchg
repnz
gs
inc
or
test
mov
fwait
mov
sbb
fcom
hlt
ret
xor
leave
fcmovb
jno
enter
jae
lret
add
arpl
and
or
nop
ljmp
inc
popf
into
jnp
leave
nop
shr
addr16
push
pop
add
inc
xor
je
je
cmp
jg
mov
mov
inc
daa
mov
es
inc
sub
cwtl
xchg
inc
inc
pusha
and
cmc
imul
jae
lods
je
cwtl
mov
pop
stos
insl
sbb
adc
xor
inc
or
mov
add
sbb
add
addr16
xchg
dec
mov
imul
cmpsb
loopne
sub
pop
cmp
and
mov
sbb
sbb
mov
xchg
mov
jmp
hlt
cmc
pushfw
aas
xorl
mov
out
insl
adc
stc
roll
or
cmc
dec
fisubrs
jb
mov
inc
mov
imul
cmp
fs
shll
mov
jg
imul
cmp
fdivrl
and
lret
sub
cmpsl
mov
loop
out
imul
jo
pop
shr
out
adc
dec
fdivrs
push
fdiv
repnz
pop
sarb
repnz
sub
fmull
int
mov
cmp
xchg
movsl
loope
push
xor
and
hlt
rclb
inc
out
adc
cs
movsb
repz
mov
add
lret
lahf
das
xor
mov
push
inc
das
and
cmp
iret
jge
movsb
loope
xor
mov
sub
jge
scas
adc
lcall
cmp
fadds
out
mov
addb
mov
cwtl
push
out
js
and
sbb
sub
in
fadd
jmp
mov
or
cmp
movsb
mulb
shrb
xlat
or
popa
mov
bound
je
test
outsl
dec
adc
dec
shll
aas
mov
add
xor
das
ds
xorl
repnz
or
repnz
inc
sub
mov
lcall
cmc
lahf
outsb
ljmp
rorb
mov
daa
pop
push
push
inc
inc
sub
out
pop
jp
cld
sbb
testl
rclb
lret
xchg
cmp
add
gs
mul
cmp
sub
loop
call
or
jp
cld
scas
push
and
adc
scas
inc
js
out
mov
out
push
loopne,pn
sbb
mov
out
and
adc
stos
pop
pop
fwait
adc
fwait
in
enter
js
pop
and
pop
lock
sub
jb
aaa
sbb
or
push
push
inc
xor
sub
scas
cmp
dec
inc
and
mov
pop
xchg
mov
fisttpll
xchg
sub
mov
sarl
aam
clc
repz
push
inc
iret
jp
dec
dec
jo
mov
inc
notl
cmp
jle
mov
je
cmpsb
or
xor
dec
cmp
or
jns
xchg
into
es
xlat
or
mov
mov
cmpsl
mov
in
pop
pop
stc
push
jmp
cmp
lods
inc
push
in
push
jl
jb
inc
ljmp
leave
xlat
lea
or
xor
cmpsl
ds
cwtl
iret
xor
jl
mov
in
or
add
inc
nop
repz
add
insb
jp
jmp
push
out
lahf
movb
inc
jg
add
sbb
or
jmp
repnz
cs
shlb
scas
mov
mov
jae
xorl
lret
fisubrl
sbb
pop
sub
and
or
push
in
adc
push
pushl
lret
sub
ss
inc
and
fildl
std
pop
cmc
call
cmpsl
fs
push
push
cmpsb
sbb
fsub
dec
shrb
stos
cli
adc
mov
dec
js
pop
out
dec
out
xor
cmpsl
jp
mov
jbe
sbb
mov
push
popf
lret
pop
adc
hlt
cmpsb
gs
adcl
movsl
subb
shlb
shrl
jge
jmp
arpl
imul
out
mov
cmp
inc
icebp
inc
loope
ja
xor
sbb
jle
xchg
xchg
push
fistl
insl
imul
dec
dec
out
inc
std
push
stos
test
sbb
cmpsb
push
pop
and
and
xchg
dec
dec
push
mov
adc
and
bnd
sarl
in
cld
or
pop
mov
pop
mov
test
int
dec
mov
cmp
cmp
cli
inc
int
sub
sbb
pop
mov
ja
dec
lock
push
cmp
mov
xchg
test
ljmp
loope
push
call
test
inc
nop
pop
dec
into
outsl
sub
mov
stos
jge
popa
cmp
out
mov
insl
test
repnz
adc
aam
xor
push
fldt
sbb
sahf
iret
push
loope
and
into
mov
pop
and
outsl
push
into
testl
jae
dec
ja
adc
lds
dec
jbe
or
add
mov
add
mov
pop
xchg
sbb
pusha
dec
out
mov
adcb
mov
fstl
sub
mov
outsl
add
push
mov
xchg
out
in
pop
pop
cmpsb
bound
mov
aad
adc
add
or
cmpsl
or
movsl
push
pop
outsl
leave
dec
push
xlat
lds
hlt
or
ss
sbb
add
nop
xor
pop
mov
sbb
jecxz
fadds
cmp
test
jnp
xor
lret
loopne
push
pop
inc
mov
mov
test
lea
mov
into
xor
mov
adc
ret
mov
mov
xor
xchg
jg
test
stos
sbb
pop
mov
je
mov
gs
sub
dec
lret
mov
or
mov
in
sub
jnp
dec
mov
cmp
loopne
xor
sub
cmp
jno
cmp
mov
jb
sub
cmc
repnz
popa
mov
or
jp
adc
nop
imul
in
notb
cmpsb
xchg
into
ljmp
cmc
inc
dec
cmp
out
enter
xchg
rorl
mov
mov
or
jo
adc
adc
jp
and
mov
dec
dec
jge,pn
out
push
pop
mov
push
jle
adc
dec
lods
in
pop
call
test
fwait
popa
dec
xchg
hlt
dec
rorb
push
nop
movsb
or
dec
sbb
arpl
pop
repz
insl
jae
cmpl
inc
enter
out
push
push
insb
mov
fwait
inc
jne
inc
dec
outsl
shrl
fucom
cli
or
lret
mov
test
xor
jbe
in
sbb
inc
jnp
call
addr16
stos
sub
and
push
imul
test
shlb
jmp
call
and
imul
dec
sub
xchg
xor
xchg
je
mov
ja
ja
jecxz
fnstcw
pop
ret
rorl
inc
add
je
inc
sbb
and
movsl
mov
inc
rcr
movsl
aas
push
add
inc
in
stos
mov
mov
dec
daa
mov
in
mov
add
cmp
out
inc
sbb
aaa
fcomps
les
lcall
sbb
ds
xchg
in
out
addr16
pop
add
neg
xchg
repnz
cmpsb
loope
mov
jns
mov
jo
sub
fsubp
add
push
nop
inc
movsb
mov
mull
aad
imul
cmpsl
stc
pop
pop
mov
or
xchg
add
shrb
int3
popa
push
sub
adc
rorb
cmpsl
pop
iret
push
push
or
dec
and
push
enter
mov
enter
pop
nop
push
or
sti
push
mov
das
std
dec
arpl
mov
xor
jmp
stos
pop
xorl
pop
sahf
mov
xor
inc
cmpl
repnz
addl
loop
mov
test
jmp
push
sub
jnp
pop
mov
into
add
xor
pop
pushl
call
ljmp
adc
fwait
pop
pushf
and
clc
fsubrl
into
subb
popa
lahf
adc
mov
inc
xor
movsl
rcrl
daa
push
cmpsb
mov
jle
sbb
out
cmc
cli
lahf
and
repz
jle
and
ficompl
std
fstpl
push
ret
xchg
jnp
jbe
sub
cmp
adc
xor
and
stos
pop
push
or
repnz
loope
fsubrl
mov
or
dec
xchg
cmp
movsb
ss
and
das
mov
dec
adc
xchg
pushf
push
mov
and
xor
jbe
push
je
push
js
xchg
in
stos
inc
dec
es
inc
loope
cs
push
mov
push
add
in
mov
sbbl
dec
dec
dec
push
aad
pop
out
or
jb
mov
lahf
in
jg
imul
dec
lods
ljmp
mov
ss
add
cmc
scas
int
pop
or
mov
sub
mov
dec
fucom
in
jp
xor
sbb
jmp
loopne,pn
scas
push
jne
lret
mov
in
mov
jge
mov
xchg
ss
dec
mov
out
mov
dec
mov
pop
mov
shll
test
xlat
push
push
outsl
arpl
scas
jb
xor
dec
jo
add
in
pop
sub
stos
xor
arpl
fucomp
xlat
dec
xchg
std
addr16
setno
jo
jo
jmp
or
pop
in
ljmp
inc
iret
push
push
cmpsb
mov
mov
xlat
mov
dec
push
jg
fmuls
jne,pt
test
adc
cmpsl
in
bound
lea
and
adc
xor
jecxz
mov
hlt
jmp
bound
into
pushf
xor
fadds
std
rclw
push
test
mov
or
cmp
call
and
insl
sub
pop
call
adc
mov
xchg
insl
inc
rcrl
pop
loop
fs
lret
loopne
loop
mov
inc
nop
imul
pop
es
scas
xchg
jle
cld
fildl
addr16
add
icebp
xor
ja
push
outsl
pop
xchg
ss
mov
cltd
mov
mov
mov
pop
jnp
push
and
cmp
jae
mov
push
cwtl
rcll
adc
ret
insb
mov
scas
pop
or
push
ljmp
pushf
call
inc
add
mov
xor
insl
dec
add
es
mov
xchg
cmpb
je
cmp
shlb
arpl
gs
jae
mov
int3
adc
adc
andb
jno
js
sti
sub
push
nop
ljmp
jge
pop
jns
ffreep
repnz
pop
test
loop
push
das
and
lods
std
push
pusha
pop
sti
cs
shll
add
mov
inc
test
incl
cmp
push
into
insl
lods
out
xchg
ficoms
and
inc
mov
jbe
adcl
dec
inc
je
xor
icebp
push
mov
ret
jg
sbbb
arpl
out
sahf
rolb
in
adc
iret
and
lret
stos
xor
mov
inc
fmull
or
mov
pushf
out
xor
push
gs
mov
xchg
mov
mov
adc
test
ss
inc
cmp
stc
repz
out
xor
rorb
cmpb
mov
ja
lret
mov
cli
not
es
add
imul
lahf
outsl
fwait
mov
push
divb
push
jne
adc
enter
xor
xchg
mov
decb
xor
push
push
or
test
mov
out
std
jae
xlat
shl
and
jle
or
adc
lods
nop
or
test
sub
lret
pusha
or
xor
sub
inc
push
out
idivl
fisubl
xor
popf
and
daa
nop
xor
adc
fcmovbe
lods
outsl
dec
test
pushf
fisttps
add
rolb
or
nop
insl
cmp
xchg
pop
leave
pop
jecxz
in
adc
movsb
std
cmp
push
sub
pop
xchg
iret
sub
pop
sub
pop
add
sub
nop
jle
jle
cmp
lret
out
sbb
into
sbb
aaa
ss
lcall
je
aam
pop
mov
dec
dec
arpl
insb
sbb
cltd
push
add
std
and
faddp
and
cmp
dec
inc
aas
push
shll
hlt
sti
adc
sbb
inc
and
adc
cmp
in
pop
sbb
adc
fwait
dec
imul
mov
test
aam
dec
mov
and
and
push
cmp
movsl
cmp
mov
jb
add
sarb
mov
dec
and
in
mov
in
pop
and
dec
mov
pop
popf
dec
and
scas
mull
add
pusha
hlt
pop
ljmp
clc
adc
imul
push
inc
fldcw
dec
mov
cld
lcall
testb
adc
insb
pop
loop
js
adc
xchg
push
outsl
inc
daa
jbe
call
push
iret
insb
popa
incb
test
push
pushl
sti
mov
mov
mov
bswap
dec
std
pushf
adc
mov
push
dec
jnp
adc
cmp
rorb
pop
xchg
sbb
test
loop
pop
push
std
sbb
push
mull
pop
jp
sbb
scas
cmp
jp
adc
jno
jg
pop
scas
pop
or
aad
jecxz
dec
insl
in
or
cwtl
push
repz
jge
sub
hlt
int
mov
movsl
hlt
int3
in
xchg
or
jnp
int
jae
neg
fisttps
pop
out
les
or
or
aam
mov
sbb
insl
orb
pop
mov
in
jno
call
jp
inc
sub
pop
cmp
leave
jp
jge
mov
fwait
mov
adc
or
cmp
rorl
push
or
jo
or
and
sub
popf
movsb
add
cld
imulb
xor
and
cmpsl
xor
push
xorb
cmp
mov
popf
mov
xlat
das
clc
sbb
std
movsb
loop
out
push
inc
jns
push
xchg
mov
fwait
jg
inc
sub
sbb
dec
mov
xchg
cltd
push
cmp
cmpl
addr16
sti
jge
jne
rorb
les
rcl
jbe
and
xchg
pop
pop
or
repnz
in
jge
cmpsb
adc
inc
jns
or
adc
cmc
cld
lahf
inc
leave
rcll
jb
jmp
xchg
xchg
sbb
pop
mov
je
test
xchg
rcll
jnp
xor
pop
push
push
lds
lea
fisttps
sub
adc
adcl
xor
jb
sub
pop
in
xchg
jae
aad
xor
fistl
lret
add
add
out
dec
push
das
jnp
mov
jb
add
hlt
mov
sub
sti
cmc
xchg
leave
popl
stc
rcrb
out
mov
mov
sbb
xor
dec
xchg
stos
out
mov
cmpsl
and
mov
pop
mov
and
adc
mov
sub
add
cmpsb
and
sbb
jbe
pop
movsb
int3
arpl
push
xchg
jae
mov
aad
subb
jno
inc
lret
jl
bound
and
rcr
lret
ret
jge
pop
inc
xchg
xchg
dec
mov
iret
cmc
outsb
lock
icebp
xor
fldenv
mov
out
stos
fdivr
outsl
mov
lret
outsl
movsb
cmp
ja
sbb
cmc
fsub
fld
or
adc
inc
xchg
mov
test
push
pushw
test
les
loop
dec
sahf
xchg
sub
out
fcmovb
mov
add
fld
in
mov
bound
mov
pop
int3
daa
mov
jmp
nop
xchg
outsl
jb
stc
xchg
cmpsb
and
and
shlb
dec
mov
dec
dec
imul
dec
push
test
iret
xchg
add
shrb
push
xchg
mov
aaa
rorl
xchg
cld
ds
call
cmp
mov
and
fldcw
out
test
mov
mov
mov
sub
push
ffree
mov
fsub
pop
pop
xchg
daa
ret
adc
out
cmpsb
enter
out
shll
mov
push
xor
mov
jbe
mov
sub
fnsave
cmp
sti
cwtl
scas
mov
sarb
imul
fcomi
jecxz
daa
andb
fsubrs
pop
mov
sbb
shrb
jg
xchg
mov
inc
adc
and
je
cmpsb
push
mov
and
insb
js
add
and
cld
mov
xchg
adc
adc
movq
rcll
fisttps
movsl
lods
insb
fdivrl
cwtd
mov
jno
imul
push
push
push
inc
pop
cmc
push
fsubrs
jge
jmp
hlt
sub
mov
jge
into
ss
mov
xchg
cwtl
imul
mull
sbb
cmp
mov
mov
inc
sbb
aaa
les
or
lock
pop
add
sub
stc
out
ret
mov
jno
call
jmp
bound
outsl
mov
pop
push
push
sbb
fwait
add
stc
stos
in
leave
dec
loop
push
cs
add
std
repnz
dec
dec
push
daa
cmpsl
jno
lret
add
call
das
jb
test
sub
adc
inc
xor
jo
lret
sbbl
adc
sbbl
adc
ret
daa
cli
xchg
jns
mov
jae
mov
or
jns
in
xchg
cmp
jns
or
repnz
jge
mov
xchg
fcmovnbe
push
cmpsb
push
add
test
iret
outsl
in
pusha
mov
pop
add
les
out
sar
test
fcmovnu
cwtl
inc
and
arpl
mov
mov
into
jle
test
fiaddl
cmc
das
jno
sub
movsl
enter
adc
mov
jnp
mov
cmp
arpl
call
push
imulb
in
adc
arpl
add
cmp
jae
adc
mov
mov
push
push
in
dec
les
add
and
jmp
in
add
sub
flds
repz
push
sbb
cmpsl
dec
or
lret
into
mov
arpl
mov
mov
ficomps
lods
lods
cli
inc
dec
cmp
push
into
ret
imul
sahf
mov
mov
lods
push
in
sahf
pushf
push
dec
jle
add
mov
cmp
xor
mov
or
pop
add
mov
sbb
jbe
sbb
fstps
sahf
mov
mov
call
add
enter
ffreep
insb
insb
xlat
mov
jnp
lahf
inc
mov
shrb
or
cs
daa
or
fildll
pop
mov
stos
xchg
jmp
loopne
push
ficomps
cltd
in
clc
stc
cltd
mov
inc
lds
js
sbb
dec
or
adc
xlat
dec
xchg
jne
fsub
mov
seta
push
and
ret
pop
mov
dec
aas
cld
xchg
addl
and
sub
pop
sbb
mov
add
cmpsb
outsb
icebp
and
xor
movsl
mov
pop
lret
call
mov
aas
cmp
hlt
ficoml
subl
pop
cmc
add
shlb
aad
and
outsb
aad
mov
lahf
lret
lds
xchg
jae
push
movsl
outsb
imul
cmp
divl
inc
dec
std
xlat
testb
cmpb
inc
or
mov
push
into
or
fcmovnb
sbb
cltd
cltd
cmp
inc
loop
jne
bound
adcb
cmp
movsb
xor
sbbb
test
inc
sbbb
push
pop
ds
push
push
mov
add
sbb
lcall
mov
cmp
inc
in
enter
sub
adc
mov
push
cltd
pop
push
push
int3
cmp
dec
xorl
sub
inc
xchg
lods
add
popf
iret
lret
stc
mov
mov
fdivp
adc
fistpl
aad
adc
es
in
xor
inc
aam
xchg
mov
mov
mov
lods
fnsave
mov
inc
mov
cmpsb
stc
xor
pushf
xor
scas
ljmp
jle
mov
pop
or
mov
jnp
sbb
jns
inc
mov
cmp
mov
xor
xchg
int
adc
jge
pop
sub
sub
cmp
dec
loopne
add
dec
scas
pop
inc
add
adc
inc
addl
cmp
dec
addl
adcl
dec
push
dec
add
mov
pop
leave
add
sbb
xchg
daa
sysret
mov
add
dec
icebp
pushf
inc
push
insb
mov
mov
mov
push
or
pop
push
ss
les
cs
cltd
jp
push
adc
cld
pushl
aam
jmp
cli
pop
lret
cmp
pop
mov
mov
aad
fidivrs
cwtl
sbb
add
pop
add
push
cmpsb
js
insb
push
sub
scas
dec
adc
jmp
lds
enter
ds
rsqrtps
test
and
stc
push
or
push
mov
into
iret
cwtl
imul
pop
ljmp
adc
xchg
repz
sub
hlt
call
xchg
ret
push
xor
mov
push
cli
inc
inc
popf
sub
mov
mov
movsl
sbb
and
jp
sahf
jmp
fdivrs
jp
xchg
adc
mov
sbb
je
mov
jle
add
shr
addb
fstpl
jmp
outsl
icebp
push
xchg
jle
mov
sbb
mov
adc
repnz
xchg
sub
sub
add
rcrb
push
push
jle
je
js
xor
aaa
inc
mov
testl
fistps
clc
addl
les
lea
cltd
jmp
pop
test
in
lea
mov
scas
pop
sti
add
bound
jmp
call
leave
scas
push
xchg
jno
movsl
in
ja
into
add
dec
adc
push
add
mov
fld
mov
jne
dec
lds
sub
lds
adc
subl
xchg
out
push
jmp
jbe
mov
inc
cmp
stos
xor
orb
cmc
test
rcll
xchg
xor
movsl
hlt
cmpsb
and
fwait
and
sbb
iret
test
sbb
push
in
jb
sbb
mov
mov
push
leave
sub
aam
and
dec
push
cmp
xchg
scas
fs
test
push
sahf
xchg
jnp
xchg
and
push
ljmp
or
xchg
xchg
mov
adc
aam
test
test
mov
faddl
cmp
cli
call
mov
insl
dec
js
inc
xor
jne
rcll
jo
xchg
gs
mov
push
cwtl
divl
mov
and
fldenv
pop
jecxz
sub
rep
test
movsl
fdivs
push
mov
fsubrl
and
aaa
jecxz
push
jl
mov
mov
les
test
cmp
into
mov
mov
cmp
adc
pop
pop
mov
cmp
cs
mov
sahf
jae
ret
pop
push
loope
insb
cmp
mov
icebp
sub
jl
scas
cmc
pop
jne
pop
jmp
pop
and
mov
or
lret
mov
pusha
jbe
jbe
loopne
inc
mov
dec
incl
aas
cwtl
cmpb
dec
imul
test
dec
adc
pop
popf
loopne
ret
pop
xlat
lods
pop
rorb
xchg
cmc
cmpsb
sub
out
xor
cmp
mov
adc
sti
mov
or
push
or
shld
cmp
out
int
lret
sbb
sbb
xchg
lcall
icebp
mov
sub
neg
fidivl
inc
js
pop
jb
and
andl
jle
pop
lea
sub
repz
mov
xchg
mov
ljmp
mov
mov
mov
cmp
and
dec
ret
mov
gs
popf
sub
and
lret
test
test
lcall
pusha
or
sar
insb
pushf
mov
mov
movsb
sbb
test
pop
clc
or
push
lahf
ret
xchg
leave
mov
sub
adc
mov
cmp
cmc
notb
or
lods
adc
mov
jno
test
push
cmp
outsb
inc
and
xchg
mov
pop
outsl
dec
call
scas
cmp
lock
out
loope
push
mov
push
jns
jne
dec
das
xchg
cmp
pop
and
fnsave
sbb
dec
stc
fsubrs
pop
popa
jge
pop
orb
ficoms
push
mov
call
fimuls
xchg
xchg
scas
dec
cld
mov
ss
sbb
aaa
cli
jmp
adc
cli
stos
push
or
adc
mov
call
testb
push
insl
mov
pop
imul
push
mov
pop
in
rcrb
fsin
ljmp
sub
movsb
stc
add
push
mov
nop
add
in
fs
fcompl
sub
roll
mov
xchg
inc
mov
mov
popa
leave
js
inc
mov
jmp
repz
pop
scas
lods
jne
lods
adc
xchg
mov
les
mov
test
ficoml
in
add
add
pop
mov
mov
mov
aam
stos
mov
clc
mov
adc
iret
fisubrl
xchg
jle
ficompl
aas
jbe
bnd
xchg
push
jp
ja
lret
xchg
testb
jo
jo
es
add
xlat
jb
xchg
xchg
cmp
popa
mov
lock
push
mov
outsb
fistl
lcall
and
outsb
pop
decl
adc
icebp
pop
xor
icebp
nop
mov
insb
sbb
push
inc
jbe
jnp
dec
mov
push
sub
jnp
flds
mov
cmp
mov
mulb
pop
and
test
out
repz
shll
in
pop
add
push
data16
push
adc
xchg
jle
or
mov
shlb
and
sahf
push
pop
rcrb
inc
xchg
out
dec
leave
dec
dec
add
rcrl
repz
mov
incb
dec
in
jne
dec
jne
mov
loopne
sbb
mov
test
fimuls
mov
xor
scas
dec
out
push
dec
inc
and
orb
fisubl
and
cld
mov
xchg
rorb
push
loope
cli
loopne
ret
cmp
cli
jno
in
mov
jns
outsl
in
fcomp
jecxz
aam
ja
arpl
lret
fists
lods
jg
rol
cmpl
aaa
popf
push
jge
xchg
push
leave
mov
dec
fsubl
out
push
push
ret
jg
sub
ljmp
mov
and
mov
sub
aad
add
leave
mov
mov
mov
std
or
test
repnz
adc
adc
outsb
dec
ret
cli
call
in
cmpsb
stos
push
dec
pop
wbinvd
jg
mov
fbstp
inc
out
mov
cmc
lret
sub
jne
jnp
push
cmp
repz
pop
hlt
pop
rcrl
lret
add
lret
int
mov
insl
xlat
push
lea
jge
mov
dec
mov
loop
out
frstor
mov
cmp
inc
jnp
lods
jns
fcmovbe
pop
in
or
push
hlt
pop
arpl
add
stos
pushf
sbb
pop
mov
bound
loope
xchg
or
jnp
and
outsb
xchg
xor
mov
cmp
xchg
dec
mov
hlt
inc
aad
and
insl
lret
and
cmpl
je
inc
adc
jl
daa
inc
sub
mov
xchg
lea
mov
aas
les
push
pop
xor
repz
adc
mov
cmpl
xchg
sbb
cmpsl
mov
in
cmp
xor
pop
mov
dec
jg
push
icebp
pusha
add
mov
adc
mov
dec
sub
movsb
xchg
dec
ja
fnstsw
mov
adc
scas
scas
add
stos
lret
negb
out
push
arpl
or
sub
movsb
shll
jns
dec
jmp
push
icebp
andb
mov
ret
ret
incl
mov
jl
push
dec
mov
pop
out
pop
jecxz
push
add
ror
and
movsl
lahf
sbb
hlt
das
cld
out
popf
enter
pop
xor
xor
test
xchg
adc
dec
nop
cmp
enter
push
dec
xchg
hlt
lret
pop
rorb
jp
testl
xchg
clc
inc
mov
insl
jmp
lret
dec
stos
rorl
stos
jmp
ret
stos
push
sbb
jns
jo
sahf
test
jp
mov
mov
pop
dec
jbe
push
xor
fisttpll
lcall
xchg
adc
icebp
push
or
test
lahf
add
loop
sbb
push
ds
and
inc
mov
cmc
xchg
xor
andl
int3
xchg
lcall
adc
ficompl
sbb
dec
inc
add
jbe
sahf
cld
jns
repz
and
jne
lds
out
jmp
pop
push
and
push
adc
pop
out
and
push
inc
xorl
mov
clc
xor
bound
ficompl
int
addb
jae
sub
inc
xchg
jb
dec
sub
sbb
loop
dec
and
repz
fwait
jno
add
jns
andl
xchg
push
cli
mov
lea
and
inc
xchg
sbb
pop
test
xor
mov
cmp
out
hlt
int
xor
sub
fcom
jmp
adc
pop
push
jg
rorb
lods
add
stc
xchg
cmpsl
mov
or
and
inc
xchg
and
pop
cwtl
add
mov
xchg
xchg
pusha
sub
in
xor
adc
sbb
test
stc
inc
cs
dec
and
jmp
scas
lahf
frstor
or
sub
pop
and
xchg
xchg
lahf
loopne
lods
cmc
pop
sbb
lods
push
xchg
out
cmp
dec
cltd
sub
lahf
xchg
fwait
or
lea
xor
loope
jle
add
mov
inc
push
std
dec
cmp
adcb
mov
xchg
xchg
xorl
jmp
or
repnz
js
mov
lret
popf
and
sub
out
ljmp
cmc
pushf
scas
sub
lea
cmpsl
mov
cmpsl
movsl
dec
pop
gs
orb
mov
nop
movsl
jl
and
inc
dec
mov
jecxz
xchg
and
dec
ss
and
xlat
push
fcos
xchg
ret
cmp
lcall
push
cmp
mov
sub
cs
jl
call
mov
dec
mov
xchg
sub
movsb
imul
mov
lcall
mov
rdmsr
adc
aam
xor
test
push
xchg
mov
adc
lahf
pop
or
mov
mov
add
stos
add
add
sbb
sbb
lret
adc
jns
adc
xchg
stos
pushl
frstor
jo
es
mov
call
dec
fidivrs
jbe
inc
mov
fwait
add
pop
dec
sub
mov
lea
lea
inc
dec
jge
std
stos
jecxz
mov
lods
jmp
cltd
jecxz
push
nop
sbb
andb
dec
dec
adc
cmp
or
sbb
sahf
sub
enter
out
add
je
mov
rep
pusha
xor
out
lock
hlt
testl
loop
xor
xor
jl
int3
jecxz
xor
pop
pop
out
pop
mov
loop
pop
mov
add
cmpsb
not
jbe
and
aas
jo
in
mov
fidivl
aam
popf
xchg
mov
inc
outsb
seto
xchg
pop
dec
add
push
xchg
fs
inc
adc
and
pop
xchg
inc
sbb
or
adc
or
out
andb
mov
aaa
punpckhbw
iret
stos
adc
inc
int
sub
ljmp
and
inc
fisttps
xorb
daa
pushf
mov
stc
lret
sbb
ret
dec
pop
sar
mov
enter
orb
pop
lds
pushf
push
addr16
in
lods
add
push
cmp
popf
jl
or
mov
popa
aam
movsl
dec
int3
mov
xchg
cld
mov
sub
inc
and
orb
jns
sbb
in
lret
xchg
xchg
fisubrl
imul
out
mov
jbe
push
outsb
add
inc
dec
pop
int3
out
lcall
sahf
shlb
lret
iret
in
out
into
arpl
push
inc
imull
jns
gs
incb
pop
xchg
push
test
push
enter
lods
mov
pcmpeqb
jno
pop
les
sub
imul
adcl
ss
jle
mov
int3
mov
movsl
mov
jo
inc
imulb
in
push
xor
lods
aad
xchg
bound
cmpsb
sub
xchg
ret
jae
pop
xchg
xlat
jmp
enter
add
loope
out
insb
mov
int3
jne
es
fdivrs
scas
sar
and
aas
jmp
cmp
in
sbb
dec
push
movntq
add
push
dec
pop
add
ds
push
movsl
inc
xchg
xor
cld
push
jbe
mov
inc
add
sub
mov
lret
mov
xchg
mov
xchg
mov
jnp
cs
adc
pop
movups
mov
and
test
test
add
xchg
mov
xchg
mov
xchg
popf
jne
imul
and
jge
push
call
push
xorb
push
insl
inc
sub
nop
in
adcb
inc
les
mov
adc
jb
imul
hlt
push
and
pop
dec
popf
movsb
sbb
xchg
sub
jp
sbb
xor
inc
out
test
repz
lret
adc
dec
das
mov
scas
xor
bound
enter
or
xchg
mov
and
xor
fisttpl
ret
jmp
mov
adc
popa
pop
and
adc
jae
leave
mov
int
push
inc
or
pop
loope
gs
xor
sub
sti
lcall
mov
shrb
mov
cmp
sbb
adc
mov
daa
enter
je
inc
mov
or
lods
aas
mov
dec
mov
fisubrl
aaa
inc
in
rcl
mov
jg
lock
xor
ret
cmp
add
fsub
or
sbb
xchg
es
pop
or
repnz
sub
lahf
xchg
lret
add
and
shrl
push
scas
xor
dec
stos
push
sahf
ja
repz
dec
xchg
aas
mov
push
pop
push
frstor
in
push
orl
sub
shr
adc
add
and
mov
mov
fwait
pop
popf
and
push
es
rclb
mov
nop
add
gs
and
fldenv
aam
js
add
lods
sbb
xchg
mov
inc
scas
push
out
adc
leave
lods
mov
mov
lahf
lds
jns
mov
fildl
gs
add
sbb
pop
cld
mov
and
icebp
and
ficoms
mov
insb
lods
cmp
cwtl
pop
adc
mov
js
lahf
stos
dec
jp
mov
pop
xor
into
adc
pop
out
jae
and
outsl
call
jb
xchg
nop
sub
cs
popa
ja
cld
scas
adc
notl
decl
std
es
and
cmp
popa
xchg
fstpt
mov
daa
inc
mov
mov
out
movsb
and
sub
mov
pop
cmpsb
scas
adc
enter
into
mov
es
mov
mov
out
jne
pop
push
loop
orl
xor
mov
sub
popf
fwait
jb
push
and
or
or
cli
pop
in
das
xchg
jmp
xor
add
mov
mov
std
mov
inc
mov
pop
xchg
mov
mov
mov
daa
aas
mov
xchg
jno
movsl
pop
lret
jg
jne
and
daa
or
xor
sbb
stc
push
inc
pop
mov
dec
scas
jg
push
inc
fldl
test
movsl
xor
fwait
ds
lret
dec
imul
jne
outsb
fsubrl
jbe
cmp
loopne
sbb
xchg
mov
add
popa
sbb
imul
and
mov
je
pop
rorb
xor
enter
lcall
popa
xchg
dec
ret
sub
add
push
in
loopne
mov
mov
int
pop
cwtl
mov
mov
test
outsl
pusha
push
cmp
fdiv
lret
or
or
push
pop
sarb
adc
inc
in
shl
sbbb
decb
xchg
test
xchg
sub
pop
fimull
out
pop
fisubl
leave
mov
jno
loopne
sub
repnz
imul
imul
adc
add
repnz
sub
in
jno
je
inc
mov
test
cltd
sbb
cld
pop
lret
stc
dec
stos
nop
and
loopne
rcrl
mov
or
addr16
add
mov
cltd
push
sbb
lods
and
cmpsb
pop
ja
push
mov
push
aas
lods
sbb
and
xor
cld
add
cli
push
jne
xchg
add
or
push
fisubl
mov
insb
mov
cmc
aam
lret
push
mov
sti
ret
push
sarl
and
out
out
cmp
in
adcb
and
xchg
dec
dec
out
jnp
and
cltd
pushl
cmc
jle
jmp
or
fnstsw
es
scas
imul
pushf
clc
cmp
jp
movsb
cmp
stos
adc
scas
loop
nop
call
xor
mov
jmp
jne
pop
mov
mov
mov
jns
lds
aad
shrl
pop
pop
jne
pop
adc
lock
lret
push
ficoms
int3
inc
xor
inc
ja
push
test
xor
cmpsl
rolb
xor
ss
jle
int
mov
std
or
and
or
sub
stc
clc
dec
sbb
jne
data16
mov
add
fsubp
in
test
push
jb
dec
pop
inc
out
into
cmc
adc
mov
fsin
cltd
and
jp
les
add
ret
in
stos
aas
vrcpss
mov
pop
lret
call
imul
out
fisubs
out
int3
jae
cltd
test
adc
jecxz
aas
sbbl
jmp
and
adc
xchg
out
out
inc
dec
inc
fiaddl
push
ret
cmp
fdivs
notl
cmpsl
or
sbb
add
jae
lock
pop
movsl
dec
mov
xor
adc
cmc
cmp
pop
loopne
xchg
push
lret
inc
lea
test
adc
sub
ljmp
push
divb
stos
mov
js
xchg
pop
push
xor
arpl
pop
insb
mov
adc
xchg
push
std
mov
sbb
or
mov
xchg
dec
divl
mov
mov
xchg
pushf
repnz
xchg
or
jns
push
js
mov
or
test
es
dec
jl
cltd
imul
and
test
or
add
push
js
inc
xor
ljmp
sub
popf
push
fsts
sti
adc
jmp
cmp
mov
pop
xor
dec
jl
cmc
xchg
test
repnz
mov
fidivrs
mov
and
mov
or
loop
xor
movsl
jl
add
sti
pop
xor
cmova
ljmp
adc
cmp
xchg
ja
ret
cmp
test
jno
ret
add
lcall
sarl
lret
ljmp
fbld
cltd
jle
or
jl
pop
movsl
jb
ror
testl
jmp
cwtl
jmp
and
push
push
ficoms
xchg
inc
addb
rcl
aam
repnz
push
jp
test
pop
mov
adc
fdivrl
testl
sahf
mov
lahf
fbstp
xchg
jp
lds
nop
into
call
addb
xchg
and
push
sahf
jg
rcl
jbe
pop
jge
and
jp
mov
xchg
int
sub
inc
xchg
cmpsl
push
test
xor
lods
xor
add
rclb
cmp
pusha
sub
jo
movsb
movsl
cmp
xchg
pop
call
xor
loop
cmc
xor
test
idivb
sub
sub
shrl
sub
mov
sarl
psubsb
mov
adc
sub
add
sbbb
in
cmp
push
mov
insl
repz
push
ja
mov
mov
cmp
push
imul
push
std
jmp
xorb
xor
dec
out
add
pop
sbb
mov
or
jge
fdivrs
jle
and
pop
sub
fcoml
mov
stc
std
xor
cli
mov
sub
leave
sbb
sbb
shlb
pcmpeqb
es
out
inc
and
inc
sub
mov
dec
cltd
stos
mov
jl
or
pop
sti
cwtl
enter
out
fs
cmp
in
stc
pop
jno
cltd
xchg
arpl
adc
shlb
xchg
or
cli
add
lret
ljmp
add
sti
mov
flds
data16
les
ret
cmp
js
mov
insb
and
ss
sbb
movb
movsb
andb
pushw
push
xchg
lahf
out
cmp
movsb
push
jns
mov
aaa
clc
lret
ret
jne
jecxz
lahf
outsb
cmp
or
dec
int3
mov
pop
add
mov
rolb
popf
mov
shrl
push
inc
pop
xchg
cmpsl
dec
dec
lret
pop
jno
test
sbb
pop
xor
loop
push
pusha
mov
fimull
divl
mov
outsb
jae
xchg
push
loope
jge
cmpsl
sbb
ss
test
movl
ret
cmp
andb
cmc
cmp
imul
xchg
push
xor
jg
push
xchg
repz
test
mov
lret
xor
addr16
clc
pusha
push
inc
incl
test
xchg
dec
lahf
test
insb
or
jle
jg
xchg
sbb
and
push
mov
stc
fnstcw
inc
add
imul
outsl
leavew
lret
iret
add
sahf
inc
and
ss
stos
fidivrl
and
jle
pop
pop
int3
faddl
mov
cmp
cmp
pop
xor
fbstp
mov
ljmp
icebp
mov
les
mov
insb
sub
add
mov
fldt
ret
loop
pop
and
inc
inc
movl
jle
push
js
lret
lock
lods
pusha
imul
inc
lret
adc
pop
sti
add
rorb
and
add
out
jb
adc
add
mov
jb
push
orb
jo
push
fwait
adc
roll
dec
xchg
mov
sbb
lods
stos
incl
fildl
add
mov
insl
push
adc
insl
aaa
xchg
fwait
insl
cmp
xor
hlt
int3
jp
push
pop
movsl
cli
add
arpl
cwtl
jbe
outsl
stos
push
stos
das
insl
xchg
lods
adc
and
inc
hlt
call
gs
dec
les
mov
dec
mov
inc
adc
dec
sbbb
les
push
mov
leave
adc
jge
inc
test
fs
sbb
inc
add
in
test
mov
test
sub
sub
mov
xor
cs
int3
adc
sub
inc
adc
sub
adc
adc
repnz
ss
dec
mov
jp
les
push
shrl
movsb
je
add
xchg
xchg
jnp
ja
xchg
enter
test
push
inc
xor
and
or
orb
dec
xor
lods
jne
insl
xchg
addr16
out
ss
insl
ja
std
lds
ret
inc
sahf
verw
mov
push
test
scas
pushf
hlt
or
mov
jo
ja
inc
inc
dec
ljmp
movsb
and
add
push
test
repz
fistpl
cwtl
shrb
pop
and
xchg
or
imul
ljmp
test
xchg
aas
dec
negb
fisubrs
ret
and
in
mov
mov
mov
xchg
insb
test
rcll
inc
cmpl
incb
adc
mov
cs
nop
sbb
dec
push
pop
push
jb
pop
das
pop
movl
lea
pop
or
cmp
push
bound
shrb
movb
and
cmpsl
arpl
cmp
jmp
mov
jmp
cltd
lods
lea
inc
jae
out
add
test
sub
fbld
xor
addr16
add
fcomi
dec
sbb
push
pop
inc
dec
lods
hlt
inc
push
ficomps
hlt
movsb
call
jl
dec
lcall
subb
inc
push
xor
aas
mov
test
and
jg
daa
mov
out
in
push
inc
faddp
mov
cmp
cmpsl
add
mov
cmpsl
test
lret
fwait
push
daa
sahf
sub
movsl
jbe
and
repz
cmc
sbb
out
out
sbb
or
sub
sahf
sbb
cmc
cwtl
icebp
mov
test
adc
je
push
in
movsl
mov
cmpsb
stos
dec
sbb
xchg
movsb
xchg
inc
mov
jp
cltd
jmp
sub
push
shl
xchg
adc
iret
fs
jnp
add
jg
xor
push
mov
movsl
pop
out
mov
adc
jl
fsubp
pop
test
popf
xor
les
xchg
cmp
sub
pop
shrl
adc
cli
call
out
push
call
and
adc
cmp
cmp
sti
leave
out
sbb
out
int
push
xlat
or
shlb
and
pushf
mov
xchg
xchg
pop
jbe
pop
pop
fwait
mov
push
call
or
addr16
sub
add
xor
sub
nop
xchg
imul
jge
cmp
xchg
outsb
lods
inc
es
push
insl
cwtl
and
xor
aad
lods
sub
iret
adcb
xor
lret
inc
test
jno
movsb
mov
sbb
jbe
mov
rclb
fists
add
mov
rcrb
outsb
push
push
aam
pop
lahf
inc
setne
sub
mov
jg
mov
and
leave
adc
pop
cltd
and
jp
int
into
arpl
xchg
pop
nop
sbb
xor
popf
outsb
mov
and
sbb
lock
mov
sbb
xchg
cwtl
mov
adc
lret
outsb
mov
negb
mov
sbb
pop
out
cmp
adc
inc
sti
psubsw
mov
push
cmp
mov
stc
scas
jg
fldl
shlb
inc
push
movsl
add
mov
aam
jle
jnp
jne
enter
loopne
addb
mov
mov
shll
mov
push
xchg
and
fcmovu
mov
jl
insb
lcall
das
xor
jbe
xchg
xchg
cltd
fadds
push
or
rcll
dec
jno
mov
or
xor
stos
shlb
cmpsl
rcrl
sbb
mov
jno
insb
int
xchg
mov
push
sbb
in
mov
lods
stos
int3
push
sbb
int
sub
in
jl
lret
insl
jg
idivl
pop
inc
inc
mov
xchg
cli
pop
adc
les
dec
dec
lcall
fisubrl
movsl
xor
or
stc
mov
sub
or
cmpsb
jge
lods
rcl
loop
jg
pusha
addr16
cmc
es
popf
mov
xchg
sbb
mov
push
adc
aaa
mov
mov
dec
in
cmpsl
sub
andb
cmp
or
mov
xchg
cltd
jno
imul
call
jg
movsb
leave
push
adc
mov
mov
scas
pop
and
aad
cmp
xchg
and
ljmp
cmp
xchg
test
inc
push
and
pop
xchg
and
ljmp
loopne
and
xor
pop
pop
sti
mov
repnz
rcl
lahf
xor
inc
mov
js
sub
fcompl
scas
daa
jae
popa
push
add
sub
daa
push
mov
in
xchg
dec
lcall
stc
loopne
lahf
mull
int
and
lahf
mov
and
mov
mov
lods
add
push
mov
sub
test
inc
or
into
test
jecxz
pop
mov
xchg
xor
xor
inc
push
sbb
jbe
mov
lock
cmp
bound
ljmp
mov
into
fwait
jo
aas
dec
jae,pt
mov
jbe
jnp
outsb
inc
es
lahf
je
lock
pusha
scas
push
call
add
xor
xlat
mov
xchg
or
jp
jnp
int
mov
test
in
jo
jle
pop
adc
clc
pop
mull
xor
sbb
jle
mov
insb
mov
mov
andl
sti
pop
xchg
push
popf
adc
imul
push
xchg
sti
xor
pop
dec
push
push
push
out
fcomip
jns
mul
fidivrs
ss
fcompl
push
xchg
leave
into
jmp
mov
cmp
hlt
add
jp
pop
add
repnz
in
jg
and
mov
pop
fsubrs
push
push
push
xor
push
push
add
sbb
mov
lret
ds
nop
xor
mov
or
inc
clc
cltd
pop
adc
xor
scas
rol
mov
pushf
inc
add
loop
xor
in
pusha
mov
mov
and
sbb
push
lcall
lahf
and
mov
outsb
cmp
das
pop
gs
xchg
pop
pop
ja
sbb
xor
js
xchg
lock
push
mov
mov
sub
dec
inc
sub
ror
cmp
sbb
mov
mov
insb
lods
inc
mov
mov
loope
into
scas
cmp
mov
add
xorb
lods
data16
shrb
sub
bound
sbb
ss
sbb
lods
xchg
pop
xchg
gs
int
sbb
enter
fidivl
jg
adcb
xchg
adcl
inc
sub
or
movsb
pop
push
or
iret
and
and
jg
xchg
test
mov
cmp
xor
cmp
pop
push
inc
lock
push
add
fsubrs
mov
scas
xchg
adc
bound
test
hlt
and
dec
cmpsl
ret
ficompl
mov
cld
adc
stos
or
ret
mov
inc
lock
fidivs
mov
push
pop
aam
shll
mov
pop
jmp
ljmp
das
sub
and
std
mov
pop
or
push
push
insb
mov
es
push
xchg
ljmp
dec
push
fimull
lods
jb
or
push
divb
sbb
dec
xchg
insb
es
insl
and
sub
xorb
loope
pusha
pop
aaa
adc
mov
dec
sbbl
inc
rcrb
lock
insl
ds
cwtl
add
daa
push
cmp
fs
shrb
pop
pusha
xor
sub
mov
adc
add
sub
aam
aas
xor
cwtl
xchg
add
mov
testl
mov
or
pop
cs
addl
push
push
dec
rolb
out
inc
inc
dec
xor
loop
xchg
mov
dec
lahf
leave
dec
cmp
rorl
fcmovne
out
loope
negl
hlt
mov
and
mov
call
sarl
and
jae
bnd
lea
js
pop
int
scas
and
cmp
xchg
add
adc
jl
jae
sub
inc
mov
inc
push
jo
pop
js
mov
pushf
je
rolb
sti
enter
dec
dec
fldcw
out
push
jae
add
xchg
jge
popf
flds
adc
inc
push
mov
inc
in
cwtl
and
decl
imul
imul
and
dec
nop
jns
popf
mov
int
jo
mov
fsubl
stos
cmp
lahf
inc
addr16
dec
cld
mov
cmpsb
mov
or
iret
jg
mov
shll
popa
ja
in
cmp
stc
sbb
jne
fucomp
sbbl
inc
or
and
sbb
xor
ljmp
xlat
les
inc
push
outsl
mov
sub
and
push
movsl
fcoms
mov
lods
fstpt
add
jl
out
popl
inc
mov
fidivl
jbe
xor
inc
mov
adc
ret
pop
cmp
jb
pop
imul
lahf
or
sbbb
adc
shlb
push
cmp
testb
out
mov
cmp
test
jge
gs
stos
jecxz
mov
mov
adc
test
and
xor
in
fidivs
lods
mov
dec
mov
xchg
adc
insl
ret
es
push
add
lods
test
int3
lahf
inc
lret
mov
jae
arpl
cld
and
mov
shrl
pop
mov
enter
cmp
xchg
lods
mov
mov
inc
scas
or
cltd
int3
or
aaa
in
and
jo
pop
push
imul
xchg
sub
fcompl
sti
insb
test
xor
jo
xor
cmpl
lods
pop
push
pop
outsl
sbb
mov
test
push
jge
inc
or
js
jnp
cmc
adc
pop
or
lods
fs
push
loop
xchg
cmp
push
jae
push
shlb
dec
xor
cltd
dec
mov
loope
pop
push
setp
pop
mov
xchg
dec
imul
rcrb
mov
cwtl
adc
inc
icebp
jnp
pop
call
mov
dec
fmuls
fcompl
or
int3
inc
adc
mov
jb
pusha
movsb
shrb
jle
ret
mov
pop
adc
cmp
mov
cmp
jmp
daa
stc
xor
inc
dec
dec
je
pusha
sbb
in
mov
call
mov
cmp
lods
sub
and
pop
or
pop
mov
sbb
jae
lret
sub
add
pop
aam
shrl
stos
movzbl
dec
dec
in
jg
mov
and
mul
pop
or
jnp
jbe
fwait
cltd
jnp
xlat
movsl
jl
fmuls
nop
lds
mov
mov
xor
icebp
cmp
ja
orl
xchg
jl
inc
jnp
xchg
jmp
push
or
pushf
lret
mov
cwtl
pop
mov
fstl
mov
mov
test
jns
jbe
pushf
std
in
sbb
add
or
lods
and
dec
xor
addl
aam
mov
sub
insb
aas
leave
aad
mov
out
pop
inc
mov
stos
jecxz
lret
fsubl
call
and
lock
jb
int
inc
mov
adc
imul
jl
jb
sub
in
outsb
dec
sti
loope
out
add
pop
imul
add
fidivs
popf
push
ds
arpl
fildll
pop
arpl
mov
mov
sbb
jbe
pop
adcl
jecxz
addr16
fsubs
jmp
and
push
and
imul
stos
push
fiaddl
dec
mov
test
stos
push
les
mov
jl
mov
repnz
inc
into
into
push
jo
ja
out
popa
and
ljmp
or
xchg
push
lea
mov
mov
mov
cmc
fisttpll
add
mov
loopne
arpl
stos
decb
mov
xlat
xchg
adc
out
fcoms
mov
add
push
dec
pushf
inc
pushf
pop
sbb
je
cmpsl
xchg
inc
out
mov
xor
xchg
sarb
mov
lret
mov
mov
mov
ret
push
sub
mov
pop
addl
adc
rcrl
jae
int
test
in
ret
add
icebp
mov
lods
adc
and
pop
iret
sub
ljmp
out
ss
sti
dec
mov
push
sahf
adc
ret
pop
cvtpi2ps
sub
call
pop
mov
xor
sbb
sub
lcall
fsubl
pusha
push
nop
pop
jg
sub
test
cltd
jne
or
or
fnstsw
rep
leave
in
sub
jb
adcb
jmp
push
mov
fists
inc
mov
fsubr
sub
jmp
movsl
xor
mov
pop
hlt
or
pop
cmp
lods
fildll
sbb
adc
mov
adc
and
in
lock
pop
pop
cmpsl
popf
jmp
dec
jbe
pop
push
or
mov
shlb
bnd
mov
lret
lret
sahf
movsl
cmpsl
sahf
shrl
pusha
sbb
xor
sub
bound
add
push
dec
cmp
push
cld
loopne
push
lret
sbb
xchg
sub
dec
inc
mov
push
das
sub
xor
scas
aad
out
dec
fsubrp
aas
mov
fcmovnbe
sub
add
call
sub
xchg
xchg
pop
pushl
in
dec
add
bound
sub
das
enter
mov
rorb
scas
jmp
es
or
dec
cmpsb
xor
jge
and
push
repnz
push
jle
and
sbb
sub
or
jbe
jp
xchg
cmp
sub
jp
aaa
dec
test
xchg
cld
xor
dec
adc
mov
scas
rclb
mov
arpl
enter
daa
out
andl
xchg
enter
xor
and
sbb
cmp
in
xchg
mov
outsl
lea
daa
xor
mov
inc
lea
pop
cwtl
iret
adc
stos
js
jle
loope
or
push
dec
fxtract
pop
dec
xor
inc
cs
mov
out
andl
fdivs
xchg
cmp
ja
daa
std
out
pop
sbb
xchg
pop
sbb
push
push
and
lret
orl
xchg
mov
stos
shl
addr16
mov
push
sub
pop
cmpl
mov
outsl
shlb
mov
cmpsl
xchg
push
mov
rcrl
ljmp
shlb
cmc
xor
inc
js
jbe
cmp
ret
mov
fisubl
xchg
jge
mov
imul
loopne
sub
jae
mov
mov
adc
sti
ss
pop
mov
cmc
shlb
inc
jecxz
cmp
pop
mov
int3
jmp
and
imul
fstps
mov
cld
mull
test
xchg
sarl
inc
cmpsl
mov
scas
mov
inc
repz
sbb
jmp
xchg
pop
loope
dec
or
shrl
xchg
ljmp
sub
loop
xchg
test
lea
mov
out
iretw
lcall
lds
lods
push
out
pusha
sti
loop
cli
out
cld
call
in
orl
sbb
mov
pop
add
sbb
imul
shlb
push
mov
push
pushf
xchg
fstpl
or
dec
jecxz
sub
pinsrw
pop
stc
clc
test
mov
mov
sub
clc
mov
cli
mov
push
test
mov
nop
add
sub
adc
sarl
sahf
dec
push
inc
inc
lods
cmp
lods
lahf
clc
aam
roll
mov
mov
push
loop
pop
xchg
filds
fstpt
jns
pop
addl
mov
push
sbb
mull
in
xchg
sub
and
ja
sbb
mov
fistpl
pushf
cs
pusha
push
daa
add
bound
fstl
mov
sbb
xchg
fwait
mov
aaa
clc
std
out
loopne
sub
sub
inc
cmp
iret
jae
push
icebp
movsl
jmp
xor
jmp
paddd
stos
mov
push
imul
xchg
push
lcall
mov
fildl
mov
lock
fcmove
cmc
push
into
lock
mov
xchg
movsl
mov
mov
imul
in
dec
fs
xchg
cmp
lahf
mov
mul
addr16
xor
in
jne
xchg
sub
ficomps
cltd
sub
aad
push
cmp
fwait
sub
pop
mov
dec
xor
shll
fcoml
adc
stos
adcb
scas
sbb
fdiv
dec
out
lea
adc
outsb
sub
loop
mov
lea
mov
jl
jae
mov
imul
das
aam
jo
push
push
add
push
cmp
and
outsb
leave
mov
popa
sbb
mov
jle
dec
xchg
dec
dec
imul
xor
pop
mov
sbb
or
fwait
int3
out
cmp
adc
pop
adc
notl
jecxz
adc
ja
test
inc
call
in
pusha
xchg
or
sub
hlt
xchg
sahf
loop
fcoms
add
or
mull
sub
pop
in
xchg
xchg
repz
inc
mov
pop
xchg
js,pt
add
push
stos
insl
and
mov
adc
loopne
lods
cld
pop
add
pop
push
dec
sub
outsb
aam
insl
hlt
int
dec
aaa
xchg
call
pop
mov
push
insb
dec
stos
nop
xor
push
xor
mov
pop
and
int3
jp
sub
pop
dec
cs
sbbl
cmp
inc
xchg
mov
orb
sub
mov
and
in
jnp
inc
push
push
xchg
hlt
insl
fisubl
mov
dec
test
inc
call
push
push
test
dec
cmp
or
xchg
test
cwtl
cmp
divb
lcall
or
sbbl
cmpsl
sbb
mov
xchg
fld
pushf
hlt
fidivs
scas
or
mov
sub
loope
lea
or
cwtl
sbb
push
inc
in
stc
jmp
std
push
mov
xchg
mov
cli
sub
xor
sub
pushf
fcomps
aad
jle
or
fwait
insb
rcrb
rcrl
lret
fisttpl
or
sahf
or
mov
mov
mov
fwait
out
sub
leave
repz
test
cmp
enter
xor
adc
int3
nop
mov
jl
sub
lret
inc
cs
push
lods
jo
fdivs
fmul
xor
push
in
pop
dec
std
int3
pop
xchg
pop
mov
sbb
adc
rorl
ret
mov
jecxz
cld
mov
push
pusha
mov
jg
mov
pop
inc
dec
sbb
push
jp
push
xchg
and
cmp
pop
push
mov
inc
push
mov
sbb
jae
loope
in
das
fdivrs
pop
mov
sbb
ret
js
sbb
dec
cmpsb
xor
and
dec
std
push
sti
push
cs
arpl
mov
ds
ja
xchg
fwait
pop
das
aam
fisttpll
sahf
out
mov
xchg
dec
cmp
sahf
jns
mov
push
xchg
cld
aas
clc
iret
in
mov
mov
push
cmc
stos
enter
xchg
xor
xchg
sub
int
jno
sub
push
divl
jno
push
jne
xor
mov
data16
push
icebp
mov
jno
lret
ss
jbe
mov
bound
sbb
mov
mov
stc
fcmove
aaa
inc
xchg
pop
cli
cmp
mov
jo
push
jp
jmp
rcl
fisubl
int3
repz
mov
js
popa
inc
jecxz
orl
scas
pop
mov
sbb
in
pop
in
lods
cltd
mov
lret
adc
xchg
movsl
sub
jnp
or
scas
push
mov
lret
sub
cmp
int3
les
push
cltd
dec
mov
mov
pop
cmpsb
mov
mov
and
dec
push
lret
outsb
jmp
xlat
mov
popa
test
inc
pusha
in
cmpsb
xor
pop
dec
pusha
iret
pop
ficompl
mov
jecxz
add
ds
cltd
hlt
mov
mov
mov
xchg
sub
mov
cmp
add
or
inc
imul
xchg
in
fs
arpl
xor
pop
icebp
rol
imull
in
and
inc
sarl
movsb
dec
mov
cmp
jle
das
lock
add
cmp
movsl
imul
test
insl
mov
cwtl
cmp
jge
inc
inc
in
or
icebp
xchg
loopne
fists
and
inc
fidivs
je
push
push
jmp
lods
outsb
jbe
cmpb
pop
dec
rcll
sbb
pop
popa
stc
sarl
xor
in
adc
lods
mov
cmpsb
mov
xchg
lret
stos
pop
je
aas
popl
sub
add
mov
mov
cld
cmp
outsl
fbstp
aaa
mov
dec
xor
push
lods
cmp
xchg
in
pushw
dec
cmp
jns
fsubrs
mov
sub
dec
sahf
jo
cltd
inc
push
adc
sbb
mov
adc
fildl
aas
hlt
cmp
add
mov
push
roll
js
xor
mov
imul
aad
imul
pop
cmp
gs
mov
cmp
clc
add
out
fimuls
cmc
push
xlat
push
inc
xor
lds
inc
int3
inc
xchg
pop
lret
test
mov
pop
pop
mov
mov
add
pop
cmc
and
inc
jae
fnstcw
mov
push
inc
jbe
push
ret
mov
cmp
pop
outsl
daa
pop
and
jae
in
dec
pop
xor
xchg
clc
cmp
fcmovnbe
dec
enter
cltd
cld
inc
dec
cmp
fisubrs
jne
gs
inc
cmp
inc
xor
or
loope
vmovdqu
inc
adc
or
sub
mov
sub
push
jge
mov
mov
repz
mov
stc
cmp
jp
scas
loope
pop
mov
mov
cmc
inc
add
ja
add
imul
xor
sti
dec
into
sahf
mov
inc
js
add
mov
test
add
xor
push
mov
sbb
les
and
bound
inc
lods
push
inc
jl
adc
dec
pop
xor
xbegin
and
sub
ja
movsl
mov
xchg
push
adc
xchg
ja
push
ljmp
adc
imull
jl
fldl
in
jb
xor
insb
in
test
ds
mov
std
fnstcw
mov
jp
lods
adc
mov
jecxz
bound
inc
ljmp
mov
push
dec
mov
or
dec
out
or
mov
jle
jnp
jge
imull
xlat
dec
test
inc
xor
insb
jns
roll
mov
pop
fistps
pop
ficomps
sbb
negl
out
mov
fsincos
adc
mov
in
xor
rolb
lret
test
or
pop
icebp
add
dec
sbb
scas
lock
mov
imulb
addb
iret
sahf
hlt
sbb
orb
push
loopne
imul
cmp
push
and
cmpsb
cmp
push
out
inc
lahf
insl
daa
ficomps
sub
or
jl
scas
mov
lcall
fdivrl
jl
lods
loop
imul
mov
insl
stc
out
mov
mov
xor
mov
add
cmc
sub
ss
lcall
adc
inc
cmp
outsl
push
push
sahf
pop
dec
stc
adc
xchg
faddl
insl
aad
arpl
stos
push
sbb
lret
je
adc
ja
add
add
mov
test
movsl
fucomi
addr16
and
std
sahf
pop
rolb
jb
sub
mov
lahf
mov
push
xchg
add
ljmp
mov
mov
pushf
fdivrl
sub
repnz
xchg
pop
and
jecxz
or
pop
cmp
xchg
mov
aad
lods
jo
les
insl
or
inc
je
aas
dec
std
mov
cmpsl
lods
andl
mov
int
xchg
aad
sbb
imul
cmp
xchg
lods
test
arpl
dec
push
xorl
lret
mov
inc
xchg
and
mov
dec
sub
xor
xor
stos
add
inc
pop
push
rorb
scas
add
into
and
in
xchg
inc
or
sub
jge
dec
push
pop
popa
int
fbstp
cld
sti
xchg
lock
leave
lds
mov
insb
sub
jae
dec
data16
addl
dec
push
fcompl
pop
jne
lds
mov
ffreep
pop
cmp
or
adc
push
or
ret
cs
out
sub
sbb
xor
ss
jbe
das
aam
jecxz
sbb
mov
pop
addl
in
dec
pop
xor
out
or
scas
jne
lahf
out
inc
mov
adc
mov
mov
sub
cltd
add
mov
je
addr16
movsl
sbb
mov
rolb
outsb
fisubl
mov
and
inc
xor
mov
data16
pop
and
lcall
push
adc
arpl
sub
dec
sahf
data16
push
jne
lea
jg
xchg
xor
sahf
push
cmpl
push
inc
sbb
js
sbb
pop
push
sbb
incb
add
mov
lds
rcrl
jmp
in
pop
dec
subl
data16
xchg
dec
sbb
mov
cmp
mov
mov
sub
inc
push
hlt
das
out
ror
out
mov
dec
out
cmp
or
dec
dec
cwtl
fucomp
das
sbb
inc
stos
mov
xor
pusha
cmp
inc
adc
addr16
push
out
inc
cmp
shrl
inc
push
mov
bound
xchg
xor
dec
xchg
out
cmp
in
push
movsl
mov
or
xlat
lock
rcrl
add
xchg
call
and
loopne
div
mov
insl
lock
jns
fildll
or
lahf
fadd
in
fstl
add
aad
mov
int3
mov
inc
dec
pop
adcl
cmp
sub
hlt
scas
jae
aaa
jmp
mov
adc
add
test
push
and
adc
je
fbld
jae
push
lods
mov
mov
xchg
movsbl
insl
xchg
cld
inc
inc
ret
push
ret
imul
xor
dec
xchg
add
push
jmp
mov
push
pop
jae
jmp
jmp
insl
mov
sbb
aaa
lock
xchg
dec
enter
jp
mov
lock
cmp
jge
xor
out
adc
mov
sbb
fwait
cs
pop
cs
iret
jg
cmovno
scas
jg
dec
pop
enter
jl,pt
sti
mov
into
jp
test
fidivl
flds
daa
mov
adc
popf
inc
xchg
xor
sub
shrb
push
lcall
or
sub
ret
icebp
fisubrs
inc
and
pop
pusha
sti
adc
xchg
repz
jb
and
sti
jb
sahf
adc
enter
lods
mov
dec
cwtl
fdivrl
adc
negb
cltd
mov
fstps
mov
dec
ljmp
mov
adc
test
int
notb
jbe
mov
and
pop
sub
filds
call
cwtl
flds
ja
fldenv
jmp
adc
xor
sbb
mov
sub
or
jge
leave
dec
into
mov
inc
dec
and
repnz
adc
lcall
jg
pop
fmull
sbb
cwtl
sub
mov
lods
dec
cltd
dec
shll
popa
outsl
cmp
pop
std
mov
test
enter
mov
mov
and
push
int3
xchg
pop
repz
cmp
mov
push
jecxz
or
or
mov
pop
jbe
adc
inc
dec
out
cmp
and
or
mov
test
cmp
movsl
fcmovnu
add
cmpsl
fs
pop
and
jno
pxor
jle
aad
adc
mov
adc
cmpsl
push
adc
inc
push
cmp
mov
fwait
add
out
and
jbe
xor
lds
sbb
sbb
push
mov
out
int
xchg
push
fdiv
fcomps
nop
inc
out
cmpsb
push
mov
push
mov
aaa
mov
insb
jnp
out
and
jle
fstps
pop
mov
ljmp
enter
sub
sub
pop
xchg
fwait
test
adc
dec
dec
pop
pusha
mov
push
dec
sub
mov
in
mov
fildl
mov
dec
out
nop
sbb
cmp
xchg
push
dec
nop
push
push
or
xchg
aas
jnp
test
into
scas
outsl
out
out
mov
and
push
cmp
push
mov
add
lcall
in
addl
cmc
push
xchg
inc
jmp
imul
mov
adc
xor
cmp
inc
dec
pop
cltd
fisubl
xchg
into
movsb
xchg
daa
les
fsub
imull
adc
movsb
jmp
out
rclb
mov
cld
movsb
movl
adc
pop
mov
insl
pusha
lret
mov
pop
jo
jb
xchg
mov
jge
or
movb
xor
push
pop
mov
ljmp
lea
xchg
ret
mov
jns
mov
mov
cmp
into
mov
xchg
scas
xor
imul
out
lahf
es
int
std
and
and
dec
fs
jmp
inc
sbb
sub
lret
push
dec
inc
sub
test
sub
repz
lret
aam
pushf
mov
jnp
push
subl
push
mov
enter
pop
jo
and
lock
testl
sub
mov
mov
je
pop
or
repz
stc
sub
iret
add
adc
scas
mov
cmpsb
cmp
cmp
cmc
mov
out
ficoml
popf
mov
jnp
out
js
insl
pop
lock
mov
jo
mov
xchg
cltd
xlat
outsl
scas
mov
sbb
jbe
loope
test
xor
jmp
adcb
jae
xor
rcrl
lock
insb
cmp
mov
je
cmp
rolb
addr16
cld
shr
es
jb
jnp
cmp
cmc
daa
mov
popf
lcall
sub
aaa
sahf
ficoms
pop
icebp
sub
shrb
stos
fmulp
mov
cmc
pop
push
jo
pop
sahf
fs
pop
xorl
sbb
scas
mov
xor
inc
hlt
jecxz
push
ds
mov
sarl
ss
aam
movb
cmp
cmp
sti
lock
shr
out
mov
iret
stos
pop
mov
push
mov
dec
stos
adc
pop
push
loopne
movl
aaa
push
push
je
call
push
mov
mov
stc
mov
push
ror
loop
xchg
mov
sbb
ficoml
insl
sub
aad
ljmp
aam
stc
imul
stc
cmp
in
cmp
pop
jle
mov
mov
nop
in
fmull
jno
adc
xor
cld
inc
cltd
inc
ret
jns
stc
lods
nop
mov
inc
mov
shrb
xlat
or
sbb
ret
mov
mov
mov
adc
ficompl
ficomps
imul
push
xor
divl
and
push
cmp
inc
jecxz
xorw
roll
mov
xor
cmp
subl
push
int3
inc
dec
inc
sbb
adc
lods
mov
add
cmp
pop
dec
mov
cmpsl
aas
inc
leave
mov
pusha
mov
lret
out
dec
popf
jge
dec
idivb
inc
jns
repz
mov
dec
jae
cmpsl
sbb
in
jbe
lret
add
fs
dec
rol
push
xor
or
push
push
mov
cmp
or
mov
mov
or
or
pop
jns
and
enter
pop
inc
or
dec
cmpl
lcall
cmp
jp
push
pushf
jbe
lahf
fisttps
xchg
cmp
ds
test
mov
cmpsl
sbb
mov
xor
dec
movsb
int
in
mov
jbe
ss
lods
fiaddl
ret
sbb
add
mov
cmpsl
cmp
push
rcrl
sbb
enter
jl
dec
test
rolb
and
rcrl
cmpsb
dec
test
inc
movsb
xor
inc
inc
and
jno
into
pop
out
cmpsb
adc
cs
fs
dec
stos
imul
jno
pusha
imul
or
jecxz
clc
pop
fnstsw
out
jbe
cwtl
sbb
testl
mov
push
lods
ljmp
jb
clc
cmpsl
cmp
adc
xchg
ljmp
sahf
and
add
insb
mov
mov
sbb
and
and
in
imul
pop
cli
xor
les
adcl
imul
push
imul
mov
aaa
lret
add
pop
test
jl
ds
pop
bound
push
add
aas
fbstp
test
and
ror
pushl
push
std
orb
subb
add
jge
rcrl
rorl
ljmp
stos
mov
or
in
and
loope
lcall
jns
popa
aas
push
test
and
mov
xorl
ror
pop
out
nop
mov
sub
adc
mov
mov
add
jnp
rclb
int
shl
xor
pop
push
inc
cmc
dec
pop
inc
push
sti
mov
stos
int3
xchg
adc
jp
lret
xchg
xor
xor
push
outsl
mov
jmp
push
adc
orb
lods
xor
adcb
pop
xchg
fstpl
ja
repnz
push
inc
lret
mov
fs
std
and
dec
mov
sbb
test
adc
mov
repz
xor
scas
stos
stos
sub
fidivs
aad
scas
jg
pop
sub
mov
shll
xchg
jg
adc
xchg
imul
jmp
xor
test
jp
and
mov
dec
movsl
mov
scas
mov
orl
loope
ja
xchg
iret
aaa
sbb
fdivrl
lea
or
addr16
mov
mov
jae
dec
daa
push
adc
push
mov
cltd
xor
bound
cmpsl
aaa
xchg
movsb
insb
loopne
mov
mov
or
shl
xchg
xor
pop
daa
jno
push
push
push
ljmp
mov
repz
bound
cmp
mov
idiv
cmp
adc
stos
jmp
xor
and
pop
mov
xor
bound
popa
sub
mov
js
and
push
and
enter
outsl
ljmp
stc
xor
jo
xchg
scas
imul
bound
lahf
inc
mov
adc
jge
cwtl
pop
pop
inc
popf
lret
mov
jmp
ljmp
and
dec
mov
mov
pop
aaa
loope
outsl
dec
cmovge
sbb
sbbb
sub
cwtl
dec
or
inc
mov
idivb
xor
push
stos
in
fdivrs
mov
mov
pop
push
push
in
inc
outsb
pop
xor
jp
pop
sub
je
std
mov
stos
mov
dec
dec
out
outsl
mov
sti
gs
mov
adc
cmp
imul
cli
fcmovnb
lock
pop
mov
mov
push
xchg
imul
inc
cmp
xbegin
test
jbe
ljmp
mov
rol
xchg
adc
inc
or
fimull
insl
or
mov
clc
sbb
int
push
in
and
sahf
mov
adc
or
mov
xchg
gs
pop
inc
mov
es
loope
push
aad
popf
lods
mov
outsl
adc
jmp
xor
add
mov
leave
dec
mov
sbb
jl
jnp
mov
cmp
cmp
and
or
jne
add
mov
dec
inc
push
mov
push
cmpsb
daa
lock
cmp
cmp
xor
pop
hlt
data16
lahf
jo
push
sub
xchg
mov
mov
les
outsb
xor
and
push
push
aaa
inc
mov
aad
loope
xor
pop
sub
xchg
nop
bound
lock
roll
add
dec
stos
inc
pop
jg
mov
inc
sub
jmp
and
mov
or
mov
inc
lods
insb
xchg
sbb
xchg
jle
or
sub
inc
sbb
xor
pushl
in
pop
gs
xchg
sub
adc
inc
inc
mov
int
int
pop
aam
sub
inc
inc
xchg
movsl
or
cmp
jb
iret
js
into
ficompl
lret
pop
jl
leave
jge
call
add
aas
bnd
mov
mov
std
pop
testb
or
inc
mov
fcoms
repz
adc
arpl
jl
fsubrl
cmp
cmp
mov
cmp
fildll
jb
lock
sbb
xor
mov
mov
cmc
jbe
sbb
ret
push
faddp
repz
jl
or
sbb
cs
mov
sub
cs
inc
stos
rolb
call
imul
mov
pop
ret
mov
mov
aaa
cmc
sub
stos
pop
lahf
aam
bound
ss
mov
icebp
stos
cltd
push
or
stc
sub
or
mov
loop
xchg
jp
mov
fwait
das
test
jo
out
cmp
pop
mov
repz
pop
aas
xchg
loop
xor
shll
mov
mov
std
and
arpl
ds
dec
sbb
test
sbb
add
adc
ret
enter
or
orb
and
jns
scas
adc
mov
mov
inc
mov
push
movsl
aam
mov
jecxz
add
cmp
outsb
scas
xor
jae
inc
mov
dec
mov
adc
lret
pop
cmpsl
push
and
adc
pop
lea
cmp
movsl
es
cmp
dec
ss
inc
xorb
test
mov
dec
pop
xor
cmp
leave
or
mov
les
leave
dec
sarb
push
sbb
jne
push
daa
jnp
aaa
mov
test
inc
jmp
leave
cmp
test
sub
popa
in
cltd
push
rcll
xchg
in
mov
adc
inc
adc
pop
test
cs
loopne
or
lods
loop
dec
dec
mov
push
mov
push
pop
push
adc
repnz
jb
mov
pushf
daa
mov
fmul
adc
enter
mov
sub
pop
mov
lea
fldenv
and
pop
es
mov
mov
fwait
or
mov
daa
ret
pop
fiadds
movsl
icebp
arpl
inc
push
or
sub
es
mov
mov
fdivs
inc
repz
mov
dec
xchg
fsubl
out
outsl
sub
push
cmpl
xor
or
push
testl
dec
fists
mov
mov
out
xchg
jp
popf
fistpl
or
ret
mov
sbb
push
mov
and
repz
xlat
pusha
or
fsts
movsb
pop
hlt
inc
mov
outsb
sarb
sub
pushf
xchg
loope
push
rorl
push
push
lret
std
pushf
dec
cmp
div
push
movsb
mov
lcall
xlat
movsl
cmp
pop
cmc
adc
xor
sbb
imul
sbb
lcall
ss
jae
imul
cwtl
movsb
cs
mov
into
cltd
cltd
aaa
pop
and
sub
fiaddl
out
rcl
leave
imul
fcoms
repz
cmp
sbb
pop
mov
and
xorb
inc
mov
cmp
lods
and
jl
adc
outsl
inc
push
hlt
mov
cli
cmp
xor
push
pop
adc
scas
add
cs
push
mov
jge
mov
fiaddl
pop
or
adc
imul
sbb
push
imul
jle
pop
adc
sub
jecxz
sbb
imul
mov
rorl
js
loopne
mov
in
xor
pop
js
jns
cmpsb
loop
sbb
lcall
into
cmp
lret
mov
sub
imul
sbb
aas
lock
dec
xchg
int3
mov
mov
pop
add
test
loope
inc
add
dec
inc
mov
jmp
hlt
pushf
dec
lahf
popf
mov
ja
sub
sarb
dec
cmpsb
imul
jbe
cli
add
jg
pop
xchg
sub
dec
mov
cmp
xchg
jmp
repz
js
ds
dec
dec
dec
arpl
movsl
movsb
mov
out
add
pop
and
xchg
sahf
or
push
jecxz
enter
push
pusha
lods
ret
cli
mov
mov
lock
mov
and
adc
sbb
stc
sbb
loope
fcomp
int
stc
push
push
sbb
cmp
mov
data16
inc
scas
mov
pop
popf
mov
xchg
sub
stos
icebp
mov
pushl
int3
icebp
or
add
jb
push
ja
test
mov
push
xchg
xorl
inc
int3
pusha
mov
dec
dec
insb
scas
orl
pop
mov
pop
fdivr
inc
int
or
add
or
cli
mov
subb
xchg
jmp
test
cld
xchg
call
dec
fmuls
mov
loop
fsubrl
rcrb
test
nop
outsb
in
xchg
pop
mov
jp
subb
pushf
mov
js
test
aad
std
icebp
fidivl
pop
icebp
pop
daa
push
pop
in
in
std
fwait
rorb
outsl
sarb
push
mov
mov
outsb
xchg
cs
sbb
xchg
in
xchg
push
mov
jmp
in
enter
sub
xor
jle
sbb
negl
inc
fdivl
push
pop
and
idivl
or
xor
repz
mov
push
loop
mov
inc
js
xor
xchg
pop
push
jge
mov
es
adc
clc
dec
ret
es
jge
jp
je
cmp
jns
xor
push
js
jns
lret
sahf
orl
push
das
das
cmp
cmpsb
mov
stos
mov
jo
cmpsb
cmp
aaa
call
xchg
dec
push
or
lret
repnz
cmp
repnz
shll
jge
pusha
in
mov
pop
or
jb
xchg
mov
fxch
or
and
adcl
sub
mov
jae
mov
cmc
test
jae
mov
sub
std
push
fs
xchg
and
imul
sub
arpl
aas
add
and
movsb
pusha
rcll
imul
xor
ja
fisubrl
jl
mov
xchg
lods
push
cld
inc
or
cs
mov
lds
jg
mov
push
lds
mov
jbe
loopne
xchg
std
mov
ret
data16
xchg
test
push
lods
and
in
sahf
mov
repz
inc
imul
jp
and
pop
addr16
js
notl
js
add
mov
lods
out
cmp
int
adc
and
in
push
inc
sbb
push
sub
mov
jne
je
push
cmp
cltd
push
cmc
jg
xchg
jecxz
sbb
mov
mov
jg
inc
mov
adc
aas
daa
xor
cs
push
lret
loop
xchg
sti
stos
mov
outsb
and
fwait
cmp
jbe
lds
icebp
jno
and
jle
popa
and
fsts
lret
sub
jecxz
lds
inc
lods
mov
mov
iret
mov
imul
xlat
cmc
jno
cwtl
cli
lds
dec
in
mov
fildl
dec
daa
sub
mov
jbe
inc
jae
out
or
repz
dec
push
and
cmp
adc
popa
mov
data16
and
daa
and
rcpps
icebp
lods
loop
mov
out
pop
xchg
jecxz
shrl
mov
push
xchg
mov
sbb
cmp
xlat
adc
sub
mov
subps
sbb
daa
mov
mov
fnstenv
dec
pop
popaw
sub
add
popf
ljmp
decb
inc
mov
shll
aam
mov
push
mov
repnz
and
sub
dec
das
or
lea
inc
inc
inc
loope
sbb
lods
mov
sbb
lcall
in
repz
cmpsb
pop
sahf
in
pop
aam
add
mov
xchg
or
lock
arpl
adc
xor
or
push
rolb
movsl
or
pop
nop
test
or
sti
adc
adcb
mov
enter
enter
in
imul
cmp
scas
mov
cwtl
cmp
sbb
dec
mov
nop
mov
lahf
je
cmp
sbbl
xchg
es
xor
cmp
inc
ret
les
ja
out
pop
stc
scas
lret
mov
mov
fdivs
in
insb
or
sub
inc
fwait
addr16
popa
pop
pop
mov
cmp
ret
stos
inc
adcl
enter
lret
ljmp
rorl
mov
or
in
mov
jo
inc
imul
orb
jmp
es
notl
outsb
ljmp
fdivp
ret
scas
fnstenv
in
int3
xchg
push
or
jmp
dec
xor
pop
cmp
mov
loop
mov
push
aam
pop
jge
inc
popa
cmpsl
test
ffreep
lods
or
sbb
push
fldt
and
das
lcall
and
and
test
mov
xlat
sub
scas
out
aaa
adc
int
jae
out
mov
adc
dec
jno
xchg
dec
sbb
inc
mov
int
adc
cli
jle
icebp
je
jmp
aaa
pusha
mov
sbb
mov
clc
cmp
and
push
sub
popa
push
xchg
xor
inc
dec
pop
gs
sub
testb
je
cltd
ja
cmc
aas
ficompl
adc
jbe
in
mov
pop
push
xchg
mov
dec
mov
mov
sub
xchg
in
push
cld
loope
sbbb
push
outsb
jecxz
cmp
sub
call
in
jg
xchg
mov
mov
adc
jo
xor
mov
fildl
xlat
sarl
adc
mov
leave
out
insb
in
shlb
idivl
mov
jne
in
rcrb
mov
sub
imul
pop
inc
fiaddl
ret
in
inc
mov
xchg
jle
test
mov
lock
dec
mov
out
roll
push
in
dec
inc
adc
aaa
popf
or
outsb
inc
in
cmp
test
pop
movb
add
jae
int
mov
iret
pop
into
popf
loopne
scas
mov
cmpsb
shlb
push
pop
es
pop
das
les
mov
scas
dec
das
pop
faddl
and
scas
xchg
adc
inc
ds
mov
dec
mov
sub
cmp
mov
imul
shl
cld
and
push
dec
lcall
hlt
test
fnsave
pminsw
insb
shlb
or
and
and
sbb
pop
push
cmpsb
xchg
xor
stc
add
shll
andb
fnsave
lcall
sub
inc
loopne
loop
bound
pushfw
ss
cmp
jns
test
add
and
push
loope
xchg
ret
dec
std
nop
jo
sub
inc
out
and
jbe
iret
cmc
and
adc
jl
hlt
into
jnp
inc
xchg
in
fsubrs
pop
sbb
sti
mov
in
and
mov
dec
mov
pusha
or
sbb
sbb
insb
rcl
xchg
jg
xor
and
or
dec
xchg
cmp
fldl
cmp
pop
dec
fwait
jnp
test
cmpsl
add
xchg
out
pop
fcoml
add
inc
inc
sbb
shll
sahf
jle
cmc
je
xor
cmpsl
rcrl
mov
lods
xlat
in
in
fldcw
js
mov
xchg
adc
jb
cs
ret
and
mov
or
pop
out
outsl
insl
addr16
add
cltd
pop
loope
adc
push
push
pop
and
ss
add
add
xlat
jb
push
adc
incl
jae
inc
in
in
sahf
mov
jb
dec
sub
ja
mov
jecxz
notb
add
shlb
and
adc
xor
aaa
ret
lock
mov
insb
leave
cmp
jecxz
mov
xchg
shrl
xchg
lcall
addr16
movsl
jg
cwtl
lahf
pop
and
ret
inc
xchg
xchg
cmp
inc
fbld
insb
jae
or
pushf
negb
add
lods
sbb
les
daa
or
jmp
jl
or
enter
fs
mov
jge
bound
loop
aad
fcos
or
rcrb
mov
stos
enter
cmp
sub
ja
cmpsl
insb
mov
shrl
mov
dec
mov
sub
sub
mov
cmpsb
mov
movsb
cld
push
shlb
shl
cltd
addr16
fsubs
jle
cmpsl
lds
xchg
or
outsb
dec
stos
sbb
adc
repz
shr
inc
adc
push
cmpsl
xlat
inc
cmp
mov
cmc
std
jge
xchg
mov
xor
int
nop
ss
sti
dec
sbb
pusha
cltd
or
dec
sub
pop
cmc
dec
push
xchg
pop
repnz
dec
xor
repnz
insl
ret
iret
mov
mov
pop
pop
sub
xor
bound
dec
hlt
repz
sbb
sub
bound
push
xchg
fwait
ljmp
xlat
movsb
jmp
add
xor
stos
imul
into
imul
ficomps
and
outsb
lret
adc
movsl
cwtl
pop
jae
jg
sub
add
xor
cs
stc
inc
ss
pusha
popa
cmp
mov
sbb
mov
jl
daa
jmp
xchg
and
push
adcl
lock
and
ret
inc
ss
dec
mov
notl
aam
xorl
cmp
push
mov
jg
sub
out
es
xchg
push
push
bound
cmp
stos
dec
mull
push
mov
cmp
lods
mov
mov
int
jo
inc
mov
outsl
lcall
out
and
mov
push
push
and
subl
sbb
sbb
push
repnz
dec
aam
in
idivl
sbb
fistpl
mov
sbb
mov
insb
mov
push
adc
ss
aam
cli
fwait
popa
cmpsb
cmp
mov
sbb
mov
in
push
lret
or
decb
sbb
cmp
shll
cwtl
xchg
imul
mov
cmpb
in
roll
adc
inc
xorl
cltd
popa
sub
mov
inc
cltd
push
imul
sti
scas
orl
sub
pop
in
mov
jecxz
imul
and
xor
outsl
dec
lcall
in
lods
pop
imul
js
in
inc
xor
mov
repz
outsb
push
rcll
mov
sbb
dec
and
jp
lds
mov
lret
bound
xchg
das
jns
xchg
xchg
mov
stc
jmp
icebp
ss
sbb
int
nop
fldt
out
or
arpl
cmc
sub
nop
jae
pop
ds
test
popa
sub
les
mov
dec
push
inc
cmp
jns
out
xor
scas
jg
jecxz
cmp
cli
fsubp
pop
push
jle
nop
adcb
and
inc
jae
add
loope
ss
das
sub
mov
mov
sbb
cwtl
popf
inc
mov
jo
pop
mov
jmp
lahf
pusha
mov
cs
test
int
inc
jnp
fimuls
and
inc
xchg
fimull
sbb
push
cs
insb
lock
xor
jp
loope
dec
dec
sub
test
mov
int
bound
pop
mov
jo
inc
xchg
std
adc
mov
fwait
and
xchg
xchg
xor
in
popf
jge
cmp
pushf
das
xor
lods
jne
xlat
cld
mov
hlt
add
das
sbb
cwtl
cmp
xchg
addr16
cmpsl
push
popa
sub
push
inc
ds
fisttpll
pop
fwait
jg
pop
xor
and
mov
push
dec
and
xchg
pop
dec
lock
xchg
ds
pop
add
test
pop
xchg
adc
mov
pop
adc
js
and
sbb
lods
adc
stos
xchg
mov
popa
repz
dec
je
movsb
lcall
jno
add
pop
movsb
mov
xchg
out
mov
sub
inc
push
push
cmp
loopne
imul
jo
repnz
das
mov
popa
jle
ja
push
and
push
mov
lods
rcrl
test
xor
lds
or
mov
divl
nop
es
cld
imulb
push
in
pop
adc
out
arpl
mov
call
sbb
push
shl
or
cwtl
and
insl
dec
outsl
xlat
xchg
out
mov
inc
leave
jae
test
iret
pop
mov
xor
add
lahf
or
jb
jno
cld
fwait
mov
out
mov
mov
cmp
and
nop
scas
pop
mov
addr16
add
repz
idiv
mov
cmp
xchg
mov
sbb
mov
sahf
ret
out
pop
into
lahf
push
jae
and
fldcw
ss
mov
add
inc
push
notl
adc
jmp
orb
jecxz
pop
mov
adc
fmuls
mov
jne
add
push
enter
insl
mov
loop
fcmovnbe
mov
ljmp
ret
sub
aaa
sahf
mov
and
mov
iret
cmovno
sbb
jo
pop
xor
sub
sbb
adc
mov
movsl
scas
rcll
sub
jg
xchg
into
test
lcall
test
mov
sub
xchg
xchg
leave
test
push
xor
stos
adc
jg
cmp
xor
mov
iret
xor
xorw
pusha
push
jne
mulb
in
add
sbb
imul
jge
dec
jg
mov
lret
adc
mov
push
iret
imul
in
jae
add
inc
lds
mov
dec
cwtl
insb
mov
dec
jmp
movb
ss
cmpsl
and
dec
scas
ja
adc
mov
sub
mov
or
and
aam
and
push
xor
loopne
js
imul
jge
hlt
rorb
nop
mov
daa
sub
inc
mov
stos
sub
in
lods
cmp
int
or
stos
icebp
ja
sarb
or
mov
rcll
popf
data16
aad
jbe
mov
sbb
fs
aaa
mov
in
les
push
push
pop
jo
pop
jmp
jge
mov
mov
outsl
push
pusha
sbb
into
jecxz
adc
push
push
ss
xorl
insl
xbegin
pop
movsl
fisubl
inc
aad
sti
xchg
popf
xchg
inc
jle
xchg
xor
mov
push
lcall
ret
push
imul
mov
lret
dec
cltd
push
lahf
les
nop
push
mov
out
xor
cmp
sbb
mov
jb
xor
cli
shrb
test
pushf
clc
sub
les
sbb
jecxz
and
sbb
ficoml
es
scas
jns
stos
mov
cmp
inc
fistpll
enter
pop
rorb
mov
ja
jns
add
xchg
pusha
les
cli
jno
pop
fwait
and
std
jecxz
das
push
aad
sub
mov
sub
sbb
xchg
sbb
ret
imul
aam
subb
pop
push
insb
mov
ja
pop
into
xchg
ret
xor
sub
lea
adc
push
dec
sub
mov
icebp
xchg
push
mov
movsb
mov
int3
outsb
loope
dec
mov
push
add
xor
test
jae
mov
mov
pop
lock
insl
sbb
pop
and
enter
mov
mov
cmpl
dec
mov
push
jns
pop
mov
mov
shll
push
dec
jl
movsb
and
cmc
xor
dec
hlt
mov
mov
ret
mov
pop
add
addr16
sbb
jl
jnp
imul
sbb
fimuls
in
add
sbb
lea
push
mov
sbb
sbb
xlat
outsb
mov
mov
sub
mov
push
and
popa
push
or
inc
push
adc
jbe
es
push
insl
je
push
aam
inc
andl
sbb
fdivr
or
scas
aad
iret
gs
fisttpl
dec
jmp
cwtl
ja
fwait
clc
mov
scas
adc
xor
xchg
gs
daa
int
adc
lret
cltd
sub
add
out
pop
in
std
fistpll
ljmp
add
mov
mov
inc
jmp
in
lea
repnz
cmpsb
repz
inc
lcall
and
in
dec
xor
adc
popa
mov
pop
pusha
sub
push
pop
mov
or
arpl
repz
hlt
inc
add
iret
mov
loope
adc
mov
icebp
jbe
mov
out
mov
js
out
call
xor
push
dec
sub
aad
mov
sbb
and
cmp
adc
pop
leave
xor
jmp
inc
in
xchg
xchg
xchg
mov
jae
jmp
xor
xchg
sbb
pop
arpl
xchg
xchg
jecxz
sub
xorl
xlat
pop
insb
inc
hlt
or
jge
ljmp
aad
lcall
pop
pusha
add
cli
daa
and
data16
jp
mov
in
add
xchg
mov
xchg
loopne
sti
mov
mov
push
xor
push
mov
xchg
idivl
mov
push
loopne
lret
and
jno
xchg
sub
stc
je
icebp
or
nop
cmpsb
adc
into
outsl
scas
xorb
mov
arpl
dec
mov
mov
xlat
mov
cmpsl
gs
popf
mov
mov
mov
lea
inc
adc
mov
mov
test
popf
fistps
lahf
mov
and
shrl
inc
cld
rcll
imul
leave
lret
sub
loope,pn
adc
mov
adc
cmp
sahf
fisttpll
xor
popf
aas
ror
jbe
lock
sbb
mov
cld
shll
icebp
dec
push
dec
std
cwtl
les
sti
hlt
in
insb
jle
cmp
add
dec
mov
cmpsb
in
cmp
push
aad
fs
adc
ret
dec
shl
or
popf
mov
insl
push
inc
imul
ffreep
loop
dec
mov
or
mov
dec
push
inc
mov
inc
test
lea
jg
ret
mov
pop
stc
popa
fnstcw
in
cmp
xor
loope
adc
push
push
xor
testl
loope
lds
xor
leave
sub
and
push
lods
push
mov
insb
push
aas
sub
hlt
pop
push
xchg
and
cmp
ffree
fcmovu
ljmp
fstpt
neg
dec
mov
sub
repz
loop
jb
movsl
into
adc
fists
imul
rorb
addl
push
mov
ret
test
dec
out
repz
push
pop
fisttps
sti
mov
and
push
cmp
mov
stos
push
les
mov
or
adc
mov
iret
mov
mov
mov
std
jge
sbb
js
xlat
and
mov
lcall
imul
and
mov
std
or
fcmove
ret
stc
mov
out
addr16
ljmp
dec
cwtl
mov
sub
lock
movsl
scas
xorb
xlat
sbb
orb
aam
dec
aaa
mov
out
push
push
loope
sub
xchg
push
and
imul
xchg
ret
mov
inc
inc
lods
mov
mov
sub
push
subb
sub
lahf
jno
std
push
mov
push
pop
dec
cmp
std
sub
dec
push
iret
es
pop
jmp
cmp
pop
mov
test
push
inc
jne
xchg
xchg
sub
fwait
and
imul
cmc
or
sub
inc
test
faddl
cmp
filds
dec
xor
inc
lret
xor
sub
jnp
dec
adc
xchg
cmp
sbb
sbb
scas
lds
jns
pop
dec
push
push
aas
lea
movsl
lds
out
test
stos
loope
inc
cld
mov
into
sbb
movb
scas
dec
aas
leave
jge
sbb
loopne
fwait
ds
adcl
push
sub
sub
dec
mov
addr16
fmull
xchg
and
cld
or
xor
nop
push
jno
cld
and
rorb
bound
dec
or
shlb
mov
xor
inc
rcrl
mov
lret
dec
xchg
sbb
in
repz
imul
mov
pop
int
repnz
xor
xchg
and
cmp
loop
das
idivl
xlat
adc
lret
popf
outsl
pop
mov
dec
xchg
sub
jge
and
xor
adc
movsl
imul
cwtl
sub
pusha
inc
mov
lods
cs
cltd
mov
jne
adc
arpl
jb
cmp
mov
test
add
movsb
dec
push
push
mul
push
dec
loope
ss
jecxz
sbb
js
mov
adc
daa
jbe
sub
jne
pop
xor
loopne
adc
imul
cmp
xchg
jno
flds
pop
lods
lahf
sbb
loope
stos
mov
js
and
pop
out
inc
xchg
add
in
cmp
lds
outsb
ret
loope
xchg
push
stos
aas
jbe
and
int
je
lea
dec
out
insl
sbb
cwtl
pop
stos
scas
jl
jle
scas
dec
mov
stos
jns
stc
into
sbb
push
mov
es
xor
add
xchg
xchg
cmp
scas
xchg
cmp
fs
mov
cmp
out
inc
xor
jo
xor
into
jl
push
xchg
or
xor
ljmp
push
sbb
loope
push
pusha
pop
add
dec
stos
mov
shlb
je
insb
mov
mov
jns
int
clc
mov
or
push
dec
xchg
push
imul
cmp
shlb
add
lods
movsb
imul
adc
dec
xchg
xchg
inc
roll
mov
push
xlat
xchg
out
int3
aam
xor
fldcw
inc
jge
dec
mov
xchg
shll
aaa
jne
insl
push
cmp
mov
lcall
mov
pushf
mov
lds
ret
lret
push
cmp
adcl
sbb
ds
jnp
fcmovb
aad
push
cld
out
mov
mov
rcll
mov
int
mov
mov
inc
or
test
or
movsb
push
push
fnstcw
or
icebp
in
xlat
mov
mov
cs
adc
xchg
xlat
xor
aad
mov
and
cmc
adc
fiadds
mov
pop
xor
ja
aas
jae
push
jno
out
mov
mov
es
aam
movzwl
cmpsl
mov
sub
sub
pop
push
xchg
out
in
lahf
clc
popa
dec
sub
pop
ljmp
pop
sbb
xchg
in
imul
loop
mov
ficoml
in
bound
push
ret
ret
sbb
xor
mov
rcl
and
jmp
addr16
mov
mov
adc
sti
pop
mov
sbb
jge
mov
out
push
or
jge
rorl
push
add
mov
or
xor
lret
jb
fdiv
mov
cmpsb
cld
out
jno
lods
dec
inc
xchg
jnp
xchg
push
dec
movsb
mov
sub
lret
adc
shll
mov
pop
cmp
xchg
out
dec
lds
xchg
aam
lea
or
sbb
cmp
ret
xchg
jmp
rcl
jg
pop
pop
int
mov
cwtl
jbe
inc
jle
sub
pop
jmp
mov
nop
lret
mov
xchg
sbb
ror
mov
fwait
xchg
pushf
xor
xchg
xor
pop
leave
jne
pop
movsb
ja
pop
jl
imul
pop
or
jmp
adc
adc
push
fldt
dec
mov
xchg
ret
xchg
cmp
hlt
ret
daa
dec
and
cmp
push
cmp
xor
fbstp
nop
ror
inc
movsb
mov
xor
test
aad
mov
fldcw
and
sub
jecxz
adcb
insb
pop
fnsave
push
jle
fcoml
dec
out
xor
rorb
adc
push
ljmp
pop
push
dec
pop
sbb
mov
mov
in
out
mov
dec
loop
lret
lods
dec
mov
mov
adc
je
enter
idivl
mov
pop
adc
push
mov
pop
mov
or
jmp
pop
mov
aas
or
fisubrs
stos
mov
cs
dec
imul
dec
pusha
testl
inc
mov
outsb
int
movsb
test
je
les
pop
out
shlb
mov
pop
xor
lods
and
ret
xor
mov
dec
int
sbb
mov
jae
or
test
mov
adc
pushf
lret
sbb
mov
jns
pop
and
in
rolb
scas
push
int
lods
stos
inc
pushf
pop
and
fwait
jns
idiv
sbb
xchg
int
xor
xor
aad
stc
shrb
cmpsb
ret
test
pop
sti
jbe
add
sub
ror
dec
sub
jl
push
repz
in
inc
jb
loopne
popf
bound
push
scas
xor
pop
xchg
enter
sbb
call
push
pop
loope
loopne
fimuls
es
sub
aaa
lahf
xorl
aaa
data16
mov
or
mov
les
pop
xlat
lock
loope
cmp
sub
or
leave
mov
mov
cmp
fadds
mov
xlat
and
in
mov
jge
cli
nop
jb
jns
adc
jg
adc
cmp
cmp
cmpsb
mov
push
stos
mov
xchg
xchg
aas
subb
ret
xchg
addl
inc
jae
mov
inc
mov
mov
int
shrb
and
xchg
mov
pop
repnz
lahf
and
inc
lods
mov
xchg
aaa
push
dec
nop
adcb
insb
sbb
data16
cltd
jmp
pop
testl
adc
push
pop
imul
push
les
aaa
push
jo
pusha
insl
add
test
lcall
sub
outsb
sbb
in
sbb
inc
das
roll
rcrl
push
mov
xlat
jae
mov
movb
jns
mov
shr
jo
xchg
int3
enter
shl
inc
mov
mov
lea
xchg
xchg
nop
pop
lret
xchg
jmp
iret
pop
icebp
movsl
gs
jg
fidivrs
test
sub
inc
shrb
test
cmp
or
repnz
pop
ret
sbb
cmp
sbb
add
and
jo
popa
xchg
loope
je
mov
xchg
cwtl
inc
rolb
push
pop
fwait
jne
adc
sti
mov
fwait
aam
int
xchg
jae
pop
cmova
mov
push
repnz
mov
jle
inc
mov
ret
nop
into
inc
pop
or
cmova
aaa
shrl
into
cwtl
lret
ljmp
loop
cld
negb
dec
fcoms
insb
adc
repnz
push
pop
xor
xchg
xchg
scas
test
imul
in
sbb
push
add
rolb
jecxz
pop
mov
lahf
xor
fidivrl
adc
mov
jno
cmpsl
cmc
xchg
or
cmc
leave
cmpsl
ret
add
jmp
xchg
into
cmp
pop
outsl
lock
aas
dec
dec
xchg
pop
aam
fisubrl
cmp
fcoml
jle
sbb
dec
xchg
add
push
int3
out
inc
jae
les
subb
lret
pusha
sarl
inc
leave
xor
test
outsl
gs
mov
cmp
sub
mov
test
jne
sub
dec
xchg
pop
popf
rcll
movsl
xchg
xchg
and
push
das
xchg
pop
cltd
sbb
mov
movsl
into
lret
shrb
mov
xor
decb
or
test
test
mov
push
movsl
and
adc
add
and
jg
test
call
jno
mov
jle
adc
xor
pop
cwtl
imul
sub
adc
push
data16
jmp
inc
and
dec
inc
inc
inc
pop
lods
leave
imul
push
lock
mov
test
mov
adc
push
bnd
scas
push
mov
push
push
push
or
xor
pop
xlat
pusha
nop
sbb
sar
rclb
inc
gs
std
inc
movsb
xor
repnz
pop
das
jo
cmp
sub
mov
add
xchg
sbb
pop
cli
mov
roll
fsubrl
ret
fwait
pop
in
and
daa
enter
in
push
jne
xchg
lret
mov
add
sbb
lea
fsubrs
out
js
sbbl
pop
data16
mov
lock
movsl
notl
sbb
sub
pop
test
mov
add
out
mov
inc
add
pop
sbb
jmp
imul
adc
jns
adc
outsb
mov
mov
mov
adc
jns
les
jb
lret
test
out
shll
mov
testb
xor
mov
rorl
push
add
ja
cltd
dec
jmp
push
test
ss
sbb
xchg
sub
icebp
jbe
dec
fsubl
mov
and
inc
stc
xor
push
and
out
cs
mov
inc
and
push
rcrb
insl
lahf
iret
fdivrs
mov
int
stc
jl
pop
and
cmp
lahf
int
ficoml
xor
enter
loop
pop
mull
popf
xchg
aam
mov
add
loope
aam
stos
loope
frstor
jl
cmc
lods
popf
cmc
scas
xor
fwait
pop
xor
and
pushf
xchg
add
mov
xchg
jge
ficoms
daa
xchg
lea
outsl
jb
out
mov
or
cmp
mov
mov
add
mov
push
pop
sar
mov
mov
add
cmp
repnz
mov
iret
push
push
push
sbb
jecxz
mov
lret
lcall
loope
fdivrl
inc
adc
cmpsl
mull
lods
push
pop
mov
int
mov
dec
arpl
jg
jmp
in
xlat
stos
fmuls
loop
inc
sbb
jmp
lods
nop
pop
aaa
test
mov
loope
dec
leave
sub
mov
repz
ret
pop
xchg
jb
in
push
cmp
sub
arpl
cmpb
xor
sbbl
fimull
insl
in
jle
jnp
push
ja
mov
ret
cmp
or
jb
mov
das
cmc
pop
pop
sbb
jge
loopne
xchg
mov
out
dec
xchg
test
or
mov
push
inc
push
stos
in
push
and
mov
jnp
jne
lods
xchg
aad
jl
clc
inc
mov
pop
or
and
subl
es
jg
push
cli
adc
lret
loope
stos
ja
int
dec
sbb
mov
lcall
mov
inc
jns
add
out
jle
jno
cmp
icebp
xchg
and
xchg
ja
sub
popf
xchg
mov
leave
xor
or
xor
int3
roll
cmp
adc
leave
pop
jb
cmp
shrb
mov
inc
arpl
aam
loope
test
push
or
xor
lds
int3
out
flds
add
xor
insb
cmpl
and
popf
das
mov
ret
hlt
xor
test
cmp
or
cmp
add
mov
adcl
rcl
push
dec
roll
add
addl
cs
int3
adc
test
leave
ljmp
cmpl
mov
push
sbb
push
push
or
fidivs
pop
sbb
outsb
or
pop
mov
ds
sarl
mov
sti
pop
pusha
ret
push
lret
out
stc
sub
and
and
stos
mov
inc
dec
es
or
test
insb
mull
jmp
icebp
pop
lahf
sub
shll
lock
out
or
dec
lea
sub
fsubrp
filds
mov
and
dec
outsb
pusha
cmp
into
inc
lock
les
into
call
outsl
mov
pop
mov
sbb
sti
dec
insl
sahf
outsl
add
sbb
fbld
jne
xchg
inc
scas
iret
cmpsb
out
inc
add
mov
std
ja
data16
pop
in
mov
jae
leave
test
idiv
inc
adc
sub
sti
jne
and
mov
add
in
jne
dec
leave
and
dec
loope
je
mov
lahf
xor
mov
mov
and
mov
cld
mov
xor
mov
pushf
inc
sub
ret
cli
cmp
ds
inc
dec
into
in
jns
xlat
stc
rorb
cld
xlat
dec
leave
dec
jb
ret
inc
push
adc
push
xlat
or
scas
mov
mov
lds
push
mov
dec
push
fsubrs
add
jle
pop
and
push
dec
imul
scas
loopne
fwait
jne
jns
push
mov
inc
aam
mov
mov
add
and
cmpsl
adc
inc
fistpl
dec
cmp
js
imull
pop
cmpsb
mov
fiaddl
inc
xor
js
addl
cmpsb
push
inc
mov
iret
mov
clc
mov
leave
xchg
mov
mov
stos
test
sahf
xchg
dec
and
sbb
cmp
mov
cwtl
push
imul
xchg
cltd
iret
mov
cmp
subb
push
push
data16
scas
in
push
add
and
xchg
sub
ret
dec
inc
jo
aas
rclb
adc
lock
stos
ja
mov
push
dec
addb
pop
or
pop
jle
mov
dec
leave
sbb
adc
popl
sarl
subl
in
xor
mov
cmpsl
pop
jae
clc
mov
adc
xchg
and
jge
xor
push
into
push
sahf
incb
pop
push
dec
lret
mov
test
xor
bnd
lahf
sbb
dec
jo
dec
aas
xchg
push
jne
call
sti
adc
pop
repz
cmc
in
jnp
call
jne
xchg
jbe
insb
cmpsb
xor
push
daa
cmp
dec
xchg
lock
xor
sub
loop
adc
neg
pop
loop
xor
test
xor
arpl
gs
and
fsubrs
jecxz
push
cmp
or
cld
or
mov
clc
imul
rclb
mov
inc
mov
and
call
adc
xor
sbb
xchg
call
lock
push
lret
ljmp
arpl
xor
int
stc
mov
mov
cld
mov
xor
inc
sahf
pop
decb
leave
or
or
aam
jp
pop
dec
mov
stos
fs
inc
loop
pushl
repz
cmpsb
in
cmpl
test
xchg
add
push
dec
add
adc
cmp
mov
inc
ret
lock
push
jl
packssdw
dec
pop
add
jbe
cmpsb
add
xor
mov
jo
scas
movl
and
fs
push
mov
cld
sbb
sub
sti
cmp
adc
sub
adc
xchg
out
adc
cmp
mov
pusha
jns
dec
or
into
inc
scas
mov
js
mov
stos
cli
inc
push
sub
or
rclb
in
lret
pop
jg
in
mov
clc
outsl
xchg
mov
ds
orb
jne
test
push
add
inc
fs
in
xor
mov
dec
sbb
inc
add
hlt
inc
dec
cld
cmp
outsb
and
rolb
jecxz
mov
push
push
xchg
scas
and
sbb
fmul
cmpsl
xchg
xchg
lcall
mov
sbb
out
in
decb
push
push
jp
adc
shl
std
adcb
jg
mov
stos
push
loopne
ret
mov
cmp
cmc
pop
roll
negb
xchg
fwait
xchg
pop
lret
jle
cmp
mov
sbb
add
aaa
addb
adc
daa
xor
les
mov
xor
xchg
sbb
call
inc
cmp
loopne
inc
sub
les
sub
sub
mov
scas
imul
lock
xchg
push
adc
xlat
out
pop
push
jnp
mov
sbb
mov
lret
or
fwait
sbb
in
in
fldenv
mov
pop
std
pop
cli
ds
movsl
in
sbb
les
mov
cmpsl
fiaddl
ret
add
scas
inc
daa
test
sub
dec
xchg
arpl
jecxz
push
subb
stc
cmp
ficomps
stos
push
dec
movsb
das
mov
cmpsl
fldenv
and
push
dec
hlt
pop
pusha
push
into
in
push
mov
sbb
icebp
hlt
jl
rclb
fisubrs
mov
xchg
xchg
jmp
mov
je
mov
push
push
push
test
push
or
int
test
dec
fmulp
xor
jg
mov
outsl
das
or
inc
jae
enter
pop
orb
inc
push
mov
xchg
les
jb
shrb
dec
cs
mov
icebp
pop
cmpsl
pushf
xchg
xchg
push
test
lret
sbb
loop
dec
test
outsb
std
imull
int
mov
dec
hlt
ret
push
mov
push
das
xchg
in
repnz
lock
jnp
mov
stc
and
inc
xlat
imul
rcrb
push
decl
faddp
fldln2
sbb
or
xor
scas
mov
pop
sbb
sbb
sbb
test
sbb
and
inc
lds
or
mov
lret
mov
shr
push
push
push
sahf
push
xor
add
into
mov
pushf
fwait
movsl
push
imul
fimull
arpl
add
mov
shlb
inc
cmp
lret
mov
fwait
ja
scas
insb
pusha
push
pop
jle
inc
mov
outsb
shll
outsl
inc
sbb
push
jae
ja
mov
jno
rcrl
add
mov
jge
bound
shlb
fs
stos
jno
sub
test
push
sub
mov
push
adc
nop
cs
ficoml
mov
andb
sub
sahf
xor
out
js
inc
adc
xor
addr16
cs
insb
inc
jge
jg
fstl
push
jnp
pop
sar
adc
sub
mov
shll
dec
lret
pop
popf
pop
cmp
inc
pushf
inc
dec
inc
addb
in
das
mov
popa
adc
push
cmp
enter
repnz
or
call
add
mov
leave
nop
add
jne
jmp
sbb
psrlq
cmp
push
and
xor
insl
outsl
add
mov
and
js
insb
loopne
sub
sub
test
or
and
xor
fbstp
jae
out
cmpl
xor
push
dec
sbb
adc
cmp
jg
mov
xchg
pop
addr16
push
cmp
lahf
daa
cmp
jo
mov
ja
xor
push
mov
mov
push
xchg
scas
shrb
jo
mov
daa
in
cmp
inc
lea
push
xchg
add
push
scas
xchg
in
jle
or
loopne
addb
cmpl
sarl
fucomi
jne
scas
adc
adc
test
adc
cmpsb
add
cs
jmp
sub
mov
loop
mov
mov
pop
xchg
ret
dec
sub
sub
addr16
cli
sbb
pushf
into
adc
loope
jno
imul
push
leave
push
scas
stos
movsb
aaa
adc
push
test
icebp
repnz
fmuls
push
inc
jecxz
cld
or
fwait
mov
push
scas
or
push
xchg
push
push
push
movsb
cmp
pop
sub
call
sbb
repnz
mov
in
jle
xchg
fcomi
stc
add
call
and
pop
scas
cmp
leave
pusha
sbb
imulb
test
ret
and
testb
mov
out
out
pop
xor
mov
sbb
mov
std
dec
push
inc
test
scas
add
add
mov
push
inc
jecxz
faddl
dec
pop
fcoms
and
cmp
fucom
jne
dec
inc
stos
sbbl
aaa
inc
lret
js
hlt
pop
std
xchg
ss
sahf
sub
stos
das
popa
adc
xchg
cmp
mov
pop
xor
pop
cli
das
ret
pusha
sub
in
outsb
ret
jl
int3
push
cmp
sbb
icebp
push
loope
mov
addr16
sahf
sbb
into
jno
and
pop
jmp
bound
int3
mov
in
out
fld
mov
sub
mov
jae
out
push
es
xlat
sahf
jno
shlb
or
xor
and
push
mov
push
sbb
repnz
pop
mov
mov
cmp
mov
inc
jo
ljmp
in
jo
mov
rclb
add
in
js
out
pop
jbe
xor
lds
ret
and
xchg
lret
mov
push
xor
or
xorl
in
lods
mov
movb
outsl
and
push
stc
cmc
mov
pop
xchg
xchg
mov
cs
mov
clc
jecxz
stos
mov
cmpsl
xor
dec
or
insb
mov
aaa
sub
dec
sbb
fldenv
and
popl
adc
jb
jb
retw
cmpsl
mov
pop
xchg
jp
fdivr
popa
xchg
xor
push
pop
cwtl
rcll
out
inc
daa
sbbb
sar
shl
test
not
movsb
xor
xchg
lahf
dec
fsts
out
hlt
pushl
adc
dec
xor
add
loope
lret
push
inc
pop
fwait
lds
movsl
mov
dec
addr16
out
add
adc
aad
cmc
dec
xlat
push
cs
cmpsl
fcmovbe
std
mov
loopne
xchg
js
jle
sar
js
push
addl
xorb
mov
cmp
push
pop
ret
push
xchg
call
fwait
cltd
push
mov
or
adc
lods
ror
lods
jno
xchg
rol
fdivl
les
pop
adc
mov
add
and
mov
inc
sub
inc
or
mov
push
fstp
fdivrl
fwait
jno
lahf
pushf
cmp
imul
inc
jl
aad
xchg
cs
in
sahf
out
outsb
fisubs
data16
lods
sti
pop
and
push
call
xor
fisubl
xchg
clc
popf
in
mov
xchg
pop
sbb
in
pop
push
sbb
xor
je
cs
push
aas
out
ret
clc
mov
xchg
xchg
in
adc
scas
aas
add
nop
add
sti
mov
test
subb
cmp
dec
insl
adc
push
fisubrl
clc
insl
xorb
lds
push
leave
int
notl
and
xor
movsb
inc
addl
shlb
inc
lock
sbb
pop
je
mov
stos
repz
mov
pop
into
pop
add
rol
or
adc
xchg
pop
ret
jns
push
or
cli
fidivs
ja
fisttpll
mov
loopne
imul
cmp
cmpsb
push
dec
fucomi
pop
fwait
popa
lret
xchg
shrl
mov
ja
test
push
dec
lret
ret
cwtl
inc
lea
or
pushf
sub
cmc
pop
fcmovb
and
cmp
or
sub
push
jp
aam
mov
sbb
out
cltd
test
mov
stc
lods
cmp
push
loopne
sub
int
cld
pop
out
icebp
call
leave
insb
push
or
ljmp
mov
or
notb
mov
cmc
inc
outsl
sub
dec
movsl
scas
mov
jb
test
mov
test
inc
cwtl
sbb
sbb
xor
mov
pusha
push
cmpsl
mov
fst
sub
mov
sarb
pop
xchg
fcomps
mov
stos
dec
loopne
mov
jnp
mov
aad
int3
cmp
sti
sbbl
xor
xlat
push
icebp
jo
outsb
dec
out
jne
cltd
es
cmpsb
mov
or
mov
fisubl
mov
clc
fwait
dec
sarb
ror
or
sti
push
dec
mov
pop
sub
adc
xchg
sbb
mov
push
lret
je
mov
out
cld
cmc
ret
js
fwait
xor
hlt
lods
jge
lcall
sub
mov
mov
cli
fsts
xchg
mov
jp
dec
les
das
inc
jno
jl
xchg
in
sahf
cli
or
fistpl
pop
out
mov
mov
add
dec
mov
lret
ret
or
mov
shll
nop
push
lods
loope
cmp
fildl
dec
lods
inc
les
sub
jns
add
imull
imul
mov
lock
or
sub
addr16
sahf
dec
out
into
insl
pop
jno
adc
cmp
xlat
mov
jl
sub
push
addr16
xchg
add
andl
xchg
sbb
pop
mov
pusha
out
push
cmp
dec
out
into
loop
loop
in
cmp
insl
cli
xchg
aas
and
inc
cmp
popf
push
je
inc
ljmp
cmp
mov
pop
add
enter
add
mov
enter
mov
jmp
lahf
clc
js
cmp
and
pop
insb
sub
sub
xchg
inc
sub
fildl
shl
ret
jmp
nop
dec
subl
inc
sub
add
pop
and
enter
and
xchg
pop
lea
xchg
js
in
add
jecxz
jae
dec
lds
mov
inc
jecxz
sub
xor
ja
mov
jp
mov
jp
sbb
adc
jae
pop
in
and
aas
push
std
data16
pop
sub
outsb
popf
xchg
mov
sbb
cmpb
cld
and
pusha
je
lods
or
test
divb
and
aas
loopne
cmp
mov
xor
xor
lahf
ds
adc
loopne
and
test
nop
xchg
pop
rcrb
test
or
sar
std
mov
inc
outsb
mov
test
sbbb
scas
sub
lret
cli
xor
and
lods
xor
lods
adc
ret
or
mov
test
or
lds
sub
loope
dec
loopne
sub
sbbb
jae
sbb
sbb
add
fwait
or
pop
and
push
cs
sbb
sbb
or
lret
mov
xchg
adc
sbbl
or
or
sbb
xor
orb
stc
and
mov
jne
jmp
pushf
sahf
addr16
xchg
in
mov
sub
sub
out
add
out
cmp
pop
cmpsb
loop
mov
fbld
mov
mov
mov
jno
das
cmp
in
imul
pop
imul
cmp
fisubl
xchg
inc
sub
or
mov
sahf
insb
dec
dec
jne
push
xor
cwtl
into
clc
ljmp
mov
push
ret
sub
xor
lret
sahf
stc
push
cmpsl
mov
imul
pushf
mov
mov
adc
xor
push
iret
std
arpl
xchg
jmp
sub
jge
popf
pop
loopne
rcr
add
out
je
mov
ljmp
mov
sti
push
inc
jbe
rorb
inc
test
imul
icebp
sub
gs
in
nop
ds
jo
sti
jecxz
xor
es
xchg
and
daa
gs
das
sbb
pop
dec
mov
xor
dec
push
je
test
mov
sbb
aad
lods
sub
or
lcall
add
jl
jbe
jl
xor
mov
pop
jge
mov
lret
into
lea
pop
sub
ret
mov
jmp
cld
das
shlb
jnp
fcomps
xchg
ret
in
and
arpl
push
dec
inc
fimuls
sub
cmp
push
sbb
cmp
pop
test
stos
les
iret
sub
cli
push
cmp
xchg
xor
inc
xor
out
inc
insl
jg
or
imul
lea
lret
and
std
leave
stc
divb
mov
push
and
push
stos
stc
inc
xchg
cmp
lret
or
and
mov
sub
xchg
push
das
cmp
push
ja
shlb
std
xor
aam
icebp
mov
pop
sbb
push
mov
xor
dec
push
and
out
pop
lods
cmp
add
fcompl
and
push
std
mov
ss
pop
ja
cmp
js
adc
je
cmpsl
sti
ficoms
aaa
std
inc
jp
sbb
aad
mov
cli
mov
test
mov
cwtl
lds
push
adc
bound
lods
xor
cmp
lds
int3
addl
push
testb
leave
and
ror
push
lods
icebp
vcmppd
push
push
pop
in
xchg
lea
lret
pop
in
jae
xchg
jp
sbb
dec
imul
aad
or
mov
es
movsl
das
push
es
shl
adc
mov
mov
xchg
cltd
sbb
nop
lret
rcrl
pop
push
mov
hlt
or
std
mov
bswap
addr16
mov
sbb
pop
sbb
or
xor
addl
pop
xchg
fdivs
sub
aam
mov
sbb
es
aas
pop
push
pop
lock
jmp
roll
repz
clc
cmp
push
aad
jle
jecxz
out
inc
xchg
pusha
adc
inc
aam
add
mov
loope
mov
iret
jle
enter
loop
pop
inc
xchg
mov
in
sbbb
pop
mov
sti
sti
ss
dec
push
cwtl
jno
insb
add
into
loopne
pop
outsb
jge
notl
add
lds
push
ret
das
sbb
test
xchg
lods
divb
hlt
leave
jmp
clc
adc
les
sub
or
and
aam
jge
mov
jecxz
repz
jp
pop
jmp
add
mov
aam
arpl
arpl
mov
cmp
ficoms
imul
shr
movsl
and
std
and
jbe
xor
xchg
rclb
xor
mov
test
xor
jns
jp
imul
out
sub
mov
stos
adc
in
int3
je
enter
out
inc
mov
dec
cwtl
out
int
jne
sbb
mov
inc
cs
mov
cmpl
and
ret
pop
inc
jae
add
ret
cmp
mov
add
pop
adc
xor
fwait
in
sarb
outsb
and
lahf
int
mov
andl
imul
cmpl
mov
test
mov
scas
mov
out
xor
lahf
push
mov
dec
movsl
inc
andl
dec
shlb
push
add
into
ret
add
pop
pop
push
mov
adc
add
jo
repz
mov
cwtl
sub
sbb
adc
outsl
arpl
aad
or
pop
fildll
je
push
cmp
xchg
push
mov
mov
daa
pop
lods
sbb
lahf
cmpsl
or
and
mov
xlat
lds
scas
sbb
dec
stc
mov
push
aas
dec
mov
push
sub
pushf
repz
or
bound
sbb
mov
xchg
outsb
movl
xchg
loope
jb
xchg
or
and
mov
je
bound
jl
lret
jecxz
dec
cmp
adc
imul
es
xor
cs
dec
imul
mov
jl
pop
pop
hlt
rcrb
lds
pop
repnz
out
xchg
sub
or
pop
pusha
fstpt
cmp
adc
xchg
push
rorb
clc
std
jle
imul
adc
mov
ljmp
out
xor
mov
in
mov
cmp
int3
inc
cmp
push
pop
or
mov
inc
or
cmpsb
sbb
fucomip
gs
add
sub
push
mov
cltd
pop
pop
sahf
loope
mov
cmp
mov
adc
or
loopne
jb
sub
lds
cli
mov
insb
sbb
xor
aad
cmp
xchg
inc
pop
push
xchg
scas
push
mov
es
or
aad
scas
pop
inc
mov
fwait
ret
sbb
out
add
xchg
xchg
in
iret
fidivrl
rcr
inc
or
es
sbb
ficompl
out
pop
ds
xor
sti
jnp
imul
xchg
fistpll
psubsw
add
inc
incb
into
enter
adc
std
push
into
mov
push
bound
es
popa
adc
pop
xchg
jbe
mov
int
dec
mov
lods
mov
dec
fisubrl
inc
sbb
fiadds
dec
jo
testl
xchg
push
clc
ljmp
add
cmp
sub
cld
in
dec
sar
xchg
adc
test
imull
insb
push
inc
mov
add
or
inc
out
xchg
dec
ljmp
sub
inc
ljmp
mov
push
inc
out
pop
sbb
test
jb
push
pop
xor
lea
jne
xchg
or
iret
xor
pop
sbb
setns
int3
insl
mov
add
xchg
inc
or
test
cmp
ss
movsb
mov
icebp
daa
popa
mov
xchg
mov
fdivs
xor
test
leave
xchg
loop
aas
add
in
das
insl
cmp
mov
xor
outsl
or
pop
test
lret
fwait
aas
mov
mov
pop
inc
add
lahf
add
lcall
pop
jno
inc
dec
or
sub
inc
enter
and
mov
cli
andb
inc
and
lret
aam
rcrl
push
dec
scas
push
fistpll
clc
dec
in
int
mov
push
or
or
inc
int
xchg
into
mov
sub
in
ss
pop
push
lahf
mov
cmc
in
push
xchg
jecxz
andb
into
mov
aad
pushf
jo
inc
sbb
das
ja
and
adc
aaa
cmp
jg
inc
inc
mov
mov
and
adc
sub
ljmp
mov
aam
and
std
stc
std
and
roll
or
fidivs
stos
cmp
lret
js
cmc
xchg
call
mov
insb
inc
or
fs
cltd
xor
negb
jo
jbe
repz
ljmp
inc
enter
icebp
xchg
lock
pop
or
sbb
ja
repnz
pop
jbe
std
xchg
sahf
popf
jns
std
je
sub
xchg
jno
sbb
and
pop
rol
inc
xchg
dec
and
dec
mov
loopne
sti
mov
outsl
arpl
inc
mov
or
xchg
adc
jge
mov
jl
cmp
aam
sbb
lock
push
mov
jnp
sub
inc
cmp
jne
arpl
into
xchg
mov
jl
loopne
and
sub
and
add
aaa
cltd
out
les
mov
sub
cli
lods
dec
scas
inc
nop
insl
aaa
mov
fcomps
push
pslld
aam
jns
jmp
jo
jl
dec
insb
nop
pusha
insb
adc
out
lds
movb
inc
xchg
dec
sub
and
arpl
pop
push
mov
pop
push
out
push
in
jmp
aad
or
cmp
inc
lock
inc
insl
mov
push
mov
outsb
jle
pop
push
fs
les
inc
mov
mov
fisttpll
jne
rclb
and
cltd
dec
movsl
pop
dec
icebp
aas
mov
lods
test
mov
das
and
sti
stos
push
mov
inc
and
mov
jmp
rep
popf
adc
dec
loope
or
bound
adc
xchg
jb
in
pop
push
inc
or
mov
mov
shl
ss
stc
jmp
out
mov
push
loope
inc
adc
sbb
lock
aaa
dec
or
dec
sub
mov
sarb
add
mov
lods
or
xor
imul
call
push
testl
adc
loopne
aam
push
xchg
test
or
pusha
ljmp
test
jne
xchg
or
arpl
mov
fbld
jge
mov
repnz
jge
arpl
jge
stos
rcll
mov
xchg
jle
lret
sti
cmpsl
push
sbb
aas
mov
movsb
mov
leave
dec
int
out
mov
inc
shlb
dec
fwait
cs
xchg
mov
lea
js
test
pop
clc
and
mov
andl
aad
and
lea
dec
enter
mov
mov
jmp
ljmp
xor
in
or
push
lods
inc
daa
cmpsl
push
fucomi
rorl
push
jns
ret
sub
jb
lcall
sti
aaa
cmp
sti
test
add
jecxz
cwtl
adc
call
cmp
adc
fistpl
popa
loop
and
insl
stc
mov
sub
cld
xlat
push
pop
ret
or
fwait
mov
mov
aad
push
xchg
popf
bound
ret
ss
outsb
stos
mov
jge
enter
push
fnsave
push
neg
sbb
insb
and
push
push
lcall
fsts
jno
jle
repnz
lds
mov
cmp
sbb
mov
jno
test
adc
lods
pop
xchg
push
ljmp
push
out
nop
outsl
mov
popf
leave
pop
dec
into
sub
sarb
jae
loope
stc
idiv
dec
mov
arpl
movsb
shrb
inc
pop
push
xchg
pop
push
jg
dec
inc
xchg
inc
cltd
mov
pop
pmulhuw
data16
outsl
fwait
insb
call
mov
rol
xchg
test
cmpsb
subb
inc
insl
mov
pop
popf
stos
dec
xor
movsb
out
popa
xchg
mov
gs
and
rolb
cmc
sbb
cmp
sbb
dec
xlat
sbb
lea
jg
mov
fsubs
lea
inc
sti
adc
out
mov
ss
lret
shr
call
sarb
insl
fdivrl
adc
mov
mov
in
and
mov
xlat
pusha
loope
lret
mov
scas
rcrl
and
xchg
into
clc
pusha
mov
ljmp
out
jg
aad
shl
sub
icebp
aam
mov
xor
mov
adc
mov
repz
cwtl
lret
sahf
adc
out
pop
sahf
mov
lea
cli
pop
ja
sub
and
dec
outsl
imul
pop
and
push
stos
pop
push
mov
in
push
clc
dec
jo
iret
and
movsb
mov
sub
std
out
push
and
push
jo
push
lahf
fdivrl
push
xchg
mov
jns
pop
xor
gs
or
shlb
aad
mov
cmc
int
sbb
push
jne
or
cmpsb
push
dec
in
icebp
mov
adc
int3
cli
fimuls
enter
scas
xor
push
inc
jns
or
pop
or
lds
or
mov
xchg
cmp
and
jbe
call
fiadds
mov
call
pusha
aaa
inc
mov
xchg
add
inc
cltd
inc
sub
mov
jecxz
out
fiadds
pop
fs
jmp
sarl
mov
add
or
rcrl
int
mov
ja
movsb
leave
xchg
pusha
lret
dec
cmp
pop
cmp
fidivl
inc
push
fisubrs
aas
stc
sub
leave
sbb
test
jne
fimull
xchg
imul
outsl
fs
loopne
loopne
sbb
lahf
inc
rcl
mov
push
lock
fdivr
loopne
enter
xchg
out
dec
xlat
and
fldt
xor
aam
inc
mov
popf
cmp
sbb
add
jbe
lahf
mov
insl
mov
loop
fdivrs
and
insl
push
ret
mov
jb
mov
and
into
mov
pusha
fs
sub
sahf
scas
jbe
idivb
shr
and
rorb
mov
inc
mov
pop
in
int
sub
push
xchg
movsl
xchg
fiadds
test
js
inc
mov
pop
popf
in
leave
sub
int3
push
mov
xchg
pop
test
sbb
push
xor
shr
or
xor
ss
and
mov
jle
dec
pop
loope
xor
sub
push
mov
inc
xchg
lock
loopne
test
adc
jp
dec
mov
mov
and
xchg
mov
xchg
xor
xor
pop
lcall
dec
arpl
jecxz
jns
jecxz
dec
push
jo
lock
and
loope
std
out
lds
sub
loop
adc
dec
mov
pop
mov
jb
push
lds
gs
cmp
mov
int
mul
inc
push
xchg
test
cmp
movsb
inc
push
push
and
sub
push
sbb
call
push
pop
in
pop
out
mov
dec
mov
add
adc
lcall
mov
jne
sbb
jae
es
and
or
shlb
stc
aad
mov
jne
in
lcall
pusha
sub
sub
inc
testb
bound
mov
mov
cmp
movsl
mov
out
xchg
adc
fdivr
in
xchg
mov
in
push
and
shl
int3
les
cwtl
mov
jne
mov
inc
cmpsl
sar
idivb
pop
mov
outsb
inc
and
xor
or
mov
lret
pop
mov
push
outsb
jnp
xchg
cltd
and
fildl
jno
addb
data16
mov
das
sti
xchg
imul
mov
jmp
adc
scas
push
call
pop
push
xor
push
add
movsl
jecxz
xchg
in
cmp
add
pop
incb
jecxz
stc
sbb
ljmp
add
hlt
mov
frstpm(287
out
xchg
push
or
into
popf
pop
xlat
xor
call
jbe
xor
cmp
add
daa
xchg
rcrb
push
testl
mov
loopne
call
aaa
inc
cmp
fnstenv
jle
sub
outsl
mov
fistps
out
xchg
or
mov
cs
dec
sbb
jae
xchg
add
js
dec
mov
faddl
cmp
inc
mov
and
or
adc
adc
push
aam
fnsave
int3
pop
sbb
mov
aam
mov
aam
or
daa
out
dec
inc
push
pop
dec
push
sbb
arpl
push
add
mov
jge
cmpsb
fiadds
fdivp
ror
fwait
mull
lret
pop
test
push
jno
nop
shrl
stc
jmp
push
xor
sti
in
mov
fwait
test
xchg
insl
xchg
mov
sub
cmp
mov
push
add
pop
cmpsb
inc
push
mov
mov
xor
stos
xchg
cmp
dec
fsubr
xchg
cmp
cmp
mov
aaa
test
mov
push
inc
in
int3
inc
mov
cmp
push
fisubrs
adc
xlat
or
xor
aas
sbb
in
mov
fwait
es
dec
lahf
gs
inc
arpl
lahf
or
add
insl
inc
pop
fsubrs
and
dec
syscall
insb
test
repnz
xchg
fsts
aas
test
clc
out
mov
test
cmp
cmp
mov
pop
adc
xchg
push
push
sbb
fs
jo
lcall
xchg
inc
int3
mov
lret
bound
insl
xor
iret
cmp
and
rorb
xchg
sub
dec
or
fnstsw
ja
mov
mov
xor
addb
mov
jg
mov
in
lods
loop
sti
sub
pop
mov
out
jmp
insl
mov
jge
push
push
in
lds
and
popl
push
mov
int3
jle
cmpsb
sbb
popa
out
adc
jl
aaa
fsubrp
movsb
jb
aad
add
inc
loope
and
int3
inc
fs
fdivrl
jl
push
fimull
out
mov
imul
fwait
mov
jno
cmpb
sbb
cli
or
cli
lret
icebp
sti
adc
mov
ror
in
dec
ss
lret
aaa
inc
push
and
insb
in
push
nop
repz
jmp
dec
test
lcall
movaps
enter
mov
add
rol
enter
outsb
testl
insl
sub
dec
sahf
adc
out
and
pop
je
mov
sub
pop
int3
adc
daa
js
jbe
push
ds
sbb
sub
push
cld
in
sbb
hlt
jmp
and
nop
adc
pminsw
inc
iret
xchg
pop
in
and
push
and
fstps
jle
rcl
dec
daa
mov
pop
lods
xor
cmpsb
stc
insl
sbb
xchg
cmp
repnz
adc
jl
dec
sub
dec
or
inc
push
in
imul
adc
inc
outsb
ja
fs
fcmovu
jmp
xor
or
sbb
cmpsl
es
pop
mov
jmp
xor
cmp
cld
cmc
inc
sbb
pop
mov
test
pop
inc
and
std
lods
inc
jns
std
xchg
daa
ret
data16
imul
or
jge
les
mov
xor
lods
jo
pusha
sub
sti
add
test
sahf
ds
push
mov
std
push
lcall
out
mov
mov
jbe
sti
popa
aam
rcrb
push
in
lea
push
jle
or
add
imul
dec
mov
jnp
mov
push
cmpsb
and
mov
aad
mov
into
das
je
mov
fucom
and
xchg
cmp
test
imulb
scas
ja
into
or
sub
int3
fwait
adc
sahf
or
or
adc
pop
cli
cmp
or
inc
add
daa
sti
subb
jnp
xlat
stos
test
or
inc
clc
dec
ffree
cmp
imul
mov
mov
fiadds
inc
rclb
fsubrl
push
loopne
sahf
sub
repnz
dec
sbb
push
push
sbb
dec
adc
aad
jge
mov
sbb
and
les
cmpsl
scas
dec
push
sub
andl
in
sbb
pop
imul
jecxz
outsb
inc
xor
insl
arpl
cs
add
fs
jge
and
sub
add
cmpsb
jns
out
sarb
xchg
insb
mov
and
sbb
sub
ss
or
rcrb
inc
pop
sbb
mov
sahf
out
arpl
mov
imulb
out
pop
fs
movsb
mov
and
mov
adc
loope
adc
lret
cmp
xchg
in
sti
push
jmp
pop
jle
mov
call
sbb
lahf
aam
out
cwtl
cmpsb
cmp
mov
sub
mov
shll
mov
xor
fwait
or
fildll
or
les
addr16
mov
mov
inc
hlt
addr16
inc
sub
iret
imul
hlt
sbb
sbb
lea
push
sbb
aad
faddp
push
inc
dec
pop
mov
fmuls
jle
test
iret
insl
aad
jno
enter
adc
dec
mov
mov
fstpt
dec
and
push
xchg
xchg
aad
stos
pop
pop
dec
jmp
push
dec
ffreep
mov
or
add
insl
or
es
rdpmc
leave
into
sbb
mov
inc
mov
fisubrs
jno
fimull
jmp
dec
xchg
inc
pop
sbb
pop
jne
mov
addb
test
movsl
aas
in
cmp
in
ror
add
sub
push
push
xor
repnz
mov
lret
scas
adc
xor
adc
cltd
add
fs
pop
adc
insb
test
pop
hlt
imul
sbb
shl
add
and
into
dec
test
inc
or
insl
jb
fwait
push
sbb
dec
adc
xor
stos
inc
sub
jmp
ret
mov
shlb
clc
les
push
decb
inc
jle
sub
lret
ffree
xchg
cltd
cmp
test
mov
out
pop
lret
rcrl
sbb
add
xchg
xchg
push
dec
sbb
jl
test
push
mov
mov
outsb
clc
dec
inc
xor
jmp
xchg
ss
pop
jno
cmp
fdivrl
test
mov
scas
push
pop
and
mov
push
dec
inc
mov
cli
movsb
in
mov
inc
sub
out
fcoms
and
pop
mov
add
add
repnz
mov
ret
mov
cmp
mov
add
mov
arpl
sub
inc
int
xor
lret
mov
inc
syscall
dec
arpl
xlat
or
jae
popf
xchg
loope
xor
push
gs
mov
pop
xor
inc
or
xchg
push
mov
mov
rcr
and
test
inc
xchg
mov
cmp
ds
mov
dec
push
mov
mov
mov
mov
cli
jb
mov
add
adc
adc
adc
xlat
add
dec
in
cmc
pop
aaa
sub
mov
inc
test
xchg
mov
cld
mov
dec
adc
lds
jge
js
ja
xchg
pop
dec
pop
int
popa
aad
scas
ja
pop
test
xchg
fdivl
or
mov
mov
xor
sarb
je
jp
mov
inc
dec
mul
xor
mov
adc
jle
jp
or
data16
lret
pop
adc
fstl
popa
es
and
xor
dec
test
cmp
stc
mov
sbb
lock
dec
sub
mov
mov
fstps
mov
fisttps
lea
cmp
mov
lcall
push
push
js
std
clc
jb
jle
inc
jmp
add
jp
mov
push
ss
cli
pop
inc
add
std
inc
sub
aaa
pop
insb
cmp
push
lret
hlt
mov
push
xchg
ficoml
xor
xorb
jl
ret
push
pop
rclb
mov
sbb
push
pusha
inc
mov
dec
xchg
cmp
es
mov
fnstcw
jp
jno
sub
idivb
in
out
cld
lret
cmp
push
jbe
sub
nop
sub
fxch
push
sbb
push
jb
push
jle
sbb
fldcw
inc
mov
xchg
je
or
rorb
stos
jmp
es
sbb
add
pusha
xor
jle
lods
pop
mov
ds
aaa
pushf
inc
pop
fidivl
sarl
ret
sahf
jecxz
mov
loop
mov
sahf
pop
push
push
mov
pop
clc
ljmp
inc
jae
add
cmpl
cld
jno
inc
ret
stos
iret
cmp
bound
cwtl
sbb
xchg
shlb
xor
sbb
cmp
push
leave
inc
jo
add
std
imul
data16
inc
notb
arpl
ja
aam
add
lahf
xor
push
scas
fildl
xchg
and
add
and
cmc
adc
mov
mov
ficoms
fbstp
and
mov
sbb
in
dec
xchg
fildl
mov
xlat
mov
stc
dec
add
cmp
pusha
loopne
inc
push
push
xor
pop
arpl
jne
orl
fdivrl
xchg
jmp
aas
mov
jmp
mov
lds
outsl
add
les
into
jbe
mov
flds
sub
test
jnp
dec
adc
out
std
mov
cld
xor
push
and
jbe
xchg
push
adc
xor
loope
cs
iret
sub
xor
fnstsw
into
xchg
testb
xor
sub
sub
sub
in
mov
jmp
adc
lret
pop
fisubrs
push
mov
outsb
pop
adc
lods
inc
xchg
js
mov
adc
mov
push
pop
xchg
lcall
je
adc
jle
sub
dec
shlb
jno
ljmp
push
jmp
call
mov
jns
or
mov
xchg
mov
xchg
push
pop
fldt
clc
mov
scas
mov
mov
aas
out
popa
xchg
mov
stos
imul
pop
sti
scas
test
negl
loopne
cmp
xchg
cmpsb
jb,pn
lahf
mov
cmp
js
mov
xor
out
xchg
dec
pop
cmp
jb
pop
mov
lahf
cmc
pop
sbb
out
jbe
jg
pop
subb
insb
aas
xor
je
aam
movsb
dec
add
pop
sub
sub
in
mov
jns
out
outsl
pop
pushf
dec
int
push
mov
fwait
rclb
or
push
in
dec
fwait
mov
orl
fisubrs
aad
aaa
push
mov
das
lds
jnp
xor
outsl
xor
add
cmp
push
out
adc
mov
xchg
pop
pop
lds
icebp
lcall
pop
daa
push
dec
jge
jge
inc
adc
lcall
ret
pop
mov
or
mov
pop
xchg
xchg
adc
cld
dec
inc
dec
xchg
push
stos
or
dec
sbb
mov
mov
push
imul
stos
jp
sarb
stos
mov
rcrl
xchg
test
fsubrs
popa
cmc
sub
setl
sbb
ljmp
shl
out
aam
fldpi
push
adc
jno
scas
push
add
cltd
aad
je
pop
cmp
and
sub
ja
sahf
adc
cmp
mov
jnp
stos
add
and
ljmp
int
adc
jmp
std
pushf
outsl
fcomps
loopne
pop
mov
add
sub
jl
call
enter
or
cmp
xchg
fs
xchg
add
les
iret
fwait
lock
insb
dec
push
jmp
jl
cmp
push
inc
or
or
mov
inc
invd
cmp
roll
pop
dec
andl
cld
rclb
stos
xchg
add
aas
leave
push
test
in
sbb
adc
mov
xchg
pop
popf
push
xchg
lods
xor
push
adc
sahf
mov
in
scas
roll
insb
stc
cmpsb
inc
aas
and
notl
in
not
fwait
push
int
inc
inc
imul
xchg
jmp
pop
push
add
jne
inc
sub
cmp
mov
push
mov
pop
xor
je
mov
loop
lret
sti
inc
xorb
xchg
shll
ret
je
fistps
sahf
ja
mov
adc
add
jg
mov
pop
and
jmp
repz
inc
pop
lcall
mov
jns
and
sub
fisubrl
jg
jnp
fwait
mov
mov
into
jecxz
push
pop
pop
nop
bound
out
shlb
push
sarl
xor
arpl
sti
mov
in
dec
push
push
mov
mov
fwait
xchg
inc
dec
in
push
xchg
popa
hlt
in
jb
dec
dec
pop
das
dec
adc
cs
mov
dec
push
and
test
sub
hlt
cltd
sub
int
shll
call
cli
inc
inc
inc
imul
cwtl
push
movsl
sbb
and
pop
jl
jnp
scas
cld
lahf
je
xor
rcrb
ja
adc
mov
cmp
mov
cld
std
cmp
shrb
cmp
inc
mov
imul
jne
or
int3
ret
arpl
jg
xchg
or
fcmovbe
movsb
inc
dec
adcb
in
andl
add
andb
xchg
addl
popa
in
shl
sahf
fsts
inc
push
push
push
cmp
fs
call
mov
jae
inc
inc
mov
and
mov
movntps
adc
mov
in
and
mov
jl
pusha
push
xchg
xchg
xorl
mov
test
inc
popf
or
cs
dec
xchg
bound
pop
sub
out
in
inc
xchg
cmp
out
out
dec
and
in
rol
mov
lods
push
jge
sti
popa
mov
mov
bsf
leave
pusha
mov
ljmp
subl
add
lea
jne
das
test
cmp
pop
es
mov
subps
xor
ljmp
xchg
nop
push
repz
fs
popf
push
in
aas
dec
arpl
mov
mov
mov
fsubp
xchg
cmp
lods
push
insl
sar
jo
xor
pop
add
sbb
cwtl
adc
addr16
in
andb
syscall
test
insl
stos
dec
xlat
inc
movsl
les
dec
pop
repnz
xlat
cmc
vfrczsd
sti
insb
lock
sub
rclb
out
pusha
iret
xor
loope
push
mov
lds
jmp
lock
mov
cmpsl
push
aaa
bound
mov
jns
xor
icebp
int3
sub
pop
hlt
scas
dec
shrb
pop
and
aad
mov
sub
cltd
cmpsl
xchg
xchg
or
mov
pop
outsl
scas
js
mov
xchg
aas
adc
push
jecxz
in
mov
shl
out
xchg
test
jmp
xchg
addr16
das
mov
push
rcl
clc
and
push
test
pop
lock
jb
push
cmp
movsb
test
push
cltd
ret
pop
lods
jge
call
jb
add
xor
add
je
popa
dec
icebp
popf
outsb
push
icebp
add
pop
push
ret
in
jmp
cld
ret
in
jno
imul
movsb
stos
sub
jb
push
dec
pop
adc
mov
lods
insl
lock
les
pop
cmp
pop
dec
jp
out
cli
inc
xor
ds
ja
das
ja
outsb
testb
pushf
sub
or
mov
popa
jge
mov
shrl
or
sarl
mov
jp
std
or
mov
daa
pop
xor
je
cltd
xchg
jno
in
ds
icebp
xor
jge
inc
jmp
lds
cmp
sub
pop
jnp
mov
es
mov
sar
js
fistps
fstpt
cmp
cmp
repnz
iret
xchg
pop
jg
inc
cmp
dec
lods
es
xchg
clc
jno
xor
adc
mov
into
inc
dec
jb
hlt
ficompl
push
movsb
stos
mov
mov
dec
or
das
jp
cltd
sbb
je
jo
adc
cltd
das
sbb
std
je
xchg
aad
out
iret
scas
pop
std
and
sbb
lods
in
push
xchg
jo
jo
int
aad
fisubrs
jo
inc
pop
dec
pop
enter
call
pop
mov
or
ja
sahf
lods
or
inc
daa
cld
loop
mov
aas
je
pop
jmp
or
fcomip
dec
sbb
outsb
push
cltd
cmp
imul
add
ds
lds
add
out
stc
out
lcall
mov
xorb
scas
ss
insb
mov
add
das
out
enter
cmc
xor
mov
dec
es
jno
xchg
cmp
lret
mov
shlb
dec
mov
int
ret
pusha
aad
sbb
aaa
pop
movsb
in
add
dec
inc
adc
in
mov
jo
mov
push
out
aas
popf
add
iret
push
add
test
mov
test
aad
mov
mov
or
pop
add
dec
jb
cmp
popf
dec
dec
cmp
push
xor
stos
js
push
aad
mov
mull
push
and
leave
mov
popf
jmp
fnstcw
cld
loopne
lret
adc
mov
or
xor
or
pop
icebp
lea
xlat
ror
in
jg
sbb
xor
pop
mov
cmp
fs
lahf
mov
das
repnz
ret
lea
mov
adc
fstps
iret
xor
je
jo
or
pop
sub
pop
ret
cmp
mov
or
mov
divb
sub
mov
xor
add
nop
mov
out
add
fwait
add
dec
jmp
push
jp
push
mov
lods
xor
or
rcrl
daa
arpl
leave
pop
push
js
fcmovnu
xor
adc
xor
fisttpll
cmp
lods
inc
out
push
pop
dec
sub
mov
xor
fldcw
xlat
cmp
mov
pop
add
mov
push
std
xchg
scas
dec
mov
push
jbe
xchg
ret
dec
mov
or
cmpsl
pushf
xchg
jp
aad
inc
cli
mov
add
fisubs
fistpl
pop
dec
sub
mov
cmp
jl
xchg
mov
jno
jmp
and
sarb
sbb
test
jnp
dec
push
int
movsl
push
clc
loopne
ljmp
icebp
lock
inc
pop
ljmp
lret
in
dec
jns
aam
stos
push
lret
nop
xor
mov
test
out
or
inc
lock
pop
mov
push
ja
sub
sbb
leave
xlat
loope
scas
repnz
sahf
movsb
xchg
test
dec
mov
or
adc
cwtl
lea
loope
add
insb
xchg
jp
mov
cmp
cs
js
iret
add
or
fidivrs
loopne
icebp
jp
inc
inc
loope
repnz
xchg
je
jnp
cmc
mov
and
rorb
ret
les
sbbb
stos
fistps
xor
cmp
int
sbb
add
mov
or
aad
arpl
or
popf
data16
das
lods
xor
fs
cmpsl
int3
dec
xchg
mov
int3
imul
mov
lret
lods
cmp
cwtl
mov
mov
jne
ljmp
xlat
bound
pushf
in
pop
lcall
lret
inc
cmpsl
ds
lret
push
sbb
add
xchg
sub
rorl
or
mov
rcr
mov
loop
ficoms
clc
aaa
lret
lret
inc
imul
dec
push
or
aaa
lret
jg
mov
pusha
xchg
push
add
sub
xchg
scas
into
repz
mov
mov
in
hlt
xchg
mov
push
xor
xchg
inc
mov
lds
xchg
outsl
mov
xchg
cmpsb
cmpsb
jg
clc
sub
enter
ret
outsl
jp
out
ret
adcl
mov
popf
adc
into
dec
xchg
std
rclb
sbb
xor
mov
arpl
loope
xchg
pusha
and
or
mov
cltd
inc
jbe
loopne
fisubs
mov
jle
in
add
decl
push
sub
or
sbbb
fidivrs
scas
adc
or
or
ljmp
mov
mov
adc
shrb
movsb
pop
mov
roll
cltd
mov
test
and
test
mov
jmp
jg
idiv
insl
out
xchg
test
pop
xchg
push
jge
call
adc
inc
aam
lock
or
jo
pop
cmp
pop
add
pop
jae
mov
push
cmpsl
dec
push
arpl
out
ja
xchg
pop
xlat
cmp
sbb
in
rclb
or
xor
hlt
xor
adc
daa
or
dec
and
ret
sub
mov
imul
pop
leave
adc
add
mov
add
popa
rcll
fsubl
xchg
jl
or
cltd
pop
and
dec
lahf
rcrb
xchg
mov
lcall
daa
mov
inc
std
and
ret
pop
sbb
fisubs
push
push
push
shll
xchg
and
je
xchg
outsl
or
shrb
aaa
daa
and
call
cli
in
inc
test
addb
pop
fiaddl
scas
sub
add
shrb
mov
adc
test
call
xchg
pop
xor
inc
leave
adc
in
stc
mov
mov
pop
jns
rcr
in
mov
xchg
adc
mov
xchg
cld
ffree
adc
dec
jp
mov
out
loopne
xchg
fwait
sbb
push
dec
mov
fs
xor
mov
pop
stos
push
sbb
aad
xchg
sub
movsl
or
pop
cmp
pop
sbb
mov
adc
sub
sahf
iret
dec
xchg
sub
movsb
add
lret
mov
mov
int
loopne
inc
sbb
fidivrl
lea
mov
push
xchg
sbb
addl
call
add
scas
std
imul
jp
mov
jns
pusha
out
lret
add
xor
mov
pushf
fidivrl
in
add
jl
out
roll
jecxz
xchg
jnp
adc
or
insb
add
lds
rclb
inc
cli
mov
and
mov
dec
das
int3
add
iret
neg
ja
test
ljmp
ret
jbe
mov
aaa
jge
jno
push
neg
sbb
jg
shll
jbe
or
addr16
into
cmp
and
imul
push
sbb
insb
fbstp
aam
mov
mov
outsl
lods
push
fistpll
subb
mov
das
int
roll
iret
add
mov
movsl
adc
push
std
jg
jecxz
and
pop
int
sbb
mov
aad
pop
mov
fcomp
outsl
testl
push
hlt
adc
cwtl
aad
nop
jns
cmp
das
daa
stos
std
pushf
mov
mov
in
ds
fadds
movsb
ljmpw
js
mov
cli
enter
mov
stc
enter
sub
mov
mov
push
or
cs
mov
mov
mov
ljmp
popf
and
adc
out
ficoms
mov
pop
mov
pop
pop
and
xchg
xchg
cmp
mov
fnstcw
jmp
in
sbb
daa
leave
int
mov
in
daa
stos
or
aad
and
pop
dec
dec
or
cmp
cwtl
jbe
jbe
push
or
repnz
loopne
push
ds
jnp
mov
or
testb
inc
mov
mov
inc
mov
mov
mov
fwait
mov
sbb
add
push
repnz
sub
test
xor
cmp
cwtl
loop
jge
cmp
cmp
cli
sbb
rcl
inc
ret
repnz
xchg
and
in
fimuls
cmpl
cmpsl
dec
lahf
add
in
enter
xor
or
push
fnstenv
mov
xchg
outsb
fists
adc
push
int
add
xchg
gs
inc
faddp
in
jbe
adc
xchg
fs
mov
in
dec
push
in
xor
adc
neg
cmp
addr16
dec
sub
aaa
add
dec
xchg
cmp
adc
dec
dec
stos
push
in
pop
mov
push
push
sub
repnz
mov
out
popa
jp
enter
lret
fs
mov
addr16
push
dec
fbld
mov
jl
fwait
adc
cmp
adc
jmp
pop
aam
mov
and
push
adc
test
jp
mov
sahf
jle
xchg
sub
clc
xchg
pushf
mov
xchg
in
push
mov
inc
mov
inc
mov
bound
lret
or
sub
insl
imul
mov
sbb
insl
jne
nop
mov
jb
add
lds
add
sbb
mov
mov
pop
jno
arpl
mov
pop
popf
ja
or
sub
sti
jge
fsub
pusha
mov
cmc
popa
inc
sub
arpl
aad
bnd
and
pop
push
lods
pop
xor
pop
push
lods
movsl
popf
push
mov
mov
mov
inc
push
sub
dec
rorl
out
sub
push
or
ljmp
mov
scas
into
sbb
jl
xchg
sbb
jg
pusha
test
pop
pusha
stc
call
out
inc
pop
aaa
in
sbb
pop
iret
sbb
push
sbb
out
and
inc
jne
mov
lods
push
or
stc
push
dec
cld
cmp
add
and
enter
xor
mov
stos
xchg
adc
andl
sub
adc
mov
out
jg
pushf
mov
and
adc
dec
test
lret
repnz
push
dec
fmul
iret
subl
dec
mov
mov
inc
adc
std
enter
cmpsl
aam
mov
data16
cmp
ficomps
outsl
shlb
mov
mov
and
int
mov
das
repnz
loopne
jno
lret
lret
test
and
xchg
xchg
movsl
adc
iret
jecxz
jbe
sahf
bound
lgs
rol
push
popf
inc
imul
call
xor
subl
sbb
decl
loope
mov
xchg
push
aas
xchg
popf
pop
in
xchg
daa
xchg
and
and
push
cmp
inc
push
sti
and
bound
in
dec
es
shlb
sbb
js
outsl
sub
push
lods
out
mov
popf
je
pop
xchg
out
jae
cmp
inc
adc
mov
xor
jecxz
sbb
dec
cld
sarb
out
push
or
test
adc
cmpsl
sbb
mov
aam
ja
repnz
in
mov
jl
push
out
jl
ljmp
ss
ds
cmp
fisubrs
ds
add
shl
add
in
fcomps
cltd
fwait
testb
imul
adc
adc
dec
repz
mov
push
pop
lret
lret
ss
bound
dec
pusha
jne
mov
mov
pop
in
sbb
mov
sahf
loopne
andl
push
inc
inc
mov
mov
xor
dec
dec
add
scas
nop
cs
ljmp
sbb
sbb
push
shll
sub
push
test
ud0
addl
repz
gs
in
inc
test
mov
shll
enter
lods
cli
js
cmp
stos
mov
ds
push
mov
xchg
jae
xchg
sbb
addl
popfw
les
lods
cmp
mov
inc
or
cmp
xchg
outsl
fsts
inc
out
adc
push
repnz
cwtl
xor
fnsave
sub
mov
outsb
mov
lods
pop
outsl
add
jecxz
lock
sub
add
jb
push
cmp
outsl
hlt
add
fistpl
loopne
cli
lret
test
leave
xlat
cwtl
ds
sub
mov
out
hlt
push
add
sahf
lds
pushl
andl
inc
xlat
add
jmp
push
imul
push
add
sub
sub
sahf
adcl
ljmp
pop
sbb
adc
xor
outsb
inc
adc
jl
or
or
shll
cli
pop
outsb
mov
jns
lds
mov
mov
jb
imul
adc
xchg
cmp
jge
cmpsl
in
dec
sbb
scas
add
scas
jp
sub
cmp
inc
lds
out
lcall
cmp
jbe
int3
mov
call
xor
sub
aas
and
push
std
nop
or
std
cmp
sahf
mov
inc
add
lods
push
add
out
sub
inc
lahf
aaa
cmp
das
int
mov
dec
out
jecxz
push
sub
scas
sbb
imul
xchg
cmp
in
imul
inc
das
cmp
dec
adc
jle
cmp
xchg
rorl
dec
ret
ss
out
lret
adc
imul
add
add
sub
push
mov
test
stc
jecxz
mov
xor
ja
shrb
xchg
fnstcw
in
int
lcall
popa
cmpsb
outsl
das
dec
and
xor
pop
in
aaa
mov
jl
lcall
dec
xor
adc
jns
push
fdivs
fdivs
fucompp
stc
enter
sub
dec
movsb
ljmp
sbb
popf
repz
icebp
test
jg
into
call
dec
jbe
jns
push
mov
cmpsl
lods
fnstenv
inc
adcb
out
iret
xchg
jg
cmp
jnp
xor
mov
imul
stos
add
scas
fmull
push
pop
pop
std
aaa
adc
fwait
jmp
push
fists
cmp
and
out
xchg
cmp
leave
xlat
push
and
popa
push
mov
in
test
jp
or
dec
nop
jno
ret
or
fmuls
and
or
and
ljmp
xor
pop
jae
cmp
popf
mov
pop
das
dec
sub
daa
jnp
movsl
dec
mov
sub
ljmp
xchg
stos
push
das
push
mov
inc
cmp
sbb
inc
rorb
jl,pt
or
loope
adc
fstl
aam
or
jle
cmp
clc
inc
test
cltd
pushf
pop
dec
or
xchg
lods
mov
and
cmp
cli
scas
xchg
xchg
aad
jae
xorl
jns
outsb
mov
mov
lret
shrl
rcrl
in
cs
adc
mov
sahf
mov
jmp
lret
push
adc
cli
push
imul
mov
push
outsl
out
iret
insb
add
iret
mov
add
cmp
jecxz
loope,pn
jbe
lret
call
push
mov
fwait
cmpsb
jns
sub
pop
mov
lret
add
addr16
xchg
pop
ljmp
ljmp
rcl
jl
pop
fildl
ret
rcll
adc
mov
aas
data16
xchg
daa
dec
dec
shl
rcr
aaa
jo
and
jmp
and
push
xchg
out
pop
int
sub
stos
mov
fisubrs
push
fdiv
cld
lock
out
pop
sub
xor
mov
xor
lods
lock
inc
sub
xor
xchg
xor
jge
cs
dec
test
and
popf
fbstp
je
or
mov
xor
aaa
lock
das
mov
nop
mov
inc
and
ret
mov
mov
pop
mov
mov
pop
mov
arpl
leave
aas
lods
jge
lea
pop
dec
jnp
shrb
das
mov
test
stc
fsubs
sbb
jge
addb
mul
jle
pop
nop
inc
xor
gs
adc
rcl
mov
dec
adc
push
xor
pop
adc
mov
rcrl
imul
jle
rcrb
xchg
adc
lea
dec
sub
lea
jns
gs
fdiv
adc
xor
movsl
add
xor
or
mov
cs
inc
shlb
jg
mov
mov
add
jb
mov
imul
pop
pop
mov
and
aas
addr16
adc
cmp
jecxz
push
aas
fiaddl
js
mov
mov
jmp
js
mov
or
pop
cmp
cmc
mov
gs
jno
jb
pop
mov
fdivrl
outsb
and
scas
pop
cmc
sub
ljmp
iret
lock
loope
call
mov
push
dec
stos
xor
jno
test
adcl
stos
scas
lea
loope
scas
cld
dec
and
push
lds
dec
mov
sbb
out
dec
lock
adc
xor
popf
mov
in
lret
or
jg
das
repnz
xchg
aad
mov
popf
xchg
sub
notb
insb
xlat
push
test
les
xor
test
call
fsubs
push
outsb
jmp
sub
push
sbb
sarl
mov
xor
xor
xorb
push
orl
rorb
jl
pop
mov
mov
out
xor
data16
adc
mov
scas
frstor
fdivr
imul
pop
fwait
cltd
negl
bound
in
sbb
test
inc
adc
sbb
or
inc
sub
sahf
stos
lret
sbb
dec
sbb
fs
inc
dec
mov
inc
xlat
xchg
js
push
addr16
mov
jne
sub
aaa
testl
test
sub
jl
cmp
addr16
into
push
addr16
jne
lahf
sar
dec
sub
mov
mov
sub
outsb
scas
push
pop
xchg
orl
xchg
cmp
jg
adc
shll
sub
outsl
sub
cmp
arpl
lea
ljmp
sub
psubq
jb
clc
or
mov
and
stos
testb
sub
rorb
fsubr
bound
imul
aad
dec
add
mov
movsl
fistpll
hlt
jge
xor
mov
xchg
sub
add
shrb
xor
sub
adc
adc
jnp
movsb
loope
pop
sub
pop
pusha
pop
sbbl
enter
xor
cmc
adc
orl
shlb
adc
cltd
add
mov
repz
sub
ja
call
aam
out
jo
cmp
sahf
fsubrs
ret
mov
jmp
or
cmp
and
data16
cmp
add
sub
cmp
push
icebp
jb
fmuls
inc
aad
lahf
repnz
aad
gs
mov
int3
pop
out
mov
xchg
clc
mov
add
ja
add
dec
cmp
insl
into
adc
push
push
stos
xchg
ret
fidivs
push
lock
sub
scas
dec
insl
lret
roll
add
addr16
xchg
insl
cltd
int3
pop
lahf
shr
movsl
cld
cmp
mov
int3
cld
pop
fnstsw
scas
out
dec
cmp
repz
test
pop
cmp
pop
scas
aas
add
jge
inc
loop
xorb
jnp
mov
lock
test
outsl
test
xchg
xor
imul
fwait
dec
sbb
jg
mov
xor
mov
bound
imul
daa
xchg
icebp
adc
and
dec
out
xchg
cmp
cltd
or
push
push
xlat
jl
inc
popf
add
and
and
inc
or
sub
xlat
data16
cmp
shll
xchg
daa
dec
xchg
cmp
cmp
mov
dec
inc
mov
pushf
mov
loopne
push
sub
jg
outsb
mov
fimull
fisubl
jmp
insb
les
push
xlat
mov
mov
sbbb
int3
fmul
add
jo
stos
inc
call
je
gs
push
inc
pop
lret
aas
pop
out
add
mov
push
xchg
xchg
lret
imul
rorl
sbbb
push
inc
shl
sub
cmp
jl
mov
xorl
mov
jle
iret
stos
inc
roll
push
jns
add
push
loopne
pusha
in
mov
add
dec
lods
sbb
cmp
jecxz
lret
cmp
les
add
sub
inc
mov
lret
sub
pop
jp
les
jp
pushw
xchg
adcb
bound
ret
dec
movb
sbb
fadds
jl
daa
data16
adc
cmpsl
lret
inc
mov
jmp
sbb
push
or
stos
xchg
and
repnz
popa
stos
mov
and
sub
shlb
aad
jnp
ret
je
inc
xchg
pop
push
pop
fucomi
sub
jo
mov
inc
sti
ret
inc
scas
mov
mov
std
loope
inc
repnz
jecxz
test
out
push
sbb
mov
mov
jge
pop
push
lcall
aaa
adc
lods
or
arpl
aad
mull
bound
cmp
cmp
and
aas
fnstsw
ss
pop
and
daa
inc
mov
test
js
cmpl
push
leave
xchg
ret
mov
xchg
adc
mov
addl
xor
inc
mov
test
iret
dec
sbb
jo
ja
push
push
mov
dec
js
push
jae
iret
icebp
int
shlb
movsb
jg
pop
adc
push
pushf
pop
adc
ret
ja
mov
popf
pusha
mov
lcall
arpl
pop
fidivl
jl
add
mov
int3
sti
cmp
pop
mov
loope
push
das
adc
xor
pushf
fs
xor
loope
scas
jg
cmp
xor
fwait
ljmp
addr16
in
ror
dec
cmp
add
js
stos
cmp
aad
mov
jle
or
lds
sahf
cmp
adc
push
fldt
and
shlb
pop
push
or
xchg
mov
out
mov
sbb
mov
out
xchg
imulb
loope
test
aaa
loope
sub
scas
xchg
test
push
pop
add
push
or
push
fidivl
cltd
adc
jl
leave
and
scas
in
ljmp
push
pop
adc
and
mov
jae
sbb
jmp
repnz
fldt
and
aad
in
aaa
mov
add
mov
out
adc
mov
outsb
test
mov
jl
inc
mov
sbb
mov
insb
push
mov
lods
and
mov
pand
sbb
enter
in
out
cli
xorl
movsb
shl
sbb
push
rolb
mov
mov
incl
addr16
pop
or
sbb
mov
popl
xorl
dec
mov
jp
and
daa
xchg
cmpsb
xor
outsl
xchg
lods
pop
test
std
test
sbb
jle
push
enter
ret
mov
push
aas
shrl
or
or
lods
cmp
test
jecxz
int
mov
lock
iret
data16
cmpsl
incl
repnz
xchg
mov
push
movsl
push
cwtl
push
adc
pop
jl
mov
cmp
and
cli
inc
xchg
and
dec
call
mov
cmpsl
iret
sarb
mov
stos
inc
clc
adc
mov
mov
mov
add
push
sbb
movsb
mov
add
and
je
cs
mov
inc
and
fistpl
mov
stos
pop
xchg
cltd
and
jnp
movaps
rcrb
scas
inc
inc
call
cltd
aaa
jecxz
bound
dec
call
add
inc
stc
hlt
cmp
xchg
jmp
push
in
jns,pt
test
xor
pop
icebp
cmp
inc
mov
and
mov
popa
rcrb
mov
dec
arpl
imul
ja
xchg
pop
fwait
push
jmp
fnstenv
js
mov
rcl
jne
mov
js
jne
outsl
dec
sub
in
outsb
sarb
adc
aaa
jne
cmpsb
lds
lret
xchg
lea
and
pusha
and
aas
dec
aad
xor
mov
xchg
mov
movsb
or
xchg
pop
out
les
xchg
jmp
lock
gs
xor
jb
mov
std
jle
stc
mov
shlb
test
inc
or
dec
int
pop
dec
or
hlt
call
mov
aad
cs
xor
sbb
ret
cs
out
and
xchg
cs
pop
dec
sub
dec
sbb
mov
loopne
loopne
inc
call
popa
enter
push
inc
outsl
daa
repnz
sub
pushf
cmp
ja
in
jno
pusha
cmp
sbb
cmp
cmp
in
das
aaa
inc
ret
xchg
cmp
sbb
es
cmp
and
and
shlb
icebp
jle
adc
cmp
clc
inc
cwtl
cmp
movsl
stos
cli
and
push
das
mov
dec
jle
sub
lods
adc
add
mov
jmp
fiaddl
pop
push
imul
std
popf
adc
stc
je
repz
mov
mov
push
pop
jl
inc
inc
sti
popl
cwtl
and
add
adc
loop
xchg
cmpsl
mov
inc
dec
jge
cmp
pop
cmpsl
cld
int
mov
js
and
cwtl
out
sub
inc
jle
mov
mov
pop
jae
inc
cmp
pusha
cmc
test
or
dec
or
mov
sub
jno
push
lods
insb
add
sbb
out
jle
mov
ffreep
mov
popf
testl
pop
mov
xchg
and
or
stc
je
lds
add
jmp
test
roll
cmp
or
mov
jo
xor
mov
add
push
pop
mov
mov
cltd
int
dec
mov
cmpsl
nop
stos
xchg
inc
int3
sti
adc
jno
mov
jne
push
in
cli
loop
int
jecxz
into
out
sbb
jno
jo
iret
xor
insb
imul
imul
scas
sub
aaa
jp
jne
pop
or
inc
cld
push
and
push
dec
pop
or
add
gs
loope
dec
mov
aam
es
pop
fisttpll
jecxz
adc
or
push
loop
push
push
jle
sbb
addb
mov
fbstp
and
push
inc
sbb
xchg
mov
test
mov
xor
aas
inc
movsl
jg
and
shll
stos
and
push
add
aas
out
imul
mov
pushl
inc
in
outsb
jb
lods
lock
jl
xor
and
lock
movsl
into
push
das
dec
lcall
pop
inc
cmpsb
in
outsb
in
xchg
clc
pusha
or
jmp
or
leave
fld
sub
pop
or
mov
xchg
xchg
loopne
mov
lahf
mov
call
xchg
dec
xor
xor
mov
xchg
xchg
outsb
xchg
fstl
fstpl
adc
cmp
inc
mov
add
bound
inc
dec
push
cmpsl
idiv
loope
mov
cwtl
pushf
lea
sub
out
dec
cltd
sbb
mov
test
nop
fildl
xchg
fidivrl
mov
test
test
test
ret
mov
ret
fwait
mov
sub
xchg
pop
inc
movsl
push
jecxz
in
inc
jbe
call
pop
call
xor
fwait
sbb
push
pop
mov
pop
out
scas
clc
pop
insl
cmp
mov
sahf
sub
sub
or
shr
je
loope
in
mov
sahf
or
mov
fisubl
jne
xchg
inc
mov
jnp
filds
iret
shll
jp
loope
loope
mov
xor
fsubrp
cmpsl
xchg
mov
popf
pushf
jnp
mov
adc
ficomps
sbb
dec
std
mov
push
push
push
gs
rolb
lret
imul
push
push
imul
and
int3
xchg
dec
dec
xor
lahf
sbb
fcomps
mov
pop
outsl
ret
ja
fcmovnbe
out
lods
push
scas
sub
cmp
js
hlt
pop
sbb
push
pop
add
cld
and
enter
and
or
test
js
xorb
cmp
push
rcll
sub
and
push
aam
cmp
js
mov
test
adc
adc
mov
lock
jne
leave
inc
add
test
dec
mull
call
add
and
jge
ljmp
sub
or
add
or
inc
mov
adc
test
in
test
sub
xor
je
xor
iret
rcr
sbb
dec
out
pusha
sub
pushf
test
inc
mov
test
push
sub
push
pop
push
add
cmp
jge
xchg
cli
mov
xor
cwtl
jne
notb
rcll
int3
outsb
sbb
lock
daa
adc
cmp
mov
inc
gs
imul
mov
push
imul
adc
inc
adc
out
adc
movsb
sub
add
push
lret
cmp
jmp
aad
push
loopne
mov
push
cmp
and
xor
out
sahf
pop
and
or
addr16
test
dec
xchg
sbb
aam
loop
xchg
push
jp
stos
mov
inc
fcmove
imul
adc
xchg
fdivl
pop
or
inc
inc
cmp
mov
and
inc
pushf
mov
inc
jp
sub
or
insb
dec
shl
jp
adcb
out
test
pop
dec
xchg
sahf
pop
pop
sub
sbb
sbb
clc
aas
or
outsb
ja
sub
dec
dec
test
mov
div
and
cmp
push
add
mov
add
pop
dec
out
push
adc
shlb
fcoms
xchg
bound
cmp
aam
sub
test
in
fistpll
pop
xchg
push
mov
inc
sbbb
lods
test
icebp
test
mov
mov
icebp
xchg
jp
inc
mov
xchg
arpl
inc
lcall
stc
andl
xchg
mov
shlb
ljmp
imul
ja
mov
mov
and
sbb
mov
stos
inc
lock
xor
sub
xchg
mov
ss
fdiv
js
pop
sub
xor
pusha
scas
inc
jecxz
add
add
addl
push
dec
mov
inc
fnsave
adc
or
push
inc
lahf
dec
push
das
add
push
pop
mov
sub
shlb
jno
jbe
mov
mov
fwait
adc
cmp
leave
ja
shl
test
xor
sub
pop
and
push
es
cwtl
jecxz
in
mov
data16
in
cli
shrb
sbb
sub
mov
inc
mov
sar
xchg
test
mov
jecxz
xor
cltd
paddsb
mov
test
repnz
cmp
mov
sub
inc
dec
lods
fwait
xchg
ret
in
cmp
mov
imul
std
cmp
pusha
sbb
mov
inc
fs
lods
nop
aaa
mov
sbb
aad
movsl
sbb
inc
fistpl
mov
inc
jle
mov
scas
test
cs
xlat
bound
push
shlb
repz
lock
mov
sub
xchg
dec
pop
adc
and
pop
negl
cmp
loope
mov
lret
test
popa
sub
mov
nop
repnz
add
sub
sbb
dec
dec
adc
pop
inc
iret
xchg
sbb
les
loope
xor
lods
adc
jl
pusha
cltd
mov
test
cmpsb
inc
in
and
xchg
cli
xor
adc
mov
adc
rcll
sbb
jb
dec
inc
adc
sub
subl
cmp
and
js
ret
mov
sbb
sbb
imul
scas
mov
jae
pop
mov
xchg
ds
es
daa
scas
pushf
pop
xor
and
cli
js
sub
adc
stos
add
lods
loope
and
fucomp
decl
repz
cmp
lds
ret
out
imul
xor
adc
fs
xchg
sbb
pop
lods
or
inc
test
incb
xlat
push
test
jge
aad
adc
jb
aas
sbb
mov
mov
push
xchg
inc
mov
sub
arpl
div
adc
gs
jo
fcmove
or
inc
xchg
in
lret
sub
stos
xor
push
sahf
inc
repz
stos
stos
dec
and
fndisi(8087
push
cmp
jle
addw
aam
test
fwait
test
stos
fwait
jnp
jg
mov
cltd
rep
push
aad
fwait
push
cmp
dec
add
add
xor
hlt
into
int3
dec
push
fsubrl
rol
in
shll
dec
inc
pop
icebp
fwait
push
adc
incb
cltd
andl
pop
xor
xor
xor
rcr
std
sbb
xchg
arpl
cmpsb
jl
gs
clc
test
adc
sub
add
daa
adc
jle
lahf
add
aad
pop
add
pop
jo
dec
cmpb
rolb
pop
les
jbe
inc
xchg
jmp
rolb
push
sbb
add
pop
test
rorl
lret
in
inc
mov
mov
repnz
push
push
sub
dec
shr
mov
inc
xchg
addr16
cld
rcrb
xchg
shrb
xlat
mov
adc
sbb
insl
jbe
xchg
mov
jbe
out
lahf
adc
adc
aas
add
push
sti
sbb
pop
sub
lret
add
jecxz
mov
mov
stc
or
cmp
xchg
inc
popf
push
repz
shrb
subl
push
push
mov
stos
push
mov
rorb
arpl
inc
xlat
xor
js
fwait
out
dec
cmc
inc
push
scas
adc
jb
stc
mov
rolb
insb
mov
jl
jge
sbb
hlt
sub
xor
test
push
in
data16
dec
mov
sti
inc
imul
shll
popf
fadds
pop
cmp
adc
push
and
loopne
cmp
in
push
rolb
hlt
mov
adc
dec
xor
or
jbe
gs
cltd
jnp
in
repz
fldt
imul
and
cwtl
lcall
sbb
mov
dec
inc
sbb
xchg
mov
push
mov
sub
data16
loopne
lea
fwait
xlat
and
xor
or
in
ljmp
sub
cmp
popa
mov
add
xor
ficompl
sbb
jno
or
mov
call
mov
mov
push
fldcw
ljmp
subb
shl
dec
iret
jp
mov
iret
cmp
out
cmp
insl
mov
cld
jae
fstpt
mov
fwait
pusha
mov
dec
dec
mov
pushf
andl
xor
xchg
cli
push
cmpb
rcrb
imul
mov
aaa
inc
jp
inc
test
sahf
adc
fistpll
adc
cmp
dec
mov
pop
clc
dec
insb
movnti
out
repz
dec
or
into
sub
mov
add
xchg
mov
xchg
into
cltd
dec
sbb
or
fsub
push
daa
mov
pusha
hlt
jge
xor
imulb
sbb
ret
or
cmp
rclb
pop
sub
inc
cld
xchg
adc
xchg
icebp
leave
stc
push
xchg
loop
shrb
movsl
lret
mov
adc
lcall
mov
imul
out
bound
mov
es
outsl
cmp
int
dec
pop
adc
add
cltd
push
pop
lret
dec
sbb
mov
sahf
cltd
lds
mov
int3
cmp
cmp
jg
loopne
jbe
inc
sub
xor
jne
pop
aam
fprem1
mov
popa
mov
call
lods
hlt
lret
mov
sbb
cmpsb
inc
cmp
out
pop
popa
incl
loop
mov
ja
lahf
shrb
in
imul
int
add
xor
pop
mov
push
xor
test
xor
rol
xchg
filds
jp
and
addr16
lds
into
push
movsb
xchg
pop
aad
adc
xlat
fiadds
pop
lret
xchg
mov
xchg
in
dec
cs
mov
or
xlat
or
ljmp
xchg
std
dec
pop
push
sub
jecxz
push
ret
dec
cmp
ljmp
pop
dec
stos
pop
sub
pop
push
sub
dec
inc
ret
and
adc
es
sub
cmp
jp
rorl
dec
enter
out
jbe
pop
sbb
imul
cwtl
repz
inc
xchg
fsubrp
data16
pop
adc
xor
inc
mov
jnp
icebp
je
xor
or
dec
push
int
scas
sbb
xlat
lock
test
jo
popf
fistpl
pushf
pop
jb
repz
jp
ret
lcall
std
lock
mov
pop
dec
mov
xchg
sarl
inc
push
inc
adc
pop
mov
mov
movsb
stos
mov
ljmp
mov
inc
cmp
mov
push
sub
movsl
stos
repz
jo
and
lret
add
stos
lret
add
or
imul
inc
pop
leave
scas
std
cmc
test
cwtl
into
jne
scas
jp
mov
add
mov
xor
jl
sub
lret
jle
or
xchg
push
sub
iret
dec
loope
jae
movsb
inc
dec
inc
lea
cmp
jne
push
je
xor
inc
pop
pop
addr16
and
mov
aam
int
arpl
ret
pop
aad
adc
stos
mov
jl
scas
pop
fdivrl
mov
adc
cmp
pop
insb
roll
fdivrs
xor
das
pop
pop
jno
pop
loopne
push
lea
orb
aam
fs
dec
jl
sbb
ret
jmp
mov
add
popf
cmpsl
push
dec
dec
mov
sub
dec
xor
jecxz
xchg
stos
mov
cwtl
psubd
stos
in
je
test
dec
aam
imul
lea
dec
testb
repnz
daa
lods
and
loope
adc
jo
rol
dec
pop
mov
bound
pop
mov
lea
add
mov
clc
inc
addb
push
or
adc
rclb
and
jno
push
fidivl
adcb
loope
je
lcall
std
sahf
dec
mov
cmpsl
xor
in
loope
cmp
mov
rorb
imul
std
xchg
lret
and
jo
inc
jnp
push
pop
fcompl
sub
test
mov
mov
fcmovbe
imull
xchg
xor
std
loopne
lock
shll
lahf
adc
aad
sub
lock
xchg
mov
dec
sbb
pop
iret
jg
ret
push
movl
and
jne
imul
dec
enter
dec
xchg
mov
cwtl
push
test
inc
ja
repnz
cmc
mov
data16
shrb
aas
xadd
out
or
loopne
push
icebp
inc
mov
addr16
mov
rorb
test
lret
add
stos
sbb
dec
scas
push
into
fdivp
jnp
stc
ret
or
les
in
xchg
es
imull
popf
adc
jae
push
xchg
call
adc
dec
add
xchg
sub
inc
bound
add
mov
cmp
lods
scas
push
sti
inc
pop
out
ret
mov
cmpb
int
inc
in
repnz
jno
push
mov
push
fisubrs
test
pusha
xchg
and
xchg
insb
jge
rcl
push
les
cwtl
mov
fwait
xchg
pop
mov
adc
andb
and
mov
push
loope
mov
mov
incb
pushf
in
imul
das
dec
int
adc
lahf
sbbb
or
jle
cmp
cmpsb
cltd
lea
cmp
and
imul
imul
repnz
sub
add
repnz
roll
fnstsw
test
shll
mov
push
sbb
daa
int
add
mov
lods
stc
jg
fldt
push
cltd
adc
jnp
movsb
fst
aas
sbb
cltd
sbb
jae
iret
cmp
dec
push
aas
or
push
push
ret
unpcklps
ss
xchg
test
mov
or
shll
push
add
push
into
cmpb
shr
test
push
xor
or
adc
out
sub
loopne
out
xchg
fs
jbe
xchg
or
scas
andb
fsts
cmpsb
add
and
jecxz
iret
lahf
es
pop
pop
dec
xchg
cld
push
cwtl
lcall
std
mov
xor
pop
outsl
jnp
lret
leave
cwtl
cmp
pop
icebp
push
sbb
inc
xor
adc
mov
sub
push
out
push
inc
mov
fidivs
dec
sti
push
lret
stc
std
jle
out
cli
push
mov
adc
and
xchg
mov
jae
add
sbb
ds
xchg
cmc
push
int
ljmp
and
popa
and
scas
cmp
dec
sub
sbb
cmovne
push
mov
xor
mov
jge
iret
in
scas
mov
mov
mov
xchg
repnz
test
jg
lret
lock
jo
adc
cmp
mov
xlat
xchg
push
out
cmp
push
mov
lret
scas
addb
stc
jae
mov
pop
stc
jge
pop
pop
rorl
sub
inc
mov
out
mov
mov
std
jge
lret
sar
lds
es
sub
and
lcall
add
bound
pop
or
movsl
cwtl
adc
xchg
loope
jno,pt
or
ljmp
cld
or
out
pcmpeqw
xor
les
aam
push
pop
pop
pop
imul
movhps
add
add
movsb
mov
icebp
push
adc
pop
dec
nop
xor
dec
mov
sbb
mov
roll
sub
dec
movsl
ja
jp
imul
call
adc
in
lock
fisttpll
or
or
test
sti
adc
mov
js
jo
sbb
pop
xor
jl
cmp
cmp
icebp
fcmovnb
test
inc
iret
ficomps
mov
mov
xbegin
fs
dec
xor
dec
call
gs
call
pop
ss
jl
in
or
cmp
mov
jno
ds
dec
leave
lods
mov
jmp
daa
push
stos
ds
int3
xchg
mov
sahf
iret
nop
ja
cld
jecxz
mov
shll
outsl
popf
iret
lds
adc
sbb
and
mov
ds
call
sahf
lods
adc
add
sub
movsl
jle
adc
mov
adc
out
mov
mov
inc
pop
dec
fldt
push
lods
push
lahf
mov
sarl
push
dec
xchg
nop
lds
mov
out
adc
popf
pop
cmp
push
ds
es
add
push
dec
dec
and
loope
inc
out
mov
and
dec
cmp
subl
das
mov
sub
js
push
in
out
test
sub
push
dec
enter
push
xor
xlat
outsb
movsb
and
sbb
dec
pop
mov
pusha
divb
bound
ret
sub
xchg
mov
sub
fstp
test
mov
dec
in
jge
mov
adc
sti
jae
jmp
sbb
es
mov
jmp
fisubrs
scas
aam
movsl
jmp
rol
scas
pushf
shlb
dec
cmp
or
add
cmp
sti
repz
sbb
das
xchg
inc
je
or
xor
pop
inc
rcll
mov
or
test
dec
pop
arpl
pushf
fidivs
xchg
pop
sahf
fisubs
jbe
lods
fisubl
sti
cmp
imul
push
sub
scas
cmp
outsb
jns
loopne
xor
repz
fidivl
nop
int
jbe
mov
inc
dec
fcomp
cmc
xchg
stos
es
in
jmp
dec
in
lea
dec
test
cltd
sbb
jp
push
xor
xchg
jne
mov
and
ret
adc
pushf
call
mov
add
scas
test
pop
add
mov
mov
scas
inc
arpl
xchg
cltd
int3
jb
mov
fwait
adc
popf
fldt
fld
pop
outsl
cwtl
mov
loop
loopne
fcoml
pop
push
xchg
push
xchg
and
test
push
stos
mov
test
enter
cmpsl
bound
xchg
fsubs
subb
fmul
dec
pop
cmp
push
push
push
jne
nop
pop
insb
and
push
ss
aam
adc
aam
sahf
xchg
inc
fcoml
and
movsl
insb
pushf
mov
and
lods
jbe
mov
adcb
outsl
sub
adc
bound
cmp
movsl
ret
push
nop
push
mov
pop
insb
int3
fucomp
adc
or
push
xchg
mov
rclb
movsb
xorl
mov
pusha
pop
and
push
push
pop
das
pop
std
dec
dec
dec
ret
xor
je
fcmovnb
mov
sub
imul
scas
into
in
ds
inc
or
sub
dec
add
xor
shl
rclb
clc
xchg
pop
jo
scas
mov
xor
aas
rorb
imul
movsb
pop
roll
jge
test
mov
stc
ss
ds
mov
mov
inc
imul
insl
lds
fchs
push
inc
pop
xchg
test
dec
out
shlb
mov
lds
xor
sub
cmp
mov
or
dec
push
sahf
jb
aas
shrl
les
in
pop
pop
xchg
popa
sbbb
nop
cmp
bound
jmp
mov
sub
mov
jle
ss
jo
fs
shll
arpl
movsb
gs
clc
test
stc
jmp
push
mov
ljmp
adc
push
cmp
sub
add
jl
shr
cmp
sti
push
push
mov
shrl
test
mov
pop
add
out
mov
xor
push
jbe
mov
sbb
js
paddq
shr
outsl
or
push
push
inc
in
je
in
jns
jo
out
inc
inc
or
cmp
pop
push
sub
outsb
rclb
fldcw
jno
rclb
sahf
add
loopne
or
dec
dec
jbe
ljmp
addb
inc
fadds
push
out
fstsw
sub
jns
fsubrs
cmp
xor
sub
sbb
dec
addb
cmp
sub
push
push
test
fdivrs
jle
sahf
outsb
and
sbbl
mov
aas
mov
dec
jl
jnp
xchg
loop
imul
jb
mov
sti
das
negb
and
cli
xchg
out
cltd
shlb
leave
cmp
dec
pusha
push
arpl
cld
fs
jno
dec
add
jbe
lcall
in
loop
ret
cmp
push
jg
fidivrl
add
cmp
dec
mov
xlat
xchg
lret
mov
cmpsl
jge
or
pop
xchg
sub
leave
popf
adc
lcall
mov
jo
cmp
mov
sbb
and
movsl
icebp
addl
mov
leave
pop
dec
insl
cmp
mov
inc
jb
lahf
mov
cli
sar
jb
imull
adc
pop
nop
dec
sub
test
mov
aad
iret
int
imul
push
js
pushf
xorb
or
adc
push
sahf
xor
sti
nop
inc
sbb
mov
dec
loop
jb
mov
ret
mov
pushf
scas
lahf
test
mov
jle
insb
aam
sub
loop
test
arpl
loopne
cli
jmp
jns
pop
aam
cmp
jle
sub
pop
mov
cwtl
jnp
cmp
xor
mov
xor
jmp
pop
adc
pushf
aas
jne
jge
stc
ret
into
dec
sub
pop
sahf
ss
sub
aam
pop
adc
fwait
or
jg
ffreep
rcrb
movsl
mov
push
test
sub
mov
je
iret
push
popa
xchg
mov
and
sarl
sbb
out
mov
xor
ljmp
in
push
popf
aad
xchg
ljmp
popf
callw
pop
cmp
push
cmp
scas
cmpsb
mov
lock
aas
jmp
fwait
push
pop
dec
xchg
lret
jnp
std
ss
mov
testb
imul
daa
shlb
pop
stc
insb
clc
rcll
mov
inc
cltd
testl
int3
mov
rorb
mov
push
fisttpl
and
in
mov
call
pop
sub
sbb
mov
push
inc
icebp
popa
dec
jnp
xor
push
or
cmpsl
push
pop
std
mov
popf
cmp
pushf
xorb
js
mov
andl
push
xlat
fdivrs
fcomip
pop
mov
sub
mov
movsb
dec
inc
adc
push
jo
lret
mov
lea
test
and
in
xchg
loop
aaa
jle
sub
or
popf
insl
or
push
imul
push
fldl
xorb
stos
push
ja
cmpsl
incl
dec
pop
mov
movsb
pop
call
ljmp
mov
notl
stos
fidivrl
gs
movsb
cmc
mov
into
pop
push
je
hlt
cmpl
std
pusha
mov
fnstcw
mov
dec
and
in
xorl
cltd
or
sahf
xor
mov
mov
sti
cmpsb
xchg
int3
pop
or
insl
inc
or
bound
dec
pop
and
pushf
cs
xchg
sub
data16
xchg
stos
out
lods
mov
inc
cmp
mov
aas
jno
xor
rol
in
into
inc
sahf
and
std
pop
dec
adc
push
fiadds
cld
push
push
push
test
jecxz
add
push
or
xlat
divb
cmp
mov
cmp
mov
rcrl
dec
xor
ds
fxam
sub
bound
mov
sbb
popa
pop
lods
mov
cmp
push
aaa
loop
mov
fsubrl
mov
pop
in
sbb
jnp
fbstp
pop
stos
cmp
lret
push
xor
js
mov
cltd
in
xchg
cmp
stos
adc
test
pop
xor
das
xlat
push
add
fnsave
insb
fistps
dec
loopne
test
or
int3
lret
xor
test
mov
fnstsw
lcall
out
push
dec
inc
jb
and
inc
mov
rolb
inc
call
scas
ds
jecxz
decl
or
add
je
jns
loope
test
mov
sub
cmp
mov
outsb
mov
xlat
fdivl
enter
icebp
lret
outsb
push
xchg
bound
jno
add
fldcw
jmp
leave
sub
sbb
inc
out
call
inc
test
xlat
cmp
pop
insl
jl
push
dec
inc
push
scas
mov
or
aaa
and
inc
lret
jbe
mov
test
push
insb
push
push
push
mov
gs
and
mov
stos
in
mov
out
rcll
jnp
xchg
mov
ljmp
jge
push
mov
fwait
mov
mov
cmp
and
fidivrs
xchg
test
xchg
lahf
jl
pop
aad
or
jae
lret
or
or
cltd
xchg
mov
movsl
lret
jo
das
dec
adc
inc
rcr
lcall
lods
shrl
ljmp
mov
fbld
fsubr
jno
cmp
js
adc
mov
mov
and
jnp
movsl
cltd
add
divb
stos
ljmp
ja
adc
cmp
clc
sbb
rcrb
out
scas
lret
ret
dec
mov
jle
stos
fstpt
dec
mov
incb
sbb
cltd
mov
sub
mov
pusha
mov
insl
cmp
jge
cwtl
rolb
cmpsl
call
les
xchg
xchg
push
addr16
iret
or
mov
mov
mov
out
jae
repnz
or
in
inc
bound
in
inc
xchg
jp
push
ja
pop
test
sbb
mov
or
outsl
popa
aaa
je
xor
ja
sbb
pop
and
insl
jo
sub
pop
push
mov
inc
repnz
data16
ds
sub
clc
adc
cmp
pushl
cmp
push
add
shrl
popl
das
push
aam
sub
ret
jns
pop
fiaddl
jae
sub
adc
mov
sbb
inc
dec
pop
out
divl
repnz
shrb
std
mov
push
sub
mov
pop
adc
lcall
mov
or
scas
sub
push
fld
scas
decl
and
mov
lock
imul
pop
xor
leave
pop
aam
in
adc
in
jne
mov
fmull
sbb
loope
in
sub
mov
add
mov
rorb
out
jno
enter
outsl
testb
add
xchg
out
daa
pusha
push
sub
imul
or
into
push
jle
inc
adcl
leave
in
jne
fistpll
mov
inc
mov
jne
sarb
cli
xchg
xchg
push
sbb
push
push
and
leave
movsl
dec
dec
mov
imul
fisttpll
push
inc
or
iret
push
sbb
cmp
push
movsl
rclb
or
popa
add
fwait
and
push
cmp
cmpsl
test
lcall
xor
cmc
fsub
dec
pop
lock
xchg
les
or
lock
test
xor
ret
ss
mov
aaa
adc
add
and
sbb
popf
sbb
daa
mov
or
inc
mov
mov
daa
adc
lods
inc
les
mov
push
or
lods
sar
in
sub
xchg
in
ds
test
and
fwait
scas
aad
int3
or
or
jbe
mov
push
jmp
or
insb
das
bound
pop
adc
push
cs
dec
in
hlt
push
fcomps
xchg
jmp
lock
inc
sub
mov
aad
mov
outsl
jg
mov
xchg
adc
mov
push
pop
mov
dec
mov
inc
loopne
sbbl
icebp
xor
iret
adc
pop
lds
dec
insl
sbb
mov
movsb
cmc
mov
cmp
mov
adc
jl
stos
add
xchg
pop
enter
jmp
out
inc
mov
xor
stos
es
pop
pop
dec
dec
fwait
push
mov
adc
test
jb
popf
mov
inc
inc
inc
inc
call
mov
and
fiaddl
lcall
mov
mov
sbb
and
sub
mov
dec
sbb
fstl
pop
pop
mov
fcmovnbe
dec
insb
adcl
out
xor
outsb
sub
sub
jb
pop
fs
sti
lods
mov
adc
mov
fdivs
cmp
loope
pop
das
xor
rcll
or
dec
fists
jecxz
mov
mov
mov
adc
or
push
sbb
xchg
mulb
lock
call
lods
insl
adc
out
idivl
xchg
arpl
mov
enter
rcr
xchg
push
ss
popf
fildl
inc
dec
outsl
push
lahf
mov
adc
testl
add
sbb
imul
inc
and
rcl
sub
xor
xchg
jp
jmp
pop
mov
mov
sti
pop
shll
xchg
xchg
ss
inc
in
add
pop
sbb
mov
jg
call
int
mov
mov
dec
push
mov
pushf
dec
push
sub
add
add
test
jbe
mul
and
iret
out
and
push
dec
test
arpl
test
lret
shlb
aam
inc
mov
push
loope
or
lea
ret
cli
imul
or
sub
jmp
data16
popfw
nop
push
and
ret
enter
push
jp
mov
xor
sbb
jp
repz
jno
adc
call
cmp
inc
mov
xor
push
scas
dec
sub
or
mov
pop
mov
movsb
pop
mov
mov
cmp
mov
int
popa
mov
mov
adc
clc
insb
testb
out
jae
jbe
dec
ljmp
push
in
dec
jle
jg
add
mov
je
rorb
push
xchg
mov
jbe
jmp
mov
inc
xchg
mov
test
jmp
es
popf
stos
stc
or
cli
dec
cmpsb
out
cmpsl
mov
loopne
arpl
jp
into
adc
popf
jg
loope
ffreep
or
jns
out
ds
mov
xchg
or
hlt
addr16
and
push
cltd
mov
mov
leave
inc
mov
pop
pop
icebp
fmulp
mov
sub
mov
rorl
pop
push
popf
pushf
push
sub
pop
daa
icebp
andb
cmc
cmpsl
add
jg
push
xchg
clc
jle
insb
dec
cmp
xor
lret
add
lahf
push
test
cld
jl
inc
lret
inc
test
push
fbstp
push
in
adc
xor
or
xchg
gs
push
out
xchg
frstor
ss
cmpsb
xchg
cmc
mov
cmpsb
pop
jae
clc
movsl
ljmp
pop
push
mov
xchg
mov
or
js
dec
jae
mov
out
insb
push
mov
repnz
nop
fs
rcrb
idivl
dec
or
sbb
mov
js
dec
fimull
lahf
add
lods
inc
and
sbb
mov
add
sbb
test
andb
aam
add
lds
jp,pt
lcall
xchg
and
cld
inc
in
aaa
iret
faddp
je
ljmp
fwait
xchg
sbbl
add
stc
xor
addr16
jp
repz
and
cmpl
lcall
rcrb
test
dec
insl
pop
into
inc
fnstcw
and
aad
inc
rclb
incb
daa
xchg
ds
pop
aad
push
cmp
dec
adc
adc
test
andl
inc
or
aas
lock
xchg
mov
cmp
jl
fcmovbe
cmp
xchg
data16
in
lods
movsl
add
rcl
and
xchg
pop
xchg
jg
adc
pop
fs
arpl
int3
sub
adc
iret
sarl
inc
pop
test
or
add
and
pop
rcrb
jp
in
mov
mov
inc
bound
dec
test
or
sbb
into
jae
movsb
mov
ds
add
or
pop
and
push
mov
cmp
inc
add
xor
pop
push
xor
nop
pop
pop
mov
outsb
shrl
push
scas
adcb
fidivrl
aas
pop
js
cmp
out
mov
shl
jnp
mov
inc
dec
jo
adc
lret
ss
ret
pushf
fwait
sub
adc
lret
mov
mov
rcrl
in
cmc
fucomi
push
mov
lock
ljmp
push
xchg
add
mov
sub
pop
fisttpl
xchg
fwait
xor
rorl
xor
lcall
lods
add
mov
pop
jae
in
int3
test
outsb
xchg
int
andb
add
or
mov
sti
dec
sub
cmpsl
lods
ja
inc
aam
movsl
shll
jbe
pop
pop
mov
pop
jbe
xchg
test
mov
stc
pop
orl
xchg
xchg
loopne
lret
adc
shlb
pop
aaa
mov
or
inc
iret
jb
cwtl
mov
stos
hlt
adc
sbb
jnp
xchg
dec
repnz
add
andb
jge
push
ss
aam
les
jge
push
sarl
inc
sahf
push
pop
push
scas
subl
fcoms
mov
rorl
cmp
push
mov
push
and
mov
cmp
jno
mov
aad
inc
mov
mov
xor
fcmovu
xchg
mov
fsubrs
orb
ja
cmpsb
xor
cwtl
add
scas
push
fisttpl
push
ja
push
scas
cmc
lret
xor
ret
mov
imul
mov
or
nop
and
stc
pop
or
inc
fisubl
arpl
rorl
jl
or
push
leave
push
add
gs
cld
dec
pop
dec
xor
jns
mov
jne
inc
shlb
test
inc
sbb
pop
jnp
sbb
xchg
mov
dec
fstl
mov
js
mov
pop
mov
push
insl
inc
xchg
fistpll
cld
out
jo
and
sarb
xor
mov
addr16
fld
or
xor
fsts
or
pop
outsb
cmp
shl
and
mov
xor
cmpsl
insb
mov
push
mov
jge
pop
adc
mov
mov
cmpsb
outsb
and
pop
pop
xchg
and
outsb
or
push
dec
lret
adc
push
xchg
aas
inc
jbe
dec
xlat
pop
push
and
in
movsl
ja
movsb
lds
inc
mov
gs
sarl
loope
test
pusha
cmp
xor
jae
push
jge
mov
adc
aas
and
subl
mov
jae
fdivr
stc
sbbb
dec
lods
out
xchg
pusha
icebp
loopne
fnstenv
jecxz
and
and
push
push
xchg
or
mov
outsl
cld
in
arpl
mov
sbbb
ljmp
dec
aaa
xchg
int
loop
xor
inc
mov
movsl
cltd
out
mov
mov
sbb
dec
mov
in
mov
mov
add
das
movsb
dec
mov
adc
into
into
jns
movsb
xor
sub
mov
mov
jle
push
lods
adc
mov
fnstsw
aaa
pusha
test
test
lods
push
cwtl
add
mov
cmpsb
sub
cltd
xlat
ljmp
insl
pop
cmp
mov
pop
repnz
test
daa
cmp
and
std
jne
jne
and
mov
sub
adc
cmpsb
call
pop
stos
cmp
sti
or
cld
cmp
cmc
and
add
popf
xchg
mov
xor
jo
je
inc
sub
mov
xor
sahf
bound
rolb
fidivrl
xor
outsl
je
scas
das
sbb
mov
out
orb
das
hlt
popf
pop
xlat
loop
movl
mov
jns
fidivrl
jnp
sbb
mov
push
ja
adc
ss
mov
mov
or
int3
js
xor
mov
mov
ja
jb
scas
push
jle
xchg
adc
pop
jno
test
std
lods
movsl
scas
loop,pt
mov
es
lret
sbb
outsb
jo
push
call
cld
and
lcall
stc
mov
js
mov
iret
cs
jge
push
pop
rol
loope
sub
xor
sub
inc
xchg
jnp
scas
test
jmp
xchg
icebp
sbb
mov
ficompl
es
pop
dec
or
clc
repnz
xchg
add
lock
cld
sahf
data16
sbb
iret
dec
cmp
mov
movsl
cmp
and
and
cltd
add
ja
inc
mov
in
es
enter
mov
mov
inc
aaa
insl
sti
mov
jo
cli
mov
mov
pop
dec
arpl
xchg
mov
cmc
ljmp
daa
fwait
cmpsb
dec
push
call
cwtl
mov
xor
mov
hlt
decb
je
xor
jo
repnz
and
xor
bound
add
cmp
mov
out
and
xor
and
lock
mov
mov
sti
hlt
test
mov
stc
mov
jp
cmp
rclb
adc
rol
sub
add
aaa
bound
stos
scas
sub
jae
in
cmp
ss
icebp
add
hlt
movsb
cs
stc
inc
lahf
outsl
xchg
sub
aam
sub
inc
add
and
mov
ret
arpl
imul
movsl
mov
add
sbb
xchg
notl
jle
sub
mov
and
jo
insl
xor
mov
ret
cmp
dec
loope
aaa
imul
push
out
push
orb
adc
dec
icebp
jno
xchg
or
fs
sbb
rorl
mov
pop
xchg
push
int3
stc
and
sbb
pop
mov
jo
sub
js
iret
lcall
scas
dec
inc
loop
jb
push
shlb
mov
xchg
je
hlt
stc
sarl
cmp
mov
scas
sub
lret
hlt
sahf
mov
loop
in
cmpsl
jmp
stos
daa
xchg
bound
notl
stos
adc
out
dec
lods
xor
insl
inc
aad
add
loop
cmp
fistpll
xchg
cmp
xchg
sub
mov
xor
lcall
dec
xchg
repz
dec
pusha
stos
mov
jns
jb
loop
or
jle
sub
dec
sahf
jno
imulb
mov
mov
sub
repz
insl
aad
loope
stos
adc
test
and
and
insb
lret
cmpsb
or
mov
ljmp
push
sub
arpl
cmc
jno
adc
icebp
sbb
sbb
cmpsb
out
push
movsl
inc
push
shlb
jno
push
ret
out
outsb
jnp
sbb
cld
repnz
mov
add
xor
loopne
fcmovb
add
fisttpll
ss
mov
repz
xchg
mov
loopne
sbb
shlb
mov
and
jne
nop
push
bound
or
call
push
arpl
push
pop
ljmp
jmp
or
mov
push
enter
sub
andb
test
fsubl
into
jp
mov
lret
imul
sbb
xor
push
mov
pop
xorb
dec
mov
lahf
daa
inc
outsl
push
add
xchg
pop
cld
jno
pop
push
pop
cmc
insb
cld
inc
pop
pop
into
dec
movzbl
addr16
outsl
daa
lea
and
inc
iret
xlat
fstps
pop
pop
jno
sbb
jg
push
insb
fistl
dec
test
mov
push
test
test
and
inc
pop
sti
cmp
lcall
mov
popf
shll
add
mov
inc
lahf
out
pop
pop
dec
pop
lock
hlt
lret
iret
test
enter
movntq
out
sbb
stos
lods
add
jg
nop
in
pop
mov
push
mov
add
jge
loope
push
and
cmp
outsb
cmp
out
mov
push
lods
icebp
or
outsb
lea
adc
push
inc
push
mov
loopne
enter
cmp
fs
daa
imul
nop
nop
mov
pop
ss
pop
adc
aam
aam
insl
xor
nop
mov
sub
cwtl
cmp
ss
sahf
es
outsb
jae
flds
inc
loope
out
subl
sbb
repz
adc
cmc
loop
subl
sbb
inc
cmp
xchg
aaa
sti
and
rolb
xchg
lea
dec
popf
mov
test
repnz
add
int
out
inc
mov
js
nop
xchg
pushf
push
xchg
shlb
lcall
ja
xchg
xor
xchg
icebp
shlb
mov
mov
scas
js
ljmp
fsts
or
out
rorb
cs
jp
orl
dec
stc
push
icebp
cmp
jbe
sub
fdivl
fmuls
shl
in
jmp
sub
scas
roll
jne
loopne
xchg
or
ljmp
stos
and
mov
jbe
dec
and
addr16
jg
je,pn
inc
jecxz
inc
out
jmp
push
pop
jne
push
stos
dec
shll
popf
popf
fmuls
mov
xchg
xchg
mov
inc
daa
xor
push
xchg
fs
cmpsb
cltd
pushf
faddl
insb
test
fldcw
scas
dec
insb
in
out
je
push
xchg
pop
xor
mov
and
cmp
jg
ljmp
mov
dec
xor
xchg
inc
ds
loope
and
int3
in
jmp
push
fists
je
xchg
outsl
aad
mov
inc
outsl
push
adc
outsl
jne
out
cmpsb
jae
sub
xor
in
and
loop
xlat
xor
fmul
sbb
inc
xor
out
rclb
std
xchg
pop
cmpl
insb
nop
fsubp
out
sti
jmp
add
pop
aas
adc
mov
push
or
xchg
push
sub
popw
pop
jb
xor
out
xchg
out
push
fs
sti
repnz
inc
xor
dec
cs
je
fwait
rorl
cs
pop
arpl
inc
mov
mov
inc
mov
int3
into
push
pop
dec
sti
das
pop
xlat
enter
and
adc
cmp
xorl
mov
or
call
cmp
cmp
je
scas
clc
sti
pshufw
pop
push
flds
loopne
pop
js
pop
pop
pusha
mov
adc
imul
test
mov
xor
dec
imul
arpl
cmpsb
add
fs
es
ja
mull
loope
lock
out
ljmpw
jns
faddp
mov
jo
lcall
and
or
int
jo
aas
iret
cmp
imul
leave
int3
shrb
adc
ret
push
pop
out
out
pop
sub
jnp
inc
loope
xchg
pop
fiadds
repz
push
cmp
mov
xchg
in
fs
pop
leave
cmp
adc
mov
adc
and
mov
mov
jge
es
cmp
cli
cmp
cwtl
mov
lret
mov
push
cmpl
adcl
es
cmpsl
push
pop
lods
push
in
test
aaa
xor
mov
pop
shlb
xor
xor
mov
sbb
test
int3
fiadds
ss
push
outsl
fcmovne
insb
out
into
loop
inc
std
jnp
mov
mov
int
fnstcw
outsb
lock
popf
imul
mov
lea
inc
shll
push
cmp
xor
add
pushf
pop
mov
fsubrs
in
rorl
mov
out
push
mov
jg
cli
into
lcall
scas
std
and
push
pop
fldcw
pushf
add
imul
or
mov
lock
insb
xchg
mov
jmp
cmp
movsl
cmpsl
dec
movsl
or
and
stos
sbb
lahf
push
push
aad
repz
adc
and
xchg
push
inc
or
mov
shlb
mov
repz
inc
loopne
test
mov
lea
pop
mov
sahf
cmpsl
data16
cwtl
jmp
and
inc
ret
dec
push
dec
mov
stc
outsl
cld
xchg
adc
or
nop
mov
sub
sbb
push
pusha
add
sbb
iret
add
lods
push
gs
push
movsb
add
mov
popf
rcr
incb
dec
lahf
mov
imul
add
mov
dec
mov
das
lods
and
in
jg
xor
mov
cltd
and
jle
xchg
ret
push
mov
imul
push
or
gs
in
das
ret
lds
push
popf
jmp
getsec
dec
dec
sahf
clc
filds
cmp
pushl
xchg
mov
aam
hlt
mov
sbb
fistps
hlt
push
in
punpcklbw
arpl
dec
push
fsubr
xchg
enter
dec
scas
les
mov
dec
ds
add
sub
add
aam
pushf
adc
out
shlb
push
jl
int
fimull
mov
leave
mov
push
mull
xchg
repz
sub
cmpsl
cld
jo
jmp
or
imul
jnp
mov
lret
aam
je
dec
je
lret
test
pop
mov
or
push
js
daa
mov
dec
aam
addb
ror
jae
es
inc
xchg
aaa
mov
xchg
je
inc
sbb
jno
rclb
sbb
xor
dec
mov
movsl
push
daa
in
fidivl
pop
mov
inc
sti
loope
fcmovb
fbld
enter
lds
imul
cs
lds
xchg
addb
scas
add
test
fadds
and
mov
inc
mov
stos
mov
push
jg
jno
loop
inc
ret
je
pushf
mov
jecxz
add
mov
sub
dec
xchg
arpl
pop
fs
lods
test
adc
out
movsl
loopne
cwtl
testb
push
mov
mov
cmc
add
cmp
fadds
fwait
push
push
in
insl
leave
lods
xchg
inc
mov
test
inc
dec
mov
cmp
stc
jnp
icebp
insb
adc
jge
xchg
or
lcall
push
mov
outsb
xchg
dec
jp
sub
movsl
lahf
flds
loop
sbb
pop
pop
mov
cmpsb
lahf
scas
and
cmp
and
in
loope
nop
mov
jge
xchg
xchg
movsb
sub
pushf
fldt
test
sbb
mov
cmp
jmp
dec
jns
dec
or
js
dec
das
dec
outsb
add
jb
adc
push
add
mov
in
lea
out
jne
fwait
cmp
cmp
lahf
push
sbb
jae
cmpsb
and
gs
scas
lods
xchg
test
cmp
cmp
scas
or
xchg
cmp
fnstcw
lcall
insb
cmp
mov
lret
adc
mov
lret
jmp
or
leave
jnp
cmp
mov
xor
inc
jle
in
dec
mov
inc
dec
pop
dec
or
xchg
lcall
rolb
clc
sub
sbb
sbb
push
sub
bound
jle
adc
push
and
bound
jle
cwtl
and
cmp
test
push
or
out
jnp
pop
les
push
pop
imul
aam
sti
and
loop
adc
popa
lret
mov
push
push
fmulp
pop
sub
inc
mov
push
out
mov
inc
rcll
mov
shl
lret
lea
jp
pop
repz
cmp
jecxz
mov
xor
xchg
int3
fwait
jno
mov
mov
mov
jecxz
pop
or
pop
inc
loope
sbb
mov
inc
iret
lock
popf
test
jl
sbb
mov
jb
aaa
mov
or
pop
call
hlt
and
test
pop
jnp
inc
inc
pop
test
push
aam
push
iret
pop
shlb
push
lea
or
repz
xrelease
sub
iret
cli
xor
leave
jmp
mov
xor
xor
xor
or
daa
in
in
fstpl
pop
cwtl
pop
push
inc
enter
xlat
push
ja
jmp
sbb
lret
jae
rolb
push
loope
cmp
add
jno
lock
sbb
lret
add
push
and
negb
cmp
lahf
iret
mov
push
dec
add
dec
adc
cmp
inc
loop
xchg
jb
repz
out
fsubr
mov
sub
roll
testl
cmc
xchg
pop
and
test
cli
out
cmc
mov
ljmp
mov
mov
es
fwait
leave
repnz
push
test
test
adcb
inc
sub
jbe
nopl
fidivl
jae
gs
mov
dec
push
dec
pop
xchg
cs
xchg
orb
pop
xchg
adc
stc
add
dec
and
and
pop
inc
adc
jl
pop
adc
fdivrl
jmp
sbb
ljmp
imul
les
xchg
repz
xor
mov
cltd
xor
cli
cld
push
jmp
push
je
and
push
sub
cmp
jle
xchg
int
push
and
cmp
add
dec
fs
addb
pop
jno
jb
jmp
movsl
jecxz
fcompl
int3
mov
sbb
sbb
dec
mov
ljmp
sbb
hlt
sub
fldenv
ja
andb
imul
mov
jge
int3
in
jle
cmc
insb
int
pop
mov
pop
clc
inc
stos
movsl
arpl
xchg
rcrl
lea
sub
cld
pop
repnz
imul
or
in
aad
je
sub
xchg
pop
in
mov
adc
dec
outsb
rorl
data16
pop
add
popf
roll
xchg
cmp
sub
jp
push
arpl
call
aad
xor
dec
outsb
addr16
out
dec
jne
outsl
add
add
mov
or
mov
rorl
call
push
fwait
cmp
push
xchg
add
test
push
xchg
add
xchg
add
mov
enter
ret
lods
js
xchg
or
push
sbb
sub
dec
iret
sub
nop
gs
xchg
iret
sub
clc
fwait
jecxz
or
jg
mov
lahf
pop
sub
es
xchg
scas
push
rclb
or
ds
in
add
pop
xchg
or
sahf
cs
sbb
movsl
les
mov
fwait
or
xor
add
mov
adc
in
sub
cmp
xchg
int
xchg
jp
sub
stos
sub
xchg
fcmovu
ljmp
out
xor
dec
xchg
movsb
js
xchg
adc
jns
dec
lods
mov
aam
mov
pushl
or
test
clc
sbb
cmp
cmp
sub
lds
pushf
notb
fidivrs
hlt
bound
xchg
mov
fidivrl
push
call
dec
mov
int
xlat
pop
stc
imul
sbb
dec
lds
add
aas
cmp
lea
inc
movsl
mov
sbb
std
int3
sbb
sbb
xchg
in
mov
sbb
lcall
sub
add
push
stos
xchg
xor
cmpsb
sub
sub
lea
cld
lahf
add
mov
shl
and
mov
sahf
lock
movsl
ss
jge
mov
inc
push
jb
ja
mov
mov
and
rcrl
cmp
dec
lcall
aam
cmp
pop
sbb
je
xor
outsl
push
sbb
push
pop
add
sub
xor
addr16
les
fs
movsb
fwait
cs
sarl
pushf
sahf
into
test
push
xchg
jp
adc
or
loopne
adc
ljmp
inc
jmp
test
mov
and
int
clc
adc
dec
loop
adc
jne
push
lock
adc
imul
or
ret
aas
xor
push
les
push
les
stc
push
pop
pop
daa
mov
jb
pop
jmp
loopne
jle
dec
repz
inc
or
clc
pop
sarl
adc
cmp
xchg
test
loopne
shlb
sub
ss
dec
and
pusha
nop
insl
aas
mov
std
lret
pusha
pop
inc
and
fisttpl
dec
mov
jo
and
add
jne
pop
adcl
sub
out
out
test
cmp
aad
lods
adc
inc
out
mov
mov
inc
lea
jb
movsl
les
mov
mov
mov
cmpxchg
sub
adc
adc
movsb
adc
ja
mov
dec
xchg
hlt
loop
cmp
xor
cmp
inc
loopne
sub
das
repnz
inc
cmpsl
lret
inc
mov
fldz
fistpl
jp
or
pop
push
sahf
jl,pn
int3
ret
negb
or
inc
sahf
fwait
mov
push
jne
testl
ljmp
jb
aaa
test
cmp
stos
out
int
pop
push
and
xchg
and
icebp
iret
sbb
js
or
ror
adc
dec
mov
inc
lcall
outsl
fistpl
movsl
push
dec
sub
nop
loope
fisubrs
nop
and
xchg
aad
cwtl
push
jge
and
and
lods
subb
mov
and
fmul
jl
popf
push
shrl
push
fiaddl
rcrb
stos
ss
lods
dec
outsl
mov
ja
lahf
add
or
push
repz
pop
outsl
repnz
mov
mov
inc
icebp
rcrb
jecxz
xchg
dec
or
cmpl
lock
xor
or
push
mov
notb
sub
mov
or
icebp
fucomi
bound
mov
rcrl
add
imul
nop
push
xchg
fildl
pop
xchg
pop
pusha
or
xchg
or
pop
and
movsb
sbb
xor
fstl
mov
movsb
ds
in
or
adc
pop
jmp
mov
sub
or
mov
jns
insb
addr16
and
nop
xchg
inc
push
mov
adc
sub
loopne
outsl
jns
mov
sbb
mov
fsts
jmp
mov
xor
and
hlt
insl
into
lea
push
adc
sub
fs
fisubrl
into
jecxz
push
jmp
sub
push
sub
mov
popa
in
andb
and
xchg
jns
insb
mov
mov
sub
scas
jnp
ss
mov
dec
ss
jns
fs
in
outsb
movsl
cmpsl
dec
sbb
scas
lcall
insl
dec
mov
dec
and
pop
nop
lcall
xchg
es
cmp
sub
bts
cltd
cli
inc
cmpsl
adc
sub
in
inc
faddl
add
or
or
cld
dec
fiadds
inc
pop
xchg
aam
xchg
mov
stc
or
cltd
push
outsl
rolb
out
cld
inc
xor
adc
sub
adc
push
and
mov
pop
iret
stos
aas
mov
cmp
mov
fnstsw
daa
inc
add
and
je
xchg
xor
in
jne
rcll
pop
inc
adc
mov
das
fwait
jne
jp
and
loopne
movsl
add
mov
fbstp
pop
in
outsb
sbb
addl
mov
jge
cmpsl
icebp
mov
les
jno
jmp
int3
sbb
daa
enter
jge
rcrb
lea
xor
in
repnz
ljmp
scas
mov
lds
lock
xchg
pop
mov
xchg
mov
fucomp
cltd
fninit
cmc
inc
es
incb
pop
adc
stos
loope
xchg
pop
sbb
in
sahf
cmp
mov
or
mov
data16
sbb
pop
mov
dec
and
lods
das
mov
dec
out
scas
or
mov
lcall
inc
subl
and
xor
into
xchg
repz
imul
add
adc
inc
lea
and
sbb
flds
xor
lock
sub
sbb
lds
fstps
mov
test
inc
jbe
jbe
aas
or
jbe
mov
mov
xchg
cmpsl
pop
xor
push
sub
sub
dec
adcl
and
aaa
arpl
lds
pop
mov
ds
dec
das
mov
or
int3
pop
push
dec
add
fs
mov
out
jmp
cmp
imul
movsb
test
test
cmp
fildl
pop
leave
mov
mov
lds
insb
cs
cwtl
xchg
pop
ds
cmp
jmp
dec
sub
iret
in
insl
dec
adc
dec
aas
fwait
jmp
jo
into
popa
movsb
lahf
mov
loope
lods
movsb
mov
mov
hlt
mov
jg
cmp
insb
lods
mull
aad
push
gs
sbb
sbb
cltd
dec
xlat
fidivrs
in
int3
and
fmuls
popf
pop
push
int
in
xor
mov
loop
push
dec
aam
mov
lcall
push
loopne
inc
pop
mov
push
push
out
jecxz
cmp
mov
repz
daa
sbb
lret
pop
inc
push
mov
sub
push
push
sub
mov
jge
sub
ret
loopne
cs
xchg
push
dec
xchg
jno
mov
cld
sbb
rolb
push
insb
inc
icebp
add
mov
loope
clc
jmp
add
test
hlt
or
or
setp
add
sti
cmp
sbb
cs
shll
dec
mov
sub
mov
test
scas
outsb
sub
xchg
mov
rcrb
and
scas
xchg
or
js
stos
mov
lcall
jle
mov
cmpsl
dec
push
aas
cld
adc
fldcw
into
jne
fs
mov
xlat
sub
pop
inc
clc
jecxz
mov
pop
loop
loop
mov
inc
cmpsb
into
lods
ds
rcrb
sbbb
mov
aas
mov
cmp
popf
loopne
jae
and
sub
xchg
dec
sbb
pop
pop
lods
les
jle
or
mov
repz
mov
fimull
push
enter
sub
lcall
push
xor
sub
sbb
cmc
dec
mov
push
and
das
pop
mov
pusha
push
test
jne
outsb
cmp
inc
cmp
sub
lcall
js
sub
out
xchg
addb
pop
jg
test
sub
push
jle
dec
scas
mov
lret
xor
jle
jg
enter
shl
filds
data16
repnz
or
fstl
sub
orb
int3
sub
lret
add
push
dec
pop
pop
xchg
aas
add
cld
push
pop
sub
lcall
pop
stos
ljmp
enter
cs
aaa
das
jne
in
in
xchg
enter
ret
cmpsb
cmpsb
jnp
mov
jp
adc
dec
sub
sbb
mov
jl
xchg
pop
jae
mov
xor
mov
push
mov
addr16
mov
xor
xchg
sbbl
cltd
stos
iret
pop
out
sbb
lret
mov
dec
movsb
popf
and
push
xchg
pop
mov
mov
dec
or
sub
enter
adc
incb
and
sbb
rcrb
or
or
push
sub
test
gs
cli
rol
xchg
imul
lds
cwtl
int3
pop
scas
fdivp
outsb
mov
inc
bound
insl
adc
cmp
inc
dec
shlb
std
sub
je
and
aas
mov
rcrb
into
sbb
enter
sbb
paddusw
pop
cld
cmp
push
sahf
lock
rcll
pop
xchg
mov
out
adc
xchg
in
fwait
dec
in
xchg
sbb
xlat
xchg
xchg
pop
push
aas
outsb
pop
xor
les
or
je
addr16
enter
jmp
pop
mov
mov
pop
mov
fwait
adc
es
in
jbe
mov
je
xchg
sub
xchg
lret
cmp
stos
sub
pop
stos
insl
jbe
shrb
dec
sbb
push
shrb
cmc
push
out
inc
pushf
cli
cmp
into
imul
add
js
or
or
jno,pn
xor
cmp
sub
rcl
std
jb
jge
ffreep
mov
adc
orb
and
xor
in
movsl
xchg
repz
cmpsb
loop
xchg
lcall
out
sahf
add
xchg
pop
test
dec
int3
mov
call
pop
test
into
add
fadds
pop
xchg
pop
xchg
sahf
sbb
movsl
pmullw
fwait
cs
test
call
mov
sub
test
in
add
fildl
xchg
sub
inc
rorb
repz
mov
push
cltd
stos
int
mov
and
insb
inc
mov
inc
lret
xor
scas
ret
scas
repz
push
inc
adcb
pop
push
and
cmp
sbb
jns
mov
sbb
mov
pusha
std
mov
cmp
sub
outsl
sub
out
pop
cmp
es
inc
out
pushf
or
jo
and
pop
out
and
xor
subl
adc
int
icebp
xor
xchg
sub
and
push
mov
imul
adc
inc
inc
mov
mov
mov
in
out
push
jb
outsb
add
adc
orb
idivb
call
pop
iret
js
inc
or
fwait
imul
dec
mov
es
pusha
addr16
push
push
repnz
pop
push
adc
jns
or
test
jp
popa
hlt
pop
adc
ficompl
cld
inc
adc
push
inc
ja
sub
push
pop
fprem
pushf
out
mov
mov
adc
or
fisubrl
pop
push
push
inc
push
mov
lods
pushf
scas
inc
ret
xchg
mov
inc
mov
jmp
pushl
int
mov
int
pop
adc
push
or
add
inc
push
stos
iret
ret
inc
cld
int
mov
mov
push
idivb
cmc
add
mov
mov
test
aas
ret
popf
imulb
xchg
pusha
sbb
push
ret
mov
jo
mov
mov
mov
sti
mov
subb
cmp
dec
les
pop
xlat
push
jg
mov
aad
sar
ljmp
inc
mov
push
ja
es
icebp
adc
sub
sub
add
xor
pop
cmpxchg
mov
mov
or
dec
sub
call
sti
les
push
sahf
sbb
lods
daa
pusha
nop
andl
ljmp
mov
jmp
sub
xchg
andb
add
mov
out
div
mov
fsubs
lret
push
add
je
mov
mov
icebp
sbb
icebp
mov
cmp
fdiv
cs
lea
sbb
xor
xchg
pop
sub
inc
xchg
pop
lret
lret
dec
cmp
jle
lock
xor
pop
cltd
pop
dec
push
xchg
fists
sahf
push
lods
xchg
ror
dec
ret
xor
shl
rcll
sub
shl
lea
fcoms
cmpsb
add
sbb
imul
repz
and
xor
rol
pop
sub
push
iret
fcom
xor
in
aam
cli
sub
dec
sar
in
add
cwtl
pop
pop
lods
test
in
aaa
repnz
leave
lds
addr16
popf
in
inc
xor
pop
outsb
jmp
mov
adc
sub
into
test
adc
mov
je
hlt
sahf
inc
int3
mov
pop
sub
popa
dec
mov
ja
lock
sub
lret
sbb
fstl
out
xor
adc
add
bound
jg
icebp
enter
stos
ret
sti
rclb
rcl
mov
push
dec
or
dec
add
pushf
mov
dec
clc
push
push
jmp
sub
inc
std
cmp
or
or
push
inc
mov
in
dec
cmc
adc
enter
mov
pop
imul
fwait
loopne
pop
xchg
jno
pop
lock
sub
ljmp
in
jno
or
daa
leave
cli
outsb
mov
dec
add
loopne
dec
mov
and
rclb
arpl
mov
addr16
sub
cs
ds
movsl
ficompl
xor
dec
sbb
mov
sbb
roll
push
dec
pop
sahf
call
jmp
stos
mov
mov
stc
inc
ljmp
call
shlb
scas
es
push
mov
clc
push
sub
rcr
jg
dec
sbb
int3
add
lock
rolb
mov
push
xor
cmp
test
out
push
fwait
mov
mov
imul
xor
mov
mov
cmp
mov
cwtl
aas
stos
pop
inc
push
fmuls
aas
and
or
ljmp
bound
pop
lods
cmp
lods
pop
add
adc
add
aam
shlb
mov
xchg
mov
push
ds
rorl
mov
clc
nop
icebp
or
inc
nop
push
dec
ljmp
sub
dec
adc
inc
shll
cmp
push
and
lds
dec
inc
pop
mov
lret
stos
cmc
cmp
xor
stc
sbb
cld
adc
sub
or
gs
push
cmp
xchg
orb
loop
outsl
in
cmp
loop
push
mov
ffreep
cmpsb
inc
incb
xchg
add
jne
call
cmc
mov
jns
inc
inc
scas
jb
outsl
jbe
mov
ljmp
push
push
xchg
sti
clc
fistl
pop
sub
cmp
dec
pop
pushf
push
mull
loop
lods
cli
xchg
inc
push
in
stc
xchg
out
mov
inc
dec
mov
cltd
add
pop
les
stos
sbb
and
pop
psubusb
xchg
enter
xor
js
inc
mov
xchg
outsl
repz
in
xor
lret
cmp
out
sar
jnp
les
adc
push
imul
mov
dec
dec
xchg
xchg
aad
pop
fists
mov
ret
pop
jno
mov
push
xchg
je
xlat
in
fwait
pop
cwtl
icebp
ds
gs
mov
sbb
aaa
or
popa
sub
sub
dec
push
jno
push
mov
pop
dec
xlat
xchg
or
xor
mov
mov
bnd
mov
pop
jge
roll
pop
pop
and
inc
add
pop
out
in
out
cld
cltd
dec
sbb
adc
or
sbb
es
jnp
push
adc
shll
jle
cmpl
xchg
aas
call
call
cmp
in
adc
push
lds
xor
addr16
mov
push
adc
xchg
or
icebp
test
lret
sub
mov
aad
cmp
jnp
rcr
jg
inc
aaa
jae
fisubs
test
or
out
fcoms
dec
add
fdivrl
mov
jmp
sbb
test
fwait
push
lods
pop
into
fcmovnbe
push
fnsave
dec
je
das
mov
and
scas
cmp
sbb
pusha
bnd
fcmovbe
sahf
xchg
in
adc
push
aam
inc
insl
ja
arpl
test
adc
xor
mov
bound
insl
inc
jno
mov
or
les
cmp
aas
test
cmpsb
cs
xor
pop
idivl
jl
cmp
cmp
xchg
in
sahf
pop
or
jb
ljmp
jle
sub
jmp
es
lds
push
andl
push
sbb
sbb
adc
fdivs
mov
divl
sbb
nop
mov
fisttpll
clc
and
jbe
cmp
clc
jae
insl
inc
subb
mov
adc
lods
pop
push
clc
sbb
add
and
pop
dec
and
popa
mov
fists
aad
das
sarb
inc
shlb
xchg
cmp
gs
xchg
xchg
repnz
or
js
daa
je
xor
pop
int3
cmp
cmp
roll
or
jno
push
test
mov
out
insb
std
call
xor
inc
scas
icebp
imul
std
cmp
sar
icebp
mov
sahf
dec
push
loope
cmc
pop
aad
xor
jge
gs
leave
add
cmpsb
js
mov
ljmp
ja
arpl
mov
push
cltd
xchg
cmp
xlat
push
stos
loop
clc
sub
cli
pop
pop
xchg
or
xchg
cmp
jo
push
push
jae
lods
jmp
adc
movsl
loop
cltd
mov
push
and
pop
lds
mov
push
dec
mov
add
in
shr
rolb
cmp
mov
fisttpl
cwtl
fidivl
std
std
stos
clc
inc
push
ljmp
mov
call
sub
out
and
mov
rorl
lahf
roll
dec
jne
adc
mov
lds
into
icebp
push
jg
add
mov
sbb
dec
pop
add
ljmp
dec
mov
pop
gs
andb
ret
sbb
std
pop
scas
sbb
mov
and
mov
or
sbb
hlt
dec
mov
pop
pop
imul
inc
clc
xor
daa
mov
std
fldl
fcomps
mov
inc
in
pop
mov
xor
and
xchg
mov
out
adc
push
jno
cltd
push
ret
in
insl
fistpl
or
mov
scas
mull
mov
and
sbb
sub
clc
imul
mov
dec
add
push
sub
daa
and
and
orl
stos
adc
sub
push
mov
clc
fwait
addr16
xchg
add
fsts
push
ljmp
test
sub
sbb
sbb
or
pop
sbb
loopne
mov
mov
cmpsl
push
jns
out
ja
xlat
stos
mov
xchg
rolb
cmpsl
pop
xor
xchg
mov
filds
mov
movsl
or
in
inc
data16
cmp
outsb
mov
and
add
pop
push
popa
pop
leave
push
add
jno
mov
add
pop
test
xchg
jae
icebp
and
jnp
mov
push
mov
clc
in
adc
xchg
jge
pop
pushl
fadd
in
lds
jns
dec
pop
mov
int3
cmp
sbb
mov
sub
shrb
inc
add
and
sub
hlt
pop
xorb
call
incb
pop
nop
xor
add
stos
mov
sbb
push
fwait
repz
insb
enter
and
push
outsl
sub
mov
pop
inc
iret
lock
out
push
in
or
push
jl
xchg
pop
std
adc
jg
mov
stos
std
imul
adc
add
add
xchg
dec
cli
mov
pop
shlb
sbb
push
or
shl
nop
xor
xchg
adc
xchg
loopne
sub
cmp
pushf
add
icebp
mov
int
enter
sub
jno
pop
pop
divl
fsubl
movsl
fwait
jecxz
rolb
mov
and
sub
mov
add
clc
jmp
sti
push
mov
mov
bound
fisubs
aad
cmp
das
push
aad
mov
cmp
iret
push
dec
sbbl
jo
gs
xchg
xchg
jl
pop
daa
outsb
jns
ffree
mov
xor
stc
sbb
outsb
loope
pop
enter
lret
sar
pushf
or
std
ret
xor
push
or
fxtract
jo
or
add
aaa
rolb
adc
aas
sahf
jne
stos
jmp
lret
test
ljmp
push
fists
jg
pop
loopne
sbb
mov
cmp
cmpl
sti
dec
mov
into
out
xor
lods
pop
enter
cmpsl
test
pop
es
inc
stos
out
cmp
arpl
stos
xlat
iret
jmp
pop
cmp
xor
in
stc
hlt
aad
aaa
add
arpl
fstpt
std
inc
ret
pop
hlt
jbe
rolb
popf
push
es
mov
cmpsl
stos
insl
xchg
sbb
cmp
roll
push
lret
push
cmp
jne
fstps
test
dec
push
fisttpll
shl
je
hlt
dec
and
aad
sbbl
cmp
or
nop
out
cmp
lcall
sub
and
daa
dec
mov
sub
lret
arpl
stc
xlat
bound
cmpb
loope
scas
xchg
jl
mov
mov
pop
iret
xchg
mov
rcll
loope
xor
cmp
adc
jl
and
ja
aaa
pop
aam
lods
popf
sub
and
cwtl
dec
jns
and
movb
mov
bnd
adc
out
or
adc
jne
mov
pusha
mov
jmp
xchg
push
dec
pop
fldcw
std
dec
and
insb
push
and
add
pop
dec
into
inc
mov
fldl
pop
inc
shl
add
je
rclb
jmp
xchg
adc
fs
inc
xchg
repz
ljmp
mov
fnstsw
or
sub
pop
cmc
xor
jae
dec
mov
fists
insl
fucomp
xchg
lahf
ja
enter
fstpt
inc
les
xchg
inc
int
push
adc
dec
jg
sahf
mov
movsl
ja
fldenv
outsb
lods
mov
or
call
inc
add
ss
pop
pop
nop
push
add
cmp
jecxz
dec
mov
call
mov
rep
popl
add
cs
insb
or
or
out
adcb
mov
adc
and
popl
or
in
jge
hlt
rcll
jae
push
test
sub
or
jne
enter
test
jb
mov
jecxz
lods
arpl
test
imul
mov
xorb
push
mov
inc
dec
xor
cmp
test
shrl
stos
xor
xchg
lods
mov
insl
xor
xchg
mov
jmp
xchg
mov
pop
cvtps2pd
lock
adc
mov
xchg
jnp
mov
aas
mov
test
xlat
mov
push
push
leave
je
xor
inc
mov
shr
jne
dec
gs
inc
idivl
ds
fwait
leave
ficompl
or
sbb
in
outsb
cmp
sbb
cld
cmpsl
shlb
pop
adc
xchg
add
or
cs
es
sbb
clc
outsb
sbb
mov
mov
jnp
subl
push
adc
adc
loopne
mov
adc
cmp
stos
rcll
fdivp
or
test
test
jnp
out
stc
aad
jae
jle
or
jecxz
push
fstpt
and
dec
mov
leave
repz
pop
inc
cltd
xchg
test
das
dec
outsl
mov
cmp
dec
adc
test
xor
insl
arpl
xor
jle
and
adcl
push
inc
and
pop
or
inc
pop
or
push
iret
adc
jmp
cmp
aad
or
mov
lret
les
or
xchg
divb
sahf
or
cmp
jae
in
mov
dec
add
les
outsb
shrl
mov
scas
repnz
rcll
cmpsl
adc
cwtl
subl
inc
loopne
in
enter
sbb
std
scas
aas
xchg
ss
pop
movsb
icebp
imul
jne
stos
mov
sbb
mov
outsl
xor
cli
shrb
cmp
inc
xor
xorb
push
pop
sahf
mov
cltd
lret
and
xchg
fimuls
mov
cs
dec
lret
push
push
dec
mov
mov
mov
cmpsl
adc
mov
mov
or
push
outsb
pop
test
mov
fwait
add
pop
mov
dec
fs
inc
and
xor
lock
aam
lods
into
call
mov
sub
xchg
scas
rcll
call
xchg
dec
push
pop
push
aas
jg
not
xor
stc
mov
push
sub
dec
sub
test
add
pushf
fwait
stos
fs
xor
pop
in
mov
roll
or
xor
in
ret
cmp
sub
add
xchg
hlt
add
int3
popf
inc
inc
je
rolb
jle
jle
fwait
jbe
fwait
mov
inc
sbb
inc
xor
lret
iret
adc
xchg
pop
adcb
lods
test
inc
add
pop
mov
insl
inc
lret
add
fwait
aas
pop
add
idivl
push
add
mov
daa
add
loope
les
imul
push
cwtl
xchg
es
jb
pop
push
pop
cmp
sbb
scas
dec
xchg
call
div
test
movsl
mov
mov
rcl
dec
adc
and
push
add
dec
add
cmp
push
inc
add
mov
mov
jl
add
ret
popa
call
xchg
pop
xchg
sbb
mov
sbb
or
andl
jns
push
push
shl
pop
push
xor
inc
cltd
sub
scas
inc
mov
sub
or
or
test
aaa
xchg
enter
xchg
pop
adc
mov
xor
or
dec
jb
mov
mov
sub
push
cli
rdmsr
push
or
add
mov
nop
push
cld
xor
cmp
inc
push
or
push
ds
aam
mov
enter
mov
or
push
push
mov
fucomip
sub
jae
imul
xor
rorl
cmp
popa
mov
mov
adc
mov
hlt
rcrb
lret
hlt
push
adc
popa
lcall
push
lcall
mov
hlt
pop
mov
lret
dec
gs
xor
ja
inc
and
mov
int3
ret
jo
addr16
shll
orl
icebp
int
ficoml
and
bound
mov
les
cmpsb
mov
mov
addr16
lret
in
xlat
mov
mov
jecxz
fmuls
hlt
add
cmpsl
loopne
mov
adc
sbb
jl
dec
dec
fldl
xchg
push
mov
add
add
mov
cmp
cltd
jecxz
push
xchg
mov
xchg
sub
mov
dec
inc
fucom
mov
add
in
lods
xchg
adc
and
push
insb
pop
iret
jno
cmp
stc
scas
shll
or
push
sub
pushl
push
pushf
adc
dec
in
dec
xchg
cmpsl
loopne
push
xor
pop
lret
and
je
mov
pop
pop
ffree
inc
cmp
cs
xchg
xor
and
jle
mov
or
rcrb
inc
pop
repz
pop
jnp
lods
dec
mov
nop
add
popf
fnstenv
cwtl
inc
fwait
mov
sub
and
mov
outsb
xor
xchg
lock
movlps
mov
sub
inc
sbb
and
dec
jne
lea
push
clc
or
in
pop
push
test
rorb
inc
xchg
subl
push
je
xchg
cmpsb
cltd
cmp
sub
lods
lods
popa
mov
jb
push
in
cmp
lcall
dec
add
adc
jle
push
outsl
out
jg
jl
cmp
add
stos
pop
cmp
scas
mov
test
bound
jb
xchg
add
xlat
outsl
push
loope
repz
movb
cmp
lea
cmpsl
icebp
push
test
in
fsubp
arpl
or
popf
bound
fidivs
inc
cmpb
scas
shl
xor
enter
insl
xchg
gs
call
push
xor
movsb
add
xchg
mov
cs
int
dec
dec
jp
ret
stos
jge
test
imul
inc
sahf
pop
mov
and
dec
jbe
xchg
mov
imul
inc
add
ror
pushf
mov
mov
or
dec
arpl
jne
sub
adc
lahf
ljmp
shrl
mov
push
mov
dec
scas
insl
mov
imul
mov
mov
pop
xchg
cmpsb
test
dec
mov
out
xchg
orb
jg
shrl
movsl
repnz
xchg
sti
push
loope
pop
xor
inc
dec
mov
xor
daa
pop
mov
lret
ja
std
dec
bound
shr
or
dec
mov
xor
ud1
push
ret
mov
xchg
lock
aad
mov
cld
jmp
dec
mov
sub
rcll
or
ret
and
xchg
cmc
mov
or
outsl
cwtl
lds
aam
cld
add
ret
ja
inc
pop
call
cltd
test
cli
int
mov
repnz
lret
mov
int
dec
or
cli
or
ret
cli
xor
mov
push
or
or
add
or
sub
dec
add
shrb
fcom
xlat
add
jmp
cmpsl
push
outsb
dec
or
stc
pop
jno
mov
jne
ret
adc
xchg
pop
xlat
aam
es
iret
stos
subl
mov
pop
push
cltd
or
test
jge
call
pop
rorb
enter
add
stc
mov
and
and
jle
andl
mov
cmp
rorl
shll
pop
pushf
mov
psubq
dec
dec
in
xchg
pusha
dec
mov
xor
shlb
sbb
imul
pop
cmp
lock
cmp
jo
repz
stos
inc
xorl
adc
call
pop
imul
data16
jb
mov
pushf
sub
fucomi
aam
loop
popa
jg
ficoms
fisubs
les
scas
xchg
xchg
fimull
push
rorb
dec
rcrl
add
fists
leave
idiv
jno
out
sbbl
into
in
jno
push
mov
leave
mov
jb
cwtl
roll
push
fmuls
adc
decl
adc
pop
mov
xchg
cmpl
shl
fsubl
adc
pop
push
and
mov
xchg
out
movsl
cs
rol
pop
push
fld
int3
inc
mov
sbb
xchg
push
xor
lcall
xchg
jns
enter
out
into
push
xor
out
sar
repz
pop
cmpsl
and
cmp
and
or
cmp
add
je
lods
jmp
aad
pop
addr16
adc
mov
hlt
cmp
sub
mov
adc
mov
lret
sahf
dec
mov
pop
call
mov
push
sbbl
aas
mov
mov
out
xlat
addr16
jecxz
jge
test
sbb
rcrl
xor
mov
and
sbb
add
pop
mov
pusha
shrl
fisubl
push
lods
sbb
popf
mov
clc
sahf
fs
dec
loope
dec
and
aad
adc
cmp
lahf
ret
add
cld
in
in
pop
sbb
aad
xor
add
sub
imul
clc
xor
loopne
int
cmp
arpl
les
sar
roll
pop
sbb
clc
mov
push
hlt
stc
jmp
adc
mov
xor
shrb
adc
and
cmpsb
das
jg
andb
pop
pop
pop
push
out
js
pop
and
sbb
pop
dec
mov
ljmp
out
insb
lock
mov
repz
mov
pop
fbstp
sahf
in
ljmp
add
inc
fsubl
das
and
test
call
fwait
loope
push
subb
and
sbb
add
or
push
push
test
bnd
addb
jo
sbb
or
fstps
xchg
or
adc
mov
movsl
mov
cmpsb
lea
xor
dec
scas
sub
push
and
xchg
mov
sub
out
pusha
sbb
adc
mov
jp
jp
mov
mov
fwait
sbb
dec
push
sbb
cltd
jnp
xor
hlt
stc
clc
jbe
insb
mov
stos
cmpsl
pop
sbb
sbb
outsb
mov
push
pusha
cld
pop
test
sahf
mov
adc
stos
stc
mov
inc
out
pop
fstps
sub
dec
outsb
adc
xchg
inc
mul
sbb
push
cmp
cwtl
lods
xchg
pop
cmp
adc
std
leave
ljmp
push
icebp
pop
jle
lock
pop
sti
inc
jns
mov
test
data16
mov
and
xchg
out
aam
push
les
pop
rclb
outsb
lret
jl
and
adc
xor
lcall
int
jmp
mov
xor
add
js
push
loop
xorb
adc
popa
xor
movlhps
inc
push
cmp
push
je
mov
sbb
dec
inc
cld
leave
push
add
daa
xchg
insl
sbb
mov
scas
dec
adc
pop
in
pushl
fildl
dec
xchg
jae
enter
sbb
add
sub
mov
outsb
add
jg
pushf
mov
shrb
sbb
out
mov
out
test
out
nop
in
subb
pop
fcomp
dec
stos
cmp
scas
popa
ss
push
rcl
xor
mov
cmc
sbb
push
sbb
mov
push
sahf
loopne
xchg
stc
lret
jns
mov
loop
ljmp
sub
xchg
add
jns
aas
pop
cmp
jno
cmp
outsb
jmp
cwtl
stc
cmp
insl
jmp
adc
mov
pop
je
xchg
push
add
xor
sbb
push
cmc
je
cmp
lcall
add
gs
and
jae
jecxz
push
mov
or
push
mov
add
in
pop
lods
xchg
dec
cmp
mov
add
repnz
sti
xor
mov
pop
inc
aas
mov
xor
movsl
and
or
add
xchg
lea
cld
sbb
sbb
icebp
mov
sbb
mov
gs
adc
sbb
jb
dec
les
add
js
sarl
sub
lock
sub
xchg
pop
add
in
dec
sub
outsb
lcall
lods
cmpsl
lock
pop
popa
mov
sbb
lds
sub
ret
movsb
fsubrl
mov
js
mov
es
imul
scas
pop
fadd
cmpsb
out
sub
jnp
mov
pop
jnp
xchg
daa
xchg
sub
add
cmp
add
xor
int
cmpl
push
sub
mov
dec
dec
mov
xchg
inc
ja
adc
sub
dec
stos
iret
or
push
mov
lods
mov
mov
mov
rolb
adc
pop
popf
mov
pushf
sti
push
xlat
xor
in
out
xor
xor
mov
mov
push
insl
sub
pop
fsubp
sub
sbb
mov
dec
leave
push
ja
push
or
sbb
movsl
call
pop
cmp
pop
mov
loope
xchg
mov
lock
loopne
ja
addr16
dec
mulb
push
js
push
add
xchg
mov
xchg
inc
xlat
jno
int3
out
decb
add
jmp
or
mov
ds
lds
fcomps
mov
inc
xor
repnz
mov
add
jnp
pop
ja
es
rcrl
mov
or
xor
inc
pop
outsl
mov
rclb
add
pop
into
repz
push
into
cli
test
pop
and
std
add
dec
aad
xchg
mov
hlt
mov
rolb
and
sbb
mov
cmp
lcall
xchg
mov
and
fcmovne
enter
sub
repnz
or
out
cmp
sbb
std
and
out
test
mov
test
cmp
aam
xchg
mov
jne
push
xchg
out
adc
jmp
push
es
scas
push
add
mov
jmp
sbb
cmp
jae
push
push
adc
cmp
lods
ret
pop
out
adc
pop
add
movsl
add
adc
outsl
xchg
dec
push
lods
sub
xor
rcr
cmpsl
jno
stos
mov
add
push
in
lret
push
test
or
xchg
jae
test
je
jecxz
ror
xchg
bswap
xchg
ss
mov
jns
jl
cmp
cltd
outsl
imul
jno
xorl
insb
cwtl
js
push
jmp
cwtl
inc
outsl
push
sbb
testb
sub
sbb
adc
fucomip
repz
cmp
hlt
pop
aaa
sbb
sbb
sahf
and
leave
pop
jle
test
into
inc
xchg
sub
push
cwtl
inc
pop
cli
cmp
imul
lock
or
sub
das
lret
lcall
and
and
jne
push
scas
das
sbb
dec
sbbb
or
xchg
and
inc
xlat
pop
mov
mov
aaa
fiadds
test
jbe
test
cmp
test
ja
fcoms
jo
mov
lret
sarl
arpl
bnd
leave
pusha
in
jg
inc
mov
je
pop
fnstenv
lret
lret
cmp
adc
addr16
mov
clc
stos
lock
repnz
dec
inc
add
mov
pop
fstl
leave
js
icebp
aam
lock
lret
into
or
iret
out
pop
mov
insb
xor
int
test
add
mov
inc
sub
lods
cmp
jle
pop
cs
ds
cmp
cmp
loopne
sub
lods
pop
sub
scas
jns
dec
mov
push
fs
daa
aaa
es
ret
sub
pusha
mov
testb
push
test
popf
add
jg
nop
iret
ror
adc
push
add
mov
dec
sub
and
clc
aas
jge
xchg
movsb
imul
out
push
test
xchg
and
push
or
mov
pop
sbb
sahf
or
xchg
and
mov
xchg
pop
repz
daa
push
notb
add
jbe
leave
xchg
out
add
ds
jecxz
sub
sbb
mov
and
push
or
push
xor
lahf
push
or
inc
lds
pop
jl
lcall
cli
pop
call
cmp
cmp
inc
mov
cmp
insl
jnp
fwait
pop
xchg
pusha
scas
lock
in
repz
pop
in
push
int3
shll
test
dec
movsb
in
jae
cmpsb
pop
outsl
bound
dec
jmp
fwait
cmp
adc
sbb
mov
mov
or
shll
cmp
out
dec
in
lea
xchg
not
in
out
jno
push
sbb
fldt
mov
push
fiadds
jg
push
jecxz
sub
jl
xchg
xorb
sub
jns
inc
call
mov
ret
add
add
icebp
xchg
in
pop
lahf
adc
mov
xchg
inc
vmread
leave
sbb
cmp
mov
das
add
inc
hlt
push
cltd
orl
fisubs
or
adc
je
rorb
ret
jge
lds
jp
jno
test
outsb
lahf
sbbb
xor
sbb
dec
cli
repnz
data16
jne
cmp
lret
cmp
xor
push
push
mov
lods
mov
jmp
and
add
dec
insb
cs
lret
xor
push
dec
add
mov
sbb
movsb
inc
mov
adcb
iret
mov
inc
outsl
sbb
mov
jne
insb
jmp
ss
mov
inc
dec
xchg
add
pop
pop
test
push
sbb
lock
outsl
ret
aaa
test
cmp
inc
inc
xchg
add
ret
test
int3
mov
mov
jge
sahf
insl
xor
pop
adc
add
mov
in
sahf
jb
fdivp
jmp
jmp
lcall
pop
lret
inc
or
mov
out
fprem1
jge
cmp
leave
adc
aas
pop
cli
sahf
aam
scas
pushf
test
mov
frstor
mov
jae
jecxz
and
mov
push
mov
cmpl
cmc
dec
pop
into
ljmp
bound
mov
inc
xchg
in
shrl
pop
push
jnp
js
fstl
cmpsl
push
sub
lcall
mov
lods
push
in
imul
cmp
popa
aaa
xlat
fstps
jne
outsb
outsl
jle
adcl
lret
test
jns
sbb
pop
cwtl
pop
bound
sub
pop
mov
adc
les
jb
cli
jb
imul
cmc
push
insb
xor
clc
mov
inc
xchg
push
icebp
and
cmp
jle
sbb
insl
mov
sbb
orl
pop
xchg
mov
cmp
mov
push
outsl
mov
sbb
movsb
dec
push
mov
retw
je
add
mov
sub
inc
or
loope
pop
xchg
or
in
sbbl
movl
inc
push
leave
aam
mov
xchg
mov
mov
ss
outsb
jg
lret
adc
cwtl
jae
movsl
and
in
rorl
mov
jae
xor
out
sub
sub
jmp
in
mov
and
jp
sbb
int
adc
mov
jmp
sub
orl
xchg
push
xchg
movsl
cmp
and
push
add
and
aaa
xchg
push
mov
dec
sub
pop
ret
jbe
cmpsb
popa
push
xor
adc
xchg
fnstsw
and
fs
out
addr16
mov
rcrl
dec
push
jbe
arpl
push
inc
outsb
adc
jae
mov
mov
sbb
xlat
or
cmp
mov
jne
test
xchg
sbb
dec
inc
jl
out
imul
and
andl
gs
xor
jg
sub
das
cmc
iret
mull
aad
enter
and
pop
stc
out
sti
xor
arpl
lock
mov
inc
aad
popf
scas
add
iret
cmc
inc
test
jl
negb
cmpsl
sub
lret
cld
mov
push
push
adc
sti
dec
fistl
pushf
mov
pop
into
out
adc
icebp
jbe
rcl
ret
rclb
sub
loopne
mov
sarl
or
pop
daa
fwait
mov
pop
jp
leave
jno
sbb
add
inc
divb
mov
int3
dec
sbb
test
mov
push
mov
sub
sbb
cltd
cs
mov
mov
pop
or
push
arpl
push
int
push
adc
roll
cmpb
repz
mov
xchg
adc
ljmp
mov
mov
mov
lahf
push
add
lret
cmp
lods
cs
ss
mov
push
sub
outsb
jne
jno
pop
loopne
fbstp
scas
inc
or
aaa
mov
xor
outsl
clc
lcall
mov
adc
xchg
dec
cmpsl
push
inc
mov
xor
push
sbb
adc
mov
xlat
jae
leave
adc
xchg
nop
fiaddl
add
inc
in
jl
repz
jle
mov
sbb
int3
push
mov
orb
pop
dec
movsb
jecxz
outsb
dec
sub
fs
lods
or
mov
cmpsl
int3
loopne
int3
shr
mov
pop
out
or
inc
cmpsb
xor
jge
push
cmpl
add
test
fcomps
xchg
or
cmp
xchg
adc
out
cmc
add
push
xor
int3
insb
sub
stos
shr
popa
fadd
jmp
add
nop
sub
loope
out
out
lods
or
mov
pop
in
push
aas
mov
add
cmp
ja
das
cmpsb
dec
mov
xchg
das
lock
mov
xlat
xor
sbb
mov
cmp
aas
dec
and
icebp
orl
or
outsl
xor
dec
mov
jno
filds
sahf
jbe
mov
cli
ljmp
push
mov
and
shrl
lods
jns
adc
xlat
xchg
movb
bound
dec
pop
cmpsb
ret
cmpsb
fsubl
pusha
xor
sub
or
popa
mov
ja
ds
lods
and
dec
popf
sub
inc
nop
xor
faddl
adc
cmp
inc
out
dec
mov
divl
dec
lcall
mov
adc
shlb
jmp
mov
adc
call
cld
addr16
jle
cld
or
gs
sub
jo
mov
rolb
paddw
adc
mov
shrl
pop
cmp
mov
xlat
hlt
sti
jge
fbld
and
dec
fistps
lahf
xchg
nop
pop
xchg
mov
sti
cmp
mov
sub
pop
insb
leave
mov
rol
add
orl
int3
cltd
sub
movsl
insl
sbb
idivl
dec
out
push
in
lret
lock
push
xchg
fs
adc
sbb
inc
js
js
pop
lods
xor
jp
jle
test
xor
add
xchg
xor
mov
add
push
xlat
sub
xor
test
mov
jns
jl
mov
pop
movsl
and
or
cmp
push
mov
jns
das
test
ljmp
dec
jno
pop
addr16
xchg
incb
push
outsb
subb
orl
and
inc
outsb
xchg
or
scas
inc
in
rorl
fs
leave
jg
mov
in
sti
sbb
das
adcl
lods
and
cltd
outsb
js
aaa
and
xchg
ficoml
add
pop
jo
call
imul
lods
pop
pop
mov
rorb
or
dec
or
xor
xchg
into
cmp
aas
push
push
mov
data16
add
out
incb
jbe
mov
rcl
pusha
mov
push
insl
xchg
movsb
jmp
mov
pop
pop
mov
push
push
add
jbe
dec
mov
sub
and
mov
pop
movsb
es
je
mov
pop
stc
aam
adc
sbb
jo
aas
inc
mov
mov
popf
lods
dec
cmp
cmp
pop
and
inc
jno
sub
inc
mov
mov
fidivrl
clc
sti
jns
icebp
addr16
pop
mov
adc
jg
fwait
pop
stc
pushf
rcl
out
jmp
adc
jg
inc
mov
inc
loopne
into
mov
mov
fiadds
sahf
jae
sbb
pop
cli
add
sqrtps
lds
sub
cmpsb
mov
mov
cwtl
lret
xor
pop
cld
in
outsb
bound
pop
mov
rorb
in
popf
xor
imul
ss
mov
cwtl
push
xchg
mov
xchg
push
std
enter
pop
mov
adc
sub
adc
adc
jmp
aaa
insb
insb
outsl
cmc
testl
mov
xor
jge
test
inc
inc
dec
rcl
mov
fs
outsl
andb
dec
push
cmc
sub
jecxz
decl
push
pop
cmpsb
clc
fsubs
cld
or
and
jae
add
sbb
call
adcb
fs
and
adc
jl
xchg
fsubr
cmpsl
jns
enter
push
mov
xor
dec
jbe
addl
scas
cmpsl
sbbb
jne
shll
xchg
mov
loope
scas
in
push
jmp
push
pushf
adc
test
or
push
ljmp
ja
jbe
ffreep
test
stc
call
and
jnp
jnp
mov
lods
mov
movsb
sub
ret
nop
int3
mov
jb
scas
cmp
movsl
inc
sub
dec
and
stos
sbb
jmp
push
push
addl
loopne
cmpsb
lret
push
popf
enter
mov
add
mov
lret
cmp
fildl
xchg
stos
inc
lods
xchg
add
sbb
jmp
int
loop
pop
dec
jb
pop
and
shlb
loope
push
mov
das
jmp
xchg
jecxz
dec
dec
fidivrl
mov
nop
nop
push
jns
fisubrl
mov
add
adc
adc
into
push
test
xchg
mov
scas
add
sbb
mov
lea
dec
xor
pushw
dec
nop
sbb
cmp
or
cmp
outsb
adc
cmpsb
cmp
add
push
aad
add
cmpsl
shr
pop
in
xlat
addr16
std
jne
dec
pop
js
jmp
inc
push
das
mov
call
jno
jb
lcall
push
cmp
outsb
ja
xor
xor
insl
sbb
imul
push
popf
inc
mov
xor
xor
mov
sbb
sub
sub
inc
pop
jl
jbe
in
out
movsl
nop
and
pop
cmp
xlat
mov
lahf
fdiv
out
jns
outsl
dec
ret
sub
push
popf
push
mov
int3
clc
daa
cmp
xor
jp
lret
push
adc
sbb
cmp
iret
pushaw
sbb
or
jb
push
pop
cmpsl
cmp
push
mov
in
hlt
test
data16
mov
insl
xchg
loope
mov
xchg
mov
xor
or
outsl
popf
lret
mov
inc
es
dec
cmpl
mov
aam
in
jnp
loope
mov
test
xchg
ret
push
cmp
and
push
in
pop
movsb
ret
add
add
cmp
pop
aam
scas
mov
outsl
cmp
pusha
cli
lcall
mov
mov
cld
push
push
cltd
xchg
sub
jae
jbe
ret
and
pop
shl
popa
imul
mov
stos
inc
pop
push
mov
testb
stos
int3
cs
push
pop
js
cs
mov
cmp
lds
inc
sarb
xchg
adc
and
sbb
cmp
sbbl
arpl
aad
das
xchg
jb
icebp
adc
and
lret
mov
sbb
outsl
movsl
sub
and
mov
ja
out
lods
dec
cmp
mov
sarl
add
icebp
and
hlt
and
push
movsl
sub
setae
or
fnsave
push
add
lock
ficompl
add
arpl
into
or
movntq
out
mov
setns
mov
jns
cmp
push
sub
imul
outsb
fwait
lret
ret
sbb
lock
cmc
cwtl
add
mov
ja
orl
xor
call
jle
out
repnz
mov
shlb
mov
scas
xorb
filds
imul
popf
loopne
scas
insl
into
stos
fildll
pushf
inc
repnz
lock
sub
sbb
fs
cmp
lahf
rcrl
or
ret
inc
add
push
jo
lret
test
cmp
mov
and
adc
daa
push
fwait
lret
fcomps
push
dec
cmp
mov
inc
dec
mov
mov
in
and
movsl
das
mov
jle
cld
ss
ja
ret
jo
mov
js
shll
jo
pop
or
bound
inc
mov
jb
mov
pop
mov
sub
add
adc
mov
push
cmpsl
jno
test
jle
pop
jge
sub
and
mov
inc
lock
push
lds
dec
mov
xlat
jg
test
loopne
jo
sbb
cltd
in
clc
movsb
and
mulb
and
stos
push
out
mov
mov
jle
shrb
lock
jne
testl
jle
pop
je
add
ds
sbb
daa
jl
lahf
and
and
rcrb
push
inc
or
int
lahf
mov
or
and
popa
out
dec
int
and
call
jnp
loop
movb
hlt
mov
mov
push
jbe
xchg
mov
jl
pop
loopne
inc
pop
xchg
dec
cmp
and
sub
jae
mov
cmc
xor
and
mov
jae
popf
test
sbbl
mov
sub
mov
outsl
xor
sahf
sbb
fwait
test
arpl
mov
vmread
push
mov
aam
out
ljmp
inc
sbb
ljmp
sbb
das
or
shl
in
dec
ljmp
jge
push
xchg
dec
loop
jle
add
cli
sbb
scas
and
push
lods
out
xchg
fwait
lret
lea
or
stos
aaa
cli
jmp
mov
jp
jge
rol
insb
rcrl
mov
sbb
popa
sub
dec
push
add
adc
scas
js
jbe
aas
test
mov
cli
sbb
icebp
loop
stos
lcall
dec
dec
mov
aaa
repz
mov
loope
jp
ret
sub
loope
addr16
test
and
xor
push
add
mov
mov
mov
lods
pop
lret
roll
dec
iret
push
popa
gs
iret
ret
lahf
enter
or
testb
cmp
rclb
stos
nop
stc
pop
das
sbbb
xchg
pop
divl
stos
or
inc
pop
and
data16
stc
fcmovnb
and
gs
stos
push
jno
andl
dec
nop
les
cmpsb
test
movsl
cmp
or
add
xlat
xor
data16
mov
into
push
lahf
aaa
sbb
fisttps
push
fwait
pop
je
andb
addb
arpl
sarb
jbe
mov
inc
stos
inc
outsl
jg
jmp
mov
movsb
sbb
imul
dec
push
scas
mul
pusha
or
adc
mov
mov
lret
stc
mov
inc
xchg
xchg
jae
bound
fsub
sar
dec
and
repz
les
sbb
inc
mov
or
xor
cwtl
ret
pop
fists
mov
fisubl
cs
adc
cmp
push
inc
inc
nop
mov
repnz
gs
jp
les
int
xor
lret
inc
xor
dec
in
jne
mov
daa
adc
stos
push
cmp
xorl
cmpsl
outsb
cmpsb
nop
pusha
lds
adc
cmp
sub
popa
adc
cmp
aad
lret
push
nop
ror
ljmp
mov
cli
pop
sub
sub
mov
mov
xlat
popa
jmp
dec
mov
nop
push
fistps
xchg
pop
into
jo
js
fisubs
xor
push
mov
jb
notb
push
das
sub
mov
cld
push
hlt
xor
inc
rcr
jecxz
into
pop
mov
and
jae
xchg
mov
push
jno
ljmp
daa
notb
adcl
xor
add
mov
es
iret
and
lea
loop
push
lods
push
pop
aam
data16
mov
int
xor
je
popf
aas
sbb
adc
cmc
sub
fwait
dec
jns
scas
ficompl
add
cmp
scas
frstor
mov
subb
xor
cmp
mov
mov
les
imul
cmc
pop
pop
push
lahf
in
pop
and
andb
add
adc
pop
mov
je
repnz
add
out
lret
adcb
jno
imul
push
loopne
mov
jo
cmpsb
xlat
sub
xor
cmp
int3
sbb
mov
adcb
bound
dec
push
jmp
mov
scas
push
sub
andb
cld
push
outsl
sbb
xchg
call
imul
push
dec
jle
clc
std
out
sbb
mov
adc
cmp
mov
add
out
push
jnp
inc
loopne
rcrb
fimuls
sbb
enter
imulb
loope
mov
sub
adc
or
and
push
jle
push
loop
pop
negl
jo
add
push
hlt
scas
mov
xor
lods
testb
ret
ljmp
mov
imul
inc
jp
mov
push
push
int3
inc
lock
and
add
or
push
jo
fbld
outsl
hlt
cmpsl
push
inc
insb
stc
jle
das
lea
movsb
cltd
mov
iret
mov
sbb
and
lds
dec
mov
loopne
mov
jmp
jnp
xor
fs
pop
imul
adc
xor
cmp
cmp
ss
pop
adc
ds
shlb
xor
bound
sub
or
pusha
and
out
mov
mov
jo
lds
pushl
dec
scas
mov
sub
cmp
xchg
rcr
aas
push
mov
loop
dec
jmp
jnp
mov
gs
in
inc
adcb
xchg
sub
and
cs
lods
pop
lret
stc
sbb
or
or
imull
ds
inc
bound
mov
or
lock
inc
fists
mov
out
sbb
xchg
test
adc
cmp
pop
mov
push
cmc
out
pop
insl
pop
jae
leave
in
push
push
pop
sar
sub
aaa
cli
mov
std
jae
repz
out
xchg
sbb
testb
sub
or
icebp
jecxz
and
jbe
adcb
jmp
mov
push
sub
mov
setne
push
add
xchg
push
sub
mov
inc
adcl
std
mov
lret
imul
push
arpl
dec
cltd
lahf
mov
int
int3
pop
mov
sub
out
aaa
data16
xor
pop
dec
inc
pop
dec
pushf
mov
out
hlt
dec
cmpsb
sub
mov
jne
xor
imul
outsl
testb
cwtl
outsb
sub
pop
jg
or
sahf
adc
loop
jno
and
arpl
push
jno
pop
bound
xchg
jb
cmpsb
jge
mov
lcall
into
je
std
or
iret
lret
pop
adc
mov
push
pop
mov
cmpsl
xor
lock
push
into
push
pop
outsb
inc
mov
leave
add
inc
pop
adc
mov
sbb
jnp
movsb
rclb
pop
std
pop
sub
xchg
bound
add
popf
lds
jb
mov
xchg
out
or
mov
push
push
lds
or
push
pop
outsl
mov
xchg
dec
popa
xlat
xchg
testb
push
inc
setnp
cld
pop
imul
lret
addl
sahf
test
sbb
add
dec
mov
leave
insl
adc
cmp
decl
mov
push
jbe
pushf
nop
aas
out
jns
scas
push
repz
mov
mov
scas
fcmovu
mov
adc
push
dec
push
and
nop
cwtl
mov
aas
cmpsl
cmp
int
mov
ja
inc
into
fcoml
ror
hlt
pop
adc
and
lds
popf
out
cmp
int
jge
les
push
test
in
sub
push
repnz
in
loope
leave
insb
fidivl
sarb
xor
outsl
xchg
loopne
xor
lret
lret
jbe
pop
push
fs
cltd
clc
and
addr16
fimull
in
push
xlat
jle
inc
pop
xor
sti
sbb
or
outsl
cs
sbb
sub
sahf
hlt
xchg
movsl
jecxz
icebp
cmp
fwait
xor
inc
and
test
movsb
insl
jg
out
or
inc
cld
push
ja
and
xchg
lea
aad
js
mov
pop
inc
mov
and
dec
adc
imul
push
out
jo
jbe
aam
mov
aas
mov
mov
xchg
into
imul
gs
mov
dec
adc
lea
jmp
mov
push
jg
xor
mov
dec
cmovg
dec
mov
sbb
mov
xor
test
fdivrs
inc
aas
mov
int3
ret
xchg
es
xchg
lds
push
adcb
test
mov
mov
repz
sub
adc
mulb
and
ficomps
icebp
test
xor
xchg
push
mov
cs
movsl
insb
jnp
out
push
daa
adc
call
push
pop
xchg
push
sub
mov
jae
test
xor
aaa
cmc
mov
xor
sbb
cli
cs
push
fwait
mov
imul
mov
aaa
aam
lret
xor
sahf
int3
lret
add
xchg
inc
iret
gs
push
fldl
jmp
mov
iret
xor
dec
mov
or
cmp
aas
xlat
sar
push
in
jb
repnz
call
sbb
pop
mov
rolb
sbb
jge
addr16
xchg
dec
ds
jmp
mov
test
jg
sbb
xor
xor
xchg
lcall
mov
adc
out
aam
jno
aaa
js
stos
insl
xchg
and
and
hlt
test
add
or
adc
fcomps
jecxz
ret
xor
fbstp
xchg
fidivs
adc
pop
cltd
xlat
sub
repz
xchg
inc
mov
pushf
test
cmpsl
and
jge
cmp
imul
lods
mov
push
push
pop
jno
inc
jne
fsubrp
cmp
mov
mov
sbb
or
outsb
popf
xchg
call
mov
lock
insb
mov
js
pop
adc
sub
xchg
dec
push
jbe
cmp
lea
mov
orb
mov
inc
adc
push
daa
pop
std
gs
dec
aaa
jns
xor
sbb
xor
push
outsb
out
inc
incb
pop
hlt
dec
sub
sahf
push
test
xlat
jno
cmp
jl
add
cmp
xchg
aaa
cltd
xchg
xor
jmp
fs
sti
xor
ja
mov
fnsave
push
sarl
dec
jl
jne
sbb
or
or
mov
and
pusha
andl
mov
cli
mov
sub
jae
mov
pop
clc
dec
pop
push
inc
mov
dec
dec
ret
sahf
add
cmp
cli
cmp
mov
aaa
cmovle
mov
inc
cs
out
dec
push
cmc
fs
add
inc
mov
push
xorb
aas
cmp
lret
insl
repz
lret
out
add
pop
sbb
orl
fisubl
mov
add
inc
mov
fldt
jle
shr
push
pop
push
inc
push
int
jl
fisubl
shll
mov
dec
clc
cmp
add
adcb
outsb
dec
fucomp
mov
mov
jle
out
repnz
mov
jle
fbstp
inc
or
shlb
jmp
shlb
mov
cmpl
fbld
pop
jecxz
int
fbstp
xor
test
jae
dec
or
sub
cmpsl
ds
pop
les
leave
jo
add
cmp
mov
cltd
xchg
lret
fdivs
sub
jnp
push
sbb
inc
push
mov
xchg
add
mov
push
ja
dec
rcrl
std
scas
test
fisttps
cmp
mov
fcoml
and
or
and
ljmp
mov
sub
or
push
fisubs
lods
jns
into
xor
sub
xchg
push
dec
int
and
cmp
ret
fwait
mov
pop
sbb
aam
xchg
out
mov
xchg
loop
xchg
mov
inc
mov
sbb
push
arpl
icebp
mov
inc
sarl
in
push
or
cli
push
or
cwtl
sub
cmpsb
inc
jae
mov
pop
push
add
jb
cmp
jecxz
add
fsub
loop
cmpsb
enter
pop
sub
test
mov
lret
out
mov
pop
mov
pop
jno
sbb
cmp
mov
dec
iret
push
imul
addb
test
sub
aas
add
imul
aam
xor
and
sbb
stc
and
mov
sarl
repz
movsl
push
shlb
sub
or
lods
nop
mov
push
cld
jmp
pop
gs
stc
add
outsb
incb
loopne
int3
add
pop
shr
and
repz
adc
and
cli
lea
jp
repnz
push
cmp
test
mov
sub
pop
and
stos
repnz
sbb
fisubrl
int
xchg
pop
aad
inc
xlat
ret
out
sbb
mov
mov
movsb
mov
outsl
xor
mov
movsb
cmp
daa
mov
aas
fimull
mov
addl
xchg
add
mov
xlat
repnz
ret
fldl
rclb
push
cmp
push
popf
enter
ss
pop
imul
scas
pop
add
imul
ja
push
movsb
fcoml
push
ss
stc
test
aam
test
inc
cmp
out
pop
test
xor
inc
das
pop
jp
sti
in
adc
mov
clc
outsl
add
shrl
ja
pop
adc
icebp
push
cmp
cmpsl
xor
sbb
leave
roll
hlt
xchg
push
cli
adc
sti
insb
outsl
clc
and
test
xlat
pusha
pop
rcr
xor
or
inc
or
jno
sub
xor
cmp
dec
sarl
push
inc
mov
mov
sahf
cmp
cmpsb
repnz
lret
or
sbb
inc
add
arpl
scas
data16
pushf
mov
and
test
push
pop
js
int3
cmp
int3
mov
in
int
inc
rcll
dec
push
outsl
mov
clc
das
inc
push
pop
lret
call
dec
push
add
jne
jg
std
rolb
js
inc
pop
daa
dec
lret
mov
sbbl
jbe
ret
dec
dec
sub
xchg
cmp
cmpsb
fwait
push
test
pushf
mov
xlat
mov
movsb
push
push
dec
stos
lds
sub
add
pop
pop
inc
jno
icebp
iret
in
mov
adc
lret
jge
lret
clc
and
mov
jae
ret
inc
jl
add
add
fmull
mov
neg
jnp
xchg
mov
imul
cmp
jns
jmp
mov
inc
popa
mov
mov
mov
mov
xor
dec
outsb
dec
pop
sub
mov
idivl
sub
xchg
pop
sub
inc
push
jnp
adc
ret
push
in
fwait
loopne
repnz
jae
vmread
ljmp
movsl
lea
or
inc
add
lcall
hlt
sbb
lcall
cmp
lret
jp
sub
sub
push
pop
pop
imul
cmp
pop
sub
aas
xor
xchg
push
xchg
aam
cmp
push
jne
cs
push
repnz
cmpsb
mov
fprem
cmpsb
jg
push
mov
mov
mov
xor
repz
pushaw
ja
sub
sub
jge
inc
cltd
mov
jge
nop
dec
int3
mov
jmp
in
into
push
ss
cmp
fisubl
mov
into
lds
xchg
lret
xchg
dec
loopnew
fstl
cmp
xlat
aas
mov
xor
or
fwait
pop
insb
hlt
mov
xor
fsubr
sbb
inc
push
mov
xor
mov
out
sub
inc
cmp
adc
mov
test
jmp
pop
sbb
jp
xor
xchg
dec
cmp
adc
and
xchg
insb
mov
stc
xchg
leave
xor
jp
dec
test
ret
add
movsl
add
repz
pop
je
bound
lret
ret
jle
je
push
pop
roll
cmpsl
mov
cmpsl
dec
sbb
and
test
xchg
pop
xor
je
or
mov
out
imull
sub
hlt
stos
lods
hlt
xchg
imul
mov
lods
inc
xchg
pop
cmp
mov
lock
das
mov
imul
fcoms
push
adc
out
push
addr16
sub
mov
pop
pop
cld
mov
lcall
jge
shll
mov
jle
and
sub
outsl
loope
mov
imul
test
mov
jbe
loope
fildl
mov
jno
inc
pop
inc
push
mov
sub
sti
mov
mov
inc
jbe
mov
sahf
mov
fcmove
xchg
test
sti
repz
movsl
dec
lret
mov
jmp
pop
jmp
insb
insl
dec
popf
ljmp
orb
dec
jp
pop
or
push
mov
xor
sbb
lods
cmp
adc
mov
test
fists
out
lcall
mov
imull
jg
push
jbe
in
gs
sbb
das
hlt
adc
mov
outsl
xor
cmp
pop
jbe
add
dec
mov
inc
cmp
insb
in
xchg
sub
jne
adc
jg
jns
push
lock
pushf
push
mov
dec
sbb
and
mov
icebp
mov
and
sbb
data16
sbb
mov
xchg
test
cltd
in
push
sbb
push
sub
repnz
sub
in
fadds
push
popa
dec
test
cwtl
rcrl
mov
sub
out
iret
or
iret
pop
lds
aaa
scas
es
cld
mov
jbe
dec
push
mov
ss
fwait
leave
cmc
scas
xchg
or
xchg
gs
dec
mov
out
xor
in
imul
mov
or
inc
mov
loope
xor
dec
cmpsl
lea
nop
fsts
sbb
movsl
mov
das
popa
insl
cli
dec
mov
jp
icebp
pop
test
sub
popa
sahf
xor
test
aas
neg
out
push
aas
ja
les
cmpl
add
xchg
jnp
nop
je
lods
andl
jnp
sbb
add
fnsave
sbb
repz
enter
add
xlat
cli
arpl
sub
xchg
pop
arpl
dec
adc
out
sti
adc
add
ss
cmp
addb
sti
mov
pop
sbbb
fwait
adc
icebp
fcoml
daa
xor
cmpsl
jb
cli
mov
nop
sub
insb
iret
fldl2e
out
push
orb
cs
jb
lods
cli
cli
push
sub
push
int3
fwait
movsl
push
mov
mov
or
push
xor
mov
add
orb
ss
clc
xor
add
fidivrl
inc
movsl
lret
add
cmp
add
jmp
xchg
hlt
out
inc
push
mov
mov
sub
out
test
sub
dec
xor
add
or
sar
xor
stos
push
xchg
mov
add
jnp
das
fsubrs
cli
daa
jae
sub
mov
sbb
int3
test
xchg
dec
stos
mov
lock
movsb
mov
jmp
repnz
mov
jmp
xchg
lcall
mov
mov
inc
dec
push
mov
mov
insl
fsubl
adc
mov
insl
icebp
push
mov
bswap
lcall
jb
lret
sbb
ja
lahf
clc
push
dec
lea
les
push
add
lods
mov
xor
or
adc
xor
arpl
push
jne
mov
xor
ja
sbb
xchg
inc
rolb
ljmp
fwait
inc
sbb
fcom
les
or
add
push
push
sti
add
addl
xor
and
lret
aas
dec
inc
xlat
rcrl
in
jle
cltd
jo
bound
jmp
push
add
and
in
jge
int3
ss
rcr
adc
decb
into
aas
jp
mov
mov
xor
pop
imul
mov
push
cmpsb
stc
and
and
pop
repnz
jo
adc
xchg
lret
insb
scas
dec
insl
mov
out
xchg
xor
lods
ret
sub
mov
xor
cwtl
pop
mov
aam
push
mov
jge
xorl
push
loopne
je
lahf
and
push
jo
leave
ljmp
add
xchg
bound
orl
or
out
sahf
pop
mov
inc
test
lods
movsb
loopne
push
adc
jle
xchg
lods
add
ret
dec
shlb
and
in
gs
hlt
or
push
mov
and
xor
iret
mulb
pop
cmp
shrl
imul
jecxz
jae
loop
mov
daa
test
pop
filds
hlt
mov
adc
fs
cmpsl
mov
inc
push
lcall
dec
xchg
cmc
mov
cwtl
into
fidivs
mov
xchg
mov
dec
stos
out
sub
imul
js
insl
or
or
cmovl
add
test
sahf
aam
das
xor
mov
jecxz
mov
sarb
push
jne
jg
mov
jge
or
xlat
adc
mov
sub
std
dec
xlat
rolb
mov
je
cmp
out
push
xchg
ja
cmc
inc
fs
mov
ja
jl
fwait
lea
inc
jle
pop
out
cmp
insb
inc
jnp
sbb
les
fbstp
out
fsubl
in
insb
sti
in
mov
into
or
pop
insl
sbb
and
icebp
xchg
rorb
scas
jl
cmp
mov
jmp
insb
adc
lret
test
jp
rcrb
cmp
sbb
mov
dec
mov
mov
stos
pop
es
into
mov
mov
aas
aaa
cld
sub
jmp
pop
clc
or
loop
sub
mov
push
imul
sahf
pop
sub
pop
mov
sbb
pop
lock
subb
ret
int
mov
movsl
std
pop
notl
mov
sahf
mov
jl
mov
popf
push
mov
mov
das
xchg
test
adc
sbbb
call
pop
push
hlt
negl
xchg
mov
leave
mov
xchg
imul
xchg
in
hlt
xchg
xchg
call
jne
xchg
mov
xchg
jno
repnz
pop
js
xchg
scas
mov
xchg
push
int3
aas
cmpsl
mov
sahf
xor
pop
cld
inc
xchg
ljmp
dec
jnp
mov
mov
xor
mov
shr
in
and
fs
insl
ficomps
push
icebp
xchg
enter
cmp
fs
mov
mov
shrl
inc
pop
insl
leave
adc
jl
dec
cltd
mov
push
and
pop
std
mov
adc
pushf
aad
cld
jns
mov
cmp
into
or
mov
outsb
cmp
add
inc
xchg
dec
setle
sbb
xor
mov
sbb
ror
dec
cmp
mov
ds
push
dec
cmpl
sub
incb
lahf
sub
mov
mov
push
int3
cli
out
popf
sarl
mov
sbbl
fs
mov
movsb
test
ljmp
adc
jae
inc
xchg
or
mov
aam
sahf
aam
lcall
adc
subl
inc
jo
popf
out
repnz
loop
arpl
or
popa
fsubrs
pop
fcoms
decl
mov
jb
push
lds
inc
jno
cli
outsl
aam
sti
aas
addr16
mov
add
jb
fcom
lret
outsb
fsubrs
sahf
adc
test
mov
pop
out
ja
lods
lcall
js
mov
inc
xor
lret
xor
in
cmp
testb
pop
jl
addl
sub
fwait
mov
rol
jbe
cmp
xchg
jns
xor
or
push
loopne
cmp
icebp
mov
mov
js
jno
cs
mov
mov
or
or
icebp
add
leave
pop
mov
push
addl
js
dec
mov
sahf
and
mov
add
fisubrs
push
outsb
das
setbe
int3
addr16
mov
call
xchg
push
pushf
xor
lods
push
mov
nop
shrl
data16
dec
jne
push
clc
jns
inc
lea
jle
dec
push
popa
mov
and
push
mov
dec
arpl
imul
mov
xchg
pop
rcrl
lods
ljmp
push
data16
test
in
arpl
sbb
ss
movsl
inc
push
jg
add
outsb
or
lods
sbb
out
pop
xchg
sub
stos
mov
cmc
test
faddl
adc
sbb
sbb
insl
xor
out
incb
lcall
sub
js
jecxz
iret
xor
xchg
out
jo
cmpsl
mov
mov
xchg
arpl
jns
orb
push
add
pop
pusha
jns
lods
push
push
lock
decb
imull
jg
sbb
leave
lods
adc
fnstenv
std
mov
push
mov
dec
jae
aaa
sub
pop
cld
cld
or
pop
pop
daa
ss
lods
sbb
ret
add
mov
jbe
daa
int
mov
xorps
cltd
lret
imul
pusha
mov
push
cld
xor
mov
stos
mov
lods
xchg
pop
jmp
testl
dec
loopne
aaa
jne
insb
cmp
aaa
adcb
push
aaa
dec
addr16
or
fsub
in
in
push
push
data16
ret
push
mov
imul
dec
lock
jne
xor
push
ljmp
jo
pop
lea
mov
testl
jae
mov
gs
pop
popa
cwtl
leave
mov
int
inc
stos
adc
in
jns
test
push
hlt
andb
pop
les
test
sahf
popf
inc
or
and
sbb
and
xchg
mov
aad
jge
mov
fimuls
ds
mov
adc
mov
cmp
iret
sti
sti
cmc
jns
mov
xchg
mov
mov
lock
adc
int
outsb
pop
and
add
je
mov
pop
xchg
xchg
cltd
cmp
scas
xchg
push
mov
mov
gs
pop
ljmp
cmp
ret
insl
sahf
add
cmp
fildl
jecxz
bound
mov
or
mov
jp
adc
push
push
lock
sbb
xchg
and
cmpsb
out
push
je
mov
fldt
pop
push
cs
adc
ss
or
fbld
loope
pop
mov
inc
call
sbb
into
stc
repnz
scas
pop
mov
mov
adc
loop
sbb
outsl
arpl
xor
pop
lea
inc
sbb
xchg
int
or
cmp
sarl
mov
clc
push
jae
push
mov
mov
insl
mov
mov
push
adc
in
cmpsl
cs
mov
mov
push
and
dec
lcall
clc
faddl
mov
sub
cld
cs
adc
addr16
fnsave
stc
adcl
bound
sub
movsb
aad
or
leave
inc
mov
cld
cs
idiv
fcmovnu
dec
xchg
dec
jmp
jae
cmp
or
xchg
shr
leave
or
mov
mov
or
xchg
pop
pop
mov
icebp
mov
lods
bnd
ja
test
outsl
loop
test
jno
rorl
push
subb
mov
mov
ss
or
leave
stos
add
xchg
pcmpeqb
dec
popa
punpckhwd
lea
xor
jmp
shll
xor
add
xor
testb
or
shll
mov
pop
frstor
cmp
adc
call
inc
xchg
psubw
subb
sbb
hlt
data16
sbbl
fs
inc
pop
cmpsl
dec
xchg
loope
popf
inc
repnz
in
mov
cli
push
mov
pop
insb
pop
decb
rcrb
or
sbb
push
clc
pop
mov
xchg
dec
out
inc
add
scas
dec
ficompl
add
jmp
and
xchg
xor
jmp
jecxz
fildl
aaa
jbe
mov
xor
in
cltd
push
out
hlt
or
sti
bound
mov
fistl
xchg
mov
lods
mov
inc
xchg
shll
xchg
xchg
sti
sahf
bound
icebp
ret
push
push
clc
out
sbb
fmul
ds
mov
xor
pop
loopne
cwtl
sub
dec
sbb
mov
test
jmp
je
insb
push
lds
mov
cmp
mov
loope
mov
xchg
in
aam
push
insl
xchg
andl
jo
pop
adcl
enter
insb
mov
clc
mov
lock
mov
cmp
dec
cli
cli
and
push
jmp
sar
inc
ds
mov
int3
pop
adc
and
adc
test
jmp
sbb
mov
mov
sbb
pop
jbe
sub
dec
arpl
mov
adc
ja
sbb
add
mov
loop
cmc
lfence
aam
xchg
lods
cltd
add
cld
push
sbb
xor
xor
movsl
push
bound
mov
xor
shll
xor
cmp
jae
jmp
add
sbb
add
mov
insl
and
aaa
into
sbb
std
and
lea
adc
sub
es
ror
int
lar
push
sbb
pop
pavgb
jle
push
aaa
push
movsb
mov
xchg
dec
movsl
lea
in
xor
stos
lret
mov
push
adc
ljmp
adc
cwtl
stos
mov
push
ret
fiadds
mov
mov
iret
cmp
ficompl
bound
or
push
sub
cmpsl
fldl
sbb
xor
cmp
sbb
xchg
jb
pop
push
mov
and
and
in
rcll
lods
pop
popf
inc
xchg
xor
xchg
xchg
mov
lret
xor
ja
jl
mov
cltd
sbb
in
add
jge
int3
mov
cmpsb
jp
push
fcoml
loopne
shll
or
adc
scas
out
and
add
push
das
jb
push
shrb
scas
in
test
mov
mov
add
add
sbb
pop
jg
arpl
mul
repz
xor
fldenv
jge
xor
aam
dec
xchg
dec
pushl
add
call
xor
sbb
add
test
mov
add
or
cmp
pop
imul
and
and
addr16
add
fcmovnbe
adc
sub
aad
push
adc
int
repz
lods
nop
xchg
arpl
push
cmc
pop
adc
or
aad
xlat
in
mov
adcl
pop
xor
adc
inc
xor
and
mov
cmpsl
xchg
popf
std
fnstsw
inc
jns
mov
fcomps
xchg
xor
repz
arpl
jbe
add
pop
andl
add
int3
fstpt
mov
ss
dec
pushf
rcr
push
cs
jbe
sarl
mov
mov
push
mov
ror
mov
fnstsw
xchg
rorb
fstl
sbb
mov
stos
fnstenv
jl
in
fstps
pop
xlat
xor
jmp
mov
fwait
insb
inc
cli
or
loopne
loopne
cmpsb
in
stos
outsl
insb
mov
or
cltd
addr16
rcl
andl
lods
int
dec
call
fsubl
mov
pushf
adcb
test
mov
lds
push
cmpsb
pop
popf
stos
xchg
ds
cmp
out
pop
shlb
aam
in
loopne
push
and
pop
add
xchg
testb
lea
ret
xchg
dec
int
jns
sbb
fisubrs
outsl
cmpsl
and
or
and
cs
out
cmp
inc
inc
decb
cmp
mov
icebp
mov
cmp
mov
filds
xchg
sbb
stc
repnz
popf
das
mov
daa
xchg
pop
mov
sti
inc
adc
and
lret
mov
mov
mov
jo
lret
test
jp
mov
push
aam
mov
and
xlat
pop
dec
dec
cmp
or
push
addr16
dec
daa
repz
sbb
aas
sbb
dec
rcl
inc
gs
mov
jbe
push
sti
test
push
inc
inc
sbb
rolb
fimuls
mov
daa
sbb
jge
ljmp
add
popf
dec
add
rclb
add
mov
jecxz
add
psubusb
jge
xchg
cmp
and
fsubr
pop
xchg
shlb
mov
or
cli
jmp
xor
mov
insb
mov
shlb
pop
xchg
jg
out
sub
lock
outsl
ja
jnp
mov
int
jle
mov
lock
mov
test
jle
and
or
int3
mov
andb
popa
cs
mov
orb
cwtl
fnstcw
mov
adc
push
popf
mov
lahf
jno
mov
pop
mov
icebp
notl
mov
mov
or
jl
xchg
push
negb
mov
pop
out
incl
pop
cmp
int3
out
lock
leave
fisubs
xchg
iret
mov
and
pmulhuw
adc
mov
dec
jecxz
repnz
adc
incl
or
pop
jnp
or
jp
repz
or
mov
push
jae
and
rcr
aad
jns
cmp
movsb
fiaddl
loope
arpl
in
aam
pop
push
sub
mov
repz
pop
jnp
and
jnp
dec
insl
cmp
push
outsb
icebp
pop
repnz
aaa
dec
je
push
cwtl
jg
jmp
pop
sub
insl
dec
sbb
cwtl
aad
les
jl
scas
daa
adc
push
and
cmp
inc
xchg
ljmp
rorl
test
repnz
outsl
clc
pop
lods
pop
adc
mov
repz
das
sbb
lods
sbbl
mov
iret
bound
imul
adc
test
in
fldl
lock
push
sub
mov
sahf
andb
xorb
into
or
xchg
xchg
shll
lds
adc
push
or
repnz
addr16
int3
aas
mov
push
mov
in
mov
sbbb
dec
sbb
cmpsl
out
movsl
mov
lods
xlat
fdivs
inc
inc
mov
dec
lock
test
out
jg
xchg
pop
mov
cmpsb
enter
fsubl
add
scas
fisubrs
ficoms
jno
fstpt
push
cmpsl
push
push
call
fldpi
imul
add
pop
xchg
mov
inc
pushf
ret
inc
aas
mov
pop
jno
jae
cmpsb
sub
xchg
dec
sub
repnz
xchg
adc
repnz
sarb
loope
out
sub
or
test
mov
addr16
test
insl
pop
fldt
ljmp
cmp
fdivr
pusha
fwait
pop
xchg
xor
mov
jl
cs
mov
dec
test
pop
rclb
ja
clc
xor
jno
popf
shrb
sbb
adc
int3
les
arpl
js
xchg
aaa
and
ficoms
xor
cmp
xchg
and
push
sub
and
pop
cmp
and
mov
pop
ss
out
jbe
mov
mov
sbb
mov
jle
adc
repnz
notl
aaa
cmc
pop
lahf
pushf
movsb
xor
stos
int
inc
xchg
add
sti
loopne
aam
inc
std
jg
jb
xor
pop
add
mov
dec
jns
repnz
xor
stos
mov
lcall
mov
ret
ljmp
cwtl
xchg
push
and
inc
adc
clc
inc
or
out
mov
sbb
andl
out
pop
ficompl
push
std
and
ss
int3
aas
cmc
jbe
mov
sarb
jge
dec
arpl
push
out
pop
int
notb
nop
inc
sar
push
jnp
inc
adcl
sbb
ja
jns
fwait
dec
outsb
rcrb
out
sti
fcomps
loopne
fimuls
repnz
sbb
xchg
aam
or
mov
mov
in
jmp
add
mov
ss
ret
xor
lahf
fwait
jae
xchg
dec
aam
leave
bound
dec
movsb
pop
push
lret
call
loopne
test
jnp
repz
mov
scas
test
xor
sbb
ljmp
std
movsl
in
xor
daa
xchg
mov
das
and
cltd
xor
into
and
decl
out
adcb
push
jge
stos
cwtl
call
push
arpl
push
pop
mov
cmp
and
inc
push
inc
ret
xchg
or
pop
jp
push
mov
in
xchg
ja
xor
rorl
xor
push
fsubrl
and
gs
out
push
femms
ljmp
add
js
jge
inc
and
jmp
shr
inc
sub
xor
xor
pop
xor
fsub
gs
lahf
pop
mov
cmp
and
hlt
sbb
push
mov
pop
jbe
dec
xchg
dec
adc
add
or
outsl
aas
ret
add
lcall
dec
and
out
jbe
ljmp
dec
cmpsb
test
inc
mov
push
xor
sub
sahf
cltd
xchg
mov
shl
mov
sbb
cmp
stos
aam
pushf
daa
cmpsb
dec
dec
mov
and
rcr
out
arpl
ror
cli
push
push
jle
push
in
jmp
das
mov
push
testb
sub
inc
movsb
add
loope
pop
test
mov
inc
cmc
cmp
push
or
sub
jo
or
xor
or
es
adc
adc
adc
push
inc
mov
mov
adc
popa
add
add
daa
jmp
and
out
mov
es
mov
mov
sub
cmp
cmc
loop
enter
add
ds
ret
xchg
mov
xchg
adc
mov
adc
popf
ljmp
cmc
cmp
mov
push
or
mov
int
pop
jmp
add
and
push
sub
xlat
out
xchg
push
push
add
adc
add
movsb
inc
cmpsl
mov
mov
sbb
cmp
xor
cltd
fs
add
mov
pop
cs
adc
push
xlat
test
inc
arpl
popf
mov
push
or
lahf
js
cs
mov
stc
sub
repz
push
dec
dec
cmp
mov
push
es
mov
outsl
sbb
popf
iret
or
mov
push
incb
clc
sbb
int3
push
js
mov
cwtl
adc
je
pop
pop
xor
fildll
mov
xchg
xlat
mov
xchg
pushf
adc
cmc
mov
xor
push
dec
adc
mov
and
imul
iret
das
fs
fcmovne
inc
jmp
cmpsl
imul
xchg
inc
stos
add
or
cmpsl
xor
push
jae
or
cli
mov
call
fists
pop
dec
int3
out
into
mov
jns
clc
lcall
mov
or
stos
pop
add
pusha
sti
shlw
cmp
adc
inc
add
jns
mov
mov
mov
jmp
or
cli
cmp
cmp
imulb
test
mov
add
fsubrl
je
in
lds
push
sub
dec
add
loop
fildl
inc
aad
adc
cmc
push
out
jge
or
fidivrl
xor
lods
mov
gs
mov
push
xor
mov
cmpsl
sbb
cmp
mov
ret
or
cmc
mov
sub
out
int
aas
rcl
data16
mov
sub
mov
mov
stc
inc
cmp
lcall
jle
movsb
add
sbb
scas
lret
lock
push
pop
test
loope
xor
inc
mov
sub
lahf
in
dec
iret
sbb
inc
into
mov
fldenv
sub
shl
int3
or
int3
mov
cmp
mov
pop
cmpsb
movb
cs
lock
push
jecxz
daa
cmp
mov
xor
data16
pop
fwait
shlb
jmp
jle
add
fmul
mov
sub
repz
fldt
adc
hlt
gs
mov
lods
je
cltd
xor
dec
cmp
dec
mov
sbb
cmpsb
or
xchg
and
jecxz
inc
add
and
mov
bound
popa
shll
gs
dec
adc
int
jnp
cmp
mov
push
cmp
and
aaa
push
sub
inc
push
lock
out
sbb
push
push
mov
mov
xlat
sbb
mov
xchg
cmp
cmpl
call
and
idivl
es
int
lret
fstpl
or
lock
jns
pop
sbb
je
fistl
jns
sub
out
loop
xor
mov
xchg
jp
pusha
and
push
cld
pop
cwtl
fldt
sub
pusha
push
cmp
cwtl
jo
pop
jg
sub
mov
xlat
inc
insb
add
icebp
xchg
loope
loopne
sti
pusha
jmp
movsb
in
mov
lods
sub
cmp
inc
add
pop
adcb
lahf
pop
aad
lret
mov
fcomps
sahf
test
and
sub
adc
fistl
nop
test
fs
cwtl
es
sub
or
stc
popf
adc
ljmp
ja
call
jg
dec
les
cld
and
mov
int3
lds
cmpl
push
or
mov
call
cmp
mov
pop
loope
pushf
call
lods
adc
enter
stc
add
sub
mov
fstp
fistpll
xchg
jb
ret
cli
dec
insb
aad
sub
notl
bound
data16
or
add
xor
dec
mov
mov
rorb
jb
pop
push
sbb
sbb
sbb
and
add
xchg
popf
inc
leave
sbb
je
or
add
sarb
jge
mov
or
lods
sti
xchg
xor
orb
mov
adc
jno
adc
out
addb
jp
leave
jne
jnp
jge
xorl
jmp
pusha
lcall
iret
je
stos
data16
cmp
int3
daa
sbb
inc
cmpsl
and
pop
test
pop
cmp
in
mov
mov
or
fdivs
jg
or
mov
fldcw
or
lahf
xchg
xchg
aaa
dec
inc
int3
jnp
lret
scas
adc
testb
lret
outsb
pop
pop
imul
mov
dec
lcall
daa
sbb
sub
inc
xchg
push
sbb
jp
pop
inc
test
jae
jecxz
adc
xor
xchg
jno
popl
push
cli
cltd
sbb
xor
test
cmp
jmp
jno
sbb
jle
icebp
out
loop
test
fdivrp
int
sahf
push
lret
pop
or
mov
push
jno
push
filds
cld
mov
jmp
sbb
xchg
rorl
imul
jb
xlat
cmp
push
mov
mov
insl
and
mov
mov
test
sub
xor
outsl
in
inc
xor
out
or
aam
gs
dec
hlt
xor
adc
cmp
aaa
adc
push
loopne
inc
hlt
cltd
mov
or
in
arpl
in
jns
push
cltd
call
jmp
xchg
rcll
loopne
push
push
into
mov
shlb
bswap
movsl
in
dec
fistpl
push
test
cli
push
and
lods
lock
push
or
out
cmp
jl
out
imul
xor
lea
inc
mov
xor
pop
add
or
fmuls
loope
pop
aad
xchg
xchg
mov
enter
push
and
lock
enter
fisubrl
call
and
pushf
das
inc
icebp
sub
aam
pop
in
insb
je
rcrb
lcall
sbb
out
pop
inc
mov
pop
and
cmpsl
fstpt
repz
add
ds
loope
shll
xor
push
sbb
xor
pop
mov
sub
ljmp
lret
xchg
mov
dec
fisttpll
sub
pop
cmp
sbb
mov
call
mov
idivl
xor
sbb
outsl
mov
cmp
mov
mov
push
sbb
sti
out
xor
cltd
lods
cmp
or
cmp
jbe
lret
sub
adc
test
xchg
mov
ror
stc
jl
cmp
pop
in
in
jns
jecxz
cmp
in
stos
pop
dec
adc
ljmp
cs
pop
sar
data16
or
cwtl
or
sub
mov
test
in
pop
inc
popf
test
push
adc
push
jle
ss
loope
addl
mov
shlb
mov
out
scas
and
pop
cs
jno
lea
pop
mov
adc
in
cmp
into
cld
shlb
out
ss
cmp
in
xor
std
negl
jnp
push
or
je
adc
jbe
jmp
cmp
pop
fdivrp
int3
or
jecxz
sbb
xchg
into
push
push
mov
jb
push
in
push
bound
cmpl
inc
rcrb
inc
add
jecxz
enter
sub
dec
xchg
lret
push
and
mov
add
rorl
idivl
insl
das
cmp
jl
cmp
mov
sbb
sbb
rol
mov
dec
sub
sbbb
mov
test
and
ljmp
out
adc
sub
dec
out
mov
cs
out
inc
ss
shrl
mov
test
xlat
movl
mov
pop
push
loope
add
fincstp
or
mov
jecxz
cmp
aam
adc
loop
adc
lods
xchg
add
mov
testb
sbbl
pop
push
scas
push
adc
inc
dec
ret
insb
xchg
sbb
sbb
gs
add
or
fbstp
sub
xor
dec
and
dec
cmp
mov
add
jnp
mov
mov
dec
sub
and
movsb
cmp
fwait
js
inc
hlt
aas
aaa
mov
sub
xor
add
push
cli
pop
js,pt
nop
out
xchg
insl
or
jp
push
inc
and
das
inc
in
scas
dec
xchg
cld
xor
popa
icebp
inc
loope
fst
lock
cli
ds
aaa
pop
sub
stc
xchg
xchg
pop
shlb
popf
mov
pop
mov
decb
mov
call
pop
daa
xchg
mov
nop
test
stos
jecxz
sub
or
push
movhps
dec
dec
testb
roll
sub
xor
rcrl
jp
fadds
cs
mov
hlt
fbstp
les
sbb
mov
mov
pop
xchg
stc
jb
dec
sbb
sbb
adc
roll
fldcw
add
and
adc
imul
rcr
adc
movl
jns
iret
cld
fcoms
jo
lods
je
push
mov
not
arpl
clc
repz
xor
jae
lahf
sub
inc
lret
jp
dec
sbb
pop
adc
add
sbb
lea
mov
push
jno
repnz
inc
lret
pop
rcl
mov
out
lea
or
xor
cmp
mov
inc
divb
pop
push
pop
mov
xor
rclb
sub
mov
jecxz
insb
push
lods
nop
std
add
out
mov
jne
adc
mov
into
rclb
dec
sub
sub
vpunpcklbw
mov
outsb
cmp
jmp
jge
jg
pop
sti
add
xchg
jmp
jno
inc
push
xlat
jbe
call
arpl
pop
lret
ror
and
iret
sbbl
fsts
aam
pop
orb
dec
repz
data16
mov
aaa
and
pop
inc
mov
mov
data16
mov
sbb
mov
mov
enter
mov
lods
stos
out
push
stos
cmpsl
lds
mov
pop
lock
inc
mov
xchg
push
dec
mov
aad
mov
pop
mov
mov
push
movsb
add
cltd
adc
cmpb
mov
pushf
pop
sub
lds
cmpsb
mov
jnp
std
xchg
popl
outsl
jno
mov
jne
imull
lcall
in
dec
push
test
lcall
es
icebp
nop
mov
jnp
imul
mov
pop
rorl
add
shl
in
push
mov
shll
and
jae
and
fsubl
add
jmp
fsubrl
jl
cmpsl
jns
sbb
popa
add
movsl
xor
xor
mov
push
or
movsb
lret
inc
das
movsl
nop
sub
popl
mov
sub
clc
and
and
pop
mov
pusha
in
sub
sub
sbb
out
clc
cmpsl
call
push
pop
addl
fwait
repnz
mov
push
mov
mov
pop
in
loope
test
pop
into
stos
shl
arpl
sub
ljmp
cmpl
stc
push
movsl
or
inc
test
xor
in
and
jae
or
jno
xchg
lods
dec
cmp
sarl
add
out
xlat
xorl
loope
in
movsl
mov
xchg
outsb
imul
sbb
int3
addr16
loope
mov
movsl
sarb
sbb
mov
mov
add
push
sub
hlt
pop
test
insl
in
pusha
popf
mov
jmp
in
mov
dec
dec
xor
adc
in
and
or
je
outsl
mov
ljmp
addr16
mov
cwtl
cmp
push
push
pop
inc
andb
lret
jle
cwtl
sahf
in
cmp
rclb
dec
add
cld
lcall
cltd
std
daa
inc
xchg
add
fwait
sub
sbb
xor
push
or
push
mov
sbb
mov
jmp
sbb
ds
lret
mov
dec
cmc
sbb
adc
mov
pop
add
pop
shll
add
add
or
loope
dec
push
pop
popf
imul
jp
fadds
out
xchg
mov
js
sahf
gs
ljmp
fldl2t
inc
out
pop
mov
sbb
roll
dec
iret
push
lahf
xchg
js
ss
add
ficompl
out
jbe
lahf
repz
pop
shl
je
rcll
push
in
add
sbb
ljmp
flds
int
xor
mov
jmp
cmp
in
mov
dec
test
dec
cli
mov
into
jnp
test
fcmovnu
insl
dec
pop
xor
pop
xor
push
les
movsb
in
test
or
pop
ss
enter
addb
cli
addl
inc
call
fwait
hlt
add
outsb
pop
ds
repz
mov
push
pushf
sbb
inc
add
mov
and
push
lds
pushf
jmp
les
rcll
fildll
push
sub
mov
sbb
push
and
jnp
or
and
xor
sar
insb
push
inc
mov
ds
popf
adc
cmp
loop
dec
ljmp
fnstenv
pop
inc
inc
rcrl
lock
inc
lret
out
push
stc
fisubrl
push
fildll
aad
daa
faddl
negb
push
hlt
adc
nop
pop
gs
bound
jle
ss
das
idivl
xlat
push
sub
mov
xchg
add
and
sbb
movsb
pop
repz
sbb
adc
loope
lea
aad
dec
mov
cmpb
in
mov
out
imul
adc
cmp
in
int
cmc
jnp
mov
mov
sub
ds
stos
bound
cltd
dec
dec
xchg
adc
xor
inc
mov
xchg
enter
inc
andb
sub
inc
push
inc
cli
repnz
call
push
xor
mov
fs
fimull
and
sbb
lea
fldt
inc
dec
jnp
push
push
icebp
popa
iret
mov
xchg
pop
pusha
out
mov
loop
cmp
add
test
popa
outsb
cltd
divb
mov
cmp
sbb
pop
dec
xchg
xor
xchg
add
notb
push
loop
lds
fdivl
je
pop
out
adc
adc
jecxz
popa
xor
dec
push
cld
xchg
sub
xchg
sbb
push
in
movsl
sub
pop
adc
nop
or
out
cmp
push
push
push
xor
mov
inc
js
adc
lret
pop
push
loopne
shrl
sbb
push
hlt
xlat
negb
aad
cs
imull
mov
xchg
mov
mov
cmpb
frstor
mov
adc
punpckldq
subb
and
push
jnp
mov
mov
xchg
aad
cmp
or
pop
mov
sbb
jle
imul
ljmp
repz
fsubs
daa
ljmp
sub
mov
outsl
adc
mov
adc
roll
popf
aam
arpl
ja
jns
mov
and
mov
pop
test
sbb
xlat
jbe
cmp
mov
or
addr16
mov
cmpsb
mov
xchg
lret
in
int
mov
ret
push
push
pop
inc
mov
cltd
jg
adc
sub
and
jp
jp
loope
popf
sub
jg
inc
fisttpl
mov
jg
dec
sub
mov
std
sarb
xchg
andl
leave
popa
andb
sbb
xchg
cmp
jo
xchg
outsb
incb
dec
out
mov
push
inc
das
sbb
rclb
cmp
push
jecxz
sbb
sbb
add
push
or
mov
xor
jmp
sbb
xor
sbb
pop
into
leave
inc
test
cs
xor
cmp
push
inc
pusha
imul
repz
xor
test
inc
lds
popf
inc
mov
ret
nop
xor
movlps
adc
lret
es
sahf
ret
jecxz
cmp
mov
cmp
adc
cmp
jo
cld
pushf
xchg
enter
mov
lock
out
into
ret
inc
pop
mov
pop
xchg
xor
daa
mov
popa
pop
ljmp
mov
ds
mov
mov
shll
orl
jbe
aaa
mov
jmp
in
sub
cmp
pop
les
out
xchg
push
xor
aam
push
cs
insb
ret
filds
stos
fnsave
inc
repnz
cmp
push
mov
xor
or
adc
mov
call
sbb
sbb
xchg
scas
cli
int3
call
aad
rol
cmp
add
fs
sarb
dec
cmp
imul
or
dec
pop
and
aaa
xchg
mov
inc
scas
cmp
aas
out
std
lret
cltd
xor
pop
push
dec
adc
xchg
dec
pop
add
pop
and
cmp
jmp
adc
outsl
add
daa
test
adc
adc
in
jp
clc
fldl
out
jg
outsl
mov
popf
or
mov
jmp
lahf
ret
mov
mov
adc
psubd
dec
or
leave
pop
imul
sbb
push
lock
inc
insb
ljmp
xlat
daa
lds
shlb
repnz
lods
mov
mov
je
mov
cli
ds
pusha
cmc
jle
clc
adc
and
jp
stos
push
dec
sub
movsb
or
mov
add
ret
cmp
jb
jmp
ret
pushf
sub
imul
dec
push
movsb
mov
cmp
push
ss
dec
test
or
jl
pop
fcmove
adc
jno
sub
dec
incb
mov
pop
in
mov
cmpsl
arpl
repnz
cmp
aad
and
aaa
sub
xchg
pop
jmp
adc
ja
rorb
xchg
cmp
sbb
test
ficoms
lods
and
jl
cltd
jecxz
rorb
mov
sbb
inc
aaa
mov
pop
sbb
sti
add
in
insb
fnstenv
shrb
push
movsl
mov
pop
and
jb
pop
scas
fiadds
pushf
movaps
mov
je
mov
shll
addr16
stos
movsb
pop
pop
fisubrs
sub
push
or
int
into
aad
mov
daa
jl
mov
shlb
mov
dec
jecxz
aas
stc
fdivrl
ja
jmp
cmpsl
jle
out
or
jns
test
ficoms
adc
fcom
xchg
mov
sarl
or
insl
xchg
sbb
push
pop
ss
test
gs
mov
pop
sahf
outsb
dec
iret
orl
add
or
stos
call
pop
hlt
lcall
int
lods
fisttps
mov
das
repnz
jmp
mov
inc
mov
fdiv
mov
in
lods
ss
sub
les
jb
std
sub
sub
or
sbb
addr16
clc
mov
mov
out
or
jmp
pop
ljmp
orl
jno
rdmsr
and
mov
pop
mov
jne
xchg
loope
popa
cmp
add
jo
sbb
cmc
cmp
lcall
lahf
sar
xchg
inc
insl
sbb
dec
lret
push
jns
sub
jp
push
pop
jae
or
es
dec
jl
push
nop
add
lods
inc
data16
mov
nop
mov
sub
fistpll
nop
lods
fistps
adcb
inc
lock
or
stc
lahf
dec
movsl
and
pop
jne
push
inc
dec
pop
jle
imul
cmc
aas
lret
adc
lret
push
int3
mov
or
aaa
xchg
shlb
add
mull
push
and
in
and
dec
mov
insl
or
jne
adc
or
insl
daa
cli
push
out
push
cmpsl
inc
push
sub
das
jmp
bswap
xor
cmp
sub
ljmp
sti
test
addr16
mov
push
std
dec
mov
push
aaa
pushf
mov
fsts
repnz
subb
cmp
jbe
mov
jg
cmp
fsts
fwait
clc
jg
and
xchg
cmpsl
fs
push
add
enter
lods
out
aam
outsl
sub
ja
inc
pop
je
js
test
lret
mov
mov
xor
andl
ret
add
les
loopne
fdivs
outsb
cmp
cmp
mov
sub
jl
cmp
shlb
mov
in
ss
adcl
add
mov
jno
adc
xchg
pop
mov
mov
dec
or
sti
mov
xorl
xor
negl
pop
daa
lret
test
leave
and
hlt
repnz
inc
mov
cwtl
popf
leave
test
sbb
mov
sahf
decb
ret
mov
mov
cmp
shl
out
imul
sbb
jl
inc
jmp
vmread
xchg
mov
inc
dec
push
mov
push
mov
out
stos
punpckldq
stc
stos
jmp
pop
into
adcl
insb
call
insl
enter
push
cmp
xchg
fucom
test
jp
xlat
mov
mov
sub
test
dec
jg
call
mov
mov
jbe
daa
adc
ljmp
and
mov
pushf
pushf
sub
in
push
je
ds
cmc
xor
mov
add
jecxz
dec
push
ret
stos
push
mov
push
insb
cmp
ja
cmc
cmp
adc
stos
insb
call
std
or
shlb
xchg
push
jl
adc
xchg
sbb
setb
mov
fildl
dec
add
or
fcmovu
lahf
rolb
xlat
in
lods
xor
sub
imul
stos
subb
pusha
lods
jns
aaa
pop
loop
adc
ret
outsb
jle
jae
andl
sti
lret
and
addb
inc
push
stos
pushf
mov
mov
inc
jmp
and
sbb
outsl
dec
sbb
inc
ret
js
jmp
push
inc
repz
lods
lods
gs
imul
mov
inc
xor
movsl
cmp
xchg
out
data16
imulb
rorb
cmpsl
add
cmp
mov
clc
pushf
jns
gs
add
jne
mov
cmp
push
mov
mov
and
sub
loopne
inc
call
imul
lods
cwtl
pop
mov
outsb
imul
sbb
pop
sub
mov
test
pop
ss
xchg
or
dec
inc
push
insl
inc
lcall
enter
sub
mov
mov
leave
shll
outsl
dec
or
mov
scas
jb
pop
insb
jge
adc
call
pop
add
ret
cmp
mov
jne
movsb
dec
imul
neg
and
adc
leave
xor
dec
jnp
inc
nop
jle
push
in
ds
or
or
cld
lods
mov
imul
out
sbb
fwait
enter
mov
outsb
or
cmp
cs
fcompl
push
mov
clc
aas
pop
fnstenv
mov
inc
in
push
js
hlt
fmuls
xor
inc
mov
dec
jnp
cltd
loope
mov
adc
sti
pop
adc
push
mov
inc
shlb
add
or
jg
ds
movsb
push
incb
cmpsl
sbb
mov
fdivr
adc
inc
faddp
mov
jne
mov
push
pop
in
sbb
inc
lcall
addr16
add
sub
out
fdivs
cmc
mov
mov
hlt
inc
pop
jae
bt
aad
push
ss
and
cli
adc
push
out
and
in
mov
pop
aad
sbb
add
iret
jmp
cmc
sub
mov
icebp
push
adc
outsl
int3
imul
sarl
jecxz
arpl
rcl
jbe
test
cmc
adc
outsl
adc
bound
pop
jmp
dec
dec
lret
jne
adc
add
mov
dec
pextrw
movsl
xchg
ljmp
jl
xchg
jg
std
pop
cld
jb
frstor
js
mov
and
fcomp
mov
insl
cwtl
dec
or
addr16
mov
dec
jbe
lcall
mov
daa
adc
push
fadds
mov
pop
or
sti
fistpl
xlat
pop
adc
fwait
lret
andb
outsb
test
xor
in
xchg
enter
cmpl
mov
in
cmp
stos
jge
movsb
dec
dec
and
and
ss
and
mov
les
lea
popl
pusha
out
and
iret
mov
pop
mov
jp
xor
dec
inc
addr16
pop
inc
sti
addr16
arpl
loopne
lds
lods
sbb
mov
bound
ret
cs
mov
cmpsb
and
push
sub
scas
lods
jge,pn
sub
cmpsl
cmpsl
inc
cmp
xchg
sahf
into
imul
cmp
daa
js
jne
gs
or
lods
stos
xor
push
pop
insl
cmp
scas
mov
dec
sbb
test
addb
int3
sbb
cmp
sbb
mov
lods
dec
pop
ljmp
insl
xchg
rcl
mov
dec
adc
mov
push
dec
jl
cmpsl
jne
test
pop
mov
pop
out
sbb
lahf
insb
cmp
cmpsl
pop
pushf
push
xor
or
pushf
repnz
dec
jo
xchg
mov
inc
daa
repz
daa
sbbb
test
aad
sbbb
lcall
jle
fmuls
in
jo
push
jle
sbb
and
adc
je
imul
add
add
sub
sti
inc
fsubr
enter
out
addr16
inc
inc
mov
inc
jb
push
xchg
fisttps
jp,pn
out
pop
mov
jg
push
jb
aaa
and
nop
mov
mov
xor
jno
push
addr16
lods
push
or
jecxz
push
in
xchg
ljmp
orl
sbb
hlt
test
pop
mov
repnz
adc
xchg
cmp
idivb
inc
pop
movl
fsub
or
mov
pop
xchg
fmuls
dec
hlt
cltd
movsb
inc
imul
es
adc
xchg
in
pop
cwtl
xchg
mov
mov
hlt
paddsb
fwait
dec
fisubrs
sub
aaa
and
pushl
call
xor
test
iret
test
lods
mov
cs
mov
push
add
mov
in
cld
das
call
sti
clc
sub
sar
mov
or
dec
pusha
mov
jb
jg
nop
add
add
addr16
mov
bound
inc
sub
fs
inc
pop
cvtpi2ps
mov
jl
xchg
arpl
mov
pavgb
loopne
add
in
mov
insl
testb
mov
adc
push
pop
and
push
sub
pop
sub
mov
scas
gs
hlt
pop
loope
cltd
data16
inc
jnp
arpl
mov
fwait
push
fstp
cmp
sbb
xor
dec
mov
xchg
or
push
int
mov
dec
jb
repz
ret
jecxz
fsubrl
cmpsl
sbb
enter
loope
call
sbb
call
hlt
pop
push
scas
lods
lret
mov
lret
add
push
std
xor
icebp
fldt
inc
pop
inc
inc
ficomps
aad
jmp
fnsave
cwtl
bound
je
bound
cmp
pop
jl
xor
or
cmp
adc
mov
test
cli
ja
mov
or
mov
push
jnp
sub
xchg
inc
aad
test
inc
xchg
stos
push
pop
adc
not
push
fdivrs
enter
mov
adc
std
mov
les
xchg
inc
push
xchg
jg
xor
adc
lret
out
cmpsl
call
pop
daa
mov
jle
je
push
push
mov
shll
lea
mov
cmp
mov
dec
cmpb
adc
push
cld
out
jp
hlt
imul
sub
scas
sarb
sbb
jae
lods
pop
ror
push
sbb
cmp
ss
test
iret
jb
enter
int3
mov
shlb
test
imul
cli
mov
add
int3
inc
call
shrl
popf
mov
lcall
inc
mov
adc
lret
mov
sahf
es
mov
loopne
iret
pop
fcmove
lret
inc
add
test
xchg
ret
jne
jne
js
sub
outsl
sub
std
shl
pop
add
repz
jp
das
into
aaa
xchg
shr
cld
xorb
mov
inc
test
push
mov
inc
lea
or
push
pop
add
jo
cld
pushf
scas
mov
and
sub
sti
mov
adc
sbb
sub
sbb
inc
jge
jmp
popf
mov
fldcw
loopne
idivl
bnd
jb
pushf
lahf
xchg
or
aaa
mov
lcall
mov
sub
push
std
lcall
ss
mov
popf
lcall
scas
add
data16
mov
mov
insb
push
in
mov
jle
sub
mulb
push
fcompl
mov
test
shll
mov
popf
push
adc
xchg
pop
stc
shld
xchg
cmc
sub
pop
and
push
sub
pop
out
ficomps
hlt
pushf
pop
inc
push
sub
ror
dec
jbe
out
lea
xchg
and
push
mov
adc
dec
clc
sar
pop
xlat
arpl
scas
mov
arpl
sbb
xchg
pop
lea
fmul
mov
leave
mov
adc
imul
mov
clc
or
mov
cmp
push
sub
push
insl
dec
scas
or
xlat
out
dec
or
add
ret
aaa
je
int
inc
add
rorl
sbb
mov
addr16
lahf
xchg
mov
icebp
gs
mov
mov
call
adc
mov
dec
sbb
cmp
pop
das
in
sbb
cmp
inc
pop
fwait
add
data16
jg
xor
cmc
fidivrl
rcll
rcrl
mov
pop
sbb
jnp
sbb
inc
or
cmp
cltd
push
add
add
rcl
nop
fbstp
jns
pop
enter
xor
adc
add
test
xchg
pop
std
cmp
add
and
pop
xlat
mov
and
cmp
dec
popf
pushf
in
inc
addr16
aad
in
push
fistpl
push
lret
test
jg
pop
push
loopne
mov
and
sub
mov
mov
pushf
dec
aam
loopne
jge
cmp
imull
push
xchg
sbb
push
xchg
push
adc
push
fs
push
inc
cli
lods
lcall
daa
sub
jno
mov
daa
sub
orl
fcmovu
jp
fisubs
stos
mov
sub
insb
lock
fisttps
mov
cmp
fldenv
xchg
mov
leave
pop
mov
mov
ret
sbb
jb
addr16
mov
sub
xchg
loop
pushf
out
jno
push
xor
jo
int
outsl
daa
sbb
jg
imul
adc
mov
es
and
les
xor
push
adc
lahf
mov
movsl
mov
addr16
cmp
jbe
and
push
inc
sbb
in
je
dec
adc
sbb
xlat
jle
movsl
inc
dec
mov
int
or
cmp
mov
icebp
pusha
push
mov
dec
out
inc
push
inc
outsb
loopne
jnp
mov
jnp
lret
adc
test
lock
mov
adcl
je
dec
into
jge
sti
mov
shrb
lret
fsubs
imul
lret
mov
bound
les
loopne
scas
ljmp
ljmp
shll
adc
lea
icebp
out
mov
stos
add
sbb
xchg
loop
pop
push
cmp
lods
out
dec
rcrl
adc
cld
adc
xchg
scas
add
adc
xor
in
ret
shlb
cmpsl
jmp
mov
xchg
into
test
out
mov
stc
mov
fwait
shrl
sbbb
cli
mov
adc
inc
xchg
loopne
repnz
out
cmp
mov
mov
sub
and
or
mov
aad
shll
dec
sarb
jnp
scas
inc
push
push
lahf
xlat
stos
outsb
cmp
mov
cltd
sar
mov
dec
addr16
jnp
ss
and
pop
add
xchg
or
mov
mov
repnz
sub
sbb
inc
movsl
popa
ss
push
xchg
fldt
and
cmp
outsb
or
gs
rorb
dec
lds
fcomi
xchg
sub
sub
pop
sahf
jmp
pusha
test
or
movsb
in
popf
xorb
not
push
pop
inc
shlb
dec
into
adc
andb
mov
in
push
mov
pshufw
mov
push
test
mov
lods
lods
jle
jle
push
int
sbb
jns
in
insb
mov
dec
lds
dec
cmp
push
leave
loope
pop
test
adc
ljmp
lods
inc
add
inc
sbb
fisttpll
add
addl
orps
pop
sub
or
loop
add
aad
xchg
dec
cltd
mov
insb
fsubrl
icebp
gs
jp
enter
iret
cmp
scas
xlat
gs
mov
addr16
fiaddl
mov
lds
outsb
inc
movsl
ret
and
imul
movsb
mov
add
fisubs
sub
add
pusha
pop
orb
js
rcr
insl
mov
dec
or
mov
out
mov
mov
pop
insb
mov
mov
pusha
or
push
fwait
cmc
decl
push
jo
aaa
in
sub
pop
test
jmp
and
pop
sub
outsl
addr16
dec
adc
std
pushf
bound
mov
mov
xor
int
cmp
and
jo
add
sbb
pusha
nop
xchg
jae
push
fdivl
cmp
mov
jmp
push
shr
xlat
jmp
xchg
jno
sbb
lret
pop
jp
sub
shll
mov
jle
mov
adc
pop
xchg
dec
or
in
outsl
mov
enter
and
mov
pop
call
or
xor
test
push
pop
cmp
je
shlb
xlat
outsb
push
lods
pop
cwtl
add
gs
sbb
sbbl
pop
hlt
xor
movsb
clc
stos
sbb
and
xorb
pop
ffreep
enter
push
jb
loop
sar
mov
jae
gs
xchg
pop
sbb
insl
cltd
outsb
enter
in
into
inc
aam
jno
inc
mov
mov
imul
sarl
mov
clc
andb
add
push
outsl
aad
push
pop
call
sbb
lcall
xor
mov
add
sbb
fstl
orl
jle
or
icebp
in
cmp
xchg
cmp
inc
add
icebp
xor
in
xchg
lods
std
mov
mov
loope
ss
in
loop
and
or
loop
lret
dec
adc
daa
sub
mov
sub
dec
lds
add
sub
sbb
lret
std
add
imul
ds
lock
test
mov
mov
jge
push
pushf
mov
cmp
inc
mov
fsqrt
xor
mov
sbb
out
bound
pop
lcall
fwait
loop
cmp
ficoml
pop
rcl
jmp
test
inc
out
dec
push
stos
dec
push
lock
gs
aad
sbb
sbb
xchg
outsb
jnp
insl
js
and
pop
xchg
lods
sbb
sarl
jge
mov
and
pop
push
xor
out
and
insl
clc
fcompl
mov
xchg
out
pop
inc
mov
mov
ret
ret
xchg
xchg
xchg
push
cmp
dec
testl
inc
aad
fwait
ds
push
iret
pusha
xchg
je
pop
or
inc
cmp
repz
push
outsl
or
mov
mov
jb
xchg
adc
xchg
dec
mov
adc
mov
jg
push
jbe
sub
xchg
inc
int3
adc
lods
mov
push
adc
mov
sarl
les
add
les
pop
inc
mov
rdmsr
adc
cmp
in
jmp
out
bound
xchg
test
adc
scas
or
xor
jg
fldpi
mov
add
mov
in
add
adc
inc
fcompl
cltd
xor
ljmp
cmp
scas
jle
inc
test
inc
xor
mov
or
sbb
adc
mov
xchg
repz
add
int
ljmp
pop
scas
outsl
dec
repnz
inc
mov
dec
enter
pop
daa
sahf
xchg
insb
les
aas
pusha
ds
shrb
jmp
vcvtsi2sdl
jb
inc
push
in
je
cmpsl
jmp
and
mov
aam
ds
sti
adcl
repz
pop
clc
and
cld
sbb
cmpsl
dec
shll
fsubrs
and
iret
xor
push
ss
jle
loopne
inc
aam
adc
divl
pusha
daa
adc
xlat
mov
sbb
fwait
jns
lret
and
xchg
or
ss
jo
pop
sbb
xchg
xchg
fiaddl
adc
xchg
aaa
es
xchg
sub
xor
push
sbbb
ss
jbe
cmp
neg
lcall
repnz
fcompl
outsb
push
xchg
punpckhdq
pop
shll
jbe
and
outsl
jns
inc
add
mov
jo
cmpb
cmpsb
daa
add
xlat
and
xor
or
rolb
out
leave
push
shl
jmp
int3
stc
xchg
and
arpl
pop
test
mov
outsb
pop
insb
stos
pushf
out
fwait
jb
lret
cmpsb
shll
outsb
jbe
mov
ljmp
sahf
cmpl
das
jmp
jne
rcl
and
add
push
scas
sbb
mov
lret
and
inc
mov
add
cmc
loopne
aas
jae
xor
mov
adc
ret
cmpsl
cmp
roll
into
xlat
mov
and
sub
sub
cmp
jmp
incb
sub
sahf
mov
add
pop
divb
push
mov
inc
div
imul
inc
jecxz
scas
js
fiaddl
push
sarb
mov
lcall
test
jne
sbb
xchg
mov
test
push
bound
xor
icebp
add
inc
dec
push
int
xlat
and
mov
jecxz
pop
push
adc
or
sub
xchg
test
pop
sub
stos
sbb
adc
fcoml
push
or
les
mov
in
inc
adc
cmp
fstl
sbb
js
jmp
add
pop
sbb
ret
or
mov
test
or
xchg
add
cmpsl
movsb
shlb
inc
cli
jp
pop
mov
mov
sbb
adc
jae
lds
js
dec
aad
inc
lcall
dec
nop
js
dec
inc
inc
fcoml
and
mov
daa
stos
pop
sbb
repnz
outsl
scas
xchg
dec
ja
pop
scas
cmp
test
in
jno
aad
and
pop
mov
mov
call
dec
arpl
push
nop
aaa
fnop
or
pop
and
sub
xor
pop
mov
rcll
sbb
clc
out
movsb
rolb
xchg
enter
addb
lods
cli
push
scas
es
mov
dec
imul
and
jl
xchg
nop
xchg
roll
arpl
jle
adc
adc
popf
repz
cltd
xchg
cli
sub
push
jmp
in
and
pop
leave
add
jl
mov
es
enter
movsb
pop
sbb
cmp
and
ja
mov
mov
aaa
mov
lods
mov
test
cmp
scas
imul
mov
inc
fsubr
leave
mov
xor
je
mov
dec
pushf
stos
dec
hlt
sub
sub
out
inc
popl
hlt
fmuls
icebp
sbb
mov
cld
sub
popf
add
pop
and
sub
push
lods
mov
js
bound
or
out
or
cwtl
xchg
lods
rol
dec
imul
cmc
sbb
loopne
aad
xorl
add
pop
cmpsb
adcb
popa
shlb
cmp
push
or
fcmovnb
inc
jecxz,pt
mov
jo
or
sti
cld
and
subb
movsl
jae
mov
mov
pop
xor
push
mov
push
inc
in
mov
repz
jbe
xchg
mov
rol
pop
jecxz
mov
mov
pop
mov
add
push
mov
sub
adc
pop
push
mov
test
sbb
bound
and
decb
xchg
test
sbb
xorl
or
into
sbb
or
xorl
mov
lods
cs
cmp
xchg
mov
repnz
lret
icebp
xor
iret
pop
or
movsb
inc
dec
popf
mov
jbe
addr16
mov
leave
cmp
cmpsb
in
es
out
aam
push
pop
or
sbb
jmp
jo
and
sbb
and
das
ja
pushf
inc
ret
jl
or
mov
test
inc
xlat
lods
jmp
mov
pop
inc
cmc
sub
dec
ljmp
sti
jnp
pop
in
cmp
inc
sbb
rcll
add
adc
dec
push
xchg
cmp
add
fiadds
mov
std
cmpl
gs
mov
mov
jg
iret
popf
adc
lods
nop
and
clc
outsl
cmp
popa
push
sbb
fsubs
adc
sbb
sub
addr16
mov
xor
addr16
mov
cmp
xor
mov
add
or
cmpsl
orl
rorl
xchg
faddl
loope
xor
repz
out
dec
ljmp
xor
and
cmpsl
and
xchg
sar
addr16
and
mov
pop
add
cmpsl
mov
shrl
adc
in
inc
repnz
cmp
div
dec
out
fidivrl
outsl
sub
mov
cmp
jns
sbb
jl
xchg
test
add
and
inc
cmc
fisubs
leave
mov
mov
xlat
adc
push
sub
inc
mov
xchg
xchg
enter
mov
dec
pop
in
loop
xorb
gs
pop
pop
sub
and
cmp
add
or
mov
ds
enter
lods
ret
mov
int3
cmp
test
in
fbstp
add
mov
cmpsl
cltd
cmp
push
cltd
in
dec
in
loopne
xchg
gs
cmpsl
cmpsb
mov
dec
lret
popf
mov
inc
adc
scas
pop
icebp
fdivrs
aad
lods
iret
jecxz
xor
sub
xchg
loop
dec
xor
xchg
sti
add
mov
gs
out
lret
add
cmc
insb
ret
rcrl
mov
rcr
adc
cwtl
xchg
pop
push
xchg
push
arpl
lcall
push
push
in
aad
xor
pop
repnz
push
mov
push
out
lahf
les
pop
add
and
mov
sbb
sbb
add
cmp
enter
xor
mov
clc
cmp
or
mov
push
mov
repnz
lret
or
inc
popl
and
in
push
dec
xchg
js
jbe
and
xchg
jmp
fcmovbe
hlt
cmc
sub
jg
mov
vmovlpd
dec
mov
ds
jns
mov
arpl
mov
adc
fwait
add
adc
pop
fisttps
jns
cmpsl
call
xchg
test
adc
inc
aaa
sub
mov
lret
xor
repz
push
das
bound
dec
xchg
lret
in
sarl
lea
repnz
sub
jge
jo
fmul
pushf
lea
inc
pop
pop
mov
fidivrl
pusha
mov
xor
lds
cmp
dec
xchg
jno
mov
pop
into
sbb
loopne
sar
ret
sub
cwtl
mov
mov
dec
notb
test
cmpsl
outsb
mov
out
or
pop
xchg
cli
sahf
out
aas
push
insb
test
outsl
xchg
iret
add
aad
jns
mov
push
aas
rolb
shlb
mov
bound
fidivrl
xor
xchg
pop
arpl
loop
lods
jle
call
pop
aad
ljmp
int
outsl
aad
aam
cld
or
sbbl
adc
fbld
dec
sti
jb
xor
push
outsb
stos
mov
jecxz
inc
mov
in
std
stos
push
push
mov
call
sub
cld
sbb
push
mov
imul
dec
in
mov
mov
enter
mov
xorl
mov
cmpsb
push
mov
stc
and
pop
fs
or
mulb
jno
dec
dec
leave
mov
sub
sub
pop
push
outsb
or
jbe
and
adc
pop
outsl
xchg
fxch
mov
push
or
mov
or
and
les
into
shl
pusha
inc
je
fdivr
out
push
dec
dec
push
ret
pushf
add
push
push
pop
leave
test
xchg
fsubp
pusha
mov
pop
lock
mov
nop
push
mov
jmp
repz
push
or
test
add
xlat
rcrb
je
fldenv
xchg
cmp
rcll
xor
xor
popa
sbb
and
outsb
xor
das
sti
xor
pop
fimuls
inc
and
mov
out
fsubl
push
loopne
nop
fs
std
xchg
in
cli
xchg
nop
fisttpll
or
pop
pop
xchg
jnp
pop
adc
mov
push
enter
out
fistl
pop
lcall
push
iret
lock
dec
js
leave
xchg
sub
push
stc
shll
lea
mov
cld
adc
ret
cs
movsb
loopne
clc
xor
and
lds
mov
jmp
xchg
lret
jne
xor
dec
mov
in
inc
inc
jno
push
repz
adc
cmp
jp,pt
adc
inc
vmread
fstpl
ja
lret
ret
xchg
mov
cs
mov
dec
mov
ffreep
jno
xchg
jl
mov
or
lock
pop
lds
add
push
cmpsb
mov
jmp
pop
inc
push
loope
add
enter
push
test
xlat
insl
cmpb
adc
mov
dec
pop
push
sti
popf
push
inc
jb
dec
rcrl
sub
pop
cmp
pop
pop
pushf
and
int3
repz
push
sub
or
aas
jns
test
pusha
sarl
push
xor
pusha
in
and
test
push
cmpl
sub
push
or
loop
jg
dec
xchg
dec
or
cmp
ret
push
mov
fstpl
and
roll
sbb
pusha
loope
xchg
outsb
ljmp
mov
data16
ftst
loope
out
or
push
inc
jg
call
fdivs
cli
adc
popa
xor
and
sbbb
add
fstpl
bound
push
mov
xchg
or
xor
push
inc
data16
cmp
and
pop
repnz
push
out
pushf
xor
addr16
in
or
inc
and
sbb
jl
popa
add
hlt
pop
inc
test
xchg
cmp
push
test
mov
addr16
mov
jge
push
push
jmp
mov
out
mov
stos
in
ds
popa
adc
jae
scas
ja
sub
jecxz
das
out
or
push
mov
rorb
mov
scas
mov
xlat
mov
divb
jmp
pand
sti
insb
push
lret
scas
mov
enter
mov
xor
mov
test
stos
mov
leave
mov
xor
pushf
and
adc
adc
and
hlt
stc
int
daa
adc
outsl
into
mov
adc
jae
inc
jae
repnz
xor
lods
mov
xlat
and
imul
xor
sub
xor
jge
inc
ficoml
mov
and
test
testl
cwtl
outsl
xchg
adc
adc
cltd
xor
sbb
lahf
lret
test
cmpsl
outsl
call
lret
jecxz
dec
add
adc
enter
cltd
test
cmpsb
sub
test
clc
xchg
or
cli
push
outsl
idivl
fwait
ljmp
ret
fcomps
lcall
lret
cli
mov
dec
call
pop
jno
jne
cltd
add
add
mov
iret
bound
mov
lahf
mov
or
mov
add
or
xchg
vpunpcklbw
or
jnp
pop
add
pop
shlb
loopne
xchg
out
loopw
test
fucom
mov
hlt
out
icebp
icebp
xchg
cmp
cmp
mov
ret
mov
scas
or
jns
sub
pop
sbb
incb
inc
sar
cmp
mov
pop
andb
sbb
or
xor
push
inc
fs
inc
sbb
out
sub
xchg
sub
or
jnp
xlat
sahf
sub
push
pop
mov
insb
imul
jb
xor
in
lods
lret
xchg
js
mov
lods
sbb
sub
or
and
ljmp
ret
int3
pop
dec
dec
and
sbb
sbb
pop
push
in
cmp
pop
cmp
jl
dec
push
into
add
pop
jge
insl
mov
mov
fisubs
stos
push
popf
stc
jno
repz
mov
fsubl
arpl
mov
and
xor
loopne
cmc
fistl
and
mov
adc
into
icebp
and
cld
inc
adc
xor
mov
wbinvd
shl
push
xchg
cwtl
mov
jp
sbb
and
lock
or
int
and
inc
mov
lret
std
nop
sub
lods
loopne
push
mov
add
xor
sub
insb
mov
add
repz
lret
or
or
les
call
out
push
lea
push
push
insb
push
mov
cli
out
mov
dec
adc
lods
lea
inc
adc
jns
sub
sbb
loop
adc
mov
mov
mov
je
inc
and
xor
arpl
leave
sub
ja
dec
adc
cmp
adc
lock
pusha
stc
pop
out
adc
pop
insl
mov
mov
lds
movsb
jne
clc
push
pop
jne
lret
xchg
xor
xchg
push
ljmp
inc
sbb
aad
add
fmull
cmp
movsb
scas
std
pop
repz
das
addb
ret
inc
ja
test
loope
and
in
sbb
inc
push
jmp
cmp
out
lods
xor
sub
mov
and
pop
lods
sbb
jno
dec
adc
rcrl
jecxz,pt
pop
dec
cmpsl
call
add
out
jae
mov
cmp
test
and
adc
stos
sub
je
sbb
test
lahf
ljmp
xorl
sbb
xor
jo
ret
xchg
add
cmp
loopne
out
out
jp
sub
mov
sbb
out
add
adc
or
mov
push
cmp
sub
xchg
enter
mov
dec
daa
cltd
xchg
xchg
jmp
mov
xor
xchg
push
nop
and
mov
mov
jmp
pop
leave
sbb
test
pusha
pop
dec
pop
jnp
and
paddsw
mov
pop
dec
negl
adc
in
ljmp
dec
outsb
arpl
shlb
inc
or
jmp
xchg
jne
pop
mov
mov
bound
repz
cmp
lahf
scas
fisubrl
xchg
pop
sbb
sar
push
repnz
jno
mov
lock
dec
rcrb
jmp
sub
sub
xchg
loop
cli
pushf
lahf
dec
and
int3
mov
mov
into
repnz
push
jge
clc
cmp
repz
std
mov
into
jns
mov
mov
sub
pop
repz
fucom
notb
sarl
cmp
je
xchg
outsb
mov
fstpt
gs
aam
in
mov
test
cmc
mov
fisubs
fildll
and
push
cmp
mov
xchg
pop
xor
xchg
in
ret
inc
lret
cmp
pop
jmp
outsb
pop
repz
movsb
inc
popf
movsl
es
aaa
fdivrs
mov
aaa
imul
jnp
aas
pop
or
imul
mov
mov
push
fcoms
aas
scas
mov
dec
push
pushf
pop
shlb
decb
mov
and
jle
lret
jecxz
xor
and
sub
aaa
ss
adc
in
testl
loop
notl
data16
inc
fidivrl
addr16
xchg
hlt
xchg
push
imul
in
popf
xchg
ror
test
cld
xchg
nop
inc
mov
mov
ja
cmp
inc
in
xlat
pop
or
lock
or
shll
cltd
jp
add
inc
cmp
aaa
jnp
jecxz
xchg
movsl
push
xchg
jb,pt
inc
test
xchg
mov
sbb
push
out
dec
fwait
add
outsl
orb
xor
adc
sbb
pop
or
jecxz
fwait
push
mov
push
or
dec
loop
aad
jb
cwtl
out
push
popf
lea
mov
out
lds
xor
push
sbbb
inc
pop
insl
mov
inc
lods
sarl
pop
loopne
mov
cmp
gs
cmp
mov
jp
rcrb
xchg
xor
in
fdivp
jl
mov
out
xchg
inc
ret
jl
xchg
dec
notl
jnp
leave
sbbl
js
arpl
push
jle
arpl
push
into
imul
cld
mov
testb
arpl
xchg
stos
ss
push
lock
imul
sub
xor
mov
sbb
inc
cmpsl
lahf
out
sub
repnz
popf
xor
add
xchg
and
or
lret
xchg
mov
sbb
add
push
xorl
into
adc
mov
jge
or
jg
sar
das
aas
inc
loopne
cmp
mov
xor
jmp
sub
test
push
mov
lret
cmp
int
mov
lahf
or
adc
cmp
mov
add
cmp
push
jae
adc
mov
and
add
in
xchg
pop
add
xchg
add
das
add
pop
outsl
outsb
jg
dec
jle
out
pusha
hlt
mov
pcmpgtd
push
dec
inc
push
or
pop
insb
inc
cld
xor
pop
lret
cmp
ja
jno
xor
sub
adc
fiaddl
mov
xchg
daa
mov
sbb
mov
out
sbb
into
push
add
cmp
lock
int3
movb
add
jmp
rolb
and
lahf
testl
push
cmp
repnz
jne
add
jno
adc
cmp
add
jb
mov
sub
fadds
add
std
pushf
mov
lcall
nop
out
push
add
stos
ss
pop
cs
push
dec
imul
jmp
lret
mov
sub
inc
enter
and
mov
pushf
les
rcll
cmc
cltd
movsb
lods
jno
sub
xchg
data16
mov
aaa
push
ficoms
push
cmp
cmpb
cld
pop
das
into
xchg
loope
out
clc
mov
mov
vmovd
mov
fldl
mov
or
mov
xlat
lds
fidivs
and
cltd
mov
mov
push
cmp
sbb
dec
push
insb
add
ljmp
cmp
mov
sub
lcall
dec
popa
hlt
and
cltd
mov
pop
ss
mov
xor
push
xchg
mov
dec
mov
push
mov
leave
sarb
cs
jnp
ja
sub
test
jns
push
cmp
popf
in
sbb
dec
or
ret
insl
xchg
adc
adc
outsb
mov
loopne
mov
rolb
popa
filds
das
push
fcomip
mov
sub
adcl
lds
in
sbb
das
arpl
xor
dec
daa
lcall
push
xchg
imul
ljmp
dec
fsin
push
ficompl
cs
mov
mov
sarb
cmp
pop
scas
lods
jno
cmp
push
sbb
scas
hlt
in
sahf
lods
imul
inc
fildl
inc
out
stos
movsb
jbe
cmp
cmp
insb
jecxz
adc
es
loope
add
jno
nop
clc
cmp
sub
std
dec
mov
xor
inc
fscale
inc
sti
jbe
cmp
dec
cmp
add
vpsraw
pop
push
cli
or
sub
test
cmp
push
add
mov
adc
clc
xor
loop
test
ret
xchg
insb
movsl
ret
jge
loope
jmp
xchg
aas
movsb
sbbl
ficoms
and
pop
xor
lea
addr16
test
repz
mov
jge
out
test
sbb
xor
cli
movsl
jp
imul
cs
mov
outsb
xchg
mov
and
pop
mov
sbb
lret
jle
loop
jecxz
or
mov
mov
rcl
shl
mov
roll
repz
add
inc
fs
test
jbe
cld
aad
stos
ror
pop
sub
mov
movsl
mov
outsb
xor
fcmovnu
and
and
rcrb
sub
mov
mov
dec
fdivs
mov
xchg
push
iret
rclb
lods
jno
shl
stos
sub
fstl
dec
stc
pop
subb
testb
jmp
hlt
shr
mov
shlb
sbb
pusha
cmpsb
test
clc
or
scas
mov
sarl
jp
mov
xchg
xor
mov
imul
xor
pop
imul
push
mov
or
add
jg
cmp
cmpsl
mov
stos
lock
and
scas
nop
jbe
orb
adc
jb,pt
sub
insl
fs
stos
inc
bound
int
cmp
push
push
push
in
fisttps
ja
cli
cltd
mov
insb
or
rorl
roll
mov
in
fcoml
bound
and
cmpsb
sbb
and
pusha
sbb
icebp
jne
and
xor
add
pop
fstl
dec
push
outsb
jle
rclb
or
jp
jns
sbb
sub
leave
fs
xchg
aaa
pop
orb
mov
mov
out
xchg
cmp
jle
ror
sbb
repz
xor
mov
mov
jp
loope
inc
sub
xor
frstor
shlb
or
aas
cmc
mov
xor
push
and
inc
and
mov
inc
jp
dec
fs
cli
cmp
xor
jb
jle
pop
hlt
cmp
mov
roll
in
mov
sarb
mov
addr16
or
adc
or
xlat
je
dec
shlb
dec
fstps
rorb
adcb
in
fs
mov
inc
sub
rolb
daa
jg
jl
hlt
scas
rclb
bound
xor
lds
lcall
inc
cwtd
and
nop
aad
out
jb
in
xor
aas
inc
gs
inc
test
sbb
in
cld
cmp
out
lods
add
mov
dec
cmc
cmp
cmp
int
mov
cmp
sbb
cli
lea
sub
aaa
imul
jmp
clc
std
iret
push
mov
mov
push
sub
push
push
jmp
push
ror
or
sbbl
out
mov
insb
mov
lret
cltd
mov
cmp
outsb
push
mov
ja
push
int3
je
push
jge
pop
pop
mov
pop
lds
push
leave
dec
adc
out
clc
bound
sub
pop
sub
jo
out
inc
inc
cmp
add
ljmp
in
or
aas
in
add
mov
inc
stos
pushf
jmp
cld
gs
out
pop
cmp
cmp
std
dec
mov
icebp
lods
jns
pop
fdivrs
cwtl
jno
mov
add
jmp
addr16
push
lcall
mov
jno
stos
loop
movsb
xchg
movsb
sti
sbb
mov
insb
enter
adc
scas
cltd
pusha
inc
inc
xor
leave
dec
cmpsb
adc
stc
mov
aas
leave
sbb
bound
push
out
mov
lret
fxch
jecxz
pop
sub
push
fdivrs
dec
rclb
repnz
fstl
or
iret
test
bound
je
imul
add
mov
ds
sub
sbb
dec
movsl
xchg
push
pop
ret
sbb
push
cmp
je
sahf
sahf
loopne
in
dec
dec
sub
jae
add
push
popa
sahf
dec
sub
sbb
adc
cwtl
or
shlb
mov
ljmp
adc
lods
inc
into
and
imul
cmpsb
lods
push
push
adc
jnp
dec
ja
pop
rolb
add
mov
mov
xor
dec
pop
sbb
inc
stos
dec
out
out
test
dec
jge
pop
jb
cmp
daa
sub
dec
xchg
call
push
adc
push
fwait
inc
shrb
cld
mov
sbb
jne
adc
fcompl
jge
loopnew
out
loope
adc
fldenv
imul
push
pcmpeqd
cmp
mov
rclb
lcall
xor
jp
jmp
xor
push
jge
dec
fcomi
push
mov
loopne
mov
xor
xchg
fcomp
es
jne
mov
dec
xor
arpl
lcall
mov
setno
mov
ss
inc
cmp
andb
mov
mov
dec
jg
outsb
ret
xor
mov
jne
imul
and
xchg
add
hlt
jge
dec
lock
xchg
add
sahf
pop
xor
adc
mov
jae
mov
jae
and
mov
sub
fwait
pop
cmp
push
sub
mov
sub
inc
cld
es
and
jb,pn
loop
mov
lods
lret
lock
lods
out
mov
dec
sbb
xchg
mov
mov
dec
push
add
mov
mov
fstl
xor
mov
push
fldcw
daa
sbb
popa
movsl
jl
mov
cltd
and
adc
dec
cmp
and
adc
push
aam
mov
xor
mov
mov
lahf
bound
push
scas
addr16
adc
xor
jne
fmuls
fcoms
ret
xor
adc
mov
push
push
xchg
jne
mov
pop
cmp
data16
dec
mov
xchg
pop
cltd
std
in
insb
and
out
cltd
adcl
xchg
or
mov
pop
insb
xorb
mov
sbb
adc
bound
test
adc
imul
addr16
or
jb
push
dec
lret
loop
or
cmp
inc
fcompl
stos
push
jp
movsl
in
mov
psubw
dec
ret
cmpsl
xchg
fisttpl
imull
and
or
jp
popa
mov
and
fisttps
idivl
cmp
xchg
jge
into
sub
or
loopne
idiv
sbb
xchg
icebp
clc
xchg
loope
aas
adc
add
faddp
sbb
cmp
lret
rcrl
or
sub
nop
mov
je
insl
xor
or
nop
push
add
imulb
jle
dec
jecxz
adc
inc
lods
fcompl
into
inc
jb
outsb
xchg
fidivs
jne
dec
divb
cmp
aaa
jno
aas
dec
cmp
pop
cmp
mov
sub
lahf
lock
xchg
add
out
cmp
mov
sti
xchg
ljmp
mov
popa
les
les
sbb
push
imul
vmovhps
out
mov
add
sub
xorb
add
in
adc
xchg
or
lds
xchg
adc
mov
adc
sarb
inc
xchg
jb
cli
enter
sub
repnz
imul
stc
testb
imul
hlt
repz
xchg
incl
adc
jae
push
fisttpll
pop
inc
pop
fnstenv
fadd
stos
mov
aas
fcmovnb
push
or
std
cmp
jne
in
jle
add
dec
pop
inc
in
xchg
dec
in
daa
outsl
inc
jp
seta
pushf
sahf
shrb
mov
cmp
push
sub
cmpl
gs
std
mov
cmc
jno
push
pushf
pop
incl
sub
xchg
pop
sub
add
xor
and
fiadds
inc
outsl
mov
mul
ret
sbb
mov
enter
je
mov
rclb
ja
in
jno
sub
and
in
adc
iret
mov
fidivrs
pusha
aas
xor
cmc
lret
xchg
push
sbb
bound
add
dec
test
xchg
mov
je
sbb
add
push
aaa
xor
popf
xchg
pushf
mov
add
and
loopne
push
ss
movsb
fs
adc
or
pop
ret
push
fstp
shll
dec
out
outsl
or
xor
sub
insl
mov
adc
cs
mov
jle
pop
mov
mov
popa
ljmp
jo
pop
xorb
loope
sbb
lea
pop
xchg
cmpsl
les
adc
mov
fcompl
add
jns
xor
ss
pop
mov
or
mov
mov
xor
insb
fcompp
daa
adc
cmp
mov
jle
cltd
pop
dec
sarl
dec
stc
fisubrs
loopne
pop
mov
das
andb
fcomps
push
sbb
mov
mov
outsl
sub
popf
pop
push
pop
notb
decb
lock
lahf
ds
mov
loopne
jae
nop/reserved
sub
push
into
push
or
test
js
and
test
push
push
movsl
sbb
mov
push
pop
das
push
inc
and
int
push
call
sahf
fildl
mov
mov
in
and
lcall
fiaddl
ret
inc
out
cs
mov
and
and
test
cmpsl
out
imul
or
std
sahf
cmpb
mov
and
jl
cmpsl
push
push
imul
out
push
jo
stos
stos
pushf
js
and
lock
in
mov
mov
fdivrl
test
hlt
fisubrs
nop
lds
repnz
adc
fsubrl
repz
adc
cmc
adcb
cwtl
pop
repnz
popa
rorb
dec
sbb
int
xchg
jns
aad
sbb
push
out
push
jge
sbb
je
js
mov
ret
mov
xchg
cmc
negb
repz
pushf
decl
xchg
mov
fisttpll
push
int
mov
or
jl
mov
dec
adc
loopne
idivb
leave
repz
pop
jae
lock
ss
aas
push
das
fwait
and
mov
rorl
repz
in
dec
jge
xchg
jmp
pop
aam
sub
inc
cmp
pop
xchg
xchg
jg
aaa
call
aas
adc
sbb
jmp
mov
fisubl
movsb
insl
push
jno
push
cmp
inc
push
push
test
jmp
int
sbb
cmp
cltd
xor
pop
fisubs
sub
testb
and
fmul
mov
test
imul
hlt
aad
cmp
lcall
push
or
sub
or
inc
jne
xor
call
test
insb
stos
or
scas
aam
inc
ljmp
mov
nop
push
push
ja,pn
push
ja
inc
mov
fcmovb
shll
push
repnz
sbb
cwtl
inc
add
pushf
sbbb
stc
shrb
add
int
fnstcw
inc
mov
and
lods
mov
sub
xor
jo
fidivrl
push
add
mov
repnz
scas
out
fstps
outsl
jecxz
loopne
je
lcall
mov
jb
push
fidivl
rcrb
pop
cmp
test
rcrb
mov
in
add
and
jae
incl
pop
dec
inc
gs
std
enter
mov
cmc
repnz
or
orb
stc
inc
scas
cmpsl
lds
xchg
fnstcw
out
daa
add
fidivl
movsl
mov
ret
and
push
or
adc
ja
lods
mov
or
ret
cmp
xor
push
test
dec
in
arpl
adc
icebp
data16
ret
inc
cmp
icebp
and
cld
cltd
jns
cmp
loopne
jno
orb
cltd
jo
mov
fwait
adc
xchg
cmp
cmpsb
jb
jle
aam
into
shr
add
add
mov
test
push
popf
pop
popf
mov
addr16
pop
cmp
mov
pop
push
jle
pop
ja
xchg
stos
movsl
nop
jp
das
int
mov
dec
jae
gs
scas
enter
movsl
push
push
rorb
les
mov
lea
inc
in
test
dec
loop
lods
inc
push
xor
mov
mov
lret
push
fildll
add
fildl
push
lret
mov
fs
jo
xlat
xchg
add
testb
jecxz
mov
xor
cmpsb
lcall
sti
mov
std
push
mov
inc
cli
in
enter
inc
pop
cmpsb
sbb
clc
add
inc
dec
push
add
lock
jmp
or
ret
mov
mov
or
je
es
mov
pop
mov
fnstsw
jle
xor
xchg
xchg
ret
add
cmp
xor
dec
jmp
lods
sti
dec
xchg
inc
mov
jle
push
mov
gs
fimuls
ljmp
je
jl
loopne
imul
and
and
testl
nop
mov
fnstsw
mov
ret
fisubrl
adc
xor
push
jns
repnz
add
push
lock
int
ss
cltd
mov
arpl
jno
enter
aas
ss
xchg
jp
popa
orl
cmp
das
jno
das
cmpsl
add
daa
mov
fbld
rcl
clc
addr16
lcall
loopne
push
repz
test
dec
and
sbb
adc
sbb
dec
fdivrs
call
mov
and
test
js
out
jmp
pop
std
aad
sub
lret
and
mov
adc
stc
add
mov
cmp
xchg
adc
mov
jge
sbb
adcb
jo
repnz
mov
frstor
aaa
mov
jno
out
cmp
or
mov
out
test
push
jae
ja
out
jno
cmp
in
push
xor
loope
push
xchg
xor
inc
add
cmpsl
or
pop
mov
out
clc
xor
leave
std
jmp
adc
test
fimull
je
push
incb
push
int3
fadd
scas
aaa
int3
sbb
lods
fdivr
aam
dec
dec
mov
mov
or
pushf
push
cmpb
jge
cmp
sbb
xchg
sbb
push
mov
cmc
das
js
jg
aad
push
mov
xchg
mov
aaa
jg
pop
adc
shlb
call
lret
es
jb
test
or
cmp
in
dec
dec
sbb
inc
imul
mov
jb
pop
addb
push
jge
sub
add
test
fidivrl
and
sbbb
fstps
dec
sbb
mov
dec
imul
cmpsb
jle
shll
lods
add
sbb
push
add
cltd
mov
jne
jb
pushf
sub
xchg
ret
adc
test
jg
inc
and
or
xor
push
and
mov
push
inc
arpl
aas
cmpsl
neg
les
test
xor
cmp
jge
pop
lock
pop
xor
push
mov
int3
add
cmp
push
imul
push
dec
adc
adc
nop
stc
leave
mov
mov
sub
mov
pusha
icebp
hlt
mov
lcall
or
jo
fistl
sqrtps
sbb
cwtl
push
out
mov
mov
lret
sbb
int3
lods
not
jge
fcoms
adc
xchg
leave
hlt
cmp
shll
leave
mov
inc
mov
xchg
fs
jmp
push
pop
cmc
mov
pop
arpl
sub
pop
xor
dec
add
aaa
leave
loopne
push
inc
mov
pop
sti
cmp
inc
mov
jg
int3
dec
and
xor
jmp
out
sarb
xor
push
cmp
xor
lret
mov
fucomi
lret
and
jp
xchg
mov
xchg
lea
mov
fmulp
cli
cli
dec
dec
push
xchg
in
pmaxub
xor
jmp
push
sub
call
ret
inc
inc
dec
popf
iret
fistl
and
xchg
inc
lret
dec
mov
mov
scas
jb
pop
repnz
cs
bound
add
jne
jmp
sahf
fisubs
arpl
mov
jb
mov
xor
mov
fucomp
call
sbb
push
adc
inc
or
out
in
mov
je
push
imul
in
insb
mov
jno
fcoms
push
scas
dec
jmp
cmpsl
inc
sub
rcrl
sub
adc
pop
pop
cld
jmp
xor
bound
push
pop
sbb
dec
cmp
lods
icebp
insb
in
fmull
scas
ret
cmp
icebp
nop
loop
adc
adc
js
cld
push
mov
pop
out
jbe
sar
push
adc
cwtl
jb
mov
adc
and
or
push
cli
add
test
xor
and
sub
shlb
cmp
cmp
mov
or
sub
mov
push
mov
jg
das
cmc
cmc
jmp
movsb
daa
dec
cmp
pop
mov
inc
add
inc
jmp
xor
cmpsb
lahf
lahf
pushf
outsb
xchg
sarb
outsb
lods
cmpsl
mov
das
or
push
loop
mov
mov
and
pop
mov
testl
and
std
inc
into
mov
mov
enter
loop
icebp
scas
fs
push
lods
adcb
or
cmpsl
cli
es
and
popf
cld
xchg
xchg
inc
mov
out
dec
mov
cld
sarb
push
pop
push
xchg
mov
es
mov
mov
mov
aad
xchg
mov
aad
inc
xor
ss
xor
outsb
pop
mov
xlat
push
jmp
xor
mov
inc
mov
fs
in
hlt
mov
icebp
outsb
push
push
fs
stos
jg
aad
in
cmp
xor
mov
xchg
mov
inc
aaa
and
jo
adc
icebp
xlat
fwait
sbb
cltd
xchg
or
inc
nop
cwtl
push
push
xor
enter
adc
insb
clc
popf
inc
mov
add
pop
nop
ret
xchg
mulb
pop
dec
lcall
or
xlat
in
in
ljmp
pop
push
adc
and
xchg
xchg
std
clc
in
pusha
fcoms
and
jo
and
mov
out
movsl
shrb
sub
pop
mov
or
mov
fs
std
and
mov
loopne
fadd
sbb
adc
scas
add
loop
sub
imul
fldt
push
popa
aam
bound
aaa
dec
jl
push
gs
stos
lcall
mov
mov
push
xchg
mov
movsb
mov
or
inc
test
cmpl
or
inc
jae
adc
push
lds
xor
arpl
mov
push
das
xchg
loope
outsl
std
xchg
mov
xchg
xchg
lcall
lretw
cmpsl
testl
add
inc
mov
and
jge
in
sub
xchg
int3
lea
and
pop
in
mov
cld
add
cs
popa
les
ret
cmp
shl
push
enter
jl
pop
cmp
ret
or
hlt
hlt
int
sahf
jne
js
push
mov
sahf
gs
dec
jno
push
cmp
mul
jne
loope
push
push
pop
das
incb
lock
incl
lods
dec
sahf
adc
rclb
lret
mov
js
loopne
pusha
xchg
mov
stos
seta
lret
pop
add
ljmp
xlat
daa
loopne
dec
pop
dec
mov
xchg
insl
out
ficomps
fs
pop
fldt
jle
aaa
sub
jmp
adc
sbb
jnp
sbb
and
inc
mov
aad
or
mov
mov
int3
call
mov
mov
insb
xchg
scas
insb
push
mov
sbb
mov
jp
add
cmp
sbb
repz
sub
push
sub
jge
xchg
lret
ljmp
movsl
fmull
pop
adc
mov
mov
inc
xor
lods
and
mov
ss
sbb
add
mov
jge
cmp
scas
xchg
jle,pn
jo
ja
sbb
push
jle
push
jne
dec
add
out
and
mov
xchg
pop
cmpsl
lret
inc
jae
loopne
xor
and
sbb
orl
pop
sbb
jne
dec
jmp
sbb
xor
xor
cwtl
mov
sbb
les
jnp
and
sarb
sub
bound
mov
rorl
rolb
mov
pop
mov
addr16
sbb
push
popf
push
dec
mov
pop
cmp
imul
pop
call
sub
scas
or
movsl
imul
inc
scas
mov
sub
and
jge
std
out
in
push
imul
sub
js
ret
pop
add
shll
popf
fidivs
imul
out
push
add
ds
push
inc
dec
popf
scas
sub
cmpsl
sahf
xor
dec
pusha
jmp
add
dec
xor
jbe
shlb
fisttpll
rorb
and
leave
out
cmpsb
xchg
jb
jle
test
cwtl
dec
fcmovnbe
arpl
xchg
and
insb
mov
cmp
inc
xor
shrb
adc
or
sub
mov
cmp
lret
jnp
out
pop
inc
mov
push
pusha
jl
dec
stos
adc
xor
mov
sbb
inc
imul
inc
mov
andl
aam
cmp
movsb
repnz
daa
mov
dec
loop
loopne
jecxz
xchg
jb
idivb
lds
inc
jmp
or
dec
cmp
out
iret
repnz
into
mov
lret
jmp
mov
xchg
mov
jnp
lods
cmp
sub
sbb
jns
insl
xor
sbb
push
cmc
xor
vmptrst
cmpsl
hlt
aaa
popf
aam
xchg
cmpl
or
lahf
js
in
into
fisubl
fidivs
int3
movsb
test
repz
xlat
punpcklbw
test
psrlw
mov
stos
mov
mov
inc
inc
dec
mov
je
jbe
dec
std
lret
int
rorl
repnz
ljmp
push
outsb
cmpsl
mov
push
ret
fbld
or
lret
fwait
and
push
dec
das
mov
lock
mov
test
jnp
jle
jb
mov
loopne
sahf
idivb
pop
cld
adc
cs
arpl
or
mov
iret
and
inc
xchg
lock
insl
xchg
cmpsl
sahf
adcb
and
push
daa
xor
fcomps
sub
popa
and
xor
aam
repz
xchg
lahf
xor
xor
xchg
xor
mov
xchg
fstpt
add
bnd
fdivs
orl
cmp
shrb
pop
lock
stc
pop
add
mov
mov
cmc
negb
or
adc
mov
jae
test
clc
pushf
test
gs
ret
mov
jne
cwtl
stos
inc
inc
hlt
jnp
inc
push
jp
jno
xor
pop
outsb
xchg
fnstsw
inc
adc
cwtl
pop
mov
pop
sub
or
mov
insb
sbbb
xchg
jp
pop
out
dec
and
push
out
test
decl
das
mov
test
mov
pop
shrb
mov
push
push
mov
sbb
add
mov
sbb
adc
call
xlat
mov
mov
sbb
push
jbe
dec
mov
popf
jbe
pop
mov
adc
call
xchg
jmp
or
cmpsb
mov
sub
hlt
ret
mov
lock
push
test
mov
xor
rcr
sti
jl
dec
push
mov
movsb
psubusw
add
mov
xor
mov
sub
movsl
pop
loope
in
xor
add
add
add
out
mov
xor
push
add
pop
imul
clc
fdivs
es
mov
cmc
inc
movsb
adc
pcmpgtw
sbb
jns
xchg
fildll
ss
xchg
jl
push
shr
das
aaa
clc
inc
movsl
ljmp
jecxz
pusha
aas
push
jae
les
rolb
aad
test
pop
outsl
cmpsl
mov
sbb
mov
fistpll
clc
lods
fdivl
xchg
into
or
fsubrp
ret
cmp
scas
jb
cmpsb
mov
pop
ljmp
push
movswl
movsb
mov
pop
mov
add
sub
mov
inc
dec
xchg
inc
mov
lahf
push
rorb
psrlw
jns
mov
sub
push
mov
fimuls
fiaddl
jae
jp
in
cmp
xlat
mov
sbb
int
cmp
dec
scas
fdivs
loope
into
lods
cmp
sub
xchg
mov
dec
jne
jns
inc
xchg
sar
mov
int3
lock
push
sti
dec
sub
lock
inc
mov
bound
scas
jl
std
inc
dec
sbb
mov
sub
icebp
test
pop
movsl
popf
push
xor
push
push
cmpsb
arpl
xor
jle
sbb
mov
or
xor
or
outsl
mov
subb
and
hlt
pop
dec
mov
mov
jmp
fstps
imul
repz
or
jo
enter
cmp
cs
sahf
and
push
mov
frstor
sbb
dec
lret
lcall
outsl
rorl
jg
jmp
lahf
push
dec
out
jae
sbb
sub
lret
sub
mov
stos
mov
jne
sub
pop
imul
int
cs
cmp
add
in
popf
fidivl
repz
dec
xor
lods
pusha
jp
cmp
adc
call
ljmp
xchg
dec
test
and
xchg
aad
mulb
push
ss
aas
xor
out
insl
dec
out
scas
cmp
mov
cmp
dec
lret
cltd
ret
bound
ljmp
mov
xor
xor
ja
loopne
fbld
nop
scas
xor
aaa
nop
data16
mov
push
rol
pop
rorb
pop
test
mov
push
xchg
xchg
movsl
jecxz
jbe
loop
in
cmp
and
cmpsb
pop
dec
je
outsl
lret
push
adc
divb
arpl
pop
pop
mov
out
adc
jmp
lahf
jmp
add
dec
and
jl
pop
add
stos
in
xor
out
pop
lds
popa
mov
loope
fldt
mov
mov
shrb
jg
mov
lds
xchg
mov
loop
lahf
ja
icebp
mov
aaa
mov
push
insl
mov
dec
bsf
mov
xlat
arpl
enter
shl
push
inc
xchg
pop
cli
push
in
stos
std
mov
dec
push
push
pop
xchg
and
mov
jge
sub
sub
in
or
inc
add
mov
or
in
push
or
sub
dec
sahf
leave
scas
sub
xlat
ljmp
jmp
and
jp
dec
xor
push
leave
lcall
sub
inc
rcr
ss
cmpsb
or
cmc
add
shrl
lods
insb
mov
subb
hlt
leave
sbb
pop
ja
movsl
out
lret
xor
iret
push
or
std
sub
dec
jecxz
fisubs
inc
mov
divb
and
mov
dec
sti
jge
sbb
in
jae
rclb
and
xchg
repz
dec
mul
dec
and
lea
xor
jmp
insb
xchg
jp
movntps
cmp
xor
xor
mov
fcomi
cmp
rcrb
add
pop
js
sub
popf
imul
testl
into
xchg
inc
or
push
int3
test
sahf
repz
mov
pushl
outsl
out
dec
ss
and
xlat
mov
negb
xlat
mov
test
mov
jno
push
adc
add
cvttps2pi
mov
adc
test
or
aad
mov
aaa
cmp
mov
and
adc
xlat
sti
cs
jb
cmpsl
movsb
sub
loop
insb
mov
sub
pop
cmp
hlt
bound
jmp
jl
lahf
mov
fildl
insb
enter
lods
jb
lcall
mov
sbb
aaa
inc
inc
xchg
pop
dec
sbb
push
cltd
std
int3
aam
lods
pop
and
fisttps
add
and
es
mov
incb
add
int3
push
cli
cmp
pop
neg
pushf
lcall
ja
test
xor
pop
dec
mov
push
stc
jo
daa
js
nop
push
ljmp
push
or
jl
sbb
mov
xor
cwtl
cmp
les
mov
dec
lret
mov
mov
lock
jle
clc
into
mov
test
jae
mov
es
adc
and
sbb
stos
sbbb
fcompl
inc
test
xchg
scas
aaa
clc
cmp
nop
mov
lds
push
das
pop
pusha
imul
mov
je
pop
icebp
scas
ljmp
out
out
jo
xchg
out
test
dec
icebp
push
je
ficompl
jno
mov
ss
mov
rclb
dec
cmc
xchg
shll
leave
dec
data16
insb
test
jge
jo
jge
push
inc
mov
cmpl
das
dec
mov
std
mov
in
or
mov
loope
push
xor
pop
fiadds
lock
mov
imul
xchg
xchg
pop
sahf
inc
lock
cmp
cmc
push
pop
inc
loope
sti
gs
push
popf
xor
push
mov
xchg
cmp
xchg
mov
leave
pusha
popf
and
cmpsl
enter
popa
add
inc
dec
cli
in
ds
jl
popf
lahf
push
xlat
stos
lahf
sub
push
inc
or
js
popf
int3
insl
adc
or
pop
clc
push
lcall
imulb
rclb
mov
cmp
xor
gs
xchg
and
mov
ret
sarb
jbe
loop
mov
adc
out
popa
fldl
add
mov
mov
enter
dec
dec
inc
jle
push
and
test
mov
jg
andb
loopne
jb
das
jno
arpl
cmpsl
mov
movsb
sbb
adc
push
insb
cmc
fdivs
inc
mov
loope
fisttpll
mov
test
lahf
ljmp
fwait
dec
fdivr
mov
push
ds
ja
push
push
add
test
in
fs
mov
hlt
cs
sahf
pop
in
arpl
daa
pop
test
jge
jbe
adc
call
xchg
lret
cmp
push
iret
mov
lock
ret
jno
adc
inc
xor
icebp
scas
adc
in
mov
das
mov
lret
je
pop
dec
test
aaa
push
out
mov
lret
mov
dec
in
inc
fisubrs
mov
inc
ljmp
push
ljmp
loope
repnz
insb
sbb
into
jmp
arpl
aaa
scas
jmp
push
and
jbe
mov
add
loope
or
das
cmpsb
xchg
mov
inc
mov
je
int3
pop
rcll
pop
mov
jmp
scas
test
cmp
jns
inc
pop
divb
push
lds
pop
mov
mov
clc
or
xchg
xchg
xor
mov
jbe
popa
cmp
sti
cli
jecxz
pop
cmp
xchg
jg
xchg
ljmp
add
sti
je
rcrl
cltd
jbe
loopne
les
popa
into
cmp
repz
jb
mov
mov
push
sbb
lea
jecxz
mov
aad
bound
loopne
pop
into
jae
outsb
addl
cmp
stc
scas
andl
adc
cmc
pop
outsl
jge
push
sti
pusha
enter
mov
adc
xchg
cmp
test
idiv
pop
shrl
push
and
inc
xchg
jge
add
arpl
or
scas
fdivl
mov
jp
sbb
adc
push
pop
rcrb
cs
lods
inc
loopne
sbb
mov
jecxz
fisubs
js
xor
xor
mov
fisubrl
pusha
inc
shrl
lock
push
fcomp
xchg
cmp
xchg
out
movsb
mov
fld
cmp
enter
pop
push
dec
nop
lds
or
mov
dec
mov
out
aas
shr
pop
es
divb
add
test
sahf
sbb
hlt
and
pusha
cmp
cmpsb
notl
or
push
outsl
mov
sbb
xchg
mov
leave
loop
mov
push
jmp
dec
mov
mov
mov
clc
sahf
into
adc
mov
push
in
push
and
icebp
push
cmp
aas
jnp
xrelease
not
inc
or
rcl
push
out
insl
iret
dec
or
jp
cmp
sub
xchg
dec
jno
cmp
mov
inc
test
or
sub
mov
and
repnz
fistpll
ljmp
mov
sub
rorl
jecxz
dec
or
mov
shll
mov
mov
sbb
mov
pop
fdivs
test
jge
gs
sbb
adc
fs
sbb
add
je
popf
cmp
ja
mov
push
xor
adc
push
jmp
sub
out
add
aam
call
push
cmp
mov
add
jo
xor
mov
bnd
xor
fsubrs
adc
adc
insl
xchg
jle
js
mov
cmp
xlat
test
ja
xchg
nop
pusha
cmp
xchg
popf
xchg
sub
pop
add
mov
lds
mov
pop
fistpl
adc
push
push
test
push
jne
scas
sbb
inc
adc
push
push
jns
sub
xchg
inc
enter
sub
divb
movsl
cmp
xor
mov
xlat
mov
jge
lret
out
jmp
dec
cmpsl
xlat
cmp
mov
sbb
lods
rcrb
sahf
mov
loope
sbb
or
or
addr16
jbe
dec
inc
lahf
sbb
outsb
mov
push
jle
jno
pop
lock
push
xchg
in
add
rcrb
mov
fnstenv
test
lods
mov
dec
cmc
scas
decb
push
out
int
int3
aas
xor
fisubs
sbb
pop
add
pop
shl
ret
inc
adc
pusha
add
pop
shr
test
sbb
jmp
pop
fmull
mov
jmp
pop
mov
jle
push
adc
loop
popf
iret
dec
push
adc
sub
cmp
movlps
fldt
or
popa
pop
jo
iret
or
cmp
adc
dec
xor
fcoms
pmaxub
fwait
dec
inc
das
cli
or
pop
ds
add
sub
pushf
mov
cwtl
jns
cwtl
sub
inc
mov
mov
call
inc
xchg
outsb
push
xchg
mov
inc
push
dec
xor
pop
adc
mov
lret
xor
xor
outsl
lods
jmp
in
or
insl
push
test
test
loopne
push
aad
mov
lods
js
cmc
mov
jbe
icebp
sti
adc
scas
das
mov
out
cmp
shlb
mov
pop
jmp
jl
icebp
cmc
jg
lcall
sahf
in
cmp
incb
cli
fwait
mov
testb
cli
iret
test
ljmp
pop
lret
pop
push
arpl
cltd
pop
popf
push
shr
mov
and
imul
sub
xorl
fsubs
andb
inc
js
bound
xor
push
push
xchg
cltd
bound
cmpsb
mov
and
xchg
mov
or
or
ja
testb
sbb
imul
xor
movsl
fisubrs
out
dec
mov
jg
pushf
aaa
outsb
repnz
int3
leave
into
fimull
sub
repz
mov
mov
fwait
stc
mov
sub
scas
push
and
pop
negl
imul
in
mov
xor
in
bound
mov
inc
jo
inc
sbb
push
sarl
push
push
push
inc
incb
subb
sbb
or
push
xchg
pop
jb
sahf
push
inc
aaa
mov
movsb
xchg
aad
pusha
lock
movsb
adc
lret
xchg
or
push
and
inc
rcrl
int
mov
xchg
fldenv
xchg
cmp
adc
sarb
push
jbe
std
push
dec
aam
pop
push
clc
pop
jmp
or
and
sbb
pop
or
jg
jge
js
lea
incb
mov
out
je
cmovae
adc
pop
push
pop
adc
jne
add
hlt
hlt
scas
inc
or
es
loopne
xor
cmp
mov
dec
daa
sub
fadd
mov
int
rorb
mov
dec
gs
fcomps
rcrl
add
sahf
rcl
gs
push
inc
mov
mov
popa
shrb
mov
es
mov
clc
adc
mov
pop
push
push
inc
cltd
mov
lock
jbe
sbb
mov
adc
int
push
insl
ror
imul
pushf
mov
push
or
dec
imul
adc
nop
enter
pop
inc
js
mov
jle
add
or
xor
cmpsb
cmc
sub
shlb
dec
mov
out
cmp
sbb
out
lds
daa
movsl
add
xor
mov
ja
sbb
lods
pop
in
jmp
es
imul
and
test
repz
fsubr
test
imul
cld
fistpl
cltd
xchg
movsl
jns
ret
ficoml
outsb
pop
ret
and
lret
inc
inc
jo
scas
cmp
sub
repnz
imul
mov
push
lea
cmpsl
call
mov
icebp
fidivrs
push
fwait
test
cmp
adcb
jne
xchg
mov
icebp
xchg
out
sub
inc
pop
jnp
lods
cmpsb
jge
push
jle
mov
lret
mov
jnp
insl
loopne
or
xchg
jbe
pusha
rol
mov
sub
pop
push
sub
lods
jmp
arpl
pop
jmp
mov
mov
jnp
dec
arpl
stos
push
xchg
xchg
xlat
cmc
sub
pop
jno
dec
push
mov
add
or
rolb
mov
jnp,pn
lcall
sbb
cmpsb
pop
mov
or
cmp
fucomp
jmp
ret
sti
clc
adc
loopne
arpl
aam
push
loop
imul
sbb
xor
popa
sahf
pandn
mov
xor
mov
stos
aaa
add
pop
dec
pop
leave
fcoml
dec
dec
dec
mov
ror
xchg
cwtl
fadds
sub
inc
int
shrb
xchg
sbb
cmp
jb
ret
add
mov
inc
mov
out
xor
mov
leave
hlt
rcll
push
andl
xchg
mov
comiss
pop
inc
pusha
test
jne
and
cmp
dec
aad
cmp
pusha
sub
xchg
mov
mov
dec
mov
sbb
addb
int
rorb
jl
out
xor
xor
pop
stc
jae
fildl
mov
out
lods
fwait
je
adc
rolb
hlt
pushf
sbb
es
xor
add
in
and
jle
pop
dec
add
enter
mov
mov
push
jle
push
aas
mov
in
daa
jp
mov
mov
stc
fwait
xor
in
xchg
rcll
dec
stos
and
icebp
in
addr16
push
push
push
fwait
and
cld
adc
fldenv
jne
scas
add
pop
cmp
enter
call
push
push
add
lahf
add
pop
mov
cmp
nop
decl
mov
fwait
dec
insl
mov
js
rol
imull
repnz
imul
sub
push
or
dec
ja
sbb
cli
in
cwtl
adc
jp
fdivr
xchg
jmp
pop
sbb
xchg
adc
mov
insl
fidivrs
faddl
lds
loop
out
sar
cmp
mov
dec
mov
test
sub
nop
ja
pop
rclb
shrl
jmp
inc
xchg
xchg
addr16
mov
or
fnstsw
icebp
inc
lods
mov
mov
cs
in
in
xchg
sbb
add
mov
cmp
sbb
and
xor
mov
fwait
addl
dec
mov
jbe
int3
gs
sub
loop
cmp
add
out
sub
lahf
push
adc
jns
mov
cli
aam
xchg
mov
xor
mov
push
insb
lcall
xor
or
fld1
lock
imul
pop
sbb
xor
adc
add
jne
sub
add
jb
cs
sbb
and
jl
mov
jecxz
lahf
pop
movsl
push
test
shlb
xchg
aas
in
xlat
sti
cmp
sub
adc
insl
sub
int
adc
iret
xor
jnp
push
mov
mov
aas
xchg
stos
sbb
or
repz
xor
mov
jne
loopne
popf
loopne
shrl
lock
fnstenv
push
lcall
testl
pushf
mov
add
inc
pop
mov
pushf
in
mov
xorb
insl
scas
mov
test
jns
popa
test
fbld
popa
cltd
fdecstp
scas
inc
pusha
cmp
scas
es
pop
outsb
jae
addr16
cltd
sbb
andl
push
and
enter
sarb
mov
xchg
lret
push
pop
sahf
test
fstps
mov
lds
ret
push
mov
jb
leave
xlat
std
mov
add
sbb
and
aas
scas
xchg
pop
xchg
jne
in
repz
adc
das
mov
jo
pop
pop
imul
adc
lcall
pop
pop
ss
arpl
pop
cwtl
cmp
or
scas
or
pop
or
enter
lea
push
hlt
adc
cmc
and
movsb
xor
push
fidivrs
push
pop
cmp
fisubs
das
pusha
and
inc
push
jno
jbe
loope
sub
ret
in
es
int3
pusha
and
add
stos
xchg
push
fistpl
cmp
sbb
add
xchg
in
cwtl
and
adc
scas
add
lods
nop
icebp
and
or
ds
pop
cli
icebp
sti
outsl
test
push
lcall
cmp
shrb
xor
divb
ficomps
push
adc
pop
push
pop
daa
outsb
roll
mov
pop
lahf
add
movsb
fcomi
stc
insl
sar
adc
rcll
add
or
call
out
dec
push
cmpsl
pop
add
enter
adc
adc
test
lret
pusha
mov
sbb
bound
jl
sbb
bswap
int3
not
xchg
pop
adc
scas
ljmp
xchg
jl
dec
jnp
movsb
xchg
mov
fcomps
lock
dec
int
daa
or
mov
dec
rol
lods
cmc
mov
sarl
sbb
cmp
pop
cmp
cmpsb
lods
adc
pop
lods
das
hlt
out
cmp
and
push
nop
pop
mov
sarl
mov
cmpsl
and
addr16
inc
adcb
aam
cmovae
jb
icebp
je
test
dec
mov
mov
js
les
imul
mov
add
insl
mov
cli
push
jnp
push
adc
push
mov
into
sub
scas
pop
sub
and
mov
push
mov
repz
imul
lods
insb
lret
cmp
sub
out
js
mov
popa
in
stc
pop
inc
and
jns
repz
scas
push
aaa
pushl
or
fdivl
movl
sbb
dec
test
pop
mov
sbb
sti
test
out
fnsave
cmc
jge
shlb
dec
cmp
pop
les
and
push
stos
xor
jge
add
jns
stc
arpl
dec
or
xchg
enter
jne
jo
cmp
and
push
or
or
icebp
cli
sahf
dec
mov
xor
fwait
push
mov
pop
insl
sbb
cmp
stos
sbb
mov
in
test
xchg
js
popf
out
push
xlat
rolb
dec
rcl
and
adc
xlat
inc
pop
nop
sar
and
add
pop
jmp
mov
sub
mov
int3
add
loopne
inc
repz
jmp
ret
sbb
or
jecxz
add
incl
inc
and
nopl
je
out
push
in
jo
js
inc
push
sahf
xchg
enter
loope
scas
lea
outsb
add
push
es
push
push
fwait
call
enter
loopne
xor
iret
arpl
call
fcmovnb
mov
or
or
sbb
ss
inc
push
stc
bound
mov
jns
pop
loop
daa
dec
pop
lret
xor
adc
jo
xchg
aad
test
inc
sub
pop
and
and
cwtl
rorb
scas
push
repnz
push
add
jne
out
out
push
jbe
sub
stos
mov
clc
out
pop
daa
push
or
push
add
jle
mov
and
or
cmp
insb
popf
xchg
cmp
mov
dec
into
xor
mov
dec
push
sbb
mov
sarb
jecxz
into
mov
jns
rcll
fdivrp
pop
cmp
pop
pop
jne
lcall
bound
es
or
and
pop
adc
movsb
and
lods
std
ljmp
push
cmp
xor
mov
pop
in
pop
aaa
mov
pop
cmp
pop
jmp
adc
xor
int
sbb
push
jne
loopne
ja
sub
loope
push
test
sub
cmp
daa
cwtl
push
mov
icebp
sti
xor
xchg
xchg
jg
pop
push
sbb
add
gs
jecxz
push
inc
cmp
mov
jae
jmp
sbb
add
mov
cmp
test
add
xor
or
aad
data16
mov
ds
shrl
fucomip
cmp
sub
push
push
jge
jge
and
mov
jp
inc
xor
dec
fadds
nop
adc
repnz
lea
loopne
adc
scas
dec
adc
ljmp
scas
aam
sub
jmp
jle
push
cmp
xchg
sbb
add
icebp
xor
push
mov
ja
aam
js
jp
in
dec
cld
divps
xor
lret
mov
and
fisubrs
xor
lods
xchg
or
adc
loop
fildll
mov
or
icebp
jne
enter
into
sub
arpl
mov
push
dec
xor
mov
je
dec
mov
and
enter
sub
imul
xor
and
nop
jg
xor
add
lods
jo
dec
mov
pushf
jecxz
sahf
cmp
mov
stos
lds
stc
inc
and
xchg
movsb
push
mov
inc
stos
out
mov
popf
push
cs
insb
push
shlb
fstpl
add
or
jno
inc
lods
cmp
sub
or
inc
fcmovu
lock
cmp
add
stc
xor
jle
imul
out
movsb
jle
sbb
and
xchg
push
cld
pusha
add
lahf
cmpsl
jg
bound
pop
int
mov
push
ficoms
cli
xchg
sub
push
xor
int3
pushf
mov
shll
js
cmp
test
daa
call
fildll
sub
dec
loop
addr16
jbe
repnz
adc
test
or
ret
push
bound
cmc
data16
jns
stc
inc
adc
imul
outsl
adc
insl
daa
add
ss
in
stos
or
inc
clc
pop
test
push
arpl
xor
push
and
xchg
test
xlat
and
push
movsl
shl
int
sbbl
jle
pushf
add
cld
mov
cli
mov
mov
or
cmpsb
push
movsb
cmp
and
inc
and
adc
jp
adc
xchg
xchg
popa
jg
movsl
ret
ljmp
fcompl
nop
adc
sbbb
xchg
mov
les
xor
pop
sbb
popa
fwait
std
push
xchg
jge
pushf
mul
or
cmp
repz
cmc
xor
fmull
arpl
out
lds
adc
orb
jge
bound
mov
mov
adcl
jle
cmp
ljmp
dec
stos
jnp
testl
inc
push
stos
xchg
jmp
pop
xor
jns
cmpsl
jb
jge
jne
and
sahf
mov
xor
in
fcoms
push
adc
mov
push
sbb
mov
inc
jns
jle
push
or
in
xor
xchg
fnsave
imul
jecxz
imul
push
push
push
sub
test
and
rolb
int3
dec
jbe
in
popa
aas
mov
cmp
push
out
pop
fstpl
dec
sub
cs
sub
stos
cmp
in
fcompl
inc
jno
and
aas
mov
dec
mov
std
xchg
rol
sub
nop
mov
mov
sub
inc
push
nop
out
in
addb
pop
jecxz
inc
xchg
push
mov
or
mov
xchg
inc
sub
pop
enter
leave
jae
mov
shrb
mov
stos
fcmove
mov
jo
mov
xchg
mov
shll
inc
pop
cs
jo
mov
arpl
lds
dec
es
aaa
outsb
into
rcrl
push
fldl2t
xor
push
xor
fnstenv
shll
repz
arpl
movsb
testl
sbb
xchg
outsl
nop
adc
testl
or
pop
pop
mov
jge
mov
dec
ret
clc
rcll
cltd
sub
mov
ja
js
ret
stos
into
aad
cmp
pusha
mov
test
sbb
and
fnsave
jmp
push
lock
mov
flds
prefetcht2
nop
in
icebp
ret
cli
sti
sub
mov
pop
mov
outsb
inc
imul
dec
jo
sub
imul
fs
mov
jecxz
cmp
xchg
jge
jge
sbb
jnp
mov
or
mov
imul
dec
idiv
adc
jg
mov
fldcw
in
mov
mov
xchg
mov
dec
or
pop
in
mov
and
mov
jbe
scas
insb
andl
pop
loop
in
pop
gs
mov
fdivrl
leave
mov
xor
jb
testb
xor
xorb
icebp
ret
fstl
add
imul
mov
pop
pop
lds
loop
ja
jns
fwait
sahf
hlt
mov
rcr
mov
inc
pusha
stos
shl
lcall
mov
lea
add
push
mov
dec
mov
test
xchg
dec
movsl
jmp
sahf
sahf
jecxz
movsb
jno
dec
add
xchg
inc
sbbl
rcrb
and
movsl
pop
jp
sarb
out
or
mov
xor
adc
mov
xchg
mov
add
adc
insb
test
dec
mov
adc
cmp
fcompl
mov
xor
xor
sahf
jne
lret
test
aad
fisubrl
and
jge
mov
rcll
jns
and
cmpsl
loope
pusha
lods
cmp
inc
sbb
or
movsb
into
mov
mov
jge
rolb
fists
je
sbb
cld
fcomp
mov
cmp
jecxz
je
shll
test
jb
xor
in
loope
xor
jl
adc
popa
fidivs
add
push
and
inc
cmp
aam
arpl
ret
out
sbb
push
std
and
in
lds
int3
adc
xchg
adc
lock
outsb
fdivs
push
pushf
pop
repz
and
rorb
and
shrb
jnp
add
mov
hlt
in
es
adc
into
clc
xor
rcr
jmp
xchg
popa
lods
aas
popf
scas
and
call
popf
fwait
cmc
lods
popa
ja
outsl
inc
or
sbb
inc
mov
sti
shll
or
push
ljmp
cmp
mov
setb
in
and
cmp
subl
inc
in
aad
xchg
dec
mov
imul
dec
ret
ret
adcb
pop
pop
std
notb
mov
xchg
rorb
std
xor
mov
jle
inc
in
sub
subl
xor
push
push
cld
int
shlb
mov
cltd
out
das
xchg
ficoml
and
xor
xchg
lods
mov
inc
or
data16
lods
adc
xchg
dec
add
ret
jne
addl
jo
andb
dec
jp
and
cmp
mov
or
cmp
mov
scas
push
push
lret
jl
pop
aam
sbb
stos
nop
ljmp
in
sahf
bound
fcoml
in
sub
mov
loope
mov
xor
cmp
cmp
loopne
mov
scas
xor
push
imul
mov
sub
inc
repnz
lds
jge
clc
cmpb
rcr
scas
mov
xchg
push
loop
cmpsb
xchg
repz
and
leave
push
dec
clc
bound
int
jnp
mov
and
mov
and
dec
shr
imul
dec
les
xchg
push
mov
shr
incl
jno
shlb
je
or
mov
pop
push
adc
mov
add
test
dec
inc
or
mov
jmp
inc
mov
mov
and
sti
xor
rorl
mov
mov
enter
lods
mov
call
lret
pop
mov
insb
adc
fildll
fldt
in
xlat
cmp
mov
shlb
lock
stos
push
in
or
pop
pop
push
sub
add
mov
bound
and
fsubs
mov
sub
jb
xor
filds
cwtl
adc
xchg
cmp
mov
and
mov
call
out
ss
ret
shrb
test
scas
push
iret
push
ljmp
loop
test
and
cltd
inc
or
aad
lret
sbb
mov
bound
cmp
inc
cltd
jno
dec
dec
loopne
mov
dec
jns
jno
pop
inc
inc
pop
dec
rcl
ds
insl
insb
xchg
dec
push
scas
repz
cltd
xchg
jmp
push
push
das
std
cmp
int
or
test
or
mov
sbb
ret
push
push
push
cmp
jne
es
xchg
call
xor
rcrl
cmpsl
xchg
int
or
push
lods
test
push
stos
jnp
jne
in
jae
test
jnp
xchg
mov
push
xor
dec
cmp
add
fcmovnu
adc
and
mov
cmc
popa
sti
sbb
ret
jl
pop
dec
fisubrl
je
xchg
lret
xor
xlat
jno
iret
push
push
sub
shll
enter
test
bound
loopne
insb
imul
clc
lock
pop
inc
mov
push
into
fstpt
fbstp
adc
xlat
daa
xchg
fdivs
and
into
xlat
sbb
mov
mov
jg
pop
mov
or
sbb
fnstenv
jbe
mov
mov
mov
jmp
pop
and
push
gs
int3
jae
repz
call
add
or
xor
rolb
dec
xchg
sbb
sub
jl
pop
adc
fs
xchg
ss
jle
and
sbb
les
in
scas
outsl
fistps
psrlq
mov
shr
fwait
pop
stos
adc
movb
outsl
jg
xor
cmp
xchg
les
add
jge
dec
or
fwait
test
cmp
mov
int3
push
push
dec
and
sahf
cmp
out
sub
out
es
mov
out
std
test
sub
in
mov
mov
addr16
mov
mov
adc
in
lods
call
out
xchg
rcr
mov
test
fwait
dec
jb
cmpsb
pop
inc
std
push
out
das
hlt
test
sbbb
loope
nop
notl
in
scas
dec
dec
cli
pop
or
icebp
mov
fwait
and
adc
lock
inc
push
inc
sub
push
push
and
sbb
dec
adc
insw
outsb
ja
shlb
dec
fisttps
sub
adc
in
fcmovb
imul
sarb
inc
lds
popa
cmpsl
flds
push
push
fdivrs
cmpsl
data16
aas
adc
sarb
add
ljmp
popa
sub
and
out
out
push
loope
movsb
ja
xchg
push
xlat
cmp
out
int
out
and
pop
push
and
pop
cmp
jo
movsb
cmpsb
cwtl
pop
inc
arpl
mov
sub
in
dec
cltd
lret
nop
push
lret
dec
jl
shlb
dec
in
jmp
popf
insb
mov
in
mov
adc
test
cs
mov
repz
outsl
scas
movsb
jnp
ret
add
and
push
ret
sbb
xor
inc
fstp
dec
test
notb
int3
cltd
testl
xor
jns
pusha
mov
ret
js
rep
out
cmpsl
mov
adc
mov
je
insl
mov
lea
cwtl
ret
pop
and
cmpsl
insb
int
es
cmp
cmp
je
inc
cltd
shll
jo
push
jns
cld
push
mov
stc
push
inc
popa
dec
xchg
es
jl
mov
pop
aam
sahf
popa
mov
mov
aad
inc
pop
or
imul
and
inc
inc
pop
and
loop
push
aam
jecxz
mov
dec
mov
rcrl
pop
je
adc
mov
pop
inc
add
movsl
mov
fcomps
xchg
inc
addr16
adc
aam
and
push
mov
cltd
add
std
or
pop
sub
pop
mov
insb
mov
es
mov
and
ja
repnz
and
cmp
push
into
lret
pop
int3
jbe
dec
adc
imul
xor
xchg
std
jp
xor
cmp
fiaddl
lds
mov
in
aas
and
addr16
cmp
cltd
mov
sub
mov
incb
ficoml
sub
or
jbe
das
fsubl
push
lds
rorl
add
into
mov
add
stos
mov
notl
inc
mulb
sbbl
into
push
cltd
and
int3
push
mov
mulb
or
movsb
ss
insb
out
inc
popa
cmp
add
jne
cmp
push
aam
cmc
out
imul
pop
mov
mov
int
loopne
mull
lods
aad
dec
scas
xchg
mov
out
or
out
inc
mov
fisubl
cmpsb
out
mov
mov
mov
mov
insb
and
sbb
cs
jmp
push
daa
fucomip
cmp
add
jns
ds
cmp
pop
cmpsb
fbld
lods
inc
mov
sbb
mov
mov
repnz
jmp
ljmp
into
enter
xchg
je
data16
cmp
enter
or
sti
int
cmp
lahf
enter
fidivrl
sub
xor
pop
adc
mov
movsb
test
push
out
aam
add
cmp
lret
jns
bound
dec
sti
mov
add
and
jge
mov
cltd
mov
pop
sbb
cmpsb
cs
jb
imul
out
adc
js
aas
fsubrp
enter
addb
dec
push
sbb
xchg
sbb
shlb
or
idiv
or
out
cmp
xchg
and
jns
cmp
pop
xor
enter
mul
inc
xchg
fisubrl
add
stc
push
int3
nop
fimuls
ret
in
xchg
lret
and
dec
push
jb
or
lret
ret
test
mov
adc
mov
mov
mov
mov
ljmp
loopne
push
add
inc
mov
cmp
iret
cltd
jge
stos
xchg
aaa
ljmp
rorb
jmp
xchg
shrb
mov
xor
imul
push
movsb
inc
pop
lds
popa
shrb
xor
adc
adc
pop
lcall
pop
mov
jmp
xchg
jg
or
imul
cmp
insl
je
cli
sbb
mov
test
pop
or
leave
dec
dec
sbb
inc
xchg
addr16
cmpsl
mov
adc
fidivrl
inc
sub
cs
sti
jle
jno
or
into
add
hlt
mov
xchg
mov
push
push
mov
mov
ja
xchg
movsl
test
cwtl
lods
add
pop
into
int
jl
push
mov
frstor
cmc
adc
push
icebp
lcall
movsl
faddl
lahf
daa
cmp
and
add
fistps
les
lock
pop
loop
mov
mov
jecxz
or
adc
stos
scas
adc
or
scas
test
jmp
add
inc
jne
cmp
mov
pushl
jl
loopne
mov
stos
and
in
aas
lods
out
adcl
add
jg
icebp
inc
ss
test
push
mov
jg
dec
xor
shll
sub
pop
aas
adc
inc
sub
mov
pop
dec
pushl
xchg
sbb
lahf
cmpl
incl
pushf
out
test
cmp
ss
cmpsl
mov
cmpsl
leave
jbe
stos
ds
mov
pop
adc
xchg
enter
mov
add
lock
push
xchg
add
pop
fbld
inc
repnz
mull
adcl
or
jl
push
lret
jmp
sub
mov
sub
sbb
push
or
jmp
mov
xor
push
movsb
xor
dec
inc
adc
addr16
cmpsl
dec
movsl
pop
mov
nop
push
and
xchg
push
xchg
arpl
mov
scas
mov
rcll
test
into
movsb
mov
mov
push
es
xchg
cwtl
lret
and
cmp
mov
negb
enter
and
cs
icebp
dec
ds
xchg
push
sbb
xchg
xchg
movsl
cltd
loop
push
sub
mov
test
xor
ret
sbb
cwtl
pop
inc
lcall
std
pop
in
lcall
fnstsw
jne
xor
test
std
push
mov
jecxz
push
adc
cmc
and
fisttpl
into
jg
rorl
ljmp
or
daa
aas
sub
cmp
pushf
mov
mov
sub
out
mov
pop
pop
jne
sbb
xchg
inc
inc
outsb
push
and
jg
ss
adc
cmp
jbe
add
mov
pop
pop
test
lods
adc
insl
push
adc
out
xchg
pusha
dec
sbb
stc
mov
add
movsl
popa
sub
and
push
pop
in
sub
push
sbb
es
jne
lods
sub
or
cmp
cmp
std
decb
repnz
and
insl
mov
sub
lds
or
mov
addl
cmp
xchg
sbb
stos
cld
xchg
sub
out
and
test
ja
mov
popf
adc
push
xor
jae
inc
imul
addb
inc
mulb
push
xchg
cmp
lahf
pop
fwait
dec
push
lods
cmp
fwait
push
xchg
out
scas
sahf
pop
les
jns
push
mov
adc
ds
test
cmc
xchg
inc
cwtl
cwtl
hlt
jmp
jp
pop
shlb
scas
pop
stc
ret
cmc
fidivl
xor
notl
xchg
pop
jns
inc
out
aaa
sbb
mov
jg
pushf
adc
adc
insl
push
mov
or
insl
xchg
into
sub
ljmp
mov
fadds
adc
push
stos
aam
pop
lret
dec
je
aad
pop
leave
mov
cmp
pop
fs
pop
jo
dec
test
add
sahf
push
in
into
loop
jbe
fdiv
imul
pushf
mov
push
movsb
ljmp
xchg
mov
test
andl
cmp
sbb
pushf
mov
xchg
pop
push
lock
xor
mov
xor
repnz
mov
loop
movb
bound
push
shlb
shl
clc
dec
jl
adc
lret
push
fsubl
aaa
idivl
je
decb
xlat
xor
sbb
out
push
mov
cmpsb
jge
orb
repz
push
add
fsubrs
jo
sub
bound
iret
cmpsb
frstor
push
jbe
adc
push
jo
add
xor
mov
mov
adc
dec
mov
sti
sti
int
dec
dec
sub
mov
sbb
imul
mov
mov
mov
jl
jmp
or
mov
push
pop
pushf
and
dec
fcmovb
repnz
lahf
aad
call
jns
in
insb
cli
aas
push
mov
dec
and
mov
jg
dec
inc
pop
jnp
jo
adc
xchg
add
in
cltd
lods
stos
jmp
stos
pop
dec
subb
xchg
cld
push
cld
in
jecxz
aam
pop
cmp
jae
daa
adc
mov
and
lock
push
or
nop
imul
and
sahf
xchg
loop
in
fs
lret
pop
pop
jbe
lods
popa
cmc
or
sahf
inc
mov
lea
push
adcl
imul
or
and
mov
adc
in
xchg
dec
mov
jnp
xor
or
fistps
or
push
scas
pop
mov
imul
jl
lock
js,pt
dec
or
ror
mov
mov
and
ja
fmuls
inc
stos
lahf
jmp
jmp
clc
repnz
addr16
leave
xlat
testb
call
mov
adcb
push
arpl
mov
and
lea
cmp
stos
pop
or
jne
mov
in
in
jne
insl
fwait
arpl
jne
mov
push
add
test
push
sub
cmpb
adc
jp
rcl
jg
mov
ljmp
jne
fistpl
sub
inc
arpl
lret
js
test
push
mov
repz
stos
xchg
xchg
ja
jne
out
decl
adc
ljmp
clc
shrl
push
je
adc
inc
imul
inc
enter
xor
es
sub
mov
jnp
mov
adc
jp
jle
add
or
xor
push
jo
cs
and
imul
or
jo
mov
sub
jp
rorb
data16
jb
jl
pop
xchg
add
sbb
mov
cli
push
arpl
xor
ljmp
mov
repz
lods
outsb
or
push
jb
push
add
stos
sarl
shr
adc
adc
ja
icebp
mov
stos
lock
inc
mov
call
outsl
mov
push
ror
dec
or
out
lds
pop
inc
add
lods
vmovlps
cmp
mov
xchg
jecxz
dec
call
pop
rclb
xchg
test
lea
lods
loope
pop
adc
clc
loop
jg
add
dec
pop
scas
out
cmp
ffreep
cwtl
cmp
mov
add
loop
mov
orl
lret
pop
xor
and
add
pushf
leave
arpl
cmp
into
mov
pop
jno
daa
imul
hlt
lock
mov
push
sub
iret
and
sub
test
cmc
push
pop
call
mov
dec
outsl
lret
dec
mov
mov
adc
or
cmp
fdivrl
cmpsb
sahf
inc
inc
loop
in
divb
mov
sti
adc
incl
push
cmc
sub
outsb
mov
daa
iret
push
scas
cltd
fidivrs
jo
ljmp
xchg
xor
add
in
hlt
mov
rcl
cmp
add
lahf
addr16
daa
mov
cli
xchg
push
mov
inc
xlat
sub
pushf
pop
cwtl
stc
outsl
fbstp
imul
mov
inc
mov
dec
inc
iret
sbb
int
dec
or
jge
dec
into
sahf
sbb
shl
cmp
xor
sbb
push
ret
leave
jecxz
jno
es
mov
dec
in
lahf
push
pop
mov
xchg
inc
jo
pop
stos
cli
jno
lret
or
insb
push
sub
pop
or
les
fildll
add
lea
adc
stos
rcll
jmp
repnz
push
cmpsl
xchg
andb
loop
add
fiaddl
push
das
std
imul
cmp
jle
pop
mov
adc
mov
shl
ds
mov
pop
lds
sahf
pusha
fildl
cmp
cltd
dec
or
inc
enter
imul
mov
in
test
test
dec
arpl
adc
push
stc
cs
mov
aas
loop
and
negb
aas
in
mov
pusha
push
insl
jg
adc
pop
xor
inc
dec
adcl
hlt
cmp
dec
fsubrs
inc
mov
jge
cmpsb
les
xchg
mov
xor
ss
sti
rorl
dec
ja
or
jle
rorl
mov
ljmp
in
xchg
les
je
leave
in
fwait
aad
frstor
mov
mov
aad
stc
jle
cltd
cmpsb
add
xchg
loop
int3
aas
inc
jmp
data16
arpl
enter
mov
xchg
ret
lea
out
mov
enter
in
or
mov
mov
mov
cmp
cmp
mov
mov
inc
mul
mov
jmp
icebp
mov
cmp
sub
gs
mov
pop
mov
lods
fmul
jne
xchg
ljmp
adc
jns
mov
pushf
in
lods
and
int
dec
outsb
or
xchg
or
push
mov
clc
adc
pop
aad
enter
xchg
xchg
jnp
rolb
add
and
dec
sbb
stos
pusha
out
les
pop
jl
inc
mov
pop
and
lods
inc
sarb
test
pusha
into
cwtl
adc
in
test
aaa
push
jae
add
hlt
out
test
aam
mov
cld
or
loope
jb
or
ret
xchg
movsb
test
xchg
ds
mov
int
repnz
mov
mov
add
outsl
cmp
or
in
push
leave
cs
push
inc
add
mov
sti
inc
scas
sbb
jnp
aad
es
enter
test
dec
mov
add
in
out
aas
orl
sbb
dec
dec
inc
xlat
jo
push
popf
imul
iret
je
hlt
imul
lods
ret
cld
insl
rcrl
sbb
aad
addr16
xor
inc
imul
ret
int
nop
cmp
push
or
hlt
or
hlt
adc
fiadds
adc
stc
xchg
push
test
add
xchg
push
fdivl
xchg
std
push
xchg
out
push
mov
xchg
add
imul
int
mov
cmp
adc
mov
xor
fiaddl
pop
mov
mov
add
cmpsl
sub
mov
add
dec
notb
and
dec
aad
or
in
ficompl
fldt
ret
and
aas
movsb
pop
sbb
stos
and
cvtdq2ps
mov
ss
lock
xor
mov
movsb
loop
call
sbb
pusha
adcl
fiadds
gs
and
shll
aad
lods
inc
ror
shll
dec
loop
adc
pop
outsl
lds
jge
mov
xor
pop
in
jmp
sub
lods
xor
mov
sti
repz
pop
adc
shll
xchg
pop
test
xchg
bound
or
pop
sub
lahf
mov
inc
je
dec
push
cmp
popa
iret
pop
inc
mov
jno
sbb
cmpsl
fimull
data16
shl
xor
push
push
inc
fsubrl
daa
movsb
fcomi
jae
daa
testl
add
stos
es
dec
arpl
inc
imul
xchg
daa
xchg
test
pusha
mov
dec
fildl
add
fs
add
push
pop
imul
mov
dec
into
mov
test
mov
pop
mov
std
pop
popa
lret
daa
pop
jns
jg
sub
cli
and
loope
jae
jnp
pop
nop
cli
divb
rorl
cli
jnp
inc
int
jns
mov
add
movsl
pushf
inc
cld
xlat
cs
rcll
pop
out
insl
les
std
sub
dec
insl
std
or
pusha
es
pop
rdmsr
mov
add
mov
push
mov
sbb
add
aaa
sbb
or
mov
adc
or
cmpsl
sti
es
call
out
sbb
mov
push
clc
mov
std
jnp
pop
gs
xchg
aaa
icebp
adc
fistps
fcomi
sbb
mov
decl
mov
pop
sbb
mul
ror
outsl
xorl
ficoms
inc
aas
xchg
pop
xor
lods
std
pop
js
cmp
mov
sbb
test
xchg
mov
int
ljmp
push
test
push
inc
jbe
popa
jae
push
and
and
outsl
cmpl
jg
pop
scas
mov
sbb
sub
shrl
outsl
sbb
ljmp
aam
std
imul
pop
lods
aad
ds
mov
lahf
addr16
scas
aad
and
push
mov
cmp
xor
ret
cmp
xchg
scas
test
adc
xchg
loopne
jbe
jmp
dec
nop
cmp
in
inc
or
int3
sub
inc
lahf
mov
data16
mov
icebp
and
leave
jmp
or
inc
adc
xor
lods
xor
and
movsl
in
or
out
lahf
mov
xor
cltd
dec
sbb
mov
cmc
xorl
popf
add
pop
mov
sti
xorl
out
stos
sbb
xchg
jae
jmp
adc
out
mov
xrelease
and
arpl
push
jge
arpl
cli
sbb
jb
cld
nopl
stos
les
or
dec
push
push
mov
dec
ret
and
inc
testb
jns
sub
inc
or
inc
xchg
jno
call
cs
mov
gs
pop
and
cmc
iret
jb
or
inc
sub
adc
or
cld
jp
icebp
mov
push
cmp
xchg
int
int3
cwtl
lock
mov
fisubl
bound
dec
insb
pusha
lcall
push
gs
cmp
fwait
into
push
cmpsb
shlb
adc
mov
stos
xchg
std
push
shll
xchg
aas
gs
add
xchg
iret
push
sbb
inc
mov
test
sub
rcrl
test
sbb
push
test
out
hlt
loopne
xor
dec
push
testb
jge
jmp
mov
call
and
ja
fistps
roll
or
sub
cmp
out
ret
mov
cmpsb
add
in
inc
testl
cmp
or
xor
jmp
ret
in
cmp
fnstenv
out
lret
add
inc
addr16
and
inc
cs
negb
push
jnp
cmp
jg
repz
js
hlt
and
sbb
ficompl
pop
adc
push
dec
pop
std
jae
mov
hlt
mov
inc
es
cmc
jmp
aad
rorl
jmp
js
aas
jns
js
and
xchg
adc
add
lock
jae
scas
xchg
outsb
cmp
enter
sub
cmp
sub
pop
dec
pop
stos
dec
divl
lock
dec
inc
rcrl
or
push
cmp
icebp
imul
ds
jmp
jb
ss
iret
insb
clc
pop
sub
jge
mov
mov
pop
mov
inc
dec
sub
sbb
fwait
sub
sbb
and
jle
int3
pop
pusha
cmp
xchg
push
fldcw
sub
vxorpd
test
mov
xchg
lret
inc
inc
jle
xor
jo
ljmp
leave
icebp
jle
cmp
lds
mov
inc
sub
mov
adc
cmp
xlat
cmp
mov
dec
or
popf
mov
sub
mov
jns
rolb
mov
call
xchg
xchg
sti
cmp
mov
hlt
scas
inc
repnz
fstpt
repnz
fcompl
cmovnp
jl
lahf
xor
xchg
dec
loop
adc
jo
sbb
loop
mov
pop
in
xchg
mov
push
jg
mov
xchg
jns
xor
and
jmp
xor
jp
fistl
hlt
cmpsb
stos
pop
in
mov
xchg
inc
aaa
mov
lret
int
mov
fwait
popf
sbb
lods
ds
aas
sti
lods
mov
push
sti
adc
sbbb
stos
add
mov
add
xor
shll
cld
stc
cmc
lock
std
sbb
es
push
mov
xor
fimull
dec
shl
adc
pop
lods
dec
enter
repz
or
mov
je
jl
or
and
test
push
into
push
adc
add
mov
mov
adc
sbb
sub
stos
cmc
lret
daa
push
cmp
nop
data16
push
sub
cmp
jl
xchg
mov
popa
sarb
jbe
fisttpll
and
sub
add
outsl
cmp
inc
or
repnz
lods
push
mov
daa
cld
add
jecxz
mov
out
pop
mov
insb
lret
jo
fwait
adc
pop
sub
or
mov
lea
jo
inc
push
aam
add
xor
sbb
cld
cli
neg
pusha
xor
sbb
cmp
or
push
inc
or
xor
sti
loop
sbb
xchg
les
test
mov
jle
xor
icebp
mov
or
scas
ss
xchg
in
xchg
mov
dec
test
cmp
mov
jne
insb
sbb
xchg
scas
xchg
xchg
cmpl
adc
xor
push
pop
test
cmp
insb
loopne
mov
jns
push
or
pop
jbe
push
inc
loope
in
cmp
call
push
mull
mov
bound
mov
insl
faddp
jb
das
loop
fs
push
xor
push
es
data16
mov
loope
cmp
pop
into
inc
add
js
mov
ja
mov
mov
repz
ljmp
fisubl
int
bound
aad
xchg
sbb
out
add
fldcw
jbe
cmp
out
clc
aas
pop
test
in
push
lahf
jmp
and
cmp
inc
inc
adc
popf
and
loope
sbbl
mov
sti
sbb
std
mov
shlb
push
xchg
sbbb
out
push
ffreep
sbb
xlat
mov
subl
andl
xor
push
push
in
cmp
add
insl
std
push
push
idivl
sub
mov
xor
xor
jecxz
mov
xchg
test
movsb
cld
icebp
shrl
aam
sbb
mov
xchg
repz
in
mov
into
insl
gs
in
push
mov
in
xchg
jnp
pop
aaa
out
jge
fs
and
fwait
sub
repz
enter
lahf
sub
dec
cs
mov
inc
adc
leave
mov
and
push
inc
cli
cmp
test
xor
sbb
subb
pop
pop
cmpsb
ftst
mov
dec
ljmp
mov
xor
mov
jo
repz
push
xchg
mov
push
or
scas
loope
push
inc
push
hlt
push
aas
or
sbb
insl
or
sub
and
out
iret
pop
idiv
in
ss
test
pop
mov
repnz
xchg
push
dec
sub
fisttpll
sub
mov
dec
add
push
mov
mov
lock
addb
xchg
iret
pop
sahf
xchg
gs
add
xchg
push
incl
aas
imul
ljmp
push
ret
je
or
daa
mov
xor
dec
stc
cli
cmpsl
test
xchg
cmp
dec
test
clc
or
aas
popa
notl
inc
pop
aam
pop
test
test
daa
insl
sbb
xor
push
movsl
scas
xor
or
push
inc
push
add
mov
and
jbe
hlt
lods
je
jne
cmp
call
psraw
pusha
je
dec
leave
push
sbb
sub
mov
pushf
fistl
and
and
shrl
clc
and
movsb
insl
or
arpl
mov
test
jno
into
jne
inc
sbb
lcall
dec
pop
jmp
mov
inc
lds
cmpsl
sarl
jmp
pusha
and
ret
lds
pop
xor
das
mov
xor
scas
xor
push
dec
insl
hlt
cmp
lods
fdivs
js
aam
inc
scas
ljmp
fwait
and
ja
sub
ja
and
cltd
and
dec
add
test
shll
jb
cmp
call
addr16
cltd
shlb
or
scas
sub
mov
paddq
mov
sahf
xor
icebp
jb
ja
add
mov
and
inc
xchg
sbb
xchg
popa
out
dec
adc
adc
jge
cld
cmc
xchg
mov
sbb
inc
fidivs
add
jge
cmp
xchg
push
loopne
stc
mov
aad
sahf
les
push
push
imul
scas
push
sub
xor
je
sbb
adc
das
mov
mov
and
mov
out
xlat
xor
je
dec
jb
pop
sti
mov
adcl
rorl
mov
jno
push
pop
sbb
das
sub
pop
aad
push
jmp
adc
mov
dec
pop
sub
jb
mov
inc
mov
cmp
inc
std
xchg
dec
pushf
sub
clc
xchg
in
shl
push
cltd
sbb
xchg
fwait
mov
inc
movsb
cmpsb
ret
pop
jle
loope
out
repnz
incl
stos
push
sbb
sbb
leave
es
out
sbb
iret
imul
xchg
out
arpl
inc
movsb
pusha
mov
ror
mov
adc
xchg
fcmovb
popl
mov
stos
add
mov
mov
inc
movq
inc
add
rclb
mov
aaa
push
sbb
dec
pop
adc
enter
andl
sbb
cmpsl
sti
fsubs
sbb
and
push
pop
inc
loop
mov
movsb
adc
xchg
fdivs
lretw
lcall
mov
out
daa
dec
push
addl
in
dec
mov
loope
mov
mov
icebp
jb
mov
mov
mov
mov
ds
xchg
stc
pop
test
pop
jo
mov
push
in
or
dec
xchg
pop
lret
xor
rcrl
test
loopne
mov
lods
imul
incl
sbb
xor
aam
loope
sbb
inc
int
je
in
jmp
test
add
and
pusha
in
cli
push
cwtl
lods
mov
out
sarl
inc
push
enter
xchg
sub
jno
push
dec
jb
inc
popa
fcmovb
pusha
pop
in
adc
and
stos
in
jo
pop
cmp
nop
je
pop
mov
lcall
xchg
iret
pop
nop
daa
repnz
push
sbb
pop
lcall
sarl
xor
in
cmpsb
inc
cli
adc
xor
cmp
ret
jle
jo
sar
lcall
dec
bound
mov
mov
sar
aas
fnstenv
lret
lret
rcrb
jns
lds
xor
push
jle
fmul
adc
outsb
outsb
pop
and
dec
xor
xchg
sub
inc
into
into
adc
jbe
or
out
mov
cltd
fs
mov
in
ret
stc
call
test
mov
mov
sahf
sbb
jbe
gs
popf
fdivrl
loop
fistpl
sbb
sub
stc
cmp
mov
jno
and
ficompl
cmp
mov
call
and
test
and
sub
jae
andb
icebp
cmpsl
jle
mov
leave
roll
sub
lds
push
xor
scas
sub
pop
push
dec
mov
call
aam
pusha
sbb
jne
std
out
xchg
cmp
sub
cmovp
cmp
push
xor
out
fimuls
idivb
cmp
jle
loope
icebp
ss
and
xor
mov
dec
cld
and
out
lcall
shrb
repnz
mov
popa
aaa
add
mov
mov
pop
fcmovnu
repnz
sub
insb
popf
arpl
mov
movsl
mov
mov
adcl
xor
aam
pushf
scas
pop
cmpsl
jno
pop
subb
inc
mov
or
stos
push
adc
mov
lret
aaa
mov
sarl
adc
loop
cmpsb
lock
outsl
sbb
inc
adc
hlt
int3
mov
pop
sub
xchg
leave
adc
es
subb
imul
roll
ss
pop
mov
data16
pop
bound
mov
pop
cmp
add
lods
sub
mov
sub
out
push
mov
fisttpl
push
mov
dec
xchg
jecxz
xchg
cmp
cltd
mov
hlt
xchg
sbb
les
cs
test
lds
and
fwait
scas
in
jmp
and
add
cwtl
cmp
aad
in
xchg
cmp
mov
mov
xor
cli
adc
fcomps
jmp
or
into
push
sub
outsb
lods
mov
mov
push
mov
out
add
adc
adc
mov
or
xchg
and
add
add
pushf
mov
jbe
imul
push
cmpsb
out
movsb
cmpl
jl
ds
add
dec
loopne
sub
mov
xchg
rorb
dec
xor
push
push
xchg
sub
fsub
xchg
in
push
mov
mov
and
xor
add
mov
scas
and
dec
imul
sbb
or
pop
pop
pop
cmp
shll
pushf
sbb
scas
xor
push
in
rclb
push
pop
sbb
leave
xor
mov
fdivrp
inc
lock
stos
mov
test
or
add
lods
dec
push
test
mov
in
loop
mov
int
pop
andl
push
xchg
icebp
outsl
ljmp
ret
cmp
xor
xchg
jmp
fisttpl
rcrl
pop
jno,pn
test
sbb
dec
mov
push
shlb
cli
adc
pop
test
or
inc
outsl
inc
dec
xor
mov
jnp
movsl
scas
inc
push
leave
fldenv
xor
sahf
xchg
dec
stos
in
int3
scas
xorl
fisubs
scas
js
jge
dec
mov
add
cmpb
mov
outsl
xchg
lea
sub
nop
pop
arpl
mulb
cmp
sbb
in
gs
xor
inc
jmp
stc
outsb
and
push
repnz
mov
mov
pop
sbb
out
dec
xor
out
mov
movsb
mov
repz
cmpsl
sbb
imul
fmull
test
mov
sti
movsb
lods
inc
testl
rcrb
push
cmp
test
adc
cmpsl
jno
out
jo
adc
adc
iret
lock
xchg
adcl
mov
lds
push
jne
movsl
repz
pop
adc
mov
sahf
jnp
fildll
add
jp
dec
arpl
cmpsb
fildll
dec
push
fsubr
push
mov
shrl
mov
cmp
cmp
in
pop
mov
sbb
push
and
mov
ret
loop
out
pop
or
aaa
in
in
outsl
pushf
adc
inc
push
pop
jg
push
push
mov
xchg
mov
push
cld
aas
outsb
xlat
es
jno
adc
repz
xor
fsubs
in
das
mov
fsubp
filds
dec
les
scas
inc
insb
mov
add
dec
mov
nop
jmp
cltd
xor
ss
imul
sahf
and
push
fldt
or
adc
movsb
in
add
mov
mov
push
aaa
cld
add
stc
cwtl
ljmp
mov
lods
int3
dec
mov
push
jg
mov
ss
daa
in
into
mov
dec
hlt
dec
mov
dec
push
jne
popf
jge
push
outsb
mov
test
sbb
mov
pop
cmp
adc
aad
mov
pop
insl
cwtl
aad
mov
and
cltd
push
mov
imul
sbb
sub
pop
inc
int3
pop
insb
mov
jbe
test
lea
roll
cmp
dec
mov
jno
inc
ret
lret
dec
out
fsubs
push
stos
push
jne
push
or
adc
imull
aad
push
sti
adc
inc
lea
mov
pop
push
xchg
inc
jnp
inc
lock
addr16
dec
mov
cltd
push
shr
add
cli
xor
test
addb
pop
cmc
in
pmulhuw
bnd
xor
repz
push
dec
pushf
insb
mov
cmp
into
fdivr
mov
xchg
lods
hlt
inc
adc
shrb
sbb
and
cmp
cltd
xor
adc
xchg
and
loopne
or
arpl
xor
rolb
call
pop
mov
pop
mov
enter
fadd
and
sub
cmpsb
aaa
and
repz
out
rcl
xlat
sub
dec
jnp
stos
push
sar
xor
cld
mov
mov
mov
testb
xchg
xor
adc
pushf
xchg
inc
sub
icebp
mov
scas
fiaddl
sbb
cwtl
loop
sbb
push
sbb
or
shr
scas
mov
adc
jno
data16
and
mov
das
mov
fisubl
cmp
mov
lret
mov
xchg
addr16
lret
xchg
jmp
inc
cmp
pushf
vaddss
adc
cs
repnz
xchg
jne
jns
push
adc
mov
les
mov
xor
sbb
stc
xchg
bound
xor
hlt
inc
or
dec
pop
orb
adc
gs
or
and
rcrl
or
int3
add
stos
insl
jp
mov
dec
in
inc
inc
out
cmp
ljmp
xchg
mov
addb
mov
ret
and
mov
imul
or
jne
imul
insb
mov
scas
nop
inc
jb
fimull
push
rcrl
enter
pop
out
push
stc
inc
adc
xchg
cmp
jae
cmc
fmull
jmp
adc
int
insl
push
mov
xchg
ljmp
mov
icebp
mov
fwait
je
lahf
lcall
cwtl
dec
roll
test
mov
sahf
and
or
and
int3
xchg
adc
ja
pop
push
cmp
or
inc
movl
fmulp
leave
inc
imul
dec
cmp
push
imul
pushf
rorl
iret
sub
inc
mov
pop
sti
inc
fidivrl
je
aad
icebp
and
mov
xchg
sub
aaa
xchg
sti
subb
les
rcrb
shr
lcall
push
mov
push
fs
dec
es
inc
out
adc
test
pop
mov
xchg
nop
inc
lods
ljmp
mov
pop
mov
loopne
cmp
dec
push
rcll
rcrl
sahf
jae
insl
mov
mov
xchg
or
push
jmp
sbb
sbb
jle
jmp
dec
mov
xchg
arpl
xor
lcall
loop
in
inc
or
dec
repz
stos
cmp
push
leave
ja
or
data16
jne
xor
outsb
aaa
mov
pop
lahf
pop
shrl
test
add
sahf
or
inc
xchg
in
and
movsb
in
sbb
repnz
scas
imul
sbb
mov
pop
dec
shrb
cmc
insb
ret
test
add
cmp
push
dec
xchg
js
cmp
add
test
sub
and
insl
stos
movsl
cli
mov
out
pop
cmp
jo
cmp
icebp
imull
in
je
mov
gs
and
sbb
or
xchg
jnp
push
jb
cmp
pop
clc
movsl
enter
xchg
dec
jge
call
push
lods
push
sbb
cmp
cmp
ljmp
xor
out
daa
and
arpl
cmp
adc
inc
cld
sarb
pop
fisttpll
lods
call
mov
js
pxor
out
sbb
ds
xor
mov
pop
aaa
dec
xor
iret
test
std
sbbb
popa
xorb
test
fs
aam
fdivrp
dec
imul
repz
movsl
xchg
push
mov
xlat
les
mov
push
std
adc
cmp
scas
pop
scas
mov
mov
insl
mov
loop
mov
aam
sahf
inc
pop
jl
in
ljmp
lock
and
lods
into
sub
cmpsl
loope
fistps
xor
sbb
jo
cmpsb
or
stc
pop
aas
dec
je
pop
sub
scas
push
mov
imul
mov
push
clc
test
jge
xor
dec
pxor
xor
cmp
sbb
movsb
imul
test
push
leave
ja
or
mov
mov
inc
js
fdivs
stos
in
xor
adc
sbb
movb
and
mov
and
cmpsl
sub
or
call
add
pop
les
dec
sub
ds
push
pop
push
imul
jmp
adc
mov
push
sub
and
icebp
aam
add
arpl
mov
fistpl
enter
in
test
and
negl
fimuls
insl
inc
scas
or
jae
test
shl
inc
sarb
std
mov
into
cmp
pop
xchg
and
sbb
mov
loopne
xlat
loope
jp
cmp
xor
stos
push
jb
inc
sbb
push
ret
mulb
call
xchg
stos
insb
repz
mov
loopne
insb
mov
add
popf
sub
lods
bound
add
pop
out
sbb
js
xchg
test
and
fidivrl
arpl
mov
push
xor
enter
pop
lret
sar
sub
dec
inc
sbb
sti
add
jb
xor
stos
test
inc
dec
loopne
fmulp
out
pop
cmp
dec
mov
mov
gs
adc
pushf
dec
xchg
mov
add
mov
add
popa
nop
adc
sbb
mov
jae
data16
mov
mov
pop
mov
sarl
insl
sbbb
push
cwtl
cmp
fstps
leave
int
pop
aas
mov
sti
add
adc
push
push
mov
fwait
int
jne
rcll
repnz
mov
cs
add
push
xchg
adc
inc
movsl
movsb
add
lods
int
mov
sbb
cmpsl
xchg
mov
in
inc
push
imul
into
push
hlt
jb
and
xchg
outsl
sub
insl
jb
popf
sub
ds
pop
bound
int3
xor
in
pop
xor
inc
xchg
iret
mov
insl
and
subl
mov
aam
scas
pushf
jbe
dec
js
xchg
mov
btr
ret
add
dec
lods
shrl
scas
mov
jb
inc
pop
call
fnsave
pop
or
xor
ds
mov
movsb
lahf
jne
mov
out
sub
push
negl
aam
cmp
mov
mov
sbb
pop
mov
out
add
pop
xchg
sbb
imul
mov
pushf
test
into
loopne
add
mov
mov
test
loopne
cmp
sub
test
sti
cmpsl
push
pop
call
sbb
mov
xor
dec
add
or
or
in
sub
ds
push
loope
iret
sbb
mov
shl
xor
xchg
push
iret
stc
sbb
fstl
xor
jmp
cwtl
mov
jno
add
mov
fiaddl
xchg
push
jle
incl
or
dec
fidivrl
jo
testb
mov
cmc
push
out
mov
rcr
aaa
stos
push
outsl
jb
ret
inc
icebp
mov
test
aaa
push
rorl
or
outsb
js
add
sub
push
cmp
mov
es
inc
adc
adc
shll
jge
pop
adc
imulb
adc
repnz
ljmp
test
push
subl
in
cmp
mov
xchg
push
adc
jmp
sbb
adcl
sub
lods
test
sub
test
dec
inc
mov
inc
pop
or
shll
jg
jmp
inc
imul
mov
add
pop
je
decl
sbb
sbb
outsb
cmp
cmpps
xchg
mov
add
mov
movsb
cld
xor
out
push
jnp
inc
jns
sbb
xor
dec
aam
and
jbe
in
push
imul
mov
mov
sub
aam
enter
negl
loope
movsl
sbb
cli
lret
push
pop
cs
dec
or
cmp
cld
int
add
test
inc
pop
cmp
pop
or
pop
add
jle
mov
add
xchg
lds
test
mov
push
jb
pop
daa
sti
mov
gs
inc
rcrb
push
inc
aas
and
jns
add
ret
adc
inc
movsl
mov
xchg
inc
idivl
xchg
leave
rcr
xorl
leave
cmp
mov
add
movsb
lahf
loopne
cmpsl
mov
cmpsb
ss
push
gs
call
mov
in
data16
loopne
movl
mov
fdiv
or
lcall
in
mov
jne
dec
mov
mov
dec
sahf
outsb
shr
push
call
adc
cli
fistpl
ljmp
sbb
xchg
aas
mov
inc
adc
xor
outsb
push
scas
loopne
jle
adc
adc
push
push
out
sbb
je
enter
push
mul
mov
cwtd
sub
jle
andb
xchg
sahf
lret
lods
push
shl
lret
inc
pop
pop
popa
iret
lcall
cltd
inc
mov
dec
lret
sbb
mov
addr16
movsb
dec
fsts
add
outsl
sti
cmc
out
mov
sbb
mov
and
push
pushf
loope
mov
xchg
mov
pop
pop
loope
mov
mov
aaa
mov
add
inc
repz
nop
aam
mov
ltr
ficompl
stos
sbb
mov
mov
mov
roll
outsb
sub
and
imul
jnp
cmpsb
fldcw
push
bound
sbb
inc
mov
sub
call
stc
outsl
adc
iret
sub
xor
pop
and
lcall
arpl
xchg
xor
outsb
popa
outsl
push
xor
aam
arpl
in
xchg
cmc
add
cmp
les
or
ret
imul
in
cwtl
daa
ds
out
mov
sti
dec
addr16
mov
aas
pop
mov
push
pop
cmp
jle
daa
iret
in
clc
jg
ljmp
xlat
lfs
jae
mov
scas
mov
inc
fdivrl
pop
clc
mov
or
mov
test
mov
mov
aas
xor
add
ret
xchg
cmc
out
testb
movsl
loope
pusha
movsl
pop
sbb
mov
mov
sbb
pop
lds
clc
push
pop
sbb
stos
lods
rorb
mov
or
push
sub
mov
pop
mov
push
add
mov
sbb
shrw
in
shrl
push
mov
repz
jns
cwtl
cmp
cmp
dec
and
pop
pusha
pop
mov
cmc
and
jo
aad
nop
cmp
std
data16
ja
xor
shlb
mov
mov
mov
pushf
sbb
outsb
andl
cmp
fwait
xchg
or
stos
pop
iret
adc
jne
fadds
fisubrs
push
mov
add
and
and
mov
mov
cmc
out
cld
pop
sub
push
scas
sub
sti
jmp
adc
push
push
sub
inc
es
scas
out
pushl
jne
js
xor
cltd
xchg
pop
push
pop
or
add
leave
pop
xlat
xchg
daa
test
push
or
inc
sub
sbb
movsl
in
jbe
rcll
in
addr16
dec
fs
mov
mov
into
sub
addb
fmuls
std
jo
adc
insb
aas
adc
rcll
rorl
and
jmp
addl
push
sarb
mov
dec
sbb
mov
and
pop
movsb
lods
mov
ror
inc
shll
mov
xchg
call
adc
hlt
cwtl
jl
inc
pop
ret
scas
out
sub
adc
mov
shll
fistps
xor
fs
jmp
adc
mov
mov
adc
fwait
sub
lahf
movsb
gs
rol
jo
addb
push
add
mov
test
push
sub
add
dec
sub
cmp
jge
movsb
adc
or
scas
hlt
push
test
inc
mov
mov
loopne
sbb
daa
jmp
gs
ret
push
jmp
movsl
nop
adc
xlat
xchg
jmp
pop
cmpsb
bound
hlt
loope
sub
loope
fsubrs
popf
xor
jne
mov
pusha
pop
push
mov
bound
sbb
nop
sahf
sub
ror
sub
inc
movb
push
out
mov
rcll
inc
aam
outsb
imul
int3
out
push
jne
loop
arpl
fwait
paddd
jo
lcall
adc
lret
mov
mov
jmp
jl
mov
or
dec
mov
hlt
push
dec
cli
jge
xor
aas
leave
push
mov
cmp
loopne
in
in
idivb
adc
pop
arpl
push
adc
mov
or
in
insb
in
imul
lret
dec
ds
pop
jno
mov
jp
inc
jp
daa
aaa
push
jg
xor
fisttpl
xchg
lret
les
cmp
sub
xor
ret
imul
push
jl
in
jns
fbstp
push
or
rcrl
dec
mov
xchg
and
lcall
shlb
mov
pop
fiaddl
push
push
sahf
xchg
je
and
sbb
aaa
mov
or
sbb
ja
daa
push
mov
or
adc
lds
bound
sub
loope
das
dec
pop
mov
jmp
adc
icebp
push
rclb
dec
push
fstl
popa
out
mov
je
push
cmpl
in
mov
mov
jl
jge
cmp
pop
cvtdq2ps
outsl
pop
inc
mov
push
xchg
cmc
push
lock
rol
scas
sub
adc
inc
dec
pop
in
loopne
or
addr16
test
adc
add
adc
and
leave
or
mov
inc
stc
add
into
xchg
adc
sub
mov
addr16
inc
mov
int3
xchg
aaa
popa
inc
lods
mov
cltd
movsb
sub
subb
jecxz
test
fdivr
jno
fs
sub
je
cmp
inc
out
and
out
push
jbe
cmp
jecxz
cmpsl
movl
xlat
aam
popf
addr16
cmp
sbb
test
leave
add
scas
or
bound
inc
xor
sbb
aas
enter
std
pop
cwtl
push
fmulp
mov
addr16
out
or
dec
pop
leave
jecxz
mov
fimuls
xchg
icebp
jnp
jno
jecxz
stos
sbb
in
xor
inc
mov
decb
push
xchg
fsubrl
sti
lcall
std
outsb
push
pop
cmp
repnz
adc
into
jl
mov
sbb
aad
fnstenv
ret
rorb
jmp
insl
rol
repz
movsbl
pusha
fisttps
pop
aad
xchg
lret
lods
push
jae
sbb
lea
iret
jl
aad
add
imul
fdivl
mov
out
and
dec
lret
pop
adc
or
mov
mov
je
xchg
test
dec
or
mov
scas
jae
fs
stos
xchg
cs
in
sbb
xchg
jg
cltd
imul
lds
mov
jg
cmove
fs
adc
rclb
ror
outsb
sbb
inc
xchg
mulb
sbb
lds
enter
and
pop
jbe
cmp
stos
pop
fwait
sub
cmp
push
ds
xchg
push
dec
or
test
mov
roll
or
sub
push
insl
mov
dec
lahf
or
nop
inc
sub
xlat
in
xor
sbb
sub
imull
scas
or
mov
inc
cs
or
cmp
scas
adc
push
loop
mov
aaa
mov
add
sbb
nop
orl
in
add
in
push
jae
ss
add
xor
cmc
jle
push
scas
jae
xor
push
mov
jecxz
fs
xchg
sub
jnp
xchg
mov
enter
dec
lahf
int
sbb
mov
jmp
jae
push
in
jle
or
dec
into
test
lods
call
arpl
movsl
in
mov
add
mov
stos
popf
pop
gs
cli
idivb
scas
mov
out
out
xchg
xlat
adc
aam
inc
adc
or
cwtl
adc
and
fwait
mov
xor
inc
repz
lock
in
jle
pop
repz
sbb
je
inc
push
fldenv
inc
or
xchg
std
popa
ss
addr16
std
mov
adc
mov
adc
int
repnz
pusha
push
sub
push
sub
mov
fidivl
sub
and
subb
clc
mov
lds
push
adc
inc
add
lcall
cli
lds
pop
jle
xor
int
scas
sbb
jno
or
sub
std
xchg
cmp
scas
sti
daa
and
int
adc
lahf
into
in
xchg
jecxz
cmp
inc
lret
leave
ret
jp
xchg
jb
adc
shl
js
mov
scas
adc
jp
inc
sub
cs
ret
mov
cld
pusha
sbbl
movsb
xchg
je
inc
push
or
add
fbld
jns
ret
mov
in
shll
adc
ss
gs
cltd
add
aaa
pop
sarb
pop
ds
mov
push
addl
cmp
pop
xchg
es
dec
mov
imul
out
adc
sub
jecxz
sub
adc
inc
pop
add
push
mov
ljmp
sbb
stc
cmp
dec
scas
ret
call
mov
js
ljmp
push
add
push
lock
popa
lods
bound
scas
fstpt
cwtl
xchg
lock
mov
or
xchg
dec
rol
xlat
sub
fs
dec
out
inc
ffree
push
push
sbb
or
stos
push
in
mov
xchg
mov
mov
cli
add
lret
pop
or
outsb
mov
rcr
lods
ja
sbb
dec
ret
nop
push
inc
cmp
xlat
out
clc
jns
repnz
dec
aad
aam
sbb
ret
int
decb
pusha
xchg
inc
into
mov
adc
sub
lods
syscall
orb
push
shrb
mov
mov
add
nop
jb
aad
out
mov
shlb
aaa
lods
mov
int
push
inc
push
ret
pop
test
inc
pop
cmpsl
mov
dec
das
inc
sub
int
fucomp
cmc
or
adc
pop
cmp
std
popf
and
xor
mov
jo
bound
push
xor
faddl
insb
aas
or
int
pop
ret
xor
or
mov
xchg
in
loop
ja,pn
xlat
inc
sbb
xchg
mov
fistps
push
inc
stc
mov
push
rcrb
cmpsb
jae
jl
pop
xor
and
or
dec
jnp
and
adc
stc
scas
mov
adc
xchg
push
mov
xor
xchg
cli
or
ja
icebp
aaa
xchg
lods
jns
mov
repz
pop
pop
push
nop
inc
sub
les
rcr
pop
cmp
and
test
jno
or
and
cs
add
pop
mov
sbb
xor
imul
cmp
sub
cltd
lahf
push
jge
mov
push
bound
stc
cmc
pop
std
loop
int3
outsl
mov
mov
lcall
xchg
add
rolb
jp
adc
test
das
xchg
rol
dec
in
sbb
dec
jle
push
xor
add
scas
aam
pop
insl
jmp
pop
jae
leave
inc
pop
ja
shrb
pop
sub
leave
in
xchg
inc
jbe
pop
out
pop
stos
fwait
lret
mov
add
mov
sti
pushf
cmp
mov
stos
xor
out
mov
pop
or
lret
cmc
shll
sbb
fsubrl
mov
cmp
imul
movsl
and
sub
add
adc
sti
sbb
aam
ja
js
div
mov
jnp
push
incb
jg
cmp
xor
jnp
les
adc
jbe
xor
in
mov
mov
cmpl
aaa
dec
cmp
rcrb
push
mov
sti
cli
lret
mov
sbb
cmp
jno
test
imul
or
dec
sbb
enter
sbb
jge
outsb
mov
seta
cwtl
rcrb
inc
xor
lods
add
sub
pop
mov
push
stc
popf
xor
test
mov
lret
jecxz
and
repz
ror
xchg
mov
inc
leave
add
sub
adc
mov
xor
out
add
mov
icebp
jle
ljmp
and
hlt
leave
dec
sbbl
scas
scas
imul
jb
jo
mov
sub
sub
jg
push
jle
hlt
and
mov
scas
push
lods
sub
or
push
xor
test
ss
inc
es
inc
jmp
mov
xchg
and
dec
inc
cmpsl
adc
ss
adc
adc
es
outsb
mov
mov
lods
push
lds
sbb
mov
mov
movsb
sub
ja
pop
add
and
mov
repz
xchg
jp
movb
push
sti
xlat
ret
xlat
lret
cli
pop
pop
mov
push
hlt
jno
pop
adc
dec
bound
lods
mov
inc
sub
dec
fwait
pop
insb
mov
dec
call
add
jmp
shll
mov
dec
mov
pusha
int3
les
fcmovu
gs
dec
push
loopne
push
push
shll
sbb
jp
dec
dec
add
es
cwtl
cmp
jle
pop
das
mov
mov
jg
in
pop
andl
mov
mov
test
dec
cmp
mov
sbb
cmpsb
movsl
neg
pextrw
jp
test
scas
cmpsl
daa
loop
mov
jecxz
mov
jne
loope
sbb
mov
outsb
or
jge
add
sub
jmp
in
inc
jo
decl
mov
mov
call
xor
inc
ja
call
xor
cld
clc
scas
inc
pop
mov
mov
fbld
bound
aaa
mov
mov
mov
outsl
bound
jl
xchg
cld
cmp
rclb
mov
mov
out
cmp
inc
mov
mov
fcomp
pop
subl
pop
push
fdivrl
inc
sub
inc
ret
jne
fisubrs
ret
cli
bound
xchg
movsl
int
cmc
pop
in
and
cmpsb
movsb
pushf
mov
sub
pop
add
stc
pusha
jmp
add
jmp
sti
and
data16
fmuls
shrl
mov
outsl
dec
jmp
add
sbbl
sti
sbb
ljmp
add
int3
fs
subl
gs
insb
sub
pop
imulb
mov
cwtl
nop
cmpb
in
mov
jg
sbb
pop
mov
lds
or
stos
dec
mov
add
outsb
addr16
in
rolb
ret
movsb
js
cwtl
xchg
popa
mov
mov
jle
into
push
outsl
push
dec
inc
add
aad
push
fcmove
xor
inc
daa
inc
ss
xor
xlat
pop
arpl
jb
jl
pop
pop
out
clc
pop
push
mov
test
add
mov
jl
xchg
lret
jbe
inc
inc
jns
icebp
adc
xchg
jb
mov
popa
mov
aad
cmp
lret
mov
sti
cmp
repnz
es
rcrl
stc
stos
bound
push
xchg
cmpb
ret
push
xchg
cmp
lods
sbb
cwtl
inc
stos
pop
pushf
pop
outsb
lcall
arpl
push
add
jp
jg
cmp
or
xchg
push
push
movsb
test
mov
shlb
xor
dec
sbb
repz
cmp
inc
dec
outsl
and
out
mov
test
sub
mov
nop
in
add
cmpsb
cmpsb
stos
je
sub
mov
popf
jbe
ja
xchg
pusha
xor
add
mov
addr16
sub
xor
rcl
ret
push
or
mov
jl
and
mov
lds
leave
and
sar
xor
mov
bound
lret
cmp
cwtl
or
sbb
sti
add
movsb
lret
dec
mov
fdivl
loopne
lahf
mov
shrb
das
pop
into
jge
repz
xchg
aaa
push
mov
cmpsl
add
dec
pushf
fildl
inc
data16
push
mov
dec
jno
cmp
dec
and
test
insl
mov
bound
int3
test
outsb
jg
enter
leave
jb
cmp
mov
orl
popa
jp
mov
cld
pop
inc
das
dec
cmp
stos
inc
inc
sub
loopne
lods
call
popf
lcall
imul
adcl
push
xchg
jns
pop
sub
fs
pop
pop
push
mov
std
xchg
bound
loope
jo
ret
xchg
or
mov
mov
mov
cmpsl
pushf
push
sub
lahf
or
test
jmp
pop
xchg
mov
es
pop
dec
arpl
adc
sbb
push
mov
push
orl
or
test
fldcw
stos
int
mov
add
lret
stos
adc
sbb
push
arpl
fisubl
jbe
xchg
cmpsl
aad
mov
movsl
jno
jle
inc
lret
lods
call
shl
loope
mov
adcl
pusha
cmp
and
pop
jle
aas
imul
cmp
mov
sub
into
cltd
jle
fnsave
bnd
loop
mov
xor
or
mov
pop
imulb
add
test
loope,pt
sarl
cmc
test
clc
les
push
mov
and
adc
sbb
into
xchg
lods
into
sbb
mov
subl
adc
xor
inc
xor
int3
add
and
cmp
inc
out
out
dec
or
inc
and
mov
call
mov
mov
sti
mov
shl
in
xor
pop
or
inc
cmp
push
imul
cmova
xor
int3
or
jle
add
push
jge
icebp
mov
dec
into
nop
inc
shlb
pop
loope
xchg
dec
cli
push
adcb
jp
xchg
sbb
jmp
jge
cwtl
jp
pop
test
mov
daa
cmp
inc
sbbl
insb
sub
adc
adc
mov
movsl
xor
pop
mov
jns
push
mov
add
pusha
xor
std
push
push
pop
or
test
cmp
cmp
adc
mov
dec
xchg
addl
sbb
pop
ljmp
aad
test
lret
iret
cmpsl
mov
xor
inc
lret
scas
clc
push
ss
nop
add
scas
jg
std
lods
lret
mov
dec
in
imulb
fsubrp
pop
xor
test
shrb
insb
xchg
jecxz
mov
fnstenv
cs
and
cmp
repnz
mov
cmp
pop
cwtl
xor
jmp
test
mov
xchg
imul
push
imul
addr16
pop
stc
xchg
jle
and
push
mov
fwait
and
jo,pn
add
outsb
push
lock
push
je
aas
ret
daa
pop
and
add
and
cwtl
mov
in
loope
xchg
push
mov
add
ret
fwait
add
addr16
aad
push
adc
sub
test
popf
fimull
int
fisubrs
add
cmc
sbb
cld
add
jmp
les
mov
addr16
pop
xchg
movsl
addr16
popa
or
cmp
dec
mov
push
outsl
pop
dec
mov
stos
aam
js
stos
mov
clc
cmpsb
bound
adc
inc
addb
int3
scas
dec
mov
push
push
cmp
mov
mov
push
ds
fbstp
lahf
lret
jle
movsb
cmp
js
int
sti
dec
jecxz
inc
out
iret
in
and
mov
insb
push
inc
repnz
popa
mov
jl
insl
and
xchg
mov
or
mov
inc
fs
cwtl
fidivs
lret
lret
mov
push
shrb
sub
adc
mov
in
jge
pusha
lods
lods
xor
jecxz
lea
ds
daa
add
xchg
xchg
and
movl
fwait
cmpsl
hlt
sbb
xchg
cs
push
mov
jb
jne
cli
xchg
sbb
sti
mov
scas
sbb
insl
cltd
pushf
loop
or
dec
mov
push
xor
inc
out
dec
push
and
loopne
cld
fbstp
pop
mov
pop
lea
in
push
or
inc
adc
xor
mov
aam
push
push
push
push
sbb
mov
mov
sbb
push
fs
sarb
pop
sbb
movsb
xchg
xor
scas
pop
mov
cmp
pop
push
mov
test
mov
xor
aaa
push
cs
jo
sbb
fdivl
dec
stos
mov
cmpsl
loop
mov
push
xchg
lret
push
lret
jno
add
out
jo
or
xchg
je
imul
push
ret
popa
add
clc
aam
push
cmp
cmpsb
fsubrs
imul
xchg
aad
push
es
sbb
pop
and
ss
add
shrb
aam
pop
pop
insb
jle
imul
icebp
inc
push
cmp
mov
or
test
xlat
sbb
jae
dec
lea
add
nop
push
inc
push
jae
cmpsb
dec
les
push
ljmp
add
je
mov
fbld
repz
add
dec
loopne
pusha
xor
lds
push
mov
push
push
and
es
sbb
shr
fimuls
std
fstl
ljmp
lock
fdivr
testl
inc
xor
fs
mov
xlat
nop
cmp
jmp
insl
sub
out
xchg
jne
cmpsl
ljmp
xor
push
cwtl
mov
loope
insl
jl
int
movsl
outsl
mov
or
call
xchg
test
push
aad
inc
jae,pt
add
add
or
cltd
bnd
out
addr16
mov
cli
sbb
rcrb
fs
dec
or
mov
adc
xchg
out
mov
loop
rorl
shll
push
mov
sub
cmp
jp
ret
jp
hlt
pop
inc
push
inc
mov
popf
je
clc
add
out
fwait
icebp
jb
js
pop
mov
into
pop
mov
fadds
adc
pushf
clc
mov
int
popf
popf
ss
out
xchg
push
popf
add
repnz
ret
push
lret
push
daa
jp
xorl
lret
push
fldenv
add
fistl
ds
icebp
dec
fnsave
pop
and
rol
cmp
sbb
cmp
lret
dec
outsb
adc
xchg
shlb
sbb
lods
dec
dec
or
loop
or
outsb
negl
push
movsb
pop
sbb
mov
sbb
add
fcoml
cmpsb
xchg
cmp
mov
stos
nop
cld
dec
cs
hlt
nop
pusha
cld
outsb
sti
lret
mov
mov
xchg
push
jb
in
mov
dec
jge
iret
scas
ficoml
les
mov
lcall
mov
cmp
add
pop
mov
in
jns
and
icebp
pop
xor
dec
cwtl
sahf
ja
addr16
cltd
das
loopne
mov
jecxz
xor
adc
push
dec
mov
into
inc
rcrb
cmpsl
xchg
lods
adc
pop
adc
dec
push
xor
pushf
inc
sbb
cmp
xor
push
adc
ss
pop
jge
pop
mov
aad
dec
out
lahf
xlat
xor
lret
adc
mov
push
pop
subb
inc
iret
lcall
mov
cmpsl
xor
inc
in
xchg
movsl
lods
das
stos
pop
loope
push
cmp
mov
push
rolb
sbb
fstpt
push
movsb
aam
mul
sti
mov
fcompl
daa
outsb
mov
shrb
add
es
cmp
mov
pop
loop
cmp
popf
orb
mov
inc
adc
push
sbb
inc
mov
fcoml
fidivrs
idivl
into
sbb
mov
fs
loopne
adc
cmp
push
scas
xor
mov
inc
add
insl
aad
cmp
pop
outsb
sahf
insl
push
cmpl
fdivl
mov
and
sub
xchg
movsl
xchg
and
jg
lods
ss
push
jge
or
dec
fs
cmp
les
jno
cmpsb
xchg
loop
and
lds
mov
pop
xchg
mov
movsl
jmp
loop
sbb
pop
or
out
in
mov
dec
inc
addl
shll
push
and
xchg
push
js
inc
sub
mov
sbb
inc
mov
mov
jmp
lods
fdivrp
daa
inc
inc
fbstp
mov
xchg
lods
adc
stos
adc
call
push
xchg
out
push
cmp
adc
rcrl
sbb
push
movl
inc
pop
js
cmp
loopne
les
into
lock
rcll
mov
cwtl
push
popf
push
lret
dec
dec
jp
int3
xchg
push
rorl
xor
in
aad
int
jecxz
jl
and
enter
cli
movsl
mov
repnz
lret
sub
int3
jne
push
stc
inc
sub
loop
or
fdivrp
iret
repz
push
inc
xor
out
sub
add
jmp
xchg
popa
jmp
les
inc
sub
push
in
xchg
orl
inc
sbb
sbb
jmp
sub
sbbl
test
cmp
mov
mov
sahf
mov
movsb
and
mov
xchg
enter
mov
pop
loope
inc
mov
xchg
cmp
mov
xchg
xor
repnz
negb
or
insl
and
movsl
lret
mov
hlt
mov
adc
xlat
cmc
mov
push
inc
and
es
lds
adc
scas
mov
jo
rolb
jmp
jo
push
pop
outsl
insl
or
or
arpl
xlat
and
enter
push
fadd
adc
lret
insb
or
cmpsl
cld
test
sbb
js
inc
mov
sbb
xchg
xchg
sar
push
xor
popf
cmp
cli
mov
insl
mov
shrd
jge
lahf
and
or
push
notb
ficoml
dec
repz
icebp
je
jb
mov
xorl
clc
mov
outsb
sub
sub
sub
xchg
mov
pop
lcall
adc
xchg
xor
test
push
cld
aaa
into
fmuls
jo
xor
testb
push
loopne
scas
fwait
dec
lods
mov
cltd
lea
jnp
mov
test
dec
mov
mov
pop
jg
adc
adc
out
insl
sub
mov
mov
dec
in
jge
aas
push
mov
fmul
mov
aam
push
jb
hlt
push
mov
or
sub
sbb
sub
push
xor
mov
dec
call
sub
sbb
xchg
in
mov
in
mov
rcl
dec
je
in
add
scas
dec
adc
int3
popa
jne
sub
mov
push
pusha
xchg
xchg
xor
fdivl
daa
popa
ret
fdivs
adc
hlt
sub
mov
mov
out
push
aad
addb
lahf
inc
mov
add
mov
lds
addr16
fdivs
mov
div
xor
lods
pop
and
lock
shll
ret
stos
call
and
mov
mov
pop
loope
adc
in
nop
lcall
inc
inc
stc
pop
int3
cmp
push
pop
jnp
and
andl
mull
movsb
push
push
addr16
arpl
pop
mov
and
das
shl
aas
into
shll
jb
inc
cltd
test
and
push
jle
fisubs
andl
or
push
test
fdiv
aaa
js
xor
add
add
ljmp
mov
jg
mov
mov
adc
and
xchg
out
or
pop
mov
and
clc
test
imul
test
jge
pop
shlb
test
add
insl
adc
mov
fmul
enter
and
mov
pop
cmp
and
adc
or
scas
ss
loope
cmc
lret
lcall
jno
sbb
imul
cwtl
lret
sbb
jno
push
inc
popa
enter
xor
cmpsb
jno
mov
imul
subl
mov
jnp
aas
inc
jg,pn
pop
data16
inc
mov
inc
pop
fsub
fs
fs
ljmp
or
inc
mov
cltd
fs
mov
fildl
in
dec
mov
inc
int3
jp
xchg
push
and
outsl
scas
adc
and
jmp
leave
out
scas
or
pop
sub
pop
sub
sub
xchg
mov
ret
cmpsb
mov
and
add
dec
xchg
dec
out
fldl
aaa
dec
fsubrp
shlb
mov
push
push
inc
mov
mov
dec
and
xor
mov
or
cltd
xor
lret
and
push
cmp
hlt
or
pop
and
test
lret
inc
aam
stc
jne
mov
movsb
jb
push
push
test
mov
adc
mov
mov
push
or
outsb
out
sbb
aas
push
mov
movsb
sahf
dec
pusha
addl
insb
or
int
mov
loopne
sub
sub
cmp
sbb
jg
pop
shlb
jnp
js
push
ljmp
pop
nop
cmpb
push
sub
imul
pop
sahf
lods
enter
mov
jp
pop
adc
jmp
push
scas
psubd
adc
sahf
stos
dec
xor
not
bound
cmp
jae
and
mov
sbb
fnsave
or
cs
inc
xor
sub
xor
fwait
int3
sub
rol
xchg
sbb
pushl
andl
and
xlat
aam
jnp
call
mov
jb
jae
lods
cmp
jge
push
sbb
jecxz
and
adc
mov
xchg
xchg
add
sti
movsw
lret
insl
movsb
movsl
sar
xor
ret
xchg
jge
mov
cmpsb
mov
xchg
loopne
in
push
loope
test
outsl
jmp
and
in
insb
pop
popl
aad
ret
hlt
or
fnstcw
out
inc
or
aam
push
dec
add
lock
jle
into
and
adc
xor
push
clc
das
enter
loope
loope
adc
xchg
cli
adc
aam
cmp
ror
adc
mov
dec
shlb
mov
and
mov
popf
in
push
sbb
push
loop
mov
mov
stos
clc
outsl
aaa
xchg
push
push
mov
or
ss
pop
adc
fwait
jns
sbb
insb
nop
scas
cmp
mov
cmp
fs
mov
mov
hlt
scas
sarl
dec
sub
ja
cli
jl
cmpsb
mov
or
xor
dec
jns
xor
pushf
rclb
flds
cwtl
mov
outsl
ljmp
adc
xor
mov
movsl
adc
jg
in
lds
int
sub
pusha
imul
push
in
cmp
aam
add
or
cmc
and
xchg
cmp
popf
in
jg
ds
add
test
pop
xor
rcl
bound
fimuls
push
loop
cwtl
pop
jg
pop
sbb
inc
dec
jmp
ret
xchg
jo
or
pop
inc
leave
pop
sbb
fs
pop
scas
xchg
stos
mov
push
push
test
pop
pop
pop
sub
cmp
push
dec
mov
sub
stos
adc
fs
jmp
adc
mov
movsl
add
inc
jnp
lods
in
and
lcall
xor
or
clc
pop
pop
sub
das
pop
lret
cmpsb
pop
xlat
loop
mov
mov
mov
lods
lahf
fnstcw
cmp
popa
mov
and
pop
pop
cmp
cmp
jae
arpl
movsb
push
add
and
insb
in
inc
add
arpl
xor
sbb
add
gs
pop
aaa
bound
xor
pop
cmc
sbb
mov
dec
jp
jns
lods
sbb
pop
in
push
mov
pushl
fmuls
mov
int
dec
cld
xchg
popf
sbb
fdiv
push
mov
xor
stos
cmp
mov
inc
push
pop
das
fistpll
lods
pop
insl
sbb
pop
faddl
std
test
hlt
fdivs
jecxz
sbb
fistps
or
ss
test
scas
hlt
mov
fst
mov
ret
sub
dec
insb
nop
in
xchg
sub
cwtl
push
jae
or
mov
call
in
add
adc
inc
cld
hlt
jmp
jecxz
cld
inc
mov
dec
sbb
fcomp
cld
dec
mov
pop
imul
lds
rcl
pop
imul
outsl
loop
imul
pop
pushf
and
fs
aas
cld
inc
loop
arpl
ficoms
sub
aam
jecxz
stos
fwait
sub
shll
movsl
cmp
pop
mov
leave
outsb
lock
insl
push
inc
insl
lea
cwtl
xchg
jne
and
xchg
or
pushl
jle
loope
cmpsl
jmp
cmp
jecxz
sub
or
lret
or
fidivs
mov
pop
call
pushf
xorl
or
imul
push
hlt
mov
xchg
mov
ret
inc
cmc
mov
sub
pop
pop
sub
out
fsubl
mov
dec
imulb
jl
sbb
sti
inc
mov
imul
iret
orb
and
pop
jmp
cltd
lds
imulb
dec
jle
or
imul
and
mov
push
mov
popa
cli
popf
adcb
pop
loope
aad
xor
mov
cmc
cmpsb
daa
mov
pop
mov
outsl
int
dec
repz
cmp
in
pop
lods
and
jns
daa
sbb
imul
sahf
cmp
call
sub
push
cld
cmpsl
mov
add
or
aas
and
dec
in
mov
nop
pop
jmp
imul
or
xor
xchg
xor
sub
sbbl
mov
into
and
jns
aam
push
lods
mulb
mov
ficoms
xor
mov
adc
stc
lods
adc
xchg
lea
xor
ja
lods
rorb
scas
inc
leave
inc
js
rorb
into
dec
mov
mov
dec
scas
outsl
subl
dec
push
xchg
cltd
push
es
xor
push
sbb
repz
test
ljmp
jge
pop
mov
iret
stos
popa
mov
sub
inc
mov
cmp
in
aaa
push
ja
push
ret
out
push
pop
test
mov
in
xchg
xor
aad
add
jg
push
jo
daa
xchg
in
scas
fnstsw
mov
mov
sti
push
insb
enter
enter
pop
lods
jg
jns
lret
hlt
mov
adcb
fbstp
cmp
stos
cmp
add
mov
arpl
pop
scas
aam
leave
test
cmc
rcrl
jb
outsb
or
or
or
aad
cmpsb
mov
js
mov
push
jle
inc
ficoml
aas
push
xchg
add
pop
pop
dec
adc
aad
mov
pop
fs
cmpsl
jo
out
xchg
cli
sahf
pop
add
mov
sbb
cmp
add
adc
push
jae
aaa
or
xor
ret
push
aam
cld
mov
inc
test
dec
ljmp
ret
pop
jb
lahf
push
pop
or
cwtl
repz
xorb
lcall
fcoms
insb
pop
mov
repz
inc
pop
pushf
std
adc
xchg
adc
pop
add
mov
push
stos
adc
ljmp
mov
lcall
xchg
repz
lods
idiv
imul
xchg
enter
rol
int3
push
pop
adc
shrb
sti
insl
or
xchg
mov
clc
push
jmp
cld
repz
dec
outsb
in
js
adc
loope
add
sbb
pop
and
sbb
loopne
sti
cmpsl
cltd
ja
inc
xor
cmc
pusha
mov
cmp
inc
lock
and
add
jle
add
mov
sub
xor
add
cli
int
adc
faddl
test
or
mov
sbb
mov
adc
repnz
mov
test
mov
add
xchg
js
sub
add
inc
cmp
jg
idivb
mov
mov
mov
out
push
icebp
sbb
mov
cltd
lods
out
cmc
mov
xchg
mov
aam
mov
mov
adc
or
pop
push
mov
call
or
cmp
aas
inc
insl
mov
sbb
cmpsl
mov
mov
and
inc
neg
jne
aam
rep
and
stos
and
outsl
insl
inc
clc
and
cwtl
mov
cmc
pop
pop
fsubrs
xchg
push
inc
xchg
mov
ja
loopne
xchg
clc
xor
aaa
out
pop
sbb
hlt
push
ja
xchg
test
int
inc
push
gs
adc
pop
mov
pop
es
mov
or
mov
cmp
in
mov
sub
mov
ss
insl
cmp
ljmp
dec
dec
imul
loop
stc
xor
outsl
ficomps
loop
fcmovnb
loopne
inc
call
shr
sub
push
test
pushf
fcomp
stos
mov
xor
aas
inc
sbb
inc
cmc
adc
xlat
insb
roll
dec
mov
test
sub
push
cmp
lds
push
mov
lds
mov
xchg
pop
sbb
in
and
or
push
inc
sbbb
int3
push
test
jmp
add
xchg
clc
and
mov
push
mov
fwait
lds
pop
dec
inc
push
inc
sub
pop
in
lods
cmp
mov
push
push
subb
cmpsl
mov
ret
mov
inc
or
and
call
popl
push
and
inc
clc
add
scas
cmpsb
mov
inc
sub
xchg
in
adc
jp
add
in
rol
xor
add
mov
in
ds
lcall
pop
std
or
or
aas
dec
mov
mov
sub
add
mov
ret
mov
out
cmpsl
cmp
xor
cwtl
popa
sub
pop
jae
mov
jae
shl
xchg
and
and
shr
dec
fisubl
scas
cmp
inc
jae
mov
xchg
pop
add
add
call
inc
pop
mov
rcr
std
jmp
int
std
int
jnp
pop
outsl
lods
adc
mov
mov
cmp
push
mov
pop
push
inc
jle
push
je
sbb
cltd
sub
fdivs
xchg
rcrb
mov
sub
add
xor
scas
mov
xchg
arpl
push
and
add
xor
imul
imul
push
ret
sub
xchg
xchg
aaa
push
pop
push
andl
movsl
shld
mov
rcll
pop
sub
test
xchg
pop
iret
mov
push
arpl
movsl
jp
inc
push
test
movsb
or
sbb
jmp
dec
jno
add
adc
imul
bound
inc
ret
xchg
shll
cmp
loop
aam
mov
or
lds
or
sbb
lock
xchg
repnz
dec
push
cmp
clc
mov
adcb
mov
sti
mov
pop
and
loopne
xchg
lret
inc
lock
jecxz
cmp
pop
mov
inc
sub
inc
inc
stos
jecxz
jbe
pop
mov
loop
fs
pop
insl
jmp
call
inc
xor
repz
jae
loop
fadd
lock
mov
pop
dec
jmp
pop
outsb
sahf
mov
cli
test
push
out
into
mov
std
sub
pop
repz
push
inc
push
movsb
pushf
lret
les
rcrb
xlat
or
or
mov
test
pop
push
cmp
dec
dec
pop
adc
test
fld
out
mov
lds
loope
cltd
loop
or
sbb
or
data16
pushl
pop
mov
bound
push
ds
xor
lret
jecxz
insl
in
cmp
loopne
cmp
adc
mov
push
cmp
pop
bnd
in
xorb
or
mov
dec
rcrl
out
and
hlt
sbb
mov
fnstsw
ficoml
xchg
xor
or
and
add
sbb
mov
jae
and
aam
in
jmp
in
in
testb
dec
xor
or
sbb
je
and
jae
mov
xchg
mov
xor
faddl
push
fdivrs
mov
inc
xor
mov
out
nop
jle
dec
xchg
arpl
jnp
rorl
sbb
adc
ljmp
movsb
iret
pop
idivl
out
cmp
loope
cld
xchg
scas
cmp
orb
int
inc
cmp
lock
jae
jg
stc
in
or
mov
adc
push
outsl
pop
or
mov
fistl
pushf
sub
pop
jl
imul
cmp
pop
out
mov
mov
dec
adc
push
int3
pop
mov
and
push
ja
cmp
xchg
hlt
xchg
lret
fcomi
out
gs
fldcw
aaa
mov
dec
cmp
lcall
dec
mov
add
cwtl
subb
repnz
inc
outsl
mov
push
test
xor
pop
lods
out
mov
sub
cmpsl
stos
sbb
sub
mov
int3
fiaddl
pop
jge
cld
into
aad
out
out
jno
inc
sub
pop
push
xchg
mov
cwtl
add
int
ficompl
sbb
mov
cmp
outsb
lods
and
mov
stos
les
mov
aad
inc
dec
iret
shrl
fcmovbe
rol
test
cltd
mov
stos
inc
cmp
cmpb
and
outsb
flds
stos
pop
test
sbb
test
ficoml
dec
lahf
jno
xor
mov
cmp
stc
cltd
ret
inc
lcall
shrl
icebp
mov
xor
jge
scas
test
mov
pop
xchg
les
mov
enter
outsl
jbe
mov
call
ficomps
push
dec
and
scas
adc
push
aad
out
stc
pop
lods
test
negl
xchg
fistpll
in
sub
shlb
dec
push
scas
xchg
mov
sub
cmp
clc
ficomps
hlt
leave
mov
add
test
push
and
sbb
bound
setp
mov
aad
ds
xchg
jae
cmp
cs
in
pop
mov
and
dec
jecxz
pop
cltd
xchg
in
sarl
add
aas
inc
push
push
lahf
mov
dec
mov
mov
popa
add
jb
faddl
imul
mov
sub
lret
sub
mov
arpl
daa
or
pop
xchg
and
pop
addr16
subb
roll
aam
mov
cwtl
jae
jecxz
fsubrp
cmp
push
adc
add
lods
daa
pop
sub
fisubrl
loope
out
lret
addr16
or
push
xchg
popf
add
ss
test
push
incb
push
sub
sti
xchg
jo
fcmovnb
shrb
cmc
ja
cmp
jb
jecxz
xor
into
fcmovnb
sbb
or
shrb
pop
pop
je
in
push
dec
in
sub
imulb
stc
mov
adc
out
lcall
ficomps
loop
mov
ret
addr16
sub
inc
fldl2e
test
sar
mov
jg
xchg
adc
les
push
stc
in
in
mov
sub
sub
int3
mov
addr16
icebp
mov
inc
stos
adc
pop
stc
cmp
push
xor
fwait
mov
gs
pop
pusha
xchg
mov
inc
pop
scas
mov
and
add
divb
mov
push
hlt
paddq
stos
pop
js
sub
ds
loop
mov
and
mov
push
ljmp
mov
cs
adc
pushf
push
cmc
sbb
psllq
repz
ficoms
notb
push
cwtl
addr16
ss
in
pop
push
outsb
rclb
cmp
leave
lds
xor
cmpsb
pop
pop
sar
xchg
push
dec
mov
mov
pop
imulb
sub
les
or
dec
and
addr16
imul
lds
scas
data16
ficoml
mov
stc
jp
hlt
cmc
test
inc
adc
add
pushf
push
adc
and
gs
mov
and
lock
loope
pop
test
shrb
jmp
shrb
pop
movb
in
pop
lret
test
stos
js
fisubl
xchg
sbb
cmp
cmp
stos
lock
rclb
mov
icebp
cmc
mov
jge
loopne
sbb
into
add
jbe
push
nop
hlt
out
adc
scas
pop
int3
mov
mov
push
lahf
dec
and
and
lds
mov
xor
push
iret
shlb
sub
xor
mov
pop
xor
push
daa
adc
mov
fdivrl
dec
jno
add
ret
inc
cld
dec
jo
jb
insb
or
ljmp
xor
cli
in
mov
movsl
mov
jecxz
fcompl
sar
cltd
js
mov
jne
lcall
push
mov
test
push
das
sbb
mov
mov
mov
sub
das
xchg
pop
push
lret
jle
sbb
sub
cli
sub
xchg
shll
xchg
frstor
fcoml
cwtl
push
xor
and
xorl
fdivl
push
outsb
hlt
lock
mov
cmp
sbb
mov
jnp
popa
push
hlt
fisubl
mov
fnsave
jg
mov
js
jno
mov
cmp
push
fildl
sbb
xchg
sbb
sbb
adc
xchg
repnz
mov
sub
adc
fs
sub
lret
movsl
jmp
mov
mov
sub
movsb
insl
pop
andl
push
outsb
jnp
sub
ret
push
jmp
mov
jnp
adc
addl
icebp
lea
mov
pop
pop
jle
subb
push
popf
mov
jo
decl
es
test
ljmp
aaa
sub
loopne
adc
adc
enter
dec
jns
repnz
sub
push
lret
xor
jns
outsb
mov
stos
fldl
in
jecxz
xchg
daa
addr16
pop
fstl
jmp
or
cwtl
into
jo
cmp
xor
or
sbb
mov
mov
mov
add
xlat
xor
fistps
in
jae
push
pop
call
testl
ljmp
xchg
mov
imul
ja
loop
or
push
out
movsb
push
dec
in
cmp
or
js
data16
jae
mov
inc
pop
lcall
mov
leave
or
scas
ret
xchg
mov
fstps
push
std
mov
les
gs
and
mov
mov
push
xor
popa
ds
out
aam
jg
xchg
test
clc
pop
add
clc
aaa
xchg
stos
xchg
mov
lds
aaa
pop
addr16
inc
sbb
popf
xor
pop
arpl
pop
loope
dec
cwtl
cltd
insl
pop
leave
mov
jo
push
aad
dec
ja
push
in
or
imul
inc
cmpsl
add
loop
push
repnz
in
mov
cmc
push
fldt
jns
mov
ret
xor
in
adc
sub
push
cs
imul
dec
test
sbbb
scas
xor
add
mov
xchg
orl
ds
push
hlt
adc
jmp
push
lahf
and
pop
cmp
xchg
and
mov
jnp
mov
push
mov
sbbl
bound
xchg
push
jne
test
jl
or
mov
mov
xlat
scas
cwtl
and
clc
mov
mov
sub
lods
outsl
sbb
or
icebp
out
dec
xchg
dec
jnp
push
mov
mov
lcall
cs
fstpl
jmp
pop
out
insb
fnstenv
loope
hlt
in
es
out
push
out
call
subl
jmp
iret
and
stos
xor
mov
cmpb
out
stc
pop
out
enter
jg
out
lret
inc
jae
fdivrl
push
std
mov
iret
inc
shrl
jle
xchg
xchg
mov
cmpsl
push
nop
xor
out
mov
adc
cmp
dec
jle
add
pop
test
cli
or
fldt
jne
cld
loop
jle
fisubrs
inc
jle
stos
pop
xor
xchg
add
jno
pop
gs
movsb
outsl
cmp
test
pusha
mov
mov
lret
jmp
sub
test
movsb
fdivl
jbe
mov
pop
stc
cmpsb
sbb
push
out
mov
add
enter
jmp
xchg
jbe
pop
mov
add
sub
arpl
dec
insb
add
outsb
sub
stos
shrb
sub
int
bound
negl
mov
xchg
jae
rclb
cmc
push
in
mov
scas
dec
jmp
fs
xchg
xor
inc
ds
adc
xchg
popa
setp
das
sbb
lea
mov
out
in
dec
insb
and
cmpsl
pop
pushf
ds
jno
sbb
sbb
or
mov
dec
rclb
cmpsb
pop
mov
es
testb
mov
call
dec
pop
mov
pop
xorb
push
sti
lret
in
andb
push
int
jnp
sub
les
or
jno
or
and
or
rorb
push
sub
in
ds
lock
repnz
sbb
cmpsb
jle
loope
add
dec
mov
sub
inc
mov
js
or
fisttps
mov
pop
hlt
iret
call
cmc
lret
rcrb
in
test
lret
sbb
dec
xchg
dec
mov
xchg
ret
sbb
test
mov
jb
shlb
enter
add
movsb
test
ret
add
pop
mov
dec
lret
pop
insl
mov
or
icebp
cmp
sbb
xor
xor
jecxz
or
rcrb
std
xchg
out
pop
dec
imul
scas
daa
adc
je
dec
adc
fistps
xchg
sbbb
imul
imul
bound
hlt
fcompl
jne
loopne
pop
jb
popf
nop
pop
cmpb
and
testl
stos
and
jl
lret
lret
call
rolb
add
pop
mov
clc
subl
mov
jbe
xlat
jae
dec
int
xor
loope
push
clc
test
addr16
push
sbb
stc
adc
sbb
ljmp
and
ljmp
pop
add
push
push
push
scas
adc
adc
add
popf
push
sbb
mov
and
cmp
cld
cmc
adc
cs
mov
in
je
in
cmp
sti
and
sub
xchg
ret
cmp
movsl
xchg
ret
pop
mov
sub
jmp
pusha
sar
sub
cld
out
jge
sbb
or
stc
jl
in
sahf
mulb
adc
mov
adcl
js
movsb
aas
cmp
call
addr16
loop
pop
mov
or
jnp
int
jno
iret
xchg
add
ret
leave
sub
or
cwtl
cli
loop
dec
sbb
mov
adc
dec
push
jmp
push
or
xor
dec
es
add
adc
pop
fbld
xor
test
in
out
add
je
pop
inc
jecxz
cmp
es
enter
rorb
xchg
negl
mov
sub
orb
sub
lds
add
mov
ljmp
fisubrs
lods
bound
add
inc
pop
shlb
loope
orl
mov
add
ds
sbb
mov
push
sub
sbb
pop
pop
ja
lods
test
add
out
mov
rorb
mov
movsl
inc
mov
and
cmc
lock
push
fstps
jle
inc
cltd
iret
aam
movsb
push
in
xchg
arpl
mov
xor
in
cmp
jns
ljmp
mov
dec
dec
cwtl
gs
into
sub
jnp
mov
push
hlt
pushf
sbb
xor
shlb
movsl
and
test
add
mov
cmc
fdivl
mov
int3
loopne
iret
or
aad
repnz
xorb
fnstsw
add
adc
mov
jg
fwait
cmpb
cmp
out
fstl
jl
movsb
jb
jae
push
mov
pop
inc
xchg
mov
shrb
mov
mov
dec
sti
cmp
in
ret
xor
push
and
mov
dec
pop
insb
xchg
jnp
cmc
rcl
es
push
in
pop
test
pop
adc
mov
inc
xor
nop
xorb
es
test
lret
shr
fdivs
lea
pop
jne
or
mov
cwtl
push
test
stos
js
push
push
xchg
mov
xchg
dec
sbb
fstpl
pop
mov
xchg
shll
sti
pushl
jo
fildll
shll
xor
nop
cli
aad
dec
push
popf
adc
or
cs
jno
mov
pop
mov
jnp
ds
enter
xchg
mov
jle
and
lods
mov
cmpsl
cmp
bound
push
xchg
sbb
fs
xchg
mov
fstl
jecxz
adc
test
pop
cmp
int
lock
imul
mov
add
aaa
dec
and
add
adc
adc
in
mov
aaa
mov
aas
pusha
xchg
sti
repnz
mov
xchg
cmp
insl
fisttps
ret
mov
lds
popf
es
xchg
xorb
stos
dec
push
mov
lahf
xor
add
mov
test
dec
aas
adc
xor
sahf
push
lods
imul
rcrb
addr16
notl
sar
je
cltd
aad
sub
int
es
pop
jb
cmpsl
dec
imul
add
lcall
and
insb
and
loope
or
mov
test
jnp
jmp
xchg
ret
mov
popf
mov
mov
faddl
fisttpll
rorl
sbb
adc
aas
xchg
xchg
lds
adc
outsb
jae
lods
daa
mov
fisubrl
dec
jbe
dec
flds
jbe
lock
cmpsl
xchg
shrb
jo
xchg
adc
iret
hlt
and
xor
and
daa
aaa
out
sbb
data16
adcl
leave
test
xchg
aaa
dec
out
stc
adc
aam
xchg
nop
je
add
pop
xor
push
out
xchg
dec
daa
cltd
mov
addr16
cmc
adc
sahf
jp
mov
ss
ret
jne
sbbl
mov
daa
leave
shl
test
jae
sahf
cmp
xor
push
test
enter
and
pop
push
jne
jno
mov
jle
subb
mov
icebp
adc
repz
fsubrp
inc
test
cmp
jle
xor
shlb
lret
and
pushf
insl
lock
push
push
mov
pop
inc
jae
popa
mov
test
push
cmp
push
sub
mov
inc
movsl
jecxz
push
lcall
sub
imul
and
add
stos
adc
mov
cmpsb
mov
sbb
and
sub
xor
inc
insb
roll
outsl
jae
xchg
jge
ja
out
outsb
dec
leave
add
idivb
leave
ja
aam
xor
push
out
sub
sbb
cmp
loop
jo
ljmp
mov
add
sbb
mov
or
bound
arpl
cmp
in
add
mov
jp
in
fcompl
adc
cld
fnsetpm(287
mov
push
cs
mov
rcll
andl
jg
sub
adc
dec
or
popf
cmp
hlt
jp
imul
mov
bound
xchg
cltd
jae
ret
mov
test
gs
test
push
and
ds
movsl
push
int
cmpsl
pop
mov
decl
popa
pusha
ja
lahf
les
push
pop
push
push
jae
inc
xor
and
insb
xchg
loop
push
lock
ret
cmpsl
push
call
pop
ds
lahf
inc
inc
xchg
push
in
out
inc
out
xchg
jecxz
and
mov
cltd
insl
jb
push
jmp
add
xchg
xchg
cvtpi2ps
fwait
xchg
popa
pop
js
rcr
push
test
push
pop
mov
cmc
les
hlt
sbb
fiaddl
stos
nop
push
in
inc
xor
or
int3
push
addr16
sbb
jns
push
mov
adc
cmp
in
testl
lods
adc
sbb
int
sbb
pop
addr16
sbb
jp
popa
mov
jnp
xchg
mov
mov
cmp
and
push
aad
pop
or
mov
fldcw
fsubs
push
push
or
daa
stos
mov
mov
sbb
repz
sub
xchg
pop
mov
addl
sbb
add
pop
push
fwait
add
or
and
inc
shlb
shlb
test
call
xor
popf
shlb
sub
jns
mov
sub
ljmp
in
flds
outsb
cld
in
outsb
nop
dec
aad
mov
push
icebp
sub
jg
sbb
inc
push
adc
insl
into
subb
inc
jp
fidivrs
icebp
bound
push
addr16
lods
mov
scas
inc
pop
sub
daa
dec
pop
jbe
sub
lds
and
sti
mov
cmp
lods
pop
add
cmpsb
iret
lods
hlt
addr16
add
pop
xchg
cmp
mov
pop
jb
mov
lcall
push
enter
imul
mov
inc
aam
push
pop
sbb
mov
dec
or
sub
adc
or
push
xlat
xadd
cmpsb
insl
cmpsb
decb
test
push
sbb
add
aad
inc
in
push
pop
in
push
adc
pop
dec
test
ljmp
into
pusha
mov
lcall
popf
flds
dec
imul
cmp
leave
sub
add
and
fisubs
shll
cmp
testl
pop
in
mov
mov
test
imul
xor
into
arpl
or
lock
and
adc
sbb
addr16
lock
dec
stos
jp
call
out
cwtl
aam
add
and
fldt
outsb
in
aam
rcrb
les
mov
jmp
dec
dec
sub
jo
out
inc
mov
fs
adc
sub
sub
dec
jbe
pop
mov
jne
insb
aas
mov
ss
mov
filds
inc
jno
push
xor
mov
mov
imul
cltd
pop
icebp
sarb
in
push
movsl
and
mov
add
mov
adc
xor
cmp
test
in
pop
adc
or
add
xchg
imul
xchg
and
bound
push
xchg
dec
fnstcw
mov
in
movsb
mov
hlt
pop
xor
addr16
enter
sub
mov
dec
dec
jnp
xor
mov
push
fwait
insl
fists
insb
fprem1
test
and
popf
xchg
push
xchg
icebp
enter
adc
push
stc
arpl
shlb
and
mov
adcl
sti
in
mov
ret
jge
std
sub
push
xor
mov
popf
xchg
into
shl
aas
mov
mov
inc
fadd
pushw
repnz
sub
nop
cli
sbb
push
jnp
out
push
xor
ljmp
in
push
or
outsl
xchg
loopne
xor
or
dec
rcrb
inc
inc
jno
repz
lret
sti
push
mov
sub
inc
ja
adc
mov
add
mov
xchg
add
lea
mov
pop
clc
cwtl
mov
fwait
mov
stos
fs
loopne
movsl
sbb
sub
pop
jo
mov
nop
mov
xor
js
fsts
xchg
jmp
and
adc
xchg
movsb
ret
test
stos
das
aas
ds
or
cmpsl
jo
iret
scas
pop
fwait
ljmp
fs
fadd
xlat
sub
or
xor
negb
lea
test
jle
mov
xor
lock
std
leave
shrl
call
xor
or
or
dec
int3
por
pop
xchg
fadd
testl
sbb
int3
mov
iret
xor
mov
gs
adc
inc
add
or
jge
sub
mov
add
jo
dec
fscale
push
xlat
push
and
mov
cmp
test
cltd
or
inc
movsl
arpl
loop
sahf
pop
into
dec
xor
add
adc
mov
cmp
pop
inc
pop
mov
adc
mov
and
clc
push
lcall
test
sub
add
dec
enter
repnz
ret
dec
adc
mov
jp
mov
or
ljmp
xchg
les
xchg
out
aaa
lahf
sbb
pop
fisttps
out
dec
adc
jae
sub
shll
rolb
push
cmp
mov
inc
fistps
dec
jns
sbb
mov
and
js
xchg
jecxz
pop
enter
xchg
mov
add
pop
sbb
jle
insl
negb
lcall
loopne
outsl
sbb
mov
dec
xor
dec
pop
xor
orb
clc
mov
jp
fs
jb
sub
dec
mov
xchg
ret
xchg
mov
in
push
mov
push
jo
shr
mov
sarl
popa
addl
mul
sbb
mov
adc
scas
dec
adc
out
arpl
and
in
jge
sbb
adc
push
enter
jae
aam
into
and
insl
cltd
inc
xchg
icebp
aam
or
jecxz
pusha
inc
add
and
adc
fadds
sub
and
cmp
mov
cmp
adc
ljmp
fsub
scas
push
sub
push
adc
push
fwait
imul
and
jp
mov
jo
in
add
sbb
jp
pop
dec
xchg
jb,pn
jle
mov
loopne
and
mov
adc
dec
ror
mov
cmpsb
scas
add
fcompl
xchg
cmc
arpl
dec
inc
xchg
cltd
ja
sahf
fistps
dec
jne
inc
pop
cmp
je
ret
jge
jns
cmp
sub
in
stos
and
dec
pop
xchg
andl
test
idivl
or
lea
xchg
stc
lods
test
lea
shrb
xor
adc
lods
call
pop
loopne
xchg
pop
mov
xor
loopne
andb
js
push
lock
inc
std
lcall
pop
cwtl
inc
pop
in
mov
mov
sub
push
cmc
add
and
stc
mov
dec
aaa
adc
pop
or
fistps
and
cvtpi2ps
inc
push
adc
jge
cwtl
cmc
cmp
inc
jmp
cmp
out
idivb
xchg
xchg
add
adc
push
xchg
adc
clc
loope
push
das
cmp
sub
negl
in
push
repnz
jns
stc
or
cmp
aad
ljmp
clc
sub
push
cmc
adc
jmp
shl
mov
bound
ret
mov
xchg
out
lcall
pusha
xor
es
enter
je
xor
inc
fdivr
adc
jle
and
fs
mov
sbb
cmp
mov
cmp
sub
lods
xchg
adc
pop
je
push
pop
shlb
mov
test
push
jp
fs
push
sub
decl
lret
push
and
mov
push
fucomip
lds
sbb
and
bound
shll
add
mov
jl
jb
ficoml
fcmovnb
xchg
es
divl
push
jge
xor
test
xchg
mov
jb
into
scas
iret
notb
repz
add
cmp
aaa
es
insl
push
addr16
dec
adc
and
cs
imul
push
xchg
lds
mov
mov
clc
xchg
cmc
arpl
mov
push
mov
dec
in
lret
mov
pop
nop
insb
pop
ret
ja
in
stc
das
in
adc
pop
mov
mov
cmpl
ret
push
cmc
popf
movsb
aas
lret
adc
std
lods
shr
mov
pop
pop
pop
hlt
inc
sub
loope
scas
mov
cmpsl
sbb
jl
aaa
jl
sub
ds
loope
adc
mov
cmp
ds
xor
or
hlt
mov
sbb
and
aad
cltd
fbstp
jmp
push
lods
fdivrl
and
mov
fldenv
jnp
jno
dec
jle
cmpsb
mov
sub
ljmp
mov
fildll
adc
push
shll
jmp
adc
bound
fnstcw
stos
les
leave
cmpsb
xlat
push
popa
cmp
inc
inc
adcb
cmp
dec
push
fbstp
call
fiadds
sub
aam
mov
fs
push
inc
push
outsl
pusha
sub
push
sub
dec
jno
aad
out
cmpsl
jo
call
sub
add
mov
push
and
outsb
aas
std
rorb
pop
fidivs
mov
daa
repz
lcall
mov
cmc
and
sub
int3
popa
xchg
push
mov
cmp
sub
dec
xlat
imul
xchg
mov
sbb
lds
or
add
mov
div
cmp
xchg
rorb
sub
mov
mov
cltd
fadds
stos
inc
pop
mov
sbb
rclb
cld
jnp
enter
push
jl
scas
scas
mov
push
fdivrl
stos
sub
into
ds
add
jno
fdivrs
sbb
inc
mov
sbbb
shr
fidivl
arpl
dec
jae
rorb
aad
in
pop
push
adc
mov
arpl
xchg
or
push
lcall
out
ficoms
outsl
or
cmp
in
js
negb
ds
xor
fmull
jmp
mov
mov
scas
ret
jno
aas
sbb
rcl
int
inc
xchg
lret
inc
addr16
bound
xchg
and
lds
cmp
mov
mov
cwtl
jge
cmp
mov
pop
push
cmp
adc
cmp
data16
stos
pop
lea
push
cmp
mov
insl
fldt
adcb
xor
mov
xor
mov
sahf
mov
cld
jl
sbb
les
jbe
imul
and
call
fstpl
iret
aaa
sub
cld
scas
lahf
inc
adc
mov
clc
int3
or
lret
fucom
sbb
and
lcall
and
scas
mov
mov
inc
mov
ret
jl
mov
stos
jl
xchg
stos
or
out
fs
movsl
mov
ret
dec
xor
leave
or
push
xlat
cmpsb
iret
dec
test
and
cmc
jecxz
test
jns
call
repnz
push
fdivrl
loopne
out
fmull
mov
adc
into
les
xor
dec
push
mov
test
xor
mov
mov
scas
js
leave
int
lcall
mov
sub
inc
lods
shlb
push
cmpsb
cltd
mov
gs
sti
or
and
aas
rcll
arpl
test
hlt
test
inc
fcomip
cmp
jge
mov
int
pop
and
test
shr
adc
or
popf
rcrb
shlb
fsub
cmpsl
int3
ror
xchg
mulb
pop
push
test
std
cmpsl
test
mov
icebp
jns
test
add
ljmp
je
pop
pop
or
push
xor
dec
shrl
std
nop
mov
add
mov
adc
pop
mov
ds
sbb
adc
cmp
sub
mov
dec
dec
aaa
jns
leave
xchg
jecxz
je
inc
test
and
mov
inc
dec
fldz
jecxz
sbb
xchg
inc
cmpsl
loop
std
hlt
movsb
movhps
scas
push
jmp
mov
aaa
call
insb
mov
loop
das
mov
pop
aad
push
sub
dec
and
jno
out
or
xlat
pop
mov
popf
imul
mov
mov
and
pusha
xchg
mov
cli
cmp
mov
or
pop
mov
nop
xchg
filds
push
lret
and
inc
and
int
xchg
pusha
push
notb
aaa
into
clc
xchg
pop
jecxz
mov
mov
pop
dec
fists
loop
out
pop
je
pop
pop
mov
xchg
push
es
and
fdivl
dec
mov
and
adc
lds
pop
loope
je
iret
push
std
mov
stos
ret
xor
adc
xchg
add
dec
shrl
iret
imull
jae
push
mov
orb
imul
lock
out
xor
xchg
jmp
or
fidivs
lahf
outsb
jno
mov
jmp
xor
mov
inc
das
jmp
fwait
cltd
add
testb
cs
and
ljmp
roll
mov
xchg
incl
sbb
cmpsb
rclb
es
fcmovbe
popa
xchg
sbb
andl
clc
out
aam
nop
roll
cltd
lret
adc
push
xor
leave
mov
std
and
dec
sbb
lods
inc
scas
cmp
xlat
jae
jbe
xchg
negb
push
pusha
rcrb
cmp
je
jb
sbb
mov
call
outsl
filds
outsb
mov
cltd
stos
outsb
jnp
testb
das
sbb
dec
loop
adc
imul
popf
add
mov
adc
cmpsb
push
mov
shl
out
imul
dec
and
jle
push
add
dec
into
je
int
mov
sub
cld
leave
out
and
adc
ror
insl
jbe
dec
test
movsl
mov
jnp
jg
mov
xchg
mov
xchg
mov
lds
fnstsw
push
adc
pop
ss
fisubrs
in
pop
sarl
mov
leave
xchg
testl
lods
sub
jb
daa
cmp
inc
adc
bound
repz
test
lret
fcmovnbe
movsl
add
bound
push
or
pop
xor
int
and
loope
inc
stos
mov
iret
xor
mov
testb
ss
out
insb
orb
jo
cmp
mov
aas
cli
fistl
stc
sbb
push
mov
shll
xchg
movb
ret
mov
ret
fcomps
stc
jle
popa
shl
lahf
dec
sub
xchg
rcrb
lret
inc
and
pop
movsb
sti
fcoml
daa
cmpb
test
jle
adc
sbb
push
jae
push
push
push
je
pushf
sti
adc
cltd
loope
leave
sub
adc
jno
mov
lret
dec
repz
ret
push
mov
or
lods
push
ljmp
lret
add
scas
jbe
xchg
mov
push
xchg
push
lret
cmp
out
sbb
cmc
or
dec
ficoms
dec
mov
or
dec
xlat
push
aam
mov
roll
pop
pop
nop
mov
and
and
add
xor
adc
shlb
popa
sti
mov
push
add
jbe
jae
out
fs
andb
sub
pop
ljmp
enter
or
cmp
push
pusha
sbb
sub
push
sub
mov
lret
xorl
jg
cld
push
in
cs
adc
fdivrl
inc
aad
sbb
cmpsb
imulb
pop
mov
fiadds
insb
dec
shl
fldcw
cli
push
or
or
dec
inc
xchg
push
mov
adc
fcomps
andl
cmp
test
mov
xchg
gs
outsl
mov
mov
pop
cmp
jns
jns
jnp
and
aad
xchg
and
cwtl
push
cmp
loop
lcall
pop
test
cmp
ret
and
xor
xchg
pop
lea
push
stos
clc
xor
cmp
cmp
push
es
adcl
sub
xor
mov
subb
xchg
loop
dec
pop
cltd
add
inc
mov
sarl
xor
xlat
push
shlb
jb
das
sub
add
shlb
xchg
mov
jle
dec
lock
dec
icebp
pop
rclb
outsb
xchg
cld
popf
daa
lahf
jo
or
add
lock
xchg
mov
lock
fcomp
inc
scas
outsb
dec
push
dec
cltd
pop
cltd
addr16
adc
push
mov
xor
jle
pop
sarl
pop
aas
stc
cmp
out
adc
cmc
out
dec
lods
cs
out
xchg
movsl
leave
outsl
and
aad
cmp
inc
in
pop
pop
inc
add
push
pusha
icebp
xor
add
lea
dec
pop
mov
xor
shll
inc
int
pop
out
pop
dec
push
lret
cmp
sub
mov
mov
xor
es
movsb
mov
lods
subps
faddl
arpl
loop
pop
shl
addr16
std
cmp
std
das
mov
xchg
inc
jecxz
adc
fdivl
mov
hlt
jae
jno
push
ret
jns
out
adc
test
gs
jae
jo
mov
add
push
in
in
nop
test
out
loop
cmp
insb
enter
pop
xchg
xchg
int3
sub
pop
add
push
sbb
mov
nop
sarb
mov
popa
fisttpl
push
sub
adc
popa
aaa
xchg
gs
mov
fisttps
lahf
push
push
mov
pop
mov
jns
mov
loopne
and
pushf
sub
aaa
adc
mov
sarb
movsb
pop
add
jae
mov
idiv
mov
into
test
mov
cmc
ljmp
sub
sbb
mov
mov
jo
cmp
and
repz
sub
out
or
lea
adc
iret
arpl
lea
cmc
int3
and
jae
ljmp
xchg
sbb
sub
hlt
fld
inc
sub
sub
movsl
xchg
xchg
push
inc
lret
mov
and
fldenv
scas
mov
das
ja
mov
mov
inc
jg
mov
js
iret
lods
pop
arpl
inc
cli
pop
push
in
dec
mov
dec
mov
or
add
cmp
dec
pop
mov
test
jbe
mov
lahf
into
or
jne
jge
enter
mov
leave
mov
mov
rorl
dec
pop
fstpl
insl
xchg
repnz
std
mov
mov
scas
es
popfw
leave
ljmp
jp
pop
xchg
mov
std
mov
xor
sbb
cmp
imul
push
mov
movsl
mov
xor
lcall
pop
incl
inc
les
or
ror
dec
out
lock
out
daa
cmpsl
stos
cmp
mov
pop
xchg
sub
jo
jl
loope
es
mov
xchg
outsb
fcom
and
sbb
fsubl
xchg
arpl
mov
mov
or
and
int3
push
inc
jne
dec
inc
leave
mov
add
xchg
loop
outsb
cltd
dec
mov
xor
lea
mov
in
dec
outsl
sbb
xchg
mov
jno
rclb
fisttpl
lods
add
push
inc
ja
xor
mov
push
inc
addb
addl
cmp
shrl
add
mov
inc
and
mov
ljmp
xchg
mov
xchg
mov
sbb
fiaddl
aam
mov
xchg
jle
pop
sbb
ja
iret
mov
insl
mov
xchg
pop
mov
mov
daa
call
and
ficomps
repnz
cmpsb
jo
add
cmp
out
dec
and
push
jbe
iret
jmp
add
add
sub
xor
mov
lcall
mov
mov
mov
mov
testl
jnp
pop
xor
add
cs
cmp
inc
cld
fcomps
pop
loopne
pushf
cmp
dec
pusha
jno
lahf
fbstp
adc
mov
stos
mov
faddl
xor
inc
lds
fistl
outsb
cmpsl
in
add
dec
add
push
mov
aad
push
adc
lea
adc
inc
rclb
icebp
mov
addr16
xlat
daa
and
aaa
or
std
inc
sbb
fisubrl
xchg
pop
shlb
lahf
aam
mov
icebp
mov
xor
jnp
fisubrl
inc
push
mov
in
mov
mov
lahf
sti
stos
lods
or
in
mov
jmp
loop
iret
stc
cmc
jecxz
mov
rcr
mov
icebp
jnp
xor
xchg
loope,pn
loope
and
sub
adc
idivb
aam
pushf
sbb
repnz
jle
mov
ficoms
cwtl
dec
test
fwait
movsb
test
lret
dec
mov
jo
pop
push
cmp
push
cmp
and
int3
push
jb
ljmp
js
out
not
data16
push
mov
sbbb
shll
movsl
call
ret
pop
mov
out
mov
xchg
push
and
sbb
and
mov
mov
test
lret
push
int
negb
adc
pop
adc
add
shll
dec
mov
lret
test
push
or
inc
mov
movsb
mov
sahf
jmp
aam
mov
mov
insl
mov
gs
pop
mov
clc
or
push
inc
pop
sbb
xchg
mov
aas
sub
mov
mov
inc
pop
cmp
xchg
lods
sub
xor
inc
popa
dec
in
sahf
cli
clc
cmp
leave
jl
adc
add
in
ja
ljmp
sti
cltd
out
xor
xchg
daa
pop
inc
and
sub
mov
push
inc
adc
mov
push
mov
push
dec
ja
pop
add
ret
dec
cmp
call
fdivrs
add
jo
xchg
ljmp
mov
ret
negl
push
cmpsl
enter
test
sbb
add
mov
jns
fisubrs
aad
lds
dec
mov
lahf
jecxz
fcmovbe
fnstcw
gs
add
jnp
fs
push
xchg
or
clc
and
hlt
adc
xor
insl
dec
dec
dec
or
and
scas
and
sub
jae
or
cmpb
xor
stc
pop
mov
xor
test
mov
mov
jb
add
push
mov
xor
out
lods
inc
cmpsl
mov
movsl
add
pop
adc
sub
incl
hlt
sbbb
out
and
pop
fldcw
push
arpl
pushf
in
pop
xchg
and
lock
cmpsb
jp
adc
jg
mov
cmc
ds
push
nop
pop
inc
sub
inc
cmp
xor
in
loop
push
mov
cs
dec
inc
and
in
cs
push
ficoml
xlat
sub
xchg
xchg
insl
xchg
inc
data16
sub
jg
shll
jo
xchg
into
adc
out
jno
jbe
mov
insl
ja
pusha
xchg
pop
aam
pop
das
rcrb
out
ss
cmp
mov
mov
cmp
insl
sahf
jno
push
sbb
push
into
add
pop
sub
stc
and
mov
int
xchg
cs
mov
shll
aad
mov
push
fdivr
mov
loopne
and
pop
jb
or
icebp
data16
mov
xchg
push
std
rcll
push
mov
imul
or
push
mov
iret
sahf
and
lcall
xchg
mov
test
mov
sbb
mov
add
shrb
mov
add
xchg
dec
fnstsw
mov
mov
aas
fstpl
rorb
cmc
mov
pop
mov
sbb
inc
dec
lcall
dec
and
dec
dec
in
mov
pop
jl
mov
push
inc
fisttpl
or
mov
mov
movsl
adc
es
popa
jg
imul
loope
pop
pop
pop
addr16
std
add
ret
mov
or
jne
ret
add
mov
ret
jecxz
dec
ja
cwtl
dec
out
imul
outsl
ss
shlb
fsubrp
fildl
xor
aam
jnp
hlt
push
int
sarb
dec
add
scas
ret
or
in
out
gs
stos
xchg
test
mov
mov
sbb
call
or
xor
or
xor
mov
sub
pop
lock
push
daa
fstps
push
mov
add
ljmp
mov
sarl
pushl
xor
jnp
stc
rcr
aas
sarl
add
cwtl
ds
dec
aaa
lea
push
nop
mov
jno
inc
gs
sbb
mov
sarl
inc
ret
mov
xor
pusha
add
dec
and
mov
sub
test
fidivrs
mov
shlb
or
das
push
inc
adc
mov
shlb
stos
push
adc
mov
js
adc
and
enter
pop
xor
lret
inc
mov
cmpsl
push
cmpsb
test
push
sbb
loope
sub
popa
movsl
jp
dec
xor
cs
aam
xchg
je
je
leave
std
dec
shll
lock
jle
cmp
xchg
dec
divb
cs
icebp
inc
adc
mov
xor
sub
loopne
inc
xchg
mov
ja
sbb
xchg
cmpsl
cld
push
fisttps
out
xchg
imul
mov
cmp
mov
loope
jle
out
leave
out
add
sbb
stc
movsl
xlat
daa
pop
fisttpl
pusha
fisttpll
shlb
push
test
js
or
mov
jb
fxch
mov
pop
mov
scas
lahf
or
test
xor
dec
mov
xchg
dec
nop
cli
sbb
sub
jb
dec
push
out
xchg
leave
mov
outsl
gs
out
popf
iret
adc
xchg
imulb
pop
pop
push
sub
pop
sub
sub
imul
jne
out
sub
rcrb
aam
mov
aam
push
add
cmp
jg
jne
adc
inc
insb
or
mov
leave
inc
fs
push
lret
adc
bound
xor
adcl
pop
pop
scas
rcrb
repz
fisubs
and
sub
in
mov
cli
cmpsl
inc
ja
add
push
push
ds
sbb
mov
fs
mov
out
test
dec
jb
add
push
add
dec
adc
xor
sbb
dec
loopne
mov
xlat
decb
xor
std
scas
or
inc
push
mov
mov
sub
adc
sub
jb
pushf
bound
mov
or
arpl
add
out
add
cmc
mov
ret
test
rorb
or
push
xchg
aas
dec
add
pop
dec
test
sarb
dec
mov
dec
je
cmp
mov
xor
icebp
sub
enter
faddl
sarb
ret
scas
fcoms
cmp
sti
insl
into
out
mov
imul
data16
push
nop
push
mov
sub
out
int
mov
movsl
cmp
push
ret
stc
pop
inc
mov
ds
or
arpl
dec
loop
sbb
insl
xchg
mov
fwait
mov
and
movsb
inc
mov
pop
test
mov
and
xchg
idivl
ja
sub
mov
cmpsb
mov
ret
adc
mov
xchg
out
xor
fcmovbe
icebp
xchg
xchg
add
dec
jp
inc
cmpl
jecxz
push
inc
sub
fwait
xchg
lock
pop
out
outsb
lods
adc
jne
insl
icebp
mov
sbbb
outsl
mov
xchg
mov
or
clc
inc
jbe
dec
xchg
mov
ljmp
hlt
and
ljmp
or
xchg
fistps
movsl
adc
xchg
push
push
sbb
sub
stos
sbb
xchg
test
push
mov
sbb
sub
xchg
sub
mov
cmc
pusha
sub
cmc
adc
in
mov
test
pop
adc
adc
mov
ljmp
push
fstl
lret
or
repz
into
subb
std
pop
aad
out
sbb
ret
jae
push
in
cmp
sti
loope
cmc
ret
xchg
pop
into
testb
and
out
dec
rcll
add
xor
test
xor
mov
mov
lods
outsl
and
idiv
nop
xor
fcomip
mov
jp
cmp
mov
dec
mov
insl
shll
pop
cwtl
cmp
fnsave
cld
push
orb
xchg
and
insb
loop
sub
or
scas
inc
inc
idivb
adc
dec
iret
and
into
or
mov
mov
sbb
mov
push
adc
arpl
or
push
les
jle
int3
pop
pop
cmp
in
sahf
sbb
in
push
dec
mov
mov
mov
dec
xor
or
out
and
jne
scas
xchg
mov
lods
daa
jge
cmp
into
cli
je
pop
push
mov
jl
fwait
or
inc
outsl
ret
lock
sahf
sub
mov
xorb
adc
testl
mov
mov
inc
icebp
mov
mov
sarl
cmp
jns
lock
sub
idivb
or
popa
dec
leave
add
and
jae
ss
pop
lahf
pushf
cmp
or
or
imul
inc
xor
outsl
in
sbb
pop
adcb
iret
pop
in
in
mov
or
pop
loop
mov
mov
mov
mov
jmp
push
in
out
in
jmp
insl
cs
ds
sbb
das
cmc
jb
dec
in
sub
jecxz
xchg
push
mov
hlt
aaa
sahf
cld
xchg
mov
jle
inc
mov
loopne
mov
cld
sub
pop
jg
mov
insb
dec
pop
cmp
inc
leave
out
sbb
cmc
mov
leave
jecxz
and
mov
int
cmp
sarl
lcall
adc
mov
lods
xor
mov
aaa
sahf
inc
inc
inc
adc
fwait
and
sub
adc
jmp
or
add
movsl
loopne
insb
mov
pushf
scas
pop
repnz
jg
outsb
call
fisubrs
test
out
and
push
jl
xor
jle
sbb
pop
mov
test
pop
xchg
sub
xchg
loop
inc
outsl
fisubs
in
mov
push
adc
sub
and
call
inc
lods
aam
call
dec
pop
shlb
pusha
cmp
rcrl
push
cmp
fisttpll
lcall
lret
mov
fistl
jb
push
add
xchg
insb
movsb
mov
mov
into
sub
jne
cltd
std
in
mov
mov
or
xchg
nop
fmulp
sahf
pop
mov
sub
in
fwait
iret
pop
test
jno
dec
mov
mov
out
pop
std
inc
cwtl
sahf
xchg
cmp
data16
push
shlb
pop
cmp
rcr
dec
xchg
inc
push
sbb
xor
add
cmpsl
cmpsl
push
scas
cs
lcall
xor
jp
lcall
rorb
mov
fs
fnstenv
sbb
cmp
inc
jp
imul
ret
cmp
dec
xor
sbb
pusha
out
ljmp
es
pop
inc
jge
inc
loopne
or
cmp
xor
cmpsb
sbb
int3
popf
add
loop
push
xchg
mov
push
es
mov
or
shlb
pushf
pop
or
mov
aaa
call
fcmovb
ss
out
insb
xchg
loopne
mov
xchg
loope
and
jae
ret
mov
fs
pop
fistpl
pop
sbb
cwtl
adc
add
sar
std
and
push
and
add
iret
rorb
bound
pop
sahf
jg
cmp
xchg
add
inc
push
dec
enter
and
mov
inc
cmpsl
fucomip
xor
push
stos
jle
into
or
dec
repnz
inc
pop
pop
hlt
push
test
insl
xor
sbb
ds
or
mov
das
xchg
push
mov
js
adc
pop
clc
int
pop
clc
test
push
mov
adc
jle
ret
sar
pusha
lds
repz
jmp
mov
mov
pop
popa
jle
xor
mov
rorb
sarb
mul
jnp
xor
and
push
loop
out
cmc
loop
lods
daa
inc
das
pop
shlb
mov
mov
test
mov
cmp
fimuls
pop
push
cmp
push
inc
test
sbb
adc
lods
mov
add
inc
inc
mov
inc
sub
sub
inc
icebp
pop
cmpsb
sbb
ja
loop
jns
mov
mov
lds
jle
mov
inc
xchg
pop
incl
lock
into
add
cld
xor
mov
insb
xchg
shrl
inc
call
pop
movsb
pop
cwtl
dec
sub
mov
lret
rcrb
lock
outsl
ret
aaa
mov
jle
mov
mov
push
gs
lock
and
add
stc
mov
es
cmp
iret
pop
mov
std
inc
das
mov
xor
mov
paddsb
xchg
adc
add
jge
ljmp
je
xor
sbb
mov
or
or
addl
rorl
lods
dec
push
mov
mov
int
push
les
cs
jp
add
mov
jp
lahf
mov
inc
xchg
mov
xor
enter
mov
lods
xor
inc
icebp
movsl
shrl
ret
das
adc
xchg
fidivs
jne
mov
fs
xchg
or
mov
pop
cmp
add
lret
sub
cs
mov
sarl
bt
aam
fidivrs
in
nop
xor
inc
ds
and
adc
pop
sub
pop
jecxz
pop
dec
or
lods
iret
lcall
loope
movsb
fcomps
scas
mov
lahf
pop
push
sub
scas
jmp
inc
inc
movsb
xchg
in
cli
not
cmp
imul
cmp
or
cmp
pop
cmc
sbb
in
enter
testl
ss
add
jae
fists
pop
jg
xor
pop
sub
sbb
hlt
cmp
add
mov
sub
push
sbb
jno
mov
mov
xor
fdivrs
es
test
fmull
shll
inc
dec
pusha
jg
sbb
test
fmull
test
lret
out
push
ror
jg
cmp
imul
scas
dec
adcl
movsb
jg
adc
jno
leave
insl
cld
aam
lock
mov
mov
in
imulb
lds
out
push
addl
sub
insb
inc
popf
cld
jbe
out
test
push
adc
mov
or
repnz
loop
enter
bound
jnp
imul
jae
lcall
fwait
das
sub
xor
shrb
pop
mov
xor
mov
mov
sti
imul
out
adc
push
sar
mov
loopne
scas
add
jg
lahf
dec
inc
push
stc
cmp
fisubrs
inc
push
add
mov
jns
xor
loopne
xlat
mov
js
insb
inc
lds
aas
lea
add
inc
lcall
and
daa
dec
in
and
adc
cltd
in
and
stos
outsl
insb
sub
jne
mov
repnz
cmp
and
cmp
lods
mov
scas
movb
loop
pop
adc
ds
shll
ljmp
out
xchg
mov
cmp
xchg
ljmp
mov
sub
cmp
andl
pop
dec
in
mov
jle
aas
push
test
sub
shlb
xchg
mov
mov
iret
lods
hlt
inc
xor
xchg
pop
pop
sbb
push
insl
pusha
repz
scas
mov
dec
stos
addl
or
fwait
mov
fcomip
mov
mull
ds
daa
mov
jg
mov
pop
cmp
add
js
mov
adc
mov
mov
test
xchg
sub
jle
mov
push
cmp
jmp
scas
call
push
mov
aaa
out
push
imul
lea
pop
lea
push
stc
sub
lds
push
shl
pop
pop
fdivrl
and
out
pop
imul
inc
outsl
push
fcompl
je
jp
mov
ret
xor
inc
sub
push
cmpb
push
stc
mov
and
adcb
xchg
lret
pop
aad
mov
sbb
mov
inc
popl
xchg
outsb
sbb
rcll
mov
aas
ss
mov
fs
negl
sbb
cmp
lods
dec
loopne
arpl
das
dec
sub
mov
cltd
adc
sahf
add
ss
iret
arpl
leave
inc
adc
insl
dec
adc
mov
testb
aas
xor
dec
lret
mov
jno
and
lea
lea
add
and
fisttpll
call
xor
pop
fidivrl
movsb
loopne
fcompl
lds
mov
sub
xlat
jnp
in
jb
enter
stc
cli
mov
or
cltd
mov
stos
jl
add
and
testl
inc
stos
adc
js
cmp
enter
and
cld
pop
or
lds
rcrl
movsb
mov
and
fadds
clc
cmc
mov
adc
sub
xor
out
cli
stc
mov
cmp
mov
jl
ljmp
cltd
test
cmp
shrb
jmp
sahf
movsl
iret
cmpsb
fcompl
xchg
int
xor
or
cltd
push
dec
outsb
aaa
sbbb
pmaddwd
cmp
add
jno
cmp
jnp
push
and
mov
int
cwtl
cwtl
mov
or
xor
popf
mov
scas
mov
fcompl
pop
pop
mov
xor
mov
sub
push
pop
xor
lahf
fstps
inc
arpl
jnp
add
fisubs
xor
jecxz
or
ss
jg
sub
movsl
jns
mov
fldt
sbb
testl
and
mov
mov
inc
mov
out
lods
bound
jno
and
mov
or
imul
dec
jl
iret
imul
js
push
mov
lds
xor
xor
stc
arpl
cmp
in
es
in
jp
cmp
lods
iret
fldl
xchg
pushf
cmp
cmp
mov
fisubs
aam
adc
mov
xchg
mov
jnp
or
pop
lret
and
mov
int3
or
xchg
outsl
sti
mov
aaa
dec
icebp
and
dec
jl
je
cmpsb
inc
cmc
push
add
fcmovnbe
andl
stos
push
sbb
subb
fldl
mov
fcomip
mov
lock
push
out
lea
cld
push
xchg
aad
jbe
xchg
pop
stos
in
jg
and
mov
fdivr
cmpsl
xchg
or
sbb
pushf
out
daa
jo
push
adc
movsb
lret
cld
mov
add
aaa
cmpsb
lret
pop
fidivrs
mov
cmp
into
ljmp
outsb
ror
cmpsl
movsb
inc
jns
mov
sub
xor
enter
imul
aas
or
fsubrp
out
stos
ss
cmpsb
nop
ds
outsl
clc
inc
add
ljmp
push
jmp
fbstp
jb
fs
loopne
and
fwait
ljmp
add
int
cmpsl
loopne
loop
mov
imul
lods
nop
cmp
sub
or
outsl
loopne
dec
push
mov
aam
jecxz
lock
movsl
fiaddl
stos
stc
inc
out
sti
stos
leave
cmp
pop
push
in
cmpsl
mov
dec
fmul
enter
shlb
push
lcall
aad
in
sbb
sbb
jbe
lret
dec
and
jp
inc
jle
fidivl
or
pop
out
fwait
cwtl
or
pop
add
cli
insl
outsl
inc
cmpsl
movsb
adc
cmp
inc
xor
icebp
pop
jb
sub
dec
mov
pushf
sub
xchg
cmpl
in
inc
xor
sarb
roll
aas
fisttpll
pop
xchg
dec
push
in
insl
jge
jle
rcpps
test
test
mov
mov
mov
cltd
inc
in
imulb
lods
mov
aam
xchg
addr16
xor
or
inc
sub
mov
xchg
scas
fdivrl
incb
jb
jg
sbb
push
test
arpl
push
testb
aas
sbb
lcall
std
aam
or
incb
add
add
fistps
jnp
lret
sarl
int3
pop
mov
mov
dec
mov
icebp
sub
in
push
jae
insl
das
pop
in
pop
hlt
jb
es
mov
jne
xlat
out
fdivp
add
sysret
int3
out
bound
inc
adc
sbb
inc
pop
and
sub
sti
adc
jge
cwtl
add
mov
mov
imul
xchg
pushf
icebp
arpl
aas
dec
inc
push
jnp
adc
and
in
scas
test
shlb
xor
fiadds
mov
icebp
fstp
adc
and
int
add
rclb
lret
add
add
incb
adc
stc
pusha
sub
pop
sbb
cmc
aam
sbb
leave
and
jle
dec
imulb
xor
cmpsl
cs
das
mov
jno
mov
xor
pop
lret
out
cmp
push
mov
xor
repnz
jmp
mov
insl
pop
loopne
mov
pop
pusha
ja
push
data16
arpl
pop
xor
dec
jns
mov
aad
std
sub
push
add
imul
loop
or
xchg
sahf
cwtl
scas
lock
and
int3
dec
loop
mov
les
xor
add
cmp
inc
sbb
xchg
stc
cmpsb
in
aad
stos
aam
lret
or
push
sub
sub
inc
or
mov
cmp
hlt
sub
mov
inc
sbb
loopne
inc
aam
frstor
arpl
in
dec
pop
stos
loop
out
add
pop
outsl
fistpl
mov
jbe
out
das
gs
popf
dec
push
xchg
adcb
push
sbb
push
dec
push
lods
popf
loopne
and
gs
sub
test
jmp
dec
jne
cmpsl
iret
cmc
fnstenv
mov
in
sbb
lock
or
push
jb
in
out
cwtl
mov
insl
jmp
data16
cld
js
mov
jg
inc
cs
sub
cmp
push
dec
push
enter
push
loopne
dec
mov
movsb
ret
xchg
push
lock
pop
mov
add
insl
sub
xor
mov
sbb
js
dec
scas
xlat
mov
sub
hlt
push
mov
jecxz
push
cmp
fisttpl
lret
xor
sbb
les
pushf
mov
cmpsb
clc
push
lods
mov
sub
push
shlb
mov
push
inc
pop
fcoms
cmp
mov
lret
imul
out
mov
lods
xchg
push
mov
xchg
mov
dec
adc
add
call
xchg
loope
sbb
loopne,pn
xor
jecxz
inc
lea
cli
nop
mov
mov
cs
push
jae
adc
pop
dec
adcl
mov
orl
push
mov
push
sub
adc
mov
inc
jae
pop
pop
fiaddl
sti
lret
shrl
jge
ljmp
movsl
mov
xor
and
mov
cmp
in
and
imul
stos
sahf
sti
sbb
or
bound
adc
fstps
push
push
xchg
mov
mov
lret
es
push
sub
xchg
adc
or
push
inc
push
dec
xchg
jp
loope
push
outsl
xchg
sub
push
pop
sub
sbb
pop
lret
dec
mov
inc
adc
in
mov
xchg
jb
mov
leave
insl
inc
in
scas
mov
push
adc
pop
cmp
mov
pop
add
xchg
cltd
mov
sbb
and
jmp
mov
dec
push
cwtl
enter
sbb
lret
into
jae
and
pop
arpl
icebp
adc
nop
or
icebp
pusha
jne
fsubl
add
stc
pop
dec
and
pushf
fs
lds
test
daa
mov
sbb
or
xchg
lock
xchg
push
loopne
call
pop
jle
push
mov
xadd
or
lret
rorb
cmc
mov
push
ss
adc
test
xchg
adc
cwtl
into
sbb
push
inc
jo
mov
clc
adc
std
mov
sbb
xor
insl
clc
pop
mov
popa
ss
sub
push
dec
insl
jmp
push
pop
push
xchg
cmp
loopne
insb
dec
fadd
mov
adc
xchg
or
push
mov
pop
test
mov
xor
psubb
push
cmp
cmp
fcom
push
mov
fistps
inc
cmpl
stc
daa
test
pop
loop
loopne
sub
sub
sub
adc
inc
in
or
pop
sub
mov
ret
test
int
cmpsl
add
fisubs
outsl
xchg
push
pop
lahf
cmp
rol
cwtl
and
outsb
xchg
lcall
lcall
loope
dec
mov
push
cmpsb
mov
mov
loope
jle
jnp
mov
subb
push
or
xor
jp
loop
in
rol
mov
or
mov
sub
and
jp
mov
dec
stos
dec
nop
testb
cmc
push
jg
sbb
jle
aaa
sub
xor
push
pusha
pop
sbb
push
xchg
outsb
and
and
add
cwtl
fdivs
xor
and
scas
adc
jecxz
fcompl
add
xchg
scas
sti
jo
repnz
cmp
dec
lock
int
pop
movsb
mov
jo
aad
lcall
das
stos
rolb
cmc
ljmp
xchg
xchg
jl
and
fisubrl
and
dec
mov
add
or
popa
mov
and
scas
fdivr
mov
addb
adc
enter
hlt
int
push
mov
out
lea
mov
pop
push
and
dec
imul
lret
dec
or
push
sbb
push
std
pop
mov
pop
sbb
mov
imul
dec
jo
shlb
xchg
por
les
fcmovu
les
xchg
jns
ret
adc
imul
inc
jg
jae
test
sub
shlb
add
xor
hlt
out
mov
xor
sub
xlat
dec
fisubs
pop
xlat
rol
jle
sbb
call
or
dec
push
imul
stos
ds
rcr
lret
divb
orb
or
daa
dec
jp
aas
iret
fwait
inc
lods
int3
filds
dec
inc
dec
jle
imul
xchg
xor
inc
hlt
out
stc
ja
push
jns
sub
mov
mov
je
clc
mov
mov
and
mov
iret
pop
test
sub
iret
sbb
xchg
inc
std
cmp
push
rolw
sub
sub
movsl
pop
jb
dec
push
xchg
xchg
cmpsb
ds
cmp
add
into
das
arpl
ljmp
aas
lahf
fwait
jns
mov
incl
jp
mov
push
dec
shlb
cmp
pushf
loopne
cmp
sbb
andl
lods
test
data16
dec
dec
daa
jmp
inc
lea
cmp
sbb
hlt
mov
loopne
loop
jnp
repz
cmpsb
and
fidivl
sti
dec
or
mov
adc
or
dec
fadds
in
sbb
xchg
cwtl
lock
xchg
cli
ss
ret
mov
sub
and
lds
lret
add
arpl
cmp
push
mov
xor
dec
imul
sbb
adc
inc
je
mov
or
mov
add
aas
mov
mov
sub
mov
lret
addl
inc
int3
mov
xor
data16
mov
inc
xchg
ret
and
fsubr
gs
push
roll
mov
les
enter
mov
add
and
dec
and
jbe
mov
loopne
sub
and
data16
stos
fwait
jnp
negb
pop
mov
nop
and
jno
popf
test
fmuls
mov
push
fwait
dec
and
psrlw
push
gs
sbb
inc
add
idivl
ja
add
fidivs
out
sbb
mov
adc
repz
bound
mov
adc
pop
ss
push
sti
loope
cmc
sti
repnz
lods
into
ss
push
shlb
sbb
ret
xor
sbb
mov
je
pop
loopne
jo
ret
push
dec
add
add
push
cli
xlat
mov
out
ss
sub
test
loop
jmp
xchg
jns
testb
jle
imul
push
xchg
sub
and
or
test
mov
ficomps
mov
pop
sbb
inc
mov
pop
adc
repz
addr16
faddl
push
loop
mov
ss
pop
leave
ss
into
out
adc
mov
aas
scas
mov
aad
fwait
dec
xor
mov
outsl
jp
xchg
jne
inc
sbb
repnz
bound
lods
test
dec
jmp
sub
cmpsl
das
xchg
push
inc
shlb
mov
fistpl
nop
sti
stc
ffree
aad
sbb
sbb
jecxz
scas
jl
idivl
pop
sub
mov
addr16
xchg
and
in
sti
xchg
xchg
xor
add
cmp
inc
mov
or
dec
ficoml
mov
inc
test
mov
and
inc
sbb
pop
push
movsb
sbb
mov
xor
je
fnstsw
call
cmp
cmp
xor
inc
adc
int3
jl
les
jecxz
xchg
jbe
popf
lahf
inc
js
mov
add
int
cld
testb
jge
inc
fldcw
sti
clc
inc
xchg
push
adcb
xchg
fldenv
sub
mov
insl
push
lds
dec
idiv
xor
clc
into
sub
xchg
jecxz,pn
mov
sub
out
xchg
shrl
push
addb
push
jnp
mov
fcompl
les
loop
inc
push
push
and
adc
shrb
jbe
adc
add
fadd
mov
xor
mov
outsl
movsb
cmpsl
arpl
insl
jmp
lea
sbbl
mov
movb
push
push
clc
stc
inc
push
xchg
add
jle
pop
inc
cld
sbb
jbe
in
lea
gs
sbb
inc
push
lods
dec
mov
in
int3
mov
push
push
es
adc
and
push
repz
xlat
jp
in
fsubrs
repnz
mul
cli
or
and
and
cwtl
addr16
mov
ss
jae
xchg
cmpsl
and
mov
dec
cmp
outsl
cmc
cmpsb
clc
ret
mov
push
xchg
adcl
mov
jmp
rclb
cmpsb
sti
lret
sarl
in
stos
lahf
ljmp
inc
cltd
jp
pop
mov
jle
jo
push
pusha
inc
mov
lcall
not
mov
jo
fnstsw
xchg
stos
xor
pusha
insl
lea
push
push
lds
cmp
cmp
pop
pop
cld
push
pop
rcrb
mov
cmpl
mov
mov
inc
addl
in
sub
mov
pop
mov
enter
sub
scas
hlt
jns
jmp
add
add
inc
mov
pushl
jno
jo
cmp
mov
leave
mov
jns
jg
adc
dec
jl
xor
ret
push
lds
dec
clc
pop
dec
sbb
stc
xchg
push
and
scas
shll
inc
xor
dec
push
stc
cmp
sbb
arpl
iret
cmc
pusha
ja
pop
xor
xchg
fstpl
pusha
outsb
shrb
repz
inc
bound
ja
fstpl
jno
js
cmp
or
inc
sbb
mov
movsl
push
test
jl
push
inc
inc
fs
nop
iret
sahf
add
fwait
xchg
inc
adc
add
push
sbb
xchg
popa
imul
pop
inc
cmpb
sbb
mov
adc
jmp
pop
mov
and
in
inc
mov
iret
add
dec
mov
cltd
mov
pushf
sub
adc
cltd
fmuls
jno
xorb
xchg
mov
xlat
adc
cmp
mov
push
daa
clc
cmp
push
test
ljmp
or
mov
push
jge
mov
inc
cmpsl
mov
cmp
outsb
in
cmp
pop
pop
mov
mov
aam
and
test
jle
add
mov
int3
enter
or
push
cltd
push
inc
inc
sbb
or
arpl
or
rorl
std
pushf
pusha
in
out
out
and
bound
cmpsl
xchg
call
lret
push
add
in
enter
sub
mov
jbe
add
out
test
add
fsubr
and
out
jo
fisttpll
jnp
sbb
jns
lret
inc
push
cli
daa
hlt
aam
sub
dec
sub
sti
lahf
ret
pop
inc
or
adc
insl
and
test
dec
sarl
cmp
push
push
fucomip
lods
jbe
fiadds
outsb
hlt
jp
sub
ja
loop
fidivrl
mov
jl
cmc
and
stos
push
mov
push
add
test
lahf
out
xor
sub
in
xor
stc
xorb
inc
fimull
out
sbb
inc
lret
bound
pop
int3
mov
loopne
or
fsubrl
pop
ja
shlb
outsb
outsl
mov
out
mov
add
ljmp
pop
outsb
insb
inc
dec
loop
or
xchg
aas
mov
or
inc
sbb
testb
fisttps
jecxz
pop
cmpsb
fadd
aam
pusha
adc
sbb
test
enter
xchg
cmpsb
sbb
mov
stos
push
les
jo
pop
xchg
adc
cld
sahf
cltd
lds
push
ljmp
ja
mov
loope
jg
mov
cmp
mov
push
popa
insb
cmp
adc
sub
pop
push
bound
rcrl
adc
rcl
sarl
jne
inc
movb
xchg
adc
cmpsl
and
rclb
sub
xor
pusha
dec
subb
or
inc
xor
mov
movsl
jns
xchg
xchg
ret
mov
les
push
decl
cmpl
xchg
sub
insb
cmc
into
jno
lea
jg
sub
inc
sub
push
jb
pop
sub
xor
mov
aaa
sbb
pop
pop
sbb
mov
sbb
jmp
mov
stos
fadd
jecxz
xor
loope
lcall
dec
dec
lods
stos
jne
xchg
cmpsl
push
and
pop
sbb
das
das
icebp
push
mov
lods
push
sub
insl
push
pop
aam
imul
dec
stos
cld
lret
sbb
or
fdivs
mov
test
add
mov
dec
xchg
fs
leave
adc
iret
or
or
fildll
ljmp
pop
cmp
xchg
rclb
xchg
mov
xchg
enter
sub
jmp
pop
in
and
cwtl
imul
or
rol
inc
or
pusha
add
xchg
les
ss
cmp
mov
loope
out
rcl
sub
sub
fsubrs
xchg
pop
jnp
aam
mov
jbe
test
cs
mov
mov
or
inc
fdivs
scas
or
push
add
and
add
pop
out
negb
fcomip
int
sbb
jle
pop
cltd
outsb
aam
lea
adcb
cmp
push
outsl
outsl
ljmp
sub
pop
push
or
lock
shrb
pop
das
adc
mov
mov
pop
adc
mov
or
sub
dec
or
jae
and
fildll
ss
xor
lret
xchg
mov
jmp
fstps
mov
icebp
or
stc
sbb
out
imul
loope
xchg
fadds
ljmp
clc
pop
ljmp
test
xor
inc
mov
adc
daa
int3
test
mov
and
push
push
push
aad
fidivl
mov
enter
call
bound
sbb
xor
jg
in
bound
arpl
pop
cltd
sbb
data16
xor
les
or
fcmovb
pop
imul
mov
iret
in
xor
or
dec
fwait
mov
sub
pushf
push
or
xchg
arpl
adc
jns
push
int3
push
adc
mov
lahf
call
pusha
push
xchg
push
xor
les
push
mov
jmp
and
mov
inc
pop
sbb
cmp
sbb
jl
cmp
fs
aad
ret
cltd
addr16
loope
and
arpl
lret
mov
in
lods
icebp
push
dec
out
insb
lret
or
add
lea
sbb
je
and
push
clc
outsl
mov
mov
push
xor
xor
xchg
dec
iret
outsl
dec
pop
sub
jg
and
push
xchg
mov
mov
test
in
jp
out
pusha
addb
push
lret
pop
out
insl
mov
add
idivl
push
aam
inc
pop
movsl
jle
inc
stos
dec
cmp
popa
cmp
inc
dec
jnp
stos
xor
test
pop
ror
xor
pushf
or
or
xchg
pop
out
push
xchg
pop
rcll
or
and
and
xchg
fbld
pusha
inc
mov
rorl
and
popf
dec
cld
sub
pop
dec
inc
pop
dec
fists
mov
imull
insl
outsl
in
mov
push
pop
jno
mov
jge
int
int
jge
jmp
cs
into
adc
dec
lods
cmpb
push
cmp
add
loope
xchg
xchg
mov
lods
jp
xchg
mov
add
xchg
cli
fs
jmp
adcb
mov
mov
mov
stos
test
and
mov
stos
sbb
pop
sbb
popf
rolb
mov
addr16
cmpl
cmp
dec
lcall
xchg
scas
xchg
test
add
xor
and
mov
inc
add
test
imull
adc
cmp
aam
adc
or
jnp
ret
sbb
pop
sub
in
inc
adc
fisubs
inc
mov
arpl
int3
mov
cmc
imulb
es
icebp
dec
addl
add
repz
fsubs
sub
clc
add
rol
and
outsb
mov
adc
aam
and
pop
mov
das
fs
xchg
cmp
pop
incb
imul
dec
adc
sti
jge
mov
scas
and
out
jns
movsb
insb
loopne
xchg
test
push
fdivp
cli
inc
insl
loop
sarl
scas
dec
int
push
dec
lea
daa
cmp
jae
sub
lahf
aaa
push
cmpl
stc
xlat
and
add
add
and
test
loopnew
cmpsb
mul
cli
popa
out
or
lock
pusha
test
popa
mov
mov
and
xchg
xor
inc
xlat
add
sub
lods
push
cmpsl
incl
jnp
inc
mul
xchg
mov
lods
sub
jnp
xor
cmpsb
arpl
fcmovbe
sbb
sub
mov
outsb
mov
jmp
dec
insl
cmp
in
shl
inc
dec
gs
fcoml
mov
lods
lcall
lds
loop
loope
fmuls
mov
aaa
cmp
jle
cmp
out
mov
jno
mov
aam
mov
cs
and
test
clc
xor
jno
push
mov
lret
notrack
dec
jle
rolb
outsb
hlt
xchg
ja
sub
leave
mov
mov
add
repnz
sbbb
addr16
pusha
int
push
cmpsb
dec
insl
std
repz
aad
loope
out
mov
cltd
fcomp
lret
out
and
mov
xchg
jecxz,pt
dec
mov
stc
sub
lea
jae
icebp
sahf
push
add
push
cmpsl
lock
adc
xchg
in
rcrl
xchg
dec
gs
xchg
cmp
push
mov
test
mov
out
push
fcoml
je
jge
sub
lcall
xlat
shll
sbb
xor
mov
aaa
push
rcl
lds
les
roll
or
int
xchg
std
js
jecxz
es
rolb
adc
jnp
push
mov
out
pop
ljmp
pop
xchg
inc
and
hlt
sub
and
aas
cld
sarl
sub
mov
testl
pop
mov
and
sub
push
rclb
add
push
loope
mov
adc
cld
ficoms
insb
jb
popf
incb
loopne
jmp
or
pushf
aas
xlat
push
enter
call
mov
outsb
pop
mov
add
cmp
mov
sbb
or
pop
ss
movsl
push
push
stos
icebp
mov
fcomps
xchg
jl
repnz
cmp
test
dec
or
stos
xchg
gs
fbstp
mov
daa
mov
inc
push
inc
pushf
and
jb
shll
mov
and
daa
sbb
cltd
insl
cmc
movsl
testl
jbe
dec
mov
ss
push
push
jp
fxch
jl
jae
cmp
mov
and
orb
js
out
cmp
jo
sbb
jl
xor
xor
xchg
in
mov
stos
mov
fadds
push
insl
push
lods
into
xchg
test
dec
imul
push
leave
inc
scas
ds
ss
mov
and
int
fsubl
mov
inc
aam
mov
dec
in
add
imul
xor
push
pusha
popa
xchg
sub
je
fldt
insl
xchg
cmc
or
loop
test
xor
pop
dec
add
mov
fsubl
mov
sub
outsb
xchg
out
mov
out
movsb
dec
out
adc
cltd
fsubrl
push
loop
in
call
add
fs
add
mov
sub
repz
sti
add
xor
mov
push
outsl
ret
dec
or
insb
mov
sbb
inc
fptan
dec
add
xor
mov
shr
mov
push
fcompp
dec
xchg
mov
add
cmp
jle
in
pop
dec
in
mov
ljmp
jno
mov
xchg
push
adc
xchg
sbb
arpl
scas
xchg
out
repz
test
sbb
dec
pop
mov
lods
or
in
pop
scas
out
rclb
mov
dec
jb
sub
sahf
mov
pop
icebp
mov
xor
ljmp
jecxz
in
call
mov
notb
pop
cmc
jmp
push
mov
mov
insb
push
xchg
mov
loope
ljmp
push
or
pushf
mov
cmp
mov
pminub
iret
jns
or
stc
dec
cmp
cmp
add
into
push
in
or
hlt
mov
sub
cmp
xor
clc
test
outsb
cmp
addr16
ficoml
mov
or
frstor
imul
adc
jp
xor
dec
testl
or
mov
mov
pushf
shlb
push
cmp
cmpsl
in
fcomps
repnz
adc
pop
mov
test
ret
push
ja
or
repz
popa
mov
outsb
repz
shlb
cs
mov
xchg
pop
jmp
add
nop
ja
stc
icebp
fbstp
add
es
inc
jecxz
mov
test
das
dec
cld
mov
bound
aas
xor
cwtl
or
or
xorb
sub
xchg
lea
pop
adc
jecxz
jae
and
je
lods
add
dec
jmp
mov
mov
pop
mov
rcr
mov
pop
push
fdivrl
jecxz
in
loop
rcr
lods
add
in
sbb
jp
into
idivb
ds
sbb
xor
jno
mov
dec
ja
out
push
ss
or
or
cmp
and
add
pushf
xchg
add
adc
jp
mov
loope
hlt
lcall
mov
or
insl
mov
cli
inc
add
xchg
dec
mov
scas
ret
push
inc
imul
sbb
movsb
inc
in
jb
mov
popf
ficompl
jo
aas
subb
push
cmpsl
test
mov
movb
push
mov
push
test
cmp
ror
insl
adc
push
mov
add
pushf
loopne
adc
cs
sub
push
cmp
sub
insb
push
sbb
adc
xchg
stos
mov
add
jo
mov
out
les
pop
ja
je
xlat
idivl
and
jnp
int
sub
sub
pop
lods
sahf
mov
adc
jno
xchg
imul
cmp
jne
push
xor
enter
mov
cmp
sbb
jns
xor
pop
dec
repnz
mov
daa
mov
and
mov
mov
jae
lods
mov
pop
mov
sbb
test
jmp
mov
sub
mov
mov
call
ja
and
pop
sti
inc
repnz
mov
push
inc
cmpsb
test
pusha
shlb
lret
lahf
setbe
clc
loope
mov
popf
movhps
sti
cmp
ss
jnp
push
and
out
jle
sbb
repnz
rcrb
aam
aas
jno
sti
hlt
sub
pop
repnz
xor
lret
jl
and
jno
jl
cmpsl
pusha
daa
test
je
pop
shrb
fsub
fadd
scas
pop
xchg
pop
cmp
frstor
sub
sbb
mov
sub
fucomi
ret
sbb
dec
cmpsl
arpl
imulb
ret
fnsave
ljmp
adc
xchg
cltd
cmp
cs
gs
dec
or
mov
cmp
bound
popa
jge
imul
popl
mov
jmp
cld
shl
push
inc
pushl
out
jae
dec
out
jmp
mov
int
and
in
xchg
sub
mov
adc
addr16
lds
hlt
pushf
ret
lds
lea
dec
imul
out
mov
roll
push
shrl
lea
xlat
lahf
insb
cmp
ret
aad
mov
xchg
dec
scas
mov
cwtl
fistps
aam
sbb
inc
loopne
jbe
sahf
or
mov
into
add
pop
xlat
cmp
aas
in
sahf
in
out
jae
mov
push
cwtl
ss
jge
out
les
into
dec
aas
aad
cmp
aas
and
pop
mov
enter
enter
pop
jmp
out
test
icebp
cmp
push
sub
and
arpl
adc
adc
repz
and
outsl
xchg
ret
or
andl
mov
stos
fisttps
add
insb
pop
cmp
lods
out
and
hlt
mov
aad
rcrl
in
nop
xchg
adc
loope
js
cmp
adc
push
jg
sub
lds
fistpll
inc
pop
das
xchg
adc
xor
sbb
popa
loope
inc
ja
mov
cmc
inc
dec
cmpsb
lret
lods
mov
filds
outsb
imul
ljmp
ss
mov
mov
fs
mov
scas
mov
pop
xchg
rorl
pop
call
movsl
mov
stos
sbb
cmp
mov
adc
sub
jae
jle
mov
stos
or
dec
clc
mov
addr16
into
les
into
inc
cmc
repz
sbb
in
bound
test
addl
sahf
add
mov
xchg
int
dec
mov
fisubs
push
adc
adc
fcoml
push
or
dec
push
ret
mov
lret
scas
xchg
mov
cmpsb
pusha
dec
in
and
ljmp
cli
pop
lock
xchg
addl
loope
scas
repnz
cmp
mov
cltd
je
sub
fisttpll
movsl
sbb
popf
jb
in
int
iret
dec
shr
ret
jnp
addr16
sbb
gs
pop
leave
loop
leave
adc
jp
or
loop
jo
inc
and
push
jb
lods
pop
mov
out
imul
aaa
cmp
ljmp
dec
mov
imul
or
mov
repnz
mov
push
andl
mov
mov
aaa
push
ss
icebp
xchg
adc
mov
cmc
in
andl
and
jnp
cli
daa
je
mov
daa
mov
daa
int3
cltd
fisubl
ret
sbb
pop
add
add
xchg
pop
fwait
or
pop
add
repnz
and
cmc
xor
pop
push
pop
cld
sbb
push
movsl
sbb
popa
inc
mov
mov
xchg
mov
add
inc
scas
call
test
aas
fcomps
ja
xor
cmp
dec
mov
dec
mov
loopne
push
sbb
pop
stos
mov
and
pop
and
inc
jbe
pop
mov
push
xchg
xchg
jmp
movsl
and
pop
push
hlt
add
inc
xchg
fwait
sub
or
jnp
lds
push
or
out
rcll
imul
mov
shrl
mov
in
test
cmp
ret
push
pop
repz
ret
int3
sahf
xor
sub
aaa
enter
call
inc
push
sbb
ds
adc
add
dec
inc
push
stos
push
mov
dec
sahf
js
sbb
stos
push
adc
and
sahf
and
arpl
xchg
mov
adc
popf
xor
test
mov
ds
stos
repz
inc
add
sbb
dec
mov
mov
mov
dec
nop
enter
sahf
icebp
fcos
repz
movsl
in
lret
xchg
scas
mov
insb
xor
xchg
and
mov
fwait
jo
dec
addb
scas
repnz
arpl
mov
dec
pop
add
push
push
mov
push
cltd
mov
stc
or
or
pop
flds
mov
stc
out
xchg
mov
jmp
mov
ret
sbb
jne
xor
xchg
out
mov
hlt
add
inc
mov
or
test
cmp
inc
popf
mov
fdiv
insl
jmp
inc
rcll
adc
xchg
sti
fsincos
xor
mov
clc
jnp
dec
sub
mov
mov
xchg
sbb
jae
inc
imul
mov
sub
pop
jmp
ficoms
adc
and
jno
push
cld
mov
mov
add
clc
adc
xchg
mov
out
add
in
bound
sub
je,pt
lock
test
push
lret
loope
test
push
mov
int3
push
stc
and
jp
xor
jl
outsl
gs
add
sub
jg
jge
fisubl
and
mov
xchg
pop
mov
call
clc
jns
dec
out
loopne
xchg
xchg
pushf
sub
fstl
or
leave
mov
lcall
cmpsl
nop
and
sub
push
jmp
pop
mov
mov
adc
adc
sarb
lods
dec
imul
imul
stc
and
xchg
jg
lahf
nop
call
mov
roll
aas
in
push
add
push
out
push
mov
inc
jmp
xchg
xor
add
mov
mov
in
lret
hlt
sbb
jmp
in
mov
mul
fwait
jnp
aaa
test
dec
into
js
and
push
outsl
rorl
pop
xchg
shrb
mov
leave
je
jns
ja
lock
nop
or
loopne
test
lret
fs
cmpsl
fs
addr16
ret
jge
inc
cmpb
or
jae
cmpsb
xchg
les
subb
shrb
icebp
or
cmp
cmpsb
sub
mov
mov
pop
mov
roll
xor
lods
nop
dec
cmp
mov
dec
movsl
lods
mov
sbbl
imul
dec
cmc
es
das
cmp
dec
mov
repz
pushaw
fwait
mov
xor
xchg
jnp
lea
inc
lock
mov
cwtl
fstps
and
movsl
fwait
cmp
mov
inc
outsl
xlat
or
xchg
lcall
stos
repnz
sahf
inc
imul
daa
mov
lea
std
mov
cmp
addr16
and
mull
rorl
fnstenv
xchg
xor
jb
pushf
outsb
aad
popf
jbe
int
or
push
lds
push
mull
stos
xor
mov
sub
lcall
js
mov
cs
dec
inc
mov
hlt
or
sbb
stos
push
jg
insl
int3
xor
mov
pop
jmp
mov
jecxz
add
mov
mov
mov
xchg
mov
adc
shl
in
mov
data16
pop
test
and
or
pop
push
enter
inc
and
and
shl
pop
push
jp
sbb
mov
push
xor
sbb
xor
cli
and
mov
xchg
repz
hlt
js
cmp
cmp
inc
mov
ja
ljmp
push
lock
stos
es
test
and
js
into
scas
mov
in
test
dec
adc
and
mov
pop
jl
push
hlt
dec
lea
cmp
add
adc
mov
dec
pmaxub
pop
pusha
in
ljmp
leave
out
in
fs
lahf
pop
sbb
push
call
inc
push
fildl
push
addr16
or
movsb
fwait
mov
mov
push
add
sbb
dec
sbb
bound
in
adc
jmp
ret
pusha
xor
jecxz
cmc
jnp
adc
add
mov
dec
jle
loope
cmp
std
outsl
mov
lea
stos
pop
scas
sub
cmp
data16
std
pop
in
in
jbe
test
ret
sar
sti
jmp
out
jecxz
lods
pop
xchg
xor
roll
insl
mov
fadd
leave
sahf
xorb
nop
inc
je
cmp
outsb
aas
loopne
xor
jno
mov
xorl
add
movl
lahf
stos
addr16
dec
adc
jmp
mov
cmpsl
cmp
fildl
ret
addb
mov
or
lds
or
out
fnsave
pop
sbb
loopne
or
mov
xor
mov
imul
ss
repz
mov
pop
fists
sub
xchg
pushf
add
and
pop
ret
adc
icebp
cld
dec
xchg
pop
dec
mov
movl
jnp
pop
loopne
lods
mov
cmp
or
xchg
jp
nop
sbb
push
push
lahf
xor
rolb
mov
imul
sbb
and
shll
dec
dec
lcall
leave
jo
jl
add
cltd
mov
es
hlt
int3
sbb
mov
cmp
xchg
mov
jnp
cmpsb
mov
mov
fmuls
mov
jecxz
mov
push
xor
test
inc
cmpsb
ret
jmp
sub
push
pushw
add
lods
loop
add
aam
lods
cli
mov
push
inc
sub
lods
ja
nop
fs
jg
pop
dec
mov
bound
sub
inc
jae
shrl
movsb
les
or
jbe
push
mov
test
sbbb
mov
mov
jne
jl
pop
mov
cmpsb
fnstenv
aad
mov
inc
adc
movsb
push
dec
inc
ds
add
leave
data16
das
lds
pop
xor
jo
pop
xchg
cmp
push
pop
xlat
mov
pop
push
hlt
sub
pop
sbb
das
iret
neg
adc
jno
aam
mov
int
scas
call
inc
stc
mov
mov
mov
daa
sarb
xor
jno
repz
jae
sub
cmp
mov
in
pop
sub
xchg
inc
inc
dec
fs
jp
and
aam
mov
pop
adc
pusha
adc
mov
mov
fiaddl
lret
std
clc
ds
push
les
inc
lahf
xchg
cld
imul
jl
inc
int3
xchg
pushf
and
or
sub
scas
rol
cmc
aam
movsb
testl
mov
mov
loopne
imul
mov
sub
pop
in
cwtl
jle
or
pop
lcall
push
iret
sub
imul
mov
add
popa
outsl
arpl
mov
jnp
daa
mov
mov
inc
push
pop
nop
jbe
jbe
cmpsb
mov
jb
sub
fwait
pushf
roll
enter
pop
jecxz
pop
adc
sbb
fcmovnu
mov
jge
dec
pop
xchg
sub
loopne
pop
nop
mov
sarl
mov
lds
cmp
fwait
inc
or
cmp
xchg
xor
ja
jns
fildl
mov
mov
sbb
movsl
push
jge
daa
add
inc
imull
pop
dec
shrb
add
imul
stos
cmp
or
lret
pop
lods
arpl
mov
xchg
lea
jg
pop
push
mov
push
sub
popa
dec
in
les
enter
aam
push
les
jne
dec
loop
mov
ror
jg
scas
std
mov
mov
fdivs
aas
call
insb
push
aas
scas
and
clc
pop
xor
xchg
or
cld
mov
add
add
cmp
sbb
inc
cltd
jl
mov
or
mov
lock
cmp
sub
je
push
cmp
fnstenv
insl
inc
jmp
lea
xchg
push
add
mov
cwtl
add
movsb
lds
mov
insl
scas
pop
out
fidivl
push
inc
into
pop
cltd
mov
pop
test
inc
pop
ret
inc
aam
jmp
lods
mov
inc
mov
loop
sbb
gs
pop
pusha
js
insl
adc
sbb
cld
push
lahf
cltd
mull
dec
push
fildl
rcl
pop
shll
repz
ljmp
test
jb
sub
gs
lock
leave
mov
je
movsl
pop
xchg
mov
inc
into
inc
sbb
mov
inc
lret
out
xlat
mov
jmp
scas
pushf
in
scas
and
dec
punpcklwd
pop
fidivrs
mov
sub
test
add
jl
or
inc
sti
jo
xor
std
subb
fisttpll
fwait
push
outsl
mov
enter
xchg
mov
test
or
shll
cmpb
popa
pop
sbb
sbb
sub
ja
xchg
pop
in
cmp
or
cmp
xchg
fwait
sub
sub
cmp
adc
sbb
sar
push
mov
jmp
std
cmp
loopne
jge
xchg
shll
lahf
adc
incb
xchg
push
jb
ja
repz
daa
jb
pop
adc
pusha
mov
mov
mov
sarl
sarl
sti
repnz
xor
lret
lods
jl
call
pushf
adc
mov
stos
stos
cmpsl
in
test
or
hlt
pop
push
jg
fimuls
xlat
cmpl
pop
lret
pop
je
pusha
loopne
bound
std
jmp
imul
jg
cld
inc
cs
iret
into
test
inc
in
stos
xchg
dec
cmp
addr16
jns
xchg
ret
popf
rorl
mov
jns
in
sbb
xchg
loope
mov
pop
daa
adc
negb
mov
out
adcb
int3
xor
add
and
mov
mov
jbe
xchg
das
or
push
cmpsb
jecxz
mov
mov
cwtl
adc
cli
aaa
xor
cmp
xchg
push
std
loopne
cmpb
js
lahf
sbb
mov
add
push
inc
cwtl
pushf
cmp
jg
movsl
mov
xor
add
cmp
or
cmp
lock
mov
out
in
add
fnsave
or
scas
aam
jns
pop
pop
inc
jnp
ds
es
cmp
in
stos
incl
test
push
cs
mov
sub
ja
movsb
jbe
sub
mov
lret
add
iret
add
lahf
les
mov
push
xchg
inc
cld
sub
adc
cmp
lds
add
mov
push
sbb
shlb
adc
je
inc
out
or
push
test
aaa
rdpmc
repz
ret
push
in
fs
xlat
subb
mov
rol
or
int3
xchg
sub
lret
pop
push
pop
mov
add
add
and
push
inc
inc
or
iret
add
ljmp
mov
aad
mov
es
cmpsl
xchg
mov
inc
lods
add
push
dec
inc
cmp
std
lods
mov
into
cwtl
mov
insl
sbb
in
repnz
xchg
jno
xchg
sub
ficoms
xchg
mov
sbb
sbb
out
ret
outsl
arpl
jle
jne
push
repnz
aaa
push
lock
sbb
shrl
movsb
rcr
adcl
mov
mov
mov
mov
outsl
fadds
andb
push
add
into
xor
mov
or
dec
pop
inc
std
orl
fldt
sub
ficoml
mov
je
pop
mov
push
mov
xor
push
aaa
sbb
or
in
test
sub
mov
cmp
lock
sarl
jne
js
add
mov
add
sub
jle
outsb
inc
ljmp
adc
mov
fdiv
jge
pop
mov
dec
clc
lock
imul
movsl
cmc
data16
ficomps
jae
les
das
mov
in
popf
outsb
sti
decb
pop
mov
aad
inc
ss
call
adc
outsl
inc
pminub
sbb
fistpll
jbe,pn
pop
jnp
movsl
pop
aas
test
fcom
test
and
mov
dec
jl,pt
mov
into
out
cmp
icebp
mov
scas
dec
add
enter
andb
or
push
xor
loop
js
bound
mov
or
hlt
cmpl
nop
inc
mov
stos
test
push
mov
push
mov
inc
and
cmp
or
sbb
sub
push
imul
sub
adcl
xor
addr16
or
mov
jno
fs
ret
ds
js
cltd
xchg
repz
adc
pop
jne
in
add
mov
pop
cmp
ror
dec
push
rcll
mov
xor
ss
add
dec
test
xor
in
or
int
add
xlat
stos
popa
pop
xor
decl
je
mov
mov
cltd
mov
shll
je
loopne
movsb
dec
fisubrs
addl
sbb
icebp
and
jle
lcall
pop
out
scas
les
stos
push
dec
mov
fidivrl
faddl
repnz
ds
loopne
test
dec
test
xchg
sub
inc
xor
xchg
andl
jbe
mov
pop
jb
mov
cmpsb
add
int
cmp
outsl
gs
mov
lcall
jne
or
and
jle
lods
sti
jg
sbb
pop
xor
lods
out
std
pop
subb
inc
sti
lea
xchg
iret
adc
mov
loope
or
dec
push
lcall
test
dec
pop
sub
or
push
out
lret
enter
jecxz
int3
call
push
cld
mov
dec
and
fsubrl
cmp
push
repnz
mov
add
stc
xor
xor
fcmovnbe
in
sub
dec
mov
xor
mov
rcl
inc
inc
mov
rorl
or
adc
cmp
outsb
test
jle
cmp
mov
xchg
dec
xchg
inc
imul
and
xlat
in
pop
sti
sbb
aam
mov
xchg
call
add
jmp
out
mov
xor
ret
push
in
fidivrs
arpl
push
sub
ljmp
scas
lret
and
xor
inc
xchg
push
fldenv
push
bound
stos
mov
fsqrt
call
xor
inc
xor
repz
cwtl
mov
sbb
ror
push
inc
loope
hlt
rcl
lcall
bound
jmp
pop
sbb
and
mov
push
add
mov
or
pop
jle
xchg
mov
sub
dec
in
icebp
aaa
outsb
add
xor
mov
mov
inc
add
dec
imul
and
js
sbb
out
or
sub
pop
xor
stos
cltd
and
mulb
lret
jecxz
cld
mov
imull
shl
cmp
add
int
repnz
jbe
jecxz
cli
fidivl
xchg
pop
pop
push
ret
adc
or
bound
and
jns
loopne
xchg
jb
sub
jo
shrb
pusha
arpl
call
scas
add
and
scas
cmp
int3
icebp
je
incl
mov
ret
push
into
mov
outsb
je
xlat
xorb
aaa
push
push
push
mov
xor
lret
cmp
scas
pop
int
cmp
sbb
mov
dec
cmpsl
daa
xor
icebp
or
add
loop
arpl
lods
lahf
mov
inc
fmulp
inc
and
sti
adc
dec
lret
mov
mov
and
xor
test
in
daa
inc
fists
pop
stc
xor
movsl
xchg
jno
cmovb
test
es
xchg
mov
ljmp
int3
mov
cwtl
xor
xchg
fwait
dec
sbb
lahf
xor
pop
ljmp
jns
cmp
mov
fisubl
xor
mov
dec
or
xchg
add
aas
xchg
incl
hlt
push
push
or
or
mov
push
push
repnz
jl
cld
push
mov
cmp
fildll
mov
popa
nop
xlat
jl
jmp
jnp
sub
and
cmp
sbb
mov
ss
sbb
xchg
rcrb
fdivs
aas
mov
call
lret
mov
mov
jmp
inc
xchg
pushf
fmuls
adc
scas
idiv
cmc
pop
inc
fsubl
inc
aaa
jecxz
adc
lods
nop
les
scas
mov
mov
test
dec
sti
out
jge
sarl
xorl
pop
add
adc
ret
push
sbb
dec
scas
in
cld
lahf
add
and
xchg
ret
adc
fwait
insl
nop
jg
cmp
sbb
inc
pop
cmpsl
repnz
pushf
inc
int
pop
sarl
in
add
xchg
sub
arpl
sbb
sti
xchg
pop
jge
es
add
das
adc
mov
lret
xchg
push
xlat
fadds
mov
push
xchg
push
ljmp
and
dec
push
filds
fcomip
dec
add
add
mov
repnz
inc
orb
pop
inc
jae
insb
lret
pop
cmpsb
aaa
lret
jne
cld
xchg
leave
adc
call
dec
pop
inc
ljmp
mov
pop
cmp
xor
arpl
and
xchg
pop
call
mov
inc
add
push
ja
ja
jbe
xchg
rolb
jbe
push
aam
add
lret
mov
xchg
add
fisubrs
xchg
loopne
cmp
pop
push
sub
mov
inc
icebp
adc
xchg
test
jl
inc
addb
fwait
mov
insb
data16
bound
insb
rclb
outsb
out
xchg
jmp
cmpsb
rol
pop
dec
mov
cmp
shlb
mov
lret
inc
mov
mov
pushf
dec
repz
mov
in
push
rep
mov
fcomps
lock
mov
and
mov
jle
jbe
adc
es
dec
inc
adc
push
inc
mov
sbb
popf
mov
imul
push
cmpsl
mov
aas
cmpsl
add
outsl
inc
add
and
lods
inc
add
and
jnp
mov
ds
lret
cltd
gs
pop
testl
nop
call
push
insl
shll
das
cld
aas
xor
inc
mov
fstpt
push
pop
push
mov
repz
mov
insl
pushf
mov
repz
sbb
pushf
mov
xor
in
inc
xchg
sbb
mov
adc
popf
aaa
rcr
into
out
add
jae
sub
jo
insl
cwtl
in
repz
inc
push
mov
xor
ret
dec
enter
icebp
lods
loop
inc
jl
pop
adc
aaa
fdivl
les
dec
shll
adc
fdivrs
lret
cmpsl
lods
lcall
shlb
mov
add
out
pop
mov
adc
dec
cmp
sub
dec
insb
fdivs
dec
pop
add
scas
and
mov
test
inc
outsl
cmpsl
adc
pop
and
loopne
iret
jns
sub
dec
ret
hlt
mov
mov
and
mov
or
and
or
mov
rcrb
push
lock
push
mov
jmp
and
xchg
mov
lods
mov
xor
mov
xorb
add
adc
flds
lea
js
xor
std
iret
imul
dec
jmp
hlt
dec
andb
inc
jb
dec
adc
lods
stos
or
adc
adc
dec
in
cmp
icebp
cs
call
inc
add
inc
mov
cmp
sub
lock
adc
xlat
mov
outsl
shll
hlt
hlt
test
cmpsb
roll
lret
cmpsb
adc
and
aam
cmpsb
and
mov
or
sbb
fdivs
stos
lret
popf
inc
jae
xor
arpl
pop
xor
mov
leave
in
stc
push
lock
sbb
jmp
jae
xchg
add
std
cmp
xchg
mov
or
mov
test
mov
fsubrl
sbb
xchg
inc
jg
stc
rcll
sbbb
cmpsl
stos
pop
jp
push
lahf
lods
mov
xor
andb
testl
loop
jbe
push
cmpsl
add
xor
pop
mov
rcrb
adc
mov
add
popf
test
push
jne
fiadds
mov
leave
mov
dec
xlat
xor
mov
inc
int
add
mov
enter
xchg
inc
das
pusha
ljmp
mov
sbb
aaa
mov
inc
inc
and
push
outsb
jl
dec
insb
jne
cmp
leave
mov
pop
mov
xchg
out
xchg
lea
cmpsl
push
xor
daa
mov
lahf
rcr
jbe
and
lret
enter
or
cmovge
sbb
fs
fcoms
pushl
jmp
xchg
sahf
push
lcall
cs
add
sbb
jp
sbb
ds
jmp
aad
aam
cld
popf
adc
ret
mov
jns
inc
lods
call
xor
jns
push
in
fwait
push
mov
xchg
movsb
add
push
arpl
mov
stos
dec
xor
aam
ds
xchg
lret
pop
jmp
cmpl
cltd
loopne
popl
shll
lret
stc
ret
mov
mov
fsubp
or
adc
xchg
shl
mov
push
dec
inc
mov
testb
pop
test
and
sbb
movsl
call
pop
push
xchg
jmp
add
fisubl
mov
cmp
leave
jno
sub
sysenter
jecxz
call
ficoml
test
rorb
xor
icebp
enter
and
adc
lcall
mov
lret
cmpsl
negb
sub
mov
xor
sti
xchg
mov
add
hlt
shlb
push
sbbb
shlb
or
xchg
fcompl
push
lods
xchg
and
arpl
push
mov
dec
icebp
sbb
inc
mov
mov
sub
pop
sub
aaa
pusha
and
insb
clc
hlt
loop
inc
jge
pusha
adc
pop
jmp
xorb
aaa
lock
mov
adc
sbb
scas
cmp
push
mov
mov
aad
sbb
aam
ja
and
int
sub
jno
adc
add
pop
subl
jbe
rclb
xchg
add
iret
mov
call
push
pop
rorb
aas
sti
les
out
stc
in
cmpsb
addl
fnstsw
push
mov
test
movsb
stc
push
les
inc
lret
aad
xchg
sbb
mov
fwait
jg
jle
cmc
rorb
js
sti
mov
sub
das
jle
sbb
mov
pop
fnstsw
repz
lret
dec
iret
sub
cld
test
pop
es
xchg
stc
jecxz
in
je
and
shr
add
mulb
push
lret
std
rol
les
pop
jnp
dec
neg
adc
inc
lea
in
push
imul
sbbb
pop
and
in
xor
lea
inc
sbbb
test
mov
mov
sub
xlat
pop
jp
mov
push
jp
pop
xlat
aam
or
shll
cmp
or
and
test
dec
sbb
ret
stc
cmp
dec
lcall
pop
shll
adc
std
scas
test
cld
xor
push
mov
enter
mov
scas
sbb
lret
xchg
cs
jns
mov
dec
jl
lcall
push
in
pusha
lea
xor
repz
push
mov
roll
fstpt
ljmp
and
sbb
icebp
add
sbb
dec
pusha
push
adc
mov
push
push
loopne
out
jnp
fdivl
pop
mov
sub
pop
add
ja
or
stos
cld
call
loopne
cmpsb
stos
push
in
ret
mov
xlat
repz
movsb
and
or
inc
insl
jle
jl
adc
fst
test
xchg
in
cmp
push
dec
aad
mov
cmpsb
pop
and
cwtl
mov
testl
lret
fwait
out
inc
pushf
dec
movl
pop
mov
xor
xor
pop
in
sub
jb
shrl
pop
es
leave
or
cwtl
es
loop
xchg
call
stc
mov
arpl
pop
in
and
into
loop
sub
sub
cmc
sbb
std
outsl
not
push
push
xchg
stos
cld
mov
cmp
mov
daa
sub
outsb
or
inc
push
sub
adc
lcall
adc
pop
mov
xchg
fwait
sbb
mov
mov
scas
loope
rcll
sbb
inc
mov
std
lds
mov
dec
inc
orb
inc
jbe
loopne
bound
orl
mov
in
cmp
sub
cs
dec
sub
push
push
jae
sbb
pusha
sahf
push
dec
push
pop
pushf
repnz
rep
scas
sub
clc
push
in
movnti
add
fbld
js
popa
out
add
add
jae
out
pusha
push
mov
orb
dec
jecxz
in
mov
mov
inc
or
test
jns
enter
testb
es
push
lods
push
clc
jmp
testl
mov
jne
lcall
pop
or
xor
cmp
inc
sub
insl
addr16
cmpsl
ljmp
mov
hlt
cmpsb
sub
mov
and
jge
int3
sti
dec
scas
dec
setno
loope
inc
pop
jbe
sub
add
jle
divl
xor
cmp
xor
mov
jmp
dec
push
movsl
pop
rclb
or
sbb
mov
pop
loop
mov
test
add
aaa
div
and
sub
fiaddl
nop
push
pusha
adc
push
xorl
jp
xchg
mov
std
and
mov
divb
add
test
inc
pusha
repnz
nop
adc
out
lods
push
pop
cs
das
lea
and
sbb
cmp
ss
inc
push
add
imul
mov
cmp
cvtps2pd
jns
push
or
lret
in
add
fwait
and
lods
dec
incb
inc
test
inc
out
lcall
and
xchg
sub
cmpsl
stc
adc
xlat
push
dec
inc
hlt
fistl
pop
pop
repnz
cmp
push
fidivs
and
pop
data16
ja
out
in
inc
jg
xor
sahf
sub
aas
xchg
lret
inc
das
scas
pop
fldt
pusha
stc
inc
pop
andb
ret
lahf
jmp
add
push
sahf
jb
lcall
jbe
sbb
loopne
stc
out
jno
and
in
stc
xlat
in
adcb
into
xor
mov
aam
popa
adc
cli
or
shlb
or
push
lahf
pop
inc
shlb
adc
shrb
cmp
shll
sub
enter
xchg
pop
mov
incl
pop
fmull
add
jnp
jg
xor
bound
aam
add
subl
push
pop
movsb
pop
fwait
es
pop
insb
jb
inc
xchg
xchg
int3
and
sahf
pop
outsl
ja
cmp
xchg
pushf
lock
pop
sub
jb
jmp
sub
gs
add
or
and
pop
iret
das
sub
aam
sbb
mov
loopne
fsubp
pop
dec
imul
xchg
bound
sbb
movsb
xchg
cmp
stos
lahf
xchg
les
aaa
pop
subb
or
cld
and
inc
mov
xchg
mov
mov
mov
enterw
jo
xchg
and
xchg
ja
pop
sahf
push
sub
dec
sub
mov
mov
sub
pop
jl
in
clc
leave
mov
sbb
cmp
push
repnz
arpl
inc
mov
ret
mov
push
inc
out
xchg
adcb
mov
mov
sbb
ljmp
push
xor
or
jb
mov
pop
loop
outsb
cmpsl
lahf
iret
mov
lret
lock
and
push
xchg
sbb
gs
cmpsl
in
xor
adc
mov
and
into
fstpt
mov
mov
dec
mov
cmp
divl
mov
dec
inc
sti
call
sbb
mov
push
and
xchg
jl,pn
cmp
out
add
je
cmpb
mov
xchg
in
test
jnp
idivb
jns
or
aaa
std
lret
dec
aas
test
cmp
cld
dec
jmp
xchg
dec
fsubl
adc
adc
aam
inc
lahf
and
iret
pop
push
sbb
or
test
das
in
cmp
cmp
cli
jns
leave
xchg
push
insl
int3
bound
into
stc
ljmp
jnp
imul
sarb
mov
jmp
sub
fdivr
nop
filds
ss
push
cmp
out
inc
pop
add
push
cmp
and
dec
or
loope
fwait
mov
xor
adc
movsb
outsl
aaa
fcoms
data16
cmp
sbb
fcomps
xor
sub
dec
shlb
adc
fwait
and
inc
dec
ss
xchg
or
adc
aas
dec
fcomp
lret
pop
add
jge
add
mov
inc
loopne
jle
orb
pop
sub
jmp
push
xor
insl
mov
sub
push
stc
shrl
mov
mov
pop
mov
lcall
adc
in
fisttps
add
cmc
sbb
push
cld
loope
push
push
ja
xchg
cltd
das
sbb
add
mov
jl
leave
lret
adc
sbb
mov
mov
mov
sub
mov
push
loop
in
dec
or
and
pop
ljmp
xchg
pop
notb
push
jp,pn
movsl
loope,pt
pop
mov
outsb
repz
pusha
and
sub
and
pop
imul
fcmovnbe
push
and
bound
ljmp
xor
cmp
and
jle
mov
sub
sar
mov
int3
adc
in
punpckhbw
jmp
popf
sbb
sbb
out
jno
adc
xchg
scas
hlt
imul
out
in
push
sbb
jb
jmp
sub
mov
xchg
dec
mov
mov
pop
push
in
std
mov
in
clc
scas
jnp
pop
testb
lods
pop
xchg
lahf
outsb
iret
sbb
repz
jo
pusha
or
add
mov
mov
aaa
fsubrl
jno
jle
and
dec
adc
enter
nop
dec
aad
out
adc
int3
mov
push
lret
xor
gs
push
mov
mov
mov
pop
sub
jno
mov
mov
lods
movsb
fwait
sahf
adc
inc
outsl
std
pushl
sub
push
enter
add
pop
cmp
in
cmp
dec
je
adc
push
sub
inc
jg
sbb
loopne
xor
shrl
cmc
or
cmp
push
sub
jmp
std
xor
out
stos
sahf
jg
jnp
aaa
lahf
mov
sub
cs
dec
mov
and
fadds
xchg
xchg
inc
cwtl
enter
icebp
mov
sbb
sub
mov
scas
movsb
jg
jne
aaa
lds
outsb
jmp
jmp
fcomps
fidivrl
fisubl
cmpsb
mov
out
ljmp
sub
lods
jl
mov
mov
xchg
pop
push
arpl
push
jmp
mov
fsubs
adc
mov
inc
and
ret
mov
mov
jns
mov
lods
inc
lea
adc
loope
addr16
cld
repnz
pop
jbe
mov
mov
test
int3
cli
addr16
xor
xlat
adc
cmp
pop
loop
mov
push
lock
inc
shrb
imul
mov
sahf
push
pcmpgtw
cld
mov
std
sub
mov
ds
mov
in
sbb
lret
les
lods
ja
pop
out
mov
inc
cmp
sbb
aam
mov
lcall
mov
add
fmull
test
andl
jns
jb
lds
or
popa
movb
jae
les
cmp
cmp
js
xchg
xor
dec
inc
pop
mov
push
negl
sub
aam
ds
inc
andb
sbb
les
cmp
cvtps2pd
and
cmp
pop
dec
xchg
pop
adcb
test
pop
leave
jo
outsl
cs
ret
adc
xchg
rorb
adc
sub
dec
lret
pop
test
insl
lret
sub
jl
mov
mov
fisubrs
aas
jns
jae
aam
mov
mov
stos
xchg
add
stos
movsb
int3
int
inc
and
ret
mov
mov
lods
add
pop
inc
in
scas
insl
aaa
lods
cwtl
fmuls
xor
mov
outsl
repz
loop
out
mov
test
ja
push
call
ss
add
lret
ret
pop
out
push
and
cmp
pop
push
add
mov
call
cmpsl
lahf
dec
imul
or
xor
xchg
lret
fadd
mov
inc
sub
xchg
ja
xor
std
loop
mov
rep
leave
in
inc
push
movsb
xlat
js
shl
fimull
sub
imul
jns
or
fiadds
cli
stc
xchg
xchg
cmp
and
mov
pop
dec
inc
call
in
imul
rol
cltd
test
popfw
ret
lret
mov
pop
and
dec
inc
mov
inc
mov
popf
ds
imull
je
divb
xchg
aad
gs
aas
inc
xchg
push
pop
sahf
inc
push
jle
dec
leave
jge
shrl
xchg
pop
xor
mov
fs
xor
and
cmpsb
clc
lret
daa
adc
add
hlt
gs
jo
test
or
add
cli
adc
and
xor
adc
lret
or
cmp
sti
int
add
xchg
and
mov
mov
adc
in
cli
sbb
aaa
push
rorb
jmp
nop
in
lcall
inc
iret
mov
xchg
sbb
jno
pop
fwait
int
push
cmp
xchg
or
mov
xchg
jae
in
rolb
clc
mov
loope
sahf
scas
cmpb
inc
or
mov
pop
mov
lea
cmp
mov
or
adc
push
sbb
js
xchg
mov
mov
adc
aad
pop
aas
ret
outsl
in
aad
movsb
mov
xor
iret
cmp
shr
xchg
jg
push
inc
out
cli
scas
retw
mov
fildll
add
or
pusha
inc
xor
stos
shl
fsin
xor
jg
jnp
fucomp
es
and
mov
adc
cmp
pusha
pop
push
or
mov
cmc
cmpsb
xor
outsb
jne
andl
cvtpi2ps
xchg
or
cltd
push
sbb
adcl
push
pop
imul
inc
fwait
xlat
or
xor
or
dec
leave
jne
sub
xchg
xorb
push
fidivs
push
adc
jbe
lret
adc
iret
pop
sti
or
adcb
mov
sub
mov
ds
out
loop
lret
push
pop
adc
int3
push
mov
inc
fcmove
gs
xorl
cmc
roll
add
jbe
clc
ret
arpl
stc
xor
pop
mov
mov
repz
xchg
xchg
push
xor
xchg
pop
movsl
int
mov
dec
ret
mov
cmp
fdivs
into
xchg
imul
fmulp
jbe
mov
jo
and
pop
jg
mov
sub
xchg
scas
fisttpl
xchg
mov
push
lcall
dec
mov
adc
xchg
add
test
add
and
jmp
push
pop
or
push
in
push
shlb
sub
jecxz
lds
sti
mov
sbb
andb
icebp
jo
cwtl
adc
adc
jne
dec
lods
jle
sbb
cmp
inc
mov
imul
ja
fimull
pushf
xchg
ficoms
pushf
or
loop
jne
movsb
bound
dec
nop
and
iret
xlat
adc
dec
pushf
in
mov
pushf
inc
and
pop
inc
lret
imulb
push
pop
lock
ja
inc
test
icebp
xlat
xor
adc
inc
das
push
pop
push
aam
pop
add
arpl
jmp
call
ficompl
sbb
out
sub
loopne
divl
adcb
mov
sub
test
pushf
arpl
mov
lret
push
push
adc
frstor
push
cmp
push
mov
fcomps
iret
jge
pop
imul
mov
shrb
es
orb
adc
in
rorb
xorl
mov
cmp
arpl
daa
inc
xlat
pop
das
in
daa
jae
test
xorl
pop
xchg
xchg
and
mov
andb
mov
xor
out
shll
mov
icebp
xchg
mov
ret
and
or
mov
pop
xchg
or
sub
enter
jbe
sbb
xlat
inc
lahf
pop
aaa
dec
mov
fwait
push
ljmp
ja
pop
es
lods
sbb
and
mov
push
roll
inc
popf
cmpsb
xor
mov
push
dec
cwtl
mov
jp
movsl
add
pop
hlt
pop
bound
inc
fbld
pcmpeqw
or
lock
jge
jmp
outsb
mov
out
js
popa
mov
pop
dec
push
call
jnp
inc
jle
fs
roll
daa
cmc
sbb
ja
or
notb
ss
pop
sub
adc
pusha
js
cli
pop
push
lcall
jl
mov
shr
ficoms
pop
pop
mov
xchg
jmp
mov
cmp
data16
aad
fs
aaa
sbb
pop
inc
mov
jp
dec
pop
int3
je
loop
mov
push
dec
pop
cmpsb
cs
shlb
dec
adc
das
and
gs
imul
fldl
lods
xor
inc
sbb
in
add
pop
dec
cld
sub
push
aaa
jo
pop
int3
stos
fsubs
divb
mov
cmpsl
hlt
mov
sbb
test
pop
aam
gs
mov
push
std
mov
sub
enter
pop
ds
jg
push
push
dec
push
jb
sub
das
add
add
mov
sub
test
or
lea
mov
pop
stc
and
fldl
shrl
clc
nop
ret
push
mov
xchg
rorl
dec
movsl
ljmp
ds
add
sbb
mov
jmp
inc
dec
mov
scas
mov
sub
sub
push
fucomp
insb
adc
mov
neg
shlb
pop
mov
rcr
bound
xor
adc
mov
and
push
lldt
push
leave
nop
lcall
cld
movsb
mov
jo
fmuls
stos
jmp
cwtl
dec
ljmp
aad
and
sahf
jb
or
dec
xchg
push
sbb
cmp
or
cmp
imul
dec
fs
jg
and
nop
pop
out
cmpsl
push
push
pop
sbb
push
mov
hlt
int3
inc
cmp
push
or
mov
lret
bound
dec
add
adc
sbb
cwtl
rclb
fs
mov
aam
xchg
pusha
cmp
mov
mov
lahf
in
ror
jecxz
mov
nop
pop
popa
cmc
jl
pop
out
std
fst
mov
leave
mov
jge
xor
ds
and
aaa
xor
jge
sub
mov
repz
pop
inc
jb
adc
xchg
xlat
arpl
les
push
sub
cmp
shrb
lcall
sti
imul
xchg
loop
insb
dec
orps
aad
push
roll
mov
in
cli
clc
rcl
iret
jne
jno
push
fstpl
cltd
push
jno
add
stos
jo
test
shlb
xchg
es
mov
sbb
mov
cmp
scas
hlt
hlt
test
cmp
fdivs
jle
or
mov
mov
inc
sbb
gs
mov
lcall
push
in
add
mov
sbb
shlb
loop
enter
jl
and
adc
mov
dec
push
mov
inc
jne
loope
or
lds
add
das
sbb
jae
in
jb
aam
mov
xchg
pop
push
adc
and
dec
xchg
xor
stc
sbb
jecxz
cmp
jecxz
cmp
dec
sti
inc
sbb
mov
add
lods
mov
fwait
mov
mov
mov
sub
jo
movsl
int3
jbe
leave
shr
mov
cltd
mov
sub
out
sub
cmp
hlt
lods
pop
ss
into
out
mov
mov
call
push
out
mov
push
cs
aam
mov
mov
jmp
xchg
andl
sub
pop
jae
inc
pop
test
enter
pop
jge
mov
lods
std
lahf
nop
int3
jg
dec
xchg
sbb
fcomip
mov
outsl
fisubl
adc
xchg
pushf
pushf
dec
call
fwait
in
jne
out
jl
jmp
jmp
or
cmp
out
mov
pop
mov
cltd
xchg
adc
js
loopne
adc
lret
xor
xorl
ja
test
ret
add
data16
or
repnz
fildll
mov
inc
sbb
sti
mov
pop
gs
mov
cmp
sbb
fsubr
jne
repz
ds
std
test
ljmp
mov
jnp
mov
cmpsl
sahf
dec
pop
imul
aaa
xchg
sbb
dec
fisttpl
xchg
push
add
out
adc
cmp
sub
iret
xchg
cmc
lahf
je
lea
pop
adc
sub
or
loope
inc
jl
fisttps
push
xor
sbb
cwtl
test
les
xchg
jo
rcrl
sbb
in
xchg
jno
cs
mov
and
mov
pop
xor
cli
push
cmp
pop
and
loope
popf
jmp
pop
cltd
lret
shll
mov
xor
nop
mov
push
inc
adc
fisttps
aad
dec
scas
jmp
inc
mov
pop
int3
jnp
and
add
outsl
xor
jl
cli
inc
enter
jle
es
mov
cmpsl
rcrl
inc
mov
push
fimull
and
dec
and
push
or
fildll
arpl
and
fldt
cmpb
scas
xlat
pop
shrl
daa
fnsave
sarl
dec
mov
mov
popf
lea
jle
sbb
dec
out
fdivl
and
jo
sbb
sub
imul
pop
push
hlt
lret
mov
enter
fxch
cltd
add
hlt
cltd
dec
push
repz
iret
mov
adc
iret
movsl
imul
inc
daa
cmp
cmp
and
cmp
inc
dec
out
ljmp
sarb
repnz
insb
and
pop
jmp
aam
sub
mov
dec
mov
and
mov
and
das
je
mov
xchg
push
sti
jo
in
inc
repnz
push
cmp
push
xchg
push
and
sub
and
inc
rcl
dec
out
dec
sbb
lock
arpl
iret
sti
inc
shlb
xchg
pop
enter
mov
scas
sub
outsl
repnz
and
dec
outsb
and
xchg
inc
std
movb
and
inc
sub
test
out
xlat
outsl
fistl
adc
xchg
push
out
push
lds
sub
enter
sub
jge
shl
call
cld
pop
cmpsb
mov
loope
xchg
cmp
jp
mov
cmp
cmp
cmp
aam
jecxz
mov
jne
mov
mov
sbb
xor
push
xor
das
pop
js
lret
or
xlat
ds
jae
mov
sub
shrb
adc
pop
xorl
mov
sahf
incb
ds
xchg
hlt
xchg
inc
hlt
std
inc
or
sub
mov
stos
and
mov
inc
add
int3
adc
add
addb
sbb
xchg
jo
fyl2xp1
jo
pop
ljmp
pop
jo
jl
push
push
sarl
lahf
sub
pop
mov
int3
push
pop
mov
mov
jl
pop
int3
sub
and
in
daa
ja
jl
dec
xchg
sahf
test
jg
insb
push
add
mov
xlat
fwait
xor
popl
cmpsb
add
add
pop
lret
and
mov
jp
dec
cmp
push
pop
shll
add
mov
fcmovnbe
and
in
pop
lcall
push
sbb
ds
mov
mov
aam
adc
js
xchg
jno
scas
movsl
clc
daa
or
mov
stc
and
mov
xchg
outsb
sarl
sub
orb
daa
mull
adcl
dec
pop
fimuls
pop
ljmp
sub
xorb
gs
cli
mul
sub
push
add
dec
mov
js
cmp
mov
mov
ja
xchg
jo
adc
add
sub
xor
inc
scas
test
les
cmp
repnz
test
pop
in
add
rcr
add
divb
arpl
daa
mov
xor
sub
bound
scas
orl
or
int3
ljmp
loope
dec
data16
add
xchg
cld
xchg
mov
and
adcl
and
movsb
arpl
add
sub
lcall
lret
sbb
out
dec
mov
inc
ret
shl
mov
lcall
jp
mov
inc
push
cmp
test
lea
repz
mov
sbb
and
push
push
sbb
fidivrs
imul
in
outsb
imul
insb
sbb
lock
adc
clc
pop
inc
xchg
push
iret
pusha
das
mov
arpl
popf
cld
jno
jmp
in
cmpsb
ljmp
sub
lea
sbb
std
mov
test
push
lret
mov
ljmp
enter
xor
xchg
mov
data16
inc
push
aas
mov
pop
rolb
sub
add
ficompl
lock
mov
adcl
xchg
je
mov
cli
mov
xchg
adc
and
rorb
in
jnp
fdivrs
fcoml
or
and
decl
jne
pushf
out
out
dec
jl
scas
orl
cmp
dec
adcb
hlt
ret
adc
cld
or
fildll
popa
and
ret
fcom
rcrb
jge
movsb
dec
addr16
jo
outsb
decb
lret
shld
std
out
xchg
mov
clc
inc
inc
jne
cmp
js
fisttps
mov
sbb
cmp
pop
xorb
or
mov
xchg
out
lret
push
inc
mov
dec
cmc
ljmp
sub
push
cmp
lds
pop
mov
fdivr
mov
jl
les
pushf
mov
lods
les
das
dec
adc
cld
sahf
lcall
insl
or
push
bound
mov
movsl
jbe
sbb
cli
sbb
push
stos
jno
mov
and
pushf
mov
sub
shrb
or
pop
cmp
mov
cmp
adc
popa
sub
cmpsl
rclb
pop
cmp
mov
or
outsl
pop
sub
and
mov
jno
sub
sbb
jbe
xchg
inc
adc
cmp
pop
out
shlb
xchg
dec
sbb
loopne
push
inc
push
add
je
ret
mov
lret
fdivrl
addr16
mov
jp
jnp
and
scas
les
jle
imul
mov
fldenv
add
repnz
outsl
xlat
inc
jae
or
and
shrb
shll
movsb
shrl
jecxz
ja
mov
insb
sub
mov
outsl
insb
adc
out
aam
icebp
movsl
sub
or
loop
or
sti
out
rcrb
cwtl
pop
mov
scas
flds
dec
mov
outsb
jle
or
in
sub
mov
rclb
sbb
sub
outsb
int3
lahf
push
add
stc
xchg
dec
out
outsb
sub
jo
dec
lret
push
or
mov
jnp
lock
mov
enter
fnsave
sarb
mov
fs
dec
add
pop
or
lahf
outsl
xchg
repnz
and
cmp
pop
pushf
sub
push
adcl
insl
fs
xchg
fldcw
test
mov
jmp
pop
mov
adc
insl
mov
add
aad
mov
stos
push
xchg
add
das
xchg
clc
jl
scas
sbb
mov
jmp
loopne
mov
adc
mov
add
jecxz
and
inc
push
xor
fwait
jmp
insb
out
pop
jo
sbb
test
add
adc
xor
adc
fwait
in
xchg
lods
cwtl
popf
aad
sub
xchg
add
sti
dec
stos
pop
push
sbb
push
std
cwtl
jns
jp
inc
and
jb
scas
and
cld
repz
mov
ljmp
push
inc
iret
sub
mov
mov
mov
or
inc
lea
aas
cmp
mov
fs
and
mov
repz
sbb
mov
scas
mov
loopne
mov
popf
pop
popa
popf
push
loope
add
mov
pop
pop
orl
repz
mov
ds
mov
pop
mov
out
test
push
aaa
dec
mov
adc
in
xor
jb
pop
gs
cs
cld
dec
mov
cmp
es
repnz
call
and
in
aad
cmp
daa
lods
mov
mov
inc
or
fsubr
sbb
xchg
xor
jb
imul
inc
adc
xlat
jecxz
loope
xor
jecxz
iret
daa
mov
inc
push
repz
or
and
jmp
push
jp
cmp
aas
pusha
test
outsl
sbb
or
or
jne
test
dec
icebp
cwtl
fadd
loope
int3
mov
or
ret
arpl
xor
cltd
jae
gs
add
add
mov
push
lods
movd
out
sub
push
cmc
adc
xor
stc
xchg
les
push
cld
and
lahf
in
add
sbb
imul
inc
test
or
lock
das
lods
push
sub
sub
xor
imul
add
xchg
pop
out
mov
notl
out
mov
xor
je
mov
push
outsl
das
mov
cs
int3
and
xchg
push
xor
std
adc
cli
cmp
popa
dec
inc
xor
push
inc
lret
mov
loop
mov
iret
pop
outsb
rolb
stos
aaa
lods
sub
jo
mov
add
fucomp
cmpsb
pop
or
or
dec
fisubrs
jb
std
inc
xchg
and
sahf
add
dec
jo
call
dec
sbb
adc
pop
jmp
lcall
xor
call
and
nop
clc
jg
sbb
jp
movsl
addb
jp
into
stos
mov
or
loope
pop
mov
ljmp
adc
leave
out
dec
inc
int
test
mov
inc
fldcw
mov
jo
std
sbb
outsb
lods
in
ror
lahf
in
sub
dec
mov
inc
pop
sbb
clc
and
in
fdiv
dec
mov
cmp
inc
sti
repz
scas
fs
cld
xchg
lahf
mov
xorl
mov
xlat
or
and
pusha
stos
lcall
push
aad
xchg
dec
adc
clc
jo
mov
xchg
mov
in
mov
xor
popa
mov
rcrl
loope
sub
add
cs
imul
dec
inc
mov
adc
scas
jno
push
and
xchg
jnp
js
popf
scas
cmpsl
mov
and
arpl
dec
inc
xchg
xchg
mov
adc
ss
lock
lret
and
arpl
pop
cmp
out
xor
cltd
stos
hlt
scas
inc
insb
pop
cmp
dec
sub
sub
repnz
or
or
clc
mov
repnz
xchg
aad
fwait
or
inc
or
xchg
mov
scas
cmp
in
inc
ss
fldl
mov
loopne
test
or
cld
sbb
cld
movsl
xor
fnstcw
mov
inc
jl
rolb
stc
fistps
sub
in
repz
inc
aad
insb
jae
shr
mov
pop
nop
inc
jno
ss
mov
jne
mov
aas
pop
jmp
rcll
sti
jns
jb
mov
lcall
mov
out
movsb
test
add
push
xchg
movsl
cmpsb
shrb
fs
jmp
mov
popa
fdivs
cld
bound
xchg
and
rcr
sbb
adc
mov
push
loop
cwtl
out
fsubrs
mov
mov
cmpb
movsl
jmp
arpl
lods
in
mov
sarb
xchg
adc
aas
mov
cmpsl
xor
out
sbb
push
push
mov
jg
adc
cmp
cmp
frstor
rol
jnp
or
adc
jns
mov
out
or
shll
add
add
data16
rolb
js
dec
dec
push
lods
lret
aam
sbb
push
dec
xchg
stc
js
mov
mov
cmp
loope
in
faddl
movl
xchg
jmp
mov
lcall
repnz
out
cmp
loop
dec
sbb
cmp
fs
les
push
mov
or
in
sub
add
iret
sbb
cld
or
and
aad
inc
sub
rorb
es
movsb
push
mov
mov
shl
cmpsb
add
inc
lock
xchg
push
mov
orl
pop
pop
lock
ret
dec
cltd
pusha
mov
test
sbb
dec
pop
arpl
dec
mov
gs
mov
add
push
lcall
mov
add
mov
xchg
movsl
mov
inc
fnstsw
sub
jno
sbb
push
fimuls
or
or
mov
and
cmc
in
sbb
jl
gs
idivb
in
adc
stos
cmp
inc
jne
cmp
fimull
sarb
mov
jmp
push
pop
stos
into
xchg
lock
push
in
dec
sub
mov
jle
cmp
imul
add
scas
mov
xchg
xchg
cmp
fbstp
fst
fmul
mov
negl
push
out
mov
lcall
mov
pop
out
loop
mov
sbb
test
add
enter
pop
test
adc
mov
cmp
xchg
dec
mov
cs
iret
mov
xor
and
fnstenv
and
call
jno
insl
inc
push
pop
or
cmp
in
cmpsl
in
sbb
inc
addb
mov
pop
pop
cmpsl
rorl
cmp
mov
adc
aad
adcl
in
or
clc
sti
add
mov
cmpsb
add
add
dec
dec
loop
int
cmpsl
pushf
jns
dec
inc
dec
pop
fisttps
adc
pop
rcll
inc
inc
push
in
jns
xchg
mov
std
jmp
sub
into
xchg
pop
cli
in
fdivs
mov
les
imul
out
imul
test
push
jle
push
dec
cltd
mov
mov
cmp
daa
xchg
negb
dec
cltd
add
repz
and
scas
pop
xchg
pop
sub
enter
into
push
inc
mov
mov
jae
mov
mov
fwait
mov
das
lods
rcl
jmp
jae
mov
sti
es
pop
mov
scas
outsb
pushf
xchg
ficoml
inc
shl
mov
test
int
or
fdivrl
mov
push
jg
cs
add
adc
jns
data16
sub
mov
mov
int
pop
mov
mov
and
mov
lea
inc
push
cmp
scas
adc
jl
or
ret
push
nop
lret
mov
mov
lds
push
mov
ret
pop
pop
mov
pop
insb
xchg
mov
fisubrs
mov
sub
mov
js
int3
sbb
mov
xor
popa
push
repz
ja
pop
or
stos
aaa
das
dec
dec
sbb
xor
lahf
ret
add
and
mov
addb
sbb
test
dec
mov
ret
mov
xor
sbb
jns
dec
rorb
mov
jl
repnz
push
lods
xor
push
cmc
loop
outsb
pop
loopne
mulb
das
lea
out
pop
repnz
cvtps2pd
mov
jge
shr
jo
sub
sbb
push
into
jmp
mov
lods
pop
xor
jmp
lret
lcall
mov
pop
jle
xchg
fildl
lods
aad
jbe
pop
mov
pop
out
dec
inc
call
push
dec
xorb
sbb
xorb
out
sub
push
pop
rcrb
inc
and
das
xor
adc
out
mov
jl
cltd
dec
xor
ljmp
push
ret
xchg
mov
dec
mov
xchg
and
ret
repz
scas
test
jmp
or
xchg
sbb
cmp
mov
loope
adc
dec
jge
addr16
sbbl
cmpsb
inc
fmull
arpl
inc
popf
sub
jne
mov
enter
xor
push
in
dec
jg
dec
and
lret
cmc
loopne
ret
scas
jp
dec
dec
movsb
loope
addr16
fistpl
test
lds
lds
xchg
rorl
sub
or
mov
mov
sub
dec
dec
movl
aad
outsl
mov
stc
mov
gs
or
jge
mov
jp
mov
mov
xor
inc
ret
movsl
push
lahf
dec
lret
xor
push
fcmove
push
or
test
mov
jbe
clc
stos
inc
repnz
imul
add
sbb
push
outsb
test
add
adc
jge
and
xchg
dec
mov
or
inc
push
pop
cs
sbb
outsl
aas
inc
scas
pop
bound
sarb
xchg
or
inc
dec
loope
call
mov
sbb
xchg
fsubrl
int3
fucomi
adc
jns
pusha
mov
xchg
jp
inc
repz
xor
xor
lods
or
mov
adc
pop
and
fidivrs
cmp
int
fnsave
xchg
loopne
out
cmp
lods
sub
popa
sbb
jmp
mul
xchg
push
xor
arpl
jae
add
fsubs
inc
ffree
cmp
stos
js
nop
iret
mov
xor
xchg
lcall
pop
push
addr16
mov
inc
int3
or
push
xlat
aaa
insb
mov
fsubrl
aas
mov
shrl
push
clts
lock
mov
idiv
cmpsl
jecxz
leave
mov
xor
icebp
xchg
into
jle
mov
fmuls
fdivrp
paddw
cmp
addb
xor
stc
scas
loopne
adc
xor
mov
dec
cwtl
daa
cld
dec
hlt
mov
add
je
fnstsw
lret
das
std
cmp
xor
punpckldq
adc
loopne
iret
xchg
arpl
adc
cs
dec
stos
scas
sub
sarb
push
pop
lahf
popa
or
sahf
sub
jns
xchg
inc
movsb
push
loopne
sar
xchg
pop
cli
or
mov
popf
cltd
sti
inc
subb
mov
pop
pop
sti
aad
mov
adc
sub
and
cld
lcall
sbb
adc
fcmovne
adc
lods
cmp
xchg
sub
dec
inc
cmpsl
pop
pop
xchg
mov
inc
lock
out
dec
push
inc
lock
call
push
clc
pusha
pop
pop
mov
mov
int
add
dec
aam
and
rorl
icebp
js
les
popa
cld
test
ja
adc
sub
addr16
jnp
fdivr
lret
outsb
jle
mov
mov
bound
sbb
arpl
sbb
xchg
or
pop
pop
insb
divb
sahf
out
sahf
and
jb
nop
je
andl
sbb
mov
sbb
xor
or
enter
movsb
jbe
sahf
push
push
mov
aaa
pop
mov
cmp
in
sub
add
movsl
mov
hlt
xorl
cmp
loopne
xchg
cmp
ds
pop
cmp
dec
movsb
or
cmp
and
in
push
push
xor
sbb
andl
jecxz
scas
push
imul
in
dec
jp
pavgb
iret
leave
cmpb
xor
jge
adc
push
pusha
pop
orl
and
add
std
xchg
sbb
outsl
nop
stos
inc
mov
scas
fstl
shr
clc
movsl
shl
test
xor
sarb
outsl
jbe
xchg
inc
adc
enter
into
dec
cmp
jl
and
rcl
out
stc
loope
xchg
xor
or
jmp
testl
shll
gs
lret
lret
and
pop
inc
dec
mov
inc
lods
shl
sarl
sbb
adc
sbb
dec
add
jb
mov
mov
outsl
dec
add
jp
out
pop
fwait
add
ret
jnp
pop
lcall
stos
push
movsl
das
shlb
stc
sub
and
mov
cwtl
sbb
add
mov
mov
popf
mov
dec
lahf
mov
mov
sub
mov
sbb
inc
jecxz
xchg
mov
hlt
dec
movsb
sub
imul
or
in
add
push
adc
fisttps
add
dec
sub
mov
testb
push
imul
std
pop
dec
lds
dec
rcl
inc
out
inc
mov
sbb
and
jb
or
loop
sbb
div
xor
inc
insl
jg
lods
insb
adc
xchg
pop
xchg
ret
ret
adc
adc
push
out
xor
xor
inc
push
lret
pop
insb
enter
lods
in
lahf
push
dec
ljmp
jle
jmp
pop
rcl
dec
iret
cmp
js
xchg
dec
je
sub
push
pop
cli
mov
push
adc
imul
and
out
or
and
repnz
shrl
cld
movsl
mov
in
push
mov
or
dec
cld
gs
lahf
mov
push
dec
sahf
inc
cltd
mov
xor
xchg
add
sbb
or
xchg
lret
fwait
std
pop
mov
cli
dec
or
xchg
pop
sub
out
fiadds
outsl
pop
jb
add
sub
enter
pop
push
test
mov
cmp
std
mov
push
sub
and
out
push
lods
dec
or
and
bound
jmp
rcr
and
sbb
inc
mov
lret
sbb
inc
dec
and
inc
add
mov
mov
in
sbb
jb
repnz
cld
push
sub
jnp
sub
fstl
pop
jne
xlat
addr16
imul
xor
pushf
imul
pop
repz
fmul
sub
andl
lahf
mov
insb
data16
add
add
in
mov
dec
loope
push
out
pop
inc
gs
inc
mov
jmp
cmp
mov
lods
push
and
insl
cli
mov
sbb
or
mov
cmp
imul
in
cs
cmp
add
xchg
adc
xchg
loope
mov
loopne
int3
or
loopne
jge
push
out
or
mov
xchg
jns
inc
mov
notl
mov
cld
fsubl
mov
dec
add
mov
insb
sar
push
int3
popf
dec
and
mov
lcall
jle
lret
in
in
fisubs
add
mov
jo
mov
ja
sub
and
jge
arpl
pop
mov
lret
lea
fsubl
lds
add
fmul
fstps
mull
mov
xor
rorb
add
test
enter
pushl
cli
mov
int3
test
aas
mov
pop
xchg
sbb
sbb
mov
xor
es
lds
dec
and
adc
ss
idiv
xchg
mov
cmc
les
dec
fs
sub
adc
inc
outsb
cld
jo
leave
mov
shl
xor
lcall
fimuls
sbb
cwtl
lcall
in
jle
dec
xor
mov
push
rolb
pop
and
xlat
out
adc
cltd
mov
xor
lods
test
out
fidivrs
lods
adc
cwtl
xlat
repnz
pop
cli
sbb
flds
xchg
rolb
mov
or
movsb
call
dec
cmp
pop
cmpsb
jge
outsb
clc
jns
and
stos
inc
sub
push
sub
and
jns
sarb
mov
inc
lret
insl
in
es
lods
inc
icebp
jmp
outsb
fcmove
push
lock
aam
mov
dec
sbb
sbb
imul
hlt
lcall
pop
jmp
push
lock
imul
ret
sbb
mov
push
out
test
imul
pop
les
fbld
clc
fs
push
xchg
dec
orb
xlat
test
int
ret
jecxz
push
dec
les
sub
xorps
jne
push
jg
test
jo
mov
push
sbb
aam
rorl
pop
dec
sti
outsb
pushf
xlat
mov
loop
mov
cmp
pop
mov
test
pop
pop
inc
and
in
hlt
xor
pop
fisubrl
cmpl
lods
push
jge
adc
ret
sarb
imul
dec
dec
scas
or
lock
rolb
xchg
in
js
mov
fstpl
sub
xchg
imul
pushf
xor
jmp
movzwl
rorl
imul
inc
push
inc
pop
in
xchg
jmp
inc
cmp
lods
fadds
jecxz
fs
inc
push
stos
add
xchg
orb
mov
xor
pop
fwait
and
cld
mov
bound
mov
jle
ficomps
mov
fwait
mov
jmp
jg
outsb
ficoml
push
sub
push
add
jmp
jl
add
es
insb
sti
mov
push
sbb
mov
cmc
adc
outsb
jns
mov
push
cld
pop
adc
xor
cmp
repz
lahf
in
and
les
movb
icebp
dec
sub
insb
rclb
and
loope
imul
out
dec
dec
daa
nop
inc
fisubs
cmp
repz
pop
lods
sbb
imul
cltd
jbe
jnp
shrb
push
xlat
sub
pushf
mov
inc
sbb
fwait
mov
mov
xchg
enter
mov
out
cs
push
out
fcompl
scas
pop
pop
cmp
xor
or
ljmp
or
cmp
int
mov
sbb
loopne
sub
sub
push
push
cmc
lret
mov
dec
into
mov
inc
inc
and
jno
adc
adc
fists
lret
mov
xor
mov
and
push
sub
push
movsb
pushf
xor
or
loopne
mov
pop
cltd
inc
dec
or
aam
ljmp
inc
inc
inc
pop
test
mov
inc
xlat
dec
or
pop
scas
lcall
lcall
mov
rclb
cmp
cmc
sti
pop
cmpsb
mov
fidivl
mov
pop
cli
lahf
test
jmp
mov
push
add
and
mov
test
pop
stos
inc
xchg
pop
cmpsb
stos
sbb
lahf
arpl
jne
daa
out
push
xchg
dec
cmp
push
push
mov
sbb
and
adc
or
mov
roll
mov
adcl
xor
xchg
insb
pop
pop
xlat
add
call
leave
test
mov
mov
mov
push
outsl
push
repnz
inc
rol
ljmp
das
mov
sub
pop
sarl
sbb
jae
and
xor
movsl
add
and
jmp
adc
push
and
pop
xlat
sbb
imul
or
cmp
imul
nop
inc
loopne,pn
fldcw
and
imul
xor
xchg
lods
ret
dec
add
adc
std
es
inc
addr16
cmpsl
fdivr
or
int3
cmc
xlat
lahf
inc
inc
lahf
decl
xor
adcl
mov
rolb
in
mov
mov
sbb
adc
lea
jmp
pop
mov
arpl
dec
mov
cmpsl
push
movsb
xor
push
cli
push
test
shlb
ret
ret
lcall
pop
fwait
pop
in
imul
movsb
mov
int
loopne
sbb
sbb
movsl
and
movl
in
repz
pop
ja
jb
adc
push
lahf
rcrl
sbb
loopne
in
pop
add
lock
filds
adc
leave
nop
leave
pop
cmp
dec
jne
movl
ror
stc
hlt
cmp
int3
add
add
ret
add
and
push
sti
push
mov
xor
iret
inc
leave
aam
out
scas
in
loope
xchg
xchg
adc
movsb
je
notb
jno
lods
test
cmp
les
or
adc
pushf
mov
jl
mov
filds
xor
push
cmp
xchg
sub
xor
fstl
cmp
imul
lret
mov
or
in
rcrl
test
mov
sbbb
and
sbb
mov
dec
lcall
mov
cmp
push
sbb
pop
enter
mov
sbb
cltd
pop
fcmovu
pop
mov
mov
pop
and
pop
leave
sti
inc
je
mov
push
push
in
fdiv
push
repnz
mov
mov
repnz
lcall
and
mov
sub
or
inc
gs
sbb
cmp
lods
fs
out
das
lret
sub
mov
dec
cmp
mov
cmp
cld
cli
pop
push
out
ficoml
jl
dec
lea
js
xchg
lods
mov
mull
lcall
pop
adc
je
mov
bound
jp
in
cmpsb
mov
xor
and
inc
jno
inc
aaa
and
fidivs
push
sub
frstor
jl
dec
cmp
or
jmp
mov
or
scas
add
mov
pop
fistl
out
dec
rclb
shlb
mov
push
jp
mov
shr
mov
mov
xchg
out
xchg
cmp
ret
stc
pop
insb
cmp
cmp
imul
lds
mov
mov
add
rolb
inc
mov
xchg
rclb
cmp
xchg
sbb
test
mov
add
cwtl
scas
mov
inc
push
mov
sbb
dec
jg
sbb
jne
sbb
add
fs
sub
pop
sub
aas
adc
mov
ljmp
push
push
push
ljmp
ljmp
mov
jmp
repnz
or
xor
jo
lock
scas
cmp
xor
xlat
fidivrs
lds
adc
add
mov
sbb
sub
jecxz
add
rcr
jne
jmp
shll
add
ret
stos
insb
pop
push
cmp
ret
nop
int
movsl
lds
fistpl
movsl
or
push
add
nop
sbb
lea
fmuls
dec
add
mov
cmp
orl
outsb
dec
insb
push
dec
add
jmp
dec
add
stc
je
pop
jecxz
and
mov
loop
sub
mul
or
adc
jnp
fldcw
cld
cld
pusha
xor
lahf
insl
mov
repnz
push
leave
and
aad
loope
clc
xchg
adc
das
mov
lods
xorb
outsb
mov
into
hlt
js
ljmp
int3
sbb
data16
add
adc
jmp
ror
idivw
jle
imull
pop
das
sub
nop
es
xor
and
test
push
pop
sub
or
ror
push
mov
sbb
sub
sub
pop
pop
ss
cmpsl
out
pop
adc
dec
or
jge
dec
push
cmpsl
mov
inc
ja
mov
push
inc
cs
decl
repz
or
pop
outsb
xchg
imul
loop
icebp
jg
into
lret
fdiv
pop
clc
jl
jbe
out
cwtl
popa
mov
sub
test
out
ljmp
mov
fldt
out
in
pop
arpl
out
mov
fs
inc
xor
test
sti
in
arpl
sahf
add
dec
test
push
mov
add
mov
dec
mov
out
lret
push
sub
or
pop
lret
std
xchg
fsubl
add
pushf
push
xchg
mov
add
push
stos
in
sti
inc
or
iret
stos
pop
addr16
push
cs
cli
mov
gs
insb
cmp
aam
test
fstpt
insl
insb
and
mov
adc
push
bound
cmp
mov
and
insb
sti
inc
mov
cmp
add
dec
jns
add
add
ror
add
in
xchg
pop
lods
mov
and
out
mov
mov
xchg
mov
mov
xchg
pop
add
pop
and
mov
sbb
mov
fistps
xor
cli
test
cmpsb
add
xchg
mov
repz
popl
in
cli
wbinvd
fbld
pop
pusha
adc
dec
jbe
inc
enter
sbb
out
mov
pop
sub
and
pop
cmp
ss
leave
cwtl
outsb
push
pop
mov
or
pop
addr16
add
sbb
sub
in
xchg
or
jb
repz
push
clc
mov
push
mov
mov
enter
add
mov
sbb
push
stc
into
mov
jae
int
insb
push
aaa
ss
pop
cmp
int3
jle
cli
das
dec
leave
jecxz
mov
xchg
inc
cmp
or
mov
pop
push
popa
xor
inc
iret
and
into
enter
jnp
repnz
pop
pop
pop
inc
in
sub
xchg
stc
enter
mov
outsb
xchg
dec
test
inc
push
repz
fiadds
popa
int3
js
cmpsb
cltd
pop
mov
dec
or
xchg
inc
out
insl
sbb
repz
cmpsl
pop
lock
stos
frstor
fbld
adc
popa
xchg
or
js
sarl
aaa
xor
jns
shll
popf
add
pop
rcr
int
mov
rcrb
lcall
mov
std
mov
sbb
fadd
subb
lea
dec
push
mov
and
bound
jb
pop
arpl
jge
inc
movsl
sahf
cmp
cmp
jg
jns
ds
adc
ret
ljmp
push
add
dec
push
ds
mov
adc
notb
jle
in
lret
push
mov
add
add
jg
gs
cs
xchg
push
and
in
in
pusha
ret
push
xchg
lcall
pop
and
sahf
mov
popa
movsb
stos
add
inc
pop
int
daa
lea
mov
or
jle
in
mov
xchg
or
fst
rorb
pushf
cmp
push
lret
sbb
sbb
dec
ss
mov
icebp
test
rorb
mov
cmpsb
jl
xchg
fcmovbe
movsl
dec
mov
mov
mov
je
loope
nop
adc
int
jb
push
xor
pop
mov
test
shrl
icebp
pop
xor
push
aad
in
cwtl
push
mov
test
lds
and
cmp
ljmp
cmc
and
repz
data16
inc
outsl
fists
add
sahf
xchg
incl
xchg
jl
outsb
adc
ljmp
les
test
dec
imul
jo
ljmp
out
mov
cmp
in
fcmovnu
push
enter
push
ret
shrl
sub
fisubrl
sbb
jno
push
out
lods
jmp
imul
dec
faddp
fdivrl
xchg
fs
inc
popl
sub
ljmp
cmp
push
sti
add
subl
cmp
or
insb
lret
mov
and
pop
repnz
psrad
dec
fwait
lods
sub
jmp
mov
hlt
push
or
xchg
push
pop
push
xchg
push
xchg
ret
js
bound
ss
xchg
dec
repz
sahf
jb
pop
insl
aad
fsubl
xchg
pushf
jg
xor
hlt
push
mov
cmpsb
ds
dec
xchg
xchg
sub
jp
out
push
push
mov
and
imul
pushf
je
pop
jne
jmp
out
cmp
inc
jb
mov
push
js
add
xor
lret
cmp
adc
stos
int
gs
xorl
je
into
loop
mov
sbb
data16
icebp
inc
arpl
outsb
ret
scas
int
mov
scas
jl
mov
add
int3
mov
cmp
push
jae
popa
sub
js
xlat
jns
dec
push
lods
cmpl
mov
jmp
ret
push
xchg
mov
je
bound
inc
iret
dec
lcall
push
inc
or
fsubrl
cmp
gs
pop
sbb
jge
jp
pushf
xor
and
sti
push
clc
cmp
cli
mov
push
add
cmp
xchg
push
add
jno
jle
icebp
ds
dec
jb
pop
scas
xor
or
pop
adc
jne
out
hlt
add
out
dec
push
ja
pop
or
fs
push
das
push
push
cmp
add
bound
sbb
sbb
out
push
sub
movsb
jnp,pt
sub
stc
sbb
pop
xorb
cmc
xor
xlat
and
dec
cmp
mov
push
fldenv
lret
and
loop
push
mul
cmp
leave
sar
inc
test
shl
jle
mov
cwtl
pop
leave
out
cmp
out
rorb
sti
dec
mov
dec
adcl
ljmp
insl
rclb
mov
dec
add
stc
jg
jp
inc
stos
or
jle
sub
fildll
int3
xor
andl
movups
movl
mov
add
sub
negl
mov
scas
enter
fistps
andb
xchg
dec
mull
and
jge
pusha
pop
cmp
sti
call
cmc
push
pop
mov
mov
ret
jecxz
out
pop
out
cltd
cs
push
xchg
arpl
dec
and
enter
mov
jo
xchg
push
insb
mov
lea
loop
mov
inc
xchg
inc
push
lea
add
rcrl
jno
mov
or
rcrb
loope
lock
aas
leave
cmp
mov
fwait
in
jl
sbb
jb
clc
fidivs
push
stc
adc
dec
pop
in
outsl
push
sbb
imull
enter
inc
lcall
inc
mov
and
xchg
arpl
mov
sub
jbe
dec
xor
mov
xchg
sbbb
mov
out
add
xchg
lock
call
test
fsubrl
pop
xchg
and
push
inc
les
jge
xlat
imul
les
dec
out
cwtl
in
sbb
cmpsl
xor
in
sarl
xchg
push
push
mov
push
push
sub
inc
ljmp
sahf
daa
mov
jmp
scas
stos
movsb
pop
ds
call
fimull
pop
call
or
push
mov
mov
dec
sub
daa
xor
pop
pop
fbld
dec
add
pusha
sbb
jecxz
mov
cmpsl
ljmp
add
mov
sub
lods
in
repz
mov
popa
push
fimuls
cmp
mov
mov
pop
imull
cmp
add
xor
push
cmpsb
aas
fs
jno
or
adcb
jge
mov
pop
ret
in
pop
sti
loope
dec
scas
cld
mov
aaa
dec
sub
mov
jmp
inc
push
ret
jo
jl
push
add
fnstsw
outsb
xchg
adc
jo
push
test
testb
push
fwait
scas
scas
sub
cmp
push
fwait
sbb
inc
push
fidivl
xchg
push
aaa
int3
lods
lret
mov
push
mov
jecxz
mov
xchg
xor
sti
push
mov
movsb
push
jmp
or
mov
testl
or
sub
cmpb
lcall
push
pop
mov
shlb
movsb
jmp
imul
xor
xor
or
insl
cmpsb
int
lret
pop
or
ljmp
mov
in
or
js
and
sub
lods
mov
inc
inc
ret
ljmp
lahf
jmp
ja
mov
loop
mov
xlat
stos
test
mov
jle
in
cmp
in
pop
repnz
inc
add
mov
sbb
sbb
and
movsl
mov
cmp
pop
clc
xchg
mov
in
stc
test
cmp
sbb
js
jp
rorb
ss
sti
sbb
push
outsl
inc
mov
xchg
ficomps
jne
mov
and
lock
rcll
push
int3
fwait
dec
mov
dec
mov
pusha
or
pop
push
dec
lret
jmp
inc
rcrb
loopne
or
xchg
push
or
roll
popf
and
sbb
mov
xchg
das
pop
jnp
les
or
ljmp
push
xor
jge
cmp
aam
pop
jno
jg
sbb
loop
loopne
sub
fs
dec
shll
xchg
test
push
or
incl
sub
jns
and
cli
pop
adc
std
adc
hlt
call
mov
add
inc
lods
sub
fmuls
cli
rcr
pop
push
fcoml
in
mov
loope
mov
inc
ds
test
mov
sbb
sub
dec
xor
je
idiv
std
flds
mov
lcall
sbbl
pop
cli
adc
sub
cmpsb
or
or
hlt
rcrl
pop
mov
insl
adc
test
bound
in
lods
adc
test
adc
dec
lcall
stc
xchg
scas
les
add
aad
sub
shlb
insb
dec
mov
int3
inc
sbb
adc
mov
jmp
ret
shl
aam
in
imul
dec
cmp
xor
jecxz
sbb
push
xchg
mov
in
loope
mov
mov
lods
and
sbb
sub
and
movsb
jecxz
scas
ret
or
ss
or
and
mov
data16
and
adc
repz
jne
push
addr16
popa
cmpb
xchg
leave
movb
jg
sub
insb
call
shrb
xchg
lds
adc
mov
mov
add
sbb
mov
mov
cltd
lret
jle
pop
jmp
ret
popa
xchg
popf
orb
aaa
ds
inc
dec
dec
aaa
mov
popa
mov
dec
mov
mov
fwait
inc
and
ds
stos
rcr
ss
mov
xchg
dec
mov
dec
ud2
daa
dec
xlat
test
xchg
stos
mov
or
mov
fwait
inc
sbb
std
mov
mov
jno
inc
inc
jg
push
adc
iret
xlat
test
push
jae
xchg
pop
cmp
cmp
loop
jp
sbb
adc
sbb
pusha
add
cmp
add
mov
jnp
imul
dec
pop
adc
mov
cli
rcpps
sub
in
hlt
stos
jge
dec
inc
jge
adc
pop
mov
xor
sub
xchg
int3
jl
xor
outsb
scas
iret
in
fsubl
lea
jae
lock
inc
lock
sti
mov
scas
testl
sbbl
mov
sbb
std
dec
jg
xor
leave
adc
and
pop
jne
inc
mov
mov
mov
fistl
int
pusha
iret
push
inc
lret
mov
frstor
in
repnz
adc
push
cmp
popf
sub
aas
adc
sbb
mov
mov
js
push
pusha
mov
fs
inc
scas
stos
inc
lahf
jnp
outsl
jge
insb
pop
push
in
inc
xchg
xor
sub
mov
in
movsb
and
hlt
jmp
fs
popf
out
xor
popa
in
fcmovnbe
int
mov
push
jb
popf
xor
jle
push
bound
xor
rorb
jp
cmp
mov
sub
sbb
inc
mov
push
mov
sub
fldenv
inc
mov
pusha
nop
js
stos
mov
lea
inc
out
movsl
cmp
mov
cld
loopne
inc
imul
popf
test
or
pop
cltd
adc
movswl
adc
or
mov
sub
sar
or
add
adc
or
mov
cmp
stos
std
dec
stc
add
xchg
or
xchg
dec
fwait
subb
addr16
ljmp
ret
sbb
xchg
xchg
aaa
les
add
loop
mov
in
ret
loopne
xor
into
mov
dec
xor
lds
mov
pop
jmp
mov
int3
add
xchg
sub
lods
dec
jp
xchg
out
mov
or
mov
stos
pop
inc
adc
sbb
or
or
test
cmp
inc
enter
push
std
xchg
stos
movsb
sarb
mov
sbb
sbb
xchg
test
scas
movsb
jne
repnz
mov
cld
loope
nop
hlt
mov
dec
push
bnd
jns
aam
in
pushf
sarb
inc
bound
rdmsr
xchg
push
test
stos
rorb
fstl
and
sti
call
rorl
leave
add
mov
mov
sbb
cmp
pusha
stos
ret
mov
arpl
cmpsl
jge
mov
lret
xor
pop
mov
mov
cmpsb
push
enter
dec
pushf
andl
sarl
add
or
xlat
or
leave
sti
mov
dec
cs
inc
ss
mov
repz
scas
push
jge
cmp
push
cmc
mov
add
pop
pop
dec
pop
fidivrs
add
jmp
xor
jl
xor
pop
mov
mov
sub
cmp
divb
add
sarl
sub
enter
add
es
dec
sarb
xor
sahf
jb
mov
push
sti
push
mov
cmp
fstl
repz
lret
mov
enter
xor
inc
cmpsb
shrl
mov
add
inc
lods
test
pop
fs
stos
add
mov
inc
inc
add
dec
mov
mov
mov
sub
mov
push
dec
mov
popa
mov
stc
dec
stc
mov
pop
roll
test
in
push
pop
push
sub
loopne
test
pop
mov
bound
xlat
inc
popa
pop
fdivl
lret
push
adc
int
lods
mov
adc
ret
fdivrl
mov
cmp
in
dec
dec
inc
and
mov
out
ret
mov
insl
cmp
jmp
add
jbe
sti
js
jmp
test
cmp
mulb
mov
jmp
out
inc
je
add
jbe
mov
std
sub
stos
and
add
push
mov
pop
push
shll
lahf
test
test
out
cltd
loop
sub
fcoms
jl
and
or
and
nop
sarb
bound
popf
lret
add
int
sub
ret
xchg
pop
jl
les
adc
push
incl
ljmp
push
rol
into
jge
popa
fmuls
fcomp
xor
sub
cld
jb
jp
dec
xor
pop
mov
sub
loope
xor
fld
xchg
jmp
cmp
jne
sti
sbb
inc
orl
mov
mov
xchg
hlt
outsl
push
lods
es
mov
sub
testl
clc
jno
dec
fcomip
insl
scas
sahf
fistpll
mov
or
add
jns
mov
or
pop
push
adc
nop
mov
cs
sbb
rcll
adc
jne
sti
jns
jnp
lcall
je
xchg
inc
cmpsl
es
scas
cmp
adc
mov
push
or
pusha
lret
pop
jecxz
mov
shrb
push
jmp
repz
push
cmpsl
repz
mov
fstpl
ljmp
int
fdiv
or
dec
or
in
aam
sbb
scas
scas
sub
mov
mov
jbe
test
mov
lahf
mov
mov
mov
mov
bound
add
aas
or
push
lea
scas
add
sbb
pop
push
insl
fnstcw
call
dec
inc
shrl
test
repz
pop
mov
adcb
push
sbb
in
out
ret
cmp
adc
in
jb
jge
in
jmp
int3
cltd
lock
pop
stos
and
mov
popf
or
mov
pop
xchg
adc
sub
movsb
loope
jecxz
clc
in
cmp
neg
ja
dec
sahf
test
insb
xor
fimull
gs
shrl
sbb
cmpsl
les
stos
jbe
test
jns
inc
in
testl
sbb
inc
xchg
mov
lea
ret
sahf
sbb
icebp
jl
fs
fdivs
xchg
mov
dec
rol
nop
scas
je
or
sbb
ret
sbb
push
mov
xchg
pop
jne
outsb
jl
push
mov
test
hlt
mov
mov
mov
and
iret
es
insl
in
mov
rclb
push
xchg
popf
push
dec
loopne
mov
jnp
jo
out
std
pop
push
pop
pop
stc
or
cmp
es
movsb
fwait
and
call
lcall
out
and
shrb
test
cli
and
addl
out
aad
cld
add
pop
xchg
cmp
cmp
mov
into
mov
cld
jle
push
inc
or
cmp
sbb
inc
in
pushf
ficomps
mov
mov
sahf
cmp
adc
stc
loop
jnp
mov
or
or
adc
cmp
cmp
sub
out
push
mov
pop
adc
sub
adc
pop
lods
js
add
adc
xchg
pop
inc
fcmovnb
mov
or
ss
icebp
ss
cmp
add
jmp
add
pop
or
jb
fcmovb
sti
and
test
cmpsl
xchg
loope
pop
push
push
xor
test
arpl
data16
pop
pop
jle
ds
inc
cli
inc
xor
or
push
fidivs
push
mov
out
sbb
dec
xlat
pop
inc
gs
mov
test
jbe
es
lods
icebp
add
jmp
popf
cli
pop
and
je
mov
dec
xchg
pop
insb
repnz
out
xor
jecxz
es
pop
jbe
sub
adc
inc
insl
imul
test
mov
cmp
popf
pop
hlt
xchg
dec
shlb
mov
cli
shlb
fs
out
pop
subb
stc
mov
jo
mov
and
mov
push
inc
dec
and
jo
mov
faddl
sbb
daa
add
mov
sbbb
add
arpl
mov
cmp
jno
rcll
mov
inc
xor
cmp
mov
pop
popf
adc
xor
andl
nop
mov
mov
push
xchg
cli
mov
imul
push
vpcomub
jbe
adc
das
imul
sub
sti
out
cmpsl
push
push
mov
xorl
pop
pusha
jno
mov
stc
pop
xor
adc
fwait
int3
imul
add
aad
pop
dec
mov
or
mov
ret
jbe
test
mull
sbb
add
out
jo
vpmacssdd
xchg
inc
xchg
hlt
lea
pop
xlat
cmpsl
loope
xor
jp
cltd
xor
adc
cs
xor
nop
ret
mov
cmp
add
xor
arpl
mov
dec
xchg
dec
mov
lahf
clc
in
je
inc
mov
mov
mov
or
push
adc
lahf
scas
in
in
mov
push
lea
adc
and
xorl
aas
clc
sbbb
hlt
adc
dec
pushf
add
fisttpll
int3
out
pop
xchg
int3
in
mov
jb
mov
leave
adc
and
and
mov
dec
xor
mov
cld
and
inc
lods
es
test
sub
rclb
cmpl
pop
or
call
fidivs
in
inc
mov
js
and
mov
mov
jbe
xor
mov
dec
leave
mov
dec
mov
lahf
add
fxch
pop
xor
adc
ja
cmp
mov
int
or
mov
imul
add
pop
dec
aas
jb
ret
jns
int
cwtl
add
dec
cmp
js
loopne
adc
fcomps
stos
push
outsb
outsl
lret
rcl
ljmp
xchg
es
popa
je
cmp
pmaddwd
loopne
insl
jne
dec
pusha
iret
scas
push
outsb
je
sub
lea
loope
inc
fcomps
or
insl
push
xchg
push
pushf
dec
pop
mov
outsl
mov
sbbl
stos
into
sbb
jmp
imulb
mov
cmp
fldl
push
pop
or
jp
jg
pop
gs
push
lcall
js
push
inc
fistpll
dec
icebp
out
pop
divl
js
dec
subl
push
arpl
movsl
xchg
sbb
sbb
test
in
cwtl
scas
loope
add
push
repnz
rol
jne
test
ret
mov
inc
mov
cwtl
mov
xchg
add
jae
xchg
out
sub
pusha
dec
inc
adc
sti
xchg
ret
jg
inc
shlb
adc
das
pop
push
mov
pop
das
daa
js
cwtl
cmp
add
into
sub
add
jno
push
xlat
je
loop
loopne
cld
push
cli
xlat
sub
arpl
insb
outsl
hlt
out
roll
icebp
lods
or
xchg
add
xchg
sahf
sub
lret
push
cmp
mov
fisttps
and
mov
fcmovne
add
test
stc
loop
lret
out
sub
repnz
insb
cmp
adcb
xchg
in
mov
mov
sbb
test
xchg
in
xchg
mov
ja
jg
mov
xchg
jp
cmc
nop
mov
mov
sub
pop
or
dec
popa
pushf
jge
push
push
pop
xorl
fs
lods
or
jae
subl
lods
sbb
jle
mov
xchg
adc
arpl
adc
dec
adc
out
and
je
push
rol
dec
or
sub
cmp
fistl
mov
xchg
enter
fnstenv
jge
jl
aam
lahf
jmp
dec
sbb
pusha
sbb
fwait
sub
into
bound
xchg
xchg
cmp
scas
jge
ja
push
add
lcall
xchg
xor
arpl
test
sub
xorb
push
aad
push
or
and
pop
dec
inc
fsubrp
pop
sub
xchg
add
ds
clc
mov
jb
aad
cwtl
xchg
ror
mov
push
push
pop
dec
sbb
jae
outsl
mov
and
xchg
ja
sbb
dec
xor
out
in
and
jae
imul
imul
jae
divb
movsl
pusha
pop
adc
or
push
fcoms
adc
das
jp
mov
ret
js
lock
adc
sbb
adc
addr16
or
xchg
imul
xor
add
mov
out
jo
int
in
and
pop
mov
lds
pop
pop
cmp
adc
aas
int
pop
divl
mov
shll
sbb
in
fwait
cwtl
arpl
movsb
ja
lods
mov
int3
push
imul
inc
dec
mov
rorl
sbb
add
nop
out
shrl
mov
bsf
or
popf
stc
pop
arpl
fisubrs
lock
jg
fmuls
cmp
cli
pusha
inc
jbe
dec
mov
in
xlat
push
xor
dec
jecxz
push
das
aas
sbb
push
test
enter
int3
adc
adc
sub
pop
lock
mov
cs
mov
mov
clc
xchg
cmpb
push
xchg
inc
xor
test
ss
mov
incl
sbb
and
jge
stos
nop
inc
cmc
push
inc
pushf
andb
push
daa
cmp
loop
jg
test
gs
inc
ds
in
fdivrl
pop
dec
or
nop
or
ret
add
test
cltd
sub
or
shlb
add
lcall
sti
mov
mov
sub
test
outsl
jg
cmp
push
push
mov
mov
sbb
jo
addr16
jb
fs
xchg
sub
push
mov
or
pop
aaa
xor
xchg
fisubs
dec
into
xor
pusha
adc
push
std
ret
pop
inc
imul
clc
pop
mov
add
mov
dec
pop
fdivrs
pop
jecxz
cmc
addr16
mov
fmuls
jp
je
push
lds
in
cmp
scas
adc
push
gs
dec
loop
cmpsb
ja
mov
cmp
push
in
addr16
lahf
xor
in
aas
jmp
jecxz
push
pop
push
inc
adc
jbe
sub
lods
sti
sbb
mov
xchg
push
scas
fsubrl
fwait
cmp
imul
fstps
pop
jmp
outsl
mov
pop
jbe
ljmp
mov
nop
jmp
xor
xor
push
xchg
fisubrs
sbb
into
cwtl
xor
repnz
mov
mov
enter
dec
jecxz
jp
adc
mov
sub
jge
sbb
rcll
mov
xchg
xchg
sbb
scas
cmpsl
addb
cli
pusha
call
andb
xchg
repz
inc
sbb
bound
fnstenv
lock
or
add
cld
fstpt
fwait
divl
mov
lahf
loope
jp
lds
add
enter
add
xchg
and
adc
push
mov
scas
dec
and
xchg
or
les
push
push
push
sarb
imull
inc
xchg
xchg
fcoms
sub
cld
mov
mov
cmp
ss
lods
pop
ja
sub
sub
dec
ja
mov
enter
push
outsl
es
out
dec
addr16
add
out
push
movsb
sbb
inc
bound
jle
sub
lret
xor
ret
jbe
push
icebp
loope
pop
mov
dec
mov
pop
repz
dec
fbld
mov
ss
mov
int3
push
mov
push
pop
mov
sub
int3
xlat
out
jne
push
icebp
cwtl
les
or
outsb
loope
xchg
pop
dec
jmp
xor
add
pop
outsl
and
icebp
jecxz
mov
divl
xor
sbb
roll
mov
pop
sbbb
je
fcompl
sti
testb
inc
loop
add
loope
mov
cs
push
jo
jb
push
dec
jmp
xchg
inc
and
sbbl
add
mov
jp
cmp
mov
jae
xor
sub
orl
mov
das
xchg
in
sub
mov
cmpb
dec
push
dec
repnz
mov
cmp
sbb
add
in
loopne
adc
movsl
mov
and
lret
jnp
xchg
pusha
xchg
pop
fcmovnbe
push
pop
or
sbb
sbb
sub
in
xor
adc
loopne
adc
xchg
mov
inc
scas
mov
jge
add
mov
pop
gs
or
rolb
pop
lcall
imul
push
shl
ljmp
in
mov
fistps
dec
lahf
out
add
xchg
lock
sub
mov
cli
loopne
lahf
push
and
addr16
fimull
sub
hlt
mov
notl
sub
mov
cmp
fidivrs
jp
ja
iret
inc
loop
sub
imul
mov
imul
outsl
leave
inc
inc
xchg
or
pop
pop
sbb
pop
jae
or
cmpsl
mov
xchg
lret
cltd
cmpsl
int
sbb
sub
cltd
jge
gs
mov
ret
fs
ja
iret
push
jl
jecxz
mov
popa
inc
shlb
sbb
ljmp
push
bound
int3
mov
add
xor
push
pop
cltd
hlt
or
xchg
lahf
inc
leave
xchg
mov
out
jmp
fs
stc
jno
frstor
dec
lock
jns
flds
out
ficomps
jg
dec
fldt
or
in
mov
xor
adc
cmc
jl
xchg
push
cmc
mov
push
inc
push
ljmp
jb
stc
inc
arpl
jb
inc
les
loop
ret
movsl
sub
aaa
and
sub
push
cmp
mov
sub
sbb
insl
xorb
loop
loopne
pop
mov
aam
pusha
ja
and
sar
cmp
js
ret
cmpsb
inc
orl
push
ds
mov
sub
hlt
dec
cmpsl
decb
lds
jbe
lcall
ret
out
jg
psubusb
mov
and
jae
dec
insl
ficompl
push
mov
fwait
add
xor
fldl
add
inc
repnz
test
mov
jne
inc
xchg
mov
pop
jmp
inc
xor
inc
ret
jno
sbb
add
cli
mov
clc
jo
imul
stc
aas
mov
jnp
js
test
cld
dec
out
pop
sbb
xchg
test
imul
cmpsl
jl
jno
inc
mov
add
adc
jecxz
testb
pop
ljmp
push
popa
mov
shld
arpl
iret
sbb
pop
or
loopne
aam
fdivr
adc
push
pushf
mov
orb
push
dec
cmp
push
ss
add
inc
push
fcmovbe
nop
push
insb
mov
stos
push
or
add
pop
pop
xchg
xchg
sub
xchg
pusha
stos
mov
add
or
popf
sub
lock
adc
or
fildl
jo
dec
das
dec
xchg
inc
in
aas
mov
inc
sbb
cli
mov
mov
mov
xor
int
mov
scas
adc
addl
in
sti
push
ja
adc
xorb
sti
lock
inc
pop
out
imul
jns
cmp
cmp
decb
mov
cmp
pop
nop
jno,pt
xor
loopne
xchg
std
jae
inc
mov
into
xlat
addr16
sbb
hlt
imul
jmp
test
loope
xor
and
out
xchg
jne
test
mov
adc
jb
xchg
rclb
lret
or
jbe
je
repz
push
pop
adcl
pop
jge
ljmp
pop
idivb
notb
ret
xchg
fdivrl
outsl
mov
add
outsb
cltd
mov
sti
cmp
mov
jg
insb
js
push
aaa
pop
inc
pusha
cmpsb
mov
jmp
jecxz
add
jo
sahf
mov
lea
js
out
out
test
xor
jl
sbb
fdivrs
jmp
loopne
cmp
in
fbld
mov
xchg
mov
popf
or
inc
stos
sti
jmp
fnstcw
push
cmpsb
enter
jle
push
stc
cmp
arpl
stos
shrb
jae
rcll
sbb
stos
mov
repnz
repz
lods
xor
sub
pop
lahf
loope
loope
push
icebp
pop
cmp
inc
das
or
clc
pop
aas
xlat
dec
cs
push
push
loopne
cmpsl
jg
cltd
sub
rclb
imul
enter
push
jae
iret
cmp
xchg
lcall
pop
popf
out
pslld
pushf
std
bswap
and
adc
inc
aaa
bnd
popa
pop
sub
ret
gs
insl
fisubl
test
xchg
push
fsubp
pop
pop
mov
push
sub
xor
mov
stc
fdiv
shlb
test
xor
jg
mov
mov
addr16
cmp
push
movsl
jnp
das
or
xchg
jb
in
xorb
psrld
adc
in
popa
adc
pop
push
pop
sbb
adc
out
add
ljmp
pushf
jl
ret
inc
mov
inc
pop
pushf
mov
lret
dec
xchg
scas
xor
xchg
jo
pop
sbb
push
jl
xor
les
mull
or
xor
inc
loopne
pop
out
outsb
insl
jns
iret
mov
shll
pop
gs
mov
jbe
fisubrl
sub
fimull
outsb
mov
lahf
in
test
sar
lret
faddl
mov
das
mov
sahf
inc
insb
mov
aad
test
in
mov
dec
xchg
push
mov
push
insl
xchg
ret
dec
fisubrs
push
pushf
jmp
pop
mov
inc
cmpsb
stos
jp
sub
ljmp
bound
movsb
das
sub
fwait
mov
and
fwait
xchg
add
inc
pop
cwtl
decb
pop
push
cmp
and
movsb
adc
movsb
and
pop
sahf
pop
test
xor
sub
mov
mov
pop
fnstsw
cmc
or
mov
adc
scas
sbb
test
ds
lock
arpl
ficompl
jno
or
push
or
popf
adc
push
outsl
jge
imul
xchg
arpl
das
inc
and
enter
pop
daa
je
mov
pop
test
jno
xchg
mov
add
mov
mov
pop
jmp
jecxz
sbb
sahf
insb
jnp
xlat
mov
sahf
mov
lods
test
xor
xchg
cmp
dec
call
or
xchg
mov
test
xchg
jo
and
outsl
inc
push
push
ljmp
jle
call
test
mov
fsub
push
int3
dec
cmpl
dec
push
push
dec
int3
mov
adc
mov
cmp
and
cmp
inc
sahf
repnz
dec
mov
add
jns
in
mov
mov
hlt
cmp
ds
movsl
sub
mov
out
push
xchg
in
jmp
in
rcl
inc
xchg
lock
adc
pop
pop
xchg
inc
push
jp
inc
ljmp
test
dec
ds
nop
or
xchg
stc
ja
inc
inc
cwtl
push
lret
jno
add
fisttpl
cld
imul
je
mov
mov
pop
push
or
or
addr16
mov
fldl2t
ret
arpl
lea
or
das
shrb
sub
aad
scas
and
jg
cld
fdivr
jb
outsb
dec
sub
test
jns
or
jmp
ljmp
push
arpl
push
sbb
jecxz
mov
mov
dec
pop
mov
int3
test
mov
in
gs
popa
pop
test
push
add
push
add
mov
aas
mov
mov
jl
add
inc
pusha
jo
das
jg
pop
lds
add
sbb
insl
sbb
sub
adc
sbb
aas
sarb
or
sahf
jae
js
fwait
fs
das
clc
movsb
pop
aam
mov
aam
xlat
fistps
or
mov
cli
mov
mov
in
xor
shll
pop
jae
jnp
test
jo
subb
aas
mov
dec
or
pop
fstps
dec
jno
adc
testl
repnz
add
push
mov
loopne
icebp
mov
xchg
xchg
mov
fnstcw
pusha
cmpsb
mov
xchg
mov
inc
test
mov
pop
enter
and
js
enter
or
mov
cmp
fwait
or
dec
and
inc
mov
les
inc
imul
mov
arpl
xchg
movsb
and
ret
gs
mov
in
push
les
call
jns
xchg
lods
xchg
cwtl
imul
xchg
fdivl
xchg
scas
jl
popa
test
aam
test
fdivrl
test
divl
mov
push
call
stos
jle
xchg
jnp
addr16
arpl
stos
inc
ljmp
cs
aad
jge
ds
cmc
adcb
pop
lret
sub
jno
addl
mov
js
mov
jb
or
iret
andl
js
leave
mov
aas
repnz
push
pop
arpl
add
or
inc
xchg
mov
xor
xor
and
jb
aad
push
stos
aas
sbb
js
pop
aaa
in
daa
add
mov
imul
jecxz
aaa
mov
test
pop
jae
push
addl
movsb
lcall
push
jnp
sub
mov
ja
mov
adc
pop
xchg
aaa
xchg
fwait
bound
leave
dec
cmp
es
movl
aaa
addr16
or
or
xor
in
cmp
mov
jns
je
stc
mov
cmp
jle
dec
scas
lcall
insb
dec
or
cmp
cltd
mov
mov
pop
jb
loop
scas
adc
sub
and
pop
in
mov
mov
mov
cmp
jo
xchg
sbb
iret
dec
jge
int3
enter
sub
jecxz
dec
or
fimull
loope
outsb
addr16
xor
or
fbstp
scas
loop
cmp
xor
dec
pop
cmp
repnz
cmp
pop
mov
sbb
clc
inc
jle
xor
aam
or
test
rcrl
and
fisubrs
mov
dec
and
inc
mov
decb
inc
push
sbb
cld
pop
mov
data16
cmc
adc
imul
add
mulb
daa
xor
fistl
pop
out
cmp
xchg
mov
movsl
inc
add
push
xchg
mov
pop
shlb
dec
and
mov
mov
in
bound
bnd
out
pop
xor
adc
xlat
scas
arpl
jbe
and
jo
das
call
add
cmp
sti
jmp
cmpb
and
or
icebp
adc
ret
js
inc
add
fcomps
sbb
jle
jne
sbb
xchg
inc
or
loopne
data16
stos
xor
and
dec
outsl
cmp
sbbb
pop
outsl
push
jb
loop
inc
aas
mov
mov
or
insb
pop
cmovns
cmp
lcall
xchg
adc
inc
mov
mov
mov
and
cmp
mov
xor
rolb
mov
js
gs
sbb
mov
es
movsl
and
or
outsb
negb
cltd
outsl
roll
cmp
inc
jg
jmp
sub
inc
jb
paddsb
aam
dec
aas
xor
xchg
xor
mov
jp,pn
pop
loope
mov
sbb
fcmovne
pusha
jecxz
fldenv
dec
insl
lret
mov
inc
inc
jno
sbb
test
leave
add
sbb
in
bound
int3
ja
jecxz
mov
cmc
cmpsl
shll
cwtl
loopne
je
es
mov
test
cs
mov
fiadds
cwtl
mov
mov
sbb
bound
adc
lret
mov
dec
add
jae
push
imul
jno
testb
inc
out
push
inc
jne
loop
sbb
jbe
mov
scas
add
xchg
lods
aam
cmp
inc
imul
xchg
icebp
mov
inc
xchg
jo
adc
ret
sbb
mov
jmp
mov
xchg
pop
sub
push
mov
jecxz
push
dec
push
movsb
hlt
movsl
mov
out
int3
sbb
stos
sbb
mov
movsl
jp
cld
call
mov
out
mov
inc
sub
push
and
mov
inc
adc
mov
sbb
in
not
addr16
and
popa
xor
lret
nop
mov
das
cltd
mov
jl
loope
jo
push
dec
in
hlt
sarb
loop
fldenv
sbb
xor
stos
enter
mov
mov
push
xchg
adc
ret
lret
outsb
sbb
lds
das
in
cwtl
loop
add
insl
lret
nop
jnp
fwait
inc
repz
pop
push
and
push
std
leave
daa
inc
ljmp
fcomp
ja
loop
adc
cmc
or
jb
sub
gs
enter
and
les
out
fwait
mov
mov
cmpsl
mov
push
sbb
or
push
fidivrs
stc
dec
mov
inc
jno
dec
jo
cld
rcl
out
mov
jmp
enter
mov
jmp
dec
add
scas
inc
adc
adc
inc
fwait
push
or
add
nop
addr16
hlt
push
shrl
lret
mov
xchg
test
adc
push
scas
pop
lret
lock
mov
in
add
dec
out
movsl
cmc
and
cmp
test
or
jmp
or
jbe
jecxz
or
sub
adc
orl
mov
push
call
notl
sbb
sbb
loopne
jmp
fbstp
out
jnp
mov
out
outsl
call
in
test
sbb
jp
mov
ret
mov
dec
push
in
inc
mov
sbb
add
je
adc
and
popf
mov
add
and
cld
inc
mov
sahf
out
aas
iret
jp
pushf
cld
sarb
jo
xchg
mov
repnz
cltd
mov
xor
xlat
lret
add
xchg
xlat
insl
jge
mov
xor
ja
lret
pop
add
xchg
nop
sbb
cmp
inc
and
in
inc
adc
pop
inc
popf
sub
xchg
mov
mov
imul
clc
iret
rcrl
sub
aam
inc
push
cmp
lods
rcrl
movl
nop
in
fiadds
xchg
lods
jnp
cld
pop
mov
fstps
jecxz
inc
insb
jecxz
lea
sbb
movsb
adc
mov
ljmpw
adc
bswap
jg
xchg
pop
xor
jo
test
in
icebp
mov
jl
cmp
fnstenv
in
sbb
arpl
jne
xor
push
test
sub
push
inc
cwtl
jb
sub
push
rol
movsl
and
lds
ret
and
mov
es
fildl
pop
pop
push
out
and
and
inc
pop
lahf
cmp
jg
loop
xchg
sub
xchg
add
cmp
decb
mov
int
and
fstpt
out
scas
dec
cmp
push
imul
dec
imul
and
lret
imul
adc
add
fs
xor
dec
xor
mov
js
lods
ret
mov
xchg
rclb
enter
mov
imul
test
std
adc
decl
inc
pop
das
sbb
addl
or
es
push
in
jb
sub
daa
int
lods
add
pushf
inc
movsb
dec
sbb
mov
push
mov
lret
out
mov
mov
sbb
xor
sbb
clc
mov
adc
fstp
iret
cmp
fdivp
xor
ret
cmpsb
cwtl
jo
popf
out
fsubrl
xor
addr16
repz
fisttpll
insb
pop
push
and
xchg
or
imul
out
int
cmp
rcll
jno
mov
lods
mov
fmull
ja
or
pop
xchg
lea
mov
pop
movsl
sub
shlb
out
loop
scas
hlt
and
dec
push
test
mov
call
xor
jbe
cmp
and
repnz
pop
xchg
cltd
mov
pop
subl
xchg
lds
mov
bound
sub
int
push
xor
mov
hlt
into
or
inc
das
les
add
or
adc
jl
sub
jne
jp
jne
inc
cmp
scas
xchg
fs
xor
stos
pop
imull
add
sub
add
adc
cmp
daa
lcall
jg
incl
xchg
ss
jmp
xorl
daa
in
fs
cmp
and
jne
lahf
fwait
adc
push
mov
cltd
pop
cmpsl
pop
sub
pop
mov
sub
and
shlb
call
ljmp
jg
jge
es
pusha
subb
cmp
pop
jmp
mov
stc
stos
rolb
sbb
sbb
iret
adc
fidivrl
aad
sub
arpl
mov
or
lcall
dec
and
mov
add
jnp
movsl
jge
iret
pop
dec
pop
ret
sbb
ljmp
dec
movb
das
xchg
out
gs
and
add
addl
pop
dec
enter
int3
out
add
out
adc
mov
xchg
les
popf
nop
push
in
sbb
jg
fcoms
dec
insl
nop
test
cs
cli
enter
icebp
aad
stos
les
jnp
xchg
popf
stc
call
stos
shlb
mov
sti
notl
rcll
push
jb
mov
dec
loope
insb
mov
stc
gs
mov
fmull
pop
cmp
jl
std
sbb
adc
fisttpl
xchg
inc
inc
sub
popf
jno
icebp
or
repnz
pop
aad
test
adcb
in
test
clc
sbb
sbb
outsl
dec
push
dec
lret
adc
bound
sub
mov
inc
pop
or
loope
sbb
adc
faddl
vdivpd
stos
mov
out
andb
xorl
lods
pop
and
mov
gs
insb
adc
xchg
lods
dec
es
mov
pop
ss
mov
int
dec
jbe
ljmp
rclb
mov
sub
in
cmp
js
repz
mov
enter
jmp
out
jo
sbb
sahf
mov
daa
mov
mov
xchg
cmp
or
daa
pop
push
cmp
test
or
out
cli
sub
xor
xor
fs
xchg
sbb
outsl
mov
jmp
shrl
and
js
jb
fld
mov
icebp
mov
mov
xor
test
push
jle
rcrb
out
cmp
imul
test
mov
push
xchg
in
lods
cmp
mov
hlt
xor
test
lea
push
leave
push
mov
add
xchg
bound
xor
je
pop
sti
fadds
add
jnp
mov
rclb
test
sub
es
and
push
push
sti
cltd
gs
fldt
mov
dec
insl
inc
addr16
dec
pop
fdivrl
mov
sub
int
lahf
pop
int3
dec
pop
jb
push
and
jnp
push
xchg
nop
pusha
jnp
insb
push
add
out
std
and
repnz
daa
lods
xchg
mov
out
stos
mov
jp
fildl
mull
fwait
add
aad
mov
fnstsw
lret
mov
xchg
and
fs
cmpb
mov
lods
jl
or
pop
inc
add
mov
hlt
aaa
push
sub
pop
cltd
pop
shll
adc
xchg
mov
ljmp
mov
and
mov
jle
sbb
adc
ds
xor
or
mov
inc
stc
inc
jp
push
sbb
test
or
scas
add
xchg
mov
addr16
sub
insb
stc
es
push
cmpl
int
and
adc
fadds
loope
add
enter
push
pop
cld
pop
push
xor
mov
add
sbb
mov
sub
outsl
push
scas
add
sarl
push
xchg
mov
out
bound
orl
jo
add
xchg
lea
out
mov
xor
movsl
inc
cs
pop
testl
jns
xor
inc
or
dec
pop
jbe
daa
out
stos
jmp
shl
leave
xchg
testl
xchg
adc
mov
jle
xchg
cmp
mov
push
dec
xchg
sub
fcom
xchg
xor
into
sub
jg
jecxz
popf
mov
addr16
adc
sub
jae
jnp
inc
shrb
pop
aas
fwait
ret
push
jne
pop
sbb
push
push
cltd
dec
xchg
push
jecxz
je
aad
fsub
test
or
mov
xchg
jge
loope
adc
imul
loopne
pop
xchg
add
dec
out
and
mov
fcomp
adc
aad
jo
add
push
pushw
mov
push
sbb
push
add
and
out
test
push
enter
ds
adc
xchg
and
xchg
mov
cltd
call
movhlps
in
cmpsb
sbb
add
cmpsl
js
lds
andl
push
mov
insb
fists
cmc
fists
insb
loopne
dec
daa
loope
sarb
xrelease
mov
sti
pop
push
js
bswap
popf
mov
dec
popa
xlat
test
mov
mov
fs
mov
scas
std
cwtl
arpl
fnstcw
fdivs
adc
ss
jnp
push
mov
stos
outsl
lcall
push
push
fnstenv
dec
ljmp
mov
add
xor
inc
in
mov
repz
xchg
cld
sbb
add
jbe
mov
dec
notb
andb
xor
push
scas
inc
arpl
loopne
loope
pop
shlb
adc
sti
xor
repz
sahf
js
mov
pop
shll
mov
imul
mov
and
cmp
and
add
adc
xchg
daa
or
hlt
sub
lret
push
sub
lods
data16
ds
push
leave
daa
mov
mov
sub
xchg
shr
xchg
or
and
cltd
sarb
js
aaa
int3
adc
and
loope
pushf
outsl
js
stc
dec
dec
cmpsb
mov
add
jmp
movsl
cmc
cmp
pushf
sbb
inc
push
push
lock
dec
hlt
dec
out
scas
jecxz
or
inc
mov
push
and
gs
loopne
add
bound
push
jno
xor
push
push
sti
sbb
loopne
or
jno
loopne
lret
jle
popf
popl
cwtl
dec
rorl
mov
test
dec
fcoml
push
mov
mov
fisubrs
xchg
jmpw
inc
pop
sahf
jbe
and
xor
or
inc
add
jne
mov
xor
shlb
test
out
cmp
fists
jecxz
or
add
stos
jnp
lea
loope
movsl
push
sub
sbb
sbb
jg
sete
sbb
pop
insb
xlat
lret
out
clc
loope
addb
adc
jne
popa
mov
lret
add
pusha
mov
ret
xchg
lock
jnp
repz
and
mov
repz
pop
sbb
cmpsb
sbb
sbb
iret
jbe
aad
call
sub
xchg
mov
jge
lret
inc
lahf
pop
es
ljmp
imul
inc
adc
ljmp
cmc
dec
cltd
push
dec
pop
pop
cmp
jge
adc
sahf
inc
jle
and
add
xchg
negb
dec
cmpsb
mov
mov
adcb
pop
push
sarl
jmp
movsb
mov
push
sub
lods
repz
pop
xchg
jmp
call
or
movsb
dec
and
pop
popf
lds
xor
dec
and
lahf
clc
vpaddb
scas
addr16
cmp
movsl
or
decb
mov
inc
jne
aad
aas
lds
xor
sub
movsb
out
loopne
pop
jno
adcb
xchg
in
lods
rcrl
rorb
cmp
fdivr
push
pop
pop
jge
push
jge
jg
dec
mov
sbb
sub
and
dec
mov
pop
loop
lcall
mov
mov
mov
cwtl
fnstcw
mov
jne
shrl
lods
push
adcb
mov
imul
mov
pushf
inc
push
nop
out
push
add
pop
xor
pop
in
and
inc
lahf
and
sbb
and
xor
sbb
xor
or
insb
je
push
xchg
int
sti
lods
xor
test
ljmp
xor
leave
and
mov
pop
mov
push
sarl
dec
xorl
dec
outsb
stc
xchg
inc
in
push
cmp
ficoms
int
loop
leave
jns
cmp
sarb
sub
dec
mov
inc
dec
sbb
mov
insb
sti
inc
mov
sbb
sbb
fs
sbb
icebp
dec
gs
push
jg
andl
pop
xor
in
sbb
inc
jo
sahf
add
fistpl
into
mov
insb
adc
jnp
pop
insb
arpl
mov
cmp
out
adc
mov
mov
sahf
dec
cli
cmpsb
call
mov
push
cltd
sub
aad
out
xchg
lds
pop
fidivrl
loop
push
push
scas
mov
call
cmp
inc
in
scas
aas
xlat
fbstp
cmc
sahf
iret
stc
add
cli
adc
xchg
inc
mov
mov
fcomi
imul
xchg
out
call
clc
xor
mov
aaa
adc
je,pt
arpl
lods
or
stos
lret
xchg
jge
inc
out
inc
ja
cmp
shlb
pushf
fldt
in
cld
dec
adc
test
les
nop
test
loop
mov
clc
jmp
xchg
and
insl
ja
insb
mov
and
mov
pop
das
ret
popa
adc
and
jnp
pop
dec
mov
pop
ds
aad
iret
push
mov
loop
mov
sub
rcrb
loopne
int
call
popf
dec
scas
add
mov
xor
sbb
jnp
fs
sbb
in
xor
mov
push
xchg
or
xchg
ss
js
mov
push
nop
dec
adc
imul
dec
leave
xchg
or
push
and
mov
cmpsb
sti
jnp
cmp
mov
std
add
push
xchg
dec
inc
rcll
pop
xor
mov
aaa
lock
shlb
lret
mov
repz
out
mov
shrl
test
push
inc
ret
cli
add
or
mov
aam
out
enter
push
dec
push
cmp
and
cmp
mov
ss
out
mov
dec
addb
pop
xchg
adc
outsb
push
sbb
mov
enter
inc
and
lea
fsubrl
lret
ljmp
std
cmp
add
sub
jne
test
jg
mov
scas
sub
sbb
jb
xor
sub
movsb
jmp
xor
gs
pop
xlat
mov
push
mov
adc
cmp
popf
inc
out
nop
xchg
aaa
push
divl
pop
pop
mov
loopne
mov
add
dec
insb
push
and
fldl
mov
xor
lds
xor
mov
cs
adc
mov
not
xchg
out
lahf
add
xlat
icebp
std
dec
sbb
pop
and
out
inc
mov
cmp
mov
fsts
push
mov
int
add
xchg
or
push
mov
push
loopne
ret
lcall
cmp
fdivrs
fidivl
test
and
in
and
jae
mov
cmp
clc
xchg
mov
fistl
and
push
jae
push
sub
stc
mov
lds
test
cmp
or
out
test
int3
bound
or
jmp
in
jg
push
inc
mov
lret
jno
fdivr
icebp
push
aaa
ja
sbb
add
cmp
shll
pop
sahf
lock
sub
xor
out
sbbb
imul
xor
je
and
pop
fwait
lret
bound
ja
nop
iret
in
idivl
adc
stos
mov
and
scas
les
into
mov
sub
jmp
lret
movsl
stos
jg
inc
dec
popa
inc
pop
cli
mov
outsb
jmp
pop
jp
push
jle
scas
fstpt
inc
jae
iret
mov
lods
jae
lret
dec
sbb
jne
inc
div
mov
pop
loope
imull
jl
jo
aad
mov
iret
push
xor
shl
inc
popa
out
ja
add
negb
sti
sti
pop
mov
mov
mov
or
dec
cwtl
and
jmp
jb
stc
mov
scas
add
xchg
andl
jmp
cmp
out
xchg
pop
ret
pop
push
pop
bswap
jb
sar
lcall
int3
movsb
xchg
push
mov
xor
ljmp
ljmp
jne
adc
out
mov
jge
in
push
rcrl
mov
add
enter
shlb
mov
aas
inc
inc
movsb
jo
inc
sub
test
jp
adcb
or
aam
in
push
or
adc
icebp
mov
xchg
dec
test
jl
adc
push
xchg
lret
inc
mov
and
jge
test
scas
add
sub
lahf
inc
lock
xchg
out
aas
adc
pop
mov
js
xor
idivb
jbe
lds
int3
add
mov
and
out
cld
cmp
pop
faddp
inc
ljmp
insb
pusha
lret
and
loopne
cld
jmp
aad
outsl
xchg
out
push
adc
rolb
cmp
iret
out
xchg
ds
pusha
aam
es
push
or
adc
cmp
std
jecxz
loopne
repz
lret
stos
fbld
inc
xor
sub
dec
xchg
popf
pop
cli
mov
jp
xor
aad
dec
xchg
cs
pop
sub
cmp
jae
int
cmpsb
xor
add
dec
inc
xchg
xchg
xchg
cltd
jl
mov
mov
xchg
pop
addr16
ds
imul
jbe
in
jle
cwtl
xor
pushl
and
incl
jno
ds
push
imul
xor
movsb
out
adc
pop
or
pusha
outsl
jne
decl
sbb
push
mov
or
dec
push
dec
ds
aaa
xor
mov
lahf
pop
jp
int3
xor
xchg
das
mov
mov
lock
or
shlb
push
sub
mull
or
mov
jp
fcomps
or
xor
add
xor
mov
dec
mov
mov
mov
xor
int
xchg
mov
inc
imul
sahf
cmp
mov
enter
dec
add
cs
hlt
ror
push
cmc
jae
sarl
adc
dec
nop
cs
mov
shrl
jne
mov
mov
mov
loope
lret
test
sbb
shll
enter
adc
sub
sub
cli
add
adc
lcall
sub
inc
loop
loopne
cmp
fistl
jae
testb
lret
dec
fisubl
sbb
dec
or
or
les
jl
shrl
js
popf
jb
or
lea
add
mov
clc
or
cwtl
es
mov
push
adcb
ja
mov
out
lahf
outsl
in
dec
adc
cmp
int
sub
xchg
out
inc
gs
or
pop
push
ds
mov
aam
push
mov
dec
sbb
stc
push
xchg
rcl
scas
ds
ljmp
mov
mov
scas
nop
lods
xlat
fimull
dec
fcmovbe
lods
push
insl
cmp
xor
fsts
mov
cwtl
iret
lea
aam
and
add
sbb
sbb
mov
in
jge
pop
dec
xchg
in
adc
cmp
es
sti
std
sub
push
popa
push
loop
or
or
stos
cmpsb
mov
sbbb
add
add
or
push
ret
cmp
add
iret
std
or
jmp
movsb
sbb
and
jp
pop
into
nop
mov
sar
leave
inc
adc
pop
cmp
jb
bound
je
lods
pushf
fld
cmp
loop
jecxz
or
imul
in
mov
mov
mov
out
mov
jae
hlt
imul
xrelease
test
and
dec
xchg
pop
jns
shrl
adc
nop
sbb
add
mov
push
pop
fbstp
jne
xchg
xchg
adc
divl
int
popa
test
ret
lds
cli
jg
mov
sub
inc
fisttpl
shll
xlat
ja
adc
mov
orl
sbb
mov
adc
dec
inc
push
in
cmp
hlt
sbbb
push
cmpsl
and
rcl
or
and
fnsave
add
add
sbb
push
mov
push
xchg
add
je
dec
xchg
les
imulb
lods
ds
mov
sti
jns
xor
ficomps
sub
xchg
fwait
je
ret
sub
jmp
mov
jnp
push
jg
cmpsl
mov
repnz
in
inc
into
mov
jnp
adc
mov
das
bound
pop
push
push
xchg
cmp
into
xchg
sub
lret
mov
dec
mov
sbb
xchg
cwtl
in
push
in
sub
fstpl
aaa
and
push
sbb
jmp
jmp
iret
incl
cs
jns
out
std
adc
pop
aas
cmpsb
inc
add
xor
je
cmpb
mov
push
mov
dec
movsl
add
sub
cli
xchg
fwait
mov
cmp
shl
sub
jp
add
adc
xchg
popa
pop
jl
clc
ret
pushf
inc
push
gs
xor
inc
leave
int
jmp
subl
sbb
ss
pop
lods
fsubl
or
jae
testl
aad
inc
xor
mov
jbe
mov
adc
or
outsl
add
fsts
sti
ljmp
xchg
mov
repnz
jnp
adc
add
pop
or
cmp
clc
loopne
fsubrs
cmpsb
test
les
xor
mov
lahf
inc
cwtl
stos
pop
jmp
jb
fs
scas
mov
inc
iret
std
xor
jp
sbb
outsl
popf
adc
aaa
mov
fldcw
jp
stos
arpl
dec
repnz
dec
stc
xor
sub
cwtl
cmp
ljmp
testb
outsl
das
and
sub
sti
xor
inc
mov
push
xchg
add
mov
pop
adc
add
add
out
fistpll
outsl
insl
packsswb
xor
sbb
mov
ja
int
leave
dec
insb
into
inc
cmp
test
hlt
mov
out
stos
hlt
jbe
outsb
shrb
jg
pop
pop
add
sahf
imul
fucom
push
imul
adc
in
inc
pop
sbb
xchg
loope
movsb
xor
push
repz
ret
pop
sbb
cmp
push
or
subl
nop
mov
jle
iret
out
popa
ljmp
sub
bound
sbb
or
mov
pop
sahf
popf
push
aaa
push
or
cmpsb
pop
popa
jle
xor
imull
jae
fbstp
ljmp
cmp
mov
sub
in
movsl
retw
push
or
pop
adc
pop
xchg
xor
mov
mov
fucom
call
add
or
sub
and
in
sbb
mov
mov
jp
dec
xor
ret
enter
dec
push
sub
popa
mov
adc
adc
or
out
cmp
push
inc
imul
xor
mov
sarb
pop
shll
dec
sti
adc
popa
movsb
imul
adc
test
ret
push
mov
std
sahf
lcall
dec
cmp
mov
out
sbb
int3
mul
popa
cli
aas
icebp
jns
in
add
xchg
pop
iret
pop
aad
mov
movb
sub
bound
sbb
dec
push
sbb
add
sbb
bound
fisttpl
push
gs
pusha
add
popf
push
flds
in
mov
scas
sub
ret
aas
mov
stos
stos
sbb
inc
sarb
mov
cltd
ljmp
je
push
add
mov
fcomip
push
sbb
mov
movsl
aad
jp
and
pop
sbb
lock
cmpsl
dec
ja
movsl
or
mov
dec
xchg
mov
mov
pop
arpl
xor
int
pop
lahf
hlt
dec
add
stos
cli
push
and
stos
pop
aam
in
push
rorb
pop
cs
inc
orl
scas
xchg
mov
inc
dec
call
mov
sti
lods
mov
pop
dec
popf
fldcw
mov
cmpsl
into
lcall
jo
inc
push
push
notl
xchg
pop
pop
fsubp
or
add
inc
lcall
daa
pop
mov
fsubl
fdivl
push
cli
add
sub
dec
stos
scas
adc
sti
or
push
jns
iret
cld
mov
add
lods
ficoml
xor
cmpl
outsl
iret
scas
icebp
cmp
out
push
out
test
idiv
xchg
or
imul
jge
cmp
sbb
push
leave
xchg
inc
cs
stc
fisubrl
dec
in
cmp
lcall
ret
subl
aam
lock
fsubr
ficoml
into
test
in
shll
sub
xor
mov
inc
sub
adc
ds
dec
movb
es
mov
rcrb
fsubrl
popf
mov
jp
jl
pop
xchg
stos
imul
dec
and
mov
xchg
or
jecxz
data16
dec
jecxz
add
sahf
dec
inc
sbb
jno
mov
gs
push
push
cmp
mov
outsl
cmp
insb
test
cmp
mov
loopne
ret
adc
xchg
shrb
addr16
fstps
decl
xor
int3
dec
or
movsb
stos
or
repz
std
fldenv
xor
sub
pushf
je
imul
je
adcl
xchg
push
ficoms
add
jb
les
jb
push
icebp
mov
mov
or
jnp
dec
pop
adcl
and
es
rorb
pop
gs
mov
push
cmc
xchg
xchg
std
mov
cmp
roll
fs
addb
jmp
xchg
adc
mov
ror
leave
cmp
cmp
or
stos
lret
adc
xchg
xor
push
or
push
pop
nop
in
fcomi
jg
movsl
adc
ds
shl
les
and
in
xchg
cli
test
cld
dec
push
inc
mov
data16
int3
inc
bound
shlb
clc
ja
addl
hlt
inc
mov
loopne
jp
mov
fadds
ljmp
xor
jae
adc
sbb
sbb
pop
sbb
in
rcr
scas
sbb
push
push
mov
fcoms
jb
cs
ljmp
loop
bound
pop
sub
fbstp
mov
bound
pop
xlat
pop
cs
add
or
push
test
js
sbb
xchg
sbb
dec
stos
jb
icebp
jns
bound
pop
outsl
ret
out
call
sub
sti
add
ljmp
cld
lods
jnp
xchg
sti
adcl
insl
add
mov
lods
sub
loop
hlt
clc
es
cld
pop
mov
pop
mov
cmc
mov
shll
inc
adc
fmul
jne
pop
insb
je
in
les
and
mov
mov
inc
add
js
push
pop
or
stc
xchg
pop
scas
clc
or
fs
bsr
pcmpeqb
rcr
cmp
aas
ss
ret
mov
and
int3
fadds
inc
mov
roll
mov
and
cltd
jle
dec
addr16
movsb
movsb
sbbb
sbb
fchs
mov
and
cmp
cmpb
dec
lret
fcomps
push
dec
adc
cltd
mov
and
mov
fucom
pop
push
in
push
adc
repz
add
push
mov
jns
inc
sbb
or
add
es
ror
mov
add
cs
xchg
in
sahf
add
ljmp
sub
clc
push
rcl
push
fnsave
pop
adc
inc
mov
push
or
push
insb
cltd
out
mov
repnz
arpl
aaa
sbb
andb
and
sahf
or
jbe
xor
xchg
adc
sbb
pop
or
push
adc
or
cmp
sub
push
add
icebp
sub
addr16
insl
xor
cmpsl
pushf
inc
or
mov
mulps
xchg
adc
cmp
xchg
cmp
xor
mov
inc
cld
mov
dec
push
inc
frstor
lock
push
idivb
clc
addr16
ficoml
or
inc
pop
and
repz
sti
xlat
mov
dec
out
popa
mov
xchg
pcmpeqb
outsb
imul
into
pop
push
imul
jle
mov
pop
lcall
imul
ja
push
dec
jecxz
or
ret
insb
xchg
jecxz
fnsave
xor
cltd
ret
imul
sahf
clc
sbb
add
rcrb
mov
push
movsl
xchg
push
rcll
dec
xor
jl
dec
pop
in
sbb
lea
inc
xor
fcoms
mov
lcall
adc
fistpll
fildl
out
pushf
scas
mov
sbb
imul
mov
cmp
xchg
test
mov
mov
vmovupd
aas
xor
sbb
dec
rorl
rolb
jne
dec
sbb
dec
rcll
mov
jmp
pop
es
add
cmpl
pop
mov
into
mov
mov
jmp
fsubrp
aaa
jns
ljmp
sahf
add
dec
bound
pop
insb
xchg
adc
jne
movsb
bound
xchg
xchg
cmp
stos
lret
and
mov
fs
add
inc
xor
scas
jne
out
xor
ljmp
push
and
fstl
adc
pop
call
pop
cmp
rolb
cwtl
repz
adc
fcompl
loop
mov
cmpsl
mov
jo
roll
push
inc
sub
addb
adc
sbb
fsubs
aas
adc
push
scas
and
sahf
pop
inc
pop
xor
outsb
sub
cs
xchg
xor
dec
xor
mov
mov
sbb
jmp
cli
and
iret
xchg
dec
cmp
jle
mov
and
mov
cmp
cmp
call
ds
pop
lods
xor
mov
mov
adc
push
movsb
sub
in
dec
add
fidivl
test
jbe
push
aam
stos
lea
xchg
ss
mov
jle
rsm
and
lahf
sbb
lahf
lds
ret
out
xor
mov
pop
sbb
dec
scas
xor
inc
add
jge
cmp
insb
dec
lret
dec
imul
rorl
inc
push
clc
or
mov
sub
dec
xchg
sti
cs
sbb
push
mov
jns
sub
outsl
push
and
mov
pop
mov
add
das
loopne
sub
xchg
pop
adc
dec
mov
xor
pop
test
mov
adc
fcoml
inc
inc
lret
in
cmp
testb
mov
loope
movsl
cmpsl
bound
loope
mov
stos
xchg
fwait
loopne
dec
mov
adc
pop
ret
push
mov
push
jbe
in
out
jge
cmp
inc
sub
sbb
jnp
int
or
shl
push
mov
jbe
xchg
mov
loope
xchg
pop
in
push
mov
push
cmp
outsl
scas
test
ret
out
das
js
sub
jbe
jbe
mov
jge
mov
daa
xor
and
repz
pop
or
push
in
lea
fisttpll
stos
adc
cltd
lret
push
pop
jne
add
jns
cli
lret
lods
cmpsb
loop
sub
lock
popf
jmp
lods
adc
dec
pop
mov
aam
push
mov
ret
jnp
std
shrb
subb
test
jb
push
outsl
add
test
fmul
mov
add
pop
pop
fs
int
imul
rolb
sbb
push
sarb
sbb
popf
push
es
mov
fdivr
inc
movsb
push
idivl
sbb
or
fwait
or
xchg
ret
pop
shll
pusha
adc
mov
or
push
ret
lret
and
mov
sti
cmp
sub
outsb
mov
mov
cltd
loopne
xchg
sub
loop
rolb
leave
pop
add
cmpsl
pop
pop
pop
repz
aas
push
loop
inc
pop
pop
inc
or
mov
ja
bswap
das
xchg
pusha
ret
xchg
out
mov
fists
and
ret
adc
jg
xor
mov
les
insb
outsl
test
fs
xchg
gs
mov
and
mov
sub
jns
stc
xor
lds
stos
leave
adc
mov
rcll
lock
adc
js
imul
adc
shrl
out
mov
popa
lock
xchg
xor
iret
dec
sahf
out
xchg
fildll
sub
addr16
add
mov
mov
mov
push
add
mov
xchg
ljmp
inc
xor
push
mov
xchg
fucomip
xor
mov
mov
aam
shr
lahf
or
aam
push
sub
outsb
mov
clc
cld
and
push
movsb
xchg
mov
test
jb
adc
shrb
push
test
push
rol
mov
cmpl
cmp
fsubrl
sub
aad
cld
add
push
sbb
sub
fidivl
and
mov
sahf
jb
gs
pushl
subb
and
mov
cltd
xchg
sahf
jmp
inc
sti
xchg
sahf
push
mov
lods
stos
pop
scas
outsl
mov
sub
popf
stos
imul
adc
jbe
xchg
js
xchg
fwait
xchg
je
andb
js
sahf
arpl
mov
cmpsb
jne
xchg
mov
xchg
popf
pusha
aad
cmc
add
mov
sbb
ja
inc
scas
shlb
je
or
rorl
dec
in
mov
imul
fisttpll
sub
decl
dec
push
push
cmp
test
jl
in
and
fbstp
mov
loop
popf
out
push
fdivrs
mov
nop
lods
cmp
ret
fidivrs
xorb
shlb
les
mov
f2xm1
call
jno
xor
mov
add
and
xor
inc
xor
enter
lcall
jg
and
xchg
shl
mov
iret
subb
and
movsl
push
xor
dec
sbb
stos
or
repz
or
pop
scas
cmp
mov
movsl
enter
popa
ret
push
pop
mov
dec
xchg
or
mov
jno
cmc
loope
stos
mov
push
or
int
pop
cwtl
dec
sarb
mov
push
push
jp
call
xchg
mov
pop
lret
xorps
js
add
pop
push
icebp
fcompl
add
add
jne
jmp
xlat
inc
and
icebp
xor
cmp
dec
or
ljmp
or
mov
mov
cmp
test
push
shrb
jbe
in
fisubrl
cmc
in
dec
fcmovu
es
jecxz
cld
and
mov
dec
adc
add
hlt
int3
fdivl
leave
imul
divps
rclb
add
jae
mov
fidivrl
movl
jge
test
imul
mov
or
mov
push
lock
je
testl
in
mov
pushf
out
push
pop
jg
xlat
ret
lcall
loop
sahf
int
mov
shll
fldl
out
xor
cmp
outsl
sahf
inc
cmpsl
adcb
repz
inc
xchg
notb
cwtl
xchg
ret
push
add
push
sbb
js
lret
or
dec
lods
push
enter
imul
gs
stos
cmp
rolb
dec
call
mov
andl
popf
push
inc
jp
rcll
in
jp
imul
sbb
aaa
je
mov
sub
jbe
pop
and
xchg
rcl
lods
or
sbb
jg
aaa
sbb
sahf
xorb
sub
stc
add
roll
arpl
popa
jae
adc
sahf
push
push
das
rcr
cmpsl
shrl
mov
js
pop
fidivl
push
or
int
stos
je
jbe
js
inc
pop
jp
popa
dec
push
iret
inc
and
jne
std
sahf
aaa
mov
sbb
fists
inc
xchg
lods
std
xchg
mov
sbb
mov
mov
outsb
pop
push
mov
and
in
popa
leave
mov
dec
jg
fwait
cmp
aad
cmp
or
or
test
ror
jo
dec
xchg
lods
cmp
scas
out
adc
mov
mov
add
leave
fdivs
es
imul
fsubr
jp
xchg
and
ret
or
xor
mov
icebp
loope
lahf
lods
out
jns
pop
imul
inc
add
ret
sbb
pop
notb
mov
test
in
jae
push
negl
jb
push
jbe
jmp
ss
rcrb
fsubrs
pop
dec
mov
xchg
mov
inc
insl
mov
popa
daa
iret
lret
in
or
sahf
jo
fstpt
fidivrs
push
neg
add
mov
pop
push
in
clc
adc
fwait
aas
andb
lds
xchg
cmp
les
sbb
outsb
xchg
in
jbe
and
in
mov
adc
and
xor
popf
pop
fadd
pop
add
jl
rcll
push
mull
xlat
xchg
fisttpll
out
adc
pop
mov
lods
mov
pop
mov
dec
outsl
xchg
and
jns
add
std
mov
jmp
jo
inc
orl
jmp
in
pop
frstor
hlt
aas
jne
xchg
adc
xchg
imul
in
xchg
mov
dec
sub
int
icebp
das
or
nop
add
mov
pusha
popa
dec
cli
push
jb
pop
jns
dec
xchg
mov
jae
adc
neg
push
mov
insb
and
xchg
addr16
sub
call
jbe
outsl
pop
repz
repz
or
jp
sbb
push
lcall
push
xchg
or
jmp
cld
xlat
jns
push
out
jge
pop
push
inc
ficompl
jl
mov
imul
push
fs
shrb
push
pop
insb
inc
add
sub
mov
jo
jo
stos
mov
mov
inc
fisubrs
pop
rcrb
in
cli
sbb
mov
jle
cs
ds
push
sarl
cmp
outsl
jmp
dec
insb
cmp
push
sub
jge
andb
or
inc
dec
ret
mov
inc
xor
cwtl
xchg
hlt
nop
iret
cmp
movsl
xor
std
in
repz
call
outsb
sbb
rorb
out
stos
popf
sub
ljmp
pop
aam
jmp
add
dec
sti
sti
jecxz
xchg
sarb
push
mov
notb
or
test
shll
jns
mov
dec
pop
nop
push
shl
popa
iret
adc
jbe
mov
inc
xor
fidivrs
cmp
xchg
jbe
test
mov
xlat
mov
sahf
add
pop
dec
xchg
roll
sub
lea
aas
mov
stos
xchg
lcall
fwait
or
sub
sbb
xor
mov
jl
pop
frstor
xor
sbb
jmp
inc
pop
mov
ds
sarl
lret
mov
pop
notl
cwtl
mov
pop
lods
fbstp
repz
int3
jo
repnz
mov
adc
stc
pop
unpckhps
in
rcr
icebp
push
call
and
std
mov
jns
jmp
js
lret
std
outsl
add
ficomps
sub
int3
loopne
sahf
add
fmuls
sar
pushf
popf
in
push
test
and
cltd
and
cmpsb
ljmp
into
adc
fdivs
inc
add
and
cmp
sub
ja
cwtl
js
in
cld
push
ret
out
popa
lods
dec
testl
add
mov
xchg
sub
xlat
sbb
repnz
ljmp
inc
int3
scas
cmp
jge
xor
inc
mov
or
pushf
xor
and
cmc
ljmp
dec
sub
lds
and
xor
subb
inc
mov
xor
int
dec
xor
adc
jl
insl
out
scas
insb
mov
fstp
mov
sahf
jno
scas
addr16
repnz
int3
pop
xor
sbbb
push
filds
bound
sbb
pop
cmp
js
cmp
jnp
test
jp
cmp
xchg
cmp
inc
xor
adc
out
or
push
cmpsb
dec
ret
pop
add
fisubrs
scas
dec
xchg
shlb
xor
mov
jnp
dec
out
pop
les
pop
insl
mov
mov
adc
xor
add
fbstp
enter
scas
rcrb
daa
add
les
clc
inc
mov
out
dec
cli
loope
aas
pop
cmp
xor
movsb
aam
push
add
sbb
fwait
xor
fdivs
shrl
imul
rolb
inc
dec
dec
inc
cmpsb
cmpsl
je
or
flds
cmp
push
out
lods
test
inc
sub
fadd
out
xchg
and
test
fsubl
sarl
pop
or
sub
outsl
test
jns
xchg
mov
lods
jge
xchg
cs
pop
rol
jno
lods
sub
mov
mov
mov
push
cmp
lods
stos
ficoms
mov
mov
add
and
dec
xchg
mov
mov
mov
stc
dec
aaa
mov
sub
lret
arpl
cli
imul
out
in
sbb
push
mov
shl
xchg
xchg
xchg
leave
mov
data16
adcb
pop
cmp
dec
inc
leave
jae
shll
sub
mov
pop
sbb
push
pop
jno
dec
dec
and
cmp
fsubs
cmp
lock
stc
sti
flds
mov
ja
sbb
mov
mov
mov
mov
insl
mov
mov
push
arpl
add
push
and
mov
hlt
xor
insb
cmp
xchg
aas
mov
dec
cmc
mov
imul
xor
inc
fsub
push
mov
mov
jp
jg
xchg
or
imul
rorb
es
cmc
pop
and
inc
or
mov
scas
in
into
lea
inc
pop
sbb
popf
arpl
push
push
dec
divl
mov
xlat
xchg
sahf
sbb
rcrl
jle
sti
or
dec
icebp
test
sti
pop
push
pop
dec
je
pop
enter
xchg
xor
lds
loope
mov
mov
push
dec
push
dec
loope
mov
cltd
popa
iret
rorb
push
xchg
push
popf
jle
sbb
adc
inc
testl
pop
xchg
mov
jnp
mov
test
pop
sub
in
popf
dec
mov
cmp
sub
and
dec
sbb
and
imul
sti
sti
rcl
dec
mov
test
mov
pop
cmp
cmp
xor
fs
pop
jecxz
jecxz
loopne
mov
call
aas
mov
test
lds
int
adc
jge
shlb
jmp
add
lret
cmpl
jmp
cmp
cmpsl
enter
mov
adc
loope
cmc
mov
or
lea
push
sti
js
out
or
cmc
or
or
stos
jne
leave
insl
call
mov
cmp
call
cmp
push
and
mov
stos
daa
push
jge
push
or
sbb
add
sub
xchg
cltd
inc
je
imul
sbb
repnz
ljmp
pop
mov
jb
mov
inc
rolb
cmp
jno
push
mov
int
insl
daa
cmp
jecxz
sbb
lods
arpl
dec
jae
pop
call
mov
cli
jp
movsb
call
add
sti
jne
xchg
mov
incl
lret
sbb
test
sbb
ss
push
test
push
xor
pop
in
xchg
nop
loopne
testb
repnz
or
mov
out
scas
out
das
lock
cwtl
push
cwtl
in
loopne
add
ja
mov
sti
jp
aas
adc
jle
sub
and
jno
arpl
sub
pop
repz
mov
xor
negl
dec
or
lret
inc
movl
mulb
call
movsb
inc
xchg
lret
es
adc
mov
loope
pop
loopne
cmp
or
xor
sbb
jnp
icebp
jb
shlb
fwait
cld
add
in
cmp
mov
lcall
mov
or
in
adcb
xor
add
pusha
adcb
mov
push
scas
pop
shrl
push
ss
sub
aam
imul
ss
mov
orl
fs
cld
adc
popl
iret
xchg
mov
cmp
sub
stos
nop
dec
in
and
jg
mov
pusha
push
push
and
push
jmp
mov
inc
dec
mov
mov
and
lods
push
inc
add
mov
cwtl
xor
pusha
insb
iret
mov
or
jnp
cmp
and
stos
push
and
add
push
mov
push
sbb
imul
out
ret
xor
xor
es
jo
out
jp
in
inc
into
dec
pushl
push
sub
popf
pop
out
test
das
dec
daa
or
ss
cmp
fisubrs
add
pop
push
fidivs
loop
push
push
loop
sub
pop
and
fcomps
popf
mov
push
mov
test
push
out
shlb
mov
stos
dec
jmp
sbb
out
pavgw
cmovno
addr16
and
frstpm(287
xchg
mov
lods
scas
ret
mov
cmpsb
nop
push
xchg
and
repz
fstpl
push
jl
sahf
dec
ja
js
mov
loopne
mov
aad
insl
ret
xchg
sti
aaa
bound
mov
fsubl
in
les
push
sbb
andl
xorl
lds
addr16
call
push
mov
jmp
adc
test
add
push
je
pushl
in
pop
addr16
push
iret
xchg
aaa
rolb
push
cld
ljmp
sub
and
mov
and
insl
popf
adc
lahf
add
sub
mov
clc
cmpsb
ficompl
dec
test
xor
les
pushf
jge
sar
pop
or
lods
cs
add
sbb
cmc
pop
js
pop
dec
jg
mov
aaa
xor
test
icebp
std
xchg
xchg
mov
sub
rorl
xchg
mov
call
jg
in
push
insl
add
jae
out
cli
arpl
out
rcrb
ja
pop
mov
divb
out
push
mov
xor
scas
test
stc
add
and
cmp
test
jno
adc
push
rcll
test
sub
lods
scas
sbb
mov
cmpsb
aaa
mov
notb
mov
in
dec
aaa
mov
insb
js
lods
mov
pusha
enter
mov
cmp
stos
pop
sbb
roll
inc
add
outsl
icebp
stos
push
cltd
inc
inc
sti
loop
mov
adcl
in
sub
pop
call
push
adc
into
cs
cwtl
sub
nop
xorb
jmp
push
add
out
cmc
popf
cld
mov
cltd
jmp
mov
sbb
rcrb
idivb
sub
pop
xor
test
push
mov
inc
or
lods
into
dec
jno
pop
cmp
jbe
cli
loope
adc
in
xchg
xchg
jae
popa
mov
and
and
lods
push
cli
jae
lea
ret
pop
jecxz
jmp
xor
rol
mov
pop
andb
xchg
repnz
and
push
ss
cmp
xchg
sbb
sub
fwait
loopne
pop
fucomip
sub
lods
pop
and
lods
pusha
gs
xchg
xorl
cmp
fwait
out
jl
mov
xchg
and
nop
test
push
nop
out
fimull
mov
pop
add
mov
or
xchg
mov
xchg
dec
inc
pop
mov
mov
cli
pop
and
in
jb
inc
and
push
leave
or
add
jno
jg
dec
lods
cs
jl
ja
xchg
mov
xchg
sar
jmp
popf
sti
lods
icebp
pop
xchg
out
cmp
and
fwait
aaa
xorl
and
xor
mov
je
outsl
jmp
mov
out
add
xchg
test
aaa
icebp
jle
add
pop
fmuls
adc
daa
add
aaa
hlt
sub
fcmovne
daa
mov
std
jo
mov
adc
mov
jmp
ficoms
pop
and
daa
rclb
inc
pop
rclb
mov
fcoms
dec
xor
fcmovne
jg
adc
xlat
cmp
xchg
call
adc
sahf
adc
sub
icebp
out
xor
jmp
nop
fldt
int3
lds
jns
loopne
and
mov
loope
insb
sub
sub
call
jae
mov
sub
sbb
xchg
aad
push
xchg
pop
es
mov
sbb
jecxz
daa
cmp
bound
and
inc
test
repnz
ret
daa
cld
incb
scas
ds
mov
pushf
subb
add
push
dec
in
inc
xchg
sbb
lock
js
icebp
ljmp
push
and
shlb
int
jnp
and
fs
cmp
stos
jbe
addl
adc
push
xchg
in
mov
inc
test
orl
dec
daa
push
pop
push
out
loope
xchg
out
in
popa
lret
pop
test
cli
in
pusha
cmp
lahf
negb
test
sti
jge
test
cmp
cli
roll
dec
dec
fucompp
or
push
outsb
push
fwait
mov
dec
lods
je
and
mov
push
jecxz
mov
pusha
and
stc
into
sub
ljmp
pusha
adc
test
add
jl
pop
orl
lret
out
das
add
aas
mov
adc
mov
inc
shll
pop
mov
insb
sub
jae
pop
mov
or
dec
pop
or
sahf
add
mov
mov
adc
dec
lods
popf
mov
sub
mov
fst
jecxz
inc
into
jae
pop
std
es
aam
lcall
dec
mov
pop
fadds
call
out
inc
inc
push
mov
or
in
divl
push
lock
scas
mov
xor
testl
test
xor
jmp
sahf
sbb
cli
shll
add
test
xor
cmpsl
sub
adc
test
mov
out
xor
jns
jge
scas
push
or
popa
sahf
rorl
cmp
insb
imul
jbe
shl
enter
negb
add
nop
jnp
jno
js
cmp
pop
sbb
mov
mov
in
sub
shll
lcall
dec
ret
push
pop
fstl
adc
ljmp
mov
ret
adc
xchg
sti
push
daa
pushf
fisubrs
mov
pusha
lcall
mov
dec
push
mov
popa
mov
mov
int3
cmp
cmp
mov
mov
out
mov
movsb
cwtl
movsl
fiaddl
xor
sub
jmp
push
adc
dec
sbbl
mov
loopne
loopne
das
and
jae
xor
mov
into
sahf
test
fstpl
daa
pop
rcr
mov
mov
xor
divl
into
cmp
or
push
sbb
cmp
cli
scas
add
out
mov
push
adc
aam
xorb
lahf
pop
mov
jl
test
mov
sub
xchg
ret
in
jl
push
add
les
pusha
loopne
test
adc
shlb
pop
jecxz
xchg
add
sbb
ficomps
enter
adc
push
repnz
mov
or
into
out
rcrb
cmc
inc
dec
mov
es
pushf
lea
movsb
mov
movsb
movsl
nop
jmp
push
faddl
pop
imul
cmpsb
iret
fisubl
or
out
inc
enter
jno
and
mov
sub
or
in
test
pop
mov
mov
adc
outsb
lock
adc
test
notb
dec
cmpsb
adc
mov
jo
inc
and
push
mov
and
stos
bound
pop
push
lock
push
push
arpl
aas
jae
xor
das
mull
mov
outsb
push
jecxz
insl
mov
sub
pop
scas
xchg
sbbb
sbb
rorb
sub
cli
ja
sarl
arpl
rolb
jns
cmp
bound
xor
into
mov
push
pop
out
repz
lods
push
gs
ss
mov
mov
daa
pop
popa
mov
or
pop
mov
sbb
push
cltd
cld
arpl
out
fmull
sbb
dec
jns
or
mov
roll
xorl
in
ds
push
leave
push
inc
cmp
scas
mov
jecxz
cmc
inc
push
out
dec
jmp
scas
xchg
mov
pop
jge
cmpsb
jbe
popa
jbe
sub
push
stos
lea
jbe
movsl
outsl
imul
arpl
in
cmpsl
stos
test
or
dec
add
inc
mov
cmp
push
cwtl
mov
or
xlat
out
xchg
xor
dec
sub
jl
add
test
loop
lret
sub
cmpsb
sub
fcoml
push
jp
mov
jb
cmc
xchg
pop
data16
add
cwtl
test
sub
pop
push
insl
push
rorl
pop
mov
rcl
push
insl
mov
mov
push
sub
es
lret
mov
aam
scas
mov
sub
dec
add
imul
adc
mov
jp
pop
bound
repnz
cmp
add
sbb
lea
add
aaa
cs
adc
push
fucomp
pop
pop
add
lea
repz
jb
jecxz
fdivs
jbe
pop
mov
pop
scas
cltd
mov
add
mov
push
call
cmp
sbb
in
pushf
sub
inc
out
sbb
mov
push
jecxz
sub
sahf
cmpsl
or
addr16
enter
jae
xchg
sbb
push
mov
cli
dec
jmp
xlat
cmp
pop
je
inc
and
loope,pn
xor
push
mov
sbb
pop
mov
pop
xor
nop
popa
mov
or
ja
or
test
xchg
xchg
fstl
pop
push
dec
fildl
in
mov
movsb
mov
jae
in
adc
aad
out
xor
and
pop
repz
jge
cmp
xchg
clc
popa
jo
imul
jbe
sbb
in
adc
adc
rolb
mov
lds
xchg
inc
cmp
ljmp
arpl
inc
insb
int3
cmp
int3
push
lret
jo
xor
sub
loopne
push
icebp
gs
test
jle
mov
or
cwtl
dec
sbb
push
test
cmc
ljmp
dec
sub
sub
lret
lock
imul
dec
mov
inc
inc
pop
fdivl
push
mov
movsb
xchg
adc
and
sbb
jg
call
call
rol
out
jns
cli
cli
ficompl
shrl
sub
mov
fadd
pop
xchg
bound
jg
mov
icebp
mov
data16
dec
lods
arpl
cli
inc
jmp
dec
cmp
sbb
aaa
stc
sarl
add
adcl
test
sub
and
dec
push
or
cs
mov
inc
mov
cli
pushf
inc
xchg
ljmp
pushl
inc
je
or
hlt
stos
int3
lret
or
cs
lock
repz
fcoml
xchg
andb
out
popf
xchg
dec
jge
adc
sbb
pop
repz
sub
lahf
faddl
mov
cmpsb
mov
int
in
pushf
outsb
and
scas
mov
cmp
test
clc
cmp
pop
add
jno
jmp
cli
adc
in
jnp
xchg
cltd
adc
outsb
push
in
out
movsl
es
push
and
cwtl
les
sahf
shlb
add
popa
in
dec
mov
js
stos
dec
leave
mov
jl
mov
enter
loopne
mov
lret
xor
lock
mov
movsb
pop
out
data16
sahf
xchg
fs
inc
mov
or
sbb
or
stos
shl
loopne
mov
fwait
leave
les
pop
stc
sub
adc
or
movsb
repz
popf
loopne
ret
xchg
dec
je
outsb
daa
mov
popl
ret
orl
jb
dec
les
pop
es
cmpb
jae
sub
inc
xor
mov
je
pop
pop
sub
sti
cli
mov
pop
mov
fists
imul
leave
cmp
js
or
in
pop
test
popf
push
pop
dec
leave
jmp
lcall
movsl
jne
iret
sub
or
bound
inc
jp
pop
xor
jnp
push
addr16
aas
scas
sar
sti
scas
push
cmp
lret
dec
and
cmc
cmp
adc
divl
pop
or
cmpsl
xor
sub
das
jmp
aad
lods
mov
outsb
shrb
mov
xlat
loope
fmul
sub
mov
push
decl
lea
test
bound
incb
dec
xchg
leave
inc
stc
inc
popa
outsb
sbb
lret
push
xor
scas
mov
pop
adc
mov
jmp
dec
das
ror
out
pop
push
dec
dec
pushl
scas
iret
pop
lods
ror
jl
fisubs
sub
xlat
push
xor
lret
dec
xor
ss
addb
jo
data16
jle
mov
out
mov
icebp
shlb
push
jo
inc
mov
add
mov
clc
cmp
xor
dec
sti
test
inc
bound
and
xchg
cmp
mov
dec
cli
dec
cmp
add
jo
mov
dec
or
clc
mov
ja
je
or
pop
cltd
xchg
pusha
dec
fs
shll
out
xorb
repnz
mov
pop
cmpsl
rol
loop
out
lret
sarb
or
jge
cmp
pushf
mov
sub
data16
xor
test
jb
pop
xchg
sbb
mov
dec
ja
sti
je
cmpsl
push
jecxz,pn
shll
sub
out
adc
mov
jb
xlat
fisubl
stos
sub
lret
outsb
pop
test
cmp
icebp
jecxz
testb
out
mov
push
xchg
or
pop
into
enter
xor
imul
setp
test
xor
push
dec
jbe
sarl
adc
adc
movl
fistpl
mov
sub
adc
push
mov
aad
sbb
ds
xchg
mov
dec
lcall
rcrl
inc
mov
inc
ss
roll
adc
cmp
mov
insl
iret
notl
mov
lret
popf
insl
push
push
loop
pushf
or
sub
sbb
imul
xchg
inc
xor
push
clc
lods
movsb
sti
fimull
lds
mov
mov
sub
inc
xchg
inc
xchg
movups
xor
mov
or
xor
xchg
lds
fdivl
sub
jmp
outsl
push
divb
ret
lods
test
scas
adc
xchg
repnz
push
pop
dec
mull
jle
fucomip
pop
pop
test
negb
mov
mov
ljmp
aas
inc
loope
sub
leave
pop
or
pop
dec
push
sbb
loope
fstps
sahf
pop
dec
cmp
jl
test
cmpl
movsl
mov
pop
js
lods
jo
jnp
out
gs
out
xor
cmp
jmp
dec
fwait
mov
cmp
mov
jmp
mov
dec
enter
push
mov
or
mov
scas
jl
xor
sub
leave
shll
cwtl
clc
pushf
cmp
xchg
jo
push
testl
and
dec
cs
call
mov
push
mov
cld
shl
inc
mov
shll
mov
push
adc
das
mov
pop
pop
mov
stc
push
cmp
int3
or
aam
mov
jle
or
sti
xor
pop
cli
xchg
cmp
leave
jl
and
lea
fcoml
ss
mov
inc
sub
cmp
pop
pop
sbb
cmp
and
xchg
jmp
scas
negb
adc
lock
std
repz
das
insl
and
dec
lods
adcl
js
mov
fidivs
lds
clc
pushf
ja
sub
sahf
int3
add
repz
mov
jecxz
and
dec
enter
inc
xchg
mov
shrl
cmp
jge
jecxz
repz
sub
movsl
add
ds
mov
pusha
adc
dec
mov
loop
mov
mov
xchg
xor
pop
push
mov
imul
daa
add
call
push
hlt
data16
pop
fcmovnb
pop
mov
fisttpll
mov
mov
loop
iret
ja
push
dec
push
sbb
xor
js
mov
dec
adc
notl
sti
lcall
xchg
subb
inc
and
pop
lcall
inc
xchg
jb
call
lret
push
cmp
sbb
jb
mov
stc
fstps
stc
sti
xchg
jmp
jg
mov
sbb
repnz
pusha
dec
sbb
shlb
js
pop
push
mov
andl
push
pop
nop
pop
mov
ss
push
jo
cmp
int
xchg
test
into
addl
cs
dec
fwait
mov
sti
cltd
arpl
cltd
and
loope
call
jge
mov
arpl
aas
or
div
sbb
inc
inc
add
push
push
mov
pop
mov
xorb
out
ja
mov
push
cmp
gs
in
xor
adc
dec
nop
sti
lret
xchg
xchg
or
cwtl
xchg
repnz
xchg
mov
in
mov
fbld
sarb
roll
out
push
adc
nop
jb
addl
call
push
rol
inc
sbb
enter
push
insl
pop
ljmp
into
add
xchg
cmp
test
lret
sbb
test
call
cwtl
pcmpeqw
popa
or
in
xor
fs
mov
out
pop
pop
test
jg
popa
test
mov
movsb
mov
xchg
lods
ret
iret
push
movsl
add
test
xor
xchg
stc
fmull
in
jno
clc
mov
adc
adc
push
stos
inc
pop
movsb
inc
orl
push
sub
or
lahf
mov
insb
aam
jns
je
cmp
adc
cmp
movsl
imul
sub
sbb
gs
push
xchg
movb
cmp
movsb
sub
pop
cltd
mov
xchg
lcall
lcall
or
or
jnp
out
xchg
in
add
xor
sbb
sub
dec
push
and
push
push
mov
xchg
push
call
into
hlt
and
push
in
and
rclb
xor
jge
xor
add
sbbb
lods
fwait
jl,pt
lahf
dec
cmp
sub
pop
inc
cld
sti
adc
mov
pop
aam
mov
cmp
lcall
mov
jmp
call
imul
jb
rorb
jmp
jb
add
push
addl
inc
and
pushf
loop
xor
inc
sti
pop
je
lock
lret
shll
loope
lods
adc
scas
imul
mov
inc
dec
loopne
aas
xlat
pop
andb
xor
xor
sub
xchg
dec
mov
jo
xor
xchg
rcrl
and
pop
mov
or
addr16
movsb
les
neg
mov
insl
push
imul
mov
inc
mov
mov
push
in
pop
xlat
sbb
mov
sti
mov
les
sbb
lcall
xor
cmc
sbb
pusha
seta
jp
mov
call
pushf
fwait
call
or
mov
xchg
pop
dec
mov
clc
xor
mov
or
cli
xor
or
lret
andl
jae
sbb
or
jo
push
sahf
movsb
ljmp
cmp
inc
das
pop
pop
jnp
mov
aaa
mov
and
imul
xchg
aaa
push
sbb
fidivs
fcom
dec
add
sub
pop
add
call
jns
or
dec
pop
shlb
jne
sbb
dec
adc
xor
test
sub
fdivrl
pop
inc
mov
mov
aas
or
dec
jb
stos
mov
mov
cmp
add
cmpsl
inc
fcmovu
dec
rolb
sbb
cmp
into
or
pop
scas
cwtl
add
mov
int3
sub
adc
or
cmp
mov
mov
mov
loopne
sbb
jmp
kmovb
lea
and
xchg
lea
push
push
sbb
arpl
js
iret
xor
sbb
sbb
pop
mov
mov
lock
cmp
push
add
jae
xchg
das
cmp
xor
push
and
stos
repz
sub
ss
add
mov
aad
out
xchg
xor
xchg
xor
out
xor
int3
jnp
mov
mov
adc
imul
decb
sub
fs
popa
jbe,pn
xor
pop
clc
seto
loop
sub
fcomi
jg
jb
push
inc
cld
loop
push
scas
std
lods
lcall
or
jb
ret
mov
dec
cmp
mov
mov
lods
push
sti
push
aaa
dec
mov
test
jmp
push
jmp
xor
dec
lock
into
pop
cmp
icebp
fsubrs
adc
cli
repz
xchg
or
loopne
push
sbb
mov
sbb
adc
in
inc
mov
jle
sbb
xchg
mov
push
icebp
push
repnz
shrl
stc
lcall
clc
iret
mov
stos
or
popf
dec
dec
fcom
xlat
iret
add
aam
in
gs
mov
adc
imul
inc
test
fucomip
iret
dec
lds
push
lea
sub
imul
cmp
and
lods
and
sbb
push
cmp
adc
jg
hlt
repnz
mov
inc
lea
popl
loope
cltd
mov
sub
movsl
scas
jae
push
xor
mov
outsb
jae
popa
out
xchg
xor
adc
jnp
jnp
in
rorl
in
mov
daa
pop
cmc
ljmp
dec
push
xor
mov
and
movl
mov
push
dec
jle
scas
andl
test
call
and
push
xchg
outsl
pushl
fcoms
and
and
jns
jno
test
add
or
in
jg
std
fidivrs
ds
pop
scas
push
inc
inc
mov
xor
aas
adc
add
sti
xor
movsl
sbb
pop
insl
mov
scas
out
dec
sub
xchg
and
push
cmp
cmpsb
dec
push
jns
pop
addr16
incl
pop
sub
cltd
adc
jmp
sbb
sbb
mov
and
cld
fldln2
xchg
sarb
inc
daa
mov
ja
mov
aaa
rcr
fcoml
jp
not
mov
pusha
pop
push
sbb
push
jecxz
lea
popf
pop
arpl
arpl
fildll
xchg
int
sub
jne
cmpsb
xor
hlt
adc
int
jns
pop
jbe
jge
inc
arpl
dec
inc
push
dec
fdivrp
aaa
int3
mov
inc
imul
mov
mov
cltd
jg
repz
in
repz
hlt
loopne
sbb
push
int
mov
inc
fs
or
pop
cmc
testl
aaa
or
sbb
pop
ds
aam
repz
mov
jle
pavgw
bound
mov
rclb
mov
mov
bound
xchg
outsl
es
push
and
arpl
xchg
jbe
sbb
xchg
xlat
dec
dec
fdivrl
popa
xchg
lcall
mov
mul
push
mov
mov
push
add
cmp
xor
cmp
xor
pop
inc
xchg
mov
mov
repnz
pop
scas
jnp
cltd
lds
enter
fisttpl
fidivrs
mov
mov
in
out
addl
aaa
adc
jno
cmc
pop
adc
and
js
sbb
push
xorl
fmull
sub
jmp
add
sbb
push
outsl
enter
loopne
push
hlt
and
cmp
test
pop
push
cmp
lea
stos
in
rorl
inc
mov
adc
stos
mov
scas
mov
pop
push
mov
dec
in
jno
arpl
mov
xor
mov
mov
fldenv
lret
cmpl
sbb
aad
push
sbb
sub
sbb
mov
xor
imul
or
jecxz
fcmovbe
cmpl
es
mov
jle
stos
pop
push
cmpsb
mov
fisttpl
pop
adc
mov
repz
cltd
mov
fstps
xchg
dec
push
test
push
pop
mov
and
jecxz
out
xchg
xchg
mov
dec
into
cmpsb
aam
bound
jp
xor
sub
data16
mov
adc
pop
movsl
mov
or
pop
cli
cs
sbb
enter
out
sbb
in
flds
movsl
mov
gs
pop
add
mov
lea
cld
dec
fs
negl
mov
pop
mov
inc
pop
std
mov
and
pop
inc
js
rorb
and
sbb
je
lret
pop
gs
int
and
jmp
push
mov
cmpsb
xchg
xchg
out
inc
out
or
ret
movsb
xchg
xchg
mov
sub
sahf
push
repnz
lcall
imul
mov
pop
movsl
cmpsb
dec
adc
push
or
inc
out
and
bound
les
loope
lret
aad
cmp
in
and
mov
cs
je
add
stos
cmp
sbb
cmp
sarl
loope
les
push
cmc
pushf
fmull
lret
imul
sbb
jmp
orl
cmp
movb
popf
mov
movsl
test
adc
hlt
jecxz
mov
repz
je
mov
and
jge
pop
out
xchg
packssdw
les
dec
push
shlb
sub
adc
cmp
mov
ja
adc
cmp
pop
pop
imul
inc
icebp
lcall
movsl
jns
orb
cmc
in
mov
enter
shll
neg
test
mov
inc
in
mov
mov
lds
sbbb
pop
dec
fldl
and
inc
push
cmc
in
imul
add
mov
mov
sbbb
pop
or
jge
int3
mov
cmpl
inc
jns
rolb
sbb
jp
bound
test
mov
out
dec
or
add
mov
and
add
outsl
jb
repnz
enter
cltd
sbb
and
test
cmp
push
out
les
rclb
xchg
sub
add
adc
mov
sub
ds
imul
xchg
test
loop
rcr
and
dec
pop
jo
es
xchg
pushf
je
pop
and
mov
mov
push
das
push
pop
xor
imul
and
cs
jb
es
fsubrs
ss
inc
mov
add
add
loope
push
and
addb
pop
adc
push
pop
repz
dec
cmc
inc
dec
and
int
sub
jmp
ror
add
mov
dec
sub
lea
mov
xchg
mov
imul
mov
movsl
in
adc
testb
test
rcrb
xchg
addr16
cmc
mov
jl
lcall
test
insl
jle
stc
sub
lcall
jnp
push
xchg
mov
outsb
push
mov
out
mov
ror
add
scas
iret
popf
cmpsl
fwait
sub
adc
xor
xchg
adc
imull
repz
out
dec
subb
jmp
mov
test
es
cmp
lea
xchg
mov
jl
xchg
and
loopne
mulb
mov
fldcw
fstpl
adc
loopne
movsl
enter
adc
test
cmpsb
out
xor
stos
ret
loopne
sbb
in
mov
cmpsl
xlat
or
mov
lds
inc
in
or
inc
scas
ljmp
aas
into
les
fldt
pop
sub
testl
and
cmpsl
jmp
xchg
pop
pop
aaa
bnd
jmp
sub
rorb
js
addr16
pushf
xor
mov
dec
lcall
xor
mov
addr16
repnz
sbb
movsb
jmp
or
in
sbb
aas
pop
xchg
int3
cld
mov
jnp
mov
pop
dec
sub
push
cltd
loope
inc
or
push
inc
mov
jbe
es
into
and
and
clc
ret
cmc
ret
lock
jns
js
cmc
jb
jmp
adc
mov
stc
lods
push
cmp
pusha
mov
lcall
dec
rolb
jns
pop
inc
jecxz
jle
les
aam
lahf
inc
xchg
mov
and
inc
cli
xor
and
divl
mov
sub
repnz
lods
inc
test
cmpsl
dec
mov
xlat
mov
dec
in
lea
fildl
movsl
mov
or
mov
mov
sub
jp
int
movsb
arpl
or
jne
shlb
lock
add
jmp
lea
addl
cmp
imul
or
sti
pop
scas
inc
ljmp
cmp
mov
pop
and
stc
xor
rclb
lds
xlat
pop
add
imul
repnz
and
mov
shl
iret
mov
leave
pop
aad
xchg
cmpsl
pop
pop
cmpsl
test
xchg
jl
bound
sbb
sub
jge
mov
mov
push
lock
cmc
cli
sbb
xchg
inc
outsl
mov
dec
lods
dec
xchg
and
inc
jae
lds
call
mov
test
mov
pop
shlb
div
bound
push
push
mov
push
loop
cmpsl
frstor
add
popf
lock
mov
aaa
cmp
test
loop
movsl
cmpsb
dec
dec
cmp
jbe
pop
scas
iret
and
loopne
icebp
rcrl
mov
into
adc
fisttpll
push
fstpt
inc
jnp
stos
push
std
mov
jp
js
mov
jno
pop
sub
das
cmpl
pop
lods
cli
jg
sbb
jae
adc
and
outsb
addr16
push
pop
lock
in
cmp
insb
mov
into
dec
add
mov
pop
adc
add
sbb
filds
xchg
mov
pop
test
js
inc
js
cmpsb
and
lret
mov
mov
mov
iret
push
lea
sbb
in
shrb
adc
cld
je
xchg
and
xchg
mov
xlat
xchg
xchg
sub
sbb
pop
pop
mov
setb
mov
data16
cmpsb
mov
pop
movsl
das
aam
mov
push
scas
call
fistpl
popf
cmp
repz
shll
sbb
dec
sbb
sub
dec
adc
cs
sbb
daa
inc
test
mov
sub
pop
int
insl
es
icebp
repz
filds
jmp
ret
lahf
mov
insb
repz
orb
jp
pop
aam
into
xchg
cmc
rol
dec
xchg
aad
cwtl
out
push
mov
mov
loope
out
scas
xor
lock
mov
daa
inc
inc
xchg
push
rcll
push
stos
pushf
inc
repz
jne
in
adc
pop
pop
push
dec
pop
loop
addr16
adc
sub
stos
mov
and
jne
cli
daa
fisubs
sahf
fucom
jno
idivb
pop
out
imul
jbe
cmp
scas
cwtl
aam
shr
rcrl
sbb
xchg
xor
stc
insl
mov
inc
or
enter
ss
dec
stos
or
jo
ficomps
shlb
mov
mov
std
arpl
jge
scas
pop
ja
dec
test
xchg
xchg
lock
or
sbb
lcall
add
divl
notb
shll
jge
xchg
fbstp
mov
dec
sbb
in
fbld
movsb
add
sub
arpl
pop
hlt
sub
mov
jbe
in
add
lea
fwait
stos
loope
inc
sbb
or
enter
addl
add
or
add
xchg
in
ja
repz
bound
ja
dec
lea
push
sub
mov
call
xchg
int3
aaa
pop
xchg
adc
mov
jno
inc
jne
jnp
pop
push
xchg
and
jno
xchg
mov
lahf
shll
xchg
out
cli
daa
add
loop
popa
push
mov
jb
sbb
sbb
push
pop
add
push
adc
std
ja
mov
movsb
jp
mov
sub
and
scas
jae
aam
cltd
int3
xchg
mov
mov
outsb
out
jp
js
lret
push
push
xorb
jg
mov
push
test
push
pusha
jne
xchg
sub
scas
push
lret
fwait
sti
mov
xlat
fisubrl
pop
stos
divl
mov
cmp
mov
jg
rorb
cmp
xchg
lock
jo
mov
and
dec
cmpsb
scas
mov
aad
sahf
fisttps
in
mov
mov
dec
shrb
cmp
rcrb
pop
js,pn
and
loop
adc
adc
roll
cmp
inc
mov
xchg
bound
insl
in
xchg
dec
scas
fsub
lock
jmp
fucom
lret
fdiv
lret
inc
je
push
push
scas
int
mov
lds
int3
iret
sub
mov
mov
xor
fisubrs
sub
pop
mov
jl
mov
jl
bound
inc
push
repz
adc
leave
popf
and
jbe
mov
fldenv
bound
fcomp
rorb
sbb
mov
ja
ljmp
out
mov
jecxz
xor
cli
faddp
adc
xchg
pop
mov
or
popf
nop
adc
inc
icebp
aas
xchg
popf
pop
mov
mov
add
inc
andb
push
lock
cmp
imul
in
cmp
mov
adc
dec
lret
and
cmp
sbb
jnp
leave
push
jo
fldcw
jg
int
adc
or
cs
pushf
sti
xor
inc
js
sub
mov
adc
addr16
inc
xchg
in
out
mov
dec
mov
aas
rclb
ror
dec
mov
cmp
imull
and
xlat
mov
push
aaa
test
push
cmp
push
and
sbb
mov
fiaddl
and
adc
cmpl
rcr
mov
sub
sub
add
pop
adc
push
sub
dec
adc
jno
dec
adc
jl
ror
mov
mov
pop
hlt
and
shrb
sub
inc
repz
stc
or
add
push
outsb
push
or
adc
dec
sub
lahf
out
fs
scas
in
pusha
sbb
sti
dec
push
xchg
fldcw
jns
scas
and
fldcw
in
ja
sub
jbe
mov
pop
cmpsl
divb
dec
faddl
adc
fists
bound
jecxz
cmp
cwtl
dec
in
mov
sbbl
les
pop
jno
or
sbb
xchg
nop
and
repz
dec
in
pop
fdiv
leave
or
mov
out
lahf
push
test
push
pop
jbe
loope
movsl
in
cmp
mov
mov
je
shlb
dec
ljmp
fstl
iret
mov
push
sbb
push
jnp
mov
jne
add
popl
out
dec
dec
rol
loopne
add
adc
xchg
push
push
jne
outsb
lret
inc
popf
jp
jne
je
sbb
dec
insl
stos
lcall
push
pop
xchg
dec
jl
jecxz
pop
jbe
incl
packssdw
jecxz
inc
and
pop
adc
loop
adcl
fnstsw
daa
in
insb
xchg
mov
ja
test
add
ss
adc
notb
in
cmp
ss
insl
cmp
icebp
mov
mov
jne
subb
jmp
lea
add
push
stc
sbb
pop
dec
enter
and
lret
pop
out
and
adc
xor
pop
ret
je
aad
inc
sbb
rol
adc
mov
popf
inc
cmc
test
fistps
dec
pop
add
cwtl
mov
out
mov
xor
scas
loope
sbb
out
xor
popa
sub
mov
mov
dec
sbb
shr
cmp
add
outsb
jae
ret
jg
aad
int3
and
xchg
sahf
das
dec
int
xor
xchg
loope
lods
out
movsl
add
mov
mov
adc
pop
pop
fistpl
shll
jmp
push
rorb
cmp
test
test
dec
sti
pop
jnp
addr16
sbb
push
sahf
out
jbe
push
fnstsw
stc
xchg
andnps
dec
test
fmull
adcl
add
pushf
pop
xor
int
das
inc
leave
jb
and
push
pop
and
xlat
mov
mov
jmp
ljmp
pop
test
adc
push
das
adc
and
add
inc
repnz
mov
xchg
popf
jb
inc
jnp
xor
pop
inc
lods
cli
and
and
outsb
push
icebp
rcrb
xchg
es
cmp
jo
adc
jecxz
icebp
xor
imul
push
adc
mov
jmp
bound
pop
mov
stos
jbe
aas
scas
jge
in
dec
xor
scas
gs
outsb
and
or
lods
fwait
adc
mov
pop
inc
sub
push
subb
push
add
inc
or
jnp
xchg
test
sbb
lods
rcrb
mov
std
lods
sub
xor
sub
das
les
cmp
jae
rclb
repz
ja
and
jp
hlt
xor
xorb
xchg
sub
inc
mov
or
push
aam
xchg
mov
cmp
dec
cli
orl
and
jne
xchg
movsb
mov
jne
in
mov
in
pop
sbb
loope
push
inc
sti
frstor
aaa
or
insb
or
cmp
sbb
icebp
sub
stc
mov
sbb
push
pushf
aaa
int3
or
add
out
mov
pop
inc
xchg
jbe
das
leave
jmpw
imul
enter
pop
inc
pop
js
sti
es
cmp
mov
out
ja
dec
jmp
mov
lcall
cwtl
add
adc
sub
xor
imul
inc
aam
inc
xor
dec
cmp
pop
rorl
cmpsl
shlb
xchg
dec
mov
test
out
jg
mov
sub
mov
dec
mov
inc
fstpl
add
add
ret
iret
lahf
cmp
add
shl
idiv
pop
daa
xor
fst
inc
int
repnz
or
add
jae
inc
nop
or
in
mov
lcall
mov
inc
lahf
dec
in
jmp
jle
pushf
int3
or
outsb
leave
xor
add
mov
test
outsl
pop
add
fldl
movsb
fists
scas
push
lahf
xchg
adc
jg
push
fstpt
stos
hlt
lahf
and
cmp
stc
in
sar
movsl
jle
dec
pop
sti
shlb
sbb
inc
mov
lock
sbb
dec
pop
sbb
adc
jp
inc
add
xor
jmp
stos
inc
ljmp
lret
testb
or
cltd
testl
dec
int3
inc
xor
lahf
sub
mov
sub
gs
stos
sub
and
lcall
xor
movsl
lea
lods
cmp
pop
adc
repnz
js
sbb
incb
aad
jns
sub
pop
push
add
mov
mov
rolb
xchg
int3
add
cld
push
cmpsl
in
data16
push
pop
mov
sbb
mov
mov
or
lret
xchg
out
js
mov
dec
loopne
incb
ljmp
mov
stos
push
je
es
or
cmp
sbb
bound
mov
cmpsl
cmpsl
xor
clc
mov
clc
mov
xor
push
fwait
dec
icebp
outsl
sbb
mov
popa
add
bound
sbb
mov
jl
mov
test
inc
aad
pop
xchg
or
pop
sbb
sbb
imul
fcmove
cmc
out
arpl
sbb
loop
scas
std
jae
stos
sub
push
cltd
cltd
dec
fisubrl
aaa
jge
shll
stos
je
xchg
jmp
xchg
mov
loopne
out
mov
arpl
cmp
les
inc
lret
jne
rolb
popa
clc
rcrl
and
sti
xchg
out
dec
shr
js
cs
and
loopne
mov
mov
dec
mov
bound
cmp
or
inc
xchg
pop
invd
jmp
int
sub
jno
addl
pop
in
push
xlat
into
mov
cmpsb
jb
insl
out
lahf
mov
mov
mov
lods
lock
mov
mov
testl
test
adc
shrl
hlt
rcrb
cmp
aas
lock
and
adc
movb
call
sub
sub
jecxz
cli
push
mov
xchg
pop
jnp
mov
in
mov
repnz
sub
or
hlt
lret
jbe
cmp
lcall
dec
test
mov
cmp
mov
stos
inc
fnstsw
into
fwait
setae
sbb
xor
adc
addr16
je
or
lds
push
fwait
inc
sbbb
adc
mov
in
lret
test
scas
and
fdivr
cmpsb
lret
jge
mov
cld
sbb
mov
mov
lds
out
enter
xor
adc
jbe
lcall
ja
push
clc
xor
xor
jge
dec
jmp
ret
cmp
loopne
enter
inc
pop
nop
daa
shll
jns
dec
bound
mov
push
jns
add
sub
fwait
mov
pop
jmp
jmp
xor
cmp
mov
ret
movsl
or
mov
inc
push
or
sub
xchg
je
xchg
stc
dec
xor
iret
test
cmp
pand
and
pop
mov
cmp
jo
out
js
add
add
inc
mov
or
jnp
shlb
push
inc
cmpsb
or
lret
repnz
jp
jge
imul
test
mov
mov
lock
loopne
push
pushf
mov
cwtl
jle
jb
mov
sub
shl
gs
daa
cmc
or
add
fldt
aas
test
imul
stc
inc
ret
mov
or
imul
pop
mov
or
mov
mov
add
testb
lods
cmpb
imul
inc
jnp
mov
repnz
sub
mov
rorb
out
iret
rolb
xchg
inc
sbb
sub
push
push
hlt
xchg
xchg
pop
sub
mov
push
rcrl
or
xor
imul
repnz
jns
orl
aas
or
bound
mov
cli
xlat
mov
aam
pop
mov
jbe
rcrb
mov
std
add
and
mov
outsb
test
sbb
push
fnsave
jp
shr
int3
movsl
jl
mov
dec
cmpsl
negl
xor
fwait
dec
mov
inc
icebp
les
xor
cmp
dec
repnz
dec
and
loopne
push
repz
sub
shrb
das
sbb
push
popf
pop
lods
movsb
cmc
push
inc
lds
stos
dec
fst
push
and
cmp
xlat
and
adc
gs
insl
popf
lcall
popa
inc
sahf
pop
mov
fnsave
aad
call
xlat
fimull
add
jmp
fwait
js
sbb
imul
cld
outsl
test
jns
jbe
lods
lds
lea
cmc
jecxz
mov
loopne
or
push
push
cwtl
in
xor
repz
dec
movsl
dec
jle
pop
add
dec
rcrl
add
dec
andb
dec
lds
xor
or
mov
fbld
mov
sub
mov
js
outsb
push
aas
mov
jmp
pop
jg
js
in
lret
out
hlt
adc
mov
pushl
jnp
in
mov
sti
dec
push
rclb
lret
into
insl
and
jg
jle
push
mov
movsl
push
jo
out
and
test
out
pusha
fxch
aaa
pop
ret
mov
jp
addl
gs
shll
add
and
or
pop
mov
add
cs
xchg
bound
inc
cmp
fs
or
push
loop
xchg
cmp
lahf
cmp
push
or
mov
xchg
mov
push
and
jg
sub
lahf
add
inc
fs
mov
mov
dec
cmp
mov
dec
orl
imul
cmp
ja
push
cmp
pop
outsb
mov
cmp
jns
lea
nop
sub
cmp
repz
mov
dec
mov
lret
lret
dec
js
push
movsl
dec
pop
ds
adc
sub
test
loopne
xchg
outsl
cmc
push
mov
int3
test
or
mov
adc
clc
jb
hlt
les
push
outsb
and
xchg
xor
sar
mov
and
das
jnp
cmpsb
fcomps
cmp
lret
ja
xlat
pop
divl
sub
dec
inc
jle
cmp
mov
aaa
jbe
cmp
mov
loop
push
in
xorl
jnp
loop
and
pop
push
clc
mov
clc
mov
mov
xchg
sar
cmp
rolb
or
xchg
call
jne
mov
pop
push
cld
and
sbb
push
out
out
or
orl
sbb
stc
or
sti
out
pop
jmp
sbb
out
jmp
push
fmul
and
mov
pop
xor
sti
dec
or
xchg
push
jb
or
mov
std
push
ss
jge
fs
xor
fucomi
mov
js
fwait
or
add
rcrb
jb
mov
inc
mov
aam
xchg
xchg
stos
jb
pop
jle
lret
shrb
xchg
aas
cwtl
addr16
pop
sahf
or
ret
and
mov
sub
pop
add
sub
fprem
les
repnz
xchg
mov
adc
test
repnz
mov
dec
insb
mov
insl
das
outsl
ret
dec
mov
add
into
sbb
out
rcr
cld
and
enter
dec
mov
xchg
mov
imul
ds
ja
fldl
out
aad
pop
or
call
stos
dec
dec
jmp
and
lret
cmp
das
sub
hlt
fistpll
sub
movsl
inc
notl
cmpsb
jl
inc
sub
rolb
add
stos
pop
loope
mov
xor
pop
adc
test
cmp
nop
ljmp
adc
fsubrs
ss
sbb
adcb
add
xchg
add
inc
cmpsb
arpl
push
add
ljmp
jbe
rolb
rorl
sub
adc
add
xor
test
sub
sub
outsb
js
adc
mov
stos
sbb
xchg
and
decl
lahf
addb
mov
leave
xchg
std
push
inc
scas
test
stos
jae
pushf
mov
cmpl
xchg
ret
nop
cmp
inc
add
add
push
mov
lcall
mov
add
cmc
ret
cmp
movsl
lods
pop
es
test
sbbb
pop
pop
test
jmp
ja
adc
jns
test
ljmp
test
sti
sub
sub
lds
push
pop
pop
mov
repnz
cmc
minps
pinsrw
mov
mov
iret
pop
inc
adc
gs
push
xlat
out
out
xor
fldl
insb
or
adc
jp
lds
out
and
push
dec
std
mov
jno
jl
mov
push
inc
fucomp
dec
out
in
aaa
shl
ret
jg
mov
push
inc
sub
lret
or
bound
inc
iret
fcomp
test
add
jbe
adc
lahf
clc
push
je
les
cli
xor
and
xor
jne
mov
push
inc
pop
cmc
or
cmp
data16
xorb
test
call
push
and
sti
mov
push
pop
call
cli
sub
mov
inc
in
nop
jl
pop
xor
inc
gs
xchg
sbb
out
jmp
enter
mov
xchg
xor
sti
mov
nop
dec
into
jae
or
pop
stos
rol
pop
jmp
daa
sub
and
enter
lods
shl
arpl
pop
pusha
add
clc
cmp
aad
test
test
stos
xor
push
push
mov
dec
push
call
mov
lahf
add
movsl
cmc
es
dec
xchg
in
fldenv
cltd
jb
lods
sub
lret
mov
cmp
adc
mov
sarb
mov
mov
loopne
cmp
push
jl
divb
mov
inc
cmp
push
mov
mov
enter
sub
lret
or
jmp
nop
lcall
ret
mov
es
repnz
push
or
or
rorb
mov
mov
sarl
dec
arpl
fwait
inc
aam
aaa
mov
data16
lret
stc
dec
sbb
pop
mov
sub
xchg
and
test
sahf
pusha
sub
stc
addl
mov
les
sti
lea
icebp
lods
rorb
xlat
outsl
mov
inc
jnp
lea
movl
ds
add
jmp
aad
and
adc
icebp
repz
nop
mov
ljmp
or
lods
or
pop
cltd
xor
xor
sbb
sub
rol
je
and
mov
xchg
mov
insb
test
mov
repz
pusha
sub
xlat
dec
repz
addr16
dec
in
xchg
dec
dec
loop
out
dec
and
adc
inc
xchg
aad
mov
ret
rorl
jl
sahf
js
rcrb
into
jb
lret
xor
xchg
mov
inc
xchg
mov
or
dec
sbb
xor
xchg
pop
jp
out
cmpsb
mov
jnp
or
pusha
in
test
inc
fidivs
xor
sub
nop
aam
or
in
add
or
jnp
mov
xor
ds
or
lods
incb
jg
push
jbe
outsl
mov
fidivrl
push
mov
pop
adc
or
xor
pop
hlt
testb
and
movsb
cmp
sbb
pop
dec
orl
add
mov
dec
neg
mov
iret
das
sarb
jle
xlat
sbb
adc
inc
shrb
cmp
scas
enter
sarl
loope
xlat
aaa
inc
stc
push
icebp
into
call
inc
jl
inc
popf
jno
push
sub
sub
lods
inc
sbb
inc
jno
or
sbb
jl
pusha
sub
inc
inc
pop
lods
xor
cmp
aad
pop
pop
cmp
mov
jne
push
rolb
mov
fs
and
sub
jg
testl
sti
outsl
sarb
xchg
stos
or
cltd
cs
push
addr16
pop
fmulp
stc
cmp
mov
pop
jecxz
or
das
cltd
dec
das
xor
or
aam
clc
dec
add
jl
jecxz
rorl
bswap
inc
pop
cmpsb
sub
int3
pushf
cmp
sbb
lds
loope
sub
aad
jecxz
out
outsl
xor
mov
and
jle
popl
mov
es
popf
cmp
xor
adc
aas
push
outsb
int3
rolb
stos
iret
jmp
rol
or
push
sbb
scas
mov
inc
sub
mov
push
mov
mov
data16
jmp
int3
inc
fidivrs
add
add
mov
mov
out
out
dec
enter
pop
pop
gs
lcall
add
xlat
test
jp
push
xchg
fwait
cltd
push
adc
popw
pop
out
psraw
jnp
outsl
dec
mov
push
fwait
adc
cmp
sbb
inc
popa
xor
mov
xlat
xchg
xchg
fisubl
mov
scas
adc
add
cmpsl
inc
add
sub
aam
int3
mov
jae
std
dec
shl
je
and
rcll
mov
popaw
mov
xor
jne
mov
or
inc
jbe
pop
js
leave
push
jecxz
test
sbb
sub
test
in
mov
imul
cltd
or
cltd
incb
cmpsb
pop
ret
sub
out
sbb
lock
xchg
cmp
xor
std
lret
mov
out
repz
xchg
outsb
jns
cmpsb
ds
rcrl
shlb
push
into
dec
jmp
icebp
mov
add
pop
movsb
mov
adc
inc
jge
repnz
mov
test
out
and
adc
inc
sub
mov
mov
lret
loope
and
fisubl
jnp
pop
in
stos
xor
inc
dec
mov
adcb
iret
mov
xor
pop
jno
cltd
dec
fsubrs
sbb
daa
movsl
sub
jp
lea
repz
pop
rcll
mov
pop
mov
icebp
mov
gs
std
push
mov
mov
xchg
sub
inc
jb
and
mov
mov
imulb
mov
mov
or
fwait
xorl
cs
pop
jge
push
cmc
mov
and
pop
pop
shl
push
mov
xchg
mov
out
xchg
rcrl
daa
or
inc
inc
mov
js
and
aad
fwait
mov
xor
xlat
dec
or
pusha
xor
jno
iret
fnstcw
pop
mov
sub
add
lret
xor
cmp
ffree
pushf
xor
xlat
mov
or
lcall
xor
dec
jecxz
adc
lods
push
js
dec
ja
fwait
mov
mov
in
mov
aas
xchg
adc
hlt
movb
std
orl
outsl
adc
and
lret
adc
inc
add
and
jno
inc
clc
dec
sub
enter
add
xchg
icebp
in
xchg
sub
xor
mov
out
pop
mov
sbb
jbe
loope
mov
cmp
sbbl
xchg
xor
fists
xchg
sub
cltd
and
add
dec
xor
repz
mov
mov
sub
mov
xchg
cld
ffree
mov
push
jno
test
mov
jns
mov
leave
in
test
push
ds
mov
arpl
mov
notl
xlat
es
fcoml
pmaxsw
xchg
andb
jmp
loope
inc
shr
popa
xlat
scas
inc
mov
jl
cmp
movsl
leave
jb
dec
mov
or
xor
out
jne
lcall
or
repnz
xor
clc
cltd
mov
nop
ret
shr
dec
outsb
or
fidivs
jge
cld
or
xchg
xor
icebp
cltd
data16
sti
sbb
xor
cmp
imul
test
jne
push
in
psubw
inc
push
int
inc
inc
sti
nop
mov
lret
int
test
push
jnp
inc
stos
fmuls
test
cmp
scas
call
jle
mov
hlt
lods
aas
and
pop
jno
aam
pop
cmpsl
lds
insb
loope
sub
cmpb
cmp
aas
cmp
std
test
adc
cmpb
dec
jae
ljmp
cmp
xchg
nop
lcall
aas
out
jae
cmc
lods
and
mov
fwait
leave
push
and
and
add
push
mov
pop
mov
mov
xchg
rcrb
lret
std
fsubl
pop
and
cwtl
xchg
cltd
mov
jmp
add
loope
repz
or
je
pop
and
mov
ret
pop
adc
push
xlat
test
push
enter
addl
inc
sub
push
push
sbb
fwait
sbb
cwtl
lock
cli
lods
inc
aam
insl
and
test
sbb
mov
leave
mov
push
aad
jbe
pop
cs
std
or
or
pushf
rcrb
xor
mov
pop
pop
fucomip
push
push
pop
rcll
push
icebp
pop
and
sub
sub
sbb
push
mov
inc
xchg
cmp
fs
mov
loopne
js
mov
pop
jg
shlb
divl
dec
ja
fnsave
out
xchg
fmull
or
mov
fs
pop
popf
mov
fsubrl
cmp
pusha
sbb
mov
into
pop
pop
ret
movsb
lret
and
xchg
jle
mov
push
repz
divb
inc
mov
call
adc
mov
jmp
cli
daa
pop
cmc
push
lock
xor
push
ret
push
pop
pusha
pop
push
filds
jmp
adc
in
stos
xlat
cli
sbb
ljmp
and
icebp
xor
push
dec
mov
inc
cs
xchg
jg
std
js
das
loope,pn
out
push
push
jne
add
mov
in
insl
ds
rorl
inc
rorl
cmp
jle
bound
call
dec
xor
xor
subb
or
repnz
dec
fnstsw
xchg
js
arpl
push
pop
xor
test
push
xchg
repz
cmp
xlat
in
xor
mov
and
inc
test
sub
mov
cmp
ror
or
mov
std
dec
mov
push
fsubs
mov
fs
mov
addb
sub
mov
or
sbbl
imul
push
frstor
jp
fwait
stos
mov
loopne
repz
mov
cli
ficoml
popa
roll
or
xchg
inc
cli
enter
pop
push
sub
push
push
inc
cmpsl
inc
sbb
fiaddl
adc
pop
sbb
push
dec
pop
sbbb
xor
jmp
sti
xor
inc
mov
inc
xor
lret
arpl
xrelease
sub
sbb
push
jns,pn
test
call
add
aas
pop
pop
mov
push
pop
imul
jle
pop
mov
dec
sub
fs
js
sbb
aas
hlt
filds
or
mov
stos
imul
out
out
push
arpl
sub
es
mov
or
xchg
loopne
and
and
xchg
or
xor
jb
test
cmp
out
sub
lods
sbb
push
rclb
pop
outsb
out
mov
add
dec
call
xchg
cmp
adc
cli
call
push
fisubl
xor
cld
jne
scas
sbb
xor
jne
pushf
test
lods
dec
adc
dec
fiaddl
cmpsb
cltd
shrl
xchg
sbbb
outsl
in
pop
inc
adc
inc
sub
cmovge
or
xor
ljmp
inc
loopne
pop
lcall
imul
jl
xchg
pop
cmp
test
addr16
add
popa
inc
idivl
mov
lret
inc
lea
push
loope
jge
lds
mov
jno
filds
xchg
hlt
adcl
pusha
jbe
stc
and
cltd
inc
mov
jbe
popa
pop
hlt
pop
mov
xchg
adc
pop
and
test
lods
popa
in
ljmp
dec
pushf
popa
mov
inc
stos
jo
jecxz
and
mov
cmp
xor
jbe
sahf
mov
stc
cmp
and
xor
les
clc
lea
xlat
out
sbb
popa
out
mov
rcrb
fnstenv
xchg
mov
sbb
adc
jae
adc
out
mov
xorl
pop
mov
insl
mov
pop
ficomps
in
inc
jmp
xchg
fwait
sti
inc
xor
ja
jmp
pop
mov
rorl
sbb
sti
lods
inc
sbb
mov
jo
cmp
aas
arpl
hlt
xchg
xor
and
cwtl
pusha
lcall
push
fstl
adc
mov
adc
aaa
or
outsl
repnz
pop
xchg
push
iret
sbb
jnp
xchg
xchg
subb
pop
sbb
mov
xlat
mov
adc
cs
insb
lods
mov
add
lcall
xor
lods
ljmp
sbb
outsb
xor
push
into
xchg
pop
mov
ss
mov
ja
imul
hlt
push
and
lcall
xchg
add
mov
scas
push
add
ss
jns
addr16
fcoms
lcall
sbb
ds
lock
out
into
dec
idiv
ljmp
jnp
xchg
aas
lods
mov
push
fists
add
sub
inc
popf
fwait
cmp
jne
and
sbb
mov
imul
and
mov
mov
mov
dec
fsubr
shrb
xor
xchg
jle
inc
dec
mov
outsb
insb
or
dec
and
cmp
int
sbb
push
bound
xchg
adc
insl
xor
adc
out
sti
imul
sub
jb
add
mov
fnstsw
hlt
dec
xor
add
jmp
pushf
fwait
lods
pushf
push
in
out
mov
sbb
fsub
ja
cmp
shll
test
outsb
dec
xor
outsl
out
pop
push
pop
and
imulb
push
xor
pop
sbb
js
add
into
mov
add
inc
mov
iret
pop
movsb
dec
lea
fbld
xchg
adc
adc
aaa
mov
fistps
mov
pop
fdivl
lock
sahf
sub
xor
outsb
mov
xor
push
mov
scas
lds
enter
xor
lods
rcrl
add
xor
pusha
repnz
addr16
je
pop
dec
pop
movsl
sub
cmp
outsb
arpl
std
push
push
in
test
inc
adc
lea
lahf
inc
sbb
and
test
cmc
xor
sti
test
outsb
sbb
mov
cmp
lods
arpl
mov
stc
and
int
sub
les
loope
push
or
pop
inc
in
cmc
add
xchg
jns
or
and
outsb
jbe
icebp
cmp
rcrb
mov
cmc
jb
nop
movsb
sub
shlb
adc
add
sub
xor
jb
cmc
adc
mov
push
sti
test
jbe
js
or
aaa
daa
fldt
shr
xor
or
dec
stos
cmpl
add
ror
cmc
pop
cmpsb
loope
cmp
mov
xchg
stos
imul
mov
cmc
inc
pop
bound
call
ljmp
jg
rolb
mov
adc
mov
add
and
mov
mov
jno
sbb
jo
outsb
out
leave
leave
add
jb
fnstenv
mov
mov
icebp
push
popa
hlt
leave
rclb
push
or
push
mov
js
mov
jmp
nop
pushf
push
shll
stos
fbstp
sbb
cs
mov
cmp
mov
mov
add
in
dec
int3
lock
std
nop
or
pop
or
repz
push
and
arpl
or
mov
pop
nop
nop
mov
repnz
sub
int
mov
imul
sbb
in
mov
cmp
adc
enter
les
mov
aas
jge
pop
loopne
insb
lods
adc
adc
out
ret
or
repnz
outsl
cwtl
mov
lret
dec
fmuls
and
xchg
orb
fs
xchg
fdivl
mov
inc
imulb
pop
in
shll
call
sub
xor
jp
nop
lea
filds
mov
mov
inc
pop
xlat
cmc
ret
loopne
cmpsb
adc
jnp
push
mov
mov
add
out
push
ljmp
mov
mov
mov
lods
test
stc
xchg
sub
xchg
cmp
and
adc
cmpl
ret
cwtl
adc
mov
test
movsb
jmp
movsl
dec
ja
pop
test
es
cvtps2pd
mov
roll
push
cmpsl
pop
xor
mov
in
jno
cmc
insl
lods
repnz
push
and
xchg
sbb
test
xor
loop
fsubl
test
movsl
xchg
nop
js
cmp
cmp
or
loope
out
and
mov
jl
nop
in
mov
pop
sub
xchg
clc
lods
add
xor
rorb
jb
and
or
sbb
push
cmp
push
hlt
pop
sbbb
xchg
dec
mov
cwtl
mov
sbb
add
sub
imul
pop
push
cli
ret
cmp
and
insb
ret
or
jb
add
push
outsb
dec
and
mov
ret
inc
adc
fimull
push
mov
dec
test
push
sbb
jge
dec
inc
xchg
sbb
jge
or
lea
popa
push
shrb
pop
push
or
jp
pop
cmp
push
add
and
decl
jno
aas
iret
and
mov
and
lret
pop
lret
add
sub
sarb
lods
or
decl
pop
push
pop
mov
imul
arpl
insl
je
repz
cmp
pop
out
cs
stc
jmp
out
pushf
ret
ret
repnz
xchg
cli
or
leave
testb
in
or
call
imulb
ljmp
out
adc
sbbb
fisubrs
inc
sub
or
in
dec
mov
sbb
jmp
test
cld
je
jae
pop
rcl
bound
cmpsb
out
mov
and
mov
in
sbb
xchg
jg
cbtw
jnp
sub
pop
flds
je
inc
mov
cmp
aad
ret
dec
adc
inc
imul
outsl
xchg
add
mov
insb
test
cmpsb
xor
or
mov
jo
mov
add
xchg
sub
xor
and
nop
jl
dec
lret
lea
out
cli
sub
rorb
lock
cld
cmpb
xchg
and
shrb
sub
jmp
mov
ret
sbb
sti
cli
aaa
iret
inc
repnz
push
scas
fwait
cmp
outsl
scas
cmpb
stos
pop
out
xchg
lods
js
scas
movsl
and
lcall
mov
stc
push
xor
data16
js
hlt
imul
int
shl
loopne
push
sbb
xchg
cmpsb
orl
pusha
jle
mov
push
mul
jno
insl
jne
insl
andb
cwtl
dec
push
data16
out
stos
and
arpl
push
fldl
mov
jmp
cmp
aam
mov
jg
loop
sub
jmp
mov
ljmp
or
movsl
jp
inc
shl
dec
loop
mov
addr16
int
repz
jmp
xchg
xchg
sbb
jbe
clc
mov
mov
gs
cmp
lock
mov
add
pop
mov
ret
inc
or
shrl
scas
fdivrs
lds
daa
mov
dec
js
push
push
pop
mov
enter
pop
lahf
xor
call
enter
sub
adc
adc
pop
aas
push
scas
test
or
xor
push
mov
arpl
dec
push
push
pop
test
fnsave
jecxz
dec
shlb
dec
loopne
xchg
idivb
jo
cmp
mov
adc
add
jbe
push
cld
mov
pop
scas
cmpl
in
pop
jp
addr16
rcll
mov
ljmp
xchg
cmp
icebp
mov
xor
cmp
cld
mov
mov
cmpsl
jbe
push
cli
cmc
adc
adc
and
clc
rolb
lcall
mov
sbb
jecxz
ficoms
cmpb
mov
dec
leave
xlat
sbb
mov
inc
sub
pop
mov
xchg
and
addl
jl
xchg
mov
jge
imul
rorb
xchg
adc
inc
out
aad
and
ret
aaa
xchg
into
fs
lods
aad
movl
xlat
push
or
mov
arpl
mov
imulb
or
test
and
sbb
xchg
pop
mov
cmc
mov
pop
nop
icebp
push
adc
push
pop
inc
pusha
ljmp
sub
or
fs
mov
mov
ret
imul
mov
call
cwtl
lcall
xor
in
int
mov
add
aad
jle
push
mov
inc
xchg
imul
or
in
xchg
pop
xchg
movsb
sbb
sub
mov
dec
in
cwtl
push
mov
sub
setbe
cs
inc
mov
cmc
aam
pusha
sahf
cmp
arpl
adc
xlat
int3
insb
push
push
jae
sbb
imul
inc
cltd
lcall
xor
shlb
pop
and
push
or
pop
fsubl
lcall
in
mov
push
pop
cmp
sub
mov
and
jge
mov
das
lock
cmp
mov
loope
jb
jl
pop
jmp
orb
cmpb
xchg
and
dec
das
arpl
xchg
fstpt
mov
in
jg
iret
or
or
push
mov
pop
sbb
subps
cmc
in
or
xor
fsubrs
inc
es
mov
sbb
xchg
xor
cmp
mov
xor
xchg
xor
adc
es
nop
ficomps
dec
mov
mov
addl
jg
mov
ss
out
nop
aad
push
adcb
into
inc
jb
dec
xchg
jo
enter
es
dec
icebp
inc
mov
mov
stc
test
mov
sti
mov
lds
xchg
mov
lret
out
inc
sbb
adc
cmp
pop
mov
loopne
in
enter
jae
fstp
sub
mov
subb
ss
bound
mov
sbb
mov
lods
rorb
test
mov
movsl
or
mov
imul
leave
fsubl
jmp
cmovg
call
test
sbb
cld
mov
inc
decl
xor
out
out
mov
add
jp
out
sbb
xor
rcrb
loopne,pn
mov
xchg
jle
enter
ljmp
mov
jae
sub
fnstsw
push
fsubrs
push
mov
fsts
out
inc
stc
sbb
std
sbb
fcmovbe
or
ret
cmp
xor
xlat
call
adc
fdivl
add
aam
dec
fistl
lock
mov
aas
sub
jle
ret
test
xlat
push
and
sbb
add
loop
inc
movsl
mov
sub
lds
mov
roll
in
test
push
fcompl
push
jae
les
xchg
xor
nop
popa
push
or
or
mov
mov
adc
push
das
sub
pop
dec
scas
std
fcomps
cltd
orb
cmp
and
mov
scas
lods
imul
cmp
sub
ss
scas
mov
js
xchg
bound
jecxz
xchg
in
lret
adc
fnstcw
mov
xchg
rclb
adc
jp
movsl
xchg
add
into
fnstenv
jns
stos
jns
lcall
lret
push
aam
push
stc
in
scas
mov
psrad
add
mov
jp
jne
outsb
push
lds
cmpsb
push
ljmp
add
mov
inc
lds
pop
gs
je
cmpsb
push
jge
lret
mov
and
mov
cs
mov
add
pop
mov
mov
cmpsb
add
cmp
sbb
xor
dec
mov
or
push
shlb
or
rorb
movsb
xchg
popf
fwait
dec
dec
and
sub
addr16
add
pop
pop
imul
lods
cmp
inc
shrb
inc
addl
inc
sbb
add
mov
inc
movsb
inc
mov
push
test
lods
pop
xchg
mov
pop
adc
mov
aaa
mov
cmp
mov
out
je
imul
mov
or
cmpsl
int3
gs
loopne
pop
pushf
jnp
dec
sbb
inc
cs
inc
out
popf
dec
sahf
jb
je
fldt
mov
daa
enter
push
dec
push
push
arpl
lock
pusha
jg
sub
adc
pop
mov
adc
push
jle
loope
and
inc
mov
outsl
lds
loopne
dec
inc
adc
in
bswap
dec
pushf
fisubrl
dec
xor
out
mov
sbb
xor
test
sub
stos
push
in
es
fwait
xor
fildl
das
in
out
lds
popa
push
inc
cvtps2pi
in
and
lods
or
mov
push
decb
shr
mov
sub
movsl
push
or
sub
add
pop
sete
call
adc
cmp
push
in
pop
xchg
cld
lcall
cmpsb
mull
loopne
jp
popf
lock
ja
jecxz
inc
pusha
jp
sbb
xchg
jmp
jne
push
divb
xchg
les
in
pop
subb
adc
push
mov
shrl
dec
cli
fisubs
push
test
bound
push
mov
rol
mov
iret
xchg
xchg
jno
jle
cmc
dec
dec
lods
nop
add
je
out
push
sbb
subb
out
loopne
in
jg
or
mov
add
aam
out
push
movsl
push
xchg
sarb
push
out
dec
decl
imul
add
push
mov
mov
lock
jns
push
mov
or
mov
add
leave
in
jl
nop
ss
fs
dec
pusha
lock
push
sub
xor
and
cmp
mov
les
test
or
mov
push
out
pop
inc
les
shr
pop
inc
ds
mov
or
cmc
dec
call
dec
fs
jecxz
push
dec
sbbb
pop
addr16
cli
xchg
push
cmp
mov
pop
lea
stc
mov
pusha
mov
popf
stos
mov
ds
pop
add
lds
push
xor
cmpxchg
adc
pop
add
nop
pusha
dec
lods
lea
imul
pop
sub
faddp
out
jp
mov
lahf
and
out
mov
jmp
add
nop
sub
test
push
sbb
scas
mov
pusha
pop
cmp
sbb
or
mov
mov
int3
fldl
iret
test
sub
enter
pushf
sub
pop
sub
add
xlat
jnp
adc
mov
ds
add
or
sbb
jp
sbb
sahf
lock
int
jmp
adc
inc
lcall
ret
push
jb
mov
lds
xor
mov
cmpb
fidivs
popa
mov
and
std
cltd
add
push
jae
and
lock
sbb
inc
mov
dec
sbb
jmp
or
aas
cmpsb
jb
popa
scas
xchg
stos
pop
mov
clc
push
inc
sub
push
shlb
jmp
push
loope
pop
xchg
in
or
ret
sbb
pop
add
mov
lods
popf
sub
sub
sbb
xchg
xor
lahf
fisttpll
call
sbb
and
xchg
mov
jae
mov
sahf
mov
cmpsb
mov
or
sub
cwtl
js
lret
call
clc
je
fsubp
aad
jle
sbb
mov
xlat
mov
subl
lds
add
fstpl
jl
mov
inc
mov
arpl
inc
icebp
shrl
jbe
pop
push
xchg
pop
sbb
out
mov
adc
add
pop
ljmp
mov
or
and
sub
xorl
jno
call
add
cmc
pop
ja
add
adc
mov
sbb
mov
mov
xor
dec
dec
ss
sub
push
push
insb
push
pop
outsb
callw
std
sub
test
aaa
lret
mov
xchg
jle
addr16
xlat
xor
and
ss
jmp
daa
jbe
push
sub
in
or
inc
xor
pop
push
mov
out
mov
inc
rcrb
adc
icebp
jbe
fdivrs
bound
rol
sub
xchg
fldl
loope
jb
push
mov
pusha
dec
push
out
bound
sbb
xchg
ffreep
pop
xchg
dec
pusha
test
pusha
out
or
ljmp
jle
je
ljmp
push
pop
fwait
sbb
ffreep
lcall
stos
push
jp
popf
push
jmp
movsl
hlt
sub
test
lahf
push
scas
cs
mov
and
fildll
mov
mov
addr16
jecxz
inc
and
or
mov
lea
sarb
mov
movsb
mov
mov
mov
sahf
jns
mov
ror
xchg
shrb
test
enter
idivl
aas
sahf
decl
sbb
fwait
call
mov
mov
jnp
call
dec
and
or
sahf
cmp
nop
sub
xchg
lret
adc
call
sbb
adc
in
pop
movsb
sub
push
xor
mov
add
jmp
fildll
jp
testl
jne
dec
test
pop
jo
or
ss
stos
inc
xchg
dec
clc
in
jns
lea
clts
cmc
imul
mov
mov
in
pop
dec
fstl
ja
popa
adc
lret
sbb
daa
mov
mov
cwtl
jl
popf
cmc
sbb
test
adc
push
sbb
push
fisubrs
add
push
shl
iret
sbb
push
stos
insb
out
je
push
pusha
add
pop
dec
cmpsb
inc
lock
jnp
xlat
mov
cli
aas
rorb
sbbb
jo
frstor
push
xchg
cmpl
incl
jbe
mov
dec
cs
fs
mov
push
cld
inc
pop
sbb
add
shlb
mov
imul
lds
sbb
cltd
push
leave
pop
das
jns
or
daa
add
scas
mov
or
cmp
cmp
in
rorl
ds
or
ret
push
cmp
es
repz
mov
xchg
popa
pusha
jbe
push
jmp
dec
and
repnz
es
and
pop
push
sarl
add
jle
test
test
push
repnz
aam
sub
xorb
int3
cld
mov
pop
add
jge
sub
negb
stos
mov
cmpl
sbb
out
mov
pop
movsb
sub
sbb
push
push
jns
movsl
fst
mov
std
loop
lahf
jb
mov
and
push
push
fmuls
js
sub
pop
jle
out
pop
loopne
stos
jge
test
mov
jae
hlt
into
test
sbb
fs
xor
nop
jl
cld
add
add
fimuls
xor
mov
sbb
adc
dec
pop
sarl
mov
xorl
imul
mov
fwait
mov
mov
mov
fldl
repz
xchg
in
push
adc
mov
xchg
nop
xchg
mov
test
push
xchg
enter
dec
insb
call
icebp
mov
fs
adc
inc
mov
gs
int3
sbb
xor
out
lds
enter
and
pop
or
add
test
lea
xlat
jb
push
xchg
mov
mov
inc
paddw
or
fwait
or
xor
and
flds
daa
or
or
pop
cwtl
pop
rorl
pop
or
test
pushf
packsswb
pop
out
push
mov
cmp
bound
add
pop
and
pushf
filds
sub
push
gs
rorl
xlat
xor
xchg
or
gs
in
scas
inc
hlt
cmp
stc
or
adc
xchg
test
pusha
mov
loopne
adc
or
icebp
dec
iret
mov
popf
pop
pop
aas
push
sbb
test
inc
negb
mov
sbb
jge
out
sbb
in
xlat
xchg
pusha
fidivl
mov
mov
adc
dec
daa
jae
add
inc
cmpl
pop
ret
repnz
adc
nop
mov
imul
add
inc
dec
sub
jns
loopne
mov
adc
sti
sbb
scas
clc
cwtl
xor
stos
mov
aad
mov
xchg
lcall
pop
out
xchg
es
cmp
and
sub
es
decb
xchg
adc
clc
inc
scas
and
adc
or
push
call
xchg
adc
in
test
test
mov
sub
mov
enter
lods
inc
dec
cmpsb
data16
xor
pushf
mov
cwtl
lret
inc
dec
mov
lret
mov
in
add
insb
and
jle
popf
sbb
divb
adc
mov
mov
and
roll
popl
cmp
dec
add
xchg
aas
shr
xchg
jg
mov
lock
pop
sbb
test
add
andb
push
push
sbb
gs
and
mov
jno
andl
push
xchg
adc
outsl
pop
push
pop
cmpsl
test
and
ret
mov
mov
pop
addb
popf
xchg
shr
cmp
xchg
notl
call
imul
enter
cs
mov
mov
mov
add
fildll
push
pusha
lods
jp
jl
add
rorl
add
inc
pop
insb
mov
or
sqrtps
dec
ret
mov
push
dec
scas
jp
mov
xor
xchg
cmpsb
mov
jae
jg
dec
out
inc
sub
add
aaa
popa
add
fidivrs
or
pop
sub
inc
in
sbb
sti
sub
inc
xchg
mov
xchg
loop
pop
test
push
jg
imul
cwtl
xchg
and
jge
daa
jle
stc
or
xlat
inc
push
dec
jle
negb
pop
xchg
dec
adc
push
cld
jbe
jae
lea
jb
and
repz
fdivrl
mov
lret
xchg
sub
ja
and
or
stos
test
mov
jns
adc
sub
inc
aas
icebp
daa
outsl
je
lea
mov
pop
fisttpl
or
es
or
aad
adc
push
xchg
add
fs
or
fs
sahf
fldlg2
adc
xchg
in
mov
fcompl
jmp
add
call
aas
das
mov
push
jnp
es
loop
mov
dec
enter
out
sub
iret
lea
xor
push
inc
inc
jne
cmc
cmp
pop
sub
nop
andb
lock
inc
mov
add
int
stc
xor
xchg
xchg
jnp
mov
mov
fldenv
cmp
xor
push
adc
push
jmp
bound
daa
fs
xchg
enter
int3
push
inc
pop
daa
cmpsb
mov
xor
cmpsb
inc
xor
xchg
das
inc
push
jmp
stos
mov
clc
dec
and
jae
loopne
testl
data16
mov
add
test
cmp
sbb
pop
scas
sbb
fcoml
adc
jg
lret
dec
jge
mov
mov
mov
rcrb
xchg
mov
movsl
inc
dec
stos
dec
mov
mov
repnz
ret
jbe
push
sub
aad
push
test
and
popf
call
test
gs
ds
imull
dec
fcmovu
jne
xorl
gs
add
xchg
add
jno
mov
push
jp
adc
addl
jp
mov
push
or
test
dec
mov
lods
xor
and
jp
inc
icebp
outsl
pushf
cmp
pop
cmp
jecxz
xchg
jns
mov
mov
int3
sub
mov
cmp
pop
ret
adcb
stos
lods
das
mov
pusha
mov
test
and
ficompl
dec
loopne
cmp
pop
fldl
add
dec
js
sti
ja
insl
cltd
imul
jle
mov
mov
int
adc
pop
mov
in
jnp
shl
push
in
sub
rolb
cvtpi2ps
add
cwtl
clc
movsb
repnz
test
mov
cmc
into
insb
mov
inc
xchg
popf
in
sbb
inc
inc
movb
xor
xchg
cs
push
or
shrl
aam
sarb
test
aas
sti
test
adcl
or
xorb
nop
aaa
lock
or
and
test
mov
andl
scas
je
mov
adc
icebp
add
xchg
sahf
cmpb
pop
insb
or
push
mov
xchg
test
rclb
popa
push
cmpb
in
adc
pop
mov
sub
pop
out
imul
inc
mov
stos
cld
out
fs
insb
pop
stos
push
cmp
pop
js
aad
cmpb
mov
push
aad
inc
pop
punpckhbw
push
pop
dec
lret
xor
js
into
inc
into
jle
js
jp
popa
mov
jg
imul
mov
aaa
push
pushf
jg
add
ss
dec
rclb
jl
sarl
inc
or
add
xchg
aaa
enter
insl
aam
stos
fidivs
aam
sti
fsts
cmp
movsb
xchg
cmc
je
inc
ljmp
sub
or
iret
insl
pusha
add
or
daa
dec
imul
hlt
mov
mov
dec
xchg
scas
sbb
xchg
dec
cmp
in
mov
mov
outsb
mov
aaa
mov
stc
jns
call
mov
sub
or
push
loopne
push
lods
repnz
arpl
xchg
das
xchg
movsb
dec
outsl
scas
add
jo
ror
aas
pushw
sbb
cwtl
mov
mov
test
negl
mov
xchg
fwait
test
ret
fmuls
mov
add
or
into
xcrypt-ctr
cmpsl
sbb
dec
mov
xor
aaa
sbb
test
pop
loopne
sub
fsubr
imul
add
mov
cmp
imul
mov
stos
shl
mov
aaa
bound
fdivrl
cmp
sti
retw
inc
lret
sub
lret
pop
std
ja
test
or
js
dec
aad
mov
leave
xchg
addb
push
out
mov
pop
mov
mov
int3
add
fstpt
mov
arpl
jne
cmc
inc
push
mov
mov
cmp
rclb
movsl
lahf
jecxz
jle
mov
sbb
hlt
fucomi
daa
andb
or
sar
fs
sbb
push
sub
daa
hlt
imul
inc
testl
cmp
push
fbld
lock
das
sub
sbb
mov
lret
jmp
push
mov
jo
add
push
mov
jnp
test
cld
ret
int3
lods
pop
cmc
stos
pop
push
negl
hlt
xchg
mov
repnz
mov
stc
in
cmp
xor
cli
rorb
rcr
xor
cmpsb
mov
arpl
outsb
xor
dec
dec
xor
bnd
out
jo
or
idiv
or
push
push
dec
pop
sub
cltd
bound
popa
test
mov
addr16
add
fwait
imul
mov
adc
test
cld
inc
movsb
xor
mov
cs
mov
aas
clc
dec
inc
inc
insl
scas
std
cmp
adc
and
xchg
lcall
repz
cli
mov
xor
mov
subl
icebp
cmc
mov
aaa
add
mov
add
out
ret
movsl
movsb
aam
fs
mov
pop
addr16
stc
pushf
cltd
insl
mov
in
lock
mov
xchg
or
ljmp
ja
mov
mov
sub
mov
cmpxchg
nop
push
add
inc
sbb
sbb
int3
inc
push
jg
inc
inc
cmp
jl
lock
mov
aam
xchg
push
mov
lock
aas
dec
lds
mov
jmp
dec
mov
call
mov
nop
lods
add
sbb
test
add
repnz
xchg
mov
mov
add
insl
or
shl
push
sub
push
adc
inc
add
adc
mov
icebp
decb
outsl
vminsd
jp
adc
push
outsb
gs
dec
rolb
rolb
push
shrb
mov
sbb
notb
jnp
cli
adc
inc
pop
iret
and
call
ds
mov
cltd
hlt
push
mov
push
out
xchg
dec
sbb
leave
into
sarl
imul
jns
and
cmpsl
mov
cmc
pusha
ja
std
lahf
fsubr
sbb
iret
jne
fdivl
jbe
mov
mov
jmp
adc
into
gs
sub
out
cmp
mov
jns
mov
test
adc
mov
jl
imul
mov
mov
dec
fisttps
and
enter
xorb
lret
test
push
add
imul
mov
cltd
sahf
pop
into
lahf
sub
xchg
lahf
xchg
out
inc
xchg
out
dec
cmc
sbb
int3
and
pop
jns
clc
add
inc
jae
subl
mov
sub
leave
push
add
stos
add
aad
imul
inc
and
xor
call
ret
ja
clc
outsl
leave
mov
mov
leave
push
addl
daa
push
mov
xor
ljmp
outsb
add
fcmovne
and
pop
dec
and
mov
mov
ds
ret
mov
mov
test
jg
sub
nop
test
sbb
mov
test
mov
xlat
mov
clc
cli
in
adc
imul
insb
jae
movsb
sbb
xchg
aaa
lock
orl
in
mov
popf
mov
and
pop
push
jnp
icebp
jle
dec
loopne
push
mov
mov
dec
test
push
std
mov
sub
inc
dec
mov
data16
lock
jmp
push
mov
pop
push
sbb
out
mov
mov
mov
insb
push
iret
bound
pop
cld
pop
fwait
dec
push
pop
pop
sti
mov
fsubr
or
fisubrs
pop
sbb
lods
pusha
xlat
mov
cli
inc
sub
sub
daa
mov
sbb
cltd
or
mov
cmp
xor
cmp
xor
adc
iret
cmp
dec
gs
pop
test
mov
lock
lret
push
and
jecxz
es
jnp
jmp
mov
ret
out
dec
psubsw
mov
loope
mov
jne
pusha
and
dec
mov
xchg
jns
cmp
jns
jp
fisubl
mov
les
xor
popa
popa
pop
scas
nop
fwait
push
inc
movsb
sbb
mov
push
inc
mov
cmpsl
fdivrl
add
cmp
cvtdq2ps
jp
das
in
cmc
add
testl
sbb
lds
jne
pop
push
cmp
and
test
int
ss
scas
adc
cmp
lods
xor
sarb
or
and
xor
xchg
fstps
xchg
mov
mov
mov
or
dec
out
add
stos
dec
mov
lret
push
mov
push
xchg
inc
cld
divl
outsl
sub
dec
cwtl
mov
push
popa
std
jo
push
mov
ret
push
push
call
int
sub
sbb
cld
test
lods
sbb
ret
push
mov
cmpsl
in
hlt
nop
mov
hlt
std
and
inc
and
fxch
jge
sub
lock
cmp
pop
rcrl
jo
sbb
jl
xchg
xchg
sti
xchg
leave
xor
cs
ja
imul
loop
xor
inc
jmp
jbe
fdivr
fcompl
pop
push
inc
loop
mov
mov
pop
fwait
ds
mov
xchg
loop
push
mov
adc
sub
and
in
cmp
int3
push
xchg
mov
mov
or
and
or
sarb
xor
cltd
sub
add
rorb
pushf
imull
sarb
lcall
mov
outsl
pop
loope
push
mov
scas
sub
or
pop
push
sbb
mov
inc
es
add
stos
or
xchg
sbbl
sub
bound
sbb
movsb
mov
mov
push
daa
push
aas
xchg
out
mov
shll
enter
lock
sbb
sbb
mov
aaa
push
inc
cmpsl
pushf
sti
push
sbbl
je
das
iret
mov
fsts
dec
inc
pop
or
push
pop
and
pop
xor
xchg
adcl
aam
add
xor
ja
mov
fistps
je
imul
movsl
jo
je
or
mov
sbbl
stc
and
push
or
icebp
inc
sti
pop
test
test
jecxz
ljmp
push
adc
add
mov
jae
test
orl
xchg
out
fwait
mov
loope
call
mov
inc
stc
push
xor
pop
and
fisttpll
xor
cmp
cwtl
out
sub
adc
pop
std
jmp
dec
sbb
mulb
cmp
jge
jno
or
stc
inc
xor
mov
movsl
fwait
inc
adc
movsl
or
or
jge
outsl
or
iret
fsubrs
xchg
mov
sub
inc
repnz
cltd
cmpsb
ss
adc
dec
cli
push
es
sub
fldl
jb
cmp
pop
push
mov
loope
test
jns
sub
dec
sub
xor
pushf
stos
in
cmp
and
and
or
inc
or
leave
in
push
pop
ret
outsl
icebp
mov
push
ljmp
mov
jnp,pt
mov
ret
jae
xor
and
insl
rcl
xchg
lret
mov
out
push
push
repz
cmp
adc
dec
push
pop
call
pop
jb
arpl
mov
lea
mov
daa
mov
fidivrl
in
mov
incb
jle
cmp
icebp
xchg
insb
pop
mov
loope,pt
mov
push
xor
pop
xlat
idiv
cld
sbb
mov
xchg
pop
lods
jl
cld
lahf
jecxz
xor
call
insb
cld
dec
xchg
enter
pop
iret
scas
jae
inc
xchg
lahf
push
pusha
pushf
inc
jo
dec
data16
add
xor
pop
pop
fwait
and
push
mull
mov
dec
jg
fcmovbe
fimull
lods
cmpsb
jae
xchg
insb
fmull
out
lods
pushf
inc
test
lahf
std
or
out
add
pop
arpl
cmp
inc
mov
dec
add
push
jo
dec
push
mov
rcrb
shr
stos
les
sub
sarl
inc
sti
xchg
js
pop
repnz
mov
loope
sarb
lret
or
inc
movsb
mov
or
xor
jo
sbb
xlat
call
jmp
mov
popf
or
ret
and
sub
add
pop
cs
orl
icebp
or
fsubrp
adc
je
push
fiadds
sub
push
ret
mov
outsb
push
jp
cmp
rclb
out
andb
push
add
adc
inc
cltd
loopne
and
decb
mov
sbb
fsubl
jecxz
mov
jne
cwtl
adc
mov
adc
stc
cmpb
clc
dec
into
insl
int3
iret
xchg
ret
outsl
lods
insl
inc
repz
adc
cmp
out
popf
test
and
fsub
popa
mov
lcall
sbbl
jecxz
enter
inc
lahf
sbb
push
and
and
jb
cmpsl
pop
adc
sub
inc
xor
enter
fprem1
jno
movsb
xor
stos
fsubs
push
push
cld
cmp
movsb
inc
or
jp
std
insb
lods
jmp
xchg
xchg
mov
fwait
pop
mov
mov
cs
aaa
or
xchg
sbb
call
arpl
xchg
test
mov
dec
sub
pusha
clc
cmp
dec
jg
xor
lcall
test
sub
xor
xorb
mov
out
testb
sub
push
ljmp
or
arpl
fiadds
xchg
or
and
cmp
aam
and
inc
bound
adc
leave
inc
dec
mov
mov
out
inc
pop
mov
test
leave
xchg
add
lods
add
jl
shrl
mov
test
cs
enter
fwait
incl
add
lahf
mov
sbb
mov
cmc
test
adc
fsub
cmp
pop
jl
cmp
iret
mov
fsubs
test
sbb
test
out
push
xor
mull
cmpsl
sbb
int3
int3
fucomp
mov
mov
les
pop
push
push
popa
add
fimuls
les
stos
std
dec
push
es
inc
fsubrl
fldlg2
bsf
sbb
pop
mov
mov
cmp
push
fildl
jb
cmp
and
and
or
push
mov
mov
xchg
and
lods
mov
subl
xor
pop
int3
loop
adc
jmp
pop
lock
ret
daa
dec
aaa
incb
clc
jl
cmp
add
inc
pop
in
leave
sbb
sbb
shlb
xor
mov
mov
and
and
cwtl
arpl
mov
cmp
xchg
test
jp
sbb
mov
cmpsl
repnz
sarl
push
int
inc
ds
push
adc
dec
stos
shll
cmp
mov
jne
lods
mov
mov
jg
pop
push
push
daa
sbb
insb
jmp
inc
in
pushf
push
push
insl
data16
loope
inc
loope
leave
test
fstpl
mov
sar
loopne
loopne
and
scas
ja
nop
xchg
push
sub
bnd
push
and
push
xchg
pop
xor
jecxz
jecxz
dec
fstl
imul
mov
loope
inc
in
inc
filds
cmp
mov
bound
imul
movsb
add
test
add
jl
ja
rol
inc
nop
aam
push
stos
sub
into
fnstcw
ljmp
and
and
or
pop
in
mov
pop
dec
or
push
insl
in
imul
addr16
in
sub
mov
ret
mov
xchg
out
jl
inc
jp
testb
pusha
sbb
int
jge
add
mov
mov
add
cmc
xor
dec
xchg
out
lods
dec
stos
add
rcr
xor
cwtl
jns
in
cwtl
je
xchg
les
and
lret
and
repnz
sbb
xor
mov
mov
fwait
push
xorb
clc
scas
incb
xchg
subb
lahf
mov
pop
les
add
or
in
filds
orl
adc
gs
aam
dec
idivl
mov
and
in
or
xor
out
or
repz
stos
sub
mov
call
repnz
inc
inc
push
jno
push
outsl
scas
cmp
mov
xor
cs
pop
in
fisubl
jo
lods
loope
xchg
xchg
jne
jnp
aaa
sbb
inc
xchg
mov
scas
xor
jnp
testl
and
or
mov
into
xchg
jp
in
sub
mov
xchg
test
out
les
shlb
jp
sbb
loop
shl
or
clc
lcall
dec
jge
daa
cmp
adc
cwtl
jae
jns
mov
adc
pop
push
xchg
out
adc
stos
add
inc
inc
xchg
cmp
push
mov
adc
xchg
imul
rolb
mov
popf
sub
rcr
test
scas
movsl
divl
dec
cmp
sub
push
addr16
mov
popa
mov
jmp
jg
add
idivl
xchg
lds
fwait
sbb
insb
lret
sub
jne
mov
inc
mov
scas
jbe
dec
scas
stc
cmpl
mov
neg
xchg
adc
inc
sarb
cmpb
jl
pop
inc
out
fistpl
pop
inc
mov
psubq
dec
push
push
mov
xchg
inc
hlt
pop
jb
dec
jnp
push
mov
xor
mov
dec
rclb
jns
ret
sub
xorb
ljmp
inc
sbb
add
push
test
pop
js
fisubs
fsts
sub
mov
ret
dec
out
jl
xchg
stc
or
push
mov
gs
xor
add
ret
sbb
xchg
int
cmp
test
test
ret
pushf
fdivs
push
insl
insb
outsl
sbb
testb
sub
in
imul
popa
cmp
and
xor
in
lret
outsl
js
inc
lcall
scas
add
fstl
pop
test
sub
mov
ds
xor
rcrl
das
pop
aam
and
push
inc
cmc
shll
fadds
cmc
pop
or
mov
xchg
sbb
cli
xor
dec
and
mov
out
xchg
leave
pshufw
push
rcr
inc
and
push
xchg
fnstcw
dec
imull
lret
push
xchg
addr16
int3
clc
arpl
pop
xor
ss
mov
jl
addb
push
mov
and
stos
mov
jge
orl
mov
jns
dec
push
sub
shlb
test
jno
xlat
aaa
lcall
leave
fisttpl
pop
addb
shlb
fidivrl
mov
fs
scas
mov
es
mov
pop
mov
fmull
push
repz
inc
xchg
sbb
cmp
push
lds
or
pop
mov
arpl
lods
pop
xchg
push
in
popa
dec
xlat
pop
mov
and
cs
sbb
lock
lods
sarl
push
cmp
mov
xor
mov
pop
ljmp
popf
fstpt
adc
inc
in
jne
adc
mov
push
jns
stc
ds
cmp
fidivrl
in
std
sbb
sbb
test
call
mov
dec
add
mov
jecxz
andb
dec
mov
cmp
mov
jle
iret
sbb
sbb
dec
inc
test
pop
rclb
push
loope
cmpsl
pusha
fs
xor
outsl
sub
add
insb
testl
fistpl
fmull
sub
cmpsb
cmp
jne
cs
fdivp
and
add
sub
jo
ljmp
ret
call
bound
stos
pop
adc
mov
push
dec
jmp
into
mov
out
pop
sub
adc
movsl
xchg
inc
pop
xchg
out
cs
pop
mov
cmp
mov
mov
push
mulb
dec
jo
pop
cld
jmp
jnp
hlt
and
roll
jns
push
hlt
loopne
mov
aam
inc
mov
or
mov
cmp
in
ljmp
mov
sub
mov
jnp
stos
xchg
sub
jmp
fdivs
jne
negb
pop
xchg
in
decb
dec
movsb
or
add
mov
sbb
mov
test
pop
adc
imul
sti
clc
adc
and
sbb
adc
je
mov
out
sbb
mov
push
jg
push
mov
pop
push
dec
sub
test
pushf
popa
inc
jno
xchg
imul
movsb
sti
sub
addr16
lds
xor
icebp
mov
inc
pop
inc
mov
inc
cmp
in
outsl
test
or
mov
movsl
pop
mov
faddl
push
or
xchg
pop
pop
testl
les
iret
aaa
pop
orb
fisubrl
push
xchg
dec
inc
enter
pop
mov
pop
imul
mov
xchg
test
and
cwtl
nop
adc
movsl
lcall
lcall
pusha
ds
sbb
dec
fwait
adc
jo
sahf
push
jnp
sub
cltd
mov
pop
ds
sbb
dec
fisttps
xchg
fistpl
cmpsl
call
push
ss
push
pop
xchg
std
mov
mov
cmp
dec
and
mov
lock
mov
push
out
fldcw
imul
adc
push
sub
ljmp
jp
aas
jns
mov
jbe
sub
mov
pop
add
cmpsl
push
sbb
mov
pop
jb
push
sbb
inc
cltd
mov
js
aaa
cmp
repnz
pop
xchg
sub
sbb
jbe
xchg
pop
mov
pop
inc
lds
popa
or
pop
js
mov
push
jns
adc
cmp
idiv
shll
xchg
xor
xlat
inc
data16
std
ret
test
cli
in
insl
cmp
sub
sub
push
loopne
popa
sbb
fmul
push
mov
movsb
adc
mov
jl
ss
sbb
jmp
imul
sub
fisubrs
xor
jo
inc
pop
ficoml
mov
inc
js
xchg
push
nop
int
loope
push
popa
test
pop
jae
rcll
icebp
fcmovbe
mov
lret
fwait
adc
pusha
add
insl
loopne
mov
cmpsb
shrl
das
int
adc
pop
push
jns
ja,pt
mov
mov
sub
pop
dec
popa
lahf
xor
adc
fildl
sbb
pop
sbb
into
cmpsb
maxps
mov
pop
outsl
xchg
sub
pop
clc
dec
ss
lods
cs
or
xor
adc
adc
cmp
xchg
jnp
pop
pop
and
jne
lods
pop
cmp
int
repnz
mov
xchg
icebp
ret
inc
adc
jo
pop
ror
out
add
movsb
jnp
in
cltd
adc
or
inc
pop
out
xor
jge
movsb
pusha
pop
cmc
shrb
fwait
push
dec
jmp
xor
or
cmp
insl
xchg
mov
out
adc
nop
loope
out
fcoml
mov
scas
xor
jmp
fildll
and
inc
xchg
or
push
lea
push
ret
daa
sbb
sbb
sub
out
add
mov
push
iret
es
xchg
pushf
ror
aad
and
lock
xchg
fstpt
xlat
dec
mov
and
lret
xchg
mov
xor
inc
push
test
mov
std
push
mov
enter
and
fiaddl
scas
add
xchg
ds
add
ficoms
lret
pop
sub
insl
pop
iret
dec
push
pusha
adc
shrl
push
aad
es
popa
mov
lock
lret
xchg
mov
hlt
ss
cwtl
dec
mov
adc
mov
fldl
push
jecxz
nop
inc
pusha
ljmp
andb
jg
mov
push
fidivrs
pop
sbb
pop
mov
shrb
scas
dec
mov
popf
sbb
pop
dec
mov
and
jno
inc
sahf
outsl
adc
popf
mov
pop
add
test
sti
ljmp
scas
jl
or
mov
dec
sbb
cmp
jno
test
jno
movsl
add
dec
lods
adc
mov
and
ret
push
fstpl
loop
imul
jo
xchg
test
mov
inc
xchg
fwait
pop
inc
mov
or
out
mov
negl
push
sub
pop
out
sbb
lock
sahf
push
repnz
push
clc
or
aas
in
insl
lods
mov
inc
pop
sahf
sbb
in
inc
loope
dec
inc
lods
cmp
xchg
loopne
mov
dec
sahf
mov
adc
push
xor
ret
jns
inc
sub
xor
or
ds
sub
es
mov
and
mov
xor
jecxz
mov
arpl
sbb
sub
sub
popa
aad
xchg
ret
push
or
pop
jae
shlb
inc
jae
btsl
jl
popf
lods
outsl
outsl
xor
loopne
bnd
adc
test
lret
mov
add
popa
or
push
shrb
popa
sbb
jae
pushf
fsubp
clc
mov
pop
or
inc
and
jp
cwtl
je
roll
jmp
gs
sub
and
in
stos
popf
push
dec
cmp
icebp
rep
xchg
xchg
lods
push
or
xor
mov
shl
mov
addb
xchg
out
lock
inc
out
aas
add
cli
xchg
or
jg
jp
in
lock
mov
cmp
mov
gs
sahf
push
mov
in
ds
stos
xor
push
adc
mov
jecxz
aas
std
cmpsl
pop
and
xchg
push
pop
and
cmp
pushf
out
push
add
mov
and
addr16
out
add
xchg
mov
sub
adc
loopne
sbb
fisubs
sbb
lret
xchg
push
sbb
mov
sar
mov
daa
or
mov
mov
pop
sub
ret
xchg
enter
dec
lock
repz
push
data16
scas
or
sub
jns
mov
mov
lcall
add
arpl
sub
jnp
rolb
pushf
sub
lods
stos
andb
or
mov
sbb
jo
repnz
inc
jg
out
push
idiv
aaa
add
xchg
popa
sub
inc
inc
int3
test
enter
xor
insb
dec
mov
movsb
addl
adc
sub
pushf
sub
inc
mov
mov
ret
out
pop
add
push
push
fadds
xchg
fiadds
clc
movsl
aad
sbb
orl
mov
xchg
fst
inc
cwtl
stos
sub
loop
loopne
xlat
jo
lods
mov
jae
xchg
mov
aam
mov
stc
jmp
imul
pop
movsl
inc
leave
incl
sub
pop
and
loop
popa
into
ja
mov
mov
das
iret
test
icebp
mov
js
shl
jne
sahf
ror
or
es
mov
pop
test
mov
out
dec
outsl
sub
cmp
xchg
ret
fldl
xor
cmp
mov
dec
sbb
mov
pushf
cltd
call
out
test
ds
adc
add
xchg
inc
shrb
inc
jns
and
or
xlat
sub
test
mov
out
je
sub
add
mov
or
mov
dec
pop
jge
sbb
xor
leave
pop
cmc
push
lock
cmp
lcall
outsl
shlb
xor
lea
xor
imul
xlat
adc
je
jge
addr16
pop
ror
std
sub
in
imul
cmp
xchg
pop
xor
mov
aam
repz
fldt
repz
gs
clc
pop
sbbb
pop
add
and
xchg
mov
push
aaa
or
testl
add
pop
jae
adcb
leave
jl
testl
add
loope
add
or
test
sub
push
aad
test
pop
adc
mov
jnp
loop
shrl
xchg
daa
fmuls
cwtd
add
xchg
fdivrl
sub
lods
xchg
je
hlt
push
xchg
inc
or
cmc
cmc
dec
jg
aas
push
ja
lods
inc
fstps
inc
mov
loop
push
pusha
push
mov
pop
inc
std
aam
jno
out
sbb
repnz
mov
arpl
cwtl
jns
inc
lahf
arpl
popf
xchg
jmp
cmc
inc
sbb
adc
add
xchg
movsb
mov
pop
arpl
lcall
loope
sarl
jecxz
dec
ret
mov
popa
pushf
imul
push
ret
fiaddl
std
dec
pusha
xorb
scas
iret
cmp
in
sarb
push
push
repnz
mov
mov
sub
xchg
cmp
and
movl
add
test
fldenv
das
jo
ret
outsl
lods
and
pop
cltd
and
cmp
aas
ja
stc
mov
xchg
mov
and
insl
fstps
pop
add
push
insb
loopne
push
jg
icebp
mov
mov
add
xor
je
popa
es
inc
ret
push
into
sti
flds
cmpsb
mov
fcoml
cmp
add
aad
push
push
push
icebp
leave
push
ret
divps
push
cmp
imul
lret
cs
pop
adc
xchg
jo
inc
repnz
aam
or
jp
mov
dec
aam
hlt
dec
out
or
pop
pushl
out
cmpsb
mov
or
in
repz
jne
jns
fwait
dec
movq
gs
jmp
orl
mov
mov
push
push
jle
scas
adc
setl
ret
mov
outsl
add
and
sbb
sub
pop
xchg
cmpsb
mov
jb
push
mov
add
add
in
pop
push
inc
adc
dec
popf
rcrl
cmp
xor
push
pop
int3
push
ffree
or
add
std
and
add
sub
cmpsl
pop
jae
imul
xlat
ficompl
fisubrl
int
ret
add
shr
les
sbb
clc
xchg
sub
jae
ss
outsb
dec
sar
fiaddl
neg
lahf
inc
push
icebp
xlat
inc
outsl
jmp
stos
xor
loopne
push
lods
out
insb
rolb
ret
dec
cmp
sahf
in
cmpsl
lock
inc
push
icebp
out
sbb
ret
xchg
lahf
push
cmpsb
xor
jns
and
roll
daa
test
test
icebp
jge
dec
ja
icebp
lock
pop
xor
xchg
push
push
xor
rclb
xchg
pop
inc
sbb
push
inc
mov
mov
sub
icebp
fs
cmpl
or
leave
sub
aaa
or
or
xchg
push
cmp
lods
std
lahf
sub
add
cmp
pop
pusha
int
jae
jle
and
and
notl
mov
add
jae
scas
xchg
popf
sbb
pop
mov
xchg
adc
int
fidivs
pushf
das
adc
pushw
mov
cld
push
std
stos
divl
sub
add
insl
outsl
out
push
test
jg
inc
sub
cmp
mov
shrl
loopne
hlt
jecxz
call
cmp
jp
daa
out
test
jno,pn
test
pop
aad
mov
pop
adc
sub
in
insb
mov
xor
pop
adc
adc
pop
or
push
mov
adc
cmp
cmpsl
or
inc
in
scas
adc
and
mov
das
arpl
in
nop
int3
dec
popf
repnz
test
sub
notl
xchg
hlt
sahf
jg
test
mov
push
jg
cmp
cmp
xor
repz
jl
add
cld
daa
sbb
scas
cld
jp
push
sub
cmc
lahf
mov
loop
sbb
mov
push
psubd
cmp
jbe
and
cmpsb
cmpsl
mov
sub
scas
mull
fisttpll
outsl
dec
loopne
lcall
mov
aam
cmpsl
adc
xor
aaa
mov
cmp
fsts
mov
jno
insb
jl
dec
sbbl
je
lret
jns
push
xlat
dec
enter
movsl
clc
xor
out
cmpsb
mov
insl
inc
ja
mov
leave
sub
gs
lahf
out
jnp
fisubrs
fdivs
add
mov
pop
cs
dec
and
adc
pop
inc
mov
push
mov
add
inc
jle
es
push
xor
mov
imul
mov
xchg
and
aad
fbld
mov
jbe
jmp
mov
jb
jmp
filds
out
bound
pusha
lret
jecxz
or
ss
icebp
add
pop
xchg
push
test
adc
mov
adc
push
sbb
je
repz
jecxz
jmp
push
shll
ficompl
sub
jp
out
sbb
jbe
ficompl
test
arpl
cwtl
or
mov
cmp
stc
add
rolb
stos
rorb
pop
add
rcrl
cwtl
out
dec
cmc
hlt
ret
cld
test
xor
sub
stos
pop
jbe
mov
scas
scas
or
test
imul
cld
addb
jmp
imul
and
lret
test
outsb
lea
pop
xor
mov
jbe
lods
jle
dec
cwtl
or
pop
lcall
adc
cmp
mov
mov
scas
xchg
outsb
xchg
sbb
xchg
nop
imul
mov
mov
jmp
pop
mov
inc
into
cwtl
ret
add
sbb
repz
js
lods
sub
inc
cli
nop
sub
out
jp
push
mov
jecxz
adc
lret
mov
aas
xchg
cld
adc
sbb
decl
in
jb
hlt
les
push
adc
add
jmp
xlat
sbb
inc
push
clc
jp
aaa
lea
or
mov
sbb
cmp
stc
in
jbe
sti
push
test
push
xor
ss
add
outsl
sub
pop
ret
adc
cmp
mov
pop
sub
hlt
pop
cmpsl
mov
jge
cltd
adc
test
fwait
pop
xor
js
aaa
or
imul
lret
ret
mov
dec
pushf
inc
fsubs
inc
mov
push
loope
sbb
mov
addl
xchg
push
sbb
xlat
ds
and
ds
out
shl
stos
mov
push
cmp
cmp
data16
mov
lods
lods
lods
loop
push
inc
inc
add
mov
push
dec
test
add
test
shrb
cwtl
push
test
push
adc
mov
mov
loope
xlat
or
popa
test
arpl
inc
out
jle
pop
add
sbb
scas
out
lock
stc
lods
out
pause
or
push
jle
push
shrb
imul
negb
scas
int3
jnp
int3
popa
push
jmp
pop
testl
sbb
dec
lahf
es
and
pop
inc
xor
pop
shrb
xchg
sbb
cltd
loope
mov
xlat
icebp
mov
inc
out
shll
push
cltd
mov
xchg
mov
jo
jp
or
jno
jmp
test
sbb
lds
gs
adc
xor
push
add
jge
adc
push
cmp
adc
and
mov
stc
adc
or
jmp
xchg
mov
jl
pop
jg
pop
inc
bound
ret
mov
lock
cld
popa
out
pop
xchg
jmp
stos
ljmp
inc
mov
cs
dec
jl
cmp
arpl
xor
out
xchg
dec
jmp
std
add
adc
mul
cmc
xchg
pop
mov
mov
addl
lods
dec
xor
out
mov
lahf
in
jecxz
rcll
xchg
xor
bound
enter
addr16
or
loop
imul
into
jge
js
inc
fldt
push
sbb
add
lods
mov
xor
sub
rorb
outsb
movsl
xchg
ja
add
lcall
add
push
mov
addr16
sub
int
or
das
lret
roll
aas
jle
sbb
fisttpl
mov
ds
repz
cs
clc
outsl
xchg
inc
insl
in
mov
mov
mov
add
and
xor
fmul
push
or
add
sub
add
cmp
roll
fdivr
pop
xchg
mov
jmp
adc
loopne
push
cwtl
push
push
add
sbb
cmp
mov
sbbb
and
divl
sub
ss
int
sbbb
out
jns
inc
mov
les
in
call
int
dec
movsb
fistps
je
jo
add
and
adc
test
dec
xor
mov
mov
mov
mov
xchg
popf
mov
mov
xchg
out
jnp
pushf
movb
pop
fsubrl
sub
lds
xchg
ss
imul
push
push
cmpsb
adc
jge
sub
call
in
inc
int3
xlat
nop
dec
xlat
jbe
int
or
fmull
sahf
aad
adc
mov
sub
inc
dec
xor
dec
insl
xor
popa
sbbb
xor
mov
add
insb
idivb
ret
mov
aam
sbb
aaa
insl
mov
mov
fwait
ret
iret
call
aaa
adc
mov
mov
es
jnp
pushf
bound
xchg
out
jnp
add
push
mov
jb
outsl
shll
outsl
dec
lea
repnz
loope
sub
xchg
stos
hlt
ja
or
repz
lods
test
testb
xchg
pusha
test
movsl
lods
mov
test
jmp
pop
aas
or
sbb
pop
or
mov
test
fxch
mov
xchg
in
fwait
mov
es
or
push
call
fdivrs
gs
mov
int3
mov
dec
jg
dec
movb
sarl
xchg
dec
inc
js
jg
mov
cmp
or
mov
nop
and
negb
jb
inc
cmp
mov
and
pop
test
stos
sub
clc
mov
popa
test
or
enter
les
pop
bound
rclb
mov
cwtl
lds
ret
int3
pop
push
jg
push
test
push
jg
adc
mov
add
sbb
call
popf
dec
jb
ss
adc
mov
hlt
das
jno
xor
mov
mov
aad
mov
mov
nop
sbb
mov
sbb
cmpb
mov
push
pusha
ja
xchg
lods
sbb
xor
mov
mov
clc
das
shr
xchg
scas
mov
loop
push
jbe
mov
in
ret
or
adc
call
movsl
cmc
push
out
loopne
and
ja
cli
xchg
mov
mov
out
ficoms
add
mov
mov
std
sbb
enter
popa
repz
push
xor
leave
mov
xchg
xchg
pushf
jb
test
sbb
test
xor
frstor
push
xchg
test
push
mov
in
dec
fwait
test
ss
in
mov
imul
fstl
repz
jnp
int3
pop
adc
iret
mov
cmpsb
adc
or
rcl
mov
add
mov
xor
test
mov
sbb
adc
out
and
push
out
fnsave
pop
mov
push
xchg
sbbb
test
inc
adc
arpl
repnz
sarl
or
mov
push
clflush
mov
jl
cmc
mov
sbb
lret
adc
rcll
aas
mov
sbb
jmp
testb
add
aaa
loopne
add
add
push
pushf
sbb
mov
mov
ret
push
sub
popa
sti
incb
mov
pushf
xor
push
pop
jo
jne
xor
or
add
mov
xchg
pusha
mov
push
frstor
mov
mov
pop
inc
and
inc
adc
out
jo
dec
mov
stc
addl
push
adcb
fistps
adc
sub
xor
xor
dec
adc
and
add
scas
push
loop
cmp
gs
adc
daa
mov
push
mov
fcmovne
ds
sti
hlt
adc
cmp
or
in
xchg
popf
push
pushf
jne
sbb
cmp
sub
into
divl
or
mov
pop
into
and
mov
inc
pusha
test
out
push
cmp
es
cmpsb
shlb
movsl
stc
rorb
xchg
lods
ret
xchg
insl
push
add
daa
std
add
js
test
xchg
mov
xchg
cli
lahf
lods
out
dec
repz
dec
fucomip
scas
lcall
cmp
inc
xadd
lcall
movsb
jmp
mov
or
fsts
insl
lea
xor
and
cltd
pop
xchg
push
in
fs
mov
adc
mov
iret
xchg
testl
imul
and
testl
jns
mov
aas
aam
mov
jne
rolb
lret
stc
test
pop
mov
loopne
inc
jno
mov
and
jnp
pop
fadd
xchg
mov
adc
pop
sbb
repz
clc
cmp
daa
or
add
mov
jmp
inc
xchg
test
insb
std
sbb
stos
and
mov
int3
sahf
in
xchg
sti
fwait
leave
shlb
push
in
xchg
or
jns
sub
xlat
outsl
xor
push
idivl
arpl
and
push
push
inc
pop
xchg
lahf
std
insl
fsubrs
nop
jle
das
ljmp
cmp
fidivs
test
ficompl
xorl
jbe
fs
fidivrs
mov
mov
stos
or
xlat
jno
in
icebp
mov
je
sub
addl
and
dec
stc
push
push
mov
sub
mov
xchg
mov
mov
stos
push
ret
lea
sbb
stos
and
testl
lcall
sbb
adc
dec
mov
popf
inc
xchg
aam
in
xor
or
pop
sub
mov
lock
packssdw
adc
in
mov
icebp
popa
dec
xchg
out
icebp
outsb
ret
rorl
fimuls
jne
xchg
mov
call
mov
cld
das
movsb
push
mov
jmp
nop
ljmp
in
les
or
push
push
in
fiaddl
xor
inc
scas
rcrb
cmp
shlb
mov
mov
outsl
mov
push
sub
cmp
adc
sbb
add
sub
fisubrs
and
daa
fdiv
sbb
and
push
push
mov
icebp
pop
and
cli
xor
outsl
ds
popa
aaa
xor
movsb
pop
adc
or
push
lret
adc
pop
push
jnp
sub
adc
pushf
outsb
rcll
ret
add
shlb
sbb
lock
mov
or
jns
in
mov
int3
int
dec
xchg
arpl
pop
xor
iret
jmp
cmpsb
mov
pop
add
xchg
inc
push
sahf
sbb
push
push
insl
pop
and
int
or
pop
pop
xor
sbb
inc
mov
inc
stc
mov
and
lea
adc
es
aam
cmp
ljmp
or
sbb
popa
lods
and
cli
cld
std
idivb
ret
repnz
push
gs
or
sub
inc
dec
out
lcall
sti
mov
icebp
leave
pop
nop
ret
out
sbb
push
dec
mov
or
je
mov
mov
std
aaa
pop
out
pop
adc
mov
insb
add
xlat
repz
sub
bound
mov
sub
std
jmp
and
cld
sahf
xor
jbe
push
dec
dec
jno
les
dec
ljmp
mov
lds
icebp
imul
gs
faddp
push
data16
or
push
fiadds
and
lods
stc
mov
shlb
pop
nop
push
pop
xchg
pushf
xchg
sbb
sar
jnp
xor
gs
fisubl
les
xor
cmc
mov
mov
loope
sbb
push
fimull
sbb
cli
imul
dec
inc
stos
xchg
gs
pop
stos
in
ficoml
inc
sub
adc
mov
pop
bound
test
icebp
dec
mov
mov
add
lcall
mov
fwait
sbb
mov
int
add
sbb
mov
es
mov
xlat
push
cmp
outsl
mov
pop
cmp
and
int3
add
bound
or
mov
mov
xchg
add
cmp
and
stos
into
notl
je
lods
mov
fimull
js
push
adc
lcall
jg
pop
or
sub
ja
xorl
pop
push
test
mov
xlat
mov
cmp
xchg
pop
xlat
pop
idivl
insb
jns
mov
cmp
nop
bound
pushf
ficompl
push
cmc
mov
mov
mov
push
in
cmpsb
cmp
sub
rcll
sub
arpl
adc
lds
adc
dec
pushf
xlat
dec
push
and
push
mov
xchg
cmp
sbb
into
sub
pop
addb
adc
insb
sbb
lock
adc
je
pusha
stc
add
or
insb
ss
xchg
ret
popa
fsubr
mov
mov
mov
dec
pushl
fwait
xchg
je
xchg
jecxz
sub
testb
xchg
lock
jecxz
mov
fsubrl
mov
sti
and
adc
and
scas
into
lods
jbe
or
jle
lret
es
cmp
jg
movswl
scas
mov
sbb
aam
shll
sbb
lock
cmpb
mov
xchg
mov
inc
lcall
or
push
rcr
cld
in
mov
lock
das
jecxz
pop
or
xchg
mov
adc
push
out
popf
daa
mov
mov
iret
cmpsl
add
xchg
cltd
lds
dec
stos
pop
and
add
insb
sahf
test
repnz
fs
addr16
hlt
negb
xor
andb
mov
aad
jg
jns
mov
in
int
sub
dec
cli
sbb
mov
mulb
pop
pusha
ja
out
push
fnstcw
mov
sbb
mov
jbe
mov
or
jae
add
aad
pop
and
or
xor
push
xchg
in
gs
adc
faddp
gs
shl
cmp
aam
imul
arpl
cmc
popf
sbb
stc
jl
bound
mov
adc
shr
rcl
pop
jge
cmc
addb
leave
or
xchg
push
xor
jmp
sbb
ljmp
adc
xorl
aaa
and
lds
adc
xor
sti
js
inc
xlat
and
idivb
mov
es
dec
ret
push
fstpl
adc
js
dec
sub
loope
hlt
int3
dec
mov
cwtl
das
mov
sub
sbb
adc
testl
xor
push
mov
test
cmp
fwait
xchg
mov
or
test
mov
in
xor
mov
jne
mov
or
lods
lret
adc
mov
xchg
out
jns
mov
repnz
add
int3
cmpl
out
in
rorb
xorl
fnstenv
adc
jae
rol
mov
aas
dec
rcl
pop
inc
repz
popf
aad
add
lock
mov
testb
rol
pop
inc
xchg
fadds
mov
ljmp
aas
cs
jnp
push
push
dec
pushf
shr
in
mov
inc
adc
cld
std
cwtl
xchg
mov
ljmp
scas
mov
negb
xlat
sub
lret
fisubrl
popf
or
xor
mov
stc
push
stos
jae
or
iret
loop
enter
out
aaa
int3
xchg
sub
mov
push
push
dec
jp
pop
ja
cmp
scas
or
mov
insb
jno
insl
out
dec
lea
cs
inc
sub
fsubl
inc
frstor
xchg
out
fdivl
mov
adc
popa
ja
iret
jae
and
inc
in
mov
cltd
xor
add
andb
ret
sub
xchg
iret
and
cltd
gs
mov
xchg
sbb
ret
in
call
xchg
mov
or
adc
ja
xor
xchg
cmpl
test
inc
mov
movsl
cli
fcmovb
or
cwtl
lcall
aas
mov
mov
push
js
scas
dec
icebp
repz
out
pop
sbb
xchg
adc
xlat
jns
out
fistpll
pop
arpl
ret
sahf
icebp
data16
pop
xor
inc
scas
scas
mov
mov
inc
push
insl
xchg
pop
loop
mov
into
jo,pn
cltd
shlb
mov
in
imul
push
inc
jns
adc
pop
push
xlat
ror
mov
or
or
jmp
ljmp
sub
clc
dec
cmpsl
icebp
in
mov
push
or
xor
mov
fs
stos
ja
xchg
stos
mov
js
sbb
test
xor
inc
lock
or
adc
in
testl
jns
mov
out
cmpsl
jg
push
pop
iret
inc
and
out
mov
lcall
cmc
adc
inc
aaa
push
or
fdivp
test
lds
scas
pop
lret
pop
fs
jb
mov
in
out
or
mov
inc
repz
pop
inc
push
cld
mov
mov
repnz
push
push
and
lcall
mov
cmp
addr16
repz
shlb
scas
loop
bnd
stc
push
mov
jne
xchg
push
xor
ja
test
mov
lods
push
arpl
or
fisttpl
push
or
push
sbb
enter
xchg
arpl
sub
fldcw
rcrb
sbb
mov
add
pop
sbb
aaa
shrl
xchg
insl
dec
loope
repnz
cmc
lret
xor
movsb
inc
mov
in
and
inc
jae
sub
mov
das
out
fimuls
jnp
popa
loopne
mov
sbb
jae,pn
int
aas
stc
xchg
popa
jmp
addr16
push
cs
mov
or
jle
pop
lock
mov
adc
jns
push
pop
sbb
ret
cmp
test
stos
mov
push
fdivrl
fs
scas
dec
repz
rolb
inc
xor
push
iret
or
adc
roll
pop
push
gs
mov
dec
inc
jbe
clc
ret
sarb
push
icebp
into
and
mov
mov
and
aam
test
mov
push
leave
jmp
jae
cmpsb
mov
mov
nop
imul
in
ja
fstpt
lret
jae
cli
dec
fmuls
mov
cmp
cmc
sahf
sub
jecxz
xor
into
pop
nop
mov
mov
adc
and
xor
sarb
mov
enter
movsl
mov
int
sub
pop
pop
lods
mov
dec
adc
adc
jp
popl
jne
mov
dec
dec
pusha
stc
add
rcl
shlb
test
inc
sub
add
mov
mov
mov
mov
roll
mov
mov
fwait
adc
mov
or
lret
xchg
iret
sub
in
call
hlt
push
adc
mov
out
fcmove
xlat
xchg
movsb
inc
push
int3
jmp
out
push
and
xor
cmpsl
call
xchg
pop
pop
jne
rcl
or
outsb
inc
fstps
daa
sti
out
dec
loope
outsb
inc
or
push
xchg
dec
adc
push
mov
push
jns
addr16
es
jb
repnz
ja
fisttpll
mov
outsl
jns
push
xor
mov
mov
fcmovbe
adc
pop
out
mov
imul
lahf
bound
inc
outsl
imul
leave
mov
adc
pop
aas
xor
pop
repnz
int
dec
lret
add
mov
je
or
in
or
mov
scas
pop
aad
mov
lods
or
xor
mov
cltd
shlb
or
sub
inc
cwtl
clc
pop
sbb
ss
inc
jnp
lcall
out
mov
inc
and
jg
lds
jmp
sub
mov
jbe
inc
pop
pop
mov
mov
scas
insl
dec
and
into
shrl
cmp
mov
pop
hlt
pusha
sub
dec
test
out
xor
dec
loop
icebp
adc
dec
mov
addr16
dec
xor
out
jg
hlt
push
out
inc
les
roll
inc
pusha
inc
outsb
sbb
xchg
rcrb
and
cmp
push
xchg
inc
xchg
cld
lcall
sub
das
movhps
sbb
dec
loope
cwtl
mov
pop
sarl
shrl
lods
retw
push
add
outsb
mov
icebp
mov
lods
and
ds
loop
gs
add
adc
dec
aaa
cltd
aad
lock
adc
loope
inc
call
dec
and
and
rcrl
scas
andl
outsb
mov
or
fadd
xchg
push
lock
jle
and
orl
xchg
pop
es
mov
dec
ficomps
fisubrs
xor
push
andl
in
repz
push
xchg
sub
mov
sahf
jo
mov
in
add
push
push
pop
push
mov
fimuls
ficomps
ss
jp
daa
xor
stc
leave
push
pop
dec
mov
sub
jl
mov
fs
divl
add
add
aad
stos
add
pop
rorb
imul
inc
cmpsb
cs
dec
inc
xchg
js
cmp
loope
inc
mov
xchg
dec
mov
mov
or
add
xchg
ficoml
mov
std
inc
data16
std
xchg
pop
mov
loop
mull
and
mov
loope
xor
mov
clc
rcrb
mov
aad
repz
iret
sub
sub
or
arpl
fcmovu
lahf
dec
idivb
jl
inc
cld
outsb
or
fldenv
ja
mov
pop
mov
in
adcl
jb
mov
in
dec
aaa
addr16
or
and
shrl
jmp
dec
push
inc
fs
sub
cmp
xchg
xchg
dec
sahf
into
jge
inc
and
rcpps
mov
data16
pop
pop
jmp
jo
push
and
or
sarb
pop
xor
mov
mov
xchg
cltd
andl
xor
insb
sbb
push
sbb
jbe
into
and
shrb
sub
shlb
scas
ret
lds
pop
jno
mov
cmp
das
les
stos
xor
mov
mov
pop
xor
shlb
push
imulb
push
mov
dec
pop
ds
xchg
fcmovb
gs
dec
or
add
jnp
cmp
push
cwtl
mov
jl
enter
into
jmp
or
xlat
lret
pop
lods
jno
les
inc
into
stos
add
roll
mov
sub
cltd
push
sub
adc
ret
ja
inc
dec
mov
mov
sub
test
les
outsl
ret
sub
and
lock
adc
popf
ljmp
fnsave
push
xor
dec
push
mov
dec
movsb
fs
subl
pop
int3
scas
sbb
inc
inc
dec
dec
fistpll
push
or
imul
ds
dec
in
outsb
dec
xorb
push
lret
out
aad
in
xchg
sbb
or
or
lea
aam
mov
pop
rorb
inc
xchg
mov
scas
cmpsl
pop
loope
or
int3
stc
mov
push
push
or
outsb
mov
mov
push
movsl
jbe
cmp
cmp
iret
pop
fstpl
jae
gs
call
sbb
sbb
mov
divb
cmp
test
pop
int3
dec
mov
cmp
test
xor
sbb
cmp
xor
xchg
mov
repnz
sti
mov
mov
call
push
dec
sbb
bound
pop
xchg
loopne
xchg
movsb
mov
or
ud2
in
cs
jp
or
inc
cmpb
insl
popa
dec
rcrb
mov
dec
ss
clc
orb
mov
xor
push
and
dec
in
and
jae
mov
push
push
xchg
xchg
int
adc
jae
in
int3
out
test
cmc
jno
push
jecxz
rorl
xchg
mov
push
xchg
je
insb
add
push
jmp
clc
pop
aad
mulb
notb
xlat
inc
cs
pop
push
pop
pop
lds
xor
popf
or
mov
iret
push
pop
adc
ret
orb
adc
xchg
sub
sub
sbb
and
hlt
subb
or
aam
xchg
jae
lods
push
pushf
xchg
jle
rcll
mov
lret
out
notl
adcl
inc
hlt
sahf
sub
and
add
movsl
cwtl
lcall
sub
mov
out
test
mov
add
test
cld
aam
aas
std
out
sbb
jle
cmp
cwtl
jbe
xchg
mov
out
mov
addr16
ljmp
out
push
out
push
add
mov
inc
adc
xchg
push
push
mov
mov
push
das
cmp
mov
sbb
xor
inc
xor
clc
les
andl
lods
mov
push
daa
fsubr
out
rcr
xchg
lds
push
sub
prefetch
mov
sbb
les
iret
jbe
mov
push
push
inc
out
xlat
imul
std
push
pop
les
stc
mov
test
call
test
in
stos
fstl
pop
filds
cmpsb
clc
jae
out
and
jae
inc
and
xor
fdivl
rorb
fildll
xor
push
jmp
push
push
dec
lret
nop
and
shll
testl
lahf
pop
xchg
pop
add
dec
sub
inc
movsb
cmp
test
xchg
and
int3
iret
jae
rcrb
sbb
jp
and
outsb
sub
loopne
lock
jp
mull
mov
imul
sbb
xor
jle
mov
mov
out
xchg
lcall
inc
xrelease
pop
adc
push
push
and
in
bound
cmp
mov
mov
pop
shll
mov
ja
fists
cwtl
mov
arpl
es
orps
pop
fnstcw
insb
in
ret
addr16
mov
jne
mov
data16
sub
adc
addps
push
das
xchg
mov
lcall
imul
pop
add
mov
xchg
fistpll
sti
sbb
mov
dec
stos
jp
aad
pop
xchg
repnz
add
add
cmp
mov
mov
fisttpll
jg
add
stc
jg
ljmp
mov
fnsave
nop
loopne
xchg
rcrb
mov
xchg
bound
inc
cmp
ss
mov
jns
cmp
lock
cwtl
cli
das
or
outsl
jns
int3
dec
cltd
sbb
jp
and
xor
sbb
lods
mov
sahf
clc
nop
xor
push
add
xorb
imul
pop
inc
shll
and
imul
shlb
dec
adc
imul
jp
outsb
sub
lcall
cmc
jbe
inc
daa
jecxz
dec
jg
and
ljmp
xchg
sbb
push
lock
aas
arpl
dec
aam
or
sbb
pop
test
mov
gs
std
lret
jge
jmp
movsb
push
aad
jns
in
nop
in
jg
lock
mov
fists
leave
mov
test
xor
and
and
mov
push
and
mov
jb
sub
mov
or
mov
sbb
sahf
fsub
andl
xchg
push
je
mov
inc
add
in
sbb
and
xchg
leave
icebp
mov
sub
out
jge
repz
inc
imul
push
xchg
pop
aad
shrl
imul
or
jae
dec
addr16
cwtl
mov
inc
jg
sbb
sbb
aam
or
fimuls
fisubl
xor
push
and
xchg
jnp
pop
idivl
adc
xchg
cmpsb
lcall
xchg
jge
pop
outsl
xor
bound
loop
mov
into
lea
xor
add
pop
push
push
jae
push
hlt
mov
and
aaa
dec
gs
ds
scas
pop
out
jg
mov
repz
sub
fistpll
movsb
test
push
push
cmpsl
xchg
ret
pop
imul
divl
pop
sub
xchg
jnp
push
xor
dec
cmp
aad
clc
stos
call
jle
scas
pop
mov
cld
faddl
add
fists
outsl
cmp
loope
jae
repz
sub
mov
add
nop
push
cmp
jl
mov
push
mov
add
adcl
sub
sub
pop
push
loop
cmpsb
stc
or
sub
rorb
outsl
lea
and
and
and
fcomps
pop
sub
loopne
sbb
mov
cmp
imul
mov
jg
notl
dec
xchg
cli
or
push
jns
and
dec
aaa
cmp
popf
sub
es
jecxz
sub
mov
ljmp
jp
lret
dec
repz
add
scas
insb
inc
push
inc
scas
mov
mov
divb
pop
pop
and
clc
adc
in
dec
inc
testl
and
std
in
dec
std
repz
icebp
fbstp
stos
cld
into
cmp
sahf
stos
dec
or
push
pop
xor
xchg
mov
test
add
inc
negb
xchg
xchg
stos
cmpsl
jp
cmp
fisubs
test
aas
push
push
rcrl
sub
xchg
stc
test
xor
test
insb
jo
jb
xchg
sub
adc
or
xchg
mov
add
adc
add
cmpsb
std
cmp
sbb
adc
adcb
xchg
push
and
cmpsb
cmpb
jecxz
dec
cmpsl
jne
repnz
cmp
sub
mov
sti
jle
dec
and
scas
fdivrl
mov
sahf
mov
jb
mov
cmp
adc
adc
pushf
xorb
insl
xor
inc
jb
inc
je
mov
addr16
pop
stos
sub
int3
xchg
js
in
dec
shlb
lds
inc
int
clc
data16
into
aaa
popa
pop
push
fists
cmp
clc
out
push
lods
xchg
inc
jecxz
mov
sub
nop
cmp
test
cwtl
dec
mov
enter
adcb
leave
dec
cmp
dec
daa
sbbb
ds
and
or
ja
adc
mov
test
adc
add
pop
xchg
scas
mov
inc
push
push
test
mov
loope
push
inc
decl
pushf
push
out
add
repnz
sarb
in
imul
sarb
orl
adc
mov
pop
fisttpl
lods
sbb
cmc
jne
xor
pop
and
cwtl
and
in
arpl
dec
ds
cmp
aam
daa
ja
sub
pop
stos
xchg
add
cmp
lock
arpl
jl
imul
cmp
xchg
pop
mov
jecxz
add
cs
sbb
mov
push
js
inc
sbb
shrb
and
or
dec
lods
mov
into
mov
lea
sub
out
cmpsb
jno
jmp
repnz
and
mov
adc
test
mov
in
cltd
mov
dec
adc
in
das
and
sbb
movsl
enterw
dec
jecxz
mov
and
or
inc
andb
xor
mov
std
sub
pop
outsb
xchg
cmp
sub
cmc
mov
jmp
inc
mov
add
cmp
roll
mov
inc
push
lods
xor
fs
fisubl
cwtl
lods
stos
xor
jmp
xor
add
jmp
sub
scas
dec
or
xchg
xor
lret
mov
rep
mov
fnstsw
xchg
sti
seta
scas
jl
inc
negb
inc
sub
cmp
fcoms
sub
jno
adc
repnz
les
adc
jb
or
add
daa
xchg
sahf
mov
bnd
imul
xor
addr16
or
std
out
jge
and
dec
sub
push
fidivrl
jmp
fdivrp
xlat
enter
je
push
es
pop
adc
xor
loope
xchg
inc
sbb
and
bound
ficomps
aam
in
ret
mov
and
jne
lock
mov
sarl
subl
mov
jae
movsb
adcl
ljmp
push
and
loop
int
pop
cmc
dec
test
jg
mov
and
test
pushf
clc
and
xchg
daa
sbb
xchg
stos
fldt
mov
jecxz
or
dec
mov
mov
cmp
mov
sti
pop
stos
pusha
add
fcompl
dec
lea
push
subb
inc
mov
je
cmpsb
push
cmp
sbbb
fwait
sbb
leave
arpl
mov
dec
inc
push
mov
adc
mov
clc
xchg
and
in
pop
cld
xor
shlb
sub
or
add
rclb
inc
cmpsl
cltd
cmp
outsl
lcall
ja
mov
or
sub
popf
aaa
and
cmp
push
sbb
std
or
test
fisttpll
lea
mov
test
inc
int
fnstsw
hlt
sar
mov
push
sbb
sbb
mov
daa
cmc
push
nop
stos
cmpsl
ja
lds
ss
push
cs
cmp
push
mov
xor
das
lcall
xor
xchg
xchg
test
iret
loopne
in
pop
nop
xchg
addr16
lea
lea
nop
or
or
bound
pop
movsl
popf
call
adc
and
js
loopne
loope
insl
fadds
js
out
sub
xor
adc
or
loope
cs
mov
in
loopne
addb
and
fstp
jnp
jmp
ret
mov
insl
pop
out
dec
leave
stos
into
icebp
js
xlat
mov
ja
ja
mov
push
fucom
sub
scas
xchg
mov
adc
push
mov
fimull
pusha
inc
xchg
dec
inc
in
lret
or
add
bound
out
stos
push
xlat
lahf
xchg
push
pop
lods
cld
jl
leave
fistps
xor
fiaddl
bound
shrl
sbb
push
imul
dec
cmp
sub
lret
scas
jg
ds
jmp
fsubl
pop
stos
mov
lret
and
or
mov
faddl
aad
jp
ss
push
lcall
jbe
imul
mov
fsubrl
inc
cmp
inc
dec
push
call
das
inc
push
jbe
aad
pop
adc
push
jo
pop
adc
xor
incl
leave
inc
mov
add
sub
cmpsl
cmc
xchg
stos
pop
jo
mov
fsub
push
cmp
and
aas
dec
test
rcrb
es
lds
mov
push
int
les
stos
loop
lods
push
jmp
mov
inc
cli
cmp
into
dec
in
xchg
sbb
xchg
mov
pop
jbe
popf
fs
inc
fs
mov
pop
mov
mov
icebp
mov
aam
and
fwait
xlat
xchg
jns
xchg
add
lcall
dec
es
and
adc
in
adc
cli
test
mov
sbb
adc
push
das
es
sub
xor
in
jp
hlt
mov
loop
xchg
mov
and
xchg
adc
inc
scas
jmp
mov
xchg
or
pop
insl
ret
xor
aaa
jno
out
mov
subb
stos
or
mov
shlb
jmp
cltd
es
xchg
shlb
cmp
and
sti
and
mov
outsl
fnstsw
roll
adc
std
cmpsb
lahf
or
fiaddl
test
sub
pop
sbb
inc
jp
inc
shr
pop
lahf
xchg
adc
sbb
xchg
arpl
inc
xor
into
sub
repz
inc
jp,pt
dec
sbb
xchg
fs
mov
nop
popa
sub
in
adc
cmpsb
cmp
repz
push
push
mov
push
jnp
xchg
mov
pushf
mov
sahf
lods
push
jne
mov
push
iret
cwtl
rorl
fwait
inc
lcall
pop
aas
cmc
pusha
dec
lds
pop
dec
rcr
aaa
cmp
fnsave
adc
add
shll
cmp
popa
or
mov
jno
dec
inc
fldenv
adc
pop
xchg
mov
cli
lret
mov
scas
xor
adc
cmc
inc
lret
sbb
out
fidivrs
fmull
cmp
adc
mov
push
test
cmp
nop
lahf
xlat
cmp
and
dec
inc
lods
imul
sbb
inc
loop
xchg
mov
adc
in
push
jne
and
imul
sahf
fnstsw
jns
xor
and
mov
out
mov
sub
adc
and
xor
aaa
mov
xchg
mov
test
or
adc
mov
mov
and
aas
push
sbb
add
rcrl
and
sub
outsl
cmp
or
and
and
in
lea
cmp
fisttps
dec
outsl
push
mov
xor
insb
xor
das
mov
or
jg
mov
add
or
cwtl
mov
xchg
xor
fldt
into
rolb
call
mov
fsubs
icebp
lods
cmp
cs
or
inc
xor
int3
icebp
sub
mov
je
and
cmc
dec
les
pop
fsubrp
sbb
mov
cwtl
pushf
or
inc
lods
and
sarl
cmp
push
jbe
cmc
sub
arpl
jecxz
mov
push
and
stc
inc
fnstenv
cmp
mov
jl
jns
and
or
add
jp
lcall
sbb
out
add
dec
dec
mov
cmp
jl
scas
data16
cltd
push
popf
lret
cmp
dec
lahf
add
in
mov
mov
inc
xor
jmp
enter
adc
xor
sbb
jge
adc
mov
out
enter
je
outsl
adc
lock
bound
repnz
and
in
outsl
shrl
adc
lock
xor
mov
jle
fistps
push
jae
in
xor
rol
fbld
movsb
push
mov
lods
and
mov
fwait
das
inc
mov
cmp
mov
aad
mov
vcvtpd2psy
cmpsl
sbb
mov
popf
outsb
push
daa
loope
out
je
cwtl
pop
dec
shl
loope
aaa
in
cli
sbb
jecxz
inc
sahf
sbb
in
mov
out
push
and
mov
cmp
sahf
aas
dec
jg
jb
cltd
push
rorb
imul
mov
cmp
mov
xor
push
iret
outsl
jne
roll
push
dec
jno
pop
icebp
aam
pusha
mov
cli
subb
aaa
pop
adc
add
mov
fsub
scas
notb
push
sahf
push
repnz
mov
inc
sub
ss
jbe
or
inc
sahf
sub
aam
cli
pop
das
adc
in
adc
add
rcrl
lods
pusha
outsl
jo
push
in
xchg
dec
imul
adc
sub
jmp
outsb
leave
cmp
push
jmp
in
dec
test
lods
jns
jns
loop
jg
cmp
dec
rcl
cmp
cld
enter
nop
pop
clc
and
hlt
in
xchg
pusha
sbb
dec
into
dec
xor
scas
dec
lcall
cmp
pop
pop
fisubs
add
lods
adc
gs
aas
rorb
pop
and
jg
sbb
sbb
sbb
pop
jge
lods
xor
aad
xor
je
cmp
cmpb
and
pusha
adc
dec
fnstsw
mov
inc
push
dec
mov
and
lock
mov
pop
gs
xor
push
xchg
ja
fimull
lea
std
cli
pop
clc
cmp
dec
loop
pop
test
out
inc
sub
and
add
sbb
inc
int
mov
xchg
pop
dec
rcl
mov
cmc
jnp
in
add
pop
and
sub
out
scas
push
inc
mov
cmp
jb
pop
and
push
out
lret
repz
div
xor
les
lahf
jg
xor
fcmovnbe
fwait
sbbb
push
add
adc
dec
inc
lret
cmp
je
dec
pop
mov
enter
sarl
push
fnstenv
orb
fidivl
sbb
add
dec
xorb
cmpsb
push
xor
ud2
inc
popf
fwait
in
into
jmp
lds
pop
xchg
xchg
lods
pop
xor
sahf
dec
add
cs
jbe
lfs
cmp
pop
stos
lods
ret
jb
or
scas
inc
dec
daa
rorl
repnz
clc
test
xchg
pop
mov
xchg
mov
jle
push
movsl
mov
sub
add
mov
sbb
inc
cmp
aaa
fnstsw
outsb
pop
in
in
pop
test
or
jae
ret
subl
shl
repnz
sahf
jle
or
or
lret
sbb
dec
sbb
jne
mov
inc
in
sbb
stos
mov
mov
xlat
stc
cmp
dec
jae
fisttpl
and
and
loop
lods
movsl
popf
inc
stc
mov
out
or
insl
mov
mov
mov
jle
aaa
scas
push
or
sarb
out
xchg
mov
fisubs
xchg
cmp
push
inc
sarb
sbb
mov
push
mov
cmp
scas
lds
push
xor
int
add
in
iret
xor
stos
pop
es
pop
shll
push
xchg
icebp
fnstsw
inc
out
cmp
shlb
push
sbb
scas
lret
mov
out
and
cmpsb
cmp
popa
inc
pop
jecxz
rcll
nop
icebp
sub
cmpsb
int3
add
mov
xchg
pop
lds
pop
cwtl
jg
dec
jbe
inc
mov
fsubs
adc
mov
add
fs
inc
push
inc
leave
pop
out
add
mov
mov
mov
les
gs
jbe
mov
imul
cmpsl
call
pushl
outsb
aad
inc
adc
int
shll
test
sbb
jp
mov
mov
jl
dec
push
call
lods
stos
add
pop
shrl
inc
leave
das
pop
and
jl
xor
rolb
insb
nop
leave
mov
ss
out
or
dec
lods
xor
hlt
pop
lods
and
sbb
inc
in
and
mov
cmp
and
sub
ficompl
lret
adc
cmp
xchg
nopl
int
mov
in
xchg
mov
push
cmp
cmp
inc
sbb
dec
and
sbbw
xchg
xor
loopne
pop
rclb
mov
jb
or
jne
inc
bound
test
pop
mov
es
jge
insb
inc
mov
fcoms
int
shlb
stos
mov
add
loope
sahf
adc
inc
push
aad
cmp
hlt
pop
pusha
fnstsw
inc
and
fs
test
popa
pop
adc
pop
enter
mov
sub
mov
mov
daa
in
aam
mov
inc
mov
cltd
push
insb
ret
cmp
jle
xlat
inc
mov
cmc
add
cwtl
cmp
jge
sbb
lods
pop
aam
dec
xor
sahf
pop
int
js
daa
outsb
or
fisttpll
push
or
outsl
dec
arpl
or
push
sub
bound
aad
testl
out
daa
loop
mov
or
mov
repz
adc
gs
pop
subl
add
mov
sti
push
push
jo
dec
push
fstl
mov
call
jg
cmc
dec
mov
pop
mov
mov
mov
or
mov
mov
icebp
jnp
sbb
and
cmp
sar
shl
jbe
pop
fwait
jns
ja
int
std
mov
inc
aas
jo
dec
cli
test
popf
push
pop
xor
adc
push
in
loope
out
cmp
mov
gs
adc
mov
inc
xlat
mov
inc
stc
imul
mov
stos
jb
in
stos
adc
xchg
sbb
inc
fwait
jle
cwtl
cmp
or
xchg
sbbl
sub
xchg
aas
movsl
call
mov
push
stos
mov
ljmp
mov
mov
adc
mov
inc
or
jo
pop
mov
rclb
add
divl
mov
inc
scas
into
mov
fcmovnb
sbb
sbb
inc
sti
mov
cmp
fld
insl
xchg
xor
aad
ss
and
jb
jns
nop
mov
sub
out
pmullw
enter
popf
push
or
ret
push
fnsave
stos
sub
out
jb
jle
fstpt
xor
arpl
out
jae
out
push
pop
or
cmp
xor
or
pusha
mov
loope
movsl
movsb
and
sub
and
sbb
fdiv
pop
popf
xor
xchg
mov
xor
push
push
test
pop
xor
cmpsb
fs
cmp
pop
push
movsb
loop
lret
insb
call
add
pop
fstl
bound
jle
sub
enter
adc
fs
insb
js
sbb
sbb
inc
jnp
gs
iret
ja
and
lahf
lret
pop
ret
hlt
cmpsb
icebp
jmp
ljmp
dec
jbe
mov
lahf
mov
out
push
push
xchg
dec
mov
int3
lahf
adc
cli
daa
cmp
add
sbb
push
lahf
jecxz
inc
or
jecxz
rorl
dec
mov
mov
and
or
lods
sub
inc
dec
dec
cmp
sti
pop
aad
insb
movsl
mov
int3
mov
jns
aam
es
popf
mov
mov
in
mov
out
xchg
lods
or
mov
test
xlat
mov
jle
mov
cmp
jmp
dec
xchg
not
fs
leave
fbld
sub
pop
jle
sbb
icebp
int
aaa
sahf
or
shll
clc
lahf
sub
call
adc
jb
sti
xor
or
inc
addl
mov
in
in
and
les
push
stc
mov
into
jge
add
and
inc
or
iret
inc
insb
jle
out
cmp
or
jge
cmp
sbb
nop
lcall
loope
pop
mov
adc
inc
and
mov
jno
or
jnp
cli
and
push
popa
mov
or
push
imul
sbb
adc
cmpsl
js
dec
test
dec
or
push
sbb
cmp
dec
out
push
adc
and
jb
fistl
push
sub
push
mov
lahf
incl
imul
jno
mov
fisubs
insl
cmpsl
cwtl
movsl
mull
xchg
push
cmp
in
cmp
pop
cmp
push
add
cmp
sub
inc
xchg
xchg
repnz
flds
cmpsl
cmpsl
cmpsb
push
adc
iret
xchg
loope
pop
clc
dec
add
insb
insl
ret
ljmp
mov
lds
adcb
sar
pop
jae
xchg
push
push
test
inc
out
int
dec
sbb
mov
dec
xor
push
subl
push
jmp
dec
and
push
lcall
mov
or
jle
sbb
aaa
daa
lods
stos
mulb
xlat
mov
sub
jle
popa
popa
mov
scas
mov
in
rolb
in
sbb
dec
push
sub
mov
xchg
loopne
mov
mov
jecxz
cmc
push
outsb
and
cli
add
sub
negb
nop
fdivrp
xchg
test
mov
jb
rclb
sbb
bound
inc
addr16
push
or
lcall
rcll
push
adc
pop
pop
pop
outsl
out
fs
cmpsb
shlb
jae
add
cmp
sets
dec
das
mov
hlt
jb
daa
cmc
adc
lea
ljmp
negb
pusha
fisttpll
sub
sub
cmp
adc
jl
or
inc
pusha
pusha
pop
and
loopne
or
sbb
mov
icebp
cmp
mov
sbb
jecxz
cmp
dec
xchg
sarl
jmp
mov
int3
or
lahf
dec
push
aaa
dec
into
cmp
jl
fiaddl
icebp
ss
xor
mov
xlat
jge
fistl
push
sti
pop
lods
and
iret
sub
pop
icebp
mov
out
jb
and
lock
pushf
popa
xchg
lret
pop
in
xor
in
inc
andb
adc
push
bnd
xchg
cmpsb
cld
adc
mov
mov
test
jge
dec
dec
out
and
push
sub
jns
lock
ljmp
mov
pop
fs
sub
jno
in
xchg
mov
out
adc
test
mov
mov
test
shrl
je
sbb
jo
jne
mov
scas
sbb
adc
and
scas
xor
cmp
stc
pop
loop
cmp
loopne
jle
pop
mov
mov
test
gs
sub
sbb
popa
mov
ret
adc
popf
jp
mov
sbb
push
repnz
mov
cmp
clc
inc
mov
ss
ret
cmpsl
addr16
arpl
into
jbe
jge
xchg
xor
loope
inc
fildl
inc
xchg
fisubl
cmpsl
lock
imul
push
inc
fmull
sbb
cli
and
jle
and
cmp
je
inc
arpl
pop
in
sbb
push
mov
inc
fisubrs
test
cmpb
mov
scas
shll
push
jg
jmp
test
pop
mov
mov
lds
mov
mov
hlt
or
push
pushf
pop
mulb
mov
sub
xchg
imul
push
pusha
xorb
fs
xchg
pusha
push
lods
mov
int
and
or
mov
add
or
rcll
in
sub
dec
jno
dec
cld
add
and
xchg
movsb
pop
mov
pusha
dec
rcll
fldl2t
sbb
ja
ja
pop
test
xchg
popf
mov
lret
mov
ret
sti
leave
inc
movsl
mov
mov
mov
dec
push
push
mov
lcall
push
aas
jge
pop
lods
pop
cmpsl
sti
cltd
sub
adc
add
or
dec
mov
pop
out
cmp
mov
xrelease
dec
ficoml
js,pn
adc
jg
and
inc
adc
pop
pusha
in
mov
xchg
into
cmp
rclb
cmp
jo
jbe
sti
fwait
loop
inc
rcr
mov
jp
pop
sbb
add
stos
lahf
stc
mov
loope
or
std
push
inc
dec
jne
and
push
mov
int3
xchg
push
mov
xor
fcom
add
jb
xor
into
ss
xchg
mov
cwtl
clc
mov
out
outsl
sbb
in
fwait
in
outsb
push
lcall
mov
jecxz
movsb
pop
xchg
sub
es
mov
and
pop
int3
rcrb
jo
add
dec
fistpll
outsb
or
mov
inc
insl
pop
mov
push
mov
xchg
cmp
mov
add
je
pop
adc
arpl
fxam
push
arpl
cltd
cmp
hlt
mov
adc
ss
fs
test
xlat
inc
jmp
stos
mov
imul
daa
and
pop
cwtl
and
popa
pop
jl
jo
cltd
jns
push
js
adcl
mov
mov
popf
mov
and
xor
xchg
jle
cmc
mov
std
mov
mov
mov
pop
clc
idivb
stos
out
stos
loopne
rcll
push
aaa
push
mov
and
mov
mov
jg
scas
pusha
cmp
pop
out
xchg
pop
xchg
cmpb
subl
add
paddw
out
and
pop
mov
dec
pop
mov
cmp
xor
mov
mov
xor
pop
aas
mov
push
enter
popf
pop
mov
sarb
jmp
jmp
adc
push
data16
cmc
lock
xchg
out
mov
mov
push
pextrw
or
mov
pop
inc
bnd
lods
lods
and
inc
inc
jmp
ljmp
out
rcrb
adc
dec
ret
cld
pusha
cmp
sub
cli
out
ss
je
aad
sbb
js
je
dec
pusha
stc
mov
inc
or
push
push
pushf
xor
pop
jo
ret
xchg
cmp
cmp
pop
add
scas
dec
xchg
in
sbb
mov
and
divl
adc
cli
push
rcrb
call
mov
push
adc
outsl
loop
push
enter
cmpsl
testb
dec
nopl
pop
and
mov
fildl
lea
out
xor
jge
sub
iret
mov
test
aas
push
mov
xor
ss
pop
mov
int
mov
ljmp
rcr
dec
and
sub
int
fsubs
and
xchg
fcompl
inc
sbb
inc
shll
lcall
movsl
filds
pop
dec
dec
std
loop
int3
or
sbb
lret
addb
adc
pop
fcomps
push
aas
jne
shr
call
js
je
enter
mov
pusha
iret
xlat
adc
mov
push
outsl
aad
adc
sbb
sub
leave
xchg
outsl
stos
mov
push
add
add
add
sub
mov
call
pushf
nop
addr16
cli
insl
and
dec
imul
aad
push
aam
xor
xchg
and
cmp
imul
xor
pushl
mov
ret
mov
test
outsl
dec
adc
sub
shl
xchg
lahf
fmulp
adc
fidivrl
imul
cmovno
stos
push
sbb
stos
incl
xor
in
xor
dec
enter
cmp
repz
sti
adc
xchg
in
je
pusha
ja
rorb
sbb
es
mov
add
dec
daa
lret
jo
aam
jne
es
mov
adcl
shrb
push
stos
movsb
push
push
into
insl
push
push
dec
and
icebp
xor
sahf
movsl
arpl
mov
adc
cld
out
inc
shlb
push
push
xor
jno
or
ficoml
or
mov
in
push
stos
xchg
jo
adc
pop
jmp
es
shll
mov
xchg
xor
mov
mov
mov
pop
lahf
dec
dec
mov
mov
sub
mov
mov
xchg
sub
iret
jle
push
mov
jne
stos
sub
dec
enter
mov
sub
mov
pop
mov
and
inc
nop
dec
mov
je
loope
sub
test
jbe
out
xchg
pop
xor
or
and
jno
sbb
push
push
loope
addl
mov
xchg
sub
push
cmp
push
cmp
cmp
or
xor
xor
sbb
dec
ret
or
cmpsb
jbe
insb
jae
cs
or
sub
push
dec
sbb
mul
das
add
push
push
in
xor
movb
xor
push
lods
adc
icebp
adc
cld
pop
dec
and
dec
mov
in
loope
mov
and
int3
inc
or
cmc
in
idiv
sub
loope
sub
mov
ljmp
call
inc
inc
in
mov
lods
lods
das
push
js
in
mov
cmp
mov
mov
orb
add
popf
push
stc
sti
movsl
shlb
cld
push
dec
add
cmpsl
dec
mov
sti
cltd
lods
pop
sub
push
pop
sub
pop
imulb
push
mov
data16
mov
xlat
aam
loope
mov
testb
dec
xchg
and
arpl
and
push
dec
lods
je
out
fldl
dec
or
mov
addr16
popa
push
mov
cmc
hlt
fbld
dec
repz
rorl
mov
add
pop
jle
scas
sbb
dec
xchg
in
mov
test
cmc
rcrb
ret
loopne
push
jecxz
cmp
scas
mov
jno
in
xor
aas
repz
out
loope
dec
mov
cltd
mov
or
jg
les
push
fwait
ret
cmc
mov
pop
push
push
lret
fsubrs
push
jl
lcall
push
mov
lds
pop
and
nop
dec
adc
xchg
scas
adc
sub
hlt
sbb
jmp
pop
mov
push
paddsw
mov
mov
jg
insl
fs
mov
jns
lds
dec
sub
push
mov
test
sarl
lahf
sbb
cwtl
cs
xchg
cmpsl
xchg
in
mov
dec
imul
push
test
mov
dec
jg
mull
xor
dec
jns
cs
mov
hlt
jg
and
in
mov
aad
cld
add
push
cmp
cmpsl
pop
push
sub
cli
xor
call
lods
shll
cmpsl
lcall
mov
pop
cmp
decl
push
lds
test
loope
sysret
or
adc
nop
adc
addr16
aas
rcll
cmc
xor
mov
stc
shlb
add
add
and
mov
jbe
cmp
orb
dec
lret
inc
outsb
and
data16
lahf
pop
orl
mov
mov
xchg
xchg
imul
aad
loop
mov
enter
inc
pop
cld
scas
int3
jge
mov
mov
jp
xor
xchg
adcl
xorb
stos
imul
add
inc
clc
mov
push
dec
fcmovu
movsb
lcall
push
lea
nop
cmp
pop
je
adc
ljmp
lahf
pop
sahf
add
shlb
add
cs
test
test
push
scas
dec
pop
and
add
jecxz
add
mov
loop
or
rorb
adc
sbb
insb
in
insl
lret
hlt
push
jl
or
std
jb
pop
inc
lods
bnd
pop
mov
dec
xchg
adc
mov
sub
dec
hlt
popf
jg
int3
xlat
push
movsb
loop
push
mov
mov
adc
pop
inc
push
ljmp
mov
lock
adc
pop
stos
or
es
mov
push
lcall
adc
mov
lds
and
lahf
adc
push
jo
mov
adc
shl
fs
daa
ret
xchg
cld
mov
into
adcb
jns
shrl
push
push
bound
mov
pop
bound
push
jecxz
add
ret
in
cwtl
push
movsl
adc
lods
cwtl
lcall
in
adc
test
lcall
and
xchg
rcrl
out
out
bound
ja
jmp
test
das
jle
mov
and
mov
sbb
pop
push
xorl
into
dec
lahf
mov
fistpl
fdivrl
xorl
push
sbb
mov
mov
jne
lret
dec
push
push
nop
imul
inc
test
add
mov
std
jge
inc
aas
sarb
scas
adc
popf
sub
add
hlt
stos
loop
sbb
adc
push
cmp
cld
sti
sarb
mov
repnz
adc
into
arpl
or
addb
add
je
jae
lods
push
ds
repz
jecxz
jbe
jnp
lock
adc
loopne
test
pop
pop
fdivl
jge
std
pop
xorl
jp
jae
dec
stos
adc
sbb
xor
or
sub
adc
ljmp
aad
in
stos
push
mov
add
add
xchg
cmpsl
pop
xchg
pop
push
std
xchg
sbb
cmp
jg
mov
mov
lock
shr
fiadds
aas
mov
pushf
out
mov
pushf
scas
dec
pop
js
add
movsb
pop
xchg
stc
xor
in
pop
fdivs
inc
push
mov
sub
and
mov
lock
push
outsl
leave
imul
adc
push
addr16
into
xchg
out
cmp
push
stc
rcrb
cmc
jae
pop
imul
jne
mov
inc
pop
lea
jns
inc
dec
xchg
jae
sti
xchg
mov
sbb
dec
loopne
test
rcll
jmp
or
jle
arpl
xchg
addr16
pop
data16
sbb
adc
push
push
jnp
ja
fwait
addr16
aad
lret
cmp
adc
jbe
shl
xor
iret
inc
orb
lahf
enter
popaw
push
xchg
jns
ljmp
pop
jnp
jno
xchg
push
mov
xor
arpl
mov
shrl
repnz
mov
push
addr16
mov
call
xor
push
mov
inc
xor
test
mov
sbb
popa
lods
dec
mov
xor
mov
inc
out
sbb
jo
mov
popf
xchg
sub
xchg
fdivp
shl
out
mov
pop
sbb
mov
inc
jnp
lods
dec
xchg
push
add
fistl
punpckhbw
lret
ret
adc
arpl
xchg
cmp
cmp
sub
jno
shrl
jno,pn
out
sub
jb
pushf
inc
xchg
inc
int3
mov
scas
imul
dec
cmp
sti
out
jp
call
inc
mov
lods
inc
jp
push
in
jae
sub
stos
xor
cmp
sbb
cmc
sti
cmp
ja
mov
mov
stos
lods
mov
lock
int
repz
sub
pop
mov
cmp
popa
adc
sub
aaa
imul
stos
repnz
inc
xchg
and
mov
negl
dec
push
in
dec
jbe
movsb
mov
and
cs
and
test
out
jno
int
pop
xchg
aas
cmp
lret
aam
sbb
popf
xchg
lea
mov
mov
fbstp
cmp
pop
push
mov
lods
les
inc
es
orb
cmp
aaa
lock
or
push
movsb
cmpsl
fsubl
push
mov
ds
inc
xchg
mov
mov
pop
fwait
ljmp
lods
test
jmp
ja
add
je
imul
mov
cld
xchg
and
fsub
cmp
in
ljmp
shrb
movsb
cmp
adc
out
xchg
jle
sbb
sbb
hlt
sub
repnz
jnp
hlt
pushf
push
shll
andl
lcall
rcll
or
push
jle,pt
inc
loopne
push
jl
popf
push
cmc
movsl
mov
popl
or
lahf
pop
pop
xchg
movsl
cmpsb
inc
xor
sub
sbb
repz
into
xchg
cmp
nop
mov
or
sahf
lods
xchg
xchg
scas
mov
cmpsb
mov
out
inc
xor
inc
xchg
out
and
clc
fucomp
enter
sub
in
dec
pop
stos
js
lret
xor
ret
stos
jnp
or
sub
inc
fstpt
sbb
mov
push
in
aad
or
sbb
add
dec
les
push
ljmp
and
es
iret
jecxz
popa
fwait
cs
pusha
nop
nop
push
ret
mov
mov
in
pop
insl
idiv
xor
mov
inc
mov
ds
mov
inc
sub
mov
jge
mov
fists
negb
clc
lods
mov
into
push
inc
or
mov
lds
les
sti
sbb
xor
int3
push
ljmp
dec
cmp
std
outsb
adc
dec
ret
out
inc
xor
bound
push
fldt
mov
push
add
mov
cmp
and
cmp
sti
insb
push
hlt
mov
jb
pushf
loop
aaa
xchg
jno
inc
jnp
repz
out
push
and
js
es
adcl
push
in
notb
in
push
popa
pop
mov
mov
ljmp
inc
mov
sbb
lea
mov
outsl
addr16
jecxz
sub
jb
ljmp
movsb
fsubs
cli
jns
outsb
or
test
pushl
test
and
cmp
cltd
in
loope
jecxz
arpl
cmc
jecxz
and
das
sti
push
iret
jnp
jecxz
fldcw
icebp
roll
dec
imul
ljmp
push
scas
sub
aas
push
out
addl
and
aam
adc
push
lea
jle
mov
fldenv
shll
mov
dec
pop
mov
or
push
imul
adc
cmc
jnp
inc
add
mov
mov
add
fldenv
dec
movsl
cmpsl
inc
ret
pop
or
repnz
xor
decb
cli
or
pop
outsl
aaa
in
mov
pop
shll
pop
daa
inc
outsb
or
mov
stc
arpl
inc
iret
fcom
and
fst
outsb
pop
sti
push
ret
lahf
dec
xor
jno
pop
adc
jge
rcrl
call
xor
xchg
daa
cwtl
adc
sbb
jae
cmp
lods
or
or
push
or
das
sbb
addb
stc
sub
imul
leave
jl
add
mov
jmp
lea
mov
loope
mov
shlb
cmp
stos
test
insb
sbb
push
cld
rolb
dec
aas
cmp
mov
int
cmpsb
popa
sbb
insb
mov
cwtl
xchg
dec
and
in
mov
js
sub
fisttpl
pop
jbe
inc
out
rolb
sub
fcoml
push
dec
mov
jge
xchg
push
dec
push
xor
adc
push
dec
and
dec
cli
sub
mov
outsl
sbb
pop
cld
leave
lods
push
mov
bound
push
cli
xchg
icebp
xchg
cld
mov
fiaddl
test
adc
fsubrs
data16
out
mov
cmp
rcrb
pop
mov
sarb
test
sbb
fimuls
xor
mov
cmp
addr16
fstps
jbe
dec
test
insb
cltd
daa
repz
mov
mov
dec
jo
and
jbe
mov
les
test
gs
pop
lods
fdivs
mov
popf
xor
mov
cmp
mov
ss
pusha
js
outsl
fmuls
jp
dec
mov
mov
mov
fldt
mov
jge
fbstp
mov
jp
dec
in
sbb
mov
in
dec
les
pop
mov
imul
je
mov
sub
cmp
fldpi
xchg
jp
jne
lahf
jecxz
movsl
addl
xchg
test
cmp
adc
jg
cmp
pop
aas
mov
int3
aad
xor
jno
cmp
gs
cmp
add
mov
jge
or
hlt
aas
jg
das
shll
fs
pop
push
jge
fsub
xchg
push
mov
mov
pop
leave
xchg
icebp
movsl
ljmp
es
mov
xlat
mov
jbe
dec
es
pusha
cmp
out
pop
inc
adcl
adc
cli
pop
and
leave
lcall
mov
push
mov
js
pop
out
fwait
testb
and
dec
and
cmp
loope
in
push
scas
mov
jne
shlb
cs
sti
sub
xchg
cmp
pop
jbe
xor
cmc
hlt
call
ret
mov
cltd
lret
lods
sub
xchg
outsl
or
in
rcll
pop
int
xchg
push
cmp
repnz
into
data16
pmaxsw
push
out
inc
mov
dec
pop
je
loopne
ljmp
xchg
in
icebp
fistps
pop
mov
pusha
shll
push
std
ret
jo
loop
lock
shlb
mov
jle
sbb
addr16
mov
cmp
inc
rclb
mov
mov
movsl
dec
pop
pcmpgtb
xor
adc
push
daa
clc
sub
stc
and
inc
sub
fistl
sub
xchg
and
je
dec
jbe
lock
stos
scas
lcall
popa
insb
imull
jl
ret
arpl
sahf
hlt
fs
add
cwtl
mov
jae
rcl
movsl
mov
scas
les
push
arpl
pop
sbb
pop
adc
sub
test
les
outsb
lods
shl
push
or
inc
cmp
pop
mov
shl
adc
sub
mov
jo
mov
add
mov
mov
cli
call
sbb
pop
iret
and
dec
pusha
addr16
cmpsl
lods
les
test
daa
cmp
and
sub
mov
pop
jae
in
xchg
divl
jg
sahf
mov
cmp
icebp
add
dec
mull
repz
jmp
in
cmpsb
ss
hlt
dec
push
dec
daa
stos
xor
test
loop
xlat
lahf
sbbb
lds
or
lods
mov
mov
mov
test
sub
fwait
jne
sbb
out
in
pop
insb
dec
add
dec
xor
mov
dec
sub
lea
imul
push
inc
xchg
push
or
fistl
jmp
cmp
jp
push
jnp
mov
push
xorl
and
lock
pushf
iret
cmp
mov
sti
fimull
or
jl
test
imul
jne
sahf
out
xlat
push
mov
xchg
sub
sahf
mov
pushf
jbe
jg
add
hlt
adc
inc
rclb
or
dec
jb
call
js
or
jbe
loope
std
sub
dec
test
in
jb
and
js
data16
imul
mov
aad
or
adc
into
or
cwtl
test
jmp
push
popf
and
xor
pop
mov
iret
xor
test
jge
fcomi
mov
sbb
cmpsb
cwtl
sarl
popa
movsl
mov
push
fidivrl
and
lock
sbb
cmpsl
and
sbbl
mov
or
pop
cmpsl
dec
cmp
cmp
adc
cmc
xchg
xchg
jge
std
inc
push
fidivrl
hlt
jne
adc
mov
vpunpcklwd
jl
dec
dec
add
mov
stos
mov
sbb
sbb
pop
mov
movsl
and
inc
ficoms
pop
cltd
push
push
mov
sub
es
addb
sbb
jb
dec
hlt
ds
pusha
xor
or
inc
inc
lods
imul
loopne
pop
lea
das
cmpsl
nop
pop
and
mov
fmuls
imul
out
mov
dec
popf
aad
dec
xchg
adc
mov
ss
and
and
mov
mov
stc
xchg
mov
push
or
adcl
lock
jmp
jns
loop
rcrb
mov
ljmp
mov
push
mov
das
js
mov
js
pusha
int
scas
mov
or
push
sbb
push
pop
lret
dec
icebp
iret
sarb
mov
imul
js
jmp
in
dec
popf
pop
dec
dec
repz
fisubl
gs
mov
xchg
pop
loope
jle
aaa
daa
add
sub
adc
out
push
dec
lcall
inc
push
sbb
add
fisubrl
add
adc
dec
xchg
or
mov
add
shr
sbb
pop
or
loopne
rcrb
mov
jbe
jno
xchg
mov
mov
xor
ds
call
mov
bound
stc
add
fistpl
adc
dec
notl
decl
int3
adc
imul
xor
jno
fstl
lret
sbb
cmpb
mov
jnp
jns
sub
pushf
loopne
mov
mov
std
je
loopne
out
xchg
xor
jl
sti
sbb
test
push
xchg
or
in
and
inc
mov
bound
arpl
jb
or
xor
repz
cltd
mov
jg
and
aas
fdivrs
fdivs
fisttps
jmp
adc
cmp
aad
push
xor
lods
adc
sbb
pop
movsl
filds
xchg
adc
and
dec
lahf
ja
js
inc
jno
mov
js
cmc
das
sti
insl
jmp
pop
lcall
and
jne
mov
adc
inc
jns
shll
pop
stos
mov
or
add
xchg
jo
clc
fcoml
pop
xor
mov
cmpl
sarl
stc
jmp
popf
and
mov
xchg
mov
push
xchg
nop
xchg
mov
mov
es
fcmovu
shlb
or
fwait
and
sub
in
aad
dec
fs
ljmp
mov
xor
ja
fdivl
push
cmpsb
sahf
add
xlat
pop
rolb
in
xlat
cmp
fcom
dec
movsb
mov
jbe
jo
shll
xor
movsl
add
lea
lcall
dec
sub
fidivrl
mov
and
adc
fwait
ret
sub
out
inc
xchg
hlt
loop
push
adc
xor
jmp
int
dec
and
sub
movsb
sahf
push
pop
clc
mov
mov
xchg
pop
scas
sub
xchg
in
mov
inc
jbe
cmpsb
movsl
sarb
lds
repnz
mov
jno
push
fadd
lret
int3
rorl
insl
cmp
sbb
pop
dec
insb
xor
sbb
cltd
mov
loop
iret
add
xchg
jae
mov
adc
mov
orps
mov
and
mov
mov
xor
aam
inc
pop
lods
rorb
jle
or
xchg
dec
jg
mov
lods
test
xchg
mov
xor
and
push
loop
out
mov
push
xor
mov
fsts
push
xchg
mov
sarb
jno
es
aam
rorb
xchg
into
or
cmp
aas
push
xor
push
out
test
cld
fwait
loope
and
sbb
loop
xchg
push
sub
and
mov
xor
sahf
pop
cltd
aas
les
mov
out
mov
ffree
std
movsb
pop
cltd
sbb
push
mov
inc
xor
dec
pop
movsl
push
dec
inc
push
and
push
pop
inc
adc
repz
aaa
and
fnsave
jmp
aad
jae
pop
xchg
xor
repnz
sar
push
xchg
insb
inc
and
lds
icebp
int3
inc
push
das
sub
mov
stc
es
pop
inc
scas
rorb
adc
leave
lock
aam
pop
sbb
popf
inc
clc
insl
xchg
inc
jnp
mov
push
add
ss
bound
push
shl
rcrb
mov
addr16
fimuls
aaa
in
popf
and
movsb
jae
sub
jge
add
enter
out
clc
loop
mov
js
sbb
cmp
push
sbb
xchg
xchg
cli
sbb
les
sarl
icebp
jmp
push
stos
outsb
jle,pn
add
pop
add
fists
fisubl
pop
sub
push
mov
arpl
movsl
and
sbb
ja
or
cs
adc
shl
iret
lds
repz
dec
call
popf
sbb
scas
sbb
in
fildl
insl
repnz
cmp
cs
in
into
push
mov
pop
test
popa
push
cmp
mov
insb
out
adc
lock
daa
sbb
aaa
jg
inc
mov
mov
inc
loopne
mov
mov
sbb
not
lds
add
pop
push
xlat
out
cld
fcmove
push
mov
cmp
imul
lahf
push
imul
ret
push
shrb
lea
sarl
mov
adc
jbe
fs
push
pop
cwtl
jmp
inc
scas
mov
neg
xor
mov
mov
mov
dec
push
jae
or
rorl
cmpsb
pop
into
or
or
adc
xor
mov
push
and
addb
bound
xchg
mov
dec
xor
test
inc
repz
xchg
dec
mov
ja
mov
xor
push
inc
addr16
mov
mov
pop
pop
push
mov
dec
dec
add
out
or
hlt
sbb
aad
xchg
std
push
jbe
pop
adc
adc
andl
mov
movsl
xchg
fcmovnb
sbb
or
inc
xchg
pop
lods
jne
aas
xor
in
cli
xor
sbb
stos
mov
inc
jns
fcomps
lods
test
lret
push
sbb
aam
or
hlt
in
ret
or
pop
fnstcw
cmpsb
or
push
or
mov
popf
jle
push
sti
cwtl
andb
stc
subl
mov
adc
lock
enter
comiss
loope
add
aam
idivl
jl
lret
lcall
pop
mov
lea
fisubs
pop
outsl
inc
add
fidivrl
test
shl
mov
xor
insb
sbb
scas
es
fmuls
push
cmp
pusha
xor
cwtl
add
popf
push
sbb
cltd
sub
sti
cmc
stc
jmp
stc
jae
lea
xchg
mov
rcll
stos
gs
scas
ljmp
add
or
adc
lea
lods
pop
fwait
mov
insb
pop
in
sbb
mov
mov
or
movsb
orl
xor
scas
mov
mov
xchg
xchg
out
cmp
adc
out
fmul
or
nop
mov
add
pop
nop
int
xlat
insl
test
push
sub
sub
je
push
sbb
out
xchg
mov
jl
xor
inc
push
cmp
mov
mov
test
or
xor
xchg
ret
cmp
cld
cmp
mov
ljmp
lds
inc
mov
sbb
clc
mov
sbb
sbb
out
jge
popf
xor
mov
outsl
lret
loope
sahf
jnp
mov
clc
mov
pop
jns
out
mov
or
inc
loopne
inc
cmp
shl
cli
enter
xor
xchg
les
rorl
arpl
pop
int3
xchg
push
int
test
int3
adcl
fmuls
xor
and
gs
add
pop
stc
adcb
cltd
add
sub
sahf
inc
push
and
sarl
inc
sub
fmul
adc
or
sahf
jb
sub
push
lcall
ret
pop
ret
mov
pop
rolb
lds
into
shll
test
outsb
cmp
push
dec
adc
or
pop
or
mov
sbb
jbe
repz
pop
imull
jp
rol
das
out
scas
or
sbb
loop
mov
jnp
cmp
and
out
cmc
cmp
jo
mov
xor
out
out
ljmp
mov
fs
das
sbb
out
add
add
mov
sbbb
fstp
data16
bound
fidivrl
xor
mov
add
shrb
mov
add
rorl
or
movsb
inc
adc
sbb
cmc
inc
dec
mov
add
cmpsl
mov
mov
mov
mov
mov
insl
pop
jl
cli
stc
cltd
ret
jbe
add
rorb
adc
dec
outsl
and
inc
fcomi
xor
adc
cmpsb
xchg
or
sub
xchg
aam
and
mov
repz
outsl
sbb
jecxz
push
adc
loope
inc
cmp
stc
rcrl
push
xchg
add
lods
in
loope
push
ficomps
adc
movsl
jg
and
pusha
or
data16
gs
call
inc
pop
mov
sub
loope
and
fwait
int
pop
xchg
pop
data16
insw
dec
mov
sub
adc
pop
cmp
fs
push
or
stos
xor
lods
outsl
call
std
mov
clc
cmp
call
adc
xor
aas
push
out
inc
inc
test
pop
cli
jp
push
and
push
mov
push
fisubs
cmp
call
jp
mov
ficompl
inc
outsl
movsl
mov
out
add
inc
stos
cmpb
jae
fldenv
cmp
sub
inc
sub
cmp
icebp
aaa
aam
sbb
pop
lock
mov
daa
negb
mov
andl
test
roll
jecxz
cltd
and
jecxz
inc
push
adc
xor
lahf
inc
cwtl
int3
mov
stos
std
jnp
fucomp
ljmp
add
adc
imul
dec
inc
scas
jnp
fldl
mov
sub
outsb
xchg
adc
jbe
loopne
lock
push
or
jle
push
jnp
inc
lds
lds
xchg
scas
mov
and
fxch
gs
xchg
rcrb
outsl
test
test
mov
pop
fsubrl
jo
hlt
cli
jmp
jns
sub
out
push
mov
and
cmpsb
push
mov
lods
xchg
mov
mov
adc
xor
icebp
xor
shrl
fadd
or
ret
or
lcall
rcrb
int
adc
mov
dec
jo
clc
jmp
pop
mov
xchg
and
xor
cmp
je
xchg
jo
xchg
sub
adc
jg
repz
and
ja
mov
jae
and
add
or
je
pusha
pop
loopne
loop
repz
pop
cli
dec
pop
cmp
lret
out
cmc
push
and
xchg
sub
sbb
popf
mov
mov
fmul
mov
in
xchg
sahf
insl
enter
bound
shlb
lods
or
mov
out
aas
les
pop
mov
add
push
add
mov
pop
std
mov
insb
pop
mov
adc
shll
mov
jmp
out
fs
sbb
cmp
sbb
inc
mov
push
cwtl
lcall
jg
ret
push
jmp
jp
sbb
push
mov
dec
mov
sbb
pop
adc
pop
mov
mov
ds
or
mov
loopne
dec
xchg
insb
stos
out
mov
add
or
rorl
rolb
fs
test
nop
int3
push
push
push
mov
rorl
ret
loop
test
mov
inc
cli
cmc
or
cmpsb
int3
out
pop
mov
adc
in
lret
mov
fdivrl
outsl
xchg
jae
movl
dec
imul
push
sub
push
clc
cwtl
mov
mov
cmovns
sub
dec
jg
cmp
push
call
loopne
inc
iret
out
mov
add
adc
icebp
out
cmc
js
mov
scas
inc
mov
mov
dec
rol
jbe
jb
xchg
push
mov
sub
int3
and
repnz
daa
jp
and
jnp
sub
daa
jmp
sub
imul
dec
jp
mov
inc
jmp
xchg
fldl
inc
dec
sbb
mov
xchg
xor
xlat
dec
loopne
sub
push
mov
test
pop
pop
xchg
mov
dec
or
lock
xchg
jecxz
stos
out
fisttpl
lock
cmp
gs
cmpsb
jae
dec
jl
sti
mov
mov
into
mov
insl
and
push
les
into
add
cmpsl
xchg
out
mov
jle
mov
add
xchg
dec
fstpl
cmpl
in
push
sbb
fmul
mov
xchg
fldl
jge
adc
add
scas
and
jns
add
cmp
js
sub
addr16
ficoml
adc
fs
push
bound
cmp
fdivs
roll
add
mov
xor
pop
xor
int
movsb
push
sbbb
jmp
and
dec
add
sbb
inc
out
stc
in
divb
addr16
sahf
aam
jg
push
mov
imul
mov
mov
xchg
or
negl
pop
ficoml
xchg
fs
inc
push
test
shll
dec
addps
cmp
test
movl
and
je
shl
outsl
cmp
xor
xchg
and
jge
xchg
mov
jecxz
sbb
shll
insb
out
aad
add
jns
fs
dec
insl
jae
xlat
and
dec
sbb
lods
mov
orb
les
inc
jg
push
sbb
iret
aaa
xor
fneni(8087
adc
sub
mov
popa
jb
xchg
jmp
subl
dec
sub
ss
nop
inc
iret
xor
push
push
mov
in
fiadds
push
cli
testl
mov
push
insb
nop
in
mov
pop
mov
lret
jae
mov
xor
push
inc
add
stos
ret
int
push
cmp
cmc
add
dec
pop
sahf
push
xlat
adc
rorl
sbb
add
and
cli
int
mov
pop
mov
mov
adc
stos
fbstp
or
sub
aam
sub
repz
ror
push
in
push
sbb
mov
loop
cmp
shll
sub
sbb
xchg
jo
dec
xchg
jne
cmpsb
shrl
xor
xor
inc
ljmp
ja
sub
les
shr
pop
dec
and
xchg
rolb
sub
xlat
add
sbb
outsl
pop
popa
test
mov
inc
enter
std
push
mov
mov
jae
mov
adc
adc
fidivrl
inc
ret
or
aad
cltd
ret
aam
mov
test
les
outsl
lret
outsb
fldl
test
loopne
lea
inc
in
and
cmp
jmp
xor
outsl
int3
aad
jg
jge
adc
das
pop
or
data16
in
mov
sub
jnp
fs
mov
popf
inc
stos
mov
sub
jo
xchg
adc
cwtl
les
bound
push
cmp
adc
popa
xchg
xor
fadds
into
pop
lods
scas
pop
mov
sub
adc
lock
loopne
dec
es
mov
filds
outsb
mov
push
sbb
cwtl
sbb
mov
arpl
mov
out
aaa
nop
popa
add
dec
int
xchg
jle
stos
inc
fsubs
xor
lret
pop
lock
push
and
push
call
loop
into
mov
and
cld
dec
scas
lds
push
push
push
pop
aam
aaa
mov
mov
mulb
lret
das
sub
push
pushf
xor
adc
aad
imul
and
imul
lock
rep
inc
rcrl
jge
int3
xchg
or
add
lret
xorl
and
jne
push
jae
mov
scas
jb
dec
jle
sti
test
mov
in
pop
dec
mov
xlat
lock
xchg
add
test
push
dec
insl
das
aad
in
push
addl
jns
mov
xlat
enter
mov
rcll
mov
outsb
or
push
and
test
pop
sbb
push
mov
out
iret
lods
paddsw
push
ret
inc
inc
or
idivl
insb
adc
pop
rcll
fistpll
pop
inc
push
pop
jbe
mov
or
sub
dec
in
pusha
pop
pop
sub
test
mov
cmp
cmpsb
insl
push
cmp
or
pop
push
fisttpl
lret
negb
mov
jmp
xchg
ret
sbbl
psubsb
sti
xchg
jg
mov
in
adc
push
jl
mov
mov
jg
or
loopne
das
cltd
jbe
and
mov
mov
mov
pop
xorl
cltd
sti
jl
sub
pop
mov
jne,pt
mov
sbb
xchg
xchg
aam
xorl
ss
int3
xchg
mov
out
decb
dec
xchg
or
sahf
orb
or
inc
lret
pop
fmuls
mov
scas
sub
outsb
push
call
inc
aad
mov
aam
jne
das
xor
add
mov
negl
push
mov
and
mov
pop
xchg
and
mov
add
pusha
pop
mov
mov
icebp
push
or
and
test
bnd
xchg
pop
sub
jo
or
rcrb
pop
dec
cli
cmp
mov
push
into
data16
fldcw
mov
out
cmp
roll
mov
inc
mov
or
sti
push
inc
pop
jbe
jo
push
add
stos
or
pop
stc
sbb
mov
xchg
pop
aam
xchg
bound
xchg
or
and
aad
adc
push
idivl
inc
inc
lea
popa
repnz
pop
jne
sbb
dec
pop
sbb
mov
mov
into
sub
sbb
int3
add
jp
cmp
inc
mov
dec
loop
pop
fmuls
jne
xchg
inc
mov
outsl
rorl
and
cmp
sub
pop
sbb
pop
jb
adc
clc
push
cmp
or
pop
pusha
mov
cld
adc
fadd
or
movsl
adc
stos
and
ret
xchg
sub
sub
popfw
insl
daa
mov
in
cmpsb
sbb
cmp
sub
add
movb
into
jl
or
inc
inc
cmpb
int3
jo
daa
xlat
stc
data16
xor
stos
sti
sub
rolb
sarb
fistpl
cmpsb
inc
sti
lret
jbe
push
fcomip
sti
test
mov
and
and
ja
push
fstpl
jae
jle
add
dec
in
adc
push
sbb
dec
lahf
loopne
sub
or
subb
jle
mov
mov
push
out
minps
push
mov
int3
push
dec
xchg
push
cs
pop
xchg
adc
mov
cs
rcrb
push
push
test
repz
or
inc
enter
imul
dec
faddl
lret
or
sti
sub
pop
pop
stc
rcl
dec
adc
jns
mov
push
mov
das
push
les
mov
xchg
in
andl
ss
lahf
pop
mov
jmp
pop
push
cld
data16
and
dec
push
fstpl
sbb
cld
and
inc
ret
xor
pop
or
jp
scas
fwait
xchg
icebp
call
xchg
xor
adc
rcll
adc
mov
mov
jl
pop
mov
sub
das
push
fnsave
dec
inc
cmp
pop
jmp
clc
push
mov
cmc
mov
ja
pop
sbbb
pushf
mov
aad
pop
xchg
jns
js
gs
inc
cltd
jno
push
je
push
incb
inc
jb
jl
push
stos
scas
push
mov
lods
or
or
jno
push
sbb
xadd
or
inc
add
sub
ret
mov
jge
adc
jmp
repnz
insb
pop
pop
xlat
push
mov
xchg
loop
je
arpl
lods
stos
lods
jl
cmp
jae
sub
xor
push
loop
nop
adc
pop
xor
sub
jne
mov
xchg
dec
xchg
ja
inc
inc
imul
hlt
add
inc
std
and
xchg
sub
popf
cmc
adc
jo
pop
mov
inc
aad
mov
jno
out
push
xchg
fmuls
fcoms
cmp
sbb
xchg
xchg
fnclex
add
or
rorb
add
add
iret
in
dec
xor
hlt
jle
aaa
bound
add
repz
sahf
mov
mov
jmp
mov
loopne
pop
cmp
sub
push
xlat
fsubrp
push
mov
addr16
inc
ljmp
mov
arpl
stos
shll
inc
pop
sbb
rcrb
inc
mov
xorb
dec
ljmp
test
fldenv
pop
mov
xorb
mov
imul
test
mov
sub
inc
addr16
arpl
push
xor
mov
sbb
outsb
jae
xchg
clc
pop
add
das
ds
add
lods
das
ja
lret
pop
mov
push
lahf
rolb
cmc
adc
push
inc
xchg
jo
lcall
stos
pop
sbb
loope
xor
jmp
sahf
movsl
outsb
push
out
stos
and
sub
movsb
addl
arpl
imul
cmpsb
scas
insb
sub
outsl
xor
addr16
mov
sar
push
fdivrp
cmp
dec
mov
in
xchg
mov
inc
inc
movsb
int
mov
stc
add
daa
or
cli
bnd
rorb
cmc
in
lret
inc
xchg
mov
lds
xchg
mov
xchg
cli
xchg
loopne
jb
mov
cli
cmpsb
int3
push
pop
enter
xor
movsb
dec
fistps
mov
addr16
out
clc
push
and
test
xor
add
repz
or
shrl
push
mov
mov
int3
pop
cmp
movsl
pop
sbb
jns
cmp
xor
imul
and
cld
pushl
imul
mov
xor
or
repnz
adc
push
mov
cmp
in
inc
stos
jo
mov
or
add
cmp
roll
inc
lahf
pusha
cmpsb
sub
movsb
push
jo
sub
cltd
cmc
cmp
in
pop
push
stc
and
adc
mov
popa
loope
xor
fidivrl
jmp
fwait
xchg
sbb
cwtl
dec
sbb
xor
ja
rclb
xchg
dec
xchg
clc
mov
or
inc
sbb
mov
nop
outsb
out
jno
aas
adc
mov
ljmp
movsb
clc
jg
in
mov
sub
loope
imul
lcall
movl
mov
lea
jge
inc
mov
cltd
adc
adc
orb
jg
jge
mov
push
mov
jmp
insb
pop
mov
loop
pop
sub
test
stos
popf
mov
sahf
cmc
fwait
and
in
xchg
fs
push
shr
int3
cmp
dec
ret
xchg
cld
roll
and
pop
jne
lret
or
dec
pop
inc
sarb
lahf
dec
hlt
push
cmpsl
sub
push
popa
mov
inc
and
ja
mov
jae
cmp
mov
call
daa
xchg
dec
lods
outsb
stos
and
mov
fnstenv
fnstcw
jg
je
xorb
mov
es
jbe
and
jae
cmc
push
ret
adc
and
iret
mov
jae
mov
inc
push
cmp
mov
sub
loope
pop
daa
scas
push
outsb
ja
or
orb
fdivr
ja
pop
xlat
adc
and
jnp
push
mov
lds
imul
xor
in
enter
pop
mov
div
add
or
inc
pop
fisttpll
lcall
sahf
pop
popf
xlat
in
push
ss
ficomps
pop
and
jp
cmp
xlat
inc
mov
pop
jns
adc
jnp
add
test
lret
pop
pop
push
xchg
jo
out
movsl
push
mulb
xor
cmpsl
imul
mov
jecxz
test
sbb
mov
jo
daa
lahf
ljmp
or
js
inc
push
dec
cli
push
sbb
adcl
ret
pop
add
loopne
dec
subl
push
gs
int3
dec
in
scas
aad
add
or
cmpsl
test
bound
rorb
pop
clc
pop
repnz
jne
jno
adc
add
sbb
pop
inc
mov
jbe
push
adc
or
orb
mov
xchg
lahf
push
xor
mov
cmp
mov
outsl
xchg
xchg
inc
sub
stos
and
lret
aad
inc
xchg
pop
aam
mov
adc
aaa
and
push
adc
insl
inc
push
cmp
out
xchg
and
jns
repz
mov
add
outsb
adc
fcomp
jle
shll
sti
fnstenv
ss
pop
lret
in
xor
cmpsl
jbe
fsubrs
cmp
je,pn
movsb
inc
ds
aam
gs
sahf
cmp
lods
push
mov
shll
jmp
flds
and
mov
xchg
dec
sub
sub
nop
cs
roll
fldcw
cmpsl
mov
mov
push
mov
inc
add
push
andl
fisubs
cmp
push
movsb
cmp
sbb
das
aad
xor
nop
arpl
fbld
int
lods
popa
movsl
cmp
pop
cwtl
and
jno
imul
pop
cmpsl
lock
es
cmpsb
cwtl
jmp
mov
int
and
sub
lcall
mov
testl
lods
push
xchg
hlt
xchg
in
add
push
xor
pop
je
test
ss
push
dec
out
scas
pop
js
cmp
jle
xor
fiaddl
es
push
inc
or
repnz
pop
repnz
inc
icebp
push
pusha
pop
and
sbb
repz
xorl
sahf
fs
mov
dec
dec
pop
inc
imull
inc
es
jnp
xchg
push
das
pop
cmpl
jl
popa
in
add
inc
pop
inc
sub
push
xlat
fildll
sub
les
xor
push
in
xchg
pop
and
add
and
flds
scas
and
nop
adc
fmulp
pop
xchg
ret
orb
int
rolb
nop
push
icebp
fisubs
pusha
cwtl
loopne
cmp
jmp
cwtl
adc
mov
test
pushf
xor
and
mov
pop
mov
adc
xchg
in
cli
xor
shll
push
loope
dec
lods
in
push
dec
mov
inc
jo
mov
or
push
mov
jle
movsb
xor
and
lretw
cmp
mov
in
lcall
in
popf
std
icebp
fwait
push
ret
pop
push
and
pop
sub
gs
pop
jne
xchg
xor
or
push
daa
mov
and
pusha
out
aaa
sub
or
test
jle
mov
fwait
inc
jmp
nop
push
sbb
inc
in
xor
sbb
fildl
xor
scas
lods
shrl
mov
popa
int
arpl
or
mov
iret
inc
pop
mov
test
cwtl
fs
rolb
aad
xchg
inc
test
or
clc
jno
enter
xor
and
push
out
inc
outsl
filds
xor
xchg
jge
dec
nop
xor
ret
cmpsb
gs
aas
data16
imul
idivl
loope
pop
jl
xchg
inc
dec
lret
sahf
mov
scas
bsf
mov
pushf
out
rcrl
mov
lds
jns
mov
push
push
aaa
into
dec
pop
jg
mov
jge
pop
std
mov
push
addr16
cmc
fidivl
std
and
mov
sahf
mov
sub
insb
ficomps
clc
sbb
pop
loopne
ljmp
insb
jle
adc
rorl
add
sub
xchg
cmp
xchg
loopne
jle
loop
pop
push
rclb
mov
add
xor
sahf
gs
out
mov
sbb
adc
scas
xchg
mov
xchg
out
sub
jo
jle
push
jle
inc
xlat
sbb
in
xchg
imul
xchg
insl
lret
sub
cmc
cmp
cmp
leave
dec
fwait
xor
jne
iret
nop
sbb
aam
adc
je
sbb
out
movsb
jecxz
jnp
es
fnstenv
bound
test
jo
andb
pop
jmp
fnsave
rorl
in
xlat
fisubl
les
mov
bound
pop
arpl
lods
outsl
gs
shll
insl
test
and
repnz
and
cmp
jmp
andb
testb
lods
imul
in
loop
jae
jmp
in
jnp
inc
and
xor
pop
shlb
add
fnstenv
pushf
mov
mov
xchg
mov
lock
and
jno
push
test
cwtl
fimuls
enter
subl
sbb
cmp
inc
cmpb
decb
mov
imul
test
jl
aam
cmp
sub
mov
iret
sahf
ljmp
and
rcrb
push
sbb
mov
mov
cltd
xchg
jae
adc
mov
sbb
jb
and
push
rcll
scas
inc
je
fwait
jae
or
pop
sub
jno
mov
and
dec
inc
sbb
adc
sbb
xchg
sbb
mov
negl
fmul
inc
mov
fldcw
stc
sub
push
int
cmp
jge
xchg
inc
xchg
ja
and
or
leave
xor
pop
sbb
insb
add
mov
sbb
stc
cmp
jnp
and
ret
or
push
dec
adc
cmp
mov
shlb
xorb
and
ret
les
sbbb
mov
add
xchg
je
mov
cld
mov
movsb
aaa
push
or
sbb
jbe
inc
and
add
and
pop
les
lret
push
adc
mov
push
push
pop
das
in
inc
or
dec
aam
mov
jbe
xchg
sub
movsl
repnz
and
pop
es
stos
sub
adc
add
clc
out
adc
rolb
mov
jmp
dec
mov
inc
pushl
dec
lcall
roll
mov
sar
mov
rclb
push
mov
cli
jo
clc
arpl
cmp
xchg
cli
int
add
test
or
cmp
inc
xchg
pop
mov
or
lret
loopne
pop
sbb
xchg
fdivs
sbb
in
and
cmpsb
xchg
jp
out
xor
pop
test
jge
loopnew
rorb
inc
test
mov
dec
popa
jns
adc
shrl
pop
fisubs
in
mov
js
xchg
imul
in
xchg
fstpt
ror
jge
pop
lahf
popa
and
lods
pop
jne
add
mov
dec
aam
rcrb
sarl
lret
cmpsl
jecxz
jmp
vmwrite
nop
mov
mov
insb
fdivrl
rcrb
out
pop
or
dec
sub
cmpsb
das
ja
mov
dec
xor
jnp
insl
sub
mov
and
pop
std
aaa
or
and
es
das
enter
and
cmp
xor
in
int3
cmpl
pop
cltd
aas
jmp
imull
mov
test
or
test
and
dec
cmpsl
xchg
mov
dec
add
leave
pop
popa
in
xchg
rorb
push
sbb
fcmovbe
jns
push
push
jp
ret
ret
xlat
mov
das
aam
jnp
xchg
fiaddl
fs
fidivrs
in
dec
sbb
lods
inc
arpl
pushf
stos
nop
add
dec
jb
fstpt
adc
sbb
add
test
dec
popf
rcr
mov
dec
pop
pop
test
popl
out
mov
jg
aam
lods
push
or
sbb
nop
add
push
dec
outsb
and
and
movsb
das
mov
and
mov
jg
test
je
and
aaa
sarb
mov
hlt
sbb
in
dec
fs
divl
xchg
xor
mov
pop
adcb
data16
je
or
inc
in
stos
inc
or
xor
add
popf
pop
lods
cmp
pop
aas
xchg
dec
xchg
xchg
inc
push
aaa
add
jo
fsubs
mov
adcl
bound
in
lods
jno
mov
and
jb
jno
gs
mov
push
jo
cmp
adc
andb
pusha
gs
shr
stos
inc
jbe
add
pop
insb
sbb
jge
add
mov
scas
stc
sub
aaa
pop
pop
rclb
das
repz
cmp
ret
cltd
adc
scas
popa
jnp
jg
xchg
mov
push
jmp
mov
mov
lahf
ds
scas
dec
in
in
pop
dec
cli
je,pn
enter
pop
loop
daa
hlt
in
in
lcall
iret
dec
sub
or
cwtl
jl
mov
or
sbb
stc
call
mov
lret
shll
jl
std
and
sub
or
mov
sbb
shlb
fiaddl
lods
xor
mov
jb
iret
mov
mov
fs
out
les
add
aam
and
or
jb
imul
popf
outsl
mov
adc
mov
or
stos
push
pop
xchg
or
imul
dec
sbb
inc
lret
aas
xchg
ficompl
test
fdivr
jns
lea
and
mov
lahf
fwait
rcrl
aaa
aas
lds
pusha
std
fs
mov
adc
out
pop
aaa
add
test
push
and
pop
cmp
test
aaa
add
mov
repnz
leave
pop
mov
pop
or
xorl
and
scas
sbb
mov
test
lret
fdivs
dec
adcb
sarb
pop
and
xor
hlt
jmp
and
scas
test
push
push
adc
cmpsb
mov
icebp
jno
push
cli
mov
scas
out
repnz
mov
cli
fcmovb
sbb
and
xchg
leave
pushf
test
inc
out
xchg
inc
out
pop
cwtl
cmp
sub
cmp
lahf
push
mov
in
fisubrl
or
rcr
data16
adc
push
mov
iret
jmp
push
lds
push
adc
lock
xor
rcrb
lds
dec
cli
rorb
test
loop
jecxz
mov
gs
enter
xchg
sub
and
inc
push
and
orb
sbb
jmp
int
mov
ret
fbld
sbb
adc
cmp
hlt
jns
push
mov
aaa
dec
jle
pop
jmp
fdivrs
xor
add
enter
loop
push
test
mov
cmp
test
dec
aam
or
cmp
pop
rorb
repnz
jb
cmp
or
lret
inc
sub
inc
shr
xchg
pop
imul
das
nop
inc
loopne
jmp
jae
inc
inc
cs
or
lret
test
push
and
and
leave
dec
scas
movsw
call
xor
mov
jo
sti
mov
xchg
daa
sbb
cmc
daa
jbe
mov
push
stc
xchg
aas
shll
call
mov
testl
or
rcr
jno
in
push
pop
push
std
jmp
mov
jne
jge
loope
or
cld
or
not
push
adc
mov
in
je
sbb
into
loop
mov
cmp
ficoml
pop
scas
adc
scas
or
lock
out
aaa
cmp
xchg
push
dec
int3
pop
rolb
mov
mov
insb
ja
das
and
rcll
jle
std
bound
ljmp
dec
mov
xor
xchg
and
mov
mov
mov
test
add
cmpsb
xor
inc
jno
push
sbb
mov
push
pmaxsw
mov
test
xchg
mov
cmp
and
aaa
inc
icebp
data16
scas
cwtl
jecxz
push
das
mov
sti
cld
mov
cmp
fistl
sti
xor
mov
cld
icebp
lods
or
adc
pop
inc
inc
ret
fisubrl
jl
aas
xchg
adc
imul
stos
jbe
fcompl
hlt
push
hlt
jo
sub
iret
dec
lods
pop
pop
mov
les
adc
and
fidivrl
mov
cmc
test
clc
add
xor
pop
dec
in
pushf
mov
jnp
adc
cmp
push
mov
cli
add
stc
xchg
and
jmp
rorl
pusha
mov
jp
or
lcall
movsl
jle
mov
pop
jmp
adc
jne
fwait
sahf
inc
outsl
jnp
mov
inc
sahf
push
outsl
stos
lcall
shlb
movb
inc
or
and
int
adc
aad
test
jl
jecxz
cmp
xor
rclb
jnp
in
pop
xchg
out
push
pop
pop
jmp
jmp
mov
xchg
stos
jmp
lock
mov
pusha
in
jne
shll
push
sahf
arpl
ss
cmp
test
jle
or
mov
mov
sub
adc
sub
add
mov
or
dec
jno
cmp
pop
push
cmp
insb
cmp
push
adc
adc
ret
jl
ljmp
outsb
xchg
loopne
mov
icebp
mov
lahf
std
push
jp
icebp
mov
mov
aas
cwtl
mov
adc
adc
pop
stc
or
sbb
jnp
mov
roll
pushf
lret
rolb
inc
cmp
mov
in
cltd
cmp
jnp,pt
jmp
jns
insl
repnz
lock
test
and
test
icebp
cmp
fmuls
sbbb
push
jne
push
lods
cld
pop
mov
fistpl
add
std
jg
sub
out
jb
out
mov
lret
push
aas
inc
stos
les
aad
and
push
jecxz
inc
or
sahf
add
stc
mov
lret
dec
adc
pop
lcall
xchg
negl
ljmp
sub
mov
repz
rorl
xchg
cwtl
mov
or
mov
lds
xor
mov
jp
pop
adc
call
jae
scas
frstor
mov
or
mov
push
and
ljmp
pop
sti
sahf
dec
lret
cmp
test
xor
js
inc
xchg
push
pop
int3
push
jns
xchg
sbbl
dec
xchg
xor
pop
inc
in
repnz
fdivrl
bt
cmp
ret
lods
xor
in
or
xor
mov
and
pop
jns
mov
mov
dec
daa
xor
adc
sub
mov
xor
fistpll
std
setns
pop
leave
in
int3
cmp
ret
out
mov
nop
inc
iret
jle
jo
stos
js
das
fsts
mov
cmc
arpl
or
clc
int
lods
cs
sub
in
mov
xlat
jmp
and
and
xor
fisubrs
xor
mov
add
subb
pop
adc
push
cmp
jnp
cmp
nop
mov
adc
insl
mov
or
out
mov
ss
aas
mov
xor
addr16
imul
loope
popf
test
push
ds
pop
jne
sbb
cmp
sahf
in
xor
adc
cltd
push
pop
push
fdivs
nop
clc
mov
insl
cmc
je
or
lret
mov
shlb
fldl
and
or
sbb
sub
ja
cwtl
sub
pushf
fnstsw
out
xchg
mov
leave
xor
gs
push
push
cwtl
subb
jmp
outsb
jl
pop
scas
push
mov
push
xor
and
jno
sub
push
add
dec
insb
test
adc
xchg
jbe
sbb
jle
dec
mov
inc
in
push
push
scas
and
push
pop
idivl
out
jp
mov
mov
xor
lds
add
xchg
lahf
push
int
push
jmp
stc
mov
or
sahf
sub
sbb
cmpb
mov
aas
pop
test
jnp
add
and
adcb
filds
jne
outsl
aam
enter
data16
repz
and
add
mov
data16
in
pusha
dec
cmc
xor
int
into
jns
cmp
pop
cmp
adc
push
dec
mov
imul
cld
pushw
inc
sub
jae
and
push
lcall
pop
rorl
xchg
xor
jae
xor
fistl
xlat
sub
add
test
and
inc
imul
cmpsb
test
inc
adc
int
scas
pop
das
inc
sbb
lret
jae
in
sub
push
out
aas
int3
sbb
cmp
ja
inc
dec
in
mov
popf
or
pop
xor
insb
lea
pop
adcl
mov
imul
xchg
dec
mov
ja
pop
jne
loopne
cmp
xchg
or
incl
rcll
mov
rorl
cld
fsubs
ret
imul
pop
xchg
ldmxcsr
mov
xchg
mov
sub
or
jp
pop
idivb
jae
popa
in
jmp
add
test
pop
lretw
jnp
fidivs
mov
jns
rcrl
fimuls
jmp
push
fldl
mov
and
push
push
mov
in
lcall
sti
inc
jp
scas
cmp
jnp
and
push
clc
mov
cmp
stos
idivb
lcall
in
loop
aaa
rorb
cmp
popl
xchg
lcall
adc
cmpsb
or
jg
dec
or
cld
icebp
push
lret
cli
adc
in
inc
fldcw
test
mov
adcl
stc
sub
mov
outsl
jmp
mov
hlt
dec
xor
dec
push
mov
cmp
test
mov
sub
push
or
leave
or
sub
mov
pop
icebp
loop
icebp
sub
sbb
mov
jl
call
xchg
pop
cs
mov
enter
ja
mov
jecxz
add
pop
dec
jmp
pop
into
outsb
or
stos
mov
loope
fs
mov
mov
jb
pop
ljmp
rcrb
dec
ljmp
mov
pushf
jge
adc
pop
and
add
addr16
popa
lock
mov
out
sbb
add
hlt
test
cmpsl
push
xor
inc
push
lret
sbb
jae
ljmp
int3
adc
mov
pop
mov
iret
cmp
pusha
jns
lret
mov
pop
mov
loopne
jge
arpl
fidivs
popf
jg
pop
xchg
cwtl
lret
pop
sub
mov
inc
movsl
sub
bound
sub
je
sub
xchg
frstor
movsl
mov
cmp
lea
inc
xchg
shlb
iret
ljmp
je
and
leave
pop
mov
inc
xchg
xchg
pop
shll
nop
xchg
adc
sbb
xorb
push
add
jp
xchg
inc
cli
or
in
push
sub
lcall
cmc
outsb
xchg
lods
mov
sbb
mov
int
out
ret
cmp
mov
fsubr
or
jnp
clc
sbb
mov
fucom
in
int3
aad
adc
test
fsubrl
ja
sbb
sbb
mov
sbb
mulb
mov
add
jl
push
dec
daa
mov
or
inc
outsb
xchg
lock
adc
and
bound
test
push
inc
push
mov
pop
inc
push
xchg
jmp
pop
aaa
mov
xor
hlt
push
or
fdiv
ret
mov
push
repz
adc
push
icebp
sti
jmp
cwtl
test
ja
call
mov
xchg
xchg
xor
mov
xchg
insl
lods
cmpsl
mov
sbb
enter
push
loop
add
push
cld
inc
shrb
mov
popa
lret
jl
xchg
jb
cmpsl
xchg
pop
cld
sbb
ficomps
add
or
das
pushf
lret
add
das
mov
arpl
int
pop
sbb
jnp
ss
xchg
push
dec
mov
imul
movsb
daa
jnp
xchg
mov
xor
scas
in
iret
mov
shlb
ret
mov
mov
inc
shlb
mov
test
cld
push
dec
js
popf
push
mov
push
imul
rcrb
inc
push
sub
pop
jmp
pop
into
fs
add
daa
inc
cld
sub
outsb
add
xchg
push
mov
and
repnz
sbb
xor
imul
jo
aad
hlt
sub
add
add
pop
loop
fiadds
mov
iret
xor
xchg
out
stos
fsub
arpl
test
add
mov
mov
daa
and
xor
fidivrl
mov
mov
jbe
mov
ja
add
xchg
push
jg
xor
cld
popa
dec
mov
pop
rorl
addr16
ja
and
push
dec
push
and
pushf
cmp
xlat
sub
negl
movsl
popf
mov
sub
and
mov
les
adc
add
lret
sbb
mov
or
xchg
fsubrs
cld
rcrl
xor
setbe
loop
sbb
sub
leave
sub
stos
sub
and
pop
cli
dec
mov
cmc
cli
adc
jg
std
push
mov
mov
pushf
ljmp
in
fiadds
mov
scas
arpl
lds
inc
xchg
cmpsl
dec
mov
add
lcall
xlat
aaa
bound
jg
mov
gs
ja
sarl
insl
add
add
sub
inc
insb
and
jo
clc
in
imul
clc
adc
mov
jg
dec
js
repnz
lds
jecxz
das
xchg
jmp
sub
popf
int3
lahf
je
inc
pushl
enter
subb
adc
inc
sub
or
shrb
dec
xor
and
insl
push
ds
push
push
sti
jb
in
js
imul
cmpsb
jmp
dec
jns
sub
and
pop
push
jae
push
mov
mov
mov
inc
test
dec
loope
stos
sbbl
in
mov
sub
xchg
movsl
jae
xor
icebp
rcr
movsb
xchg
or
push
bound
dec
inc
pop
mov
fldln2
in
fisttpl
pop
aaa
aad
shr
inc
stos
adc
sub
xor
stos
inc
test
rcrl
add
dec
mov
push
dec
cltd
dec
cmp
call
sub
mov
xchg
adc
push
out
add
repnz
sub
in
cmp
mov
adc
leave
jmp
cmpsl
jae
mov
sub
dec
rcll
int
dec
and
mov
aas
stos
push
and
lret
mov
mov
mov
pushf
add
pop
int
daa
lea
sub
bound
push
pushf
inc
test
mov
xor
add
jno
stos
ss
stos
imulb
push
scas
pop
icebp
rcll
dec
or
imulb
ja
pop
cmp
or
mov
mov
adc
cwtl
jbe
pop
imul
in
fdivrl
jle
mov
xchg
mov
xchg
pop
push
arpl
pop
xor
mov
ret
pop
inc
lret
flds
pop
pop
ja
imul
jecxz
shrb
ret
and
data16
daa
fucomi
mov
xor
xchg
test
or
cwtl
loope
icebp
push
gs
pop
in
addr16
mov
adc
mov
inc
push
or
scas
movsb
xchg
pop
push
push
in
jmp
or
cmp
xchg
addr16
call
pop
push
and
or
je
cmovp
sbb
mov
pop
dec
mov
shll
push
dec
pop
imul
mov
icebp
push
inc
push
shlb
adc
in
bound
in
cmp
pop
jns
dec
pop
daa
and
mov
shrb
mov
in
push
jne,pn
in
inc
pushf
aam
repnz
test
or
data16
xchg
inc
aas
leave
mov
sbb
push
aam
out
jl
jecxz
jle
xlat
mov
mov
les
outsb
cmpsb
outsb
xchg
add
xor
rcrl
pop
repz
cmp
add
jmp
push
mov
xchg
sub
std
cmp
int3
pop
stc
in
adc
neg
xlat
adc
mov
iret
add
data16
sub
mov
sub
pop
sbb
cmp
sbb
jmp
stc
or
popf
jle
stc
bound
out
xchg
cmpsl
mov
sub
inc
pop
cmc
jg
mov
cmp
push
push
stos
test
push
mov
mov
cmp
mov
inc
imul
stos
xor
insb
int3
xor
cld
push
push
add
xchg
call
sti
loop
negl
les
call
mov
push
mov
or
cmpsl
cli
lret
popf
dec
fistl
mov
je
or
push
push
push
ja
out
add
jne,pt
jp
add
or
test
mov
mov
inc
or
jle
add
inc
js
or
sbb
ljmp
mov
seto
and
gs
pop
addr16
hlt
lret
cmp
popa
js
incb
ss
loop
in
std
push
mov
cwtl
adc
lret
imul
std
in
repnz
and
lret
lds
testl
inc
adc
xchg
sub
ljmp
gs
cmc
cwtl
and
cmp
std
xlat
or
call
adc
sub
adc
cmc
inc
popa
inc
mov
leave
cmpsl
mov
aam
adc
or
sub
push
js
aas
insb
cmp
lea
cmp
push
mov
and
xor
imul
sbb
mov
cmp
movsl
inc
loopne
cli
mov
lret
mov
negl
pop
loop
mov
call
jae
mulb
jecxz
andl
and
dec
or
mov
int3
ljmp
xor
cmp
cs
push
cmpsb
loopne
fcomi
inc
fs
lods
lds
inc
sti
xlat
pop
adc
sbb
mov
repz
lds
loop
cmp
and
mov
jle
and
in
in
pop
or
cmpsl
mov
cld
ror
cmp
mul
fsubl
leave
repnz
lods
push
daa
jmp
cmc
pop
icebp
in
cmp
sbb
addr16
pusha
mov
adc
cwtl
xchg
push
sbb
xchg
imul
ja
mov
push
shlb
popf
movsl
dec
das
std
or
incb
add
jmp
xchg
pop
clc
div
jl
mov
cmp
div
xor
ja
adc
mov
dec
call
mov
loop
setl
fadds
dec
jo
pop
jo
mov
mov
hlt
sti
addr16
ljmp
adc
sbb
adc
push
mov
movsb
adc
inc
xor
pushf
inc
lret
or
jp
imul
cmp
push
std
mov
popf
cmp
inc
xchg
cltd
idivb
dec
and
aas
mov
mov
inc
or
dec
paddsb
and
xchg
insl
ds
in
cmpsb
xchg
add
in
dec
js
roll
sub
leave
leave
push
popa
in
inc
pop
mov
pop
rolb
rorl
dec
ficoml
in
sbb
cmpsl
push
pop
daa
and
fildl
movb
orl
jo
adc
stos
pop
subl
testb
sbb
adc
mov
repnz
ja
push
in
or
fldenv
loope
cmp
pop
xchg
push
push
mov
pop
es
jg
out
pop
cmpsb
popa
cmc
movlps
xchg
rcll
mov
outsl
js
push
cmp
add
test
mov
cs
leave
popa
dec
mov
imul
cs
fs
ds
aad
add
arpl
stos
dec
add
incl
fs
sti
pop
cmp
push
je
jae,pn
adc
mov
cmp
sub
sub
lret
sti
mov
jl
pop
int
insl
popa
data16
mov
popf
xchg
mov
je
arpl
addr16
inc
mov
xchg
and
test
test
mov
cmp
jae
mov
xchg
sahf
xchg
movsl
pop
jo
inc
sub
lcall
pop
pop
cwtl
jle
in
test
inc
les
scas
cmp
mov
xchg
leave
arpl
inc
inc
fists
addl
cmpsl
dec
mov
add
xor
and
out
mov
lret
inc
paddusw
or
cli
pop
pop
testl
std
cmpsb
mov
movsb
fucom
or
cwtl
add
inc
and
jb
iret
imul
aad
loope
dec
cmp
loop
loope
mov
cmp
jo
in
mov
aas
pusha
loope
outsl
sub
int
or
aas
adc
dec
mov
dec
les
or
sbb
std
or
push
xor
jno
insl
cmp
int
cmp
mov
pop
in
or
enter
sub
cmp
stos
dec
push
mov
js
cli
mov
je
jo
or
inc
cmp
xor
add
jecxz
js
dec
xchg
out
add
data16
int
sub
lock
das
sahf
mov
push
cwtl
sub
xchg
in
jp
aam
rcll
scas
js
jno
or
inc
sub
lret
out
sub
sbb
or
cmpsl
mov
pop
je
pop
pop
jno
and
test
lret
mov
push
out
mov
mov
add
adc
pop
rcll
pop
ja
repz
popf
mov
xchg
dec
scas
std
data16
mov
inc
loopne
cmpsb
cmp
int3
scas
and
call
out
loopne
repz
fbld
out
in
add
sbb
xchg
decl
sub
mov
fdiv
imul
ja
test
inc
pop
add
shr
popa
sti
xchg
lods
outsb
lds
push
push
shrl
lcall
adc
pop
sbb
rclb
jnp
add
movsb
cmp
dec
daa
outsl
aad
jae
inc
jb
cmp
sti
cmp
mov
in
outsb
es
xchg
push
inc
cmpsb
sbb
call
or
stos
mov
popa
pop
sub
cltd
cltd
ds
xchg
jae
fadds
gs
pop
test
inc
shl
idivl
jb
fstps
data16
xor
add
rcrl
mov
cs
mov
xor
add
sbbl
push
mov
je
sbb
and
pusha
rorb
cmp
mov
push
lods
repnz
cli
ljmp
inc
lret
mov
sbb
jo
fisubl
ss
inc
scas
insb
or
loope
mov
sub
imul
mov
mov
jo
mull
add
or
fucomip
sub
insb
xchg
sbb
icebp
sbb
jmp
rcr
cmp
xor
push
mov
sub
adc
scas
lea
stc
ret
in
es
addb
mov
outsl
popa
xchg
xchg
sub
sahf
shlb
mov
cmp
ja
popa
into
xchg
loope
mov
sbb
out
sub
mov
mov
inc
and
mov
sub
pop
in
lds
sbb
adc
pop
mov
ljmp
pop
xor
mov
and
mov
sbb
repnz
gs
into
pop
mov
fisubrs
das
scas
lret
shll
nop
int
lock
test
loopne
jo
dec
mov
leave
mov
lock
push
jae
orb
mov
add
cli
ret
in
mov
sbb
xchg
addb
sub
push
daa
out
pop
add
jl
rcrl
or
imul
xlat
test
lcall
inc
sbb
and
clc
push
mov
inc
inc
or
xor
xchg
pop
leave
lods
inc
cmpsb
out
jo
xlat
iret
adc
insb
dec
adc
icebp
call
cmpsb
jno
loope
dec
sub
adc
mov
fwait
mov
out
lea
push
in
fsubrl
mov
inc
mov
push
pop
push
pop
lcall
in
cmp
popf
push
clc
pop
mov
fsubl
pop
addps
ss
or
inc
sub
cmp
push
jo
imul
dec
sbb
test
push
push
subl
andb
lock
sarl
popf
or
out
andl
xor
jl
test
stos
mov
dec
je
and
adc
xchg
dec
add
xchg
lods
jg
pushf
sbb
or
mov
xor
lods
or
mov
lods
ret
sti
movsl
sti
test
fs
shll
jmp
and
sbb
pop
fld
dec
inc
mov
aad
push
jecxz
call
in
lds
lret
pop
mov
js
dec
jbe
aas
xchg
std
in
aam
mov
adc
shll
leave
ret
jmp
dec
out
mov
xchg
dec
cmp
lods
xor
sub
je
lods
xchg
sbb
icebp
arpl
addr16
rorl
fcomps
addl
out
lcall
testl
rcrb
jb
mov
or
mov
out
sub
sub
xchg
mov
insb
or
jne
xchg
pushf
nop
aad
pop
dec
je
les
inc
stos
push
push
sbb
scas
leave
rcrl
sbb
pop
es
aas
or
pushf
push
scas
jge
mov
xchg
fwait
and
movsb
fisubl
hlt
out
sbb
mov
cmp
jnp
lods
dec
pop
mov
mov
inc
inc
adc
inc
loopne
testl
test
xchg
adc
mov
fdivl
imul
push
adc
aaa
xchg
cmp
movl
or
fisttpl
add
add
pop
aaa
pop
mov
pop
mov
jmp
inc
jbe
cltd
call
push
outsb
adc
idiv
pop
loopne
inc
mov
pop
fidivrl
popa
out
inc
xorl
mov
xor
fldenv
loop
add
pop
popa
push
lahf
in
cltd
jb
mov
orb
bound
dec
mov
rcl
in
and
mov
push
and
push
or
or
rcl
mov
sub
push
clc
push
and
mov
dec
mov
jg
popf
mov
repnz
sub
call
test
lock
xchg
mov
ret
loop
cmp
outsb
xchg
mov
lahf
mov
jge
push
sub
test
int3
pop
gs
mov
add
scas
mov
notl
xchg
scas
jp
pop
cmp
repnz
mov
rolb
add
in
jp
inc
pushf
xchg
iret
ljmp
inc
insl
mov
cli
jae
and
cmp
fisubrl
cli
lds
test
sub
push
fidivrl
clc
adc
test
fs
stos
adc
xchg
loope
imul
xor
push
fisttpll
xor
sub
mov
es
outsl
cltd
shrl
fdiv
test
loope
xor
push
shrl
je
sub
sbb
xor
and
cli
jmp
popf
data16
stos
mov
dec
cli
jl
or
inc
icebp
ja
push
jae
loope
fs
enter
inc
dec
pop
xor
and
mov
xchg
mov
sbb
mov
imul
mov
or
in
cmpsb
sub
lock
mov
or
cmp
stos
mov
nop
jge
scas
movsl
insb
pop
pop
push
pushf
idivb
jmp
ds
insl
or
dec
leave
or
stc
subb
mov
ror
fimull
sbb
cmp
mov
pop
in
push
add
jmp
imul
xorl
xor
idivl
daa
pop
dec
xchg
ljmp
xor
aas
pop
xchg
or
ret
fmuls
or
dec
xchg
nop
add
xchg
xor
nop
sub
loope
inc
mov
cmp
insb
sub
out
std
xor
ja
fdivs
out
adcb
or
stc
in
rolb
add
sub
call
inc
loopne
xchg
xor
sbb
test
sub
das
sarb
sub
in
nop
inc
popa
fisubrs
pop
cld
dec
pop
mov
lods
mov
push
push
and
pushf
mov
mov
divl
popa
popf
in
mov
or
test
cs
mov
icebp
adc
pop
xchg
pop
fmul
mov
das
dec
and
repnz
xchg
rol
adc
add
in
push
test
mov
clc
adc
push
addb
add
subl
out
cltd
pushf
push
pop
into
mov
clc
test
cwtl
test
icebp
or
nop
ja
lods
hlt
jmp
popa
dec
cmp
cs
enter
mov
icebp
dec
insb
xor
adc
pop
inc
enter
scas
push
push
iret
mov
xor
cmp
cld
mov
clc
dec
popf
out
add
ja
sbb
dec
sub
mov
sub
popf
xlat
and
fidivl
in
jmp
rcr
imul
sbb
fcmovbe
aaa
data16
mov
adc
push
adc
mov
xchg
and
test
cmp
bound
add
pusha
out
daa
sbb
mov
pop
jmp
pop
dec
cmp
imul
push
popa
xor
ljmp
mov
hlt
jecxz
cli
xor
xor
pop
jecxz
dec
push
mov
mov
xchg
fmuls
addps
addr16
nop
test
nop
scas
or
sbb
sub
pop
in
into
jb
idivb
cmp
push
cmp
pop
es
sub
inc
jbe
inc
dec
and
test
xor
sbb
les
lea
out
das
cmp
pop
dec
adc
jbe
jg
and
out
xchg
lahf
cmpsl
stc
xor
dec
out
mov
cmc
jecxz
enter
pop
cmp
mov
pop
jecxz
mov
fsubr
call
fdivrs
gs
out
jno
sub
push
push
mov
mov
cmp
insl
push
xor
arpl
das
or
xchg
xor
not
inc
jp,pn
inc
add
in
xchg
test
and
sbb
jne
aam
orl
outsb
rcr
hlt
mov
outsl
nop
test
xchg
and
mov
xor
jp
xlat
sub
insl
pusha
fldl2t
and
out
roll
mov
mov
setg
mov
push
mov
fdivl
fcompl
mov
sub
cmp
daa
jge
or
je
mov
out
inc
ror
gs
add
sbb
out
int
int
lds
mov
sti
dec
mov
fmul
add
cmp
push
out
adc
jb
fmull
imul
ss
inc
out
in
bound
cmp
dec
das
sbb
cmp
std
or
mov
les
push
push
push
and
sar
or
addr16
xor
into
mov
lahf
mov
dec
cmpsl
push
je
mov
mov
cltd
mov
in
adc
js
pusha
pop
xchg
iret
push
inc
loopne
push
cli
xor
sub
push
push
lds
jae
add
jno
popf
lcall
mov
xor
jge
jne
sub
jbe
inc
fwait
sarb
out
jno
push
mov
pop
test
iret
adc
mov
adc
incl
adc
jl
stc
mov
out
xchg
mov
add
cmpsl
cmp
cs
test
and
pusha
pop
aam
insl
xor
dec
mov
icebp
cmp
add
cld
xor
enter
int3
inc
enter
lcall
test
and
out
or
fnstcw
xchg
out
aad
out
add
pop
icebp
pop
mov
jecxz
rcrl
stc
incb
and
and
pop
in
jbe
ret
mov
shlb
sbb
adc
jecxz
mov
mov
hlt
mov
cmpb
je
test
adc
clc
and
call
ds
mov
imul
inc
mov
cmp
mov
out
lret
filds
pop
lods
fists
cmp
lods
push
je
imul
mov
mov
in
xorb
mov
jno,pn
xlat
pop
faddp
int3
mov
sub
cli
push
stos
add
xchg
dec
mov
leave
dec
push
cmp
xor
hlt
nop
pop
shlb
inc
bound
clc
addr16
pusha
or
lret
cmp
add
out
out
shrl
je
int
xchg
adc
shlb
sub
lock
adc
add
mov
prefetcht2
add
dec
loope
inc
dec
dec
cmpsb
addr16
addr16
fninit
jnp
mov
push
aas
jne
xlat
add
jne
jmp
subl
mov
subl
cwtl
pop
icebp
lods
inc
movsl
xchg
push
lods
push
and
sub
dec
arpl
jmp
pop
lret
rorl
or
sub
test
outsl
mov
pop
push
cmc
shrb
push
dec
pop
mov
xor
lret
dec
push
xchg
jmp
xchg
mov
pop
cs
push
inc
push
imul
jle
jo
dec
push
ds
ja
and
xchg
xchg
in
jns
scas
mov
imul
arpl
pushl
pop
adc
gs
test
jl
sub
push
daa
mov
out
pop
fstl
fldenv
or
xchg
inc
addb
out
xchg
in
ret
frstor
add
jno
mov
mov
inc
pop
mov
in
or
fwait
dec
test
fbld
ja
xchg
popa
stos
lret
ret
fidivl
mov
loopne
sbb
cmpsl
sbb
adc
sbb
stos
loopne
cmp
movsl
gs
add
xor
push
xor
push
pop
sbb
daa
jecxz
xchg
push
jp
mov
popf
fdivs
mul
out
into
xchg
imul
inc
xor
lods
sbb
scas
ret
xor
sub
xor
movl
cmpsb
or
add
je
mov
pop
insb
imul
or
xor
dec
dec
xlat
rclb
push
rolb
movsl
inc
or
or
popa
les
xor
fisttpl
push
and
inc
dec
push
pop
test
adc
ds
fmuls
mov
lods
in
out
outsl
jecxz
mov
jge
dec
fistl
sub
inc
mov
notl
lret
and
rorb
call
jo
imul
adc
mov
loope
xchg
in
push
cmp
mov
cmp
inc
bound
lret
in
jecxz
push
out
rcll
dec
cli
and
push
mov
jnp
fwait
hlt
pop
aad
dec
lea
sub
xchg
jl
mov
sub
mov
rol
lea
xor
push
stos
fisttps
xor
hlt
in
dec
pop
sub
stc
or
loope
sti
jp
iret
sbb
movsb
sub
and
inc
mov
push
out
jmp
movsl
xchg
push
mov
outsl
lret
fnstcw
add
inc
dec
and
scas
dec
popa
shrb
jp
mov
imul
push
jne
mov
negl
fs
fldt
addb
or
and
dec
rcrb
out
mov
cwtl
push
into
mov
in
aaa
cld
inc
in
adc
mov
push
adc
and
jnp
jmp
out
mov
push
jmp
fwait
aaa
lock
inc
popf
lret
jg
cmp
or
ret
stos
shll
xlat
in
idivb
lret
leave
and
pop
mov
xchg
sub
pop
xchg
mov
repnz
mov
scas
sbb
repnz
dec
sbb
fisubrl
loopne
mov
jmp
or
xor
push
and
inc
daa
cmc
lahf
gs
xor
andb
mov
or
outsb
xlat
les
aam
and
scas
mov
sub
xor
popa
test
outsb
pop
es
sub
sbb
mov
imul
lret
xor
push
ret
loopne
scas
fisubs
and
aad
mov
sub
cmpsb
out
sbbl
push
imul
push
push
hlt
stos
sub
ds
push
mov
shrl
out
add
or
or
sahf
xchg
nop
jp
mov
mov
push
push
inc
std
mov
sub
fs
adc
mov
in
lret
pop
popa
call
mov
pop
xchg
insl
xchg
enter
out
mov
mov
call
xchg
dec
lds
pushf
jp
pop
jecxz
add
push
stos
gs
cmpsl
lret
and
mov
mov
adc
mov
repnz
lea
popf
ja
sbb
sub
inc
stos
fnstenv
filds
daa
xor
insb
inc
pop
pop
adc
cs
xchg
push
adcl
dec
out
mov
pop
mov
scas
xor
or
ret
fsubrs
mov
stos
mov
mov
or
add
icebp
mov
push
mov
sub
cmpsb
or
aas
dec
movsl
hlt
and
and
push
adc
dec
or
dec
sbb
dec
jp
fisttpl
push
mov
out
push
icebp
sti
and
inc
jns
flds
int
in
adc
flds
out
ret
fucompp
stc
jl
scas
loope
dec
mov
les
push
mov
dec
or
mov
imul
stos
dec
outsb
nop
std
pop
std
jb
ss
sub
lods
aad
push
lret
mov
xor
jno
and
xchg
out
add
pop
cmp
sub
jns
or
sub
fdivr
fs
jl
mov
hlt
sahf
stos
lahf
xchg
push
mov
mov
aaa
ficomps
fmul
xor
xchg
push
xchg
cs
adc
pop
mov
outsl
scas
sbb
cmp
stos
scas
and
jmp
cmp
insl
cmp
push
dec
push
movsl
sahf
test
lret
sub
add
mov
aaa
addr16
xchg
xchg
sub
push
xor
pop
les
mov
cs
push
add
rolb
shrl
fiaddl
push
imul
test
mov
test
cmp
adc
in
adc
mull
je
jp
jl
jb
mov
add
sahf
adc
cmpsl
mov
insl
pop
mov
push
push
push
insb
pop
sub
pop
dec
fsub
xor
insb
sahf
fcoml
fists
jae
daa
flds
ljmp
add
adc
pushf
sbb
xor
jg
shrb
out
push
iret
bound
cmp
imul
cmp
xor
movsl
inc
mov
orb
dec
pusha
ffree
xchg
mov
cli
adc
jmp
mov
ja
std
ss
mov
stos
adc
out
cmc
mov
sbb
mov
add
sbb
mov
aas
dec
aas
sbb
aaa
and
push
xchg
mov
cld
pop
das
xorb
mov
cltd
and
std
fidivl
push
and
jl
adcb
add
sub
mov
pop
inc
mov
enter
fidivrl
sub
add
adc
popf
mov
mov
mov
stos
bound
out
ficompl
mov
xor
push
add
pop
sub
add
fsubrs
adc
dec
clc
or
repnz
push
push
sub
cmp
leave
xor
sub
push
xor
mov
mov
pop
pop
fwait
orl
lock
fbld
pop
mov
ljmp
aam
psllq
jne
jae
mov
mov
push
xchg
aaa
add
sar
fstpl
lret
xchg
pop
in
push
cmp
dec
adc
lahf
std
addl
mov
push
aam
and
push
rcrl
mov
fnsave
repz
adc
vpandn
loopne
xchg
and
stc
push
stos
mov
add
jno
enter
mov
shll
test
das
in
pop
push
pop
lods
mov
mov
mov
cmc
cmp
subl
cmp
xor
inc
scas
sti
mov
xlat
push
cmpsb
outsb
sbb
cmovbe
sbb
pop
imull
push
lods
mov
les
nop
jmp
cltd
loop
add
xor
in
fsubr
and
fsub
shl
xor
lea
dec
pop
movsb
lret
rclb
adc
xchg
and
adc
cmp
sbb
jne
shr
test
outsl
fiaddl
imul
dec
lret
lods
leave
pusha
pop
jns
cmp
test
not
or
fs
and
stos
dec
fcmovnbe
add
sbb
jmp
andb
dec
jl
jge
mov
sbb
out
ja
inc
push
or
clc
js
xchg
mov
decb
xchg
fstpt
inc
mov
jmp
imul
adc
imul
xor
fistpll
and
les
xchg
add
or
dec
ja
ret
dec
insb
test
fidivrs
subl
stc
sbb
insl
pop
mov
sub
das
dec
pop
aad
push
mov
cmc
ss
push
xchg
in
arpl
pop
fwait
and
sbb
inc
dec
sub
jecxz
adc
dec
push
sti
dec
add
fisubs
cwtl
test
gs
sub
sti
xchg
or
xchg
das
sbb
cld
outsb
jmp
stc
mov
outsl
cmpl
stos
lcall
in
and
jo
jmp
pop
xchg
out
xlat
and
push
out
mov
ret
repz
js
push
jp
addr16
nop
jmp
inc
jae
shll
movsl
and
push
lahf
mov
idiv
cmp
sbb
stos
dec
repz
mov
lret
dec
je
jmp
and
add
mov
mov
dec
repnz
in
pop
aad
dec
pop
cltd
add
stos
xchg
hlt
adcl
mov
push
mov
js
inc
fcoml
clc
mov
js
sub
push
arpl
dec
mov
mov
lret
sbb
aas
fisubrl
lods
and
icebp
dec
decl
pushf
jecxz
adc
push
jb
enter
cmp
inc
mov
mov
inc
stc
std
mov
cmovns
xchg
stos
jle
into
sub
dec
std
cmp
sbb
dec
xor
sub
xor
cmp
icebp
lret
jmp
push
bound
mov
gs
testb
outsl
jmp
add
and
xchg
push
cltd
dec
sarb
mov
adc
fists
jmp
add
cmpl
mov
adc
sbb
mov
mov
push
xor
xor
push
into
cmp
inc
mov
or
cmp
int3
inc
mov
aad
push
repz
pop
push
sub
adc
dec
repz
mov
jb
jb
dec
call
sbb
mov
outsl
or
test
nop
jmp
mov
pop
insb
mov
orb
pusha
adc
lds
fisttpl
pop
xchg
ret
in
cmp
xchg
lret
cmc
xor
xlat
std
cmp
or
mov
inc
adcb
pop
mov
pop
movsl
xchg
jns
sahf
cs
popa
popf
or
push
loopne
add
mov
cmc
fdivrl
jno
inc
inc
and
cmp
cmp
cltd
mov
popf
icebp
lcall
js
push
mov
imul
add
sbb
inc
xchg
add
fsubrs
cltd
inc
xor
cmpsl
sub
dec
lret
movsl
sub
fdivrl
pop
fcoml
push
xchg
sub
add
imul
decl
xor
sbb
inc
mov
sub
cs
add
fdivr
adc
mov
pop
add
mov
or
sub
pop
aaa
int
or
dec
sub
loopne
adc
loope
fistpll
pushf
bound
and
dec
outsl
cmp
fadd
imulb
mov
cmpsb
jns
xor
add
or
mov
inc
jle
stos
cmp
les
mov
push
cmp
int3
dec
hlt
push
test
rcll
push
or
xchg
shll
enter
dec
and
in
shl
pop
mov
fwait
cltd
mov
xchg
mov
lcall
cli
lods
stc
ds
push
decb
or
xchg
pop
in
or
add
mov
lret
flds
daa
daa
cmp
dec
insb
repnz
sbb
std
clc
inc
stos
sub
pop
push
je
popa
sahf
test
cli
jp
stos
pop
outsb
mov
mov
pop
test
add
push
jo
into
and
iret
mov
inc
dec
jo
sbb
into
mov
ffreep
xor
jg
or
clc
or
push
jno
orb
xchg
roll
cmc
pusha
mov
mov
int3
push
cld
push
lods
in
repnz
cmpsl
rcrl
int
sar
dec
cmp
aam
add
cmp
push
test
xchg
cmpsb
in
mov
mov
sbb
sbb
jne
ds
lds
pushf
jg
or
rolb
jne
imul
add
xchg
clc
mov
dec
clc
pop
or
and
lcall
mov
cmp
xor
push
and
mov
adc
and
shll
iret
fldt
xchg
mov
jg
xchg
and
addr16
xchg
lds
add
in
pop
imul
sbb
sub
lods
loopne
jns
fdivrl
daa
sbbl
je
xchg
mull
push
fcmovnb
cmp
mov
cmp
pop
push
lods
push
add
mov
vmovupd
cli
testb
in
lahf
add
mov
aaa
cwtl
and
gs
loop
push
mov
xchg
loope
push
divl
test
stc
push
dec
push
xchg
xor
or
in
sahf
push
ljmp
inc
hlt
sub
in
sbb
add
pop
jne
sub
rcll
add
insl
outsl
pop
jge
mov
xchg
add
sbb
shlb
cs
mov
dec
inc
jo
pop
push
dec
xchg
mov
pop
mov
scas
jmp
pop
sbb
add
or
cld
addr16
sbb
cmp
xchg
out
fs
inc
repnz
sbb
add
icebp
pushl
xchg
sub
cmp
rcrl
cld
and
sbb
adc
ss
adc
add
icebp
and
dec
sti
loope
pop
xchg
and
xchg
xchg
cmp
vmovq
sbb
aad
lahf
push
push
rorb
jb
inc
dec
shlb
nop
outsl
mov
inc
pop
pop
dec
cli
movsl
mov
jo
insb
xchg
inc
jnp
out
fsubrs
sbb
inc
or
xchg
cmp
rclb
sbb
leave
add
inc
xor
mov
addb
cmpsl
jp
pop
sbb
or
mov
das
out
or
xchg
roll
daa
int3
insl
mulb
dec
ret
inc
nop
push
mov
adc
inc
cmpb
fldt
mov
cmp
hlt
add
xor
push
pop
lock
inc
fsubs
in
xor
shll
pop
out
insl
pusha
sahf
mov
jg
or
rcrl
cwtl
push
jmp
test
int3
pop
cmp
xor
sahf
push
sub
loop
xor
mov
sbb
or
flds
add
adc
jmp
mov
out
lret
pusha
mov
mov
aas
dec
jmp
add
mov
lea
mov
repz
mov
loopne
daa
popa
push
mov
mov
out
lret
fwait
inc
jo
inc
popf
xchg
repnz
pop
or
insb
sti
outsl
xchg
mov
mov
mov
mov
test
lds
mov
or
cmpsb
mov
or
sahf
shl
insb
xor
leave
out
hlt
cmp
std
pop
mov
daa
push
dec
adc
int3
pop
outsb
popa
cmp
loope
jb
or
adc
sbb
jns
lods
inc
cmc
orl
shrb
mulb
push
mov
cmp
pop
aad
cmp
and
cmc
aam
inc
test
ret
add
clc
pop
pushf
int
dec
mov
aaa
in
mov
dec
adcl
or
and
sub
pushf
dec
mov
pop
out
jns
push
jge
pop
dec
shlb
push
out
movb
enter
xchg
xchg
scas
cmpsb
jnp
in
jno
sbb
jnp
sub
inc
imul
pop
xor
daa
adc
add
jge
insb
fsubrp
repnz
sahf
inc
ss
jle
in
cmp
add
cwtl
cmpsb
sub
push
adc
arpl
jmp
xor
add
and
pop
mov
je
nop
push
int
push
mov
les
cli
popa
test
pop
pop
faddp
pop
int
jb,pt
hlt
insb
xchg
xor
dec
adc
cmp
shlb
cwtl
push
scas
mov
add
test
add
mov
inc
pusha
sub
cmp
mov
mov
mov
mov
repnz
mov
lret
sbb
cmpsb
sarl
sbb
xchg
cmp
adc
insl
mov
fbld
test
test
mov
mov
in
lods
arpl
aaa
jne
add
and
test
pop
mov
fidivrl
loope
leave
inc
push
add
mov
push
sbbb
xchg
cld
mov
lret
xchg
fisubl
arpl
xchg
fidivs
in
leave
mov
out
ja
mov
stos
cld
lret
sbb
mov
dec
in
sbb
or
adc
dec
inc
out
cld
and
inc
push
push
or
stos
xchg
mul
mov
icebp
mov
dec
push
les
sub
rcrl
push
mov
ret
mov
cld
and
adcl
xchg
insl
test
xchg
inc
lods
ret
mov
sub
ror
popf
outsb
insb
xchg
dec
pop
pop
push
and
mov
dec
rol
xchg
xchg
inc
lds
sub
inc
call
les
xor
mov
movsl
cmpb
xchg
gs
in
mov
sbb
fistpll
xchg
mov
dec
lea
xchg
imul
nop
dec
stos
sbbl
sbb
mov
rcrb
mov
testl
dec
or
push
sbb
jmp
out
mov
pop
xor
repz
jnp
out
cmp
and
dec
inc
push
lods
and
shrl
ret
cmpsb
sbb
pop
in
dec
faddl
int
mov
adc
adc
daa
icebp
pop
iret
mov
out
push
cli
aaa
jmp
push
fwait
xchg
sbbb
lods
push
or
sub
sbbl
xlat
sti
mov
daa
pop
sbb
cmpsb
jmp
rcrl
or
dec
cli
cwtl
xor
inc
dec
dec
cwtl
adc
mov
jl
ret
fcoml
xor
pop
gs
jne
pop
inc
jl
xor
push
fisttps
imul
cmp
je
inc
les
cmc
mov
xchg
xchg
arpl
mov
pop
mov
stos
mov
adc
lea
ja
xor
mov
pop
fcomps
adc
cmpsb
mov
fisubrl
and
pop
dec
loope
push
xor
movsb
lret
xor
bound
fs
jb
mov
pop
and
inc
sbb
fstp
insl
mov
cwtl
test
adc
or
or
dec
mov
jnp
sbb
cmp
add
pop
js
or
cmp
inc
imul
push
fs
clc
ss
in
test
aam
repz
pusha
pop
movsl
inc
les
xor
rorl
jmp
popa
push
icebp
bound
int3
mov
sub
mov
xchg
add
mov
adc
mov
adc
popa
or
icebp
mov
jge
jg
sbb
and
dec
mov
repz
fnsave
sbbb
sub
mov
test
or
inc
mov
jb
pop
clc
insl
push
sbb
inc
aam
dec
repz
test
mul
mov
push
shrb
xor
add
jns
mov
and
movsl
inc
push
inc
daa
movsb
loop
lret
fisubs
sbb
test
ja
jecxz
mov
imul
mov
fwait
into
lret
aad
das
add
xor
add
sub
sbb
push
xor
nop
cmp
sarl
outsb
push
pop
ljmp
dec
loopne
les
bound
sub
lock
and
sub
aas
push
aaa
and
ljmp
push
dec
adc
lret
cmp
loope
lock
out
mov
mov
and
loopne
orb
sti
push
fs
movb
mov
aas
idiv
pop
pushf
dec
dec
jae
test
xor
adc
into
jmp
arpl
pop
pop
fists
insb
enter
icebp
mov
push
or
mov
sub
or
rclb
adc
mov
movl
mov
add
repnz
fisttps
pushf
add
data16
mov
nop
inc
addr16
imul
mov
idivl
sbb
jae
push
jb
and
pop
cmp
cli
movsl
pop
out
mov
jp
repz
xorl
sbb
mov
jne
add
jns
xor
inc
or
and
push
lea
adc
mov
inc
in
pop
sub
jns
in
mov
aaa
dec
idivl
mov
adc
cli
jae
in
adc
pop
cmc
and
lods
test
int
mov
rcrb
cmp
dec
imul
xor
add
push
aam
inc
ds
imul
jns
jge
scas
repnz
pop
sbb
enter
gs
mov
cltd
dec
jl
push
mov
sbb
clc
ja
enter
or
sbbb
aaa
adc
mov
push
mov
xor
mov
fnstsw
pop
lock
xchg
xchg
clc
and
push
es
ret
sarb
inc
mov
test
dec
jo
jo
addr16
adc
xor
sbb
sbb
or
cwtl
cmp
sub
add
int
imul
push
adc
push
adc
ds
loope
dec
mov
mov
or
test
push
push
call
xchg
into
pusha
clc
fdivr
sbb
pop
pop
mov
adc
ret
mov
adc
aas
jbe
mov
test
ret
andb
loop
test
push
xchg
dec
test
std
ret
popf
sbb
scas
mov
sub
sti
fidivrl
mov
or
cmp
std
jne
daa
push
hlt
or
data16
rcll
sbb
lock
inc
add
addr16
test
outsb
mov
dec
jmp
fwait
int3
inc
stos
xchg
ficoms
daa
iret
mov
cmp
in
pushl
std
sbb
rclb
or
push
lret
inc
into
fdivs
shl
cli
out
jp
pop
jl,pt
push
inc
leave
lret
aaa
pop
shlb
call
mov
mov
lods
cltd
jnp
ret
subb
lcall
les
fwait
lret
mov
sub
add
icebp
mov
je
mov
daa
lret
xchg
inc
sbb
and
mov
fwait
xchg
sti
testb
ljmp
push
pop
je
stc
mov
fisttps
sahf
das
test
and
out
mov
or
add
mov
mov
mov
into
rcrb
sbb
sbb
scas
sbb
out
mov
nop
fisubl
or
fwait
es
insl
cmp
adc
push
outsl
loope
repnz
push
fsubs
cwtl
sbb
and
and
inc
mov
movsb
cmp
and
xchg
push
push
jno
leave
dec
sbb
jp
icebp
in
ds
outsl
mov
fcomip
js
jmp
mov
pop
pop
loopne
lcall
dec
loop
inc
xchg
scas
jl
push
loopne
mov
icebp
lods
and
mov
gs
lock
mov
fimuls
jb
dec
and
jmp
xchg
repnz
sub
scas
pop
mov
daa
pop
push
pop
das
pop
leave
xor
shrb
xchg
add
cmp
cmp
pop
lods
das
ret
sub
inc
rol
sub
rcrb
je
mov
mov
sub
sbb
stos
xchg
cmp
inc
dec
xor
ja
sbb
iret
pop
mov
ret
clc
pop
loop
pop
push
or
xor
push
add
nop
mov
loopne
iret
xchg
aam
add
aad
or
jae
bound
in
data16
jo
or
add
idivb
ret
mov
xchg
jae
inc
jge
push
dec
in
ljmp
push
inc
cmp
xor
hlt
addr16
fisttpll
dec
xchg
std
repnz
in
mov
mov
nop
mov
jbe
not
pop
fists
jae
add
out
jle
fidivs
inc
mov
mov
xor
mov
aaa
lret
mov
mov
fistl
jp
aam
sbb
mov
insl
mov
xorl
pop
stos
dec
mov
cli
xor
imul
jp
mov
in
pop
aam
js
hlt
lock
pushf
inc
hlt
jne
adc
out
push
sub
mov
jmp
fcompl
pop
mov
mov
fidivl
jo
mov
mov
pop
xchg
ret
jns
cmp
aad
adc
in
aad
hlt
mov
adc
mov
push
cmp
mov
push
jp
and
mov
add
rolb
push
pusha
mov
inc
mov
dec
lahf
xchg
call
push
ret
and
rcll
lcall
jne
or
shl
rorb
call
outsb
and
movsl
pop
data16
or
lcall
cltd
arpl
xchg
into
add
xchg
jmp
jbe
dec
js
aas
pusha
pop
bound
sbb
outsl
cmp
mov
lea
push
jno
mov
adc
paddb
mov
mov
shl
lahf
fsubr
daa
push
push
mov
pop
ss
out
lods
adc
xor
test
pop
push
ss
ret
out
inc
or
aaa
jne
aam
sub
dec
les
aas
in
fadds
cmpsl
imul
lea
jmp
mov
or
dec
clc
and
mov
mov
es
mov
lock
push
inc
sub
pop
outsb
adc
popa
mov
dec
mov
xchg
pop
cmc
inc
lcall
int3
push
hlt
in
clc
or
or
jne
loopne
push
jo
mov
lods
fbstp
adc
int3
aad
mov
jg
fisubl
cmp
movsb
mov
cmp
cmp
jmp
cmp
std
inc
add
pushf
sbb
inc
push
pop
pop
mov
xor
jl
push
or
repnz
xor
push
int3
bound
in
cmp
stos
push
pop
dec
push
mov
push
mov
push
cmp
jnp
cmp
xor
fwait
ret
inc
push
movups
in
das
add
mov
cld
mov
aas
insb
ds
lock
dec
out
jae
jl
jp
incl
pop
hlt
push
sub
rorb
add
inc
mov
mov
mov
xchg
dec
scas
lods
add
xchg
or
mov
sahf
jl
loop
xchg
int
push
push
test
nop
imul
fwait
data16
inc
sbb
push
jecxz
lahf
jae
sub
sti
out
in
out
rorb
int3
mov
add
push
mov
inc
lahf
and
test
cmpsb
addr16
or
aaa
lods
mov
push
push
add
add
mov
or
clc
xchg
popf
lahf
ror
ljmp
in
mov
fld
lods
cwtl
std
sub
hlt
pusha
add
add
inc
mov
mov
adc
cmp
sub
sub
push
movsl
aad
sarb
or
pushf
pop
outsl
jl
mov
mov
mov
pop
addr16
xchg
push
mov
mov
ret
mov
rolb
cmpsb
sbb
jnp
outsb
aas
xchg
mov
dec
imul
mov
lock
and
pop
int
sbb
pushf
fwait
addr16
dec
mov
stos
imul
into
add
cli
and
outsb
lcall
mov
mov
inc
and
sahf
cmp
adc
jnp
frstpm(287
imul
adc
pop
and
incb
repnz
dec
cltd
rorb
bound
or
and
bound
lods
add
sub
dec
dec
outsb
test
jl
hlt
repnz
and
fcomi
repz
sub
es
add
sbb
loopew
movsl
push
movsl
adc
inc
inc
call
xor
add
ret
jae
pop
shrb
jg
xchg
add
jnp
and
mov
adc
gs
xor
popa
lahf
mov
lods
sub
fiadds
cmp
sub
stc
movsl
jnp
mov
sub
jbe
mov
sub
iret
loopne
xchg
pop
mov
aaa
cmp
push
push
dec
mov
ficomps
sub
rolb
push
pop
cmpsl
imul
jmp
cmp
out
cmp
or
mov
jns
sbb
mov
dec
add
xor
push
cmc
or
inc
dec
jbe
imul
add
add
test
mov
pop
add
cmp
in
pop
sub
inc
adc
lret
push
push
jg
scas
aas
mov
add
pop
push
cmp
cmp
int
and
fdivrp
ret
push
and
out
enter
stc
arpl
loopne
mov
sbb
js
lret
enter
ret
sub
xlat
mov
cli
cmpsl
test
xchg
test
xor
sbb
push
jmp
bound
stos
cmp
sbb
and
popf
call
sub
xor
pop
sbb
pushf
jae
mov
push
or
mov
sarl
mov
cmp
aaa
jge
adc
shl
xor
lret
clc
icebp
orb
pusha
ds
testl
daa
dec
cmp
lods
fbstp
loopne
jl
add
fndisi(8087
popf
sub
push
mov
addl
dec
bound
mov
pop
ret
add
sbbl
and
xor
and
sbb
enter
xor
cmp
mov
loope
mov
out
mov
movsl
pop
shl
adc
shll
mov
jae
lods
outsl
xor
in
xchg
jl
or
insb
adc
iret
mov
xchg
popf
sub
jp
adc
or
inc
out
pop
cltd
mov
push
xlat
rorl
pop
jge
and
push
or
sbb
and
leave
xor
scas
int3
lahf
pushf
xchg
pop
inc
icebp
icebp
popa
pop
lahf
in
fadds
fldcw
jmp
je
push
pop
mov
add
std
or
dec
movsl
adc
adc
mov
mov
fmuls
push
repz
mov
push
fistl
sbb
or
leave
into
mov
sub
adc
or
jp
jbe
ficompl
or
push
xchg
or
xor
jnp
mov
sub
and
cmp
stc
nop
test
ljmp
test
adc
inc
mov
icebp
cmp
inc
daa
or
pop
dec
mov
mov
enter
fcoml
or
out
es
mov
aaa
xor
inc
xchg
dec
jmp
inc
fmul
scas
or
popf
push
and
pop
movsb
dec
jg
push
and
and
nop
push
dec
addr16
or
scas
ljmp
add
mov
xchg
cmp
cs
pop
add
data16
into
inc
iret
mov
add
imul
ss
cmp
mov
test
in
notb
shrb
xor
cmpsb
ret
lret
fsub
out
loop
test
mov
in
mov
lock
in
or
lahf
xor
push
bound
sub
and
ret
lods
mov
ror
aad
lret
inc
jno
xchg
pop
adc
lea
pop
xchg
mov
popf
push
rcrb
jp
stos
mul
iret
leave
mov
das
lahf
rcrl
fisttpll
sahf
lret
cmpsl
xor
add
negl
gs
test
jle
xor
sub
insl
sbb
add
addr16
adc
push
push
pop
inc
clc
sub
pop
test
pusha
fwait
les
mov
out
mov
mov
and
insb
imul
scas
xchg
cli
cmp
addb
out
jns
cmp
test
sub
in
jo
dec
xchg
int
gs
push
jbe
mov
sbb
fwait
jne
icebp
ds
xor
incl
aad
xchg
push
dec
sub
pcmpeqw
mov
test
sbb
adc
adc
pop
jmp
lcall
divb
das
dec
das
adc
sbb
lret
lods
enter
out
fndisi(8087
dec
cmpsl
adc
jo
xor
or
inc
mov
shl
cmpsl
push
fisubs
popfw
pushf
adc
cmp
dec
scas
add
xlat
sbb
push
jne
sar
pop
mov
sub
or
sbb
inc
adc
in
aas
xlat
in
adc
lcall
stos
jns
popa
scas
add
cmp
inc
jmp
push
cmpsl
and
mov
lret
inc
push
xchg
loop
ds
cmp
data16
lret
and
push
mov
lret
xchg
mov
xchg
pop
hlt
dec
movsl
adcb
jge
dec
stos
push
imul
in
sub
ja
dec
imul
shl
mov
pop
lcall
fwait
hlt
mov
ja
fsubrs
das
lret
hlt
xor
xor
adc
or
rcrl
scas
pop
inc
push
sub
xchg
into
sub
js
pop
fsub
fimuls
mov
add
push
cmp
push
stc
and
sub
in
jecxz
xor
cld
ljmp
push
sbb
mov
or
xchg
cmp
loopne
shrl
inc
shrb
push
xor
ds
test
and
loopne
test
outsl
xchg
push
mov
hlt
xor
lea
and
cmp
sar
inc
jle
jg
das
xchg
adc
mov
pop
lret
jmp
mov
dec
gs
mov
aas
int
xchg
xor
clc
ret
test
sub
rcr
fistl
hlt
push
repnz
adc
push
icebp
arpl
mov
aad
sbb
scas
jne
rcr
add
in
insb
mov
negb
ret
xor
fdivrl
jge
cmc
rolb
fisubrs
fnstcw
test
or
in
mov
test
push
scas
dec
mov
rclb
adc
arpl
add
xor
sbb
push
jl
in
lock
imul
lock
jmp
lea
je
out
push
xchg
mov
cli
jl
movsb
jge
mov
subb
pusha
lcall
jno
lock
dec
hlt
stc
stos
adc
xchg
in
aam
pop
je
cltd
mov
inc
sbb
push
fnsave
icebp
test
xorb
mov
aad
xor
insl
cmp
sbb
aas
jne
mov
movsl
jmp
mov
mov
mov
lock
orl
sbb
rcrl
ficoml
jg
shrl
dec
mov
hlt
push
repz
cmp
fisttpl
notl
push
dec
xor
mov
lock
pop
cmp
outsl
lods
xchg
mov
mov
movsl
bound
jge
ret
push
or
push
pop
dec
mov
jb
cltd
int3
lock
xchg
pop
pop
pop
ljmp
out
leave
cmp
fbstp
xchg
lahf
push
dec
jge
mov
cmp
push
in
lds
cmp
icebp
sbb
jle
push
xor
jns
loope
mov
shl
mov
cmc
adc
das
mov
sbb
dec
aam
cmp
jb
adc
outsb
scas
xor
js
aad
subl
xchg
imul
aam
mov
leave
jns
jno
or
cs
int3
push
add
popf
aaa
adc
cmp
repnz
aas
push
push
repnz
mov
mov
jge
dec
daa
rorl
mov
std
and
mov
cltd
jo
js
jno
sbb
and
iret
adc
test
cmp
aaa
outsb
and
xchg
aad
push
out
hlt
or
cli
push
push
div
inc
xchg
cmp
movsb
notl
sub
movsl
or
test
cmp
inc
aaa
jb
leave
mov
cmp
jbe
orl
or
popf
pop
arpl
or
add
mov
add
repz
mov
call
jae
test
pop
add
sbb
mov
push
adc
test
lock
push
test
sbb
addr16
repz
lea
inc
inc
je
hlt
add
jae
rcll
outsl
lds
fucomp
or
addb
mov
add
notl
daa
gs
dec
mov
rorb
pushf
test
and
fisubl
mov
cmp
push
mov
push
lods
ljmp
fistpll
xchg
xor
cmpsl
ret
rclb
mov
dec
call
sti
push
xchg
jg
xchg
fbstp
stc
lret
adc
inc
mov
push
jbe
inc
adc
lds
mov
icebp
rolb
mov
hlt
adcl
mov
jbe
popf
das
sub
es
sub
sub
out
sub
cmp
aas
dec
adc
arpl
jle
cs
jbe
xchg
push
and
push
daa
int3
xchg
popa
inc
bound
out
xchg
push
dec
nop
pop
int
testb
inc
mov
pop
xor
push
inc
sub
cmp
clc
adcb
iret
mov
push
xor
push
xor
orl
mov
push
iret
push
xchg
rorb
movsl
cmp
pop
test
push
dec
inc
les
nop
mov
mov
jle
dec
and
inc
dec
sub
dec
pop
dec
push
movsl
int
jbe
lds
loopne
xchg
adc
addr16
movb
adc
mov
xchg
push
std
scas
ret
mov
jmp
adc
sbb
push
mov
dec
repz
js
cwtl
fistpl
lahf
sbb
idivb
dec
leave
jmp
sub
lea
pop
aas
int
dec
mov
ret
xchg
push
mov
mov
insl
cltd
xchg
faddl
rclb
adc
pop
sub
sbb
adc
adc
xor
adc
sbb
cwtl
scas
jle
ret
sbb
pop
or
loope
xlat
inc
vpmullw
push
cltd
cmc
dec
jmp
and
xor
bound
rcr
imull
lret
pusha
mov
shl
lea
sub
mov
into
cmp
mov
mov
cmp
int3
clc
ficoml
and
sti
sbb
lods
test
out
xchg
mov
lods
jbe
mov
inc
popa
and
cld
sbb
insb
or
into
mov
cmp
faddl
push
xchg
scas
sbb
mov
mov
aas
xor
cmpsb
xor
or
lock
and
test
dec
jns
pop
cmpsb
and
add
push
jl
inc
test
pop
icebp
scas
outsl
sbbb
xchg
ljmp
dec
ljmp
mov
int3
cmpsl
pop
loope
aaa
daa
or
xor
test
aas
add
cmp
jmp
imul
pop
shll
sbb
fmuls
push
repnz
inc
jle
fwait
xchg
mov
rcl
stos
dec
sub
push
into
jne
lret
fs
les
call
stos
xlat
aas
sarb
stc
loopne
sub
into
sbb
jl
mov
jmp
fcmovnb
pop
mov
or
int3
xor
mov
dec
jp
loope
fildl
mov
repnz
and
xlat
jnp
inc
aas
xor
es
mov
mov
inc
int
mov
ljmp
dec
hlt
add
data16
pop
pop
dec
sub
push
pop
lahf
xrelease
inc
orl
push
hlt
or
movsl
jge
or
push
jne
pop
mov
mov
rcrb
xor
mov
fsubrs
stos
xchg
xor
lds
inc
fstl
arpl
push
lret
cmp
sbb
test
jne
sub
jg
dec
mov
cli
fistpl
push
jp
inc
int3
loop
sbb
scas
les
ret
sbb
fnstsw
scas
arpl
aam
ret
mov
inc
cmp
scas
mov
sub
jle
imul
addl
aad
enter
push
push
mov
and
push
imul
loope
pop
std
testl
xchg
pop
mov
or
dec
jne
sub
int3
std
mov
pop
cmpsl
xchg
xchg
data16
or
and
sahf
jnp
push
add
mov
outsl
cmp
push
sahf
pop
lcall
loopne
sub
mov
cmp
cmpsb
roll
mov
sbb
cmp
outsb
jmp
test
rclb
pusha
pop
les
icebp
sbb
sub
daa
shrl
fidivs
pop
add
xrelease
aas
lods
loopne
mov
loopne
mov
cmpsl
xor
xchg
cmp
pop
scas
sub
fildll
aad
and
sbb
stc
xchg
cmp
xor
daa
adc
je
stos
int
jmp
inc
leave
out
jo
dec
in
xchg
xchg
pop
test
lods
pop
push
cmpsl
add
lea
in
push
bound
lret
es
cmp
xchg
mov
push
jnp
fdivl
and
cmc
lea
lds
popf
in
out
loop
arpl
adc
hlt
mov
push
fisttps
mov
stos
sub
pop
dec
xchg
jb
lock
out
adc
mov
jl
add
push
idivl
movsb
sbb
pop
mov
enter
test
adc
xor
push
xchg
stc
adc
lds
mov
mov
pop
pop
and
mov
hlt
push
mov
mov
push
add
sbb
loopne
push
mov
fiaddl
add
xor
push
popa
xchg
rclb
xchg
inc
sbb
mov
mov
test
cwtl
push
and
rcll
mov
push
dec
fcmove
sub
mov
mov
hlt
jns
jno
sub
movsl
adc
scas
es
xchg
lcall
arpl
cmp
and
lcall
aad
xchg
jo
mov
push
or
jbe
push
repnz
jo
push
or
sbb
sbb
jbe
ret
push
push
inc
test
and
movsl
aaa
es
gs
mov
les
xchg
lcall
sahf
adc
xchg
and
add
int
cli
sbb
ret
cmp
or
add
sub
push
lods
sbb
cltd
cltd
sub
outsl
into
iret
jmp
add
imul
xchg
jmp
sahf
push
jg
push
in
jl
inc
mov
jle
fbld
outsb
lds
ss
pop
or
adc
add
jl
add
sbb
pop
jecxz
xor
cmp
add
and
arpl
leave
jg
fwait
mov
dec
pop
ret
lret
cmp
inc
insl
loopne
and
lahf
rcrb
mov
xchg
or
inc
mov
adc
mov
adc
and
jno
push
xor
es
rorl
or
cli
scas
mov
lret
jno
lea
lods
stos
sub
xorb
sbb
jl
and
jl
repz
pop
xchg
into
loope
cltd
dec
lahf
cmp
arpl
adc
push
push
mov
imul
imul
fcomps
into
mov
xor
mov
rolb
mov
orl
loope
mov
outsb
sbb
push
and
stos
mov
lock
test
xor
mov
rcrb
stos
and
cltd
mov
adc
mov
xchg
cmc
aad
or
mov
stos
mov
mov
mov
mov
adc
shl
dec
arpl
cmp
mov
adcb
imul
mov
sub
pop
dec
mov
pop
mov
hlt
push
test
mov
fidivs
mov
pushf
test
sbb
inc
pushf
inc
pop
push
dec
sub
lcall
or
and
cmp
cmp
cmc
push
mov
jle
insb
leavew
sbb
xchg
mov
push
cmp
cmp
cmp
pop
cwtl
out
mov
movsb
mov
and
push
loope
loop
arpl
cmp
add
xchg
mov
xor
mov
sahf
push
mov
inc
inc
sub
cmp
push
and
inc
stos
aad
andb
mov
lds
mov
je
fistl
pop
push
inc
imull
cltd
dec
cli
mov
cmp
das
mov
pop
into
lahf
and
and
xchg
cmpsl
popf
test
orl
in
mov
add
scas
int3
pusha
js
push
jge
pop
aad
mov
jno
and
jge
mov
inc
dec
in
test
xor
jmp
popf
jno
inc
std
sbb
push
jae
pop
mov
sbb
cmpl
adc
out
push
jg
shlb
mov
push
fnstenv
jb
sub
pusha
mov
pop
xor
jmp
xchg
jno
nop
push
into
jp
imul
in
or
fs
mov
pop
cmpsl
jl
int
push
int
adc
push
jecxz
inc
jne
enter
mulb
dec
mov
stos
fnstsw
pushf
jle
mov
xchg
in
fimull
xor
mov
testl
inc
pusha
les
rorb
loop
in
dec
mov
xchg
push
dec
inc
in
dec
arpl
mov
or
test
or
in
je
sbb
jl
imul
pop
pop
lods
or
inc
mov
jbe
sub
xor
fsts
aad
mov
inc
push
pop
sbbb
aas
jnp
jne
lea
outsb
fiadds
xor
push
push
cmc
and
cltd
iret
xchg
xor
xchg
ss
pushf
rclb
rcrl
ljmp
mov
jp
cltd
jp
scas
mov
mov
rorb
loope
sbbb
out
sbb
jp
insb
movsl
lods
mov
fs
and
lea
ja
loope
arpl
jmp
dec
rol
fimull
jns
sub
mov
cmp
pop
push
fmulp
je
cmp
lods
inc
dec
test
xor
mov
mov
or
or
std
mov
push
sbb
repz
int
lea
mov
cmp
lods
fs
lret
jne
push
test
mov
aam
push
test
in
jle
mov
psllw
lods
xchg
jo
pop
gs
dec
xchg
loope
in
cltd
into
mov
adc
iret
sbb
movsb
jecxz
pop
fs
cs
cmp
pop
fnclex
add
push
mov
or
xchg
cmpsl
fisubs
es
mov
aas
push
movsb
jp
mov
out
sub
dec
lret
xor
push
cmp
pop
mov
push
mov
jae
adc
ljmp
and
adc
inc
jmp
xchg
cmp
lss
push
sbb
cltd
notb
stc
mov
mov
or
push
sub
lds
jns
xor
pop
sub
lcall
pop
mov
mov
movsb
test
mov
lea
xchg
and
sbb
and
cmp
pop
notl
aaa
mov
mov
cmp
ficoml
dec
xchg
push
xor
daa
xchg
push
mov
pop
jmp
pop
sub
sub
lret
scas
sub
js
test
icebp
shlb
xchg
or
jae
dec
cmpsb
inc
jo
jle
or
sbb
or
mov
mov
nop
je
jae
and
mov
xchg
lahf
dec
xor
xchg
sub
dec
push
sub
cmovle
sbb
movsl
test
rcll
dec
sub
adc
mov
icebp
leave
stc
repz
xchg
xor
aaa
push
cld
js
sub
or
fs
pop
jae
repz
mov
js
negb
in
pop
ljmp
dec
xor
test
lds
arpl
loop
xor
xor
push
pushf
add
outsl
jecxz
out
rorl
enter
pop
push
nop
stos
sub
xor
rclb
lret
iret
and
cmp
mov
sub
pop
mov
insl
pop
mov
cmpb
sti
sub
add
jmp
iret
into
or
loop
dec
repnz
xchg
xchg
xchg
push
cli
push
cli
and
stos
and
push
jnp
sbb
out
sahf
or
pop
mov
fiadds
push
inc
and
sbb
hlt
iret
pop
inc
mov
cmp
and
aad
and
inc
mov
jb
bound
outsl
insl
mov
adc
dec
push
in
or
pop
and
adc
test
xchg
lods
jge
test
push
jmp
scas
les
hlt
xchg
ja
sbb
lods
outsb
sbb
std
dec
or
jmp
ds
and
loopne
ficoml
cmp
sbb
lahf
jb
clc
push
sub
outsl
mov
fadds
inc
jbe
sti
pushfw
cs
sub
sbb
dec
jae
movsb
std
loope
push
fdivrl
push
and
xor
xchg
adc
test
jl
mov
mov
adcb
test
leave
add
add
or
dec
xor
add
rcr
shl
lcall
sbb
mov
jge
test
in
jmp
xchg
stc
fimuls
sti
xchg
xchg
std
xchg
jb
sub
sub
cmp
scas
push
and
sbb
or
mov
inc
lods
xor
mov
lock
jns
mov
jae
lods
add
scas
add
gs
xor
pop
push
unpckhps
mov
movsb
jg
rcll
rcll
mov
mov
roll
fldcw
pop
std
loop
gs
mov
inc
xchg
sbb
and
adc
jbe
cmpsl
pop
cli
dec
cmp
sbb
cwtl
and
xchg
rcrl
jo
push
popf
xchg
scas
push
outsb
sub
xor
scas
cmc
xchg
mov
ja
aas
sub
jnp
ret
sbb
push
je
and
sbb
in
mov
mov
outsl
jg
sbb
push
sbb
lock
sbb
pop
dec
xchg
pop
loop
andl
push
push
or
inc
loopne
repz
mov
mov
ficoms
dec
pop
sub
and
push
pop
fucomip
mov
scas
pop
mov
movq
and
aad
xchg
sub
cmpsb
movsl
mov
jecxz
bound
mov
popf
and
add
push
add
lea
dec
fldl
push
in
lcall
test
in
cmp
sbbb
flds
and
nop
ds
scas
int
std
xorb
cli
popa
scas
xor
push
jae
clc
xor
repz
sar
mov
fadd
mov
or
add
pop
int
mov
jb
jb
mov
pop
mov
jbe
scas
add
daa
inc
or
dec
xor
shll
test
xor
sahf
mov
aad
jge
stc
sbb
imul
inc
dec
inc
out
mov
cmp
cmpsb
test
mov
shlb
scas
mov
leave
dec
sbb
push
mov
inc
jle
xchg
loope
inc
or
pop
mov
cwtl
jo
xchg
insl
cmc
fwait
sbb
out
inc
addr16
pop
ds
jecxz
mov
loopne
adc
call
lret
out
push
or
adc
cmpsl
stc
sbb
dec
mov
mov
dec
mov
mov
sub
rcrb
add
jns
pop
dec
movsl
in
push
dec
movsb
xor
inc
sub
adc
lcall
mov
aaa
imul
sbb
sbb
cmp
and
mov
mov
movlhps
xchg
jge
mov
xchg
insl
jle
shrl
jne
imul
fs
adc
mov
mov
dec
test
mov
pop
push
scas
addb
cld
int3
loope
jecxz
scas
daa
mov
mov
les
jne
scas
sub
pop
xlat
jbe
ror
cltd
cmc
jmp
push
icebp
loopne
cmp
cmpsl
out
lods
lea
into
test
adc
imul
imulb
sbb
mov
inc
lcall
dec
mov
popf
mov
pop
push
mov
inc
dec
rcrl
push
xor
cmp
test
orl
xor
rol
mov
mov
pop
sarl
out
mov
jl
adcb
sub
scas
jle
add
pop
jnp
ret
es
inc
mov
sbb
push
xchg
cmpsl
lea
test
xorb
sbb
mov
in
cmp
testl
sub
dec
or
mov
pop
push
xlat
mov
or
dec
add
adc
or
or
jbe
imul
ret
add
or
jnp
cmp
and
lods
loope
inc
lock
jmp
push
push
add
cmp
lret
jp
mov
mov
hlt
pop
sub
xchg
xchg
test
idivl
inc
lret
mov
outsl
pushf
adc
sbb
pop
and
jle
mov
or
std
into
loopne
loopne
aaa
xchg
sarl
sahf
popf
mov
jmp
inc
xor
mov
inc
pop
movsl
mov
arpl
and
sbb
push
arpl
xchg
mov
pop
or
stc
mov
andb
mov
push
jae
inc
jge
test
push
push
adc
sub
rcl
mov
mov
fstpl
xchg
insb
out
fdivs
sub
mov
jns
jg
push
arpl
rcrl
test
or
repnz
adc
pop
iret
pop
scas
fcomp
popa
fwait
xchg
frstor
xor
gs
pop
add
loop
push
pusha
jb
ficoml
clc
repz
fldcw
daa
dec
lea
ret
or
xchg
add
or
jmp
leave
js
cmp
popa
dec
push
and
xchg
push
jae
mov
jae
mov
cmp
pop
cmc
jns
inc
inc
icebp
lods
mov
sub
out
js
jmp
aam
in
add
imul
xor
fisubs
insb
faddp
push
je
push
fistl
es
ds
push
lret
ret
dec
loopne
data16
mov
mov
xlat
jmp
cmc
rcrl
call
ret
add
mov
loopne
mov
dec
gs
and
ret
fists
adc
mov
fs
or
out
pop
pop
pop
je
lock
mov
rolb
add
ss
scas
or
adc
mov
test
jg
outsb
loopne
add
sub
adc
fsubr
sbb
xor
mov
mov
dec
popf
sub
push
or
xor
jo
outsb
ss
cli
cmpsl
fimull
add
pusha
aas
sbb
into
add
inc
test
ljmp
jle
push
sti
inc
push
cmpsb
lods
add
sbb
inc
out
pusha
mov
pop
fistpl
mov
pop
xchg
adc
out
movsb
dec
xchg
adc
push
dec
stc
add
jne
jp
stos
mov
shlb
or
xor
mov
psubd
pop
or
rolb
fidivrl
pop
dec
xchg
orl
xchg
mov
push
mov
push
mov
inc
int3
daa
xor
cli
out
sub
add
xchg
mov
lret
in
ret
xlat
ja
arpl
fs
movsb
adc
dec
mov
les
xchg
dec
in
lret
and
testb
sbb
mov
pop
in
ss
pop
adc
pop
xorl
pop
sub
xchg
popa
sbb
mov
mov
jp
and
lods
dec
cltd
sub
pop
cvttps2pi
xor
push
mov
inc
stc
clc
cmp
test
xchg
mov
pop
sub
mov
lret
imul
or
sbb
out
push
sub
in
arpl
xchg
nop
mov
test
movsl
fcmovnb
or
push
xor
jns
out
shll
loopne
and
jnp
inc
lret
outsl
sbb
and
nop
mov
cmp
repnz
xchg
mov
inc
pop
mov
outsb
xor
jne
ret
sti
pop
inc
push
bswap
sub
inc
xchg
xlat
jb
aas
dec
jp
fnstenv
loopne
cmp
hlt
popf
jne
test
push
negl
rol
push
add
js
mov
scas
addb
aam
pop
inc
mov
repz
dec
and
ror
jl
mov
jns
lret
mov
jecxz
ds
xchg
dec
mov
sbb
and
int
and
sbb
sub
add
stos
sub
clc
rcrb
push
mov
jle
pause
mov
and
push
bound
jp
xchg
ljmp
adc
pop
sbb
xor
sub
sbb
push
ds
pop
mov
call
mov
jbe
sbbl
data16
cmpsb
xor
mov
inc
popf
loope
lcall
mov
cmpsb
mov
test
cmp
adc
addl
jl
add
mov
mov
fidivrl
test
add
fnstsw
push
inc
mov
or
lods
outsb
ret
rcll
adc
xchg
push
mov
pushf
and
mov
mov
cmp
int3
dec
add
fwait
out
movsb
pop
inc
jmp
in
xor
mov
pop
lock
dec
push
testl
or
in
cltd
lret
iret
mov
mov
jp
pushf
cli
dec
imul
sbb
push
push
stos
scas
dec
or
frstor
push
aad
nop
shl
and
lahf
out
lahf
or
pop
push
enter
and
sub
xchg
test
cmp
and
ret
shrb
push
sub
shrl
push
or
clc
xor
push
es
xchg
fnstenv
add
popf
inc
cmpsb
arpl
repz
add
negb
outsl
inc
sub
test
ss
and
ret
mov
sti
clc
mov
adc
add
cmp
mov
and
push
repz
sbb
xchg
add
pop
jecxz
loop
jmp
repnz
mov
jne
fbld
pop
inc
and
rorl
push
call
insl
arpl
mov
push
pop
test
mov
mov
pop
mov
push
inc
mov
test
or
or
iret
push
mov
test
jg
insl
mov
call
sti
addl
ds
sbb
lea
std
adc
or
mov
and
or
cmpsl
jp
lods
hlt
xchg
mov
mov
push
mov
es
inc
push
mov
fcoml
jmp
test
cld
jmp
aad
clc
jns
adc
inc
xchg
jae
adc
es
xor
dec
std
rcll
fcompl
in
sbb
xchg
sarb
ficoms
repz
xchg
shlb
mov
cmpsb
xor
les
hlt
popa
out
aaa
sbb
sbb
xor
inc
add
addr16
dec
test
pop
sub
repz
mov
scas
cmc
push
mov
aaa
cli
inc
test
xchg
sub
ja
cmp
jmp
adc
lds
push
faddl
imulb
add
push
sbb
mov
push
or
mov
xlat
das
mov
sarl
inc
aam
std
push
mov
mov
loope
test
sbb
adc
add
sbb
dec
xor
mov
mov
cld
xor
mov
push
idivb
mov
mov
mov
arpl
aaa
add
xor
sub
addr16
xchg
or
mov
adc
lds
lds
mov
leave
mov
sbb
fisttpl
dec
jae
je
mov
mov
sub
adc
jae
and
popl
ds
in
icebp
mov
mov
shl
cld
pop
xchg
pop
cmp
cli
bound
dec
fisttpl
pop
in
adc
in
loopne
ret
call
iret
cmpsb
out
ljmp
stc
out
pop
test
inc
mov
fsubs
outsl
inc
loopne
dec
lods
push
xchg
cltd
aad
test
clc
das
fisubrs
test
dec
notl
dec
add
cmp
out
out
scas
fsubrs
jp
xchg
fsub
ds
dec
jle
sbb
ja
out
dec
pop
mov
rclb
mov
sub
daa
hlt
ret
jl
dec
and
cwtl
xchg
and
ficompl
fsubs
jle
or
out
pop
dec
push
out
outsb
aaa
lds
je
roll
cmp
addr16
pusha
jle
aam
or
pop
pop
cmp
push
or
push
inc
xchg
mov
je
mov
xor
scas
jo
aaa
cmp
and
sbb
pop
mov
xchg
cwtl
popf
push
test
pop
dec
fisubrs
push
fwait
cmp
inc
cmp
fs
jp
shlb
loopne
sub
mov
sub
mov
cmpsb
imulb
icebp
push
sub
or
push
mov
fdiv
mov
adcb
cmp
pop
xchg
sbb
pop
or
sub
cli
jp
or
mov
fistps
jg
shlb
je
daa
movsl
and
dec
and
mov
loopne
stos
push
lret
xlat
push
add
sub
out
jecxz
js
and
insb
adc
outsb
sub
movsb
inc
pushf
jg
les
loope
inc
push
outsl
ljmp
xchg
push
dec
mov
or
test
sbb
jo
cwtl
push
rcr
cmp
rolb
das
and
testb
add
imul
hlt
inc
ljmp
insl
jb
das
les
jbe,pn
aaa
push
ret
rcrl
sahf
pop
push
xchg
adc
addr16
xchg
fildll
mov
push
jp
test
dec
fimuls
pop
shrb
fadds
mov
push
mov
loop
add
inc
mov
dec
cmp
jno
push
cmp
out
fstl
pop
mov
or
lds
dec
sub
fldcw
xlat
out
subl
dec
push
cmpsb
daa
inc
sub
or
rorl
sub
sarl
lock
sub
push
outsl
or
lret
sub
lret
mov
aas
fsubp
xchg
push
mov
scas
pop
dec
movsb
cwtl
cmp
popf
xor
or
aam
mov
ror
in
lods
scas
stos
and
aaa
aad
mov
dec
adc
lret
cmp
or
jne
adc
pop
sub
inc
ja
mov
out
mov
jmp
jo
push
andb
xor
pop
cmc
stos
mov
fidivrs
push
jp
jne
sub
ja
shlb
hlt
add
jecxz
xchg
push
sahf
mov
mov
std
bound
jmp
mov
xor
inc
orps
push
inc
push
mov
sti
sub
int3
ret
push
lahf
jnp
lret
das
imul
xchg
pop
test
addl
pop
mov
nop
xchg
ja
subl
dec
imul
test
outsl
mov
lahf
xor
loopne
int
push
mov
jge
test
xchg
sarb
lcall
stc
pop
bound
cwtl
sbb
call
sahf
or
or
movsl
or
or
lcall
lds
lret
lock
inc
pushf
fisubs
pop
mov
mov
push
lret
outsl
fdivs
test
nop
jbe
mov
pop
test
jle
sar
jb
and
lret
mov
pop
push
stc
xor
aas
int3
int
cmp
mov
pop
dec
mov
stos
int
shlb
daa
and
sub
mov
or
pop
mov
add
pop
xchg
ror
push
mov
push
daa
imul
inc
sbb
in
lock
inc
repnz
aaa
out
push
rcr
in
ss
sbb
mov
cmp
mov
lcall
mov
dec
jns
and
push
xor
jp
push
popf
jnp
subl
lds
and
or
adc
leave
xor
test
mov
add
inc
int3
or
push
cwtl
jg
pop
jo
ret
pop
insl
add
pop
and
outsb
bound
test
inc
pushw
movl
clc
popf
pop
imul
mov
and
mov
outsl
shl
fcmovb
mov
jo
addb
or
and
cmp
fstps
add
cmpsl
in
shlb
jae
rcrl
lods
and
scas
fdivrp
sarb
or
shll
les
movsb
jmp
ljmp
rcrl
roll
add
pop
sbb
or
cmp
hlt
insb
sub
fcmovne
out
outsb
sbb
add
xchg
insl
lret
int
inc
dec
pop
inc
and
cmpsl
repz
inc
into
cmp
icebp
jae
lahf
ret
pop
add
inc
adc
mov
mov
push
cs
dec
and
jge
mov
inc
sub
and
mov
fnstenv
xchg
addr16
in
call
fwait
sub
shlb
or
sbb
jmp
sbb
in
rclb
es
mov
inc
test
rcrb
fsubs
xor
shlb
das
jne
mov
call
out
mov
inc
jg
out
jae
fsubrl
jp
cmpsb
in
sub
enter
outsb
push
je
frstor
scas
stc
dec
js
pop
mov
xchg
loop
addr16
cld
xor
adc
sbb
mov
shll
or
mov
pop
mov
sarl
sub
aad
fs
shrb
adc
pop
int
mov
sub
add
mov
xchg
pop
aas
xchg
cmp
in
pop
pop
test
int
cli
mov
mov
fwait
cwtl
jbe
pop
mov
ljmp
div
andb
imul
cld
dec
jecxz
pop
pop
xchg
cmp
fstps
cmpsb
imul
xlat
insl
dec
clc
xchg
sub
jg
xor
fwait
or
fdivrp
andb
add
fcoms
pop
in
mov
push
outsl
mov
aad
movsl
mov
inc
push
xchg
dec
gs
int3
out
mov
ffreep
cld
loope
repnz
fsubs
fs
shrb
bswap
clc
test
dec
xor
and
fdivr
clc
out
lret
pushf
imul
pop
sbb
mov
mov
mov
inc
movsl
cmpsb
sub
mov
mov
xor
shrl
push
add
in
je
xchg
adc
dec
mov
jae
dec
inc
jp
xor
or
fsubrl
test
aas
cmpsw
add
mov
sub
cmp
lret
xlat
cwtl
push
push
xchg
jg
dec
cmpsb
xlat
mov
pushf
mov
fsub
or
pop
push
ljmp
inc
call
dec
mov
add
add
push
push
sub
xchg
lea
adc
lods
add
gs
pop
int
xchg
and
jecxz
mov
inc
or
ss
or
sbb
push
int3
mov
add
adc
lret
mov
mov
out
jp
scas
hlt
xchg
int
pop
xor
leave
nop
cmp
pop
dec
jmp
mov
mov
mov
cmc
adc
sub
enter
jae
loop
dec
push
arpl
mov
push
je
cmp
and
pop
xchg
and
jnp
gs
rcll
mov
sbb
xchg
fnstsw
rcrl
xchg
aad
cmp
xchg
or
or
in
mov
mov
scas
out
mov
ds
and
icebp
sbb
out
ss
in
imul
fldl
mov
fldenv
inc
fdivl
xchg
subb
sub
push
bnd
insl
aas
adc
jae
out
repz
jo
lock
inc
lock
or
push
push
cmp
jne
idivb
insb
jne
leave
add
mov
lret
rcr
mov
sarb
sbb
mov
fsubp
mov
mov
jl
les
stos
adc
nop
inc
lods
stos
fsts
sub
inc
cmp
int
pusha
movsl
cmp
pop
inc
adc
aad
subb
xchg
sub
lock
and
sub
mov
lcall
testl
xor
idivl
sub
xchg
pop
cmp
negb
clc
push
ret
mov
xchg
push
cmp
insl
cmp
testl
fisubrl
sbb
mov
mov
inc
shlb
mov
inc
pop
mov
mov
add
jne
aad
jp
cmp
jbe
ficoms
xor
lcall
add
xchg
inc
sti
icebp
inc
xor
adcb
leave
sbb
inc
sahf
or
mul
sub
or
out
mov
stc
pusha
jl
movsb
in
mov
cwtl
dec
repnz
fldcw
or
adc
xlat
mov
xor
lret
aas
xchg
fdivl
add
js
and
mov
cs
out
pop
jb
dec
mov
mov
aaa
sbb
mov
add
mov
cmc
movsb
xor
movsb
pushf
inc
out
repnz
adc
pop
mov
int
dec
sub
inc
mov
jb
fildl
adc
scas
mov
jno
add
push
or
cmc
shl
lcall
out
jb
jmp
cmp
add
sahf
cwtl
mov
pop
push
es
sbb
or
cs
jl
test
and
add
jbe
fdivrs
aad
mov
test
pop
mov
xor
mov
adc
in
adc
mov
test
bound
or
adc
xchg
ja
inc
xor
adcl
cmp
mov
ret
arpl
xchg
cmp
mov
mov
or
adc
xchg
into
and
sbb
lcall
push
jns
mov
cmp
ss
out
push
pusha
icebp
fistpll
and
pop
push
cmc
fists
ret
cmp
dec
and
dec
cmc
jg
pop
lods
pop
jnp
xchg
pop
into
adc
mov
rcll
mov
adc
aas
popf
dec
jmp
dec
pushf
xorb
mov
sbb
pop
pop
jns
pop
adc
mov
pop
idivl
sub
jp
mov
pop
popa
scas
aad
cmp
std
xchg
or
es
pop
pop
jmp
pop
jle
in
add
or
push
cmp
push
xor
std
fwait
push
je
lcall
pop
roll
cmp
xchg
ss
adc
std
jmp
jne
out
insb
jae
add
in
or
test
sbb
mov
inc
push
dec
cld
leave
into
fs
ret
mov
lcall
xorl
mov
leave
mov
outsl
mov
cmpl
mov
inc
jg
popf
mov
ja
enter
ret
movsb
push
in
arpl
fdiv
sahf
aam
push
lahf
ret
add
push
cld
shlb
cmpsl
xchg
stc
xor
add
daa
sbb
mov
add
addr16
ret
repz
xchg
sbb
pop
mov
fwait
push
int
in
xchg
rcrb
outsl
cmp
hlt
idiv
jb
int
cmp
xchg
iret
or
adcb
inc
fcmove
mov
push
lods
inc
sub
lock
mov
aad
scas
cld
aam
test
push
xchg
push
cs
mov
add
scas
test
ljmp
pop
mov
cs
icebp
push
xorb
inc
cltd
aas
gs
imul
push
shr
negl
es
xchg
sbb
cli
lcall
inc
stos
das
jmp
or
lods
dec
in
mov
jne
out
inc
jg
jno
outsb
push
push
jecxz
jmp
int3
inc
popf
pop
insb
sbbl
enter
jne
sbb
insb
pop
cld
adc
cli
lock
aaa
std
mov
jge
adc
imul
stc
rolb
mov
inc
mov
ffreep
inc
push
mov
outsl
lods
stos
leave
ss
jne
dec
addr16
dec
cld
xor
dec
dec
addr16
subb
pusha
popa
les
insb
fwait
adc
aam
push
mov
sbb
add
lods
rcl
jbe
jle
xchg
and
mov
cltd
dec
push
pusha
cmpsl
jnp
jo
roll
insl
inc
xchg
add
cmpsl
mov
adc
ficoms
outsb
or
loope
in
jbe
imul
mov
cmpsl
xor
je
leave
jo
xchg
mov
inc
mov
xchg
mov
aaa
test
and
jmp
fldt
sbb
test
outsb
sbb
adc
shrb
lods
sub
xor
adc
ja
mov
mov
movsb
pop
xchg
jge,pt
mov
int
nop
jnp
imul
xor
rolb
pop
in
xlat
mov
fdivl
subb
test
inc
xchg
inc
fnstenv
dec
mov
inc
scas
add
or
mov
xchg
xor
jl
push
mov
add
ret
cmp
cld
lret
add
jg
mov
xor
inc
jl
mov
lret
push
out
js
in
and
sub
and
push
lret
mov
insb
rorw
loope
iret
imul
push
add
pop
lahf
xchg
inc
repnz
xchg
int3
inc
mov
and
push
inc
xchg
orb
xchg
insb
loop
xchg
xchg
mov
mov
push
xor
addr16
repnz
jns
push
push
dec
mov
sti
xchg
mov
xor
xchg
jo
popl
push
imul
jp
push
inc
lret
pop
sbb
dec
pusha
pop
xchg
aad
lret
xchg
std
jmp
add
inc
cmp
sub
ss
xor
ret
es
sub
xor
icebp
dec
sub
push
push
push
out
jns
pop
scas
jmp
jnp
xor
mov
push
sub
dec
pusha
in
fildl
std
xor
add
xlat
cmp
dec
xchg
mov
pop
cmp
aaa
cmpsl
mov
daa
popa
dec
push
mov
iret
jmp
xchg
xor
cli
bound
sub
push
jnp
in
or
push
sahf
xchg
inc
sub
add
dec
js
xor
sbb
sbb
movsl
dec
icebp
lret
lahf
add
push
sbb
int
ja
xchg
cltd
sbb
fisttpl
sub
mov
fdivl
or
push
mov
cli
leave
jne
test
push
sub
mov
or
sbb
es
mov
jmp
pop
jnp
mov
mov
cmp
fisubrl
out
stc
xor
pop
xor
insb
scas
outsb
adc
inc
inc
adc
mov
stos
movsb
leave
adc
cmc
fsubr
ss
ja
repnz
mov
xchg
scas
jle
into
icebp
jo
sbb
xchg
lds
add
push
mov
mov
pop
mov
test
int3
lds
imul
or
lcall
inc
outsb
out
pop
ret
mov
in
call
into
subb
mov
shr
xor
aam
xchg
fidivrl
mov
mov
ljmp
cmp
mov
fwait
lods
mov
mov
xchg
sti
cs
or
add
loop
dec
arpl
lea
divb
inc
push
xchg
jecxz
decb
cmp
jo
test
cmp
lock
in
leave
mov
mov
pop
loope
adc
jo
mov
mov
rorb
pop
dec
mov
enter
pop
sbb
xor
aas
mov
pusha
addl
stc
pop
mov
ds
add
sub
imul
rcl
or
and
cmp
ss
lret
sub
push
xor
pop
jae
add
pop
insl
adc
bound
sbb
hlt
mov
lcall
aam
in
push
adc
stos
or
in
dec
pop
popf
or
call
jle
sub
aas
mov
cmp
sbb
out
les
inc
test
imul
bound
inc
lds
mov
int3
xchg
mov
sahf
fcmovb
jle
pop
sbb
xchg
sbb
sbb
icebp
mov
sub
or
push
in
pop
cld
inc
and
out
sbb
dec
imul
adc
add
push
psubsb
pop
jle
int3
in
xchg
int
lfs
faddp
lcall
stc
mov
mov
mov
adc
inc
roll
mov
jl
ret
mov
es
mov
fnstsw
mov
bound
stos
ds
out
jns
movhps
movsl
scas
xchg
sahf
mov
xchg
and
push
out
jae
mov
sbb
popa
cmpsb
push
ds
mov
outsb
imul
inc
jo
push
shl
sarb
and
data16
xor
movsl
pop
lods
xchg
push
mov
jo
cmp
cmpsl
mov
popf
xor
sbb
xchg
dec
cli
icebp
add
inc
incl
pop
mov
mov
dec
or
sti
pusha
add
adc
xchg
mov
les
inc
xchg
push
out
xorb
dec
and
sub
mov
shrb
call
adc
aas
push
stos
cmpsb
addl
push
push
jae
push
loope
mov
sbb
jmp
pop
call
sbb
stos
sbb
ret
mov
fwait
scas
mov
jae
xor
iret
arpl
repz
jg
rorb
daa
xchg
js
es
or
xor
mov
cmp
adc
push
jp
and
ds
mov
shlb
das
loopne
jnp,pt
and
sub
out
mov
movl
sbb
mov
lahf
cmp
xchg
pop
insl
jo
insb
test
push
jae
mov
jge
xor
xor
fisubs
pop
mov
xor
gs
cmpsl
outsl
cs
adc
cmc
rclb
int3
call
cld
mov
mov
and
jnp
jp
call
insl
aas
push
mov
insb
hlt
flds
or
jg
push
sub
and
jge
lock
les
lcall
movsl
aas
or
xchg
hlt
clc
inc
test
push
xor
or
mov
pop
push
mov
and
sbb
daa
inc
fidivrs
jl
add
cmpl
ds
jmp
mov
jecxz
jmp
dec
cmpsb
jbe
outsl
cmp
adc
or
mov
lock
imul
dec
sub
dec
in
gs
pop
sub
scas
jb
mov
icebp
enter
push
rorb
test
pop
inc
stos
lock
dec
push
mov
and
jbe
jb
mov
out
or
lahf
mov
test
mov
xor
and
aas
in
fwait
jle
xlat
mov
fidivrl
jmp
lret
scas
dec
or
rcrl
int3
lret
out
aaa
lcall
hlt
leave
cld
scas
mov
setge
mov
push
inc
call
dec
add
adc
mov
push
mov
lods
in
push
loop
mov
add
add
adc
add
or
push
push
int
dec
mov
fwait
add
jp
cld
js
fiadds
jbe
jl
lods
or
pop
and
fwait
jmp
lea
inc
adc
jle
sbb
out
cmpl
inc
sarb
sub
subl
pop
mov
jecxz
or
loopne
and
sahf
or
fidivrs
or
bound
sbb
popf
popf
lret
push
arpl
push
or
or
mov
and
sbb
je
sbb
in
cmp
cmp
loope
pop
cld
jo
rcrb
mov
shll
icebp
inc
imul
loope
jbe
iret
popa
in
adcl
or
incb
xor
mov
adc
cmp
jecxz
inc
and
pop
push
sub
cltd
es
push
sub
sub
andb
mov
lods
in
xchg
pusha
xchg
jno
out
loopne
loop
or
xchg
jb
loopne
ljmp
inc
mov
aam
icebp
mov
dec
mov
movsl
push
sub
xchg
fcoms
pop
sub
xchg
lea
mov
addr16
dec
pop
sbb
xchg
mov
jno
xchg
jo
mov
push
xchg
lea
add
push
aad
insl
cmp
mov
lahf
orb
jmp
das
pushl
mov
push
mov
xor
mov
cmpsb
ljmp
imul
je
jno
hlt
rcll
cwtl
test
mov
jecxz
xlat
pop
mov
jge
dec
mov
sbb
inc
xchg
and
mov
mov
xor
aaa
push
outsl
sarl
push
mov
mov
bound
test
fucomip
or
inc
and
sub
rclb
cltd
mov
jnp
adc
popf
inc
hlt
and
nop
mov
adc
xlat
mov
test
pop
mov
clc
or
mov
mov
and
jbe
int3
jmp
push
fcoml
fisttpl
sbb
je
dec
mov
hlt
xchg
div
sub
and
push
xchg
jae
cmpl
outsb
adc
push
mov
call
adc
scas
imul
lock
adc
rcr
dec
mov
mov
out
ds
jae
xor
jbe
cli
xorb
stc
cmpsl
adc
addl
mov
ret
or
jno
in
hlt
fcmovu
iret
mov
sub
mov
cli
xlat
pop
and
sbb
in
mov
imul
repnz
fbld
ljmp
icebp
aam
sbb
push
icebp
enterw
test
jbe
fs
imul
jbe
and
ror
in
xchg
lret
sub
hlt
jns
into
adcb
push
xor
outsl
leave
mov
mov
push
scas
mov
push
dec
loope
jne
loopne
aam
sub
add
dec
decl
pop
xchg
cmp
mov
ss
test
push
and
pop
loopne
push
mov
mov
add
aad
sahf
mov
addb
sub
mov
add
mov
xchg
and
push
jp
idivl
lea
xor
mov
es
mov
adc
jle
push
dec
and
push
sbb
push
jmp
ljmp
or
insb
pop
loopew,pn
mov
pushf
mov
dec
sub
rorb
lcall
jae
xor
stc
jae
sbb
outsb
mov
cmp
mov
mov
xor
jne
push
scas
leave
mul
pop
adc
sbb
mov
lcall
fldl
pop
mov
sbb
dec
or
mov
mov
movsl
sub
push
cmp
or
nop
sbb
hlt
xchg
nop
out
mov
pop
fdivp
jo
repnz
dec
mov
cli
and
jge
sub
in
jno
xlat
aad
test
adc
cli
jnp
xchg
mov
scas
mov
mov
out
jmp
inc
jno
orb
fimull
cmp
or
inc
scas
daa
push
adc
int3
sbb
fwait
xor
sbb
xchg
js
xchg
push
and
sbb
fistps
push
imul
mov
cld
and
xchg
fdivs
sub
incb
sub
jno
mov
scas
jbe
jno
in
push
inc
pop
stc
test
cli
repnz
add
pop
mov
pop
pop
jbe
jbe
jbe
xchg
test
push
not
gs
sahf
push
dec
insb
shrl
push
insb
push
push
test
and
push
addr16
push
jle
add
or
push
fs
lock
mov
shll
mov
cwtl
fistpl
and
and
jae
movsb
xlat
in
sub
call
jns
jle
rorl
jnp
and
loope
mov
mov
insl
cmc
xorb
ja
rol
int3
andb
leave
ficoms
fcomp
inc
jge
inc
or
xor
mov
adcb
inc
jg
adc
scas
jbe
fimull
mov
cmc
mov
outsb
shrb
sbb
push
dec
andb
iret
cmp
call
pushf
mov
mov
mov
cmp
jne
test
bound
rcrl
and
repnz
xchg
rclb
pop
cmc
lock
and
fistps
xchg
adc
push
jo
lret
ljmp
xor
inc
adc
ljmp
adc
pop
lods
jb
lds
xchg
cs
push
sti
add
sti
sub
iret
fistl
sbb
bound
dec
or
pop
inc
jle
push
iret
outsl
iret
ret
adc
mov
lcall
cltd
cmp
gs
cs
xor
aad
aaa
cmp
pusha
cs
jmp
xor
dec
loope
mov
into
xchg
pop
int3
mov
insl
push
test
inc
dec
repz
and
int
sbb
push
xor
addr16
rclb
mov
mov
shll
pop
das
stc
and
arpl
adc
xor
lods
ljmp
cmc
mull
sbb
adcl
jb
fstps
lcall
xchg
sbb
push
popf
mov
mov
lods
dec
jle
jae
cmc
lret
loop
rorb
and
dec
fsubp
inc
stos
and
fmuls
shlb
mov
sub
sub
lahf
mov
imul
mov
mov
imul
and
idivb
dec
jne
int3
inc
pop
pop
insb
pop
sarb
cmp
xchg
scas
xor
frstor
cltd
sbb
insl
fsubp
adc
jg
in
and
mov
iret
lea
sbb
imull
test
adc
decb
scas
jbe
js
daa
sbbb
cmpsl
or
daa
into
add
scas
ret
xchg
xchg
in
jmp
pop
jp
dec
dec
xchg
loope
mov
pop
loop
lods
outsl
rcrb
cmp
andb
xchg
jns
scas
sbb
lods
mov
ret
or
into
jb
push
and
xor
cmc
aas
fs
xchg
cmpsl
jo
push
inc
add
push
mov
sbbb
dec
mov
dec
xorl
out
loope
cmp
dec
add
fstps
ljmp
cltd
mov
pop
adc
mov
cmp
scas
mov
inc
fwait
xor
call
ret
and
addl
lret
add
ret
insl
inc
fstl
inc
inc
stos
or
cmp
jl
subb
push
jb
inc
cmp
cmpsl
insb
addr16
pop
mov
pop
push
mov
mov
loopne
mov
ret
adc
dec
adc
adc
sub
cli
in
jmp
clc
sbb
mov
sti
push
cmp
rol
pop
xchg
adc
or
inc
sub
scas
sub
loope
or
repz
pop
mov
sbb
mov
ljmp
aas
mov
jecxz
jl
fnsave
or
faddl
jmp
ds
out
jnp
add
and
hlt
cltd
jb
pop
add
pop
inc
dec
loopne
jmp
popa
ljmp
clc
xchg
sub
sbb
dec
lock
push
lahf
or
push
dec
fiadds
lahf
test
aaa
cmpsb
sbb
xchg
mov
jmp
pop
js
push
adc
mov
mov
ss
lds
dec
xor
jns
push
adc
cmp
xor
fwait
push
pop
inc
hlt
je
popf
sub
call
fdivr
movsb
inc
loop
bound
addl
inc
pop
lahf
out
das
cmp
cmp
pop
repz
ficomps
movsl
and
sbb
stc
adc
adc
gs
outsl
sub
mov
add
push
fs
push
lahf
dec
popf
sub
sbb
ja
adc
cmp
out
loope
mov
or
fdivr
adc
lahf
movsl
popa
fbld
mov
lock
repnz
inc
pusha
mov
aaa
jge
test
fwait
je
rorb
or
mov
aam
mov
imul
jb
mov
dec
in
stc
or
mov
adc
insl
and
std
add
pop
lret
lret
fdivrl
mov
aaa
mov
les
bound
adcl
sbb
cmc
fidivl
cld
jbe
idivl
clc
push
fwait
or
mov
int3
filds
pusha
pushf
jae
cmpl
push
loopne
push
lcall
shl
inc
dec
xor
inc
in
kunpckdq
lock
shl
out
mov
add
hlt
xchg
icebp
aas
insb
lahf
mov
and
push
and
pop
js
adc
jecxz
jmp
xchg
mov
aas
sahf
cltd
mov
icebp
dec
jmp
push
pop
mov
adc
popa
jns
nop
inc
cmp
mov
into
ja
repz
sbb
cwtl
or
aaa
frstor
repz
pop
iret
subb
scas
mov
popf
mov
mov
bound
out
dec
jb
sub
iret
or
pop
cmp
push
imul
pop
mov
pop
fists
jecxz
rcrb
mov
cmpb
je
inc
or
call
lock
aad
xchg
add
inc
fsubl
dec
lods
jo
mov
sub
outsl
jmp
jp
adc
aas
ds
xor
arpl
pop
lods
js
dec
stos
mov
dec
inc
and
cmp
add
xor
fisubrl
mov
scas
hlt
into
fldl
repz
dec
adc
lea
out
cld
mov
in
adc
push
and
sbb
dec
subb
shll
pop
in
sbb
push
adc
imul
pop
fs
jmp
je
sub
or
std
jae
push
sub
push
xchg
int3
cltd
pop
jg
add
mov
or
dec
push
in
cwtl
jae
lods
xor
mov
dec
in
int3
push
cmp
lret
lahf
cmp
pop
test
cltd
and
adc
and
ljmp
repz
mov
add
sbb
dec
imul
daa
dec
lods
mov
push
mov
gs
and
jp
dec
pop
push
dec
mov
sbb
aaa
xor
insl
inc
jp
pop
jl
xchg
call
jl
cmpsl
pop
ret
jle,pt
js
hlt
cld
push
add
sbb
iret
or
dec
fadds
and
pop
js
fstpl
push
inc
loope
add
sub
mov
popf
push
loop
mov
mov
imul
mov
sub
push
pop
outsl
mov
aad
jecxz
and
psubd
pop
and
and
in
pop
cmc
inc
mov
inc
shlb
sbb
cmpl
ljmp
int3
pop
or
movsb
mov
decb
outsb
mov
push
mov
jns
imul
mov
push
cmp
xchg
stos
mov
stos
pop
mov
outsb
testl
ja
mov
sahf
pop
lahf
sbb
leave
insb
std
xchg
xchg
test
sbb
es
pop
in
bound
out
fwait
in
les
mov
mov
popa
shr
mov
inc
mulb
out
sub
cltd
icebp
sti
adc
arpl
mov
or
testb
pop
ljmp
mov
jle
push
stos
lcall
dec
stos
or
xor
jle
lret
loop
movl
adc
or
mov
xor
pop
cmp
call
sahf
gs
cmp
mov
jb
inc
cld
icebp
mov
pop
fadd
add
pop
mov
scas
fistps
jle
mov
test
ss
das
inc
pop
loop
xchg
cmp
cltd
xor
lock
fiaddl
jmp
lret
pop
mov
rcll
in
mov
add
div
lret
jecxz
xchg
xor
mov
loope
mov
insl
fisubrl
lods
mov
pop
and
jmp
mov
sub
mov
fildll
aad
loope
mov
ret
mov
ret
repz
mov
rol
fcompl
and
iret
ja
lods
shlb
ljmp
in
lods
xchg
sbb
lret
mov
lret
rclb
lock
fldcw
xchg
mov
dec
xchg
pushf
fwait
rorb
push
out
sbb
dec
fidivrl
and
daa
out
idiv
xor
stos
push
ret
mov
mov
bound
sahf
int
cmp
cwtl
mov
lods
pusha
insb
sbb
cmp
xor
push
imull
pop
ljmp
ret
rcl
popa
push
cs
dec
sti
in
cmp
fsts
xchg
jnp
dec
adc
mov
cltd
iret
add
dec
rcrb
test
fcmove
outsw
or
xor
pop
aas
pop
icebp
xchg
dec
dec
mov
lods
shrl
int3
mov
add
xor
mov
jl
mov
mov
cmc
bound
adc
mov
lahf
adc
lret
cmc
sahf
adc
add
aas
sahf
dec
fistps
xlat
data16
in
fildl
fwait
mov
mov
cmp
mov
sbb
xchg
push
and
mov
jle
mov
fbld
and
out
mov
or
imul
std
or
xor
pop
mov
push
cmp
lea
popa
movsl
mul
out
mov
in
pop
mov
adc
cmp
xchg
ficompl
or
pop
push
xor
hlt
and
sti
jnp
fst
jg
sbb
out
roll
js
xor
push
jbe
jmp
stc
pop
cs
aam
adcb
addl
and
mov
xor
push
sbb
push
sub
int3
mov
or
sub
mov
test
xchg
lcall
and
arpl
cmp
ret
lcall
sbb
sub
aas
add
mov
ljmp
lret
dec
push
dec
js
or
fdivr
mov
pop
mov
cmp
mov
fcmovu
push
sbbl
gs
jmp
add
dec
push
shrl
and
push
jle
xchg
jb
clc
aam
lods
jle
jo
jmp
in
clc
or
xor
xchg
mov
mov
push
and
cltd
push
mov
pop
pusha
pop
push
leave
cld
cmp
push
adc
stos
les
push
out
inc
addr16
popf
mov
pop
inc
dec
cmp
add
dec
inc
jp
ljmp
push
test
xchg
cmp
mov
jle
mov
stc
xor
pushf
ret
call
stos
cs
inc
xchg
rcl
sub
inc
lret
mov
fsubl
push
xchg
mov
ret
clc
and
sbb
inc
addl
fimuls
mov
jmp
in
rep
xor
stos
rcrb
push
cmp
inc
xchg
lods
adc
test
inc
fldpi
inc
cmp
sub
cld
scas
inc
add
pusha
pushf
adc
jnp
sarb
lcall
jecxz
int3
mov
popa
dec
adcl
mov
pop
fs
push
adc
into
out
mov
popa
arpl
leave
mov
insb
mov
lahf
jp
sub
or
cli
sbb
gs
mov
lret
test
jmp
int
ffree
mov
sbb
addr16
sarb
sbb
stos
test
pop
fsub
nop
jle
mov
mov
pop
sbb
jg
hlt
lea
jecxz
ja
xchg
in
mov
das
lods
mov
cli
mov
ret
cmp
add
stos
rcrl
adcl
loopne
bound
dec
jno
xchg
fmul
adc
test
add
inc
pop
stc
mov
jg
cmp
scas
sbb
cltd
pusha
loopne
jecxz
dec
xor
xchg
push
jbe
dec
mov
and
mov
pop
mov
lret
mov
shl
push
pop
pop
pop
inc
push
sbb
daa
loopne
fadds
inc
jmp
fsts
gs
notb
xchg
bound
iret
aaa
test
pop
es
cmp
add
call
lahf
mov
mov
mov
jg
aam
cs
and
imul
sub
add
sbb
cmp
test
add
jp
lcall
mov
imul
xchg
fcmovne
pop
push
mov
fiadds
cwtl
std
adc
push
lea
inc
aaa
lahf
imul
sbb
enter
inc
pop
fldt
mov
je
rorl
inc
fwait
jecxz
sbb
mov
insb
mov
lcall
mov
sub
outsl
xor
sti
mov
dec
xchg
aam
xor
loop
inc
push
mov
clc
push
or
clc
sub
addl
sub
outsl
bound
sub
lods
mov
in
mov
pop
pop
or
icebp
aam
cld
test
sub
das
shl
sub
jo
cmp
sbbl
movsb
mov
scas
mov
dec
xchg
sub
pop
mov
dec
jnp
inc
jl
jb
xchg
push
pop
bound
fistl
hlt
pop
in
lcall
sbb
mov
sbb
mov
jge
lret
and
andl
out
ds
out
push
xchg
xchg
mov
daa
sahf
push
fisttpll
ret
shll
dec
popf
out
sbbb
movsl
mov
push
cmp
subl
jbe
cmp
add
adc
xor
dec
inc
xor
pop
es
mov
fs
inc
cmp
mov
out
cmc
fists
push
add
stos
mov
mov
xchg
test
lretw
lods
sub
xchg
sub
int
jne
mov
push
scas
cmp
lods
dec
sub
leave
xchg
jno
push
or
jmp
cmc
xorl
int3
cmpsb
sar
pop
shl
fistl
mov
test
push
jnp
orb
push
jl
emms
lods
sbb
lcall
cmp
enter
and
outsl
add
xor
inc
pop
jno
adc
ror
add
icebp
lahf
test
imul
pause
pushf
divl
push
pop
divl
pop
jp
out
xchg
xchg
dec
faddl
movsb
push
pushf
test
aaa
ljmp
ljmp
xlat
lock
add
ljmp
mov
orl
incl
imul
xlat
and
shll
or
into
add
mov
lods
add
enter
ss
loope
adc
lods
pop
fwait
jno
cmp
add
jbe
loopne
sub
rol
cld
loope
cmp
xor
movsb
adc
notl
inc
inc
cs
push
sub
xchg
int3
xlat
iret
inc
imul
jp
push
out
dec
in
xor
mov
test
pop
test
mov
repnz
jae
mov
xchg
pop
out
dec
leave
out
sahf
int
jecxz
lods
mov
stos
in
and
push
outsl
pop
sbb
xorl
ficoml
cmpsl
orb
movsl
sbb
data16
cli
and
sub
xor
data16
cld
insb
dec
lock
xchg
and
outsl
flds
rorb
cwtl
sbb
cmpsb
push
push
jb
xor
sbb
or
or
insl
adc
mov
sti
push
mov
je
lds
frstor
sbb
movsb
sarl
stc
or
add
lcall
mov
jo
insb
jg
leave
cltd
or
mov
enter
and
inc
arpl
push
xor
sahf
test
pushf
xchg
les
popf
pop
lods
aaa
cmp
cmp
mov
sbb
mov
push
inc
lock
push
sbb
or
cmp
pusha
mov
push
div
push
mov
xlat
cmc
push
fistps
adc
pop
and
aam
mov
lea
push
pop
inc
test
and
xorb
nop
mov
enter
loopne
sahf
cmpb
sub
test
push
aad
lcall
adc
enter
lahf
sub
fbld
pushf
push
inc
lret
sub
add
adc
cli
pop
inc
in
test
mov
test
xchg
mov
add
sbbl
test
jg
jo
adc
cs
movsl
leave
aaa
sbbl
ret
jae
in
xchg
mulb
and
pushf
shrb
push
xchg
xor
jnp
call
sbb
or
mov
dec
popa
in
and
or
cli
movsl
sbb
lcall
out
sbb
xlat
jl
jbe
mov
out
add
dec
push
daa
mov
imul
cwtl
in
int
inc
insb
xor
hlt
jb
inc
sbbb
mov
daa
lds
ljmp
inc
push
lock
jbe
ret
fs
push
repnz
mov
add
fsubrl
push
test
pop
adcb
movups
add
xchg
movsl
cmpb
daa
cmp
repz
xor
cltd
std
aas
sahf
repnz
fadds
cmpl
and
push
movntq
cmc
test
inc
push
stos
sub
jl
outsl
sahf
clc
inc
mov
aas
lock
xchg
test
inc
xchg
jge
into
xchg
mov
ja
stos
mov
rcrl
int
xor
or
inc
jge
fsubr
lock
xchg
and
adc
mov
fdivs
jnp
cld
les
test
scas
push
insb
andl
xor
stc
cltd
fs
or
out
jnp
clc
out
push
jl
adc
add
sub
sbb
popa
cmpsl
and
sub
pop
dec
xchg
fs
mov
cmp
dec
jle
xor
inc
push
movb
data16
sbb
pop
sti
jns
fcmovbe
iret
call
mov
mov
lock
adc
mov
pop
movsl
in
sbb
cmpsb
cmp
add
adcl
mov
or
push
sbb
div
sbb
mov
inc
xor
and
jl
cmp
dec
mov
sbb
arpl
subl
shll
cmp
test
aad
mov
aaa
push
stos
jbe
out
fcoms
xabort
mov
leave
mov
int3
push
lds
ja
sbb
jae
imul
sub
dec
dec
cli
movsl
pop
int3
mov
in
cmp
sarb
sub
jmp
adc
inc
insl
xchg
xchg
xchg
jge
sub
nop
lcall
dec
test
mov
lock
cmp
in
sub
adc
dec
ja
push
rol
xor
ret
push
lock
lahf
cli
in
stos
pop
cmp
insl
add
xorb
inc
rolb
push
stc
push
daa
movsb
shlb
inc
dec
lret
les
into
shr
insl
jl
cmp
sub
pop
loopne
pop
ja
pop
mov
std
cmp
mov
fcmove
lds
cwtl
cmp
mov
mov
test
xchg
dec
call
dec
ljmp
lock
push
lea
lock
mov
dec
mov
lods
popa
mov
jp
mov
js
in
ljmp
sbb
fildl
or
ss
sbb
scas
stos
out
shr
or
movsl
cmp
cmpsb
pop
pop
pushf
xor
rolb
xchg
add
cltd
mov
dec
dec
pop
loopne
mov
in
xor
lret
scas
ficoms
xchg
jecxz
jne
xchg
std
sti
add
test
shlb
fdivl
mov
scas
add
push
jg
adc
inc
daa
mov
cwtl
mov
mov
jns
cmp
jae
shl
fwait
adcl
orb
in
test
mov
ss
repz
out
orl
cmpsb
add
sbb
jmp
pop
mov
inc
jge
repnz
push
stos
fildll
mov
xor
or
inc
cli
shll
lea
negl
stc
loope
add
mov
jl
jl
mov
lret
call
stos
sahf
jb
imul
xor
shlb
lahf
pusha
clc
test
daa
mov
clc
sub
roll
xor
xchg
je
or
setne
ja
pop
mov
popa
sbb
mov
in
sbb
into
fcoms
aas
inc
ret
cmp
jne
or
sbb
outsb
ljmp
rcr
and
cmp
jg
jne
adc
sub
pushf
shlb
lcall
push
push
mov
in
test
dec
cltd
pusha
and
xchg
push
push
mov
orl
adc
jno
movsl
scas
jg
out
int3
mov
ficoml
ficoms
jecxz
mov
hlt
daa
daa
sbb
jp
mov
fcomps
push
call
pop
jo
jbe
mov
mov
sahf
sub
rcr
xor
mov
loopne
pusha
imul
mov
adc
or
out
jp
lock
cltd
sub
cmp
add
mov
mov
les
imul
mov
mov
ljmp
enter
cs
clc
popa
adc
shl
rcrb
fdiv
push
push
mov
cld
imul
jle
xchg
jbe
jns
jns
icebp
xchg
sbb
xchg
fidivrl
pop
sbb
inc
faddl
xor
push
mov
add
popa
aaa
dec
push
fsts
repz
mov
jne
jl
shrb
loope
faddl
pushf
aam
sti
imul
sub
xor
in
xchg
sub
popa
into
fildl
negl
idivb
pusha
mov
daa
pop
jge
dec
inc
aaa
fsubs
push
jbe
xchg
jmp
xor
or
xchg
mov
push
xor
push
or
jb
pop
rorl
fdivl
cmc
jge
mov
mov
rcll
not
scas
test
ds
jne
adc
push
mov
dec
into
sub
mov
clc
arpl
or
xor
call
xchg
in
xchg
imul
mov
inc
std
fdivs
divl
cmpb
lar
addb
jns
sub
pop
pusha
mov
cmpb
cmpsb
add
sbb
mov
das
cmp
mov
arpl
test
enter
out
sahf
sbbl
aad
dec
je
lcall
dec
icebp
ficomps
stos
test
sbb
das
dec
xchg
add
mov
xor
push
outsl
popa
mov
jge
inc
and
divb
push
mov
loope
es
xchg
sti
pop
test
and
cmp
flds
dec
loopne
fistpll
in
and
dec
push
mov
xchg
adc
std
sbb
ss
push
mov
mov
or
scas
fwait
pop
fisubrs
push
movl
mov
repz
std
cs
ret
cmp
push
lea
nop
hlt
add
lret
push
jecxz
xorb
in
inc
icebp
stos
sti
ljmp
jl
cmpsb
mov
fbstp
cmp
fld
inc
pushf
dec
sbb
daa
adc
je
daa
adc
out
push
or
div
dec
xor
ret
mov
repnz
xor
xor
ljmp
push
xchg
push
cmpsb
jbe
loopne
in
repz
hlt
icebp
cmp
scas
pop
ljmp
jb
cmp
push
jbe
roll
sub
xorb
push
sub
pop
cli
movsb
xchg
sub
rcrb
dec
popa
clc
std
xchg
addr16
mov
les
aaa
data16
adc
mov
bound
cmpsl
pop
sbb
scas
mov
or
dec
call
inc
leave
xchg
xor
push
sbb
jmp
mov
lcall
inc
adc
fsubrl
ja
shl
dec
cmp
cmpsl
test
mov
test
inc
loopne
sub
xchg
sub
arpl
add
lahf
push
push
dec
sti
jo
movsl
cmc
dec
rcrb
std
dec
pop
jle
mov
xchg
pop
dec
jl
mov
mov
mov
outsl
flds
sbb
std
outsb
or
popf
inc
out
sbb
push
testb
push
and
sbb
xchg
and
add
jp
repz
fmul
cmpl
ret
gs
cmpb
adc
and
inc
ret
sub
out
fdivrs
pop
lret
mov
jo
jmp
cmc
popf
fstps
lods
sub
mov
rolb
lret
fidivs
cmp
cmp
xor
movsb
dec
shlb
inc
dec
cmp
stos
push
lods
cmp
pop
mov
adc
and
lods
pop
pop
mov
sti
in
ret
cmp
or
cmpsb
jo
movsb
jmp
aas
sbb
cmpsb
or
xor
jae
lcall
test
jae
in
cwtl
xor
and
hlt
sarl
lea
mov
fwait
js
dec
and
jns
dec
stc
sbb
xor
mov
pop
fisubrl
push
fs
js
add
fstp
xchg
ja
pop
outsb
push
or
stos
mov
xor
and
jmp
cmp
cld
push
in
sub
push
imul
adc
jge
ljmp
jge
sti
cmp
adc
xor
mov
sub
ffree
addb
test
bound
pop
push
mov
fisubl
adc
in
addr16
pop
test
push
mov
mov
mov
sbb
fcompl
mov
call
ficompl
gs
iret
cwtl
mov
jg
imul
add
mov
stos
jmp
jg
jne
push
sbb
inc
or
mov
or
mov
inc
imul
xchg
mov
mov
mov
pop
pop
outsb
or
dec
rcrb
pop
xor
sub
lock
iret
lds
lods
adc
cld
insl
lcall
repz
repnz
test
lods
fstl
lea
jmp
and
or
stc
xor
addl
popa
xor
sub
inc
in
sbb
pop
mov
xor
jmp
fmull
sub
push
adc
test
xor
jmp
jne
dec
dec
sbb
sahf
cmp
bound
adc
xlat
xor
cmp
dec
or
rorl
and
mov
cmp
xor
popf
dec
mov
daa
loope
icebp
test
les
cmp
stos
pop
jae
int3
cwtl
mov
jno
inc
cld
xor
add
popa
hlt
cmp
add
push
inc
scas
pop
mov
int3
xchg
and
sti
test
clc
or
and
data16
loopne
dec
dec
aad
mov
jno
cltd
xchg
lock
jne
sti
sbb
in
pop
dec
dec
and
int
dec
jmp
sbb
xor
jo
jge
or
jp
add
sbb
outsb
and
mov
and
sarb
add
jae
adc
popa
push
fdivrs
jne
sti
pushf
shl
stc
xchg
pop
lret
xchg
pop
imul
sbb
mov
leave
sbb
cltd
stos
cmc
jmp
loop
movsb
fwait
stc
sub
xchg
add
xchg
fimuls
loopne
jo
data16
stos
mov
inc
mov
subb
mov
lods
nop
mov
mov
ljmp
sbb
jns
jl
inc
dec
jg
jae
ret
or
shl
xchg
icebp
or
push
cld
inc
punpckhdq
call
mov
stc
push
aas
push
mov
and
pushf
inc
stos
enter
jge
pop
mov
test
dec
cld
push
int3
jns
lcall
fwait
mulb
lret
lret
pushf
inc
xchg
iret
mov
and
jmp
and
gs
lret
sbb
fbld
insb
sub
pop
ss
loope
fdivs
hlt
add
dec
loope
sti
aam
jmp
xor
sbb
jnp
dec
iret
jo
mov
mov
int
cmpsb
sbb
popf
xor
sbb
hlt
jle
fcmovne
pop
gs
es
mov
dec
and
aaa
dec
push
fsubs
inc
popa
xor
mov
xor
int3
ror
dec
push
mov
sarb
xor
inc
je
adc
or
adc
cwtl
push
cmpsb
and
dec
pop
loop
xchg
shlb
fwait
mov
and
and
push
xchg
add
lea
dec
push
scas
pop
aam
dec
cmp
fstpt
and
sbb
out
adc
mov
jp
xor
fistpll
xor
pop
into
aam
fstpt
in
mov
xor
arpl
les
div
int
ret
mov
jecxz
leave
mov
cmpsl
scas
ja
mov
mov
pop
fs
insb
push
sbb
fcompl
neg
jno
fidivl
jecxz
mov
dec
xchg
cmc
xor
jecxz
cmp
in
sub
cwtl
repz
fcmove
test
repz
add
cld
cmp
ret
xchg
sub
outsl
inc
inc
lods
fmulp
ret
adc
lea
js
push
mov
jns
sarb
das
mov
cmp
call
sbb
mov
in
cltd
jnp
test
push
clc
cli
jb
ljmp
into
and
insb
push
mov
lcall
xchg
inc
outsl
sti
ret
addr16
pop
lret
scas
pop
xlat
inc
pop
push
ret
cmp
aad
ljmp
jbe
add
or
movsl
mov
je
adcl
mov
mov
out
xchg
or
outsl
add
xor
sbb
inc
mov
sbb
sti
pop
into
push
pop
xchg
or
enter
mov
sub
sbbb
ficoms
xchg
leave
xchg
xlat
pop
int
mov
inc
sbb
js
mov
fwait
push
mov
sub
das
mov
cmpl
ror
xor
pop
inc
je
cmp
jno
cmp
mov
mov
mov
push
xor
and
or
mov
test
into
aaa
jbe
sbb
rol
mov
cmp
inc
gs
sub
sti
push
bound
xchg
out
cld
or
scas
jne
fdivrl
xchg
add
stc
or
fidivl
les
push
iret
pushf
xchg
sbb
fwait
loope
jecxz
faddl
lods
sbb
out
add
ja
test
mov
nop
mov
fucom
xchg
or
mov
mov
jp
and
int
pop
mov
push
mov
imul
mov
sbb
and
pop
inc
icebp
mov
pop
in
fidivrl
hlt
push
xchg
xchg
call
pop
mov
xchg
mov
inc
inc
adcb
dec
rcr
in
cmc
mov
in
mov
jae
movsl
lds
adc
mov
lcall
cmpxchg
test
int3
rorl
xorb
cli
pop
pop
lods
xor
movsl
popa
loopne
imulb
push
nop
sub
cli
stos
sbb
mulb
sub
andb
sbb
popa
cmpsl
dec
into
pop
jb
cltd
scas
cmp
mov
add
orl
pop
adc
cmovs
jge
push
ja
test
mov
outsb
pushw
mov
sub
jno
cli
scas
jmp
adc
push
jns
fdivs
inc
js
shrl
or
cmp
das
out
shrb
mov
out
pop
and
lods
fadd
dec
cmp
inc
pushf
aas
test
lea
int3
xchg
dec
xchg
pop
lods
mov
ljmp
mov
mov
nop
scas
lahf
sub
mov
test
mov
pushf
xchg
xchg
pusha
push
cmpsb
jmp
shll
in
xor
fidivs
inc
popa
inc
lds
jmp
popa
and
jno
outsb
mov
test
push
outsl
xchg
jg
mov
inc
idiv
jb
ret
and
fdivrs
out
mov
je
mov
mov
cmpsl
aam
cltd
jo
sbb
push
cmp
cld
imul
pop
mov
pop
loope
fcmovnb
sti
idivl
mov
arpl
mov
fs
jge
fs
insl
dec
outsb
movsb
test
adc
lock
add
cs
xchg
mov
pop
mov
mov
arpl
sbb
push
fimuls
sub
call
sub
lcall
and
fnsave
fcompl
shl
nop
and
fstpt
imul
stos
and
in
pop
xlat
mov
mov
mov
and
and
cmpsb
cltd
mov
imul
icebp
push
add
lods
jmp
inc
fiadds
jbe
sti
lcall
aaa
lcall
mov
fstl
hlt
pop
scas
aas
popf
mov
shrl
cwtl
rorl
jb
cltd
aam
mov
leave
and
jecxz
cmp
hlt
fwait
jno
jmp
bound
int
push
pop
repnz
imul
mov
mov
sub
sbb
fists
enter
push
testb
fsubl
xor
outsb
popf
pop
hlt
ljmp
adc
add
ret
nop
xor
pop
and
cmp
or
int
sbb
sahf
ficoms
sahf
dec
test
push
sar
rclb
sarl
es
mov
sbb
xor
pop
dec
push
push
xchg
jge
xchg
fists
fbld
stc
enter
int3
cwtl
mov
push
xchg
int
in
fs
loope
out
cmp
sbb
sbb
data16
inc
pop
testb
rclb
test
cmc
xchg
push
push
push
lods
adc
aad
push
stc
or
push
cmc
fmuls
shrb
pop
xchg
mov
rcr
sbb
mov
adc
sub
mov
enter
jecxz
and
xchg
repz
lods
test
add
mov
pop
dec
sbb
mov
push
xchg
shlb
pop
add
lret
pop
in
cmp
sbbb
mov
test
mov
sbb
fs
and
cmpsl
mov
and
pushf
adc
dec
cld
lahf
outsl
bswap
add
mov
daa
adcl
jl
mov
insl
stos
xor
pop
mov
xor
es
jmp
mov
add
dec
je
ret
lds
or
cmp
mov
mov
das
fisttpl
sub
inc
push
lret
movsl
inc
push
jno
xor
jbe
mov
sbb
aad
jl
imul
cmpsb
test
pop
xchg
rolb
arpl
test
adc
add
inc
stc
out
iret
fistpl
ds
fisubrs
pop
test
sbbl
mov
mov
xor
adc
push
jg
mov
and
imul
mov
icebp
outsl
adc
pop
dec
mov
push
lret
imul
mov
je
jne
mov
clc
sub
push
int3
in
dec
push
xor
out
clc
shlb
scas
adc
test
jno
sub
in
aad
fsts
insb
add
dec
adc
mov
push
jp
or
sbb
ds
push
aas
loope
cmc
or
fwait
hlt
jns
out
mov
loopne
jmp
inc
sub
and
loop
fidivrs
or
sarl
cmp
andl
pushf
inc
test
sub
in
jg
cld
in
add
cmc
xor
sub
cmp
push
addr16
cmpsb
sbb
out
and
sub
icebp
int
and
rorl
add
xchg
out
fnstenv
xchg
out
loope
dec
add
psrld
or
ret
ljmp
in
ds
std
adc
sbb
jno
jg
add
bnd
mov
int3
xlat
jae
sbbl
or
jns
fwait
or
fucomp
outsl
lods
ljmp
fxch
push
bound
mov
add
pop
loop
mov
mov
pop
loop
shrb
pop
jo
mov
push
faddl
cld
xlat
int
gs
es
enter
and
fmulp
movsl
cmpsl
repnz
sbb
pop
sbb
mov
or
xor
js
sub
push
in
or
into
xor
xor
mov
xor
pop
and
iret
lcall
js
addr16
mov
xchg
push
dec
dec
pop
pop
cltd
lds
sub
scas
push
out
adc
scas
pop
sbb
dec
cmp
lds
cmp
xor
je
pop
imul
cld
mov
fwait
cmpsl
aad
lret
inc
sbb
test
push
or
jg
jbe
lret
add
paddusb
add
mov
cld
dec
into
testl
sub
pop
jae
jno
in
pop
loop
addl
dec
mov
push
xchg
sub
lcall
sub
or
sahf
mov
out
push
sarb
cmc
mov
adcl
jl
and
repz
sbb
mov
sub
cltd
mov
push
test
sub
out
repnz
dec
cmp
out
test
inc
jmp
sahf
lds
jg
jno
imul
cmp
pop
push
mov
dec
adc
xor
sbb
pop
jbe
icebp
out
mov
sbb
inc
shrl
xchg
ja
ret
jg
out
fwait
inc
xchg
fs
push
mov
mov
jge
gs
xor
pop
dec
scas
adc
add
fs
jns
add
sbb
push
push
out
in
imul
int3
mov
loopne
lds
pop
push
xchg
jo
dec
push
mov
adc
test
push
jmp
sub
orl
fs
in
aam
scas
test
mov
mov
cmp
push
movsb
cmpl
into
push
jae
les
xor
test
in
jae
jmp
jl
jge
xchg
sub
adc
pop
xor
and
aaa
dec
cmpsl
stos
test
cmc
mov
data16
repz
insb
mov
jp
scas
add
imul
push
sbb
inc
pop
pop
rorb
cmpsb
scas
fstps
jb
fcmovnbe
or
adc
dec
sti
jns
push
kxnorw
rorl
aam
cwtl
sbb
cli
test
jg
enter
adc
push
add
fsubl
cmc
cmp
scas
lock
and
xor
out
fistpll
dec
mov
jae
movsl
push
or
xor
rcrl
std
mov
bound
inc
cmp
hlt
fsubs
cmpsb
repz
mov
jne
pop
jl
fildl
nop
fidivrl
jg
or
sbb
inc
mov
mov
into
or
push
dec
xchg
jb
jnp
cwtl
sbb
cmp
adc
call
push
nop
cmpsl
mov
lret
add
mov
jno
pop
sbb
fstpt
lret
bound
or
pop
lahf
les
jb
call
jmp
inc
scas
push
stc
push
fiaddl
cs
imul
or
cmp
arpl
leave
xchg
addr16
ds
adc
and
xor
and
mov
popa
fadds
fstl
aam
lret
js
adc
jl
mov
sbb
in
pop
dec
into
mov
sub
mov
cli
xchg
daa
or
out
je
push
insl
push
mov
data16
mov
test
push
cltd
jnp
cmp
mov
cs
xor
inc
lock
xchg
movsl
sahf
sti
adc
cmp
shl
sub
pop
push
jge
lret
cmp
push
pusha
aaa
pushf
mov
cmp
mov
pop
cmp
sub
add
ljmp
cmp
pop
sbb
jns
movsb
sub
pop
lods
mov
mulb
int3
leave
or
adc
dec
in
xor
popa
popa
mov
jns
lret
mov
movsl
adc
stc
f2xm1
aaa
xor
fcmovbe
hlt
into
in
xor
add
sub
frstor
or
sbb
xor
sub
jo
ffree
movsb
push
add
or
call
push
in
xchg
int
sahf
xchg
xor
jmp
nop
push
pop
adc
lahf
mov
jns
xchg
inc
adc
or
aas
cmp
jle
ret
fwait
popf
cmp
add
out
add
sbb
mov
push
loope
jl
add
sbb
mov
push
in
test
pop
mov
mov
icebp
call
inc
ss
adc
rcrl
testb
sbb
ret
stos
dec
inc
cmc
test
and
shlb
jo
imul
rcrl
adc
adc
ds
ret
push
mov
lret
or
jb
stc
dec
sahf
loopne
je
sbb
sub
xchg
pop
xorl
ja
inc
into
or
scas
mov
xchg
inc
js
imul
mov
pushf
sub
jo
daa
xchg
lods
lret
aaa
add
add
sahf
lahf
fimuls
movl
xchg
mov
cmc
jl
in
fildll
mov
orb
out
jmp
lock
scas
mov
fs
sbb
xchg
cmpsb
icebp
jge
arpl
push
xchg
mov
pop
lret
jmp
inc
les
rolb
mov
push
call
mov
ds
mov
test
ficoml
rclb
xchg
cmp
mov
dec
mov
std
add
fiadds
sbb
push
dec
xor
sbb
dec
or
xor
xor
and
cmpl
pop
inc
pop
xchg
js
sbb
testl
add
out
es
fwait
mov
das
imul
adc
mov
jae
push
jno
mov
pop
pop
test
in
push
jb
enter
sub
lahf
arpl
mov
xor
pop
int
push
cmp
stos
test
std
rcr
pop
aas
ja
hlt
leave
or
popf
shlb
pop
xor
xor
push
lcall
mov
scas
hlt
push
enter
sbbb
sub
rcl
or
mov
pop
jno
lds
jns
es
lock
adc
xchg
sub
int3
ret
sbb
xchg
ljmp
bound
xchg
dec
je
cmp
mov
mov
push
sbbb
jb
mov
mov
lea
xor
push
ret
dec
push
lret
dec
xchg
mov
fsubrl
fcoml
inc
inc
adc
pop
sbb
xor
push
cltd
outsl
arpl
test
call
rclb
mov
xor
in
adc
xor
dec
xor
stos
orl
loopne
loope
je
adc
stc
xchg
lahf
test
lret
rcl
mov
outsb
stos
in
fsubr
shrl
fisttpll
icebp
add
ds
mov
sub
pop
pop
cld
das
rclb
mov
mov
lock
arpl
rcll
mov
mov
hlt
sahf
mov
lcall
dec
xchg
pop
lea
mov
rolb
xor
cmp
xor
or
repz
jae
rcl
mov
nop
test
fwait
andb
cmp
fdivl
nop
and
and
movsl
pushf
xchg
pop
cs
mov
pop
into
stc
jo
in
xor
aas
mov
xchg
cmp
std
dec
pop
pop
clc
xor
fs
ss
mov
mov
inc
out
xor
fld
ss
loop
scas
add
inc
jo
movsl
jb
aad
aam
add
lock
jge
and
sti
out
xchg
daa
mov
fwait
rorl
push
push
add
push
sti
lds
jg
xchg
dec
clc
in
out
repnz
mov
cmp
jno
mov
inc
adc
pop
dec
lcall
adc
xor
xor
pop
mov
ds
in
add
insb
xchg
jge
in
pop
jge
shrb
xchg
mov
push
ficoms
push
adcl
fcomps
ljmp
xor
ret
mov
gs
push
rcll
sbbb
sbb
sub
xchg
xor
xchg
pop
std
sub
adc
or
mov
mov
fidivl
xchg
push
cld
fnstcw
lret
lods
mov
jno
push
adc
movsl
int
call
psubd
flds
repz
dec
push
jo
out
fsubs
pushfw
add
push
nop
aas
xchg
add
addb
les
in
dec
popl
sub
je
js
xchg
test
mov
aad
cli
and
adc
std
std
les
or
jecxz
sub
cmc
sbb
xchg
aad
jns
inc
inc
mov
sub
mov
shl
mov
lds
add
jne
dec
out
pop
mov
mov
sbbl
pushf
test
ljmp
cli
repnz
mov
pusha
mov
mov
and
leave
test
imul
cmp
ret
stos
inc
cmp
int3
push
js
ss
roll
xchg
js
sti
clc
lods
jmp
dec
jbe
xchg
repnz
sbb
hlt
push
cmpsb
rol
mov
hlt
mov
push
ret
mov
cmpsb
jnp
adc
insb
inc
loopne
mov
mov
jae
cltd
mov
xchg
mov
and
xchg
jl
add
das
mov
xchg
mov
mov
addl
xor
in
ss
mov
xchg
fimull
xchg
mov
daa
mov
xor
lea
ja
sub
outsb
lea
pop
xlat
nop
cwtl
rolb
lcall
add
sub
adc
imul
shlb
je
push
pop
ljmp
adc
mov
daa
xchg
arpl
mov
or
sbb
lock
insb
mov
adc
cltd
shll
push
sti
push
xor
rorb
and
mov
pop
popf
and
jp
andl
cmp
push
adc
cld
pop
movsl
loop
aad
shrl
dec
mov
cltd
daa
xchg
and
out
cmp
jne
mov
adc
movsl
out
icebp
push
stos
inc
shll
jnp
cmp
pop
fcom
jnp
test
jmp
aaa
xchg
inc
ljmp
cltd
ret
sbb
decb
jno
imul
xchg
dec
cmc
or
mov
inc
jg
add
call
jns
int3
test
test
call
das
mov
notb
adc
mov
ficompl
out
lcall
scas
popa
loope
fldt
ss
mov
pushf
adc
pop
cmp
dec
adc
stos
xchg
add
clc
movsl
pop
xor
adc
bound
add
cmp
sub
mov
lret
cmpb
xlat
rcrl
rorl
add
add
int
mov
dec
push
arpl
xchg
out
out
and
lock
xor
push
pop
imul
jle
fcmovb
loop
jne
inc
loope
jae
push
cwtl
test
jmp
jmp
add
and
lods
loope
les
test
lahf
push
pushf
out
pop
cmp
jg
pop
psubw
ljmp
mov
cmp
pusha
insl
nop
aas
fnstsw
xor
rcl
ffreep
repz
addb
les
out
add
cmpsb
dec
testl
sti
lret
les
je
insl
pop
mov
ret
mov
dec
jb
cmpsb
andl
xor
mov
sub
mov
add
punpcklbw
dec
testl
testl
cmpsl
ss
sbbl
call
pop
add
adc
pop
lcall
stos
test
insb
stos
mov
rclb
fists
dec
int3
lds
jns
pop
dec
andl
lods
fdivrl
pop
xor
popf
ret
adc
mov
aad
lcall
mov
dec
rcr
imul
jnp
lahf
adc
paddsw
sar
aad
mov
imul
fistps
mov
or
mov
adc
jne
inc
dec
call
mov
rorl
mov
rcr
xchg
push
addr16
pop
lds
fsts
pop
adcl
mov
adc
adc
lea
repz
mov
in
xchg
cmp
inc
shll
rorl
sub
imul
negb
mov
popa
or
loop
adc
xchg
mov
leave
xchg
push
dec
and
jle
lret
aaa
ret
pop
adc
push
jae
xor
lods
ss
into
inc
push
cmp
fincstp
push
inc
add
xorb
add
cmpb
clc
aaa
jecxz
negl
lods
add
mov
insw
push
stos
scas
data16
jmp
mov
dec
into
or
sahf
adc
add
cwtl
cwtl
cmpsb
repz
lahf
bound
sbb
daa
pop
icebp
addl
or
shl
mov
out
out
fldcw
xchg
push
push
jle
sti
rcrl
jo
lea
cld
push
sbb
subb
ljmp
jns
pop
xor
push
adc
inc
notb
lahf
clc
adc
jno
mov
add
loop
gs
lret
fsubp
push
in
mov
ret
add
dec
push
pop
incl
popa
outsl
lock
movsb
push
ljmp
mov
aas
jne
dec
add
ret
adc
aad
inc
pop
push
add
push
repnz
push
popa
and
sbb
enter
jecxz
mov
xor
shll
and
popf
inc
xlat
cmp
jp
lret
xchg
xchg
mov
fs
xchg
pop
or
cmp
nop
mov
dec
addr16
lcall
aas
repnz
xchg
adc
adc
test
bound
and
sbb
add
dec
xchg
mov
sahf
mov
mov
sub
std
pushf
popa
sbb
ficomps
xchg
pusha
cs
cmovo
sub
cmp
fsubs
cld
ficompl
push
xchg
jmp
enter
arpl
scas
outsb
sbb
push
inc
inc
sbb
xchg
fadd
mov
movsb
imul
push
cmp
test
xor
pop
out
add
jg
rolb
outsl
dec
ret
sub
loop
ds
pop
aad
or
jb
repz
or
imul
rol
ret
sahf
pop
gs
sti
mov
push
fwait
mov
add
inc
insb
popa
sub
xchg
jnp
mov
nop
mov
sub
pop
xchg
popa
mov
jl
cmp
outsb
dec
or
outsb
sub
cmpsl
mov
cmc
es
ficomps
mov
push
push
add
stos
lods
inc
pop
sti
fbld
push
push
mov
mov
enter
ret
idivb
cld
inc
mov
dec
mov
std
add
std
mov
mov
bound
rcrl
divl
jns
leave
mov
shll
scas
sub
fwait
rorb
mov
push
mov
in
shll
lahf
and
add
mov
pop
sub
cwtl
shl
pop
cli
jae
xchg
add
je
in
es
fwait
andps
pop
fildll
mov
xchg
pop
jmp
push
mov
inc
push
movsb
fnstcw
mov
sbb
inc
arpl
or
je
es
es
dec
shlb
ja
clc
cltd
test
loope
add
fiadds
fcmovnb
insb
xchg
cmp
jo
int3
fs
fisubrs
sbb
scas
lock
mov
imulb
or
lcall
repz
jecxz
arpl
mov
sahf
or
aaa
divl
ret
sbb
cwtl
push
push
iret
xchg
push
in
adc
aas
mov
aam
outsl
sbb
sub
and
rcl
test
xchg
sub
subb
or
sbbb
sub
or
sub
inc
and
cmpb
data16
nop
xor
les
jo
lea
mov
enter
adc
out
xchg
sub
add
push
in
or
popa
insb
js
jmp
cmpsb
arpl
and
dec
sub
sbbb
je
mov
or
test
mov
enter
int
mov
push
push
imul
pushf
lret
push
push
int3
adc
imul
rcrl
jnp
xchg
out
roll
arpl
shl
aaa
fsubl
pop
cmp
mov
xor
push
mov
rcrl
repz
loopne
sbb
mov
pop
ficompl
pop
fs
aaa
add
sub
push
test
mov
orl
adc
pop
cmc
in
mov
cmovs
adc
sbb
push
sub
add
xor
dec
cmp
xchg
fists
mov
dec
or
iret
adc
and
and
push
pop
js
cs
xchg
jnp
std
jae
jns
mov
mov
or
jg
jmp
adc
fpatan
mov
push
enter
pushf
cwtl
or
addr16
pop
or
jno
push
xchg
cmpsl
sbb
imul
jno
mov
and
cmp
fistpll
ljmp
inc
jl
rcrb
xor
shl
lds
fistl
jo
int
xor
aaa
ljmp
ret
daa
fimull
js
and
cmp
cwtl
or
divb
and
arpl
ret
add
push
in
enter
add
jae
popa
mov
adc
sub
daa
fldenv
cmp
mov
inc
into
arpl
mov
in
xlat
or
mov
scas
add
mov
lahf
aas
fisubrs
mov
xor
ds
test
jl
mov
pusha
adc
in
leave
mov
jg
movl
cli
cmp
cmpsl
test
movsl
lds
insl
cmpsb
mov
aam
js
xor
mov
jl
cmp
ja
lods
push
mov
stos
fdivrs
and
xor
or
lods
xor
pop
nop
push
aad
clc
mov
pop
lods
aad
dec
push
fdivl
or
inc
pop
ret
mov
ficompl
lea
shl
jbe
int
je
nop
arpl
in
imul
stos
inc
test
jge
aaa
out
in
dec
lret
jl
jae
add
push
cmp
push
inc
arpl
or
in
push
test
sti
rorl
fcompl
mov
inc
pop
fistps
or
in
pushf
dec
xchg
jl
cmp
and
jle
push
fldl
ffree
or
sbb
jb
push
push
push
sbb
leave
sub
dec
int3
lret
adc
or
xchg
cltd
add
mov
push
sbb
imul
test
jnp,pt
repnz
add
xchg
cwtl
les
mov
setb
test
rolb
adc
std
mov
pushf
fscale
andl
add
jns
int
cwtl
sub
cwtl
xchg
pop
pop
lret
out
push
dec
add
int
and
pop
popf
pop
ror
push
out
push
mov
int
push
mov
mov
test
cmp
into
xchg
mov
rsm
xor
dec
xchg
fprem1
loopne
push
repz
or
sub
sub
jb
mov
fbstp
stc
xor
or
adc
fisubrs
aam
test
mov
sti
pop
cmovge
pop
nop
dec
je
ret
jne
cmpsl
scas
jle
vpmullw
xchg
pop
leave
mov
xchg
xor
adc
dec
loop
jmp
dec
inc
dec
adc
fldt
lret
pop
push
in
inc
test
sub
add
mov
out
push
mov
push
mov
enter
dec
adc
dec
pusha
cmp
sub
test
nop
jle
ret
hlt
cmp
pop
lods
adc
out
sbb
in
mov
mov
loope
add
xor
pop
pop
dec
cs
add
gs
fiaddl
mov
shlb
rclb
push
mov
cli
aad
inc
mov
dec
mov
sahf
notl
jp
add
jmp
shlb
xchg
xor
xchg
pusha
mov
ss
fcompl
add
cltd
loope
aam
xor
arpl
xor
xchg
xchg
dec
cli
add
mov
ds
push
or
es
iret
jb
adc
sbb
adc
sub
pop
fistps
mov
fcoms
out
pop
shl
and
inc
bound
jle
pop
lods
or
lahf
lret
sub
je
push
mov
add
jne
mov
ljmp
movsb
xchg
mov
int3
xor
and
aad
push
mov
or
leave
inc
rcll
imul
test
adc
arpl
or
or
sbb
sub
arpl
pushf
push
or
stc
inc
push
stc
adc
sahf
xor
pop
xchg
subl
fwait
das
jge
pusha
aaa
shrl
add
out
adc
fucomi
loopne,pt
cmc
test
cmp
popa
gs
push
mov
clc
fcos
push
jno
xchg
aad
push
and
inc
mov
jmp
and
aam
xchg
sbb
xlat
lret
mov
push
iret
sub
data16
sub
popa
mov
jns
mov
mov
gs
xchg
std
loope
repz
xchg
cmpsb
inc
push
out
fndisi(8087
test
insl
test
mov
mov
dec
int3
cld
lds
ret
call
in
mov
or
lret
in
test
sbb
and
xchg
enter
test
xor
or
or
pop
push
call
out
pop
xchg
xor
and
push
mull
xor
lret
mov
jp
or
inc
stc
test
sub
std
dec
add
xlat
push
imul
add
adc
aam
imul
and
test
inc
pusha
sub
ret
push
xchg
mov
nop
mov
outsl
das
mov
jl
jbe
nop
lea
cli
mov
clc
dec
out
cmpsb
cmpsl
cli
repz
test
lcall
mov
xchg
fildll
mov
and
inc
jle,pt
pop
or
cmpsl
cmp
test
xor
xchg
fsubrl
add
fdiv
pop
rcrl
mov
add
and
xor
inc
fildll
in
repnz
xor
bnd
mov
push
push
jnp
js
cmpsl
pop
shll
sbb
outsb
insl
fidivrl
jnp
scas
ficompl
add
pop
inc
mov
shrb
sbbl
mov
jp
pop
push
pop
es
push
aad
std
mov
push
int3
pushf
add
and
aad
cmpsl
in
fnstcw
hlt
cmp
or
add
out
adc
call
lret
dec
cmpsb
jno
mov
lds
scas
daa
jo
jg
xlat
lods
fwait
lods
fcmovnu
or
insb
adc
jae
bound
notb
and
or
cmp
icebp
cmpsl
sti
notl
ss
mov
pop
add
inc
les
mov
insb
mov
scas
es
mov
mov
aad
cmp
dec
push
fldt
iret
jp
mov
cli
iret
add
inc
or
ret
jnp
or
lea
test
bound
push
pusha
ds
sahf
mov
stos
xor
or
inc
ds
clc
mov
xchg
dec
cltd
mov
sub
addl
shrb
inc
rol
ja
pop
xchg
inc
jp
jecxz
inc
mov
mov
cmp
ret
cld
jb
cmpsb
add
dec
lds
fists
or
sub
sbb
and
imull
imul
pushf
dec
adc
mov
and
inc
call
in
scas
scas
dec
mov
jle
jae
pusha
cwtl
dec
das
or
cmp
pop
xchg
lods
mov
aad
sub
insb
xor
mov
xor
xchg
add
inc
pop
movsl
mov
repnz
scas
jmp
xchg
sti
sbb
les
mov
mov
iret
insl
pop
cmp
sbb
lret
xor
clc
daa
jge
mov
mov
fsubrl
lret
adc
and
sub
enter
sbb
push
in
je
sbb
pushf
mov
outsl
sbb
inc
mov
sub
in
and
push
fcomip
mov
and
loope
xchg
in
sbb
cli
adc
sahf
mov
inc
rcrl
inc
or
test
orb
shl
cld
fstps
lea
xor
jp
add
mov
testl
imul
mov
int
int3
adc
mov
jb
lahf
subl
cmp
pushf
inc
lcall
in
lods
or
bound
das
outsb
popf
xor
nop
les
mov
sti
mov
inc
pop
jmp
aas
or
test
inc
sbb
sub
cmc
xchg
inc
add
mov
add
cwtl
mov
icebp
and
pushf
push
mov
subl
fisubs
xor
std
mov
aas
sub
push
insb
push
sbb
xor
mov
jbe
incl
xor
mov
mov
add
loope
or
pusha
push
jbe
xchg
jo
pop
out
leave
pop
mov
fcmovu
lock
sub
scas
enter
aaa
iret
mov
and
pop
push
incl
fucomi
cmp
mov
test
pop
adc
inc
arpl
pop
or
mov
test
sub
inc
lea
cmc
out
enter
jp
sub
testb
xchg
adc
lret
mov
lds
cmp
mov
cmp
jno
dec
pop
add
push
fld
cmpsl
adc
mov
cmpsb
xchg
jmp
fstpt
bound
aad
scas
or
pop
mov
cmp
mov
out
push
add
lea
lock
in
dec
shrb
into
mov
add
leave
pop
stos
pushl
pushf
add
aaa
mov
in
push
test
divl
cmc
xchg
lds
xchg
aam
je
in
jge
and
inc
jle
aaa
shll
cmp
pop
loop
es
adc
xor
inc
out
mov
test
or
adc
xchg
aas
sbb
ret
jb
gs
scas
rorl
lret
insb
cmpsl
push
fwait
test
sahf
mov
push
icebp
lea
insb
xor
push
xchg
imul
dec
imul
xchg
inc
mov
vcvtsi2ssl
xchg
sub
test
xchg
gs
inc
jo
pusha
test
pop
jbe
xor
and
out
mull
out
cmc
sub
mov
sahf
cmc
xchg
pop
dec
das
jnp
push
pop
jo
mov
loope
imul
pop
fmul
repz
int
jge
sub
in
adc
xor
cs
push
insl
call
dec
test
jge
push
imul
dec
fwait
mov
inc
loope
mov
dec
popa
add
adc
es
aam
jae
xor
jnp
rcr
stos
inc
jp
testl
lock
pop
jmp
push
inc
dec
subl
sub
mov
sbb
jmp
pop
push
add
out
dec
xchg
xchg
mov
pop
jnp
dec
dec
xchg
in
stos
xchg
inc
out
out
in
loop
xor
js
lods
add
mov
jnp
test
inc
rcll
mov
mov
cmp
dec
push
pushf
loope
icebp
cmc
jge
push
mov
cmp
xchg
or
test
insb
sahf
mov
repz
sub
lods
sarb
lret
fdivrs
lret
shrl
mov
pop
imul
lods
dec
sub
push
xor
iret
or
or
xor
sub
push
sbb
hlt
pop
cmpb
sub
mov
pushf
mov
jl
lret
cld
int3
mov
jl
adc
ss
add
cmp
and
jl
jmp
pusha
and
xchg
xchg
je
xor
loope
mov
ret
addl
dec
pop
cli
je
push
xchg
nop
xlat
faddl
int
cmc
or
repnz
mov
insl
flds
shlb
xor
negb
add
out
fcmovbe
mov
call
bound
rorb
mov
sti
lods
popa
fisubrl
imul
mov
sbb
arpl
xchg
aam
cmp
push
fs
je
xchg
mov
popa
mov
dec
mov
pushf
adc
insl
mov
mov
subb
loope
add
mov
dec
test
sbb
fisubl
pop
sbb
dec
sub
mov
sub
inc
inc
pop
xor
out
aad
jl
popl
jne
or
mov
rcrl
out
in
data16
call
adc
insl
adc
jae
test
lahf
repz
int3
lock
je
test
loopne
xor
fstps
std
pop
xor
push
jecxz
xchg
sbb
jae
sbb
arpl
push
cltd
adc
mov
data16
jnp
or
adc
fcmovbe
xor
or
xchg
jo
adc
xchg
lea
int
mov
fwait
es
push
mov
ljmp
in
mov
sbb
sub
stos
rcll
cs
std
xor
lret
addr16
je
push
push
fdivs
cmpsb
and
fstpl
adc
jmp
stos
in
cmp
pop
jge
ss
dec
mov
into
pop
das
cli
sbb
mov
shl
and
mov
mov
jle
jnp
or
adc
xchg
mov
icebp
imul
mov
imul
jns
pop
mov
pop
ds
pop
or
stos
out
push
leave
inc
in
mov
mov
int3
popa
xchg
lcall
jmp
mov
and
push
or
inc
imul
pushf
ss
push
mov
cmpsl
les
int
out
jl
mov
add
jne
xor
js
cmpsl
xchg
cmp
inc
adcl
pop
xchg
das
arpl
je
xchg
ds
jno
inc
sbb
das
xchg
adc
jg
push
add
in
sti
mov
outsb
mov
adc
jg
ret
xchg
cmp
imul
rolb
out
xchg
pop
scas
mov
cmp
inc
mov
push
aam
popa
inc
mov
bound
fdivrp
loopne
adc
je
xchg
stos
jle
xor
jae
adc
es
fcoms
lcall
pop
lret
pop
testb
jmp
out
cli
ret
ja
xchg
mov
jle
push
das
rclb
das
lods
or
jmp
sar
push
xor
inc
xchg
jmp
mov
fwait
jge
je
insl
repz
stos
mov
lds
ja,pn
movsl
inc
dec
scas
fnstsw
pop
cmp
mov
ss
mov
or
lods
aaa
stos
dec
in
daa
jae
mov
daa
inc
ret
jg
fdivl
fucompp
dec
xor
cld
das
xor
cmp
add
sbb
mov
sar
ret
mov
push
mov
mov
xchg
xchg
shlb
and
inc
add
popa
sub
push
andb
sbb
pop
jl
xchg
test
inc
sub
mov
dec
les
bound
jne
scas
sub
fcoml
std
data16
mov
shrb
and
dec
dec
std
inc
lahf
sbb
sbb
add
inc
jbe
outsb
stos
imul
push
test
dec
rcrl
dec
jne
lea
and
mov
arpl
inc
push
and
inc
jno
insl
mov
push
arpl
imulb
push
shrb
shrl
gs
sbb
cmc
ret
scas
cld
leave
addr16
mov
xor
lret
daa
iret
outsb
test
and
pop
loope
mov
pop
mul
mov
test
pop
xchg
cmp
adc
rcrb
push
cmp
pop
gs
sahf
fldl
fcom
mov
daa
into
sarl
push
cmp
mov
jne
sti
test
sub
lahf
dec
sbb
aas
or
and
cld
ret
test
jle
pop
xchg
cmp
imul
sahf
cmp
cli
scas
dec
int
jg,pt
cmp
shll
inc
mov
cmpsl
loope
stos
dec
cmp
jmp
in
sbb
scas
pop
push
lea
and
inc
mov
mov
cmp
shr
dec
mov
push
int3
pushf
and
in
loopne
mov
lock
push
cli
enter
cmp
lock
xchg
ja
sbb
mov
jbe
jp
adc
xchg
imul
ljmp
adc
sarl
sub
test
movsl
mov
xor
cmpsb
inc
inc
jmp
add
and
lcall
stos
jge
cmp
in
shll
push
fnsave
outsb
stc
shl
sub
cmp
mov
movsl
mov
jne
frstor
divb
scas
and
cli
push
aam
xchg
notl
xchg
add
pop
push
xchg
cmp
enter
dec
lret
mov
pushf
pusha
inc
mov
sbb
aas
and
dec
dec
sub
mov
in
jmp
leave
add
pop
inc
mov
push
xlat
fisttpl
push
push
add
loope
sbb
cltd
push
aad
in
fdivr
or
popf
in
xchg
push
ret
xor
inc
sbb
js
xchg
mov
jno
or
stc
enter
add
inc
fisttps
call
in
xchg
dec
adc
mov
mov
add
xlat
iret
lea
bound
icebp
or
lock
mov
cmp
add
dec
mov
inc
loope
pushf
mov
add
daa
mov
pop
pop
or
and
cmp
fs
and
jp
cmp
mov
ds
adc
mov
leave
loopne
mov
nop
cmpsb
test
push
ret
imulb
sbb
mov
stos
inc
jbe
js
mov
mov
push
cmpsb
test
mov
in
movsl
push
fs
das
cltd
sbb
mov
sub
and
in
jb
xchg
stc
js
fwait
pop
dec
shlb
enter
push
cmp
in
mov
sbb
inc
lods
or
sub
pop
lods
nop
sahf
sub
mov
aad
pop
xor
into
dec
rcll
sub
aam
mov
es
bound
pop
dec
cmp
push
pop
test
sbb
out
fdivrs
rorb
int3
push
and
test
sbb
xchg
jb
mov
ja
sbb
fnstenv
inc
loopne
mov
mov
outsl
mov
sub
jmp
adc
mov
and
or
es
sub
mov
sbb
sahf
push
or
add
or
sub
dec
inc
rcll
fcmovne
push
xor
mov
adc
pushf
bsr
xor
test
cmc
dec
popa
test
pop
out
loope
rorb
cmp
dec
stos
and
in
cmc
imul
sbb
adc
loopne
or
inc
push
rcll
add
jae
ficoml
fsubl
xor
lret
pop
xchg
out
rcll
xor
rorl
cmpsb
or
push
sbb
mov
xchg
movsl
sbb
leave
push
out
pop
adc
js
shl
and
mov
add
jl
loopne
mov
stos
push
mov
aam
out
addr16
pushf
outsb
add
jo
popa
xchg
call
sub
mov
mov
sub
dec
push
jno
or
pop
add
mov
lret
lret
shlb
and
push
in
jl
jb
dec
loope
fdivr
pushf
sub
sub
pop
mov
cmpsb
ss
and
fidivrs
or
adc
loopne
fidivl
inc
std
out
push
jo
movsb
cmp
dec
enter
jbe
out
sub
outsb
stos
fistl
test
jecxz
sbb
pop
aam
xchg
cld
dec
adc
ret
loop
sub
lahf
fldt
sub
xor
shll
testl
out
push
xchg
in
fiaddl
add
mov
in
jo
lretw
loopne
jnp
iret
mov
jle
stos
xor
loopne
adc
cltd
inc
dec
lods
add
in
fadd
dec
adc
in
cltd
divb
cmp
pop
stos
daa
xchg
xchg
and
sub
test
push
sbb
jne
dec
sub
lret
aas
fdivrp
rcrl
mov
cmp
lret
cmc
pand
cmpsb
cli
sub
sbb
lcall
mov
in
out
insb
repnz
rcll
stc
add
push
je
imul
push
xchg
out
pusha
sub
mov
sbbl
fsubrs
push
or
mov
xor
test
stos
jb
cmpsl
mov
addr16
cmc
inc
js
outsb
lahf
xchg
cltd
pusha
xor
data16
das
lds
idivb
sub
adc
and
push
add
fwait
negb
jecxz
fimull
adc
adc
fcoml
mov
xlat
mov
mov
xchg
popf
lods
jne
or
jge
dec
jle
out
call
xchg
in
inc
pop
repz
xor
fsubs
inc
enter
into
or
aaa
sbb
data16
icebp
xchg
mov
xchg
pop
jno
inc
cmp
inc
lea
jb
aaa
pop
xchg
inc
adc
add
test
sub
stos
xlat
lods
scas
mov
adc
push
pop
push
xlat
out
jno
loopne
mov
daa
pop
adc
pmuludq
mov
sub
loop
mov
xlat
ljmp
push
xchg
je
repz
subb
push
mov
sbb
sub
and
pop
adc
enter
and
sbb
cmp
jmp
daa
pop
inc
ret
jle
stos
xchg
pop
pusha
stos
sbb
lea
cmp
aaa
aas
push
cmc
pop
insb
js
out
xlat
mov
sbb
sbb
hlt
or
cmp
stos
pop
rep
std
pop
cmp
cmp
sbb
shl
pop
jecxz
inc
push
pop
aad
movsl
jns
imul
and
lock
xchg
in
cmpsb
jae
fs
aad
test
jnp
and
leave
iret
je
jb
cmp
cld
inc
adcb
jbe
in
mov
cmpsl
lahf
xor
pop
lds
aad
data16
mov
int3
out
cmpl
and
mov
pop
stc
push
push
mov
std
or
inc
filds
rolb
repnz
outsb
push
insb
mov
adc
pop
cltd
rorb
leave
repnz
push
cmp
dec
mov
stos
dec
loopne
out
cld
pop
mov
sbb
inc
jmp
cltd
push
sub
sub
sbb
cmpsl
fsubrl
fimuls
inc
jle
inc
ret
leave
popa
int
arpl
pop
cmp
xor
or
push
test
mov
pop
scas
fistpl
sbb
and
mov
icebp
pop
mov
cmc
in
xor
jl
pop
xor
xor
lods
aam
mov
arpl
or
lret
xor
aas
pop
mov
xor
xor
ss
arpl
mov
mov
inc
adc
in
dec
addr16
icebp
ficoms
xchg
dec
fdivrs
loopne
add
setb
dec
into
add
xlat
xchg
enter
lods
adc
je
pop
inc
mov
fs
jp
push
test
mov
sbb
and
nop
in
gs
enter
in
xor
xchg
icebp
data16
pusha
or
inc
inc
sbb
ss
in
cmp
inc
mov
lods
icebp
jecxz
push
jp
or
frstor
insl
leave
in
jp
push
and
in
mov
repnz
movsb
aas
push
push
jne
repz
dec
mov
mov
jb
adc
push
std
mov
ret
mov
daa
add
int
inc
testl
mov
pop
adc
les
test
dec
pop
lods
xchg
inc
sbb
popa
and
push
imul
cmc
dec
movsb
leave
pop
popf
fcomps
clc
out
push
cmpb
xchg
inc
loop
ja
jge
xchg
pop
or
andb
aas
mov
xor
movsl
nop
jne
in
bnd
ss
xchg
ds
outsl
test
and
rcr
mov
lcall
sub
and
pop
in
scas
pop
pop
pop
clc
andl
jmp
mov
sbb
adc
enter
fldenv
pop
int3
jecxz
int
arpl
pop
jns
loope
sub
jge
dec
dec
sub
in
mov
insl
jp
repnz
jl
shll
mov
mov
or
xchg
addr16
mov
shl
push
lcall
pop
stc
xor
jae
xchg
jg
pushf
mov
jge
psubq
scas
or
pop
mov
outsl
and
adcb
out
gs
xchg
sbb
adc
loope
dec
xor
jno
adc
test
rorl
loop
pmaddwd
data16
push
push
in
mov
inc
jge
cmpsb
sahf
cmp
lret
cvtps2pi
xchg
and
or
cmp
in
add
push
jo
outsb
fstpt
mov
data16
lock
fwait
pop
push
or
aas
out
int
push
cld
and
pop
pop
subb
pop
jno
xchg
cmpsb
ret
arpl
inc
std
movsb
push
mov
jp
in
sbb
pop
adc
pop
jl
inc
sbb
dec
mov
aam
iret
arpl
push
stos
xor
clc
in
popa
mov
movsl
sti
dec
dec
int3
aas
stc
lock
insb
lcall
and
rorb
std
inc
cmpsb
cmpsb
outsb
mov
decl
movsb
and
xchg
ret
movsl
clc
xor
jnp
testb
sub
psubsb
mov
xchg
movsb
pusha
mov
add
imul
fdiv
sbb
aas
mov
sbb
lods
enter
mov
stos
cwtl
mov
repnz
mov
mov
jge
adc
mov
call
adc
lods
shlb
pop
int
add
jne
aad
add
sub
leave
sti
nop
vcvtss2si
scas
sub
jae
cmp
mov
mov
pushf
push
into
mov
andl
loopne
call
movsb
pop
push
and
fcompl
pop
jb
adc
dec
or
push
mov
jne
aas
addl
push
int
dec
in
test
in
fwait
push
int3
cmc
lahf
mov
stos
imul
ret
mov
in
lcall
clc
push
cmp
jns
out
dec
stos
in
mov
mov
xor
xchg
out
add
mov
sub
pop
sub
dec
inc
js
sarb
fisubl
or
imull
dec
cmp
xchg
dec
mov
pop
dec
test
aas
and
push
adc
push
jae
xchg
icebp
pusha
dec
movsl
jmp
inc
test
inc
adc
cli
sub
fcompl
imulb
test
push
inc
mov
fsubrl
int3
pop
cmp
adc
addl
stc
imulb
mov
inc
jnp
jnp
sti
jp
sahf
ds
jae
push
fcmovnu
jmp
je
jp
invd
jmp
lea
fimull
add
popa
sahf
cmp
push
mov
sahf
das
sahf
sub
push
stc
or
packsswb
mov
lods
mov
jae
lret
jmp
dec
xchg
inc
hlt
jge
int
sbb
repnz
add
xchg
int
popf
mov
mov
fdivs
cmp
lret
pop
xchg
and
test
add
dec
mov
ficoml
pop
mov
cmp
movsb
cs
aam
mov
jecxz
lahf
clc
inc
sbb
in
sbb
sub
jp
loopne
xor
ret
mov
ret
addr16
fdivrs
cmpsb
adc
fstpt
rclb
popa
mov
andb
sbb
jae
or
stos
pop
subl
pop
shlb
test
dec
mov
or
lods
lahf
scas
or
mov
push
sub
in
dec
cwtl
adc
in
loopne
int3
movsl
sbb
sbb
test
push
jb
cmp
push
jb
and
dec
out
incl
stos
lea
cli
pop
repnz
push
dec
ret
sbb
adc
pusha
cmpsb
sub
mov
add
rcrl
mov
mov
inc
mov
cli
jmp
and
movsb
imul
insl
pop
pusha
ret
add
dec
push
es
ret
pop
repnz
add
fstl
pop
xor
lret
inc
shrl
loope
sbb
lcall
jb
jno
cmp
cmc
lcall
movsb
mov
push
filds
cmp
sub
mov
sbb
and
sub
lods
push
in
add
rolb
or
pop
sbb
cmp
out
loopne
sbb
cli
sbb
roll
or
pop
pop
cmp
mov
inc
push
mov
dec
mov
jno
mov
mov
sbb
scas
mov
hlt
dec
push
sub
outsl
push
pop
mov
sub
andl
mov
and
adc
mov
and
mov
sub
lahf
lea
xor
or
cmp
jl
xor
xor
lock
in
jp
lds
mov
inc
faddl
cmp
push
jns
dec
lea
sbb
sbb
inc
cmc
pop
das
movsb
xor
adc
stos
loop
xor
or
mov
fsubl
adc
addl
nop
loop
enter
xor
fwait
popa
lds
push
mov
clc
xchg
flds
or
into
push
jp
js
add
add
xlat
fwait
cmc
imul
push
add
in
test
xchg
call
ficoml
cmp
sbb
enter
in
sbb
push
movsl
call
mov
push
dec
mov
loopne
xor
daa
jecxz
sahf
scas
xchg
add
and
scas
jo
roll
push
xor
mov
arpl
cs
pop
dec
mov
mov
pusha
inc
dec
and
hlt
and
es
dec
and
jg
mov
dec
fdivl
dec
xchg
ljmp
mov
popf
les
nop
repnz
out
aaa
sahf
sbb
fs
test
bound
xorb
in
dec
xor
inc
mov
push
pop
sub
in
inc
daa
push
mov
xor
dec
std
pop
fistpl
xchg
add
leave
outsb
xor
mov
cmp
mov
sub
insb
adc
das
lea
bnd
int3
mov
cmp
and
jnp
pop
mov
cmp
inc
mov
dec
xchg
lea
mov
pop
clc
adc
dec
xlat
insb
push
ffreep
roll
adc
cmp
sub
pushf
adc
fisubl
mov
mov
inc
dec
inc
ffree
cmp
push
ja
cmp
aas
mov
inc
xor
mov
pop
sbbl
mov
mov
inc
sahf
fmull
dec
daa
in
je
outsb
jp
push
loope
pop
test
cmp
xlat
dec
lret
ss
xor
add
xchg
fdivrl
ror
das
xchg
xor
mov
out
popf
pop
cmp
and
sub
rcl
or
push
sbb
cld
mov
lret
mov
dec
jns
adc
sub
and
fidivrl
and
cmp
pop
in
lret
jo
xor
mov
testb
push
inc
es
jle
dec
xor
jl
repz
bound
pop
arpl
pop
jl
int
imul
mov
jmp
pop
nop
sub
cmp
pop
mov
daa
push
loope
xor
or
jecxz
or
fdivl
out
cmp
rcrl
sbbb
jne
sahf
mov
add
test
jb
push
orl
loope
fmull
adc
mov
add
rcrl
cmpsb
insl
mov
mov
lahf
mov
jnp
fisttpl
and
repnz
fdivrl
popf
shrl
cmp
in
sub
fs
jnp
fbld
ds
push
mov
inc
jl
cmp
jle
jle
mov
mov
xchg
xor
flds
ds
test
repz
cmp
insl
xchg
jg
mov
pop
lahf
in
or
daa
outsl
mov
in
push
movzbl
fldt
mov
js
daa
mov
push
lea
mov
xlat
xchg
shlb
pop
stos
pop
fidivl
cmpsl
ljmp
insl
xor
jbe
popf
xchg
cmp
add
je
xchg
out
out
dec
inc
sub
adc
sub
mov
clc
hlt
mov
mov
push
jle
mov
sahf
nop
dec
mov
insb
clc
es
daa
sub
adc
pop
dec
mov
insb
and
repz
das
cmp
cmp
cli
mov
je
add
cmp
pop
cltd
xchg
loopne
jns
sbb
loop
pop
fbstp
add
xchg
movsl
insb
jp
repz
xor
xor
mov
stos
or
cltd
or
outsb
rcrl
jg
adc
and
aaa
lret
aam
inc
adc
cli
and
aam
mov
mov
dec
cwtl
rcrl
jle
push
jns
in
into
jne
push
push
daa
or
insb
jp
pop
mov
imul
rcrl
mov
and
push
mulb
sbbl
int
inc
test
enter
adc
dec
loop
cmp
lods
xlat
repnz
cmp
jnp
insb
add
adc
nop
sub
das
pushf
sub
sbb
adc
jmp
inc
out
je
scas
push
stc
mov
push
mov
ret
test
pand
aad
xor
dec
pop
add
js
movsb
xchg
sbb
xchg
or
jge
dec
orl
and
xchg
sarb
mov
or
nop
rcr
imul
push
jns
leave
stos
f2xm1
xlat
mov
mov
repnz
jae
adcb
jle
es
roll
mov
insl
mov
cmp
enter
pop
out
jp
insl
sbb
inc
sti
mov
cltd
adc
jle
pop
and
dec
mov
sbb
test
fistpl
mov
push
movb
push
jnp
dec
mov
jbe
lahf
out
test
jmp
sbb
je
in
xchg
xor
cmp
add
fs
cmp
daa
dec
roll
ja
inc
js
into
lods
scas
mov
mov
adc
out
cmpsl
inc
sbb
jmp
mov
and
xchg
inc
cmp
lock
jo
stc
test
mov
xor
or
mov
xor
pusha
sti
fidivs
scas
es
enter
imul
mov
cmc
in
data16
mov
mov
adc
mov
cmpsl
cmp
mov
sbb
and
push
shll
lock
mov
xor
jmp
insl
mov
push
divb
mov
ficomps
xor
push
xchg
add
mov
inc
cli
movsb
cld
or
and
subl
movsb
sahf
stos
rcr
dec
ror
xor
into
cmc
sub
or
inc
mov
inc
test
retw
dec
xchg
lahf
push
inc
pop
and
cltd
imul
sbb
sub
cwtl
shr
test
lds
inc
jg
mov
scas
out
cmpsb
sub
icebp
xor
push
rcl
sbb
push
rcll
mov
jns
adcb
mov
xor
stos
jnp
cs
and
popa
ret
int3
jbe
shrb
cmpsb
jmp
cmc
push
idivl
cmp
incb
movb
push
push
mov
imul
imul
test
cmp
insb
cmpl
inc
push
cmpsl
inc
mov
outsl
or
jg
das
add
arpl
xor
and
cltd
sbb
gs
stos
cs
enter
mov
cmpsb
ds
pop
in
icebp
mov
push
dec
scas
cld
inc
xor
dec
cltd
pop
out
mov
int3
sub
push
idiv
dec
xchg
ds
sub
aam
pop
xor
movsb
jbe
jge
push
inc
pop
push
hlt
mov
pop
pop
pushl
notb
repnz
shrl
mov
mov
daa
icebp
loopne
jecxz
adc
inc
dec
pop
pushf
dec
sbb
scas
and
cwtl
jp
dec
pop
test
in
ja
mov
mov
das
stos
cmp
aam
sub
movsl
aam
xor
jmp
add
mov
subb
inc
lods
mov
je
pop
and
arpl
jg
and
xor
xchg
lret
aad
adc
mov
rcrb
cmp
enter
sub
arpl
daa
xchg
jecxz
or
and
sub
fmulp
mov
mov
rolb
cmp
nop
sub
jmp
mov
addr16
mov
push
sti
sub
hlt
jno
aad
pop
mov
loopne
bound
mov
xchg
movl
push
pop
lret
push
repz
scas
enter
iret
clc
lea
ret
sbb
pop
scas
adc
jecxz
in
xchg
and
jo
inc
stc
mov
mov
mov
push
and
int3
cmp
data16
les
stos
fidivrs
imul
jge
outsl
fldenv
adc
pop
dec
push
loope
or
jo
popa
jp
jecxz
les
mov
mov
test
mov
test
xor
xor
test
insb
pop
outsl
cmp
orl
adc
sbb
and
jl
add
push
scas
je
cmpsb
or
sub
sbb
out
loope
test
loope
inc
ret
jl
rcll
xchg
mov
aam
divb
add
call
xchg
mov
addl
mov
pop
xor
add
rolb
push
pop
rcrl
mov
mov
iret
dec
push
mov
inc
mov
idivl
xchg
inc
ja
aad
jl
cmpsb
dec
push
into
inc
roll
jno
mov
scas
mov
pop
push
outsb
mov
mov
jno
test
sbbl
test
cmp
adc
xlat
mov
xorl
xchg
add
dec
push
cmpsb
icebp
fcmovnb
call
jne
leave
add
mov
adc
or
inc
fwait
int
or
jle
sahf
sbb
xchg
cmp
sub
inc
sub
sub
adc
dec
inc
add
ljmp
std
mov
cwtl
icebp
andl
mov
jge
adc
sub
repnz
cli
repz
add
pop
lods
movsb
ljmp
ljmp
call
aam
inc
scas
imul
sbb
lret
adc
cmp
int
mov
aas
or
xor
fnstcw
push
adc
and
pop
fisttps
addr16
int
inc
xchg
fsubs
dec
mov
div
and
cmp
mov
jae
mov
mov
dec
dec
mov
psubsw
out
and
fdivrp
scas
nop
lea
and
inc
fs
je
xchg
cwtl
aam
push
cli
movb
or
das
pop
cltd
xlat
out
ljmp
sbb
cmp
jne
inc
stos
mov
pushf
scas
and
xchg
or
fimull
cmc
jp
dec
sub
xchg
jmp
jecxz
movsl
push
push
mov
xor
xor
xor
and
mov
sub
cs
aas
xchg
loopne
jb
adc
iret
push
push
pop
push
fsubl
mov
xchg
mov
es
mull
jbe
out
push
subl
fmul
sub
lret
out
mov
test
mov
mov
movsl
push
das
into
aas
fs
jecxz
add
cs
stos
pop
jecxz
and
add
jecxz
sub
aad
cmc
int
leave
jge
jp
scas
repnz
sub
and
popa
xorb
push
mov
xor
push
xor
lahf
or
insb
cmp
ja
inc
pop
add
mov
pop
mov
inc
imul
jmp
aad
add
out
sbb
sbb
cs
mov
movsl
dec
fwait
leave
enter
push
aad
push
mulb
cmpsb
push
aaa
jl
adc
mov
dec
lods
ljmp
mov
adc
bound
mov
loope,pt
xchg
mov
adc
and
stos
sbb
jge
aas
in
xchg
popa
loope
inc
rcr
push
add
rcrb
push
inc
movzwl
out
xchg
dec
mov
out
repz
lods
sbb
or
fnstsw
pop
inc
or
and
addb
pop
pop
lcall
lock
mov
cmp
sbb
int
cli
push
cmp
dec
jns
arpl
inc
hlt
push
xchg
mov
cmp
push
test
inc
add
inc
push
push
inc
lcall
inc
cmp
sar
mov
xor
mov
ss
or
cwtl
mov
lods
je
aam
outsl
push
mov
int3
sbb
cli
cli
lods
jo
xchg
leave
mov
icebp
ret
jecxz
adc
pushf
scas
add
hlt
ret
xchg
cmp
inc
jno
test
scas
cmp
xor
mov
or
cmc
sub
sbb
cmp
xchg
sub
lock
lds
push
rcrl
je
fisttps
out
aas
insl
pop
stos
shl
loope
xchg
jnp
popf
and
and
insl
or
fdivrs
fistps
stc
lock
inc
mov
mov
mov
dec
fdivrl
and
sub
xor
cmp
ds
fisttpll
and
not
jno
loopne
inc
jle
rcl
stos
lock
mull
jge
and
mov
push
add
stc
cmpsl
xchg
inc
xor
cs
orl
ret
mov
popf
push
addr16
cmp
sbb
movsb
xor
mov
js
ja
sub
cli
or
cwtl
filds
aam
sub
popa
or
out
dec
lock
mul
nop
xor
xor
jae
cmpl
ret
and
int
sub
lds
fstps
or
mov
push
inc
mov
sbb
addr16
sbb
adc
or
or
xchg
pop
aam
lods
insb
inc
ss
lods
and
repz
xor
inc
and
add
testl
xor
xor
pop
out
addr16
push
std
bound
jns
mov
lds
cmpsl
out
push
lret
ret
sub
nop
xor
xor
cmp
xor
lret
dec
and
push
and
subb
scas
mov
faddp
aam
idiv
cld
jno
out
mov
push
imul
shrb
movl
push
cmp
jnp
shrl
fwait
cmp
rolb
sbb
je
sub
add
ss
cltd
adc
repnz
loop
cmp
pop
push
lcall
lahf
icebp
adc
int3
je
movsl
sub
outsl
and
dec
arpl
fiadds
jne
addr16
clc
sub
adc
mov
mov
sbb
mov
push
push
mov
push
pusha
sbb
mov
ret
and
movsl
in
mov
xchg
push
inc
int3
sbb
mov
push
mov
adc
lds
fs
js
mov
pop
jg
pop
push
xchg
adc
or
repnz
adc
sahf
mov
fwait
mov
push
daa
xchg
das
jnp
dec
repz
sub
jge
test
fidivrl
xchg
ss
dec
xor
jmp
mov
lcall
test
loope
arpl
xchg
push
or
xchg
pop
addr16
and
repnz
push
inc
pop
cs
movsb
mov
jne
aad
insl
or
orl
out
and
loope
into
inc
jns
xor
xlat
push
daa
mov
xchg
daa
xor
cmp
cmp
mov
lock
pusha
cmp
and
rcr
or
pop
mov
sbbb
jbe
cmp
or
xchg
jg
shl
xor
addb
pusha
mov
mov
adc
dec
icebp
or
mov
or
leave
xchg
pop
jle
inc
fidivl
stos
jge
mov
xchg
pop
cmp
filds
cli
jl
xchg
mov
sbb
or
icebp
inc
scas
xchg
les
insl
push
cmp
andl
xchg
imul
daa
outsl
in
xchg
push
scas
ds
paddsb
mov
rcrb
and
cltd
mov
xlat
in
je
fsubs
rclb
add
sbb
js
pop
adc
call
aam
mulb
xchg
mov
pop
adc
test
popa
pop
inc
push
mov
lea
xchg
lds
cwtl
in
jb
in
jmp
movsl
xchg
mov
jg
lds
lods
inc
mov
inc
xor
cmp
sarb
xchg
or
lea
mov
adc
loop
mov
out
es
inc
sbb
stc
xor
daa
adc
outsb
xlat
or
sub
adc
push
aam
xor
sbb
push
loope
cld
scas
loop
mov
push
dec
mov
andb
vmwrite
adc
stc
and
gs
push
xchg
jo
mov
sbb
fsubrs
into
sarb
pop
addr16
pop
je
stos
mov
jnp
pop
add
mov
push
paddsb
pusha
daa
test
loopne
add
add
loop
in
fmuls
and
dec
sar
jl
cmp
test
ss
in
adc
jnp
lea
sub
ss
rcl
xor
data16
xchg
ljmp
bound
pop
iret
bound
mov
stc
pop
jmp
dec
aaa
loopne
xchg
cmp
cmp
das
scas
pop
sbb
sahf
xchg
inc
pop
insb
mov
lahf
dec
xor
dec
inc
stc
mov
push
lret
xor
mov
scas
push
mov
cli
mov
bound
addr16
repz
inc
jg
sub
popa
fadds
jmp
popf
push
loop
push
mov
in
inc
cmp
jmp
shll
repnz
std
lea
cmpsl
jnp
add
fcomi
add
leave
push
inc
ds
push
xlat
arpl
out
jb
cli
arpl
arpl
adc
sub
dec
jge
int
jae
mov
pop
mov
mov
popf
fwait
leave
xor
sbb
xchg
cltd
lahf
into
mov
sub
sbb
in
mov
sbb
sbb
dec
lods
call
loopne
cli
mov
in
out
xchg
sbbb
pop
add
mov
sarb
pop
sbb
mov
ror
out
jnp
adc
mov
ja
cmp
into
fdivrp
popa
lret
pusha
das
in
add
ffree
lahf
test
push
jae
in
push
or
push
cmp
inc
adc
xor
pushf
ja
xor
bound
les
shll
dec
pop
mov
sub
cmp
sbb
ret
sub
repz
aaa
sbb
fdivl
sbbb
scas
or
inc
push
fwait
add
call
sub
jle
cltd
and
pushf
sti
xor
xchg
outsl
jo
gs
mov
sub
out
add
cwtl
pusha
mov
outsl
xor
or
mov
mov
mov
dec
ret
adc
loop
inc
addr16
cltd
imul
add
dec
jbe
mov
cltd
int
mov
and
rcll
cli
hlt
jp
rorb
out
xor
mov
ror
fidivrs
das
mov
iret
shrl
and
sbb
sub
gs
cmpb
dec
cmpsb
add
lock
push
push
mov
insl
mov
leave
test
sbb
mov
mov
sbb
aaa
xor
pop
iret
sub
xchg
xor
gs
sub
lret
push
psrad
mov
hlt
push
jnp
gs
aam
push
adc
test
fnstenv
sub
or
push
loope
mov
test
cli
push
add
xchg
ret
loop
lock
inc
xor
or
push
xlat
mov
loopne
clc
dec
sbb
mov
test
xor
xor
mov
xchg
pop
adc
jnp
jbe
int3
push
jp
inc
xlat
add
pop
mov
rcrb
push
add
mov
pop
ret
addr16
push
sbb
dec
and
or
pusha
push
decb
lock
xlat
outsl
jp
je
imul
pop
sub
inc
dec
cmpsb
cmpsb
mov
fmull
mov
daa
push
test
pop
jecxz
inc
sarb
cwtl
pop
scas
daa
clc
pop
js
rolb
ret
sarb
lret
pop
sbb
sbb
xchg
or
xchg
xchg
or
lret
sbb
dec
mov
jnp
andl
xor
jno
sub
pop
cmp
cld
movsl
cmp
sbb
popf
int3
in
jae
cmc
lock
mov
mov
sarb
std
popf
xor
mov
add
mov
lret
cmp
sub
xchg
rol
in
mov
dec
lret
mov
dec
out
or
neg
mov
sub
fisubl
mov
shl
ds
xchg
jb
imul
pop
cli
mov
xchg
mov
dec
insb
push
fstps
jo
subb
mov
movsl
les
out
push
lahf
fdivrs
aas
mov
pop
cli
add
lods
cli
in
imul
js
fmul
ret
fimuls
push
test
push
je
jmp
xchg
popf
mov
fs
cmpsb
lret
add
or
push
int3
push
push
pushf
call
inc
push
sub
mov
and
test
shr
sub
in
jl
dec
movsl
jno
sbb
or
adc
mov
jae
jae
sub
inc
add
xchg
and
sub
call
imul
popf
cltd
adc
loopne
push
mov
out
ret
xchg
adc
xchg
sub
and
sbbb
mov
sbb
push
clc
lahf
mov
lea
sub
add
arpl
dec
push
xlat
inc
mov
shrl
push
arpl
jp
iret
lret
bound
dec
or
cld
jmp
fadds
xchg
fmul
adc
adc
repnz
lea
pop
jge
iret
ja
movsl
sbb
lea
mov
dec
popf
call
fidivs
rorl
mov
sbb
add
mov
andl
test
jge
lods
call
sub
int3
addr16
dec
test
push
insb
jo
mov
rolb
nop
negw
adc
fsubrs
enter
xsha1
cmpsb
dec
sbbl
aas
jne
dec
idivb
pop
dec
dec
add
dec
or
pop
rorb
xorb
mov
xchg
push
out
pop
rcrb
mov
mov
or
sbb
sub
jo
ret
xchg
mov
push
sub
test
shlw
jnp
popf
sub
test
sbb
lods
lret
ret
pop
jmp
adc
xchg
lahf
jnp
adc
xor
loope
add
gs
and
fdivrl
data16
push
outsb
fsubrs
leave
imulb
mov
fxtract
stos
pop
imul
mov
jl
jne
sub
mov
or
jb
inc
lret
pop
cmpsb
rcr
xchg
and
sub
adc
push
push
adc
shlb
in
adc
enter
pop
pusha
das
push
jge
mov
cmp
lea
cld
add
mov
sbb
outsb
je
aad
fsubr
aas
push
xlat
cmpsl
pop
cmp
adc
dec
jp
and
and
xchg
inc
loop
fbstp
pop
int
inc
data16
jae
xchg
sub
std
ljmp
mov
add
out
cli
push
mov
push
stos
ffree
iret
dec
jl
mov
sub
outsl
add
xchg
dec
andl
repnz
sub
sbb
push
outsl
pop
jge
out
pop
adc
ret
in
cmp
inc
inc
movsb
ljmp
mov
out
test
cmp
mov
adc
or
lods
outsl
sub
dec
push
bound
cmp
mov
aas
and
int
sub
rclb
int
daa
outsb
and
xchg
pusha
mov
mov
pop
fisubl
jg
fcmovnu
loopne
ss
xchg
sarl
cmp
lret
sbb
ret
jne
mov
pop
sub
push
mov
rcrb
orb
jecxz
adcb
or
stos
mov
mov
push
sub
xchg
clc
add
adc
fsubrl
mov
popa
add
mov
inc
xor
lea
stc
jge
adc
push
sub
cmp
and
lea
fildl
cmc
dec
shl
inc
sub
dec
aaa
addr16
mov
xor
dec
pop
cld
cli
and
imul
mov
scas
and
and
cmp
and
mov
jp
test
adc
push
popf
inc
movsl
ljmp
cmp
dec
ret
jno
pop
pop
xchg
ficompl
std
sti
popf
fs
popf
les
mov
mov
jne
xor
ss
jl
xchg
pop
cmc
ss
xchg
out
std
xchg
cld
sbb
popl
cmp
xchg
sub
std
jmp
lock
js
jbe
xor
inc
in
ror
mov
push
pusha
lods
and
mov
dec
and
arpl
ret
loopne
adc
lods
sub
pop
sub
jbe
je
cmp
pop
lds
aad
jo,pt
aas
das
sbb
inc
mov
jno
ss
fistl
dec
shl
xor
addl
sub
aam
push
fdivl
pop
push
jae
ret
cvtpi2ps
sbb
lds
or
sub
mov
ret
repz
or
lods
rcll
xor
bound
adc
out
dec
daa
push
dec
xor
repz
xchg
and
lcall
mov
pop
aam
jae
lret
xor
scas
xchg
enter
insl
cli
jecxz
outsl
lret
lcall
jb
call
test
loopne
xor
fucomi
jns
push
sbb
iret
ja
shl
ret
jnp
int3
xor
push
jecxz
mov
out
stos
es
inc
cwtl
dec
xor
pushf
pop
add
jbe
pop
push
lea
fldcw
shr
push
int
gs
xor
pusha
xchg
pop
pop
jecxz
push
xchg
inc
pop
loopne
out
lds
pmaddwd
xlat
mov
xlat
jnp
mov
and
cmpsb
mov
lcall
pop
scas
sub
repz
adc
jbe
and
icebp
dec
mov
inc
jnp
pop
iret
cwtl
push
fcmovne
out
lea
int3
pushf
outsb
xchg
jmp
pusha
in
sbb
or
cltd
lods
xchg
adc
cmpsb
cmp
cmpl
inc
mov
add
push
lret
pop
lcall
inc
shll
push
xor
xchg
push
cmp
lahf
add
xchg
jecxz
cmpsb
jbe
and
mov
jle
out
ret
movl
sbb
sbb
adc
sub
popa
push
add
jp
lcall
cmp
or
in
rol
pusha
ja
xor
xor
in
fstps
or
dec
mov
loop
aas
pusha
test
add
mov
inc
push
sub
xchg
dec
leave
mov
adc
xchg
and
rorb
stos
negl
sahf
icebp
mov
cmp
and
xor
or
nop
outsb
or
push
mov
mov
lods
lret
or
cli
jmp
adc
add
sarb
movsb
pop
repz
adc
call
roll
mov
loopne
add
pop
jg
mov
inc
xchg
sbb
insl
jae
shll
or
scas
or
inc
in
push
insl
or
and
push
mov
ret
or
or
test
negl
ja
push
mov
xor
sub
add
fcom
inc
mov
xchg
fsubs
test
pop
mov
mov
or
int3
sbb
ss
std
fcompl
xchg
inc
aaa
push
sub
inc
call
push
push
adc
sub
mov
hlt
mov
daa
int3
outsl
sub
in
mov
cltd
clc
enter
ja
cmp
insb
sbb
addb
push
scas
xchg
xor
lahf
or
xchg
call
add
xchg
loopne
mov
sbb
movsl
add
les
mov
ucomiss
sbb
xchg
and
xchg
jo
clc
hlt
jge
mov
or
jae
ss
push
mov
xchg
mov
add
sub
movsl
cwtl
push
push
push
das
shrb
mov
xor
pop
pop
cmp
sahf
sbb
test
in
and
shrb
xchg
loop
fisttps
out
xlat
or
call
sbb
lret
je
lret
outsl
movsb
sub
xor
cmp
mov
push
movl
repnz
sarb
and
popa
sqrtps
prefetchnta
ds
adc
out
and
outsl
dec
fs
xchg
std
fisubrl
lea
fwait
sub
ficompl
jle
arpl
inc
rorl
aaa
jno
inc
pop
mov
out
mov
mov
mov
sub
sub
mov
cld
push
in
ficompl
inc
pop
sub
in
or
sbb
sbb
stc
mov
dec
fisttps
push
push
imul
push
fnstcw
pop
xor
sbb
fcompl
test
pop
hlt
xlat
or
xchg
sahf
sbb
push
fistl
mov
sar
cld
and
push
sub
into
sub
sub
add
jnp
sub
xor
add
scas
out
int3
aam
sti
pop
call
push
xor
shrl
sbb
dec
xchg
pop
daa
push
inc
cli
push
add
jb
jp
sbb
pop
rol
int3
jae
iret
out
push
loopne
mov
xor
popf
pop
ror
ss
xor
and
or
push
pop
dec
cmpl
cld
addr16
fucomp
or
sahf
in
jle
and
xchg
jp
es
mov
mov
loope
sbb
popa
ss
repnz
mov
lds
ja
out
out
mov
mov
add
push
rcrl
mov
mov
dec
jns
mov
push
insb
fisubrs
nop
rcrb
sub
cld
es
adc
inc
in
in
sahf
pusha
ja
sbb
dec
in
stos
xchg
mov
xchg
int
push
and
mov
push
jmp
mov
lods
shll
xor
nop
jb
ja
test
stos
xlat
add
sar
jae
pushf
filds
cmp
add
cmp
stos
arpl
fsubl
out
roll
push
mov
and
xchg
fldl
add
dec
mov
andb
mov
push
movsl
pop
mov
jo
dec
cli
push
jbe
adc
sbb
loope
movsl
mov
cmc
cmp
lcall
stc
test
jmp
movsb
xchg
mov
jmp
ret
jg
inc
in
cmp
aam
lea
and
jecxz
adc
pop
pusha
dec
push
inc
pusha
gs
or
jecxz
icebp
xlat
imul
jmp
call
cmp
xor
pop
push
sub
inc
icebp
out
in
ret
pop
stos
or
fisttps
mov
push
test
jmp
rorl
xchg
jae
inc
repnz
push
adc
iret
mov
das
imul
mov
inc
sbb
inc
outsl
and
sub
icebp
sbb
inc
arpl
xorl
iret
filds
rclb
jp
stos
dec
lcall
xchg
sub
push
add
loopne
dec
and
cmpl
dec
push
jno
cmpsl
stos
into
mov
cmp
adc
movsb
cmp
mov
cwtl
test
enter
stos
popl
sti
mov
out
jmp
push
or
mov
xor
lcall
dec
mov
jge
xor
lock
sahf
movsl
jecxz
stos
in
mov
addr16
sub
jbe
imul
loope
hlt
push
add
ret
mov
cltd
sub
rclb
mov
mov
inc
fiadds
adc
je
add
inc
jmp
dec
ret
cli
xor
sub
push
inc
dec
and
fbld
adc
lods
xor
xor
lcall
lods
push
mov
jnp
xchg
or
jge
jle
lea
add
xor
sbb
inc
and
inc
fldl2t
rorl
les
pusha
xor
fbstp
sbb
movsb
inc
push
cmp
outsl
insl
movsb
and
mov
xor
ljmp
enter
cltd
xor
nop
mov
or
cmp
jnp
sub
in
push
mov
inc
fcmovbe
pop
test
xchg
sub
lret
sbb
sub
inc
loop
daa
jb
clc
cmp
outsl
cwtl
outsl
inc
jo
inc
adc
push
iret
test
dec
sub
repz
ret
jg
mov
xchg
loop
popa
inc
aas
xor
dec
loope
mov
inc
jne
imul
clc
cmp
jg
lret
ja
sub
sbb
clc
lret
movsb
adc
xchg
jecxz
lea
sub
mov
mov
xchg
gs
jno
push
mov
push
sarl
mov
sub
mov
sbb
xchg
and
stc
hlt
aas
out
mov
and
lea
sbb
xor
daa
hlt
fucomip
addb
dec
lcall
ret
mov
stc
jmp
lahf
cli
insb
add
adc
rolb
or
mov
scas
jl
jns
cli
addr16
inc
jnp
push
hlt
jne
cmpl
cmp
adc
stos
dec
lcall
testl
xor
pop
test
in
insb
aas
and
mov
cmp
jnp
imul
cli
jb
iret
leave
push
mov
cs
jbe
jo
clc
xor
jbe
cmp
lret
sub
test
pop
fnstsw
xchg
insl
adc
icebp
cmp
ror
int3
sti
out
adc
lret
jnp
movsb
mov
inc
bswap
jae
sbb
out
lods
jl
std
lods
insb
pop
or
lock
push
inc
mov
sbb
or
das
sbb
stos
jns
jl
mov
pusha
cmpsb
xor
jge
pop
dec
cwtl
pop
mov
pop
mov
jecxz
loopne
mov
pop
sub
es
inc
adc
xchg
fdivl
dec
jle
xchg
push
mov
xchg
and
push
cltd
jbe
fcoms
cli
xchg
ds
dec
leave
sbb
push
cwtl
pop
iret
mov
or
mov
sbb
dec
mov
hlt
icebp
add
xor
dec
cmp
insl
rcrl
adc
pop
loope
lds
or
sbb
cmc
int3
add
sub
ss
hlt
fdivs
sub
mov
adc
movsb
push
lods
mov
stc
add
lods
clc
cltd
xor
in
cmpsb
mov
in
loop
jae
xchg
aad
bound
into
int
int
lods
add
jb
mov
cmc
ljmp
fdivl
lea
arpl
test
inc
mov
inc
mov
xchg
movsb
mov
fisubrl
jno
xchg
cmp
outsb
inc
mov
mov
mov
xchg
ret
stos
jno
lods
shlb
fs
ffree
jl
aam
bound
mov
mov
insb
mov
mov
push
shrb
sub
mov
mov
sub
movsl
inc
das
jae
push
pop
adc
loop
ljmp
rclb
xchg
ds
jecxz
les
mov
sti
repz
mov
pop
js
xchg
aaa
xchg
dec
xchg
testb
in
mov
popf
int
stos
repz
jb
imul
hlt
outsb
mov
ret
push
push
or
mov
lods
data16
jle
jge
sbb
push
inc
sahf
xor
or
push
xchg
lret
cmp
dec
call
mov
js
addr16
pop
pop
cmpsl
or
push
mov
sbb
mov
push
push
iret
repnz
shll
rorl
rcll
mov
insb
mov
push
scas
repnz
lea
sarl
fistps
jo
jge
ffreep
sbb
test
fstps
shlb
inc
rorb
aam
push
addr16
cli
ret
jmp
jl
ret
shlb
imul
fiaddl
mov
lods
cmpsl
cmpsl
lods
sbb
rcl
inc
daa
or
stos
adc
push
inc
aaa
movsb
sub
mov
lea
pushf
inc
movsb
out
arpl
mov
dec
cmp
icebp
inc
sbb
fcomp
mov
leave
fsubrs
adc
in
lods
arpl
inc
xchg
jmp
lock
add
inc
test
in
test
sbbb
pop
add
shr
cld
sub
lods
icebp
ret
pop
cmp
cmp
enter
js
push
jns
inc
pop
fdiv
inc
test
jl
mov
decb
lods
sub
mov
insl
pop
addr16
ja
mov
in
out
and
cli
push
test
sbb
ds
ret
ret
jp
push
dec
mov
insb
jnp
add
xchg
cmp
orb
int3
mov
xor
pushf
hlt
or
adc
push
or
popa
fstpl
mov
fwait
js
or
daa
sbb
jb
mov
mov
fwait
les
mov
jg
mov
cmp
call
icebp
es
xchg
and
stos
ljmp
cmp
loopne
push
pop
mov
add
scas
sbb
lahf
cmp
pop
cmp
test
out
xchg
sub
loope
pop
imul
xchg
sti
loopne
stc
and
popa
jge
fwait
push
daa
jecxz
jo
or
sub
add
int3
mov
lods
mov
push
aad
dec
fisubrl
mov
push
cmp
popl
add
aas
lret
out
inc
aam
add
gs
mov
scas
test
icebp
sbb
adc
daa
ffree
pop
in
sub
repz
stos
iret
dec
js
outsb
test
inc
mov
pusha
sbb
mov
sbb
push
mov
jp
jmp
xor
sbb
pop
pusha
jae
mov
xchg
jl
outsb
mov
lods
adc
fidivrl
sar
pop
dec
and
xor
pop
dec
std
imul
ret
imul
jg
cmp
push
in
pop
sbb
jnp
push
mov
mov
fsubl
lds
jmp
xor
out
imul
pop
mov
cmp
sbb
int
push
and
movsl
ds
pusha
subl
or
pop
gs
mov
jmp
lret
xchg
out
pop
arpl
shlb
add
ja
mov
cmp
cmp
jbe
jno
inc
ds
push
gs
and
andb
dec
pop
enter
loop
lret
push
pop
aam
dec
pop
xor
fstps
sub
sub
leave
pop
dec
in
mov
xor
std
pop
jno
int
int3
test
icebp
clc
ljmp
inc
test
addr16
and
add
xchg
push
scas
out
push
out
push
mov
inc
rcrb
inc
xchg
push
mov
lds
adc
sbb
cli
mov
loopne
push
xchg
mov
jg
lock
pop
loopne
mov
out
outsl
add
scas
dec
xchg
push
daa
sub
lea
cmp
add
pusha
xor
icebp
cmp
jne
cmp
ss
xchg
stos
cmp
pop
jne
insb
stos
sub
inc
call
pushf
ss
std
sub
popf
add
mov
test
shll
aad
sarl
lahf
jae
call
loope
inc
movsb
xlat
cld
mov
fldl
jns
lds
sbb
enter
pop
pop
lret
bound
sbb
test
pop
dec
jnp
call
add
inc
cmp
imul
inc
lds
pop
xchg
je
scas
push
add
sub
int
leave
add
dec
int
cmp
cmc
push
enter
shr
mov
mov
js
push
arpl
outsb
ret
cli
xchg
push
arpl
sub
pushf
ds
scas
shlb
xchg
or
mov
lods
dec
jbe
outsl
sbb
out
or
push
or
pop
jo
idivb
xchg
jns
into
gs
sub
and
ja
xor
dec
sub
dec
jecxz
or
std
std
or
xchg
xor
push
mov
in
push
xor
scas
out
jo
out
sub
xchg
stc
loope
outsb
mov
lods
in
das
cmp
repz
sub
pop
cmp
lods
sub
xor
int
sub
pop
aas
lahf
adc
dec
scas
aas
sahf
sbb
shrb
hlt
xor
add
repz
mov
out
testb
test
cmp
insb
fidivl
add
jne
xchg
cwtl
cwtl
and
xchg
pop
enter
pop
ljmp
lret
sub
mov
adc
outsl
inc
ja
mov
jecxz
lcall
xchg
addr16
imul
mov
jb
test
inc
testb
idivb
mov
out
xor
adc
call
cli
lahf
cli
push
imul
jmp
mov
xor
outsl
jecxz
addr16
out
xor
dec
stos
add
pop
mov
mov
pop
cmp
inc
and
cmp
mov
jae
and
movsl
and
and
cld
or
imull
enter
pop
lret
and
sbb
jg
xchg
lods
jno
mov
sub
xchg
mov
jmp
fistl
test
sub
testl
push
jge
aam
mov
outsl
xchg
inc
out
dec
pusha
and
cmp
loope
test
pop
adc
push
add
push
mov
jns
outsb
enter
mov
loopnew
pop
xor
adc
ljmp
loope
repz
dec
xchg
and
pushf
jnp
aas
addr16
test
mov
or
inc
xchg
popa
inc
push
das
add
mov
xor
push
and
push
out
std
into
push
mov
test
inc
mov
jl
repnz
pusha
pop
push
xchg
js
adc
fcomip
or
add
scas
push
imul
mov
pusha
and
test
in
daa
clc
dec
mov
stos
fdivrs
jb
inc
inc
enter
leave
pop
shrb
in
call
nop
jo
mov
inc
dec
jb
add
pop
inc
or
scas
pop
mov
rorl
pop
pop
sahf
int
sahf
or
mov
adc
ss
xor
inc
fldl
outsb
or
push
lcall
mov
insb
mov
dec
imul
out
ja
or
pop
and
jnp
push
iret
or
cmovns
push
fmulp
inc
inc
scas
aam
insl
sbb
repnz
outsl
adc
xor
dec
cmp
negl
ss
push
lock
ljmp
sub
loope
xchg
rol
cli
insl
mov
push
cmp
pop
xor
idiv
or
lods
popa
cwtl
lods
sbb
sbb
mull
push
cmp
mov
rclb
pop
cmp
add
jmp
adc
and
ljmp
dec
pusha
cld
in
xchg
mov
ds
out
daa
xchg
lret
mov
inc
enter
push
mov
sbb
cmp
push
add
sub
in
test
int
addl
out
xor
sub
add
in
insb
pop
dec
fsubr
aas
ret
gs
xchg
rolb
jae
or
jmp
jmp
inc
adc
mov
pusha
add
xchg
pop
bound
mov
add
fdiv
popf
int
mov
lock
sahf
jge
fs
call
dec
cmpsb
or
pop
mov
and
loop
scas
cmp
jb
adc
in
addr16
add
mov
lahf
fdivr
in
dec
loopne
fadds
mov
mov
test
es
shll
cmp
imul
stos
jb
aas
faddl
sti
jle
das
mov
out
push
inc
inc
les
sti
xchg
inc
jb
or
loop
dec
loope
cmpl
adc
push
push
mov
push
xchg
xor
mov
fildl
pop
jno
cmp
mov
xchg
add
cmp
cmp
or
sub
xchg
xchg
xlat
sbb
xchg
stos
mov
gs
mov
xchg
inc
fs
test
insl
jo
push
flds
xchg
push
sbbb
pop
push
testl
in
jmp
pop
shll
sub
jnp
mov
pop
cli
leave
dec
lret
inc
ror
pop
mov
in
push
inc
in
call
mov
insl
lcall
mov
imul
gs
or
sbb
mov
push
sbb
sti
sti
xlat
mov
inc
orb
sub
stc
adc
sub
fidivrs
je
ja
test
lahf
enter
xchg
jp
sub
scas
jge
mov
clc
movsl
in
rcrl
stos
xor
cmp
dec
arpl
sbb
orl
out
pop
int
out
dec
sbb
shlb
xor
adcb
inc
jb
push
push
add
sbb
sub
add
pusha
lock
push
jno
jne
xchg
sub
scas
push
dec
mul
push
and
loopne
mov
sbb
push
sti
aas
add
fisttpl
cmp
or
daa
pop
and
pop
inc
loop
dec
lahf
stc
mov
push
pop
ficoml
xchg
icebp
pop
aad
adc
cmp
leave
add
test
in
add
cmc
loopne
sub
inc
stc
xchg
rcrb
lock
loop
xchg
mov
aam
xor
nop
xchg
into
or
mov
int
jns
stos
popf
push
adc
out
in
sarl
aam
and
or
cmc
repnz
bound
hlt
inc
add
bound
std
pop
xchg
sbb
sar
dec
mov
dec
push
cltd
fadd
or
pusha
mov
fnsave
xchg
fisttps
adc
in
sub
repnz
push
into
adc
adc
bound
xor
hlt
out
aas
mov
outsb
out
fs
pop
inc
cmpsl
jb
gs
adc
push
dec
and
decl
leave
jmp
js
push
or
cmp
pop
lea
mov
xor
mov
adc
xor
fistpl
xchg
inc
cmp
in
stos
das
movsl
sbb
arpl
lock
mov
cltd
xor
jns
in
dec
inc
bound
adc
cmpsl
mov
and
int3
and
clc
or
lahf
test
stc
adc
mul
mov
and
icebp
jge
dec
movsl
mov
negl
into
mov
dec
in
cmp
mov
xchg
mov
push
push
testb
clc
jp
add
movsl
test
stc
and
addr16
test
leave
into
dec
stos
mov
icebp
movsb
inc
push
ja
jecxz
in
leave
dec
int
aaa
mov
xchg
roll
cmpsb
icebp
adc
mov
or
push
sbb
sub
xchg
adc
mov
xchg
pop
loopne
sti
cmp
jb
lods
loop
out
push
dec
jnp
jbe
pop
sub
jbe
cmp
lahf
sbb
mov
mov
fisttpll
push
xor
jno
sahf
push
ret
ljmp
scas
sub
stos
sarl
or
add
repz
sub
and
push
or
push
shrl
rorl
jbe
out
cmc
cmp
mov
cmp
push
cs
cld
test
cmpsl
lods
adc
into
jbe
loop
pop
jmp
lahf
std
rcrb
add
inc
lds
int3
imul
mov
jo
pop
and
dec
sbb
inc
pop
ja
paddusw
push
shll
push
xor
nop
inc
pop
repnz
push
push
dec
xchg
jg
xor
out
es
lock
inc
adc
mov
int3
inc
es
and
adc
and
repz
push
and
dec
push
test
out
out
sub
push
shll
ss
dec
add
or
xor
in
jge
repz
seto
and
imul
out
adc
and
lret
gs
mov
jb
push
insl
xor
andl
imul
lods
push
ret
mov
push
mov
or
scas
mov
in
mov
mov
add
aad
fstpl
out
in
xchg
sarb
and
dec
cmp
call
pushf
mov
xor
and
fdivrl
fisttps
cwtl
xchg
int
repnz
mov
pushf
mov
imul
push
sbb
iret
push
movsl
scas
cmp
insl
cmp
fwait
mov
arpl
lret
adc
insb
cmp
pop
pause
mov
movsl
dec
mov
cwtl
jno
sub
movb
xchg
js
or
pop
push
xor
cmp
dec
pop
in
sbb
cwtl
mov
lds
inc
lret
test
xchg
and
add
push
add
push
popf
push
mov
and
cmpsl
pop
adc
sbb
or
mov
sarb
or
dec
popa
mov
cli
pop
jmp
dec
xor
and
jno
push
adc
rol
jl
aas
mov
cld
jbe
inc
mov
mov
jmp
shll
jae
or
mov
mov
cs
jo
lahf
outsb
mov
fs
mov
pop
nop
fs
mov
mov
ss
dec
lods
daa
rorl
addl
jle
push
in
mov
icebp
jp
mov
cmp
arpl
mov
add
les
inc
xchg
jg
clc
mov
fmul
lock
js
push
mov
jb
loop
or
sub
shll
push
push
pop
fldl
mov
test
push
lret
push
fisubrl
inc
xchg
rcrl
push
add
bound
inc
inc
push
inc
adc
lret
sbb
push
fdivrl
xor
xor
addb
xor
cmp
mov
inc
lods
adc
mov
inc
pushf
sahf
outsb
sti
outsl
sarb
adc
dec
ret
outsb
jmp
fcompl
outsl
test
and
push
xor
into
sub
addl
das
mulb
add
fs
cmpsb
jg
dec
xchg
daa
push
stos
pop
mov
fs
adc
dec
xor
cmp
mov
inc
shll
adcb
andl
sahf
inc
popa
sti
adc
and
xor
data16
outsl
nop
lcall
dec
int3
push
insb
mov
inc
pop
stos
dec
jbe
jg
cmp
xorb
push
hlt
ret
in
fs
lret
mov
fwait
sbb
pop
xor
or
rcrl
fs
xor
test
es
arpl
test
pop
xchg
lock
fmull
xor
dec
jno
push
or
mov
xor
jmp
adc
xlat
and
mov
cmc
jbe
lret
jl
or
std
insl
push
dec
sbb
add
clc
into
fisubrs
in
cmp
push
orb
or
sub
lock
pop
rol
decb
pop
dec
stos
jp
cmp
jle
sbb
push
inc
cmp
test
and
fisttpll
stos
mov
aam
jbe
dec
js
rcll
jecxz
add
push
stc
sub
mov
jno
add
cmp
rcr
cli
das
insb
mov
or
mov
jb
hlt
rcrb
notb
insl
lods
pop
add
inc
and
mov
xchg
add
ret
cmc
sbb
push
fdiv
xchg
les
cli
btr
cld
ffree
fstl
mov
sub
inc
iret
les
pop
cmp
nop
clc
xor
nop
je
push
movsb
loopne
mov
loope
jge
imul
add
mov
or
xchg
clc
jbe
pusha
fisubs
jp
pop
pop
iret
inc
jmp
fsubs
in
in
mov
mov
test
sub
into
inc
loopne
add
adc
divb
push
inc
std
cli
push
xor
popf
jno
fadds
sbb
mov
pop
mov
cmp
in
iret
add
mov
dec
mov
fdivl
scas
cltd
lret
add
ret
mov
jg
jbe
into
mov
pushf
sahf
stos
je
insl
mov
xchg
mov
dec
cli
movb
adc
aaa
hlt
and
jmp
xor
insw
pop
xor
out
or
outsl
lods
aas
jnp
test
xchg
mov
xor
movsb
xchg
out
cmp
mov
xor
out
outsl
xor
arpl
je
inc
out
push
inc
lock
jmp
xor
sar
and
and
inc
pop
mov
push
ret
test
mov
loope
push
xchg
mov
pop
push
sub
dec
sbb
enter
ljmp
out
int
push
push
push
insb
push
add
pop
dec
lds
or
xchg
je
push
rorb
nop
outsb
lret
aas
scas
lea
jl
repz
adc
and
mov
pop
aas
jg
sbb
in
rcll
mov
rclb
inc
popa
mov
jbe
inc
popf
cmp
xchg
std
repz
mov
popf
lods
xchg
fidivrl
insl
fcompl
and
iret
fsubrp
cmp
int3
cli
jbe
ret
pop
mov
stos
icebp
jns
mov
cmp
roll
mov
insl
pushf
in
int3
mov
lar
mov
and
jg
push
aam
inc
push
fs
jle
mov
mov
mov
ret
les
cltd
add
dec
aaa
mov
repz
add
inc
xchg
pop
outsl
sub
sub
faddl
repnz
sbb
js
adc
sub
repnz
sub
loop
fists
enter
outsl
push
mov
outsl
fldt
push
dec
sub
scas
aaa
cmc
stos
negb
lods
leave
iret
sbb
mov
jmp
mov
add
test
lea
icebp
xor
sub
inc
fstpl
mov
sub
pop
adc
dec
inc
les
xor
xor
push
sub
sbb
inc
fs
neg
cmpsl
mov
fnop
pop
inc
gs
and
xchg
aas
and
fldcw
int3
mov
mov
add
or
mov
push
or
fdivr
outsb
mov
cmpsl
mov
sbb
push
push
mov
mov
idivl
scas
mov
das
dec
jnp
cwtl
adc
mov
test
lahf
adc
daa
int
gs
cmpsl
popa
jle
pop
fiadds
jae
jo
orb
dec
and
jnp
push
dec
movsb
pop
lcall
dec
mov
adc
in
cmp
rorl
and
mov
lahf
mov
les
fcoml
dec
aad
xchg
ret
sahf
pushf
in
sbb
iret
stos
dec
xchg
xchg
gs
sub
jno
das
mov
aas
dec
cmp
cli
lock
ds
js
push
lods
or
fists
cmp
cli
or
sub
xchg
mov
inc
mov
or
out
aas
mov
hlt
sbb
fldenv
insl
cmp
jnp
xlat
aas
or
mull
mov
into
aaa
push
aaa
rorl
loopne
add
jns
jle
cmp
bound
add
lea
imul
sub
jb
mov
inc
lcall
sub
inc
inc
imul
loope
insb
dec
or
xchg
pop
xchg
push
xor
into
outsl
mov
cmp
dec
popa
dec
xor
xor
sbbb
lcall
nop
jmp
dec
inc
js
cmpsl
xlat
andl
jl
push
xchg
aas
mov
or
dec
div
dec
lea
push
shll
pop
pop
pop
ret
jmp
sbb
mov
aad
popa
flds
in
lods
dec
add
inc
push
jne
pushf
ret
int3
fs
mov
ja
push
and
pusha
sub
out
jbe
mov
loop
xor
outsl
adc
sar
shll
in
inc
pop
push
mov
mov
and
pop
adc
inc
inc
sbb
div
jno,pt
cmp
popa
je
insl
aas
push
mov
test
sub
leave
ja
jnp
mov
jle
adc
sarb
dec
push
ret
adc
or
inc
inc
ljmp
lcall
mov
dec
mov
dec
mov
cmp
rorb
mov
mov
stc
inc
mov
lret
ds
add
push
scas
decb
jo
ret
cli
push
xchg
jo
or
popf
stos
inc
cli
test
insl
test
add
int
int3
addr16
in
call
int
js
jmp
push
or
fdivrl
nop
push
out
sbb
pop
xor
and
jb
fadds
add
or
repz
xchg
fnsave
cmpsb
pop
sub
aaa
xchg
mov
mov
jnp
insl
cmp
ljmp
xchg
in
cmp
jne
out
in
pop
xor
lock
xlat
xor
add
gs
push
scas
pop
lret
fidivl
pop
lcall
jb
mov
loop
mov
sbb
inc
scas
jne
pop
mov
jns
lock
repz
leave
xor
rcll
test
dec
sub
jge
xchg
inc
out
push
xchg
test
scas
push
pop
adc
sbb
mov
imulb
movsl
sahf
and
mov
push
test
cmp
or
sub
push
xor
or
lods
mov
push
out
jae
sahf
push
xlat
repz
mov
fisttps
pop
jnp
push
dec
addr16
inc
aam
add
xlat
pop
sbb
negb
loopne
in
xorl
pop
test
call
push
or
sbb
jge
xor
xor
aaa
cmp
xchg
icebp
fildll
mov
std
mov
xchg
pop
push
push
sbb
pop
mov
dec
jo
lods
cmp
xchg
mov
stos
dec
cmp
mov
push
xchg
mov
faddl
call
lret
outsl
int
xchg
dec
rol
in
xor
pop
out
nop
mov
lods
lahf
or
mov
add
outsb
mov
hlt
xor
data16
incb
int
xchg
inc
loopne
jbe
mov
push
ljmp
inc
jo
xchg
inc
test
in
data16
pop
movsl
xor
pop
pop
add
je
cs
test
das
mov
mov
stos
fstpt
cld
inc
rorl
pop
mov
jp
popa
jecxz
test
add
out
gs
lret
lcall
int3
fldenv
andl
sahf
mov
mov
mov
js
jp
dec
in
mov
add
push
pop
loopne
push
outsb
adc
cmc
lods
insb
nop
dec
in
pop
cmp
data16
or
add
out
pusha
fisttps
movsl
push
ljmp
inc
inc
movsl
adc
repnz
aas
cld
add
scas
fwait
mov
cld
adc
dec
out
jne
xor
and
pop
jne
cmovl
test
outsb
fsubrs
xor
pusha
movsl
loope
or
mov
add
inc
mov
lret
push
clc
xor
movsb
dec
fs
push
adc
cmp
inc
hlt
test
jb
stos
dec
inc
imul
push
sarl
inc
jl
adc
mov
sub
mov
fisttps
dec
cmp
out
shll
out
mov
shrl
mov
push
push
hlt
lret
nop
test
mov
sub
pop
rcl
cltd
and
mov
adc
dec
fadds
fmull
leave
arpl
nop
ss
divb
call
filds
dec
out
fsubl
sahf
add
jge
into
ret
repnz
cmp
push
dec
out
jb
mov
push
mov
loop
bound
sub
je
xor
shrl
xor
push
lods
scas
stc
in
lods
nop
aas
jmp
and
or
adc
jmp
pop
xchg
mov
andl
mov
mov
push
or
jmp
push
mov
stos
mov
and
es
cwtl
mov
or
fnstsw
int3
xor
xor
repnz
mov
inc
popa
out
movsb
xor
push
fisttps
xchg
bound
imul
cs
mov
mov
loop
cmp
iret
call
sbb
stc
icebp
sub
pop
sub
xchg
fildll
cmp
cld
stos
push
lret
or
cli
into
xchg
mov
sub
mulb
cmpb
stos
jg
and
jecxz
add
and
and
xor
xchg
jmp
xchg
push
dec
inc
subb
pop
ljmp
dec
arpl
pop
stos
movsl
cmp
push
adc
inc
adc
mov
stos
mov
xor
mov
movsl
js
jae
jo
pop
lret
mov
mov
test
das
sbb
add
mov
cld
iret
nop
shl
pop
mov
mov
nop
sahf
cmpsb
arpl
jle
sbb
inc
pop
ljmp
push
lods
xchg
scas
mov
in
outsl
dec
bound
dec
push
adc
mov
mov
add
push
adc
lods
les
sarl
sarb
movsb
jns
leave
or
xchg
lret
dec
pop
mov
in
lea
adc
adc
and
mov
and
xchg
xchg
std
cmp
push
dec
pop
hlt
fiadds
mov
push
and
pop
sub
or
fdiv
inc
xchg
mov
fsubl
xchg
insb
fsubl
and
push
mov
cmpsl
call
or
cmp
stos
scas
into
ja
cs
mov
pop
mov
fwait
sub
lcall
xchg
aas
sbb
scas
xor
xor
shl
dec
add
inc
xchg
lock
jo
not
add
cs
pusha
mov
repnz
shrl
and
xchg
jo
or
mov
xchg
testb
add
xor
mov
in
mov
inc
in
outsb
sbb
lret
aaa
mov
jnp
push
hlt
jo
jno
mov
and
dec
jns
cmp
addr16
inc
cmpsb
xorl
add
cld
cmp
inc
mov
mov
xlat
or
mov
jo
cmpsb
sub
clc
cmp
jl
fldenv
test
mov
and
aad
fisttpll
call
in
or
push
inc
and
enter
pop
jns
clc
or
sub
adc
mov
mov
jne
ja
or
dec
lods
mov
aaa
fstpt
insl
push
iret
cltd
sbb
mov
movsl
xor
inc
jle
push
inc
jns
jb
xchg
ja
scas
inc
mov
movsb
cmp
ret
mov
cmc
jg
dec
ret
adc
repz
and
dec
xchg
adc
sarl
cmp
jns
ja
jle
cmp
xchg
add
jbe
sbb
push
mov
pop
test
pushf
in
shlb
or
xchg
loopne
ffreep
jl
dec
sbb
sub
test
cmp
mov
and
xchg
and
cld
cmpsl
insb
xchg
jb
sbb
enter
xchg
inc
push
mov
int
lcall
and
test
add
sbb
add
cmp
jle
fildll
sti
push
cwtl
jmp
sbb
add
mov
sarb
xor
push
and
push
jnp
shr
sbb
mov
in
lahf
push
pop
xchg
dec
test
sahf
add
ffree
out
orb
int3
sub
sti
jg
jp
xchg
sbb
das
add
mov
lods
out
out
pop
mov
insb
jecxz
mov
dec
push
mov
ss
jp
xor
arpl
addl
pop
and
popf
lods
fistpl
std
mov
shll
push
inc
cmpsb
push
aam
mov
pop
lods
ret
mov
dec
ficoms
and
mov
out
dec
mov
sub
fstp
sar
lcall
dec
push
ret
aam
mov
fcompl
mov
fcom
ficomps
or
sar
std
push
stc
mov
xchg
xor
xchg
adc
add
xchg
cmc
lret
int3
aam
jb
or
adc
mov
testb
or
out
mov
xor
pop
mov
faddl
xor
pop
lock
dec
test
sbb
lds
push
icebp
or
or
int
dec
inc
lret
dec
aaa
sbb
push
push
scas
outsb
xchg
imul
mov
popa
mov
xchg
je
in
sub
data16
add
nop
add
cmp
rcrb
lcall
mov
cmc
pop
cmp
and
inc
fiadds
jb
gs
dec
jge
call
jae
mov
sub
mov
repz
inc
jle
cmp
addr16
iret
mov
lahf
inc
jmp
notl
das
or
pop
cmp
xchg
jno
pop
mov
and
dec
pop
sub
xchg
lock
popf
pop
cltd
imul
push
jecxz
jbe
mov
add
push
pusha
out
loope
in
xor
push
pusha
sti
xor
je
sub
ret
inc
loop
mov
imul
leave
pusha
add
mov
les
popa
xor
jp
push
xor
pop
insb
je
je
xor
pop
or
inc
cmpb
loopne
cmp
jmp
jns
js
xchg
fldl
sbb
adc
mov
jge
fwait
push
in
fcom
rol
fistpll
inc
cld
popa
pop
mov
nop
rcrl
or
sar
or
jno
fdivrp
inc
xchg
test
sub
mov
mov
sub
mov
clc
cltd
mov
sub
adcb
pop
or
jl
pop
cld
or
mov
or
mov
mov
xor
xor
in
push
enter
ljmp
leave
fstpt
inc
bound
push
aas
cwtl
adc
inc
lds
sbb
dec
lock
mov
xlat
in
cmp
mov
pop
shll
lcall
mov
mov
sbb
push
je
jecxz
mov
adc
test
jmp
cmc
mov
scas
cmp
mov
fsubrs
gs
insb
lea
jl
imul
addr16
imul
cmp
push
mov
inc
fsubr
into
mov
or
xor
arpl
scas
mov
call
or
dec
pushf
cs
pop
fucomip
in
or
cmp
push
xchg
adc
jl
mov
enter
add
jp
rol
aas
or
int3
adc
shl
cmc
dec
mov
cmp
xor
out
in
adc
lahf
int3
mov
stos
push
pushf
leave
int3
loope
lret
mul
and
rcr
cmp
push
jge
push
mov
in
insb
fstpl
xchg
leave
es
mov
ljmp
vcomiss
rcrl
xchg
repz
imul
jnp
sub
cmc
mov
btr
aas
cltd
nop
mov
inc
insb
mov
jns
push
jg
inc
in
adc
mov
lock
loop
and
outsb
gs
decl
mov
jmp
fildl
cmpsl
je
mov
fs
xchg
out
pop
inc
sbb
cmp
xchg
mov
mov
mov
sub
inc
push
fxch
lea
call
xlat
add
popa
and
jle
jno
mov
cmp
fists
sahf
xchg
push
add
add
mov
popf
test
mov
cmp
mov
lock
jno
ficoms
fwait
pop
adc
andb
les
outsb
push
mov
adc
pop
outsb
popf
gs
mov
stc
lcall
je
out
cwtl
sbb
dec
xchg
jo
mov
sub
roll
cmp
push
shrb
stos
pop
test
sbb
ret
xor
sub
sti
mov
mov
dec
das
add
push
xor
movsl
xchg
xchg
cmp
popf
cmpsl
inc
mov
dec
sbb
push
add
or
cmp
fwait
inc
cmp
and
or
cmp
test
adc
sub
insl
daa
scas
fwait
mov
lods
and
out
lcall
std
jbe
loopne
icebp
jbe
into
daa
and
xor
or
mov
lods
fcomip
dec
push
jns
push
xchg
out
cmp
jg
sbb
add
jnp
lds
cmpl
sbb
add
fdivs
push
and
fdivl
sbb
jnp
xor
inc
add
imul
aam
or
jnp
mov
clc
xor
lcall
adc
xor
jb
push
dec
pop
jl
neg
subl
cld
jg
dec
xor
ss
pop
cs
fldcw
lods
and
or
inc
push
mov
jns
test
js
ret
std
fdivrs
jge
jmp
jg
cs
pop
sub
xor
bound
adc
mov
movsl
mov
mov
iret
inc
lods
pusha
xchg
jg
push
pushf
aam
pop
rorl
fisubrs
sbb
mov
mov
adc
dec
jle
mov
aas
cmc
inc
fistpll
lock
push
dec
xchg
xor
shrb
cmp
add
int
mov
movsb
jo
pop
cmpsb
jmpw
pop
mov
ficoml
add
sbb
push
repnz
out
cmp
xor
xchg
mov
movsl
sti
push
cmp
ret
or
loopne
filds
inc
sbb
and
and
mov
mov
fnstenv
push
mov
and
mov
pop
sub
add
pop
jle
xchg
push
push
cmpsb
fs
out
iret
jecxz
ret
push
daa
xchg
lahf
pop
jno
stos
lock
mov
negb
jecxz
nop
hlt
das
jl
scas
clc
push
push
inc
pop
dec
jecxz
mov
mov
pop
js
mov
repnz
cwtl
xchg
pop
adc
push
std
loope
in
in
or
gs
add
sub
cmp
in
sti
in
insb
aas
cmp
mov
lret
jnp
push
jae
cmp
sbbb
and
es
mov
and
sti
std
sbb
scas
pusha
pop
stos
inc
in
jg
test
dec
outsb
inc
lods
mov
sbb
xor
std
jle
daa
lcall
and
pop
push
in
sti
arpl
mov
test
nop
inc
xor
mov
jo
sar
ja
and
push
adc
pop
sti
mov
insb
ds
divb
xor
jge
in
scas
sub
ret
jne
cmp
push
std
cmp
push
sub
sbbl
jg
fildl
or
mov
cmc
cmpsb
push
sub
and
mov
cltd
jae
mov
call
cmc
dec
dec
cmpsl
jo
scas
orb
into
pusha
xchg
pop
test
cmp
push
ja
adc
into
pop
test
outsb
sub
xchg
xchg
adc
idivb
pop
test
rclb
mov
pop
stos
adc
cmpsl
pop
leave
js
mov
sub
add
pushf
in
or
mov
lret
daa
cmp
xchg
lds
xchg
loop
xchg
cld
push
dec
mov
push
loop
add
fstpt
flds
lock
fbld
ja
out
icebp
jl
fwait
cld
push
jle
dec
pop
xchg
sub
aas
pop
xchg
or
xchg
or
nop
imul
lret
push
in
xchg
jp
cmp
inc
push
adc
sbb
or
pop
mov
xorl
aas
rolb
push
nop
ret
mov
shlb
sub
pop
repz
adc
xor
cmp
outsl
jmp
fnsave
ss
arpl
std
lahf
loop
fsubrl
jno
pop
adc
push
frstor
push
imul
jl
test
mov
mov
repnz
arpl
lret
jns
sub
outsl
or
clc
adc
lcall
fstps
cmpsb
xchg
cld
mov
xchg
cwtl
stc
mov
mov
dec
xchg
mov
ret
mov
out
jle
test
or
mov
add
xlat
test
cmp
pushf
and
xchg
aas
ljmp
inc
push
push
jno
cmpsl
or
in
test
mov
fstps
cmp
or
fistps
rolb
test
idivl
out
loopne,pt
es
pusha
mov
insl
daa
xchg
jl
int
in
loop
ficompl
sbb
fidivs
leave
fbstp
in
icebp
adc
popf
inc
mov
jo
push
or
and
dec
flds
sbb
sbbb
jmp
dec
dec
jns
popf
ljmp
sub
loop
stos
mov
insb
andb
adc
aad
insl
cmp
inc
and
test
and
test
push
fwait
sub
lods
in
dec
mov
aam
dec
adc
js
mov
xchg
cmp
sbb
and
jnp
sub
stc
pop
mov
fistpl
popa
pop
jb
pop
insl
iret
mov
jg
sub
ljmp
ret
lods
mov
bnd
cmpsb
push
jle
jbe
adc
into
adc
jns
ljmp
mov
cmp
or
test
fidivrl
inc
dec
sbb
sbb
pop
ud1
sub
cmc
fdivl
mov
mov
repnz
push
jbe
movb
dec
pop
cmpsb
cmp
cltd
and
sub
sbb
incb
mov
or
mov
cmp
subb
imul
imul
xchg
orb
xlat
xchg
xchg
stc
dec
xchg
shlb
lods
xchg
inc
insl
jmp
shll
inc
lcall
add
inc
outsl
aam
arpl
std
sbb
jns
push
add
mov
jp
jbe
inc
mov
scas
and
cmp
aad
arpl
add
leave
mov
jecxz
xor
mov
push
mov
pop
out
mov
xchg
es
push
stc
pop
arpl
loope
push
clc
and
inc
shlb
call
mov
filds
vpunpcklwd
push
pusha
test
faddl
mov
shl
fs
xchg
dec
enter
into
xchg
push
cmp
fsin
test
insb
jg
xchg
add
sub
sahf
jnp
and
outsl
hlt
dec
jmp
xorl
add
test
out
pop
insl
jmp
arpl
in
dec
jnp
ljmp
mov
xchg
aaa
pop
mov
inc
out
test
repz
daa
and
push
clc
test
test
jle
les
mov
imul
jno
or
daa
sbb
ss
cmp
nop
sub
pop
jo
mov
pusha
mov
cli
addr16
xor
mov
xor
aas
jmp
call
shll
mov
call
inc
xor
jmp
cmp
inc
in
add
sbb
sbb
insb
mov
cli
pop
and
imul
push
dec
cli
adc
lret
mov
push
cmpsb
inc
xchg
icebp
ret
pop
push
cmp
cmp
xlat
sub
mov
mov
pop
aas
xchg
cwtl
xchg
mov
lcall
mov
mov
or
mov
dec
lahf
mov
addr16
push
popf
jecxz
outsl
dec
and
ss
in
ror
mov
insl
sti
aas
fcompl
repnz
leave
cmp
xchg
call
rorb
push
fdivs
or
gs
sub
adc
jmp
push
mov
popf
jnp
push
and
xchg
jle
dec
lods
mov
sbb
add
insb
add
add
js
clc
aam
sbb
cmp
mov
lea
xchg
xorb
add
inc
dec
xor
jbe
cmp
inc
jnp
mov
pop
repz
mov
push
adc
xchg
or
packuswb
lea
mov
in
mov
or
or
repz
push
xchg
loope
push
inc
call
pusha
mov
dec
mov
lcall
or
lods
popa
and
xor
dec
or
pop
and
xchg
xchg
test
cmpsb
test
insl
add
mov
xor
cld
xchg
mov
xchg
push
xor
mov
inc
cmc
popf
push
inc
add
jl
ja
arpl
cmp
jp
mov
dec
shlb
ja
add
mov
inc
and
pop
jno
inc
adc
aam
cwtl
lcall
jbe
test
lods
cmpsl
dec
jge
or
dec
and
pop
pop
nop
xor
jno
jnp
pop
cmp
xor
dec
xor
fidivrs
sbb
sbb
repnz
scas
cmpsb
subl
mov
fprem
pop
mov
and
cs
add
outsb
je
xchg
pop
jnp
sbb
mov
mov
sarb
xchg
sbb
repnz
loope
aad
lret
dec
sarb
in
mov
xchg
push
jns
rorl
sub
rclb
mov
xchg
inc
fldlg2
jo
ret
and
add
sbb
and
pop
outsb
cmp
movsl
dec
sub
push
jg
iret
pop
add
or
sbb
and
mov
xchg
jle,pt
in
orb
aas
push
lret
mov
mov
fldl2t
enter
jb
test
mov
syscall
mov
pop
call
jae
out
cltd
loopne
and
xchg
lahf
lahf
cltd
dec
inc
arpl
fbstp
mov
into
cli
xor
sbb
jbe
sub
out
xchg
and
jb
xchg
xchg
sahf
in
ret
in
jmp
cli
dec
or
into
js
lea
sar
fcompl
mov
adcl
or
push
inc
pop
mov
mov
aam
lahf
lock
push
push
mov
dec
stc
dec
adc
xor
mov
scas
inc
cmc
adc
scas
or
aas
xchg
mov
xor
insb
stos
xor
xchg
jle
cli
call
inc
rorb
data16
adcb
jns
lea
mov
popf
cs
scas
mov
clc
xchg
dec
xor
cmp
adc
dec
sbb
adc
sbb
sbb
dec
outsl
ret
out
lds
fiaddl
mov
das
jg
xor
mov
outsb
jbe
ret
jnp
andb
add
sub
addl
test
jns
pop
mov
inc
adc
cmp
jnp
fwait
insb
test
lods
idiv
rol
add
cmp
shrl
cld
inc
push
fidivrs
pop
mov
mov
loopne
mov
xchg
sub
push
call
popa
outsb
mov
mov
cmc
cwtl
aas
mov
xchg
shrl
pusha
int3
inc
sub
sbb
call
cmp
xchg
je
push
mov
sub
dec
mov
arpl
insl
mov
jns
adc
mov
pop
sub
pop
mov
mov
sub
sub
lcall
add
adc
mov
push
jno
mov
push
pop
dec
ds
adc
pop
xchg
jae
inc
add
scas
pop
out
sub
jmp
out
cltd
popf
xor
sub
sbb
ja
nop
jae
mov
stos
push
mov
fdivl
push
jno
testb
jnp
dec
mov
call
pop
pop
inc
push
lds
cmp
ja
jo
push
mov
out
adc
push
jnp
pop
test
mov
sbb
repnz
jg
mov
sbbb
pop
hlt
jmp
scas
xchg
das
xor
shrl
gs
sahf
insb
insl
fiadds
pop
ja
lods
lods
in
jnp
imul
cmp
push
sbb
pop
rcrl
clc
and
ja
sti
data16
sub
fnclex
roll
pop
sub
lds
inc
adc
mov
pop
mov
jle
and
pushf
add
jge
or
js
sysret
push
or
xchg
cmp
aaa
fldlg2
out
jae
out
add
inc
mov
in
mov
outsl
mov
cmp
sbb
mov
push
xorl
in
xlat
push
xor
ret
in
xor
mov
scas
loop
push
imulb
dec
in
lds
mov
push
and
jle
pop
inc
lock
mov
rcrb
repz
add
push
jbe
sbb
test
sub
inc
inc
sub
mov
pop
rorb
jb
imul
adc
int3
mov
dec
add
add
mov
mov
das
loopne
jmp
out
inc
pop
lods
aam
cmc
cmpsb
pop
ss
mov
jg
popa
sub
or
incl
sub
cmpsb
mov
mov
push
rorb
aas
into
jl
cli
or
in
decl
pop
add
sub
jne
out
ret
cli
xchg
xor
mov
jo
and
setae
or
jp
lcall
shrb
inc
cmp
sub
add
cmp
fwait
mov
sahf
pop
jecxz
addr16
pop
push
rcrl
cmpsb
fmuls
mov
mov
push
cmp
fisubrs
daa
and
in
jo
scas
sbb
add
daa
in
pop
rorb
jp
call
jo
ja
movsl
mov
fsub
jno
test
dec
mov
mov
cltd
scas
cltd
iret
mov
scas
loope
jb
fwait
cs
enter
adc
or
cmpsl
movsb
xchg
mov
or
dec
and
int
mov
mov
sbb
add
int3
adc
pop
or
lret
push
cmp
cmp
ror
pop
loopne
pushf
cwtl
cwtl
sub
mov
or
cltd
into
imul
xor
test
mov
dec
jecxz
imull
pop
xor
jnp
add
sub
mov
sub
rcrb
lods
imul
movsb
lods
repnz
lea
mov
rcrb
dec
movsl
fs
les
test
or
sub
jns
jns
cmp
cwtl
into
test
stc
out
inc
and
int3
lcall
sub
cmp
cmp
cmp
mov
inc
pop
loop
js
inc
mov
pop
arpl
mov
push
call
imul
pop
cmp
mov
xchg
aas
push
and
fwait
popa
cmpsl
clc
xor
mov
int
outsl
je
pop
adc
pop
cmp
pop
sub
mov
add
xor
movsb
test
cmp
xchg
mov
andb
inc
enter
arpl
faddl
pop
adc
mov
and
ffreep
shlb
hlt
xor
jo
mov
arpl
push
aas
and
mov
cmpsl
mov
jno
sbb
insl
jmp
cmp
arpl
out
in
scas
cmp
lock
popa
out
sbbl
rorb
inc
gs
push
mov
ds
adc
cmp
jle
popa
fimull
stos
popf
popf
int3
sub
xor
pusha
mov
stos
pop
jno
xor
es
loopne
scas
or
adc
push
mov
xchg
jae
xchg
movsb
je
sub
pop
pop
sbb
sbb
pop
push
out
mov
xor
dec
out
inc
movsl
add
sbb
dec
div
xchg
lock
xlat
ljmp
add
pop
decb
ret
cmp
pop
arpl
incl
xchg
es
mov
jae
mov
cmp
scas
movsl
movb
loop
mov
dec
push
jg
push
ficompl
cmpsb
fidivrs
inc
sbb
mov
inc
or
ljmp
push
sub
rcll
pop
sub
stc
mov
xchg
mov
xor
pop
cmc
push
pusha
rorb
icebp
cld
cmp
cs
mov
sarl
inc
sahf
enter
mov
outsb
fisttpl
cmpl
outsl
lret
cwtl
or
call
fidivl
movsl
jbe
imul
jmp
xlat
in
ficompl
negl
mov
ret
push
movsb
mov
clc
mov
adc
push
mov
push
hlt
jmp
jne
dec
repz
push
popa
sbb
adc
das
cmpsl
mov
sbb
in
mov
aam
in
and
js
xchg
or
add
push
clc
aam
lea
cmp
in
inc
push
in
xchg
stos
ds
sbb
jl
fiadds
mov
jb
push
jb
or
test
xchg
sub
cli
test
mov
gs
sahf
mov
mov
push
adc
mov
lret
dec
aam
and
cmp
xor
mov
mov
push
and
mov
nop
mov
movsl
lods
repnz
sub
in
xchg
push
jae
sub
movsb
test
jle
inc
pop
inc
xchg
jne
es
mov
lret
and
jecxz
ds
push
arpl
cmc
adc
sti
enter
mov
nop
lock
push
jnp
ret
lret
pop
in
in
repnz
xchg
je
adc
mov
pop
mov
or
fistps
cmpsb
jp
add
pushf
aaa
lock
ljmp
inc
out
sub
fidivrs
mov
mov
push
mov
sbb
in
push
sti
xchg
lcall
inc
adc
push
dec
mov
call
xchg
adc
movsb
push
mov
dec
push
test
xor
std
sub
sub
dec
cli
xchg
adc
jbe
cmc
jne
mov
fstpl
push
js
jno
dec
sbb
inc
data16
xchg
std
mov
test
inc
shr
out
lock
dec
inc
and
dec
pop
jle
sbb
ficoml
or
mov
fnsave
mov
dec
shrl
movsb
loop
inc
bound
pop
gs
loopne
imul
push
sub
dec
clc
pop
sub
leave
pop
add
or
xor
dec
fildll
es
jecxz
adc
rcrl
divl
sti
popf
mov
cmpsb
push
xchg
in
xlat
das
into
xchg
stos
adc
inc
and
cmc
jno
aam
ret
lds
xchg
mov
test
mov
push
loopne
mov
sbb
cmp
pop
sub
sub
sub
in
add
mulb
int3
push
jb
sbb
sub
push
lods
jno
and
cwtl
pop
inc
mov
rorl
push
pusha
mov
jo
ljmp
xchg
lahf
and
adc
push
xor
les
adc
subb
je
cmp
xchg
mov
ret
add
fadd
or
lds
and
repnz
xchg
xlat
idiv
adc
shlb
aad
mov
loop
xor
mov
and
cmp
popf
xor
in
xchg
jmp
push
and
jle
cli
mov
lods
xor
or
adc
push
cld
lret
enter
imul
dec
jne
jns
xchg
lock
lret
nop
mov
add
or
jecxz
and
or
push
in
mov
std
dec
push
in
fnstenv
sbb
popa
xor
jl
leave
cld
pop
add
sbb
add
insl
stos
shl
sbb
mov
mov
dec
sub
dec
outsb
xlat
and
or
dec
adc
aas
data16
ljmp
popf
jo
mov
inc
call
inc
pop
bound
sbb
neg
push
js
outsb
mov
mov
rolb
mov
xlat
les
scas
in
in
test
fldcw
fadd
cmp
jmp
jg
push
xor
sbb
xor
insb
aaa
push
xorb
adc
loopne
jmp
mov
scas
pop
hlt
dec
inc
fcoml
incl
daa
test
dec
rorb
sbb
sbb
or
ds
or
jge
cmc
ja
scas
jge
scas
jnp
js
in
aas
or
pop
inc
mov
outsl
xchg
mov
sbb
subl
dec
jbe
cmp
adc
push
fisubs
outsl
in
and
imull
ficoml
ret
inc
push
xchg
inc
mov
cltd
hlt
cmp
dec
hlt
hlt
sub
push
jmp
test
cli
jns
push
add
mov
mov
js
incl
loop
dec
fsubs
je
in
cmc
ja
pop
pop
mov
add
xchg
cmp
and
inc
popf
mov
mulb
inc
adc
or
pop
insb
xchg
cmp
adc
xor
pusha
cmp
loope
push
sbb
push
es
sbb
push
fs
adc
mov
pusha
jmp
or
or
test
or
jge
imul
popa
dec
jl
insb
mov
rorl
xor
fwait
dec
std
ret
cltd
mov
call
xor
mov
cmpsb
lcall
loope
leave
loop
mov
scas
adc
es
pop
and
xchg
fnstsw
test
mov
mov
jge
scas
cmp
aam
inc
mov
pop
lds
test
xor
jo
sub
mov
rorl
xchg
mov
adc
xor
push
adc
mov
push
pop
inc
xchg
pop
andb
pop
push
push
fwait
ret
int
fidivs
mov
push
ret
or
pop
pop
inc
or
lds
fsubrl
sarl
incb
xorl
dec
sbb
scas
icebp
inc
ret
fisttps
sbb
imul
stos
sti
rcrl
mov
jnp
dec
inc
mov
xchg
aad
push
jmp
and
cmp
jecxz
in
xlat
mov
jbe
cld
loop
stos
daa
or
mov
std
ficompl
cs
jl
scas
stos
cld
dec
outsl
cltd
jg
je
ja
dec
push
shll
es
push
sub
je
pop
ds
jp
mov
in
sub
dec
push
inc
inc
mov
les
testb
loop
cli
outsb
mov
push
cmp
or
pop
push
or
sub
call
scas
add
sbb
popf
push
inc
xor
inc
jns
lret
sbb
popf
cmp
imul
xor
rclb
enter
or
pop
cld
dec
pop
adc
cwtl
bound
fisttpll
cltd
fwait
pop
cmp
orl
mov
adc
cmc
jecxz
jns
shlb
cmp
clc
mov
sbb
and
enter
xchg
mov
push
cmp
cmp
inc
and
xor
pop
mov
iret
aad
arpl
inc
pop
push
push
pop
mov
push
movsl
je
jbe
push
cmp
push
out
jmp
icebp
mov
and
out
sub
mov
ja
fadd
mov
aas
in
push
cmp
mov
adc
jno
jge
add
push
jnp
cmp
push
stos
pushf
sub
pop
lods
js
lea
sbb
pop
mov
cld
lods
sti
mov
mov
add
rorb
popf
bound
or
in
loop
cmpsl
test
push
js
lods
cltd
mov
lcall
orl
cmp
mov
cli
push
adc
pop
pusha
dec
in
mov
cwtl
mov
pop
sbb
fst
push
xor
in
jg
push
fs
or
mov
lds
or
xlat
movsl
or
out
cmp
or
loop
sar
imul
push
mov
jnp
push
scas
jne
add
pop
hlt
xlat
mov
das
repnz
push
cld
sub
push
or
sub
insl
dec
fs
sub
repnz
icebp
cmc
sbb
dec
addr16
pop
add
into
out
mov
and
xchg
xchg
outsb
iret
popf
mov
mov
sub
xor
push
movsl
dec
outsl
in
dec
les
and
jl
aaa
push
dec
lods
loope
cmp
xor
cld
jmp
jle
adc
jl
and
jne
scas
clc
sbb
orl
fisttps
ss
or
sub
popa
icebp
sub
xor
aam
xor
into
cli
mov
ds
das
cmp
in
inc
mov
fsubrp
aaa
xchg
and
jge
or
ljmp
les
mov
or
in
lret
mov
pusha
xor
dec
std
cli
cli
pop
addr16
repz
pop
int
push
jmp
mov
imul
int3
mov
jmp
mov
and
test
ret
out
lret
xchg
dec
je
cmpsl
repz
es
imul
mov
call
repz
dec
add
mov
fcoml
xchg
loop
or
mov
pushf
aad
inc
ficomps
pop
cwtl
es
fistpl
mov
js
sub
add
jbe
loopne
pop
popa
xchg
fst
and
adc
xchg
sbb
in
rorl
decl
and
lods
enter
lock
fwait
es
xchg
nop
and
dec
lock
dec
dec
lret
dec
mov
dec
ljmp
push
pop
scas
fwait
xlat
rolb
and
or
loope
aaa
xor
pop
lret
jle
pop
inc
movsl
dec
and
lcall
loope
shl
mov
les
pop
test
pop
pushf
sbb
cmpsb
add
ficoms
xor
cli
xor
push
mov
in
or
pop
bound
xorps
adc
adc
arpl
jmp
into
sbb
mov
cmp
or
loopne
aad
mov
dec
mov
rorb
call
ds
push
xchg
sub
std
in
cs
jmp
mov
sub
jbe
adc
negb
scas
xchg
mov
cmpl
adc
dec
mov
cwtl
dec
dec
dec
sarb
testb
in
in
test
xor
mov
daa
pop
push
mov
in
andb
bound
aas
lret
inc
ret
mov
xor
les
fwait
repnz
xchg
mov
sub
stos
jne
aas
out
pop
xor
gs
sbb
ja
pop
cmc
call
stos
cmp
out
jns
sub
add
fisubrl
adc
mov
addr16
loopne
pop
in
shrb
cmc
xlat
jle
push
loope
rcr
and
xor
sbb
jle
loope
pop
int
cmp
icebp
sbb
jnp
outsl
jmp
xchg
inc
mov
jmp
pop
fisubrs
fidivs
push
shll
sbb
inc
jge
mov
mov
mov
dec
call
sbb
adc
adc
les
movsb
test
mov
or
or
jl
icebp
dec
lret
fisubrl
fcomps
shlb
ljmp
enter
bound
rcrl
std
fcoml
je
dec
mov
je
icebp
pushf
outsb
hlt
clc
cwtl
outsl
sub
in
jae
js
push
xchg
adc
xor
ds
stos
pusha
pop
mov
sub
jp
push
leave
inc
outsl
adc
jno
ret
popf
and
js
cmpsb
inc
scas
lds
mov
lods
outsb
fmul
roll
stos
inc
xchg
add
and
or
adc
jbe
in
ss
test
dec
mul
or
mov
dec
insl
push
dec
pop
lods
jecxz
push
mov
mov
lcall
outsb
outsb
push
lods
sub
divb
dec
mov
rorb
and
lods
lret
mov
std
lods
loop
les
addb
cli
es
cli
add
test
and
inc
cltd
push
xor
arpl
adc
daa
ficomps
pop
mov
sarb
sbb
add
sarb
pushf
mov
inc
ljmp
pop
xchg
fs
xchg
dec
mov
xchg
push
add
shlb
xor
leave
in
or
movsl
push
inc
and
call
push
sbb
add
add
scas
pop
aaa
push
clc
xlat
and
xor
cmp
pop
mov
adc
cmpsl
fdivrs
mov
scas
jecxz
popf
cmp
js
jmp
jmp
into
rclb
dec
xor
pop
das
pop
outsl
cmpsl
mov
insb
ret
mov
mov
out
xchg
clc
insl
imul
inc
aad
pushf
cmp
addb
sub
enter
fs
add
push
push
mov
push
clc
lahf
add
inc
nop
mov
pushf
scas
cs
lea
inc
idivb
sbb
adc
sbbb
pop
incl
or
int
leave
clc
and
mov
xor
mov
call
add
or
sbb
xchg
pop
sub
adc
jmp
arpl
xchg
push
jge
cmpsb
shlb
aad
in
mov
imul
fsubs
dec
xchg
adc
fsubl
xor
daa
cmp
cwtl
imul
mov
rcl
adc
jno
addr16
dec
sub
aad
push
ds
cmp
popa
xor
rorl
scas
in
roll
inc
imul
mov
shlb
outsl
cmp
hlt
add
cmp
das
out
inc
test
xor
mov
idivl
sbb
out
cmp
push
fsubl
adc
cmpsb
push
int3
lds
or
mov
add
or
or
loope
or
xchg
ret
dec
cmp
push
enter
sbb
add
or
fstpl
daa
cmp
adc
pusha
sub
adc
mov
test
dec
pop
sbb
mov
in
sarb
stos
insl
sub
xor
adc
or
sbb
sub
test
jle
and
arpl
adc
orb
push
jp
mov
iret
cmpsl
cwtl
and
notb
jb
cmp
inc
mov
inc
jp
dec
xchg
lods
push
sahf
ret
cmpsb
sarb
mov
sbb
leave
inc
sbb
and
int
adc
xchg
push
cmpsb
pop
fucomip
mov
fidivrl
push
das
scas
cmp
push
lds
mov
adc
add
pop
sahf
loop
les
test
jno
mov
repnz
xchg
push
sbb
jl
popf
pop
sub
xchg
pop
subl
push
sbb
jns
and
mov
in
push
pop
test
xlat
dec
stc
js
pop
push
cmpsb
jge
rcr
push
jecxz
pop
or
hlt
ds
outsl
mov
es
out
dec
insl
or
xor
loopne
lahf
push
out
pop
mov
and
rcl
mov
movl
or
les
jg
movsl
adc
or
fistpl
stos
or
add
enter
cmpsb
add
cmpsl
inc
push
xchg
divl
jno
inc
popa
pusha
add
frstor
clc
int
xsave
aam
popf
jecxz
es
aas
fs
dec
mov
mov
adc
sti
xor
and
hlt
jge
sub
xor
orps
xchg
add
decb
jne
or
popf
fisubrl
jmp
div
lods
lret
fsts
adc
ficomps
ss
fdivl
out
and
insb
imul
jecxz
adc
adc
and
mov
imul
dec
xor
in
sub
mov
shr
mov
daa
sti
xor
push
ss
push
cmp
fs
xchg
jp
bound
jno
mov
stc
xchg
add
negl
or
pop
add
xor
xor
call
stos
sbb
sbb
jns
arpl
jno
loope
dec
movsl
inc
loopne
mov
scas
mov
lret
ficompl
push
cmp
rcrb
and
sub
xor
or
movsl
dec
mov
das
inc
test
jge
fs
sbb
lret
sahf
repnz
sti
inc
sarl
hlt
test
jbe
lock
jp
shlb
pop
repnz
lahf
cmpsl
jbe
xchg
xor
xchg
push
and
pushf
lea
stos
loop
pushf
or
cltd
fmuls
sbb
sub
in
push
jo
clc
repnz
xchg
jecxz
push
repz
mov
add
test
lock
fucom
or
sahf
std
pop
xlat
mov
repnz
cmpsl
mov
ret
sub
xchg
jns
xor
jo
and
push
mov
cs
aam
xchg
jno
lods
cmp
int3
push
ds
mov
cmp
jno
sbb
xchg
sbb
xchg
sbb
shl
stc
test
add
cmp
jae
lods
mov
cmp
add
out
loope
int3
shlb
push
daa
add
iret
cmp
inc
mov
inc
or
popa
inc
test
sub
call
pop
call
mov
adc
push
popa
push
jge
outsb
lret
dec
jecxz
xchg
test
lcall
mov
mov
fcomp
sbb
cli
popf
mov
cmp
pop
cmp
mov
jnp
fdivs
inc
stos
pop
cmp
add
repz
popf
xchg
push
sub
jo
cmp
or
add
fs
das
inc
dec
push
xchg
xchg
and
nop
mov
inc
loop
jae
mov
mov
mov
lahf
xor
adc
loopne
into
dec
sahf
add
filds
jne
aam
mov
lcall
jmp
inc
jg
mov
pushf
mov
and
sarl
cmc
pusha
sub
dec
sub
lods
fwait
inc
push
jbe
movsb
call
test
leave
sbb
sub
xor
mov
xor
lret
call
jbe
rorl
sub
or
arpl
inc
dec
inc
mov
jmp
jmp
fcmovne
xor
and
mov
bound
ret
fwait
ret
shlb
daa
jno
or
sti
push
jp
xchg
sbb
xchg
push
pop
lds
pop
sub
pop
loopne
out
jecxz
int
jno
loopne
aaa
cwtl
into
jl
repz
push
insl
mov
and
sbb
sub
lds
cmp
scas
pop
adc
jg
decb
xchg
xchg
fucomi
fisttpl
dec
mov
mov
ret
insl
lds
sbb
cmp
rcl
ja
sub
pop
lahf
aad
es
imul
or
lds
xorl
pop
lahf
add
mov
jb
outsb
sbb
adc
xor
mov
and
cmp
inc
inc
imul
in
or
dec
cld
and
daa
xor
out
pop
adc
mov
pop
cmp
pop
xor
mov
ret
xchg
mov
nop
in
fcmovnb
dec
daa
clc
sbb
fisubl
arpl
jne
adc
jbe
push
ret
and
jb
inc
and
mov
bound
pop
sbb
pop
add
repnz
scas
cli
or
insb
mov
dec
xchg
cwtl
scas
mov
lds
fildll
cli
das
adc
inc
cmpsb
cli
add
sbb
or
jecxz
cmp
cmp
nop
mov
pop
sahf
pop
inc
fadds
add
jne
mov
jbe
mov
cmp
sbb
mov
sahf
ljmp
add
hlt
jg
mov
das
lret
aas
dec
shrb
mov
outsl
sbb
xor
sub
out
ficompl
cltd
dec
xchg
dec
fwait
sub
imul
popa
adc
inc
sbb
lahf
cmc
jmp
cwtl
iret
fbld
jl
dec
sub
out
mov
mov
jp
jns
jb
push
cmp
imul
dec
int
lods
jmp
or
sub
sub
push
loope
cmp
xor
push
fs
ret
or
enter
mov
jnp
fsubr
leave
mov
add
mov
jmp
nop
mull
or
cld
dec
cli
mov
or
shll
jl
mov
adc
push
lods
sub
lret
stos
sub
movsl
push
push
js
arpl
outsb
or
lahf
xor
icebp
out
adc
dec
das
lods
dec
fildll
fistpl
lods
dec
cmpsl
in
dec
popa
push
add
movsb
jp
fs
cltd
adc
push
in
xchg
mov
pop
cwtl
dec
movsb
sbb
bound
mov
sbb
je
cli
jb
jnp
testl
xchg
stos
xor
push
hlt
and
jbe
pop
inc
inc
jns
sub
xor
inc
inc
in
jo
jb
or
sahf
fdivs
and
lret
enter
ss
lret
daa
lcall
push
in
sbb
insb
hlt
stos
dec
scas
xor
pop
lcall
or
pop
and
leave
mov
jecxz
mov
fwait
nop
adc
xchg
les
inc
andb
std
imul
lock
xorb
and
fnstenv
add
mov
fisubl
fsubrl
jae
dec
inc
pop
push
ljmp
xor
xor
enter
pop
scas
idiv
call
or
push
inc
ret
push
sti
mov
cltd
pop
test
cmp
push
push
mov
xor
repz
xor
sbb
cmp
dec
pop
repnz
adc
jae
or
test
pop
into
jbe
stc
xchg
inc
test
mov
mov
cmc
xor
jmp
add
movsl
xchg
cmpsb
sub
mov
shlb
ror
xchg
out
out
mov
push
and
rorl
add
repnz
dec
cmpl
dec
cld
sbb
cmp
jl
cmp
xor
fidivrl
mov
xor
dec
je
pop
mov
jmp
cmp
mov
sub
mov
add
ret
call
repz
push
aad
or
icebp
pop
sahf
stos
aaa
pop
mov
into
mov
js
and
repz
xlat
jns
lret
push
or
mov
mov
mov
popa
js
or
rorl
or
xchg
ud0
cmp
mov
jb
sbb
cmp
addr16
push
or
negb
and
pusha
fwait
arpl
sahf
jl
fsubrl
xor
mov
js
insl
jecxz
xchg
int
ret
test
cmp
aad
in
repz
sbb
sub
leave
jp
sub
sbb
pop
jp
sub
add
mov
xchg
loope
mov
into
xchg
or
jbe
xchg
xor
fcompl
pop
mov
fcoms
dec
pop
inc
push
inc
and
cs
sbb
mov
in
jge
repnz
cmpsl
sbb
pop
sub
data16
dec
pop
mov
das
add
sti
add
mov
sbb
icebp
inc
ret
add
or
cs
add
sbb
scas
adc
push
add
dec
out
and
mov
adc
dec
shrl
inc
movsb
jae
mov
jle
jnp
lret
push
push
in
cmp
adc
sub
fadds
or
aaa
movsb
inc
daa
sti
pop
ficomps
jno
dec
sahf
push
mov
pusha
leave
es
movsl
or
inc
dec
jmp
call
push
adc
xchg
sbb
jns
enter
push
lret
and
enter
pushf
push
outsl
inc
in
ljmp
cmpsl
icebp
mov
leave
shrl
push
scas
sti
xchg
push
cmp
pop
jb
out
jo
push
sub
call
and
sti
mov
pop
nop
cld
jmp
mov
cwtl
mov
push
jne
loop
jg
jg
or
fs
nop
movsb
bound
pop
or
pop
inc
shlb
scas
sub
mov
inc
mov
push
pop
mov
or
loope
adc
inc
les
ret
insb
pop
xor
cmp
test
and
repnz
int3
fcoms
cltd
sub
mov
orb
pushf
mov
fimull
rclb
in
pop
dec
adc
pop
pushf
ja
adc
ss
sbb
cltd
jg
lock
in
jmp
lret
aaa
add
dec
rcr
inc
mov
es
adc
lea
loope
and
add
adc
inc
inc
addr16
lods
fstps
mov
add
mov
mov
jl
pop
mov
fdivp
add
popa
stos
xor
insb
mov
int3
js
jp,pn
mov
xchg
adc
jo
fstpt
movsb
pop
out
jns
mov
add
and
push
mov
sbb
pushf
sub
in
pusha
add
lock
test
insl
ret
inc
or
je
adc
and
rcll
int3
lret
movsb
ror
je
xchg
cld
loope
pop
int
xchg
xchg
mov
ret
aas
data16
dec
inc
jno
in
adc
lcall
and
cmp
or
xchg
mov
fidivrs
lods
divl
jl
or
lcall
frndint
xor
and
popf
shrl
cmp
fs
adc
jp
add
rorl
scas
xchg
lds
sti
jnp
cwtl
cmp
push
dec
dec
pop
xor
incb
mov
add
jg
add
arpl
popa
cwtl
adc
and
ret
daa
loope
jne
nop
adc
out
and
sub
xor
mov
nop
cmp
leave
push
sbb
out
repz
inc
push
pop
insl
jae
out
jmp
ljmp
iret
xchg
test
pop
mov
add
outsb
sbb
ret
fs
mov
aas
notl
jmp
cli
pushf
fsincos
mov
popf
pop
jnp
ds
nop
push
stos
sub
add
repnz
insl
stc
pop
cltd
sub
xor
push
push
adc
lret
sar
jecxz
daa
lcall
fcoml
addr16
iret
lods
in
fisubrl
pop
mov
out
sti
fistl
imul
mov
das
inc
pop
clc
pop
xor
adc
lods
inc
shlb
or
cmp
lock
add
pop
cmp
adc
out
xor
lcall
cltd
jb
xor
cmp
mov
std
xchg
xor
push
and
fiadds
hlt
aas
mov
mov
add
mov
out
pop
jl
sbb
imul
jnp
sbb
dec
cli
xlat
repnz
fists
or
fcoms
xchg
push
xor
xor
jle
rclb
iret
das
dec
repz
dec
sbb
sbb
cmc
in
ja
push
inc
mov
enter
sub
and
lahf
das
out
mov
call
lret
or
adcb
cwtl
adcb
inc
cmpsb
je
sub
dec
jo
mov
sti
addr16
or
sbb
lret
leave
fnstcw
bound
push
nop
imul
imul
fadd
inc
daa
test
ret
sub
push
jb
pop
cmc
imul
inc
fadds
mov
jecxz
loopne
add
jecxz
xor
jae
aad
aad
xchg
das
movsl
pop
leave
inc
das
loopne
xchg
jle
pop
std
adc
cli
jecxz
or
popa
push
push
repnz
and
fistpll
mov
mov
cmp
pop
pop
clc
mov
add
pushf
sbb
lahf
insb
mov
rcl
adc
inc
sbb
mov
aad
dec
mov
and
add
mov
jmp
mov
cli
sub
stos
cwtl
pop
lea
pop
or
mov
mov
inc
and
lds
push
cmp
cmp
arpl
pop
stos
mov
rcrb
mov
addl
sbb
dec
and
inc
lret
fistpll
pop
and
adc
loopne
sbb
ret
mov
outsb
sub
rcrb
enter
lea
mov
data16
sbb
cmp
hlt
adc
mov
fsubs
repnz
fisubs
cli
xlat
pop
loop
add
sub
scas
test
push
mov
mov
push
fxch
call
cli
ficoms
leave
shlb
insl
lock
or
jb
add
jne
sbb
bound
mov
pop
cmp
movsl
cmc
jmp
idivl
adc
std
push
fbld
mov
cmp
pop
ret
xchg
cmpsb
sbb
aam
add
mov
and
cmp
xchg
push
stos
scas
pop
sar
rolb
inc
dec
xchg
icebp
cmp
or
adc
data16
popa
push
idivb
aaa
jno
std
sbbl
push
mov
in
in
push
lods
add
mov
outsl
mov
clc
shll
xchg
rcl
inc
jo
in
dec
and
faddl
ss
and
pop
sub
int3
or
pop
mov
bound
addl
and
aam
adc
movsb
mov
push
jne
ret
fmuls
in
push
mov
push
or
mov
push
dec
nop
call
inc
lret
test
aam
test
aaa
and
push
pop
pop
lahf
aas
or
mov
and
sbb
xor
jp
pop
inc
xchg
pop
cmpsl
rcrb
pop
aaa
lret
pop
daa
xchg
out
dec
inc
ss
mov
insb
mov
lret
loop
mov
std
lcall
cmp
jmp
and
jne
jb
mov
aad
fidivl
jg
sub
lahf
inc
out
inc
add
push
mov
insb
sub
into
in
cmp
hlt
dec
jbe
or
std
mov
dec
mov
out
xchg
xchg
bound
inc
enter
pop
xchg
xor
pop
inc
test
cmp
mov
add
xchg
lea
push
popa
cmp
pop
mov
dec
and
ds
cltd
test
mov
add
gs
decl
cwtl
test
fmul
sub
push
outsl
insl
out
int3
in
aaa
cmpsb
rclb
repnz
cmp
lods
add
or
jge
xchg
ljmp
xchg
and
inc
sub
lds
mov
sub
lods
fisttpl
cmp
movb
inc
addb
cld
xchg
xchg
sbb
aaa
adc
arpl
adc
adc
dec
mov
sub
add
mov
mov
sbb
mov
scas
add
dec
addl
jb
test
sub
cmp
std
mov
es
inc
insl
dec
ret
ja
and
mov
icebp
cmp
or
nop
jp
loopne
aad
mov
fistl
outsl
mov
fstpt
xchg
mov
mov
test
movsb
mov
push
aam
fcmovnu
cmpsb
cmp
xchg
test
sbb
in
push
cmpsb
mov
and
dec
rcl
jb
mov
testl
mov
idiv
sub
das
ja
push
cmp
test
bound
xlat
sub
mov
or
mov
cmp
hlt
ret
xchg
xchg
or
bound
int3
add
mov
loop
rorl
xlat
in
movsb
pop
sbb
test
imul
fistpl
cli
fldt
add
pinsrw
test
xchg
es
fisubs
iret
idivb
aaa
imul
sbb
xor
jbe
xor
xor
mov
inc
mov
and
add
cld
es
loope,pn
sbb
out
roll
dec
lahf
insl
out
xchg
jne
xchg
lods
stos
xchg
testb
xchg
cwtl
xchg
cmp
leave
ret
adc
leave
adc
sub
cld
ficoms
cmp
cmp
out
aam
out
dec
nop
dec
jbe
xchg
or
pop
mov
cwtl
mov
xchg
jge
sbb
fs
adc
ret
push
xor
call
inc
mov
jp
sahf
xor
cld
loope
aas
stc
mov
dec
aas
dec
pop
das
push
stos
shl
mov
xor
imul
push
jno
dec
xor
test
aam
inc
cltd
out
mov
test
pop
popa
inc
fs
jecxz
jp
cmp
sub
aam
mov
std
jno
sbb
loop
data16
xor
out
fdivrs
cmpsl
sbb
pop
xchg
mov
aas
popl
bswap
cmp
pop
imul
and
cmpsb
dec
sub
add
mov
jns
iret
and
fdivs
pop
mov
sbbl
pop
fdivs
fisubl
push
mov
push
inc
imull
xor
jbe
mov
decl
lds
arpl
cmpsl
insb
xor
mov
fdivl
add
lds
leave
mov
fimuls
repz
jge
jmp
insb
out
outsl
push
and
xlat
xchg
fisubrs
adc
or
mov
xchg
pop
add
jo
jle
rolb
mov
mov
pop
popa
in
dec
jmp
mov
sahf
cmp
pextrw
and
dec
mov
sbb
push
int
sti
fists
lahf
mov
sub
jge
rcrb
je
imul
call
nop
das
cmpsb
repnz
icebp
pusha
mov
dec
push
pop
add
fnstenv
inc
loopne
mov
sbb
mov
add
lret
in
shr
test
xor
les
mov
dec
xor
ljmp
mov
mov
or
jb
xor
and
in
inc
sbb
stc
cmp
jmp
adc
jp
das
rcll
or
mov
movsl
jo
jbe
sbb
pop
mov
sbb
sti
loopne
cmp
jp
sub
in
mov
sbb
cmpsl
es
int
jle
adc
mov
mov
push
inc
sub
addr16
sbb
xlat
arpl
sti
mov
xchg
adcl
cwtl
xlat
imul
loop
nop
jge
adc
push
out
aas
dec
leave
xor
popa
lahf
test
inc
mov
ljmp
sti
insb
rcrl
mov
or
xor
adcl
mov
sbb
xchg
jl
push
pop
fwait
fwait
out
adc
pop
loop
mov
cmp
andl
mov
aam
mov
sahf
aam
popa
inc
inc
pop
cli
js
and
nop
test
into
enter
dec
cmp
scas
push
push
jp
jae
fstl
mov
aad
jns
out
orb
scas
xchg
xorb
mov
inc
lcall
iret
insl
mov
loope
pop
xorl
push
lret
xor
sbb
out
xchg
js
mov
cwtl
je
lcall
xchg
xor
outsb
mov
mov
mov
jg
lcall
cmp
fidivl
enter
scas
add
adc
jmp
jbe
pop
add
push
jbe
sbb
jmp
sbb
rcrl
push
sbb
xlat
shll
jnp
std
call
mov
in
clc
lret
lahf
adc
mov
mov
pop
push
push
push
subb
out
cld
xchg
ret
aaa
adc
push
in
dec
std
lcall
mov
rcll
mov
push
xlat
test
sbb
push
in
dec
push
sub
xor
jle
sbb
stc
in
sbbb
repnz
dec
push
inc
ljmp
out
push
or
xor
ficompl
xlat
fdivl
outsb
and
in
cmpsl
ret
lahf
and
add
dec
lods
enter
sti
and
mov
test
mov
insb
in
xor
inc
jle
ds
mov
cmp
xchg
dec
push
cmpsb
icebp
push
rcrl
dec
mov
pop
aad
push
cmp
lods
pop
mov
mov
xor
inc
cmpsb
lret
push
mov
ret
mov
xchg
rorl
loop
pop
sahf
insl
ret
xor
cmp
ljmp
ret
lock
addr16
shr
ja
leave
test
sbb
pop
and
dec
sbb
push
xchg
xchg
mov
mov
cmp
sbbl
push
pop
fcmovnb
addr16
adc
mov
xchg
ljmp
movsb
sti
mov
sti
fwait
inc
xor
adc
nop
xchg
ds
pushf
lods
mov
xchg
adcb
imul
mov
sti
sahf
shll
iret
pop
int3
fnstcw
mov
out
pop
xor
or
outsl
movsl
and
push
push
bound
mov
cmc
lds
repz
adc
sbb
dec
xchg
mov
lods
mov
mov
push
xchg
js
jbe
fidivs
in
int
stc
jbe
xchg
test
pop
add
cmp
inc
add
ljmp
xchg
pushf
or
push
ret
adcb
mov
neg
dec
hlt
mov
out
rcrb
or
adc
aas
mov
out
outsl
adc
int
or
popf
jnp
shll
dec
test
jl
mov
jg
lret
mov
jns
or
outsl
les
enter
sbb
adc
out
psubusw
push
mov
xchg
dec
mov
arpl
in
sbb
adc
outsb
in
sbb
stc
jnp
inc
or
adcl
mov
sub
icebp
pop
and
sub
lret
add
fs
push
arpl
mov
test
pop
cmp
icebp
andb
xorl
mov
lods
imulb
fisttpl
imul
sub
inc
repnz
xor
std
sbb
and
push
aam
repz
jp
add
adc
mov
cltd
scas
cwtl
cmp
mov
shrb
int3
imul
cmp
mov
adc
xchg
clc
inc
in
gs
jno
add
sbb
pop
fmulp
push
movsl
add
shl
cmc
cld
xchg
xor
dec
jns
jb
push
jmp
sub
loopne
movsl
sbb
icebp
push
arpl
iret
pushf
shlb
mov
cmc
mov
loop
xchg
pop
inc
lret
testb
test
fwait
lods
insb
add
mov
cmp
adc
dec
jno
lret
mov
std
push
mov
leave
cmc
out
adc
xor
xlat
xor
inc
sar
xchg
xchg
ja
les
test
jmp
jl
cmpsl
xchg
xchg
mov
rol
hlt
scas
arpl
rorl
mov
shlb
imul
out
pop
or
js,pn
aam
scas
adc
cld
cmp
pop
test
adc
in
xchg
pop
pushf
les
ss
adc
xor
sub
cs
sbb
xor
ja
imul
and
int3
cmp
xchg
xchg
in
insl
setb
in
into
pop
fld1
cmp
push
dec
jp
leave
sbb
rclb
lods
movsl
out
sbb
aam
jo,pn
push
pop
inc
or
loopne
negl
imul
add
adc
mov
rcl
mov
rcll
sub
sub
lahf
enter
or
imul
and
mov
repz
outsl
inc
jmp
xor
mov
adc
test
adc
inc
jno
xor
lret
enter
sbb
shlb
ljmp
xchg
mov
fstp
mov
cltd
je
aas
adc
popf
rorl
push
cmpsl
cmpsb
sub
push
mov
rolb
mov
xchg
pop
ljmp
sti
ret
dec
mov
xchg
jb
or
xchg
cli
addb
icebp
adc
repnz
pinsrw
mov
in
divl
inc
addr16
popa
std
cmp
mov
add
inc
adcl
mov
add
cld
aas
sbb
and
mov
icebp
xchg
inc
jno
cld
sub
or
jnp
mov
cmp
lahf
inc
repnz
xor
mov
stos
dec
jp
adc
aaa
roll
shrb
jmp
pop
out
adc
cmpsl
xorb
arpl
jns
xchg
or
mov
aad
fs
cmpsb
mov
fmuls
pop
movsb
or
cmp
mov
jno
sbb
and
dec
xchg
xchg
mov
or
jo
mov
movsb
inc
dec
push
outsb
fnstsw
test
xchg
add
pop
push
mov
sti
stos
ret
xchg
movsl
xchg
xchg
add
addr16
adc
dec
pop
jns
sbb
jp
jno
cs
adc
ss
xor
adc
loope
cmpsl
inc
js
inc
push
push
and
popf
dec
and
push
mov
sub
fyl2xp1
xor
and
dec
clc
jo
xor
or
adcb
mov
sub
xchg
push
mov
cmp
add
and
cmp
repz
repnz
jmp
or
pop
mov
bound
xorl
popa
cmpsb
jae
sbb
add
pop
enter
and
sub
cld
xchg
fs
lock
push
ret
push
add
and
scas
mov
jge
stc
push
mov
insb
and
addr16
hlt
loopne
in
mov
std
shrl
mov
test
iret
or
dec
fbstp
mov
popa
lds
lock
jmp
xchg
lahf
pop
xchg
in
inc
popa
adc
loope
pop
cld
nop
mov
sub
lods
sbb
repz
pop
cmp
xchg
test
in
jb
out
add
fcmovb
fnstcw
aas
inc
leave
xchg
and
inc
push
add
mov
sub
sub
roll
add
and
xchg
xor
add
pop
or
dec
fwait
out
insl
add
inc
into
leave
rcr
adc
aam
test
mov
lcall
lahf
adc
aaa
imul
sub
and
push
ss
clc
icebp
xchg
pop
xor
and
xlat
xorb
cwtl
nop
sbb
js
push
cmp
cmc
sbb
xorl
inc
mov
add
dec
pop
ficompl
int3
mov
imul
cmp
mov
pushf
sbb
xchg
mov
cli
dec
pop
aam
gs
adcl
shrb
cmp
lea
push
mov
cli
ljmp
jmp
loope
ficomps
dec
lcall
dec
mov
pop
pop
jecxz
inc
or
std
inc
jbe
stos
mov
mov
or
push
cltd
cwtl
mov
jae
mov
cmp
jns
mov
xor
ljmp
adc
ss
lahf
nop
popa
add
sub
or
push
int
repz
insl
inc
mov
pop
pop
rolb
loope
stc
mov
inc
cmp
out
sarl
stos
xchg
or
daa
mov
push
shll
fnstsw
mov
icebp
out
test
movsl
insl
call
dec
jmp
and
push
cmpsb
add
dec
xchg
jno
loopne
jbe
addb
and
jle
stos
xchg
pusha
loopne
scas
or
inc
mov
or
xchg
push
addr16
jns
jecxz
aam
mov
fdivp
clc
lcall
or
and
popf
lea
add
out
outsb
pop
std
xlat
push
out
and
adc
hlt
test
mov
pop
js
and
or
pop
push
int3
add
push
jne
jo
adc
xor
iret
pop
test
ljmp
cwtl
loope
adc
mov
xchg
aad
xchg
jg
iret
add
movsb
aaa
scas
add
jle
lcall
loope
sub
pop
xchg
outsl
stc
std
pop
xor
iret
xchg
or
repz
mov
repnz
sbb
xlat
sbb
mov
mov
mov
xor
cmc
movnti
aaa
push
mov
fs
mov
and
aam
mov
lods
enter
cli
ja
testb
fdivrs
pop
mov
jg
clc
xor
lea
incb
push
jl
mov
adc
mov
xor
dec
inc
pop
iret
cwtl
cltd
fcmovbe
push
in
push
arpl
sub
popf
arpl
lds
sbb
lret
mov
push
jmp
stc
dec
test
fs
in
mov
les
cwtl
sub
pop
lods
outsb
sahf
faddp
push
mov
mov
loop
jg
ljmp
popa
jnp
cltd
push
push
imul
les
enter
insl
mov
jnp
inc
loopne
jno
mov
arpl
mov
dec
xchg
pop
fisubs
stos
mov
add
iret
stos
leave
pop
xchg
movsl
popa
ret
xchg
mov
ja
lahf
jle
aad
push
sub
cmp
daa
xor
xor
out
jb
jne
push
mov
and
sti
push
adc
popa
jb
adc
sbb
sbb
sbb
jb
mov
xchg
mov
addr16
xor
out
push
idivb
ja
in
test
loopne
cltd
ss
and
subb
sub
in
sbb
hlt
mov
push
adc
pusha
xchg
pmaxsw
enter
add
jecxz
and
push
imull
cmpsl
clc
mov
sub
pop
xchg
push
dec
mov
ret
or
pop
imul
popf
cmp
arpl
imul
std
addr16
push
loopne
shrl
xchg
push
call
imul
sub
lods
xor
es
packsswb
jecxz
jb
pop
fs
add
testl
mov
mov
fwait
mov
loope
fcoml
add
xchg
nop
mov
movsb
in
jae
add
mov
or
lret
ficomps
adc
lahf
aas
push
or
cmp
sub
int3
loopne
negb
pop
stc
sbb
nop
and
movb
pop
xchg
jnp
xor
arpl
add
mov
xorb
in
push
mov
push
xor
rcl
push
in
add
lods
out
sub
hlt
push
xchg
cmp
xlat
adc
mov
mov
push
cmpsb
pop
test
cmpsl
xor
pop
add
adc
mov
inc
inc
sbb
test
nop
mov
daa
ret
lods
cltd
enter
jns
stc
sarl
les
or
ficomps
cmp
cli
jbe
aas
ret
mov
mov
call
cmpsb
cltd
out
aas
mov
jo
mov
dec
add
fnstenv
pop
scas
sbb
and
aaa
aam
cwtl
xor
out
and
cmp
mov
insl
fsubl
arpl
aad
inc
pop
inc
icebp
mov
lret
pop
dec
int
pop
fldcw
push
mov
dec
mov
jnp
add
dec
mov
outsb
jo
inc
ret
std
jno
cwtl
imul
fdivrl
jo
push
pusha
push
rol
sub
stos
sbb
xchg
arpl
sub
dec
mov
icebp
cwtl
mov
add
jne
aad
add
jle
sbb
push
fwait
jbe
sub
adc
cmp
mov
mov
pop
xchg
push
xchg
mov
jl
sbb
rorl
sbb
add
sbb
push
and
mov
push
lahf
fdivrl
rcr
lock
xor
lcall
aas
sub
call
arpl
push
pop
fisttpl
add
sbb
lcall
shrl
fs
stos
rcrl
inc
stos
mov
jbe
xchg
sbbb
cltd
rolb
pop
mov
aad
add
mov
arpl
mov
mov
cmp
shlb
dec
cmp
mov
xlat
shrl
sbb
aad
or
jnp
sub
int3
cmp
movsb
adc
xchg
aas
out
mov
fadds
insl
fcmove
jns
pushf
xchg
pop
jae
mov
inc
sbb
loop
push
pusha
shr
inc
jbe
pushf
out
testl
dec
adc
mov
stos
or
and
or
loop
or
inc
xor
xor
lahf
or
jmp
popf
faddp
add
inc
lds
iret
scas
pop
push
out
sbb
pop
xor
insl
lock
sub
cli
daa
inc
test
jg
gs
dec
cmp
xor
loope
cmpsb
jg
mov
fs
mov
in
xor
cld
insb
cwtl
dec
inc
xchg
sbb
pop
inc
cltd
test
scas
push
dec
mov
gs
inc
iret
or
adc
lds
leave
daa
xor
aad
into
leave
test
push
pop
mov
add
mov
cmp
lea
inc
xchg
mov
mov
loope
rcr
clc
rolb
popa
sub
and
add
mov
jb
adc
mov
es
neg
mov
mov
movsb
repz
fsubp
ja
push
incb
push
outsb
push
cmc
dec
adc
xchg
fmulp
cli
pop
mul
and
lds
mov
inc
pushf
decl
in
inc
insl
sub
ficompl
xchg
fwait
inc
imul
les
shlb
push
stc
pop
push
pop
dec
dec
xchg
push
scas
cmpsl
insl
dec
das
mov
sbb
les
les
ljmp
inc
out
xchg
mov
aam
sti
push
jns
jg
inc
push
push
loope
inc
insb
leave
mov
mov
stos
dec
pop
repz
into
ljmp
into
icebp
add
in
push
orb
adc
xchg
lcall
test
and
lret
xchg
cwtl
pushf
xchg
daa
stc
loopne
lret
les
mov
scas
sub
push
mov
pop
sbb
dec
mov
mov
sub
out
jge
xor
into
cwtl
mov
cltd
jl
sti
imul
fbld
cmp
pop
andb
cmp
pop
pop
pop
les
dec
inc
push
xor
into
jnp
or
and
add
or
dec
pushf
popf
sahf
movsl
add
std
mov
mov
jmp
aam
leave
popa
stc
adc
sbb
mov
sti
in
xchg
in
ss
xchg
jmp
cmp
std
fsubrl
in
adc
mov
push
push
lock
jp
test
dec
cld
imul
rcl
out
inc
loop
iret
dec
lret
iret
cmp
pop
mov
and
or
add
clc
add
cld
and
push
aad
rcrb
sbb
stc
imul
movsb
je
pop
in
dec
ds
movsb
lahf
mov
cwtl
outsl
mov
sbb
dec
mov
mov
push
pop
cmc
shlb
adc
test
adc
jb
add
pushf
pop
std
or
popa
aaa
sub
les
dec
xchg
jb
pop
ficoms
xor
or
test
jmp
ja
das
pop
shl
or
jnp
or
mov
inc
aaa
cmpsl
pop
std
jnp
xchg
push
mov
cmc
test
push
icebp
nop
mov
test
add
or
jmp
dec
cld
inc
icebp
call
xchg
enter
lock
pop
dec
cmpsb
loopne
xchg
cmp
in
jp
fldt
fst
cmp
fadd
mov
ds
int3
mov
outsb
test
insl
adc
push
fmuls
cmpsl
push
jp
mov
fisttpll
or
pop
mov
imul
fdivrl
call
jae
push
fcoml
mov
test
shll
xchg
mov
jae
lahf
inc
stc
mov
dec
shl
mov
sub
aaa
xchg
or
mov
cmp
cwtl
aaa
push
test
test
mov
in
dec
xchg
sub
push
push
xchg
mov
sbb
ljmp
std
and
movsb
div
and
xchg
add
insl
out
jno
jg
leave
push
imul
adc
xchg
adc
enter
push
sub
sub
std
inc
jno
mov
loopne
sti
ljmp
and
and
xchg
sbb
xor
mov
out
mov
xchg
out
stos
xchg
out
shlb
js
mov
aas
cwtl
arpl
mov
pop
in
lock
shlb
ss
cmpsb
pop
inc
push
dec
jb
push
lods
mul
cmp
add
pop
lahf
cltd
int3
fildl
inc
adcb
push
mov
jp
in
push
outsb
jo
xor
mov
xchg
xor
mov
fiadds
iret
daa
lock
into
dec
xchg
xor
lcall
pop
jg
dec
pop
sbb
scas
mov
data16
mov
sbb
cld
lret
call
repz
outsl
cmp
bound
lods
cmp
fdiv
dec
pop
frstor
sub
cmp
adc
dec
and
call
aaa
mov
mov
xchg
leave
inc
push
test
mov
loope
cmp
ljmp
dec
push
addb
es
mov
push
rclb
pop
push
pusha
xorb
stos
enter
and
dec
mov
std
icebp
cwtl
out
push
sti
lods
xchg
cmp
dec
cwtl
lods
sbbl
jbe
and
daa
jle
push
mov
movb
into
cltd
xchg
sbb
inc
pop
inc
xorl
fistl
or
push
lret
stos
and
pop
testb
ret
test
insb
mov
aam
ljmp
xor
ds
jne
daa
cld
int
iret
pop
out
xor
cmpsl
sbb
mov
dec
xlat
in
pop
int
mov
lock
add
xor
outsl
in
fsubrl
sub
mov
lods
pushf
push
add
arpl
dec
xor
adc
cs
cltd
push
dec
repnz
mov
aaa
out
sub
and
jp
lock
ss
cld
cmp
cmpsl
mov
les
push
test
lea
pushw
loope
xor
das
das
imul
in
jns
iret
mov
adc
call
mov
inc
stos
push
sub
mov
rep
imul
clc
test
jne
xchg
xchg
xchg
inc
jns
fs
bswap
sbb
imul
fwait
ss
mov
pushf
iret
and
jl
push
loopne
xchg
xchg
addl
loop
mov
fisttpll
ds
out
mulb
dec
fs
cwtl
jp
xor
sbb
or
push
push
mov
test
lahf
xlat
adc
or
aad
cmp
lods
and
sub
ss
sar
js
insl
data16
ror
stos
in
jbe
push
push
outsb
int3
push
jno
mov
cmpsb
notb
fmuls
data16
sbb
das
lahf
nop
adc
inc
fildl
cs
jo
mov
fdivr
cmp
dec
and
or
fmull
aad
or
and
and
mov
aam
xchg
inc
add
push
xchg
or
mov
mov
fdivl
icebp
movsl
lret
pushf
mov
sub
jecxz
mov
lock
rclb
addl
lcall
mov
mov
dec
cmp
pop
jo
leave
test
jne
pop
ffree
movsb
int
inc
sarb
jp
pop
mov
dec
leave
and
sbb
pop
cmc
jle
xchg
jge
dec
dec
lea
dec
cs
movsl
stos
fwait
lahf
mov
outsb
sub
and
mov
mov
js
and
test
and
adc
mov
sarl
loope
mov
sbb
wrmsr
xor
les
mov
inc
sub
and
in
pop
dec
add
inc
jb
out
jmp
cli
pop
pushf
jle
push
cmp
fbld
test
jp
pop
imulb
std
push
sub
xlat
adc
xor
push
rolb
push
pop
inc
arpl
xchg
jo
rcrb
push
adc
add
leave
mov
cmp
pop
mov
test
mov
pushf
shrb
cmp
ss
mov
mov
cmp
loopne
cmp
in
xor
int3
inc
iret
xor
out
sub
jle
dec
out
sbb
pop
movsb
into
mov
inc
ror
cmp
sbb
lahf
lds
dec
add
adc
sti
mov
ljmp
icebp
cmovae
add
shll
jnp
lds
and
mov
aad
lods
in
bound
sub
leave
fisubrl
das
xchg
push
dec
cmp
jecxz
outsl
push
inc
or
sub
mov
adc
mov
mov
movsl
or
js
push
xor
nop
xor
movl
push
insl
mov
out
pop
mov
lcall
shrl
ja
xor
shrb
sahf
cmc
push
or
xor
fidivl
cwtd
xchg
adc
js
push
idivl
packssdw
mov
fbld
cltd
mov
push
add
mov
jno
dec
dec
cltd
dec
lods
inc
test
pushf
sahf
aad
in
rcr
jle
inc
pop
das
sbb
xor
bound
mov
movsl
mov
cmp
inc
xchg
stos
decb
dec
pop
pop
pop
add
sbb
cmp
sbb
mov
mov
inc
pop
pop
cmpb
mov
or
xor
xchg
fldt
fs
push
mov
shll
pop
mov
bound
inc
mov
ja
pushf
mov
mov
push
mov
add
add
add
lods
or
adc
scas
mov
cld
mov
sbb
dec
in
das
inc
jmp
bound
test
faddl
popa
or
addr16
test
jae
jl
call
out
sbb
xchg
repnz
into
repnz
imulb
pushf
pop
mov
xchg
inc
cli
jnp
fnstcw
and
jbe
pop
jl
call
imul
fdivl
hlt
sbb
mov
jecxz
fisttpl
mov
dec
jmp
dec
test
or
mov
inc
cs
lods
add
xchg
xchg
sub
loop
loope
or
sub
mov
sub
xchg
inc
cmpsl
in
insb
lods
xchg
adc
in
cli
sbb
adc
pop
mov
sbb
xchg
adc
lods
sti
stc
lods
dec
jl
loop
mov
push
or
push
mov
popa
mov
stos
lods
push
push
lret
orb
jb
jno
fs
std
add
pop
scas
fisubs
aas
popa
xor
sbb
pop
popa
and
sbb
in
loope
xchg
or
jo
or
les
jmp
outsb
icebp
mov
mov
in
dec
je
pop
mov
inc
mov
xorb
ss
arpl
mov
jp
clc
xorl
pop
and
leave
mov
aaa
dec
cwtl
orl
dec
push
int3
ss
xor
sub
fwait
or
sbb
shrl
sbb
and
mov
push
xor
cmp
dec
sar
sub
out
test
ds
loopne
cmc
or
scas
mov
inc
pop
adc
adc
test
iret
push
jae
outsl
jl
test
arpl
xchg
loope
push
out
fmul
sub
pop
pop
mov
std
lods
mov
push
dec
lods
fstpt
sub
dec
inc
fmulp
push
jecxz
loop
and
push
cltd
lods
in
pop
jnp
in
leave
add
xchg
inc
and
fimull
jl
add
sbb
addb
scas
js
rorl
scas
das
or
mov
in
mov
xchg
push
cmp
lods
mov
mov
and
dec
sub
imul
push
add
mov
push
aam
dec
aaa
adc
jnp
dec
pop
test
adc
pop
adc
push
push
cmp
and
rolb
xor
cmp
pop
test
jb
or
jp
jge
mov
imul
cmp
xor
fildll
jae
fdivr
dec
xchg
cli
sbb
daa
or
mov
jo
cmp
nop
cmp
loop
daa
imul
lcall
std
cmp
jp
xchg
sbb
inc
pop
test
repz
cltd
js
cmp
sub
pop
in
js
push
pop
adc
cltd
sbb
add
xchg
jl
ja
and
test
xchg
sbb
loop
shl
and
lahf
mov
pusha
mov
pop
mov
mov
lret
push
std
andb
cwtl
pcmpgtd
add
fiaddl
xor
test
in
subb
pushf
jno
inc
sti
pop
cmp
sub
fistpl
pop
loop
mov
cmp
cmpsl
lock
or
inc
push
cld
mov
and
add
xor
push
and
dec
sbb
rolb
sbbl
jmp
jmp
bound
movsb
repnz
mov
fmull
dec
bnd
jl
mov
sahf
in
fimull
sub
cli
inc
sbbb
fwait
sahf
jns
fwait
cmp
xor
cmp
fistps
in
fwait
lods
aam
mov
jl
mov
pop
adc
fildll
or
xchg
test
mov
mov
adc
das
pushf
dec
jle
cli
aaa
popf
mov
pop
cli
mov
push
dec
mov
stos
adc
subb
inc
pushf
push
lret
pop
iret
inc
rolb
fs
dec
dec
lcall
inc
sbb
les
lock
das
mov
mov
fldt
sbb
push
xor
ja
push
js
mov
test
ljmp
mov
sub
cmpl
movl
xchg
pop
or
movsb
fisttpll
and
push
adc
mov
pop
stos
add
loop
xor
pop
mov
insl
add
push
xchg
jns
jmp
js
sbb
cwtl
lret
gs
sub
out
adc
mov
adc
xor
sbb
xchg
stos
pop
push
int3
pop
loope
clc
xchg
cld
mov
popf
sub
cmp
mov
and
xchg
xchg
stc
dec
ror
inc
sbb
scas
dec
lahf
dec
mov
in
xchg
mov
cs
div
aas
push
dec
inc
add
push
sbb
xchg
inc
dec
pop
and
movnti
sbb
xlat
dec
aad
xchg
push
pop
lret
imul
mov
lahf
dec
cmpsb
outsl
shlb
and
mov
push
inc
xor
lea
jae
inc
mov
xor
add
mov
jo
inc
push
dec
popa
scas
sbb
popf
jne
orl
mov
bound
and
lds
sbb
iret
out
sbb
cs
dec
das
xorb
out
orl
jle
pop
loop
fwait
aad
xchg
dec
mov
inc
push
jb
pop
clc
mov
mov
dec
sub
in
js
les
jae
pusha
jecxz
mov
mov
sub
loop
inc
lret
ret
sub
clc
dec
sbb
inc
loopne
cmc
jb
push
andb
icebp
jmp
cltd
test
adc
pinsrw
mov
adc
push
push
pop
into
in
enter
push
repz
scas
dec
xor
fsubrl
outsb
jo
enter
orl
sub
sub
inc
xorl
lcall
lahf
outsl
inc
mov
fiadds
jbe
or
sbb
jns
xor
inc
adc
sarb
outsb
or
ret
cmp
out
test
push
sub
setnp
adc
or
andb
adc
sub
int3
dec
or
filds
fildll
cli
mov
cmp
xor
jl
es
mov
mov
push
rclb
fwait
out
sarb
adc
add
cld
push
sbb
ja
mov
mov
pop
add
push
push
jecxz
xor
int
pop
jo
add
fmull
roll
shlb
and
clc
mov
mov
fld
je
and
pop
mov
jne
lods
cmp
cmp
call
rcll
xchg
pushf
das
sub
mov
imul
pop
lock
cs
divb
mov
sbb
sahf
daa
pcmpgtw
jl
adc
mov
fsubp
cmp
xor
add
mov
and
popa
mov
pop
test
out
pusha
mov
movsl
lods
and
shl
ljmp
fsubl
in
clc
jo
lds
xor
fildll
loope
mov
xlat
ret
mov
daa
jo
fidivrs
jl
loop
insb
int3
mov
hlt
les
adc
pusha
mov
xchg
lods
mov
sbb
fyl2x
pop
jge
mov
lock
subb
imul
mov
pusha
push
inc
jnp
sub
leave
dec
xor
outsl
scas
dec
adc
fcoml
xor
push
xor
mov
cmp
nop
sbb
into
and
test
or
mov
push
jne
xchg
fbld
je
stos
sub
cmp
pop
pop
inc
lret
dec
push
jb
cmp
xlat
loopne
mov
sbb
pop
sub
xchg
jbe
mov
scas
and
in
in
scas
mov
sarb
lods
aaa
mov
mov
stos
outsb
mov
jg
push
push
pop
mov
xor
cmpb
in
xor
inc
sub
jae
xor
lods
dec
mov
dec
cmp
fnsave
inc
dec
mov
push
es
xchg
pop
or
jbe
jae
and
xor
inc
lcall
jb
shrl
xor
popa
xchg
mov
or
loop
sbb
jmp
mov
arpl
jge
popf
lds
jb
mov
icebp
mov
cli
cmp
lds
add
or
mov
call
pop
pop
repz
shl
es
pop
ret
movsb
push
test
or
adc
loopne
je
out
inc
orb
jbe,pn
and
inc
adc
cltd
clc
push
icebp
cmc
mov
iret
and
out
push
jae
mov
sub
fmull
push
mov
sbb
mov
out
dec
push
bound
lret
cmp
repz
scas
test
adcb
dec
mov
xchg
sbb
or
ljmp
imul
jne
mov
adc
xor
mov
sahf
or
in
fnsave
in
dec
cli
das
mov
dec
cmp
jecxz
push
pop
pop
mov
inc
sahf
dec
sub
inc
add
xor
sbb
int
jecxz
lret
pop
stos
mov
popf
xlat
adc
mov
push
jmp
ficomps
inc
xchg
mov
cli
push
movsb
aaa
idiv
inc
outsb
shrl
es
inc
sub
in
mov
adc
aam
push
aas
sbb
add
jle
cltd
mov
cmpsl
lods
dec
in
or
or
sbb
mov
lods
test
push
rorb
mov
inc
inc
mov
xorl
add
fbstp
add
sbb
adc
insl
adc
stc
xlat
sub
jecxz
xchg
xchg
in
mov
ret
xchg
cli
movsl
xlat
jle
fwait
cwtl
adcl
or
out
int
dec
fs
into
imul
loopne
adc
lret
sub
lock
or
dec
aad
mov
jns
lret
push
int
mov
int
pop
int3
add
add
push
pop
add
mov
into
cwtl
xchg
xor
inc
lods
test
leave
pop
lret
inc
incl
out
sbb
or
insl
repnz
jne
mov
mov
pushf
dec
jns
loopne
pop
outsb
fcomp
mov
sbb
fisttps
lret
nop
jae
cmp
int
mov
int
and
push
sbb
cmpsl
push
faddp
and
int
and
sbbb
in
stos
icebp
scas
adc
xchg
push
dec
pop
pop
pop
lret
jl
insb
imull
fmull
or
mov
aam
cmp
xor
mov
test
mov
ret
shlb
fisttpl
mov
or
jmp
pop
xor
pusha
enter
push
mov
insl
sbb
aad
mov
pop
lahf
jg
pop
clc
dec
lahf
adc
fcompl
or
scas
rolb
shrl
lahf
or
dec
mov
int
bound
loopne
dec
jo
loopne
loop
add
leave
push
jae
aam
jae
xor
cld
cmpsb
adc
movsb
fdivl
xor
mov
out
leave
or
mov
inc
out
clc
add
inc
dec
mov
fs
leave
jb
sub
pop
adc
jno
fdiv
imul
mov
xchg
in
int
lea
xchg
dec
jp
mov
lret
imul
lods
xor
test
jno
in
push
push
dec
xchg
and
jne
xchg
sub
outsl
mov
jle
and
repz
push
mov
dec
data16
push
addr16
xor
push
cli
repnz
xchg
rcrl
pop
mov
fstpl
aas
repz
xchg
push
xor
push
adc
outsb
lahf
xchg
cs
aam
jmp
adc
std
imul
pop
mov
cmc
xchg
mov
pop
test
dec
arpl
mov
inc
xchg
mov
inc
fcomps
lds
and
rcl
push
iret
push
test
inc
cmp
lcall
jbe
test
insl
inc
stos
dec
mov
mov
mov
xlat
fdivrs
testb
push
outsb
loop
subl
mov
sbb
dec
out
xchg
cltd
mov
incb
mov
movb
push
idivl
popa
ret
cmp
out
xor
or
rcrb
ror
and
xchg
sub
inc
fadds
pop
ret
out
in
scas
loopne
jbe
neg
popf
dec
int
jae
sarb
scas
repz
bound
cmp
or
fsubs
lahf
sbb
stc
inc
mov
cld
jecxz
int
xadd
movl
xchg
cmp
andl
adc
sbb
loop
jne
icebp
pusha
cbtw
leave
dec
addr16
scas
and
adc
pushf
dec
shl
pop
dec
pop
out
or
sub
sahf
outsb
pop
adc
xchg
xchg
bound
sub
mov
and
sbb
cli
pop
xor
cmpl
push
repnz
lcall
or
dec
xor
push
mov
adc
clc
dec
and
push
and
gs
or
add
mov
cs
push
lods
xchg
sti
aam
xchg
dec
mov
roll
jp
adc
popa
imul
rclb
cmpsb
fcomp
bswap
xor
push
stos
leave
fildll
jg
sbb
fwait
popa
std
pop
pop
divl
ja
sarb
push
sub
cmp
std
xor
loop
mov
and
shlb
es
xor
jmp
hlt
lcall
int3
popf
scas
jge
inc
add
xchg
aad
nop
jecxz
fcompl
pop
add
cmpsl
shll
add
jo
sbb
jnp
pusha
xchg
std
inc
out
cmp
sub
xorl
in
xchg
xchg
mov
jo
inc
dec
dec
roll
or
sub
testb
dec
fdivrl
push
mov
stos
xor
adc
ret
push
mov
das
sbb
push
mov
xchg
jp
subl
stc
jge,pt
out
xchg
icebp
out
sbb
loope
sbb
int
repnz
dec
sub
and
jnp
cltd
dec
push
mov
jns
test
sbb
int
insb
shll
push
popf
push
js
dec
test
pushf
xlat
and
xlat
jne,pn
cwtl
mov
ds
dec
cwtl
not
das
or
addr16
jge
es
push
xchg
idiv
cwtl
sti
mov
push
jo
das
pop
pop
jg
cmpsl
scas
cmp
xor
fadd
inc
sub
lret
sub
sarl
jae
mov
clc
push
loop
mov
inc
lds
push
rorl
cmpsl
sbb
cld
ljmp
scas
sub
dec
std
inc
adc
jg
scas
add
or
mov
add
shlb
cmpsb
imul
in
mov
cltd
int3
aas
lret
negl
jle
xchg
and
xchg
lds
mov
dec
jp
adcl
or
pop
or
outsb
inc
inc
repz
ror
sub
push
inc
lahf
push
lock
lds
or
inc
orb
add
loope
jge
dec
cmp
call
fwait
adc
insl
sarb
add
in
push
mov
scas
xlat
fnstcw
lahf
xchg
dec
xchg
sub
in
adc
xlat
icebp
add
mov
mov
xor
subb
push
cmp
jl
push
std
shll
daa
jg
sub
pusha
adc
enter
sub
cmpsl
shlb
aad
xor
and
sbb
sbb
out
pop
lods
ret
daa
mov
push
enter
cmpsb
ret
bound
out
xchg
dec
rcrb
sub
adc
cli
lret
xchg
lods
and
les
repz
cmpsl
mov
mov
flds
xchg
popl
sbb
push
push
ljmp
ret
out
cmp
iret
ror
int3
das
lahf
dec
loopne
or
in
inc
arpl
scas
pop
jge
xor
movsb
sub
lea
pop
or
jnp
xchg
push
ja
shlb
repz
lds
repz
push
movsl
cmpsb
leave
pushf
xor
xlat
mov
cltd
lock
enter
dec
cmpsl
inc
xor
push
scas
inc
push
jnp
dec
daa
xchg
icebp
stos
jg
fs
loope
leave
loope
scas
jl
rclb
mov
out
fs
and
repz
add
sbb
xchg
aaa
jo
xchg
test
outsb
test
or
push
iret
mov
cs
ss
int
filds
mov
mov
push
xchg
das
and
icebp
and
mov
push
out
test
fdivs
sub
arpl
sub
dec
movsb
lret
mov
or
loope
push
pop
pop
or
push
adc
andb
les
push
xor
xor
mov
xchg
xchg
xchg
insl
test
push
sbb
fstl
movsb
lea
lahf
sahf
mov
jge
mov
add
add
out
mov
in
mov
iret
inc
movsb
fdivs
mov
jne
jg
xchg
and
bound
int
mov
cli
or
outsb
jge
sub
cli
mov
hlt
mov
push
sub
in
dec
roll
mov
and
dec
fstpl
xchg
cli
adc
mov
mov
sub
cmp
lret
mov
push
jl
aaa
sbb
sbb
push
xor
stos
popa
jae
lods
pop
fwait
jge
xor
push
sahf
adc
scas
gs
push
loop
mov
inc
ds
dec
sbb
jl
lret
mov
add
insb
sti
inc
xor
movsl
mov
fisttps
clc
roll
dec
ficompl
jno
jg
cmp
push
jp
mov
test
inc
inc
sub
fimull
mov
stos
inc
dec
xchg
stos
lcall
dec
pop
aaa
in
test
mov
dec
and
enter
cmpb
dec
adc
inc
pop
push
mov
fisubl
mov
pop
jecxz
jecxz
dec
addr16
cmp
mov
cwtl
sub
sub
int
xchg
push
cmp
dec
sbb
inc
lret
jg
or
xchg
lahf
scas
sahf
xchg
popf
sbb
out
push
adc
ret
mov
push
in
mov
cmp
xchg
test
adc
jmp
loope
xchg
cmpsb
xor
or
xor
mov
lcall
mov
xor
xor
fcomps
int
mov
sbb
stos
cmp
jb
xchg
ja
mov
xchg
idivb
shlb
mov
fidivrs
mov
cli
cmpsb
mov
je
mov
cmp
sub
lds
stos
xchg
int
fcomps
or
xchg
and
hlt
jmp
push
insb
lahf
ja
and
imul
test
loop
jns
rcrb
fstpl
inc
mov
in
daa
enter
cmc
cmp
mov
les
xor
out
push
imul
out
xchg
xchg
lods
adc
and
sub
sub
sub
and
ficompl
xchg
mov
and
xchg
and
xchg
pop
inc
xor
filds
cmp
jp
rol
mov
es
movsb
jle
inc
lret
test
js
jno
add
mov
sbb
push
xor
add
push
mov
hlt
movsl
pop
imul
int3
xor
add
mov
sbbl
push
jo
insb
dec
add
push
jae
ret
jno
fptan
movsl
out
pop
out
fcmovnbe
mov
shlb
inc
popa
mov
shrl
enter
mov
cltd
pop
arpl
pop
lods
sub
fstpt
push
icebp
fimull
and
frstor
es
cmp
iret
hlt
jp
dec
xchg
and
mov
cmp
inc
out
stos
mov
mov
lock
jle
pop
iret
subb
jmp
adc
mov
cmp
lods
nop
cwtl
std
pop
mov
sbb
ss
add
adcb
mov
dec
movsb
imul
xchg
jmp
pop
lret
repnz
xchg
add
xchg
or
xor
loope
outsb
jge
mov
mov
dec
xlat
js
push
cmpsb
leave
sti
cmp
cmp
stc
mov
iret
and
shll
jnp
dec
test
mov
nop
jp
add
xor
outsb
into
clc
add
jl
mov
out
insl
test
xchg
pop
repnz
xchg
imul
xchg
xor
shlb
jecxz
sbb
and
sbb
sub
clc
fbstp
xchg
push
out
cs
clc
in
and
out
and
into
lea
or
test
ret
stos
dec
lods
and
sub
popa
aas
arpl
xchg
movsl
test
shlb
aam
mov
add
and
aad
loope
mov
dec
rorl
jl
je
jmp
insb
jmp
aas
test
push
loop
cwtl
adc
aas
inc
out
push
sti
nop
and
mov
mov
aas
fcoml
xchg
mov
repnz
dec
mov
jle
inc
loope
shrb
fisubrs
cltd
test
aad
fdivl
push
push
roll
jns
dec
cld
pop
push
inc
in
adc
xor
mov
sbb
jp
xlat
mov
mov
popf
jbe
leave
jns
aad
cli
pop
sbb
icebp
pop
push
arpl
call
nop
out
mov
fsub
push
pop
xor
test
mov
pop
inc
mov
cwtl
es
pop
rcl
testb
pop
xchg
repz
pop
jg
mov
pop
jl
cmc
dec
sub
fdivs
mov
inc
or
jnp
repz
test
push
lods
shrb
shrb
in
mov
push
xchg
sub
into
mov
mov
push
mov
pop
or
fisubrl
lds
ret
inc
sub
lods
or
dec
sub
aam
movsb
mov
fidivl
mov
mov
sbb
mov
adc
xchg
or
cs
pop
fldcw
fmul
sbb
lock
and
or
push
ret
mov
lds
and
mov
sbbl
pop
pop
clc
xchg
sbb
jnp
xor
adc
mov
jecxz
push
insl
pop
enter
dec
lahf
fs
addr16
loop
fldcw
push
add
dec
and
xchg
dec
js
dec
xchg
icebp
popf
cmp
mov
movb
cltd
mov
push
dec
inc
out
outsl
push
jle
sbb
push
jo
ljmp
xchg
or
inc
push
xor
push
icebp
add
dec
mov
movups
adc
jnp
xchg
int
jle
in
sbb
cmpl
cmp
fwait
xchg
lock
shll
mov
mov
and
xor
lods
xchg
xchg
jmp
mov
dec
and
lock
lahf
enter
hlt
or
andb
sub
pop
mov
mov
cmp
mov
shrl
arpl
lock
or
out
je
xchg
adc
adc
jnp
cmp
mov
xchg
sahf
adc
add
enter
punpckhdq
stos
or
int3
mov
sub
das
and
ret
mov
cli
cmpsb
rcr
mov
adc
arpl
loop
inc
popa
and
shll
pop
dec
xchg
push
sub
insl
mov
orb
cmp
insl
xchg
adc
pshufw
loop
aas
jg
add
es
pop
sbb
cli
jg
arpl
xchg
mov
push
into
adcb
and
lods
add
jae
aad
or
mov
xchg
xchg
pop
mov
lret
pop
xor
outsl
mov
cmp
insl
out
pop
dec
mov
cltd
mov
cltd
cwtl
cmp
jl
cwtl
aas
rcrl
es
push
cld
mov
arpl
sub
in
int3
lcall
outsl
pop
xor
movsb
iret
cmpsb
mov
xor
bound
push
pop
sub
sub
aas
jns
aas
dec
sbbl
test
leave
add
lahf
or
in
incl
pop
mov
sub
rcr
jmp
push
sub
outsb
pop
mov
xchg
test
push
or
push
test
inc
cld
cmp
dec
in
push
pop
fsubl
sub
lret
or
lret
mov
mov
into
mov
ret
das
sahf
xor
inc
rolb
and
xor
mov
aaa
shl
iret
fsave
cmpsb
mov
movswl
scas
mov
or
repz
into
sbb
push
fwait
into
rolb
xchg
pop
ret
in
dec
jae
and
and
enter
outsl
xchg
mov
pop
sub
js
clc
roll
add
adcb
sub
dec
or
std
out
jo
icebp
dec
movsl
add
mov
fwait
dec
jl
mov
and
pop
xor
in
sub
dec
lods
pop
icebp
cmp
icebp
in
mov
add
in
movsl
fldenv
xchg
xchg
cmp
dec
shlb
popf
push
scas
fdivrs
int
mov
daa
sub
jo
pop
outsl
xchg
cld
fists
in
enter
lea
inc
adc
insb
sbb
lret
and
add
bound
add
xchg
mov
pop
fnstenv
adc
lret
cmp
xor
je
or
cltd
sub
xchg
lods
dec
loopne
inc
mov
inc
das
ret
outsb
dec
cmp
cmp
mov
push
sahf
pop
add
xchg
xchg
inc
repz
out
int
lea
pop
xor
cmp
mov
jb
hlt
mov
adcb
xchg
mov
mov
push
xor
pop
sbb
adc
xchg
sub
dec
sub
mov
cld
mov
popf
jmp
jecxz
leave
xor
mov
dec
sub
cmp
add
jmp
pop
inc
mov
mov
in
pusha
mov
dec
mov
lcall
out
mov
mov
jno
les
bound
xlat
stos
cmpsl
pop
xchg
call
fdivrs
hlt
or
and
xor
xchg
fwait
and
cmp
jecxz
push
cmc
mov
xor
xlat
fwait
push
sub
mov
push
cltd
xchg
imul
imul
cmp
sub
icebp
imul
paddd
pop
in
sub
mov
push
test
push
lret
adc
inc
iret
pop
aad
sbb
pop
mov
mov
jb
popf
into
scas
push
sub
pop
jp
cmp
add
xchg
into
je
push
pop
inc
and
adc
adc
mov
nop
cli
mov
das
in
push
sbb
pusha
jns
push
pop
sub
fbld
outsl
cmp
cmpsl
imul
xchg
ficompl
imul
push
xor
and
mov
int
into
jo
mov
in
xchg
sarb
sbb
add
inc
push
jp
dec
cmp
push
imul
pop
es
mov
adc
lcall
pusha
push
mov
sub
inc
in
and
sub
test
int3
add
pop
lods
rolb
loopne
mov
pop
in
inc
int3
daa
mov
je
jnp
add
add
insl
jl
jecxz
mov
iret
xor
sbb
cmp
lahf
xchg
test
inc
mov
adc
pop
loop
push
fists
cmp
push
out
daa
push
and
mov
out
cmpsb
push
imul
fwait
stc
sbb
jns
or
cmpsb
sbb
mov
mov
mov
fbld
ret
cs
mov
fnstcw
inc
outsb
jno
sarb
loop
xchg
sub
or
hlt
and
and
cld
add
mov
xchg
imul
and
lds
push
cltd
cwtl
fists
stos
push
std
mov
add
inc
pushf
mov
mov
inc
jmp
fwait
sbb
pop
jno
dec
mov
adc
cwtl
cmpsb
cltd
addr16
ret
adc
jp
cmp
into
mov
out
jno
mov
ficoml
jge
jmp
dec
xchg
cmp
xchg
xchg
arpl
inc
sub
dec
mov
sbb
sub
insb
loop
xchg
cltd
mov
lock
push
push
jl
xchg
lods
jge
push
outsl
pop
mov
shll
mov
xor
mov
mov
hlt
mov
jnp
mov
nop
aad
shlb
jl
popf
es
in
mov
lea
and
mov
xchg
les
inc
dec
jmp
incb
test
xchg
pop
push
imul
mov
fsubr
pop
adc
js
cmp
lcall
mov
sar
lret
pop
cmp
sub
sbb
pop
out
cmp
jle
loopne
and
inc
jae
std
gs
lds
jnp
cmpsb
cmpb
pop
add
test
mov
push
in
push
iret
jbe
or
adc
fmul
idiv
fwait
jo
or
inc
mov
xlat
mov
fdivl
popa
clc
in
lret
lea
pop
dec
cmpsb
call
mov
out
popf
xor
cmp
inc
scas
fnstenv
in
lcall
dec
aad
push
ficomps
icebp
lahf
lock
mov
mov
sti
lcall
xor
mov
xor
ds
jle
fstpt
adcb
cli
adc
repz
stos
or
fsubs
push
lds
sub
int3
mov
ret
xchg
cld
push
add
movsb
adc
adc
test
sbb
lock
clc
push
pop
into
push
adc
add
rcrl
cmpsb
nop
or
test
pop
push
xor
ja
dec
push
scas
test
ljmp
nop
lea
mov
test
and
mov
inc
adc
dec
push
jle
push
bsf
jmp
in
lcall
add
popa
cwtl
or
int3
or
out
popf
push
shlb
lock
or
aad
xchg
lcall
and
and
ficoml
stc
jns
std
loop
test
jmp
outsl
push
incl
cli
xor
jg
pop
xor
cmpsb
in
test
roll
imul
cmpsl
add
test
pop
mov
mov
mov
lea
movl
jmp
repz
nop
adc
adc
jbe
sub
mov
out
repz
insl
adc
cwtl
and
rcrl
insl
les
xchg
insb
xor
lods
mov
or
pop
jno
mov
in
and
mov
je
cmp
jp
mov
rcr
inc
mov
or
adc
inc
enter
inc
stos
stos
sbb
push
xchg
aas
pop
sbb
jb
gs
and
imul
test
and
cmp
cmp
cmp
pop
js
addr16
rcll
aad
imul
push
mov
or
shr
jbe
out
sti
loope
mov
add
jle
jg
lods
push
mov
push
iret
pop
daa
fistl
aad
loope
popa
pushf
lret
cmpsb
and
push
popf
pop
repz
push
rorl
sub
fildl
loop
push
inc
add
arpl
xchg
fstps
call
or
jle
lods
sub
loop
idiv
lret
adc
or
popf
out
arpl
jo
pop
dec
add
jp
and
jae
pop
test
and
imulb
in
fildl
pusha
jbe
xchg
mov
add
daa
dec
cld
add
lods
adc
dec
pop
mov
xchg
jno
mov
mov
pop
int3
vpaddq
dec
in
mov
loop
xchg
inc
push
sub
jnp
adc
mov
nop
jg
mov
xchg
dec
mov
xchg
insl
es
jno
scas
data16
stos
jle
sbb
les
orl
mov
mov
and
aas
lret
pop
push
test
inc
xlat
dec
repz
mov
add
jnp
dec
ds
cmp
push
jle
out
xlat
dec
fsubs
out
loope
xorb
sub
aas
lret
call
sbb
pop
mov
sub
cli
stc
inc
mov
stos
pop
lret
out
lds
sbb
or
jmp
cmpsl
cmp
addr16
sub
and
rorb
movsb
test
lods
out
mov
inc
mov
std
xor
aam
mov
cmpsb
or
outsb
ficoml
jbe
sub
dec
repnz
lcall
idivb
mov
mov
jl
pop
movsb
xchg
in
adc
dec
ret
sbb
mov
cmp
int
push
cmp
stos
andl
clc
iret
xchg
inc
add
inc
adcb
fstl
push
or
std
int3
test
jge
jmp
inc
or
mov
addr16
jecxz
xchg
lds
mov
icebp
lock
inc
addl
fld
jo
adc
cmpsl
out
shll
out
xor
jbe
pop
xor
outsl
mov
ljmp
out
mov
cmpsb
pop
in
out
push
jmp
xor
or
pop
pop
fsts
les
ret
push
xor
lea
or
mov
mov
pop
mov
mov
or
aad
dec
cmp
xchg
sbb
push
mov
leave
sbb
push
mov
mov
mov
xchg
mov
shrl
jno
sbb
pop
shl
sub
and
dec
cmp
push
and
mov
and
fstps
int
sarl
loopne
cld
fstps
mov
movsl
imul
adc
and
dec
aad
rcr
and
cmp
imul
imul
cmp
pop
ficoml
lods
bound
push
fldcw
aas
or
xchg
pop
hlt
inc
stos
jbe
cli
arpl
or
movsb
mov
lcall
and
repz
ljmp
cmp
pop
call
adc
jb
addr16
popf
xor
cmp
mov
in
xchg
sahf
push
lcall
test
popa
pop
push
loop
push
add
mov
das
cmc
loop
jae
inc
out
xchg
mov
in
fsubs
dec
shrb
jmp
mov
jge
push
pop
adc
lret
das
push
int
add
push
xorb
iret
mov
subb
loop
ja
movb
out
icebp
pop
xor
in
and
test
add
sarl
pop
test
push
mov
ljmp
stos
and
lds
sub
roll
imul
mov
loopne
xor
and
shl
and
push
fwait
lcall
movsb
lds
xor
jnp
icebp
sbbb
sub
out
jl
sub
cmp
movsl
adc
or
outsl
add
imul
ss
mov
aaa
sub
sbb
fs
or
adc
scas
test
fwait
loop
test
adc
or
xor
mov
adc
push
mov
mov
mov
push
scas
fwait
mov
pop
dec
cltd
ja
lods
test
sub
xor
pop
pusha
xor
dec
lret
sarl
fcomps
bnd
add
pushf
add
ja
inc
and
call
es
test
pop
pop
test
enter
aaa
cmp
ss
xchg
adc
mov
sbb
mov
mov
xor
mov
pop
jne
cld
pop
adc
sub
cmc
jne
sub
ljmp
lock
cmpb
jns
stos
push
mov
pop
xor
adc
pop
js
jmp
sarb
cmp
insb
lret
xlat
xor
or
sbb
mov
fisttpll
add
xchg
mov
jp
pop
fildl
mov
inc
mov
pushf
sub
jne
xchg
out
pop
push
xor
imul
stos
mov
sbb
aaa
mov
jno
xchg
jno
movsl
dec
push
push
shll
loop
xchg
sbb
xchg
push
psllw
xchg
jb
mov
mov
icebp
cli
mov
add
jo
add
icebp
les
mov
loopne
push
aad
daa
mov
rcl
and
aad
pop
aad
jo
lea
sti
ljmp
cmc
lcall
orb
enter
jg
jecxz
or
fisttpll
xor
pop
xchg
mulb
out
cld
mov
scas
cmp
lods
cmp
leave
push
lods
adc
jmpw
inc
inc
pusha
es
rcrb
data16
push
cmp
adc
or
outsl
adc
cld
xor
sbb
adc
stos
insb
mov
filds
adc
xchg
mov
lcall
out
jns
mov
outsb
xchg
andl
lods
jge
cli
ret
xor
xchg
iret
cwtl
imul
addr16
lea
mov
div
mov
or
and
xchg
popf
mulps
sahf
inc
aam
fs
pushf
lods
aam
sub
roll
cmp
dec
icebp
push
mov
pop
mov
adc
outsb
xchg
and
mov
or
xor
test
sar
mov
mov
push
push
lds
mov
push
insl
or
out
lret
lds
movsb
test
out
jns
xchg
cmc
fnsave
push
cld
lock
xchg
and
rclb
mov
and
xchg
jmp
push
lcall
aas
sub
adc
jne
dec
and
icebp
hlt
aaa
xor
sbb
inc
out
sarb
stos
push
or
sub
xor
aad
sbb
les
repz
das
shll
push
std
int3
js
and
f2xm1
popf
es
add
xchg
cli
add
mov
cwtl
add
mov
jb
adc
dec
mov
dec
divb
inc
addr16
ja
adc
xchg
sub
adc
fsubrl
xchg
aam
inc
int
cmpb
sub
mov
jp
and
stc
add
jnp
jecxz
ss
xor
mov
aad
or
jmp
xlat
sub
mov
pop
test
cli
fnsave
sbb
scas
sub
and
xchg
sbb
cmc
insb
push
fs
or
xchg
inc
xor
mov
rorb
in
movsl
sub
ret
jl
cmp
mov
pusha
add
or
js
loopne
jl
out
fsub
pushf
xchg
sahf
ret
sub
shlb
mov
out
cmp
out
push
lds
fdivl
mov
cmpsl
pop
jae
cmpsb
imul
js
cli
pop
clc
dec
enter
fcomi
pop
cmpsb
mov
push
je
in
xchg
rorl
es
dec
jmp
inc
sub
mov
cmp
pop
fwait
add
mov
or
mov
in
xor
sub
movhps
jmp
jno
mov
sbb
loope
popf
clc
leave
ret
into
and
dec
mov
mov
push
clc
and
js
lods
push
and
cmpsb
mov
or
mov
push
mov
cld
or
jge
cmpsl
movsb
mov
stc
cmp
dec
popf
adc
insl
pop
aaa
lods
aad
mov
dec
adc
lret
jno
es
mov
lea
fadds
or
daa
cmp
cmp
pop
and
mov
jmp
pop
dec
repz
scas
push
add
mov
repz
mov
dec
push
enter
or
test
mov
push
sbb
xlat
xor
adcb
lock
aad
or
inc
pusha
dec
mov
cmp
ror
or
jne
mov
mov
pop
jmp
or
icebp
stc
or
jae
nop
lea
insl
daa
rcrl
lcall
jecxz
xor
fbstp
mov
xchg
scas
incb
jne
stos
or
xor
aaa
add
dec
out
mov
sub
popa
cmp
hlt
es
outsl
in
test
dec
ja
aad
outsl
out
mov
xor
cmp
lods
gs
jmp
sbb
mov
xchg
inc
mov
cmp
mov
sub
jp
stos
or
jecxz
adc
push
outsl
mov
jno
popf
xor
inc
jb
int
push
out
cmp
xchg
outsl
sbb
lret
inc
mov
xchg
dec
repz
sub
xchg
aam
mov
adc
imulb
xchg
arpl
shlb
jbe
xchg
stos
pusha
push
push
push
jl
jecxz
cmp
jg
jae
dec
dec
stos
push
in
add
cmp
and
mov
add
dec
mov
add
int3
cmp
shll
and
sti
mov
jno
stos
mov
ss
pop
xchg
lcall
push
cmp
cmp
stos
add
push
add
mov
jne
pop
adc
arpl
and
mov
jg
pop
stos
out
pusha
adc
daa
adc
addr16
inc
lcall
mov
ja
notl
xchg
andb
cwtl
out
subb
mov
in
xchg
jp
int3
out
cmpsl
xor
stos
shlb
jno
pop
mov
std
xchg
cwtl
push
dec
adc
xchg
in
and
or
enter
adc
mov
inc
inc
cmovle
out
mov
dec
pop
dec
lea
es
hlt
push
fisttps
push
dec
push
mov
inc
rol
movsb
sub
pushf
and
mov
js
int
jo
inc
lock
push
subl
jge
and
adc
clc
lret
mov
inc
cmpsl
or
mov
call
cmpsb
or
jge
jnp
mov
pop
int
fmuls
push
xor
sbb
popf
mov
fildll
dec
enter
ds
out
jo
push
xchg
mov
addb
lret
jb
in
out
cmp
mov
jl
sbb
ja
ret
addl
sub
pop
dec
rorl
imul
gs
cmp
and
ds
sbb
inc
arpl
adc
repnz
jp
stos
adcb
mov
loope
xchg
js
out
mov
cs
pop
adc
mov
adc
loop
call
fistps
das
mov
xchg
pop
xor
fucomip
shr
inc
lret
add
mov
outsl
mov
dec
divl
xor
jmp
or
push
push
shll
lods
in
nop
and
pop
arpl
in
xchg
cmp
rorb
and
cmpsl
pop
and
adc
addr16
in
loop
fdivp
adc
dec
dec
scas
mov
xor
notl
jbe
sbb
sti
push
mov
inc
fdivrs
or
rcr
and
ret
sub
sub
std
fneni(8087
ja
push
mov
jge
push
negb
and
ds
popa
insl
add
or
mov
outsl
and
push
mov
jb
sbb
test
into
xor
leave
cs
dec
mov
sti
ss
push
daa
leave
out
xchg
and
mov
fxch
jb
inc
notl
fdivrl
sahf
fsubr
nop
mov
mov
out
test
cs
sbbl
test
jg
orl
lock
push
cld
mov
pop
cmp
clc
sti
test
adc
xlat
mov
nop
add
sbb
cmp
push
sub
inc
out
jns
sbb
push
out
mov
jbe
cmova
xchg
push
outsl
sbb
inc
and
je
outsl
aad
and
xor
jecxz
lahf
or
mov
cmc
dec
pop
sbb
and
ss
and
imul
xor
pop
sub
add
sbb
jbe
cmpsb
sti
daa
in
inc
inc
xchg
enter
sub
out
cmp
test
sbb
inc
popf
cmp
dec
jbe
imul
sub
xor
mov
imul
aas
dec
in
mov
ja
scas
push
inc
push
xchg
shrl
lock
xor
movsl
lea
les
cmpsl
rclb
mov
xchg
icebp
inc
lods
negb
and
pop
xorb
xchg
sub
push
dec
stos
pop
pop
ja
or
repnz
loopne
in
cmp
xor
xlat
mov
sub
pop
xor
mov
jnp
into
iret
stc
subb
mov
xchg
enter
fs
pop
xor
in
popa
xchg
inc
pop
data16
negl
push
notb
cmp
insb
sbb
popf
xlat
int
mov
dec
addr16
push
out
lahf
sub
imul
xchg
lcall
fsqrt
mov
repz
dec
inc
xchg
push
int3
pop
shll
fimuls
pusha
adc
dec
mov
and
sub
sub
aas
pop
xchg
lea
in
and
sub
imul
pop
movsb
js
or
xchg
mov
aas
loopne
inc
and
pop
xchg
dec
fisubs
jb
sbb
cld
mov
or
cmp
js
ficomps
cli
scas
call
push
into
xchg
and
dec
daa
scas
pop
std
cmp
adc
cmc
pop
or
and
cmpsl
aaa
jae
stc
popf
cmp
or
insb
cmpsb
xor
icebp
outsb
pop
mov
xor
and
enter
push
dec
jo
dec
or
jnp
int
pop
stos
adc
ret
add
jno
or
jge
mov
adc
mov
insl
rorb
mov
nop
jmp
out
mov
cli
imul
sbb
cmc
shl
rcl
sub
out
push
push
and
push
mov
xor
dec
adc
shrl
insb
das
mov
push
or
push
in
jecxz
loopne
test
aas
sbb
bnd
mov
cmp
andl
sub
imul
mov
lret
popa
stos
or
inc
ret
sub
add
push
mov
ss
cmp
add
pop
imul
jle
sub
repz
push
fcmovu
dec
or
ret
and
insl
xchg
das
sub
fdivl
adcb
jbe
mov
hlt
xor
inc
sti
add
jle
xor
pop
inc
lods
data16
out
lahf
inc
dec
out
lcall
cmpsb
ret
stos
push
xchg
testb
scas
add
les
push
mov
test
cmpsb
adc
cld
icebp
sahf
jp
add
sar
int
mov
fmull
leave
add
dec
out
push
lcall
aam
adc
repnz
jg
shl
cli
hlt
aad
jbe
insb
mov
sub
mov
movsb
and
adc
movsl
bound
fistl
fcompl
pop
add
mov
pop
ja
jg
or
cmpsb
push
jp
stos
aad
sbb
mov
int3
mov
jo
mov
andb
xchg
sti
lcall
xchg
fwait
dec
sbb
lret
adc
fisttps
pop
sbb
mov
int3
sbb
mov
fistpl
mov
sarb
aad
fcmovne
dec
pop
mov
repnz
dec
cmp
sub
lret
adc
mov
mov
cltd
xchg
mov
repz
adc
outsb
sahf
fcompl
fwait
adc
push
aad
fimuls
mov
xchg
insb
xchg
jb
lods
sbb
mov
ss
repz
lcall
adc
jmp
ret
daa
cmc
mov
push
push
jns
jne
mov
xchg
sbbb
out
lret
push
jg
in
bound
mov
push
movsl
sub
mov
fcoms
mov
loope
sbb
pusha
neg
adc
mov
mov
mov
pop
enter
xchg
in
scas
mov
leave
sub
pop
scas
mov
mov
and
je
lahf
jmp
out
and
popf
pop
cmc
cld
dec
xor
pop
add
xor
fsubrs
lea
mov
mov
sbb
pop
enter
sar
sahf
out
hlt
mov
dec
pusha
out
and
inc
insb
mov
ljmp
test
adc
xor
and
sbb
push
push
inc
mov
xorb
ficoms
add
gs
insl
mov
ret
push
adc
sarb
rol
jo
lcall
sar
mov
xchg
xor
push
mov
pop
faddl
and
test
inc
adc
add
inc
lahf
shrl
es
mov
jae
inc
dec
adc
imul
jle
or
jb
repz
out
mov
inc
mov
scas
loop
rcrl
jbe
popa
popf
aad
inc
aaa
or
scas
leave
mov
iret
stos
shrb
imul
mov
ja
scas
xchg
shrb
imul
jno
cmc
dec
bound
enter
cmp
aaa
jg
hlt
mov
sahf
inc
outsl
mov
adc
xchg
pusha
cli
es
mov
mov
loop
and
mov
imul
fsts
push
js
jmp
dec
fdivs
push
ljmp
fists
mov
inc
sahf
jnp
frstor
lret
daa
and
add
inc
rclb
lahf
or
clc
mov
sub
pop
jmp
daa
arpl
dec
cwtl
out
leave
test
je
shr
ret
fcoml
xchg
int
mov
jb
dec
imul
pop
ss
faddp
or
dec
dec
outsl
roll
into
and
gs
mov
aaa
std
rclb
pop
out
adc
insb
je
bound
mov
jmp
pop
add
jb
repnz
mov
pop
ja
insl
orb
jno
push
xlat
and
gs
stos
lret
pop
dec
enter
pop
jp
cmpsl
add
aas
fbld
xchg
sub
mov
xor
pop
or
push
xchg
ret
int
add
rclb
in
ret
xchg
test
les
cwtl
lahf
notb
cmp
sahf
dec
dec
cmp
sub
push
sub
test
sub
mov
iret
dec
or
mov
notb
xchg
mov
ja
inc
inc
fadds
mull
scas
js
xor
mov
xor
repz
in
push
std
fs
mov
pop
movsb
xchg
in
into
mov
aam
cwtl
pop
and
jmp
daa
out
mov
mov
xchg
push
and
sbb
pop
mov
ds
divl
xor
xor
adc
out
rcrb
push
mov
imul
jne
mov
sub
cltd
dec
xlat
pop
out
das
mov
inc
into
rcll
push
and
push
pushf
ds
and
xor
mov
mov
inc
sub
jo
xchg
test
jnp
mov
and
adc
lret
je
or
add
nop
dec
mov
push
cmpsl
pop
jmp
out
cs
lods
adc
hlt
sbb
or
int3
mov
sar
daa
cmpsb
dec
jbe
or
sub
xlat
pop
xchg
testl
xor
repnz
mov
xor
xor
fldenv
cmc
insb
pop
nop
inc
int3
push
push
outsb
addl
stos
into
cmc
fnstsw
outsb
pop
pop
roll
jno
cs
jns
daa
adc
jo
add
pop
mov
mov
cmp
aam
dec
jns
fstpl
testb
ret
lods
mov
addb
adc
push
pop
std
pop
and
in
sbb
pop
xchg
in
es
ja
movsb
xlat
out
jnp
inc
int
jbe
fidivl
das
mov
add
sbb
mov
fcomi
mov
bound
dec
mov
lods
repnz
add
xor
push
js
pusha
enter
fildl
fidivrl
sarl
mov
imul
pushf
add
shll
je
add
pop
dec
mov
popf
fs
mov
shll
in
in
inc
movsl
xor
mov
jmp
call
ret
xor
adc
in
fdivr
loopne
movsb
int3
cli
int3
sbb
mov
out
loop
mov
popf
movsb
inc
jecxz
xchg
loopne
add
shrl
sahf
and
fildl
push
cld
imul
jmp
fiaddl
adcl
sub
icebp
inc
pop
mov
or
sub
dec
push
bound
dec
jmp
pop
in
mov
pop
mov
mov
xlat
jecxz
xchg
sti
jb
cmp
into
sub
fidivl
mov
mov
pop
cmp
mov
imul
jmp
pop
bound
adc
and
cmp
jmp
js
xchg
test
movsl
mov
adc
pushl
adc
jge
clc
daa
adc
fbstp
dec
lcall
stc
inc
lcall
daa
aas
mov
dec
movsl
fdivrs
push
sbb
negl
mov
mov
add
mov
stos
jle
inc
jl
scas
ds
andb
imul
mov
cmc
inc
jmp
outsb
repnz
fwait
lock
mov
ds
movsb
jge
cmpsb
sub
js
out
jae
xchg
sub
ret
mov
xor
shrl
in
jle
test
mov
push
rcl
dec
mov
mov
outsb
or
test
cmp
push
pop
cld
lret
pop
lods
imul
adc
cmpsb
dec
inc
xchg
inc
data16
fdivl
cli
ret
push
or
cmp
push
mov
cmp
icebp
lock
dec
or
jg
sbb
push
pop
lahf
pop
sbbl
sub
cmpsb
mov
xor
stos
add
cwtl
xor
cmp
leave
mov
nop
mov
fldenv
mov
push
aad
pop
inc
lret
stc
xor
and
jl
xchg
xor
cmp
cmp
mov
repz
dec
lds
mov
movsl
pop
inc
jle
shlb
sub
fdivs
in
in
scas
inc
aas
xchg
js
push
xlat
mov
jns
xchg
in
xchg
xor
sbb
test
jge
popf
lret
movsb
sub
dec
insl
imul
mov
fdivrs
pop
lea
sub
xor
sbb
out
pop
popf
pop
pop
stc
fistpll
out
bound
pop
arpl
icebp
mov
cmp
push
sub
adc
cmpl
ret
push
or
enter
fwait
sub
and
mov
call
mov
iret
inc
repz
imul
out
xchg
inc
movsb
jb
mov
cmpsb
stc
dec
fisubrl
mov
mov
fildl
and
xchg
fdivrs
push
repnz
aad
es
sub
and
insl
mov
push
sbb
bound
test
or
insb
mov
jl
jge
mov
lds
out
cwtl
and
fcoml
lcall
ds
sub
inc
inc
aad
sub
sub
sub
sbb
popf
rcrl
jne
cli
dec
push
js
fstpl
mov
insl
push
pop
mov
fsubrs
pop
arpl
imul
mov
insb
out
dec
pop
xchg
mov
lahf
popa
movsl
pop
mov
dec
mov
jge
shrb
lods
outsl
test
cmp
lret
cmpsl
es
out
movsb
shlb
cmp
stc
fisubl
mov
movsl
mov
into
imul
jg
jecxz
adc
mov
xchg
stos
dec
sbb
mov
sub
pusha
mov
xor
cmpsb
mov
jle
add
sbb
mov
pop
pushf
movsb
sbb
pop
fildll
fs
push
gs
mov
push
rorl
jnp
pop
cltd
minps
stos
jg
push
ret
adc
and
cmp
lods
loopne
jne
push
roll
stos
push
xor
test
mov
xchg
mov
int
lock
xchg
cmp
sbb
int3
repz
lret
xchg
mov
ss
lods
ror
mov
xor
dec
dec
dec
sahf
pop
fbstp
pop
push
jg
jmp
test
pop
jnp
fs
mov
repz
jge
sub
inc
or
mov
test
mov
sbb
mov
mov
mov
movsb
mov
loope
in
lods
xor
and
sbb
push
outsb
fstps
pop
in
push
cmpsl
mov
dec
inc
test
out
or
imulb
loope
or
movsl
add
cwtl
mov
mov
ljmp
outsl
mov
das
sbb
or
outsb
jnp
mov
inc
pop
xchg
in
pop
call
daa
std
jmp
iret
inc
jp,pt
xor
in
addr16
aas
add
xchg
les
lods
jno
jge
push
sar
cld
aad
and
xchg
push
int
out
fidivrs
push
fisttpl
js
aaa
leave
int3
test
add
add
mull
pop
pusha
xor
and
lods
mov
inc
out
inc
out
nop
add
push
add
inc
sbb
scas
mov
jmp
xlat
jns
cmpl
add
jnp
or
push
lcall
mov
cmp
pop
adcb
mov
sahf
testl
sarl
inc
popa
mov
fiadds
add
shl
lret
mov
cmp
lcall
enter
jp
jg
inc
inc
pop
pop
stos
shlb
insl
push
cmp
ficoms
divl
jge
jle
push
push
addb
movsb
add
fimull
sarl
imul
pop
xor
sbbl
rolb
mov
aad
mov
std
in
enter
lcall
icebp
sub
sbbb
or
pop
or
imul
andb
or
xchg
xchg
cld
jo
lock
pop
cmp
sidtl
ds
inc
fiadds
pop
jecxz
insb
jb
push
daa
clc
arpl
ret
xchg
out
shrd
in
pop
or
loop
insb
jge
shr
cltd
xchg
aam
sbb
xchg
cmp
sbb
inc
pop
or
ljmp
insl
mov
push
sahf
outsl
adc
xlat
rcll
pop
and
inc
ja
jo
sti
inc
jb
or
xor
xchg
xchg
jae
ret
push
xchg
fbld
adc
daa
into
add
cmp
mov
sahf
cmp
pop
int3
pop
or
mov
mov
mov
cmp
mov
or
adc
and
je
aas
addb
add
sub
sbb
push
scas
xlat
sbb
cwtl
jmp
popa
fcmovb
push
pusha
push
and
adc
int3
je
inc
int
push
repnz
mov
pop
int3
movsl
push
dec
sbb
pushf
ret
sub
or
and
cmc
jmp
and
xchg
movsb
dec
aas
mov
push
fwait
ret
data16
or
push
mov
inc
hlt
imul
test
jo
pop
fbstp
movsl
mov
jmp
jnp
adc
push
int3
repz
fidivs
dec
jge
test
dec
xor
imul
popa
in
cmp
jp
popf
stos
push
mov
mov
int
xchg
movsl
jne
push
lods
sbb
dec
bound
add
sbb
hlt
sti
pop
xchg
bound
mov
sbb
popf
test
jmp
jae
xchg
add
xchg
or
dec
sbb
jno
in
add
push
cmp
nop
in
add
sub
add
leave
je
add
jmp
sbb
push
xor
xor
xor
xchg
inc
outsb
cmp
pop
fnstsw
xor
mov
jno
cli
sub
pop
aam
sub
mov
jnp
mov
ret
enter
jp
push
jne
sbb
je
cmpsl
gs
sbb
dec
add
push
push
icebp
pushf
divl
pop
dec
dec
push
ficomps
and
xchg
movsb
and
or
mov
push
andl
mov
lock
pop
mov
leave
je
adc
pop
out
adc
push
pop
leave
add
fstpl
push
add
sub
push
mov
xchg
jns
sbb
cs
dec
lret
sbb
pop
adc
sti
sbb
and
xor
outsb
test
xchg
push
cmpsl
popa
popa
jge
add
push
icebp
adc
pushf
cmpl
or
pop
fucomip
mov
jge
je
push
ljmp
add
insl
xchg
jp
xchg
icebp
inc
mov
sub
int
loopne
adc
sbb
mov
jl
in
lcall
push
sub
xchg
int
pop
cmp
sbb
mov
mov
scas
mov
sahf
cs
bound
call
data16
in
inc
test
int
inc
in
mov
jp
cld
xchg
int3
or
mov
adc
push
xor
hlt
icebp
ret
insl
push
cmpsl
mov
lock
push
jns
lcall
ret
repnz
xor
lgs
cs
xchg
inc
lock
repnz
test
add
mov
dec
je
push
rorl
xchg
xor
les
in
mov
push
int
unpckhps
cmp
lea
cmpsl
inc
dec
in
jmp
push
mov
xor
std
dec
int3
push
adc
adc
adc
xchg
sbb
pop
and
mov
xor
lret
arpl
inc
into
mov
addl
inc
xchg
add
cmp
sbbl
fcomps
stos
mov
inc
or
dec
hlt
sti
dec
mov
and
stos
addr16
inc
fs
xchg
std
sarb
or
mov
test
lds
sahf
xor
fisubrs
sbb
outsb
jge
push
gs
mov
pushf
pop
fsubrl
mov
out
test
inc
cltd
sbb
fdivrl
int
pop
xchg
mov
cmp
out
mov
stos
jp
jge
lret
icebp
pop
call
sbb
stc
dec
adc
ljmp
or
cli
push
testb
mov
adc
gs
mov
push
loop
test
adc
jns
adc
xor
faddl
push
js
xor
jecxz
mov
es
roll
lahf
lds
enter
fwait
cmp
shlb
sub
cmpsl
inc
pop
mul
les
xchg
fidivrl
stos
shrl
test
push
pop
mov
cwtl
jle
dec
push
add
cld
push
lcall
andb
mov
outsl
movsl
xchg
mov
into
pop
loop
pop
inc
hlt
xlat
push
icebp
pushf
stos
fdivrs
mov
mov
and
sbb
mov
jb
gs
dec
dec
sbb
xor
fs
adc
jmp
pop
lock
out
add
leave
inc
lds
jne
sbb
lock
add
aaa
inc
mov
outsl
and
inc
sbb
push
pop
push
iret
jns
adc
pop
or
jne
ja
push
adc
lods
adc
aam
mov
int
cld
lods
std
pop
cmp
icebp
jno
ret
mov
xchg
xchg
sahf
sar
jb
and
cli
imul
pop
repnz
jne
jb
aas
sbb
jg
fwait
enter
mov
cmp
pop
clc
es
adc
inc
mov
enter
push
mov
in
enter
or
dec
aas
mov
cmc
ja
push
iret
pop
push
and
mov
cmpsb
cmp
sub
and
mov
iret
addl
push
and
sub
pop
sub
rcrl
xchg
pop
and
arpl
pop
and
ljmp
fwait
pop
inc
mulb
push
sbb
xlat
scas
adc
out
mov
mov
xchg
pop
mov
push
push
push
mov
xor
mov
outsl
inc
fildll
and
push
pop
mov
pop
mov
dec
jl
push
inc
fcompl
mov
nop
pop
xchg
inc
xlat
mov
fwait
sahf
inc
mov
lret
out
popa
lcall
fcmovnu
jno
mov
push
loop
add
xchg
push
xchg
pushf
jbe
lea
add
fadds
push
push
notl
out
ficomps
rclb
cmpsl
inc
inc
jb
xor
in
cwtl
js
inc
inc
push
jge
lds
and
outsb
mov
into
pop
mov
push
add
scas
mov
jge
int
or
push
scas
add
push
mov
add
or
repz
addr16
popa
dec
and
lods
mov
mov
cmp
out
cltd
fcomi
movsl
pop
xchg
dec
pop
jl
in
pop
adc
fadds
repz
mov
cmpsb
outsb
call
jle
cmp
xchg
sbb
ret
cli
test
or
xchg
mov
and
mov
notb
sub
notl
xor
adc
sbb
push
cld
jbe
mov
cwtl
cmp
sbbb
ficoml
xchg
orl
xchg
xchg
pop
out
xchg
cmp
mov
mov
rcr
mov
fwait
sahf
jge
add
popa
jno
repnz
out
mov
lock
sub
lcall
cs
lahf
lods
jmp
aam
sbb
cmp
aad
inc
jmp
jb
int3
fistps
cmp
fmulp
inc
inc
mov
jno
mov
shll
jb
jle
inc
inc
movsb
and
stc
add
fistpl
mov
in
mov
test
shlb
push
loope
outsl
dec
les
test
bnd
in
inc
or
lock
jns
jae
aad
dec
cld
inc
mov
repnz
mov
ret
fidivrs
lea
or
lods
frstor
out
fldt
or
xchg
or
jbe
sahf
pop
aad
jno
jg
inc
push
imul
shll
cmp
add
test
stc
xchg
and
push
mov
or
js
adc
es
dec
sbb
not
cltd
jp
pop
cwtl
adc
dec
jle
mov
sbb
aas
in
faddp
xor
test
xchg
xchg
je
jb
jecxz
ljmp
sarl
inc
cltd
push
dec
sub
push
push
cmp
iret
scas
inc
imul
jg
and
push
jne
sarl
fdivr
xor
cwtl
inc
pop
mov
jmp
cld
stos
sub
push
es
jae
mov
sbb
xor
sub
imul
inc
lcall
in
lahf
or
cld
testl
sbbl
fucomp
adc
cmc
push
inc
dec
in
insb
or
jno
mov
add
rcrb
or
and
ficoms
mov
je
mov
inc
rcrl
xchg
pop
enter
les
xchg
adc
loop
fildll
mov
es
in
cmpsb
ja
notb
ret
pop
mov
imul
shrl
xchg
lock
insl
lods
insb
out
and
mov
mov
sti
dec
scas
sbb
cld
pop
inc
pop
arpl
xchg
filds
jl
adc
addr16
cmp
pop
imul
sub
mov
mov
mov
fisttpll
in
xor
xor
loopne
out
adc
jb
addb
or
xchg
repnz
mov
insb
int
sarl
dec
mov
rep
cli
adcb
pop
push
je
add
cmp
push
xchg
movsb
dec
xor
jl
sub
add
data16
xchg
mov
xchg
add
and
rolb
cmp
push
cmp
cmpsl
faddp
in
adc
jmp
test
push
jp
mov
in
mov
lods
sbb
test
imul
scas
add
jg
and
cmp
lods
mov
ret
pop
dec
in
call
leave
jg
ja
out
inc
dec
cli
ds
mov
cmc
ja
mov
lods
adc
adc
test
xor
cs
lds
cmp
ss
jp
ficomps
or
push
cmp
inc
iret
std
ss
mov
add
stos
push
adc
lahf
out
stos
int
outsl
gs
loopne
add
xchg
stc
add
lods
rorl
nop
or
mov
inc
pop
xchg
imull
push
sbb
or
aad
jae
xor
arpl
adc
out
mov
jg
push
in
les
mov
js
fiadds
adc
cld
das
fucomp
adc
nop
pop
or
inc
les
push
scas
es
cli
mov
pushf
outsb
inc
fs
sbb
push
push
jl
aas
fisubs
and
les
jae
nop
inc
pop
arpl
push
lea
mull
adc
popf
pop
clc
jae
sub
pop
xor
mov
les
cmp
mov
lds
sbb
fucomi
or
popa
dec
xchg
gs
push
jne
mov
mov
enter
inc
fs
adc
and
cltd
testl
stos
xchg
jl
fisubrl
shl
test
jo
xchg
mov
pop
xor
js
xchg
das
jcxz
repnz
mov
and
mov
out
pop
mov
xor
dec
test
cmpsl
adc
rcr
push
mov
jp
dec
cs
movsl
push
fistl
dec
fisubrl
jge
jl
mov
cld
xlat
test
ret
jbe
sbb
pop
cmp
pop
nop
icebp
jne
jecxz
jp
adc
imul
add
sbb
adc
ret
ret
out
fmul
jns
lods
mov
or
xor
jnp
scas
cwtl
movsl
mov
and
ss
inc
in
jns
push
les
add
mov
adc
pop
pop
ja
repz
or
dec
xchg
or
push
addb
in
pop
andb
fstpl
mov
loopne
dec
popa
xchg
push
nop
add
outsl
mov
dec
pop
xchg
insl
fs
xor
jno
xchg
dec
jmp
scas
jnp
enter
std
jbe
mov
stos
repz
cmp
xor
dec
pop
mov
lock
and
xlat
iret
stos
jnp
js
mov
ss
fwait
adc
arpl
sbb
jo
mov
xchg
ret
cmp
push
mov
lcall
test
dec
in
int
pop
inc
jecxz
xchg
sbb
pop
movsl
push
sarb
adc
dec
pop
dec
out
and
jne
cli
and
daa
es
in
or
xor
jb
pop
mov
pop
fldt
mov
xlat
xchg
jno
jb
fildll
mov
jmp
lahf
js
leave
xchg
iret
addr16
jnp
jl
icebp
sub
insb
ljmp
xchg
and
push
lret
and
add
jb
sti
mov
repnz
or
ds
inc
adcl
xchg
cmp
cli
fdivs
jge
fsubrp
shl
mov
in
or
movsl
jmp
stos
pop
lahf
rcrl
bound
mov
mov
nop
ret
add
mov
imul
aaa
lahf
mov
and
popf
jo
xchg
loop
ja
int
les
mov
inc
outsb
pop
fimuls
sub
movsb
aam
mov
cli
test
mov
jp,pt
es
not
add
adc
out
and
fmull
pop
fdiv
shll
jbe
dec
test
jne
pop
mov
ljmp
int
aam
outsl
and
adcb
jg
mov
push
mov
jg
push
add
fs
pop
cmpsl
pusha
inc
mov
dec
pop
jbe
iret
jg
dec
pop
loopne
mov
push
or
and
icebp
test
and
jno
into
mov
mov
inc
enter
aas
adcl
add
in
mov
push
scas
pop
subl
cmc
sbb
bnd
and
fldenv
or
mov
jne
pop
dec
lcall
xchg
sarb
orl
mov
sub
fiaddl
test
jo
mov
int
sbb
loop
jne
ret
ljmp
push
out
bound
ss
imul
sbb
sub
cltd
push
loopne
mov
or
mov
icebp
pop
test
ret
pop
fisttps
add
js
out
sub
xor
pop
enter
adcb
push
adc
jno
pop
nop
outsl
fisttpll
iretw
loopne
push
dec
filds
stos
dec
js
ret
and
inc
pop
add
scas
push
fdivs
inc
or
jg
pop
jmp
insb
pop
or
and
in
movsl
nop
jbe
arpl
mov
into
stos
rcrb
int
imul
sub
daa
mov
lock
pop
xorb
dec
pop
std
xor
std
inc
rol
aas
pop
cld
mov
int3
into
lret
pushf
lock
inc
cmpsl
pop
js
pop
jecxz
pop
xor
loopne
jle
jg
or
adc
daa
es
sub
mov
int3
cmpsb
push
xor
push
xorb
fiaddl
or
sub
sbb
sub
xor
clc
mov
or
popa
xor
jno
cmp
xchg
dec
inc
outsl
jg
mov
loopne
inc
mov
or
icebp
sub
cltd
jbe
out
popa
das
jmp
das
roll
in
cli
jbe
cmpb
les
insl
xchg
jge
adc
xchg
test
inc
cmp
lods
dec
outsb
adc
mov
in
mov
mov
stos
aas
aad
sahf
add
lret
in
pushf
aaa
rorl
sti
pop
fimuls
mov
idiv
cld
sbb
lods
pushf
sub
popf
xchg
fcompl
scas
cmp
dec
sahf
test
push
insl
int3
push
cmc
mov
pushf
scas
icebp
out
sbb
push
repnz
lret
lods
cwtl
inc
xor
or
or
xchg
nop
sarl
lods
mov
adc
mov
jg
pop
xor
fsubl
pop
jge
jecxz
cmp
inc
loope
sbb
inc
mov
out
push
push
out
idiv
lds
dec
lahf
mov
out
cmc
mov
cmc
cmpxchg
cmp
leave
lret
or
imul
out
daa
icebp
ja
xchg
in
mov
movsb
movsb
pop
clc
pop
inc
jns
ljmp
and
pusha
or
cltd
pop
xor
inc
test
or
xchg
adc
xchg
loope
push
jbe
out
inc
fisubrl
ja
add
xchg
xchg
mov
cmc
ljmp
inc
jae
add
testb
negb
cmpsb
aam
sbb
dec
jle
jb
hlt
leave
add
rcl
xlat
mov
jnp
scas
jo
inc
rep
dec
in
add
in
push
mov
enter
loop
movb
cmp
cmpsb
cmp
mov
repnz
popf
and
das
and
repnz
mov
xor
add
mov
pop
in
leave
dec
pop
aam
fdivl
shll
mov
xor
lahf
or
divl
mov
insb
push
dec
xor
dec
andb
mov
lds
leave
les
mov
xor
shr
mov
push
sarl
xchg
bnd
fisubrs
mov
stc
mov
rorl
into
ljmp
imull
dec
pop
mov
int
and
test
adc
aaa
negl
mov
cltd
stc
xchg
mov
inc
inc
fisubrs
push
adc
add
incl
mov
inc
push
pop
adc
fsubrl
inc
es
in
and
cmp
orb
mov
and
mov
vpshad
pop
stos
data16
div
out
mov
xor
out
mov
hlt
push
in
out
pop
xor
push
in
and
cmp
icebp
dec
or
jmp
divb
pusha
mov
pop
xlat
stos
inc
sbb
mov
xor
scas
inc
stos
mov
add
call
inc
imul
ljmp
ja
and
push
push
mov
mov
rcrl
jp
mov
adcb
int
ret
and
xor
neg
out
mov
hlt
bound
iret
shlb
sbb
imul
adc
cmpsb
or
jo
fs
mov
out
pop
add
xchg
cmpsb
in
pop
pop
adc
fucom
add
dec
push
icebp
stos
test
mov
test
jmp
add
adc
insb
pop
and
mov
ror
pop
cltd
xor
andl
jnp
jnp
and
lcall
clc
popa
lods
add
js
xlat
fiadds
stos
stc
pop
repnz
inc
mov
push
jge
cwtl
popf
ret
cmp
sbb
aad
je
or
jmp
jge
pop
pop
mov
dec
lret
jge
ret
je
xlat
enter
divb
sar
adc
aaa
inc
sbb
iret
inc
inc
add
in
in
aam
sahf
sub
fdivrp
push
pusha
imul
lods
xchg
lahf
xor
repz
add
in
inc
cmp
adc
cltd
add
leave
adc
mov
mov
jl
popa
mov
jp
lret
sbb
jp
inc
outsb
negb
movsl
or
add
xor
mov
scas
shlb
cwtl
stc
adc
aad
adc
in
xor
inc
notb
xor
pop
jp
jbe
pop
push
out
xor
addr16
std
dec
mov
adc
movsl
or
leave
add
jmp
icebp
outsl
push
sbb
lods
fisubrs
out
in
add
push
xchg
rolb
ljmp
sbb
ja
cmp
mov
dec
xlat
dec
stos
xchg
repz
inc
jmp
incl
jl
pushf
and
sub
pop
fsubrl
cmc
lret
mov
lret
push
in
lret
ficompl
jb
add
lods
mov
leave
mov
add
jb
sbb
aam
sahf
or
pop
stos
mov
das
sub
fldenv
pop
les
loopne
jl
push
and
pop
mov
or
lods
jecxz
ds
sub
cmp
clc
popf
mov
lcall
dec
movsl
rcrb
les
call
int
jge
mov
jns
test
test
adc
add
and
sub
popa
lret
test
xor
stos
insl
inc
jle
rcrb
nop
pop
bound
iret
xor
pop
cs
in
mov
lret
dec
les
mov
and
int3
mov
mov
enter
shr
mov
lock
dec
push
int3
add
ljmp
mov
and
xchg
mov
mov
out
rcrb
addb
lret
mov
push
es
sahf
mov
into
mov
lods
cltd
xor
fldl
adc
lods
xor
pop
sub
push
nop
mov
enter
and
mov
sub
push
iret
mov
sbb
lds
ds
dec
fimull
xchg
xor
stos
cld
stos
insl
mov
add
fnstsw
cmpsl
lods
repz
or
filds
testl
add
popf
pop
jo
mov
enter
loope
les
bound
jbe
ljmp
dec
stos
jecxz
out
and
jbe
in
or
jb
aas
mov
mov
add
add
lret
pop
sbb
lahf
fiaddl
dec
mov
daa
or
mov
imul
xor
dec
imul
insl
pop
add
jno
push
shll
mov
stos
mov
dec
aam
push
adc
int3
add
gs
cwtd
icebp
dec
cld
test
int3
push
rorl
cwtl
hlt
xor
cld
rcr
sbb
loope
testb
std
mov
sti
es
cmpsb
pusha
stos
dec
inc
mov
push
into
mov
mov
fsubl
xchg
ror
cmpsl
ret
scas
shlb
dec
ret
cwtl
push
lods
jp
into
jns
sub
dec
dec
fs
pop
scas
aad
outsb
fsubr
ret
adc
imul
or
lcall
jp
lret
mov
adc
pop
int
or
xor
pop
jb
inc
jne
push
add
int3
test
inc
push
insl
leave
add
sub
dec
and
clc
push
pop
test
paddw
ss
jb
mov
push
into
out
xor
mov
sub
cmp
in
jg
mov
pop
pop
push
cmp
gs
nop
cli
int
imul
test
mov
xorb
xlat
dec
nop
cmp
dec
lock
sub
test
push
xor
sbb
ret
cld
mov
push
mov
lods
or
dec
out
xlat
and
out
data16
fbstp
mov
add
lcall
mov
test
aas
enter
nop
fdiv
stos
cltd
incb
push
dec
lock
fucom
pop
pop
cltd
cld
push
cmp
jmp
and
in
pop
inc
cmp
dec
jbe
lahf
xchg
out
pop
stc
insb
pop
adc
inc
xchg
dec
add
mov
xor
mov
mov
adc
mov
repnz
and
jg
scas
int
jne
push
pop
or
sbb
ret
add
sbb
sbb
mov
or
inc
lods
dec
mov
ret
arpl
mov
mov
xchg
fwait
test
ret
adc
jno
push
lret
jno
je
dec
aas
icebp
and
push
fdivl
pop
jb
cmp
push
stc
cli
jecxz
inc
or
or
movsb
sbb
fiadds
outsb
jo
mov
dec
loope
dec
sub
dec
cwtl
adc
sub
jo
int
cltd
mov
les
add
icebp
cmp
mov
cmp
cld
rcrb
cmp
cmp
aad
loopne
repnz
and
repnz
lods
iret
lahf
push
dec
mov
pushf
xchg
mov
fiaddl
into
dec
dec
jl
rcrb
mov
ja
mov
fiaddl
sbb
mov
sarl
or
lret
out
sar
imul
loopne
loopne
xchg
lds
aas
mov
push
adc
cltd
cltd
iret
ja
dec
daa
aaa
sahf
add
dec
aad
out
iret
xchg
and
in
sub
clc
pop
int3
aad
push
mov
cli
push
clc
daa
mov
inc
fldl
fwait
packuswb
pop
push
inc
or
fnstcw
mov
or
pop
add
jo
or
cmp
int3
jo
inc
mov
movsl
dec
cmp
lods
fsubrs
dec
xor
jno
shll
or
clc
rorb
fldt
sbbl
xchg
xchg
sbb
or
xor
gs
and
xchg
popf
lds
mov
dec
sbb
out
pop
xorl
jnp
mov
mov
outsb
imul
pop
xor
hlt
sbb
pop
dec
inc
mov
dec
loop
aad
sbb
das
push
adc
daa
scas
mov
lock
leave
lods
dec
push
dec
pop
cmp
arpl
dec
sbbl
adc
mov
sbb
sub
or
call
insb
das
pop
xchg
das
mov
inc
pop
xlat
stc
dec
cmp
imul
and
lods
adc
lcall
ljmp
cltd
in
stos
fdiv
dec
mov
and
nop
sbb
insb
jnp
scas
rorb
cmpsb
out
mov
jecxz
jb
push
dec
int
enter
mov
jg
or
outsl
mov
fwait
dec
inc
shll
dec
and
jne
scas
outsl
mov
imul
in
mov
cmp
add
test
test
mov
jmp
mov
mov
mov
fs
and
add
int
adc
and
aas
mov
dec
inc
ret
loope
inc
push
je
xor
outsb
sbb
rcrl
push
add
sarb
imul
or
int
fisttps
pop
push
push
adc
ds
repnz
sti
mov
sbb
lcall
lock
jge
mov
jecxz
xor
aad
adc
push
cmp
sbb
rclb
push
js
aas
pop
jns
loopne
rcrb
jb
pop
les
in
ss
stos
adc
lret
xchg
jg
adcl
and
cs
in
out
fisubs
ret
pop
or
mov
dec
sub
inc
lcall
mov
in
pop
xchg
jnp
int
rol
and
or
push
ret
idiv
movzbl
outsb
int
push
icebp
mov
mov
and
mov
sbb
ds
cwtl
sbbb
mov
lock
ds
rclb
fiadds
xchg
push
xor
or
xchg
in
sub
sub
out
outsb
and
jle
lahf
and
loope
xor
testl
sbb
fnstenv
pusha
cmc
in
clc
enter
xor
pop
mov
pop
or
or
loop
dec
jno
jno
aas
mov
sbb
add
xchg
test
xchg
les
out
data16
mulb
ss
jnp
scas
xchg
aaa
out
shrl
mov
sub
call
jle
inc
fwait
ljmp
push
imul
mov
sar
pop
shlb
cmpsb
lea
pop
shlb
xchg
arpl
push
push
xchg
loope
lock
push
sbb
jno
repnz
add
ja
xor
in
aaa
lock
imul
and
xchg
push
test
movsl
pop
dec
dec
rcrl
cmp
mov
add
pop
lcall
sbb
pop
ja
jp
fadd
adc
cmp
mov
cmpb
sarl
jns
inc
push
pop
lahf
xchg
push
test
xor
scas
dec
adcb
lds
add
or
sub
or
fs
add
xchg
rcrb
mov
mov
leave
fcomi
lea
out
mov
ret
pop
int
xor
pop
mov
lcall
cld
xor
into
int
mov
push
aas
clc
mov
stc
mov
outsb
fwait
testb
jbe
inc
mov
into
mov
lret
lret
mov
pop
inc
fdiv
mov
pusha
lret
xchg
in
ret
mov
andb
jge
add
iret
aad
fisttpll
sub
mov
add
push
push
stos
jl
lahf
jo
aaa
push
pop
outsl
xor
arpl
mov
mov
notb
adc
cld
out
ja
in
fsts
fildll
pop
mov
and
push
fwait
ss
sbb
xlat
imul
mov
or
sarl
lock
negb
or
mov
les
xchg
mov
xchg
mov
inc
daa
xchg
cmp
or
iret
mov
mov
cmp
iret
sub
nop
and
std
dec
lret
adcl
pop
adc
add
cmc
xor
add
xor
xchg
xor
mov
or
sbb
xor
push
add
call
jbe
pushf
cltd
xchg
mov
push
jl
dec
xorl
push
xchg
adc
cmp
out
into
cmpsb
mov
pop
inc
sub
aam
loopne
mov
shl
ds
outsb
dec
add
aad
jnp
mov
jg
jp
in
shr
sahf
push
lods
sbbl
sub
adc
dec
pop
pop
notb
ret
lahf
inc
icebp
fldenv
cmp
sbb
pushf
mov
lods
lahf
jmp
int3
mov
push
scas
or
loopne,pt
leave
xchg
push
inc
adc
movsl
jb,pt
call
jge
push
xchg
loop
pop
sarl
or
lret
dec
cmc
gs
ljmp
and
jmp
gs
jp
pop
andb
daa
call
sarb
sbb
test
sub
addr16
in
in
xor
fisttpl
adc
test
push
cmpsl
mov
ds
popf
mov
add
pop
or
div
inc
in
adc
xchg
mov
cwtl
dec
sar
inc
push
aaa
mov
xchg
push
inc
arpl
xchg
pop
pop
leave
sbb
mov
sahf
sbbb
sub
adc
sub
add
scas
mov
inc
mov
xchg
push
cmp
ss
loopne
in
dec
xlat
fs
xor
pop
sbb
aam
adc
pop
jg
cli
add
cmp
outsb
push
test
mov
fs
jl
push
rcrb
mov
rcrl
xchg
aas
and
xchg
or
orl
sbb
nop
cmp
or
xchg
insb
pusha
lret
add
std
sub
pop
mov
jle
inc
das
or
mov
aad
or
test
lods
pushf
inc
lret
inc
jl
fdivl
and
dec
add
dec
jnp
cmp
pop
mov
dec
js
sbb
mov
scas
shlb
push
cmp
dec
test
ss
add
sar
mov
push
push
mov
xchg
loop
push
icebp
shlb
cwtl
outsb
mov
test
push
mov
fbstp
repz
ret
out
push
jle
cltd
cmpsl
ljmp
shrl
lods
push
sub
mov
jno
sbb
test
push
push
dec
push
loope
xchg
je
stc
cmp
inc
sbb
sti
pusha
ds
add
push
pop
dec
out
leave
mov
push
xchg
xor
pusha
out
or
pop
cmpsl
adc
int3
scas
or
das
sahf
test
jecxz
jge
xor
xor
jp
addr16
mov
lret
mov
aad
xor
shrb
push
xchg
ja
sbb
pop
cmp
cmp
aas
xlat
mov
rorb
pusha
lds
ds
add
xchg
cmp
jge
and
mov
vmaxsd
ss
and
xorb
mov
testl
gs
sbb
outsb
or
lods
movsb
lcall
test
arpl
push
adc
dec
mov
adc
pusha
inc
fs
inc
test
push
mov
add
cmpsb
fwait
dec
cmp
pusha
xor
orl
pop
mov
test
mov
jbe
in
sub
loop
cld
movsl
repnz
or
push
mov
mov
popa
sbb
cs
lods
cmpsl
mov
jbe
hlt
insb
cmp
inc
in
out
gs
pusha
and
cltd
push
sahf
ljmp
mov
mov
xor
fistl
push
sbb
jge
mov
jle
sub
mov
and
inc
xchg
cmp
xor
addr16
adc
adc
sbb
imul
sub
daa
jbe
jne
pop
jno
sarb
add
or
sbb
dec
pop
pop
cld
mov
mov
xlat
subl
daa
xchg
outsl
jo
addr16
xchg
push
sub
stos
pop
ret
outsb
inc
dec
pop
dec
dec
inc
js
ds
ficoms
push
hlt
push
push
mov
in
sub
lcall
mov
popa
xchg
add
incl
inc
xchg
add
repnz
lea
dec
dec
add
leave
dec
push
jno
inc
pop
sub
xchg
sbb
mov
xchg
lahf
xchg
jae
mov
cmp
rcll
stos
sarb
rcll
push
mov
xor
out
pop
jmp
xor
inc
add
ror
xchg
pop
inc
adc
add
lea
stos
xchg
sub
mov
pusha
pushf
sbbl
out
pusha
mov
std
outsl
std
and
adcl
inc
lods
jl
jp
jecxz
ss
js
popa
cmp
xchg
lret
xlat
jmp
out
xchg
or
adc
movsb
incb
mov
mov
push
cmc
add
or
loop
push
xlat
iret
push
xchg
mov
mov
shlb
fstpl
scas
aaa
addr16
je
dec
pop
ret
fmuls
lea
jbe
div
and
rcll
inc
fiadds
outsl
jnp
push
and
xchg
scas
ja
out
xlat
add
mov
push
aad
dec
add
jge
push
and
scas
mov
outsl
cs
aad
cmp
fs
jmp
cmp
xor
mov
lret
stos
rolb
je
lock
mov
negl
jecxz
mov
adc
dec
jb
or
stos
mov
ds
fiadds
inc
lahf
or
mov
push
mov
jmp
sbb
popf
mov
jl
push
xchg
mov
sarb
jle
xlat
mov
les
cmpsl
loop
push
js
adc
rorl
adc
jge
lods
xchg
mov
ds
pop
fadd
outsl
jno
push
popf
fcom
push
fisttps
fs
jb
sub
jl
loope
xor
pop
cwtl
fs
dec
je
mov
jb
inc
mov
and
cmp
cmp
or
pusha
loope
or
roll
jecxz
test
ds
arpl
inc
mov
aas
sub
push
vpsubsb
mov
pusha
lock
stc
inc
ret
ret
mov
sbb
aam
sub
jbe
jl
xlat
lret
mov
mov
jno
sub
xchg
js
leave
out
xor
xlat
dec
push
sub
fidivl
imul
add
inc
or
cmp
or
xor
aad
insl
addr16
mov
push
or
popf
jo
outsb
icebp
fwait
mov
sub
xor
add
adc
mov
and
cld
arpl
sbb
pop
out
push
push
mov
mov
lock
xchg
xorl
imul
pop
jmp
xor
fiadds
push
mov
jns
jg
aad
mov
fwait
cmpsl
bound
or
inc
or
mov
cmp
jmp
xchg
xchg
imulb
sahf
js
out
fadd
pop
je
sub
mov
outsl
popa
insl
test
stc
dec
jecxz
fdivs
dec
adcb
add
ja
cmp
ds
push
push
in
enter
sub
stc
sub
xor
cmp
test
loopne
adc
testl
jb
stos
adc
test
or
xchg
lea
cli
and
les
shl
outsl
fmuls
adc
xor
mov
insb
mov
outsl
fstps
sub
rcll
pop
shrb
inc
mov
jle
insl
mov
sub
in
sti
adc
and
dec
fsubp
add
enter
mov
jns
and
pop
cli
call
or
dec
orl
scas
test
cwtl
sbb
jecxz
jp
scas
adcl
jge
push
dec
mov
cmpsb
or
jnp
cli
jmp
daa
sub
lahf
mov
outsl
out
mov
lret
pop
mov
cmp
jge
adc
pop
fistl
push
jno
scas
mov
inc
pop
inc
das
cmc
or
fisttpll
dec
jb
fsubr
xchg
cmp
and
arpl
clc
sbb
jae
mov
xor
adcb
ja
jg
xorb
and
mov
ror
add
push
ds
inc
aaa
jns
lret
ds
es
int
lret
or
nop
xchg
cmp
call
cmp
cmpsb
sti
lret
leave
adc
ja
int
jecxz
dec
repz
adc
leave
inc
out
pop
aad
mov
mov
ficompl
das
test
insl
mov
push
inc
push
mov
sbbb
pop
jp
icebp
push
lret
xchg
sbbl
js
inc
and
mov
pop
hlt
inc
scas
ds
xor
in
inc
loope
insb
and
adc
mov
pop
push
add
out
add
movb
pop
insb
call
xchg
out
push
inc
xlat
mov
nop
pop
mov
ljmp
or
dec
addr16
mov
cmp
pop
cld
mov
jl
pop
pop
adc
sbb
lods
add
scas
std
sbb
std
pop
jle
dec
dec
lods
sub
pop
mov
sub
inc
stos
sub
mov
adc
lahf
fdivrp
outsb
pop
popa
xchg
xor
jecxz
loop
stc
test
jecxz
cmp
or
lea
mov
ss
mov
xor
idivl
aam
mov
mov
roll
xchg
or
daa
mov
pushf
rorb
aas
lcall
mov
sbb
mov
scas
shrb
bswap
xchg
mov
adc
outsl
cwtl
sbb
adc
in
sub
pop
cmpsb
pop
mov
or
lods
dec
sbb
insb
push
dec
sub
mov
push
cmp
mov
mov
pushf
push
jbe
cmpl
jb
cmovp
xchg
popa
sbb
mov
in
pop
push
std
xchg
fidivs
mov
nop
add
dec
and
pop
aaa
jbe
pop
jb
jecxz
dec
subb
enter
inc
add
inc
cmp
in
push
push
and
sub
or
pusha
out
push
fisubrs
fimuls
jae
jae
daa
jnp
fnstcw
nop
cmp
insl
sarb
pop
jg
dec
js
push
lcall
fucomi
mov
fadds
iret
fprem1
daa
les
sub
and
fnstenv
mov
push
push
clc
mov
pushf
xchg
push
das
shrl
aas
ds
in
lock
inc
fmuls
sbb
cwtl
jno
mov
ljmp
push
sub
jl
mov
xchg
or
pop
lahf
imul
addb
imul
xchg
dec
test
scas
adc
mov
adc
mov
dec
xor
out
imul
sbb
insl
sub
popa
faddl
fnstenv
sti
cltd
xor
cmp
dec
clc
pop
xor
cmp
push
jno
pop
pop
js
jnp
dec
add
jge
inc
xchg
mov
clc
jmp
repz
jg
scas
cmp
jnp
lods
out
pop
ret
adc
repnz
mov
ljmp
add
ss
push
shll
into
loopne
jne
into
fcomps
aam
enter
mov
cmp
jge
aas
idivb
xchg
rcrb
sbb
repz
aas
aaa
dec
push
sub
icebp
dec
add
lcall
mov
repz
xchg
cs
mov
ret
das
sar
sbb
sub
lods
mov
pop
add
mov
popf
cs
mov
outsl
jmp
mov
out
mov
mov
mov
inc
in
adc
push
sub
sub
or
or
std
scas
sbb
out
leave
xchg
imul
jns
outsl
xchg
stos
loop
mov
loopne
insb
hlt
ror
addr16
adc
xchg
mov
sahf
fwait
out
pop
gs
lods
mov
ret
mov
dec
mov
xorl
out
add
and
cltd
out
sbbl
push
inc
mov
push
pop
pop
out
aad
insl
pop
in
mov
nop
fld
mov
xchg
push
out
lcall
iret
jo
int3
sub
dec
jmp
loop
xor
mov
in
mov
leave
push
lock
jl
movsl
adc
pop
imul
shrb
je
in
popf
fwait
shll
lods
decl
loope
sbb
stc
into
jne
mov
mov
sbb
jae
lret
dec
mov
inc
arpl
inc
jge
add
bound
sti
sbb
std
fwait
imul
lea
sub
pop
sub
fdivrs
dec
xchg
gs
scas
push
cld
jl
ljmp
xor
xchg
xlat
push
dec
cs
push
cmp
jns
mov
nop/reserved
mov
sbb
sub
inc
pop
repz
bound
push
into
imul
arpl
or
lcall
repnz
adc
je
insl
ret
xor
and
push
ret
cmpsb
pusha
sbb
mov
clc
iret
mov
add
test
cmp
test
adc
scas
xor
dec
push
adc
sbb
stos
rcrl
stc
adc
xchg
mov
mov
insb
pop
or
hlt
mov
mov
sbb
jmp
movsl
out
daa
xor
adcb
daa
bnd
mov
cmp
ja
jg
inc
and
sahf
nop
pop
mov
cmpsl
dec
xchg
divb
push
mov
push
gs
pop
push
in
popf
mov
cmpsb
push
push
inc
es
popa
inc
adc
cmpsb
xor
pop
jne
cmp
inc
mov
cwtl
nop
inc
mov
scas
push
imul
iret
jge
stos
fsubrl
mov
pop
xor
std
sub
bnd
rolb
sbb
arpl
imul
mov
push
jno
or
rorb
pop
int3
xor
push
xchg
icebp
pop
sub
mov
fisttpll
inc
jae
mov
out
jae
push
fnstsw
mov
jnp
jne
jle
fmulp
rorb
mov
lret
shrb
cmpsl
rclb
loope
cmpsl
jb
cld
int
and
mov
call
aaa
dec
fs
sub
js
xchg
loop
in
push
cmc
sub
xor
xor
and
sarb
cs
xlat
mov
push
push
sub
fmull
mov
cmp
je
jmp
nop
cld
ret
sbb
mov
icebp
xor
pushf
xchg
repnz
pushf
dec
stos
int
and
rorl
mov
xchg
sub
out
insb
loop
mov
arpl
inc
sub
ds
jo
xchg
jae
fisubl
cmp
dec
ret
adc
scas
cmpsl
fcoms
dec
movsb
roll
fidivl
aaa
jo
jmp
and
pop
jnp
inc
mov
xor
in
sub
inc
xchg
jnp
test
mov
dec
sbb
enter
mov
jo
cld
mov
out
or
and
inc
xchg
imul
or
jmp
jb
pop
add
mov
hlt
test
inc
popa
clc
dec
fxch
jmp
int
push
sub
mov
sbb
lock
dec
sub
jne
stc
insb
xchg
fwait
add
test
or
and
fisttps
gs
in
pop
imul
sub
or
xchg
daa
push
or
lods
adc
dec
inc
lcall
cmpsb
lods
sarb
pop
rclb
fldcw
mov
sub
adc
mov
hlt
loopne
test
mov
mov
sub
daa
xor
mul
jmp
fsubs
inc
fildl
scas
js
cmp
add
movsl
cmp
clc
add
icebp
rolb
mov
jo
stos
pop
lods
push
shrl
cmp
divl
or
into
fiadds
mov
mov
das
pop
out
jae
jle
imul
test
je
sbb
inc
rcrb
xor
jle
and
rcpps
push
xchg
mov
out
mov
loope
aaa
loop
jne
xchg
insb
adc
out
push
adc
xchg
inc
jge
lods
jge
mov
pushf
out
sbb
push
xchg
bsf
sarl
xchg
fs
sub
mov
dec
mov
mov
out
jne
inc
dec
mov
pop
ljmp
pusha
call
or
xor
fadd
fisttps
leave
enter
shlb
mov
pushf
mov
dec
test
xor
mov
dec
pop
mov
daa
jle
dec
xchg
sub
iret
inc
lods
cmp
fiaddl
data16
cmp
test
push
into
inc
mov
xchg
and
xchg
sbb
pop
jns
std
mov
xor
mov
shl
or
out
dec
test
sub
push
in
std
xchg
dec
mov
fidivrl
pop
rcll
imul
gs
jle
mov
mov
xor
xchg
notb
mov
pop
movsb
out
out
out
out
cltd
in
xchg
cltd
sub
dec
sarl
or
icebp
test
push
lock
push
mov
clc
jl
repnz
aam
andb
sarb
test
fidivs
cmp
add
js
pushf
and
sbb
repz
lret
in
pop
jl
and
shlb
sbb
lret
pop
add
jbe
fidivs
lret
andb
mov
out
pop
inc
shrb
add
xchg
int
ss
cmp
xchg
int3
mov
inc
mov
popf
mov
pusha
fwait
jecxz
loop
jmp
pusha
xchg
fsubp
cld
pop
mov
dec
push
add
iret
pop
push
mov
jle
sub
or
jecxz
mov
push
sbb
imul
jp
ret
ja
bound
xor
xchg
jo
push
pop
push
sbb
ss
adc
rdpmc
hlt
shll
cwtl
sbb
addr16
inc
inc
subl
jge
xchg
and
mov
sub
mov
aam
test
outsl
cltd
cmpsl
test
and
pop
mov
mov
mov
mov
fsts
test
outsb
push
sub
sbb
daa
push
cwtl
fimuls
xor
push
or
adc
push
pop
gs
adc
arpl
inc
adc
pop
push
mov
adc
rcrb
xchg
xor
ss
mov
and
stc
mov
jg
or
xor
in
imul
mov
out
push
xor
or
sub
std
sbb
scas
in
cmp
js
das
stos
cmp
mov
stos
sub
repnz
and
jmp
pop
je
scas
ret
xchg
movsb
jno
call
scas
stos
es
insb
lret
aad
mov
or
inc
adc
rcll
cmp
add
xor
and
push
sub
xchg
imul
mov
mov
movsl
adc
push
or
cmpsl
in
popa
jbe
and
dec
xlat
jne
jmp
dec
cli
mov
jmp
add
movsl
inc
adc
gs
clc
sub
mov
inc
cmp
in
lret
je
enter
pop
xchg
fcomps
mov
scas
mov
push
mov
js
or
das
ljmp
stc
sbb
out
push
add
jbe
jo
xchg
jno
or
imul
test
mov
lods
ljmp
push
mov
dec
lret
ds
and
xorb
push
sarb
das
cmp
div
scas
pop
mov
inc
push
mov
jecxz
xlat
cmp
or
sbb
lea
mov
pop
push
call
scas
jo
mov
jbe
cmp
xor
jl
sub
mov
movsl
cmp
ja
sbb
mov
test
rcll
int3
or
ss
stos
sbb
dec
insb
sbb
lcall
push
mov
fiadds
repnz
add
pop
cmpsl
add
jne
imul
fisttpl
push
das
test
jmp
xacquire
scas
nop
jbe
dec
add
lahf
std
dec
xchg
shrl
stos
popa
aam
lret
popa
cmp
sbb
mov
sub
in
data16
mov
rolb
ljmp
or
popf
sti
jnp
dec
mov
push
inc
cwtl
cmp
inc
test
xor
cmp
inc
shrl
lret
dec
fldcw
cmc
popl
adc
xchg
js
sti
testl
push
jmp
xlat
sbb
jno
pop
ja
mov
mov
and
inc
cltd
cmpsb
aam
out
cli
sbb
les
sbb
pop
sub
jns
cs
repnz
lea
movsb
outsl
out
xchg
pop
push
cmp
mov
sub
push
add
mov
movsb
scas
inc
sahf
add
fistpl
cmc
int3
adc
iret
fwait
lds
aaa
jmp
into
xchg
mov
sub
or
or
jle
movd
outsb
loope
sub
arpl
cmp
dec
sbb
and
xor
cltd
sub
gs
addl
pop
nop
pop
out
stos
xlat
subl
js
adc
daa
icebp
pop
stos
out
fwait
fstpl
mov
test
insl
mov
xchg
sbb
push
cmpsl
push
xorb
stos
outsl
xchg
imul
jmp
out
daa
das
cmp
mov
pop
incb
xor
xchg
jle
loopne
fs
xchg
dec
arpl
add
ljmp
cmp
lea
lock
mov
mov
mov
cmp
sbb
loop
xchg
dec
pop
or
pop
jecxz
mov
xchg
rolb
jo
stos
ljmp
push
je
mov
repnz
push
sub
push
xchg
imul
or
fcoml
cmc
push
jbe
pop
push
xlat
inc
bound
or
inc
pmuludq
lahf
pop
lret
call
inc
outsb
mov
add
mov
push
in
push
out
pushl
dec
icebp
jl
in
faddl
xchg
insb
and
test
mov
ret
xorb
jge
or
aam
cmp
sbb
fadds
test
push
loop
shl
xlat
cmpb
aad
xor
xchg
push
insb
shlb
loope
fnstsw
adc
push
ficompl
push
loope
mov
repnz
mov
je
inc
xchg
push
testl
mov
mov
pop
xchg
mov
loopne
pop
fs
daa
and
mov
add
cmp
stc
icebp
push
lret
outsl
das
popf
xor
xor
sub
jle
pop
lds
jnp
lcall
xlat
cmp
roll
out
and
cmp
jecxz
fdivl
and
dec
dec
and
insl
insl
pop
out
push
xchg
icebp
stc
pop
mov
clc
push
sub
loop
sahf
xchg
mov
and
push
cld
and
cmp
or
addr16
inc
dec
xchg
mov
xchg
sbb
idivl
bound
push
add
cmp
inc
int3
mov
mov
mov
jg
subl
iret
adc
cmp
jno
sbb
xor
out
xor
mov
mov
and
and
jmp
repnz
cmp
xor
hlt
pop
pop
bound
or
les
test
sub
popa
hlt
jle
inc
into
iret
sahf
inc
shll
dec
leave
repz
add
ss
mov
iret
xchg
pop
pop
or
das
aam
cs
mov
test
fisubrl
or
movsb
jb
add
dec
and
mov
cmpsl
inc
and
xor
test
mov
test
arpl
aaa
dec
rcrb
cmp
pop
xchg
push
dec
int
in
test
cmp
mov
fs
in
xor
jae
popf
ja
fdivrs
xor
push
jno
loope
dec
cmp
and
cmp
pop
dec
mov
cmpsl
push
cmpsb
mov
fldcw
int
add
lea
push
and
dec
push
dec
pop
sbb
arpl
aaa
in
cmpsb
into
dec
pushf
int
inc
hlt
fbstp
xchg
stos
outsl
mov
or
loope
rcrl
sub
xchg
and
push
and
inc
sar
sub
xchg
add
and
divl
jbe
les
push
aas
sarb
cmp
iret
jmp
pushf
andb
out
js
sbb
push
xor
xchg
pop
dec
es
mov
stos
and
mov
hlt
into
add
std
and
in
mov
add
addb
jl
test
mov
outsb
insb
add
pop
gs
daa
lret
xchg
aaa
inc
sbb
mov
out
push
dec
inc
pop
shlb
add
inc
xor
fidivs
or
push
add
decl
imul
in
cmp
xchg
pop
aam
pop
enter
cli
clc
push
bound
les
gs
mov
es
pop
into
and
sbb
adc
orl
xchg
rcrb
push
repz
mov
and
xor
sbb
popa
xchg
xor
add
xor
stos
mov
call
shlb
mov
jp
outsb
lcall
jo
insl
mov
clc
adc
push
or
or
inc
mov
stc
xor
dec
dec
leave
push
cmpsl
mov
mov
pop
jnp
pop
and
lods
cmpsb
xor
aas
stos
pop
ret
loop
mov
jmp
mov
insb
leave
mov
dec
faddp
adc
popf
jns
or
inc
iret
fcoml
mov
dec
fdivr
xor
fldl
ja
xor
dec
mov
int
lock
shlb
dec
loop
int
mov
out
dec
dec
out
adc
jmp
push
pop
lcall
xor
mov
add
cmp
enter
and
and
das
push
fcom
jns
sbb
dec
xchg
sbb
fstps
jp
rorl
imul
jle
jo
adc
in
jge
or
bound
outsl
cmc
jmp
mov
push
popa
sbbb
jp
rorb
or
push
mov
jb
mov
inc
xchg
aas
pop
mov
xor
push
jmp
shrl
aam
xchg
sub
and
loope
stos
mov
rcrl
jbe
sub
jmp
icebp
add
rclb
sub
xlat
outsb
cmpsb
out
cmp
jecxz
in
pushf
mov
in
and
dec
lods
push
jb
or
xor
jbe
xor
or
cld
js
push
clc
into
lret
jecxz
and
sub
enter
pop
push
fisubrs
lahf
push
push
and
push
push
fcomi
sbb
outsl
dec
out
rep
sbb
push
mov
lds
sub
lahf
pop
rcrl
fs
pop
mov
inc
imulb
dec
psubsw
sbb
push
inc
ret
jl
aas
fcomps
or
out
aam
xchg
add
testl
fsubr
pushf
ret
mov
movsl
cmp
xchg
sub
mov
pop
lahf
jb
adc
lds
int3
xchg
xchg
bound
mov
faddp
inc
push
std
inc
mul
testl
lea
pusha
xchg
arpl
leave
mov
loopne
scas
lcall
jecxz
jg
pop
mov
fisubrl
test
and
les
aam
pop
or
push
daa
mov
or
mov
pop
lods
jmp
dec
or
cld
lds
or
sbb
push
loope
pop
pop
push
pop
cmp
sahf
mov
cmpsl
jl
adc
sub
push
leave
inc
mov
stc
mov
pop
sbb
mov
jno
lret
add
add
jno
outsb
daa
scas
mov
sahf
cltd
pop
pop
cmpb
inc
pop
sbbb
dec
push
dec
or
repnz
jecxz
fldcw
loop
es
jne
addr16
or
lret
inc
dec
pop
lock
mov
dec
xlat
jno
sub
pop
jg
into
pop
sbb
jae
mov
adc
mov
push
jge
dec
stos
stos
mov
cmpsb
fdivl
jl
mov
call
jle
es
lret
cltd
xchg
push
mov
xchg
cld
ret
pop
push
clc
xor
arpl
out
or
sub
bound
mov
sahf
pop
sbb
pop
add
cld
push
inc
dec
pop
jb
leave
test
test
sub
inc
lock
lods
push
out
enter
in
cmpsl
push
adc
mov
inc
mov
jmp
xchg
insl
pusha
cmpsl
push
add
jg
xor
imul
pop
or
pushf
add
or
mov
mov
xor
movsb
jecxz
rcrl
xor
shr
jo
jae
inc
add
jo
sti
pushf
xchg
mov
jecxz
aam
sbb
mov
jl
fnstsw
mov
movsl
les
fwait
cmp
mov
ret
cli
aad
push
pop
pop
test
add
in
xchg
xor
sub
aas
sub
and
fcoms
in
subb
imul
rorl
dec
and
or
in
sahf
and
sbb
mov
es
popf
ljmp
sbb
and
rcrb
nop
lock
inc
mov
hlt
or
sbb
fcompl
pushf
mov
out
xor
jle
cmp
fnstenv
mov
mov
icebp
xor
daa
aad
clc
data16
push
mov
bnd
and
ja
lock
xchg
sbb
stos
icebp
pop
dec
nop
adc
push
lods
into
jnp
negl
jno
daa
sbb
jbe
adc
leave
sbb
xor
fnstsw
pop
sbb
or
cmp
std
mov
or
les
lock
or
rclb
xor
fsub
sub
insb
mov
mov
xchg
push
loopne
lea
mul
add
imul
inc
call
cmp
mov
mov
push
popl
shlb
push
dec
lods
adc
dec
es
daa
xor
into
jb
lret
lea
ror
in
pop
fwait
imul
pop
fdivl
outsl
rcr
inc
sub
dec
gs
xor
insb
ss
xchg
push
adc
rcrl
inc
jns
push
in
rolb
les
pop
cwtl
mov
sbb
pushl
and
ret
out
fildl
pop
pop
jno
cmp
gs
sbb
repnz
cltd
lods
xchg
outsl
lcall
int3
loop
loop
push
js
mov
das
insl
jbe
push
cmp
mov
push
pushf
rcl
xchg
rcll
scas
mov
fisubrl
pop
incl
stos
xor
sti
mov
dec
dec
xor
mov
idiv
dec
add
fsubl
pop
das
sbb
fcoms
push
mov
arpl
pop
pop
or
push
jmp
or
pushf
xchg
std
xchg
cmpsl
xchg
jle
xorb
enter
sbb
addl
adc
aad
insl
popf
imull
inc
mov
call
xchg
cmpsb
sub
inc
cli
push
fidivrs
jl
inc
call
movsb
xlat
pushf
imul
sbbb
and
jb
leave
sub
lcall
scas
mov
push
add
sbb
loop
xchg
sub
sub
test
popf
mov
mov
mov
mov
push
ja
scas
sbb
int3
popf
lahf
cmpsb
push
nop
mov
xchg
cli
mov
mov
mov
lock
xor
xor
aas
push
idivl
mov
cmp
and
bswap
add
push
lret
pop
mov
cmp
mov
mov
adc
cmpsb
lahf
stc
loope
movsl
push
fisttpll
cltd
xor
loopw
in
sbb
cmp
insl
jns
aas
jmp
xchg
xor
pop
movb
shlb
fwait
data16
jge
pop
xchg
pop
jnp
mov
cmp
push
jo
lock
fimuls
imul
dec
cwtl
jae
shll
inc
jmp
xor
cld
repnz
fwait
ret
adc
jl
push
push
rorb
ja
mov
pop
add
adcl
adc
pop
or
mov
loopne
lods
rolb
loope
aad
imul
and
call
mov
mov
mov
aam
fldl
sbb
stc
sbb
and
xchg
repnz
dec
mov
inc
pop
in
mov
cwtl
das
out
push
mov
test
mov
adc
sub
je
jmp
jge
leave
addr16
mov
and
adcl
mov
gs
fldl
mov
ja
mov
imul
xlat
lods
adc
or
cmp
stos
cmp
es
push
dec
xor
loop
xchg
mov
push
pop
aad
push
mov
and
int
mov
nop
dec
mov
cmpsl
cmp
jmp
pop
pop
dec
add
sub
mov
inc
aam
jmp
pop
cmc
pop
shll
and
jnp
icebp
xor
jns
inc
scas
cmp
push
jp
xor
faddp
icebp
scas
dec
xchg
fcompl
out
stos
ljmp
push
dec
cmpsl
js
dec
or
popf
inc
xchg
xchg
jmp
xor
jp
mov
mov
inc
push
cmp
mov
pop
in
and
sahf
jge
test
mov
pusha
or
cmp
out
xor
popa
inc
add
add
and
mov
xor
cmp
popf
das
pushl
sub
and
dec
nop
mov
or
inc
fwait
in
mov
leave
out
add
or
les
test
sti
mov
xchg
dec
lret
dec
bound
ja
adc
bound
mov
lock
sub
cmp
icebp
inc
aad
push
xor
in
and
stc
popf
mov
data16
hlt
push
push
mov
sbb
cmp
jae
adc
andb
add
fs
es
add
popl
adc
jns
cs
sar
in
mov
xchg
or
pop
sub
cld
lds
mov
and
je
mov
dec
jbe
mov
js
popf
ret
or
and
fisttpl
icebp
push
jge
dec
fwait
xor
cmc
xchg
sub
movsl
cwtl
mov
mov
out
arpl
nop
scas
fistps
into
mov
cmp
cmp
adc
jbe
imul
jb
cmp
stc
sub
mov
sahf
lahf
imul
mov
xor
mov
sub
out
test
inc
movsb
fsts
stos
dec
cmp
and
outsb
and
sbb
xchg
adc
mulb
add
addr16
push
jo
mov
mov
jo
cmp
pop
mov
sbb
dec
cwtl
push
fs
stos
push
xchg
push
sahf
mov
lods
xor
arpl
movsb
add
imul
test
pop
test
mov
pop
shll
jnp
push
gs
and
xor
popl
jle
xchg
mov
sub
or
mov
addr16
out
mov
add
sbb
loope
xlat
inc
add
adcl
jp
lock
sbb
pop
inc
sbb
mov
mov
push
jecxz
add
sbb
push
js
xchg
cli
test
jae,pt
ljmp
das
sbb
lret
cs
fdivl
stc
stos
adc
fwait
sbb
cmp
adc
add
out
cli
xchg
mov
fwait
loope
cmc
adc
out
sub
push
icebp
xchg
dec
pop
mov
sbb
jle
dec
loope
inc
lock
pop
scas
and
cmc
inc
test
mov
fs
lret
jmp
stc
pop
push
cltd
popa
les
arpl
jge
addr16
mov
insb
js
jbe
in
pop
addr16
sub
mulps
call
outsb
cmc
jecxz
push
lcall
mov
mov
pusha
mov
aas
push
push
rcr
nop
mov
sub
push
dec
push
lahf
out
repnz
sti
and
dec
mov
push
pusha
jge
fwait
cld
mov
adc
movsl
mov
sub
lahf
imul
mov
cli
mov
add
fldenv
pop
jmp
xor
push
or
andl
push
or
or
mov
sub
adcb
mov
fldenv
sahf
push
and
xorb
je
xchg
ss
inc
mov
xor
movl
or
lock
sahf
fs
and
add
fwait
pop
dec
pop
sub
sahf
stc
pop
cmp
sub
cmp
cmp
mov
xchg
jns
in
neg
iret
shlb
mov
inc
jmp
nop
jne
addr16
inc
hlt
and
cmc
push
jl
push
cmp
cwtl
enter
fildl
lods
inc
fwait
pusha
rcrb
insl
fwait
push
inc
adc
inc
mov
cmp
stc
xor
xorl
push
je
adc
jle
cmp
repnz
ret
popa
jecxz
fidivrs
or
and
lods
mov
mov
jmp
cmp
cmpsb
ret
add
test
sub
loopne
or
lods
stos
call
mov
int
stos
dec
push
add
fildl
sahf
sbb
fisttpl
out
and
jb
inc
out
mov
add
cmp
aad
std
jecxz
stc
inc
push
cwtl
scas
mov
inc
mov
xchg
lock
jo
add
mov
insl
adc
inc
mov
sarl
scas
cmpsl
mov
fs
pop
test
es
clc
clc
jle
jmp
jbe
mov
sbb
stos
test
xchg
add
jno
jo
ret
data16
mov
imul
jl
adc
inc
and
les
adc
xchg
mov
dec
fmulp
dec
outsl
test
cmpsb
xor
push
and
xchg
andb
dec
jns
adc
sarb
jmp
addr16
test
and
xor
mov
movsl
pushf
xchg
aam
sbb
out
xchg
pusha
dec
nop
icebp
out
insl
cs
xor
roll
mov
or
sar
jl
aam
xor
mov
std
dec
jp
mov
dec
inc
lds
push
sarl
jno
mov
push
push
jno
push
xor
lock
enter
inc
in
test
mov
cmp
mov
leave
cmpsl
mov
jno
jmp
popf
dec
stc
jnp
hlt
push
sarl
cwtl
push
out
mov
mov
inc
jno
push
xlat
push
popf
ja
hlt
jno
push
dec
lcall
mov
sbb
ret
xchg
out
xor
cmp
push
mov
adc
mov
sub
cmpsl
xchg
int3
test
fwait
aad
xchg
mov
xchg
add
mov
xor
push
jmp
push
or
push
xor
cwtl
lock
sarb
test
das
pop
dec
inc
shll
cmp
test
push
adc
push
daa
push
in
add
push
pop
dec
lods
adc
push
aas
pop
pop
mov
rclb
push
cmp
test
and
jl
scas
out
jno
mov
push
push
sar
scas
scas
addr16
and
pushf
inc
xchg
push
mov
ljmp
lahf
push
jo
mov
adc
mov
pop
pop
push
shlb
push
sbb
push
mov
mov
inc
sub
or
mov
mov
jecxz
dec
neg
out
repnz
mov
jns
jmp
dec
mov
pusha
aaa
jmp
jb
fdivs
add
mov
mov
push
decl
pop
xor
ret
imul
xlat
jo
mov
sbbl
inc
stc
adc
inc
loopne
stc
dec
aam
lds
inc
clc
and
push
in
xor
jg
xlat
shll
fldcw
ds
cmp
lods
jb
inc
sbb
scas
ret
inc
fbld
fbld
subb
gs
out
xor
arpl
mulb
push
movsl
cwtl
loop
es
in
test
jae
sub
mov
jmp
dec
fwait
mov
rcll
fstl
icebp
ficoms
lods
mov
addb
sbb
js
xor
mov
hlt
clc
lods
jnp
inc
lds
cmp
push
jp
or
push
aaa
stc
push
push
cmpsl
push
int
cli
outsl
adc
shlb
in
xlat
jbe
pushf
sub
ja
cld
dec
jae
add
movsb
mov
cmp
dec
dec
dec
dec
xchg
int3
xor
xor
subb
pop
jl
jnp
popf
mov
mov
outsl
clc
jle
mov
out
movsl
popa
bound
fcomi
cmp
mov
jbe
and
add
adc
xchg
cmpsl
ljmp
cmpsl
stc
pop
mov
ds
sarb
jge
adc
jno
sti
shll
mov
xchg
or
pop
lcall
jmp
dec
in
decl
cmp
ja
and
add
sbb
bnd
fbstp
or
jno
xlat
jp
and
pop
outsl
fs
sbb
addl
js
cmp
test
iret
inc
rep
ljmp
sub
jmp
ja
bsr
and
mov
jge
inc
scas
dec
fcompl
jge
test
pusha
mov
mov
push
jns
nopl
add
mov
imul
iret
dec
pop
scas
cmp
insl
push
idivl
cs
adc
sub
xchg
insb
pop
in
mov
mov
jo
cmpsb
rcll
push
fiaddl
cmp
out
jle
inc
aad
xchg
lea
subb
push
jecxz
sahf
push
dec
test
jo
mov
lock
jae
loop
or
in
punpcklbw
push
lock
jecxz
daa
cltd
jb
cmc
sub
push
lds
ss
xchg
stos
notl
push
xchg
sar
and
push
push
cmp
pop
push
mov
test
pushf
push
in
dec
pop
cmp
sbb
shlb
rolb
pushf
out
inc
aam
bound
mov
sbb
ficompl
jb
jae
lods
outsl
xchg
pop
add
cmpb
int
sbb
push
or
cwtl
out
test
inc
data16
inc
movsl
inc
xor
jb
icebp
inc
addr16
inc
dec
js
test
adc
ror
lret
sbb
stos
inc
mov
in
mov
jg
push
cmc
sub
sbb
mov
add
mov
xchg
inc
cltd
ja,pn
mov
sbb
jno
sbb
or
or
fiaddl
pop
and
and
aas
into
mov
mov
xor
dec
mov
adc
iret
ljmp
out
xchg
int3
cmp
fwait
enter
pop
xor
iret
je
mov
cmp
cld
movsb
popf
xor
roll
xchg
shlb
push
mov
jle
dec
jecxz
jne
shrb
adc
mov
cs
or
mov
pop
mov
dec
das
jb
xor
cmc
pop
std
sbbb
out
fcoml
aaa
fdivrp
push
imul
push
cwtl
push
jecxz
mov
dec
out
fnstcw
sbb
bound
stos
or
mov
stc
movsb
xor
pop
scas
add
lret
ret
or
pushf
jns
push
aas
clc
outsl
movsl
xchg
int3
dec
int
jbe
ja
mov
in
es
xchg
clc
je
lahf
leave
mov
sub
inc
pop
cmp
pop
add
das
out
aas
mov
mov
daa
loopne
inc
cmp
scas
xor
mov
mov
std
shl
jno
mov
mov
xor
jns
fidivrl
lret
cmp
lret
jecxz
mov
push
inc
jae
fadd
push
pop
mov
inc
mov
mov
nop
daa
sub
aaa
xchg
xchg
mov
adcb
test
das
cmp
lods
ds
adc
cltd
test
xchg
cltd
mov
popa
sub
lahf
dec
jecxz
cmp
ss
sbb
in
adc
mov
pushf
imul
cmp
gs
idiv
adc
dec
scas
cmpsb
mov
push
cs
je
out
roll
mov
xor
pop
push
femms
popa
mov
pop
out
stc
test
sub
xor
out
in
arpl
push
inc
mov
insl
push
lods
mov
outsl
adc
mov
pop
repz
pop
pop
insb
push
jae
xor
icebp
push
dec
pop
out
mov
ret
or
jmp
adc
das
jnp
imul
ret
mov
aam
sub
in
jge
pop
outsl
insl
pop
shlb
dec
dec
push
inc
scas
sbb
lock
pusha
rorb
pop
std
enter
ret
jmp
jp
sti
ja
jae
sarl
add
cmp
sbb
fistps
or
xor
fbstp
in
mov
mov
and
cmc
sub
movsb
fisttps
in
sbb
popa
pop
dec
jp
in
daa
loopne
cmp
std
add
sti
into
push
js
sbb
push
jle
mov
cmp
push
cs
in
je
jg
icebp
lock
mov
test
in
inc
mov
push
outsb
das
pop
mov
addl
cmc
loop
push
pop
dec
enter
or
xor
js
inc
jg
rcr
or
sti
andb
add
ss
shl
inc
fisttpll
lret
bound
fbld
add
mov
push
inc
aaa
iret
sub
out
loopne
cli
cltd
jp
sub
jmp
mov
shl
outsb
pop
movsb
mov
push
lea
sub
cmpsl
out
gs
or
ljmp
mov
fnstsw
int3
xor
loop
shrb
mov
sub
jl
jmp
and
cld
js
dec
mov
inc
ret
push
jmp
cmp
mov
mov
mov
cli
aas
aaa
out
mov
shrb
ss
add
ljmp
or
jmp
adc
rcr
pop
xchg
jno
les
out
xor
stos
imul
cmc
push
or
dec
out
gs
mov
not
adc
or
jne
call
sbb
add
jns
xor
mov
or
sbb
hlt
push
test
sub
jecxz
xchg
int
aaa
cmp
pusha
cmc
les
cli
push
push
cmp
scas
xchg
clc
jo
xchg
shrl
pop
lcall
push
xlat
sub
rcrl
cmc
sti
push
fdiv
fsubrs
push
aam
jbe
inc
gs
bound
ret
mov
sbb
in
movsl
insl
adc
add
sub
hlt
push
mov
mov
insl
test
test
scas
neg
add
loop
lahf
pop
nop
push
pushf
imul
mov
jp
add
lods
test
cmp
fcom
loope
mov
out
xchg
dec
add
xor
icebp
mov
cmp
shlb
inc
ret
aad
push
sahf
inc
dec
je
test
pop
test
mov
push
add
xchg
in
sahf
outsl
ja
jecxz
int3
jle
sub
sarl
mov
xchg
jmp
xor
or
adc
mov
pop
lods
xchg
pop
jp
cmp
and
filds
jmp
clc
push
add
and
inc
inc
int
js
fcmovnu
dec
sub
popa
pop
add
out
outsl
jl
mov
and
imul
aaa
jl
pusha
lret
shr
mov
pop
and
and
loopne
push
cltd
or
jp
xchg
and
adc
dec
mov
sub
cmp
popf
dec
mov
xchg
push
and
add
sbb
pop
clc
push
imul
out
jecxz
mov
pop
and
xor
cmpsb
add
clc
adc
das
and
inc
mov
ljmp
push
cld
out
lods
cmp
sahf
add
xor
enter
push
sub
pop
sbb
cwtl
stos
jns
xor
sub
mov
cmpsl
mov
push
or
shll
push
xchg
mov
iret
rorb
rclb
clc
jbe
ret
push
and
mov
jne
and
pop
mov
sbb
mov
les
xor
out
xlat
cli
mov
cmp
mov
cltd
sub
test
push
test
adc
pop
cmpsl
cli
sbbb
shl
out
mov
aas
pop
sbb
daa
in
das
fucomip
sbb
incl
icebp
nop
std
pop
xor
mov
push
push
pop
sbb
nop
inc
cli
lock
rolb
notb
pop
xchg
mov
and
leave
cltd
adc
mov
or
int3
add
mov
push
jbe
push
dec
mov
sbb
sbb
fsubrs
nop
testl
cmp
xor
scas
mov
cli
cmpsb
lcall
sbb
fldl
dec
js
fs
inc
mov
dec
xor
je
adc
dec
pusha
jnp
dec
jne
out
mov
fdivl
call
test
std
imul
push
lcall
sub
cmp
addb
pop
mov
xchg
in
push
xor
jb
xchg
sbb
test
xor
sub
jle
insl
xchg
inc
xor
jp
lret
cmp
arpl
imul
push
ret
popf
push
or
mov
scas
imul
mov
lods
mov
dec
cmpsl
inc
jb
aaa
and
pop
mov
jmp
popa
popf
add
lods
jl
leave
hlt
lods
sub
xchg
mov
xor
rcrl
jne
inc
push
dec
test
repnz
insb
or
xchg
inc
pop
lret
scas
dec
ss
xor
lcall
test
jo
mov
pop
xchg
mov
fs
pop
pop
push
mov
push
js
stos
imul
xlat
cmpsb
xor
push
sub
jp
jle
mov
jbe
jnp
andb
xchg
into
out
dec
or
adc
or
rolb
aad
shl
cmp
stc
js
je
or
pop
push
mov
in
test
mov
leave
les
rolb
add
sub
orl
orl
jns
cmpsb
ret
adc
lods
push
gs
hlt
decl
stos
jb
repnz
shrl
cmp
shlb
mov
add
pusha
mov
dec
js
mov
jb
jecxz
mov
jns
xor
mov
mov
cmp
or
rolb
das
pop
pop
sbb
aam
insb
fcmovnbe
je
stc
mov
pop
add
jns
add
fistpll
mov
arpl
xlat
inc
dec
mov
aas
cmpsb
data16
push
inc
xchg
addr16
inc
cmpsl
mov
ljmp
jns
sbb
or
das
pop
sbb
ret
push
cmc
push
jne
xchg
pop
xchg
aad
stos
mov
leave
bound
inc
pop
jecxz
adc
adc
ljmp
popa
testl
jl
sub
lret
or
stos
jmp
xchg
mulb
cli
clc
mov
push
fs
out
jnp
testl
push
mov
lock
js
mov
xor
nop
test
adc
mov
adc
cmp
xchg
push
test
and
xlat
rcr
lret
pop
aaa
aad
pop
sbb
fidivrs
movl
in
addl
cvtps2pi
jb
mov
xchg
add
push
jnp
rorl
pop
loop
mov
dec
lcall
mov
sub
pushf
add
push
std
sbb
add
lret
shll
mov
cld
repz
mov
jnp
loopne
out
sub
jb
sub
sbb
pop
inc
lahf
loop
nop
mov
ds
mov
jle
and
iret
imul
inc
dec
xlat
stos
scas
mov
inc
lds
mov
sbb
sub
inc
scas
std
ret
sub
mov
inc
outsb
cmp
aad
ds
or
mov
push
je
mov
push
leave
cmpb
pop
jnp
and
incb
out
cmpsl
enter
fadds
leave
cmp
mov
lahf
test
scas
and
sub
mov
arpl
mov
and
lahf
xlat
push
add
cmp
sbb
subb
je
lea
in
out
bound
cmp
cmpsl
sbb
mov
outsb
pusha
inc
cmp
pop
pop
mov
or
jb
xor
sub
arpl
sub
and
cld
add
ss
dec
or
sub
clc
rcrb
out
inc
in
ficoml
sti
cs
jg
ret
jns
shrl
sub
popa
mov
imul
arpl
inc
push
jge
jmp
test
xchg
ret
jmp
call
mov
in
pop
add
mov
xchg
pushf
cmc
mov
mov
stc
jg
aaa
cli
push
push
mov
cmpsb
mov
sub
dec
push
jmp
lcall
fsubrl
fcomps
imul
inc
mov
adc
enter
insl
mov
lods
stc
shl
mov
scas
lahf
fdivs
xchg
cmp
jbe
add
sysexit
lret
pop
mov
jp
adc
sbb
cmpsl
in
cwtl
in
adc
mov
shll
or
scas
hlt
pop
rorb
fmuls
dec
lahf
jbe
in
or
bound
cmp
push
rorb
and
nop
sub
aas
push
sub
add
mov
bound
out
cltd
pop
dec
xor
mov
and
cld
sub
mov
outsb
leave
js
movsl
out
sbb
xlat
stc
mov
adcl
popf
pop
sbb
push
lods
neg
inc
popa
in
popf
lret
cld
xchg
inc
js
popf
pop
mov
ficompl
inc
addb
shr
dec
jp
loopne
xchg
xchg
sti
xor
jmp
popa
xchg
daa
stos
test
lcall
add
xor
jne
pop
jmp
adc
test
ficoml
mov
pop
mov
jecxz
rcrb
and
and
mov
pop
ja
arpl
sarb
imul
mov
pop
jp
mov
rcll
lods
popa
mov
orb
arpl
lahf
test
cmpsl
sub
mov
inc
inc
cmp
clc
cmp
mov
mov
or
popa
loopne
mov
cs
mov
mov
pop
mov
push
out
rol
and
sub
test
into
jmp
cwtl
xor
out
fbld
movsl
add
or
shrl
das
movsb
jp
mov
add
bound
ljmp
bound
cmovae
mov
ret
mov
and
xchg
adc
lock
out
mov
adc
ror
xor
cmc
enter
xchg
cmp
or
insb
sub
aas
add
dec
and
test
je
mov
xchg
mov
mov
ds
jne
dec
mov
test
pushf
es
lock
ds
push
fwait
sub
cmp
nop
mulb
jae
cmpsl
pop
addr16
jmp
idivb
xchg
shrb
push
dec
fs
imul
mov
cmp
sbb
lcall
and
stos
fwait
jbe
leave
push
pop
movsl
roll
inc
daa
out
dec
push
add
push
cmp
push
xchg
pop
cmpb
insb
sub
fstpt
stos
mov
clc
int
push
or
and
cmp
and
mov
aaa
jne
jbe
int
std
push
pop
ret
jmp
push
out
or
scas
mov
enter
repnz
fldl
xchg
mov
jl
lcall
stc
pop
imul
les
sub
ret
aas
mov
or
popf
and
sti
in
lret
push
rol
dec
stos
cmp
jecxz
pop
inc
je
add
cmp
testb
xorb
push
decb
cmp
sbb
xchg
fisubl
inc
ds
in
xchg
cmp
dec
sub
xchg
out
movsl
popa
clc
adc
imul
push
pop
mov
rep
push
aaa
out
cmpsb
adc
sbb
inc
divb
jnp
rcrb
lock
ss
lods
inc
loopne
int
inc
mov
imul
cltd
repz
sub
idivl
ljmp
mov
mov
jecxz
shlb
pop
and
mov
popa
xor
lret
mov
mov
sbb
sub
enter
int
dec
cmpsb
xchg
data16
inc
and
sub
fcom
pop
lret
inc
jnp
sbb
mov
sti
cmp
sbbl
jge
mov
divl
sub
mov
jp
subb
jge
mov
xor
cs
xor
dec
test
and
aaa
mov
fadd
lea
jle
mov
and
mov
push
fmuls
mov
ret
addl
shrl
lret
sarb
int3
arpl
in
mov
ret
add
sbb
pop
int
mov
jmp
ror
sbb
xchg
dec
push
movsl
outsl
ret
jbe
add
xor
aas
call
and
cld
sub
dec
out
xchg
enter
and
or
xor
inc
jp
inc
jl
or
ja
push
test
adc
push
stos
add
xor
or
mov
test
sbbl
lret
lock
pop
adc
jmp
sub
mov
mov
addr16
and
and
push
or
mov
ds
cmpsb
filds
cmp
fcmovnbe
out
shl
arpl
or
rol
and
int3
inc
scas
lcall
lods
xchg
mov
jmp
xchg
rcl
sbb
or
adc
call
fildll
pop
imul
push
int
cmp
lea
out
arpl
lds
and
mul
sbb
pop
xchg
and
dec
or
popa
mov
fisttps
das
ss
dec
loope
and
aad
sub
push
adc
pushf
sbb
addr16
cli
loopne
xor
fimull
fs
push
cmp
push
mov
inc
inc
call
rorl
rcr
fildll
jae
cmc
mov
sub
pop
dec
adc
mov
inc
mov
sub
ror
xorb
data16
add
push
cli
adc
pop
cld
cmp
int3
or
xchg
fcomps
sub
jns
xchg
scas
ja
xchg
xchg
xor
arpl
cltd
test
jo
lahf
mov
lods
push
imul
pop
imul
xchg
xorl
inc
mov
pop
xchg
andb
push
popa
aas
lahf
shrb
addr16
pushf
rcl
jo
cmp
fs
pop
sub
loop
mov
lds
jecxz
fnstenv
stos
cmp
enter
and
gs
or
jp
adc
lret
rcrb
or
adc
jmp
push
jge
pop
fimuls
outsb
cmpl
mov
fs
jo
inc
adc
push
push
mov
lock
adc
andb
pop
testl
lahf
mov
inc
push
dec
lea
test
mov
adc
pop
stos
push
andb
or
loop
filds
pop
inc
mov
aam
add
dec
sbb
rorl
mov
in
xor
repnz
sub
lahf
or
rolb
cs
push
cmp
mov
xlat
bswap
in
sub
mov
mov
data16
dec
sub
pop
or
xchg
jo
add
fwait
in
cmp
imul
xor
outsb
xor
rorb
sub
dec
pop
jno
shll
pop
dec
nop
xor
cmp
mov
movsl
xchg
mov
sbb
xor
lds
adc
xchg
andb
out
stc
mov
cmc
aad
int3
inc
les
out
jp
sbb
lods
jmp
mov
add
add
lret
inc
dec
lcall
pop
xlat
or
sbbl
movsb
iret
stos
mov
sti
mov
lock
clc
lret
add
orl
ficoml
sub
jb
pushf
bound
pop
mov
aas
cltd
pop
xchg
sub
mov
dec
jbe
rolb
scas
fistl
mov
or
cmp
sbb
mov
hlt
and
enter
daa
test
outsb
aaa
jle
fsts
icebp
xor
rol
stos
subl
push
std
cmc
pop
repz
popf
insb
sub
dec
add
adc
mov
cli
push
xchg
lret
loop
in
mov
loopne
loopne
mov
fwait
cltd
addr16
repz
or
xor
jmp
in
ds
pusha
adc
test
jo
xor
movsb
loope
pop
push
mov
or
loopne
or
sahf
mov
xor
fists
or
jl
out
insl
jae
mov
jmp
daa
adc
fsubs
sub
fistl
pcmpeqb
test
andb
dec
ret
icebp
test
sbb
mov
jne
fwait
mov
leave
repnz
leave
mov
push
xchg
jo
mov
xchg
cmpsl
pop
or
or
scas
movsb
xchg
pop
std
sub
jp
push
sbb
mov
xchg
stos
lods
push
and
js
jo
jle
int3
test
dec
mov
dec
adc
stos
xor
inc
ja
adc
ds
inc
test
ret
cld
cmpsl
sub
mov
call
nop
push
push
sub
mov
roll
gs
leave
clc
test
setle
cmp
push
adc
mov
in
leave
je
mov
sbb
push
mov
test
pop
xchg
add
cwtl
adc
ffreep
call
push
cmp
gs
sbbb
mov
movl
cld
mov
notb
test
cli
outsb
insl
sub
andb
pop
lods
decb
decb
xor
push
sub
int3
fistpll
pop
adc
fisttpl
outsl
data16
jno
dec
inc
fmul
jne
sub
js
ljmp
cmpsl
jnp
imul
gs
fstl
movsb
mov
or
dec
insl
fsubs
scas
mov
jmp
imul
jecxz
xor
scas
push
aas
lahf
sahf
in
jae
and
mov
pop
xor
adc
dec
shrl
mov
push
adc
stos
aaa
cmp
pushl
mov
inc
mov
repnz
pop
pop
mov
and
pop
add
xchg
or
popa
mov
inc
sbb
mov
push
daa
xchg
and
popf
daa
xlat
jo
sub
or
and
dec
xor
aas
pop
push
sbbl
ffreep
push
test
popf
push
mov
xor
mov
dec
out
or
or
inc
cwtl
mov
pop
fldt
mov
movsl
in
sub
dec
jge
stos
mov
arpl
mov
sub
jle
mov
sahf
jo
scas
pusha
mov
stos
adc
jl
sub
sti
lcall
adc
pop
dec
cli
fidivs
push
shr
subl
xchg
cmp
andb
mov
jns
inc
adc
sbb
jns
inc
popf
inc
in
fld
rolb
mov
pusha
jecxz
pusha
iret
and
fimuls
cld
out
leave
bound
test
das
dec
mov
push
or
nop
ficoms
dec
xchg
push
sbb
icebp
or
dec
and
out
adc
push
sbb
dec
add
data16
add
mov
loopne
testb
iret
inc
xchg
int3
inc
leave
jns
pop
mov
add
xchg
in
js
mov
mov
jg
dec
leave
sub
xor
push
mov
hlt
jge
jae
stos
and
xlat
inc
xchg
orl
and
cmp
xor
xorl
out
or
sub
testl
xchg
sbbb
push
mov
data16
pop
fsts
aam
idivb
mov
out
in
or
cmpsl
mov
add
adc
jns
and
pusha
pop
jo
mov
es
push
or
aam
push
icebp
data16
test
or
adc
inc
test
inc
cmc
fcmovnb
and
xchg
pop
cmp
loop
nop
and
lods
mov
lcall
ljmp
mov
out
fnsave
adc
mov
lods
lcall
popf
and
jae
insb
and
jl
xor
js
leave
inc
inc
testb
xchg
lcall
iret
jne
add
jne
adc
ja
insb
in
and
mov
popf
adc
pop
cmc
test
ret
fidivrs
pop
mov
rep
loop
adc
sbb
int
inc
std
aam
xor
and
outsl
hlt
dec
nop
jg
jge
xchg
inc
arpl
sbb
mov
addr16
movsb
fwait
cs
or
data16
inc
push
sbb
ret
bound
enter
cs
sbb
xlat
cmc
jle
jl
mov
js
ss
insl
xchg
out
and
movl
inc
lret
popa
push
out
or
mov
add
inc
cmp
cltd
je
aaa
or
lock
and
xchg
adc
decl
mov
movsl
lods
mov
dec
and
jge
pop
bound
xlat
mov
push
aaa
push
jbe
scas
aam
jl
in
mov
xchg
push
inc
xlat
mov
xchg
cld
nop
aaa
in
sbb
add
iret
negl
jno
push
mov
jae
ja
gs
into
xor
xchg
mov
loope
sub
lahf
cmpsb
lret
pop
mov
or
mov
xchg
arpl
xchg
mov
pop
add
dec
cmp
call
fiaddl
xchg
sbb
pop
idiv
icebp
sbb
mov
sbb
cs
jl
jge
mov
sub
fwait
xchg
mov
dec
cmp
mov
adc
xchg
and
cmp
js
adc
pop
push
not
sbb
aaa
or
lcall
insb
outsb
test
scas
je
xor
aaa
imul
xchg
test
add
aaa
mov
test
in
subb
mull
sbb
mov
aaa
mov
adc
loopne
inc
mov
pop
adc
lds
jae
and
xchg
paddw
movsl
mov
jns
jle
je
sub
and
mov
inc
in
js
inc
jg
daa
mov
in
arpl
pop
mov
xchg
shl
loopne
mov
mov
sub
test
xor
les
add
stos
lods
inc
aad
sbb
clc
test
fwait
inc
cmp
out
in
xchg
loopne
mov
dec
inc
js
push
fnstenv
cmp
sub
dec
fdiv
jge
inc
xchg
scas
jg
sub
je
adc
lret
stos
popf
jp
xor
mov
outsb
cmp
lret
cmc
xor
push
cmp
iret
fidivl
mov
push
xor
xor
rolb
and
and
int3
mov
adc
icebp
aad
push
loop
aas
loope
xlat
add
inc
cli
xor
aas
and
push
add
ljmp
jg
sarl
arpl
movsl
jbe
cmpsb
lcall
mov
stc
aas
add
rclb
lea
dec
jle
inc
xor
inc
sahf
ds
dec
shrb
push
inc
in
in
mov
push
outsl
fidivrl
insb
push
leave
icebp
push
test
pushf
lcall
lock
rcll
inc
lret
fnstcw
xchg
cmp
or
int
fdivr
xchg
pop
push
movsl
push
lock
lock
or
lcall
and
mov
addr16
jge
test
sub
or
aad
xor
pop
mov
insb
loope
negl
mov
jbe
out
nop
mov
push
lea
addr16
and
int3
dec
lods
dec
lods
lds
ss
mov
lret
pusha
ret
jns
inc
and
add
lds
sub
out
inc
stc
inc
push
xchg
add
push
es
sbb
dec
subl
loope
xchg
xorl
pop
pop
dec
jb
mov
mov
cmpsb
outsb
dec
into
sarb
sbb
lret
rorl
adc
pop
test
nop
enter
dec
push
add
mov
jae
out
movsb
dec
outsb
aas
lret
repnz
adc
rcll
jno
enter
int3
add
into
imul
mov
cmpsl
pop
cmp
push
sbb
jo
test
clc
ds
sbb
gs
mov
daa
je
sbb
sub
sbbb
int3
dec
push
mov
xchg
ficomps
ljmp
push
outsb
mov
cmp
add
test
movsl
in
sahf
cmp
out
push
mov
leave
mov
dec
xor
hlt
ja
jnp
or
inc
sbbl
mov
push
ret
xor
leave
jno
sbb
pop
dec
shlb
pop
leave
hlt
aad
je
jg
push
pop
mov
enter
ss
stos
int
or
push
in
imul
scas
mov
lods
imul
and
xchg
ret
loop
sub
jp
aam
aaa
sub
jne
pop
push
jae
jmp
dec
jno
int
or
scas
pop
addr16
xchg
mov
add
xor
in
push
loope
mov
add
mov
mov
mov
in
rep
xchg
add
and
ss
dec
shrb
sbb
sub
in
bound
sti
cltd
xchg
add
fsubs
push
cmp
in
adc
cmp
stos
xchg
xor
mov
dec
clc
hlt
sbb
out
pushf
shlb
in
stos
ret
sahf
add
adc
or
loopne
std
out
mov
roll
cmp
fldcw
jle
push
rolb
and
sbb
cli
orl
clc
adc
pop
mov
lock
sbb
and
movsb
rcrb
mov
xor
subl
call
cmp
lret
jne
sti
sti
imul
pop
jo
testb
lret
loopne
mov
xchg
sti
cmp
std
mov
mov
xor
test
jbe
pusha
mov
insl
add
dec
imul
lock
pop
xor
mov
jnp
imul
and
inc
shrb
mov
add
fucomp
mov
mov
push
dec
in
jo
lds
fwait
add
pop
sti
lret
adc
dec
dec
test
cmp
loop
popa
mov
lods
xor
lret
cmc
xchg
je
sbb
testb
push
bound
jne
pop
stos
lea
out
out
loope
movsb
cmp
mov
fdivrs
mov
push
cmpsb
ss
in
pusha
outsb
andl
xor
cli
or
clc
sub
aad
lret
loope
inc
fcomi
pushl
mov
lcall
scas
popf
je
add
xchg
sahf
movsb
int3
popf
sub
dec
add
push
cs
pusha
mov
or
cs
add
mov
adc
cli
out
into
sub
lret
dec
imul
sub
lahf
ljmp
cs
shlb
dec
aaa
sub
test
cs
jb
in
sbb
cs
cmpw
fwait
dec
jecxz
cmp
stc
mov
xchg
push
mov
cs
in
add
pop
xchg
and
xchg
sbb
cmpsb
imul
push
in
popa
aad
xchg
and
pop
hlt
mov
fsubrl
mov
cmp
jp
arpl
pusha
shl
cli
rcll
add
insb
call
arpl
jg
mov
hlt
rcrl
sub
mov
add
push
shlb
adc
pop
xor
outsl
or
xchg
loope
es
mov
dec
int3
shrb
jle
lcall
xchg
pop
xor
aas
stos
sar
jg
mov
ret
mov
daa
mov
mov
sbb
stos
ret
cmp
out
in
sbb
aas
les
imul
mov
mov
ret
sub
inc
xchg
inc
mulb
stos
arpl
xchg
pop
jne
cmc
sbb
ja
sbb
xchg
lds
push
mov
push
pop
test
call
movsb
stc
cmp
push
ret
fwait
mov
inc
sub
mov
jns
jb
mov
call
mov
dec
pop
jae
cmp
outsb
mov
jmp
mov
hlt
fcmovbe
js
out
sbb
icebp
movsb
fwait
pop
jae
adc
rorb
inc
movsl
cmp
hlt
or
outsl
xor
sbb
stos
inc
pop
test
mov
jg
hlt
mov
je
sti
xchg
out
popf
loopne
pop
cmp
mov
aaa
push
scas
fidivs
daa
sub
xor
cmp
scas
rorb
adc
repz
inc
out
xlat
stc
lret
adc
and
mov
dec
test
jb
push
ficoms
test
and
mov
inc
in
int3
pop
and
leave
xor
xchg
cmpsb
or
xchg
sub
mov
repnz
jnp
cmp
mov
pop
shlb
jb
adc
xchg
fwait
rol
jp
das
xlat
lahf
leave
pop
sub
mov
and
add
mov
inc
outsl
lea
or
jo
int
fdivrs
push
dec
out
sub
hlt
into
mov
cmp
aad
push
sbb
jns
mov
jb
fbstp
mov
repnz
popa
pushf
pop
mov
fs
nop
jmp
daa
cwtl
jbe
push
xchg
sub
xchg
pop
bound
cmp
faddl
imul
daa
sbb
rorb
xchg
sarb
jl
loop
add
sub
std
mov
xchg
xchg
and
mov
cmp
ljmp
cmp
mov
push
ja
pusha
push
mov
iret
mov
mov
sahf
or
cld
in
dec
and
add
push
cltd
push
dec
mov
jo
fwait
mov
add
popf
mov
push
pop
and
jb
or
sbb
insb
jg
add
daa
dec
mov
xor
jmp
pusha
pop
jno
or
dec
cmc
pop
lds
jb
mov
mov
pop
adc
into
fcomps
push
sub
jns
push
xchg
sti
mov
fildl
xor
repz
xchg
xchg
sbb
cmp
xchg
daa
jecxz
add
icebp
pop
ds
push
dec
inc
sub
inc
mov
jle
inc
adc
js
aaa
out
pop
jp
lods
repz
adc
in
ficoms
es
and
ret
adc
incb
sub
dec
inc
repnz
fnsave
jne
jle
cmpsb
push
imul
clc
js
mov
push
nop
repnz
mov
jmp
jmp
mov
nop
lcall
mov
insb
fidivrs
add
inc
pop
lds
cvtps2pi
fldcw
mov
xchg
lret
stc
clc
mov
and
adc
pop
testl
jne
fadd
dec
das
ja
xchg
sub
aam
xchg
in
lea
jbe
je
mov
mov
test
fidivrl
std
dec
mov
dec
dec
sbb
sub
lock
xor
adcb
popf
loope
scas
nop
pop
mov
daa
mov
movsl
sbb
sub
jmp
mov
xorl
mov
cli
and
jmp
out
stos
or
or
orb
push
xchg
push
mov
adc
push
bound
xchg
jne
or
pop
jae
add
push
adc
sub
cmp
lods
negl
dec
xor
xchg
inc
and
sahf
notl
mov
out
push
inc
dec
cmc
std
push
add
xchg
inc
fisubs
stos
lods
cmp
xchg
lods
shl
mov
xchg
mov
sub
repnz
mov
jne
into
repz
cmc
rol
mov
add
adc
int
lds
test
xor
adc
inc
xor
push
aaa
stos
int
pop
xor
out
push
scas
test
sub
mov
and
jb
mov
cwtl
mov
cmp
aad
dec
mov
push
cmovge
sbb
ds
jo
test
fdivrl
or
fsubs
push
es
sti
addl
xchg
jno
fsubl
cli
jmp
mov
fidivrl
sahf
fisubl
sti
push
push
fstl
test
xor
int3
sbb
push
pop
add
aad
incb
push
jno
or
pop
xchg
sbb
xchg
mov
mov
cmp
cmp
test
xor
sar
je
lds
mov
jnp
in
movsl
cmp
or
jb
mov
test
in
xchg
in
adc
inc
stos
jle
ret
mov
mov
notl
fnstenv
push
and
mov
aad
xor
cltd
cmpsl
xchg
gs
pop
mov
and
or
push
adc
incb
dec
js
pop
fwait
push
xlat
push
int
movsl
cmp
into
cmpsb
arpl
lret
push
sbb
mov
test
loope
inc
clc
pushf
mov
mov
out
fsub
fbstp
pop
test
aas
xor
fcoml
jae
mov
inc
movsb
adc
or
inc
aaa
aas
enter
jecxz
dec
add
sbb
popa
ljmp
sub
lds
leave
push
std
jbe
lcall
int3
adc
or
mov
xor
shll
rcrl
into
pop
inc
das
mov
pop
xlat
or
inc
add
fbld
sbb
mov
fisubs
dec
cmp
xor
mov
dec
popf
mov
cltd
or
mov
lahf
loop
or
cmp
mov
je
xchg
fistpll
sbb
inc
jmp
push
push
jb
cmp
mov
xchg
or
jmp
rol
cwtl
mov
pop
fsubs
fldl
mov
sbb
push
add
sub
in
mov
or
jmp
sub
clc
sbb
movsl
adc
add
mov
add
je
popa
mov
ret
xchg
jge
mov
dec
das
mov
lods
popf
mov
dec
rcrb
cwtl
inc
shr
push
mov
mov
das
push
or
or
in
and
xchg
mov
imul
pop
pop
das
adc
leave
sahf
mov
jnp
xor
out
jno
jl
and
cmp
outsl
push
out
sub
dec
jo
ret
adc
lock
outsb
test
shrl
cmp
ljmp
iret
inc
idiv
lea
out
cwtl
push
fcmove
add
cltd
cmp
jbe
mov
inc
mov
shll
or
mull
push
insb
or
stc
ret
bound
repnz
dec
out
mov
lcall
fstps
xchg
repnz
pop
in
pop
sub
mov
push
jle
pop
mov
cmp
sub
add
cmp
push
sub
ret
or
je
aad
stos
je
sbb
xchg
mov
mov
inc
clc
sbb
scas
divb
sub
ret
rcr
data16
sbb
jge
sbb
mov
push
fidivs
xor
pop
iret
das
cmp
arpl
fisubrs
cwtl
xchg
jmp
cwtl
pop
push
push
inc
in
sub
mov
push
or
cmp
push
xchg
cltd
jo
mov
jns
sbb
rorl
out
arpl
sub
sahf
sub
test
rorb
jl
data16
sub
ss
out
gs
lods
pop
cmpsb
pop
pop
fisubs
int3
repnz
out
fs
sub
ret
cmp
mov
push
push
lcall
int3
or
adc
repnz
mov
aas
aad
xor
scas
cmp
jge
mov
mov
pmullw
jp
mov
mov
int3
jp
cld
push
clc
sbb
div
fstcw
jmp
pop
imul
sbb
addr16
jmp
or
adc
imul
dec
pop
add
stos
scas
lock
xchg
or
jle
mov
test
mov
stc
cld
adc
and
xor
cmp
inc
pop
in
xchg
push
jbe
out
mov
bound
out
loopne
into
stos
mov
ret
stc
test
inc
sti
test
adc
repnz
fimuls
mov
mov
mov
push
push
inc
mov
inc
jecxz
pop
push
lret
jecxz
cwtl
mov
mov
mov
repz
je
jnp
lahf
pop
pop
push
sbb
jnp
push
push
outsb
mov
test
sub
or
in
out
and
js
xchg
cli
push
or
aad
lahf
shrl
loopne
mov
test
pop
ret
mov
mov
mov
sub
mov
mov
lods
or
das
paddb
add
icebp
imul
addb
addr16
add
ljmp
xor
inc
push
movsl
rorb
lock
jno
pop
adc
imul
cmp
fidivrs
movsl
mov
gs
push
scas
dec
stos
and
pop
ds
imul
mov
push
iret
cmp
sbb
mov
es
add
cmpsl
test
mov
je
push
in
les
or
pushf
ss
dec
or
loop
xchg
dec
pop
mov
arpl
xchg
scas
movsl
mov
mov
or
aas
xor
sbb
imul
popf
mov
call
xlat
iret
xor
out
shll
pop
emms
push
fwait
sub
neg
lahf
roll
lret
jo
mov
cmp
inc
inc
and
jne
pushf
flds
fwait
mov
xor
rorb
je
mov
inc
lahf
mov
mov
lods
add
jmp
dec
dec
pop
sbb
lret
sbb
nop
idiv
lcall
cmp
stc
jb
sbb
jmp
nop
jmp
adc
maxps
add
repz
xorb
scas
and
outsl
ficoms
xchg
jmp
stos
sbb
xchg
xor
repz
dec
shll
dec
mov
aaa
scas
jbe
sti
mov
push
outsb
cli
hlt
and
hlt
mov
push
sbb
shr
lock
mov
cmp
cmp
jmp
loop
and
fisttpl
push
push
mov
aam
movb
push
cmpsb
ret
mov
clc
icebp
xchg
or
mov
adc
dec
loopne
in
notl
loope
aam
xor
out
jge,pn
xor
sbb
and
dec
sahf
pop
inc
mov
push
inc
inc
and
fistpll
les
sbb
xorl
mov
cli
sbb
stos
mov
mov
enter
inc
xor
out
daa
sbb
fs
mov
ficoms
or
ret
push
xchg
add
das
pop
and
popf
shlb
adc
push
mov
and
jmp
loopne
push
mov
lds
stos
and
loope
loop
lret
pop
or
add
pop
push
fyl2x
mov
out
outsb
lods
pop
mov
dec
ret
insb
nop
adc
test
push
mov
sub
xlat
fwait
sahf
push
cmp
ret
sub
mov
jno
mov
add
loopne
pop
add
pop
xchg
sbb
jg
pop
out
add
in
fdivrs
shl
cli
mov
or
aad
push
pushf
flds
jg
cwtl
outsb
call
jae
ss
hlt
fisubrl
loop
or
sbb
std
inc
es
lcall
js
popl
dec
aad
mov
xor
pop
movsb
in
xor
adc
aam
adc
lock
add
xlat
xor
dec
jno,pt
stos
push
popa
aas
cltd
out
mov
in
cmp
int3
xchg
sbb
sbb
mov
dec
adc
ret
shrb
sbb
pop
add
pop
scas
xchg
cmp
xor
nop
js
fdivrl
adc
xlat
mov
mov
jecxz
stos
ljmp
add
mov
sbb
push
mov
adc
mov
xlat
lea
fldenv
inc
cwtl
cmp
or
cs
mov
push
pop
aaa
decl
jns
imul
dec
jo
testb
xchg
testl
push
jg
shl
loop
push
sub
fcmovbe
jecxz
rcll
in
pop
rcrl
jns
cmpsb
out
sub
lods
jns
or
shrb
mov
jmp
dec
mov
loop
imull
mov
xchg
mov
data16
xor
aaa
jae
daa
dec
sub
jmp
insb
ret
mov
out
mov
add
adc
fsts
jb
mov
push
insl
aaa
sti
jg
fwait
dec
cmpsb
mov
and
push
or
std
pop
popa
ds
xor
jp
jo
inc
push
gs
mov
mov
xchg
dec
sub
stos
dec
push
or
jl
ss
dec
dec
dec
push
xor
pusha
add
pop
dec
push
adc
sbb
xor
ficoml
adc
imul
jbe
mov
xor
bound
arpl
mov
inc
cmpb
push
out
sub
add
add
fdivr
adc
or
out
lret
mov
movl
push
gs
sbb
sbb
mov
pop
repz
pop
addb
pusha
xchg
and
adc
clc
push
cmp
add
pop
loope
mulb
sbb
sbb
jbe
mov
clc
add
loopne
mov
test
mov
aad
sub
js
ja
mov
sbb
ret
rep
out
lea
sbb
mov
sbb
or
push
add
or
cltd
dec
cmp
cmpsb
dec
sub
test
mov
inc
push
xor
inc
sbb
pop
xor
dec
dec
pop
xchg
and
test
aad
cmp
push
aam
adc
insl
fbstp
push
add
jmp
cmp
mov
push
adc
pushf
stos
cmp
dec
xchg
fistl
jo
rcrl
bound
in
movsl
mov
in
cs
nop
aam
rclb
jl
inc
int3
jae
mov
iret
aaa
xor
and
lahf
cltd
inc
rcrb
sub
xchg
jge
fsubr
inc
push
popf
push
ret
lahf
sub
repz
js
insb
push
data16
pop
cld
mulb
sbbl
sbb
pop
push
out
push
and
adc
xchg
dec
xor
lahf
and
fwait
inc
mov
aam
mov
sbb
loopne
mov
shlb
mov
cld
test
out
xchg
cmp
outsb
and
jg
cs
dec
addr16
cmpb
push
sbb
aad
cmp
fsqrt
ret
jnp
aaa
es
jl
movsl
faddp
fsts
xchg
cmp
imul
cli
cmp
test
pop
ror
mov
mov
mov
shll
call
movsl
push
pop
out
dec
pop
cmpsl
cmp
dec
xchg
sub
lock
ljmp
outsl
mov
mov
mov
popa
mov
push
in
test
arpl
inc
add
dec
adcl
test
dec
int3
dec
xor
mov
xor
leave
je
jmp
inc
xor
movsl
push
mov
sub
repnz
pop
in
scas
push
jp
add
lret
xlat
adc
dec
xchg
cltd
lcall
jb
add
sti
mov
dec
movsl
add
add
jo
add
mov
push
rol
add
cmp
dec
scas
pop
cmp
clc
addr16
cmpsl
lret
stos
inc
sbb
inc
sti
int3
loopne
pop
pusha
mov
cmp
xor
test
fsubr
mov
lahf
mov
push
test
push
fisubl
jbe
lds
or
stc
int3
mov
movsl
inc
xchg
push
sbb
and
shrb
mov
pushf
insl
sbb
ficoml
mov
scas
clc
mov
inc
das
push
mov
or
jmp
xlat
xor
xchg
arpl
jle
popf
pop
jge
mov
sahf
jg
rcrl
imul
lock
xchg
mov
or
pop
inc
cmp
cmp
sub
lds
daa
add
and
enter
mov
mov
test
mov
adc
pop
filds
je
jecxz
dec
jg
push
addr16
mov
and
mov
jle
push
cmpsb
setg
icebp
or
popf
jp
in
push
das
inc
pop
dec
mov
sarl
xchg
adc
fists
movsl
push
and
in
mov
fs
push
or
cld
loop
pop
xorl
mov
std
mov
cmp
movsl
mov
inc
mov
gs
inc
jnp
adc
pextrw
dec
sar
cmp
sbb
scas
mov
inc
inc
stos
rep
fiadds
or
sub
dec
lds
adc
push
cmp
push
out
xor
or
mov
dec
jo
pop
xor
sbb
ss
mov
js
repnz
push
sub
xchg
fcomps
jge
cwtl
or
xchg
enter
push
adc
sbb
notl
out
pop
repnz
arpl
push
push
pop
or
fistpl
cmp
add
push
jg
dec
test
sub
sub
insb
jge
shl
jo
ja
xor
cmp
insb
inc
add
and
mov
aaa
aad
jge
gs
jmp
scas
mov
lahf
push
or
xchg
rcll
int3
lcall
pushf
xor
xchg
push
cli
and
test
adc
sub
mov
aam
je
mov
addr16
lcall
cltd
mov
add
addb
mov
sti
and
inc
xor
dec
addr16
add
adc
dec
sub
dec
movsl
pusha
mov
adc
bound
pop
scas
add
push
mov
sub
jne
aam
stos
cwtl
stc
mov
popf
pop
adc
mov
sub
add
xor
roll
into
mov
lcall
lock
add
and
lret
es
mov
cs
jo
jnp
hlt
jne,pt
mov
push
or
inc
shrb
in
clc
dec
jecxz
push
push
popf
mov
cmpsb
push
jge
pop
in
or
filds
lods
fdiv
inc
add
rol
push
push
lret
lret
pop
mov
sbb
xor
mov
inc
lea
mov
pop
leave
pop
dec
test
mov
add
xor
pusha
mov
fsubrp
cmc
mov
push
lea
nop
or
mov
cs
shrl
cmp
out
movsl
mov
dec
pop
sbb
xchg
fiaddl
ljmp
shll
mov
loopne
dec
leave
bts
call
jle
leave
pop
xor
inc
jne
xchg
inc
jp
mov
and
mov
fwait
mov
sub
lcall
pop
insl
cld
aas
or
cmp
adc
push
call
mov
cmpsb
fistpl
pop
pop
aaa
xor
mov
or
or
jge
cmp
loope
int
out
js
stos
lods
ljmp
mov
adc
fstpl
cmp
ret
jo
and
into
cmp
mov
pusha
dec
xchg
lcall
js
bound
stos
outsl
fisubrl
dec
hlt
insl
ds
roll
test
daa
and
inc
stc
dec
fsubrs
divb
aas
mov
jge
jge
adc
jle
sub
pop
fdivrl
lcall
rcrb
fdivl
adc
xor
push
push
add
in
or
rclb
lahf
aad
dec
inc
mov
jmp
movsl
in
gs
mov
push
push
or
clc
in
or
loope
pop
sbb
push
jmp
stc
sub
xor
push
data16
lahf
mov
pop
sub
mov
xor
add
sub
movsb
push
mov
adc
loop
mov
stos
mov
pusha
cmp
loop
push
and
mov
push
mov
or
xchg
loopne
sbb
or
sub
ret
sub
aas
dec
call
sbb
ja
mov
jb
mov
xor
mov
dec
mov
imull
xor
mov
pop
repz
or
add
cs
stos
shrl
cmpsb
xor
and
shll
jmp
fcomip
mov
and
sub
pop
mov
movsl
push
xor
inc
and
ret
je
pop
decb
loope
mov
mov
pusha
push
push
cmp
loopne
fmull
xor
cmp
repnz
leave
fcomip
iret
ficomps
icebp
test
in
and
jno
and
mov
hlt
xor
and
loope
in
dec
flds
xor
mov
movsb
dec
lock
lea
push
cs
outsb
cmpb
shlb
fucomip
imul
mov
xchg
and
stc
roll
fs
stc
fcompl
push
adc
cmp
xorl
jns
add
aas
js
shr
push
ret
inc
dec
push
clc
jns
inc
outsl
aad
add
and
pop
push
xor
negb
sar
mov
in
popf
jp
mov
cmpsb
cld
scas
mov
outsl
into
and
add
int3
pop
sub
and
scas
scas
scas
dec
inc
cmp
addl
mov
pop
adc
in
xchg
ljmp
xor
rcrl
sbb
out
dec
je
in
xor
lea
out
leave
adc
out
fwait
mov
int
repz
dec
jns
rorl
das
mov
scas
loopne
xor
sbb
jns
or
xchg
adc
loopne
mov
inc
loopne
xor
pop
dec
xor
ficompl
inc
push
popf
leave
test
jp
jge
dec
xor
out
lock
cwtl
scas
jge
lretw
jl
jne
data16
and
cmp
mull
inc
daa
mov
or
sbb
test
sarb
sahf
jb
mov
pop
xchg
jbe
jg
test
aas
xchg
mov
cmp
sbb
add
mov
rcrl
ret
jo
push
rcl
sbb
ja
int
add
loopne
jecxz
outsb
xor
inc
add
push
pop
das
in
int3
shl
cld
jns
inc
stc
mov
icebp
shll
mov
xor
push
and
dec
fdivrs
and
mov
lods
scas
add
mov
fstpt
iret
push
insl
dec
fbstp
clc
rorb
push
outsb
orb
mov
and
dec
insb
leave
movsl
cmc
xor
iret
cmp
sbb
sahf
xor
in
mov
fcomp
inc
mov
stos
fidivl
fcom
insb
mov
cld
cmpsb
jg
adc
add
pop
movsl
sar
orb
bnd
mov
adc
cmp
lret
rcrl
pop
xor
pop
mov
pop
mov
leave
mov
bnd
cmpsb
xchg
pusha
outsb
outsb
inc
pop
repz
pop
test
clc
inc
aad
sbb
shr
sbb
mov
and
push
stc
jmp
jbe
adc
pushf
jecxz
xor
shrb
adc
out
je
les
adc
stos
mov
fnstcw
divl
lods
test
adc
cmc
ficomps
aas
pushf
adc
les
std
test
pop
vpaddq
jmp
cmpsl
mov
ja
icebp
stos
imul
lds
out
lahf
fwait
jmp
stos
pop
int
mov
adcb
xor
inc
cmp
or
bound
mov
push
stc
insb
loop
add
jbe
push
pop
add
add
cltd
xchg
adc
ja
ljmp
dec
xchg
mov
mov
mov
dec
mov
or
pop
xlat
lods
in
lahf
sbb
pop
mov
jmp
pop
insl
aaa
pop
or
mov
cmpsb
mov
or
adc
mov
lea
mov
mov
or
bound
fisubrs
bound
testb
arpl
xor
jnp
push
movsl
loop
test
arpl
mov
mov
add
arpl
pop
fnstsw
sbb
push
andl
xchg
xchg
or
into
mov
dec
and
js
push
pop
pop
mov
ljmp
js
mov
out
nop
mov
lds
and
test
test
jnp
adc
add
push
popa
jg
ljmp
stos
outsl
aas
gs
xchg
dec
inc
cld
outsl
das
loopne
sbb
lods
rolb
jae
jae
stc
ja
lods
arpl
xchg
cld
or
inc
mov
scas
in
fdivr
mov
cmpsb
mov
lea
cmc
push
mov
push
xchg
cwtl
jno
jns
sub
mov
mov
mov
pushl
push
pop
es
xchg
shlb
ficompl
out
add
arpl
mov
stos
ds
jb
and
sti
add
popf
mov
andl
jo
into
push
mov
push
imul
roll
mov
adc
xchg
inc
adc
sbb
push
add
fimuls
sbb
repz
scas
leave
rcr
mov
or
jg
ds
or
aas
pop
xlat
out
fdivl
xor
mov
xchg
xbegin
insb
mov
or
pop
ljmp
inc
bound
dec
lds
in
xchg
adc
fs
stos
xchg
xlat
je
jo
xor
ret
stc
stos
cmp
xor
jno
xchg
movsb
movsl
mov
fucomp
lea
sti
outsb
push
and
insl
outsb
xchg
shll
orl
push
xor
sbb
stos
lcall
inc
cltd
test
push
pop
push
xchg
lods
call
sub
push
outsl
inc
mov
test
mov
cmp
insl
test
fistpl
push
mov
repnz
mov
xchg
daa
nop
ljmp
test
enter
mov
cmp
mov
sub
adc
lcall
mov
pushf
fcmovb
mov
adc
imul
sbb
pusha
jg
pop
fwait
lcall
xchg
dec
mov
loope
pop
mov
jno
inc
fldenv
jecxz
mov
push
xor
out
add
insb
lahf
adc
lds
nop
stos
mov
inc
jmp
mov
fdiv
cs
pop
add
mov
ss
push
fildl
sarb
dec
mov
sub
shrb
jo
inc
fidivrl
std
cmp
adc
pop
mov
dec
mov
and
imul
mov
scas
mov
xchg
insl
aam
in
pop
mov
fildll
push
lcall
push
imulb
ss
cli
pop
out
sub
jne
out
xor
sahf
out
pop
dec
mov
jmp
rorb
imul
mov
pusha
dec
movsl
cli
daa
add
cltd
jne
and
aas
pop
sbb
mov
insb
jae
pushf
xchg
bound
repz
sti
jmp
outsl
idiv
and
jg
xor
subl
xchg
push
in
int3
xor
dec
jne
or
nop
cmp
cmpsl
pop
in
sar
pop
loopne
push
xchg
je
dec
mov
in
mov
mov
sub
fisubl
pop
icebp
and
cmp
popf
ds
and
jmp
lds
jmp
sub
stc
adc
cli
jae
cmp
aam
mov
lret
sbb
hlt
stos
hlt
roll
out
xchg
sbb
xchg
mov
fs
subb
push
mov
cwtl
or
jno
cmp
mov
add
jmp
incb
pop
push
pop
out
jle
shll
call
movsl
add
mov
mov
jns
leave
or
adc
mov
mov
dec
stos
inc
pop
lcall
loop
sbb
push
jge
push
xchg
adc
loope
gs
dec
adc
push
fs
pushf
out
xchg
mov
pop
pop
push
call
cmp
mov
dec
lods
add
mov
dec
incl
arpl
push
pop
or
jns
fwait
mov
test
sarl
testl
jmp
dec
jle
mov
ret
movsl
or
popa
movsl
pusha
insb
les
pop
xor
pop
aad
xchg
outsl
dec
test
xchg
test
imul
cmp
movsb
hlt
sub
mov
adc
sbb
int3
jle
xchg
rorb
push
in
sub
or
jp
sub
push
mov
rcrb
xor
or
add
push
bnd
std
jmp
mov
arpl
das
in
test
es
lds
int3
pop
inc
sbb
cmp
dec
int3
sbb
hlt
inc
loopne
std
push
sbb
inc
lock
xchg
dec
mov
in
sti
sbb
pop
mov
cltd
stos
adc
popf
jo
mov
bound
jg
int
dec
jbe
inc
adc
shlb
xchg
xchg
hlt
ficomps
xchg
pop
aad
push
rorl
je
xchg
pusha
lods
bound
mov
ret
je
in
xchg
je
gs
test
sbb
lret
dec
xchg
pop
adc
fsubl
shll
mov
inc
fisttps
jg
div
pop
and
jmp
sbb
nop
cmp
cli
mov
out
inc
adc
xchg
add
sbbl
sub
and
ds
sbb
jp
mov
bound
xor
lods
and
incb
mov
mov
add
dec
push
scas
sub
cmp
or
xor
mov
lea
mov
stos
insb
xchg
inc
xlat
push
mov
cmp
mov
jbe
addb
cwtl
jae
clc
fimuls
out
shrb
xchg
sti
loop
jo
and
out
jge
mov
mov
jge
sub
aad
es
mov
pop
test
pop
inc
repz
cmp
aas
add
rcrb
pop
int3
dec
outsl
data16
lds
mov
and
int3
pop
pop
out
mov
sub
js
or
divb
lock
cmp
rcll
and
lret
adc
setbe
mov
xchg
dec
jle
jmp
std
daa
inc
push
xlat
pop
cvtps2pi
inc
jno
addr16
cmp
pop
fisubrs
cmc
mov
int3
xor
sbb
jns
jle,pn
nop
adc
scas
jne
inc
add
std
lea
in
mov
push
dec
scas
shlb
cmc
inc
sarl
cmp
cmp
idivb
fstpt
and
movsb
aam
mov
pop
dec
loope
push
cs
out
xlat
lahf
or
in
push
cmp
and
or
and
mov
gs
and
sub
push
mov
rolb
push
inc
push
sub
jbe
adc
test
repnz
and
adc
sub
mov
xchg
lahf
jp
imul
shlb
in
pop
push
in
jmp
xchg
jmp
imul
push
lods
lea
hlt
jne
mov
sub
cwtl
pop
sbb
out
sahf
dec
and
pop
jmp
movsl
scas
cltd
lods
pop
loop
mov
jle
repz
xlat
sbb
jo
addl
cmp
add
sti
insb
cmp
icebp
jge
mov
lret
insb
rcrb
and
into
leave
adc
dec
lock
daa
bound
sub
daa
es
sub
or
push
jg
std
lcall
adc
dec
aaa
mov
jl
dec
mov
lods
xor
movsb
mov
or
pop
fcompl
jmp
clc
sub
leave
cmp
dec
jle
stos
cmp
arpl
jmp
mov
add
and
fwait
mov
jns
out
push
pop
pusha
outsl
mov
push
in
xchg
cmpsb
adc
icebp
mov
stos
xchg
lcall
ret
shlb
fldt
cltd
std
add
in
nop
clc
movsb
gs
aad
push
ss
pop
dec
dec
cmp
add
jl
xchg
or
jmp
push
cmp
cmpsb
sbb
in
ljmp
jp
insl
fcoms
pop
pop
aam
or
push
lret
dec
les
ds
add
sub
movsb
mov
popf
test
std
pop
jb
sarb
xchg
xorps
fstl
mov
ljmp
popa
xlat
pushf
daa
stc
push
sbb
sbb
mov
repnz
inc
psubsb
push
fsubrl
loope
mov
cmp
mov
push
xor
mov
push
or
int
pushf
sbb
inc
add
std
sub
dec
loopne
dec
cwtl
rclb
insb
nop
xchg
ss
loopne
add
jnp
mov
mov
push
and
rep
mov
idivl
mov
test
adc
stos
fs
mov
sbb
or
lea
dec
push
stos
sub
dec
testb
mov
cmp
dec
popa
push
sub
pop
sbb
xor
mov
cmc
iret
scas
jg
repnz
popa
xchg
cltd
xor
and
mov
fcmovne
leave
int
add
inc
pop
dec
or
sbb
movsl
stos
xor
pop
lret
cmp
fs
paddusw
adcl
test
add
xchg
and
mov
out
je
stos
xchg
lods
hlt
test
mov
inc
sbb
leave
inc
xchg
and
fistps
dec
dec
jo
aam
mov
rcrl
xchg
sub
xchg
fdiv
arpl
or
repz
jp
pop
jno
cmpsl
clc
lcall
xchg
xor
movsl
inc
push
loope
and
adc
mov
inc
sub
nop
push
xor
mov
lea
mov
sub
out
cmc
xchg
pop
dec
xchg
sub
repnz
cli
adc
dec
or
sbb
add
inc
and
arpl
inc
adc
mov
mov
inc
aad
xor
popf
test
out
mov
pop
aad
dec
or
sbb
lods
add
popf
sti
inc
fldl
cs
pop
inc
pop
mov
inc
popf
cmp
and
xchg
xlat
xchg
pop
mov
xchg
imul
lret
jns
stos
bound
aas
aad
pop
mov
mov
dec
dec
or
pop
inc
or
cli
loopne
push
fstl
insl
jbe
adc
and
fcmovne
fldt
inc
and
jb
inc
icebp
clc
mov
sub
bnd
dec
icebp
jp
push
sub
or
loopne
icebp
sub
cld
add
pop
and
iret
xor
pushf
gs
rorb
pop
sar
fwait
mov
adcl
fsubl
mov
fcom
push
decl
mov
xor
adc
cmp
mov
or
xadd
xchg
mov
mov
out
fstps
mov
cli
stc
aam
das
fcomps
das
or
add
cmp
rclb
lods
sub
sub
jmp
mov
dec
push
dec
or
or
inc
xor
mov
aaa
fidivrl
ds
and
cmp
mov
mov
push
mov
jo
sbb
cmp
inc
sub
ret
sub
pop
xor
das
dec
pop
inc
jmp
add
push
fucomi
imul
ljmp
add
lahf
inc
sbb
loope
shrl
and
cmc
out
in
inc
cmp
fcompp
pop
aaa
in
or
or
aaa
mov
jle
dec
lds
ljmp
push
outsb
movsb
push
roll
je
and
inc
bnd
cmp
in
in
xor
jmp
ficoms
into
insb
loopne
pop
ret
sub
push
cmc
rolb
mov
out
pop
out
push
stc
cwtl
ljmp
xor
aam
mov
sbbl
cli
xlat
dec
mov
das
sub
in
fwait
sarl
ja
adc
add
stc
sbb
les
scas
and
adc
jnp
adc
jns
cmpsb
outsl
pop
cwtl
mov
cltd
out
dec
mov
cmpsb
jge
or
pop
dec
cwtl
popf
cmpsb
fxch
xchg
outsl
jmp
test
mov
int
test
shlb
and
stos
jecxz
jmp
add
xor
pop
fldt
lods
sub
filds
arpl
xchg
pop
in
dec
stc
insl
pop
xchg
in
jne
lods
mov
add
or
adc
inc
push
sub
loopne
mov
fs
loope
pusha
pop
pop
lea
neg
mov
mov
ret
cwtl
xchg
push
push
xorl
mov
pop
clc
jbe,pt
mull
jge
dec
mov
imul
or
lock
adc
cmp
mov
sub
hlt
loop
mov
mov
dec
test
or
aaa
sbb
shr
je
jmp
sub
mov
and
add
push
xor
add
negb
inc
fs
mov
sub
dec
and
adc
mov
cmp
lea
out
adc
pop
push
sub
sub
mov
add
shlb
bound
arpl
cmp
jbe
or
in
test
mov
or
repz
lcall
out
jl
leave
dec
incb
sub
add
das
shlb
xor
pop
xor
movsb
in
mov
je
shll
inc
cmp
mov
add
cmp
dec
jmp
pop
lds
or
sub
add
xchg
lcall
jo
lds
addr16
lds
lds
push
add
in
mov
mov
jnp
dec
pop
xor
out
je
in
mov
cwtl
adc
or
dec
aaa
mov
sahf
pushf
cli
test
lret
sub
test
and
add
ffreep
add
movsb
fstps
or
xor
iret
push
mov
int3
sub
jmp
std
mov
mov
cs
jge
inc
mov
or
push
leave
mov
xchg
fnstsw
in
add
mov
push
and
add
cmc
cmpl
enter
jl
push
mov
cmp
mov
mov
xchg
xchg
test
pop
inc
inc
and
negl
fdivrl
imul
mov
inc
mov
or
sub
sbb
pop
repz
test
xchg
scas
aad
pop
add
lods
mov
hlt
in
mov
sbb
addr16
sub
lret
mov
in
xchg
cmp
out
xchg
lods
jns
push
jecxz
test
jl
das
inc
sub
out
mov
addr16
mov
push
faddp
cmpsl
fnstcw
xchg
push
cmpsb
sub
cmp
mul
adc
daa
jno
push
mov
mov
movswl
int
movsb
sub
adc
aaa
push
cli
push
leave
mov
je
or
xchg
sub
adc
fmuls
pushl
xor
cwtl
out
insb
orl
stos
je
lods
cs
inc
mov
out
xchg
idivl
out
das
cli
sbb
cmpb
cs
cmp
mov
mov
pop
loope
fcmovbe
popf
cltd
in
xchg
out
mov
xor
sbb
jns
je
test
cmp
xor
xor
imul
jle
bound
loope
sub
aaa
hlt
fnstcw
xor
add
jle
mov
out
ret
mov
xchg
sub
add
stc
mov
mov
pusha
cltd
outsb
std
mov
jmp
stc
or
fcmovnb
leave
clc
orl
ret
push
mov
or
out
fdecstp
push
and
mov
int
xor
adc
add
mov
leave
push
bndldx
cmpsl
push
lods
dec
dec
and
pop
lock
dec
ret
xor
cli
adc
cld
in
adc
in
add
cmp
mov
je
jbe
mov
push
mov
loope
ljmp
subb
les
jnp
mov
xchg
fucomip
loope
into
mull
cwtl
loopne
jg
cmp
push
xor
mov
xchg
mov
dec
movsl
filds
andl
sbb
fdivs
pop
decl
sub
sub
sub
adcl
andl
popf
add
xor
dec
and
inc
cwtl
dec
cmpsl
and
inc
hlt
cmpl
inc
or
add
mov
addb
push
inc
mov
sahf
sub
sbb
xor
out
lods
fs
cmp
sahf
nop
clc
fmulp
or
movl
add
cmp
jmp
dec
jo
add
sbb
xchg
adc
inc
pop
mov
movsb
cld
sbb
cmpsl
sbb
xor
mov
or
pop
dec
xchg
jbe
movsl
push
repnz
and
add
mov
enter
les
imul
lcall
xchg
test
aas
orl
loopne
sbb
dec
mov
mov
xor
dec
lcall
jns
iret
mov
loop
push
or
add
xor
shrb
xor
sbb
jle
in
pop
pop
xchg
adc
mov
jl
scas
cmpsb
jecxz
mov
test
fnsave
mov
pop
stos
roll
stos
dec
adc
je
push
test
insb
aad
test
cmpsl
push
mov
or
das
scas
enter
hlt
mov
jmp
imul
add
ret
insl
push
push
pop
pop
dec
sbb
lahf
int3
sub
outsb
pop
mov
or
fwait
movsl
inc
ljmp
ljmp
test
je
jmp
and
inc
push
loopne
or
inc
mull
dec
repz
dec
inc
push
sub
sti
pop
test
xchg
mov
push
jp
into
adc
test
cli
mov
inc
sub
test
subl
push
fadd
movsl
in
loopne
in
cmp
stos
mov
xor
scas
jo,pt
mull
mov
push
out
scas
sbb
jmp
movsl
xchg
clc
push
xor
push
daa
inc
inc
je
scas
mov
dec
idivb
jge
inc
mov
push
adc
pop
mov
rorl
mov
loop
pop
outsl
scas
pop
jmp
sbb
cmpsl
pop
divl
or
popa
shl
fnstsw
les
adc
bnd
jp
das
mov
jo
cmpsl
in
push
xorl
jge
ljmp
add
add
std
xchg
push
cwtl
out
hlt
mov
and
inc
lods
rolb
fiaddl
ja
fisubl
cli
push
xchg
sub
mov
mov
aaa
mov
enter
and
hlt
ret
mov
pop
cmp
lds
inc
ficoms
sbb
hlt
mov
xor
xor
xchg
push
idivl
dec
mov
cmp
jb
mov
dec
pop
fbstp
in
test
jge
cmc
push
or
dec
jb
jmp
or
je
test
dec
inc
rorb
icebp
cmpsl
cmp
and
imul
mov
push
stos
push
jae
xchg
mov
inc
mov
add
adc
subl
lcall
pop
outsl
cs
call
leave
out
inc
mov
sub
mov
sbb
scas
arpl
push
test
push
mov
inc
add
xchg
lods
das
and
cwtl
pop
xorl
scas
testl
jg
js
rol
xchg
xchg
fwait
xchg
sbb
loop
test
cmp
inc
mov
mov
mov
fnsave
or
add
lea
pushl
push
inc
pop
push
addr16
jbe
imul
adc
xchg
mov
in
mov
int
sbb
mov
out
test
lcall
aas
lret
cmpsl
adc
imulb
and
adc
sbb
shr
out
mov
mov
xor
sbb
out
cli
add
mov
mov
mov
out
push
mov
data16
cmc
inc
push
sbb
lods
jbe
cmpl
add
ret
fimuls
sub
xchg
les
dec
mov
enter
dec
fcoms
cmpb
pop
dec
pop
adc
push
push
cs
mov
fmul
mov
scas
cmpsb
loop
pop
or
add
lcall
out
pusha
sub
jle
sti
xor
add
lock
aaa
jnp
or
xchg
or
dec
pushf
in
ja
sub
jb
daa
add
and
sbb
pop
cltd
ret
lock
out
mov
cmp
shll
mov
fmulp
cmc
add
inc
fildll
rcrl
dec
inc
mov
jb
cli
mov
dec
push
adc
ja
std
push
pop
mov
xlat
cld
push
xchg
das
test
or
push
add
cwtl
sub
in
negl
out
xchg
sub
ds
rclb
mov
lods
pop
sbb
pop
jle
sbbb
mov
mov
cmp
mov
and
hlt
fisubl
adc
xchg
or
int
adc
sbb
adc
in
mov
mov
inc
adc
jbe
lock
or
mov
xchg
jecxz
dec
aam
mov
in
sub
add
in
pop
cmpsl
dec
pushf
into
pop
jge
lcall
inc
xchg
sub
pusha
jns
jp
push
jns
push
aaa
sbb
in
je
xorb
cld
stc
mov
ds
sbbb
sbb
mov
ja
ljmp
cmp
nop
cmpsl
push
push
and
mov
in
mov
cmp
scas
or
lea
das
sbb
push
add
add
in
loope
jecxz
sub
enter
repnz
mov
pop
out
push
test
pushf
aaa
mov
les
cltd
push
loopne
sub
sub
enter
insl
cmp
mov
subl
pop
pop
jns
add
add
mov
pop
xchg
push
add
ficoms
xor
push
rcll
lret
sbb
int
adc
fs
push
in
xchg
sbb
cmp
add
pop
jae
cmpsl
push
bound
bound
mov
clc
les
sbb
clc
and
xchg
xchg
je
pop
mov
sub
jp
jmp
mov
int3
cmp
mov
inc
adc
mov
push
ljmp
repz
xchg
stos
jb
dec
fldcw
notb
push
lds
adc
pop
pushf
cmp
push
ljmp
push
imulw
hlt
xchg
les
fs
out
sbb
cwtl
fwait
rclb
dec
insl
shll
in
mov
adc
in
xchg
rcr
call
pushf
mov
adc
pop
sub
sbb
scas
sub
sub
lahf
push
fwait
popa
mov
xchg
adc
std
cmp
adc
es
pop
gs
in
loop
fstpl
xor
or
mov
neg
call
or
imul
ficompl
xchg
mov
xor
add
int
inc
push
clts
mov
mov
insl
pop
push
out
ret
mov
lock
out
popf
repz
dec
mov
cs
in
test
pop
scas
mov
and
cmovnp
into
mov
mov
dec
mov
xchg
ret
push
jno
mov
shl
mov
pop
clc
into
and
sbb
aam
sbbb
iret
xchg
fldcw
mov
and
push
jge
or
fsubrp
idivb
pop
mov
decb
out
adc
fsts
jp
add
xchg
rol
shr
mov
cmpsb
jns
jecxz
fidivl
aad
mov
gs
in
call
insb
jl
mov
adc
dec
and
xchg
lret
stos
aaa
adc
push
add
pop
iret
lods
adc
das
flds
mov
icebp
mov
data16
jle,pn
sbb
push
insb
or
mov
mov
inc
sub
cmpsb
lods
cltd
movb
push
addb
shl
sbb
dec
sub
xchg
rcrb
arpl
and
lahf
fmull
or
movl
ret
sub
xchg
add
xchg
ds
decl
jp
pop
movsl
add
pop
out
and
ss
add
aam
push
popa
out
loop
ret
mov
xlat
pop
mov
rcr
mov
loopne
jge
dec
add
outsb
xor
out
ja
bound
or
loope
int3
mov
mov
push
fnstsw
or
les
ret
shll
fisttps
int3
movsl
xor
pop
sbb
xchg
pusha
scas
bound
mov
cwtl
jae
dec
cvtdq2ps
sub
jno
popf
jb
lods
mov
es
push
stos
cmc
das
outsb
daa
imul
fists
fldcw
dec
xor
pop
loop
mov
pop
sti
cmp
mov
rcrb
xchg
out
adc
in
test
push
test
ds
popa
loop
int
jo
mov
enter
popf
jle
stos
scas
clc
jmp
cmpsb
sti
pop
pop
les
test
subb
pop
cwtl
adc
lcall
js
testb
popa
mov
cmp
jno
out
mov
inc
jnp
or
dec
mov
rcrl
bound
test
js
jbe
int3
cmp
mov
out
out
sub
mov
into
inc
out
out
and
ja
lret
sti
adc
mov
dec
call
inc
movsl
xor
or
mov
scas
call
std
mov
aaa
inc
out
push
dec
mov
adc
fisubrs
shrb
mov
add
sarl
aam
inc
adc
sub
push
pusha
lock
imulb
adc
lds
jbe
lock
scas
test
or
mov
in
ljmp
loop
out
xor
sbb
add
test
shll
xor
lds
lods
scas
sbb
ret
inc
cmp
cwtl
loope
nop
push
add
enter
out
push
jo
es
pop
push
xchg
int3
pop
sbb
jns
inc
cmp
push
mov
xor
sub
add
loope
push
jns
pop
jg
popa
add
fadd
mov
sub
mov
fadd
jb
popf
add
mov
lcall
addb
test
mov
xchg
sub
mov
push
stos
test
push
lcall
mov
movsl
ret
popa
xor
sub
and
mov
dec
std
jns
xor
inc
jl
mov
dec
sub
nop
jbe
aas
enter
daa
xor
cmpsb
mov
push
into
data16
dec
imul
jl
push
xor
outsb
sub
cmp
mov
call
mov
pushf
sbb
push
addb
lahf
lahf
shll
aas
sub
xchg
xor
jecxz
aad
shrl
inc
lods
push
dec
call
sbb
es
hlt
test
xlat
xlat
rcll
dec
push
mov
push
cmp
inc
stos
pop
mov
imul
lock
mov
clc
repz
jmp
sti
mov
pop
mov
popa
clc
jle
sub
subb
pop
scas
or
out
push
xor
int3
out
stc
push
xchg
inc
arpl
lahf
and
and
mov
test
dec
mov
dec
out
pop
mov
jno
mov
sbbb
dec
ret
jne
dec
test
xchg
pop
sbb
shll
shll
jo
bound
cmp
dec
cs
rol
and
xor
pop
aas
cmp
shlb
pop
jle
xor
movsb
jnp
adc
fbstp
fnstenv
xlat
push
out
cmpsb
jl
addb
adc
pusha
xchg
test
fldt
or
jns
insl
int
pop
dec
lahf
xchg
sub
and
repnz
fwait
add
lods
cmp
inc
push
mov
mov
pop
or
pop
sar
imul
outsl
xor
and
decb
push
xchg
mov
es
cwtl
inc
bound
pop
sbb
popa
in
rep
ljmp
cltd
or
out
dec
dec
iret
jne
and
into
pop
popa
dec
out
sub
jg
inc
out
test
lea
adcb
icebp
jg
int
std
fdivrl
inc
mov
out
sbb
sbb
arpl
ss
sub
es
xor
lods
bound
jns
or
rorl
inc
mov
jl
jbe
mov
jmp
call
rolb
inc
mov
mov
test
js
xlat
js
inc
in
data16
pop
das
stos
and
inc
adc
mov
imull
movsl
mov
std
adc
repz
and
push
int3
pop
sbb
test
ret
stos
ds
mov
lds
push
insb
int3
aam
lret
jae
imul
xor
pop
in
xchg
sahf
lcall
js
sbb
stos
mov
int
les
cs
ret
in
repnz
push
jmp
daa
jae
lock
mov
scas
into
xor
xor
popf
test
lea
add
xchg
xchg
test
cmp
add
sbbb
in
in
iret
jmp
sub
cwtl
test
iret
lock
dec
mov
and
iret
xchg
mov
sub
into
and
mov
jno
mov
dec
testl
mov
pop
leave
cmp
mov
dec
cld
cmp
mov
cld
mov
pop
push
iret
lret
in
sub
ss
call
bound
notb
cmpsl
pop
jmp
jp
rcr
cmpsl
mul
dec
cmc
std
pop
loop
lahf
xor
jmp
int3
or
adc
cmp
adc
addr16
jns
mov
mov
xchg
bnd
push
fs
fwait
movsb
popa
imul
mov
insb
daa
fcmovnb
or
push
int3
ljmp
addr16
aad
add
dec
stos
mov
out
jge
test
push
xor
les
cwtl
call
mov
and
push
es
cmp
fistl
jbe
fdivrs
cmp
mov
add
ficoml
call
mov
call
push
leave
push
mov
and
ljmp
add
jb
lea
inc
xor
dec
fwait
xchg
mov
adc
push
bound
and
mov
dec
rorb
mov
and
fs
ljmp
fidivrs
into
inc
add
das
in
lds
lods
or
test
pop
xor
mov
loopne
adc
fcmovnbe
xchg
stos
idivl
lods
inc
mov
jns
fldl
sbb
inc
loopne
test
push
and
sbbb
sub
inc
or
dec
movsl
movsl
sbb
and
mov
mov
popa
push
movsl
add
mov
ljmp
lahf
ffreep
cmp
loope
push
cmp
and
jp
pop
ja
and
icebp
adc
adc
neg
push
lods
sbb
or
sahf
sub
mov
cmpsl
cmpsb
cmc
push
lcall
mov
movsl
push
call
jbe
pop
test
call
ds
jb
dec
pop
cld
idiv
stc
push
adc
mov
fsubrl
stc
or
loope
lcall
orl
je,pt
arpl
push
mov
aas
push
out
xor
sbb
or
cli
repnz
nop
pop
xor
jne
mov
adc
adc
fidivrl
jg
mov
sbb
aad
cmp
or
mov
scas
fs
pop
inc
push
bound
dec
scas
hlt
test
js
jnp
jmp
jae
add
jo
movsb
xchg
xchg
and
pop
lcall
lret
push
std
sahf
in
adc
int
mov
inc
push
clc
pop
inc
xchg
xor
inc
mov
pop
fwait
call
sahf
pop
xchg
fisubl
fnstsw
xor
jo
and
js
push
and
pop
jecxz
pop
dec
lds
test
push
aam
js
addb
mov
js
sbb
cmpsb
lret
arpl
mov
movsl
das
push
push
push
aas
pop
mov
lcall
cmp
push
jo
inc
mov
and
mov
mov
push
fidivl
daa
inc
fwait
sub
add
mov
jnp
dec
add
fldcw
cs
negb
pusha
movsb
in
jns
fwait
mov
loope
jbe
jae
pop
repz
sub
fs
mov
pop
mov
jmp
js
mov
and
insl
push
push
test
adc
aam
sbb
sub
sti
loopne
aas
sbb
push
jp
mov
mov
into
std
inc
lock
lea
push
ds
jl
adc
mov
xor
js
pop
add
fsts
nop
mov
repnz
repz
daa
sub
lds
popf
and
ss
inc
loop
orb
jo
fiadds
push
cmc
jge
xchg
rclb
inc
push
cmpsb
rcl
incb
inc
int3
jg
rol
leave
mov
ja
xchg
inc
nop
out
lret
inc
mov
cld
pop
xorb
shl
inc
mov
stc
fcompl
pushf
scas
push
push
out
adcl
in
sbb
sti
jo
jg
sbb
insb
xchg
pop
ror
mov
jb
int3
jo
mov
mov
test
mov
addr16
test
lret
jns
ljmp
push
xor
sbb
dec
inc
aam
inc
cltd
jo
lcall
rorl
adc
adc
lret
inc
decl
outsl
js
adc
movsb
adc
xchg
cmpsl
inc
jae
imul
pop
xlat
out
mov
repz
xorb
mov
and
jge
fcomps
imul
add
sbbb
and
jno
icebp
loopne
sar
jmp
add
adc
cmc
xchg
int3
aas
add
cmp
idivb
sub
popa
dec
mov
dec
sarl
mov
shrl
jo
add
rcr
js
repz
lods
add
popa
pusha
test
xchg
sub
sub
pop
inc
repz
and
lock
sbb
jb
mov
scas
xchg
clc
out
fcmovbe
mov
pushf
mov
jecxz
test
andb
pop
mov
pusha
cmp
adc
mov
pusha
rorb
mov
mov
xlat
mov
inc
and
cli
mov
sbb
pop
cmp
xchg
push
xor
dec
idivb
ljmp
orb
mov
mov
lods
ret
scas
test
ret
xor
sbb
pop
nop
cmc
fistpl
loopne
pop
mov
notb
nop
mov
sahf
test
in
std
cmp
mov
rol
jne
mov
lret
jne
subl
dec
mov
out
sub
lret
dec
ret
adc
push
sub
or
pushf
push
pop
mov
addr16
cli
sub
pop
aam
dec
pop
nop
lret
loope
push
in
pop
push
fisubs
lahf
in
mov
imull
sub
bound
test
push
into
sti
lea
mov
and
xor
sti
xor
cli
push
pusha
pop
xor
mov
mov
push
mov
or
adc
sbb
xchg
dec
and
in
mov
mov
mov
sahf
push
mov
mov
adc
in
ds
pop
xorb
aaa
sbb
addb
fistpll
cltd
lret
xor
mov
dec
push
mov
dec
sti
pop
sub
in
pop
xor
xchg
mov
cmpsb
sub
dec
push
mov
xchg
insl
js
out
or
pop
imul
mov
xchg
mov
xor
adc
add
or
cmp
pop
fisttpll
inc
xchg
mov
or
clc
adc
jo
test
push
jno
rclb
insb
in
or
fisubrl
lret
mov
xor
push
daa
or
data16
mov
ret
or
cli
sbb
incl
mov
aam
iret
aaa
daa
mov
loopne
pop
enter
mov
imul
in
fst
sbb
cmp
mov
inc
add
pop
xchg
cwtl
adc
out
jb
sbb
dec
insl
and
cld
sbb
xchg
movsl
pop
int
cmp
adc
and
xor
testl
aas
imul
out
scas
out
mov
sbb
mov
xchg
jmp
pop
test
xchg
dec
jnp
adc
in
cmpsb
ret
mov
or
negb
jecxz
or
pop
stos
sbb
adc
sub
pop
sub
or
loopne
dec
insb
imul
clc
hlt
stos
sahf
and
or
adc
mov
add
jbe
push
addr16
out
pushf
es
and
sbb
nop
dec
add
inc
xchg
iret
inc
jp
cmp
inc
add
add
lret
enter
xchg
dec
scas
rcr
push
jp
push
iret
pop
in
es
insb
loop
mov
push
dec
mov
mov
subl
cmc
clc
lret
or
cmp
sbb
nop
xchg
cmpsl
xor
and
xor
xchg
cld
loop
xchg
outsl
cmp
arpl
mov
test
mov
lock
xchg
jecxz
fnstcw
cwtl
adc
push
and
loope
and
stos
scas
ret
jne
std
loope
cmp
bound
sub
pop
xchg
repz
fildll
popf
jo
mov
cmp
xchg
dec
cmpb
and
push
jns
data16
int3
lahf
and
push
jmp
cs
xor
sti
push
loop
mov
fs
bnd
movsl
xor
in
jo
or
mov
xchg
lods
bound
sub
or
js
cmpsb
mov
test
fistpll
jb
mov
mov
adc
imul
rolb
je
divl
movsb
lcall
pushf
int
mov
push
adcb
pop
and
imul
sub
cld
aaa
sub
clc
stc
cmp
sahf
leave
ljmp
fs
add
pop
jne
add
negl
dec
dec
shll
out
clc
xchg
xor
mov
adc
das
mov
int
jp
js
or
jecxz
sub
test
sti
loop
cmp
aaa
pushl
and
xchg
cmp
dec
fadds
stc
inc
jg
pop
cli
sbb
inc
sbb
jns
ficoml
jp
out
pop
fs
lods
sbb
arpl
in
mov
xchg
xlat
scas
sbb
test
inc
mov
add
pushf
push
shl
or
aas
lea
sub
test
or
mov
int3
push
lea
mov
sbb
je
dec
daa
xchg
std
xor
pop
sub
mov
pushf
mov
cmc
incb
sbb
enter
ljmp
push
dec
scas
dec
movsb
subb
and
es
add
pop
pop
and
sub
xor
xchg
push
mov
in
cmp
pop
pusha
data16
sbb
scas
or
sahf
or
lcall
and
icebp
sbb
sub
sbb
mov
imul
mov
push
and
jae
dec
shlb
enter
xor
and
pand
sub
insl
xchg
faddl
aam
jle
cmp
test
lcall
negl
ss
xchg
iret
movsb
add
jg
stos
and
push
aas
out
je
stc
xchg
xor
adc
shll
adc
fimuls
in
das
imul
dec
dec
lcall
out
dec
jns
ret
test
mov
arpl
fsts
mov
push
sub
ds
pop
mov
lds
add
push
repz
ret
pop
dec
and
xchg
sub
ret
leave
or
adc
fmuls
mov
negb
jmp
js
push
stos
adc
mov
add
mov
call
je
cmpsb
mov
dec
int
xor
dec
and
xchg
inc
dec
or
jne
mov
dec
pop
repnz
das
movb
mov
jg
push
test
and
and
cmp
mov
inc
cmp
sub
adc
lahf
push
shrl
sti
ror
pop
jp
adc
stc
push
insl
test
repz
push
and
mov
inc
and
cmc
icebp
cmp
pop
mov
addr16
outsb
push
fsubl
pusha
test
gs
mov
arpl
push
rorb
ljmp
add
xorb
add
mov
dec
cmpl
sarl
add
es
lods
add
add
sbb
fwait
cwtl
cwtl
bound
dec
in
or
cli
int3
sub
nop
lahf
or
popf
sub
jbe,pt
lods
xlat
push
xor
xchg
mov
das
mov
add
xchg
fwait
scas
adc
stos
sbb
cld
sbb
fs
jle
or
sub
sub
sbb
jle
in
movsb
sub
enter
mov
call
stos
mov
push
and
mov
jg
cs
sbb
adc
test
mov
lods
cli
stc
xor
mov
xor
lret
mov
jo
testb
push
cmpsl
mov
add
dec
or
and
sub
movsl
mov
mov
test
cmpsl
xchg
pop
addr16
out
scas
iret
lods
inc
nop
mov
aam
outsl
sbb
lret
mov
enter
fwait
mov
in
mov
adc
popa
sbb
fidivl
cmp
xor
dec
hlt
addr16
int
loope
pop
cwtl
das
movsl
repnz
xor
lds
push
sahf
int
stos
pusha
mov
push
ljmp
cmp
fimull
loopne
ja
and
out
lods
cld
add
mov
jmp
movsl
and
push
cltd
gs
sub
add
dec
rorb
int
sbb
fnsave
sbb
and
jb
popf
inc
test
loope
icebp
je
add
and
mov
mov
jmp
fdivs
sbb
dec
andb
cli
pop
int3
out
pop
outsb
insl
test
jae
or
push
icebp
sbb
mov
dec
jp
stos
sub
and
loope
lods
mov
popf
clc
sbb
cmp
jo
xchg
pusha
mov
pushf
add
and
mov
or
imul
mov
into
cmc
pop
shr
jb
fwait
push
or
mov
dec
fxch
inc
stc
into
jns
insl
jo
xchg
aaa
lods
out
inc
test
adc
leave
mov
mov
mov
mov
mov
test
js
out
mov
mov
es
or
inc
imul
jle
loope
stos
fiadds
pop
pop
repnz
mov
mov
int
push
push
push
push
mov
enter
cltd
outsb
mov
push
sub
xchg
leave
jnp
jae
push
sub
jp
cs
imul
das
push
dec
jg
sub
mov
lds
out
repnz
xchg
imulb
and
je
test
xor
call
push
cmp
faddl
in
pop
cmp
and
imul
pop
lods
xchg
jge
in
mov
js
movhps
scas
xchg
jl
jns
jge
ds
sbb
repnz
mov
fisttpl
adc
push
xor
dec
adcb
aas
in
push
roll
jl,pn
popa
js
xchg
push
jecxz
adc
xchg
jmp
lahf
pop
fs
pop
movsb
add
jns
idivb
fcmovnu
outsl
outsl
add
fmull
lods
das
call
mov
mov
add
test
rorb
lds
notb
or
and
mov
cld
pushf
hlt
ret
sbb
push
in
or
popf
test
aad
js
sti
pop
rclb
hlt
push
push
jecxz
pop
sub
lock
jne
mov
pop
outsb
push
dec
subl
and
push
loope
or
call
jo
adcb
in
outsb
test
out
lods
stc
xor
mov
jg
mov
xchg
sarb
lock
pop
jo
jnp
dec
push
lcall
das
mov
ficompl
scas
xchg
push
lret
sbb
flds
insb
xor
xor
call
mov
out
insb
pop
sbb
push
cmp
sti
xchg
cmp
dec
insb
aad
in
icebp
rorl
aad
in
fsubr
pop
jge
popf
or
out
adc
pop
bound
xchg
jnp
mov
mov
incl
rorl
mov
xchg
push
out
lock
jb
adc
enter
sbb
push
cmp
mov
arpl
addr16
dec
jmp
push
sbb
fsubrl
mov
ljmpw
cmpsl
hlt
cmpsl
cmp
mov
lock
inc
adc
push
cmpsl
ret
adcl
rclb
lods
xchg
add
mov
and
jl
and
mov
jno
pop
cmp
loope
mov
inc
in
push
cmp
aam
jmp
pushl
fdivr
ret
mov
in
and
mov
imul
mov
outsl
sti
push
mov
loope
ja
mov
repz
aaa
sub
out
mov
xchg
pop
imul
mov
outsl
adc
hlt
fwait
inc
hlt
mov
push
clc
mov
adc
ret
mov
mov
repnz
xchg
pop
aaa
ljmp
pop
frstor
sbb
push
xorb
aaa
test
stos
adc
cmp
enter
call
cwtl
adc
lea
dec
xorl
mov
cs
push
movsb
jl
cmc
out
or
fidivrs
jbe
mov
xchg
mov
ficoms
cli
or
xchg
and
shrl
cs
xchg
lcall
inc
and
mov
jp
jne
xchg
adc
sub
stos
shlb
insb
mov
rolb
leave
aaa
gs
ret
shll
xchg
mov
adc
or
sub
jecxz
or
cltd
lods
rcr
mov
mov
subl
inc
lret
rolb
dec
sti
mov
jne
cmp
mov
repz
jecxz
fimull
dec
stos
lods
negb
cwtl
sub
orb
lret
sbb
push
pop
insb
repz
sarl
movsb
lods
cwtl
pop
mov
push
ror
pusha
xchg
xchg
cli
imul
xchg
arpl
pop
cltd
jmp
push
pop
insb
pop
stc
jno
divb
mov
mov
sbb
in
ret
ss
inc
je
cmp
mov
push
mov
int3
mov
jmp
shll
pop
xor
imul
lods
or
or
popl
mov
inc
shr
and
push
daa
cmp
sbbl
repnz
cld
mov
repnz
fists
push
mov
and
or
jg
pop
lds
xchg
xchg
mov
imul
lcall
and
incl
jne
fs
in
jae
push
jle
push
dec
out
in
pop
cs
or
pop
lret
inc
mov
fcomp
loope
pushl
lret
ret
xchg
and
push
dec
cmp
sbb
lods
push
in
lret
sbbb
outsl
imul
inc
lret
adc
int3
mov
dec
dec
and
mov
or
loop
pop
mov
sub
stos
jg
mov
cmp
mov
or
push
mov
fimull
push
inc
xor
push
xor
insl
add
popa
sbb
or
adc
xlat
pusha
scas
gs
or
into
jb
xchg
data16
in
cmp
enter
mov
add
repnz
shlb
cmp
pop
mov
cmp
aad
xor
and
cmp
insb
data16
pop
or
leave
mov
sarl
and
dec
inc
popf
cmp
out
scas
test
ds
nop
ds
or
bound
sbb
lret
or
sbb
arpl
sti
repnz
xchg
ret
xchg
negl
and
bnd
mov
mov
aaa
mov
test
int
mov
icebp
cli
or
or
ds
jne
and
xchg
insb
mov
dec
xor
inc
stos
xchg
inc
arpl
aas
adc
outsl
loopne
jae
cltd
ss
adc
aaa
clc
test
or
adc
jbe
inc
adc
inc
push
adc
pop
dec
jmp
sub
enter
and
xchg
iret
or
mov
jo
push
jo
aas
add
add
pop
adc
xor
cmpsl
dec
adc
pop
rolb
das
andl
movd
inc
cmpl
add
adc
pusha
xor
push
icebp
dec
repz
mov
mov
inc
ds
pop
bnd
ss
xorb
out
sbb
ljmp
jne
movsl
mov
add
or
stos
xlat
mov
jg
sub
lock
inc
stos
movsb
lret
outsl
test
cmpb
and
vmulsd
add
mov
sarl
testl
lret
pop
into
mov
mov
mov
sbb
xor
mov
addr16
pop
ja
lahf
xor
pop
inc
into
cmp
in
xor
aam
sbb
es
cmp
mov
int
adc
ficoml
nop
ss
adc
mov
sub
cmp
lcall
repnz
xchg
pop
sbb
adc
cmpsl
fldcw
sub
cmp
lea
jl
jg
sub
xor
mov
outsb
fcom
dec
in
sub
outsb
cmp
mov
mov
sub
cmp
popf
lods
pop
fldenv
xchg
loop
sub
mov
dec
ja
sub
mov
and
jb
push
mov
inc
mov
add
push
mov
pop
mov
xchg
cmp
arpl
sub
fcoml
push
push
cmp
mov
inc
fsts
test
xlat
shr
fistps
add
or
ja
xchg
scas
jg
push
ss
into
push
dec
mov
xchg
aaa
jge
sub
mov
adc
out
xor
aad
aad
jns
repz
mov
aas
test
dec
or
jl
ljmp
lahf
cmpsl
pushf
pop
adc
in
fwait
outsl
or
pop
push
lods
sahf
push
jecxz
lea
mov
popf
sbb
dec
pop
xchg
adc
cs
bound
cmp
push
push
lcall
mov
and
or
cli
int3
fdivrl
inc
outsl
push
add
cmpl
in
sar
adc
pop
push
add
insb
xor
incl
cmpl
pop
jecxz
adc
jmp
divl
arpl
mov
dec
int3
int3
or
jecxz
push
stc
cmp
jno
in
call
sti
push
insl
rcll
xor
arpl
push
lahf
arpl
push
test
decb
push
xor
je
sbb
shll
mov
pop
data16
cmp
and
xor
lcall
cmpsb
xchg
or
sbb
fs
dec
dec
aam
jp
or
mov
jge
cs
and
mov
mov
xor
insb
test
add
xor
in
fmul
cmpsl
fs
dec
fbld
mov
xor
mov
mov
push
push
dec
xchg
cmp
stos
mov
flds
loope
lcall
pushf
mov
lds
lcall
add
mov
cmp
push
ret
stos
and
jmp
lock
mov
adc
xor
sbb
outsl
dec
lret
adc
mov
and
jmp
ficomps
sbb
mov
mov
xchg
or
lods
out
stc
sti
repnz
leave
cmp
lahf
aad
das
int
push
or
push
mov
xchg
add
lret
stos
fists
jge
adc
sahf
pop
pop
adc
es
jnp
inc
push
xchg
movsb
push
mov
in
bound
and
icebp
inc
pop
std
cmp
mov
shr
pop
ja
out
lcall
sub
jbe
lock
xor
and
stc
add
fucomi
sbb
lret
push
xchg
int
jnp
ss
adc
call
jo
lahf
outsl
push
mov
mov
insl
out
je
daa
or
adc
leave
push
mov
xor
sbb
aaa
test
in
fs
mov
sbbb
pop
repnz
stc
dec
sub
push
loope
nop
cltd
leave
jg
dec
sub
xchg
inc
mov
xchg
dec
pop
pop
fnstenv
mov
stc
in
inc
mov
cmpsb
dec
lret
and
and
dec
fnstsw
and
outsb
int
test
mov
or
mov
loopne
ss
loope
xchg
lods
movsl
out
sbb
jns
sbbl
and
sbb
or
dec
push
cmp
mov
pop
addr16
ljmp
sbb
in
and
adc
enter
dec
outsb
filds
inc
in
lcall
mov
push
xor
jb
iret
mov
xchg
xchg
cmp
mov
adc
test
xchg
cmp
sub
test
call
sbb
jo
mov
xchg
jnp
int3
cmp
loop
dec
cmp
leave
iret
add
inc
bound
test
rolb
or
lods
push
leave
mov
jo
enter
inc
inc
leave
jp
xor
unpckhps
mov
adc
pop
outsl
or
insl
dec
dec
imul
jns
in
mov
xor
mov
mov
out
popa
or
fisubs
jecxz
call
or
int3
jno
in
out
inc
cs
mov
cmp
mov
pop
cmpb
pop
icebp
push
ljmp
pusha
sahf
sbb
ljmp
scas
sub
iret
imul
mov
repnz
mov
out
scas
call
mov
call
xchg
pop
mov
push
insb
test
rolb
add
push
xor
test
mov
pop
push
jg
xorb
push
pop
cld
mov
xor
adc
push
pop
xchg
pop
in
push
xchg
mov
sub
int
adc
dec
loope
pop
aas
sbb
push
mov
adc
pop
jae
mov
and
stos
aas
inc
lea
jp
ss
sub
enter
xchg
aaa
add
pop
scas
mov
dec
enter
mov
dec
jl
inc
fistps
pop
sub
cmc
jnp
dec
xor
jno
or
inc
mov
dec
sub
mov
xor
test
inc
add
out
aad
arpl
sbbb
lods
dec
movsb
mov
cltd
ss
repz
aad
cmpsb
sahf
data16
pop
jp
or
adc
popf
out
jbe
es
test
push
mov
insb
inc
stos
cmpsl
outsb
nop
rcll
scas
jg
loope
aam
call
scas
sub
cmpsl
and
testb
mov
xor
jl
in
lahf
outsb
fs
and
mov
push
gs
js
cmp
cwtl
icebp
mov
inc
insl
insl
sbb
or
aaa
sar
stos
pop
and
sub
loopne
repz
or
xchg
cmc
aad
adcl
shll
cmc
sbb
outsb
xor
mov
neg
mov
cmpsb
xchg
in
ds
addl
rorb
pop
into
pop
dec
pushf
sub
push
cmp
arpl
repz
push
rorl
inc
and
rolb
pop
xchg
jbe
adc
je
scas
pop
insl
jne
std
push
dec
test
aas
cwtl
stos
ja
or
push
jmp
outsb
push
out
sbb
bound
xchg
or
call
cmpb
add
add
fidivl
jmp
out
jl
testb
xor
jecxz
fucomi
pusha
ss
push
mov
sub
xchg
jb
int3
pop
aad
stc
arpl
add
data16
lods
ja
cmc
inc
out
movb
add
mov
lret
inc
test
pop
or
cmp
inc
into
outsb
jp
inc
xchg
or
lret
sub
bound
lods
mov
lods
cltd
xor
dec
leave
pop
sub
jg
mov
dec
lock
xorl
inc
imul
dec
xchg
andb
fsts
xorb
inc
push
das
or
push
jg
adc
mov
scas
fdivs
clc
or
loope
cli
call
in
mov
mov
lods
xchg
fisubs
daa
imul
lret
shll
mov
addr16
sub
sbb
imul
sbb
cltd
cwtl
cmp
xlat
pop
add
xor
pop
sbb
lret
mov
shrb
ds
pop
hlt
leave
out
iret
aas
jg
test
divb
mov
dec
xor
subl
stos
adc
lods
out
pop
arpl
mov
int
xchg
inc
mov
fnsave
mov
cmp
inc
mov
adc
out
mov
das
lahf
aad
test
sahf
gs
sub
movsb
lods
icebp
imul
mov
and
mov
scas
out
les
test
loopne
out
cmp
test
and
insb
sub
cld
adc
mov
xor
ret
filds
testb
adc
rcrl
push
lahf
testb
inc
inc
jb
fidivrs
nop
pop
int3
xchg
sahf
lods
fcmovnu
jns
daa
and
or
fcmovne
arpl
push
push
xchg
mov
pop
push
ds
clc
sarb
stos
sub
in
mov
xchg
push
fwait
out
jno
push
push
inc
bound
push
cli
aas
inc
xchg
cmpsl
cmp
int3
xchg
sbb
jno
cmp
jnp
int
dec
mov
scas
test
xchg
cmpsb
jl
testl
imul
or
dec
inc
push
mov
lea
sub
push
pushf
inc
xchg
xchg
divl
lods
sahf
mov
in
and
lods
xchg
adc
inc
add
sub
rcrb
xor
jmp
add
pop
jle
or
sbb
in
cmpsb
pop
into
add
fnsave
push
test
int
add
mov
xchg
mov
and
js
nop
nop
aam
pop
adc
std
xor
inc
sahf
mov
inc
xchg
mov
in
fisubrl
out
int
and
and
adc
dec
sub
in
fisubl
testb
or
xor
jle
dec
in
jnp
push
push
mov
and
lock
sahf
test
sub
or
cmp
dec
adc
in
jl
pop
and
push
pusha
scas
mov
sbb
cmpsl
in
ja
insb
stc
xchg
stc
les
call
xor
mov
xchg
mov
cmp
add
fldenv
dec
insl
pop
mov
sbb
jb
loop
pop
rcrl
inc
fdivl
dec
adc
push
and
or
dec
pop
xor
xor
jae
insl
mov
jne
sub
shrl
ljmp
or
jl
mov
andl
cli
cli
pop
cmp
and
push
ret
inc
sub
jg
shrb
lds
movsb
and
push
test
lds
lds
ds
hlt
jecxz
jnp
cmpsl
xchg
jg
cltd
aas
imul
fdivl
cltd
dec
test
mov
fnstcw
rorl
enter
pusha
seta
jl
push
das
or
push
push
and
lods
lret
aas
scas
sub
es
mov
js
pop
inc
pop
ds
lcall
jl
leave
or
cmp
pusha
imul
imul
into
mov
adc
xor
push
pop
lea
sub
mov
aam
popf
loopne
xor
add
jo
mov
xchg
mov
shr
xor
add
fsub
xlat
out
stos
adc
inc
out
cmpsb
out
in
pop
stos
jl
in
aad
lods
push
push
cmp
xchg
insb
and
pop
lods
sbb
lahf
decb
cltd
dec
pop
not
pop
mov
dec
or
and
gs
shl
and
xlat
fwait
repnz
jne
lcall
in
dec
jge
std
pop
cmc
ja
gs
call
pop
mov
dec
test
cltd
idivl
mov
dec
xor
daa
jge
das
add
cmp
nop
test
jno
cmp
rclb
test
sub
adc
inc
mov
int3
pop
cs
and
dec
sub
cmc
pop
inc
incl
sub
push
dec
das
stc
cmc
cmc
test
push
push
shlb
push
mov
pop
mov
jbe
iret
flds
jl
and
lea
rorb
lahf
mov
xchg
xchg
adc
adc
lds
xchg
aas
int3
aad
data16
adc
push
out
test
int
adc
jnp
ret
xchg
push
xchg
testl
mov
dec
pushf
mov
sub
mov
mov
outsb
mov
faddl
inc
mov
shl
stc
jmp
loope
mov
push
mov
add
adc
push
and
or
test
outsl
ds
jecxz
lods
in
pop
mov
xchg
mov
push
es
mov
jl
ljmp
ret
jecxz
mov
in
add
out
inc
mov
ret
sarl
inc
js
xchg
loope
in
testb
cmp
loop
divb
cmp
or
stos
fiaddl
fistpl
or
idiv
out
adc
call
xor
test
mov
in
ss
addl
notl
fwait
sti
lahf
sbb
dec
xor
push
and
dec
mov
pop
inc
out
sbb
xchg
outsb
leave
cmp
jmp
int3
xor
sub
gs
jmp
or
or
and
jp
mov
imul
insb
mov
and
xchg
std
lret
orb
mov
lret
stos
fs
out
je
aaa
mov
fmuls
push
or
ljmp
idivl
insl
push
pop
jg
arpl
fistpl
mov
stc
cmpsb
es
add
dec
mov
outsl
pop
pop
jle
dec
in
dec
loop
stos
loop
roll
adc
sbb
arpl
cmc
mov
cmp
fidivl
inc
jmp
andl
jl
push
stc
insb
notb
fadds
pusha
xor
fldt
int
dec
jge
fistpll
dec
bnd
xchg
lds
das
adc
or
mov
xor
add
mov
js
test
mov
test
inc
decl
mov
sbb
imul
jl
cmp
dec
rcr
movsl
mov
jne
enter
fdivp
sub
jne
dec
cmpsb
sub
dec
or
xor
bnd
push
sbb
imul
outsl
pop
ljmp
lcall
inc
cmp
ss
dec
dec
call
add
or
dec
aas
xor
jp
fs
stos
pop
int3
mov
xchg
or
andb
call
std
out
jecxz
notl
mov
jno
jbe
jo
pop
cmp
cmp
xchg
or
leave
mov
or
mov
sbb
dec
in
mov
adc
imul
fs
mov
add
cmp
mov
aaa
imul
repnz
fucom
fisttpl
pop
loope
mov
mov
jp
add
xchg
sbb
mov
into
pop
ds
adc
xor
lds
fmul
inc
inc
fdivrs
xor
inc
or
loop
push
mov
mulb
dec
shl
dec
ficomps
mov
push
jle
movsl
daa
mov
cmp
testl
sub
dec
add
frstor
or
cmp
aas
in
xor
lods
enter
cwtl
ret
notb
mov
cmp
cmp
subl
imul
js
jb
shlb
and
mov
pop
jge
dec
loopne
or
je
mov
cltd
fldl
cmpsb
lcall
push
sub
add
cmp
xchg
sbb
mov
adc
lods
cltd
dec
test
mov
mov
add
push
fcoms
jns
jecxz
outsb
cmp
and
fildl
xor
into
scas
pop
and
push
mov
cmp
lds
stc
sbb
popa
xor
pop
adc
and
inc
push
ss
adc
or
in
lods
sub
inc
cmc
dec
lea
arpl
or
cwtl
push
repz
cwtl
add
lds
cli
mov
jge
out
cmp
jle
xchg
js
mov
jne
push
insl
add
push
clc
popa
mull
add
push
pop
je
lret
fimuls
hlt
cmp
push
push
daa
jnp
int3
out
in
fwait
jbe
add
sub
inc
pop
sbb
inc
xchg
ljmp
xchg
inc
and
test
xchg
popf
adc
mov
pop
repz
push
shrb
and
push
sbb
das
into
push
xchg
out
sub
pop
std
ret
test
scas
jl
cmp
cmpsl
cwtl
into
mov
and
mov
dec
jns
sbb
icebp
out
cmp
pop
xor
enter
fidivl
lcall
outsb
sbb
fldcw
pop
out
xchg
xchg
or
dec
inc
aaa
inc
xor
mov
add
ja
pop
cmpsl
jnp
call
insl
js
ljmp
in
mov
jmp
xchg
jbe
addr16
cmp
addr16
dec
xor
mov
call
dec
mov
cltd
scas
out
int3
icebp
adc
into
jge
mov
xchg
add
mov
adc
in
fwait
in
push
mov
cmovs
mov
or
aas
cmp
sbb
dec
and
cmc
movsl
adc
andps
aas
fucom
rorl
movsl
js
ss
mov
lret
add
clc
test
sbb
in
add
test
xchg
js
pop
mov
cwtl
fimull
xor
xchg
or
inc
dec
stc
lods
mov
into
aas
lret
dec
xlat
inc
pop
inc
leave
lds
xchg
ja
mov
adc
popl
pop
lock
hlt
pop
lock
pop
xchg
pop
arpl
adc
mov
fadds
cmp
ljmp
jo
test
and
or
addb
ds
jge
or
jno
xchg
sbb
es
adcb
adc
xchg
jmp
mov
xchg
jle,pt
pop
cmp
jge
mov
repnz
cmc
ffreep
pop
insl
int3
sbb
mull
pop
xor
mov
pop
decb
das
leave
mov
into
add
xchg
inc
addr16
lds
cs
out
fcmovne
xchg
mov
lods
out
nop
scas
sahf
cwtl
adc
insb
cli
xor
xchg
push
mov
push
inc
hlt
cmp
lea
call
sub
leave
addr16
and
and
inc
sub
jge
inc
push
mov
addr16
iret
mov
mov
sahf
dec
shlb
iretw
cmpl
push
pop
push
in
outsl
or
xchg
adc
testl
jge
push
cmp
pop
push
xorb
nop
adc
push
pushf
loope
shlb
mov
out
not
dec
insb
rcll
repz
or
mov
lahf
xchg
imul
int
jnp
mov
test
pop
sarb
mov
or
outsl
inc
cmp
repz
pop
lds
movsl
add
push
jnp
ret
jnp
icebp
popa
pop
adc
mov
mov
inc
stos
je
push
and
mov
add
hlt
pop
ja
xor
dec
dec
fdivl
cmpsl
nop
jae
dec
decb
xchg
fwait
adc
lods
jb
lds
pop
mov
sub
mov
jbe
mov
mov
out
mov
lcall
cltd
add
inc
dec
mov
jg
stos
push
pusha
dec
mov
sub
and
int3
mov
inc
ss
cmp
mov
mov
movsb
xor
mov
pop
and
push
call
adc
inc
movsb
out
dec
rol
gs
cmp
adc
in
push
and
cwtl
adc
loop
sbb
ret
scas
ja
aas
jmp
push
bound
stos
pop
adc
or
sbb
dec
push
bound
push
xchg
mov
repnz
dec
xchg
xlat
sbb
or
popl
push
mov
rolb
lret
cmc
inc
jl
lret
jmp
cmpsl
inc
stc
mov
pop
xor
orb
jae
stos
jae
dec
imulb
fisubl
dec
mov
cmp
faddp
ficoml
dec
push
or
mov
and
test
xor
jge
scas
push
push
mov
je
adc
cld
mov
int3
push
mov
xor
mov
clc
rcrb
or
scas
mov
mov
int3
push
jb
movsl
iret
jno
inc
stc
jle
xor
subb
xchg
jecxz
mov
add
dec
mov
sub
je
mov
jno
adc
call
mov
cmp
jg
pop
cltd
in
sub
fbld
in
cs
xchg
adc
shr
loope
xor
pop
sbb
js
fbstp
ss
hlt
repz
hlt
adc
mov
xchg
sbb
mov
ja
cmpsb
into
or
push
es
lret
ja
ficompl
cmp
cmp
inc
dec
cld
gs
std
nop
inc
xchg
ss
xlat
lret
mov
cmp
adc
imul
outsl
insb
mov
dec
dec
jle
rcrb
fiadds
cmp
push
repnz
push
fs
fistpl
xchg
mov
imul
imul
mov
and
sbb
mov
fadds
ficoms
in
cld
push
imul
xchg
adc
gs
mov
pop
mov
push
ret
inc
into
aad
push
call
cmp
cwtl
roll
push
jns
push
mov
mov
and
sbb
repz
test
mov
popf
cmp
pop
mov
test
stc
mov
mov
in
mov
pop
pop
xchg
fdivr
in
jns
cmp
adc
sub
sub
sbb
xor
ja
movsl
sahf
pop
in
movsb
lods
daa
ja
rclb
inc
test
push
xor
jl
out
xlat
mov
adc
jnp
mov
sub
enter
cwtl
loop
cmp
addr16
adc
scas
xchg
or
xchg
test
xor
add
hlt
js
dec
daa
mov
sub
jb
in
outsl
inc
dec
mov
pop
test
pop
test
sub
nop
mov
fwait
jmp
ljmp
mov
xchg
stos
cmp
adc
jecxz
inc
aam
iret
jmp
mov
cmp
rcrb
cmp
rcl
dec
xor
fcompl
pop
pop
inc
add
inc
daa
mov
mov
test
mov
dec
dec
orb
adc
adc
inc
icebp
sti
testl
sbb
xchg
pusha
xor
es
movsb
loope
jns
lods
mov
mov
add
sbb
mov
ds
roll
ret
aad
bts
push
jge
test
cmc
inc
in
hlt
cmp
jnp
rorb
fildll
enter
and
negl
jecxz
shll
jo
fs
loop
test
mov
cmp
int
ja
or
shrb
inc
mov
cli
cmp
or
inc
mov
or
mov
and
fs
mov
push
xor
push
pop
and
add
dec
movsb
mov
popf
jae
aad
icebp
xor
movsl
jae
jno
inc
in
adc
fldcw
sub
mov
mulb
lea
jne
outsl
jge
in
cmpsl
into
int3
jo
xchg
mov
mov
xlat
sbb
sub
mov
aaa
pop
and
mov
sarl
in
sub
push
xchg
lret
nop
mov
push
xorl
cmp
add
nop
fiadds
jp
fists
enter
call
mov
out
sbb
into
jp
popa
sub
jb
sti
sarl
or
jns
insb
cmp
mov
mov
pop
or
sbb
jns
xchg
adc
add
sub
pop
inc
xchg
push
push
sub
jmp
pop
xorb
jg
inc
push
jge
and
repnz
enter
xor
jmp
in
cmpl
mov
ja
push
pop
stc
sub
cld
leave
out
pop
jecxz
cli
std
mov
push
es
shl
lcall
xchg
stos
push
mul
inc
mov
cmp
add
push
ljmp
in
mov
cmp
xchg
xor
adc
neg
incb
xchg
pop
adc
xor
outsl
cmp
je
clc
inc
lahf
fldl
mov
sbb
adc
call
cmpl
push
cmc
and
sub
jne
jns
sub
cmpb
mov
xor
fcomip
xlat
mov
das
in
push
arpl
xor
jmp
jbe
dec
xor
xchg
mov
je
int3
add
les
filds
mov
je
or
repnz
jbe
mov
fs
sar
cld
fadds
xchg
sbb
sahf
sti
jno
test
test
add
in
adc
or
jp
pop
push
pushf
add
into
xorl
push
jbe
xchg
xchg
clc
lret
pop
leave
dec
sahf
sbb
mov
mov
mov
and
push
cmp
pushl
push
call
iret
test
gs
in
push
jecxz
sub
push
mov
cli
jno
mov
popa
gs
mov
inc
sbb
mov
add
sti
stc
cmpl
notb
inc
ret
sub
dec
adc
cmpsl
out
ret
or
mov
adc
fcmovb
and
mov
xchg
mov
inc
dec
mov
in
fwait
popa
cltd
or
sbb
xchg
add
cmpsb
lock
lock
xchg
add
call
cmp
cltd
push
outsb
mov
aas
mov
or
push
mov
notb
outsb
dec
pop
push
push
dec
adc
jl
pop
sub
pushf
cwtl
fstps
xchg
jl
cs
pop
aaa
pop
cmc
jbe
pop
pop
sub
mov
imul
lret
jbe
cmp
push
sbb
aam
int
push
jne
sub
add
fisubrs
outsb
repnz
jae
mov
test
cmp
popa
adc
cmp
pop
dec
sub
movsb
ror
jns
aas
cmp
xor
adc
jmp
in
lock
pop
stc
sub
xchg
inc
test
test
pushf
fistpl
ret
push
push
xchg
pop
mov
popl
xor
cmpsl
inc
pusha
xor
test
fidivl
stc
lret
fistl
xor
mov
dec
push
add
or
mov
cmp
lret
leave
xorl
add
adc
push
shll
stos
inc
in
rorb
je
cld
xor
pop
add
shrb
add
cwtl
lds
mov
leave
rcll
xor
or
pop
stc
subb
jle
pop
jle
push
jne
lock
mov
hlt
add
out
xor
push
jmp
movsl
out
cmp
mov
jmp
mov
movsb
cmp
std
mov
mov
jl
loope
sbb
and
out
mov
out
push
ds
int3
dec
adc
lret
push
sbb
pop
xchg
pop
mov
mul
fwait
jne
ds
mov
movsl
inc
xor
out
and
insl
jns
bound
lock
negb
icebp
inc
out
mov
xor
ja
aaa
mov
cmpsb
dec
dec
pop
aas
fldl
jg
or
xchg
stc
pop
insb
loop
inc
aas
stos
xor
cmp
inc
mov
loop
push
in
or
xlat
sbb
iret
jno
jge
clc
adc
mov
je
xlat
pop
ficompl
sub
fdivrs
dec
les
sbb
add
xchg
and
xor
push
add
jge
xor
add
in
add
cmpsl
xchg
jl
sub
inc
xchg
jecxz
lahf
jns
mov
mov
testl
mov
sbb
cmc
je
jg
call
xor
fcoml
jo
sbb
clc
inc
push
mov
cmpsl
dec
iret
dec
imul
jg
test
xchg
push
mov
pop
adc
loopne
mov
fistl
inc
cs
andb
loopne
xor
xchg
sbb
or
cmp
or
mov
sbb
in
cli
mov
sub
or
adc
jmp
call
mov
push
pusha
mov
jns
into
ljmp
xchg
pop
sub
out
jmp
or
int3
mov
mov
jbe
jne
scas
pop
rcll
mov
dec
movsb
mov
scas
pushf
and
pop
dec
scas
scas
jne
dec
int3
mov
lea
rorb
clc
stc
adc
push
cmpsb
and
lahf
adc
pushf
pushf
adc
outsb
sub
lret
lcall
adc
lods
loopne
mov
xchg
push
inc
mov
add
pop
mov
push
icebp
xchg
pop
scas
mov
sbb
loop
adc
nop
cmpb
fadds
int3
fidivl
loope
mov
jne
jbe
dec
mov
cwtl
jns
insb
push
cmp
cli
cltd
imul
filds
cmp
test
into
or
ss
mov
rolb
cmp
fs
rcll
fnstenv
cmp
add
lds
push
mov
notl
addr16
bound
sbb
xchg
aam
js
and
jmp
test
lret
cld
cmp
cli
ret
mov
jae
push
xlat
inc
daa
je
xchg
popa
push
xor
ret
mov
mov
cmp
out
in
pop
fxch
std
and
adcl
xor
dec
mov
arpl
in
testb
mov
inc
pushf
cmc
jl
mov
ficoms
push
xchg
lods
insl
jnp
fiadds
jo
mov
inc
adc
movsl
adc
mov
es
and
sub
cmp
pop
push
loopne
push
cs
jmp
arpl
dec
ds
shlb
push
test
pushf
xchg
lods
jg
jmp
test
mov
inc
lcall
loopne
push
lods
and
inc
and
pop
mov
lds
hlt
pop
add
push
cwtl
push
and
jo
mov
movsb
rolb
xchg
dec
jmp
movsl
lahf
pop
dec
inc
mov
mov
vpshlq
add
cltd
out
xor
xor
mov
jnp
neg
inc
lret
or
jle
push
int
cmpb
div
leave
sub
ror
in
dec
mov
addl
ret
int3
nop
adc
add
dec
scas
in
pop
clc
mov
int3
fistpl
in
jbe
shrb
scas
jnp
ret
out
outsl
pushf
inc
js
add
test
leave
popa
mov
popf
dec
cmp
repz
daa
in
into
xor
sbb
mov
fstl
jnp
insb
mov
mov
cmp
lahf
sbbb
push
jecxz
mov
sarb
and
test
pop
leave
xchg
or
adc
inc
push
popa
add
jae
fucom
cli
insl
and
test
cmp
mov
shrl
mov
cmpsl
leave
adc
dec
jle
xchg
sub
cmpsb
ja
pushf
lcall
cmp
shrb
aam
pop
mov
pop
ljmp
add
inc
rcr
icebp
js
movsb
xor
push
cmp
imul
les
mov
and
mov
fcomip
xor
xlat
xchg
ljmp
mov
stos
jmp
xchg
mov
or
push
aas
in
shrb
aas
sub
mov
das
in
xlat
cmp
sbb
push
int
pop
adc
repz
test
adc
addr16
fstpl
push
jmp
daa
movl
into
jae
sub
ret
enter
test
jge
sub
sub
aaa
or
jnp
mov
test
jbe
and
loope
out
inc
push
aam
es
or
test
inc
lret
in
push
gs
sbb
cmp
sahf
jb
repz
mov
lock
mov
add
mov
int3
mov
pop
test
pushf
inc
imul
jnp
iret
outsl
push
inc
pop
xor
lret
fnstcw
std
in
sarb
idivb
xchg
ret
push
mov
sbb
xchg
mov
lods
mov
mov
orb
fistps
and
sahf
cmpsl
vcvtss2sd
fabs
xor
subps
cwtl
rclb
adc
mov
jne
inc
lret
dec
in
dec
jns
stos
cmp
inc
sbbl
lcall
ss
stos
loope,pn
inc
lods
adc
xor
sub
or
xor
xor
je
mov
and
pop
or
sbb
sbb
int3
adc
adc
inc
popf
aaa
into
mov
push
mov
sub
cmp
lods
mov
mov
pop
mov
je
adc
out
adc
call
jg
and
push
data16
mov
jnp
mov
ret
xorl
sbb
push
sub
and
pop
ret
lods
lock
push
hlt
popf
cmc
xor
jbe
or
fwait
jne
fnsave
outsl
jo
jecxz
jbe
xor
cmpsl
mov
dec
addb
loop
cmpsl
sahf
adc
enter
mov
fnstcw
jns
scas
ja
sub
idivb
pusha
sub
xor
fdivrs
sbb
jle
xchg
cltd
mov
lds
cld
jmp
or
stc
mov
jae
cli
mov
or
inc
movsb
lcall
call
inc
cwtl
sbb
push
inc
sbb
jnp
pusha
push
mov
addb
loope
adc
mov
sub
outsb
data16
add
pop
xchg
scas
and
das
icebp
push
imul
dec
sbb
out
push
mov
in
pop
dec
cs
mov
add
cli
arpl
sub
js
rcrb
cld
mov
divb
pop
lods
aad
pop
mov
pop
mov
into
cli
cmp
out
add
jno
imul
mov
scas
xor
push
dec
shll
add
jne
addr16
stos
add
xchg
adc
mov
jmp
cwtd
mov
push
mov
shlb
or
pop
push
je
fisubl
aas
insl
mov
pop
mov
sub
pop
scas
and
ljmp
pop
sbb
imul
in
xor
outsl
push
jae
mov
or
xor
jle
int
gs
push
jmp
xor
mov
mov
push
pushf
aam
mov
or
add
adc
repz
mov
mov
mov
fbstp
xor
cmp
repnz
daa
inc
mov
sbb
push
in
sti
sbb
and
push
hlt
lcall
mov
adc
mov
out
xchg
xchg
mov
test
cmp
addr16
add
add
add
out
pop
push
pusha
cs
jge
ljmp
push
add
lock
push
out
sbb
jo
cmpsb
aas
and
xchg
leave
loope
inc
mov
movsb
mov
push
repnz
or
cltd
sbb
pop
adc
mov
pop
inc
mov
mov
outsl
cli
stos
adcb
popf
popf
adc
add
mov
aaa
fidivs
pusha
mov
jp
xchg
or
mov
and
xor
stc
leave
cwtl
xor
sbb
out
dec
std
lods
aaa
int
aas
loope
insl
jl
mov
rclb
in
inc
mov
sbb
fwait
or
mov
xor
sahf
xchg
test
ds
add
pop
or
xchg
insb
adc
jns
xchg
mov
push
sub
pop
xchg
mov
or
daa
mov
pushf
out
push
pop
iret
add
in
les
lods
mov
clc
cld
cmp
xchg
addr16
out
mov
cmp
daa
daa
xchg
sti
mov
mov
push
push
push
jmp
int3
inc
inc
jns
fucomi
lock
outsl
fdivs
bound
leave
mov
stc
fdivrs
loopne
cmc
inc
lock
xchg
pop
adc
jne
cmp
aas
jmp
mov
outsl
testb
add
jecxz
fwait
mov
mov
sbb
into
in
mov
scas
scas
pop
jae
aas
pushf
sbb
shrl
sahf
into
push
or
lock
shrl
inc
out
idivl
addr16
dec
cli
adc
xchg
add
mov
pop
loop
call
cld
mov
arpl
xor
jns
push
pushf
or
in
push
iret
pop
mov
inc
popf
xor
jp
jmp
jmp
dec
push
arpl
movntq
push
aaa
pushl
xor
test
fld
lret
les
lea
je
xchg
mov
mov
xor
out
jnp
lods
xor
push
xchg
pop
inc
mov
testb
xchg
les
mov
mov
jne
sub
mov
add
movsb
sub
sbb
adc
jmp
in
rcrb
sub
mov
pop
inc
test
inc
aas
setne
repnz
push
push
outsb
or
pusha
adc
mov
adc
inc
pusha
pop
add
ja
push
ljmp
cmp
push
and
dec
out
jp
pop
jns
sarl
mov
xchg
inc
mov
test
lret
xchg
shrl
lcall
push
sub
xlat
xchg
add
mov
jno
ret
and
add
lods
sub
rcll
add
inc
loop
cmc
adc
mov
loop
sbb
gs
jmp
popf
fidivrl
push
xchg
xchg
into
inc
cmp
cmpsl
push
lods
addb
lea
add
lcall
jbe
daa
sbb
mov
push
pop
shll
pop
jae
adc
or
add
repnz
sub
cmp
mov
xchg
mov
pop
add
inc
testl
ljmp
lcall
xchg
pop
ficomps
xchg
inc
mov
push
cmp
in
fldt
push
aam
jecxz
sahf
pop
dec
xor
dec
mov
or
xor
scas
cmpsb
cmp
mov
xchg
inc
adc
sti
mov
pop
fsubs
in
nop
test
add
mov
push
jge
inc
add
dec
push
mov
mov
outsl
testl
push
add
cmp
or
or
xchg
inc
test
insb
in
inc
xor
jecxz
or
xchg
sahf
pop
and
lahf
dec
xor
cmp
pop
fs
inc
repz
scas
lret
or
pop
and
pop
pusha
dec
insl
jecxz
mov
sti
pop
jp
shll
cmc
sbb
push
push
xor
clc
mov
jl
pop
xorb
stos
and
jle
hlt
pushf
scas
adc
ret
jmp
into
xlat
or
lds
dec
pop
in
xor
loopne
pop
mov
xchg
mov
jbe
call
jbe
lahf
minps
sbb
in
cmp
pop
inc
into
scas
test
adc
mov
dec
add
mov
sbb
lock
in
pop
ret
cmp
mov
aas
test
jmp
sahf
jne
mov
and
jnp
and
xchg
shlw
mov
jno
sbb
ficomps
call
addr16
or
pop
pop
mov
jmp
jno
adc
pop
movsb
jnp
clc
push
pop
gs
leave
cwtl
out
mov
movsb
orb
and
or
nop
adc
fcomps
pushl
std
out
call
mov
fs
or
dec
cmp
fidivs
sub
cmp
inc
jnp
xlat
mov
inc
xchg
je
add
repnz
std
testb
lds
je
adc
das
sbb
or
fs
test
jbe
or
pop
xor
mov
in
add
pop
fnstsw
cmp
push
ja
push
jecxz
cmp
aad
in
mov
sti
cld
inc
aas
mov
and
push
mov
push
and
in
movsb
jno
push
inc
sti
push
in
repnz
in
mov
push
inc
addr16
out
cli
mov
prefetch
mov
mov
addr16
in
or
mov
lcall
pop
sar
adc
fs
cli
jbe
jge
daa
and
push
jo
jno
sub
mov
mov
add
gs
popf
pop
xchg
pop
dec
iret
mov
jecxz
dec
out
mov
push
inc
push
loope
aaa
xchg
in
lret
xchg
inc
mov
pop
add
mov
in
dec
jne
test
fwait
out
lea
inc
and
ds
dec
mov
push
and
shrl
mov
mov
test
mov
dec
lds
sub
sub
arpl
mov
or
scas
jo
icebp
in
push
or
cmp
cmp
shll
push
cmc
jbe
test
cmp
ss
dec
xor
sub
jns
xchg
shl
adc
xchg
rcr
scas
scas
stos
mov
xor
sub
adc
or
or
mov
xchg
mov
mov
test
xchg
pop
mov
pop
fxch
and
lods
sub
int3
push
mov
lods
xchg
sbb
je
cmp
pop
push
cmpsl
mov
std
push
jo
cmp
shll
dec
jl
mov
push
or
cmp
aas
ret
arpl
jmp
inc
insl
inc
cmp
loop
test
das
das
iret
push
into
imul
and
mov
mov
in
cmpsb
or
or
mov
adcl
ds
pop
mov
dec
mov
pusha
jp
hlt
out
mov
neg
out
mov
or
sub
icebp
daa
or
std
insb
decb
cmp
push
adc
jo
sarb
jge
mov
xchg
xchg
or
pop
stos
imul
js
lock
cli
mov
pop
lds
jno
mov
fnstsw
bound
sbb
add
cmpb
in
icebp
iret
add
xor
sub
in
gs
xchg
insb
xchg
jae
cmc
inc
sbb
test
stc
jbe
push
mov
xchg
xchg
call
and
and
sub
cltd
inc
movsb
mov
cmp
mov
int3
ret
jb
repnz
loope
adc
stos
mov
movsb
push
mov
insl
imul
jne
aaa
add
xchg
lods
mov
mov
jbe
xor
aas
fcoms
divb
inc
mov
outsb
loope
outsb
xchg
fwait
jb
xchg
in
dec
dec
dec
lcall
sub
in
lret
add
push
inc
push
mov
out
pop
xchg
and
pop
xor
mov
and
adc
loope
xor
mov
add
loopne
sti
jb
aad
fcomip
dec
pop
xchg
ds
dec
cmp
mov
fldt
or
ret
loope
sbb
testl
cwtl
xchg
in
adc
mov
dec
test
add
jns
jb
adc
pushf
pop
repnz
and
fldt
loope
lea
add
add
dec
loopne
shlb
push
sbb
adc
ret
mov
pusha
or
jl
sub
out
mov
fildll
xchg
push
rolb
mov
mov
push
shr
cli
adc
ror
insb
pop
pop
ss
pextrw
pop
pusha
or
fistpll
mov
mov
xor
cwtl
es
mov
or
pop
jbe
pop
stos
shrl
ds
aas
mov
or
mov
sbb
cmp
out
hlt
aam
out
cmp
es
mov
movsb
cmpsb
mov
jo
repz
mov
xlat
sub
bound
push
std
pop
sarb
pushf
lock
js
and
mov
adc
cli
daa
daa
jno
ds
mov
push
adc
bnd
push
inc
inc
fs
enter
and
aaa
sbb
adc
std
mov
adc
xor
xchg
sarl
mov
dec
xchg
xor
xor
test
push
cld
mov
in
cs
les
lcall
and
mov
add
cwtl
iret
lret
fyl2x
mov
loop
xchg
std
cmpsl
jmp
daa
lahf
aaa
add
iret
push
arpl
mov
je
loop
call
outsl
ds
push
les
outsb
xor
addr16
shll
popf
lods
adc
push
sahf
jnp
mov
push
dec
dec
outsl
fcmovnbe
push
pop
lahf
lods
stc
cmpb
in
lds
mov
pop
mov
loope
popf
cltd
leave
cs
push
jmp
or
jmpw
clc
and
out
and
jnp,pn
inc
popf
mov
xchg
push
mov
fmull
push
mov
lret
push
xchg
mov
dec
xor
xchg
xor
cli
movq
stos
or
sub
mov
fcomps
xchg
push
push
mov
or
divl
les
push
scas
stos
fcoms
xchg
roll
inc
add
pop
lahf
shlb
adc
call
pop
sarl
test
pop
push
mov
adc
lods
mov
inc
icebp
int
jno
popa
inc
mov
pop
sti
dec
cwtl
ret
xor
mov
and
lret
lds
push
repz
sub
out
mov
test
inc
push
jmp
xchg
jo
or
or
dec
clc
lds
sbb
sub
xor
or
mov
sbb
push
mov
push
push
movsb
js
adc
dec
gs
push
push
jmp
push
aas
lcall
je
inc
xor
inc
notl
aam
sti
pop
mov
inc
mov
jo
xchg
xchg
mov
cwtl
je
out
or
pop
addl
mov
adc
push
mov
test
mov
fdivs
imul
aas
sbb
mov
roll
ret
mov
jns
lcall
push
les
mov
cld
test
insb
jmp
cltd
and
scas
or
test
ss
jg
dec
imul
push
das
fwait
mov
jmp
mov
jbe
daa
test
pop
push
sub
int
inc
rolb
jnp
push
pusha
outsb
xchg
pop
lds
cmp
enter
ja
xchg
out
into
push
mov
sub
ss
out
dec
cmp
insb
dec
dec
jmp
sbb
ret
add
iret
ret
pop
ljmp
stos
xchg
mov
cli
pop
fwait
fwait
mov
in
cmpsb
je
pop
sub
test
notl
gs
and
lea
lcall
imul
cmc
int
lret
or
lea
lret
sbb
add
fnstsw
mov
or
or
sbb
or
sub
adc
insb
xlat
and
cs
sub
mov
pusha
addb
mov
and
dec
sbb
test
insl
adc
arpl
fcmove
xchg
pop
lret
push
shlb
mov
mov
dec
jne
loopne
mov
insb
cwtl
xchg
lds
cwtl
call
in
inc
adc
inc
int
in
out
aad
ss
stos
jne
xchg
roll
aaa
fcomps
js
inc
inc
out
aaa
aad
adc
fsubs
mov
jg
mov
mov
xchg
in
clc
mov
xchg
mov
cmp
mov
mov
adc
aad
call
dec
jb
out
lea
cmp
sbb
pop
lods
dec
xchg
dec
xchg
add
nop
jmp
lret
mov
and
loopne
jl
sub
orb
and
and
dec
and
shl
xor
sub
sbb
cmpsb
fidivrs
mov
test
xchg
pop
movsb
xchg
mov
ret
sarb
xlat
mov
insl
test
icebp
fstl
xchg
mov
cmpl
cmpsl
xchg
xchg
subl
jb
xchg
inc
lds
and
in
clc
mov
stos
test
int3
mov
pushf
imul
rcrb
cmp
dec
js
in
addl
xchg
dec
aas
adc
mov
lcall
or
push
hlt
je
sub
pop
cmp
sub
cmp
xlat
rorl
iret
in
in
bound
xchg
pmaxsw
add
mov
in
scas
scas
xchg
jnp
scas
mov
mov
pop
lock
gs
sub
add
or
dec
std
push
cwtl
lods
mov
out
mov
inc
in
test
nop
mov
das
leave
xchg
ljmp
xlat
mov
test
or
notl
dec
jg
mov
mov
mov
and
adc
xor
into
les
out
dec
call
repz
testl
out
in
pop
push
add
push
fs
repnz
paddq
push
pushf
lahf
mov
cltd
aam
push
jb
push
and
push
insb
jne
test
sub
push
int
pop
aam
add
test
loope
or
jmp
jg
mov
push
outsl
fidivl
sti
nop
mov
jno
stos
jge
xchg
mov
stos
fwait
mov
add
cmp
jne
dec
out
cli
ja
mov
sbb
rorl
xchg
jmp
jno
popa
cwtl
lcall
icebp
sub
sti
cwtl
adc
push
dec
sub
fs
push
stc
adc
cmp
jmp
xchg
sarl
pop
loopne
push
jns
je
push
lods
lods
sub
cmp
mov
out
bound
ljmp
mov
data16
pop
inc
sub
js
sbb
js
leave
cmpsl
inc
outsl
ljmp
gs
cmp
and
sub
mov
in
push
fdivs
lcall
or
jl
add
das
dec
aam
jne
cmp
or
loopne
push
push
jmp
adc
jnp
xchg
lret
addr16
pop
sub
sbb
or
xor
jnp
js
cmp
out
jecxz
lods
fbstp
mov
or
jmp
dec
pop
xor
cmp
mov
push
pop
cmp
dec
sarb
les
push
sub
push
jp
xor
scas
sti
les
jecxz
xchg
dec
inc
or
or
test
ljmp
cli
int3
xchg
lcall
dec
insl
xor
sbb
lods
imul
inc
adc
rcl
mov
xor
and
xchg
subl
mov
mov
lcall
sbb
sbb
ret
lds
cmp
adc
mov
pop
pop
and
enter
xchg
movsb
sub
dec
stos
ljmp
cmp
enter
aas
push
dec
pop
lock
inc
nop
lret
mov
xor
test
jmp
andb
lds
hlt
xor
add
or
sub
mov
fiadds
lret
insb
xchg
hlt
mov
dec
push
loope
into
divb
rorl
xor
dec
mov
fwait
jo
ret
lret
mov
mov
add
pop
and
adc
popf
popa
add
mov
out
sub
and
andb
mov
sub
lcall
fs
or
inc
jle
int
lret
in
pop
mov
or
dec
xchg
add
pop
dec
jno
pop
fldenv
lods
inc
push
mov
push
dec
imul
lcall
adc
hlt
sub
es
jns
lret
lcall
pop
outsl
cmp
movl
pop
adc
sahf
xor
call
or
sub
rcrb
mov
inc
xchg
mov
add
bound
inc
pushf
dec
movsb
adc
rolb
pop
lcall
mov
mov
xorb
jl
pop
jbe
fcoms
jns
lret
mov
adcl
jmp
scas
push
dec
cli
mov
test
pop
pusha
sahf
std
into
push
adc
mov
dec
dec
fisubrl
mov
popa
xchg
xor
add
scas
test
inc
dec
pop
dec
pop
int3
and
adc
lea
mov
cmp
jp
enter
nop
lret
popf
sbb
mov
pop
jl
xor
sub
mov
cwtl
stos
dec
or
adc
pop
int3
call
nop
outsl
jmp
mov
cli
das
jae
xchg
xor
fistpll
mov
sub
stos
jl
aad
or
shrb
and
adc
and
mov
xchg
adc
std
cmp
test
out
adc
sbb
in
dec
leave
pop
bound
or
sbb
inc
push
mov
mov
jo
push
xor
cmpsb
mov
or
xchg
xor
les
sti
pushf
jns
decb
mov
inc
rcll
or
ret
sbb
daa
jne
ror
lods
cltd
dec
sti
xor
jb
not
std
pop
xor
xor
sbb
xchg
jg
fildl
mov
jmp
sub
sbb
mov
cli
mov
je
mov
hlt
pop
and
cmp
jns
mov
jmp
outsb
mov
sbb
push
dec
or
ss
pop
test
rcrb
fsubrl
pop
ret
mov
jmp
mov
imul
iret
jecxz
pop
add
push
push
ljmp
cmpsb
mov
leave
add
jns
in
pop
jb
xor
jp
xchg
jecxz
test
insb
cwtl
sti
sti
nop
adc
cmp
ds
cmpsl
xchg
adc
push
arpl
xchg
mov
jne
fcmovbe
pop
leave
jnp,pt
pop
lret
daa
aas
mov
xor
add
mov
leave
movsl
ja
mov
lret
lret
or
es
sti
push
push
fsts
or
push
pop
subb
jae
dec
ds
push
in
xor
mov
add
xlat
scas
ljmp
jg
sbb
pusha
adc
or
jbe
in
or
fstl
iret
gs
adc
mov
jl
xor
pop
mov
sahf
mov
xchg
and
std
insb
and
or
mov
data16
mov
sbbb
sbb
cmp
xchg
mov
pop
adcl
pusha
cmp
push
or
xchg
inc
sbb
dec
enter
imul
repnz
in
or
adc
pop
bound
fidivs
xchg
pop
cld
xlat
imul
cmc
rclb
sbb
ss
hlt
cmp
fldcw
js
fmulp
xlat
lea
fwait
movsb
fildl
add
fldt
xor
imul
mov
xor
ret
mov
push
and
rcrl
aas
dec
cmpsb
cltd
jmp
pop
mov
jp
aaa
pop
pop
adc
outsb
test
hlt
dec
push
jne
movsl
mov
lahf
icebp
cli
push
rcll
lcall
stos
leave
fs
xlat
jp
push
call
push
mov
push
or
loope
mov
sarl
in
xchg
pop
lods
and
dec
mov
loope
nop
lds
push
xchg
pop
roll
fstps
adc
dec
jmp
lahf
mov
fwait
push
mov
scas
mov
lds
aam
mov
mov
fiadds
sub
mov
adc
lock
push
pop
shrb
add
xchg
aam
jnp
dec
inc
dec
sarw
xor
pushf
dec
sub
xor
sbb
fsubrs
in
mov
leave
xorb
ss
test
mov
pushf
jecxz
fidivrs
push
mov
fnsave
mov
sub
arpl
sub
scas
daa
cli
sbb
ljmp
jmp
inc
add
jne
mov
cmpsl
push
jbe
xchg
mov
cltd
xchg
xchg
inc
push
push
inc
fisttpll
cmc
xchg
loope
mov
in
cmpsb
out
fsubrp
aaa
jno
adc
stos
sub
xchg
mov
test
mov
adc
add
lret
inc
jmp
xchg
xlat
stos
xor
mov
std
call
insl
xlat
xchg
lods
test
int3
pushf
ds
add
pop
sahf
dec
jo
out
scas
and
stos
aam
daa
movsl
xchg
sbb
jae
loop
cmpsl
jbe
enter
sahf
push
inc
cmp
shl
mov
clc
test
fisubs
jnp
sbb
insb
mov
sub
cli
add
jge
cld
repz
sub
out
sub
iret
or
into
push
sbb
push
insb
loope
cmp
mov
pop
stos
pop
jno
xchg
cmpsb
or
or
sbb
sub
sub
jae
inc
add
xchg
push
das
aam
or
pop
mov
pop
push
xor
sub
cli
lds
adc
add
rolb
adc
inc
ss
jp
mov
mov
pusha
insl
ds
mov
cmpsl
rcl
push
mov
lahf
leave
jge
aam
pop
shl
fwait
roll
insl
push
daa
xlat
xor
xchg
or
or
cmpsb
push
test
mov
repnz
clc
mov
adc
cwtl
jnp
pushw
test
mov
jnp
xor
mov
xchg
movsl
ja
xchg
lods
outsb
adc
xchg
push
push
out
xor
call
ss
push
rcrl
je
iret
ss
push
lods
sbb
mov
add
push
add
dec
pop
popf
jecxz
scas
jge
or
or
in
or
and
les
popa
js
cmp
out
mov
xor
lea
or
jb
cwtl
enter
dec
push
test
into
xor
test
ds
xchg
movb
and
ss
cmp
in
lods
pop
test
movsb
dec
fnstcw
js
pushf
inc
pop
fisttpl
gs
xlat
rcll
add
sub
mov
loopne
or
sbb
dec
add
bound
ror
dec
push
add
loope
and
lahf
and
divb
insl
outsl
pop
mov
sbb
sbb
xor
ror
orl
nop
mov
pop
pusha
je
and
leave
mov
bound
fs
xor
adc
xchg
xlat
test
push
das
lcall
data16
iret
sbb
mov
test
aas
mov
loopne
pop
jmp
movsl
fldcw
xor
movsb
mov
stos
or
lods
xor
or
push
mov
sti
and
sbb
or
pop
lahf
adc
fisubrl
sub
aas
mov
cwtl
ds
inc
mov
sbb
or
ljmp
inc
imul
dec
shrl
pop
scas
adc
leave
imul
addr16
jl
nop
imul
add
push
mov
ret
push
lods
xor
adc
jb
cmp
ljmp
inc
push
jl
jns
gs
pop
sub
inc
bound
inc
sbb
jle
mov
push
ljmp
call
testb
adc
arpl
lock
fsubrl
ja
ja
cmp
cld
mov
arpl
sbb
call
fcomip
jmp
cmp
inc
add
sbb
cmp
mov
adc
mov
fisttps
out
mov
push
int
mov
ret
in
aam
adc
push
inc
and
xchg
loope
js
out
mov
jmp
testb
int3
sub
pop
leave
and
mov
loope
or
pop
mov
aam
mov
mov
adc
jg
arpl
inc
cmc
and
sub
pop
clc
push
orl
pop
imul
outsb
test
rorl
cmpsb
cwtl
inc
nop
testb
ss
jne
test
xchg
test
sbb
cmp
rorb
add
and
iret
andl
xchg
js
cli
push
int
lods
sarb
es
pop
xorb
das
test
out
iret
mov
and
std
negb
mov
xchg
sbb
cwtl
xlat
xor
adc
jecxz
add
or
mov
mov
mov
popf
ja
cs
push
adc
divb
xchg
orl
bswap
ret
insb
mov
push
call
add
adc
and
mov
inc
into
xor
rcr
sub
xchg
mov
ror
push
mov
inc
pop
fidivl
dec
adc
sbb
ret
lds
mov
mov
or
loopne
add
or
xchg
pop
pop
cmc
notb
mov
cltd
push
xor
or
push
cld
repz
in
imul
arpl
push
arpl
icebp
pusha
push
mov
cld
loopne
add
dec
xor
mov
gs
sbb
push
leave
sti
sbb
inc
or
dec
aam
jbe
ror
inc
jno
mov
ret
outsb
sub
cwtl
stos
push
punpckhdq
mov
xor
push
lret
mov
aad
xor
mov
xor
mov
inc
or
xchg
jns
mov
sub
mov
fdivrs
dec
mov
lock
inc
xlat
aad
push
dec
and
add
jb
push
jmp
mov
jns
daa
in
xchg
ret
test
xchg
ds
imul
bound
jle
mov
mov
stos
jae
mov
pop
fwait
add
iret
sub
jp
lods
or
jbe
and
adc
lret
push
xor
xor
and
test
adc
mov
cli
push
or
mov
ficoml
daa
push
aad
lret
cmc
inc
add
xor
xchg
pop
aaa
hlt
out
pop
inc
aas
mov
mov
lods
jo
jmp
dec
andl
push
sub
xchg
mov
gs
jnp
pushf
xor
xchg
movsl
mov
fidivrs
or
and
cmp
push
adc
cli
enter
pop
push
and
ret
bound
xchg
mov
aad
mov
jo
sahf
ss
out
adc
ja
xchg
loop
into
inc
jne
arpl
loopne
mov
sub
fsts
scas
in
mov
shrl
push
dec
mov
testb
add
shrl
adc
sbb
pop
xchg
mov
jle
mov
jb
int3
enter
xlat
pop
dec
xchg
push
push
xchg
test
hlt
sbb
in
mov
cltd
imul
std
push
jmp
aam
test
jmp
push
iret
rorl
aas
mov
adc
adc
ds
push
add
stos
inc
cs
jp
jb
pop
aad
jb
jno
daa
loop
and
out
je
inc
mov
jbe
icebp
mov
rep
push
subb
vcomisd
cs
sub
lock
xlat
push
and
mov
xor
sbb
inc
ficoml
mov
sub
inc
mov
xchg
push
lds
inc
pop
pop
push
xor
sbb
out
cs
dec
cmpsb
mov
or
mov
adc
pop
and
push
mov
fs
mov
mov
call
dec
out
aas
lret
mov
adc
mov
aam
stc
outsb
mov
push
pushf
sub
dec
stos
push
mov
fdecstp
ljmp
add
push
sub
cmpsl
es
sub
lock
cmp
ret
inc
mul
idivl
push
mov
fcmovne
xchg
cltd
shr
test
jns
cmp
pop
mov
pop
push
fidivrl
jo
sbb
add
in
mov
add
lds
xor
xchg
int
je
pop
adc
insl
push
mov
sub
in
out
jmp
cmp
sub
xor
add
faddp
loope
ljmp
sub
jmp
scas
cmp
and
dec
imul
mov
pushf
pop
adc
push
and
jg
or
cli
xchg
or
insl
sub
sub
sub
pushf
inc
lcall
cltd
lds
aas
sub
dec
mov
xor
imul
aaa
out
mov
rolb
push
adc
sbb
add
mov
cmc
adc
hlt
jp
xor
clc
xlat
arpl
jns
sbb
cmp
cmp
test
fdivrs
test
lock
add
mov
cld
shrb
dec
icebp
ljmp
orb
jl
push
das
loope
mov
push
test
inc
mov
sbb
or
sti
sbb
andb
adc
add
cmp
sti
insb
ret
xchg
sarb
xchg
fidivl
pop
or
mov
and
cmp
and
lret
cmp
adc
in
or
mov
push
dec
mov
test
rcrl
mov
add
imul
call
adcl
xor
jl
pop
xchg
mov
fsts
mov
roll
bound
sar
lahf
lods
test
pop
jge
adc
push
sub
int
addl
imul
movsb
enter
fs
pop
imul
xchg
hlt
lea
xchg
test
rorb
pop
inc
xor
pop
lods
push
repz
aad
push
dec
scas
frstor
lock
fs
adc
lret
or
into
add
fmuls
aad
or
sub
mov
faddl
lret
fidivl
mov
adc
mov
in
xor
ss
fidivrl
push
jns
cmp
out
cli
xor
lcall
sub
inc
bound
push
cmpsb
inc
imul
inc
pop
addr16
shlb
push
addl
into
dec
push
popf
adc
imul
sbb
pusha
add
leave
filds
xor
mov
fcmovnu
jp
mov
fs
xor
shl
imul
xchg
add
imul
into
outsl
imul
divb
cmp
ljmp
mov
xor
call
aad
add
cs
xchg
pop
cltd
int
pop
imul
pop
adc
pop
and
push
loopne,pn
into
jnp
addr16
mov
push
nop
stos
js
cmc
int3
mov
cmpsb
mov
xor
sbb
andl
insl
popf
add
push
xchg
loopne
test
xor
or
add
int3
icebp
rolb
int3
xchg
jae
fidivrs
cmp
xor
jns
mov
in
cmc
inc
movsb
push
or
aas
pop
add
aam
outsl
hlt
in
notb
imull
mov
jle
aaa
mov
mov
cmp
lcall
sbb
push
pop
sbbb
adc
movsb
xchg
mov
pop
fcmovb
cli
push
adc
xor
cs
subl
adc
mov
std
jns
xchg
adc
dec
fs
loopne
sub
jb
jecxz
jge
ja
sahf
mov
or
jecxz
arpl
sbb
pusha
xchg
sbb
pop
cli
adcb
clc
adc
pop
fcom
movsb
ja
cmpsb
adc
fwait
cmp
xor
push
clc
pop
aaa
rcll
lret
std
or
adc
stos
int
mov
mov
xor
in
cmp
push
pop
pop
sbbl
int
out
or
cmpsl
mov
stos
dec
es
in
adc
jg
mov
pop
add
out
xor
xchg
add
mov
mov
mov
dec
fisubrs
and
sub
movsl
sub
push
mov
mov
testl
sbb
cmp
adc
xchg
sbb
add
dec
mov
pop
mov
inc
xor
cmpsb
fnstenv
fldl
add
dec
aaa
int
scas
lret
aas
sub
push
jmp
jg
repz
mov
data16
sbbl
xor
mov
lret
insl
add
mov
inc
or
jae
pop
adc
push
jnp
adc
jmp
xchg
pop
clc
sub
stos
dec
mov
push
pop
and
scas
xor
xlat
jmp
cltd
jo
push
sar
dec
xorb
xchg
popa
enter
sahf
into
push
pop
push
mov
xchg
dec
sbb
adc
xor
int3
lret
xchg
imulb
jnp
ss
cltd
mov
push
adc
inc
cmp
int
insb
cmp
mov
push
mov
nop
nop
shrb
jb
push
fs
dec
fnsave
daa
xor
jbe
pop
push
int3
jb
mov
inc
pusha
js
pop
or
rolb
fwait
jp
pusha
fdivl
jo,pn
mov
stos
lea
fiaddl
dec
mov
fwait
movb
out
outsl
mov
test
pusha
pop
add
scas
inc
sbb
jge
sub
push
dec
sahf
mov
mov
ss
xchg
cmp
xchg
push
mov
imul
mov
aas
xchg
mov
cmp
xchg
sub
jecxz
mov
fsubrp
nop
and
addl
push
and
and
jge
mov
or
add
movsb
pop
cli
xchg
arpl
ds
movsl
jmp
lds
sbb
add
cmp
or
sbb
outsb
and
cmp
fcmovb
sti
and
xlat
lcall
xchg
rcr
xor
mov
scas
faddl
imul
dec
mov
mov
in
orl
mov
push
dec
aad
sbb
and
fistpl
test
call
push
lret
push
shrb
outsl
add
call
jbe
idiv
jb
cmp
and
jns
or
lret
in
xor
lea
outsl
jo
test
xor
xor
and
sub
out
jo
shlb
push
add
and
in
mul
mov
enter
xlat
ljmp
mov
icebp
xchg
adc
daa
ja
mov
push
in
cs
mov
pop
jae
cmova
or
loopne
push
pop
fs
mov
icebp
ss
xor
data16
lret
mov
in
in
sub
pop
aas
out
call
iret
jae
popf
sub
sarb
mov
push
dec
xchg
out
outsb
in
stos
cmp
flds
xchg
pop
in
mov
mov
add
fbstp
lcall
push
pop
pop
xchg
jne
fsubr
clc
pop
and
enter
add
out
inc
aad
mov
adc
fdecstp
dec
xchg
xor
rcll
pop
fistps
movsl
lret
push
adc
jmp
cs
mov
pushf
and
xchg
mov
lcall
sbb
dec
call
jg
mov
pusha
push
push
fcomps
lcall
xchg
jno
popa
push
in
jmp
pop
cs
in
jmp
in
push
test
sbb
jg
ja
mov
or
jno
jl
lret
aam
mov
icebp
pop
mov
int
sub
movsl
pushf
mov
movsl
push
lds
out
out
cmp
mov
cmpsl
jecxz
inc
cmp
xor
xchg
popf
mov
scas
mov
dec
nop
aas
mov
loope
testb
add
dec
mov
les
sti
lea
test
bound
sbb
das
cmp
xor
mov
stos
pop
movsl
add
adc
mov
xchg
push
mov
and
lret
jnp
or
mov
rclb
leave
scas
inc
push
into
xchg
cmpsl
xlat
dec
jg
add
stos
mov
jns
fsubl
mov
rolb
pop
jbe
loopne
js
push
and
jecxz
mov
nop
cmp
add
mov
bound
mov
mov
in
sbb
aam
push
inc
or
mov
ficoml
inc
lods
out
inc
imulb
inc
bt
data16
pop
icebp
adc
mov
shr
xlat
push
jle
mov
and
dec
test
hlt
dec
mov
add
dec
dec
cmc
mov
popa
into
fdiv
mov
jns
dec
mov
pinsrw
ret
xchg
sbb
fs
push
loop
jge
push
dec
adc
nop
inc
fdivrl
bound
outsb
test
ja
rorl
imul
data16
push
jb
push
jle
xchg
sbb
cmc
jl
dec
jecxz
mov
roll
and
mov
sbb
jge
xor
fmul
popa
push
sub
stos
sti
jne
push
push
inc
xor
pop
insl
mov
nop
push
nop
ja
push
and
cmpsl
adc
add
test
xchg
ret
test
repz
cmc
iret
mov
out
fstp
push
loop,pn
loopne
fidivrl
ljmp
hlt
jecxz
ljmp
inc
divb
push
pop
fcoml
push
sub
in
inc
dec
dec
js
push
push
pop
scas
test
adc
test
jno
testl
inc
xchg
aas
scas
xchg
movsl
push
push
inc
es
popf
in
and
adc
jne
adc
dec
xor
dec
adcl
push
mov
les
jno
addl
repz
pop
out
fdivp
xchg
outsl
or
insb
cld
and
push
and
aad
aaa
jge
xor
ret
movsl
xor
push
lahf
aaa
int
sbb
and
pop
push
mov
stos
and
or
addr16
rorb
ja
sbb
mov
arpl
sbb
repnz
lahf
mov
inc
mov
xchg
out
fdivr
mov
inc
test
enter
xchg
out
movsl
pop
fidivrs
sub
cwtl
movsl
sub
sbb
sbb
fldenv
mov
jmp
push
and
cmp
loope
dec
outsl
sbb
es
adc
and
pop
push
andl
roll
pop
mov
pop
add
pop
inc
push
andb
orl
rorb
pop
pop
loop
leave
lcall
mov
stc
xorl
pop
inc
or
cmpsl
jge
push
imul
insb
pop
int3
in
dec
and
mov
std
or
mov
cmc
ja
and
jge
jmp
js
mov
je
mov
inc
jne
scas
ds
shll
dec
in
pusha
push
mov
shll
dec
insl
cmp
mov
cmp
nop
movsl
js
inc
xor
mov
fimull
ficompl
xor
loope
out
mov
dec
sub
dec
enter
in
and
scas
and
push
inc
mov
enter
stos
pop
sub
xchg
cmc
sbb
addr16
ljmp
ret
sub
mov
test
cs
cltd
xor
lea
sub
in
xchg
push
les
les
and
mov
mov
or
mov
mov
sti
push
lret
out
and
push
inc
daa
popf
and
pop
mov
adc
xchg
xchg
pop
das
hlt
or
scas
daa
stos
jae
sbb
push
adc
fisubrs
sar
jb
mov
or
test
enter
and
lret
cltd
fwait
and
lcall
call
movsb
pop
outsl
sub
enter
insl
xchg
jb
xchg
pop
add
push
cltd
test
adc
and
mov
push
cmp
insb
mov
and
mov
lret
ja
mov
pushf
es
pop
pop
xchg
xchg
imul
repz
fists
leave
out
pop
rorl
ficoms
xlat
mov
sbb
pop
test
adc
pop
fcoms
arpl
or
and
dec
push
mov
mov
aad
mov
xor
addb
push
sub
andl
shlb
addr16
cld
in
jne
push
xlat
aad
jne
dec
push
std
jp
sti
fdivrs
sub
xchg
stc
repz
enter
cltd
xchg
test
and
adc
sbb
adc
dec
int
jns
mov
int3
cli
je
ret
cwtl
xor
loopne
cwtl
adc
dec
sarl
inc
les
cmpb
cmp
or
cwtl
sarb
ficomps
inc
pop
icebp
mov
rcrl
repnz
or
and
fidivl
out
sbb
out
inc
and
filds
jno
push
js
imul
fsubs
adc
mov
les
jo
cmp
call
or
adc
jp
cwtl
jmp
xor
aas
mov
lret
js
arpl
mov
sub
or
fucomi
outsb
pop
das
ret
scas
inc
inc
mov
popa
or
jp,pn
repz
sub
arpl
pop
into
xchg
sbb
out
inc
loop
push
add
dec
inc
sub
loope
movsl
jge
mov
shrl
leave
jnp
fnstcw
mov
jbe
inc
inc
pop
std
outsl
dec
fbstp
mov
aaa
lods
dec
mov
sbb
lcall
stos
int
shl
jno
xchg
mov
sub
stos
out
lods
cmp
inc
push
pop
and
lock
or
pop
sarl
and
add
xor
xor
inc
push
rcrb
std
out
movsb
jg
call
fisttpl
clc
outsl
testl
xchg
mov
sbb
pop
xchg
psubd
int3
pusha
xchg
scas
inc
jno
mov
push
std
push
xchg
push
fwait
pop
loop
lock
out
dec
and
and
xor
and
or
repz
mov
rolb
cmc
mov
push
lock
and
roll
push
inc
loopne
lods
in
testl
divb
inc
cltd
xchg
idiv
cmc
jbe
popf
leave
adc
sub
mov
jl
adc
mov
popa
mov
loopne
bound
and
leave
lds
insb
insb
lds
in
xor
inc
inc
arpl
inc
arpl
pushf
movsl
jo
cltd
and
inc
mov
icebp
pop
pusha
fbstp
fnstenv
fidivs
jbe
ja
imul
and
popa
pop
inc
mov
xor
cltd
mov
mov
pop
shr
cld
dec
nop
daa
ljmp
rcl
dec
iret
negb
push
pusha
out
nop
push
cld
and
mov
movsl
js
mov
dec
addl
lret
rcrb
cld
pop
mov
add
xchg
dec
sbb
popf
add
mov
adc
shlb
xchg
shrl
fcoml
xchg
cmp
jne
push
mov
pop
test
gs
mov
inc
sbb
in
mov
mov
xchg
andl
stos
sbb
ret
mov
movsl
pop
repz
stc
repnz
dec
pop
sub
popa
lret
inc
fidivs
add
xchg
sbb
push
mov
sbb
mov
into
sub
addr16
or
mov
pusha
fsub
imul
fnstcw
jne
push
lock
es
xchg
dec
adc
mov
xchg
xchg
sbb
jo
aaa
lea
add
xor
lea
add
lea
mov
inc
cld
dec
jns
lock
pusha
sarl
push
jg
sub
pop
jl
mov
nop
sub
mov
push
xor
call
dec
adc
sub
loopne
fiadds
mov
icebp
sub
jbe
out
lds
xchg
inc
push
jge
xchg
push
lcall
lods
pop
or
rolb
js
dec
ljmp
movsb
cmp
test
jne
loopne
xor
jnp
bound
test
and
push
add
es
jnp
sub
dec
pop
ja
jbe
loope
pop
inc
loop
dec
cmp
mov
lahf
mov
stos
xchg
idivl
out
notl
push
mov
or
add
pop
cmp
cmc
push
daa
sub
dec
sub
mov
and
les
push
adc
outsb
sub
xor
mov
movsl
sbb
mov
test
or
sub
data16
outsl
int3
cli
jns
in
cmp
jb
std
imul
jecxz
pushl
inc
popa
nop
dec
push
jecxz
fidivs
jae
aas
push
popa
je
cmpsl
int3
bound
mov
paddusb
cld
ret
push
sbb
ljmp
shll
bound
movsb
or
mov
mov
adc
jae
sbb
outsl
and
test
add
adc
pop
cmpsb
int
sbb
fcoml
loope
sahf
mov
add
lds
daa
jne
inc
dec
add
xchg
cltd
pop
cmp
dec
inc
push
sub
adcl
mov
xchg
push
cmp
lods
leave
jnp
xchg
cmp
jmp
pop
dec
pop
or
mov
sahf
xor
jl
ljmp
xlat
xor
es
fsubrl
rorl
xchg
nop
inc
adc
push
add
pop
dec
push
or
push
xor
pop
hlt
mov
mov
outsb
test
rclb
jp
or
fst
mov
ret
xor
adc
mov
popf
jb
movsl
push
jno
scas
sbb
hlt
push
test
cmp
out
dec
pop
mov
cltd
test
movsb
loop
aaa
sub
negl
leave
sahf
sbb
xor
mov
bound
cltd
push
dec
lret
aas
sub
and
dec
int3
les
paddd
js
sub
testb
push
or
imul
mov
cmpsl
sub
xlat
mov
inc
pop
lret
add
ret
fwait
clc
inc
sub
pop
popa
mov
pusha
dec
ret
popf
jmp
int3
cmp
sub
int3
nop
test
jge
add
cltd
xchg
jo
repnz
dec
cmp
je
lds
push
rol
loope
sub
call
xlat
or
mov
in
xor
cmpsl
je
mov
aas
pop
sub
jne
jg
add
frstor
ja
repz
push
or
xchg
frstor
push
sbb
ffreep
mov
sbb
mov
jge
call
fs
push
push
out
repz
out
popf
fwait
shll
xchg
inc
aaa
pushf
enter
cli
push
scas
daa
gs
stos
das
fistps
enter
mov
add
rcrl
cli
mov
dec
mov
fisttpl
add
ja
test
fs
pop
ret
rol
mov
rolb
mov
jp
xchg
ror
push
mov
xor
jmp
rol
mov
fistpl
jnp
imul
clc
add
sub
cs
imul
and
mov
and
lea
dec
jecxz
push
or
ljmp
rolb
stos
sub
out
stos
loop
jge
pop
push
xchg
daa
jns
inc
cwtl
rolb
js
stc
sbb
pushf
and
or
inc
dec
stos
outsl
sbb
cli
clc
lret
inc
call
xchg
sub
aad
jp
outsl
xchg
fcomps
mov
mov
push
and
hlt
sub
loope
in
mov
js
xchg
dec
xchg
dec
xchg
push
das
pop
xor
mov
movb
dec
dec
shrl
lret
mov
fs
cmp
frstor
mov
add
push
fcoms
lock
popa
and
addr16
mov
jl
cmp
ret
adc
aam
xchg
adc
push
mov
push
outsb
sbb
add
xor
and
nop
out
xchg
and
stos
push
icebp
pushf
sbb
iret
int3
cld
mov
imul
pop
cmpsl
out
push
add
mov
in
xor
dec
mov
dec
xchg
mov
mov
jo
les
cmp
into
sbb
cmp
ret
dec
pop
mov
and
xchg
bound
pop
bound
push
mov
mov
movsb
jae
sahf
jp
dec
aam
outsb
inc
xchg
outsl
mov
cmp
or
pop
test
mov
mov
cmc
sub
add
das
xchg
push
icebp
bound
pusha
cwtl
decl
mov
lock
mov
pop
pop
add
fisubrs
stos
test
mov
dec
jle
jecxz
or
movsb
mov
pusha
adc
mov
mov
test
cwtl
cmp
pop
imul
xchg
sub
sbb
je
adc
lock
dec
mov
testl
jbe
push
into
cmp
push
adc
xchg
call
adc
xorl
mov
lahf
insb
xchg
fcomps
fcoml
jle
enter
or
add
test
push
cmpsb
cmpsl
pushf
sub
testl
rcrl
pop
lcall
dec
notb
dec
add
rclb
sbb
push
jbe
movsb
mov
cmp
out
mov
popf
mov
shlb
dec
mov
push
cltd
mov
clc
mov
and
inc
xchg
aas
mov
pop
rcll
sbb
adc
loop
pushf
xchg
cmp
mov
pusha
jae
mov
and
pop
aaa
sti
xchg
sbb
inc
sub
negb
jp
je
out
out
and
dec
adc
lds
das
scas
lds
mov
mov
test
insb
out
cmp
dec
xchg
inc
pop
ja
xor
shll
mov
and
int
stos
std
fs
mov
orl
ja
jnp
int3
ret
adc
mov
fildll
push
bound
pop
pop
lahf
cmpsl
sbb
inc
xchg
aas
stc
dec
xchg
stos
popa
jl
push
lods
dec
aad
xchg
xchg
mov
mov
and
cwtl
stos
loope
bound
hlt
xchg
cmp
fcoml
add
sub
mov
lds
or
outsb
cmp
push
test
aam
sbb
rclb
popf
fcomps
outsl
jmp
push
pop
aam
mov
cmp
dec
cmpsb
lahf
lahf
pop
mov
loop
lds
dec
insb
or
ret
sub
icebp
mov
scas
push
pop
mov
mov
xchg
movsl
xor
sub
sbb
xor
int
es
push
adc
pop
mov
inc
sbb
scas
jle
lds
imull
popa
mov
or
xor
outsb
fsts
arpl
repnz
ret
and
jae
out
pop
das
xor
pop
bound
ret
test
cmpsl
cmp
repz
xchg
pop
repz
icebp
test
mov
xchg
mov
sbb
fwait
lret
inc
add
jp
push
xor
call
and
mov
out
or
imul
in
icebp
testl
aas
aam
add
mov
push
sbb
jo
iret
mov
jbe
data16
add
add
movhps
clc
cmpsl
js
sbb
imul
cld
sub
inc
aas
xchg
in
movsl
loopne
enter
cmp
push
out
nop
aam
mov
cmp
cmpsb
xor
scas
test
in
je
jnp
add
stos
aas
sub
mov
cmc
lds
ret
sahf
bnd
and
or
mull
lcall
out
pop
lods
rcr
sub
sub
test
std
and
out
inc
push
add
cmpsl
shlb
jnp,pn
fs
jmp
int3
jge
jae
pop
test
mov
xchg
call
insl
dec
cs
mov
decb
mov
add
push
xor
in
clc
xor
inc
push
jg
outsb
scas
add
jl
pop
sbb
lds
dec
adc
dec
pop
mov
faddl
push
int3
stos
in
icebp
in
sub
lcall
adc
enter
mov
loopne
or
cmc
and
fistl
xchg
mul
mov
sub
push
add
mov
stc
sbb
scas
xchg
out
push
scas
jnp
or
cmp
cmp
dec
inc
mov
xchg
cmpsl
sbb
ret
mov
cmpsl
push
mov
mov
sahf
aas
and
lret
mov
clc
test
sub
lods
jo
sbb
aaa
insl
divl
loopne
add
push
xchg
out
mov
test
or
xor
loope
enter
decl
and
cmc
adc
fdivr
outsb
mov
jmp
xor
inc
push
pop
adc
fsubrl
jb
adc
push
int
xor
pop
les
inc
scas
dec
jo
das
lds
mov
or
inc
stc
je
pushf
pop
out
cmp
xchg
icebp
rorb
sub
gs
inc
in
jecxz
popf
xor
out
cmc
loope
hlt
sbb
add
jne
mov
in
aas
inc
bound
or
in
cwtl
pop
mov
inc
inc
bound
into
lcall
ret
addr16
push
xor
mov
or
popa
aaa
inc
lea
nop
pop
repz
sub
mov
stos
imul
pop
dec
mov
out
stc
and
jnp
cmp
pop
imul
xor
lods
mov
adc
bound
and
or
sbb
mov
sti
jge
xchg
mov
jl
pop
cmp
jl
aad
cmp
gs
aaa
lahf
jg
ficompl
sub
lcall
mov
ds
inc
pop
loopne
mov
dec
in
out
outsl
push
xor
inc
pop
xchg
dec
push
loope
xor
daa
mov
lods
loopne
fs
jnp
sub
popa
push
rcll
xchg
call
mov
test
fstp
adc
rcrb
pop
mov
sbb
int3
adc
jno
in
inc
and
test
or
cwtl
add
lea
adc
es
decb
insb
or
jns
xchg
jecxz
mov
shrl
inc
sbb
push
pop
mov
lret
xchg
shrl
repz
push
gs
push
and
fld1
out
arpl
sub
dec
push
or
in
cmp
or
int3
or
jo
dec
dec
leave
push
outsl
inc
inc
aas
cs
mov
pop
push
add
xchg
hlt
or
das
mov
fldt
jbe
cmc
mov
jno
jae
pop
daa
xchg
sbb
outsb
lcall
cld
icebp
mov
test
jbe
sbb
mov
push
loop,pt
aam
xor
pop
mov
or
mov
std
push
cmpsl
sub
ljmp
add
lcall
jmp
int3
cmp
aad
sahf
jmp
xor
and
insb
jns
cs
repz
adc
popa
mov
mov
lret
imul
mov
call
mov
cmp
and
out
pop
and
jg
lea
fldln2
inc
int3
sub
pop
cmc
js
xchg
push
inc
hlt
in
fwait
dec
push
aad
jno
or
cli
or
cld
mov
pushl
mov
pop
xchg
lods
mov
fcmovb
xor
or
cmp
mov
std
adc
xchg
mov
stos
movl
inc
cwtl
cmp
mov
mov
inc
sarb
jmp
xor
clc
repz
and
rcrb
lret
test
les
out
idivl
cltd
stc
pop
jno
and
js
mov
mov
or
rorb
aas
adc
sub
pusha
mov
add
xchg
lahf
push
xchg
pop
sbb
rorl
cli
push
scas
lods
sahf
andb
lods
imul
inc
iret
fbld
pop
xchg
rclb
push
jns
mov
dec
add
int
and
jo
dec
movsb
sub
push
adc
dec
fs
sahf
cmp
cmp
add
add
sub
jb
add
cmp
stc
mov
lret
inc
dec
pop
in
ss
fldenv
jns
sahf
pushl
scas
dec
lds
je
xchg
hlt
adc
add
orl
mov
cmp
inc
jno
popa
gs
jnp
fistps
insb
stos
jle
and
mov
or
ficompl
push
push
orl
dec
imul
cs
in
jmp
dec
jge
aaa
loopne
cmp
pop
sub
out
xor
pop
inc
jo
or
cltd
out
adc
mov
pop
add
mov
ss
cmc
pop
shlb
mov
push
cmpsl
das
xchg
inc
pop
xchg
push
mov
xchg
aam
xchg
push
jp
mov
add
mov
mov
data16
jmp
push
xchg
mov
sbb
or
mov
sbb
out
shl
test
aam
aad
add
cmp
fs
insl
xlat
mov
jmp
jae
nop
or
push
mov
adc
or
and
xchg
fstpt
aaa
fcoml
xor
mov
daa
lret
arpl
xchg
inc
test
lahf
pusha
insb
nop
movsb
and
jecxz
fimull
mov
subb
insl
sub
push
arpl
test
xchg
mov
push
js
pushf
push
out
adc
je
into
or
loope
xchg
pop
arpl
rorl
sbb
sub
rcrb
xor
pop
mov
arpl
sub
xor
or
das
mov
push
jecxz
xchg
test
das
imul
mov
mov
or
nop
mov
out
stos
dec
mov
loope
aaa
fstpl
or
mov
outsb
inc
dec
subb
orb
insb
test
adc
cs
or
jp
leave
mov
out
dec
packsswb
mov
ds
fwait
repz
mov
push
jge
pop
jb,pt
popa
js
inc
sub
jg
or
fmull
aad
cmpsb
add
pop
int3
push
pop
adc
push
push
shll
mov
add
inc
fcoml
stos
xorb
lea
insb
mov
pop
jae
adc
sub
lret
mov
adc
push
or
xchg
imull
leave
les
xchg
rcrl
mov
jmp
and
fmuls
push
mov
lret
add
sbb
repnz
sub
mov
mov
xchg
negb
cmp
std
jmp
addb
mov
daa
sub
icebp
sub
repnz
inc
push
out
fnstcw
and
aad
pop
pop
mov
testl
adc
push
ja
movzbl
imulb
dec
jns
out
sub
test
lock
and
lret
mov
das
cmp
inc
dec
adc
lods
fbld
push
inc
loop
fdivs
xchg
imul
and
mov
or
xchg
mov
out
or
out
popa
jns
sar
hlt
push
daa
xor
aaa
scas
scas
popa
adc
sub
sbb
scas
sbbl
outsl
or
in
repnz
inc
lcall
inc
mov
mov
fs
dec
icebp
jns
jnp
lods
mov
sbb
mov
cwtl
adc
arpl
fcmovne
sahf
cs
ret
adc
sbb
adc
jg
push
std
adc
jns
pushf
movsl
inc
out
popa
push
dec
jmp
stos
dec
ficoms
scas
jbe
xor
add
in
stc
mov
jnp
loopne
aas
jno
push
xchg
ds
mov
stos
lock
dec
int3
jo
jmp
inc
add
stc
in
rorb
icebp
pushf
rcrb
mov
call
sbb
jae
sahf
cmc
sub
lret
sbb
pusha
addl
cmp
loope
sahf
out
mov
cltd
lcall
push
dec
and
pop
mov
je
dec
xor
push
adc
js
mov
or
es
jb
jno
pop
or
jno
movsb
lret
enter
pusha
mov
jae
mov
daa
cmpsb
inc
xchg
xor
dec
pushf
push
cmp
cmp
sbb
fwait
imulb
xorl
lea
pop
fidivrl
std
jp
pop
int
sub
jp
ja
mov
mov
in
iret
fwait
jp
sti
dec
push
xchg
fdivrs
ljmp
jge
jne
icebp
fincstp
fstl
jecxz
pop
xchg
xor
jmp
xor
mov
xor
imul
mov
data16
sub
xor
std
push
stc
in
int
mov
shlb
movsl
adcb
fildll
clc
paddusb
in
ds
jne
jbe
in
and
xchg
shlb
jno
mov
mov
and
jb
inc
std
imul
or
pop
stc
mov
jns
ljmp
adc
jl
pop
sbb
dec
dec
arpl
out
ss
cmp
adc
inc
sbb
std
sbb
or
jge
mov
shll
div
push
pop
or
cmc
ret
aad
push
out
mov
mov
sbb
sti
out
inc
mov
sarb
add
xchg
xlat
pop
mov
pop
jmp
lret
hlt
push
scas
mov
xchg
lods
movsb
xor
ret
cmc
pop
ja
ljmp
pop
orl
inc
xchg
sbb
ret
xor
dec
jge
adc
cmp
bound
aad
add
test
push
je
pop
sbb
testb
icebp
mov
jne
stos
xor
add
inc
pop
pop
fstl
mov
wbinvd
cmp
or
mulb
into
xor
sub
xchg
or
adc
or
fistpl
jb
lret
mov
add
sub
jge
fcompl
adc
xchg
fwait
enter
out
roll
or
jl
push
push
jne
arpl
pop
pop
cld
cltd
adc
inc
jne
fxtract
inc
mov
adc
lcall
xchg
out
push
stos
es
and
adc
jp
cmp
or
cld
fldl
cmp
rcrw
sbb
repnz
lods
mov
mull
gs
dec
std
shr
cwtl
int
les
pop
xchg
add
cld
add
mov
test
and
mov
int3
sub
int
fadds
dec
dec
loop
or
sbbb
sti
dec
sahf
jnp
je
out
cmpsl
mov
jp
dec
or
mov
add
andl
push
mov
cmp
pop
jb
mov
test
movsb
push
cmpsb
movsl
rorl
outsl
sbb
cmp
or
push
add
out
add
jg
clc
out
cmp
push
fwait
icebp
xor
into
push
jnp
add
or
dec
scas
jecxz
add
fimuls
pop
scas
sub
cld
dec
pop
dec
andl
jle
xor
movsl
repnz
mov
ss
xchg
dec
jmp
mov
mov
insb
xor
add
nop
xor
adc
cs
push
jmp
xchg
and
xor
sub
popa
mov
cmp
loope
out
fstl
inc
pushf
imul
and
pop
jno
dec
cld
pop
jo
jl
xchg
and
xchg
add
or
xlat
idivl
jbe
mov
mov
or
xchg
mov
loope
pop
sbb
mov
jmp
test
jnp
lret
jp
aam
sbb
dec
cmp
imul
repnz
mov
sub
cmp
popa
xor
jae
shr
inc
jl
lea
add
in
xchg
sub
xchg
js
mov
mov
jns
xor
push
jecxz
cmp
lahf
ja
jnp
xchg
sbb
insb
cmp
fidivl
ret
xlat
data16
jnp
icebp
or
mov
sub
mov
dec
je
imull
dec
mov
push
xchg
jecxz
sarl
push
push
pop
xchg
cltd
scas
xlat
ss
inc
shrb
push
rorb
popa
popa
clc
ss
pushf
pushf
xchg
movsb
nop/reserved
ljmp
and
aas
mov
loopne
fistpll
imulb
mov
fsubl
movsb
stc
popa
std
fstps
xchg
dec
add
dec
sub
add
cmp
push
sbb
mov
mov
gs
aaa
mov
adc
in
mov
aas
data16
std
add
jmp
insb
inc
xor
fdivl
cli
and
mov
dec
cmp
pop
dec
or
ss
insb
pop
jmp
jecxz
mov
lea
lods
jmp
in
mov
jge
movsl
jge
or
jle
les
pop
add
call
pop
cmp
icebp
imul
inc
fisubrl
inc
lds
mov
mov
hlt
lret
pushl
mov
outsl
in
shlb
pop
clc
test
cmc
xorb
or
imul
stos
sbb
or
fdivl
sub
out
and
sbbl
scas
notb
xor
fs
adcb
mov
sahf
loopne
xor
adc
add
push
and
sbb
dec
adc
mov
ror
loopne
jmp
lahf
addr16
dec
mov
mov
daa
jbe
bound
dec
pop
or
xlat
and
pop
cmp
rcll
repz
cmp
daa
gs
iret
mov
test
lock
mov
pushf
pop
mov
imul
int
xor
pop
movsb
ds
and
xchg
insb
ja
xchg
mov
outsb
sub
xor
push
mov
jno
cmpsb
dec
ficoml
adc
inc
sub
cltd
test
ret
in
sub
nop
outsl
xor
test
popf
call
das
cli
lea
popf
pop
xchg
dec
xchg
mov
fstpt
int
or
hlt
push
push
sub
mov
cmp
mul
pop
gs
test
and
mov
in
sub
or
cmpsb
pop
aam
cmp
addr16
and
add
movsb
jl
jmp
or
push
movsl
inc
mov
cmovl
mov
data16
lret
scas
or
xor
pop
mov
popa
sub
sahf
inc
mov
cltd
mov
add
repnz
and
lea
mov
xor
in
jb
rclb
daa
outsb
xor
je
add
sti
push
in
xor
jl
xchg
cmc
push
add
add
xor
lods
push
ficoms
out
push
clc
xor
push
and
ret
filds
dec
xor
cmovs
js
pop
iret
xor
es
int
pop
sahf
mov
ljmp
call
dec
add
fsubl
loop
xor
mov
fbstp
rclb
mov
pop
xchg
push
mov
in
dec
xchg
stos
sbb
pop
loop
sahf
stos
sbb
jmp
iret
lds
out
adc
loopne,pt
add
sub
or
sub
enter
xchg
cs
add
and
outsl
push
popa
mov
lea
pop
adc
out
cmpsl
inc
jmp
mov
addr16
dec
les
aad
mov
pop
and
push
repnz
xor
lret
stc
stc
mov
lds
enter
shll
add
inc
cmp
enter
adc
mov
clc
mov
sub
cmc
mov
popf
mov
sub
loop
movsb
imul
xchg
repz
les
lahf
xchg
mov
pop
mov
sub
out
jge
mov
xchg
xor
mov
or
stos
pop
sub
loope
adc
push
fbstp
pop
mov
push
das
jbe
mov
stc
push
mov
cmpb
or
mov
mov
cmpsb
mov
inc
pop
xor
stos
scas
xor
aas
cmp
call
inc
movsl
jne
inc
pop
cmp
mov
push
or
nop
pop
and
loop
popf
daa
sbb
stos
js
push
adc
mov
ret
or
sbb
sarb
pop
les
inc
add
sahf
sub
sahf
pop
std
ret
pop
dec
or
lret
or
outsl
jns
jb
inc
fnsave
sbb
lret
cmp
jnp
mov
repnz
stos
and
movq
movsb
xor
das
add
jle
popl
scas
je
dec
xchg
pushf
pop
adc
sbb
mov
mov
pop
enter
fiadds
inc
test
jg
mov
jmp
xchg
sbb
fistps
ljmp
jbe
xchg
ja
sub
aad
arpl
outsb
dec
add
dec
iret
adc
daa
jg
in
inc
mov
cmp
xor
xchg
outsl
xor
lret
imul
jmp
int
loope
mov
shll
pop
paddw
push
dec
inc
mov
sbb
out
jae
cld
iret
cwtl
lock
xchg
inc
repz
push
sbb
xor
mov
lea
mov
mov
xchg
adcl
pop
bound
and
xor
mov
mov
push
out
gs
mov
inc
ss
or
xlat
mov
repz
push
repnz
fidivl
fmul
mov
daa
das
and
and
cli
mov
jne
addr16
faddp
aad
iret
inc
inc
xlat
mov
in
sbb
mov
jns
push
xor
call
lea
into
or
clc
fistpll
arpl
and
push
cmp
stos
jb
jle
mov
mov
fistps
push
shrb
jb
mov
std
fs
mov
popa
mov
aad
jmp
inc
dec
xchg
adc
push
into
xchg
into
dec
loopne
push
cli
mov
jge
xchg
cli
push
jle
movsl
imul
add
insb
pusha
loopne
xor
test
stos
push
cmp
aas
adc
cmp
ljmp
push
or
cmp
insl
cwtl
inc
or
lcall
aaa
mov
out
or
mulb
mov
rcl
stos
push
into
pop
popf
pusha
rorb
fsubp
outsb
inc
sub
lret
push
fldcw
xchg
mov
or
test
mov
xchg
inc
sti
fnsave
sub
lods
stc
ds
fisttpl
sbb
cmpsl
out
dec
in
fcomps
pop
xor
and
add
iret
mov
mov
mov
out
xlat
in
test
xor
xchg
add
jge
stos
cmp
mov
sub
jbe
adc
xchg
push
into
adc
int
lret
sub
xor
add
or
sbb
loop
xor
subl
pop
adc
mov
addr16
imul
or
mov
xchg
rol
out
cli
mov
jp
movsb
mov
loopew
sbb
cmp
sahf
mov
mov
sub
mov
push
mov
lret
mov
cmpsl
movsl
sbb
sub
cmpsl
push
mov
shrl
mov
out
rcr
xor
mov
xchg
lret
mov
mov
adc
mov
push
cmp
inc
push
mov
nop
popf
dec
loop
xor
test
popf
ja
lods
sbb
mov
inc
data16
cmpsl
jno
loop
xor
sbb
or
push
sti
jmp
dec
dec
push
test
insl
aam
jg
rcrb
mov
cmp
adc
shr
movsl
jge
xchg
test
imul
push
sub
sbb
sbb
ss
sbb
inc
loopne
clc
mov
ret
pop
in
loop
sbb
xchg
arpl
test
adc
outsl
add
out
add
jno
or
out
inc
rorl
xchg
add
dec
jnp
push
fstps
int3
lret
or
mov
cmp
lcall
sub
dec
shrl
push
dec
push
clc
cmp
sbbl
lds
out
popl
jl
popf
jns
jmp
cmp
loopne
dec
add
lcall
test
aad
sub
mov
movsb
push
dec
cli
icebp
and
mov
ja
push
push
and
stc
movsb
cmp
rol
jno
dec
xor
fiadds
xchg
xchg
aad
mov
in
fdivrl
mov
sbb
sbb
adc
scas
repz
mov
mov
in
ret
adc
jne
scas
adc
scas
mov
xchg
daa
pop
rcrl
int
loop
inc
add
call
jno
hlt
sbbb
enter
pop
inc
push
imul
aam
pop
cld
outsl
gs
fmul
xchg
pop
dec
icebp
sarl
mov
adc
imul
fadd
cs
test
xchg
fcoms
fsubl
stos
or
xchg
faddl
stos
ror
sub
scas
iret
and
mov
adc
fs
sbb
jg
cmp
test
jb
mov
clc
lahf
pop
xchg
js
pop
adc
inc
stc
inc
addr16
sbb
cmp
adc
test
lods
cwtl
shl
mov
mov
jl
xlat
sarb
mov
sbb
pop
jnp
dec
fists
add
xor
mov
jg
cli
int3
jbe
push
lock
mov
loopne
xor
inc
xlat
pop
insb
dec
lods
pop
or
cmp
dec
stos
push
and
and
mov
and
into
sub
ror
out
mov
fdivl
and
fiaddl
and
inc
inc
popf
shlb
pop
cmp
xor
xor
rcrl
call
mov
add
jo
push
lcall
jo
add
aas
loope
ret
xchg
jle
and
mov
inc
pop
cmp
jp
pop
xor
pop
in
pusha
adc
in
sub
enter
adc
lcall
mov
dec
mov
mov
popa
test
mov
data16
xorl
jae
mov
mov
hlt
mov
lret
adc
fildl
popa
dec
outsb
sti
lock
bound
jae
popf
mov
fstps
lods
notl
vfrczps
or
jge
pop
jo
shl
push
and
or
ret
adc
imul
call
mul
bound
stos
outsb
pop
aas
mov
push
inc
and
leave
test
in
mov
cmp
inc
xchg
push
xor
mov
je
lock
call
cmpsl
adc
pop
push
or
or
pop
push
mov
insl
adc
xchg
xchg
jecxz
fs
imul
repz
adc
sarl
int
lcall
out
xor
pop
inc
inc
insl
add
push
xchg
xchg
dec
lret
cmp
mov
aad
in
mov
imul
cmp
ficompl
sbbl
repz
xchg
loop
lods
imul
call
mov
inc
cmp
repnz
mov
jl
int3
mov
icebp
imulb
jmp
cmp
ficoml
inc
icebp
adc
test
xchg
push
es
sub
cmpl
in
cmpsl
fistps
push
dec
lock
cs
inc
pop
xchg
cmp
repz
cmp
xchg
dec
sbbb
aad
xchg
movsl
xchg
cmp
or
mov
or
xchg
lods
mov
sub
pop
ljmp
and
gs
xchg
adc
in
test
int3
and
repz
sbb
sub
push
pop
mov
fwait
push
mov
jno
jns
call
std
mov
jecxz
cld
fbstp
cmp
jle
mov
fimull
ja
sub
btr
lock
xor
sbb
pop
mov
inc
jge
cmp
shl
pop
jns
fmull
clc
int3
fstpt
rcll
cli
les
outsb
inc
xchg
sbb
adc
nopl
popa
rorb
mov
ret
xor
ds
adc
fdivr
push
xrelease
cld
adc
mov
insb
shlb
ljmp
in
fisubs
push
decb
pop
mov
rolb
add
jae
mov
cmp
pop
sarl
xchg
pop
xchg
pop
push
jae
jmp
adc
mov
daa
in
xchg
cmc
push
dec
out
int3
jmp
outsb
sub
sub
dec
sub
call
in
jns
and
push
rorb
xor
inc
mov
push
inc
into
das
and
pusha
negl
dec
ss
insl
lds
popf
dec
pushf
adc
jg
push
insb
cmpsl
pop
dec
out
dec
jo
rcr
cmc
or
lock
cmp
or
ss
dec
loop
loopne
sub
push
leave
enter
adc
int
rcl
mov
cmp
mov
mov
out
js
test
pop
adc
clc
shrl
jne
push
cmc
mov
or
aas
sahf
mov
sbb
rcrb
stos
les
fld1
sub
mov
ret
std
arpl
js
xchg
pop
mov
shll
xor
jns
idivb
ret
inc
inc
or
add
sbb
and
xchg
mov
mov
cmp
test
pop
adc
ret
dec
popf
int3
pushl
lods
sbb
pcmpgtd
xchg
ljmp
lret
cwtl
xchg
lock
add
dec
add
inc
lods
stos
pusha
mov
subl
push
push
flds
jl
cmp
scas
mov
push
push
js
sbbb
insb
adc
movsb
mov
icebp
xor
loope
je
xchg
out
pop
es
enter
add
pop
push
adc
fxch
push
stos
lret
je
rclb
jmp
inc
mov
and
dec
addb
mov
faddl
fsubrs
xor
and
add
mov
repz
ljmp
mov
lcall
push
rcpps
and
or
jg
dec
mov
xor
sbb
xchg
sahf
or
sub
jo
test
mov
and
testb
jecxz
or
dec
std
pop
xchg
into
sub
inc
mov
sar
xor
push
insl
jb
bnd
sbb
cmp
sub
subl
jae
lods
ret
inc
dec
xor
mov
icebp
jnp
push
dec
out
lret
es
mov
adc
lret
fldt
out
cwtl
mov
mov
ljmp
push
dec
arpl
je
lock
sbb
dec
jge
daa
inc
test
dec
pop
pop
lods
or
xlat
dec
lds
mov
dec
mov
mov
clc
fadds
pop
loopne
notb
cltd
call
ljmp
fwait
xlat
mov
lret
orl
add
subl
add
adc
xchg
adc
sub
xchg
sub
fdivrs
push
jo
sub
xor
out
adc
or
jmp
test
cwtl
sub
insl
lock
cmp
fimull
add
mov
pop
dec
fs
xchg
inc
sbbb
jecxz
mov
das
xchg
sbb
pop
jo
and
pop
mov
popa
jns
sbb
repz
loope
ljmp
push
xchg
cmc
pusha
std
cvtpi2ps
or
inc
stos
mov
push
mov
sbb
enterw
inc
or
scas
out
movl
outsb
mov
js
sub
mov
inc
xchg
jp
call
jp
mov
cmp
mov
inc
imul
mov
add
adc
js
xor
cmp
dec
inc
mov
cmp
nop
dec
or
ret
aas
test
scas
jbe
add
testl
cmp
add
xchg
mov
push
xchg
fs
xor
iret
mov
dec
push
and
imul
mov
cltd
xor
fisttpl
xor
add
or
aas
stos
xchg
rcrl
out
aaa
lock
scas
push
push
xchg
inc
lret
pusha
sbb
mov
cltd
jo
test
jle
int
xchg
and
or
jmp
lret
out
test
add
inc
pop
cmp
xchg
jae
mov
and
dec
xor
xchg
cmp
jle
mov
cmp
or
and
loop
jle
test
sbb
adc
push
sahf
es
test
pop
mov
pusha
push
test
push
ficoms
sbb
shrb
push
mov
in
mov
imul
sti
mov
sbb
test
push
loop
into
sti
xchg
in
mov
enter
push
or
mov
ss
dec
mov
add
outsb
aam
inc
outsl
mov
or
mov
add
add
add
fs
push
fisubrl
fdivrs
clc
xchg
push
add
dec
arpl
jl
sub
out
push
lea
and
mov
xor
mov
ficomps
rcll
lods
cmc
ficoms
sub
adc
in
cmpsl
xchg
push
xlat
pop
sti
or
jnp
sub
pop
xor
or
inc
adc
test
in
sbb
push
jge
clc
nop
adc
sarb
negl
mov
dec
xchg
nop
fildl
pushf
sbb
ret
push
stc
popf
lcall
push
or
fdivrl
adc
daa
bnd
lods
mov
pushf
xor
movsl
jmp
jbe
into
hlt
insb
in
pop
jg
sti
divl
loope
data16
les
xchg
cltd
jb
xchg
push
jns
ret
adc
sbb
enter
adc
cmp
mov
sahf
xlat
notb
fcompl
adc
fiadds
das
lock
xchg
icebp
pop
repz
cmp
es
mov
sbb
loopne
outsl
movsl
add
inc
insb
jg
aad
dec
xchg
push
push
sub
mov
imul
mov
pop
mov
or
loopne
add
cmp
test
mov
push
fldt
mov
adc
xchg
pusha
insb
das
xor
addr16
adc
mov
cltd
ds
outsb
mov
cmpsl
je
xchg
addr16
push
cmp
pop
pop
xor
xchg
popa
pop
out
mov
mov
shrl
xchg
cli
mov
sbb
mov
mov
js
sbb
iret
push
or
jo
jnp
mov
mov
cli
pop
sub
shrb
notl
jns
lcall
fstpt
xchg
das
inc
in
and
mov
mov
xchg
xchg
bound
xor
cmp
push
mov
movsl
sub
jp
aaa
push
jge
enter
pop
and
or
inc
jo
push
shll
test
xlat
test
lods
add
mov
mov
popa
aad
loopne
cwtl
mull
je
add
pop
mov
aam
jmp
imul
aaa
iret
cwtl
or
stc
add
inc
jae
out
in
pop
mov
fwait
inc
pop
xor
mov
dec
in
and
mov
les
aam
hlt
push
xor
cs
pop
ljmp
xchg
or
std
jo
mov
ds
daa
out
loope
stc
out
inc
xchg
adc
lods
fsts
aas
or
sti
les
dec
stos
in
push
rcrb
xchg
pop
shlb
cmp
loope
scas
cli
mov
call
xor
xchg
mov
jne
inc
fsubrl
shlb
call
xor
and
xchg
mov
scas
test
xor
add
and
or
loope
mov
cmc
cmp
push
dec
mov
in
mov
fisubs
sti
js
pop
jae
pushl
mov
mov
push
std
outsb
leavew
dec
pop
lcall
cltd
cmp
jle
or
cmpl
mov
fwait
ds
aad
out
cli
lea
and
add
int3
inc
jbe
or
push
inc
sub
adc
jle
int3
cmp
stos
adc
pop
call
or
cwtl
stc
jbe
jae
dec
enter
sbb
or
inc
add
sarb
aas
jp
mov
pop
shlb
xor
fldl
inc
dec
and
inc
lods
call
subb
fs
out
xchg
shrl
sub
enter
dec
imul
mov
gs
insb
daa
xor
sub
jo
icebp
pop
jb
shll
pop
cmp
int
shrb
insb
sub
lock
cmp
imul
or
adc
jge
mov
xor
jp
rorb
sub
into
sub
mov
pop
stos
into
outsl
push
pop
jg
or
cmpsb
push
push
mov
cmp
jge
push
js
push
dec
push
add
push
mov
mov
into
xlat
jecxz
cmp
xchg
jecxz
rcll
and
stos
and
imul
ror
sbb
outsl
mov
mov
sbb
mov
mov
outsb
push
inc
push
jg
pop
xchg
inc
and
xchg
mov
mov
int
std
out
jle
push
push
inc
cmpsl
in
cs
cmp
insl
mov
adc
xor
pop
pop
pop
cmp
xor
xchg
mov
xchg
lcall
cmp
mov
xchg
cwtl
stos
inc
push
adc
mov
fwait
test
in
jecxz
xchg
movsl
bound
nop
mov
aad
sub
dec
lret
pop
mov
jmp
fnsave
mov
cmp
int3
push
pop
jae
dec
mov
icebp
sbb
sub
clc
clc
mov
sub
add
fwait
mov
loope
mov
shrl
mov
mov
dec
push
mov
aaa
scas
inc
cltd
popa
popf
xchg
cmpsb
pop
add
adc
cmp
arpl
push
std
dec
inc
lds
mov
sbb
mov
cli
or
inc
ja
jb
push
mov
pop
jg
sbb
cmpl
idivl
and
jae
pop
sub
mov
sub
andb
cmp
es
ret
dec
ret
add
push
sub
lahf
je
or
out
addr16
inc
or
test
test
dec
mov
bound
ss
inc
add
and
stc
inc
xchg
nop
push
and
sarb
mov
mov
cmpsl
stos
push
call
lcall
aam
fidivrl
push
andb
dec
mov
sbb
or
roll
ss
xchg
push
les
icebp
mov
sub
pop
cld
fstpl
into
cmp
or
and
ret
sub
nop
cmc
and
std
push
add
and
or
stos
pop
cmc
repnz
sbb
mov
ds
sti
sti
std
test
inc
in
nopl
mov
aad
mov
inc
xchg
shr
loopne
xchg
and
frstor
insl
ds
inc
repnz
ja
jle
sub
aas
dec
jno
xchg
dec
out
or
dec
add
inc
sti
mov
jl
pop
mov
int
cltd
lds
push
add
lock
inc
jg
popf
sub
mov
xor
fmulp
shrb
ss
inc
pushf
sub
inc
pop
nop
xchg
aaa
adc
sbb
cmpsb
jbe
push
pop
add
ret
jmp
inc
loopne
sub
push
mov
mov
clc
adc
pushl
add
cmp
sbb
scas
scas
icebp
push
hlt
mov
jns
call
inc
test
xor
dec
inc
sub
movsb
inc
outsl
push
mov
lret
sub
and
insl
arpl
add
in
int
xchg
dec
or
scas
xor
bound
ret
mov
xor
sbb
loopne
fwait
out
jg
push
xchg
notl
cmp
test
mov
out
sbb
sbb
push
in
loop
sub
mov
add
clc
sysenter
jl
jae
stc
jbe
arpl
call
push
xor
mov
ljmpw
jnp
repnz
into
and
dec
cmp
lcall
or
jecxz
inc
aas
fbstp
aam
pop
push
jmp
adc
pop
pop
or
mov
pushf
push
push
sarb
or
dec
out
jo
test
mov
jmp
add
adc
ljmp
icebp
ss
fnstcw
icebp
mov
inc
jl
scas
aaa
or
movsb
push
cmp
pop
into
pop
les
out
jge
cmp
shl
adc
pop
xor
cmp
fiaddl
lods
rol
subl
pop
mov
jmp
dec
or
dec
adc
sbb
push
and
fwait
je
sbb
jecxz
out
lret
or
repz
xor
or
test
xchg
addl
lcall
cmp
aas
or
fsts
sbb
test
sub
push
cli
lcall
pop
popa
ficoml
add
or
pop
adc
sub
jmp
xchg
xchg
pop
js
xorl
mov
in
jmp
cmp
fmull
xchg
divb
insl
sahf
mov
or
mov
insb
add
push
sbb
repnz
out
add
cmp
out
dec
inc
cmp
lods
mov
stos
pop
mov
in
jbe
pavgb
bound
imul
mov
mov
mov
fcomip
test
popa
mov
mov
ret
or
cmc
xor
ljmp
mov
mov
pop
pop
xor
lock
push
in
or
mov
pop
xlat
hlt
pop
xchg
push
xchg
jecxz
addr16
adc
push
cmp
inc
fsub
enter
mov
pop
xchg
sub
movsl
imul
inc
dec
fldt
mov
ljmp
dec
stos
or
push
mov
lcall
jae
shll
xchg
and
sarl
jp
sbb
push
adc
std
roll
mov
add
sti
sbb
es
add
lock
fwait
cwtl
cmpb
push
mov
jp
pusha
lret
push
in
ret
inc
mov
out
adc
dec
addr16
daa
mov
aam
jl
sbb
ja
inc
jg
pop
add
push
sbb
mov
inc
shlb
dec
add
inc
cmp
pop
into
jb
add
je
fwait
jp
loopne
les
mov
dec
scas
lods
fwait
cmpl
inc
mov
imul
sub
and
mov
out
scas
adc
rolb
jmp
and
pusha
rclb
notb
int3
in
into
jge
clc
idivl
inc
aas
xor
cmp
sbb
lahf
ss
je
xor
mov
jecxz
mov
add
std
loopne
ljmp
je
les
jg
test
les
movsb
mov
lea
mov
jne
xlat
push
sarl
mov
bound
mov
mov
and
mov
pop
push
loopne
cmpsb
xlat
sub
out
mov
sbb
vcvtsd2ss
push
xchg
in
fs
adc
cwtl
jne
or
mov
cld
stos
cmp
push
mov
movsl
pop
dec
mov
jb
jp
pop
cli
push
cmpb
xchg
jge
dec
cli
xorb
sub
sub
cld
ds
insl
mov
jle
or
test
sbb
aaa
adc
sbb
or
addr16
pusha
mov
std
and
jo
cli
unpcklps
mov
pop
pushf
xor
inc
sahf
loope
pop
mov
mov
mov
mov
sub
jmp
sbb
push
lock
mov
or
and
popa
cld
movsl
mov
clc
jmp
out
jnp
imul
cwtl
hlt
sbb
jecxz
enter
in
in
mov
cmpsb
dec
and
jne
icebp
cs
fimull
leave
mov
shll
fucomi
sub
xor
hlt
ds
data16
xor
push
adc
pop
cmc
pop
xchg
mov
mov
popf
push
push
sbb
lods
dec
sbb
lret
stos
iret
lahf
cmp
sub
sbb
fistpl
stos
adc
pusha
into
mov
and
fcmovnbe
fsin
push
rorb
mov
loopne
imul
jmp
adc
add
ss
daa
mov
outsl
insl
and
xor
adc
jecxz
lock
and
flds
fwait
aam
call
xor
aaa
in
xor
xor
popa
xor
push
xor
add
ret
and
push
dec
incl
outsl
cmpsl
test
push
hlt
incl
sub
negb
outsl
cmp
or
dec
pop
je
loope,pn
cmp
ja
sti
xchg
ja
add
push
dec
popaw
cmp
loopne
adc
test
jbe
sbb
lret
cmp
fisubs
add
ljmp
pop
mov
mov
dec
stc
mov
cli
pop
insl
inc
sub
add
fimuls
lret
push
jp
mov
pop
pusha
or
sahf
or
jecxz
arpl
jge
leave
hlt
or
fstpt
inc
or
add
jg
icebp
pop
sbb
add
dec
xchg
cmp
hlt
sub
mov
insl
fidivrs
scas
mov
call
test
out
push
jge
xchg
pop
and
adc
movsb
leave
mov
and
call
outsl
cli
int3
int3
add
mov
call
div
sub
mov
adc
jmp
outsl
add
aaa
js
daa
in
jne
add
fistpll
mov
popl
mov
out
vmaxps
test
and
jbe
adc
jbe
shll
outsl
xchg
das
or
enter
push
daa
adc
stos
nop
xchg
mov
rcrl
icebp
push
cmp
jg
push
mov
movsb
push
sub
imul
xor
push
mov
fidivrs
mov
decl
xor
push
data16
dec
add
dec
inc
aam
sahf
ret
pop
inc
call
jae
hlt
cmp
jnp
ss
addr16
jb
sub
or
popa
jle
jno
fwait
sarl
fldt
sbb
mov
out
rcll
mov
jne
je
les
mov
mov
icebp
pop
sbbb
mov
dec
mov
data16
add
movsl
xlat
scas
adc
repz
xchg
xor
xor
testl
inc
inc
into
mov
or
das
das
dec
repnz
in
cmpsb
add
add
pop
das
pop
cmp
pop
and
sub
insl
cli
pop
jp
mov
rcrl
shll
addr16
jl
jle
jmp
jge
movsb
adc
jmp
pop
xor
dec
pop
mov
imul
inc
add
inc
pop
and
inc
xor
add
fbld
dec
pop
jno
lea
cmp
jae
xchg
fmul
test
repz
pop
inc
cwtl
and
js
and
xchg
jbe
cltd
repnz
xorl
fisubl
cs
sub
rcrb
sahf
sub
mov
popa
cmc
add
shll
scas
mov
xor
sbb
inc
shll
and
imul
arpl
and
sbbl
jbe
repnz
xchg
sbb
pop
xchg
sub
ja
arpl
push
lcall
jb
sbb
push
sbb
scas
xchg
stc
xchg
mov
idivb
push
mov
subb
inc
aad
sub
adc
popl
rol
test
inc
pop
or
repz
jecxz
or
adc
dec
jae
gs
ficompl
mov
mov
mov
mov
inc
cmp
stos
lea
jg
cmp
push
mov
psadbw
lds
mov
in
xchg
xor
adc
das
sbb
and
jbe
mov
call
jns
arpl
nop
es
pop
punpcklbw
dec
xchg
push
sbb
xlat
add
dec
popf
and
movsb
frstor
jp
enter
fs
imul
mov
imul
les
les
fcomp
sbbb
sbb
push
mov
push
cmpsl
lock
cltd
ds
xor
cwtl
mov
sub
std
das
aaa
mov
ret
out
push
sbb
inc
ljmp
sub
sub
jnp
rclb
xor
clc
mov
cmpsb
adc
sbb
add
mov
mov
cmpsl
mov
outsl
mov
outsl
movsb
sub
addr16
inc
mov
orl
loope
add
mov
mov
jae
ret
pusha
cs
or
push
sub
jmp
mov
es
add
sahf
jge
push
sbb
xchg
push
and
aaa
cli
push
ds
inc
xchg
arpl
fstl
lret
hlt
scas
pop
outsb
mov
push
and
test
inc
xchg
sti
scas
jmp
mov
dec
push
insl
mov
fldl
jge
arpl
sarb
syscall
sub
jne
push
je
mov
ds
adc
clc
xor
cli
popf
push
mov
add
pop
lret
fidivl
jmp
paddq
shlb
lock
mov
in
out
stc
cmp
jp
cs
pop
fidivrl
pop
cs
sbb
jne
mov
pop
sub
or
mov
sub
mov
aaa
in
push
jp
cmp
xor
orb
jno
sbb
popa
popa
lock
pop
sbb
xchg
jmp
pop
pushf
and
fisubs
add
jne
mov
adc
popa
dec
or
mov
mov
add
lahf
ljmp
sbb
and
inc
arpl
bound
adc
das
aad
aas
fildl
pop
jno
pop
das
mov
xchg
out
push
inc
das
ja
pushf
test
mov
add
lods
or
lods
sbb
add
or
sbb
movq
fwait
cld
hlt
arpl
pop
cmpsb
xchg
mov
in
lods
sbb
std
mov
ljmp
mov
lock
sbb
lcall
pop
inc
cmp
xlat
aaa
je
xchg
repnz
adc
inc
add
test
in
push
subl
test
movsb
out
pop
inc
inc
std
or
xor
or
pop
xor
ljmp
sbb
pop
shl
pop
data16
jl
bound
cmp
adcb
rolb
pushf
pop
cmp
frstor
xlat
jecxz
push
ljmp
addr16
loopne
cmp
mov
cmpsl
cmp
mov
pop
fs
dec
cltd
mov
xchg
push
in
cld
enter
test
ss
mov
and
aaa
lahf
jmp
sarl
js
and
popa
cmpl
test
ss
xorl
out
aas
out
jbe
mov
dec
inc
sub
mov
mov
out
out
mov
push
xor
test
jne
pop
fs
push
fmuls
push
call
rolb
push
mov
pushf
sti
push
and
nop
mov
mov
push
inc
insb
cwtl
mov
push
mov
xor
or
ljmp
sahf
inc
loopne
lods
sbb
out
rcr
mov
fbstp
or
adc
fsubl
mov
ljmp
int
pop
adc
mov
into
mov
lahf
iret
pop
frstor
sbb
mov
xor
add
and
mov
das
and
push
inc
in
xor
pop
sbb
jae
mov
loop
jle
incb
decl
mov
pop
inc
lret
loopne
call
in
xchg
movb
out
xor
sahf
sub
push
and
bound
out
in
xchg
out
push
pushf
dec
add
inc
bound
inc
xchg
js
sbb
idiv
inc
inc
lods
loop
out
stos
mov
imul
je
popa
mov
mov
xlat
add
sub
pop
scas
sbb
push
lret
or
adc
sub
imul
dec
aaa
fldcw
popa
xor
xor
jmp
cmc
outsb
gs
or
int3
test
push
filds
hlt
mov
cmpsb
addb
jecxz
push
mov
popf
jle
cmc
push
test
push
incb
fldcw
cmp
adc
insb
jnp
dec
sbb
pop
push
dec
mul
scas
into
ljmp
rorl
ficoml
add
add
pop
sarl
or
mov
loop
inc
fs
xchg
adc
jle
lret
xchg
mov
push
inc
pushf
pop
aas
or
rcrb
cmp
push
xchg
cmp
adc
sar
mov
popf
or
or
in
ss
into
shrl
les
mov
and
icebp
call
sbb
mov
xor
lea
cmp
outsb
clc
pop
hlt
hlt
lods
adc
pop
test
sbb
mov
adc
dec
cmp
pop
jns
and
shr
or
scas
mov
push
mov
cwtl
xor
rcl
fidivs
mov
popl
sbb
cltd
or
out
inc
fidivs
and
addr16
fsubl
sub
jp
sbb
insl
inc
popf
mov
loopne
test
jmp
inc
int
les
dec
sahf
test
js
mov
in
dec
ss
or
and
ds
scas
and
in
xor
cli
jo
in
inc
daa
inc
dec
push
cltd
into
das
push
lcall
outsl
pop
push
mov
daa
shll
adc
mov
stos
mov
sbb
mov
repz
clc
mov
insl
outsb
lret
xchg
sbb
push
dec
insb
mov
std
int3
mov
mov
pop
sub
inc
or
pop
cld
pushf
cmp
sbb
sbb
add
cli
jg
aam
push
or
aaa
ja
or
insl
cs
insb
fwait
int3
les
dec
xor
inc
cmp
mov
cmp
cld
xchg
jle
jns
out
shlb
cwtl
jp
aas
decb
adc
inc
pop
pop
gs
scas
adc
cmp
push
shlb
and
pushf
movsl
xchg
mov
cmc
imulb
dec
rcrl
mov
popf
push
arpl
out
imul
je
rcrl
js
pop
pop
dec
repnz
or
dec
inc
and
jge
mov
sub
addr16
dec
sub
dec
mov
out
and
or
inc
jae
gs
sub
jne
sbb
pop
push
mov
mov
xchg
adc
iret
stos
sub
cmp
jl
mov
inc
insl
xor
scas
cmp
out
sub
mov
mov
pop
push
cmp
xor
cmpsb
push
cmpsl
lahf
add
lods
jae
bound
scas
sub
jnp
hlt
ja
push
popf
loop
sbb
pusha
iret
cs
mov
fisttpll
jns
arpl
push
cmp
sub
aam
xchg
lretw
pop
dec
aaa
lea
inc
mov
inc
sub
fwait
lcall
or
fstl
in
add
mov
aaa
mov
imul
test
xchg
jne
mov
cmc
cltd
out
xlat
int3
add
in
jb
pushf
add
shlb
push
mov
sbb
sbb
out
mov
or
out
into
cmpsb
aas
movb
mov
repz
mov
popf
das
pop
push
in
addr16
loopne
nop
int3
mov
sbb
test
lds
stos
fidivrl
mov
aad
loope
or
jns
fcoms
or
or
repnz
xor
rol
cmpb
aam
mov
dec
repnz
fcmovb
jge
inc
lods
add
pushf
push
sbbw
in
gs
sbb
xchg
inc
cmpsl
fsubs
xrelease
fwait
cld
jno
add
fadd
fstpl
pop
imul
pop
negl
mov
repnz
jo
ret
imul
or
loopne
rcrl
fs
fs
cmp
mov
sub
pop
loop
pop
ret
add
repz
push
mov
in
or
mov
sbb
sub
push
imulb
push
sub
adc
sub
or
cmp
xor
mov
rcrb
mov
inc
jmp
cmp
aaa
jmp
jg
test
jmp
clc
pop
jp,pn
sti
lock
fimull
outsb
out
out
xor
mov
inc
add
shll
shll
ja
push
in
xor
in
imull
int3
shl
and
js
inc
xchg
fimuls
or
sub
data16
mov
insb
push
sub
aam
popf
and
std
jo
pop
jmp
cmp
test
aam
scas
adc
dec
mov
aaa
or
das
xor
lock
mov
aas
stos
sub
push
xchg
pop
mov
jg,pt
mov
in
jns
das
dec
cmpb
and
repnz
shll
mov
inc
les
imul
xchg
sub
in
scas
fdivrl
sub
enter
jp
mov
jnp
in
mov
sarb
pop
test
adc
add
insb
add
and
push
adc
add
or
aaa
jno
fildl
pushf
sbb
repz
push
pop
jp
out
xchg
push
mov
push
icebp
in
xchg
imul
dec
jl
ret
inc
cltd
bnd
das
jnp
int
xor
sbb
pop
pop
and
roll
es
sbb
gs
xor
pop
fsubl
notl
and
cmp
mov
pop
or
mov
mov
cmpsb
loop
xor
cli
je
pop
inc
adc
les
adcb
cs
adc
shrb
adc
xor
mov
lahf
jg
mov
pop
xchg
cmp
mov
popa
sahf
sub
rclb
movsl
ret
nop
sarl
xor
adc
imul
shr
sti
mov
fwait
xor
add
dec
mov
movsb
xchg
jp
hlt
dec
jp
mov
adc
add
pop
repz
sub
add
js
and
out
sahf
dec
push
mov
dec
ja
push
test
jno
jl
push
jae
imul
aaa
imul
popa
mov
ss
sub
sub
inc
pop
push
notb
daa
push
sub
xor
push
jecxz
mov
or
or
mov
cmc
pop
xchg
mov
jle
adc
inc
movsl
aam
cwtl
dec
fisubl
movsb
fcmovnb
jbe
xor
mov
call
test
mov
xchg
popf
out
insl
dec
stos
adc
jge
in
pop
mov
push
sub
ret
add
jge
sub
or
fdivrs
push
push
push
pop
sbb
xchg
sahf
lret
add
pop
jno
and
jo
lods
ljmp
sub
pop
adc
pop
mov
lock
cmp
pop
xor
clc
test
xchg
sbb
sub
push
mov
jnp
repnz
push
jnp
mov
out
insl
fwait
pop
or
cmp
das
sbb
jbe
cmc
xchg
xchg
outsb
js
imul
push
add
inc
xchg
push
shll
mov
xlat
cmp
icebp
add
sub
sub
aaa
int
data16
sub
sub
mov
fs
dec
test
cli
pop
aam
cld
dec
stos
pushf
inc
push
ds
pop
sbb
jae
scas
dec
pop
cmp
push
leave
mov
call
mov
pop
clc
pop
xor
inc
icebp
add
jb
adc
cwtl
push
scas
fidivs
mov
mov
test
jbe
pusha
stos
lds
sub
int3
mov
adcl
fdivrs
testl
outsb
mov
mov
push
mov
mov
xchg
and
add
xchg
shl
pusha
in
mov
pop
test
xor
pop
sbb
repnz
test
test
leave
test
inc
ljmp
scas
arpl
jp
cs
dec
mov
push
pop
lahf
add
insl
fsubrl
in
inc
jg
xchg
pusha
and
or
aas
push
lds
mov
fwait
xlat
sub
inc
mov
in
jae
cmpsl
mov
enter
int
shll
loope
pop
xchg
mov
outsl
mov
out
dec
sarl
mov
pop
lock
jge
lcall
lahf
fimuls
lods
leave
maxps
xor
js
test
jns
je
push
cmpsb
aad
jno
or
cltd
mov
add
aas
mov
push
mull
mov
pop
flds
lcall
enter
sbb
subl
arpl
sub
push
shll
xchg
movsb
mov
and
lods
jp
mulb
int
push
test
push
sbb
pop
inc
stos
imul
mov
mov
xor
xchg
jmp
fldl
add
ds
sub
ret
inc
jno
pop
and
mov
add
inc
mov
in
ja
in
andb
sbb
sti
xchg
in
andb
cld
mov
sti
xor
inc
xor
pop
xor
jp
roll
std
fcomi
pop
sarb
mov
push
aam
sbb
cwtl
repz
push
push
jb
cs
adc
sbb
test
insb
bound
push
and
cmp
pop
xor
xchg
cwtl
pop
add
cmpb
xchg
adc
dec
addr16
lock
mov
leave
scas
std
in
mov
mov
sbb
sub
test
lea
lds
loope
add
ja
dec
xchg
sahf
ret
jo
inc
mov
adc
out
adc
int
jl
xchg
sbb
push
pop
dec
sub
mov
in
mov
aam
out
push
in
ja
push
jl
insb
adc
hlt
jne
hlt
mov
mov
repz
cld
sahf
jb
jnp
outsb
adc
mov
mov
lods
addr16
mov
jo
cmp
xchg
les
add
inc
sub
dec
or
call
sbb
jb
insl
pop
es
and
sub
add
std
dec
push
popa
mov
aas
mov
cmp
cmp
mov
cmp
cmp
pop
imull
xchg
ror
test
int
iret
push
pop
out
dec
push
outsb
lods
cmp
adc
aam
add
pop
data16
gs
xor
push
or
jmp
test
add
push
stos
mov
icebp
cmc
or
bound
xorb
xchg
addr16
sahf
jae
jno
cmp
push
popa
fsubrs
stos
adc
sahf
arpl
mov
fsts
loopne
fwait
das
jmp
out
push
fadds
adc
mov
fildll
and
fnstenv
and
and
lret
mov
shrb
cmp
xchg
ret
inc
loopne
iret
pop
gs
or
sub
push
jns
mov
or
mov
or
xchg
popa
mov
inc
mov
jo
push
xchg
cld
push
arpl
cmpsl
sub
orb
sub
pop
stc
testl
cld
ret
sahf
adc
rcl
mov
notl
xor
aam
lock
cmp
mov
push
sbb
cmc
scas
push
or
std
push
inc
arpl
sbb
ja
andl
stos
pop
test
add
aad
and
pop
hlt
adc
iret
push
lcall
jns
cmp
dec
adc
ficoms
mov
jg
fsts
shlb
push
int3
pop
inc
paddd
cmc
adc
mov
jns
xchg
imul
sbb
repz
push
rcll
stos
cmp
dec
mov
testl
pop
hlt
jbe
sar
jno
cmpsl
cmpsl
mov
cmp
idivb
popa
call
jmp
pushf
aas
or
xchg
jg
test
or
cli
sbb
fcmovu
daa
xlat
and
lea
cmp
hlt
leave
push
addr16
or
aad
jp
int3
fstpl
sbb
cmpsl
sbbl
and
dec
sar
jbe
in
pop
idivb
sahf
add
and
sub
mov
cmp
adcb
jnp
int3
scas
and
jg
out
push
fsubrl
pop
sahf
dec
test
cmp
add
adc
dec
es
lock
pop
cli
mov
js
and
repz
ja
pop
frstor
lret
cld
loope
sbb
mov
pop
pop
mov
in
mov
aam
jne
std
ljmp
sub
sbb
mov
mov
subb
leave
jbe
outsl
insb
inc
push
mov
xchg
sbb
xor
mov
dec
repnz
hlt
jae
aaa
movsl
fucomp
rorb
pop
clc
sbb
fldl
ficomps
sarl
xchg
xchg
cmpsb
imul
test
popf
mov
add
lods
push
ljmp
rorb
pushf
mov
movsl
repnz
pop
and
add
lods
xchg
jge
push
dec
in
cmc
push
pop
into
xor
cld
les
aam
icebp
dec
mov
imul
ljmp
mov
nop
adc
mov
dec
enter
ss
jl
and
ret
push
cmp
push
call
ret
jne
pop
in
in
sub
lods
dec
mov
pop
in
loop
push
sub
jecxz
stos
dec
fcmovnu
mov
xchg
les
cmc
fwait
inc
fs
fcom
xchg
fidivs
push
cmp
lea
jno
push
xchg
or
and
cmp
shlb
mov
cli
lret
ds
and
or
xor
cmpsb
insl
pushf
std
lods
fsub
push
in
mov
pop
in
lcall
jae
je
sub
addl
test
jl
fdiv
mov
aas
push
aas
flds
mov
out
sub
jnp
add
and
push
inc
or
sub
scas
push
in
fincstp
or
mov
es
lea
sub
pop
daa
mov
push
into
and
pop
lods
and
sub
jecxz
icebp
xchg
movsb
mov
mov
out
push
xor
xchg
xor
xor
ret
xor
dec
pop
push
mov
mov
jns
adc
jae
jmp
cld
sub
psraw
push
clc
or
insl
fcompl
fcoms
sbb
xor
adc
mov
dec
cltd
rcrb
jl
adc
xchg
sbb
stc
out
stc
push
pop
js
lahf
dec
mov
popa
mov
dec
loopne
repz
mov
loope
cmp
cvtps2pi
lds
mov
cmp
outsl
clc
sub
pop
stc
dec
sahf
xchg
push
das
mov
pop
jne
mov
lods
dec
xor
iret
inc
sbb
andb
or
mov
scas
xlat
sti
sub
popf
into
jge
aas
add
aam
dec
mov
icebp
std
and
pop
jp
test
repz
inc
inc
movsb
jmp
sub
add
mov
pop
pop
std
mov
aam
int3
ficompl
dec
subb
cmpsl
dec
fcomp
shlb
test
pop
out
in
and
cltd
pop
pop
ss
mov
add
test
push
pop
jno
sbb
cmpsl
icebp
lods
push
insb
arpl
hlt
pop
insb
jbe
lea
pushf
loop
popf
xor
fcom
pushf
lahf
rclb
lret
sti
repnz
or
xchg
fcmove
mov
insl
dec
stos
negl
cmp
rclb
inc
inc
mov
xor
sbb
cli
insb
cli
sbb
or
lods
sbbb
repz
dec
mov
ss
sbbb
sbb
pop
lahf
pop
gs
pop
test
jb
scas
jmp
daa
test
hlt
jg
ss
or
mov
fcomps
pop
mov
xorl
mov
jae
mov
push
ljmp
cmp
arpl
jno
pop
inc
cmc
fildll
fisubl
ljmp
pop
adc
xchg
add
addr16
jmp
popf
mov
mov
movsb
push
cmc
xchg
iret
xchg
outsb
pop
iret
ds
xchg
dec
loop
pop
mov
cmpsl
hlt
lods
xchg
push
xor
out
dec
call
dec
cmp
lods
dec
push
mov
or
dec
cltd
or
pop
or
int
into
out
shrl
adc
lcall
scas
nop
xor
sub
dec
mov
cmp
inc
stos
xchg
rclb
mov
add
mov
adc
test
lods
cltd
fidivrs
jne
cmp
jnp
rclb
dec
ficomps
fidivs
push
sub
sbb
jns
cmp
push
addr16
mov
xchg
mov
adc
and
mov
cwtl
jo
lock
pop
inc
ja
push
pop
xchg
das
dec
xor
cmc
or
xchg
add
fs
shlb
mov
add
ffree
mov
sbb
xor
adc
ds
sub
adc
jge
stc
jb
dec
push
sub
dec
jge
bound
pop
ss
mov
dec
pop
lcall
aam
daa
jl
test
lcall
pop
mov
sub
mov
ljmp
inc
cmp
movaps
mov
sahf
xchg
js
sti
jmp
inc
fisubs
cmp
ret
mov
inc
testb
aas
adc
dec
mov
mov
lds
xor
shll
push
xchg
stos
adc
loope
jmp
inc
mov
movsl
ss
rcl
mov
jnp
add
jno
mov
repz
pushf
adc
lahf
cltd
in
mov
add
mov
adc
mov
fs
andb
pop
push
cmc
cmp
imul
popa
jno
ljmp
xor
push
mov
mov
dec
xchg
adc
popa
cmp
and
addr16
pop
leave
xor
stc
in
sub
fistl
sbb
sbb
mov
xchg
roll
test
pop
je
sbb
ds
daa
lcall
rorl
xlat
mov
lock
loopne
cmp
push
and
outsl
cmp
pop
pop
add
cmp
pop
ss
mov
scas
cmp
xor
inc
mov
xor
in
mov
xchg
or
jbe
loopne
or
fwait
and
cmp
mov
pop
add
imul
dec
dec
daa
jno
bound
sti
jmp
pop
and
jae
cltd
in
mov
lret
xchg
pusha
or
pop
mov
subb
mov
or
or
inc
xor
sbb
movsb
daa
xchg
loopne
aas
pop
or
fld
aad
sbb
sar
js
repz
jg
outsl
fsubl
inc
ficoml
sub
in
inc
push
outsb
lods
adc
add
shll
out
jb
stos
pop
mov
and
int3
and
mov
add
arpl
push
stos
popf
icebp
in
int
andb
cmpsl
cltd
or
jl
mov
ds
fistl
xor
xchg
cmp
mov
ret
mov
cld
mov
imul
daa
lock
xchg
pushf
dec
add
movsl
sbb
sbb
lods
cmp
sub
dec
cmp
push
mov
js
sbb
cmc
mov
or
out
pop
mov
int
push
adc
push
out
and
sbb
repz
cmp
scas
xlat
mul
leave
cli
mov
ja
sub
rorb
cmc
jge
cld
addr16
outsb
lods
in
scas
out
in
mov
jle
xchg
mov
mov
loopne
movsb
push
aas
xor
loopne
xchg
mov
pop
lea
pop
das
bound
or
jae
xor
jle
lods
mov
mov
cwtl
and
mov
cmp
pop
adc
out
jno
mov
adc
xchg
loope
jecxz
cmp
popf
xor
mov
mov
mov
adc
adc
loop
jns
pop
push
mov
lock
lds
aas
js
xor
xor
movsl
or
fwait
jg
push
xchg
push
lds
lods
xchg
sub
xchg
scas
ret
adc
dec
lret
shll
lea
out
add
daa
adc
daa
lea
jne
sbb
dec
loopne
stc
mov
testb
test
ror
push
fbstp
mov
and
leave
ljmp
jne
sbb
aaa
adc
add
add
nop
ljmp
jg
lcall
cmc
movsl
adc
mov
and
pop
repnz
xchg
arpl
push
pop
repnz
mov
rcr
lret
sbb
push
pushf
inc
pop
sar
or
lods
leave
ss
pop
pushf
xchg
inc
xor
push
sub
mov
and
pop
stos
xchg
inc
insb
int3
xchg
movsl
outsl
fstp
sub
inc
aad
ror
mov
nop
pcmpgtd
ds
push
jnp
cmp
mov
lret
in
aaa
inc
lods
in
dec
shll
xchg
adc
xlat
arpl
imul
and
mov
and
into
mov
jg
jle
xor
sbb
imul
dec
test
jns
pop
rolb
adc
push
fdivp
add
push
mov
in
stc
add
sbb
repnz
mov
je
xchg
pop
xor
loop
dec
ret
clc
dec
mov
sub
pop
inc
cli
mov
je
vshufpd
fs
mov
jo
adc
fwait
lret
sbb
and
or
add
or
shrl
cmp
out
jae
pop
jnp
add
decl
jne
pop
shll
mov
cmpsb
mov
xor
dec
inc
daa
push
jmp
dec
cltd
inc
out
sub
xchg
addb
or
test
sbbb
jae
xor
mov
call
movsb
jne
lahf
dec
pop
xlat
add
movsb
seto
out
pop
pushf
xor
or
nop
pushf
cmc
add
fucomp
leave
push
or
gs
mov
jo
imul
in
mov
add
mov
push
addr16
xchg
nop
ret
pop
fimull
popa
bswap
data16
inc
cmc
or
inc
inc
cwtl
in
nop
clc
xor
and
inc
adcb
sub
push
out
xchg
out
push
je
popf
dec
ficompl
jbe
data16
dec
shl
mov
std
mov
in
ja
lock
mov
cmpsb
mov
dec
test
lods
cmpsb
adc
push
and
frstor
or
inc
shll
cmp
in
fdivp
sbb
add
mov
fsubl
gs
mov
xchg
adc
fsubrl
testl
xlat
mov
notb
push
add
cmpsl
sbb
adc
js
and
pslld
adc
cmpl
push
mov
cmp
adc
adc
outsl
ja
scas
in
pop
mov
mov
je
mov
mov
jne
nop
dec
and
addr16
mov
mov
lcall
out
mov
push
orb
mov
daa
pop
cli
jmp
sub
xor
cs
fisttpll
ret
pushl
mov
mov
jae
push
push
dec
jbe
fsubrs
xchg
imul
fsubl
out
inc
xchg
aas
adc
jo
mov
mov
push
enter
dec
mov
les
gs
sar
push
adc
inc
jl
popf
pop
pop
arpl
test
test
outsb
pop
hlt
pop
mov
outsb
sub
and
mov
negl
test
cmpsl
mov
sarb
and
push
push
xchg
cmpb
es
push
mov
xor
mov
pushf
icebp
mov
rcl
inc
pop
cmp
repnz
fcomps
daa
adc
cmp
lahf
jo
mov
inc
push
cltd
add
xchg
cmpsb
push
cmp
lock
xchg
shl
movsl
mov
xor
ja
iret
push
adc
jb
pop
sbb
push
dec
mov
cli
inc
loope
push
les
cmp
and
mov
repnz
mov
es
xchg
loope
ss
scas
sbb
jl
jge
insb
jno
out
scas
movsb
fnsave
xor
ljmp
inc
ss
lahf
push
in
or
jg
pop
and
xor
rcll
fdivrl
into
mov
pop
mov
stos
xchg
push
jmp
pop
popa
pop
mov
in
and
insl
lret
lea
int
popl
xchg
test
xchg
add
cltd
xor
jo
adc
lret
inc
mov
imul
sub
mov
in
ss
incl
and
dec
or
xor
push
addr16
mov
aam
lcall
rol
cmp
mov
or
shll
dec
cmp
jno
lock
or
pop
je
out
gs
xor
sub
ret
jmp
daa
call
push
mov
in
jae
adc
inc
and
ret
int
cmp
jo
xorl
add
dec
adc
rcrb
ficoml
add
push
mov
pushf
inc
dec
pop
sbb
loop
in
push
jne
mov
inc
mull
fmull
adc
xor
fcoms
pushf
into
enter
aaa
movsb
stc
xor
push
jge
pop
stc
jnp
add
dec
insb
sbb
pop
and
aad
pop
push
sub
mov
xchg
pop
mov
test
shrl
xchg
xor
daa
sbb
jmp
outsl
pop
fs
or
jge
or
xor
in
arpl
aaa
outsl
out
shl
cltd
scas
jb
xor
popa
out
mov
outsl
nop
dec
fisttpl
mov
movsb
or
add
push
jg
mov
pop
jmp
cs
cmp
ret
add
inc
fdivrl
mov
push
les
xor
sbb
outsb
jnp
insl
faddl
popa
pusha
test
shrl
jl
mov
dec
mov
or
pushf
test
subl
bound
push
jge
and
fnstsw
lods
add
out
in
jae
pop
push
cmp
sti
scas
sarl
mov
mov
jbe
mov
and
adc
sbb
or
mov
sbb
add
stos
pop
xchg
add
call
in
mov
cwtl
addl
fidivl
leave
pop
xor
in
repnz
lods
in
aad
xor
mov
push
rcl
stc
mov
les
cld
je
xor
push
mov
sbb
repz
push
pop
pop
and
repz
push
mov
sbb
inc
shlb
in
lret
cwtl
outsb
nop
test
mov
aaa
sbb
popf
mov
push
mov
xchg
adc
push
addr16
mov
jae
dec
jge
xchg
popa
push
stos
mov
lea
cmp
out
mov
fistpl
mov
xchg
into
ja
pop
adc
test
scas
jl
mov
mov
mov
popa
mov
inc
xchg
int
mov
mov
mov
scas
inc
sub
add
imul
pop
clc
lcall
je
jae
shlb
lea
jbe
adc
dec
mov
adc
insl
loopne
adc
mov
subb
push
jno
jno
pushw
imul
inc
xchg
pop
fwait
shll
cmpsl
es
add
cmpsl
jl
lods
cmp
push
or
cli
bnd
mov
pop
sbb
cmp
add
push
lds
cmpl
and
sbb
ljmp
adc
fidivrl
insl
cwtl
inc
mov
and
mov
loope
sahf
movsb
sti
subl
in
adc
pop
out
xchg
ficompl
fcoms
mov
lret
dec
sbb
clc
les
push
adc
xlat
ss
fucomp
stos
xchg
mov
imul
or
inc
imul
stos
push
jg
mov
adc
fstl
std
js
icebp
add
shll
or
test
lcall
popa
cmpsb
mov
jbe
sbb
and
mov
jo
lods
bound
and
out
inc
lcall
cli
fldl
mov
mov
fstl
mov
sub
inc
sti
pop
inc
cmpsb
mov
aad
and
ret
mov
cmp
mov
adc
fistpll
fcos
or
loopne
into
or
out
je
shlb
out
int3
cs
popf
pop
rcrl
pushf
push
or
cltd
xchg
test
fnstsw
xlat
add
pop
dec
pop
cmp
insb
je
mov
xor
xor
test
out
inc
stos
sub
xor
loop
sub
mov
dec
mov
dec
cmc
sbb
mov
jns
push
cs
bswap
or
or
dec
dec
mov
mov
mov
mov
dec
sbb
out
mov
cs
push
cltd
test
arpl
fnsave
inc
xchg
jle
repz
add
push
adc
sbb
mov
push
dec
cli
lcall
sub
jae
bound
push
sbb
push
movsb
pop
into
dec
xor
fs
testl
mov
popa
adc
pop
xor
sbb
shll
in
dec
out
clts
loopne
les
popa
add
dec
decb
mov
xlat
std
add
adc
arpl
fistpl
xchg
push
test
adc
mov
std
push
gs
sub
xchg
lods
jmp
push
fidivs
in
sbb
cmp
out
cltd
ret
push
pushf
jae
ljmp
dec
sbb
movb
pop
aad
jge
sbb
and
arpl
push
outsl
and
jmp
inc
int3
xchg
adc
push
iret
and
adc
sbb
adc
xor
jae
mov
jl
push
mov
out
mov
enter
inc
sbb
mov
insb
into
inc
pop
jnp
shr
jae
pop
ret
ja
fwait
ljmp
ljmp
rorb
scas
add
inc
push
popl
sub
in
out
cltd
mov
jg
mov
movsb
in
ljmp
mov
push
adc
or
repz
mov
popf
shlb
mov
pop
xlat
inc
dec
mov
adc
sahf
xchg
fisubrl
stos
add
mov
mov
ljmp
sub
pop
dec
adc
xor
or
push
stos
xchg
push
pop
lods
adc
mov
icebp
fldl
sbb
xchg
insl
adc
dec
cli
imul
pop
mov
adc
cs
dec
out
popf
lahf
stc
dec
in
arpl
xchg
jo
call
in
sbb
xchg
or
and
or
jbe
adc
push
call
sbb
ret
xor
dec
cltd
jb
sbb
cwtl
ficoml
notb
shlb
je
push
mov
fsts
xor
sub
iret
pop
cmp
repnz
add
push
pop
sbb
xor
femms
add
mov
or
xchg
xor
xchg
jo
pop
leave
repnz
subb
dec
ljmp
dec
mov
neg
jmp
mov
clc
pop
cmp
mov
mov
cwtl
jmp
leave
fdivs
bound
xchg
pop
daa
cltd
xchg
fcoml
and
iret
out
js
jecxz
push
push
icebp
into
mov
xchg
xchg
shlb
dec
adc
insl
mov
mov
ficoms
push
outsb
jg
inc
fs
adc
cmp
popf
inc
xchg
mov
and
xor
or
sbb
cmp
or
xchg
push
cltd
out
sbb
pop
ret
pop
push
cmpsb
arpl
insl
repnz
or
sub
jp
imul
or
add
xor
xor
jle
cmp
repz
aas
lahf
test
dec
imull
jp
mov
fs
test
mov
push
sbb
sbb
les
mov
int3
mov
ret
pusha
xchg
les
pop
and
lret
adc
fildll
cmp
mov
fwait
add
sbb
enter
insl
pop
test
stos
int
dec
lahf
pop
mov
insl
sbb
cmpb
rcrb
jno
bound
push
mov
popf
push
ss
loopne
dec
sbb
mov
jb
mov
and
aad
mov
loope
or
jno
pop
jp
insl
cmp
jmp
dec
jle
jmp
in
dec
xor
mov
pop
adc
xchg
pusha
les
in
inc
xchg
jl
notl
lret
jo
stc
insl
push
cmp
sbb
dec
sub
cmp
aaa
enter
fnstsw
dec
js
in
into
call
pop
mov
jo
push
fimuls
lahf
cwtl
fs
in
in
clc
push
add
ret
testl
lods
in
aam
sarb
or
xchg
and
testl
sbb
cmc
out
punpckhwd
movsb
inc
dec
dec
sahf
mov
cmp
xchg
rol
insl
mov
test
mov
jmp
das
scas
jae
mov
js
dec
jl
inc
cltd
sahf
pop
adc
stos
pop
filds
sarl
add
jbe
mov
xlat
push
and
dec
xor
xchg
and
jp
pushf
fwait
rorl
sub
mov
aas
dec
das
inc
clc
and
in
call
test
jg
mov
scas
scas
js
mov
in
jb
or
ljmp
enter
adc
pop
or
and
sar
lds
loopne
mov
adcb
push
ds
jno
movsl
in
pop
mov
pop
xlat
add
xchg
out
in
dec
push
and
divb
xchg
movsl
dec
cmpsb
int
in
loopne
movsb
ljmp
nop
out
mov
data16
test
mov
mov
mov
push
lahf
sahf
in
pop
fcmovbe
aaa
add
or
jecxz
sbb
movsb
xchg
outsl
test
mull
movsl
in
xor
into
fs
or
sbb
xor
shrl
jecxz
cs
pop
xor
or
and
popa
fdivr
jne
xlat
inc
mov
daa
cmc
xchg
pop
arpl
pop
and
cld
movsb
pop
jno
or
cmp
pop
dec
push
int3
mov
ljmp
repz
lds
aaa
add
mov
ss
pusha
mov
loop
or
in
fwait
push
iret
jnp
mov
movsb
mov
ljmp
add
dec
adc
xor
jecxz
push
xor
test
ret
mov
push
inc
xor
repnz
sub
push
insb
mov
pushf
cmp
subl
sub
jecxz
adc
cmpsb
mov
sbb
sub
ljmp
lret
out
xchg
pop
push
pop
or
repnz
inc
mov
jne
adc
cmpsb
dec
mov
sub
adc
test
dec
xor
lock
rcll
jb
sub
enter
call
and
jle
fisttps
xchg
sbbl
mov
mov
cli
roll
imul
in
das
or
xchg
mov
jb
and
mov
repz
leave
adcl
pop
mov
inc
mov
push
scas
andb
leave
int
mov
lods
dec
repnz
pop
push
in
fidivs
or
and
xchg
pop
into
pushf
leave
int
adc
jbe
inc
jne
cld
lahf
nop
ret
mov
sub
dec
stc
movsl
jle
lret
push
push
cli
aam
dec
dec
push
in
sbb
sbb
jbe
push
ficoms
and
sahf
xchg
jp
or
icebp
mov
lret
jmp
add
sub
mov
imul
addr16
sbb
es
lock
push
and
insb
fcmovu
fs
jnp
jecxz
mov
mov
rolb
dec
fimull
push
gs
push
movb
addr16
mov
sub
jmp
jo
lock
pop
jmp
imul
adc
enter
sti
adcb
movsb
add
insl
mov
and
cmp
mov
scas
popa
movsb
xor
sbb
push
mov
jns
inc
test
dec
rolb
ljmp
mov
mov
lock
mov
and
push
das
xchg
mov
fisubrl
xor
enter
mov
cld
push
hlt
jbe
mov
pop
js
cltd
andb
cwtl
ret
push
inc
xor
je
sub
add
movb
les
fs
ret
xchg
in
sbb
leave
cltd
les
add
lret
test
push
xor
sbbb
lret
jg
inc
outsl
mov
jns
mov
mov
ror
lock
mov
gs
add
lret
cmp
orb
mov
mov
pop
dec
pop
and
out
add
popf
cs
push
ret
push
es
mov
ljmp
or
mov
and
dec
jge
lret
jmp
jecxz
fcomp
mov
test
cmp
ret
pusha
jo
out
adc
scas
mulb
iret
jg
into
mov
ret
mov
dec
cmp
jmp
pop
sbb
cmc
push
scas
or
pop
scas
sbb
mov
stos
adc
push
push
cmpsb
scas
pop
je
movsl
stc
fstpt
and
sbb
fadd
sbb
out
xor
imul
das
test
insb
hlt
movsl
or
inc
cmpsl
mov
lcall
movsb
imul
dec
iret
cmp
mov
stos
imulb
sbb
test
cli
xlat
cmp
mov
lods
mov
aad
lahf
cld
sub
dec
sbb
mov
mov
cltd
loop
sbb
scas
xor
enter
dec
mov
insl
jb
stos
in
je
in
test
mov
jmp
push
test
jecxz
andl
lret
jno
and
icebp
imul
fcmovb
sbb
ss
scas
pop
and
jmp
lods
movsl
subb
adc
and
pop
cmp
push
sbb
dec
js
int3
ljmp
sub
push
test
inc
sahf
adc
mov
cmp
xchg
jg
enter
insb
fmul
pushf
sub
adc
mov
out
sar
lds
bound
cmp
clc
xlat
pushl
outsl
fstl
test
lods
jnp
and
clc
out
jle
xchg
clc
dec
outsb
fsubl
mov
test
mov
sbb
scas
add
add
ficompl
mulb
pop
aas
dec
insb
in
stc
je
pop
mov
je
mov
jns
stos
push
imul
aaa
pop
addb
fisttpl
lods
ja
leave
in
sbb
cmp
fstpl
mov
dec
enter
lcall
js
ds
repz
mov
insb
xlat
test
mov
mov
xor
iret
shrb
stos
movsl
and
xchg
enter
mov
dec
cmp
mov
pushf
mov
ja
mov
movsb
dec
lds
leave
les
mov
jae
pop
lods
pushf
gs
or
adc
mov
cmp
mov
out
sti
push
mov
sub
push
aam
cmc
mov
adc
call
lock
xchg
sbb
in
leave
pop
fidivrs
inc
loop
sub
into
add
push
mov
test
mov
xchg
xchg
sbbb
fwait
std
inc
cmc
push
cmp
jle
push
mov
add
fcmovbe
inc
xchg
pop
nop
aaa
add
test
cltd
je
pop
sub
jnp
sub
cwtl
int3
jp
pop
in
test
pushf
and
dec
test
int3
dec
out
lcall
dec
in
movsb
sub
mov
popw
std
fwait
inc
dec
inc
xor
cmp
notb
add
xchg
lods
mov
pop
push
jl
div
fimull
jecxz
enter
add
pop
xchg
addr16
mov
add
in
dec
xor
xor
in
fcoms
inc
mov
shll
subl
adcw
jo
popf
cmp
inc
push
arpl
mov
pop
out
into
clc
ret
iret
push
idivb
sub
in
jmp
cmc
imul
inc
pop
fucomi
dec
nop
fld
les
inc
iret
xor
mov
rcl
arpl
xor
imul
mov
jl
mov
adc
dec
cmp
inc
push
cli
nop
mov
pop
sbb
sbb
cmp
jns
mov
rolb
addl
mov
fnstenv
jmp
bound
cs
clc
repz
hlt
lahf
enterw
inc
les
data16
movsl
out
pop
and
jno
sbb
sub
and
adc
xchg
mull
and
inc
imul
add
sbb
imull
push
dec
push
jmp
mov
or
out
cli
mov
rorl
jno
push
push
shl
mov
iret
sub
add
mov
enter
cmpsb
cmpsl
int
and
inc
adc
xor
pushf
out
pop
xchg
popa
pop
ja
pushf
or
sub
and
jle
imul
sti
push
xchg
addr16
pop
jns
repnz
popw
bound
xchg
clc
push
dec
mov
fs
lret
test
ja
push
adc
das
lcall
insb
or
movl
mov
sub
lds
jo
shl
cs
or
mov
jno
jle
out
in
div
adcl
stos
bound
xlat
pop
fnstenv
mov
shrb
sbb
in
fdivs
add
dec
mov
adc
push
lcall
and
jbe
inc
aam
and
lods
jno
scas
jl
jmp
fidivrl
xor
mov
adc
clc
fmuls
mov
cmc
loop
testl
loope
sub
pop
lcall
xchg
and
mov
in
or
popa
mov
cmpsb
repnz
pop
inc
xor
lds
vpsrlq
das
and
xor
gs
mov
aas
imulb
mov
cmp
xchg
sti
cwtl
xchg
cmp
xchg
dec
pop
push
mov
mov
jno
jb
lret
inc
ret
lds
insb
lds
sub
cmp
mov
repz
pop
cmpsb
int
push
rorb
add
pop
pop
xor
pop
xor
cmp
cmc
out
push
xor
cs
push
lods
int
in
jae
jge
aad
cwtl
inc
lcall
push
mov
pop
notb
add
ror
mov
adc
test
cmpsl
add
mov
pop
mov
pop
lods
push
xchg
mov
push
shll
mov
faddl
fyl2xp1
sbb
adc
xchg
pop
and
lods
inc
mov
cmp
jl
mov
push
repnz
rolb
cmpsl
pop
jl
scas
divb
mov
lcall
pop
lahf
mov
paddd
sbb
ljmp
rcrl
and
stc
insb
adc
std
pop
xchg
push
daa
push
aam
push
dec
orl
pushf
mov
push
aam
xchg
out
xchg
push
push
inc
icebp
je
aas
imul
lcall
inc
jae
inc
push
dec
lods
dec
cmc
das
add
xchg
push
dec
sub
loop
jne
dec
push
filds
sbb
movsl
fwait
xchg
xor
cmp
pop
cmp
and
add
xchg
pusha
mov
sbb
iret
repnz
daa
sbb
daa
or
stc
andb
mov
addr16
aad
cs
inc
sti
dec
sbb
test
or
mov
cmc
sbb
pushf
cwtl
inc
inc
insl
daa
iret
cld
or
loopne
dec
hlt
sbb
aaa
test
fildl
repz
int3
out
pop
pop
cmpsb
xadd
mov
sahf
jno
stc
mov
out
sbb
lahf
lret
mov
sbb
lahf
xor
ret
fldcw
subb
in
jb
dec
gs
cmp
scas
divl
mov
lcall
std
mov
flds
xor
jne
mov
into
or
push
push
xchg
add
jg
inc
xchg
jecxz
cmc
dec
sbb
add
shlb
xor
mov
dec
sbb
inc
ljmp
pop
jmp
rcl
jge
xor
sahf
push
out
dec
aad
clc
or
jge
cmp
push
in
add
ss
imul
xchg
popf
sub
fisubl
push
pop
jae
cmp
cmp
iret
jo
adc
std
fidivl
mov
aad
bound
popa
decl
in
lock
nop
fbstp
cltd
push
das
sub
push
sub
jl
xchg
pop
pop
fisubrs
or
fwait
es
mov
into
or
ja
ljmp
xchg
loop
fsubs
and
repnz
add
jo
daa
ret
adc
xor
sbb
dec
cld
imul
and
sbb
sti
lahf
outsl
jg
sub
in
aaa
add
ret
loop
mov
out
adc
cmpsb
inc
popf
and
mov
xchg
pop
imul
mov
and
std
adc
pop
orl
out
push
push
cmp
pop
mov
dec
hlt
popa
cmp
or
xor
cmp
push
mov
mov
push
test
mov
mov
scas
fdivp
popa
mov
mov
push
or
ds
sbb
das
lds
adcl
mov
cs
enter
mov
iret
pop
xchg
insb
dec
dec
xorb
ss
jge
aaa
sbb
push
fwait
jp
and
mov
inc
add
mov
pop
cmp
shl
sbb
out
in
cmp
adc
adc
out
decl
push
sub
ficoms
pop
dec
or
push
test
int
and
iret
ja
aam
imul
or
xchg
cmp
out
pop
push
mov
bound
in
mull
pop
pop
dec
test
jnp
sub
push
in
or
rclb
mov
les
or
data16
mov
mov
mov
cli
rep
std
xchg
xchg
ss
mov
subb
repz
mov
jne
mov
dec
shrl
push
imul
inc
out
xchg
lods
cltd
dec
inc
xchg
cltd
push
shlb
sub
xor
arpl
fsubl
pop
jl
pop
inc
lret
bound
and
inc
repnz
mov
push
mov
sub
fdivrs
lods
mov
cmpl
mov
and
negb
mov
sub
movsl
out
sbbb
ss
fsubp
js
jbe
xor
pop
aaa
lret
adc
xor
xor
sbb
jmp
test
mov
pop
sub
dec
movsl
push
std
imul
dec
sub
cmpsl
shrb
xor
es
add
leave
jle
adc
out
pop
pusha
xchg
xchg
cld
div
cltd
sbb
aam
and
fldcw
sbb
cmp
ret
pop
mov
pop
loope
cmp
cs
xchg
repz
icebp
enter
xor
xor
cmp
xchg
xchg
and
xchg
mov
fs
clc
sbb
inc
in
mov
xchg
pop
xchg
arpl
sahf
aaa
stos
sarl
and
sub
nop
mov
cmpsb
mov
imul
pop
inc
sbb
adc
idivb
jg
lock
mov
ret
xchg
enter
fcoms
sub
out
mov
cmp
das
imul
jae
mov
dec
mov
or
xor
outsb
imulb
data16
mov
lds
gs
sbb
pop
cli
leave
cmp
arpl
cmc
sti
insb
call
pop
bound
lcall
fmull
or
push
test
fwait
push
jg
stc
jp
mov
pop
mov
mov
lret
push
ret
push
sub
fsub
ret
add
add
mov
cmp
push
cli
xor
dec
push
inc
jge
pop
mov
adc
jb
sbb
hlt
sub
js
lcall
push
xchg
mov
mov
pop
mov
inc
cs
push
cmp
xchg
pop
imul
xchg
jmp
jmp
cmpsl
cmpsb
std
cmp
jo
shrl
vmwrite
scas
dec
lds
out
rorl
dec
mov
and
das
mov
rclb
ja
mov
push
mov
sub
mov
mov
lods
add
add
inc
inc
fiadds
shrb
call
pop
dec
xchg
and
in
test
in
xor
jns
xchg
jbe
in
sahf
imul
aas
and
cs
push
pushf
test
xchg
aam
insl
dec
fnstcw
sbb
jl
mov
rorl
lods
push
xor
inc
data16
leave
aam
inc
push
jnp
fildl
fsubrl
mov
and
jge
push
addr16
pop
jp
popf
cmp
dec
std
mov
lcall
adc
or
test
xlat
xchg
xchg
xor
daa
adc
xor
xchg
mov
pop
mov
fisttps
inc
nopl
cmc
dec
jle
adc
ror
icebp
fwait
inc
and
paddw
xchg
cs
shr
and
and
cld
sub
xchg
adc
daa
cmp
sbb
gs
sub
stc
andb
or
mov
not
inc
pop
cwtl
pop
mov
arpl
fldenv
je
add
std
sbb
push
hlt
sbb
in
pop
aad
inc
mov
das
lock
and
push
dec
sbb
mov
mov
sbb
add
into
arpl
or
ja
data16
jae
incb
iret
repnz
rcrl
addr16
sbb
mov
mov
mov
pop
xor
dec
push
xchg
sbb
and
jge
xor
adc
push
sub
mov
or
sbb
and
inc
sbb
enter
adc
pusha
dec
sbb
subl
cmp
roll
xchg
push
lds
repnz
stos
pop
mov
shrl
mov
pop
jae
adc
call
fadds
pushf
push
cs
sub
mov
jbe
out
or
sahf
jle
jbe
test
mov
por
sub
stc
inc
and
fiaddl
mov
push
nop
icebp
xlat
ja
rcrl
das
cs
pop
or
cmp
mov
data16
lret
mov
xchg
mov
scas
std
cmp
test
test
outsl
shlb
repz
inc
stc
push
mov
xor
mov
and
push
sub
cs
js
insl
popf
adc
lahf
add
in
pop
mov
pop
push
leave
mov
and
mov
rorl
pop
or
jbe
popa
mov
leave
out
jns
xor
je
jb
hlt
sbb
out
fnstenv
pushf
sti
in
push
icebp
xor
xor
lods
push
mov
mov
and
xlat
outsb
in
pop
xor
fcomps
imul
xor
mov
es
xor
push
loopne
adc
insb
cmpsl
push
adc
fnstenv
add
add
cltd
jmp
xchg
push
loopne
mov
and
push
cmpsl
ja
pushl
or
fcmove
xlat
sub
out
jg
imul
ret
movl
stos
fsubrl
iretw
pusha
pop
call
insl
jne
js
lods
in
ret
lods
stc
mov
push
pop
fisubs
push
and
cmp
xor
cmp
imul
xchg
adc
int3
mov
sub
scas
pop
shrl
sub
jnp
mov
je
mov
lret
stc
mov
faddl
xor
daa
cmp
fidivs
pop
test
mov
jle
mov
subb
and
lods
es
cld
in
test
mov
push
jge
pop
pop
cmpsl
bound
pop
cmp
ljmp
loope
jle
mov
add
xchg
sub
or
mov
or
sub
cli
int3
jp
pop
add
out
adc
loope
xor
mov
mov
insb
and
sarl
dec
sub
mov
and
push
syscall
sub
data16
bound
stos
mov
pop
dec
mov
pop
enter
movsb
mov
imul
jg
cmc
popa
sub
xchg
pop
clc
pushf
loop
lret
cld
nop
or
adc
idivl
ror
cmc
cmp
cmpsb
and
xchg
cmp
daa
sbb
add
rclb
and
push
in
adc
or
sub
fwait
dec
xchg
mov
fbld
jnp
test
in
stos
xchg
jb
xchg
fstl
mov
lds
call
pop
adc
inc
mov
movsb
and
jl
idivb
add
aas
xchg
movsl
fs
subl
inc
inc
loopne
pop
stos
jmp
mov
sub
scas
pop
push
loope
roll
notb
mov
mov
enter
jae
xchg
sub
jp
ljmp
rcll
push
xor
jmp
xchg
sbb
ficoms
or
ja
mov
and
push
or
sarl
dec
jecxz
lahf
adc
inc
or
lock
daa
jge
cmp
mov
insb
addr16
js
add
fnsave
jns
mov
lods
inc
mov
mov
cmc
or
sbb
ret
fistpl
or
xchg
std
ds
scas
dec
cmpl
in
jmp
jg
add
and
loope
stos
je
xchg
or
inc
fsubl
and
adc
lret
jo
loopne
iret
inc
mov
popf
adc
ss
lahf
pop
insb
aaa
dec
mov
lock
push
rcl
aaa
add
cmc
addr16
lahf
xor
imul
adc
jo
ret
and
addr16
cmpsl
lds
call
dec
pop
push
cmp
out
adc
stos
cld
xor
inc
mov
mov
test
inc
adc
ds
push
jno
add
push
mov
fnstcw
lods
popf
inc
test
jge
push
mov
int3
lods
mov
mov
adc
add
cmp
dec
cmp
dec
sbb
lahf
aam
sbb
push
repnz
fs
inc
cli
js
jl
dec
push
insl
jnp
inc
xchg
sbb
loope
outsb
cmpb
bound
push
jbe
ljmp
xchg
jmp
mov
push
jg
jp
jl
out
mov
test
and
lret
in
xchg
scas
sbb
sub
nop
push
jmp
lret
mov
mov
leave
sbb
in
xor
rol
jno
popf
imul
mov
jle
movsl
adc
xchg
push
mov
sbb
pop
pop
notb
pop
mov
cmpl
dec
add
jg
out
push
jnp
insb
scas
or
push
push
and
add
cmpsb
testb
or
mov
das
add
jge
inc
test
jecxz
shrl
test
fbld
ds
xor
loop
jnp
push
dec
mov
out
daa
xor
lock
fidivrl
mov
clc
mov
repz
add
daa
mov
mov
pop
mov
sub
sti
leave
sub
mov
xchg
adc
pop
call
cmp
cmp
or
push
pop
inc
inc
jmp
lods
ja
sub
or
jb
cli
cmp
loopne
shrl
adc
adc
popa
jne
fdiv
push
mov
and
add
flds
inc
dec
xor
dec
hlt
dec
jns
cmpsb
lret
outsl
mov
mov
xor
sahf
call
dec
hlt
sub
mov
and
int3
shlb
cmp
loopne
pop
or
out
xchg
xor
mov
sar
fs
ficompl
clc
mov
mov
mov
fnstenv
mov
mov
fld
int
jbe
cmp
into
andb
cmpsb
or
sbb
loop
mov
shrb
fisubrs
fdivrl
jo
lahf
mov
sbb
das
mov
sub
stos
pushf
ret
es
or
mov
cmp
xor
dec
push
mov
lock
jge
fwait
or
sub
xor
ret
add
fstpl
xchg
mov
ret
cmpsb
and
mov
fisubrs
test
icebp
push
sbbl
dec
adc
mov
sub
jle
test
pop
jb
adc
sete
cmp
push
fcmovb
inc
pop
shrl
es
je
lds
stos
mov
pop
daa
aas
gs
adcl
ss
push
inc
cmpsb
jecxz
andb
enter
hlt
push
sbb
test
int
aam
and
lret
xor
aam
push
push
push
je
lret
cmpsb
mov
jae
xchg
jnp
lahf
out
pop
leave
mov
mov
in
adc
pop
ret
rorl
inc
movsl
and
stos
js
into
sti
pop
cmc
je
fwait
jno
sti
repnz
test
adc
sub
sbb
cs
xchg
shl
xchg
shrl
dec
pop
inc
inc
inc
insb
lods
inc
sbb
scas
cmc
adc
sarb
adc
fwait
nop
cmp
gs
ficomps
inc
adc
push
jb
push
insb
imul
into
jb
mov
fdivl
push
sbb
popf
or
push
das
data16
sbb
sbb
loopne
mov
out
jae
xchg
fisttps
push
repnz
push
inc
stos
mov
test
clc
shll
iret
loop
and
enter
xchg
pop
shufps
mov
push
lret
adc
xchg
fisttpl
add
loop
xchg
mov
popa
shld
sbb
daa
fs
js
movsl
repz
fsubr
sbb
jne
dec
inc
or
push
pop
and
ficomps
cmp
addr16
fcmovnb
jmp
call
nop
mov
and
push
test
imul
xchg
test
mov
idivb
mov
add
xchg
or
fistps
mov
sbb
dec
cmpsl
xchg
sub
cmpsl
lods
test
jp
shr
ja
jnp
cmpsb
sub
into
mov
jmp
fidivs
xchg
mov
inc
jns
dec
cmpsl
shll
mov
popa
in
ret
fs
dec
inc
dec
loopne
fsubs
test
pushf
mov
mov
das
xor
dec
mov
sub
sbb
lods
ret
lods
lea
data16
in
xchg
jns
inc
cmp
leave
bound
sub
xorl
push
push
dec
imul
sub
push
jecxz
test
cmp
shl
mov
clc
push
enter
test
or
lock
into
jne
mov
dec
fildll
lret
mov
orb
mov
int3
push
jb
rcll
mov
and
outsl
pop
in
inc
fldcw
sub
loop
andb
or
pop
push
jns
add
inc
xor
sub
into
imul
dec
movsl
lods
mov
call
aas
inc
mov
xchg
or
lcall
inc
adc
pushf
mov
ds
jae
push
insl
jge
mov
inc
test
ror
mov
cmp
rolb
shl
cld
in
push
imul
xchg
xchg
push
jnp
mov
or
lods
bound
pop
pop
cli
into
add
iret
in
xor
test
je
popa
mov
lahf
ds
jnp
fstpt
test
imul
lret
dec
sbb
mov
and
add
stc
mov
das
xchg
js
dec
push
ret
cmp
mov
adc
sub
fstl
mov
aaa
lahf
shr
and
pop
xor
sub
in
sbb
pop
jbe
outsb
test
movsw
fidivrl
hlt
aam
and
fucom
divl
stos
push
inc
sbb
jecxz
aaa
pop
inc
xor
jmp
xchg
ret
push
add
loope
adc
inc
mov
aas
lret
cs
dec
int3
out
inc
lods
cmp
dec
push
rol
mov
icebp
mov
stos
dec
ljmp
loopne
jmp
out
dec
fwait
dec
mov
cmp
lock
mov
dec
icebp
mov
sub
fnsave
nop
into
jl
xor
nop
lods
and
cmpsl
push
inc
in
fucomip
sbb
dec
fcmovnu
scas
mov
pop
aad
add
dec
push
sti
cld
insb
jle
inc
or
cmpsl
inc
mov
movsl
push
icebp
mov
imul
loop
xchg
cmp
and
icebp
cwtl
dec
xor
aas
mov
and
lcall
cltd
std
xchg
dec
inc
aad
jns
add
inc
outsl
lret
fwait
in
xor
mov
int3
out
cmp
xchg
daa
push
shrl
test
jecxz
mov
fistps
sahf
pushf
pop
loope
mov
sub
in
or
dec
fldl
xchg
ljmp
add
dec
int3
jne
leave
rolb
mov
shlb
je
lret
addr16
sarb
hlt
add
scas
out
lret
lds
jp
icebp
pop
sub
push
xchg
adc
test
nop
dec
mov
outsb
adc
dec
repnz
je
daa
inc
add
jl
imul
lar
mov
mov
mov
inc
addr16
mov
mov
push
sbb
hlt
or
dec
mov
dec
and
jbe
roll
xor
ds
in
pop
andb
jbe
test
sahf
push
or
or
sub
inc
jp
test
iret
nop
jns
lods
pop
dec
mov
inc
add
arpl
popf
and
jecxz
roll
fcoml
mov
mov
mov
and
les
sbb
insl
xchg
or
clc
stos
sbb
dec
shll
xor
push
or
mov
lock
adc
mov
pop
mov
xor
cltd
pop
enter
pop
push
adc
sbbl
dec
fs
lret
push
dec
mov
jl
cmp
daa
orb
enter
dec
jg
rcrl
push
mov
jl
fisttpll
mov
movsb
push
jb
mov
dec
adc
loopne
cld
adc
push
sbbb
xchg
addl
jb
test
jmp
mov
clc
adc
sub
push
lds
push
outsb
iret
je
daa
dec
inc
aas
stc
mov
xor
repz
jge
out
cmpsb
fincstp
and
mov
fld
hlt
adc
xchg
cmp
rcrb
jg
fnsave
lods
imull
scas
fwait
mov
inc
nop
aad
inc
pop
xchg
inc
std
add
sbb
sarb
sub
leave
fidivrl
pop
xor
cmp
rcr
ljmp
dec
xchg
jnp
movsb
iret
mov
mov
or
js
push
pop
test
push
inc
mov
mov
or
cmp
sbb
jno,pn
push
mov
adc
push
fistps
adc
repnz
addl
shlb
add
add
fsubl
in
das
loope
mov
mov
subl
or
outsl
push
out
lods
xor
adc
pop
ret
add
iret
jmp
mov
jns
push
in
mov
hlt
adc
mov
xchg
mov
jns
rcl
cmp
jge
or
sub
xchg
pop
sbb
pushf
cmp
mov
mov
jno
in
inc
xchg
mov
fnstcw
imul
pop
ja
xlat
dec
adc
cld
lock
pop
mov
inc
sub
ss
pop
sahf
clc
mov
inc
imul
mov
mov
xor
push
hlt
inc
or
es
pop
pop
cmc
xor
mov
pop
scas
inc
in
lcall
leave
mov
repz
adc
das
outsb
jmp
pop
adc
xchg
shrb
mov
aam
subb
adc
and
aaa
sbb
out
inc
cmpsl
cwtl
mov
mov
mov
jp
jns
stc
mov
pop
mov
idivl
xor
lcall
insl
push
in
push
jb
xor
lahf
addb
dec
or
and
test
popaw
cmp
xchg
or
inc
cld
addb
mov
leave
push
inc
in
sbb
adc
test
jg
pop
insb
adc
jge
ljmp
mov
dec
or
call
or
dec
test
pop
xchg
pushf
sub
push
fistpll
push
int
fstpl
cwtl
ss
xlat
int3
mov
sbb
and
mov
imul
pop
gs
add
gs
roll
adc
aam
fmull
jb
stc
push
outsl
in
jb
sbb
adc
filds
mov
xlat
cltd
mov
pop
fwait
add
push
mov
xor
jns
ljmp
icebp
add
push
dec
xchg
and
cmp
lock
pop
adc
sub
mov
pop
cmpl
sub
in
js
test
enter
jno
leave
popf
dec
fnstenv
pusha
mov
popf
dec
xchg
aaa
cmp
add
lods
pop
jge
gs
rcl
loope
fildl
lret
mov
in
adc
mov
hlt
jae
mov
popa
daa
lcall
mov
fs
jnp
cmpsl
jb
mov
xor
mov
add
scas
pop
push
loop
out
bound
pop
mov
cmp
and
sub
mov
adc
push
dec
mov
inc
sar
enter
jmp
sub
xor
in
mov
fists
mov
inc
and
aad
xor
lds
in
mov
mov
dec
clc
rclb
adc
loopne
arpl
xor
insl
popa
mov
shll
out
fsubrp
jns
ja
dec
sub
mov
add
test
cmp
xchg
jbe
in
pop
adc
aam
cmp
add
test
dec
popa
std
mov
inc
sub
xchg
sbb
fistps
inc
mov
enter
or
xchg
xchg
mov
push
or
or
rcrl
or
mov
lret
add
stos
lahf
push
inc
enter
sub
sub
or
mov
pushf
insb
inc
rcl
dec
pop
xchg
dec
mov
xchg
sub
sbb
jecxz
insl
lods
push
inc
xchg
fisttps
dec
mov
or
push
out
out
leave
mov
and
push
pop
fcompl
cli
inc
rclb
out
fwait
arpl
jae
flds
jg
cs
enter
hlt
stos
xchg
ret
scas
sbb
sbb
pop
mov
enter
das
xchg
js
sbb
aad
mull
jecxz
adc
push
aaa
mov
leave
sbb
cmp
pop
fwait
mov
out
popf
nop
adc
lock
jecxz
das
lea
xorl
sbb
int3
scas
mov
ss
jp
mov
or
sbb
push
cs
xchg
xchg
test
inc
xor
std
inc
xchg
fwait
in
popf
inc
or
in
adc
movsb
jl
out
aas
mov
fiaddl
or
popa
xor
sub
mov
das
pop
sarb
push
pop
in
scas
fstps
pop
adc
mov
xorl
xlat
je
xor
jp
in
jge
fadd
movsb
mov
pop
fsubrs
push
std
jge
pop
cmp
inc
imul
or
adc
sbb
push
lods
inc
mov
dec
ds
arpl
cmpsl
jno
aam
sub
cwtl
mov
sub
nop
pop
lods
sti
std
or
inc
adc
cs
shlb
stos
adc
je
cmp
stos
arpl
mov
fcoms
inc
fnsave
loopne
jbe
loope
mov
or
mov
dec
mov
in
das
sti
cli
inc
sbb
mov
aam
fcmovb
cmpb
insl
mov
andl
icebp
das
cmp
lock
jno
inc
or
mov
outsl
and
std
pop
imul
pop
lahf
popa
mov
repz
mov
sbbb
adc
inc
insb
lds
stos
or
sub
sbb
xchg
insb
and
cmp
loopne
leave
cmpsb
mov
xor
out
and
sub
sbb
js
pop
pop
orb
fdivs
dec
hlt
pop
shll
xor
pop
stos
push
es
mov
leave
dec
inc
mov
aas
sbb
je
add
addb
addr16
mov
and
ret
xor
movsb
repnz
or
adc
mov
repnz
inc
push
sub
enter
cltd
mov
jmp
mov
inc
push
emms
cld
hlt
mov
sbb
pop
lods
and
pop
lret
mov
or
fcomp
xchg
sbb
int3
outsb
pop
je
loope
push
cmpsl
scas
push
pop
push
daa
das
inc
pop
sbb
add
je
lcall
insl
mov
adc
hlt
mov
pushf
push
xchg
hlt
adc
lods
xchg
jo
fidivl
pop
and
push
mov
lahf
mov
outsb
lret
dec
and
ret
and
jb
mov
jno
push
dec
xchg
dec
push
call
mov
xor
bound
cmpsb
xchg
cmp
in
push
leave
mov
mov
das
mov
inc
movb
aam
cmp
into
movsl
add
out
mov
testb
sub
in
fmulp
add
xor
mov
es
cwtl
das
lods
sbb
mov
leave
movsb
pop
repz
mov
clc
mov
movsl
pop
mov
xor
push
inc
and
daa
outsl
inc
in
arpl
or
push
or
in
lds
sti
mull
push
cmp
dec
jb
ljmp
stc
movsb
xor
movsl
mov
pusha
add
jae
lret
push
dec
cmp
jl
je
cmp
out
mov
add
test
mov
ljmp
sbb
icebp
jb
inc
jg
mov
mov
mov
loope
outsb
repz
ret
in
jo
lea
ja
test
mov
sub
sub
orl
outsl
lock
popf
jmp
loope
or
leave
pop
clc
cmp
dec
sub
or
test
or
inc
lret
push
pushf
ss
testl
push
xchg
movsb
mulb
pop
test
dec
fdivp
inc
es
or
sub
inc
in
xchg
imul
pop
repz
sbb
call
outsl
mov
test
mov
sub
inc
gs
jle
sbb
adc
leave
outsl
fnstenv
jle
stos
and
rcl
std
or
sub
jno
rolb
mov
mov
mov
inc
mov
fnstcw
rep
dec
repz
insb
jo
add
movsl
xchg
sarl
or
out
imul
popa
insl
call
repnz
mov
int3
pushf
sbb
inc
or
lahf
ret
or
ficompl
lahf
inc
or
aad
out
push
add
or
mov
jg
pop
jmp
mov
cmp
xchg
fmuls
sbb
stos
pushf
cmp
cmpsl
icebp
pop
and
pop
dec
les
psubq
xchg
add
mov
mov
pop
cmp
in
js
sbb
xchg
push
sti
cmp
push
loop
mov
fsub
push
sub
cltd
hlt
inc
outsb
insl
pop
ss
pop
jl
movl
ljmp
xchg
pop
ds
add
mov
add
push
xchg
inc
mov
and
jo
int3
aam
lcall
jno
shl
jg
aas
xlat
test
xchg
loopne
lcall
inc
aas
sub
sbb
pop
ret
xor
or
sub
icebp
lcall
lods
ret
mov
jg
xor
fldl
test
loop
fstpl
das
add
or
inc
jne
out
out
rolb
or
adc
push
ret
fisubs
lea
icebp
mov
outsl
jnp
adc
push
iret
out
inc
enter
push
btr
mov
shl
mov
cmp
mov
jbe
pop
add
cmc
lea
mov
xchg
pop
mov
mov
fldt
jb
and
add
cmpsb
mov
mov
aas
popf
jp
fildl
hlt
iret
leave
imulb
fs
mov
lret
loope
out
mov
push
cmp
stc
test
cwtl
jbe
jg
test
ds
cmpb
clc
or
inc
sbb
push
mov
adc
ja
jno
jmp
lahf
mov
movsb
xlat
icebp
adcl
int
clc
xchg
xchg
idivb
lret
std
arpl
dec
mov
mov
inc
test
jb
push
pop
add
ja
out
adc
sub
hlt
inc
sahf
int
jmp
sbb
out
inc
jnp
adc
mov
rcll
pop
gs
mov
aaa
insl
add
adc
sbb
rcrl
pop
xor
dec
out
sub
fiaddl
insb
add
pop
clc
push
and
test
cli
sbb
fdivs
cmp
scas
divl
and
jns
xchg
cmc
pop
ljmp
add
std
int
ret
mov
aaa
inc
jbe
xor
mov
mov
pop
jnp
aam
mov
push
sahf
jle
filds
xor
out
daa
inc
in
leave
aas
sar
int3
add
std
xor
fs
jne
lret
lret
push
aad
cld
sbb
xchg
iret
and
mov
inc
pop
cltd
ja
push
sbb
pop
call
and
mov
in
insb
mov
popf
pop
pop
cmp
clc
mov
cmp
inc
icebp
fldcw
cld
or
mov
adc
adc
test
mov
add
outsl
add
int3
inc
cmp
iret
fstl
adc
in
pop
test
mov
push
enter
loope
fcoml
out
dec
fadd
lret
inc
adc
call
inc
push
push
mov
cltd
add
add
out
mov
pop
hlt
orl
mov
loopne
dec
lea
jp
mov
clc
mov
in
imul
lea
adc
repz
sub
mov
hlt
fldl
iret
mov
shlb
inc
aad
inc
or
jge
lods
call
xor
aas
shlb
add
adc
jmp
mov
stc
lods
xlat
int3
and
test
adc
adc
into
pop
xchg
push
fcoms
lret
cmp
add
adc
add
or
or
and
cltd
xor
pop
adc
adc
push
outsb
ss
sbb
xchg
xor
addr16
popa
call
mov
xchg
insl
adc
mov
lret
jnp
movsl
jae
sub
fiaddl
add
xchg
in
dec
and
nop
addr16
loopne
int
sbb
rcll
mov
pop
lahf
cmp
fldt
mov
mov
push
sub
lret
lods
jecxz
mov
fdivl
mov
cmp
scas
call
pop
shll
mov
add
xor
test
fcompl
pop
loopne
lea
hlt
mov
mov
or
popa
pop
or
mov
push
ja
mov
test
jecxz
or
loopne
out
mov
bound
sbb
xchg
ljmp
rcrl
xchg
rol
cmc
stos
dec
add
icebp
cmp
cmpsb
notb
xchg
mov
jg
cs
inc
and
outsb
adc
lds
xlat
jge
or
sub
mov
repz
add
add
loop
push
scas
mov
mov
jno
hlt
test
xchg
pop
dec
lret
ss
pusha
cld
mov
add
jae
cli
jp
sbb
pop
push
adc
mov
jne
sub
test
xchg
dec
mov
jp
bound
push
mov
dec
lea
mov
out
pop
sub
sub
fadds
mov
adc
lcall
mov
lds
shl
mov
sub
xchg
push
dec
int
lods
sub
fdivr
loopne
xchg
xor
or
jge
test
cmp
jp
mov
push
or
lret
cltd
je
jns
ja
fbstp
test
adc
or
inc
pop
es
cmpb
cld
xchg
in
inc
into
fcomi
sbb
nop
xchg
fstl
lea
ja
aam
mov
cwtl
es
pop
lock
bound
mov
inc
ds
mov
int3
mov
outsb
push
sahf
shrl
inc
ret
test
fucom
stos
mov
push
int
outsl
push
or
push
mull
jno
dec
scas
test
cmpsb
int3
pop
dec
sbb
popl
outsl
ret
icebp
jns
repnz
pop
and
jmp
xchg
and
pop
mov
mov
into
push
cmpsb
std
jo
shlb
rorb
int3
add
add
daa
jge
pop
out
mov
or
and
jne
je
stc
js
jno
mov
push
dec
mov
sbb
dec
movsl
fists
pop
shr
popf
pop
imul
pop
sub
mov
push
test
scas
inc
stos
xor
clc
pop
iret
scas
push
and
xchg
sub
iret
lcall
mov
scas
cli
outsb
jbe
test
fisttps
stc
mov
push
movsb
mov
out
or
fiaddl
aas
mov
frstor
jb
scas
jae
mov
imul
adc
sbb
fimull
mov
hlt
jb
leave
dec
lods
cmpsl
sbb
mov
loopne
mov
sbb
push
dec
add
ljmp
out
leave
pop
mov
and
cmp
andl
scas
jno
dec
cmp
mov
jp
mov
sub
sbb
repnz
fsubrl
push
mov
dec
rolb
sub
push
add
mov
xlat
add
jnp
xchg
jnp
roll
inc
out
lods
jg
gs
add
xchg
aas
aad
sbb
mov
mov
sbb
cmpl
sti
iret
xchg
mov
jns
and
scas
mov
les
ljmp
scas
sbb
or
stos
push
stos
mov
xor
mov
xlat
sub
outsb
push
dec
xor
push
jne
inc
push
push
idivb
jne
mov
and
lds
gs
or
aad
sbb
mov
cmp
loop
movsb
push
rcrl
ss
xor
and
cmpb
sbb
loopne
popf
inc
movsl
or
mov
add
lahf
hlt
jb
mov
call
fidivl
mov
adc
mov
loope
ror
cwtl
mov
jmp
aas
shll
pop
add
sbb
jmpw
inc
cli
add
sub
dec
xchg
sub
sbb
dec
xchg
ss
arpl
adc
jbe
or
fcmovnu
pop
pushl
insb
ljmp
int
mov
insb
push
aas
rcll
mov
out
sub
pusha
movsl
jns
jl
mov
dec
mov
neg
cmc
mov
mov
sub
xor
inc
mov
gs
ja
xchg
ja
sbb
sub
mov
pop
and
and
lods
or
pop
sub
lods
mov
ljmp
cmp
out
incl
push
mov
das
jle
lods
mov
in
inc
pop
bound
mov
push
adc
movb
mov
nop
gs
jl
cmc
rorb
cmpsb
push
shl
loope
cmp
push
push
ss
sub
bnd
lcall
xlat
or
sahf
rcrb
cld
mov
jns
aas
cld
cmc
jbe
fucomi
outsb
mov
sbb
enter
xchg
repz
test
rorb
mov
and
loope
movsb
xchg
xchg
sub
es
fwait
sub
loope
rorb
incb
sbb
mov
push
mov
sbb
mov
aad
add
out
pop
fsts
aaa
stos
mov
ficoml
mov
mov
addl
je
cmp
add
xchg
add
outsb
scas
outsb
and
std
stc
push
je
ret
jle
movsb
imul
fprem1
push
cmovnp
shrl
pop
push
mov
test
jnp
mov
push
addl
lds
roll
out
jb
mov
push
sub
cmp
icebp
in
push
add
cmpsl
cmc
lret
into
mov
std
inc
push
dec
jb
sti
movd
pop
int
pop
lods
jo
ljmp
push
andb
aas
aas
stc
and
push
mov
icebp
cmp
and
xchg
dec
fcomip
cwtl
xchg
jne
and
int3
fs
stos
push
push
mov
data16
pop
into
dec
outsl
addb
lcall
shrb
adc
mov
mov
fmull
rclb
adc
mov
inc
in
inc
lahf
sarb
lcall
dec
pop
fldcw
push
jnp
aam
dec
mov
cmpsb
in
dec
loop
lods
fdivp
addl
or
and
push
gs
lods
bound
push
fsubrs
sbb
mov
xchg
mov
xchg
call
mov
out
sbb
push
sbb
mov
into
mov
xor
jge
lods
in
xchg
mov
pop
adc
push
lret
sub
gs
push
dec
adc
pop
mov
out
clc
je
ret
jge
xorb
cmp
out
xor
add
insl
xor
cmpsl
mov
shrb
xchg
stos
fwait
inc
mov
fadd
or
sub
dec
mov
lds
popa
and
sbb
lret
shrl
pop
dec
lret
lds
cli
xchg
lock
je
sbbl
mov
les
aaa
popf
gs
mov
xor
xchg
aad
sbb
movsb
push
dec
jecxz
cwtl
imul
popf
out
ret
es
sahf
push
and
stc
scas
xchg
xor
stos
decl
rcrl
aas
push
aaa
pop
inc
cmp
lahf
cli
xchg
xchg
push
imul
push
stos
push
lahf
pop
jbe
ret
les
inc
lea
out
pop
adc
into
ficoml
mov
jmp
xlat
in
push
mov
cld
cld
jp
inc
mov
jmp
rol
inc
repnz
and
movsb
outsb
xchg
movb
mov
mov
outsb
add
mov
call
shll
in
call
bound
sub
orb
and
fnstenv
lock
outsb
pop
push
jne
mov
daa
mov
mov
mov
mov
xchg
lock
xchg
loop
mov
inc
sub
jmp
in
call
inc
ja
negl
xchg
test
sub
push
sub
adc
test
add
lods
jno
sub
pop
xchg
addr16
fildl
stos
and
scas
inc
mov
fs
push
jmp
ja
mov
rcrl
or
mov
fldl
sub
cwtl
pushl
ljmp
lcall
adc
push
cwtl
popa
testl
mov
lcall
clc
repz
dec
inc
dec
pop
adcl
ret
add
les
sbb
adc
inc
fidivs
mov
xor
cmp
inc
mov
imul
jne
dec
mov
mov
popa
mov
loope
sub
or
aam
imulb
lahf
and
out
mov
rorl
cltd
repz
ja
or
aas
fmull
in
sbb
add
mov
cmp
int3
sbb
and
insb
scas
cltd
push
ljmp
lcall
dec
clc
push
pop
or
pop
sub
lock
push
cmpb
mov
dec
adc
mov
mov
push
inc
out
loop
push
fisttpl
adc
inc
dec
xchg
pop
enter
loope
dec
jo
cltd
jecxz
dec
mov
jo
jne
jnp
cltd
dec
sub
loope
stos
cli
xchg
mov
bound
and
or
or
pop
fldl2t
stc
jp
dec
sbb
jg
loopne
cmp
and
adc
push
outsb
xor
lcall
jecxz
cmp
or
popa
mov
inc
dec
xor
cmp
sbb
in
loope
cmc
cld
xor
mov
mov
mov
out
add
lods
lock
call
and
repz
mov
xchg
push
aas
shl
bound
mov
xchg
sbb
jge
out
shl
stos
movsl
pop
in
fs
jo
cmp
daa
push
repnz
inc
in
dec
repnz
xchg
jo
jae
pop
pop
xor
ficomps
into
push
in
jae
mov
xlat
ss
pop
imul
movsl
xchg
add
mov
sub
push
sub
sbb
lret
push
pusha
xchg
mov
jp
scas
add
push
mov
cmp
or
xor
sbbl
xor
xchg
in
insl
sahf
pop
loope
adc
inc
scas
std
rcrl
int
jnp
jl
imulb
push
sahf
cwtl
stos
dec
int3
in
adc
js
dec
mov
idivb
call
cld
pmulhw
mov
mov
aad
sub
mov
lahf
fsubrs
fst
xlat
push
jge
fistpll
and
pop
int3
jns
outsl
push
push
or
rcrl
out
cltd
xchg
shrl
jp
pop
mov
scas
imul
fcomps
movsl
push
in
xor
sbb
mov
fldenv
movl
xchg
rep
add
cmpl
in
imulb
mov
push
jecxz,pt
dec
test
inc
mov
mov
imul
cld
and
roll
mov
inc
mov
push
push
dec
repnz
sbb
inc
gs
pop
jmp
in
pop
bound
and
mov
lea
xchg
ja
dec
fmul
popf
jmp
out
gs
xchg
outsl
subl
sbb
mov
stos
sub
fcoms
mov
adc
aaa
mov
xchg
or
and
cmp
pushf
adcb
movsl
push
xor
mov
inc
xlat
pop
pop
inc
and
sbb
nop
and
fstpl
inc
inc
add
mov
popa
int
dec
sbb
sbb
in
shll
mov
sbb
insl
cmp
out
sub
dec
push
xchg
dec
push
cmpsb
xchg
and
stos
or
and
jl
adc
inc
push
add
fsub
xor
sub
ss
and
lods
mov
xlat
or
lea
or
dec
mov
arpl
sbb
loopne
shll
in
jbe
lods
and
jecxz
add
jg
dec
nop
popa
stos
fnsave
and
mov
sbb
cmc
cmpsb
and
jno
or
fdiv
xor
enter
add
test
sbb
jl
jae
in
cwtl
pop
stos
ret
xlat
stos
and
lods
mov
fwait
pusha
in
inc
ret
neg
inc
lret
add
cmc
cmpsl
outsl
xchg
rcll
inc
popf
loop
xchg
lock
mov
xchg
xchg
sbb
jae
jge
ds
pop
sub
lahf
cmp
repz
loopne
push
int3
inc
lods
dec
push
or
out
cltd
lds
inc
fs
mov
mov
dec
add
int
xchg
outsb
dec
jecxz
sbb
lods
ffree
mov
or
xchg
dec
cmp
push
pop
adc
sbbl
pop
adc
int3
mov
pop
sub
jnp
adc
pop
loope
testl
out
subb
aas
imul
imul
loope
fsubp
fisttpl
in
adc
pop
xlat
icebp
dec
xor
pop
inc
dec
xchg
cmp
mov
fdivrs
mov
pop
daa
loop
dec
sub
cli
std
or
fidivl
sbb
mov
sub
dec
push
and
xchg
and
test
lods
imulb
cmp
jno
push
popa
std
mov
push
adc
sti
xor
cld
cmp
shll
sar
clc
push
pop
mov
mov
jno
repz
cld
ficompl
ljmp
arpl
rorl
testl
jg
pop
push
pop
jbe
jp
frstor
xchg
push
fnstenv
xorb
sub
lea
cli
push
push
sub
mov
lock
cmpsb
test
scas
jns
xchg
inc
decb
inc
jne
xchg
push
jbe
pop
sti
repnz
push
mov
or
pop
cmp
mov
inc
jp
dec
insl
mov
ficoms
daa
cmp
xor
mov
test
js
cwtl
insl
and
mov
das
sub
shlb
notl
xchg
movsb
or
daa
int3
add
mov
mov
movb
mov
hlt
js
sbb
xchg
and
mov
push
push
in
test
movsb
sub
test
aam
sbb
out
and
lods
adc
fisubs
imul
test
lds
stc
inc
dec
inc
mov
and
jge
inc
test
daa
cltd
mov
pop
add
xorb
call
data16
orb
jae
push
cmp
and
push
pop
and
push
mov
adc
jno
lahf
dec
push
test
js
inc
dec
in
pop
sbb
leave
sbb
out
jb
mov
mov
push
mov
mov
sub
sub
xchg
cs
jo
insl
mov
arpl
call
lock
pushf
mov
push
call
scas
sub
adc
xor
jmp
cmp
mov
fcompl
das
popa
out
in
push
xor
push
push
dec
xor
outsl
cmp
jne
mov
cli
loopne
call
fdiv
add
pop
cwtl
ljmp
adc
sub
inc
imul
xchg
mov
test
data16
jno
enter
ret
rorl
sbb
push
rol
int3
lret
xor
sbb
inc
mov
sub
pop
pop
aaa
inc
mov
xchg
xor
mov
mov
and
sbb
mov
movsb
mov
shl
push
dec
stc
xor
or
out
imul
clc
int3
mov
and
scas
mov
xor
lods
inc
pop
out
pop
cli
jnp
pop
cltd
lods
sbb
sbb
xor
scas
inc
ljmp
aas
int
sub
xor
add
js
push
je
mov
out
xchg
insb
xor
sbb
stos
mov
je
sahf
xchg
pop
xchg
dec
stos
mov
dec
sti
cltd
mov
in
test
sahf
mov
pop
and
add
das
push
stc
inc
sbb
sub
aam
cwtl
jecxz
repz
xor
in
or
adc
push
jg
adcb
adc
mov
ret
or
and
dec
out
sbb
jb
cmc
dec
mov
icebp
loopne
cli
stc
data16
sti
stos
and
and
cmpsb
iret
aad
rcrb
in
jo
cld
test
clc
adc
push
xor
int3
jb
pop
inc
push
test
icebp
pop
or
sar
cmp
cli
jns
pop
mov
testb
dec
pusha
inc
fwait
lock
jne
pop
leave
repz
add
ficomps
in
xchg
push
dec
xchg
or
cmp
jg
enter
mov
call
fldt
lret
in
push
sbb
push
int3
in
into
or
adc
ja
clc
mov
mov
jmp
ja
fisubrl
pop
xor
push
or
sbb
xrelease
repz
push
cmp
hlt
shr
ss
cmp
cmp
mov
dec
and
ljmp
pusha
int
pop
cmp
and
pusha
shrb
roll
jmp
rcr
insb
lods
xlat
int
sbb
pushf
pushf
fisubs
fwait
and
and
cmp
mov
je
insb
sbb
ret
pop
push
ja
test
or
sbb
add
cwtl
fwait
push
dec
aas
mov
jmp
pop
mov
daa
leave
adc
js
sbb
pusha
mov
mov
lahf
rolb
data16
xor
pop
sbb
mov
xor
adc
mov
testb
xor
jg
dec
icebp
xor
lahf
fwait
push
hlt
mov
fiadds
nop
jp
scas
lahf
xor
xor
cmp
pop
adc
xor
lret
aam
int
idivl
test
test
jne
inc
into
or
lahf
jp
andb
add
arpl
mov
int3
sbb
pop
outsl
mov
cltd
push
int
out
out
out
imul
xchg
adc
jmp
xchg
mov
inc
sbb
shrl
inc
cmp
repnz
or
pusha
in
sahf
or
inc
xor
sar
mov
xor
xor
fsubp
insl
mov
sbb
into
stos
data16
ficoms
test
add
pusha
mov
and
push
or
pop
sti
cmp
mov
jmp
or
sub
sarb
xchg
rcrl
mov
fs
rcll
and
bound
cmp
jg
ror
fs
mov
jns
add
xchg
adc
pop
mov
out
push
hlt
shrb
sbb
sbb
ja
mov
mov
adc
loop
mov
dec
scas
dec
mov
cwtl
jb
addr16
xchg
mov
adc
scas
stc
fcomps
mov
icebp
xchg
jo
scas
outsl
pop
shll
outsl
pop
pop
pop
es
jmp
mov
push
pushf
jb
jnp
mov
push
inc
xchg
or
xchg
jbe
push
cs
dec
add
loop
iret
cli
imul
or
push
gs
jl
mov
dec
cmp
dec
lret
xor
test
mov
adc
int3
imul
stos
in
fcmovnb
jae
and
loope
and
test
and
push
jmp
mov
inc
jl
sbb
cltd
dec
sub
mov
jmp
inc
sub
mov
or
ficoms
je
mov
add
xchg
jg
mov
shlb
test
add
fidivl
out
cmpl
nopl
add
adc
jne
js
inc
mov
pop
sbb
pop
lahf
out
sub
push
add
xchg
sbb
add
or
in
into
loopne
mov
mov
cmpsb
stos
scas
scas
ret
mov
je
test
ja
ss
sub
pusha
pop
leave
nop
add
sbb
sbb
push
pop
inc
ljmp
mov
jecxz
mov
mov
jo
add
xchg
outsb
mov
iret
call
mov
mov
adc
sbb
pop
mov
negl
pop
mov
jmp
mov
sbbb
inc
cmp
pop
hlt
dec
filds
scas
divb
stos
sub
and
mov
sub
call
movsl
cmp
lcall
into
loop
es
xchg
pop
std
sub
in
sub
hlt
daa
dec
mov
mov
mov
loopne
mov
scas
add
jmp
xor
cli
int3
xchg
xor
push
mov
lock
popa
xor
cmp
xchg
rcr
scas
leave
push
fbstp
rcrl
enter
sbb
lods
mov
out
jnp
cltd
xchg
fcmovne
jnp
sub
xchg
sahf
jl
arpl
scas
jmp
iret
ja
iret
lret
out
mov
jae
push
stos
add
or
in
cltd
repnz
int
or
scas
mov
lea
pop
mov
int3
aad
push
mov
addl
int3
xorb
adc
rorb
mov
xchg
xchg
ret
out
dec
rolb
xor
pop
xor
xchg
mov
mov
inc
bound
dec
jo
cmp
push
dec
jle
addr16
ss
rcl
xchg
jp
jg
mov
mov
jb
mov
dec
dec
lcall
sub
ret
gs
int3
xor
addr16
sbb
js,pn
push
xor
test
mov
cmpsb
ror
xchg
jmp
inc
outsl
mov
mul
sti
or
js
pop
mov
out
sub
xchg
icebp
pop
mov
adc
scas
lret
push
dec
mov
fcompl
movb
arpl
xor
jnp
ljmp
sub
mov
insl
sbb
xor
dec
dec
xchg
dec
inc
push
dec
pop
sbb
or
lds
inc
pop
fcmovnb
or
xchg
xor
or
mov
push
add
mov
ljmp
add
mov
or
mov
push
enter
xor
loope
int3
fstl
push
ljmp
orl
fnstsw
xorl
arpl
jmp
inc
and
push
movsb
dec
jmp
repnz
jecxz
xchg
mov
notl
and
jb
sbb
pop
sbb
and
jns
mov
xor
and
xor
or
dec
cmp
or
push
pop
mov
mov
cmp
sub
mov
ja
or
inc
jecxz
adc
pop
leave
push
fwait
das
cltd
popa
xchg
jmp
fld
add
in
ret
out
lret
leave
in
int
jnp
mov
out
sub
add
adc
nop
test
jg
push
aas
push
mov
cwtl
mov
and
insl
ljmp
push
mov
fistpll
data16
ja
sbb
inc
xchg
push
js
out
movsl
in
add
rorl
sub
fs
xchg
mov
sub
in
testb
xorl
pusha
adc
pop
repz
into
mov
imul
into
or
cmc
mov
push
rclb
mov
les
pop
xchg
repnz
adc
mov
xor
ja
aad
xor
inc
adc
jecxz
vorps
rclb
mov
movsb
cwtl
loop
loop
adcl
xor
cmp
or
xchg
popa
xlat
jecxz
jl
mov
xor
cmp
enter
aaa
xchg
popf
mov
fs
int3
jmp
and
mov
movsb
or
fistl
xor
and
scas
xchg
push
cwtl
insb
mov
ja
ret
pop
and
push
push
jns
adc
flds
lcall
or
test
jnp
xchg
adc
mov
mov
addl
cmp
push
dec
loop
cmp
pop
mov
inc
push
mov
lock
scas
lahf
adc
inc
xor
sub
xor
mov
mov
jmp
push
mov
ss
add
in
out
fistl
mov
iret
out
stos
push
sar
scas
xchg
and
das
ja
dec
hlt
mov
mov
push
xchg
jns
lcall
mov
stos
jno
cli
sub
test
add
xchg
mov
es
mov
lcall
imul
or
outsb
jg
mov
push
mov
jmp
sti
cmpb
add
or
mov
push
xor
inc
mov
jle
push
ds
xor
fildl
add
aas
inc
imul
pop
dec
jne
std
adc
cltd
flds
xchg
je
pop
cmp
ret
mov
jbe
sbb
or
lret
fnsave
cltd
adc
es
lret
push
js
mov
clc
push
into
xor
cs
push
pop
mov
std
sarb
mov
enter
cli
jmp
xchg
stos
ljmp
mov
dec
ds
mov
scas
fisubrl
xor
sub
jae
push
mov
inc
pop
mov
sbb
mov
cltd
sub
cmp
xchg
mov
cmp
mov
push
fiadds
push
cld
out
stos
jb
lds
ss
in
adc
pop
xor
xor
daa
sbb
and
xchg
orl
cs
push
daa
aas
xchg
int
ja
cmp
pop
andl
out
jg
xchg
arpl
mov
cmpl
xchg
aam
hlt
rcll
add
inc
jle
shll
cltd
dec
shll
mov
cmp
mov
add
pop
daa
aas
stos
and
addr16
in
iret
ljmp
mov
or
push
movb
mov
mov
rclb
pop
sub
es
push
cs
jno
cmpb
jo
sub
pop
push
cs
addr16
mov
cmp
mov
ss
xchg
or
mov
inc
and
or
mov
push
mov
push
fsubl
push
push
stos
pop
or
mov
inc
out
cmp
and
adc
mov
push
bts
dec
mov
stos
loope
fwait
out
scas
call
call
out
pop
int
xchg
xor
or
and
loope
stos
cmpsb
test
cs
fsubrs
imul
xchg
and
add
mov
cld
xor
movsl
pop
scas
fdivl
inc
mov
subb
sub
cmp
cmp
in
mov
in
jae
dec
loopne
push
sub
in
std
cmp
aas
data16
mov
lahf
inc
rcll
std
and
lret
adc
loopne
push
adc
divl
call
push
ljmp
daa
mov
pop
mov
fstpl
pop
dec
add
mov
test
ja
mov
sbb
test
call
mov
adcl
rorb
and
push
std
mov
out
repz
fisubl
mov
pminsw
fcmovnbe
cmp
inc
sbb
cmp
jbe
and
in
adc
push
ja
add
cmp
sbb
add
je
seto
scas
push
js
divb
sbb
add
fldt
sbb
mov
fwait
mov
incl
mov
aas
bound
shlb
dec
fnstcw
popa
dec
call
jb
ficoms
shll
jl
cwtl
jae
mov
fdivs
inc
inc
les
xchg
push
xchg
and
pusha
mov
push
call
jno
lds
inc
shrb
push
add
cld
outsl
jnp
hlt
sbb
out
xor
xchg
adc
addr16
clc
aad
ja
dec
scas
imul
dec
xchg
push
xchg
test
inc
and
arpl
out
pop
ret
xor
cld
cwtl
cmc
popf
cmp
cmp
inc
jge
movsb
cmp
fcom
mov
jecxz
insb
andl
pop
fstpt
lock
cmpsl
pop
mov
push
rcl
cmp
adc
out
mov
jg
fistps
adc
pop
in
ss
dec
and
cwtl
jae
jb
or
inc
fldt
mov
mov
inc
insb
insb
sub
inc
pop
sub
ja
mov
mov
arpl
jno
xchg
cwtl
sahf
stos
xor
inc
pop
mov
push
shlb
nop
jns
sub
and
gs
jl
gs
cmc
test
mov
and
push
fsubrl
das
add
mov
icebp
mov
mov
sub
mov
rcrb
ficomps
inc
mov
inc
jb
cli
push
call
sub
jnp
movsl
push
cmp
nop
push
mov
lcall
fidivl
push
sub
out
and
and
ds
fildl
jae
push
imul
fcomps
arpl
addb
jbe
jge
out
scas
sbb
jg
das
call
cmc
sahf
sub
in
nop
aad
xlat
sub
scas
lret
inc
inc
jnp
mov
adc
je
incl
out
test
cs
mov
pop
xorl
mov
mov
mov
mov
dec
insl
dec
inc
jo
and
into
arpl
xlat
cwtl
xchg
xchg
xchg
pop
fs
jbe
incb
iret
xor
stos
jmp
cmp
mov
sbb
ret
test
pop
sub
xor
lods
aad
mov
sbbl
call
mov
popf
aaa
rol
ss
rol
inc
subb
jmp
shrl
mov
ljmp
mov
ss
pop
jno
aad
xchg
inc
mov
xchg
sub
fimull
scas
lds
mov
jmp
mov
adc
inc
test
jle
out
inc
fwait
hlt
jmp
sbb
std
add
jns
mov
das
ds
je
dec
sbb
pop
xchg
stos
mov
hlt
xchg
mov
xor
daa
lret
addl
ret
insl
jmp
dec
mov
pop
daa
mull
xor
cmp
clc
icebp
nop
fidivs
dec
scas
push
das
push
mov
ja
and
xor
lds
jbe
int
lret
lock
popf
subb
xor
pop
ds
pop
in
lret
adc
push
dec
dec
dec
ds
js
jecxz
jns
adc
sbb
pop
lea
mov
push
jo
pop
clc
add
cs
adc
mov
or
jns
ds
adc
jmp
sbb
and
jne
or
xorl
adc
shll
sbb
add
into
pop
mov
test
pop
inc
pushf
xor
mov
push
mov
ja
mov
loope
dec
repnz
daa
cmc
dec
push
stc
and
shrb
pusha
cmp
call
jo
outsl
hlt
or
lahf
push
mov
xor
dec
pushf
xor
xor
out
les
rolb
and
scas
cli
or
movsl
mov
pop
mov
xchg
cmpsb
mov
andb
jo
cmp
push
jae
sbb
leave
ja
jb
mov
mov
xchg
pop
inc
lret
loope
sbb
add
hlt
cmp
movsb
cmp
and
ja
gs
push
mov
push
test
inc
mov
mov
aas
fidivl
jg
inc
call
jge
cmp
mov
mov
inc
bound
aaa
jge
add
sbb
mov
not
inc
mov
push
fwait
ss
dec
cmp
movsb
xchg
movsb
in
mov
jo
pop
dec
aam
clc
or
in
cmp
mov
stc
stc
loope
inc
sub
jl
mov
out
jecxz
imul
push
inc
fadd
mov
out
sbb
rcll
pop
xlat
test
icebp
stc
iret
mov
jne
ret
or
pop
int
xor
jl
enter
mov
sarl
test
mov
sbb
add
mov
outsb
sub
jmp
pop
adc
sub
pop
xor
loope
mov
cmpsl
mull
repnz
push
es
ds
lret
std
mov
inc
repz
sti
add
lock
dec
rcrl
mov
jmp
cmp
pop
int
jmp
test
inc
mov
or
ljmp
nop
jle
cld
rcl
into
js
rcll
in
dec
xchg
mov
mov
inc
cmp
cmpsl
pop
mov
enter
cltd
pop
loop
js
pop
adc
les
lods
adc
test
loope
jns
lret
and
lcall
test
arpl
testl
push
insb
andl
push
xchg
stos
xchg
call
leave
sbb
adc
or
loop
scas
fstl
fmul
cmp
mov
jo
jbe
hlt
icebp
push
lock
and
push
cmp
aad
lret
and
decl
rcl
sti
jns
pop
xor
mov
sub
sar
sub
movsb
insl
xor
xchg
inc
mov
xchg
jp
les
pop
xchg
dec
shll
cmpsl
mov
sbb
fwait
xor
cmp
pop
bound
outsb
jo
push
jne
push
daa
pop
jp
outsl
jmp
dec
pop
shl
xor
and
arpl
cltd
aas
test
lret
cmc
push
mov
dec
flds
mov
or
cmp
out
sti
lahf
mov
jo
lahf
jg
push
leave
push
and
lock
xchg
insl
jmp
fmull
ret
or
jo
cwtl
mov
scas
cmp
lods
cmp
test
js
push
dec
hlt
cwtl
aam
fsubs
and
xor
push
lret
adc
and
jecxz
jnp
jns
repz
enter
mov
repnz
std
daa
inc
mov
insl
pop
dec
cwtl
int3
clc
cwtl
test
jmp
call
shrl
mov
jae
outsb
test
addps
stc
pop
repz
aaa
movntps
mov
xchg
xchg
sbb
stos
addr16
add
sub
mov
xchg
in
cmpsl
xchg
push
adc
sub
jbe
cmpsl
cmp
je
pop
xchg
jo
jp
jbe
ret
mov
stos
call
pusha
dec
js
and
pop
insb
sbb
ror
cwtl
lods
mov
cmpl
xor
lahf
mov
inc
push
test
das
mov
mov
pop
roll
in
pop
mov
xlat
in
aaa
push
inc
hlt
xchg
cmc
mov
pusha
ljmp
mov
push
mov
sub
adc
ret
mov
cmovs
ficoml
fmuls
divl
sbb
cmp
das
push
popa
mov
test
test
testl
mov
mov
mov
stos
int
fcomp
push
inc
or
dec
test
sub
lods
in
sub
xchg
add
cwtl
push
xchg
mov
dec
mov
jl
cwtl
fcoms
xchg
xchg
inc
mov
mov
push
jae,pt
ss
mov
shlb
add
xchg
lods
jecxz
enter
push
or
jmp
pusha
add
je
cmpsl
addr16
outsl
jnp
aam
cmp
jae
jg
rclb
inc
cwtl
xor
push
mov
movl
cmp
xor
mov
aas
mov
insl
std
and
lret
mov
aad
ja
repz
addr16
xchg
pop
adc
xchg
cmp
mov
add
mov
xor
cltd
das
push
add
xor
push
jmp
sub
out
ss
popf
jp
xor
and
xlat
mov
mov
push
sub
pop
fistps
mov
inc
daa
adc
xlat
popa
test
repnz
cs
hlt
and
ret
repz
jo
inc
fstpt
inc
int3
divb
adc
xchg
xchg
test
ss
vpconflictq
mov
lods
mov
dec
xchg
push
lcall
scas
dec
jo
xor
sbb
jmp
popf
fimull
cld
lret
jmp
movsb
inc
xchg
cmpsl
push
mov
sarb
lahf
mov
in
jmp
lds
cld
out
push
adc
inc
pusha
cld
mov
loopne
push
jmp
mov
fsubrs
sub
push
rol
mov
sahf
test
mov
push
call
sbb
popa
mov
ficoms
mov
pop
jp
popa
inc
sub
ljmp
cli
sub
fnstenv
sub
ss
sub
xor
fwait
lret
xchg
jne
jecxz
jl
fadd
repnz
xchg
psraw
xchg
sbb
into
loopne
lods
push
add
ret
cmpl
xchg
jmp
mov
mov
and
and
push
lds
push
out
imul
or
jmp
cmp
push
adc
or
and
cmpl
sub
movsb
lods
jmp
mov
je
jle
ja
test
dec
movsl
mov
xchg
cmp
dec
imul
add
aad
int
sub
in
scas
fs
repz
or
bound
sti
or
shl
adc
lods
adc
add
sub
cmp
add
arpl
sub
mov
insl
roll
inc
outsl
mov
or
ds
out
mov
dec
push
pop
xchg
mov
aaa
sti
mov
adc
rorb
sbb
ljmp
pop
negl
stc
roll
cwtl
push
push
mov
xlat
jl
in
imul
mov
jp
mov
adc
and
mov
cmp
cmpsl
mov
sub
dec
add
mov
addr16
leave
daa
fwait
loopne
test
pusha
movsb
mov
icebp
cmp
scas
sbb
out
dec
popa
add
lret
sbb
shll
scas
mov
arpl
and
mov
imul
out
mov
jbe
mov
notb
in
mov
mov
ljmp
mov
fs
std
push
leave
int3
out
comiss
cmpb
xor
lahf
mov
push
push
outsl
ss
sbb
jb
cmc
outsl
test
mov
rcrl
in
inc
movsl
or
mov
dec
lret
pop
mov
movsl
adc
xchg
sbb
pop
lcall
inc
rorb
lock
stos
or
xchg
in
cmp
mov
add
repnz
push
jge
js
out
sbb
mov
cld
pop
pop
cmp
mov
sub
inc
and
cmp
cs
test
clc
mov
dec
in
pop
pop
stc
sbb
xor
repz
fnsave
cmpsb
or
xlat
in
lcall
inc
cli
mov
andl
loope
ss
out
popf
sub
movsb
sti
fmull
or
sbb
mov
jb
sbb
pop
lock
push
pushf
inc
bound
adc
inc
in
jnp
pop
dec
loope
xchg
or
pop
mov
scas
add
or
inc
fwait
cmp
pop
stc
jns
jge
jbe
jbe
jg
clc
cmp
es
popa
sarl
in
or
pusha
repz
repz
inc
push
out
scas
xchg
dec
inc
aas
xor
jns
cs
sub
shrl
jmp
pop
sub
enter
inc
mov
enter
and
push
inc
mov
jae
test
mov
test
cld
fmull
and
fnsave
xchg
arpl
add
cwtl
sti
pop
call
adc
or
xchg
clc
jo
and
int
daa
imul
sahf
jo
imul
mov
cmp
insl
cmpl
pop
sbb
test
xor
outsl
and
ja
fisttps
lds
jnp
cli
divb
in
mov
sub
in
adc
jp
mov
sub
repnz
dec
fwait
sbb
jb
movsb
out
xor
xor
pop
ficomps
inc
loopne
leave
je
pop
mov
scas
daa
nop
loope
jg,pt
xor
loop
jle
mov
mov
xor
test
fsubs
sub
test
adc
enter
stos
imul
mov
cmp
jns
mov
outsl
insl
inc
adc
lods
inc
xlat
cmc
aaa
and
dec
shr
xor
push
fadds
xor
pop
rclb
notb
imull
iret
jae
mov
mov
jge
and
mov
cmp
fsts
xor
in
cmpb
lret
pushfw
aaa
ljmp
daa
xchg
rorl
push
fwait
jge
imul
into
mov
cmpsl
and
repz
mov
mov
sbb
sub
sub
lcall
cs
sahf
pushf
je
imul
in
int3
rolb
mov
push
lcall
jbe
xor
dec
dec
adc
cmp
dec
inc
mov
jle
pop
adc
popf
or
sbb
pusha
std
xchg
stos
sahf
pop
ret
mov
cmpsl
out
lcall
test
xchg
add
bound
pop
aam
imulb
jbe
test
inc
aas
sbb
flds
fnstenv
test
or
pusha
les
fstpt
inc
sub
adc
out
push
lahf
adc
push
jle
inc
icebp
and
mov
test
pop
cmp
mov
cmc
rcll
hlt
ret
or
adc
adc
mov
aaa
add
in
pusha
cwtl
push
in
or
jmp
add
cltd
repnz
push
adc
cmp
sub
outsb
mov
js
xor
dec
shll
hlt
mov
std
sbb
push
jns
and
mov
popf
addb
movsl
insl
inc
pop
dec
or
push
pushf
shll
xchg
fidivl
push
sub
fldt
daa
into
jo
lcall
sbb
or
sub
add
lods
adc
mov
out
outsb
mov
fs
xchg
scas
std
es
xor
mov
jae
or
out
jg
adc
call
mov
dec
jl
sbbb
mov
aas
xchg
sub
divl
mov
ja
test
dec
fcmovu
andb
dec
test
loop
out
sysexit
aaa
xchg
out
push
or
sbb
lods
test
mov
ffree
mov
notl
fdivrl
xor
nop
sbb
ficompl
dec
sbb
cmp
dec
sub
pop
out
sti
inc
xor
jb
fdivrp
xchg
and
jge
mov
push
push
mov
mov
xor
push
or
xchg
add
xor
add
movsb
push
jmp
repnz
test
jo
push
xchg
iret
push
add
stos
repz
sub
fwait
movsb
leave
test
adc
or
push
or
fdivl
out
mov
addl
mov
out
sbb
mov
mov
add
test
cld
lods
xchg
adc
push
mov
fs
lahf
ret
sbb
cmp
adc
or
jns
hlt
loope
in
sub
sbb
xlat
arpl
adc
dec
inc
shll
cmp
loop
and
loop
pop
sti
loopne
or
and
dec
flds
clc
adc
fwait
lcall
ret
dec
and
sbb
pop
inc
ss
andl
xor
adc
dec
push
lcall
and
xchg
shll
or
out
mov
lret
add
mov
adc
jmp
xor
mov
pop
mov
js
je
inc
mov
add
mov
xchg
jle
xchg
lds
jns
in
xor
push
or
stos
add
push
lods
jnp
es
mov
ret
insl
or
fstpl
loop
outsb
xchg
mov
cmc
dec
xchg
out
aam
into
pusha
stos
and
and
jb
push
adcl
repnz
jg
push
adc
xor
sarb
mov
ret
shlb
shlb
test
mov
pop
sbb
ret
sbb
pop
outsl
int3
or
mov
xchg
daa
ss
mov
loop
mov
sub
rcrb
and
push
mov
iret
aad
dec
movsl
std
addl
aam
repz
popa
loope
mov
hlt
outsl
cli
fldt
push
test
cli
dec
jae
mov
mov
es
cmpsl
mov
dec
iret
inc
rcll
add
lcall
pop
mov
xor
jns
lret
jmp
adc
jno
inc
leave
cmc
cld
jnp
mov
fmul
sub
dec
fstl
jns
mov
cld
cmc
jnp
out
dec
mov
mov
mov
mov
dec
arpl
or
fsubs
cmp
and
mov
fcompl
movsl
std
fstpl
mov
imul
aad
lods
inc
sbb
rclb
in
mov
jg
bound
and
mov
shll
out
das
repnz
cmp
jns
xchg
out
and
lea
insb
aaa
mov
pop
dec
popa
dec
pushf
in
bound
add
cmp
pop
or
loopne
mov
xchg
movsl
aad
fisttpll
daa
out
into
mov
and
cmpsb
out
push
fwait
push
dec
inc
and
mov
outsl
inc
repz
add
and
and
mov
aas
xor
jg
push
cmp
jae
mov
mov
icebp
sahf
cmp
cmc
mov
fsubs
lock
push
clc
dec
sahf
cmp
pop
dec
stos
inc
add
shlb
pop
sbbl
repz
sbb
mov
inc
stos
xor
pop
popf
xchg
in
mov
arpl
inc
push
xchg
add
xchg
inc
test
cmc
cltd
inc
lret
pop
sub
xacquire
adc
jbe
mov
xchg
mov
sub
lahf
fildll
push
adc
adc
or
xor
mov
stos
scas
cmp
das
lret
mov
mov
stc
mov
and
mov
jmp
sbb
xchg
jnp
xor
push
rolb
repnz
insl
lock
mov
dec
sbb
call
shrl
leave
mov
gs
test
mov
and
out
lock
out
gs
cs
mov
jl
int
add
icebp
pop
dec
sub
inc
in
jl
call
pop
or
add
jg
inc
fwait
stos
call
shll
adc
mov
in
sbb
test
mov
mov
mov
mov
sbb
ror
ljmp
and
fisttpll
mov
push
mov
insl
ja
sub
iret
pop
add
jmp
inc
pop
stos
bound
lock
into
lahf
sub
or
enter
lcall
inc
cmpsb
and
pusha
and
xor
xor
pop
lods
ljmp
add
pop
push
popf
mov
gs
adc
outsb
sub
jge
mov
pusha
inc
je
xor
leave
test
mov
es
stos
out
or
dec
jne
pop
adc
out
testl
xor
jmp
psllq
negl
adc
inc
xchg
rep
xchg
inc
loope
sbb
push
lcall
and
dec
das
sahf
adc
pop
es
repnz
fimull
sbbb
aad
add
pop
add
int3
ljmp
aas
clc
scas
loope
in
into
xor
mov
aam
jecxz
add
sub
xchg
fs
add
incl
addr16
pop
pop
jb
xchg
dec
sbb
dec
pop
insb
jg
cmp
mov
pop
sahf
call
mov
das
scas
mov
add
aas
xchg
cmpl
ljmp
and
adc
inc
mov
and
ds
mov
xchg
insb
cli
inc
push
sahf
xchg
xchg
pop
out
xor
jge
push
mov
test
adc
dec
adc
inc
xchg
push
jle
sub
pop
inc
test
adc
xor
or
inc
andl
and
popa
fwait
sti
sbb
xor
and
push
movsb
daa
push
push
out
nop
fmull
push
adc
out
loope
jne
push
call
xchg
jb
mov
jecxz
add
addr16
mov
dec
pushf
pop
adc
or
mov
push
test
fidivrl
push
jns
cmp
outsb
lods
loop
shll
es
mov
fwait
push
jl
inc
dec
into
lods
jecxz
sub
cmp
add
xor
ljmp
xor
stos
cmp
push
das
pop
ss
pop
mov
ss
sbb
fidivs
cwtl
sub
loop
iret
aaa
pop
push
ja
pop
sub
or
dec
lahf
xor
inc
out
scas
cmc
mov
or
orb
add
xchg
mov
xchg
outsb
popf
add
cld
outsb
lods
sbb
outsb
cs
add
xor
fwait
push
push
sarb
fdivl
sub
or
in
mov
test
add
lea
xor
iret
lahf
pop
jl
push
ret
mov
sbb
out
pop
mov
jns
lock
inc
imul
pop
aas
lods
popa
rcrb
cld
mov
pop
or
xchg
add
push
jmp
push
cmp
pop
dec
sbb
out
mov
xor
js
inc
arpl
fcmovu
mov
insl
jecxz
xor
fstps
mov
imul
test
ret
xchg
xchg
in
sahf
js
inc
add
sbb
insl
insb
jnp
leave
dec
push
js
ror
in
pop
shrl
inc
cmp
mov
sub
xor
jo
pop
test
xchg
sbb
mov
mov
pop
inc
int
testb
clc
js
cmc
into
mov
xchg
fists
mov
add
fidivs
loopne
dec
mov
mov
shrl
aam
inc
mov
imul
pop
adc
imul
xlat
mov
out
mov
cmp
sbb
push
and
inc
cmp
lods
out
fcomps
insb
or
test
addl
pop
and
pop
xor
cmp
sbb
and
lds
sbb
arpl
int3
and
pop
inc
jbe
xor
sbb
mov
fadds
les
stc
xchg
ja
aad
divl
shrl
cmp
sbb
clc
aam
push
push
lds
adc
add
add
push
and
mov
xor
dec
outsb
and
adc
loopne
mov
in
lret
mov
ja
add
imul
push
out
dec
dec
and
sbb
cli
daa
in
inc
mull
jle
pop
inc
mov
mov
addb
ffree
clc
mov
lods
in
inc
lret
lea
adc
in
pushf
and
jecxz
cmp
fists
ret
mov
mov
aaa
lcall
cmpsb
mov
imul
jo
or
or
pusha
js
jbe
insl
jns
jne
outsb
xchg
jae
or
and
mov
push
mov
popf
adc
cmp
sbb
das
fsts
stos
sbb
mov
add
insl
std
xor
in
and
mov
mov
call
imul
pop
outsb
into
cmp
jb
cmp
or
cltd
or
addb
pop
pop
stos
shll
arpl
add
pop
jns
cli
sub
push
js
sub
push
addl
sub
jecxz
jae
sbb
mov
pop
sub
cmpsb
or
int
sarl
jl
xor
pop
and
call
sbb
sar
cmpsl
lea
jl
ficomps
cwtl
mov
inc
dec
xor
pop
cmp
mov
cli
in
or
pushf
adc
push
dec
sub
sbb
sti
pop
sbb
inc
das
arpl
loopne
aam
xor
cmc
in
cmp
jl
sub
int
mov
or
xor
mov
enter
shrl
ds
loopne
aad
mov
sbb
call
mov
mov
int3
repz
cmp
mov
test
mov
ljmp
into
test
scas
mov
loope
inc
arpl
mov
nop
aam
lods
repnz
jmp
aas
js
divl
fidivl
clc
and
mov
xor
jb
sub
loop
push
inc
cmp
fldl
lcall
cmpb
push
out
gs
dec
stos
mov
out
cmp
in
mov
ret
cli
fldt
popa
xchg
mov
adc
inc
pop
ret
pop
pushf
hlt
xor
mov
ds
mov
sub
mov
shll
dec
inc
in
cmp
fldl
dec
loopne
jne
daa
mov
mov
pop
adc
push
sbb
mov
xor
mov
inc
xorb
pop
sbb
in
lods
inc
divl
xchg
ljmp
aaa
ds
mov
call
mov
pop
mov
or
and
add
bound
jns
cs
pop
push
push
lahf
inc
addr16
pop
lods
imul
mov
rorl
xor
test
add
dec
mov
lret
pxor
test
sbb
and
fmuls
je
addr16
mov
daa
cmpsl
mov
mov
pop
in
idiv
mov
ljmp
out
inc
test
out
sub
movsl
sbb
mov
movsb
sti
and
andl
mov
or
aam
in
imul
jg
push
inc
std
cmp
std
and
jl
mov
lahf
dec
in
xchg
xchg
inc
mov
out
sbb
ret
ljmp
stos
cmc
lea
addb
add
ret
add
and
jmp
aaa
xor
in
outsb
mov
add
daa
mov
inc
sub
dec
roll
daa
sbb
jbe
mov
sbb
xor
sub
mov
xchg
roll
xor
and
mov
fildll
roll
into
ds
ret
std
call
xchg
add
mov
xchg
insl
mov
es
mov
dec
and
push
xchg
scas
pop
xchg
dec
jbe
jecxz
dec
adc
xchg
lods
std
sub
leave
mov
cmp
fidivrl
dec
add
pop
jae
cwtl
push
mov
loope
imul
sbb
js
pop
ficoms
cmp
mov
cld
sub
and
cltd
cmp
or
das
dec
sbb
xor
push
pop
adc
scas
or
ret
cmp
lret
inc
scas
adc
pop
aam
icebp
test
jg
jo
fistpl
and
or
cmp
jne
rolb
int3
push
dec
fwait
pop
cld
gs
jge
pop
jb
imul
dec
mov
aas
stc
adc
dec
aas
andl
cwtl
mov
dec
aas
fcmovnb
fwait
loope
mulb
jmp
gs
xor
xor
xchg
icebp
in
mov
subl
gs
cmp
sbb
push
lcall
decb
and
dec
arpl
ret
jg
dec
xchg
out
add
cmpsl
sbb
iret
insl
dec
out
sub
cli
mov
pop
lahf
push
cltd
bound
mov
xor
adc
mov
int
and
push
cmp
int
jne
pop
cltd
add
pusha
imul
jg
inc
ljmp
aam
cli
dec
repnz
sub
out
add
stos
movsb
aas
or
dec
clc
imul
fucomip
iret
adcl
mov
adc
pop
fdivrp
push
dec
outsl
push
sahf
dec
shll
inc
popa
mov
dec
or
jl
xchg
ds
leave
inc
sti
xor
lahf
movsl
xchg
xor
loopne
jecxz
in
adc
sub
mov
add
xchg
pop
mov
mov
leave
xchg
lea
mov
dec
arpl
cmp
in
and
adc
in
fldt
shl
shrb
iret
pop
cli
lret
mov
push
jg
or
aaa
push
dec
add
repz
pop
mov
loop
pop
lahf
mov
dec
test
ljmp
lods
arpl
cwtl
movsb
insl
loop
add
xchg
cli
add
jae
fmuls
or
aaa
adc
xchg
inc
xor
sbb
jle
es
push
xlat
sbb
and
jmp
dec
pop
out
scas
pop
stos
nop
sub
xor
mov
ret
mov
mov
popa
loop
sbb
add
add
and
inc
jno
das
dec
dec
mov
fnstenv
cmp
add
out
daa
mov
mov
loop
xchg
pop
iret
mov
test
adc
xlat
xor
aam
jne
es
mov
mov
xor
rcll
jae
cwtl
js
mov
icebp
in
pop
out
neg
icebp
lods
sbb
cmp
adc
sbb
call
jbe
hlt
inc
mov
xchg
andb
inc
pop
insl
inc
lret
jne
push
idivb
lahf
and
mov
iret
jp
loop
sarb
mov
fincstp
jnp
mov
das
ja
lock
cli
mov
fbstp
int3
fs
xchg
dec
push
inc
sbb
int3
data16
or
pop
mov
pmulhuw
sbb
mov
xor
pop
inc
xchg
push
iret
shl
aam
in
mov
push
dec
movsl
add
ja
jmp
aad
xor
mov
mov
pop
fmull
aam
cmp
and
jecxz
out
sbb
jecxz
push
imul
xchg
mov
stos
or
sub
outsl
nop
add
ljmp
jne
js
lcall
adc
push
or
stos
aas
cmp
out
inc
out
shlb
inc
fists
inc
mov
pop
xchg
daa
clc
adc
popf
xor
int3
pusha
shrb
push
cmpsl
lret
into
sub
jnp
mov
cltd
pop
sub
ljmp
adc
jmp
movsb
dec
mov
popf
xchg
push
xchg
popf
stos
or
lds
enter
and
jle
push
xor
cmc
mov
adc
ret
sbb
leavew
mov
test
cmpsl
jns
push
ret
jnp
aad
sbb
sub
idivb
add
push
imul
mov
frstor
mov
xor
jbe
mov
push
mov
jg
clc
mov
mov
lock
iret
leave
jnp
add
jae
fwait
arpl
ss
sbb
adc
popw
pop
out
add
loop
inc
not
aas
sbb
in
shrb
shll
mov
inc
test
or
div
push
cltd
adc
adc
jns
xchg
inc
mov
ds
jns
sub
jne
out
pop
outsl
inc
pushf
push
ficomps
das
cmp
rolb
data16
mov
inc
int
jecxz
rcrb
push
jae
mov
test
test
jbe
jp
jbe
push
cmp
lsl
leave
jbe
mov
shlb
dec
xchg
int
push
cmpsb
mov
clc
lret
adc
jns
arpl
fmuls
and
ljmp
cwtl
scas
in
xchg
dec
mov
ret
xor
ret
jne
outsb
mov
rolb
pop
xor
and
pusha
das
ss
rcrl
or
xchg
mov
xor
sbb
push
xor
push
and
xchg
rcl
jmp
mov
push
xchg
and
sysenter
pop
push
lods
pop
fsubl
loop
add
cltd
mov
aas
pushf
ror
jp
dec
sar
insl
fsubrs
xlat
push
mov
jb
lods
jae,pt
je
shlb
and
popf
ljmp
cmpsl
into
call
notl
mov
jnp
push
mov
cwtl
mov
scas
sbb
add
mov
jb
flds
andl
sub
push
fwait
push
sbb
cli
dec
popf
enter
loope
or
lret
scas
insb
sub
stos
lahf
ds
sbbb
add
or
cmp
inc
jle
popa
imulb
movsl
push
out
in
xchg
popf
mov
test
xchg
insb
aas
add
push
xlat
inc
pop
mov
inc
mov
iret
inc
insb
push
ror
or
shrb
movsb
lds
bswap
outsb
ret
movsl
movsb
push
sbb
popf
cld
pop
mov
fsts
pushf
daa
sbb
stos
push
and
ss
decl
mov
fdivrs
jp
hlt
sub
icebp
fwait
mov
cmpsl
xchg
push
repz
rolb
ja
add
jno
mov
repz
sbb
xchg
mov
mov
or
mov
mov
stos
mov
jae
mov
stc
pop
mov
dec
mov
sarb
mov
imul
mov
insl
pushf
jns
xchg
ret
inc
fs
ret
lock
jbe
mov
pop
repz
mov
dec
add
scas
js
out
or
mov
sbb
xorb
lds
lahf
fs
add
fnstcw
scas
pushf
mov
outsl
loop
mov
xchg
sbb
mov
aaa
and
jne
mov
and
cmp
push
mov
lods
pusha
pop
sahf
pusha
cwtl
sub
jmp
adc
and
mov
xor
test
jns
sti
push
les
sub
ficoms
mov
and
inc
mov
xor
jo
repz
fucomp
xchg
jne
scas
mov
xlat
je
sbb
xchg
orl
insl
xchg
mov
xchg
divl
push
push
or
jae
lret
xchg
pusha
jecxz
adc
pop
dec
mov
mov
sbb
daa
mov
mov
pop
xchg
scas
je
sub
pop
and
mov
pop
in
or
addr16
popa
xchg
ret
dec
and
mov
fstl
and
outsl
rclb
ret
mov
push
mov
xor
adc
dec
pop
dec
movhps
ret
mov
dec
aaa
in
sub
push
and
rolb
sub
je
in
out
mov
ret
jl
cmp
jge
xchg
push
pop
fwait
mov
cmp
movsb
hlt
fcomp
lds
icebp
mov
roll
jge
sbb
xchg
es
lcall
mov
rcrl
mov
pop
push
cmpsb
cmp
stos
cmp
inc
push
push
pop
inc
arpl
sbb
in
fsubrl
xchg
adcb
stc
cmp
in
movsb
push
or
and
adc
pop
dec
mov
adcb
dec
inc
lods
je
sbb
sub
nop
sub
test
je
adc
mov
mov
add
mov
adc
sub
ss
ret
sub
sub
aas
lds
or
pop
out
jmp
mov
rcrl
jl
imul
sub
jmp
outsb
sub
add
push
aam
adc
inc
mov
dec
leave
jg
lret
mov
mov
pop
pop
in
pushf
fsub
pop
ja
mov
pop
sbb
mov
sub
and
ret
les
dec
hlt
in
xchg
adc
mov
ss
mov
jle
movsl
aas
jo
rcll
int3
shrb
sbbl
faddl
lahf
push
sti
lcall
daa
fisubrl
jp
cmc
adc
cmp
pop
pop
mov
and
mov
push
adc
js
inc
and
lahf
add
xchg
adc
repz
popa
into
outsb
loopne
push
and
cmp
dec
mov
outsb
loopne
cwtl
test
jmp
scas
sub
notl
cli
sbb
pop
sub
loopne
mov
fldl
push
scas
xchg
jbe
xlat
dec
mov
lock
pop
sub
mov
dec
jb
pop
lret
loopne
out
pop
and
outsb
jp
test
lahf
pop
xor
mov
lock
inc
cmp
in
push
cmp
push
sub
sbb
jl
xchg
into
cmpsb
mov
jb
sar
jo
aaa
dec
lock
jb
sub
push
dec
push
outsb
push
imulb
lret
sub
push
addl
lcall
jg
rorl
sub
test
je
stos
xchg
shlb
lods
xlat
or
and
inc
mov
mov
cmpsb
imul
mov
mov
push
add
push
mov
pop
add
xlat
mov
cmp
lret
in
popa
out
add
into
cmp
jmp
xchg
addl
mov
xor
into
hlt
jge
mov
ja
xor
xor
daa
dec
shrb
insb
nop
das
xor
mov
mov
rolb
mov
movsl
cmp
cmc
movsb
addr16
insb
sbb
orl
adc
xchg
cmp
sub
add
in
and
pop
lcall
inc
inc
jo
push
movsb
inc
push
std
fsubrs
inc
add
clc
jecxz
sub
stos
test
sub
cmp
fcompl
sbb
fmull
push
fstpt
and
jge
loope
out
fptan
push
pop
movsb
xchg
mov
clc
push
sarl
leave
cmp
xor
push
fstp
sbb
arpl
out
jl
mov
mov
fucom
icebp
cmp
out
es
jge
aad
sbb
lcall
cmp
add
jo
cmc
and
imul
cmpsb
repz
add
sarb
iret
xor
adc
dec
in
push
insl
or
inc
ljmp
call
or
sar
addl
and
add
jnp
addb
mov
and
ret
sbb
sub
mov
test
cmp
mov
xchg
aaa
pop
test
pushf
xor
push
pop
add
or
sbb
pop
scas
sbb
imul
xor
mov
sahf
push
in
hlt
sbb
pusha
push
incl
daa
out
and
push
fidivs
add
sub
cwtl
jl
and
push
out
test
jge
jmp
jbe
and
out
add
pop
cmovb
or
cs
xchg
inc
add
push
and
leave
adc
pop
mov
or
cmpsb
mov
inc
int3
mov
repnz
lahf
push
dec
or
sbb
lods
pop
enter
adc
je
iret
aaa
cs
mov
fwait
loop
aaa
imul
mov
jg
pop
and
push
std
out
roll
xchg
adc
int3
pop
or
aaa
dec
push
and
outsl
test
test
lods
iret
pop
mov
cmp
sub
insb
dec
outsb
loop
or
and
mov
paddw
xchg
or
mov
bound
test
cmp
mov
xchg
scas
scas
fisubs
and
sbb
xchg
and
xor
or
dec
add
sub
pop
fsubl
xor
sti
stc
es
iret
call
mov
insl
inc
aam
jecxz
scas
inc
mov
fs
nop
popa
je
lret
jecxz
arpl
jp
faddl
ja
in
fucomp
sub
loop
scas
enter
js
insb
hlt
sbb
push
mov
pop
or
mov
cli
dec
or
popl
sub
xor
mov
ds
movsl
or
cmp
jl
sbb
xor
jge
cmp
gs
mov
sub
jp
jbe
adc
or
xor
or
popf
mov
add
sub
int3
flds
push
mov
in
fistpll
lcall
fwait
mov
hlt
dec
pop
and
int
ret
mov
mov
mov
sbb
jge
enter
ret
push
jp
lods
adc
pop
shrb
popf
in
dec
push
adc
xor
cwtl
fisubl
jl
stos
test
sbb
mov
inc
test
jp
pop
repnz
cmp
out
loope
push
or
sub
lcall
or
jge
or
out
shr
xlat
cmp
jae
jo
mov
lahf
lods
fs
mov
repnz
cmp
lods
in
inc
hlt
xchg
out
sub
cmp
and
push
mov
jno
adc
iret
test
std
pop
stc
les
adc
scas
push
mov
push
or
inc
scas
aad
or
ja
adc
andb
xchg
sbb
loopne
sbb
testb
or
mov
add
dec
ljmp
xor
push
fldenv
stc
jns
nop
sub
jns
sahf
mov
jge
jmp
std
addr16
jl
insb
bound
lret
mov
icebp
jl
adc
mov
push
lods
mov
push
sub
shll
arpl
add
fisubs
outsb
cltd
adc
loope
jg
xorl
and
adc
push
mov
lea
mov
sub
xor
lret
xorb
jno
outsb
mov
sub
and
fs
jnp,pn
adcb
mov
xchg
sub
jmp
jnp
or
fbstp
loopne
int
daa
imul
icebp
mov
dec
cmp
xchg
dec
ja
pop
adc
xor
push
cmc
jmp
scas
popf
je
test
sub
sbb
jne
dec
pop
dec
outsl
dec
imul
fsub
push
mov
cmp
push
icebp
lahf
inc
ret
xchg
mov
or
test
loopne
js
and
and
pusha
xchg
mov
les
imul
xor
rorb
loopne
dec
mov
push
jge
pushf
pop
or
add
cmp
int3
repz
push
add
fsubrs
mov
inc
jmp
sub
popf
test
dec
adc
xchg
mov
decl
jecxz
mov
adc
inc
sbb
les
ss
andl
fisttpl
aam
adc
stos
and
push
rorb
mov
pop
addl
push
jae
and
idivl
mov
push
cmp
filds
fsqrt
jae
jg
sbb
cmp
js
dec
or
out
sub
into
mov
dec
mov
sarb
enter
mov
std
xor
fldcw
push
push
sub
mov
cmp
add
mov
xor
js
out
aam
push
aaa
mov
mov
cli
sub
dec
aam
mov
xchg
mov
add
out
and
pop
push
sub
or
mov
jmp
adc
pop
add
jg
adc
addr16
mov
dec
sbb
gs
mov
int
aaa
jb,pt
and
cs
shll
push
int
push
mov
xlat
in
mov
adc
add
outsl
sub
sbb
into
lahf
jne
push
test
mov
lret
out
outsl
add
adc
vpavgw
cmp
push
xchg
test
enter
mull
dec
dec
rcll
inc
xor
mov
mov
jg
sub
adc
dec
hlt
enter
arpl
mulb
std
push
pop
pop
arpl
dec
push
push
dec
out
lds
sar
and
shll
inc
loopne
and
out
pusha
xchg
pop
outsl
in
aaa
shlb
xchg
loope
fs
inc
stos
inc
dec
mov
pop
repnz
out
push
and
jno
push
sbbl
lcall
rcrl
loopne
sub
fistl
ljmp
pop
add
movsl
push
rol
loope
add
aas
pop
push
rcll
clc
jle
mov
mov
jo
test
adc
les
lahf
js
jae
frndint
pushf
sub
lods
push
addl
rorl
xchg
shl
aas
adc
inc
out
lret
inc
sbb
test
or
pop
mov
repnz
sub
xchg
int
xlat
movsb
push
dec
addr16
movsb
jmp
ret
int3
fnsave
or
cmp
gs
cmc
pop
push
mov
subl
mov
or
adc
in
mov
icebp
sub
mov
sub
fwait
mov
lock
shrl
xchg
imul
fs
mov
mov
and
nop
push
outsb
ja
xor
insb
stos
fmuls
add
fs
fimull
push
in
sar
sub
mov
repz
rorl
jp
dec
pop
sbb
push
xor
bound
push
leave
inc
and
and
jnp
jmp
xchg
adc
out
fcoml
out
push
les
add
repz
sub
nop
mov
sub
push
inc
lea
jnp
mov
inc
xchg
pop
sbb
pop
mov
data16
add
into
cmp
jns
sub
rcll
xchg
ja
xchg
and
std
sbb
scas
xchg
xor
out
pop
push
xchg
adc
clc
push
pop
cli
data16
sub
inc
imul
sub
sarb
loope
stc
sahf
imul
inc
mov
push
jns
and
or
pop
jbe
or
sti
jg
paddsw
aad
sbb
sbb
push
lods
push
mov
testb
xorb
push
add
xchg
cld
lea
cmc
testb
fbld
fwait
jno
seto
dec
push
xchg
mov
push
mov
cs
push
adc
mov
outsl
shrl
mov
mov
daa
lcall
scas
mov
loop
jge
lea
adc
repnz
stc
in
xchg
hlt
mov
jb
aad
bound
int3
fnsave
mov
imul
or
push
dec
std
insl
xchg
adc
add
pop
jo
lock
mov
xchg
jg
mov
jns
enter
mov
pop
js,pt
xchg
cmp
pusha
jns
sub
cmp
sub
push
stc
stc
repz
xor
jnp
stos
sub
pop
test
sahf
dec
mov
cltd
pop
je
inc
call
cmp
add
pop
negb
test
cs
xchg
arpl
ret
mov
sbb
jae,pt
sbb
imul
mov
sub
js
mov
lods
xchg
clc
daa
adc
xor
sub
pop
mov
cmc
mov
movaps
cmp
pop
push
xchg
dec
ret
int
test
loop
addl
cwtl
jle
lea
adc
repz
call
inc
ret
pop
sbb
pop
xchg
mov
sbb
pop
lods
push
xchg
inc
jl
xchg
sub
mov
rcll
ret
inc
into
clc
add
popf
dec
test
int3
aad
xor
push
in
lds
cltd
js
and
scas
mov
test
scas
test
mov
repz
or
jbe
in
pusha
test
mov
mov
add
mov
loope
mov
xchg
sti
pop
sbb
jb
scas
adc
pop
xor
and
cmp
push
push
cwtl
inc
and
jg
push
dec
data16
mov
pop
pop
ja
subl
sbb
jecxz
xchg
test
lds
bound
arpl
sahf
js
daa
pusha
dec
xor
outsl
dec
dec
xchg
adc
bound
adc
inc
add
mov
xor
jl
clc
dec
mov
ret
sbb
or
fwait
stos
push
mov
jle
das
pop
movsl
jns
mov
xchg
xor
sub
cs
shll
cmp
enter
mov
mov
ret
js
ss
pop
imul
in
sbb
or
repz
cli
cmpsb
sahf
test
ficomps
int
xchg
dec
popa
add
call
sub
divl
push
into
xchg
insb
rorb
loop
rol
push
inc
outsb
mov
adc
dec
subb
ja
repz
sub
aas
dec
cmp
pop
testb
addr16
dec
cmp
inc
das
cmp
loop
lahf
in
shl
cwtl
or
roll
adc
lods
ffree
mov
cs
jo
in
pushf
jno
ljmp
mov
adc
xchg
cmp
mov
imul
and
pop
or
mov
insb
cmc
lahf
jl
mov
push
adc
stos
add
lods
inc
inc
sar
dec
movb
cmpsl
push
lret
sub
add
cmp
mov
loope
lret
cmp
into
dec
dec
mov
leave
popa
loop
fdivl
test
outsl
enter
das
pop
out
mov
es
mov
ret
aam
add
inc
ljmp
lea
push
xchg
ret
jne
and
push
inc
xchg
add
cmp
pop
dec
push
mov
add
popf
in
mov
push
inc
int
cli
out
and
and
outsl
jmp
in
ret
sub
in
inc
mov
xchg
pop
pop
jmp
mov
lret
inc
lcall
loop
lock
jae
lcall
cmp
cmp
out
test
pusha
add
mov
xchg
repnz
pop
aad
out
jg
push
out
adc
dec
orl
pop
mov
insb
std
setno
jg
cmp
lods
outsl
xchg
push
xchg
adcl
das
pop
xor
push
mov
dec
scas
call
fwait
jge
in
jmp
or
lret
cmp
xor
cmp
or
cmpsb
arpl
sbb
call
push
sti
roll
call
mov
sub
mov
clc
adc
shlb
pop
in
mov
mov
outsb
lahf
ficompl
je
cmpsb
es
fdiv
jge
mov
mov
or
hlt
les
xchg
jmp
lods
gs
pop
pop
test
shll
inc
inc
test
push
sbb
pop
jge
cmpsb
mov
mov
push
cmpsb
sbb
mov
leave
out
jne
cwtl
outsl
or
and
mov
add
and
adc
jo
inc
scas
adc
mov
add
jb
pop
popa
cmp
mov
popa
call
imul
test
xor
jmp
push
out
push
mov
or
xchg
or
addr16
pop
sub
mov
fimull
xor
adcl
stos
ret
jns
out
imul
je
and
leave
jnp
jnp
out
push
fisttpll
adc
icebp
fwait
leave
lods
loopne
fbld
jg
sbb
push
push
out
push
frstpm(287
arpl
mov
fldl
scas
add
ja
pop
dec
gs
cmp
push
add
imul
cmpsb
pop
movsb
in
xor
mov
rcrb
std
push
pop
lahf
daa
jns
jae
mov
in
bswap
outsb
cmc
jge
into
andb
out
mov
cmp
cmpsb
les
in
push
or
movsb
adc
test
repz
mov
bnd
lods
dec
xlat
clc
stos
inc
test
imul
xchg
add
repz
outsb
cmp
mov
std
sarb
push
jl
mov
push
cli
and
and
cmpb
sub
mov
mov
or
cmpsl
add
aas
xchg
movsb
icebp
dec
lret
pop
cld
jo
orl
out
add
or
sub
pusha
lret
ja
add
nop
jo
fnstenv
sub
cmp
sbb
ret
test
dec
sub
push
jle
inc
enter
pop
leave
int3
adc
inc
loopne
xchg
lcall
mov
jp
stos
mov
in
mov
xchg
jne
lods
fmul
popa
loop
mov
rorb
push
popf
loope
iret
in
mov
mov
sub
lock
clc
cltd
sbbb
add
arpl
cwtl
ss
aas
mov
test
leave
insl
mov
test
cltd
fs
lods
dec
test
les
jns
pushf
cli
decl
into
adc
dec
xchg
stc
mov
dec
adc
xchg
aas
push
enter
jne
aam
mov
inc
dec
addb
xchg
ss
adc
int
or
adc
das
xchg
mov
ds
movsb
sub
xchg
or
orl
cmpsb
pop
pop
pop
imul
into
jae
mov
mov
sbb
faddl
mov
push
lret
repz
lret
pop
scas
aaa
lret
sbb
out
cmp
fcomi
jbe
xor
sub
jae
pop
sbb
mov
xor
sub
sub
xor
mov
add
xor
movsb
ret
das
xlat
jmp
mov
mov
inc
bound
mov
add
sbb
or
test
dec
adc
inc
xor
les
gs
mov
mulb
xchg
out
insb
push
xor
cmp
outsl
sub
movsb
popf
mov
sti
clc
mov
sbb
jb
adc
sub
clc
es
add
sbb
int3
or
jb
movsb
je
repz
das
dec
mov
mov
jb
mov
int3
inc
iret
out
cmpsl
aas
sub
lods
jns
ja
or
ss
insl
inc
and
jbe
sti
ss
jno
sub
lods
das
daa
cmp
test
or
cmp
or
xchg
ds
shrl
test
mov
aad
mov
mov
lds
stos
loop
outsl
cmp
xchg
mov
pop
add
outsl
jl
nop
mov
in
xchg
pop
cmpsb
ror
dec
loope
xchg
or
mov
dec
push
and
lret
loopne
jecxz
cmpsb
adc
xchg
pop
mov
sbb
and
lock
mov
mov
jns
iret
lock
inc
mov
mov
pop
inc
cmp
call
loopne
es
inc
inc
cmp
inc
and
xchg
lods
jge
out
and
mov
in
add
xor
sbb
popf
lods
add
sbb
inc
iret
pop
aad
pop
shrl
push
or
lds
adc
adc
xchg
mov
scas
jp
push
out
sub
in
lock
cmp
inc
arpl
icebp
mov
divl
movsl
push
gs
jo
and
dec
shrb
in
sbb
mov
lea
pslld
js
movsb
mov
mov
outsl
inc
sub
rcl
loop
or
out
sbb
fcmovnb
mov
jecxz
fsts
outsl
push
ret
les
sarb
jle
test
lods
lret
add
add
lds
hlt
lock
mov
adc
inc
cmpl
sahf
push
cs
aam
aad
push
ja
mov
cmp
iret
pop
push
test
adc
xor
jbe
add
test
push
mov
mov
cmpsb
pop
sbb
cmp
mov
shl
mov
gs
xchg
mov
jns
pop
into
in
faddp
xchg
stc
mov
mov
pushl
movsl
mov
xor
and
je
inc
pop
pushf
xor
jno
mov
in
lret
cmp
pop
idivb
mov
inc
jecxz
xchg
add
fisttps
inc
out
jge
popa
pop
sti
jecxz
divl
add
cltd
push
in
mov
jbe
mov
cmp
xchg
mov
or
leave
xor
fcompl
cmp
lock
roll
or
arpl
subl
mov
ds
loopne
fistpl
call
fcomp
push
lds
pop
addr16
shr
repz
loopne
pop
adcl
mov
pop
lret
aas
stos
adc
pop
and
imul
push
and
pusha
pop
jmp
pushf
mov
fmuls
in
test
cmp
xor
lahf
ljmp
sbb
adc
mov
dec
sbb
add
fldl
or
test
rolb
ljmp
sbb
push
mov
mov
aas
cmp
adc
mov
push
popf
subb
das
stos
jg
dec
mov
pop
inc
inc
pop
push
push
xor
inc
push
jecxz
in
cwtl
imul
fbld
cmpsl
leave
outsb
outsb
xchg
int
es
imul
sbb
mov
lds
mov
lcall
push
test
outsl
jg
mov
dec
and
push
inc
mov
push
pop
jl
push
inc
mov
scas
xor
stc
pop
cmp
aad
testl
ret
test
aas
movsb
fistpll
sarb
inc
xchg
lods
arpl
add
cmp
or
jle
xchg
mov
scas
movb
vcvttsd2si
std
add
iret
or
jnp
and
adc
sub
pop
aaa
xchg
dec
jae
push
inc
insl
sbb
gs
movsb
jnp
xchg
repz
push
xorl
pop
cmpsb
call
and
add
repnz
xchg
scas
push
jge
add
lea
repnz
jecxz
int3
lret
jo
and
ja
jle
subb
jecxz
les
cs
ret
jbe
stos
outsl
pop
test
mov
mov
addb
jnp
mov
push
cwtl
mov
sub
dec
out
dec
and
xor
idivl
adc
popa
cld
inc
imul
and
push
cmp
jg
sarb
push
xlat
pop
jecxz
xchg
pop
mov
push
scas
xchg
add
mov
add
loope
mov
int3
add
push
sbb
data16
mov
push
mov
movsl
loope
nop
mov
sti
stc
sub
lret
dec
std
xchg
fstl
cmc
adc
dec
mov
iret
mov
sub
dec
js
rorl
adc
pusha
pop
inc
sbb
sub
mov
rcrb
int
jb
or
cmc
sbb
or
cli
inc
jb
aad
int3
push
gs
mov
ret
or
jne
cld
push
dec
sbb
mov
sahf
adcl
jno
pusha
fwait
jns
push
push
mull
insb
mov
push
mov
inc
mov
ds
push
mov
ljmp
mov
and
cmp
jno
fmuls
dec
or
mov
imul
cs
mov
mov
push
shll
xchg
and
lods
sti
jnp
mov
popf
incb
in
lcall
add
and
xor
std
dec
or
adc
dec
insl
in
jae
add
icebp
cmp
push
shlb
daa
cmp
int3
jae
mov
jo
push
mov
dec
imulb
fcoms
fisubs
jb
or
push
mov
mov
out
mov
inc
pop
fadds
leave
insb
repz
adc
stos
leave
and
sub
cmpsl
out
aad
stc
rep
sub
pop
mov
mov
inc
or
inc
daa
rcl
mov
adc
mov
jge
shl
mov
xchg
jno
fcoml
sti
and
cmp
shrl
xor
or
pop
adc
stos
dec
push
fidivs
or
call
pop
or
aad
scas
jo
dec
andl
idivl
cmp
xchg
xlat
lcall
mov
hlt
lods
or
lods
xchg
sub
cltd
test
adc
inc
fstps
pop
dec
dec
sahf
imul
imul
jp
pop
cwtl
dec
fdivl
cmp
or
sti
das
jecxz
cld
sub
sub
mov
enter
lea
cwtl
sub
mov
pop
sub
cwtl
push
in
mov
sub
pop
sbb
sbb
ja
shlb
shrl
jnp
sbb
mov
xor
arpl
add
sub
enter
sub
and
dec
in
je
dec
xor
adc
or
out
inc
fwait
push
in
mov
data16
pushl
mov
aam
xor
mov
scas
adc
sti
mov
sub
scas
push
mov
fstpt
push
cmpsb
dec
jae
int
cmc
pop
lods
data16
loop
push
xchg
rclb
fidivrl
push
xor
mov
mov
dec
mov
ljmp
dec
mov
xchg
cs
fcmovnu
iret
or
adc
xor
jo
rcll
cmp
add
mov
insb
fbld
lock
loopne
mov
mov
or
std
or
push
add
arpl
xlat
in
pop
test
test
mov
fstpl
mov
out
lds
inc
add
test
mov
mov
mov
in
nop
cli
and
fstpl
mov
jmp
in
in
mov
fldenv
mov
cmc
dec
pop
add
adc
xchg
test
jge
mov
out
dec
sub
aad
sub
adc
bound
dec
inc
test
rcl
jo
mov
inc
xor
mov
push
sub
insb
xor
adc
xor
xchg
jmp
push
std
aas
jmp
fistps
repz
and
or
mov
ss
push
mov
push
jmp
fnstcw
sbb
stos
mov
cld
jle
mov
pop
in
mov
in
push
sub
pop
jbe
pusha
or
rol
js
lcall
pop
jns
ret
js
rcll
xchg
stos
cmp
mov
rolb
inc
xchg
jae
in
dec
jae
out
jnp
cmp
mov
sbb
mov
or
pushf
fidivrl
gs
cmc
xlat
stos
sub
add
dec
sub
cs
dec
imul
lds
dec
sahf
adc
sub
pop
ret
cmpsb
dec
or
mov
shll
sub
lcall
movsb
sti
sbb
aas
cltd
aad
ja
lds
push
sub
jg
dec
pop
xor
icebp
push
hlt
mov
mov
lock
rcrl
scas
mov
mov
dec
and
jne
ret
call
bound
daa
test
rorl
push
mov
or
pushf
mov
sub
add
sbb
negl
int
cltd
loope
pop
test
jg,pn
das
test
and
and
push
pop
inc
in
jmp
and
inc
dec
mov
jecxz
fisubl
pop
cmp
sbb
jo
mov
pop
push
sarb
in
xchg
fadds
mov
jl
mov
stc
push
or
mov
or
pop
adc
repz
mov
stc
and
sub
std
push
xchg
mov
mov
out
cmp
sub
xchg
add
cmpsl
fdivp
bnd
rorb
cltd
movsl
imul
jg
pop
and
fdivrp
pop
sahf
push
pop
push
popf
out
call
mov
sahf
movsb
xchg
and
mov
div
cmp
push
mov
mov
movsl
adc
js
arpl
data16
out
stos
cmp
movsl
fisubrs
jnp
mov
mov
in
enter
adc
pop
xor
mov
add
xchg
cmp
lret
insb
bound
and
iret
loop
jo
cmp
jb
aaa
mov
ds
lea
out
daa
sti
jnp
sub
xchg
cld
mov
jnp
int
pusha
stc
jne
add
sub
in
out
mov
jns
jmp
insb
arpl
xchg
push
xchg
leave
xor
mov
xchg
je
imul
jle
or
ljmp
fs
sbb
push
int
push
pop
inc
jne
shll
push
loop
test
mov
xor
cld
and
inc
or
lea
inc
pusha
std
stos
std
inc
ret
xorl
or
push
mov
fadd
test
out
xchg
mov
loop
lea
pushf
icebp
mov
xlat
adc
mov
mov
lret
inc
xor
hlt
push
mov
sub
jns
fisubrs
jg
lret
fsub
insl
and
or
cli
xchg
jmp
jbe
or
pop
icebp
stos
cltd
sub
push
ljmp
lods
and
dec
movsl
cmp
stos
ss
push
in
neg
sub
sbb
xor
stos
out
sbb
inc
int3
test
xchg
rep
xor
in
xchg
mov
into
and
and
xchg
icebp
mov
dec
jl
mov
adc
sub
pop
xchg
cmp
push
idivl
fnsave
mov
or
iret
mov
rcl
aad
lds
sbb
add
cmp
push
sbb
mov
mov
xor
lds
mov
push
jne
scas
xor
or
inc
dec
sbb
push
aaa
cmp
sub
addr16
mov
sub
lret
out
neg
xchg
popf
push
inc
sbb
or
int
lret
sub
in
movsb
rorb
sbb
inc
jmp
cmp
mov
jl
ja
and
scas
jg
fsubrs
cmp
sub
add
repz
mov
and
movsl
pcmpeqd
mov
test
mov
or
fisttpl
lods
push
sbb
xor
xor
sbb
lods
shrl
data16
mov
add
xlat
pop
dec
mov
pushf
test
fsts
inc
xlat
mov
mov
std
push
and
mov
sbb
scas
cmp
inc
stos
icebp
ret
adc
pop
dec
les
or
jle
cmp
xchg
or
repnz
test
mov
mov
fadd
insl
fnstcw
inc
dec
hlt
test
loop
mov
push
ds
loopne
adc
je
mov
mov
aas
xor
mov
xchg
pop
push
inc
push
pop
pop
mov
imul
push
imul
and
pop
push
jb
rolb
push
das
xchg
cld
push
lcall
mov
mov
popf
jge
cmp
mov
jns
enter
add
xchg
cld
cld
movsb
dec
int3
fsub
rcrb
fdivs
jo
sti
call
test
es
pop
lret
mov
mov
lock
mov
fwait
jmp
xor
ss
jecxz
mov
push
sub
sbb
in
mov
adc
mov
and
sahf
stos
test
mov
fwait
rcrb
loop
arpl
xor
mov
adc
sub
iret
xor
push
repnz
pop
jbe
or
sbb
lods
sub
out
sbb
mov
lock
lds
push
inc
fldl
je
getsec
lret
inc
inc
add
cmp
in
ja
fsubrl
mov
xchg
adc
xchg
xchg
inc
sbb
adc
test
cmp
xchg
push
push
call
scas
mov
fsubr
cmpb
mov
scas
xchg
mov
xor
es
pop
or
push
aad
and
inc
xchg
add
incl
jmp
xor
mov
jo
movsl
xchg
dec
movsl
sahf
pop
jl
and
movsl
cld
sbb
jmp
pop
inc
jmp
cltd
and
lcall
out
mov
sub
leave
addb
daa
ja
pop
js
inc
mov
ds
jne
pop
enter
and
push
test
adc
pop
mov
cmp
sbb
sub
sbb
jecxz
aaa
cmp
push
jbe
enter
or
jno
das
mov
pop
mov
ror
adc
mov
and
sti
test
stc
mov
jbe
mov
mov
stc
out
movsl
adc
out
mov
mov
call
xchg
push
add
or
xchg
idivl
mov
insb
sub
or
xlat
sarl
pop
or
outsb
adc
xor
mov
mov
fimull
cmp
xchg
add
jmp
movsl
lea
out
loopne
jno
mov
push
pop
iret
mov
mov
sbb
mov
or
add
loopne
enter
mov
jp
in
xchg
cmp
push
mov
mov
jnp
repz
or
ds
pop
mov
cmp
push
mov
in
sub
jmp
inc
out
push
ret
jge
adc
cwtl
out
dec
cmc
push
adc
fsts
inc
adc
push
mov
inc
jno
sub
sti
aas
jnp
fstpl
pop
sbb
jbe
xor
push
mov
fwait
jae
xchg
stos
in
call
scas
lahf
jae
lcall
adc
cltd
out
adc
lock
rclb
insb
fidivrl
aad
paddusw
mov
add
es
fdivr
int3
lock
les
sarb
xlat
rorl
cmp
dec
add
pop
mov
pop
loope
adc
movsb
pop
jg
les
xchg
fldt
xchg
insl
cli
shll
xor
xchg
adc
pop
clc
push
mov
adc
pop
pop
loope
in
cltd
in
push
shrl
xor
xor
sbb
stc
cld
nop
and
jb
orb
jmp
mov
lret
js
adc
faddp
cmpsb
sbb
xchg
mov
mov
xor
inc
and
mov
incb
dec
outsb
cwtl
add
movsl
mov
mov
and
sbb
mov
ret
cmp
inc
repz
push
mov
jns
dec
ror
jbe
fldt
xchg
adc
js
dec
push
or
enter
ffreep
xor
and
popa
jp
es
outsb
movsl
ja,pn
push
popf
fs
sbb
int
divb
ror
ja
fwait
adc
clc
jns
stos
int3
mov
mov
fwait
sbb
mov
lcall
xchg
xchg
lret
jecxz
mov
dec
cmpsl
ljmp
cmp
jge
test
xor
pop
stos
xchg
cwtl
fyl2xp1
lds
jns
sub
icebp
fmul
mov
jb
hlt
cmp
inc
pop
pop
cmp
xchg
fwait
adc
pop
outsb
xchg
xchg
mov
leave
push
rcl
shl
leave
stos
pmaxub
lcall
cmp
popa
adc
js
add
jl
shlb
aaa
push
fistpl
lahf
or
movsb
mov
xchg
cmp
adc
cmp
popa
icebp
les
dec
xchg
lods
xchg
cmp
mov
mov
jne
or
aaa
sub
cltd
rcr
dec
lds
mov
push
sub
inc
mov
jb
fiadds
loopne
daa
ss
or
addr16
cmp
outsb
xchg
insl
lahf
sbb
int3
mov
sub
add
xchg
sbb
hlt
arpl
adc
rcrl
int3
push
jmp
lcall
jno
and
movsl
mov
iret
js
sbb
in
and
mov
jecxz
cwtl
ret
mov
sub
test
mov
insl
ret
cld
insl
in
sub
adc
mov
leave
les
xchg
mov
sub
or
jle
movl
cld
leave
inc
xchg
cli
mov
add
sub
sub
inc
sahf
mov
cmp
or
loope
lods
mov
lcall
je
inc
mov
stos
and
fnsave
mov
aad
mov
js
in
dec
xchg
and
push
scas
xor
repz
ffreep
int3
push
mov
mov
mov
loop
mov
enter
adc
cmp
int
pop
cmc
inc
push
ficomps
xor
aam
pop
mov
adc
outsb
stos
jb
jb
mov
dec
out
push
cli
cmc
cmp
imul
outsb
inc
inc
sub
xor
mov
test
imul
xor
dec
mov
aad
stos
sub
std
loope
jnp
repnz
mov
cmp
cwtl
data16
js
mov
mov
xchg
cmpsb
jb
sahf
mov
scas
mov
stc
pop
adc
pop
jo
outsl
cwtl
push
cmc
leave
push
ljmp
imull
jnp
sbb
out
mov
push
dec
mov
lret
push
cmpsb
loopne
aam
out
jmp
inc
fbld
or
repz
push
inc
cltd
mov
cmc
lea
push
repnz
xor
xlat
jo
movsl
mov
mull
pop
pop
sub
xchg
outsl
into
mov
nop
in
daa
dec
pop
xchg
cmp
pop
jg
lret
inc
pop
mov
dec
pop
fists
scas
cltd
sub
rorl
inc
imul
inc
inc
dec
add
out
fistpll
cwtl
add
daa
repnz
mov
jae
fs
push
pop
pop
arpl
xchg
loopne
mov
adc
jge
das
cmpb
dec
outsb
jnp
mov
fsts
jae
jmp
data16
repz
outsl
scas
adc
add
xchg
adc
gs
cmp
mov
cmp
sub
add
popf
adc
pop
nop
fwait
or
loopne
or
in
lcall
dec
adc
std
movsb
scas
pop
mov
lahf
js
mov
inc
inc
xor
mov
cltd
fisttps
aas
ja
mov
fnstsw
iret
dec
xchg
daa
stos
xchg
pop
pop
aaa
push
stc
outsl
mov
imul
cmc
jb
cmpsl
mov
js
mov
cli
mov
adc
mov
jae
jmp
inc
test
xor
push
cmp
cmpsl
inc
add
addr16
cli
sub
mov
shlb
xchg
mov
popf
jge
jg
call
jnp
inc
sar
fucomi
repz
pop
out
sbb
lock
dec
rol
inc
xor
mov
dec
jmp
mov
fst
clc
jecxz
sub
sahf
ret
lods
mov
lret
roll
inc
add
adc
cmp
xchg
jne
sub
xchg
subl
sbb
in
mov
insb
fdivrs
dec
aas
push
sub
inc
addl
push
fwait
aad
std
sti
adc
ds
xchg
daa
push
pushf
fwait
sbb
mov
push
in
pop
jp
outsl
xor
bound
cmpsl
xchg
sbb
bound
push
push
mov
negb
xchg
inc
push
outsl
mov
scas
adc
aam
jne
pusha
fsub
sbb
mov
fcmovbe
lods
cmpsl
loopne
xchg
inc
sbb
out
fiadds
sbb
dec
stos
dec
or
andb
cwtl
das
adc
cmp
xor
mov
inc
jae
cmp
sti
rorl
mov
mov
mov
pushf
outsl
mov
mov
push
push
sub
jmp
inc
inc
push
and
or
test
pop
out
mov
xchg
push
movsl
pop
and
mov
adc
push
stos
pop
scas
fstl
add
push
push
in
pop
out
mulb
ljmp
mov
fs
shlb
lret
adc
sbb
pop
mov
inc
dec
cwtl
inc
test
inc
sbb
mov
mov
imul
dec
pop
push
and
cmp
or
popa
rcr
inc
jne
movsl
jnp
andb
push
int
movsb
mov
inc
inc
ficomps
ffree
fs
pop
fbstp
nop
mov
lds
sbb
rcr
idivl
jnp
cli
scas
test
fdivp
ret
mov
mov
mov
inc
enter
fucomip
xor
jp
push
jmp
rol
int3
pushf
jnp
pop
repnz
cmpb
push
loop
dec
cs
pop
dec
int3
dec
sarb
pop
mov
push
dec
fnstenv
hlt
out
das
cmp
push
loope
pop
lret
popf
jno
mov
data16
hlt
add
xchg
es
jo
rcr
jnp
push
jb,pt
and
jbe
mov
jmp
push
out
iret
pop
and
adc
leave
dec
xchg
and
fsubrl
in
add
jno
dec
or
es
test
stc
aaa
into
lret
push
enter
test
add
ret
mov
std
push
lea
sbbb
push
aam
cmp
clc
rcrl
mov
pop
sbbl
sahf
jle
jp
roll
call
add
sbb
ret
xchg
mov
adc
aad
lea
adc
or
jne
mov
or
adc
loop
mov
jbe
insl
shll
loopne
nop
mov
jmp
mov
stos
testl
subl
xchg
pop
fwait
jne
stos
adc
fwait
stos
sbb
mov
xchg
xchg
insb
xchg
mov
xchg
dec
xor
bound
outsb
fisubrl
insb
sub
loopne
sub
lahf
xor
cmp
orl
xchg
mov
mov
cmp
test
test
sub
aad
push
xchg
mov
mov
push
mov
cmovns
push
push
mov
stc
aam
mov
jmp
in
fsubrl
popf
popl
xchg
mov
mov
mov
outsb
mov
or
icebp
into
es
cmpsl
xchg
mov
xchg
jmp
pop
push
loop
bound
add
mov
xlat
into
mov
call
ret
sbb
inc
xchg
or
or
push
dec
pop
aad
sbb
dec
sbb
and
push
mov
insl
adc
add
je
push
iret
mov
aaa
add
out
mov
stos
inc
xor
mov
pusha
lahf
push
mov
or
test
sbb
lds
jecxz
sub
xchg
fdivr
lret
adc
int3
adcl
or
cwtl
bound
mov
adc
aam
dec
roll
xchg
jb
xor
inc
dec
or
sbb
jp
outsb
adc
int3
repz
stos
int3
fists
mov
xor
movsb
lcall
loopne
jno
nop
call
mov
mov
icebp
fdivrs
lcall
pop
mov
push
lea
cltd
xor
pop
cmp
mov
and
mov
enter
int
enter
and
pop
dec
cs
mov
test
fmull
cs
shll
inc
inc
fadds
or
ljmp
pop
or
dec
cmp
inc
sub
mov
movsb
fmuls
push
sub
inc
mov
mov
in
daa
int3
popa
dec
xchg
enter
sub
pop
cmp
inc
dec
in
sub
xchg
jp
push
jge
sub
pop
push
mov
pop
mov
or
loope
hlt
xor
ret
cmc
cmpsb
int
sbb
inc
loopne
mov
bound
xchg
fcompl
dec
cmpsb
xchg
mov
mov
lahf
loopne
add
lcall
mov
test
adc
push
or
sbb
fbld
fbstp
inc
xchg
sbb
test
xor
jge
pop
fists
sub
jns
jecxz
pop
aas
mov
insb
js
jge
sar
pop
lea
sbb
aam
jae
movsb
into
mov
insb
adc
ja
jb
repz
popa
add
mov
push
rorl
fnstenv
mov
adc
dec
sub
es
ret
clc
push
push
sub
dec
scas
sbb
adc
mov
jne
inc
pop
cmp
fldenv
pop
adc
mov
jno
pop
movsl
insl
push
lea
rcll
xor
sbb
ret
mov
imul
inc
imul
sbb
test
inc
clc
cmp
add
loope
pop
xchg
pop
or
adc
adc
mov
add
mov
loope
je
aad
nop
mov
pop
sbb
push
mov
push
fcomp
arpl
lahf
jns,pt
mov
pop
inc
jp
incl
mov
fbstp
xor
lcall
ret
dec
add
cltd
mov
or
and
mov
xor
in
adc
daa
rolb
pop
int
dec
subb
and
hlt
sub
pop
flds
adc
pop
aaa
pusha
xor
fs
inc
int
xor
mov
push
push
cltd
dec
fidivrs
repz
jnp
mov
sbb
xchg
mov
xchg
test
mov
lret
mov
inc
shl
ja
or
sub
lds
cmp
loope
fcoml
jecxz
dec
xchg
jmp
or
popa
mov
jbe
xchg
out
outsl
aas
les
adcb
lret
rep
in
dec
sub
and
xor
mov
cmp
push
dec
mov
adcl
pop
lret
push
sbb
jmp
mov
sahf
and
cld
imul
mov
jb
lret
in
push
mov
add
mov
and
push
cwtl
add
mov
lcall
std
mulb
xchg
xor
aaa
insl
fmull
out
inc
aad
mov
cmp
add
xor
pop
mov
call
jecxz
jp
inc
jno
out
xchg
mov
lock
int
icebp
xchg
sti
enter
aad
mov
mov
adc
mov
push
push
inc
fsts
xor
adc
mov
and
cmpsl
mov
xchg
test
cmp
popa
xor
mov
rorb
jbe
fisubs
dec
dec
mov
cmpsb
pop
sbb
repnz
cli
int3
mov
adc
xchg
leave
pop
test
adc
rcl
insl
mov
xor
adc
out
subb
lret
jb
daa
jle
or
pop
out
cmpsl
jno
sbb
sub
pop
imul
jb
fdivp
or
and
sbb
inc
mov
movsl
adc
out
movsl
cwtl
cli
das
xor
ret
nop
mov
mull
pop
xchg
dec
clc
mov
insl
sti
ja
lods
sbb
jp
fisttps
cwtl
test
pop
aaa
mov
cmc
jmp
stc
mov
sbb
pop
mov
inc
sub
add
cli
push
test
dec
dec
sarl
out
adc
fsubrl
xor
or
sbb
gs
addb
pop
fnstsw
pusha
push
aaa
sarl
scas
xor
ja
or
dec
adc
cld
stos
stos
fs
je
dec
sub
call
ja
xor
sbb
xchg
sbb
cmc
incb
adc
inc
jmp
mov
and
mov
adc
inc
mov
pushf
hlt
ja
mov
daa
and
sub
push
shl
dec
pop
sbb
mov
stos
repnz
pop
loop
loop
enter
inc
bound
insb
fs
rcll
dec
xor
push
pusha
or
cmc
popa
sahf
test
cmc
push
fcmovb
mov
jns
hlt
or
pop
scas
cld
jb
sarb
or
in
xchg
popf
jne
jecxz
push
adc
test
or
pop
mov
xor
add
add
xchg
sahf
setae
test
adc
inc
popf
adc
imul
push
cmc
rolb
add
mov
adc
add
xor
mov
scas
push
inc
cmpb
xchg
cmp
ret
imul
inc
cmpsl
dec
sbb
add
mov
out
and
cmpb
push
icebp
inc
push
mov
out
xchg
popa
pushf
sahf
xor
mov
mov
and
lock
aaa
pop
movsb
addr16
cmc
stc
aam
and
cli
cmc
cmp
or
lcall
xlat
dec
xchg
xchg
cmc
hlt
ljmp
mov
lret
pop
inc
cmpsl
test
je
adc
mov
scas
inc
cmp
dec
pop
mov
repz
sub
adc
out
add
ss
repnz
mov
sti
jbe
cmp
inc
dec
xchg
das
adc
cli
mov
mov
ljmp
add
pop
jnp
rorl
push
add
shr
xchg
adc
notb
test
lods
mov
add
test
xchg
xor
dec
cs
dec
push
sub
inc
cmc
loopne
loope
xor
mov
adc
push
cmp
pushf
pop
push
mov
sbb
jle
out
scas
faddl
and
cmp
or
jge
in
lahf
das
movsb
pop
add
push
sahf
mov
push
xlat
sub
ret
dec
aaa
outsl
fildl
push
sub
lcall
xchg
pop
xor
jns
fs
xchg
and
imul
test
mov
scas
push
inc
idivl
xchg
push
loopne
jg
je
into
je
mov
shll
push
jns
imul
inc
xorb
pop
lods
scas
in
dec
cs
cmp
jae
in
mov
mov
adc
lcall
pop
out
in
ret
lret
arpl
xchg
fisubrs
xor
fistpl
loop
fildl
fstpt
xor
adc
fistps
or
inc
push
pushf
outsl
lods
fisubl
fidivrl
lods
fadds
cmp
push
in
imul
and
add
sbb
mov
adc
cs
adc
cmp
lret
push
lret
pop
les
cmpsb
fstpt
mov
mov
clc
jne
imul
notb
push
sub
mov
xor
dec
shll
xor
scas
iret
cmp
adc
jle
fnsave
dec
pop
clc
lret
xchg
and
sub
lahf
out
lcall
mov
cmp
test
pop
push
inc
mov
or
fidivl
pop
loopne
jp
out
and
out
fildll
insl
mov
adc
sub
popa
movsl
imul
jb
call
jnp
mov
ja
arpl
xchg
fs
shll
add
shll
std
jmp
addr16
xchg
mov
sbb
mulb
mov
sub
ficomps
es
push
mov
insb
sub
fucomip
adc
jge
scas
sbb
mov
std
pop
lock
int3
ret
add
sub
inc
sub
out
mov
inc
inc
mov
lods
fnstcw
adc
push
mov
and
repz
mov
xchg
sub
repz
mov
movsb
xor
dec
jecxz
test
sahf
or
mov
lcall
dec
rcll
jno
fstpt
adc
mov
in
mov
lock
pop
mov
in
data16
loope
andb
cmp
sti
push
dec
adc
push
cmp
je
fnstsw
mov
test
mov
xor
iret
xor
ljmp
mov
int3
addr16
lcall
and
in
xchg
fimull
mov
dec
addb
pop
xchg
notl
and
cmp
mov
xchg
and
dec
lds
clc
stc
pop
inc
lea
fnstsw
adc
hlt
scas
scas
arpl
jmp
rol
in
insl
cmp
lods
jns
daa
movsb
lahf
push
pop
sub
cmp
jno
jns
repz
dec
sbb
mov
inc
cmp
daa
popf
sub
movsl
cmp
dec
mov
mov
adc
int
pop
sbb
jle
xchg
mov
rcrl
add
js
imul
jnp
pop
mov
jmp
and
inc
cmp
push
xor
sub
shl
imul
sbb
mov
lods
xchg
aad
loope
fldt
add
xorb
and
in
jp
inc
cwtl
mov
push
lret
push
jne
loopne
fcmovnb
pushf
mov
sbb
xchg
xchg
aam
pop
cmp
rcll
mov
push
or
repnz
aaa
aas
sub
cmp
jns
fs
rolb
in
aad
jmp
xchg
xlat
fists
and
cmp
fwait
jbe
mov
xor
test
fmul
jp
inc
cld
xor
psrlw
xor
cmp
push
cltd
fstps
int
add
mov
lahf
adc
mov
addps
xor
inc
push
clc
pop
adc
cld
loopne
jmp
jns
stos
sub
add
loopne
inc
aad
pop
dec
mov
lret
lcall
daa
mov
xchg
cltd
mov
jl
and
sub
enter
cmp
mov
jbe
out
data16
sbb
je
in
xor
hlt
xchg
dec
ret
pop
addr16
fs
in
in
fwait
std
and
nop
cltd
bound
mov
imul
test
sbb
dec
int3
fidivrl
das
ret
sub
sub
or
xchg
pop
inc
jno
and
hlt
gs
adc
in
lods
mov
imul
subb
iret
fdiv
aad
xchg
negl
cmp
mov
adc
inc
test
pop
sbb
test
inc
sub
loopne
xchg
daa
xor
cmpsl
sbb
iret
insl
sbb
scas
sub
cmp
or
inc
int
xchg
and
test
jne
cmp
pop
gs
add
xchg
xchg
js
nop
jmp
push
pop
imul
add
jnp
xchg
mov
xor
sub
jne
das
jno
popf
or
xchg
lea
out
jae
cwtl
dec
mov
dec
int
rcll
xchg
dec
shl
loop
daa
lds
xchg
cmc
sarl
testl
and
jl
inc
inc
push
mov
out
cmp
loop
dec
mov
cmp
mov
aad
add
sahf
daa
cs
push
lea
imul
mov
lds
mov
ret
bound
or
aaa
and
notb
lea
jo
pop
mov
out
lods
mov
mov
ss
movsb
cmpsl
outsl
cmp
and
xchg
sbb
inc
je
add
jge
pop
movb
cmp
pop
fsubrs
xor
dec
clc
push
mov
or
push
jecxz
bound
add
mov
imul
addr16
or
sub
mov
mov
dec
mov
lods
aaa
pop
shll
sti
rcr
push
push
popf
sbb
mov
outsb
mov
cmp
mov
cmp
daa
push
leave
lock
inc
in
sti
mov
push
pushl
cmp
adc
sbb
mov
clc
test
or
pushf
adc
gs
add
dec
xchg
pop
cmp
lahf
mov
jmp
mov
adc
or
repz
mov
xlat
mov
adc
sbb
outsl
aad
or
sti
test
mov
iret
jg
sbb
sbb
mov
outsl
xchg
and
loop
fisubrs
jle
push
fwait
shlb
cld
push
mov
sub
xor
mov
mov
pop
mov
enter
xor
dec
imul
xchg
and
test
leave
mov
mov
ljmp
int3
mov
insl
cmp
mov
rolb
lret
add
mov
stc
xchg
sub
sub
out
inc
das
lods
pop
xchg
iret
cmp
mov
mov
orl
in
add
fcmovnbe
rcll
mov
in
jmp
out
rcll
test
or
adcb
xor
fistpll
jg
repz
push
mov
cld
or
scas
cmp
sub
pop
sbb
cmp
sbb
fwait
nop
lret
cmp
int3
fsubr
and
adc
sbb
shll
xchg
and
jle
xchg
addl
and
mov
push
das
fists
imul
repz
stos
cmp
adc
and
jns
sub
rorb
and
cld
xchg
mov
pop
ret
insb
in
outsb
out
sub
repz
xchg
lret
xor
adc
cwtl
lret
add
or
ss
pop
adc
outsl
bound
stos
ret
shl
xlat
push
sarb
rolb
jge
lock
imul
stc
negl
ficompl
out
jo
dec
fists
mov
lret
jp
cmpsl
dec
dec
push
mov
ljmp
pop
push
daa
movsb
jo
xor
xchg
outsb
jp
sti
bound
insl
xchg
aam
fisubrl
dec
sbb
clc
mov
das
mov
mov
ds
adc
push
push
mov
es
das
dec
sbb
mov
dec
or
mov
cmp
cwtl
xchg
rcll
das
inc
or
lds
inc
dec
xor
sbb
lods
not
mov
aam
sarl
and
data16
add
iret
and
dec
push
cli
popl
xchg
pop
and
xchg
push
lea
adc
mov
lret
push
xor
daa
in
sub
cwtl
dec
iret
loop
pop
sbb
jbe
orb
std
jl
out
popa
and
mov
movsb
xchg
jne
leave
and
js
xchg
jge
iret
repnz
jne
jecxz
cld
out
imul
mov
push
mov
cmc
shrl
aaa
mov
push
inc
and
inc
repnz
push
mov
cmp
push
rorl
xchg
fdivrs
pop
push
and
or
cmp
cmpsl
lahf
aaa
jne
or
and
inc
and
stos
sbb
addr16
sti
je
pop
jae
mov
test
test
xor
and
sbbl
cmp
ljmp
pop
popf
dec
xchg
or
push
int3
xor
stos
clc
jae
out
out
cmpsl
loop
mov
lret
jg
sbb
loop
mov
pop
clc
dec
outsl
push
xchg
outsl
divl
nop
ja
mov
mov
sub
add
pop
enter
call
clc
xchg
in
dec
push
imull
ja
push
gs
out
out
stos
lcall
and
subl
arpl
aaa
aaa
mov
push
inc
fildll
pop
inc
mov
or
int3
mov
inc
sysret
scas
jnp
call
outsb
cltd
insb
shlb
xor
jnp
add
fsubrs
lods
imul
pop
bnd
cmp
inc
ljmp
push
gs
xor
arpl
add
or
add
dec
add
das
pop
jmp
cmp
lds
cli
mov
jo
or
inc
enterw
pop
pusha
xchg
mov
scas
push
outsb
lret
jp
iret
scas
in
test
mov
in
cmp
cmpsb
push
movsl
jmp
cmp
stos
adc
adc
push
call
cmp
addr16
sub
mov
repnz
pop
pop
jmp
popa
test
push
pop
lcall
mov
jbe
rcr
add
cltd
mov
mov
dec
and
loope
fnsave
dec
repz
jo
jno
iret
gs
icebp
sub
add
xchg
test
lret
or
add
sbb
imul
cmpsb
add
stc
dec
cmp
or
shr
fisttps
out
dec
lds
fbstp
popa
sahf
daa
jne
xlat
cltd
push
mov
fiadds
sub
jae
pusha
out
push
fdivs
xchg
cld
icebp
mov
push
push
pop
xchg
cld
cmp
es
pop
mov
or
jno
mov
fs
aaa
mov
lock
stos
lret
mov
fwait
cs
push
pop
cmpsb
add
cli
mov
mov
js
aad
lcall
push
pcmpgtw
rcl
xlat
cli
ret
aaa
add
cmp
mov
and
popa
inc
repz
mov
outsb
in
es
xchg
jb
mov
mov
mov
in
adc
pop
inc
dec
xor
repnz
test
lods
xchg
ja
sbb
lret
push
xchg
roll
in
xor
push
push
stos
fwait
pop
pop
jns
faddl
pop
and
adc
dec
sbb
sbb
popf
mov
cmc
inc
test
xchg
ljmp
mov
ja
adc
repnz
or
pop
in
xchg
imul
inc
sbb
mov
cmp
ret
jae
inc
pushf
movl
lahf
mov
ret
mulb
fnstcw
mov
pop
sahf
add
aas
test
adc
inc
je
ret
fneni(8087
je
hlt
pop
iret
sbb
in
lds
dec
cmp
iret
push
pop
jns
insb
dec
pusha
jp
dec
sub
jnp
inc
fistpll
insl
xor
gs
inc
nopl
mov
cld
ljmp
inc
cmp
add
and
jnp
cmp
cmpsl
in
jle
sub
push
andl
insb
sub
sbb
mov
repz
dec
shlb
lcall
sbb
sbb
inc
cmc
fadd
xchg
aad
pop
out
sti
mov
loop
stc
jp
or
mov
leave
sub
in
aad
push
repnz
pop
jo
xchg
adc
mov
adc
or
add
popa
mov
iret
dec
dec
in
adcl
cmpsl
inc
aaa
sbb
jl
imul
rcrl
and
shr
sbb
loop
sbb
dec
mov
stos
ret
mov
test
and
divl
sbb
xchg
cli
movsl
dec
in
sbb
push
mov
cmc
add
add
mov
mov
jg
mov
negl
repz
lahf
scas
andb
insb
sbb
mov
sub
dec
or
mov
or
xchg
or
push
fiadds
jnp
incb
scas
mov
repz
movsb
mov
es
addr16
scas
cmp
and
mov
push
xchg
mov
jecxz
inc
out
pop
fs
mov
daa
decl
loope
cmpsl
shlb
and
adc
mov
push
ret
jb
into
adc
cwtl
sbb
xlat
hlt
jmp
js
add
fdivrs
mov
push
adc
mov
dec
out
pushf
jne
aas
fildl
psubb
test
mov
rclb
cs
mov
pop
lcall
inc
mov
push
stos
dec
data16
push
test
dec
mov
leave
clc
jl
pop
lahf
sbb
pop
push
xchg
inc
mov
js
out
test
in
mov
scas
jno
jl
outsl
adc
test
imul
xchg
in
jle
sti
push
repz
cmp
out
sub
or
xchg
sarb
insb
xorb
idiv
cwtl
sbb
je
das
hlt
popa
fadd
adc
int
mov
loope
push
fnstsw
lret
dec
xchg
ret
out
pop
cmp
and
fisubrl
icebp
out
push
and
aad
daa
ret
pop
into
jge
stos
imul
mov
inc
xor
xchg
mov
inc
xchg
xchg
out
rolb
mov
stc
mov
lea
sub
in
mov
mov
iret
ljmp
inc
fdivl
in
ret
test
test
loop
mov
push
push
ljmp
dec
enter
lods
ret
push
pushf
add
cs
icebp
lds
ja
jmp
push
cmpsl
lea
shrl
lods
fcoml
mov
xchg
call
dec
and
insb
int3
push
jo
inc
fs
iret
pop
adc
outsl
cmp
jg
aam
push
pop
repnz
scas
aas
outsb
enter
or
repnz
jmp
jno
pop
test
lret
mov
adc
xor
xchg
out
stos
push
and
jo
sub
xchg
lods
repz
mov
mov
ljmp
outsb
dec
xor
push
fwait
aad
mov
jle
pop
and
not
jo
cmp
and
mov
aam
rorb
sbb
cmpsb
test
aaa
or
jne
sub
cltd
xchg
xor
aad
rorb
adc
push
ja
int3
push
test
dec
push
xchg
int
mov
pushl
pushl
mov
push
ds
repnz
lea
cmpsl
pop
or
mov
cmpsb
fdivr
jg
adc
inc
xor
pop
out
cmc
pusha
test
in
sub
add
and
jp
adc
mov
add
jecxz
int
int3
cmp
fstpl
mov
data16
jp
shrb
rol
sbb
add
push
dec
dec
nop
cmp
xchg
dec
push
mov
jne
sbb
pop
mov
mov
pusha
iret
call
ficoml
lock
cmp
xchg
lcall
es
sub
ret
jnp
mov
popa
or
cld
and
jno
sub
and
les
loopne
loope
sbbb
sahf
fsubl
fdivr
dec
inc
leave
add
outsb
das
out
fisubrs
std
dec
cmc
rorl
imul
xlat
pop
std
xor
inc
inc
aam
push
xchg
movsb
lds
inc
pop
ret
cmp
lods
sbb
cli
xchg
dec
or
mov
les
ss
xchg
jmp
loopne
lods
jno
popa
aam
cmp
or
cmp
pop
std
cwtl
mov
push
das
mov
cmc
cltd
les
pusha
idiv
pop
lods
sub
add
data16
js
inc
xor
lds
jb
mov
and
in
hlt
mov
out
icebp
or
data16
pushf
in
adc
xor
in
dec
xchg
xor
cs
jmp
ja
stos
in
add
fcomps
ret
and
pusha
cli
int
sub
dec
lock
leave
call
mov
push
or
data16
pop
push
mov
inc
sub
and
daa
mov
dec
or
and
addb
in
mov
inc
sub
xchg
sbb
insb
fisubl
jne
or
inc
data16
cmc
pop
in
mov
pop
out
push
mov
lcall
mov
adc
inc
adc
push
dec
popf
movsl
mov
idivl
call
dec
in
push
inc
pop
mov
or
inc
sbb
enter
push
int
loopne
lock
fs
lcall
xchg
add
sub
aam
push
pop
daa
stc
loop
pop
test
mov
shlb
add
icebp
or
add
mov
loop
aad
xor
mov
inc
fiaddl
mov
out
pop
xor
sub
adcl
and
cli
aaa
push
jno
cmpsl
adc
adc
push
sub
mov
cmp
into
push
lcall
xchg
push
mov
dec
sbb
pop
cmpsl
jle
sub
psadbw
movsl
pinsrw
lret
push
inc
pop
cmp
jmp
mov
aaa
add
outsl
mov
in
pop
cmp
mov
jmp
sti
lock
dec
hlt
icebp
ds
push
jl
jne
imull
dec
or
sbb
shl
push
jmp
sbb
scas
cs
dec
nop
mov
jnp
andb
pop
push
out
aas
jecxz
cs
lea
add
aad
out
pop
sbb
rcll
test
cmpsl
pop
or
jb
idivl
and
rorb
pusha
and
mov
loope
mov
mov
rcrl
ljmp
xlat
dec
les
jbe
sbb
subb
loopne
push
push
mov
jns
mov
in
adc
ss
lods
push
push
fcomps
mov
jmp
ja,pn
inc
sub
pop
inc
sub
mov
iret
and
stc
inc
add
and
dec
arpl
std
aas
mov
and
mov
adc
movsb
pusha
les
xchg
cmp
int3
xchg
in
jo
mov
jb
pop
dec
data16
add
sub
cwtl
ljmp
test
clc
cs
repnz
lret
sar
mov
or
dec
hlt
mov
out
xor
and
mov
not
in
sub
xchg
sbb
adc
cmp
sbb
push
in
rcll
outsb
mov
dec
push
loop
movsl
ss
pop
adc
and
push
mov
cltd
shlb
mov
ret
sub
decl
addl
cmp
ret
call
jo
imul
jecxz
sub
sub
jno
test
jecxz
lret
or
add
add
pop
dec
stos
outsl
std
std
pop
inc
jb
xor
pop
fmull
hlt
xchg
frstor
imul
pop
inc
add
adc
scas
cwtl
push
and
push
jp
xor
jae
pop
fs
cmp
mov
mov
jp
push
mov
dec
xor
repz
andb
xor
stos
mov
out
xor
aad
mov
stc
enter
iret
mov
push
jmp
pop
cld
add
imul
fsubrl
mov
mov
movsl
add
pusha
mov
out
jns
loopne
pop
ds
mov
pop
scas
or
jl
and
cmpsl
lret
dec
movsl
push
dec
or
aas
stc
sbb
mov
scas
shlb
pop
mov
loope
add
add
int3
loopne
sub
hlt
lods
aam
sub
lods
sbb
dec
push
push
aas
mov
jne
xor
mov
jo
cmp
dec
sahf
ja
cld
dec
pop
pop
mov
clc
xlat
jno
or
cwtl
xchg
mov
inc
pusha
cli
movsl
and
adc
mov
xchg
test
adc
cmpsl
rorl
add
clc
jle
mov
out
mov
test
push
inc
push
and
add
loope
xchg
mov
pop
dec
or
fwait
jno
pop
inc
sbb
sbb
aaa
push
cli
insb
jno
dec
mov
cmpl
dec
testl
sub
xor
dec
je
hlt
mov
movsb
and
repz
mov
jb
xlat
sbb
mov
std
movb
lret
push
push
aam
scas
push
int3
stc
mov
sub
repnz
sti
jb
sub
imul
pop
push
push
adc
mov
int
pop
dec
fst
filds
sub
test
push
and
aam
insl
jecxz
xchg
push
pop
and
xor
addr16
inc
aam
rcrl
inc
and
push
int3
ds
and
sub
jns
pop
push
hlt
in
sbb
aas
sub
push
inc
ret
xchg
popf
test
stos
mov
inc
cmp
shlw
fcoml
orb
jp
sub
jns
mov
mov
push
movd
ret
pop
repz
cmpsb
add
and
mov
sub
jne
pushf
inc
cwtl
out
rolb
test
int
ficomps
stc
sahf
jg
insb
push
mov
mov
shrb
arpl
js
mov
loope
jno
testb
adc
pop
adc
mov
mov
ret
xor
fwait
jmp
icebp
xor
stc
mov
sbb
scas
out
shll
stos
in
movb
and
dec
xchg
leave
and
jb
push
adc
inc
mov
das
mov
nop
push
in
test
adc
or
sbb
push
sbb
pusha
and
shr
add
adc
xchg
repnz
in
lods
fstl
mov
call
mov
mov
pusha
cltd
stos
sbb
sub
inc
fdiv
add
pop
loopne
nop
shl
mov
insl
sbb
xchg
pop
repnz
xor
push
jg
inc
inc
xor
fnstsw
inc
pushf
aad
jge
in
adc
xchg
mov
mov
mov
inc
inc
test
mov
loop
xor
std
stc
add
xchg
push
push
fwait
pop
lea
dec
imull
adc
dec
pop
stos
pusha
adc
xchg
adc
and
sub
and
ja
imul
add
insl
jbe
pop
jmp
mull
rcll
aam
js
lahf
in
xor
int3
lds
out
or
add
es
xchg
and
aas
sbb
scas
mov
jmp
mov
int3
cmp
jo
sub
xchg
xchg
cmp
and
add
outsl
hlt
js
push
pop
push
loopne
and
test
lock
xchg
cmp
hlt
lock
jne
aam
mov
inc
sub
sub
xchg
outsl
notl
mov
mov
lret
js
sti
aad
xor
xchg
mov
add
jno
cli
sub
ds
clc
adcb
sub
aas
insl
push
jl
js
dec
aaa
sbb
mov
out
jecxz
mov
dec
mov
pop
add
cmp
add
ret
int
pusha
mov
add
int
mov
lock
lcall
mull
cmpsl
inc
mov
adc
jbe
shl
pop
xchg
mov
fistpll
mov
cs
popf
std
stos
dec
xor
jl
mov
js
bound
cwtl
and
imul
xchg
outsl
xor
stos
mov
mov
out
mov
mov
inc
mov
movsb
mov
pop
or
xchg
orb
rol
dec
pusha
mov
hlt
call
sbb
inc
ja
lcall
dec
add
mov
stc
pop
mov
cld
test
xchg
xor
jecxz
and
fcoms
leave
xor
aad
scas
je
lret
add
pop
lods
shlb
dec
mov
je
pop
or
push
add
jecxz
loope
mov
jl
mov
mov
andb
shll
int
rclb
inc
mov
adc
ljmp
fcmovnbe
cld
pushf
mov
inc
inc
pusha
pop
setae
lret
jno
in
mov
and
or
jecxz
and
inc
sbb
scas
mov
xor
out
mov
or
fisttpll
imul
xchg
fmuls
and
shll
pop
adc
add
pop
or
ret
xor
cmp
jp
dec
leave
push
lods
aas
xchg
push
jno
lock
jg
inc
adc
or
enter
mov
adc
movsl
addr16
fcmovne
pop
mov
in
xor
jmp
xor
call
lcall
repz
mov
clc
xchg
clc
outsb
ss
in
push
shll
mov
push
jmp
fldenv
or
mov
fmulp
jo
and
ret
adc
adc
mov
mov
popl
mov
mov
mov
sbb
lret
data16
mov
dec
dec
mov
cmp
adc
dec
fsts
rcll
mov
imul
xchg
xor
lods
sysenter
or
cmc
cmpsl
movsl
ja
sbb
das
sbb
arpl
loope
push
dec
lcall
or
ficoms
xchg
addr16
jnp
pop
push
pop
sbb
lea
sbb
aam
in
xor
dec
dec
jecxz
pop
push
addr16
mov
dec
and
test
sbb
jl
cmpsb
lds
outsb
and
mov
cmp
sti
pop
lods
fprem1
mov
mov
sbb
jns
pop
jmp
or
lcall
test
inc
call
sub
cmp
imul
scas
mov
dec
les
jle
aaa
in
out
add
inc
jl
sbb
lods
in
or
xchg
xor
mov
scas
mov
imul
test
insb
cmp
cmpsl
xchg
xchg
in
mov
sub
pop
xchg
mov
int
xchg
inc
or
xchg
push
mov
sub
pop
pop
lods
mov
inc
or
fsub
xchg
cmp
xchg
stc
mov
xor
cwtl
push
mov
or
dec
cmp
data16
or
test
jno
inc
xorb
xchg
xchg
out
out
pushf
movsb
jns
das
pop
lret
push
push
sbb
mov
or
sub
outsb
sti
or
xor
lret
push
shrl
mov
adc
mov
stos
fildl
popa
xchg
xor
push
xchg
inc
fs
shll
fdivrs
lods
pop
repz
daa
xor
xor
scas
test
adc
mov
xlat
int3
lcall
jb
ret
add
cmpsl
push
scas
xor
pop
push
inc
lds
xor
outsb
stc
cwtl
adc
xor
and
insl
mov
jbe
adc
push
gs
xor
movsl
out
and
jmp
jle
mov
mov
xchg
jmp
in
push
fsubrl
pop
scas
int
lret
xchg
imul
pop
and
into
loope
xorb
out
into
test
movsl
mov
into
xchg
shlb
mov
into
mov
or
lods
inc
fs
dec
into
and
es
ret
pop
mov
out
sub
sub
sub
jnp
insb
mov
sub
and
rorl
into
mov
ret
mov
xlat
fmuls
popf
jo
andl
add
mov
xor
jbe
xchg
roll
arpl
or
mov
push
mov
rcrb
sti
mov
arpl
sbb
add
insb
xchg
adc
out
jno
jns
push
mov
fnsave
adc
loopne
aad
stos
dec
pop
xchg
mov
pushf
es
cmc
mov
mov
in
pop
fsubl
mulb
jnp
sub
daa
sti
xor
pop
cmp
test
std
scas
lcall
in
loope
lahf
jp
xchg
jnp
dec
pop
testl
mov
inc
pop
push
pop
push
mov
sahf
jmp
lock
cmp
jbe
adc
xchg
idivl
dec
push
test
jmp
sarl
fs
insl
mov
fmull
pop
cmp
inc
push
pop
or
xchg
xor
mov
rclb
push
popf
mov
in
out
pushl
push
sbb
or
mov
daa
shrl
add
jmp
cmp
pop
sbb
pop
and
shlb
dec
test
or
sub
loopne
leave
lds
imul
shlb
dec
or
sbb
fcmovnu
dec
in
dec
mov
ficoml
aad
pop
fwait
or
push
imul
mov
pop
cmp
lods
test
loopne
sub
dec
bound
sbb
jb
popl
test
mov
and
sub
fldl
sahf
sbb
clc
icebp
pop
inc
lea
push
or
or
push
jno
add
add
rolb
pop
popf
jl
and
out
ljmp
xlat
cmpsl
imul
scas
xchg
add
clc
scas
jns
std
jmp
aad
sub
fimuls
pushf
mov
inc
mov
test
xchg
mov
mov
add
inc
std
js
xor
xchg
jbe
fwait
sbb
adc
push
inc
lods
iret
cld
loop
loopne
cmpsl
fs
jp
scas
scas
and
adc
push
shll
sub
loopne
cmp
xchg
jl
aad
repz
mov
mov
inc
out
push
sar
mov
es
ret
data16
sub
and
adcb
bound
inc
mov
mulb
jge
add
das
sub
iret
roll
fidivrs
stos
inc
xor
test
sti
mov
xchg
jns
shll
sbb
ss
or
shlb
sub
sbb
xor
enter
or
bound
out
mov
arpl
mov
xchg
nop
push
dec
mov
inc
adc
mov
mov
or
sub
dec
pop
inc
lods
jecxz
fisubrl
cli
insb
mov
popf
cmp
sub
aaa
imul
push
xchg
push
pop
pop
mov
lea
cmpsl
add
xchg
lcall
stos
dec
mov
fstpt
inc
xchg
push
add
add
lret
mov
fistpll
adc
mov
shrb
jle
into
cmp
xchg
scas
mov
orb
shll
cmp
dec
out
inc
in
push
mov
jbe
mov
data16
inc
dec
xchg
inc
or
mov
inc
lods
mov
rol
mov
sub
rorb
and
mov
lock
lea
or
pop
mov
xor
push
aam
fstpl
jnp
or
adc
jbe
mov
sbb
jg
push
testb
inc
std
mov
pop
inc
xor
pop
adc
push
add
fstpl
jl
fimull
data16
mov
push
cmp
pop
jmp
mov
cmc
push
dec
push
sub
xchg
jg
dec
xor
xor
sahf
inc
in
aam
sub
call
mov
cmpsl
ret
outsl
in
in
lods
push
sub
movsb
arpl
loop
jb
cmp
jae
in
inc
jmp
lea
push
out
dec
clc
or
je
push
lea
out
xor
sti
pop
adc
std
xor
cmovnp
mov
mov
and
fs
sub
movsb
push
mov
fists
mov
rorl
das
xchg
and
ja
or
scas
xchg
fnstsw
sub
cmp
inc
pop
sahf
out
adc
loope
int
xor
push
xchg
inc
dec
mov
cmp
shll
adc
addr16
clc
xchg
gs
fildl
pushf
xchg
xchg
adc
dec
mov
pop
fdivrl
jp
das
adc
mov
dec
cmp
insl
lods
mov
out
dec
imul
dec
test
loop
out
repz
jbe
adc
fsubr
scas
mov
ljmp
ficompl
xchg
addr16
mov
push
loop
push
cmc
inc
jmp
sub
mov
repz
dec
dec
nop
pop
inc
jge
mov
adc
mov
pop
dec
gs
rcll
sub
jnp
xchg
push
push
mov
popa
push
xchg
in
push
jbe
cmp
dec
lahf
add
inc
arpl
in
loopne
imul
and
mov
addb
jl
sbb
xchg
cmp
sarb
repz
cmpsb
scas
movsb
mov
jle
jmp
sbb
dec
lock
into
movsl
xchg
push
pop
add
dec
mov
cmp
mov
test
cs
jo
or
push
lcall
push
in
gs
push
out
inc
mov
jmp
xor
add
mov
jmp
jb
sbb
aas
rcll
out
mov
ret
gs
or
mov
rcrl
mov
fnstenv
and
dec
jg
mov
sub
or
sub
xchg
pop
inc
xlat
arpl
imul
pop
jbe
pop
sbb
int
mov
push
xchg
arpl
hlt
xchg
insl
adc
sarl
sub
dec
call
inc
and
push
insb
xor
xchg
imul
pop
inc
xor
popf
loopne
scas
or
sbb
mov
mov
xlat
repnz
call
lret
loopne
sub
dec
push
gs
in
lahf
imul
mov
hlt
cltd
push
dec
fwait
mov
mov
stos
jno
push
cwtl
mov
fdivp
dec
add
test
popa
mov
in
or
xchg
lods
or
pop
mov
repnz
mov
subb
sbb
xlat
xchg
scas
adc
mov
ljmp
scas
into
aaa
jbe
jbe
into
cli
pop
das
hlt
xor
cwtl
pop
inc
pop
cmpsl
outsb
xchg
sbb
and
push
lret
imul
dec
xchg
cli
xor
leave
inc
mov
mov
addb
rorl
jecxz
sti
push
outsl
sub
adc
add
adc
loopne
adc
mov
test
cmp
rcl
pop
mov
in
repnz
shll
sti
je
jo
repz
pushf
cwtl
xor
ret
pop
xor
pop
inc
iret
jmp
stos
or
jnp
xchg
push
pop
test
leave
sub
ret
call
jno
or
pop
lods
insb
sahf
dec
dec
cmp
or
shrb
loopew,pn
cmp
les
xchg
fnsave
mov
pop
jg
mov
xchg
gs
and
mov
mov
mov
enter
sahf
push
stc
fnstsw
rcll
cmp
dec
push
stos
cmp
adcl
aam
dec
or
push
inc
mov
divl
cwtl
or
push
mov
dec
mov
pop
push
inc
andb
mov
dec
roll
cmpsl
adc
incl
lea
cltd
mov
pop
aas
test
pop
xchg
sahf
cwtl
mov
mov
lods
sti
dec
sbb
ror
fnstcw
add
int3
int3
sbb
push
push
jmp
icebp
mov
icebp
mov
fcoms
out
cltd
daa
das
lahf
lods
fs
sti
rcrb
dec
out
sbb
test
das
mov
adc
push
fidivs
sbb
fcom
fwait
jmp
mov
pop
mov
les
and
sub
out
cltd
mov
cmp
repnz
es
loop
dec
rol
pusha
dec
xor
ret
jg
dec
dec
addr16
insl
call
fimull
cmp
repz
aas
rcll
pop
sbb
jns
pop
or
add
test
cmp
fwait
nop
mov
and
aam
jne
out
and
and
aad
shlb
or
sub
inc
add
enter
das
outsl
out
int
inc
arpl
xchg
fsubrl
std
inc
sti
xor
hlt
fdivrl
ja
add
outsl
mov
int
das
jo
sbb
stc
sbb
push
or
adc
or
pop
jno
sub
push
sbb
imul
pop
xchg
push
sbb
aad
arpl
and
cltd
add
push
pop
dec
lret
pop
ss
ljmp
sti
loopne
mov
inc
lahf
pop
push
mov
repnz
imul
pop
xchg
out
jecxz
xor
mov
inc
pop
clc
pop
push
cmp
push
push
xchg
test
dec
leave
ljmp
sahf
adc
loop
or
fdivrl
mov
repnz
sbb
stc
aaa
loope
aas
jb
int
cmp
xorb
cmp
sub
lock
addr16
adc
js
mulb
add
dec
movsl
xchg
std
and
mov
jecxz
mov
sbb
xchg
xchg
pop
mov
stos
add
add
and
pop
dec
popf
adcb
out
mov
fcmovnb
out
scas
mov
push
add
jne
ljmp
inc
in
pop
inc
jo
iret
in
incl
lods
fcomps
cmpsb
pusha
ja
xor
adc
enter
test
imul
ja
mov
sbb
sub
or
inc
mov
enter
sub
lahf
cld
push
mov
and
mov
outsl
repnz
repz
xchg
bound
jo,pn
in
dec
mov
mov
jmp
pop
sub
ret
sub
adc
mov
inc
andb
scas
cmc
push
pop
adc
imull
push
or
clc
adc
ret
mov
cmpsb
and
cld
mov
repnz
leave
scas
in
rolb
sub
lahf
ljmp
adc
dec
lcall
push
scas
and
iret
mov
orb
les
cmp
add
pushf
sbb
push
cmp
inc
mov
xchg
sarl
jl
dec
dec
xchg
or
cmp
xchg
and
push
pop
pushf
push
push
and
sbb
call
and
icebp
add
xor
jnp
xchg
jp
adcb
xlat
fwait
or
push
adc
into
add
push
xchg
lock
sbb
push
xchg
insb
in
subb
add
cld
clc
sub
mov
jb
loopne
scas
arpl
call
outsl
sub
movsl
inc
mov
adc
xchg
xchg
out
in
mov
sub
aas
push
sti
cmp
xchg
push
mov
mov
push
scas
xlat
mov
jo
push
jmp
popf
call
xchg
cmc
push
push
fdivr
aad
mov
aad
cwtl
add
or
pop
adc
xchg
push
movsb
jl
pop
rcll
dec
fdivrs
add
xchg
out
out
test
inc
or
pushf
push
fcoml
add
cmp
pop
mov
cmp
or
ret
push
fs
out
aas
fcoml
je
mov
pop
xchg
out
cmp
jl
jg
sarl
popa
frstor
mov
push
push
mov
push
or
mov
mov
push
cmp
stc
and
and
mov
xor
stc
imul
mov
push
insl
sti
xor
and
mov
mov
cmp
cli
test
dec
idivl
insb
or
xchg
jp
out
xchg
stos
mov
jl
push
cmp
adc
mov
lods
and
push
lret
mov
or
js
push
mov
or
jbe
push
les
mov
pop
adc
dec
addl
fwait
fsts
lcall
gs
dec
leave
hlt
inc
sub
hlt
fbld
xlat
push
mov
lock
mov
mov
jnp
sbb
push
sbb
push
test
adc
int
xor
hlt
sbb
mov
push
push
test
sub
xchg
aam
dec
mov
pop
mov
add
push
stos
ljmp
xchg
cld
ss
mov
lds
fdiv
dec
das
pop
fiadds
cltd
arpl
outsl
outsb
int3
add
inc
add
movl
fstps
jle
adc
and
push
inc
cmp
out
push
inc
arpl
push
cmc
push
mov
fs
std
pusha
push
xchg
int
and
and
mov
lea
add
push
jbe
shld
ljmp
fsubs
xor
xchg
push
mov
xchg
sub
dec
inc
iret
xchg
and
ljmp
aas
aam
mov
push
cmp
loope
mov
mov
sbb
decl
jg
mov
test
cmpb
in
jae
push
ljmp
out
leave
push
or
iret
imul
aas
and
sbb
lcall
jge
adc
ljmp
pop
adc
cmp
stos
dec
pop
pop
cmp
imul
addr16
dec
stos
out
cld
cltd
inc
fwait
inc
icebp
xchg
into
sbb
mov
in
mov
scas
sbb
and
and
stos
shr
imul
in
xchg
sbb
repnz
repz
scas
sub
pop
push
inc
in
adc
inc
cwtl
movsb
stos
xchg
push
mov
jg
insb
jno
sahf
imul
shrb
data16
das
inc
pop
fnclex
lea
int3
cld
mov
divl
jle
xor
arpl
ss
jle
dec
adc
insb
push
cmpsl
je
jne
cld
in
andl
or
mov
and
and
xchg
cmp
jo
sbb
mov
dec
jle
mov
mov
jl
lods
pop
jno
adc
mov
lahf
push
sbb
mov
mov
sti
sub
int3
fimuls
mov
adc
cli
repnz
imul
out
xlat
movsl
mov
fsubrs
jp
xchg
or
mov
pop
jno
out
stc
sbb
rcrb
inc
dec
mov
mov
sbb
and
add
sbb
and
call
inc
cld
push
xchg
out
xchg
imulb
cmp
ljmp
push
mov
mov
jno
test
loope
sub
shrl
and
insb
and
adc
push
jecxz
mov
fadd
out
das
xor
adc
movsl
push
out
mov
xchg
aaa
enter
xchg
fisubs
sub
pop
or
ret
das
xor
ss
mov
sbbb
fistps
jecxz
ja
pause
in
mov
leave
sbb
adc
cmpsb
orb
jecxz
inc
iret
mov
aam
rorl
les
push
dec
pop
out
gs
mov
cmp
mov
add
in
mov
stos
and
sti
clc
sbb
fildl
jne
xchg
enter
add
inc
in
xchg
cmp
xor
in
data16
add
mov
mov
cmp
jno
test
add
or
push
mov
pop
add
es
sub
out
push
inc
aad
sub
and
clc
xor
cmp
and
push
xchg
pusha
inc
pop
in
orl
mov
out
jecxz
mov
jno
test
jge
dec
add
cwtl
jmp
pop
jno
bnd
mov
sbb
mov
pop
xchg
outsl
lock
add
incl
sbb
mov
push
fisttps
mov
cltd
push
mov
notb
dec
ror
dec
adc
mov
stos
movsl
mov
lods
add
push
xor
jl
or
fstps
nop
mov
and
lcall
mov
test
sub
stc
cld
and
pop
cld
or
std
dec
xchg
cli
mov
fstpt
fwait
mov
sub
cwtl
pop
lea
xor
pop
ficompl
and
test
add
inc
fcomip
jg
out
in
movsl
daa
leave
out
shll
jge
test
sar
push
ficompl
pop
jae
jbe
into
mov
cmpsb
imul
jne
jl
data16
dec
dec
xchg
aam
xor
or
testb
mov
sbb
fdivl
push
into
aaa
dec
cltd
jg
aad
out
lock
and
jo
xor
pop
xchg
outsb
xor
cwtl
mov
rcll
or
mov
test
cmp
xchg
mov
negl
mov
ret
cld
jnp
jmp
inc
sarb
mov
mov
dec
jl
adc
popf
mov
sarl
inc
arpl
scas
js
nop
sbb
shlb
push
std
push
std
addr16
stos
cmp
mov
lds
xor
icebp
jg
add
pop
xchg
shr
stc
jo
movsl
in
lock
and
sbb
je
xor
or
cli
xor
pop
inc
mov
mov
fucomip
testb
pop
sbb
and
negb
fdiv
movsb
dec
jb
pop
rclb
sbb
out
sbb
mov
push
mov
fcoml
lods
xor
call
xchg
mov
in
add
sub
jge
sub
push
fisubl
cld
adc
imul
cld
pop
js
das
cmp
cmp
xchg
loope
dec
loop
cwtl
xor
cld
jmp
adc
cmpsb
mov
test
sbb
repnz
adc
and
rorb
js
mov
ret
mov
jb
or
mov
mov
push
add
int
test
lods
jmp
jle
xchg
xchg
sbb
sbb
xor
mov
adc
mov
dec
pop
cli
inc
push
ret
mov
or
sbb
xchg
clc
push
inc
shr
jg
jae
outsl
adc
shlw
fimuls
cld
and
and
out
sbbb
pop
mov
out
mov
dec
inc
and
test
jp
dec
cmp
cmp
andl
loope
and
insl
adc
add
arpl
pop
dec
test
sbb
js
pop
inc
mov
or
dec
jbe
push
sub
mov
ret
push
pusha
cmp
lods
sti
mov
test
cmp
nop
insl
mov
xchg
mov
subl
mov
jmp
sarb
popa
or
sub
outsl
outsb
mov
xor
cli
mov
test
adc
sti
mov
rorl
inc
pop
inc
xchg
add
ret
iret
mov
insl
jnp
mov
into
jp
sbb
arpl
fsubs
fwait
inc
and
shll
mov
sbb
pop
jp
cmp
enter
faddl
insl
or
cmp
mov
fidivrs
xchg
mov
mov
cmp
sub
and
outsb
inc
add
insl
inc
je
clc
dec
rcrl
cmp
nop
jp
inc
cmp
mov
cmc
sbb
popf
xlat
lret
fisubrl
out
push
incb
mov
jae
xor
or
xchg
fs
divl
lea
jne
jnp
sub
stc
test
inc
and
mov
add
lcall
adc
or
cmpsl
int
fucomi
jne
addr16
dec
mov
pop
out
jle
sahf
cld
mov
pop
jge
sub
stos
push
push
mov
stos
lcall
mov
rcrl
sbb
arpl
and
and
pop
xchg
push
dec
popf
cltd
xchg
je
mov
call
xor
sub
clc
movsb
or
push
jne
les
lods
outsl
std
pop
adc
test
repz
das
loope
add
xchg
test
sti
mov
xchg
cmc
fwait
movsl
out
and
je
pop
fisttps
fcmovnu
sub
iret
jle
sub
and
cmp
ret
add
push
inc
in
jl
idivl
jmp
push
mov
cs
sub
lds
pushf
adc
adc
fisttps
mov
dec
int3
cmp
mov
fsubrp
inc
sahf
cmp
ljmp
insl
outsl
fisubs
lret
jbe
or
push
inc
pop
sarb
ret
cmpsb
add
test
cmpsl
lret
cmpsl
fmuls
fxch
inc
sahf
xor
push
in
mov
dec
xchg
int3
and
sbb
stos
cli
in
sub
sahf
pop
jg
add
rorl
inc
push
mov
fists
mov
cwtl
loope
fisubrl
mov
loop
stos
add
fbld
cli
and
in
hlt
les
popa
flds
jl
adc
xchg
fistps
cmp
cmpsb
mov
fldt
adc
xchg
sahf
rol
in
int
imul
mov
pop
into
mov
lahf
mov
aaa
xchg
test
mov
xchg
xchg
out
stc
insb
cmp
pop
lret
mov
or
arpl
pop
idivl
ja
jo
movsb
mov
bound
xchg
add
jo
mov
test
add
adc
je
and
push
mov
cs
mov
lahf
xchg
int
lods
inc
push
pop
sbb
shrl
pushf
jmp
push
insb
cmp
arpl
xlat
mov
adc
sbb
sahf
inc
push
js
jecxz
ret
mov
and
inc
fisttps
and
mov
ss
mov
xchg
mov
fcmovne
aaa
imul
icebp
icebp
cmp
or
scas
jle
mov
test
dec
mov
shlb
fwait
pop
jae
aam
aas
data16
add
pusha
call
cmp
cmp
and
sub
inc
scas
sub
push
adc
and
sbb
lret
mov
sarl
jbe
cmpsb
aaa
dec
aad
stos
cmp
cmpsb
addl
pop
dec
adc
mov
paddsw
out
adc
pop
movsl
or
sub
fstpl
push
pop
xchg
stc
out
cmc
dec
add
fmuls
cmpsb
cli
mov
in
dec
scas
and
sbb
je
jle
sbb
pop
jg
push
idivb
lds
sub
and
lods
xchg
ja
jns
sbb
inc
aam
ret
mov
fs
into
adc
jg
mov
imul
icebp
push
pop
and
sarb
insl
sbb
cmp
orl
push
loop
push
pop
mov
dec
in
nop
and
push
shll
jmp
mov
mov
add
shll
jb
or
sub
jo
xorl
dec
mov
out
aas
add
ss
mov
int
lock
adc
mov
outsl
xchg
es
mov
aam
out
lods
test
and
mov
ret
inc
jmp
mov
xchg
daa
or
push
sbb
jmp
loopne
jecxz
jl
sti
sub
aam
xor
movb
or
fdivrl
das
add
movb
stos
xchg
push
ja
or
pop
insl
pop
or
daa
fdivl
std
push
cli
dec
test
in
lcall
ds
dec
test
sub
sbb
pop
xchg
bound
and
mov
sub
call
lcall
scas
test
xchg
cmp
sub
xlat
jle
imul
ror
push
in
xchg
lret
and
adc
js
push
test
mov
in
ja
fisttps
jl
aam
mov
jp
aad
add
jb
or
xchg
mov
and
iret
or
les
mov
mov
mov
mov
lret
lret
xchg
add
in
lret
inc
fldenv
jecxz
stos
and
jae
mov
enter
dec
loopne
js
cwtl
mov
xchg
imul
push
insl
test
lock
push
xor
pop
out
leave
push
insb
add
in
lock
jg
je
rcpps
daa
add
pop
pop
out
sub
cmc
push
sbbl
lock
test
cltd
pusha
scas
sbbl
int3
mov
imulb
loopne
fnstsw
call
lods
mov
fwait
daa
adc
add
out
adc
push
icebp
push
mov
sahf
shlb
lock
xor
jle
fisttpll
test
nop
lahf
mov
sbb
dec
mov
icebp
sahf
xchg
sbb
insb
push
cmp
sub
dec
loopne
jo
mov
mov
mov
mov
xchg
mov
repz
dec
or
gs
mov
bound
mull
stc
pop
ljmp
pop
inc
loope
pusha
movsb
fwait
repz
and
jno
xchg
push
inc
xchg
add
xchg
fbstp
dec
mov
aam
movl
data16
lods
mov
sub
test
orb
or
fcmovb
je
xor
pop
push
mov
adc
pop
lret
jmp
movb
test
inc
sbb
push
mov
call
jns
cmc
mov
out
fldt
jle
or
mov
push
push
cld
roll
cmp
pop
fcompl
aad
les
out
pop
xchg
cld
les
xchg
xor
sub
lahf
sahf
pop
loopne
scas
ja
fs
pop
out
xchg
push
pop
std
mov
xchg
mov
ss
pushf
inc
test
sub
jns
push
loopne
int3
lcall
in
test
cmp
pop
add
cmp
xor
sahf
outsb
popa
inc
mov
sahf
xor
or
xor
repnz
push
cmp
les
sbb
adc
not
and
mov
int
mov
cmp
sahf
int
add
mov
add
mov
mov
dec
ss
mov
mov
and
push
outsb
fcomps
mov
sub
jecxz
shr
or
icebp
adc
into
xchg
popa
jbe
mov
mov
adc
bound
stos
fwait
mov
jge
inc
pushl
adc
icebp
cmp
adc
stc
xchg
iret
and
sbb
into
sbb
jae
xchg
aad
fstl
fdiv
push
mov
loop
lods
mov
jle
mov
lcall
ffree
add
pop
loop
mov
call
inc
dec
mov
cmp
jmp
push
xor
fcompl
jecxz
lods
scas
adc
loop
mov
xchg
mov
push
fnstcw
popf
js
sbb
je
sub
stos
cmpsl
add
cmpsl
test
sbb
sub
test
or
or
stos
sub
adc
jno
mov
cmpsl
es
rorb
xor
sbb
jmp
xchg
cmpsb
xor
push
push
cmp
push
add
stos
dec
pop
pop
ret
jb
iret
das
in
clc
mov
dec
movsb
int
xchg
pop
or
mov
cmpsb
dec
stos
mov
pop
sub
sbbb
xor
popf
cmp
addr16
and
idivb
jecxz
dec
xchg
int
push
jne
nop
nop
mov
cs
push
fstl
inc
pop
xchg
fldenv
dec
int3
test
sahf
mull
xor
repz
lea
rorl
in
xchg
psraw
jecxz
lds
ja
sbb
mov
add
pop
lods
in
xlat
insl
fcomps
mov
loope
out
sbb
push
mov
test
lock
loope
outsl
dec
nop
push
lock
add
lea
lahf
pop
iret
icebp
hlt
arpl
sub
jne
dec
fldenv
out
or
cmp
xchg
fwait
cs
fdiv
cmp
inc
or
cld
stos
mov
jecxz
jno
inc
adc
push
fmulp
jne
mov
lret
pop
xchg
and
mov
ja
xor
lds
into
pusha
fmul
cmc
stos
stos
mov
xor
mov
movsl
into
cmp
xor
das
and
jle
sti
jmp
ficoms
loope
outsl
js
add
push
add
jns
mov
shlb
inc
mov
icebp
xor
scas
pop
mov
sti
sbb
mov
out
and
and
loop
fbstp
push
notl
aam
dec
mov
mov
mov
jg
cmp
cli
jp
aad
mov
push
mov
inc
and
pop
dec
mov
mov
pushf
andb
add
stos
aas
mov
mov
mov
adc
mov
in
push
cwtl
pusha
lret
cmp
push
jbe
ficoml
push
in
mov
fnstenv
aas
inc
fisttps
movsl
jo
cli
jg
add
jg
sbb
aam
imull
sti
ss
and
loope
sub
xlat
adc
xor
push
mov
mov
dec
adc
add
notb
pop
divl
loop
mov
inc
inc
jns
mov
or
bound
popa
ret
pop
mov
mov
popf
popl
enter
mov
fidivs
popa
dec
addr16
cmp
sbb
xchg
je
mov
cmp
push
inc
mov
pushf
add
aas
mov
sarb
movsb
push
ds
mov
pop
out
ja
lods
pop
pop
jnp
scas
pop
lock
or
cmp
cmpb
pop
push
rcll
dec
sarb
xchg
mov
cmp
fadds
xchg
stos
mov
mov
mov
xchg
das
push
xchg
rorb
fldz
flds
push
sub
rcll
rorb
pop
popa
cmp
xor
adc
movsl
jno
sbb
stos
sub
aaa
incl
sbb
sbb
sahf
sbb
mov
push
sub
and
mov
test
mov
loop
push
mov
cmc
mov
cli
inc
sub
and
sti
adc
push
insl
mov
xor
ret
cli
cltd
imul
gs
popf
push
or
les
fisubs
test
fwait
lret
mov
mov
jmp
aaa
jge
cmpb
xchg
pop
cmc
popl
xor
jns
fldenv
pop
cmpsb
out
xchg
adc
js
rolb
ljmp
icebp
and
cmp
sub
mov
sub
clc
mov
dec
mov
jb
dec
pop
xchg
mov
jle
or
pop
rcl
xor
and
inc
pusha
repnz
mov
inc
shlb
cmpsl
jl
js
adc
scas
mov
mov
mov
and
es
xchg
or
fmuls
push
bound
xor
mov
loop
fadds
mov
mov
pop
xor
out
pop
push
cmp
subb
cmp
pop
xor
dec
inc
push
mov
sub
inc
dec
add
sbb
add
scas
addl
jns
or
insb
push
cmc
dec
sbb
push
mov
mov
neg
stc
rorl
push
jb
outsl
jecxz
cmp
push
cmp
addr16
add
dec
dec
xchg
cmp
stos
xchg
mov
icebp
ja
mov
xchg
stos
rcrl
sbb
test
jecxz
inc
stos
xchg
negl
imul
xor
xor
mov
or
aaa
push
push
je
int3
cltd
mov
js
cmp
or
dec
mov
pop
call
xchg
sub
cltd
mov
sub
adc
xchg
sbb
je
pop
fucomp
sbb
je
icebp
jge
outsl
adc
ret
xchg
aad
adc
jne
icebp
pop
adc
shrl
lods
mov
xchg
aas
or
jnp
test
mul
out
cmp
je
imul
dec
sti
outsb
mov
xchg
mov
pop
mov
mull
js
cmp
and
push
out
push
sub
adc
dec
cmp
mov
add
fmuls
leave
fcmovnbe
nop
pop
arpl
lret
aad
fcompl
pushl
mov
cmp
sahf
cmp
mov
and
cmp
sub
and
rcl
out
pop
jns
je
sbb
sub
icebp
cmp
push
imulb
and
add
xchg
filds
sub
jb
inc
ret
or
mov
add
jge
leave
pop
fs
fnstsw
xchg
aas
xchg
mov
xchg
in
mov
jg
xchg
lcall
loop
fstpl
xchg
inc
mov
fs
bound
sti
dec
in
pop
pop
mov
mov
xor
inc
fisubrs
jne
sbb
frstor
clc
fcmovnu
dec
mov
clc
mov
and
adc
rclb
in
mov
xor
sti
push
add
xchg
mov
xchg
popf
dec
or
cmp
fsubs
adc
xchg
imull
fcomps
adc
movsl
decl
int3
xchg
xor
mov
xor
pop
sub
and
and
jae
add
lcall
mov
pop
sub
sub
adc
ja
bound
adcl
inc
cmpsb
lds
cmpsl
daa
dec
shl
and
add
sub
cmpsb
movsb
clc
ret
xorb
pop
cmpsl
xor
fnstsw
fsubrs
mov
and
mov
sub
stc
xchg
aad
mov
cmp
fwait
sbb
cmp
inc
mov
inc
int
jl
scas
insl
adc
pop
sbb
stos
push
mov
int3
cltd
loope
and
stc
imul
ret
fwait
mov
sbb
push
rcrb
mov
add
mov
cmp
sbb
xorb
lahf
imul
mov
loope
mov
mov
lret
out
mov
push
push
int3
scas
cmpsl
out
cltd
icebp
mov
sub
or
nop
jnp
sbb
pusha
ret
and
cli
loopne
mov
jmp
or
nop
rcll
and
mov
jp
push
jg
leave
stos
mov
push
mov
or
insb
or
or
sub
inc
mov
mov
inc
mov
aas
push
out
lods
adc
add
mov
and
xor
xchg
imull
cmp
in
mov
adc
sbb
es
or
fbstp
mov
push
mov
outsl
not
jae
gs
adc
pop
push
jp
ss
mov
in
push
cmpsl
decl
incb
xchg
push
ret
and
push
cmpsl
mov
mov
mov
divl
pop
cmpsb
ret
xor
ret
das
xlat
mov
iret
dec
rcl
mov
mov
sub
fnstcw
xchg
ficomps
push
xor
jne
adc
sbb
xchg
clc
add
dec
or
lret
lods
call
push
sti
fs
icebp
lds
inc
sti
std
xchg
dec
icebp
jmp
xor
cmp
xchg
push
std
in
loope
cmp
roll
cmpsl
push
rclb
mov
ds
lods
jl
jge
jbe
fimull
jl
inc
imul
push
out
adc
ret
xor
lea
flds
add
xor
or
test
inc
inc
xchg
jecxz
mov
aaa
push
pop
push
fs
sbb
notb
lock
or
shlb
add
mov
stc
jb
mov
jae
movsl
xor
inc
or
inc
add
js
ljmp
pusha
jae
adc
mov
dec
xchg
xchg
popa
loope
in
xor
scas
jecxz
push
jge
mov
aam
and
mov
into
pop
pop
sub
sub
inc
lods
cmpl
int
fs
call
fwait
das
xor
cs
std
mov
pushf
jmp
inc
mov
cmpl
jl
sbb
icebp
mov
lea
xor
cmp
test
push
fdivrs
xchg
pop
lock
sub
aam
jae
pop
push
mov
or
jb
inc
lock
xchg
pushf
mov
int3
fpatan
jb
fidivs
jl
inc
scas
std
mov
push
jno
sub
faddp
mov
lea
pminsw
ljmp
push
jmp
sbb
xchg
xorl
int3
imul
push
mov
adc
es
fdivrl
dec
test
call
or
mov
push
inc
jb
inc
mov
add
bound
push
cmp
imul
frstor
pop
cs
rorb
shlb
shlb
mov
in
sbb
jo
adc
ret
mov
ds
cwtl
push
aas
pop
mov
adc
cmp
insb
add
test
nop
mov
cmpsb
add
xor
loope
pop
mov
xor
mov
jo
pop
fnstsw
fucomi
jp
inc
fnstcw
sbb
faddl
in
pop
stc
push
mov
aad
das
gs
gs
ja
mov
pop
mov
xlat
xlat
pop
mov
add
or
inc
jmp
cmp
sbb
push
push
mov
inc
add
out
sub
xchg
je
outsl
mov
je
mov
add
fists
aam
decl
push
mov
xor
cwtl
inc
fsubrl
dec
inc
fldl
push
xor
lahf
mov
pop
or
xchg
sahf
iret
inc
fisttpll
jne
testb
lcall
sbb
int3
sub
mov
ret
fdiv
dec
and
mov
js
xor
clc
adc
mov
inc
mov
insb
movsb
movsb
xchg
mov
sti
int
jb
fidivl
jne
stc
inc
mov
or
jg
xlat
fisubs
jb
sbb
lods
push
insl
push
xchg
mov
leave
sbb
out
adc
pop
push
sub
ret
mov
cld
lret
mov
pushf
ja
sti
mov
pushf
jle
and
rcrl
xchg
pushf
jle
or
mov
js
sbb
sub
in
jmp
sbb
lock
jae
orl
es
sub
enter
and
sti
adc
insb
xchg
addl
jecxz
lcall
mov
mov
xchg
jg
sub
mov
cwtd
dec
icebp
test
cmp
jnp
mov
xchg
jb
ret
lret
sti
repz
out
scas
cwtl
sbb
or
jmp
mov
jns
dec
push
fwait
daa
push
test
stos
arpl
mov
out
and
jge
cmp
add
adcb
jle
mov
add
icebp
roll
adc
inc
aad
call
jp
sub
xor
cmp
stos
clc
lock
cmp
xor
ljmp
jo
loop
xchg
aad
xchg
sub
ja
mov
leave
ds
enter
test
mov
lods
movsb
fucomip
loopne
out
shlb
or
sbb
adcb
mov
and
test
mov
ficomps
xchg
daa
stos
pop
jae
pop
sub
mov
addr16
inc
mov
cmp
or
test
imul
cmp
je
xchg
test
in
stc
bound
dec
add
sub
adc
mov
lahf
scas
jmp
mov
sar
fldcw
jmp
stos
call
adc
jb
xor
repz
pusha
pop
sub
inc
testb
mull
ret
mov
sahf
sub
mov
aam
ljmp
mov
jnp
cmp
mov
insb
dec
movsb
jmp
mov
pop
scas
mov
std
ret
cwtl
testl
lea
dec
loope
mov
outsl
add
inc
enter
cmp
fs
lock
psllq
lret
or
jge
addr16
xor
inc
repz
sub
jl
popa
lea
test
out
das
push
sub
outsl
lea
rorb
inc
pop
cli
add
xchg
pop
scas
outsl
add
mov
out
sarb
xor
adc
jno
jns
xchg
xlat
and
jge,pt
into
lcall
push
arpl
dec
leave
jp
or
dec
mov
add
int3
mov
cld
push
jnp
test
mov
xchg
or
mov
dec
jmp
adc
mov
nop
pop
xchg
outsl
mov
xor
mov
adc
ret
lods
add
popf
xor
pop
sbb
int3
mov
cmp
cmp
loop
nop
lds
subb
daa
arpl
stc
pusha
mov
mov
in
sub
loope
xlat
int
mov
cmp
mov
sub
xor
pop
out
xor
lods
fstl
mov
negb
ret
leave
fldenv
in
dec
cmp
insb
inc
sub
mov
mov
das
in
popa
insb
mov
pushf
mov
mov
push
loope
mov
call
sub
fsub
jno
dec
popf
jecxz
push
cld
ljmp
test
jnp
cmp
lea
push
add
mov
cmp
aad
test
or
inc
push
and
xchg
dec
xchg
xchg
cmp
and
jmp
sub
adc
std
data16
jmp
leave
insb
mov
xor
lods
jmp
push
add
je
push
sbb
xchg
out
pop
out
xchg
aaa
cli
push
inc
mov
test
lcall
push
call
jne
dec
shlb
jmp
int
or
ds
push
into
dec
push
andl
cwtl
sbb
cmpsb
inc
scas
cs
inc
mov
jmp
xlat
xchg
xor
stos
fbstp
sbb
lods
mov
jne
popa
popa
mov
adcl
lahf
lods
pop
mov
outsb
cmp
lods
in
dec
xor
add
mov
fimull
aam
mov
mov
cmpsb
int
sarb
jno
adc
insb
cmpsl
imul
inc
cmp
dec
xchg
sbb
std
add
imul
cmp
add
dec
and
push
add
and
mov
pop
insl
jbe
and
cmp
xor
popa
inc
dec
xchg
les
es
pop
sub
xchg
aam
add
dec
cs
mov
mov
mov
pop
add
push
pushf
out
mov
cmp
pop
xchg
dec
rcrl
sbb
aam
jb
es
movsl
roll
fst
repz
dec
aas
sbbl
cmp
cmp
add
xchg
add
mov
sub
mov
lret
insl
bound
sub
call
ljmp
add
lret
add
sub
call
push
adc
mov
int3
std
dec
pop
push
daa
jecxz
pop
mov
jnp
xchg
and
adc
add
inc
sbb
ds
lods
mov
push
push
fnstenv
iret
adc
cmpsb
ja
cmpsb
xor
pop
jle
pop
add
pop
inc
or
mov
xchg
out
xchg
or
jg
stc
mov
cmp
stc
mov
push
adc
rcll
and
mov
mov
sbbl
dec
mov
aam
out
testb
pop
in
in
inc
and
imul
inc
pushf
pop
repz
jb
mov
dec
inc
outsl
lods
sahf
pop
cmp
jno
pop
dec
dec
mov
popf
sbb
mov
inc
and
push
test
loopne
add
arpl
mov
in
cmp
jno
cli
ret
aam
mov
dec
push
inc
xchg
test
jnp
mov
aam
das
das
xor
mov
sbb
cli
cmpsl
nop
mov
stc
mov
jle
cmp
inc
test
pop
jl
adc
rcr
add
dec
test
inc
jb
neg
js
clc
cmp
fdivr
lds
sti
dec
jae
mov
js
push
imul
fsubrp
ja
mov
push
inc
add
xchg
pop
xchg
shr
adc
out
lret
and
adc
mov
pop
je
xchg
std
mov
pushf
js
scas
inc
dec
insb
and
mov
aaa
mov
mov
loopne
jne
cwtl
add
cmp
mov
aaa
lods
lahf
jl
je
jo
lea
or
arpl
adc
loope
scas
and
add
cmp
lahf
xcrypt-ecb
cmpsl
dec
jbe
or
mov
pop
dec
push
or
xor
hlt
fsts
lods
cmpsb
xor
sbb
cmpsb
push
inc
pusha
inc
jp
hlt
fldcw
aas
xor
cmp
mov
test
adc
ds
outsl
imul
dec
mov
jo
jl
ret
shrl
push
xor
add
movsl
pusha
clc
in
xchg
std
inc
test
inc
pop
and
adc
jmp
mov
xchg
cmp
mov
xchg
insb
test
push
mov
orb
test
roll
in
xchg
gs
loope
das
call
sub
lock
jbe
rol
xchg
scas
mov
adc
lret
cmp
xchg
out
outsl
pop
inc
ljmp
push
aad
push
imul
lcall
pushl
in
xlat
iret
and
movups
cmc
cmp
xor
xorl
xchg
mov
mov
shr
mov
lahf
mov
out
mov
sub
setno
pop
jp
lcall
cmpsl
mov
push
scas
int
popf
mov
jne
mov
stos
adc
js
dec
iret
jl
push
mov
mov
jl
sub
ss
dec
hlt
sahf
xor
xchg
sti
and
out
mov
push
in
data16
sub
daa
pop
cltd
jb
icebp
cmp
or
std
lods
lock
push
sbb
out
mov
jo
cmp
pop
add
out
es
pusha
hlt
push
adc
test
jae
arpl
mov
int3
pop
pop
pop
mov
cmp
int3
adc
inc
pop
sbb
scas
lret
rclb
and
out
imul
data16
inc
sbb
scas
pushf
ja
sub
mov
inc
push
test
lds
dec
xor
inc
aam
mov
lcall
aam
and
mov
les
cmpsb
sahf
scas
mov
cld
cmp
dec
repnz
in
fstpt
mov
mov
in
dec
or
sbb
xchg
setno
fcmovne
push
push
mov
push
adc
pop
mov
mov
cmp
push
xchg
jle
cmp
stos
mov
inc
sub
push
dec
dec
cmp
mov
mov
mov
shlb
test
cmp
pop
lret
pop
gs
mov
cmp
nop
dec
les
mov
and
sub
inc
inc
sbbb
pop
test
roll
add
lahf
adc
or
mov
stos
fs
ja
addr16
push
add
repnz
lds
push
mov
mov
sti
push
pop
push
pusha
add
std
js
mov
dec
dec
mov
sahf
mov
pusha
mov
imulb
pop
cmp
jae
mov
lret
and
or
pop
pop
jecxz
jmp
inc
xor
adc
test
dec
inc
sbb
mov
sti
dec
mov
push
mov
hlt
cs
data16
icebp
jae
movsl
je
imul
or
lock
imull
cmpsb
neg
push
and
int3
orl
stos
aas
popf
sbb
shlb
rorl
mov
popa
pop
aam
and
js
or
es
xchg
pop
insb
cld
mov
xchg
xchg
stos
fdivl
mov
out
sub
pop
ja
mov
jmp
jae
inc
cmp
jnp
imul
roll
sub
xchg
mov
lret
ss
and
shll
inc
jg
adc
insl
nop
fcompl
jmp
push
xor
cwtl
hlt
jle
xor
lea
leave
sub
pop
outsb
mov
test
aas
add
and
mov
loop
adc
inc
cld
lods
jp
pop
iret
mov
xor
js
push
dec
in
and
and
pop
dec
add
xchg
out
adc
jb
test
mov
add
das
mov
leave
cmpsl
push
aad
and
es
andl
clc
push
lret
or
xchg
call
dec
inc
lea
test
mov
clc
loop
mov
lods
shlb
jae
adc
push
loope
xchg
fdivl
enter
jb
ret
mov
pop
inc
pop
rorl
jmp
sti
int
adc
or
mov
pop
inc
lea
cmpsb
jp
xchg
stos
xchg
lea
testb
inc
push
rorb
in
dec
dec
in
xchg
aas
in
pop
or
mov
stos
ljmp
push
cs
add
divl
sub
adc
pop
inc
dec
or
cld
popf
xchg
adc
shl
add
loopne
clc
stos
mov
addb
sbbl
dec
cmp
jle
and
mov
cmc
cmp
inc
loope
jbe
or
lahf
xor
outsl
flds
out
loop
jecxz
les
jns
aas
push
sbbb
adc
adc
inc
fcomp
push
sahf
mov
add
andl
shrl
sbb
mov
leave
cmp
and
sbb
jno
dec
adc
fcomps
repnz
repz
test
in
sub
push
cmp
rcll
cmpsl
mov
adc
into
dec
or
xor
push
icebp
fbstp
lock
inc
jb
sbb
call
fwait
into
adc
test
ss
mov
adc
jmp
xchg
cwtl
push
ss
push
ffreep
sbb
cmp
pushf
call
sbb
sub
dec
and
pop
inc
jecxz
push
out
lea
out
and
push
adc
popf
add
repnz
into
jmp
aam
ja
gs
jmp
das
stc
mov
push
xchg
and
xchg
xor
adc
adc
das
push
dec
mov
xchg
add
lea
call
shll
shlb
ljmp
sahf
ds
bndstx
imul
and
jle
pop
inc
clc
rolb
pop
lds
bound
mov
movsb
mov
fmuls
mov
jecxz
mov
repnz
int
shl
shrl
xchg
push
add
bound
sub
jbe
hlt
test
leave
mov
shrb
cs
rclb
in
adc
popa
or
out
fnsave
pop
aaa
add
pop
push
popf
jp
int
int
fildll
test
sub
or
in
stos
es
cmp
cmc
add
push
cmc
mov
pop
xchg
insb
scas
bound
mov
pop
jmp
outsb
mov
loopne
ljmp
pop
dec
mov
lea
cli
xlat
sub
lock
fnstenv
pusha
pop
xor
mul
inc
call
movsl
dec
dec
xchg
test
jae
test
call
jecxz
imulb
dec
in
mov
fcomps
push
rol
dec
fisubl
mov
in
or
dec
jno
scas
sahf
add
cmpsb
push
out
cs
push
pop
dec
test
xchg
add
push
dec
sbb
mov
push
test
stos
cmp
xor
dec
mov
adc
sub
push
movsl
push
inc
test
sub
mov
subl
pop
ret
jge
mov
rcrl
sub
sti
rorl
sarb
jae
sub
addr16
add
jecxz
add
mov
rorl
or
shlb
or
shrd
into
jnp
testb
mov
repnz
sub
sbb
mov
test
dec
push
xchg
pusha
sbb
mov
mov
int3
dec
shll
mov
nop
lods
sub
int
mov
ss
sbb
mov
mov
mov
inc
inc
add
xorb
mov
aad
and
lcall
pop
in
in
pop
fwait
pushf
outsb
out
fcoms
fstl
jecxz
mov
fisttpll
stos
jb
pop
sbb
repz
lods
fcmovnbe
out
lret
fnop
dec
imul
inc
pop
jge
das
lret
andl
maxps
xor
or
shl
mov
dec
fnstenv
daa
sbb
and
flds
mov
mov
jg
xor
notl
shll
or
jl
or
dec
mov
lds
dec
nop
cmp
jecxz
inc
xchg
inc
jae
or
xlat
fsubrs
mov
mov
pushf
xor
ret
loopne
xchg
insb
ss
stos
or
add
inc
jbe
mov
subl
and
mov
int
test
pop
inc
jl
push
xor
push
sub
sbb
pop
sarl
fadd
lock
jb
xor
xchg
into
rclb
cmpsb
inc
fists
pop
xchg
and
mulb
fsubr
rcr
push
stc
daa
jle
mov
scas
xor
hlt
ss
or
push
lcall
adc
scas
dec
rolb
mov
call
sub
stos
jle
pop
mov
insl
gs
push
mov
and
xchg
pop
xchg
push
out
or
jg
aas
xor
jb
into
popa
push
or
bnd
in
in
dec
adc
roll
movsl
icebp
cmc
rolb
mov
js
bound
mov
xchg
stc
ljmp
sub
dec
mov
scas
dec
sbb
mov
jmp
lret
ja
sub
dec
test
movsl
cmp
loop
call
inc
and
inc
fidivl
jb
mov
jl
inc
sahf
add
addr16
mov
inc
mulb
rcrb
xchg
loopne
mov
aad
test
fst
fmul
jl
sbb
addr16
lcall
sub
lcall
pusha
ret
sub
cld
cmc
icebp
jge
rcl
loop
sub
inc
adcl
test
sub
and
sub
test
inc
das
addl
add
daa
lahf
xchg
sbb
iret
test
leave
lds
or
out
ret
lods
imul
lcall
adc
scas
adc
add
insb
jne
cmc
or
pop
inc
sti
sbb
scas
scas
inc
in
cmp
ja
faddl
cmp
nop
push
movsl
shll
stos
cmpsb
shlb
mov
leave
hlt
xor
in
or
in
adc
mov
in
and
add
push
imul
mov
nop
mov
adc
xchg
lret
lock
sahf
xor
push
fisttpl
push
insl
aas
mov
lods
aam
cltd
ret
add
jo
gs
lock
fisubs
dec
dec
push
repnz
icebp
adc
aas
loop
imul
mov
ret
dec
xor
pop
loop
call
test
xlat
or
cwtl
movsb
andl
sahf
push
int
add
xchg
das
add
push
lods
aam
cmp
fwait
cmp
jl
dec
pushf
clc
loope
cmpsb
and
xor
xchg
sub
sub
inc
jno
lcall
repnz
jle
lcall
mov
mov
int3
mov
lds
jmp
fcomip
aas
pinsrw
jb
pushf
movsb
adc
xchg
jne
inc
fsubrp
mov
add
xchg
cli
sti
mov
loope
lock
sarl
adc
arpl
out
adc
out
adc
lods
ja
stos
xchg
jae
idivb
loop
insb
outsl
sub
xlat
outsl
jecxz
cltd
out
adc
sti
or
inc
inc
cmp
adc
pop
mov
or
mov
jb
cs
mov
test
ficoml
cmp
out
pop
mov
aad
into
pushf
xchg
mov
fsubp
push
cmpsb
inc
inc
fcomip
or
fistpl
lock
dec
bound
sub
sti
pop
ds
xchg
jmp
and
jbe
ret
sbb
push
fcmovnbe
cmp
cmp
sbb
aad
and
sbb
push
adc
adc
mull
leave
orb
inc
push
fidivl
add
cmp
xchg
mov
stc
sti
mov
xor
jl
mov
movsb
push
mov
in
ficoms
scas
mov
dec
movsb
mov
jnp
pop
dec
std
or
dec
gs
out
jno
fnsave
cmpsb
cmp
adc
mov
mov
cmp
aas
sub
dec
inc
adc
hlt
and
cmpsl
add
pop
ficoml
imul
fstl
rolb
sub
inc
xor
into
cmp
stos
push
jg
fnstcw
stos
dec
adc
stos
adc
sbb
icebp
scas
aad
sub
inc
pop
sub
mov
out
shl
pop
xchg
cmp
sub
or
enter
or
enter
xchg
fisttps
das
ss
addr16
in
cwtl
adc
je
xchg
mov
or
inc
sub
mov
dec
insb
shr
xchg
into
inc
loopne
test
jae
pop
sub
in
sub
in
or
sbb
jno
jnp
push
or
fsubp
mov
fsts
mov
xchg
loopne
mov
pop
inc
push
jge
js
cmpl
fiadds
jl
xchg
jns
push
movsb
jecxz
jb
icebp
push
jecxz
js
mov
pop
inc
inc
jbe
and
loope
daa
xor
and
int
mov
jmp
insl
clc
push
pop
adc
hlt
cmpl
or
ljmp
lcall
je
push
xor
fxch
xchg
sub
jl
or
outsl
fisubl
stos
mov
pop
adc
pop
mov
and
mov
cmp
adcb
loop
dec
xor
adcl
mov
mov
mov
data16
cmpl
add
pop
fmuls
jne
jmp
pop
xchg
pop
pusha
cmp
push
sbb
jmp
dec
xor
lcall
lods
jae
out
movsb
outsb
repz
in
rcll
in
in
mov
jecxz
mov
test
inc
je
sub
cmc
mov
push
std
mov
cwtl
pop
sub
push
cmp
or
dec
mov
lahf
adc
shl
movsl
mov
cmpl
test
jmp
push
sub
bound
or
mov
ds
or
lahf
xor
cmpsb
and
or
xchg
jecxz
aaa
adc
mov
mov
push
popf
and
pop
jl
jle
out
stos
dec
jo
mov
outsl
out
ret
lret
mov
push
jp
test
pop
and
sbb
repnz
or
jp
cmp
leave
xchg
mov
lods
das
aam
adc
imul
pop
push
push
mov
push
and
out
lret
test
xor
rorl
mov
sbb
testl
loop
jl
mov
pop
loopne
cmc
dec
pop
xor
rorl
or
mov
sub
hlt
fimuls
test
sub
ret
test
lods
cli
data16
scas
mov
cmc
pop
push
leave
xchg
cmp
mov
dec
mov
add
xlat
mov
test
push
adc
and
push
test
mov
sub
test
lret
hlt
enter
push
push
ljmp
push
insb
pop
imul
sbb
rcrl
pop
xchg
dec
and
cmp
cmp
imul
jg
inc
sub
daa
inc
add
ja
jne
jbe
enter
lds
xchg
push
and
mov
jp
cmpsb
inc
push
out
dec
test
add
fistps
add
jbe
je
and
jnp
inc
or
lea
cmp
xchg
es
sarb
mov
dec
dec
lock
lea
sbb
and
in
scas
insb
push
and
add
cli
test
sub
sbb
push
mov
or
lret
dec
popf
xchg
inc
ret
clc
pop
sbb
adc
mov
xor
out
mov
dec
push
mov
mov
push
mov
test
mov
dec
out
dec
sub
roll
cmpl
pop
jp
or
add
inc
and
mov
pop
out
xor
mov
pop
pop
shr
pop
pop
inc
out
paddw
xlat
aaa
fisubrs
mov
xchg
dec
inc
push
pop
sub
pusha
xor
jmp
dec
leave
fnstsw
mov
addb
cmpb
sbb
les
mov
sub
jnp
scas
mov
pop
je
pop
sahf
into
in
divb
push
shlb
xor
sar
and
jl
sbb
sub
xlat
cmp
jns
cmp
fmull
jo
int
cmp
inc
jbe
cmp
pop
stos
xlat
enter
sub
pusha
pop
adc
push
dec
dec
dec
fucomip
mov
insl
test
into
orl
mov
dec
pop
mov
inc
push
mov
dec
sbb
lret
inc
fwait
cmpsl
xchg
push
ret
push
mov
push
sbb
sahf
cmp
inc
gs
movsl
jnp
je
mov
mov
adc
leave
lods
xchg
xchg
push
repz
ss
push
or
repnz
adc
enter
shr
sbb
imul
aas
pushf
sbb
test
into
pusha
add
das
jb
jg
push
xor
mov
popl
inc
loopne
mov
mov
lret
or
sbb
std
and
jecxz
mov
mov
push
adc
loope
add
xchg
jnp
scas
mov
mov
push
movsl
lcall
pop
inc
pop
int3
shrb
loopne
int3
mov
sbb
clc
bound
jl
enter
push
into
push
js
jb
jl
hlt
push
push
lea
pop
nop
or
in
mov
and
fidivs
sahf
mov
ficoms
pop
out
xor
sbb
roll
js
sbb
or
jecxz
sti
mov
cmpb
xchg
cmp
cld
mov
mov
jnp
adc
out
mov
pop
lods
nop
cmc
addr16
cmp
mov
add
mov
into
lea
jecxz
pop
jg
mov
test
jae
push
mov
cli
add
scas
test
or
sub
push
stos
test
xchg
sbb
pushf
xorl
mov
mov
cwtl
test
inc
sub
cmpsl
xchg
xor
loope
cmc
scas
insb
xor
xchg
cmp
sub
data16
push
xchg
mov
or
sub
jge
mov
scas
js
mov
cmp
ds
sub
lods
jbe
add
das
repz
xchg
pop
push
cltd
pop
pushf
sub
pop
sub
subb
aam
sahf
jne
cmp
ret
inc
mov
xor
inc
push
cmpsb
pop
std
xor
push
or
test
lahf
push
xchg
sti
popf
mov
push
rorb
iret
or
or
jnp
inc
fdivrs
cmp
sbb
fstp
fdivl
data16
pop
data16
addr16
mov
adc
iret
repz
mov
inc
sar
std
test
pop
and
jae
push
popa
lock
mov
es
dec
cmp
push
mov
sub
inc
or
aaa
pop
sahf
cmp
sbbl
jg
sub
lcall
push
mov
jns
cld
loopne
mov
or
push
ficompl
sbb
daa
pop
mov
pop
jle
ljmp
in
add
in
sub
mov
shrb
insl
mov
and
fldl
in
xor
loopne
xor
mov
dec
cmp
inc
fimull
sti
inc
ljmp
iret
jmp
fisttpll
addl
mov
push
mov
out
sub
ja
cmp
rclb
or
sbb
push
in
sahf
pusha
or
add
cmpsl
cld
js
js
xorb
jl
popf
outsb
int
inc
data16
frstor
add
push
out
inc
push
ljmp
mov
cmc
mov
mov
jl
mov
iret
outsb
rol
mov
iret
dec
inc
dec
cs
xor
push
add
add
inc
push
mov
xchg
je
cmpl
imul
add
daa
div
jno
jmp
movsl
xor
test
cli
sub
add
lds
pop
inc
sub
lods
lock
xchg
xchg
sbb
and
push
xor
push
lea
push
repz
mov
aaa
jnp
pop
push
jle
sub
popf
and
inc
mov
fiaddl
rcll
sbb
fldcw
xchg
dec
fimull
lods
lods
cmp
or
sti
mov
aad
sub
xor
ja
fsubp
or
inc
cs
cmp
fstpl
out
jmp
jle
loopne
mov
lock
xchg
sub
jmp
fiaddl
out
ja
lahf
or
mov
add
add
mov
fisubrs
out
dec
mov
sub
sub
loope
pop
scas
rorb
mov
fwait
cmp
sub
jp
lret
ds
jle
xor
jmp
mov
lahf
cs
out
es
fsubrs
xlat
push
and
adc
fcomi
fst
xchg
repnz
js
adc
mov
mov
and
push
aas
sti
mov
inc
mov
xor
or
dec
mov
xchg
aas
push
inc
adc
lock
add
aam
aaa
daa
dec
fidivs
xchg
mov
call
fisttpll
outsl
test
cmpsl
subl
hlt
lcall
dec
xchg
push
mov
dec
xchg
pop
repz
test
outsl
adc
icebp
jae
mov
stos
into
iret
adc
and
arpl
adc
ret
nop
adc
mov
sbb
popf
pop
mov
mov
imul
outsl
jp
jmp
jg
adc
sbb
pop
jmp
pop
pop
aam
orl
push
lahf
lea
mov
jno
lret
mov
pusha
mov
xchg
mov
and
mov
lcall
xchg
xor
xchg
mov
fildl
xchg
push
andps
or
jg
sub
stos
mov
ficompl
leave
rorl
mov
lcall
rorl
inc
leave
push
cs
nop
fnstenv
addr16
lret
and
jmp
repnz
pop
fstpt
xchg
adc
in
dec
fnsave
pop
jo
inc
lock
adc
jecxz
jge
cmpsl
push
sub
dec
imul
jle
or
fdivl
in
inc
mov
dec
fldt
inc
into
shlb
mov
fisttpl
cmpsl
popa
inc
dec
push
imul
enter
or
cmp
sbb
andb
shlb
push
out
sbb
pop
out
gs
mov
test
sub
repz
ret
mov
aaa
adc
push
cmpsl
loopne
sbb
push
stos
xchg
jne
dec
in
adc
mov
sbb
fwait
lea
dec
popa
mov
neg
or
fisubrl
sub
aad
mov
cmc
inc
imul
push
mov
rcll
movsb
enter
imul
cmp
sbb
mov
mov
xor
mov
push
pushf
mov
jo
cmp
mov
cmc
push
pop
test
sahf
cmpb
inc
or
xor
mov
pop
sahf
adc
popa
pop
jge
jge
add
sbb
xor
stc
out
xchg
sbb
or
icebp
add
add
inc
cltd
jno
pop
test
int
sub
lock
push
loopne
push
mov
sub
mov
testl
push
pusha
or
cwtl
loopw
add
lahf
mov
mov
jg
decb
pop
mov
sbb
inc
cmp
fs
sbb
push
pop
imul
xchg
push
sub
pop
mov
and
pop
or
rcrl
stos
xor
sub
adc
and
das
fsubl
inc
in
jge
adc
ret
outsb
ja
enter
mov
inc
xchg
inc
push
sub
fcmove
imull
aad
sub
ret
cld
nop
dec
xor
gs
sbb
imul
mov
subb
and
popf
pop
rolb
jae
inc
cmp
and
aad
mov
mov
fs
test
mov
int
test
push
jg
mov
je
adc
cs
cmp
fisubrl
add
jno
cmpsl
insl
add
arpl
pusha
xchg
loop
pop
aaa
sub
sbb
and
sbb
int3
jo
sub
dec
mov
pusha
shll
add
rcrl
push
inc
nop
stos
fsubl
adc
fwait
add
dec
or
xor
loopne
dec
loope
ljmp
sub
push
fwait
inc
push
jo
lods
out
int
lock
mov
xor
out
jp
add
and
cltd
cwtl
insb
fsubrp
lret
in
jl
lods
cmp
popf
jns
sub
out
push
add
ficoms
mov
lret
or
clc
mov
mov
lahf
mov
jl
and
lcall
ficoml
test
mov
xchg
into
inc
inc
inc
mov
decb
or
into
cmp
jb
popa
cld
and
movsl
call
inc
outsb
js
pushf
pop
enter
jbe
pusha
test
outsl
sub
lret
push
fsubr
mov
push
or
mov
pop
shlb
enter
ret
sarl
sti
xchg
ljmp
xor
pop
xchg
xchg
lret
arpl
xor
jo
xor
pop
loop
ljmp
in
lahf
xor
dec
sub
xor
pextrw
and
and
das
out
cmpsb
jno
es
cmp
jae
imul
shrl
movsl
jno
fmulp
lret
negb
sbb
js
mov
add
arpl
and
and
test
aam
loope
push
cmp
sub
cmp
inc
or
xchg
iret
push
lahf
jg
icebp
jne
rcrl
xchg
dec
add
fistps
add
aaa
daa
std
mov
int
jle
mov
dec
sbb
fcmovnb
xchg
pop
pop
add
scas
test
pop
push
leave
mov
popa
inc
inc
out
bound
fistl
mov
psubusb
cmp
xor
test
inc
mov
cwtl
mov
and
inc
sbb
xor
and
gs
mov
sahf
into
test
mov
hlt
sub
ss
jno
out
inc
jno
adc
pop
push
cmp
jns
es
ljmp
xchg
lret
leave
mov
add
icebp
jge
hlt
xor
aam
fistpl
push
data16
mov
dec
xor
pop
fistpll
jg
pop
mov
or
aam
sub
in
xchg
cmp
cmc
andl
div
add
sub
sbb
cmpsb
cmp
leave
aam
fdivrl
lret
mov
jb
cmpsb
iret
mov
aas
jle
adc
cmp
ret
loop
sbb
jge
lods
outsl
pop
mov
outsl
scas
stos
jb
pop
int
jecxz
mull
and
pushf
pushf
cmp
mov
push
inc
jns
ret
add
mov
jns
push
outsb
fwait
popa
into
and
add
aam
jl
cmp
mul
ljmp
sahf
mov
jnp
in
cmc
icebp
stc
ficomps
ds
js
cmp
adc
cmc
out
jno
sti
in
in
cmp
dec
dec
or
imul
lea
mov
inc
test
push
test
int
cmpsb
mov
mov
inc
cld
mov
or
lds
inc
cmp
mov
movsl
leave
mov
inc
cmc
xchg
aad
dec
sbb
js
inc
jns
fxch
cltd
inc
test
rorl
insl
xchg
adc
test
loopne
lcall
cs
dec
lahf
xlat
lret
dec
cmp
lahf
sbb
pop
in
sub
inc
fwait
sub
in
mov
lea
cmp
mov
mov
stos
test
sbb
xchg
mov
lcall
imul
jo
mov
aas
call
and
add
clc
add
sbb
or
push
fsts
and
push
sbb
mov
xchg
andb
rorl
mov
add
fsubrs
sbb
fcmovnbe
push
loop
mov
cs
push
sarl
fwait
cmp
xchg
pop
std
add
lds
push
adc
sub
in
xchg
push
gs
lods
mov
hlt
testl
jg
repnz
pop
stos
cli
pop
mov
bound
pop
inc
ret
xchg
cmp
inc
dec
movsb
ja
jmp
fisttps
add
sub
sub
or
jecxz
shl
xor
lock
lock
jo
push
push
addr16
xor
sub
je
mov
loopne
mov
iret
pop
outsl
inc
jno
ret
test
clc
out
loopne
sub
mov
push
lret
fwait
pop
jne
es
shlb
inc
dec
sbb
into
imul
mov
mov
fs
or
out
int3
mov
push
lods
test
test
mov
aas
mov
sti
pop
mov
push
repz
push
cmp
fdivrp
lock
je
ret
pop
out
sahf
jbe
mov
sub
or
shr
ret
sbb
sub
adc
pop
or
jge
add
xor
mov
iret
in
fxch
push
hlt
lds
insb
adc
fisttps
jecxz
std
mov
in
mov
xchg
pop
mov
aam
lahf
xchg
mov
ficompl
cltd
cmp
add
push
gs
cmc
fnstsw
cmp
scas
test
movsl
repz
mov
lret
shlb
push
aaa
stc
repz
mov
pop
xchg
int3
outsb
sbb
mov
mov
ss
mov
sub
jecxz
loope
jl
and
pop
push
and
mov
out
xchg
adc
data16
imul
addr16
push
ret
dec
cmpsb
or
fsubr
cmp
adc
and
fsubr
movsl
loop
mov
mov
pop
push
mov
sbb
dec
inc
dec
outsb
adc
mov
inc
js
hlt
add
int3
xchg
fmuls
mov
add
cmp
pop
enter
loope
dec
sub
cli
xchg
inc
jns
add
xchg
jb
cld
aad
ftst
xchg
lock
and
and
push
cli
or
mov
cld
out
adc
jb
out
pop
mov
lahf
lods
add
jl
pop
fwait
jp
sbb
mov
mov
cmp
push
or
dec
in
inc
int3
or
jg
jne
rclb
inc
inc
mov
inc
in
les
mov
int3
push
ss
in
and
fiaddl
pop
insb
dec
outsb
jo
push
hlt
cmp
daa
loopne
hlt
mov
repz
aaa
xchg
add
push
pushl
jge
shlb
out
mull
jl
mov
sbb
push
add
or
stos
xlat
jno
fcomip
inc
arpl
outsb
sub
les
inc
ficoms
push
sbb
adc
sbb
sub
ret
icebp
dec
scas
xchg
add
movsb
cmp
add
push
fdivp
mov
xchg
mov
cmp
pusha
int
out
cmp
mov
clc
push
lret
stos
or
lahf
pop
mov
push
mov
stos
scas
mov
js
rorl
int3
cmp
jl
adc
adc
push
divl
adcl
icebp
cld
clc
out
lods
xchg
lds
or
rcrb
adc
sahf
dec
xchg
mov
mov
mov
and
imul
xor
imul
xor
jb
sub
mov
dec
dec
cwtl
jecxz
or
xor
and
lret
and
pop
fnstenv
and
inc
adc
scas
push
dec
add
mov
mov
cmp
dec
dec
xchg
or
movl
sub
lea
or
pop
in
ljmp
in
out
jb
xor
xchg
mov
cmp
fistpl
rcll
mov
cmp
adc
mov
lret
sbb
jo
sarl
push
lock
outsb
push
dec
sbb
mov
adc
mov
inc
repnz
cwtl
adc
mov
xorb
mov
dec
ret
movsl
xor
push
cli
popf
mov
jmp
and
inc
push
pop
push
neg
pop
cmp
push
mov
inc
mov
nop
inc
jnp
in
jecxz
add
lods
jo
faddl
cmp
je
xchg
cmpsl
pop
xor
stc
icebp
stos
jge
xchg
lea
xchg
inc
jg
mov
sub
mov
stos
or
rcrl
mov
cmc
mov
add
pop
dec
jl
popf
and
in
mov
ss
int
or
xchg
mov
mov
cwtl
sti
push
fistpl
stos
inc
pop
outsb
lods
xchg
out
sti
cmp
lock
sbb
loope
xchg
fs
xchg
jp
pop
bound
cli
mov
inc
push
enter
adc
or
push
push
sub
orl
xchg
jle
bnd
lahf
cwtl
or
mov
int3
sub
add
cmp
push
in
and
les
sub
adcl
xchg
or
loope
fs
lods
add
mov
int3
sbb
jns
es
iret
jmp
jb
fidivrl
jbe
aaa
mov
or
cmc
ljmp
mov
sub
dec
shrb
inc
ljmp
fs
xor
mov
mov
jmp
mov
jns
inc
pusha
jg
xchg
jns
movmskps
or
mov
sub
lret
js
std
iret
mov
lods
loope
jnp
dec
sbb
sbb
inc
inc
inc
cmp
arpl
mov
and
sub
xchg
pusha
shll
inc
push
mov
adc
das
lahf
push
xchg
inc
stos
mov
jne
fildl
inc
fdivl
adc
ret
and
pop
sbb
pop
adc
ljmp
inc
sbb
pop
setb
jae
pop
cwtl
inc
xor
jp
inc
clc
xchg
testb
jmp
into
outsb
test
ja
ret
mov
icebp
je
jecxz
xchg
xlat
pop
mov
in
sub
emms
cmp
add
ja
and
sub
adc
inc
es
aad
mov
call
fisttpl
iret
aad
iret
aas
cmp
rclb
add
aaa
in
push
pop
lock
ret
cmp
shlb
pushf
adc
jbe
inc
sub
add
dec
das
mov
xchg
jae
std
insl
xchg
aam
cltd
lahf
popf
popa
in
xor
mov
movsl
and
daa
lods
jae
icebp
insb
xchg
add
cmpsb
mov
popa
push
loope
nop
mov
jb
dec
in
aas
jmp
int
imul
mov
repnz
jbe
inc
adc
inc
xchg
clc
mov
pushl
adc
int3
xchg
adc
gs
enter
mov
mov
in
jae
shll
and
out
ja
cmp
jecxz
addr16
sbb
cltd
scas
ljmp
push
mov
movsb
enter
cli
lret
push
js
push
cld
mov
push
insl
ret
add
lret
repnz
jecxz
lods
cmpsb
lds
ret
xor
dec
adc
cld
shll
scas
loop
out
cmpsl
mov
jg
mov
xchg
or
xorb
push
xchg
xchg
inc
xchg
jmp
fcmove
xor
addb
jno
inc
mov
into
scas
and
std
push
pop
sahf
adc
jb
sub
addr16
cli
scas
jns
push
cmpsb
inc
pop
mov
mov
push
fiaddl
lret
loope
popf
nop/reserved
divl
bound
sbb
and
loopne
xor
rcrb
out
dec
or
lds
xor
nop
pop
int
cwtl
fistpll
dec
loopne
dec
hlt
sbb
xor
out
mov
or
inc
cmp
and
pushf
test
dec
pusha
or
inc
sub
cwtl
mov
ret
mov
add
cltd
scas
fisttps
xchg
nop
pusha
ljmp
dec
lret
inc
shll
clc
xchg
nop
aas
mov
or
test
les
sub
sub
xchg
push
nop
insl
fmulp
inc
lds
jmp
inc
out
add
xchg
out
push
adc
mov
and
dec
xchg
movsb
inc
dec
inc
and
lahf
mov
inc
nop
cmp
add
fnstcw
insb
imul
scas
sub
cmp
cwtl
fs
push
repnz
jg
test
lock
jno
pop
loopne
add
cld
ret
pop
pop
out
sti
xor
inc
arpl
jne
xchg
dec
add
xchg
mov
and
pop
int
cmpsl
xor
jge
mov
sbb
shll
pop
xlat
xor
adc
jmp
mov
add
mov
xcrypt-cbc
cmpsl
adc
les
mov
xchg
popf
daa
js
mov
iret
adc
jl
xchg
mov
das
add
or
push
repnz
pop
xorb
xchg
lcall
xor
fbstp
movsl
or
daa
push
stos
jle
movb
cmp
mov
ds
enter
jp
dec
mov
or
sub
jecxz
cwtl
xchg
cmc
jp
cmpsl
out
in
jp
mov
inc
xlat
pusha
pushf
xchg
mov
adc
jle
fs
imul
pop
jne
mov
fisubrs
aas
push
mov
inc
icebp
daa
jae
loopne
mov
cmp
cmpl
ret
add
cwtl
xor
and
insb
push
cmp
movsl
int
cwtl
aas
add
sub
adc
frstor
or
out
je
imul
iret
shl
cs
dec
push
les
jecxz
inc
mov
int3
sub
sbb
sbb
mov
ffreep
mov
or
int
jl
or
add
aam
movsb
add
cmp
sbb
xchg
and
data16
imull
mov
pop
andl
and
cmc
insb
ss
inc
lock
xchg
scas
pushf
cld
mov
inc
loope
xlat
daa
les
cwtl
jb
ja
sbb
lock
cli
int3
pop
add
sbb
jne
mov
repz
fwait
out
fs
bound
or
pop
test
push
inc
jnp
je
sub
sub
inc
dec
sbb
or
push
mov
mov
and
xor
jecxz
ret
push
fists
bnd
mov
xchg
xor
mov
stos
jg
test
add
cmp
and
pminsw
pusha
xorb
aam
pop
jns
fmul
in
arpl
adc
aas
add
imul
cmp
lock
insb
pop
decl
push
and
push
or
mov
xchg
inc
dec
push
push
inc
push
leave
inc
push
stos
orl
pop
cltd
xor
mov
or
insb
mov
pop
popf
fsubs
xchg
dec
rclb
xchg
or
insl
repz
jmp
sbb
push
and
pop
pop
loopne
insb
mov
sub
or
es
mov
dec
push
xchg
sub
cwtl
lahf
and
ja
xchg
inc
mov
push
pusha
mov
pushf
loopne
out
neg
xchg
sub
inc
lods
pop
sbb
sti
xchg
inc
cld
pop
jnp
xor
add
addr16
cmp
and
xchg
mov
cmc
or
or
cmp
push
enter
inc
test
arpl
sub
adc
fsubrl
mov
push
jecxz
or
movsb
cmp
adc
pop
insl
xchg
scas
mov
push
mov
lods
cmp
insl
add
imul
mov
clc
les
dec
mov
push
movsb
int3
in
xor
dec
inc
mov
and
out
cld
roll
xchg
bound
fimull
mov
addb
and
push
mov
mov
ja
push
dec
pop
cwtl
fldt
fwait
xor
cmp
sti
xor
and
pushf
dec
ret
sub
fucom
inc
and
cmc
mov
xchg
mov
out
or
cmp
imull
adc
mov
push
xchg
aaa
mov
dec
xchg
scas
in
jecxz
sbb
sbb
jb
insl
sub
sbb
mov
lcall
imul
pop
and
inc
mov
jae
sbb
sahf
out
adc
mov
test
aaa
les
and
test
add
notl
cld
dec
popf
jle
or
or
inc
mov
mov
dec
mov
int
sbb
outsb
loop
push
mov
push
in
cmp
outsb
stc
pop
jmp
jo
js
leave
dec
jo
cmp
ror
jo
and
sub
fistps
out
repz
sahf
pop
jne
xor
into
dec
movsl
mov
std
sub
push
pusha
pusha
mov
sbb
inc
pusha
mov
lcall
repnz
push
cs
and
sbb
notl
mov
dec
das
shll
cmpl
mov
xchg
push
stos
rorb
add
addl
fnsave
dec
dec
out
hlt
jne
lods
ret
cmp
outsb
ss
rclb
mov
dec
testb
fwait
jl
xchg
repnz
mov
mov
test
jg
loop
mov
int
push
stc
addr16
in
add
mov
xchg
add
fdivrs
push
fadds
push
xor
scas
out
push
call
add
jecxz
aaa
cmp
jle
add
lock
cmp
jecxz
sbb
xlat
jbe
xor
jae
frstor
std
sahf
xor
mov
xchg
dec
mov
pop
jns
xchg
adc
stos
repnz
sbb
add
jmp
dec
ja
mov
fadds
lcall
mov
pusha
es
push
loope
lret
sbb
pop
clc
xor
rorl
push
xchg
out
sarb
mov
mov
stos
mov
push
pop
fnsave
dec
mov
adc
jb
mov
aam
xorb
out
cmp
in
insl
push
sarb
lcall
gs
or
leave
iret
mov
gs
or
lock
ffree
sub
test
pop
rorl
imul
fists
aas
out
mov
pop
or
dec
jg
push
pop
sub
in
and
mov
adc
sahf
xchg
aas
inc
cli
and
dec
andl
and
inc
repnz
inc
lock
aas
sbb
popl
fs
xchg
out
cld
sbb
stos
push
mov
pop
push
jp
sbb
push
mull
xchg
cmp
add
lods
inc
imul
xchg
mov
xchg
rolb
ret
jle
aad
adc
add
idivb
push
mov
push
push
mov
or
xchg
repnz
ss
mov
lods
dec
sub
push
lods
mov
lret
xchg
fdivs
push
lret
sub
test
inc
arpl
ja
or
or
dec
mov
rorb
inc
cmc
rcll
push
or
xor
mov
jge
fcmovu
sbb
and
outsb
int
mov
filds
std
adc
aas
imul
movsl
dec
sbbl
add
icebp
mov
das
fwait
xlat
sarl
pop
cmpsl
fldcw
or
lock
ret
rorb
adc
out
xchg
loopne
js
bound
cmp
shrb
out
mov
or
push
fnsave
mov
push
lea
cmpsb
jg
jmp
jge
add
mov
sbb
cmp
push
fidivl
rol
fcmovb
mov
aad
jne
stos
popl
dec
xchg
pop
xchg
or
sarb
out
sub
jle
xchg
add
mov
xor
mov
mov
push
js
imul
sub
shrl
xor
icebp
outsl
sar
add
dec
jne
xor
adc
fdivl
sbb
and
cmpsl
mov
into
add
negb
ds
pop
data16
cwtl
mov
cmpb
add
roll
std
pop
jnp
sbbb
scas
push
clc
sub
sbb
mov
and
ss
push
popa
pop
xlat
push
sbb
rol
idivl
cmp
xchg
repz
push
sbb
sarl
jle
lods
cli
jmp
xchg
lds
roll
jl
pop
add
jp
test
adc
dec
repnz
les
mov
lea
and
dec
loope
testb
inc
xor
sbb
mov
mov
cltd
out
mov
lea
fimull
ret
mov
and
or
fwait
cmp
gs
orl
sbb
mov
dec
shr
sub
pop
jbe
lret
je
test
push
retw
sbb
sub
cmc
mov
out
movsb
lret
loopne
jecxz
inc
jmp
icebp
stc
or
mov
lods
stos
out
mov
or
test
ret
movsl
cs
dec
sbb
dec
push
sbb
bound
stc
cmp
sub
call
int
jae
enter
dec
jecxz
call
sarl
scas
adcb
mov
shlb
mov
inc
jo
add
xlat
xchg
mov
std
subb
out
inc
call
mov
adc
mov
mov
mov
xor
mov
test
inc
jbe
sbb
shlb
adc
inc
popa
mov
jle
ds
andl
punpcklwd
adc
repz
rcll
pusha
sti
xchg
sbb
lahf
push
stos
xor
in
stos
leave
add
aam
jg
and
push
scas
lahf
test
dec
xor
xor
loop
call
subb
out
push
sbb
or
cltd
sbb
xchg
pushf
push
popf
adcb
fwait
inc
jl
dec
xchg
mov
dec
sti
int
icebp
adc
xchg
fs
mov
pushf
in
mov
lret
and
ds
xchg
sbb
or
and
cmp
sub
push
in
fs
lret
adc
leave
jae
mov
fisubrs
aam
mov
scas
pop
fs
std
add
adc
rcrl
push
sbb
test
mov
loop
test
aad
inc
in
inc
adc
imul
inc
pop
jle
inc
in
scas
orl
push
shlb
rolb
aam
adc
or
in
fisubrs
lret
mov
arpl
xor
loopne
sbbl
pusha
movsl
inc
adc
nop
jmp
dec
insb
fbld
imul
fiadds
adc
cli
pop
int3
cmpsl
sub
cli
pusha
in
movsl
pop
sub
stos
mov
call
add
dec
mov
mov
inc
add
filds
in
dec
stos
pop
jp
enter
ret
sarl
xchg
sub
inc
imul
cmp
int3
pusha
pop
lret
pop
xor
clc
shrl
hlt
jg
push
mov
inc
pop
xchg
nop
adc
pushf
int3
out
stos
call
push
in
mov
dec
int3
push
pop
add
fwait
popf
adc
jno
ja
stos
or
pop
es
pop
push
sub
xlat
push
rclb
xchg
inc
js
sub
adc
mov
in
xchg
mov
je
adc
out
in
clc
push
push
mov
push
rol
push
sbbb
mov
or
shll
jb
fs
es
cld
je
xchg
add
lock
popa
arpl
dec
daa
push
mov
test
negb
pop
or
xor
jo
cli
or
mov
push
lock
pop
mov
mov
mov
mov
ja
mov
shll
or
adc
test
out
scas
sbb
sub
sbb
int3
inc
orl
fsubs
adc
fwait
dec
scas
in
out
inc
jo
xor
lahf
imul
rorb
lods
popa
outsl
or
outsl
popf
jns
dec
int
mov
xchg
pop
gs
shlb
divb
int
push
outsl
popf
mov
testl
inc
sbb
ljmp
popf
int3
ja
inc
xchg
and
mov
pop
sub
jns,pn
inc
jmp
cmp
xor
push
adc
dec
xchg
stos
sbb
cld
hlt
xor
cmp
ret
mov
popa
out
jmp
nop
test
lea
dec
adc
mov
pop
mov
or
aaa
sub
out
push
js
inc
nop
iret
adc
outsb
dec
mov
fdivs
cs
inc
jb
out
jp
jmp
cwtl
fdivl
scas
jmp
sbb
loop
push
mov
push
shrb
push
lcall
lds
pop
cmc
dec
add
outsl
sbb
lea
add
push
cmpsl
pop
out
dec
jno
pop
movsb
das
nop
and
mov
pop
cmp
ds
and
pusha
not
enter
sbb
add
cmp
and
fisttps
pop
adc
inc
sub
cmp
les
inc
ret
andb
movsl
pop
sub
cmp
lock
cmpl
mov
jae
dec
push
mov
inc
pop
and
popf
sbb
andb
in
call
fisubs
or
pop
fs
mov
imul
pop
mov
mov
loope
add
icebp
test
decb
dec
push
mov
mov
sub
jae
cli
test
mov
mov
xor
jp
int
jmp
bnd
insb
inc
push
stos
add
sbb
jg
loope
imul
cli
cld
sbb
sahf
push
jno
and
xor
mov
popf
stos
lret
fidivs
lret
sbb
xstore-rng
cmpsl
mov
mov
sbb
scas
cld
movsb
inc
into
xchg
cmp
mov
lds
xlat
in
addr16
jle
inc
pop
shlb
imul
cs
or
inc
dec
cmp
sub
add
dec
adc
fcmovb
cmp
cld
loope
xchg
js
ja
repz
mov
int3
mov
cmp
fwait
std
jb
push
popf
adc
mov
mov
sbb
cmpsl
jl
movsl
mov
jl
and
leave
addr16
rcrb
sub
inc
aad
fwait
adc
sbb
xor
shlb
ja
out
or
adc
out
inc
mov
popa
pop
jb
pop
sub
xchg
mov
xchg
aaa
test
ret
or
je
jmp
jl
lods
add
ljmp
int
fsts
outsb
and
mov
mov
into
stos
cmc
or
and
loope
stos
xchg
loopne
and
cli
or
sub
xchg
jno
decb
int3
xchg
ja
mov
jg
loop
and
pop
repnz
subb
cmp
inc
fldl
scas
jno
mov
adc
xchg
mov
loop
rclb
push
popa
mov
and
cmp
call
cmp
mov
adc
sub
decb
aad
pop
jne
lods
mov
mov
pop
sub
fistpll
outsl
in
sub
inc
add
pushl
int
and
push
cmpsb
mov
push
ja
pop
and
jmp
jge
mov
push
xor
shll
dec
divl
push
es
and
add
mov
loope
push
add
test
outsl
arpl
jge
cmpl
flds
adc
sub
mov
push
and
es
addr16
hlt
push
pushf
int
outsb
aad
xor
pop
daa
clc
jne
adc
push
add
vzeroupper
mov
push
mov
sar
sbb
mov
aad
mov
mov
cmpb
data16
fiadds
mov
inc
cmpsl
popa
sarb
test
jle
push
xor
sbb
popf
ljmp
jne
movsb
mov
aam
push
cmp
mov
mov
sub
mov
inc
sahf
ret
jg
aaa
andl
leave
scas
push
add
fisubrl
push
mov
dec
mov
out
cmp
test
aad
and
mov
sti
cmpsl
aaa
inc
test
test
mov
push
repz
cltd
insl
mov
jmp
push
daa
mov
scas
cld
in
ret
or
insl
bound
dec
sub
repnz
and
mov
gs
out
aad
jno
orb
mov
out
sbb
test
xchg
ret
mov
xchg
pop
cmp
cltd
aad
fwait
and
repnz
shlb
and
add
push
rcrl
jmp
or
arpl
dec
jae
mov
sbbl
push
cmpsl
xor
push
or
repnz
jne
jns
and
jecxz
mov
mov
xor
pop
inc
sbb
in
sarl
rclb
jno
jle
sbb
in
mov
das
ss
sbb
push
lahf
out
add
negl
sbb
jbe
and
xor
daa
or
andl
inc
call
inc
mov
pusha
test
adcb
push
lods
imul
and
lds
hlt
int3
sub
sti
fs
inc
dec
xchg
cmp
inc
and
adc
sti
xchg
test
stc
mul
aas
cmp
dec
aaa
sub
jne
bound
repnz
cwtl
xor
aam
popf
inc
push
jae
dec
adc
fnstsw
sbb
loop
int3
inc
test
ret
test
pcmpeqb
jg
test
scas
mov
add
cmp
jecxz
add
aam
adc
push
daa
jl
aas
insl
pop
mov
insl
ret
adc
add
sar
je
repnz
fisttpl
sahf
mov
cmpl
loopne
xchg
add
add
mov
mov
sub
dec
xchg
fmul
hlt
insl
xlat
js
lods
add
sbb
push
and
fsubl
sbb
sbb
mov
and
cmp
or
andb
inc
loop
inc
mov
stc
testl
pop
push
jge
xchg
adc
out
aaa
in
inc
in
or
mov
lret
or
sbb
fwait
testl
fisttpll
scas
jg
les
popf
dec
xorb
mov
es
pusha
pop
sti
popf
pop
add
xor
das
xor
mov
or
cmp
in
mov
lahf
clc
jo
pop
jnp
and
fdivs
in
fidivl
sbb
push
fadds
repz
out
and
in
es
lret
xor
dec
push
cmp
filds
lds
or
ret
shl
mov
xor
mov
adc
sbb
nop
into
call
add
data16
sub
push
std
rorb
leave
jae
pop
aas
inc
push
jecxz
popa
mov
jo
push
daa
add
and
dec
mov
lret
cmp
mov
dec
sub
mov
fldenv
shrb
sahf
in
mov
add
sub
jno
adc
xchg
or
and
sub
mov
fbld
push
jge
cmpsb
imul
imul
pop
mov
mov
push
ss
sub
or
aam
xchg
sbb
mov
push
adc
sbb
add
inc
cmpsb
idivl
outsb
loop,pt
adc
mov
dec
push
sub
adc
or
mov
loope
lret
adc
xchg
xchg
sub
or
popa
fsubr
mov
iret
cmp
mov
inc
out
hlt
push
xorl
les
popa
pusha
xlat
mov
sarl
mov
aad
adc
mov
mov
shrb
loope
aam
jno
push
sbb
xor
js
mov
jae
pop
mov
mov
pushf
clc
inc
gs
fidivrs
jl
pop
inc
jle
imul
lock
popa
push
sbb
mov
or
jnp
lock
mov
xor
aaa
mov
and
cmpsb
or
jp
sbb
jle
jmp
xchg
mov
sbb
adc
sar
cmp
add
test
xor
fwait
insl
pop
or
dec
cmpsl
into
jmp
test
add
mov
dec
imul
cwtl
sbb
mov
outsl
push
jno
cs
stos
aaa
in
leave
out
adc
int3
add
pop
sbbb
out
and
cs
jp
mov
or
or
jg
jmp
inc
imul
jg
pop
rcll
aad
push
es
shlb
stc
adc
cmpsb
cmpsl
push
pop
adc
xor
mov
cmc
or
mov
stc
ljmp
mov
arpl
push
repz
cmp
adc
cld
or
fimull
xor
xchg
mov
ds
stos
out
rcll
bound
clc
rorl
loop
mov
xchg
adc
js
mov
sti
pop
in
fistpll
and
loope
xchg
or
nop
mov
sub
shlb
iret
push
in
orl
push
mulb
imul
mov
dec
mov
mov
hlt
cmp
fimuls
icebp
fsubrl
pop
adc
add
fsubrl
sbbl
faddl
mov
cmp
jb
and
aaa
test
fsubrl
cmovs
test
in
shl
idivl
mov
jne
and
push
leave
out
and
mov
arpl
call
pop
iret
inc
mov
xlat
or
mov
add
scas
dec
jne
out
xchg
rcrl
call
xchg
cli
mov
into
push
cmp
mov
test
pop
jmp
fcmovnb
loop
dec
test
insl
out
sub
pop
and
lcall
xchg
les
lds
subb
cltd
adc
lds
pop
arpl
mov
mov
mov
jle
fucomi
test
pop
arpl
fwait
sbb
in
lahf
push
cmp
jp
enter
in
or
inc
std
or
shll
cmpsb
cmpsb
inc
fnstcw
sbb
js
adc
or
mov
arpl
jp
sub
adc
or
add
fs
inc
loopne
hlt
mov
lods
sub
cmc
mov
mov
sbb
sub
negl
pop
push
out
add
sub
push
xorb
in
push
mov
aad
int
push
cmp
or
js
xlat
arpl
fdivr
fnstcw
aam
aad
cmc
lahf
mov
adc
sahf
mov
scas
jp
xchg
cmp
into
icebp
mov
imul
rep
sub
push
dec
shll
dec
jmp
cld
or
into
xchg
pop
fsubr
shrl
push
sbb
xchg
push
incl
pop
xchg
inc
jne
xor
xchg
jo
out
aaa
popa
adcl
pushf
shlb
mov
jge
and
add
adcl
add
cmp
repnz
fdivrs
push
jno
je
adc
aaa
cmp
enter
mov
pushf
test
xor
or
mov
and
jge
adc
dec
mov
sub
dec
jo
xchg
clc
jnp
daa
cmp
aas
pop
xor
mov
sbb
push
sub
dec
push
les
cs
xchg
pushl
mov
sbb
in
daa
dec
cli
or
cs
mov
cwtl
out
mov
adc
and
push
stos
mov
pusha
pushf
or
xor
xchg
add
ljmp
sbb
adc
jl
cli
sbb
mov
out
cli
dec
mov
jecxz
jp
jne
mov
sub
ljmp
stos
sbb
inc
sti
ss
lahf
push
cld
inc
xor
fistpl
call
mov
shrl
es
and
insl
dec
add
push
movsl
jns
stos
cwtl
xchg
and
or
adc
cmpl
data16
stos
cwtl
xchg
fs
inc
les
cmp
and
jb
xchg
jmp
adc
insb
pop
dec
cmp
fistps
xchg
loope
popa
inc
cmp
mov
scas
jge
inc
cwtl
jg
xchg
test
dec
dec
lods
imulb
mov
pusha
jno
lsl
iret
je
cmp
fcom
inc
and
or
js
repz
ljmp
mov
fsubrl
enter
jecxz
call
lds
jmp
shrl
mov
leave
add
xor
sub
enter
and
adc
sub
shlb
in
inc
xchg
cli
and
rsqrtps
pop
fdivrs
scas
loope
loopne
mov
out
imul
icebp
ficoms
adcb
add
test
imul
fistps
subl
mov
add
inc
imul
and
int3
and
test
mov
xor
and
mov
sbb
stos
mov
pushf
leave
inc
test
push
nop
in
arpl
nop
int3
scas
mov
cmc
mov
cs
mov
sub
sbb
push
xchg
mov
pushf
cmp
push
jmp
jns
inc
mov
mov
aad
xchg
enter
in
int
cs
cmp
sbb
add
insb
fisubrs
cmp
mov
cmc
jne
imul
xchg
jbe
das
popf
mov
fs
fdivrs
int3
mov
mov
dec
and
and
add
sahf
pop
cltd
aaa
push
ret
add
cld
push
rol
mov
push
xor
rol
cmp
inc
ljmp
push
adc
push
inc
sahf
popf
sbb
pop
jae
add
mov
stc
mov
rol
pop
mov
sub
mov
sahf
dec
xchg
jl
cld
xor
push
xchg
inc
push
jno
and
loope
and
out
sbb
loop
subb
jno
sti
mov
jae
push
mov
insb
cmc
jbe
xor
xor
inc
sub
xchg
inc
sahf
jge
push
sub
push
jb
inc
mov
adc
js
xchg
mov
cmp
mov
lea
sub
int3
cmp
xor
mov
cmpb
fidivrs
mov
sbb
dec
leave
xchg
ret
sbb
cmc
sub
mov
pushf
pusha
inc
push
mov
test
repz
push
lods
cld
loopne
xor
jecxz
std
pop
pop
add
fisubl
rcr
sbb
push
jno
pop
ret
out
dec
lock
call
scas
les
nop
mov
scas
and
pop
shr
fstpl
loop
movsl
adc
dec
pop
out
dec
scas
xchg
mov
xchg
hlt
mov
jnp
mov
cmp
out
loopne
or
sub
push
loope
in
imul
or
jbe
ds
jmp
push
jg
pop
test
insb
popa
fisubs
jns
push
ss
fcomps
cs
ret
xchg
icebp
jno
or
pop
sahf
and
sbb
inc
mov
notb
sub
mov
jmp
idiv
and
iret
cli
cmc
xor
lret
sbb
pop
lods
hlt
push
sub
fs
push
stos
fwait
lret
in
jecxz
or
adc
xor
or
cmc
and
jle
stos
dec
mov
loope
sub
xchg
cltd
nop
rcrb
dec
stos
lret
pusha
mov
aam
scas
imul
repz
mov
enter
jno
call
inc
add
das
lret
adc
xchg
add
sbb
orl
sub
fsubrs
outsl
movsl
inc
mov
sbb
pushf
mov
mov
out
ret
mov
jecxz
mov
test
push
push
adc
sub
jg
inc
cltd
sbb
add
jnp
jno
ret
shll
test
out
shr
mov
pop
repz
mov
mov
lret
repz
cmp
cmpb
sbb
loope
push
inc
shrb
cmc
pop
push
xchg
ljmp
insb
pusha
mov
cmc
bound
dec
jo
xchg
movsb
das
jge
lahf
mov
adc
nop
shrb
leave
push
test
jg
cmp
dec
pop
sarl
adc
fmull
pop
xchg
fwait
adc
pop
in
repnz
xchg
loopne
aad
lods
push
jae
adc
das
and
inc
popa
lahf
stos
outsl
lods
movsb
ret
sub
mov
dec
loopne
aad
imul
int3
insb
movb
shr
int3
das
out
cmp
pushf
inc
int3
in
add
mov
ljmp
xchg
mov
push
daa
fistpl
pusha
mov
or
sub
nop
push
in
lods
out
std
pop
mov
mov
arpl
fstp
int
dec
clc
fdivrp
pop
dec
ret
xor
lea
jb
push
lcall
in
adc
scas
mov
scas
lret
les
ja
outsl
adc
test
std
test
and
and
or
decb
jmp
inc
gs
sarb
dec
sbb
xor
dec
mov
push
ljmp
scas
dec
jnp
adc
mov
shrl
dec
popa
ds
shl
push
sub
addr16
and
das
adc
or
arpl
pop
sub
and
mov
mov
lahf
xor
pop
lcall
insl
movsl
ds
fcoms
add
pop
jae
sahf
and
or
ss
push
adc
scas
push
mov
xor
xor
movsl
push
adc
daa
xchg
cmp
mov
mov
out
ljmp
cmp
out
jb
movsl
cmp
jo
jge
fwait
inc
iret
add
sti
jns
xor
lahf
push
mov
cmpsl
xchg
mov
divb
fildl
add
mov
testl
dec
or
ja
aas
ret
adc
and
cli
sub
nop
xorl
mov
loope
dec
dec
aam
dec
lea
fisttpll
fistps
fwait
xchg
movsw
pusha
leave
xchg
or
fistpl
aad
mov
mov
xor
clc
xchg
mov
cld
add
ja
insb
fdivl
jo
rcr
mov
movsl
lret
or
dec
mov
inc
sub
je
jae
pop
mov
push
mov
lock
or
dec
xor
inc
scas
ret
cvtps2pi
jae
fs
sbb
cmp
sub
sub
scas
jbe
inc
int3
into
fisttps
or
add
fwait
add
adc
lock
shlb
cmpsl
xchg
sub
std
jns
test
lret
pop
pop
adc
xor
mov
push
push
adc
sbb
daa
ljmp
fisubs
shrb
ds
mov
iret
cld
push
jo
cli
add
rcr
shll
adc
bound
xchg
mov
mov
xchg
das
int
mul
sub
sbb
rcr
popa
mov
outsl
pop
nop
cmp
xor
jp
mov
and
data16
mov
inc
js
or
imul
push
or
xor
mov
xorb
rclb
sbb
jge
dec
mov
push
insl
aaa
mov
push
inc
or
xchg
enter
add
out
rcll
sub
mov
adc
cwtl
and
stc
or
cwtl
push
xchg
popf
mov
xor
js
fists
xchg
pop
js
dec
mov
ljmp
movsl
adc
jp
add
popa
dec
xor
fildll
int3
stos
push
xor
or
popf
fimull
rcrb
in
mov
mov
out
int3
fsub
jbe
cmp
dec
sub
clc
mov
cmp
fdivrl
mov
cld
stos
lret
cltd
sbb
cmp
push
xchg
or
push
fildll
shl
ss
add
fstp
mov
xchg
mov
pop
xor
xchg
inc
mov
pop
lahf
cltd
mov
mov
or
daa
in
mov
loopne
pop
in
add
push
xchg
dec
iret
xchg
inc
les
lods
in
inc
fstpl
jns
inc
movsb
push
cmp
jmp
mov
lcall
repnz
cmp
cmp
inc
jbe
addl
lods
jo
and
sbb
add
out
push
scas
dec
jns
in
lret
sbb
jno
add
test
and
in
pop
dec
lret
pusha
fisttpl
cmp
mov
lret
inc
pop
push
lea
cmc
in
mov
push
cmc
dec
into
cmpsb
lret
mov
sub
adcl
and
adc
out
pop
sbb
jp
sbb
sbb
addl
or
push
clc
push
fmuls
fists
jge
pop
lcall
inc
in
outsb
lods
insl
xchg
push
pop
dec
hlt
sbb
std
lock
cmc
mov
jo
mov
in
sbb
xchg
xorb
enter
xchg
mov
data16
sbb
pop
int3
aad
xchg
adc
xor
dec
out
dec
mov
xor
leave
mov
dec
jg
lret
push
lcall
fistpll
dec
mov
and
inc
cmp
popa
cmc
xchg
or
scas
sarb
sbb
and
pop
xchg
daa
pop
lahf
jle
push
dec
test
out
jecxz
ret
cmp
sub
sbb
xor
mov
dec
fmuls
sbb
out
mov
lea
xor
or
pop
stc
add
mov
add
into
lds
jecxz
push
jns
int3
rcll
xchg
jb
cli
popf
cmp
call
mov
xchg
or
fdivrl
rcll
xchg
pop
adc
mov
or
inc
test
inc
mov
pop
mov
xchg
sti
adc
fmull
xchg
std
lret
jns
hlt
sahf
sub
or
or
or
mov
adcb
and
inc
push
cmp
mov
sbb
adc
ret
pop
pop
aad
and
mov
inc
dec
push
dec
xor
cmpsb
stc
jnp
mov
push
adc
cwtl
and
sub
das
repz
movsl
mov
push
loopne
pop
mov
popf
add
cmp
jbe
jb
lock
test
ds
sub
mov
pop
out
xchg
std
loop
hlt
test
frstor
or
push
lcall
mov
fs
mov
lds
xchg
or
js
divb
jl
movsl
into
sub
into
sti
stc
ss
imul
pop
aad
mov
add
mov
mov
movsb
insl
dec
fnstsw
xor
aam
lds
xor
lahf
jmp
mov
cmp
mov
test
ffree
xor
sub
lock
dec
pop
sbb
pushf
mov
lock
and
pop
sbb
movsb
cmp
adc
addr16
inc
mov
lret
aam
cltd
jl
xchg
popa
mov
mov
in
pop
push
out
adc
mov
sub
inc
iret
cmp
mov
lods
mov
lock
sti
aam
sub
adc
xor
jbe
add
xchg
xchg
xchg
adc
mov
inc
or
push
jl
aaa
push
jnp
cltd
mov
in
scas
call
test
jnp
xchg
jge
repz
cwtl
push
clc
test
stc
divl
mov
jge
ret
inc
pop
or
test
or
xchg
test
or
xorb
mov
fisubl
or
mov
andl
popa
lock
xchg
fmul
jns
jae
fdivr
dec
mov
test
jnp
lds
jns
subb
add
mov
mov
and
js
or
or
lods
mov
add
dec
sub
iret
sti
gs
jmp
mov
lea
xor
xchg
mov
aam
cmc
add
flds
pop
and
into
mov
cs
pop
call
cmpsb
push
fisubs
rcr
pop
dec
hlt
movsl
int
dec
lods
les
mov
xchg
lret
pop
js
fstpl
enter
imul
into
out
daa
test
pop
xlat
mov
xchg
clc
push
sub
lods
or
jae
ret
idiv
in
xchg
lods
dec
subb
xchg
sahf
push
movsb
out
push
fcoml
sbb
daa
dec
push
scas
xor
fwait
insb
lret
mov
shrl
fdivl
out
and
imul
pop
cli
lea
jb
xchg
lcall
shlb
cli
xchg
insl
push
adc
imul
mov
imul
inc
push
icebp
sub
jb
hlt
int
aaa
cmpl
mov
xor
faddl
scas
into
sub
mov
jg
fldt
push
rcrl
rcll
or
stos
test
adc
xchg
jp
jmp
xchg
mov
and
hlt
add
lock
repnz
ret
or
cmp
fcmovb
inc
pop
stc
inc
add
push
jno
fwait
xor
gs
mov
adc
mov
stos
mov
or
cmp
test
js
aam
dec
pusha
fldt
cmpsl
cmc
push
dec
daa
jp
sarl
dec
pop
xchg
in
in
aaa
sbb
push
lahf
jg
adc
data16
adc
dec
rorl
popf
pusha
andl
je
arpl
aad
and
sub
xor
xchg
scas
fists
bound
dec
lret
mov
fsts
mov
sarb
arpl
add
loope
rorb
jge
jnp
decl
loope
jno
dec
in
sbb
cmp
dec
movsl
cltd
pop
push
sub
xor
cmp
arpl
sbb
test
out
sbb
test
mov
test
in
jnp
out
clc
jne
in
adc
out
or
adc
mov
scas
sub
imul
arpl
xchg
pop
inc
cmpsb
inc
cwtl
hlt
mov
xlat
loopne
or
pop
movsl
xchg
test
cwtl
cmp
out
ror
cmp
enter
hlt
popf
jo
cltd
in
sub
mulb
mov
xchg
sub
lock
ret
add
jg
jae
dec
out
and
outsb
mov
lods
lods
in
jo
adc
xor
inc
mov
cmpsl
jecxz
sub
mov
inc
sub
out
fcmovnu
push
in
js
lock
lods
andb
sub
xchg
into
and
jnp
les
std
scas
push
mov
ljmp
xchg
icebp
insl
dec
jmp
mov
cmp
pushf
xchg
mov
in
dec
mov
cmp
cltd
inc
dec
jbe
cmp
and
imull
push
and
add
adc
sub
fwait
pop
sbb
mov
rcrl
ja
imul
or
sbb
cmc
cmp
stc
gs
cmp
je
pop
jns
mov
xlat
es
pop
lcall
ds
pop
cmpsb
mov
imul
mov
leave
fwait
mov
test
mov
mov
popa
lods
fcom
imul
push
scas
jae
ret
notl
loopne
ret
pop
roll
or
insb
jmp
jnp
fisubl
cmp
jl
stos
aam
sbb
stos
dec
dec
roll
outsb
ret
mov
stos
pop
dec
sbb
mov
lret
imul
scas
pop
subl
ret
enter
repnz
and
test
aas
cld
jge
push
dec
into
mov
adc
and
into
in
movsl
das
cmp
insl
xchg
in
mov
cwtl
adc
aas
scas
icebp
xor
jmp
insl
out
jno
mov
mov
lret
push
enter
lock
pop
push
gs
dec
xor
lods
cli
hlt
das
std
dec
outsl
and
lcall
mov
cmpb
fsubs
jmp
or
mov
jnp
loope
inc
and
pop
dec
in
out
and
or
mov
dec
das
inc
shll
or
dec
mov
jl
int
scas
mov
and
push
dec
xchg
jno
mov
loop
cld
cmp
cltd
jbe
outsl
adc
fs
inc
daa
inc
mov
inc
sahf
cltd
add
mov
pop
push
dec
xor
loopne
push
mov
loopne
ljmp
icebp
pop
loopne
cltd
jp
addb
movsl
xchg
sbb
sub
hlt
mov
jge
pushf
sarb
sub
aaa
cmpsb
scas
aaa
and
mov
pop
and
push
xor
mov
sub
xor
sarl
leave
inc
sbb
stos
fldenv
sarl
in
pop
sbb
mov
fsubl
std
sub
lahf
in
imul
mov
ds
sub
push
jp
mov
push
mov
xchg
aad
inc
stos
lods
or
inc
lea
jg
and
jo
pop
ret
pop
xor
andb
and
cs
out
mov
jno
dec
jns
lock
inc
sbb
lea
cmpsb
inc
addl
push
rcrb
rdtsc
ds
dec
adc
adc
gs
mov
and
pop
mov
inc
lds
or
sub
ret
pop
clc
repnz
pop
cmp
stos
or
mov
popa
push
add
arpl
cwtl
ja
cmp
xchg
dec
push
aas
mov
pop
fsub
fcmovnbe
aad
in
mov
leave
adc
mov
mov
inc
xlat
adc
adc
stos
pop
pop
mov
pop
jbe
ds
push
mov
mov
sub
shl
sub
dec
sbb
or
je
or
add
jg
mov
pop
jp
inc
jecxz
cmp
mov
mov
hlt
data16
lock
insl
imul
cmc
mov
inc
push
xchg
xor
pop
push
mov
jl
push
enter
and
jnp
pop
push
out
lods
push
xchg
push
jno
repnz
mov
xor
aam
mov
sbb
aas
in
inc
lea
hlt
xor
mov
xchg
push
imul
sbb
inc
xor
mov
add
sbb
push
lahf
xlat
xor
jge
testb
lret
jecxz
fcoml
jmp
jo
adc
xchg
pop
adc
cli
fwait
aas
mov
imul
fnstcw
addr16
pop
out
lret
mov
aaa
adc
imul
aad
lods
ret
sbb
addr16
enter
mov
push
sbb
jb
jbe
or
movsl
stos
test
xchg
scas
leave
mov
mov
dec
clc
fldt
rclb
jl
cli
cmpsb
out
jmp
jno
out
cmpb
nop
sbb
rolb
dec
fcompl
bts
mov
ret
dec
je
cltd
lcall
and
push
dec
push
push
shll
dec
xlat
sbb
aad
push
insl
or
fists
inc
xor
stos
lods
test
call
mov
clc
dec
sbb
jecxz
mov
pop
xchg
push
out
out
dec
jmp
imul
aam
and
movsb
addr16
enter
mov
pop
mov
push
pop
shl
out
jae
mov
push
scas
xor
or
push
jne
lret
sub
rcrb
fld
jle
aam
dec
in
add
xor
into
push
inc
mov
xchg
cmpsb
gs
idiv
adc
and
movsl
rcr
iret
add
in
inc
xor
pop
scas
dec
stos
test
xor
push
xchg
mov
fcompp
mov
nop
adc
daa
loopne
inc
push
mov
mov
mov
mov
cmp
leave
dec
and
addr16
push
ret
clc
pushf
popa
mov
fsubl
inc
sbb
dec
sbb
sub
push
ss
addl
mov
xor
cmp
push
mov
xchg
out
mov
xor
pop
rcll
adc
addr16
ljmp
lcall
ret
scas
cmc
and
inc
adc
pop
and
or
xor
lahf
pushl
aas
add
inc
pop
test
mov
push
sahf
lods
aad
push
adc
nop
mov
sub
mov
pop
imul
pop
jo
daa
dec
out
jbe
xor
fwait
add
jg
xchg
sbbl
cli
dec
dec
mov
cwtl
mov
loope
sbb
mov
push
in
inc
out
push
sbb
out
iret
js
lret
mov
mov
fadds
icebp
add
push
clc
ficoml
shll
lods
jp
jle
rol
pop
bound
xor
pop
hlt
fcomps
pop
and
xor
xchg
add
mov
xchg
mov
fisttpll
addr16
clc
lss
dec
and
inc
and
icebp
popf
mov
aam
repz
mov
cltd
arpl
push
push
rcr
pop
sbb
sbb
lds
enter
das
mov
jg
std
stc
mov
int
jbe
fldl
jge
fld
add
shll
push
gs
stc
and
cmp
fdivl
pop
stos
je
fwait
jmp
pop
add
pop
cmp
popf
aad
cli
adc
gs
inc
inc
sbb
or
cmp
enter
pop
inc
test
js
test
jl
mov
inc
enter
inc
das
pop
xor
fnsave
push
sub
dec
stos
pop
add
lcall
out
shrl
js
pop
or
dec
mov
aad
scas
sbb
xor
xchg
xchg
push
dec
adc
push
insl
jb
inc
mov
sahf
ret
out
cmp
call
add
cmp
pop
and
xor
in
popf
aam
pop
ja
pop
stc
or
ret
add
mov
test
lods
add
sbb
adc
push
add
fs
adc
or
or
lahf
inc
mov
fiadds
pushf
push
dec
insl
cmp
cld
fsts
pusha
out
std
xor
xchg
xor
and
flds
scas
lahf
pop
add
mov
test
test
in
fadd
ret
push
mov
ficoms
ficoml
jno
or
in
dec
push
mov
rorb
cmp
xor
fcom
ret
sub
mov
fstpt
mov
in
loop
aam
ljmp
cld
dec
xor
mov
fiadds
inc
fs
inc
pop
jmp
cmp
fcomip
cmc
mov
adc
push
sub
cmp
push
push
mov
nop
cmp
sbb
andb
mov
push
cmp
lahf
rcll
out
mov
loop
mov
xchg
test
push
mov
or
sti
scas
mov
scas
les
mov
mov
das
sahf
xor
xchg
jno
adc
dec
test
incl
dec
das
sub
sbb
fwait
mov
int3
in
fs
push
sti
fidivs
stos
clc
cmpxchg
ljmp
pop
jle
mov
pop
push
mov
gs
adc
testl
adc
mov
jmp
xor
mov
jle
xchg
in
aad
out
fucomip
sbb
sbb
dec
aad
xor
mov
shlb
add
sub
lret
pop
fcmovnu
mov
lcall
sbb
mov
dec
das
dec
jne
cwtl
jne
cmp
shufps
mov
pop
xlat
flds
test
jns
insb
in
es
int
ret
repz
xchg
adc
sub
outsl
addr16
out
jp
push
je
fcmove
outsl
xchg
orb
mov
mov
jp
rcrl
es
in
rolb
aas
nop
inc
and
fildll
add
mov
push
and
dec
xchg
lock
das
in
lcall
incb
xor
fs
jg
dec
add
fistps
sbb
sbb
leave
sub
or
shrl
sbb
dec
adc
pop
cmp
push
scas
js
inc
jmp
jmp
sub
jns
rcl
repnz
push
lret
call
scas
leave
sahf
shll
inc
scas
dec
leave
stc
jne
rorb
popa
repnz
jmp
mov
inc
push
xor
loop
push
mov
out
dec
imulb
in
inc
jg
xchg
stos
imul
stc
cli
mov
adc
xchg
dec
mov
pop
and
mov
sub
lds
idivb
dec
fs
outsl
clc
mov
fsts
les
das
or
cmp
hlt
push
scas
imul
in
ds
sub
icebp
fwait
jmp
loope
sub
and
fsub
push
mov
adc
andb
shlb
mov
lods
push
mov
lods
and
out
jbe
cs
mov
dec
lahf
sbb
sub
mov
xchg
and
hlt
aas
sbb
adc
mov
je
cmp
testb
cmp
lea
xor
es
in
xor
or
test
dec
mov
daa
push
popf
sarl
stc
data16
sub
test
es
jae
jo
sti
jb
stos
es
stc
call
cmp
mov
popf
jno
push
xchg
mov
repz
int3
or
or
or
fwait
dec
xor
pop
in
loope
mov
jl
das
push
dec
sbb
or
scas
lea
jb
inc
adc
sub
mov
leave
inc
not
sub
jl
add
push
fnsave
fnstsw
adc
or
sbb
pop
loope
insl
in
hlt
and
adc
lret
xchg
shl
xor
insw
nop
fbld
shrl
jne
cmpsb
push
sbb
mov
or
cmp
cmp
test
inc
or
cs
roll
lds
filds
add
std
jno
pusha
scas
lods
lret
movsb
bound
mov
cmp
lea
ds
xor
lods
std
out
add
adc
shrl
mov
xor
mov
icebp
pop
mov
out
lock
dec
es
mov
add
mov
jmp
inc
stc
sbb
mov
dec
fcompl
push
shlb
xor
lcall
pop
pop
dec
or
mov
cmp
push
popf
mov
js
adc
out
sub
push
scas
lods
mov
mov
out
jae
push
clc
ja
dec
loopne
fucom
cmp
jmp
pop
or
cld
mov
cmp
dec
jno
pop
mov
inc
fstl
clc
push
mov
add
adc
jnp
je
inc
add
jns
loop
sub
xchg
mov
mov
jg
outsb
mov
loope
jge
imul
add
std
test
and
es
ljmp
fiaddl
cmp
rcll
enter
rolb
jmp
add
ss
in
mov
cmpsb
shrl
imulb
sub
pop
fcompl
pop
adc
popf
fimull
xchg
dec
lods
push
sbb
mov
sub
inc
add
jp
pop
mov
test
shlb
xchg
addb
jo
pusha
scas
adc
decl
push
lcall
adc
mov
ret
sahf
cmp
out
movsb
flds
movsb
sbb
cmp
and
cmp
es
dec
mov
daa
mov
xchg
xor
aaa
outsb
push
pop
in
hlt
jo
filds
xor
fisttpll
mov
inc
xchg
inc
movsl
hlt
scas
mov
gs
and
cmc
mov
jbe
lret
daa
xor
sbb
fs
test
adc
ss
push
jno
jo
fsubrp
ljmp
adc
jne
lods
push
fsub
in
rcpps
or
inc
dec
orb
push
stos
add
mov
xor
pop
sbb
mov
into
stc
dec
fidivrs
cmpsl
or
xor
push
cmp
movmskps
pop
adc
push
pop
call
psubusw
ljmp
jp
add
mov
xor
xchg
lods
lahf
xchg
xchg
mov
add
or
dec
data16
inc
and
ret
mov
pusha
lahf
mov
mov
dec
insb
notl
jg
iret
xchg
add
pop
sarl
test
not
add
ljmp
test
push
mov
stos
mov
add
loopne
mov
insb
hlt
loope
pop
add
repnz
in
sub
mov
out
pop
aad
mov
mov
repz
or
mov
inc
and
push
stos
pop
xor
dec
ret
mov
mov
jno
in
xchg
xorl
dec
pop
xlat
xchg
je
mov
pop
dec
int
xchg
xor
sbb
pop
shl
mov
xchg
lods
dec
test
push
rclb
jbe
dec
push
mov
inc
nop
dec
and
daa
cmp
ficompl
sbb
mov
hlt
cmpsl
push
xchg
cs
popf
fucom
and
xchg
fmuls
adc
arpl
push
hlt
aas
stos
pop
push
adc
cwtl
jl
cmovge
xor
sarl
jo
add
push
shlb
insb
sub
inc
scas
push
mov
jge
pusha
subl
lods
jnp
dec
aad
shlb
subb
push
loopne
je
fwait
cmp
sub
in
mov
fstps
mov
popf
pop
lcall
arpl
or
fs
aaa
ja
lea
mov
stos
fadds
xlat
hlt
lock
sub
pushf
mov
fsubs
cs
mov
xorl
loope
roll
xchg
scas
aaa
jecxz
xor
ror
das
cmp
ret
mull
mov
xorb
ja
cmp
adc
in
pop
fstpl
and
sub
repnz
test
loop
lahf
jne
and
push
sbb
rcl
push
and
popf
xchg
cld
push
test
aad
pop
test
ja
push
push
mov
mov
dec
lock
sbb
push
dec
push
mov
call
cld
inc
les
or
sub
andl
idivl
stos
roll
aaa
clc
jno
push
mov
xor
bound
fidivrl
xchg
and
mov
jg
scas
inc
dec
mov
mov
xlat
cwtl
dec
jnp
lcall
stos
daa
leave
jg
ret
sub
leavew
in
das
sbb
lods
xor
mov
or
and
add
inc
add
xchg
add
cmc
iret
movsl
inc
into
pop
cmpl
sub
or
test
idivb
data16
clc
or
outsb
gs
inc
int3
stc
mov
rcll
jge
mov
shrb
pop
inc
push
xor
shlb
loop
dec
xchg
adc
ret
and
and
pop
mov
lods
push
cmp
mov
data16
pop
sbb
out
jbe
movsl
jg
push
fldenv
aaa
call
ret
repz
pusha
fstps
enter
test
cmp
loope
sbb
mov
push
push
adc
sti
enter
pop
cmc
mov
jge
jne
xor
sub
aam
push
push
and
leave
mov
mov
cmp
rcl
rorl
push
mov
pavgw
outsb
push
mov
imul
inc
fs
dec
lahf
inc
int3
pop
mov
nop
rorb
xor
fstl
jl
rolb
movsl
jge
inc
ja
mov
cmp
loop
repnz
les
mov
sti
dec
ds
fnstcw
dec
jecxz
cmp
cmp
cmp
jbe
push
gs
jb
decb
das
and
push
sub
cmp
dec
xor
repz
aam
jbe
push
pop
out
cwtl
cltd
adc
movb
mov
aad
mov
mov
jge
dec
aas
mov
mov
lock
popf
addr16
push
pop
xlat
fisttpl
aam
nop
pop
shr
mov
lock
and
pop
mov
call
ljmp
cmp
lcall
out
fcmove
fmulp
pop
add
fmulp
push
jbe
mov
dec
movsb
test
inc
xchg
adc
fisubl
les
push
ljmp
test
push
or
fsts
xchg
mov
push
sub
add
sbbb
icebp
mov
ss
clc
lahf
aas
in
pop
jo
push
into
pop
sub
push
jae
shr
gs
stos
les
or
int3
xor
xor
aaa
cld
adc
adc
movsl
lret
shrl
add
add
cmp
lods
ds
add
cmpxchg
inc
mov
jl
mov
jnp
jb
cwtl
push
imul
mov
pop
mov
mov
stos
aad
cmp
flds
and
rolb
fidivl
in
xor
lds
aas
xor
in
push
xchg
sbb
mov
mov
pop
xor
xchg
dec
les
push
mov
sub
pop
mov
mov
jne
leave
push
clc
dec
dec
andb
insl
cmc
adc
inc
movsb
nop
stos
test
pop
xor
mov
mov
and
or
sbbl
mov
lds
cmp
inc
rcrb
cmp
xchg
sub
xabort
test
mov
out
pop
js
lcall
mov
push
scas
sub
mov
dec
roll
lcall
ret
sub
and
push
or
jne
push
lcall
pop
fmull
push
jl
loop
fucomip
jecxz
in
ljmp
xor
xchg
bound
or
jg
mov
dec
scas
dec
mov
ss
sbb
insl
ds
fwait
mov
or
lahf
xchg
pop
xchg
loop
in
clc
sbb
bound
push
adc
testb
dec
and
in
sbb
loopne
fs
in
inc
inc
mov
xor
add
xor
mov
push
inc
xor
dec
pushf
out
cmp
xlat
ljmp
mov
sub
jp
stc
and
pop
dec
push
std
enter
out
lock
pop
cs
gs
xchg
stos
cmpsb
inc
add
in
ror
setl
jmp
cmp
dec
dec
outsb
stc
into
loop
shlb
iret
in
cltd
sbb
pop
mov
insl
test
push
ret
addw
inc
es
lea
lcall
mov
pop
xchg
hlt
fdivl
pop
jle
cmc
insb
jp
xor
out
inc
test
sbb
fcompl
sub
pop
sarl
mov
or
and
mov
enter
mov
or
inc
cmp
push
or
jae
sbb
sub
cmp
or
mov
adc
stc
push
out
cmp
ja
mov
outsl
nop
jl
pop
clc
jl
in
pop
jg
std
test
and
mov
repnz
sbb
dec
scas
in
in
into
or
in
jp
jns
pop
jge
stc
jg
das
mov
ficoms
or
mov
rcrl
adc
scas
mov
mov
rcr
lods
cmp
mov
cmp
mov
aam
push
push
adc
clc
scas
xchg
idivl
or
mov
pop
insb
negl
jno
jmp
mov
pop
insb
jae
jge
es
push
push
ss
movsl
push
inc
add
es
sbb
inc
xchg
loop
push
fdivl
js
in
xor
test
add
sahf
xor
pop
inc
lahf
fcmovbe
popa
out
out
push
add
add
icebp
xchg
dec
das
rcll
mov
inc
nop
jo
hlt
cli
out
jne
cmp
xor
cmp
cmp
dec
dec
arpl
aam
lcall
mov
movsb
and
lret
fisubs
lahf
sbb
fildll
insl
sbb
ret
and
pop
jecxz
mov
ljmp
push
sub
cwtl
shll
cmp
fnstenv
mov
imul
scas
stos
sti
jno
push
add
mov
xlat
movsb
cmp
fcoml
mov
decb
mov
xchg
or
mov
adc
notl
icebp
inc
mov
inc
mov
mov
outsb
mov
push
out
cmp
or
cmc
or
add
cmpsb
adc
or
gs
into
jge
jno
les
add
push
inc
enter
jne
jbe
repz
xchg
bound
mov
mov
add
cltd
xor
lahf
insb
mov
dec
js
mov
mov
sub
enter
jle
and
jl
xor
sti
cli
lods
sbb
cmpsl
push
mov
cmp
adc
ret
int3
movsb
lret
push
sub
movsb
ds
pop
pushf
sbb
mov
mov
mov
icebp
xchg
mov
lcall
cs
rcll
in
loopne
test
push
push
ret
push
insb
jb
popa
es
pop
shlb
aad
cmc
dec
out
fcmovbe
dec
sti
mov
sbb
leave
cmpsb
inc
xor
in
xor
ret
aaa
sub
push
roll
in
mov
daa
and
hlt
lcall
outsl
add
mov
dec
mov
fbstp
lret
ret
dec
mov
cmp
fs
daa
lret
lock
cmpsl
sbb
jle
xor
adc
dec
cmpsb
js
cld
and
pop
mov
inc
mov
push
pop
xchg
fwait
test
imul
xor
pop
mov
dec
mov
xor
repnz
add
pop
push
js
push
fiadds
idivl
mov
or
push
lret
xchg
pop
add
inc
fs
inc
mov
roll
jge
mov
hlt
sub
aad
push
negw
dec
shrl
mov
jl
lods
clc
inc
mov
cld
inc
ljmp
call
push
xor
mov
rcrl
xorl
dec
pop
stos
sub
sub
jmp
ficompl
aad
loopne
popf
adc
adc
jg
cmp
mov
shlb
jb
inc
hlt
inc
adc
mov
jns
jl
ret
cmp
sbb
pop
or
pop
inc
dec
cmp
inc
pop
in
cwtl
ljmp
dec
add
fwait
pop
fdivrp
insl
mov
gs
push
fwait
incl
es
jno
imul
loop
add
xor
lea
jmp
jno
imulb
add
mov
in
jg
dec
fcomps
xor
das
enter
adc
js
adc
xor
dec
or
mov
mov
fwait
lret
push
mov
fbstp
mov
mov
insl
test
int
out
mov
and
add
pop
cmp
and
cmp
in
mov
test
jne
nop
clc
jmp
mov
negb
jge
adc
xor
punpckhdq
mov
adc
nop
xor
xchg
cmp
imul
bound
loope
daa
adc
jne
es
lods
xor
fsqrt
mov
mov
out
aad
aas
push
mov
or
je
mov
movsb
sti
fsubr
fstpt
enter
mov
dec
push
leave
outsl
nop
cli
mov
aaa
fs
fs
pop
test
insl
decl
jge
daa
or
loop
mov
mov
cmp
jb
dec
fld
and
jle
jno
jno
aaa
leave
int3
mov
daa
push
inc
stc
out
push
imul
mov
pop
outsb
xor
out
mov
push
jmp
movsb
outsb
xorl
sub
push
repz
stos
or
aaa
shl
push
cmp
lds
jecxz
push
gs
ret
test
repz
ret
aas
mov
sbbl
push
inc
dec
mov
movsb
push
xor
xchg
add
pop
sarl
pop
cs
xor
sbb
jmp
pop
stc
dec
adc
jbe
out
aam
adc
xchg
add
push
adc
clc
mov
add
iret
lds
jl
sbb
add
fcomi
cmp
mov
shrl
lds
xor
adc
cli
repz
mov
lret
sub
sub
fildl
decl
mov
lret
jno
pop
sbb
pop
cli
jp
insb
addr16
jbe
jp
jmp
imul
adc
rorb
push
sahf
test
dec
mov
inc
mov
mov
das
test
imul
dec
mov
push
push
push
imul
js
inc
dec
add
lea
into
fsts
fldl
push
cmpl
pminsw
push
mov
hlt
push
pop
pop
mov
and
inc
mov
sub
lods
cmpl
movsb
mov
add
jl
sarb
push
inc
jb
in
and
mov
push
jno
in
cmp
leave
int
cwtl
push
adc
cld
cmp
push
push
xchg
std
ljmp
mov
fmull
pop
mov
xchg
cmp
xor
std
test
and
cmpsb
imul
repnz
mov
repz
out
out
imul
flds
adc
fs
popa
jge
leave
dec
ret
mov
sti
add
jl
adc
repz
enter
stos
shrl
sub
pop
arpl
pop
rsm
ljmp
cmc
dec
sub
in
test
out
cmc
dec
nop
scas
fisubl
xchg
add
in
dec
les
push
rol
ret
xchg
and
sub
in
arpl
out
sub
xor
mov
incl
mov
test
mov
push
aaa
mov
push
pop
cmpl
jae
leave
dec
shlb
add
int3
inc
pop
fs
icebp
das
insl
mov
cmpsb
inc
push
mov
fisttpll
mov
jne
fisubl
jl
xchg
and
mov
inc
test
jb
inc
push
jmp
lea
cmp
test
pushf
push
cmc
mov
out
inc
stos
jae
or
pop
outsb
and
mov
cli
fwait
push
js
mov
cmpsl
int
pop
shll
repnz
pop
adc
xlat
pop
cmp
outsb
hlt
filds
sub
cmpsl
pop
push
aas
lea
push
xchg
lds
cltd
movsl
aad
push
mov
ficoms
lods
imul
inc
mov
sbb
in
or
sub
cmpsl
stos
clc
pusha
mov
sti
icebp
fistps
fs
adc
cltd
sbb
ds
mov
xor
pop
sub
movsb
bound
repnz
push
ss
jae
and
mov
cltd
scas
push
jmp
test
push
pop
xchg
in
or
jp
push
out
pop
loopne
rcll
add
add
xor
jge
jbe
mov
xor
or
scas
xchg
adc
push
nop
add
leave
insl
test
xchg
cmc
xor
lock
xor
cwtl
jg,pn
aaa
or
pushf
sbb
sti
inc
cld
push
push
mov
and
fmull
in
popa
adc
out
ds
cmp
jno
mov
gs
or
sub
andl
jns
mov
dec
xor
jb
jne
icebp
ja
inc
sbb
xchg
sbb
jno
les
mov
insl
hlt
std
into
inc
sub
or
cld
xchg
lods
mov
shll
mov
add
lods
xor
int3
fsubl
cmpsb
inc
fldenv
out
or
mov
iret
inc
cwtl
shll
imul
shl
inc
rorl
add
sti
in
and
mov
xchg
es
pushf
pop
cli
movsl
out
xchg
cmp
push
xchg
test
rcr
cmp
xor
cld
xchg
scas
xchg
adc
ja
lahf
mov
mov
xchg
cmp
stos
iret
push
test
cmp
sbbb
aas
lods
jle
cmpsl
xchg
mov
mov
aas
mov
lods
adc
popl
sub
gs
lods
in
in
div
arpl
imul
jo
and
out
sbb
popf
adc
sub
mov
es
adc
js
shlb
mov
cmp
jno
jae
sub
jne
mov
std
xlat
bsf
daa
gs
outsb
testl
xchg
lcall
cld
and
dec
xchg
or
sub
cmp
lods
mov
ficoml
imul
adc
add
sti
mov
pusha
jns
fwait
lods
test
sub
shlb
mov
push
pushf
xor
in
add
push
push
fdivs
or
push
insl
sbb
mov
xchg
int3
gs
xchg
jns
lret
mov
repnz
or
pop
loopne
sbb
mov
add
stos
ss
lcall
pop
insl
sub
sub
dec
inc
push
cmpsl
nop
or
stos
dec
xchg
mov
movsl
addl
mov
adc
rolb
rcrb
mov
sbb
shl
mov
jae
shll
dec
sbb
popf
in
mov
dec
mov
movsl
jnp
push
dec
cmp
sub
imulb
mov
out
rclb
push
pop
jbe
and
dec
leave
xor
scas
push
lock
dec
ds
cld
mov
or
fbstp
push
inc
in
push
cwtl
rclb
ret
cmp
addr16
mov
popf
adc
roll
loop
outsb
stos
jo
out
outsb
lahf
adc
mov
shl
test
lods
clc
repnz
call
insl
sbb
jp
imul
xchg
repnz
jp
test
xchg
dec
push
and
stos
shrl
hlt
jbe
loopne
and
push
xchg
pop
ss
jo
mov
ss
imul
iret
pusha
lahf
in
cmp
push
push
rorl
mov
inc
negl
or
or
icebp
popf
dec
push
adc
testb
ficoms
and
sbb
fisubrs
dec
adc
adcb
jno
push
pusha
cmp
fnstenv
fxam
cmpl
mov
daa
cs
adc
ret
in
cmp
push
insb
imul
cmpb
mov
push
push
inc
jle
dec
push
dec
dec
jge
scas
out
and
dec
stos
bound
lea
lcall
ret
in
pop
xor
fnstenv
repnz
repz
jnp
arpl
nop
and
xchg
push
arpl
lea
jmp
das
mov
sub
sti
xchg
mov
inc
arpl
xor
inc
xchg
dec
dec
add
and
lcall
outsl
xor
aaa
add
inc
andl
xchg
mov
ja
mov
sbbl
inc
xlat
xchg
sub
ret
add
cmp
movsb
sbb
das
ret
hlt
mov
out
jb
or
xchg
pop
mov
jb
ret
inc
mov
popf
leave
xlat
inc
subl
aad
or
or
call
das
leave
sub
in
addl
mov
inc
mov
cli
inc
cli
insw
adc
fisttps
fwait
jecxz
ror
dec
xor
in
mov
jo
xchg
push
pop
std
xchg
and
js
call
xchg
mov
lea
jae
mov
push
scas
loopne
data16
cmc
je
adc
lret
loope
push
les
jl
aas
lock
xor
cmp
mov
dec
xor
lahf
punpcklbw
ret
pop
xor
nop
nop
data16
enter
sub
jl
stos
mov
pop
mov
pop
rcll
sbb
cmpsl
cmpsl
ljmp
cmpsl
shrl
clc
clc
imul
cmp
mov
sbb
push
es
and
jo
ret
fisttps
lcall
cld
aaa
popf
jnp
cmpb
mov
jo
pop
idivb
push
mov
pop
dec
xchg
inc
pop
add
ja
inc
pop
ret
xor
pop
xchg
cmp
dec
js
sti
xchg
mov
dec
test
scas
push
in
jle
leave
sbb
stc
pushf
outsb
jg
mov
shlb
pop
and
adc
xlat
fildl
inc
or
xor
out
mov
inc
adcl
push
into
jmp
insb
out
clc
lret
jnp
into
jle
cmp
mov
pop
idivb
dec
imul
mov
mov
stos
pop
sbb
fdivs
sti
gs
gs
lcall
adc
fimuls
mov
push
cmpsb
aas
mov
inc
in
ret
cmp
cwtl
xchg
xchg
icebp
leave
popa
sub
xchg
mov
es
repnz
xchg
out
push
adc
sbb
cltd
imul
fcompl
shrd
mov
and
mov
data16
rorb
sbb
dec
test
and
cmp
push
pop
jl
scas
cld
add
dec
inc
shll
xor
or
pop
push
mov
inc
ja
call
cmp
xor
cmpsb
and
mov
jae
das
mov
gs
xchg
loopne
pushf
dec
mov
int3
cmpsl
sub
inc
data16
inc
jnp
mov
aad
imul
addr16
dec
loopne
je
mov
mov
inc
jae
push
mov
push
and
sub
fstl
test
sub
repnz
addr16
std
adcl
idiv
ret
testl
das
into
jnp
not
in
lods
inc
add
les
jp
jae
push
cli
sbb
xchg
push
mov
push
sahf
sub
fdivp
xlat
jnp
add
imull
shlb
cmpsl
inc
sub
push
ret
jns
push
fcomp
dec
adc
out
ljmp
ds
lret
fldenv
lahf
cltd
and
xor
sub
mov
stc
enter
stos
daa
jg
cmp
push
fisttps
out
hlt
and
jnp
std
xorb
pop
xlat
lock
jo
xchg
dec
rol
inc
cmp
cli
jl,pt
or
inc
xchg
fcmovnbe
stos
sub
insl
sbbb
and
xchg
dec
xor
cwtl
ret
aad
jno
jp
js
mov
jecxz
jmp
xchg
cmp
jns
push
or
loop
test
out
das
mov
cld
popf
ljmp
addr16
aas
cmpsl
loop
mov
cmp
mov
jp
add
push
pop
fcomps
stc
orb
mov
xchg
mov
std
or
cmpsl
lret
pop
inc
iret
imul
in
fsubrl
xor
cmp
enter
push
sbb
add
jle
lea
in
jp
lods
loope
popa
xor
inc
xchg
lret
dec
lods
ds
jae
lods
mov
std
mov
cmp
mov
mov
or
sub
ja
inc
rcrb
dec
add
jnp
push
xchg
scas
mov
mov
sbb
mov
inc
adc
mov
stos
loopne
adc
mov
js
push
imul
and
insl
xlat
adc
jae
cmpsb
inc
bound
shll
test
dec
and
cli
pop
cmp
ljmp
jge
mov
mov
stc
ffree
fstpt
std
testl
cli
in
jb
dec
rep
fcomps
gs
fadds
jns
jp
ljmp
cmp
mov
sarl
clc
loopne
xchg
int
sub
hlt
sar
adcb
out
inc
in
and
mov
cmp
and
cmp
leave
pop
rol
sub
bnd
adc
leave
gs
xchg
and
mov
lea
mov
jnp
push
mov
mov
lret
int3
hlt
sti
inc
movsl
movsl
jnp
xchg
ja
test
and
test
sbb
sti
mov
push
push
and
inc
pop
jmp
mov
mov
mov
popa
or
xor
lahf
cmp
push
pop
and
add
cmp
mov
adc
nop
test
arpl
push
adc
jge
fisubs
in
mov
fldt
lahf
out
jbe
adc
xor
inc
push
bound
mov
es
and
sbb
cltd
adc
xchg
add
cmp
aad
push
ljmp
inc
cmp
sbb
sahf
std
push
jmp
das
jmp
pushf
mov
or
nop
push
popf
ja
mov
into
cs
stos
test
test
cli
push
push
adc
fcom
dec
mov
addr16
subb
ja,pn
and
push
mov
cmp
sub
inc
mov
lods
mov
sbb
pop
addr16
mov
lods
movsl
ss
pop
daa
add
sbbl
enter
addb
pop
gs
fiadds
add
ss
adc
push
arpl
sub
or
add
pop
fsubrs
gs
fcoml
decb
negl
repnz
xor
jmp
adc
xchg
mov
dec
adc
xchg
xlat
mov
filds
lret
movsl
push
jae
cmp
sbb
and
and
and
xor
mov
and
les
stos
daa
in
enterw
loopne
mov
inc
mov
stc
push
jo
clc
fmul
sbb
mov
shlb
lea
pop
xchg
test
and
xchg
sub
and
mov
mov
sbb
out
push
sub
addr16
je
jp
push
loopne
gs
mov
mov
push
pop
sbb
pop
mov
cmp
and
mov
mov
call
sub
mov
lahf
cmp
mov
lods
or
clc
lcall
inc
pushf
xchg
lea
sti
cmp
mov
movsb
add
pop
outsl
inc
mov
xor
mov
scas
jns
outsb
iret
in
adc
sbb
stos
sbb
out
ljmp
xchg
xorl
icebp
or
and
xor
int3
bound
sarl
mov
fs
iret
nop
sbb
pusha
call
pop
fwait
cli
push
jle
ret
notb
push
adc
xchg
inc
push
adc
shl
mov
mov
mov
inc
pop
or
inc
mov
arpl
adc
scas
adc
movsb
bound
test
push
cmp
lds
pop
xchg
xchg
lret
jns
sbb
mov
xor
jno
push
pop
fcmove
int
aam
lahf
push
dec
sbb
or
in
jg
sub
and
xchg
aam
fldenv
cmp
gs
pop
adc
ficomps
xor
test
xor
pop
insb
js
add
mulb
arpl
jle
mov
sysenter
inc
mov
adc
loopne
lahf
scas
fldenv
add
dec
dec
inc
push
arpl
xchg
js
sbb
sub
mov
bound
lods
imul
dec
rcrl
lock
pop
ljmp
add
rorb
mov
pmuludq
mov
lock
loope
outsl
cmp
add
lods
dec
stos
idivb
fcompl
push
xor
sarl
mov
aam
clc
testb
xchg
push
push
and
jmp
rcll
mov
gs
inc
fidivrl
or
mov
lea
int3
jle
mov
sbb
lahf
mov
xchg
loopne
fnsave
lret
dec
mov
in
jge
frstor
movl
xlat
fisubrs
cld
sub
es
add
test
cmp
test
mov
jne
jne
cmp
xor
lods
aam
pop
rcl
lock
in
imul
jae
add
or
test
jl
mov
lods
mov
push
hlt
or
cli
sti
stos
ret
mulb
rol
mov
aaa
xchg
pusha
aad
divl
push
fimull
pop
bound
fstl
xor
outsl
jmp
aad
decl
mov
add
inc
jp
nop
cli
add
jae
std
bound
outsl
and
lea
and
jno
mov
sbb
out
enter
out
and
lret
pop
fildll
in
jl
xor
lret
inc
add
rclb
addr16
sub
jns
insl
cwtl
loope
mov
sub
testb
xor
mov
sbb
push
mov
shrl
dec
mov
inc
test
xchg
cmpsb
sahf
adc
pusha
inc
and
js
scas
and
jp
cltd
jae
lods
out
aad
xchg
pop
pop
add
adc
fcoml
fists
sbb
sbb
and
ret
jns
insb
cltd
int
jo
cmp
cmp
hlt
out
jnp
push
mov
gs
stc
sahf
and
mov
mov
andl
push
fnstcw
in
cmp
dec
lock
out
inc
cs
push
lret
sbb
mov
jl
adc
cltd
arpl
xor
test
in
lock
jl
dec
mov
mov
aam
pop
fstps
push
add
push
mov
mov
mov
in
push
lcall
ljmp
pop
jns
lret
cs
shlb
push
icebp
xchg
leave
and
stc
mov
in
cmpsl
xchg
scas
inc
rclb
push
xchg
frstor
inc
pop
imul
or
push
icebp
loope
leave
cmp
mov
call
cli
inc
cmp
or
subl
inc
dec
es
add
imul
aas
dec
lds
aaa
popf
xchg
pop
cmp
xchg
xor
mov
les
popf
mov
imul
xor
dec
inc
movsb
dec
xor
inc
mov
sbb
jecxz
pop
out
in
lahf
jle
test
inc
adc
into
roll
xchg
jbe
inc
shll
pushf
int3
rorl
xchg
cmp
repnz
xlat
push
sub
inc
cli
cs
and
popf
in
push
xchg
mov
sub
movb
fistps
cltd
test
pop
xor
dec
add
push
fs
pop
dec
in
mov
mov
pop
repnz
popf
adc
sbbl
add
loope
test
cmp
jnp
lahf
xor
pop
dec
cmc
pop
in
ja
cmp
jo
sub
test
lahf
test
mov
sti
aad
xchg
jl
add
sbb
popa
mov
and
repz
jae
sbb
jnp
aad
arpl
test
aad
pop
inc
sar
cmp
sub
outsb
mov
cli
inc
mov
inc
jb
rcr
add
cmpsl
add
jno
lods
negl
test
mov
cli
mov
sahf
mov
lret
xchg
es
inc
mov
add
fdivrs
repz
test
leave
jns
aam
jb
pop
ret
mov
or
jne
mov
mov
add
arpl
and
pusha
mov
iret
push
push
and
xchg
loope
mov
mov
pushl
mov
add
call
sub
inc
dec
xor
adc
movsl
in
mov
shl
sbb
imull
push
data16
scas
int3
mov
stos
jecxz
es
sbb
jne
test
mov
or
lret
sub
xchg
and
aaa
jmp
push
das
movsb
popa
in
xor
test
aad
adc
add
adc
mov
outsl
inc
push
arpl
sub
adc
mov
and
arpl
dec
add
jp
fisubrs
or
fiadds
lret
je
xor
movb
fwait
pop
xchg
jno
cmp
sub
iret
mov
test
out
jnp
adc
daa
xlat
test
int
cmp
in
mov
cmp
push
roll
adc
add
scas
cmp
test
aaa
sub
cs
cmp
adc
hlt
shlb
into
lcall
das
mov
mov
cli
mov
outsb
insb
loope
inc
push
shlb
add
adc
dec
fs
mov
mov
or
add
fwait
dec
jl
iret
xchg
inc
jno
fdivs
inc
cmp
push
daa
notl
or
cld
cpuid
shll
inc
add
mov
aad
pop
sub
adc
xchg
sbb
and
cld
or
or
popa
push
push
xor
addb
lea
out
sub
es
stc
into
push
pop
mov
push
adc
insl
fsub
loopne
js
push
push
cltd
repz
adc
xor
ret
jp
mov
cmp
addr16
imull
add
xchg
push
out
mov
pop
inc
adc
xchg
dec
and
xor
cmp
pop
out
loop
pop
mov
decl
push
lcall
adc
cmp
add
mov
and
or
shl
and
xchg
into
mov
add
cmp
bound
sti
mov
add
addl
lcall
rolb
stos
aad
inc
adc
clc
cmpsl
mov
out
dec
ror
jl
or
xlat
int3
neg
push
mov
lods
add
mov
daa
jae
mov
pop
icebp
fdivp
das
andb
adc
mov
xor
mov
movsb
lahf
out
in
mov
dec
pop
xchg
scas
pop
lret
jnp
mov
outsl
mov
push
mov
lret
dec
push
sub
ja
push
pop
clc
mov
dec
push
sbb
jmp
mov
fdivs
pop
insl
cli
mov
and
repnz
stos
mov
xchg
pusha
push
sub
loop
out
inc
andb
push
xchg
lea
cmp
xor
lcall
sub
jp
cmp
xchg
sahf
cltd
repnz
mov
repz
fcomps
inc
jecxz
inc
fiaddl
and
lahf
cmp
loopne
dec
push
outsb
out
aaa
mov
push
mov
dec
insb
pop
sub
and
mov
push
mov
pxor
mov
das
adc
add
sti
fdivl
mov
mov
xor
ljmp
xor
pop
jmp
pop
mov
in
bound
push
push
dec
cwtl
sbb
and
pop
sbb
cmp
mov
or
dec
pop
mov
dec
loope
mov
push
pop
jle
ss
loope
arpl
aaa
loop
mov
mov
sahf
ja
inc
xor
outsb
mov
xor
adc
cmp
in
dec
rclb
adc
xchg
arpl
data16
daa
jmp
aad
loope
cld
pop
cmp
loop
decb
les
xchg
xor
or
lret
xchg
shrb
jl
jns
jge
cmp
push
or
lods
addl
enter
ret
add
xchg
sub
cwtl
inc
or
les
or
mov
adc
ljmp
fidivl
fwait
add
je
std
dec
xchg
mov
push
repnz
inc
loopne
mov
xor
mov
push
push
dec
movsl
inc
inc
bound
lods
inc
jmp
dec
add
xchg
clc
sti
adc
in
imul
arpl
mov
shlb
add
cs
je
pop
data16
add
mov
jb
int3
mov
dec
outsl
push
xor
cmp
insb
pop
and
xor
sbb
inc
xor
jl
mov
mov
stos
cmc
sbb
lods
push
aaa
arpl
cmp
sub
dec
mov
jmp
movsb
mov
aad
inc
mov
test
mov
fwait
jle
xchg
repnz
test
mov
mov
sbb
jecxz
inc
mov
lret
xchg
jbe
cmpsb
and
and
add
push
insb
je
sbb
sbb
pop
pop
bnd
xlat
popf
jb
cmp
mov
cmp
pop
out
sub
dec
aaa
mov
stc
pop
pusha
cmp
and
scas
mov
mov
or
cmp
push
push
sub
mov
mov
jno
cmp
xor
popf
int
lods
ret
mov
and
rorb
test
loopne
pop
les
jp
mov
mov
movsb
mov
xchg
cs
xchg
xchg
and
subl
fs
cmp
and
xchg
mov
call
loope
xor
mov
jmp
cld
push
add
cmovb
add
in
testb
adc
cli
call
lret
movsl
pop
lret
pop
outsl
adc
icebp
stos
add
std
pop
imul
shrl
mov
test
bound
xchg
cmp
xchg
pop
fs
jl
mov
scas
daa
repnz
popf
loopne
int3
jb
push
and
aam
divb
andl
imul
sub
jle
shlb
sub
outsb
lea
test
movaps
lcall
stos
inc
lock
xor
jmp
in
push
das
jns
push
out
push
sbb
jno
adc
dec
lcall
int
xor
in
pop
cmp
dec
xor
cmp
cmp
repnz
es
jp
mov
ret
rclb
popf
and
xchg
cltd
mov
add
pop
clc
fistps
std
xor
mov
sbb
std
add
sub
testl
in
in
inc
clc
and
push
dec
jg
inc
insl
int
stos
mov
addr16
lock
sub
inc
mov
mov
in
xchg
push
or
jno
pop
out
faddp
pop
mov
arpl
push
sahf
dec
daa
ret
or
repz
fisubl
cwtl
in
jl
xlat
icebp
push
stos
adc
add
jmp
push
mov
jecxz
mov
aas
inc
bound
or
negb
inc
sbb
sub
popf
ret
jmp
jp
movsb
adc
or
fs
sbb
dec
stos
xor
xchg
fstp
mov
adc
shlb
rcll
xchg
int
pop
aad
jae
clc
adc
inc
sbb
mov
adc
dec
stos
loop
mov
out
lock
enter
addr16
jno
movsl
adc
addb
jae
rcll
enter
roll
or
fistl
ljmp
sbb
mov
faddl
dec
jl
js
inc
sbb
and
push
fst
ja
shl
pop
hlt
addr16
cmpsb
adc
and
xchg
add
and
pop
in
scas
ds
shl
lcall
jp
out
push
repnz
lcall
pushf
call
push
push
loopne
and
add
test
xor
jg
jg
pop
mov
mov
sbb
mov
push
pop
cmpsl
pop
mov
imul
sbb
mov
push
dec
mov
test
ret
jl
aad
adc
sbb
cmp
imul
cltd
dec
or
push
jge
cmp
jle
inc
xchg
mov
repz
loop
imul
lret
cmp
xchg
fadds
scas
mov
push
iret
mov
lods
xor
fwait
push
jecxz
ds
mov
push
clc
in
cmpsl
xlat
loope
movsl
sbb
add
add
add
jle
mov
lcall
sub
add
pop
sar
dec
loopne
scas
loop
cmp
ds
add
adc
jecxz
dec
insb
aas
out
inc
iret
cmp
and
fsubrl
xchg
call
insb
popf
and
int
mov
jle
push
xor
mulb
mov
cmp
inc
testl
cltd
xchg
pop
inc
int
mov
enter
cmpsl
gs
mov
popa
cld
scas
stos
cli
sbb
scas
sbb
lcall
adc
pop
xor
or
mov
pop
mov
fucomip
or
stc
ss
cs
sub
adc
popl
mov
push
push
sti
adc
loope
jae
and
sahf
stos
insb
xchg
lret
and
rcr
xor
loopne
inc
xchg
je
dec
stos
loopne
xor
pop
icebp
cwtl
movsb
jnp
inc
add
xchg
es
rcr
fwait
arpl
int3
movsl
fnsave
cs
push
inc
xchg
mov
push
and
out
pop
pop
sub
lcall
pop
jg
push
jge
inc
lret
pop
movsb
sbb
pop
xorl
push
mov
sbb
cmpsb
les
and
ficompl
mov
insb
popa
rsm
mov
cltd
stos
pop
sub
pop
and
mov
or
or
cmp
inc
mov
ds
and
cmc
lret
push
es
mov
sahf
imull
xchg
ja
add
mov
int3
push
pop
xchg
aam
stc
es
repz
rcl
jae
lds
aas
js
into
jae
mov
mov
add
loopne
push
inc
mov
leave
xor
out
xor
cmc
imul
jne
inc
dec
xor
mov
rcr
movsl
mov
cmp
nop
sar
fwait
adc
dec
jno
lcall
mov
leave
dec
jl
or
push
clc
push
outsl
aam
dec
enter
xor
addr16
pop
negl
pop
popf
hlt
out
xchg
adc
scas
pop
mov
push
stos
popa
mov
fstpl
mov
test
enter
mov
cmp
loopne
fwait
inc
push
fld1
xor
ljmp
test
sub
push
fiaddl
pop
jg
rclb
clc
sub
fsubrs
outsb
insb
ss
daa
jnp
mov
imul
test
push
inc
and
adcb
mov
das
adc
lahf
cmpsb
repnz
shl
fbld
fs
cmp
inc
dec
imul
sti
ds
leave
xchg
andl
push
push
cmp
sti
mov
mov
sbb
orl
es
xchg
lret
incl
movsl
les
push
mov
and
stos
pop
les
mov
rorl
mov
cmp
mov
mov
xor
and
pop
int3
inc
data16
pop
push
jecxz
mov
push
stc
sbb
pop
xor
cmp
repz
sbbb
shll
xor
xchg
jo
fs
rcl
xchg
or
out
mov
mov
add
out
stos
call
inc
xchg
in
stos
or
test
xorl
xor
jmp
mov
and
and
repnz
xor
sahf
iret
aam
push
out
cmp
mov
xor
icebp
rol
inc
into
add
and
push
jl
and
cltd
es
and
imul
icebp
adc
push
mov
sbb
movsb
sbb
mov
jbe
pop
mov
xchg
mov
mov
or
pushf
rol
es
repz
dec
test
pop
pop
mov
jae
and
xor
sub
lods
sbb
enter
outsl
push
mov
jecxz
adc
out
or
sbb
adc
sbb
fisubrl
pop
mov
clc
add
scas
mov
mov
push
jl
pop
test
int
inc
push
fsubl
mov
jle
ss
inc
jmp
dec
pop
loopne
mov
out
ret
push
xor
sub
cmp
sub
scas
lret
dec
and
rcll
mov
negl
lds
adc
sahf
lcall
jnp
cmp
jno
loop
mov
and
push
cmp
add
aas
mov
scas
sahf
test
insb
sub
mov
add
pop
stc
aaa
pop
or
cmpsl
in
into
push
test
in
mov
jle
in
push
stos
cmp
pop
mov
popa
je
popa
inc
and
sbb
mov
jl
xor
dec
xchg
adc
mov
ffree
cmpb
push
push
xorb
jp
xchg
cmp
mov
push
xor
mov
lret
stos
dec
ret
xor
inc
sub
push
mov
sbb
lods
stos
push
flds
sahf
mov
mov
mov
mov
xlat
add
xor
jmp
dec
cwtl
and
xor
xchg
or
dec
fwait
sub
lea
xchg
jns
push
and
daa
sub
add
outsb
fidivs
mov
test
cmp
sbbl
cld
popa
test
cwtl
xor
mov
outsl
hlt
into
arpl
lahf
std
icebp
aad
stos
dec
das
pop
push
mov
mov
bound
aas
and
inc
jmp
xor
stos
stos
packssdw
fiaddl
jbe
push
add
sbb
jbe
and
xor
mov
ret
pop
loope
dec
jns
cmp
sub
mov
jo
lds
jge
stc
add
mov
inc
dec
pop
dec
ret
mov
fwait
pop
sub
sbb
hlt
add
dec
xchg
pop
rcrl
enter
and
fs
jg
in
sbb
fs
or
in
xlat
je
dec
and
cmp
ret
scas
cs
xor
jmp
bound
dec
subb
xor
mov
cwtl
xorl
sbb
xlat
inc
xchg
adc
push
dec
cmp
imul
jmp
dec
mov
add
xchg
and
imul
mov
pop
and
mov
xchg
sub
xchg
js
add
imul
insl
imul
mov
mov
dec
or
jo
inc
sbb
jns
mov
insl
jo
dec
out
xchg
movsl
mov
es
fstl
xchg
dec
mov
xchg
mov
movsl
xor
adc
push
xchg
imul
and
or
mov
xchg
push
xchg
mov
stc
add
pusha
out
sub
cld
push
add
nop
pop
mov
leave
mov
jne
adc
mov
mov
pop
xchg
aas
leave
xchg
scas
cmc
movsb
in
cltd
lcall
pop
into
icebp
xchg
mov
cmpsl
stc
jle
fistpl
daa
icebp
push
addl
xchg
pop
or
inc
fbstp
adcl
divl
fwait
sub
push
mov
fistpl
adc
adc
xor
xchg
cltd
push
gs
xorl
mulb
std
xchg
and
xor
dec
stos
cmc
or
in
notb
cmp
int
lcall
mov
popf
popf
lods
imul
loop
sub
rorb
push
les
sahf
mov
xchg
pop
mov
lods
mov
push
and
syscall
inc
rcrl
or
or
push
sbb
pop
std
aaa
xchg
popf
int
push
movsb
xchg
enter
xchg
mov
out
mov
sahf
adc
jnp
jbe
test
aas
lahf
dec
mov
pop
mov
stos
adc
jns
in
stc
mov
and
std
and
shll
bound
test
aad
sub
sub
stos
or
scas
aas
cmp
inc
mov
dec
ja
out
das
mov
popf
call
lcall
dec
mov
push
sbb
xchg
imul
pop
pop
dec
cmp
mov
pusha
in
pop
xchg
stc
test
jl
repnz
cmp
fwait
inc
aam
out
ficoms
mov
pop
leave
mov
aam
lock
mov
push
dec
outsl
push
pop
jp
pop
in
push
ss
int
jbe
in
or
inc
mov
mov
unpckhps
movsl
and
cli
out
jmp
movsb
js,pn
jnp
pop
mov
mov
add
xchg
jno
push
cmpl
pop
xor
aaa
push
or
dec
xchg
into
pop
int3
lcall
int
pop
jae
mov
imul
and
inc
xchg
ret
mov
out
push
mov
push
mov
dec
mov
test
mov
rorb
or
and
cli
rcll
fs
iret
cmp
bound
jbe
adc
xchg
dec
mov
and
push
js
push
test
cmpsb
sahf
cmpsb
or
dec
push
lcall
sub
and
pop
jno
ds
dec
add
movntq
repnz
push
repz
ds
int3
jne
out
adc
out
inc
adc
fisubl
and
push
into
sub
dec
in
data16
inc
adc
roll
mov
orb
ret
testb
push
mov
and
out
mov
frstor
movsb
inc
xchg
sbb
pop
mov
and
xor
xchg
call
inc
dec
popa
add
insb
sarl
mov
inc
pushf
out
lods
cmpsl
neg
inc
iret
fs
test
int3
mov
xor
notl
in
clc
mov
outsl
cmpsb
pop
sbb
adcl
mov
or
push
mov
fwait
mov
rcrb
xlat
pop
mov
or
movsb
lahf
test
pop
in
ja
push
push
pop
jl
pop
inc
cld
sbb
lret
sbbl
jno
imul
xchg
data16
stos
jo
mov
rclb
in
test
shlb
xor
mov
pop
and
aad
repz
movswl
fimuls
fsubrl
ret
sbb
cld
test
mov
lock
sub
loopne
mov
add
mov
fisubrs
sahf
icebp
int3
insb
mov
mov
jae
xlat
scas
jno
movb
bound
fnstsw
cmp
pop
dec
ret
jecxz
or
add
insl
adc
sti
sbb
add
mov
rcrb
out
lods
or
loope
fcmovu
add
and
sbb
pop
cmp
inc
inc
and
insb
outsl
dec
add
dec
push
mov
cmpsw
sbb
dec
add
out
push
sbb
cmpsl
xchg
push
pushf
or
aaa
mov
mov
sbb
adc
addb
in
pop
mov
pop
aad
xchg
push
jmp
sub
cmp
in
imul
mov
mov
adc
test
movsl
sbb
sbb
fldenv
insb
pop
and
incb
and
inc
or
jp
or
and
je
addl
mov
mov
ds
movsb
aad
and
ficoml
fcmovnb
mov
xchg
xchg
inc
push
shr
sub
inc
das
sbb
push
inc
ds
jp
push
mov
pop
fdiv
dec
pop
xchg
adc
lcall
sub
aad
push
cwtl
aas
jl
repnz
sub
or
xchg
or
sbb
in
mov
mov
repz
mov
sbb
push
in
fisubrs
and
cmp
adc
sahf
ja
dec
mov
ret
adc
adc
xor
push
stos
mov
add
cmpsl
pop
inc
loopne
pop
pop
leave
push
pop
xchg
inc
cmp
movsb
pop
xor
push
inc
xlat
xlat
ds
in
mov
jmp
insb
adc
jae
pusha
test
lods
cltd
lahf
jp
ja
sbb
scas
lret
es
add
jmp
pop
adc
or
std
xchg
sub
push
sub
shlb
jp
fwait
sbb
sub
mov
pop
xor
mov
adc
lods
xchg
lret
mov
dec
mov
mov
jmp
mov
mov
or
ss
mov
jo
jb
cld
rcll
mov
cli
cmpl
aas
mov
mov
aad
mov
gs
std
cwtl
data16
add
mov
in
push
repz
data16
cmp
add
cli
add
add
orl
daa
imul
adc
mov
adc
jp
outsb
daa
sub
out
inc
pop
push
xchg
ds
int
dec
mov
mov
stos
rcr
dec
jmp
out
mov
adc
add
lock
jge
out
popa
ficoms
test
push
cld
dec
movsl
sbb
xlat
iret
dec
ljmp
fcomp
std
out
inc
js
sbb
stos
inc
mov
sbb
push
inc
loop
inc
add
rol
push
icebp
popl
mov
daa
std
push
xlat
loop
sub
mov
lds
mov
leave
jne
scas
insl
mov
sub
add
mov
fcmovnu
out
inc
push
cmp
pop
test
inc
orb
pop
inc
pop
sbb
dec
and
stos
mov
push
cltd
aad
cli
cmp
jne
es
mov
add
jo
sbb
pop
inc
mov
lock
jmp
add
and
xor
das
pop
lds
test
lock
ds
push
or
ljmp
mov
loop
out
cmpsl
popf
pop
bound
xchg
hlt
xlat
mov
test
outsl
les
out
mov
jle
dec
insl
pop
jge
mov
pop
imul
iret
pusha
dec
jmp
mov
lret
int3
stos
enter
imul
jl
jecxz
nop
insb
ffree
sahf
cmp
xchg
stos
test
push
clc
rorb
das
jne
rcrb
mov
fiadds
outsl
jbe
xchg
leave
les
pop
or
leave
in
adc
movaps
dec
xchg
inc
jle
icebp
push
imul
shl
fcomi
bnd
popa
test
aaa
add
jns
jecxz
jmp
add
mov
sbb
sub
push
adc
insl
in
mov
lods
in
and
push
stc
jg
repnz
sbb
pop
notl
in
ljmp
fistpll
imul
jnp
push
add
push
xor
jno
dec
xchg
dec
ficoms
sbb
leave
insl
sub
cmp
sub
orl
pop
cld
lods
xor
jo
jne
xchg
aaa
fwait
jns
dec
adc
divl
pop
fstp
cmp
out
mov
je
lret
cmp
popa
iret
lret
inc
mov
mov
jbe
stc
imul
mov
aas
into
out
out
ret
lea
mov
setne
jmp
lea
test
add
xor
fwait
clc
mov
pop
in
jmp
xchg
pop
inc
push
adc
lea
nop
subl
xor
adc
or
xchg
lods
or
jo
adc
sbb
lds
adc
popf
cmpl
xchg
mov
arpl
dec
xchg
pop
mulb
cmc
je
dec
rcrb
out
xchg
out
hlt
mov
pop
push
jo
cmp
xorb
mov
bound
orl
roll
push
dec
fidivrs
je
repnz
jmp
cmpsb
idiv
push
pop
lock
aad
sbb
xchg
push
loopne
int3
xchg
sbb
dec
fdivs
cmp
daa
outsl
or
mov
mov
xor
inc
loope
cmp
lret
in
push
arpl
fbstp
movsl
push
in
adc
and
cmc
sub
and
into
jbe
push
jno
xchg
cmp
aas
aas
pop
icebp
pop
and
mov
nop
sbb
negl
clc
add
ret
mov
leave
pop
cmp
test
push
repnz
cmovge
push
adc
push
mov
enter
xchg
inc
jle
mov
xchg
sahf
and
jbe
fneni(8087
adc
dec
jb
jae
inc
xchg
fnsave
adc
xchg
ret
gs
call
ret
mov
addb
push
movsl
sub
sbb
imul
pop
pop
push
es
lods
aam
int
insl
inc
mov
sbb
push
sbb
mov
pop
cltd
push
xor
push
repz
int
addr16
pop
push
fs
adc
jg
add
push
xor
push
pop
push
mov
movsb
cmc
test
out
adc
jle
jno
inc
and
xchg
push
scas
test
movq
jmp
in
pop
lods
or
imul
inc
xchg
mov
push
adc
and
cmp
outsl
adc
mov
push
shrl
xchg
jge
add
lahf
enter
and
sarl
xor
and
inc
mov
or
sub
push
sub
inc
movsl
mov
lcall
xor
fs
iret
sbb
and
insl
stc
lret
out
pop
insb
dec
call
mov
dec
push
es
movsw
dec
mov
aas
dec
mov
adc
xchg
ret
mov
pop
je
sub
outsb
and
or
push
jnp
or
jecxz
ja
push
add
int3
fistps
stos
sbb
shlb
mov
ljmp
pop
cwtl
arpl
pop
sub
push
enter
pusha
test
jge
fcmovu
sbb
lret
cmp
cmp
lahf
jecxz
sub
outsl
sahf
sbb
xchg
lret
xchg
add
dec
outsb
fcompl
inc
test
xchg
pop
jp
jnp
bound
jbe
dec
nop
or
daa
inc
cltd
sub
por
test
hlt
or
xor
sub
push
ficomps
mov
aad
add
aam
inc
sbb
jmp
ljmp
mov
stos
jb
int3
test
mov
mov
and
adc
mov
inc
pop
push
sbb
and
cmp
into
fstpt
fwait
aam
fsubrs
xchg
icebp
xchg
cmp
lock
imul
scas
lret
lcall
fdivl
fbstp
cmp
rcl
out
sahf
mov
int
inc
popa
cltd
jg
xor
jne
inc
cltd
addr16
jmp
nop
fmul
test
xor
jbe
mov
mov
es
ret
insl
push
iret
rcrb
int3
add
fcompl
pop
fists
test
stc
lods
outsb
lahf
xchg
sbb
ss
inc
lret
repnz
mov
faddl
jo
in
or
mov
mov
std
std
cmp
sbb
pop
push
and
stos
sub
add
mov
push
mov
xchg
sbb
in
test
xor
in
dec
test
divl
jb
popa
fwait
sbb
lea
sub
dec
jbe
jns
std
outsl
xor
nop
in
sbb
movsl
lahf
lea
add
xor
sub
shl
int3
push
jae
daa
std
pop
lods
mov
xor
aam
ds
and
jns
lret
mov
in
mov
lods
pop
sahf
push
icebp
pop
mov
xchg
scas
sbb
sbb
push
imul
mov
pop
dec
xchg
mov
loope
cmp
mov
or
mov
repnz
push
inc
nop
clc
and
mov
jg
loop
mov
push
mov
or
shrb
mov
mov
bound
imul
sbb
jle
cmp
inc
mov
pop
mov
mov
imul
jmp
sub
add
lret
inc
xchg
and
xor
cmp
xor
int3
or
call
and
pop
bound
xchg
push
inc
xchg
ss
aam
mov
xchg
lea
test
push
xchg
ficomps
xchg
jmp
pop
jns
leave
push
lcall
cmpl
inc
loopne
je
shll
ret
jecxz
fbld
lock
mov
and
inc
jb
in
das
loop
inc
pushf
mov
or
in
cmpsl
push
call
sbb
and
mov
cmc
outsl
add
gs
ret
cmp
jg
fdivrl
cli
movsb
jns
xchg
pop
adc
fidivs
and
add
jmp
push
cmp
and
jns
mov
pusha
inc
js
xor
test
nop
cld
out
jns
jecxz
out
xor
mul
add
test
mov
mov
test
mov
push
ret
cmpsb
jge
mov
pop
inc
mov
pop
addl
repnz
out
repz
pcmpeqw
jb
cmc
scas
jmp
xor
jle
shlb
out
aad
xchg
xlat
push
in
data16
pop
adc
pop
in
subb
outsb
inc
dec
inc
enter
jmp
xor
hlt
push
mov
in
insl
loopne
xlat
pop
fldenv
decb
rolb
and
xchg
dec
js
shll
ficompl
xorl
mov
cmp
shl
cmp
sti
push
test
xor
sbb
stos
xchg
out
or
loopne
or
je
movsb
fwait
in
or
lock
xchg
push
xchg
and
xor
push
sub
dec
lret
or
pop
out
cmp
mov
add
push
cmpsb
push
cmpsl
mov
or
rcrl
pop
mov
mulps
cmp
inc
jmp
js
in
in
dec
in
in
add
inc
lods
push
das
xor
enter
fcomip
jg
mov
jg
sub
dec
or
sub
incl
scas
adc
and
repnz
mov
jge
add
out
je
adc
and
jbe
cmp
sar
sub
push
jmp
sub
sub
or
ds
in
int
int3
stc
or
das
out
cltd
lds
aam
cmp
inc
call
fdivs
addr16
inc
mov
and
shrl
push
dec
adc
stos
loope
or
pop
js
aad
cmp
push
push
arpl
popa
jl
dec
ss
jp
fnsave
sbb
movsb
call
or
cmc
or
js
jle
or
xor
movsb
mov
and
adc
mov
pop
dec
and
ret
push
inc
push
xchg
test
pusha
mov
in
adc
roll
pop
shr
adc
xchg
sbb
xchg
sbb
jmp
cmp
ja
cmp
add
mov
ds
testb
movsb
cmp
int
sub
push
xchg
inc
or
ds
movsb
hlt
inc
lret
mov
lock
xor
fwait
or
stc
lods
add
mov
orb
sub
mov
dec
in
clc
and
out
lea
gs
or
dec
dec
mov
sub
orl
push
mov
fnstsw
pop
cmp
ja
sti
out
push
fisubl
mov
repz
xchg
xchg
insb
jns
xor
pop
rolb
pop
fdivrs
cmp
sbb
sahf
ljmp
iret
cld
repz
js
not
aas
dec
mov
xchg
dec
loop
or
in
outsb
movsl
shrl
cli
push
mov
xchg
sbb
cli
mov
cltd
test
push
aas
xchg
loopne
pop
mov
orl
lret
xchg
incb
int
lahf
push
sub
out
lods
insb
ja
fidivrs
xchg
in
out
cltd
sbb
inc
cmc
jmp
in
adc
xor
dec
mov
inc
jmp
jp
das
in
imul
es
aam
pop
adc
leave
add
push
xor
leave
loope
out
sub
in
cmpsb
adc
push
adc
das
outsl
iret
arpl
sub
js
adc
cltd
mov
and
cmpsb
int
push
popf
aaa
fmul
ja
adc
sub
push
outsl
sbb
add
fadds
iret
mov
stc
or
repz
lcall
movsb
aas
outsl
and
mov
and
mov
jns
inc
rorl
add
jae
loop
xchg
cmp
xor
jl
dec
sub
mov
pop
sbb
add
inc
and
add
xor
mov
sub
jns
mov
inc
rclb
test
mov
cmp
mov
sub
repz
mov
aad
popa
dec
out
lock
movsb
mov
in
xchg
out
sbb
stos
dec
jg
push
mov
pusha
mov
insl
das
dec
mov
jnp
sbb
or
fucom
jnp
call
xchg
in
jle
sbb
mov
scas
mov
sub
and
mov
cmp
pushf
icebp
loope
jo
push
in
cli
inc
xor
sub
mov
or
mov
stos
mov
sub
aam
jmp
mov
mov
mov
push
xchg
test
into
jae
mov
pop
js
aas
lock
xchg
stos
pop
sbb
jns
shll
pop
fs
xor
cmp
data16
add
psubusw
lret
or
and
hlt
pop
ret
lret
xor
ds
mov
rcll
jl
loop
dec
jno
ja
jno
mov
push
sti
push
add
xchg
insb
pop
xchg
add
popf
dec
jmp
ret
stos
idivb
in
pop
xchg
lods
das
je
lods
lds
mov
dec
xchg
inc
roll
xchg
fs
xchg
cwtl
dec
int
sbb
mov
arpl
std
xchg
out
jmp
jg
pop
cmp
or
or
jnp
xor
xor
mov
push
mov
cmpsb
mov
xor
add
lret
adc
jg
testb
jge
dec
mov
add
out
mov
and
data16
add
call
lea
stos
sub
repnz
dec
out
js
mov
out
mov
xchg
in
lret
pusha
adc
mov
push
add
add
adc
and
icebp
ja
inc
rolb
popa
pop
lret
mov
icebp
les
gs
jae
xchg
add
lods
popa
leave
jb
jne
data16
repnz
mov
add
add
mov
push
mov
movsw
mov
adc
add
jmp
pop
bound
mov
mov
jno
jo
jmp
cs
fimuls
orl
ljmp
bsf
mov
pop
jne
push
ret
lods
fucomi
push
jmp
fstps
out
mov
xlat
inc
gs
in
jae
rcll
outsl
fadds
pop
cmc
dec
mov
add
imul
sub
mov
cmp
aad
push
or
sahf
sbb
jecxz
add
inc
fstpt
pop
cld
scas
push
push
aam
and
fisubrs
xchg
in
aam
jp
in
jno
outsl
push
push
inc
jle
adc
pushf
cmp
cs
push
js
scas
shlb
push
out
push
lea
and
mov
mov
mov
idivb
frstpm(287
mov
xor
std
push
cltd
in
mov
sbb
push
cmpsb
addb
fwait
add
mov
or
enter
jno
int3
pop
mov
jo
pop
push
push
mov
add
mov
out
and
fmuls
les
xor
or
xor
popf
std
cltd
fistps
xor
lret
sub
test
jge
aam
and
mov
fidivl
xchg
arpl
cmp
cmpsl
and
movsl
in
cli
shll
iret
cmp
adcl
pushf
stos
dec
out
std
test
ljmp
aam
dec
notb
fsts
cs
or
gs
scas
mov
dec
hlt
pop
pop
xor
push
ljmp
mov
xchg
xchg
out
enter
scas
lea
jl
mov
add
pop
jnp
arpl
imul
push
sarb
hlt
int3
fdivr
pop
jns
or
sbbl
mov
lock
test
call
imul
into
or
test
int
jmp
mov
nop
adc
xor
loope
add
loop
outsb
shll
shl
or
pop
notb
enter
jb
xchg
aaa
ljmp
jb
mov
jge
push
fwait
jl
pop
mov
mov
dec
pop
mov
xor
fisubl
into
mov
fldcw
add
mov
adcb
xchg
add
xchg
loope
dec
lret
mov
add
cmp
ret
repz
sub
mov
repnz
jo
push
popa
and
xor
sbb
mov
aaa
inc
mov
xor
jl
mov
sub
and
dec
pushf
adc
fnsave
mov
into
pop
adc
add
or
sbb
sbb
popa
iret
popa
add
push
repnz
sub
or
cmp
push
es
ss
arpl
pop
aas
into
test
xchg
add
aaa
out
push
ficoms
xchg
ja
fwait
fs
addr16
cmpsl
daa
je
ret
push
scas
sarl
cld
mov
fldcw
push
out
push
jne
iret
xlat
idivl
mov
lret
add
ss
negl
push
adc
mov
cmc
ds
repz
pop
cmp
loop
imul
or
adc
add
fmull
jp
cmp
mov
daa
pop
xchg
daa
cmpsw
mov
dec
push
jb
xor
pushf
xchg
in
adc
dec
insl
clc
mull
roll
popf
and
and
push
fwait
push
icebp
and
pop
sub
dec
sub
cmpsb
cmp
lret
xchg
mov
cmp
mov
pushf
shll
cmp
jb
mov
arpl
xchg
inc
pushf
popa
repz
pop
xchg
mov
adc
add
dec
ljmp
pop
inc
adc
fidivs
xchg
cli
adc
sub
lahf
pop
fwait
pusha
sahf
sbb
xchg
dec
fsubs
in
or
and
or
xor
fnstenv
mov
or
mov
sbb
decl
mov
cwtl
out
mov
pop
fs
push
push
call
jl
add
sbb
out
jno
mov
mov
je
movsl
mov
jg
aas
mov
jae
or
pop
lock
pusha
push
addr16
mov
leave
adc
clc
sbb
dec
insb
push
push
mull
sbb
int
filds
rcrl
jg
sub
sbb
pop
sub
stc
cltd
inc
out
xchg
xchg
push
aas
inc
sub
dec
aad
mulb
loop
test
bnd
movsb
movsl
mov
pushf
and
inc
lret
xchg
mov
mov
iret
in
push
xor
test
mov
mov
push
pop
xor
fldl
orb
faddp
jmp
cli
sub
mov
mov
repnz
inc
mov
hlt
and
in
xchg
stos
mov
enter
mov
xchg
pop
xor
test
and
xor
mov
mov
popf
lahf
sbb
mov
rep
mov
jbe
les
jge
test
outsb
aaa
pop
xchg
not
push
test
jecxz
mov
xlat
xor
mov
lahf
int
loop
fisubl
out
sahf
sbb
in
loope
negl
adc
jg
shll
jns
ljmp
jmp
es
insl
lods
jbe
sub
jp
rep
fiadds
imul
push
iret
mov
mov
sahf
inc
jg
outsl
sbbl
lret
sahf
push
inc
repnz
and
orl
xacquire
cmpsl
lret
sti
inc
hlt
subb
fildl
shrl
mov
enter
push
aaa
into
mov
sbb
xor
xor
cld
stc
fstps
xchg
inc
cmp
shlb
xor
adc
xchg
xlat
xchg
clc
sub
test
out
repnz
rolb
loopne
add
mov
in
sbb
test
aas
cmpsb
push
sbb
pushf
fldl
sbb
loopne
add
bound
mov
pop
cmp
ffree
ljmp
scas
push
arpl
int
pop
xor
dec
pop
repnz
jl
xor
sbb
das
cmpsb
adc
mov
rclb
add
sbb
pop
inc
cltd
addb
mov
add
push
dec
or
pop
xchg
mov
push
enter
adc
dec
adc
mov
sub
mov
pop
rcrb
push
mov
aas
mov
cmp
test
std
testl
push
pusha
and
cmp
dec
enter
lods
sbb
ds
ret
ret
or
or
stos
and
imulb
in
pop
das
in
leave
mov
xchg
je
jecxz
fcomps
pslld
mov
repz
xchg
push
dec
mov
call
push
bound
pop
jns
ficompl
test
xchg
loopne
aad
add
test
mov
aas
cld
subl
sbb
adc
in
int
and
test
insb
shll
push
icebp
hlt
aad
mov
je
icebp
test
pop
mov
pushf
and
arpl
lcall
das
ret
nop
ret
in
testl
in
iret
popa
push
iret
bound
push
pushf
cld
out
jb
sub
ror
rcrl
scas
lahf
aad
push
xchg
into
pushf
scas
in
or
mov
push
mov
inc
rol
xchg
imul
bound
adc
cmpsb
push
pop
mov
mov
inc
mul
out
jbe
mov
mov
and
cwtl
add
push
rorl
in
or
jp
imul
fcmove
lock
out
sbb
add
cmpsl
mov
in
sbb
xchg
sub
rorl
dec
fists
mov
dec
lods
push
mov
lock
sub
pop
movb
cmp
stos
ja
nop
mov
and
mov
pusha
ss
cmp
fmul
jg
xor
xor
outsb
test
lods
movsl
rcr
in
popf
inc
mov
push
mov
sti
sbb
cmc
mov
les
mov
lcall
cmc
loopne
addr16
cmp
add
stos
cld
xchg
stos
pop
dec
xor
jae
rcll
inc
mov
mov
pop
sti
in
add
or
mov
cs
adc
dec
popa
sbb
das
push
push
stc
mov
dec
repnz
mov
push
push
repnz
pusha
add
repnz
shll
dec
mov
rcrl
lret
loop
xchg
cltd
xor
loop
sub
add
rcrb
mov
sbb
arpl
ss
pop
dec
movsb
inc
mov
inc
mov
mov
lds
adc
popa
aam
leave
test
pop
jns
js
fldl
mov
jl
add
clc
lock
inc
dec
fldcw
jl
jno
iret
repz
sub
mov
mov
popf
lock
cmpsl
jno
hlt
xor
mov
push
and
arpl
daa
xchg
push
mov
leave
es
out
fwait
outsb
fldenv
inc
and
sbb
jle
ja
xchg
pop
sub
sub
cmp
enter
jg
faddp
inc
cwtl
dec
jge
pop
xchg
fdivs
jns
push
inc
pushf
scas
stos
popf
lock
jae
jbe
xchg
cmpsb
mov
jo
mov
push
cmp
dec
lods
add
and
es
loope
jae
outsl
addl
enter
mov
es
outsl
lock
cmpl
add
jmp
lods
push
idivb
mov
mov
pushf
ds
mov
inc
sbb
rol
adc
insl
and
adc
xor
nop
or
movsl
cmpsb
sub
lods
inc
add
cmp
jo
repnz
lret
movsl
jmp
xor
pop
lods
dec
jmp
clc
xchg
push
mov
adc
or
adc
in
fildll
push
int
leave
mov
daa
and
cwtd
sbb
ret
in
jg
jl
pop
int
adc
inc
jnp
test
cmp
and
and
cmpl
xlat
cmp
enter
ljmp
into
pmulhw
je
and
mov
pop
mov
pushf
mov
into
and
fidivrl
mov
subl
scas
jmp
pop
dec
cli
adc
jle
sahf
hlt
scas
nop
xchg
push
xor
lret
mov
push
push
jo
popf
pop
imul
push
test
insb
fs
arpl
cmp
dec
add
rclb
int
pop
and
xor
ds
testb
mov
mov
aam
dec
sbb
add
xlat
std
repnz
js
xchg
popa
mov
add
repz
jmp
xor
js
mov
or
xchg
insb
mov
push
sbb
and
pop
aam
ds
xchg
jl
leave
cmpsb
test
pop
adc
xor
and
sarl
or
les
outsl
and
movsl
lret
fisttpll
rcl
in
add
pop
testb
fmulp
out
lret
shl
push
shll
pop
aas
push
pop
imul
jbe
loop
shrb
icebp
in
xchg
dec
mov
xor
clc
popa
mov
scas
insb
adc
call
arpl
cmp
xchg
filds
sarl
jl
lock
test
es
mov
cli
adc
jl
aad
lret
lcall
enter
dec
jge
subl
pushf
inc
push
cmp
sarb
push
jecxz
add
jle
int3
adc
adc
pushf
mov
add
dec
mov
stc
out
push
sbb
inc
shr
xor
pusha
mov
call
testb
scas
and
out
or
ss
mov
adc
mov
pusha
mov
and
loopne
mov
push
stc
in
sub
nop
dec
pop
mov
mov
sbb
pushf
out
orl
and
jp
aaa
push
scas
std
sub
ss
in
iret
jg
stc
test
mov
outsb
call
test
sbb
push
std
clc
stc
fiadds
dec
inc
push
jae
mov
push
mov
addr16
bound
popa
xor
sbb
cmp
loopne
imul
pop
pop
lcall
sbb
pop
or
dec
push
std
shr
pop
into
in
ja
aaa
add
xlat
sahf
xor
nop
adc
cld
jns
aas
xchg
pop
xor
jnp
lods
adc
stc
mov
jno
fldl
mov
push
cwtl
cltd
add
sub
out
mov
addr16
inc
stos
xchg
and
aam
add
dec
cwtl
inc
push
cmp
cmp
pop
aaa
jmp
insb
ss
roll
bnd
loopne
sub
mov
inc
jg
cli
xor
and
ficoml
mov
sub
stos
dec
fcmovnu
rol
jle
dec
stos
aaa
mov
inc
clc
mov
sbb
aaa
popa
sbb
sbb
lret
mov
jecxz
js
mov
add
sbb
sub
std
push
je
out
jl
lcall
clc
or
popa
movsb
mov
in
jbe
push
cmp
leave
push
xchg
push
jle
out
pusha
test
sub
aas
xor
imul
aam
sbb
rcr
push
insb
xchg
insb
fs
jb
insb
nop
cld
leave
push
push
jmp
jnp
push
lods
xor
adc
fcomp
scas
jmp
popa
push
push
pop
std
cltd
das
lea
adcl
or
pop
leave
vpsllw
lea
add
and
and
pop
ret
push
and
pop
lds
stos
mov
imul
outsl
pop
or
pop
push
or
sarb
jp
dec
nop
sbb
imul
frstor
push
pop
jne
out
mov
inc
sarb
inc
ljmp
xchg
pop
stc
clc
mov
jge
and
or
test
adc
jbe
sbb
nop
sub
pop
push
cmpsl
std
popf
lret
repnz
cmpb
iret
mov
fs
sahf
js
mov
push
jle
fisubrs
gs
cwtl
popf
and
sub
ficoml
push
dec
outsl
ret
hlt
fldcw
mov
add
mov
ret
mov
and
dec
xchg
pop
push
pop
lret
mov
sub
sbb
jecxz
lods
push
xchg
inc
jae
dec
hlt
leave
test
mov
sbb
mov
jo
and
xor
xor
repnz
fcmovnu
pop
mov
adcl
addb
pop
xor
adc
loop
outsl
sti
rclb
bound
ret
scas
cmp
push
push
or
test
mov
xor
pop
not
outsl
mov
dec
cmp
scas
sahf
dec
sahf
mov
fstps
out
add
mov
add
shlb
stc
jnp
inc
jno
cmp
mov
insb
stos
mov
mov
lea
cmpsb
mulb
mov
push
add
cs
les
stos
loopne
and
rol
data16
ficomps
stos
pop
mov
cmpsl
popf
or
jne
mov
xchg
pop
xchg
dec
jle
insb
push
or
fstps
dec
movsb
xchg
push
dec
insl
sub
shrl
nop
sub
lret
pop
push
sahf
jne
mov
adc
cwtl
outsb
ret
mov
and
push
dec
mov
ret
mov
popa
jmp
arpl
das
jbe
hlt
xor
jbe
scas
mov
pop
mov
jno
or
int
xchg
popa
in
cmp
push
mov
hlt
jne
fcmovne
jo
add
dec
ss
push
xor
aaa
pop
adc
fistpll
stos
rcrb
mov
jge
fistl
xor
arpl
bound
sahf
scas
dec
mov
mov
add
aam
mov
jnp
lcall
fcmovne
mov
push
mov
in
fisttps
lds
and
ja
outsb
cmpsl
sbb
push
cmp
and
cmp
push
push
hlt
push
pop
inc
cmp
aad
imulb
rcrb
test
push
pop
mov
mov
jl
push
push
loopne
adc
push
inc
add
lret
add
ror
mov
sub
push
and
mov
sarb
fistps
or
mov
pop
dec
call
jge
inc
or
mov
setns
sub
xchg
adc
movsb
mov
fadds
ret
push
lret
andl
addr16
jp
pop
mov
dec
out
cmp
mov
mov
in
idiv
stos
sub
adc
outsl
push
or
mov
std
mov
mov
mov
gs
push
shlb
sub
ja
mov
sub
mov
cmp
test
cmp
and
test
lds
cmpsl
ds
xorl
or
mov
jbe
cmp
jae
lods
sahf
xchg
pop
jecxz
bound
cltd
stc
daa
fsubr
movaps
dec
repz
popa
and
mov
mov
dec
lea
cmp
testl
and
aaa
jb
jne
mov
ret
movsb
stc
pop
jbe
and
mov
out
fidivrl
std
lock
jo
cmc
fdivl
pop
mov
subb
orb
xchg
add
loope
sbb
aaa
in
xor
rcll
in
outsb
adc
sti
add
insb
lods
mov
sbb
orb
out
inc
divb
aam
repz
lods
stc
mov
mov
pushf
sub
popa
or
adc
mov
push
xchg
int
push
dec
adc
or
jae
scas
inc
fcoms
mov
mov
and
into
loop
aaa
insb
push
mov
int3
mov
push
imul
and
fdivr
popa
movb
adc
andb
push
fwait
sub
or
inc
pop
int3
cmp
sub
scas
jmp
mov
cld
scas
pusha
fisubrs
adcb
ds
cld
jmp
sub
and
vsqrtsd
and
sub
jge
lahf
leave
mov
cmc
stc
leave
or
out
mov
sbb
rcll
mov
sbb
or
mov
outsl
ss
frndint
dec
add
add
push
sti
or
sbb
iret
es
popa
das
cld
shrl
loope
enter
mov
xchg
std
sbb
imul
lret
sbb
jg
andb
dec
int3
out
push
loop
cld
mov
jnp
repz
scas
ss
xchg
lods
sbb
inc
lods
fdivl
xor
loopne
mov
icebp
and
lods
in
mov
cli
outsb
test
or
adc
sbb
sub
push
pop
dec
sbb
push
mov
xchg
xchg
pop
addl
movsb
test
nop
and
call
adc
pop
jle
mov
sbbl
mov
mov
mov
je
xchg
call
mov
enter
cwtl
and
fcmovbe
enter
inc
and
dec
mov
mov
fwait
jmp
jnp
in
mov
inc
cmpsl
cltd
or
imul
cltd
xchg
xchg
pop
jb
rcrb
mov
fbld
rcll
sbb
jle
ret
outsb
pop
add
adc
in
xchg
addl
stos
dec
popa
mov
jl
and
ja
lds
leave
shlb
pop
and
inc
out
jecxz
lock
jnp
leave
or
movsb
xchg
cmp
mov
sub
pushf
mov
jno
lret
cli
out
jecxz
xor
inc
lea
mov
push
add
push
arpl
cmp
in
add
in
and
shl
pop
dec
cmc
sub
lock
cmp
cltd
inc
scas
cs
dec
mov
ficomps
mov
push
and
adc
adc
dec
adc
js
xchg
xor
lock
xchg
xor
sub
idivl
ja
push
jo
jge
ret
mov
add
push
jp
pop
movsb
cmp
add
cmp
fcoms
ja
cmpsb
mov
movsl
adc
or
xchg
jne
mov
fdivl
push
or
inc
shl
add
das
es
ds
dec
or
xchg
pop
pop
fiadds
pop
out
ret
aas
insl
dec
jo
ficoms
jg
xlat
mov
int
add
or
test
addr16
jp
shrb
jns
test
dec
std
xlat
in
pusha
ret
cli
mov
cwtl
sub
xor
cmp
leave
or
insb
or
xchg
mov
icebp
cmpsb
pop
sahf
inc
xchg
loopne
lock
movsl
sbb
push
xchg
push
pop
jmp
inc
mov
push
cs
sub
sub
add
xor
sbb
mov
pop
cmc
int
cmp
fistps
jmp
xchg
into
mov
mov
or
pop
ss
push
imul
jo
in
mov
cmovl
inc
cmpsl
fistpll
mov
daa
and
fdivrs
ds
xchg
pop
jb
ret
inc
or
imulb
shlb
or
xchg
mov
cmp
adc
sub
mov
shlb
hlt
out
cmpl
into
ss
sti
aas
sahf
int
push
pop
mov
vandps
cli
icebp
ds
add
cli
and
jno
jbe
add
fstpl
pushf
pop
ret
xchg
lea
leave
bound
push
fwait
out
stos
dec
lret
outsl
loopne
addb
xor
sarb
xor
ds
push
pop
sub
data16
cs
mov
lea
mov
inc
xor
pusha
stos
out
sub
adc
inc
mov
jns
popf
push
test
pop
sbb
into
cltd
push
cwtl
nop
xorl
mov
sbb
ret
pop
xor
cltd
and
cmp
subb
sahf
pop
jp
es
ljmp
mov
mov
sbb
mov
fcmovnbe
cs
and
jp
push
push
es
xlat
sbb
fwait
fwait
out
push
xor
ja
mov
cli
pop
and
mov
push
rclb
dec
jb
cmpsb
scas
std
xchg
jl
inc
dec
mov
cmp
jle
mov
popf
hlt
fwait
insl
or
xchg
mov
sbb
sub
add
pop
jae
bnd
sahf
popf
insb
inc
inc
jp
pop
dec
adc
jb
add
sub
jge
sub
push
shl
or
shlb
loopne
inc
cli
shlb
and
jecxz
xor
jecxz
xchg
add
mov
dec
insb
jmp
or
push
cmp
jecxz
out
clc
aam
jmp
xchg
sbb
or
dec
fistps
aaa
rcrb
imul
arpl
xchg
cmp
push
and
mov
roll
cmp
sub
cmp
pop
stos
and
sub
arpl
jbe
pop
xchg
test
dec
jl
adc
pop
xchg
data16
sbb
addr16
xor
sbbl
pop
jecxz
sti
sbb
ret
subb
lahf
das
push
hlt
in
js
and
out
cmp
or
iret
pop
add
divb
or
sub
bound
arpl
mov
inc
and
cmp
and
pop
xorl
bound
dec
out
mov
pop
aam
dec
fimull
inc
sub
enter
mov
in
mov
lea
and
dec
push
inc
rol
test
test
cli
vcmpsd
add
loopne
test
hlt
sbb
pop
mov
sub
push
scas
cmpsb
ss
xor
xchg
xchg
sbb
loope
ja
call
mov
dec
mov
icebp
imul
mov
into
pop
push
movsb
mov
test
test
push
mov
cltd
and
lahf
cmp
subb
clc
insl
mov
pop
sarb
cli
sbb
lock
data16
fidivrs
pop
lock
pop
push
push
repz
int
or
clc
xorl
test
sub
popa
scas
xchg
sarb
mov
dec
push
imul
mov
ljmp
loop
sbb
cmp
mov
es
adc
mov
xor
gs
sub
data16
cmp
push
sub
into
gs
or
subl
add
mov
lea
dec
mov
bound
gs
and
pop
lods
adc
roll
cld
dec
lds
hlt
adc
push
xchg
add
aaa
push
inc
mov
jae
mov
fsubrl
mov
xchg
mov
ret
mov
loop
sub
cmp
ljmp
xor
out
mov
sub
addr16
fstpl
vpsrlq
loope
leave
or
es
inc
stc
sahf
pop
or
sbb
ficomps
test
mov
xchg
or
sbb
mov
pushl
adc
mov
int3
mov
cmc
jnp
data16
dec
jbe
and
xchg
test
insb
push
and
sbb
jp
ret
cmp
jp
loope
lahf
mov
pop
test
xor
fwait
out
jne
testl
xchg
arpl
add
insl
pop
rclb
xchg
sub
inc
dec
popf
jl
mov
push
shrd
out
nop
mov
mov
cmp
adc
cltd
scas
push
daa
mov
inc
mov
daa
shrl
aaa
sahf
sbb
push
call
fnstcw
lds
inc
scas
push
test
dec
cmp
sti
sub
hlt
cld
dec
mov
loop
stos
mov
and
inc
fdivl
rolb
fsubrl
add
stos
pop
jnp
fwait
xchg
out
pop
mov
mov
jns
aaa
aam
adc
dec
rcrb
jp
shrb
cmpsl
iret
add
add
mov
add
das
imul
xchg
pushf
push
mov
push
cmp
pop
mov
jp
fmull
pop
mov
jle
sub
decl
mov
fadds
adc
pop
inc
cmp
mov
ss
sub
scas
push
mov
jno
push
or
aaa
and
mov
pop
inc
mov
sbb
dec
stos
testl
xor
mov
call
dec
sub
jne
addr16
out
or
xchg
repz
xor
push
shlb
popf
lods
in
mov
imul
adc
pop
sbb
cmp
das
pop
xor
in
pop
dec
inc
jge
inc
push
pop
daa
xor
jl
xchg
movsl
out
jp
pop
iret
sbb
lea
push
out
cmc
add
ljmp
outsb
dec
xchg
mov
nop
push
or
test
push
xchg
gs
xor
imul
jg
and
dec
popa
jecxz
shll
call
jl
nop
insl
mov
xlat
adc
dec
mov
pop
mov
pusha
shrl
and
sub
fldl
xchg
cltd
add
pop
or
xor
aam
outsb
mov
repnz
out
inc
mov
xchg
xor
jns
into
fsubs
inc
in
nop
mov
jns
je
jge
mov
stos
sub
flds
cmp
lahf
nop
imul
lds
mov
push
sub
add
ds
iret
mov
pop
in
loopne
test
fildl
ret
lahf
lahf
popf
inc
fwait
push
aad
dec
aam
sub
dec
and
out
fs
mov
pushf
xchg
sbb
fmull
std
and
fucomp
out
in
cmpl
daa
sti
mov
and
mov
rol
lods
adc
inc
cmp
stos
cmp
jbe
fdivp
mov
aad
mov
or
loop
add
push
mov
pop
mov
outsl
cld
dec
mov
sub
pop
or
sbb
mov
pop
enter
mov
inc
sub
mov
ds
or
cwtl
rcr
pop
aam
mov
pop
mov
add
call
sahf
leave
std
sbb
test
xlat
in
xchg
rdpmc
xor
sub
insb
xor
jmp
jg
int
pop
mov
lea
sbb
mov
movsl
adc
outsl
stos
movsl
mov
mov
push
aas
pop
pop
push
jnp
cmpsb
inc
inc
or
dec
lret
fwait
and
cmc
sbb
or
insl
xlat
dec
neg
jbe
sub
js
popf
lods
xor
pop
jmp
je
addr16
gs
pop
icebp
arpl
fnsave
or
dec
jae
or
aam
cmp
mov
loopne
jbe
scas
ljmp
aaa
test
and
insb
data16
out
movsl
jmp
inc
dec
xchg
ret
aam
mov
fildl
inc
notb
out
sbb
iret
pop
inc
cwtl
jno
mov
pushf
aad
pop
sbb
xchg
inc
ja
scas
bound
jns
int3
sub
pop
les
testl
sub
jmp
bound
int3
and
or
jl
dec
ds
mov
jle
js
push
jl
add
push
inc
inc
mov
dec
ds
dec
xor
inc
cmp
test
sbb
push
sti
xchg
jg
pop
not
and
fwait
jg
jp
pop
add
fldt
add
cmc
fsubrp
ret
jle
scas
stos
or
lahf
pop
jle
mov
pop
adc
mov
push
add
cli
xor
xchg
lock
imul
mov
nop
mov
clc
push
push
cli
jmp
xor
fs
aas
mov
mov
cmp
out
push
clc
test
out
and
ds
popf
fdivp
mov
mov
dec
adc
testl
adcb
test
mov
jbe
xchg
or
mov
push
xchg
ror
sub
and
leave
mov
add
cld
repz
xor
xor
outsl
icebp
sti
in
cmp
mov
or
cmp
or
mov
clc
insl
sub
mov
push
mov
fistl
insb
arpl
dec
out
adc
loop
scas
in
mov
mov
mov
and
push
sbb
out
push
or
fstpl
jecxz
cmp
push
pop
or
pop
jnp
xchg
push
loop
mov
mov
mov
lret
aam
jae
push
test
leave
movsb
adc
call
dec
mov
scas
lds
jl
cmpsb
enter
and
pop
and
push
test
shlb
xlat
xor
xor
push
pop
orl
mov
movb
mov
es
cmp
jl
out
push
rcl
fdivr
divw
inc
in
sbb
dec
in
jg
cmp
inc
test
insl
daa
push
sbb
into
sbb
outsl
mov
and
andb
push
and
loop
and
rorb
movups
in
and
mov
repnz
push
in
jae
cs
inc
std
test
js
adc
stc
mov
cmpsb
insl
scas
mov
rcrl
xchg
jb
and
jns
or
call
aam
jo
mov
in
cmc
dec
sahf
outsl
loope
addl
movsb
mov
in
pusha
orb
jl
sub
lcall
jb
xchg
flds
jae
icebp
test
movsl
and
fcompl
data16
fimuls
fdiv
aaa
push
mov
ljmp
xor
mov
insb
mov
cwtl
lahf
in
aaa
xlat
outsb
xlat
cmc
mov
data16
stos
sbb
pop
icebp
in
push
pop
in
xor
popf
ret
fsubr
sbb
inc
jb
mov
out
sahf
fisttpl
inc
stos
jb
lcall
or
ret
shrb
cmp
or
test
sub
lods
xchg
xchg
les
andb
sbbb
cmp
xor
pop
mov
or
loopne
rorb
jb
arpl
fimull
stos
sub
outsl
xlat
xor
pop
shrb
pushf
and
push
daa
loope
iret
add
jge
jmp
icebp
aam
mov
lret
es
lret
in
xchg
ret
pop
dec
push
xchg
in
and
fists
mov
fsts
pop
jo
rorl
or
mov
test
cli
dec
xchg
mov
jae
xor
fistps
or
popa
lret
dec
cmp
mov
lea
lret
mov
mov
mov
mov
into
call
xchg
mov
sbb
pop
jge
stos
sbb
or
xchg
clc
ret
or
dec
scas
clc
test
cmp
adc
sub
mov
ror
addl
mov
fnstenv
xchg
sbb
in
or
pop
xchg
mov
loopne
bnd
push
int3
mov
jno
stos
fidivrs
pop
test
int3
mov
out
scas
adc
stos
inc
shrb
xchg
lret
sbb
test
cmovns
mov
jnp
xor
mov
in
outsb
push
mov
fmul
xor
cmpsl
repz
push
test
pop
lahf
jg
outsb
push
ljmp
imul
add
mov
iret
cmp
daa
fs
nop
scas
jb
repz
stos
ret
loopne
movsl
xchg
in
push
push
push
pop
cmp
adc
imul
arpl
pop
push
pop
pushf
cli
push
jne
in
cmc
xchg
xchg
adc
jmp
dec
jns
out
add
dec
add
mov
inc
out
call
out
sbb
push
aam
mov
aam
loope
fldt
pop
xchg
fstl
sbb
nop
pop
fistps
xchg
sarl
scas
inc
mov
push
stos
or
ss
daa
mov
mov
std
mov
ljmp
mov
js
mov
ss
and
push
lcall
push
test
shrl
add
mov
dec
daa
and
rcrl
xor
jne
jb
pop
aam
pop
sub
adcl
sbb
xor
pop
repz
cmc
add
jno
xchg
je
pusha
add
mov
jae
je
cmpl
push
inc
jne
add
scas
imul
mov
dec
shlb
pop
je
cld
fdivl
jp
mov
mov
cmpsb
into
xor
das
out
and
sbb
aaa
cmpsb
ds
cmp
push
roll
mov
es
inc
enter
jl
jp
pop
shrb
stos
outsl
xor
aad
xor
repz
mov
jg
aam
out
rolb
fisttpl
jg
or
inc
jno
jne
jecxz
imul
popf
into
mov
mov
or
cmpsb
push
add
test
out
cld
xchg
inc
sbb
dec
or
cmpsl
in
sbb
pop
push
mov
fucomip
popa
cmp
mov
stos
repz
push
mov
push
mov
scas
xorl
cmp
jge
imul
inc
pusha
ret
mov
jp
shlb
adc
xor
aaa
in
mov
hlt
add
push
faddl
cs
pushf
xor
push
xor
xchg
scas
addr16
push
addr16
xchg
mov
lret
dec
gs
and
addl
lret
gs
imulb
pop
fmul
jecxz
hlt
cmp
gs
lock
push
inc
mul
mov
push
out
xchg
rcll
enter
push
xor
cmp
and
push
inc
mov
mov
adc
cmc
mov
dec
ret
adc
sub
mov
sti
push
jo
stos
xor
and
call
addr16
jnp
xchg
adc
jp
or
fstpl
rol
lret
mov
ficompl
loope
ss
push
lahf
into
mov
lret
lret
sbb
xchg
outsb
std
or
jl
sub
in
or
shrl
sub
rclb
mov
dec
imul
dec
sub
orb
mov
loop
pop
jge
arpl
and
or
jmp
xor
mov
mov
dec
mov
xchg
jecxz
add
inc
arpl
pop
mov
and
push
std
insb
or
sti
pusha
cmp
cmp
pop
sub
shll
enter
test
notl
jne
inc
pop
aas
push
jbe
hlt
addr16
das
shlb
xor
adc
stos
cmpsl
cli
aaa
test
and
cltd
jnp
test
lods
cld
dec
ror
xor
cmp
mov
add
int3
repnz
mov
lods
add
hlt
addl
sti
or
or
mov
mov
mov
ss
cmp
jno
sbbb
fcmovu
imul
pop
jne
dec
ljmp
loop
mov
es
stos
movsl
inc
mov
mov
imul
push
fdivr
clc
out
addr16
push
shrb
or
hlt
xchg
cmc
sbbb
xchg
mov
sub
pop
in
enter
sbb
inc
sub
jb
cmp
orl
xchg
xor
cmpsl
sbbb
mov
adc
and
sbb
out
inc
popa
mov
push
dec
cmp
pop
jle
and
jg
cwtl
ja
inc
movsl
push
dec
aam
cmc
adc
cmp
scas
fiaddl
jnp
dec
test
repz
aam
pop
push
sub
out
dec
outsl
lahf
push
dec
xchg
xlat
jmp
stos
aas
ds
or
jg
jb
or
adc
jno
sub
lods
outsl
cmp
fisubl
add
sub
out
jnp
mov
lods
xchg
cmpsl
cmpb
adc
cs
mov
sahf
lcall
insl
clc
test
push
decb
or
mov
cmp
xor
push
outsb
shlb
outsb
int3
mov
in
add
mov
adc
adc
add
imulw
inc
lods
xlat
mov
ja
push
popf
mov
jg
inc
sub
insb
push
push
xor
xchg
movl
and
jne
ljmp
int
push
jne
scas
scas
lock
or
adc
icebp
loopne
leave
jo
mov
jo
into
fwait
gs
fwait
pop
pop
sahf
xor
mull
inc
stc
sub
popa
mov
push
hlt
adc
xlat
push
mov
stos
xchg
aaa
and
pop
popa
lahf
cmp
into
cmp
adc
call
jno
dec
sbb
aaa
cmp
out
push
mov
add
adc
mov
inc
stc
cmp
xlat
dec
jae
mov
sarl
lahf
in
mov
jge
lds
test
mov
mov
xchg
sahf
in
sbb
mov
or
lret
into
test
out
out
jl
jns
int3
add
xchg
lcall
xor
mov
xor
inc
pusha
out
pop
xor
in
fiaddl
pop
inc
mov
xor
xlat
jecxz
imul
lock
and
and
pop
mov
sti
lds
stos
shr
movntq
fiaddl
mov
push
std
cmpl
and
jnp
mov
repz
popf
mov
dec
sub
sbb
xor
jp
dec
dec
sbb
int3
gs
xor
inc
xchg
repz
inc
dec
mov
push
sub
pop
mov
xorb
std
jge
dec
push
stos
vmwrite
aaa
dec
scas
hlt
sbb
or
and
popf
js
mov
add
mov
add
mov
push
aad
loopne
push
and
inc
mov
addl
add
push
pop
leave
andb
out
cwtl
adc
lods
and
or
push
fcom
ret
scas
lods
mov
adc
call
sbb
pop
cmpsb
je
cli
cs
imull
bound
out
pop
mov
cmc
test
arpl
cmp
jge
dec
adc
adc
sub
imul
sbb
push
jl
sahf
lods
or
sub
adc
cli
cld
movsb
bound
fistpll
repz
push
pop
cmp
movsb
or
cmp
dec
std
add
in
pop
pop
xchg
add
cmp
jmp
mov
outsb
outsb
inc
pop
xchg
and
int
fbstp
idivl
dec
dec
fsubr
in
push
sub
aam
and
mov
pop
fcmove
sbb
jae
repnz
in
sbb
push
out
sbb
ret
xchg
sub
fucomip
aad
mov
push
mov
mov
push
inc
insl
xchg
sahf
in
es
lret
mov
push
inc
xor
test
and
pop
insl
in
or
add
in
sub
nop
nop
push
sub
dec
inc
inc
es
xchg
sub
jle
aam
mov
or
dec
mov
adc
push
subb
push
jl
dec
aam
or
aas
pop
inc
fisttpll
mov
or
call
imul
mov
mov
clc
divl
sbbb
nop
lret
pop
jo
ja
jmp
stc
push
stc
mov
jno
icebp
sti
testl
loop
sbb
movsb
pop
in
loopne
cwtl
and
out
in
in
mov
adc
fistl
cld
icebp
stos
jl
into
or
mov
push
clc
test
sbb
pop
adc
inc
es
jns
mov
add
push
stos
addr16
repnz
push
pop
rcr
repz
fcoms
addr16
clc
sub
ja
jg
xchg
jg
push
mov
inc
lret
push
cmpsb
push
xlat
arpl
sbb
rcl
mov
out
ss
push
mov
mov
out
push
push
out
inc
or
add
test
xchg
pop
popa
or
call
xchg
push
stos
mov
xlat
bound
pop
loop
pop
adc
cmp
mov
lret
cmp
lea
or
lods
xchg
dec
outsb
mov
push
mov
dec
in
fs
insl
pop
adc
test
lds
test
xchg
lock
cltd
lods
movsb
addr16
mov
mov
pop
mov
add
add
pop
fldcw
stos
andb
add
xchg
syscall
xor
in
jp
mov
xchg
jmp
jmp
stc
sub
dec
fcmove
push
test
in
mov
inc
andl
pop
add
pop
jge
push
mov
in
repnz
push
lock
lea
push
sbb
cmp
int
and
nop
loope
dec
add
ficoml
lret
jge
push
xchg
sti
bound
mov
scas
clc
stos
ficompl
jb
mov
or
xchg
adc
jo
sbb
enter
daa
lds
adc
lcall
adc
scas
inc
out
mov
jg
rorl
iret
mov
subl
jg
testb
and
cmpsb
cmp
mov
pusha
lds
sbb
loope
je
add
cmpsl
sbb
test
jp
mov
shll
fildll
stc
and
pop
or
ret
fdivs
or
push
sbb
cmp
xor
out
push
mov
push
adc
stos
inc
test
rcr
movsb
sti
inc
or
cld
mov
jae
mov
sbb
lahf
mov
cmc
mov
pop
sbb
andl
lcall
mov
stos
mov
leave
add
pop
jle
cmp
push
and
mov
in
div
scas
mov
loopne
or
mov
jo
adc
push
loopne
push
sbb
adc
pop
pop
mov
adc
pop
jl
addr16
lahf
add
cwtl
or
mov
inc
adc
hlt
xlat
stc
pop
shl
and
incb
and
sbb
mov
cmc
cld
insl
jo
sbb
mov
fldenv
cmpb
sbb
mov
test
add
shrb
rorl
nop
je
mov
mov
push
ds
leave
cltd
icebp
iret
sub
in
push
mov
push
dec
mov
add
xchg
adc
mov
mov
mov
sub
jb
mov
movsl
or
js
movsl
mov
adc
mov
fsubrl
mov
ja
xchg
je
xchg
cmpsb
shr
sbb
test
in
pop
or
shl
pushf
gs
int3
popa
mov
mov
mov
scas
addr16
jb
out
cmp
lea
cmp
hlt
inc
loopne
adc
scas
xchg
stc
das
cmp
shrl
xor
cmp
adcb
popf
mov
out
pop
out
xor
sub
dec
pop
sub
out
adc
orb
sbb
cmp
in
ret
pop
fs
pop
jmp
sbbb
add
inc
aam
cmp
or
pop
xchg
fldt
mov
arpl
rol
ds
add
cs
dec
jo
push
in
push
cmp
sub
fisubl
jns
sbb
fldcw
popf
or
fwait
add
cwtl
jle
adc
cltd
or
pop
jecxz
sbb
repz
mov
mov
cld
rclb
mov
mov
mov
aas
in
mov
adc
push
ret
mov
insb
pushf
cmp
testl
add
xor
out
pop
fiadds
clc
push
cltd
and
mov
pop
add
mov
std
ljmp
lods
adc
sahf
pushf
pop
and
xchg
jns
sahf
cmpsl
fidivrl
in
in
jae
mov
std
loop
push
out
sub
lock
subl
int
dec
stos
dec
mov
xor
ljmp
and
jg
xchg
sub
out
or
outsb
mov
cltd
inc
lods
in
mov
aaa
sbb
xchg
stos
mov
pop
ljmp
addr16
adc
push
xor
push
aam
lods
repz
rol
cmp
repz
sbb
inc
pop
pusha
movsb
fisubrl
or
pop
mov
scas
xchg
mov
aam
daa
inc
daa
or
jg
dec
stc
nop
test
stos
sub
aam
or
ret
jecxz
xor
lods
push
in
orl
or
or
fcomp
add
dec
lds
fldt
lcall
pushf
insb
inc
cwtl
jb
je
jmp
and
popf
xor
pusha
sahf
lcall
mov
ss
sbb
or
loop
or
xchg
dec
addl
jecxz
cmp
dec
sub
ja
lods
shll
sahf
dec
icebp
push
jne
pop
cmp
push
pushf
repz
int3
mov
add
xchg
push
test
sbb
dec
decb
jo
mov
mov
xchg
sti
mov
inc
xor
or
mov
and
ret
fldl
mov
insl
cmp
and
in
out
in
push
jbe
fcoms
aaa
shrl
gs
push
push
xor
test
mov
enter
cmc
or
push
ljmp
mov
add
mov
das
leave
scas
cli
outsl
movb
add
mov
or
cmp
out
sbb
mov
add
and
fdivl
mov
sbb
incl
push
icebp
loop
sbb
sbb
pop
stos
push
call
xchg
sub
and
pop
and
inc
loop
arpl
cmp
rcrb
arpl
lret
lahf
cmp
pushf
push
hlt
repz
out
test
xchg
dec
iret
dec
ret
sahf
mov
sub
xchg
push
subl
jle
xor
cmpsb
dec
xor
dec
sti
addr16
enter
ficoms
lods
xor
adc
bound
inc
jge
sahf
mov
or
mov
sbb
iret
mov
mov
mov
cmp
mov
data16
sahf
ss
cmp
inc
test
inc
pop
mov
mov
aas
pop
aam
xchg
out
mov
stc
shll
popf
stc
cli
xor
mov
push
jae
pop
push
and
out
lret
repz
incl
mov
ljmp
push
mov
add
icebp
popf
mov
adc
mov
pusha
inc
push
rorl
js
xor
or
jle
xor
lds
cmpsl
push
das
fmull
ret
sbb
jbe
insl
movsl
pop
mov
add
dec
add
lock
pop
cmp
mov
pop
lods
scas
nop
iret
mov
inc
mov
push
cli
stos
push
sub
inc
rorl
repz
ret
push
leave
movsb
sbb
mov
mov
sub
shrb
sub
adc
ds
cwtl
fsubl
int
xor
and
cmp
lock
out
ja
fistl
or
lret
pusha
cs
inc
mov
add
xor
sub
in
es
das
cmpb
cmpb
scas
sub
mov
push
notb
mov
adc
lcall
adc
sub
es
cmp
lret
dec
mov
add
insl
clc
mov
push
mov
out
pusha
or
sbbl
xor
mov
sub
sbb
cbtw
jmp
mul
pushf
push
in
sbb
and
or
xchg
sub
mov
movb
mov
cli
int3
xchg
or
add
cmp
add
dec
aam
mov
roll
popf
lcall
clc
fmull
pop
out
stos
mov
lret
or
mov
sbb
sti
xor
addr16
mov
add
jecxz
in
inc
adc
shl
pop
dec
in
dec
insl
lahf
fcomps
cmp
inc
aam
mov
mov
add
and
mov
mov
nop
mov
or
cmc
sbb
lret
movsl
out
sbb
mov
dec
imul
rol
leave
lret
js
addl
or
fwait
cmpsl
mov
insb
lods
dec
sbb
push
or
or
and
cwtl
adc
or
insb
imul
jmp
push
mov
ds
shrl
sahf
lods
xor
mov
movsl
inc
dec
mov
ficompl
jl
or
xchg
pop
fs
rorb
imul
sti
xor
cwtl
push
scas
add
setnp
ss
imul
xchg
mov
xchg
and
in
shl
repnz
or
and
pop
push
dec
mov
mov
jp
jae
bound
jge
dec
pop
jb
mov
mov
dec
cmp
mov
and
pop
inc
xor
dec
pop
clc
and
cltd
cmc
mov
movsl
or
ljmp
fsubr
mov
xchg
pushw
jbe
jae
dec
aad
rcrb
dec
fidivl
jb
test
subb
movsl
push
mov
iret
mov
aaa
mov
or
dec
cs
lods
sbb
sbb
push
sbb
sarb
xchg
ficompl
jb
callw
call
inc
add
pop
scas
dec
dec
fnstsw
push
cmp
dec
jge
jmp
mov
push
fwait
sahf
cmp
xchg
fisttpl
addr16
out
dec
mov
sbb
rcrl
pop
inc
cli
mov
daa
cld
pop
mov
into
jae
lret
ja
scas
es
sub
leave
ret
sbb
mov
clc
out
mov
loopne
loope
fs
or
push
stc
add
xchg
mov
jecxz
test
insl
ljmp
ret
push
mov
lods
pop
scas
and
jp
mov
sbb
dec
gs
or
rol
repz
into
cmp
lock
pushf
out
inc
push
popa
pop
call
mov
sbb
xchg
xchg
and
jp
subps
loop
xor
fs
aaa
xacquire
or
mov
shr
mov
ljmp
popf
xchg
mov
sub
or
movsl
mov
popa
ja
fimull
xor
push
push
jmp
xchg
daa
and
mov
in
adc
mov
shrb
jbe
jge
nop
lcall
xorb
jnp
or
sub
add
popf
ljmp
xorb
loop,pn
cmp
cmp
adc
or
leave
dec
imul
pop
xchg
in
push
pop
imul
inc
loop
dec
enter
lahf
xor
fidivrl
out
pop
add
insb
dec
dec
ret
add
xor
xchg
or
mov
mov
mov
pop
and
or
loopne
out
fldenv
jle
and
imul
mov
cmp
fimuls
fwait
add
fistpll
inc
push
cmp
fnstsw
cmc
pop
add
jmp
cmpsb
test
aad
jle
negb
push
jp
test
jne
pushl
lock
les
inc
lods
loopne
add
inc
flds
bound
push
call
adc
sub
adc
fimull
into
insl
shr
loop
sub
mov
jl
ret
sbb
lods
stc
or
xchg
cs
int
mov
push
nop
jns
lds
xchg
mov
leave
jno
out
add
add
in
mov
add
inc
xchg
inc
sbb
inc
popf
or
in
xor
jge
insb
jmp
mov
mov
lahf
fmul
movsb
test
add
cli
add
sbb
adc
jbe
xor
hlt
lret
inc
icebp
fucom
decl
test
or
pop
inc
jg
stos
xchg
in
inc
mov
rcrb
fistpl
inc
int
loope
repnz
xchg
xchg
insl
jb
scas
sub
ja
push
and
lret
sbb
std
xlat
mov
jl
cld
xorb
filds
adc
sub
lods
push
imul
test
jge
mov
in
lds
push
lods
subb
mov
je
add
push
mov
mov
lahf
repz
lahf
mov
lods
pop
add
fstps
and
push
ljmp
fs
rcrl
cmpsl
push
lret
out
inc
mov
dec
outsb
sub
add
fstpl
cmp
push
outsl
aam
push
xlat
movlps
jne
rolb
int
adc
mov
inc
les
push
jg
pop
mov
pop
in
in
mov
fidivs
test
call
roll
push
into
mov
pusha
mov
mov
sub
stos
stc
mov
fwait
sub
ret
subb
ret
sbb
cmpsb
test
dec
dec
add
sbbl
insb
test
lds
imul
repnz
push
mov
int
push
push
pusha
sbb
out
int
mov
pop
mov
jb
push
sahf
xchg
push
je
mov
test
fnstcw
push
xor
cmp
leave
xor
iret
outsb
fcomp
push
push
dec
dec
xor
arpl
insl
fsubrs
movsl
jmp
in
hlt
imull
cltd
lds
or
shrl
or
fnstcw
cmc
push
mov
aas
pushf
aaa
inc
ror
push
insb
mov
setg
hlt
pop
pop
mov
fisubrs
vrcpps
loop
movsb
sub
mov
adc
mov
cmp
adc
adcl
clc
mov
pop
fstpl
enter
add
dec
icebp
jns
mov
scas
scas
popa
fwait
mov
dec
js
mov
fmuls
cmp
cmp
in
add
loopne
cwtl
in
test
push
test
xlat
popf
dec
imul
mov
pop
fwait
jns
cmpsl
or
sbb
and
xorl
cltd
fmull
outsb
pop
jns
inc
inc
add
or
hlt
pop
xor
mov
shll
scas
inc
imul
les
mov
pop
xor
pop
dec
int3
jbe
outsl
sbb
xchg
sub
inc
xchg
lock
pop
mov
xchg
mov
mov
or
inc
mov
mov
cwtl
out
bound
aas
jmp
adc
xor
push
jp
fistl
mov
addr16
out
dec
in
inc
and
mov
shll
scas
pop
in
movsb
int3
push
movsb
repz
call
mov
dec
pop
sbb
push
pop
std
or
ret
test
add
aad
adc
pop
je
inc
pop
clc
xor
jno
or
call
popf
and
insl
in
pop
popa
stos
cmpl
gs
das
call
jb
sub
fs
mov
add
lea
stos
xchg
jg
sbb
fs
movl
cmp
adc
stos
pop
or
sub
nop
mov
rcl
cmpb
notb
scas
lret
fcompl
push
pusha
add
sbb
jno
sbb
iret
or
and
and
jne
lods
mov
loope
xchg
sub
pusha
lret
sub
lret
lret
out
out
ss
ja
cli
add
jns
inc
in
xchg
pop
xchg
rclb
sub
adc
stc
clc
lods
clc
inc
cltd
or
jmp
nop
xchg
loope
mov
mov
or
es
rclb
inc
lret
sub
lret
ss
and
push
popa
out
jnp
insl
or
negb
rcrl
jge
pop
addl
cwtl
push
jge
pop
mov
cmp
sbb
inc
aam
inc
int3
test
pop
test
xorl
add
out
jmp
roll
mov
lret
xor
lahf
popa
xchg
out
stos
xchg
jg
icebp
add
mov
cli
rolb
push
pop
jmp
insb
push
insl
shl
adc
movsl
jae
imul
mov
test
scas
sbb
leave
jp
mov
test
dec
mov
dec
out
mov
scas
mov
stos
mov
lods
lret
lods
cmp
clc
imul
in
pop
nop
mov
shrl
in
rcll
add
lret
pop
sbb
dec
mov
or
cld
nop
int3
cwtl
mov
andb
adc
dec
and
mov
sbb
sbb
pusha
xlat
xor
jns
xlat
test
iret
push
cs
adc
or
ja
adc
mov
add
insl
fildl
je
jb
mov
inc
aam
incb
repnz
push
insl
lods
aaa
aam
mov
loopne
shl
jg
pop
mov
pop
cmp
pop
dec
adc
clc
pop
or
pop
ret
jne
cmpsb
push
test
inc
cmpb
dec
or
sub
sbb
repnz
loope
mov
push
dec
add
dec
ds
ss
cmc
imul
rcl
jne
fsub
bswap
out
lahf
cmpsb
pop
repnz
addr16
add
out
mov
xor
pop
dec
lcall
sbb
ret
sub
imul
inc
jmp
int3
fcmovnb
and
inc
and
sahf
inc
pop
call
rorl
or
or
and
xor
push
movsl
pop
daa
out
push
jg
pop
movb
add
lds
data16
out
cs
adc
inc
inc
test
inc
pushf
mov
xchg
inc
cld
inc
push
mov
scas
jns
repnz
repnz
mov
imul
cmp
fldl
mov
lcall
pop
push
jns
cmpsb
hlt
sahf
movsl
and
or
jb
pop
jp
lret
fwait
and
mov
pop
in
arpl
push
sbb
mov
insb
mov
loopne
sub
cmpb
fsubl
fnstcw
cmp
jbe
clc
sbb
int
repnz
cmp
lcall
jnp
fwait
and
add
fwait
sbb
xchg
pusha
inc
cmc
rorb
aam
pop
popf
fs
clc
ja
xor
imul
bound
fsubp
sbb
mov
in
xchg
add
mov
mov
mov
pop
in
cmp
test
insb
int3
fdivs
xchg
jg
popf
cmp
scas
xor
insl
add
xchg
test
lahf
syscall
mov
out
orl
lock
cltd
xchg
pop
adc
mov
insl
loope
pusha
movsl
repnz
imulb
stc
sub
shl
sbb
mov
scas
test
cmc
inc
pop
and
fisubs
imul
adc
push
daa
cmc
lea
scas
cwtl
xor
ljmp
xchg
orl
or
jbe
mov
pusha
je
and
das
mov
jbe
mov
jge
jb
fdivrs
nop
es
inc
inc
dec
hlt
adc
or
js
inc
test
js
adc
in
loopne
sub
push
push
xlat
mov
add
push
cmpsl
jbe
and
sbb
pop
add
cmpl
xor
mov
inc
test
in
pop
psubb
subl
and
inc
cmpsb
or
roll
sub
leave
sar
enter
into
mov
mov
adc
daa
lods
xor
push
cmp
mov
push
icebp
int
rcr
aad
das
jp
je
xchg
push
pop
add
cli
mov
lock
cmp
ror
outsb
pop
imul
mov
adc
add
xor
mov
js
out
xchg
enter
icebp
std
iret
lods
insl
mov
mov
sbb
out
add
push
div
xchg
adc
or
or
mov
ret
mov
loopne
mov
std
adc
shll
adc
lea
fdivl
push
add
lcall
cltd
push
jecxz
test
push
pushf
out
call
dec
or
out
out
lds
psrlw
mov
dec
xchg
gs
xchg
mov
insb
xor
jns
daa
lret
leave
jbe
mov
cmpsl
bound
das
hlt
jg
push
dec
inc
outsb
mov
punpckhbw
fwait
sub
int
mov
les
jle
rorb
or
mov
js
lahf
mov
pop
inc
mov
testl
insl
popa
sub
jo
std
sub
pop
loop
mov
addb
lods
jno
outsb
mov
mov
outsb
inc
cmp
xchg
mov
adc
cmpsb
out
out
lret
sti
ljmp
gs
inc
sbb
repz
movaps
test
out
pusha
loop
das
sub
mov
movsb
or
es
or
fdivs
adc
insb
push
mov
add
or
aaa
stos
push
mov
popl
xchg
add
jmp
mov
jne
out
dec
mov
sbb
jge
inc
repnz
fldln2
inc
mov
mov
fwait
aas
cmpsl
xlat
pop
repnz
inc
mov
clc
ficoml
jge
aam
pop
add
mov
or
dec
imul
adc
push
xor
into
ja
jge
js
and
data16
repz
scas
test
loop
mov
cli
inc
mov
dec
push
mov
ret
mov
aaa
cmc
dec
mov
sahf
mov
fcmovb
pop
xor
mov
enter
jns
daa
adc
push
lahf
pop
jne
xchg
mov
js
xchg
dec
mov
in
cmpsb
cwtl
push
test
xchg
addr16
mov
shll
xor
xor
ss
sarb
inc
stos
xchg
dec
sub
jle
adc
inc
mov
inc
inc
aas
jns
or
movsl
xor
cli
mov
pop
stc
pop
rcrl
xchg
cmpsb
in
orl
push
test
stos
sub
sbb
inc
and
pop
outsl
ja
xor
lahf
pop
mov
add
dec
pop
inc
adc
dec
add
sahf
sbb
cmc
cmp
scas
fmulp
cmp
test
adc
add
bound
fcmovu
out
cmp
lret
sub
pop
sbb
pushf
jl
sbb
mov
sub
inc
sub
insb
test
aam
sbb
or
and
jg
jl
and
or
add
dec
mov
jge
sbb
movsl
mov
js
pop
ljmp
cmp
add
and
jecxz
inc
orb
test
fists
sbb
outsl
dec
add
mov
stc
scas
mov
es
mov
dec
jle
imul
dec
sub
scas
pop
sub
or
sbb
cltd
push
and
push
out
loopne
movsb
dec
jl
daa
mov
and
push
cwtl
sub
xorb
adc
popf
rolb
std
stos
push
fildll
jnp
decb
loop
push
rcll
les
lret
push
mov
xchg
scas
add
adc
jmp
or
enter
dec
mov
scas
les
dec
aaa
xorl
pop
push
xchg
jmp
loopne
jecxz
and
xchg
ds
adc
nopl
roll
xor
add
adc
lret
hlt
dec
push
adc
inc
call
xchg
sub
pop
mov
cwtl
insb
imul
mov
mov
clc
shlb
popa
add
push
movl
pop
xchg
sbb
shlb
mov
or
mov
pop
mov
and
xor
xor
xchg
pop
xor
fs
dec
out
jge
add
in
lcall
movsb
les
mov
test
xchg
sahf
inc
subb
push
mov
mov
cmp
mov
sbb
pop
jb
cmp
in
fisubrl
mov
xor
sub
sbb
insl
loopne
pop
scas
cld
cmpl
icebp
in
lcall
mov
ds
sub
sbb
and
pusha
cmpsb
mov
jl
push
or
or
or
or
ret
pop
push
mov
xchg
xchg
fwait
cmp
aad
pop
sbb
push
clc
aam
cmp
ja
jle
dec
jg
shrb
jg
xor
jmp
fwait
mov
xlat
sbb
lret
js
cmp
xchg
jbe
shll
fs
sbb
jl
inc
mov
in
sbb
fwait
aas
dec
aad
adc
fadds
mov
pop
inc
sub
push
xchg
jl
add
sub
sub
sbbb
push
xchg
xor
fisubrs
test
dec
test
xor
notl
movsb
xchg
lea
imul
fisubs
push
mov
scas
xchg
test
outsb
mov
subl
je
stos
out
pop
lods
mov
cmpsb
test
dec
hlt
pushf
mov
sbb
and
lret
cmp
jnp
cmp
jmp
ljmp
int
ljmp
sbb
adc
xor
xchg
test
fdivrl
movsb
leave
push
outsb
pop
ret
lcall
loopne
mov
sbb
or
fildll
mov
push
divl
out
xor
in
adc
loopne
jnp
or
orl
or
inc
insb
jecxz
adc
push
xor
int
mov
xchg
out
out
gs
loope
test
sbb
mov
add
aas
mov
dec
sbb
sub
and
pushf
push
mov
imul
jae
scas
add
jbe
lcall
cmp
push
jp
xchg
jno
dec
maxps
pushf
sbb
inc
sbb
pop
push
dec
aad
adc
iret
idivl
mov
adc
aaa
lods
pop
lahf
mov
int3
dec
push
call
addr16
jmp
cltd
mov
add
and
or
xchg
popf
jbe
mov
push
data16
sub
add
rcrl
les
fsubs
out
lds
mov
addr16
jecxz
repnz
in
fidivl
fimull
hlt
imul
int
cmpsl
pop
pushl
scas
xchg
or
insl
sub
cltd
movsb
mov
mov
add
xchg
iret
icebp
add
jge
in
fcompl
cmpsl
pop
das
test
jmp
fs
pushf
test
add
movsl
getsec
das
mov
jns
xor
and
xor
or
dec
mov
mov
mov
pushf
dec
arpl
jno
sbb
sub
mov
shl
dec
scas
jmp
push
push
int3
add
mov
imul
sbb
push
sub
add
pop
jg
mov
adc
mov
and
push
andl
mov
ljmp
jle
repz
lret
dec
xor
xchg
inc
negl
push
fnop
je
loopne
orb
loopne
ds
bound
mov
int
mov
mov
push
pop
add
mov
nop
cmpl
or
sahf
dec
dec
jno
shr
arpl
push
push
cmp
mov
clc
mov
mov
arpl
add
fcoml
rcll
pusha
and
and
fdivl
xor
mov
fiadds
mov
lods
cmp
imul
enter
test
in
sub
in
xor
jl
jns
push
fisttpl
push
insb
ret
sbb
fistl
movsl
cmp
adc
mov
pop
out
jg
repnz
rcrl
int3
xor
scas
and
mov
scas
andl
fiaddl
or
lock
xor
mov
xorb
ret
or
cs
jl
insb
fiadds
or
mov
popa
shl
xor
outsb
popa
jns
sbbb
add
sub
push
cwtl
or
cmp
inc
mov
sub
ds
iret
mov
jp
movsb
cltd
push
xlat
push
xchg
sub
in
cs
hlt
jno
cmpsl
rorl
sti
addr16
imul
jne
fmul
cmp
or
dec
and
out
into
xor
mov
adc
cmc
cwtl
xchg
movsl
mov
ret
jge
sbb
jmp
aam
aas
push
pop
sub
or
ret
xchg
mov
pop
mull
pop
xor
mov
dec
mov
dec
shlb
jae
push
jbe
inc
adc
loope
bound
xchg
pusha
jl
cmc
mov
push
mov
gs
fstl
and
rcrb
sarl
cmpsb
push
sbb
aad
cli
pop
shll
jo
xchg
rcpps
aas
int
cwtl
cmp
cli
and
fwait
pop
push
push
mov
mov
pop
dec
cmpsb
pop
push
out
sbb
fldenv
ficomps
mov
cmp
mov
xor
idivb
mov
mov
inc
movsb
and
adc
jg
outsb
inc
sbb
mov
dec
inc
cmp
lret
ds
and
mov
xchg
and
cli
xor
subl
ss
cmp
cmpsb
cmpl
lds
add
test
inc
cmp
lret
and
in
xor
js
push
aaa
shlb
inc
jnp
mov
mov
jp
loopne
xorb
jns
movups
push
les
xlat
out
aaa
pop
pop
icebp
les
add
test
sbb
popa
mov
mov
stos
xor
test
hlt
mov
jmp
fists
scas
arpl
jle
pop
xor
lods
shld
or
or
sub
cmp
sub
push
pop
sub
xchg
sbb
in
jbe
out
sahf
scas
adc
push
and
inc
insb
shlb
fsub
mov
aaa
pushf
stc
sbb
sbb
inc
dec
adc
push
ss
cwtl
sbb
jg
and
pushf
mov
mov
out
cmpsb
add
or
adc
cmp
jnp
imul
dec
gs
pop
xchg
pusha
mov
push
cmp
addr16
jbe
inc
cmp
loop
and
es
test
mov
aaa
xor
mov
fstps
xlat
push
inc
bound
iret
xlat
into
fwait
lea
sub
mov
imul
xchg
xor
je
aad
sub
rorb
cli
pushf
jp
xor
add
movsb
cwtl
push
dec
into
mov
in
inc
or
aaa
jmp
lret
adc
popf
or
adc
and
aad
mov
push
shrl
pop
arpl
movsl
pop
sbb
ljmp
cmc
lcall
jmp
push
cmp
xor
sub
divb
adc
sub
inc
sub
add
stos
mov
inc
add
push
jecxz
outsl
or
aaa
mov
sub
xchg
push
fcomps
loop
mov
stos
mov
cmpsl
in
pop
nop
jg
fcomp
jmp
dec
push
pop
dec
cld
mov
mov
clc
sti
ja,pn
pop
daa
xchg
inc
mov
cmp
xchg
sbb
shl
lea
stc
jns
pop
or
je
xor
xchg
push
call
push
stos
add
iret
pop
push
loope
or
dec
rorb
add
dec
or
add
mov
dec
ficomps
shlb
mov
jns
sub
mov
enter
pop
push
mov
lods
addr16
pop
cmp
imul
xchg
das
sub
jbe
jns
lds
mov
lret
cltd
pxor
in
in
andb
icebp
jmp
add
sub
aad
addr16
enter
cltd
jo
cmp
xchg
ljmp
cmp
sti
xor
shl
mov
push
jb
cmp
mov
mov
push
outsb
mov
mov
out
adc
xchg
cli
les
lea
mov
xor
ljmp
in
dec
test
popa
stos
ja
jae
out
rolb
pop
scas
stc
test
sahf
out
lock
mov
mov
and
pusha
cltd
out
clc
fcmovb
cmpsb
push
mov
xor
out
mov
icebp
mov
pusha
cmp
xchg
push
sub
inc
ss
jmp
add
fstl
push
data16
test
or
sar
insb
inc
inc
scas
es
leave
adc
mov
ds
push
std
ljmp
jge
jns
hlt
add
lock
rcr
fistpll
gs
or
lock
push
xchg
pop
stos
push
mov
stc
pop
push
sarl
push
jge
add
ret
cld
inc
jle
adc
es
mov
aam
or
push
push
cmpsb
dec
mov
jmp
or
xchg
or
xor
arpl
pop
sbb
lcall
pop
jle
mov
call
xchg
outsb
ljmp
jg
inc
shll
sbbl
jb
scas
jae
xor
rorl
jno
push
jb
cvtps2pi
test
push
fs
arpl
mov
and
stc
popa
add
fcoml
jecxz
pop
cmpsb
movl
pop
adc
add
insl
push
out
shrb
leave
call
pusha
cmp
ret
bound
je
fsts
lahf
je
shll
add
cwtl
mov
jp
cli
inc
sbb
icebp
adc
or
test
adc
add
out
shlb
loopne
xchg
adc
jp
mov
sti
and
lret
inc
in
mov
sub
mov
lcall
jmp
in
iret
mov
scas
mov
repnz
aad
addr16
cmp
repz
leave
in
push
or
xor
aad
cwtl
mov
ret
cs
addr16
add
in
sbb
shlb
imul
sbb
decl
flds
cmp
xor
clc
rorb
add
jnp,pt
cmp
jecxz
aaa
cmp
lds
push
sbbl
sub
mov
xor
mov
leave
es
mov
jmp
xchg
rorl
orb
inc
jnp
and
scas
adc
lods
cmp
mov
pop
mov
lret
push
arpl
fwait
inc
jne
push
aas
inc
jl
cltd
fs
movsl
nop
pop
jge
sbb
enter
jg
sbb
mov
rcrb
outsb
cmpb
or
mov
jno
stc
xchg
clc
cmp
loopne
inc
stc
mov
jne
xchg
stc
and
repnz
imul
cmpb
mov
push
jno
inc
push
push
sub
pause
mov
mov
std
adc
stc
cmp
push
fsubrs
or
sbb
pop
loopne
dec
mov
xor
imul
out
push
iret
jns
lea
popa
inc
push
mov
xorb
out
sbb
xchg
sub
dec
mov
xor
lahf
roll
cltd
into
cmp
adc
push
push
fstps
pusha
repz
in
cmp
mov
clc
adc
cmp
ret
fiaddl
and
shlb
btc
pop
test
jnp
push
adc
fisubs
addb
in
test
push
or
ss
xchg
mov
mov
rolb
fists
mov
sub
out
mov
ss
dec
and
and
jne
clc
sahf
dec
into
dec
cmpsl
jp
jns
pop
ret
or
push
filds
xor
ss
pop
int3
inc
xor
cmp
cwtl
jl
mov
mov
mov
push
loopne
test
jp
jnp
push
cltd
or
idivl
cmpsl
data16
push
test
push
xor
aad
mov
in
les
or
fs
icebp
test
ja
mull
stc
call
mov
inc
jno
adc
mov
rcll
cld
test
das
xchg
sbb
inc
push
xchg
ss
rcll
cmp
sub
test
fidivl
or
and
sarb
push
ss
cmp
or
xchg
sub
nop
lahf
loopne
pop
shrb
dec
pop
mov
mov
adc
rclb
andb
cs
cmp
cltd
and
addl
add
in
pop
pop
inc
loope
cmpsl
jne
movsl
insb
mov
mov
in
leave
mov
pop
repz
dec
cld
stos
xchg
lahf
add
mov
and
scas
sbb
iret
jp
popa
push
sarl
xchg
jne
in
xchg
inc
test
icebp
sub
lods
movsl
mov
adc
xchg
lcall
repz
cmp
jge
mov
outsl
pop
pusha
mov
loope
testb
test
pop
in
xchg
addl
in
mov
in
loope
mov
sub
and
int3
fyl2x
or
push
int
in
pop
in
lods
pushl
xchg
xor
pslld
xlat
movsl
loope
insl
push
imul
scas
mov
sbb
cltd
insl
dec
pop
mov
cmpsl
xor
aas
push
xchg
addb
pop
mov
mov
lcall
lds
dec
add
add
push
fisttps
mov
shll
xchg
unpckhps
aam
mov
adc
in
fcomps
mov
std
fimuls
sbb
mov
cld
ret
lahf
scas
stos
inc
and
divb
popf
pop
sub
mov
push
es
ja
add
adc
sub
add
out
les
push
ret
arpl
movsl
inc
mov
mov
push
lea
je
fldl
dec
xchg
cmp
fwait
int3
fwait
in
inc
sbb
push
pushf
adc
cmpsl
push
jp
push
sub
in
sbb
daa
stos
push
mov
pop
and
mov
das
call
mov
scas
xchg
fisubl
addr16
inc
cs
inc
lret
lret
lods
and
nop
jl
mov
test
jl
add
sbb
and
sbb
pop
das
mov
cmpl
cmp
in
ss
lods
sbb
cmpsl
jmp
xchg
pop
cmpsl
jmp
jne
gs
test
imul
xchg
repnz
push
sub
mov
icebp
in
lcall
push
jmp
lods
mov
fstl
sbb
leave
test
imull
or
loope,pn
hlt
cli
dec
and
aad
mov
lock
je
dec
dec
xchg
inc
je
dec
dec
xor
lods
push
lret
xchg
xorl
push
aas
ficoml
inc
add
cltd
out
test
push
inc
jmp
test
in
scas
mov
or
mov
int3
adc
daa
lcall
adc
xor
leave
mov
je
icebp
add
imul
in
lods
cmpsl
in
dec
or
pop
pop
sub
sarl
in
hlt
fimull
lds
loope
mov
clc
jns
enter
or
cld
mov
push
mov
pop
jmp
test
mov
xchg
enter
mov
in
lock
insb
pop
cmp
call
mov
int3
mov
lcall
jl
sbbl
push
mov
ljmp
ret
pop
mov
xchg
mov
jne
int
lar
adc
mov
subb
mov
ja
ret
jns
push
stos
cwtl
jge
add
xor
out
or
mov
push
dec
lret
cmpsb
in
js
out
lods
jae
adc
xor
cmp
cmpsb
shrb
ja
imul
mov
in
push
inc
push
out
mov
cmpsl
jae
dec
imul
mov
pop
inc
add
leave
out
mov
repz
lock
adc
or
loope
add
pop
dec
lods
fwait
push
add
repnz
aam
xchg
push
mov
adc
pop
adc
push
fcoms
xchg
or
jnp
inc
test
bound
scas
mov
xchg
fcoml
or
and
jl
popf
fchs
mov
scas
cwtl
cmp
test
push
pop
lds
mov
xchg
lcall
cmpsb
popf
mov
mov
mov
xchg
into
ds
mov
lret
call
out
sub
out
lods
xchg
jns
stos
mov
mov
movsb
pushf
cmpsb
mov
loop
aad
je
xchg
cld
push
jg
bound
cmp
das
and
lret
jge
in
pop
iret
sti
and
xor
movsl
pop
sub
inc
loope
sbb
sbb
push
sti
loope
adc
in
iret
lods
sub
loopne
dec
icebp
shld
pusha
sub
leave
mov
xchg
mov
dec
add
sbb
jo
ret
leave
fldenv
xchg
cmpsl
aaa
mov
sub
cmp
adc
pop
cmp
dec
scas
sub
mov
jne
jge
dec
inc
jmp
cmpsl
ss
pop
mov
pop
cmp
addb
insl
stc
mov
pop
mov
and
rorl
push
dec
imul
cs
dec
imul
xor
adc
aaa
xor
sbb
jno
jmp
jg
ds
movsb
nop
xor
leave
sbb
scas
mov
lret
pop
mov
pushf
dec
cmp
orb
sub
fbstp
jae
cltd
pusha
mov
enter
shr
sub
mov
out
aad
dec
jl
icebp
push
js
mov
add
mov
xor
cmpsb
push
inc
push
xor
fldl2e
cwtl
mov
sbb
mov
or
jg
jno
push
pop
add
mov
sub
mov
cmp
jae
jns
jmp
lods
mov
xor
and
or
cwtl
pusha
sbb
imul
dec
or
add
fisubrs
push
push
stc
mov
pop
in
push
ret
mov
xchg
jl
xlat
scas
out
add
push
mov
ss
cmp
cmc
ds
lcall
sbb
or
cmc
fdivrp
repnz
aam
in
mov
push
mov
test
iret
inc
pop
jecxz
pop
xchg
pop
mov
inc
sub
data16
ja
cmpb
lret
mov
dec
dec
in
push
xchg
jbe
xchg
adc
pop
stos
inc
mov
push
lock
icebp
mov
loope
addr16
fmul
dec
jge
out
xor
out
hlt
xchg
testb
dec
and
push
cltd
push
xchg
mov
jae
push
shll
cmpsl
push
rcrl
std
fdivrl
stc
mov
sbb
les
push
lods
insl
cltd
adc
loopne
cmp
push
push
pop
lock
adc
pop
push
insl
adc
jmp
push
cmc
shlb
mov
in
pop
pop
ljmp
mov
gs
mov
xor
sub
jo
cmp
mov
push
test
xor
cmp
sub
xchg
dec
iret
lahf
std
fwait
mov
rcrb
adc
mov
cmc
mov
jae
dec
dec
js
test
mov
shr
cwtl
loop
ret
cmp
xlat
mov
daa
mov
in
mov
sbb
iret
fists
add
push
imul
push
sub
dec
xchg
push
push
xchg
and
test
adc
adc
in
lret
mov
mov
stos
xchg
push
cmp
outsl
jnp
push
cmp
stc
int
inc
adc
xlat
dec
mov
loope
fiadds
movsb
sbb
std
aam
les
daa
inc
mov
xchg
push
mov
stc
add
loope
and
test
into
imul
add
inc
mov
jnp
stos
int3
jbe
and
ret
repnz
sbb
xchg
outsl
mov
fildll
push
pop
lea
out
jg
adc
aam
mov
mov
mov
sub
inc
movsl
lock
ret
inc
xchg
pop
dec
loop
ds
addr16
enter
mov
mov
lods
dec
and
mov
stc
sbb
mov
nop
scas
lahf
cmc
nop
mov
stos
sbb
jae
imull
jns
lcall
sub
mov
sbb
jnp
call
roll
xor
cmp
pop
pop
rolb
mov
pop
divl
loop
in
cmc
outsb
mov
cmp
ficompl
pop
aam
bound
idivb
jmp
mov
andb
mov
push
loopne
lret
sarl
and
push
ret
orb
dec
cmc
pop
jns
xor
jp
pop
push
popw
mov
push
cmp
pop
xchg
icebp
aaa
xor
call
call
and
inc
mov
jmp
mov
sub
addr16
iret
nop
mov
ficoms
hlt
xchg
or
mov
dec
in
stos
or
or
fwait
lret
icebp
stos
mov
addb
push
test
bound
imul
inc
lds
xor
add
add
jl
cmp
dec
scas
cwtl
cmp
adc
cmpsb
ret
inc
rcl
pop
mov
mov
or
xchg
add
sub
imul
xchg
jae
outsb
adc
push
pusha
add
inc
jp
lds
andl
dec
pop
mov
roll
int
jae
mov
out
or
mov
push
adc
push
dec
mov
insb
icebp
dec
push
jg
push
mov
sarb
adc
xor
jae
lwpins
sub
jge
push
aad
pop
adc
mov
push
cwtl
popf
fstps
jl
repz
out
and
push
inc
stc
cmc
xor
test
xchg
adc
mov
decb
subb
sub
out
ret
fs
scas
insb
mov
mov
repnz
daa
dec
xchg
lea
subb
jl
inc
pop
imul
push
cmp
push
push
call
test
xchg
shlb
dec
add
addb
mov
adc
movsb
push
pop
sar
cld
pop
sahf
pop
inc
push
push
test
inc
call
scas
lcall
push
sub
or
repz
xchg
jg
sub
mov
pop
inc
and
pop
inc
inc
in
mov
and
xor
iret
bnd
sbb
test
js
push
mov
inc
cmp
aam
scas
pop
aaa
xlat
jp
push
adc
push
enter
inc
jno
test
push
sbb
dec
daa
rclb
pop
ljmp
or
adc
sbb
in
add
mov
sub
ljmp
push
mov
mov
sub
inc
out
jg
clc
jnp
xchg
pop
lret
test
lret
add
in
jp
xchg
repz
ljmp
mov
xchg
mov
pusha
int3
movsl
push
hlt
loopne
push
inc
fs
lret
enter
movsl
jecxz
mov
sbb
jle
insb
inc
mov
pop
rol
dec
xchg
mov
cli
loope
dec
mov
xchg
sub
fdiv
and
in
lods
mov
cmp
test
mov
xor
pop
test
call
insl
fcmovnbe
pusha
in
movsb
xor
cwtl
xor
inc
in
xchg
dec
xchg
dec
xchg
test
in
repz
fwait
sbb
mov
les
cmpsl
std
push
sbb
jge
nop
xor
jecxz
lock
mov
loopne
inc
call
xor
xchg
pop
outsl
movsb
aaa
xchg
pop
jno
push
and
lret
rorb
ss
inc
ror
mov
int
push
dec
push
scas
push
jnp
cwtl
ret
mov
mov
mov
stos
shlb
arpl
adc
adc
jno
sub
les
aas
push
in
adc
xchg
insl
andl
aaa
or
or
imul
or
daa
adc
xor
imul
pop
rolb
imul
in
xchg
cmc
cmpsb
jge
stos
ret
jle
js
jp
push
aas
push
hlt
jae
insl
xor
mov
out
enter
insb
add
in
lea
lea
repz
lahf
dec
sub
mov
js
insl
mov
sti
push
out
cmp
lahf
test
out
test
inc
and
enter
aam
rolb
mov
cmpb
mov
cwtl
dec
scas
mov
or
popf
adc
rcrb
add
or
mov
push
stc
add
test
mov
std
pop
jp
xor
les
in
arpl
mov
jge
push
insb
cmp
insl
movsl
jnp
sbb
ds
ret
mov
xchg
arpl
dec
in
stc
divb
mov
ss
mov
sub
out
lret
jp
push
lea
pushf
xchg
lret
lds
je
jg
xchg
out
mov
xchg
sbb
cmp
movsl
add
test
xchg
or
add
inc
push
pop
adc
ret
jle
and
mov
xchg
movsl
and
cmpsb
lods
fbld
xchg
aaa
fstpl
lcall
inc
fcmovne
lods
icebp
and
cmpsb
outsl
lret
out
adc
cwtl
mov
stos
mov
and
inc
or
jmp
add
or
lret
ret
jno
test
jmp
arpl
test
xor
dec
scas
arpl
aas
jne
fisttpl
pop
pop
or
mov
adc
or
xor
mov
cmp
in
jo
cli
dec
inc
jle
inc
inc
movsl
mov
adc
adc
mov
lahf
outsb
cwtl
out
adc
and
and
outsb
andl
and
or
adc
jnp
mov
mov
jae
push
jle
jb
push
cmp
dec
mov
pop
sbb
cmp
popf
outsb
xor
sbb
add
push
add
pop
pop
loope
ss
mov
mov
sub
jae
jl
xchg
jno
insb
cmp
loopne
outsb
and
jo
mov
loopne
push
gs
fs
inc
sbbl
fcomi
icebp
xchg
xor
push
lahf
jecxz
aam
addr16
mov
hlt
pop
popa
stc
sub
in
jecxz
push
push
ljmp
das
das
pop
loop
pop
push
inc
js
movsl
lds
pop
adc
cld
xor
rorb
sti
popa
push
xchg
or
sti
into
out
cmp
xor
xchg
in
in
inc
popa
push
lods
out
in
adc
sbb
lods
push
test
shlb
and
push
mov
aaa
mov
sbb
mov
mov
mov
cmpl
leave
push
decb
dec
std
sub
jo
xchg
rcll
insb
jbe
cld
mov
fmuls
sbb
dec
sahf
adc
pop
mov
adc
pmuludq
cmpsl
xorb
in
negl
les
arpl
sahf
inc
push
adc
inc
cmc
or
shrb
add
mov
repnz
out
add
jg
fwait
imul
jb
pop
mov
clc
loope
pushl
shll
adc
ror
in
daa
xor
jns
and
stc
hlt
jl
in
push
das
faddl
sbb
push
icebp
mov
aas
out
add
mov
fwait
sbb
pop
test
xchg
dec
xor
nop
dec
nop
mov
subb
pop
xchg
or
adc
movsl
and
adc
pop
out
out
pusha
insl
inc
scas
or
cwtl
fs
xor
mov
mov
dec
mov
je
fiadds
jg
pop
fistpll
add
int
mov
rolb
inc
cmpsb
das
mov
jecxz
jle
shrb
jns
jg
jo
lahf
hlt
aad
mov
push
pushf
insb
xor
dec
xchg
mov
and
add
aad
mov
arpl
popf
dec
adc
push
fbstp
adc
inc
push
ss
push
test
adc
test
sarb
adc
orb
bnd
idivl
pop
adc
int3
pop
dec
fcmovnu
es
outsb
and
mov
push
push
fisttpll
insl
mov
shll
out
inc
lods
pop
pop
rcrb
bound
xchg
test
ret
xchg
loop
mov
cmpsb
dec
test
push
mov
and
dec
inc
out
mov
jl
negb
ljmp
pop
enter
sbb
lds
loop
insb
fimuls
outsl
inc
pushf
mov
loop
inc
or
cmc
mov
mov
sub
lahf
mov
adc
sti
ret
mov
fbld
repnz
jne
outsb
hlt
mov
lret
iret
inc
ja
jg
dec
xor
aam
ljmp
ss
and
mov
mov
ret
ret
pushl
mov
add
in
inc
cltd
adc
addl
roll
adc
stos
sub
xor
and
push
ret
mov
aas
jae
out
add
cmp
adc
add
and
loopne
mov
pushf
es
sti
insl
icebp
adc
mov
fwait
inc
push
push
push
or
mov
in
and
lds
lret
cmpsb
mov
sbb
lcall
or
popa
jb
dec
movsb
mov
cmpsb
adc
into
sahf
out
jmp
pop
data16
ficoml
call
hlt
cmp
inc
dec
fnstenv
ljmp
shl
loope
stc
out
jle
dec
cs
jg
clc
cli
mov
push
cmpsl
leave
adc
aaa
jmp
xchg
or
push
xchg
outsb
icebp
fisttps
mov
pusha
inc
fildll
sbb
xchg
in
adc
push
aam
pop
inc
sahf
mov
push
push
dec
xchg
stos
movsb
pop
push
pop
sti
mov
xor
fdivrs
xchg
push
cld
mov
adc
lret
jle
icebp
dec
int3
rcrl
decl
inc
push
sub
mov
outsb
sub
xor
cmp
mov
pop
pop
ret
popa
mov
dec
push
mov
push
sbb
outsl
lret
mov
lds
pop
and
jns
subl
sti
out
aam
mov
call
cmpl
sar
push
clc
mov
cwtl
fwait
test
nop
loope
mov
inc
lds
push
push
add
pop
clc
jg
sbb
pop
std
popf
jp
je
cmpsb
ret
add
fwait
mov
jo
out
adc
add
movsb
mov
out
shl
jmp
lret
out
mov
clc
mov
xor
enter
sub
xchg
aad
scas
shlb
out
jg
dec
xor
mov
cltd
mov
sbb
mov
and
adc
pop
pushl
inc
mov
mov
xchg
outsl
add
mov
lret
enter
jb
mov
cs
cld
pop
std
mov
aas
mov
movsb
cmpsb
jp
adc
pop
int
push
mov
cmp
fcomip
mov
cltd
push
arpl
add
lea
xor
mov
push
ss
mov
test
push
pop
inc
lahf
push
addl
in
mov
dec
add
addl
enter
mov
sbb
cmpsl
dec
jmp
sub
mov
in
push
clc
inc
clc
push
cwtl
cmp
jecxz
cmpl
cmp
adc
iret
sbb
xor
ja
xlat
inc
cld
jle
cmp
sbb
xchg
out
out
mov
movsb
adc
pop
xchg
mov
dec
addr16
addl
jge
insl
jb
les
xchg
div
sub
sarb
into
insl
mov
les
mov
cmp
adc
imul
adc
inc
subl
add
aad
push
xor
cwtl
or
xor
icebp
lock
sahf
cmp
daa
jno
sti
out
out
adc
mov
jge
push
mov
rcr
arpl
enter
notb
insl
xchg
push
popa
mov
scas
jo
pushl
loop
cs
add
push
or
xchg
fadd
mov
xchg
mov
push
add
inc
ja
and
rolb
mov
cmpsb
mov
mov
movsb
jo
lahf
push
jns
mov
ljmp
cmpsl
push
mov
mov
push
fadds
stos
ds
cmpsb
pop
loope
adc
imul
mov
in
adc
test
xor
mov
ret
lret
cmp
dec
test
xchg
inc
out
testl
rolb
addr16
adc
stos
push
dec
stc
mov
jl
pop
enter
cmpsl
shll
mov
adc
sub
daa
push
jno
pop
leave
jmp
xor
sti
mov
adc
pop
adc
fidivrl
mov
pusha
dec
mov
pop
push
adc
push
mov
mov
roll
push
gs
add
push
cmp
mov
sti
imulb
mov
adc
aad
mov
sbb
push
jg
aam
shl
std
movsl
cmpsb
jb
and
ja
ret
clc
aad
les
adc
scas
leave
inc
sbb
inc
pop
clc
rcrl
add
jb
mov
lods
cwtl
xor
popl
dec
rcr
cmp
fstl
nop
adc
mov
rolb
ficoms
cwtl
stos
jmp
fcmovnb
outsl
lea
mov
xor
in
gs
jne
insb
xchg
pop
or
mov
lock
cwtl
shlb
ljmp
jecxz
popa
mov
cmpsl
cmpsl
ja
pop
lahf
jnp
or
xchg
mov
cmp
nop
dec
pop
xchg
xor
mov
inc
inc
popa
push
xchg
pushf
push
or
jecxz
xchg
push
scas
xor
jo
aam
mov
insl
jb
outsb
and
xchg
js
inc
sub
fildll
xchg
xorb
cltd
shl
je
stc
lea
out
dec
jno
fcmovb
ljmp
mov
roll
push
mov
pop
shrb
adc
addb
cltd
mov
and
mov
mov
sbb
pop
div
imul
jne
xor
cltd
lret
aad
xor
pop
pop
cmc
xor
adc
mov
or
mov
lret
neg
and
sbb
push
lcall
lods
mov
pushf
repz
jae
add
jmp
pop
fs
test
ret
xchg
mov
push
inc
cmp
and
lea
and
push
jno
mov
mov
adc
add
je
lds
xor
jecxz
das
lret
mov
in
mov
sbb
inc
push
dec
out
nop
cs
outsl
ss
dec
jp
and
adc
loope
mov
mov
inc
jmp
mov
rolb
cmp
mov
in
sub
jl
cmp
sub
icebp
enter
xor
cli
das
popa
gs
out
arpl
adc
aam
sbb
xor
lock
xchg
mov
inc
push
cmp
push
or
les
mov
mov
or
call
pusha
inc
mov
xor
ds
inc
dec
lds
mov
xor
out
stc
and
leave
mov
mov
test
inc
or
insb
mov
int
xchg
cld
call
add
add
stos
jne
or
jns
add
fs
sbb
addl
jb
push
setb
mov
cwtl
push
lahf
outsb
jo
fdivs
xchg
mov
sub
mov
mov
shrl
or
aas
vphaddwd
or
xor
jnp
lcall
mov
add
lods
cmp
popl
fwait
dec
adc
sub
hlt
dec
jb
or
outsb
cltd
je
jnp
pop
pop
pop
mov
pop
jg
leave
clc
xchg
into
ret
add
jo
mov
outsl
dec
fbld
sbbl
pop
loope
and
lcall
pop
cmp
imul
ret
popl
arpl
les
jmp
sbb
or
sbb
jne
xor
in
xchg
sahf
xorl
sbb
sbb
and
sbb
negb
xchg
fs
jg
test
into
dec
mov
jne
sbb
xchg
mov
sti
sub
sbb
and
push
cmp
dec
bound
leave
pop
mov
daa
ds
adc
cmpsl
mov
pop
bound
cltd
xchg
nop
xor
xchg
fsubrp
sbb
pop
addl
mov
push
aaa
dec
fisubl
xor
imul
icebp
xchg
mov
mov
xor
push
jecxz
subb
add
or
push
xor
and
adc
stos
or
pop
sbb
sbb
xchg
push
jo
xchg
sti
or
divl
sti
push
push
and
rcrl
jg
lods
push
mov
or
and
sahf
and
iret
addr16
dec
fldt
das
cmp
js
dec
dec
loop
dec
jg
jg
dec
adcb
dec
stos
push
js
movb
int3
lahf
add
orb
out
rcrl
cltd
pop
out
pusha
imul
lods
in
fnstcw
aad
scas
dec
cmpsl
scas
or
rcrl
cmp
inc
push
lock
clc
lods
pop
inc
mov
aad
push
daa
jae
dec
imulb
andb
cmp
xchg
jbe
mov
jl
lds
push
inc
sub
sbb
cltd
add
inc
lahf
pop
inc
mov
std
jb
and
dec
xor
mov
ret
nop
add
dec
data16
or
mov
movd
test
adc
lcall
fisttpll
sub
leave
push
xor
cmp
fs
pushf
pop
jg
subb
enter
mov
sbb
into
scas
lds
mov
or
pushf
mov
ss
cmp
cmp
imul
int
mov
and
xorb
bound
loopne
test
test
add
push
insl
and
shlb
mov
gs
and
mov
jl
mov
jmp
mov
mov
ds
xlat
loope
inc
inc
negb
insb
movsl
and
push
jg
lret
test
cmp
mov
fadd
pop
fadd
cld
shll
sub
jle
adc
arpl
hlt
addr16
std
shrl
inc
push
dec
jecxz
das
cld
cmpsb
sub
or
fldl
push
cmpsb
fimull
adc
or
popa
jb
sbb
sahf
loop
fisubrs
inc
add
subb
leave
clc
shrl
mov
xchg
or
scas
fnstsw
dec
aaa
cmpsl
xchg
cmpsl
mov
stos
dec
popa
fwait
pop
and
push
shlb
inc
and
out
addl
ret
shlb
push
xor
sbb
push
clc
aad
jg
int
repz
rcll
or
sbb
jae
jmp
sti
out
lods
mov
in
pop
in
and
push
inc
insb
lea
xchg
sbb
sbb
cmp
out
addr16
pop
loopne
decl
jp
cmp
fscale
cs
int
fs
movsb
xchg
ja
rorb
mov
ljmp
leave
gs
jg
aaa
hlt
test
jo
lret
shl
notb
mov
push
in
pop
js
bound
daa
rcll
dec
xchg
stc
fwait
sarb
dec
std
or
xchg
lahf
cwtl
fidivs
add
mov
sarl
sbb
dec
or
in
jmp
or
es
sbb
in
into
xor
aaa
outsl
pop
push
inc
push
shll
mov
cmp
add
cs
push
call
inc
xchg
pop
push
or
in
cmp
add
insl
push
push
jae
jnp
mov
mov
lcall
lock
jp
test
rcl
xchg
lods
inc
jmp
dec
insl
or
rcr
test
inc
test
dec
pop
and
pop
test
xor
jmp
jb
imul
into
ja
leave
shlb
faddl
mov
push
stos
push
lods
mov
dec
icebp
mov
icebp
mov
scas
mov
mov
test
jnp
lea
pop
fiaddl
add
mov
jae
mov
adc
jno
icebp
cs
push
sbb
or
add
xor
lds
cmpsb
and
jne
sti
fwait
das
adc
pop
and
xor
stc
dec
stos
sbb
js
in
push
fs
xchg
add
xchg
stc
inc
add
sbbl
cltd
aaa
nop
aam
outsb
push
push
jno
mov
dec
or
cld
adc
cmp
jbe
jmp
lock
lods
lea
out
outsl
jae
cmc
mov
inc
push
pop
jp
push
mov
inc
push
insl
dec
das
stos
in
int
test
je
sub
jge
inc
mov
imul
pop
or
pop
sub
test
sub
mov
push
repnz
leave
pushf
dec
push
cmpsb
mov
push
mov
inc
mov
dec
cmp
cmp
stos
cwtl
cld
std
jecxz
jecxz
sbb
lcall
pop
mov
xchg
fdiv
outsb
pop
xchg
imull
sbb
push
pusha
test
scas
sahf
cmp
lret
inc
scas
jmp
lretw
cmp
ja
out
aaa
test
mov
pop
sbb
out
mov
or
jo
cmc
dec
jl
mov
loop
push
mov
and
mov
xchg
mov
or
jmp
sub
push
out
mov
sbb
mov
and
repz
dec
mov
pop
fsubrl
iret
test
add
inc
mov
jle
out
iret
cmp
js
adc
xchg
sub
test
insl
sti
adc
icebp
outsb
jge
in
cmp
mov
imul
notl
movsl
inc
dec
mov
mov
aad
nop
shr
and
bound
cmpsb
enter
sti
push
sbbb
leavew
cmp
repz
fwait
dec
jb
popa
mov
arpl
xchg
mov
daa
jle
add
mov
jmp
cltd
mov
movsl
dec
xor
cltd
stc
jnp
adc
lar
xorl
sbb
enter
and
lea
mov
inc
xchg
fldt
mov
xchg
out
stos
add
mov
push
pop
bound
push
pop
stos
xor
sbb
mov
mov
sbb
jbe
xor
lcall
arpl
dec
gs
sbb
jb
mov
in
movsb
or
mov
inc
xchg
test
ds
pushf
or
mov
mov
sub
fwait
lahf
cmpsb
mov
push
mov
mov
cmp
js
adc
adc
in
add
insb
ret
in
mov
cmp
dec
mov
fwait
hlt
or
popa
fbstp
je
and
add
test
pop
bound
js
sub
xlat
orl
lcall
sbb
xlat
scas
movsl
push
mov
xchg
lods
pop
aam
repz
repnz
fdivrs
das
dec
je
cmp
cmp
push
movsb
mov
sbb
mov
xchg
pop
sub
lahf
or
cli
shlb
and
notl
jp
fbstp
pusha
mov
xor
jb
rcll
ret
ret
outsl
aaa
push
je
push
cmpb
idivl
sub
aas
xchg
and
adc
pop
push
xor
test
jno
inc
mov
inc
mov
push
and
shll
mov
iret
test
xchg
lods
or
sti
loope
sub
xor
lret
cmp
scas
je
in
mov
int3
leave
imul
out
int3
mov
sub
mov
add
and
cwtl
fs
gs
roll
jbe
jbe
xchg
icebp
pop
rol
xor
lea
out
ja
arpl
lods
jge
loopne
dec
into
add
sbbl
mov
insl
idiv
fisttps
lods
adc
in
mov
or
xor
fbld
fwait
sbb
loopne
xor
cmpb
push
shlb
jo
out
or
push
dec
mov
xor
add
inc
cmpl
or
or
pushf
xchg
push
mov
push
add
sti
sti
cmp
mov
icebp
scas
jp
js
or
call
xor
mov
lods
or
xor
jp
mov
mov
ret
push
hlt
scas
mov
cmp
mov
xchg
test
popa
mov
imul
adc
bound
fnsave
or
out
cwtl
jle
fcomp
xchg
mov
es
pop
jo
push
rorb
inc
daa
mov
sbb
push
orl
lcall
cmp
cmc
xchg
and
mov
dec
pop
rcrb
ficompl
hlt
shlw
push
andl
sub
pop
mov
shlb
mov
stos
ja
mov
rcll
mov
test
mov
jge
jmp
inc
test
test
push
pop
inc
popf
mov
sahf
pop
xchg
xor
cmpsb
inc
imul
movsb
xchg
pusha
push
inc
sbb
push
pop
push
sbb
lods
sbb
push
xchg
pop
fldcw
call
inc
insl
fstpt
xor
push
cs
inc
inc
cld
out
pop
inc
sub
imul
cmp
into
shlb
pop
repnz
loope
sbb
outsb
push
cmp
aaa
or
mov
pusha
push
icebp
cmp
fdivrl
adc
fnstenv
sahf
dec
aad
je
jp
push
jns
lock
jp
fldl
scas
int
pop
inc
mov
sub
push
adc
mov
jecxz
fstl
cs
xor
loopne
jmp
cmc
dec
iret
xlat
cmp
fwait
push
mov
mov
fldl
sub
addr16
ss
pop
mov
ret
pop
out
push
pusha
jecxz
xor
pop
jns
mov
popl
push
hlt
sub
loop
and
and
xor
inc
dec
fnstcw
imul
shll
fwait
push
or
fidivrl
loopne
mov
jno
xchg
adc
or
cmpsl
sbb
sbb
sub
lret
push
xlat
movsb
cmp
jmp
loop
and
push
push
pushl
sbb
shrb
jbe
push
sbb
pushf
sbb
ds
das
jle
push
movsl
setge
rorb
mov
inc
xor
iret
scas
fcmovnu
in
add
xchg
outsb
jp
mov
adcb
popa
add
mov
pop
data16
inc
jns
jne
into
sarb
aaa
adc
jbe
jle
fdivr
or
ret
fwait
ror
xchg
inc
mov
std
aas
pop
fisubrl
or
pop
inc
push
and
out
mov
xchg
add
lock
adc
ret
lods
fwait
aam
inc
icebp
sub
int
lds
outsl
jo
fsubrs
mov
cmpsb
out
icebp
pop
daa
push
test
cmp
call
adcl
in
out
mov
adc
adc
in
stc
jae
jle
push
mov
ret
cmpl
in
and
jo
mov
test
dec
or
mov
jge
or
inc
sarl
lods
sub
cld
mov
lea
xchg
and
mov
test
rcrb
push
cmp
pop
fldcw
cmp
popa
adc
jno
loopne
pop
push
sbbb
jbe
xchg
std
jbe
cmc
clc
fs
xchg
or
pop
es
xor
jl
inc
lods
pop
mov
xchg
sbb
es
cmp
call
xor
xchg
sbb
xor
or
adc
and
repz
cmp
pop
push
fisttpll
in
imul
cltd
lea
pop
push
cltd
push
and
shl
inc
fimuls
out
je
mov
stos
out
ds
jae
lods
inc
mov
xchg
or
stc
push
lock
out
andl
add
sbb
xor
cmp
leave
imul
or
add
or
ficomps
imull
popa
xchg
xchg
lahf
push
mov
add
imul
inc
scas
in
push
mov
into
xor
mov
cmp
leave
dec
pusha
mov
test
pop
arpl
push
lods
adc
xor
int3
sub
pop
fbld
arpl
js
hlt
stos
ja
cs
and
xchg
movsl
cmp
ret
xor
je
mov
loop
fstl
pushf
pop
inc
lock
push
inc
adc
int
sub
mov
call
imul
push
add
and
gs
mov
mov
stos
xor
push
pop
push
pop
faddp
mov
movsl
stc
andl
dec
sti
cmpsb
bound
fnstsw
cmpsl
fs
sbb
rorb
arpl
adc
adc
mov
mov
xlat
mov
and
cmp
mov
stc
pop
cwtl
jle
fstl
adc
pusha
stc
or
lret
dec
jbe
lods
hlt
cmpsl
or
sub
test
and
inc
mov
lds
daa
mov
adc
mov
popa
dec
pushf
inc
sbb
xchg
sbb
leave
mov
pop
outsb
inc
ficoml
bound
mov
or
test
xchg
es
pop
lret
clc
rcrb
popf
dec
cltd
cmc
inc
lods
xchg
mov
icebp
pop
ljmp
fisubrl
push
mov
cmc
mov
pop
adc
enter
mov
adcl
adc
js
test
int3
xchg
ss
push
addb
mov
stos
jnp
xor
daa
ja
fwait
and
outsb
sbb
and
dec
pop
push
push
mov
adc
andb
dec
xor
pop
aas
pop
scas
in
cmp
mov
push
lds
adc
pop
jnp
mov
pop
push
rcrb
jg
lock
lock
test
xchg
jae
mov
scas
inc
fstl
mov
fs
arpl
inc
imul
testl
inc
mov
or
movsb
inc
or
and
lock
add
add
mov
fneni(8087
fsubrs
fdivr
test
cli
xlat
std
pop
jg
pop
rcrb
jg
repz
divps
inc
and
cld
dec
outsb
jbe
xchg
ja
in
xor
sub
repnz
divl
pusha
cs
mov
fimull
cmp
sti
dec
addr16
push
cmp
sub
cmpsb
out
sbb
jno
xchg
rorb
xor
negl
jmp
lret
pop
mov
sub
mov
sbb
in
fisubl
and
repnz
dec
mov
mov
mov
push
dec
jns
lea
jmp
dec
sbb
jmp
lods
insb
cmpsb
xor
in
adc
and
dec
mov
sub
adc
or
mov
lds
inc
push
dec
das
cmp
in
mov
ja
icebp
test
mov
icebp
loop
stc
dec
xor
dec
insl
inc
add
es
into
push
in
jle
inc
mov
lahf
dec
xchg
adc
inc
cmpl
mov
push
test
call
pop
adc
add
dec
cmp
orb
fsubl
mov
lcall
jb
mov
pop
sbb
sti
cmpsl
inc
jno
movsl
roll
in
outsl
sbb
mov
and
sub
movsl
and
daa
pop
js
je
sbb
ljmp
mov
outsb
fabs
or
fbld
lret
addb
aad
lods
into
loopne
mov
cmp
inc
or
sbb
adc
or
and
daa
dec
dec
sub
nop
sub
inc
outsb
sysexit
mov
ja
clc
sbb
push
push
mov
add
outsb
aad
mov
stos
push
cmp
mov
push
lods
in
add
or
fcoms
inc
ret
sub
and
sarb
daa
jbe
in
inc
iret
mov
jl
lods
pop
mov
mov
out
je
mov
test
mov
rcl
adc
sub
aam
gs
out
popa
test
dec
testl
stos
xchg
dec
mov
cld
test
or
jne
stos
add
xor
popa
jbe
incb
std
outsb
notl
push
fsubs
cmp
sub
in
cmpsb
jecxz
jnp
sbb
push
mov
and
nop
pusha
mov
int
fisubs
enter
mov
loope
arpl
jae
mov
clc
sub
inc
mov
mov
xor
outsl
std
cmp
dec
jb
adcb
adc
scas
imul
sub
scas
xor
cmpsl
and
orl
popa
jbe
test
add
and
movsb
nop
adc
inc
repz
dec
nop
imul
mov
xchg
xor
bt
push
repnz
xchg
inc
mov
lock
or
push
roll
fsubr
push
jae
dec
cli
pusha
pop
int3
inc
out
in
js
lcall
addr16
cmp
pop
xor
icebp
xor
testb
aas
jae
xchg
aas
jmp
clc
aad
mov
sub
or
mov
call
mov
and
out
mov
push
ja
jmp
dec
pop
out
xchg
fucomip
cltd
sbb
imul
and
out
scas
inc
rorl
mov
fidivrl
insl
jg
inc
aas
ja
pop
sbb
mov
cmpsl
fcmovnb
xchg
fistpl
aaa
xor
ret
adc
sbb
cmc
jo
sbb
out
push
fldenv
cwtl
inc
adc
push
fnstenv
jmp
icebp
fidivs
push
scas
and
setnp
jmp
insb
dec
cmc
inc
push
lcall
pushf
clc
adc
pop
jnp
sti
movsl
jp
addr16
loope
xchg
in
fnstcw
xorb
xor
ret
in
stos
das
leave
jne
sub
jg
fmuls
sbb
sahf
mov
add
test
mull
sub
cmp
imul
push
jecxz
mov
mov
movsb
stos
loop
lcall
push
adc
push
dec
cmc
mov
and
dec
or
jbe
frstpm(287
push
mov
ljmp
lahf
sbb
repnz
test
popf
jle
push
cld
xor
rcrl
fs
rclb
insb
pop
movsl
div
jmp
fs
cmc
ljmp
fs
call
inc
sbb
and
xlat
jp
stos
fcoml
pop
sti
movl
sbb
and
add
adc
insb
rcrl
movsl
aad
jo
aaa
push
lret
add
test
inc
push
clc
std
xchg
imul
andb
je
inc
into
pop
xlat
cld
aaa
mov
ljmp
pop
hlt
mov
popa
jns
sbb
shrl
cs
adc
dec
loop
test
imul
int3
sbb
cmp
inc
cmpsb
aas
or
dec
push
neg
inc
mov
sub
push
mov
aaa
xchg
mov
aam
sbb
push
icebp
test
hlt
sub
cmp
xchg
sub
repz
mov
fidivs
in
int
push
xchg
sub
cltd
call
pop
mov
insl
insb
aad
xor
dec
aad
ljmp
adc
ja
pop
sarb
scas
out
xlat
cmp
mov
fsubrs
sbb
icebp
sub
xor
xor
fildl
subl
jmp
add
xor
sbb
inc
adc
not
pop
and
in
adc
pushf
rorl
arpl
movsb
movsl
out
shlb
jle
inc
ret
outsl
dec
ret
dec
jg
lods
in
inc
mov
popf
or
cmpl
jg
aas
push
jl
clc
pop
add
push
pop
jl
xchg
mov
push
mov
dec
lea
adcb
out
inc
stc
mov
adc
arpl
adc
xchg
dec
jge,pt
or
inc
pop
iret
jb
adc
jae
inc
sbb
mov
in
lcall
movsl
jo
fs
mov
dec
xchg
scas
scas
inc
mov
test
adc
mov
enter
roll
jno
sbb
lock
pop
xchg
xchg
mov
lods
cwtl
add
roll
jge
push
rcrl
into
adc
bound
cs
sub
nop
jl
daa
sub
or
subb
add
int3
push
jo
scas
mov
ds
subl
xchg
sti
rcll
and
adc
sub
js
lahf
and
sbb
aas
mov
mov
shr
stos
dec
jmp
adc
jg
fwait
pop
cmc
ljmp
xchg
cld
popf
mov
jecxz
sbb
sbb
or
enter
into
mov
call
loopne
and
in
sub
lahf
popa
gs
cli
fistl
lahf
ja
arpl
rorb
movsb
fistpll
outsb
fnstcw
mov
repz
push
das
call
lods
cmp
fistpl
scas
sbb
icebp
imul
mov
faddl
jns
movsl
mov
gs
les
insb
js
mov
cwtl
shlb
mov
adc
mov
dec
mov
nop
sub
push
shrb
xor
ss
nop
stos
mov
mov
and
mov
push
out
cli
jae
and
aaa
or
in
cmpsl
mov
ss
jle
leave
ds
adc
dec
or
test
jge
mov
mov
push
cmpsl
insb
cltd
jb
or
push
scas
and
jno
jg
or
in
cltd
loope
pop
and
push
mov
mov
cli
jp
mov
sub
xchg
inc
shrl
xor
pop
dec
push
xor
subb
rcr
push
fsts
repz
xor
insl
push
pop
data16
xchg
lock
cmp
daa
hlt
in
mov
movsl
and
lods
stos
insl
cwtl
repz
scas
cmp
ret
sub
lods
sbb
lds
push
mov
sbb
in
lcall
loop
xor
pop
sbb
cli
js
int3
push
fisubrs
sub
test
cltd
scas
jmp
mov
cmpb
cmp
jl
sub
cmp
add
cld
sbb
popf
int3
jle
lret
mov
out
xchg
pop
test
add
out
and
orb
or
movsb
lcall
cs
or
push
jbe
iret
decl
cmp
cmpsb
jle
dec
push
and
ljmp
xchg
cmpsl
add
pop
xor
sarl
and
cmp
in
push
cmp
jno
jmp
xlat
jns
xor
stos
jne
cmpsl
jnp
xchg
rorb
and
fidivl
dec
dec
cmpsb
push
jl
iret
sti
lcall
dec
push
ljmp
jno
out
repnz
mov
adc
adc
dec
and
xor
nop
mov
repz
mov
test
xchg
dec
cmp
cmpsl
or
fs
and
xchg
stos
mov
or
fwait
mov
adc
rclb
leave
cwtl
daa
in
pop
lret
stos
mov
adc
pop
lret
enter
std
sti
pop
cld
imulb
data16
movsl
out
int3
push
stos
aad
loopne
xorb
push
xor
xor
aaa
jmp
adc
sarl
mov
mov
jle
jg
push
imul
sahf
movsw
and
sub
in
popf
xlat
out
dec
int3
cld
scas
sub
psubw
mov
jbe
scas
leave
divb
hlt
int3
pop
mov
xorb
inc
test
les
fdiv
xchg
push
mov
dec
jne
stos
lock
daa
sti
inc
pop
fistpll
stos
jge
loope
lahf
push
cmp
push
inc
sub
and
cli
or
xchg
imul
sub
mov
sbb
cmp
add
jg
movsl
jb
hlt
call
push
and
fsubrl
sub
and
inc
push
mov
cmp
or
mov
nop
pop
mov
mov
dec
mull
cld
cbtw
nop
rolb
jno
jg
rcll
arpl
and
lock
lds
mov
xchg
das
incl
jno
inc
push
call
jb
cmp
jg
andl
pusha
lods
int
dec
pop
cmpsl
jg
cld
add
xchg
fmul
lods
cltd
gs
push
ficoml
out
jecxz
mov
jne
dec
rorl
and
xchg
imul
test
sub
pushf
inc
loopne
push
fs
push
bound
and
test
jl
cltd
xor
mov
mov
push
jmp
fimuls
loope
in
or
scas
in
dec
mov
les
into
aas
ret
jnp
mov
sbb
ss
push
xchg
pop
movsb
jle
xor
push
xchg
lds
mov
inc
dec
gs
adc
daa
push
mov
andb
or
push
xchg
ljmp
cmp
ja
mov
sbb
mov
pop
adc
addl
ljmp
cmp
cmpb
aad
adc
leave
clc
mov
repz
insb
mov
andl
pop
pop
mov
sub
mov
in
pop
lret
jmp
push
dec
lahf
out
loopne
xchg
movsb
ror
inc
push
jne
cwtl
dec
lret
and
cmp
add
dec
int3
js
test
cld
popa
dec
subl
leave
jb
and
inc
lods
daa
mov
lahf
jecxz
xor
js
jp
xor
jge
loope
test
sub
cmpb
xchg
mov
rolb
cbtw
mov
or
rep
push
ret
cmp
aas
out
xchg
jg
add
out
jae
scas
dec
aad
cmp
dec
jecxz
xlat
push
fs
lock
pop
nop
cmp
jbe
jge
sbb
lret
cmp
jne
sbb
xor
push
sbb
cmp
leave
movsl
xchg
mov
cmp
mov
xchg
je
pop
les
rcr
and
push
adc
js
aad
jbe
sub
into
sub
pop
aam
fdiv
inc
cmp
js
negl
leave
scas
sub
ljmp
adc
sbb
dec
and
push
loopne
sub
pop
ds
xor
or
sbbl
leave
mov
dec
cmp
mov
out
mov
fildl
inc
mov
mov
das
pop
lret
xchg
movsl
add
lea
cmc
bound
addb
lock
mov
adc
mov
pop
push
and
dec
dec
lahf
add
mov
sar
push
mov
pop
push
shlb
push
mov
repnz
mov
mov
lret
pop
scas
fimull
and
imul
clc
stc
js
imul
cmc
sbb
stos
ds
ja
push
and
sbb
daa
xor
je
add
mov
ljmp
jne
ja
lea
adc
pop
dec
sbb
xchg
sbb
lcall
mov
pop
jp
js
adc
push
fimull
scas
negb
test
sarl
jl
jb
rcll
leave
cmp
out
pusha
js
loop
stc
addr16
and
or
out
inc
xor
cmp
xlat
xchg
jns
aad
adc
add
lret
pop
andb
xchg
add
mov
jno
pop
lcall
test
pop
inc
push
pop
loop
fcmovu
loop
test
cs
xlat
xchg
iret
into
mov
imull
xlat
push
adc
adc
push
sub
lahf
orl
fidivrs
jo
lcall
out
adc
popa
adc
or
ds
outsl
sbb
adc
mov
imul
cmp
dec
xchg
fldcw
mov
mov
in
test
sub
inc
in
cmpb
movl
dec
rsm
dec
call
or
and
fisttpll
int3
into
std
push
mov
mov
jbe
out
mov
xchg
or
lea
insl
inc
inc
push
xor
dec
test
dec
mov
ljmp
adc
testb
lods
pop
lds
das
aad
add
sub
pop
mov
mov
jns
iret
aam
jne
mov
mov
pushf
int3
lcall
sub
cmp
fsubl
test
stos
aas
popf
out
pop
movsb
sub
jne
pop
xorl
push
mov
ret
clc
test
sbb
lcall
pop
xchg
fcomp
and
and
ficoms
fistpl
imul
lret
mov
dec
imul
push
sub
dec
sub
pop
mov
lret
xchg
sbb
cmp
xchg
jle
js
popa
sti
fucomi
or
add
stos
inc
lret
in
jge
fldenv
mov
mov
xor
add
inc
xchg
call
and
test
mov
je
out
dec
jne
in
or
rorl
test
lret
sbb
jge
jl
loope
mov
mov
cmp
mov
fs
and
sub
nop
mov
xchg
fdivp
xchg
dec
mov
mov
xor
hlt
inc
neg
and
inc
loopne
sbb
adc
aam
subl
out
mov
ret
mov
inc
adc
jns
hlt
push
iret
lods
xor
push
push
mov
clc
icebp
pop
out
xor
lods
leave
ss
mov
dec
adc
jmp
adc
and
insb
cmp
mov
cmp
xchg
mov
xor
gs
loopne
jmp
mov
lea
cmp
sub
pop
push
stc
push
and
test
lods
push
dec
mov
ljmp
mov
add
dec
mov
mov
int
jne
fldt
push
das
dec
xchg
pop
imul
push
fmul
in
pop
popf
cmp
sbb
aam
cli
out
ret
dec
sub
mov
iret
into
mov
filds
mov
in
inc
sbb
hlt
lret
or
negl
and
pop
lcall
and
adc
std
mov
mov
cmp
and
ret
xchg
imul
mov
fists
xchg
mov
sub
push
stos
cmc
sarl
jnp
insb
xchg
shl
fcoms
cmc
nop
fcomps
mov
or
add
add
mov
cmp
mov
jl
dec
push
mov
sub
adcl
mov
xchg
mov
jmp
mov
sbb
imul
sti
jns
jecxz
fldl
cmp
popf
xor
xorb
dec
add
jl
mov
aaa
mov
or
and
xor
std
or
xor
lea
nop
stos
test
decl
shr
insl
push
ja
or
shll
xchg
cld
pop
dec
add
call
icebp
fwait
jo
ja
mov
or
sar
movsl
fwait
push
in
call
stc
out
push
sbb
subb
in
mov
add
lods
or
jecxz
jbe
dec
test
loop
fstpl
xchg
jmp
sub
or
cli
fistl
pusha
clc
sub
push
cmp
fstpl
mov
les
lea
mov
xchg
dec
ror
jo
daa
lret
fs
fistps
cwtl
mov
jbe
out
jb
push
in
gs
mov
sahf
sahf
jp
dec
lret
lret
push
enter
jmp
out
pushf
shlb
mov
adc
sub
xchg
shrb
xor
fwait
cmp
sbb
ja
sbb
and
repz
pop
arpl
stc
mov
je
sub
ljmp
flds
pop
adc
mov
arpl
loope
out
cmp
add
stos
loop
roll
cmp
popl
pop
jl
fidivs
out
pop
adc
mov
dec
div
sarb
jmp
testb
sub
sbb
out
aaa
jmp
push
add
das
and
jbe
or
icebp
xor
out
ds
sub
push
mov
fwait
mov
push
ficompl
std
push
mov
mov
mov
adc
dec
cltd
lea
push
lods
mov
loope
call
jmp
jno
or
dec
ret
xchg
jp
mov
mov
jecxz
adc
lret
aas
push
sbb
fucomip
cltd
cmp
xchg
movsb
movsl
lret
lods
mov
mov
push
sub
mov
cltd
cmp
mov
arpl
inc
es
fcmovnb
int
mov
divb
sbbl
pop
jg
xchg
dec
mov
lea
and
or
pop
stc
push
testb
scas
inc
int
adc
test
movsl
ret
jno
push
mov
xlat
movsb
test
enter
push
pop
sbb
jno
mov
aas
push
push
inc
icebp
inc
push
or
pop
jnp
add
ss
es
jmp
xor
in
insl
fadd
popf
inc
nop
fwait
cmp
or
cmp
sbb
fwait
test
sbb
fmul
lret
sti
lea
cwtl
outsl
into
or
jbe
icebp
popf
and
stc
notb
icebp
push
mov
ljmp
xor
pop
lcall
sub
out
mov
loop
test
and
jecxz
loope
mov
xor
xchg
push
mov
lods
inc
daa
inc
jno
lds
jecxz
enter
sub
jmp
fdivrl
sub
or
jp
pop
cwtl
mov
push
ret
xlat
inc
and
arpl
lahf
sahf
testl
sub
sbb
andl
popa
sbbb
pop
lret
jno
sub
mov
filds
test
dec
imul
cmp
sbb
sub
dec
repnz
or
xor
and
xchg
add
lods
mov
scas
sub
dec
scas
mov
dec
ja
sub
add
cmp
stos
push
movsl
outsb
std
jg
push
aad
sub
mov
outsb
iret
sub
fstps
icebp
add
in
int3
fisttps
jg
test
and
pusha
cmp
push
loop
out
fcompl
inc
add
hlt
dec
test
adc
add
fiadds
insl
movsb
pop
cwtl
ret
and
mov
or
sub
cmp
inc
int3
mov
icebp
leave
xor
sub
iret
cli
xor
mov
fnstsw
xchg
mov
push
xor
mov
pop
sbb
ja
pop
cwtl
adc
test
in
jle
movsb
mov
sbb
sahf
sub
aaa
xor
stos
sub
stc
jnp
dec
xor
rcl
adc
int3
xor
lret
into
in
push
daa
fstp
ret
scas
stc
add
insl
push
pop
iret
or
jo
cmpsl
mov
cmp
aad
or
fldl
imul
lcall
adc
pop
fldl
lock
cmpsl
push
sti
and
in
mov
dec
push
mov
out
adc
mov
jmp
aas
jns
sahf
or
push
pushf
lock
insl
das
and
iretw
mov
push
xchg
leave
test
nop
sub
fcomi
pop
into
sbb
rclb
fidivrl
push
jge
arpl
loope
jb
mov
fsubrp
inc
cltd
pop
jecxz
nop
pop
in
pop
nop
push
das
mov
jbe
je
aam
jns
push
mov
jle
les
adc
dec
xchg
shl
ds
es
push
xchg
cmp
xchg
aaa
inc
pop
sti
and
mov
add
lret
push
loopne
cmp
ret
subb
cmp
rcrb
gs
aaa
mov
arpl
add
xchg
xchg
ret
push
mov
mov
inc
es
outsl
stc
sub
in
sub
rcl
cmp
push
out
push
imul
mov
stc
xchg
push
push
sub
int
int
add
jp
sub
adc
sbb
fsubs
mov
movsl
in
fwait
xor
lods
iret
mov
xlat
and
xchg
sub
in
jp
mov
orb
ficoms
ljmp
mov
or
jmp
outsb
xor
jbe
loope
loop
fwait
pusha
push
cmp
pop
arpl
add
push
lock
add
jae
xorl
ret
pop
loopne
pop
les
mov
push
push
mov
cmp
push
mov
and
fdiv
inc
pop
hlt
inc
xchg
fwait
shlb
lahf
mov
arpl
sub
inc
leave
sub
mov
out
loope
or
jno
push
das
sub
mov
adc
sub
fsubrs
and
xlat
mov
mov
repnz
pushf
or
std
hlt
mov
stc
sub
pop
mov
dec
jae
scas
or
data16
mov
mov
xor
shlb
sub
ret
jge
add
jge
in
movlps
cmpb
rcrl
test
xor
ljmp
in
test
dec
ss
ss
cli
ret
sbb
sarl
sbb
and
fs
lret
mov
sub
movsb
rol
sbb
jbe
mov
pop
mov
mov
xchg
adc
inc
push
icebp
xor
shll
mov
push
cmpsl
mov
or
jbe
xchg
fdivs
nop
add
dec
push
push
xchg
add
ljmp
insl
push
call
lds
xor
jbe
mov
out
mov
repz
ds
mov
clc
sub
and
push
movsb
lahf
mov
dec
mov
iret
sub
outsl
mov
mov
adc
aaa
rorb
xor
test
ror
test
stos
pop
mov
pusha
sub
push
mov
mov
js
jns
or
xor
adc
jg
cmp
dec
xor
xchg
pop
or
adc
pusha
xchg
mov
cmp
out
xor
push
dec
notb
cwtl
cwtl
lcall
jnp
ljmp
xlat
inc
clc
cmp
sub
test
push
xor
push
adc
sub
std
sbb
movsb
out
jmp
inc
notb
add
je
add
jne
push
rcrl
fwait
mov
dec
pop
jnp
cmp
sub
iret
lds
jge
fbstp
pop
mov
pushf
or
fisubrl
mov
cmp
in
jnp
ret
stos
xlat
push
js
jp
sub
add
aas
push
hlt
push
ss
enter
adc
adc
sti
movsl
fwait
pop
sub
add
test
adc
mov
add
add
push
jns
mov
inc
pop
cs
xor
out
push
adc
mov
addr16
pop
inc
lcall
popf
fildll
pop
insl
cld
pop
leave
pop
pop
rcrb
sbb
outsb
mov
push
into
and
push
jp
xchg
test
xchg
out
push
mov
sub
addr16
xchg
cmpsb
mov
fldl
je
mov
push
ja
cs
xor
pushf
sub
jae
into
mov
sub
cmc
dec
fsubrl
pop
pushf
or
sarb
xorl
xchg
clc
mov
add
jno
and
in
add
push
sbb
and
enter
push
test
addr16
cmp
enter
mov
pop
repnz
in
adc
jp
push
push
dec
xor
insb
out
mov
jne
inc
mov
pop
lcall
pop
call
mov
mov
xor
arpl
sub
push
jecxz
xchg
adc
dec
in
imul
out
ror
rolb
jge
sub
arpl
push
call
daa
pop
jl
adc
mov
leave
and
movsl
mov
pop
frstor
jnp
cltd
pop
sub
sar
jnp
jne
add
or
or
movsb
shl
cmp
cmp
xlat
je
dec
daa
jbe
sbb
leave
test
dec
xchg
jecxz
sub
jns
out
in
stc
fwait
lcall
sahf
fildl
testl
subl
das
in
sbb
stos
pop
inc
sbb
add
mov
in
ss
add
scas
xchg
stc
adc
pushf
mov
bound
test
push
mov
adcb
push
aam
xor
inc
pop
outsb
mov
add
lock
push
sbb
jbe
mov
adc
mov
mov
daa
int
arpl
add
cmp
inc
adc
test
mov
fdivr
shlb
jae
mov
mov
test
int3
jbe
mov
fsubrl
es
xchg
les
aas
das
sub
add
mov
xchg
xchg
xchg
jbe
push
loop
mov
adc
and
notb
jmp
cmpb
mov
jp
loopne
mov
sbb
inc
lock
jns
in
or
sahf
mov
rorl
pop
les
ja
mov
neg
push
dec
loope
aas
test
add
dec
out
movsb
xor
fdivp
pop
push
xchg
or
sub
mov
or
iret
call
jge
and
sbb
push
sahf
icebp
mov
jne
ss
lods
lcall
rolb
cmpsl
out
rep
push
mov
sub
call
xor
jae
lea
push
cmp
dec
mov
fists
into
sarl
pop
scas
sbb
adc
andb
sbbl
push
in
mov
inc
sbb
push
mov
lods
adc
mov
mov
adc
ljmp
in
pop
and
mov
xchg
dec
mov
mov
or
adc
hlt
and
sar
in
mov
jle
bound
out
mov
cmp
push
lret
push
fmuls
fmull
and
sbb
aam
in
mov
jle
mov
inc
cmp
vpmacssdql
xchg
fmul
inc
add
dec
cmp
in
fs
sti
cmove
mov
imul
mov
xchg
and
xlat
test
outsl
mov
sarb
clc
mov
cmp
inc
outsl
fidivl
push
popf
dec
scas
cmc
hlt
and
setle
sub
cmpsb
mov
movsb
pop
ds
mov
aad
fsubrl
shl
stc
in
mov
stc
insl
sti
js
xorl
mov
mov
int3
jmp
push
sahf
pop
jne
or
lea
sub
dec
mov
aaa
ljmp
pop
daa
pusha
or
xchg
sbb
and
and
test
mov
cltd
aaa
cmpb
sbb
sub
mov
loop
add
mov
adc
mov
jno
jno
and
insl
adc
dec
push
lahf
mov
lahf
mov
xor
sahf
cmpsl
and
sub
test
xchg
cwtl
mov
xchg
repnz
jne
sbb
push
cwtl
dec
cwtl
std
fsubrs
and
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fildll
sbb
jp
inc
movsb
sbb
out
shlb
fwait
add
jae
ret
fiadds
imul
mov
lret
fmul
out
xchg
mov
mov
hlt
std
xchg
cmp
mov
je
cmp
inc
cmc
mov
enter
popa
addb
push
and
adc
ja,pn
insl
inc
fisubl
push
out
and
lahf
rol
add
jb
in
xor
sbb
cmc
add
cli
xor
ja
mov
lcall
sbb
or
sbb
scas
push
out
xchg
pop
inc
add
jp
pop
inc
es
dec
rclb
cmp
adc
xchg
popf
or
loopne
xchg
sbb
movsb
sub
bound
fidivrl
stc
out
loopne
xchg
mov
test
xchg
test
out
jbe
xchg
shlb
cmp
icebp
icebp
les
repz
xchg
test
fdivl
stc
cmp
mov
pushf
sub
fwait
xchg
ss
lock
jmp
xchg
mov
mov
push
std
movsl
mov
sbb
or
cmp
mov
je
orb
push
mov
xorl
fdivr
repnz
adc
leave
and
mov
add
jp
or
xchg
popf
test
jecxz
dec
int
push
lods
jmp
fsub
jmp
into
or
cmpsl
xor
push
sub
bound
cmc
jno
xchg
xor
mov
inc
lcall
xor
and
fucomip
scas
lock
fmulp
jbe
pop
jg
and
mov
clc
mov
mov
bound
add
negb
arpl
pop
lock
fcomps
movsl
lods
add
mov
vshufps
movsl
pop
pop
push
xchg
and
idivl
sub
mov
enter
scas
into
inc
push
ljmp
and
and
pop
je
jmp
cmc
andl
push
sbb
xor
mov
or
and
cmp
xor
test
dec
setp
xchg
add
lret
movsb
popa
lahf
lahf
and
shll
jp
rcll
or
lods
push
inc
push
lret
inc
mov
add
xor
dec
mov
push
push
fsubrs
pop
clc
mov
loopne
inc
out
mov
in
xchg
lods
mov
enter
dec
out
add
push
xchg
imul
out
stos
loop
mov
push
add
adc
lret
cltd
and
in
aaa
or
jns
mov
sbb
push
lahf
pusha
xchg
arpl
push
mov
out
pop
data16
cmc
mov
popf
sbb
cmc
fistl
les
pop
xchg
jbe
aam
inc
sub
cmc
cmp
dec
pop
pushf
adc
shll
stos
sub
filds
es
sub
cli
jecxz
lods
inc
das
push
cwtl
int
jnp
inc
cld
mov
ja
into
sbb
cltd
sub
aaa
pop
rolb
fiadds
pusha
into
mov
adc
outsl
sbb
fstl
sbb
hlt
fildl
repz
push
xchg
dec
push
xlat
xchg
xor
jo
dec
ret
and
inc
or
lret
or
xchg
mov
das
arpl
out
adc
inc
outsb
stos
pop
rorb
std
xor
mov
dec
adc
pusha
sarl
jge
adc
nop
jge
scas
mov
in
ljmp
pushf
jl
fs
int
xor
mov
xor
pop
push
cmpsb
cltd
inc
rorl
icebp
pushf
xchg
std
pop
andl
jns
sti
jl
add
inc
sub
jns
mov
or
popa
pop
sub
mov
and
add
and
outsl
pop
rolb
adc
xor
iret
mov
out
repz
mov
and
and
lea
leave
sbb
xchg
push
mov
popf
je,pn
push
push
dec
sub
jb
or
xchg
adc
pop
sarb
jbe
pop
in
fcoml
mov
scas
push
js
or
pmulhuw
cmp
pop
adc
pushf
xor
scas
popf
pop
decb
loope
pop
fisubrs
hlt
enter
nop
lcall
in
std
push
fsubs
sbb
mov
pusha
add
dec
mov
sub
inc
shll
xor
add
xchg
jg
int3
xchg
mov
loopne
push
aaa
les
pushf
mov
cmpsb
lock
data16
lods
xchg
pop
fdivp
in
in
scas
enter
cmc
mov
mov
lock
mov
adc
cmp
pop
pusha
sbb
outsb
push
dec
and
ja
jge
std
std
fsubrs
adc
ljmp
es
mov
cmc
daa
call
push
into
xor
add
ja
mov
mov
mov
popf
and
or
dec
ljmp
sahf
adc
xor
sbb
mov
mov
pop
push
lea
fisttpll
cmp
mov
mov
pop
xchg
and
loopne
shr
push
adc
sbb
hlt
lret
mov
fucom
sbb
xor
outsb
scas
insl
test
adc
mov
mov
push
aaa
mov
scas
outsb
push
test
sbb
cli
pop
sahf
xor
das
fbld
sub
sbb
adc
jne
push
xchg
into
add
or
mov
inc
xchg
xchg
lcall
insb
lods
daa
stos
push
or
lock
cmc
decb
outsb
fisttpl
mov
dec
dec
insl
repnz
adc
inc
insb
notb
dec
push
mov
jl
cmp
mov
pop
jle
mov
adc
aad
pop
incb
pop
xor
or
and
test
fistpll
test
or
dec
mov
imul
pop
ds
cmp
pop
xor
push
mov
pusha
adc
mov
dec
add
les
sarb
cli
clc
jle
out
insb
mov
and
xor
and
jp
aaa
sbb
out
add
inc
sti
jnp
and
xor
push
popa
xchg
or
mov
mov
lods
jns
into
xchg
jne
adc
xor
cs
popa
push
mov
outsb
pop
mov
pop
loopne
xor
add
jns
sbb
lods
push
pop
or
ss
insl
and
lods
pop
in
stc
pop
inc
jo
add
cmp
lret
call
jno
dec
adc
push
mov
loope
insl
stos
in
cltd
bound
test
fimuls
cld
fisttps
xchg
push
je
cld
jne
inc
inc
cli
aaa
aad
sub
mov
add
out
sub
mov
jno
inc
mov
int
sub
sbb
lret
shr
xchg
repz
sub
and
adc
jecxz
pop
jmp
inc
mov
lcall
es
sbb
inc
xor
insb
lds
mov
inc
cmp
and
cli
mov
cmp
dec
pop
bound
mov
and
push
popa
dec
out
addl
mov
push
pushf
mov
fs
addb
xchg
scas
xchg
or
dec
dec
xor
mov
sub
mov
mov
cmp
stos
rcrb
mov
cmp
push
xchg
xchg
inc
push
adc
jo
lds
jle
pop
imul
add
xchg
fiadds
or
push
sub
jecxz
lret
aam
les
jp
xchg
dec
pop
ds
add
adcl
sti
out
mov
sbb
leave
or
js
or
adc
and
xorl
jno
dec
xchg
je
daa
lret
ss
xchg
adc
mov
add
icebp
jb
imul
out
sub
orl
int3
jo
add
xchg
repnz
jmp
movsb
cmp
into
stos
dec
push
lock
jb
xor
cmc
mov
sub
mov
aas
faddl
mov
mov
shl
fldl
adcb
sbb
std
das
adc
and
push
push
xor
testb
ljmp
ret
mov
push
and
mov
mov
pop
jp
sbb
out
cwtl
sub
insl
call
pop
mov
shl
xor
je
fsub
sahf
mov
fnstenv
cmp
mov
enter
rolb
or
sub
xor
nop
adcl
pop
pop
out
inc
repnz
test
incb
cmpsb
push
mov
outsb
inc
stos
mov
out
loope
test
mov
clc
popa
add
fisubl
xor
popf
jle
jecxz
or
sbb
call
xchg
ret
shlb
rclb
jg
mov
and
add
fneni(8087
jb
pop
jl
data16
lcall
sub
cmp
add
mov
add
ds
sub
push
xor
sub
add
mov
mov
imul
or
cmpsb
movsl
push
mov
data16
jl
imul
call
jo
js
enter
and
es
pop
push
out
mov
xlat
fadds
xor
mov
ret
xorl
lods
cmp
mov
sbb
out
pushf
hlt
repnz
mov
loop
call
sahf
rorb
pop
sbb
mov
pop
dec
cmp
and
jo
inc
xchg
dec
xlat
jle
push
jecxz
sub
sbb
data16
adc
or
in
or
in
xchg
adc
movsl
cmpsb
pop
lahf
push
scas
or
mov
pop
add
ja
push
fistl
jg
cwtl
in
inc
mov
loop
in
lock
aad
inc
pop
mov
adc
int
add
mov
aas
fstpl
in
lds
adc
push
fildll
fstpt
jbe
mov
push
push
xor
and
stos
fimuls
sahf
scas
push
xchg
fcoms
push
xchg
mov
aad
cld
mov
push
jno
popa
icebp
pop
xor
dec
addr16
fcomi
cmp
andb
faddl
pusha
push
js
pop
repz
ret
pop
pop
inc
andl
hlt
xlat
dec
out
sub
cmp
mov
dec
pop
xchg
and
xor
shlb
out
iret
push
out
lods
mov
add
jecxz
stc
inc
inc
push
data16
out
mov
cmpl
jl
pop
push
jae
in
imul
js
pushf
jbe
mov
int
mov
jb
xor
ret
add
imul
ret
fmuls
rcrb
imul
xchg
sbb
lds
add
stc
lret
icebp
pop
jmp
subb
mov
and
fistpl
stc
push
dec
or
xlat
mov
scas
aas
cmpsl
push
xchg
jnp
pop
add
mov
push
cmp
cmp
jge
mov
repnz
xchg
sahf
shrb
adc
shr
das
pop
or
xchg
out
cmp
jecxz
lea
jb
mov
sub
push
cmpsb
cmovae
std
and
addb
out
sub
cwtl
in
in
push
add
pcmpeqd
or
sub
inc
jbe
mov
fdivl
pop
cmp
aas
jl
mov
add
or
aad
mov
mov
xor
inc
pusha
or
and
call
push
addb
mov
sbb
push
push
or
jmp
jo
lods
gs
lea
cmpsb
inc
jle
add
xor
scas
lret
dec
xor
stc
inc
in
insl
mov
inc
mov
insl
adc
mov
mov
jae
movsl
xsaves
pop
cmp
adc
and
js
add
cmp
mov
and
test
inc
jo
sbb
or
pop
mov
pop
mull
ja
jno
daa
outsb
mov
lock
or
outsl
in
sarb
or
xor
fsubl
call
sahf
jle
lods
and
stos
dec
leave
or
shl
push
jno
movsb
mov
int
lret
jb
mov
addr16
xchg
cmpsl
sub
or
mov
add
test
aas
push
cmpsl
test
imul
test
fs
test
mov
sbb
lret
cld
cld
stos
jl,pt
scas
scas
aam
mov
lret
fnsave
int
xor
push
mov
push
stc
jle
psubusw
mov
jns
jno
sar
pop
icebp
clc
fcoms
xorl
xor
xor
mov
push
repnz
jns
nop
test
mov
out
mov
add
stos
ret
jb
add
or
and
sahf
add
inc
jbe
loope
mov
pop
and
dec
les
sub
stos
jl
decl
xchg
sbb
add
imul
jae
push
pop
call
mov
mov
lret
fdivl
cmpsb
imull
enter
mov
sbbl
cltd
fadd
outsl
xchg
mov
xor
mov
jg
fcoml
jb
jns
jae
jmp
mov
xor
push
out
in
sub
jmp
nop
dec
or
sar
lods
push
fwait
repz
xchg
les
mov
mov
jp
inc
pop
je
mov
stos
xchg
int3
and
test
pushf
jmp
movsb
je
loopne
mov
sahf
jmp
in
mov
cwtl
add
mov
mov
andl
sbb
jp
aad
xor
pusha
mov
lea
or
dec
dec
lock
and
mov
pop
push
pushf
cmp
loope
std
fwait
mov
sub
mov
jecxz
xlat
cwtl
aam
cs
repz
jo
movl
js
cwtl
into
jb
cs
cmp
inc
sub
dec
out
mov
das
xchg
and
jecxz
cmp
add
push
cld
ljmp
addr16
ret
and
cmp
sahf
cltd
jb
xchg
adc
xor
clc
dec
ja
icebp
adc
inc
fcompl
push
sarl
icebp
push
cmp
pop
outsl
stos
mov
shlb
mov
loopne
xchg
sarl
or
adcl
push
out
popf
dec
mov
xor
sti
cld
xchg
push
cmp
push
outsl
xchg
mov
adc
outsl
out
jnp
pushf
xchg
lcall
jns
adc
and
xchg
out
lahf
hlt
mov
addr16
mov
outsl
in
repz
adc
arpl
sbb
push
clc
mov
pop
neg
aad
in
mull
push
fldcw
int3
mov
or
xchg
cmpsl
cmc
dec
mov
mov
cli
fwait
push
pop
into
stos
repnz
xchg
rcl
and
rcll
push
jg
inc
test
mov
imul
mov
faddl
mov
push
aas
pop
mov
lcall
out
pop
adc
mov
inc
dec
jnp
cmp
mov
xchg
movsb
xor
inc
mov
mov
jl
lds
xchg
fcomi
xchg
sub
inc
aaa
pop
cmc
cltd
cltd
ljmp
pop
mov
pop
sahf
adc
pop
in
fcomps
std
sub
jno
cmpsl
jp
mov
cmp
jmp
xor
xchg
fcmovnbe
outsb
and
iret
adc
imul
divb
mov
adc
movsl
mov
xchg
xchg
add
shlb
pop
cld
xchg
imul
scas
lret
andb
out
dec
pusha
lds
add
push
nop
mov
pop
out
in
adc
mov
pushf
xor
popf
std
clc
push
inc
call
jge
sar
movsl
outsl
fcomi
sbb
frstor
into
jecxz
cli
hlt
push
movsl
fdivl
jmp
arpl
push
add
cmc
out
pop
scas
popa
jle
lret
mov
xor
mov
fwait
mov
mov
jge
add
add
mov
loop
fwait
mov
xor
push
inc
aas
lret
adc
add
cmp
mov
insb
or
sub
xchg
es
xor
jae
cltd
push
push
lea
xor
dec
int3
adcb
iret
mov
andl
loop
xchg
xchg
shrl
std
inc
pop
sub
sbb
aaa
push
sub
in
sbb
fimuls
adc
xchg
pop
adc
sbb
pop
add
jmp
mov
movl
ret
cs
push
inc
cmp
int3
data16
add
lea
push
lock
cmp
inc
push
cmp
jne
sub
xlat
xor
mov
das
popf
push
stos
or
call
cmc
dec
adc
imul
addl
inc
adc
adc
jp
pop
jle
jne
jl
dec
cmc
and
pop
mov
jns
cmp
pop
mov
mov
mov
mov
lret
dec
cld
push
adc
int3
cmpl
dec
sbb
adc
lahf
xchg
xor
dec
out
jle
in
jmp
mov
ja
add
andl
shl
pop
pop
jecxz
mov
inc
das
jmp
mov
jne
inc
shrl
add
xchg
add
xor
dec
add
jl
push
jp
jg
repnz
pop
sahf
push
out
in
pause
and
andb
mov
mov
xchg
cmp
jb
jae
imul
mov
stos
fistpll
scas
andl
mov
enter
sbb
cmp
dec
sbb
pop
sbb
dec
cmp
mov
xchg
cld
jb
dec
ja
popa
cmp
dec
mov
and
sbb
jne
fisubl
cmp
cmp
jno
call
inc
mov
jge
pop
sub
xchg
stc
cld
aad
ljmp
cwtl
stos
cs
sub
inc
jb
cmpsl
inc
push
jge
sbbw
pop
add
jns
les
xchg
adc
mov
sbb
push
loopne
xchg
mov
sbb
nop
out
scas
mov
mov
and
in
adc
push
xor
in
clc
lods
aas
imul
xor
xor
pop
movsb
nop
sub
jmp
icebp
jecxz
or
popf
es
push
cmpsl
dec
pushw
mov
xor
pop
idivl
in
xor
es
pusha
xchg
mov
dec
lods
cltd
xchg
xchg
mov
xor
cmp
inc
xchg
decb
push
sub
mov
lods
inc
arpl
dec
or
in
push
ret
fwait
sbb
mov
daa
fs
push
adc
dec
sub
pushw
add
adc
sub
or
jnp
jns
gs
add
xchg
test
sarl
js
cli
mov
mov
pop
jecxz
mov
pop
cs
not
add
in
xor
xchg
fstps
lods
mov
mov
sbb
scas
fistps
xchg
inc
xor
jp
and
orl
add
or
sub
mov
jns
aam
cmp
imul
xor
icebp
loop
jo
or
jle
xor
adc
or
movsb
cli
mov
insb
je
ss
fdivrp
fwait
push
leave
idivb
data16
xchg
movsl
sbb
out
push
sub
int
fwait
dec
mov
lea
mov
pop
fcoms
cld
jmp
les
fwait
cmp
decl
addr16
lock
lock
js
hlt
insb
dec
inc
int3
mov
les
push
adc
mov
idivl
fwait
ljmp
lock
scas
sub
inc
add
into
cmpsb
sar
and
xor
je
daa
xchg
and
jbe
stos
jo
mov
add
push
arpl
push
movsb
lods
mov
xorb
mov
or
bound
sbb
mov
movsl
sub
addr16
jae
push
add
push
insb
mov
outsl
xchg
fidivl
push
fsubrp
shll
testb
cmp
sbb
mov
shrl
jnp
jnp
dec
call
add
mov
xlat
idivl
cmpsl
pop
and
add
mov
mov
adc
and
hlt
add
repnz
sub
xchg
cmpsb
popf
xor
repnz
or
pusha
in
arpl
ja
adc
cmp
call
pop
loop
pop
jg
in
push
mov
sahf
shlb
mov
popa
dec
mov
lret
mov
mov
notb
sub
or
pop
inc
loop
inc
cli
andl
ja
je
rorl
mov
insl
in
je
mov
lret
pop
mov
fwait
xchg
pop
add
xor
dec
mov
lods
loopne
in
cmp
lock
or
sahf
imull
in
lret
mov
insb
fsubs
in
jnp
in
inc
jl
dec
cmpsb
insb
add
icebp
inc
push
jg
sti
xor
lret
addr16
in
lds
jns
mov
div
pop
mov
mov
js
dec
cltd
ret
test
adc
cld
pop
das
sbb
xchg
test
mov
sahf
pop
std
jns
pop
mov
mov
aaa
loope
mov
xor
in
dec
push
mov
in
dec
and
std
les
enter
test
fdivrp
adcb
repz
pop
loopne
sub
mov
cld
push
rcl
mov
adc
sub
je
icebp
icebp
mov
mov
jl
pop
lods
lds
scas
cmp
scas
cmpsb
sub
imul
cmp
adc
jg
pusha
add
xchg
xchg
cmpsb
sahf
mov
movsl
mov
dec
mov
or
cmp
jp
das
hlt
pop
out
aaa
test
xchg
inc
cmpb
aam
cmc
fldenv
push
push
xor
dec
nop
xchg
outsb
mov
mov
cmpb
inc
mov
add
inc
test
jp
mov
test
push
sbb
lcall
pop
dec
loop
cmp
gs
pop
ss
hlt
jo
dec
inc
mov
mov
imul
dec
cmp
cmp
lods
cmp
cmp
cs
sbb
stos
arpl
leave
cmp
sub
xchg
cmp
mov
or
dec
lods
pushf
sub
testl
movsl
dec
sub
test
out
pop
and
pop
sbbl
xor
and
decl
mov
add
cmp
add
push
jle
xchg
iret
cmpsl
rorb
ret
fidivrl
pusha
or
mov
xchg
xchg
xor
cmp
jne
xchg
pop
fistpll
sbb
xor
sub
mov
into
pop
stos
push
jl
xor
cwtl
ret
test
push
cli
dec
and
mov
movsl
sub
outsl
push
shlb
out
adc
pushf
andl
cs
dec
add
mov
cwtl
push
mov
xchg
dec
push
imul
loope
sti
jmp
insl
add
xchg
inc
inc
push
or
or
cmp
scas
mov
add
fstl
jge
inc
fs
scas
xchg
cmpb
pop
scas
pushf
mov
fidivs
xor
sti
fld
sti
push
fbld
fmulp
add
lods
out
adc
push
xchg
sub
mov
cmpl
es
repnz
inc
icebp
mov
sub
test
and
in
mov
movsb
rol
decb
and
rcrb
ds
mov
xchg
push
cmp
cmpb
aad
lods
cld
inc
pushf
ds
les
stc
mov
push
push
and
lret
push
mov
addr16
cwtl
mov
and
inc
push
mov
sar
gs
dec
enter
roll
inc
subb
cs
imul
dec
or
mov
adc
in
cmp
mov
jnp
mov
dec
out
inc
gs
mov
fsts
lods
aad
jmp
into
jle
lods
and
sub
lret
pop
dec
adc
pop
cli
in
xchg
test
or
inc
and
lods
inc
sub
icebp
or
cmp
sbb
cltd
sub
inc
int
fcomp
dec
sbb
xlat
inc
xchg
xchg
loopne
loop
je
inc
xchg
mov
inc
and
addr16
insb
push
rorl
add
mov
int
jmp
add
test
ljmp
daa
cmp
stos
sbb
popf
out
cmpsl
ljmp
xchg
or
dec
mov
jmp
mov
ret
push
pop
and
cmp
jns
lahf
xchg
inc
sbb
cwtl
test
push
push
pop
mov
fstl
pop
xchg
mov
fcmovu
xchg
movsl
shlb
sbb
imul
xchg
outsb
adc
iret
sbb
mov
bound
pop
nop
inc
inc
leave
mov
sbb
aad
xor
lret
mov
lcall
bound
mov
in
sti
mov
notl
mov
stos
outsb
mov
test
cs
jp
in
and
xchg
push
push
lahf
push
fcmovb
add
test
fs
inc
cltd
sbb
dec
out
mov
inc
nop
push
and
mov
lahf
stc
fstpl
lret
gs
imul
aam
or
fcoms
fimull
jmp
cltd
mov
pusha
mov
lea
movl
push
mov
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
fsubl
add
and
mov
