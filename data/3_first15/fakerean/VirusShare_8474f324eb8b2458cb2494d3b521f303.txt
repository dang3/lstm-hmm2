xor
push
push
push
push
push
push
push
call
add
cmp
jne
push
push
push
call
mov
xor
inc
ret
xor
ret
push
mov
push
call
pop
ret
push
mov
sub
push
push
push
call
mov
movl
mov
mov
call
test
je
movl
jmp
mov
xor
mov
mov
dec
mov
mov
mov
pushl
push
mov
call
pop
pop
mov
dec
mov
cmp
je
lea
jmp
mov
mov
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
mov
mov
add
mov
add
mov
mov
lea
jmp
call
xor
inc
pop
leave
ret
push
mov
push
mov
imul
imul
push
neg
push
sbb
push
and
push
pushl
call
mov
mov
mov
sub
mov
mov
xor
mov
inc
sub
dec
jne
pop
xor
pop
inc
pop
pop
ret
int3
int3
int3
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
dec
inc
push
xorb
cld
add
cmp
add
and
xor
lods
jno
shlb
ljmp
cld
cmc
cvtpi2ps
push
test
mov
ret
add
outsl
xor
sub
out
push
pop
xchg
es
mov
push
or
jo
and
push
xchg
adcb
xor
xlat
jb
push
inc
lods
pushl
nop
pop
and
inc
add
fmulp
das
xchg
imul
xchg
out
test
pop
inc
cmp
cmp
jns
int3
cmp
rorl
enter
xlat
jmp
mov
roll
lret
cmpsb
stc
cmc
je
push
pop
dec
pop
and
inc
loop
js
fst
dec
test
out
iret
stos
cld
movsl
in
xchg
push
jno
loope
mov
jg
les
stc
sbb
ret
out
repz
push
mov
or
rolb
popf
inc
inc
aad
lods
call
fs
stos
addr16
negl
adc
imul
rcr
into
repnz
adc
cmpsb
cmc
fcomi
mov
int3
adc
pop
scas
cwtl
fsts
cli
out
dec
add
pop
pop
les
push
mov
cmpsl
cmp
inc
add
outsb
mov
xor
int3
mov
loopne
push
inc
jne
popa
pop
jo
loop
mov
mov
js
cltd
pushf
cmpb
rep
pop
mov
std
xchg
add
cld
lret
cs
mov
add
mov
negb
xchg
test
and
add
mov
jo
mov
adc
mov
int
mov
mov
xlat
push
xor
push
mov
pop
shlb
subb
jmp
cmpsb
test
add
call
push
movsb
sbb
out
add
fdivrl
pop
loope
and
sbb
pop
pusha
adc
mov
or
fldcw
into
push
bound
inc
inc
cmp
jo
xchg
inc
lcall
movsb
movsl
pop
retw
mov
popf
and
push
dec
mov
xor
inc
lods
sub
sahf
pop
sub
sub
in
shll
out
ror
out
jmp
in
scas
insl
fstpl
loopne
jg
mov
movsl
sarb
inc
jnp
cmp
testb
je
and
jmp
popf
or
test
pop
push
into
xor
mov
in
jg
jp
sti
sub
in
mov
scas
in
jmp
add
ret
inc
adc
testl
dec
adc
pop
push
pop
lods
repnz
mov
add
ret
xor
sub
jle
fs
xchg
out
and
cs
dec
xchg
out
push
test
mov
and
xor
insb
jl
xchg
push
pop
ja
lcall
int
sbb
xchg
push
dec
mov
in
pop
filds
or
cli
push
fucomi
fwait
add
mov
or
inc
dec
push
popa
arpl
xor
xor
jg
mov
or
sbb
loope
fbstp
pop
xadd
jo
push
dec
testb
pop
outsb
jbe
sbb
add
imull
mov
or
pop
add
loop
xchg
add
xor
pop
pop
pop
add
jge
cmp
sbb
xor
movsl
sub
xchg
pushf
lods
dec
add
sahf
imul
nop
je
lret
add
imul
scas
test
inc
adc
std
and
gs
pop
adc
add
cli
popf
fnsave
push
sbb
pop
lret
xchg
ds
push
push
mov
sbb
xor
neg
sbb
cmp
jg
iret
ret
sbb
cmp
imulb
pop
out
inc
les
shlb
push
inc
mov
push
scas
ja
cmp
out
inc
push
flds
pop
pop
sub
sub
repnz
push
or
xchg
scas
sti
or
sbb
scas
jae
test
dec
pop
ljmp
fdivrp
fwait
movsb
mov
jae
sarb
inc
scas
andb
arpl
sbb
pop
inc
push
mov
dec
fimuls
and
or
rcrl
lahf
inc
lret
out
adc
mov
ljmp
out
mov
adc
mov
test
rcr
cmc
repnz
or
rorb
fucom
loop
mov
outsb
ljmpw
shl
decl
xchg
sbb
ds
inc
mov
xor
dec
jae
xchg
adc
xchg
push
lods
sub
leave
iret
popf
inc
dec
sub
sub
lcall
mov
mov
fnstcw
adc
clc
xchg
inc
adc
out
jecxz
imul
orb
das
fiadds
push
shrb
data16
jge
mov
jo
mov
ret
pop
les
mov
bnd
jecxz
movsl
negb
mov
es
push
sub
iret
cmp
pop
out
andb
mov
jg
call
sbb
cmp
xor
jne
fisubrl
xchg
xor
out
and
insl
xchg
jo
xchg
sbbl
xor
jle
sti
addb
shll
jno
dec
sub
repz
xchg
testl
xchg
xchg
ds
or
int
nop
out
aas
and
push
cwtl
addl
push
int3
cli
fs
and
fnsave
mov
or
push
in
inc
push
dec
lret
scas
rclb
aam
mov
inc
je
testb
pop
cmc
sbb
ss
xchg
aas
addb
ficompl
sub
loope
nop
dec
mov
fld1
fildll
iret
test
dec
ja
dec
jmp
popf
cld
mov
mov
sub
sbb
sbb
push
dec
shll
mov
popa
xorl
divb
jecxz
lods
dec
sarl
pop
cmp
xchg
outsl
test
pushf
add
push
xchg
cmpsb
pop
and
pop
pop
xchg
imul
xor
std
cmp
sahf
push
inc
dec
pop
xchg
out
lcall
fldenv
or
test
xchg
data16
xchg
rol
sub
clc
mov
loopne
sbb
cmp
or
and
xor
les
push
sbb
add
in
ss
fs
pop
fs
sub
fldl
sbb
sub
dec
mov
mov
cmc
jge
adc
nop
loope
jo
jp
jo
inc
mov
push
arpl
xchg
mov
mov
arpl
mov
jo,pn
popa
jge
int3
mov
in
inc
lods
outsb
dec
mov
mov
fs
frstor
inc
mov
into
int
lret
lcall
loopne
xlat
ror
call
jno
xchg
mov
icebp
rcl
adc
loopne
cwtl
fidivl
inc
sbb
vpabsw
push
and
push
inc
push
lock
int3
jecxz
les
outsl
xchg
push
sbb
push
pusha
and
std
popl
sbb
xchg
cmp
mov
fwait
add
cmpsl
xor
notb
std
ret
decl
stc
lea
outsl
dec
and
fadds
push
insb
or
jp
push
sbb
xchg
cmp
and
and
hlt
icebp
xlat
xchg
or
jns
sub
cld
in
mov
pushl
sub
jb
push
js
dec
push
stos
jbe
ficomps
dec
dec
addr16
decb
imul
les
xchg
hlt
std
mov
jno
pop
mov
sbb
js
jl
test
imul
mov
cmp
inc
add
rcrl
jecxz
add
aas
je
pop
cs
cwtl
iret
outsl
xor
dec
sub
push
push
cmp
mov
stc
mov
or
imulb
lds
in
or
mov
lahf
out
popa
sbb
push
ud0
sub
out
sbb
negb
sbb
mov
test
push
adc
lahf
rclb
sub
mov
mov
and
jb
push
in
loope
jns
lods
fdivrl
mov
stc
sub
fadd
pop
push
pop
in
inc
push
push
inc
or
rcrl
xlat
mov
in
int3
arpl
adc
jnp,pt
sbb
or
imul
in
out
jle
pop
aas
dec
xchg
or
and
push
test
pop
xor
cmp
mov
lock
stos
out
out
inc
pusha
adc
mov
mov
jnp
lods
loope
jp
cli
clc
test
loop
push
sub
bound
pop
test
sub
mov
push
call
mov
mov
in
insb
push
mov
xchg
test
fcomip
ret
mov
mov
or
loopne
cmpsl
mov
or
popf
mov
sub
ds
pusha
in
add
ljmp
fs
sarb
adc
out
sar
in
test
enter
cld
mov
ss
add
jnp
insb
jb
pop
cmp
dec
pop
sbb
dec
fcmove
ljmp
mov
dec
cmp
lret
sbb
shrl
sbb
daa
int
dec
imul
pop
mov
insl
in
push
into
push
je
cmpsl
std
add
sbb
ret
rolb
imulb
ficompl
loop
push
inc
sbb
push
ljmp
jns
add
mov
and
fimull
dec
push
hlt
cmp
daa
push
test
inc
ret
daa
add
sar
mov
sub
jle
pop
push
lahf
mov
adc
popf
xor
or
xlat
or
int
mov
out
sbb
xorl
mov
add
mov
imul
js
lahf
pop
in
and
inc
xor
adc
jg
inc
add
movsb
jge
sub
mov
das
mov
or
xchg
adc
jmp
sub
xor
jno
into
xor
add
sahf
push
dec
scas
sarb
jecxz
inc
arpl
xor
push
adc
sub
adc
mov
mov
cwtl
icebp
loope
movsl
aad
mov
push
dec
hlt
and
jns
shlb
inc
lods
dec
adc
xchg
ljmp
icebp
and
lahf
aas
out
test
mov
scas
dec
cmpsl
mov
jb
xchg
push
jae
loopne
cmp
and
mov
and
mov
jbe
sahf
xor
ja
scas
mov
sub
popf
add
or
fbstp
arpl
test
and
aad
fildll
je
cmp
stos
xchg
ficoms
popf
jg
sub
mov
lret
xor
dec
std
je
xor
and
cmp
arpl
es
mov
ljmp
je
sbb
sub
xchg
repnz
ja
in
mov
push
fadd
or
and
fs
loop
jmp
jae
xor
xchg
push
sub
dec
mov
xor
int
xchg
mov
inc
icebp
hlt
dec
test
cmpsb
aad
sbb
xchg
int
fwait
mov
mov
cmp
jbe
ds
ljmp
mov
mov
loope
punpckhdq
cmc
xchg
push
push
push
pop
dec
arpl
mov
and
aas
push
sti
shlb
cmp
pop
clc
xchg
fwait
xchg
mov
adc
mov
push
mov
pop
xchg
jp
mov
mov
loope
pusha
or
or
aas
mov
jmp
ss
rol
test
pushf
lret
int
lret
pop
dec
push
js
jnp
xchg
sub
sahf
js
add
ss
mov
loop
sbb
rclb
data16
mov
push
jo
mov
scas
xlat
cmp
js
mov
fdivrl
bound
xchg
sub
add
dec
fldz
cwtl
fs
insb
inc
mov
push
es
in
lods
mov
lahf
push
gs
bnd
cmpsl
jno
cmp
add
mov
in
sbb
xor
pop
call
cmp
es
lock
add
xchg
out
addl
xorb
and
leave
movaps
enter
lret
sbb
data16
aam
pop
jnp
ret
push
mov
insb
movsl
jae
cmp
stc
out
stos
repz
jmp
sub
insb
aas
inc
mov
shlb
ja
clc
popf
icebp
mov
cli
mov
add
adc
adc
push
loop
add
testl
xchg
add
xor
stos
test
dec
sbb
in
popf
pop
xchg
mov
adc
add
and
js
lahf
xchg
pop
inc
lock
push
inc
mov
cmpl
jb
test
test
sbbb
or
into
or
sub
int3
lahf
mov
ficomps
repnz
subl
push
pop
sbb
adc
and
mov
ja
sub
lahf
daa
xchg
xchg
sbb
lcall
jne
mov
dec
movsl
ss
clc
and
std
jmp
mov
dec
push
faddl
ljmp
shll
and
mov
lods
adc
adc
mov
cmp
shll
inc
or
mov
dec
xchg
std
mov
mov
addr16
dec
pop
adc
lret
mov
dec
aas
pop
add
adc
call
mov
jecxz
lcall
push
ja
sbb
push
and
das
adc
ljmp
mov
push
ja
lea
arpl
leave
mov
out
rcll
mov
test
test
push
std
daa
pop
or
lret
in
scas
inc
lcall
pusha
mov
test
addr16
adc
cmp
dec
addr16
mov
addb
ja
scas
ljmp
add
cmpsb
jmp
sub
cmp
or
or
andb
jnp,pt
sbb
iret
adc
or
inc
sub
out
push
jb
sbb
aad
pop
ficoms
dec
bound
sub
mov
scas
scas
push
lods
jl
imul
and
jmp
and
jp
xchg
test
and
hlt
out
pusha
dec
add
outsb
out
and
mov
pop
ret
push
adc
insb
adc
sbb
mov
movsl
in
mov
iret
push
jb
jo
loop
cs
ret
xchg
call
popf
sbb
xor
test
divb
mov
in
sub
fisubs
in
stos
xor
cmp
movsb
xlat
mov
negb
inc
imull
jge
popl
push
ss
xchg
lahf
or
push
xchg
je
je
int
push
dec
shrl
xor
cmp
orb
and
push
or
inc
pop
xor
js
shrl
pop
sti
imul
push
psrlq
pop
orl
mov
loopne
inc
imul
pop
inc
cltd
xor
jge
xchg
addr16
dec
sbb
jle
add
scas
aaa
push
xor
aam
jae
int3
fwait
and
arpl
pop
inc
jg
dec
cmp
popa
or
mov
stos
xor
add
mov
jle
push
js
fwait
cmp
jg,pt
mov
sbb
adc
js
dec
push
movsl
pop
lret
dec
and
mov
adc
les
adc
lret
rolb
aas
push
aaa
shll
mov
push
or
cs
stc
test
mov
and
sbb
add
jl
ljmp
sub
and
ljmp
pop
fs
xchg
jb
pop
jle
fisubl
popa
push
and
scas
jle
loopne
sub
fisubl
mov
mov
stc
aas
xchg
sub
dec
clc
shrl
or
lea
les
repnz
mov
xchg
jae
cmp
sti
popa
in
pop
cmp
or
stos
scas
je
mov
mov
or
into
mov
add
or
js
adc
sahf
jb
in
inc
icebp
add
inc
leave
mov
or
sti
cmpsb
mov
fisubrs
test
mov
inc
jno
mov
les
xchg
movsb
aas
pop
xlat
orb
adc
cltd
mov
sbb
les
xchg
xchg
sarb
cwtl
cmp
dec
mov
adc
xchg
cs
aad
pop
sub
dec
aam
mov
pop
mov
mov
jae
mov
or
mov
jno
les
int
ror
jb
repz
in
inc
iret
or
sahf
dec
sub
dec
dec
xchg
jo
add
mov
or
sbb
cltd
in
mov
std
jmp
or
addr16
pushf
xor
add
cmc
ss
xchg
add
clc
jns
lods
and
xchg
paddsb
ret
dec
sarl
jo
ds
cmc
fiadds
enter
sbb
push
pop
pop
adc
mov
inc
hlt
ret
mov
xrelease
sbb
leave
ss
pusha
ret
stos
pushf
nop
sub
push
mov
repz
mov
xor
jbe
xor
inc
cmp
mov
fwait
dec
mov
mov
cmp
and
fmul
in
ja
or
push
mov
aas
push
imul
push
jg
insl
mov
sbb
fldcw
and
mov
and
fcoms
dec
pop
pop
sub
pop
mov
dec
jmp
test
lea
pop
mov
push
popa
in
test
addr16
pop
fs
ljmp
xchg
mov
sbb
or
mov
out
call
fidivrl
stos
pop
jp
in
popf
shl
adc
jnp
cmp
inc
dec
jecxz
rolb
mov
and
xchg
mov
sbb
fisttpll
aaa
and
test
sub
out
mov
lahf
push
lods
test
lea
dec
out
fisubs
and
jb
fs
add
frstor
test
inc
or
push
in
popf
xchg
or
cli
xor
jg
ja
adc
ljmp
and
or
sub
mov
xchg
aaa
mov
mov
jae
push
add
aam
and
daa
aas
faddl
and
in
xchg
aam
cli
or
mov
cmp
hlt
subl
fincstp
lret
sub
loopne
std
inc
jnp
mov
mov
test
mov
das
mov
fwait
hlt
xchg
in
push
cmp
sbb
and
es
rolb
dec
cmpsb
arpl
in
gs
push
jl
add
icebp
jns
mov
jb
inc
xor
cmp
jge
adc
loop
test
jne
inc
aas
shrl
sub
lahf
rclb
stos
jb
mov
aam
into
sbb
mov
mov
pop
lahf
or
scas
lret
or
mov
test
pop
sbb
mov
rorl
fadds
nop
xlat
or
mov
and
gs
sbb
fucom
push
movsl
adc
dec
push
xlat
inc
or
mov
insb
fcom
add
scas
adc
pushf
rcll
jl
push
cmpsb
outsb
into
cltd
shlb
pop
fistps
and
sub
sbb
into
into
add
inc
cmc
jnp
or
cmp
mov
mov
sub
ja
dec
mov
pop
stos
jb
inc
into
shrl
fistl
or
pusha
mov
out
dec
push
test
mov
xor
les
mov
or
stos
das
popl
out
je
jbe
in
es
hlt
pop
mov
pop
out
enter
adc
imul
into
and
adc
loope
mov
cmp
fcmove
icebp
into
imul
adc
cmp
mov
jo
or
xor
lahf
push
push
sbb
adc
xchg
fstpl
add
mov
and
fwait
sbb
cmp
jecxz
jge
das
pushf
pop
data16
repnz
sbb
lock
sbb
jnp
mov
push
adc
mov
movsl
aaa
mov
mov
dec
xor
popf
mov
dec
adc
sub
jbe
jnp
jl
sbb
gs
push
cmpsl
jbe
fs
pop
pop
inc
insb
jmp
xchg
add
aam
mov
jne
into
cmp
clc
ljmp
psubw
jb
and
fptan
pop
or
lods
ljmp
fmull
imul
cmp
lret
or
inc
out
sahf
les
adc
cld
ffree
nop
pop
mov
dec
sub
int3
stos
xchg
outsb
arpl
lods
or
sbb
jle
adc
inc
cmp
jns
and
push
push
les
add
jmp
xor
mov
jecxz
aad
or
pop
fnsave
or
xor
cmp
sbb
fisttpl
adc
jnp
pop
rcl
mov
icebp
pusha
aad
cmpsl
and
cmp
add
shrb
mov
jp
inc
dec
and
ret
sbb
outsb
outsb
push
or
ljmp
xchg
pop
lds
pop
jmp
or
push
loop
jne
mov
ret
js
and
push
in
ss
adc
and
pusha
ret
cmp
movsl
lsl
and
loop
idivl
popa
push
jp
mov
rorl
cld
dec
daa
stos
inc
rorl
or
lods
and
inc
lret
pop
and
cmc
rcrl
scas
roll
ret
xchg
stos
dec
stos
mov
int
adc
lret
push
fildll
lods
mov
pop
imul
lods
shlb
dec
fists
xchg
movsb
xchg
inc
jge
aas
out
or
daa
into
jle
and
cld
fwait
adc
pop
xchg
mov
push
xchg
xchg
push
add
scas
sub
inc
or
divl
in
mov
mov
lea
inc
leave
mov
pushf
pushf
fs
lock
xor
sbb
sub
fs
out
or
lcall
fs
sub
add
jmp
mov
jl
nop
out
es
mov
enter
mov
clc
mov
jmp
popa
cltd
push
xlat
leave
cli
in
cmpsb
mov
xchg
int
jo
lret
addr16
mov
cmp
jle
xor
mov
push
lahf
xor
sub
mov
hlt
push
dec
jnp
jl
mov
imul
jnp
rcl
nop
data16
daa
push
shll
inc
push
xchg
or
jmp
push
in
xchg
dec
insl
and
and
daa
aaa
insb
out
fsts
jo
je
or
mov
pop
or
add
push
or
jnp
fcomps
mov
or
sub
or
sti
mov
inc
sub
or
xlat
sti
mov
dec
xor
mov
jnp
inc
adc
out
or
jnp
rolb
jno
bound
loop
add
ret
add
push
sub
mov
and
mov
xchg
mov
test
ret
jns
mov
jp
lcall
sti
cwtl
lcall
dec
mov
sbb
call
aam
add
lods
stos
sbb
ret
xchg
ja
pusha
push
mov
mov
hlt
add
imul
sub
mov
std
sub
add
in
and
lds
adc
dec
orb
clc
jns
jbe
and
push
sbb
aad
mov
mov
inc
addb
or
daa
les
adc
mov
xchg
mov
lods
rcll
xor
mov
xchg
test
aaa
cli
push
out
loop
sbb
mov
lock
ds
adc
mov
imul
mov
and
daa
mov
pop
movsl
fistl
push
jge
sub
hlt
jne
xor
inc
mov
aaa
aam
insl
jbe
imul
fsubl
cmpsl
repnz
adc
jno
out
jp
jge
jg
mov
notl
xchg
scas
daa
cmc
sti
aad
adc
pop
mov
sub
mov
nop
sbb
scas
cmp
pop
jb
sahf
push
insl
fwait
rcll
push
and
jl
pop
dec
int
adc
das
xchg
mov
dec
jp
ret
lcall
es
mov
or
inc
repnz
inc
hlt
cli
add
ds
push
xor
mov
xor
cmp
mov
mov
inc
jle
test
mov
mulb
xor
or
add
mov
mov
jne
lock
or
aam
lahf
sbb
add
mov
and
and
ds
push
rclb
fs
jecxz
xchg
rcrb
xor
cmp
jo
adc
enter
xchg
jl
ja
sbb
shl
xchg
out
mov
jp
xchg
movsl
into
sahf
ret
cmpsb
push
add
lcall
aad
xchg
decb
imul
pusha
test
jns
fcomps
in
iret
push
push
leave
mov
dec
push
lahf
pushf
xorl
ja
and
xor
aaa
fs
sti
stos
clc
ffree
mov
lds
rorb
xor
and
jecxz
xor
movb
imul
jne
dec
jle
xor
xchg
cltd
xor
push
mov
pusha
out
aaa
sbb
jno
fimuls
mov
and
gs
mov
lds
push
imul
sub
dec
xor
in
mov
sbb
fisubrs
and
sti
roll
ljmp
mov
rol
rcrb
pop
movb
out
jo,pt
inc
mov
or
xchg
jp
insb
sahf
aad
data16
push
gs
movsl
les
adc
rorl
mov
in
xchg
lret
add
inc
xorb
xor
mov
mov
dec
mov
mov
fld
mov
rcll
scas
jns
jp
std
bound
mov
cli
jo
fsubrl
or
and
and
sub
sti
jnp
jno
pop
mov
xor
xor
test
dec
nop
int
add
pop
adc
jecxz
cltd
fwait
inc
cmpb
xchg
dec
lods
xor
xor
insl
fiadds
push
ss
cmovl
pop
lret
les
push
pop
arpl
test
mov
aas
fwait
call
sub
lods
or
jp
scas
js
xchg
cwtl
or
ret
pop
pop
call
jns
xchg
icebp
jecxz
xchg
cmp
mov
push
xor
rolb
aad
loop
cli
sbb
mov
fs
jb
call
cli
lds
nop
xor
dec
ret
jns
sti
jg
add
mov
fwait
and
sub
pop
sar
add
scas
je
dec
mov
dec
lcall
lcall
xchg
jmp
mov
push
sub
call
mov
insb
adc
or
dec
mov
fdivl
jl
gs
jmp
imul
nop
repnz
jp
mov
jbe
sub
sbb
mov
mov
pop
mov
jbe,pn
repnz
sbb
cmp
jge
dec
scas
add
icebp
dec
pop
sarb
or
xchg
out
xlat
jae
xchg
xchg
xchg
mov
xchg
aad
mov
dec
ss
fsubrs
add
bnd
push
pop
and
xchg
clc
sbb
adc
mov
inc
in
hlt
adc
jmp
ja
fwait
push
xor
jb
pop
mov
inc
push
mov
cmpsb
bound
das
mov
shrl
cmp
test
rol
lea
lea
fcomps
cmp
or
je
jmp
mov
and
sarl
xor
outsl
sahf
insb
add
fisubrs
and
adc
adc
mov
rcl
test
test
dec
lods
dec
ret
xchg
mov
inc
jbe
push
sbb
inc
mov
test
clc
imul
icebp
lret
and
dec
sahf
std
loop
cld
nop
leave
inc
push
in
lea
xchg
pop
gs
adc
xchg
aas
xchg
pop
xchg
enter
push
mov
push
aad
add
clc
stos
andl
icebp
int
js
push
shlb
push
in
mov
adc
fiadds
sbbl
cld
in
imull
lds
sub
jno
pop
mov
cwtl
cltd
imul
scas
dec
xor
faddl
sbb
movsl
fdivr
push
lea
fdivr
in
cmp
cld
cmp
dec
in
or
xchg
arpl
xchg
sbb
sub
subb
insl
popa
push
test
outsl
pop
xlat
ret
fadds
test
lret
cmp
xor
xlat
testb
dec
in
es
mov
sbb
mul
dec
mov
jg
popa
ficompl
mov
mov
xor
lahf
fadds
rol
jbe
mov
movsl
fdiv
lret
in
mov
and
mov
xchg
aam
mov
mov
mov
into
ret
mov
call
pop
or
jnp
cli
xchg
and
xor
mov
push
sub
jecxz
popf
mov
mov
sub
jnp
mov
xchg
pushf
mov
sti
in
test
out
pop
adc
sbb
cmp
movsl
adc
mov
push
or
lods
aas
mov
and
iret
push
cli
mov
loop
push
adc
xchg
adc
add
inc
repnz
aam
adc
inc
clc
push
sbb
lods
or
xchg
ret
movsl
lea
pushf
es
pop
sbb
outsl
or
xchg
clc
push
in
in
leave
xchg
outsb
pop
and
mov
jne
cmpsb
mov
test
mov
pushf
jns
push
inc
xchg
jae
xchg
std
pop
jb
xlat
daa
lret
pop
leave
addr16
int
mov
pop
push
xor
lahf
loope
lret
mov
test
fisubrl
pop
mov
lods
inc
mov
ffreep
lret
push
mov
fs
push
pop
outsl
negb
cmp
fwait
dec
je
shlb
inc
jg
dec
add
repz
xor
mov
xchg
push
xor
icebp
clc
outsl
mov
cmpsl
inc
je
pop
sub
ret
pusha
xor
loopne
sub
and
aam
stos
enter
mov
testl
pop
cmpsb
jmp
in
xor
jo
xchg
add
add
mov
sub
rcrb
mov
dec
mov
enter
adc
out
cld
int3
inc
mov
aad
test
dec
shll
pusha
lods
rcrb
shll
aam
std
cmp
and
mov
and
lods
outsb
ljmp
jmp
mov
adc
std
push
cmp
or
fwait
push
push
mov
sbb
add
out
js
cmp
dec
jb
xor
cmpsl
mov
add
out
push
in
test
stos
aad
add
in
mov
mov
aaa
xchg
mov
cmc
addr16
and
and
test
cmp
clc
jno
adcl
xchg
adc
pop
pop
and
fs
or
xchg
ljmp
mov
cmc
inc
lret
mov
xlat
mov
add
mov
outsl
jae
out
fbstp
xchg
shlb
fidivrs
or
push
jmp
push
jo
and
rcll
xchg
pusha
dec
push
ficompl
daa
jmp
repnz
imul
test
mov
lock
xor
inc
adc
pop
lock
sti
push
jmp
shlb
sbb
xchg
adc
repnz
les
cmpsl
mov
scas
repz
idiv
rclb
mov
stc
or
xchg
fists
dec
pushf
fisttps
adc
add
add
xchg
xchg
cmp
xchg
icebp
filds
pushf
push
inc
pusha
jb
xor
addr16
sub
aam
lret
mov
std
shlb
fdivp
xchg
jo
cmp
jo
ret
jne
aas
inc
ljmp
cli
in
xor
lahf
or
lods
in
push
sub
push
mov
or
je
imul
ficomps
sub
sbb
stos
and
mov
jb
stc
dec
pop
ret
mov
stos
add
push
lret
xchg
xor
add
sub
inc
sbb
pusha
lret
dec
out
add
les
in
dec
pusha
cmp
mov
repz
data16
leave
inc
adc
test
ret
fstpl
cmp
sub
xorb
popf
pop
int
lcall
inc
bnd
mov
shrl
lods
adc
jmp
jecxz
sbb
sbb
test
iret
pushf
fdivrs
test
jne
sbb
dec
icebp
xchg
je
ja
jge
in
and
cmp
cmpsb
sbb
dec
shlb
dec
jp
pop
jo
and
loopne
mov
rcr
adc
mov
aaa
leave
jg
add
shlb
sbb
or
mov
std
into
imul
pop
adc
sub
and
out
into
test
ds
andb
adc
rolb
sbb
arpl
fimull
ss
adc
mov
arpl
jle
out
daa
mull
or
adc
adc
or
icebp
xor
push
add
call
cld
fidivrl
mov
loopne
out
pop
fcmovb
xlat
mov
pop
stos
mov
or
push
ljmp
scas
sub
mov
lods
cmc
fnsave
and
and
and
nop
idivl
xor
fstpt
les
xchg
ret
cmp
push
insb
hlt
repz
les
cmpsb
adc
mov
adc
adc
mov
push
push
mov
and
sub
loope
std
cmp
loop
xor
daa
mov
mov
mov
subb
add
xchg
or
mov
adc
popa
popa
mov
and
popa
xor
lea
xchg
out
arpl
mov
cmpsl
sbb
lock
add
lods
pop
xchg
mov
das
xchg
cmp
neg
xor
inc
outsl
xchg
mov
arpl
sub
push
stos
cmpsl
sbb
leave
jg
cmpsl
call
sub
shrb
mov
insl
dec
mov
testb
pop
in
clc
mov
sbb
ds
fidivrs
lods
sarb
loop
sbb
push
jge
xchg
icebp
and
aaa
sahf
xor
out
in
loopne
test
stos
push
jge
arpl
icebp
in
adc
pop
data16
pop
xor
mov
aaa
les
dec
test
xor
sbb
pop
dec
add
pushf
cli
ss
adcl
mov
popa
xlat
pusha
pop
nop
jae
call
dec
pop
and
and
cmpsb
dec
fiaddl
or
into
stos
xchg
mov
fs
iret
stos
mov
sub
fstpl
dec
js
and
fidivrs
insl
test
jae
and
sbb
add
fisubl
lcall
sub
or
and
add
loope
jnp
insb
mov
out
cli
sbb
dec
test
les
outsl
xor
cmp
dec
cmpsl
mov
jp
pop
xor
orb
push
or
pop
lods
js,pt
out
jo
xor
sub
pop
ja
xor
cld
fadd
or
roll
cmp
xchg
jbe
and
mov
rcrb
xor
or
iret
popa
callw
std
pop
fwait
lahf
sub
pop
int3
inc
xlat
lea
loope
push
pop
fcmovbe
fs
in
aam
lahf
nop
das
mov
jbe
andb
addr16
mov
test
mov
cmp
ror
shlb
xor
or
hlt
dec
gs
inc
divb
stos
jge
scas
jb
stos
xchg
xchg
and
cltd
xchg
pusha
or
inc
addr16
ja
mov
cmp
jo
xor
pop
push
mov
dec
mov
sbb
enter
add
leave
insb
aas
pusha
ror
decb
outsb
cld
pop
negb
mov
adc
sub
ficoml
repz
cmp
mov
popa
stos
std
pop
fists
stc
adcl
cmp
int3
call
das
lret
and
fdivrs
sub
add
xor
sti
sub
push
xchg
dec
daa
pop
inc
fbstp
mov
sub
jo
or
in
aaa
cmp
adc
mov
push
xchg
pop
out
and
push
scas
js
mov
mov
rorl
sbb
inc
bnd
loopne
jge
cltd
inc
filds
jp
dec
mov
xor
es
inc
sub
xchg
lret
ja
mov
arpl
xor
pop
xor
sbb
outsb
sbb
out
dec
imul
fcoms
cli
es
in
negl
shll
dec
jecxz
fmull
icebp
or
add
cmp
mov
arpl
mov
ss
sbb
ret
adc
mov
icebp
ljmp
fisubl
mull
lds
and
inc
lret
mov
pop
addb
cmp
inc
das
mov
clc
ficoml
xchg
jns
outsl
outsl
cmpsb
rorb
mov
mov
mov
adc
xchg
mov
xor
out
insl
and
loop
addb
or
mov
in
hlt
xchg
addb
icebp
mov
pop
jno
sub
cmp
or
data16
out
rcl
pushf
lcall
adc
cmp
or
mov
jbe
jnp
xchg
and
jns
adc
popf
lret
icebp
stos
int
hlt
xor
loop
icebp
mov
loope
mov
shlb
popf
stc
sarl
lods
inc
imul
push
pop
iret
fadds
sahf
shll
les
add
and
push
lcall
loope
rcll
cwtl
lret
ljmp
andb
sbb
aam
in
xchg
daa
adc
cmp
imul
iret
xchg
sub
xor
add
cmp
or
dec
sub
inc
test
cmp
js
xchg
inc
lods
std
add
ja
mov
adc
add
mov
sti
ret
ficoms
lds
das
into
dec
inc
scas
sti
xor
and
subb
das
or
pop
adc
cmp
jle
and
jbe
inc
xchg
or
mov
fxch
adc
mov
ja
popf
cs
cs
repz
xor
jmp
push
pop
pop
jle
rcr
cs
out
xchg
out
mov
push
scas
scas
and
add
je
arpl
and
sahf
inc
shl
jae
scas
leave
and
repz
scas
cmovno
ds
out
add
sub
mov
out
divb
sub
hlt
inc
or
pop
and
mov
pushw
and
fsubs
mov
pop
xor
xchg
scas
loopne
inc
and
mov
lock
push
loope
push
sahf
sbb
cmp
out
mov
cmp
jne
fisubrs
sbb
pop
mov
dec
inc
or
add
xchg
aaa
xor
rorb
inc
dec
fbld
dec
xor
sub
xchg
mov
add
sub
jmp
push
jae
push
shll
js
inc
pop
in
lcall
mov
jno
add
cmc
lock
xor
jecxz
std
lods
aam
sub
mov
out
movsl
jno
xlat
rolb
push
sar
clc
testl
in
sti
push
push
ljmp
inc
push
xchg
xor
xchg
daa
pushf
sbb
call
or
adc
xchg
and
mov
mov
inc
and
sub
cmc
cmp
pop
push
pop
dec
enter
jp
nop
xor
mov
loopne
and
ljmp
cli
and
adc
test
xchg
or
jno
fs
xchg
std
fisttpl
popa
push
add
dec
push
mov
sbbb
int
add
push
icebp
iret
xor
push
jg
icebp
sub
cmpb
mov
add
push
pop
shrl
repnz
mov
or
bound
push
subl
jb
add
or
addl
shll
and
adc
pop
scas
sub
cmp
addl
cmp
int3
inc
mov
mov
and
out
pop
rcll
mov
add
in
rorl
add
outsb
xchg
pop
and
cmpsl
mov
push
push
fstl
test
jns
das
dec
or
mov
addl
mov
test
iret
aaa
xchg
push
addr16
outsb
sbb
js
popf
mull
mov
stos
jle
add
pusha
test
push
in
out
fwait
decb
loope
sbb
xlat
or
jmp
adc
push
jnp
cli
stc
inc
test
pop
aaa
aaa
aad
fdivrs
inc
push
or
jecxz
mov
add
and
xchg
out
sub
test
rorb
sti
repnz
adc
rorb
pop
add
stc
mov
clc
js
rorl
cmp
push
cmp
popa
cmp
dec
outsl
and
call
into
enter
mov
subb
fs
push
mov
out
nop
jbe
shll
fs
mov
cld
pop
sub
cmp
clc
push
sub
sub
cld
pop
sbb
fnsave
lock
leave
imul
xchg
pop
sub
or
push
jne
fcmovnu
push
inc
inc
inc
mov
xchg
xchg
test
xor
out
push
scas
xchg
incb
jg
mov
int
sub
fs
adc
cmp
sbb
dec
cmp
push
sbbl
movsl
push
inc
sub
rorl
insl
pop
add
sbb
push
jle
sub
or
add
loopne
mov
pop
leave
and
mov
dec
mov
hlt
incl
leave
mov
dec
cs
lret
xor
mov
jp
dec
rorl
ljmp
xor
xlat
cwtl
std
push
loop
jmp
inc
fs
pop
arpl
jbe
push
inc
push
ja
mov
dec
movsl
pusha
inc
fwait
sub
and
add
mov
out
jl
aam
dec
scas
fwait
xor
pop
inc
inc
into
sbb
inc
push
adc
sahf
xchg
imul
stos
popa
dec
jmp
gs
int3
in
icebp
jnp
xor
jb
iret
jno
lods
sub
loop
lods
or
call
movsl
sbb
or
dec
ret
insl
cmp
sub
fs
cmp
dec
sub
idivb
mov
dec
test
jbe
add
mov
mov
out
je
mov
popf
imul
pop
mov
jg
mov
push
rorl
int
pushf
add
add
sbb
push
sbb
mov
outsb
loop
add
shrl
push
jl
sbb
lret
jb
int
xchg
sbbb
int3
adc
cmp
and
fbstp
in
mov
mov
hlt
or
xchg
cltd
enter
cmpsb
sbb
add
cli
mov
mov
add
fwait
icebp
movsb
test
jns
movsl
mov
or
mov
punpckhdq
cltd
lcall
push
jnp
lods
adc
lock
inc
adc
xchg
pushf
inc
cwtl
lock
ljmp
jbe
cmp
push
jmp
test
sub
hlt
and
shrb
jg
and
fcoms
ret
arpl
mov
mov
xchg
push
or
sbb
dec
bound
or
push
jb
sub
arpl
ret
xchg
ret
out
cwtl
xor
lods
test
hlt
push
cwtl
popf
mov
icebp
mov
inc
push
jg
mov
inc
xchg
test
in
insb
ds
dec
cwtl
pop
push
cmpsb
ds
ljmp
jno
sub
insl
adc
rcr
sub
cltd
xchg
aaa
add
fs
ret
lahf
inc
insb
lcall
pop
movsb
mov
bound
adc
push
out
dec
jb
sbb
add
push
sub
add
sbb
out
cmpsl
sahf
mov
cltd
push
scas
inc
sub
or
mov
push
into
and
xchg
pusha
ret
or
sbb
shll
cwtl
es
jmp
outsl
cmp
pop
in
inc
fnstcw
clc
rcrl
shl
adc
outsb
stos
inc
or
mov
cmp
in
xor
sbb
mov
mov
fxch
or
ja
push
ja
lcall
add
push
ret
int
and
loop
outsb
or
shlb
ljmp
cmp
pop
imul
mov
insb
ret
fwait
scas
nop
rorb
inc
loope
cmc
out
mov
pop
mov
add
lock
add
adc
in
mov
in
ds
sub
xlat
or
out
insb
dec
add
ja
mov
add
push
sahf
je
data16
push
fisubrl
test
out
int
cmpsl
dec
dec
jns
addl
dec
sub
in
xor
mov
jle
add
sbb
sbb
xchg
mov
scas
dec
cmp
pop
mov
ficoms
test
xlat
xor
out
out
cmp
mov
xor
aad
mov
fucomp
and
insl
fsubrs
mov
xchg
inc
and
mov
or
and
mov
pop
mov
mov
inc
icebp
dec
ror
sahf
sarb
pushf
dec
iret
mov
rcrb
sahf
xor
and
push
adc
mov
jecxz
jg
mov
mov
sbb
cmp
repnz
aad
cmp
add
push
je
aas
fcoms
sbb
inc
pop
movsb
mov
sbbl
popf
mov
or
xor
popf
into
inc
inc
sub
fdivr
push
std
insb
shrb
std
jp
mov
lds
or
dec
out
bswap
fcomps
aad
sub
cmpsb
subl
adc
test
jnp
jle
icebp
push
lcall
lds
jp
lret
xor
or
cmp
jle
xchg
sbb
adc
adc
push
nop
addb
lret
enter
insb
enter
sub
sub
sub
ja
mov
mov
sbb
and
es
in
push
movsb
stc
fs
ljmp
int3
ret
jle
mov
sbb
and
inc
shl
push
fcomi
addr16
jle
add
mov
inc
pop
add
lcall
pop
sbb
sub
fnstenv
xchg
mov
ror
dec
test
adc
insl
cmp
pop
sbb
pop
and
jae
icebp
out
cwtl
adc
xorb
xlat
fdivrs
mov
xor
scas
pop
scas
ss
icebp
bound
xchg
and
push
lret
mov
loope
scas
mov
or
dec
jmp
dec
pop
fidivrs
push
cmp
jo
lret
test
in
dec
cwtl
sbb
les
cmp
ljmp
mov
int3
xchg
mov
or
mov
or
jno
out
sub
ret
out
rorl
sub
mov
cmp
pop
xchg
movsl
and
in
or
cmp
repz
int3
popa
into
xlat
mov
xor
outsl
leave
shrb
push
xor
or
mov
sbb
xchg
imulb
sub
scas
shll
jne
repnz
pop
je
jbe
or
jo
jl
rcll
inc
ljmp
adc
out
adc
dec
sbb
outsb
sub
sbb
jb
imul
aaa
imul
jecxz
sbb
icebp
dec
xor
std
fldcw
xchg
pavgw
pop
fwait
lret
fcomp
jecxz
cmp
pusha
scas
popf
add
lock
xlat
inc
movsl
cmpsl
mov
js
inc
and
adc
jae
and
jle
inc
add
xor
stc
lock
mov
imul
dec
push
sub
sub
clc
xor
pop
out
lods
pop
jno
subl
xor
pop
mov
xlat
lds
ret
clc
mov
lock
mov
fimuls
jp
sti
and
xchg
out
filds
imul
insl
pop
or
aas
push
es
bound
je
cmpsb
mov
mov
rcrb
fidivs
inc
lods
add
in
ret
in
sub
cmpsb
mov
aam
add
in
xchg
out
mov
mov
xchg
add
into
pop
test
sarl
adc
inc
mov
test
push
pushw
xor
mov
int
xor
xchg
and
addr16
stc
sti
in
rorb
adc
fiaddl
cmpsl
push
imul
lret
push
outsb
push
pop
pop
jae
insl
xchg
rorl
imul
fsubs
dec
jbe
dec
les
fdivrp
or
outsl
mov
fldenv
mov
shlb
movb
push
scas
xchg
rorl
adc
and
sbb
sbb
lahf
mov
das
xchg
jne
mov
nop
adc
cmp
jg
or
es
shlb
lock
cmpsl
test
in
retw
aas
mov
inc
jge
pop
or
dec
xchg
pop
dec
popa
cmpsb
xor
mov
jle
mov
add
push
shrb
stos
adc
sub
sbbb
mov
mov
dec
in
sti
dec
or
inc
xchg
push
iret
pop
and
cmp
sti
cltd
push
fdivs
clc
ficomps
lret
aas
jle
sub
movsl
mov
outsl
mov
jno
and
hlt
movsb
sahf
iret
mov
cmp
bound
inc
bound
mov
cwtl
addr16
pop
add
scas
lock
push
scas
stos
pushf
add
stos
mov
int3
dec
jnp
dec
inc
or
xor
enter
push
lcall
das
push
notl
pop
xor
fwait
mov
nop
sub
sub
lret
sub
fwait
lret
sbb
inc
xchg
xchg
xor
sub
xor
push
test
inc
xor
arpl
loop
push
testb
das
and
and
cmpsb
xchg
mov
jg
pop
sub
fwait
cli
jno
and
or
mov
insl
fmul
cmpsb
shrl
rcrl
aam
xchg
out
push
filds
lret
mov
sbb
and
cmp
jno
je
test
cmp
dec
add
fstp
fincstp
rcl
fstpl
fildll
cmpsb
sub
sub
out
mov
push
addr16
add
aas
push
push
sbb
pushf
fmulp
push
scas
adc
dec
or
fldl
mov
sub
or
mov
xorb
mov
mov
and
int
sub
mov
ss
pushf
push
add
cmc
popf
imul
sub
rcl
fidivrl
sbb
push
sub
jnp
rcl
lret
andl
pop
cmp
xchg
fdivrl
mov
movsb
xlat
inc
inc
adc
cwtl
jmp
scas
pop
adc
aas
mov
aaa
fucomp
mov
sbb
xchg
push
aaa
push
lret
stc
loopne
mov
cmp
dec
mov
vpslld
out
cs
pop
fsub
or
int3
sub
fwait
and
mov
hlt
mov
sbb
aad
popf
test
cmpsb
and
pop
mov
push
icebp
xor
xchg
pop
xlat
xchg
xor
aad
adc
outsb
or
or
mov
lock
mov
cmp
das
lods
in
imul
aaa
leave
mov
adc
xchg
lea
bound
lods
les
or
das
and
mov
neg
lods
dec
mov
xchg
stc
cmpsl
es
lds
cmpsl
insl
sbb
out
mov
cmp
into
or
cmpxchg
add
jg
pop
mov
mov
pop
dec
sub
les
jge
imul
push
and
mov
mov
mov
and
or
sub
jmp
fs
xor
les
cltd
into
ret
jnp
pop
xchg
aam
roll
cmp
mov
jb
pop
cmpsl
inc
and
insb
mov
rcr
imul
fimuls
cwtl
sti
subl
mov
orl
xor
lods
push
out
or
mov
out
pop
or
add
arpl
or
add
aaa
jb
jnp
lds
imul
inc
clc
jl
mov
aam
pop
ss
clc
iret
mov
pop
jle
pop
pop
stos
and
or
fldcw
and
es
mov
inc
cmp
or
fbld
mov
cld
je
addr16
mov
jno
scas
mov
test
ljmp
sbb
sub
sti
insl
dec
repnz
popw
shrl
enter
addr16
addr16
jae
push
inc
dec
dec
test
and
call
add
cmp
cmp
pop
repnz
push
jb
sub
out
adc
fsubl
jno
test
mov
xchg
and
test
aad
sbb
cs
clc
mov
fs
jp
cmpb
incl
sti
add
bound
inc
mov
add
jp
mov
sub
inc
movsb
mov
cld
scas
lret
pusha
mov
mov
clc
jp
cmp
jmp
mov
inc
test
bsf
stos
in
aam
inc
scas
ljmp
sbb
std
mov
fmull
stc
jae
lea
lret
pushf
cmp
repz
fsubrs
in
pushf
jl
clc
sub
int3
jbe
mov
pop
jp
mov
loope
xchg
xor
inc
sub
ret
lds
add
mov
in
adc
icebp
movsb
jbe
xchg
les
pop
in
sbb
ja
adc
push
test
pop
rolb
jge
test
inc
push
cmc
outsl
sub
cmpl
dec
aam
push
sbb
aas
push
lock
mov
in
pop
insl
rcl
scas
pop
and
mov
fucomp
jl
dec
jl
popa
cmc
ror
or
jmp
rcrl
lahf
cmc
cmc
inc
mov
sahf
insl
mov
xor
roll
mov
fdivrs
in
imul
imul
xor
loope
sub
fcom
mov
bound
add
inc
push
test
xchg
test
jg
mov
mov
jbe
sub
mov
sub
not
sarb
leave
pop
lahf
popf
lcall
push
mov
and
shrb
enter
ja
xchg
jno
adc
dec
ficompl
adc
fwait
or
es
jbe
dec
jecxz
xchg
sahf
adc
or
loop
mov
fcomip
cmpsb
push
adc
dec
pop
roll
in
dec
add
mov
dec
mov
inc
cltd
stos
sarl
mov
fistl
sar
in
xlat
pop
out
dec
sub
ret
mov
in
mov
fadd
mov
cltd
subl
or
bound
push
add
popa
addr16
add
cmpsb
iret
sbb
roll
outsl
test
sbb
mov
or
mov
mov
mov
push
scas
aam
push
push
mov
divb
add
inc
test
pusha
sub
je
arpl
fbld
and
jle
xor
xchg
xchg
cmp
ljmp
stos
outsl
inc
mov
scas
dec
jecxz
and
sbb
in
xor
fsubrl
repz
push
sbb
adc
aam
jae
pushf
fdivrl
dec
adc
sarl
stos
sub
shrl
mov
or
add
push
xchg
xchg
movsl
inc
sbb
test
sar
jae
fwait
insl
lret
in
repnz
mull
sti
inc
or
js
adc
sub
jecxz
add
out
cld
mov
xchg
loopne
adc
dec
or
std
mov
jb
mov
popa
sub
mov
mov
imul
adc
es
lcall
fidivrs
push
jg
sub
rorl
adc
fisttpll
adc
xor
ljmp
out
inc
mov
movsl
inc
jg
or
lods
mov
or
pop
mov
aad
clc
imul
aaa
test
stos
xor
jne
pushf
push
shll
jae
mov
pop
push
stc
insb
push
pop
cmpsb
mov
insb
xor
and
loop
xor
mov
mov
roll
imul
out
loopne
mov
fisttpl
movsb
jl
vpcomd
sbb
or
es
fiaddl
xor
mov
mov
pop
repz
out
arpl
lods
cs
dec
ljmp
cmp
adc
mov
orb
btr
decl
dec
jo
ss
enter
or
cwtl
jmp
ret
cmp
insb
xchg
push
mov
in
fwait
sub
loop
mov
xchg
cmc
mov
int
xchg
push
ja
lret
cmp
fsubr
ljmp
inc
mov
lret
cs
stos
les
movsb
mov
sub
sbb
loopne
jge
xchg
out
push
mov
xlat
cmc
ljmp
xor
inc
cld
sbbl
pusha
add
lret
sarl
cs
or
icebp
out
in
push
stos
dec
test
xlat
subl
addb
dec
mov
push
cltd
lcall
mov
jmp
into
ret
sahf
xchg
mov
ja
inc
mov
xor
xor
fs
ss
ss
add
add
add
push
cmp
or
and
add
push
push
mov
pushl
pushl
pushl
pushl
call
ret
cmp
jne
repz
jmp
mov
push
mov
sub
mov
mov
mov
mov
mov
mov
data16
data16
data16
data16
data16
data16
pushf
popl
mov
mov
mov
mov
lea
mov
mov
movl
mov
mov
movl
movl
mov
mov
mov
mov
call
mov
push
call
pop
push
call
push
call
cmpl
jne
push
call
pop
push
call
push
call
leave
ret
andl
ret
mov
push
mov
mov
push
mov
movb
test
jne
call
mov
mov
mov
mov
mov
mov
cmp
je
mov
test
jne
call
mov
mov
cmp
je
mov
mov
test
jne
call
mov
mov
testb
jne
orl
movb
jmp
mov
mov
mov
mov
mov
pop
pop
ret
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
mov
push
push
mov
push
xor
lea
push
push
call
xor
movzwl
mov
mov
mov
mov
shl
or
lea
stos
stos
stos
mov
add
lea
sub
mov
mov
mov
inc
dec
jne
lea
mov
mov
mov
inc
dec
jne
pop
pop
ret
mov
push
mov
sub
mov
xor
mov
push
push
lea
push
pushl
call
mov
test
je
xor
mov
inc
cmp
jb
mov
movb
test
je
lea
movzbl
movzbl
cmp
ja
sub
inc
push
lea
push
push
call
add
mov
add
test
jne
push
pushl
lea
pushl
push
push
lea
push
push
push
call
xor
push
pushl
lea
push
push
push
lea
push
push
pushl
push
call
add
push
pushl
lea
push
push
push
lea
push
push
pushl
push
call
add
xor
movzwl
test
je
orb
mov
jmp
test
je
orb
mov
mov
jmp
mov
inc
cmp
jb
jmp
lea
movl
xor
sub
mov
lea
add
lea
cmp
ja
orb
lea
jmp
cmp
ja
orb
lea
mov
jmp
movb
inc
cmp
jb
mov
pop
xor
pop
call
leave
ret
push
push
call
call
mov
mov
test
je
cmpl
je
mov
test
jne
push
call
pop
mov
call
ret
push
call
pop
andl
mov
mov
cmp
je
test
je
push
call
test
jne
cmp
je
push
call
pop
mov
mov
mov
mov
push
call
movl
call
jmp
mov
push
call
pop
ret
mov
push
mov
sub
push
xor
push
lea
call
mov
cmp
jne
movl
call
cmp
je
mov
andl
jmp
cmp
jne
movl
call
jmp
cmp
jne
mov
mov
movl
jmp
cmp
je
mov
andl
mov
pop
leave
ret
mov
push
mov
sub
mov
xor
mov
push
mov
push
mov
push
call
mov
xor
mov
cmp
jne
mov
call
xor
jmp
mov
xor
cmp
je
incl
add
cmp
jb
cmp
je
cmp
je
movzwl
push
call
test
je
lea
push
push
call
test
je
push
lea
push
push
call
xor
inc
add
mov
mov
cmp
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
jmp
push
lea
push
push
call
mov
add
imul
mov
lea
mov
jmp
mov
test
je
movzbl
movzbl
jmp
mov
mov
or
movzbl
inc
cmp
jbe
mov
add
cmpb
jne
mov
incl
add
cmpl
mov
jb
mov
mov
movl
call
push
mov
lea
lea
pop
mov
mov
add
add
dec
jne
mov
call
jmp
orb
inc
cmp
jbe
add
cmpb
jne
lea
mov
orb
inc
dec
jne
mov
call
mov
mov
jmp
mov
xor
movzwl
mov
shl
or
lea
stos
stos
stos
jmp
cmp
jne
or
mov
pop
pop
xor
pop
call
leave
ret
push
push
call
orl
call
mov
mov
call
mov
mov
call
mov
cmp
je
push
call
pop
mov
test
je
mov
mov
mov
rep
andl
push
pushl
call
pop
pop
mov
test
jne
mov
pushl
call
test
jne
mov
cmp
je
push
call
pop
mov
push
mov
call
testb
jne
testb
jne
push
call
pop
andl
mov
mov
mov
mov
mov
mov
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
pushl
call
test
jne
mov
cmp
je
push
call
pop
mov
push
call
movl
call
jmp
push
call
pop
ret
jmp
cmp
jne
cmp
je
push
call
pop
call
movl
jmp
andl
mov
call
ret
cmpl
jne
push
call
pop
movl
xor
ret
mov
push
mov
push
push
mov
push
mov
push
call
mov
test
je
push
call
mov
test
je
push
call
mov
test
je
push
call
mov
test
je
push
call
lea
movl
cmpl
je
mov
test
je
push
call
cmpl
je
mov
test
je
push
call
add
decl
jne
mov
add
push
call
pop
pop
pop
pop
ret
mov
push
mov
push
mov
test
je
push
push
mov
push
call
mov
test
je
push
call
mov
test
je
push
call
mov
test
je
push
call
mov
test
je
push
call
lea
movl
cmpl
je
mov
test
je
push
call
cmpl
je
mov
test
je
push
call
add
decl
jne
mov
add
push
call
pop
pop
mov
pop
pop
ret
mov
push
mov
push
push
mov
mov
xor
push
cmp
je
cmp
je
mov
cmp
je
cmp
jne
mov
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
pushl
call
pushl
call
pop
pop
mov
cmp
je
cmp
jne
mov
sub
push
call
mov
mov
sub
push
call
mov
sub
push
call
pushl
call
add
mov
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
lea
movl
cmpl
je
mov
cmp
je
cmp
jne
push
call
pop
cmp
je
mov
cmp
je
cmp
jne
push
call
pop
add
decl
jne
push
call
pop
pop
pop
pop
pop
ret
mov
push
mov
push
mov
test
je
mov
test
je
push
mov
cmp
je
push
mov
call
pop
test
je
push
call
cmpl
pop
jne
cmp
je
push
call
pop
mov
pop
jmp
xor
pop
pop
ret
push
push
call
call
mov
mov
test
je
cmpl
je
call
mov
test
jne
push
call
pop
mov
call
ret
push
call
pop
andl
pushl
add
push
call
pop
pop
mov
movl
call
jmp
push
call
pop
mov
ret
push
call
ret
mov
push
pushl
call
mov
test
jne
pushl
call
mov
push
pushl
call
mov
pop
ret
push
push
call
push
call
mov
movl
andl
xor
inc
mov
mov
movb
movb
movl
push
call
pop
andl
pushl
call
movl
call
push
call
pop
mov
mov
mov
test
jne
mov
mov
pushl
call
pop
movl
call
call
ret
xor
inc
mov
push
call
pop
ret
push
call
pop
ret
mov
push
push
call
pushl
mov
call
call
mov
test
jne
push
push
call
mov
pop
pop
test
je
push
pushl
pushl
call
call
test
je
push
push
call
pop
pop
call
orl
mov
jmp
push
call
pop
xor
push
call
pop
mov
pop
ret
mov
push
call
mov
test
jne
push
call
pop
mov
pop
ret
mov
push
mov
sub
mov
xor
mov
push
mov
push
cmp
je
push
call
pop
andl
push
lea
push
push
call
lea
mov
lea
add
mov
mov
mov
mov
mov
mov
mov
data16
data16
data16
data16
data16
data16
pushf
popl
mov
lea
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
call
push
mov
call
lea
push
call
test
jne
test
jne
cmp
je
push
call
pop
mov
pop
xor
pop
call
leave
ret
mov
push
push
mov
push
push
call
add
push
call
push
call
pop
ret
mov
push
mov
pushl
call
test
je
pop
jmp
pushl
pushl
pushl
pushl
pushl
call
int3
xor
push
push
push
push
push
call
add
ret
mov
push
mov
mov
xor
cmp
je
inc
cmp
jb
lea
cmp
ja
push
pop
pop
ret
mov
pop
ret
add
push
pop
cmp
sbb
and
add
pop
ret
call
test
jne
mov
ret
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
je
xor
mov
test
jne
cmp
jb
cmpl
je
jmp
push
mov
cmp
jb
neg
and
je
sub
mov
add
sub
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
add
sub
jne
mov
pop
ret
mov
ret
mov
push
mov
mov
test
je
sub
cmpl
jne
push
call
pop
pop
ret
mov
push
mov
sub
mov
xor
mov
mov
push
xor
push
push
cmp
jle
mov
mov
dec
cmp
je
inc
cmp
jne
or
mov
sub
dec
cmp
jge
inc
mov
mov
cmp
jne
mov
mov
mov
mov
mov
xor
cmp
push
push
pushl
setne
pushl
lea
push
pushl
call
mov
mov
cmp
jne
xor
jmp
jle
push
xor
pop
div
cmp
jb
lea
cmp
ja
call
mov
cmp
je
movl
jmp
push
call
pop
cmp
je
movl
add
mov
jmp
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
mov
push
push
push
pushl
pushl
pushl
call
mov
cmp
je
mov
test
je
mov
cmp
je
cmp
jg
push
pushl
push
pushl
pushl
pushl
call
jmp
mov
cmp
jle
push
xor
pop
div
cmp
jb
lea
cmp
ja
call
mov
cmp
je
movl
add
jmp
push
call
pop
cmp
je
movl
add
mov
jmp
xor
cmp
je
pushl
push
pushl
pushl
pushl
pushl
call
test
je
push
push
cmp
jne
push
push
jmp
pushl
pushl
pushl
push
push
pushl
call
mov
push
call
pop
pushl
call
mov
pop
lea
pop
pop
pop
mov
xor
call
leave
ret
mov
push
mov
sub
pushl
lea
call
pushl
lea
pushl
pushl
pushl
pushl
pushl
pushl
pushl
push
call
add
cmpb
je
mov
andl
leave
ret
mov
push
mov
push
push
mov
xor
mov
push
xor
push
push
mov
cmp
jne
mov
mov
mov
mov
mov
xor
cmp
push
push
pushl
setne
pushl
lea
push
pushl
call
mov
cmp
jne
xor
jmp
jle
cmp
ja
lea
cmp
ja
call
mov
cmp
je
movl
jmp
push
call
pop
cmp
je
movl
add
mov
test
je
lea
push
push
push
call
add
push
push
pushl
pushl
push
pushl
call
test
je
pushl
push
push
pushl
call
mov
push
call
mov
pop
lea
pop
pop
pop
mov
xor
call
leave
ret
mov
push
mov
sub
pushl
lea
call
pushl
lea
pushl
pushl
pushl
pushl
pushl
push
call
add
cmpb
je
mov
andl
leave
ret
mov
push
mov
mov
pushl
call
pop
ret
push
push
call
xor
inc
mov
xor
cmp
jne
call
push
call
push
call
pop
pop
mov
lea
cmp
je
mov
jmp
push
call
pop
mov
cmp
jne
call
movl
xor
jmp
push
call
pop
mov
cmp
jne
push
push
call
test
jne
push
call
pop
call
movl
mov
jmp
mov
jmp
push
call
pop
movl
call
mov
call
ret
push
call
pop
ret
mov
push
mov
mov
push
lea
cmpl
jne
push
call
pop
test
jne
push
call
pop
pushl
call
pop
pop
ret
mov
push
mov
cmpl
je
pushl
push
pushl
call
test
jne
push
call
mov
call
push
call
pop
mov
pop
pop
ret
mov
push
mov
push
call
test
je
push
push
call
test
je
pushl
call
pop
ret
mov
push
mov
pushl
call
pop
pushl
call
int3
push
push
call
push
call
pop
andl
xor
inc
cmp
je
mov
mov
mov
cmpl
jne
pushl
mov
call
mov
mov
test
je
pushl
call
mov
mov
mov
mov
sub
mov
cmp
jb
call
cmp
je
cmp
jb
pushl
call
mov
call
mov
call
pushl
call
mov
pushl
call
cmp
jne
cmp
je
mov
mov
mov
mov
mov
mov
jmp
movl
cmpl
jae
mov
mov
test
je
call
addl
jmp
movl
cmpl
jae
mov
mov
test
je
call
addl
jmp
movl
call
cmpl
jne
movl
push
call
pop
pushl
call
cmpl
je
push
call
pop
ret
call
ret
mov
push
mov
push
push
pushl
call
add
pop
ret
mov
push
mov
call
pushl
call
pop
push
call
int3
int3
int3
int3
int3
int3
push
pushl
mov
mov
lea
sub
push
push
push
mov
xor
xor
push
mov
pushl
mov
movl
mov
lea
mov
ret
mov
mov
pop
pop
pop
pop
pop
mov
pop
push
ret
int3
int3
int3
int3
int3
int3
int3
mov
push
mov
sub
push
mov
push
mov
xor
push
mov
movb
movl
lea
cmp
je
mov
add
xor
call
mov
mov
add
xor
call
mov
testb
jne
mov
lea
mov
mov
mov
mov
cmp
je
lea
lea
mov
lea
mov
mov
mov
test
je
mov
call
movb
test
js
jg
mov
mov
cmp
jne
cmpb
je
mov
cmp
je
mov
add
xor
call
mov
mov
add
xor
call
mov
pop
pop
pop
mov
pop
ret
movl
jmp
mov
cmpl
jne
cmpl
je
push
call
add
test
je
mov
push
push
call
add
mov
mov
call
mov
cmp
je
push
push
mov
mov
call
mov
mov
mov
mov
cmp
je
mov
add
xor
call
mov
mov
add
xor
call
mov
mov
mov
call
mov
cmp
je
push
push
mov
call
jmp
mov
push
mov
push
push
xor
pushl
call
mov
pop
test
jne
cmp
jbe
push
call
lea
cmp
jbe
or
mov
cmp
jne
mov
pop
pop
pop
ret
mov
push
mov
push
push
xor
push
pushl
pushl
call
mov
add
test
jne
cmp
jbe
push
call
lea
cmp
jbe
or
mov
cmp
jne
mov
pop
pop
pop
ret
mov
push
mov
push
mov
test
je
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pop
pop
ret
mov
push
mov
push
mov
test
je
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
pop
pop
ret
mov
push
mov
push
mov
test
je
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
pop
pop
ret
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
or
lea
add
mov
or
je
add
bt
jae
mov
add
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
jne
mov
cmp
jne
or
je
cmp
jne
or
je
shr
cmp
jne
or
je
cmp
jne
add
add
or
jne
mov
xor
ret
nop
sbb
shl
add
ret
test
je
mov
add
cmp
jne
add
or
je
test
je
mov
add
cmp
jne
or
je
cmp
jne
or
je
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
cmp
jb
cmpl
je
push
push
and
and
cmp
pop
pop
jne
jmp
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
aam
inc
add
call
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
cmpsl
call
inc
add
inc
add
add
add
add
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
shr
add
call
inc
add
call
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
pusha
jmp
inc
add
add
rorl
add
jmp
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
add
inc
add
ljmp
sbb
inc
add
ljmp
xor
inc
add
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
pop
ljmp
je
inc
add
inc
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
add
test
je
test
jne
add
lea
lea
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
mov
mov
or
je
add
bt
jae
lea
add
pop
leave
ret
pxor
push
push
mov
and
test
jne
mov
and
shr
je
lea
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
lea
dec
jne
test
je
mov
shr
je
jmp
lea
movdqa
lea
dec
jne
and
je
mov
xor
shr
je
mov
lea
dec
jne
and
je
mov
inc
dec
jne
pop
pop
ret
mov
neg
add
sub
xor
push
mov
and
je
mov
inc
dec
jne
shr
je
mov
lea
dec
jne
pop
jmp
push
call
mov
xor
ret
mov
push
mov
push
mov
cmp
ja
push
push
cmpl
jne
call
push
call
push
call
pop
pop
test
je
mov
jmp
xor
inc
push
push
pushl
call
mov
test
jne
push
pop
cmp
je
push
call
pop
test
jne
jmp
call
mov
call
mov
mov
pop
pop
jmp
push
call
pop
call
movl
xor
pop
pop
ret
int3
int3
push
lea
sub
and
add
sbb
or
pop
jmp
push
lea
sub
and
add
sbb
or
pop
jmp
mov
push
mov
xor
mov
cmp
je
inc
cmp
jb
xor
pop
ret
mov
pop
ret
mov
push
mov
sub
mov
xor
mov
push
push
mov
push
push
call
mov
xor
pop
mov
cmp
je
push
call
pop
cmp
je
push
call
pop
test
jne
cmpl
je
cmp
je
push
push
mov
push
call
add
test
jne
push
mov
push
push
mov
call
mov
test
jne
push
push
push
call
add
test
je
xor
push
push
push
push
push
call
push
call
inc
pop
cmp
jbe
push
call
lea
mov
sub
push
sar
push
sub
push
push
call
add
test
jne
push
mov
push
push
call
add
test
jne
pushl
push
push
call
add
test
jne
push
push
push
call
add
jmp
push
push
push
push
push
jmp
push
call
mov
cmp
je
cmp
je
xor
mov
mov
cmp
je
inc
cmp
jb
push
lea
push
lea
push
mov
call
pop
push
lea
push
push
call
mov
pop
pop
xor
pop
call
leave
ret
push
call
pop
cmp
je
push
call
pop
test
jne
cmpl
jne
push
call
push
call
pop
pop
ret
push
push
call
call
mov
test
je
andl
call
jmp
xor
inc
ret
mov
movl
call
call
ret
mov
push
mov
mov
mov
push
cmp
je
mov
imul
add
add
cmp
jb
imul
add
pop
cmp
jae
cmp
je
xor
pop
ret
pushl
call
ret
push
push
call
xor
mov
mov
mov
cmp
jg
je
mov
push
pop
sub
je
sub
je
sub
je
sub
jne
call
mov
mov
test
jne
or
jmp
mov
mov
jmp
pushl
mov
call
pop
lea
mov
jmp
mov
sub
je
sub
je
dec
je
call
movl
call
jmp
mov
mov
jmp
mov
mov
jmp
mov
mov
movl
push
call
mov
xor
cmpl
je
cmp
jne
push
call
cmp
je
push
call
pop
xor
mov
cmp
je
cmp
je
cmp
jne
mov
mov
mov
cmp
jne
mov
mov
movl
cmp
jne
mov
mov
mov
add
cmp
jge
mov
imul
mov
mov
incl
jmp
call
mov
movl
call
cmp
jne
pushl
push
call
pop
jmp
mov
mov
cmpl
je
push
call
pop
ret
push
call
pop
cmp
je
cmp
je
cmp
jne
mov
mov
cmp
jne
mov
mov
xor
call
ret
mov
push
mov
pushl
call
test
je
pushl
call
pop
test
je
xor
inc
pop
ret
xor
pop
ret
mov
push
push
push
call
pop
pop
mov
push
call
mov
mov
test
jne
push
pop
pop
ret
andl
xor
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
mov
mov
mov
cmp
je
xor
pop
ret
mov
add
cmpl
jne
xor
mov
cmp
sete
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
mov
mov
mov
add
movzwl
push
push
movzwl
xor
push
lea
test
je
mov
mov
cmp
jb
mov
add
cmp
jb
inc
add
cmp
jb
xor
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
mov
push
sub
push
push
push
mov
xor
xor
push
lea
mov
mov
movl
push
call
add
test
je
mov
sub
push
push
call
add
test
je
mov
shr
not
and
movl
mov
mov
pop
pop
pop
pop
mov
pop
ret
mov
mov
xor
cmpl
sete
mov
ret
mov
movl
xor
mov
mov
pop
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
push
push
push
mov
mov
mov
push
push
push
push
push
push
pushl
mov
xor
mov
mov
mov
mov
mov
xor
mov
cmp
je
mov
cmp
je
cmp
jbe
lea
lea
mov
mov
cmpl
jne
push
mov
call
mov
mov
call
jmp
popl
add
pop
pop
pop
ret
mov
testl
mov
je
mov
mov
xor
call
push
mov
pushl
pushl
pushl
call
add
pop
mov
mov
mov
mov
ret
push
mov
mov
pushl
pushl
pushl
call
add
pop
ret
push
push
push
push
mov
xor
xor
xor
xor
xor
call
pop
pop
pop
pop
ret
mov
mov
mov
push
call
xor
xor
xor
xor
xor
jmp
push
mov
push
push
push
push
push
push
push
call
pop
pop
pop
pop
ret
push
mov
push
push
pushl
call
add
pop
ret
mov
push
mov
mov
test
je
push
xor
pop
div
cmp
jae
call
movl
xor
pop
ret
imul
push
mov
test
jne
inc
xor
cmp
ja
push
push
pushl
call
test
jne
cmpl
je
push
call
pop
test
jne
mov
test
je
movl
xor
jmp
mov
test
je
movl
pop
pop
ret
push
mov
and
test
jne
mov
and
shr
je
jmp
lea
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
lea
lea
dec
jne
test
je
mov
shr
test
je
lea
movdqa
movdqa
lea
lea
dec
jne
and
je
mov
shr
je
mov
mov
lea
lea
dec
jne
mov
and
je
mov
mov
inc
inc
dec
jne
pop
pop
pop
pop
ret
mov
sub
sub
push
mov
mov
and
je
mov
mov
inc
inc
dec
jne
shr
je
mov
mov
lea
lea
dec
jne
pop
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
lea
sub
sbb
not
and
mov
and
cmp
jb
mov
pop
xchg
mov
mov
ret
sub
test
jmp
mov
push
mov
sub
mov
xor
mov
mov
push
mov
mov
push
push
mov
call
andl
cmpl
mov
jne
push
call
mov
test
je
mov
push
push
call
test
je
mov
push
call
push
push
mov
call
push
call
push
push
mov
call
push
call
push
push
mov
call
push
call
mov
test
je
push
push
call
push
call
mov
mov
mov
mov
cmp
je
cmp
je
push
call
pushl
mov
call
mov
test
je
test
je
call
test
je
lea
push
push
lea
push
push
push
call
test
je
testb
jne
orl
jmp
mov
cmp
je
push
call
test
je
call
mov
test
je
mov
cmp
je
push
call
test
je
pushl
call
mov
pushl
call
test
je
pushl
pushl
pushl
pushl
call
jmp
xor
mov
pop
pop
xor
pop
call
leave
ret
mov
push
mov
push
mov
push
test
je
mov
test
jne
call
push
pop
mov
call
mov
pop
pop
pop
ret
mov
test
jne
xor
mov
jmp
mov
cmpw
je
add
dec
jne
test
je
sub
movzwl
mov
add
test
je
dec
jne
xor
test
jne
mov
call
push
pop
mov
mov
jmp
mov
push
mov
mov
push
mov
push
push
test
jne
test
jne
cmp
jne
xor
pop
pop
pop
pop
ret
test
je
mov
test
jne
call
push
pop
mov
call
mov
jmp
test
jne
xor
mov
jmp
mov
test
jne
xor
mov
jmp
mov
cmp
jne
mov
sub
movzwl
mov
add
test
je
dec
jne
jmp
mov
sub
movzwl
mov
add
test
je
dec
je
dec
jne
test
jne
xor
mov
test
jne
xor
cmp
jne
mov
push
mov
pop
jmp
mov
call
push
pop
mov
mov
jmp
mov
push
mov
mov
mov
add
test
jne
sub
sar
dec
pop
ret
mov
push
mov
push
mov
push
test
je
mov
test
jne
call
push
pop
mov
call
mov
pop
pop
pop
ret
mov
test
jne
mov
jmp
mov
sub
movzwl
mov
add
test
je
dec
jne
xor
test
jne
mov
call
push
pop
mov
mov
jmp
mov
push
mov
mov
test
js
cmp
jle
cmp
jne
mov
pop
ret
mov
mov
pop
ret
call
movl
call
or
pop
ret
call
test
je
push
call
pop
testb
je
push
push
push
call
add
push
call
int3
push
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
xor
call
push
mov
mov
push
mov
push
call
add
pop
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
push
pushl
mov
xor
push
lea
mov
mov
mov
mov
cmp
je
cmpl
je
cmp
jbe
lea
mov
mov
mov
cmpl
jne
push
mov
call
mov
call
jmp
mov
mov
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
push
push
push
pop
pop
pop
pop
pop
ret
call
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
or
je
mov
mov
mov
mov
mov
lea
mov
or
mov
je
or
je
add
add
cmp
jb
cmp
ja
add
cmp
jb
cmp
ja
add
cmp
jne
sub
jne
xor
cmp
je
mov
jb
neg
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
mov
mull
mov
mov
mull
add
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
sub
sbb
xor
sub
sbb
neg
neg
sbb
mov
mov
mov
mov
mov
pop
ret
mov
push
mov
mov
mov
cmpl
jne
cmpl
jne
mov
cmp
je
cmp
je
cmp
je
cmp
jne
call
xor
pop
ret
push
call
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
jmp
fidivl
xchg
xor
xor
sbb
xor
xchg
xchg
in
aaa
push
lea
pop
xor
mov
lea
push
bound
xchg
fs
popf
shlb
xor
dec
cli
repnz
fidivrl
test
faddl
aad
xchg
ds
repz
xchg
adc
fldt
rorl
movb
sub
clc
les
pop
fistpl
mov
imul
loope
mov
mov
xchg
cmc
ljmp
sub
cmc
xchg
insl
bound
push
fwait
cmpsl
jmp
stc
enter
pop
lea
dec
pushf
lock
cmp
fcompp
xchg
in
mov
xchg
dec
divb
mov
push
pop
fstpl
jmp
and
or
pop
cmp
negb
insl
test
lahf
ljmp
sbb
dec
stc
ret
pop
pop
sbb
movsl
nop
push
pop
pop
repz
pop
iret
sbb
or
cmpsb
push
adc
adc
addl
cmpsb
lahf
into
sarb
in
sbb
icebp
inc
dec
sub
nop
push
mov
je
mov
push
addr16
adc
xor
add
adc
ret
jle
dec
aad
jne
xor
jbe
pop
insb
cmp
mov
xor
add
data16
test
mov
mov
pop
shll
or
lret
outsb
sbb
add
outsl
pop
pop
and
stc
cwtl
fwait
pop
into
insl
or
jnp
movsl
cmp
ss
cmp
dec
aad
addr16
sarl
xchg
xor
adc
dec
sbb
xchg
je
ficoms
jl
inc
adc
loop
ds
jge
mov
mov
sbb
out
dec
stc
roll
mov
insb
fs
enter
sar
dec
int3
cs
shrl
lea
daa
adc
jns
add
ficoml
and
sub
scas
test
scas
roll
pop
insb
xor
add
outsl
inc
subb
imul
dec
jge
adc
sahf
in
and
movsl
outsl
insl
dec
jo
mov
repnz
ficoms
jmp
mov
dec
fsts
xor
sub
and
push
int3
and
and
xchg
neg
test
mov
inc
daa
push
jle
xchg
int3
add
outsb
imul
add
pop
cmpsb
sbbl
push
mov
inc
sar
outsb
hlt
dec
nop
sbb
push
rcrb
pop
cwtl
pop
xchg
fmull
mov
push
jns
iret
std
aad
jge
std
adc
pusha
loop
popf
mov
lock
mov
shrb
add
aam
push
or
or
mov
inc
fisttps
into
out
push
mov
pop
enter
ret
xor
and
jbe
test
popf
push
sub
lock
call
cmp
mov
cmp
shl
sbb
lds
fldenv
push
sub
out
cmp
or
rclb
std
jle
add
ja
inc
out
push
es
dec
mov
out
push
and
loope
pusha
repz
aas
push
shl
jg
jmp
repz
cld
hlt
in
cmc
push
leave
call
fmul
out
jno
fwait
sbb
push
push
leave
test
mov
sub
and
or
inc
lea
inc
movsl
mov
cs
sarl
add
push
mov
loope
ss
mov
aaa
cwtl
fnstenv
in
test
xlat
add
jae
dec
nop
stc
xchg
and
pusha
sbb
sbb
stos
fsubrl
push
clc
test
cmp
out
movups
xchg
out
rcrl
cs
loopne
in
add
aam
xchg
ss
inc
aas
jbe
loope
subl
insb
aas
sarl
cmp
mov
insb
clc
sti
pop
adc
stc
xchg
mov
cmpsb
mov
icebp
cld
adc
daa
lcall
and
cwtl
loopne
jmp
xor
push
or
outsb
fld
sbb
hlt
hlt
push
pop
bound
push
ja
lock
lock
adc
mov
or
into
xchg
movsl
pusha
mov
sub
gs
popf
inc
push
sbb
mov
mov
das
sahf
shll
add
fwait
imul
pop
or
cmp
out
mov
std
jle
inc
adc
ret
push
frstor
cmp
sbb
or
repz
arpl
addr16
xor
xor
dec
mov
xchg
stos
or
loopne
dec
jbe
xchg
loope
aad
push
lods
xor
nop
dec
dec
sbb
fcoml
fwait
cmp
in
xor
and
mov
hlt
pop
arpl
sub
sbb
outsb
cs
es
cmp
xor
subl
adc
mov
mov
mov
inc
adc
xlat
mov
pop
lahf
xchg
pop
xor
and
add
ror
cmp
jp
pop
dec
jno
mov
cmpsb
sahf
jno
push
cmp
ss
cs
add
lret
scas
movsb
hlt
nop
rcr
or
or
sahf
push
inc
je
jno
or
fbstp
jns
add
push
dec
imul
stos
push
adc
idivb
sub
jns
jl
cmp
mov
aam
test
dec
xor
in
ja
cs
dec
inc
mov
sti
les
sti
mov
push
or
test
or
add
jae
sbb
cli
loop
mov
mov
jae
mov
negl
shll
pop
outsb
dec
je
repnz
rcll
xor
pop
les
add
add
js
loop
sahf
clc
add
add
dec
pop
imulb
push
les
mov
mov
test
insl
jmp
js
out
movsb
idivl
lahf
test
aaa
cmp
and
inc
xor
push
loop
or
sbb
test
push
outsb
fidivl
inc
loop
jg
and
out
fadds
mov
jmp
sub
mov
fcoml
push
fnsave
jbe
xor
cmp
mov
cmpsb
push
or
lret
aaa
sbb
add
jne
sahf
test
xorl
add
sbb
jns
or
fld
inc
sbb
xor
test
dec
hlt
pop
pop
sub
fsubrl
sahf
sbb
or
das
jecxz
pushf
dec
pop
jg
and
loope
popf
push
xchg
jge
ficoml
loop
loop
pop
sbb
sahf
jns
movsl
call
mov
adc
shr
cwtl
insb
fs
aad
sub
frstor
lea
pop
or
mov
repnz
and
dec
jne
popa
mov
xor
xor
iret
fcomps
add
push
dec
in
aad
push
lcall
call
das
cmpb
fstl
xchg
notl
fidivrs
add
inc
loop
and
xor
mov
lods
xchg
or
mov
test
pop
pop
jno
pop
dec
nop
adc
iret
mov
pop
inc
dec
xchg
dec
bound
arpl
mov
push
out
sub
inc
repnz
cmp
cs
xor
fistpll
jp
scas
and
loope
xor
dec
mov
push
mov
cmp
pop
pop
pop
push
sub
dec
stc
xchg
xor
xor
add
les
add
add
sbbb
mov
int3
pop
stos
sbb
shl
push
mov
add
and
imul
or
mov
test
push
mov
sbb
sbb
mov
mov
fisttpll
shrl
adc
dec
test
lcall
lock
jecxz
mov
mov
jmp
repnz
xor
jno
push
rolb
pushl
pop
movsl
cld
mov
fistps
in
call
fbstp
dec
mov
pop
sahf
adc
into
cmc
rclb
test
scas
nop
stos
pop
movsb
sub
lods
ljmp
dec
jecxz
xchg
es
cmp
sahf
fstl
pop
ud2
stos
les
sub
sbb
std
pop
dec
mov
xchg
iret
sub
dec
xchg
aas
xorb
enter
xor
test
scas
jbe
jb
sti
add
mov
lock
hlt
cli
mov
mov
pusha
jp
lds
or
xchg
inc
das
jg
adc
int
in
les
push
scas
out
mov
xor
xlat
push
stos
xbegin
push
xchg
lea
dec
imul
pusha
loop
add
gs
int3
adc
sub
dec
hlt
daa
lcall
jge
fwait
dec
mov
jge
cmp
pop
mov
imul
js
xchg
push
imulb
jmp
fstps
adc
sbb
and
leave
mov
sbb
mov
pop
lock
jb
data16
sbb
repz
dec
mov
or
mov
or
xchg
inc
add
test
ror
scas
cmpsl
out
mov
int3
push
fimull
imul
insb
inc
int
jmp
test
mull
rclb
sub
movb
cmp
dec
push
sbb
insb
hlt
xor
mov
mov
push
fdiv
stos
inc
jmp
or
loop
cmp
inc
jno
jnp
or
sahf
jne
adc
mov
ljmp
sub
jno
dec
inc
add
ja
xchg
scas
inc
inc
mov
popf
fisttps
test
int
bound
xor
jl
jae
into
xchg
loopne
subb
into
push
addb
push
pop
cmpsl
clc
or
adc
jno
iret
sbb
cli
clc
dec
sub
stos
pop
mov
jle
fwait
mov
icebp
lock
mov
mov
in
dec
or
xchg
adc
lcall
pop
inc
stos
cwtl
add
sub
push
add
push
loop
inc
loop
xchg
or
pop
ja
add
mov
mov
notl
xchg
push
add
sub
lret
in
mov
je
sbb
mov
mov
mov
cmp
pop
in
sti
clc
jg
outsl
roll
cmpsl
sub
add
xor
inc
or
jle
push
shrl
mov
pop
aam
and
lea
cmp
push
inc
lcall
fisubrs
icebp
loop
sarb
sbb
popa
mov
insb
popa
xchg
pop
push
or
daa
int
sahf
enter
test
sarl
ss
sbb
or
mov
rcll
pop
fsubl
cmp
inc
loopne
fs
repnz
in
mov
cmp
add
imul
aad
xchg
pop
fistpl
mov
sbb
xchg
inc
sub
cmp
inc
aam
xchg
hlt
xor
xor
mov
nop
sub
mov
lods
xchg
cmp
int
pop
add
into
adc
pop
int
and
xchg
sub
ljmp
push
lds
fisubrl
xchg
outsb
icebp
or
adc
lods
ljmp
push
jge
dec
push
in
mov
xchg
movsl
and
js
aad
or
aam
cmc
iret
lods
and
in
mov
jecxz
in
sub
or
sahf
push
sub
ret
ret
loopne
int3
xchg
outsb
and
sub
aam
mov
outsb
pusha
mov
in
add
inc
loop
into
out
jno
mov
mov
and
mov
jecxz
push
lods
xchg
loope
jns
xchg
negl
ss
push
inc
int3
stc
sub
xchg
dec
xor
imul
mov
dec
loope
or
cmp
and
push
adc
add
inc
xchg
inc
mov
stos
fldcw
das
loopne
mov
out
adc
shlb
or
aaa
push
jg
loopne
js
mov
mov
jecxz
aam
insb
out
sub
aam
test
lods
or
popa
enter
mov
sub
out
jl
test
push
mov
ljmp
push
mov
push
sub
enter
pop
out
jle
stos
xchg
jl
mov
jg
mov
xchg
std
cmpsl
movsl
call
or
xchg
pop
push
pop
lcall
jecxz
pop
jmp
lahf
dec
fstpl
rcll
int3
inc
les
jb
test
or
xor
sub
jae
popf
pop
push
inc
add
imul
fbstp
pop
repz
fwait
div
imul
daa
fstpt
sahf
xchg
aam
dec
mov
cltd
inc
inc
ffree
call
xchg
imul
jns
sarl
jg
mov
lret
addb
xchg
jae
inc
and
push
repz
fdiv
pop
cmp
lods
test
inc
push
pushf
or
out
rcr
jl
mov
cli
adc
cmp
jmp
pop
out
repnz
adc
sub
clc
or
cld
cmp
push
xor
xor
sub
push
add
and
fisubs
mov
dec
push
lahf
scas
pop
jne
ss
dec
push
mov
loop
inc
das
int3
cwtl
fs
sbb
fldl
dec
mov
xchg
out
int3
cmpb
stc
mov
adc
push
and
test
push
loope
shll
sti
cmc
fiaddl
test
nop
xor
and
bound
icebp
aaa
lret
push
adc
mov
mov
inc
movl
scas
fcmovu
repnz
outsl
mov
repnz
cltd
ja
fsubrl
pop
add
outsl
dec
test
imul
push
dec
lock
jge
aam
adc
stc
pop
into
cwtl
cmp
jne
add
dec
arpl
jae
enter
pop
push
cmp
and
xchg
lahf
mov
and
jecxz
pop
add
shl
pusha
dec
adc
scas
cmp
aas
adc
push
test
mov
push
repnz
pop
popf
pop
dec
lret
shrl
enter
cmp
or
imul
inc
sbb
shrl
lods
addl
movl
sbb
cmpsl
xchg
nop
xor
push
les
push
adc
clc
or
mov
outsb
hlt
pop
enter
mov
sbb
out
lds
jbe
push
test
xchg
adc
adc
fildll
xchg
sbb
xchg
xor
sbb
rcll
mov
jne
lods
insl
inc
jno
dec
jle
pop
movsb
xchg
adc
stc
cmp
lods
lds
dec
decl
ljmp
mov
pop
enter
sub
inc
push
mov
cmpsl
sbb
outsb
outsb
data16
lahf
lcall
inc
push
push
cld
mov
mov
push
and
cmpl
inc
test
jmp
aas
sti
push
cmp
pop
xlat
mov
mov
mov
ret
cmp
cmp
fs
or
and
dec
push
adc
inc
clc
dec
sbb
push
aas
popa
add
mov
aaa
push
sahf
cld
sbb
jne
cmp
pop
mov
mov
inc
testl
xor
shll
fsts
or
fisubs
push
sahf
cs
inc
mov
shll
adc
repz
out
cmpsb
mov
out
imul
push
inc
sar
push
pop
ret
jns
loopne
addr16
pusha
sbb
dec
push
repnz
push
mov
add
mov
mov
in
sbb
mov
mov
pop
jbe
mov
sbb
xor
shlb
mov
cmpsl
or
mov
lods
neg
or
sub
ror
inc
in
scas
cmp
test
test
mov
rorl
setle
in
mov
test
pop
xchg
lds
aaa
xchg
ss
mov
pop
cmc
xchg
and
scas
popf
dec
adc
in
pop
add
insl
clc
in
sarl
ror
inc
popf
movsl
loope
mov
andb
mov
xchg
pop
push
fnsave
pop
pop
arpl
sbb
insb
push
mov
ret
mov
push
iret
aam
cmp
rolb
jle
lock
push
push
adc
pop
jnp
mov
mov
stc
iret
mov
andb
int3
and
jb
mov
test
add
leave
mov
pusha
adc
push
push
shlb
mov
push
aam
jns
xchg
mov
mov
add
clc
enter
jl
sbb
sbb
dec
or
sub
cmpsl
jne
and
inc
xchg
int3
sti
cmp
out
pop
call
push
sub
or
mov
scas
mov
jge
test
jecxz
dec
mov
sbb
incl
iret
enter
nop
test
xor
outsb
orb
mov
je
data16
loop
adc
mov
sub
inc
pop
repnz
shll
cld
sti
push
ficomps
mov
or
sub
jmp
ret
sub
shl
data16
cmp
jnp
jg
jg
pop
pop
int3
lcall
mov
fldt
mov
cld
pop
jle
inc
lods
andl
loopne
dec
das
shlb
cwtl
adc
gs
add
pop
sub
es
lcall
adc
cmp
sbb
xchg
or
sbb
cld
pcmpgtw
testb
sbb
sub
pushf
mov
push
cmp
push
sub
cmp
jo
ds
test
mov
ja
inc
inc
dec
idivb
push
call
mov
mov
or
push
jg
push
rclb
xor
rorl
imul
int
bound
sti
adc
add
pop
push
xor
cli
test
xchg
pop
arpl
mov
rcrb
mov
cmp
inc
movd
fldl
push
lods
gs
leave
sub
push
sub
dec
sti
pop
inc
sbb
pop
jne
dec
sbb
mov
iret
lret
addr16
inc
in
int
mov
lcall
cmp
xor
add
iret
inc
jno
pushfw
push
test
push
push
sbbl
sahf
and
sbb
push
stc
xlat
jo
and
das
icebp
shlb
xchg
nop
lds
fidivrs
xor
lds
xchg
scas
dec
mov
mov
mov
mov
sub
fs
jl
xor
lods
cs
push
cmp
pop
sub
jo
cmp
add
push
arpl
sahf
jecxz
test
pop
cs
mov
or
jb
inc
aam
xchg
aas
add
adc
fucomip
sub
scas
subb
inc
in
arpl
sub
mov
mov
dec
sbbb
test
mov
or
inc
and
jp
or
mov
xor
aam
jnp
xchg
js
shrb
bound
xor
cs
int
cmp
and
cmp
fs
cmpsl
aaa
add
sbb
mov
negl
cmc
lock
pop
and
and
imul
aad
gs
cmpsl
push
adc
cmp
out
xchg
iret
sub
mov
mov
out
mov
mov
mov
sub
pop
scas
mov
outsb
inc
jecxz
mov
sbb
dec
mov
mov
shlb
inc
pusha
cmp
mov
push
xchg
dec
add
rcr
mov
out
push
jmp
add
sbb
push
push
in
mov
ret
pop
les
and
flds
or
and
mov
imul
fstps
jmp
and
pop
ds
js
loop
dec
mov
or
loope
in
out
xchg
dec
arpl
jo
inc
minps
pop
mov
aam
lret
dec
sub
pop
test
gs
cltd
ror
aas
scas
int3
add
nop
aaa
push
shll
fnstcw
mov
push
pop
jnp
xor
xchg
xor
sti
out
std
mulb
mov
push
and
and
xor
mov
and
and
inc
push
fcmovnu
addl
int
and
out
sub
inc
mov
sahf
xorb
mov
enter
jae
int3
daa
inc
push
cmp
test
ss
jp
xor
xor
cmp
scas
mov
mov
xchg
sbb
ja
sbb
das
lods
pop
lods
and
jg
ljmp
xor
mov
sbb
inc
mov
add
or
mov
decb
data16
outsb
mov
jp
jnp
jle
cld
ds
pop
sub
jge
nop
adc
push
out
repz
leave
aad
xor
pop
fiadds
jg
nop
and
int3
jae
ds
mov
mov
pop
repnz
pop
sbb
mov
cmpsl
pop
lahf
in
hlt
out
pop
icebp
ljmp
cmpsb
jg
mov
mov
mov
test
add
insb
and
lds
pop
add
pop
jmp
ds
dec
bound
scas
xor
mov
or
cmp
mov
not
cmpsl
adc
in
add
push
mov
leave
ret
inc
pop
hlt
jne
imul
orl
jae
pop
xchg
pop
xchg
inc
xlat
xor
stos
icebp
mov
in
das
xor
cmp
rcll
and
push
xchg
ljmp
sub
inc
lock
aad
inc
xlat
sbb
outsl
dec
jbe
addr16
test
pop
pop
mov
je
stc
xor
dec
clc
popf
test
or
icebp
fbstp
adcb
jp
aam
lahf
call
lret
xchg
cwtl
adc
dec
mov
add
rcr
insb
xchg
add
lock
adc
push
push
rcll
shl
mov
fadds
add
repnz
pop
mov
dec
fisttpll
leave
lret
inc
bound
pusha
mov
or
addb
mov
ficoms
jmp
popl
and
jno
ret
test
sahf
shr
mov
adc
mov
adc
xor
mov
aaa
outsl
rcl
and
jb
imul
pop
fwait
sub
xchg
inc
xor
pushf
inc
jp
cmp
xlat
movsl
test
pusha
cmpsl
and
mov
lret
sbb
pusha
inc
loop
aas
cmp
and
mov
dec
addl
inc
loopne
ss
clc
pusha
test
jns
jb
rcrl
in
mov
sub
into
lcall
and
dec
xor
icebp
add
fisubs
inc
bound
cmp
mov
insb
stos
push
and
adc
stc
movsl
jbe
ret
jg
fs
and
mov
ja
adc
in
imul
inc
fstpt
or
fisttpll
xchg
jg
mov
and
sub
pop
incl
fwait
subl
mov
mov
addr16
push
in
out
out
movsb
cmpps
mov
sub
inc
xchg
out
out
cli
mov
fdivrl
pop
xchg
xor
fcomp
jae
dec
sbb
js
add
xor
pop
andl
sbb
aas
jae
imulb
cmp
into
lods
sub
inc
mov
jno
mov
jb
stos
adc
das
out
or
shrb
orl
out
enter
lock
cmc
and
cmpsl
iret
mov
mov
dec
add
push
mov
out
aaa
in
inc
push
xor
jg
push
jb
stos
jge
add
pop
mov
inc
jno
sbb
int3
push
shrl
sub
add
clc
and
pusha
push
imul
int3
fbstp
jae
sub
push
cmove
loop
mov
popf
jne
ds
loope
adc
push
aaa
mov
jle
movsb
lcall
aam
orb
pop
loope
xor
pop
lret
xor
adc
clc
pop
pop
xor
xlat
dec
adc
inc
or
stos
dec
add
pusha
dec
xchg
cld
pushf
push
jle
sbb
fs
movsb
lcall
or
sub
mov
mov
icebp
pop
xchg
jg
out
inc
dec
lea
aas
jl
mov
inc
add
cwtl
fbstp
mov
pop
jge
cmc
jb
add
mov
adc
or
roll
ja
in
imul
pop
inc
das
pop
out
or
shrl
cmp
dec
jecxz
test
ljmp
jne
mov
jl
loopne
fisttps
in
sub
fcmovne
pop
bound
fldl
xchg
int
es
sub
aam
ret
mov
movsl
loope
xor
sub
fildll
cmp
inc
out
rcrl
push
fwait
xchg
shrb
pop
sub
sbb
jbe
push
pop
jno
andb
iret
mov
je
loope
stc
incb
ret
sub
fsubl
mov
jno
jb
into
inc
sub
add
sbb
mov
mov
fdivp
iret
mov
add
mov
add
push
xchg
clc
scas
testb
gs
add
cltd
jl
mov
adc
enter
sahf
cmp
sub
idivl
inc
std
mov
ljmp
inc
lcall
add
push
rcrb
xchg
mov
lea
aam
inc
decl
aad
xchg
adc
cltd
mov
and
fs
or
es
das
fistl
add
inc
daa
test
add
scas
add
push
adc
test
jb
jne
pop
xor
xchg
repz
ljmp
sbb
test
out
cltd
lret
insb
out
test
add
fcoms
mov
add
push
inc
cltd
ret
je
in
and
cmp
inc
enter
mov
cmp
rorl
and
shrl
inc
cltd
mov
sarb
pop
and
xor
fistpl
push
dec
scas
nop
in
gs
xchg
mov
pop
xlat
push
or
std
sub
bound
inc
dec
jle
imulb
std
jae
fprem1
mov
les
movsl
xor
add
testl
sti
fimull
mov
dec
mov
xor
sbb
add
dec
out
es
in
mov
insl
fadds
daa
xchg
lret
fwait
dec
mov
cmp
ds
jge
pop
clc
clc
in
dec
mov
fmuls
mov
incb
or
lods
and
mov
mov
sbb
lods
data16
mov
cmpsb
or
imul
inc
xor
inc
hlt
jg
imul
jns
mov
aas
adcb
es
sti
xor
xchg
cmpsb
cmp
pop
inc
ja
xor
jnp
sub
arpl
xchg
and
sar
js
sub
imul
in
inc
or
xorb
push
int3
rcrl
cli
adc
stos
jge
movlps
ret
sbb
xchg
loope
add
and
xchg
nop
mov
into
sbbb
mov
cmp
js
cli
mov
data16
fmuls
out
pop
dec
inc
sub
movsb
fwait
rclb
xchg
mov
sub
rclb
inc
jecxz
xor
fs
jmp
pop
in
push
dec
cmp
sarl
mov
pop
clc
lahf
iret
pop
imul
mov
out
mov
lret
cld
sub
dec
push
shll
xchg
arpl
xor
mov
mov
push
dec
insl
and
jecxz
hlt
sbb
cmp
xor
push
fldcw
sbb
mov
add
cmc
test
out
jmp
adc
or
cmp
filds
xchg
add
or
lods
add
rol
insb
and
push
lods
ret
sbb
aam
dec
jno
push
andl
mov
jnp
daa
cmc
enter
jne
sbb
jecxz
mov
pusha
xchg
ds
xchg
pop
cmp
pushf
fcmove
cltd
push
lock
pop
stos
jbe
stc
nop
fimuls
mov
push
push
add
xor
adcl
in
pop
xor
jecxz
add
test
mov
jo
cwtl
lods
or
jge
aas
mov
mov
cmp
add
cmp
xbegin
ror
sub
push
in
sar
out
push
ljmp
lahf
insb
dec
jne
mov
mov
jg
cli
push
inc
pop
pop
repz
addr16
pop
mov
or
and
cmp
or
push
test
jg
adc
sub
jmp
push
stos
sbbb
scas
rorl
pusha
sub
mov
insb
pcmpeqw
jb
ror
pop
jnp
lcall
cmp
pop
mulb
sbbb
add
jmp
imull
lock
mov
lds
addr16
lret
cmp
movlhps
sbb
jmp
jnp
cmp
fcoms
mov
fnstsw
pop
or
pop
or
cli
push
sub
aaa
push
mov
dec
out
or
int
pop
fsubrl
enter
inc
mov
movsl
cmp
insb
and
testb
ret
mov
mov
loope
and
sbb
add
mov
fwait
pop
push
repz
jmp
loopne
in
loopne
es
cmc
jne
cmc
ret
test
xor
inc
test
cmp
or
add
mov
jmp
fistpll
xchg
leave
mov
adc
adc
and
scas
fs
pop
repz
push
xor
gs
jne
adc
das
sub
data16
mov
add
xor
fucomip
mov
mov
out
push
mov
jb
sbb
xchg
or
inc
cmp
push
rorl
test
xor
sub
lds
jb
dec
jb
adc
outsb
add
lea
pop
dec
mov
sub
sahf
in
mov
cmc
das
xchg
lds
cmp
mov
ja
es
mov
std
test
sbb
adcl
xchg
call
jecxz
dec
push
std
stc
outsl
inc
push
ret
pushf
std
mov
fisttpll
sbb
loopne
leave
inc
pushf
or
xor
rolb
pushf
push
and
mov
sbb
pop
scas
insb
push
je
jg
xchg
add
movsb
xchg
testb
mov
mov
adc
jl
aad
sbb
cmc
fdiv
pop
mov
xchg
notb
out
cmp
mov
push
outsb
in
adc
gs
push
push
mov
mov
stos
mov
or
mov
sub
cmp
sarl
jae
mov
cmp
vpunpckhdq
cmp
xor
pop
in
leave
call
or
xor
shll
lods
mov
inc
ror
push
sbb
les
incl
mov
mov
mov
push
jecxz
test
movsb
sbb
adc
aaa
mov
jmp
inc
fcomp
jo,pt
mov
popf
jp
xchg
inc
push
sbb
popf
outsb
iret
outsb
push
pop
jns
push
jnp
stos
stos
xchg
mov
nop
clc
fcmovne
popa
fcompl
movsb
or
dec
mov
mov
sub
or
dec
xchg
jl
push
sub
or
rorb
fcoms
das
inc
fnstcw
add
mov
bswap
and
jg
cmpsl
je
dec
add
ss
int3
rorl
pushf
sub
arpl
out
out
out
add
loopne
outsl
fstpl
ds
push
loope
pop
cmpsl
aad
std
xchg
or
lds
cli
enter
fwait
inc
xchg
decl
mov
loopne
xchg
lsl
bnd
neg
gs
lock
lock
jle
xor
mov
ds
inc
inc
push
aad
mov
sub
push
cmpl
iret
nop
inc
mov
add
lds
out
mov
xchg
test
pusha
mov
incl
and
aam
ja
xchg
fwait
test
push
mov
mov
and
ficomps
pusha
adc
ficomps
and
xchg
je
pop
mov
push
roll
cltd
or
loop
fldt
in
push
cmpsb
in
fistl
aam
push
add
mov
sti
movsb
sub
cmp
add
data16
inc
scas
adc
jl
xor
xchg
jae
out
pop
not
in
jg
daa
dec
in
cmpsl
push
dec
xor
pushf
jle
notb
insl
xor
cmp
push
add
lds
inc
jle
xor
movsl
out
imul
movsb
cli
stos
or
xchg
cli
xor
and
mov
test
incb
icebp
jno
mov
add
add
mov
inc
fs
call
mov
pushf
add
push
add
arpl
data16
outsb
int3
decb
imul
mov
mull
or
adc
inc
pop
loop
sub
mov
mov
mov
adc
jle
push
aad
push
jp
addb
test
mov
pushf
dec
out
shl
or
mov
jo
mov
mov
adc
xor
stc
pop
insb
dec
rclb
leave
pusha
adc
sahf
repz
pop
sahf
mov
xor
mov
std
loope
adc
mov
mov
inc
mov
push
sbb
lds
adc
dec
or
filds
repnz
mov
cmp
outsb
daa
or
cmp
lods
lret
push
out
fldenv
pop
add
cmp
popf
int
in
push
and
loop
mov
cmp
call
loopne
mov
pop
sarb
jo
mov
mov
mov
ret
clc
push
out
movsl
pop
inc
mov
mul
push
add
sub
xor
mov
lret
xchg
jns
jo
test
mov
fwait
outsl
fidivs
mov
mulb
jp
imul
test
cmc
leave
inc
pop
jge
cmpsb
cs
pop
ja
inc
test
jbe
dec
pusha
fildll
mov
jbe
push
add
add
pop
sub
pop
add
xlat
push
cli
sarb
inc
scas
lahf
loope
adc
inc
pushf
xchg
inc
jecxz
dec
mov
add
sbb
xor
cltd
test
inc
rcll
cmpb
adc
mov
sbb
and
jbe,pt
cltd
dec
lods
fdivrl
push
ret
pop
lret
inc
pop
pop
lcall
xor
rol
andl
mov
stos
rcll
xor
and
xchg
add
pushf
add
xchg
loope
adc
and
mov
mov
add
ret
push
fwait
push
mov
rolb
lock
jecxz
jbe
jno
xchg
mov
insb
pop
cltd
arpl
shrb
sahf
xchg
or
and
mov
lret
sub
xchg
jno
or
xor
das
mov
inc
mov
cmpsb
jecxz
inc
push
test
xrelease
imul
add
outsl
mov
leave
rcll
fstps
insl
jb
ljmp
mov
arpl
dec
mov
push
sub
in
jo
in
sub
sbb
inc
in
addr16
pop
mov
bound
jp
in
cmp
jmp
call
aam
and
lock
pop
or
jnp
xor
cmp
xor
sub
dec
pop
jb
or
rcl
aad
and
pop
inc
xchg
push
loope
xor
push
shll
aaa
mov
icebp
lods
nop
pop
jle
in
aad
or
jb
lock
aas
sti
fsubrl
ds
adc
jmp
sbb
cmc
popa
inc
loop
mov
cli
dec
cmp
test
lods
outsl
cmc
mov
push
push
in
out
ret
xchg
jnp
popf
sub
test
fisubl
pop
lock
sbb
popa
call
push
cmc
mov
out
call
js
mov
lcall
sbb
and
out
cmp
outsb
loope
aaa
add
mov
jge
repz
pop
push
mov
and
roll
cmp
jae
lods
repz
into
push
xchg
aad
ja
popf
cmp
push
sub
or
jno
sti
mov
mov
aas
cmp
in
cltd
push
test
inc
jg
mov
js
push
sub
mov
test
movsb
scas
push
enter
dec
jp
mov
mov
xor
jl
das
addb
mov
push
and
push
cmp
pop
repnz
mov
and
and
pop
rolb
ljmp
rclb
outsb
or
shl
outsl
fildl
inc
cmp
jns
pop
jmp
icebp
xor
subb
ja
xchg
int
xchg
call
test
insl
roll
int3
and
loope
pop
mov
add
sub
xor
std
pop
daa
and
mov
mov
cmp
jb
movsb
dec
loope
stc
adc
xor
lcall
jecxz
ret
outsb
inc
dec
shlb
into
fnstsw
and
scas
shlb
iret
xchg
ljmp
fiaddl
dec
xchg
cltd
and
fstps
mov
nop
push
inc
adc
aas
pop
inc
aas
add
mov
sbb
adc
adc
mov
push
mov
iret
out
adc
dec
lret
in
cld
mov
hlt
scas
jle
movsb
shrl
outsb
mov
jbe
mov
call
pop
inc
xlat
push
mov
test
sub
call
shll
fcoms
mov
add
mov
rorb
xchg
data16
inc
add
in
mov
jae
lock
jbe
pusha
jnp
push
dec
dec
add
mov
fisttps
int3
rol
sbb
inc
stos
cmp
sti
sti
add
mov
cmp
scas
sarb
ret
and
sub
xchg
dec
js
and
rclb
lret
dec
cmp
outsl
lcall
pusha
das
ja
out
ljmp
in
xchg
pop
xor
lea
lahf
ds
ds
dec
adc
clc
dec
cltd
adc
faddl
dec
jne
fisubrs
into
push
or
insl
cmpsb
aaa
mov
aad
sbbl
dec
fldl2e
xlat
mov
or
push
sub
jp
popa
adc
aas
loop
xchg
enter
aaa
stc
scas
xor
push
mov
das
out
fcos
lods
xchg
sub
mov
xchg
int
mov
mov
jae
inc
jb
xor
or
jnp
and
mov
jno
dec
inc
lcall
jg
cmp
stos
mov
shlb
jmp
mov
mov
sub
mov
sbb
fwait
sbb
or
jb
cmp
ret
mov
test
jmp
jmp
mov
inc
inc
adc
enter
cmc
pop
cli
in
xchg
sbb
inc
sbb
push
pusha
push
pop
pusha
cmp
cwtl
inc
fsubr
push
icebp
je
ljmp
inc
jne
out
or
xor
clc
xor
sahf
mov
enter
das
imul
aas
shrb
ret
ret
push
out
xchg
stos
inc
stc
mov
fs
jbe
pop
sub
mov
adc
xlat
mov
or
in
push
testl
test
pop
leave
dec
fucom
addr16
fimull
shll
test
mov
aaa
cltd
getsec
cs
adc
fdiv
je
adcl
test
xchg
int3
or
inc
pushf
outsl
sub
jge
cld
push
fstps
lcall
pusha
dec
xchg
in
or
jmp
mov
sbb
cltd
mov
cmpsl
int3
jmp
insb
adc
xor
push
cmp
push
xchg
sarb
mov
sbb
mov
and
push
xchg
mov
fidivl
iret
jge
dec
and
xor
icebp
ret
mov
icebp
xor
lahf
mov
nop
in
and
sbb
fdiv
mov
push
adc
fcmovnu
push
rorl
pop
imul
cmp
pop
in
popf
jl
lock
xchg
fstpt
sbb
in
sub
or
int3
js
mov
pusha
aad
pop
cmp
rcrb
repz
pop
mov
test
xor
mov
dec
mov
fs
inc
mov
repnz
std
and
sahf
movsl
stc
out
sbb
out
sbb
mov
loope
test
call
mov
mov
stc
push
or
aam
dec
repnz
lea
mov
andb
cli
add
out
adc
in
jmp
mov
in
aaa
sub
jnp
sub
scas
sbb
popf
insb
mov
inc
fistps
mov
adc
xor
jecxz
hlt
adc
push
mov
ret
mov
or
enter
or
sarb
xor
jmp
and
sub
fwait
pop
add
add
aad
sbb
xchg
je
pop
int
aas
xor
mov
dec
and
shr
or
fmull
pop
cld
xchg
sub
inc
in
clc
push
sar
cmp
sub
mov
inc
gs
xchg
clc
rcrl
les
fstl
loopne
inc
lret
inc
subl
fsubs
insb
repz
push
jge
push
push
pop
or
and
cmp
fsubs
call
and
cli
outsl
clc
cmc
out
cmp
pop
xchg
out
push
sbb
insl
mov
pop
mov
or
add
sbb
int3
inc
mov
cmc
insb
mov
cmp
sbb
fwait
push
nop
mov
cld
hlt
mov
test
or
outsb
cwtl
aaa
push
sub
fcmovnu
cmp
cmpsl
push
dec
mov
das
fimull
or
leave
fsts
dec
stos
scas
ficoml
dec
adc
or
xor
sbb
sub
fcoms
popa
mov
lock
mov
scas
mov
subl
add
into
mov
rorb
xorb
xlat
xchg
mov
xchg
cmpsl
jecxz
pop
enter
cmpsb
xor
or
mov
jg
jne
or
xlat
pop
lods
cmp
sbb
movaps
pop
push
pop
mov
call
gs
aaa
fsts
xchg
and
xchg
push
jns
lds
loope
or
sbb
push
mov
push
ret
jl
xchg
mov
gs
sarb
or
ret
repz
or
in
rcll
nop
or
aaa
lcall
cmp
pop
addr16
sbb
sbb
add
mov
xchg
fdivl
subb
xchg
cmc
mov
int3
outsb
scas
sub
mov
cmc
pop
test
in
xchg
les
in
sub
fstps
mov
sub
call
lock
jmp
lods
inc
imul
outsb
adc
sarl
das
pop
mov
mov
pop
sbb
xchg
sahf
addr16
outsb
aad
sbb
mov
or
or
lahf
movsb
inc
mov
push
lahf
fistpl
dec
xchg
xchg
ficoms
push
stc
add
movsl
je
ficoml
scas
pusha
cs
ret
sub
sub
call
fcmove
mov
and
fcmovnb
xchg
sub
mov
mov
roll
mov
mov
jns
mov
cmc
mov
nop
and
cli
xchg
outsb
scas
mov
cwtl
ret
xchg
pop
cmpsl
lea
ret
xor
add
inc
outsl
das
cmp
xor
sysret
mov
jge
imul
mov
sti
stos
das
jge
movl
jg
cmp
fsubrl
out
stos
int3
or
mov
sub
mov
and
dec
push
insb
pop
cwtl
sti
push
jae
xor
sbb
cmc
stos
xchg
jbe
dec
fcomps
loop
mov
imulb
adc
sbb
lods
les
jo
xchg
out
out
bound
cs
sbb
fwait
lock
into
pop
icebp
rcll
leave
sub
jl
cmc
sub
cmpsl
push
jbe
jnp
lods
adc
pop
ss
icebp
leave
adcl
mov
test
gs
sub
adc
cmp
leave
daa
loop
ret
inc
iret
arpl
pushw
mov
shlb
mov
jo
test
pop
aas
fldenv
cmovp
push
jo
imul
stos
xor
inc
cmc
mov
inc
and
pop
js
pusha
sahf
adc
jne
and
pop
out
sbb
sub
mov
stos
data16
xchg
or
mov
filds
xchg
or
loope
addr16
sarl
loop
outsb
pop
or
sub
xor
lcall
and
pop
mov
xor
and
dec
cmp
inc
popa
jg
loope
xor
add
int3
hlt
xor
and
bound
or
inc
inc
push
imul
mov
mov
sub
mov
in
dec
lret
push
inc
inc
mov
mov
and
cmp
and
and
xchg
lds
test
daa
adc
pop
dec
push
test
jnp
dec
das
scas
in
and
sub
xor
xchg
add
in
dec
mov
das
push
sbb
cmp
jae
sbb
aas
js
ret
sbb
iret
icebp
movsb
add
imul
loopne
orb
add
xchg
inc
push
or
cld
pop
imul
mov
decb
mov
xor
sub
jle
rcrb
pop
ljmp
out
mov
xor
mov
addr16
les
scas
jbe
jb
ss
add
movsl
cmp
rep
mov
cli
mov
or
and
jne
stos
out
rcrb
ds
mov
adc
test
sub
push
roll
push
mov
push
push
pop
adc
scas
push
cli
int
push
dec
es
mov
stc
lret
jae
adc
hlt
fwait
mov
sti
dec
imul
push
push
inc
pop
jl
rclb
lcall
repz
push
xor
or
mov
pop
imul
in
mov
jmp
inc
sub
mov
mov
and
rolb
cld
scas
testl
xchg
loop
pop
mov
fwait
shlb
pop
insl
sti
outsl
xchg
and
push
insl
add
data16
shll
loop
sbb
xchg
es
lds
adc
pop
and
jle
lods
add
aaa
cmpsb
push
out
and
or
arpl
pop
ljmp
pusha
sbb
pushf
add
mov
cmp
outsb
mov
es
jecxz
or
cmp
bound
or
int
pop
sbbl
sbb
xchg
jp
add
inc
decb
jno
repz
aaa
push
dec
xchg
int
inc
in
inc
bound
ljmp
and
and
adc
or
lret
pusha
int3
in
cmc
in
shll
arpl
xor
popf
add
mov
mov
enter
adc
push
pop
mov
ljmp
pop
nop
mov
ss
notb
out
bound
lock
add
xchg
shlb
push
and
int3
mov
popf
pop
cmpsl
fdivl
clc
fisubl
out
mov
lret
repnz
mov
mov
ret
addr16
repnz
lret
fnstcw
int
cmp
orb
rclb
aam
outsl
cltd
popl
cwtl
ficoms
pop
mov
or
cmpsl
sbb
mov
arpl
in
xchg
incl
addr16
inc
aam
pop
mov
jmp
dec
push
xchg
mov
cmpsb
rorb
je
mov
inc
hlt
push
mov
cmpsl
push
mov
aaa
cli
xchg
std
adc
jge
cmp
mov
xchg
fxch
jge
and
or
mov
out
lret
roll
cmp
in
out
sbb
out
les
scas
lahf
xchg
lcall
mov
test
adc
and
fistl
adc
mov
fmull
outsb
mov
in
add
je
mov
mov
lods
leave
or
out
jmp
inc
mov
mov
test
stos
out
dec
les
insl
movsb
xchg
push
cmp
movsb
lcall
dec
cld
mov
sub
push
xor
sbb
sub
shr
into
inc
popf
cld
sbb
stc
xor
mov
aaa
es
and
ret
sub
xchg
idiv
inc
in
and
testl
out
inc
js
mov
pop
sbb
sub
mov
pop
and
xor
ficompl
cltd
mov
cmpb
fadd
movsb
adc
xchg
add
test
sbb
push
fbstp
in
mov
mov
push
cmp
inc
jne
adc
rcrb
mov
sbb
in
adc
xchg
mov
in
dec
pop
and
xchg
or
popa
add
mov
xchg
dec
inc
std
mov
pop
movsb
ds
aaa
xor
mov
out
dec
dec
movsb
in
add
mov
inc
push
and
xchg
in
xchg
push
and
push
jl
sahf
jp
cld
mov
fisttpll
ds
jl,pn
nop
fwait
inc
aaa
xchg
test
outsl
push
test
lahf
cmp
sarb
mov
dec
push
xchg
adc
mov
push
cld
cs
inc
or
shl
and
idivb
fwait
rcll
jge
cmp
xlat
xchg
gs
scas
lcall
repnz
rorl
out
sub
sub
mov
cmp
mov
sarl
lods
lahf
enter
jl
sbb
cmp
mov
xchg
pop
or
in
sub
sbb
scas
shrd
push
pushf
orb
push
jae
stc
loope
jo
cmc
cmp
mov
insl
out
hlt
popf
xchg
scas
sub
dec
outsl
mov
not
sbb
pop
jg
dec
lea
cmpsl
ficompl
dec
rorb
decb
jns
xor
mov
jbe
and
adc
rol
rclb
pop
sub
out
ds
mov
arpl
in
dec
xchg
pop
mov
and
sbb
lds
mov
dec
sub
push
push
stos
cltd
mov
es
jne
and
xor
std
leave
xchg
sbb
pop
icebp
mov
movsl
inc
xchg
mov
aaa
sub
pop
sbb
cltd
sbb
xor
cmp
faddl
xchg
pushf
gs
push
xchg
sbb
inc
dec
push
push
add
jmp
aad
xor
xchg
jbe
push
pop
ret
inc
test
jne
ret
jb
adc
and
iret
sahf
into
test
dec
pop
dec
sar
pop
nop
movsb
xchg
or
sbb
dec
mov
call
sub
or
dec
aam
inc
push
repnz
mov
into
lock
lods
call
dec
mov
cli
or
dec
arpl
lcall
popa
out
cmp
xchg
cmp
hlt
push
add
ds
mov
or
cmp
mov
es
mov
xor
dec
push
pop
jae
mov
inc
inc
cltd
into
dec
test
xlat
out
loope
mov
inc
cli
gs
icebp
test
in
test
inc
aas
lock
or
or
mov
pop
jns
sub
jp
push
inc
cmp
or
les
inc
inc
outsl
rcrl
push
cmp
pusha
sub
div
inc
clc
or
stos
inc
addr16
add
ss
in
cli
ss
pop
sbb
mov
int
xchg
hlt
mov
xor
jnp
lea
xchg
out
push
repnz
insb
mov
or
test
ja
sbb
scas
xchg
jo
cmp
push
cmpsl
or
jg
imul
ja
jecxz
and
pop
and
leave
dec
pop
jg
and
loop
xorb
push
imul
xor
out
call
repnz
cmp
push
sub
push
shlb
push
aam
cmp
adc
je
movsl
adc
mov
xchg
xchg
iret
stos
scas
mov
je
mov
dec
xor
dec
xchg
inc
jb
dec
pop
jge
rorl
ret
inc
mov
add
popf
push
aas
lret
fdiv
pop
or
cmc
fisttps
sub
push
inc
adc
xor
adc
dec
xor
das
lret
cmp
mov
pop
sub
adc
cmpsl
jae
loopne
or
jb
mov
jge
into
xchg
loopne
in
bswap
fiadds
pop
dec
out
dec
push
pushf
pop
sbbl
fidivrl
imul
mov
daa
std
roll
mov
leave
iret
cli
jae
test
inc
scas
jecxz
ficoms
pop
mov
test
aad
arpl
mov
push
leave
lret
sbb
xchg
mov
dec
wbinvd
data16
popf
cmovns
out
fisttpll
pop
adc
frstor
jecxz
repz
aam
outsb
shl
inc
lock
mov
outsb
sbb
inc
xor
fisttps
iret
imul
xlat
mov
push
inc
inc
pop
stos
pop
lock
add
je
xchg
adcl
cld
mov
lcall
and
fwait
out
mov
push
fdivs
mov
icebp
pop
pop
stos
mov
fistps
adc
xchg
rcrb
dec
fisubl
lcall
das
lods
cwtl
sub
push
fisttpl
sub
test
jecxz
mov
in
out
cmp
outsl
cmp
ret
jnp
test
addr16
and
sub
mov
add
int
lea
dec
sub
imul
fldcw
jns
xchg
sbb
fidivrs
mov
incl
inc
es
pusha
stos
mov
xchg
mov
ret
inc
mov
mov
pop
adc
xor
mov
push
cli
jmp
xor
mov
sahf
push
mov
movsb
test
pop
cli
or
das
shlb
mov
repnz
and
jb
mov
jnp
adc
xor
adc
or
data16
push
add
icebp
adcb
jl
mov
mov
cmp
icebp
push
sub
adc
stos
xor
or
and
xlat
lds
stos
push
arpl
cmc
cmpsb
icebp
mov
cli
sub
cmp
das
aas
mov
pop
aad
imul
push
fadd
jg
mov
mov
outsb
cs
mov
stos
inc
mov
fldl2t
sub
jmp
xchg
jl
stos
mov
jge
int3
xlat
dec
cmp
lahf
enter
xor
sbb
test
push
rolw
andl
push
in
adc
or
fldl
cld
cmpsl
stc
add
out
xchg
xor
pop
cmpsb
out
lock
push
out
repz
mov
push
mov
mov
mov
clc
ljmp
push
or
xor
push
rcrl
cmp
out
fmuls
adc
xchg
clc
push
outsb
xor
pop
sub
xor
insl
out
cmc
enter
jb
aam
push
stos
ss
daa
or
push
inc
pusha
test
sbb
fbld
and
pop
add
add
or
mov
xchg
inc
jecxz
or
push
inc
xchg
addr16
in
outsl
sbb
mov
daa
xchg
inc
dec
dec
js
lahf
sbbb
sub
cmp
addr16
or
cmp
loopne
sub
jno
and
mov
xchg
and
mov
in
sbb
lcall
movsb
cwtl
mov
sub
lock
out
jmp
cmp
imul
test
cltd
lods
cmp
xor
mov
xorl
aam
sahf
mov
and
and
add
inc
loopne
popa
push
xor
andb
mov
xlat
jns
test
shrb
call
push
xor
mov
mov
push
dec
js
cltd
cmpsl
lock
mov
pusha
push
sub
and
mov
dec
movsb
orb
fstps
shl
adc
cmp
xchg
fidivs
mov
test
mov
bound
ret
or
sub
adc
xchg
fnstsw
lods
add
scas
sub
pop
mov
insl
and
dec
ret
push
mov
lods
push
or
push
xchg
into
int
jne
roll
jmp
mov
test
mov
and
int
cmpsb
test
jg
movsb
pop
jle
xchg
mov
dec
mov
ja
stos
inc
mov
pushf
sbbb
outsl
pop
inc
jl
insb
fld
popa
insb
jecxz
int
iret
or
repz
fldcw
mov
fwait
add
sti
js
orb
add
scas
cmp
mov
sbb
xor
dec
cld
pop
mov
push
das
popa
hlt
sub
test
data16
inc
js
bnd
das
es
sub
or
pop
jb
ror
add
mov
rcr
bound
cmpsb
lods
push
test
daa
ret
fs
add
push
jg
push
adc
cwtl
in
scas
outsb
popa
jmp
hlt
shr
icebp
xchg
loop
mov
cmp
cmpsb
fsubp
xchg
jmp
mov
sbb
pop
dec
sbb
sti
call
mov
test
or
fdivrl
decb
in
mov
add
add
push
fsubs
xchg
jb
aaa
dec
popa
sar
jecxz
lahf
hlt
call
out
mov
test
sub
add
add
and
xor
push
notl
lcall
mov
dec
jae
sbb
pop
xchg
sarl
pop
cmc
cmc
repnz
mov
dec
repz
and
jl
lret
add
push
xchg
lahf
ror
rorb
xchg
daa
enter
scas
dec
mov
cmpsb
fucomi
push
xchg
lret
xchg
xchg
fbld
sub
adc
xchg
mov
gs
fisubrs
cmp
mov
ljmp
inc
dec
mov
or
mov
sbb
add
inc
xchg
adc
push
inc
aam
call
adc
hlt
faddl
mov
test
xchg
add
push
xor
out
xchg
adc
push
out
mov
shl
mov
adc
hlt
sub
push
or
cmp
inc
mov
inc
pop
cmp
and
mov
push
cwtl
in
mov
push
mov
cmp
xchg
or
cmp
loopne
out
adc
imul
mov
pop
roll
out
aas
test
aaa
lret
pop
and
jge
lret
sbb
jp
dec
push
sub
cmpsl
fildll
xchg
sub
cmpsl
xchg
add
test
aad
add
cltd
sbb
sbb
and
xchg
jno
sub
cmp
push
sub
xchg
sub
or
out
loope
mov
mov
add
adc
pop
or
inc
push
jns
sub
std
test
pop
mov
cmp
nop
pop
lea
pop
xchg
arpl
and
js
push
cmp
sti
loope
sbb
popf
fistps
push
adc
jns
lock
inc
std
xchg
or
xchg
xlat
rcrl
cmc
sbb
mov
push
mov
bswap
popf
mov
mov
outsb
insl
mov
das
mov
lods
mov
ret
fsubrs
jo
xchg
adc
mov
xchg
dec
pop
out
cmp
add
jecxz
jl
cmpsb
inc
mov
fisubrs
lret
enter
lret
xchg
jp
push
xchg
xchg
cmpsl
xchg
push
inc
or
cmpb
or
mov
cmc
stc
or
cld
jg
push
sub
sub
movb
stc
dec
imul
sbb
stc
subl
xchg
inc
inc
mov
out
sub
mov
aaa
push
push
fwait
daa
pop
jns
or
adc
rcr
repnz
scas
ds
jge
mov
cwtl
xor
mov
jge
jno
cmp
adc
jmp
test
mov
clc
not
cwtl
dec
mov
inc
stos
lahf
inc
inc
pushf
mov
scas
lock
cli
cli
or
lods
cli
pop
lret
xchg
aaa
xor
adc
fdivl
xor
jg
sbb
jbe
sub
inc
fisttpl
sbb
add
pusha
cmp
pushf
fcoml
test
enter
mov
jl
pop
pop
xchg
testb
and
ds
cmp
sbb
jmp
xlat
jmp
js
jle
jmp
xchg
loopne
and
pop
sub
or
popa
shlb
fnstcw
and
mov
clc
fimuls
ljmp
fnstenv
dec
mov
bound
xchg
mov
adc
jl
adc
loop
xlat
pop
adc
dec
in
xor
lods
and
fdivrs
call
sti
pop
int
jge
jge
cmp
and
int3
inc
xor
sbb
xor
mov
mov
inc
push
aaa
cwtl
aam
push
add
dec
or
inc
sahf
jnp
out
bound
sbb
stos
mov
mov
mov
and
hlt
add
loopne
clc
add
sbb
into
inc
popa
in
ja
and
push
cmc
icebp
and
dec
adc
outsl
out
xchg
inc
or
jbe
push
ljmp
mov
pop
orb
lds
pop
leave
mov
or
pop
enter
jns
sub
jg
enter
or
jg
dec
jl
push
xchg
push
test
cmp
sub
imul
leave
lcall
cltd
cld
movsb
or
inc
loop
cltd
or
adc
pop
add
mov
xchg
gs
scas
adc
sti
inc
fcoms
cmpsb
xchg
lret
mov
push
out
push
dec
dec
aas
pop
lock
std
ja
pusha
sub
cmp
add
pop
in
fwait
gs
xchg
mov
mov
xor
add
or
xchg
mov
aad
push
call
fistps
pmaxub
lods
adc
out
mov
js
xor
cld
inc
ja
xor
mov
mov
loope
sbb
xchg
push
sbb
adc
cmp
jae
mov
pushf
jns
insl
repnz
inc
xchg
dec
call
cmpsb
add
inc
inc
imul
sti
mov
cltd
mov
outsb
ret
mov
pop
pop
into
xor
es
xchg
in
mov
orb
cmp
scas
mov
mov
negl
inc
and
imul
out
ret
inc
pop
inc
or
mov
outsl
and
add
push
cwtl
mov
out
in
sbb
xchg
cmpsb
aas
shl
pop
mov
pop
test
mov
or
insb
pop
mov
push
push
and
adc
inc
ljmp
mov
jp
icebp
out
xchg
dec
into
cmpsb
jb
sbb
mov
mulb
inc
daa
cltd
shl
lock
cli
cmp
mov
jb
cmpl
repz
pop
push
mov
imul
mov
push
and
enter
or
das
cmpsb
scas
arpl
pop
scas
sub
xchg
cmp
lret
mov
or
aaa
dec
xor
push
dec
add
popf
mov
ret
adc
in
sbb
mov
cwtl
push
push
xchg
push
in
movsl
jg
cmc
lcall
push
lock
xor
add
mov
popa
mov
repz
out
insb
adc
fidivrs
jmp
and
or
nop
adc
push
mov
jno
testl
mov
test
xor
jno
mov
aas
xchg
sbb
daa
imul
sub
fmull
aad
ss
jp
loope
mov
cmp
mov
sbb
dec
xchg
jecxz
mov
aaa
pop
push
or
xchg
pushf
pop
inc
and
lods
lods
push
sbbb
xor
mov
insl
add
call
and
cmp
shr
mov
insb
pop
jnp
ljmp
loope
or
stos
enter
js
data16
mov
cmp
jge
rcrl
lock
jp
mov
cmp
hlt
add
sbb
jno
aad
xlat
xchg
popf
out
gs
push
add
push
xchg
sub
pop
cmc
and
fidivs
dec
inc
jecxz
add
mov
inc
push
jno
lcall
cld
and
test
pop
es
sbb
fsubr
aad
push
repz
stos
jns
pop
sbb
push
roll
dec
loope
cmp
bound
pop
mov
cmpsl
cld
adc
add
inc
or
hlt
ret
ret
dec
cltd
pop
insb
pop
sub
sti
rclb
mov
psubsw
jp
pusha
lea
repnz
sub
xchg
push
out
xchg
lahf
leave
mov
data16
hlt
insl
leave
in
mov
in
sub
repnz
mov
sub
sahf
cmp
stc
adc
leave
mov
mov
fs
xorl
jecxz
sbb
mov
mov
sbb
dec
lods
mov
mov
ret
lds
and
push
jo
push
xor
cli
xlat
nop
test
sub
scas
movsb
adc
js
mov
dec
fs
iret
pop
imul
jge
aaa
ja
sub
or
hlt
leave
aas
fldcw
daa
mov
popa
sub
push
sub
pop
cmp
xchg
xchg
nop
mov
push
inc
xor
sub
cs
xor
adc
xchg
fmuls
inc
das
fstps
cld
enter
leave
sbb
jae
xor
dec
mov
or
cmp
lret
sbb
imul
pop
fcmovb
jo
xor
je
and
cwtl
fwait
mov
std
push
fadds
mov
repz
ret
les
mov
xchg
xor
mov
push
mov
divb
std
sub
jg
cltd
inc
call
mov
sub
cmp
mov
aaa
add
sbb
xchg
pop
sub
ljmp
hlt
pop
and
in
mov
pop
mov
test
cwtl
in
dec
daa
int3
insb
cmpl
mov
or
ljmp
xchg
jbe
sbb
pop
pop
std
inc
js
push
push
dec
shrb
aam
pop
push
bnd
sub
push
movsl
sbbb
cmp
imul
sub
ds
inc
sub
jbe
pop
fildl
jmp
lds
push
cmc
jp
cmp
sbb
cmp
mov
enter
or
xor
jb
in
and
inc
call
outsl
loopne
xchg
nop
in
nop
jmp
jb
pop
fs
mov
orl
rcrb
push
rorb
in
mov
add
loopne
add
xor
and
mov
stc
mov
cld
rcrb
stc
rcll
movsb
iret
push
adc
cmc
int
add
je
fldenv
inc
ljmp
dec
adc
add
lret
sub
mov
sbb
test
cmp
shl
lret
aas
mov
jns
movsb
jle
adc
out
mov
inc
pop
jl
jne
sarb
xchg
sub
sahf
adc
adc
in
inc
pop
pop
pop
push
push
in
xor
lea
inc
clc
dec
adc
fnstenv
lock
nop
push
in
jmp
mov
jno
out
xchg
dec
xorl
sbb
or
test
jae
adc
mov
sbb
rclb
daa
and
pop
inc
lea
sbb
sarl
xor
fnstsw
inc
cmp
aas
std
nop
and
cmpl
cltd
cltd
cwtl
popa
imul
adcb
add
nop
adc
popf
loopne
push
or
push
enter
icebp
pop
jbe
test
push
push
mov
sub
in
and
jmp
test
jns
inc
repnz
mov
fcomp
pop
xor
nop
fildl
mov
dec
jmp
mov
inc
adcl
jo
mov
mov
jge
icebp
movsl
pop
int
dec
jbe
adc
lds
in
adc
orb
or
xlat
pop
cmp
jb
int3
mov
mov
dec
and
push
add
fs
mov
sub
jp
pusha
ss
push
hlt
pushf
adc
jge
sarl
sub
pop
mov
in
mov
fucomp
mov
and
arpl
cmpsl
push
hlt
cltd
cld
jge
dec
fidivl
cmp
xchg
inc
sar
cmp
mov
dec
sub
fsubrs
fwait
incb
sub
test
sarl
cmp
lcall
rcl
xchg
adc
pop
mov
mov
lret
jle
out
jae
imul
orb
in
sbb
xchg
sahf
hlt
outsb
in
in
pop
bnd
inc
mov
fidivl
fldt
inc
sub
mov
push
or
push
jmp
das
pop
lock
das
in
push
movsl
jno
add
les
cmp
mov
push
es
xor
mov
pusha
cmp
add
push
dec
mov
arpl
pop
fistpll
jg
sub
add
dec
scas
lock
iret
or
inc
xchg
pusha
and
addr16
mov
jbe
push
popa
mov
jns
fs
and
in
cmpb
jp
addl
addr16
inc
insb
imul
mov
dec
and
fistl
int3
xlat
insb
sub
lods
stc
data16
js
out
call
out
xchg
add
stos
dec
je
and
shll
mov
inc
rcrb
clc
fstl
sbb
add
sub
push
dec
ljmp
mov
lret
jae
subl
pop
xchg
fidivl
iret
mov
popf
pop
lods
cmp
cltd
fimuls
cs
mov
divl
pop
scas
adc
lret
aam
push
fistl
in
mov
adc
cmp
xlat
sub
adc
pop
mov
xchg
or
or
into
cmc
lock
out
fidivrs
mov
mov
push
ror
mov
cli
stos
jle
ficoms
in
xchg
jge
popa
jo
and
and
fcoml
xchg
xchg
lods
push
lock
mov
sub
pop
movsl
mov
loop
or
mov
test
xchg
test
sahf
sub
or
mov
xchg
dec
ror
loopne
stos
push
das
and
stos
subl
js
fcomp
mov
dec
rcll
iret
jp
push
por
sbb
xor
xchg
push
xchg
mov
mov
sub
in
loopne
fdivrs
xchg
imul
cwtl
enter
loope
int3
std
pusha
orb
sbb
add
ljmp
scas
push
fs
push
insl
mov
xor
pop
mov
mov
jns
lods
xchg
lahf
and
pop
cmpsb
fwait
popf
pop
fsub
out
add
js
and
icebp
push
insl
pop
xchg
mov
mov
ds
cmpsb
lods
jp
xchg
cmp
inc
push
loopne
divb
stos
arpl
shlb
lods
out
mov
out
repnz
adc
div
jae
pop
xor
shlb
lds
mov
mov
in
adc
lea
xlat
xor
leave
mov
pop
cwtl
and
loope
in
sti
sbbb
sbbb
add
cwtl
pop
mov
push
inc
adc
mov
xchg
add
dec
push
leave
dec
add
repnz
daa
sub
or
xlat
xor
dec
dec
aad
push
jle
pop
je
pop
xor
inc
xor
outsb
stos
mov
add
stos
pop
not
sahf
out
jae
xchg
jp
ljmp
loop
pop
mov
orl
inc
outsb
push
inc
out
add
daa
xchg
pop
mov
loop
rcll
lahf
shll
loopne
fabs
stc
mov
cmpb
and
inc
cmp
arpl
mov
pop
sbb
sub
lcall
dec
into
mov
ss
data16
or
jg
dec
sub
cli
or
lock
xor
push
and
add
hlt
aad
mov
sbb
cwtl
test
cmp
push
xor
mov
lods
jnp
in
mov
stc
jnp
lcall
dec
or
test
mov
sub
ret
mov
sub
insl
mov
sbb
cli
jno
push
push
pushl
out
dec
dec
aaa
lea
ficoms
cmp
mov
popa
xchg
xchg
lea
addr16
cld
push
pop
pop
repz
mov
jmp
or
mov
jbe
imul
xor
jp
push
mov
adc
ret
jno
enter
xchg
pop
push
sub
pop
pop
dec
shl
outsl
mov
shlb
mov
add
int3
das
loope
sbb
mov
add
jno
sbb
pushf
mov
inc
pop
iret
mov
or
cli
and
cld
add
outsl
cld
or
xchg
cmp
jle
out
jbe
test
movsb
lahf
mov
rclb
js
call
cwtl
in
cmp
mov
lds
js
jb
test
jb
ja
enter
in
js
popf
add
fldenv
insb
imul
gs
aas
aaa
add
pop
inc
sti
test
aam
mov
adc
imul
jmp
cmc
xor
inc
decl
insl
fwait
ljmp
outsl
call
mov
imul
out
rcll
add
in
popf
arpl
sti
js
stc
inc
cmp
loope
ret
stos
mov
pop
scas
in
adc
aad
iret
arpl
lret
lods
pushf
pop
mov
jb
clc
jno
ss
jo
popf
cmc
adc
ss
insl
stos
adcl
push
icebp
repnz
cmpb
and
adc
pop
dec
mov
or
decl
fistpll
movsl
jo
pop
fsubl
nop
fsubs
movsl
rcll
fidivs
addr16
dec
pop
fucomi
mov
ss
aad
pushf
xchg
dec
pop
mov
mov
js
cmp
dec
or
jbe
mov
push
in
xchg
fwait
das
call
dec
fs
pop
shrl
mov
cmpsl
and
mov
out
shlb
xchg
inc
lret
orl
and
loop
ja
stc
sbb
and
int3
dec
in
mov
lret
aad
xchg
push
call
add
mov
int3
or
notb
xor
mov
dec
and
mov
les
int
loop
push
call
or
push
cld
sahf
push
loope
enter
jo
xchg
sub
fcmovb
lea
sahf
mov
sti
cmp
jecxz
mov
je
daa
jmp
xchg
in
fdivrs
outsl
mov
loope
loopne
jge
cmp
fldl
dec
xor
addr16
stos
enter
test
cs
inc
mov
outsl
mov
in
in
and
push
or
in
mov
jne
dec
fsubr
scas
pop
cmp
xchg
fwait
mov
aaa
mov
push
dec
gs
addr16
and
xorb
daa
sqrtps
fisttpll
pop
push
xchg
rcrl
lods
push
fisubl
dec
fwait
icebp
fistl
mov
cmp
sbbl
push
mov
dec
ljmp
call
lods
mov
loopne
leave
cmp
cld
js
or
inc
adc
arpl
cwtl
pop
out
or
stos
repz
xchg
pop
cmp
xchg
in
push
outsb
shlb
sbb
aas
jae
or
fdivr
test
dec
loop
jae
xlat
sub
inc
and
dec
mov
out
xor
push
nop
imul
into
daa
cld
dec
mov
data16
dec
push
pop
test
dec
push
ss
jbe
cmpsb
sub
stc
or
dec
push
push
push
dec
arpl
out
sbb
mov
add
fcoms
xchg
push
xchg
sub
mov
push
xchg
mov
push
mov
hlt
sbbb
lea
lods
clc
xchg
outsb
mov
es
or
xchg
mov
ljmp
popa
ljmp
pop
sub
sbb
ljmp
push
dec
jg
or
test
cwtl
or
or
fisubrs
movb
mov
cmp
and
mov
mov
scas
sub
inc
stos
movsl
and
imul
push
pop
or
mov
mov
xchg
pop
push
ret
lcall
xchg
xchg
jne
push
cltd
scas
mov
lret
xchg
push
movsl
aam
orb
pop
mov
sbb
subb
sub
inc
ds
push
movb
mov
into
push
dec
aas
sbb
push
lahf
aam
adc
ss
push
or
loop
sbbb
sbb
push
rol
icebp
pop
jne
push
cli
and
movsb
aaa
pop
pop
out
sti
adc
mov
adc
xor
leave
mov
xor
sbb
jge
mov
arpl
sub
dec
sub
dec
xorb
adc
or
push
mov
mov
les
insl
dec
adc
cmp
test
xor
mov
std
cmp
and
icebp
add
lret
mov
fldl
mov
xor
mov
rcll
xor
lahf
stos
in
add
jecxz
push
pop
shrl
mov
adcl
inc
stos
xor
jge
dec
sbbl
and
sarb
jo
mov
jmp
adc
mov
addb
mov
into
push
loope
push
adc
inc
daa
push
jne
mov
xchg
shlb
jno
adcb
packsswb
sbb
lods
cmp
xor
dec
das
xchg
inc
push
mov
shll
xorb
add
movsb
xchg
add
mov
cmp
mov
inc
xor
and
fdivp
icebp
cmp
jecxz
dec
popf
shrl
pusha
push
push
push
rclb
mov
subb
jnp
shll
push
push
clc
mov
mov
iret
pop
js
cwtl
or
cmp
dec
push
cltd
jo
loopne
pop
mov
sbbb
das
sarl
cmp
test
cmp
sub
int
cmp
gs
aas
xor
jg
dec
jno
push
pop
in
add
pop
cmp
inc
std
jl
jmp
mov
push
dec
and
xorl
fimuls
dec
and
icebp
das
jecxz
das
cmp
xor
jle
insb
push
adc
clc
lret
dec
adc
mov
jle
xor
mov
mov
sub
int
cmp
sbb
sub
cs
test
push
or
mov
xor
add
aas
lds
add
mov
mov
rclb
jb
ret
ds
jp
push
cmc
cld
xchg
pop
push
enterw
jno
pop
inc
jmp
xchg
pop
stc
in
xor
pop
icebp
fadd
sahf
or
incb
mov
mov
das
iret
lods
mov
xor
popf
int3
icebp
xor
out
and
add
std
stc
mov
jns
scas
andb
jb
adc
mov
insl
mov
sbb
imulb
push
pop
fucomip
sub
cmp
xchg
data16
in
sub
aam
cld
push
and
outsb
in
jo
push
bound
stos
addb
repz
dec
cs
popf
das
int3
jo
je
xchg
and
ficompl
jae
cmp
clc
mov
cmp
je
jo
pusha
xchg
mov
sbb
cmpsb
jnp
data16
mov
mov
orb
adc
clc
xor
jle
daa
dec
sbb
or
xchg
cmp
inc
sbb
and
stc
outsb
ficomps
cltd
mov
adc
jl
in
leave
xorb
mov
mov
sti
or
inc
pop
jp
push
sub
insb
cmp
push
or
pusha
cmp
xor
outsb
xchg
mov
fsts
rcrl
icebp
rep
jmp
inc
in
pop
cmpsl
roll
arpl
fwait
xor
mov
cs
cs
sub
arpl
push
mov
aaa
cs
test
pop
cmpsl
fs
xchg
and
out
clc
mov
gs
push
jb
jecxz
sbb
shll
cs
mov
sub
push
mov
push
ljmp
aam
fisubs
into
jle
sub
fbstp
mov
push
adc
adcl
dec
push
pop
es
aam
xor
shrl
mov
push
push
icebp
mov
jmp
cmp
sub
fs
in
adc
lods
aaa
sti
mov
push
jp
test
pop
push
add
jne
pop
adcl
push
add
push
pop
xchg
or
or
incb
out
cmp
in
ja
sarl
or
icebp
sub
add
sub
jbe
sbb
cmc
jne
mov
addl
inc
test
add
mov
aaa
call
cmp
push
adc
mov
xor
sbb
mov
ds
pop
sbb
or
xor
add
jno
mov
nop
pop
adc
lret
xor
lret
in
mov
xor
test
and
pop
push
arpl
mov
add
roll
sbb
sbb
jg
mov
pop
inc
int3
sub
xchg
enter
add
xchg
mov
inc
ficompl
imul
add
mov
aam
jge
mov
call
add
jle
jecxz
and
push
out
sbb
movsb
outsb
subb
fisttpl
in
pop
push
vshufps
cld
inc
push
xchg
in
jb
xor
xchg
into
dec
xchg
pop
cwtl
call
cmpsl
pushl
lds
jg
divl
sahf
jp
sbb
xor
cmpl
data16
into
and
push
out
cli
aad
popf
das
mov
insb
imul
in
stos
andb
push
into
and
test
adc
mov
cmp
inc
hlt
arpl
sbb
imul
and
push
adc
add
dec
adc
xchg
jnp
mov
xchg
sahf
mov
testb
or
scas
jnp
or
xor
and
inc
mov
cmpsl
jb
pop
inc
sub
xor
inc
xchg
mov
fsubl
adcb
push
imul
and
jnp
movsl
xchg
fisubl
sbb
sahf
aaa
pushf
in
das
pop
add
add
stc
rolb
mov
fnsave
adc
scas
je
dec
xor
and
std
push
imul
pop
test
xchg
jp
outsl
lods
addr16
hlt
fbstp
fwait
outsl
ffreep
sarb
dec
pop
and
test
or
cmp
das
mov
dec
mov
fsts
mov
ds
and
xchg
das
fidivrl
mov
ss
and
mov
stc
ds
mov
out
cmpsb
call
dec
insb
and
mov
sub
inc
inc
stos
mov
jp
mov
aam
aaa
push
imul
popa
sub
mov
insb
in
fimull
pop
cli
arpl
xchg
push
ljmp
pop
jbe
add
fisubrs
out
lret
push
in
roll
dec
mov
mov
test
or
lcall
pop
sbbl
mov
jne
sbb
rorl
mov
adc
aad
mov
lcall
dec
insl
loopne
das
scas
ja
jmp
mov
fmul
repz
mov
mov
adc
ficoml
mov
xchg
pop
rcr
mov
cmpl
mov
test
divb
xchg
jge
dec
fimull
sbb
and
push
movsb
scas
lods
jbe
add
jns
cs
or
xor
ljmp
aas
movsb
dec
mov
gs
cmp
xor
sub
cld
dec
sbb
int3
mov
popa
and
f2xm1
adc
push
jno
mov
rolb
out
adc
ret
ss
pusha
test
push
cltd
inc
xor
ss
xorb
inc
push
adc
sbb
jmp
pop
add
sbb
stos
shll
leave
call
sarl
add
out
es
xlat
lds
xor
jp
mov
xor
in
jecxz
ret
cmpsb
and
sbb
or
dec
fsubr
gs
shrb
inc
icebp
jno
and
and
sti
movsb
jno
stos
repnz
xchg
mov
cwtl
shll
or
jle
inc
push
push
aas
lock
clc
scas
lahf
xchg
push
and
sbbl
or
stos
mulps
pop
mov
or
lahf
cwtl
test
daa
push
nop
cli
push
jae
inc
sbb
pushf
ja
jbe
cmc
insb
es
add
icebp
stc
aad
inc
xor
sub
sbbl
jg
loope
sbb
pop
insb
mov
ja
add
sahf
inc
adc
aam
inc
data16
jne
adc
rorb
jae
test
push
aad
and
movsl
das
sbb
push
mov
je
push
dec
sbb
mov
jae
sbb
ret
mov
jo
jbe
adc
add
and
and
int3
pusha
imul
sbbl
repz
sbb
adc
mov
scas
and
ds
sahf
dec
mov
orl
popa
int3
movsb
pop
or
aad
add
mov
xor
inc
mov
push
mov
adc
fadd
scas
xor
jnp
push
pop
lret
sbb
loopne
arpl
push
cmc
rcl
movsb
sub
stos
testl
cs
pop
lock
mov
and
xchg
adc
sub
divl
adc
out
test
lock
dec
arpl
sbb
pop
dec
jl
sbb
inc
js
iret
and
cmc
push
fwait
xlat
roll
sub
in
imul
movsb
add
inc
lea
xor
flds
push
lret
jbe
jmp
pop
shrl
shr
jae
hlt
popl
or
pop
jae
clc
icebp
mov
or
pop
push
xchg
iret
iret
stos
sub
push
roll
mov
fnstsw
adc
and
out
jae
loope
dec
rolb
inc
xchg
orb
inc
jae
xchg
lds
js
add
inc
mov
sarl
clc
insb
shrl
and
mov
lcall
dec
mov
lcall
push
fidivrs
addr16
xchg
and
fs
imul
push
push
hlt
fistpll
stc
out
mov
sub
push
jnp
push
push
dec
xor
ret
daa
dec
cmp
mov
mov
es
pop
das
dec
push
jae
mov
das
lods
sbb
mov
pop
out
pop
lds
lret
test
rcrb
ja
loopne
dec
mov
jge
out
mov
and
mov
add
jae
or
pop
sahf
push
push
lock
jno
fnstcw
xchg
sbb
push
jnp
inc
cltd
scas
mov
sbbl
ret
in
jg
data16
stos
mov
ds
popa
in
addb
adc
mov
cmp
rorb
jne
mov
lret
pop
sbbb
dec
popa
dec
jg
loopne
mov
sbb
mov
jns
imul
or
push
cld
cmp
pop
xchg
push
pop
das
out
pushf
pop
and
push
jno
and
into
mov
imul
inc
std
aas
shlb
cmp
adc
pop
bound
jmp
sahf
cld
ret
rcrb
dec
lahf
jle
outsl
pop
mov
sub
mov
sub
pop
adc
inc
ret
jo
lods
inc
jb
das
jne
mov
mul
stc
dec
scas
mov
and
shrl
dec
test
lods
call
pop
std
sti
push
xchg
lods
adc
jge
lock
stc
addl
or
xchg
jno
hlt
mov
jnp
shlb
iret
cmpl
push
sbbl
int3
mov
in
mov
xchg
js
add
dec
jmp
rol
std
mov
xchg
rorb
xor
arpl
push
pop
jne
sbb
push
sub
inc
pop
dec
dec
rcr
aaa
mov
mov
ljmp
fs
data16
push
and
sub
mov
and
mov
sbb
jne
cmc
lcall
adc
imul
sti
sub
xchg
jmp
push
sahf
iret
lock
fstps
mov
jbe
add
scas
xchg
jl
arpl
ljmp
sbb
xchg
ja
fsubrl
mov
leave
or
jmp
ljmp
cmc
add
jae
jmp
jbe
push
and
data16
jge
dec
mov
mov
lods
inc
add
lcall
into
aam
pop
xchg
leave
adcl
pop
pop
xor
outsb
test
mov
ss
mov
ja,pt
gs
adcb
test
lds
jno
aaa
jmp
sbb
mov
outsb
dec
mov
cwtl
inc
adcb
ss
imul
test
inc
mov
adc
cli
jae
mov
insb
mov
sti
iret
xchg
fisubrl
jb
movsb
adc
out
int3
hlt
mov
stos
adc
mov
pusha
add
and
test
sarl
cmp
and
les
sub
push
stos
xor
data16
cmp
mov
jno
ss
and
cld
cmp
js
aad
lcall
push
mov
pop
aam
push
nop
aad
mov
push
pop
popa
in
stos
ja
push
pop
adc
iret
push
pushf
pop
movsl
add
insl
loop
gs
rcr
les
pop
dec
jo
stos
sub
stc
pop
sub
das
jge
dec
lds
das
or
mov
mov
movsb
push
int
mov
pusha
mov
mull
loopne
or
call
movsl
adc
adc
jle
cli
push
or
into
outsl
ret
scas
nop
add
out
popa
jo
call
insl
mov
decl
sbb
mov
test
ror
push
mov
mov
sbb
sub
dec
push
jo
cmpsb
adc
out
test
dec
popf
xchg
push
sub
das
xor
jge
add
xchg
out
or
outsb
stos
int3
mov
stos
cmpsl
sahf
xchg
ds
adc
xchg
mov
xor
add
sbb
push
daa
nop
ja
cmpsb
or
sub
pusha
mov
sub
lcall
js
pop
dec
cs
shr
xor
leave
xchg
dec
mov
notl
bound
aad
pop
xor
or
dec
mov
mov
mov
sbb
aam
and
lahf
enter
mov
mov
imul
dec
and
push
add
cmp
mov
stos
cmp
mov
jb
scas
test
adc
mov
movsb
shlb
popa
push
adc
fdiv
sbb
insl
rcl
xor
sar
fistl
mov
aas
rcl
iret
fildll
push
popf
stos
cwtl
push
jb
bound
mov
sbb
stos
sbb
dec
repnz
jecxz
sub
fwait
dec
aad
mov
stos
sub
push
push
mul
push
sub
mov
movsl
inc
fwait
movsb
enter
add
pop
fdivrs
mov
fstpl
xlat
adc
inc
imul
mov
mov
add
push
and
enter
jge
mov
into
jbe
or
adc
xchg
mov
cmp
dec
pusha
fsts
cmpsb
fcompl
lock
and
rolb
or
fwait
shrl
mov
push
cld
push
mov
cld
push
mov
test
stos
sbb
pop
pop
mov
pop
inc
outsl
sbb
dec
and
mov
fwait
push
cwtl
jmp
mov
push
xor
sub
sahf
or
xor
pop
inc
xor
jecxz
test
das
sub
jecxz
js
adcb
fimuls
test
mov
xchg
cmp
mov
xchg
aad
repz
hlt
ss
adcl
xorb
lea
dec
arpl
popa
mov
push
adc
xlat
mov
clc
mov
pop
dec
mov
sub
fwait
cs
pop
cmp
xchg
pop
inc
and
push
shrl
pushf
repnz
hlt
rcrl
sub
pusha
outsl
sub
test
jns
and
push
pop
inc
mov
les
dec
stc
mov
mov
add
mov
mov
test
jb
jbe
sbb
inc
arpl
pop
popf
fdivr
push
test
push
xchg
sub
or
dec
lret
imul
enter
xor
jmp
sub
pop
or
and
addr16
push
xchg
inc
insl
push
add
push
dec
enter
sub
out
fsubl
imul
mov
fbld
and
sub
push
adc
mov
push
mov
iret
xor
repnz
jne
mov
mov
test
adc
scas
test
mov
int3
jmp
or
cmc
pusha
or
mov
sbb
adc
imul
xor
push
pop
jecxz
enter
mov
jp
in
adc
push
stos
and
xorl
jb
add
cs
sbb
xchg
lret
int
imul
lds
and
or
call
stc
movsb
test
fistpl
cwtl
xchg
cmp
lea
cmp
addr16
ret
cltd
cli
test
jg
cltd
aam
xchg
mov
shlb
lods
or
lcall
xor
add
cmp
pop
push
and
aam
loopne
cwtl
push
shl
pushf
pop
outsb
mov
adc
mov
out
pusha
sub
dec
adc
mov
outsl
cmp
loopne
out
imul
mov
dec
add
popa
pop
rol
and
mov
test
mov
xlat
cwtl
loopne
xchg
pop
dec
xchg
movsl
clc
mov
mov
or
popf
xchg
xchg
fcmovnb
cs
int
in
and
mov
insb
dec
mov
imul
mov
testl
mov
jge
cmp
xor
addr16
sahf
dec
hlt
jmp
daa
cs
vmovddup
pusha
negb
out
push
shl
xor
lahf
pop
push
std
cmp
inc
aad
imul
jno
je
in
fidivrl
ds
jnp
pop
xlat
dec
mov
push
ja
aaa
iret
xchg
out
jno
pop
adc
or
sub
std
cli
shrl
lods
push
pop
inc
sub
fs
icebp
adc
cs
imul
daa
xor
xor
cmc
and
mov
jnp
cmp
fmulp
jmp
sub
push
mov
pop
enter
and
imul
addr16
mov
push
sub
push
sub
sbb
leave
jbe
xchg
loope
sub
stos
lret
push
mov
pop
in
jmp
or
mov
jge
aaa
mov
in
jp
imul
xchg
into
mov
mov
add
imul
xchg
jmp
sub
jb
xor
push
pop
xchg
jae
mov
add
sbb
out
pop
inc
cmp
mov
in
mov
cmc
sbb
sbb
stos
and
lods
movl
inc
js
add
dec
lea
jl
sub
cmp
and
test
inc
stos
insb
or
mov
adc
mov
bound
xor
daa
aad
adc
out
push
dec
repz
scas
fwait
or
jnp
jns
mov
loope
dec
into
add
mov
or
js
fwait
add
call
nop
mov
xlat
jnp
add
aaa
cmp
fcom
mov
xor
mov
add
es
addr16
dec
and
add
addr16
xchg
lcall
cld
rorb
cmp
dec
outsb
mov
and
lcall
add
mov
incb
fldt
push
mov
xchg
jne
mov
lcall
cmp
xor
outsb
sub
mov
pop
call
mov
movsl
sahf
js
push
ret
xlat
jp
xor
mov
sbb
cwtl
aaa
jbe
push
out
rorb
pop
mov
ret
lret
push
dec
sti
add
push
lods
inc
inc
sub
inc
cmp
xabort
xchg
add
fistpll
fisubrs
add
outsl
js
mov
les
add
out
or
hlt
add
inc
push
inc
sub
or
sbb
jle
je
into
cmp
cld
sbb
in
jo
lret
das
sub
popf
repz
or
outsl
mov
dec
aas
adc
cmp
scas
ret
stc
inc
xor
cmpsb
add
inc
scas
fldenv
jge
pop
push
gs
push
mov
and
and
pop
popa
notb
insl
add
sbb
push
xlat
daa
je
test
mov
inc
mov
jo
or
insb
pop
xor
lea
out
sub
fidivs
xchg
sahf
mov
add
mov
and
fsts
repz
adc
add
mov
in
cmpsb
les
jo
adc
leave
jae
xchg
movsb
lock
xchg
inc
add
mov
jne
sub
mov
adc
adcl
sahf
loope
xor
mov
sub
inc
and
mov
jg
movsb
sbb
adc
pop
jb
ret
lock
enter
scas
add
mov
insb
sbb
or
push
inc
arpl
aad
jecxz
adc
pop
int3
xchg
popf
mov
push
fidivrl
and
shll
leave
push
notb
xchg
push
push
or
and
pop
test
lds
cs
das
dec
cmp
imul
mov
insb
out
xchg
add
jns
xchg
or
mov
shll
mov
mov
fistl
das
out
arpl
addr16
sbb
cwtl
fsubl
push
jge
mov
mov
testb
add
xor
jg
gs
inc
pop
out
jb
jnp
or
xchg
out
cmp
shrb
ja
adc
jle
adc
add
clc
jnp
fdivl
inc
in
loope
andb
rclb
add
aam
popa
xchg
cmp
mov
into
inc
adc
sbb
jne
lcall
adc
jmp
andl
popa
adc
jmp
push
sub
imul
mov
icebp
loopne
test
mov
xchg
gs
sub
sub
jp
pop
sbb
xor
and
fs
xor
push
sti
loop
xor
add
aad
add
lea
dec
xor
mov
sahf
rorl
sub
out
out
jne
outsl
inc
jne
push
shll
lods
sub
icebp
push
mov
pmaddwd
and
xchg
pop
in
ret
sub
push
xchg
jb
imul
in
cld
dec
xlat
out
mov
aas
cmpsb
bound
clc
cmpsl
mov
movss
push
and
sahf
sti
xchg
data16
inc
cs
fildll
cwtl
dec
in
xor
outsb
ljmp
sub
enter
dec
adc
lock
mov
jb
adc
test
rolb
xchg
pop
mov
mov
jg
cwtl
or
cmpl
rorb
cmp
das
jge
hlt
push
lds
in
mov
fldcw
jle
xor
js
and
loop
cmp
out
loopne
push
cmp
cmc
push
xchg
cltd
lock
fidivrl
and
cmp
testl
je
push
mov
mov
movsl
jb
dec
cmp
aad
adc
das
fcomps
ldmxcsr
je
mov
and
jmp
lods
jecxz
pop
ficoms
and
mov
mov
dec
int
inc
in
inc
adc
leave
fsts
dec
add
lock
add
sub
mov
push
cmp
out
pop
add
xor
and
outsl
into
fndisi(8087
push
imul
sbb
stos
hlt
xorb
shrl
pop
mov
cltd
dec
xchg
push
pop
mov
loop
xchg
lods
inc
add
stc
xchg
cli
je
adc
mov
xchg
xchg
cmpsl
add
xorb
pop
inc
inc
iret
imul
ficoms
cwtl
add
in
addr16
jbe
fdivp
cwtl
jnp
test
mov
or
mov
cmp
jecxz
popa
mov
push
inc
mul
jle
mov
jnp
adc
push
adc
xchg
jg
lods
add
into
imul
bound
dec
bound
dec
mov
dec
pushf
insl
inc
pop
pop
lahf
push
int3
xchg
xchg
push
xchg
fistpll
std
ja
push
sub
pop
test
push
jle
rcr
int3
pop
fsubs
mov
sub
push
shr
xor
dec
ret
or
inc
leave
adc
int
cmp
add
pop
xchg
pop
aam
mov
dec
or
fwait
pop
cmp
jmp
jns
into
rorl
jbe
loop
mov
in
add
sbb
aaa
jge
cs
out
xlat
and
mov
cli
scas
fwait
mov
sbb
and
repz
push
pop
nop
jp
adc
and
lcall
rcrl
scas
inc
sbb
cmp
mov
call
addr16
push
or
imul
sbb
inc
xchg
gs
sbb
pop
jg
sub
stos
jbe
je
ljmp
stc
add
xor
mov
pop
pop
testb
xor
pop
pop
add
push
or
mov
dec
mov
imull
test
ss
testb
mov
and
add
xor
cmp
mov
or
mov
mov
fimuls
mov
jo
jp
mov
pushf
dec
dec
es
leave
shll
sub
cmp
pop
jp
test
add
push
shrb
stos
xchg
pop
mov
mov
mov
scas
pop
subb
jae
sbb
push
cmp
push
in
stos
inc
and
dec
push
mov
fsubr
jmp
pop
sbb
dec
xchg
test
and
jnp
push
pop
adc
lret
addr16
jge
mov
add
mov
sub
or
inc
outsb
insb
fxch
mov
adc
iret
stos
das
jmp
push
pop
xchg
sbb
imul
out
fistpl
js
nop
mov
inc
clc
xchg
aaa
cmp
push
sub
imul
xlat
fs
cld
xchg
movsl
mov
sbb
cmp
fildll
adc
andb
mov
jp
inc
add
sti
in
adc
mov
in
je
aas
and
in
xor
mov
and
out
xor
pusha
jo
adc
sub
jg
jns
std
mov
and
stos
xchg
fsubrs
push
xchg
idiv
por
jge
mov
cld
pop
dec
rcrb
aas
int
sti
fistps
andb
out
xchg
xchg
les
and
mov
sbb
sbb
sbb
das
pop
pop
iret
sub
clc
nop
mov
test
mov
hlt
fs
sub
fstps
dec
mov
mov
bound
adc
jbe
mov
repnz
loop
lret
mov
pop
dec
xor
or
add
dec
pushf
ret
clc
ret
cmpb
mov
xor
xchg
daa
jl
loopne
sbb
mov
sbb
nop
lahf
xchg
dec
fwait
xchg
test
outsl
xor
mov
mov
fmulp
pop
in
into
std
nop
cmc
in
mov
rolb
in
push
loope
cmpsb
insl
sbb
mov
mov
mov
insl
xor
mov
lcall
mov
jl
adc
rorl
popf
jge
jno
or
and
mov
push
es
xlat
sub
sbb
push
notb
sbb
or
imul
stos
cmp
insb
shrb
int3
mov
in
je
pop
push
inc
jb
sub
push
mov
popa
cltd
push
xchg
push
cmp
sub
jmp
mov
pushf
mov
ja
xlat
aam
xchg
add
cmp
xchg
xchg
push
mov
ret
xor
neg
gs
jae
dec
dec
loope
mov
mov
ret
cwtl
or
sbbb
xchg
stc
or
inc
mov
pop
arpl
mov
fisttps
mov
aaa
mov
inc
data16
incb
jp
movsb
mov
fstpt
mov
pop
popa
mov
cmpsl
and
cmp
xchg
rcl
dec
fiaddl
stos
dec
and
pop
adc
mov
push
pusha
push
push
ja
sbb
dec
adc
adc
adc
mov
inc
pop
je
cmpsl
jo
jmp
pushf
repnz
or
mov
or
xor
jg
packsswb
mov
adc
add
orb
mov
not
mov
cmc
push
fwait
lret
arpl
push
or
fcoml
add
jmp
imul
mov
and
fs
mov
xor
sbb
or
testb
add
repnz
xchg
leave
push
mov
mov
in
das
sub
pop
cli
shr
shl
jmp
mov
pushf
cs
sub
inc
out
sbb
pop
lret
pop
aam
addr16
nop
movsl
pop
sbb
jecxz
mov
mov
xor
ss
lods
pop
movsb
imulb
ss
enter
sbb
mov
pop
push
mov
dec
pop
ja
scas
add
repnz
jnp
fldenv
or
inc
jp
or
call
mov
pop
int
divl
mov
jl
or
jae
cwtl
jp
push
inc
xor
imull
mov
mov
in
xchg
cltd
pop
in
sahf
fcoms
js
push
das
lcall
cmp
inc
cmp
fsubl
sbb
inc
dec
push
jg
scas
cmpsl
mov
xor
pop
adc
jp
or
sub
pop
popa
inc
sahf
pop
into
test
lds
cmc
xor
lock
sub
shrl
mov
jns
push
out
movsb
push
jge
jmp
cmpsb
std
mov
fdivs
xchg
fisttpll
sbb
clc
inc
inc
or
adc
mov
imul
mov
xor
add
test
mov
loop
and
ss
xchg
test
movsl
push
sahf
pop
or
add
fdivrs
jp
mov
and
mov
jmp
mov
loopne
adc
imul
popa
test
mov
and
jecxz
push
mov
movsb
out
cmpsb
clc
sarl
fld
xor
mov
sub
jne
push
lcall
cld
add
or
fs
fmuls
push
pop
call
xlat
les
adc
xor
ret
push
mov
in
mov
dec
iret
mov
scas
sbb
mov
icebp
pop
adc
xlat
mov
lret
jno
insl
pop
nop
adc
pop
jae
sub
std
js
insl
imul
inc
imul
mov
rcll
sub
jg
nop
mov
shr
cmpsl
xchg
mov
add
fsubrs
inc
pushf
daa
and
mov
inc
out
outsb
jnp
je
popf
mov
push
xchg
shrl
rcl
mov
addr16
shlb
pop
cmp
stos
xchg
mov
adc
fists
mov
out
stc
jbe
cld
pop
shrb
stos
push
sbb
mov
lds
popf
add
enter
add
enter
jp
pop
push
and
jnp
popa
pusha
ret
lret
sarl
mov
cwtl
out
clc
mov
cmpl
xor
xor
xchg
xchg
cmpsl
fneni(8087
hlt
test
loop
mov
dec
jb
lret
add
outsl
sbb
test
aad
out
or
add
neg
mov
xchg
cmp
inc
out
dec
lods
sarl
or
bnd
pop
mov
hlt
push
testb
fdivl
dec
mov
insl
mov
fwait
mov
add
das
and
sbb
add
idivb
xchg
add
cld
popf
mov
dec
fisttpll
xchg
das
rolb
push
lahf
ja
dec
mov
push
lods
xchg
adc
stc
into
jnp
jno
pop
daa
sbb
and
add
jbe
orl
cs
ret
push
dec
adc
push
add
add
adc
xchg
shll
adc
xchg
and
arpl
adc
cli
push
pop
add
and
mov
ret
add
sub
sti
mov
cwtl
mov
pop
cld
js
insb
xchg
daa
sbb
mov
pop
incb
mov
add
xchg
ret
icebp
add
test
stc
or
adc
movsl
mov
loopne
data16
sbb
and
out
dec
jmp
xchg
adc
in
mov
cmp
and
cmpl
out
pop
push
xchg
sbb
popf
stos
lea
adc
rcl
jmp
mov
mov
out
jle
pop
outsl
jb
push
push
mov
and
mov
imul
cmp
mov
mov
mov
adc
insl
into
cmp
mov
test
jmp
in
jge
cld
stos
les
sbb
filds
imul
fldt
mov
mov
adc
ret
jecxz
push
jmp
movsb
sub
movsb
mov
lahf
aaa
lret
mov
and
stos
mov
or
movsl
fcomi
or
adc
mov
dec
scas
sub
enter
or
subb
mov
mov
scas
push
ficoms
or
cmp
push
test
mov
inc
dec
int
shl
xor
cltd
sti
add
cmp
mov
sahf
add
xchg
repz
dec
jmp
sbb
loope
cltd
xchg
or
lret
mov
pop
loopne
mov
ficoml
jnp
mov
xchg
jnp
imul
in
or
fdivp
aas
jp
mov
xchg
mov
push
push
inc
ret
pusha
outsb
mov
je
xlat
scas
fwait
lods
or
in
repz
loope
dec
sbb
sub
ss
xlat
and
cmp
icebp
rol
and
ss
cmc
mov
jp
testb
les
dec
popa
sbb
cmp
hlt
jbe
inc
psrlq
lods
sbb
das
inc
push
repnz
cmp
sarl
pop
cmp
fisttpl
pop
xchg
xchg
fdivrl
cmp
pop
js
ret
xlat
xchg
add
test
sbb
fucom
mov
sbb
aad
mov
dec
frstor
adc
cltd
xchg
dec
sub
mov
in
cmc
test
or
cmpsl
enter
inc
repz
push
push
btc
pop
popl
fs
mov
inc
push
and
clc
les
add
push
repz
add
push
jns
push
sub
cmp
and
in
mov
ss
aad
add
filds
ljmp
sti
add
fbstp
adc
test
cmpsb
rorl
sahf
mov
std
xor
push
shrl
movsb
xor
pop
or
cmp
ret
imul
and
or
inc
mov
mov
mov
sarb
jnp
imul
xlat
pop
adc
fs
sbb
lea
dec
lcall
lahf
cli
add
push
pop
ja
pop
popa
pop
mov
adc
enter
fs
ja
fcoml
and
stos
adc
push
xchg
leave
xchg
dec
jo
stos
push
dec
rcrb
inc
iret
jne
fmuls
pop
in
out
ljmp
iret
dec
dec
xchg
adc
inc
icebp
test
jg
adc
pop
fistl
jo
jl
pop
and
inc
aad
pop
sbb
push
xchg
xchg
movsl
out
ret
out
jp
inc
or
cmpsl
xchg
shll
ljmp
hlt
jp
jo
setb
sbb
cmpsb
mov
and
mov
jae
pop
es
adc
test
mov
jne
arpl
pop
dec
les
sti
mov
lret
aaa
pop
cmp
or
dec
sub
leave
sbb
lret
inc
ljmp
rolb
into
jmp
and
mov
shr
adc
jge
dec
push
sbb
push
mov
mov
mov
popw
int3
outsb
dec
add
popf
mov
mov
jge
test
icebp
pop
out
fisttpll
dec
insl
push
jle
bound
outsl
jp
aas
fmull
or
jg
lret
sub
sub
inc
adc
out
jb
andb
fstl
cmc
mov
mov
xor
dec
xchg
dec
js
repz
js
jns
push
out
fdivs
cmp
idivb
push
jbe
je
sbb
rcll
mov
repnz
sarl
pop
or
add
and
dec
bound
xchg
mov
mov
dec
daa
mov
movsl
xchg
pop
push
sti
xor
pushf
sub
mov
cmp
call
adc
xchg
or
icebp
inc
sub
or
imul
add
ljmp
sar
mov
add
sub
sbb
or
sbb
cmp
pop
cld
push
popf
out
pop
pop
es
adc
mov
sub
pushf
insb
xchg
stos
nop
pop
fwait
test
xchg
mov
and
sbb
fdivp
pop
cmpsl
insl
jns
pop
or
jbe
ja
and
scas
push
mov
xchg
push
push
jns
int
loop
lahf
dec
xchg
push
fidivrs
repz
xchg
pop
add
sub
xor
imull
test
popa
fildll
mov
adc
pop
ss
sahf
xor
mov
push
xchg
push
aad
dec
lahf
and
cmp
push
mov
inc
mov
mov
jg
jne
arpl
fwait
cmp
xor
dec
inc
xor
jg
xor
mov
or
jo
int3
enter
xchg
rcr
rolb
aaa
cli
and
cmp
xchg
xor
outsb
xchg
sub
testb
imul
or
push
cmp
xchg
popa
mov
mov
dec
addr16
and
jge
lods
pop
jl
dec
push
repnz
xor
jl
inc
insl
aad
repz
sub
xchg
pop
out
pop
cmp
and
or
ret
pop
icebp
mov
roll
inc
idivl
mov
and
popf
add
jmp
xchg
cmc
mov
flds
lods
cmp
pop
xor
std
mov
jno
xor
lods
pop
popf
pop
xor
cwtl
insb
ret
cs
mov
ret
sub
lock
fmuls
mov
or
arpl
adc
cli
push
pop
push
mov
in
les
jne
mov
inc
cmp
lods
int
outsl
push
cmpl
aas
out
jp
aaa
xor
xor
fnstsw
in
inc
pushf
inc
es
in
mov
les
lock
inc
or
in
popa
dec
dec
and
jle
aad
sbb
adc
sbb
cmp
pushf
add
sub
dec
pop
push
jmp
insl
stos
mov
repz
xlat
dec
pushf
js
es
sub
repnz
loopne
mov
xor
fdivs
push
out
loop
cmp
inc
or
push
lds
mov
inc
sahf
lock
xchg
mov
dec
cmc
mov
mov
push
adcl
dec
mov
je
pop
pop
or
orl
sbb
lods
push
cwtl
xlat
in
jmp
jl
testb
ja
imul
scas
pop
add
cmp
stos
adc
repnz
das
ja
aad
cmp
pop
int3
cmp
sub
fnstcw
adc
push
dec
dec
daa
jp
push
lods
xor
jbe
cltd
dec
pop
outsb
cli
ss
push
test
rorb
sub
jns
push
dec
fcmovnb
loopne
dec
add
mov
mov
sarl
les
out
mov
popf
inc
repnz
das
aam
xor
push
add
mov
add
stos
shrl
mov
aaa
dec
ffreep
loop
xor
imul
mov
sub
xchg
outsb
push
dec
add
adc
ja
ret
add
lock
es
insl
push
sub
push
pop
xchg
xor
adc
js
mov
dec
lahf
lcall
rolb
pop
es
or
xor
popa
das
pop
mov
leave
inc
add
adc
push
mov
arpl
aaa
test
push
xchg
xor
dec
mov
jb
sbbl
xchg
dec
push
mov
and
push
xor
mov
shlb
adc
push
lcall
loope
jb
mov
in
sub
mov
sbb
push
pop
mov
mov
nop
negb
aaa
in
sub
rclb
jge
push
inc
and
es
adc
add
pop
outsb
mov
lds
mov
das
cmp
lock
test
test
cmpsl
mov
aad
shrb
divl
and
adc
xor
xlat
xor
imul
adc
lahf
cmp
test
xchg
int3
dec
lret
stc
mov
ja
xchg
in
ret
jg
push
xchg
inc
hlt
jbe
add
adc
lock
cmpsb
push
lea
mov
dec
cltd
mov
into
sub
rclb
pop
addb
dec
or
and
outsb
outsb
add
xor
jecxz
jecxz
jp
push
push
adc
int3
lods
stos
push
sahf
inc
add
push
lret
cld
add
std
mov
push
cmp
sbb
mov
jle
int
push
mov
dec
mov
lcall
mov
dec
fisttpll
cmp
cltd
add
test
es
xchg
lret
outsb
shll
push
shrl
mov
mov
daa
pop
rcr
mov
xchg
shll
ds
data16
arpl
or
pop
push
sahf
sub
inc
dec
iret
pop
inc
and
mov
fstl
leave
arpl
adc
dec
pop
sbb
or
iret
sbb
inc
adc
mov
mov
xorb
inc
jns
fidivs
hlt
xor
movq
xor
pop
push
ds
xlat
das
subb
insl
dec
int3
mov
jge
lret
jae
cmp
test
dec
dec
push
xchg
mov
mov
fildl
scas
mov
mov
std
ss
push
mov
dec
sahf
cmpb
lret
int
shr
dec
push
jno
bound
pushf
jg
jecxz
sbb
adcb
jno
sbb
fsts
pop
lods
and
pop
out
pop
insl
movsb
mov
and
mov
lock
dec
imul
or
mov
pop
cmpb
into
repz
fucom
push
inc
lcall
pop
push
or
enter
sbb
cmp
insl
inc
subb
jb
inc
rcrb
test
js
cltd
and
mov
jmp
inc
test
sbb
nop
inc
add
out
sarb
add
mov
lods
xor
inc
daa
push
xchg
stos
dec
jmp
mov
mov
call
outsl
dec
jno
mov
cwtl
add
mov
and
jecxz
ljmp
fdivrs
sbb
cmp
cmp
scas
cmp
ret
xor
jns
add
lahf
cmp
out
in
rolb
jecxz
dec
push
cmc
popa
fldl
add
pop
mov
mov
jae
mov
mov
jnp
into
sti
aam
push
repnz
decb
ficomps
sub
mov
sbb
push
xchg
ja
push
sbb
pop
mov
loope
cmpsb
xor
jne
cmpsl
popf
rcr
cltd
adc
xchg
jbe
cltd
add
add
mov
orb
bound
shl
cwtl
xlat
xorb
in
fnop
test
fiadds
data16
loop
addb
jb
mov
pop
repz
sahf
test
mov
nop
lock
jns,pt
das
pusha
cmp
dec
std
jb
mov
cld
aas
lods
test
addl
mov
cltd
scas
xor
ret
mov
insl
arpl
data16
cmp
mov
lret
sbb
pop
sub
test
fwait
xchg
out
sub
addl
jg
shl
sarl
shl
add
xchg
mov
push
cmp
ja
ret
aaa
sub
push
shl
inc
mov
mov
outsl
xor
subb
aam
out
ja
xor
add
mov
xchg
push
dec
std
gs
add
cmp
add
push
xor
dec
or
push
sar
inc
lock
mov
mov
mov
jbe
bnd
or
outsl
mov
clc
mov
push
mov
adc
aam
add
pushf
ljmp
ffreep
xchg
adc
pop
xchg
cmp
jge,pn
jmp
add
movl
mov
mov
rcrb
xor
adc
mov
daa
lret
test
push
lahf
in
cs
outsl
pop
fwait
int3
shrb
cmp
pop
loopne
jnp
ljmp
out
jns
jne
xchg
adc
jg
fnstsw
mov
int
dec
push
xchg
js
enter
add
mov
out
and
mov
inc
mov
sbb
inc
out
scas
mov
subl
push
xor
xor
sbb
loope
cld
add
cli
pop
push
sbb
jmp
xor
sbb
xchg
cmc
lea
jle
in
lods
in
cmp
in
push
js
fxch
push
jnp
cmp
leave
cwtl
sub
add
mov
test
pop
and
xor
xor
inc
negb
nop
or
dec
int3
push
in
into
flds
cmp
decb
pop
cmp
stos
or
pop
xor
push
push
xchg
aad
out
out
in
imul
imul
js
inc
in
inc
xor
cmpsl
scas
xchg
adc
imul
and
leave
cmpsl
jg
cli
pop
arpl
pushf
addb
bound
nop
cltd
lcall
dec
mov
push
dec
xorb
push
stos
or
outsb
aam
or
cmp
sub
imull
rcr
xor
push
xchg
push
ljmp
into
xchg
int3
sub
rol
sbb
pop
shl
xchg
lds
or
pop
inc
inc
fmul
out
sbb
add
aaa
add
add
pop
inc
ja
inc
pop
adc
adc
rolb
das
lcall
insl
or
dec
xor
cmpsb
and
call
push
dec
mov
jo
cwtl
jp
subb
dec
je
jmp
mov
xor
xchg
mov
popa
fsts
js
mov
adc
sbb
push
fisttpl
aaa
loope
das
test
cmp
push
inc
je
adc
hlt
xchg
mov
pop
mov
mov
imul
add
in
push
or
or
mov
test
inc
push
dec
inc
mov
dec
outsl
out
xchg
adc
cmpl
stos
fsubl
test
cli
fnstcw
fwait
jae
jl
or
jg
add
sub
xchg
sbb
outsb
cmpsl
pusha
xchg
pop
test
or
adc
loop
mov
clc
mov
mov
or
movsl
cmp
jp
xor
test
rolb
mov
pop
push
sub
sbb
pop
push
jmp
lret
xchg
les
insl
loop
pop
stos
jg
int3
addl
and
push
pop
fiaddl
insl
fcmovnb
lock
movsl
lret
push
sub
xchg
rcr
repz
mov
cmc
xor
mov
and
and
enter
es
dec
ss
shl
inc
scas
mov
jnp
jge
pop
es
popa
or
add
sbb
fs
pop
sti
movsl
and
decb
pop
movsl
fidivrs
nop
shll
adc
inc
add
cmp
push
in
mov
mov
jp
sbb
xor
lahf
pop
push
jecxz
cmpl
and
dec
inc
xchg
mov
pop
repnz
add
cmp
test
imul
fistl
or
in
outsl
ss
sbb
js
adc
jl
adc
inc
int
sar
push
pop
lea
shll
pop
mov
push
adc
ds
int3
mov
loopne
jg
and
mov
hlt
xchg
sub
mov
adc
and
push
or
mov
mov
dec
mov
hlt
mov
xor
xchg
cmpsl
push
xchg
jle
and
addr16
cmc
jne
popa
add
mov
leave
popa
xor
pcmpeqb
sub
mov
stos
dec
mov
test
int3
das
lds
sub
mov
jp
lret
das
sbb
xchg
inc
imulb
fisubl
in
cltd
and
mov
rclb
xchg
mov
mov
dec
adc
into
sti
xor
or
and
stos
and
out
pushf
sub
pop
cmpb
jecxz
jae
in
popf
pop
sbb
inc
sbb
in
push
cmp
fnstsw
or
cmpsl
add
aam
testl
cmpsb
xchg
iret
adc
dec
inc
push
xchg
in
pop
ret
adc
xchg
ja
xchg
mov
and
jno
shl
cmp
push
loope
mov
cmp
cmp
fucom
xor
or
adc
aaa
scas
dec
or
repz
jmp
sbb
add
arpl
dec
dec
jo
mov
pusha
mov
or
jmp
cmpb
inc
sub
sahf
sub
ja
into
cmp
sar
insb
add
add
mov
rorb
cmpsl
int
and
mov
int3
and
push
jle
sub
mov
push
mov
mov
adc
push
rcrb
lods
jmp
push
pop
jp
mov
and
out
push
or
pop
xchg
sbb
xchg
push
inc
cmp
cmp
mov
out
fsts
jae
mulb
mov
sub
dec
cs
mov
ljmp
mov
sub
xchg
pushf
nop
sbb
inc
lds
jmp
push
mov
rcrb
jecxz
mov
pushf
movsb
push
jl
loop
adc
xchg
sbb
into
andl
pushf
xchg
mov
inc
xchg
inc
dec
xchg
cli
and
push
ljmp
mov
xor
imul
add
je
aaa
mov
mov
sbb
or
pusha
nop
imul
mov
fcomp
push
out
stc
push
movsl
push
push
add
inc
dec
xor
in
test
push
sbb
scas
push
loop
testl
shlb
sti
nop
iret
es
std
push
xchg
aaa
test
cmp
inc
dec
xchg
lods
repz
dec
les
xor
sub
iret
andb
negl
add
test
fs
gs
stos
loop
pop
jae
movsl
mov
jmp
outsb
mov
add
or
fwait
sbb
push
lret
or
arpl
test
xchg
pop
scas
aas
xor
cltd
pop
out
fidivrl
insb
popf
jmp
data16
mov
jmp
mov
sahf
dec
xchg
in
iret
add
dec
notb
fcmovbe
je
ss
and
add
pop
pop
xor
xchg
out
or
xchg
jl
stc
xchg
mov
adc
rorb
fstl
cmp
mov
add
stc
xor
shlb
push
fidivrl
inc
js
ret
ret
pop
sub
add
mov
jnp
inc
xchg
pop
adc
push
mov
or
adc
jne
sub
pop
cld
adc
aas
jo
mov
mov
lods
in
stos
jb
jle
xchg
popa
or
nop
mov
push
out
popf
sbb
push
cmc
imul
fmulp
mov
mov
movl
daa
dec
lods
js
rcr
xchg
add
fistpl
mov
imul
cwtl
push
sub
addr16
and
dec
stos
aad
push
hlt
ljmp
inc
xchg
out
mov
fimull
xor
pop
stc
adc
push
adc
adc
movsb
lock
cwtl
mov
rorl
cmc
lret
neg
xor
sahf
mov
or
lret
inc
lock
in
or
lea
push
push
push
dec
jae
mov
pop
add
aas
jb
mov
jg
ret
repnz
mov
jp
aam
hlt
jb
jae
repz
jb
jb
mov
nop
push
or
ss
jne
sub
or
adc
sahf
jns
ds
idivb
mov
test
jg
inc
subl
jle
fsubl
in
pusha
lds
leave
sti
mov
ss
stos
xchg
imul
imul
cwtl
out
cmpsb
push
mov
or
fwait
mov
loopne
adc
xor
fstpt
imul
jle
ret
push
dec
lret
sbb
shll
push
xor
test
jno
xor
add
add
jmp
jno
dec
icebp
push
mov
cwtl
stos
jno
inc
jb
or
jecxz
das
add
pop
lock
adc
insl
out
adc
or
div
rep
adc
jb
sub
loopne
mov
mov
popa
sbb
inc
out
jp
dec
les
cli
aas
outsl
or
ja
je
sub
mov
jmp
int
icebp
pushf
fildll
sbb
nop
and
mov
fs
push
out
mov
scas
mov
mov
inc
xchg
loop
push
leave
cmpsb
shrb
rolb
into
jnp
pop
aad
leave
ret
not
pop
lock
pop
mov
inc
stos
cmp
lock
xchg
xchg
xor
loopne
jg
pop
mov
mov
into
popf
xor
cmpsl
popf
aad
aad
inc
jne
cmp
out
dec
imul
jp
dec
pop
pop
add
repz
sar
xlat
cmp
rcll
mov
adc
out
mov
popa
ss
call
test
sbb
sub
jmp
loop
cmpsb
and
xlat
jp
pop
mov
in
sarl
nop
cmp
sbb
loop
das
gs
add
pushf
jne
xchg
mov
cmp
ret
or
xchg
jb
dec
xchg
call
jge
sbb
sbbb
mov
jmp
cwtl
stos
aam
pusha
mov
fsubs
bound
or
and
sub
jge
dec
mov
movsb
mov
stc
ljmp
frstor
adc
xchg
cmpsb
pop
bound
push
cli
aaa
jns
push
sbb
adc
cmp
je
xor
mov
js
jae
or
cmp
jb
addr16
les
dec
xor
xor
add
pop
imulb
and
lea
movsl
mov
pop
ret
mov
jl
scas
dec
shll
mov
jb
adcb
stc
imul
sub
push
repz
leave
rclb
push
fcomp
mov
aaa
cmp
adc
adc
leave
mov
push
sub
jg,pt
stos
push
pop
xor
insb
fidivrl
cmc
jne
lret
data16
roll
or
jae
xchg
push
pop
adc
pop
mov
aad
dec
cwtl
fisubs
cmpsb
cmp
mov
ds
jl
fiaddl
push
mov
adc
js
mov
enter
shrb
or
push
lahf
mov
into
pop
pop
aas
shll
mov
jae
sub
mov
ja
and
outsb
or
adc
scas
jnp
xchg
shlb
jmp
addr16
xchg
stc
shlb
mov
or
inc
in
sbb
rcll
mov
jmp
fbld
je
testl
jle
loope
enter
push
sub
icebp
loope
sub
mov
fdivrs
sub
ds
push
and
ss
test
pop
lds
xchg
mov
mov
mov
andl
xor
pop
out
inc
mov
add
and
adc
fdivrs
add
xchg
xchg
adc
mov
sub
hlt
sub
shlb
and
or
int
arpl
stos
xor
xor
cmpsb
or
pushf
ljmp
fsts
lods
fldt
xchg
mov
lods
ss
push
mov
mov
sti
mov
mov
mov
xchg
sub
mov
ds
dec
mov
sbb
shll
or
mov
fidivrs
outsb
repnz
sub
vfnmsub231pd
clc
xchg
test
aam
nop
lock
aas
loope
push
mov
cld
out
ret
fcoms
push
popa
mov
pop
gs
jp
cld
push
loop
jnp
inc
rcll
sbb
popa
mov
fstps
pop
mov
sub
cld
jmp
xchg
dec
test
jo
inc
stos
fiadds
jae
or
pushl
sub
jae
hlt
in
les
sub
out
pop
lret
mov
ja
add
mov
push
or
shrb
les
push
pop
and
sbb
mov
outsb
adc
cltd
add
shrb
dec
xchg
mov
cmp
and
xchg
jle
push
dec
jmp
rolb
xchg
repnz
insb
cs
and
in
jecxz
push
and
mov
mov
cmp
outsl
sbb
rolb
xchg
jecxz
mov
adc
dec
loope
lea
jmp
lea
and
in
rclb
dec
cmp
push
icebp
add
stos
inc
cwtl
sahf
ret
jge
mov
xor
subl
and
mov
xchg
pop
jno
adc
in
shlb
mov
add
mov
rclb
dec
iret
sub
aaa
pusha
pusha
std
into
cwtl
mov
rcl
add
mov
inc
mov
jge
add
push
aaa
shll
cli
test
push
sbb
inc
xchg
xlat
cwtl
int
int
mov
data16
repz
sbb
loopne
js
test
fbld
sar
xchg
lcall
lock
mov
adc
mov
inc
addl
jbe
xor
fsubr
fildl
pop
inc
jno
jnp
mov
popa
test
pushf
in
imull
pop
fs
iret
jge
cmp
mov
jp
mov
mov
jbe
pop
repnz
bound
add
and
inc
pusha
or
pop
and
stc
outsl
push
ss
icebp
in
ljmp
and
pop
xor
jecxz
push
clc
movsl
mov
stc
cs
jne
inc
pop
cmpsb
inc
xor
push
pop
movsl
xchg
sti
fbld
add
push
mov
cmp
pop
jb
jns
fidivs
cmp
adc
cs
leave
mov
mov
and
jg
cld
data16
mov
mov
hlt
fdivrp
leave
lahf
imul
mov
dec
push
popa
jmp
insl
ja
xor
inc
bound
add
push
dec
fs
push
mov
fwait
ljmp
fiadds
dec
mov
xor
mov
scas
mov
add
xchg
cld
addb
or
mov
mov
stos
jecxz
adc
aam
fadds
test
mov
adc
data16
xor
sbb
xchg
mov
nop
lret
xor
outsb
inc
xor
push
xchg
std
neg
ds
pop
xor
sub
dec
dec
rorb
jg
test
xchg
and
mov
dec
push
lds
aaa
inc
xchg
out
out
add
push
mov
stc
out
mov
out
add
xchg
mov
sbb
fwait
vpshlq
mov
out
dec
repz
xchg
lret
xchg
arpl
shrl
fcmovb
in
and
mov
adc
lahf
mov
add
xchg
mov
sbb
inc
les
mov
mov
dec
lds
push
mov
ja
inc
leave
or
sti
push
push
mov
jmp
jge
lea
inc
cli
mov
fisttpll
jnp
mov
adc
ret
push
push
in
sub
leave
fwait
jae
aaa
clc
stos
cmp
test
icebp
push
loop
into
outsb
pop
or
jno
testb
rolb
xchg
sub
insb
scas
inc
leave
dec
in
lock
xlat
lds
lods
xchg
fbstp
fildll
adc
in
xchg
insl
mov
adc
adc
cmc
in
push
sbb
movsb
iret
inc
outsb
sub
inc
cmp
sub
rolb
int3
movsl
negl
or
xor
xchg
push
add
or
shr
or
pop
jns
cli
leave
sbb
out
mov
pop
push
adc
mov
jl
inc
lock
out
popf
fwait
or
mov
pop
lods
test
ds
lret
add
outsl
not
scas
xlat
or
clc
or
jno
daa
addr16
mov
pop
cld
in
mov
jge
mov
mov
mov
stos
aas
insb
enter
lock
jg
and
mov
scas
cmp
int
push
lods
aaa
inc
cmp
xor
shll
push
cmpb
pushf
sbb
enter
insb
or
psubsb
jp
xchg
aad
jle
jl
pushf
pop
sub
nop
push
mov
inc
les
popf
mov
dec
into
add
loopne
cld
lds
scas
or
ss
outsb
in
or
pop
push
push
jmp
aam
stos
adc
test
aam
outsb
mov
add
jns
and
je
out
aad
aam
test
test
divl
test
and
out
inc
push
mov
mov
push
in
and
push
scas
outsb
and
pusha
out
pop
xchg
mov
or
add
jle
xor
std
xor
pushf
pop
mov
lret
add
sub
mov
test
jno
push
mov
ret
jbe
sub
movsb
and
adc
mov
mov
mov
jnp
notb
pop
mov
xchg
mov
pop
incl
lds
lock
cmpsb
cmpsb
pushf
leave
ret
pop
pusha
mulb
out
pop
xor
lret
scas
test
push
mov
inc
xor
int
jl
rorb
inc
scas
push
dec
xor
lds
mov
and
cmp
push
jb
fnstcw
dec
ss
pop
nop
push
jo
test
lods
and
int
ficompl
mov
ret
push
adc
pop
cmp
ror
inc
push
loope
push
sbbb
sub
insb
adc
inc
mov
in
aaa
adc
out
pop
imul
aaa
js
push
xchg
cmp
mov
adc
push
pop
fwait
in
lahf
adc
roll
mov
mov
sbb
arpl
scas
push
add
iret
fst
aaa
xchg
push
or
or
mov
jno
popf
das
ds
jb
add
arpl
stos
add
jae
mov
int
es
inc
repnz
xor
jg
ja
lret
cmc
push
test
push
dec
mov
pop
mov
je
and
xor
notl
cmp
mov
das
push
cmp
shlb
inc
cmp
sarb
cmp
cltd
imulb
cmp
mov
loopne
sub
fs
inc
cmp
cmpl
movsl
daa
imul
pop
jl
pop
mov
jecxz
fmuls
ja
jo
in
or
data16
mov
jno
sub
notl
inc
jae
mov
push
xor
pop
pop
pop
push
and
push
jnp
rcrl
arpl
jmp
mov
and
inc
adc
mov
pop
out
insb
jno
inc
pop
fs
push
dec
ljmp
push
push
dec
dec
pop
jnp
inc
mov
mov
adcl
addr16
adc
int3
adc
ja
jle
shr
cmp
sub
mov
pop
cmp
clc
lods
into
das
xor
sub
dec
jne
push
cwtl
mov
mov
stos
icebp
ror
popf
lea
stc
shr
insb
cmc
ljmp
hlt
push
dec
add
mov
and
or
add
daa
push
dec
loope
adc
jbe
sbb
dec
push
enter
dec
push
insb
outsl
cmp
dec
ds
jmp
ret
loope
pop
cmpsb
adc
sub
mov
fs
adc
aad
and
and
mov
mov
push
add
add
add
mov
adc
dec
popf
jae
push
idiv
mov
hlt
pusha
sbb
sbb
out
jecxz
pusha
pop
pop
add
xlat
dec
push
lods
push
xor
cmp
andb
out
rolb
jnp
adc
inc
mov
push
sbb
xchg
arpl
out
pop
call
dec
or
aam
mov
and
cltd
ja
dec
std
enter
nop
in
pop
insb
fdivs
ljmp
push
pusha
roll
arpl
cltd
mov
push
jbe
pop
aas
jae
dec
cmp
call
pop
xor
into
sub
xor
shrb
enter
mull
lea
imul
das
fldl
cmpsb
push
push
repnz
mov
cmovae
call
stos
xlat
cmp
sub
outsl
lahf
sbb
ljmp
adc
cmp
adc
cmc
xchg
cwtl
push
xchg
jae
jl
dec
dec
fsubrs
adc
incl
mov
test
push
pusha
js
test
lock
mov
fmuls
dec
test
add
fnsave
lret
jmp
not
loop
xor
xlat
cmp
sub
mov
mov
popf
fisttpl
push
hlt
xchg
lock
imul
jle
ficoms
addr16
push
clc
dec
aas
dec
js
cmpsl
inc
aas
lock
int3
aam
lds
movsb
int3
bound
jp
repnz
xor
push
add
xchg
mov
out
inc
inc
mov
pop
sbb
cmp
ja
adc
and
cmp
out
push
add
dec
imul
cmc
andl
pop
pushf
lock
testl
dec
mov
pop
aam
sti
jl
xor
add
test
push
adc
test
ja
and
in
dec
nop
or
dec
pop
dec
mov
push
shlb
jge
jmp
fcompl
test
jge
mov
xchg
std
stos
sar
aam
mov
out
adcb
push
test
jno
push
cld
mov
es
push
shl
loope
pusha
adc
cmp
jg
gs
aam
inc
loop
test
cmp
add
jbe
sub
loopne
enter
pusha
push
cmp
pusha
jne
and
cli
cmp
pop
mov
mov
jnp
repz
shlb
test
push
fildl
jns
jno
jmp
xchg
xchg
jne
or
movsb
bound
pop
xchg
or
mov
pop
dec
popf
cmp
loopne
jle
fisubrs
cmp
xchg
adc
clc
lcall
pop
sbb
iret
adc
out
xchg
negl
les
push
mov
jae
push
mov
jne
push
or
pop
add
or
pop
popf
fbstp
cld
xchg
lret
iret
cmpl
dec
xor
push
dec
jno
jbe
jnp
std
fsubs
add
dec
add
loope
push
scas
cmp
add
ret
cli
cmpsl
dec
or
push
sub
pop
aad
out
dec
pop
sub
inc
mov
fsts
mov
leave
stos
jecxz
cmc
push
mov
xlat
adc
cmp
bound
aaa
and
add
aaa
xor
insl
push
dec
sbb
xor
sub
inc
jno
xor
out
pop
fidivrs
inc
xchg
ret
cmp
fistl
ret
in
or
jo
xor
dec
imul
mov
fstps
punpcklwd
mov
outsb
push
out
out
inc
aas
pop
push
push
sub
mov
adc
jecxz
lret
jecxz
dec
in
xor
pop
sbb
popf
pop
dec
test
mov
jmp
ror
lds
add
mov
mov
pop
mov
lods
add
stos
fwait
movb
stc
hlt
dec
adc
hlt
das
jae
and
inc
std
push
jo
mov
inc
mov
stc
xchg
xor
mov
aaa
mov
jb
mov
push
mov
fmul
lods
push
mov
cmp
inc
shr
mov
jnp
aas
lret
and
jg
shr
sbbl
sbb
leave
jnp
out
xchg
fiaddl
stos
mov
pop
faddl
add
cltd
or
in
shlb
xor
aam
jp
pop
out
push
push
jo
cwtl
pop
sub
dec
imul
popf
sbb
jae
xor
ljmp
mov
fst
inc
fiaddl
mov
dec
daa
ja
xor
inc
pop
adc
xor
scas
push
mov
imul
aad
aad
add
xchg
sub
and
pop
add
push
adc
ret
push
mov
ficomps
subl
add
inc
xchg
andb
push
xchg
jecxz
mov
addr16
pop
sbb
jmp
pop
pop
or
xor
adc
pushw
push
sbb
cmp
push
jmp
push
ret
jnp
orb
inc
imul
xor
mov
add
dec
and
ja
xor
add
sbb
int3
add
push
cmpsb
jp
mov
hlt
test
xchg
je
outsl
cmpsb
xor
push
push
je
sbb
mov
imul
push
insb
test
xor
jmp
cmpsb
out
inc
dec
xor
cli
dec
mov
push
xchg
aam
xlat
nop
push
inc
cmc
sarl
cmp
pop
insb
dec
inc
out
dec
xchg
sub
iret
xchg
js
mov
sub
or
punpcklwd
out
inc
inc
out
sbb
adc
out
and
out
aad
popf
pushf
adc
pop
lret
dec
jns
add
loope
dec
stos
andb
add
sti
pop
test
sub
add
fisttpl
add
jb
enter
fwait
stos
mov
cwtl
mov
sbbb
and
mov
int3
cli
sub
ljmp
popa
insb
xchg
xchg
mov
dec
mov
adc
test
es
xor
inc
mov
lret
out
mov
outsl
imull
outsl
mov
nop
movb
clc
das
mov
mov
ljmp
xchg
jecxz
test
lock
or
pusha
and
decl
cltd
push
dec
in
lcall
jle
movsb
mov
jl
out
es
into
hlt
jg
test
dec
dec
aas
mov
xor
dec
sbb
in
gs
mov
std
mov
sbb
xchg
mov
std
clc
lods
ja
stc
shrb
fsts
sbb
mov
mov
mov
sub
push
testb
int
call
or
inc
lods
dec
data16
cwtl
dec
fdiv
inc
std
or
popa
xchg
es
rcll
xor
dec
hlt
and
addl
in
pop
stos
pop
mov
fcomp
cli
pop
mov
jns
mov
mov
stos
xor
loop
jb
cmp
adc
adcl
push
pop
ljmp
sub
cli
lods
and
lret
cmpsl
xchg
ffreep
sbb
sub
fs
das
jle
pop
std
inc
jg
ret
mov
inc
test
cs
jns
sub
les
es
xchg
sbb
ja
dec
sbb
push
push
cmpsl
pusha
pop
adc
jmp
pop
cmp
pop
pushf
es
sarl
fwait
call
pop
lods
xchg
mov
push
push
xchg
sub
repz
add
xor
jns
loopne
fists
fwait
in
popf
setns
pop
cmp
xchg
sub
dec
xchg
rcr
cmc
call
arpl
cmpsb
sbb
pop
push
sbb
iret
cltd
out
mov
inc
loope
dec
xchg
mov
popa
cmp
cmp
and
sbb
push
inc
jb
add
jns
jge
dec
cs
lds
push
mov
xchg
clc
cs
inc
add
and
push
push
out
sub
pop
sahf
adc
int
inc
and
andb
and
jo
iret
push
lret
out
loop
insl
cmpl
cmp
inc
arpl
test
aas
pusha
fnsave
xchg
scas
jp
aaa
mov
inc
cmp
fnstenv
mov
addl
add
or
adc
pop
loope
mov
mov
dec
mov
mov
in
mov
xchg
or
mov
and
fs
push
push
lret
cmp
movsl
sub
ret
and
mov
sub
jae
jecxz
add
add
pop
arpl
adc
xor
in
add
lods
mov
imul
or
and
mov
mov
xor
fcomps
push
adc
cmp
out
movsl
push
shrl
xchg
xor
pop
sbb
loop
lods
fidivrs
stos
dec
xor
inc
repnz
xchg
push
jge
nop
jns
aad
mov
int3
ret
aas
fsts
fs
pop
adc
sbb
sub
push
addl
lahf
sub
push
outsb
sbb
lock
notb
imul
sbb
shrl
loope
sub
aad
adc
or
cmp
scas
nop
adc
mov
xchg
sbb
sub
push
xchg
inc
push
and
cs
roll
xor
cwtl
lods
pushf
sub
sub
mov
xchg
adc
test
sbb
mov
sbbl
sbb
jp
xor
std
sub
sbb
je
movsl
dec
insl
roll
sub
mov
push
jbe
adc
xchg
mov
mov
ret
add
mov
push
inc
adc
loopne
sub
int
or
xor
leave
insl
jno
xchg
and
shll
andb
mov
hlt
and
mov
fcompl
rcrb
or
lcall
inc
add
cli
and
lock
daa
lcall
cmp
movb
jl
shrb
pop
pop
pop
fucom
or
bound
fcoml
pop
inc
stos
jmp
repnz
mov
rcrl
addr16
int3
ds
xchg
sub
lret
mull
jne
sub
or
fildll
adc
jns
imul
outsb
sbb
lock
or
stc
xor
hlt
push
ss
xchg
std
push
dec
dec
orl
in
sti
cltd
ss
jg
jae
fdivrl
loopne
jp
push
in
leave
push
pop
lock
xor
dec
lds
ja
xor
xor
inc
divl
imul
cld
call
xorb
mov
ret
stos
rcr
pop
sub
into
imul
je
sub
sbb
not
loopne
sbb
cmp
dec
dec
les
mov
mov
lods
js
imul
sbb
push
jbe
lcall
stc
ja
fisubrl
pop
insl
adc
and
and
push
in
cli
adc
lods
repnz
adc
fimuls
lods
cmpsl
loopne
or
shlb
mov
add
jns
stc
and
xchg
aad
and
fdivrl
rorb
mov
jmp
das
jecxz
dec
mov
pop
xor
mov
loopne
inc
sbb
cmp
gs
lods
lock
sbb
fs
popl
dec
cmpsb
mov
sbb
repz
adc
xchg
inc
stos
or
push
add
stos
lret
mov
adc
xchg
mov
std
inc
mov
xchg
cltd
inc
popa
fwait
repz
insl
movl
xchg
es
pop
inc
cs
js
in
popl
loopne
dec
out
std
nop
jmp
add
xor
mov
nop
mov
aad
lods
push
repz
mov
jbe
pop
fdiv
fwait
ljmp
test
adc
and
addb
insl
lret
or
shl
imul
cmp
sub
mov
cmpsb
lahf
pop
sbb
sbb
out
xor
xor
cli
jbe
popf
add
int
push
sbb
push
popf
cmp
sub
ja
ret
adc
je
adc
xchg
sbb
xchg
dec
pop
fsubrl
fsubl
and
xor
jnp
into
insb
outsl
xorb
ljmp
dec
xlat
sbb
repz
call
ds
mov
or
cs
push
sub
inc
push
xchg
lea
cmc
pushl
xchg
popa
and
shll
in
cli
daa
fbld
pop
movsb
ret
push
inc
jmp
jae
mov
test
enter
jge
jecxz
xchg
and
inc
fldcw
rcll
movsl
xchg
jne
xchg
cmpsl
scas
pop
and
out
lret
cmc
and
int3
add
push
pop
jmp
decb
pop
std
jge
adc
jbe
fcomp
push
push
add
jbe
stos
btr
and
std
imul
push
mov
sub
in
xchg
pop
jg
or
fcompl
or
dec
mov
jb
mov
mov
mov
jae
jne,pn
scas
jecxz
push
dec
cmp
ret
mov
jg
add
sahf
sub
scas
das
push
dec
test
scas
cmp
mov
cwtl
and
pop
es
jbe
mov
fsubr
mov
dec
cmp
jmp
push
mov
xchg
sbb
inc
push
sub
sub
pop
loope
xchg
mov
das
add
pop
jp
fisubl
je
mov
cmpsb
mov
sub
cmp
and
scas
jmp
xor
jne
or
sbb
iret
lods
aam
rcrl
jns
lahf
loope
rorb
add
dec
test
mov
and
inc
inc
add
sti
pop
and
sbb
in
out
in
fldl
imul
sub
negl
aad
fbld
push
loopne
jmp
popf
jecxz
cmp
jnp
into
fs
xor
pop
out
ror
loopne
inc
inc
adc
jmp
mov
or
shlb
call
pop
sbb
mov
adc
push
dec
in
loope
mov
and
rorb
mov
jge
push
ret
in
ljmp
mov
in
mov
push
push
sub
pop
clc
or
iret
in
xchg
out
in
pop
add
jle
dec
into
addr16
or
dec
ds
and
aad
mov
in
sub
aam
scas
adc
jo
pop
sti
mov
in
cwtl
sbb
push
fadds
outsb
mov
sbb
push
cmc
xchg
add
mov
stos
mov
addr16
jg
jmp
mov
fsubl
mov
inc
push
push
into
push
add
jecxz
test
rorl
pop
outsl
in
cmpsb
inc
popf
sti
test
cmp
jl
xchg
add
mov
sub
and
lret
cmpsb
mov
cmp
jecxz
xchg
mov
movl
pop
lds
jno
movsb
xchg
pop
jmp
sarl
mov
mov
loop
sarl
mov
add
inc
ret
jmp
incl
adcb
orb
pop
out
dec
ljmp
mov
pushf
and
sbb
push
add
fists
pop
int
es
iret
push
sahf
daa
inc
jno
aas
into
test
leave
adc
andb
scas
lods
add
orb
xor
imul
sbb
jo
jno
andb
cmp
mov
ljmp
xchg
aam
and
loope
push
mov
aaa
adc
cmp
xchg
es
movsl
lret
sarb
iret
cs
out
repz
shr
popf
jmp
dec
daa
push
lret
mov
ja
jge
frstor
mov
stos
stc
loopne
ljmp
das
jl
adc
out
push
inc
mov
test
loop
and
fistl
sub
addr16
outsb
adc
xlat
dec
dec
push
xchg
aas
aaa
push
int
out
lock
addr16
inc
imul
fwait
cmp
fcoml
sbb
push
and
lea
adc
leave
stos
shrl
int3
push
mov
into
lahf
out
std
loop
and
mov
lea
push
xchg
out
stc
out
out
popf
pop
mov
push
xchg
pop
out
and
rcll
ja
adc
ljmp
push
push
adc
add
scas
mov
add
mov
sub
imul
data16
icebp
push
cmp
lahf
cmc
cld
adc
mov
int3
adc
ljmp
outsl
mov
movsl
lret
add
fcmovu
add
aas
cltd
xchg
mov
mov
pushf
pop
arpl
fstpl
and
mov
pushf
mov
pusha
ja
inc
mov
xor
stos
cmp
cld
mov
in
mov
pop
mov
dec
imul
xchg
ror
jp
jl
jmp
or
xor
aam
jecxz
mov
stc
sti
ljmp
adc
pop
idivl
xchg
adcl
pop
inc
hlt
popa
mov
popa
stos
sub
and
xchg
data16
arpl
popa
jp
xchg
stos
cmc
call
mov
ljmp
fadd
jmp
or
clc
push
jbe
inc
adc
push
dec
and
cmp
stos
sub
es
ljmp
mov
sub
jno
xlat
aam
inc
fxch
push
and
push
cmp
mov
fidivl
pusha
xchg
dec
or
xchg
jns
xchg
and
lret
fiaddl
repnz
rolb
push
iret
jmp
or
scas
loopne
outsl
faddl
sbb
xor
xor
outsb
xchg
stos
leave
mov
xchg
add
sub
addr16
popf
insl
xchg
xchg
or
xor
test
fnstsw
and
and
xor
mulb
sbbl
adc
jno
mov
jae
stc
push
cmp
into
mov
sbb
sbb
movsl
stos
fidivl
add
in
or
or
mov
mov
dec
cwtl
fcomip
push
pop
jo
push
pop
push
inc
push
gs
jl
sub
daa
sbb
mov
in
les
bound
push
mov
aaa
lea
push
jno
outsb
pop
outsb
or
lods
jge
add
push
aas
pop
cmp
jle
jmp
xchg
push
xchg
and
arpl
xchg
jle
push
enter
in
and
test
cmpsl
cs
or
inc
arpl
sbb
dec
lods
dec
js
cmp
sub
lock
add
xchg
stos
outsl
xor
sub
sub
xor
call
pop
dec
jle
xlat
mov
lock
test
inc
icebp
jns
repnz
mov
xor
sub
das
pusha
xchg
pop
adc
loope
leave
mov
lock
cmp
rorl
es
mov
lds
out
sti
sub
adcb
jmp
jo
dec
shrb
push
xor
dec
mov
lds
ss
push
inc
insb
test
jge
aam
cli
mov
cmp
pushf
lcall
mov
and
insb
dec
or
push
ret
fldt
xchg
les
bound
popa
enter
cmp
mov
dec
test
or
scas
test
imul
lret
jp
cmp
jno
dec
loopne
push
sbb
mov
pop
dec
dec
sub
fwait
lock
mov
jb
jb
cwtl
jmp
std
fcomip
mov
xor
cmp
xor
xchg
pop
sub
or
pusha
pop
sub
mov
cmc
sbb
jmp
push
cmp
rcrb
subb
jecxz
stos
pop
mov
shll
aas
repz
xchg
sub
dec
nop
bound
std
pop
push
loope
push
jecxz
jecxz
lahf
pop
and
push
bswap
xor
mov
mov
xor
bound
xlat
jp
adc
inc
fwait
test
sbb
cmp
push
sahf
aam
aad
inc
and
aas
stos
sub
jno
loope
lahf
xor
pop
jo
in
flds
pop
cmp
insl
mov
in
add
fistpll
xor
mov
daa
sbb
push
aad
outsl
ds
mov
jns
add
xor
popa
aad
dec
ja
aaa
scas
sub
dec
pop
push
push
mov
mov
add
test
test
sbb
loope
and
adc
hlt
iret
mov
scas
in
jo
lcall
mov
mov
mov
es
sahf
adc
jo
pop
notl
scas
xor
sub
mov
stos
xchg
jg
push
dec
or
xor
push
out
pop
mov
or
fcompl
repz
in
xor
push
sbb
out
fidivl
mov
insl
sahf
in
daa
psubusb
std
jns
cmc
xchg
pop
mov
cs
test
clc
test
pop
xchg
je
leave
mov
lods
push
jmp
push
sbb
sbb
imul
dec
icebp
xor
or
dec
xchg
ss
sbb
mov
lods
add
xchg
out
push
je
das
mov
add
jmp
xor
imull
push
orl
xchg
mulb
insl
mov
test
popl
push
sub
leave
and
rorb
sahf
jo
in
adc
out
addr16
and
fdivs
mov
add
jae
xchg
andl
test
je
add
in
lods
cs
xchg
rcrl
and
push
mov
sahf
jg
cmp
sbb
jns
cmpsb
mov
lds
je
jno
jmp
das
mov
mov
cmp
xchg
mov
cmp
add
repz
sub
sub
mov
outsb
pop
push
push
xor
fwait
pop
dec
cld
adc
shlb
cmp
pmulhuw
pop
jmp
lds
push
jmp
sbb
insl
stos
cmp
stos
dec
in
or
outsl
adc
mov
lcall
sub
std
push
xor
or
fildl
and
loop
and
adc
lds
leave
popf
jnp
faddp
fwait
jns
fld
sbb
ljmp
scas
cld
mov
xchg
xchg
mov
cmp
std
js
fldenv
mov
mov
fcomi
xor
add
scas
dec
sub
add
imul
outsl
push
in
adc
cmpsb
dec
ss
nop
add
inc
stc
imul
cltd
dec
fidivs
jmp
sub
addr16
xchg
dec
pop
std
out
jnp
or
lret
sub
mov
out
jp
bound
jp
fs
leave
cs
inc
jae
jg
fisubrl
clc
cmp
push
push
sbb
or
mov
add
mov
std
out
scas
mov
imul
outsb
fbld
aam
push
cmp
add
jmp
lret
js
or
leave
pushf
negb
sub
fildll
int
out
inc
imul
cmp
stos
loopne
ds
sbb
loopew
lret
pop
push
jns
leave
dec
cmp
lahf
inc
sbb
dec
push
sarb
movsb
and
mov
jl
ds
sub
mov
add
lea
inc
sti
cmpsb
loope
xor
ds
clc
rclb
jmp
mov
pop
movsl
mov
and
cmpsb
out
pop
repnz
icebp
xchg
in
ja
lock
loop
aad
jns
pop
adc
aaa
out
adc
sbb
xchg
vmovdqu
mov
daa
mov
stc
push
adc
xor
int3
shl
jle
cli
popa
pushf
cmp
sub
dec
lock
jmp
xor
inc
fs
mov
xchg
negl
add
jnp
mov
mov
mov
xor
ljmp
in
es
stc
lea
cltd
fistps
dec
inc
subb
iret
xchg
cmp
pop
pop
std
push
das
inc
cmpsl
bound
js
rclb
inc
cltd
roll
out
push
outsb
lods
pop
xchg
stos
xor
cmp
les
lea
pop
xchg
jbe
jge
test
add
push
in
xor
push
mov
pop
mov
lahf
add
jl
addb
jns
xor
jg
rcrl
push
mov
daa
jae
fadds
cmp
shll
test
jno
jecxz
setne
negb
clc
movsl
sub
mov
mov
fsubr
push
xor
ret
and
xchg
mov
mov
or
lcallw
mov
push
add
test
inc
xor
mov
cmpsb
cmp
jae
ret
aas
lea
xchg
jecxz
push
xor
mov
ret
and
lock
xorb
rcrb
clc
loop
aas
mov
mov
fisttpl
bound
xor
ds
popf
sti
movsb
mov
xchg
dec
popf
xchg
imul
xchg
jne
dec
dec
cmovle
jp
cmp
pop
inc
add
jge
mov
inc
dec
or
add
sub
cmp
add
hlt
in
insl
adc
divl
inc
ljmp
cmc
cltd
jae
sbb
mov
push
inc
lock
in
xor
pop
cmp
jbe
cmp
mov
enter
or
xor
mov
sahf
sbb
add
push
xor
test
das
push
in
ja
push
ret
mov
push
or
jnp
inc
arpl
pop
sahf
cmp
jns
js
arpl
push
jno
cs
xchg
iret
add
cmp
mov
pop
xchg
xor
scas
insl
adc
in
in
mov
push
push
jmp
out
cmpsb
ds
adc
scas
daa
xchg
pop
or
and
dec
in
aad
xor
xchg
xchg
jne
imul
inc
mov
jb
xchg
pop
xchg
jae
aam
sub
or
cmp
out
ret
or
xchg
int3
sbb
mov
jmp
int
loop
popf
iret
jge
xor
sub
xchg
imul
lret
jne
xchg
inc
inc
mov
and
fldl
aas
gs
push
mov
jl
addl
xor
mov
loopne
fisttps
outsb
in
sub
push
cld
decl
ret
scas
jmp
inc
xchg
fnsave
mov
fdivrp
cmpsb
inc
cld
add
jle
jnp
mov
sbb
je
mov
movsl
inc
add
mov
sub
mov
adc
js
inc
dec
xor
lret
pop
sbb
push
movsb
mov
cwtl
add
mov
rep
xor
mov
pop
cli
mov
das
icebp
jno
pop
mov
mov
push
cmc
cmp
into
xchg
cmpsw
idivl
aas
movsl
cmp
jle
out
sub
inc
decb
cs
add
mov
fs
testb
mov
sbb
push
repnz
mov
jb
jg
out
add
loopne
test
aam
cltd
xor
add
aas
mov
outsl
flds
push
sti
sti
out
jle
in
in
orl
pushf
aad
sbb
push
cmp
ret
sbb
or
jecxz
test
add
pushl
mov
jo
mov
add
scas
or
test
int3
ja
xchg
xor
aas
setl
imul
sarl
je
lret
fs
xchg
sbb
jl
nop
mov
add
cs
lock
adc
xchg
mov
aaa
sbb
and
bound
add
jecxz
fldl
incb
fisttps
mov
adc
pusha
shrl
mov
xchg
out
add
push
sub
inc
fdivs
xchg
or
rcll
push
jae
mov
and
loopne
mov
in
add
or
daa
test
aam
mov
jp
loope
jp
popa
in
lcall
sub
adc
and
iret
insl
imul
rolb
push
push
and
or
xor
mov
mov
jo
pop
fcomip
add
jno
and
inc
ljmp
adc
mov
data16
inc
sbb
mov
ds
mov
mov
inc
jb
int
popa
test
mov
ret
inc
push
sarb
and
and
dec
cmp
mov
std
adc
pop
mov
pop
loop
in
leave
pop
ja
xor
mov
nop
or
out
cmp
outsl
loope
push
scas
test
popf
add
jb
pop
adc
sub
adc
in
call
push
fists
movsl
dec
xor
dec
shll
scas
cwtl
add
imul
movsl
mov
push
mov
or
add
aad
inc
mov
fisubs
jnp
add
insb
test
inc
mov
jne
out
notl
pop
sbb
xchg
adcb
stos
idivb
mov
arpl
movsl
fcomip
ljmp
aad
shrb
pop
pop
push
add
jecxz
or
int3
jns
xchg
mov
into
jno
sub
and
cmp
int
sub
xor
loopne
push
cmc
enter
mov
loope
jbe
jle
cli
sbb
lea
pop
add
or
movsb
icebp
movsl
pop
out
fcoml
in
ret
push
sub
cmp
sahf
ret
cmp
or
clc
inc
add
add
jne
dec
pop
ret
jno
jl
adc
add
sbb
mov
pop
sub
mov
cld
cmp
cmpsb
movsb
cmp
popa
inc
gs
cmp
idivl
mov
push
xchg
in
movsl
lods
mov
inc
test
sarl
cmp
lret
mov
clc
mov
inc
test
mov
fsubrl
jb
outsb
mov
ret
adc
mov
sub
shll
xchg
xchg
aam
mov
jo
stos
int
and
mov
pop
dec
sbb
cwtl
insb
lock
enter
sub
pop
rolb
into
add
mov
ret
push
leave
pop
sti
push
or
nop
push
lret
xlat
andl
cmp
adc
and
add
iret
dec
jb
xchg
bound
pushf
movsb
fwait
mov
or
sub
jne
rolb
cwtl
lret
in
imul
sbb
subb
bound
insb
mov
in
or
xchg
jo
out
test
xchg
adc
sbb
divb
call
dec
xor
push
mov
pusha
xorl
scas
nop
mov
mov
sbb
dec
loop
fdivr
loop
fbstp
in
jl
outsb
xchg
mov
inc
add
sub
add
xlat
fildll
jl
sahf
mov
inc
xlat
cmp
cmp
out
mov
xor
and
test
pop
cmp
sbb
mov
jle
mov
mov
pop
lods
jge
cmp
in
dec
jge
outsl
cwtl
test
pop
pop
sbb
sbb
and
lcall
ss
frstor
out
loopne
addr16
push
push
mov
pop
sub
fadds
lea
insl
and
outsl
cmp
inc
test
inc
imul
lcall
in
and
das
loope
add
roll
xor
push
mov
adc
mov
push
add
je
adc
jb
push
push
cmpl
cwtl
cmp
dec
lods
filds
and
cmp
sub
pop
adc
adc
xchg
cmp
jo
mov
mov
std
sub
mov
mov
mov
repnz
aad
cmp
jg
scas
pop
push
xor
repz
adcb
sub
inc
fcmovnbe
mov
pop
push
mov
icebp
stos
addb
xor
lods
int
push
push
inc
lods
shrl
sub
into
xchg
bnd
repz
cmp
mov
popf
fneni(8087
lahf
xlat
jne
mov
loope
popa
test
sahf
repnz
lods
shl
sbbl
push
idivb
clc
rep
push
jns
sbb
fwait
roll
push
mov
mov
or
dec
jmp
in
sub
ret
pop
loope
dec
in
jnp
pop
inc
sti
xchg
xchg
fsubs
mov
pop
xor
mov
pop
fnstcw
jae
test
jp
cmpsl
sub
adc
out
stos
sahf
aas
sahf
mov
dec
cmp
cli
iret
data16
or
dec
inc
sbb
push
lret
and
xchg
jmp
adc
imulb
or
mov
push
test
rcrl
inc
jo
jo
jmp
mov
stos
push
push
test
int3
sbb
or
cli
out
and
out
lret
ds
sbb
or
jp
test
shrb
loop
outsl
xor
dec
addr16
sbb
hlt
mov
pop
xchg
and
mov
jg
testl
inc
or
fmuls
inc
les
adc
loope
loopne
das
dec
ret
push
push
mov
lret
loope
in
cmp
push
mov
lcall
pop
mov
lock
push
and
lods
in
fcomps
mov
repnz
add
sbb
sub
aaa
mov
rcrl
mov
stos
lods
sub
add
dec
add
bound
aam
dec
sbb
aaa
int3
insl
movl
or
mov
push
inc
rol
jb
sub
sbb
rol
xor
cwtl
and
ret
lret
lret
jnp
out
push
insl
cli
push
std
loopne
adc
lret
inc
cwtl
out
gs
xchg
sub
pop
ds
pop
mov
xor
rcrl
jnp
scas
add
aas
cmp
pop
mov
aad
sti
jmp
add
repnz
mov
push
pop
outsb
int
nop
std
scas
fbld
add
mov
mov
jne
push
cmpb
cmp
pop
das
inc
cmp
cli
dec
adc
ror
cmp
xchg
push
pusha
pop
ljmp
cmc
into
aas
mov
imul
jecxz
in
mov
clc
pop
cli
sbb
pop
pop
sarb
lret
lahf
insb
xchg
in
and
push
mov
add
xchg
pop
mov
cmp
sti
xchg
shrb
out
push
or
push
out
dec
and
pop
lahf
leave
inc
cmpsb
mov
sub
add
ret
lahf
push
inc
push
es
nop
scas
les
adcl
push
or
insb
fildll
sbb
test
sub
into
cld
cmp
and
test
jnp
or
inc
mov
dec
mov
mov
movsl
mov
xor
xor
mov
loop
imull
inc
ja,pn
inc
xorl
jns
xor
jbe
lret
jb
adc
cli
inc
adc
fsubl
and
rclb
adc
sbb
jmp
or
adc
push
in
insb
xor
adc
loop
cmp
fiaddl
sahf
and
pop
cmp
outsl
lock
cmp
mov
rcll
mov
push
rcll
sbb
pop
xchg
pop
orl
or
out
pop
xor
rcll
out
out
or
jecxz
add
inc
xchg
and
or
sub
mov
adc
sub
cmpsb
dec
xchg
add
push
xchg
or
adcb
cmp
out
dec
dec
sub
mov
lea
imul
mov
dec
or
mov
sbb
pushf
jns
mov
popf
cli
inc
popa
mov
loop
jnp
ljmp
cmpsb
push
and
loopne
and
dec
and
sub
fsub
mov
pxor
shrb
or
lds
movsb
mov
push
or
or
cmp
mov
pop
ds
repnz
jp
fwait
shll
adc
push
out
pop
cmc
or
and
cli
jecxz
stc
test
add
loope
negb
nop
push
xchg
hlt
cli
mov
imul
ret
repz
pop
sub
inc
fwait
leave
sbb
jo
cld
daa
stc
sub
int
test
stc
dec
aam
leave
mov
aaa
sbb
mov
xor
and
mov
je
fldenv
pop
ret
pop
add
add
mov
stc
arpl
inc
adc
push
popa
popa
js
xchg
enter
les
fs
iret
shlb
adc
cld
cli
push
test
xlat
cmp
and
jl
cli
int
ljmp
pop
xor
mov
jmp
jae
mov
xor
call
rolb
add
adc
fisubs
sub
js
xor
insl
adc
add
bound
push
imul
in
sbb
lock
ds
das
pop
ficoms
lods
movsl
mov
cs
cmp
das
cmp
mov
cmc
aaa
pop
mov
mov
sbb
push
mov
pop
inc
out
and
insb
movsb
and
mov
or
test
mov
sarl
jo
jmp
jp
sbb
lods
dec
xor
push
mov
mov
test
and
pop
ja
pop
mov
icebp
popf
cmp
or
insl
jne
pop
jno
mov
jbe
jo
sub
and
imul
ret
mov
and
mov
fsubrl
cltd
movsl
xor
mov
insb
inc
into
scas
daa
push
pop
incl
cltd
adc
mov
pop
cmp
leave
mov
mov
andl
arpl
sub
jp
add
imul
push
lret
xor
stos
test
and
cmpsl
jns
xor
adc
jb
push
adc
andl
js
mov
jnp
lods
imul
xchg
pop
dec
sbb
scas
gs
outsb
fwait
ret
movsb
push
test
into
mov
xchg
shrb
addr16
or
cmp
arpl
pushf
inc
aas
pop
cli
insb
fcoms
jno
adc
xchg
lds
mov
inc
xor
xor
aas
pop
inc
sub
pop
dec
loopne
pop
int
jge
sbb
xor
stos
or
xchg
ljmp
cltd
insl
sbb
cmp
pop
data16
in
xchg
aad
or
es
mov
sub
lods
loop
add
movsb
js
out
inc
cmp
repz
sarb
fs
int3
clc
ret
subb
aam
mov
gs
mov
pop
ret
adc
rcr
es
adcb
data16
in
and
xchg
mov
cltd
es
pop
divb
mov
and
inc
cltd
xlat
ret
jle
jbe
shll
rol
pop
jmp
dec
add
std
inc
jg
lret
jmp
push
sbb
pop
and
lret
ja
dec
pop
xchg
mov
lods
xchg
mov
jg
pop
bound
and
icebp
inc
sub
sahf
es
out
adc
push
fldenv
jg
sqrtps
push
movl
mov
int3
jnp
cwtl
scas
xor
lds
mov
iret
mov
lcall
jle
xchg
into
mov
fsubl
shr
mov
rcrl
xchg
or
xor
push
jle
aas
mov
push
push
outsb
mov
xchg
and
sub
jmp
or
in
jp
data16
test
in
sub
mov
jbe
mov
xor
inc
or
pop
xor
ds
shr
jge
rolb
mov
or
dec
or
mov
mov
dec
in
incb
push
push
adc
jle
int
in
jae
arpl
push
in
imul
jb
add
add
and
pop
xor
outsl
in
cs
adc
test
sbb
loop
xchg
pop
inc
xchg
ret
push
add
negl
pop
pop
push
xchg
rorl
xor
push
ss
push
loopnew
xor
leave
mov
repnz
imul
fwait
xor
or
out
adc
xchg
adc
mov
mov
pop
add
mov
shlb
xchg
popf
mov
jno
xchg
ljmp
rcl
and
mov
sahf
jno
fildl
xlat
sbb
add
leave
cmp
sbb
xchg
test
add
sub
mov
mov
int
jg
arpl
icebp
jge
scas
xor
orb
xor
es
data16
jp
mov
jmp
mov
aas
pop
xlat
inc
mov
es
out
inc
fstps
loope
in
aam
aaa
jo
repz
mov
daa
dec
ds
adc
cmpsl
cs
push
syscall
ret
and
mov
sbb
lcall
mov
call
inc
loope
notl
xor
cs
or
xchg
cli
enter
jno
or
loopne
cmp
clc
xchg
cmp
aas
cmc
imul
or
cmp
and
inc
js
test
push
lea
mov
cltd
jp
lret
lods
fsts
pop
fmull
dec
inc
scas
je
ja
scas
inc
idiv
pop
fcoms
dec
sub
ja
pop
and
xchg
mov
bound
inc
and
xor
lock
mov
aam
pop
mov
jmp
sbb
ja
jbe
pop
enter
xchg
in
cli
xchg
xchg
and
decl
push
xor
inc
push
aad
jg
xchg
sbb
test
cmp
cmpsl
jno
test
or
pop
mov
pop
push
fdivl
mov
je
mov
sarl
das
je
out
cmpsb
or
das
stos
js
push
lea
add
sbb
cs
popf
push
xlat
imul
add
test
or
pop
or
pop
jmp
sbb
mov
stos
add
sub
push
fistl
inc
arpl
pusha
in
fdivs
sub
push
jmp
negb
xchg
outsl
movsb
inc
jl
rcr
mov
sub
dec
dec
xchg
cmpxchg
nop
std
in
xor
icebp
rcrb
cli
dec
jb
ficoms
pop
mov
loop
pop
dec
adc
jbe
scas
pop
mov
ret
cmp
push
out
jecxz
lods
inc
add
stc
loop
cmp
enter
mov
and
cmp
inc
adc
inc
xchg
outsl
daa
push
imul
jae
or
adc
xchg
mov
fadds
scas
push
sbb
in
cmc
pop
adc
dec
call
jae
sub
and
sbb
stos
movsb
fwait
push
cld
mov
fs
cli
ret
mov
leave
pop
into
adc
leave
push
push
icebp
cs
xchg
lock
inc
jbe
cli
xor
shll
int3
jbe
mov
jp
jb
mov
test
cld
out
loopne
jnp
mov
bound
hlt
push
insb
add
ss
mov
mov
jecxz
dec
loopne
pop
ret
test
add
push
lret
shrl
cmp
cmp
dec
mov
xchg
pop
ja
bound
jae
mov
jmp
jne
and
adc
leave
fs
jae
loopne
into
sbb
imul
movsb
add
pop
shrl
jno
stos
jmp
test
repnz
hlt
jo
sti
scas
lahf
out
es
pop
cli
pushf
mov
loop
stos
jbe
mov
out
es
stos
xchg
mov
cmpsl
popf
mov
leave
mov
mov
outsl
jle
ss
in
jg
or
jb
mov
adc
dec
inc
je
sub
ja
stc
pop
xor
add
and
bound
bound
in
popf
outsl
fcmovne
aad
xor
xor
adc
outsl
and
rorl
ret
xor
mov
mov
arpl
mov
cli
fisubrl
movsb
lods
push
lahf
call
orl
in
aaa
mov
inc
outsl
imul
add
pop
repnz
push
ficoml
inc
mov
fisubrs
outsl
pop
and
fwait
or
mov
or
loopne
test
xor
mov
cmp
hlt
pop
fcoml
inc
sub
push
push
stc
lock
cld
je
movsl
add
or
arpl
clc
fidivs
and
pop
push
movsl
lea
inc
push
jne
into
sub
cmp
gs
add
adc
cmpb
sub
cld
adc
int3
add
test
stos
test
lret
mov
jge
imul
and
lds
push
rol
cs
pop
rcrb
cmp
ret
inc
adc
cmpsl
xor
in
sbb
daa
dec
push
repnz
push
adc
mov
mov
or
inc
cs
xchg
leave
push
rolb
in
lods
push
stos
mov
ljmp
xchg
ljmp
js
fcompl
adc
mov
movsl
out
inc
shr
rolb
push
scas
into
repz
nop
sahf
pushf
aad
mov
fcmovnb
dec
ds
ret
out
jl
insl
or
insb
gs
cmp
ljmp
pop
fs
cld
jle
pop
xor
mov
push
arpl
lock
into
or
repnz
rcrb
shlb
lret
adc
cs
scas
enter
mov
mov
inc
aam
mov
aam
jbe
shll
ja
stos
sub
nop
insl
add
dec
sarl
movsl
cmp
sub
pushf
hlt
cmp
jl
mov
fcomps
add
sbb
dec
xchg
push
mov
sbb
mov
push
pop
lret
cmpb
mov
pop
xor
mov
adc
icebp
pop
or
icebp
scas
adc
inc
cmp
rolb
sahf
shrb
ja
lret
incl
rorb
jb
push
add
mov
add
push
enter
int3
addr16
enter
dec
lds
sbb
sbb
inc
fldenv
movsb
out
jae
mov
call
scas
nop
lds
test
lahf
rcr
ja
xchg
xorb
mov
and
jmp
fildll
inc
ret
lahf
popa
mov
xchg
bswap
dec
mov
ss
mov
fdivrs
mov
mov
inc
and
pop
shll
in
jge
add
out
aad
add
push
cmp
dec
xor
negl
flds
lods
sub
int3
adc
fldl
lds
pushf
mov
mov
push
flds
lods
and
out
and
psubb
cvtpi2ps
mov
mov
pop
aas
and
call
mov
std
imul
dec
push
inc
mov
adc
imul
notb
pushf
in
popf
push
out
outsl
ljmp
frstor
xor
adc
rolb
pop
add
pop
dec
or
fcompl
out
xchg
les
push
bound
xchg
push
mov
or
inc
jno
adc
jo
aam
out
loope
adc
cmpsb
shlb
mov
and
mov
arpl
test
insb
lret
mov
add
sbb
dec
fs
push
int
pop
xchg
push
fildll
scas
aad
call
in
mov
enter
mov
xchg
aaa
test
enter
pop
inc
push
bswap
mov
jl
mov
mov
popf
fsubr
dec
jnp
cmpb
stos
add
sbb
cmpb
in
pushf
sbb
and
cmp
scas
pop
dec
in
shlb
adc
aas
mov
repnz
dec
xrelease
cmp
mov
loopne
add
xchg
ljmp
imul
add
mov
push
loop
mov
xchg
pushl
in
ds
inc
xor
mov
jge
test
add
test
cmp
fsubrs
sub
xor
jo
dec
inc
or
roll
push
add
fs
out
xchg
xor
xchg
icebp
and
fidivl
ja
push
jmp
outsl
sbb
add
fistps
sar
lret
xor
dec
add
fsubrp
pusha
in
cltd
adc
pop
pop
mov
aad
rorb
xor
jmp
dec
pop
outsb
adc
lcall
mov
shrb
movsb
and
bound
fisttpll
xor
fbld
dec
in
adc
movsl
insl
push
and
or
push
mov
sub
sbb
cld
sahf
lods
jo
lods
cs
arpl
mov
mov
outsb
sti
pusha
xchg
mov
pop
fmuls
cmpsl
inc
fmull
or
pushf
test
push
pop
pop
or
sbb
aad
adcl
push
adc
call
jmp
push
sahf
mov
mov
jle
pop
inc
iret
aad
jne
das
inc
orl
in
mov
xor
stos
cmp
pop
mov
sbb
jbe
cli
xor
inc
add
repnz
pop
jnp
xchg
cmc
xor
loope
add
fld
lods
sub
std
adc
testl
out
stos
add
mov
sbb
sbb
mov
xchg
and
cmp
mov
mov
call
xchg
sub
adc
stos
test
sub
shlb
add
cmp
sub
add
mov
ljmp
xchg
ret
jecxz
mov
int3
inc
push
lock
stos
mov
push
pop
jp
xor
outsb
clc
mov
mov
jmp
add
xor
data16
sti
mov
fcomi
mov
stc
lahf
out
adc
flds
imul
imul
loop
ds
pop
daa
cmpsl
or
lea
mov
lret
lret
xchg
aad
cmpsb
lock
aas
dec
sub
mov
ficoms
scas
cmp
lods
lret
dec
sti
out
cmp
xchg
push
or
jg
cmp
icebp
mov
jo
js
loop
xor
push
jecxz
mov
pop
cwtl
test
add
ficoml
and
sub
and
push
mov
loope
negb
push
nop
pop
lods
sub
push
adc
fs
xor
lahf
jle
aaa
xchg
sbb
xchg
dec
dec
cwtl
lea
outsb
sub
dec
mov
pop
sbb
mov
xchg
push
xchg
add
mov
pushf
leave
ljmp
mov
or
loope
mov
andb
arpl
stc
and
and
aad
jne
in
inc
cltd
cmpb
hlt
xor
mov
jle
ret
mov
jp
into
test
mov
mov
adc
cmc
test
in
pop
movsb
add
incb
adc
out
std
push
push
mov
mov
and
cltd
jecxz
clc
popa
push
sbb
aam
mov
cmp
inc
cmp
cmp
cmp
cmp
add
out
mov
jge
cwtl
and
mov
les
dec
xchg
enter
std
xor
xchg
shl
in
mov
lods
test
out
enter
jp
pop
mov
jae
arpl
and
outsl
cld
inc
arpl
lods
int
fs
lock
js
and
push
fbstp
push
inc
mov
nop
test
jne
insb
inc
and
data16
out
push
and
add
add
mov
std
xor
pushf
lea
lret
test
mov
jns
jl
test
and
mov
lods
scas
and
mov
jmp
jg
loopne
push
push
sub
out
xchg
lods
push
test
add
add
popf
sbb
das
fstps
mov
jnp
xor
test
lahf
addb
xchg
ret
lods
xor
scas
xchg
xlat
pop
mov
sub
mov
pop
mov
mov
mov
ficompl
sbb
incl
add
xor
pop
shl
test
mov
push
iret
xchg
call
es
or
push
inc
int
sbbl
dec
out
fdiv
mov
xor
cmp
fsts
xor
fadds
xor
mov
xchg
jne
scas
mov
adc
in
test
xor
inc
cli
sub
jle
ret
dec
mov
xlat
divb
cmc
add
std
sub
adc
add
jg
pop
movb
adc
rol
sub
cmc
mov
icebp
mov
repnz
hlt
mov
sbb
lea
mov
mov
cli
stos
iret
enter
mov
inc
cs
test
cli
insl
movl
xor
push
pop
insb
lods
and
fldt
ret
push
push
stc
imull
in
xchg
adc
sub
in
movsb
dec
inc
pop
xorb
ret
and
cld
lock
adc
fnstcw
sbb
loop
int
ret
mov
xchg
lcall
shr
nop
fimull
push
xchg
test
mov
xor
ss
stc
jno
or
shr
out
clc
adc
jge
push
or
cmpl
loope
lret
neg
lret
imul
lret
push
call
popf
lock
movsb
mov
call
sbb
das
add
and
rcr
xchg
fs
dec
lret
repz
pop
das
rolb
xor
pop
loopne
imul
movsl
sub
clc
sub
cmc
xorl
in
lret
pop
dec
pop
jmp
rolb
cmpsl
rep
add
lea
pop
sbb
jle
sbb
jno
sbb
sub
cmp
push
pop
icebp
loope
ret
push
arpl
add
pop
test
iret
popa
sbb
jbe
shlb
dec
sahf
push
sti
or
xchg
cltd
add
test
dec
leave
cmp
movsl
dec
add
les
xchg
test
fwait
leave
movsl
test
and
fs
loop
cmpsl
xchg
push
inc
cld
fdivrl
rolb
scas
xlat
xchg
jb
pop
sbbb
push
out
push
mov
in
xor
sbb
cltd
inc
in
cli
js
jle
inc
scas
mov
stc
sub
mov
mov
and
andl
mov
mov
fnstenv
cli
out
stc
and
cmp
sbb
in
and
lods
insl
cwtl
pop
mov
jns
ljmp
cmp
pop
xchg
and
mov
jmp
popa
xchg
mov
testl
sbb
std
repnz
ror
outsb
jnp
and
inc
bound
rcrl
jg
in
cmpsl
roll
mov
cmpb
jle
pop
nop
stos
or
inc
dec
pushf
jp
jg
lods
test
pop
imul
sbb
repnz
js
xchg
mov
sub
mov
popf
call
shr
pusha
xlat
push
xchg
mov
insl
xchg
adc
movsl
lods
dec
sbb
ds
jmp
add
mov
adc
lahf
hlt
push
out
sbb
fmuls
adc
pop
imul
mov
and
mov
add
xor
and
decb
mov
ds
je
cmp
sub
sbb
push
pop
and
inc
mov
aaa
push
cmp
out
mov
aaa
or
jno
cmpsl
sahf
divb
loope
popf
mov
inc
lds
push
pop
lods
int3
dec
cs
pop
cmpsb
lods
mov
les
dec
movsb
add
sbb
lahf
ret
lea
sub
arpl
sub
mov
ret
mov
xor
movb
test
xchg
orl
mov
popa
std
mov
pop
pop
out
loopne
cmp
push
or
fstps
xchg
push
xor
mov
lret
add
sbb
and
jmp
pop
and
lahf
sbb
pop
jmp
shr
mov
in
out
cld
in
rcrl
psadbw
outsl
add
pop
repnz
sbb
pop
xor
iret
insb
xchg
mov
xor
push
lds
fwait
leave
and
add
cmc
fwait
stc
repz
enter
inc
jne
sub
jo
xchg
pop
sar
lock
xor
cmc
mov
js
daa
into
lret
fidivrl
lea
inc
orl
je
mov
xchg
xor
fmuls
adc
pop
fucom
sub
cmp
imul
mov
cwtl
cmpb
and
adc
shll
sub
jne
leave
mov
test
jb
ret
mov
dec
fsubr
pop
sbb
lahf
mov
add
add
rol
ficoml
cmc
out
lret
jnp
or
arpl
push
ja
mov
lea
mov
xor
andb
ja
fistl
and
mov
add
shll
mov
fwait
ljmp
jmp
add
xor
repnz
adc
repz
adc
shll
xchg
jmp
int3
mov
add
je
cmpsl
js
call
adc
out
jg
pushf
sbb
lods
and
lahf
xor
mov
jbe
mov
push
test
jg
cmp
jnp
shr
paddusb
pop
lock
fsubrl
mov
sbb
push
adc
sbb
cmp
mov
push
xchg
jmp
jecxz
fimull
xlat
mov
xor
cmp
mov
pusha
std
mov
push
pop
repz
incb
and
jle
aaa
das
or
cmpsl
roll
sbb
cmpsb
testl
inc
ss
inc
jg
adc
ja
fs
mov
xor
inc
cmpsb
lret
cli
movsl
and
mov
jae
push
mov
cmpsl
jge
xor
add
jle
lods
out
mov
add
out
sub
movsb
or
mov
push
jae
jmp
fs
sub
xchg
push
aaa
test
push
inc
leave
inc
sti
sarb
cmp
popa
pop
sbb
je
inc
icebp
mov
xor
add
cmp
fwait
clc
sbb
mov
loop
xor
aas
test
sahf
xchg
inc
xchg
xlat
sti
fldt
icebp
xor
aaa
xor
jne
sub
dec
test
lock
sbbb
sbb
mov
mov
inc
das
and
mov
imul
cld
insb
rol
xchg
lock
jl
mov
sub
call
in
in
dec
sbb
pop
gs
pop
cltd
cmc
inc
inc
jg
sub
or
dec
mov
pop
mov
jl
jge
outsb
mov
sub
lods
pop
movsb
popa
scas
es
mov
das
enter
daa
subl
call
jp
pop
test
cmpsb
cmp
shlb
popa
shll
sti
xchg
in
push
popf
sub
and
or
and
add
es
adc
cmpsb
cmpsl
push
xorl
inc
and
jnp
fucomip
inc
stc
ss
mov
and
push
scas
adc
inc
mov
sbb
xchg
jmp
idivl
ficompl
xor
ret
arpl
pop
mov
out
hlt
and
iret
fmul
mov
lret
pop
sarl
out
pop
push
or
repnz
in
and
mov
cmp
nop
inc
sbb
mov
xlat
cwtl
or
loope
mov
push
cltd
or
push
fisubs
lods
or
jmp
and
cmp
push
adc
rcl
dec
mov
jno
pop
outsl
xlat
sti
pop
xchg
rorl
hlt
fcompl
ss
sub
jo
and
lcall
jnp,pn
lods
in
adc
sbb
sbb
cmp
mov
push
enter
mov
js
repnz
repz
inc
aam
xor
aas
mov
mov
enter
outsb
sub
pusha
mov
push
out
pop
lods
and
push
ds
mov
pop
cld
dec
mov
pop
jp
cmc
inc
add
adc
es
data16
fisubl
sub
sub
jmp
or
cmp
pop
pop
into
stos
jns
inc
push
mov
xchg
mov
std
loopne
mov
mov
lea
aad
add
jo
jl
mov
or
xchg
or
push
or
mov
push
or
out
out
lea
test
sarb
scas
popa
ja
ffree
ja
mov
inc
shrl
test
js
xchg
pop
in
mov
and
rcrl
sub
test
sub
mov
adc
add
scas
call
mov
cld
and
xchg
cltd
mov
scas
fwait
cmp
popf
inc
add
push
lret
sarb
loope
fildll
jmp
enter
or
fcompl
add
imul
inc
sbb
mov
mov
in
fs
sti
repnz
inc
xor
les
mov
or
inc
xchg
push
hlt
imul
mov
add
mov
adc
iret
cmp
aad
dec
jg
lock
jo
cmpsb
bound
loope
in
xor
or
cli
sub
cmp
orl
mov
mov
shrl
stos
lret
jae
jnp
and
pop
aam
push
xchg
push
pop
pop
js
icebp
mov
addb
cmp
pusha
jae,pn
mov
cli
cmp
les
cmp
lods
pop
adc
push
xchg
dec
cmp
je
in
fucomi
or
pop
mov
cli
cs
hlt
pop
push
mov
movsb
hlt
push
cmpsb
push
das
xchg
lret
cmp
xchg
mov
insb
fsubl
add
mov
adc
iret
jl
cld
ljmp
aas
push
aas
mov
sbb
push
push
rolb
mov
adc
xchg
addb
test
xchg
push
insb
sub
or
pop
shrb
fistps
mov
lea
cltd
mov
adc
cmp
pop
push
testl
xor
dec
and
jle
es
jo
out
ss
cmp
pop
mov
mov
rclb
mov
lret
popa
push
daa
ljmp
cmp
pop
mov
mov
outsl
xor
out
nop
stos
inc
jns
sub
jle
stc
je
dec
movsl
adc
jnp
mov
pop
test
lods
push
inc
stc
mov
push
xchg
xchg
sbb
int3
gs
and
cs
or
cltd
cmc
lret
aad
add
mov
outsb
mov
test
xchg
imul
jo
jl
or
popw
movsl
fdivl
cmp
fadds
xlat
hlt
adc
mov
sub
xchg
repz
mov
scas
cmp
icebp
out
cmp
jo
cmp
mov
or
mov
js
mov
xor
cmp
sbb
mov
jno
or
xorl
mov
xchg
jge
jmp
sarb
bound
push
xor
mov
or
jp
mov
xorl
adc
inc
cmpsb
pop
xchg
push
out
xor
lods
aam
pop
mov
push
arpl
lock
int
lods
mov
cmp
movsl
insl
and
xchg
leave
lock
and
mov
lods
out
add
sbb
shrb
mov
mov
xchg
aad
popf
push
movsl
push
xor
push
out
test
push
cmpsb
mov
cmp
push
cmp
cmp
mov
repz
cmc
out
mov
in
nop
mov
movsl
push
aam
mov
sub
lods
push
lods
sub
fcmovb
out
dec
sahf
loope
faddp
pop
push
inc
push
lcall
fidivs
lret
sbb
pop
icebp
inc
adc
mov
jns
mov
sbb
mov
push
int
pop
movsb
fscale
push
or
bound
je
pop
test
cmp
repnz
inc
pop
lods
push
xor
leave
pop
inc
clc
xchg
cmp
sahf
jne
pop
sbb
in
sub
jp
inc
cs
aaa
pusha
aaa
cltd
into
fcmove
add
movb
or
mov
pop
cli
insl
stc
lock
int3
ret
fldl
cli
jecxz
sub
dec
jno
sub
cmp
push
call
fistps
adc
inc
mov
jbe
lea
outsb
inc
pop
imul
out
pop
jae
sub
pop
jp
hlt
jl
and
mov
fnstcw
outsl
daa
sbb
add
mov
jnp
out
and
or
fwait
adc
loop
aaa
hlt
lds
mov
jp
cs
mov
popf
stos
push
ljmp
xchg
repnz
push
sub
jmp
cmp
mov
add
movb
inc
or
test
sub
das
pop
xlat
cmp
inc
test
pop
lret
push
mov
lret
ret
roll
popf
jl
fdivl
jge
push
subl
dec
push
and
rol
dec
adc
push
stos
roll
lds
xor
cmc
adc
jmp
mov
into
xchg
mov
je
movb
jle
test
fdiv
or
out
lahf
sbb
mov
das
and
pop
sbb
rclb
mov
xorb
decl
orb
pop
jnp
mov
sub
adc
stc
jo
mov
inc
xchg
fdivrs
inc
push
mov
xchg
jg
lcall
test
xor
push
jmp
leave
pop
and
in
insb
pop
pop
mov
adc
es
gs
loope
shl
jnp
mov
mov
inc
xchg
enter
dec
in
cli
bnd
push
pusha
jns
jno
push
insl
cwtl
dec
ja
test
jne
scas
inc
loop
cmc
xchg
xchg
scas
orl
std
mov
mov
fwait
hlt
cmp
in
jmp
push
ret
and
lcall
mov
xchg
xchg
lret
xlat
stc
mov
ja
and
rol
lods
incb
push
xchg
xor
fs
add
mov
ds
push
dec
int
dec
sub
or
sbb
out
push
and
mov
adc
dec
dec
xor
sbb
scas
daa
popa
or
imul
insl
inc
in
fcmovnb
or
insl
and
cwtl
jnp
mov
and
int
cmp
ret
loop
hlt
jmp
add
jns
xchg
xchg
fld
std
mov
hlt
and
pop
cmc
adc
mov
and
ret
add
pmaxub
pop
mov
cmp
outsb
imul
shlb
ss
mov
jno
cmp
in
daa
dec
in
hlt
decl
adc
repnz
add
inc
sbb
cmp
or
cmp
add
push
xorl
dec
sti
jmp
adc
jp
and
test
cmp
mov
ds
das
mov
test
addr16
ror
add
mov
inc
and
inc
push
in
xor
in
test
or
out
divl
xor
pop
imul
insl
and
and
sub
mov
mov
in
mov
adc
scas
lcall
sbb
lret
dec
and
jecxz
pop
lock
and
add
cmp
add
shrl
pop
hlt
insb
sar
add
pop
pop
test
sub
ss
idiv
and
rolb
imull
stos
shll
aaa
cmp
scas
out
les
cmp
and
push
sbb
jp
imul
dec
gs
inc
out
dec
stc
push
lds
push
stos
outsb
and
cmp
test
mov
icebp
push
aad
stos
mov
ficoms
jg
cmp
or
mov
adc
or
sbb
mov
mov
mov
test
sbb
rcl
fnstsw
add
cmp
mov
stos
dec
xchg
jbe
or
dec
lea
ret
add
mov
pop
mov
cltd
jno
cli
or
cltd
cmpl
mov
int
dec
aam
cmp
dec
adc
bound
adc
mov
xlat
aad
fldt
adc
inc
cmp
add
adc
mov
les
dec
inc
into
push
sub
jecxz
xchg
jb
clc
mov
inc
mov
dec
je
daa
inc
mov
leave
in
xchg
stos
xor
nop
dec
lcall
fdivs
pushf
mov
insb
lcall
insl
mov
add
xorb
ficoml
test
imul
ficomps
mov
test
and
mov
int
dec
cld
cltd
cs
cmp
mov
outsb
nop
add
into
mov
add
insb
jb
mov
or
cmp
sbb
lret
inc
dec
daa
mov
or
sub
nop
pop
rclb
xor
push
jge
xchg
xchg
ss
cld
mov
ja
jg
jne
mov
jmp
addr16
push
jae
pop
hlt
push
mov
lds
fldl
dec
sbb
in
inc
cmp
insb
fdivrs
test
jb
and
xchg
jp
inc
or
pop
in
nop
add
push
push
hlt
cmp
rcl
dec
fcoms
inc
int3
jns
insb
cmp
dec
or
cmp
notb
mov
xor
xchg
mov
cmpsb
jnp
and
adc
outsb
test
jae
mov
data16
sti
pop
sbb
pop
rcl
das
mov
ffreep
out
fcmovbe
xor
arpl
dec
imul
cmp
xchg
divps
lahf
out
or
jae
cmp
jae
sbb
mov
mov
pushf
cmp
mov
mov
bound
idivb
jp
jae
or
xor
pop
lods
js,pn
push
push
sbb
push
leave
push
std
popf
mov
lds
add
push
rcrb
mov
in
inc
xchg
jo
mov
pop
aas
and
cmpsl
push
mov
enter
fisubrl
test
cmp
xor
cmc
mov
dec
aaa
aas
jl
sbbl
cltd
stos
add
push
test
or
in
jne
pop
outsl
sti
sahf
jne
adc
aaa
out
sbb
jbe
mov
sti
jne
lea
lahf
or
jecxz
mov
rorl
addr16
insl
lods
mov
sub
xchg
sub
inc
mov
daa
mov
dec
in
push
divb
divb
addb
mov
mov
lahf
sti
ret
sbb
mov
xlat
cld
mov
inc
sbb
mov
sarl
in
mov
lods
sub
xchg
pop
adc
and
in
pop
sbb
adc
or
cmp
add
gs
insl
lret
sbb
adc
add
test
push
pop
inc
xor
inc
push
or
mov
ds
adc
fwait
or
ja
rorb
cld
pop
dec
jo
test
cmp
push
pop
dec
int
dec
pusha
add
mov
jge
cmc
add
push
sbb
mov
cmc
sub
or
sar
mov
lea
push
sahf
xchg
mov
shlb
subb
mov
lea
cltd
cmp
out
xor
not
dec
shlb
lcall
ficomps
mov
and
push
scas
push
sti
push
pop
xchg
sahf
out
pop
mov
insl
jb
and
push
fiaddl
cmp
xchg
add
arpl
sbbl
xchg
push
jb
sbb
loope
mov
cmpsb
ja
and
aad
inc
pop
jbe
ja
fisubrs
mov
adc
mov
xchg
rolb
adc
pop
dec
cmp
push
lahf
daa
sub
xor
icebp
test
mov
insl
aam
test
pop
int3
xchg
mov
pop
cmc
xchg
aad
movsb
cs
sub
push
addr16
and
cmp
pop
mov
cmpb
push
inc
pushf
xchg
xchg
xor
xchg
paddb
pop
insb
test
and
mov
xor
fdivrl
or
xor
add
inc
mov
push
or
gs
push
pop
cmpsb
and
dec
or
repz
pop
outsb
nop
fs
lret
push
ret
test
out
in
imul
push
test
insl
mov
and
sbb
insb
sub
cmc
or
popa
cmp
jbe
je
xchg
jne
stos
popf
or
into
pop
dec
cmpsl
out
xor
mov
add
repz
gs
or
add
out
xchg
out
ja
pop
fidivs
jp
pushl
mov
inc
pop
cs
pop
cli
jmp
lcall
int
mov
push
add
loop
ss
and
lods
mov
mov
stos
repz
lea
shll
sub
cmc
arpl
mov
lret
adc
bound
mov
inc
push
sub
ja
lds
outsb
adc
jg
cmp
scas
aad
sbb
push
and
loop
and
lods
push
push
xor
fs
cli
mov
adc
and
stos
testl
xchg
mov
in
mov
shll
mov
cmp
inc
pop
cmpl
stos
scas
pop
or
mov
push
push
jns
scas
in
inc
adc
sbb
cwtl
popa
clc
add
rcl
mov
in
out
loop
in
pop
xor
repz
mov
xchg
dec
out
sahf
mov
push
orl
mov
andl
or
sub
pop
and
mov
sbb
mov
ret
mov
cmpsb
call
jbe
aas
xchg
inc
add
out
xor
call
lock
dec
jge
lods
stc
pushf
lods
or
inc
mov
popf
mov
ret
push
adc
fwait
cmp
ljmp
test
inc
mov
mov
cmp
dec
mov
lds
ret
int
into
in
stc
pop
adc
adc
push
fwait
inc
incb
mov
mov
fucomip
and
mov
push
movsl
adc
cld
rcrb
cmpl
and
and
add
into
jo
negb
jecxz
imul
push
shl
push
cld
nop
or
movsb
arpl
ret
pusha
iret
push
sbb
jne
xchg
test
mov
arpl
insl
pop
mov
mov
mov
sbbb
cmp
adc
mov
add
jecxz
mov
and
scas
out
js
loope
fs
add
fldln2
fldcw
and
mov
rcll
push
test
jae
fmull
push
cmp
jbe
stos
add
pop
and
add
sub
sbb
mov
cmp
sub
adc
jae
imulb
loop
lahf
sbb
add
fcoms
dec
imul
hlt
shl
and
sub
fisubl
ljmp
mov
jecxz
pushl
sbb
adc
icebp
lcall
push
ret
cli
jns
leave
dec
repnz
inc
enter
adcb
add
xchg
icebp
sub
add
fnstcw
or
jp
adcb
push
sbb
jnp
fsubrl
and
outsl
push
test
rep
loopne
fs
mov
ljmp
xor
mov
xor
jns
loopne
and
lret
xor
jmp
mov
lds
clc
insl
dec
xchg
call
push
hlt
popa
dec
dec
dec
test
in
push
xchg
sbb
fiadds
out
cmp
mov
in
mov
add
mov
outsb
mov
shl
pop
enter
add
scas
xchg
mov
aam
repz
sub
add
loope
dec
xchg
xor
push
jge
enter
cmp
push
ud0
mov
add
xchg
jae
mov
adc
pop
sahf
shrl
aaa
push
pop
into
push
xchg
mov
xlat
int3
mov
xor
int3
and
cmp
xor
cmp
pusha
mov
push
cmp
fcomi
or
sub
sub
pop
push
jmp
inc
and
mov
sbb
push
cmp
pushf
push
jnp
mov
mov
xor
mov
sbb
push
xchg
pop
and
fdivs
jae
push
push
sbb
and
jecxz
imul
dec
adc
sub
fstpl
mov
pop
lea
push
and
lret
movsl
mov
cmpsb
cmp
lds
push
addr16
jne
sub
jge
inc
xchg
fcom
in
and
jmp
lods
arpl
xchg
shr
xchg
mov
add
icebp
icebp
jae
psadbw
ret
mov
sub
cmp
pop
out
cmpsb
mov
cmpsl
adc
inc
mov
stos
ljmp
add
aaa
inc
iret
movsb
jge
addr16
xor
lods
daa
aam
dec
bound
mov
nop
sahf
idivb
rcrb
mov
add
cmpsb
repz
scas
test
inc
leave
xchg
std
mov
dec
sbb
adc
push
jne
sbb
xchg
mov
imul
loop
lock
inc
mov
loopne
fwait
inc
scas
mov
rcrl
inc
rol
cmp
pop
xor
mov
out
dec
dec
iret
dec
addr16
in
movsb
xchg
movsb
or
xchg
fsubrs
adc
push
cwtl
xchg
mov
mov
push
jle
inc
jne
push
mov
push
xchg
push
pop
push
int3
js
dec
lods
scas
jae
cs
dec
adc
fmul
push
xchg
or
mov
stos
bound
add
pop
jle
and
pushf
sub
jbe
xor
shll
cmpsb
xchg
mov
cmp
pop
nop
mov
or
in
cmpsb
das
push
dec
add
cmp
in
test
stc
xor
dec
lods
js
jmp
iret
aad
out
sbb
mov
and
not
ss
jno
loopne
cwtl
xchg
popf
fcmovbe
fdiv
cmp
jae
xchg
mov
push
adc
adc
lret
mov
push
push
mov
stc
jge,pn
mov
cmp
leave
dec
mov
mov
sub
mov
in
inc
rcrl
in
xchg
push
mov
mov
lock
lcall
xchg
xchg
and
push
xor
dec
mov
pop
clc
adc
outsb
dec
hlt
repnz
dec
in
popf
jae
inc
mov
loope
adc
es
ficoml
and
cmc
jp
and
sbb
cmpl
push
adc
add
sbb
push
xor
cli
sub
test
xchg
mov
cmpsl
mov
das
dec
and
pand
popf
mov
movsl
mov
cmc
or
rcr
stc
and
mov
inc
pop
outsl
dec
jg
fcmovne
push
pusha
imul
fucomip
mov
inc
dec
xor
pop
push
add
test
or
in
shll
aad
and
mov
fstpt
or
cmp
pop
clc
mov
rorl
push
sarl
ds
aad
mov
pop
sbb
pop
mov
xor
imul
pop
inc
pop
adc
add
pusha
fs
sub
xlat
jecxz
pop
xchg
adc
rolb
xlat
sbb
and
rolb
das
xor
push
and
jmp
cmp
mov
leave
in
xor
xor
cmpsl
iret
divb
lret
xor
cs
aam
jae
xchg
dec
cmpsl
mov
xor
lods
xlat
out
inc
scas
pop
xchg
sbbb
int
xchg
rorb
mov
dec
lret
movsl
sbb
jmp
mulb
aad
adc
arpl
lahf
mov
mov
cmp
js
popa
call
insb
or
mov
and
movsl
lahf
aas
test
fs
inc
mov
flds
xchg
fwait
pop
xor
mov
ljmp
and
pop
jg
and
out
and
push
out
sbb
out
rcr
xlat
jl
push
aas
aaa
fsubrl
jle
shll
dec
out
pop
test
stos
loope
mov
or
add
add
jb
inc
cmc
xchg
jp
xchg
std
sbb
out
test
push
add
test
lods
push
mov
popa
mov
cli
mov
fmull
mov
mov
movsb
repnz
call
repnz
ret
fstpt
ja
decl
or
and
fstl
sub
fcomi
daa
jp
stos
mov
in
mov
ficoms
inc
mov
and
adcb
cwtl
cmpsb
inc
push
cmc
jb
iret
movsl
aam
cmpsl
hlt
push
lods
xor
inc
inc
cmpsb
pusha
cs
sti
mov
in
xchg
jb
xchg
dec
stos
adc
jl
pop
push
out
push
sahf
mov
and
sarl
adc
pop
adc
ret
pop
sbb
cmpsb
into
lret
or
xchg
push
scas
aaa
xchg
inc
cltd
mov
int3
jle
lret
stc
in
icebp
inc
rcrb
cmpsb
mov
mov
cmp
fwait
ljmp
fidivs
lcall
push
mov
push
dec
mov
adc
roll
test
xchg
push
and
xchg
enter
pop
add
rclb
xchg
mov
push
jb
outsl
call
fdivl
negl
insb
fildll
aad
and
frstor
ffree
push
je
int3
push
xchg
ds
negl
cmpsl
shlb
xchg
or
fdivs
push
data16
dec
loopne
aam
fimull
and
jl
mov
movl
sbb
mov
pop
or
sbb
xchg
das
jmp
call
mov
pop
xchg
jns
jo
insb
movsb
mov
xor
pushf
or
loop
mov
cvttps2pi
in
ret
adc
fadds
jge
mov
pop
mov
and
cmp
push
inc
jne
testb
xchg
mov
xor
inc
stos
mov
aad
imul
xchg
cmp
mov
xchg
xchg
sti
ret
dec
sbb
inc
je
test
mov
cmp
lods
mov
incb
data16
aam
pop
out
inc
jb
xor
cmpsl
pop
push
xor
movsl
pop
in
mov
lea
imul
dec
stc
into
call
lcall
orb
xchg
jmp
xchg
sahf
mov
mov
fnstsw
lea
dec
push
jne
scas
jp,pn
int3
mulb
movsl
add
fcoml
inc
cltd
mov
ret
subb
mov
in
mov
iret
inc
punpckldq
inc
sbbl
orb
sbb
pop
and
shl
xor
xchg
movsl
sub
xor
jl
ret
pop
cli
in
sbbl
add
int
ret
mov
push
sbb
add
notl
push
lret
xor
cmc
dec
mov
sub
lret
inc
popf
movsb
in
inc
cmpsl
in
bound
aad
shlb
pop
pop
dec
xor
stc
imul
and
adc
xchg
jmp
mov
inc
dec
lcall
mov
insl
mov
fsubp
test
rclb
movsl
cmpsb
and
mov
sbb
nop
push
popa
pop
push
sar
pop
fs
mov
jp
jae
sbb
ficoml
sbb
outsl
aam
xor
jg
pusha
adc
dec
or
jp
out
cmpl
xor
icebp
pop
in
mov
cmpsb
pop
mov
xchg
inc
xor
stos
mov
sub
ret
jo
lahf
xchg
push
push
orl
sti
filds
test
imul
xor
call
call
out
pusha
call
addr16
mov
and
fstps
mov
out
dec
mov
test
bound
ficomps
cmp
mov
jmp
aam
cwtl
mov
pop
jno,pn
nop
cmpsb
and
fsub
cmp
ljmp
arpl
push
add
clc
push
clc
push
into
cs
int
outsl
ror
mov
cli
dec
cwtl
mov
das
cs
aam
xor
es
mov
mov
mov
jns
sub
aas
cmp
popa
aaa
xchg
int
ja
aaa
mov
fsubrl
dec
iret
stc
imul
push
xor
data16
inc
pop
mov
repnz
or
push
add
xchg
pop
shl
xchg
mov
cmp
cmpsl
pop
mov
jl
leave
repnz
scas
add
das
jno
into
enter
mov
lock
jg
das
stos
pusha
adc
das
pop
stos
fstp
or
cmp
scas
cmp
ffreep
cmp
es
scas
int3
addr16
adc
pop
adc
pop
stc
sbb
sahf
fcomi
push
inc
pop
fildll
sbb
fadd
dec
lock
je
add
fdivp
inc
ficomps
add
fidivs
dec
add
jg
sbb
xor
stc
rcl
adc
push
testl
mov
ficoml
mov
outsb
mov
sub
mov
ds
pop
inc
arpl
inc
cli
xchg
mov
rolb
add
adc
test
repz
xor
scas
xchg
iret
dec
arpl
dec
mov
add
das
and
and
or
xchg
mov
rcrb
add
std
xor
pushl
faddl
ja
sub
bound
icebp
cwtl
and
or
aas
pop
xlat
mov
mov
lcall
dec
xchg
and
in
jmp
lret
shl
inc
xchg
adc
xorl
sbb
adc
or
hlt
gs
jno
scas
hlt
call
lods
fadds
xor
addr16
popa
add
mov
mov
mov
pushf
lea
jle
adc
in
jb
into
out
ret
jmp
insb
mov
out
testl
mov
mov
add
mov
daa
das
stc
adc
dec
loope
pop
outsb
pop
test
xchg
add
add
mov
mov
andb
xor
leave
adc
sbb
std
pop
shrl
push
mov
negl
xchg
sbb
jo
xor
pop
iret
push
push
ja
xchg
inc
aad
das
aaa
xchg
addr16
pusha
lret
sbb
push
out
iret
aaa
lods
mov
aad
or
fbstp
mov
and
or
insl
or
out
xchg
adc
retw
ljmp
std
cmp
mov
push
xor
scas
lahf
sub
push
inc
aam
arpl
xchg
sub
ffree
rorb
cli
lret
xor
xor
mov
ret
mov
and
out
pop
inc
xchg
xchg
jecxz
xor
mov
je
sub
pusha
mov
into
dec
and
andl
add
add
pop
fsubrs
and
inc
mov
mov
adc
stc
leave
fimull
adc
movsl
cli
shrl
or
cli
adcl
xchg
jne
or
sub
je
clc
arpl
adc
pop
and
int3
and
lds
mov
dec
nop
jecxz,pn
mov
popf
fdivrl
inc
test
scas
aas
pop
adcl
sub
add
push
and
dec
in
cmp
test
int3
mov
lret
dec
movsl
in
xchg
ret
add
mov
int3
or
jp
jp
add
push
dec
push
mov
push
inc
lret
and
cmp
push
popa
and
dec
xchg
loope
enter
jo
mov
mov
or
sarb
enter
pop
sub
fisttps
pop
scas
mov
es
lods
mov
push
shlb
imulb
jo
loop
cmpsb
mov
sbb
cmp
mov
jg
stos
jecxz
push
out
rcrb
and
jecxz
aaa
jno
or
and
mov
or
test
orl
cmpsb
mov
pop
or
js
adc
inc
or
sub
lea
mov
shr
mov
mov
jae
push
es
xor
dec
xchg
fcmovb
jns
add
and
leave
clc
adc
lcall
inc
add
subl
imul
xchg
or
xor
outsb
xor
and
adc
jmp
cmc
clc
aaa
in
mov
inc
mov
pop
mov
mov
pop
sbb
lcall
push
mov
fwait
dec
jns
enter
fidivl
daa
stos
aad
nop
pop
sub
mov
sahf
push
nop
shll
in
push
in
fisubrs
ljmp
int3
push
mov
test
adc
mov
jg
jne
jnp
cmc
fstpl
xchg
clc
jp
test
xchg
jne
dec
inc
or
jle
arpl
dec
in
imul
and
sti
dec
cld
pop
stos
mov
pop
mov
lods
pop
dec
dec
mov
pop
pop
cltd
enter
notb
ja
jae
out
pop
ds
scas
push
movq
int3
mov
aaa
sarb
idivl
jno
lods
xor
imul
orl
push
movsb
imul
shlb
scas
mov
loopne
ret
xchg
fstpl
ja
ja
xlat
add
mov
xchg
fisubrl
xchg
mov
xor
mov
inc
sbb
jg
mov
adcl
sbb
push
stc
sub
loope
sub
mov
inc
ds
jo
mov
sub
mov
rol
andl
clc
cmp
cmp
xchg
ret
mov
shrl
sti
xchg
outsb
xchg
leave
test
xor
push
in
xchg
lcall
in
jmp
bound
out
push
mov
jb
xchg
cmpsb
stos
jecxz
pop
dec
mov
shl
pop
test
add
bound
sub
or
mov
pop
xchg
inc
enter
les
jecxz
out
push
iret
imul
cld
int3
stos
add
lds
and
and
js
mov
xor
or
out
es
mov
push
lods
dec
jge
in
sbb
cltd
repz
stos
inc
repz
add
repz
mov
add
in
bound
out
push
sbb
mov
inc
scas
push
pop
adc
fisubs
or
pop
jb
jecxz
push
fwait
test
xor
push
imul
das
and
dec
mov
dec
push
sbb
out
mov
lods
push
leavew
inc
mov
push
sbb
push
inc
or
inc
addr16
scas
adc
pop
int3
mov
cwtl
out
mov
push
popa
jno
hlt
mov
jns
cmpsb
int3
stc
mov
sub
enter
shrl
and
mov
inc
mov
fld
loopne
fwait
cmp
fmuls
imul
repnz
fwait
lahf
mov
cltd
iret
int
dec
add
mov
jmp
jno
test
mov
mov
push
shl
and
sub
and
in
addr16
out
or
mov
test
dec
xchg
sub
push
adc
jnp
xlat
push
sahf
lods
sbb
and
popa
les
lret
dec
cld
sbb
and
cmpsb
in
or
lcall
and
and
jmp
icebp
mov
mov
and
push
cmp
inc
inc
jb
cltd
mov
dec
jl
cmp
cs
add
jno
rcpps
test
mov
mov
shl
mov
scas
pop
int
fsubrs
or
lods
rcll
dec
inc
sub
jmp
inc
sbb
scas
out
pop
jl
xchg
sahf
mov
loopne
mov
nop
or
push
dec
enter
flds
push
cmp
out
mov
sub
or
fists
minps
fidivrl
xor
fs
xchg
imul
insb
mov
sbb
cmp
xchg
mov
pop
sti
and
pop
dec
addr16
adc
shlb
mov
pop
pop
popf
add
or
inc
mov
arpl
in
inc
lcall
push
push
jbe
lds
and
nop
pusha
jae
xchg
es
fcmovnbe
cmc
pop
test
cmp
out
jb
rclb
mov
out
jmp
pushf
mov
dec
mov
cmpsl
fldenv
cmp
and
inc
mov
out
aas
int
mov
jne
cli
push
mov
dec
gs
adc
outsl
add
mov
out
sub
movsb
xor
ljmp
jge
jb
loope
jecxz
mov
sub
push
testb
or
mov
xchg
adc
and
sub
es
loop
mov
sti
dec
bound
add
sarl
out
jl
pop
cmp
adc
jmp
nop
into
xchg
pop
lret
faddl
push
xchg
xchg
call
or
add
shlb
cwtl
dec
ror
out
imul
xchg
pushf
movsl
out
stos
mov
push
xchg
aas
or
ffree
rcr
fnstcw
ret
icebp
xor
jmp
pusha
popa
mov
stos
dec
inc
mov
pop
xor
in
jnp
js
enter
js
mov
test
mov
adc
xchg
mov
mov
ret
mov
cmpsl
pop
and
cli
mov
repz
mov
mov
and
popa
push
cmp
rcrl
pop
inc
testb
or
je
push
rorl
xchg
scas
fidivl
lods
loope
sbb
mov
mov
jmp
cmpsl
dec
ss
mov
nop
xchg
add
bound
test
lret
and
cmp
les
mov
fyl2x
repnz
lea
test
or
push
outsb
push
add
cmp
stc
std
sbb
pusha
adc
sub
repz
incl
mov
inc
aam
cs
fistpl
outsb
mov
testb
dec
lcall
push
sbb
push
sub
fbld
cld
sub
push
xor
add
mov
lock
fbld
sbb
mulb
cmp
jg
out
add
inc
adc
push
es
fiadds
insl
mov
popf
xor
popf
test
or
push
cmp
ljmp
ja
fdivrl
out
sub
je
push
inc
jl
xor
jl
jno
loope
mov
popf
xchg
sarl
jmp
ficomps
test
mov
xchg
movsl
loopne
ljmp
movsl
push
lock
mov
mov
js
mov
fwait
and
clc
iret
mov
adc
dec
cmc
sub
fwait
repz
and
lret
mov
mov
popf
cmp
ret
mov
cmpl
cmp
leave
and
xor
aam
fldl
insl
dec
ss
mov
jmp
out
dec
or
mov
jae
call
daa
iret
mov
ja
cltd
mov
mov
ja
mov
lea
adc
dec
loope
jecxz
xor
ret
push
dec
cmp
add
aaa
xor
shll
cmpsb
inc
sub
mov
push
push
int
xor
fs
and
stc
jnp
xor
daa
dec
data16
aam
into
test
sub
push
cmpsb
xchg
and
outsl
in
sbb
mov
cmp
ficomps
rcl
fmuls
dec
in
pop
xor
imul
mov
fucomi
sbb
aas
mov
add
ss
sahf
fldl2e
xchg
ljmp
pop
sahf
inc
outsl
daa
stc
je
shlb
mov
cmp
mov
sbb
mov
xor
xchg
loopne
loope
add
pop
das
or
cli
cmp
push
cs
ljmp
ds
push
cmp
iret
inc
mov
popf
fldl
xchg
repnz
jp
sub
inc
scas
sbb
or
adcb
cmp
mov
aad
inc
xchg
ja
int3
leave
cwtl
test
mov
pop
inc
push
lret
sub
adc
imul
jecxz
adc
cmp
push
dec
or
andl
sbb
cmp
shll
sub
in
nop
xor
clc
mov
fstpl
movsb
and
andl
jnp
aam
pop
gs
adc
movsb
std
add
cmc
dec
andb
or
cmp
push
sub
std
pushf
orl
mov
lea
sbb
mov
rolb
pop
lods
mov
int3
xor
or
cmpsl
fisubrl
fisubs
jo
outsl
cli
repz
sub
jecxz
outsl
cli
dec
or
sub
cs
aas
jecxz
jae
fwait
stos
outsb
push
mov
jo
push
sub
pushf
xchg
and
testw
mov
lcall
mov
pop
sarb
pop
rcl
cld
cmp
add
dec
push
repz
push
pushf
jo
lcall
pop
movsb
out
add
inc
ss
popf
and
out
mov
pop
aaa
push
inc
pop
ljmp
pop
pop
stc
mov
aas
sub
dec
int3
pop
fdivrl
stc
andb
adc
dec
sub
loopne
hlt
ss
pop
imul
addr16
dec
mov
ret
mov
stos
lret
sbb
nop
inc
jl
sti
cmc
cmpsb
push
jne
cmp
jns
adcl
push
fldt
popl
push
aas
adc
sti
mov
cmp
sbb
ljmp
ja
or
push
adc
iret
xor
inc
test
dec
and
out
xchg
jb
xchg
into
scas
add
int
or
popf
cld
movsb
stc
or
and
hlt
mov
xchg
dec
or
inc
xchg
cs
or
lods
ja
jo
sbb
inc
daa
adc
jp
adc
aaa
pop
ljmp
push
inc
fadd
mov
mov
sbb
in
lahf
or
push
test
inc
aaa
and
fsubrl
frstor
jge
out
mov
in
cmp
push
in
push
sub
popa
insb
inc
out
orl
sbb
fdivrl
pushf
dec
mov
jecxz
loopne
jl
inc
bound
push
int
cmp
pop
ficoms
std
xchg
mov
in
cs
and
mov
push
xchg
push
mov
sub
int
push
shlb
xchg
xlat
mov
mov
movsb
mov
xchg
pop
sbb
mov
push
cmp
scas
mov
add
cltd
xchg
mov
das
mov
adc
add
push
adc
inc
ds
repz
sbb
dec
pop
dec
repz
lret
arpl
js
sub
rol
xchg
std
fsubrl
out
je
lock
fdivr
or
rcr
enter
push
stos
cmc
lret
iret
mov
ja
lahf
out
fimuls
and
pop
xchg
pop
ret
int
shl
jne
and
sub
mov
frstor
scas
push
ret
test
imull
repnz
popa
mov
outsl
mov
sbb
ret
cli
add
sbb
mov
imul
std
js
pop
adc
icebp
jns
loope
pop
xchg
pop
ret
sbb
scas
dec
mov
ds
add
jns
inc
lcall
frstor
nop
out
jmp
and
leave
rol
rcll
movsl
cli
jno
push
out
rclb
sbb
xchg
dec
dec
push
andl
dec
iret
pinsrw
mov
lods
cltd
repnz
pop
mov
and
adc
add
int
lock
stos
cs
mov
in
out
fldenv
adc
push
pop
pop
cmc
repnz
mov
in
cwtl
add
jae
inc
jl
and
mov
cmp
push
das
rcrb
in
sub
jmp
cmpsl
sti
stc
stc
ret
xchg
cmp
mov
sar
les
scas
mov
jg
inc
orb
adc
stc
sbb
xchg
scas
repnz
cmp
stos
mov
mov
jae
mov
or
sub
mov
aas
imul
jmp
scas
xor
push
insb
fdivrs
in
js
ljmp
popa
movsl
mov
or
imul
filds
mov
mov
lock
popf
adcb
stos
or
xchg
popf
xor
test
inc
repz
addl
push
out
aam
jb
out
repz
ret
jne
sub
jnp
push
dec
scas
dec
subb
push
sub
int3
out
mov
aad
xor
repz
divb
data16
loop
sar
mov
xchg
shl
es
mov
sub
dec
adcb
push
push
nop
push
push
int
inc
addl
outsl
mov
stos
das
ret
test
aad
or
and
pop
push
daa
icebp
fists
push
jp
popf
cmpl
xchg
and
aam
cmp
push
scas
cmpsb
cmp
cld
mov
dec
cld
inc
pop
jmp
data16
pop
inc
sbb
loop
imulb
xor
cmp
sub
and
div
jge
pop
iret
xor
icebp
pop
sbb
scas
lret
cwtl
add
sti
or
sub
dec
sbb
mov
cwtl
mov
fwait
add
stc
addb
insl
pushl
cmp
ret
popf
sahf
add
xchg
mov
and
lcall
lods
pop
ds
add
mov
into
pop
jne
cld
pop
das
jae
push
inc
ja
inc
or
mov
lret
jne
lret
in
mov
xchg
call
sub
jae
xchg
cmp
daa
movsb
rorl
mov
les
jnp
js
or
jo
shl
mov
aas
mov
andl
ss
dec
pop
shrb
jno
jb
fadd
enter
push
mov
push
jae
push
sub
sbb
dec
push
es
dec
mov
dec
push
push
cmp
adc
scas
mov
fcoms
add
cmp
lods
mov
xchg
inc
sbb
jns
popf
rcrl
lcall
pop
jb
aam
loop
inc
ja
aas
sub
and
lods
push
lock
mov
jle
test
fmulp
and
stos
add
dec
movsb
push
int3
push
cmpl
mov
enter
lods
mov
movd
mov
adc
inc
in
mov
cmpsb
js
repz
xchg
fwait
or
dec
fwait
dec
cmp
xchg
cmp
pop
xor
sbb
std
pop
xlat
lret
std
xchg
push
and
jno
pop
pop
adc
jo
sar
adc
ss
das
mov
mov
data16
sub
rcr
test
sub
inc
leave
dec
inc
shr
in
jp
and
push
pop
mov
mov
cmpsl
inc
and
mov
cmovs
mov
mov
sbb
lcall
xchg
mov
sar
call
jmp
push
xchg
jmp
add
in
loop
decl
pop
pop
scas
mov
sbb
fistpl
push
add
rclb
repz
cmpsl
mov
out
lods
mov
repz
adc
inc
bound
or
leave
ret
sub
in
push
xor
aam
adc
pusha
cmp
and
mov
std
fwait
or
adc
insb
add
dec
lcall
test
scas
sti
jmp
outsb
xor
pop
gs
jl
pop
or
cmpl
jle
out
fs
dec
mov
inc
or
sbb
sbb
cld
cltd
vpmaxsq
shll
dec
and
xchg
adc
das
mov
sub
lahf
mov
lahf
ret
sbb
pop
xor
aad
ss
fsubrs
pop
jle
adc
cmpsb
test
stc
and
ja
in
pop
aad
js
mov
popa
in
sub
cmp
cmp
lods
aas
testb
outsb
lcall
xor
mov
icebp
icebp
mov
adcl
arpl
pusha
xor
pop
ret
mov
push
mov
inc
cld
dec
lret
mov
mov
mov
mov
inc
sbb
sub
pop
das
sbb
popa
movsb
push
roll
nop
or
hlt
push
icebp
das
shll
je
add
adc
movl
jmp
jmp
adc
adc
and
jns
sbb
ds
jle
cmp
xor
jne
xor
inc
xor
cmpsb
addr16
fucomip
or
or
push
decl
push
pop
imul
pop
cmp
cld
and
jmp
xor
or
xor
pop
dec
dec
ljmp
mov
in
repz
mov
mov
jmp
xor
sub
das
sbb
sahf
lock
rolb
sub
in
xor
jbe
in
pop
sub
cmp
bound
insl
int
dec
push
shl
mov
lahf
cmp
mov
sbb
js
outsl
cmp
test
sub
sub
test
repnz
xlat
bound
jge
pop
lock
mov
inc
adc
testl
mov
test
adc
cli
out
nop
stc
mov
scas
sub
mov
or
mov
add
faddl
push
inc
lds
ljmp
das
clc
jecxz
test
popf
push
fs
lds
mov
or
pop
outsl
mov
or
and
adc
adc
aad
fisubrs
popa
lret
adc
scas
int3
add
imul
imulb
adc
mov
adc
mov
sbb
pusha
inc
je
cmc
lea
rorb
fwait
cmpsb
cli
push
or
leave
push
mov
repnz
insb
loope
sahf
sahf
push
js
add
jp
dec
out
fisubrl
xchg
cmp
and
xchg
pop
lock
mov
lods
cld
adc
leave
mov
fwait
pop
ja
jb
ret
jle
mov
repz
popf
inc
xchg
sbb
inc
dec
mov
mov
jg
fwait
xchg
cmp
push
popf
sub
addr16
lret
or
call
cmpsl
sbb
jbe
bound
rorb
pop
adc
xchg
mov
dec
cwtl
xlat
testl
pop
add
jns
cmp
mov
aad
sbb
add
stos
mov
jne
adc
add
fs
dec
loop
inc
xor
cmp
mov
arpl
insl
daa
int
shlb
dec
rolb
bound
cmp
aas
ret
push
mov
cmpsl
adcl
js
imul
and
add
sbb
dec
jg
in
adc
jle
or
mov
mov
icebp
jns
es
xchg
leave
out
lods
int
cld
popa
or
lds
aaa
pop
hlt
icebp
movsb
sbb
inc
rolb
push
add
or
repnz
xor
ret
and
jmp
out
ret
lcall
jae
mov
sahf
bound
mov
dec
roll
jbe
rorb
mov
mov
dec
iret
je
loope
loopne
jo
out
adc
loopne
cmc
mov
and
push
daa
addr16
scas
ret
movsl
std
pop
sbb
lcall
mov
add
ss
mov
jnp
sbb
lods
mov
pop
lahf
jne
pop
dec
fisubs
roll
in
jp
mov
cs
test
pop
outsl
mov
push
in
aas
call
je
xlat
aaa
push
shlb
inc
in
mov
add
add
xchg
push
sbbl
xor
sbb
sahf
ljmp
and
cmp
lods
dec
dec
inc
mulb
xchg
mov
and
insl
lea
adcl
dec
jo
in
test
jl
sub
sbbb
dec
mov
ljmp
lahf
rorl
ja
or
shll
outsl
sbb
das
pop
fdivp
pop
mov
jge
popa
jecxz
out
hlt
inc
inc
ret
test
mov
in
clc
xchg
cs
jp
aad
icebp
inc
leave
hlt
cmp
adc
punpckhdq
and
cltd
xchg
stc
dec
sub
add
cwtl
fstpl
fs
jne
sub
sub
ds
fsubl
stc
xor
mov
jge
dec
add
leave
fcom
lea
or
push
xchg
imul
lcall
push
outsl
lahf
jle
mov
out
cld
dec
popa
ss
cmpb
icebp
mov
jle
pop
test
es
ffree
pop
stos
cltd
test
inc
add
mov
push
mov
gs
call
sub
sbb
test
add
adc
and
mov
gs
adc
cld
rcr
push
lds
xlat
out
vpunpcklqdq
xor
sub
loope
mov
sbb
dec
enter
mulb
cmp
dec
les
stos
xchg
jle
xchg
les
stc
cli
adc
and
ret
test
sub
adc
insb
or
daa
fs
xchg
mov
ds
call
mov
loop
jo
cld
lods
inc
mov
inc
cmc
xchg
adc
xchg
adc
cmp
mov
pop
call
aas
out
mov
mov
dec
cmpsb
and
mov
cmp
in
loope
movsl
loopne
dec
pop
or
jbe
xchg
fimuls
xchg
xor
repnz
mov
xchg
std
jmp
loopne
outsl
xchg
push
das
add
mov
les
xor
pop
xchg
mov
inc
xchg
mov
lcall
scas
sbb
cwtl
rcrb
lret
xchg
fists
imul
ss
loopne
ljmp
mov
mov
into
out
add
push
iret
aaa
cmp
fdivr
mov
cmp
xchg
movsb
loopne
fists
rorb
int
jle
sahf
iret
cltd
mov
lcall
aas
leave
mov
fs
dec
movsl
es
shll
rorb
xchg
push
inc
push
xchg
js
sbb
or
sbb
cmc
or
call
inc
add
int3
arpl
xor
sbb
data16
cmp
xor
in
pop
cs
cmpsb
popf
mov
xor
aad
sub
pop
inc
test
flds
mov
mov
mov
pop
push
cld
pop
jbe
or
sti
fs
sbb
push
pusha
xchg
out
ljmp
or
je
addl
mov
mov
test
mov
mov
jbe
rolb
fcomi
dec
pop
jno
adc
mov
pushf
or
mov
adc
sub
mov
inc
push
orl
xchg
icebp
pop
es
test
mov
fdivl
lods
ljmp
push
test
ret
dec
sbb
adc
stos
movsl
in
mov
iret
loop
ret
repz
in
pop
adc
mov
stc
scas
jge
imul
sahf
sub
inc
das
aad
push
flds
pop
xchg
pop
or
lcall
in
cmpsb
rcll
mov
sbb
faddp
add
shlb
mov
rcr
inc
pop
mov
dec
jno
xor
je
cwtl
jge
lcall
jg
mov
inc
push
pop
fnstcw
out
stos
sub
add
das
fwait
addb
rclb
aas
xor
sub
cmpsl
mov
jl
mov
cli
push
cmp
add
push
lods
or
divl
and
mov
cmpsb
ret
push
mov
xchg
imul
scas
xchg
pop
rcrl
lea
fimuls
mov
arpl
in
mov
mov
push
push
push
scas
lcall
jmp
rcrb
pop
shr
mov
cwtl
mov
mov
movsb
jle
pop
mov
pop
push
addr16
cs
nop
jbe
or
dec
daa
loope
jle
and
lock
pop
sbb
adc
jmp
mov
xlat
xchg
cmp
xor
xorb
movsl
ds
mov
inc
mov
and
ds
mov
add
addb
or
push
xor
in
and
lahf
shll
cmpsb
pop
xchg
sbb
pop
stos
xchg
xchg
jecxz
arpl
shrb
jae
sub
jle
mov
mov
daa
jge
clc
orl
and
push
int
push
loopne
sbb
jno
mov
iret
add
lahf
cmp
mov
iret
cmc
mov
imul
mov
push
inc
rcrl
int
and
pop
cmpsl
add
imul
mov
dec
mov
hlt
push
sti
jb
push
cmc
nop
in
jb
or
jae
in
or
addr16
ret
outsb
popf
ret
and
cld
pop
adc
inc
pop
dec
mov
cmp
dec
cld
sub
sbb
mov
dec
xor
push
nop
pop
pop
outsb
mov
decl
jge
imul
pop
out
call
sbb
xor
pop
test
test
mov
lds
jo
loope
ret
idiv
das
pop
inc
movsl
lock
int
ret
loope
ret
or
enter
mov
call
int
xchg
and
xchg
daa
add
inc
and
pop
loope
lods
sbb
push
mov
vmwrite
fiadds
ss
leave
jno
pusha
outsl
ss
push
xchg
out
xchg
cmp
ja
out
sub
add
or
and
sbb
mov
movsl
add
cltd
repnz
dec
sub
out
ret
int3
mov
sbb
xchg
and
mov
inc
adc
push
out
add
cmp
mov
mov
ljmp
sbb
xchg
int
xor
add
cmc
or
jp
jecxz
mov
cmpsb
or
loop
add
iret
jo
dec
mov
aad
icebp
dec
adc
rcrl
pop
adcl
flds
es
xchg
fisttpl
jg
into
sbb
testb
and
mov
and
ljmp
lahf
jae
test
addr16
cmpb
dec
test
push
cwtl
sbb
push
fcomps
aas
inc
je
xchg
fs
call
xchg
mov
dec
subl
cmp
addb
or
mov
fistl
xor
pop
ret
and
or
cmp
pop
lea
and
jb
xlat
mov
inc
inc
cs
in
ja
inc
mov
outsb
push
ds
fnstenv
mov
cli
mov
and
jmp
ss
xor
out
sbb
and
jecxz
xchg
xchg
lea
inc
pop
das
into
push
stos
adc
dec
mov
cmp
dec
shlb
mov
jo
std
lock
or
les
or
xchg
xchg
push
nop
popf
push
xchg
xor
les
add
sti
mov
push
aas
or
ja
jo
movsl
mov
sbb
and
lds
dec
cltd
push
pushf
inc
jg
xchg
dec
mov
push
outsl
in
sub
dec
xchg
xchg
out
dec
cwtl
cli
mov
xlat
shrd
cltd
sub
and
mov
jno
daa
pop
sbb
cmpsl
jge
test
fisttpll
and
je
jo
xlat
inc
lret
pop
mov
dec
adc
pushf
jae
lret
int3
push
fidivrs
add
dec
mov
adc
ret
ss
jns
xchg
add
pusha
fistpl
adc
pop
sub
mov
loope
test
rcl
pop
push
add
mov
clc
fstpl
rcrb
push
pop
and
scas
push
sbb
jne
gs
inc
xchg
pop
push
cwtl
and
pushf
pop
les
insb
in
pusha
xor
lock
fstpl
mov
nop
push
sahf
insl
pop
sbb
test
mov
pop
cs
jb
xchg
xchg
sbb
std
mov
jne
or
cmp
dec
lock
xlat
pop
adc
fcmovnu
movsl
pop
xor
pop
inc
dec
xor
loope
vphaddubq
push
push
lods
mov
sub
daa
sub
fnsave
ret
in
lcall
arpl
sub
test
dec
fstp
sub
add
movsl
popf
jp
pop
je
pop
xor
mov
insb
sub
mov
pop
add
addb
jno
mov
and
or
adc
in
cli
cmpsb
int
shll
xchg
and
lods
fidivrl
push
mov
sub
mov
movsb
add
or
add
dec
sbb
clc
jb
enter
sahf
aad
xor
enter
daa
sbb
adc
mov
cmp
fisttps
cmpsb
mov
mov
hlt
and
mov
outsl
push
mov
je
mov
cmp
rclb
fistpl
adc
push
aam
xlat
sub
mov
in
adc
out
mov
lret
movsb
jae
inc
not
dec
ss
sub
add
dec
js
pushf
jno
or
fld
into
push
adc
sub
xchg
pop
test
pop
jns
jl
cmp
mov
xchg
repnz
mov
dec
jb
shll
push
fs
fsubs
ljmp
and
js
push
or
jmp
mov
das
adc
mov
pop
adc
rcl
std
pop
adc
rclb
cmp
mov
inc
cwtl
add
cmp
js
das
pop
inc
pop
push
sbb
popf
xchg
scas
lret
jne
inc
xchg
jo
das
pop
jle
inc
xor
push
loope
stos
xor
sbb
jmp
jbe
je
loope
out
fmuls
inc
orb
mov
sub
mov
enter
daa
lds
je
int
fwait
lret
adc
jl
imul
xchg
add
sbb
mov
mov
jb
dec
jb
lret
es
adc
mull
push
ljmp
lret
mov
mov
pop
push
cmp
lods
mov
lock
ret
iret
xor
test
cwtl
mov
imul
das
lods
psubsb
test
in
loope
jl
push
jle
add
movsl
popl
cmp
mov
mov
outsb
fmulp
add
fldl
inc
cld
push
mov
stos
mov
aaa
leave
aaa
mov
dec
sub
dec
aad
cmp
push
mov
loop
mov
fildl
stc
les
or
dec
mov
or
das
inc
dec
adcl
movsb
arpl
dec
ja
dec
inc
cmp
mov
push
add
push
mov
in
push
mov
ja
pusha
fwait
je
sbb
mov
sub
out
fildll
mov
push
mov
jmp
mov
popa
mov
inc
push
push
push
xor
add
xlat
or
or
cwtl
popf
mov
mov
adc
fcoml
sbb
jo
lods
xor
mov
call
call
mov
xor
add
jns
sub
mov
mov
jbe
mov
fistl
sbb
mov
sbb
shrl
xchg
adc
fnsave
cmp
mov
pop
mov
or
pop
add
lds
jecxz
sarb
jl
dec
in
jecxz
push
inc
cmp
pop
inc
xchg
mov
pop
enter
fisubrs
test
movsb
mov
mov
leave
cmp
cwtl
xor
jmp
dec
xor
cmp
aas
xchg
pop
mov
xchg
popf
xor
test
ja
dec
insl
pop
and
adcb
add
and
leave
add
xchg
ljmp
jg
mov
cmp
sbbl
out
or
fisubl
jne
aad
adc
push
push
mov
fsubrl
mov
add
arpl
ja
stos
shr
pop
dec
enter
push
push
in
xor
lcall
pop
inc
inc
and
mov
sbb
mov
outsb
fidivrs
popa
adc
lods
int3
xor
cmp
daa
add
or
es
cmp
bound
shlb
shlb
add
fists
pop
movsl
pop
dec
sbb
subl
movsb
xchg
lock
ja
pop
xor
ljmp
inc
inc
out
mov
dec
aad
movsb
mov
jne
loop
iret
and
dec
js
outsl
out
pop
cmp
pop
lret
dec
mov
and
lret
push
push
lds
and
repnz
out
cmpsb
ret
mov
cmp
ds
cmp
xchg
mov
sbb
sbb
pop
stc
sahf
rcr
xor
movsl
push
xchg
add
mov
gs
mov
notb
sbb
in
push
mov
mov
cmpsl
fdivr
dec
insl
stc
sbb
xchg
mov
or
pop
push
jne
sub
jno
jae
loopne
dec
jp
mov
lods
pop
hlt
mov
adc
js
push
cmc
dec
ret
mov
inc
add
cwtl
lock
int3
xchg
leave
cltd
sub
or
in
pop
lea
add
add
push
mov
jp
jb
and
testl
fdivl
pop
out
pop
mov
mov
adc
or
ljmp
lahf
jge
jnp
imul
repz
out
ret
repnz
scas
sbb
stc
leave
dec
cmp
lret
mov
xchg
pop
aas
and
mov
leave
loope
icebp
sub
or
adc
fdivs
push
dec
cwtl
jae
mov
xchg
or
inc
scas
adc
inc
imul
push
andb
in
xor
cs
jno
cmp
mov
cli
enter
fmulp
mov
sahf
cmp
jecxz
push
inc
ret
ljmp
or
sub
loop
mov
cmp
inc
mov
or
sub
or
repz
cmp
or
imul
shll
push
sbb
aad
loopne
push
push
orl
loope
jmp
xchg
stc
mov
fistpl
jle
andb
pop
ret
adc
adc
jae
inc
clc
sbb
aaa
imul
adc
loop
cmp
std
pusha
jge
and
mov
xor
or
push
lods
lret
mov
sbb
xchg
pop
js
dec
icebp
dec
and
lods
inc
mov
sub
jg
sahf
jbe
xchg
push
cmp
lods
adc
add
int
dec
sarl
add
sbb
inc
fucom
lret
mov
repnz
sti
adc
add
lcall
dec
loopne
cld
push
lret
dec
mov
int3
fcoms
inc
adc
jne
fsubrs
cltd
push
shrl
mov
jp
sub
cmc
mov
mov
or
test
sbb
inc
xchg
mov
hlt
xor
push
lret
stos
arpl
ret
dec
movsb
ss
add
pusha
pop
fs
lea
pop
xlat
sub
shrb
icebp
sub
push
sub
rcll
and
imul
mov
stos
movsb
lcall
or
gs
xchg
repz
jns
shrb
fmull
fisttpl
gs
xor
pushf
test
out
xchg
push
jnp
mov
mov
aas
sbb
adcl
mov
push
es
inc
jmp
push
arpl
xchg
scas
sub
sti
pop
imul
aam
or
add
dec
in
mov
sbb
cmp
das
and
and
pop
inc
xor
dec
lods
pop
push
jge
xchg
imul
xchg
arpl
dec
dec
or
mov
push
mov
shlb
addr16
mov
add
and
jg
testb
xchg
xorl
adc
mov
idivb
or
ficompl
fcomps
aad
and
add
lods
movsb
push
dec
nopl
pop
mov
repnz
lret
mov
push
shl
xchg
iret
movsl
mov
and
mov
cmp
inc
or
imul
outsb
mov
jne
sbb
mov
xchg
inc
les
lock
into
sub
shrb
jo
test
mov
pushf
inc
mov
nop
push
add
push
mov
les
aaa
js
pop
inc
adc
call
pop
xor
shll
insl
outsl
push
divb
push
jle
add
test
sahf
jbe
aam
push
pusha
ja
or
ljmp
fcomps
in
cmp
pusha
cmp
push
xchg
mov
loop
pop
adc
mov
insb
popa
or
rclb
mov
cmpsl
or
pusha
sub
out
cmp
dec
imul
mov
js
sub
mov
push
inc
or
popf
andl
sub
mov
jbe
cs
jbe
mov
and
imul
loop
xor
xchg
inc
cmpb
outsl
mov
movsb
cmc
stc
jmp
fcmovnbe
lret
imul
fistpll
in
pop
cmp
and
cmp
push
push
cmpsl
loopne
gs
sbb
pop
push
pop
jns
push
xchg
pop
in
into
inc
xchg
pop
sub
addr16
mov
icebp
icebp
ljmp
test
loop
jecxz
fisttpl
nop
push
aaa
pop
xor
xor
dec
shlb
and
sbb
pushl
out
cld
mov
mov
dec
bound
jnp
adc
test
xor
sub
fisubs
fwait
jp
fmull
push
shrl
scas
sub
int
mov
xor
add
test
sbb
enter
jge
and
test
push
aad
add
imul
jae
pop
loop
pop
shl
lds
adcb
das
out
pop
pop
adcl
test
test
jae
scas
push
inc
movsl
lock
mov
shrb
or
jp
push
hlt
stos
nop
or
push
ljmp
adc
mov
and
fistps
scas
iret
cmp
push
popf
dec
imul
xor
xorb
sbb
shlb
aaa
outsl
cmpsl
in
daa
arpl
orb
jmp
pushf
inc
sub
mov
pop
pop
lcall
push
push
cltd
sbb
dec
cs
push
int
xchg
xchg
testb
jmp
cmp
rol
cmp
clc
rcrl
cmpsb
mov
shr
push
sbb
and
mov
xchg
dec
loope
pusha
mov
cmp
lret
stos
mov
xor
arpl
scas
mov
add
stc
incb
xor
and
xor
neg
cmp
dec
lret
push
sbb
xor
addb
mov
adc
xchg
jne
push
add
xlat
in
rcrl
inc
mov
xchg
mov
or
xor
or
fistps
inc
scas
push
and
push
repnz
jo
adc
sbb
pop
jge
ret
and
repz
jae
popa
jle
or
dec
push
cmc
adc
fs
shlb
fistpl
sbb
pop
stc
mov
xchg
rcrl
push
int3
adc
push
test
sbb
scas
movsl
mov
xchg
push
ss
dec
mov
mov
mov
js
xchg
mov
out
hlt
lcall
and
out
pop
call
push
mov
push
imul
cli
jp
pop
aad
sub
das
push
inc
sbb
mov
xor
or
mov
mov
mov
sahf
inc
sbb
sub
inc
hlt
mov
sbb
jb
push
xor
ffree
xchg
mov
stc
iret
inc
jl
ror
xor
mov
jge
cmp
and
add
stc
add
sti
sub
add
pop
jg
push
adc
jg
xchg
outsl
aam
std
popl
mov
sbb
mov
fiaddl
jne
rcrb
andl
shrl
test
lahf
inc
out
jecxz
xor
dec
add
xchg
jg
mov
icebp
sbb
jge
sbb
clc
jbe
xchg
jmp
and
mov
ret
mov
dec
data16
mov
outsb
xchg
shrl
jo
pop
aad
icebp
gs
fisttpl
adc
faddp
lret
mov
notl
sbb
divl
sti
mov
addr16
xor
mov
jb
shll
aas
cmp
sti
popf
hlt
scas
add
dec
inc
sub
pushl
mov
cmp
mov
dec
sbb
orl
xchg
cmpl
jne
mov
dec
mov
lods
test
xchg
sbb
in
xor
add
scas
xchg
cmp
xor
sahf
call
int
mov
adc
fwait
and
mov
dec
mov
mov
mov
jae
mov
add
ljmp
dec
daa
leave
adc
add
ret
ja
adc
imul
mov
pushf
fisttps
aam
adc
mov
jle
scas
xlat
out
cmp
fbstp
fcmovb
out
in
jb
dec
push
xlat
sbb
mov
push
fs
jge
mov
lret
and
insb
xchg
in
push
icebp
sbbl
jge
std
and
loopne
lods
scas
outsl
push
shlb
out
es
call
sbb
xor
sbb
dec
cmp
hlt
and
add
and
xchg
push
imul
pop
fisttps
pop
ss
mov
jle
adc
mov
xlat
pop
es
sbb
xchg
hlt
call
inc
pop
ljmp
push
mov
cmp
jle
scas
add
in
repnz
imul
ds
cld
outsb
leave
das
insb
mov
ss
inc
mov
insb
adc
fnsave
vunpcklps
jae
dec
cmp
in
push
sub
faddl
push
jns
push
adc
dec
jno
mov
sbb
jl
jb
ss
loopne
mov
stc
inc
push
popa
mov
add
and
dec
push
fwait
xchg
int
push
nop
jns
cli
outsl
es
addr16
inc
and
xchg
repnz
jp
sub
sub
lea
inc
mov
sbb
dec
test
adc
pop
dec
jmp
dec
ud0
jb
out
push
call
add
insl
cli
imul
pop
jns
aaa
push
inc
shlb
pushf
cmpb
mov
sbb
add
pop
mov
test
shrl
push
icebp
push
popa
mov
add
or
enter
gs
pop
inc
mov
pop
pop
rorb
push
jns
mov
inc
into
bound
test
jle
or
loop
lods
cmp
mov
dec
lret
dec
sbb
lock
jg
mov
push
aas
pop
ret
lret
jnp
mov
pop
pusha
fs
jne
lds
pop
lret
jg
cmp
lret
mov
adc
and
dec
mov
mov
mov
sbb
mov
lea
ret
fldenv
aaa
cmp
xchg
fwait
ret
adcl
in
ret
ljmp
cmpsl
test
pop
mov
je
adc
pop
shrl
mov
mov
repz
sti
xchg
imul
push
mov
in
xacquire
loope
pusha
xor
lcall
aad
ficompl
push
adc
and
or
inc
out
out
pop
inc
dec
lods
inc
mov
mov
mov
mov
lods
add
lods
hlt
cmc
add
pop
dec
das
movsl
hlt
adc
fisttps
dec
lcall
je
rcl
mov
flds
pop
and
mov
int
pop
mov
mov
leave
push
mov
push
scas
mov
scas
dec
jne
push
push
cmc
xchg
dec
lods
ds
in
shll
aaa
addb
aad
xor
int3
inc
clc
clc
jne
jp
test
pop
insb
pop
shll
outsl
adc
push
mov
in
mov
adc
out
xchg
repnz
push
add
dec
adc
stc
pop
jo
fistl
push
jb
and
dec
mov
ret
mov
xchg
data16
cmp
inc
ds
outsl
shlb
xor
jecxz
fadds
xor
push
pop
sti
movsb
adc
or
cwtl
into
xor
out
dec
leave
add
sub
push
jne
in
stos
xor
push
jp
lock
jmp
push
mov
mov
push
fdivrp
add
pop
int
mov
xlat
push
enter
scas
pop
ljmp
mov
cmp
es
jp
mov
mov
push
std
in
icebp
addb
mov
jno
xor
cmp
dec
or
lods
add
shlb
js
adc
test
xchg
push
pushf
and
fwait
movsl
hlt
out
enter
sub
pop
lcall
add
or
push
mov
mov
lret
cmpsl
mov
and
sub
aam
push
sbb
lods
push
xchg
shr
cmpsb
lock
pop
outsl
pop
mov
faddl
std
xor
push
sbb
dec
push
jnp
cmp
push
subb
and
insb
mov
mov
in
in
xchg
inc
push
dec
mov
or
inc
outsb
dec
xchg
dec
jge
push
test
and
mov
ljmp
pop
inc
xlat
stos
pop
frstor
xchg
mov
jns
dec
xor
xchg
js
es
fld
sub
lret
pop
sub
aad
test
mov
adc
mov
testl
fdivrl
lods
mov
ljmp
or
pop
sub
sbb
addb
int3
mov
mov
mov
sysexit
lds
xor
inc
pop
aaa
jle
fwait
insb
jecxz
nop
sti
loopne
adc
ret
push
in
add
pop
sbb
adc
mov
push
push
mov
loopne
iret
add
fidivl
pop
clc
pop
test
push
jmp
daa
mov
cmp
call
xor
dec
pop
adc
mov
push
jbe
mov
cmpsb
mov
push
xor
pop
xlat
pop
in
inc
fnstcw
shl
cmp
cmpsb
adc
adc
push
negl
das
rolb
jge
mov
add
loop
or
movsl
outsb
rcr
xor
and
add
adc
xchg
in
jnp
outsl
push
push
repnz
insl
test
scas
and
jns
push
sbb
sub
sti
dec
mov
push
cwtl
mov
sub
and
add
pop
jl
push
mov
mull
scas
sar
pop
push
ds
mov
push
stc
jne
push
mov
pop
jle
adc
pop
in
mov
and
sbb
movsb
test
dec
push
call
rcrl
pcmpgtd
cmpl
lcall
xchg
pop
sub
out
jmp
outsl
adc
lods
ss
subl
loopne
or
pusha
mov
add
xor
jmp
test
pop
or
cmp
ja
mov
fcomp
xchg
shlb
push
iret
pop
pop
pop
scas
add
call
andb
cmp
lods
ud2
cmpsl
ret
lahf
mov
ss
loope
notb
nop
mov
out
dec
mov
and
pop
int
js
jmp
pop
jb
dec
jne
push
lods
inc
andb
inc
jmp
dec
pop
push
cwtl
add
xchg
or
jne
sub
add
cmp
or
sub
daa
adc
dec
mov
xchg
notl
cli
adc
and
repz
dec
arpl
scas
push
popa
pavgw
dec
addr16
pop
xorb
movb
cli
daa
int3
mov
jo
pop
pushf
push
push
jne
hlt
inc
xchg
rolb
xchg
pop
pop
cmpsb
inc
pop
imul
cltd
insl
dec
dec
and
pop
jbe
jle
adc
mov
and
sbb
insl
out
push
mov
xorl
out
dec
gs
fs
out
inc
das
push
sub
pmullw
addr16
insl
movsb
cmc
cli
and
or
lret
mov
jns
jae
les
data16
xor
enter
insl
fsubr
js
fst
pop
repnz
fimuls
pop
js
lahf
adc
fistl
xor
push
sub
out
hlt
jmp
jg
inc
jae
ror
mov
push
pop
popa
mov
add
xchg
pop
mov
jnp
adc
ss
stc
cmpsl
cwtl
pop
mov
imul
mov
out
adc
mov
test
jp
jae
push
hlt
std
or
sarb
in
push
ffree
sbb
int
repnz
imul
out
push
mov
nop
jb
jge
add
aas
sti
xor
dec
shlb
and
lcall
push
sbb
xchg
dec
and
lahf
xchg
test
out
scas
inc
xlat
loop
insb
or
out
mov
pop
push
add
xchg
push
mov
and
inc
das
jge
pop
aam
xchg
int
cmp
pusha
xchg
mov
or
add
loopne
adc
jno
lahf
jo
je
fcoms
mov
rcr
dec
mov
scas
mov
pop
test
nop
mov
fiaddl
xchg
pop
cmpsl
mov
push
sarl
scas
aad
adcb
cmp
clc
mov
jmp
add
inc
leave
shr
int
cmc
or
xor
dec
push
sti
cld
mov
xor
imul
cmp
loopne
mov
cli
xchg
sub
or
mov
out
mov
cmpsl
jb
inc
push
dec
ss
dec
pop
sbb
fcomi
mov
ret
jne
xor
sbb
enter
mov
fcoml
and
imul
scas
enter
mov
sub
faddl
mov
cmpsl
xchg
adc
lahf
cld
dec
in
cmp
stc
pop
mov
ficoms
movsl
push
les
jnp
cs
cmp
jmp
popa
gs
xchg
xchg
sbb
rclb
mov
fadds
jbe
cli
daa
inc
cld
out
aas
lods
mov
adc
mov
lcall
mov
dec
std
sub
mov
outsb
and
addr16
pop
or
jp
call
pop
fstl
dec
insb
addr16
mov
cwtl
lds
rclb
rol
ds
jo
xchg
adc
cld
push
mov
in
cmp
cmp
gs
sub
ja
shl
nop
lods
or
mov
lret
lahf
icebp
xchg
popf
push
inc
push
jle
std
and
sbb
fmul
and
in
cmc
xchg
fistpll
adc
sub
mov
dec
bound
and
mov
mov
std
es
mov
int3
lea
adc
push
cmp
sbb
insb
dec
sbb
dec
mov
xchg
and
pop
out
sub
cmp
adc
adc
add
xchg
inc
int3
jno
mov
xor
popa
sub
jnp
andb
imul
rcrl
cli
xchg
mov
mov
shrb
pop
inc
adc
hlt
or
adc
pop
jns
sub
nop
inc
fcompl
add
fsubl
sbb
in
aas
pop
push
fcmovu
mov
fcoml
mov
inc
and
fistps
movsb
mov
ja
call
movl
fdivrs
int3
test
inc
test
xchg
pop
pop
add
jle
adc
fs
fwait
xor
enter
test
xor
call
sub
and
or
xor
push
lret
jl
cmpsb
and
mov
lret
xchg
push
aaa
jo
scas
lcall
out
dec
sbb
adc
adc
incb
daa
push
insb
inc
fucomp
test
sbb
adc
bound
xchg
jle
dec
fcom
xchg
pop
outsb
movl
xchg
movsb
test
pop
sub
mov
call
lea
sub
cmp
cli
jb
test
jmp
xor
pop
inc
push
test
dec
idivb
push
outsb
inc
inc
insl
ja
lods
push
outsb
mov
xor
jae
aad
inc
add
xchg
adc
in
mov
in
mov
ret
mov
arpl
push
jo
scas
sub
cmp
dec
dec
sbb
cmp
stos
cmp
adc
mov
pop
xchg
cmp
lcall
adc
cld
arpl
jo
inc
cmp
sbbb
lds
mov
sub
mov
sub
pop
stos
pop
pop
in
dec
rclb
xchg
iret
add
jecxz
sub
cmp
or
push
jecxz
adc
push
mov
mov
jo
ja
repz
jnp
mov
sub
data16
mov
adc
adcl
adc
aaa
jmp
inc
fdivs
js
mov
xor
xor
imul
xorps
mov
outsl
dec
mov
or
aaa
mov
mov
adc
add
add
jae
imul
mov
jo
or
pusha
sar
or
xor
test
jg
out
and
jnp
insb
dec
je
imul
sbb
and
repz
insl
mov
int
jbe
insb
jno
mov
jl
insl
push
notl
mov
or
scas
xor
aas
jae
jmp
test
dec
or
lods
push
inc
mov
jne
insb
sub
cmpsb
lret
mov
add
pop
xchg
xchg
decl
adc
push
jo
call
clc
movsb
mov
inc
js
pop
xchg
movb
test
mov
mov
sti
addr16
xor
lret
add
aad
push
sbb
sbb
data16
cmpsl
mov
add
int
gs
push
les
sbb
mov
inc
add
loope
inc
es
jmp
pop
xchg
es
data16
mov
test
cli
and
jl
mov
dec
ds
in
xor
jmp
insl
push
push
leave
and
into
add
mov
std
sbb
testb
sub
imul
adc
stos
dec
sbb
movsl
or
scas
cli
jle
or
xor
sub
inc
ja
ror
stc
jl
and
adc
popa
addr16
stc
adc
jge
popf
bound
mov
out
mov
arpl
add
popa
push
or
or
jp
jmp
insl
clc
mov
fnstsw
fisubrl
add
sbb
dec
pop
fldt
mov
xchg
out
mov
xor
lret
dec
imul
adc
dec
xlat
pushl
jmp
jbe
out
sub
loop
inc
imul
cmp
or
cmpsl
mov
mov
mov
out
rcrb
hlt
cs
outsl
sti
rorb
push
push
and
mov
dec
sub
sub
test
mov
fildll
imul
dec
je
sub
pop
loope
ret
xlat
xchg
push
ret
xor
ficoml
insb
psllw
cwtl
cltd
sub
mov
push
cmp
cmc
lds
jbe
xorl
adc
or
sub
scas
ljmp
out
mov
xor
sub
add
leave
into
or
jne
mov
dec
shrb
mov
negl
adc
jae
jae
stos
mov
mov
dec
rolb
hlt
lods
mov
fucomp
cwtl
shll
fildll
jp
lea
mov
adc
mov
outsb
pop
dec
into
inc
inc
movsl
xor
idivb
xchg
mov
push
mov
pop
push
aas
or
scas
sbb
ficompl
imull
outsb
add
and
jecxz
mov
inc
or
dec
jo
add
test
int3
mov
and
test
in
fneni(8087
rcrl
xchg
fcompl
xchg
mov
pop
xchg
gs
in
push
es
int3
fnstenv
in
mov
ljmp
out
icebp
into
sbb
in
cli
insb
mov
daa
push
fcmovu
jmp
cmp
push
jbe
mov
aaa
stc
mov
icebp
inc
and
btrl
mov
int3
les
test
test
xchg
fcomp
adc
pop
loopne
test
ret
and
scas
enter
and
arpl
mov
dec
xor
shl
mov
pop
dec
jns
mov
dec
sub
dec
imul
nop
mov
imul
ret
cmp
test
pop
mov
inc
insl
stos
outsb
hlt
add
loope
cwtl
out
pop
enter
cmp
xchg
or
fcomps
test
add
daa
adc
add
ja
adc
fs
iret
sub
mov
fsubrs
cmp
xchg
fdivp
fisttps
cmp
mov
in
lock
hlt
aaa
outsb
rcll
mov
repnz
xor
dec
adc
pop
and
push
xchg
popa
pop
sbb
mov
stos
push
cli
xor
pminsw
or
jnp
mov
and
or
imul
mov
iret
jp
ret
add
stos
or
ret
xchg
jl,pn
xchg
cmpsl
ret
es
or
and
mov
test
and
fisttps
pop
popf
in
aas
or
xchg
mov
xor
fisubl
fisttpl
sbb
movsb
test
mov
stos
push
fcompl
pop
dec
inc
mov
ret
adc
lret
pop
test
cmp
call
pusha
sbb
inc
inc
adc
fldl
add
cmpsl
push
pop
mov
outsl
xor
xchg
xchg
or
insb
add
lret
push
sar
adc
shll
dec
pop
lods
test
lds
daa
and
jge
xor
sub
lea
aam
js
and
push
in
incb
mov
pushf
mov
sarl
adc
imul
push
pushf
sarl
out
push
lock
sbbl
lods
out
xchg
and
dec
xchg
clc
dec
mov
stos
pop
add
mov
xchg
inc
xchg
dec
es
sbb
ds
xor
pusha
in
sub
loop
adc
cli
inc
add
cmp
push
push
or
xchg
enter
popf
adc
sub
xchg
insb
jbe
incb
outsb
out
pushf
jno
lds
imul
mov
push
mov
imul
jp
scas
pop
add
pop
loopne
fldt
sub
gs
cwtl
add
or
lahf
stos
adc
mov
sbb
adc
shrl
lock
mov
xchg
loopne
ret
dec
mov
ja
inc
repz
cltd
pop
pusha
cmc
pop
and
test
and
xchg
cli
adc
popf
or
or
cmpsl
inc
adc
push
aad
cwtl
notl
mov
adc
jl
push
popf
fstpl
xchg
cmp
fwait
sbb
or
add
out
sub
push
xchg
ret
sbb
lock
mov
push
stos
sbb
ret
enter
mov
xor
jge
or
inc
mov
in
loope
xchg
divl
pusha
stos
lods
adc
mov
ss
pop
sahf
cmp
xchg
jecxz
loope
fidivrl
xchg
or
fildl
outsl
mov
sbb
mov
or
sbb
lret
cmpsb
xchg
pusha
dec
popa
lcall
jo
std
xchg
nop
test
mov
stos
pop
sar
dec
xchg
mov
inc
sub
pop
add
in
imul
movsb
into
jecxz
jnp
dec
iret
movsb
jno
mov
clc
mov
and
xorl
add
jmp
fbld
movsb
or
add
loop
or
sub
dec
push
cmp
mov
notl
fistpll
rcll
pop
aam
sti
mov
call
fdivrl
lock
and
pop
test
adc
fdivrs
gs
les
add
mov
add
nop
jecxz
out
in
leave
dec
jp
inc
jl
add
xchg
mov
int3
or
idiv
int
sub
inc
ret
jl
cmp
pop
test
sub
lret
jbe
cmpsb
scas
loop
inc
je
fimull
hlt
in
mov
test
cltd
jge
fwait
ror
jl
xchg
mov
jmp
movsb
inc
dec
ret
stos
insl
xlat
iret
sti
push
inc
dec
in
jl
xor
or
add
test
fstpl
mov
lods
inc
pusha
mov
hlt
scas
sbb
xor
ret
in
push
iret
dec
mov
mov
jp
xchg
fdivl
mov
pusha
cli
sbb
fmul
loope
pop
fwait
inc
imul
repnz
sbbl
iret
mov
std
cltd
mov
adc
loope
stos
outsl
xchg
xorl
imul
jb
sbbl
adc
mov
xchg
lcall
sub
sahf
mov
xchg
dec
fildll
push
cmp
fstpl
adc
pop
outsl
xchg
rclb
int
jae
or
cmp
insb
lea
daa
add
and
arpl
add
mov
jecxz
jb
adc
xor
mull
mov
jge
push
mov
std
pop
repnz
xchg
jg
enter
lret
das
mov
and
or
cs
jb
orb
add
xor
movsl
fstl
xor
movsl
imul
mov
xor
or
cs
sbb
sahf
pop
lds
sbb
testb
push
dec
pop
in
es
inc
xor
inc
sub
ja
xchg
sub
pop
flds
mov
push
add
int3
mov
sub
les
jg
mov
cmpsl
cmc
jecxz
push
mov
mov
movsl
test
sahf
cltd
push
cmp
sbb
std
sub
fisubrs
int
push
jl
cmp
inc
add
insl
call
lcall
xchg
add
jmp
push
into
dec
lret
cmpsb
mov
cmpl
pop
add
fldl
pop
out
push
or
in
mulb
cmpsb
aas
jbe
push
mov
pop
bound
js
adc
xor
imul
mov
nop
std
inc
jge
xor
sub
sbb
iret
out
scas
dec
mov
insl
or
aaa
jmp
nop
xchg
les
movsb
xchg
xor
loop
or
iret
cmp
jp
ds
push
loopne
lret
sub
pop
xchg
mov
mov
mov
insl
adc
pop
jge
push
sbb
jns
aad
outsl
dec
pop
mov
xor
out
shrb
aas
cmp
inc
ret
test
aaa
into
int
aad
mov
push
sti
adc
add
cmp
inc
mov
cltd
or
gs
sub
and
adc
loope
sub
out
mov
push
mov
cmp
nop
loopne
mov
negl
inc
dec
mov
push
je
repz
rol
ja
imul
dec
fcompl
shrl
movsl
icebp
rcrl
cvtdq2ps
cs
out
pop
mov
pop
jo
jb
inc
xor
and
mov
fstpl
loop
jnp
syscall
into
mov
push
lcall
call
dec
pop
subb
test
outsb
sub
add
xchg
popa
fwait
add
int
or
adc
enter
pop
fwait
push
aad
fwait
cmpsb
jns
inc
or
jo
cmc
ja
add
movsb
mov
cmpb
mov
sahf
or
sbb
insb
push
pushf
in
or
inc
sbb
pushl
loopne
negl
inc
pop
jb
cmp
out
mov
pop
arpl
mov
push
cli
mov
pop
icebp
sub
adc
jb
dec
mov
push
ret
std
outsl
fiaddl
sbb
js
dec
das
inc
push
cmc
jbe
push
jne
mull
dec
xchg
arpl
cmp
push
jecxz
sub
stos
push
pop
jmp
jmp
inc
ja,pn
enter
pushaw
test
aad
lea
dec
cmp
daa
xorl
cmp
loope
movsb
push
sbb
push
xor
push
xor
aaa
pusha
pop
dec
cmc
add
xchg
mov
dec
mov
arpl
push
lods
jbe
pop
outsl
iret
and
lret
scas
xor
and
push
mov
cld
and
add
int3
xor
push
enter
cs
add
mov
lods
icebp
jmp
or
jp
mov
arpl
or
and
in
mov
push
mov
jp
pushf
and
stos
js
or
inc
fimuls
pop
sahf
sub
and
mov
ret
mov
in
clc
inc
mov
add
mov
sahf
scas
push
in
lahf
xorb
lods
adc
pop
das
sub
xchg
mov
testl
nop
add
dec
add
arpl
push
pop
mov
fs
lahf
pop
stos
and
mov
pop
pushf
xor
jno
popf
xor
push
add
jl
repnz
xor
add
inc
movsb
pop
fnsave
aad
dec
into
pop
sbb
ficoml
aaa
popl
mov
xor
xchg
mul
pushf
mov
dec
cli
jl
pop
shrl
xor
mov
repz
andl
cli
dec
test
stos
adc
xor
fiadds
movsb
sbb
popf
in
sahf
jge
adc
xor
scas
in
xchg
cmc
dec
push
or
sub
cmp
sub
xchg
test
call
lahf
adc
mov
push
mov
dec
adc
mov
mov
es
and
pop
mov
pop
iret
mov
cmp
dec
pop
enter
imul
sbb
addl
fwait
insb
rol
sbb
cmp
pop
cmp
lock
push
ss
lahf
nop
mov
out
repz
lea
jmp
scas
push
mov
push
in
push
es
inc
xchg
jmp
mov
dec
lcall
pop
repz
add
popa
into
jns
dec
push
sbb
xchg
rcl
pop
push
xor
xchg
imul
test
enter
sub
rorb
popf
jo
pop
xlat
dec
push
xchg
xchg
mov
idiv
mov
das
pop
jecxz
loopne
iret
out
test
pop
cltd
loop
mov
ja
push
push
call
xor
test
cltd
stos
mov
cmp
dec
mov
aad
mov
ret
cmp
rcll
lcall
cld
xchg
shlb
mov
inc
push
clc
movsl
ret
adc
mov
fs
adc
mov
cwtl
mov
insb
sub
sbb
add
sarl
or
xor
or
inc
xchg
mov
out
push
pop
jne
jne
lods
cmc
xchg
repz
xchg
test
xchg
dec
stc
ljmp
loope
das
dec
pop
and
or
or
jns
adc
ja
leave
in
mov
pavgw
data16
insl
mulb
dec
dec
dec
sahf
es
mov
inc
sbb
cmp
ficoms
rcll
lea
scas
ljmp
imul
mov
xchg
sti
dec
mov
not
add
sbb
add
shlb
mov
inc
xor
pop
jnp
int
mov
add
lcall
adc
repz
lds
test
ss
and
inc
push
cmpsl
movsb
sub
jb
jae
xchg
je
loopne
stc
sar
mov
and
inc
sub
jg
shr
jo
divl
xchg
push
pop
test
pop
fsubr
andb
pop
sbb
or
test
mov
xchg
mov
insb
jb
mov
and
mov
dec
cmpsl
mov
out
mov
sub
dec
push
mov
nop
add
and
pop
push
push
xchg
arpl
dec
enter
add
sar
cmpsb
mov
xchg
fdivp
hlt
dec
mov
jo
dec
sub
cwtl
hlt
add
mov
add
call
rolb
fstps
and
xchg
adc
scas
mov
sahf
stos
cmpsb
aad
push
decb
xchg
mov
enter
adc
jbe
dec
test
xchg
loopne
cwtl
pop
pushf
push
outsl
xchg
sbb
push
ljmp
mov
or
movsl
and
mov
mov
les
fadds
lock
dec
xor
add
push
mov
daa
int3
mov
pop
movsl
jle
addl
test
lds
mov
sti
or
test
inc
mov
mov
lcall
dec
add
sbb
and
xchg
push
cmp
adc
stc
aad
jnp
std
add
rolb
test
xor
sub
or
aad
dec
mov
push
xchg
fmuls
sbb
std
or
addr16
pop
js
test
sbbb
ficoml
mov
mov
inc
xchg
scas
push
mov
scas
mov
cld
pop
testb
mov
insb
es
ret
sub
imul
test
or
stos
sti
js
bound
and
test
or
push
data16
inc
es
shll
xchg
enter
mov
insl
jl
mov
push
jne
out
mov
movsb
imul
lcall
jg
cmp
jmp
dec
outsb
rclb
stc
in
mov
cs
ja
cmp
mov
rcrb
es
and
imul
cs
jecxz
and
add
xchg
call
pusha
loope
jmp
sub
lea
cmp
in
nop
dec
and
mov
push
mov
outsb
xchg
rol
int
sub
sbb
inc
insb
into
lods
dec
movsb
lods
or
test
adc
stc
dec
sub
pop
xor
push
jo
outsb
ss
xor
xchg
jae
cmp
rcll
pop
jmp
pop
push
pop
in
pop
out
jmp
into
pop
dec
cmp
xchg
scas
and
push
adcl
or
adc
les
adc
inc
outsl
stos
jno
push
xor
stc
and
adc
add
ds
jns
xor
test
push
dec
sub
js
jo
push
jno
mov
mov
mov
or
lods
shlb
aam
dec
push
aaa
inc
and
mov
clc
mov
add
sub
xor
pop
test
jecxz
pop
cs
add
mov
ss
pop
cmp
daa
or
iret
fsubs
dec
xchg
fisubrl
push
sub
fsubr
or
aaa
mov
jno
in
pop
pop
xchg
rcrl
dec
loope
cmp
xchg
mov
jae
jp
inc
stos
mov
sbb
xor
and
call
je
pop
pushf
xor
cltd
std
hlt
inc
into
push
or
fldl
or
sub
mov
outsl
jle
xchg
mov
sub
push
mov
jg
xchg
inc
cmp
ja
mov
or
fsub
outsb
fisttpll
inc
into
inc
cltd
insb
popa
popa
mov
les
sub
rcrb
or
inc
mov
xor
test
cmp
fcomps
cmp
or
sarl
sub
lret
or
push
andl
fwait
adc
inc
lods
dec
in
sub
mov
repnz
rolb
imul
xor
mov
cltd
fnstsw
insl
push
cltd
jno
shl
xor
pop
cmpsl
jno
xchg
mov
sti
push
adc
pop
xchg
insl
pop
movsb
or
ret
cwtl
lds
xor
outsl
jno
jne
add
repz
mov
dec
lock
xchg
addr16
adc
dec
jnp
push
push
sub
jae
and
cmc
sahf
shlb
lret
or
sub
jno
stos
dec
rcrl
decb
cmc
push
adc
inc
fisttpl
imull
scas
out
loopne
gs
sbb
out
add
mov
stos
mov
movsl
inc
cs
push
cmc
sbb
xor
jp
jp
mov
pop
mov
lahf
mov
or
push
cmp
push
add
lret
lods
sub
push
dec
mov
mov
adc
cmp
sbb
je
pop
lock
lret
js
mov
call
sarl
les
push
adc
jp
notl
push
scas
aad
pop
sub
xor
or
adc
mov
out
inc
jno
inc
pushf
mov
aad
push
jae
cmp
mov
popa
inc
cmc
stos
xor
or
dec
push
dec
xorb
xor
das
clc
leave
ret
insl
add
dec
add
and
sbb
cli
insl
cld
pop
dec
sbb
mov
popa
xchg
std
add
add
sbb
inc
dec
adc
jb
int
sbb
mov
int
das
push
push
mov
mov
lret
sub
or
dec
mov
int3
xchg
push
cmpl
bound
cmp
js
jp
cmpsl
jmp
xor
mov
xchg
sbb
add
lcall
subb
out
mov
xchg
ret
pop
mov
das
sub
in
sub
cmpsb
dec
jle
mov
adc
fildll
fwait
scas
loope
or
inc
out
pop
jmp
mov
mov
testl
xchg
jmp
adcb
sbb
jnp
shr
movsl
daa
iret
out
repz
fldenv
pop
ljmp
or
stos
in
imulb
xchg
xchg
sarl
fildl
nop
loope
lods
pop
add
std
xchg
or
pop
mov
icebp
fiadds
repz
mov
enter
test
addb
push
das
mov
cmp
jle
sbb
stos
test
fimull
jle
push
add
mov
jo
or
mov
xchg
cmp
dec
data16
sar
cmp
add
addb
mov
lcall
in
sbb
repz
and
ljmp
cs
push
and
out
adc
push
and
pop
scas
fwait
gs
inc
aaa
mov
and
mov
mov
sbb
jns
mov
adc
sub
test
add
imul
arpl
add
pop
xchg
and
leave
scas
add
stc
leave
jno
leave
iret
mov
push
xchg
scas
pop
mov
stc
jae
lahf
ja
add
add
stos
fisttpll
imul
movsb
int3
cmp
mov
ljmp
jmp
arpl
test
ss
lea
lds
mov
mov
in
pusha
push
lret
add
mov
lods
pop
xorl
imul
leave
cmp
scas
mov
xor
arpl
dec
xlat
dec
scas
movsb
or
cwtl
testl
aaa
jb
into
dec
addr16
xlat
dec
sbbl
enter
fwait
lods
jmp
pop
dec
mov
and
nop
test
dec
sbb
sbb
loopne
ja
stc
xchg
scas
jae
add
out
and
mov
pop
push
jl
jns
fs
pusha
sbb
xor
jns
mov
add
or
pop
dec
dec
adc
int3
lods
cs
es
outsb
mov
lcall
mov
bound
fidivl
lock
xlat
movsl
or
icebp
ficompl
les
mov
or
mov
add
jno
xor
mov
sub
sub
mov
add
and
jno
xor
cmpb
sub
out
lods
mov
imul
mov
cmp
and
in
add
in
enter
pop
sbb
xor
clc
adc
cs
xchg
pusha
nop
push
in
pop
jbe
fadds
sub
loop
xor
sbb
cmc
in
mov
and
lods
mov
mov
into
loop
mov
mov
in
addb
xchg
aas
ss
fildl
jg
mov
test
mov
jns
mov
mov
xlat
mov
test
nop
inc
sub
int
sbb
out
mov
push
mov
xchg
movsb
xor
sbb
cmp
push
cmp
rcrl
or
pop
jg
dec
mov
test
in
scas
dec
mov
dec
lock
clc
daa
sarb
pop
mov
cmp
stos
jne
sarl
loopne
outsb
je
dec
push
int3
pop
lahf
cmp
pop
divb
jne
pop
mov
cmp
mov
das
jno
xor
loope
xor
fsubl
xor
jne
push
mov
ss
jp
mov
and
xchg
repnz
insl
mov
out
sbb
jb
dec
pop
mov
cmp
inc
xchg
xor
clc
xchg
mov
push
adc
xor
push
leave
push
in
loopne
cmp
jo
push
test
sub
outsl
andl
ss
arpl
or
mov
xor
sbb
ss
add
add
mov
push
hlt
and
js
cli
mov
shlb
xchg
andb
jp
push
and
enter
dec
pop
sbb
dec
shl
dec
pop
loope
xor
xor
mov
push
mov
sbb
xchg
and
lahf
xchg
xor
push
push
sahf
xor
cltd
ficoml
cs
lahf
adc
nop
mov
push
jecxz
adc
icebp
call
mov
jne
push
out
loop
jno
dec
subl
inc
xor
xor
dec
xchg
jge
jmp
insb
pushf
scas
divb
les
lea
bound
insb
mov
insb
lds
mov
mov
into
mov
adc
loopne
sbb
adc
pop
lcall
mov
gs
mov
rcrl
bound
adc
in
lahf
popf
fwait
stos
addr16
daa
jo
repnz
inc
xchg
out
pop
cwtl
xchg
mov
insl
and
adc
cs
dec
fbstp
jg
xor
fbld
fildll
add
repnz
push
sub
lds
xor
aam
mov
or
stos
sbb
inc
das
xchg
push
and
sub
mov
test
ljmp
dec
aaa
xor
inc
jge
test
xor
aaa
movsl
out
repz
and
sbb
pop
aad
imul
and
cmp
fwait
dec
sub
mov
xchg
cmp
addl
cmp
inc
lock
lods
inc
std
push
push
inc
jns
mov
inc
sahf
call
sbb
pop
add
adc
xchg
test
loopne
sbb
fld
pop
int
nop
sbb
push
out
popf
es
ficoml
or
jo
push
fnsave
jl
std
mov
mov
jno
addb
repz
pop
es
add
test
sub
fs
test
ret
xor
fldenv
in
add
lea
iret
mov
sub
mov
sarb
addr16
cmp
pop
rcll
inc
xchg
sbbb
loope
sbb
xchg
cmpsb
test
dec
mov
add
repz
not
jle
sub
fld
fldl
ret
movsl
fdivrs
test
gs
push
mov
scas
mov
mov
push
xchg
test
popa
int3
bnd
pushf
cmp
adc
orb
mov
lock
jb
pmulhw
mov
sub
fsubr
dec
into
fwait
jnp
je
jns
lods
bsf
add
mov
jecxz
inc
cwtl
fwait
pop
jne
inc
out
mov
xlat
xchg
xchg
pop
neg
nop
pop
cwtl
pop
test
push
das
sub
cmp
stos
xor
mov
or
adc
cmp
filds
scas
sbb
inc
push
inc
fwait
cld
in
jecxz
or
fcompl
and
mov
mov
dec
jecxz
fildll
mov
lock
pop
xlat
jmp
leave
pusha
data16
in
mov
pop
jle
aam
add
sub
cmp
lret
sbb
mov
xor
inc
popf
lock
push
outsb
lret
in
enter
add
add
jb
mov
xlat
inc
stos
dec
sbb
dec
sbb
scas
dec
addr16
xor
push
pop
mov
scas
push
sub
mov
es
or
jle,pn
adcb
mov
nop
enter
push
sub
mov
ja
inc
inc
gs
inc
dec
add
dec
jg
lahf
cli
dec
dec
daa
add
cmp
sahf
jbe
cmp
lret
xchg
sub
lds
sub
dec
adc
inc
push
xor
sbb
dec
outsl
sub
xchg
lcall
mov
xor
nop
aad
test
push
out
fdivrl
out
add
inc
cltd
cmc
dec
pushf
leave
scas
and
das
cmp
lret
fdiv
pop
andb
pop
lret
cltd
cltd
add
push
or
das
addr16
or
fstpl
xor
push
mov
int3
lret
adc
stos
sub
xor
dec
push
xchg
cmpsb
sub
sbb
clc
bound
popf
xor
xor
sbb
data16
add
ret
jp
outsb
arpl
adc
sub
push
pop
sub
sub
ret
cmp
cld
push
outsb
cmp
push
sub
imul
cmp
cltd
out
aaa
in
cwtl
add
mov
cmp
pop
cmp
jnp
xor
data16
subl
add
loopne
xor
and
xchg
scas
adc
aam
add
xor
jge
xor
jge
xchg
cli
lahf
pusha
adcb
shrl
add
jmp
lret
inc
add
in
cltd
fisttps
push
sub
emms
mov
cmp
call
sub
inc
lock
jle
jns
and
mov
stos
pop
add
cmp
cmp
aas
pop
dec
xchg
shlb
sbb
sub
xchg
or
insl
mov
inc
fldt
add
mov
cmp
mov
mov
dec
lock
pop
inc
scas
mov
xbegin
jecxz
lds
jl
push
daa
push
push
lds
mov
push
or
add
xchg
xchg
cmp
sbb
push
cmp
inc
sub
cmp
push
dec
shll
test
dec
mov
mov
push
ret
mov
ja
stos
xor
in
cmp
adc
push
out
mov
sbbl
repz
dec
insl
push
dec
fldt
add
cwtl
mov
xor
mov
adc
std
sbb
fisubrl
inc
mov
adc
fmuls
jne
add
lds
push
out
aam
imul
scas
cwtl
mov
lods
ss
das
sub
and
jbe
jecxz
add
das
xorb
negb
xchg
xor
cmc
lcall
xchg
bound
out
xchg
iret
data16
mov
inc
lods
adc
add
sbb
movsb
pop
insb
push
loopne
pusha
cli
add
sti
gs
mov
ret
and
jns
stos
xchg
pop
jp
mov
call
push
add
push
adc
and
addr16
xchg
mov
or
ljmp
rcrb
fdivrl
dec
insl
lret
insb
fsts
xor
int
jp
test
in
fs
mov
pusha
jge
push
sub
jnp
mov
mov
ss
jns
insb
cmpsb
fstpl
inc
jp
stos
fadds
xor
aam
inc
pop
and
ds
imul
xchg
jnp
je
xorl
cmp
repz
xchg
adc
inc
xchg
fs
loop
int
push
dec
inc
aam
outsl
push
lods
jb
xchg
movsl
and
mov
sbb
mov
push
jne
pop
mov
adc
dec
mov
insl
fwait
jle
ret
pop
inc
inc
add
aad
xor
mov
mov
fidivrs
inc
idivb
adc
sub
or
nop
cbtw
nop
les
mov
inc
into
push
addr16
cmp
not
jno
inc
sub
lcall
test
mov
repz
bound
push
push
and
cmp
jbe
sti
call
mov
mov
cmp
sbb
mov
dec
xchg
hlt
cltd
stc
aam
lea
mov
lahf
jns
aas
orl
jmp
repz
xor
or
xchg
xor
push
xchg
push
out
sbb
add
mov
ljmp
dec
fwait
xchg
ds
outsb
mov
push
mov
dec
aaa
jno
cmp
jbe
pop
xor
jne
in
idivb
sbb
jnp
fsubs
out
dec
clc
sub
jle
mov
pop
repnz
into
jnp
jle
pop
enter
fsubs
call
fadd
aaa
addr16
fsubrs
out
test
cmc
xor
sbb
sbb
sub
fwait
lods
loopne
imul
mov
imul
xchg
cltd
push
add
jge
cmp
cli
add
inc
ret
and
cmp
ss
sbb
clc
inc
add
dec
push
sbbb
iret
mov
sub
stos
jp
lods
dec
xchg
out
sub
xchg
std
popa
xor
jmp
sub
mov
mov
out
inc
pop
push
push
cld
js
add
xchg
xor
jno
dec
adc
xlat
cli
clc
fsubl
lret
sbb
es
fidivl
ja
sub
mov
xor
fiadds
mov
movsb
mov
mov
addr16
dec
adc
and
ds
mov
ds
sbb
outsl
push
push
mov
mov
xchg
jp
rcl
mov
cmc
inc
sbb
mov
es
push
adc
push
icebp
xlat
dec
inc
sbb
or
sbb
lcall
lods
push
scas
lahf
add
mov
dec
or
out
xchg
or
dec
cmpb
dec
decl
jb
shrb
in
adc
inc
cltd
stos
nop
pop
leave
lods
cmp
adc
xor
or
mov
popa
mov
int
push
or
sbb
lret
inc
sub
push
xorb
mov
into
stc
movsl
jl
popa
jp
mov
jl
jnp
adc
add
shl
inc
cmpsl
inc
jbe
dec
rclb
mov
ret
push
jo
lcall
fstpt
int3
push
and
insb
daa
loop
inc
iret
sbb
aam
fldl
push
sub
dec
shlb
cmp
fidivrl
and
dec
cld
in
dec
mov
push
fmuls
pusha
js
cwtl
sbb
shrl
ror
sbb
enter
notw
inc
maskmovq
idivl
test
adc
stc
testb
mov
sbb
movsl
imul
clc
push
sbb
xor
int
jp
popa
loop
mov
bound
push
lcall
or
cmpsb
popa
dec
lret
push
sbb
fcoms
and
pop
repz
inc
mov
pop
imul
orb
mov
aad
adc
lea
mov
jge
add
ljmp
push
js
flds
xchg
repnz
in
sbb
cmpsl
lcall
mov
mov
imul
or
sbb
inc
add
dec
jno
aad
insb
sbb
inc
pop
stos
adc
sbbb
test
or
js
in
and
ja
mov
and
mov
and
xchg
pusha
shr
add
repz
daa
sub
fcoms
dec
cs
out
cld
and
std
call
xchg
adc
mov
fmuls
shrb
in
test
push
dec
mov
push
movsb
loopne
xchg
jecxz
imul
addl
and
jae
mov
jle
test
and
out
inc
mov
inc
cmp
push
daa
xchg
ret
add
inc
in
fisubs
sti
xor
push
pusha
imull
add
test
cmp
jl
out
adc
add
cmp
mov
ds
jbe
scas
test
aad
mov
xchg
jne
jge
dec
mov
int3
mov
xlat
insl
cmp
scas
sbb
or
cmp
adc
add
aaa
pop
jmp
clc
sub
mov
icebp
xor
insb
stos
arpl
sar
repz
xchg
sbb
fistps
mov
pop
jae
imul
cmpsb
cmp
test
or
cli
cmpb
shr
test
cld
cmp
xchg
leave
stos
dec
into
sarl
jae
inc
add
mov
or
mov
pop
mov
mov
push
pop
test
sub
stos
and
enter
outsl
xchg
mov
pushf
add
stos
push
jge
test
je
xchg
scas
rcll
mov
add
pop
xchg
mov
lods
shlb
call
jae
xchg
cmp
mov
cmp
fisubrs
and
cmp
jp
lea
dec
pop
mov
sub
push
mov
mov
xchg
out
jp
xor
mov
mov
lret
push
or
ficoms
lahf
addr16
insl
xor
xorl
mov
xchg
repnz
xlat
add
mov
push
cmp
pusha
inc
mov
into
adc
jp
cwtl
insb
int3
movsb
pusha
cmp
rol
shl
mov
push
out
je
or
pop
sub
pusha
cmc
cmc
dec
push
outsb
cs
cld
jmp
adc
gs
lahf
out
lods
aaa
sbb
and
cmp
scas
dec
xchg
lods
insb
lds
scas
dec
ss
pop
sbb
movsl
lods
call
int3
and
push
in
jo
loopne
repnz
xchg
sarb
mov
inc
aam
pop
aas
xor
fnstcw
push
mov
mov
xor
pop
notl
mov
ds
add
es
test
xchg
aad
fisubrl
mov
adc
or
ja
push
outsb
jge
rorb
jne
lds
mov
xchg
and
mov
mov
pop
dec
imul
push
xchg
aam
std
push
js
in
cmp
xchg
fimuls
inc
loop
add
icebp
repnz
jmp
loop
pop
and
rolb
push
orl
leave
dec
negl
push
dec
mov
or
pop
xchg
pusha
xchg
imul
sub
sub
sti
adc
inc
mov
out
js
add
jge
mov
enter
push
or
jl
cmp
xor
jmp
pop
xlat
ja
cmpl
rcll
pop
add
cmpsl
inc
ljmp
mov
push
ret
pusha
test
jne
js
rclb
clc
aam
pop
or
mov
ret
dec
hlt
mov
cli
ljmp
sbb
pushf
cmc
mov
cmpsl
cmpsb
ds
in
sbb
mov
in
jno
cmp
div
push
add
inc
leave
jb
cmpsl
add
add
and
dec
mov
stc
or
pop
mov
sbb
nop
dec
orl
mov
inc
das
fldcw
jle
les
lds
mov
rolb
push
lret
int3
je
xor
mov
cmp
adc
adc
jne
fidivs
or
or
dec
sbb
repz
or
xor
sub
stc
mull
pop
jbe
push
and
lar
dec
add
and
outsl
sahf
mov
addr16
clc
push
sub
and
lcall
and
dec
sub
xor
std
mov
js
push
mov
stos
jbe
pop
pop
setl
jp
ror
mov
fdivl
add
pop
xor
fs
add
add
lret
cmpsb
add
xchg
xchg
jns,pt
xchg
loope
fdivs
fsubr
push
bnd
add
popa
in
mov
das
inc
pop
cmp
jp
push
fwait
xchg
mov
xor
jmp
push
sahf
test
cmp
add
xchg
push
dec
xor
ss
add
ficoml
das
dec
gs
gs
add
test
outsb
mov
jmp
pop
cmpsb
ds
insl
lret
add
enter
ds
push
shr
mov
sbb
or
lock
jl
call
push
sbb
and
lret
sub
ja
stc
xchg
inc
rcrl
or
movsb
das
repnz
sub
jns
ret
insb
mov
xchg
icebp
xor
das
adc
dec
push
data16
mov
rcrb
mov
ret
xor
mov
mov
pop
inc
push
in
pop
scas
repz
clc
dec
adc
filds
adc
out
icebp
and
mov
fistpl
lret
or
into
sub
insl
xor
sub
inc
aad
jecxz
fwait
pushf
and
cwtl
loopne
pop
cs
popf
sbb
adc
adc
sub
or
inc
inc
js
push
sahf
mov
test
jns
jmp
add
iret
iret
imul
loop
cmp
pminub
jmp
push
pop
and
inc
in
mov
add
nop
idivl
imul
add
or
pop
sub
mov
in
nop
int3
call
fidivrs
pop
jg
sbb
push
aad
sub
movsl
data16
ja
es
test
dec
and
xchg
incl
pusha
sbb
mov
lcall
pusha
imulb
std
push
mov
sahf
dec
sarl
xor
sub
pop
adc
mov
mov
ret
cs
xchg
cmp
push
mov
mov
sbb
mov
adc
xor
xchg
jbe
ret
lcall
stos
arpl
in
out
les
in
jno
pop
jns
xor
je
sub
frstor
sub
les
jb
out
fimuls
jae
dec
or
outsl
pop
jg
out
mov
call
aaa
cld
inc
outsb
enter
cwtl
lods
jbe
shrb
push
stos
decb
test
mov
push
xor
insl
inc
pushf
mov
mov
push
push
jge
dec
and
xor
stos
mov
xchg
jp
ret
inc
js
in
push
mov
mov
out
mov
xchg
pop
sub
fstl
or
aad
insl
insl
xor
xchg
cmp
sub
cmp
ss
lahf
pcmpgtw
arpl
and
mov
in
orb
and
add
mov
iret
jmp
dec
xorb
out
sub
test
clc
push
push
sahf
fmul
or
stos
ret
mov
xchg
inc
outsl
test
push
daa
sub
pushf
aaa
cmpsl
add
lret
mov
jno
shl
cld
xor
in
mov
into
mov
filds
mov
and
bound
test
push
and
dec
stos
mov
add
pop
mov
testl
iret
xor
data16
xchg
mov
jb
daa
std
cltd
inc
mov
fstpt
pop
jp
rcrl
outsl
pop
dec
fldt
cmc
fsubl
sbb
ss
sbb
cld
xor
sub
out
mov
xchg
jno
add
out
icebp
and
add
insl
mov
and
adc
aad
aas
cli
fcomps
xlat
rcll
cmp
and
xchg
pop
pop
add
dec
test
aas
jno
leave
sub
or
sti
cmp
test
push
lret
or
jns
lds
jno
ficomps
mov
int
lods
and
mov
xchg
test
xchg
shld
xorl
inc
mov
cwtl
jg
cmc
add
lock
xchg
jae
into
out
into
or
data16
xchg
aad
xor
sbb
vpacksswb
jns
pop
sub
cmp
xchg
mov
ss
ja
cmp
hlt
pop
imul
jp
ljmp
stc
jne
sti
scas
pop
cmp
sbb
jo
mov
sti
jno
mov
dec
xor
sbb
ss
aas
stos
xchg
popl
jns
ja
data16
frstor
xor
adc
cmc
mov
test
int3
add
sbb
data16
mov
test
mov
fldenv
push
lods
pusha
or
xchg
mov
stc
mov
adc
lret
xor
adc
sub
out
xchg
in
into
mov
cmp
jl
enter
out
movsb
test
mov
push
push
ds
jo
es
add
call
mov
adc
mov
popa
push
fincstp
das
out
and
dec
adc
lods
in
cmp
mov
std
and
out
adc
lret
out
sub
pop
sbb
call
gs
popf
xchg
dec
sub
and
test
ljmp
out
iret
in
mov
imulb
imul
push
adc
std
movsl
add
dec
xchg
mov
xor
push
jle
add
sub
mov
add
jno
fistps
mov
sbbl
pop
popa
daa
cwtl
dec
lahf
mov
data16
dec
ljmp
xor
lcall
aad
outsb
clc
push
stos
xor
add
push
inc
enter
or
sbb
add
xor
andb
in
xchg
lea
pop
and
scas
inc
dec
dec
push
push
sub
add
sub
popa
xor
sbb
xor
mov
hlt
outsl
mov
xor
rcrb
sbb
repz
mov
arpl
bound
mov
test
pusha
leave
ffreep
cmp
dec
cmc
cmpsl
cmp
push
inc
inc
or
xor
push
mov
mov
insb
cmp
or
mov
mov
jg
mov
testb
xchg
fldl
add
out
mov
sbb
sub
cmp
xor
and
shrb
push
jae
inc
push
scas
xchg
pop
push
add
sbb
mov
rcll
sbb
sub
out
sbb
mov
dec
or
in
mov
pop
cli
pop
push
imul
js
fldcw
movl
mov
mov
sub
push
xchg
cmp
cs
ljmp
fadd
jp
sti
pop
pop
jb
jae
into
cmp
pop
sti
je
hlt
leave
xchg
loope
addr16
orb
sbbl
mov
bound
mov
sbb
pushf
and
je
or
mov
mov
adc
imul
push
in
rclb
aas
popa
jp
cli
daa
xchg
cs
decb
gs
dec
nop
sub
cmpsl
lret
fimuls
adc
jge
add
test
std
jmp
js
out
add
shll
mov
mov
xchg
push
into
add
scas
enter
xor
inc
or
jle
dec
sti
jne
loop
pmulhw
dec
jno
xor
sahf
push
mov
add
jmp
lock
out
adc
push
adc
dec
stc
cmp
int3
mov
add
pop
divl
lods
and
push
cmp
into
ljmp
daa
or
pop
inc
fmul
mov
xchg
add
fldl
sarb
adc
cli
or
push
outsl
jge
jg
xor
cmp
or
xlat
outsb
jnp
negl
jae
insb
loope
out
aam
pop
xor
shr
int3
push
fldl2e
add
or
mov
aaa
xchg
mov
mov
mov
rol
call
push
loop
mov
sbb
sub
outsl
push
ficoms
int3
sahf
mov
out
mov
fs
aam
lcall
sub
test
xchg
mov
daa
jge
ret
push
jmp
sub
out
imul
nop
test
dec
inc
add
stos
xchg
inc
pop
clc
rcpps
sub
push
pop
mov
mov
cmp
call
mov
and
jp
adc
mov
mov
xor
ficomps
call
das
inc
fwait
xchg
mov
movsb
push
sub
rcrl
xchg
cmp
inc
test
push
in
stc
adc
es
outsb
and
fldcw
in
xchg
loopne
cltd
or
lea
pop
xchg
repnz
add
cmp
xchg
sbb
outsb
in
into
je
mov
jecxz
imul
xor
sbb
inc
sbb
loop
mov
or
aad
adcb
inc
pushf
cli
f2xm1
add
push
jb
mov
out
xorb
insb
xorb
cmp
push
loopne
loopne
sbb
flds
mov
sbb
enter
ja
lret
mov
jne
pusha
and
fldt
or
ret
jns
dec
mov
mov
push
aad
addb
divl
or
mov
push
pop
mov
xchg
outsl
ret
jg
pop
sub
in
add
dec
adc
dec
jmp
sbb
inc
stos
pop
imul
or
aam
iret
test
cmpl
push
push
mov
add
cmpsl
xor
or
jge
xchg
xlat
imul
xchg
xchg
sbb
pop
int3
push
fistpll
pop
push
roll
inc
pop
xchg
dec
pusha
sub
mov
sbb
adc
loopne
cmpsb
xchg
cmp
in
inc
xchg
sbb
cmc
mov
call
adc
int
sbb
jg
and
xor
leave
lcall
lcall
jne
or
cmpsb
push
rolb
mov
pushf
jecxz
cmp
and
dec
dec
ret
mov
shrb
sbb
fadds
mov
pop
repnz
jge
jo
mov
sbb
es
call
push
dec
dec
and
popa
sub
or
mov
imul
xchg
inc
scas
in
pop
rcll
dec
sbb
inc
cmpsb
push
adc
inc
sub
lret
adc
sub
mov
jns
dec
inc
pop
xor
jb
and
xchg
pop
add
test
mov
dec
sbb
push
xor
outsl
push
inc
outsl
add
arpl
mov
xor
or
push
sub
push
and
pop
stos
push
xchg
scas
inc
inc
je
pop
pop
cltd
inc
inc
inc
jne
and
iret
mov
sahf
inc
fisttpll
jl
mov
mov
mov
xchg
sub
push
ljmp
cmp
shlb
sbb
arpl
and
push
xchg
in
dec
dec
into
mov
dec
int
sub
sub
mov
mov
fildl
cs
cmc
pop
mov
cmpsl
add
leave
ds
cmc
aas
xor
push
sub
dec
and
jno
jle
mov
cmpsl
int
fildl
movsl
pop
je
sub
pop
stos
and
jecxz
insl
and
inc
je
sub
in
adc
xchg
shrl
stos
ss
movd
imul
aad
sbb
add
mov
sub
iret
sarb
or
aaa
xchg
std
cltd
xchg
or
outsl
jge
imul
xchg
in
sub
rclb
xlat
sub
scas
inc
pop
jo
je
xchg
lret
and
and
pop
mov
ret
sbb
scas
push
push
add
daa
cwtl
aad
add
stos
mov
lcall
add
lcall
and
fucomi
in
cltd
push
fstl
mov
lahf
mov
sbb
jne
xlat
bound
mov
mov
or
xchg
lret
ja
mov
adc
cwtl
mov
add
push
pop
lods
insl
adc
xchg
aaa
adc
xchg
rorl
std
xchg
push
jp
inc
test
mov
pop
jbe
repnz
test
mov
xchg
mov
inc
fwait
mov
rcll
sarl
pushf
push
mov
cmpsb
cmp
xchg
add
les
ljmp
dec
xlat
insb
in
xlat
push
ret
shlb
inc
mov
test
fisubs
int3
or
dec
xchg
cmp
sbb
in
or
jns
insb
sbb
mov
roll
sbb
loopne
xlat
sub
arpl
int
inc
aad
das
enter
jo
or
in
and
in
iret
les
lcall
gs
sbb
dec
stos
addr16
mov
mov
pop
addl
inc
add
std
outsl
mov
adc
mov
mov
cmpsb
xchg
jne
fildll
jmp
push
sbb
push
mov
mov
lcall
jb
mov
cmp
push
data16
filds
mov
push
lock
cwtl
fbld
imul
fidivrs
bound
insl
sub
push
ret
jae
decl
jb
fucom
cli
mov
in
call
add
repnz
ret
pop
std
in
lcall
arpl
fistpl
push
mov
aaa
leave
mov
movsb
lahf
jle
xor
dec
sarl
jae
out
xchg
or
stc
adc
test
es
jnp
add
inc
outsl
push
mov
aaa
mov
cmc
pop
pop
xchg
lods
cmp
insl
out
xor
cmp
xchg
mov
sbbl
push
rcr
add
sbb
nop
icebp
iret
xchg
mov
stos
sbb
mov
test
test
aaa
pop
fnclex
pop
rcl
jne
cltd
pop
dec
mov
and
cmp
pop
loopne
jmp
push
adc
push
sub
outsl
dec
and
xor
xchg
mov
adc
rorb
sub
je
repz
inc
mov
test
or
das
mov
ret
ret
pop
lcall
int
xchg
clc
dec
mov
inc
lret
stos
leave
cmpsl
test
xchg
pop
insb
out
in
cmp
in
and
mov
fdiv
repnz
sbb
and
out
or
xchg
dec
fistps
inc
ja
pop
pop
rcrl
and
bound
sbb
or
ret
xchg
nop
cmp
sbb
push
pop
inc
inc
cmc
mov
fwait
mov
xchg
sahf
jo
nop
xchg
sub
mull
cld
cltd
pop
lahf
and
sbb
test
pop
push
out
xchg
xchg
shll
mov
cmpsb
shl
inc
push
jbe
daa
test
cwtl
into
scas
inc
fnstenv
je
sbb
fucomip
sbb
in
stos
mov
nop
icebp
test
movaps
mov
sub
and
sbb
mov
outsb
jl
and
or
inc
xor
idivl
sub
in
leave
lock
ljmp
hlt
popf
sbb
add
sub
sbb
mov
fnsave
sbb
stos
out
sub
das
aas
fsubrs
in
in
ds
sbb
fwait
aad
stos
cmpl
aam
mov
adc
insb
xchg
lods
pop
or
inc
ds
cmp
cmp
mov
andb
loop
cmp
movsb
dec
inc
icebp
leave
adc
bound
cmp
push
jne
mov
mov
shr
es
imul
lea
cltd
enter
wrmsr
xor
adc
sbb
sub
outsl
or
adc
lods
stos
push
out
lcall
sbbl
mov
push
mov
test
out
fistpll
push
insl
dec
dec
pop
push
pusha
mov
pop
loop
into
into
loop
inc
sub
jae
int
dec
aaa
and
push
jecxz
add
mov
mov
pop
xor
and
mov
sti
dec
and
cmp
adc
cs
lock
lahf
shll
jno
or
rorb
jbe
xchg
pop
push
cmp
popa
outsb
ret
loope
xor
pushf
pop
xchg
cld
lods
into
xchg
mov
std
in
push
and
and
mov
mov
call
clc
xor
ss
mov
ret
xlat
cmp
clc
lcall
orb
fsubrs
dec
inc
or
cmp
sbb
std
addr16
jecxz
mul
sbb
mov
jmp
inc
ja
lahf
inc
cwtl
or
jecxz
add
mov
adc
dec
push
sub
test
xchg
loop
sbb
sub
mov
les
pusha
ljmp
pop
rcr
cmpsb
out
enter
mov
out
pop
ja
insl
jbe
mov
inc
xchg
xchg
je
inc
dec
test
jmp
push
loop
jg
jg
dec
lods
andl
stos
xlat
sti
int
sub
and
hlt
jle
dec
adc
adc
xor
jbe
push
mov
or
sbb
mov
js
inc
or
mov
inc
adc
aam
stos
ja
negb
cltd
aas
mov
mov
or
jle
or
enter
add
out
mov
add
jae
outsb
scas
popf
xchg
ret
xor
xchg
addl
jae
jl
cmpsb
lret
movsl
dec
gs
lock
push
xchg
fsts
call
popa
add
jecxz
pop
push
cli
add
loop
pop
cmp
inc
push
jmp
sub
sbb
inc
or
popf
pop
fistps
sbb
xor
mov
dec
push
scas
out
pop
push
sub
out
mov
aas
jnp
fists
mov
xor
xor
outsl
sub
shll
xchg
mov
dec
ljmp
iret
xor
jg
or
cs
sub
cli
pop
xchg
sbb
jg
mov
dec
xchg
cmpsl
data16
daa
push
ret
push
in
mov
fs
and
into
mov
movsl
fwait
and
xor
cmp
inc
shll
xchg
push
into
inc
xor
cmp
lcall
int
lods
push
xchg
jp
jle
lods
cli
notb
mov
cmp
pop
mov
mov
xchg
lds
loope,pt
xor
jle
cs
pop
mov
popa
stc
roll
dec
mov
dec
scas
lods
jb
lock
xchg
xor
xor
pop
ret
push
jecxz
mov
or
into
loop
sub
xchg
xchg
add
xor
jbe
repz
add
or
mov
daa
xor
vpshad
cmp
jb
in
and
add
pop
ret
aas
xor
or
aam
sbb
std
movsl
popa
pop
pop
and
add
and
fucomp
sub
or
pop
add
jne
fists
fstpl
or
jle
add
add
jecxz
xchg
and
mov
int3
sub
dec
cld
faddp
mov
sbbb
jmp
mov
aaa
aaa
roll
push
sbb
mov
jl
test
or
mov
jno
or
aaa
jp
add
inc
lcall
push
in
sub
aad
in
shrb
jge
mov
fimull
in
aad
ret
nop
dec
mov
lods
movsb
and
shll
ds
sub
data16
inc
filds
int
loop
sub
mov
push
sbb
out
adc
xchg
dec
pop
mov
xor
movsl
pop
cmp
adc
dec
pop
inc
loopne
popa
out
xor
sub
add
xchg
sbb
dec
pop
repnz
aad
and
insw
nop
xor
add
push
inc
adc
inc
pop
push
push
mov
in
pusha
or
test
lds
mov
dec
leave
sbb
jb
inc
testl
outsb
imul
jne
pop
stos
daa
xchg
and
xor
mov
lods
jmp
cmpsl
or
lods
stos
xchg
cmc
insb
cmc
sbb
dec
pcmpgtw
arpl
and
mov
adc
jae
push
in
insb
shlb
pop
sub
xchg
mov
jle
stc
daa
call
or
fmulp
mov
sbb
sbb
cmp
xchg
outsb
xchg
les
inc
push
mov
mov
arpl
push
lahf
pusha
cmc
out
pop
sub
mov
add
movsb
dec
pusha
shl
push
test
inc
jp
jno
leave
cwtl
ret
push
fwait
sbbb
hlt
and
repnz
das
cld
xlat
sbb
dec
or
push
test
fs
lods
cmc
cmpsl
cmp
dec
xchg
stc
lea
aam
jg
jecxz
dec
dec
xor
fisttpll
push
outsl
xchg
movsl
adc
nop
incb
dec
add
sbb
mov
dec
adc
jmp
popf
mov
imul
aaa
out
sbb
mov
sbb
jp
mov
outsl
dec
imul
andb
dec
adc
in
div
push
addb
push
adc
data16
fisubrs
xchg
dec
fsubrl
mov
dec
inc
mov
jmp
cmp
lcall
out
mov
enter
pop
lds
sub
aam
sub
pushf
daa
xor
lods
pushf
mov
xchg
mov
int3
in
push
jl
int3
pop
cmpl
cli
push
adc
sub
push
dec
pop
out
fs
and
push
mov
mov
mov
out
pop
jne
aas
push
dec
push
or
in
ljmp
js
sbb
sub
rorl
bound
or
or
lea
or
imul
and
loop
sbb
jbe
pop
inc
out
je
pop
sbb
adc
add
dec
push
int
sbb
aam
add
xchg
jne
dec
mov
or
andb
aas
adc
jne
cltd
mov
dec
pusha
in
pushf
daa
pop
push
movsb
fistpll
lahf
push
or
enter
cmp
sbb
jb
into
cmpsb
insl
arpl
int3
or
int3
jecxz
sbb
sub
pop
and
hlt
shrb
rcll
jnp
setae
andb
ja
sbb
xchg
jne
out
icebp
mov
imul
je
xchg
jle
xor
add
push
jecxz
sub
in
mov
lahf
jae
dec
cmp
add
mov
loopne
inc
fsub
jae
sub
xchg
xchg
call
push
mov
adc
dec
or
sub
insl
or
addl
mov
incl
mov
jae
out
cli
stos
out
stos
movsl
test
call
or
jb
jp
jmp
lock
mov
iret
push
push
inc
adc
jae
push
xchg
xchg
sbb
push
and
and
add
push
lea
fildl
loop
push
test
push
adcb
xchg
jecxz
jge
dec
xlat
movsl
loop
xor
hlt
dec
push
ret
jmp
test
movsb
loopne
mov
nop
cld
pop
push
loope
adc
jmp
inc
out
insb
and
shrb
mov
or
xor
xor
xchg
aam
ret
sub
cmp
cmp
idivl
xchg
or
adc
pop
adc
je
jle
sahf
xor
jbe
add
add
sbb
notb
cli
hlt
push
into
xchg
xchg
adc
aas
jae
pusha
adc
push
mov
dec
in
cwtl
add
mov
stos
cld
push
pop
loopne
pop
cmp
and
sbb
cmp
sub
jl
sub
jae
int3
insl
addb
test
dec
popf
test
push
sub
cmp
loop
pop
test
orl
stc
mov
jp
data16
clc
xchg
lret
or
mov
inc
rclb
sbb
mov
rorl
add
ror
nop
inc
ss
or
xor
inc
jb
sarb
or
cmp
testb
mov
std
es
fmull
outsb
push
or
in
push
adc
sbb
xorl
nop
cmp
adc
clc
out
mov
insl
and
arpl
roll
shll
or
lea
cmpsb
xchg
push
sbb
aam
and
jge
in
jne
mov
mov
pop
test
or
mov
ljmp
push
jg
repz
adc
pusha
jno
rolb
rcrb
xchg
or
ja
lock
cmp
and
dec
popf
test
xchg
in
sbbb
inc
ret
mov
lret
int
sub
ljmp
sub
mov
cld
jbe
mov
inc
jecxz
pop
insl
lods
dec
cmc
enter
icebp
daa
das
pop
jns
sti
andb
lcall
insl
dec
push
mov
cli
lea
lret
das
insb
xchg
rcr
push
mov
mov
mov
adc
mov
pushf
inc
pop
push
pusha
push
sti
pop
pop
cmp
dec
outsb
std
sbb
sbb
xchg
jmp
push
orb
scas
cmp
mov
das
lea
cmp
mov
jle
fisttpl
je
shl
pop
cmp
sub
cmp
sbb
push
stc
pop
scas
push
adc
repnz
rcl
jecxz
or
insb
inc
xchg
lcall
subl
lret
push
xchg
and
mov
inc
mov
sbb
mov
mov
push
pop
xchg
lret
mov
pushf
stos
data16
cmpsb
add
push
lods
mov
cs
pop
xchg
les
mov
cs
ficoml
jae
lret
dec
data16
mov
dec
mov
jae
ss
shlb
push
sbb
es
sub
adc
dec
push
cmpsb
ds
jp
ret
push
aaa
xchg
cmpsb
pop
scas
pusha
loop
mov
jge
dec
jg
push
adc
push
jns
sahf
lahf
adc
dec
sbb
inc
xchg
jge
into
popa
leave
lods
stc
xchg
cmp
in
lahf
jne
lds
jne
jae
mov
push
nop
ss
dec
mov
pop
cmpl
sub
rorb
stos
repnz
in
lcall
aas
stos
pop
dec
andb
xchg
popl
lods
xor
lock
stos
movsb
jmp
cs
xchg
mov
aas
leave
fadd
or
or
bound
test
out
jg
shlb
dec
or
pop
mov
cmpsb
add
dec
push
rorl
loop
and
popf
test
sahf
and
cmp
pop
add
jle
ss
into
outsb
lods
inc
push
call
add
scas
cwtl
in
xor
xchg
lret
cmp
int3
push
test
push
popa
insl
inc
ret
shll
ret
dec
pop
popa
push
ljmp
xor
cmp
adc
cmp
sbb
gs
inc
push
jl
inc
scas
pop
pop
insb
aas
aam
sub
lret
or
aad
mov
dec
insb
hlt
mov
push
mov
mov
cmp
xchg
arpl
lds
movsb
pop
push
lock
cmc
pop
adc
fwait
hlt
jl
stos
mov
xlat
into
and
inc
cmp
and
push
rorl
jl
aam
pop
fwait
xor
cmp
dec
jbe
jb
inc
aad
jno
mov
jle
xchg
bound
test
inc
mov
jb
loope
adc
inc
jb
push
clc
pop
mov
dec
add
stos
cmp
fstp
scas
mov
inc
imul
dec
mov
sub
enter
dec
add
xchg
cmp
mov
mov
mov
mov
sbb
mov
push
inc
cmpsl
push
andl
imul
mov
out
and
jge
pop
dec
les
cmp
ss
push
push
dec
cmp
fisttpll
xchg
dec
dec
lods
out
dec
cmc
mov
inc
jle
sbb
lret
negl
dec
das
inc
dec
push
dec
pop
sub
jl
cmp
pop
sbb
test
adc
pop
jbe
mov
cmp
xchg
xor
mov
adc
jmp
out
cmp
cmc
fstp
dec
lea
rol
mov
int3
ja
xchg
push
push
inc
lcall
fstps
push
bound
mov
lret
sbb
into
cmp
sub
aam
fdivrl
sahf
and
pop
pushf
cltd
leave
scas
stc
sbb
pop
dec
dec
sbb
cmp
cmp
mov
fst
clc
xchg
lcall
lcall
sbb
push
jne
scas
pop
in
or
push
sub
enter
or
lcall
es
cltd
pop
and
sub
cmp
mov
mov
add
out
cs
adc
sbbb
dec
jae
and
js
dec
adc
xchg
sahf
dec
fists
mov
addr16
lahf
fcoml
hlt
mov
aad
pop
xor
movsl
mov
mov
xor
stos
push
lret
or
jg
push
and
sub
sbb
or
sub
icebp
jb
jno
loope
push
ds
mov
mov
cli
or
or
stos
mov
pop
jle
jbe
or
mov
mov
cmc
and
mov
ret
add
jae
lahf
inc
cmp
sub
ss
aad
adc
sbb
cs
jge
lock
aaa
sbb
push
cmp
push
js
xchg
cmp
repz
clc
int3
adc
sbb
push
adc
in
lret
jno
bound
sti
fcom
ljmp
insl
sbbb
jno
push
or
push
mov
add
xor
les
and
repnz
push
andb
int
mov
xchg
outsb
movb
xor
xor
test
and
cmp
push
outsb
jns
int3
add
inc
sub
mov
adc
mov
adc
jns
fsubrs
ljmp
imul
movsl
lcall
jnp
lods
cld
inc
in
pusha
jle
into
adc
cwtl
insb
negl
movsb
mov
test
sub
outsl
call
je
add
dec
enter
jle
mov
mov
in
and
xor
sub
pop
push
push
lds
sbb
icebp
sub
lret
addr16
and
sbb
xor
pop
adc
dec
sub
pop
push
pop
xchg
mov
popf
movsl
mov
fs
into
repz
mov
cmp
and
xlat
jne
xchg
rcll
sub
test
ds
mov
mov
sbb
add
mov
aad
mov
and
mov
sbb
cmpsb
jne
xchg
xchg
add
fnsave
sbb
idiv
notl
out
jo
sbb
push
roll
loopne
or
dec
mov
or
and
aas
mov
mov
ljmp
aas
rorb
cmp
push
loopne
aas
imul
or
lret
jne
pop
pop
or
or
cmp
cmp
jmp
pushf
fwait
hlt
mov
mov
xchg
mov
jmp
jl
gs
cmp
push
cs
ljmp
xor
inc
inc
test
push
add
xor
stc
js
push
xchg
sbb
adc
cld
jae
xchg
lret
cmc
inc
or
mov
cmp
inc
inc
jmp
ficomps
add
aad
int3
mov
in
fnstsw
mov
pop
jns
push
adc
loopne
movsl
push
or
mov
ja
or
aaa
lret
jo
cmc
jge
or
out
push
add
and
sub
sarl
or
mov
adc
arpl
adcb
mov
xchg
stos
in
sub
sbb
jne
repz
cmc
pop
in
ret
ja
or
call
adc
xchg
shl
pop
jno
mov
mov
cmp
repnz
shlb
push
testb
xor
push
pop
cmp
orl
sbb
cld
shll
sub
cmpsl
xchg
rcll
shrb
inc
nop
mov
insl
loope
jo
mov
aas
stos
xor
sbb
outsb
scas
imul
xor
xchg
sbb
xchg
jae
jo
int3
clc
das
lods
fwait
addl
outsb
iret
shlb
jge
daa
test
cs
inc
mov
sbb
bound
stos
or
leave
jge
std
adc
sub
push
out
lahf
mov
adc
add
dec
adc
cs
stos
loope
rolb
sbb
dec
imul
pushf
fidivs
cld
mov
cmpsb
nop
in
data16
xor
pop
testl
scas
call
sub
and
jmp
repz
insb
stos
jbe
xchg
mov
nop
mov
fisubl
gs
sar
shll
sti
popa
fwait
imul
xor
xor
test
bound
xchg
in
pop
or
sub
insb
outsl
lret
shr
rorl
pop
jecxz
dec
jle
xchg
rep
jns
push
inc
push
std
aam
adc
push
ficomps
cltd
cmp
icebp
xor
xlat
mov
cld
test
sbb
sahf
cmpsl
dec
repnz
fwait
addb
das
cmpsl
pop
jmp
les
push
out
cmp
add
push
add
cld
inc
cmpsl
out
adc
pop
inc
or
outsl
fsubrl
outsl
mov
inc
sub
cmp
and
stc
xor
clc
fs
mov
sbbb
movsb
stc
mov
int3
push
add
fistl
pop
ror
roll
sbb
mov
fsubrl
add
les
call
sub
cmpsb
fildl
int
inc
mov
ljmp
cmc
out
cli
mov
jns
mov
outsb
sub
stc
adc
test
in
je
out
or
cmp
sbb
add
cltd
and
cld
jns
mov
ljmp
loope
jne
inc
sbb
add
test
fdivrs
sahf
inc
pop
aam
in
sub
push
xchg
incb
add
popl
xchg
adc
mov
das
and
jns
loopne
iret
xlat
rorl
loop
jge
inc
jo
js
adc
push
mov
adc
insl
dec
xor
mov
out
imul
mov
call
test
and
lock
in
xchg
mov
mov
jbe
xor
mov
xor
in
ret
or
and
sbb
xchg
push
jl
shl
add
push
stc
subb
jo
pop
push
out
mov
stos
inc
push
cmp
fdivrs
sub
cmp
test
push
fs
mov
cmp
or
pop
add
dec
fildll
add
and
andl
incl
rcll
adcl
ret
imul
insl
mov
and
scas
sbb
add
ffree
sub
movsl
jge
xchg
enter
lret
jge
or
adc
lahf
and
sbb
hlt
repz
popa
into
jmp
mov
sti
jnp
mov
in
pop
fsubs
ss
push
inc
dec
vxorps
mov
adc
andl
mov
movsb
mov
and
loopne
scas
jnp
scas
xchg
les
arpl
xor
lret
xchg
rep
xchg
fs
lret
pop
pop
or
clc
mulb
push
cmp
dec
lods
in
or
mov
mov
pusha
push
cs
jmp
xchg
fisubrs
rorb
xchg
push
or
pop
aam
iret
xor
cwtl
movsb
lcall
shrl
hlt
lock
jl
pusha
or
push
test
dec
dec
add
dec
sbb
push
mov
ret
cmp
shlb
jp
jge
shll
movsl
fs
add
cmp
mov
loop
fwait
adc
leave
dec
cs
loope
cmp
ljmp
lods
xor
repz
mov
popa
xchg
mov
test
push
and
mov
push
cs
cltd
mov
testl
andb
notl
leave
and
jb
out
int
dec
lret
sub
std
pushf
mov
loope
sbb
sbb
aaa
inc
es
mov
int3
cmpsb
or
adc
aad
add
in
or
xchg
ss
push
loop
int
xchg
rcrb
mov
and
icebp
out
sar
xorl
stos
notb
decl
fldcw
scas
insb
ret
in
xor
or
xchg
je
xor
lcall
iret
ret
adc
repz
jge
push
jae
gs
adc
pop
jmp
xchg
pop
movsb
stos
mov
push
dec
les
xor
mov
inc
call
shll
push
nop
add
xchg
xchg
or
adc
lock
enter
insb
jle
or
into
cmpl
nop
push
sub
das
xor
xlat
jae
aad
mov
mov
sub
icebp
adc
fnsave
push
cmp
outsb
inc
gs
pop
and
cmp
mov
sub
pusha
push
xor
push
orl
data16
fistpl
jle
pop
jl
and
dec
test
daa
mov
rcrb
cmp
pop
add
rcll
cwtl
lea
adc
int3
sub
xor
orb
lret
addb
cwtl
rorb
rolb
push
loop
aas
lret
call
test
mov
cmc
aam
pusha
xor
cs
imul
pop
fnsave
jae
and
enter
das
mov
movsb
stos
mov
inc
into
repnz
lret
inc
mov
cmp
sbb
les
sbb
mov
mov
lcall
idivl
sub
sub
mov
aaa
es
jno
xor
push
popa
por
cld
outsb
stos
repnz
mov
out
pop
push
std
iret
cmp
aad
pop
cs
in
pusha
inc
jmp
mov
push
add
sub
movsb
out
pop
insl
mov
and
inc
movsl
test
jge
pop
or
mov
sub
jne
rorl
and
fsubp
mov
mov
repz
mov
push
cmp
stos
add
push
and
imul
lret
jne
push
fists
loope
push
sub
inc
pop
push
imul
mov
out
xor
mov
jmp
rolb
mov
jno
push
push
inc
xchg
push
scas
or
inc
ja
pop
in
inc
ds
cs
enter
add
sbb
test
fwait
roll
mov
fucomp
adc
xchg
xchg
pop
fldl
lea
or
scas
dec
xchg
out
pop
pop
sbb
aaa
clc
dec
in
ja
mov
push
ret
scas
mov
sbb
mov
sti
enter
add
iret
pop
mov
jl
cli
aas
sbb
jae
es
lea
aas
insl
in
fsubr
sti
out
jbe
jo
xor
movsb
lret
xchg
add
addr16
fistps
mov
push
movsb
and
out
shl
repz
movhps
pop
or
loopne
push
push
les
push
jmp
cmp
repnz
shl
ljmp
mov
rolb
subl
mov
pop
add
test
add
or
insl
imul
inc
xchg
sub
cltd
lds
inc
xor
repnz
push
inc
push
lret
cmp
and
xor
int
sbb
mov
mov
and
pop
mov
je
iret
inc
mov
mov
inc
cmovb
add
mov
pop
mov
rcrl
out
add
gs
frstor
fwait
xchg
dec
pop
jno
imul
pop
mov
mov
lcall
imul
sub
mov
add
dec
dec
insl
inc
clc
ljmp
mov
add
nop
out
test
ljmp
inc
sub
push
inc
and
adc
stos
push
and
adc
mov
or
pop
addr16
jecxz
mov
inc
lods
mov
xchg
nop
mov
enter
fcompl
xchg
sbb
fs
cmp
cli
iret
or
les
jae
push
sub
mov
jbe
lret
pop
jecxz
aam
fisttpll
daa
arpl
cmpsl
push
xchg
xor
pop
sti
out
add
mov
push
sub
mov
scas
push
or
clc
cwtl
inc
stc
mov
jb
jl
sub
adc
lods
iret
pusha
mov
jecxz
pop
and
out
fwait
lea
inc
int
repz
fists
popf
adc
cmp
mov
jl
call
inc
inc
xlat
loop
cmp
mov
push
lock
mov
jo
mov
mov
lret
jg
add
adc
loop
mov
xor
push
jecxz
adc
inc
push
push
jge
add
add
in
mov
ds
jb
sub
pop
roll
adc
jns
lods
lret
ret
and
or
mov
aam
scas
mov
xchg
push
stos
mov
sti
xor
jp
int
out
mov
shrl
scas
and
add
outsl
pusha
sub
xlat
jl
ret
jo
and
and
cmc
lds
push
das
mov
stos
bound
jecxz
jle
xor
fmull
sbb
icebp
and
dec
or
aad
and
bound
inc
mov
mov
jns
std
fs
movnti
fisttpl
dec
sbb
ret
jle
jo
xchg
hlt
add
ljmp
outsl
int3
mov
pop
dec
scas
lahf
or
mov
call
cmc
mov
xor
inc
orl
lret
xor
jmp
testl
arpl
xor
jae
sub
adc
lret
mov
inc
out
add
mov
fs
test
add
and
iret
dec
cli
push
loop
adc
aam
or
mov
es
cmp
outsb
sub
lods
or
or
mov
inc
xchg
mov
test
enter
mov
movsl
adc
les
loope
imul
into
imul
cmpsb
ret
mov
mov
sbb
adcl
jne
jnp
insl
ret
sahf
inc
sti
xorl
mov
mov
int3
mov
sbb
jae
ljmp
fildl
push
sbb
jg
into
dec
push
movsl
mov
jne
sahf
sub
mov
pop
sub
fstps
dec
rclb
inc
cli
les
imul
xchg
pop
mov
mov
ss
dec
jg
insl
sti
sbb
mov
ds
fmulp
daa
adcl
sub
mov
xor
das
mov
adc
faddl
sahf
in
outsl
inc
fsubl
or
iret
inc
cmpsl
mov
add
mov
das
push
scas
mov
push
icebp
cmp
into
xchg
add
sbbl
fdivrs
popf
stos
inc
popa
pop
push
imul
into
out
xor
sbb
pop
lcall
ja
arpl
mov
std
test
inc
loope
cmpsl
daa
shlb
dec
sbb
cmc
out
repnz
std
add
add
sbb
test
bnd
test
fwait
jae
xchg
out
mov
or
scas
outsl
test
loop
in
out
adc
or
mov
lcall
sub
out
js
aam
cmp
out
mov
cmpsl
frstor
jnp
add
ret
call
inc
mov
mov
ja
adc
sub
sahf
add
ret
jno
iret
mov
aad
stos
push
pop
je
cmp
cmp
in
std
push
adc
es
sbb
int3
sahf
add
adc
clc
scas
stos
xor
cmp
xchg
fstp
and
popa
hlt
lea
sub
pop
mov
adcb
or
call
mov
inc
xor
cmpsl
or
iret
dec
jl
cmp
stos
inc
mov
in
in
jecxz
sbb
adc
lods
cmp
adc
sbb
inc
arpl
mov
dec
mov
lods
out
xchg
xchg
lahf
push
xchg
xorb
add
call
sub
inc
cltd
push
imul
stos
pop
insb
adc
jns
jle
addr16
leave
lock
pop
xchg
push
mov
movsl
add
or
sub
lds
and
clc
repnz
notb
inc
sub
push
mov
jne
xor
dec
cmp
enter
sbb
push
jnp
aaa
xchg
jnp
mov
dec
mov
orl
test
xor
jb
sub
lea
cmpsl
dec
inc
shrb
add
mulps
mov
jmp
scas
cmpsl
popa
mov
scas
jo
push
cmp
loopne
data16
std
addr16
stc
fdivl
mov
les
es
mov
iret
sub
and
insb
xlat
cld
sub
lret
dec
in
int
adc
sub
repz
mov
cmp
out
loop
out
and
inc
sbb
add
lods
mov
sbb
call
and
enter
or
ss
sbb
mov
mov
loop
jns
jmp
sub
cmp
adc
mov
cmp
shll
cmc
rol
dec
getsec
inc
popf
sub
xchg
jle
push
and
xchg
jmp
dec
and
cmp
out
insl
out
lock
popf
dec
dec
push
clc
push
push
and
jbe
xchg
js
lret
jns
dec
shrb
sbb
add
lcall
push
jl
jl
lods
cmc
sbb
data16
in
xchg
and
lahf
jecxz
mov
xchg
cmp
sbb
inc
cmpsb
mov
clc
xor
iret
out
push
addr16
hlt
add
stc
sbb
ljmp
xor
cwtl
stc
rcrb
sub
or
or
cltd
jl
mov
jg
sbb
lods
popl
push
addr16
mov
out
lock
mov
lods
mov
adc
hlt
adc
mov
andb
in
add
xchg
call
jno
push
inc
sbb
pop
adc
incb
lret
mov
ror
pop
movsb
mov
add
daa
xlat
loopne
cli
scas
cs
push
push
dec
xchg
dec
dec
add
jle
aam
stos
arpl
out
lods
sti
int3
fadds
or
mov
add
mov
repnz
ret
add
lock
push
inc
jle
push
sbb
sbb
push
inc
das
insb
ret
fstps
fsubp
dec
or
jo
pop
repnz
dec
out
cmpsl
adc
adc
outsb
stc
repz
jo
pop
dec
seto
adc
mov
and
xchg
shlb
cltd
cmpb
xor
sbb
adc
lods
das
or
pop
xchg
ljmp
repz
cmp
pop
mov
int3
or
fstps
or
divb
mov
push
sbb
jp
sbbl
sub
imul
adc
test
repz
xchg
inc
cmp
pusha
dec
xchg
sbb
jl
loop
jno
pop
test
mov
sub
mov
aaa
mov
adc
out
xchg
inc
in
cmc
xchg
xchg
sbbl
sbb
push
dec
jae
sub
adc
xchg
int3
iret
and
xor
add
push
jbe
push
pop
mov
aas
or
inc
xor
cmp
push
xchg
jbe
xor
cli
xchg
jo
sub
fxch
int
cmpsb
gs
push
outsb
cmp
pop
jb
push
jge
xchg
dec
jo
int3
ret
add
dec
loopne
enter
shl
mov
fdivs
negl
std
mov
test
add
add
lods
push
mov
mov
cmp
ds
mov
lea
jl
mov
cmp
adc
imul
scas
call
xor
mov
lds
cltd
cmp
sbb
add
push
ret
mov
pop
inc
or
roll
add
pop
adc
push
sbbb
push
rep
lds
std
add
mov
jnp
fcmovu
hlt
mov
lea
shll
rcl
das
aam
sub
inc
dec
jns
hlt
cmp
clc
pop
pop
fisubl
sub
xchg
mov
mov
sarl
pop
lret
std
ud2
test
add
imul
add
cmp
mov
xor
in
mov
pop
lds
xchg
mov
and
nop
ja
push
mov
push
stos
sub
sub
lock
pop
xchg
lahf
sahf
aas
fistl
lods
cs
jnp
cmpsl
je
and
in
jmp
arpl
sbbb
mov
mov
xor
sahf
xlat
dec
push
setne
or
adc
outsb
idivb
call
or
mov
mov
xchg
outsb
out
push
mov
jecxz
movsb
loop
fucomip
fnstsw
ss
cmp
xor
fsts
mov
hlt
nop
and
adc
stc
mov
pushf
sub
pop
lods
xchg
scas
sub
pusha
sub
mov
jae
inc
push
sbb
push
pushf
adc
stos
popf
push
fnstenv
adc
inc
push
mov
push
aam
sbb
cs
cld
pop
sbb
xor
mov
mov
jl
and
xchg
fdivrl
mov
mov
stos
hlt
ljmp
shlb
push
gs
shrl
lds
xchg
lock
ds
mov
es
dec
pushf
aad
js
js
jno
pop
add
decl
mov
mov
inc
adc
adc
jge
les
imul
pop
popa
stc
out
dec
lds
shll
or
push
add
inc
stos
and
stos
int
sub
mov
pop
sarb
das
lret
daa
push
adc
lahf
fiadds
mov
dec
aas
jge
push
jmp
mov
loop
in
int3
cmp
popf
ja
mov
ja
ja
cmp
in
lods
mov
mov
dec
push
dec
mov
pop
test
ret
rclb
inc
orb
mov
xor
and
fmuls
enter
movntps
add
repnz
mov
lret
pushf
push
xchg
cmp
jns
fimull
jne
jo
and
das
sub
out
xorl
push
addr16
push
sub
xor
repz
out
adc
cli
aam
jno
jns
sbb
and
xchg
dec
into
out
sub
test
adc
movsl
jge
or
xchg
data16
jecxz
or
stos
cld
icebp
fsubrs
mov
mov
daa
adc
iret
or
orb
adc
and
sub
iret
sbb
roll
ss
mov
movsb
jne
imul
mov
pop
lock
pushf
sub
lret
daa
rclb
mov
push
mov
push
xor
outsl
mov
pop
push
test
sub
das
mov
out
in
mov
daa
cwtl
test
dec
pop
xorb
test
cmc
in
or
mov
scas
ljmp
stos
aam
scas
lock
je
mov
leave
inc
cmp
aad
sbb
leave
stc
scas
push
dec
ljmp
decl
and
push
or
mov
das
fadd
add
mov
pusha
icebp
cmp
sbb
scas
insl
out
aaa
mov
inc
imull
hlt
inc
popw
xor
mov
mov
lock
add
add
ficoms
inc
mov
ret
cs
daa
leave
mov
xchg
lods
xor
aaa
sar
test
mov
mov
les
loop
fldenv
addr16
sub
add
filds
gs
arpl
or
dec
push
orb
data16
test
xchg
dec
shll
jge
push
jecxz
inc
mov
dec
ret
lea
fcoml
les
jbe
sub
ja,pn
imul
cmpsl
addr16
mov
rclb
add
imul
lahf
mov
push
xchg
mov
sbb
testb
sbb
int3
mov
dec
jne
xor
jne
mov
lret
cmp
or
adc
ret
outsb
aas
ret
roll
push
scas
sub
sbb
or
hlt
jmp
imul
mov
inc
subl
xlat
ds
aam
in
out
sub
push
fists
mov
cmp
inc
sarb
ret
push
sbb
sbb
lods
add
stos
and
test
icebp
mov
cltd
push
pusha
mov
add
push
sub
inc
or
or
pusha
lret
icebp
pushf
or
or
mov
sbb
push
sub
mov
add
push
pop
bound
pusha
push
rcl
or
inc
pmaxub
pop
or
sbb
sub
xor
mov
dec
and
hlt
jnp
stos
les
cmp
sbb
insb
inc
rcr
mov
jle
pop
dec
mov
xchg
scas
jbe
sub
jp
lcall
arpl
push
rorb
and
mov
inc
je
sub
push
mov
dec
aas
aas
imul
jge,pt
lods
leave
cmp
pop
mov
sub
shll
and
lahf
push
mov
fwait
icebp
jle
fsubrs
pop
xchg
sbb
rol
test
test
cmp
and
aad
adc
inc
notl
in
add
subl
pop
mov
push
xchg
sub
lahf
cmpsl
jno
adc
stos
mov
das
add
sub
rcr
pop
sarb
sti
jl
dec
sub
pop
pusha
push
and
fs
scas
sarb
pop
dec
daa
xchg
xor
sbb
push
and
addb
addb
ret
pop
sbb
fsubrl
repnz
push
ja
enter
mov
lahf
push
push
or
mov
cmp
test
add
adc
in
insb
jp
iret
dec
cmpsb
or
jle
dec
mov
jno
cli
addb
mov
push
mov
jno
lcall
xchg
stos
xor
xor
cmpsb
mov
stos
pop
imul
jbe
xor
inc
dec
idivl
jno
add
out
push
dec
ret
cmpsl
mov
sub
mov
xchg
jo
sti
sbb
addr16
dec
inc
push
add
lods
mov
sub
xchg
dec
add
repnz
dec
adc
bound
stos
push
xlat
pop
push
out
cld
add
int
or
xor
sbb
out
push
fcmovbe
fisttpll
stc
test
lds
ret
sahf
mov
xchg
test
arpl
dec
xor
popa
add
sarl
jge
jae
data16
in
and
mov
sbb
mov
loope
xor
inc
fwait
push
inc
shrl
test
xor
xchg
mov
push
out
aam
cmp
or
mov
mov
add
and
rorb
popf
adc
ret
adc
xchg
lcall
xor
lods
stos
mov
cs
leave
dec
test
daa
pop
xorl
fs
stos
outsb
push
add
jp
mov
jmp
xchg
mov
mov
mov
mov
sub
push
inc
or
fincstp
cmpsl
cmpsl
inc
lahf
push
jae
loope
test
stos
jae
jmp
mov
xor
pop
lock
add
dec
xchg
mov
in
adc
adc
xor
push
cmpsb
cmp
mov
sub
jns
mov
dec
gs
or
inc
cmp
xor
and
mov
icebp
lea
adc
push
popa
push
jb
out
fs
xor
lods
xchg
shld
mov
fsubrs
inc
ja
test
xchg
xchg
sub
andl
daa
mov
into
add
mov
dec
adc
popf
test
in
push
in
add
inc
std
fisttpl
push
jl
int3
xchg
dec
jne
addr16
je
fwait
or
cmpsb
sbb
mov
xor
imul
sar
mov
or
movsl
shll
std
hlt
or
mulb
mov
xor
mov
out
mov
jo
pop
cmp
arpl
fsubs
pop
int3
push
popf
jnp
push
xchg
add
sarb
movsb
jne
fwait
mov
adc
ds
jns
push
cmpsl
cmp
ds
xchg
in
ss
mov
inc
jecxz
shl
xor
addb
enter
ret
add
scas
dec
xor
jno
adc
cmp
mov
jp
cs
mov
pushl
fdivl
sbb
loopne
cmpsb
mulb
jne
das
das
jg
jo
addl
mov
xchg
mov
sub
mov
fisttpl
cmpsl
and
loopne
loopne
sar
cmp
xor
adc
xor
xchg
adc
inc
mov
clc
xchg
outsb
cs
xchg
inc
and
and
stc
push
pop
mov
xor
insb
aas
add
xlat
add
pop
xor
pop
and
xchg
movsl
cld
out
stos
inc
loop
jnp
movl
xchg
pop
adc
movsb
pop
jae
sub
adc
fldenv
loop
inc
repnz
pop
fnstcw
push
movsl
std
and
push
push
add
push
sub
int
jp
jno
cmp
jae
cld
add
test
mov
fisttps
nop
push
mov
xchg
loope
ljmp
sub
cli
ja
sbb
jb
and
push
xchg
fwait
enter
inc
jno
push
popf
ret
pop
cmp
das
jne
xchg
dec
fs
cmp
out
push
jmp
push
scas
mov
xorl
push
cmp
pop
sub
lods
mov
adc
daa
ret
sub
cld
ds
adc
mov
lock
or
mov
pop
inc
push
push
inc
pop
je
ret
sub
jns
sbb
pop
lret
push
add
pushf
pop
jecxz
ret
add
movsl
inc
push
lcall
fcoml
loop
lods
stos
jne
mov
out
ss
mov
sbb
aaa
outsl
xor
xchg
inc
stos
xlat
push
mov
and
cmp
shll
inc
stc
lcall
js
sub
xchg
pop
sbb
inc
jb
xchg
sarb
push
pop
jle
mov
pop
pop
cs
inc
js
pop
mov
inc
leave
popa
pop
or
pop
push
push
aam
ret
ret
or
cmp
insb
mov
daa
push
xor
fbld
movsl
arpl
sub
stos
rcrb
fs
and
arpl
bound
jbe
out
xchg
sbb
movsb
xchg
enter
mov
push
out
pop
cmp
stc
sub
adc
dec
icebp
push
xchg
jb
mov
cmpsb
test
lret
mov
jp
mov
sbb
pop
mov
lds
mov
mov
std
cmp
hlt
rorl
inc
xor
xchg
mov
pop
ljmp
out
cmpl
scas
sub
add
lcall
push
lcall
inc
pop
clc
cmpsl
out
cld
push
rcrb
cwtl
xor
xchg
out
sar
test
and
das
pop
fcoml
xor
push
adc
xor
add
push
movsl
lods
fsubrs
lret
adc
push
addr16
pusha
cmpsl
repz
fwait
or
xlat
jmp
push
mov
xchg
add
adc
dec
adc
mov
and
lcall
je
xlat
dec
call
pop
jbe
cmp
mov
sahf
pusha
mov
out
fmul
cmp
add
es
inc
or
fmull
add
mov
mov
enter
sub
fisubrl
es
mov
dec
pop
subb
adc
inc
mov
sti
stc
pop
add
ja
mov
xchg
mov
leave
pop
sbbb
mov
lret
mov
xchg
adc
cmp
xor
shll
sub
lahf
mov
mov
sahf
in
fnsave
xor
mov
idivb
in
sbbl
pushf
repz
dec
mov
pop
mov
lods
adc
mov
dec
inc
jl
or
stos
sub
push
dec
je
mov
or
mull
pop
add
mov
jne
ds
mov
and
jg
inc
pop
pop
fnstcw
js
ret
mov
sbb
fistpll
jmp
out
push
int
insb
mov
sarb
xor
test
pop
scas
cwtl
inc
and
inc
iret
pop
add
cs
cmp
mov
sub
movsl
inc
data16
into
mov
adc
loop
xlat
jns
hlt
push
sbb
mov
or
cmp
mov
stc
clc
cmp
push
push
flds
dec
and
sti
addl
pop
rolb
scas
scas
push
mov
xchg
aas
jb
js
leave
int
and
insl
andb
cmp
adc
adc
and
lock
ret
xlat
jae
test
xorl
xchg
lods
pop
cmp
hlt
stc
decl
pop
add
mov
cmp
aad
pop
or
in
addr16
out
push
sahf
divl
stc
and
shll
mov
das
loopne
jp
pop
push
mov
sahf
cmp
je
push
mov
push
fs
cs
mov
repz
in
mov
mov
pop
aad
adc
and
jmp
sbb
aad
xor
lahf
fcoml
lds
test
sub
cmc
mov
sub
or
mov
push
mov
cmp
scas
mov
mov
adc
add
mov
ja
repz
jl
mov
push
push
cmp
loope
xor
mov
dec
sbb
fsincos
sahf
ljmp
mov
mov
and
imul
mov
rorl
and
cmp
mov
jb
jmp
push
shrl
movsb
loope
jl
mov
push
xlat
xchg
push
mov
mov
cmp
pop
cmp
in
and
sub
jmp
fdivr
stos
sub
push
mov
adc
jg
out
sub
cmc
push
inc
sbb
test
mov
push
xor
jmp
stc
dec
out
pop
or
gs
mov
lock
inc
lcall
pop
dec
cli
mov
int3
pop
mov
add
das
pop
adc
ja
mov
push
mov
mov
jmp
or
mov
push
addb
mov
fldenv
cld
ret
jno
hlt
xor
or
out
push
jb
dec
sbb
mov
sbb
fs
jg
adc
sbb
xchg
cmp
jno
aaa
pusha
or
xor
cmpsb
mov
jmp
jle
mov
rcrl
insl
sub
add
in
mov
sub
in
xchg
test
mov
test
js
in
lods
lret
adc
imul
jno
push
mov
nop
push
out
mov
lds
out
lods
icebp
hlt
popa
loop
jae
ss
sub
mov
dec
pusha
divb
jbe
insl
arpl
lret
idivb
pop
or
mov
and
out
or
popa
mov
mov
inc
test
adc
xor
inc
punpckhdq
push
adc
inc
mov
sub
ss
mov
out
add
dec
lods
mov
push
cmp
inc
aas
mov
pushf
mov
je
cmp
ss
push
imul
xor
push
std
xchg
nop
fmul
stos
lret
mov
dec
int3
xchg
ja
or
adc
hlt
cs
pop
fs
push
mov
jp
jnp
movb
add
imul
xor
push
shll
in
cmpsb
faddl
add
rorl
ret
insl
js
push
fwait
sub
lret
pop
cmp
mov
lock
push
scas
fsubrs
add
test
jo
stc
adcb
pop
lods
ret
test
pop
out
xchg
push
stos
sbb
mov
hlt
mov
das
push
cmpsb
cmp
subl
int
ud0
vsubss
pop
jecxz
add
and
sub
push
jns
mov
test
std
sbb
divl
mov
push
lods
jp
mov
pop
cs
fwait
lahf
add
stos
inc
lods
es
fadd
mov
sbb
aaa
xor
cmpsb
jno
rolb
fsts
dec
push
pop
nop
xor
adc
sbb
xchg
and
mov
cmc
mov
lods
imul
mov
sub
scas
insl
pop
jecxz
ret
jns
cwtl
das
cmpsl
push
jmp
fiaddl
jecxz
mov
outsl
insb
jno
mov
dec
movsl
fadds
xor
mov
jb
adc
dec
scas
cmpsl
xor
and
in
jb
imul
int
adc
sub
xchg
mov
in
fidivrl
push
sub
shl
fcoms
add
loope
in
hlt
push
les
mulb
inc
push
hlt
add
sbb
mov
cs
in
and
pushf
add
cmpsb
jns
pop
mov
jne
ss
push
jb
hlt
mov
in
mov
jb
sbb
fdiv
dec
iret
cmpsb
pop
and
xchg
add
dec
and
fdivs
lock
pusha
hlt
movsb
lods
pop
insl
lods
loop
pop
arpl
dec
outsl
mov
jmp
and
movsb
aaa
fnstsw
jne
frstor
fcoms
aaa
test
mov
out
rcl
lret
mov
lahf
or
xchg
loope
cmpsl
or
shlb
insl
mov
shll
in
adc
sub
es
xor
or
cmpb
adc
mov
mov
jle
push
and
jo
fldcw
sbb
outsl
clc
sub
sbb
out
clc
mov
push
clc
pop
cltd
ret
insb
mov
inc
xchg
push
lea
xor
dec
jle
sbb
daa
cltd
test
jge
rclb
outsb
mov
sbb
sub
repnz
push
bound
mov
cmpb
data16
jb
cmp
dec
sub
xchg
icebp
xchg
xor
loopne
mov
xchg
push
lcall
push
mov
adc
jecxz
insb
jge
fisubrl
repnz
jbe
mull
mov
daa
lods
bts
mov
add
popa
movl
into
sub
push
sti
lock
xor
or
in
mov
add
jnp
pop
repnz
mov
jo
pop
ja
sbb
cwtl
xchg
dec
rorb
jbe
cld
inc
dec
mov
sub
ret
push
sbb
push
pop
xchg
push
stos
cmp
push
enter
stos
jae
lods
divb
out
xchg
cs
lcall
les
cmpsl
outsb
popa
dec
xlat
cmpsl
gs
aam
repz
mov
add
and
testl
pop
and
out
push
mov
dec
and
outsl
adc
cmp
mov
mov
movsl
push
push
xchg
scas
jnp
xor
cld
add
pusha
mov
in
lret
popf
aaa
test
mov
imul
test
sub
data16
cld
xchg
pop
dec
push
repz
sbb
movsl
cld
aam
icebp
gs
je
push
mov
decb
mov
shll
ret
int3
xor
cmp
subl
es
pop
cmp
cmc
adc
mov
inc
andl
dec
movsl
sub
xor
mov
sbb
jns
cmpl
mov
cmc
and
xchg
inc
rclb
sbb
dec
cmp
test
xor
mov
inc
stc
bound
inc
pusha
pop
dec
nop
jns
in
pop
cmp
je
nop
push
test
mov
dec
ss
inc
jmp
jge
outsl
push
jnp
dec
mov
sub
test
leave
iret
scas
ret
pushf
and
shl
in
inc
jl
bound
js
test
sub
mov
mov
or
setle
push
out
cmpsb
cmp
divb
fistl
mov
mov
call
or
lret
push
xor
xchg
xchg
ss
lods
pop
es
and
inc
pop
xchg
imul
int
mov
push
mov
arpl
push
pop
pop
mov
pusha
inc
mov
xor
xchg
loop
in
mov
ljmp
sbb
xchg
ret
and
sub
mov
push
pop
repnz
bound
push
les
sbb
fdivs
cmp
adc
int
xlat
or
in
sbb
mov
adc
pop
or
call
pop
lret
fldcw
mov
jl
mov
xchg
scas
out
dec
fists
cmpsb
jg
cmpsb
cmc
and
and
and
dec
fcmovnbe
les
movsl
popf
jae
fimull
and
sub
push
out
and
add
jmp
jmp
scas
push
pushf
fldz
dec
aam
mov
push
add
test
xchg
jecxz
push
mov
pop
sti
dec
inc
jne
cmp
jecxz
aaa
xchg
jnp
cld
enter
in
dec
test
inc
lods
stos
lods
icebp
xor
int3
lods
popa
pop
mov
sti
mov
adc
push
inc
lret
sbb
jne
lock
scas
jg
cmp
clc
jbe
jae
xor
or
jp
dec
pop
dec
dec
mov
aam
out
add
jmp
sub
mov
fnsave
out
das
xor
pop
push
inc
repz
lea
pop
push
call
xor
inc
adc
data16
out
adc
dec
mov
cmp
data16
pop
enter
sub
pop
fwait
notb
pop
cwtl
adc
sbb
test
lret
cmp
cld
loope
scas
inc
cmp
je
icebp
xchg
popf
xor
mov
xchg
pop
and
push
inc
test
mov
pop
fistpl
mov
xchg
xchg
shll
in
inc
mov
mov
outsb
int
in
dec
in
mov
insl
adc
rol
xor
cmp
xchg
pop
ret
cmp
or
mov
rorl
imul
sbb
xchg
mov
loopne
pop
adc
aaa
cmp
out
outsb
adc
insb
xchg
xor
mov
cs
cli
sub
and
in
pushf
test
mov
sahf
and
mov
shl
scas
mov
lcall
in
pop
inc
faddl
mulb
jecxz
xor
and
stos
xchg
jno
lock
mov
inc
sti
and
add
push
adc
or
pushf
imul
pop
adc
jecxz
mov
sbbb
mov
or
loopne
aas
xor
xchg
scas
js
andl
daa
lds
mov
std
mov
inc
imul
and
icebp
adc
push
pop
cltd
jecxz
cmp
push
mov
sub
gs
xor
inc
int3
jo
fwait
ret
dec
push
insl
js
mov
xchg
filds
lods
mov
adc
dec
js
push
jp
mov
jae
sub
rorb
gs
dec
jl
xchg
clc
push
mov
sub
jge
lods
cli
sbb
xor
data16
int
cmpsl
outsl
aad
mov
mov
das
aad
pop
stc
mov
out
es
sub
dec
jno
pavgw
aad
xor
cwtl
xchg
inc
adc
jle
inc
enter
out
or
xor
xor
sbb
popa
adc
adc
adc
movsb
jns
fldt
das
in
mov
mov
cmp
cmp
push
cs
add
out
inc
imul
rcll
in
xchg
out
jno
xchg
mov
mov
out
fs
mov
cmpsl
fdivs
jne
mov
jne
addb
movsl
fs
call
outsl
jo
push
hlt
stc
xchg
xlat
enter
adc
push
idivb
mov
jmp
inc
and
int
cmp
dec
test
jo
shr
xor
and
cs
dec
pushf
cs
aaa
addr16
stos
popf
cmp
push
jo
sub
and
push
mov
test
jmp
imul
push
push
xchg
sbb
jmp
jne
stos
je
clc
adc
ret
iret
dec
into
aaa
aad
adc
xchg
testl
and
bound
inc
fnstenv
sub
xchg
dec
sbb
push
imul
add
inc
ret
xor
lods
inc
sbb
popf
std
mov
and
mov
into
pop
mov
lcall
loopne
and
js
jo
fidivs
mov
test
mov
lods
outsb
mov
jne
sti
mov
roll
cs
push
pop
jbe
repz
inc
sub
inc
pusha
pop
call
lret
mov
in
cmpsb
sarb
jge
sub
jns
and
shlb
call
mov
mov
sub
xchg
in
xchg
cmovl
popf
add
push
daa
pop
adc
test
notb
xchg
push
rclb
xchg
pop
pop
adc
repz
ret
xor
adcl
xchg
imul
inc
shrb
mov
xor
xor
outsl
int
pop
loope
lret
jle
mov
movsl
mov
lcall
invd
jl
cmp
xor
jo
sbb
cmp
fdiv
cwtl
imull
addr16
decb
cmp
sbb
add
hlt
adc
inc
lods
lcall
jae
jl
and
mov
and
loop
fmuls
mov
lret
lds
mov
out
pop
ss
add
sbb
mov
xchg
lds
mov
dec
jne
nop
loope
out
mov
icebp
out
or
and
fsubl
sar
add
sub
fpatan
sbb
orl
leave
mov
inc
into
out
ret
lea
cmp
sub
sbb
inc
aad
mov
fdivrl
push
loope
test
incl
mov
and
test
lods
insl
xor
add
or
mov
cmpsb
into
test
ffree
pop
gs
jne
xor
push
pop
rcrb
adc
mov
add
push
inc
mulb
sbb
pop
imul
xlat
fs
mov
mov
cmp
ret
pop
fnstenv
std
test
mov
mov
iret
cld
pop
mov
insb
cmpsb
inc
or
jae
cmp
pop
dec
aas
jmp
xchg
stos
mov
ja
ds
out
iretw
xor
ljmp
ficompl
cli
pop
repnz
mov
repnz
adc
jb
test
push
xchg
inc
das
sahf
aas
stc
push
push
jle
dec
add
mov
pop
stos
repnz
dec
or
inc
pop
pop
out
adc
cmpsb
call
cmp
daa
xor
cwtl
push
hlt
push
adc
int
jb
inc
roll
sub
sub
daa
dec
stos
xchg
fs
xchg
jle
mov
rol
pop
jnp
adcl
idivl
repnz
mov
gs
addr16
jae
jge
xchg
scas
push
adc
lods
mov
xchg
cwtl
xor
lcall
or
cmp
mov
cmp
jbe
loop
jmp
sbb
push
xor
sbb
fidivl
and
lds
cwtl
sti
mov
arpl
adc
dec
hlt
pop
xor
fld
dec
mov
cmp
test
imul
mov
pop
lahf
add
xlat
fs
pop
pop
ret
aas
adc
ja
inc
pop
out
mov
adc
cmpsl
xchg
fldt
jbe
push
cs
out
ja
in
lahf
sbb
xchg
dec
push
divb
xchg
je
xchg
pop
outsb
mov
jg
rcrl
movsl
enter
pop
adc
jnp
xchg
xor
mov
adc
cmp
es
int3
inc
or
jne
mov
mov
incb
xchg
pusha
jb
pop
inc
mov
push
fstps
fcoms
xor
lods
mov
out
add
cmp
out
xchg
sbb
pusha
mov
orb
mov
les
lcall
adc
lock
dec
inc
dec
cmpsl
fnstsw
ds
stos
cmc
leave
call
fisubrs
adc
adc
test
insb
mov
jp
push
fdivl
dec
je
rol
dec
xchg
fnsave
daa
jne
jecxz
dec
cltd
push
cmc
clc
sub
lret
fs
sub
je
jl
cld
mov
or
daa
fsts
les
add
out
in
mov
es
inc
jns
mov
xchg
lahf
test
push
push
jle
sub
inc
mov
in
sub
add
test
adc
and
cwtl
fidivl
cli
xchg
das
scas
and
sbb
lock
cmp
cmpsb
push
dec
dec
mov
ret
dec
xchg
and
mov
test
daa
sub
mov
jl
pusha
cmpb
push
hlt
or
aam
pop
std
push
es
mov
cmp
cmpsl
in
test
mov
data16
xor
dec
push
test
pushf
xor
sbb
repnz
call
daa
test
jb
pminub
in
mov
xor
xchg
or
sub
enter
imul
lock
incb
and
dec
aad
movsl
cmpl
ss
push
outsb
and
jo
xchg
pop
les
jmp
stc
aas
jne
xorb
loop
stos
fdivs
mov
imul
push
cmp
xchg
and
sbb
test
arpl
pop
dec
shlb
aas
scas
cmp
xchg
dec
test
and
int3
adcl
pop
mov
imul
sarb
aam
test
stos
lock
rcrb
xchg
fcoml
push
inc
or
mov
sbb
add
mov
xor
shlb
push
xor
xlat
xchg
pop
test
pop
les
sarb
test
sbb
push
insl
fwait
dec
adc
pop
ljmp
pop
xor
lods
mov
inc
jno
push
and
push
dec
mov
and
cmp
jle
pop
pop
lea
and
fcompl
jge
aaa
mov
adc
mov
lret
js
pop
mov
sbb
call
pop
dec
out
inc
mov
test
mov
in
out
and
inc
cmc
fwait
movsb
cmp
xchg
cmp
lret
cs
push
mov
je
push
or
xor
mov
xchg
xlat
mov
sbb
icebp
mov
fldenv
sub
or
and
lahf
jno
leave
icebp
cmp
outsl
and
test
repz
jb
cmp
jne
xchg
imul
mov
inc
cld
xchg
daa
pop
ljmp
sbb
ja
adc
mov
mov
hlt
jecxz
ret
pop
add
and
or
pop
hlt
ljmp
daa
rolb
stos
push
sbb
sub
pop
add
lret
lret
ss
js
clc
and
cld
leave
ror
arpl
data16
in
stc
jge
bound
or
xchg
inc
icebp
push
pushf
lcall
movsb
push
jg
push
pop
data16
push
jl
test
inc
in
lods
jp
or
and
test
add
fcoml
jmp
out
xchg
push
mov
or
enter
orb
pop
imul
or
rclb
inc
or
inc
andb
add
cld
iret
das
rol
inc
std
outsl
movsb
aam
rcl
jae
fwait
shrl
jo
mov
call
fwait
sub
into
cmp
mov
mov
pop
push
xor
mov
or
mov
and
mov
cmp
xchg
mov
add
stos
lahf
add
sar
jo
movsl
aad
add
into
repz
popa
lcall
fmuls
mov
ficompl
sbb
xchg
nop
push
and
dec
nop
push
push
xchg
lods
inc
jle
jo
xchg
cmpsl
cmpsb
mov
pop
leave
ja
cmpl
movsl
add
mov
push
shl
aas
jns
in
lock
fwait
mov
push
ss
mov
pop
cmp
out
ljmp
mov
mov
jp
incb
andl
mov
xchg
inc
pop
and
mov
add
nop
jbe
jae
aas
xchg
int3
sub
cmp
rcl
cmp
das
daa
mov
repz
push
lock
sti
sarb
ret
and
ss
adc
pushf
fcompl
xchg
pushf
call
daa
into
xchg
jnp
nop
adc
mov
sbb
loope
dec
cmp
cmp
xlat
incb
xchg
pop
stc
iret
bound
arpl
out
dec
lods
add
stos
fs
or
mov
fstl
mov
ss
sub
ret
cltd
ret
cmp
push
lods
add
addr16
arpl
pop
ljmp
or
ret
out
lds
sub
lret
xchg
jg
ret
xchg
mov
mov
imul
lods
sbb
loope
inc
add
xor
data16
add
add
cmp
rcll
or
jnp
in
lds
dec
xchg
mov
mov
test
sar
push
pop
pushf
clc
lahf
fisubrs
addr16
sub
mov
aas
les
fcompl
add
dec
cmc
rcrb
dec
movb
cld
ja
popl
sub
addr16
cld
mov
or
in
jmp
xchg
xor
loop
and
aas
cmp
je
sub
adc
jmp
stos
stc
inc
push
inc
adc
pop
sub
mov
shlb
clc
dec
stos
push
scas
inc
add
les
mov
adcl
and
je
nop
call
cmp
jne
pushf
movsb
mov
sbb
aad
lahf
jb
pmulhw
sub
xchg
mov
adc
das
push
or
xchg
movhps
dec
dec
pop
fwait
sub
movsb
or
mov
popa
mov
or
and
insb
or
jno
imul
sbb
xorl
mov
repz
divl
insb
lods
sbb
imul
or
das
push
xor
fwait
pushf
pop
push
push
out
cli
aas
lahf
faddl
cwtl
sarb
roll
ss
inc
loope
and
adc
out
jg
leave
leave
cmp
jg
push
dec
sbb
das
xor
mov
push
sub
jns
cld
imul
addr16
mov
insb
cmc
cmpl
shl
fisttpl
sub
push
sahf
or
std
cwtl
sbb
sub
cld
mov
in
pop
cmp
sbb
push
inc
mov
cmp
jae
and
xchg
and
inc
sub
dec
fdecstp
adc
clc
mov
ljmp
add
dec
and
mov
cmp
outsl
sti
or
ds
mov
push
cmpsb
retw
inc
cwtl
xchg
add
addb
scas
pop
jnp
iret
jns
sbb
jmp
cmp
xor
jecxz,pt
cltd
mov
add
xchg
pop
adc
pop
mov
xchg
jl
leave
adc
out
sbb
mov
aaa
add
dec
repz
cmp
sbb
jno
out
shrb
mov
push
fistps
sub
mov
dec
repnz
iret
xlat
pop
mov
or
outsb
idivl
arpl
loopne
test
sbbl
loop
push
jae
aad
test
pop
into
mov
pusha
dec
cmc
pop
add
dec
jne
insl
xchg
push
mov
int3
dec
jae
jg
xchg
xchg
xor
sbb
push
or
fcoml
pop
cmp
mov
add
or
stos
andl
movsl
in
xchg
jbe
loopne
mov
call
fiadds
std
mov
ficoms
xlat
aas
aam
lea
adc
icebp
sub
adc
and
sarl
push
test
rolb
lods
add
sub
lods
fbstp
mov
dec
push
and
jge
xchg
push
loopne
daa
repnz
xor
pop
insl
pop
push
adc
mov
loop
add
mov
xchg
fnstsw
mov
or
xchg
scas
inc
icebp
stos
cltd
and
mov
aas
jns
in
mov
movsb
sbb
sub
enter
cmp
dec
in
imul
out
mov
dec
jne
movsl
arpl
in
jns
sbb
mov
les
mov
jbe
xlat
outsb
test
dec
pop
sbb
sbb
pop
inc
lcall
daa
into
data16
xchg
add
scas
jmp
sbb
cli
nop
jg
rol
mov
push
adc
dec
mov
or
fldt
xchg
imul
push
lret
lds
enter
scas
dec
into
pop
jbe
popf
addr16
mov
enter
lahf
out
xor
xlat
es
les
inc
sbb
mov
lods
xchg
ret
xlat
fstps
cmpsb
mov
insb
movsb
jb
int
je
aaa
dec
push
xchg
and
push
push
mov
mov
pop
dec
movb
xchg
movsb
hlt
jnp
or
mov
ds
sbb
ds
pop
dec
mov
sahf
cmp
and
sbb
cmp
mov
out
push
into
lea
cmc
lret
add
xor
and
scas
jl
cmp
xor
mov
int3
cmp
lret
lcall
sub
dec
shr
jp
and
cmp
lock
xor
bound
shlb
mov
in
fcompl
mov
test
jbe
and
inc
sbb
fucomip
dec
jo
lret
cmp
pop
lods
and
aam
out
mov
xchg
xchg
adc
jnp
lret
leave
cltd
sub
cmp
inc
mov
fs
hlt
sbb
jno
adc
loope
test
adc
enter
arpl
adcb
cmp
push
cld
or
jge,pn
rorb
push
mov
leave
push
iret
adc
mov
xchg
pop
cmp
cmp
ror
mov
in
outsb
insl
cmc
cmc
mov
insl
call
leave
pop
jns
xchg
and
mov
sahf
xor
ljmp
negl
add
jle
mov
cmp
sub
cmp
add
add
lods
cmp
cld
shlb
pop
inc
sbb
jbe
movsb
aam
repz
push
clc
xchg
sti
xlat
loopne
push
aad
and
lods
xchg
cmp
pop
rorb
in
mov
fdivl
and
shlb
fdivs
adc
mov
push
or
and
xchg
push
daa
push
add
adc
add
out
cmpsb
fistpll
or
mov
movsl
mov
pop
add
jecxz
cltd
ss
sub
outsb
lcall
loop
mov
or
test
dec
daa
movsb
mov
pop
push
popa
xlat
sub
sub
jecxz
es
into
mov
dec
stos
push
xlat
scas
push
sub
pop
popa
push
ja
lods
aam
and
ja
lods
inc
divl
xchg
dec
jnp
sbb
inc
jae
mov
push
dec
je
imul
dec
sub
leave
mov
pushf
push
sti
add
ljmp
jmp
jg
xchg
cmc
xchg
icebp
mov
shr
nop
mov
loop
mov
cld
jmp
jecxz
jo
sub
imul
or
movsb
das
sub
lods
xchg
iret
leave
ret
mov
cmpsl
mov
dec
aaa
dec
lds
push
dec
sub
mov
fidivl
cli
add
imulb
pop
test
movsb
cld
pop
shl
add
divl
mov
mov
adc
add
cli
movsb
add
push
push
mov
cli
dec
adc
xlat
loop
out
add
outsl
fnstenv
dec
adc
push
shrb
xchg
daa
pusha
fcmovnb
aaa
mov
int
pop
test
xor
mov
loop
dec
cmpb
push
movsb
test
or
in
mov
pop
adc
push
lahf
mov
fildll
cld
out
dec
fbld
cwtl
lahf
hlt
inc
ss
mov
sub
jns
sub
pop
mov
sbb
add
dec
push
fisttpll
xchg
xor
flds
cli
xor
int
fsubrs
fildl
lock
into
aas
cmp
cmc
inc
dec
div
inc
push
add
lret
ret
dec
sub
or
daa
fwait
jnp
sbbl
sbb
jg
inc
xor
fstps
fiaddl
les
cwtl
je
flds
lret
jb
insl
movsl
jae
adcl
std
popf
mov
push
out
adc
push
mov
cld
js
pushf
clc
lcall
jo
fcmove
push
mov
xchg
push
cmp
shll
jnp
dec
xor
xchg
add
ret
stos
xorl
sub
in
nop
or
ffreep
test
sahf
mov
loopne
jp
addr16
cmp
lret
dec
or
add
dec
cmpsl
decb
add
mov
inc
push
insl
int
rcll
push
inc
out
divb
out
fstps
je
xchg
lret
sub
divl
pop
add
push
cmp
data16
mov
sub
insl
mov
mov
into
jp
fcmovu
lgs
sar
or
or
jmp
jb
aaa
inc
sub
leave
out
xchg
movsl
into
sbb
inc
es
gs
out
pop
movsl
aad
out
dec
hlt
mov
mov
pop
jg
in
psubsb
push
les
rcrl
jp
sbb
jg
das
pop
push
stos
loopne
pop
cmp
ret
test
cmp
mov
or
adc
mov
cli
fnstcw
and
sub
adc
add
fsubs
rcrb
push
cmpb
lret
fiaddl
es
test
cwtd
xor
adc
rorb
push
push
les
arpl
dec
push
call
pop
push
shlb
insl
ljmp
mov
adc
ret
lcall
lock
repnz
adc
into
imul
xchg
inc
or
cmc
outsb
rol
cli
push
xchg
out
mov
pop
sbb
jnp
hlt
pop
fdivs
mov
xor
scas
and
xchg
idivb
sub
andb
jne
repnz
fmuls
imul
clc
add
jnp
xchg
icebp
outsb
mov
cmpsl
dec
mov
rcrl
pop
aam
insl
sub
sbb
adc
stos
fmuls
sbb
push
fwait
mov
es
and
add
xchg
sub
inc
or
sub
outsb
loopne
xchg
and
or
mov
pop
outsl
and
fiadds
mov
push
sub
xchg
leave
dec
fcomp
fwait
enter
sbb
loopne
pop
pop
icebp
xor
mov
mov
imul
sarl
icebp
rolb
and
pop
pop
or
jno
xor
fxsave
pop
stc
mov
sbb
mov
sti
loopne
sbb
sahf
cmpsb
loop
das
or
dec
cmp
arpl
pop
adc
inc
sbb
lods
pop
aam
in
sub
fdivrl
mov
cmpb
lods
in
rorl
or
and
mov
das
pop
stos
or
xchg
ja
pop
sbbb
push
aas
mov
add
push
lret
pop
sub
in
icebp
jb
xor
cmp
popf
lcall
aaa
push
pop
repnz
pop
xor
mov
push
enter
mov
dec
pop
lcall
test
mov
and
es
filds
gs
jmp
and
mov
add
out
pop
add
dec
inc
std
cmpb
inc
jo
xchg
xchg
enter
cwtl
ret
cmpsb
inc
or
aam
jb
jp
aas
mov
mov
outsl
xor
pop
inc
sbb
std
in
mov
imul
jnp
into
call
ljmp
pusha
int
jb
and
add
sti
mov
int
sarb
lahf
inc
push
test
and
cld
inc
out
into
jge
aam
cmp
cltd
cmp
jle
notl
hlt
lcall
jne
jle
sub
shlb
in
mov
das
xor
roll
daa
push
push
rcrb
shlb
sub
shrb
or
mov
jnp
and
int3
loopew
test
sub
stos
je
jg
loopne
shr
sbbl
movsl
push
sub
jp
insl
cmp
add
test
ds
xchg
call
and
in
xchg
adc
jnp
jmp
rcl
ds
int3
shlb
jl
iret
jbe
into
mov
shlb
jne
movsb
mov
test
add
dec
add
hlt
imul
ds
dec
sub
and
pop
lahf
aas
insb
mov
aas
test
stc
jne
push
dec
cmp
jae
movsl
lds
sbb
test
inc
push
pop
pop
nop
mov
jns
fidivs
or
repnz
add
or
inc
out
adc
xor
jb
mov
loopne
arpl
gs
movsl
push
mov
jbe
mov
jo
xor
nop
add
push
mov
adc
scas
test
push
fbstp
test
lcall
inc
jns
adc
data16
mov
sub
data16
jmp
xchg
scas
loopne
cmpsl
fdivrs
call
cwtl
jp
jg
jno
push
lret
fsts
sbb
ss
lahf
push
and
mov
faddp
dec
xchg
push
mov
outsl
adc
mov
inc
jae
test
dec
es
dec
insl
push
iret
cli
repnz
out
xchg
mov
subl
shrl
cmp
dec
popf
inc
mov
mov
ss
mov
pop
vphaddudq
test
cmpsb
int3
rcl
inc
adc
dec
jno
mov
sub
cmp
mov
dec
insb
lahf
lds
call
push
mov
cmpsb
ljmp
adc
lret
les
xchg
in
push
lahf
sub
add
iret
sub
stc
jecxz
int
and
mov
cli
adc
fsubrl
imul
pop
mov
xchg
out
fwait
or
mov
lea
jb
ljmp
dec
shlb
fimuls
btl
and
jecxz
xor
iret
fs
pop
push
test
cmp
mov
fcmovnu
cld
fwait
rclb
lock
in
mov
xlat
enter
add
imul
adc
mov
sub
fs
mov
mov
fwait
in
mov
cs
add
mov
lret
fs
inc
sbb
and
cmp
mov
es
mov
add
scas
mov
cwtl
arpl
andl
adc
xor
xchg
inc
loope
cltd
popf
cld
sbb
dec
lcall
sub
lock
push
inc
sub
test
mov
mov
add
jnp
imul
push
rorl
mov
cli
idivb
rcrl
imul
pop
or
jae
mov
xor
and
sub
jmp
ja
add
ljmp
std
cvtps2pd
mov
jp
repnz
mov
je
xchg
sbb
adc
lods
inc
dec
xor
pop
xorb
fidivs
inc
pop
rorl
testl
rcll
rolb
mov
push
xchg
jns
lea
push
dec
adc
cld
pop
jg
inc
sub
mov
mov
orl
outsb
cmc
loopne
jae
pop
loop
repz
push
jns
loopne
mov
push
xor
jmp
shrl
insb
leave
shrl
gs
aaa
mov
imul
push
clc
inc
cmpsl
adc
and
lahf
imul
shll
add
iret
loope
incb
call
stc
orb
jl
rolb
lcall
insl
push
mov
pop
inc
int3
dec
or
gs
dec
test
in
loopne
out
push
mov
mov
pop
aam
mov
aam
popa
cmp
xor
jb
and
ja
pop
dec
dec
out
test
adc
xor
xchg
loop
jno
fs
ret
xchg
lds
dec
jmp
es
jns
sbb
and
push
negl
es
stc
lods
test
mov
add
sub
in
pop
clc
cmp
out
inc
mov
lret
push
lea
and
push
pop
mov
xchg
sub
stos
test
insb
push
shlb
mov
rcl
mov
ds
test
fistps
incb
hlt
xchg
hlt
sbb
orl
inc
aas
sar
and
jo
test
or
mov
into
fsubrl
add
dec
icebp
inc
xchg
xchg
and
les
test
shll
add
js
xor
sahf
lcall
xor
sti
cmp
cltd
pushf
mov
mov
imul
push
jnp
sbb
loope
stc
xchg
push
cmp
xchg
push
sbb
push
dec
xor
sbb
iret
sbb
jb
popf
aad
scas
push
clc
inc
dec
lret
movsl
and
xchg
insl
mov
es
or
in
aad
add
mov
sbb
js
test
arpl
xor
and
jo
sbb
inc
jae
lar
icebp
js
lods
sbb
fdivrl
sti
xchg
arpl
and
mov
int3
lahf
dec
ja
or
call
stos
repz
pop
xor
dec
and
jl
cmp
mov
aas
mov
push
and
mov
pop
aaa
inc
aaa
dec
mov
mov
mov
pop
mov
and
push
sahf
icebp
cwtl
mov
pop
mov
xchg
or
pop
add
lock
ljmp
dec
pop
jnp
push
dec
pop
mov
movsb
movsw
sbb
add
out
imul
cmc
inc
out
enter
outsb
dec
js
rorl
push
jmp
dec
adc
or
add
cltd
xor
mov
sub
ja
lret
xor
addl
das
daa
xlat
enter
cltd
or
icebp
or
fidivl
xchg
cmp
jne
push
pop
shll
and
jno
sbb
pusha
mov
push
and
in
shlb
inc
sbbb
ljmp
inc
add
inc
jmp
rcll
arpl
push
test
mov
xchg
pop
push
dec
ret
mov
int3
psllq
insl
mov
jo
pop
xchg
lret
je
cmpb
insl
div
loop
addl
adc
xchg
pop
cmp
imul
or
dec
pop
pop
movsb
sub
pusha
xor
test
inc
adc
adcb
add
in
jl
imul
inc
sahf
shrb
das
repnz
xchg
xor
cmp
or
dec
mov
stos
mov
lods
cmp
loopne
jno
icebp
xor
movsb
or
lret
and
cmp
or
inc
call
sub
addr16
mov
push
add
clc
jnp
shr
mov
ja
inc
sub
aam
insl
sbb
mov
imulb
jae
mov
jge
push
pop
cwtl
repnz
push
out
jecxz
int
push
xchg
mov
xchg
push
call
xor
or
or
mov
clc
push
ss
sub
cmc
add
mov
inc
inc
ret
aad
dec
cmp
mov
jo
cmc
icebp
push
xor
test
push
pop
cmp
push
pop
or
sub
mov
out
mov
pop
inc
mov
inc
lds
jae
gs
xlat
jle
mov
xchg
roll
mov
cmp
and
jge
and
add
call
inc
les
jbe
je
jle
fimull
rorb
mov
stc
jne
inc
fldenv
mov
lahf
arpl
xchg
xchg
dec
js
xchg
jno
lcall
jns
lods
and
or
sahf
or
jne
bound
sti
ret
and
mov
lods
mov
jnp
enter
addr16
rcl
shlb
repz
dec
js
addl
xlat
das
and
in
das
add
lcall
lock
mov
stos
ret
imull
test
jmp
loop
jbe
sahf
mov
sbb
pusha
cmp
js
stos
sbb
pop
clc
cmp
inc
shll
ret
jne
add
shll
sub
sar
pop
sub
gs
hlt
sbb
add
add
xchg
push
js
fwait
lock
xlat
or
xor
outsb
imul
jmp
arpl
xchg
dec
or
xor
cmp
mov
ret
inc
popa
push
inc
mov
xor
es
lods
jge
repz
pop
sbb
je
pushf
insl
out
sarl
fmulp
xchg
add
repnz
stos
jae
jns
cmc
dec
inc
test
mov
into
ret
jecxz
xor
sub
sbb
or
inc
inc
lods
push
xchg
outsb
aam
lcall
lret
ret
xor
and
test
out
icebp
sub
pop
int3
pop
cmp
mov
nop
daa
xlat
mov
pop
xchg
push
incb
mov
insb
leave
test
nop
aad
lea
in
jl
dec
loop
jae
dec
mov
sub
sub
ds
fistpl
push
xchg
loope
jnp
xchg
sarl
bound
movsb
sub
inc
pop
out
pop
div
add
test
lods
add
pop
jl
and
push
mov
sub
dec
pop
jae
aad
std
or
out
xor
aaa
mov
pop
cmc
or
aaa
lds
in
pop
fdivrs
jge
lcall
shll
inc
ljmp
cmp
push
cs
sbbb
pop
xchg
jp
dec
ds
out
xor
jne
push
add
hlt
aam
gs
scas
adc
jge
adc
fldcw
pop
cmp
pop
mov
adc
lahf
xor
pop
lahf
mov
dec
mov
jge
and
or
test
addl
movsl
lret
xchg
add
outsl
mov
mov
cmp
xchg
rorb
in
jecxz
icebp
not
jle,pt
adc
sahf
hlt
add
out
imul
mov
mov
jmp
in
push
inc
pushf
or
cmc
mov
pop
mov
andl
jns
jg
inc
sbb
inc
sbb
mov
sbb
or
imul
add
adc
xor
ds
xor
mov
test
in
leave
mov
fwait
ret
dec
repnz
sub
jns
adc
add
mov
xchg
popf
bound
jo
das
fcomi
push
cwtl
adc
rclb
fcmovnu
jmp
rorl
push
inc
xor
jne
cwtl
js
mov
mov
cmp
int
out
add
jecxz
icebp
hlt
movsb
mov
scas
add
xor
inc
ffreep
and
cmp
sub
adc
mov
test
loopne
fsubl
shl
jb
and
sarb
push
adc
rcrb
adc
xchg
cmp
and
and
sbbl
xchg
dec
stos
push
icebp
jne
cmp
or
loop
sub
stos
lods
mov
or
mov
pop
mov
adc
addr16
mov
cs
lds
dec
mov
jne
jne
js
jp
jo
dec
jbe
pop
in
stos
insl
jnp
jl
loope
jecxz
scas
arpl
cmp
jb
loope
repz
sbb
sti
cmp
ljmp
ja
aad
mov
xor
mov
push
dec
xchg
pop
mov
jbe
out
sti
jne
add
cmp
hlt
lret
push
jno
add
fadds
cli
fs
flds
sub
adc
stc
push
iret
cmpsb
adc
popf
lds
in
sarl
dec
and
sbb
inc
inc
xor
xlat
add
jmp
lds
cmp
je
pop
data16
push
loopne
add
adc
pop
out
repz
dec
std
add
mov
adc
dec
mov
iret
or
hlt
jle
inc
inc
sbb
push
mov
lcall
inc
xorb
nop
xor
mov
ret
cmp
and
mov
xor
mov
push
xor
test
or
fadd
popa
add
cmp
dec
push
out
mov
adcl
sbb
lret
and
jnp
repnz
jecxz
int3
sub
leave
mov
sub
jb
dec
mov
rcll
incl
or
pop
add
sbb
fwait
add
cld
cmp
dec
lods
adc
ret
jbe
loope
rorb
xchg
stc
cmc
int3
in
enter
test
adc
mov
imul
enter
enter
push
iret
leave
std
pop
add
in
and
test
outsl
cmpb
mov
dec
sub
sbb
pushf
add
inc
jmp
scas
add
add
add
cs
add
xor
pop
nop
cmpsl
mov
jnp
or
xchg
frstor
out
xorb
mov
mov
jge
xor
xchg
test
not
sar
test
push
and
icebp
push
xor
or
add
in
shll
mov
pusha
pop
out
adc
and
sbbb
pop
and
xlat
sbb
xor
jge
adc
not
cmc
cmp
inc
xlat
in
sub
stc
les
fwait
jmp
popf
lods
mov
pusha
stos
shll
hlt
xor
mov
aam
mov
fistpll
mov
in
out
in
add
outsl
inc
xchg
fisubs
add
jmp
jns
aaa
fs
lret
push
adc
into
sub
adc
cs
add
inc
xlat
sarl
mov
pop
mov
and
lea
mov
pop
adc
iret
ret
js
xlat
mov
dec
ss
pop
lret
sub
jae
repz
stos
pop
lret
xor
adc
mov
push
out
sbb
cmp
xorl
inc
mov
sub
or
cmp
xor
out
jge
sbb
hlt
loope
and
outsl
xor
dec
movw
call
leave
sub
dec
cmp
lds
jne
sarb
mov
aas
cmp
cmpsb
xor
out
cltd
or
mov
jns
div
cmp
imul
arpl
cmpsb
cmp
add
call
mov
ljmp
ficoms
movsb
push
and
or
xchg
mov
loope
push
loopne
fcomi
cmpsb
push
xor
rcrb
mov
dec
xchg
and
mov
cmpsl
lret
sarb
mov
scas
xor
lret
fmull
lds
jae
jns
dec
mov
jno
push
mov
loope
push
xor
repnz
adc
iret
in
xchg
mov
and
fmull
fstpt
xchg
into
mov
in
fs
je
mov
xchg
dec
inc
sub
ja
mov
aas
adcb
xchg
aas
ss
lcall
loopne
jmp
push
xchg
cld
xor
push
into
sbb
mov
jo
xor
imul
xorb
lahf
inc
fwait
fwait
test
xchg
xchg
pop
stos
inc
xlat
mov
sub
xchg
ja
dec
flds
gs
mov
or
sbb
in
fyl2x
mov
xchg
or
jae
push
in
enter
jne
and
aaa
ficoml
out
sub
xchg
sbb
mov
cmp
jo
in
jge
fistps
cltd
fldl
xchg
nop
jecxz
mov
mov
mov
int3
push
sar
mov
stc
push
fcompl
adc
int3
pushf
imul
add
mov
lock
add
les
cmp
sub
push
and
and
adc
pusha
rol
ja
jmp
pop
adc
xlat
adc
xor
adc
adc
dec
les
sbb
sahf
cmp
test
fstpl
mov
add
add
imul
ss
fsubs
repz
pusha
push
pop
cmpsb
dec
cmpsb
mov
jmp
pop
mov
or
in
adc
jo
fnsave
mov
push
xchg
sti
shlb
ljmp
scas
das
lock
sbb
call
pop
mov
leave
mov
into
xorb
lret
mov
push
out
out
out
sar
xchg
sti
cmc
push
push
insb
cld
mov
pop
xchg
xlat
push
xor
into
and
push
addr16
jge
dec
fiaddl
test
cmp
or
dec
cmp
out
das
jbe
or
and
hlt
ret
adc
inc
movsl
cmpsl
nop
das
scas
ja
std
in
mov
xchg
cmpsb
dec
cmp
mov
sahf
adc
push
in
or
push
test
dec
fsubs
int3
ret
clc
push
jae
repnz
test
add
xchg
loop
push
imul
cmpsl
fs
testl
nop
xor
mov
mov
fs
xor
mov
es
push
gs
xor
cmp
sub
mov
sub
or
mov
outsb
xor
fwait
push
lret
mov
fstl
push
ja
jnp
push
lret
pop
mov
data16
ret
and
push
aam
les
pushf
or
mov
xchg
push
ret
outsb
add
mov
push
mov
stc
pop
cmp
mulps
fbstp
sub
mov
cmp
cmp
inc
or
push
mov
loop
mov
ret
outsb
xchg
andl
daa
lret
arpl
jno
xchg
adc
lret
leave
push
mov
mov
pop
das
mov
test
fdiv
jmp
dec
fcoml
repnz
rcll
loop
stos
int3
ds
out
in
mov
xchg
and
mov
pop
shlb
aas
fistpl
insl
gs
scas
xor
or
mov
rolb
inc
stos
jo
add
jle
jl
and
sti
cmp
fstpl
jle
movhps
movsl
xchg
cmp
fst
inc
out
and
add
push
xor
in
xchg
xlat
fidivl
fucomp
mov
daa
pop
cs
arpl
xor
sub
shrl
std
jb
lods
cmp
mov
jae
cmpsb
dec
mov
sbb
dec
ret
lods
sbb
lock
pop
sarb
and
addr16
cmc
jae
stos
lods
xor
and
aaa
push
pushf
fsubrs
repz
mov
pusha
insl
cwtl
mov
or
in
cmp
in
xchg
int3
ss
popa
and
jmp
and
xchg
push
xchg
xor
jge
cltd
add
lahf
or
inc
in
sub
pop
sar
xchg
sti
jne
nop
sbb
fisubrs
push
jl
or
lds
add
fsubp
add
rcrl
out
add
add
jmp
fs
arpl
sbb
jl
inc
mov
and
mov
repnz
ja
jmp
jns
xlat
lahf
repnz
inc
inc
cmp
mov
push
les
and
fnstsw
or
sbb
add
cmpb
nop
mov
mov
inc
or
push
ret
xchg
popf
cmc
or
lock
push
outsl
mov
push
mov
mov
or
pop
std
or
lock
push
bound
add
add
add
test
lea
enter
add
cmc
repnz
sub
stos
cmp
sbb
sbb
pusha
add
push
xorl
sbb
sbb
sub
mov
fnstenv
loope
dec
fisttpll
ljmp
and
add
call
and
divb
mov
jg
les
fisttps
nop
pop
push
movsb
mov
jo
shlb
lea
iret
pop
push
orl
mov
pop
mov
push
scas
pop
sub
out
and
pop
mov
sbb
int3
je
and
inc
in
jp
mov
xchg
inc
cmp
jg
outsb
ja
sbb
mov
push
sub
adc
mul
add
stos
aaa
jbe
fnstenv
inc
pop
mov
xchg
inc
push
stc
sbb
mov
repz
adc
scas
inc
ss
dec
jg
jecxz
jne
loopne
into
mov
das
or
ret
lcall
aam
jne
sbb
jb
xchg
pushl
pop
push
sub
movsb
rclb
push
out
mov
jmp
leave
arpl
sbb
call
pop
test
push
test
aas
pop
movsl
in
pop
mov
out
pop
fwait
std
outsl
pop
xchg
xchg
and
lock
jne
call
xchg
ficomps
xor
mov
inc
push
mov
adc
and
jmp
mov
fnstcw
repnz
cltd
jbe
pusha
push
test
xchg
out
xchg
sar
adc
mov
sbb
or
and
addr16
dec
movsb
mov
pop
in
mov
jecxz
lea
loopne
in
stos
push
loopne
addb
addr16
jl
pusha
fcmovnu
add
ss
xchg
movl
jb
inc
enter
fmuls
movb
ret
mov
test
jne
sbb
aaa
pop
sti
xchg
push
pop
cmp
add
dec
lods
jnp
ss
xor
loope
cmp
movsl
fwait
testl
mov
fdivrs
cmp
push
push
xchg
sub
lods
dec
xchg
xor
push
inc
popa
outsb
icebp
fs
adc
push
data16
ljmp
ljmp
inc
scas
int
outsl
out
jo
xchg
loope
mov
pop
and
daa
xchg
dec
xlat
jl
fistpl
push
jecxz
push
pusha
icebp
push
add
sti
in
iret
lcall
bound
inc
mov
gs
jmp
pop
sahf
cmp
fbld
rcl
fdivs
xor
out
jnp
popf
mov
sub
push
jne
push
mov
mov
sub
leave
dec
pop
mov
int3
stc
dec
stos
xor
call
movsb
das
mov
mov
fisubrs
adc
cmpsl
in
fs
mov
sub
imul
adc
outsl
cmp
jmp
push
popa
mov
fpatan
mov
sbb
int3
cmp
leave
jne
xor
and
ret
jbe
addr16
imul
push
and
push
xchg
aaa
mov
ret
pop
jbe
je
test
lea
inc
dec
rcrl
mov
shll
lds
shlb
dec
mov
loopne
cltd
xchg
test
adc
das
stos
out
adc
notl
fwait
clc
cmp
inc
sbb
add
lods
or
fidivs
fwait
mov
unpckhps
daa
xchg
stc
xchg
adc
inc
jmp
lcall
je
int
test
pop
stos
inc
push
ljmp
jne
sarb
dec
sub
add
mov
cmpsb
clc
adc
loop
mov
mov
mov
add
rcll
jecxz
icebp
ret
mov
adc
sbb
cltd
cmpb
jmp
pop
xor
daa
add
loopne
icebp
cmp
and
icebp
mov
cmp
repnz
pop
cltd
sahf
arpl
push
test
inc
mov
loop
cmpsb
or
jb
dec
jno
and
add
sbb
enter
jno
mov
cmp
xchg
decb
sub
out
xlat
jp
popf
ficoml
xor
sbb
add
je
jbe
dec
mov
icebp
pop
inc
adc
mov
mov
jae
dec
addr16
pop
adc
mov
lock
fimuls
add
mov
or
ja
shl
xor
adc
jno
and
cmp
mov
fs
call
pop
push
push
andl
add
push
imul
loope
sarb
cs
jnp
jmp
pushf
pop
in
push
add
sub
jne
xchg
cmc
int
jne
xchg
shl
call
push
xor
inc
sahf
repnz
js
dec
pop
aam
or
imull
dec
lock
js
jns
icebp
loopne
sarl
jl
cmp
cwtl
out
shll
add
push
in
xchg
out
std
mov
addr16
or
pop
add
loop
and
les
das
in
test
xchg
repnz
mov
xlat
jno
mov
mov
lret
jl
fcmovbe
lcall
ljmp
test
dec
cwtl
and
push
xor
and
insb
sub
push
sete
clc
mov
lds
push
mov
cmpsb
pop
sbb
shrl
aas
in
xor
dec
out
hlt
add
sbb
ret
sbb
rcrl
dec
mov
sarl
xor
test
in
and
pop
ds
scas
push
test
daa
out
mov
xor
cli
js
mov
repnz
rorl
mov
xchg
dec
mov
push
movl
add
jmp
push
fwait
push
mov
mov
jno
sub
into
je
adc
mov
inc
test
mov
and
rolb
iret
std
fwait
pusha
cmp
fwait
pop
cwtl
insb
fadd
ret
int3
mov
and
adc
adc
mov
push
int3
popf
push
adc
push
mov
insl
add
mov
arpl
sbbb
mov
jne
lds
cmp
shl
jl
sub
mov
outsl
cmpsl
cmpsb
add
jne
push
cmpsl
sub
fmull
movsl
jle
outsb
int
dec
cmpsl
es
sub
inc
nop
repz
cmp
sbbb
sbb
or
ja
iret
mov
mov
dec
push
out
cmpsl
pusha
cs
aas
fcom
popf
sub
fcomps
in
or
fs
dec
clc
inc
xor
fwait
pop
adc
inc
xchg
add
mov
push
cs
aaa
push
sub
dec
aas
inc
mov
outsb
sahf
push
xor
int
shrb
arpl
jmp
daa
mov
mov
outsb
inc
jns
jle
lods
aas
in
out
add
add
mov
cmp
mov
fdivrs
adc
repnz
mov
loope
inc
xor
push
aam
cmp
je
jle
enter
add
mov
sti
mov
shlb
or
inc
bound
pop
sbb
nop
mov
push
push
push
xchg
ss
sbbb
push
or
fimuls
neg
imul
lahf
std
movsl
inc
inc
xor
loopne
stc
sbb
cs
clc
sbbl
ret
sbbl
rorl
cmp
push
push
add
push
ret
fists
repz
ds
push
jge
in
pop
into
jge
mov
push
adc
xor
outsl
mov
mov
jo
loopne
ret
adc
xchg
adc
movsb
in
mov
andl
mov
pop
xor
inc
sahf
in
or
ja
je
mov
jecxz
xchg
jl
test
mov
lahf
push
fbld
data16
in
inc
jo
ret
pop
das
dec
sbb
add
in
sahf
in
lcall
orb
jmp
js
xchg
idivl
mov
in
aas
cwtl
xor
aad
int
out
pop
xorl
test
sbb
push
push
lret
xor
in
mov
ficoms
xor
xchg
cwtl
repnz
inc
fmul
popa
fnstsw
mov
cli
fimull
pop
cmpsb
sbb
adc
fbld
shlb
cmp
aaa
sti
lahf
bound
or
pop
and
mov
dec
adcb
ss
in
push
xchg
pop
xchg
sub
out
fwait
dec
jge
jnp
in
xchg
ja
push
cmpsl
movsl
mov
push
aas
mov
pop
push
decl
lret
cmpsl
lret
xchg
inc
mov
jp
in
into
add
popf
mov
xchg
in
xchg
sbb
fsts
fdivrs
mov
mov
mov
sbb
cmp
push
out
aas
jge
daa
cs
shll
and
sbb
push
jbe
cmp
mov
pop
sub
test
out
ljmp
inc
mov
idivl
jg
and
mov
adc
xor
popa
pop
adc
mov
loop
pop
popf
push
into
in
adcl
aam
fistps
xor
pusha
mov
jae
lcall
lds
xor
mov
mov
ds
in
xor
ret
shlb
das
sub
add
push
cld
aas
mov
sub
and
je
dec
cmpsl
adc
mov
mov
or
paddsw
cli
int
hlt
cli
sbb
inc
je
cmc
add
inc
or
stc
mov
xchg
push
adcl
dec
sti
out
cmpsl
and
test
adc
dec
das
test
push
insb
rclb
mov
or
sub
mov
mov
jb
mov
arpl
mov
dec
movsl
pop
out
sub
into
or
mov
lcall
push
mov
lret
divl
pop
lret
jp
or
out
xor
fisubrl
push
add
sbb
cmc
xchg
mov
test
scas
push
push
call
and
ret
mov
fs
mov
sub
negl
sub
mov
dec
cmpb
dec
shlb
push
dec
loopne
adc
pop
aam
and
jmp
xchg
lcall
gs
dec
dec
add
adc
adc
mov
lret
insb
test
push
mov
jp
insl
movsb
mov
nop
inc
fisubs
int
push
test
insb
xchg
push
movsl
imul
in
sub
and
pop
xor
ja
pop
sbb
and
push
popa
pop
dec
jne
jmp
xchg
out
sub
cld
mov
out
in
push
lret
test
loop
inc
std
sbb
pop
insl
pusha
clc
outsl
stos
mov
xchg
call
in
insl
aas
popw
cs
ja
cli
push
rorb
ja
negb
jmp
cmp
inc
cs
ret
pop
mov
xchg
xor
sub
lahf
cli
and
lods
int3
std
pop
bound
filds
push
data16
add
stc
into
fdivl
inc
pop
test
jg
fstpl
lods
xor
inc
add
cmp
push
in
movsl
outsl
ret
jno
push
inc
movsb
pop
dec
pop
ds
sub
mov
pop
pop
gs
push
aaa
lcall
rcl
repz
adc
pop
push
or
out
adc
xchg
or
enter
sub
std
adc
adc
sub
add
adc
std
mov
jnp
fsubr
pop
out
movsb
inc
cwtl
pop
shlb
fisubrl
inc
inc
test
add
mov
mov
hlt
sub
gs
sub
stos
sbb
pandn
adc
test
and
cmp
dec
mov
lahf
inc
ljmp
out
sub
dec
clc
push
iret
pop
clc
ret
jb
mov
mov
and
cmpsb
push
cmp
hlt
mov
add
lret
repnz
sub
je
popa
pop
stc
subb
mov
jno
add
imul
cmp
xor
enter
cli
xchg
scas
mov
push
xchg
xor
jo
sub
mov
scas
stc
dec
in
and
sbb
and
fwait
mov
sahf
xchg
orl
mov
add
jno
push
in
mov
repnz
jge
sti
cmp
lds
push
mov
jae
ja
rcrl
pop
sbb
add
cmc
addl
dec
mov
pop
ds
sub
je
lea
repnz
jmp
lret
leave
stc
push
mov
sub
jne
sub
dec
sub
push
bound
or
sub
jmp
fwait
fwait
notl
mov
push
xchg
or
cmp
mov
sbb
scas
and
xchg
bound
xchg
out
clc
push
cmp
lods
add
adc
jne
mov
rcrl
mov
mov
push
nop
dec
push
pop
jge
xor
mov
xchg
sub
ret
fidivl
push
pop
stos
xor
mov
stos
enter
jg
fs
lds
push
aaa
std
out
scas
scas
push
cmp
inc
xchg
lcall
data16
movl
arpl
or
sub
ja
xchg
and
loopne
fcompl
fnstcw
dec
jae
popa
movsl
dec
and
cli
push
jb
call
cli
cmp
add
test
fldenv
mov
mov
je
dec
and
xrelease
jnp
mov
je
lock
sub
xchg
loopne
ljmp
cmpsb
xchg
mov
inc
insb
dec
cli
mov
in
xchg
arpl
pop
jg
xchg
fs
int3
xor
mov
add
xchg
fldcw
mov
mov
push
xor
pop
movsb
pop
clc
ds
stc
sbb
mov
adc
and
aad
xor
sti
jb
fidivl
cmpsb
push
in
test
lods
add
jb
fs
sub
scas
pop
adc
inc
cli
dec
lahf
fcmovnb
les
and
andl
adc
mov
outsb
outsb
insb
out
mov
shlb
adc
pop
cmp
cmpsb
aam
fistl
std
movsb
xor
pop
out
call
in
sbb
inc
mov
sti
xor
rcrl
mov
fcoml
inc
cmpsl
jbe
inc
pop
dec
and
dec
in
andl
fcmove
lods
in
enter
inc
xchg
negl
jecxz
mov
jecxz
test
jle
fdivrl
inc
pop
cmp
inc
pop
push
sahf
push
dec
ret
fbstp
addr16
in
jne
and
stos
idivl
fs
jb
or
adc
mov
loop
xchg
aam
mov
xor
adc
loope
outsl
adc
dec
das
in
cmp
test
cmp
imul
ret
add
sbb
nop
cmpsb
or
xor
inc
jg
orb
mov
ret
cmp
rclb
adc
cmp
adc
sub
jmp
int3
and
insl
sbbl
mov
testl
loope
scas
cmp
iret
adc
inc
pop
inc
mov
mov
inc
cmp
mov
mov
negl
jno
add
push
loopne
lret
loopne
add
nop
xor
pop
fistpl
jecxz
lods
add
mov
movsl
jl
je
fisttpll
mov
int
inc
xchg
xchg
inc
popf
push
adc
hlt
sub
out
mov
fwait
and
inc
sahf
cmpsl
cmc
sub
loope
mov
push
test
push
pop
mov
outsl
cmp
test
sbb
jne
jmp
mov
pop
push
dec
int
ja
push
sarl
fsubl
hlt
int3
in
int
jne
inc
xchg
xchg
push
adc
hlt
cmpsb
test
adc
outsb
fwait
dec
adc
and
xchg
jmp
xor
sti
loope
jge
push
cld
xor
mov
test
idiv
loope
cli
sbb
loop
xchg
cmc
sbb
lahf
subb
pop
mov
pop
repz
cmp
xchg
xchg
in
sti
sub
sub
sub
cwtl
xor
push
out
push
mov
fbld
mov
pusha
xchg
xchg
add
daa
enter
push
push
hlt
shrl
dec
sahf
imul
xorl
bound
jl
mov
push
mov
mov
xchg
loope
jne
or
into
xchg
add
inc
push
inc
push
insb
aaa
add
jecxz
mov
push
adc
out
sbb
hlt
xchg
lcall
sub
sub
and
dec
dec
inc
inc
pop
jo
push
mov
cs
and
mov
pushf
inc
inc
xor
dec
lods
mov
or
in
and
arpl
mov
stos
ret
jle
xchg
xchg
aas
inc
call
sarl
ret
fidivrl
sti
out
pop
and
pop
push
xor
popf
outsl
push
dec
pop
ror
popa
je
push
sub
rclb
pop
push
leave
inc
es
data16
sub
inc
cmpsb
dec
inc
ss
icebp
pop
xchg
push
sbb
jb
imul
lcall
xchg
sub
les
lods
movsb
lcall
dec
xchg
sub
mov
nop
stc
add
pop
cmp
scas
inc
stos
push
daa
jge
pop
sub
nop
negl
fcomi
mov
pop
push
mov
gs
mov
xor
cmpb
arpl
add
sbb
adc
imull
imul
cwtl
fsubrp
ror
out
test
sub
mov
pop
sahf
out
popf
mov
xor
pop
mov
mov
repnz
jge
mov
mov
cmp
arpl
sbb
pop
xor
mov
cmc
out
pop
loopne
xchg
in
cmp
mov
testl
aas
sub
xchg
roll
jg
adc
add
sbb
jns
jno
les
push
jmp
mov
add
ja
addl
pop
lods
push
sub
repz
fnstsw
lret
jl
icebp
mov
xchg
dec
mov
test
pushf
inc
mov
pop
aaa
xchg
xor
mov
sarl
repnz
adcl
icebp
sti
jg
xlat
les
stc
repz
inc
outsb
call
insl
xchg
lds
xchg
repz
inc
rorl
jmp
add
add
add
popa
fsubrp
fldenv
cmp
cmpsl
jno
into
sub
push
fcoms
sbb
loopne
jno
mov
punpckldq
inc
push
std
sbb
add
push
lods
mov
pop
insb
push
mov
sbb
nop
jno
icebp
dec
jl
push
jl
js
les
lret
sti
mov
adc
inc
lds
dec
aad
in
shrl
jmp
int3
ljmp
mov
pop
xchg
xchg
mov
inc
jae
nop
lods
inc
and
jb
adc
lock
insb
xor
xchg
and
or
mov
jbe
fsubrs
xchg
mov
insl
mov
rcr
outsl
mov
xchg
jge
fisubrs
xchg
cmp
push
adc
shr
ret
pop
cwtl
push
and
mov
mov
fistpll
das
or
mov
xchg
cli
push
mov
mov
fsubrs
out
lahf
jg
jle
iret
test
pop
enter
lock
or
xchg
test
adc
loope
sti
popf
test
rcrl
neg
jne
out
mul
ss
stos
add
cmpsb
dec
or
pop
cmpb
mov
pop
mov
sbb
jae
pop
xor
or
ss
inc
daa
leave
arpl
fstp
out
ss
jne
xor
xchg
or
or
hlt
jae
xchg
dec
xor
mov
imul
cmp
gs
xchg
lret
jmp
inc
lea
stc
cmpsb
push
mov
mov
shl
imulb
sahf
lea
inc
jno
push
jle
add
dec
dec
mov
and
in
inc
mov
mov
iret
fnsave
xchg
mov
sub
cli
or
enter
inc
add
sub
jl
jge
inc
mov
cmp
test
arpl
mov
sti
repz
xchg
fildll
jl
sahf
in
add
les
movsb
outsl
xlat
fbld
out
inc
cs
orb
or
jle
inc
pop
sub
rcrl
xchg
xchg
add
cs
xor
test
movsl
pop
jae
sti
xor
jg
sbb
mov
dec
in
sub
daa
fcmovu
cwtl
mov
or
enter
sbb
adc
andl
fmul
or
xlat
test
enter
pop
add
cs
cmovg
sub
divb
cmp
lods
mov
in
imul
movsb
loop
jnp
scas
stos
cmpsb
fldcw
push
or
jg
push
pushf
in
xor
pop
xchg
adc
out
outsb
ret
shrb
xchg
cmp
int
xor
push
lock
push
in
mov
xchg
inc
fiaddl
test
pop
cmc
bound
bound
outsl
clc
dec
gs
sub
sub
clc
jae
mov
addl
push
lret
mov
clc
inc
incb
dec
dec
xchg
mov
cmc
push
lahf
inc
ret
pop
ret
mov
mov
repz
jmp
mov
mov
cmp
mov
jae
int3
adc
insl
fstpl
mov
mov
jns
data16
mov
jnp
fmull
outsl
sbb
push
daa
inc
mov
cmp
ds
je
dec
scas
cs
clc
push
pop
push
jb
mov
dec
add
mov
push
cwtl
jo
push
lods
jge
out
movsl
call
mov
mov
xchg
cmp
out
out
mov
rol
xorl
sub
push
sub
cmp
push
xor
adc
fs
enter
fisttps
cmp
lods
jae
ret
test
daa
jns
adc
fs
int
aam
nop
lods
add
jmp
cmp
gs
sub
mov
jecxz
into
fidivrl
arpl
mov
jns
out
enter
inc
pop
pop
movups
notl
stos
enter
mov
ret
adcl
xorb
push
popf
and
jo
icebp
lea
andl
push
push
push
orl
jg
mov
adcl
scas
adc
mov
aad
ja
adc
popl
push
jmp
xchg
mov
lods
pop
das
data16
or
jae
mov
add
mov
repz
cmpsl
es
movsl
jae
inc
mov
lcall
xchg
mov
out
mov
sbb
ret
lea
mov
sbb
add
lret
xor
rol
int3
rcl
es
ret
es
cmpsb
sti
sbb
jo
mov
out
dec
mov
or
aam
testl
pop
push
shll
mov
xor
pop
in
cmp
mov
mov
imul
in
stc
adc
test
mov
xchg
xor
add
ja
popf
sub
das
jae
daa
mov
fiadds
mov
add
dec
fs
pop
mov
pop
add
dec
mov
outsb
xchg
add
popw
sbb
xchg
inc
lods
mov
jl
inc
cld
cmp
imul
idivb
inc
lods
leave
mov
les
aad
rcrl
or
mov
daa
shrl
divb
gs
inc
lcall
pop
add
xchg
cwtl
cmp
stos
cltd
fdivs
in
leave
xchg
out
lret
xchg
xor
fsubl
or
pushf
lahf
pop
fisubrl
fmull
jbe
mov
mov
inc
mov
iret
push
push
jg
and
cmc
sub
jmp
fldcw
push
and
pop
test
call
push
rclb
lcall
pop
pop
jle
cmp
pusha
adc
xchg
lahf
nop
sbb
leave
xor
cli
mov
mov
outsb
ret
outsb
sbb
pop
push
sub
aad
addr16
mov
leave
push
imulb
pop
scas
je
lcall
mov
pop
shr
push
scas
jmp
shlb
mov
dec
rcrb
lds
sbb
out
adc
adcb
mov
aaa
jb
mov
mov
jle
ljmp
mov
test
cs
or
cmc
shlb
les
movsl
and
inc
scas
cmpsb
ror
dec
cmpsb
cmc
push
cmpl
mov
hlt
dec
inc
hlt
test
inc
mov
ficomps
lods
or
jns
outsb
arpl
push
mov
and
or
cmp
adc
mov
fwait
dec
clc
andb
dec
daa
xor
or
and
loopne
xchg
aaa
test
imul
jg
mov
gs
xchg
xorl
bound
xchg
pop
rcrl
jecxz
fildl
fldenv
aas
test
in
mov
arpl
sar
or
sti
and
imul
mov
cmp
or
pop
xchg
jnp
cmp
mov
shlb
inc
mov
add
ja
dec
stos
sub
sub
pop
and
xchg
lods
sbb
dec
in
lock
cmpl
sbb
imul
loope
fcompl
inc
pushf
hlt
in
test
pop
jmp
shll
fwait
mov
inc
pushf
bnd
icebp
lret
push
std
push
mov
test
aaa
push
jge
add
je
sbb
pop
arpl
cmp
mov
or
sar
mov
pop
inc
xor
loopne
pop
cmpsl
stos
inc
cmp
enter
push
jb
mov
and
pusha
mov
push
mov
sti
in
dec
xchg
sub
xchg
jge
data16
fisttps
pop
stc
push
out
cmp
andl
aas
fs
push
outsb
xchg
orb
adc
dec
loop
lret
adc
fnstcw
cltd
insb
sbb
push
lods
and
lret
mov
sahf
sbb
mov
jge
push
incl
js
outsb
flds
outsb
inc
mov
xor
rclb
shll
daa
jb
loopne
jle
mov
shll
add
mov
mov
push
mov
jo
pusha
movsb
out
testl
cmp
test
imul
xor
popa
cmp
dec
int3
xchg
rclb
jle
test
adc
inc
les
jl
jo
xor
adc
fs
sbb
aam
pop
popa
popa
xchg
jnp
ds
lcall
insl
mov
lods
jbe
pop
inc
inc
mov
ficoml
xor
loopne
lcall
xor
push
add
mov
decl
loopne
sahf
xchg
xchg
out
aaa
int
lret
inc
mov
enter
cmp
out
outsb
pop
add
push
dec
add
jnp
out
out
jmp
test
add
mov
cli
lock
jmp
xchg
clc
xchg
cltd
mov
enter
test
out
ret
loopne
inc
and
je
hlt
andl
rcrl
xor
jle
dec
pop
add
mov
mov
pop
sub
jmp
fnstsw
dec
rolb
mov
cli
xchg
stos
xor
jg
or
mov
dec
jge
or
outsl
ret
xor
dec
aad
sar
xchg
sub
lods
shll
dec
cmpsl
push
out
lods
fadds
pushf
lcall
enter
daa
push
fistl
pcmpgtb
shl
mov
cmp
or
es
xchg
pop
ret
insb
add
aas
sbb
xor
xchg
cmp
shl
or
mov
xor
mov
rcr
mov
pop
cs
aas
addl
jo
sub
rolb
imul
loopne
mov
adc
mulb
or
nop
or
sbb
insb
jbe
imul
rcll
jno
jl
loop,pt
in
inc
dec
xchg
int
shr
add
mov
or
adc
negl
fistpl
shrb
fadds
mov
xchg
mov
pop
or
pop
aam
cmp
mov
mov
inc
dec
jmp
mov
rcrl
cmp
clc
movsl
out
mov
add
mov
insb
imul
mov
cmp
pop
adc
push
fiadds
ret
push
xor
cmc
push
add
negl
mov
mov
sub
ret
sub
jge
push
icebp
aad
in
pop
das
lock
dec
std
add
in
int3
xor
dec
adc
hlt
ljmp
jp
mov
dec
mov
sub
xor
repz
imul
fstpl
mov
outsb
jmp
sub
aas
sarb
jb
pop
ja
fwait
shll
dec
adc
add
bound
mov
adc
imul
push
xor
jmp
stc
pop
dec
jne
or
iret
inc
aaa
sbbb
dec
pushf
out
push
shrl
adc
fcoml
mov
iret
aad
aad
fnsave
and
xchg
mov
pop
scas
pop
mov
call
out
cmp
into
xchg
sbb
std
add
inc
pushf
popf
and
aas
rcrb
mull
ret
ret
sbb
loope
outsb
cmpsb
sbb
aad
xlat
fwait
loopne
sbb
inc
jae
out
cmp
cs
cwtl
push
shrl
xor
jl
movsb
repz
bound
and
push
rcrl
subl
mov
push
scas
push
jge
fdivp
mov
fsubl
push
push
xchg
fbld
mov
cmp
and
aas
push
stos
stos
push
lret
loopne
jg
lret
aas
or
fisttps
repz
pop
shlb
mov
or
xchg
fimuls
inc
and
xor
je
jmp
data16
push
subl
mov
jne
into
nop
ds
fstps
decb
gs
and
cmp
add
cmp
jle
or
push
aam
ror
sbb
add
dec
push
sbb
movsb
mov
enter
add
mov
rorl
lret
jno
fdivrs
mov
enter
cmp
movsl
sbb
mov
dec
mov
or
jmp
xchg
loop
out
jnp
out
dec
in
int
addl
adc
cmp
insb
enter
and
insb
inc
lcall
into
mov
mov
adc
and
mov
sbb
ja
sub
jl
fwait
sbb
xor
aas
xor
xor
and
out
gs
pushf
xorl
shll
or
in
int
xor
loop
jl
das
dec
mov
jae
outsb
cwtl
jg
cltd
and
lret
nop
rorl
mov
jmp
shll
xor
rcrl
cmp
push
add
sbb
mov
jge
pop
in
jp
jle
push
or
loope
xchg
mov
dec
ja
out
push
jge
inc
jp
cld
flds
outsl
adc
lds
xor
mov
mov
mov
mov
jns
sbb
mov
xlat
sbb
mov
mov
das
out
mov
mov
in
fdivrl
scas
jb
xrelease
xchg
loope
aad
out
movsl
out
insb
xchg
jge
popa
mov
lahf
adc
mov
xor
sub
mov
add
cwtl
and
and
mov
cmp
jbe
pop
cmp
in
lods
daa
das
clc
cmp
lea
enter
pmaxsw
bound
cmp
and
stos
ds
insb
cmp
sti
cmp
je
iret
or
sub
push
and
add
pop
insb
ss
add
out
pusha
push
cmpsb
adcl
push
lds
pop
jmp
loop
mov
mov
popa
xchg
and
jnp
xrelease
inc
loope
clc
and
ret
das
inc
and
fistpl
popa
mov
mov
or
jl
into
test
imul
les
mov
lret
repz
shlb
cmpsl
lcall
std
ja
adc
filds
dec
mov
adc
cmpsb
es
or
cmp
lods
push
fstpt
cwtl
lods
test
test
fadd
fdivr
mov
sti
xchg
or
and
cmp
pop
js
inc
ret
lahf
or
adc
ss
and
add
mov
js
adc
sub
or
mov
repnz
inc
add
faddl
mov
scas
push
fwait
movsl
scas
jb
lea
sbb
or
cmpb
mov
ja
jne
fildll
sub
cmpl
stos
and
and
jns
popa
push
adc
mov
push
pop
dec
adc
dec
mov
jbe
mov
add
jae
sub
or
xchg
jp
inc
xchg
and
dec
test
jb
daa
dec
repz
imul
inc
stc
mov
xor
push
mov
lds
sti
pop
cmp
lret
push
stc
notl
push
lods
mov
sarl
mov
sbb
out
std
mov
test
cmp
jae
mov
das
jno
mov
jns
mov
pop
cld
pop
cmp
pop
enter
dec
dec
stos
lret
imul
fisttpll
pushf
pop
or
or
and
xchg
and
std
fmull
gs
dec
ss
daa
xor
mov
lahf
andb
outsl
inc
rcrb
out
or
out
mov
cmc
sub
jl
mov
fistps
repz
jge
pop
mov
dec
imul
cmp
mov
aam
mov
mov
pop
inc
inc
mov
jl
arpl
dec
orl
shrb
js,pt
shlb
cmp
fists
pop
xor
add
mov
and
loope
push
mov
mov
pop
jp
mov
loopne
sub
mov
push
and
cmpsb
add
aad
jle
movsl
sub
rcll
adc
add
mov
and
xchg
add
fdivrl
call
push
das
lahf
mov
sub
lods
inc
imul
push
push
ror
dec
push
mov
mov
je
movsl
ja
fstpl
lret
pop
test
imul
js
add
int3
xchg
jno
fisubs
arpl
enter
dec
out
sub
ret
orl
sub
mov
mov
pop
aaa
pushf
hlt
cmpsb
in
aaa
add
cs
cld
bound
mov
xor
jmp
and
add
push
cli
xor
loopne
pop
int
jmp
clc
imul
adc
daa
sub
fucomp
push
out
popa
loop
fistps
sbb
stc
cli
cmp
pop
fs
mov
sti
jo
ret
out
mov
xor
fadds
mov
lahf
filds
int3
mov
loop
popa
adc
pop
xchg
in
cmp
xor
cmp
pushf
dec
jne
pop
in
lds
push
lock
adc
es
aaa
add
jo
pushw
iret
scas
mul
dec
cmp
js
mov
enter
fwait
push
xchg
pop
ja
mov
and
inc
repz
xlat
in
xchg
push
cltd
add
xchg
js
dec
insl
in
cmp
jg
outsb
xor
cmp
lret
mov
lock
adc
gs
cmpsb
les
std
dec
pop
ret
pop
xchg
leave
sti
or
rcr
cmp
add
rcrb
mov
add
das
add
fsubrl
mov
add
outsl
les
adc
adc
push
mov
dec
insb
push
jmp
ret
jp
stc
es
pop
jbe
add
add
xor
mov
or
mov
push
rorl
push
leave
push
cltd
inc
in
lret
push
imul
pop
mov
pop
dec
push
aaa
add
cmp
arpl
inc
subb
icebp
xor
mov
mov
or
xchg
into
push
cmp
xlat
stc
push
mov
test
push
mov
out
jno
jns
jnp
dec
jbe
lea
mov
xor
btr
repz
arpl
fimuls
and
fldenv
xchg
jbe
jbe
lods
shl
stos
push
scas
mov
mov
loopne
scas
mov
mul
loop
insl
in
sbb
in
or
repnz
add
aad
loope
sbb
inc
sbb
inc
pop
mov
sbb
loop
in
jb
and
call
dec
fcmovnb
cmp
mov
push
psubb
movsl
inc
push
dec
jmp
inc
fstl
xchg
arpl
mov
adc
sub
ret
xchg
idiv
jmp
lods
and
shr
xchg
subl
sub
xlat
outsl
fiaddl
mov
icebp
adc
dec
fists
or
or
ret
aam
je
pop
shl
or
sbb
fnsave
loope
sarl
or
push
cwtl
dec
addr16
inc
or
cli
iret
bound
push
adc
into
add
mov
cmpb
jmp
rcll
dec
in
inc
dec
cwtl
inc
pop
mov
add
insl
leave
or
or
imul
jle
pop
cltd
movb
js
push
pop
ds
sbb
add
icebp
xchg
ret
xchg
loope
sbb
orl
std
pop
jmp
repnz
movsl
adc
pop
jae
cmp
add
jbe
or
lret
nop
jmp
mov
xor
sub
and
jle
jmp
leave
push
adc
popa
jbe
or
fistpl
pusha
jno
flds
and
lcall
jmp
push
mov
jno
ss
pop
mov
addr16
out
add
cmpsb
in
sbb
sub
jne
jb
push
cmpsl
fidivs
fdiv
and
pop
mov
dec
aam
jo
addr16
lret
rolb
and
jmp
sbbb
mov
pop
fiaddl
mov
cs
xchg
jne
jno
or
dec
mov
movsb
sbb
pop
fs
out
es
repz
jo
out
and
mov
mov
mov
jb
incb
ljmp
inc
and
das
xor
das
adc
icebp
movsl
rorb
lea
mov
xorl
inc
aam
adcl
pop
or
adc
rcrb
dec
sahf
pop
test
mov
cmp
jmp
insl
mov
sahf
in
jg
or
loopne
pop
mov
insl
arpl
adc
nop
push
pop
dec
loop
jmp
ds
push
add
and
mov
jge
movsb
xor
das
in
sbb
pop
mov
loopne
add
rclb
movsb
mov
and
mov
pop
sbb
xchg
fwait
aaa
mov
into
sbb
cltd
mov
cld
jb
stos
lret
aad
lret
dec
inc
cmp
sub
pop
mov
int
cwtl
lret
repz
enter
lret
sbb
cmpsb
adc
ja
test
pop
test
and
mov
or
icebp
fsubrp
aam
push
fwait
inc
fdivs
call
leave
cld
shrb
cltd
loope
les
mov
clc
push
add
sub
repnz
repnz
fildl
push
test
mov
std
repz
push
adc
xlat
daa
loopne
sbb
movsb
sti
xor
and
mov
push
jecxz
inc
sarb
xor
sub
xor
xchg
cmp
das
xor
cwtl
cmpsb
cmp
addb
jg
scas
int
in
int3
in
in
cmpsb
mov
xchg
fstl
inc
scas
adc
fsubrl
cmpsb
daa
xor
mov
cmpsl
out
repz
ss
sahf
fwait
adc
imul
sub
rolb
lock
in
daa
fistpll
addr16
xchg
dec
daa
mov
push
jb
and
adc
fisttpl
push
mov
push
fldl
lods
dec
fildl
push
sbb
addr16
ds
cld
lds
aad
lea
dec
mov
xchg
bound
cmpsl
inc
push
add
mov
not
mov
pop
sub
mov
jno
scas
adc
or
adc
or
pop
xchg
cmp
mov
xor
repz
mov
ret
mov
fsubr
xchg
xor
mov
shll
test
lcall
add
mov
mov
fwait
and
and
jle
inc
push
mov
imul
jo
pop
pop
cmp
cmp
ds
in
addb
mov
mov
mov
adc
pop
mov
xchg
out
push
mov
dec
add
daa
xor
cmc
cmp
xchg
mov
icebp
lahf
leave
push
add
push
loope
ja
and
sub
lahf
js
in
lret
adc
insl
lds
pop
mov
jmp
roll
push
shlb
dec
push
and
inc
jnp
sbb
hlt
push
sbb
insl
xchg
xor
pop
mov
mov
push
xchg
push
pop
mov
roll
and
in
xchg
bound
mov
lock
dec
lcall
scas
mov
adc
jmp
push
ss
jge
lods
mov
cmc
mov
push
scas
test
push
dec
loope
adc
pop
cmp
cld
lret
in
dec
inc
je
xchg
mov
xor
outsl
in
pop
xchg
sbb
cmc
add
jl
jno
stc
xor
pop
xchg
mov
test
aaa
push
imulb
jmp
in
inc
push
push
or
add
jmp
inc
outsb
or
cld
add
mov
inc
test
xchg
std
mov
addr16
pusha
push
dec
sti
mov
sbb
dec
xor
adc
icebp
xor
mov
jns
dec
leave
gs
or
sub
aad
xchg
ss
xlat
aas
sbb
add
into
xchg
arpl
dec
daa
add
mov
xor
aas
ret
mov
scas
pop
dec
loope
int3
stos
mov
add
add
sub
addr16
pop
jbe
add
test
test
aam
out
inc
dec
push
inc
sbb
repz
aaa
xchg
data16
xchg
movsb
cmp
cmpl
xchg
xchg
mov
cld
enter
bound
sbb
xchg
xchg
int
xchg
mov
fnstcw
add
pop
cmp
enter
cmp
scas
test
push
adc
push
xchg
test
mov
inc
movsl
add
shll
push
lcall
in
mov
xchg
aas
xchg
jnp
out
and
mov
stos
pusha
dec
mov
mov
sbb
mov
mov
rcll
xor
lods
faddp
mov
sti
into
pop
sbb
jnp
scas
mov
xchg
test
inc
and
enter
pop
sbb
fwait
add
push
mov
fwait
mov
testl
or
out
rorl
dec
sti
mov
or
and
scas
mov
jns
xchg
and
xor
adc
xor
rcrl
push
xchg
mov
cmp
xlat
stos
mov
or
icebp
pop
pop
push
cmpsl
xor
popf
aas
cli
mov
enter
clc
jecxz
mov
or
pop
mov
repnz
push
pusha
imul
mov
outsb
mov
lds
inc
fistl
sti
mov
rcll
loop
and
mov
mov
adc
push
mov
xor
cmp
lahf
jo
sahf
popf
pop
sub
cmpsl
or
icebp
sbb
jnp
rclb
pop
fisttpl
loop
xlat
fadds
adc
mov
rcl
mov
sahf
push
sbb
add
in
stos
mov
not
clc
stos
dec
ret
cmpsb
pop
pop
rcrl
lret
jbe
aaa
fs
dec
dec
fs
fndisi(8087
cmp
cmpsb
xchg
ret
mov
xchg
sbb
dec
mov
stos
push
mov
cmp
or
mov
adc
xor
aam
sar
clc
dec
cmp
xlat
out
pop
in
imul
xor
sti
jp
jae
inc
push
test
addr16
xor
adc
fbld
mov
cmpsl
adc
jnp
stos
int
testl
test
outsl
ss
lods
daa
xchg
in
faddl
mov
cmpsb
loope
jno
cmpsb
hlt
es
ret
aaa
cmp
fisttps
jl
repz
stos
lods
in
mov
aam
ror
int3
inc
orl
lock
or
push
les
jb
mov
int3
cmp
ret
repnz
test
jl
addb
xor
add
inc
add
xor
pop
inc
stos
in
fwait
cmp
rcrl
or
in
in
sub
push
ljmp
cmp
or
nop
loop
addr16
mov
ljmp
dec
outsb
mov
stos
pop
dec
cmp
xchg
das
mov
pop
fidivl
adc
movsb
in
fidivrl
push
jae
cmpsb
cmp
push
or
pop
dec
jecxz
dec
nop
push
dec
inc
and
xchg
movsb
loopne
sbb
inc
les
mull
imul
fsubrs
pop
lods
mov
xor
jnp
or
das
adc
push
cmp
mov
cmpsl
adc
or
add
mov
pop
enter
inc
pushf
jmp
dec
xor
daa
mov
jns
test
or
stc
cmp
dec
popf
ficomps
fadd
xor
dec
add
or
dec
mov
and
movsb
ret
push
push
jle
sbb
or
lea
dec
cmpsb
icebp
fisttpl
xchg
xchg
cmp
dec
xchg
aad
in
dec
test
out
pop
push
in
cwtl
mov
popa
adc
movsb
xlat
xorb
dec
test
inc
aam
in
push
cmp
incb
adc
or
push
and
jno
in
mov
repz
adc
or
out
mov
lahf
lods
adc
outsb
aas
xchg
dec
daa
mov
inc
hlt
insl
and
aad
lea
mov
or
jge
jmp
sub
mov
add
mov
in
sub
out
dec
bound
cmp
aam
and
or
test
movsl
push
jmp
xchg
pop
inc
pop
popf
add
dec
test
loopne
icebp
idivl
and
movsb
cli
lods
xor
inc
pop
das
push
push
push
in
es
jmp
rorb
fistpl
rolb
inc
ss
cmp
mov
dec
mov
cld
xchg
adc
mov
adc
ljmp
enter
scas
or
sub
cltd
data16
call
lds
jge
inc
dec
orb
cltd
cmp
xchg
loope
scas
cmp
sbb
clc
adc
xchg
iret
lods
dec
in
push
mov
scas
dec
inc
or
inc
lock
sbb
je
push
dec
jns
jecxz
mov
bound
cwtl
push
sahf
push
sub
dec
mov
pop
and
popf
mov
lods
lret
repz
je
push
arpl
and
xchg
data16
xchg
into
pushf
mov
inc
xchg
xchg
int
fidivs
xlat
daa
mov
or
nop
dec
mov
add
stos
aam
addl
adc
push
lret
mov
adcb
jae
mov
xlat
outsb
pusha
sub
push
loopne
push
shll
pop
fldl
cmp
pushf
mov
mov
dec
cmp
cmp
push
inc
mov
into
mov
pop
mov
add
xchg
ret
rclb
mov
aas
cmp
pop
add
push
sbb
out
mov
and
ja
add
cmp
mov
fs
aaa
cmpsl
cmp
push
xchg
cwtl
out
mov
jg
ljmp
xor
sbb
cmc
call
cs
test
and
fildl
xlat
lds
loope
add
mov
sbb
push
mov
xchg
call
mov
int
adc
gs
cmp
dec
push
iret
enter
mov
or
jge
ja
out
dec
hlt
push
test
notl
or
or
hlt
or
sub
mov
pop
outsl
sbb
mov
test
push
xchg
inc
cmp
xlat
lods
mov
cmpb
xchg
xchg
in
adc
pop
mov
mov
jbe
aad
mov
push
mov
sub
rolb
lea
pop
aad
adc
or
xchg
inc
xchg
xor
decl
xchg
lea
mov
xor
imul
fisubl
mov
lret
cmp
aaa
addr16
sbb
sahf
shll
jecxz
mov
push
imul
mov
ret
cld
dec
lahf
xchg
push
push
push
mov
inc
imul
std
inc
dec
insb
xlat
push
clc
int
in
les
sahf
cs
scas
imul
out
push
cmc
xor
pop
inc
cmp
push
inc
scas
ret
mov
aas
test
fisubrl
push
and
xchg
push
sarl
jle
arpl
sub
out
pop
push
shll
and
mov
movsb
out
movsb
rcl
xor
test
push
dec
mov
test
and
je
cmpsb
xchg
jle
outsl
movsl
push
mov
gs
out
imul
adc
sbb
sub
out
idivl
imull
and
jl
dec
stos
add
push
orb
push
xchg
push
jae
push
xor
icebp
mov
mov
xor
loop
adc
xchg
xor
inc
xchg
in
addl
xchg
enter
cmp
addl
xor
ficomps
ds
or
sbb
and
dec
stos
fidivs
or
lret
fwait
ljmp
adc
mov
pop
jg
pop
inc
aaa
adcl
lea
lret
pop
xor
in
sbb
jo
andl
pop
adc
call
arpl
lods
mov
inc
jb
stos
imul
aaa
xchg
pop
punpcklbw
outsb
mov
lds
mov
push
out
idivb
outsb
aam
leave
addl
movl
inc
aad
cmpb
mov
mov
push
jmp
popl
or
rolb
cmp
jns,pn
sbb
mov
leave
dec
push
leave
call
inc
pop
jmp
mov
inc
lds
add
das
sbb
jg
scas
push
cmpsb
fwait
or
insl
in
outsb
pop
in
push
jge
cwtl
loope
mov
mov
lods
sub
mov
dec
icebp
and
mov
nop
popa
out
fs
pop
fwait
cmp
jmp
dec
mov
push
mov
push
xor
push
fistpll
lcall
or
testl
push
pop
inc
jmp
in
adc
sbb
inc
cmp
and
lahf
sbb
sbb
ret
jp
fcomi
mov
into
bound
pop
ret
xor
insl
mov
out
js
sub
out
popa
sbb
pop
xchg
push
sub
or
and
nop
jecxz
ljmp
jne
mov
jne
into
xchg
mov
push
das
cmc
popl
push
inc
mov
xchg
mov
sbb
stos
mov
repz
push
fcompl
repnz
mov
push
loopne
out
rorb
sbb
jno
je
sbb
push
cmp
xchg
pop
dec
inc
xor
push
aam
filds
mov
ficomps
out
outsb
pop
adc
fwait
lds
adc
stc
push
dec
pop
cmp
xchg
xor
dec
pop
stc
in
fwait
adc
insl
test
inc
pushf
enter
mov
add
ret
push
outsl
pushf
jne
ss
mov
mov
lods
es
and
ds
iret
mov
mov
test
jmp
and
xorb
mov
mov
imul
hlt
ret
cs
ret
dec
lret
xor
mov
cmp
and
push
mov
shrl
xchg
movsl
shrb
lock
or
sub
lock
popa
inc
loopne
and
mov
cwtl
xchg
loopne
xor
or
mov
pushf
xchg
mov
push
xor
cmp
lds
mov
insl
lcall
or
subl
imul
sub
inc
cmp
ret
rcr
xchg
dec
rcll
adcl
pop
jnp
inc
cmp
and
adc
push
push
mov
stos
dec
and
out
inc
inc
and
aas
pushf
aam
rorl
add
pop
and
push
out
fsubrl
sbb
lret
or
mov
gs
bound
jmp
mov
cmpsl
test
dec
dec
dec
pop
mov
lret
xlat
rorl
mov
pop
clc
mov
lds
or
mov
stos
je
jge
push
loop
ljmp
jmp
outsb
pop
les
iret
fs
test
in
add
jbe
adc
hlt
xlat
insl
cltd
mov
pop
jmp
jmp
push
mov
ljmp
cltd
into
and
or
sbbl
lret
aad
jnp
call
xchg
sub
and
loopne
mov
push
sbb
pop
daa
test
pop
mov
mov
daa
movsb
das
add
stos
push
sbb
add
sub
mov
fstpl
mov
inc
adc
ret
and
fisubrl
xor
pop
push
gs
fcoml
fcompl
shll
mov
sbb
add
xchg
pushl
and
push
cmp
push
pop
mov
jnp
jmp
jmpw
pop
mov
bound
mov
pop
mov
xchg
lods
or
jne
xchg
dec
jg
xchg
stc
xor
mov
aam
stos
add
shrl
dec
xchg
gs
stc
or
pop
mov
xchg
cli
or
dec
movb
sub
loope
mov
ret
out
xchg
pop
jae
insb
xchg
inc
xchg
jno
and
adc
push
pcmpgtd
into
into
jbe
stc
mov
lds
rcll
orl
ljmp
dec
out
scas
sbb
shll
loope
scas
cmp
ret
cld
scas
nop
jno
jl
aaa
sahf
mov
fstpt
xchg
insb
das
je
jle
icebp
cmc
mov
push
add
insb
pop
inc
mov
ljmp
enter
mov
lret
mov
add
mov
push
push
jae
sub
sbb
or
pop
xor
ret
cli
pop
cli
out
andb
sbb
push
notb
mov
les
lret
cmpsl
insb
fcomp
inc
add
sarl
adc
repnz
add
mov
sarl
dec
and
cwtl
adc
aas
pop
insb
int3
das
aaa
cmc
cmpsb
cmpsl
push
push
add
mov
or
outsb
aas
mov
jne
lea
sbbb
mov
mov
adc
sbb
cmp
jo
mov
iret
out
xlat
xchg
sub
pushf
loope
mov
dec
orb
xchg
popa
fistl
cmp
in
loope
shll
mov
inc
sub
iret
mov
adc
sarl
add
fildl
mov
mov
lock
scas
sub
pop
sbb
stos
jae
xchg
ja
lret
jnp
nop
push
xchg
sbb
ds
lea
daa
mov
or
mov
lds
in
clc
inc
ror
pop
and
insb
sub
in
xor
adc
loopne
lock
xlat
fcmovbe
mov
rcll
sbb
jmp
mov
push
jae
push
dec
insb
dec
repz
stos
lahf
loopne
subb
cmp
mov
jp
pop
in
ljmp
jp
xchg
int3
sahf
push
jl
sbb
add
negl
rcrl
pop
dec
xor
aad
mov
and
lods
mov
pop
insb
and
in
out
aad
jmp
test
mov
das
and
sub
in
aas
insb
adc
movsl
sbb
inc
sub
aas
or
dec
lahf
test
cmpsl
ret
cmp
scas
ds
dec
xchg
daa
push
mov
ret
into
cs
push
jl
cld
lret
icebp
xor
ret
ss
mov
icebp
jbe
sub
cmp
andl
loopne
push
shll
leave
dec
inc
js
cmp
sbb
inc
ficompl
clc
andl
sbb
test
mov
cmp
push
enter
testl
insb
xchg
sub
mov
push
iret
les
andl
mov
ret
cs
mov
push
cmp
pop
jg
sbb
and
push
pop
addl
xlat
fwait
mov
mov
stc
push
ljmp
jecxz
and
inc
cld
in
lcall
xchg
push
xor
cs
mov
add
add
or
mov
inc
out
imul
pushf
lcall
push
add
cmp
jp
movsl
cld
sub
enter
adc
sub
dec
loopne
aaa
sub
mov
mov
cmp
enter
out
nop
jge
push
dec
inc
xchg
dec
rcrb
out
lcall
out
jmp
inc
pop
imul
adc
aam
mov
lds
mov
nop
fcoms
iret
cld
outsl
clc
fisubrl
jmp
xorb
imul
pop
popa
int
mov
cltd
xchg
shl
aas
loopne
jge
inc
daa
inc
sarl
adc
mov
lods
arpl
mov
sti
pusha
or
nop
ds
inc
inc
cld
and
xlat
jl
sub
pop
or
mov
or
dec
das
rcrl
push
mov
xchg
xchg
cmp
mov
inc
lock
addr16
je
into
sbb
pop
aaa
ret
xor
lahf
xchg
ds
lret
cmp
dec
add
xchg
pop
cmpb
dec
mov
xchg
arpl
and
lods
lods
mov
gs
push
popf
cmp
aad
or
xchg
and
pop
push
stos
dec
mov
and
push
mov
cmpsl
leave
cmp
shrl
and
mov
xchg
in
push
or
repnz
imul
or
nop
mov
orb
outsl
mov
add
cmp
inc
push
xor
es
imul
leave
inc
fldenv
movzwl
push
movsb
into
test
test
repnz
cmp
rclb
push
aam
sub
fistpll
sub
gs
in
mov
dec
dec
sub
out
enter
das
scas
das
fists
fldt
test
and
xchg
nop
das
aaa
and
dec
cmpsl
and
and
xchg
jno
outsl
lds
mov
jns
pop
push
dec
lret
add
insl
pop
test
mov
cld
push
xchg
int3
in
inc
std
pusha
fcmovne
stos
div
out
nop
clc
push
mov
stos
lret
mov
cmp
fnstcw
sahf
cmp
jb
fsubrl
adc
inc
pop
fwait
mov
mov
dec
gs
xchg
outsl
jecxz
movsb
push
or
adc
out
insl
jmp
sbb
scas
sub
mov
inc
and
sbb
xchg
nop
xchg
xchg
push
xchg
addl
insb
and
cli
in
sahf
outsb
pop
cwtl
scas
es
jmp
fcomi
pop
je
sub
dec
loopne
push
cs
mov
or
js
sub
hlt
in
mov
push
mov
cltd
pop
test
push
sbb
jbe
adc
lahf
mov
mov
daa
leave
loopne
aas
xchg
out
pop
inc
fsts
cmp
ljmp
not
sub
lds
adc
mov
sub
pop
inc
and
loopne
mov
clc
mov
pusha
jmp
or
mov
adc
adc
pushf
jno
inc
data16
add
and
shrl
insl
jmp
sbb
mov
mov
sbb
add
mov
add
pop
mov
je
jns
mov
add
lds
lea
lods
pop
dec
dec
stos
fs
or
frstor
sbb
jae
int
push
pop
addl
ret
jp
fidivl
sar
cmp
jb
push
push
addr16
mov
xor
cmp
add
das
in
cld
and
or
mov
jecxz
imul
sti
push
test
icebp
add
test
stos
nop
or
inc
sti
mov
popf
fs
enter
adcw
cwtl
daa
lahf
inc
xor
in
ficomps
jl
mov
pop
push
imul
push
ret
fwait
test
mov
loope
push
and
or
cmp
cmpsl
sub
pusha
jle
inc
ds
inc
ret
cld
adc
mov
scas
in
mov
sbb
nop
dec
mov
les
shll
lds
jnp
subl
push
scas
push
inc
cld
inc
lret
mov
xchg
in
adc
pop
and
out
outsb
aam
cmpl
push
sbb
xchg
mov
mov
int3
insl
pop
das
les
pop
adc
add
add
dec
mov
pop
push
outsb
mov
daa
inc
daa
mov
mov
in
xor
aam
testb
outsb
repnz
lds
cmp
jl
or
jae
mov
sti
sub
aaa
sbb
mov
out
cli
sahf
xchg
outsl
dec
or
repnz
mov
xor
pusha
push
mov
cs
xchg
pop
inc
xchg
aad
adc
rolb
sbbl
ja
aaa
sahf
mov
push
xor
bswap
inc
pop
lret
xor
add
xlat
mov
mov
cld
adc
mov
and
dec
pushf
add
imul
xchg
xor
jge
mov
jg
dec
aaa
rorb
jl
mov
mov
xchg
test
repz
pusha
ljmp
je
or
inc
sarb
sub
pop
stos
imul
xchg
data16
shlb
rorl
jg
ficoml
fidivrl
fs
pop
adc
movsl
rcrb
cmp
add
testb
push
outsb
sub
je
mov
dec
mov
js
daa
xlat
outsl
scas
mov
jne
xchg
dec
enter
mov
imul
js
test
mov
scas
adc
adc
int3
push
push
xor
rolb
push
and
jae
jle
cmp
fisubrl
pop
fistpll
cwtl
xor
push
stos
popf
pop
mov
mov
push
jo
mov
jae
and
scas
push
push
adc
movsl
cmp
mov
dec
aaa
mov
shlb
adc
pop
push
push
push
cltd
ret
rclb
nop
inc
andb
cli
notb
lods
adc
push
stos
xor
clc
xor
sub
imul
pop
es
jecxz
nop
xlat
mov
adc
inc
rcr
pop
clc
std
bound
dec
pop
push
les
jle
mov
sbb
mov
xchg
mov
pusha
adc
mov
or
mov
faddl
cmc
pop
push
icebp
inc
cmp
push
inc
out
enter
cmp
daa
add
sub
xor
sub
gs
repnz
test
mov
push
shr
nop
adc
mov
stc
jnp
xchg
push
cmc
icebp
fcoms
lods
mov
hlt
or
xor
push
lods
dec
cmp
stos
test
int
sub
mov
pop
subb
pop
and
mov
xchg
das
enter
stc
mov
lock
dec
push
pushf
loopne
cld
inc
mov
adc
subb
jno
dec
fsubs
mov
in
fisubrl
jmp
mov
adc
adc
add
inc
fisubrs
push
andl
cmp
ret
iret
mov
xchg
inc
repnz
das
sbb
bound
sbb
mov
out
data16
or
lods
push
imul
clc
dec
call
push
orb
imul
movsb
add
lods
push
mov
pop
sub
or
inc
fucom
adc
ret
inc
push
movsb
sti
mov
or
and
loope
loope
pop
fistpll
push
test
int3
jg,pn
imul
les
sbb
xchg
inc
xchg
inc
xchg
or
scas
pop
mov
iret
jns
push
loopne
push
push
xchg
mov
xchg
shr
jno
inc
in
sub
xchg
jns
mov
jl
aas
fldt
lcall
fadds
pop
xchg
xchg
orb
addr16
add
mov
mov
lret
push
xchg
fldt
aad
add
or
lods
cmp
cmp
movsl
push
cli
push
sub
adc
enter
pop
dec
push
sbb
xor
inc
imul
nop
xchg
mov
dec
nop
inc
es
loopne
popf
stc
mov
jno
sarb
jecxz
out
sbb
push
lock
add
movnti
pusha
lahf
rcr
mov
jnp
and
inc
jo
pop
push
mov
xchg
mov
mov
icebp
jle
add
xchg
rclb
mov
push
mov
adc
pop
push
mov
pop
lds
inc
je
sub
sbb
lods
jne
dec
in
das
or
jae
rcll
mov
jmp
repnz
and
scas
xlat
aad
ljmp
mov
inc
jp
inc
stc
lock
cld
mov
nop
ret
icebp
iret
ds
mov
orb
pop
jns
sbb
roll
out
sarb
jmp
mov
xchg
jne
dec
out
mulb
mov
clc
add
mov
push
mov
movsb
popa
mov
ret
push
add
or
imul
ret
inc
into
cmpsl
mov
imul
xor
push
sahf
jecxz
or
scas
sub
mov
jnp
mov
imul
testb
in
or
iret
ljmp
inc
cmpb
rorl
data16
movsb
test
jb
dec
mov
je
cmpsb
hlt
data16
push
ja
add
xor
mov
out
push
es
aaa
movsl
js
mov
mov
cmp
adc
je
lret
adc
add
pop
xor
fdivr
mov
dec
repnz
test
test
lods
mov
sbb
or
popf
leave
cmp
ss
std
jae
addr16
cmp
movsl
jmp
mov
ds
in
lods
mov
jle
pop
or
mov
gs
lret
inc
dec
sub
es
fcompl
sbb
dec
fiadds
dec
movsb
cmp
sub
fisttpll
fldl
sub
or
pop
clc
rcr
cltd
adc
xchg
ds
jle
roll
dec
cwtl
mov
fdivs
pusha
popa
mov
xchg
aam
aam
sarl
pop
imul
daa
cwtl
sub
cmc
and
icebp
add
mov
loop
mov
inc
in
andl
cmc
jg
test
popf
lcall
data16
lcall
push
xchg
push
jge
mov
add
stc
xor
lcall
dec
and
lock
sbb
aad
add
call
pop
mov
xchg
shll
mov
lret
add
cld
sbb
scas
push
cld
mov
cwtl
mov
jno
js
inc
fstpl
cld
fwait
loope
pop
xchg
mov
or
lret
sti
mov
adc
push
imul
add
setl
sbb
shlb
scas
nop
and
test
pushf
sub
cwtl
or
or
fisubrl
pop
push
xchg
insl
dec
mov
inc
popa
jb
insb
inc
outsl
xorb
inc
in
repnz
addr16
push
stc
ljmp
dec
int
mov
jl
pop
jbe
hlt
movsl
sub
cmpsl
dec
rcll
popf
mov
mov
jno
fld
lcall
outsb
mov
mov
dec
lea
mov
or
jl
stc
sub
test
adc
and
aad
adc
or
mov
cli
pop
sbbb
push
xchg
int
inc
inc
ret
cmp
mov
imul
fwait
mov
call
push
sub
or
lahf
jae
inc
push
sub
cmp
inc
jl
std
jns
xor
dec
sbb
inc
xchg
std
mov
mov
add
test
sub
sub
dec
lcall
or
ss
and
jb
test
push
clc
inc
shl
ds
insb
mov
loop
scas
push
mov
mov
xchg
lcall
jnp
inc
pushl
clc
shrl
cmp
push
in
ja
shrl
add
addl
sahf
xchg
je
jp
in
xorb
sahf
aas
add
xor
xor
jl
notb
pop
push
je
xchg
popa
out
aaa
inc
push
adc
aas
push
js
loope
cmp
call
test
inc
in
ss
add
int3
jo
test
loope
lret
test
jo
shr
pushf
hlt
add
pusha
lea
clc
sbb
mov
mov
sbb
es
cmp
aam
rcrl
sub
pop
popa
cmp
xor
or
nop
mov
push
pop
clc
adc
in
call
sbb
sahf
adc
addr16
mov
int
test
mov
dec
bound
out
xchg
jle,pn
lea
mov
pop
aaa
incl
sub
or
addr16
insb
mov
fstpl
push
sar
sbb
sti
movsl
testl
shlb
cmp
push
push
xchg
outsb
sbb
mov
stos
mov
sbbl
mov
xorl
xchg
fdivl
ja
push
xor
adc
cld
pop
jmp
xchg
xor
stos
pop
insl
xor
inc
mov
jge
mov
pop
and
test
push
fwait
xchg
mov
setns
scas
push
jp
stos
mov
cs
inc
repz
fnstcw
xchg
jo
repnz
test
xor
hlt
and
shrl
or
add
stc
in
mov
mov
xchg
or
sbb
lea
add
test
scas
loopne
jp
xor
dec
pop
dec
or
lds
push
pusha
ret
lahf
lcall
ljmp
mov
mov
pushf
sub
jbe
test
test
arpl
ljmp
lock
mov
sbb
xchg
bound
je
lock
xchg
ja
dec
rcl
aas
mov
stos
add
fstpl
and
and
jb
pop
cmp
cli
inc
push
repz
mov
das
mov
dec
rorb
dec
inc
sbb
jae
imul
jbe
js
xor
cwtl
push
push
aam
add
ja
inc
xchg
inc
stos
inc
lcall
popa
jo
fisttpl
cwtl
inc
stos
mov
inc
data16
or
mov
arpl
cmp
mov
in
lahf
pop
pop
and
mov
popf
push
ds
push
lretw
loop
sarl
ds
outsb
outsl
xor
xchg
mov
mov
add
xchg
in
std
cmp
fs
unpcklps
adc
xchg
xchg
rolb
clc
ret
addr16
cmpsl
aas
std
loopne
push
add
add
outsb
push
imul
popf
movsl
lods
sbb
ret
scas
push
insl
cmpsb
sbb
dec
addr16
cmp
in
out
test
iret
pop
sub
inc
or
pop
mov
shlb
std
in
jae
push
xchg
fistpll
sbb
aad
aad
jbe
cwtl
enter
js
pop
or
aad
mov
push
inc
dec
jmp
inc
dec
popf
nop
out
mov
hlt
test
sub
mov
dec
push
or
icebp
or
imul
ja
mov
push
pop
dec
mov
aad
mov
pop
pop
sbb
stos
pop
mov
mov
outsl
mov
cmp
or
enter
and
lret
icebp
arpl
xchg
and
hlt
fidivs
into
pop
shr
imul
or
xor
test
and
mov
int
popa
mov
sub
insl
adc
inc
lahf
adc
repnz
mov
leave
movsb
mov
dec
inc
mull
push
xor
mov
cmp
mov
rcrb
mov
xchg
leave
jb
lock
jl
inc
mov
ficoml
pop
int
push
mov
pop
repz
jmp
dec
cmp
sub
xchg
icebp
and
loopne
das
iret
mov
or
popf
cmpsl
sub
jae
or
mov
rolb
mov
fsubs
mov
les
icebp
movsb
mov
mov
and
sub
outsl
xchg
in
fadd
cmp
repnz
cmpsl
or
add
mov
lahf
jo
ljmp
int3
fsubrl
iret
jmp
js
pop
adc
sbb
inc
cmp
pop
sub
dec
xor
xchg
shl
adc
sub
mov
adc
jle
pop
sbb
leave
and
andb
xchg
ljmp
and
pop
inc
into
rcrb
fisubrl
cmpsl
sub
ss
mov
sbb
in
mov
xchg
mov
js
fistpll
testb
pop
dec
sub
add
add
cmp
dec
jae
outsb
sub
jl
mov
into
decb
xor
inc
jno
cmp
out
add
aad
negl
data16
repnz
xchg
pop
xor
scas
xlat
xchg
cs
cmpsb
fmuls
sar
sub
je
scas
stc
xchg
push
ja
data16
les
inc
out
inc
movsb
and
lds
cmp
addr16
cmpsl
imul
sub
mov
sub
leave
popa
adc
pop
decb
aam
in
out
iret
adc
push
xor
push
dec
hlt
and
stos
loopne
lcall
cmp
mov
pushf
xchg
add
dec
or
out
sahf
andl
outsl
inc
imul
mov
cmp
test
or
pop
roll
cmp
stc
pop
rcrl
add
fisttpl
mov
iret
mov
pop
ds
push
cmp
mov
push
test
test
in
or
adc
adc
add
cmpsl
frstor
add
xchg
repnz
xor
sub
mov
push
pop
data16
fimull
aaa
fucomi
push
ja
scas
xor
sub
lds
hlt
push
inc
pop
mov
cmpsl
addr16
jno
scas
xorb
call
fldcw
jnp
or
testl
mov
and
jmp
jb
in
mov
sahf
adc
mov
add
test
cmpsl
int
outsl
jecxz
xchg
test
loopne
mov
loopne
cs
jle
adc
or
lahf
fs
xor
jl
jg
sbb
mov
dec
aad
add
das
dec
fsts
push
mov
jmp
add
int3
cmp
and
daa
or
mov
lcall
inc
cmc
and
leave
pop
popf
pop
jb
push
cmp
das
xlat
xchg
lock
sbb
xchg
les
call
sahf
mov
pop
push
mov
rorl
outsl
and
sarl
inc
sti
lods
mov
daa
shll
fnsave
mov
push
es
imul
sbb
push
xchg
push
xor
xchg
and
scas
push
shl
out
push
ss
dec
ficompl
lds
xor
mov
dec
pop
outsb
mov
pop
pop
xor
mov
mov
out
cli
imul
push
into
mov
int
repz
andb
sub
add
lret
jbe
popa
xor
jo
sarb
pop
aas
iret
shlb
mov
mov
fwait
jmp
ja
std
div
mov
inc
and
sub
xlat
out
add
mov
imul
lcall
add
rcrb
loopne
mov
in
cmpsl
repz
test
stc
mov
testb
bound
jle
notl
out
inc
cmp
xchg
in
and
add
das
inc
jbe
aad
xor
sbb
push
mov
pcmpeqb
or
cmpsb
lret
mov
pop
or
add
push
adcb
lahf
push
scas
adc
inc
add
popa
ret
jo
loopne
and
cmp
mov
stc
add
xor
hlt
mov
iret
sbb
cltd
cmp
addb
addl
call
sub
les
fimuls
mov
popf
mov
xchg
aaa
stos
call
fstpl
iret
dec
fs
pop
pusha
aad
xchg
push
push
pop
and
mov
out
lcall
push
mov
cwtl
jmp
dec
add
cmp
adc
pop
mov
xorb
mov
mov
push
cld
testb
ja
push
or
stos
aad
mov
add
in
mov
lcall
sub
stos
cmp
fsubl
xor
sbb
cli
fadd
mov
jae
fcomip
and
sbb
mov
nop
inc
xchg
imul
add
mulb
and
out
sbb
ds
mov
sarl
bound
or
mov
adc
adc
pop
cld
sti
cmp
push
cmp
insl
test
sub
mov
mov
add
jmp
push
xor
scas
cli
mov
lods
or
mov
xchg
xchg
inc
sub
outsl
aaa
mov
nop
outsb
neg
es
xchg
mov
ljmp
das
push
adc
outsb
add
ljmp
lcall
shll
and
cmp
dec
mov
fsubs
jp
rolb
mov
in
loop
int
push
int3
inc
add
aas
je
push
jne
or
jmp
sbb
xchg
sbb
sbb
inc
fiaddl
scas
and
adc
addl
les
fdivr
or
mov
ja
movsb
push
lea
call
adc
stc
cmpb
pop
std
aad
rolb
lea
inc
adc
adc
xchg
adc
mov
pop
mov
fwait
out
adc
pop
mov
adc
incl
xor
divb
ja
fdivs
pop
dec
sub
shlb
sbb
sbb
cmpsl
icebp
xor
mov
in
jne
cmp
dec
xlat
in
xor
push
add
rcrb
inc
cmpsl
loop
or
push
and
mov
int
mov
jns
scas
push
mov
push
cmp
add
sbb
mov
push
ss
and
xchg
xchg
lret
jo
jne
cwtl
shll
fidivl
and
test
ret
sti
mov
mov
adc
clc
push
jne
rcr
popf
xor
enter
clc
int
push
test
pushf
stos
inc
popf
jl
in
ss
aam
cmp
pop
hlt
cltd
jo
and
call
pop
movsb
fmuls
jb
xchg
push
sub
dec
add
ret
lock
inc
pop
or
outsb
jae
inc
pop
or
fisubrs
mov
xchg
jmp
sub
lahf
jl
into
xor
shrb
fcmovu
fwait
pushf
mov
mov
subl
sbb
xchg
push
add
stos
adc
add
scas
rcll
outsb
out
jp
fsubl
cs
xchg
dec
fisttps
cmp
xchg
mov
sbb
xchg
loopne
sub
xor
mov
fsubr
outsl
sbbb
jl
add
mov
mov
mov
fwait
push
loop
adc
stos
jecxz
popa
jb
cmp
jb
jno
cmp
es
push
cmp
cli
cmc
sub
mov
lcall
sub
movsb
sub
andl
popa
cmp
or
jge
add
mov
sbb
add
cwtl
imul
lret
jp
and
lock
dec
std
cmp
repnz
jp
je
add
xchg
push
jb
stos
pop
xor
xor
cltd
jne
test
incb
popf
lds
jns
mov
mov
mov
push
ret
ret
das
popf
aas
jg
or
dec
push
adc
jo
inc
pusha
dec
and
or
mov
mov
sub
outsl
xchg
gs
fwait
iret
xor
pop
pop
mov
lods
insl
and
jge
stos
addr16
test
lret
jns
imul
cwtl
adc
aam
mov
dec
xchg
add
aaa
paddsw
sbb
xchg
xchg
leave
out
cmp
mov
cli
pop
push
add
fcompl
lods
imul
das
inc
xchg
inc
loopne
or
pop
lock
xchg
ret
leave
cs
cmc
mov
pop
mov
jge
xchg
insb
pop
cwtl
xchg
leave
addb
inc
mov
hlt
repnz
adc
dec
sbb
jne
inc
mov
out
idivb
xor
cmpsb
mov
dec
or
imul
in
dec
sbb
lods
cltd
or
push
rcll
cmpsb
outsl
rclb
aaa
adc
xor
dec
push
insb
or
xor
jl
xor
out
jecxz
xor
cwtl
gs
mov
push
mov
das
in
pop
sub
push
ss
ja
xchg
and
ss
aas
ret
orl
add
notl
jecxz
inc
mov
cs
xor
notl
xor
bound
movsl
fisttps
cld
xchg
jl
out
lea
fwait
std
outsb
lahf
jle
je
push
and
test
or
mov
stos
inc
xor
mov
pop
mov
lods
out
dec
xor
push
sti
jp
mov
shl
hlt
xchg
movsb
xor
dec
into
pop
int3
or
adc
rorl
or
xchg
sub
mov
push
rcr
mov
stc
ret
nop
xchg
dec
xchg
cmp
mov
jno
adc
out
insb
jge
inc
xor
sbb
ja
push
gs
fs
push
mov
inc
fdivrs
jmp
sbb
xchg
mov
inc
push
fstpt
xlat
movsb
mov
data16
mov
lcall
sub
stc
movsb
mov
inc
or
sub
inc
adc
orl
aad
out
fwait
pushf
pop
fs
cmpsl
jno
cmp
xor
ret
mov
cmp
imul
jp
xor
test
add
xchg
subb
jb
shll
std
inc
jno
xor
push
ja
incl
test
popf
dec
sub
adc
add
jb
dec
into
adc
dec
jbe
mov
dec
movsl
sbb
lahf
xchg
xchg
bound
mov
mov
lock
mov
jmp
daa
loope
fistpll
mov
xchg
jbe
nop
cli
rorl
out
inc
jge
std
je
push
or
sti
pop
jp
shll
adc
and
aaa
bt
clc
fsts
inc
fistpll
or
cltd
aaa
and
int3
test
fisttps
mov
xchg
test
pushf
mov
xchg
loop
int3
clc
cmp
mov
out
das
mov
and
lar
pop
movsl
or
pop
in
ret
fnsave
mov
xchg
xor
cmpsl
mov
lret
sub
mov
inc
dec
xlat
and
out
mov
adc
pusha
in
push
mov
inc
xorb
sub
js
push
adc
pop
adc
and
mov
sbb
add
mov
adc
sub
stos
adc
cmpsb
pop
mov
push
inc
xchg
inc
dec
in
daa
and
repnz
je
insl
xchg
pop
jp
add
sbb
sub
or
jo
mov
insl
insb
or
out
and
jno
enter
daa
mov
rcll
iret
push
jae
addr16
imulb
or
and
icebp
inc
jg
repnz
in
in
ret
packsswb
sub
dec
push
adc
pop
sbb
jp
lods
push
call
jne
add
push
into
jmp
pop
std
xor
xchg
in
dec
lods
out
sbb
sub
negl
mov
test
mov
loopne
mov
xlat
mov
or
and
cmp
movl
sub
push
fwait
add
push
daa
pop
or
fistpl
push
mov
inc
in
jg
test
xor
mov
sarb
mov
popa
clc
jne
inc
dec
pop
hlt
jge
xchg
loop
pop
jmp
jp
push
pop
dec
xchg
push
lock
cli
pop
push
or
subb
or
jecxz
cmp
add
int
test
iret
jbe
mov
mov
xchg
pop
or
dec
aad
pop
cmc
mov
add
push
in
cmp
dec
mov
push
xor
sbb
xorb
les
inc
cld
mov
daa
inc
sub
pop
xchg
sub
sbb
test
xor
mov
ljmp
jae
repz
ret
arpl
dec
cld
scas
mov
xchg
mov
mov
mov
ficoms
aam
add
jnp
sub
jecxz
sbb
or
mov
push
movb
imul
lret
repz
mov
call
or
pushf
fwait
mov
imul
mov
out
cli
sbb
pop
out
cmp
mov
inc
xchg
je
cmp
sbb
testb
jae
call
mov
in
add
cmc
in
orl
dec
sbb
mov
arpl
add
insb
call
adc
dec
cmp
xchg
inc
push
push
in
fmul
mov
jnp
ret
dec
ffreep
xor
sub
push
add
mov
dec
sti
and
ret
inc
cmpsl
mov
jle
cmpsl
pop
ja
adc
xor
sarb
or
sbb
mov
clc
push
popa
cltd
jecxz
hlt
out
addb
xor
into
mov
fnsave
jle
mov
fisubs
inc
test
lcall
push
jle
ljmp
push
add
imul
and
mov
or
mov
jge
cmp
sub
je
jecxz
test
loop
cmc
mov
imull
dec
or
xchg
xchg
mov
xor
adc
and
push
sub
ss
ret
cmpsb
enter
lock
imul
xor
sub
pop
lahf
mov
sub
pusha
test
loop
xchg
std
loop
adc
ljmp
pop
loop
pop
pop
ror
xlat
loop
es
or
add
fsubs
test
ret
cli
loopne
daa
daa
sub
push
sub
push
rorl
sbb
jne
mov
sub
jno
mov
pop
fistpll
hlt
es
hlt
cli
repnz
cmp
lahf
lea
adc
testb
scas
ret
fucompp
int
stos
sub
aas
aad
pop
push
add
jmp
inc
sub
aaa
stos
pusha
cmc
js
outsl
inc
call
pusha
ja
aam
add
cmp
inc
in
popl
sbb
cmp
jge
adc
jmp
or
or
cltd
fwait
xor
cmp
roll
mov
cmc
ret
cmp
jmp
cmp
sub
push
sub
cwtl
dec
gs
jge
mov
add
adcb
push
mov
and
mov
faddl
fbstp
pop
xorl
lret
das
lock
mov
shl
sub
bound
inc
pop
sbb
in
push
or
rcll
add
adc
mov
lods
jbe
xchg
add
push
jbe
xlat
inc
cltd
scas
inc
mov
aas
leave
dec
stos
pusha
mov
mov
ret
push
xchg
mov
adc
aas
cmp
movsl
xchg
xchg
aad
jp
mov
cmp
sub
sar
jmp
fdivl
adc
push
pop
js
js
add
and
rol
mov
jo
cwtl
icebp
mov
or
mov
cmc
popf
pop
jg
loope
call
fdivr
adc
push
repnz
cmp
flds
fucompp
dec
cltd
in
dec
xchg
xor
fimull
f2xm1
cmc
jb
push
or
fiaddl
xchg
jno
sbb
push
xchg
test
cltd
push
mov
mov
pop
jnp
push
jmp
scas
data16
out
cmpsb
mov
dec
loope
mov
data16
nop
jmp
push
jno
mov
xlat
jae
pop
dec
push
cmpsb
jb
mov
and
or
lret
popf
roll
push
addr16
sbb
enter
jo
inc
outsl
push
mov
jmp
sar
sbb
aas
sbb
repz
sti
out
lock
jecxz
inc
push
subb
pop
out
or
pop
adc
in
push
fsubs
pop
cmpsl
mov
dec
cs
mov
and
mov
and
or
subb
pop
jns
xor
lods
sub
leave
mov
repz
jne
pop
ja
fcmovbe
adc
mov
inc
les
dec
mov
cmp
sub
sahf
mov
or
andl
mov
ljmp
std
scas
or
arpl
dec
push
sbb
xor
out
jge
lret
std
inc
aad
addb
jne
loop
imul
iret
addr16
mov
sub
mov
pop
cs
cli
pop
dec
out
jge
jno
or
in
pushf
or
pop
cmpsb
fistpll
inc
xchg
pushf
test
mov
jb
xchg
cmp
fildl
fildll
jle
cmp
xchg
inc
mov
xchg
pushf
inc
push
ja
inc
jge
push
xchg
sub
pop
sbb
fnstcw
imul
pop
cmp
and
xchg
ljmp
xor
andl
cmp
xor
pop
test
dec
dec
push
inc
inc
pop
add
xchg
push
push
dec
push
sbb
push
mov
mov
mov
mov
push
in
pop
mov
inc
out
cltd
mov
faddl
xrstor
jg
jno
cmc
test
es
outsb
jbe
adc
xchg
mov
sub
cmp
jno
cs
aas
jle
pusha
cltd
adc
fstpl
ljmp
nop
in
mov
nop
je
jle
int3
add
inc
sbb
ljmp
xchg
repnz
popa
cmp
clc
add
and
stos
ret
sub
sub
fstpl
or
cmc
add
mov
lret
dec
ss
fwait
jg
mov
imul
xchg
in
mov
clc
add
sti
sub
xorb
movsl
pushf
ret
mov
lret
mov
xor
or
lahf
aad
je
xor
adc
shrb
pop
and
sbb
jmp
xor
push
dec
xor
sahf
cwtl
dec
add
or
push
movsb
mov
jge
iret
into
mov
filds
inc
jae
xor
pop
add
lds
push
lahf
xor
or
cli
cmp
out
push
std
lret
ret
sbb
sub
das
scas
aam
ja
push
fsubrs
dec
cmp
call
push
or
push
mov
xor
stc
std
add
pop
in
add
inc
inc
and
out
sub
push
fmuls
stos
push
sahf
fisubs
orb
loope
sbb
sahf
movsl
mov
fimull
or
imul
cmpsb
fnsave
rorl
clc
addl
test
mov
xchg
xor
fwait
arpl
pop
jo
pop
ss
fldenv
push
cli
mov
jp
push
push
icebp
push
mov
sti
push
jns
rorb
mov
cmp
icebp
shrb
cmp
dec
repz
fcos
push
or
xor
inc
jae
inc
rcll
hlt
sbb
jp
popa
testb
adc
repnz
pop
xchg
fcoml
xlat
sub
pop
xchg
insb
jbe
jmp
cs
iret
cmp
push
mov
popa
sbb
lahf
aas
sbb
sbb
sbb
roll
das
mov
popa
popf
lock
or
jge
das
enter
xchg
ja
aas
mov
mov
loopne
data16
sub
imul
pop
sbb
mov
lea
jo
mov
dec
rcll
mov
jl
in
lock
data16
rorl
outsb
sarl
push
out
loope
sbb
loope
push
js
cmp
int
outsb
pop
and
inc
mov
in
and
push
ror
mov
mov
ss
cmp
insl
mov
lret
cmpsl
fcmovnu
jo
xchg
xor
or
cmp
pop
fildll
and
movsb
push
xchg
adc
in
lret
int3
lret
stc
sub
loopne
adc
addl
int
shl
lahf
data16
push
lahf
adc
push
adc
mov
scas
fstpl
or
or
das
adc
mov
push
int3
or
add
mov
clc
pop
dec
stc
and
jb
mov
ret
test
adc
hlt
dec
jmp
pushf
inc
mov
outsl
xchg
xchg
and
push
jbe
pop
ret
cld
ss
std
and
enter
iret
and
imull
addr16
cmp
xchg
or
mov
xlat
ds
aad
into
int
scas
mov
mov
pop
adc
add
negl
jbe
sub
dec
or
adc
stos
mov
ret
lods
add
pop
data16
movsb
aam
sbb
pop
jge
clc
lahf
pslld
pop
add
lods
data16
inc
adc
sbb
push
push
fwait
loop
int
negb
or
fistpll
repnz
mov
jne
xchg
sub
stos
lods
cmp
pop
into
adcl
xchg
sbb
ss
xchg
stc
push
pop
dec
cmp
test
jb
aad
and
mov
mov
adc
and
xor
cmp
cmp
dec
push
jae
mov
dec
out
in
push
mov
jl
push
cmp
loopne
loop
jo
cmp
mov
mov
xchg
out
out
pop
push
aam
ja
cli
pop
dec
sbb
mov
or
lods
mov
in
movsb
mov
jns
pushf
leave
mov
mov
inc
mov
pop
movsb
movsl
fabs
push
imul
sub
inc
xchg
ds
stos
nop
jge
adc
xchg
loopne
adc
sub
sbbb
fwait
in
cs
repnz
movsl
mov
aaa
sbb
gs
loop
cmpps
dec
out
sub
dec
loope
adc
and
lcall
add
xchg
mov
aaa
sbb
ja
jle
mov
enter
push
mov
lea
lahf
or
add
ss
mov
push
mov
imul
sub
adc
or
les
das
fisubs
xchg
or
mov
and
fsts
jg
es
js
insb
rolb
repnz
pop
stc
out
andb
push
inc
fs
add
adc
adc
scas
fs
movsb
bswap
push
sbb
in
xchg
mov
dec
mov
pop
es
xlat
push
outsb
adc
movsb
pop
stos
jl
and
xor
out
mov
ret
call
test
xchg
dec
pop
push
pextrw
dec
mov
push
adc
cmp
lret
fcomps
lock
popa
xchg
orb
inc
stos
cli
iret
mov
into
addr16
push
idivb
loop
mov
lret
test
pop
pop
dec
scas
pop
test
insb
xchg
push
xor
std
ds
xor
cmp
mov
in
mov
in
cmp
fistps
pop
out
and
cmpsb
xorb
xor
iret
inc
pop
mov
je
pop
ljmp
cmp
mov
inc
and
shrl
rolb
xorl
cmpsb
or
sub
iret
add
lret
sbb
into
insl
mov
dec
cmp
pop
aam
mov
dec
xchg
dec
fdivp
outsb
std
fsubl
pop
out
lods
mov
out
enter
sarl
xor
aas
cli
out
jp
jl
pop
add
add
cmp
cmp
aam
pop
daa
jle
mov
cmp
adc
cmpsb
out
ds
pop
mov
jae
mov
xchg
sbb
push
dec
sub
push
call
adc
pop
movsb
cmp
dec
or
inc
mov
js
leave
scas
cmp
int3
sub
fldenv
call
ja
lret
das
mov
xchg
les
dec
addr16
dec
scas
push
insb
dec
inc
xchg
inc
pop
add
fdivrp
pop
sbb
andl
test
ja
pop
or
push
out
mov
das
cltd
pusha
jne
aad
xor
pop
jge
mov
inc
out
or
add
shll
lods
aam
out
outsb
xor
sub
add
faddl
mov
mov
and
stc
jo
sub
insl
and
in
std
pop
add
and
adc
xor
adc
sahf
sbb
movsl
enter
push
xchg
out
je
xchg
ja
mov
or
sub
cld
loop
sub
push
add
mov
addr16
sbb
cmp
out
sbb
insb
jno
pop
sbb
dec
in
jmp
sahf
and
insl
daa
sbb
xchg
scas
jecxz
test
stos
rcl
cmp
cli
lret
mov
push
fsubs
movsl
pop
pop
cmp
push
jge
push
jno
outsl
cs
add
cmp
cmpsb
adc
dec
inc
lea
mov
daa
adc
xor
sarb
fsubp
and
leave
jl
fmuls
shl
cmp
jns
test
push
pop
pop
cmp
loop
sbb
fbstp
enter
rorl
icebp
pushf
scas
mov
dec
inc
fs
repnz
push
mov
sahf
jecxz
cmpsb
lahf
and
lods
sahf
call
pop
and
cmc
sub
dec
stc
add
addr16
and
out
mov
sbb
jle
add
mov
dec
push
js
add
popa
cmp
lods
leave
mov
inc
and
mov
jmp
xor
jmp
dec
fbld
insb
mov
xchg
push
jg
adc
in
mov
dec
pusha
jno
push
inc
add
pop
cs
std
mov
lahf
pop
sub
dec
es
pop
shlb
xor
pop
arpl
mov
inc
shll
mov
lods
mov
pop
push
cmp
idivb
or
jnp
push
fdivrs
xchg
sub
je
loope
aad
xor
popf
jb
fxtract
xchg
or
inc
cmpsb
jle
jmp
test
xor
out
movsl
repz
ljmp
add
addr16
push
sbb
mov
fistps
adc
imul
sti
cmp
mov
and
cli
stc
das
dec
into
xchg
mov
push
ds
push
cltd
pop
inc
inc
test
rorl
push
inc
imul
scas
mov
pop
jnp
inc
jbe
scas
cwtl
xchg
cmp
push
fnstenv
in
push
jns
es
call
scas
and
ret
inc
xor
mov
ret
call
cmp
xor
std
adc
xchg
imul
ljmp
icebp
lds
out
pop
in
lret
leave
or
adc
dec
int
iret
rcrb
or
jae
out
mov
mov
mov
cmc
sub
jecxz
mov
xchg
sub
xchg
in
sub
xchg
jns
jle
jne
sbb
arpl
iret
stos
shll
aaa
xchg
jle
out
es
add
mov
push
mov
insb
daa
aas
lds
or
xchg
pop
xchg
andl
jae
rolb
mov
popf
out
repnz
inc
js
jno
xchg
or
mov
aas
push
xchg
xor
imul
inc
in
add
lea
pop
fimull
xchg
add
xor
fcoml
push
fs
adc
popf
jecxz
mov
popa
ja
and
xchg
loope
adc
sbb
mov
sbb
repz
mov
dec
addl
in
std
aas
loope
test
insl
shl
mov
mov
mov
lea
jbe
inc
aas
mov
ret
out
or
pop
cmp
pusha
stos
jno
sbb
lods
inc
movsl
insb
jnp
out
and
or
mov
jle
add
out
daa
xchg
sub
mov
and
jmp
ficoms
das
jl
leave
in
cmp
lods
xchg
mov
push
mov
sub
and
negb
ret
popa
fstps
push
ror
xchg
mov
pop
mov
sub
pop
insl
mov
out
into
shll
add
aas
adc
sub
xor
into
and
cmp
add
mov
sbb
mov
jg
fildll
cld
mov
fldt
mov
sbb
dec
aaa
mov
sub
and
lahf
sbb
or
or
xchg
in
imul
shrl
in
adc
adc
mov
sbb
aaa
dec
sbb
das
sub
sub
pop
add
shlb
mov
out
cwtl
loop
test
dec
pusha
mov
pop
insl
test
pop
xor
dec
dec
sub
ljmp
add
or
add
dec
ret
mov
sub
in
mov
data16
bound
mov
outsl
imul
mov
mov
adc
xchg
roll
mov
dec
jmp
mov
adc
call
dec
jmp
lret
daa
xchg
sar
cmp
xchg
and
jg
iret
int3
adc
fsub
mov
push
je
add
popf
dec
fimuls
pop
hlt
ret
out
and
adc
les
lret
adc
dec
add
lock
or
les
jg
sbb
xchg
ss
movsb
and
add
rolb
scas
in
aad
mov
fstpl
jnp
mov
addr16
lcall
arpl
movsl
xlat
fs
and
sbb
das
jp
inc
addr16
push
and
xchg
add
popa
testl
mov
adc
sub
test
xorb
jo
xchg
sbb
mov
aad
or
mov
icebp
movsb
dec
xchg
subb
mov
cltd
repz
insb
orl
lods
pusha
cmp
mov
in
add
inc
daa
jno
es
subl
mov
jae
jno
fpatan
mov
xor
cmp
mov
pop
inc
insl
sbb
faddp
aas
inc
xor
dec
out
jge
mov
cmpsl
or
stos
fisubrl
cld
xchg
je
and
arpl
mov
add
mov
sbb
loop
or
fwait
in
cmp
push
cltd
lods
loopne
dec
pop
lret
sub
mov
fcmove
lret
dec
popf
imul
adc
dec
sahf
mov
sub
push
lea
lret
out
push
xchg
push
test
lahf
mov
dec
cmp
add
xor
rcl
in
leave
cmp
pop
test
inc
test
roll
inc
jmp
xor
cmp
les
std
cmpsb
bound
nop
lock
outsb
test
adc
jno
jecxz
xor
fwait
imul
fsubs
pushf
pop
iret
inc
leave
adc
pop
cmpsb
and
or
cmpsb
sub
push
xchg
cli
outsl
dec
jns
sahf
or
orb
jle
mov
push
and
adc
jb
jno
pushf
inc
mov
les
lock
ja
fwait
mov
js
cwtl
inc
xchg
mov
fldcw
jmp
repnz
adc
mov
adc
dec
lahf
push
cli
rcrl
ret
jb
shrb
sbb
out
lret
xor
fdivrs
add
or
ret
andb
pop
stos
call
int3
bound
imul
call
jge
and
insb
or
mov
mov
mov
push
sub
mov
adc
mov
int3
cmp
das
push
ficoml
sbb
out
sbb
outsl
outsl
in
inc
hlt
sub
es
or
cmc
or
ret
rorl
int
mov
jle,pn
xor
sbb
sti
shl
lods
jge
xchg
mov
jge
fwait
cmpsb
in
pop
mov
jecxz
sti
mov
inc
mov
jmp
jae
push
ficoms
sub
insl
frstor
rclb
jbe
inc
icebp
scas
pushf
rcrl
lret
sti
sub
sub
shrl
pop
psraw
xor
adc
sbb
xor
sub
inc
int
pop
jg
mov
pop
lret
inc
inc
scas
mov
insl
popf
xlat
inc
fists
rcrl
mov
inc
cltd
iret
sbb
loop
mov
std
sub
push
pop
orl
inc
ror
jmp
in
xchg
and
add
mov
jnp
popa
scas
loopne
js
adc
pop
mov
pop
insb
loop
fucom
jmp
push
clc
lret
out
dec
sub
lcall
sbb
cli
jae
add
popf
inc
mov
pop
std
inc
inc
add
mov
mov
mov
sbb
icebp
rcll
mov
bound
lret
jg
addl
clc
pop
pop
jg
sahf
lret
fldenv
pop
sbb
in
adc
mov
ja
push
stos
mov
mov
pop
pop
sti
jae
fsubrs
xchg
dec
adc
dec
push
adc
lret
sti
pop
sarb
jno
addr16
shll
fldenv
inc
mov
insb
stc
or
lods
xor
stos
mov
mov
ja
jg
jecxz
jle
jb
stc
add
sbb
ret
push
push
inc
aas
addb
dec
loope
xchg
insl
lcall
inc
push
inc
jbe
and
ret
mov
shlb
cmp
lret
mov
push
fwait
insb
pushf
movsl
out
dec
loope
mov
insl
dec
ljmp
popf
jecxz
cmpsl
xchg
inc
fdivrl
inc
mov
addr16
mov
jbe
dec
xlat
push
sahf
or
cmp
lret
cmp
subb
jl
and
and
xchg
add
pusha
call
lea
jp
push
cmp
into
loopne
mov
mov
push
mov
jnp
mov
xor
mov
cmp
xchg
xor
xchg
lock
sub
push
xchg
out
or
mov
sarb
and
imul
imul
ss
pop
sub
out
push
icebp
cmp
les
dec
adc
mov
dec
fdivp
rol
and
stos
cmp
xlat
sbb
dec
inc
pop
int
roll
loopne
jo
mov
xor
xor
das
mov
xchg
scas
data16
popf
xchg
and
in
mov
imul
hlt
xchg
jbe
xchg
adc
push
jb
push
ret
xchg
jne
imulb
push
and
and
leave
cmp
sbb
jp
bswap
pop
test
sahf
lock
ja
mov
xchg
add
pop
jne
mov
pusha
sub
or
sti
fnstenv
fwait
dec
jecxz
jge
fs
xor
movsl
das
inc
cmc
pop
push
jo
enter
arpl
faddl
xchg
data16
shr
imul
push
cltd
mov
add
rcrb
push
daa
jle
frstor
cltd
dec
popa
or
xor
push
std
mov
ljmp
mov
sbb
mov
cli
pop
adc
mov
mov
jmp
stc
shlb
adc
or
or
clc
std
dec
call
and
addb
in
xorl
mov
jnp
cmp
repz
adc
addr16
es
add
or
push
cmc
movsb
push
cmp
aas
int
xlat
sbb
cmpsb
sbb
pop
xor
mov
stos
pusha
xlat
push
loopne
pop
xor
xor
test
in
xor
cmp
or
mov
lret
test
in
sub
sbb
push
inc
aad
rorl
decb
mov
out
xor
mov
sbb
int3
outsl
push
movsb
mov
push
jns
lods
test
add
mov
inc
sub
orl
ret
sub
cmp
imul
adc
push
iret
pop
cmp
mov
aam
addb
and
insb
pop
xchg
fs
jb
out
xchg
sub
xchg
or
popf
jb
and
je
bound
in
loopne
jbe
xchg
cmp
mov
sahf
mov
sahf
fcmovnbe
mov
fldl
dec
iret
xor
jge
jmp
pop
inc
xchg
mov
add
ret
movsl
outsl
or
add
add
mov
mov
cmp
push
mov
stos
mov
sub
fyl2x
loope
into
mov
repnz
icebp
dec
push
cli
mov
test
or
cmp
ret
mov
in
add
jns
std
sub
mov
mov
in
adc
int3
pusha
aad
xlat
stc
test
sti
daa
aad
rcll
outsl
aad
add
jmp
js
fstpl
daa
add
push
mov
cli
dec
out
add
mov
mov
ror
jno
outsb
aad
or
and
mov
mov
call
jge
jle
add
scas
es
fdivl
insb
clc
push
sub
xchg
mov
test
cmp
xor
rclb
aaa
cmp
jno
xchg
out
into
stc
sbb
fwait
inc
lcall
pop
movsb
xor
xor
mov
mov
mov
cmova
xchg
adc
add
add
add
int3
sub
test
mov
shrb
frstor
cmp
arpl
fnstenv
lahf
sbb
in
andb
enter
pop
xor
cmp
and
mov
repz
mov
stos
test
jg
mov
jg
and
xchg
jnp
pusha
movsl
out
dec
lret
cmpsl
shll
add
testl
aam
add
pushf
xchg
or
mov
aam
mov
aaa
xchg
iret
adc
push
out
sbb
mov
ds
repnz
push
ljmp
jecxz
mov
call
popf
outsb
movsb
shr
mov
jle
inc
scas
shll
push
in
daa
sub
jg
aas
add
mov
or
jl
pusha
sub
popf
sub
xchg
test
inc
cs
ffree
sub
popf
push
cltd
cmp
jne
jns
in
mov
fnstcw
std
jb
popf
scas
rol
sbb
xchg
scas
dec
imul
pusha
cwtl
push
mov
out
push
iret
stos
sahf
ljmp
adc
xchg
add
adc
mov
cli
mov
inc
adc
cmp
xchg
jge
and
adc
scas
jg
test
addr16
repz
movsb
loopne
aas
adc
xor
push
loope
dec
pop
cmpl
xchg
sub
neg
or
adc
ret
les
mov
loop
or
aaa
ror
mov
inc
xor
xor
ja
loop
push
inc
jmp
repnz
shll
fnstsw
rcll
cmp
push
dec
iret
outsl
and
adc
gs
es
sahf
leave
inc
das
es
xchg
sahf
cmc
jb
xchg
pushl
adc
cli
or
add
int
jae
daa
or
or
jp
int
inc
sub
test
and
push
shrb
jnp
pop
mov
movsl
js
push
loop
jmp
sbbb
push
adc
aad
mov
jge
int3
sti
mov
dec
sub
fwait
stc
xchg
cltd
adc
pop
decl
inc
mov
cwtl
push
push
fisttps
adc
sub
jmp
jmp
std
outsb
xor
push
push
push
lock
cmpsb
in
in
stc
mov
mov
repz
stc
cli
lahf
dec
movsl
pop
xchg
sti
and
outsl
mov
xchg
or
or
xor
insl
sahf
and
fdiv
cmp
insl
inc
aam
mov
insb
or
pusha
test
dec
icebp
mov
rorl
xor
mov
and
adc
lods
push
cld
jecxz
loopne
loopne
or
imul
idiv
add
pop
mov
rolb
outsb
jae
xor
jbe
out
lahf
xor
iret
adc
push
cs
sbb
daa
lea
jmp
fisttpl
pop
mov
pop
mov
rclb
xchg
push
adc
in
out
jo
fiaddl
int
adc
jb
popa
adc
mov
add
mov
in
loope
pop
push
loope
and
outsb
pop
clc
cmpsl
cwtl
in
movsl
je
in
lods
xchg
xchg
push
lods
jae
call
repnz
clts
fildl
and
pop
je
jmp
ret
hlt
cmp
sbb
sti
mov
cmpsb
dec
xor
jg
jmp
enter
mov
jae
shlb
mov
imul
adc
hlt
jns
cmpsl
aam
pop
lods
nop
int3
lods
aaa
pop
in
dec
addl
pop
or
cld
jbe
mov
shrb
xor
push
sti
or
or
mov
jo
mov
sbb
push
loop
adc
sub
sbb
sub
mov
xor
add
hlt
cmp
xlat
pushf
call
push
dec
and
out
jp
addl
pusha
je
adc
std
adc
in
mov
push
cmp
outsl
push
inc
sbb
lods
pop
mov
frstor
aad
inc
fldt
cmp
cmp
dec
mov
pushf
insl
sbb
push
xchg
jne
add
movsl
enter
sbb
pop
out
adc
dec
in
sahf
sbb
cmpsb
xor
out
aas
pop
in
repnz
xchg
pop
or
testb
packuswb
ja
cmp
jnp
mov
imul
fstpt
cmp
pop
dec
mov
pop
and
xor
imul
xor
jns
loopne
sub
int3
repnz
filds
dec
xorb
mov
int
push
das
or
inc
pop
add
xchg
fnstsw
icebp
inc
push
xor
push
pop
mov
int3
imul
and
xor
mov
xor
dec
pop
in
pop
or
inc
cltd
push
jae
jle
inc
enter
aas
out
adc
cmpsl
movsl
loopne
mov
xor
mov
xor
orps
pop
in
mov
push
adc
lahf
and
adc
mov
in
sub
fistpl
or
add
mov
push
cmp
cmp
repnz
outsl
repnz
call
pop
jmp
aas
sahf
rcll
inc
pop
jbe
add
insl
sub
fsubrs
mov
std
stc
test
lds
shl
test
cmpl
rcll
aaa
cld
test
iret
mov
or
xchg
and
in
lods
dec
loopne
inc
xlat
jle
push
mov
mov
or
push
mov
js
push
mov
inc
cmpl
in
call
push
push
psrlq
pop
xor
xchg
and
xor
nop
xlat
insl
orb
daa
mov
adc
in
add
jle,pn
lods
sub
sub
add
xor
mov
aam
or
mov
les
mov
scas
jns
push
push
xchg
pop
lahf
jmp
rcrb
and
test
cmp
fsub
cmp
lret
cmp
ret
mov
dec
cld
xchg
adc
inc
mov
in
and
hlt
arpl
push
fsts
dec
jle
int
jns
fs
adc
sbb
fdivs
sub
arpl
adc
mov
fwait
jp
fiaddl
cmpsb
cli
push
insb
sahf
add
popa
mov
or
int3
push
adc
inc
sbb
shlb
into
inc
cmp
xchg
mov
push
and
out
add
or
mov
mov
call
addr16
movsb
or
cmpsb
ret
xor
lcall
movsl
ljmp
out
fcomps
jp
mov
ds
push
fwait
adc
ds
pop
push
adc
stos
mov
divl
jmp
add
and
shlb
push
sub
push
and
dec
sbb
xchg
aas
mov
mov
xor
cs
or
sub
outsl
cmp
loope
cmp
xor
insb
hlt
iret
out
push
incl
test
dec
pop
xchg
sti
enter
pop
dec
stc
jbe
push
push
pop
mov
dec
sub
adc
push
scas
sbb
decl
popf
xor
test
call
loope
stos
aad
inc
je
jmp
sti
sbb
pop
cmp
mov
lret
sti
pop
dec
jecxz
mov
jmp
shll
or
xchg
sub
mov
int
cld
push
cmp
add
mov
les
or
testb
push
int
fsubs
ret
sahf
cmp
sub
sbb
int
stc
loope
out
jg
aas
jp
lea
dec
iret
fwait
mov
call
outsb
adc
xchg
fcoml
mov
shrb
jae
clc
mov
test
fwait
cmp
cs
movsl
push
pop
and
cwtl
mov
ret
jge
jmp
bound
mov
ss
fwait
ret
icebp
bound
mov
lahf
dec
les
or
nop
jmp
push
cli
and
mov
fs
movsb
aad
clc
mov
insb
cmp
jo
mov
mov
jg
push
xchg
cmpsl
call
xchg
testb
ret
jle
add
xchg
inc
ss
push
jp
mov
sbb
push
inc
adcb
or
push
push
out
xchg
adc
push
clc
mov
minps
mov
mov
sbb
pushf
out
inc
cmp
ljmp
sarl
add
imul
fmuls
or
loop
pop
ljmp
adc
add
adc
or
in
ja
ret
pop
pop
xchg
fisttpl
nop
out
jg
and
push
lret
repnz
push
or
popa
and
mov
add
mov
pop
mov
imul
cmpsl
dec
jmp
xchg
hlt
testb
mov
add
and
dec
xor
adc
cmp
or
xchg
test
cmp
imul
sbb
xchg
push
rcr
mov
jmp
dec
ja
in
or
test
shlb
rcr
xlat
cmp
xor
iret
rorl
or
lods
push
mov
jmp
jo
dec
xor
cmp
lods
pop
or
inc
push
fisubrs
cmp
sarb
xchg
cmp
dec
mov
pop
sub
lock
or
js
notl
es
daa
and
out
add
pop
repnz
int
hlt
cmp
lods
insl
mov
sub
pop
repz
pop
inc
daa
addr16
mov
cmpsl
jg
adc
loopne
andl
dec
cld
fistl
cmpsl
jecxz
in
sub
lret
dec
dec
leave
mov
jns
ds
cmp
or
out
pop
cmp
pusha
mov
std
popa
orl
jp
scas
clc
inc
sti
inc
stos
or
cmp
xchg
outsl
cmp
ja
dec
shlb
jle
and
out
mov
faddl
cmc
fisttpll
insb
cmc
cld
inc
test
xchg
sbb
add
test
mov
ss
punpcklbw
fistl
pop
and
fs
je
xor
outsl
jns
daa
mov
xchg
mov
dec
fcoms
sub
push
negb
sub
call
scas
ret
sub
mov
ror
pop
push
pusha
jp
jg
mov
sbb
add
mov
sbb
shll
lds
pop
je
ja
dec
ljmp
xchg
cmp
aam
arpl
or
xlat
add
sbb
sub
cmp
ljmpw
pop
jne
cmp
outsl
aad
add
sub
int3
mov
mov
fnstsw
pop
negl
cwtl
cmp
lods
mov
sarb
ja
or
adc
popf
dec
clc
and
inc
cltd
ja
pusha
mov
inc
jb
lock
test
xlat
push
push
lods
xchg
int3
fcomip
or
jae
pop
pop
add
iret
jge
bound
int
sub
fmul
dec
cmp
lcall
adc
arpl
cld
or
push
imulb
mov
dec
daa
add
lcall
mov
stos
jp
xchg
jge
xor
sbb
and
sbb
xor
arpl
test
bound
aad
imul
jge
sarl
call
mov
leave
push
sub
int3
ljmp
das
xchg
sarl
pop
lret
pop
mov
cmp
or
dec
cld
mov
sub
and
inc
sbb
mov
popf
or
xchg
xchg
jo
imul
xlat
jge
cli
lea
es
out
pop
sti
into
sarb
sbb
popf
mov
loopne
xchg
mov
lret
popa
fisttpl
push
pop
xchg
addb
xor
xchg
out
dec
daa
sarb
imul
cmp
adc
dec
in
mov
lahf
lea
dec
dec
mov
jns
xor
loop
jg
sbb
or
sbb
mov
mov
jae
push
mul
sbbb
outsl
aas
pop
repz
std
cmp
adc
jo
xor
imul
in
addr16
cs
test
cmp
dec
mov
xor
xor
in
popf
push
scas
enter
fwait
outsb
cmp
push
pop
xchg
sbbl
inc
fucomip
loop
dec
sti
dec
or
outsb
ficoms
jbe
jb
jnp
jb
insb
mov
loopne
mov
insb
xchg
lret
fs
push
addr16
inc
fstp
stos
je
sbb
sbb
sbb
pop
dec
xchg
pushl
and
bound
or
fsub
pop
out
shr
outsb
dec
add
dec
dec
add
je
call
push
aaa
mov
xchg
ljmp
movsb
xchg
or
gs
popf
or
rcr
jecxz
lods
mov
mov
movsb
sub
je
arpl
or
xchg
lds
shrb
std
mov
addr16
jp
in
popa
fs
pop
loopne
add
inc
or
cmp
jns
xor
jno
push
stos
inc
nop
mov
pop
xchg
mov
cs
cmp
scas
add
cwtl
cld
jmp
jbe
fistpl
ss
push
insl
mov
imul
sub
cltd
add
cmp
and
or
pop
lret
dec
adc
insb
sbb
sub
jmp
popa
xor
jne
pop
xor
adcb
fwait
pop
cmp
xor
arpl
mov
dec
rorl
aad
pop
sti
fwait
inc
mov
jge
cmp
lods
cmpsl
pop
inc
mov
mov
mov
pop
dec
mov
rcrl
xor
mov
jecxz
cmp
push
leave
lods
pop
subl
aad
dec
fwait
cmp
movsl
mov
push
stos
or
or
dec
mov
jge,pn
sbb
xchg
movsl
add
sub
aad
push
dec
add
fwait
dec
test
pop
dec
push
push
cmp
les
mov
sub
add
adc
out
stc
jmp
sbb
inc
xchg
aam
mov
fdivrp
inc
mov
adc
sub
leave
cld
ret
arpl
rcll
dec
adc
out
inc
mov
mov
scas
ljmp
cmp
in
in
call
or
xchg
add
cmpsb
sahf
or
add
jb
xor
test
sbb
push
dec
adc
xchg
sub
subl
mov
jecxz
std
imul
dec
leave
in
adc
mov
jbe
rolb
cli
dec
and
adc
in
ds
iret
idiv
out
push
nop
mov
cs
aas
subb
sbb
lahf
pushf
outsl
adc
enter
xchg
mov
in
adc
xchg
or
cmove
je
das
pop
sbb
das
mov
dec
inc
sti
jbe
cmp
test
xchg
inc
mov
mov
or
dec
in
loopnew
jmp
push
push
pop
xlat
movl
dec
sub
or
ja
push
xchg
mov
adc
cmp
rolb
xchg
lahf
lea
pop
cltd
ss
ljmp
cli
imul
lcall
in
push
pop
scas
mov
lock
pop
push
add
sub
inc
adc
repnz
mov
gs
mov
dec
gs
adc
out
ret
push
add
mov
jae
inc
shll
mov
or
push
stos
pop
test
push
pop
arpl
mov
mov
jp
outsb
es
pop
test
cmp
adc
inc
add
lds
dec
lahf
xchg
push
sahf
jne
jecxz
iret
adc
lcall
pop
das
xor
mov
dec
mov
cmp
mov
cs
out
test
xchg
sarb
shll
rorl
cmpsb
addr16
iret
leave
mov
push
dec
mov
pusha
mov
shlb
lcall
mov
xchg
jl
pop
pop
in
lahf
xchg
lcall
lds
push
aaa
mov
sub
inc
call
mov
dec
aas
ss
push
push
imul
test
pop
fdivrl
xchg
call
arpl
push
fwait
test
mov
and
and
inc
aaa
dec
inc
lods
xor
movsb
sub
push
xlat
pushl
iret
xor
mov
sub
mov
pusha
pop
pop
stc
adc
repnz
adc
xor
pushf
dec
push
ret
sub
fistpll
out
lods
sti
cwtl
pop
xor
or
sti
cmp
nop
xorl
int3
and
or
loop
jp
ret
mov
jno
out
mov
std
and
jg
pushf
fadd
cmp
cmpl
insl
dec
cli
call
pop
int
xlat
jle
xor
repz
and
sub
jne
push
imull
pop
jb
inc
mov
and
add
outsl
mov
fiadds
cmpsb
sbb
test
mov
lret
loopne
pop
or
add
pop
and
ja
dec
lahf
loop
mov
mov
icebp
addb
mov
repnz
mov
fldenv
xchg
cli
mov
or
jne
jmp
jmp
add
js
xor
xchg
fidivrs
fiadds
outsl
fsub
xchg
mov
in
mov
push
xor
xlat
negl
sti
cmp
jne
insb
pop
cmp
xlat
testl
mov
das
lahf
clc
mov
jp
lds
rclb
pop
adc
ret
out
jno
push
outsl
xor
mov
sarl
add
push
mov
sbb
sahf
cmc
insl
into
mov
sbb
lock
repnz
lds
dec
mov
je
stc
dec
insl
rclb
lods
mov
fiaddl
or
adcb
inc
pop
adc
and
pop
xor
pop
dec
mov
test
pop
push
sub
lahf
mov
sbb
mov
cli
xlat
pop
ljmp
out
das
add
std
add
inc
movsb
inc
out
pop
cmp
xor
or
ret
stc
jno
adc
jg,pt
push
mov
adc
mov
js
cld
test
ret
mov
je
xchg
dec
lds
aas
pop
dec
pop
leave
std
cmpsb
movsl
jae
push
ret
lahf
cmp
add
jl
jecxz
mov
aaa
call
outsb
lcall
jnp
cli
std
aad
jle
sub
movsb
sub
or
imul
fidivl
pop
or
cwtl
lods
insb
cli
xchg
push
ret
and
adcb
roll
dec
insl
cltd
pushf
loopne
shll
dec
loopne
subb
push
add
pop
xchg
xor
inc
sbb
jmp
inc
inc
sub
das
testb
mov
daa
in
fwait
mov
cld
fsub
cmpsb
aad
movsl
rcll
jp
mov
push
scas
push
int
loop
adc
inc
cwtl
sub
out
outsl
out
cmp
and
lret
pop
add
and
jae
popf
xchg
pop
xor
adc
mov
into
jle
dec
lahf
inc
loop
cmc
fstl
stc
loope
shlb
sar
insl
add
add
sub
mov
jne
mov
fdivl
add
pusha
int
lret
stc
fists
in
repz
lahf
fisttpl
xchg
mov
cmp
push
adc
push
dec
and
or
aad
push
pop
xchg
mov
fmull
popf
fstps
lea
std
clc
or
and
jle
popa
push
dec
insb
or
pushf
fisttps
push
out
xor
int
and
ja
dec
pop
adc
dec
xchg
mov
data16
bound
mov
mov
call
add
loop
mov
jbe,pn
adc
sub
xchg
and
inc
mov
and
mov
cmp
inc
cmc
out
jae
jno
fcoml
not
and
std
pushf
jge
mov
add
dec
lret
pop
push
add
push
adc
fmull
and
lret
sbb
xchg
int3
cmc
mov
lcall
pop
jne
or
ja
scas
and
das
and
vandps
push
sub
pop
dec
int3
mov
out
dec
dec
ss
xor
or
mov
out
mov
orl
or
jne
das
cmc
jge
imul
fiaddl
add
push
jg
push
jle
pop
jl
push
push
jecxz
inc
sub
adc
lahf
leave
cmc
fiadds
test
test
call
xchg
nop
xchg
xor
xor
sbb
sbb
jecxz
mov
jae
adc
adc
test
andps
rorb
pop
outsl
cld
sti
jbe
lock
ss
inc
jmp
sbb
jle
lcall
pop
ret
or
enter
pop
leave
fstpl
push
into
dec
cmp
sbb
mov
outsb
and
lcall
lea
pop
xlat
outsl
cwtl
sub
cmp
cli
inc
je
fstp
call
lret
sahf
mov
push
pop
mov
je
mov
and
sub
or
sub
xchg
inc
sub
jg
or
in
scas
push
xchg
int3
jo
pop
inc
roll
dec
test
and
outsb
xchg
loop
je
jnp
pop
loope
push
sahf
push
mov
push
dec
cltd
sbb
pop
scas
sbb
test
dec
or
imul
nop
sub
inc
cmp
lret
ret
cld
and
ljmp
repz
cmc
shl
sbb
rol
in
shlb
das
mov
or
jno
cmp
cmp
jb
inc
std
ss
loope
test
lret
scas
lea
lcall
sbb
push
mov
stos
dec
addr16
repz
icebp
cltd
sub
out
or
and
dec
adc
out
fs
iret
lods
aas
pop
lahf
xlat
fbld
cmp
or
int
inc
loopne
repz
cmpsb
xchg
notl
dec
mov
es
fldt
mov
stos
or
jno
aad
adc
shrl
cwtl
or
movsb
mov
repnz
das
add
lret
std
movsl
loopne
dec
xor
outsb
pop
leave
or
sbb
pop
ljmp
dec
and
add
mov
pushw
test
jg
lahf
adc
xlat
cld
cs
cld
enter
inc
mov
jb
adc
push
inc
push
loope
call
add
ficompl
movsb
sbb
das
lahf
addr16
es
arpl
xchg
notl
pop
lcall
orb
and
dec
inc
pop
aam
add
pop
test
pusha
jae
xchg
pusha
xor
hlt
push
leave
mov
mov
repnz
sbb
leave
mov
fnstenv
add
data16
leave
mov
push
jle
hlt
sub
std
es
sbb
sbb
fwait
out
jge
mov
adc
dec
aam
enter
arpl
lock
mov
inc
push
sbb
loope
mov
lcall
lcall
cld
xchg
mov
xor
jmp
pop
lret
std
test
scas
rolb
xchg
cwtl
sahf
jecxz
in
dec
lcall
lock
out
mov
dec
or
ret
subl
lret
mov
or
sbb
adc
cld
and
fst
lds
cmpb
push
fmuls
leave
daa
faddl
xchg
insb
mov
sahf
push
daa
mov
adc
xchg
and
jne
in
sbb
pop
push
mov
cs
mov
sbb
pop
cli
mov
sub
cli
ss
scas
insb
jno
imul
dec
jo
xchg
int3
aad
ljmp
dec
push
movsl
and
and
jmp
mov
and
insl
jb
mov
in
xchg
out
inc
clc
cltd
js
divl
test
imul
ds
fisttps
add
fwait
in
pushf
inc
ffreep
loopne
leave
add
out
cmp
dec
lods
jae
sbb
sub
nop
int
sbb
cmp
int
aad
dec
loopne
mov
cwtl
jmp
insb
call
xor
sahf
xchg
jmp
jge
nop
mov
gs
in
cmp
shll
mov
outsb
or
in
pop
sbb
cltd
or
mov
les
loop
loope
jmp
sti
pop
xor
mov
frstor
sbb
int3
xchg
jno
mov
lds
test
dec
sar
inc
or
loopne
addb
jl
or
dec
xlat
call
adc
inc
jg
adc
mov
xchg
les
out
mov
mov
xor
sbb
div
stc
and
rclb
lods
and
cmpsl
pop
push
pop
cmp
dec
sub
shl
add
and
xchg
xor
dec
movsb
dec
je
push
loope
push
xchg
mov
jo
jne
add
xor
adc
scas
fidivrl
xchg
inc
pusha
and
loop
add
ja
into
mov
cmc
in
adc
sub
add
xchg
fistpl
mov
inc
jg
sbb
adc
cmpsb
cwtl
in
adc
cmp
or
jg
outsl
pop
adc
aad
xor
xor
stos
lods
in
scas
cmp
sbb
and
lods
lock
leave
jmp
fdiv
call
sti
mov
repz
rcrb
and
fcomps
jp
mov
xchg
mov
dec
fs
push
add
ficomps
add
mov
pop
add
ss
and
lods
pusha
or
lods
bound
or
mov
lea
movsl
sbb
ffree
pop
lods
push
push
or
inc
sub
inc
movsl
dec
push
adc
or
ja
decb
fidivrs
les
push
fs
pushf
mov
mov
sub
jecxz
mov
inc
mov
cmp
rcl
ss
movsb
dec
incb
cs
in
push
insb
dec
adc
not
sbb
jecxz
movl
xlat
lds
jnp
mov
xchg
or
ret
test
sbb
sbb
out
lcall
mov
jl
xor
mov
pop
sub
dec
int
aaa
dec
sbb
ja
push
ljmp
mov
movsb
pop
arpl
pop
test
cmp
and
in
scas
cmp
outsl
cmp
pop
mov
mov
jp
inc
cltd
add
push
jl
sbb
lock
cmc
in
imul
xchg
je,pt
sahf
in
add
call
inc
push
or
bound
imul
shlb
cmp
call
inc
jle
out
xchg
or
and
sub
jno
aaa
inc
fnstsw
imul
popa
mov
repz
and
xchg
dec
das
sub
ss
shll
movsb
lods
lock
pop
bound
xchg
ret
inc
mov
std
sti
add
daa
cmp
push
ss
js
icebp
mov
xchg
ret
cmpsb
sbb
xchg
cwtl
dec
dec
sbb
or
ror
lds
aam
and
add
fcmovne
add
js
call
jecxz
dec
xchg
cmc
ds
shrb
jo
adc
out
mov
xor
mov
test
add
scas
cmp
daa
jmp
ret
mov
sbb
push
and
mov
push
leave
dec
lds
ret
stos
dec
ret
xor
fdivs
mov
bnd
aaa
aaa
dec
aaa
sbb
lahf
loope
fs
jp
adc
push
push
xchg
mov
jl
sbb
in
sarb
test
push
sub
lahf
int3
pop
arpl
push
dec
jae
es
in
jge
clc
pop
in
add
or
clc
push
out
push
loopne
and
push
xor
push
cltd
mov
jne
fisubs
nop
jp
cmpsl
lret
dec
xchg
jmp
movaps
mov
subb
mov
mov
addr16
mov
inc
test
fdivl
test
xchg
repnz
fs
stos
or
cmp
cltd
je
ret
pop
xchg
pop
or
sbb
cmp
stos
les
push
mov
inc
mov
jg
mov
jnp
orps
das
jp
push
sub
xor
mov
arpl
mov
inc
lahf
clc
add
and
mov
push
andb
cmp
push
movsb
xchg
mov
mov
into
adc
cmpsl
stc
inc
ret
fildll
add
mov
pop
sbb
cmp
xor
ret
cmp
inc
fcomi
in
push
push
fadd
sub
out
mov
arpl
push
jg
inc
push
xor
outsl
pop
jecxz
sub
lods
mov
fisttpl
ss
cmp
dec
push
shll
sbb
out
aas
inc
cmpsl
mov
repnz
fsincos
and
jmp
jnp
and
shll
or
xchg
xor
sbb
and
sti
or
mov
out
faddl
xchg
out
enter
fildll
stc
push
fisttpll
bound
push
add
hlt
xchg
shrb
test
mov
leave
add
add
iret
aaa
pushf
test
repz
pop
int
movsb
imull
pop
xor
imul
aaa
xchg
repnz
sub
xchg
and
or
jg
ljmp
dec
std
and
aad
jl
push
mov
inc
mov
mov
dec
mov
test
loop
jae
or
stc
mov
sbb
xor
fwait
aaa
jb
lock
inc
mov
or
mov
and
cmpsl
dec
mov
sarb
movsb
dec
push
in
aas
fisttpl
ficompl
push
bound
lea
lods
rolb
cmp
shr
push
fisttpl
lcall
shr
mov
notb
mov
pop
jo
push
adc
insb
or
or
sbb
je
rclb
mov
mov
sti
int
cmpsl
cmp
loopne
add
sahf
lds
sbb
add
shlb
sub
xor
add
jb
and
mov
xor
cmp
into
out
or
inc
in
out
mov
subl
pop
push
cmp
push
mov
add
xchg
adc
mov
ja
cmp
jbe
mov
int3
hlt
sbb
and
ljmp
stc
jl
das
into
xchg
cli
add
dec
pop
mov
cmpsl
lcall
push
push
ficoms
mov
sub
imul
mov
call
cli
dec
or
test
pop
push
push
and
or
dec
mov
subb
mov
scas
and
gs
push
push
test
push
in
into
inc
sahf
loopne
fdiv
pop
call
daa
imul
add
test
cmpsb
ja
imul
cmp
add
add
cmp
xchg
sbb
jp
push
add
dec
add
pop
mov
idiv
or
or
aas
sbb
or
popa
jne
xorb
in
shll
add
pop
mov
aad
movsl
xchg
xchg
ret
and
sbb
xchg
jmp
nop
jnp
cmp
out
fidivs
es
fldt
aam
leave
or
lar
insl
jbe
jg
fdiv
sub
std
outsl
test
pop
faddl
xchg
mov
add
sbb
test
mov
test
notb
dec
jo
cld
xchg
in
cmp
lods
jne
movsb
cmp
push
cmp
inc
or
out
jne
inc
std
jmp
aad
imull
sbb
inc
inc
or
sub
and
mov
insb
dec
inc
rcl
jge
or
outsb
xchg
add
add
in
lea
fwait
shld
enter
sub
mov
pop
cmpsl
test
ds
sbb
push
fimuls
fs
insl
push
push
repnz
aam
add
jle
loopne
js
push
fildll
jl
mov
lds
lret
pop
je
aas
mov
push
cmp
adc
and
iret
movsl
dec
mov
jnp
mov
call
dec
into
ds
jno
call
cld
add
mov
enter
adc
jne
loope
add
cmp
ficomps
sbb
aam
js
stos
or
or
fistpll
test
and
insb
imul
sub
mov
or
sub
test
adc
xchg
into
outsb
ja
push
jmp
insl
cmp
push
or
in
pcmpgtd
and
jbe
sbb
xlat
popl
mov
aaa
mov
in
sbb
ja
icebp
pop
sbb
add
sbb
leave
scas
dec
fstl
sub
in
inc
ja
icebp
ret
movsb
and
mov
inc
lods
jle
lahf
inc
jns
jecxz
and
cmp
sub
pop
xor
jno
out
pop
pop
pop
jae
test
cltd
inc
or
add
popf
adc
sahf
adc
insl
aam
pop
aad
pop
jne
pop
lock
lock
push
xchg
cmpb
ds
add
cltd
pop
add
mov
mov
repz
xchg
std
push
call
inc
mov
mov
pop
dec
or
scas
pop
stc
test
push
add
or
pop
stos
aad
sahf
push
cmpsb
imul
add
dec
push
mov
in
mov
sub
aas
jnp
arpl
sarl
in
jmp
dec
adc
jo
mov
mov
inc
subb
shlb
lret
jp
aad
nop
sub
push
jae
lea
enter
sti
jecxz,pn
jmp
in
imul
cmc
popf
pushf
lret
mov
pop
dec
mov
lock
add
in
xchg
in
and
in
or
xor
cmp
xchg
call
push
sub
inc
out
sbb
xchg
subl
ja
int3
out
in
adc
mov
dec
cltd
adc
and
xor
ss
popa
push
push
dec
hlt
icebp
mov
scas
xor
in
and
cmp
push
inc
adc
jo
shll
mov
rol
mov
aas
jo
pop
pop
jns
loop
les
notb
xchg
fidivrl
jb
sub
cmp
sub
cmc
fs
mov
outsb
xchg
push
shlb
lods
std
mov
xchg
fdivrl
or
ror
jb
lea
call
inc
cltd
insl
xchg
sub
mov
mov
cmp
inc
xor
mov
cmp
scas
cmp
insb
xchg
adc
test
jp
ja
cmp
mov
mov
nop
inc
in
jnp
sbb
jbe
mov
xor
xchg
sti
adc
mov
movsb
xorl
inc
sbb
es
dec
int
adcb
outsl
int
sti
lcall
cmp
and
mov
inc
lock
push
mov
pop
cmp
je
sarb
cmc
jl
mov
xlat
imull
inc
fs
xor
loopne
adc
ret
inc
add
push
in
mov
push
pop
repnz
shr
shrl
cld
call
mov
fwait
cmp
gs
ds
mov
sub
lret
mov
mov
arpl
enter
in
xlat
xchg
xchg
lock
imul
inc
cmpsb
add
popa
xlat
adc
std
fmull
lock
mov
aam
hlt
lods
cs
fwait
inc
int3
js
sub
mov
lea
in
and
outsb
jge
out
ret
movsb
out
lcall
cmp
lret
sahf
jmp
roll
dec
cltd
lock
sahf
pusha
sub
push
push
cmp
fsubl
adc
mov
pop
pop
gs
rorl
sbb
inc
insb
cmpsb
cmp
dec
test
or
das
pop
cmpb
fwait
int3
cld
enter
dec
popf
push
cli
movsl
jno
aam
pop
sub
mov
loope
in
and
or
and
push
shlb
mov
std
or
test
jnp
inc
sbb
rolb
fnstenv
sbb
and
stos
dec
sub
divb
mov
mov
lcall
ret
mov
imul
notb
dec
or
add
adc
fisttpl
xor
cmp
mov
sbb
addr16
shll
stos
xor
ja
pop
xor
test
out
and
mov
and
mov
xchg
add
in
mov
xor
add
adc
inc
push
pop
outsb
pop
aas
or
dec
andps
mov
outsb
jp
mov
popa
mov
dec
sbb
mov
mov
stc
int3
jb
mov
test
mov
cmp
imul
insl
fstpt
dec
fimull
sub
ds
aas
popa
or
xchg
xchg
push
push
sub
jno
add
and
jne
std
jge
cmp
lea
sub
jno
inc
lds
cwtl
jp
cli
dec
fbstp
shll
dec
lret
imul
enter
add
fidivrl
std
ja
test
mov
aad
popa
inc
test
test
in
lock
push
add
jo
mov
rcrl
ss
push
xor
out
mov
repnz
rcrw
daa
mov
sbb
movsb
inc
insb
int
pusha
daa
outsl
leave
mov
ss
xchg
dec
inc
insb
test
sbb
dec
pop
sub
mov
push
jmp
dec
and
or
out
sbb
es
scas
fdivrl
data16
fwait
jae
ret
pusha
sub
stos
pop
pop
out
stc
and
imul
nop
mov
gs
xchg
int
fs
jecxz
lahf
xorl
xchg
mov
xchg
mov
push
lods
push
rorb
nop
mov
not
push
clc
dec
xlat
cmc
stc
mov
cmc
dec
sbb
stos
out
mov
lret
aas
push
or
leave
enter
loop
push
dec
dec
adc
xor
outsb
xchg
jge
or
push
ds
mov
lods
xor
movsb
sbb
enter
push
add
ret
stc
mov
adc
xlat
or
push
and
sub
aas
imul
notb
out
fists
rclb
das
js
enter
cltd
outsl
dec
nop
xchg
out
mov
lret
ja
test
in
and
out
fcmovu
outsb
inc
bound
xorl
mov
mov
sub
fwait
sbbl
add
outsb
arpl
or
or
push
cmp
fistl
adc
test
xor
loope
lods
ds
mov
mov
add
lcall
sub
daa
shr
stc
pop
push
jb
je
cwtl
cmp
outsb
clc
sahf
mov
insb
and
call
jmp
add
subl
shl
xchg
push
ss
scas
mov
inc
sahf
sub
sub
out
enter
scas
jae
call
aam
arpl
xchg
cmp
je
stos
add
out
pop
sbb
xchg
cmc
xchg
push
xchg
xor
jae
xorb
fcompl
jno
shl
xchg
fldenv
std
add
mov
loopne
sub
push
ja
adc
sbb
mov
hlt
movsl
jne
mov
jnp
aas
mov
sbb
fiaddl
cmp
jbe
pusha
jl
adc
sahf
sarl
xchg
mov
stos
jle
lds
or
sub
mov
add
sub
inc
lods
mov
in
sbb
mov
insl
mov
test
xor
notl
adc
mov
dec
ret
das
rclb
push
rorb
movsb
inc
jo
jb
mov
daa
cmc
dec
adc
inc
cmc
jo
hlt
fs
dec
addl
mov
shl
adc
enter
bound
jns
incb
insl
jle
into
lds
cmc
xlat
testb
test
fcoml
jl
or
je
movsb
cmp
push
pop
mov
adc
js
dec
mov
ret
mov
sar
aas
jnp
mov
fdecstp
push
mov
leave
push
and
and
lret
mov
je
pop
dec
fdivs
lret
in
xchg
jmp
sub
xchg
dec
jecxz
mull
sbb
pop
xchg
lods
xchg
jo
loopne
ret
mov
cltd
adc
loope
jb
xchg
fmull
cmp
into
lods
mov
les
cmpb
sbbl
stc
and
jp
fstpt
aaa
and
aam
cli
mov
dec
or
cld
mov
dec
insb
xor
fisubl
mov
loope
and
xor
mov
mov
outsb
aaa
sub
rol
in
or
stos
mov
loop
int3
repnz
lcall
idivb
into
rorb
loop
add
jae
movsl
popf
dec
ja
cmpl
xchg
xchg
add
jne
ror
leave
mov
adc
js
jmp
dec
test
xchg
in
fsubl
shll
add
cmp
lea
jo
pop
loope
daa
cmpsb
add
xchg
xor
mov
mov
jb
mov
push
pop
fstpl
push
ficomps
cmp
sbb
ja
push
xor
jb
sub
in
cld
xlat
in
cmp
mov
pop
sbb
popa
mov
sahf
lods
sbb
xchg
mov
dec
push
mov
andb
fnstcw
inc
push
inc
add
fcmovnb
cltd
mov
mov
sbb
shll
sbb
add
pop
xlat
lahf
cmc
ret
popf
inc
sub
inc
hlt
fwait
leave
ja
xchg
paddsb
or
mov
push
movsl
adc
mov
addr16
test
pop
out
jne
cwtl
cltd
xor
test
or
push
ret
fildll
mov
repz
ret
mov
stos
adc
mov
lret
mov
lods
rorb
and
adc
add
mov
push
cwtl
jno
lcall
dec
fimuls
pop
rcll
loopne
mov
outsb
sub
cmp
imull
popa
mov
cmp
pusha
std
adc
adc
push
cs
rcrl
push
incl
fwait
std
add
fidivrl
mov
scas
adc
xchg
imul
sbb
jp
xchg
cwtl
sbb
sbb
push
cli
addr16
push
lret
jp
and
push
pop
cmp
pop
sub
daa
sub
mov
mov
sub
mov
adc
ds
cmc
rorl
in
inc
mov
add
cmp
cs
rclb
call
mov
daa
dec
sbbb
push
mov
in
jmp
pop
into
pushf
shll
lods
and
addr16
xchg
ss
les
out
dec
int3
aad
add
shl
adc
mov
mov
push
mov
fs
jg
sbb
push
mov
adc
cmp
jle
sti
mov
push
inc
pop
lods
fldcw
ret
sub
iret
mov
inc
ret
add
or
adc
xchg
movsb
push
xchg
xchg
lock
pop
mov
push
lock
push
mov
xchg
xchg
mov
iret
pop
add
lret
stos
clc
ds
repnz
fsubrl
popa
mov
out
jnp
mov
xchg
pop
pop
and
popa
rorb
add
nop
fdiv
cltd
add
push
cmp
orb
inc
lock
notb
movsb
lods
sbb
pusha
xor
mov
and
out
inc
clc
jge
add
jbe
inc
mov
test
sub
jge
dec
cwtl
call
clc
mov
pop
pop
enter
and
and
mov
cmp
imul
jae
movsl
ret
jg
push
mov
dec
mov
int3
or
dec
fwait
test
sbbb
testb
lret
cmpb
inc
lods
lahf
jl
cmp
xlat
xchg
int3
popa
pop
rol
scas
adc
adc
cmp
dec
jbe
push
fimull
mov
sub
das
movsb
add
mov
and
movsb
mov
ret
xor
mov
in
mov
lock
adc
cltd
mov
or
pop
out
ljmp
sbb
inc
shll
ss
jp
mov
mov
xchg
and
lret
xchg
cmpsl
movsb
sbb
cltd
mov
xchg
sub
inc
push
es
adc
into
cwtl
mov
lahf
das
call
mov
push
xor
rolb
push
jne
push
or
mov
jmp
add
cltd
or
mov
mov
sbbb
fistps
stos
movl
push
inc
lods
jmp
or
sub
xor
jae
xlat
shrl
repz
mov
lret
fstp
dec
mov
pop
cmp
inc
pushl
adc
aad
inc
sub
out
sbb
sub
pop
mov
push
jns
and
mov
push
bound
or
jp
jae
test
cmp
push
jge
fidivrl
add
mov
mov
mov
loop
and
out
dec
or
jno
mov
pusha
add
xor
cmp
push
iret
xchg
jo
sbb
xchg
or
push
cmp
test
push
leave
push
lahf
jns
out
cmp
pop
cmc
iret
aad
outsl
scas
jnp
sti
dec
push
mov
push
idivb
fcomp
push
pmullw
mov
mov
cltd
inc
inc
jge
orb
inc
xchg
addb
pop
mov
dec
jnp
inc
jl
loop
mov
xchg
sub
sbbl
jo
cmp
scas
mov
mov
fs
hlt
inc
pop
pop
out
inc
movsl
xchg
test
mov
jg
sbb
push
mov
shlb
xchg
cmp
cmp
or
jge
or
rclb
and
fidivrl
movsb
sub
aaa
mov
shrl
pop
push
je
lea
pop
xchg
stc
pop
lahf
and
loopne
mov
andb
mov
rcrb
dec
sbb
shrl
sub
sub
sbb
test
lret
jbe
add
cld
mov
dec
dec
out
jo
jb
fcmovnbe
push
inc
mov
cs
sbb
or
ja
and
movsb
xor
aad
xchg
out
sti
cli
push
je
and
nop
lcall
outsl
jg
ror
lahf
lret
jne
pop
arpl
push
jno
xchg
cld
fisubl
push
stc
add
cmpsb
cmp
push
jbe
xor
push
inc
push
dec
cwtl
scas
lods
hlt
pop
sbb
into
pop
adcl
arpl
sub
pop
push
out
idiv
jecxz
jo
push
fildll
call
xchg
out
pushf
fdivp
daa
imul
xor
hlt
mov
or
and
jge
mov
sahf
sub
cmp
push
and
imul
cmc
out
out
sub
pushf
aas
sarb
add
outsb
xchg
es
adc
cmp
sti
sti
mov
test
mov
cmp
sarb
add
stc
or
ret
and
adc
xchg
dec
int3
inc
mov
push
xor
xchg
push
gs
xchg
dec
orb
mov
aas
fildll
dec
jle
mov
pusha
xchg
sti
and
lods
test
jmp
inc
add
sbb
cltd
xor
into
aas
into
dec
into
mov
sbb
fidivs
mov
mov
sub
mov
xchg
xchg
test
insl
stos
pop
in
push
add
adc
loope
xchg
int
jo
xor
add
xor
fisubl
aad
adc
mov
push
or
xor
cmp
pop
out
pop
xor
out
dec
mov
mov
repz
test
aam
sbb
push
dec
outsb
xchg
ret
and
mov
adc
cmp
xor
xchg
das
test
jbe
push
lret
int3
or
mov
mov
sahf
cmp
das
inc
fsts
pop
add
fiaddl
sbb
aas
mov
cltd
xor
sarl
rorb
add
popf
daa
pop
loopne
mov
daa
inc
pop
add
jl
shrb
lret
fisubrl
jle
pop
aad
cmpsl
sti
cmp
mov
imul
gs
cli
adc
adc
xchg
loop
xchg
daa
call
lods
sbb
mov
mov
scas
andl
xlat
outsl
mov
mov
add
dec
sub
rclb
and
rep
sarb
push
call
imul
in
inc
or
outsb
push
xor
sub
cld
mov
push
lret
dec
inc
xchg
push
ds
inc
and
aas
sub
inc
insl
outsb
in
dec
inc
rorl
xchg
pop
cmp
cltd
faddl
fs
pop
cmp
js
push
and
cmpsb
leave
enter
lods
sub
push
jo
outsl
adc
xchg
ljmp
scas
jns
mov
sub
in
jns
lcall
sub
pushf
push
gs
dec
mov
xchg
insb
scas
sbb
popa
filds
fcmovne
data16
mov
or
inc
sbb
mov
lcall
divb
inc
dec
insb
xchg
imul
pop
and
mov
add
mov
push
cld
rcrl
mul
in
das
and
popf
mov
pop
push
sub
push
cmp
adc
push
mull
insl
mov
jae
mov
in
ret
mov
xchg
pop
adc
jmp
and
pop
decb
xchg
pop
adc
cld
in
or
cmpsb
test
push
lods
imul
jnp
and
loop
cmp
mov
test
lea
out
mov
mov
test
and
push
xor
add
ss
rorb
or
mov
add
movsb
cmc
mov
outsb
std
inc
cmp
add
and
lea
movsl
fmuls
in
jae
mov
mov
popf
shrl
in
jmp
adc
cmc
stos
jne
insb
nop
outsl
ror
pop
cltd
movsb
into
pop
inc
pop
jb
in
stos
lods
or
sahf
test
outsb
jb
lods
cli
test
mov
mov
fimuls
mov
jne
add
pop
dec
add
adcl
mov
xor
sub
push
push
popf
scas
rcll
xor
loop
test
xor
dec
mov
inc
sarb
lock
adc
pop
sub
sbb
push
jb
leave
sti
inc
bound
pop
movsb
aam
dec
fstp
lcall
pusha
loopne
test
shrl
dec
stos
sub
add
stos
add
in
cwtl
subl
dec
lret
test
push
aas
pop
mov
xor
mov
lcall
dec
xchg
sub
fwait
mov
lds
loop
inc
test
add
movsb
xchg
mov
mov
mov
pop
rcr
cwtl
or
push
gs
cmc
dec
es
out
loopne
aaa
mov
jae
loope
scas
and
and
pop
sbb
sarb
push
int
mov
inc
lea
mov
push
inc
sbb
and
js
out
int
pop
sbb
leave
les
push
push
testl
in
popf
add
iret
insl
mov
pop
pop
mov
in
mov
cs
sub
sbb
jne
outsl
inc
jbe
push
xchg
fmull
xor
sbb
enter
inc
loope
arpl
and
sub
movb
sub
and
push
or
test
hlt
test
es
les
xor
rorb
sub
pop
call
push
mov
shll
add
imulb
fadds
pop
sub
daa
jne
aaa
out
xor
loopne
push
insb
pop
fcmovbe
jecxz
ljmp
fisttpll
subl
or
ja
cmp
pusha
xchg
out
mov
xchg
sbb
fldenv
pop
adc
inc
into
and
and
jecxz
mov
cwtl
cmp
jmp
jo
jo
scas
mov
daa
lds
mov
sub
mov
int
inc
jle
cmp
mov
jae
call
in
mov
jo
inc
xlat
xor
lret
test
xchg
adc
clc
jp
sbb
dec
mov
es
ljmp
rolb
out
shll
xorl
pop
cmpsb
mov
mov
xor
dec
in
lret
push
xlat
jns
test
shll
inc
bound
add
out
arpl
mov
test
iret
test
or
pop
dec
xchg
in
divb
cs
enter
nop
sbb
mov
mov
sti
andb
pop
and
jge
andl
ret
sahf
jo
or
pop
inc
ret
jge
inc
or
jg
push
and
adc
out
arpl
push
push
xchg
stos
aas
daa
stos
jle
dec
iret
and
popa
or
loop
out
enter
sbb
mov
jnp
iret
xchg
xor
stos
imul
fsts
daa
xchg
push
adc
fwait
cs
sub
xchg
inc
mov
popa
out
test
test
push
incl
gs
dec
aam
cmp
adc
push
sub
and
test
and
sub
bound
sbb
and
mov
call
push
les
inc
fs
push
and
ds
cltd
test
and
icebp
icebp
ret
adc
movsl
fcomps
xchg
mov
rcll
xchg
xor
mov
dec
sbb
addl
jb
test
hlt
scas
test
sub
push
je
mov
add
jl
lahf
pop
data16
inc
cmp
ds
cmpsb
xchg
mov
test
aas
into
xor
inc
fs
stos
mov
jns
dec
lahf
sbb
xlat
pop
dec
ds
lret
es
ret
mov
push
clc
mov
push
dec
int
dec
fldt
xor
ss
mov
out
or
movsl
sahf
sub
das
andl
popa
sahf
outsl
pop
push
fsubl
int
or
inc
sub
scas
jnp
loope
cli
fsubl
lock
outsb
dec
sub
pop
jo
data16
xchg
mov
sub
mov
inc
inc
jbe
cmpsl
sbb
stos
mov
pop
inc
xchg
dec
pop
mov
sbb
hlt
xchg
fsubr
pop
jl
popa
jns
adc
cs
into
sbb
jmp
out
adc
pop
sar
cmp
fnop
push
xor
outsb
test
inc
push
mov
dec
jo
subb
cltd
pop
iret
sbb
xchg
fyl2x
subl
mov
inc
loop
or
mov
loop
scas
mov
add
sbb
ja
imul
orl
xor
stos
adc
ds
popa
mov
outsb
mov
sahf
sbb
imul
pop
and
es
add
and
dec
mov
test
out
push
or
ja
imul
pop
loop
lds
stc
mov
out
sub
jge
stos
pop
outsl
mov
gs
stos
lret
jmp
cmpsl
imul
cld
cli
jns
or
mov
cmp
push
or
xchg
dec
fwait
lds
sbb
push
lea
push
jmp
xor
cmpsb
pop
and
sbb
mov
orl
movsb
push
lods
lods
popa
pop
pop
fists
pop
aaa
mov
xchg
movsl
cmp
add
and
hlt
jnp
sbb
repnz
icebp
inc
and
dec
mov
mov
mov
jl
mov
scas
or
addb
xchg
pop
cltd
push
nop
and
inc
sahf
dec
mov
push
adc
cmp
lods
repnz
cmpsb
xchg
insl
jne
test
rol
inc
addr16
outsl
add
ficomps
adc
aaa
pusha
movsb
inc
dec
cwtl
or
ljmp
xchg
mov
mov
push
pop
mov
incb
and
jb
mov
jbe
pop
and
add
movsb
ss
rorb
gs
push
notl
rcl
lods
dec
outsl
adc
lret
inc
xchg
orb
dec
popa
and
fs
test
fimuls
mov
adc
aam
sub
fs
jb
cmp
in
mov
mov
xor
cwtl
adc
subl
aaa
loop
pop
pusha
xchg
out
stos
mov
je
pop
orl
sub
inc
add
add
stos
xor
jge
repz
adc
jno
sbb
popa
faddl
xchg
dec
fimull
hlt
stos
test
dec
xchg
in
add
out
ss
aaa
ret
movsl
sbb
and
mov
sbb
sub
pop
sub
in
jp
mov
ss
lds
jns
sub
mov
test
insl
clc
imulb
xlat
xor
inc
cmp
push
aaa
daa
idivl
pop
cld
inc
rorl
test
mov
xor
arpl
mov
add
push
and
mov
insb
movsl
adc
imul
mov
lock
add
cmp
dec
jmp
pop
je
xor
mov
add
and
mov
stos
mov
and
jmp
adc
repz
adc
adc
sbb
addb
jns
inc
shll
mov
fistps
inc
loope
loop
cmp
pop
jno
jge
mov
mov
rol
or
mov
mov
lcall
mov
fistl
repz
xor
dec
mov
add
jae
cmc
ds
iret
or
cmp
dec
push
aaa
or
iret
cld
jle
enter
and
mov
stc
dec
popf
sarb
jle
pop
loop
rclb
out
les
int3
outsl
adc
and
fs
adc
into
push
mov
and
push
xchg
xor
imul
movsl
inc
sbb
mov
xchg
aas
test
or
jne
nop
pushf
stos
inc
adc
jb
fstp
xor
cmp
jae
push
sbb
in
cmc
test
adc
stos
sub
add
mov
rorl
jecxz
out
popf
add
dec
cmpsb
jp
fidivl
add
repnz
inc
popfw
ret
jge
pop
lods
jecxz
adc
cwtl
jmp
xchg
cmpsb
icebp
in
shlb
int3
sub
mov
push
jnp
insb
mov
jp
test
inc
lahf
sub
dec
jmp
mov
xlat
cmp
stc
sub
incb
and
das
cwtl
inc
pop
or
mov
add
out
popa
jbe
and
flds
in
sub
push
and
cld
push
sub
pop
jno
movsl
lret
sbb
mov
jo
movsb
sbb
add
not
mov
mov
push
xchg
mov
dec
and
out
ljmp
dec
mov
cltd
mov
sub
and
or
cli
popa
push
int
push
ss
xor
ds
aad
call
or
movsl
out
ds
repnz
mov
scas
xor
ffreep
fs
mov
iret
cwtl
iret
or
add
mov
pop
cmpb
incb
mov
rcrb
rclb
sbb
ficoml
outsl
and
mov
int
dec
jecxz
and
std
imul
sub
and
sub
adc
push
lods
jmp
pop
sbb
cmpsl
xchg
sbb
sub
orb
cmp
inc
pop
insl
fsubrp
or
xor
sbbl
mov
shlb
push
cmp
sbb
sub
orb
cmp
cmp
stos
out
adc
pop
cs
insb
daa
and
repz
sarb
adc
add
lret
je
pop
dec
mov
scas
and
mov
jg
addr16
cli
add
lcall
test
es
lahf
inc
movsb
and
pop
sti
ret
lds
mov
sub
fsubrs
lcall
lret
push
cmpsl
je
cmp
push
testl
adc
jmp
xor
fisubrl
cmp
call
jmp
test
or
jmp
sub
test
push
ds
jnp
mov
push
shrl
sbb
movsb
daa
inc
adc
mov
leave
xlat
cmpl
es
add
lods
push
fstl
hlt
movsb
rclb
inc
jl
mov
jb
jae
ror
out
mov
loop
xor
jne
popf
sbb
cld
jg
jmp
push
es
and
adc
add
cltd
jns
stos
xor
mov
jbe
in
xor
insb
mov
sub
jg
loop
push
pop
clc
add
test
int
cmp
fidivl
mov
clc
lret
jmp
sbb
jns
adc
and
adc
mov
xor
lock
or
xchg
xchg
jns
rorl
xchg
subb
adc
into
adc
lea
jmp
bound
cld
adc
fdivr
inc
push
not
pop
loop
xor
das
pop
mov
into
movsb
mov
mov
adc
call
inc
out
sbb
xor
xchg
loop
call
rcrl
mov
repz
xor
or
mov
mov
mov
mov
inc
sub
mov
jno
pop
gs
jb
xchg
popa
mov
pop
add
pushf
adc
inc
inc
wbinvd
stos
in
ret
lret
ss
cmp
sbbl
cli
rclb
mov
add
scas
add
rorl
js
lods
jbe
sahf
xchg
repz
push
xchg
mov
andb
cwtl
push
xor
cs
pop
negl
cmpsb
fidivl
ret
leave
test
cmpsl
mov
ds
gs
jae
inc
pusha
fistl
aam
neg
or
ss
lahf
pop
and
aad
and
mov
call
std
int
popf
fisubrl
das
dec
mov
adc
mov
sbb
fdiv
ret
aad
adc
ret
movsb
sub
nop
repnz
cmp
data16
lcall
ret
nop
xlat
cmp
out
inc
cmp
gs
xchg
xchg
pop
aas
or
hlt
call
jb
add
push
mov
mov
sub
jl
xchg
and
movsb
xchg
jecxz
add
int3
fidivl
clc
cltd
repnz
cli
icebp
jae
icebp
lds
pop
pop
sbb
cmpsl
adc
mov
or
test
add
int3
xor
jle
daa
dec
push
js
jmp
es
dec
fistpl
cmp
lret
fidivrs
in
call
ffree
and
outsb
or
shrb
cmp
lods
popa
iret
stos
test
jp
ja
mov
xor
stc
push
dec
leave
cmpl
in
dec
mov
or
adc
bound
mov
sub
pop
pop
icebp
push
cmp
cli
out
addr16
outsb
sub
insl
cmc
push
xchg
inc
lods
int3
xor
into
popa
int
jecxz
stos
pop
movsl
or
shrb
fwait
ja
repnz
je
jl
sbb
dec
flds
push
mov
xor
mov
push
jae
test
aaa
mov
cmp
jmp
or
or
mov
and
rcrb
test
leave
inc
inc
das
push
mov
mov
pushf
dec
mov
cmp
sub
ds
cmp
cmp
faddl
cmpsb
cmc
xchg
mov
cs
sub
out
push
jg
adc
int3
dec
es
test
add
inc
int3
bound
pop
xchg
imul
repnz
sbb
pop
fsubl
mov
fdivrs
pop
pop
aad
icebp
insb
jge
add
loop
mov
cmc
je
popa
stc
xchg
les
mov
inc
incw
pop
sbb
jg
insl
int
lret
or
adc
fsubrs
mov
dec
or
inc
stc
dec
jno
loopne
outsl
cmp
cmpsl
arpl
lahf
outsb
and
sbb
fadds
xor
ret
data16
adc
and
int3
ret
psrlw
pop
add
in
mov
rcr
dec
rol
pop
in
mov
xchg
cmc
rclb
arpl
cmp
icebp
cld
and
repz
cmp
stc
push
orb
push
nop
mov
push
icebp
jp
das
jmp
stc
repnz
xor
adc
testl
mov
push
stos
daa
mov
mov
test
cmp
sub
jb
add
cvtps2pd
add
dec
pop
pushf
sti
inc
add
aas
ret
dec
daa
add
sub
lcall
xor
out
xchg
and
pop
or
ret
mov
xor
pop
adc
in
iret
movsb
xchg
xor
scas
out
test
push
sub
add
pop
xchg
pop
rcll
pop
push
into
mov
fsubr
xor
mov
mov
addr16
imul
mov
xlat
jnp
cmp
push
test
and
jns
sbb
cli
lock
test
rcll
ja
fisubs
popa
iret
or
imul
sbb
out
std
jle
rcr
and
mov
add
ret
jno
sub
jnp
icebp
and
dec
nop
pop
dec
pop
xlat
pop
ss
sar
and
xchg
sbb
pop
or
pop
lds
push
pop
sbb
in
outsl
call
into
cmp
mov
int
pop
pusha
add
add
inc
pop
fldl
stc
test
popa
jb
daa
mov
lahf
cld
pop
fsubl
pop
fdiv
push
or
aam
mov
test
lds
out
adc
ja
hlt
sti
icebp
adc
in
mov
sti
mov
adc
adc
je
jge,pt
cltd
shll
iret
es
incl
mull
mov
pop
or
mov
xor
ljmp
sub
and
or
add
repnz
jg
shlb
xchg
fdivl
lds
fsubrs
outsb
loop
pop
push
call
ret
popf
cmp
xor
mov
or
pop
jge
push
ret
mov
mov
mov
sarb
lods
push
pushf
divl
or
leave
call
mov
out
jp
cmp
xor
pop
and
lret
inc
mov
pop
push
mov
dec
pop
jmp
jle
sbb
lahf
lcall
mov
xor
rolb
or
jp
rcll
dec
pop
mov
sbb
lcall
ret
xchg
insl
nop
das
mov
pop
ret
sub
jne
mov
sub
xor
adc
cmc
into
pop
lock
pop
or
adc
imul
sbb
adc
dec
out
ficoml
sti
out
fsubrs
mov
leave
cs
sbb
xor
lea
push
test
xor
popf
and
lds
lock
jae
push
lret
sbb
mov
sbb
addb
rclb
push
mov
dec
xchg
imul
xchg
out
scas
rorb
jecxz
ficompl
pusha
pop
cmp
popf
push
adc
shll
loope
or
data16
mov
lea
lds
js
pushf
aas
push
loope
lahf
mov
rorb
pop
xchg
stos
mov
clc
cwtl
xor
dec
jnp
mov
scas
fidivs
mov
push
pop
dec
dec
jecxz
cmp
cmp
xchg
cmp
inc
cmp
adc
repnz
add
xchg
pop
xor
nop
popa
lock
ja
push
xlat
orb
repz
or
shr
hlt
add
mov
stos
lret
mov
mov
cmp
dec
lds
push
xchg
inc
pop
xchg
in
insb
imul
and
in
add
push
insl
insb
outsl
pushf
cmp
push
jo
mov
sbb
lret
outsb
jnp
mov
insl
dec
ret
add
jbe
and
jb
dec
pusha
mov
lret
jo
mov
punpcklwd
push
rclb
stos
sbb
fcoms
mov
cmpsl
sbb
rolb
and
shl
fadd
ljmp
sub
shr
test
into
addl
loop
push
cmp
dec
shll
ds
xor
jp
mov
aam
adc
cwtl
xchg
into
push
or
mov
pop
jmp
xchg
or
push
sbb
jns
iret
into
and
and
pop
add
mov
in
loope
stos
jecxz
es
mov
pop
add
cmpsb
mov
xchg
add
or
pop
or
push
repz
popf
or
aaa
pop
jp
adc
int3
mov
lret
pop
mov
jg
jl
in
fadds
or
jl
out
push
in
outsb
cld
sahf
push
mov
mov
pop
or
insl
sub
aad
or
push
pushf
lahf
sbb
mov
outsb
push
insb
std
jmp
test
clc
mov
adc
loopne
sahf
or
jae
and
pop
inc
in
loopne
mov
push
mov
xor
push
jns
adc
rcrl
sub
cmpb
in
fildll
lcall
sahf
adcl
shlb
clc
int3
sar
mov
pop
cmc
rcrl
sub
sub
loope
and
daa
lds
jl
or
imull
pop
sbb
add
call
cmp
faddl
lret
inc
adc
testb
mov
or
xor
mov
pusha
mov
dec
outsb
pop
outsl
dec
sahf
sbb
cwtl
int
xor
or
in
cld
test
imul
cmp
jl
and
pop
test
cs
dec
add
add
test
mov
xchg
add
jo
jge
push
cmc
daa
mov
pop
mov
addr16
lods
xor
cs
pusha
mov
mov
add
cmc
pop
pop
add
jecxz
push
mov
ds
sbb
jae
mov
jo
addr16
xchg
mov
jmp
push
fisubs
pause
sub
fstpl
add
adc
sahf
inc
dec
push
lods
add
mov
cwtl
fmul
adc
inc
sub
ret
mov
inc
cmpsb
cmp
xor
cmp
les
dec
les
ja
lods
into
ds
push
mov
daa
jl
mov
xchg
xor
dec
es
shrl
pusha
fs
push
or
cmp
push
repnz
lods
cmp
mov
xchg
repz
fs
jne
sub
add
mov
xlat
icebp
mov
lock
icebp
inc
sbb
jl
stos
loop
ficompl
xchg
arpl
imul
add
add
mov
nop
add
dec
jecxz
roll
sbb
fwait
mov
mov
icebp
scas
jb
dec
pop
cli
popa
addr16
std
mov
outsl
mov
stc
imul
repnz
dec
lods
adc
push
mov
popf
lock
and
call
push
stc
scas
cmp
inc
pop
inc
add
pop
xchg
inc
cltd
fidivrl
hlt
and
ljmp
ret
inc
nop
push
push
test
push
xchg
inc
test
rorb
push
mov
in
push
rcrb
mov
sub
enter
dec
cmc
cmc
mov
cmp
add
hlt
push
je
push
out
pop
add
lea
add
xchg
fs
test
lea
jmp
arpl
jg
in
and
mov
sub
adc
or
in
push
push
adc
add
ljmp
ljmp
push
inc
aad
cmp
xor
movsb
or
lods
push
sub
xchg
cmc
test
cmpsb
push
adc
shlb
inc
cmp
cmp
addr16
fs
outsb
mov
pop
into
out
in
clc
push
and
push
sub
cmp
fcmovne
cli
mov
in
sub
mov
lret
cmp
popa
xchg
push
inc
inc
loop
pop
dec
xchg
insb
pop
dec
imul
pandn
testl
les
dec
mov
pop
jns
div
jnp
mov
xor
jno
or
xchg
aam
mov
jecxz
jg
dec
test
cmp
rcrb
inc
jns
jo
sub
cmc
mov
inc
jns
stc
sbb
orl
orb
mov
loope
stc
outsl
push
jle
mov
into
dec
jle
fnstcw
loop
dec
inc
in
cmp
arpl
sub
leave
xor
lods
int
in
repnz
push
popa
jnp,pt
fiaddl
cli
cmp
les
xchg
test
and
adc
mov
jae
pop
dec
xchg
cs
stos
dec
shl
cwtl
loope
or
test
iret
loope
mov
xchg
jne
inc
rcll
inc
adc
pop
jne
inc
in
push
sbb
testb
orl
test
pop
inc
pop
cs
dec
lods
inc
aam
adc
mov
or
xchg
out
jmp
cmpsl
loope
xchg
mov
mov
imul
insl
add
ficomps
lock
xchg
lock
das
and
mov
fwait
jmp
dec
mov
neg
and
xorl
sub
insb
jmp
or
out
add
cmp
xchg
mov
or
adc
cmp
stos
ljmp
mov
gs
xor
inc
mov
mov
sbb
arpl
bound
mov
lea
push
repz
mov
xor
sahf
cmpb
jae
xchg
in
ljmp
fcoml
inc
cmp
and
pusha
xor
dec
inc
lds
fldz
mov
jns
lret
pop
push
ret
test
je
inc
int3
lahf
mov
test
test
sti
rorb
jnp
jle
repz
daa
mov
outsl
or
cmp
mov
scas
and
arpl
lahf
and
sub
adc
fisttpl
dec
sub
cwtl
push
xchg
inc
add
pop
push
loopne
jg
data16
fs
enter
inc
xor
loope
inc
lds
mov
or
pop
mov
cmp
ljmp
fmull
jecxz
repnz
movsl
pop
mov
test
jae
inc
test
lods
nop
add
jp
inc
mov
fidivl
jmp
ret
or
pushf
out
xlat
bound
jb
pop
daa
imul
mov
push
loopne
or
sbb
in
and
mov
sti
bound
mov
repz
and
arpl
xchg
mov
shl
push
jae
sub
in
sub
xor
cwtl
mov
cmp
iret
dec
pop
xchg
sbb
shlb
jns
out
in
pop
cwtl
sbb
test
push
into
cmp
mov
cmp
mov
mov
ja
ljmp
lret
lods
scas
imul
dec
jbe
add
sub
cmp
sti
cmp
xchg
inc
fsts
out
test
fs
sub
or
mov
int
mov
mov
popf
mov
mov
sahf
mov
jge
inc
cmp
fcmovnu
cmp
ret
dec
jne
clc
xchg
sub
out
lahf
in
push
xorb
dec
mov
sbb
dec
dec
jae
mov
test
bound
push
repnz
or
mov
sbb
negl
and
sbb
aad
mov
pop
pusha
sarl
aam
xor
cmpxchg
stos
and
push
push
push
mov
mov
dec
and
movl
fucomp
rcrl
pop
pop
ret
movsb
test
xor
push
mov
dec
xor
cltd
sub
ficompl
pushf
test
loopne
movsb
inc
mov
and
jbe
add
iret
jecxz
neg
aad
cmp
aaa
and
cmp
pop
inc
fsubrl
jb
nop
jge
inc
into
mov
shr
js
fidivs
mov
push
icebp
push
imul
fisubl
rclb
enter
iret
fidivrl
mov
subl
cwtl
pop
lods
ret
add
shrl
inc
lret
cmpsb
mov
pop
pop
mov
xchg
xchg
cltd
mov
clc
jns
stos
inc
mov
ss
add
mov
aaa
mov
push
aas
push
fdivr
fs
mov
xchg
jnp
push
lods
inc
xor
jecxz
rcrb
jl
sub
lret
pop
je
icebp
jge
in
dec
sbb
std
adc
push
cld
pop
or
fldt
in
dec
dec
dec
loopne
jbe
in
je
fnstenv
push
jecxz
xchg
sbb
mov
xor
in
or
sbb
add
add
push
or
dec
adcb
inc
jo
lods
lods
popf
jmp
cmpsl
and
lods
into
test
cmp
cmp
cmp
sub
test
cmp
xor
adc
fwait
or
pop
add
fdivrl
int3
xchg
mov
sbb
lea
mov
xchg
out
dec
sarl
fldl
je
add
push
sub
stos
pushf
imul
call
xor
test
jge
sahf
jns
out
fcoml
sub
and
xchg
out
imul
push
cmp
fisttpll
iret
push
das
mov
out
shrl
mov
int3
test
push
sbb
jno
or
lock
stos
sbb
or
out
imulb
push
jno
dec
add
and
stc
dec
loop
aaa
jnp
stos
popa
xchg
addr16
mov
sbbb
js
push
jns
in
and
pop
loop
push
mov
fs
data16
push
jb
pop
aas
sub
pop
fwait
cmp
xchg
pop
or
sub
push
xor
pop
das
loope
xor
fsubrs
fwait
dec
ljmp
lods
inc
test
add
xchg
test
lods
mov
stc
jno
dec
test
in
adc
pop
inc
pop
loope
or
dec
aad
mov
pop
addr16
or
push
es
sub
or
mov
jb
push
in
sub
jns
gs
dec
imull
mov
mov
aaa
inc
in
and
sbb
js
test
lahf
mov
mov
mov
sbb
adc
push
xchg
push
mov
aam
push
push
ret
enter
decl
push
adc
inc
cwtl
out
popf
out
push
es
stos
orl
ret
adc
push
xchg
pusha
inc
mov
lds
and
bswap
push
ljmp
dec
jbe
add
aam
cltd
push
add
xchg
inc
xor
iret
jmp
outsb
mov
and
jb
in
shl
test
cmovns
hlt
scas
mov
pop
add
push
push
xor
loope
test
rorl
jg
je
xchg
jno
or
lods
mov
push
insb
lock
mov
mov
add
cmp
insl
sub
je
mov
push
xor
push
nop
mov
into
sub
imul
pop
ljmp
mov
mov
out
icebp
push
sbb
rcrb
ds
pop
rolb
out
and
or
frstor
stos
std
add
ss
gs
repz
jg
push
jp
mov
lods
pop
lods
aaa
fsubl
xchg
stc
push
outsb
je
cmp
adc
pop
shl
adcb
ss
push
xchg
mov
mov
addl
aad
sub
fidivs
xchg
sub
orl
daa
cli
jne
xor
inc
test
push
fidivs
or
repnz
push
mov
adc
xor
xchg
fistps
subb
jne
loopne
cltd
sti
sbb
enter
mov
or
imul
arpl
xchg
mov
rorl
loope
cmp
pusha
sub
pop
nop
daa
dec
push
adc
pop
imul
cltd
xor
dec
jnp
inc
fisubl
sbb
add
icebp
es
mov
inc
les
imul
pop
cwtl
pop
into
mov
jo
adc
inc
cmpsb
pop
call
and
and
bound
jge
lahf
cmpsb
sub
and
imul
ficoms
aas
lcall
fsubrl
mov
mov
dec
fsubrl
ds
leave
inc
popa
sarl
ss
lods
in
cwtl
xlat
fsubl
int
popl
aam
xchg
inc
push
inc
pop
and
lods
pop
mov
clc
mov
orl
lods
shll
sbb
add
nop
push
push
push
jnp
js
es
pop
pop
mov
adc
push
inc
int
dec
in
jne
lahf
ret
or
push
inc
xor
clc
dec
mov
sarl
mov
outsl
inc
aas
mov
std
and
add
mov
imul
aad
mov
cmp
inc
popf
enter
lock
mov
inc
push
push
popf
ret
adc
or
and
out
in
data16
and
mov
lods
stos
inc
mov
xor
mov
pop
daa
bound
xor
insb
and
mov
cwtl
cmp
movsb
lods
mov
fs
mov
mov
lcall
out
push
stc
rorl
insb
cmp
aaa
sub
or
push
cs
subb
push
inc
mov
add
push
cmp
push
jmp
fwait
jp
sti
stos
inc
loop
jle
outsb
push
inc
leave
xor
in
test
mov
xor
icebp
cmp
std
enter
je
push
insl
bound
iret
cltd
dec
fsubp
imul
test
add
mov
ret
xor
pop
push
dec
adc
adc
push
push
push
cwtl
jns
lcall
adc
or
and
sub
lods
jns
movsl
ret
es
xchg
pop
imul
sbb
add
pop
dec
xchg
mov
cli
lods
pop
sub
aad
pop
xchg
xor
add
sub
lds
xor
cmp
cmp
sub
xchg
imul
and
mov
cmp
rolb
inc
popa
es
cmp
lods
or
push
dec
ds
sbb
pop
fxch
sbb
fdivs
sarb
dec
mov
inc
insl
stc
cli
ret
xor
inc
push
ljmp
xor
pusha
lea
shlb
rcr
ds
js
adc
repz
std
test
sahf
push
mov
and
out
sub
and
neg
stos
lret
fs
push
jl
pop
inc
inc
sbb
lock
into
and
sub
jl
test
loope
sbb
movsl
inc
jo
loope
inc
sub
mov
es
dec
daa
leave
pop
inc
cmpsb
add
mov
ljmp
jb
movsb
mov
ret
leave
xlat
lcall
adc
sub
enter
jmp
inc
adc
cli
fdivrl
mov
jne
sub
js
enter
and
xchg
rcll
mov
mov
xor
xor
aas
sub
mov
popa
inc
in
outsb
mov
mov
pop
arpl
jns
lods
sarl
sub
cs
sbb
sub
loopne
xor
push
mov
xor
inc
pop
repnz
jae
xlat
cwtl
add
cmp
outsl
out
jg
mov
sbb
in
vmwrite
gs
loope
jge
in
cmp
lea
into
adc
aam
cs
pushf
push
push
lret
pushf
repnz
outsl
imulb
inc
nop
add
push
push
repz
enter
add
add
ljmp
daa
push
sub
imul
inc
push
fistl
loop
mov
add
scas
fidivs
push
jb
and
mov
push
push
ja
push
sub
nop
jnp
xlat
add
in
dec
cmp
add
inc
pop
xor
mov
mov
xchg
mov
jae
popa
fs
xlat
jmp
and
sarl
ret
and
jmp
jmp
enter
dec
sarl
xchg
in
fisubrl
int
and
test
pop
add
adc
fnsave
cmp
cmp
jno
xor
pop
jecxz
arpl
mov
mov
lahf
adc
movsb
mov
in
xchg
pop
mov
or
out
sbb
pop
enter
jle
push
and
test
xor
loop
outsl
push
push
sbb
pop
dec
ja
in
xchg
scas
cld
jge
or
jb
fdivr
sbb
mov
into
out
mov
push
sub
rcrb
inc
jecxz
pushf
popf
cltd
fimull
xchg
popf
scas
sti
xchg
ljmp
mov
mov
loop
scas
ljmp
adc
push
mov
dec
mov
cld
fsubrs
mov
out
fwait
stos
hlt
fiadds
push
inc
mov
push
mov
push
xchg
je
sub
adc
test
addl
mov
inc
sbb
test
and
jb
pop
lcall
sub
inc
test
pop
sahf
mov
fs
mov
jg
jle
sbb
or
icebp
hlt
ja
in
cmp
or
xchg
out
pop
out
add
cltd
xorb
data16
into
cwtl
sub
aam
xor
pop
stos
shl
pop
shrb
xor
popf
sbbl
pop
xor
stos
push
sahf
pop
xchg
sub
dec
or
push
and
pop
pop
and
js
mov
popa
jns
sbb
jp
pop
jle
repnz
adc
insl
in
pop
push
imul
add
cmp
cmp
out
ds
mov
int
sbb
addr16
jg
jl
mov
push
mov
or
xlat
xchg
test
les
out
push
mov
pop
rcrl
jb
repz
sti
mov
dec
dec
adc
and
adc
test
les
out
push
lods
in
shlb
dec
fwait
inc
add
pop
mov
push
lea
cltd
xor
push
adc
ds
xor
js
add
xchg
into
mov
sarb
dec
fnstsw
mov
ljmp
pop
dec
cmp
ret
movsb
dec
xchg
push
mov
sti
shll
inc
lcall
sub
es
jno
inc
xchg
dec
ret
jl
mov
pop
cwtl
ljmp
insl
push
movsl
dec
xor
pop
inc
xchg
std
call
push
test
mov
and
divl
rolb
call
test
cltd
sub
or
xor
push
sbb
sub
sub
dec
mov
push
pop
mov
jb
das
cld
mov
adc
add
xor
enter
stos
add
or
mov
rclb
mov
or
test
cltd
inc
dec
jno
push
aas
scas
xchg
or
cmc
cmp
movsl
cmp
dec
push
jl
sbbl
fnstenv
inc
mov
cmpsb
mov
push
push
dec
das
jmp
cltd
into
aaa
dec
pop
fcmovu
jno
outsb
or
lods
loop
push
mov
pop
inc
mov
sbb
mov
and
ret
mov
int
loope
sub
pop
or
testl
fnsave
inc
add
xchg
addb
lahf
icebp
and
cmp
addb
clc
sbb
movsl
jl
fisubrl
sbb
testb
sbb
idivb
cld
outsb
dec
stc
pop
jecxz
bound
push
xchg
push
jl
lods
subb
xchg
add
xchg
cmp
mov
shll
sahf
mov
add
pop
add
cmp
dec
test
pusha
pusha
outsl
je
repnz
cmp
popa
lods
mov
gs
mov
mov
adc
mov
pop
jbe
inc
sub
retw
mov
push
xchg
inc
in
leave
mov
jmp
fstl
icebp
mov
nop
daa
mov
addb
add
dec
into
popf
mov
scas
bound
mov
push
rorb
rcll
in
test
vphaddubq
pop
es
sub
push
mov
ficomps
sub
or
ret
jbe
and
and
xchg
sbb
aaa
outsb
dec
insb
lea
mov
movsb
ret
loop
fdecstp
xor
mov
sti
mov
mov
add
jns
ljmp
jne
push
and
cli
sub
test
stos
sub
sub
repz
out
std
lods
lahf
aam
jge
daa
sub
fptan
test
out
pop
xchg
jle
daa
lds
add
mov
arpl
repnz
loopne
pop
add
mov
fs
adc
movl
jb
mov
js
pop
xor
cmp
xchg
jb
mov
inc
movsb
cmpl
and
inc
dec
lcall
lock
or
cmpsl
je
jns
jno
add
lods
inc
mov
jge
adc
jb
mov
push
mov
mov
shll
dec
or
out
icebp
fldcw
aam
mov
jle
push
fidivs
push
ret
sub
stc
lea
sbb
loopne
insb
jns
test
stc
fstpt
lods
xor
test
mov
cmc
loope
stc
pop
repnz
stos
mov
xchg
cmovo
cs
cmp
aam
inc
and
add
mov
xchg
mov
sbb
fidivl
sahf
or
mov
pop
add
mov
stc
dec
sbb
insb
cmp
mov
roll
daa
mov
fwait
cmp
shrl
sarl
mov
jl
popf
hlt
and
jo
sub
xor
out
jmp
jbe
pop
daa
pusha
mov
and
mov
hlt
add
mov
pop
les
repz
cmc
jne
cmc
mov
inc
mov
adc
push
out
hlt
mov
dec
pop
in
cmp
lret
jae
or
dec
cld
mov
jo
imul
jno
daa
insl
mov
sbb
xor
sbb
pusha
ret
push
mov
jns
dec
inc
inc
adc
shlb
lods
jecxz
shlb
pushf
iret
loopne
add
pop
dec
inc
adc
int
in
lods
inc
hlt
xor
fisubl
in
add
mov
pop
fcmove
out
lret
add
pop
cmp
mov
dec
add
mov
test
mov
push
or
mov
ret
lea
rorb
push
sub
mov
lret
adcb
jo
test
push
imull
mov
adc
mov
add
cmp
and
stc
fwait
cmp
stos
mov
aam
cmp
cli
imul
mov
jbe
dec
jne
les
xchg
pushf
repnz
stos
or
in
sbb
es
fadds
pop
das
adc
inc
arpl
andb
dec
out
js
popa
enter
push
pop
aas
mov
loop
in
inc
ss
inc
enter
dec
aam
xchg
clc
sti
sbb
mov
mov
or
mov
xchg
aad
and
push
cld
mov
push
lea
clc
fcomps
cmp
pop
xor
into
xor
jb
xchg
xor
xchg
xor
loope
mov
mov
sarb
jmp
add
jp
jecxz
mov
out
loope
mov
mov
subl
jge
xorb
xchg
sub
sbb
loopne
mov
xor
iret
sub
add
test
addr16
adc
mov
dec
in
bswap
add
mov
sbb
fldt
adc
pusha
xor
lods
outsb
cmp
iret
cwtl
jnp
out
loopne
mov
popa
cmp
scas
pop
adc
nop
sub
jne
add
stc
cmp
addr16
adc
hlt
xchg
rolb
dec
xchg
inc
imull
ficomps
xchg
push
add
mov
enter
rorl
lcall
ror
js
ficoms
ret
stc
loope
clc
faddp
inc
ss
nop
inc
jno
dec
ja,pn
pusha
ja
int
flds
mov
daa
xor
fld
and
out
mov
cmpl
in
ds
fsts
pop
cmp
adc
imul
push
mov
push
mov
mov
jle
lret
pop
or
sbb
daa
jnp
and
add
push
add
ficoms
rcrb
stos
lcall
negb
fdivl
push
das
or
mov
push
repz
shlb
or
adc
push
mov
int3
aas
cmp
mov
insb
push
adc
jmp
mov
test
xor
adc
mov
inc
sbb
scas
mov
inc
jle
add
pushf
lds
cmpsl
idivb
mov
in
and
dec
xchg
out
add
lea
sub
fbld
push
adc
push
adc
pop
inc
cmc
dec
xchg
sahf
lret
mov
mov
mov
cmp
sub
imull
inc
pop
inc
adc
inc
repz
in
loop
outsb
shr
cld
cmp
push
nop
or
push
sbb
clc
xor
xor
mov
int
mov
cmp
push
mov
jbe
adc
adc
shrb
push
jno
push
push
push
add
cltd
das
cmc
fidivl
test
icebp
pop
pop
popf
ja
insl
out
popf
test
xchg
sub
stos
sbb
ret
lds
bound
pusha
xorb
inc
mov
jne
and
enter
mov
jno
pop
or
in
or
outsb
stc
xchg
jns
push
xchg
xchg
mov
sti
inc
push
lcall
sbb
jns
int
sarb
xchg
imul
shlb
stos
push
jnp
aas
or
jne
adc
mov
shlb
std
jmp
psubw
int3
sbb
sbb
mov
xor
xlat
loopne
pop
mov
add
sti
inc
aas
lcall
pop
out
mov
or
mov
fsubrs
sbb
mov
icebp
hlt
mov
movl
stos
andl
push
sub
jmp
pop
cli
push
or
hlt
and
dec
aad
fsubrl
sbb
popa
das
mov
movsb
test
push
and
or
mov
sub
sahf
sbb
es
daa
aaa
lcall
mov
jno
aam
mov
mov
outsl
and
cmc
icebp
sahf
ret
shll
adc
and
push
mov
push
lret
mov
pop
jl
lahf
add
inc
push
push
rol
mov
fwait
xchg
out
xor
jmp
xor
ret
mov
mov
out
imul
or
pop
clc
lods
add
inc
cli
or
mov
inc
std
xor
xor
add
pusha
das
jnp
out
test
or
xchg
cs
cmp
sub
dec
xchg
sbb
sub
leave
pop
jge
jo
in
push
bound
ffree
call
adc
push
popl
mov
jecxz
mov
loope
sub
add
std
add
mov
in
shrb
pop
aad
cmpsb
sarl
mov
pop
cmc
fwait
sti
sar
daa
icebp
mov
pop
and
push
xchg
cmp
adc
push
cmp
clc
xchg
push
mov
fcomip
ret
sub
andb
pop
pop
stos
mov
decl
les
icebp
pop
mov
mov
mov
test
in
arpl
aaa
into
dec
fdivrs
push
push
jae
jns
mov
cmpsb
sti
lods
rcr
mulb
push
fidivl
xchg
inc
push
pop
cld
xor
dec
mov
imul
sar
dec
pop
jp
mov
lock
call
dec
loop
xor
adc
inc
rcll
jbe
pop
push
leave
jp
jmp
jp
dec
sbb
movsb
inc
xor
sbb
and
jle
xor
hlt
jl
and
mov
adc
ljmp
inc
xchg
mov
lcall
dec
hlt
scas
fnstcw
xor
adc
xor
xor
cmp
mov
sbb
fimuls
or
sbb
sbb
cmp
aam
pop
mov
out
push
and
lahf
sub
cmp
add
and
sarl
xchg
into
jns
icebp
sub
dec
mov
mov
xchg
sub
inc
rclw
jecxz
in
xchg
sbb
scas
rclb
in
dec
aaa
in
mov
shll
sub
jge
and
push
adc
addb
sbb
sti
xchg
inc
jle
enter
fcoml
cld
mov
pop
jmp
push
push
movsb
jecxz
hlt
or
adc
mov
jo
out
lea
lock
mov
out
pop
fs
push
pop
pop
pop
aad
jle
pop
into
loopne
mov
outsb
sub
jl
push
dec
mov
les
test
cli
std
pop
lock
sbb
mov
shl
mov
mov
add
mov
pusha
push
push
mov
push
filds
setbe
adc
imul
push
int3
pop
inc
sbbl
lcall
xchg
inc
xor
dec
xchg
add
jle
adc
mov
mov
push
jns
ljmp
cmp
ja
ret
jp
jno
dec
xor
push
sti
rorb
test
xchg
inc
add
xor
dec
aaa
inc
pop
roll
push
cmp
inc
jne
sti
imul
push
or
lods
std
or
mov
inc
jl
dec
mov
stc
add
sahf
into
pop
inc
insb
sub
mov
aad
mov
fisubs
test
cmp
loop
xchg
xor
pop
pop
adc
lds
mov
sbb
mov
nop
lock
mov
test
push
pop
xor
orb
jo
imul
jecxz
adcl
add
xchg
icebp
sub
sub
outsb
sub
mov
iret
mov
jmp
insl
in
movsl
mov
lret
movsb
movsb
push
dec
enter
and
mov
jne
xor
mov
loope
out
xchg
add
push
dec
adc
leave
adc
jnp
insb
mov
stos
lea
jae
pushf
xchg
lds
repz
in
leave
pop
push
iret
and
rcl
sub
and
xchg
inc
popf
jbe
and
xchg
aas
adc
lahf
cmpsl
inc
mov
and
xlat
mov
int
push
adc
sti
push
mov
sbb
aaa
lods
jne
mov
mov
mov
dec
shl
fwait
test
mov
xchg
ja
aam
push
inc
mov
call
pushf
add
add
je
push
inc
cs
cmp
cmp
mov
les
in
pop
xor
fdivrs
mov
sub
movsl
sub
push
sbb
mov
mov
sbb
ja
mov
pop
stc
pop
stos
jg
fnstsw
out
fimull
mov
pop
xchg
sti
mov
sub
mov
xor
sahf
dec
in
jmp
scas
xor
sbb
adc
cld
jmp
lods
fwait
mov
sti
jg
push
dec
fdivp
xorb
push
push
pop
cld
jnp
cwtl
cmp
pop
insl
dec
dec
std
push
pushf
js
cmp
das
out
mov
add
pop
rclb
jae
paddusw
adc
cmpsl
mull
insl
gs
xor
andb
in
cmpsl
push
add
sbb
fstl
lds
jnp
cltd
xor
stos
fdivrl
sub
mov
out
clc
sub
pop
in
mov
mov
xor
testl
push
stos
jl
pusha
cli
das
bound
xchg
orl
push
xor
add
jg
inc
add
and
daa
adc
jbe
push
fmull
add
andl
push
dec
dec
ljmp
scas
or
scas
mov
pop
ret
popf
idivl
cmpsb
xchg
push
xchg
pop
out
sbb
mov
mov
loope
push
push
sarl
out
inc
push
sub
dec
sbb
cmpsb
les
and
push
fs
xchg
xor
lea
sub
push
cs
popa
cwtl
in
mov
sub
mov
testl
xor
stos
or
jae
andb
sub
daa
out
sbb
movsb
lcall
int
addr16
inc
dec
pop
push
jmp
inc
cmp
shll
xor
aad
and
xor
inc
cld
arpl
sbbl
cmp
fsubs
int
xchg
scas
call
js
das
or
in
test
imul
and
imul
xor
test
mov
pop
stos
add
adc
lahf
imul
cmp
test
inc
xor
sub
add
xchg
out
lock
push
adc
pusha
mov
dec
sbb
lahf
repz
stos
and
xor
in
in
and
sub
jl
cmp
mov
add
inc
ja
push
cmc
inc
cld
adc
ret
dec
fdivl
cmovns
std
mov
or
loopne
fildll
add
nop
xchg
adc
insb
insl
fs
mov
jg
out
xor
adc
and
test
stos
jb
mov
add
popf
jp
xor
pop
syscall
shl
push
insl
xchg
inc
sbb
pop
out
mov
pop
mov
rcll
dec
hlt
adc
xor
add
call
dec
subl
fcmovnb
pop
push
mov
xlat
push
xchg
add
stos
out
xlat
cmp
push
xchg
and
dec
mov
lret
jp
lahf
jge
popf
adc
mov
xchg
pop
mov
sub
bound
and
mov
mov
push
pop
sub
cmp
pop
jne
xor
clc
outsb
std
fwait
shl
test
inc
iret
xchg
jne
mov
test
adc
test
sbb
loop
push
push
sbb
jmp
pop
add
sbb
popf
xchg
ds
scas
loope
xor
inc
pushl
test
mov
sub
pop
hlt
xorl
lret
out
addr16
adc
push
mov
mov
fistps
ret
sub
in
push
les
es
sub
loop
inc
xor
push
mov
xchg
jb
jl
popa
inc
shr
mov
xor
xchg
lret
xor
jno
xor
sub
repz
je
inc
std
sbb
and
sub
jbe
rcll
loop
push
sbb
push
cmp
sbb
fcomps
add
xor
clc
in
aad
jge
sahf
and
dec
or
mov
js
pop
mov
movsl
xchg
pop
mov
in
inc
dec
fwait
repnz
cs
in
fidivs
shrl
mov
lods
mov
mov
xchg
jecxz
xor
pop
sub
cmpsl
push
repnz
movsl
xchg
jne
xchg
xor
mov
mov
pop
scas
inc
sbb
mov
cmp
iret
mov
mov
xchg
dec
mov
dec
aad
lds
in
lret
clc
pop
in
lcall
or
cmc
mov
in
push
rcrb
mov
inc
in
pop
jno
mov
stos
enter
insl
dec
pop
inc
jg
mov
or
jl
adc
mov
loopne
cmc
pop
dec
pusha
lods
add
sub
jns
imul
push
push
popf
lods
push
jg
es
lds
bound
add
mov
icebp
ds
push
jo
jecxz
xlat
and
jle
shlb
dec
mov
pop
dec
and
in
push
scas
ljmp
cmp
mov
mov
mov
in
sbb
mov
hlt
pusha
cwtl
and
pop
outsb
test
stos
xor
mov
sbb
inc
ds
push
pop
push
insl
adc
stos
aaa
jno
imul
out
shl
sti
stos
jne
jbe
xchg
push
aas
xchg
lods
sbb
pop
and
push
scas
aaa
les
pop
xchg
daa
cmc
mov
lcall
bound
out
stos
mov
sbb
jecxz
addr16
inc
mov
bound
xor
jno
or
cwtl
and
enter
shlb
pop
lds
in
aad
jge
jmp
test
aas
lret
pop
mov
roll
adc
sub
pop
dec
cmp
xchg
add
adc
fnsave
out
imul
pop
sub
cwtl
dec
call
mov
dec
mov
lret
mov
or
insb
push
lret
sub
xchg
mov
inc
mov
jl
outsb
push
xor
push
fistps
and
icebp
xchg
ljmp
sbb
cld
and
pop
jg
cli
jae
int3
ss
loop
rolb
ret
loope
leave
jecxz
pushf
mov
and
jecxz
add
std
cs
sbb
mov
lcall
fnstcw
fmuls
jmp
stos
dec
in
fldt
aam
aas
mov
jne
cmp
add
pop
mov
cmp
mov
cld
imul
test
add
movsl
bound
mov
adc
in
mov
test
inc
push
neg
imul
adc
cwtl
jns
repnz
add
in
adc
mov
dec
call
mov
nop
pop
loope
pop
push
jle
inc
push
imul
dec
test
popf
mov
mov
inc
cmp
xchg
lods
sbb
dec
test
cmp
mov
dec
inc
pop
add
cmpsb
lock
mov
call
scas
sbb
fldl
jmp
push
je
inc
pusha
sbb
subb
pop
pushl
jl
jne
mov
scas
fstl
mov
sub
movsb
int3
add
cmp
test
cmp
cli
pop
mov
and
aaa
adc
loope
pop
mov
lock
fisttpll
jmp
pop
popf
push
shrb
movsb
push
movsb
out
and
inc
pop
ja
testb
sarb
insl
into
push
and
lcall
test
es
js
jp
aad
rcll
or
adc
dec
fs
es
adc
popl
pop
push
test
cmp
in
pop
inc
lahf
rcll
mov
dec
mov
js
pop
lock
lods
lcall
mov
fiaddl
aaa
push
adc
outsb
inc
bound
jae
push
push
push
mov
enter
xor
in
retw
and
pop
aas
dec
loopne
inc
in
dec
sbb
ret
jl
inc
inc
push
sti
sub
gs
or
jp
pop
mov
push
dec
push
test
sbb
scas
and
pop
or
ret
add
mov
test
xchg
loope,pn
jmp
mov
and
pop
mov
aam
pop
out
aam
sub
push
test
cmp
lock
sub
xor
test
mov
xchg
pusha
fistps
xchg
add
imul
in
cmc
lods
xor
loope
ror
bound
dec
push
xchg
xor
mov
or
ljmp
dec
es
sub
stc
xchg
fmull
cmp
out
and
cld
lcall
lock
mov
xchg
outsl
mov
adc
sub
mov
ja
mov
sub
fistpll
scas
pop
mov
xchg
rcll
fisttps
aas
andb
sub
xchg
sbb
pusha
lret
loop
out
inc
call
orb
test
pop
mov
fstp
inc
fiaddl
dec
aam
mov
cwtl
jg
pop
fcompl
popf
mov
popl
repz
bound
int
loope
adc
inc
movsl
outsb
ret
pop
mov
and
or
jge
pop
sub
dec
bswap
jl
sahf
iret
test
push
mov
les
das
mov
clc
shlb
cwtl
pop
jle
stos
mov
icebp
mov
ja
or
imul
mov
inc
std
sub
cli
dec
addr16
inc
ja
pop
stos
lods
mov
int3
cmp
adc
fstps
xor
mov
js
lods
std
jb
adc
imul
dec
imul
adc
mov
ss
push
lahf
out
lcall
pop
jnp
sbb
iret
mov
scas
dec
xor
les
rolb
fmull
cli
fcomps
out
push
pushf
outsl
adc
addr16
inc
cmp
inc
repnz
aad
mov
lret
or
test
test
outsb
fmuls
mov
shr
add
nop
pop
movsb
jmp
mov
lods
iret
aaa
mov
les
fimull
in
cmp
xor
mov
or
scas
and
fs
imul
inc
test
rorb
dec
out
push
pop
rcrl
jge
fsubrp
sub
ret
pusha
add
inc
dec
shrb
outsl
adc
xor
inc
mov
xlat
stos
xchg
decl
inc
jno
dec
push
push
shl
test
dec
imul
push
adc
inc
mov
mov
push
out
cmp
addb
adc
xor
push
adc
call
inc
xchg
push
or
into
test
xlat
or
jmp
pop
push
fdivr
outsb
fbld
jns
or
stos
in
jecxz
pop
mov
inc
dec
xlat
inc
nop
fldenv
mov
xchg
in
pop
inc
mov
inc
out
cmp
xor
xchg
cmp
fcoml
sub
adc
jge
mov
test
push
add
xchg
dec
ljmp
cmc
shl
sbb
push
xor
jo
sbb
mov
jno
cmp
push
or
xchg
mov
or
in
roll
out
xor
cmpsb
push
mov
xchg
mov
and
out
pusha
in
sbb
xchg
lock
movsl
fcompl
jb
or
scas
inc
aam
push
popf
mov
rcll
sbb
push
jbe
andb
pushf
jg
leave
pop
pop
mov
fmuls
int
int
sbb
push
sub
pop
mov
movsl
cmp
adc
or
xor
and
dec
xor
call
out
add
adc
inc
xor
mov
cld
shl
loope
fnstcw
jae
or
hlt
dec
ret
dec
xchg
jecxz
cmp
mov
in
push
sbb
adc
cwtl
push
pop
xchg
xor
js
add
add
jl
pop
xor
xchg
mov
cltd
add
lock
loopne
inc
jmp
add
data16
iret
insb
dec
jnp
lret
cmp
inc
inc
ja
scas
push
ljmp
push
mov
lcall
inc
push
sbb
pop
push
cld
fdiv
mov
and
mov
out
in
jae
inc
pusha
cmp
dec
fsubrs
pop
sub
in
outsb
cmpl
add
shl
test
sahf
jl
lock
pushl
cmp
xchg
push
mov
mov
fidivrs
cs
or
jns
jb
xchg
xor
aaa
imul
iret
mov
test
cmp
ds
jle
sar
push
cmp
sub
jne
sarl
loope
mov
aas
stos
rolb
insl
pushf
jmp
mov
jge
insb
jl
cmp
jo
add
insb
hlt
xlat
lods
and
notl
notb
xchg
fcoms
loopne
push
scas
popa
jns
orb
fcoms
repnz
dec
push
adc
out
aad
xlat
xor
movsl
jg
push
mulb
inc
es
cmp
push
lods
lahf
and
cmpsl
in
aaa
cmp
pcmpgtd
xchg
dec
push
outsl
jp
xor
int3
sbb
and
xchg
arpl
jmp
popf
popa
cli
mov
cmp
arpl
iret
cltd
cmp
into
mov
add
jmp
ljmp
jo
jae
fiadds
xchg
aas
pusha
notl
dec
jmp
scas
inc
nop
dec
ljmp
rorb
rcr
jb
add
movups
mov
loope
das
xor
push
outsb
ret
cmp
cmpsl
xchg
inc
sbb
push
inc
or
into
insl
rol
xchg
clc
adc
idivl
fisttpll
sbb
das
stos
adc
adc
int
mov
sbb
mov
iret
push
roll
lret
push
movsl
sub
imul
sub
and
pop
flds
sub
sub
push
dec
jb
popf
adc
mov
daa
sti
sub
out
ja
int
outsl
adc
fidivl
mov
sbb
ds
mov
out
push
sbb
inc
mov
mov
sub
sbb
stc
mov
xchg
out
xchg
add
repnz
sbb
outsb
lods
cltd
sbb
push
xor
out
mov
imull
mov
hlt
pusha
lods
xor
mov
dec
std
jne
adc
sbb
xor
jne
jp
loopne
and
jo
cmc
in
in
adc
les
cwtl
push
mov
dec
lock
in
cmc
sub
icebp
jns
pop
jg
popf
sbb
or
xor
dec
rolb
push
push
jg
lret
addb
jg
int
mov
and
pop
dec
and
jle
sub
movsl
out
jmp
gs
popf
pop
xchg
adc
mov
addr16
pop
jns
imul
je
iret
test
add
or
adc
stos
jbe
and
push
cmp
mov
sarl
cmp
jmp
imul
mov
movsl
and
cli
insb
sbb
mov
adc
cmpsb
add
cli
adc
cli
fisttpll
adc
out
push
pop
mov
sbb
rorb
mov
lods
and
xchg
inc
adc
and
daa
aas
insl
js
daa
enter
mov
cmp
mov
ud1
fwait
je
adc
fisttps
jo
scas
adc
into
gs
mov
mov
mov
sahf
loop
rcrb
push
dec
cmpsb
aaa
inc
mov
hlt
enter
mov
stc
decl
mov
pushf
add
addr16
xor
imul
stc
cs
mov
xchg
std
hlt
jnp
mov
mov
inc
lret
or
aaa
adc
out
fs
push
xchg
gs
xchg
push
pop
je
pop
imul
mov
movsl
xchg
test
pop
sbbb
subl
aaa
sbb
jo
push
pop
push
jle
mov
pop
lock
dec
pop
mov
movsb
jmp
cmp
outsb
rcr
inc
pop
xor
or
in
lea
repz
xor
push
and
cld
dec
and
and
jp
push
loop
cmp
adc
loopne
ljmp
std
push
loope
xchg
push
pop
cs
lock
jns
inc
mov
mov
in
jmp
mov
sub
jle
or
addr16
addl
imul
test
or
mov
lods
shll
lock
adc
mov
and
xor
mov
cwtl
cli
inc
jb
ret
or
out
imul
lahf
lret
inc
data16
daa
shrl
fs
insb
pop
xchg
das
clc
gs
add
daa
jns
inc
jge
mov
clc
cld
jecxz
icebp
jbe
inc
inc
dec
pop
loopne
mov
xor
mov
push
shl
cmpsb
adc
push
and
ds
movsb
add
int
mov
dec
pop
pushf
clc
mov
pop
gs
xchg
jge
movsl
and
into
cmpsl
or
xchg
sbb
jg
jg
push
and
push
inc
lock
stos
lock
repnz
fcomps
outsl
pop
in
mov
pop
xchg
pop
sub
push
dec
cmp
xchg
xor
lcall
jle
daa
xor
cs
std
pop
adc
test
mov
fldenv
push
call
or
aad
xchg
or
fdiv
inc
adc
mov
mov
pusha
jle
push
insb
and
jne
or
ds
mov
js
inc
in
leave
enter
mov
loope
scas
fistpll
cmp
cmp
pusha
xor
mov
pop
sbb
cwtl
fdivrl
imul
shrb
jnp
leave
inc
push
or
ss
popf
or
cld
bound
pop
dec
lods
xor
xor
movsl
or
push
xor
pop
subl
test
mov
add
dec
rclb
mov
push
icebp
ljmp
or
sbbl
jp
sub
xorl
aas
std
lods
jb
mov
das
xchg
mov
lcall
cmp
shlb
inc
pop
shlb
or
xchg
mov
sub
insl
inc
pop
cmp
mov
inc
mov
repnz
mov
sub
jle
xlat
test
cwtl
orb
jp
push
popa
loopne
fs
jae
adc
push
loop
loop
fimull
jmp
idiv
or
out
pop
sub
ja
sbb
xor
cmp
lret
imul
adc
sbb
les
sti
repz
xor
and
andb
dec
arpl
fs
sbb
sbbb
xor
fwait
sub
sub
fsubrl
repnz
push
mov
xchg
jge
insb
xchg
jg
pop
or
idivl
shlb
pusha
cmp
test
popf
fisttpl
addr16
in
sbb
mov
xor
loope
adc
scas
pushf
jge
test
push
fistpll
xchg
jbe
sub
aad
xchg
out
xchg
xor
pop
out
mov
pop
jno
pop
push
mov
ret
je
cmp
ja
mov
cmp
adc
or
mov
std
arpl
fistl
add
xchg
ss
push
or
test
ss
xchg
mov
and
scas
enter
adc
push
jecxz
mov
imul
das
cmc
mov
jmp
pop
ret
movswl
dec
mov
mov
mov
test
pop
setl
hlt
push
mov
dec
push
es
push
cmc
jecxz
mov
movsl
pop
out
loopne
push
mov
rcr
adc
pop
std
imul
outsl
lret
nop
vandps
popf
or
scas
fstpl
sbb
mov
pop
icebp
into
in
popf
js
lret
cmc
cmpsb
jns
imul
dec
leave
loopne
sub
mov
out
mov
push
xlat
push
cltd
xchg
xchg
mov
clc
jmp
jno
dec
mulb
iret
test
and
and
adc
inc
repnz
int3
aas
js
sahf
int3
call
leave
cltd
mov
mov
iret
int
push
movsb
and
mov
pop
push
mov
or
mov
daa
outsb
cmp
pop
cmpsb
bnd
sbb
xchg
pop
mov
xor
add
arpl
add
arpl
mov
out
test
xchg
and
out
scas
les
push
sbb
fidivl
push
jmp
cmp
or
or
mov
es
mov
adc
mov
jg
stos
fdivs
test
add
insl
scas
and
cmp
aaa
addb
subb
cmp
sub
lods
pop
adc
in
pushf
fst
pop
repnz
dec
mov
in
jne
imul
stc
cmc
ret
ss
arpl
jg
dec
xchg
push
sahf
cmp
inc
xchg
mov
fucomip
arpl
fmuls
mov
cld
jg
adc
xor
sbbl
push
outsl
sbb
and
clc
mov
aas
gs
xchg
jle
pushf
stc
es
std
stos
jae
mov
and
insl
pop
std
add
repnz
pusha
adc
pop
test
clc
leave
cmpsb
sti
jb
and
in
pop
cmp
popf
cmp
cmp
stos
xorb
pop
andl
xchg
add
jp
pop
xor
enter
mov
and
inc
and
or
mov
outsl
push
sbb
lahf
xor
les
stos
cmp
dec
daa
aas
daa
mov
fistps
jmp
pcmpgtb
pop
fwait
std
xor
ljmp
mov
lock
jnp
xor
orb
shlb
xchg
jns
jl
mov
lahf
cmc
cmc
enter
out
ret
lock
jne
mov
daa
pop
mov
or
rcr
jle
fsubl
xchg
mov
hlt
scas
mov
lock
and
in
push
mov
imul
rcr
test
and
cmp
pusha
cli
fildl
and
repnz
leave
arpl
mov
xor
cmp
fildll
test
add
jl
icebp
jmp
mov
cmp
push
stos
xor
outsb
jmp
push
xor
cmp
xor
jnp
adc
loope
das
sbb
or
or
push
ret
fwait
jae
cmpsb
dec
jg
in
sbb
mov
in
lea
fdivrl
pop
leave
sub
add
push
out
mov
lret
xchg
jns
lcall
xor
sub
les
sarb
aas
fisttps
sub
gs
sahf
data16
loope
cmp
rolb
fiadds
inc
inc
mov
aas
mov
bound
xchg
add
jg
mov
adc
pop
dec
es
std
addr16
xor
xchg
insl
rclb
sbb
out
mov
scas
mov
cmpl
xor
imul
pop
test
cmpsb
pop
out
ret
std
stos
cmp
add
add
cs
das
or
lahf
dec
ret
mov
push
jae
ja
out
outsb
shl
push
mov
xchg
and
push
xchg
xor
and
dec
jne
pusha
lret
or
inc
pop
cmp
in
out
shrb
mov
cmc
fsubl
and
sahf
jg
inc
fwait
inc
lahf
das
pop
ret
add
push
loopne
fsubrs
movb
and
dec
mov
pop
aaa
cmpsb
cmpsl
dec
cmp
jle
sub
xchg
in
sbb
inc
sub
cmp
aaa
jnp
xchg
mov
sub
mov
add
cmp
xchg
inc
aam
and
xor
push
xor
sbb
movsl
lret
test
xchg
or
frstor
shlb
push
pop
adc
leave
push
sbb
mov
xlat
mov
mov
call
lahf
in
cmp
test
cmpsb
xor
js
testb
aam
dec
pop
lea
or
loope
and
repz
pop
insb
mov
sbb
and
lret
pop
stc
sbb
mov
ja
and
cld
push
iret
bound
inc
mov
pop
pop
test
push
into
inc
jecxz
xchg
lret
fisubrl
xchg
mov
push
cmp
fsubrl
sbb
pop
scas
fs
pop
into
fisttpl
push
inc
xor
outsl
std
mov
shl
stc
mov
push
rolb
pop
js
sub
sub
movsl
icebp
adc
and
dec
jp
repz
dec
inc
cmpsl
jl
fcmovb
jle
addr16
enter
clc
pop
sbb
aaa
iret
idiv
lahf
sub
pop
push
dec
test
xchg
dec
sbb
mov
xor
pop
pop
fldcw
jns
jnp
daa
jbe
sahf
add
pop
pop
jno
mov
push
int
out
mov
inc
mov
scas
mov
inc
sarl
movsl
and
mov
scas
dec
sub
fldl
bound
push
fdivs
sbb
mov
cmpsl
cmpsl
sub
push
adcl
sti
rolb
fcomi
mov
scas
mov
and
pop
xchg
ret
pop
out
pop
pop
and
insl
roll
fcompl
mov
in
cld
and
lods
adc
test
insb
jno
push
pop
xchg
pop
icebp
jne
sub
mov
inc
mov
imul
sahf
adc
jle
add
mov
cld
jle
mov
mov
mov
out
fldcw
outsl
pop
pop
pop
push
mov
xchg
xchg
cmp
mov
popa
xlat
fisubrl
dec
ss
repnz
into
mov
sbb
sbbl
dec
stos
daa
mov
inc
or
movsb
cwtl
scas
mov
push
jb
mov
jo
in
in
aad
jnp
dec
jl
cmp
mov
rcll
sahf
fwait
adc
icebp
or
repz
xchg
or
fs
or
outsb
inc
dec
jbe
push
push
mov
mov
xor
pusha
gs
sub
iret
xor
pop
xorl
sbb
scas
mov
pop
and
mov
xorb
mov
cmp
addb
lods
and
add
cmp
push
xchg
in
xchg
lods
sbbb
cmp
dec
push
decb
gs
test
xchg
mov
arpl
adc
mov
test
and
xor
xor
in
cltd
mov
jae
xchg
movsb
pop
rorb
enter
cmp
mov
mov
sub
out
xor
out
enter
mov
js
fiadds
mov
push
mov
test
ret
daa
loopne
and
xchg
cltd
cmpsl
lods
movsl
or
dec
out
lcall
or
mov
sbb
mov
loope
iret
pop
or
sti
pop
leave
mov
cs
imul
mov
cmp
push
mov
jmp
cmpsl
dec
sbb
xchg
stos
adc
cmpsb
pop
aad
mov
data16
lods
scas
mov
or
or
add
pushf
mov
test
pop
pop
rcl
jmp
xchg
jmp
and
in
pop
inc
es
pop
gs
loopne
gs
mov
sub
pop
addr16
cmp
xchg
loop
mov
mov
adc
mov
mov
xchg
cwtl
mov
andb
fmuls
push
insl
nop
lret
mov
inc
push
call
movsl
pop
jl
idiv
and
add
mov
pusha
push
mov
jb
sbb
add
push
adc
xchg
lds
mov
sti
sub
pop
push
rolb
mov
add
pushf
jl
int
imul
sbb
cmpsb
pop
divps
lock
psubw
test
or
lea
sbb
sub
xlat
lea
outsb
clc
push
pop
and
lods
adc
add
int3
mov
xchg
mov
xchg
dec
stos
shll
sbb
push
dec
jb
pushf
out
sub
mov
lock
xorb
inc
ljmp
out
lret
int3
int3
mov
push
addr16
imul
mov
pop
cmp
mov
insl
repnz
pop
xor
push
lahf
js
inc
sti
jecxz
stos
push
and
xchg
xchg
adc
hlt
mov
pop
sti
or
fmul
cmp
push
push
adc
xor
cwtl
fsubs
sbb
add
sahf
orl
push
incl
jle
or
fimuls
cmc
addl
out
fwait
add
pusha
jae
in
cld
jecxz
jne
in
fs
cli
jecxz
sbb
loope
xor
pop
dec
sub
insl
sti
lods
lcall
dec
insb
jg
sbb
insb
test
enter
dec
sbb
push
dec
sahf
rcr
cmp
pop
or
mov
or
stc
roll
leave
cmp
jl
lds
cmp
fisubs
jne
popf
fst
mov
mov
lahf
mov
je
mov
mov
insb
sub
xor
es
cmp
adc
pop
nop
mov
shll
or
push
in
test
ljmp
sbb
mov
jge
stos
jmp
pop
mov
or
jp
push
cld
sbb
sub
fs
push
xchg
pop
loopne
sub
sarl
shlb
outsb
dec
and
jno
loope
cltd
inc
mov
jbe
or
xorb
pop
movlps
bnd
inc
or
push
sub
repnz
test
mov
loopne
icebp
rorl
inc
scas
cmpsb
xor
jae
lods
push
jnp
xchg
push
jb
adc
xor
call
sub
mov
ljmp
mov
inc
mov
or
stos
ret
xchg
or
movsl
mov
arpl
mov
cmp
or
movb
repnz
mov
push
cmp
ss
in
ljmp
mov
xchg
and
lods
mov
adc
jmp
jbe
ret
loopne
int
idiv
mov
inc
cmpsl
sub
cmp
shll
outsl
scas
jns
lock
push
lahf
adc
sbb
mov
test
xchg
bound
jle
clc
xchg
cmpb
mov
adc
lcall
and
xchg
jp
push
cwtl
pop
push
jae
xor
outsb
dec
cs
and
mov
pop
pop
or
or
xchg
mov
lret
sub
push
push
stos
jb
or
repnz
adc
and
sbb
sub
sbb
and
int3
jle
hlt
pop
inc
jb
loop
int3
pop
dec
test
mov
cld
push
test
jg
in
roll
divl
pushl
inc
rorl
sub
loope
or
or
sbb
mov
mov
or
jnp
dec
daa
inc
shrb
inc
mul
push
xor
loope
adc
bound
sub
ds
sbb
clc
mov
dec
push
repz
into
test
ds
pop
icebp
dec
mov
sbb
icebp
movsl
mov
xchg
sub
cmp
jl
and
mov
lcall
adc
or
dec
mov
dec
inc
cmp
add
adc
lahf
sarl
repz
xchg
lret
aas
add
stc
in
sbbl
fs
loope
stos
jb
xchg
stos
or
prefetchw
sti
sbb
xor
jae
xor
inc
sub
ss
or
scas
jb
mov
clc
xchg
fs
jge
inc
adc
mov
sbb
outsb
jo
in
mov
loop
inc
pop
push
sub
xchg
jp
addr16
popa
mov
out
test
mov
xor
sbb
push
mov
and
pop
inc
jmp
adc
inc
and
in
xor
into
test
jo
push
sahf
lret
and
cld
in
aad
rolb
adc
cmp
dec
fsubrs
les
push
or
idiv
cltd
arpl
jne
and
jne
cltd
dec
test
mov
xor
xor
in
push
xor
sahf
pop
sti
mov
inc
pop
cli
data16
or
aas
sbb
adc
mov
rolb
in
stc
sub
dec
add
pop
xchg
ret
adc
movsl
and
fsubs
mov
lcall
std
ret
out
mov
outsl
push
into
stos
pop
jnp
sub
push
in
inc
inc
imul
loopne
fucomip
dec
pop
add
mov
orl
enter
xchg
idiv
adc
mov
rol
js
jne
jmp
pop
ficompl
jnp
not
fwait
or
mov
test
mov
dec
ds
lock
jae
mov
lret
lcall
xor
dec
push
mov
dec
or
cwtl
sbb
clc
sti
cmp
push
notb
xchg
repz
into
cmp
test
lcall
fxch
cmpsl
mov
cmc
fsubrs
daa
mov
mov
add
and
mov
sahf
mov
loope
enter
mov
inc
mov
das
sahf
mov
scas
test
es
bound
into
lret
testl
mov
pop
aam
xor
add
mov
shll
loopne
mov
ret
or
mov
icebp
pop
add
leave
andb
subb
push
xor
test
imul
mov
jnp
and
push
call
jg
mov
dec
jae
add
pop
push
jg
imul
lahf
shlb
test
ret
in
lods
call
adc
gs
dec
jg
addl
stos
jb
icebp
addr16
mov
xchg
sbb
fcmovnu
push
mov
out
inc
minps
mov
mov
lods
xor
mov
mov
out
lods
sub
int
push
push
call
scas
insb
and
adc
ret
xor
cli
mov
xor
ja
or
xor
mov
in
lret
sbb
push
pop
xor
sbb
mov
popf
jmp
dec
add
int
bound
int
loope
stos
test
xchg
pop
fildll
or
addr16
and
sbb
and
in
sub
or
cld
xchg
shl
jnp
xchg
adc
repnz
cs
into
ret
adc
inc
in
imul
fsubrl
out
lret
pop
jns
xchg
fdivrs
ja
fstpl
jno
pop
xor
stos
arpl
mov
pop
fists
iret
pop
outsl
adc
jne
adc
sbb
mov
inc
jne
dec
outsl
sbb
shlb
lods
ret
test
in
sub
cmc
mov
push
jle
xlat
fcompl
mov
jnp
add
jg
sub
add
mov
sub
pop
mov
cmp
mov
ret
push
popa
jnp
stos
mov
iret
jmp
mov
adc
jecxz
xlat
pop
jbe
mov
adc
cli
fcmovbe
add
movsb
divl
mov
xchg
fstl
std
push
jp
cmp
add
cmp
gs
cmp
jl,pt
inc
mov
roll
push
jno
inc
int3
dec
sarl
arpl
or
dec
cmc
divl
lods
pop
mov
das
ds
shlb
lods
repz
dec
cltd
fdivl
push
or
dec
int3
sbb
inc
lea
mov
cld
jo
push
lea
ret
add
inc
out
or
xchg
or
outsb
xchg
test
xchg
xor
enter
adc
and
call
and
lahf
in
sti
mov
sbb
sbb
scas
ret
int
mov
and
jo
addr16
movsb
test
stos
sbb
int
kmovb
insb
push
sbb
cmp
inc
pop
inc
sbb
pop
inc
adcl
lcall
cmp
mov
mov
stos
or
lret
jl
int3
fwait
in
sub
mov
sub
inc
xor
jnp
cwtl
push
sub
dec
sbb
movntq
xor
lret
pop
aas
jp
pop
push
pop
stos
push
add
aaa
inc
xor
out
add
cld
jae
cld
sbb
inc
inc
xchg
in
pop
outsb
jne
stos
add
push
pop
ret
jo
arpl
inc
ss
imulb
push
rcrl
jnp,pn
sbb
loope
fsts
push
call
test
ljmp
pusha
fcomps
out
fdivs
add
out
sub
sbb
xlat
inc
repz
subb
movsb
adc
or
addb
or
push
repz
out
xor
xchg
xchg
pusha
xor
mov
adc
jl
jne
mov
xchg
pop
aas
jle
mov
jmp
cwtl
push
mov
cmpxchg
jmp
push
daa
mov
loop
aad
scas
dec
and
adc
jp
in
xor
jnp
mov
inc
dec
inc
push
shll
imul
icebp
xor
mov
dec
adc
aam
push
dec
jl
jns
out
jno
testb
xchg
jns
adcb
inc
fcmovbe
cmpsb
mov
addr16
jb
cmpsb
jecxz
inc
cmc
popa
cmp
sar
push
sub
push
fldenv
pop
adc
add
pop
cmp
lods
push
rcll
sahf
pop
jns
mov
sbbb
push
mov
out
jmp
and
imul
xchg
add
jbe
mov
stos
int3
shrl
sti
cmpsl
dec
adc
repnz
outsl
push
test
loopne
mov
and
loopne
loopne
xor
or
addr16
clc
xchg
push
or
add
repz
mov
xchg
inc
mov
scas
insb
js
call
xchg
int3
fdivs
jo
in
jecxz
clc
jp
mov
insl
mov
inc
movsl
loop
sbb
sbb
cld
rclb
push
push
negl
pop
pop
insb
mov
push
int
push
add
fwait
xchg
out
cmp
call
jmp
sbb
dec
shlb
and
mov
adc
incl
inc
popf
cmp
add
sti
or
adc
mov
and
mov
jmp
push
aam
jl
popf
enter
fldl
fstl
ficoml
fstps
outsb
orl
jbe
mov
xchg
xor
cli
mov
imul
adc
jp
fiadds
insb
in
add
pop
int
xor
or
sbb
xchg
mov
popa
fsub
push
pop
test
cmp
push
mov
std
loope
adc
and
ljmp
jns
roll
add
jne
cmp
push
out
sbb
dec
sbb
ret
insb
sbb
imul
icebp
and
push
das
mov
xorl
mov
add
cmc
xor
ss
pop
xor
fimull
jnp
rol
arpl
insb
xchg
cmc
mov
daa
or
inc
popa
in
js
stc
push
cmp
mov
jne
add
pop
addl
sub
adc
int3
stos
fsubrl
push
mov
or
xor
mov
dec
push
push
mov
ret
sbb
mov
push
add
popf
add
fdivrl
enter
sbb
popf
cmp
add
jg
mov
push
xchg
and
jp
mov
and
insb
push
inc
enter
jle
gs
mov
and
mov
xor
repnz
jmp
adc
hlt
ret
fwait
cmp
or
lds
stos
push
and
outsl
js
inc
dec
aaa
loop
jno
test
jmp
push
xchg
decb
pop
insl
mov
jnp
jecxz
ds
lret
xlat
mov
xchg
and
pop
dec
inc
xchg
lea
jge
mov
add
jo
push
jns
fucom
xor
stos
add
mov
pop
loope
lock
ljmp
sub
pop
lea
or
lock
mov
dec
adc
loopne
or
sbb
or
les
movsb
xor
inc
popa
cmpsb
add
sub
pop
movsb
mov
pop
xchg
mov
repnz
pop
and
mov
imul
xlat
sub
push
cmp
and
jl
xchg
test
scas
std
mov
gs
mov
repnz
shll
stos
and
call
dec
xchg
pop
jnp
cmpsl
add
push
stos
jle
nop
dec
mov
adc
mov
or
les
fcompl
adc
sub
loopne
test
xor
mov
cmp
arpl
cld
xchg
push
pop
mov
in
jecxz
add
adc
pop
std
int3
iret
pop
ret
rclb
mov
mov
ret
adcb
in
icebp
lea
mov
test
js
mov
jge
nop
ficompl
in
stc
xchg
insl
mov
fstps
sahf
repnz
pop
blci
sahf
call
fstps
dec
pusha
xlat
shll
xchg
repnz
mov
pop
es
mov
xlat
int3
je
jne
xor
bound
mov
fists
mov
jno
test
mov
jbe
jns
adc
ret
mov
mov
in
jae
daa
gs
pop
jmp
xchg
cmc
push
ret
mov
mov
lret
leave
icebp
sbb
popf
rclb
xchg
sti
daa
push
lds
or
insl
sbb
insl
repnz
push
xchg
pop
lods
cwtl
mov
outsl
dec
mov
cmpsb
xchg
stos
cwtl
cmpsb
movsb
xor
jne
lock
in
lea
xchg
aas
pop
lods
push
mov
jecxz
jle
lea
mov
cmc
iret
mov
insb
pop
mov
inc
sbb
sbb
leave
je
sub
dec
dec
adc
outsb
xor
pushf
data16
pop
movsl
xor
movsl
inc
xor
and
call
dec
inc
xchg
xor
popa
addb
lahf
cmp
test
inc
and
addl
rorb
mov
push
inc
fs
xchg
fs
sbb
cmp
jge
pusha
ljmp
test
clc
push
xor
pop
xchg
jge
ss
mov
leave
int3
imul
add
adc
addr16
mov
or
test
xchg
or
sbb
jg
inc
jmp
or
push
outsl
and
cli
in
and
sahf
inc
leave
mov
out
mov
xchg
loopne
es
adc
or
xchg
pop
fisubl
iret
adc
ror
xlat
xor
xlat
jae
ret
xor
lahf
sub
inc
and
outsb
mov
mov
sub
jnp
jne
subl
mov
outsb
ja
mov
fsubr
jmp
dec
repnz
shll
in
popl
fnstcw
jl
mov
mov
repz
mov
dec
xchg
inc
in
repnz
aad
mov
imul
addl
fbld
shl
stc
ret
lret
mov
inc
es
push
mov
movsl
bound
xor
jmp
push
cmp
daa
mov
nop
cmpsb
or
std
fcoms
pop
and
loop
sbb
mov
js
addr16
sub
mov
add
sidtl
push
mov
loopne
pop
imul
pop
inc
inc
inc
inc
dec
add
test
mov
pop
add
mov
into
sti
mov
ret
jo
sbb
adc
and
repz
ret
stc
push
push
sub
mov
iret
xor
mov
or
sub
stc
movsb
mov
pop
pop
setnp
arpl
push
call
rolb
andb
icebp
arpl
roll
iret
es
cmpsb
and
popa
jbe
and
lods
aad
mov
hlt
mov
fcom
and
nop
and
mov
aam
icebp
adc
xor
push
test
mov
lahf
dec
cld
cmp
adc
out
inc
sti
mov
dec
rcr
aas
ja
cmpb
lock
repnz
dec
aaa
fwait
outsb
loop
add
add
out
jmp
gs
test
pop
in
adc
or
lcall
loope
xor
pop
imul
fisttpl
or
add
mov
movsb
out
scas
jbe
inc
lcall
and
xor
shl
ljmp
stos
mov
arpl
iret
fsubs
notl
adc
int3
jns
loope
pop
call
adc
jns
jo
jmp
div
add
into
jecxz
add
pop
push
adc
push
xor
imul
cmp
arpl
ja
jae
jge
xor
push
cmp
sub
clc
icebp
mov
outsl
fsubl
sbb
out
stc
adc
mov
lods
mov
nop
push
mov
mov
pop
rol
and
pushf
pop
hlt
call
cmp
out
xor
or
dec
nop
pop
lea
out
icebp
fwait
pop
movsl
loop
mov
fadd
jo
dec
jmp
loopew
shll
out
xlat
pop
loopne
lods
popa
jmp
lods
daa
fimull
popa
mov
and
aaa
sbb
add
xchg
jg
fsubr
insb
scas
movsb
repnz
lcall
mov
sub
leave
xchg
xchg
enter
int3
aam
aam
imul
push
mov
add
mov
stc
xchg
or
push
test
insl
jb
mov
mov
push
stos
dec
lods
mov
and
pop
aaa
pusha
or
and
std
xchg
sbb
faddl
into
jge
mov
add
je
cmc
adc
mov
xchg
nop
sub
push
rolb
mov
lahf
insl
dec
sti
and
popf
out
mov
cld
push
call
dec
push
pop
mov
call
imul
jno
outsl
xchg
mov
aam
mov
pusha
nop
out
stc
pop
testb
add
std
hlt
cmp
cmp
mov
inc
add
mov
mov
lcall
mov
sub
lods
les
sub
repnz
mull
pop
xchg
lcall
fdivrl
lea
fnsave
jg
loop
fistl
add
ret
aaa
ss
xor
stos
rorb
xchg
push
stos
mov
cli
mov
or
les
pop
aad
and
jmp
lock
cmpsl
in
mov
not
bound
or
out
or
inc
es
sbb
dec
lahf
ljmp
mov
jnp
and
lcall
pop
repz
jno
popa
es
daa
rol
or
push
pop
add
repnz
and
out
cmp
js
inc
adc
fisttpl
rorb
je
cld
and
dec
mov
in
push
stos
addr16
inc
or
xchg
lock
cmpsb
ucomiss
push
pop
mov
pop
mov
inc
sbb
mov
out
xchg
adc
add
lret
out
xchg
sub
xchg
testl
ja
rolb
mov
jge
mov
push
fs
jbe
stc
fldl
rcrb
xchg
jns
pusha
add
nop
mov
push
mov
lds
lods
out
lret
out
lret
sti
mov
out
mov
mov
repz
movsb
sbb
sahf
mov
push
inc
inc
adc
imul
pop
mov
jno
movsb
fwait
mov
mov
outsl
andl
pop
insl
clc
out
and
cli
sbb
cld
pop
rcrl
mov
sub
xlat
mov
outsl
pop
pop
pop
mov
or
fcoml
insl
mov
loope
push
mov
sbb
push
push
push
sbb
rclb
xor
popf
pop
push
imul
call
or
into
int
loopne
mov
pop
in
outsl
or
repz
pop
cmpsb
data16
mov
frstor
mov
add
movsb
ror
adc
negl
shrl
jle
jne
cmp
mov
bound
pop
jne
xchg
stc
shl
sti
outsb
lret
rcll
push
into
adc
mov
mov
mov
lock
jge
loop
push
and
sbb
inc
mov
xor
popl
or
call
sub
imul
scas
js
outsb
jno
fcoms
cltd
cmpsb
mov
jg
insb
lock
mov
lds
sbb
adc
sti
dec
hlt
nop
mov
sbb
sub
repnz
icebp
insb
xchg
scas
mov
jnp
jae
or
nop
sbb
lret
sub
add
push
inc
fmull
clc
call
push
jp
mov
adc
inc
xor
inc
shrl
paddb
stos
push
xchg
int3
in
orl
cmp
insb
subb
js
sub
cmc
test
sarb
or
push
sbb
out
xchg
mov
add
inc
sub
cltd
mov
and
push
int
je
cmc
pop
jg
orl
xchg
sbb
scas
imul
adc
out
ret
mov
jecxz
shlb
cmp
cld
test
sub
aam
jg
test
mov
out
add
test
mov
out
cmp
cmc
jmp
xchg
adcl
ret
adc
push
lods
and
cli
cmp
mov
mov
sub
ret
cmpsl
or
or
mov
xchg
mov
iret
stos
jb
mov
xlat
xchg
sti
xchg
push
outsb
inc
pop
and
and
movsb
cmpsl
or
in
mov
insb
push
xchg
loopne
hlt
xchg
aaa
cmp
mov
bnd
pop
inc
mov
xor
loop
push
das
xchg
and
and
dec
jne
mov
inc
push
and
add
movsb
and
dec
jle
pop
fimull
xchg
ss
ret
sub
mov
inc
sub
popf
mov
mov
xor
inc
fcoms
stc
add
add
cmp
add
xchg
cmp
arpl
pop
pop
pop
clc
pop
scas
mov
fisttpl
mov
mov
in
and
lods
mov
push
jl
sbb
sub
stos
les
stos
mov
scas
xor
imul
add
imul
dec
sti
movsb
adc
adc
fs
das
and
aam
nop
imul
sbb
pop
out
bound
popa
lret
sbb
xchg
aaa
daa
add
ljmp
loope
cmpb
sti
mov
push
sub
ret
in
mov
dec
jb,pn
sub
out
cmp
in
or
dec
inc
minps
lcall
pushf
aam
xchg
fs
test
out
cmp
dec
adc
xor
lret
pop
push
push
sub
mov
push
xlat
aam
xchg
push
xor
or
sub
dec
push
adc
xchg
addl
jge
pop
clc
inc
and
pop
data16
mov
lea
mov
test
leave
ss
push
lds
into
fisubrl
inc
mov
repnz
pop
mov
mov
adc
lret
aam
push
mov
mov
ss
test
nop
pop
int
push
xor
mov
fistpl
sbb
push
ror
enter
roll
insb
xchg
push
lcall
nop
adc
mov
gs
jmp
pop
pop
sbb
inc
mov
cmpsl
mov
xchg
sahf
cmp
xchg
mov
hlt
push
inc
std
test
in
imul
push
dec
or
fldt
rcrl
bndldx
and
pushf
imul
push
xor
test
xchg
xchg
stos
and
insb
ja
mov
sti
jnp
fildll
cmp
dec
jbe
mov
cmp
nop
out
xor
inc
dec
xor
pop
js
repnz
rorw
in
push
sub
jbe
popf
js
rcl
outsb
sahf
orb
or
and
scas
push
aad
stos
mov
mov
inc
imul
xor
ljmp
jmp
mov
das
mov
orl
in
sahf
xchg
mov
in
insl
ret
cmpl
cmp
pop
js
fsqrt
jle
xor
sbb
fiadds
pop
movhps
sub
andl
inc
xchg
adc
cmp
jmp
and
loop
sbb
mov
mov
stos
mov
cmp
mov
add
inc
pop
rcl
adc
push
das
dec
jnp
movsl
jae
pop
cli
sub
lods
jmp
nop
loope
push
mov
out
jno
xor
xor
mov
ret
jecxz
aad
xor
add
out
jp
jecxz
lods
dec
test
jo
sub
mov
pop
fisttpl
sbb
dec
repz
bound
push
inc
fsubrl
push
adc
fldl
inc
mov
xchg
add
mov
dec
mulb
les
aas
xor
ret
repnz
pop
ljmp
or
fcmovbe
gs
hlt
cs
in
fstpl
stos
mov
lock
mov
xchg
fadds
mov
mov
or
cmpl
nop
ds
shll
js
xchg
mov
jecxz
mov
in
in
mov
mov
pop
xchg
jnp
lcall
mov
fiadds
in
pop
pusha
sbb
je
mov
mov
jae
cwtl
inc
inc
imul
arpl
push
nop
dec
lret
outsl
adc
mov
scas
stos
cs
mov
out
inc
rcrb
test
inc
jmp
lret
xchg
jp
lods
mov
mov
bound
in
outsb
pop
repz
pushf
push
sub
in
je
mov
in
dec
notb
iret
data16
jb
push
mov
in
mov
jg
mov
jnp
testb
sarl
mov
leave
ds
mov
cmp
je
mov
gs
stc
sarb
pop
lcall
mov
jp
lods
xor
adc
lcall
and
pop
and
dec
push
pusha
aam
dec
xchg
fs
shll
hlt
fistpll
scas
adc
insb
ss
lods
popa
dec
idivb
js
arpl
popa
pop
jmp
jns
rcl
xchg
sbb
inc
jecxz
fsubr
dec
adc
ffree
cmp
addb
mov
addr16
stc
adc
leave
shlb
sbb
and
jbe
push
pop
out
or
xlat
out
cli
adc
cmp
push
xchg
repnz
add
pop
in
in
and
dec
add
mov
sbb
mov
cwtl
sub
pop
mov
stos
add
inc
idiv
roll
jae
call
popf
mov
loop
int
hlt
int
out
cwtl
loope
jnp
cmp
mov
loopne
mov
mov
fwait
aas
add
arpl
jp
ds
jp
add
in
ret
out
cltd
add
lcall
mov
cwtl
push
cmp
mov
stos
daa
ljmp
jg
cmp
sub
mov
mov
cmp
mov
pop
lods
mov
xorb
aam
xchg
shlb
imul
imul
mov
loope
shll
movntss
cmp
sti
mov
cmpsl
sbb
pop
or
cmp
cmpsb
aaa
and
rclb
or
in
out
push
sbb
ds
imull
sub
enter
pop
push
jmp
mov
jb
pushf
cmpsl
xchg
les
jge
int3
push
push
scas
add
add
cmp
fucomp
enter
loope
or
mov
mov
and
lcall
daa
movsl
nop
loopne
fisubrs
inc
aas
jae
or
push
sub
add
adc
sub
cmp
push
push
push
shlb
lods
jno
mov
jmp
jmp
jle
jl
pop
loopne
lods
xchg
leave
lock
jnp
into
jno
or
bound
inc
andl
add
jl
mov
mov
stos
lret
sub
jle
add
sub
in
inc
pop
mov
out
enter
push
repnz
xor
in
stos
push
fildll
shll
mov
clflush
mov
xor
data16
fildl
mov
fists
ja
cmp
cmc
mov
rcl
sbb
sar
test
xor
push
out
ret
int
mov
jbe
sub
sbb
cmp
and
push
clc
xchg
xor
arpl
shrl
mov
xor
jmp
aas
in
push
pop
xchg
fimull
orl
cmp
sub
insb
pop
ljmp
mov
mov
test
outsb
push
int
enter
push
cmp
psubw
lcall
mov
rorb
inc
jmp
flds
inc
push
lods
cmp
fcmovb
lcall
pushf
bts
out
unpckhps
dec
enter
mov
out
xor
lret
xor
xchg
inc
incb
mov
ds
jns
lods
xchg
xchg
shll
das
clc
xchg
jae
jle
aad
int3
jne
inc
in
fsubrl
lods
pop
jl
scas
hlt
stc
push
hlt
hlt
jg
or
add
or
ja
sbb
push
iret
mov
stos
mov
pop
fcmovu
mov
cmpsl
sbb
dec
into
popf
int
fimull
test
iret
cmpsb
or
das
stos
aad
je
xor
mov
clc
mov
outsl
sub
lea
daa
stos
in
mov
xor
jnp
mov
enter
scas
push
cbtw
xor
fwait
div
add
adc
mov
lcall
xchg
es
pushf
adc
int3
setns
mov
add
aam
push
test
push
inc
jmp
adc
xlat
sbb
pop
lds
add
mov
mov
xor
xor
xor
insb
fisubl
mov
fsubr
add
pop
pop
xor
sbb
push
xchg
mov
xlat
add
mov
leave
sub
outsb
or
ja
rclb
cld
push
or
ret
pushf
sbb
repnz
shlb
pushfw
mov
or
push
mov
inc
lods
and
or
add
outsl
add
sbb
mov
xor
cmpl
cwtl
sbb
add
and
or
jbe
jnp
hlt
pop
and
sbb
iret
xchg
dec
int
cmpsl
push
sbb
jmp
mov
add
imul
insb
js
lds
mull
fiadds
jne
jae
or
cmp
xchg
adc
add
bound
out
adc
popa
popa
movl
or
inc
inc
sub
in
movsb
xchg
and
and
sub
mov
imul
push
psllq
adc
out
sbb
test
outsb
js
cwtl
dec
lahf
call
in
arpl
mov
fs
cmp
aas
iret
scas
push
addr16
repz
mov
cmp
loope
fs
imul
testb
enter
je
fnclex
std
xchg
sti
int3
adc
lea
ficompl
lahf
out
mov
xchg
ja
leave
divl
sub
mov
lcall
xchg
mov
inc
xor
jge
dec
cwtl
sub
mov
jne
inc
cli
push
in
xchg
insl
jne
dec
test
fcmovbe
jae
mov
test
pop
int3
cld
sbb
mov
sub
pusha
mov
mov
jge
jmp
lods
fimull
sub
stc
mov
dec
data16
pop
imul
mov
mov
fstp
fwait
adc
mov
sub
loope
inc
js
bound
cmp
xchg
xchg
mov
sbb
jo
mov
jbe
scas
in
repnz
mov
jnp
sbb
xchg
icebp
popa
xchg
or
and
and
cmpsb
sbb
cwtl
les
sbb
subb
test
add
test
cmc
test
jecxz
dec
stc
push
stos
inc
movsb
mov
add
wrmsr
in
xchg
pop
sbb
pop
sti
cmp
cmp
mov
jl
out
fmuls
mov
std
pop
pop
adc
in
mov
test
mov
xor
les
mov
fmul
into
xlat
add
or
mov
dec
pop
add
jae
sbb
xcrypt-ctr
cmpsl
cwtl
test
xor
stos
jns
dec
stos
cmp
stos
nop
arpl
rorl
subb
mov
ret
mov
xchg
push
mov
sbb
add
mov
lcall
lahf
loope
call
loopne
jg
mov
mov
mov
add
mov
call
jecxz
sbb
test
mov
mull
push
jecxz
stos
popa
std
scas
les
xchg
lea
insl
jmp
cmp
mov
and
out
pop
sbbb
movsl
push
inc
push
in
cmpps
dec
ret
pop
cmpsb
lds
loope
addl
xchg
jmp
sti
in
pop
ret
mov
xor
lods
xchg
outsb
outsl
in
push
fimuls
ds
or
jbe
fbstp
aaa
in
in
cld
xor
xchg
and
cli
and
sub
or
sub
aas
xchg
sbb
jle
int3
aas
outsl
add
lods
and
jae
ret
sub
fwait
out
sub
fninit
mov
cwtl
sti
jl
mov
std
adc
les
mov
int3
js
aam
or
jo
xor
cmc
push
std
jno
jae
sbb
jb
bound
mov
inc
bound
cld
test
aad
jecxz
mov
int
xor
sub
js
shll
sub
pop
imul
in
dec
ss
popa
sub
daa
jg
pop
push
mov
jne
pop
xor
dec
sbb
fs
dec
ljmp
add
xor
sbb
or
xchg
push
add
insl
adc
mov
mov
stos
xchg
sti
mov
jne
mov
sub
push
push
pop
push
cmp
ret
cmpl
cmpsb
rcl
mov
in
sub
sbb
mov
jb
sahf
dec
mov
jmp
push
dec
scas
sub
arpl
imul
mov
and
or
lret
popa
mov
in
adc
std
imul
pop
or
pop
jbe
sub
mov
and
xchg
gs
mov
mov
arpl
cmp
lock
xor
sahf
add
testb
divl
aaa
iret
mov
scas
repnz
fwait
and
push
inc
sahf
jnp
leave
xchg
or
mov
out
leave
test
inc
mov
dec
jmp
mov
pop
cmc
std
call
mov
adc
mov
inc
test
cmc
mov
arpl
pop
pop
mov
ss
aam
jge
aas
add
addr16
pop
dec
jg
fnstsw
and
jmp
push
lret
les
adc
popa
mov
inc
xor
mov
cmp
dec
popf
add
jl
mov
jg
dec
cmp
sarl
sub
jb
daa
dec
int
lret
sub
sahf
scas
push
ss
mov
mov
fwait
pop
adc
or
enter
xchg
out
dec
cmpsb
leave
shlb
push
nop
icebp
mov
repz
xor
je
call
xorb
movsb
cmp
xor
out
mov
xlat
and
sarl
push
xchg
addl
xchg
mov
push
pop
loope
cmp
jno
lds
xchg
xor
dec
outsl
cli
mov
dec
mov
and
loopne
lret
mov
jbe
hlt
imul
adc
aam
imul
or
test
jg
jl
sbb
movl
mov
xchg
xchg
xchg
xchg
jb
adc
jb,pt
outsb
cmc
gs
imul
fsubl
push
mov
int3
cmpsb
pusha
inc
push
mull
test
lea
xchg
lds
jl
add
push
jne
mov
sbb
push
ja
mov
push
cmp
xchg
dec
dec
adc
loop
push
fwait
rclb
add
pop
testb
enter
adc
dec
in
dec
les
inc
imul
jnp,pn
imul
pop
decb
daa
call
cmc
shll
loop
xchg
lea
aam
push
mov
push
loop
mov
test
movsb
fcoml
inc
ds
call
push
xlat
pop
gs
xor
push
hlt
sub
scas
add
jl
pop
jmp
test
ss
push
push
dec
out
ss
dec
push
jns
cmpsb
inc
je
lock
imul
add
cmp
mov
dec
or
int3
adc
jmp
jns
les
cmpsl
data16
add
mov
das
and
ds
sbb
add
pop
xor
cs
shll
jl
push
jne
jno
sbb
xorl
cmpsb
jp
mov
mov
enter
insl
jmp
inc
mov
adc
dec
and
flds
lret
cs
fwait
jmp
or
loop
in
int3
xchg
movsb
xor
push
jmp
dec
mov
pop
daa
jns
pop
inc
aas
les
adc
in
mov
gs
cvtpi2ps
test
mov
and
mov
inc
or
xchg
pop
mov
push
add
ficoml
test
sarl
mov
pop
and
add
push
jp
add
out
cmp
xchg
adc
add
iret
pop
jbe
cwtl
cmp
into
orl
mov
jl
popa
fdivp
push
scas
dec
ror
in
inc
xchg
xor
lods
dec
mov
ja
jmp
test
dec
loope
push
dec
test
sbb
push
push
shl
mov
push
lret
enter
mov
dec
add
cmpsl
sub
mov
cmp
clc
or
cmp
sbb
cmpsb
ret
clc
or
jae
xchg
jbe
or
loopne
and
loope
pushf
cld
or
jns
fiadds
rcr
mov
bound
pop
clc
lret
stos
mov
xlat
imul
dec
cmp
sub
xchg
mov
xchg
scas
inc
add
lea
inc
jnp
mov
jl
lret
lret
dec
dec
push
cmp
sbb
push
pop
ret
out
xchg
ret
and
pop
insb
push
mov
adc
xchg
adc
dec
out
pop
xor
orb
outsb
out
sar
xor
inc
pop
sar
out
mov
mov
mov
push
repnz
dec
cmp
pusha
aam
in
and
xchg
mov
frstor
rcl
push
inc
fists
imul
push
lods
je
scas
pop
cmp
push
test
sub
cmp
in
lcall
negl
in
ret
in
mov
dec
outsl
incl
mov
addr16
xor
in
inc
jo
xorl
mov
hlt
or
add
lods
pop
sub
addr16
lock
dec
cmp
mov
cmpsl
outsl
xchg
aad
in
jo
ds
lgs
push
movsb
and
mov
xor
jle
cmp
fstl
popf
out
sub
add
pop
popa
push
ret
cli
pop
mov
mov
les
popf
mov
jp
mov
roll
loope
leave
add
daa
shrb
xor
daa
dec
add
mov
jp
pusha
arpl
add
jg
pop
dec
add
inc
xchg
bound
dec
dec
nop
mov
cli
dec
nop
movsb
cmc
lods
and
sbb
dec
push
out
aad
std
push
push
lret
cld
insl
xchg
sbb
iret
insl
jge,pn
pop
mov
jmp
pop
out
and
push
mov
shll
inc
xchg
push
jmp
bound
cli
cmp
xchg
repz
aas
xchg
addr16
jl
cld
sarb
cs
dec
jmp
xchg
xor
subb
and
insl
add
shrb
push
xchg
or
mov
mov
cmp
popf
mov
ljmp
push
xlat
push
xor
jno
cmp
jl
mov
addr16
jmp
test
in
mov
xchg
outsb
xor
in
cmp
jno
imul
in
sub
int
test
lea
pop
xor
pop
or
frstor
cmp
xchg
pop
lcall
and
cli
pop
pop
subl
push
add
rcll
sti
call
es
push
insb
test
sbb
mov
adc
mov
pusha
add
rcll
mov
ror
sbb
inc
inc
pop
push
xchg
insl
fmul
dec
fs
out
dec
add
stc
lds
cmp
adc
imul
sahf
dec
outsb
dec
xchg
inc
cmp
lret
jo
iret
mov
jo
sti
xchg
jne
repz
pop
push
mov
iret
push
push
out
int3
enter
xlat
jl
xchg
test
jo
out
and
ja
in
or
inc
cs
cld
fs
cmpsb
lcall
lgs
pop
rol
push
lret
pop
mov
fmull
and
or
imul
not
adc
pop
je
jp
ret
popa
arpl
mov
out
pop
push
sbb
or
pop
adc
dec
mov
mov
repz
mov
mov
push
xor
mov
fwait
xchg
out
das
adc
or
mov
punpckhbw
repz
rcrb
pop
sbb
mov
inc
and
outsb
cmp
les
pop
repz
mov
fs
lret
mov
bound
cmp
in
jns
pop
push
sub
mov
mov
out
lds
push
or
sbbb
cmp
push
inc
inc
add
xor
sub
int3
or
sbb
mov
sbb
pop
sbb
mov
fcomps
and
sub
jge
sbbb
push
into
es
adc
xor
and
jne
scas
call
popf
mov
adc
mov
xor
mov
xor
inc
inc
pop
jle
add
sub
fisttps
add
jo
cli
in
jl
xchg
test
or
pushf
test
imul
pop
sbb
icebp
imull
jne
inc
fxch
test
mov
inc
sbb
out
sahf
in
aaa
push
pop
stos
adcb
movl
adc
jbe
inc
pop
movsb
cmp
xchg
jne
sbb
repz
ds
sbb
adc
icebp
inc
lods
fdiv
adc
pop
or
push
and
xchg
in
imul
xchg
dec
mov
test
dec
xor
test
dec
popa
dec
clc
shrl
fnstsw
cmp
cmpsb
pop
fidivs
jg
incb
inc
fwait
mov
mov
pop
mov
cmp
pop
imul
vpopcntw
xchg
leave
ret
push
jg
cmc
inc
xchg
jl
sahf
inc
mov
mov
sub
aaa
jecxz
data16
pop
shlb
int3
jne
je
sub
jmp
flds
popl
or
std
scas
mov
outsl
cli
inc
jo
xchg
rcrl
adc
or
xchg
mov
jmp
cmpsb
pop
xchg
jne
cmp
les
jl
divps
jne
cmp
sub
push
push
sbb
pop
lahf
das
pop
push
xchg
insl
adc
dec
ret
icebp
jnp
clc
rolb
add
in
bound
jg
push
lcall
scas
ffreep
pop
inc
xor
aam
push
popa
cltd
shlb
push
aas
push
and
movsl
xchg
ja
mov
inc
pop
test
jbe
adc
pop
scas
test
outsl
pop
pop
adc
rorl
inc
and
push
outsl
jb
lcall
mov
dec
xchg
add
popa
sbb
rcl
and
jle
mov
jb
cmc
mov
mov
add
add
cmp
mov
movsb
xchg
jp
sti
and
jbe
push
stos
sti
mov
mov
dec
pusha
lret
push
popf
sbb
movsb
mov
outsb
sub
lock
ja
dec
lock
jb
xchg
adc
jno
fists
addr16
or
fsub
adc
fs
test
insl
jno
adc
iret
daa
shrb
add
jo
mov
dec
push
mov
hlt
push
push
stos
xchg
xchg
mov
lock
jbe
or
adc
fnstsw
xchg
out
mov
push
dec
popf
mov
push
cmp
lods
popa
push
das
popl
xchg
or
xor
je
or
dec
aas
mov
jb
mov
fcomps
mov
addl
dec
imul
aas
cs
arpl
jb
pop
cmpsb
push
fstpl
jbe
or
rcrl
mov
inc
or
xchg
mov
push
movsb
mov
ljmp
mov
jb
push
ret
loope
cmc
mov
jae
stos
sub
negl
into
fucomip
pushf
sarb
jo
add
fsub
cmp
sbb
push
ret
insb
addr16
loop
add
mov
mov
ret
lret
test
add
dec
mov
mov
and
shr
scas
sub
jge
inc
pop
sbb
mov
leave
loopne
add
fisubrl
xchg
fs
icebp
es
adc
enter
fisubs
mov
dec
test
xlat
sub
mov
pop
lods
sbb
imul
push
mov
loop
xchg
cmp
fisttps
xchg
je
sahf
imul
jg
in
xchg
jbe
lods
fisubrs
dec
jmp
out
jl
lcall
sarb
and
mov
imul
outsb
xchg
outsb
lods
mov
xchg
loopne
mov
sahf
sbb
ss
fwait
mov
inc
inc
jg
insb
jg
enter
pop
xorl
pop
bt
inc
pop
mov
mov
fadds
push
nop
add
add
mov
and
call
jmp
sbb
int
ret
popfw
popf
push
inc
inc
test
adc
int
dec
pop
lret
inc
xchg
insl
cmpsl
inc
ss
adc
push
stos
sahf
ret
filds
out
xor
pop
in
sub
mov
sbb
xor
scas
sbb
in
out
aam
mov
arpl
jle
cld
dec
rcrb
mov
or
push
inc
xor
arpl
lods
xchg
pop
frstor
push
jnp
push
stos
cmp
lcall
cwtl
and
rorl
adc
push
sarl
out
cmc
test
xchg
dec
dec
push
ss
xor
push
xchg
aam
add
push
repnz
ret
add
sbb
xadd
xchg
aaa
movsb
aad
loopne
loope
push
mov
fimuls
cmp
ss
sub
or
jmp
leavew
add
mov
add
int
lods
mov
mov
lea
jo
in
and
dec
daa
or
or
push
mov
in
iret
ss
sub
cld
mov
stos
rolb
sub
pop
inc
loopne
push
cwtl
icebp
xor
dec
and
mov
dec
mov
and
es
push
add
loopne
jno
jo
and
mov
mov
mov
cmpsb
pop
cmp
sub
mov
add
jg
in
or
jb
add
mov
pop
jne
inc
jl
mov
ljmp
gs
add
sub
mov
in
int
repnz
neg
pop
insb
sti
inc
push
push
inc
mov
clc
movsl
dec
or
xor
loop
mov
mov
lock
sbb
test
outsb
or
mov
pop
lds
call
cmp
sahf
enter
push
in
fsts
aad
cmp
fnsave
movsl
xchg
pop
dec
jno
std
jno
push
rcll
mov
insb
shlb
dec
xchg
enter
or
test
push
inc
push
mov
enter
sbb
test
xor
push
test
movsb
mov
inc
popa
jno
cmp
roll
sbb
lcall
xchg
fisttps
dec
adc
aaa
call
shlb
jl
jecxz
loopne
iret
mov
adcl
nop
jo
pop
sbb
inc
inc
sub
jbe
rcrl
add
aad
adc
fists
mov
cmpsb
cmp
mov
sub
lock
es
pusha
dec
jns
js
sbb
push
dec
sub
fsubl
dec
mov
pop
int3
cli
mov
xor
pop
adc
and
pop
gs
lea
xor
xor
fld
and
jl
outsl
push
cmp
in
push
push
xor
inc
cmp
rolb
out
aad
aam
into
adc
loope
in
cmp
mov
pop
or
xchg
out
push
testb
pop
jle
or
lods
add
fistl
in
push
jp
xchg
dec
jge
pop
into
js
push
cli
push
out
mull
loopne
and
inc
pop
aas
jo
ret
lret
xor
cld
outsb
inc
hlt
aas
leave
push
cmp
int3
pop
inc
mov
sbb
mov
xchg
test
adc
das
out
lods
lods
sarb
into
add
aas
pop
test
xor
push
adc
mov
xor
nop
jge
push
cwtl
lea
repnz
push
popf
lret
xchg
lods
dec
lods
sub
add
pop
mov
int3
aas
jle
pop
cmpsl
cmpsb
je
push
mov
dec
pop
push
je
or
ret
movq
lcall
pop
mov
lods
cmp
stos
outsb
and
or
addr16
in
cld
out
sbb
xlat
mov
or
xor
jecxz
in
mov
and
xchg
jecxz
andl
dec
push
imul
fs
xchg
mov
loopne
jae
sbb
aam
lods
imul
ret
dec
lods
leave
jle
ret
xor
adc
iret
mov
into
div
mov
mov
daa
movsl
pushf
subl
es
jb
pop
adc
jmp
push
data16
in
pop
pop
test
push
js
pop
mov
in
sbb
xor
jecxz
mov
pop
dec
pop
cmpsb
and
leave
or
icebp
pushf
push
popl
in
xchg
leave
nop
xchg
aad
test
xchg
mov
testb
clc
or
ja
rclb
sbb
mov
push
sbb
adc
push
mov
dec
decl
mov
cltd
mov
mov
mov
rol
inc
mov
adc
aaa
push
jmp
and
mov
push
lock
jge
outsl
loop
int
bnd
push
rorl
dec
fnsave
xchg
testl
xchg
test
js
decl
adc
mov
lods
test
bound
jne
adc
incl
fcmovne
or
jmp
insl
out
xchg
loopne
in
leave
ja
cmp
push
cmp
stc
dec
inc
test
jns
cmpsb
cltd
fstl
push
push
test
iret
scas
mov
and
cmpsb
pusha
xchg
lock
add
push
orb
mov
and
clc
test
xlat
sub
in
scas
enter
lods
dec
xchg
fwait
sbbl
push
sbb
clc
in
pop
pop
and
or
push
mov
xchg
bound
cmp
stos
rcll
ret
xor
enter
cmp
jns
outsl
hlt
xor
xor
mov
push
insl
mov
cmp
out
fidivs
fadds
in
mov
push
stos
lds
dec
and
mov
mov
jno
add
rclb
cmp
sbb
lods
fstpl
lods
inc
and
xchg
sar
jmp
shl
mov
xchg
inc
fsubrs
mov
xor
mov
mov
into
push
dec
xor
les
loopne
jns
pop
insb
jmp
loopne
enter
movsb
sub
pop
ret
and
xchg
xchg
cltd
mov
test
addl
mov
mov
add
decl
mov
into
mov
clc
out
sub
jp
cld
or
xchg
and
pusha
rcr
cmp
and
pusha
insb
mov
jae
inc
cld
gs
adc
pop
inc
xor
andl
je
outsl
ss
dec
in
jmp
adc
push
xchg
jmp
in
xor
mov
ss
test
jns
adcl
rcrl
jl
test
mov
jno
bound
decl
push
push
dec
test
mov
push
or
pop
and
jnp
je
cli
ss
imul
mov
ja
jp
lcall
filds
rcr
popa
out
cmp
popf
mov
adc
inc
lcall
je
inc
mov
pop
mov
lret
mov
jmp
leave
rcrb
lret
lret
ss
push
stos
mov
dec
mov
mov
test
loopne
outsb
leave
test
cmpsl
scas
test
mov
push
or
mov
cld
lret
dec
loope
cwtl
cmp
push
push
mov
mov
lods
sub
mov
push
lods
outsl
push
push
fbstp
mov
ljmp
mov
sbb
lods
insb
xor
sub
push
inc
xchg
adc
inc
arpl
aas
outsl
sub
cli
outsl
in
and
and
mov
adc
push
push
mov
ret
cmp
and
icebp
icebp
bound
ljmp
pop
imul
cmp
out
inc
jne
iret
fdiv
js
ficompl
call
jns,pt
cmp
push
adc
test
cmpsl
mov
mov
sarb
push
fstl
inc
push
pop
and
pushf
xchg
add
xchg
cs
mov
jnp
in
adc
cltd
cmpsb
sbb
and
imull
lcall
fimuls
aam
sub
xchg
mov
mov
lahf
xor
aas
xor
mov
lds
mov
int3
add
push
inc
mov
stos
cmc
inc
aad
stc
cmp
sub
stc
mov
cmpsb
cmp
dec
sarl
call
pop
fs
out
jmp
adc
inc
insl
xchg
push
fldenv
lret
mov
mov
or
push
cmp
mov
outsb
push
mov
sahf
push
stc
clc
in
enter
jae
sahf
shrb
loop
imul
push
arpl
jns
xor
rcrl
es
or
adc
clc
in
call
or
xlat
jns
sub
sub
mov
xlat
lock
mov
adc
repnz
inc
imul
push
xchg
pop
xchg
xor
bound
out
aaa
das
shlb
cmc
mov
sub
mov
xor
test
jae
sarl
aas
je
push
ja
sub
lcall
mov
inc
inc
and
inc
cmpsb
inc
push
or
sahf
aas
sbb
das
outsl
mov
fdivrl
clc
sahf
in
mov
in
out
inc
fnsave
mov
inc
call
mov
fisubs
dec
pop
pop
scas
in
jns
add
pop
dec
push
addr16
xor
mov
mov
ja
add
adc
fsub
out
jae,pn
mov
es
xchg
ror
push
or
pop
push
xor
push
sub
dec
xchg
or
loopne
pop
lret
stos
gs
mull
int3
out
sub
dec
pop
pushf
and
das
into
jge
bnd
mull
or
icebp
push
jg
stos
mov
sub
jne,pt
sti
test
sbb
jmp
imul
sbb
dec
lea
xor
fidivrs
mov
xor
imul
dec
sub
pop
xor
cwtl
insl
outsb
int3
stos
ja
xchg
out
or
fdivrs
fdivl
and
out
out
lods
andl
cli
inc
or
test
or
stos
pushf
daa
jecxz
adc
mov
xor
stc
pop
arpl
pop
insb
je
push
test
scas
fcomps
repz
pop
movsl
mov
movsb
lret
ror
rorb
lcall
push
call
and
ret
pop
inc
and
inc
xor
mov
jne
scas
into
pop
imul
bnd
xor
lea
mov
inc
aas
fisttps
aam
mov
lock
mov
loope
or
and
mov
push
add
or
sarb
xchg
mov
jp
adc
xor
ss
test
sub
lahf
or
jl
push
lods
out
scas
push
in
outsl
sti
rclb
xorl
icebp
jp
cmovs
mov
les
jmp
sub
cli
out
mov
gs
pop
aaa
cmp
aam
and
subb
pushf
push
sub
cmpsl
outsl
insl
das
pinsrw
jno
adc
outsb
adc
out
test
mov
or
mov
adc
jp
sub
inc
test
jo
mov
lock
test
dec
adc
scas
lahf
inc
adc
lahf
stos
xchg
lods
pop
xchg
pop
adc
xchg
sub
rcrl
add
cmp
add
pop
push
int
pop
pop
icebp
sub
jp
mov
sbb
push
std
les
insl
es
stos
add
mov
es
in
sti
pop
int3
xchg
lret
lahf
dec
sub
icebp
xchg
mov
inc
xlat
scas
rol
pop
pop
sub
push
sbb
add
outsb
test
add
jno
clc
inc
fistps
fcoms
pop
add
call
pop
sbb
ja
dec
cmc
mov
push
and
pop
movsb
roll
inc
mov
cltd
or
mov
in
jne
icebp
out
es
jbe
daa
dec
int3
cld
lods
cmc
push
ljmp
cmp
push
ss
pop
dec
inc
push
or
out
ds
mov
lret
mov
or
jnp
fucomi
pusha
adc
cmp
or
test
addl
dec
les
mov
aam
pop
int3
pushf
movsl
mov
xchg
imull
inc
mov
cmp
adc
mov
mov
lret
fwait
mov
push
sbb
rolb
lea
dec
mov
sarb
xor
mov
call
aam
cmpsl
sub
jmp
cmp
push
jecxz
lahf
mov
fldt
pop
xchg
mov
sub
xchg
fildll
xchg
mov
or
into
mov
add
lahf
imul
lahf
jmp
pop
mov
push
add
lret
neg
lock
mov
xchg
push
pxor
movsl
cmp
sbb
mov
mov
push
ds
dec
cmc
data16
data16
adc
add
out
sahf
mov
loopne
cmp
call
or
mov
fwait
lcall
pop
xchg
cmp
das
fldt
leave
negb
mov
popa
mov
or
stos
lds
int3
out
mov
push
sbb
icebp
fldenv
jo
push
lds
mov
inc
dec
cwtl
xchg
cmp
popf
das
fldl
popf
add
outsl
fidivl
sub
xor
divb
data16
or
xchg
or
xchg
cmpsl
pop
in
add
imul
and
or
mov
imul
popf
shrb
push
lea
call
mov
stos
push
xorl
addr16
add
jnp
orb
jp
cmc
loope
into
lcall
adc
adc
mov
test
rcr
push
push
cmp
or
mov
or
xchg
imul
xchg
rolb
push
out
adc
cmpsl
xchg
sbb
lret
icebp
cmp
pop
lret
adc
stc
divb
push
xorl
les
andb
loope
data16
cmp
dec
aam
jecxz
add
fisubrs
data16
mov
mov
imul
jg
dec
lea
dec
cli
push
into
lods
data16
int
jne
inc
into
sahf
incl
mov
outsl
push
xchg
ja
fdivs
sub
lds
inc
jns
push
dec
push
sti
and
mov
movsl
sub
cwtl
xchg
pop
adc
xor
adc
lret
or
idivb
ljmp
inc
adc
lea
icebp
call
mov
jl
xchg
dec
imul
sbb
in
fwait
xchg
and
cltd
dec
mov
adc
and
bound
mov
lods
xor
cvtpi2ps
or
pop
jae
adc
push
rorb
stos
das
or
push
mov
test
jns
inc
jmp
xchg
movsl
out
jge
call
cmc
push
fbld
mov
mov
jl
jae
sbb
lret
mov
out
je
fnstenv
or
xchg
andl
ss
movsb
loop
aas
add
stc
js
or
lea
cmp
loop
shrb
sahf
jo
arpl
jge
lods
test
jmp
cmp
add
add
dec
sbb
push
and
add
jo
repz
dec
push
xlat
rorb
test
and
cmpb
jg
fildll
xchg
sbb
xchg
ljmp
lea
shlb
pop
xlat
cmpsb
icebp
lret
pop
xchg
test
add
test
lock
das
test
add
loopne
scas
jecxz
xchg
cs
add
adc
iret
push
faddl
fnstenv
inc
or
aaa
sahf
ss
pop
mov
fs
add
xchg
xchg
jmp
jo
sub
icebp
outsb
or
mov
incl
inc
addr16
and
test
xchg
sub
mov
lea
xor
dec
pop
inc
xchg
std
cmpsl
orl
or
mov
fwait
pop
and
cmp
xchg
clc
int3
out
and
pop
out
push
sahf
lret
je
stos
push
gs
xor
or
faddl
out
dec
dec
dec
xchg
scas
rclb
jmp
js
xor
repz
lea
pusha
std
dec
in
push
mov
push
jno
pop
lcall
lea
pop
rcrb
mov
jo
popf
mov
xchg
mov
cmp
lods
lret
jg
jmp
or
cmp
jmp
ljmp
mov
xor
xor
sub
sbb
mov
and
sbb
std
pusha
dec
and
in
outsb
data16
mov
mov
cwtl
shrb
jno
adc
jge
add
and
inc
mov
loopne
jnp
sub
popa
dec
xchg
mov
xchg
sarl
cmpb
or
inc
ret
call
fs
xchg
adc
mov
stos
adc
fwait
mov
insb
out
jmp
jp
mov
sbb
addr16
mov
aad
add
popf
or
add
jmp
std
cmpsb
push
jmp
repz
xor
push
outsb
aas
add
sub
mov
add
sub
insl
fimull
movsb
jb
push
jle
dec
add
loopne
inc
test
jo
aam
incl
arpl
stos
fs
popa
in
add
push
mov
inc
inc
mov
insb
pop
std
sbb
fwait
addr16
je
jecxz
fwait
ret
nop
push
push
out
in
daa
xchg
lret
loopne
xor
xor
or
cmpsl
xchg
int3
pushf
or
sub
push
dec
xchg
imul
stos
rcr
inc
add
mov
inc
fistpl
fcomp
js
add
cmp
mov
dec
add
push
and
cmpsl
std
sbb
or
add
cmpsb
lcall
test
imul
jmp
inc
jb
loop
xchg
mov
negb
dec
pop
push
cld
outsl
call
daa
jmp
rclb
outsb
cli
popf
movsb
xlat
mov
lock
movsl
loope
ds
clc
push
dec
out
pushf
mov
adc
or
enter
aad
mov
mov
pop
lock
and
in
pop
add
push
sub
mov
dec
mov
sahf
mov
xchg
nop
int3
push
fdivrs
xlat
out
inc
aaa
outsl
mov
ds
mov
xchg
jmp
adc
mov
clc
lret
adc
je
jge
lea
mov
mov
shrl
inc
add
addr16
bsr
icebp
xchg
pop
and
sti
stc
pop
ficomps
ljmp
push
cmc
jge
xchg
popf
push
test
add
cmp
lcall
movsl
mov
scas
daa
icebp
pop
sub
pop
jle
mov
mov
fbstp
outsb
addr16
push
sbb
mov
and
enter
sub
int3
das
mov
cmp
sahf
xor
outsl
xor
push
mov
xor
pusha
out
rorl
xor
shll
ljmp
inc
or
ds
lret
clc
dec
fcoml
mov
inc
int
dec
test
or
mov
scas
sub
jne
push
sub
ret
inc
cmp
adc
or
cmc
repnz
adc
sub
cmp
push
cmp
mov
jecxz
xchg
lahf
stos
xchg
mov
jno
or
ret
leave
shrl
sbb
cmp
jbe
daa
in
xchg
and
jnp
jne
ja
test
ljmp
sbbl
fdivl
or
dec
push
bound
sub
rclb
je
shlb
popf
movsl
cltd
sbb
shlb
jp
out
xor
gs
test
cmp
push
sub
or
lods
enter
mov
push
stos
lcall
push
fsubs
aam
mov
out
clc
jo
sbb
pop
jp
pop
fstps
scas
movsb
outsb
xchg
out
cmp
pop
clc
in
adc
lea
inc
inc
and
sbb
cmpsl
fadds
sub
in
jmp
mov
clc
cli
xchg
push
test
in
stos
fistps
adc
sbb
push
cmp
jmp
int3
aam
xor
xchg
mov
or
add
fcmovbe
and
cld
push
fbld
cmpsl
xchg
adc
jge
aaa
or
push
inc
push
mov
xchg
mov
test
popa
push
dec
test
cmp
mov
ja
dec
push
fisubs
mov
and
adc
sbb
dec
and
pop
in
lret
test
arpl
lea
xor
push
imul
push
adcb
jecxz
pcmpeqw
jp
leave
pop
ret
in
repz
or
add
inc
std
jo
xor
sbb
lds
mov
std
mov
mov
jbe
xchg
es
sub
in
fimuls
test
cmp
je
mov
stos
sbb
pushf
lcall
leave
popa
inc
vpcomfalsed
pushf
std
push
or
fidivl
mov
xchg
xor
xchg
fwait
push
jnp
push
adc
mov
nop
mov
in
xlat
pop
xchg
xor
mov
iret
pop
pop
cld
loop
inc
and
xchg
cmp
lret
cmp
and
cs
sbbb
subl
icebp
outsb
pop
push
pop
and
rcll
loope
mov
add
insl
push
movsb
or
xor
mov
js
sub
sub
cwtl
and
outsb
in
jmp
xchg
push
sub
mov
inc
xchg
stc
imul
pusha
sti
adc
mov
mov
cltd
rorb
mov
gs
xchg
sub
xlat
and
mov
push
sub
imul
sbbl
movsb
jae
aad
aaa
shlb
add
popl
je
in
movsl
fsubs
mov
out
repz
mov
and
aaa
mov
gs
jmp
sahf
inc
cs
ret
lds
add
mov
popa
dec
adc
aas
cmp
dec
and
mov
movsb
xor
hlt
and
mov
in
sti
and
inc
xchg
sbb
mov
cs
jne
cmpsl
addr16
inc
xchg
ljmp
jmp
or
popa
pop
pop
mov
mov
sbb
dec
sub
pop
mov
sub
scas
sub
pop
inc
inc
jb
xchg
test
icebp
pop
mov
rcrl
adc
scas
aas
aaa
mov
out
ds
cs
call
rcl
cli
mov
jp
xorb
movsl
fs
fsubp
aam
cmp
or
mov
pop
cmovae
sub
shlb
sbb
sbb
out
shll
and
lret
add
in
sbb
mov
pop
ret
rcrl
sbb
pop
dec
imul
pop
pop
mov
lods
jmp
les
stos
add
xor
rolb
fimuls
xor
jmp
bound
sub
pop
xor
enter
gs
add
lahf
xor
add
je
nop
cmp
fsub
mov
insl
mov
mov
leave
jae
imul
mov
mov
test
or
out
pop
mov
imul
leave
sbb
dec
adc
and
movsl
sbbb
and
add
mov
test
popa
mov
mov
lds
mov
imul
push
lods
and
pop
pop
les
fisubrl
test
mov
push
sbb
out
add
int3
stos
xchg
push
pop
dec
push
push
sahf
add
cwtl
pusha
xchg
pop
aad
sar
xchg
jg
xor
sub
or
adc
jmp
ljmp
je
sub
add
repz
arpl
icebp
pop
pop
es
jp
or
xor
outsb
incl
loope
sti
dec
cmp
ret
inc
pop
xchg
lods
and
enter
outsb
adc
or
loop
xchg
ja
fimull
mov
adc
daa
sti
mov
fisubrs
add
pushf
push
loop
jnp
and
xlat
stc
cmp
imul
aas
dec
movsl
sti
mov
cltd
mov
in
sbb
jge
mov
jo
push
shlb
cld
les
mov
js
out
jbe
xchg
xor
add
imul
and
mov
push
pop
call
int
bound
cmp
ds
int
sbb
shrl
add
xchg
jl
or
aad
or
stos
rcr
pushf
out
dec
inc
push
or
and
hlt
test
scas
jle
lock
stc
or
pop
mov
bound
xor
lea
sti
push
inc
xchg
fdivs
or
je
bound
in
dec
outsl
cmpsl
push
iret
lret
fmull
iret
lods
ja
mov
jo
jae
ficoml
sbb
loope
push
cltd
outsl
inc
pop
test
mov
adc
xorl
sbb
cs
cmp
push
imul
movsb
inc
add
gs
xor
mov
bound
imul
arpl
cld
scas
pop
sub
repz
or
mov
adc
dec
mov
in
jl
xlat
movsl
dec
inc
out
pop
es
xchg
inc
popa
repz
pop
repnz
pop
idivl
xor
or
cmp
dec
aaa
gs
call
ficompl
arpl
cmp
lret
jno
push
sub
jns
mov
xchg
sub
cmp
push
xor
pusha
clc
iret
aad
fldcw
jmp
or
lcall
push
mov
lahf
ja
xor
arpl
inc
push
sub
jnp
aas
jmp
mov
pop
jbe
mov
in
mov
pop
or
xor
xor
jmp
cltd
jbe
sub
sub
ret
push
cmp
cmp
inc
addb
xor
jb
cmp
out
shlb
scas
incb
aad
cmpsl
inc
pop
lds
xchg
les
mov
fisubs
and
xchg
push
inc
cmp
add
push
sbbb
mull
mov
aas
faddp
pop
test
iret
bound
xlat
inc
test
outsb
bound
shlb
xchg
xchg
mov
fisubl
aad
or
xor
mov
push
pop
filds
cmove
cmc
sub
je
repnz
add
clc
dec
or
jbe
dec
add
stc
lods
cltd
scas
dec
dec
stos
xchg
adc
ret
pop
inc
int3
lret
inc
int
mov
jno
push
pop
out
scas
mov
movsl
shll
out
push
mov
cmp
add
cmpsb
sub
ss
jae
mov
mov
sbbl
push
je
sbb
fldl
jge
adc
jl
sub
xchg
sub
adc
sub
out
iret
mov
mov
inc
xchg
sbb
push
xchg
inc
mov
lods
push
jle
fbld
insb
push
int3
in
pop
pop
sub
js
and
jecxz
dec
stos
mov
cwtl
and
cwtl
push
daa
addr16
jo
psubd
mov
xchg
inc
scas
sbb
fwait
push
inc
adc
lods
or
mov
es
push
cmp
mov
out
iret
js
ja
scas
dec
jg
cmp
sub
not
push
sub
and
out
shlb
pop
push
lea
cmp
xor
imul
leave
out
lret
xor
cmpsl
out
add
mov
roll
movsl
dec
jno
iret
gs
rclb
test
rcrb
mov
pop
mov
mov
in
comiss
cltd
push
jbe
jl
mov
mov
addl
fdivrl
popa
sbb
ljmp
or
push
sarb
popf
pop
loop
mov
popa
and
les
rcll
jl
lcall
jle
xchg
jp
arpl
add
imul
push
cld
add
mov
lret
pusha
push
rorl
xchg
movd
pop
sbb
xor
test
adc
sbb
add
sarb
lds
jg
sbb
jle
in
inc
sbbl
jbe
pusha
add
add
xchg
jg
pop
inc
dec
push
loopne
mov
jnp
lcall
add
inc
dec
test
hlt
in
push
fcomps
xchg
jne
inc
faddl
mov
sbb
or
dec
stos
mov
pushf
popa
and
or
and
push
mov
js
mov
push
sarb
or
je
mov
cld
js
cld
out
xchg
sub
ljmp
into
xchg
shll
mov
hlt
add
sub
stc
test
mov
mov
shll
or
xor
mov
mov
aad
cltd
pop
xchg
ss
xlat
mov
daa
sbb
cld
mov
mov
pop
push
xchg
test
jns
mov
mov
sub
gs
stc
les
xchg
loope
ss
mov
inc
call
in
outsb
inc
pop
xchg
cmp
es
xchg
xchg
lret
xor
xchg
and
pop
addr16
aaa
rolb
daa
aam
mov
and
inc
xor
pusha
mov
ja
test
gs
in
mov
insl
aas
daa
jmp
xchg
mov
ret
jmp
stos
xlat
and
xchg
mov
pusha
add
inc
push
pop
test
testb
push
lahf
out
adc
lcall
lahf
rcll
xor
jne
mov
mov
sub
mov
aam
xor
mov
test
cmpsb
int
jge
adc
or
mov
and
mov
or
mov
jmp
in
and
push
adc
jbe
jnp
push
mov
push
test
sbb
test
aad
lret
and
or
fstpl
push
mov
mov
js
ss
jo
fisttpl
sahf
inc
ljmp
xlat
ror
cmp
push
or
adc
and
ljmp
xchg
hlt
mov
add
jg
enter
je
aaa
lds
adc
hlt
sbb
inc
shrb
bt
jne
fidivrs
fisubl
ret
mov
mov
cwtl
test
push
repz
enter
jno
dec
mov
xor
xchg
xchg
mov
jno
sub
lahf
jle
enter
repnz
xchg
das
mov
cmp
ds
int3
lea
sub
lods
push
cmp
in
dec
lahf
cs
and
in
jnp
inc
gs
pop
adc
fcomip
cmc
rclb
mov
xchg
dec
rclb
sahf
loope
jns
pop
clc
int
sub
mov
fcomps
inc
xor
cli
pop
cwtl
hlt
clc
nop
sbb
cmp
dec
push
or
or
sahf
rolb
pop
inc
mov
adc
or
insb
inc
filds
stos
das
cmp
in
push
xor
sahf
lcall
inc
and
adc
fcomp
daa
cmpsl
or
pop
stos
mov
scas
mov
fnstcw
inc
add
and
mov
std
imul
xor
cmc
inc
mov
es
test
jo
adc
pop
nop
push
sub
inc
js
mov
ljmp
jmp
xor
xor
mov
lahf
sub
mov
cmpsb
ret
scas
iret
pop
fcom
movsl
clc
cmc
jne
aam
loop
inc
adc
cmp
in
mov
pop
jmp
sahf
int3
pop
sbb
pop
rcr
pop
mov
sub
cmp
push
mov
in
test
test
jle
daa
cmp
xor
mov
and
data16
in
aaa
cmp
imul
out
fsubs
insl
mov
inc
mov
xor
sar
movsb
bound
mov
xchg
ret
mov
sarb
aas
pop
jbe
dec
cltd
je
cmp
push
data16
fisubrs
cwtl
addb
test
push
pop
cmc
dec
bound
sbb
repz
in
dec
clc
mov
sbb
imul
xor
sub
mov
das
mov
addr16
jo
push
jle
jp
ret
or
in
push
repnz
xor
xchg
mov
rcll
cmpsb
push
das
aam
jp
dec
mov
aad
sbb
cmp
xchg
or
sti
int
inc
fldenv
xchg
mov
pop
or
imul
and
inc
push
cs
mov
push
iret
push
and
pop
sbb
repnz
nop
jge
imul
cli
rcll
dec
mov
popf
int3
cld
mov
sub
ret
push
lods
test
or
popf
das
lret
dec
jmp
movsl
pop
mov
stc
ljmp
pop
mov
shl
or
pushf
add
jno
sahf
clc
inc
fbld
outsl
or
fcoml
pop
les
out
dec
pop
push
xchg
dec
inc
getsec
das
std
mov
insl
movsl
cld
pusha
pushf
sbb
fimuls
rcrb
xchg
loop
fsubrs
cmp
clc
scas
push
xchg
jmp
and
and
stc
jp
out
je
pusha
push
and
pop
mov
leave
imul
adc
xorl
push
cli
dec
mov
in
icebp
cld
push
mov
je
sub
insb
out
mov
add
lock
add
iret
lds
outsb
ret
xchg
sub
sub
lahf
pop
mov
roll
inc
jne
mov
cmp
jmp
mov
popa
lock
pop
les
addr16
or
jo
push
pushf
mov
mov
out
rolb
fs
in
and
jae
mov
mov
xchg
sub
cmpsl
jecxz
jle
mov
repz
sbb
push
int
inc
shlb
jnp
inc
push
jle
fnstcw
test
das
xchg
out
rorb
push
cmc
popa
lock
adc
loopne
out
or
dec
dec
push
bound
sub
mov
fucom
movsl
or
jns
xchg
mov
jmp
stc
pop
inc
bound
in
stc
mov
xor
lds
popa
int3
mov
cmc
scas
stos
movsb
lods
frstor
repz
shlb
pcmpgtb
es
jl
lods
bound
insb
iret
pop
xor
popf
ja
pop
push
gs
test
xchg
arpl
das
testb
xor
ljmp
mov
int
roll
imul
imul
add
pusha
sbb
or
outsb
out
cmc
inc
pop
sbb
shll
outsl
loope
sbb
xor
mov
mov
xchg
icebp
lret
cs
fidivrs
fiaddl
or
fwait
dec
cmc
cmp
ror
sub
or
pusha
out
cmp
sub
xorl
xchg
clc
dec
or
adc
pushf
mov
jbe
dec
shlb
inc
mov
dec
inc
jae
sub
dec
inc
into
in
adc
and
lret
fistps
sbb
xor
dec
sahf
addr16
ret
dec
outsb
or
mov
outsl
into
and
mov
sub
into
sub
pop
push
repz
int
sub
fists
pop
idivb
test
test
inc
fs
xchg
add
push
mov
sbb
sbb
cmp
aas
and
mov
cmp
push
sub
rorl
mov
xchg
shr
and
inc
pop
cmp
xor
sti
adc
cwtl
pop
cmp
fmuls
xchg
mov
lahf
sti
push
data16
ljmp
call
adc
dec
arpl
arpl
das
popf
mov
addr16
xor
sub
mov
inc
adc
mov
mov
daa
lcall
icebp
cmp
push
ja
xor
adc
sbb
inc
cmp
add
jae
in
sbb
out
mov
mov
inc
sahf
adc
sub
ljmp
push
sbb
repnz
aaa
dec
enter
pop
enter
mov
ja
ficomps
inc
bound
xor
mov
std
add
fbld
push
pop
dec
xor
call
mov
mov
inc
xchg
icebp
shlb
push
mov
notl
adc
jecxz
popf
push
shrl
inc
cwtl
daa
jecxz
add
add
popf
fldcw
push
fmuls
mov
or
jne
in
add
jg
pusha
sbb
pop
adc
dec
push
out
mov
ljmp
cmpsb
sub
ja
out
jnp
hlt
mov
dec
andl
sub
mov
sub
test
lahf
jne
adc
push
sub
jl
or
pop
jnp,pt
xor
int
mov
adc
and
into
inc
jo
push
pop
addr16
cmp
xchg
cmpsl
jmp
cld
push
fadds
inc
or
jge
sbbb
les
sbb
je
pop
inc
pop
shlb
lret
and
arpl
cmpsl
xlat
xchg
or
out
mov
fs
out
and
cmp
mov
mov
pop
fs
decb
lds
cld
push
pop
push
mov
xor
les
add
adc
pop
cmp
lea
push
xchg
jmp
out
inc
adc
std
lods
int3
aaa
imull
pushf
aad
dec
mov
data16
dec
adc
mov
push
push
mov
mov
push
add
cltd
inc
push
mov
sbb
jb
xor
pop
push
fidivs
add
xchg
cwtl
push
out
pop
cwtl
sarb
mov
in
adc
loope
rclb
mov
out
xchg
int
push
pushf
repz
cmp
leave
lds
in
push
cmp
mov
pusha
ja
or
jp
gs
cli
call
xchg
sub
lods
mov
out
cld
cmp
jne
inc
movsl
lods
into
adcb
fidivrl
mov
jae
mov
inc
rolb
outsl
or
mov
jae
jmp
es
adc
mov
add
push
adcl
ret
jne
scas
xchg
lds
mov
jb
jecxz
sub
and
mov
pop
lret
push
mov
jno
mov
ja
mov
clc
inc
outsl
sbb
xor
push
loop
pop
sti
hlt
mov
inc
fdivl
roll
insl
in
scas
jnp
push
push
or
call
inc
jp
mov
xchg
push
sbb
xchg
popf
test
sub
inc
mov
arpl
into
and
repz
xchg
pop
and
aas
xlat
fnsave
mov
shrb
xchg
es
xchg
mov
inc
mov
testl
loope
sub
mov
push
xchg
dec
pusha
in
das
rcll
inc
repz
inc
mov
scas
pop
in
sub
xchg
dec
pop
fidivs
push
daa
fwait
call
push
repz
jg
dec
pop
addl
add
adc
rorb
push
call
sbb
cmp
lds
mov
addr16
inc
in
adc
sbb
add
cmp
jg
or
sbb
test
addr16
pop
cmc
cmp
add
lods
cs
in
addr16
loope
das
push
fsubrs
aad
push
pusha
sarl
xchg
lock
adc
repnz
int
ja
adc
and
jbe
push
mov
cmpsb
out
inc
inc
jno
push
push
cmp
sbb
pop
pop
and
sbb
outsl
xchg
cmp
loope
xorl
fcmovne
repz
lret
adc
sti
sub
ljmp
lock
jmp
out
popa
shll
pop
mov
mov
cs
sti
add
test
jge
mov
popa
aad
rcr
sub
or
or
cs
sub
ret
in
imul
in
pop
into
mov
push
fstps
push
xor
push
pop
dec
or
or
mov
bnd
ss
mov
ja
movl
add
sub
test
call
adc
push
sbb
aam
sahf
fs
mov
mov
inc
xor
xchg
xor
pop
push
aas
xchg
mov
fiadds
int
inc
sbb
jb
int3
aas
fwait
shlb
xchg
test
movsb
dec
insb
or
and
in
andl
and
inc
ja
adc
xchg
out
test
call
xor
and
icebp
lcall
test
outsb
call
leave
or
xchg
mov
pushl
jmp
decb
jae
leave
dec
int
test
addb
les
sbb
outsb
adc
mov
sbb
xchg
in
jl
inc
mov
popa
and
mov
xor
dec
jae
cwtl
rorl
push
jl
hlt
mov
bound
xor
mov
clc
stos
adc
mov
iret
pop
lret
jo
lahf
arpl
cmp
mov
mov
dec
imul
adc
fdivrl
in
cmc
mov
or
inc
xchg
xchg
add
test
xchg
std
loop
jne
lods
or
imul
clc
sub
not
pop
pop
push
push
push
stc
lock
push
dec
jbe
cmc
rcll
cs
xacquire
cltd
jno
and
dec
sahf
sti
add
push
jb
pop
jle
mov
push
xor
scas
or
dec
sub
rcrl
xchg
lahf
jnp
stos
popa
and
scas
push
insb
add
xchg
lods
push
sti
insb
and
jo
notl
test
int
dec
daa
loop
mov
or
adc
pop
repz
sub
inc
loope
clc
rclb
dec
pop
jo
addl
test
mov
leave
js
push
negl
or
mov
xchg
push
movsb
fmull
jmp
je
shlb
xor
mov
adc
jp
xor
xor
sub
cltd
xchg
adc
stos
inc
jp
jmp
add
xlat
inc
pop
jb
iret
xchg
mov
cmp
mov
xchg
pop
ss
adc
mov
adc
lods
stc
imul
loope
inc
push
jae
fldcw
ds
mov
arpl
mov
lret
sbb
call
push
cmp
sub
frstor
bound
sbb
inc
pop
pop
inc
cli
mov
cmp
out
push
mov
jp
addb
fmull
outsb
addr16
mov
sub
popf
stos
push
mov
imul
inc
js
pop
mov
and
ret
jg
lcall
arpl
shlb
int
sbb
jbe
iret
sub
jno
lods
filds
stc
popf
jae
out
xor
sti
sbbb
shrl
xchg
push
push
and
and
xor
push
or
shll
pop
xor
and
lods
decb
fsubs
pop
push
cmp
push
arpl
xor
shrd
loop
mov
js
mov
pop
adc
push
lcall
fimull
int
faddl
pop
aad
ret
inc
int
pushf
jns
cli
xor
lret
ret
mov
daa
jle
ret
mov
aam
pop
xchg
jne
lahf
push
pop
test
ret
mov
cmpsb
adc
iret
pop
pop
imul
add
dec
rcll
push
mov
adcb
cmp
lahf
fwait
pop
lahf
lods
iret
pop
xchg
add
lea
jne
test
stos
mov
aas
out
inc
outsb
enter
cmp
jge
ja
pop
les
lahf
test
scas
out
sbb
cmp
aam
cmpsb
inc
cmp
cmp
xor
pop
mov
dec
repz
fisubl
push
pop
dec
sub
xchg
test
enter
or
fisubs
fisttps
mov
mov
and
add
add
sbbl
lret
cli
add
out
cli
inc
adc
sub
rorb
insb
stc
cwtl
rcl
dec
repz
xchg
dec
pop
fdiv
test
push
adc
inc
stos
es
shr
ret
pop
fsub
cmpsl
sbb
mov
jno
sub
hlt
ds
pushf
stc
jnp
cli
jge
clc
mov
cmp
inc
in
mov
and
std
and
addr16
jb
mov
sarb
shl
add
call
or
out
std
out
cmp
push
loop
shl
xor
dec
mov
or
sahf
rolb
dec
sub
out
in
cwtl
inc
mov
cli
pop
jns
cmovb
lods
daa
pop
out
cmp
arpl
add
adc
and
xchg
inc
adc
push
outsl
and
dec
dec
lock
insl
mov
sub
movsl
hlt
or
pop
jl
xchg
es
negb
ret
sbb
addr16
movsl
addb
mov
repnz
pop
inc
cs
test
clc
mov
call
lods
fimull
xchg
xor
push
shll
aas
test
fwait
xchg
rep
xchg
jmp
jp
js
sbb
sbb
inc
lds
in
clc
xchg
in
dec
fs
sub
dec
mov
ret
mov
jo
adc
fbld
pop
fadd
xchg
fdivs
xchg
js
mov
mov
aas
dec
cmc
pop
cmp
inc
xchg
stos
mov
outsl
sbb
push
aaa
sub
sbb
push
imul
mov
cli
xor
push
jp
adc
cmpsl
setnp
inc
and
mov
mov
mov
pop
in
cli
push
ret
inc
mov
mov
add
das
sbb
add
bound
jno
mov
rcrl
jle
mov
popa
inc
mov
arpl
dec
inc
daa
push
cld
jp
insb
adc
sub
sarl
stos
jb
inc
pushf
cmp
pop
popa
fdivrs
mov
inc
xchg
das
jle
mov
fidivl
je
rcl
and
lea
inc
adc
dec
bound
dec
mov
pop
mov
ljmp
add
or
cmp
insl
cmp
fsubr
imul
sub
andl
mov
cltd
add
push
pop
or
rol
negl
test
ss
orb
lods
data16
sbb
ret
fcmovnu
shll
ss
ficomps
push
and
and
cltd
inc
cmpsl
mov
xchg
bound
sub
dec
int
mov
push
loopne
push
xchg
lret
xor
cmp
dec
cmp
xchg
cmpsb
mov
mov
fnstcw
dec
sub
clc
test
jge
cwtl
lock
jo
sub
sbb
dec
push
mov
mov
jle
mov
dec
jle
cmp
xor
lock
mov
jmp
sub
andb
push
sub
movsb
ficomps
mov
mov
push
rcrb
test
mov
adc
subl
call
clc
ret
push
jae
lods
xchg
imul
push
sub
xchg
pop
mov
inc
je
adc
test
fdivrl
and
leave
cmpl
stc
mov
mov
dec
mov
sbb
ficompl
mov
pop
pop
xchg
test
cld
jbe
dec
sbb
pop
ret
inc
cmpsl
add
shrb
xor
sbb
add
mov
or
lcall
fsubrs
mov
sub
xor
movsl
jmp
sub
push
fsubl
pop
push
int
ret
or
push
and
mov
inc
sbb
xor
push
cwtl
inc
sbb
std
or
mov
push
inc
mov
pop
or
shrl
jns
sbb
sbb
mov
jmp
or
push
mov
adc
filds
enter
pusha
roll
loop
into
jecxz
jmp
push
test
dec
movsl
rcll
xchg
shrl
or
sti
out
mov
sahf
and
inc
or
ljmp
mov
inc
inc
out
scas
or
hlt
sbbl
push
out
out
adc
lods
dec
dec
pop
mov
int3
xchg
push
jns
push
fimull
fsubl
loope
ds
aas
mov
sub
mov
mov
mov
jae
xor
int3
push
cmp
loope
inc
sub
mov
sti
xchg
dec
ret
repz
sbb
xchg
lahf
pop
push
push
adc
notl
aaa
dec
xchg
scas
xor
outsl
jno
inc
push
xchg
repz
add
in
pop
sbb
movsl
mov
js
je
adc
in
xor
mov
stos
es
and
aam
and
imul
jb
scas
stos
dec
inc
lods
dec
mov
jl
cmpsb
pop
pop
xchg
dec
sub
pop
iret
lahf
pop
and
mov
movsb
ja
adc
dec
add
xchg
sub
stc
sub
xchg
push
cmpsl
inc
or
cwtl
movsl
sub
pusha
aas
call
iret
inc
add
outsl
push
rclb
mov
mov
sbbl
sub
push
adc
push
cli
xor
outsb
add
dec
and
jmp
adc
xor
bound
adc
pop
mov
dec
and
lcall
test
in
sbb
jb
add
ror
shrl
pusha
scas
sahf
sahf
idivb
adc
icebp
adc
dec
cmc
mov
adcl
sahf
mov
sarl
mov
dec
je
sbb
jbe
and
mov
lcall
push
mov
loopne
sub
clc
fbld
ret
pop
sub
lods
inc
mov
sbb
inc
xlat
inc
xchg
cmpsb
lret
push
lcall
adc
insl
popa
test
pop
sbbb
jnp
sbb
push
mov
cli
pushf
scas
movsb
into
jl
jbe
adc
ljmp
divl
ret
stos
cmpsb
js
sbb
push
iret
cli
xor
mov
mov
dec
addl
push
mov
sbb
or
sahf
jns
lcall
pop
pcmpeqw
mov
jb
fwait
add
in
cmp
ret
add
in
loop
shr
sub
ds
clc
jle
pop
adc
dec
push
xor
insb
pop
sub
mov
push
jno
xchg
or
add
stc
or
lcall
nop
mov
and
cld
xor
mov
cmpsb
nop
sbbb
std
shrb
sub
lahf
pop
mov
push
pop
scas
or
push
mov
leave
sbbl
dec
neg
or
lea
xor
mov
aaa
sub
mov
gs
xorl
adcl
adc
or
mov
pop
jnp
in
sti
pusha
addb
xchg
push
fistpll
mov
int
cmpsb
cmp
mov
cmp
mov
or
push
repnz
jle
cwtl
push
cmp
jg
std
jae
pop
jl
pop
fidivrl
pushf
mov
rol
dec
gs
filds
jno
or
dec
pop
dec
adc
adc
jbe
leave
push
in
das
call
shlb
notb
mov
fnstcw
scas
inc
push
in
push
inc
cli
lods
js
or
mov
dec
dec
mov
les
jne
repnz
ljmp
lcall
fidivrs
cmp
imul
xchg
xor
icebp
sbb
pushl
push
xor
pop
loop
pusha
movsb
ja
popf
pop
jmp
add
cmp
into
decb
xor
lea
xchg
xchg
push
inc
mov
ljmp
mov
fcomps
stc
loope
out
aaa
jl
in
popa
movsl
cmp
jp
xor
mov
movsl
arpl
cs
insb
mov
adc
mov
bound
sub
and
jle
rcr
mov
cmovae
mov
pop
cs
push
sub
call
pop
adc
addr16
inc
nop
xchg
popf
jnp
jl
jnp
adc
mov
hlt
cli
mov
std
subb
pop
test
cmp
push
fsts
add
dec
jbe
inc
inc
fwait
mov
gs
sbb
das
jge
jae
add
leave
fwait
int
push
mov
sbb
stos
sbb
mov
and
cmp
dec
insl
rolb
cmp
loope
sbb
adcb
rorl
pushf
mov
pop
idivl
sub
push
cmpsb
xchg
mov
lea
jnp
data16
add
xchg
dec
ret
inc
in
inc
test
mov
pusha
mov
sahf
or
push
gs
aad
mov
out
test
or
mov
add
xchg
and
push
enter
les
dec
aaa
add
lods
mov
dec
xor
jne
mov
or
imul
cmp
sub
pop
shrb
pop
and
in
idivb
je
test
fbstp
pop
and
jne
sbb
push
mov
mov
mov
fwait
in
push
dec
out
in
shrl
test
dec
cmp
push
cmp
notb
xchg
add
repz
pop
cs
scas
pusha
mov
aaa
push
mov
cmpsl
ljmp
xchg
mov
sub
mov
dec
stc
data16
xor
jne
mov
imul
jmp
into
shrb
pop
outsl
cltd
fs
shrl
pusha
icebp
xchg
sahf
in
adc
pop
or
inc
pop
sub
cmp
add
sbb
fwait
insl
sub
sbb
sbb
pop
xor
jecxz
inc
sbb
ret
xor
cmp
mov
sbb
pop
mov
sahf
nop
insl
ljmp
test
add
mov
shr
sub
aad
cmp
and
xor
jmp
cmpsl
xchg
jl
je
ljmp
jecxz
les
add
sbbb
inc
out
xlat
pop
int3
subl
jns
jmp
inc
arpl
pop
xchg
xchg
adc
sub
push
lret
inc
jne
fwait
dec
ja
mov
loope
xlat
mov
test
outsl
dec
sbb
sarl
repz
xorl
mov
mov
ja
xchg
fstpt
dec
aaa
jno,pt
add
sub
dec
push
call
mov
out
pushf
sub
sti
sbb
hlt
sub
cmpsl
call
sub
dec
cmp
mov
bound
lahf
not
mov
and
sub
jbe
cmpl
pop
shr
andl
int3
dec
push
jmp
xchg
sbb
leave
mov
shlb
rcl
jb
adc
pop
jae
pop
xchg
fisttpll
sub
xor
or
push
lds
flds
add
ret
mov
pusha
test
out
jmp
sti
shrb
cmp
jecxz
dec
xchg
adc
in
repnz
mov
push
mov
loopne
cmp
xor
mov
shll
clc
addr16
add
test
jp
pop
pop
xor
shrl
mov
add
outsb
sbb
mov
imul
jb
pop
mov
pop
adc
bound
clc
push
fists
stc
mov
add
or
or
or
rclb
jg
test
arpl
std
outsb
mull
jle
cmp
sub
gs
fwait
rolb
iret
add
sub
jmp
scas
test
lret
xchg
xor
pop
popf
mov
jae
aad
fwait
ds
call
popf
call
pop
add
xchg
mov
pop
fdivrs
in
sub
mov
pop
lds
imul
mov
aam
movsb
push
je
int
addb
add
jle
mov
test
loop
mov
ret
and
rorb
inc
push
push
ja
pop
sbb
in
stc
std
cltd
lcall
add
sub
mov
mov
lret
and
dec
outsb
loopne
test
mov
mov
data16
repz
mov
movsb
mov
mov
cmc
push
cmp
mov
test
mov
xchg
inc
aad
mov
mov
fucomi
lcall
lods
rcl
cmpsl
or
pop
shr
pop
les
jecxz
dec
push
lods
test
dec
mulps
popl
sub
orl
adc
push
pop
call
sbb
push
xor
or
xchg
in
std
jns
dec
add
mov
rorl
pop
push
xor
sahf
lds
lods
loop
xor
mov
pop
add
pop
dec
and
dec
xor
sub
out
cmp
sbb
inc
shrl
addr16
dec
sbb
stos
pop
push
mov
dec
push
xchg
adc
pop
movsb
das
xor
cld
mov
xchg
xchg
out
and
scas
mov
fwait
xor
in
imul
repz
lcall
inc
into
xorl
js
divb
ja
push
xchg
xchg
fwait
mov
addr16
inc
jo
and
ja
rorb
loope
and
add
xor
je
pop
jp
push
stos
jo
mov
inc
jbe
out
jg
jb
mov
lds
lea
adc
jl
rclb
add
add
sub
lahf
inc
insl
ja
repz
daa
cmpl
insl
lods
mov
in
pop
xlat
scas
mov
add
scas
loop
cmp
pop
sbb
movsb
sub
mov
fbstp
mov
xlat
stos
das
cli
jbe
adc
pop
fcmovne
ret
aaa
mov
push
cmp
loop
add
adc
add
ret
cmp
popl
mov
shll
decl
fcomip
adc
lret
loop
loope
int
insb
and
cmp
mov
adc
xchg
push
bound
in
xor
pop
and
ret
shlb
xchg
ljmp
daa
jle
nop
jns
into
jge
lods
dec
sti
cmp
cmc
pop
sbb
bound
xor
insl
lret
ret
sbb
cwtl
out
or
mov
xor
lcall
xchg
jne
popa
lods
enter
stos
dec
add
mov
lea
popf
inc
daa
ret
out
imul
iret
push
sbb
sbb
and
and
inc
sbb
loop
out
sbb
outsl
sub
xor
sbb
xor
in
daa
xor
rcll
jg
movsb
cmp
xor
fadd
sub
pusha
pop
mov
xchg
mov
mov
push
sub
and
lret
pop
int
into
mov
sbb
xchg
sahf
imull
pop
into
fsts
fwait
lock
lahf
jb
fdivs
xor
dec
xor
mov
adc
dec
into
hlt
xor
insb
subl
test
fimuls
jnp
push
xchg
xor
pushf
mov
fadds
push
lahf
into
ja
int
xchg
add
fwait
movb
pcmpgtw
push
aas
stc
dec
mov
cltd
in
mov
sub
test
lds
jmp
xlat
push
dec
mov
push
sbb
popf
and
sub
aam
cmc
pop
test
add
xor
sub
push
sub
jmp
xchg
cwtl
jno
aas
sub
lods
mov
or
cli
call
cld
js
push
aam
dec
cmp
mov
dec
jns
xor
adc
outsb
lcall
mov
test
sahf
sbb
inc
jg
xorb
popa
data16
dec
mov
ljmp
insl
push
loope
and
mov
or
jle
sub
rolb
sti
inc
sub
adc
jns
or
jnp
mov
test
cmp
rcl
mov
pop
jp
std
pushf
pop
sbb
lods
icebp
cmpsb
ret
sahf
popa
lahf
xor
mov
incb
nop
lods
test
fs
repnz
ljmp
out
mov
or
push
add
push
fwait
and
imul
adc
je
pop
iret
mov
sbb
stos
and
daa
fsubs
push
adc
and
cmp
inc
jg
jp
inc
inc
sbb
sarb
pop
jle
sub
idiv
add
dec
dec
mov
xchg
lods
movsl
cmp
add
fiadds
cmc
dec
movsb
mov
lahf
mov
or
ficompl
push
out
test
out
loop
push
cmpsl
xchg
gs
mov
cmp
mov
gs
jle
inc
aaa
nopl
js
mov
fisttpll
cmp
sub
jo
xor
inc
in
and
add
push
loope
stos
sub
dec
pop
add
xchg
and
push
xchg
rorl
outsl
rclb
clc
sbb
sub
push
push
rol
xchg
dec
mov
in
sbb
xor
xorb
xchg
cli
movsl
in
pop
xor
pop
out
jle
pushf
ss
sub
scas
gs
les
pop
inc
cltd
fstpl
jmp
push
sub
mov
fwait
clc
scas
rclb
test
cmp
bound
cmc
xchg
movsb
jl
dec
stos
inc
dec
adc
cli
or
xchg
dec
mov
testl
test
add
pop
mov
jbe
stc
sub
movsl
add
push
jno
cmp
loop
xor
or
add
add
outsl
xor
inc
insb
lods
test
mov
cmp
and
ljmp
ret
js
imul
cmp
js
jae
mov
call
adc
xor
les
fisubl
gs
and
cmc
xchg
iret
test
ret
cmp
cmp
ret
xchg
stos
mov
or
push
inc
xor
inc
stos
mov
and
movsb
es
cmp
mov
push
lock
repz
shll
inc
adc
mov
test
jge
repnz
inc
xor
ds
cmp
pop
shlb
or
dec
test
es
sbb
mov
movsb
subl
mov
lret
mov
mov
jge
stos
dec
cmpsb
in
test
sbb
mov
sbb
xlat
dec
xorb
push
pushf
mov
sub
mov
pop
mov
loope
mov
fucom
stc
adc
cmpsb
jecxz
sbb
cmp
aas
es
sbb
adc
push
mov
jecxz
cmp
aam
cltd
imul
outsl
call
les
add
movsl
or
sbb
push
xor
les
adc
xchg
out
xchg
dec
mov
pop
jp
sbb
fwait
dec
test
jbe
push
sbb
adc
ret
pop
test
push
call
cs
andb
lahf
je
cltd
pop
sub
dec
clc
shll
mov
fdivs
pop
aaa
pop
pusha
xchg
mov
and
jno
pop
dec
cmp
jne
in
dec
leave
aad
mov
jp
aam
pop
jl
repz
xchg
cmp
stc
add
dec
ret
push
mov
into
mov
movsb
fs
aaa
popf
cmp
cs
push
add
scas
and
mov
data16
pop
mov
or
and
out
movsb
lock
call
test
repz
or
lds
insl
mov
sbbl
sub
pop
lcall
adc
int
fisttpl
popl
outsb
outsl
adc
in
in
aaa
insb
jmp
sub
and
fwait
adc
cmpsl
sub
mov
clc
test
fsub
or
mov
bound
aam
lea
pop
cmp
in
mov
add
xor
pop
mov
sbb
jecxz
imul
inc
mov
xchg
fsubs
movsb
fnsave
inc
mov
cmp
fisubl
sahf
fwait
pop
cli
push
cmp
insb
jns
les
xlat
add
adc
jge
cmc
and
fs
ljmp
pop
fidivs
scas
pop
sub
test
fmull
test
and
stc
jecxz
xlat
and
loopne
fnsave
push
add
sub
test
inc
xor
dec
jle
js
and
jnp
daa
cmp
in
movsl
outsb
out
add
push
dec
lods
notl
aaa
dec
andb
scas
clc
fdivl
add
cmp
pop
ret
arpl
xchg
pop
push
sarb
mov
jne
cld
pop
or
stos
dec
dec
movsl
mov
cltd
mov
repz
fisubrl
subl
pop
je
push
shr
lods
inc
adc
adc
lcall
lcall
mov
xlat
rol
adc
pop
fistpl
or
push
lods
outsb
movsb
repz
mov
and
sub
and
lahf
or
xor
nop
push
adcb
push
push
bound
dec
dec
enter
add
mov
push
cmp
addr16
pop
test
cwtl
int3
push
mov
mov
testl
outsb
pop
mov
or
cwtl
lds
test
xor
sub
jg
out
in
and
mov
in
pop
dec
and
pusha
add
mov
dec
icebp
cs
lds
jp
adcb
stos
fsubrl
addr16
push
adc
xchg
aas
push
pop
fsubrl
and
repnz
xor
cmc
xchg
imul
inc
xchg
mov
mov
xlat
xor
or
xor
ret
adcl
mov
jmp
pop
sub
stc
mov
inc
mov
pop
dec
cwtl
sub
out
xor
les
jo
repz
scas
mov
mov
pushf
std
outsb
pop
and
push
jge
xchg
xor
pop
xor
movsl
sub
addr16
push
adc
jecxz
jecxz
cmp
sbb
mov
gs
rolb
jge
sub
ja
jg
mov
or
loope
sub
icebp
fistpl
fstpl
sub
xchg
mov
dec
mov
fldenv
inc
mov
cmp
jge
popf
in
adc
mov
stc
ss
dec
pusha
xchg
rcr
loop
and
dec
pop
lret
repnz
or
les
push
add
pop
leave
iret
out
cltd
push
popf
mov
pop
lods
mov
shlb
mov
icebp
inc
and
xor
fdivs
aam
jge
cs
cmp
cmp
imul
jl
pop
int3
int
xchg
cmc
xchg
inc
cmpsb
fs
imul
and
cmp
push
and
fisttpll
inc
cs
push
cmp
cltd
xchg
adc
in
jle
addr16
cmp
in
lods
add
test
rorl
mov
rcrl
push
xchg
std
cmp
loope
mov
mov
or
and
rcl
push
jbe
or
or
xchg
mov
pop
or
jp
sub
cmpsl
nop
cli
or
pop
arpl
jae
adc
int
ret
sarl
mov
push
push
cmp
adc
and
jmp
repnz
and
stc
mov
or
lods
xchg
mov
add
dec
lods
xor
in
adc
xchg
cmp
das
daa
and
add
jg
adc
loope
pop
int3
cli
fcoml
adc
pop
ss
xchg
cmp
insl
ss
jmp
jge
adc
push
je
movsl
push
mov
xchg
push
lret
push
jecxz
ljmp
cli
xchg
jg
ljmp
xor
outsb
push
xchg
int
jmp
lds
lcall
push
mov
std
in
filds
dec
mov
rcr
shll
mov
dec
mov
repnz
out
insb
repz
dec
aaa
jecxz
xchg
push
push
icebp
jae
xorl
dec
mov
leave
ret
movsb
pop
imul
push
push
test
ret
in
jno
mov
ljmp
add
ret
sbb
adc
sbb
xor
mull
fisubl
out
pop
mov
xorb
mov
mov
sbb
and
push
xor
ret
cltd
inc
sbb
xor
add
test
popf
xchg
loopne
sti
xchg
mul
out
rcr
dec
inc
pop
mov
dec
jmp
pop
mov
rolb
inc
cmp
lahf
aad
dec
pop
andb
sbb
xor
stc
xchg
mov
mov
ud2
xchg
movsb
sbb
jmp
mov
pop
mov
jg
jmp
das
ret
sub
js
lock
or
dec
xlat
mov
push
or
scas
call
xlat
das
inc
leave
dec
pop
dec
cmc
loop
mov
ret
call
sub
lock
aaa
sub
inc
adc
mov
push
imul
adc
test
inc
xchg
and
mov
je
ss
cmp
cmp
mov
dec
jl
fistpl
or
outsl
cmp
and
adc
cmp
psubsb
jle
jle
lds
push
jl
pop
dec
decl
int
mov
or
repnz
and
stc
cli
lods
inc
loope
addr16
sti
or
int
xor
aad
call
das
divb
adc
int3
rcrb
ret
add
cld
hlt
jle
pop
nop
shll
adc
add
inc
xor
push
daa
cltd
mov
and
ret
mov
push
dec
dec
add
lahf
inc
orb
fnstsw
aaa
dec
mov
adc
ljmp
cmp
jg
icebp
pop
outsb
mov
popa
adc
add
or
repz
pop
cmc
sub
or
int3
ret
xor
das
into
int
dec
mov
out
shll
cli
sbb
dec
inc
fidivrs
test
and
out
imulb
outsb
xchg
push
add
popf
shlb
sbb
out
push
insb
sbb
js
mov
aaa
shlb
pop
cld
test
leave
xchg
addps
call
fstpt
mov
insb
pusha
jmp
pusha
repnz
push
jg
pushf
fisubl
rcl
dec
or
sub
sbb
dec
fs
sbb
or
loope
popl
out
divb
cmpsb
mov
cmp
jne
xchg
jns
pop
xor
outsl
push
mov
hlt
scas
int3
xchg
inc
mov
dec
int3
jmp
push
mov
jno
mov
pop
or
inc
pop
imul
mov
pop
or
push
leave
cmpsb
push
test
pop
adc
test
or
pop
inc
cltd
lcall
cltd
cmp
insl
addb
xchg
inc
loope
out
pop
pushf
outsl
mov
jge
dec
lods
mov
cld
sbb
cltd
fnsave
cltd
adcb
push
mov
icebp
mov
cmp
and
ds
mov
bound
sub
or
movsl
or
push
push
adc
lods
inc
fs
jno
push
push
lods
xor
jge
xchg
sti
jne
jge
movsl
rcrl
fcmove
add
xchg
mov
test
and
mov
push
jg
aaa
popa
in
adc
jae
lahf
dec
pop
fs
push
mov
or
push
dec
jno
ja
push
mov
jnp
lahf
add
push
mov
test
or
test
fidivrs
push
bound
sbb
out
lods
xor
adc
add
js
addr16
mov
mov
imul
out
pop
pop
ret
or
sahf
aam
icebp
and
iret
sbb
int
int3
outsb
in
mov
lahf
cwtl
pop
popf
mov
xchg
adcb
jne
scas
rcl
push
sahf
ret
lods
pop
fisubrl
inc
out
mov
or
jl
sbb
dec
aam
pop
in
mov
push
add
adc
xchg
lahf
xchg
lock
mov
mov
lahf
bound
mov
push
test
mov
call
jmp
int
stc
insb
dec
loope
cmp
in
fcmovnbe
out
jo
into
movsb
mov
jmp
stc
mov
test
sahf
in
xchg
mov
sub
xor
stos
ror
lock
or
cs
and
shr
mov
imul
loope
mov
dec
scas
popf
sub
lock
sub
subb
jae
lds
and
cmc
dec
mov
jecxz
sbb
and
mov
fstpl
or
ss
lods
call
sbb
sbb
mov
clc
orl
repnz
scas
push
push
movsb
xchg
insl
adc
and
sti
sbb
lods
cmpsb
cmpsb
jg
mov
add
xchg
aaa
sbb
xor
je
imul
in
das
adc
testl
in
push
pop
and
lds
lret
out
cmc
out
or
jg
scas
sbb
repz
pusha
mov
sbb
pop
mov
scas
test
mov
dec
add
push
daa
lods
sbb
push
adc
leave
jp
in
arpl
jnp
lcall
mov
arpl
ljmp
sub
pop
push
add
cwtl
and
cmp
dec
gs
jge
cmp
add
arpl
enter
sub
iret
aas
int
ljmp
dec
mov
mov
jnp
inc
shl
pop
push
test
push
mov
js
scas
scas
dec
sar
sbb
les
out
pop
mov
aam
mov
daa
xor
xchg
and
pop
mul
cli
data16
lock
insb
dec
mov
and
subl
add
fisubl
sbb
inc
xchg
cmp
add
adc
and
bound
fsubl
sarl
pop
push
inc
insl
movsb
xchg
mov
and
cltd
and
dec
pop
mov
inc
les
aas
test
call
sbb
frstor
inc
lahf
mov
pop
sub
mov
loop
xlat
aam
mov
ret
add
cmp
jp
dec
lea
mov
out
sub
and
sarb
lea
sbb
imul
inc
adc
scas
std
cmp
scas
imul
sbb
and
sub
adc
lcall
jno
push
adcb
cmp
nop
cmp
call
in
nop
dec
inc
dec
mov
aas
sbb
push
lret
mov
and
mov
mov
sub
mov
enter
push
sbb
push
loope
or
shl
ret
xchg
mov
jns
cmp
jbe
mov
iret
xchg
lret
subb
lahf
clc
out
jne
sub
mov
inc
bound
add
pop
sbb
push
movb
in
xor
rol
andl
dec
jns
andb
xchg
movl
fmull
ja
rcll
sub
aad
add
pop
int
lock
xlat
or
mov
cld
fmuls
fwait
and
xchg
std
fidivrl
add
jbe
and
aad
vmwrite
aas
or
stos
xor
cmpsl
cmp
xchg
mov
inc
xchg
xor
dec
mov
dec
xchg
mov
repz
xchg
addr16
push
sub
cwtl
testb
js
jne
orl
jle
pop
std
cmp
mov
cwtl
mov
jg
sbb
lret
outsb
mov
push
test
mov
les
or
sub
shlb
push
pop
xchg
and
je
and
int3
cmp
leave
lea
je
rcl
mov
xor
mov
cmc
rcrb
sarb
shrl
push
push
stos
jne
and
inc
push
jno
cmpsb
push
pop
enter
cmc
add
je
xchg
js
xchg
inc
mov
mov
mov
enter
test
add
xor
jb
daa
pop
ljmp
imul
je
in
sub
jns
mov
arpl
mov
iret
and
outsb
rorl
push
fcomps
mov
out
inc
jb
mov
dec
lret
in
sub
fs
popf
fisubl
mov
push
leave
hlt
xor
test
mov
out
pop
jecxz
mov
hlt
and
sbb
lods
sub
xor
loope
cltd
push
push
pop
nop
das
jne
aad
mov
in
outsb
ljmp
loop
jp
mov
mov
jp
cld
inc
cmp
icebp
fmull
mov
push
fimull
call
repnz
dec
inc
inc
bound
sub
shll
sbb
add
cmp
in
fidivrs
mov
imul
lahf
xor
addr16
daa
imul
loope
mov
or
lahf
sub
jb
cmp
mov
incl
imul
jle
repz
in
lods
jmp
and
repz
xor
mov
test
cmp
pop
or
arpl
insl
enter
mov
add
xor
cltd
sahf
pop
dec
add
imul
addb
setg
fwait
adc
xchg
and
loope
jecxz
mov
cld
pop
push
bound
mov
lods
jmp
adc
jg
jecxz
xchg
aad
dec
mov
cmp
ljmp
xor
cmp
push
sub
pop
xchg
or
mov
jns
insb
pusha
jg
adc
inc
in
lahf
mov
in
test
and
out
in
aam
test
dec
test
stos
inc
mov
iret
movsb
pop
jl
addr16
lea
fidivrl
mov
dec
pop
mov
ror
cmc
mov
test
mov
or
aad
mov
mov
loope
pushf
pop
xchg
fst
add
mov
mov
jns
mov
mov
test
and
loopne
out
lods
insl
jnp
lcall
xor
ret
adc
lahf
pop
add
test
push
test
pop
jge
loop
mov
mov
mov
sub
ret
and
sbb
cmc
int3
push
mov
cmp
jp
fimull
fidivrl
mov
mov
insl
mov
loopne
movsl
mov
stc
cltd
pop
push
mov
int
add
mov
mov
pop
push
dec
fcmovu
movsl
cmp
shlb
subl
adc
fidivs
mov
sarb
jl
xorb
ret
ljmp
lret
mov
in
hlt
scas
fnstcw
mov
shlb
mov
dec
jno
mull
scas
xor
push
arpl
adc
lcall
push
pop
fdivp
inc
push
pop
es
adc
into
mov
scas
js
enter
shrl
lea
xchg
shrl
jae
nop
shll
sub
in
sub
scas
sbb
scas
daa
or
and
into
pushf
xor
inc
cmpb
movsl
pop
in
sub
xchg
call
xchg
or
test
xchg
pop
stos
mov
mov
nop
cmpsl
adc
sbb
pusha
es
adc
adc
or
and
dec
push
sbb
and
sbb
scas
loopne
imul
stc
stos
adc
jae
int
int3
dec
jnp
sbb
sbb
push
inc
sbb
add
push
xchg
aam
sti
fwait
repz
pop
push
lret
cmc
dec
and
push
aaa
inc
mov
sub
int3
lock
divl
mov
push
scas
repnz
mov
shr
pop
push
mov
leave
dec
jge
test
shrb
stc
jmp
xor
sti
mov
mov
fistl
push
loop
or
cmc
adc
lret
sar
out
cmp
pop
aaa
sarl
mov
push
leave
fistpl
scas
sbbb
mov
push
cmp
adc
mov
push
adc
ds
xor
mov
xchg
cmpsb
adc
imul
mov
mov
movsb
sbbb
jno
das
xchg
lea
jno
scas
inc
mov
push
cltd
cli
pop
push
lods
lcall
sub
pop
jae
pusha
imul
pop
cli
outsb
pushf
dec
das
pop
adc
fsubr
cmpsl
inc
adc
inc
dec
dec
xor
fxch
pop
test
jno
pusha
outsl
js
in
stos
addr16
addr16
lret
sbbl
nop
clc
shlb
sbb
lret
xchg
and
cmpsb
jae
xchg
cmpl
sub
out
push
jns
or
mov
push
rcrl
imulb
sub
ja
aam
mov
cmp
adc
nop
add
das
divb
lds
sbb
inc
arpl
test
fdivp
stc
and
push
popa
in
negl
inc
insl
pop
aam
push
sahf
jae
loopne
dec
arpl
lock
out
imul
xor
cmp
fldenv
pop
mov
dec
je
popa
ret
jecxz
hlt
imul
sbb
cs
fcmovnb
jne
test
mov
inc
fildll
cmp
sahf
iret
rol
stc
js
add
push
pop
xchg
jecxz
fstp
or
mov
adc
xor
data16
and
idivb
cmp
nop
push
iret
data16
pusha
sbb
stos
mov
jecxz
pusha
jl
add
fcmovnu
xlat
scas
xor
dec
in
push
or
arpl
or
jge
mov
xchg
in
pop
scas
dec
nop
fstpl
inc
enter
adc
push
lahf
mov
ds
ret
bound
ss
mov
sub
gs
dec
mov
insl
icebp
es
aam
mov
pop
cmpsb
jmp
jno
mov
mov
ror
test
xchg
push
sahf
orl
sahf
stos
jl
cmc
lock
pop
dec
fisttpl
jge
adc
inc
jne
lock
mov
mov
mov
int
sbb
lahf
mov
rol
jge
adc
add
add
lods
lea
inc
fcmovbe
mov
imul
sbb
sbb
pop
cmp
mov
dec
shlb
testb
xor
or
es
lret
test
or
lods
cmpl
jl
jae
sub
inc
bndldx
js
int3
mov
das
into
push
fsts
cli
and
jno
lahf
push
cmc
sub
adc
jge
push
adc
test
jbe
mov
mov
mov
xlat
xchg
adc
repnz
xchg
shl
mov
xchg
test
outsb
xor
jns
pusha
and
sbb
stos
aaa
shrb
add
notl
popa
in
inc
stos
jno
dec
in
ret
jmp
push
sahf
test
cmp
into
mov
sti
mov
rcll
iret
cwtl
push
das
outsb
add
cld
js
or
sub
out
outsb
inc
hlt
out
mov
fsubrl
lods
int3
aaa
rorl
sub
push
cmpsb
or
dec
dec
cmpsl
and
mov
in
mov
aaa
ljmp
rcll
lods
jmp
daa
pop
push
lcall
xor
cwtl
or
lods
mov
mov
daa
dec
movsb
or
pop
xchg
sub
das
shll
and
jl
push
or
lods
hlt
push
lret
out
in
xchg
movsl
ficomps
scas
xchg
cld
int3
mov
inc
in
xchg
cmp
stc
add
es
xor
add
sbb
call
adc
adc
jl
cli
fnsave
js
jb
pop
and
insb
ljmp
xchg
pusha
int
mov
or
push
push
nop
repnz
adc
xor
cmp
jl
mov
mov
push
mov
pop
inc
inc
inc
add
ficompl
lahf
inc
mov
pop
mov
jae
add
jg
xlat
cld
xor
fwait
push
pop
sbbb
in
and
lret
cmp
popf
fstpl
sub
add
cmp
and
cmp
mov
pop
add
sbb
dec
ss
aas
lahf
decb
adc
das
inc
xor
xchg
xchg
leave
lea
rcrl
movsb
xchg
mov
pop
test
sahf
jns
jecxz
jle
lcall
imul
jle
add
ja
jne
test
pop
dec
and
sub
and
dec
mov
sti
adc
pop
into
jecxz
mov
insb
iret
sbbl
leave
sar
inc
fldenv
mov
aad
jno
lret
or
cmpsb
inc
jne
lret
lock
xchg
jg
cmp
sbb
pop
cmp
and
jb
fistpl
jmp
insl
test
dec
repnz
sahf
push
repnz
or
dec
insb
mov
mov
orb
push
movsb
mov
dec
rcrl
pusha
js
popa
push
setl
in
into
push
and
or
lds
push
or
test
xchg
xchg
push
xlat
cmp
lcall
mov
in
cmp
out
enter
pop
jmp
stos
fsub
mov
jmp
leave
inc
add
test
mov
and
sub
outsl
pop
pop
data16
movsl
es
sub
sbb
ds
cwtl
xchg
adc
mov
sbb
movsl
pop
imull
sti
stos
in
add
add
ret
jmp
js
imul
adc
add
push
popa
pop
xor
dec
negb
cwtl
lds
cmp
hlt
cmp
mov
rorl
xchg
xchg
sti
insl
or
xchg
mov
sbb
frstor
adc
xchg
adc
mov
mov
jge
out
xor
test
int
mov
and
pop
mov
ss
addr16
insl
test
test
adc
cwtl
icebp
push
xchg
sbb
lock
lods
cmc
xchg
mov
movsb
mov
popa
out
arpl
adc
pop
call
sub
xorb
shl
ror
adc
mov
lock
mov
sbb
mov
movsl
out
cmpb
aas
jo
in
dec
popa
sub
fnop
ficoml
psubusw
loop
mov
adc
cmp
jo
xor
cltd
lret
ret
into
pop
mov
incl
jmp
imul
add
fwait
test
mov
fisubrl
mov
outsb
or
xor
dec
cwtl
arpl
inc
mov
or
ljmp
out
jmp
inc
movsl
add
fists
in
mov
ljmp
xchg
inc
mov
sbb
adc
scas
scas
std
repnz
mov
adc
adc
stos
sahf
dec
push
mov
ja
xor
loope
not
movsl
ss
mov
imul
out
jo
xor
mov
dec
aam
mov
dec
mov
sub
mov
cld
ret
xchg
into
xor
cmp
nop
push
mov
sbb
icebp
into
xchg
mov
in
add
mov
fbld
and
xchg
mov
mov
inc
adc
xor
jne
pop
xchg
out
mov
je
mov
and
clc
cmp
nop
inc
dec
mov
test
push
push
push
sbb
int3
push
push
lahf
gs
dec
lcall
lret
jnp
jo
jns
and
jp
cmp
nop
bound
out
roll
std
ss
push
imul
jns
loopne
push
jmp
orb
and
cmp
cmp
inc
or
dec
xchg
fwait
clc
arpl
aam
fldcw
adc
repz
jne
mov
maskmovq
idivl
repz
pop
enter
lahf
push
das
popa
jne
dec
sti
lret
je
into
lret
notl
nop
ret
sbbl
ljmpw
cmp
jle
adc
add
test
ja
mov
das
out
test
and
clc
dec
cmp
pop
in
sbb
sub
stos
shrb
jb
mov
add
sub
push
dec
inc
js
and
enter
xchg
jecxz
push
mov
scas
push
mov
int
lret
inc
cli
repz
push
push
pop
shlb
enter
lea
sub
daa
push
or
push
test
lahf
add
mov
pushf
inc
push
imul
and
popa
sbb
xchg
iret
mov
push
in
cmpsb
mov
cmp
mov
pop
sbb
pushf
pop
mov
xchg
nop
adc
xchg
jae
jno
inc
in
rcr
xchg
rorl
scas
mov
ss
xchg
mov
int
sub
ljmp
subb
jg
loop
sar
cmp
inc
lret
xor
lcall
in
ret
xchg
adc
inc
and
xor
test
scas
fsubl
pop
push
xchg
cmp
push
or
sbb
pop
mov
mov
xor
push
sub
imul
mov
stos
inc
clc
mov
xchg
and
dec
add
cmp
xchg
aad
aad
inc
jg
or
lea
pop
bound
and
adc
push
stos
sub
cmp
mov
out
mov
testl
or
popa
pop
pop
les
and
and
mov
dec
arpl
idivl
push
mov
mov
cmc
and
loope
sbb
or
icebp
fisubrs
mov
cmpsb
mov
pop
dec
fisttps
ja
imul
inc
xchg
jmp
sub
test
popf
mov
jnp
sbb
pop
dec
lds
adc
inc
lea
movsb
es
negb
pop
or
fnstenv
sub
test
movsb
jnp
adc
mov
std
decl
aad
inc
jle
mov
xor
movsb
add
push
push
xchg
lahf
dec
adc
aad
jb
incl
subb
mov
jp
mov
add
lock
adc
mov
shlb
lea
pop
jg
add
enter
lock
scas
int
push
int
popa
mov
push
cwtl
pop
fs
xor
jmp
outsb
ja
xor
daa
dec
imul
imul
daa
cmp
adc
cmp
fisubrs
or
inc
testb
aas
lea
mov
cmp
jg
int
dec
popa
push
lahf
mov
pop
or
test
adc
pop
insb
lret
rcrl
aad
dec
pop
add
cli
inc
pusha
orb
mov
adc
outsb
xchg
stc
pop
std
ret
sbb
push
stos
movsb
cmp
sbb
cmpl
mov
cltd
pop
cmp
mov
adc
pop
sub
nop
adc
fdivrs
das
int3
rcr
aad
push
in
mov
int3
scas
cmp
int3
push
mov
test
imul
fistpll
es
fsubrl
mov
shlb
repz
add
popa
arpl
cmp
loopne
enter
xor
es
xadd
adc
and
mov
outsb
ret
jmp
dec
stc
stos
ljmp
nop
lea
jg
aaa
dec
loopne
jl
or
out
sub
lods
jne
icebp
push
vmread
cwtl
lock
fwait
sbb
mov
das
dec
or
ljmp
arpl
js
mov
mov
pop
rclb
sahf
adc
xor
gs
sbb
inc
leave
xlat
inc
mov
or
xor
daa
inc
dec
cltd
cli
shr
ret
lret
add
divb
jge
call
lret
rorl
imul
pusha
iret
sub
push
or
pushf
jnp
hlt
aam
or
xchg
push
in
bound
sahf
dec
imul
mov
shll
arpl
push
add
pop
fcomip
xchg
pusha
icebp
jmp
icebp
je
and
lahf
je
fs
sbb
ret
jmp
testl
arpl
jmp
inc
int3
mov
mov
mov
out
cmc
movsb
mov
aam
pop
insb
mov
or
cmp
ds
jmp
jne
push
vphaddubw
in
push
sub
push
aad
jno
and
mov
icebp
cmp
adc
cmp
add
ds
nop
mov
insb
data16
mov
inc
mov
inc
push
push
pop
stos
mov
jne
pop
imulb
mulb
data16
mov
inc
icebp
sub
mov
js
adc
or
xor
jl
add
lahf
mov
adc
pop
and
mov
push
push
icebp
scas
lret
or
jg
clc
pop
movsl
and
or
and
rolb
inc
mov
push
lock
fcomip
cld
or
jnp
xor
jmp
xor
jns
mov
frstor
std
push
repnz
rclb
gs
mov
inc
orb
loop
adc
jae
mov
sub
push
mov
dec
cmpsb
movsb
repnz
shlb
xchg
push
cmpsb
jecxz
dec
xchg
stc
cmp
push
mov
push
scas
out
and
cmp
pop
sub
leave
sbb
lock
int3
dec
cmpsl
ljmp
mov
xchg
add
in
outsl
pusha
cmpsl
pop
sti
les
add
dec
push
cwtl
fwait
push
pop
inc
xlat
in
in
in
xorb
rcll
mov
mov
inc
addr16
ljmp
shrb
rorl
outsl
fcomi
rclb
and
hlt
scas
mov
adc
cmp
ja
enter
cmc
jl
mov
xchg
dec
push
and
dec
or
cld
movsb
cs
cmp
lret
jae
hlt
mov
push
out
sub
gs
loopne
testl
xchg
jbe
clc
xchg
cmp
fildl
aaa
outsl
jge
dec
lods
dec
pop
mov
aad
jle
or
jg
imul
mov
push
adc
je
mov
ret
mov
xchg
ror
mov
stc
insl
cld
pop
sbb
and
lods
mov
mov
call
mov
arpl
les
nop
mov
lahf
xlat
jnp
hlt
cs
push
ret
inc
jbe
fnstcw
cmp
xor
push
rorb
sub
inc
xor
in
mov
data16
inc
xor
lret
cmp
adc
enter
imul
push
adc
sbb
cmp
rcrb
sub
jmp
xchg
insb
xchg
sub
rclb
push
sbb
mov
and
push
sub
sti
jg
mov
stos
stos
fbld
xchg
inc
mov
test
in
lds
aad
loopne
cmpsl
lods
mov
cs
jp
cli
sbb
pop
imul
lock
movsl
cmc
stc
icebp
ud1
into
jl
test
rep
cmp
std
test
mov
lret
push
adc
add
adc
adc
out
cmpsb
mov
dec
test
cmpsl
cltd
insb
mov
or
mov
clc
push
iret
mov
ret
fldcw
pop
das
push
xor
sub
imul
aaa
mov
scas
cmp
stos
inc
or
xchg
xor
mov
or
shrb
sub
bnd
cli
jns
jno
dec
jecxz
mov
or
cmc
or
pop
lret
scas
fsubs
push
jmp
shlb
sub
scas
dec
push
mov
cmc
leave
lods
in
or
cli
push
mov
lret
push
fadd
cmp
mov
add
inc
jbe
cmp
sbb
cmpb
mov
mov
lods
cmp
shl
mov
pop
stc
orl
insb
jne
adc
adc
mov
mov
mov
ret
dec
pop
jns
pop
ret
xor
stos
mov
pop
mov
jl
jg
hlt
mov
repnz
scas
aam
imul
notl
sub
push
icebp
stc
pop
mov
push
xchg
cld
outsb
fidivrl
sub
push
out
pop
ja
sbb
rorb
pop
mov
push
popa
insl
push
dec
mov
bnd
sub
add
movsb
jbe
push
mov
pop
xor
pop
mov
repz
sbb
or
aas
or
jb
gs
sbb
pop
rcrl
push
jae
add
out
lods
and
movsb
cmp
push
lret
call
aam
and
xchg
mov
ss
lods
lock
mov
or
fsubrs
cmp
fcompl
addl
fmull
jns
and
jo
enter
ds
or
shl
dec
jae
shll
mov
test
insb
add
add
hlt
subb
test
out
add
lahf
adc
mov
hlt
dec
shlb
jmp
jg,pn
test
ljmp
jmp
mov
dec
fmull
and
or
movsl
sbb
push
sbb
sub
repnz
jae
xor
add
in
fiadds
pop
sbb
int3
aas
xor
mov
sti
cmc
push
sub
xchg
int
adc
mov
jo
std
arpl
shl
inc
pop
pop
in
int
aad
cmp
xor
jmp
jle
repnz
mov
jbe
mov
dec
es
jb
repz
lahf
pusha
inc
jbe
push
jbe
mov
fsubrs
push
add
mov
mov
add
cmp
in
push
xchg
jo
xor
stc
cli
shlb
sbb
push
ja
cmpsl
mov
xchg
push
add
stc
pusha
aaa
negl
shrl
insl
test
movsb
push
pop
fstpt
cmpsl
cmp
lahf
push
dec
xchg
xor
stc
call
sbb
adc
fbld
dec
adc
jbe
sub
xor
data16
aad
or
push
adc
add
mov
jmp
xchg
out
sti
repz
loopne
test
leave
mov
or
and
mov
push
push
mov
fwait
lock
rcll
ds
lds
inc
loopne
fucomi
ds
rorl
aad
aam
outsb
xor
xor
out
dec
adc
movsb
hlt
jecxz
cli
mov
aaa
sbb
mov
in
cli
test
cltd
mov
outsb
adc
sbb
bound
rcrl
xchg
aaa
setae
orb
sbb
adc
std
aaa
mov
jo
push
call
mov
test
mov
jecxz
dec
and
decb
ljmp
out
push
push
mov
fnsave
repz
jl
lahf
imul
adcl
int
mov
rorl
dec
mov
sub
inc
clc
cltd
jmp
mov
pop
cmpsb
xor
push
je
xchg
loop
gs
pop
inc
jnp
cmpsb
push
in
repz
adc
xchg
push
bound
adc
popa
ficoml
xchg
dec
mov
in
cmp
cmc
add
add
adc
je
shll
fadds
lret
add
xor
iret
ds
cli
popa
ret
int3
fdivp
xchg
sbbl
loope
int
xor
pop
leave
pop
mov
mov
insl
loope
push
sahf
insb
mov
push
push
xchg
enter
mov
int
xor
cmp
xor
sbb
fstpl
jecxz
incl
mov
and
mov
prefetch
jecxz
lret
sub
lret
pop
int3
sbb
or
lcall
iret
lahf
sbb
push
add
jno
scas
sbb
les
testl
cld
inc
ficoms
lahf
xchg
jmp
int3
mov
mov
pusha
out
dec
cmp
adc
cmc
and
push
and
sbb
adc
cltd
add
pop
jmp
addr16
insb
mov
les
inc
mov
cmp
testb
and
xchg
faddl
std
loope
dec
loop
jmp
xorl
push
inc
inc
jno
jecxz
jb
cs
dec
jp
mov
cmpsl
scas
sbb
push
jmp
and
sbbb
imul
out
cmpsl
mov
add
loope
bound
fwait
cli
mov
cmp
xchg
xchg
sbbl
xchg
cwtl
mov
sub
mov
dec
in
scas
pushf
add
push
mov
repz
mov
push
sahf
mov
popa
xchg
push
jl
inc
iret
dec
mov
add
roll
stos
mov
addb
inc
in
xor
cmc
or
ret
lock
jle
popa
pop
and
imull
mov
insb
out
les
mov
mov
test
aad
dec
addr16
lret
pushf
fadds
mov
andl
xor
leave
or
mov
dec
inc
enter
rorb
pop
clc
rcrb
push
xor
and
pop
adc
jp
adc
maxps
xchg
cmp
sti
aas
dec
bound
lods
mov
loopne
xchg
inc
clc
inc
xor
call
repz
add
cltd
push
movsb
and
xor
add
in
pop
and
cmc
loop
inc
pop
sahf
scas
dec
cmc
in
lcall
add
insb
mov
mov
or
pop
fmull
mov
jns
outsl
dec
cmp
xchg
aas
xchg
dec
mov
add
mov
das
icebp
push
add
dec
cmc
or
jl
xchg
add
inc
jge
sub
lea
lock
add
hlt
dec
mov
les
lcall
or
pop
std
jecxz
mov
push
insl
out
idivb
mov
lcall
mov
xorl
and
es
lret
repnz
inc
adc
push
add
outsl
mov
push
push
fs
fmull
test
or
xor
and
ja
xor
into
mov
jp
adc
xor
out
cld
cmp
mov
xchg
das
push
scas
cmp
adc
imul
pop
mov
push
jbe
mov
negb
xchg
test
rorl
cmp
movsb
rcr
sbb
adc
repz
insb
inc
and
mov
cmpsl
jbe
fwait
into
mov
popf
aaa
cmp
mov
divl
fisttpll
sti
jo
pop
add
sbb
pop
xor
add
mov
adc
in
xor
out
aam
mov
mov
mov
movsb
out
out
rcl
loop
dec
sub
stos
in
xlat
out
pop
xchg
sub
fwait
decl
mov
shlb
pop
cmp
mov
xchg
ja
dec
jmp
add
cmpl
stos
inc
fcoms
xchg
nop
sbb
inc
aaa
push
mov
rorl
inc
and
fmul
popf
or
test
int
ret
les
xchg
in
imull
or
cli
sti
jmp
inc
stos
popf
mov
inc
iret
cli
mov
xchg
pop
cmpsl
mov
mov
push
jbe
lahf
cld
aam
mov
insb
cmp
mov
lar
das
jns
mov
inc
sti
icebp
into
lret
jmp
pop
dec
outsb
jcxz
mov
jmp
outsb
lret
mov
mov
movd
scas
stc
sub
cld
rorb
push
adc
iret
jno
mov
lret
jl
jl
cmpsb
mov
lret
mov
xchg
ret
lahf
icebp
sahf
mov
or
popa
lock
in
mov
add
push
jl
and
in
enter
lret
popf
aas
mov
negb
push
cli
push
lock
cmp
repz
je
xlat
testl
cmp
adc
jne
sub
lods
lret
sbb
inc
xchg
faddl
sar
into
leave
notl
lcall
adc
dec
dec
je
inc
add
push
test
sar
push
inc
add
test
insl
rcr
cli
mov
mov
out
add
inc
jnp
leave
repz
mov
and
mov
jge
cmpl
mov
gs
je
cmpsb
dec
push
das
in
and
lods
mov
aas
or
loopne
sub
jg
lds
push
pop
out
sarl
mov
in
repz
shl
xor
aad
xchg
call
ja
and
orb
cmp
js
jg
cwtl
inc
mov
mov
mov
cwtl
xor
pop
popf
mov
lods
or
push
pop
inc
hlt
loop
stos
inc
fcoms
mov
cmc
pop
fistl
xchg
adc
inc
test
cli
arpl
loopne
jle
out
out
mov
enter
xchg
lods
test
mov
sub
out
push
jg
mov
add
and
fwait
pop
outsl
jns
and
dec
aad
iret
pushf
test
std
jns
and
mov
or
nop
xchg
iret
cmp
dec
mulb
mov
jb
cli
jnp
imull
and
movsl
mov
lahf
sti
fisttpl
sbb
ss
jb
push
mov
xor
mov
xor
std
xchg
enter
clc
cmc
lods
insl
mov
cmp
clc
lahf
insb
push
jne
or
or
xor
dec
adc
lds
outsl
sub
sbb
mov
sbb
jo
stc
push
out
pop
jb
add
scas
pop
sbb
xchg
es
aas
sbb
dec
xlat
shl
jg
xchg
imul
xlat
loop,pn
sbb
loopne
and
adc
xor
ljmp
pop
bnd
add
shll
jb
in
mov
push
jo
orb
or
xchg
xor
cmp
lea
adc
sbb
outsb
mov
mov
or
inc
push
add
stos
pop
pop
jae
xchg
test
addr16
out
lea
std
rcr
lea
repnz
aas
in
in
lcall
sub
mov
ret
mov
adc
or
jge
cli
inc
xor
pusha
dec
cmp
lret
push
fisubrl
test
not
or
xchg
cmp
int3
out
xor
xchg
pop
pop
dec
leave
xchg
add
mov
and
jbe
xchg
sti
pushf
sub
push
mov
add
pushf
icebp
xor
popa
mov
mov
pusha
sbb
lret
icebp
outsb
or
aam
dec
mov
repz
mov
insb
loop
out
lret
repz
xorl
mov
repnz
sub
cmpsb
aam
icebp
jp
lds
cs
int
out
loopnew
jo
pop
jecxz
ret
cld
mov
std
pop
cmp
cwtl
jmp
iret
sbb
mov
dec
popa
mov
sti
icebp
scas
in
mov
aas
add
sbb
imul
loop
gs
dec
pop
xchg
xchg
add
mov
stos
fcomps
shll
adc
je
dec
and
lods
hlt
and
cs
pop
pop
xor
pop
test
xchg
sbb
lret
xor
mov
jmp
or
push
lock
push
scas
push
popa
adc
scas
push
mov
flds
cmp
iret
inc
mov
cli
mov
loopne
mov
cld
pop
lret
xor
lock
pop
test
mov
push
push
faddl
adc
xchg
int3
sub
gs
bound
cmp
inc
or
sbb
xchg
push
lock
js
mov
stos
cmp
add
cmp
insl
pop
mov
dec
cmp
xor
or
adc
aam
xchg
pop
xchg
mov
jmp
sub
aad
hlt
pop
xor
push
loope
out
inc
cmpsl
out
mov
arpl
xorb
leave
jl
xchg
sbb
rcrb
dec
imul
sbb
push
roll
lods
subb
cmpsl
mov
out
xchg
sahf
movsb
jb
mov
pusha
orl
fldcw
shrl
repz
mov
cmpsb
daa
mov
dec
and
mov
loope
cmpsb
repz
lods
dec
mov
sbb
lods
mov
and
movsb
cmp
les
imulb
jmp
push
or
ret
push
sbb
repnz
cltd
push
mov
std
daa
dec
hlt
lret
xchg
push
pop
push
push
add
pusha
xor
divb
xor
cmpb
pusha
repz
fwait
addr16
jg
in
adc
mov
xchg
lret
pusha
jns
inc
popf
sarl
inc
in
jl
xchg
add
pop
sahf
mov
jmp
inc
test
mov
mov
xor
sub
clc
mov
fdivs
stc
mov
ss
imul
stos
mov
lods
and
and
xchg
sub
adc
mov
orb
sbb
stos
out
cmpsl
subl
xchg
mov
lds
fistps
and
xchg
nop
sahf
iret
xor
iret
push
fabs
inc
or
sti
push
xchg
loopne
sbb
add
sti
mov
arpl
mov
lret
lcall
movl
lahf
popa
xchg
cmpsl
pop
cmp
mov
mov
fwait
popa
negl
outsl
leave
or
mov
cwtl
mov
xlat
jmp
fsubrl
xacquire
js
xor
test
xor
pop
dec
mov
adc
cmpsl
or
lea
and
enter
es
lcall
add
add
inc
gs
mov
movsl
fidivl
clc
test
mov
xchg
lock
lret
testl
add
mov
jge
dec
call
push
pop
cmpl
nop
es
xchg
mov
xchg
sub
dec
mov
in
cmpsb
int
jge
xchg
sub
and
or
pop
add
mov
add
push
cvtps2pi
dec
icebp
jmp
mov
push
es
arpl
lock
xor
arpl
sbb
shrb
jnp
aaa
inc
in
loopne
filds
pop
js
lods
ja
pushf
jmp
ret
loop
outsb
std
lret
jecxz
push
aas
iret
shrb
xchg
xchg
xor
jp
jbe
shrb
mov
or
or
fwait
test
push
shrb
fmull
fs
call
jmp
dec
jb
xor
adc
rcrl
jnp
cld
in
popa
jle
push
aad
mov
dec
sahf
out
idivl
aam
pop
push
or
push
jae
lea
sbb
fcmovnbe
loop
shll
pop
push
repnz
add
push
mov
call
lret
popa
fdiv
inc
ds
sbb
fstpl
sbb
aas
sbb
xor
popa
inc
jle
xchg
jmp
cmp
cmp
fadd
dec
pop
push
imul
hlt
push
xor
into
jle
mov
push
sub
or
xlat
jl
fildl
pop
cs
ss
sub
icebp
les
add
jle
in
inc
movsb
push
jns
jg
jo
int3
sti
gs
pop
imul
aaa
push
cmp
gs
push
test
pop
cmp
shl
out
mov
aaa
cmp
xchg
xchg
xor
fldl
push
push
inc
lret
dec
xor
or
cmp
and
imul
adc
mov
pop
loop
mov
rorl
jne
mov
cmp
sub
inc
add
sbb
push
ffreep
mov
and
mov
aaa
stos
aam
mov
sbbb
sahf
mov
rcrl
sub
scas
shrl
stos
sbb
popf
clc
push
es
cmpsb
xor
xor
subb
jle
xchg
lea
mov
and
clc
iret
push
cmp
or
iret
pop
jns
dec
dec
mov
or
pop
sub
leave
andb
jae
inc
nop
fstl
ret
scas
cmp
sbb
push
stos
outsb
push
sar
cli
aam
fwait
sbb
cmp
pop
push
fldl
dec
out
push
dec
jl
imul
mov
and
decb
adc
notb
ret
cltd
or
and
lds
sarb
lret
leave
dec
cs
cli
inc
xchg
pop
mov
pop
outsb
test
stos
enter
add
insb
arpl
aaa
sub
repnz
xchg
je
ljmp
aas
sbb
jae
mov
mov
mov
popa
sahf
std
les
adc
lock
sbb
roll
jae
shll
inc
cmp
mov
rorb
clc
pop
xor
inc
push
lock
and
lds
loop
inc
mov
or
pusha
testb
xor
daa
xor
pop
aad
call
dec
or
in
addb
std
xchg
dec
shll
xor
scas
push
sbb
mov
sbb
orb
icebp
scas
repz
sbb
dec
jb
mov
sub
xor
inc
cmpb
dec
js
lods
xor
ficompl
cmp
int
push
mov
fistpl
inc
lods
pop
inc
gs
pop
and
lcall
add
cli
add
std
xchg
outsl
cltd
and
mov
push
aas
sub
push
cltd
mov
dec
xchg
daa
aad
cwtl
loope
mov
dec
inc
jmp
lret
mov
sbb
fldt
sub
imull
rcll
xor
or
sub
test
clc
cld
sub
sub
in
ret
jecxz
fs
xchg
mov
in
sbb
ds
fdivs
or
mov
cmp
mov
pop
mov
or
cmpsb
and
imul
in
fsubrl
fdivs
xchg
pop
fcompl
into
in
pop
outsb
lcall
in
lds
pop
lret
xchg
jle
sub
add
lock
idivb
cmpsl
mov
out
outsb
inc
sbb
jne
jge
adc
mov
in
sahf
dec
mov
lods
jo
in
xor
lret
xor
stos
mov
mov
mov
inc
xor
ja
cs
test
dec
in
jecxz
test
hlt
adc
jle
push
sub
mov
ja
or
out
dec
decl
sbb
xor
lret
clc
sahf
outsb
andb
lods
and
ret
clc
test
inc
pop
pop
outsl
sbb
inc
mov
nop
pmuludq
mov
adc
call
and
push
decl
jmp
pop
sbb
adc
mov
and
xor
test
sub
testl
pop
jnp
mov
mov
inc
loope
xor
xchg
mov
pop
xchg
int3
cmp
aas
push
and
outsb
out
adc
movsl
sbb
add
movsb
pop
mov
loopne
pop
dec
sahf
ror
shlb
cld
in
lahf
lock
xlat
pop
sbb
inc
and
jae
ficoml
lea
scas
jecxz
xchg
inc
stc
xor
cmpsb
andl
fcmovnu
mov
adc
fsubp
mov
sahf
clc
sub
xor
dec
lds
mov
xchg
repnz
mov
lods
scas
jns
mov
or
imul
insb
ret
or
movlps
addr16
mov
daa
pop
or
inc
and
adcb
dec
xchg
vmwrite
sub
aad
ds
lret
fisubrs
mov
gs
push
or
mov
fdivr
loope
and
jp
test
call
sub
xchg
and
dec
ljmp
mov
frstor
loope
outsb
jl
sub
dec
sbb
mov
stos
inc
xchg
inc
mov
or
inc
pop
scas
clc
adc
stos
xchg
push
repnz
xor
enter
mov
sub
jecxz
mov
xchg
test
inc
fcos
in
adc
jns
call
test
jecxz
insl
add
add
and
add
insb
sbb
cmp
xchg
add
out
sub
dec
or
and
push
orl
mov
dec
or
or
int
sbbb
xor
add
lock
add
push
mulb
lret
dec
imul
mov
cmp
mov
clc
fmul
fdiv
clc
ret
cmp
jle
sbb
push
xor
mov
ret
mov
push
ljmp
rol
nop
scas
daa
in
movsb
push
xchg
add
in
adc
faddl
insb
cmp
scas
add
cld
adc
ds
cmpsl
in
jmp
lret
xchg
rorl
sbb
push
push
ja
pop
sub
mov
repz
push
and
mov
inc
xor
fildll
push
and
push
es
xchg
xor
xor
xchg
popa
mov
lock
inc
popf
mov
cmp
adc
xchg
mov
add
inc
and
pop
push
or
fsubs
lahf
adc
mov
push
int3
mov
cli
jb
pop
cli
jae
xor
stos
pop
push
movsl
pop
sub
outsl
addr16
fwait
cltd
repnz
test
or
jp
lahf
pop
cmp
add
ljmp
push
cmp
popf
aaa
xor
pop
mov
mov
aaa
jmp
movsl
iret
jnp
add
es
shll
iret
shll
call
xor
out
out
xlat
sub
andb
push
int
dec
dec
jno
sbb
jp
mov
cli
and
jle
xchg
cmp
in
xchg
enter
pop
mov
nop
adc
sarb
sub
adc
pop
mov
std
or
enter
jmp
add
fistpll
hlt
sbb
mov
imul
mov
scas
das
mov
sbb
in
jnp
inc
packuswb
imul
mov
mov
test
cmp
insl
pusha
adc
push
cmp
sti
push
jmp
inc
xchg
inc
or
xchg
shll
dec
pop
cltd
lahf
loopne
push
inc
aam
jg
cld
xlat
lods
jnp
popa
mov
jne
js
cmp
sahf
mov
cmpsb
scas
xor
pop
dec
jb
fisubs
or
addr16
xor
push
xor
popf
cli
sub
and
push
mov
scas
cmp
xor
sarl
mov
xchg
add
adc
mov
xorb
jmp
cmpsl
sub
popa
add
gs
insb
imulb
or
jp
jnp
xor
jp
sbb
fs
jne
jl
add
into
and
mov
sub
fstps
loopne
mov
aas
add
or
enter
add
adc
data16
sbb
add
sub
jb
push
fiadds
fwait
cmp
cmp
adc
mov
arpl
inc
mov
or
pop
ja
call
test
add
test
mov
inc
dec
mov
jno
fldcw
mov
jecxz
mov
int3
jle
xor
mov
ret
jp
mov
cmp
mov
movswl
cmp
cmpb
mov
jmp
sahf
movsb
lret
jo
cmp
sbb
xlat
ja
mov
mov
sahf
push
in
aad
dec
arpl
jbe
out
add
test
push
std
jno
inc
cmpsl
out
pop
leave
xor
or
mov
iret
pop
test
rcrl
into
out
cwtl
sbb
and
imul
outsl
cmp
fwait
mov
pop
jne
popf
add
push
sub
fsubl
inc
pop
cmp
and
test
push
test
aad
cmp
xchg
add
lahf
and
adc
out
je
mov
xchg
in
or
add
inc
ja
ljmp
mov
or
loop
popa
sub
mov
inc
push
ficompl
adc
or
cmp
pusha
adc
fdivrl
rol
sbb
inc
cltd
mov
xchg
dec
popa
pop
sbb
fistps
add
stos
cmp
movsb
cmp
aad
adc
xor
idivl
in
cwtl
rcl
stos
mov
sbb
out
sub
hlt
cmp
ja
call
pop
incb
sub
mov
pop
mov
pushf
dec
int3
xor
xchg
push
aam
sbb
fwait
mov
cmp
mov
nop
mov
adc
out
push
cmp
stos
test
push
push
ret
inc
popf
ljmp
daa
cmpb
or
cwtl
je
mov
fistps
gs
xchg
inc
idivb
cmp
jb
mov
stc
fwait
jbe
scas
pop
movsb
push
push
push
adc
inc
mov
inc
jge
mov
ror
mov
mov
inc
mov
jmp
les
std
or
mov
cmp
fidivl
inc
dec
jns
lret
sahf
iret
les
fs
mov
sub
cmpsl
stc
mov
lret
push
aad
xor
cltd
syscall
sbb
cwtl
les
ret
mov
aam
jae
and
insb
inc
aam
lret
roll
cltd
repnz
fistl
sub
sbb
mov
mov
das
cmc
sbb
jg
mov
push
loop
push
ja
pushf
and
rcrb
mov
stos
inc
mov
adc
insl
add
mov
hlt
push
xor
test
stos
push
movsl
sub
pop
aas
mov
dec
jle
mov
ss
jle,pt
movsl
movsb
jo
js
js
jo
cmp
shll
push
mov
dec
mov
jge
xor
inc
rcll
hlt
dec
push
mov
push
shll
sub
rolb
pushf
xchg
push
push
mov
std
es
dec
adc
mov
pop
inc
add
push
xor
pop
bound
fcmovne
test
in
push
pop
xor
lods
movsb
sub
dec
xlat
mov
aas
cmp
add
daa
xchg
in
pop
xor
dec
mov
ss
mov
testb
dec
sub
push
adc
push
in
xchg
jns
test
xchg
repnz
xchg
mov
push
movsl
in
cli
loopne
daa
push
into
testl
or
sub
jmp
idivb
inc
shlb
pop
or
popa
int3
or
push
push
icebp
addr16
dec
hlt
sbb
shlb
ljmp
fld1
xchg
in
cmpl
lock
mov
lea
mov
dec
and
out
movb
into
sbb
lcall
call
lahf
inc
add
push
out
adc
xchg
rcl
and
cwtl
in
and
sbb
mov
xor
add
inc
psubsb
insl
aam
int
mov
rcll
adc
or
inc
xchg
push
inc
and
cmp
mov
push
mov
fucomip
adc
push
call
cmpsb
jno
mov
lea
outsl
pop
fwait
orl
cmpsl
adc
inc
cmc
pop
mov
mov
mov
fs
add
loope
and
cld
xor
jbe
mov
pop
arpl
dec
lock
cmpsb
popf
mov
mov
dec
xor
sub
sbb
out
xchg
xchg
nop
xor
sub
ret
in
in
lods
in
int3
and
and
subl
cs
push
dec
rolb
or
jno
inc
jle
rcr
adc
dec
insb
jg
shrl
cmpsl
mov
sbbl
cmpsl
les
iret
jo
cmp
adc
bound
or
dec
sub
or
push
add
leave
popa
daa
hlt
fcmovnbe
inc
jo
jmp
rolb
mov
jp
dec
add
movsl
test
jl
ds
flds
pop
add
cmp
ret
jp
sub
cmp
push
stos
inc
xchg
je
out
xchg
adc
adc
dec
pusha
fiadds
movsb
xchg
push
mov
es
push
xchg
pop
xor
inc
loope
dec
xchg
pushf
fcmovbe
sbb
push
cmp
fsubs
lret
lret
sub
or
mov
insb
jb
outsl
adc
and
lods
sub
vcmpsd
rcll
inc
ret
sbb
ret
jnp
daa
popf
jle
pusha
push
out
outsb
aam
add
mov
xor
xchg
loope
lret
and
test
cs
xlat
pushf
aam
cltd
cmc
fstpl
loopne
lea
push
sub
xchg
mov
ja
add
adcb
cmp
outsl
jb
sub
in
fiadds
pop
or
lahf
push
jmp
xor
inc
or
xchg
mov
mov
out
out
insl
dec
xchg
dec
and
mov
icebp
cmpsl
int3
out
jl
or
xor
sub
loopne
lea
loop
test
shrb
dec
adc
test
mov
pop
and
cmpsl
fiaddl
stc
ja
cmp
mov
pop
cmpsb
add
push
fldln2
mov
add
push
mov
jl
scas
test
mov
jo
adc
add
gs
inc
cmp
or
lret
not
pop
mov
pop
and
xor
or
jmp
pop
mov
mov
jle
sub
push
mov
dec
pushf
mov
xor
and
push
inc
hlt
xor
movsl
sbbl
jae
test
outsl
movsl
lea
hlt
jb
inc
divl
fcoms
push
cmp
push
js
pop
stos
fidivl
bound
jg,pt
sbb
scas
divb
int3
mov
inc
push
test
jno
or
ss
cltd
imul
fwait
shlb
insl
mov
lds
imul
dec
and
loopne
aaa
push
in
xor
pusha
mov
jp
cmp
lahf
shl
daa
mov
loope
add
push
stc
ret
xor
and
fcoms
iret
int3
pop
imul
das
hlt
subb
arpl
and
mov
xlat
sarb
das
sub
mov
out
or
pushf
lcall
notb
fildll
mov
mov
adc
pop
ror
lods
cmp
repnz
decl
rorl
dec
clc
je
pop
cmc
mov
in
cmp
out
jp
or
sbb
and
xchg
sbb
adc
loope
inc
cmp
pop
adc
push
scas
mov
sub
push
mov
lret
ret
je
ss
faddl
cmp
inc
dec
pop
or
sbb
add
push
sti
fiaddl
lret
jno
fisttpll
inc
ds
addr16
gs
imul
xor
jo
fsts
sbb
add
xor
nop
inc
mov
lods
sub
std
call
cmc
movsl
in
xorb
out
mov
mov
push
pop
movsb
ss
pop
xchg
scas
mov
xorl
pusha
les
jmp
xchg
test
push
xchg
daa
roll
and
jmp
mov
enter
dec
xchg
loop
lret
lcall
mov
es
fimuls
add
es
lods
mov
xchg
xchg
mov
scas
jge
movups
push
pusha
inc
cltd
leave
loope
and
dec
mov
ret
sub
dec
enter
pop
pop
test
mov
loop
fsubs
in
dec
stos
jnp
stos
inc
and
fdivr
test
fldt
push
pop
scas
stos
sub
pop
lret
sbb
movsl
pop
add
les
leave
pop
lahf
mov
xchg
loop
leave
sti
pop
insl
or
sbb
jmp
pop
and
lods
call
cs
mov
inc
sarb
push
jae
fcoml
ja
dec
xchg
punpcklwd
aad
pop
push
sbbb
enter
in
aas
pop
icebp
sbb
js
ficoml
call
mov
xchg
adc
nop
rclb
cmp
lds
add
cmpsb
imul
xor
sbb
dec
data16
rol
jge
mov
call
xor
daa
cmpsl
iret
dec
inc
repnz
cmovb
push
dec
imul
mov
cli
out
mov
test
mov
fcoml
jl
dec
out
or
imul
jae
je
xor
dec
imul
xor
test
cmp
inc
xchg
sarb
scas
clc
mov
jmp
loope
das
inc
repnz
sbb
ja
push
daa
cli
sbb
push
cmc
das
xchg
push
sbb
sbb
testb
shll
mov
ret
inc
pop
sahf
pop
es
test
test
pop
add
cld
sbbb
in
out
adc
sub
jbe
les
mov
sbb
or
sub
xor
insb
lods
mov
jne
call
or
das
mov
pop
gs
mov
jl
lods
push
push
adc
dec
das
leave
fidivl
inc
imul
and
adc
out
pop
enter
call
inc
inc
addr16
jmp
repz
dec
sbb
std
sbbl
push
dec
cmp
add
lea
push
ret
dec
inc
add
push
xchg
repnz
pushf
test
cmp
xlat
mov
and
or
pushf
xor
enter
stos
and
dec
repnz
lret
or
sti
movsl
xorb
adc
std
outsl
outsb
bound
dec
mov
mov
jno
pop
add
add
push
xchg
sar
mov
pop
cwtl
sbb
cwtl
fmull
inc
dec
pop
push
adc
aas
daa
xor
cmp
ljmp
movsl
jg
ret
int
xchg
gs
push
add
mov
mov
push
add
push
dec
test
test
and
mov
shll
mov
pop
mov
popf
fsubrs
adc
jb
or
sub
int3
out
cld
stos
cvtpi2ps
movsl
filds
test
lret
out
inc
mov
xchg
bound
mov
test
das
aas
popa
inc
lods
adc
xchg
mov
push
loopne
xor
mov
mov
das
mov
shrl
and
sarb
enter
cmp
or
mov
inc
mov
mov
mov
jg
mov
mov
jns
andb
cmp
xchg
scas
daa
mov
data16
in
roll
int3
inc
test
xchg
sar
adc
add
and
cld
dec
imul
mov
jl
in
in
lret
xor
xor
icebp
gs
aas
loope
lret
shrl
lcall
xor
xchg
mov
lcall
clc
notb
xchg
in
mov
fnstenv
cmp
cld
sbb
lds
stos
mov
mov
scas
jne
mov
xor
inc
dec
in
jbe
cmp
popa
jne
movsl
dec
jno
mov
lea
fldl2e
mov
mov
push
cmp
test
lret
or
lock
and
fldt
inc
push
or
cmp
xchg
dec
inc
add
addb
xor
shll
or
push
cmp
xchg
je
outsb
mov
or
aas
sti
and
sysret
push
xchg
leave
push
popa
sub
data16
xchg
inc
mov
fldl
cmc
pop
mov
lahf
dec
mov
jl
mov
sbb
xchg
fsub
inc
and
lods
popf
xlat
dec
cli
into
imul
fldl
test
inc
ret
xchg
movsb
shr
mov
cmpsl
cmp
mov
jns
loope
and
scas
rorb
and
int
sbb
or
nop
xchg
addr16
mov
in
mov
int3
cld
jne
cmp
and
addb
sub
xchg
jbe
jecxz
sbb
sub
xor
scas
rclb
mov
lods
dec
std
stc
and
adc
in
mov
inc
inc
lahf
lods
add
aaa
les
bswap
aas
push
and
adc
add
pop
sub
cmp
pop
stos
push
cmp
in
sbb
inc
mov
iret
inc
mov
int3
les
pop
xchg
or
dec
lret
out
ret
rcr
and
adc
cmp
mov
aas
nop
std
and
add
shll
repz
push
scas
lret
dec
add
xchg
or
xchg
rcrl
test
push
pop
adc
and
jae
lods
orb
bound
and
loop
dec
push
leave
and
xchg
or
inc
dec
fwait
fs
fisubrl
mov
add
add
into
in
mov
inc
xlat
fwait
test
and
mov
out
subb
dec
adc
lods
jl
andl
or
nop
adc
jno
sahf
repnz
xchg
dec
mov
and
addb
pop
add
push
aaa
sub
push
sub
push
add
dec
mov
clc
jp
movsb
insb
icebp
testl
ljmp
clc
lret
dec
jmp
cmp
xchg
fcompl
or
mov
inc
popa
cmp
sbbb
sahf
shrl
sbb
pop
iret
or
out
mov
dec
fcmovne
mov
jnp
push
imul
cmp
push
cmc
fs
xor
xchg
rolb
icebp
in
lods
repnz
add
mov
test
mov
dec
xchg
xor
movsl
jmp
xor
popl
jae
punpcklwd
dec
fsubrs
cmp
add
add
iret
fisttps
out
push
in
nop
push
cmpsb
cmp
mov
xchg
lods
pop
testb
fisttpll
inc
ret
enter
mov
mov
xor
jb
jb
cmp
fsubrs
jp
pop
dec
xor
dec
shlb
and
scas
dec
test
inc
ds
add
dec
pushf
lods
out
pop
sub
add
lea
pop
xor
or
cmpsb
aaa
mov
out
scas
pop
sub
dec
or
stos
loop
test
dec
jge
mov
js
mov
arpl
mulb
jno
sub
jl
mov
out
add
push
in
jmp
scas
pop
shr
and
mov
cmpsl
jae
hlt
xchg
xchg
mov
sbb
ret
xchg
push
xlat
aam
mov
mov
into
repnz
sbbb
push
std
mov
out
sub
insb
cmp
fsubl
ds
fprem
inc
in
cld
push
iret
adc
aad
push
jmp
cmp
mov
sahf
pop
jmp
pusha
sub
or
lahf
imul
cmp
or
add
ret
addl
ds
adc
jb
dec
mov
lret
loope
call
jp
iret
mov
pop
enter
dec
add
mov
jg
data16
imul
stos
int
mov
jg
rol
xor
xor
icebp
jmp
jecxz
fisubl
popa
pop
into
dec
inc
sbb
shll
nop
pop
and
sbb
pop
sub
int3
aaa
pop
scas
ds
lret
cmp
mov
add
aam
push
inc
dec
sub
imul
mov
mov
addr16
or
enter
and
daa
or
jp
inc
cmp
dec
and
fsubs
jge
das
push
ret
mov
mov
cs
sbb
clc
push
push
mulb
pop
ja
cld
inc
jo
jmp
daa
rcl
jne
fdivrp
in
int
outsb
mov
inc
das
push
repnz
ljmp
push
mov
sub
les
popa
inc
out
shl
ljmp
adc
test
xchg
sbb
xchg
lea
shll
in
push
mov
sub
insl
inc
fildll
mov
hlt
inc
pop
sarb
mov
int3
mov
sbbb
dec
add
mov
mov
outsb
xchg
jp
inc
insb
xchg
fisttps
push
jmp
push
lea
aaa
adc
push
jge
jg
pop
sbbl
outsb
push
in
xor
shrb
loope
or
ljmp
iret
aam
dec
dec
dec
daa
or
popf
xor
shrb
fst
sbb
fbld
or
and
sub
mov
in
xchg
add
pop
mov
test
mov
stos
adc
addr16
int
sub
aaa
scas
aad
inc
inc
xor
fsubrs
roll
push
push
xchg
shll
xchg
aas
aaa
lret
xor
inc
out
xchg
push
xchg
mov
jo
lods
lret
stc
fadd
push
jnp
lret
test
data16
mov
or
sbb
inc
dec
repnz
pcmpeqb
push
aam
loopne
mov
jecxz
jnp
mov
leave
pop
mov
mov
popa
or
jmp
jg
sub
dec
into
jnp
stos
sub
push
cmp
cmpsl
push
xchg
cli
lods
cltd
jmp
fldenv
repnz
jle
cmp
mov
aad
add
scas
push
xchg
cmp
or
xchg
aaa
mov
lcall
push
loopne
and
mov
mov
sarb
inc
in
es
nop
bound
loop
imul
cmp
xor
daa
pop
jmp
mov
add
lcall
test
out
outsl
jne
push
out
imul
ljmp
into
jne
pop
sbb
sub
inc
mov
aas
sub
push
lds
outsb
add
dec
sub
bound
xor
flds
jae
fwait
pop
in
lahf
pop
leave
jno
std
sub
cltd
in
shufps
xchg
and
sbb
imul
sub
stos
std
popf
shlb
cwtl
xchg
jns
jo
fistl
hlt
adc
sub
movsl
movsb
cs
push
adc
loope
sbb
dec
ror
out
cltd
sbb
aad
enter
and
sub
dec
dec
inc
sub
push
mov
icebp
or
sbb
lret
fiadds
fwait
test
ja
ret
jg
xorl
stos
mov
mov
mov
test
mov
xchg
xor
dec
outsb
ret
inc
xor
aam
mov
push
ret
outsl
popa
mov
scas
popf
mov
xchg
and
test
stos
pop
inc
div
add
xchg
icebp
pop
cld
stos
mov
movsb
nop
adc
data16
sub
jo
xchg
imul
in
fdivl
pop
movl
outsl
jbe
push
inc
sbbb
push
aad
cli
popl
adc
mov
aaa
pop
adc
and
cmc
or
add
sub
push
jne
rolb
xor
xor
lahf
call
dec
daa
movsb
cmp
pop
jl
mov
pusha
rcr
sub
dec
das
dec
dec
add
sub
rcr
add
cmp
or
fwait
addr16
movsb
daa
popf
mov
test
lods
xchg
lock
adc
andl
dec
add
or
in
mov
add
clc
outsb
fistpll
mov
xchg
sbb
rcrb
test
inc
jle
or
inc
and
and
in
xor
xor
in
dec
out
dec
sbbb
stc
je
inc
sub
lahf
mov
pop
clc
xor
sbb
jmp
pop
loop
sbb
es
movl
shl
mov
pop
fadd
jns
loopne
jbe
fldenv
mov
test
outsb
pusha
sar
jbe
push
lods
mov
sbb
fisubrs
movl
add
mov
out
icebp
and
and
inc
mov
movswl
inc
test
nop
mov
xor
sub
idiv
out
jnp
test
imul
mov
mov
repnz
fnstenv
cmp
in
adc
push
push
push
sub
push
jle
ss
xor
cmp
cmp
pusha
repz
lahf
rcr
pop
frstor
adc
add
outsb
sbb
lret
push
movsl
fsubrl
or
gs
xchg
stos
arpl
push
adc
or
pop
data16
and
in
addb
pop
je
arpl
add
fwait
cwtl
fisubs
lret
orb
test
sub
inc
and
addr16
sbb
mov
xor
mov
xor
bound
and
test
mov
shrl
mov
xchg
std
fldcw
iret
jnp
jae
mov
adc
scas
add
cmp
pop
in
xchg
and
dec
les
mov
push
popa
dec
gs
inc
xchg
cli
cli
add
jge
ffree
in
popa
clc
out
push
fildl
fldenv
cli
lcall
jae
lds
pop
adc
pop
and
mov
sub
push
dec
pusha
sbb
fdiv
in
scas
xchg
pop
movsb
pop
adc
mov
lds
sub
pusha
mov
and
pop
or
push
je
ret
cmpsl
mov
ficompl
rclb
in
jb
clc
clc
xchg
jo
jle
cltd
clc
out
and
pop
fwait
in
ja
testb
xor
push
push
lea
mov
gs
mov
cmp
and
inc
jmp
and
xor
out
sub
lds
pop
aaa
jnp
and
sbb
in
add
fisubrl
lret
add
sbb
mulps
jg
sahf
movsb
adc
orb
pop
stos
cmpsl
aaa
adc
jns
repnz
js
cltd
clc
repz
dec
pop
cltd
test
subl
call
sbb
mov
or
iret
insb
dec
div
inc
xorl
add
jo
lods
fucomi
mov
insl
pop
test
std
repnz
sbb
add
lock
lcall
fcomi
cmpsl
mov
mov
mov
inc
pop
loope
xchg
mov
pop
mov
pop
stc
pop
inc
adc
xchg
ljmp
push
jge
andnps
mov
out
lcall
dec
int
aas
jb
ja
stos
fdivrp
insb
mov
dec
ret
and
movsl
andb
pop
or
hlt
mov
lcall
jbe
pusha
mov
cmp
jecxz
add
pop
into
or
ja
push
lret
out
jg
mov
jecxz
dec
sbb
sbb
mov
jno
sub
popa
imul
rolb
sbb
orb
push
cmc
iret
aam
mov
or
repnz
jno
mov
mov
mov
shrb
push
dec
jp
pop
pop
xchg
jnp
or
xchg
lret
subb
scas
pop
and
lea
dec
push
xor
iret
repz
jge
xlat
push
loop
jo
fadds
adc
sub
imul
cmp
mov
add
ljmp
pop
push
jo
xchg
outsl
lock
push
es
or
icebp
loopne
xchg
mov
pop
inc
adc
packsswb
jno
iret
fxch
popf
rcrl
std
xor
repnz
fistl
and
imul
xchg
mov
push
in
fstps
lods
daa
mov
shlb
movsb
dec
aam
das
loope
movsl
cmpsb
lahf
leave
data16
dec
inc
sti
jne
les
andl
or
cwtl
pop
movsb
fxch
leave
in
inc
lock
outsb
push
xor
pop
cmp
rorl
cmp
in
add
lods
mov
jae
gs
mov
pop
les
cmp
add
cmp
sbb
mov
cmp
jge
fstpt
add
lret
xlat
sbb
jl
and
daa
sbbl
ret
shrb
fisubrl
aas
sub
xchg
mov
and
ljmp
push
gs
lods
or
push
stos
dec
jns
xchg
lea
push
imul
out
enter
cmc
pop
push
rclb
inc
nop
fnstenv
xchg
or
pushf
adc
aad
jae
je
leave
mov
and
dec
gs
or
ror
jae
aad
push
into
jno
hlt
out
into
jp
cmp
cmp
enter
stc
in
pop
popf
aas
int3
aad
repnz
add
imul
mov
imul
mov
xorl
subb
jle
inc
or
or
or
xlat
int3
mov
shll
and
cmp
xor
enter
aas
add
test
inc
adc
xor
insb
lret
inc
push
stos
cmc
mov
and
dec
insl
xchg
xor
xor
test
fldl
sbb
aad
inc
sbb
mov
in
lods
call
adc
dec
cwtl
sub
test
lods
jb
cmp
imul
cmp
clc
lahf
mov
ja
iret
aaa
xor
xchg
mov
pushf
test
enter
subb
dec
inc
mov
xchg
stos
or
in
sub
dec
mov
hlt
mov
jecxz
sub
pop
xor
into
mov
xor
cmpsb
and
sti
add
fs
inc
push
lock
xor
mov
stos
inc
push
xor
add
cld
pop
outsb
lea
enter
add
bound
sti
inc
dec
mov
shll
inc
sub
cltd
adc
pusha
cs
bound
sbb
mov
movsb
fisubl
pop
in
xor
insb
lret
inc
push
inc
gs
test
mov
out
hlt
rorb
jle
ret
pop
mov
dec
xor
test
mov
mov
hlt
adcb
sti
hlt
adc
loope
sub
orb
adc
cmp
and
mov
pop
scas
or
jg
hlt
popf
jnp
daa
imul
push
xchg
pop
xor
xchg
outsb
fsts
and
inc
lods
mov
imul
subps
das
or
fisubrl
ret
roll
push
leave
and
or
and
insb
xlat
in
pop
push
mov
out
sbb
in
mov
lcall
dec
frstor
push
js
or
dec
lock
mov
jmp
test
dec
inc
inc
lea
and
xlat
lock
push
nop
addr16
add
lret
shrb
push
jne
and
sbb
jmp
cld
shl
icebp
in
push
or
xchg
push
xor
add
push
cmc
movsl
dec
inc
sub
mov
pop
pop
inc
cmc
adc
push
xor
sahf
fdivrl
mov
ret
cmc
inc
mov
mov
dec
fucomip
les
sbb
les
and
sarb
inc
dec
leave
pop
mov
sub
jb
add
mov
add
fiadds
xchg
adc
sti
jmp
es
inc
or
sub
fwait
and
pop
pusha
xchg
pushf
adc
jl
fmull
imulb
inc
sub
mov
aas
fnstenv
aad
and
jno
cmp
lahf
or
stc
jns
test
scas
das
mov
lret
cmp
shrb
or
gs
mov
mov
mov
cmpsb
push
test
aaa
ss
dec
mov
outsb
inc
out
mov
loop
cmpsl
push
scas
jecxz
das
cmp
arpl
incl
sti
lods
je
add
sti
andl
pop
xchg
repz
xchg
in
lods
pop
pop
fcmovu
inc
pusha
shrb
mov
lcall
in
dec
ret
mov
jecxz
lds
dec
rorb
push
or
inc
or
sbb
shl
xor
pop
pop
and
sub
xchg
cmpsb
jb
lds
rol
repnz
pop
mov
imul
rcl
push
call
daa
pop
mov
bound
fdivl
testw
out
icebp
push
test
out
adc
push
imul
and
xchg
adc
fs
js
cmpsl
jl
es
lahf
out
loopne
inc
fcompp
in
pop
fldl
mov
dec
insb
and
sub
shll
mov
loop
test
sbb
ret
repz
inc
in
loopne
dec
insb
push
jmp
addb
or
loop
add
cmp
and
mov
arpl
push
lahf
adc
sub
das
or
movsb
add
js
and
leave
outsl
iret
jne
mov
mov
xlat
and
cli
jo
mov
fcomi
cmp
inc
add
jae
dec
fildll
cmp
fimuls
or
in
into
andl
mov
clc
mov
sti
in
lods
push
ds
nop
mov
xchg
ror
fistpl
aaa
es
fldt
mov
jg
out
pop
lret
das
stos
testl
push
gs
movsb
in
call
dec
insl
pop
clc
lahf
sub
das
mov
inc
icebp
push
lods
sub
shll
mov
subl
mov
jge
leave
and
inc
jecxz
cmp
bound
adc
loope
in
mov
lea
dec
jmp
movsl
push
dec
cmp
mov
js
xchg
jmp
mov
cmp
je
sub
adc
fists
adc
jns
movsb
dec
mov
mov
push
push
mov
scas
xor
adc
xor
loope
jg
push
stos
jge
out
jns
loop
test
push
imul
shlb
jl
lock
push
pop
mov
popf
jnp
mov
cmpsb
sbb
cld
inc
lret
pop
adc
mov
out
mov
test
cwtl
std
cmp
rcll
nop
sbb
pop
or
popa
rcl
sub
xor
jno
pop
dec
lret
push
scas
mov
xor
jl
push
xchg
adc
mov
xchg
mov
cmp
iret
orb
xor
stos
int
inc
push
inc
sbb
add
insl
pop
and
adc
xor
movsl
add
out
cmp
cmc
mov
sub
sbb
enter
fnsave
inc
push
clc
mov
out
xchg
push
test
rcrl
xor
test
cli
notl
lahf
xchg
push
mov
into
jo
ljmp
push
orl
rcl
shrb
fdivrl
pop
out
cmp
dec
lret
aaa
mov
scas
jb
outsb
data16
pushl
negl
pop
in
lahf
in
mov
mov
jb
sbb
inc
push
mov
push
mov
mov
pop
test
add
push
adc
jecxz
lret
and
mov
int3
cmp
cmovge
filds
xchg
jle
imul
push
xor
clc
xchg
pop
mov
out
pop
mov
outsb
insb
jle
inc
call
loop
test
mov
push
and
fs
adc
test
sub
xor
or
jge
repz
rcr
jno
ret
mov
push
sbb
cmpl
fwait
fwait
cmpsb
xchg
icebp
inc
adc
test
mov
push
mov
or
stos
pusha
iret
shlb
cli
scas
jae
jmp
push
sbb
in
sub
movsb
test
repnz
shrl
test
cs
and
out
mov
sbb
les
dec
popw
fldenv
and
push
inc
mov
dec
cmp
cmp
add
mov
mov
and
and
sub
movsl
cld
pop
out
add
inc
or
in
mov
cltd
push
cmc
aad
xchg
daa
jl
js
dec
cmp
dec
add
mov
inc
jl
sub
mov
sub
sar
test
mov
or
ja
inc
dec
stos
xchg
xlat
cmp
test
mov
xor
push
ds
subl
xlat
mov
or
imul
ret
lock
sbb
pop
push
scas
mov
popa
xchg
jbe
xor
cmp
imul
shrl
lea
rcl
insb
push
movsl
ss
lea
leave
pop
mov
mov
dec
mov
fwait
sub
cmpsb
cmp
repz
push
add
mov
outsl
jl
loop
xchg
xchg
xchg
jno
mov
mov
mov
inc
pop
mov
mov
push
lcall
out
dec
ret
xchg
jle
out
adc
lret
fidivs
fidivs
test
movsl
fildl
ljmp
pop
je
movsl
mov
push
shll
in
jg
aas
movsl
lret
in
xchg
or
cld
add
pop
ret
test
cli
xchg
mov
jnp
aaa
xchg
mov
sub
jo
pop
inc
mov
daa
pop
cwtl
lock
and
jbe
shl
dec
inc
mov
pop
xchg
sahf
mov
in
add
jecxz
cmc
or
dec
cmpsl
pusha
pushf
mov
adc
pusha
and
cmpsl
sub
jb
inc
sub
pushf
pushf
mov
ss
movsb
jmp
mov
cmpsl
filds
xchg
cmp
xor
js
cmc
push
xor
mov
or
dec
imul
into
es
sub
pop
or
push
mov
add
imul
and
mov
sbb
push
xchg
dec
outsb
loopne
pusha
mov
push
pop
dec
adc
jns
cs
cmp
push
fcmovnu
dec
jle
lds
into
gs
cwtl
popf
ficompl
test
mov
notl
sub
cmc
shlb
repnz
mov
dec
mov
pop
xchg
in
pand
bound
movsl
push
dec
sub
inc
sub
mov
sub
jns
pop
test
and
dec
add
jo
loop
and
sub
xchg
sub
aas
or
imul
dec
inc
fnstsw
mov
xor
sub
icebp
jo
jno
js
sub
repz
mov
mov
and
insl
sub
adc
ljmp
mov
movsl
and
je
dec
inc
sub
inc
push
lret
fs
pop
leave
fcoms
fcoms
sub
cltd
shlb
out
cmp
daa
das
mov
lret
push
call
and
rcll
pop
jbe
and
pushf
mov
into
cmpl
xor
hlt
stos
jns
mov
sbb
push
lods
add
in
xchg
das
xchg
dec
xor
mov
adc
fildl
sbb
ret
dec
jne
adc
sti
mov
je
stos
push
xor
ret
fcomps
or
inc
push
shlb
inc
cmc
mov
inc
iret
cmp
fistpl
jmp
push
popa
inc
sbb
cli
out
shl
mov
sub
push
aas
shrl
push
fisubrl
lcall
dec
push
push
push
xor
aam
and
test
int
mov
xchg
movsb
jecxz
adc
jns
jp
mov
scas
loop
fs
jb
xor
xchg
xchg
push
cmp
jae
aas
xchg
loope
or
inc
adc
pop
mov
mov
push
fldt
xchg
call
or
and
push
inc
cwtl
add
xlat
mov
rolb
inc
ja
ret
add
add
jbe
scas
sub
and
mov
sahf
sbb
inc
pop
shll
imul
pop
idivl
lcall
pop
out
sub
mov
xchg
repnz
leave
loop
and
and
rol
dec
xor
fwait
mov
in
dec
push
lahf
adc
push
cld
mov
lods
jns
jg
inc
push
adc
sub
ret
pop
fldlg2
stos
add
sub
ja
or
lds
xchg
loop
cmpsb
pop
popf
dec
pop
call
cld
mov
mov
or
sub
dec
les
scas
push
pop
push
cmp
xlat
cmp
pop
or
cs
jae
das
cltd
sbb
cmp
into
popa
dec
push
imul
add
aad
in
sti
adc
loopew
mov
mov
daa
jne
lea
inc
sub
movsl
lea
and
mov
mov
and
shlb
and
enter
add
pop
stos
test
xor
pop
add
stos
adc
inc
ja
push
mov
mov
fisttps
mov
ret
loop
shll
enter
push
ret
cwtl
mov
enter
push
push
ljmp
mov
xor
add
sbb
icebp
xchg
pushf
hlt
lcall
cmpsl
lea
sahf
add
aad
fprem
leave
or
int
or
mov
and
rcrl
mov
fs
pushf
sbb
imul
xor
aam
pop
es
iret
ror
inc
cmp
pop
push
and
int3
jecxz
sarb
fsubp
popf
push
fiadds
mov
mov
jb
add
negl
xchg
popf
sbb
pop
adc
dec
push
xchg
or
and
insb
out
mov
jae
and
lret
btr
ret
and
cmp
sbb
pop
out
jle
mov
testb
aam
jl
add
fcompp
inc
ljmp
push
scas
push
mov
dec
xchg
mov
adc
xchg
js
dec
inc
ret
pop
cmpsl
stos
jecxz
addr16
sub
hlt
jno
xor
outsl
and
repnz
dec
jg
pop
out
int
dec
dec
push
test
jne
cmp
jge
mov
jl
jbe
add
icebp
sbb
enter
int
cmp
jecxz
xchg
cwtl
mov
push
dec
cmp
mov
arpl
pushf
hlt
adc
fistps
cltd
and
pop
adc
out
lahf
lea
hlt
sub
dec
lahf
xchg
addr16
mov
icebp
sub
adc
cmp
mov
jge
xchg
mov
sbb
jmp
mov
jns
jge
cmp
rcl
shrl
scas
add
fcmove
ret
mov
jo
xchg
add
es
ss
xor
push
arpl
lock
mov
and
pop
fldcw
mov
mov
jl
gs
dec
mov
xchg
xchg
and
stc
in
mov
push
lahf
xchg
lcall
cmp
ss
pushf
mov
mov
mov
sbb
sbb
jg
lds
jl
sub
jecxz
adc
loope
rclb
ss
inc
loop
jnp
cmp
movsl
adc
decb
jl
gs
push
adcb
add
incl
sbb
mov
stos
inc
inc
mov
faddl
mov
pop
daa
pmulhw
rcll
mov
and
imul
sub
enter
in
data16
inc
dec
je
sbb
jmp
xchg
nop
mov
inc
fs
push
insl
lods
xor
mov
popl
es
sub
cmp
dec
repz
jp
pop
cmc
pushf
xchg
aad
les
jl
sub
outsb
orl
jmp
xor
mov
mov
cmpsl
jg
xchg
or
lcall
dec
inc
out
mov
dec
pop
jns
lcall
dec
mov
popf
ljmp
sti
mov
sub
sbb
push
jbe
fcoml
fistl
fcompl
mov
std
arpl
adcl
dec
or
jb
in
mov
test
incl
sub
scas
in
mov
mov
xchg
cmpsb
insb
jmp
mov
insl
cmp
cmp
push
aaa
mov
aas
fistpll
insl
test
inc
jns
jbe
mov
xchg
fdivl
out
std
lods
mov
ret
mov
data16
movsl
imul
sbb
xorl
hlt
scas
dec
int
imul
mov
adc
xchg
sbbl
loopne
lret
xor
adc
int
or
ja
or
in
notl
iret
jl
nop
shll
fisubrs
cmpsl
imull
fs
add
fdivr
cmp
mov
and
push
jae
push
bound
dec
nop
test
test
jo
ljmp
aad
push
outsl
nop
loop
dec
xchg
sbb
ja
jp
fldl
mov
pop
out
mov
and
dec
je
or
dec
push
addr16
mov
pushf
out
inc
jno
jl
out
push
fldcw
addr16
and
std
jns
adc
ljmp
aas
insb
adc
pop
or
xorb
xchg
arpl
xor
cld
and
loopne
add
pop
add
xchg
aam
in
ljmp
fidivl
nop
int3
cmp
jno
pop
xor
jp
aad
sbb
and
pop
fldenv
push
lret
sti
sbb
pop
fcmovnbe
roll
iret
inc
sbb
faddl
jne
in
inc
ljmp
jle
sbb
in
mov
mov
andl
sti
ret
push
ficomps
stos
xchg
sbb
fwait
or
fisubrs
outsl
pop
adc
mov
les
or
daa
adc
jno
pushf
sub
scas
mov
daa
mov
cltd
dec
fistpll
pop
aas
xchg
mov
xchg
add
cmc
ss
popl
movsb
cmp
cmp
dec
sbb
pushf
into
out
cmc
dec
pop
cmpsb
add
sub
mov
cmp
pop
das
into
jo
je
adc
test
dec
mov
out
sbb
inc
fisubrl
adcb
icebp
mov
in
cmc
out
or
int3
out
je
aam
mov
push
jbe
mov
mov
shr
dec
in
out
xchg
lods
mov
in
aad
fdivrl
fmul
mov
push
mov
jl
xchg
add
add
addr16
mov
push
pop
inc
hlt
sar
mov
stos
sbb
push
and
pop
add
test
xor
test
or
idivb
pop
jae
cmp
xor
push
test
xor
adc
push
subb
flds
outsb
lds
dec
shrl
es
mov
xor
icebp
xchg
stc
sub
sti
inc
ret
mov
out
inc
push
add
sbb
in
shll
sbb
dec
sub
push
push
lock
fucomip
stc
push
jmp
push
sbb
bound
arpl
roll
mov
xchg
iret
dec
xor
fldenv
and
cli
push
adc
insb
insb
push
and
icebp
bswap
je
cmp
es
daa
aam
jns
xchg
mov
arpl
pop
pop
xor
adc
cmp
outsb
mov
sbb
mov
pop
insl
jne
sub
or
push
xchg
mov
xchg
cld
fwait
dec
std
sahf
jmp
and
sub
int
out
pop
and
mov
sub
adcb
imul
fs
dec
bound
pusha
cwtl
and
in
mov
inc
cltd
mov
les
loopne
std
or
jne
pop
int3
jo
push
mov
aam
test
adc
outsb
push
pop
pop
mov
testl
mov
es
mov
mov
cli
imul
inc
mov
xor
inc
pop
push
cld
push
fcmovne
xor
push
or
push
lret
call
cli
xorl
and
sub
mov
cli
cmpb
shll
cmp
sbb
cmp
or
bound
and
aam
sbb
lret
cmp
pop
add
mov
mov
mov
addl
inc
aas
insl
ret
shl
out
mov
insl
lcall
mov
outsb
movsb
out
cli
dec
in
out
dec
insb
push
inc
das
adc
dec
lock
enter
ret
and
xchg
xchg
fwait
jns
lret
xchg
jno
pop
or
sbb
sbb
push
pop
fistps
bound
xchg
jp
mov
dec
or
mov
out
jbe
sub
ljmp
xor
out
data16
mov
jb
xchg
call
pop
xchg
outsl
jno
or
or
push
mov
push
divb
inc
lds
xchg
mov
negl
inc
dec
aaa
negb
mov
js
pop
push
pop
push
inc
sbb
sub
mov
les
mov
adc
aas
xlat
dec
outsl
mov
fwait
jmp
aad
xor
dec
xchg
in
out
js
xor
shlb
imul
mov
out
stos
aam
sbb
push
dec
std
out
adc
in
mov
out
or
dec
ss
sbbb
pop
pop
pushl
je
jb
outsb
and
clc
sub
mov
mov
je
sar
out
jnp
loope
es
add
push
into
push
data16
cmpsb
pop
push
scas
cmp
fisubs
stos
adc
xor
cld
repz
imul
dec
pop
cmp
xchg
mov
xorl
mov
inc
push
mov
add
scas
test
ljmp
add
mov
fdivrs
clc
in
jns
jae
mov
data16
nop
or
push
das
imul
mov
xchg
movsl
mov
push
std
int
add
sbb
mov
adc
cs
scas
adc
adc
lcall
mov
scas
mov
aaa
lcall
pop
jno
inc
mov
cltd
adc
mov
dec
popf
mov
addr16
xor
outsb
mov
fistps
lods
ja
add
pop
and
shll
pushf
imul
xchg
mov
call
pop
lret
test
addr16
push
sub
xchg
mov
xor
fwait
push
lret
movsl
jp
add
or
subl
je
push
add
test
sbb
cmp
nop
push
xor
sub
cmp
xor
dec
and
jne
or
test
shll
xchg
mov
pop
subl
loope
lahf
or
arpl
aas
jg
fisttps
mull
stos
and
cmpl
gs
rcll
mov
pop
sub
jge
cld
fistpl
sbb
mov
fisubl
and
stc
mov
mov
xchg
adc
pop
call
sbb
push
in
add
inc
push
int
add
jle
nop
sbb
lea
add
or
jns
loop
ret
and
sarl
cwtl
adc
aaa
xchg
popf
cs
xchg
enter
mov
or
jne
mov
leave
push
addr16
into
in
adc
cmp
lods
scas
and
cmp
in
sahf
xor
loope
ljmp
leave
roll
call
cmp
push
or
mov
push
mov
call
pop
or
xor
mov
mov
jg
iret
and
mov
xchg
inc
pushf
inc
data16
out
push
cwtl
sub
test
imul
lcall
xchg
int3
mov
fdivs
cmp
clc
insl
ss
imul
int3
add
jnp
pop
or
add
sbb
push
lret
loopne
and
daa
xchg
mov
sbb
pusha
add
jle
inc
icebp
idivb
pop
and
push
pushf
movsb
push
push
pop
hlt
divw
roll
mov
sbb
jns
pop
pop
test
xor
pop
push
jnp
jbe
mov
lods
into
lods
or
and
mov
clc
nop
cwtl
test
pusha
notl
lcall
imul
add
es
repnz
sbb
jle
outsb
add
jb
or
jbe
ficomps
jmp
pop
add
xlat
cld
aas
fimuls
sbb
or
les
mov
pop
xor
data16
sbb
mov
jge
sub
imul
aaa
xor
pop
xor
pop
lods
scas
pushf
scas
jbe
mov
xchg
aas
stc
rol
leave
jle
or
mov
mov
and
in
leave
cmp
mov
or
mov
jge
dec
jae
cld
adc
push
inc
jbe
jg
cmp
movsl
inc
xchg
xchg
mov
sub
or
test
in
out
dec
into
dec
in
push
mov
cmp
bound
inc
inc
ds
jno
repz
cmp
inc
popa
outsb
loope
in
clc
in
out
rcr
gs
dec
push
sub
mov
clc
push
fdivrs
mov
mov
imul
push
dec
test
jmp
xchg
dec
push
orl
pop
sub
jmp
sbb
jbe
or
sbb
lret
in
sbb
add
push
popl
in
stos
scas
cmp
pop
dec
scas
sbb
inc
loopne
testb
push
lahf
xor
push
mov
push
pop
mov
outsb
adc
adc
arpl
sub
sub
jmp
pushf
cmove
xor
pop
mov
xchg
dec
out
mov
stos
dec
mov
mov
push
clc
sub
sbb
cmp
jg
movsb
push
and
push
pushf
fmull
and
mov
cld
mov
push
ret
lret
lret
sub
in
dec
iret
adc
loop
insb
push
dec
andl
sub
pop
mov
aaa
or
jnp
jae
push
dec
push
adc
push
les
sti
mov
mov
fldenv
xlat
mov
out
mov
ds
out
iret
jbe
cmpsl
add
jno
aaa
or
iret
inc
lock
pop
iret
adc
mov
dec
rcrb
aaa
test
adc
rcl
repnz
push
scas
inc
fimuls
movsl
ret
movsb
icebp
dec
mov
fiaddl
mov
in
jecxz
mov
fwait
cwtl
jle
js
cmpsl
push
jmp
dec
jmp
xchg
scas
lcall
pop
insl
js
xchg
lahf
fisubs
ljmp
inc
push
xor
push
dec
int3
in
sbb
sub
sbb
fidivrs
pop
push
arpl
xchg
icebp
and
sub
out
push
cmp
pop
cwtl
divl
adc
xor
cmp
and
or
ud0
popf
mov
imull
xchg
and
in
adc
sti
ret
cld
fists
xor
cmp
out
xor
add
aaa
xlat
xchg
sub
pop
dec
shl
lock
je
mov
xor
les
cli
xchg
iret
cmp
inc
out
in
jbe
xchg
lret
in
adcb
jge
push
mov
lea
in
pop
out
cmpsl
icebp
cli
ret
ret
stos
jle
sti
mov
leave
mov
xor
jl
mov
push
mov
push
scas
mov
inc
adc
shlb
out
push
mov
addb
xchg
rcr
ret
and
arpl
leave
outsl
pop
ljmp
addb
js
mov
add
clc
iret
mov
popf
sub
sbb
lds
fistpll
jbe
pop
iret
push
pop
js
xchg
ljmp
movsl
mov
xchg
outsb
push
cmp
or
mov
and
cmp
add
mov
adc
mov
xchg
imul
sarb
cmpb
iret
loope
mov
jnp
jp
cmp
pusha
and
jno
adc
cli
loopne
xor
sub
mov
sub
fistl
out
pop
mov
jns
pop
call
movsl
pop
mov
sar
push
jecxz
in
imul
in
scas
into
andb
mov
cltd
ret
arpl
imul
aaa
fmull
xchg
leave
ja
adc
inc
repnz
mov
bnd
movsl
push
lahf
cmp
popl
adc
push
clc
mov
cwtl
jnp
je
pusha
out
js
push
ds
sbb
jl
push
fldcw
gs
aaa
test
cmpsb
mov
cmpb
iret
push
xorl
cmpsb
dec
push
xor
in
xlat
push
fstps
ret
lcall
cmp
dec
sub
mov
push
and
dec
add
inc
jmp
cltd
popf
in
out
mov
test
mov
mov
adc
iret
out
push
imul
push
cmp
xchg
mov
lahf
cs
inc
sbb
add
sbb
adc
jo
jp
xor
push
pop
dec
movq
xchg
pop
frstor
jbe
push
push
int3
sbbl
and
dec
xchg
xchg
inc
in
jns
xlat
push
lds
out
mov
test
stc
mov
test
xchg
sub
int
adc
addr16
xor
scas
lods
inc
ja
jno
push
insb
loope
mov
lea
scas
cmp
insb
pop
jns
add
loopne
es
adc
ret
jmp
dec
mov
notl
stos
inc
add
cmpsl
div
mov
fwait
xor
jmp
fisttpll
imul
or
pushf
ret
sub
pop
sub
fistpll
iret
sbb
sub
ror
xchg
pop
mov
je
jmp
loop
xor
insb
and
xor
sub
outsb
aaa
mov
adc
stc
inc
aam
lock
push
xchg
int3
mov
add
cmpsl
jae
and
xor
cs
icebp
ret
or
fld
enter
js
dec
xchg
stos
sub
sub
fwait
mov
inc
inc
xchg
adc
mov
imul
adc
push
std
test
rorb
incb
hlt
xchg
cmc
mov
test
add
mov
andl
mov
lret
mov
xor
push
bound
into
xor
jns
ret
pop
mov
mov
sbb
jmp
xor
out
mov
add
arpl
push
cld
sbb
int3
inc
push
sbb
and
xchg
pop
popf
mull
sbb
mov
inc
pop
mov
dec
cmp
cwtl
pop
popf
fsubs
push
add
adc
mov
mov
xor
in
pushf
std
insb
sub
inc
lret
enter
ret
imul
sbb
add
mov
in
dec
jae
lods
inc
jb
inc
fbld
add
hlt
lods
jge
inc
jle
cld
in
cmpsl
or
sub
in
and
push
cmp
mov
dec
nop
push
fimull
dec
sbb
cmp
imul
lea
sti
gs
xor
and
sub
cmc
cmp
inc
lahf
inc
push
and
shll
std
out
out
push
int3
cmp
mov
push
mov
aam
daa
jmp
mov
data16
into
negl
jle
imul
add
stc
jne
xor
jl
jl
aas
repz
mov
rorb
mov
outsl
inc
and
movsb
sub
push
rcrb
inc
loope
loop
mov
cmp
js
sub
cmp
pusha
std
es
ljmp
outsb
push
idivl
xchg
xorl
sub
mov
in
sbb
popf
fnsave
lods
mov
jo
stc
mov
pop
fidivs
inc
mov
stos
xchg
cmp
out
imul
push
xchg
in
and
repnz
jmp
pop
fidivrl
es
cltd
frstor
stc
mul
testl
scas
xor
xchg
test
pop
and
xorl
or
int
inc
mov
and
cmpsb
scas
jae
gs
cld
push
mov
arpl
loop
adc
lret
add
fcoml
cmp
mov
rorb
or
xchg
call
in
iretw
sahf
cmp
mov
dec
aam
test
jae
push
sbb
mov
inc
ldmxcsr
repnz
mov
dec
xchg
clc
int
stos
mov
xchg
push
movsl
ds
loop
jge
aaa
imull
mov
stc
stos
cmpsb
out
out
out
mov
lret
inc
dec
cli
test
mov
push
jbe
mov
loopne
outsb
or
ss
and
cmpsl
mov
div
insb
xchg
cmpsl
lahf
mov
xchg
test
xchg
cwtl
movsb
out
pop
pop
sbbb
xor
cwtl
jg
adc
orb
push
sub
fisttpl
or
stos
dec
sbb
jne
icebp
cli
fmulp
inc
inc
mov
fldenv
mov
push
or
sahf
cmp
dec
je
std
cmp
call
daa
lcall
daa
enter
dec
push
xor
cmc
sbb
or
testl
sub
or
imul
pop
jbe
dec
inc
test
addr16
mov
inc
inc
rolb
lods
pop
iret
repnz
adc
sub
sub
sbb
ret
jmp
xchg
xchg
adc
fs
rcr
push
repz
jne
mov
pop
in
cwtl
loope
rcl
ret
and
fistpll
mov
xor
clc
inc
je
test
in
insl
lods
adc
mov
dec
pusha
test
cmc
and
mov
jne
sbb
mov
roll
gs
das
xchg
xor
pop
cwtl
cwtl
inc
ret
clc
jge
xor
mov
cmp
cli
pop
sbb
add
inc
xchg
mov
enter
jbe
popf
mov
cmp
call
lock
cwtd
inc
mov
jbe
frstor
mov
inc
adc
test
gs
mov
adc
inc
inc
xchg
mov
inc
push
add
sarb
loopne
mov
push
jnp
inc
add
pop
addr16
dec
xor
shrl
adc
inc
cmp
icebp
lahf
mov
mov
movsl
sub
push
push
inc
xchg
outsl
dec
push
cmc
lea
mov
jecxz
or
sahf
outsl
mov
mov
cmp
ja
stos
lret
sbb
sub
pop
pop
lcall
stc
sbb
mov
vdivpd
xchg
cmpsl
and
mov
shl
outsb
rcll
xlat
xchg
pop
imulb
pop
mov
bound
xor
or
orb
jp
push
test
sbb
repz
sub
imul
lcall
or
mov
movsl
cs
sbb
xchg
mov
adc
movsb
fidivrs
mov
mov
sub
push
inc
push
push
fs
fdivl
push
adc
mov
in
mov
or
test
dec
sti
inc
inc
sbb
mov
scas
mov
add
pop
lods
cmpsb
aam
inc
sbbb
dec
sahf
daa
int
cmpl
mov
jp
outsb
mov
addr16
pushf
jge
cmp
je
in
dec
mov
dec
push
or
addr16
mov
std
fwait
inc
add
jbe
mov
and
out
jae
mov
imul
enter
outsl
pop
dec
out
or
jp
or
push
in
push
adc
lret
clc
jmp
mov
mov
dec
inc
je
in
int
mov
pusha
lock
jecxz
inc
xchg
mov
pop
xor
je
add
cmp
push
test
mov
or
stos
ss
sahf
ret
movsb
loopne
les
jmp
jnp
add
push
mov
test
xchg
insb
mov
jp
mov
sub
jb
jnp
rolb
xchg
mov
stc
jmp
add
xor
mov
das
shlb
or
xor
ret
xor
ret
mov
cli
jmp
fcom
je
push
lret
add
mov
adcb
imul
cmp
addr16
das
dec
shr
inc
mov
pushf
jb
jl
in
jmp
or
mov
in
sbb
ds
out
rclb
dec
xor
inc
insb
lock
cmpsl
scas
cs
inc
mov
iret
leave
or
rcrl
pop
cmp
adc
hlt
mov
sbb
ss
mov
jae
imul
cwtl
fdivrp
and
sub
sarl
jns
outsb
sub
mull
inc
pushf
cmp
sbb
aad
mov
and
in
adc
ret
adc
and
cmp
sbb
pop
add
stos
jne
popa
pop
int3
fs
int3
xor
in
push
pop
jo
ja
lret
sti
les
xor
sbb
into
mov
xor
mov
insw
lcall
xchg
jp
addr16
cmp
dec
push
repnz
cltd
pop
push
ret
sub
in
popa
ljmp
fst
mov
inc
push
push
in
mov
or
cmp
outsl
push
xor
xchg
sbb
cmp
rolb
scas
mov
test
sub
inc
dec
fdivrs
test
stc
add
ds
add
leave
outsl
subb
mov
lret
jno
leave
jb
pop
mov
add
sarl
xor
mov
jp
mov
je
gs
xorl
adc
cld
cmp
popf
mov
mov
call
lret
lea
push
pop
loope
cmp
cmp
inc
sbb
sbb
mov
dec
loope
add
push
mov
sbbl
dec
push
cwtl
xorl
push
in
jecxz
and
jecxz
xchg
movsb
leave
push
into
std
iret
test
jmp
ja
jp
into
dec
xchg
sbb
jl
lret
xlat
into
rorl
mov
incb
and
xlat
aaa
pop
ss
das
movsb
loop
jmp
xlat
jmp
sar
xor
xor
mov
push
in
sub
mov
xor
push
movsl
inc
aad
pop
rolb
jae
icebp
adc
inc
push
std
imul
lods
aaa
mov
fcoml
sub
test
inc
rclb
sbb
xchg
fstp
frstor
call
push
je
dec
stos
cmpsl
cmp
dec
pushf
test
mov
or
cmp
dec
cmp
pop
test
mov
push
sub
outsb
je
mov
push
insb
jmp
insl
outsl
rolb
lret
stos
movl
push
pop
pop
push
dec
xor
insl
inc
fdivl
xor
shlb
out
loopne
xchg
mov
cmp
pop
jl
sbb
add
dec
bound
pusha
push
jle
hlt
leave
mov
aas
dec
jnp
into
loopne
inc
lahf
imul
aad
cwtl
gs
cmp
adc
sub
aam
fsubrl
movsl
xchg
dec
call
jb
sub
add
popl
lret
divb
mov
and
ja
test
dec
ret
out
popa
pop
pop
mov
and
lret
mov
xchg
popa
jp
dec
call
in
das
add
insb
inc
in
fbld
popf
test
sub
mov
push
rclb
mov
cmp
or
add
jae
jg
xor
into
jno
lahf
add
cwtl
cs
insl
push
idiv
mov
xchg
aad
adc
cmc
bound
ficompl
pop
int3
stc
add
xchg
negb
adc
leave
inc
sub
or
sbb
add
xor
mov
and
pop
mov
pushf
jnp
sti
into
fistpl
or
aad
enter
pop
outsb
jmp
mov
or
pop
int
mov
in
nop
add
pop
pop
mov
push
adc
jno
or
mov
and
jb
les
cwtl
or
dec
fisubs
jae
xchg
es
xor
pop
test
popl
xor
stos
add
xchg
inc
gs
out
test
jle
leave
cmp
mov
and
mov
jno
pop
mov
mov
pusha
fimuls
xchg
iret
mov
jo
pusha
mov
addr16
inc
add
icebp
jne
and
bound
xor
jmp
xor
xchg
inc
xor
dec
test
sub
shll
int
outsl
inc
mov
stc
or
xchg
clc
jnp
fmul
sub
push
xor
outsl
lods
dec
inc
sbb
mov
push
xchg
popa
addl
add
xchg
sub
mov
in
sub
mov
fisubrs
outsl
mov
je
sbb
lds
popf
jns
dec
xor
sub
adc
fstl
andl
stos
dec
pusha
sub
pop
loopne
mov
fisubs
mov
daa
push
pop
pop
and
pop
mov
inc
fcompl
xor
pop
enter
sbb
bound
ret
popa
stc
push
enter
stc
sub
int
fcmovnb
cld
ds
jae
rcl
andl
push
mov
cmp
lock
in
bnd
test
jge
cmpsb
pop
dec
fsubrp
data16
mov
inc
jnp
or
mov
repz
movntps
mov
sahf
lcall
mov
push
loop
sbb
ljmp
in
mov
arpl
shll
inc
lods
inc
outsl
scas
jle
cli
outsb
dec
add
adc
push
sbb
sub
test
and
push
push
mov
aas
xchg
cmp
cmp
xor
xchg
sbbl
mov
rcll
icebp
push
in
xor
in
sub
ret
lds
pop
jbe
enter
pop
aaa
mov
cltd
mov
ffree
addl
mov
jg
aam
mov
sbb
scas
adc
insl
jo
mov
stc
xchg
sbb
cwtl
dec
mov
bnd
popa
in
arpl
repnz
les
sbb
popf
incl
sub
push
gs
mov
and
push
sbb
inc
inc
sbb
sbb
scas
sub
lds
jle
jno
test
cli
sub
cli
jns
jno
stos
andb
mov
and
sti
cmpsl
jg
mov
pushf
popa
dec
divl
dec
dec
mov
pop
aam
sbb
arpl
movsl
bound
int3
fstpt
mov
rcl
aam
sbb
xchg
ds
pop
mov
sbb
push
ss
adcb
fst
jne
dec
mov
dec
jns
cltd
or
mov
or
cwtl
cmp
outsb
inc
mov
xor
dec
push
and
jg
insb
adcb
rcrl
inc
cmpsb
ret
mov
scas
push
xlat
sub
repnz
jnp
test
mov
cmp
subl
or
sbb
adc
shlb
add
mov
and
mov
mov
adc
push
mov
sub
repz
es
mov
gs
add
cli
das
repnz
pop
lcall
cmp
xchg
sbb
mov
adc
pop
leave
sub
insb
scas
pop
add
cmp
popa
ds
loopne
test
jb
sbb
test
or
les
cmp
add
push
stos
and
xor
iret
dec
sub
inc
enter
push
aad
lds
stc
das
add
pop
mov
gs
push
add
outsb
repz
pop
inc
nop
mov
jg
jno
orb
cwtl
cmp
sub
mov
mov
insl
cmc
lret
rorl
pop
fsubrl
lahf
mov
jnp
leave
adc
and
push
mov
repnz
testl
pushl
jnp
or
sub
ja
jno
sbb
mov
aaa
in
add
icebp
jno
mov
push
scas
cmp
pop
pop
xchg
mov
adc
sti
push
ss
or
mov
faddl
sub
fwait
jp
pop
sub
mov
jl
fwait
mov
sub
add
pop
jecxz
pusha
jecxz
les
mov
je
jno
ret
push
ss
add
xor
pop
mov
pop
mov
adc
mov
je
ja
dec
ja
loope
or
cmp
sub
xor
add
int
push
in
xchg
or
icebp
into
cwtl
sub
inc
fisubs
cmpl
out
xchg
test
inc
std
mov
ret
inc
test
sbb
push
mov
mov
loopne
call
test
mov
fsubrs
loop
pop
mov
pop
addr16
sbb
sub
sub
xchg
xor
frstor
jne
shlb
dec
adc
xor
lods
dec
test
in
jmp
add
sbbb
mov
jle
adc
shl
pop
and
jp
stc
daa
insl
pushf
shrb
and
shrb
sbb
mov
cmp
repz
pop
jecxz
mov
aas
lcall
ret
jno
sbb
out
add
es
orb
hlt
adc
pop
in
fwait
cwtl
dec
js
xchg
dec
xor
aad
dec
test
inc
imul
xchg
data16
in
dec
ja
movsb
sar
dec
fnstcw
enter
jbe
lods
jecxz
fnstenv
push
add
fmull
mov
aam
sahf
jne
int
inc
xor
push
cld
mov
fidivrl
jg
add
lret
sub
call
sahf
and
stos
jo
pop
sub
aam
and
lret
fdivrl
lea
add
sbb
out
and
xchg
pop
subb
mov
sahf
outsb
jne
loope
sbb
jp
mov
fwait
sub
in
mov
mov
inc
jbe
div
jl
outsl
push
mov
dec
sub
pop
movb
ljmp
int3
repnz
pop
adc
push
jp
xor
movsb
or
jno
sbb
add
dec
rcrb
call
cmp
xor
xor
lds
mov
mov
mov
inc
inc
imul
push
sbb
mov
loop
cmp
imul
mov
ret
test
sub
cmp
lods
insb
ret
test
xchg
inc
int
out
jae
push
rolb
push
fldcw
cli
dec
sub
hlt
push
pusha
bound
lret
adc
mov
pop
inc
sbb
into
in
inc
push
pop
shrb
loop
xlat
cmpb
int
es
lret
roll
sub
loope
sub
jbe
pop
jp
fucomip
pop
push
jbe
dec
cltd
push
in
shll
ss
pushf
ja
mov
jg
push
test
cwtl
adc
push
mov
pusha
sbb
bound
fwait
add
scas
dec
jmp
leave
cmc
and
jo
lods
inc
push
test
add
lods
xchg
jecxz
cmpsb
pop
and
push
xlat
mov
test
lods
sbb
jno
bnd
push
stos
sub
mov
ret
xchg
daa
jmp
cs
push
dec
cmp
out
cli
adc
pop
mov
insb
aaa
enter
lods
in
maxps
mov
int
enterw
pop
add
mov
xor
sbb
dec
test
mov
fisubs
mov
repz
movsl
sahf
into
outsl
jle
sbb
lods
sub
adc
enter
xchg
test
xor
int3
xchg
rcll
addr16
dec
xchg
xchg
call
jno
mov
jae
cli
cmpsl
push
xchg
loope
and
sbb
frstor
mov
out
xchg
jnp
es
add
test
push
mov
mov
pop
xchg
shrl
repz
rcll
sahf
sbb
mulb
cmp
push
loopne
loopne
mov
icebp
cmpsl
ss
into
mov
xchg
pop
cld
sbb
push
jl
fidivs
lret
testl
inc
shl
inc
je
ret
cwtl
sub
pop
movsl
ljmp
movsl
inc
out
shl
mov
push
pop
pop
cwtl
xchg
add
mov
pop
cmp
ljmp
mov
jne
stos
repz
xchg
mov
lret
insl
repz
mov
shll
pop
dec
les
mov
pop
outsl
inc
dec
push
fwait
push
ret
lret
sbb
jge
mov
xor
out
cld
and
add
fmul
dec
rcrb
lods
insb
jb
dec
int
negl
lea
iret
dec
stos
cwtl
sbb
fcmovne
outsl
loope
sub
mov
or
mov
test
jns,pn
sarl
test
inc
imul
scas
unpckhps
mov
ljmp
scas
shrl
aam
xchg
shl
add
xchg
mov
push
adc
and
int
cmp
mov
and
add
xor
mov
ja
or
dec
das
jecxz
push
pushf
addl
mov
fldl
sbb
xchg
insl
xor
add
sti
fs
outsb
lret
mov
adc
pop
or
mov
mov
dec
enter
adc
xlat
iret
lds
dec
add
jg
dec
aad
es
xor
int
mov
fadds
rcl
xchg
jno
bound
cs
leave
rclb
dec
add
jp
cmpsb
fucomi
push
rclb
jl
movsl
inc
sbb
dec
xchg
int
adc
and
cltd
cmc
pop
mov
std
dec
or
mov
inc
adc
les
jl
xor
pop
cmc
jno
popf
push
dec
sub
pop
in
push
in
movsl
das
xlat
cli
push
fisubrl
sub
mov
pop
lahf
push
cmp
fidivl
aam
add
add
movsl
sti
int
int3
inc
loop
cwtl
xchg
push
mov
jmp
xlat
adc
lods
mov
xor
pop
push
inc
shll
sbb
xchg
adc
or
push
xchg
jbe
xchg
sarb
mov
data16
sti
jge
loopne
frstor
lea
xchg
std
xchg
dec
mov
out
add
sbb
mov
into
insl
cmp
dec
mov
cs
dec
je
xchg
lahf
jl
sub
sbb
xchg
loopne
roll
jne
push
lods
into
ds
jl
arpl
xor
stc
sub
dec
loop
mov
lock
lock
push
cmpsb
mov
sub
and
cli
jge
cmp
std
int
cmp
out
int
fcmovbe
jno
into
xchg
das
rolb
data16
arpl
mov
mov
and
iret
inc
push
cltd
int3
not
pop
popf
stc
pop
xchg
inc
mov
sub
das
dec
dec
jae
sbb
aaa
dec
xchg
popa
inc
xchg
push
frstor
mov
jbe
add
popf
xor
jns
cmp
jno
cmc
dec
cmpsb
cmc
dec
maxps
jp
aaa
jmp
movntps
inc
pusha
push
out
xlat
inc
inc
jae
pop
or
stc
aas
sbb
jae
sub
leave
fisttpll
and
dec
call
or
add
or
mov
push
cmpsb
inc
insl
js
icebp
test
dec
pop
inc
push
pushl
out
sub
cwtl
aad
sidtl
jns
stos
movsl
mov
pushf
jo
inc
and
pop
mov
mul
dec
enter
mov
pop
and
icebp
inc
inc
jns
rclb
imul
in
inc
mov
jg
pop
icebp
dec
push
in
pop
and
push
add
pop
ds
leave
imul
mov
insl
ret
clc
addl
xchg
lds
dec
add
jg
sub
sbbl
push
loopne
cmp
test
lea
mov
push
and
es
loop
add
mov
mov
pop
aas
loopne
sbb
sub
dec
jbe
jae
inc
mov
pusha
in
inc
push
bound
repz
and
comiss
int
xlat
add
pop
out
in
adc
hlt
push
pop
fldcw
movsb
insb
push
ret
mulb
or
xchg
mov
repz
push
inc
xchg
sbb
push
rcrb
imul
mov
push
xor
inc
enter
fstl
lret
vpsraw
test
lcall
pop
test
jmp
mov
cs
jae
mov
pop
fsubl
mov
in
scas
cltd
mov
adc
jb
lret
push
aam
lret
push
inc
push
sbb
gs
mov
repz
out
je
jae
js
or
jne
or
mov
mov
cmpsl
jno
add
out
push
lds
stos
inc
sarl
fs
stos
inc
test
fcmove
pavgb
or
js
add
iret
jnp
xchg
cs
les
les
fldenv
lcall
pop
jmp
add
ds
or
add
pop
sub
mov
dec
mov
add
mov
jge
or
inc
repz
sbb
test
pop
inc
test
xor
aad
test
sar
push
xor
cmp
popf
shl
repnz
mov
xor
gs
mull
hlt
mov
inc
lcall
push
ret
mov
flds
push
push
je
sbb
arpl
iret
xor
inc
das
and
sahf
or
shlb
bound
jbe
imul
sbb
ss
aaa
mov
jne
stos
bnd
mov
cli
pop
out
cmp
test
insb
adc
cmp
popf
add
mov
insb
cmpsl
out
mov
pop
dec
cmp
mov
ret
cltd
pusha
and
out
out
sahf
mov
push
ret
imul
xchg
lret
dec
pop
es
sahf
pop
ja
sbb
out
or
inc
ret
pop
fs
xlat
fistps
mov
and
cmp
jbe
iret
dec
sub
divps
push
repnz
enter
stc
out
cmpsl
arpl
icebp
mov
fmul
mov
aam
mov
cs
push
cs
ret
rorl
fstps
testl
cmp
xor
in
jp
add
mov
stos
sti
pop
cli
inc
lods
enter
sarl
xchg
mov
fldcw
rcr
cmp
dec
in
xlat
cld
bnd
cmp
jne
add
pop
sbb
mov
jae
pop
rcl
jne
add
mov
push
pop
cmpsl
xor
or
ds
dec
fnstenv
cltd
lahf
inc
into
lea
xchg
es
std
adc
aad
push
and
jo
sub
mov
cmpsl
pop
hlt
sbb
daa
mov
aaa
call
aas
fsub
dec
mov
push
inc
xchg
std
mov
ud1
cmpsl
mov
into
sub
and
loopne
jno
imul
dec
cmp
add
jle
std
add
mov
ds
mov
push
ja
adc
pusha
ret
gs
aas
xchg
push
hlt
lods
push
lock
push
sbb
negb
add
sbb
mov
stos
jp
testl
aas
sbb
sarb
pop
xlat
es
cld
fcoms
sub
push
xor
mov
adc
jg
int
push
insl
cmp
adc
sub
xchg
mov
adc
leave
das
arpl
adc
xor
inc
lcall
pop
dec
leave
mov
ret
in
push
xlat
in
out
and
sti
adc
xchg
mov
pop
ret
xor
mov
add
bound
sbb
ret
fimuls
jmp
int3
jo
mov
rcrb
inc
add
inc
movsl
or
std
dec
shlb
adc
xor
imul
mov
xchg
scas
adc
adc
push
xchg
mov
cmp
jo
test
jl
sub
mov
das
mov
outsb
dec
cmp
int
jbe
xchg
or
cmpsl
mov
orps
inc
pop
xchg
jnp
jbe
fsts
sbb
xlat
pop
jns
cld
stos
mov
mov
sarl
xchg
pop
out
mov
call
decb
or
aas
jmp
repnz
mov
add
cmp
or
cmp
cmpsb
sub
add
and
ds
sbb
outsl
add
xor
push
mov
mov
sbb
xchg
in
jo
pop
stos
fxch
mov
xchg
je
inc
rclb
and
popf
es
fwait
in
adc
enter
pop
mov
in
aaa
js
mov
in
sub
roll
xacquire
mov
call
add
jecxz
jae
jg,pt
jecxz
xchg
fidivrs
sbbl
add
push
and
adc
push
add
rorb
mov
pop
lds
and
dec
push
dec
idivb
in
or
ret
jmp
inc
mov
sbb
imul
sahf
dec
and
cmc
jne
filds
cld
rorl
jg
xor
dec
mov
add
xchg
jns
pop
aam
push
push
shrb
fisttpll
and
test
rcl
and
shrl
xor
or
or
fld
popa
pop
pop
out
popa
push
cmp
je
mov
mov
jnp
stos
add
inc
jecxz
jb
push
ja
cmp
cmp
dec
xorl
icebp
xchg
fwait
sub
nop
pushf
xor
out
cmp
push
in
adc
js
cmp
and
aad
or
hlt
mov
je
adc
fsubs
scas
ret
ficompl
or
sbb
mov
sbb
pop
mov
cmp
mov
or
adc
jae
int
cld
mov
pop
adc
mov
mov
mov
pop
xchg
subb
cld
popa
mov
lea
lock
inc
adc
in
cld
js
outsl
scas
movsb
sub
pop
jle
jnp
lods
adc
js
mov
outsl
rcrb
int3
push
scas
testb
addr16
inc
ret
movb
addr16
push
ss
fmul
jns
stc
test
pop
pop
xchg
int
pop
and
mov
adc
daa
into
mov
xchg
xchg
push
cmpsl
ss
neg
cmp
cmp
pushf
scas
or
insb
xor
stos
dec
das
adc
mov
push
sti
jno
dec
sub
xor
nop
xor
jg
test
add
inc
pop
out
add
mov
adc
cltd
sahf
insl
mov
push
mov
push
sbb
cwtl
in
orb
or
dec
push
xor
pop
dec
sar
dec
push
fs
lahf
movsb
and
je
or
sar
sub
aaa
or
mov
or
mov
jg
dec
lret
cmc
pop
jg
enter
cmc
data16
rcl
cmp
jmp
mov
test
xor
jmp
jle
repz
cmp
pop
stos
sahf
jno
jnp
and
jecxz
popa
ljmp
pop
ds
sbb
iret
adc
es
das
and
and
jle
sbb
aaa
xor
dec
mov
jno
push
mov
sub
or
mov
mov
mov
dec
xchg
sub
call
mov
popa
lret
test
stos
std
sbb
and
inc
inc
lds
mov
jmp
or
jle
sbb
adc
cmp
jae
adc
int3
mov
push
inc
pusha
mov
mov
aas
shr
push
lock
enter
xchg
jo
lock
add
stos
mov
add
fdivrp
je
pop
in
gs
inc
sbb
inc
cwtl
insb
and
push
mov
test
inc
gs
xchg
and
add
jno
loope
ret
aas
insb
testl
add
jno
divl
lcall
sbb
shlb
adc
pop
sbb
pop
sub
mov
and
not
sbb
pop
cmp
jo
pop
lods
sub
jo
xor
outsl
les
xchg
inc
loopne
xchg
mov
sbb
lret
lret
into
xchg
inc
in
shll
shrb
jg
lds
and
and
pop
in
jno
xor
sti
nop
pop
and
out
hlt
loop
fmul
out
mov
mov
leave
or
sub
test
jo
xchg
xchg
mov
lods
imul
dec
out
cmpsl
rcll
rcrl
outsb
imul
stos
jne
hlt
clc
gs
pop
insb
sbb
mov
xor
cltd
adc
ret
inc
xchg
fndisi(8087
insl
popa
add
pop
and
mov
std
jle
fbld
jp
xchg
sbbl
lea
mov
aam
cmp
fucomp
les
loopne
sub
mov
jne
xlat
sbb
pop
dec
outsb
stos
pop
add
or
stos
sub
mov
adc
xor
cltd
es
pop
push
pusha
outsb
mov
cltd
fdivrl
push
mov
out
add
xor
mov
aad
xor
inc
inc
push
inc
lock
clc
and
sbb
xchg
mov
fwait
sarb
add
cwtl
dec
movsl
lcall
push
mov
cmpb
jb
xchg
out
jl
cmp
xchg
pushf
pop
inc
fists
mov
outsb
jl
aas
mov
jp
adc
cmp
push
mov
lea
push
out
dec
test
loopne
and
dec
nop
push
mov
sbb
mov
sub
cmpsl
das
lret
dec
lret
idivb
mov
inc
sub
cmpl
movsl
inc
test
cmp
xchg
clc
out
fbld
mov
add
cwtl
lods
mov
jae
mov
mov
shrb
fwait
cmp
popa
pop
movsb
repnz
jle
jo
test
outsl
add
push
shll
outsb
jecxz
push
adc
outsl
xcrypt-ofb
cmpsl
push
pop
push
outsl
mov
popa
aaa
cli
out
incb
xlat
mov
jp
pop
push
jle
xchg
test
fdivrl
cmp
mov
pop
in
call
mov
mov
aad
bound
fadd
into
nop
mov
xlat
lahf
mov
dec
jns
jl
mov
xchg
pop
pop
jle
fnstenv
or
pop
or
jmp
push
xchg
ret
add
push
shl
cs
adc
insl
divl
loopne
lds
sbb
pop
pusha
callw
push
sub
subb
push
mov
rcrb
dec
loopne
pop
push
cmp
push
lock
bound
mov
popa
xchg
imul
aaa
push
icebp
pop
loopne
loope
fcmovu
add
arpl
jno
adc
fidivs
inc
fwait
lea
cmpl
ja
pop
pop
push
int3
in
in
pop
add
cmp
jecxz
sub
jb
in
ljmp
adc
loop
pop
push
lods
pop
ljmp
mov
push
iret
aam
inc
shlb
je
mov
add
dec
negl
lret
loope
mov
addb
inc
fadd
fists
faddl
aaa
pop
xor
and
fs
sbb
neg
les
hlt
stos
inc
outsb
cmc
xchg
mov
dec
or
jns
iret
push
cmp
sub
mov
outsb
and
xchg
dec
test
cld
mov
jp
dec
cmp
sbb
inc
dec
adc
dec
jo
sub
fs
dec
jne
xchg
repz
out
movsl
mov
add
ret
xchg
nop
test
cltd
test
in
aaa
test
cld
dec
xchg
mov
cs
cmp
inc
fldl
adc
cli
loope
xchg
jne
inc
sbb
bound
loope
data16
int3
js
fwait
adc
pop
hlt
pop
jle
cmpsl
repz
int3
movsb
or
cs
push
rorl
iret
xchg
jecxz
dec
loope
jne
shlb
std
into
sti
jp
and
leave
lock
sarb
cmc
push
mov
cwtl
pop
mov
cmpsb
inc
out
push
xchg
jnp
xor
dec
popf
sub
testl
sbb
or
daa
notl
mov
jbe
lcall
pop
jmp
xor
sbb
cmp
data16
test
ljmp
mov
icebp
push
in
out
push
negb
rcrl
lret
xchg
loope
cli
mov
pop
cs
loope
cmp
or
pop
sub
push
xor
popf
push
sbb
cmp
rcl
push
or
cmp
and
xchg
lds
xlat
addb
cld
movsl
sub
lods
out
mov
aad
mov
mov
js
inc
xchg
cmp
and
and
or
xor
hlt
icebp
loopne
cmp
icebp
test
mov
arpl
mov
mov
pop
xlat
repz
notl
dec
push
jbe
add
mov
fisttps
sbb
test
or
mov
mov
test
insl
out
mov
add
inc
mov
cltd
ljmp
in
lret
dec
std
fwait
pop
nop
pop
call
imul
mov
add
mov
xorb
adc
mov
xor
push
stos
pop
xchg
cwtl
inc
insb
ds
into
dec
xchg
popa
cmc
mov
mov
lea
hlt
push
mov
stos
shll
pusha
ret
scas
jp
iret
add
xor
cltd
stos
sub
cld
fsubrs
push
adc
daa
sub
or
lret
outsb
fs
rcll
es
mov
movsb
dec
sti
arpl
add
mov
pop
push
orl
add
adc
mov
cltd
sub
xchg
addr16
lods
fidivrl
or
or
std
xor
ficompl
aaa
lcall
lcall
push
and
cmp
add
dec
pop
pushf
xchg
cld
popf
dec
mov
adc
add
popa
loopne
pop
stos
xchg
pop
inc
mov
les
mov
xor
int
int3
sub
sub
push
adc
cmp
repnz
imul
outsl
scas
lock
xchg
jl
add
add
pop
pop
mov
add
mov
ret
dec
cmc
je
mov
lock
jno
mov
ljmp
shlb
je
mov
into
repz
pop
mov
mov
ret
sbb
pop
repz
or
daa
rorl
out
pop
jmp
cmpsl
push
aam
jecxz
lret
sbbl
loopne
popf
sbbl
icebp
mov
adc
jge
ss
mov
xchg
jo
loop
add
aam
sbb
fisttpl
mov
mov
cmp
xchg
gs
pop
shlb
adc
jmp
in
jb
mov
les
cmp
jne
push
sbb
or
cli
sbb
jecxz
jo
xor
sub
jmp
xchg
mov
ss
pop
test
loopne
mov
push
rorl
pmulhuw
out
or
mov
lret
outsb
xor
call
inc
andb
push
push
out
test
inc
test
add
sahf
push
adc
test
mov
loope
mov
nop
cmp
popf
sbbb
icebp
inc
std
je
add
jge
add
dec
orb
jecxz
lods
fistl
push
dec
pop
test
sbb
mov
imul
ret
nop
cmp
sahf
stos
repnz
movsb
loope
std
cmpsb
stc
xor
mov
mov
mov
cmpsb
movsl
jge
adc
loope
std
sbb
push
or
or
inc
or
jle
out
pop
dec
xlat
or
jns
insl
pop
aaa
and
dec
add
call
sub
idiv
mov
enter
aaa
and
and
inc
lea
int3
and
mov
cmc
mov
arpl
cwtl
movsl
mov
pusha
push
ficoml
in
lods
jb
adc
add
test
test
adc
mov
jg
in
les
jge
jns
sbb
xchg
inc
fisttps
inc
in
add
sbb
std
mov
push
mov
or
ljmp
clc
mov
fldcw
ror
and
inc
pop
mov
jns
cmp
fildl
out
mov
aam
ret
xor
push
decl
mov
je
icebp
adc
into
pop
add
xor
pop
mov
sbb
imul
inc
pop
loop
pop
mov
mov
sub
sub
call
stos
pop
popf
or
cmpsb
sub
mov
nop
fldcw
imul
ficomps
loop
adc
jo
push
out
sbb
jge
cmp
ds
out
mov
xchg
lea
mov
stc
repz
rep
jae
or
jns
andl
int3
cmp
shr
test
dec
or
pop
or
inc
ljmp
hlt
xor
fsubrl
jo
sub
popa
inc
mov
cli
pop
push
cmc
imul
das
gs
cmp
dec
jno
dec
fisttpl
cmpsb
orb
push
loopnew
lahf
dec
das
out
jne
mov
out
inc
xor
sahf
in
in
adc
aas
int
xchg
mov
fiadds
fwait
insl
gs
jecxz
xchg
ja
adc
jno
push
scas
inc
into
minps
lahf
fwait
sbb
dec
mov
push
pusha
insl
dec
mov
jg
mov
xor
hlt
lret
xchg
xchg
popa
adc
push
mov
roll
sub
mov
xor
js
pop
lds
xor
mov
lahf
mov
push
stos
hlt
mov
insl
mov
sub
dec
scas
mov
mul
outsl
mov
mov
cs
in
or
push
in
or
mov
movsb
mov
xlat
int
mov
dec
jbe
stc
nop
std
sbb
push
outsb
xchg
mov
or
std
sti
jae
subb
xor
test
ljmp
cmp
sbb
cli
inc
jnp
in
and
mov
ljmp
inc
xchg
adc
adc
rcrl
adc
in
lret
filds
mov
pop
mov
dec
mov
pop
pop
xor
mov
daa
inc
hlt
dec
adc
cwtl
sbb
or
aam
arpl
imul
imulb
jle
or
sub
and
inc
loop
add
mov
dec
xor
mov
sbb
aas
rsm
fstpl
jne
add
mov
test
jnp
mov
inc
insl
jbe
dec
js
cli
xlat
inc
pop
outsl
xor
mov
and
sub
and
ret
imul
push
mov
jge
rol
outsb
sbb
push
mov
ucomiss
or
ljmp
mov
push
sahf
sub
flds
mov
pop
sti
ja
adc
push
clc
inc
cmp
sub
pusha
scas
es
sbb
lods
xchg
mov
data16
aas
cmp
or
mov
xchg
add
inc
jle
clc
sub
fs
in
xor
xor
push
sbb
inc
nop
lret
cltd
sub
stos
rcll
xchg
subl
imul
in
sbb
and
mov
cmp
int3
jl
mov
mov
sub
dec
clc
add
adc
and
fdivr
mov
nop
scas
idivl
test
insb
hlt
cmpsl
adc
int
packuswb
cld
dec
inc
pop
pop
enter
xor
dec
pushf
cltd
icebp
mov
adc
movsb
cmpsb
add
jne
mov
insb
repz
int
fldt
jmp
movsl
cmp
imul
int3
xchg
jns
adc
sbb
cwtl
mov
ret
fildll
insb
out
bnd
flds
shl
popa
sub
orb
inc
test
xor
fbstp
jg,pn
cmp
ds
cmp
pop
xchg
cmp
fistps
push
add
repz
push
repz
hlt
fs
lock
mov
ret
mov
push
or
mov
cltd
or
lret
inc
sub
add
lahf
fsubrs
adc
addr16
push
mov
xchg
jge
icebp
xor
pop
out
push
mov
push
jbe
pop
xchg
jnp
aad
mov
pop
aam
lahf
adc
mov
loope
outsb
fbld
addr16
movsb
nop
jns
mov
pop
loop
cltd
icebp
daa
mov
cmp
js
in
or
test
adc
sub
lret
sub
out
dec
pushf
mov
add
fcmovu
out
fwait
shl
add
cltd
and
data16
xchg
jge
cmp
and
xchg
cmp
rcll
push
add
adc
sbbb
adc
mov
pop
inc
mov
jns
and
mov
sbb
adc
cmp
clc
jmp
push
pusha
movsl
jmp
inc
ja
mov
shl
fisttps
int3
xor
push
mov
out
xor
scas
popf
fbld
inc
xchg
push
lcall
sarl
pop
and
roll
mov
ss
dec
dec
adc
inc
jb
out
mov
sarb
std
push
sbb
scas
ds
in
pop
mov
inc
dec
xchg
sub
dec
imul
cmp
jmp
mov
push
das
jns
mov
or
addr16
pop
fsub
in
jmp
or
sar
mov
lahf
std
inc
cmp
stos
das
sbb
and
jl
jb
add
cmpsb
mov
jmp
cli
dec
aad
and
pop
cmp
out
repz
mov
fldenv
movsb
imul
jno
rcrb
xor
lahf
jle
es
pop
mov
jo
push
arpl
stc
shrl
ret
mov
mov
nop
enter
mov
xchg
sti
dec
push
mov
fldenv
jb
push
mov
xchg
xchg
mov
repz
jno
jmp
or
cltd
shlb
cwtl
xchg
mov
sbb
out
mov
outsl
test
jne
lods
ljmp
loop
sbb
lcall
gs
sbb
outsl
mov
sbbb
arpl
sbb
nop
push
mov
rcl
mov
test
jno
pop
dec
mov
xchg
lods
popa
mov
sti
sbb
xor
jl
sti
stc
push
push
or
ffree
arpl
insl
and
jae
inc
cmp
mov
cld
add
jns
out
js
push
xchg
or
aaa
cmp
xchg
xchg
and
filds
add
or
jnp
cltd
jmp
jo
prefetcht1
inc
int
test
mov
cmovb
jle
insl
mov
add
cmp
call
add
jmp
mov
push
mov
pop
test
push
cmpsb
popa
xor
sub
insl
mov
adc
pop
cmpsl
aam
xchg
roll
adc
mov
push
push
outsb
in
fcompl
ljmp
out
mov
imul
mov
je
dec
inc
lea
pop
dec
ror
stos
leave
mov
mov
xor
repz
mov
lahf
sub
pop
outsl
dec
pop
jmp
and
sub
mov
mov
jg
and
nop
cmp
jl
ret
loop
mov
and
xchg
imul
sub
mov
mov
scas
mov
out
aas
aam
jle
add
push
lds
ss
mov
in
fisttpl
aas
jge
mov
jp
call
and
jbe
push
shlb
icebp
sbb
js
mov
xchg
jne
loopne
aas
adc
mov
lds
in
jmp
sub
popa
dec
jae
push
mov
push
aam
repnz
js
test
or
clc
hlt
imul
inc
adc
out
clc
xchg
ja
loope
ret
xchg
out
push
sbbb
mull
or
mov
sbb
push
movhps
inc
jb
int3
insl
sub
sti
mov
sbb
out
jg
in
vpunpckhqdq
mov
push
mov
icebp
testb
fs
sub
push
sahf
inc
cli
mov
mov
iret
enter
cmc
sbb
clc
and
push
xchg
int
inc
imul
xchg
adc
add
push
enter
loop
mov
or
rcll
clc
fnstcw
pop
lret
outsb
pop
test
mov
jae
jnp
cmp
mov
mov
mov
xchg
sub
xchg
loope
notl
insb
mov
jge
bound
fists
adc
filds
sahf
mov
pop
fwait
cwtl
xor
push
sub
fwait
lea
push
loopne
mov
fsubp
fldcw
xor
in
mov
xchg
sub
pop
sub
mov
cmp
jp
call
push
pop
lret
inc
xchg
daa
or
sbb
sbb
loop
es
xchg
ljmp
cli
xor
test
cmp
push
push
push
push
xor
adc
shrb
cmp
stos
dec
clc
aas
pop
mov
movsb
mov
mov
daa
lock
clc
jge
pusha
hlt
fnstcw
inc
icebp
mov
pop
push
dec
mov
lods
inc
or
leave
cmp
rcll
jo
fisubl
pop
fdivs
add
scas
lret
xchg
mov
dec
sti
lcall
out
loopne
rorl
push
rcrl
add
fcmovne
inc
mov
subb
add
pop
jns
cltd
mov
fsts
or
adc
std
push
cmc
lods
sbb
and
or
add
add
push
mov
test
pop
jno
mov
lcall
pop
pushf
dec
scas
pop
inc
lods
mov
xchg
adc
adc
lds
int
xchg
mov
bound
mov
jbe
sbb
ret
mov
xchg
data16
ljmp
das
scas
lahf
mov
out
popa
imul
aam
and
dec
or
popa
xor
cmc
mov
push
jbe
sar
jmp
lods
cs
jge
inc
or
xor
dec
pop
ja
push
xor
xchg
and
cmp
sbb
dec
mov
add
orl
loopne
daa
mov
dec
pop
aas
jb
add
sbb
sub
pop
in
fstl
push
mov
shll
mov
stos
test
adc
push
push
jne
mov
imul
dec
jnp,pt
jns
cmpsl
popf
aad
pop
mov
mov
fdivrs
jge
addl
int3
shlb
scas
ljmp
imul
lds
mov
add
test
lahf
jmp
sbb
fcoml
imul
adc
pop
aas
lds
sbb
add
fistpll
ds
adc
mov
add
pushf
pop
mov
mov
inc
pop
sbb
outsl
aad
jae
sbb
cmpsl
out
nop
sub
or
out
xchg
mov
imul
pop
ret
pop
jbe
jbe
add
outsw
in
cmp
push
xor
mov
mov
aas
insl
jl
mov
scas
sti
scas
imul
or
ficoml
scas
and
adc
add
imul
das
sub
xor
repnz
iret
fcomps
cmpsl
mov
mov
sub
ljmp
enter
push
hlt
mov
cmp
xchg
jb
in
push
jp
sbb
fsubs
in
and
cmp
mov
sbb
into
sbb
pop
add
dec
xchg
add
push
incl
dec
cmp
mov
les
fstpl
sbb
xlat
add
in
push
data16
sbb
outsb
and
jmp
mov
mov
push
lea
outsl
mov
mov
lahf
sub
lret
push
shlb
adcb
cwtl
cmp
mov
pop
movsl
icebp
pusha
rolb
test
stos
push
bound
mov
iretw
xlat
mov
jnp
repz
jns
dec
mov
inc
jmp
sub
imul
outsl
mov
imul
les
fstpl
mov
xchg
sub
sub
add
and
or
jecxz
add
cs
jp
ljmp
outsl
loope
stos
adc
mov
stos
xchg
mov
cmp
add
pushf
ret
sub
xor
adc
mov
xor
sti
push
ret
adc
lods
outsl
loop
xor
cwtl
inc
repnz
adc
pusha
cmp
sbb
andl
nop
stc
stc
std
in
daa
sbb
jb
jo
mov
mov
addr16
inc
es
aas
lods
jg
mov
cltd
pusha
jo
mov
in
add
cwtd
dec
adc
imul
mov
mov
or
pop
stos
push
rcrb
lods
jp
xor
mov
movsl
divl
repz
jo
icebp
lret
call
push
cwtl
loop
outsb
push
xchg
testl
sbb
sbbl
fsubrs
adc
rorl
into
aad
loop
adc
pop
cltd
and
xchg
add
fisttpll
push
pop
mov
lea
cmp
or
mov
jmp
fisttps
mov
jmp
xor
mov
jns
and
cmp
xchg
jp
cld
or
movsl
ss
in
mov
inc
aas
or
xchg
fisubl
and
and
cmc
jp
ss
daa
or
cmp
push
or
push
outsl
cmp
lret
xchg
sti
lods
xor
mov
pop
rolb
out
loopne
jge
or
les
add
push
fistl
incb
push
jb
arpl
cmpsl
cmp
sub
iret
and
xor
dec
addb
int
in
gs
lods
push
les
xchg
sbb
xor
sti
cmc
adc
and
into
or
cmc
mov
scas
pop
scas
add
data16
sbb
in
mov
fiadds
mov
xchg
xchg
movl
stos
or
and
sub
in
jne
roll
mov
lods
mov
in
test
out
push
aad
rorb
mov
sbb
ficoml
mov
pusha
jmp
fadd
add
cli
call
clc
sbb
mov
or
out
mov
dec
daa
loopne
add
or
mov
shrb
lret
stos
jmp
iret
fisubl
in
scas
cmp
xor
enter
lds
push
fisubrl
dec
cmp
sarb
xor
negl
push
mov
lods
test
xor
sbb
push
jmp
jp
js
imul
cmpsl
push
xor
mov
jne
rcl
fistpll
in
das
incb
pop
jle
add
adc
mov
mov
jge
enter
sbb
sub
repz
arpl
lea
add
sub
shlb
add
fwait
dec
loop
push
lods
dec
pop
loopne
pushf
mov
insl
bound
in
popf
xor
jae
push
orl
pop
orl
out
pop
ljmp
fnstsw
ret
adc
fs
sar
add
dec
aas
mov
lret
xor
ljmp
scas
cmp
jbe
ja
ret
fistpll
scas
cmp
bound
test
or
lods
imul
jl
push
dec
scas
pushf
aaa
fcomps
inc
lea
xor
sbb
shrl
xchg
shlb
pop
mov
sbb
dec
pop
push
test
sbb
mov
rclb
insb
pop
jmp
inc
out
jb
add
add
xorb
pop
cmpsl
inc
add
mov
data16
dec
xchg
inc
or
mov
sub
out
imulb
push
jp
cmp
mulb
out
movsl
enter
xchg
hlt
sti
xchg
call
xchg
in
lret
iret
push
jo
sbb
sub
pop
data16
lods
rcrb
int3
or
loopne
sub
ljmp
pusha
or
adc
adc
add
stos
jae
movsb
adc
jecxz
push
mov
dec
xchg
jbe
sbb
stos
pop
stos
test
clc
out
sbb
jecxz
test
in
decb
negb
repz
pop
jae
xchg
xor
pop
xor
dec
arpl
pop
push
imul
fdivrs
test
jo
fidivl
push
jecxz
inc
add
les
scas
inc
cli
fnstcw
lea
mov
jl
add
mov
mov
or
mov
xchg
sar
in
mov
add
pop
cmc
stc
mov
test
mov
jecxz
inc
dec
sbb
fdivs
dec
mov
idivl
into
cld
int
mov
push
dec
in
jge
adc
cmpsb
mov
sar
xchg
inc
mov
jnp
popa
inc
mov
fbld
mov
cld
popa
inc
fidivs
inc
icebp
clc
minps
add
scas
adc
loope
xor
addr16
dec
push
adc
or
enter
lods
flds
jg
test
add
movsb
mov
cmpsl
add
cli
leave
xor
je
xchg
jae
jns
sbb
cmp
xchg
xor
mov
mov
fisubs
nop
std
mov
rcll
cmpsl
sub
in
addr16
adc
mov
mov
fwait
shll
cld
lds
loop
jae
fisubs
rcrb
pusha
mov
nop
das
cmp
arpl
jge
test
clc
leave
sbb
outsl
sub
adc
sbb
jns
add
fwait
jge
stos
loop
shlb
fldcw
cmp
fs
popa
mov
mov
imul
xchg
cmp
addb
inc
out
sub
fiaddl
or
inc
inc
or
xor
test
stc
pushf
enter
cmpsb
jp
fucom
jb
dec
test
sub
ja,pt
icebp
icebp
cmc
sbb
jmp
mov
cs
insl
cmp
cltd
repz
movsb
test
test
mov
std
nop
mov
ret
shrl
neg
bound
clc
cli
je
dec
inc
lahf
daa
lret
pop
jb
xchg
hlt
add
dec
and
xchg
sub
xor
pop
test
ret
mov
inc
inc
sub
mov
and
sub
jnp
push
dec
les
pop
inc
adc
aaa
pop
sarb
repz
addr16
rolb
push
mov
cmp
mov
stos
mov
rolb
daa
inc
lahf
loope
stos
fs
nop
xchg
jg
lcall
mov
xchg
test
int
in
or
dec
cld
push
addr16
call
inc
mov
sbbl
or
sti
jge
test
pop
fdivs
ret
clc
je
cwtl
bound
or
inc
movsl
int3
add
or
clc
imul
mov
into
loope
push
icebp
cltd
cli
adc
cmp
cmp
mov
mov
sub
inc
pop
lret
jns
filds
add
mov
sti
xor
stc
sbb
adc
xchg
imul
adc
pop
pop
mull
cmp
pop
iret
pop
xchg
test
addl
cwtl
jno
dec
mov
push
inc
cmp
mov
enter
hlt
or
lock
ret
xchg
inc
mov
push
adc
and
stos
dec
mov
jge
inc
aaa
mul
aad
inc
fcoml
mov
jle
sub
imul
adc
inc
or
push
push
inc
test
lods
xchg
movsb
nop
in
mov
add
adc
mov
mov
arpl
pop
std
push
loop
xor
sub
daa
iret
or
shll
jp
clc
not
lods
in
mov
sub
fdivl
mov
push
xchg
js
sbb
push
movsb
ret
cmp
xchg
adc
and
pop
mov
pop
pop
and
xchg
push
xor
fldcw
lcall
mov
fstpl
xor
sub
hlt
pop
jl
std
and
arpl
lea
enter
ffree
mov
jg
mov
push
movsl
ret
int3
stos
cli
stos
push
popa
out
xchg
clc
add
push
mov
inc
ja
dec
sub
and
xor
arpl
cmpsl
cmp
rolb
sub
mov
or
or
pop
scas
repz
pushf
pop
out
and
or
imul
or
push
stos
xor
sbb
sti
xor
adc
or
mov
sbb
scas
rcrb
push
aaa
cli
sbb
arpl
xchg
scas
push
sub
mov
repz
cmp
out
mov
mov
stc
data16
lods
adc
push
push
mov
jnp
enter
pusha
je
and
xchg
xchg
sub
sub
cmp
push
and
mov
dec
ja
aam
pop
cmpsl
cmpb
inc
aaa
cmp
repz
lcall
inc
mov
ret
in
ds
adc
into
test
mov
test
jb
pop
imul
dec
in
jmp
sbb
inc
movsb
bound
insb
xor
arpl
outsb
inc
aam
pop
mov
pop
add
inc
shrb
mov
mov
cmpsl
psubw
cli
stos
ljmp
fdivl
idivb
push
subb
pop
mov
mov
dec
popa
pop
shll
jmp
adc
mov
lret
outsb
add
imul
inc
cmp
adc
sub
daa
imul
dec
lcall
dec
int3
inc
jp,pn
out
or
cmp
test
xchg
das
mov
push
hlt
jb
mov
jo
xchg
pop
es
adc
jl
dec
push
adc
pop
mov
lea
popf
dec
xor
stc
pop
xor
pop
movsb
cmp
inc
inc
inc
iret
pop
adc
lock
cmp
xchg
mov
jo
sub
cmc
push
fwait
sub
xor
andb
ljmp
cmp
dec
or
lds
icebp
or
mov
test
mov
les
sti
lret
jnp
inc
pop
xchg
adc
lret
test
or
in
push
pop
add
pop
xchg
or
sbbb
fld
add
daa
mov
das
orb
mov
out
jle
nop
xchg
jno
inc
mov
cmp
test
inc
cmp
sub
test
push
cs
scas
call
push
inc
data16
test
inc
sahf
adc
push
mov
call
add
in
sbb
cmp
sbb
xchg
mov
add
shrb
and
bound
cli
inc
clc
daa
mov
sahf
aaa
fistpl
inc
jmp
in
inc
lret
dec
mov
scas
push
clc
cmp
aaa
mov
mov
add
push
sub
push
sbb
je
sbb
shll
cs
inc
fcmove
imul
dec
mov
pop
clc
in
xchg
dec
and
lret
add
xor
add
adc
inc
inc
xor
or
adc
js
sbb
addr16
pushf
hlt
sbb
aas
sub
rcrl
dec
shll
dec
shr
inc
mov
add
fadd
mov
jo
xchg
add
leave
div
mov
sub
stos
pop
repz
mov
xor
movsb
push
enter
mov
push
jmp
mov
mov
lock
fnstsw
jnp
rcrl
movsb
cli
xchg
adc
mov
cmp
adc
xor
arpl
leave
test
push
mov
mov
cmp
dec
adc
ss
xchg
or
imul
xchg
pusha
adc
int
push
cmp
out
fwait
inc
cmp
cltd
repnz
adc
jmp
int
dec
cmp
fcompl
int
adc
mov
mov
pop
sub
adc
movsl
lcall
clc
out
int3
sub
repnz
xchg
iret
mov
push
in
scas
lock
or
sahf
lock
xchg
lods
int3
imul
push
out
cmp
es
jmp
jns
clc
ss
and
shl
neg
sub
mov
data16
ljmp
pop
xchg
lahf
es
fsub
add
add
inc
dec
xchg
int
pusha
xchg
shrb
and
scas
test
arpl
inc
xor
cld
fcoms
orl
inc
gs
dec
ljmp
sahf
into
imul
imul
shll
loope
loopne
adc
xor
mov
stc
loopne
cltd
testb
out
xor
mov
insl
jp
xchg
aam
push
loopne
adc
ljmp
fldt
mov
lds
insl
cmp
test
xor
fcompl
push
enter
fcoml
dec
in
sbb
or
pop
arpl
rcrb
jns
cmpsb
cmp
ja
rep
xor
mov
aaa
outsb
popa
pushf
arpl
jge
sub
addr16
fbld
outsb
jl
fs
mov
faddp
cmpsl
sahf
es
scas
in
das
outsl
movsb
jns
outsl
dec
mov
adc
xor
cmp
lahf
jmp
ja
gs
movsb
push
push
mov
mov
loopne
xchg
and
ficoml
test
test
arpl
jb
push
mov
clc
rclb
xchg
js
sub
cltd
sub
adc
xchg
jecxz
and
xor
add
shrb
es
lret
adc
out
mov
inc
stos
nop
mov
aad
cmp
push
sub
sbb
int3
hlt
pushf
lahf
daa
pushf
sub
and
push
in
cltd
inc
and
cltd
and
loopne
and
and
fistpl
lahf
mov
ficoms
fsts
push
fcmovnb
std
push
or
clc
mov
adc
in
outsb
divb
push
out
jmp
sub
arpl
cld
xor
ret
outsb
add
adc
je
mov
int
stos
imul
dec
ret
in
lock
xchg
mov
or
pusha
sbb
mov
popa
leave
dec
aas
test
rolb
cmp
lret
mov
test
cmp
mov
mov
loope
lock
outsb
es
mov
fwait
xchg
cmpl
push
pop
mov
add
add
lret
int
sbb
loop
inc
cmc
in
adc
pop
pop
and
arpl
ficoml
pushf
add
das
cld
mov
or
call
push
sub
adc
ds
cmp
gs
into
jae
xchg
repnz
xchg
mov
push
push
sub
hlt
in
or
sbb
adc
dec
mov
mov
mov
sbb
scas
jge
js
mov
fwait
testb
sbb
aam
xor
es
inc
out
movzwl
lret
push
mov
xchg
daa
push
pop
repnz
nop
ljmp
and
mov
sub
jecxz
stos
js
cmc
shlb
jo
dec
pop
cmp
mov
loop
mov
lock
ret
inc
cltd
arpl
cli
pushf
nop
jne
fstpt
mov
xchg
in
sbb
dec
mov
aaa
stos
insl
cmp
adc
jno
or
or
sbb
out
pushf
aad
fdivr
inc
ret
int
push
and
push
dec
cmpsl
test
or
shrl
out
hlt
scas
jge
test
negl
stos
insb
sarl
or
inc
and
jp
push
call
fistpl
lahf
and
xor
mov
adc
mov
pop
adc
xor
push
mov
xor
jle
sbb
inc
add
je
cmp
test
xchg
rcr
jle
hlt
stc
lods
push
jb
dec
test
inc
insl
push
fcoms
inc
lods
mov
or
popa
mov
xchg
mov
mov
xor
cmp
sarb
pop
xor
ret
aam
sti
addr16
xchg
es
xor
ret
idivb
sti
incl
add
and
sbbb
push
cs
repnz
sbb
mov
loope
and
fcomip
out
mov
adc
pop
xchg
mov
rcrb
rclb
hlt
pop
imul
fidivl
mov
hlt
cmpb
mov
cmp
adc
ret
rcll
mov
fdivrl
jo
stc
test
inc
imul
dec
mov
sbb
sbb
dec
int3
call
xchg
pop
push
int3
adc
jle
mov
sub
imulb
mov
sub
dec
jns
stc
lret
in
pushf
sbb
jp
scas
jle
cmp
cmp
cmpsb
cwtl
repnz
je
and
leave
pop
ret
or
nop
adcl
int3
or
das
mov
arpl
cmp
fimull
fcomps
shll
push
inc
add
insl
cmp
xorl
mov
fidivs
aam
scas
repnz
leave
les
cmp
testb
loop
bnd
sub
mov
sbb
aaa
xchg
out
es
aas
div
sub
sub
sbbb
xor
add
push
jb
inc
sti
test
dec
das
push
lret
or
fistpll
lcall
mov
or
inc
push
movsb
mov
xchg
aaa
inc
xchg
jmp
pop
mov
cmp
inc
jmp
in
add
dec
xlat
sbb
jb
shl
mov
imul
and
mov
das
ret
dec
add
sbb
iret
enter
popf
jns
ss
inc
push
and
fstps
popf
data16
scas
dec
sahf
adc
in
cmp
arpl
inc
fdivrs
and
je
inc
push
ja
push
cmp
mov
pop
lea
and
outsb
xor
imul
sbb
rorb
xchg
andb
ret
insb
outsb
imul
mov
push
dec
cwtl
subl
sbb
aam
lock
clc
out
fldt
inc
js
rcrl
inc
arpl
jnp
arpl
ret
jne
push
pop
rorb
cmp
push
in
xchg
outsl
in
jnp
xor
aad
xchg
jmp
inc
enter
mov
rorl
maskmovq
idivl
cld
ss
addr16
jl
mov
pop
out
filds
test
mov
adc
mov
pop
lret
jecxz
decb
lods
js
repz
mov
or
cwtl
dec
mov
pop
and
inc
xorb
or
mov
pop
sbb
mov
cmpsl
into
push
sarb
and
mov
add
mov
lret
lods
inc
push
sbb
fwait
xchg
cmc
ljmp
push
push
push
shlb
stos
mov
in
push
and
xor
jns
sbb
xor
fadds
out
cmp
jne
mov
jnp
out
cs
insl
fwait
add
jo
sub
cmp
in
aam
dec
jecxz
call
xor
pop
dec
leave
jl
cmp
sub
insb
sbb
xor
dec
out
scas
or
addr16
sub
jecxz
movsl
sub
and
pop
clc
imul
fcomp
es
mov
out
or
jecxz
xchg
in
and
test
adc
test
inc
scas
inc
fcmovu
not
movsl
fbld
es
call
add
or
shrl
add
push
imul
xlat
push
stos
sti
fwait
cmpsl
and
ficompl
pop
inc
rolb
imul
pop
pop
add
xchg
mov
push
add
aad
xor
xchg
test
js
pop
ja
out
xchg
das
ja
mov
cmp
ds
scas
outsb
jnp
into
xchg
mov
std
fnstcw
cs
lods
mov
enter
mov
or
fnstcw
arpl
sub
push
mov
jnp
dec
rorl
mov
packuswb
inc
iret
iret
imul
add
movsl
sbb
mov
cmpsl
out
lock
flds
scas
lahf
mov
dec
call
sub
cli
mov
push
pusha
testl
lahf
rorl
mov
mov
and
ja
fs
adc
out
xchg
xchg
mov
mov
jmp
cmp
sbb
dec
pop
add
fimull
mov
sbb
stos
and
sub
xor
sub
push
lahf
pop
data16
mov
jno
pushf
sti
sbb
mov
sub
test
jg
cmp
pop
lock
or
or
xchg
jne
sbb
inc
adc
das
cwtl
cmp
lods
dec
mov
in
mov
cltd
add
idivb
arpl
inc
aam
subb
enter
xlat
fsubrl
arpl
lock
push
jo
add
jmp
push
xor
jbe
mull
daa
les
icebp
sti
aaa
loopne
faddp
cmp
fdivr
sbb
xor
mov
xchg
sarl
sbb
mov
jo
incl
and
out
imul
cmp
fldenv
test
addr16
xchg
test
sub
inc
test
jmp
xchg
into
sarb
fldl2t
imul
or
test
test
cwtl
cli
add
pop
pop
add
cmp
insb
cmp
dec
cmp
dec
rcl
dec
out
inc
and
aas
loop
cmp
loop
cld
nop
into
push
mulb
push
jo
or
ja
ss
subl
push
lcall
into
mov
jae
jmp
loopne
mov
xchg
pop
sub
mov
movsb
pop
fidivl
test
stos
incl
or
mov
andl
push
mov
inc
push
and
lret
and
lods
push
mov
xor
movsl
les
mov
pop
push
fcmovb
inc
jae
adc
mov
sub
cmp
loopne
and
bnd
sbb
sbb
pop
xor
mov
orl
test
inc
jle
cmp
into
adc
shl
dec
jmp
xor
movsb
pushf
adc
dec
outsl
jno
mov
sub
int
add
fwait
pop
fistps
mov
stc
add
jle
sbb
fisubl
mov
sbb
dec
jb
fstpt
insb
rcl
outsl
xchg
scas
pop
or
push
loopne
dec
fs
sub
repnz
es
push
push
lcall
mov
int
out
push
ja
dec
xor
adc
test
xor
std
rcrl
bnd
insb
std
xchg
adc
lahf
fdivrl
lcall
mov
jmp
unpckhps
jle
inc
dec
out
inc
js
lock
in
repz
aad
es
xchg
push
add
cmpsl
fimull
repnz
test
pop
mov
dec
int
pop
or
shrl
fldt
test
pop
pop
adc
es
and
fucomp
jnp
aas
pop
or
xchg
mov
push
sbb
and
jge
je
jno
mov
dec
adc
jp
cmp
test
fists
mov
mov
lret
pop
rclb
xchg
mov
inc
add
xchg
push
mov
into
xor
fimuls
dec
push
mov
test
mov
je
jns
inc
call
pop
hlt
popf
dec
ljmp
xor
jno
inc
decb
pop
movsl
test
xor
and
cmp
mov
fisttpl
sub
and
dec
lahf
mov
lods
bound
cmp
push
fadd
lods
cmpsl
pop
stc
int
incb
jp
aaa
cld
fistl
and
fsts
xorl
subb
xor
ret
add
mov
xor
pop
pop
sub
test
scas
test
lea
popa
push
jl
cmovs
sbb
aad
repz
enter
bound
in
and
outsl
xor
pop
dec
gs
pop
in
hlt
jmp
dec
xor
dec
add
daa
push
xor
sub
inc
popf
xchg
shll
cmp
add
mov
mov
fs
lret
sub
pop
fmull
mov
dec
ljmp
cmp
sarl
mov
xchg
aas
repz
outsb
xor
pop
pusha
cli
or
mov
push
test
sub
lods
inc
bound
dec
xchg
sbb
sti
lds
or
rcll
mov
hlt
repz
bound
cli
pop
daa
jnp
fildll
hlt
push
lea
pushw
and
mov
repz
sbb
inc
pop
sub
outsl
xchg
mov
push
and
cmp
aad
js
cmp
lret
call
pop
mov
dec
mov
rorb
sub
cmp
cmc
lcall
mull
mov
mov
sahf
inc
ss
shr
add
test
es
in
push
es
xchg
add
std
lea
subb
dec
mov
cmp
outsl
test
in
adc
std
pop
aaa
sti
or
or
pushf
into
out
xchg
sti
arpl
popa
bound
stos
aam
enter
popf
jle
mov
inc
cmpsl
sbb
adc
pop
inc
adc
repz
cwtl
adc
sarb
push
add
mov
fcmovbe
js
jle
mov
mov
ret
lods
inc
fcoml
fwait
lahf
mov
movsb
add
jb
ljmp
fists
or
jg
inc
fnstenv
out
cmp
xorb
jg
in
lea
ja
das
mov
dec
inc
or
mov
out
dec
call
out
or
rolb
sti
jb
out
loop
mov
push
pop
loop
sti
ljmp
xlat
in
and
mov
xlat
push
xor
mov
and
enter
out
mov
sbb
loopw
imul
jmp
sbb
cmpsb
pop
lret
pop
call
sub
adc
fbld
push
ret
xor
adc
adc
test
xchg
adc
rcr
push
repz
movsl
mov
xor
fdivrl
push
add
leave
xor
in
xchg
push
mov
pop
cmp
aam
stc
or
movsl
xor
aad
in
push
push
jg
xchg
fidivrl
add
mov
jmp
add
adc
sbb
xor
fmull
mov
sub
push
jae,pn
jg
cmp
arpl
or
mov
mov
adc
pop
cmc
les
push
xlat
in
outsb
add
jl
mov
and
mov
mov
add
dec
push
mov
pop
test
xor
or
shrl
jg
adc
lret
cmc
add
lds
hlt
scas
pop
xchg
adc
mov
test
mov
rcrb
and
inc
loope
cmp
aad
lds
movups
push
std
mov
jnp
rorl
test
fildll
iret
dec
cwtl
mov
insb
iret
sub
mov
icebp
inc
stc
lahf
outsb
in
loop
fs
lahf
add
inc
in
jp
add
cmp
lods
cmp
push
push
test
jl
nop
or
push
cmpsl
dec
addr16
into
lods
es
pop
inc
mov
or
cs
orb
or
loop
jge
es
hlt
cmc
sbb
adcb
jp
hlt
cmp
fisubrs
pop
ja
push
cmp
iret
into
push
jbe
lret
out
and
daa
subl
fstl
sub
jp
icebp
filds
in
test
mov
movsb
bound
cmp
into
or
outsl
addr16
pop
fbstp
and
in
lfs
ret
std
push
out
adc
mov
mov
rcrl
pop
xchg
cmpsb
cmp
mov
pop
pop
fisubl
mov
loope
push
mov
sti
notb
sarb
mov
jecxz
and
notl
and
add
mov
scas
xor
out
xchg
bound
in
loopne
idiv
call
pop
jns
mov
and
in
adc
push
mov
pop
jns
faddl
ret
ret
pop
cmpsb
mov
jae
cld
repz
movsl
es
xor
pop
out
add
lods
cwtl
jns
fisubrs
adc
cltd
mov
mov
inc
testb
push
aas
imul
pop
adc
pop
inc
mov
dec
movsl
sub
fistpl
fbstp
pop
pop
inc
bndldx
aad
mov
adc
rolb
rsm
xor
outsl
cmpl
sub
pop
js
mov
or
and
and
repnz
fbld
pop
push
xor
xor
sbb
cmpsb
xor
scas
mov
scas
or
mov
pop
pop
shr
lret
push
sub
aam
fs
lret
inc
cwtl
inc
mov
sub
in
aaa
dec
mov
jnp
repnz
xorb
xorb
insb
mov
push
adc
test
outsb
arpl
orb
fnstenv
stc
dec
mov
rcll
movsl
ds
dec
or
les
cwtl
adc
pop
or
dec
mov
addr16
outsb
mov
push
pop
jb
mov
jmp
mov
nop
pop
add
ret
or
mov
out
out
xor
sbb
js
jb
addl
xchg
daa
popf
imul
xchg
mulb
out
outsl
xchg
sub
lock
jnp
inc
sub
fisubrl
mov
iret
jae
cmp
xor
es
pop
popa
add
clc
or
xor
push
jno
mov
sub
mov
jp
push
xchg
dec
imul
je
repz
pop
cs
mov
lcall
inc
pop
gs
pushf
xchg
dec
jecxz
push
rol
daa
outsl
and
into
adc
bound
jbe
or
mulb
out
push
cmpsb
or
mov
outsb
daa
mov
test
neg
pop
repnz
stos
dec
sub
pop
xor
pop
xchg
sbb
sbb
xchg
mov
into
adc
negb
lret
filds
sub
mov
gs
push
outsb
xor
xchg
ja
lea
mov
mov
shr
int3
dec
mov
inc
dec
jl
idivl
fcmovnu
andb
adc
dec
inc
jge
mov
loop
dec
fbstp
lods
loop
add
sarb
dec
popa
xorl
jge
add
mov
push
out
jp
nop
cwtl
dec
cmc
das
and
adc
cwtl
fimuls
roll
jl
int3
jnp
notb
dec
mov
cmp
in
lret
mov
lcall
leave
outsl
adc
mov
shrl
jne
out
mov
xchg
xchg
adc
jl
cli
cmp
inc
fistl
cmp
sbb
dec
mov
lds
push
inc
les
mulb
lret
xor
insb
nop
inc
pop
jle
push
cs
lods
stc
arpl
aad
mov
dec
les
fdiv
cmp
lea
jno
inc
jg
inc
jl
jo
and
mov
push
jge
mov
outsb
lahf
dec
xchg
loope
insl
cli
mov
in
dec
cmp
sbb
test
hlt
mov
js
mov
lret
mov
sub
mov
loopne
sbb
xor
inc
pusha
out
ret
popf
movsl
mov
cmc
adc
mov
pop
loop
sbb
pop
inc
push
les
mov
jle
out
pop
popf
cli
and
sbb
xor
mov
inc
nop
insl
jg
in
pop
rcr
push
aas
out
lds
aas
addr16
out
cmc
movsb
stos
adc
mov
pop
sub
inc
lea
not
sub
mov
loop
int
scas
add
push
adc
xchg
fisubl
inc
das
inc
adc
cmp
sub
cmp
ss
mov
out
imul
add
xor
loope
mov
int
cmp
outsb
mov
inc
cld
mov
inc
and
fldt
cmp
mov
pop
cmp
lods
sub
sub
cmc
xor
icebp
or
pushf
push
sbb
gs
cmp
and
sbb
popaw
popf
jns
iret
sbb
enter
mov
stos
inc
test
lcall
mov
mull
add
jge
xchg
xlat
add
gs
jg
lods
aas
and
dec
sub
sti
fiaddl
inc
or
inc
mov
jne
pop
stos
mov
scas
data16
lods
lods
mov
dec
lods
loop
and
imull
mov
add
jb
pop
outsb
jo
rcll
mov
push
shlb
xchg
cli
fadds
pop
push
dec
stos
inc
stos
imull
inc
add
in
popa
cltd
dec
or
cmp
mov
pop
jle
push
mov
sub
jnp
sbb
fidivrl
mov
mov
inc
jge
push
fldt
les
jae
jno
xor
cli
addl
xchg
mov
filds
icebp
cwtl
not
roll
sub
paddd
jb
stos
inc
push
mov
jg
mov
xchg
and
test
cli
dec
cmpsb
mov
inc
mov
pusha
sbb
mov
dec
pop
sbb
adc
add
imull
push
and
dec
add
xor
add
stos
pop
inc
bound
aas
addr16
xor
jns
lret
xchg
xor
aaa
rol
clc
pop
idivb
nop
or
aam
adc
lcall
pop
jnp
pop
fcmovnb
or
xchg
sahf
lea
xor
sub
and
roll
cli
and
mov
xchg
mov
lahf
pop
es
popf
daa
mov
aam
ds
stc
push
jle
aad
xor
inc
pop
call
fstpl
push
mov
pop
aam
push
lds
push
add
addr16
aad
rcrb
aas
and
adc
repnz
js
jbe
mulb
dec
mov
push
jns
iret
or
inc
fcomps
incl
cmp
out
add
into
sbb
dec
sbb
sub
mov
not
inc
cltd
push
ljmp
jle
and
out
mov
rcll
divb
lods
xor
and
bound
push
jae
inc
lods
ret
push
daa
xchg
cmpsb
into
mov
test
nop
aam
push
push
xchg
mov
jnp
popa
pop
mov
inc
shlb
mov
inc
adc
rcrl
rcrb
xlat
or
insl
mov
aaa
cmc
dec
insl
enter
imul
mov
inc
in
jge
clc
lea
pop
ljmp
cmp
icebp
int
xchg
cmp
dec
cmp
das
and
mov
int
stos
testl
xchg
sbb
mov
in
addb
dec
adc
roll
dec
mov
in
xor
testl
nop
loope
gs
mov
and
inc
mov
aad
std
icebp
and
jae
data16
leave
in
bound
lock
push
xchg
cld
push
mov
mov
dec
xchg
fs
cmp
xchg
xchg
dec
in
jo
iret
jbe
dec
int3
sbb
pop
dec
cmp
or
xor
addr16
test
outsb
hlt
movzwl
mov
pop
adc
inc
lods
adc
aaa
call
ror
dec
call
int3
sbb
daa
mov
pop
push
jge
or
aad
mov
lea
xchg
jnp
rcrl
clc
xlat
jbe
andb
mov
aaa
lock
mov
and
cmp
adcb
cwtl
jae
scas
mov
jmp
pop
data16
mov
jno
cmp
enter
add
jne
pushf
cli
lods
xlat
jo
hlt
mov
pop
inc
cmpsl
pop
popf
imul
inc
push
pusha
bound
cwtl
outsl
and
aaa
je
jnp
jecxz
sbb
cmp
dec
add
or
inc
or
aad
jmp
xchg
lds
cltd
jge
adc
inc
pop
icebp
dec
mov
adc
aas
rcr
add
adc
add
cmp
stos
mov
mov
xchg
dec
fstpt
inc
xchg
xor
or
das
adc
and
sub
test
mov
sbb
add
or
add
clc
mov
sbb
mull
fbstp
xchg
das
ss
inc
pushf
setl
push
xchg
nop
and
insb
into
movsb
movsb
orb
fidivs
test
orl
push
push
push
push
test
scas
pop
enter
and
cli
sub
ds
notb
aam
jb
mov
int3
test
sub
aas
shlb
jnp
xchg
sub
cli
test
adc
and
mov
imul
lock
xchg
js
lret
pop
rorb
mov
mov
add
arpl
test
addr16
loope
out
mov
daa
jecxz
sarl
insb
ret
lcall
push
fisttps
and
xchg
les
cmc
addb
fcmovbe
rcl
xor
cmpsb
adc
out
mov
jo
dec
inc
aaa
cltd
xor
push
or
or
adc
mov
and
sub
test
jge
push
mulb
cmpb
jg
sub
cld
jbe
andl
and
jle
arpl
sub
push
mov
pop
fs
push
fwait
bound
int3
xor
test
addb
mov
xor
es
sbb
daa
jmp
cmc
adcb
sub
lret
jmp
add
cltd
push
js
jo
mov
sub
adcl
subl
add
pushf
and
imul
cmp
bound
fiaddl
lret
frstor
lock
or
aam
es
negl
xor
pop
rclb
int
or
fdivr
fwait
lods
outsl
jno
or
jecxz
mov
dec
xlat
xor
ljmp
mov
cmp
cltd
adc
fcmovbe
ja
inc
iret
aaa
ja
outsl
loopne
pop
orl
jnp
test
cli
pop
and
sbb
mov
jmp
and
stos
sbb
inc
cltd
add
cmp
imul
cs
sub
xor
jecxz
int
xorb
sub
push
popa
mov
rcll
jge
pop
xor
gs
push
pop
pop
lods
sbb
ljmp
xor
push
pusha
mov
pushf
mov
sbb
pop
fldenv
xor
movsl
cli
ljmp
fisubrs
mov
mov
sti
mov
push
loopne
jb
js
inc
pop
mov
mov
dec
adc
pop
gs
mov
scas
enter
lock
push
or
cmp
inc
enter
mov
sub
xchg
push
xor
cmp
iret
sti
xchg
loope
push
test
cwtl
mov
xchg
pop
test
and
lock
shrb
jecxz
lahf
inc
jge
ljmp
hlt
mov
in
cli
sbb
pop
inc
add
xchg
cld
push
dec
add
adc
jmp
pop
mov
inc
jmp
sub
movsl
xor
and
pop
mov
inc
insl
and
mov
lock
sti
xchg
inc
lock
cld
cs
imul
sub
or
push
cltd
adc
int
aaa
repz
and
inc
add
or
mov
xchg
pusha
cs
rcr
addr16
or
aad
push
push
insb
xchg
inc
add
mov
xor
pop
in
pushf
aaa
jb
push
sub
cmp
adc
stos
mov
mov
lods
mov
dec
or
jp
sub
sub
call
push
xchg
mov
rol
dec
mov
pop
push
push
adc
mov
std
vmovntps
xchg
mov
sbb
pop
adcl
in
stos
in
push
xchg
lahf
mov
shrb
inc
mov
cmpsb
mov
adc
outsl
dec
mov
lods
notb
push
mov
sbb
jg
xor
and
aas
pushf
ja
sbb
adc
ja
rorb
pop
mov
in
and
add
jnp
xor
xchg
outsb
push
sbb
subl
rol
mov
push
jmp
pop
insb
pop
ja
jl
sub
inc
pop
jecxz
adc
loopne
mov
loope
test
xor
mov
dec
pop
js
pushf
jne
movsb
sbb
in
push
negl
or
xchg
adc
mov
mov
test
cmp
push
loope
push
out
fdivrl
mov
loope
loop
int3
push
xchg
hlt
aaa
daa
mov
sti
ss
adc
cmp
mov
aad
in
add
lds
sbb
lods
dec
bound
cli
xchg
dec
fildll
imul
insb
add
lret
xchg
mov
fsubl
xor
or
shrl
push
xchg
dec
mov
out
fsub
loope
xlat
mov
pop
push
aam
outsl
sbb
rolb
repz
loope
or
mov
or
incl
dec
outsb
mov
mov
dec
sub
aaa
sub
mov
jle
dec
and
std
mov
test
add
jl
cmp
ljmp
or
sbb
push
cmp
xor
lock
lock
cli
sar
inc
xchg
fstpl
pop
fsts
cmp
cmpsb
das
fmuls
mov
cmp
xor
or
push
mov
jl
mull
lods
cmp
mov
pop
cmp
adc
test
adc
cli
jbe
xchg
or
xchg
icebp
ss
jns
shr
adcb
lods
in
push
ss
mov
push
mov
idivl
inc
push
add
sub
xlat
data16
or
fmul
mov
ljmp
and
mov
jno
jne
dec
in
push
outsb
popa
fnstenv
fwait
xchg
lea
outsl
or
gs
sbb
inc
stos
jp
jae
rorl
test
movsl
push
cmp
xchg
sub
insl
mov
jge
adc
add
out
mov
pop
je
leave
scas
dec
lods
out
dec
in
sub
fwait
lcall
repz
sbb
sbb
loopne
movsb
cld
and
and
adc
lock
xchg
or
push
push
lods
inc
fldcw
clc
ljmpw
pop
xor
or
dec
or
mov
sti
add
mov
jns
je,pt
pop
add
push
cmp
jl
sbb
sbb
pop
adc
ja
push
push
adc
xor
movsl
stos
aaa
sbb
inc
rorl
shr
addb
movl
clc
aaa
int3
pop
mov
lret
popf
ss
scas
pop
push
pop
fdivrs
stc
lret
es
aam
cmc
movsl
incb
into
outsl
pop
push
repz
pusha
xorb
cmp
jmp
sub
xchg
adc
mov
and
sbb
cs
push
cmp
rorb
adc
ja
fildl
test
adc
add
flds
imul
and
inc
and
push
inc
enter
cmpsl
incl
jnp
mov
movsl
sbb
or
sbb
sbb
imul
mov
repz
add
adc
and
je
out
loop
xchg
mov
adc
jecxz
stc
out
enter
xor
pop
test
fsts
sbb
mov
cmpb
aas
and
mov
lret
pop
dec
clc
or
dec
xchg
mov
fldcw
xchg
imul
sub
adc
aam
sub
nop
ret
iret
jns
adc
int3
inc
aam
push
pop
mov
push
cmpsb
cltd
fcmovnu
xchg
out
cli
push
outsl
dec
lea
dec
jbe
add
inc
dec
cmc
test
push
push
dec
popf
fmuls
aam
int3
mov
push
pop
mov
stos
push
xchg
add
sbb
and
and
popa
lods
cli
cltd
and
mov
or
and
xor
cld
in
inc
xor
push
mov
jp
jns
pop
dec
adc
js
stos
movsl
and
das
nop
sbb
xchg
daa
xor
cmp
call
cltd
adc
ds
or
fs
js
jp
idiv
js
leave
lock
ss
jge
enter
pop
data16
loop
mov
ja
clc
aaa
leave
mov
orb
add
pop
mov
and
fsubl
out
pop
add
inc
lahf
repz
cld
scas
mov
cld
sbb
leave
adcl
jae
loop
testb
pop
jecxz
adc
mov
mov
jmp
dec
mov
ret
das
sub
rcll
mov
je
loop
ja
jmp
sub
jb
lret
inc
xchg
mov
jnp
or
add
cmp
xor
xorl
in
adcb
movsb
adcl
pop
fidivrl
scas
dec
lahf
and
test
lcall
sbb
lret
push
pusha
and
scas
and
popa
xchg
in
cwtl
lea
or
jns
inc
mov
call
sub
sbb
addb
js
test
ret
cmc
scas
pop
fidivl
xor
fisubs
or
sbb
mov
xchg
fld
sbb
and
mov
call
aaa
movsb
push
pop
pop
fwait
ja
jg
cmc
jp
ret
mov
sahf
and
mov
std
test
push
out
insl
add
sub
ja
sub
jbe
int3
movsl
fisttpll
dec
cmpsb
xlat
push
test
ret
test
das
loope
sar
cmpsb
aad
lea
fcompl
pop
mov
mov
or
aaa
sub
test
out
lds
stos
xchg
push
lahf
lods
xor
sbb
xchg
int
into
ret
test
out
lods
out
push
fists
mov
in
or
jmp
push
sbb
out
fistps
mov
clc
mov
mov
fdivrs
les
pop
push
fnsave
fiadds
push
stos
cmp
mov
mov
fucom
xor
cmp
paddsw
pop
aas
aaa
push
sti
jb
push
gs
mov
lds
movsb
in
pop
and
test
jae
fisubrs
in
jg
lret
ja
push
lods
and
test
xchg
idivb
sbb
mov
pop
js
push
adc
int
push
sbb
das
das
xor
xchg
sub
dec
inc
addl
movsb
xchg
sub
icebp
pop
mov
sar
loope
xchg
cmp
inc
out
in
mov
dec
jne
pop
mov
fisubrl
push
lahf
jae
fsubrs
sub
sbb
inc
pop
icebp
xchg
push
mov
sub
push
les
or
pop
inc
jge
sbbl
mov
lods
xor
xor
out
je
scas
mov
sti
and
mov
xchg
adc
cmp
sti
push
jg
pop
xor
add
dec
shl
sub
orl
aam
fnstcw
or
jae
xor
les
and
xchg
imull
scas
adc
jnp
add
jle
scas
inc
sub
xlat
out
in
cmp
mov
insl
call
xchg
mov
sbb
fidivrl
rolb
jnp
sarb
dec
neg
xchg
jmp
sub
mov
jne
sbb
testl
xchg
dec
pushf
enter
pushf
xor
stos
xchg
mov
mov
lock
sbb
ja
push
imul
stos
pushf
or
xchg
mov
mov
imul
jbe
push
int
jl
cmpsl
add
cli
xlat
clc
and
mov
dec
jmp
lds
xchg
inc
ret
ja
in
enter
les
inc
call
add
dec
and
dec
jb
and
ret
out
out
xchg
rorl
scas
or
add
mov
mov
push
sbb
bound
cld
push
sub
dec
fs
mov
popf
sub
stc
call
ret
cmpsb
aam
fcoml
sub
cltd
cltd
test
push
and
andl
adc
jp
cmp
dec
fldcw
ds
fs
or
test
cmovns
inc
outsl
cmc
inc
xchg
lea
aad
mov
dec
cmpsl
dec
int3
add
ja
jmp
cmp
jle
mov
cmpsl
call
stos
leave
mov
imul
rcll
imul
or
pop
int3
mov
aad
mov
cwtl
mov
and
shll
inc
jno
push
mov
xchg
scas
mov
mov
fists
xchg
stc
in
ljmp
rclb
pop
adc
xor
loop
addb
addr16
jb
pop
loopne
movsl
jne
cmpsb
fcoml
iret
enter
cld
loope
sbb
jae
pop
cli
scas
in
nop
jle
int3
in
mov
stc
mov
movsl
jbe
sub
dec
mov
cmp
adcl
pop
lock
xchg
enter
popf
das
mov
call
sbb
es
test
and
and
cmpsl
adc
jno
out
arpl
fnstenv
jle
in
pusha
ja
mov
cmpb
loope
cmp
insl
out
adc
mov
mov
cmp
ljmp
push
mov
pushf
xor
das
in
jg
xor
scas
adc
add
divb
shrl
stos
fidivl
dec
inc
push
adc
mov
xor
mov
pop
lret
push
push
mov
mov
fs
cli
pop
dec
cmc
iret
shrl
out
sub
push
mov
inc
push
arpl
mov
fs
or
jmp
sub
xor
das
sub
push
movsl
or
jae
pop
cli
outsb
adc
idivb
mov
int3
xor
iret
and
push
nop
shlb
mov
jl,pt
push
sub
pusha
pop
add
sbb
out
fcmovb
shll
jle
sti
cld
xor
movsl
jp
add
lahf
clc
fucomi
dec
mov
jle
or
jl
sbb
or
jne
mov
push
sub
jbe
outsb
push
out
sub
jg
clc
mov
pop
push
gs
movsl
fdiv
xlat
mov
mov
add
repz
std
jge
inc
inc
dec
push
mov
sub
movsb
repz
jo
addl
dec
repnz
mov
mov
add
je
mov
jmp
rcrl
sbb
ds
add
add
cs
mov
xor
daa
insl
or
jb
and
xor
popa
movl
adc
out
add
cmpsb
in
js
cli
jge
push
fimuls
xchg
jmp
cld
lock
sti
xchg
fisubs
iret
test
sbb
mov
sar
inc
or
cmp
movsl
fsubrs
adcb
or
lret
push
inc
loop
popf
xor
out
in
sbb
pop
inc
pop
cmpsb
mov
add
test
or
int3
xor
adc
inc
push
movsb
pop
das
sbb
push
cld
loop
mov
shrb
ljmp
sub
scas
or
inc
call
dec
aad
movsl
push
cmp
cmp
aam
push
adc
dec
data16
dec
mov
sub
mov
fcoms
xchg
mov
push
adc
mov
mov
add
sbb
inc
sarb
loope
cmp
push
movsl
ror
inc
add
sub
cld
pushf
sub
adc
out
fildll
shrl
cmp
js
xchg
sbb
sbb
mov
into
push
ret
popf
stos
xchg
scas
popf
and
testb
ret
sarb
je
ret
fdivs
sbb
sbb
xor
std
scas
lock
iret
sub
or
cmp
xlat
inc
inc
mov
inc
iret
add
mov
sub
add
xchg
sub
lret
pop
adc
push
xor
test
out
imul
jo
aam
xchg
or
out
scas
es
mov
cs
dec
mov
sti
lds
pop
loopne
aaa
out
ror
rcll
cmp
mov
adc
es
and
jecxz
add
lret
sub
test
cmp
mov
jbe
insb
cs
cltd
scas
add
notb
push
sub
dec
lods
hlt
inc
push
rcl
xchg
cs
xchg
jmp
lret
xor
push
mov
push
mov
mov
rclb
ret
sti
dec
mov
std
xor
out
xlat
lods
pusha
pop
push
andl
popf
ret
sbb
repz
and
insl
adc
sbb
jmp
push
pop
shrb
notb
push
movsb
dec
jmp
stos
dec
pop
mov
sbbl
movsl
sub
cmp
pop
push
adcl
roll
cwtl
and
das
mov
sahf
dec
test
pop
push
aaa
pop
pop
loopne
les
rorb
mov
pop
call
xchg
fldt
test
repnz
sbb
lahf
repz
sub
add
dec
push
pop
sbb
movl
inc
imul
mov
mov
adc
adc
mov
and
das
fisttpll
mov
out
in
dec
aad
rcrl
loope
add
and
xor
sbb
mov
in
fs
out
test
jmp
jo
sub
dec
hlt
leave
out
and
jl
inc
add
arpl
orb
pop
mov
fcmovb
xor
mov
adc
daa
jg
xlat
mov
push
lea
popf
pop
sbb
lds
orl
stos
insl
xor
push
shlb
testl
push
lahf
inc
nop
sbb
jno
lods
xchg
mov
clc
pop
push
push
and
pusha
mov
flds
adc
mov
push
movsl
lods
mul
add
sbb
stc
sbb
in
and
stc
pop
ja
push
cwtl
dec
sub
das
or
imull
and
sub
xchg
pop
mov
sub
mov
cs
xor
inc
add
xchg
xchg
insb
push
fnstcw
sarb
pop
add
adc
aas
jecxz
sti
pop
ljmp
pop
xchg
jno
pop
mov
mov
dec
xchg
push
pop
and
rorb
repnz
xor
mov
imul
cmp
mov
mov
outsl
xor
aad
mov
shlb
iret
ror
loope
out
push
fldenv
or
mov
dec
imul
xchg
loop
cmpsl
lods
popf
lods
lcall
cmp
js
sbb
clc
mov
lods
rorl
in
js
ds
out
fldt
xchg
sub
xor
push
test
and
in
xor
jecxz
imulb
or
cltd
or
push
std
ret
sub
repz
sar
insl
sahf
cmpsl
idivb
dec
sti
mov
sbb
jnp
les
call
mov
push
xor
iret
addl
mov
mov
cld
jp
xchg
mov
xchg
repz
daa
jp
xchg
jb
clc
cmp
jb
jne
jecxz
lcall
aaa
fcoms
nop
jno
fdivrs
inc
dec
leave
enter
jns
xchg
dec
xchg
add
pusha
lret
loop
inc
xchg
test
pop
lea
daa
jle
arpl
lret
aam
pop
jae
sub
pop
sbb
or
repz
arpl
adc
pop
lcall
fwait
add
shrl
xchg
mov
mov
insl
arpl
xchg
lcall
popf
stos
rcll
je
add
inc
test
inc
insb
inc
jnp
test
inc
leave
jo
das
fwait
dec
jne
cmc
sub
add
dec
push
push
mov
cmp
cmp
dec
fsubrl
inc
push
addr16
dec
and
xchg
inc
popf
xor
fwait
xchg
dec
push
sub
cmp
fidivrl
push
dec
pop
scas
in
sti
pop
inc
jb
add
loope
mov
adcb
lret
add
fisttpl
add
cld
dec
add
das
add
mov
inc
pop
mov
cwtl
in
into
cmc
mov
inc
in
or
xchg
je
mov
xor
pop
ror
hlt
mov
ljmp
lret
clc
insl
mov
aaa
lock
mov
ret
add
stos
icebp
fsts
imul
popf
cltd
fs
jbe
outsl
in
jae
sub
cmc
add
pop
lahf
and
add
sbb
in
jle
adc
add
pop
mov
pop
sar
cmp
fs
cmp
pop
dec
jne
loopne
movsb
out
adc
or
stc
lods
inc
jno
xor
lock
mov
out
popf
iret
lret
cmpsl
popf
in
push
out
or
clc
shlb
insl
dec
dec
sbb
push
leave
add
iret
loopne
cs
in
rclb
insl
addb
sahf
stos
xchg
loop
push
int
je
cmp
out
std
dec
or
std
ror
hlt
push
mov
cltd
call
sub
add
adc
dec
rclb
pop
sub
pusha
xchg
xor
fwait
addr16
mov
and
push
loopnew
add
pop
mov
jae
shl
sub
fisubrl
dec
xchg
lret
fwait
scas
repz
jge
addl
push
add
shlb
or
inc
divb
jmp
pop
push
ljmp
xor
xchg
sbb
sbb
enter
fdivrl
jnp
aam
pop
aad
addr16
adc
jl
push
pusha
arpl
in
movsl
xor
lahf
and
cmp
mov
jle
inc
jo
dec
cs
xor
ss
icebp
inc
jle
insl
mov
sbb
iret
inc
lcall
mov
adc
fwait
inc
imul
scas
fs
out
inc
sti
and
jg
jbe
cmova
gs
leave
fld
pop
jne
jnp
xchg
adc
fnsave
sub
fucomip
cmp
adc
loop
xchg
out
imul
inc
mov
sub
hlt
bound
mov
pop
xor
aad
jno
out
cmp
addr16
lret
or
sub
cmp
cld
outsl
cli
fnstsw
adc
jmp
js
es
jnp
sbb
adc
andb
adc
aas
leave
pushf
das
mov
sahf
pop
dec
push
jno
insb
mov
lods
adc
sub
and
sub
rorb
mov
jbe
imul
push
dec
xchg
not
sub
addl
outsb
or
or
push
push
mov
add
outsb
mull
imul
imul
or
sti
stos
negl
mov
lock
add
mov
pop
ss
push
dec
mov
icebp
push
decl
fucom
cli
mov
dec
inc
in
inc
iret
mov
and
pop
jg
mov
aaa
mov
jno
sbb
jae
and
sub
in
cmp
jecxz
stos
ds
js
rclb
adc
mov
lds
test
mov
jmp
mov
cmp
ret
addl
xchg
idiv
test
mov
ljmp
call
push
aad
and
enter
push
in
into
in
fdivl
add
out
adc
insl
jne
loop
test
add
xor
push
or
popa
and
ret
mov
mov
cmp
adc
mov
inc
sub
mov
pop
iret
adc
sub
cltd
movsl
scas
or
and
xlat
sbb
dec
pop
push
add
dec
sahf
mov
es
xor
in
js
aas
sarb
fiadds
cmp
inc
push
dec
ss
jb
je
pushf
stos
mov
je
mov
cmp
data16
aas
mov
fstpl
xor
add
testb
xchg
cli
sbb
sti
insl
jo
add
dec
push
lds
ljmp
sbb
push
mov
scas
dec
push
outsb
lret
push
mov
add
jne
idivl
ds
fists
and
or
add
js
jle
xor
mov
shll
inc
into
jno
mov
xor
mov
xlat
popl
nop
ss
xlat
in
jo
push
in
ror
out
fmul
sub
inc
in
call
cld
pusha
mov
xchg
cs
fsubrl
std
lods
lret
sahf
pop
bnd
std
mov
insb
dec
or
fcmovnbe
lahf
ljmp
mov
pop
rorl
in
loopne
push
push
bsf
faddp
adc
pop
hlt
out
test
mov
xor
mov
shrl
xor
or
jnp
in
ret
insb
mov
mov
push
insl
rcl
adc
inc
jno
xor
push
mov
jo
jecxz
decb
push
decb
cmc
rolb
jae
mov
or
dec
out
mov
xor
push
pushf
pop
ds
dec
sbb
adc
lahf
mov
orb
shll
outsb
addb
sbb
or
mov
lcall
cmpsl
fdivrl
rol
imul
outsb
into
or
cli
mov
xchg
dec
mov
adc
sub
pop
mull
mov
pop
int
aas
popa
jb
clc
sbb
popf
sahf
insl
cmp
rclb
cmp
cltd
aaa
jge
shl
aad
xlat
mov
mov
jmp
lret
sub
cmc
shlb
leave
xchg
fdivp
inc
punpcklbw
jl
mov
and
mov
sub
ja
andb
lds
enter
dec
jmp
aad
and
out
cmp
repz
and
in
xchg
pusha
ret
fisubrl
ss
jo
push
and
dec
push
push
dec
ja
or
or
mov
jmp
jl
faddl
xlat
subb
xchg
ja
andl
mov
addl
aas
pushf
pop
jo
sbb
mov
mov
mov
stos
call
fisubl
in
or
rolb
aas
xor
push
popa
mov
mov
iret
loop
dec
jmp
fsub
mulb
clc
add
rol
push
rcrl
pop
mov
icebp
cmp
mov
cmp
clc
jno
mov
pop
push
data16
mov
adc
loopne
cmp
rorb
adc
dec
push
xlat
js
in
inc
dec
or
addr16
inc
sahf
xor
mov
lods
mov
fimull
enter
loop
push
std
imull
lea
fld
jo
scas
popf
or
test
aam
mov
hlt
lcall
jb
inc
ljmp
es
or
andb
xchg
mov
xchg
hlt
or
xchg
mov
stos
frstor
sbb
repz
and
jb
mov
xchg
lcall
rcl
loop
test
das
add
roll
aam
lea
xor
addr16
mov
rcl
stos
xchg
jno
ja
mov
lods
repz
mov
adc
inc
lfence
mov
xor
xor
push
in
int
add
ret
mov
cmp
mov
cmpsb
mull
stos
mov
adc
stc
sub
stos
inc
and
push
jl
mov
cmp
sub
adc
xor
xchg
cltd
adc
jnp
inc
mov
mov
jp
insl
pusha
in
xor
ret
movsb
add
jns
popf
sarl
pop
dec
dec
or
das
aam
xor
cld
add
loop
cld
int
test
aam
push
mov
pop
push
outsb
jp
popf
imulb
pop
ds
inc
xchg
or
jae
fsubp
xorb
pop
mov
orl
repnz
enter
psubsw
es
outsl
sub
ja
fsts
xlat
pusha
test
out
sub
sub
pop
arpl
imul
push
imul
inc
mov
inc
in
nop
jae
xor
jmp
xor
adc
mov
xchg
jns
aaa
mov
call
mov
jbe
push
sti
loope
sub
pushf
mov
pushf
fs
sub
ss
mov
int
push
adc
repnz
lock
push
jbe
fsubrl
xlat
in
movsl
movsb
enter
mov
sbb
call
cli
push
outsl
repnz
mov
sub
inc
stc
fmul
pop
xchg
aas
incb
in
sub
pop
imul
xor
mov
adc
mov
cmp
out
jecxz
sbb
popa
and
les
stos
mov
out
dec
lea
lock
pop
aas
or
cmp
clc
outsb
jbe
call
cs
sub
ret
popf
shll
jp
icebp
inc
loopne
out
mov
dec
test
out
or
xchg
sub
adc
dec
push
sbb
das
cmpsl
cmpsb
xor
cmp
adc
sti
add
fcompl
dec
jle
ret
xor
jg
outsb
pop
push
hlt
ds
mov
mov
subb
into
stos
pusha
pop
dec
add
ss
arpl
adc
mov
stc
push
fwait
rclb
pop
loopne
movsb
bound
rolb
lea
mov
imul
popa
fdivrs
and
or
stc
push
mov
imul
outsb
scas
sbb
push
sub
mov
cmpsb
push
inc
rcll
jl
stc
mov
lock
cli
add
sub
pop
add
mov
push
lods
sbb
mov
cmpsb
fwait
cmp
add
lods
inc
clc
lahf
dec
inc
dec
push
xchg
data16
movsb
rol
mov
js
xchg
daa
dec
pop
mov
mov
xchg
aad
aam
fdivp
or
push
popa
nop
out
inc
addr16
data16
movb
dec
xor
inc
mov
in
mov
pop
cltd
inc
mov
mov
aaa
and
pushf
popf
mov
mov
icebp
sub
xor
out
or
fstps
fadds
pop
movsl
jp
jno
ds
repz
and
mov
add
in
dec
add
out
mov
fistpl
ds
mov
fisttpll
into
dec
inc
icebp
push
mov
scas
sub
cmpsb
jl
stos
fnstsw
aaa
push
cld
test
ret
or
enter
fwait
jecxz
out
xor
push
and
sub
pushf
push
and
cmp
js
dec
xchg
jne
xchg
xchg
aad
shll
xchg
lret
pusha
ret
xchg
xchg
jno
call
negb
sub
scas
xchg
push
and
gs
and
gs
test
test
loop
xlat
cwtl
jg
pop
xchg
shlb
xor
outsl
stos
push
mov
or
mov
jb
jg
inc
push
jb
rcr
or
roll
ja
fdivrl
adc
mov
xchg
pop
jne
pop
rol
lds
pop
rorb
xchg
rcl
xor
aam
jmp
ds
hlt
repz
shll
xchg
mov
sbb
andb
in
add
pop
xchg
flds
lds
jecxz
js
mov
out
push
mov
and
loope
loopne
xor
sbb
lock
std
cmp
dec
mov
mov
out
mov
pop
movsl
jae
fcom
fnsave
xor
pop
mov
jne
icebp
and
jae
daa
and
fists
inc
clc
xchg
add
sub
std
ds
scas
inc
lods
cld
and
dec
fbld
push
jae
xchg
mov
mov
add
mov
frstor
out
rclb
movsl
mov
inc
sbb
inc
dec
cld
aas
sub
popa
push
xchg
pop
insl
int3
cltd
pusha
popf
pushf
mov
in
decb
cli
jns
aas
jbe
sub
fisttpll
mov
sub
test
pop
and
clc
rcrl
push
sub
cmpsb
addl
add
jae
add
aas
insl
inc
lds
subb
push
or
and
in
jne
push
jmp
push
daa
add
and
mov
jmp
jg
jno,pn
rcrl
inc
mov
imul
cmp
jb
jecxz
jle
popa
lock
in
pop
popa
lods
subb
pop
mov
push
mov
fwait
in
pusha
rol
jb,pn
jne
lods
leave
jg
adc
aas
sbb
pushl
sbb
push
sbb
test
dec
and
jae
aaa
sbb
xchg
out
push
pop
je
pushf
jb
test
out
into
shll
stos
cltd
popa
jge
xchg
ss
dec
jno
mov
loope
inc
adcl
cmp
cmpsb
cmc
push
call
adc
movsb
inc
pop
fsubrl
inc
jmp
inc
nop
ficoml
push
ds
loopne
pusha
aad
adc
cmc
out
and
sbb
je
adc
fiadds
js
sub
pushf
andl
mov
int
dec
mov
xor
shr
lods
push
lahf
dec
jb
nop
mov
sarb
dec
das
push
test
xchg
push
jp
mov
loopne
mov
mov
push
inc
or
popa
imul
push
push
mov
xchg
jecxz
insl
lahf
std
ret
das
xchg
jle
xor
adc
sbb
pop
cmpsb
loop
and
and
iret
sub
data16
pop
outsb
mov
mov
int
mov
int
push
inc
iret
pop
cld
and
inc
aad
cs
sbbl
xchg
fildll
jp
mov
ficoml
jae
mov
or
lahf
nop
xchg
xchg
sub
rcrl
pusha
inc
ret
push
fldenv
jbe
aad
mov
xchg
mov
ficoms
inc
xor
fs
cmp
pop
xor
adc
outsb
insl
push
loop
movsl
xor
ljmp
mov
add
in
leave
dec
sub
sbb
sub
jnp
pusha
add
mov
inc
test
push
sbb
adc
sub
mov
gs
cmp
jge
and
and
stos
lock
push
push
sbb
imul
call
fldlg2
lahf
dec
mov
adc
rolb
mov
sbbb
cmp
jg
pop
or
jne
arpl
jg
mov
xchg
and
sbb
push
outsl
cld
adc
lods
cmc
mov
jo
and
xchg
int3
xor
out
sbbl
push
ss
or
cmp
cmp
xchg
ljmp
adc
pop
call
std
cltd
cmp
popa
push
cbtw
push
and
mov
ret
mov
mov
rcrb
push
divl
int
mov
scas
jnp
push
mov
push
aam
or
arpl
mov
daa
inc
imul
dec
dec
mull
mov
adc
cmp
lret
inc
lcall
int3
jo
ds
xor
xchg
sub
arpl
lret
sub
fsts
dec
call
mov
xor
inc
mov
mov
ds
outsw
adc
call
and
sbb
stos
fcoms
dec
inc
add
in
mov
sub
jo
test
test
push
adc
sub
or
ret
repz
movsb
cmp
add
lods
js
jl
dec
aaa
movsb
xchg
aad
nop
sbb
dec
xchg
jae
sub
lahf
adc
add
inc
push
loope
pop
cmp
push
cmc
ret
daa
adc
call
popa
pop
dec
pop
adc
dec
jns
jle
es
fldt
sbb
out
aam
mov
std
adc
jo
jb
clc
mov
sub
pusha
inc
jo
add
cwtl
mov
mov
scas
jno
dec
and
mov
xchg
pop
aam
sbb
mov
fiaddl
out
inc
pop
sbb
cmp
mov
cmp
in
push
adc
push
repz
vmwrite
movsb
cmp
imul
enter
jmp
mov
or
and
jle
lock
push
jb
mov
or
cli
jno
daa
icebp
gs
xchg
cltd
neg
inc
xlat
rcrl
push
rcl
leave
jg
push
xchg
ja
mov
outsl
in
in
bound
mov
or
cmpb
cmpl
push
not
inc
and
stos
xchg
jl
pop
add
stc
adc
loopne
cmpl
jmp
xor
rolb
ja
xchg
xchg
lea
inc
out
or
sub
test
ds
push
shrb
movnti
and
cs
jb
cld
xchg
sub
jmp
pop
adc
cmp
mov
cli
inc
mov
and
xchg
repz
or
imul
fistpl
lods
xchg
sub
cmp
sub
icebp
adc
mov
es
cltd
mov
mov
outsb
fwait
jbe
fistpll
xor
cmp
lods
sub
in
test
add
stos
pop
mov
rcrb
inc
and
es
lret
insb
adc
dec
push
andb
cmp
mov
pop
rolb
pop
mov
adc
cltd
cmpsb
pop
xlat
sar
and
insb
mov
insl
inc
inc
jp
stos
repz
dec
scas
xchg
fstpl
sbb
pop
in
cld
fistl
notrack
movsb
xchg
or
and
inc
dec
push
add
loope
inc
fidivrs
and
dec
dec
jns
popa
outsl
jmp
or
push
sub
mov
rol
test
xorl
mov
aad
imul
adcl
jge
dec
sub
loope
aas
push
inc
push
pop
sub
aad
data16
sbb
lea
lahf
div
adc
and
mov
pop
repnz
sub
fmull
stc
mov
pop
addr16
or
out
sti
fwait
mov
std
xchg
ss
icebp
shlb
sbb
lcall
icebp
cli
aam
std
data16
repz
or
into
ljmp
out
mov
cmp
fcompl
icebp
popa
adc
ret
push
mov
test
int3
add
and
or
xor
loope
mov
lods
aas
mov
jo
adc
jb
cmpsb
aam
xchg
sub
jns
xlat
sbbl
adc
cwtl
mov
or
mov
lret
xor
pop
xchg
jns
xchg
inc
loopne
xor
sbb
cmp
pusha
das
cltd
dec
push
jle
lock
mov
repnz
pop
lods
or
ret
ret
bound
sub
pop
pop
cmp
mov
or
fst
scas
xor
and
lcall
add
push
mov
pop
and
mov
mov
in
mov
or
add
mov
add
mov
jge
ljmp
out
jge
nop
lahf
dec
push
mov
aaa
jl
inc
inc
mov
mov
stc
stos
int
mov
cld
xor
ja
fcmovb
getsec
dec
pop
fstps
dec
cmpsl
inc
loopne
push
push
adc
bound
mov
mov
js
xchg
in
cmp
sub
js
inc
shlb
enter
xor
inc
jecxz
push
pop
or
adc
push
adc
sarb
or
cmp
ss
xor
push
out
jmp
stos
inc
sti
mov
lret
xor
adc
xchg
xor
test
ss
jl
pop
int
shll
and
or
push
test
or
roll
loop
or
xor
loopne
push
lahf
mov
mov
insb
xor
pop
lods
sbb
cmp
lock
insl
add
xchg
add
sub
sub
or
mov
sub
xor
inc
xchg
cmpsl
pop
mov
out
jae
fsubr
dec
mov
cs
imul
xchg
std
and
stos
cmp
leave
jbe
nop
jbe
xchg
dec
sbbl
adc
es
inc
addl
xchg
fnstenv
sub
jne
jp
push
cmpsl
jle
pop
std
out
pop
dec
and
fdivrl
shll
jmp
test
cld
xlat
mov
push
jmp
inc
jne
enter
das
mov
cwtl
inc
pusha
jne
adc
cmp
pop
xchg
push
mov
jns
loopne
adc
and
leave
adc
xor
and
fmull
jnp
icebp
pop
or
push
lcall
mov
pop
mov
dec
in
in
flds
push
lods
mov
neg
in
insb
subb
or
fwait
shrb
outsl
jg
mov
imul
sbb
ja
fs
and
ljmp
push
enter
loopne,pn
rcrb
fildll
stc
pusha
jb
mov
adc
push
cmp
stos
mov
add
or
pop
insb
clc
shlb
mov
popl
sub
dec
aaa
xchg
sub
lahf
or
enter
repz
out
mov
movsl
in
mov
inc
sub
ret
ja
in
cmp
jne
or
cwtl
aas
jo
int
mov
push
fistpl
xchg
repnz
cmp
data16
xchg
push
ljmp
push
pushf
inc
test
or
lock
mov
imul
stc
cmc
je
scas
adc
shlb
or
push
andb
shlb
cli
aam
add
movsl
jg
mov
dec
fidivrs
jg
add
sarb
mov
dec
add
push
ljmp
stos
and
ret
jns
fstps
fisttps
test
push
pop
or
shlb
xchg
arpl
mov
push
push
add
mov
outsb
mov
jl
jge
xor
push
rorl
mov
loope
push
xor
mov
inc
ficoml
shl
xchg
fcmovnu
addr16
add
sub
movsb
adc
stos
rclb
fiadds
mov
cmp
fisubrs
mov
dec
inc
adc
sub
stos
mov
sub
mov
jge
xchg
sbb
xor
jns
or
sbb
imul
ljmp
orl
in
fs
je
enter
and
jnp
and
jmp
idivl
lds
mov
je
add
xlat
int
mov
pushf
lock
shlb
out
xchg
in
inc
mov
mov
fisttps
outsb
cltd
dec
aas
ss
loopne
mov
jnp
pop
loop
push
cs
push
lds
xor
jmp
cs
or
pop
fmuls
jo
mov
ja
mov
dec
insl
push
add
fsubr
push
xchg
inc
out
mov
roll
lahf
mov
mov
ficompl
repnz
inc
inc
or
mov
jecxz
adc
cmpsb
sub
test
fcompl
std
sahf
fcomps
and
jb
pop
pop
push
aad
jg
pusha
in
push
sub
sbb
jno
mov
int
out
xchg
xchg
jp
push
gs
clc
or
jmp
sub
lock
push
popl
inc
fsubrs
xor
fisubl
cmp
push
sbb
out
jno
rorl
add
xor
jecxz
popl
mov
mov
inc
bound
repz
push
and
xor
sbb
jo
lcall
mov
inc
enter
xor
push
mov
pop
imul
or
push
and
pop
inc
js
movsb
adc
and
popa
pop
cmp
jne
adc
sbb
xorb
shlb
shrb
adcl
test
cld
mov
cli
pop
inc
cmp
xlat
imul
sbb
xor
xchg
sbb
stos
xor
sub
dec
dec
cwtl
fstps
xor
fs
cmc
pushf
stc
push
in
jmp
ret
inc
pop
in
ja
fisttpl
mov
dec
xchg
rolb
inc
mov
push
sub
rcrl
add
inc
leave
add
daa
cmpb
xor
mov
and
test
ds
pop
cwtl
andb
cmpsl
dec
sahf
cld
jle
jmp
cmpsb
mov
inc
test
into
jb
lret
lcall
and
adc
xchg
mov
mov
popl
sar
xchg
call
mov
lods
int
cs
cmp
fs
mov
arpl
push
popf
pop
test
ss
lahf
leave
mov
mov
lock
mov
popf
dec
push
lret
and
add
lea
into
sbb
add
dec
ja
cmpsl
dec
sbb
jno
dec
cmp
int
or
mov
idivb
sarl
divb
sub
fimull
sub
xchg
adc
rcl
xor
or
mov
les
sub
sahf
pop
sbb
pop
xchg
xor
cmc
add
dec
push
nop
push
jl
cli
add
sarl
inc
jbe
pop
sti
cmpsb
add
push
adc
nop
mov
in
add
cmp
lret
fwait
in
lret
decb
cmpsl
pop
jo
adc
inc
fdiv
mov
jp
arpl
push
aam
mov
aas
mov
and
cmpsl
cmp
jns
leave
sub
xchg
and
ret
mov
movsl
mov
lds
jl
lods
xchg
lods
fists
inc
fsubr
sub
sbb
adcb
add
int3
cs
fcomip
push
jecxz
daa
in
imul
and
mov
fwait
xchg
lock
cs
das
sub
xor
jg
sub
andl
sub
jno
es
sbb
les
rcl
xchg
sti
jmp
es
aad
sti
jl
cli
push
adc
jecxz
or
push
fsub
jnp
push
jmp
mov
jno
adc
pop
ljmp
mov
cli
cmp
dec
sarb
mov
enter
adc
test
push
js
ss
mov
xor
dec
xor
jno
pop
cmp
and
push
cmp
xor
add
arpl
cli
inc
loopne
dec
sub
push
rcl
aam
outsb
daa
push
or
test
mov
movsl
sub
repz
xchg
push
mov
lret
insb
push
cmpl
dec
pop
cs
adc
cwtl
xchg
imul
setno
or
mov
loop
sub
cmp
leave
ss
sti
adc
lcall
popf
cmp
xchg
js
mov
jp
lea
out
xchg
mov
in
jmp
jb
fs
xor
loope
das
pop
push
pop
sub
repz
pop
cmpsb
loopne
das
adc
in
cmp
orb
cld
pop
cmp
stos
std
pop
sub
sahf
add
out
sti
cmp
ficoms
into
xor
adcl
inc
shrl
jle
mov
xor
and
mov
adc
sub
mov
leave
dec
xor
or
cmp
dec
dec
fildl
xchg
jl
xlat
mov
ret
sbb
scas
push
ret
jbe
and
cmp
mov
cld
pop
int
nop
mov
lods
or
pop
inc
enter
inc
jae
cmp
lds
cli
inc
rol
pop
test
ficompl
or
mov
sub
push
aaa
xor
inc
and
jns
les
adc
mov
inc
mov
sub
aad
jne
mov
clc
roll
sub
dec
fld
jo
xor
div
push
rorl
mov
popa
mov
shr
push
lahf
loopne
push
insb
lods
sub
jno
and
fdivr
jl
cmp
repz
fidivrl
fnstsw
test
or
sbb
lea
mov
lock
xorb
mov
ds
je
jns
push
sub
pop
and
scas
jge
adc
lods
sub
out
mov
add
loop
imul
fidivrl
test
daa
imull
pop
out
mov
ret
movsl
loopne
sti
and
sbb
aas
cltd
pop
pop
adc
mov
xor
xchg
scas
xlat
jle
lret
inc
mov
xor
or
dec
stos
or
loopne
popf
dec
push
adcb
pop
xor
stos
inc
mov
jp
fldl
cmp
xor
sbb
nop
in
and
movsb
daa
xchg
and
ss
stos
adc
out
inc
jns
shr
push
jle
adcb
push
push
ret
dec
sub
repz
sarb
mov
mov
add
clc
int
adc
add
sarb
xor
sbbb
mov
mov
enter
les
dec
pushf
and
cmp
cmpsb
or
xchg
sbb
enter
inc
fistl
and
cli
xchg
in
bound
jae
js
outsl
out
outsl
imul
in
mov
or
repnz
std
imul
rorb
fdivs
sub
pop
pop
xor
fnstcw
icebp
pop
mov
xor
enter
jb
xchg
rcll
sbb
idivb
inc
cmpsb
xchg
in
mov
roll
orb
pop
and
fimull
and
std
mov
adc
scas
mov
cmp
jnp
add
mov
xor
fdivr
xor
sub
sahf
imul
fimull
mov
movsb
push
jmp
and
in
clc
push
loopne
int3
inc
imul
subl
dec
aam
pop
lds
repz
xorl
and
je
jle
jmp
jmp
jns
mov
xchg
lods
or
stos
andl
sti
xchg
cmp
push
es
jb
pshufw
loopne
inc
mov
sub
pop
push
notb
mov
fsincos
sub
je
and
mov
mov
jl
dec
ljmp
insb
shlb
lds
out
lcall
inc
jae
fistpl
mov
fcompl
mov
repz
cmp
xchg
int
or
adc
xor
mov
pushf
push
pop
movsb
push
iret
sbb
inc
mov
loopne
xlat
xor
in
sub
inc
xor
std
jo
inc
into
mov
test
push
xchg
sub
mov
addr16
sbb
sti
mov
fcomps
call
sub
xlat
push
inc
xor
mov
xlat
out
and
rol
xchg
add
mov
dec
push
test
pop
cmp
xchg
mov
jl
inc
int3
adc
ljmp
out
mov
mov
lahf
jae
test
stc
leave
sub
divl
xor
and
sub
icebp
mov
dec
je
pop
mov
sbb
xor
dec
or
and
loop
aam
or
cmp
push
jb
push
call
dec
inc
fnstcw
pop
push
pop
xchg
jmp
or
scas
cmp
mov
and
pop
adc
and
mov
xchg
sarl
sub
ds
cs
ret
jmp
pop
stos
mov
jno
stc
push
cmp
xlat
lret
pop
lcall
sbb
insl
adcl
push
mov
nopl
jb
sahf
into
testb
ja
imul
mov
or
ficoml
mov
sbb
dec
movb
and
and
test
push
cwtl
int
invd
sti
mov
nop
push
jmp
fsubrs
adc
adc
xor
lret
nop
push
push
int3
jb
repnz
divb
fldenv
test
aas
push
ds
arpl
stos
jae
inc
adc
aam
pop
test
pop
movsl
fistps
cmp
xchg
sahf
je
in
xchg
xchg
nop
lods
test
mov
int
xor
sub
add
icebp
or
idiv
aaa
sahf
sahf
xor
arpl
ret
rcll
shrl
xlat
jne
sti
push
xor
jns
ret
outsl
inc
jno
mov
ss
sub
or
aam
mov
ljmp
lea
pmulhuw
or
enter
adc
pop
mov
test
lret
jl
mov
push
xor
mov
notb
ja
xchg
jne
icebp
icebp
adc
outsl
xchg
push
arpl
lock
testl
insb
cmpsb
jbe
addr16
sub
out
jle
jge
xchg
jmp
movsb
icebp
inc
dec
dec
repnz
jl
xchg
inc
loopne
pop
pushf
pop
stos
push
out
xchg
test
addb
sub
addr16
or
xchg
push
dec
mov
and
mov
fcomi
jns
and
ja
xchg
cmp
insb
xor
push
xchg
imul
jge
in
add
ds
push
dec
push
pop
sarb
jbe
mov
out
notl
and
fsubs
jno,pt
pop
and
data16
fwait
push
movsb
filds
pop
in
pop
xchg
stc
and
imulb
ss
mov
insl
push
xor
sub
mov
sbb
mov
pop
ror
cmp
xchg
subb
push
xor
dec
rclb
jg
cmp
add
insb
mov
sahf
jns
add
jb
sarb
outsb
incl
movsb
and
xor
ss
data16
nop
call
out
lods
mov
sub
loopne
and
cs
cmp
mov
add
jnp
movsl
pop
add
pop
xor
pop
xchg
mov
jmp
and
cmp
mov
xchg
cmp
adc
add
adc
hlt
sub
in
into
arpl
mov
ret
aam
push
xor
mov
xor
push
in
rsm
lods
movsl
arpl
pop
push
cmp
bound
mov
lock
repz
popa
xchg
mov
push
adc
int3
sub
push
jecxz
mov
pop
pop
stos
sub
pop
xorl
outsl
push
cmp
or
mov
dec
cld
cmpsb
out
pop
and
jl
jnp
pop
test
int3
jno
lret
adcl
scas
test
mov
cs
jle
pop
cwtl
push
sub
push
and
es
ret
and
pop
nop
rorb
or
pushf
loope
lods
test
bnd
aad
lock
mov
add
gs
lods
xchg
rorl
jecxz
mov
dec
adc
std
cld
fdivrl
push
adc
pop
notl
push
mov
fimull
inc
aaa
call
ja
jg
push
sub
xchg
inc
lahf
or
jecxz
adc
mov
push
xchg
ja
out
icebp
sbb
loopne
fdivl
sub
inc
xchg
pop
push
es
inc
dec
sti
lods
mov
xchg
adc
adc
hlt
pop
stos
imul
or
test
movsb
sarl
adc
pop
or
clc
dec
shll
ficomps
jne
fsubp
jl
cmpsl
pop
adc
sub
add
dec
mov
les
sti
cmc
pop
and
xchg
repz
mov
fisubs
cli
push
test
jl
mov
mov
lret
test
mov
int
sbb
jmp
enter
jo
jns
sbb
inc
out
idivb
cmp
outsb
pop
inc
jne
aam
jns
cmp
dec
xchg
xorl
addl
incb
push
cmpl
xor
hlt
jb
pop
fistps
stos
cltd
xor
dec
test
mov
mov
int3
data16
sbbl
shl
sbb
movsl
test
into
popf
daa
fwait
add
mov
cmc
movsl
inc
push
adc
dec
pop
jle
cmp
lea
adc
cwtl
stos
xor
push
fisubrs
jne
aas
les
aas
dec
sbb
or
movsb
std
scas
fadds
pop
jae
push
fldl
pop
and
mov
aas
push
add
jno
aad
sub
add
or
mov
cmp
sub
lea
xchg
arpl
sbb
test
mov
pop
push
mov
jae
icebp
and
mov
cmpsb
push
cli
stc
icebp
pop
push
jnp
imul
mov
xlat
mov
cltd
push
xchg
ret
ret
xchg
adc
ds
cmp
push
cmpsl
jns
xor
jecxz
jne
test
leave
jecxz
push
xchg
sub
mov
mov
pop
daa
and
sar
cmpsb
aas
mov
xchg
sub
adc
fs
jnp
push
sbb
adc
repnz
push
mov
jp
xor
or
sbb
sub
add
lock
es
xor
bound
xchg
fimull
mulb
and
xor
cmp
fistps
sti
cmp
sbb
adc
and
lods
and
shll
or
fs
mov
dec
cltd
jo
stos
ror
mov
in
pop
jbe
dec
push
into
ss
xchg
std
mov
arpl
cmpsl
mov
fwait
jb
xor
es
jmp
roll
add
cld
push
out
mov
insb
aas
dec
mov
das
hlt
jne
hlt
inc
fcoml
aaa
loope
shrb
xchg
add
push
sub
dec
fstpt
in
xchg
pop
xor
inc
push
enter
sahf
addr16
pop
xchg
push
inc
test
dec
sbb
add
mov
daa
cmp
outsb
hlt
pop
and
arpl
sbbb
xchg
stos
jno
js
xchg
inc
aaa
sub
xchg
mov
cmp
xlat
cmp
adc
push
fmull
lods
mov
xchg
out
stc
pop
sahf
rclb
ds
mov
lds
xor
jns
scas
daa
jno
xacquire
cld
lret
mov
mov
popf
mov
adc
sub
adc
sbb
loop
cs
mov
mov
repnz
rdtsc
pop
xor
and
xchg
or
inc
sbb
add
mov
aaa
mov
jecxz
mov
mov
mov
fcoml
int3
mov
xor
out
push
insl
push
xchg
inc
pop
test
mov
movb
loope
jge
lds
xor
sub
mov
mov
cltd
add
and
fs
lock
add
test
pop
icebp
lock
bound
add
or
sbb
xor
pop
gs
sarb
dec
fistpll
jp
mov
dec
mov
jmp
sub
sub
mov
sbbl
jnp
popf
pusha
loope
shll
xor
and
es
loope
jp
loope
mov
or
imul
in
sbb
mov
test
imul
pop
mov
add
push
push
cmp
pop
or
add
stos
add
mov
jae
adc
fidivrl
outsb
xchg
inc
ss
adc
les
xchg
data16
outsl
mov
jno
out
mov
popa
and
mov
lret
fisubl
xor
inc
jge
xchg
sub
fiadds
jl
xlat
xor
mov
push
rcll
pop
push
sub
lds
mov
daa
push
mov
fsubrs
fcmovne
lods
dec
and
sub
pop
bound
xchg
dec
popf
cs
lcall
pusha
sbb
ljmp
sbb
xchg
add
mov
lahf
mov
subb
and
int
jae
pusha
dec
add
pop
push
xor
ljmp
add
push
test
or
fcoms
or
stc
in
cmp
stos
push
into
lret
pusha
dec
outsb
leave
insb
xchg
inc
cmpsb
imul
mov
cmp
inc
add
mov
cmp
jae
lea
movsl
jns
pusha
xchg
in
scas
pop
dec
xchg
int
jno
inc
addb
adc
out
cmp
vpavgb
xchg
lahf
sub
scas
fstps
insb
not
es
mov
loop
ret
adc
popa
fistps
cmpsl
int3
and
mov
aas
jl
mov
adc
and
outsl
lods
cld
ljmp
int3
ljmp
fs
mov
aam
lock
fwait
test
mov
push
xchg
sbb
pusha
addr16
fidivl
pop
inc
scas
cmp
leave
or
jmp
iret
dec
mov
lods
fwait
mov
sub
sub
stc
stos
bound
inc
xlat
movl
xorb
adc
inc
rolb
aam
imul
fmull
out
adc
xchg
mov
xor
xchg
lret
and
pop
pusha
fldt
or
push
ja
fistpl
das
jmp
sub
sbb
aas
xor
mov
mov
rolb
mov
jmp
test
popa
pop
add
cmp
mov
lret
movl
mov
push
js
icebp
push
inc
mov
mov
dec
mov
outsb
insb
sbb
fstpt
or
jbe
jb
inc
or
fmull
in
lcall
or
dec
in
adcl
cmp
adc
arpl
mov
and
push
pop
cmpb
dec
fsubl
in
das
dec
mov
repnz
cmp
lahf
add
mov
add
push
sub
adc
insl
scas
fwait
in
cli
out
subb
sbb
dec
mov
shrl
inc
mov
cmp
xlat
xchg
or
std
mov
aaa
ja
out
mov
push
sub
fcompl
movd
ds
in
jb
das
mov
stos
xor
sarl
dec
into
sbb
addr16
push
inc
inc
addr16
fstl
cmpsb
xchg
daa
jbe
push
xor
adc
push
mov
mov
ljmp
push
int
hlt
sbb
outsl
rorl
mov
gs
add
push
or
dec
jle
out
aaa
dec
push
add
test
xlat
fcompl
push
jmp
add
add
lahf
pop
leave
shrl
push
xlat
popf
sbb
mov
ficompl
add
cli
std
fimuls
push
or
xor
fsts
cli
frstor
stc
lcall
cmp
push
push
sahf
mov
jle
jge
cltd
xchg
jnp
icebp
push
pop
mov
sbb
pop
imul
std
mov
test
jns
jb
leave
xor
add
sti
pop
ret
add
les
mov
fildl
fcompl
adc
inc
rcll
sbb
bound
xor
test
loope
and
mov
cmc
insl
ret
and
int3
cltd
ja
sub
subb
ficomps
cmp
negl
xchg
push
pusha
cmpsb
cmpsl
mov
mov
xor
lock
lret
fnstenv
xor
or
push
xor
xchg
aam
push
out
in
add
stos
out
out
jbe
jp
fildll
mov
fsubl
insl
or
test
jle
xchg
cmp
clc
movsb
sub
test
into
cmp
inc
cld
xor
out
shll
fnstsw
aas
push
in
jae
push
and
icebp
cmpsb
xchg
add
xor
sbb
rorb
and
xchg
loopne
jl
daa
or
mov
stc
mov
dec
cmp
add
xor
sbb
insl
xlat
lret
dec
popa
jo
test
out
addl
stos
cmpsl
pop
jg
jecxz
cli
sub
fcomi
mov
inc
rcl
rcrb
sub
and
loope
nop
dec
dec
xchg
es
xchg
inc
xchg
xchg
xchg
cs
pop
out
jg
cmpsb
clc
into
pushf
jle
pushf
sub
inc
sbb
roll
in
in
inc
sbb
and
xor
cmp
in
ss
mov
push
or
mov
ret
ficompl
aam
leave
add
sub
add
mov
cwtl
sub
add
hlt
stos
sti
lahf
sbbl
push
loope
mov
jbe
ss
dec
sub
push
addl
cmp
cli
insl
pop
hlt
adc
divb
sahf
cmp
jae
sbb
xor
daa
xchg
cmp
mov
adc
stos
xchg
dec
pop
enter
out
test
cmp
push
cmc
cmp
mov
push
jp
mov
xor
negl
xchg
lea
mov
out
add
mov
daa
adc
mulb
cmp
cmpsb
pop
shrl
pop
aam
clc
mov
dec
mov
insb
scas
pushf
test
inc
push
or
push
lahf
iret
push
mov
das
roll
push
push
xchg
loopne
inc
xchg
mov
mov
sub
jo
shl
xor
push
negb
insl
sbb
fdivrs
add
dec
test
cmp
andb
mov
sbb
std
cmpsl
shrb
inc
out
jae
rcrb
scas
xor
hlt
mov
adc
jp
ret
insl
insb
inc
cmp
pop
pop
dec
ss
pop
jae
ja
loop
addr16
add
aad
sbb
cmc
or
ss
scas
cmpsb
fnstcw
mov
rorb
mov
add
mov
xchg
aam
pusha
xchg
mov
mov
in
pushf
add
xchg
sbb
cmpsb
add
add
lahf
leave
in
jmp
lock
adc
repnz
ret
push
jmp
xor
hlt
add
cmp
dec
test
push
dec
inc
lahf
divb
aad
hlt
sub
mov
bound
mov
jmp
inc
shlb
dec
sub
icebp
add
ds
outsb
test
push
dec
mov
dec
arpl
in
lahf
das
fs
nop
rcl
js
fsubl
ljmp
in
sub
cmp
dec
or
or
cmp
lock
fidivs
sub
sbb
lret
enter
xlat
mov
cmp
leave
shll
push
mov
xchg
bound
scas
push
sub
popa
dec
les
pushf
popf
mov
incl
adc
rclb
and
add
andl
lods
mov
dec
push
lods
xor
popf
sahf
es
push
xor
out
mov
ficoms
fwait
test
jae
in
sahf
adc
sub
cmp
in
sbbb
xchg
mov
lock
dec
xor
popf
sbb
leave
in
lea
cmp
xor
pop
lcall
int3
ret
pop
inc
xchg
in
jns
adc
mov
cmp
leave
jecxz
mov
lods
fnsave
pop
sar
inc
mov
xor
hlt
mov
push
mov
adc
jo
and
dec
xor
or
movsb
lods
sbb
dec
mov
and
pusha
xor
xchg
mov
daa
cmc
orb
adcb
dec
push
mov
push
bound
fistpl
jb
jg
mov
cli
int
xchg
xchg
xchg
inc
gs
test
cmp
dec
adc
out
adc
cltd
daa
ja
insl
in
imul
clc
cmp
xor
xchg
lahf
adc
jl
adc
cmp
push
pop
imul
or
mov
fbld
sbb
or
int3
negb
sahf
xor
cmp
jnp
cmp
dec
pop
push
fwait
cs
iret
xchg
popl
test
mov
out
cli
popa
cmp
rcr
sbb
mov
inc
mov
or
push
xorb
fs
push
dec
popf
aad
mov
cmp
icebp
xor
pop
dec
xchg
lods
cmp
adc
inc
lods
pusha
sarb
jmp
mov
xor
pop
mov
ss
jo
jp
sub
adc
add
lret
std
xor
and
ja
jecxz
jae
and
sti
mov
mov
cmpsl
inc
daa
aas
sub
inc
loop
jl
out
cmc
shll
test
test
sub
jmp
in
dec
adc
mov
sbb
mov
call
repz
fistpll
outsb
sub
pusha
imulb
pusha
outsl
jae,pt
or
inc
std
adc
stos
bound
fsubrp
sbbb
out
es
lahf
sbb
sbb
jecxz
or
push
es
or
dec
outsl
xchg
cmpsl
mov
mov
jnp
in
or
bound
dec
popf
jecxz
sub
inc
sbb
xchg
mov
mov
icebp
ret
cmp
scas
push
test
adc
dec
inc
ret
dec
and
stc
es
imul
sbb
cmp
push
pop
or
mov
cmp
inc
add
fwait
mov
adc
mov
fidivl
inc
cli
jns
add
in
mov
pop
popa
adc
pop
sbb
sub
fidivrs
lods
inc
mov
enter
fmuls
add
cmpsl
and
fcmovu
dec
imul
add
bound
mov
ret
fnstenv
cmpsl
xchg
jne
in
sub
xchg
sti
les
sbb
xor
jge
xchg
xchg
dec
outsb
xor
jno
adc
cmovs
shl
add
pop
and
decl
mov
mov
in
mov
ss
pop
loope
data16
cmovae
call
and
lahf
repz
lahf
jl
adc
fdivr
in
add
cwtl
lcall
insb
add
mov
push
fidivs
push
in
pusha
add
jbe
je
adcb
inc
xor
push
or
sub
push
sahf
lret
add
mov
je
pop
add
dec
or
push
imull
mov
out
sub
call
aas
mov
dec
mov
xchg
sub
cmc
xchg
out
cltd
mov
jmp
pop
jae
ss
insb
leave
jne
cmp
mov
les
fistps
mov
repnz
ljmp
jns
enter
sub
mov
xchg
icebp
xor
test
cmc
fsubs
xor
loope
push
fldenv
movsb
gs
push
xor
mov
loope
cltd
nop
add
lds
out
mov
outsl
out
in
push
adc
cwtl
or
stc
inc
mov
inc
fs
scas
jl
stos
or
push
add
out
insb
mov
inc
sbb
cmc
lahf
sub
and
dec
or
pop
lret
sbb
inc
push
lret
jo
jmp
sbb
xchg
sbb
test
mov
dec
inc
addr16
clc
nop
jbe
out
adc
sub
out
pop
loope
mov
test
stc
add
xor
adc
lds
in
or
and
inc
cs
sub
fistpll
cmp
cmc
sub
lds
add
jns
or
cmpsl
push
mov
or
xchg
xor
mov
repnz
popf
into
sti
cwtl
push
faddp
in
sub
or
mov
sbb
xor
sbb
push
adc
dec
mov
push
mov
inc
inc
push
jne
mov
ja
data16
cmpsl
push
addb
in
pop
mov
push
mov
shlb
cmp
jmp
xchg
test
pop
cmp
inc
inc
pop
cmp
cmp
pop
shrl
es
shrb
and
inc
sarl
xchg
cs
out
sub
sbb
push
lods
pop
jp
hlt
push
test
mov
jl,pt
fsubrs
out
lods
mov
or
jle
es
push
inc
or
sub
and
lock
xchg
rcll
push
adc
aad
aam
mov
cmp
in
mov
xor
test
xor
jmp
test
popf
mov
mov
inc
jo
mov
popf
mov
mov
subb
and
dec
lock
test
push
jge
inc
cltd
add
jp
cltd
add
fiaddl
push
jne
xchg
cmp
loop
pop
fwait
mov
cwtl
out
inc
cmp
sbb
jo
mov
flds
adc
lds
sbb
xor
inc
ja
xchg
push
shrb
mov
not
or
out
out
fs
push
xchg
sbb
xchg
or
ljmp
lods
outsb
out
and
dec
icebp
cli
lods
and
ljmp
neg
or
popa
lea
xchg
imul
nop
add
adc
pop
cmpsl
shl
stos
inc
cmp
shl
xor
fldcw
xchg
jecxz
lods
cmp
inc
daa
clc
inc
sub
not
jb
pop
in
jl
sub
int3
xor
shl
test
and
jno
adc
jmp
mov
dec
xlat
lcall
leave
daa
xchg
mov
or
mov
ret
mov
inc
jmp
inc
jmp
ret
ja
xor
cmp
lods
or
ja
mov
cmp
shll
push
js
xchg
dec
pop
push
inc
test
std
jns
fwait
sub
xlat
sub
pop
add
mov
lea
xchg
push
shlb
cld
mov
imul
inc
in
das
shlb
mov
cmp
movsb
mov
jle
xorb
pop
out
shll
jno
je
test
test
ss
popa
andb
fisubrl
dec
cmpsl
xor
jno
enter
lock
lret
clc
cmp
and
sbb
sbb
inc
pop
pop
inc
lret
lahf
inc
lock
vsqrtpd
or
add
ret
pop
push
sti
and
fistps
lods
push
daa
fidivrl
jns
out
xchg
jne
xchg
sbb
pop
lock
inc
or
rclb
pop
mov
sub
mov
jae
jp
imull
push
add
mov
leave
pushl
add
sysenter
pop
xchg
cmc
shlb
adc
mov
ret
mov
xor
call
mov
cmpsb
sub
lret
or
push
lods
xor
cmc
pop
cmp
push
mov
out
cltd
loope
dec
sbb
jo
push
repz
cltd
sbb
sbb
and
push
mov
jg
repnz
cmp
push
fld
and
aad
xchg
fninit
sub
leave
push
sahf
or
jb
popf
lahf
leave
aam
mov
aad
addl
lret
notl
pop
sti
fldcw
add
rclb
insl
mov
enter
push
insb
xchg
xor
aas
aas
fwait
xlat
sub
mov
lods
das
xchg
or
data16
out
mov
jno
mov
mov
std
cmp
push
divb
mov
mov
in
and
inc
mov
and
sub
mov
cs
or
mov
fwait
push
test
jnp
lock
shl
adc
pushf
mov
in
mov
and
adc
das
inc
lret
push
fisttps
fnsave
inc
adc
dec
adc
mov
sub
xchg
ficoml
push
scas
dec
sub
xchg
fsubrl
or
push
jp
bound
leave
lret
enter
gs
cmp
sbb
fs
and
jnp
js
stc
inc
push
inc
lcall
push
inc
outsl
mov
dec
mov
pop
aaa
mov
add
mov
clc
and
xor
bound
js
or
jnp
imul
cmc
pushf
aad
jmp
adc
push
inc
popf
in
rolb
in
sub
xor
out
add
mov
icebp
sbb
sub
fs
out
aam
jl
in
push
addl
aad
int
jl
inc
jbe
cmp
out
out
les
inc
pop
call
push
clc
push
push
dec
lret
loopne
adc
xchg
mov
rclb
mov
ret
nop
xor
sbbl
lret
jl
fcmovbe
sub
xchg
adc
fdivrs
mov
stos
push
outsl
jbe
mov
sbb
ficompl
mov
add
out
popf
xchg
mov
ror
jae
jnp
fimull
shlb
mov
mov
test
mov
loope
pop
inc
xor
jmp
cmp
fstl
jmp
jo
ror
cmpsb
add
pop
out
inc
xor
jmp
fdivs
pop
jae
add
sbb
and
sbb
inc
push
cmp
int3
roll
fwait
repnz
mov
fwait
add
rcr
lahf
jbe
stos
cmp
mov
daa
xchg
cltd
jns
ret
pop
xchg
cs
les
leave
out
push
stc
pop
outsb
test
test
lret
sub
hlt
xor
stos
inc
stc
adc
inc
inc
rorb
cmp
jp
mov
and
inc
out
popa
pop
add
jo
jg
loop
out
xrelease
sbb
incb
nop
dec
mulb
mov
mov
scas
pop
ljmp
jg
stos
xchg
inc
loopne
cltd
jne
cltd
jno
adc
xchg
xor
xchg
cmp
rorl
cld
adc
scas
cmp
push
shlb
xor
xor
scas
push
jp
dec
test
stos
nop
in
or
jge
cmpsb
cmp
add
lods
push
fcmovnbe
sarl
inc
sub
loopne
aam
sbb
xchg
sarb
mov
lds
mov
movsb
andl
popf
fnsave
popf
inc
lret
fs
pushl
xchg
loope
pop
cwtl
popl
cmp
push
scas
lods
int
xor
pop
fisttps
cs
push
sub
adc
inc
push
xor
stc
mov
fwait
stos
pop
jne
je
nop
ret
loop
inc
and
sub
inc
lcall
bound
xchg
pop
add
jmp
lahf
add
test
loop
out
fisubrl
ret
daa
push
mov
ret
cmpsl
jo
sub
das
loopne
test
jae
mov
and
imul
stc
sub
cli
inc
mov
rcll
push
xor
pop
in
mov
push
push
sub
adc
xchg
iret
aad
fmuls
aad
push
test
sbb
out
sbb
dec
jp
jns
mov
cmp
mov
or
pushf
dec
mov
inc
add
clc
popl
xor
test
roll
mov
in
iret
mov
and
lahf
inc
rol
fnstsw
jge
aas
push
std
and
inc
dec
or
xor
sbb
enter
pop
pushf
or
test
adc
adc
sbb
rol
xchg
mov
ret
inc
jmp
bound
jnp
mov
or
push
out
and
sub
or
pop
loope
clc
sbb
shlb
mov
xchg
js
pop
aad
and
lods
jnp
pushf
xlat
mov
int
inc
rcl
stos
and
pop
jp
and
xchg
mov
mov
roll
test
add
pushf
in
mov
mov
mov
arpl
lahf
ds
or
sbb
xchg
rclb
iret
sbb
divb
push
lock
in
push
ffree
bound
mov
out
adc
mov
pop
dec
out
pop
js
push
inc
xchg
pushf
xchg
aaa
and
sbb
sub
mov
lods
xchg
inc
xor
jecxz
sti
push
les
test
inc
xor
test
pop
std
je
das
inc
push
pusha
movsb
ret
push
sahf
pop
fimuls
add
in
jo
or
lods
push
xlat
mov
mov
out
inc
fistpll
in
push
icebp
cwtl
add
push
mov
cmp
insl
cltd
fwait
or
int3
stos
rcll
jo
in
adc
shrb
das
outsb
jae
ss
cli
cmpsl
in
popl
jbe
leave
sub
rcll
sub
int3
outsb
push
pop
push
loope
out
arpl
out
leave
std
imul
xor
xchg
dec
popa
sub
pop
sbb
push
cmc
or
xor
xchg
push
lods
jb
jns
and
cli
fucomi
and
adc
in
inc
jl
into
clc
pusha
jmp
and
mov
push
dec
fwait
xchg
outsl
pop
out
pusha
pushf
fsubr
sub
cli
stos
into
sub
xor
sahf
lea
lret
inc
sub
orb
xor
fsqrt
mov
xchg
cmpsb
lret
ret
jnp
sbb
aad
jmp
inc
pop
push
pop
gs
dec
or
pushf
lods
sub
aaa
jecxz
mov
nop
and
mov
xlat
loopne
jge
imul
repnz
push
pop
jmp
js
iret
pop
mov
and
aad
add
nop
sbb
repz
xchg
sbb
mov
mov
fnstenv
mov
icebp
add
not
stos
mov
adc
incb
in
nop
ret
adc
jg
sbb
sarl
out
sbb
lahf
mov
xchg
clc
testb
sbb
test
je
jno
fistpl
call
sub
mov
outsb
inc
mov
push
and
jg
cmp
mov
leave
jp
jle
lret
repz
loop
push
mov
int3
mov
cmp
push
push
adc
mov
mov
mov
pop
sbb
clc
pushf
mov
push
cmp
mov
sbb
divl
repnz
and
imul
fucomi
inc
add
jmp
mov
or
sub
pop
pop
and
push
mov
js
outsl
jecxz
inc
jmp
xor
ror
or
scas
and
xchg
popa
xchg
addr16
mov
dec
loopne
pusha
mov
andb
add
push
dec
adc
shll
mov
jo
mov
and
mov
add
sbb
cmpsb
adc
aam
add
xor
or
and
mov
push
dec
in
mul
lock
ljmp
inc
xor
jecxz
push
ror
push
mov
sbbb
inc
pop
out
test
pop
mov
or
out
xchg
in
out
sbb
cwtl
mov
pop
faddl
jmp
out
pop
mov
pop
int3
ret
scas
fnstcw
pop
into
mov
cwtl
stos
and
xor
call
or
cmp
shr
ja
xlat
mov
mov
popf
loopne
xchg
je
push
pop
push
out
test
in
push
fprem1
push
pop
loope
popa
lcall
scas
inc
dec
fwait
jmp
pop
add
insl
add
sbb
sti
pop
mov
lods
loop
js
jnp
scas
cmp
lahf
mov
stos
adc
das
dec
xchg
or
push
aam
insb
out
xor
jno
sub
addr16
imul
push
shrl
cmp
loopne
stc
xor
sar
rclb
pop
mov
aam
out
ss
addl
mov
mov
das
pop
dec
mov
ja
or
out
inc
je
or
mov
mov
push
or
jge
movsb
ror
mov
fwait
sti
shll
or
mov
jecxz
sahf
loope
dec
out
inc
xchg
jle
lods
jns
fcmovnbe
dec
aad
sti
shl
gs
stc
ljmp
jl
xor
stc
jb
jbe
movsl
outsl
lds
xchg
mov
cmp
sbb
push
sub
ds
ss
xchg
add
mov
test
and
push
mov
mov
push
dec
and
push
mov
fidivs
xchg
pushf
pop
mov
pop
cmp
rcl
or
jl
cmp
dec
loope
add
sub
xchg
push
loop
scas
roll
xor
and
xlat
pop
pop
pop
push
mov
in
mov
out
movsb
adc
ss
ffree
push
sbb
pop
in
mov
xchg
xchg
xchg
out
xchg
enter
imull
push
pop
icebp
jae
das
icebp
aam
popf
cmp
push
aam
fimull
int
dec
cld
or
scas
int3
pop
pusha
in
and
pop
icebp
jge
cmp
loopne
cmp
fisubrs
fstpt
mov
pop
and
or
or
jo
push
pusha
mov
loop
lret
mov
ret
pop
fstpt
lret
call
lahf
test
mov
cmc
punpckhwd
or
movsl
frstor
inc
add
mov
test
xchg
and
dec
inc
movsl
push
loope
fmull
adc
adc
loopne
out
imul
push
pop
xor
in
lea
sub
xor
pop
fs
xchg
pop
mov
and
pop
inc
jnp
sbb
adc
in
jp
inc
or
subl
mov
pushf
pop
clc
and
outsl
imul
aas
cmpsb
insl
lcall
pop
mov
sahf
leave
fstps
int
daa
or
pop
jg
dec
sub
add
les
loopne
ficomps
inc
add
stos
aad
loopne
dec
mov
mov
or
pop
and
inc
and
dec
xor
hlt
sti
addr16
pop
cmp
je
push
and
push
cmp
pop
loope
add
sub
add
dec
cmp
add
xor
mov
and
push
add
shl
xlat
inc
and
xchg
sbb
dec
pushf
lock
xor
push
jae
clc
sbb
cmp
mov
ja
mov
add
push
sub
test
push
cmpsl
sbb
cmpsl
and
jo
stc
mov
push
jle
mov
xchg
cltd
inc
and
inc
sub
movsb
sbb
add
js
adc
cwtl
rcrb
rcl
test
and
adc
xchg
and
add
adcb
lods
popf
and
sbb
rcr
cmpsl
in
dec
mov
mov
aad
mov
pop
dec
push
test
test
dec
rep
xlat
cmp
jg
mov
jo
mov
cmp
mov
push
lahf
or
push
sbb
movsb
jae
loopne
cmp
adc
aam
lods
xchg
pop
and
daa
lods
js
pop
pop
xor
and
xor
in
inc
xchg
inc
jnp
jg
stc
lahf
mov
fnstsw
js
test
mov
xchg
orb
xor
push
ret
inc
xlat
in
iret
addr16
push
scas
je
dec
xor
into
leave
test
add
xor
xchg
aas
popa
in
out
cmp
leave
mov
jl
int
adc
test
or
jle
loope
xor
push
lcall
hlt
mov
rcrl
push
daa
dec
cmpsl
sarl
jo
push
and
pop
pop
pusha
cmp
cmp
lds
jmp
mov
imul
xor
pop
popa
data16
dec
test
test
nop
lret
out
sub
adc
xchg
fwait
xor
lods
lahf
insl
lret
icebp
pop
mov
sub
add
imul
xor
pop
or
aam
pop
lds
jae
pop
psubsb
sub
or
ljmp
jmp
callw
stos
test
arpl
ret
out
xor
test
sub
and
je
xor
push
jge
icebp
insb
xchg
scas
sbb
dec
mov
dec
fbstp
rolb
out
ret
xchg
jg
dec
decb
jnp
push
shll
push
cmp
add
cmp
lahf
je
cmpsb
dec
popf
out
aas
mov
repz
fcompl
stos
dec
into
and
jp
adc
cmp
push
int
call
insl
mov
insl
sbb
pop
cmovge
mov
xor
loope
das
sbb
mov
rcr
adc
das
ja
fsubp
sbbb
mov
mov
dec
sub
adcb
subb
push
mov
xchg
mov
and
lds
mulb
dec
and
jl
insb
stos
pop
and
pop
sbb
rorl
lcall
das
adcl
mov
mov
repnz
push
test
add
jb
lret
mov
jle
call
jmp
inc
mov
es
ret
fs
adc
push
sbb
add
pushf
in
stos
jle
sbb
dec
mov
stc
push
fidivrs
js
dec
add
pop
sub
nop
pop
lret
rcrl
nop
enter
xorl
mov
add
iret
or
add
lods
cmp
fdivl
jge
push
lret
fistpl
pop
repz
inc
sbb
decl
int3
repz
bound
sub
sbb
sbb
cli
inc
inc
dec
loopne
xlat
jg
aam
rolb
mov
mov
repz
les
adc
inc
enter
stc
add
test
sbb
xchg
popa
mov
subl
jnp
stc
jb
subl
jg
and
inc
push
jge
pop
sbb
cmpsb
in
xor
mov
popa
sarb
loop
jl
xchg
stos
and
les
jbe
ss
and
inc
ret
clc
es
les
notl
jp
daa
fnsave
sub
aaa
push
out
sub
inc
pusha
add
notb
jbe
pop
aaa
fwait
scas
push
or
les
adc
nop
mov
add
xor
mov
insb
into
ret
dec
int
pop
push
daa
fucom
loop
or
ds
rcrl
xor
fsubs
rcrb
std
cwtl
mov
push
xor
icebp
push
arpl
mov
jmp
pusha
mov
cmp
push
pop
pop
and
xchg
mov
rcl
lods
sbb
fdivl
pop
call
adc
mov
cmp
lds
fidivrl
jle
fxch
xchg
cmpb
fwait
xchg
adc
adc
push
aad
enter
lret
imul
int
lret
int3
push
cmc
test
or
add
mov
insl
jp
pop
imul
insl
or
inc
push
cmp
cmp
push
and
pushf
in
xor
lds
repnz
sub
mov
mov
test
inc
imul
test
imul
add
xchg
push
push
pop
push
inc
and
inc
ss
xchg
push
adc
or
pop
movl
ss
adc
or
sbb
mov
mov
in
iret
sti
jns
and
clc
loop
int3
cmp
or
scas
clc
std
adc
sbb
test
add
xchg
test
adc
adc
pop
dec
mov
sahf
or
xchg
and
lea
movsl
sbb
add
inc
aad
nop
std
je
pop
jmp
popa
aad
stc
push
loope
popf
cld
leave
nop
mov
dec
adc
pop
loop
push
in
xchg
int3
mov
sub
xor
daa
dec
shl
sub
daa
fs
mov
lahf
loop
dec
lret
shll
sahf
pop
cmp
stc
fwait
jp
movsl
pop
dec
sub
and
aam
and
cs
pusha
fildl
insb
cmpsb
fsubrs
enter
les
les
dec
dec
rolb
movsl
loop
pop
push
stos
cmp
cmp
adc
add
lcall
cmpb
cmp
out
jbe
push
add
xchg
ljmp
cmpsl
cli
and
push
fnstcw
bound
shrb
mov
ss
adc
mov
xlat
cwtl
dec
jl
mov
jmp
insb
mov
cmc
sbb
in
in
addr16
inc
idivb
imul
sbb
mov
imul
mov
push
cmp
push
sub
push
subb
add
xchg
dec
mov
popa
sub
mov
push
xchg
mov
pop
or
pop
js
xor
stos
mov
insb
add
repnz
das
lret
xlat
js
add
nop
pushf
addr16
mov
js
push
mul
test
in
cmpsl
lcall
mov
lods
inc
jmp
lahf
shlb
fimuls
fstpl
pushl
adc
xor
adc
mov
aas
jne
adc
mov
dec
inc
mov
inc
add
jmp
sbbl
cmp
data16
cwtl
xor
sbb
xor
rcrl
rep
in
mov
or
adc
xchg
mov
mov
mov
ficompl
push
cmp
xor
mov
test
nop
das
xor
mov
lock
sbb
aam
or
in
les
pop
mov
mov
fstpl
stos
out
jae,pt
js
and
ds
pusha
xor
mov
mov
cli
in
and
sbb
aas
inc
call
clc
inc
lcall
mov
add
ret
lahf
add
lcall
pop
shll
ja
or
faddl
lock
sahf
xor
rolb
mov
push
fsts
mov
fildll
pop
int
sbb
mov
mov
pop
mov
sbb
jge
into
sahf
mov
rcrl
push
int
xor
je
xchg
rcl
mov
xlat
mov
lahf
aam
scas
lahf
imul
add
or
push
pmaddwd
andl
dec
cmc
xchg
pop
dec
sub
and
test
shll
sub
mov
jp
enter
mov
in
rorb
push
addb
xor
push
add
ja
ss
jp
sub
scas
cmp
or
jne
testl
movsb
out
ljmpw
pop
movsb
cltd
stc
or
hlt
jp
pop
add
xchg
pop
jecxz
out
adc
dec
jne
scas
xor
jno
insb
rcll
or
gs
and
es
jge
inc
add
and
add
dec
adc
or
testb
arpl
sbb
pop
cmpb
test
cltd
cmp
push
dec
mov
sbb
jg
push
cs
mov
stc
xchg
inc
or
in
xchg
in
pop
push
add
andb
mov
mov
xor
cld
dec
imul
and
xchg
ss
mov
int
ja
das
into
hlt
xor
mov
dec
rcrb
lock
stc
stos
and
enter
pop
lret
mov
push
cmpsl
hlt
cmp
out
sti
cmc
call
dec
push
in
shll
cltd
and
jg
push
adc
mov
sbb
dec
out
xor
pop
inc
add
add
pop
mov
hlt
stos
sub
inc
movsl
push
cmc
or
lcall
xchg
loopne
aaa
cld
jmp
jne
mov
mov
jecxz
push
sub
inc
jnp
das
xchg
add
loope
cmp
aam
gs
xor
aam
cmp
adc
fs
ja
cmpsb
xor
in
cmp
or
xchg
push
mov
in
mov
pop
xor
hlt
adc
mov
xor
jae
jae
mov
lods
js
ret
jmp
lret
insb
push
mov
in
xchg
cmpsb
cmpsb
in
push
sbb
xor
push
or
xchg
jne
arpl
lcall
cld
rol
and
fmuls
hlt
nop
lds
aam
jne
sbb
or
das
jno
mov
and
imul
push
out
ja
or
pop
jo
xorb
pop
in
add
cmp
fstl
sti
movsl
sub
fucom
mov
addr16
pusha
adc
cmp
mov
ret
cld
pop
leave
ret
inc
lock
add
loope
sub
iret
adc
icebp
mov
push
adcl
mov
outsb
loope
cmp
lds
out
iret
sti
mov
hlt
iret
neg
mov
jne
jmp
out
adc
xchg
adc
lret
enter
adcb
fs
test
or
or
pop
and
shr
enter
ss
ds
mov
scas
inc
nop
xlat
push
jnp
jecxz
outsb
into
out
jae
xor
inc
pop
int
xchg
xor
push
mov
ja
sbb
int3
cmp
mov
imul
rclb
cli
aam
adc
xchg
aad
shrl
jo
data16
sub
ss
sbb
popa
call
xor
nop
push
out
jae
mov
in
jns
fildl
push
scas
or
add
lds
mov
and
aaa
and
dec
icebp
pop
aaa
popa
sahf
xor
into
sub
dec
aam
mov
sbb
dec
adc
cmp
nop
fcoml
aaa
shrl
xor
or
adc
sbb
and
sub
lcall
jnp
test
into
jmp
mov
and
xchg
adc
popa
mov
mov
mov
jecxz
sub
and
jo
cmp
aaa
shll
xchg
and
adc
add
stos
mov
hlt
mov
mov
sbb
mov
outsl
les
and
cli
loope
andl
inc
outsl
xor
sub
fld
rcrl
iret
aaa
loop
jo
ret
loopne
js
mov
push
dec
xor
jle
adc
popf
into
cld
jmp
imul
insb
ss
dec
and
sbb
fists
xchg
icebp
inc
je
leavew
jno
dec
inc
sub
inc
mov
jne
push
inc
sub
lahf
jge
lea
mull
mov
jnp
or
test
xchg
mov
sub
cmpsl
add
pop
fwait
jne
dec
add
mov
xor
jae
cmp
roll
or
fwait
sub
test
lahf
jae
jg
lds
jno
in
movsl
loope
xchg
sbb
movsl
arpl
add
jno
out
push
cltd
add
out
jb
hlt
sti
sbb
pop
jle
adc
in
or
neg
lods
shlb
and
pop
xlat
sbb
int3
mov
add
lea
lods
test
scas
incb
dec
nop
loop
int3
ja
xchg
jno
xchg
cmp
ja
imul
loopne
repnz
dec
jno
mov
enter
sahf
insb
repz
scas
jns
pop
mov
pop
adc
fbld
inc
sbb
mov
mov
mov
orb
or
sbbb
xor
lods
jne
cmpsb
or
adc
dec
push
sarb
adc
xchg
imul
das
cltd
stc
test
sbb
xchg
and
js
inc
or
dec
mov
je
cwtl
add
mov
stos
iret
inc
add
sbb
out
push
sub
aas
int3
out
frstpm(287
scas
icebp
std
sti
xlat
xchg
cli
es
int3
repnz
mov
cmp
and
sub
xchg
pusha
daa
sti
cs
daa
mov
sub
test
mov
and
add
xchg
mov
cltd
add
fldl
mov
ficoml
sbb
les
std
int3
xchg
add
dec
in
inc
lret
sub
jns
pop
aam
std
adc
gs
jecxz
movsl
jmp
ret
decb
int3
or
xchg
pop
add
and
pushf
ja
in
add
addr16
xchg
push
iret
cmp
pop
push
adc
mov
mov
imul
xchg
ss
dec
in
faddl
sub
xchg
mov
ret
mov
aam
jne
stos
movsb
lods
aad
pop
sahf
push
inc
repnz
insb
sbb
out
sbb
fisubl
cs
movsb
in
xchg
mov
es
push
xlat
push
sahf
jno
push
jp
or
xor
mov
dec
mov
xchg
jge
popa
pop
daa
push
faddl
cwtl
ljmp
repnz
jp
push
test
mov
inc
xor
jb
addr16
pop
push
jl
lea
insl
jg
arpl
lds
pop
pop
push
xor
jb
lret
clc
shrl
into
int
push
sbb
icebp
xchg
lret
jbe
inc
inc
arpl
repnz
rcrl
or
sbb
je
cmpl
scas
ret
lret
adc
sbb
jbe
imul
ret
mov
test
mov
mov
std
sub
out
cmp
xor
movsb
add
jp
shlb
lock
int3
dec
jnp
push
notl
add
cmc
add
test
sbb
or
sub
bound
pop
xchg
pop
jns
mov
xchg
ror
mov
adc
imul
imul
push
or
stos
pushl
jo
shl
or
xchg
ljmp
lret
xor
scas
inc
xchg
stc
and
push
cli
movb
ljmp
cld
pusha
add
pop
mov
mov
jbe
mov
jl
sti
scas
pop
sbb
or
fisttpl
xor
nop
stc
add
add
pop
imul
sbb
mov
pusha
je
mov
mov
jle
in
mov
shl
mov
mov
or
int
jno
adc
scas
idivb
stos
lods
jecxz
sbb
jae
movb
aaa
adc
cmp
mov
sbb
inc
adc
mov
or
adcb
mov
adcb
cltd
test
jg
pop
ljmp
ficomps
gs
incl
adcl
sub
stos
mov
sub
cwtl
mov
movsl
pusha
push
ret
inc
sbb
cltd
push
jnp
stc
mov
sbb
leave
stos
and
jmp
cli
push
aad
lret
nop
leave
jmp
clc
pop
in
xchg
inc
pop
andb
cmp
loop
fdivs
push
pop
sub
decl
jmp
imul
mov
ficompl
jo
dec
std
mov
daa
insl
push
pop
xor
adc
mulb
fxch
fdivl
dec
pop
in
in
add
add
and
iret
pop
and
jle
xchg
insb
int3
push
sbb
mov
or
icebp
outsb
mov
outsl
test
rclb
into
jp
stos
icebp
pushl
cmp
inc
mov
ret
and
xor
pop
mov
ret
sub
sti
cmpsl
pop
or
mov
in
jmp
mov
add
xlat
movsb
sub
jns
inc
dec
popa
inc
pop
sti
icebp
lods
adc
jno
mov
in
mov
sbb
or
mov
int
sbb
lods
lahf
mov
sbb
hlt
test
fsubrl
out
outsb
scas
cmp
and
mov
decl
leave
lcall
test
mov
add
jge
cmp
adc
mov
pop
aam
leave
scas
push
sti
mov
pop
mov
not
dec
cmp
lds
fbstp
jmp
shlb
ja
test
cmp
adc
outsl
adcl
lret
mov
push
int
or
dec
dec
mov
cwtl
in
fisubrl
adc
aad
test
aam
lods
dec
pushf
adc
cltd
subl
xor
mulb
lret
inc
arpl
mov
icebp
cmpsl
adc
loopne
mov
out
aas
pop
adc
test
jbe
stc
push
mov
jno
push
mov
xchg
sar
cmp
sbb
dec
mov
ret
scas
add
leave
movsl
mov
sub
pushf
out
inc
pop
or
cli
pop
sti
test
fnstenv
loop
mov
shrb
aad
sbb
push
mov
inc
mov
pop
mov
insl
in
insl
inc
sahf
aaa
outsl
xlat
add
enter
test
pop
sbb
les
dec
xlat
ret
adc
or
arpl
xor
inc
fidivrl
cwtl
test
cmc
or
lods
mov
test
dec
pop
sub
dec
fbld
dec
icebp
test
out
in
pop
test
push
mov
dec
mov
or
mov
outsb
mov
xchg
dec
cs
mov
jne
mov
aas
push
pop
dec
and
xchg
xor
inc
mov
ret
nop
fsubl
jl
cltd
mov
rcrb
maskmovq
divl
adc
jp
popf
mov
stos
mov
xor
outsb
jne
adc
xchg
rclb
sub
dec
sub
pop
xchg
ret
jl
inc
aaa
cmp
scas
mov
jb
iret
leave
mov
mov
dec
xchg
imul
push
outsl
sub
dec
fidivs
lcallw
pop
cmc
xor
sbb
cli
cmpsb
mov
sub
xchg
outsb
cmp
aas
sbb
in
sub
mov
mov
pop
mov
mov
in
es
lret
mov
fsubrs
daa
inc
sbb
push
div
add
test
aaa
hlt
or
push
sub
add
cltd
pushf
mov
xchg
fwait
in
js
aam
mov
pop
add
pusha
dec
int3
clc
jb
sbb
hlt
jno
and
pop
fwait
xorb
dec
jb
sbb
push
out
mov
mov
push
stos
pop
test
mov
cmp
xchg
pop
push
push
xchg
lods
gs
aad
jge
pusha
int
mov
imulb
cmp
cs
mov
pusha
dec
jg
jno
push
ja
lods
mov
xchg
out
adc
daa
lahf
or
jo
mov
aam
push
lods
jno
sub
push
cmp
cmp
je
addr16
push
aad
and
mov
in
add
in
cld
fcmovnu
xor
inc
mov
bound
lock
xchg
push
push
mov
les
addl
sub
xlat
mov
mov
mov
ja
ja
fbstp
xchg
inc
xor
sbb
dec
lahf
add
and
push
push
jo
push
nop
fisubs
add
faddp
cmp
inc
stc
sub
insl
cmc
test
mov
dec
fnsave
fs
test
into
push
and
and
stos
aaa
add
pop
jmp
pop
cmp
pop
out
xchg
mov
lahf
jns
xchg
out
call
cltd
sbb
shlb
jl
sub
pop
push
inc
imul
pop
mov
sub
cmpsb
test
inc
mov
push
pop
adc
adc
out
jbe
int
mov
mov
je
aad
ds
pop
cmp
push
fnsave
push
cmp
jecxz
loopne
mov
jae
add
mov
sub
cmpsb
cmp
pop
daa
mov
mov
inc
fisubl
lock
sarb
in
and
popf
imul
aas
ljmp
cmp
sahf
stos
pop
or
or
gs
mov
ljmp
aaa
sbb
push
cltd
push
daa
or
jns
das
xorl
pop
cld
xchg
and
cmp
scas
mov
xchg
sbb
dec
loopne
in
enter
xor
psubw
push
or
jb
lock
mov
push
mov
xchg
sti
out
in
jg
in
movsl
out
jns
je
dec
mov
insb
cmp
mov
jns
adc
mov
in
jno
push
in
mov
fcompl
pop
test
pop
push
xor
mov
mov
mov
pop
sarb
pop
pusha
insb
sbb
pop
lock
insb
pop
adc
mov
and
out
ret
cld
mov
div
sti
jg
mov
lret
mov
lret
xchg
dec
adc
loopne
incb
xor
sub
jo
push
fistpll
mov
and
push
sbb
mov
cwtl
es
ret
push
je
aam
and
outsl
rolb
xorb
hlt
pop
xor
mov
sbb
lcall
push
cs
lods
out
je
stos
out
andb
cmc
insl
and
mov
push
mov
in
pusha
xchg
jge
mov
jl
cmp
inc
push
in
ret
inc
rcrb
mov
add
das
pop
cmpb
xchg
daa
insl
bound
mov
lret
mov
subb
jl
inc
lds
jmp
imull
iret
cmp
in
jmp
lds
add
lcall
dec
lds
int3
das
mulb
fcmove
cmp
push
cmp
xor
lahf
daa
test
cmp
dec
imul
lods
outsb
dec
cwtl
fwait
pop
fldt
addr16
add
dec
pop
cli
xchg
out
lcall
testl
cmp
sub
xor
sarb
pop
add
ret
or
dec
sbb
cld
call
fisubs
lret
daa
pop
mov
mov
call
repnz
jg
pop
rol
sbb
pop
mov
xchg
jns
mov
ljmp
es
push
sub
xchg
pushf
fdivs
push
mov
aam
ret
cld
xchg
in
leave
mov
insb
clc
mov
in
ret
mov
jle
mov
into
iret
jne
xor
xor
jp
int
mov
mov
lret
jecxz
daa
cmpsb
push
jg
inc
jmp
cmp
pop
cltd
clc
jle
xlat
mov
push
lea
push
and
out
sarb
or
lahf
pop
jns
fcoml
fisubs
push
sahf
fsubl
mov
das
sub
jecxz
into
cmp
dec
mov
loop
push
icebp
in
xor
inc
dec
jae
outsl
pop
mov
adc
into
outsl
gs
push
aam
inc
cmp
enter
inc
stc
lods
xchg
rcll
stos
or
push
push
jecxz
fimuls
jge
xchg
outsl
pusha
aaa
push
fisttpll
js
cmpl
in
ds
push
out
aas
push
arpl
outsl
and
lcall
pop
add
push
lds
mov
or
cmp
iret
push
jp
mov
shl
imul
pop
shll
push
fsubrp
pop
lcall
inc
bnd
movsl
mov
shll
nop
inc
imul
out
or
nop
mov
add
add
into
js
xor
sarb
das
mov
adc
push
rolb
sub
inc
and
in
pusha
pop
or
mov
fcomi
or
dec
divb
adc
inc
mov
or
and
pop
frstor
jecxz
negb
jae
and
add
hlt
sahf
popf
ss
je
push
filds
shlb
push
mov
jae
cmp
mov
gs
jp
sub
and
test
mov
dec
arpl
xor
arpl
mov
xchg
insb
pop
shll
xor
xor
test
clc
pop
jns
xchg
int3
shlb
dec
and
mov
inc
jne
jns
mov
in
ja
ds
xchg
push
ljmp
sbb
push
incb
cmp
pop
out
xor
adc
rorl
test
xchg
sub
mov
push
sysret
sub
pushf
loope
js
push
scas
hlt
jbe,pt
mov
lea
lcall
out
push
popf
pop
outsl
mov
arpl
ret
push
popa
pop
sub
inc
jmp
or
pop
cmp
pop
push
mov
mov
sbb
js
push
popf
pop
pop
xchg
das
icebp
inc
jnp
dec
sbb
push
movsb
imul
adc
insb
movsb
sbb
shrl
shll
cpuid
adc
int
fsubrp
mov
hlt
les
out
dec
xchg
mov
sub
scas
dec
push
mov
xchg
cmp
sbb
push
xchg
mov
fxch
xchg
push
mov
cmpsb
cli
in
jno
pop
jmp
in
in
sbb
inc
nop
pmullw
xchg
aam
popa
pop
outsb
sbb
lahf
pop
decb
js
cmp
and
sbb
mov
add
div
ljmp
stos
or
fsubl
jg
jne
or
sahf
js
cmp
pushf
or
and
push
jno
fbstp
jns
lahf
movsb
jmp
xchg
jp
shl
sbb
dec
out
sub
popl
jbe
pop
test
dec
xchg
mov
scas
lret
das
ds
xchg
jmp
scas
sahf
cmpsb
mov
icebp
inc
add
subb
pop
scas
adc
ret
jmp
movsb
sub
xchg
mov
xlat
shll
xchg
inc
data16
cs
aad
loop
cld
sub
xor
cltd
mov
xor
pop
inc
xor
inc
jno
mov
in
popa
cmc
pop
outsb
ds
fisttps
and
sbb
pop
mov
faddl
xchg
cld
or
sbb
push
call
push
out
mov
jne
test
dec
jecxz
dec
jp
mov
add
mov
adc
insl
in
jg
xchg
xor
in
mov
mov
pop
test
gs
mov
mov
test
mov
outsb
dec
and
adc
cmp
fs
fistl
cmp
test
mov
xor
mov
jg
xor
sti
clc
and
lcall
mov
jo
nopl
mov
ljmp
scas
xchg
loopne
and
or
or
cmc
in
aad
sub
xchg
push
fadds
add
xor
enter
inc
cmp
xchg
sub
add
cmp
or
pop
mov
cld
add
aaa
xchg
inc
mov
es
loop
cmp
inc
dec
dec
movsb
and
js
jns
adc
loope
jbe
subl
sarl
mov
jnp
push
inc
out
cmp
int3
test
hlt
xchg
ret
xchg
cltd
arpl
lcall
pop
and
mov
das
push
enter
mov
ss
test
ret
outsb
fnstsw
sub
sub
jns
lods
loopne
mull
mov
push
and
aaa
xchg
mov
insl
push
movsb
pop
cmpsb
adc
shlb
repnz
adc
outsb
mov
out
in
dec
std
pop
mov
cmpl
adc
nop
jb
adc
sub
int3
sub
idivb
fidivrl
fcoms
jl
ljmp
xchg
push
test
lea
in
aas
roll
sub
xor
fdivrl
mov
in
push
orb
sbb
sub
mov
ret
adc
rcr
test
xchg
fnstenv
nop
stos
outsl
mov
mov
xor
int
jmp
aad
andb
cmc
adc
xchg
dec
mov
daa
jp
insl
rol
pusha
jecxz
push
cmp
adc
fbstp
jns
notl
gs
mov
sbb
pop
in
insl
push
sbb
or
or
ss
jae
mov
test
test
xor
hlt
loope
hlt
subl
fdivrs
leave
add
dec
pop
out
sub
or
mov
movsl
cli
popa
mov
call
roll
movsb
pushf
jg
xor
cmpsl
lock
push
xchg
xor
add
dec
push
jmp
fisttps
mov
bound
add
push
push
push
fnstcw
add
fists
cmp
iret
loop
loopne
jb
mov
jnp
insl
jne
imul
test
push
add
push
add
call
loopne
mov
sub
pop
mov
sbb
or
pop
sub
cmc
cmp
into
xchg
adc
addb
stos
bound
jmp
icebp
leave
jle
or
ds
xor
push
fidivrs
jo
sbb
xor
mov
imul
roll
sub
nop
sti
adc
bound
ja
das
mov
add
pop
and
out
mov
xor
movl
cltd
pop
mov
outsb
xchg
mov
cltd
lock
iret
dec
cli
adc
lods
or
inc
dec
arpl
push
push
push
cmp
push
and
shlb
jbe
and
sub
std
xchg
nop
add
in
sub
test
adc
out
pop
pop
jmp
add
push
in
jae
push
lods
shrl
add
fs
ljmp
rorb
adcb
adc
fwait
into
push
loop
xor
mov
push
inc
push
popf
jmp
fmulp
rcrl
adc
rorb
testb
jmp
pop
sahf
pop
xor
sbb
mov
sub
lahf
adc
repnz
mov
into
pop
iret
push
jo
fs
push
dec
add
in
popl
stc
roll
or
mov
dec
inc
cmp
sub
or
aas
sub
xlat
mov
shlb
imul
pushf
pop
cvtpi2ps
and
xchg
or
aad
and
sbb
aam
mov
loop
or
es
ja
lock
sbb
and
ret
mov
jbe
out
xchg
jge
sbb
jmp
pop
and
test
push
jl
out
enter
fsts
into
xchg
hlt
pop
mov
sub
jbe
les
push
mov
inc
mov
jp
xchg
stc
pop
loopne
sub
jb
sub
or
sahf
and
daa
int3
pusha
push
adc
xchg
inc
pop
dec
scas
jmp
stos
loop
mov
mov
call
lea
mov
insl
xchg
hlt
or
mov
jbe
adc
pop
sbb
push
sub
mov
lret
shrl
arpl
cmpsl
ficomps
movsl
xor
jbe
xor
lcall
lret
ret
cmpsb
mov
fwait
lret
jl
cli
adc
and
push
pop
sbb
and
aad
adc
loop
mov
cmpsl
fstpt
push
arpl
cmp
mov
xchg
and
jb
mov
rcrl
xor
sbb
push
pop
mov
aam
fdivr
enter
stos
fnstenvs
bound
rclb
cltd
loop
and
leave
pop
add
shld
cs
lock
test
push
inc
jge
ficompl
mov
xchg
lret
imul
movsl
mov
sub
dec
add
or
fistpll
das
pop
sarl
xor
pop
clc
jo
mov
int3
xchg
xlat
dec
or
xor
and
dec
add
arpl
dec
mov
loopne
leave
clc
push
inc
mov
mov
sub
pop
mov
outsb
jge
imul
dec
imul
lahf
cmp
push
outsb
out
jge
jae
lcall
icebp
and
leave
aad
cmp
into
and
lock
clc
xor
cmpsb
cltd
adc
cmp
or
xor
xor
mov
xor
stc
adc
imul
xchg
xor
add
cmp
fisubrs
fdivrs
cmp
adc
ret
mov
mov
nop
push
jns
or
sbb
es
inc
add
mov
icebp
jmp
dec
ss
icebp
stos
aad
outsb
jp
sbb
pop
fcmovb
push
inc
mov
inc
outsl
out
push
testl
xchg
fidivrl
test
ds
daa
cmpsl
add
cmpsb
jne
xor
inc
daa
xchg
sahf
int3
mov
push
push
pusha
push
pop
xor
mov
aaa
lock
xor
add
adc
adc
pop
test
xchg
nop
mov
outsl
jl
mov
lds
pop
ret
outsl
pop
lods
popf
outsl
rorb
iret
aam
dec
in
pop
mov
sbb
push
jbe
iret
sbb
and
add
movsl
mov
nop
mov
into
enter
das
xor
ss
jmp
pop
fwait
movsl
cs
scas
mov
cs
mov
push
sbbb
sub
lds
jg
lcall
cmp
fildl
jmp
mov
push
xor
sub
imul
adc
out
fimull
je
mov
cmp
das
outsl
mov
sub
and
jb
push
sti
adc
ss
jns
sbb
imulb
push
enter
add
dec
ja
sub
int
and
dec
je
inc
sub
nop
test
gs
in
mov
or
mov
pop
cmpsl
hlt
pop
xor
mov
adc
add
jb
xor
fs
ret
divl
fldenv
sub
imull
arpl
stos
sub
pop
pop
lahf
mov
mov
scas
or
std
and
lcall
mov
stc
jne
mov
push
call
arpl
dec
roll
popa
sbb
pop
lahf
insb
add
xchg
sbb
push
jecxz
inc
test
jns
mov
cltd
test
ljmp
mov
sbb
cwtl
push
mov
fstps
jne
stos
sti
sub
xor
sub
ficomps
xorl
mov
jo
int
pop
mov
into
arpl
and
adc
pop
jp
push
xlat
movsl
scas
sbb
enter
and
sub
scas
xor
adcl
daa
fsubrp
popf
iret
ja
push
std
test
mov
inc
insb
or
mov
int
out
sbb
and
mov
push
push
xchg
popf
jnp
jp
out
in
out
arpl
ret
insb
jne
jmp
mov
push
loope
inc
loop
sub
mov
add
out
add
mov
jmp
loopne
add
enter
adc
daa
stos
jbe
adc
mov
and
sbb
push
inc
rcrb
or
cmpsl
mov
push
jge
adc
hlt
pop
out
sahf
movhps
sahf
mov
inc
repz
or
jae
xchg
push
push
clc
test
mov
pop
ds
adc
sbb
stos
mov
and
jg
bnd
pop
nop
lea
pop
notb
inc
jo
or
ds
xchg
pop
decb
scas
cmpsb
mov
add
outsb
pop
inc
mov
dec
xorb
fisubrs
jge
imul
sbb
pop
ds
mov
cmp
lcall
xchg
jge
sbb
mov
jge
xor
mov
lret
cli
jmp
iret
cltd
jnp
out
loope
es
add
js
stos
inc
fyl2xp1
push
scas
mov
out
or
or
mov
inc
mov
rcrb
add
aaa
inc
fnstenv
movsl
ficoml
jmp
jns
push
sbb
push
enter
mov
pop
pop
jle
jp
loop
push
je
in
data16
ja
loope
lods
fucomp
sbb
pop
mov
inc
pop
mov
outsb
push
mov
in
testl
pop
pop
cmpsl
mov
test
adc
pop
mov
jp
dec
fdivrp
fsubs
sub
adc
lahf
fcmovnu
xor
mov
add
push
xchg
inc
clc
mov
lcall
fisubrl
cmp
test
cltd
nop
fwait
xchg
out
pop
or
adc
lds
jg
fstpt
aad
mov
sbb
xor
mov
jbe
xchg
push
into
fwait
outsl
stos
inc
push
sbb
dec
inc
mov
add
leave
insl
out
sbb
pop
xchg
scas
ja
push
les
shll
stos
fdivs
push
std
enter
and
push
mov
out
or
movsb
push
pop
and
xchg
loope
lea
cmpsl
fwait
repnz
enter
popf
xchg
mov
hlt
leave
rorb
xchg
inc
fidivrs
mov
hlt
ret
pop
aad
hlt
inc
lret
sbb
lret
cmp
add
jae
lods
push
dec
inc
inc
jmp
jp
pop
inc
push
pusha
leave
inc
cmp
xchg
or
pop
sbb
ret
mov
jnp
pop
pop
fsubl
push
mov
xorb
mov
mov
test
das
jo
mov
rcr
mov
decb
fwait
ss
or
in
xor
mov
sub
rorl
test
sbb
adc
fisubrl
imull
xchg
lcall
out
cld
adc
imul
int
clc
mov
mov
lock
pop
dec
repz
and
jno
adc
dec
fisubrl
mov
fldt
cmp
jmp
jns
or
add
into
movsl
cltd
sub
ds
dec
call
in
xlat
test
xchg
lods
mov
push
sub
push
cwtl
loope
fcompl
js
xchg
fwait
ja
and
push
jns
repz
jno
push
xchg
pop
push
sub
and
ret
mov
out
jb
sti
mov
mov
jns
pop
loopne
cmp
xor
aam
mov
sub
xchg
sub
ret
cld
aam
popa
jo
jno
scas
ret
jmp
ja
fstenv
inc
jp
aam
int
mov
mov
fidivrs
mov
outsl
mov
inc
lods
mov
inc
jle
ret
lret
mov
jp
call
stos
and
xchg
gs
lods
in
lods
xchg
push
rorb
push
shlb
test
pop
sbb
jo
lcall
fwait
jg
je
in
cmpsl
pop
xchg
in
fucomp
or
ret
roll
iret
fbstp
aas
int
mov
std
mov
out
insl
or
leave
ds
jge
push
addr16
call
xchg
pop
mov
xlat
shll
inc
xchg
xchg
gs
mov
test
dec
push
lock
xlat
jecxz
addb
jo
lret
sbb
inc
shl
lea
sahf
xchg
lea
fldl
dec
inc
lods
sbb
pusha
mov
lds
add
sub
ret
mov
inc
xchg
lock
adc
mov
ret
loopne
pop
imul
in
or
mov
loopne
out
dec
ficoms
push
jnp
mov
inc
cmp
mov
mov
arpl
mov
cmp
jl
stos
sbb
test
sbbl
fwait
xorl
cmp
mov
in
stos
push
sbb
pop
mov
fstpl
jge
sub
push
jno
rorl
cmpb
lds
insl
ljmp
xor
in
add
leave
out
inc
mov
ret
add
add
push
xchg
sub
push
inc
sub
adcl
lret
aas
xchg
andb
ja
shlb
push
jl
sub
jmp
repz
fcomip
pop
push
daa
xor
adcl
stos
mov
dec
std
jle
mov
js
pop
cmc
push
leave
call
xchg
mov
xor
je
pop
aam
pop
dec
inc
xor
push
cli
xchg
add
sub
jp
ss
push
pop
shrb
fsubr
rolb
cmpsb
arpl
loope
js
jp
cmp
inc
loop
and
add
push
sub
sbb
dec
sbb
stc
xchg
add
in
in
inc
aad
movsl
jp
add
mov
cltd
pop
lods
pop
jge
mov
mov
arpl
repz
int
ss
or
mov
and
rcl
decb
push
sti
ljmp
lahf
ret
lret
es
sbb
sub
stos
xchg
aad
mov
mov
push
out
mov
push
fucomp
stos
repz
mov
arpl
sbb
sbb
ret
jne
rcl
pop
cmpsb
adc
jle
and
or
xor
pop
je
cmp
fstl
aam
mov
subl
mov
nop
cmp
mov
jbe
or
jo
rcrl
lods
jle
ljmp
xchg
das
xchg
je
ss
shl
inc
inc
loopne
outsb
and
loope
fdivs
arpl
jecxz
ret
xor
or
cmp
xchg
inc
xchg
sti
fstl
inc
xor
cmc
mov
cwtl
filds
aaa
fiaddl
jbe
mov
cmc
cmp
scas
adc
daa
imul
mov
in
mov
fisubl
sub
test
outsl
and
loopne
dec
push
pop
adc
div
push
inc
fwait
mov
out
push
dec
fwait
arpl
add
push
push
enter
ljmpw
call
mov
mov
test
sahf
fwait
insl
dec
ja
out
in
incl
xor
xlat
test
scas
mov
push
jo
mov
cmp
xchg
add
pop
lahf
xlat
mov
push
shlb
jno
call
fiaddl
insl
inc
ret
mov
repz
jbe
push
clc
in
mov
jae
adc
lret
imul
ljmp
jb
or
sbb
movsb
les
xchg
xor
rcrb
and
mov
xchg
sub
call
sub
stc
loop
cmp
or
mov
je
push
scas
xchg
sub
icebp
ds
push
sub
lret
mov
loope
adc
cmp
adc
mov
mov
nop
into
push
inc
mov
movsl
in
dec
sub
push
mov
mov
xchg
mov
cwtl
mov
push
ret
and
sti
fsts
aad
mov
xchg
pop
ret
fwait
mov
cmp
leave
push
cmp
dec
mov
dec
repnz
pop
das
xchg
cmpsl
pop
popa
jge
mov
jne
lea
xlat
xchg
add
sbb
out
xchg
jns
dec
fldl
loopne
jmp
xchg
out
jnp
shlb
outsl
adc
push
cmp
cmc
hlt
enter
and
sbb
rcrl
repz
or
mov
out
xchg
arpl
and
mov
sub
mov
test
mov
mov
jl
sbbl
mov
lods
clc
xlat
imul
mov
pop
push
enter
aad
pop
testl
cmp
clc
adc
push
cltd
pusha
dec
mov
mov
icebp
push
js
cmpsb
loope
jecxz
jb
shlb
inc
int
dec
cmpsl
xor
add
pop
add
jb
lea
test
hlt
aam
pop
cs
adc
subb
pop
xchg
movsb
imul
jbe
stos
imul
adc
mov
jae
loop
push
push
cmpb
inc
push
fwait
ret
mov
iret
fnsave
xchg
adcb
jl
xlat
and
stos
lea
sub
mov
xor
sub
cmpsl
and
inc
or
mov
leave
dec
mov
in
lcall
popf
incb
lock
pop
pop
fwait
cmp
xor
mov
into
lock
or
or
in
xlat
mov
xchg
test
scas
mov
lea
and
push
aad
enter
inc
mov
sbb
sbb
mov
jno
cmpsb
jg
stc
lods
cld
jne
pusha
xlat
jbe
ss
mov
pop
xrelease
push
adc
push
jne
frstor
mov
push
jmp
fisubrs
lahf
add
ss
loope
inc
gs
xlat
push
jno
push
dec
fdivp
sub
loop
and
popa
adc
or
push
jge
ss
mov
and
aad
sub
subl
cmp
fimull
sarl
xor
arpl
popa
outsb
sub
mov
cmpsl
push
fucom
roll
je
lods
sti
clc
inc
or
das
push
je
mov
cs
outsl
insb
mov
repz
mov
jae
lds
or
loop
rolb
and
fnstsw
push
ret
sbb
xchg
fildl
cli
fnstenv
rcll
or
push
fdivrs
pop
push
lds
hlt
fs
sahf
out
add
sub
cmp
xor
dec
xchg
aam
pop
in
dec
cwtl
shlb
mov
mov
and
jbe
insl
sub
in
mov
cmp
fbld
mov
cmp
cmp
pop
and
pop
out
mov
xor
mov
fsubl
push
test
jb
std
sub
addl
inc
jmp
movsl
or
mov
or
push
data16
inc
insl
int3
add
adc
sbb
inc
stos
lods
dec
movsl
push
test
mov
sub
mov
mov
or
iret
clc
int
cmpsl
xor
add
inc
jbe
push
ret
in
bound
adc
pusha
scas
mov
jnp
mov
jnp
aad
mov
movsl
popf
add
and
ja
xor
dec
in
push
in
mov
jb
ss
js
rclb
add
scas
repz
xor
pop
or
add
mov
out
jo
call
adc
adc
cmc
adc
ror
mov
and
jno
cmp
lock
sbb
popa
std
bound
lods
fmull
inc
cld
jnp
ds
inc
ret
adc
rep
inc
dec
leave
stc
test
fucom
push
mov
and
and
mov
rolb
das
pop
enter
ja
iret
xchg
aas
jnp
pop
jbe
mov
cmp
outsb
pop
pop
cmp
mov
dec
stc
pop
fldt
cli
sbbl
dec
std
xlat
add
ror
fiaddl
xor
fs
dec
gs
jb
or
and
outsl
cmp
inc
mov
ret
sbb
xor
and
jp
test
mov
data16
daa
xor
out
into
and
xchg
add
fmuls
jno
aad
push
pusha
cmc
inc
add
imul
push
aas
mov
mov
scas
jo
cmp
sub
dec
ljmp
gs
sti
sbbl
push
mov
xchg
rcl
or
sti
jae
sbb
xchg
cmp
sub
push
and
adc
push
in
sub
fsts
cltd
jge
mov
cmp
ljmp
sub
into
inc
jnp
mov
push
jecxz
mov
xchg
mov
pushf
mov
pop
in
cmc
dec
dec
mov
cmp
add
pop
movsb
pop
test
cmc
pop
pop
fists
push
imul
dec
pop
inc
lret
fdivl
andb
push
mov
pop
inc
repz
xor
int
sti
jp
inc
mov
cmp
movsl
lods
xchg
adc
push
test
iret
push
inc
fimull
stos
popf
adc
inc
sbb
jge
dec
mov
dec
xchg
addr16
cmp
in
pop
push
mov
int3
mov
mov
into
andb
push
push
push
xchg
ficompl
fsubl
je
mov
out
imul
aaa
popa
addl
xchg
sbb
out
dec
jns
xor
cmp
add
xchg
outsl
sub
enter
xlat
xor
fimuls
lods
stos
enter
insb
jae
fstl
push
inc
sbb
jnp
xor
shll
pop
add
out
outsb
fstl
jmp
add
sub
outsb
mov
lods
xor
jae
stos
out
jo
mov
mov
lcall
cmc
decb
fcompl
loope
push
cld
hlt
int3
push
jnp
iret
loopne
adc
cld
jnp
lret
lods
movsb
dec
xor
mov
pop
push
jl
loopne
ljmp
dec
or
xchg
out
mov
add
push
inc
pop
lods
pop
sub
sbb
and
xchg
lcall
es
sbb
mov
les
sbb
popa
gs
push
adc
std
mov
cli
mov
cmp
shll
xchg
decl
cmovl
movsb
addl
dec
sub
das
sub
adc
jbe
ftst
lret
out
sbb
lret
movsl
add
je
pop
sub
repnz
xlat
pop
in
jno
pop
inc
pushf
repnz
mov
inc
push
jns
das
mov
push
mov
arpl
pusha
subb
leave
or
mov
arpl
mov
test
sbb
and
mov
pop
xchg
cmp
popf
ret
roll
xchg
mov
bnd
loopne
test
es
addr16
addr16
xchg
int
ret
sbb
add
daa
jmp
stos
mov
addr16
repz
test
cmp
xor
ja
jge
fsubrl
lea
xor
push
lock
movsb
sbb
push
xor
xchg
clc
mov
pop
push
or
mov
adc
enter
sbb
shll
sbb
scas
test
stos
es
sbb
or
mov
data16
mul
dec
mov
sbb
nop
std
sbbb
movnti
and
and
idivl
mov
fwait
lods
add
mov
xor
test
sbb
int3
ds
dec
mov
stc
adc
mov
imulb
int3
leave
push
cmp
sbb
movsb
push
in
adc
push
in
lods
icebp
fwait
pop
scas
pop
adc
push
sbb
je
negl
movsl
sarl
ficoml
idiv
mov
mov
ljmp
sub
add
mov
idivb
arpl
repz
xchg
cmp
xchg
les
test
push
pop
add
mov
mov
sbb
stos
mov
js
dec
push
fldl
xor
sub
push
lret
push
in
pop
xchg
add
test
jb
ror
push
adc
sbb
sbb
insl
cld
loope
stc
xchg
and
xor
add
lahf
cs
jbe
notb
xchg
xchg
lea
jae
arpl
test
inc
xchg
mov
pop
repz
mov
aad
lahf
vmptrld
and
fists
outsb
jmp
rcr
jg
pop
fnsave
sti
sub
mov
dec
push
sbb
sub
and
dec
jae
insb
movsl
sub
rcrl
push
dec
lock
mov
flds
fcompl
inc
insb
popa
mov
sub
cmc
pop
mov
lods
mov
or
inc
or
mov
jno
shrl
and
mov
mov
adc
xchg
or
adc
xlat
push
add
mov
out
xchg
sti
enter
rorl
jb
mov
jno
fidivs
or
jle
ljmp
out
out
stos
sub
xor
dec
lods
jmp
jne
adc
lret
jnp
ja
loope
inc
in
cwtl
pop
sbb
mov
out
jp
loope
mov
and
ror
sar
jmp
pop
jl
cwtl
cli
in
insb
xchg
jne
or
scas
xor
cli
cwtl
push
jno
roll
pop
mov
add
lods
jne
fnstenv
loop,pt
popf
pop
push
daa
cmp
negb
jecxz
and
bound
pushf
push
lea
js
push
push
push
xchg
mov
jmp
xchg
fidivrl
mov
mov
pop
js
and
dec
movsl
cmpsb
enter
and
out
aas
out
test
lods
or
movsl
enter
shll
push
das
in
ds
fs
scas
lea
sar
mov
into
loopne,pn
push
pusha
cmp
or
outsl
add
jb
or
mov
cwtl
popa
jmp
pop
or
cmp
lret
mov
fucomp
sub
pop
flds
and
jbe
jl
fcmovnbe
inc
arpl
xor
fisubrs
jg
arpl
sub
stos
mov
dec
test
shll
sbb
jmp
add
sbb
and
pop
in
mov
jg
ret
test
mov
addr16
mov
inc
cmpb
int
inc
aas
mov
cmp
popf
mov
jnp
jb
clc
mov
adc
lret
pop
sub
in
clc
xlat
sbbl
sub
scas
jge
or
mov
stos
jbe
pop
xchg
jae
fidivs
sbb
fdivrl
and
xorl
incl
push
mov
imul
aas
jge
xchg
inc
pushf
mov
sub
cmp
js
cmc
jmp
pop
mov
vunpcklps
js
inc
adc
xor
xchg
inc
in
inc
pop
add
mov
mov
cli
push
mov
outsl
insl
xchg
lods
mov
mov
adc
into
pushf
loop
rorb
clflush
push
fsub
mov
out
mulb
xchg
xor
or
xor
pop
rcr
mov
daa
xchg
or
inc
popa
lahf
js
or
mov
dec
iret
pop
xchg
test
add
xchg
and
mov
stos
sbb
aam
int3
sti
das
cmp
xor
or
fs
sti
pushf
or
jne
dec
add
push
mov
cs
fsubs
push
mov
pop
ficomps
dec
lock
insb
pop
xchg
test
scas
clc
jae
scas
jmp
rol
aas
inc
push
sbb
leave
orl
xchg
push
repnz
jbe
xlat
gs
jno
nop
or
sub
mov
inc
pop
jmp
shr
cmpsb
mov
jmp
cmp
fbstp
ss
push
dec
bound
subb
sti
movsl
inc
ret
or
jle
test
xchg
mov
in
jns
cmp
subb
adc
sbb
mov
mov
std
gs
lret
clc
inc
out
in
hlt
xor
lock
bound
ja
pop
leave
pop
push
jl
mov
lahf
sub
lahf
addr16
and
sub
ds
jl
inc
test
push
out
pop
pop
fnstenv
aam
push
mov
dec
jo
push
pop
push
pop
clc
mov
cwtl
mov
repz
mov
sub
push
iret
dec
push
pop
push
and
fldl
mov
ja
add
adc
pop
add
xor
pop
shl
pop
stc
sbb
divl
test
xor
jae
int3
jo
mov
cmp
sub
hlt
stos
fimuls
lods
arpl
push
and
lret
and
or
dec
mov
fists
pop
loope
movsb
cltd
shll
inc
mov
sarb
gs
push
xchg
stos
adc
xchg
test
leave
sti
lcall
fs
ja
or
pop
gs
xchg
aad
popf
mov
jbe
mov
or
popa
subl
hlt
xchg
fidivrl
and
adcl
rcll
mov
pop
cmc
adc
aad
inc
movsl
or
jo
rorl
mov
or
push
add
jns
orb
rcll
cmc
jne
dec
xchg
test
add
and
jne
sbb
imul
loop
push
loope
push
out
testl
jo
or
adc
ficoml
int3
fistpll
xchg
pop
mov
push
aad
add
fsubs
xchg
mov
jp
in
or
sbb
push
les
xor
outsb
pop
and
pusha
sbb
sub
mov
cmp
jbe
jo
mov
out
sbb
push
rcrl
insl
sub
adc
pushf
pop
mov
int
icebp
addb
jne
ja
adc
sub
inc
ljmp
aaa
arpl
jp
in
xor
push
dec
jl
xor
push
mov
lret
mov
in
xor
pusha
rclb
jnp
xchg
sbb
cmp
lahf
push
add
fcoms
push
mov
sbb
incl
mov
test
push
mov
sbb
jo
inc
in
jge
sbb
fnstcw
popf
and
arpl
inc
adc
push
sbb
imul
add
int
mov
add
rorl
jecxz
mov
xchg
lcall
cmp
call
push
sbb
fldt
aaa
cltd
mov
jae
outsl
xchg
add
movsl
push
adc
adc
sbb
ja
xchg
cmp
sti
mov
in
sahf
sbb
xchg
pop
xchg
jnp
or
leave
lods
imul
push
in
sbb
in
stos
cmp
add
push
push
sub
in
pop
outsl
aam
or
lock
xor
iret
enter
mov
in
and
xor
out
xor
adc
aas
sub
xlat
jge
outsb
mov
jecxz
and
test
adc
fsub
or
push
call
sbb
jae
scas
jo
push
jns
jle
lock
lret
dec
cs
insb
push
pushf
repnz
lret
insb
loope
lods
and
jnp
mov
shrl
jecxz
mov
xor
fnstenv
mov
out
cld
sbb
add
mov
jno
xchg
cmp
xchg
mov
fwait
and
mov
packssdw
lcall
cli
sbb
or
call
jnp
aas
xchg
lcall
lea
addb
fistl
and
ror
popa
mov
in
fdivs
ret
jecxz
aam
xor
or
xchg
jg
jb
aad
inc
out
outsl
cs
push
jge
adc
push
pop
cmpsb
jmp
mov
dec
push
xchg
push
jne
rcrl
push
xchg
xor
iret
sti
insb
push
and
cli
jg
jl
inc
mov
sub
inc
sbb
mov
movl
fwait
pop
dec
es
push
sub
jnp
cltd
jb
push
gs
and
xchg
inc
pop
pushf
mov
or
pop
fisttpll
sti
out
iret
mov
jle
imul
pop
rcr
cmp
addb
sahf
mov
jecxz
mov
rorl
das
pop
mov
out
push
mov
pop
shll
fcmovbe
mov
mov
icebp
xchg
mov
fucomi
dec
cmp
ret
lcall
and
out
imul
adc
or
orb
push
push
sub
iret
and
mov
inc
fisubrs
test
sub
jbe
out
hlt
shlb
adc
adc
test
xchg
or
dec
test
add
mov
adc
fldl
xchg
xchg
sub
pop
push
je
lds
inc
les
inc
lret
ret
outsb
sub
or
cld
mov
cmpsl
mov
mov
mov
adcl
or
dec
mov
sti
or
inc
ficompl
sbb
pop
push
repnz
pop
sahf
sub
jg
push
cld
push
xor
je
sub
fisttpl
add
or
imul
mov
pop
aad
or
jp
test
mov
mov
cltd
mov
test
loope
js
jne
mov
lahf
mov
sub
jne
pop
push
movswl
push
jno
jns
and
pop
loop
inc
int
bound
testl
add
dec
cmp
pop
mov
out
ficomps
fisttpl
ljmp
es
out
xchg
fdivs
inc
daa
jge
sub
xchg
sub
test
jo
mov
or
push
in
xor
loope
dec
mov
cmpb
test
sbb
adc
cmp
jns
adc
cmp
enter
mov
add
call
jge
ss
insb
sbb
clc
test
rcl
xchg
ret
into
lea
lea
pop
xchg
cmp
outsl
in
cmpsb
pop
imul
cmpsl
mov
push
adc
pop
dec
jge
sub
push
push
fwait
in
mov
push
int3
out
movsb
jbe
andl
mov
mov
arpl
cmp
push
aad
dec
ss
leave
outsb
jg
insb
je
clc
fs
add
or
sub
daa
xchg
xor
adc
mov
inc
jae
cld
or
push
sub
cmp
dec
pushf
int3
lods
jecxz
dec
mov
push
popa
mov
xlat
popa
pusha
add
xchg
in
xchg
xchg
pop
dec
xor
std
cltd
call
pop
jo
jl
or
sbb
clc
stos
ret
inc
xchg
mov
and
cmpsb
js
jne
push
jmp
ds
add
cmp
aam
push
dec
gs
out
dec
fldcw
std
add
inc
pop
sbb
and
dec
sub
arpl
xchg
push
lcall
aaa
neg
jge
inc
loop
mov
inc
into
push
dec
add
cmp
popf
subb
inc
sbb
and
or
jbe
subl
xchg
mov
movsb
xor
dec
dec
bound
and
push
std
fstp
add
jle
jbe
mov
lds
es
ret
push
xor
popf
fbstp
out
ret
add
insl
std
pop
cld
cmp
lret
inc
jnp
rcll
jg
jnp
test
dec
gs
mov
xchg
or
mov
fmull
jp
push
mov
lret
cmpb
loopne
mov
popf
and
push
fwait
cmc
sti
fwait
sbbl
decb
or
icebp
jecxz
out
pop
push
dec
cmp
cmp
mov
inc
adc
xchg
sbb
sbb
inc
xchg
sub
cmp
icebp
test
xlat
popf
mov
pop
jecxz
imul
xor
shrl
or
ljmp
add
dec
xlat
xor
lods
rcll
pushf
inc
jno
nop
dec
fcoms
push
mov
iret
test
pop
into
mov
jne
repnz
test
adc
loopne
std
jno
out
and
jecxz
jl
out
ret
mov
add
scas
pop
mov
xor
xchg
inc
jmp
sbb
jl
lds
bound
shll
out
movsb
inc
addr16
jo
xchg
inc
bound
fisttpll
aad
test
cld
test
or
sbb
das
loop
jne
jg
mov
xor
mov
ljmp
jmp
and
ss
adc
push
aaa
sub
fnstcw
enter
xor
mov
mov
sub
xor
fimuls
cmpb
jmp
add
rcrl
add
push
scas
or
mov
jmp
mov
insb
fildll
repz
push
sub
stos
in
out
or
jg
call
jecxz
jmp
gs
sbbl
mov
cs
jae
add
add
xchg
outsb
mov
loop
stos
ds
push
jnp
daa
leave
or
loop
push
je
ss
mov
movsb
cwtl
inc
inc
adc
shll
xchg
xchg
cmpsb
pop
xchg
andl
les
and
fildl
hlt
or
cmp
and
sarl
and
inc
dec
xchg
adc
xchg
iret
rorl
add
out
mov
inc
testl
jo
int
int
es
icebp
mov
and
pop
ss
popa
fwait
dec
lret
out
xchg
mov
lods
mov
scas
and
mov
push
push
mov
imul
lcall
test
movsb
call
subb
stc
repnz
push
fcompl
push
add
arpl
or
xor
lods
lcall
or
mov
cwtl
cmp
cmp
push
ds
xor
cmp
les
fisttpll
fnsetpm(287
jo
mov
out
push
xchg
js
in
lods
jge
rcr
test
lahf
sub
outsb
adc
xchg
call
loopne
pop
and
mov
inc
xor
inc
and
mov
push
and
dec
outsb
sbb
adc
lods
out
ds
outsl
mov
lods
test
jno
shrl
sub
rcrl
inc
cmpsl
mov
movsl
inc
inc
shrl
jne
xor
fsubl
dec
dec
gs
psrlq
mov
bswap
ret
adc
hlt
out
xchg
and
sub
inc
pop
jmp
cmp
cmp
pop
dec
jp
pushf
rorb
xchg
js
arpl
fidivl
data16
add
roll
adc
and
sbb
enter
popa
gs
fs
push
mov
shll
xor
aam
adc
mov
cwtl
hlt
xchg
fsubrp
mov
and
xchg
jns,pt
pop
adc
cmp
js
push
xchg
clc
cmp
jle
push
lret
dec
notl
mov
notb
adc
inc
ffreep
pop
je
or
cmp
fdivrs
mov
pop
scas
push
mov
cld
orl
icebp
sahf
cmpsb
repnz
shl
push
mov
mov
clc
push
mov
nop
or
pop
adc
mov
pop
dec
mov
mov
pusha
lea
out
mov
ja
andl
mov
and
xlat
adc
mov
sub
jg
mov
add
pushf
jns
push
push
or
test
lods
mov
jns
jecxz
cmp
or
mov
inc
rcrb
icebp
lret
dec
popf
pop
or
or
or
cmp
pop
xor
xlat
mov
gs
fimull
add
fstl
rorl
icebp
mov
neg
cmp
mov
rcr
or
lea
fisttps
sti
mov
test
mov
aaa
pop
xchg
test
xor
test
mov
push
les
fnstcw
fstl
sub
sbb
mov
pop
jnp
aas
pop
outsb
gs
outsl
inc
dec
int3
dec
lcall
rorl
ljmp
dec
xchg
xchg
in
xchg
mov
mov
sub
push
inc
adcb
loopne
dec
push
divl
movsb
xchg
clc
sti
int3
push
pop
inc
push
mov
mov
dec
int3
mov
mov
in
lcall
and
mov
push
mov
mov
xchg
mov
int
cmpsl
pop
cmp
dec
int
mov
out
mov
mov
inc
mov
add
cmc
xchg
jmp
pop
repz
pop
lcall
dec
mov
inc
pause
pop
int3
cltd
lods
dec
push
loope
ret
cmp
cmp
cli
in
pop
inc
rclb
xchg
xor
pop
jge
cmp
addr16
scas
inc
fmull
mov
push
add
into
fwait
test
ret
cld
shlb
dec
pop
jp
cld
shll
jo
aas
pop
sbb
pop
imul
sub
push
push
shl
fisttpl
ret
lret
out
pusha
jbe
push
shufps
jmp
lahf
and
mov
add
fmulp
test
loope
orb
stos
aam
dec
mov
mov
repz
mov
repz
loopne
fsub
dec
mov
inc
sbb
int
mov
lcall
jecxz
fisubrs
sub
pop
xchg
ljmp
incb
dec
or
insb
fcmovnu
adc
cwtl
js
or
xchg
ja
mov
and
test
push
mov
in
cmp
sub
xor
test
or
stos
ds
sbb
inc
cld
fwait
mov
cli
dec
pop
inc
or
pusha
xchg
icebp
add
fdivp
jmp
and
jmp
fsts
aad
mov
dec
cltd
call
push
push
test
and
imul
xchg
movl
inc
add
jle
xchg
mov
lods
mov
push
pop
push
xchg
mov
clc
adc
cmc
out
in
lahf
jge
stos
pop
xchg
xor
aad
sbb
cld
test
xor
mov
xchg
fstpt
insb
dec
adc
cmp
fimuls
mov
push
mov
test
push
sub
jg
mov
fsubr
movaps
fistpl
sti
popa
mov
mov
enter
mov
mov
aad
es
sbb
mov
ja
lcall
shr
loopne
cs
mov
dec
cli
cmpsl
adcl
xchg
roll
mov
andb
lock
pop
icebp
mov
cmp
or
int
mov
daa
pop
sarl
or
cmc
rorl
fstpt
mov
sti
mov
fldenv
fsubp
es
xor
clc
push
lret
sbb
fistpll
jne
out
repz
adc
cmpb
subb
mov
cmpb
fildll
mov
loope
lods
fldlg2
call
add
xlat
push
popf
pop
loopne
push
push
lods
cs
push
aam
xchg
jg
add
dec
xor
jno
mov
sbb
sub
pushf
imul
cs
fdivl
push
jl
lcall
scas
jne
mov
sub
nop
fildll
cmpl
sbb
cmp
ffreep
aaa
aad
lods
inc
pop
bound
movsb
xor
popa
cltd
pop
fwait
push
mov
cmp
sbb
mov
loope,pn
sti
cmp
push
mov
adc
popa
sbb
loopne
mov
dec
imul
push
cmp
and
out
testb
sbb
popa
int3
cld
xor
test
jmp
xchg
mov
jno
dec
in
and
test
aam
mov
xchg
jns
adc
inc
mov
add
test
xchg
xchg
pop
movsl
or
fwait
pop
rcrl
fbld
pop
imul
test
sbb
mov
in
pusha
cmp
and
rcrb
in
icebp
aaa
fistpll
push
mov
outsl
insl
cmpsl
fmuls
sub
jp
ljmp
icebp
add
enter
adc
scas
jns
mov
dec
mov
gs
push
dec
sub
and
repz
popf
das
rorb
repnz
dec
insb
test
pop
in
adc
push
roll
pop
in
push
lret
fnsave
dec
cmp
xchg
add
adc
sbb
add
dec
orb
inc
push
inc
inc
xor
daa
ret
sti
sbb
sbb
xor
jl
add
hlt
mov
aam
mov
test
sbbb
jno
or
and
xchg
mov
mov
sbb
leave
push
sub
or
mov
ljmp
das
ds
pop
mul
adc
decl
stos
test
popf
icebp
jb
mov
xchg
imul
loopne
mov
jb
dec
xor
aaa
sbb
leave
ja
loop
jecxz
inc
jle
cmp
mov
or
dec
ljmp
in
test
cmp
pop
or
adc
mov
icebp
xchg
xor
mov
adc
push
adc
jno
gs
into
mov
mov
lret
xor
inc
sub
imul
je
in
jg
pop
mov
mov
add
sbb
iret
out
je
aad
out
push
int
out
inc
mov
shlb
lret
add
push
xor
dec
pusha
inc
rcll
scas
dec
loop
jns
aas
and
xchg
jne
out
xorb
aaa
les
ja
jg
cmpsb
dec
and
test
xor
cmc
lods
dec
push
shr
aam
ret
out
inc
mov
xchg
sub
push
cmc
pop
or
push
lea
jle
sbb
outsb
out
pop
ror
jno
stc
cmp
aad
pop
push
aam
mov
popa
jecxz
xchg
mov
push
cs
and
pop
mov
cmp
pop
mov
leave
fs
mov
push
or
push
jnp
cltd
jp
xor
call
pop
movsw
addr16
outsb
orb
out
mov
mov
call
loopne
lock
nop
add
out
push
xor
and
xchg
xor
jle
cmp
lret
das
jae
xor
mov
hlt
in
test
xchg
xchg
cmpsb
sub
bound
jno
push
mov
xchg
inc
in
gs
cmp
movsb
push
mov
sbb
sub
jo
xor
dec
and
cmpl
cmc
jae
imul
jae
rcll
out
jbe
and
xor
ljmp
mov
mov
out
out
pop
into
pop
xchg
pop
daa
imul
lods
jae
ss
or
pop
mov
xchg
loope
das
xorb
dec
pop
sbb
xchg
push
mov
rcll
cs
pusha
jmp
inc
xor
iret
xlat
xchg
jp
mov
push
and
push
jge
adc
mov
sti
loope
cmp
lds
xchg
and
xchg
out
xlat
sub
mov
mov
lret
pop
fnstsw
icebp
xchg
xchg
sbb
mov
dec
mov
xlat
idiv
sub
push
mov
fdivs
xorb
stos
outsl
xor
sbb
xor
dec
mov
jno
fs
nop
dec
cmc
aam
jne
pop
lret
jg
pop
sahf
mov
sbb
negl
mov
out
and
cmpsb
cmpsb
add
xlat
fcmove
mov
add
outsl
mov
mov
das
stos
push
ja
push
jno
aaa
push
mov
dec
ja
dec
vshufps
test
int3
push
cmp
xchg
arpl
test
mov
adc
lds
clc
popf
aaa
jbe
sar
fstp
dec
icebp
je
or
scas
pushf
push
lret
cmp
xchg
add
mov
cmp
push
ljmp
xor
int
xchg
hlt
cmp
je
fwait
rcrb
mov
cli
fists
mov
clc
mov
add
pop
inc
fyl2xp1
out
sub
push
cmp
std
mov
les
adc
push
repnz
rol
ljmp
outsb
mov
xchg
test
divb
in
add
and
cltd
inc
test
xlat
fst
mov
or
adc
xor
insb
sbb
fistl
sbb
fs
jbe
mov
pop
add
mov
data16
loope
mov
test
jne
leave
sbb
ljmp
popf
je
js
jecxz
aam
mov
arpl
mov
jecxz
dec
lea
mov
dec
add
fisttps
daa
scas
test
imul
or
mov
test
push
sbb
mov
dec
cmp
scas
mov
and
jecxz
cmp
subl
ja
xor
fidivrl
dec
xchg
rolb
pop
adc
je
pop
movsb
dec
pushf
daa
fisttpll
enter
dec
dec
dec
data16
push
into
mov
nop
push
inc
inc
jmp
adc
mov
jge
xor
cmpl
adc
cmp
int3
push
fs
push
outsl
or
in
inc
mov
cmp
xor
or
fsubl
xchg
cmp
lcall
icebp
sub
leave
xchg
stos
mov
fimuls
sbb
xchg
int3
sbb
sarb
dec
jecxz
clc
cmp
inc
repnz
mov
stos
mov
insb
push
and
ss
xchg
dec
call
xchg
ret
cmp
and
pop
mov
mov
cmp
add
cmpb
push
inc
cmpsl
pop
cmpb
hlt
and
or
jmp
aad
xchg
loopne
mov
bound
out
jmp
jno
in
pop
inc
cmp
pop
dec
jns
call
mov
in
out
inc
es
mov
loop
sub
addr16
scas
out
stos
lods
dec
jne
mov
xor
iret
mov
inc
xchg
adc
cmp
into
js
mov
pop
bound
ret
nop
sbb
pop
in
pop
stc
push
rorb
mov
scas
and
mov
in
mov
popa
and
xor
fidivl
sbb
and
dec
lahf
dec
sub
pop
cli
add
sbb
js
aam
sbb
lds
push
stos
mov
mov
or
ds
mov
xor
push
adc
jecxz
arpl
out
mov
enter
pop
pushf
push
in
cld
and
add
nop
decl
xor
loope
mov
ja
sub
xor
daa
xor
xchg
nop
sub
psubq
dec
cmpsb
outsl
sbb
push
jne
scas
jle
jecxz
push
lcall
ds
imulb
imul
dec
push
inc
add
jns
pop
int
stos
stos
andb
push
cmp
pop
dec
pop
gs
xchg
xor
push
xchg
bswap
cmp
setnp
lods
out
lods
jae
fnstenv
ljmp
in
cmpsb
xor
jne
test
outsl
mov
cltd
and
mov
loopne
out
les
mov
cld
into
inc
std
xchg
push
das
push
adc
add
sbb
stos
mov
test
adc
or
pop
pop
xchg
repnz
fisubl
hlt
mov
inc
insl
cmpl
pop
jns
or
incl
mov
pop
pop
iret
das
push
dec
es
lret
faddl
cmp
pop
dec
popf
mov
hlt
adcb
inc
sbb
test
lea
test
cmc
cwtl
aas
jns
xchg
xlat
imul
lods
inc
push
add
push
js
mov
outsl
adc
mov
insl
mov
rol
sub
lret
pop
pop
add
inc
ret
jbe
sti
stc
setbe
xorb
or
stc
cmp
mov
scas
pushf
fs
cmpsl
pop
aad
push
sbb
xorb
adc
call
xchg
xor
scas
fbld
sub
cli
ror
dec
es
int
stos
mov
pop
subl
dec
cltd
mov
ret
ljmp
mov
sbb
push
push
cmpsl
dec
into
shl
js
mov
push
inc
jl
cmpsl
cmp
mov
cmc
sub
daa
or
lret
shlb
xchg
fdivr
add
call
shll
mov
es
mov
pop
jl
mov
inc
bound
pop
or
subb
jns
jmp
pop
or
mov
js
jecxz
aam
mov
jle
push
hlt
test
add
sub
jnp
call
nop
adc
sahf
inc
out
xorb
ficomps
mov
in
inc
fiadds
sub
mov
mov
scas
adc
sub
loopne
je
push
idivb
adc
pop
cli
out
cwtl
inc
ja
lds
push
sub
movsl
lcall
popa
test
add
pop
lcall
push
mov
dec
jnp
and
jge
mov
add
repnz
int3
jecxz
daa
cmp
ja
cli
mov
stos
sti
adc
testl
cli
out
jl
push
sbbb
inc
lock
rclb
int
lods
aaa
inc
dec
test
jp
or
sti
inc
mov
pop
sub
pop
jb
inc
xor
add
jge
jle
xor
cwtl
adc
repz
mov
push
jecxz
xchg
jg
rorb
fwait
xchg
cwtl
stos
add
jnp
shrb
stos
and
xchg
sbb
into
cmp
mov
sub
fiadds
push
pop
sbb
insb
or
movsbl
adc
push
shll
roll
mov
dec
mov
mul
icebp
cltd
mov
cltd
add
add
pop
ljmp
sub
daa
sbb
xchg
xor
sbb
push
pop
adc
sti
xor
in
aaa
out
lret
gs
loope
cmp
mov
mov
pop
faddl
popf
lret
mov
cmp
pop
and
bound
sbbb
and
mov
sub
jl
mov
adc
dec
loope
push
xor
inc
arpl
fistps
mov
ret
xorb
test
dec
jle
inc
pop
add
imul
cmp
out
push
mov
jecxz
mov
jbe
fsave
js
stos
and
push
mov
inc
scas
pop
add
xlat
fcmovbe
push
adc
js
dec
fdivl
or
into
mov
xor
fisttpl
add
and
test
stc
dec
jle
jb
in
jnp
insb
in
mov
push
pushf
repz
push
int
or
loopne
dec
cmp
out
pmullw
popa
pop
jl
call
push
sti
test
or
pop
test
das
cs
cmpb
sbb
mov
xchg
sbb
ds
shrb
testb
pushf
dec
fwait
push
push
out
lcall
add
xchg
in
stc
mov
mov
adc
cwtl
adc
aas
sbb
pop
sbb
movl
inc
or
pop
clc
sub
cmp
push
sbb
xor
pop
pop
sub
shll
mov
aaa
pushf
enter
test
pop
mov
scas
popl
movsb
bound
add
xorl
xor
push
lcall
hlt
push
adc
loope
inc
lcall
lahf
cmp
push
sbb
pop
into
dec
rolb
ficomps
sub
outsb
lret
inc
cmpsl
mov
test
mov
jb
jmp
loope
push
aam
pop
divl
je
push
scas
in
inc
adcl
xor
push
mov
outsb
scas
jl
adc
lods
xor
cmpsl
fimuls
add
xchg
pop
repz
dec
mov
cld
add
movsl
lods
and
leave
add
pop
jecxz
cmp
bound
ss
cmp
sbb
insl
lods
repnz
cmpsb
inc
shlb
cmp
orb
mov
sub
pusha
mov
clc
ljmp
jp
js
add
push
ds
lods
pop
shrb
add
out
mov
mov
nop
xor
outsb
loop
aaa
sub
imul
and
lcall
add
xchg
inc
ret
lock
pusha
mov
mov
mov
mov
pop
fcmovbe
dec
testl
add
mov
sub
adcl
out
dec
xor
pop
sbb
call
js
ret
stos
js
aas
jae
or
sbbb
cmp
cmc
insl
loopne
scas
sub
xchg
jo
sarl
fisubrl
cmp
xchg
pop
movsl
mov
fdivl
mov
jl
fldcw
outsl
xchg
aas
cmp
mov
mov
sbb
mov
or
dec
or
xchg
out
pop
mov
sbb
add
jb
rorb
sbb
pop
cmp
movsb
jae
mov
jmp
outsb
xchg
insb
pop
jns
je
data16
mov
push
pop
xchg
movsb
jp
dec
outsb
and
test
insb
xor
fidivl
dec
loope
xor
aaa
and
fcmovb
lea
sbb
mov
add
ret
push
inc
cmp
jno
cmpsl
and
stos
xor
add
push
fcompp
cmp
mov
cmp
aas
mov
cmp
or
stos
mov
out
cmc
lds
cmpl
outsl
dec
mov
xor
jno
into
repnz
aaa
ja
inc
out
inc
pop
or
paddw
sahf
scas
jmp
iret
mov
lcall
inc
xchg
clc
repnz
mov
mov
das
lock
lea
daa
push
xchg
adc
pop
jl
jb
cltd
xchg
push
and
fmull
or
stc
fs
popa
xchg
arpl
xchg
add
jmp
adc
xor
jnp
arpl
jb
les
out
mov
aaa
fcomps
push
in
bound
mov
fxtract
push
movsl
ficoml
icebp
jmp
dec
daa
popa
outsl
inc
cmp
pop
mov
pop
inc
fcoml
fwait
pop
jg
pushf
jo
xchg
filds
cmp
ss
mov
pop
je
inc
mov
inc
push
adc
ja
mov
jle
incl
jae
mov
push
push
enter
sbb
es
dec
filds
fwait
mov
push
push
dec
lret
add
sub
jb
ficompl
dec
lret
jbe
insb
jns
cli
xchg
push
int
jb
ss
jmp
stos
mov
inc
and
pop
push
pop
mov
lret
adcl
pop
mov
xchg
push
gs
mov
sub
mov
cmc
out
xchg
mov
and
enter
xchg
or
sub
adc
movsl
je
inc
fcmovnu
inc
push
dec
jno
fs
sti
cmpsl
or
dec
and
and
sbb
sti
arpl
loope
mov
mov
and
cmp
mov
iret
mov
mov
lock
dec
dec
jge
ret
cli
and
push
imul
cmp
xchg
cmp
jg
test
adc
dec
inc
xchg
jg
and
jb
lret
push
mov
test
or
jle
flds
xchg
add
fistpll
jg
bnd
cmp
or
in
sahf
xchg
fldl
lods
adc
cli
push
fmull
sarl
mov
or
pop
stos
clc
jb
int3
pop
sbb
ds
adc
mov
mov
mov
sti
mov
mov
je
test
sbb
repnz
jecxz
gs
mov
push
arpl
popa
dec
dec
sub
outsb
stc
lock
cltd
fstpl
icebp
loop
movl
mov
popa
sub
add
dec
push
push
pop
mov
les
scas
pop
outsl
sti
mov
ja
scas
mov
imul
fisubrl
jl
push
test
imul
cmpsl
test
pop
imul
mov
lods
int3
out
popf
push
xchg
adc
jp
push
push
js
je
repnz
mov
lret
mov
lds
mov
outsl
inc
out
mov
int
xchg
fistps
ljmp
mov
in
adcb
test
cmpb
add
fwait
jmp
insl
nop
mov
pop
dec
add
mov
inc
xchg
test
add
dec
pop
cwtl
dec
mov
push
je
into
scas
mov
adc
pop
jmp
dec
sub
cmp
xchg
js
sbb
xor
ret
jnp
sub
and
dec
leave
loopne
out
dec
mov
sbb
ss
and
jl
dec
shrl
ja
pop
jmp
insb
loopne
jns
xchg
leave
cmp
pop
pop
int3
adc
enter
sti
data16
xchg
subb
test
dec
push
mov
test
clc
and
xchg
popf
sti
fwait
sbbb
adc
jbe
mov
dec
xchg
ljmp
sbb
add
sbb
adc
lret
pop
test
js
shlb
add
xchg
imul
arpl
mov
cmp
incl
add
push
fs
inc
sub
bound
push
push
jo
push
testl
mov
xchg
sbb
dec
or
in
mov
es
test
jp
mov
dec
mov
shlb
ret
pop
imul
dec
sbb
jno
enter
jl
rcl
adc
aas
jmp
push
dec
pop
jnp
jge
fisttpll
nop
movsl
or
jne
pop
fldt
mov
mov
pop
roll
test
sbb
loop
mov
scas
mov
jb
push
lret
es
cmpsl
cli
movzwl
mov
sub
xor
pop
dec
lea
inc
add
or
rcrb
add
in
or
rcr
shr
xchg
mov
shr
sbbl
bound
mov
std
dec
cmpsb
mov
dec
sbb
mov
popf
cmp
inc
je
push
cmp
inc
add
icebp
out
lock
mov
cs
pop
data16
in
sahf
and
movsb
and
or
lret
push
add
shrb
sub
nop
and
adc
in
mov
lret
xchg
fildll
test
xchg
rcr
push
jae
ljmp
pop
xchg
leave
nop
dec
je
mov
jl
inc
inc
mov
and
adc
push
in
inc
or
inc
or
sbb
rcll
lock
bound
aaa
mov
push
sbb
enter
cwtl
push
out
mov
fldl
ja
xchg
jge
push
popa
roll
mov
lret
pushf
pop
out
shrl
int3
enter
mov
stc
or
popa
push
push
jg
aas
aas
jae
das
xchg
ds
lret
xor
rol
mov
jp
scas
cmpsl
push
jae
jnp
adc
sbb
adcl
inc
pop
aad
std
push
sbb
rorl
cmp
cmp
stc
rcl
dec
ljmp
push
rol
push
sub
add
mov
mov
jp
addr16
sub
inc
arpl
sbb
jle
dec
jne
cwtl
mov
mov
jb
aam
lods
add
cmc
repz
xchg
mov
mov
cmpsl
js
add
mov
movsb
popa
sub
sti
repz
cmpsb
idivl
cmp
mov
out
test
lret
push
fidivrs
cld
imul
scas
cmp
dec
scas
dec
out
push
cmp
nop
test
sub
and
lods
imul
movsl
gs
dec
std
inc
sub
inc
in
mov
addr16
push
dec
adc
dec
jae
scas
add
test
adc
cs
and
aas
loopne
in
cwtl
cmp
jb
repnz
imul
shlb
mov
movsl
test
xchg
jo
std
adc
sub
test
dec
cmp
xchg
adc
lds
push
jp
dec
ds
test
ds
bnd
das
sbb
pushf
int3
inc
hlt
and
sub
jb
push
cli
out
jns
pmaxsw
sarb
shlb
sahf
pop
push
lret
imul
xchg
lods
and
insb
jb
xchg
sbb
das
cmpsb
mov
in
mov
hlt
inc
add
mov
sbb
and
sbb
testl
xor
out
lods
mov
iret
and
ret
stos
mov
xchg
hlt
mov
xchg
jge
ret
pop
cld
xor
and
sub
push
negb
leave
xor
xchg
ljmp
mov
xor
inc
sub
mov
mov
push
push
enter
rcll
add
xchg
jg
mov
scas
jne
movsl
inc
xchg
call
inc
xchg
or
push
or
mov
push
inc
xor
fisubrl
dec
pop
dec
xor
add
cmp
sub
sub
pop
scas
mov
jb
ljmp
xchg
xor
aad
adcl
xor
in
mov
push
das
sub
push
addr16
push
iret
add
call
lcall
out
and
and
xor
inc
dec
mov
sbb
mov
inc
sub
lods
mov
aad
das
xor
jg
pop
notb
aam
and
repz
stos
rcrb
mov
mov
and
push
sahf
adc
leave
les
insl
int
andb
push
das
mov
jb
imul
pop
adc
loop
insl
xor
xor
push
cmovge
movsl
lea
pop
or
arpl
cmpsb
mov
mov
push
sub
test
lss
jl
dec
jge
push
mov
out
add
icebp
insb
and
jns
sbb
sbb
je
xlat
lahf
sti
in
pop
outsb
sub
mov
jne
mov
sti
and
mov
pop
lret
fwait
jo
enter
pop
andl
sub
dec
push
sbb
in
dec
leave
cmp
push
xchg
push
movsl
mov
gs
sar
pop
daa
scas
sti
in
adc
rorb
icebp
xor
imul
xor
lds
lods
mov
cmpb
mov
dec
imul
sbb
icebp
ret
mov
jo
retw
ficompl
stos
mov
add
jae
push
imul
or
icebp
in
xchg
mov
adc
shl
mov
shl
push
inc
pusha
lahf
push
inc
bound
js
sbbl
dec
mov
xchg
lea
decl
dec
mov
ret
or
xchg
jmp
cmp
cld
int
adc
xor
movsb
inc
mov
mov
enter
fnstcw
jecxz
pushf
ss
into
cmp
out
mov
mov
jnp
lahf
gs
xchg
movsb
sbb
dec
repz
pusha
stc
in
cld
cmovs
lds
pop
sti
pop
mov
into
pop
je
adc
pop
syscall
mov
out
scas
int3
mov
rcr
add
shlb
cmp
xchg
stc
scas
lret
fsubs
ds
loop
cmpl
mov
cmc
cmp
jb
cmpsb
test
js
and
inc
cld
mov
js
rcrb
mov
pusha
sbb
adc
fstl
aaa
fisubl
enter
dec
movsl
fnsetpm(287
and
call
sub
and
gs
jmp
xor
lds
lea
or
xor
loop
push
sti
popa
cmpsb
or
imul
cli
pop
push
add
shrb
lods
or
mov
aam
pusha
jmp
lods
call
pop
test
test
jl,pt
in
pop
out
jecxz
iret
jno
mov
addb
das
jae
inc
pop
cwtl
adc
lods
int3
jnp
pop
out
sub
icebp
pop
add
inc
cld
mov
xor
push
mov
das
xchg
and
adc
jae
jecxz
enter
sub
clc
add
ljmp
mov
mov
sub
xchg
pop
xor
cs
mov
mov
imul
popf
call
cmp
shrl
icebp
pop
lds
xor
test
leave
cmpsb
mov
sbb
dec
notb
and
or
jne
add
and
inc
jo
add
mov
jb
je
les
rolb
pop
xor
stc
test
mov
xlat
pop
fistpll
xchg
jg
or
imul
sub
sbb
lock
insb
lahf
inc
and
add
cmp
adc
mov
sbb
outsb
std
ret
lret
movsb
in
pop
outsl
jb
or
add
leave
call
test
add
cmpsb
cmp
adc
cmpl
ljmp
es
test
add
subb
out
mov
xor
xchg
mov
add
or
xchg
sbb
fidivl
pop
loopne
sub
adc
pop
mov
outsb
push
test
dec
insl
xchg
jg
jg
mov
fs
sub
dec
notb
mov
and
mov
mov
sub
cmp
cmp
add
and
loopne
pop
imul
test
inc
push
test
or
jg
fwait
mov
push
je
or
mov
jecxz
mov
sarl
push
jmp
aad
adc
push
and
ret
loopw
shl
daa
call
xor
push
mov
sbb
in
popf
xor
shrb
mov
aas
js
out
dec
into
mov
push
int3
inc
insb
fisubrs
and
sbb
pop
mov
rol
cmc
add
adc
fisubrl
sti
mov
adc
jne
inc
lcall
loope
xor
xchg
ds
pusha
fidivs
jo
dec
push
cmp
nop
cmpsl
int
sub
stc
out
xor
cmp
inc
dec
and
lahf
insb
inc
mov
mov
imul
xor
test
inc
xor
inc
int3
xorb
aas
js
mov
loop
aaa
lahf
or
popa
mov
add
pop
dec
mov
mov
nop
out
outsb
in
out
hlt
sti
jcxz
ds
xor
hlt
inc
sbb
push
and
scas
int
sahf
shlb
jp
sbb
lret
mov
adc
mov
andl
int3
mov
iret
pushf
mov
pop
js
pop
pop
or
into
add
jp
push
out
and
pop
push
mov
std
adc
xor
int3
ret
jnp
mov
fucom
std
int
mov
cs
xlat
test
stos
fidivs
leave
cmp
dec
lods
xchg
sbb
jmp
stos
and
xor
inc
imul
add
in
repz
adc
jns
dec
adc
dec
or
stos
imul
lea
push
in
mov
push
lds
out
push
mov
or
shrl
or
xlat
mov
sbb
sub
add
aad
pop
mov
adc
inc
hlt
cwtl
cltd
rclw
out
das
pop
push
repz
xor
push
push
cs
sarl
lret
sbb
shlb
and
xor
or
mov
in
iret
shll
fistpll
pop
fnop
and
xchg
cmp
adc
push
mov
je
inc
pop
cmp
imul
lods
movsl
inc
dec
ret
es
ja
lcall
push
mov
ljmp
cld
sub
es
adc
leave
pop
mov
mov
adc
mov
scas
inc
pop
fildl
lods
addr16
sbb
sbb
shl
pop
cmp
jmp
cmp
mov
outsl
add
push
jo
jecxz
push
xchg
pusha
pop
ja
rcrl
dec
jmp
or
jns
int3
jg
loop
pop
sbb
jae
jbe
pop
out
leave
inc
or
out
pushf
add
cld
mov
jnp
or
add
adc
inc
adcl
movsb
fsubl
push
and
cmp
pop
mov
mov
jmp
shl
inc
jle
push
mov
js
push
fidivrs
sbb
sub
out
rcll
aad
push
xor
imul
dec
loop
in
mov
pop
imul
aaa
mov
aas
cmpsl
popa
aaa
test
daa
enter
mov
pop
push
xor
jle
or
repnz
loope
pushf
repnz
sub
cli
pop
ss
pop
push
nop
bound
lret
adc
loop
hlt
mov
pop
jne
ror
popa
repz
mov
imul
pop
adc
push
jmp
test
cmp
outsb
pop
cld
add
xchg
in
inc
sbb
and
push
jb
mov
bound
or
xlat
xchg
mov
lock
insb
mov
test
push
dec
je
daa
test
or
dec
sub
xchg
sub
popf
xchg
cld
das
fucomip
aas
mov
jmp
sub
lret
ret
lock
ret
cmpsl
cli
sub
push
ret
out
stos
lahf
push
stos
nop
insb
jns
les
xchg
mov
inc
mov
aad
int3
icebp
mov
jae
sbb
fnstcw
orb
or
dec
call
xorl
fisttpl
jbe
lret
sbb
push
mov
out
lcall
cmp
fwait
xlat
inc
aaa
sahf
mov
jg
lret
mov
add
dec
pop
into
test
clc
or
mov
jns
push
xchg
cmp
mov
cwtl
rolb
mov
stos
les
addr16
mov
and
imul
pop
aas
push
adc
call
jle
fucomp
xor
xor
jns
xchg
bound
cmp
add
dec
popf
sbb
lock
imulb
cltd
fstpl
and
icebp
popa
ret
es
imul
jl
rolb
xor
push
jmp
lret
lods
loopne
dec
push
or
adc
inc
aam
cmp
sahf
fucomp
fwait
mov
mov
fcomp
test
ret
and
call
mov
jle
das
push
and
add
std
xlat
dec
fstl
mov
inc
xor
jns
jmp
repnz
adc
and
inc
dec
lods
mov
stos
mov
ret
mov
mov
jl
sti
fmulp
dec
mov
sub
jne
mov
into
outsl
sbb
mov
add
push
sahf
inc
cmp
js
pop
push
nop
dec
pop
mov
push
dec
jp
hlt
repz
inc
jb
out
jo
fbstp
cmp
push
mov
jno
xchg
and
jle
out
imul
or
sub
xor
jo
leave
inc
cmpsl
js
and
js
cmp
mov
adc
ljmp
addl
sub
in
add
push
les
pop
and
jne
rol
sar
aas
cmp
imul
cli
addr16
adc
cmp
jmp
dec
jbe
or
sti
fidivrl
and
cmp
test
dec
js
xchg
in
add
in
repz
stc
add
sub
lret
add
and
mov
adc
sub
mov
mov
fdivrs
lret
xor
mov
rcll
lea
add
lods
enter
ficoms
aaa
xchg
pop
jg
aam
add
or
jnp
add
jb
movsl
les
sti
js
inc
es
inc
inc
ret
ret
and
mov
adc
jmp
lods
imul
cmc
mov
das
jae
mov
aaa
push
scas
test
mov
incb
xchg
sbb
and
jae
pushf
pop
into
pop
lock
xchg
pop
jnp
lahf
inc
jnp
mov
pop
sub
mov
mov
repz
sub
aas
mov
cmp
scas
imul
jo
cmp
inc
data16
test
mov
xor
imul
xor
hlt
arpl
aaa
in
cmp
out
dec
daa
aad
lret
and
jp
addr16
push
xchg
loope
inc
shlb
jmp
or
or
sbb
in
out
popf
xor
add
cmp
out
jge
push
les
or
lds
add
and
fcompl
das
mov
adc
mov
mov
hlt
push
add
sbb
xchg
imul
pop
jae
inc
stos
push
push
aas
inc
addb
adc
cmp
push
fistpl
clc
push
les
jno
test
mov
pop
pop
sub
std
insl
ds
imul
jmp
sub
jmp
pop
lahf
adc
mov
or
ret
mov
test
mov
ret
nop
adc
xlat
push
sub
cs
cmp
cli
outsl
cmc
jl
sahf
mov
lds
mov
jae
fs
mov
pushf
rorb
and
daa
mov
pop
dec
dec
test
out
dec
xchg
add
inc
and
ljmp
pop
xor
mov
dec
leave
dec
or
mov
inc
xchg
sbb
cmpsb
loope
cmp
push
lock
call
sbb
dec
adc
aam
and
rcrl
popf
addr16
ja
mov
in
cmp
mov
cmp
inc
pusha
fcmovb
push
int3
sbb
aaa
push
inc
out
jle
leave
pop
sub
sub
mov
scas
stos
add
xor
fs
imul
mov
dec
jae
je
mov
xor
lds
clc
sub
xchg
iret
ret
and
jmp
cmp
test
pop
push
iret
js
mov
or
imul
int3
shrb
pop
pop
insl
adc
mov
adcb
stc
lret
mov
movsl
jge
sub
ret
gs
mov
ficoms
out
cmp
scas
xor
in
fwait
insl
xor
aaa
test
loope
aaa
sub
sub
pusha
aas
sbb
sti
jno
adc
std
std
sub
cmp
sar
es
loopne
cmp
push
es
js
cld
fldcw
adc
inc
hlt
mov
adc
ret
jmp
push
mov
push
push
sbb
fsubl
cli
xchg
pop
aam
jl
add
sub
xor
lods
mov
jne
cmp
mov
inc
jge
rclb
sub
imul
in
inc
pop
dec
outsl
push
jae
ljmp
pop
cmp
popa
mov
scas
mov
ficoml
mov
or
rcr
mov
call
int3
inc
fmul
insb
dec
clc
bound
xchg
xor
addr16
jge
jne
and
sbb
xchg
aam
test
cmpsb
scas
or
xlat
das
xor
mov
or
repz
push
bound
data16
cmp
xchg
xchg
jnp
mov
mov
xchg
gs
xchg
mov
add
shll
hlt
insb
stos
addb
pop
xchg
sarl
jge
mov
divl
inc
push
add
ret
mov
cmpsb
stc
pop
cmp
pop
fdivrs
inc
xchg
dec
rcll
mov
orl
dec
dec
cmp
jo
xchg
sbb
ror
test
sbb
cli
jmp
cmp
xor
or
xchg
cld
int3
xor
lods
call
popf
cli
ds
cli
frstor
sub
out
xchg
xchg
imul
xor
adc
xchg
push
arpl
fidivl
int3
iret
into
jmp
xor
in
push
bound
stos
xor
mov
and
lret
loope
inc
mov
cmp
dec
xchg
and
insl
pop
mov
or
in
sub
call
or
mov
sub
lods
aam
jmp
xlat
jbe
jl
icebp
mov
stos
mov
shll
jbe
fwait
xchg
lods
sbb
jle
sahf
xchg
lcall
unpcklps
arpl
cmpsl
jmp
adc
insb
xchg
sub
or
pop
fnstenv
sub
and
xchg
jmp
mov
addb
jmp
cmp
jnp
push
xchg
iret
lea
js
add
add
imul
gs
xchg
movsb
jno
out
pop
orb
into
stos
incl
jp
shlb
mov
shl
xchg
outsl
lods
inc
lahf
das
icebp
scas
push
or
cwtl
mov
push
cmc
inc
xchg
subl
mov
mov
sub
gs
test
aaa
jae
pop
inc
xlat
sbb
bound
aaa
aad
daa
mov
repnz
xor
xlat
data16
push
in
je
cltd
dec
push
subb
in
inc
inc
adc
mov
addr16
cwtl
mov
mul
lahf
inc
das
imul
xor
mov
push
xlat
clc
mov
stos
pop
ja
mov
out
jne
sub
les
mov
and
push
push
xor
cmpsb
pop
adc
push
or
xorb
dec
fnstsw
pop
call
mov
ret
fcoml
jge
lahf
or
mov
dec
movsl
mov
cs
and
jo
rol
jno
push
into
enter
mov
rorb
insb
mov
rcr
out
add
out
aam
jbe
and
xchg
pop
pop
divl
push
mov
cld
dec
xor
push
fisubl
and
in
jbe
jp
std
ljmp
sub
shrl
popf
rcrl
cmpsb
cmpsl
aas
adc
rcl
fimuls
xchg
or
fsub
push
inc
and
cmp
outsl
stc
subb
jg
xchg
jb
ja,pn
or
fsub
add
sbb
rcl
xor
push
test
or
push
clc
xchg
mov
mov
lret
ss
cmc
lea
inc
cmp
xlat
and
cmp
out
adc
aam
pop
push
cmp
xor
cmp
jnp
xchg
pop
popa
cltd
and
lcall
in
lret
into
dec
push
sbbb
push
inc
scas
xor
mov
push
ja
fs
ret
enter
out
and
adc
adc
pop
ror
xor
inc
ret
xor
xor
pop
lea
sub
sbb
adc
dec
jb
ja
and
inc
mov
test
and
sarl
call
cli
inc
rorb
jne
xor
mov
cmp
sub
test
mov
sbb
jl
out
xchg
fldcw
mov
lods
push
push
mov
fs
fcom
sub
add
sti
and
push
shrl
mov
aaa
xor
imul
mov
adc
sbb
pop
fwait
pop
or
xchg
xor
filds
enter
out
out
lock
jo
dec
in
lea
daa
dec
sbb
push
adc
les
into
mov
fsubp
out
out
xchg
fwait
push
mov
scas
inc
xor
data16
ss
inc
insl
cmp
pop
int
dec
gs
and
mov
pop
rep
cmp
std
clc
into
jne
or
jp
rol
in
xchg
fwait
sar
int3
xor
pop
gs
lea
shrl
or
inc
outsl
sbb
mov
je
enter
mov
mov
lcall
pop
dec
mov
add
xchg
call
pusha
loopne
jno
pop
enter
xchg
sahf
out
xor
fldcw
cmp
ss
pop
inc
fwait
push
hlt
popa
iret
ss
cs
pop
sub
into
icebp
loop
push
orb
mov
inc
dec
push
aam
push
dec
mov
xchg
mov
and
fcmovu
call
les
leave
jge
cmpsb
mov
inc
filds
imul
mov
into
sbb
mov
inc
insl
shlb
bound
popf
sbb
jo
dec
fiadds
mov
add
add
aaa
int3
mov
rol
add
push
pushf
ds
dec
sub
jbe
dec
int
add
sub
pop
dec
push
mov
lods
sahf
mov
dec
subl
loope
xor
in
rorl
loopne
nop
fiaddl
int
mov
jae
lods
pop
push
loop
pop
aam
or
jns
jnp
sar
std
jp
lret
lret
jmp
inc
jl
push
bound
sbb
roll
push
xchg
push
sub
cmp
cmp
subb
mov
mov
and
ret
mov
movsl
lea
or
xor
fnstcw
adc
out
mov
test
rcrl
xchg
jge
in
mov
pop
xchg
cmp
dec
pop
into
and
xchg
mov
pusha
add
sahf
xchg
dec
and
out
add
cmp
jae
jmp
lock
push
inc
jns
repz
pushw
add
mov
sahf
add
jg
ffreep
loopne
sbb
stc
out
mov
add
push
xlat
fisttpll
das
into
daa
popf
cmp
mov
clc
jns
sub
or
mov
loop
cmp
clc
dec
insl
add
rclb
push
jne
push
push
in
xor
add
sub
pop
out
push
push
ja
mov
cmp
or
je
hlt
jae
mov
imul
inc
dec
pusha
pop
loopne
scas
pushf
std
repnz
or
jne
imul
pushl
add
ss
into
cmp
mov
cmp
mov
xchg
mov
adc
xor
int3
cmpsb
cmp
push
clc
inc
xorb
inc
mov
jne
adc
mov
into
pop
pop
rol
cltd
cli
mov
leave
and
jnp
aad
inc
dec
gs
xchg
jne
push
ret
push
sub
lds
jnp
jne
cmpsl
daa
cmp
lock
rorl
cmp
xchg
dec
std
popa
imul
loope
loop
or
test
pop
add
push
or
xchg
rcr
in
gs
fs
ficompl
test
mov
sbbl
std
ja
das
ret
stos
or
mov
repz
mov
or
cmpsb
mov
mov
xchg
test
test
mov
jle
rcrl
loope
fsubs
mov
movb
cmc
stos
fdivs
mov
lahf
jmp
jb
push
int
dec
xchg
add
mov
jo
push
pop
std
fildll
mov
outsl
xchg
dec
scas
mov
enter
leave
int
jp
push
je
push
xchg
push
lds
andl
jp
mov
jge
mov
loope
dec
add
jmp
fs
insl
notl
sar
aad
loope
leave
adc
sbb
mov
xchg
mull
into
jns
aam
leave
cmpsb
scas
mov
push
flds
pop
adc
pop
into
cltd
xchg
xor
icebp
push
mov
dec
pavgb
rcl
movb
lock
mov
add
jb
push
pop
icebp
repz
inc
jnp
outsl
negl
jp
mov
or
dec
lods
sbb
sub
iret
test
aas
jno
or
test
aad
hlt
in
fwait
testl
sub
into
dec
pop
sub
mov
push
leave
xor
stos
push
sti
and
movsl
ret
outsb
in
sbb
mov
push
das
mov
stc
sbb
stos
mov
dec
std
dec
mov
push
lods
out
in
pop
inc
data16
pop
and
ret
mov
pop
cmp
iret
nop
mov
pop
xor
sti
adc
adc
xorb
es
add
mov
dec
push
ja
adc
xchg
sbb
or
and
cmp
loop
out
outsb
dec
xor
ret
in
dec
adc
mov
xchg
jb
mov
iret
sbb
inc
mov
shr
dec
stc
les
xor
cmp
jbe
std
or
nop
das
xchg
in
adc
fstpl
aas
insl
loopne
fistps
add
dec
aaa
push
lods
push
rcrb
es
xchg
mov
push
sbb
dec
clc
or
mov
xchg
incl
dec
mov
sahf
pop
mov
loop
aad
subb
insb
call
sub
xchg
or
adc
and
push
sbb
xchg
xchg
daa
outsl
mov
mov
int3
inc
jbe
in
push
sub
aas
pop
out
jecxz
popf
adc
cmc
lret
pop
loope
push
aaa
jg
in
enter
mov
jmp
or
fwait
push
ljmp
and
sub
dec
mov
add
xor
sub
int
jno
mov
pop
mov
bound
mov
sbb
fisubrs
pusha
dec
dec
loopne
sub
pop
or
inc
arpl
rcr
lahf
add
test
sbb
inc
adc
push
jp
push
ror
jg
push
call
mov
insb
and
pop
sbb
cwtl
in
mov
subb
testb
ss
out
dec
arpl
pop
cmp
mov
xlat
stos
cli
mov
push
mov
inc
fldcw
lods
xchg
push
mov
cmp
xchg
mov
pop
xchg
add
jmp
in
std
std
adc
push
clc
js
sub
mov
jo
out
mov
pop
inc
pop
in
insl
loopne
shl
add
adc
inc
lock
bnd
cmpsb
jmp
adc
test
cwtl
inc
cld
imul
out
lods
and
inc
xor
movq
cmp
adc
in
sar
rorb
mov
loopne
dec
mov
push
notl
fcmovu
outsl
jns
mov
pusha
out
iret
addr16
enter
push
cmp
and
adc
xor
fstl
jne
addr16
in
inc
dec
inc
stos
jno
nop
rolb
ficompl
sub
and
aad
cltd
outsb
push
jecxz
mov
shrb
clc
imul
add
push
in
mov
pop
cmpsb
xor
xchg
jae
inc
mov
sub
movsl
enter
in
sbb
mov
pop
pop
cs
push
sti
repz
pop
adc
mov
iret
pop
jmp
pop
fnstsw
cs
dec
jae
iret
lds
aam
cltd
or
sbb
mov
clc
das
fdivrs
fdivs
cmp
and
lds
shll
sub
das
pop
lahf
cmp
hlt
push
xchg
xor
dec
mov
pop
maskmovq
push
cmp
adc
dec
out
es
in
or
aas
and
mov
pop
in
mov
dec
sub
shlb
pop
das
cmp
mov
jl
cs
imul
jns
pop
cmp
test
hlt
lds
mov
mov
movsb
scas
mov
jb
adc
into
je
dec
xor
outsb
ljmp
pop
xor
mov
add
and
fwait
sub
int
mov
fistpll
ret
fisttps
and
jl
sbb
add
pop
adc
rcl
mov
cmpsb
push
outsb
add
data16
adc
test
mov
jmp
cs
adc
mov
push
jle
mov
adc
std
test
into
fwait
repnz
xchg
jns
andl
adc
xchg
push
lock
mov
sbb
loopne
and
iret
dec
sbb
cmpsb
sub
shl
fisttps
inc
stos
mov
jae
jl
inc
cmp
sarb
push
imul
mov
sbb
inc
and
push
add
cmpl
jecxz
insl
pusha
sti
add
es
fsubrs
xor
lret
and
xchg
and
pushf
notb
pop
std
pop
ret
divl
bound
xorl
lods
xor
lods
fisubl
js
inc
test
mov
jbe
or
mov
or
mov
lods
into
gs
xchg
xor
and
popa
and
ljmp
icebp
pop
mov
sbb
test
int3
in
mov
ds
das
inc
push
leave
push
ret
sbb
mov
iret
dec
inc
inc
in
ljmp
std
stc
mov
mull
sbbb
pusha
xchg
outsl
out
ljmp
rorl
mov
rorl
lea
add
adc
adc
arpl
hlt
xor
cmp
repnz
jp
rorb
or
mov
jae
das
xchg
xlat
lahf
xor
nop
daa
xor
cld
stc
push
mov
cmp
pusha
inc
mov
jns
sub
or
pop
and
je
sahf
sub
sub
fimull
mov
negl
push
mov
cmpsb
enter
aaa
cmc
mov
push
cli
push
out
call
roll
inc
mov
int3
ret
into
adc
xor
sbb
dec
repnz
jbe
push
jae
jne
xor
out
daa
lret
movsb
ja
arpl
adc
mov
dec
push
or
cltd
add
dec
push
movsl
sbb
mov
sub
mov
aam
data16
xchg
jge
stc
outsb
xchg
mov
sbb
lods
les
push
ja
sbbb
xchg
movsl
jl
sub
sbb
lcall
mov
clc
cmpsb
mov
jl
push
mov
xchg
sbb
jo
mov
mov
mov
in
adc
ds
sub
jmp
test
ja
movsl
mov
dec
rcrb
jge
ja
pop
mov
mov
stc
call
sahf
jns
mov
pop
inc
xchg
mov
push
mov
inc
add
mov
sub
jg
cmp
sub
outsl
jno
les
cli
lea
sbb
dec
fiadds
in
or
push
xchg
sbb
pushf
lahf
fnstcw
in
adc
divl
out
aad
push
jnp
push
out
scas
pop
sub
pop
xor
jg
cmc
lea
dec
icebp
sub
adc
lods
mov
push
push
test
fadds
inc
movsb
das
icebp
jno
push
add
es
mov
jl
rolb
mov
sti
xor
dec
aad
pusha
push
in
movl
cmp
xchg
xor
js
sbb
sbb
stc
sti
push
mov
stos
loopne
enter
aaa
mov
popa
std
outsb
lea
and
add
adcb
lret
mov
mov
xor
in
loope
loope
jo
push
shll
mov
cmp
dec
fs
addl
inc
push
push
xor
loope
fnstsw
mov
sub
fisttpl
fcoms
add
das
test
imul
pushf
pop
cld
in
lods
cmpsb
mov
pushf
fadd
inc
pop
fldt
pop
push
popf
push
mov
jnp
mov
adc
mulb
mov
sbb
mov
sbb
sbb
sahf
mov
imul
xchg
sub
ds
lea
test
push
lds
fs
push
push
rclb
sub
xor
leave
ret
in
clc
pop
jge
mov
movsl
lret
lds
cmpsl
xchg
aaa
ret
cli
or
test
pop
or
inc
jnp
pop
stc
imul
push
or
repz
lret
mov
mov
pop
aaa
push
jb
push
or
push
jno
into
dec
and
mov
or
notl
in
in
das
push
inc
and
cld
sub
fidivrl
xchg
and
push
jns
jmp
test
sti
lret
clc
popf
inc
cmp
dec
adc
jmp
aaa
popf
cmp
lret
xchg
xchg
xor
mov
adc
lahf
dec
xor
inc
test
mov
std
iret
ror
jno
xchg
push
pop
push
mov
repnz
push
sbb
cmpb
sub
mov
and
lods
sub
cmp
xor
ds
xor
in
movsb
fs
int3
push
jp
fucomi
scas
icebp
cmp
cmc
pop
and
call
push
or
add
xchg
sbb
pop
and
mov
aad
gs
jne
pusha
imulb
gs
mov
pop
push
rorb
adc
mov
xor
add
cld
in
aam
cmpsb
bound
sub
aad
pushl
sub
orb
addr16
std
or
add
jns
push
xchg
cltd
lahf
or
mov
loope
mov
outsl
aaa
jae
fwait
sub
mov
jno
mov
in
cmp
add
jb
lock
or
jae
in
xchg
lea
stos
out
pop
inc
aam
cltd
push
adc
or
mov
ret
adcl
rcll
fcmove
adc
add
nop
lds
mov
mov
pop
repz
stc
jge
mov
jno
xor
pop
bound
imul
outsb
fisubrl
add
std
cmp
mov
push
add
jb
call
mov
jge
into
lds
push
insl
xlat
mov
out
and
xor
hlt
mov
sbb
loope
in
repz
lcall
push
pop
push
adc
js
adc
pop
pop
and
cli
inc
lock
arpl
test
pop
test
js
aam
push
mov
int3
push
sbb
and
mov
int3
push
lds
sub
mov
push
rcll
daa
mov
fnstenv
out
hlt
adc
fwait
mov
not
pop
mov
cmp
rcll
mov
lahf
data16
pop
cwtl
sti
popf
fwait
imul
push
pop
jo
mov
lahf
xorb
rcll
cs
push
or
or
aaa
fldenv
xchg
mov
xchg
mov
adc
pop
mov
xchg
cmp
sbb
arpl
lods
pcmpeqb
cmp
adc
xchg
cli
sbb
sahf
and
xchg
lcall
dec
inc
ret
lock
jp
ret
cmpl
xchg
mov
sahf
adc
sub
push
mov
stc
push
add
and
push
outsl
mov
pusha
lret
icebp
loop
mov
jle
cmpsb
jecxz
daa
cmp
in
inc
je
sbb
pop
aaa
or
xchg
mov
fildll
inc
dec
pop
mov
data16
mov
pop
sub
pop
cmp
push
loopne
or
xchg
sub
pop
fnsave
fwait
jbe
aam
outsl
lahf
sbb
lret
jg
inc
xlat
nop
pop
xchg
clc
pop
push
xlat
xchg
sub
dec
jecxz
icebp
loopne
cmp
scas
into
inc
dec
subl
in
pusha
inc
daa
jmp
mov
xor
gs
xor
jge
cmp
aad
cmp
popf
lret
sub
enter
inc
fsubl
enter
dec
or
sub
adc
movsl
hlt
mov
loope
mov
popf
mov
ljmp
adc
outsb
cmc
fcomps
adc
addr16
js
cmc
fs
sbbl
movl
mov
adc
idiv
inc
xchg
cmp
and
cmp
mov
push
mov
adc
push
lock
xchg
and
mov
pop
loopne
gs
mov
jne
in
push
sub
popf
push
sbb
sub
pop
xlat
hlt
fsts
icebp
addr16
sub
test
jb
pushf
mov
cmp
ljmp
push
dec
roll
mov
outsb
or
ljmp
cmpsl
sub
jp
lcall
inc
mov
je
je
or
mov
push
adc
sub
es
addl
gs
mov
iret
pop
int
jmp
push
pusha
pop
in
inc
in
fstl
cs
shl
pop
cmpsl
and
inc
and
pop
mov
out
fcoml
xlat
movsl
rcll
or
cmp
dec
xchg
fs
xor
mov
pop
lcall
incl
iret
clc
or
dec
push
push
cli
mov
fwait
mov
mov
mov
mov
push
out
jecxz
bound
repz
outsl
xchg
mov
pop
in
jo
dec
push
mov
lods
mov
cmpsl
mov
push
movl
dec
enter
fucomp
mov
sub
scas
or
push
lods
loope
insl
and
scas
repnz
cmp
dec
cmpb
pop
sahf
pop
and
cmpsl
rcrl
add
and
bsf
shlb
aaa
das
sub
mov
xchg
xchg
test
fadd
mov
mov
add
aad
dec
mov
int
in
cmp
pushf
mov
cmp
push
mov
aad
mov
or
jno
sbb
mov
pop
xchg
call
lret
orb
frstor
pop
jp
sti
int3
cmc
cmp
sbb
stos
mov
xchg
xor
pop
hlt
ret
ss
and
jns
and
and
pop
and
push
pusha
das
stos
dec
push
mov
pop
add
xorl
and
mov
or
rcrl
mov
sahf
mov
cmc
iret
lret
mov
int
and
pusha
int
mov
mov
addr16
aas
in
daa
mov
jae
out
nop
push
sti
popa
pop
adc
jmp
cld
adc
rcl
ret
push
or
push
jl
aas
test
pop
loop
or
ja
js
mov
roll
imul
in
jbe
movsb
imul
cld
jae
sub
adc
mov
int3
mov
cmp
ljmp
mov
mov
xchg
ss
ljmp
mov
jb
cli
int
pop
jae
dec
jae
enter
mov
mov
fs
and
sbb
ret
fnclex
xchg
or
inc
std
jge
mov
es
adc
cmp
ficoml
adc
fwait
xchg
fimuls
shr
sub
mov
out
mov
das
push
test
add
test
sub
jmp
out
ret
xor
loop
sarl
popa
cmp
jae
adc
and
mov
jge
add
ja
cmp
fisttpll
aam
jb
jmp
pop
xchg
cmp
jg
popa
js
jne
cmp
or
dec
jbe
mov
jns
inc
icebp
stos
and
imul
cmp
push
jnp
and
jl
mov
clc
bnd
mov
add
sub
push
test
adc
inc
cmpsb
outsl
jbe
cmp
sub
mov
iret
jno
fcomps
ret
xor
ja
jmp
aam
fimull
imul
std
sbb
sub
adc
insl
insl
xchg
aam
out
je
inc
rorb
xor
out
push
call
pop
xchg
sbb
cmpsl
adc
addr16
xchg
pop
push
scas
cmpsb
mov
and
dec
jns
cmp
dec
push
jbe
ss
ret
inc
adc
cmpsl
cs
add
flds
mov
aad
mov
str
or
shlb
test
dec
inc
adc
and
sbb
pop
adc
fsubr
adc
pop
daa
sbb
arpl
aad
cmc
xchg
movb
xacquire
xor
int
cli
pop
jne
stc
mov
mov
sub
inc
scas
mov
pop
fcomps
or
aad
loope
arpl
jae
mov
scas
sbb
clc
mov
mov
adc
jp
scas
sub
pop
add
inc
jge
jp
inc
hlt
adc
mov
jmp
je
push
jo
sti
pop
lret
sbb
add
sub
ss
add
jmp
cs
mov
mov
jmp
aam
pop
out
insb
test
aad
and
stos
push
into
sub
pop
cmp
lahf
mov
inc
ljmp
imulb
adc
outsb
nop
mov
sub
sbb
mov
pop
rorl
test
lret
dec
mov
lret
push
jmp
sti
test
pmulhw
inc
xchg
es
xor
dec
push
xor
fnstsw
icebp
arpl
orb
les
xlat
mull
dec
cmp
xor
mov
jo
data16
xor
adc
add
lea
dec
jne
pusha
push
dec
aad
mov
imul
xor
subl
scas
rcrb
into
mov
repz
dec
leave
cwtl
cld
daa
cmp
sub
es
call
js
fldln2
mov
into
cmpsl
ds
shlb
mov
xchg
lods
jp
xor
pop
lds
lods
jbe
pop
jno
and
jmp
sbb
jno
rcrb
mov
pop
push
and
out
adc
mov
int
fwait
sub
outsb
js
imul
lahf
jae
push
mov
out
mov
dec
mov
sahf
in
rcl
aaa
lcall
push
stos
sbb
sbb
cwtl
lds
xor
pop
fcompl
incb
xor
add
adc
sbb
gs
lods
repnz
js
push
xchg
sub
dec
inc
imul
clc
pop
icebp
ss
and
and
idivb
add
push
xchg
mov
cmp
xor
dec
jno
shr
repz
fisttpll
mov
jae
sbb
or
inc
lods
divl
cmp
decl
mov
mov
dec
clc
and
mov
or
outsl
and
push
fildl
lods
dec
mov
ds
push
call
pop
nopl
sarb
fs
idivb
inc
sub
fisubrl
lods
jno
aas
shlb
add
popa
push
in
pop
ret
fdivs
lcall
out
pop
lds
or
mov
inc
idiv
stos
jbe
and
add
or
enter
push
cmp
push
lahf
adc
and
in
movsl
xor
xchg
cltd
movlps
jecxz
xchg
mov
jl
and
outsb
push
pop
push
jae
push
call
scas
dec
push
add
call
cwtl
mov
inc
jno
push
adcl
sub
jle
push
test
push
leave
add
adc
mov
push
pop
mov
ds
mov
add
lret
incl
add
fs
outsb
scas
push
sub
pop
shl
lret
pop
mov
insb
adc
les
mov
or
push
mov
sub
inc
dec
stc
shl
adc
dec
fdivrs
stos
xor
inc
xor
outsl
ret
adc
pusha
xor
pop
lds
xchg
xchg
add
loop,pt
cmp
push
mov
aas
and
mov
inc
cltd
jle
stos
and
enter
stc
add
imul
jg
rolb
xor
pop
xchg
add
jmp
mov
jmp
mov
shl
push
ss
add
dec
mov
inc
pop
fadds
ss
movsb
outsb
ljmp
mov
std
rcrl
dec
pop
sbb
pop
jl
or
imul
hlt
sti
or
outsl
cmp
jb
clc
icebp
sub
mov
mov
sahf
sti
mov
adcl
jb
pop
hlt
xlat
xor
pop
jb
daa
xchg
push
mov
in
aad
test
xchg
sti
pusha
fisubs
cmp
lods
mov
in
mov
jmp
mov
aaa
xor
xchg
xor
mov
pushf
dec
test
push
daa
out
jecxz
inc
insl
fxch
data16
push
xor
sbb
inc
outsl
add
jno
mov
jnp
outsb
mov
mov
repz
imul
call
pop
push
out
jne
mov
in
shrb
stos
cmpsl
xor
pop
add
sbb
add
movsl
insb
ds
adc
dec
out
push
sbb
stos
xchg
test
sub
sub
pushf
iret
sub
jmp
fsubrl
fmull
adcb
mov
inc
orl
push
pop
mov
mov
push
sbb
stos
fcomps
insb
jne
clc
sbb
adc
pushf
cli
idiv
mov
inc
or
inc
mov
add
sbb
mov
jge
cmpsl
aaa
fmuls
je
push
fs
adc
jg
xor
add
sub
imul
cs
ret
adcb
sub
xchg
sub
pop
dec
pop
daa
sti
lahf
cmp
sbb
mov
xor
subl
inc
mov
mov
push
mov
jge
add
orb
push
outsb
and
cld
outsb
push
inc
dec
xchg
jno
xchg
pop
out
rol
dec
mov
and
dec
mov
sub
mov
xor
loope
ds
mov
hlt
stc
inc
leave
push
je
adc
cwtl
hlt
test
pop
flds
out
out
dec
loope
cmp
or
insl
or
sub
or
mov
test
ds
jno
test
mov
mov
int
xchg
icebp
jbe
lods
jmp
dec
jmp
orl
fadd
jl
insb
int3
mov
xchg
stc
fmul
push
pop
fnsave
inc
cmc
pop
arpl
fwait
dec
push
test
lcall
in
xor
mov
rol
das
es
sbb
outsb
push
lret
imul
jb
ret
xor
inc
pop
sbb
sbb
mov
inc
pop
loope
pusha
or
pusha
sbb
lods
in
gs
xchg
bt
movsb
nop
dec
cs
push
lea
xchg
mov
cmpsl
mov
dec
in
popl
ljmp
cmpsl
inc
mov
push
fs
jle
xor
sahf
daa
xchg
and
inc
cmp
cmp
insl
test
sti
mov
jmp
xchg
jge
push
or
push
dec
fiaddl
xchg
outsb
mov
shl
addl
xchg
and
xor
sub
hlt
fists
mov
add
dec
xchg
aam
fldenv
pop
push
icebp
sar
dec
movsb
sub
testl
dec
loopne
push
push
sbb
sbb
push
aas
in
stos
mov
jp
test
daa
pop
xchg
sub
push
loopne
cmp
or
test
ret
jns
or
xchg
lock
pop
nop
into
sub
and
jne
adc
lods
test
mov
and
rorl
mov
rcll
stos
scas
pop
push
jns
lock
into
or
ljmp
ss
pop
loopne
pop
in
lods
in
mov
xchg
pop
push
push
fisttps
pop
hlt
sub
mov
jle
and
mov
push
xchg
icebp
hlt
loop
jmp
jb
push
dec
inc
pop
ficoml
mov
hlt
xchg
ret
stc
mov
nop
add
rolb
mov
push
add
sbb
outsl
cli
fwait
adc
popf
or
scas
leave
outsl
sbb
xchg
testl
popf
gs
inc
in
jecxz
pop
push
leave
jb
inc
cltd
movsl
jg
sbb
lahf
push
push
out
test
icebp
lods
aam
sbb
sbb
jge
push
cvtsi2sd
mov
cld
arpl
daa
or
add
dec
dec
outsb
mov
repnz
sti
and
or
cmpsb
mov
jle
push
ret
push
movsl
out
fincstp
lret
bound
scas
xchg
hlt
lock
andnps
inc
outsl
stos
and
in
subl
loopne
into
and
in
fcmovnb
call
lcall
add
mov
das
pop
mov
pop
add
mov
gs
lods
aad
ss
mov
pushf
dec
sbb
lods
and
stc
fidivrs
aad
pusha
mov
cmp
mov
loopne
bound
fwait
sub
lods
xor
fildl
daa
mov
je
mov
test
das
inc
sbb
cmp
mov
repnz
shr
jnp
jnp
push
add
dec
faddl
jbe
pop
and
inc
insb
in
in
sbb
push
push
sbb
mov
xor
lds
jle
outsb
inc
add
lahf
hlt
scas
and
or
add
loop
int
sub
xchg
jns
ljmp
push
data16
leave
or
lret
xchg
in
outsl
inc
sti
das
xchg
frstor
xchg
sbb
jge
add
fucomp
cs
jle
push
loop
or
aas
xchg
add
xor
dec
insl
repnz
daa
jno
test
cmp
out
mov
fcoms
inc
sbb
pop
jae
lods
scas
sub
xchg
int
mov
pushf
sbb
pop
cmp
adc
movsb
int
fnstenv
and
fs
cmp
popf
jge
push
dec
cmpsb
test
lcall
jae
lcall
je
and
add
add
and
push
xchg
ss
dec
jge
lcall
jb
and
xchg
mov
add
jecxz
sahf
push
lea
adc
mov
pop
negl
clc
shll
push
popf
mov
pushw
or
jns
daa
adc
or
loop
ret
add
sub
jecxz
fildll
adc
xor
mov
xchg
sbb
xor
add
ret
dec
insl
mov
xchg
nop
out
cmp
or
xor
adc
imul
push
lret
push
fdivs
sbb
xchg
xchg
add
xchg
mov
and
clc
stc
pop
fsubr
mov
cmpsl
int
test
mov
fistps
xchg
cltd
test
add
mov
sbb
cmpsb
dec
mov
sub
dec
lds
or
xor
sbb
adc
mov
jg
das
repnz
outsb
fldl
inc
add
movsb
or
arpl
mov
inc
pop
rorb
out
movsl
nop
rolb
push
adc
lcall
mov
mov
aaa
mov
pop
jge
adc
in
imul
mov
clc
mov
jmp
sbb
mov
jae
aam
popa
dec
and
cs
pop
je,pn
mov
or
sbb
psubw
and
adcb
in
xchg
push
and
fists
xchg
sub
and
xchg
pop
mov
xchg
inc
pop
mov
xchg
test
dec
jmp
xchg
imul
adc
and
daa
sahf
outsl
cmp
cmp
rolb
mov
pop
dec
shlb
lock
aad
fdivl
dec
adc
or
lods
mov
movsb
sub
jp
lods
sbb
movsb
test
lods
jmp
mov
leave
pop
enter
lods
jae
mov
push
mov
xor
sarb
push
es
push
mov
in
fildl
std
xor
scas
ss
int
sbb
xchg
pusha
pop
test
icebp
xlat
pusha
pop
cmp
lret
dec
lea
inc
xchg
mov
ret
and
xor
pushw
xchg
ret
daa
mov
jbe
imul
into
imul
addb
jnp
data16
pop
xchg
jmp
mov
dec
pop
lahf
ja
movl
sub
js
movsb
lods
int3
inc
arpl
std
lds
int3
into
sbb
dec
cmp
cwtl
jno
rcrl
cmpsl
or
fs
imul
mov
inc
jg
test
xchg
mov
pop
jno
repnz
dec
popf
add
mov
pop
test
jmp
dec
jb
push
mov
inc
inc
sub
sbb
inc
adc
xor
test
dec
aas
and
xchg
mov
jp
ljmp
xchg
xchg
mov
mov
popa
sbb
pop
ja
mov
leave
and
scas
loope
test
mov
or
jmp
lahf
ljmp
std
dec
xchg
sub
lahf
sbb
into
inc
cli
mov
aad
insl
xchg
ret
sar
bound
test
orb
nop
push
sub
lcall
push
sub
loopne
je
mov
add
sbb
arpl
pop
pop
jp
fs
mov
sub
ret
cmp
mov
sahf
pop
decb
mov
aas
rcr
bound
sbbb
dec
jno
sub
test
sbb
mov
mov
mov
pop
add
int3
rcrb
mov
imul
in
push
iret
jno
adc
inc
mov
call
aaa
ss
add
mov
js
push
jecxz
xchg
in
in
dec
adc
xchg
shll
mov
fninit
scas
out
aam
sub
mov
jbe
jne
push
gs
and
les
xchg
cld
cmc
movsb
cmp
adc
xor
xchg
jle
inc
in
mov
sbbb
xchg
data16
xor
push
fistl
inc
xchg
push
pop
cmp
lret
mov
xchg
das
add
imul
arpl
icebp
xor
jne
jge
cmpsb
cmpsl
aas
fidivl
jp
xchg
lahf
xor
gs
push
inc
push
pushf
out
and
enter
push
daa
repnz
std
mov
dec
int
jecxz
sub
mov
imul
cltd
pop
add
cmp
out
push
ret
out
mov
out
inc
mov
add
jp
jmp
hlt
mov
add
or
in
lock
pusha
dec
scas
ja
sbb
pop
push
jg
push
push
fidivrl
push
mov
pop
test
js
and
xchg
xchg
fisttpl
icebp
clc
inc
sbb
mov
in
rorl
cmpsl
out
mov
es
js
push
or
lret
ret
mov
jo
in
fwait
imul
jnp
inc
outsl
lret
lahf
fdiv
sbb
scas
inc
dec
imul
jnp
add
mov
repz
pop
mov
out
and
dec
loopne
jbe
push
repz
rep
lds
arpl
je
and
mov
add
popa
mov
out
daa
lea
push
sbb
jmp
lret
aas
jae
jbe
jp
or
xlat
xchg
and
out
cld
dec
dec
xchg
jge
repnz
jmp
jo
test
pop
push
fdivrs
add
jo
dec
pop
ljmp
push
mov
cmc
dec
cmp
loop
mov
incb
jg
mov
mov
flds
jae
push
cmc
xor
lret
mov
jo
loope
jmp
call
add
xchg
popa
inc
pop
mov
mov
xlat
mov
jne
sub
mov
push
stos
movsl
and
cmp
cwtl
push
jns
js
imul
lds
add
push
push
inc
lock
subb
lock
pop
outsb
sbb
inc
in
add
mov
rolb
xor
sbb
std
mov
dec
loopne
loop
out
xchg
cmp
cmc
inc
inc
mov
lret
sbb
sti
sbb
sub
lahf
fwait
add
sahf
mov
and
fbld
imul
push
cmpsl
xchg
add
pop
lods
hlt
dec
cs
sbb
pop
jbe
mov
gs
mov
hlt
orb
pop
aam
and
mov
lods
adc
jbe
in
stc
dec
pop
mov
sbb
sahf
subb
pop
mov
out
pop
sub
cmp
and
loopne
or
cmp
cmpl
and
adc
jo
xchg
dec
xor
je
insb
inc
jle
scas
sbb
pushf
jbe
dec
jbe
xor
mov
inc
sahf
xchg
jns
scas
push
cmp
jne
add
pop
cmp
out
insb
inc
sti
mov
xor
xor
les
push
sbb
pusha
push
pop
scas
sbb
or
setno
and
dec
xchg
xchg
push
jmp
add
icebp
cmp
sbb
enter
cmpsb
pop
std
sub
idiv
jecxz
jge
shr
ds
xor
stos
dec
dec
mov
mov
or
or
repnz
inc
pusha
cli
ja
sbb
pushf
addb
loope
pop
mov
dec
xor
jmp
ret
arpl
int3
ja
mov
xor
dec
push
mov
inc
sti
int
sahf
mov
xchg
lods
jge
xor
jle
popf
push
testb
je
mov
cmp
xlat
mov
lret
add
xchg
mov
jecxz
push
sub
shrb
orb
jns
push
xchg
mov
or
push
xchg
mov
test
adc
rcll
sbb
nop
and
jmp
aam
cmpl
xchg
sub
repnz
xor
adc
fidivs
adc
dec
sub
cmpsl
fstpt
adc
push
repnz
movl
adc
inc
pop
jbe
loop
add
adc
cmp
test
xor
cmp
push
mov
pop
xor
ret
or
fwait
jnp
imul
daa
lds
movsb
jae
cmpsb
hlt
outsb
jle
sarl
pop
jl
popa
mov
jae
xchg
cmpsl
jns
xor
jge,pn
int
lahf
sub
daa
cmp
in
sub
lods
sbb
mov
inc
mov
int
mov
sub
mov
push
ljmp
ljmp
lret
jg
mov
xchg
pop
and
and
cmp
mov
cmp
cmp
nop
add
in
int3
fs
insb
popa
jecxz
shlb
adc
inc
or
mov
sbb
imulb
mov
aaa
mov
aas
add
xchg
mov
sub
mov
push
call
pop
dec
gs
add
mov
loop
cmp
xlat
mov
mov
push
js
outsl
call
pop
shlb
mov
cmp
in
jbe
inc
and
test
jne
lret
or
lock
mov
lock
cmpsl
test
sbb
jl
addr16
into
mov
mov
cmc
dec
addr16
jl
jecxz
aaa
and
pop
add
cli
mov
test
mov
icebp
mov
push
inc
or
out
lcall
test
shlb
mov
mov
test
pop
dec
jg
push
andb
push
in
xor
mov
repz
adc
je
mov
push
inc
adcb
imul
adc
dec
mov
dec
jmp
in
sub
and
out
les
mov
sbb
gs
cmp
int
das
out
push
sbb
sub
call
inc
jmp
inc
aam
xor
ret
add
cmp
mov
sub
mov
insb
lahf
call
fildl
lods
test
xor
out
fcoms
mov
mov
mov
jbe
out
push
sub
popa
call
jp
mov
mov
push
add
cmp
int
aad
imul
push
sbb
sub
cmp
adc
or
xor
mov
xchg
dec
add
inc
sub
cmpsl
adc
dec
mov
sub
fsubrs
push
cmp
pusha
inc
icebp
jl
lock
fstpl
ds
lahf
inc
or
notb
faddl
test
movsb
arpl
arpl
daa
or
test
and
leave
or
in
xor
enter
repnz
movsl
cmp
and
jbe
adc
mov
cld
mov
mov
clc
mov
or
adc
testb
push
je
jne
inc
xlat
and
daa
nop
enter
es
mov
xchg
mov
dec
dec
stos
xchg
test
mov
xor
sub
mov
sub
sbb
fildl
sbb
add
ror
push
sbb
popf
adc
mov
out
inc
sbb
outsb
push
iret
add
xchg
inc
xor
pushf
pop
fldcw
inc
and
mov
push
fstp
repz
stos
inc
jae
sub
loopne
sbbl
and
xor
pop
scas
test
and
std
and
jmp
ret
or
dec
imul
adc
xchg
or
mov
into
jb
arpl
dec
jbe
fimuls
dec
subb
or
jns
fwait
hlt
fstps
pop
inc
sahf
scas
int
call
mov
cmp
call
sarb
inc
mov
rolb
or
stos
mov
jae
scas
adc
rdtsc
jp
adc
push
mov
lods
jb
cmpsb
fcompl
jmp
sub
push
and
inc
stos
aas
add
int
mov
xchg
in
dec
xor
je
cmp
cmpsb
jne
mov
popf
dec
xchg
inc
xor
inc
data16
sbb
loop
xchg
push
jo
adc
adc
scas
xchg
in
std
add
imul
lods
shlb
dec
pop
pop
push
fildl
xlat
push
sub
fs
lea
cmp
lods
xor
mov
or
mov
jmp
rorb
mov
imul
mov
adc
cmp
lea
pop
push
int3
adcl
aam
cmc
aam
push
sar
jne,pn
and
cltd
cs
lods
sbb
das
and
int3
cmp
jecxz
out
mov
cmp
clc
cmp
xchg
cld
xor
mov
lret
or
dec
inc
js
leave
mov
xchg
bound
pop
inc
pop
inc
scas
xlat
cmp
xchg
xchg
jmp
xchg
pmulhw
add
xor
mov
fstpt
cmp
fiadds
sbbl
pop
scas
xor
push
popa
int3
xor
xlat
popa
in
cwtl
fxam
sbb
dec
mov
dec
push
cmpsb
mov
mov
fmul
loopne
leave
cmp
hlt
mov
shlb
pop
xchg
xor
dec
mov
stos
mov
repnz
jbe
jbe
stos
jg
out
cmp
and
jl
adc
xchg
mov
icebp
sbb
test
add
xor
push
add
imul
cmpl
cs
sub
jnp
mov
mov
sahf
push
out
or
mov
sahf
sub
hlt
xor
ss
lret
mov
les
mov
pop
jl
repnz
mov
mov
or
push
lea
testb
lret
add
jae
pop
fs
mov
pop
or
cmc
push
sbb
inc
inc
mov
sbb
mov
stc
insl
xor
pop
lret
mov
inc
and
adc
lcall
add
rclb
push
mov
push
out
sub
jp
mov
xchg
inc
mov
push
adc
iret
call
in
out
pop
fdivl
insl
push
push
mov
mov
pop
dec
adc
push
jns
fcmovnb
stos
jno
mov
cmp
aad
das
pop
pusha
jp
and
and
push
pop
mov
icebp
or
aas
mov
pop
sub
jl
dec
and
test
clc
jnp
aas
ljmp
sahf
aam
mov
inc
xchg
jp
shrb
pop
sub
lods
xchg
dec
adc
iret
push
or
cmp
mov
rcrb
xchg
cmp
sub
lahf
sarl
adc
orl
mov
sti
das
xchg
lret
loopne
inc
add
and
outsb
xor
fwait
pushf
ret
js
cmpsb
loopne
push
gs
scas
push
test
push
cmp
ret
test
dec
ret
lcall
gs
repz
and
dec
dec
or
or
fs
sub
movsb
mov
test
lcall
adc
adc
bound
sarb
inc
hlt
mov
lcall
xchg
scas
movntq
xor
lret
mov
mov
ret
mov
pop
repz
mov
fcmovb
repz
add
nop
xchg
aad
push
and
ss
fiaddl
mov
push
bound
or
cltd
push
jge
aas
loopne
sbb
mov
jmp
subl
lret
adc
jle
aas
xor
adc
or
fidivs
mov
jmp
insl
mov
out
cmp
call
loope
cmp
rolb
test
cltd
sti
in
cmpl
mov
add
test
cmc
add
inc
sbb
jne
in
stos
fcoms
inc
cs
inc
sahf
cmp
sbb
xor
aam
sbb
js
adc
enter
lods
sbb
gs
push
jbe
loope
stos
cld
popa
stos
xchg
iret
sub
jae
pop
pop
pop
mov
test
push
or
into
idivl
xor
loopne
mov
testb
insb
out
jnp
popf
lcall
cmpsl
mov
sub
sub
jo
pushf
int3
mov
pop
sbb
fdivs
adc
dec
mov
sub
insb
mov
push
lahf
sbb
or
repz
out
adc
xor
pushf
das
ds
outsb
mov
lods
enter
add
sbb
sub
xchg
push
jecxz
inc
mov
push
shl
adc
imul
xor
or
jno
int
cmp
cmp
add
adc
ds
mov
adc
adc
jnp
push
mov
ds
das
sbb
and
mov
fsubr
loop
enter
das
cmc
imul
cli
jnp
xchg
xor
jb
mov
jne
aaa
in
orb
add
stc
and
in
xlat
mov
jmp
lcall
les
stos
push
xor
int
push
dec
cmp
push
xor
insb
insl
xchg
inc
mov
jl
movsb
xor
sbb
outsb
test
jl
daa
inc
xchg
into
mov
mov
mov
xchg
sub
cmp
enter
cli
push
pushf
pop
fisubrs
push
push
dec
push
or
and
js
pushf
jmp
dec
hlt
xor
outsl
mov
cmp
test
jb
jl
mov
mov
inc
ret
gs
mov
js
rcll
xchg
cmp
add
or
test
jno,pt
mov
imul
mov
ficoms
dec
mov
add
pop
pop
inc
jns
leave
and
addb
push
pusha
cmp
or
jecxz
gs
les
inc
mov
sarb
add
mov
js
popa
in
bound
jg
cmp
imul
stos
add
sahf
dec
arpl
add
cmpsl
popa
mov
jo
inc
push
adc
cmc
fcomps
fcmovu
lods
pop
and
int3
push
mov
push
popw
pusha
add
ret
fldl
rcll
jg
xchg
jns
adc
dec
cwtl
cld
fld
add
shll
mov
pushf
mov
arpl
jne
loopne
jno
cmpsb
pop
in
push
sub
std
mov
pushf
andb
pop
cmpb
jb
test
insl
fiaddl
mov
out
repnz
inc
mov
cld
iret
and
mov
mov
insl
pop
insl
enter
mov
gs
adc
js
popa
repnz
sbb
popa
jge
mov
orb
rcrl
xchg
mov
ds
fnstcw
jmp
jns
flds
mov
push
sub
push
call
or
sub
loop
dec
out
stos
int3
jae
out
push
pop
mov
push
pop
and
inc
inc
and
bound
mov
enter
out
adc
and
mov
push
arpl
addr16
loope
into
aam
push
dec
fisttps
ja
mov
test
jbe
dec
cld
mov
sbb
outsb
popl
dec
add
mov
sbb
std
add
pop
rep
mov
fistps
pop
mov
xchg
push
ret
daa
icebp
xchg
cmp
xor
jb
icebp
gs
mov
mov
mov
pop
movsw
mov
test
gs
jmp
mov
and
or
inc
aam
jle
iret
xlat
jns
xor
aas
sti
pop
dec
repz
bsf
fdivrl
stc
jecxz
movsl
int3
inc
shrl
ret
cmp
loope
pop
inc
int3
inc
fcom
sub
adc
mov
jp
xor
test
pop
add
shrb
mov
xchg
dec
mul
pop
xchg
and
and
pop
rcl
sub
mov
sub
out
sbb
jbe
push
xchg
cld
sbb
fwait
push
test
ret
mov
xchg
shlb
pop
cmp
inc
add
push
xor
xlat
fnsave
into
js
sar
das
inc
add
mov
pop
mulb
mov
sbb
dec
xor
cmpsb
fsubrl
pop
mov
sbb
out
icebp
jo
xor
inc
add
int3
xchg
mov
jns
mov
xorl
adc
cmp
movsb
sub
mov
mov
mov
add
and
out
pop
inc
and
push
notl
jp
dec
cmp
adc
stos
shll
pusha
xchg
xchg
ja
mov
mov
mov
push
mov
popa
sub
mov
push
inc
lea
add
add
mov
pop
bound
push
sbb
popf
imulb
dec
fsubrs
mov
movsl
xor
xor
cmp
and
mov
adc
and
jbe
cmc
in
fs
mov
lahf
inc
fcomp
push
jmp
ja
sbb
xchg
sub
lds
pop
aaa
flds
lock
sti
xor
ret
push
adc
push
aam
pop
cmp
sbb
sub
aaa
test
mov
int3
cltd
inc
xor
in
mov
xchg
or
dec
fs
mov
in
ret
hlt
pop
cmp
orl
xor
inc
push
mov
push
pcmpeqd
mov
pop
loope
jle
sub
fs
cli
inc
mov
out
hlt
push
lods
mov
cmp
mov
addl
adc
lods
out
bound
push
frstor
cwtl
int3
hlt
shll
or
aaa
pop
push
inc
or
loop
jl,pt
xchg
jmp
lods
add
mov
cwtl
ljmp
pop
test
fcomps
gs
sub
lret
fcoms
cmpb
sub
repz
popa
movsl
ja
add
jae
jge
iret
cmp
cmp
pop
xor
cmp
cli
mov
outsl
xor
int3
inc
sti
aas
cmp
xchg
xchg
int3
jmp
dec
dec
imulb
or
sub
aaa
gs
sub
popf
adc
test
dec
out
lds
jbe
into
data16
adcl
cmpsb
icebp
mov
test
scas
mulb
mulb
mov
cmp
jmp
fs
push
ret
sub
ret
inc
popf
nop
mov
test
arpl
cs
stos
inc
stc
cmp
jecxz
push
sbb
mov
cmp
sahf
sahf
sahf
lcall
jo
fisubl
stos
nop
dec
loop
mov
add
mov
dec
adc
adc
mov
jno
or
adc
push
jge
push
push
and
loopne
inc
sub
pop
ret
testb
cld
jmp
cmp
nop
push
push
sub
lea
and
jbe
int
mov
test
add
xchg
pop
adc
xchg
stos
push
and
bound
stc
movsl
fisubs
jo
mov
and
lea
mov
mov
push
cli
testl
or
xlat
mov
dec
out
dec
or
fcmove
mov
push
clc
scas
out
arpl
inc
insb
cmp
and
mov
xor
or
ljmp
jl
pop
xor
cmp
xor
outsl
sbb
arpl
mov
outsb
test
ret
in
dec
es
lock
addb
cmp
divb
insl
mov
sbbb
inc
xchg
adc
push
mov
out
mov
pop
pop
adc
and
lcall
or
mov
jo
inc
cmpsl
pop
cltd
inc
mov
outsl
and
icebp
js
jg
leave
repnz
lock
xchg
pop
mov
out
mov
mov
in
dec
addr16
push
enter
mov
sti
xchg
cmp
cmpsb
test
add
in
sub
mov
add
mov
xor
mov
imul
imul
xchg
dec
xor
clc
ret
mov
jne
popa
add
or
popa
inc
iret
rcrb
in
cmpsb
push
js
xchg
xor
xlat
fsubrs
cmpsb
pusha
xor
pop
lahf
sub
nop
mov
mov
js
int
mov
xor
and
xlat
dec
lret
into
or
adc
int3
adc
mov
dec
shll
mov
je,pt
aad
xor
insb
push
and
cmp
rclb
mov
sub
xchg
inc
in
les
mov
add
dec
les
xor
push
jle
call
orl
inc
lea
outsb
xorb
popf
emms
mov
jmp
push
mov
shlb
pusha
pop
mov
aaa
lock
notb
xor
in
fs
xchg
das
cli
mov
std
ja
jle,pn
sub
sti
mov
cmpsl
mov
inc
fisubrl
push
xchg
xchg
lcall
ret
fdivs
xor
sub
jo
popa
mov
fwait
addb
jecxz
cmp
lcall
gs
enter
dec
add
das
cwtl
sub
test
clc
aaa
jno
fsub
insl
mov
out
add
iret
rolb
sbb
mov
pop
jbe
fs
lea
orb
das
repnz
frstor
stc
pop
fwait
jb
mov
ja
dec
daa
mov
pop
mov
push
jne
enter
adc
fistps
cmp
das
frstpm(287
icebp
adc
xchg
aad
mov
push
ds
sub
rorl
or
xor
sub
mov
push
jg
inc
mov
dec
cmpl
into
test
mov
neg
pop
mov
and
jp
insb
jno
lret
test
pop
daa
in
sub
rcl
gs
jg
hlt
adc
add
std
pop
dec
cld
mov
mov
gs
lahf
mov
add
adc
xchg
sub
js
dec
inc
push
pop
pop
and
and
cld
popf
daa
adc
pushf
into
sbb
add
mov
mov
popf
aaa
xchg
cltd
fld
jae
push
jne
add
repz
pop
mov
adc
xchg
or
add
iret
outsl
jae
cwtl
jae
in
inc
sarb
dec
adc
dec
dec
jge
movsb
in
mov
lea
push
idiv
bound
sbb
ret
mov
jp
dec
push
in
das
push
pop
or
and
and
cld
push
jno
scas
push
jbe
add
out
outsl
jle
xchg
stc
mov
insb
add
cld
into
movsl
out
lods
add
std
lret
out
xchg
dec
lock
pop
push
fadds
pop
out
ja
sar
arpl
add
lods
loop
pop
jb
xchg
add
xor
pop
mov
adc
sub
ret
subb
stos
stc
leave
mov
test
fs
ret
into
out
je
jp
data16
das
cmpsb
lds
mov
arpl
pop
cmpsb
mov
lock
es
loope,pn
iret
addr16
adc
pop
outsb
sbb
ja
lods
fcmovnbe
pop
dec
xchg
jne
out
int
pop
stos
insb
cmpsb
aaa
sbb
mov
pop
insl
jbe
sub
dec
push
jp
out
add
shl
lret
orb
sbb
push
jbe
pop
sub
or
push
add
fisubrs
gs
in
cmp
or
ljmp
lock
xchg
movq
dec
jbe
dec
xchg
shlb
xor
dec
dec
lahf
jne
jg
out
fwait
inc
xor
pushf
jnp
movsl
test
sbb
sub
lcall
rclb
pop
imul
cmp
ret
pop
and
out
dec
cwtl
int
test
push
ljmp
mov
inc
jo
jle
imul
inc
ljmp
sbb
enter
mov
aam
add
xor
fildll
jg
push
mov
insb
push
in
dec
dec
mov
sub
movl
pop
xchg
and
mov
pop
arpl
adc
pop
pop
cli
jmp
cmp
mov
insb
mov
pop
stos
fnstcw
mov
jge
or
xchg
lods
test
and
and
rorl
repnz
add
jnp
xlat
pop
and
sbb
jmp
xchg
rclb
iret
cltd
add
xlat
loop
xor
loop
sub
or
xchg
mov
jmp
mov
shlb
lds
mov
mov
xor
mov
push
push
mov
aam
pusha
cmp
outsb
xchg
enter
dec
lds
mov
ret
imul
test
jl
outsb
cmp
xlat
loop
pop
adc
jmp
mov
adc
arpl
test
mov
add
dec
sbb
lea
push
dec
xor
fcoms
int
add
xor
stos
mov
and
lock
jge
ss
push
jbe
sub
dec
or
xor
xor
xchg
loop
adc
bound
xchg
adc
out
dec
or
shlb
stos
inc
pop
test
inc
mov
inc
jae
test
adc
lea
lret
je
mov
js
mov
xchg
dec
xor
dec
xor
lahf
test
pop
loopne
pause
jecxz
cwtl
lret
es
stos
and
mov
pop
in
xor
loop
add
sub
mov
arpl
cs
pushf
mov
loopne
shll
lahf
cmpsb
imull
mov
jne
xchg
sahf
push
sub
adc
dec
mov
aam
popa
dec
cmp
cmp
scas
pop
test
shrl
push
xor
push
jg
repz
sti
pusha
in
cmc
jge
mov
adc
test
mov
sarb
mov
dec
pop
dec
sbb
addr16
cmp
lcall
mov
subb
out
jb
mov
push
inc
push
mov
fcmovbe
dec
jge
ja
jmp
cli
jno
movsw
xchg
cwtl
mov
jg
std
sub
dec
inc
lds
mov
dec
loope
je
mov
clc
jo
push
xor
mov
cmpsl
sub
inc
int3
sub
dec
jle
es
fidivrs
xchg
mov
addb
pusha
call
mov
xchg
and
cmp
mov
scas
insb
inc
int3
movb
inc
jp
icebp
sub
pop
imul
pop
pop
movsb
dec
push
push
movsb
mov
dec
jo
xchg
lret
aas
cwtl
mov
bound
repnz
xor
std
and
xchg
jo
negl
imul
in
negb
cmp
insb
outsl
sbb
cmpsl
sbb
adc
das
xchg
aam
xorb
adc
enter
mov
stos
rcrb
sub
push
and
sub
or
xrelease
js
shl
test
mov
es
and
je
in
popf
mov
or
inc
sub
and
shlb
jns
sub
fstps
xor
jnp
popa
loop
and
ja
cwtl
out
loope
mov
and
test
adc
inc
mov
jge
mov
pop
and
cmpsb
jg
iret
lods
or
or
xchg
and
mov
adc
int
mov
adc
and
fdivp
test
jl
or
mov
cmp
jnp
in
mov
jmp
pop
adc
or
fs
testl
cs
fsubl
outsb
push
sbb
dec
loop
cmp
cltd
shrb
cwtl
popf
imul
in
nop
dec
pop
shll
cmp
pushf
cmpsl
pop
mov
enter
push
dec
pop
sbb
shrl
pop
out
loopne
jl
sahf
rcrb
push
fs
pop
or
int3
pusha
repnz
mov
or
pop
cli
out
fdivl
or
or
mov
in
or
jmp
dec
cs
add
call
mov
pop
mov
into
inc
add
sbb
mov
sub
jns
inc
sub
call
in
clc
mov
cmp
pushf
scas
mov
mov
les
mov
outsl
jae
dec
pop
icebp
mov
xchg
push
pusha
xor
aam
cwtl
add
xor
inc
adcb
fnsave
push
int3
mov
xor
cmp
roll
je
mov
pop
cwtl
imul
dec
jns
outsb
push
aad
and
mov
xchg
pushf
std
sub
mov
scas
fnstenv
sbb
mov
sub
jp
mov
in
push
xor
fistl
je
mov
xchg
add
adc
fwait
aas
dec
mov
sub
popf
sub
enter
inc
add
inc
jmp
pop
es
lret
lock
cmp
push
mov
mov
dec
mov
incl
jb
mov
out
xchg
movsb
xorl
xorb
ret
push
loope
mov
int
sub
inc
subl
out
addr16
and
push
inc
stos
ret
xor
aad
push
xor
mov
cmp
pop
pop
jecxz
adc
mov
jno
lcall
sub
push
mov
aaa
dec
decl
in
jp
scas
lcall
sbb
stc
outsb
enter
jp
push
outsl
adc
call
mov
inc
mov
xor
dec
pusha
pop
pop
mov
fmull
cld
sub
and
or
adcb
jmp
xor
lea
inc
fwait
jle
inc
in
pop
imul
dec
je
push
sbb
xor
lods
jne
or
xchg
adc
rolb
stos
dec
jae
push
pushf
lret
ljmp
push
data16
fcompl
xchg
adc
cmp
dec
loopne
hlt
or
jne
sub
stos
or
mov
gs
push
shrd
and
inc
in
and
cwtl
jbe
or
stos
ss
xchg
fs
push
mov
sub
dec
loop
iret
or
jl
insb
push
push
popa
enter
and
loopne
lret
pop
in
lds
mov
js
loope
push
push
lahf
jp
cmovp
adc
inc
jno
jne
dec
insb
jmp
arpl
gs
mov
idivb
and
inc
cmc
or
push
add
in
negl
or
ret
pop
pop
push
movsl
adc
cmp
xor
and
aaa
fcmovb
fwait
dec
lock
enter
mov
rolb
outsl
push
popf
cld
xchg
sub
push
iretw
xchg
cmp
mov
lea
add
and
adc
jmp
add
xchg
add
xorl
aam
mov
ja
gs
and
stos
or
mov
out
xor
xor
push
repz
mov
pop
loopne
pop
int
push
stos
inc
jecxz
ljmp
dec
nop
test
and
xchg
inc
mov
bound
add
and
push
negb
jmp
mov
aam
cltd
andb
sub
pop
jbe
jae
loopne
pop
and
or
push
js
stos
sar
sbb
xchg
inc
lds
xor
cmp
movsl
xlat
cld
sub
mov
int3
cli
lret
lock
popf
push
cmp
pop
cmp
cmp
aas
dec
aam
ja
xor
loop
fwait
push
inc
mov
dec
inc
pop
cmp
add
std
push
lods
add
cmp
in
and
test
call
es
ficompl
ret
or
inc
inc
or
xchg
scas
jmp
gs
mov
mov
push
cld
loop
push
fsubl
pop
jbe
cs
out
pushl
call
push
sub
fndisi(8087
dec
adc
cmp
bound
mov
out
inc
in
fstpl
ljmp
add
repnz
push
sarb
cwtl
insl
mov
jb
cmp
mov
fs
outsl
leave
pusha
inc
inc
in
mov
gs
jbe
add
sahf
loope
aas
push
sbb
aaa
out
cmp
jnp
hlt
insl
stc
inc
push
ficompl
jnp
pop
imul
fimuls
cmp
mov
sub
add
pop
mov
rcrb
add
out
ja
dec
xchg
sbb
sbb
in
fs
int3
lea
xor
push
loop
or
subl
aad
cmovge
in
or
outsb
push
mov
popa
jbe
xchg
adc
vhaddpd
test
or
std
mov
cmpsb
add
aam
arpl
push
cmpsb
pop
loopne
mov
es
out
mov
arpl
mov
int
es
adc
sbb
xchg
and
mov
cmp
xchg
outsl
xor
push
mov
enter
mov
jmp
bound
jmp
adc
xchg
shr
or
sti
lea
jp
jmp
insl
scas
jp
add
imul
dec
sub
cmpsb
xchg
cmpsb
adc
loopne
pop
int
cmp
mov
and
aad
arpl
push
push
fimull
mov
mov
roll
ret
idiv
add
mov
leave
test
jmp
and
jmp
xor
jne
sbb
sar
cmpsb
out
xor
insb
push
aaa
inc
dec
dec
in
xchg
test
xchg
adc
scas
imul
xor
outsb
loopne
ss
mov
add
mov
jbe
aaa
dec
mov
fsubl
aad
and
mov
cmp
daa
inc
xchg
in
push
and
inc
roll
ljmp
pop
filds
adc
imul
add
push
push
imul
je
pop
xchg
mov
fistl
cmp
gs
mov
in
stc
ja
int
imul
es
jnp
xchg
push
pop
daa
push
inc
and
cmc
cs
or
push
lret
sub
insb
inc
andb
mov
int3
decl
outsl
addb
add
inc
test
out
icebp
outsl
mov
sbb
cs
aad
jmp
cmp
mov
shll
lahf
test
or
loope
int3
push
icebp
cmpsb
sub
mov
dec
sub
adc
idivl
mov
lret
push
or
orl
sbb
mov
cmc
popa
in
push
pop
xchg
insl
mov
setl
dec
dec
mov
es
push
nop
mov
das
pop
xor
dec
push
and
sub
dec
hlt
clc
rcl
and
cmc
lret
dec
outsb
push
inc
mov
add
fstp
push
les
mov
add
mov
outsl
or
add
xor
movsl
movsb
call
sub
xchg
or
mov
pop
adc
repnz
mov
fwait
popa
sub
or
xchg
or
loop
pushf
ljmp
pop
mov
iret
mov
mov
sti
fldt
sbbl
sbb
fidivrl
lock
fdivl
sub
or
or
sbb
jbe
push
or
lods
jl
dec
add
inc
orl
add
outsl
mov
adc
out
ret
mov
xchg
push
push
imul
xor
lahf
mov
lods
nop
adc
cs
bnd
lcall
sbbb
bound
jne
lea
add
ds
rorl
imul
fstp
cmp
jns
je
mov
and
ret
and
xchg
cmp
mov
gs
test
hlt
out
push
mov
push
ljmp
aas
xlat
mov
and
sbb
jmp
xchg
mov
mov
push
mov
movsb
test
stc
jbe
sbb
leave
js
in
inc
or
pushf
imul
ficoml
xchg
lods
lahf
or
jecxz
dec
xchg
inc
in
or
leave
inc
xchg
in
xorb
test
jg
rcll
pop
jge
out
mov
test
mov
sti
cmp
xor
mov
aaa
stos
push
push
lret
lods
mov
in
scas
xchg
out
scas
pop
jb
pop
adc
jg
push
ja
shll
aad
sub
fstpt
mov
divb
mov
sahf
stos
jae
sub
fildll
pop
in
xor
cmpsb
mov
cli
hlt
fxch
jnp
pop
mov
pop
std
and
mov
popf
pop
jp
jge
mov
jmp
adc
in
dec
sahf
jno
pop
adc
jae
das
pop
pop
daa
xchg
push
pop
add
aam
cmpsl
mov
jnp
jne
sbb
sbb
push
and
fs
jo
aaa
dec
or
inc
mov
aas
sbb
incl
jnp
mov
fistpl
add
pop
jne
cmp
out
mov
push
das
dec
fsubrl
test
add
mov
pop
push
stc
xchg
ficoml
fdivrp
in
mov
arpl
outsb
iret
ss
data16
and
mull
push
fs
ret
jae
sub
inc
and
lcall
inc
pop
es
bound
lcall
out
movsb
loopne
into
testl
sub
xchg
ret
and
lahf
or
mov
or
push
jl
addr16
sbb
cmp
push
cmpb
cltd
xchg
mov
and
add
es
or
clc
lea
pop
push
adc
xchg
push
sti
in
push
pop
xor
adc
pop
outsl
rclb
mov
pop
pop
out
jge
adc
jne
cmpsb
dec
lcall
bnd
inc
push
dec
fs
dec
int3
mov
outsl
add
inc
std
push
test
jo,pn
fsubrl
aad
mov
adc
push
subl
inc
loope
mov
lods
add
fisubs
jl
jne
inc
inc
pushf
push
sbb
nop
pop
imul
cmp
or
loopne
ret
rep
jo
pusha
jb
push
jg
jg
mov
and
add
cmp
jle
lret
pop
push
pop
xor
jb
sbb
out
jbe
or
xchg
adc
and
les
mov
loop
addr16
xor
push
out
hlt
and
test
dec
fmuls
lods
mov
and
sarl
xor
xor
push
add
or
jmp
mov
cmp
add
mov
imul
pop
or
sbb
test
add
jp
mov
shrl
shll
outsl
dec
pop
fwait
insl
and
push
push
loope
rorb
xchg
jle
cli
outsb
xor
leave
fidivrl
jle
push
push
mov
or
test
repnz
mov
int3
or
sub
mov
pop
lcall
aaa
sbb
xor
or
popf
sahf
popf
lret
int3
stc
push
sar
pushfw
cmp
add
xchg
lret
xchg
cltd
sub
mov
sub
lret
jns
push
or
inc
fidivl
mov
dec
ret
and
fwait
lret
stos
cmp
repnz
mov
clc
mov
xor
xchg
pop
loopne
je
xor
inc
dec
cwtl
xchg
enter
aam
jg
dec
pushf
into
inc
adc
loope
and
aaa
dec
sbb
cmp
jo
cmpsb
cmp
addr16
movsl
jbe
pop
test
cmp
adc
mov
dec
mov
fadd
sbb
mov
mov
xchg
orl
stc
inc
shll
mov
jno
and
xchg
divl
mov
lret
pop
jae
dec
jle
xor
xchg
mov
je
and
cmpsb
es
dec
scas
les
jne
push
les
adc
scas
fcmovnu
notb
mov
xchg
inc
mov
in
stos
add
mov
mov
sbbl
in
mov
dec
call
enter
pusha
xchg
sbb
fildl
dec
adc
fildll
faddl
arpl
mov
mov
push
lods
add
ljmp
fnstenv
pop
or
mov
and
cltd
aas
cltd
mov
push
in
xor
fildll
push
cmp
cmp
or
cmc
fisubl
movsb
sub
xlat
dec
shrb
sbb
jno
jge
hlt
fs
sar
fnsave
lahf
add
sub
adc
add
movl
add
jae
outsb
pop
pushf
mov
pop
inc
xchg
mov
lret
stc
adcb
jp
pusha
stos
orb
pop
cltd
cli
lods
pop
ss
lahf
mov
sbb
mov
adc
sbb
fisubrl
xchg
inc
daa
mov
pop
or
popf
push
daa
and
jb
push
pop
push
jne
dec
mov
inc
inc
and
outsb
fmuls
cmp
lret
adc
ss
add
push
in
pop
push
test
add
sbb
xchg
mov
mov
or
jno
xchg
push
shr
mov
cmp
lcall
jge
repnz
jnp
dec
ret
jg
dec
int
and
mov
xor
ret
dec
in
dec
sub
push
int3
movsl
mov
std
jnp
dec
pop
fxam
in
dec
int
test
or
fwait
inc
fwait
xchg
push
add
pop
mov
mov
out
in
push
sub
mov
mov
push
push
jge
cs
notb
pusha
xor
into
xor
adc
cli
inc
enter
data16
and
jle
xor
mov
lcall
xchg
adc
and
jb
lea
popa
sub
mov
push
adc
aad
fnsave
popf
repz
xor
mov
push
sub
sbb
jg
mov
cmp
jmp
ds
jg
int
outsb
cmp
cmp
jo
dec
lret
aaa
mov
cwtl
addr16
in
negl
pusha
pop
inc
lds
stos
int
lret
repz
push
iret
stc
test
sub
mov
xchg
pop
mov
subb
fdivrs
test
andb
scas
fidivs
push
mov
xor
xchg
insl
stos
imul
add
sbb
movsb
mull
std
adc
mov
lods
mov
push
lcall
jae
popf
pop
mov
jne
mov
out
lret
lret
dec
xchg
fsubrp
sub
lahf
mov
sbb
and
dec
js
xor
and
push
sbb
sub
sahf
mov
cmp
xor
jg
mov
jl
lods
sub
scas
and
jle
or
fnsave
mov
aad
and
adc
mov
dec
out
or
push
dec
or
fdivp
lahf
add
xchg
pusha
dec
jge
push
dec
call
jg
cmp
xor
out
dec
shlb
dec
xor
pop
dec
pop
pop
cmp
test
cmpsb
push
mov
insb
idiv
adc
bound
cmc
movl
ss
fmuls
inc
dec
mov
mov
push
ret
push
mov
xchg
and
mov
mov
sub
mov
mov
shlb
jne
sub
sub
pop
jo
and
cmpsb
jp
xor
shll
mov
ret
push
dec
cmp
xor
arpl
lret
cmpsb
xchg
sbb
cwtl
mov
rcr
adc
aaa
xchg
push
call
sarb
addl
mov
mov
xchg
fmul
push
fnsave
add
inc
mov
jo
push
aaa
push
jp
lods
dec
dec
jbe
sub
jg
add
aas
dec
call
add
stos
pop
jle
cld
cmp
mov
mov
mov
cmp
xor
stc
push
and
fwait
and
lahf
jnp
xor
mov
fs
enter
imul
imul
rcll
repz
cmp
mov
addr16
cmp
mov
jno
and
pop
sub
fsubrs
mov
loop
das
sub
lahf
mov
push
mov
test
xor
mov
fcomps
cmp
push
stos
xor
pop
mov
jae
cmp
stos
jg
push
icebp
add
in
stos
lcall
pop
negl
fisubl
test
repz
dec
xor
std
jo
jno
addr16
fwait
and
sbb
ret
ret
and
pop
inc
mov
mov
lret
js
inc
pop
cmc
xor
inc
icebp
pop
or
dec
mov
lcall
rcll
mov
cmp
or
mov
xlat
fistps
inc
push
xor
push
je
jmp
adc
sbb
mov
cli
les
push
sahf
sub
xchg
in
fbstp
pop
clc
fadd
cmp
push
lcall
adc
adc
cli
std
jmp
add
ficomps
push
pop
or
filds
mov
and
pop
sub
xor
aam
loop
scas
popf
cmpsb
dec
or
xor
sub
inc
outsl
addr16
push
jmp
jle
push
fiadds
pop
cmp
mov
push
sub
mov
xor
dec
push
mov
xor
dec
inc
add
cmpsl
arpl
js,pt
test
ds
jg
lods
adc
mov
and
jnp
sub
pop
inc
loopne
ljmp
aad
loopne
test
popf
lret
pop
fnsave
mov
adc
cmp
les
scas
xchg
and
push
and
pop
cmpsl
sub
negb
xchg
out
pop
adc
push
rclb
lods
and
and
cmp
cmp
sti
pop
out
pop
andl
lcall
js
mov
sbb
mov
sbb
mov
insb
hlt
lods
popf
push
out
cmpsl
push
pop
scas
or
push
jne
out
inc
inc
les
ds
lock
movsb
sahf
inc
icebp
scas
xchg
xchg
xchg
pop
pusha
or
xchg
shrl
push
pop
pop
push
popa
mov
sbb
jno
std
dec
cltd
or
leave
mov
jbe
das
jecxz
call
cltd
fs
lea
pop
clc
test
dec
stc
dec
cli
nop
cwtl
shl
or
mov
xchg
call
xor
stos
xchg
ficoms
push
lahf
dec
popf
push
jecxz
xor
cmp
cmp
je
lcall
push
or
insb
es
je
nop
ja
mov
pushf
xlat
push
mov
enter
xlat
adc
xchg
loop
pop
lret
adc
xorb
dec
jl
mov
lods
insb
pop
out
mov
aad
cli
adc
and
jle
inc
dec
mov
mov
sub
cmp
add
outsl
jge
adc
cmp
inc
lock
xchg
or
jl
adc
adc
sarl
bound
cmp
mov
std
or
test
mov
mov
sub
decb
xchg
loope
inc
dec
or
dec
mov
in
aam
dec
jbe
mov
test
xchg
popa
out
mov
movsb
pushf
cmpsl
mov
mov
sub
loop
dec
xlat
mov
and
incb
or
addb
cs
lea
jp
inc
loopne
imul
xchg
jmp
cli
inc
int3
test
push
roll
sti
adc
or
sbb
stos
pop
lock
mov
jb
adc
push
and
pop
arpl
pop
or
icebp
imul
jecxz
sahf
push
icebp
int
sbb
and
call
test
or
sbb
repz
inc
jecxz
subl
ds
mov
push
xchg
mov
pushf
test
rcl
mov
es
ss
outsl
cmp
xor
cmc
fisubs
cmp
insb
cmp
imul
test
fsubrl
mov
add
push
aad
fistpl
int3
sti
mov
shld
sbb
jmp
push
mov
cmc
pop
adc
sub
mov
std
xchg
jecxz
lahf
inc
jmp
scas
mov
and
xchg
cs
bound
or
inc
mov
mov
jge
or
out
sbb
sub
daa
adc
nop
sub
jecxz
sarl
das
jmp
sbb
sahf
fldt
inc
in
insb
add
sub
sete
cmpsb
movsl
test
lret
mov
aad
in
jle
pop
dec
adc
ret
repnz
aaa
in
mov
cli
mov
xchg
xchg
fwait
adc
mov
clc
imul
dec
je
xor
cmc
and
pushl
hlt
jne
pop
xor
push
rolb
outsb
dec
mov
popf
loop
xlat
je
cld
xchg
sub
adc
cmp
icebp
xor
bound
ds
push
dec
enter
ja
add
enter
rcll
jb
push
icebp
std
cmp
add
gs
mov
cmp
xor
clc
rcr
adc
pop
popa
outsl
cmp
push
sahf
popa
or
sahf
adc
in
push
in
sub
inc
aam
sbb
push
ja
outsb
inc
out
int
imulb
bound
hlt
pusha
pop
sub
mov
pop
jecxz
sti
dec
mov
inc
div
inc
add
push
iret
aad
or
shll
shrb
xchg
stc
cltd
ja
push
cmp
adc
cmp
daa
add
add
cmp
dec
enter
adc
out
push
or
or
inc
and
insl
mov
mov
cmp
sub
into
push
and
add
rcrb
add
pop
movl
mov
push
pop
or
dec
xor
inc
mov
mov
jge
je
and
bound
adc
mov
movsl
stc
ficompl
jg
mov
pop
enter
clc
cmp
xchg
mov
jp
btl
fs
mov
push
jno
xchg
adcl
mov
lock
sahf
adc
rcl
stos
inc
ja
stos
xchg
jno
inc
inc
sbb
cmpsb
mov
cmp
pop
push
scas
pop
std
andb
or
adc
or
xchg
mov
loop
push
adc
test
mov
stos
mov
pop
push
fldcw
lea
add
push
inc
pop
pop
dec
inc
inc
cmp
sub
jp
mov
xchg
adc
ljmp
aad
or
xor
pop
mov
loop
sbb
cmpl
out
cmpsb
out
xor
xchg
sbb
jle
orl
jmp
add
dec
in
push
jne
xlat
inc
jne
add
fimuls
enter
xlat
sti
daa
cmp
dec
adc
in
pop
pop
sbb
cmp
sub
les
pop
daa
test
add
in
jne
sbb
jp
or
sbb
inc
test
lods
pop
fnstenv
lock
out
inc
stos
push
movsb
mov
fbld
fildl
in
xchg
pop
fsubl
xor
orb
add
subb
rcrl
popf
ret
mov
repz
test
dec
jl
inc
pop
xor
mov
jnp
cmp
mov
enter
repz
push
xchg
in
dec
adc
pop
jle
jge
pop
mov
rolb
pusha
inc
dec
add
sub
lret
dec
pop
push
fildl
cmp
insl
ljmp
add
repnz
dec
mov
js
ficompl
test
fisubrs
mov
bnd
add
dec
pusha
mov
mov
dec
dec
and
sub
cmp
cmp
int3
xor
push
and
cld
cmc
pop
mov
push
xchg
inc
sub
loop
mov
or
inc
fmuls
push
cmpsb
mov
out
ret
sbb
fdivrp
sbb
xchg
or
jecxz
xor
les
out
add
pusha
into
int3
repz
inc
fnstsw
cmp
js
jno
shrb
inc
jmp
lahf
mov
scas
leave
out
enter
ljmp
xor
sbb
pop
inc
adc
in
cmp
ds
and
enter
add
pop
xchg
jmp
mov
lods
or
xchg
lods
add
push
sbb
imul
in
and
adc
jo
pop
les
dec
sti
mov
ret
or
sahf
xchg
cli
xchg
and
rcrl
cld
int3
fstl
je
movsw
lock
int
jle
dec
lcall
or
push
mov
jno
stos
push
dec
jae
ret
insb
fwait
push
xor
push
push
ss
outsl
sbbl
js
lods
shl
les
inc
fiadds
fdivrs
bound
cltd
imull
mov
lea
sub
sub
inc
adc
fmuls
jmp
scas
in
arpl
and
jns
cwtl
push
jl
loop
and
stos
repz
aad
fldl
or
push
xor
cmp
or
out
jo
xlat
push
lock
repz
or
mov
jnp
jb
jmp
jns
add
test
pusha
loopne
scas
fst
imul
xor
adc
jbe
lea
pop
inc
imul
test
pushf
cmp
xchg
xor
sbb
popa
mov
lret
fstpl
xor
adc
outsl
cmp
pusha
adc
cmp
leave
aaa
call
or
test
mov
das
mov
movsl
push
shll
call
dec
mov
negb
lods
stos
jmp
or
jbe
imul
add
jo
push
fs
and
or
ljmp
mov
add
cmpsb
out
pop
stos
mov
dec
xchg
push
movsb
dec
dec
ret
loope
hlt
inc
pop
or
jnp
sbb
lahf
push
and
int
xchg
cmc
mov
cmpsb
rorb
mov
adcb
mov
lea
cltd
aas
push
mov
add
lea
stos
dec
inc
gs
jne
xor
outsl
inc
and
shll
mov
icebp
xor
icebp
int
ds
cmpsl
mov
jbe
addb
jg
and
push
inc
push
jae
iret
fcoml
ret
adc
lret
sub
dec
rcr
ror
cvtps2pd
cmpsl
sbbl
xchg
int3
icebp
xchg
adc
fbld
or
cmp
adc
rcrl
adc
mov
movsb
loop
cmp
or
mov
lret
push
jne
sub
bound
fsubrl
leave
or
xchg
aas
cmc
mov
mov
out
sub
jge
popf
movsb
in
and
push
rclb
add
out
inc
cmp
pusha
jp
pushf
lahf
dec
xlat
lea
cvtdq2ps
movsl
fildll
js
icebp
mov
inc
jae
adc
in
mov
roll
xor
dec
fists
mov
cmpsb
hlt
stc
popf
pop
mov
pop
push
jno
pop
lret
enter
cwtl
or
ss
cmpsb
movsl
fcom
aad
mov
add
cmpsb
push
and
iret
cmc
jbe
push
pop
mov
dec
and
ror
jmp
cmp
push
jo
mov
inc
pop
jg
and
xchg
push
sub
shlb
gs
xor
cmp
inc
pop
movl
int3
pop
sti
mov
sub
add
xlat
xchg
mov
outsb
sub
push
adc
cmp
sub
or
push
leave
jne
lahf
shlb
leave
outsl
movsb
pushl
cli
adc
dec
mov
cld
mov
dec
test
ljmp
pop
cmpsb
shrb
sub
push
jecxz
fcomps
ljmp
scas
dec
in
xchg
lods
inc
jecxz
pop
push
push
imul
inc
pop
mov
xor
lea
xchg
push
movq
popa
mov
ret
sbb
icebp
mov
push
mov
pop
shl
push
jbe
mov
pop
pop
sub
sti
ja
lods
out
ja
mov
lahf
rcr
sar
aas
je
xor
cmp
les
notb
pop
test
sti
lcall
mov
int
cmpsl
in
jge
rol
mov
pop
call
rol
cmpsl
cmp
ret
jne
or
cs
hlt
popa
mov
into
adc
repnz
jne
mov
cltd
and
outsb
pop
flds
add
cmp
gs
or
hlt
enter
dec
insl
pusha
pop
mov
jne
mov
leave
lods
adc
inc
push
mov
out
push
sbb
pop
cmp
ret
mov
out
repz
mov
out
mov
movsb
cmpsb
mov
pushf
pop
and
orl
test
ljmp
loope
dec
adc
push
lahf
jp
sar
jno
push
scas
in
mov
ret
xor
insb
repz
sbb
adc
mov
sub
rolb
cld
cmc
jbe
mov
stos
adc
inc
xchg
cmp
sbb
jno
cmp
pop
sub
xchg
outsb
cmp
inc
pop
in
sbb
into
mov
xchg
test
fstp
mull
notrack
ss
mov
mov
int3
pop
arpl
movsl
add
push
stos
andb
mov
lock
fs
xor
mov
adc
push
subl
test
inc
test
das
pusha
lea
rcrl
test
xchg
dec
adc
arpl
jmp
aas
jbe
dec
int3
xor
cwtl
jmp
aad
mov
inc
push
int3
fnstcw
sbb
or
pop
test
cltd
outsl
scas
rorb
imul
into
das
inc
aas
mov
clc
and
dec
push
sbb
lea
xchg
or
popf
cmp
jo
test
mov
pop
lahf
mov
and
xchg
inc
imul
push
pop
add
or
sub
mov
std
jp
sub
in
iret
movl
aam
sub
cmp
jl
push
add
es
mov
push
leave
xchg
push
stos
shrl
sub
repnz
call
add
insb
and
cli
in
iret
mov
outsb
or
call
mov
cmp
repnz
jnp
pop
dec
cmp
pusha
shlb
insl
movsl
pop
xchg
inc
sbb
cmp
or
lods
adc
adc
xlat
xor
sti
inc
mov
sbb
sbb
dec
jl
mov
shr
pop
cmp
pop
xor
das
adc
xchg
addb
call
push
push
xchg
fbstp
jbe
add
fwait
mov
subb
imul
pusha
adc
pushl
loop
mov
and
arpl
mov
push
push
sbb
sub
dec
and
mov
stos
add
aam
sbb
pop
fnstenv
push
flds
xlat
inc
outsb
add
stos
lds
and
or
push
jnp
inc
out
sahf
daa
negl
jle
push
add
repz
sbb
andb
mov
xchg
mov
out
mov
repnz
in
xor
imul
push
add
lcall
fists
xor
fucomip
xchg
dec
xchg
xor
mov
dec
sti
jg
add
dec
test
iret
mov
lahf
aas
in
mov
sub
das
cli
inc
es
pop
inc
popa
sbb
je
add
inc
push
fistpll
jmp
ret
xchg
sub
cmpsl
jge
xor
mov
loopne
mov
xlat
xchg
mov
mov
out
pop
sar
bound
dec
inc
cmp
fidivs
icebp
sti
push
insl
add
cwtl
and
cmp
push
ss
cmp
int
or
sub
or
incb
sbb
and
mov
mov
dec
mov
cltd
imul
mov
mov
mov
addb
mov
pop
notb
insl
in
adcb
lcall
inc
iret
cmp
lahf
imul
cli
mov
lds
sti
push
out
fisubs
out
push
cmp
sbb
jno
ret
mov
iret
sub
popf
sbb
xor
cmp
mov
mov
and
mov
mov
lods
outsb
xor
jge
xor
mov
lret
fidivs
inc
sub
sahf
cmp
fldl
jne
in
aas
repz
shlb
aas
adc
xchg
push
ljmp
pop
cs
std
push
push
dec
sub
and
out
push
sti
sbb
out
cmpsl
rclb
rcrl
jmp
lods
sub
xor
pop
shlb
cwtl
sahf
cmp
daa
je
mov
mov
adc
dec
and
or
in
clc
sub
push
outsb
mov
sub
fcompl
sub
push
pusha
mov
jecxz
cmp
popf
jno
lret
inc
xor
jge
in
vpaddusb
jmp
incb
pop
movsl
pop
inc
mov
or
mov
cs
jg
fdivrs
movsb
in
mov
dec
fcmovne
cmp
sub
sub
test
add
cmp
or
daa
in
fstpl
mov
push
push
dec
std
sbb
and
fstpt
mov
xchg
ret
and
leave
adc
loop
jmp
enter
scas
popa
fcoml
addr16
insb
push
mov
lcall
jno
mov
std
movsl
div
mov
cld
iret
push
imul
inc
dec
adc
setg
cmp
call
dec
std
xrelease
xchg
mov
jle
pop
or
push
out
inc
push
or
movsb
shr
ficomps
push
pop
std
scas
push
insb
and
insb
jecxz
mov
call
push
test
popf
inc
mov
cwtl
xor
ds
jb
mov
sub
and
inc
pop
sub
js
mov
fsubr
psubusb
sbb
jb
jno
nop
scas
stos
in
dec
daa
jb
and
xor
in
inc
into
add
and
jns
cmp
dec
and
pop
jne
int
jbe
icebp
faddl
in
scas
ja
xor
loop
pop
mov
mov
jo
mov
jbe
mov
dec
ss
addl
xlat
xlat
fucomip
push
dec
lea
lods
lds
pop
mov
cmp
js
xchg
call
in
sti
xchg
dec
mov
and
cmp
hlt
cmp
cli
jecxz
pop
and
sbb
je
stos
pop
in
data16
pop
imul
jg
imulb
push
jbe
pop
cmpsl
mov
xor
cmp
jns
xor
ja
icebp
gs
fisubl
xor
sub
mov
movsl
lret
adc
pop
loope
inc
push
lcall
mov
xchg
arpl
addr16
mov
repz
cmp
pushf
shlb
lcall
loope
aad
ljmp
xor
or
adc
mov
jno
fistps
call
xorb
sub
cmpsb
xor
scas
cmp
lea
cmp
imul
xor
pop
and
clc
jp
lret
aad
jg
mov
leave
popf
out
pop
bound
add
sub
fwait
jecxz
and
or
pxor
in
gs
dec
hlt
add
push
sbb
dec
adc
mov
jecxz
ljmp
dec
daa
pop
xchg
shrl
jecxz
sub
sub
lahf
mov
fcmove
clc
jl
fadds
out
fadd
cwtl
inc
jno
jne
cwtl
push
das
and
mov
movsb
test
cltd
adc
jp
ja
decb
adc
and
sbb
fiaddl
addr16
inc
nop
mov
je
push
jbe
sub
insl
adc
and
movsl
mov
aam
test
sub
sub
adc
movsb
xchg
xchg
cmpsl
repz
xor
jo
push
lret
jne
jae
and
and
pop
sub
dec
adcl
dec
adc
mov
jmp
inc
outsl
sbb
push
mov
add
arpl
mov
adc
cmpsl
xor
fstl
les
sbb
lock
mov
sub
cmpl
pop
js
js
sub
inc
xor
add
pop
sbb
adc
cmp
lock
and
orl
test
sub
in
call
pop
out
addr16
mov
imul
mov
shll
add
loope
or
xchg
and
pop
push
mov
test
mov
lock
sub
fs
push
shl
mov
push
jl
pop
xchg
adc
clc
sbbl
dec
inc
stc
divb
loop
cwtl
and
xlat
sysexit
ds
xor
leave
sub
les
pop
push
mov
mov
xlat
testb
sbb
or
xchg
dec
add
jbe
adc
mov
es
incb
pop
sbb
arpl
lea
data16
xor
dec
sbb
push
add
scas
pop
in
popa
jnp
xchg
mov
jno
lcall
mov
loopne
push
or
or
sbb
insb
arpl
addr16
pop
mov
add
ds
add
mov
pop
add
push
sub
rcrb
mov
lcall
ljmp
movsb
jbe
lret
test
in
cmp
xor
pop
subl
jp
jge
jl
mov
gs
enter
stos
cli
mov
sub
pushf
addr16
jp
fistl
jns
inc
scas
sahf
fidivrs
xchg
inc
fnstenv
sub
outsl
js
lret
aas
and
arpl
add
or
xchg
xor
lcall
test
scas
mov
int
inc
sub
jl
out
adc
mov
popf
int3
jns
push
lds
data16
sub
xchg
sbb
enter
xor
fucomi
push
ljmp
dec
sti
mov
cld
fcoml
pop
sbb
push
cmpsb
sub
scas
jmp
adc
sub
cmp
pop
and
mov
stc
inc
loope
jne
jecxz
mov
test
xor
mov
cmp
and
arpl
out
adc
lods
bound
mov
xor
scas
and
mov
mov
imul
push
xchg
pop
push
jle
pop
aaa
ljmp
ds
mov
adc
jecxz
sub
in
fisttpll
sbb
das
push
sub
std
push
in
xor
cwtl
sbb
mov
dec
hlt
adc
add
adcb
cs
mov
arpl
add
clc
mov
or
xorb
lret
and
lea
mov
adc
inc
push
fmull
or
and
loopne
and
arpl
dec
mov
outsb
out
push
nop
pop
jp
pop
xchg
lret
movsl
add
sub
fcomps
fistl
ljmp
jp
jo
imull
fidivs
addr16
divb
pop
sbb
repnz
push
in
clc
ret
or
dec
outsl
ss
addr16
adc
inc
pushf
mov
mov
mov
daa
scas
fcmovbe
arpl
fldcw
jno
sahf
fcoms
arpl
jne
data16
fsubrl
jmp
pusha
int3
cld
sub
std
lcall
mov
sub
adc
dec
sbb
lea
sbb
push
jle
and
jo
cmp
xlat
test
and
xchg
xor
sbb
jmp
pop
inc
add
ja
stc
and
mov
and
call
jmp
hlt
lds
cmp
xchg
pop
out
cs
push
int3
adc
cld
xor
movsb
inc
andl
cmp
fdivl
jnp
cmpsl
mov
idiv
enter
sbb
fisttps
cld
xorl
push
cmp
jg
daa
es
pop
adc
lret
call
shll
dec
jnp
dec
sar
roll
ficoms
pop
mov
leave
mov
or
push
cli
imul
imul
adc
dec
fistps
and
inc
mov
stc
les
sub
sbb
mov
and
push
stos
and
cld
hlt
dec
int
hlt
pop
aam
xchg
cmp
mov
lods
mov
aas
push
mov
into
xor
xorl
je
out
fstl
push
or
mov
push
imul
and
pusha
push
or
fwait
jecxz
push
das
inc
and
adc
repz
pop
mov
mov
push
push
or
aas
cmp
sub
add
outsl
test
adc
fs
bound
cmc
aad
stos
test
pop
or
and
leave
add
jmp
sub
loop
mov
jae
dec
out
xlat
adc
lock
ror
in
mov
cmp
fadds
decb
ja
fwait
mov
loop
mov
lea
stc
ja,pn
inc
mov
push
jnp
push
pop
sub
loope
mov
jns
dec
xchg
sbb
fcmovnb
pop
jno
adc
push
cwtl
loop
pop
mov
dec
lods
cltd
or
ja
clc
mov
mov
call
cltd
cmpsb
dec
mulb
cmpsb
mov
insb
mov
sbb
push
push
call
jnp
xor
push
mov
loope
add
repz
xchg
inc
or
cmp
notb
sbb
xchg
pop
dec
xchg
xchg
inc
and
test
inc
or
andb
sarb
mov
nopl
cmp
insb
out
push
insb
push
movsb
ja
ret
lock
inc
in
mov
jl
movsl
clc
lock
fsubr
imul
iret
cmp
sbb
lret
mov
sahf
xchg
imul
xchg
insb
ret
aam
jge
or
mov
mov
mov
cmc
lds
xor
mov
or
pop
or
fidivs
stc
jae
cmpsb
and
out
or
pop
je
pop
inc
jmp
pop
push
mov
xor
scas
shll
sbb
mov
sbb
push
add
addr16
mov
add
outsb
adc
lea
pushf
je
inc
xchg
insl
cmp
adc
add
push
mov
xor
orl
jb
movsb
xchg
lods
adc
int
in
insb
and
in
xor
mov
rep
add
push
add
jl
dec
addr16
outsl
fisubs
dec
inc
dec
mov
jl
mov
leave
loop
fsub
cwtl
jmp
mov
fstps
sbb
and
mov
xchg
in
sbb
aas
mov
cmp
pop
lock
js
cmp
pop
test
dec
push
and
add
sub
lahf
push
jecxz
js
das
add
or
mov
jns
dec
dec
sbb
inc
pop
dec
enter
pop
arpl
imul
add
fmull
pop
xor
mov
and
fbld
lret
or
in
sub
loope
mov
sub
aam
ljmp
aad
mov
icebp
mov
jp
sahf
mov
pop
andb
mov
stos
pop
jo
mov
inc
lret
xchg
lret
lret
test
in
les
xor
jp
clc
out
mov
popa
sbb
mov
es
sahf
in
lret
push
loop
add
out
ret
mov
jno
adc
sub
add
push
and
xor
sub
repz
out
test
cmpsl
dec
test
mov
imul
dec
fcoml
or
int3
les
add
fnclex
test
cli
aam
js
pop
cwtl
mov
idivl
xor
test
cld
fcompl
outsb
pop
punpckhwd
cmp
adc
rcr
push
lea
and
adc
out
out
xor
mov
pop
xor
push
and
or
mov
fcoms
mov
mov
cmp
cwtl
mov
roll
fimuls
xchg
mov
mov
adc
psadbw
and
and
dec
popa
sbb
cmp
iret
negl
out
int
dec
clc
or
aaa
std
lret
push
push
dec
mov
aad
jnp
adc
mov
aam
fnsave
shl
cmp
test
xchg
nop
add
xor
and
xor
test
imul
in
fiadds
inc
add
iret
xor
idiv
xorl
add
cmp
fimull
int
popa
xor
add
or
push
int
adc
sbb
aam
sahf
ret
or
in
mov
push
add
pop
out
leave
negl
popf
mov
orb
lret
je
aas
pop
dec
sbb
data16
pop
inc
mov
iret
mov
shrb
sar
insl
push
rcr
jb
cmp
add
inc
or
mov
mov
or
cmp
push
mov
fstps
mov
cmc
xchg
mov
mull
in
jge
and
inc
repz
iret
sbb
add
mov
sub
scas
stos
or
mov
inc
rolb
pusha
jo
aas
and
movsb
jnp
add
cltd
pop
aam
fsts
pop
lcall
repnz
clc
xor
dec
and
cmc
mov
sbb
dec
idiv
push
mov
call
dec
dec
std
jecxz
sar
mov
int3
pusha
mov
outsl
outsl
roll
lahf
js
and
int
mov
aaa
xchg
ret
xchg
jg
test
jne
daa
jnp
sbb
mov
mov
iret
fmull
or
in
dec
xchg
pop
and
xchg
mov
mov
ljmp
xchg
rcr
jl
out
jp
pop
gs
in
dec
or
scas
mov
mov
scas
and
xchg
into
sub
popa
jmp
cmpl
lods
mov
ret
mov
adc
fs
test
rorb
xor
shll
cmp
das
pusha
or
push
mov
push
push
cmc
in
jmp
cltd
movsl
cmpsl
loopne
jnp
dec
add
pop
stos
and
or
daa
cmpsb
push
pop
rcrl
mov
scas
daa
or
mov
daa
sub
inc
loop
rorb
in
add
sbb
add
fcmovb
adc
pushf
lea
add
mov
cwtl
add
addl
popf
and
inc
cmp
pop
sbb
mov
aaa
pusha
xor
inc
inc
mov
mov
popa
xchg
jo
adc
push
lcall
subl
push
ret
jne
je
jne
loopne
jb
xor
mov
ret
dec
addb
inc
fstpl
cmp
xor
mov
insb
ficoms
rcll
pop
aad
dec
outsl
mov
rclb
test
aas
out
mov
mov
sbb
sbb
jb
imul
sbb
je
ljmp
or
add
and
push
adc
xor
pop
outsl
or
aad
push
lods
add
faddl
fwait
mov
repnz
xchg
movsb
mov
add
push
sarb
inc
sti
jecxz
arpl
loopne
fabs
push
dec
push
mov
pop
lahf
ja
inc
adc
subb
sbb
jne
add
push
lock
mov
shlb
ss
inc
out
out
sbb
xor
xchg
mov
xchg
mov
jb
imul
jne
xor
cmpb
pop
dec
outsb
popf
in
test
or
push
push
rol
mov
addr16
fsts
nop
sbb
cmp
mov
popa
xchg
sub
mov
add
popf
cmp
add
out
cltd
cmp
outsl
mov
fdivrs
les
cwtl
dec
icebp
sbb
stos
pop
insb
mov
sbb
stc
cmc
rcrb
sub
clc
pop
dec
cmp
inc
fiadds
or
sub
mov
sbb
and
jl
or
mov
push
mov
mov
clc
sti
dec
arpl
scas
js
scas
mov
xor
loopne
inc
jge
lret
ret
sbb
adc
out
ljmp
inc
loope
xchg
add
imul
xchg
jmp
mov
lods
and
inc
test
cmpsb
mov
test
cmp
push
int
aaa
scas
pop
lahf
push
push
movsl
fs
pmaxsw
push
xchg
mov
xor
cmp
dec
stos
cmp
mov
int3
mov
insb
and
jnp
clc
jo
xor
sbb
sub
cmp
dec
pop
nop
fsts
mov
jl
xchg
mov
cs
inc
rcrb
push
int
adcl
cmp
leave
push
sub
hlt
pop
repnz
inc
jae
sbb
cmpsl
imul
clc
jne
sub
repz
js
in
jecxz
dec
jnp
scas
jg
mov
jo
pop
inc
mov
out
mov
outsb
mov
cli
loop
jne
iret
lahf
pop
negb
sub
push
cmp
subb
inc
and
cli
mov
shlb
stos
das
xor
jl
ds
add
ret
push
pop
dec
adc
mov
ret
aas
jne
outsl
and
mov
gs
aad
dec
mov
dec
mov
push
and
mov
andl
cmpsb
ret
std
xor
cltd
jl
push
outsl
in
push
push
sahf
push
mov
cld
inc
orl
fistl
pop
jne
out
adc
test
icebp
stos
push
jae
into
mov
add
xlat
in
push
sbb
arpl
aaa
call
lea
dec
jae
push
movsl
dec
push
sbb
scas
ficoml
fucomi
sub
cli
mov
les
and
jmp
xor
or
fld
cld
xor
push
mov
mov
add
cmp
in
aaa
inc
cmpsb
int
ret
and
push
popf
push
ljmp
aas
mov
mov
test
add
xchg
lret
inc
mov
rcl
stos
test
adc
out
push
dec
sub
mov
xchg
dec
cmp
icebp
fisttps
adc
push
sbb
packssdw
push
int3
mov
stc
loop
ss
sub
lcall
mov
mov
shr
in
jns
sbb
rclb
ss
mov
dec
or
stos
jb
lret
pop
bnd
test
adc
ret
sub
pop
push
xlat
xchg
dec
enter
nop
ret
jo
pop
mov
mov
push
fnstenv
flds
xor
js
call
dec
pop
jnp
sub
sub
mov
inc
fs
jo
ss
aaa
xor
push
stc
leave
call
pop
pusha
jg
enter
dec
ljmp
out
push
fmuls
andps
ljmp
in
mov
leave
and
int3
jge
imul
aas
jg
movsb
andb
scas
mov
pop
xchg
cwtl
les
in
xor
mov
push
and
loopne
xor
arpl
mov
push
aam
gs
xchg
subb
adc
cmpsl
push
or
pop
inc
fwait
inc
cs
add
xchg
pop
lret
jge
xchg
movsb
jb
mov
rdtsc
or
fstl
mov
xor
bnd
loop
stc
inc
jns
push
jg
addr16
enter
stos
jo
outsb
mov
lret
les
push
mov
mov
scas
test
out
mov
cmp
cmc
push
data16
mov
mov
aam
movsl
mov
mov
enter
push
mov
jo
cs
sub
xor
inc
inc
sub
mov
mov
pop
and
mov
nop
in
mov
insl
adc
adc
mov
rcl
data16
jg
cld
mov
xlat
dec
hlt
lock
sbb
inc
sub
mov
mov
fdivs
dec
sti
mov
mov
xchg
out
add
sbb
arpl
xor
cmc
cltd
pop
xor
xchg
loopne
sub
fidivrl
push
clc
jno
in
fbld
mov
movsb
lods
sarb
jbe
outsl
cmpb
or
push
ficomps
das
jns
sub
mov
movsb
push
dec
and
fistpll
lahf
je
sar
mov
popf
scas
pop
cmpsb
arpl
or
jno
stos
sbb
adc
ror
sar
mov
mov
lods
sbb
pop
cmp
push
cld
imul
les
sub
inc
mov
in
inc
xor
outsl
add
inc
mov
sbb
je
push
cmp
dec
mov
scas
nop
ljmp
cmp
sbb
mov
xlat
lods
xchg
scas
es
or
jg
lcall
jne
jae
jo
fsubs
dec
lds
repnz
adc
xor
xor
das
hlt
scas
mov
or
ja
aas
add
test
in
xor
dec
sub
inc
or
imul
cli
and
pusha
test
cmpsb
and
in
sub
dec
jmp
mov
mov
fmull
ja
fidivl
sub
lcall
push
push
hlt
lods
mov
add
loop
mov
and
iret
cmp
cmp
xchg
mov
mov
adc
test
call
add
rol
andl
ret
insl
mov
enter
push
push
arpl
in
jbe
gs
cmpsb
cltd
sti
push
lcall
aam
arpl
popl
stos
dec
scas
int
sub
cmp
jecxz
inc
push
cld
in
xchg
mov
mov
mov
cmp
call
mov
sbb
stos
cmp
test
pop
ss
icebp
cmp
fimuls
jp
mov
pop
xchg
and
xor
inc
ljmp
jle
test
test
or
mov
push
add
xchg
push
mov
push
jg
lcall
add
xor
push
fwait
push
ficoml
or
pop
sub
int3
sbb
adc
shlb
imul
cltd
in
pop
loop
je
cmp
sbb
dec
fs
bound
xchg
sbb
fadds
add
pop
sbb
mov
xlat
cltd
test
jno
sbbb
pop
ret
jns
push
lret
and
add
sub
inc
movl
andb
inc
insl
jmp
fidivl
mov
mov
mov
ret
jo
add
mov
push
mov
xor
mov
je
in
lock
xor
add
pop
and
xor
sub
fstl
incb
pop
ret
inc
imul
pop
outsl
sbb
ret
mov
int
loop
mov
movsl
inc
mov
jo
fsubrs
add
lock
mov
in
scas
dec
cmp
push
xlat
dec
aam
xchg
popf
loope
call
or
pop
idivb
push
cmp
jge
dec
mov
dec
imul
jl
jae
out
incb
or
xor
fs
sarb
ret
push
dec
pop
adc
mov
xchg
and
sub
xchg
repz
xor
xchg
negl
pusha
add
aad
xor
sbb
mov
cmpsb
psrad
iret
xchg
loopne
ds
lods
outsl
sub
cltd
dec
jns
sub
xor
fldenv
sahf
mov
rcl
pop
out
lea
js
or
cli
test
ret
xor
daa
pop
mull
out
mov
xor
xor
lods
and
lds
jbe
xchg
icebp
cli
mov
iret
lahf
loopne
loopne
inc
les
out
push
inc
sub
lret
mov
popf
jecxz
inc
jbe
cmp
adc
mov
mov
into
and
jo
cmp
mov
outsb
outsb
mov
sbbb
push
loopne
mov
jle
or
add
mov
shrl
push
or
fildl
and
xchg
pop
jle
popf
frstor
pushf
rcll
cmp
ret
push
fstps
daa
sbbl
mov
in
fcmovnb
mov
ret
insb
xlat
push
aam
add
xor
imul
dec
stc
popf
lret
and
fistl
sub
js
popa
dec
sbb
outsb
andl
fisttps
out
xor
xchg
or
popa
cltd
lcall
xor
jae
fcompl
sbbb
sbb
filds
or
and
mov
movsl
nop
xchg
inc
inc
dec
mov
xor
addl
bound
loopne
push
cmp
adc
push
and
in
lcall
repnz
faddl
push
pusha
sub
stc
pop
adc
in
in
icebp
aad
push
sbb
aas
sub
std
testb
subl
out
and
test
xorl
mov
in
xor
int3
scas
negl
pop
lods
in
pop
cs
nop
rcrl
add
mov
int
jecxz
mov
jp
sbb
or
mov
or
lods
int3
mull
or
lods
pusha
addr16
mov
or
push
iret
adc
jno
or
mov
mov
fsubrp
fnstsw
aam
stos
test
das
es
xor
sbb
push
or
pop
mov
jmp
push
insl
cmovp
divl
ret
xor
lea
clc
loope
pop
mov
xor
icebp
sahf
scas
or
nop
sub
in
int
loope
jg
lods
setbe
sub
dec
pop
jle
mov
mov
vunpcklpd
aad
repnz
sti
imul
jnp
adcl
or
rorl
xchg
out
adc
cwtl
xchg
and
add
mov
insl
sbb
sub
dec
sub
enter
mov
xchg
mov
xor
std
roll
dec
mov
dec
clc
inc
jo
and
jne
cltd
repnz
lahf
push
shrl
or
pop
xor
and
popf
jne
out
mov
jmp
add
sub
rclb
push
push
inc
loopne
jne
sub
cmpsb
pop
xchg
dec
cld
fwait
nop
rorb
mov
faddl
add
mov
jns
jnp
adc
popf
scas
add
insl
pop
hlt
push
and
stos
cmc
in
in
in
jl
jl
xchg
fsub
xchg
and
jge
outsb
mov
and
cmp
addb
push
mov
and
addr16
leave
pop
xchg
mov
int3
dec
sbb
sbb
lcall
mov
mov
jb
cld
inc
idiv
or
sbb
mov
repnz
aas
jg
test
cmp
adc
sbb
push
mov
imul
mov
add
jg
je
mov
sub
mov
mov
ret
iret
adc
outsl
fnstcw
push
hlt
xorb
or
mov
sub
sbb
movsb
pop
cmp
or
inc
jno
mov
xlat
pop
out
fnstsw
decl
aas
cmp
mov
aad
std
loopne
aas
lods
lret
cmpsl
mov
mov
mov
fcmovnb
mov
adc
jnp
call
loop
aad
xor
xchg
lret
inc
cmpsb
imul
xor
add
mov
pop
out
idiv
flds
rep
or
pop
sub
popa
mov
jne
lea
xor
xrelease
in
mov
cmp
push
mov
jae
inc
in
sbb
mov
dec
mov
dec
add
aad
cmc
mov
or
sub
sbb
push
and
out
jmp
cmp
xchg
mov
cltd
cli
adc
inc
sti
iret
xchg
sbb
dec
sub
pop
push
adc
test
add
ficoms
cmp
flds
dec
mov
mov
mov
xchg
scas
daa
jb
jne
outsl
xchg
add
rcr
data16
and
inc
dec
loop
nop
cmpsb
dec
fs
mov
aas
scas
pop
ficomps
ret
xor
and
pop
popf
sbb
sbb
cmp
movsb
cmp
loop
mov
push
icebp
out
sub
popf
cmp
pop
mov
jne
scas
push
ja
sub
cltd
sbbl
adcl
jo
push
mov
pop
and
xchg
imul
jecxz
cmp
xor
inc
insb
lcall
mov
adc
cmpsl
or
and
or
nop
orl
xor
xchg
xor
pop
inc
or
adc
aad
push
fisubrs
cltd
xchg
cmp
repz
xor
pop
jmp
push
xchg
stos
sub
mov
addr16
loop
sub
insl
xor
cmp
shll
ret
out
adc
push
xchg
dec
adc
movl
cs
xor
sbb
cmpsl
jg
addl
cmpsl
add
adc
pusha
lds
or
push
jae
mov
or
std
cld
pop
aad
add
xlat
cmc
insl
push
inc
push
cmpsb
testl
enter
ja
push
pop
dec
sahf
repnz
les
cli
mov
inc
scas
mov
scas
add
adc
nop
cs
push
or
inc
sbb
mov
in
mov
jb
cmp
or
mov
inc
mov
aad
xchg
inc
push
popf
sbb
je
cmp
out
call
add
stc
mov
sbb
or
mov
fxch
jb
std
xor
in
xchg
cs
cmp
sub
cmpsl
inc
jno
adc
cmp
dec
mov
mov
mov
sbb
jb
into
jne
je
int3
rcll
push
pusha
scas
ret
mov
inc
popa
adc
push
aaa
insb
mov
aam
jno
scas
mov
in
mov
aaa
popa
fcmovne
sub
cmpsb
pushf
fstl
sbb
mov
arpl
add
or
pusha
mov
sbb
in
cld
push
cmpsl
fcmovb
les
cmc
pop
jb
cli
jnp
adc
subl
xchg
jb
xor
push
and
fildll
fsts
iret
add
ljmp
rclb
mov
mov
in
add
or
lcall
sub
les
adc
mov
out
and
inc
setge
xchg
mov
inc
dec
pop
sahf
dec
js
add
into
xchg
xchg
cmp
jmp
sbb
sbb
jb
out
nop
movsl
ja
das
enter
loopne
nop
lahf
inc
mov
sbb
jnp
fnstsw
add
lods
hlt
fldl
dec
in
adc
push
jns
test
cltd
cmp
xchg
cmpsl
inc
divb
sti
dec
repnz
jmp
xchg
stc
cwtl
xor
cmpsl
or
xchg
sbb
js
xchg
jae
xchg
xchg
rclb
sbb
mov
push
ret
in
jno
xchg
or
add
pop
mov
sbb
push
inc
jae
push
xchg
lcall
push
pop
adc
sarb
xor
pop
xchg
scas
icebp
ret
xor
sub
xchg
jae
sbb
push
xchg
leave
pop
mov
xor
das
jb
pop
subb
aaa
test
mov
push
int
mov
and
sbb
dec
addr16
or
les
leave
xlat
std
lods
cli
stc
jbe
and
imul
add
out
movsl
scas
stos
jns
dec
std
dec
cmc
arpl
fdivl
lods
shlb
xor
aad
cs
pop
mov
nop
adc
pop
ljmp
fcoml
jmp
and
cs
pop
dec
sub
mov
add
mov
test
repz
bound
popf
cwtl
movsb
mov
daa
stc
lahf
jns
push
push
sub
ja
sbb
inc
mov
insb
ret
pop
add
mov
or
jg
sahf
dec
xlat
dec
std
fisttpl
jae
cmp
cmp
popf
fists
fimuls
fstps
mov
fmull
popf
mov
pop
andb
mov
and
das
mov
pop
filds
jns
add
das
and
pop
imul
popf
and
lock
xchg
testb
mov
dec
mov
lock
jb
cmpb
test
sbb
jge
jae
mov
add
inc
xchg
mov
mov
aam
aas
stos
pop
sbb
mov
inc
movsl
push
push
dec
pop
lea
xorl
clc
xchg
and
test
loope
cmp
mov
leave
in
dec
add
ss
stc
push
in
pop
nop
lret
xchg
xchg
cmp
shrl
jne
in
inc
push
dec
std
sti
stos
push
pop
xchg
xor
mov
push
xchg
sti
mov
xchg
rcrl
sub
stc
in
jmp
stc
pop
sbb
lods
hlt
dec
adc
mov
adc
cwtl
fs
and
cmp
push
movsl
mov
add
lahf
inc
test
push
fistps
test
mov
into
cmpsb
fistpll
xchg
dec
adc
scas
add
int
pop
shl
adc
lret
pushf
inc
mov
dec
loop
stos
stos
jecxz
jl
in
scas
stc
in
and
dec
pop
pop
sbb
mov
push
imul
add
mov
addr16
enter
add
and
push
dec
push
inc
mov
mov
cmp
imul
fldcw
and
ss
mov
jb
fisubs
iret
sbb
mov
lret
imull
addr16
ret
dec
push
cmpsl
xlat
mov
adc
rcr
mov
or
les
xorl
pop
aad
inc
push
sub
adc
jle
xlat
enter
enter
mov
insl
pop
xor
fprem
or
and
xchg
pop
sub
loopne
repz
in
mov
inc
sbb
dec
push
adc
xor
ret
push
push
mov
in
and
lock
and
sbb
jae
xchg
mov
jmp
es
or
mov
out
mov
adc
fdivr
repz
mov
jmp
and
pop
outsl
addr16
pop
loopne
cmp
adc
inc
addr16
mov
and
ror
mov
jl
psubw
or
mov
add
xor
pushf
fxch
add
je
cmc
addr16
jmp
das
cmp
sbb
push
aam
stc
pop
movsb
test
dec
xor
mov
pop
into
xchg
ret
roll
push
jbe
sub
js
ja
call
sbb
mov
jbe
repnz
push
xchg
push
sub
push
jecxz
in
jecxz
into
mov
xchg
cli
scas
nop
sbb
int
lret
iret
jmp
fbld
movsl
ss
add
je
rcrl
sub
xchg
leave
cli
xor
xor
xor
movsl
out
shll
repz
enter
insb
xchg
sbb
fs
cld
daa
ljmp
jo
div
call
or
xor
inc
dec
scas
ror
rolb
in
and
mov
je
mov
clc
push
repz
enter
xchg
push
inc
inc
imul
jbe
call
xor
xor
repz
cmpsl
out
and
jns
test
add
sbb
std
sbb
inc
movl
mov
idivb
movsl
pop
das
cmpsl
mov
loope
push
out
cmp
and
test
inc
xchg
mov
cmp
sbb
dec
xor
lods
cmp
jne
add
and
mov
add
jne
ret
jae
in
scas
popa
push
push
stc
add
loope
stos
aas
addr16
xchg
lods
or
cmp
sahf
insl
jecxz
mov
or
test
jno
sbbb
xchg
inc
adcl
or
pop
inc
add
lret
fsts
adc
xlat
loope
jo
data16
mov
cmp
mov
pop
pop
jno
and
fwait
sbb
daa
ret
add
xor
add
sub
lret
cld
stos
outsl
je
ret
aad
or
mov
xchg
inc
cwtl
cmp
and
xor
lret
xchg
xor
xchg
and
aam
pop
ja
into
xorb
inc
xchg
lcall
pop
and
cwtl
jle
push
cmp
lcall
aam
fldcw
fwait
mov
cmp
dec
xlat
in
cmp
cmpsl
rcr
jo
in
dec
test
fnstenv
sub
adc
mov
push
push
cli
rorb
and
cs
sbb
cmp
aaa
adc
xor
mov
cmpsb
xor
das
bnd
adc
adc
sbb
or
cld
pop
inc
addr16
aas
xchg
sub
mov
int
and
or
push
xor
ss
and
addb
sub
add
incl
adc
pop
mov
in
mov
es
dec
leave
mov
push
jg
test
and
or
mov
pop
out
mov
pop
xor
jmp
mov
push
push
repnz
pop
repnz
aas
cs
add
roll
aam
or
adc
mov
jge
xor
sbb
and
push
sti
divl
jns
mov
xchg
or
push
xor
cltd
fistpl
enter
pop
icebp
notl
xchg
insb
mov
cmp
jnp
fcmovnbe
das
xchg
addb
cmp
pushf
lret
jmp
nop
data16
insb
mov
aas
cli
xchg
lods
and
pop
push
push
hlt
scas
test
daa
in
pop
rcrl
cmpsb
or
mov
bound
xchg
sub
clc
mov
xor
and
icebp
repz
lds
mov
adc
or
lods
jne
repz
sbb
in
cmpsb
sub
call
fs
inc
loope
adc
shll
xchg
inc
sub
or
push
mov
pop
or
int
lea
inc
gs
push
js
loope
roll
je
cmp
sub
ljmp
jg
push
push
dec
out
and
cmp
fisubs
mov
dec
mov
lods
and
stos
loopne
push
cmp
jbe
aam
sub
jnp
sbb
add
out
outsb
and
iret
rcrb
pop
lea
lea
fwait
je
gs
fcoml
jbe
push
pop
xor
push
push
sahf
sbb
sahf
in
xchg
or
push
fsubrl
dec
and
aad
dec
xlat
dec
in
rcrl
call
cwtl
into
inc
fcompl
inc
mov
pop
push
sub
mov
xor
test
jg
push
mov
push
jecxz
cmp
xorb
int
adc
aam
in
sbb
or
testl
sbb
jno
out
add
push
sarl
jo
paddd
sub
push
rorl
lock
ffreep
clc
xor
mov
jp
jg
out
enter
pushf
xchg
sbb
xchg
sti
leave
mov
in
dec
out
or
dec
pop
add
cli
arpl
inc
and
pop
aam
mov
jmp
out
ss
loopne
and
mov
leave
sub
push
jns
add
and
dec
out
ret
sub
in
fistpl
hlt
pop
gs
jne
imul
enter
fisubrl
xor
ljmp
mov
adc
xchg
push
das
add
inc
fsubs
ss
enter
sbb
dec
add
or
lahf
int3
ret
dec
and
cmp
mov
sub
cmp
ficoml
fisttpl
cli
pop
shll
jbe
inc
sub
mov
mov
mov
hlt
stos
cli
push
div
fs
jg
xlat
andl
fsubrl
mov
pushf
jge
adc
mov
jl
adc
jl
push
sbb
cmpsb
aas
int
mov
mov
mov
data16
or
pop
adc
pusha
int3
mov
jb
mov
mov
clc
and
addl
nop
test
inc
test
mov
and
xor
inc
lret
push
inc
fdivr
sti
scas
mov
frstor
mov
and
ds
xchg
add
test
movsb
and
adc
aas
loop
adc
xor
pusha
jbe
mov
enter
xor
xor
sub
mov
aaa
adc
add
ret
dec
jg
xor
sti
out
test
scas
imul
loopne
xor
push
pushf
in
pusha
repz
jmp
mov
push
repz
xchg
jno
cmpsl
and
lcall
mov
mov
icebp
xlat
fiaddl
sub
daa
movsb
fmuls
arpl
adc
pop
xor
mov
stos
fdivrs
mov
jbe
adc
mov
xchg
loop
pop
cld
or
push
ds
pop
gs
push
jnp
push
pop
je
mov
mov
nop
or
test
outsb
xchg
push
int
aad
add
push
inc
add
dec
aad
stos
inc
sbbl
push
pop
loope
jbe
push
lahf
popa
into
or
jae
adc
sarl
xchg
ljmp
lods
pop
iret
fs
daa
sbb
cltd
es
cmp
jg
mov
adc
mov
inc
mov
out
push
push
jns
shlb
push
les
dec
idiv
outsb
push
jae
pop
test
in
mov
in
adc
test
pushf
and
adc
jae
and
scas
outsl
out
or
push
jno
inc
test
add
add
sbb
xor
lods
call
pop
test
jle
dec
inc
xor
pushf
cmp
sbb
inc
incl
fldt
push
pop
mov
sbb
dec
ss
divl
pusha
push
dec
stc
push
jmp
xchg
sbb
add
jno
std
inc
daa
xchg
bound
jnp
xchg
mov
sub
or
pop
repnz
and
repnz
aad
jo
in
xor
xchg
clc
push
test
mov
std
call
jae
leave
fwait
mov
mov
pop
or
push
xor
xor
fmul
pop
dec
subb
push
xchg
jno
jnp
xchg
xor
jb
arpl
mov
push
push
scas
cmp
in
xchg
mov
addr16
aas
fdivrl
rcr
je
xor
cli
jne
dec
insb
sar
sub
ret
jns
jae
ja
sub
add
jo
fcoml
push
add
cmpsb
jno
psubsb
arpl
repnz
jne
push
fisttpl
xlat
mov
std
cmp
add
repz
popl
xor
mov
jp
enter
dec
movnti
enter
or
dec
xchg
scas
push
iret
push
int3
sub
mov
cmp
or
addr16
test
mov
jecxz
out
ss
scas
push
mov
jge
mov
xchg
mov
out
sbb
inc
cmpsl
jne
jp
cmpsb
adc
adc
add
clc
adc
xor
sbb
mov
js
and
inc
jne
pop
out
mov
sbb
ret
out
insb
sahf
jbe
push
xor
jp
mov
xchg
mov
adc
xor
sub
or
movsb
test
and
ds
mov
jg
adc
mov
enter
repnz
iret
out
or
insl
mov
dec
pop
pop
and
sbb
movl
out
cmp
and
xchg
and
lret
or
adc
sub
repnz
cmp
stos
push
shrb
cwtl
dec
lods
mov
jg
pop
in
sbb
mov
ret
scas
xchg
addb
mov
push
mov
cltd
mov
mov
js
xor
inc
and
inc
lret
dec
push
mov
aad
bound
pop
and
sub
fstpt
push
xchg
popf
enter
insl
fs
sbb
mov
stos
rclb
push
pop
cwtl
and
ret
hlt
dec
cmp
lods
bound
jb
andps
push
xchg
outsl
imul
cmp
leave
sub
mov
popa
nop
push
xor
add
lods
lods
int
sub
add
in
outsl
mov
or
mov
test
jno
jl
adc
pop
cli
imul
xchg
test
mov
insb
std
repnz
mov
cmp
and
mov
cmp
and
mov
push
and
pop
push
xchg
fildll
daa
gs
pop
out
xchg
mov
pop
outsb
or
adcl
scas
out
icebp
xor
into
rcl
jnp
pop
push
inc
jno
mov
js
dec
push
fnstcw
dec
cmc
test
mov
ss
out
mov
inc
out
faddl
bound
fs
sbb
push
cmp
push
inc
lock
dec
mov
arpl
cmp
inc
xchg
lds
and
xchg
and
lds
jae
mov
out
ss
aas
and
mov
inc
cmp
mov
in
mov
mov
jecxz
les
lea
lods
push
xchg
in
fisubrl
lret
jle
dec
add
mov
iret
aas
add
jecxz
xchg
loop
push
sahf
and
mov
and
int3
outsl
loopne
shlb
test
in
in
cmp
mov
fs
sub
jae
jl
mov
dec
cmp
sbb
rcr
jp
cmpb
testb
mov
scas
pop
cmpsb
cmpsl
xor
mov
scas
arpl
ja
jl
mov
push
cmova
pop
ret
fs
xchg
xchg
sbb
dec
iret
pextrw
out
add
push
rol
or
lcall
nop
out
inc
mov
sbb
out
pop
cmpsl
dec
xchg
push
loopne
iret
add
pushf
dec
cmp
xor
cmpsl
pop
in
inc
stos
or
adc
lret
addr16
and
adc
ss
mov
cmp
aas
sbb
xchg
xchg
movsl
adc
lds
insl
jae
and
or
jmp
jle
xlat
int
xchg
dec
xchg
rorl
xor
adc
mov
popa
int
mov
adc
stc
pop
push
insb
mov
cwtl
xor
sub
jle
add
movsb
adc
in
pusha
data16
mov
cli
mov
jecxz
int3
dec
paddd
lret
in
rcll
ret
jo
cmp
pop
mov
inc
cltd
insl
push
add
push
scas
bound
mov
popf
out
jno
movsl
mov
or
sbb
outsl
or
test
dec
pop
fninit
into
loopew
mov
mov
jecxz
andb
hlt
sti
mov
push
xchg
fs
xor
in
aad
insl
jae
mov
mov
cs
mov
repnz
or
pop
inc
add
cltd
dec
jne
popl
lds
cmp
mul
jmp
cmp
loopne
stos
dec
jecxz
cmpb
push
ret
xor
into
mov
std
or
rcrb
mov
into
jl
xor
scas
dec
and
sbb
pop
lea
filds
int
imul
lods
jecxz
inc
jle
mov
sub
mov
sbb
out
fs
mov
cs
cmp
shlb
divl
bound
test
inc
arpl
mov
mov
cmc
les
int
push
xchg
jp
decb
sti
pop
movsb
pop
cmp
pop
inc
fmuls
in
lea
mov
mov
ficompl
dec
mov
pop
test
mov
xor
repnz
out
mov
nop
lahf
push
aas
rolb
pop
push
xor
add
mov
cmp
out
test
cli
mov
xchg
sub
push
arpl
xchg
jne
or
jbe
fnstsw
std
stc
into
das
test
sbb
mov
sub
out
fildll
js
sub
test
pop
sub
imul
test
or
sub
fstpl
sbb
lahf
cmp
cmc
jle
pop
or
in
pop
sti
xor
shll
sbbl
std
aam
in
loopne
lds
sub
movsb
mov
inc
mulb
sarb
inc
icebp
icebp
lcall
mov
add
mov
pop
lds
es
loopne
push
cli
sbbl
scas
add
xchg
jne
and
fucomi
adc
sarl
fwait
mov
icebp
cli
mov
dec
mull
jno
or
pop
sub
arpl
loopne
push
dec
mov
mov
add
jge
pop
pop
iret
repnz
in
or
loop
xchg
into
popa
jg
lahf
pop
aas
insl
sub
sti
pop
test
in
jb
inc
lock
cmp
cltd
incb
test
imul
sub
add
xchg
pop
inc
je
mov
push
push
clc
sahf
add
xchg
lret
sbb
jbe
repz
mov
sti
addr16
add
in
lahf
push
ret
add
sbb
cmp
adc
jle
xor
repnz
xor
xchg
ljmp
aas
into
adc
sti
sub
aam
arpl
mov
xchg
iret
mov
nop
adc
push
mov
add
cmp
insl
sub
mov
sbb
mov
jbe
daa
dec
icebp
cmp
sbb
rclb
jecxz
mov
adcb
mov
enter
mov
mov
inc
and
push
lret
pop
leave
decl
sub
int
push
mov
enter
push
aam
push
mov
add
cmp
fbstp
in
push
jmp
jns
iret
mov
push
cmp
or
loopne
inc
jge
jge
mov
push
pop
sbb
add
dec
xchg
xor
lret
out
sahf
jecxz
bound
negb
scas
inc
movsb
push
cmpsl
loope
pop
fisubrs
mov
test
sbb
inc
jle
sti
xchg
push
arpl
dec
mov
pop
or
and
insb
xlat
lret
cs
je
cmp
imul
mov
cmp
push
icebp
imul
mov
dec
cmp
pop
stos
sbb
sub
mov
jb
ficompl
je
mov
mov
jp
lret
mov
fidivl
shrb
sti
imul
popf
sbb
push
subl
gs
scas
add
popa
test
sub
inc
cmp
imul
fwait
or
cltd
cmp
add
pop
mov
mov
xor
inc
cltd
shlb
add
add
and
clc
sbb
cmp
je
sahf
xor
mov
sahf
add
xchg
xchg
call
add
xorl
and
lcall
out
loope
in
fistpll
mov
pop
jnp
test
sbb
fcomi
stc
adcb
lcall
in
test
push
sarb
jno
pushf
popa
testl
mov
imul
sub
aam
add
xchg
mov
inc
es
jl
mov
sub
pop
pushf
test
push
in
and
loopne
leave
xchg
mov
rorl
xor
out
pop
ja
sbb
sbb
loop
cmp
lahf
push
dec
incl
notb
bound
les
mov
outsl
add
jp
roll
mov
xor
and
adc
jne
cmp
insl
sub
add
jge
idivl
jecxz
pop
sub
outsl
adc
jne
mov
cwtl
push
lea
rcrl
push
or
fisttps
xchg
sbb
xchg
and
push
push
pop
hlt
sub
dec
out
cmp
cli
sub
lret
mov
pop
and
sti
aad
jae
movsl
ljmp
pop
ret
stos
lods
cmpsl
data16
ss
pushf
or
gs
out
cld
inc
cmp
jmp
sbb
mov
repz
jecxz
iret
jmp
pop
icebp
sbb
xlat
jmp
jae
stc
xchg
jne
pop
jb
rcrl
in
push
cmpsl
xchg
dec
sarl
cmc
adc
fsubrs
mov
cmc
fisubrs
pop
divb
int
xchg
sarb
flds
xor
cmp
bound
and
and
push
pop
mov
fcoms
inc
popf
or
ret
scas
and
imul
jns
mov
mov
imulb
mov
jle
pop
out
cmpsl
cmp
push
or
mov
push
shl
out
or
pop
mov
arpl
dec
add
test
lret
push
sub
xchg
sbb
lods
sub
lcall
loop
add
sub
in
cwtl
jle
pcmpeqb
decl
push
adc
popa
push
xorl
cmp
rorb
fsub
add
je
test
push
cmp
faddp
inc
int
sub
jle
and
fnstenv
push
sbb
fs
push
push
add
gs
push
dec
mov
and
pop
add
xlat
in
jae
ss
loop
lods
xchg
test
in
mov
int
adc
in
shlb
sbb
gs
cltd
sbb
push
and
rcr
fcomi
jb
mov
mov
scas
je
or
mov
cmp
xor
adc
add
mov
cwtl
out
addr16
nop
inc
xor
in
push
add
push
out
cmp
dec
sub
or
and
xchg
cwtl
mov
rcrl
push
pop
add
test
in
add
push
xchg
mov
outsl
out
and
movsb
fidivs
inc
test
xor
xor
cmpsl
xchg
dec
cmp
mov
push
jge
lret
xchg
xchg
ret
out
xchg
dec
xchg
xor
or
adc
fbld
pop
out
sub
sub
xor
movl
gs
lcall
rcrb
lcall
cltd
lahf
pop
popf
std
je
mov
ljmp
mov
push
in
ret
xchg
lods
bound
push
or
and
inc
sub
fldl2e
inc
dec
divl
popf
dec
flds
in
push
fcmove
popf
mov
data16
gs
fldenv
push
mov
mov
pop
je
daa
repz
in
or
mov
loop
outsb
roll
test
push
xor
mulb
shl
leave
rcrl
shll
adc
mov
push
and
lock
pushf
push
je
les
sbb
xor
or
and
jns
cli
cli
adc
repnz
out
addr16
pop
or
inc
cmp
dec
call
ret
inc
sbb
push
je
sub
ja
jnp
xchg
cmp
stc
cmc
dec
es
adc
lea
je
andl
iret
adc
jno
jle
lret
adc
cmp
test
out
pushf
jle
mov
push
aaa
loope
and
push
int
lahf
out
cli
push
cmp
ljmp
imul
fstpt
cmp
xor
movsb
test
fisttpll
jns
insb
into
mov
pop
imul
cmp
lahf
add
dec
add
and
cltd
das
xor
dec
fildl
enter
cmc
icebp
insl
jle
lock
mov
xor
pusha
je
xor
notb
cmp
fldenv
into
pop
scas
in
mov
pop
jb
xchg
jne
sub
or
sub
mulps
cmpsb
xor
mov
ret
pop
scas
scas
mov
add
mov
or
sub
cmp
pop
js
xor
js
fisttpll
adc
push
movsb
xlat
loopne
shl
cs
add
mov
mov
sbb
sarb
and
cmp
adc
dec
movsl
push
inc
ret
mov
data16
adc
mov
das
lods
imul
mov
aad
sbb
xlat
dec
jnp
in
push
pop
add
dec
addr16
fistpll
cmp
bound
es
subb
idivl
fwait
mov
imul
test
pop
cmp
cmpsl
not
xlat
test
adc
outsl
jne
push
inc
insb
mov
subb
insl
gs
sbb
jmp
push
out
arpl
push
pop
pop
imul
mov
fsubp
sub
push
fistpll
mov
push
in
movsl
mov
xor
mov
stos
or
in
adc
pushf
fidivrl
sti
and
pop
jbe
leave
into
or
jo
sbb
xor
sbb
jp
ljmp
jno
adc
out
imull
bnd
leave
jmp
or
je
jge
bound
andb
divl
imul
outsl
fcomp
jb
sarb
testl
mov
inc
push
arpl
fbstp
inc
or
inc
inc
dec
xor
je
add
mov
sub
jg
call
push
xor
lcall
fs
stos
xchg
cmp
fwait
jae
pop
dec
lcall
sbb
jno
sub
lret
sbb
and
sqrtps
lea
push
lock
mov
mov
adc
shlb
testb
inc
cmp
pusha
adc
jbe
loop
lea
jo
or
clc
mov
and
xor
adc
cmpsb
cmpsb
aaa
iret
push
dec
add
movsl
xchg
stos
lcall
and
aas
inc
mov
stos
lods
andl
push
mov
mov
imul
push
push
or
lahf
pop
or
or
clc
cld
stos
jns
or
dec
mov
in
jo
xchg
test
sbb
sahf
pop
mov
xor
mov
mov
inc
or
mov
push
push
pop
je
cmp
lock
into
nop
bound
ret
or
or
adc
pop
aad
into
sbb
lock
mov
mov
sub
lods
mov
mov
mov
mov
xlat
ja
std
cmp
sub
cmp
int
fcmovbe
popf
outsb
aad
dec
cltd
hlt
xchg
and
into
std
inc
sti
rcll
insl
cmpb
jo
lahf
ret
sub
add
int
loop
std
imul
and
jne
jne
movl
cld
jo
sub
pop
roll
dec
xchg
das
push
jae
test
hlt
bound
mov
dec
out
jmp
xchg
mov
jo
movb
js
ficoml
pop
inc
jae
xor
adc
pop
cmp
xchg
or
sub
fdivp
test
outsl
ds
movsl
push
mov
outsl
leave
sbb
xchg
jne
cmpsl
shlb
inc
and
push
pop
fwait
pop
mov
sbb
or
iret
pop
insl
cmp
sbb
arpl
xchg
push
dec
xor
mov
in
pop
fildl
jbe
sarl
aad
in
and
sbb
lea
lods
arpl
mov
andb
repz
push
popf
xchg
add
sbbl
xchg
sbb
push
push
inc
movsb
push
aam
xchg
add
xor
push
xor
sbb
fisubs
call
lock
leave
scas
jg
ret
ja
pusha
pop
mov
cmp
mov
sub
movsl
cwtl
sahf
in
jae
mov
push
lret
loope
rol
popl
addr16
cli
inc
fwait
cmp
stos
enter
ljmp
sbb
out
xor
mov
mov
scas
jmp
push
lret
add
dec
mov
enter
pop
out
out
sahf
pushf
test
les
pop
in
mov
dec
mov
jne
cmp
sbb
cmp
int3
cmp
sbb
lcall
add
loope
sbb
data16
shl
loopne
cmp
cmpsb
pop
stos
out
mov
sbbl
popf
pop
cmp
insl
test
xchg
cmpl
int3
xor
cld
jmp
enter
push
sub
insb
add
cmp
bound
xor
test
push
cmp
repz
pop
mov
mov
jnp
imull
roll
xchg
mov
nop
jmp
insl
lret
pusha
sahf
jae
mov
loope
cmpsl
push
lret
enter
lods
jmp
fidivrl
mov
fsubr
xor
clc
fidivrs
icebp
push
or
cmp
mov
mov
or
mov
clc
and
cwtl
fsubp
sbb
sbb
ficoml
sbb
jno
cmpsb
popa
sbb
pop
mov
or
ljmp
loopne
fcomps
xchg
and
sbb
daa
mov
lahf
sub
test
jmp
or
in
sub
or
cmc
mov
jecxz
mov
inc
jo
sbb
xor
sarb
je
cmp
jmp
divl
shlb
mov
cmp
andl
popl
cmp
js
leave
inc
pusha
push
push
ljmp
jb
aaa
inc
adc
pop
arpl
push
lcall
xlat
leave
sbb
sbb
xor
outsl
leave
pop
mov
leave
sbb
movsl
pop
movsl
add
adc
out
mov
add
or
in
mov
fcmovu
fwait
add
inc
xor
adc
or
enter
std
stos
movsb
inc
out
jo
adc
nop
mov
popa
push
inc
inc
roll
push
lret
sbb
leave
cmp
arpl
add
in
mov
mov
mulb
pop
pop
jb
repnz
sub
cli
out
xor
jl
jge
pop
in
push
jmp
movsb
ss
mov
lock
in
xchg
sti
bound
popa
cmp
fidivs
and
sub
mov
addr16
inc
pop
adc
push
add
pop
cli
bound
leave
fmuls
fistps
into
loope
add
in
sub
lret
in
inc
in
pop
sbb
pop
push
adc
fidivrs
lret
sbb
into
stos
lcall
push
push
cmp
push
ljmp
sub
mov
lods
inc
lcall
dec
pop
mov
add
fcomip
xchg
movsl
roll
push
rcl
call
lea
scas
xlat
jo
nop
mov
jo
test
sarl
mov
or
xchg
movsb
inc
cli
out
push
in
add
or
orb
pop
cld
loopne
incl
cwtl
jo
inc
repz
dec
inc
push
lock
daa
addr16
pop
dec
push
shll
out
dec
lods
in
fwait
clc
arpl
aas
aas
pand
fstpt
out
in
mull
pop
mov
push
aam
xor
scas
push
sub
xchg
fildl
mov
dec
and
sti
in
lret
or
jp
repz
and
xchg
push
mov
fisttpl
jmp
mov
movsbl
mov
inc
mov
and
js
orl
std
orb
and
push
jecxz
insb
push
js
flds
mov
icebp
out
xchg
sub
mov
mov
mov
pop
divb
or
adc
push
push
ret
fsubs
cmp
fadds
mov
clc
xchg
test
ja
rorl
fnstsw
adc
or
test
pop
sbb
push
loopne
test
mov
mov
push
adc
mov
inc
scas
dec
in
into
add
je
mov
mov
sti
mov
lods
add
cmp
dec
sarl
lret
imul
arpl
test
outsl
imul
rorl
lahf
movsb
push
aam
pop
xchg
pushf
push
andl
icebp
dec
dec
xchg
pop
insb
jb
mov
push
js
mov
mov
aaa
xchg
jnp
mov
sahf
jmp
mov
mov
mov
add
mov
push
dec
jecxz
and
cltd
jne
loopne
rsm
sbb
lock
leave
jno
xor
and
add
out
imulb
ljmp
insl
sbb
push
outsl
std
inc
add
push
sbb
push
pop
aas
add
xor
jbe
lock
inc
adc
loopne
vpsrad
xlat
add
call
pop
mov
xor
mov
fnsave
push
jae
call
mov
push
xor
stos
repz
xchg
lcall
dec
dec
cmpsb
dec
mov
add
dec
add
ljmp
sub
dec
loop
inc
or
in
push
xchg
jecxz
hlt
pop
testb
stos
and
mov
mov
pop
jo
jae
dec
push
adc
ds
mov
jno
cmpsb
mov
lret
cmp
inc
aad
jle
xchg
xor
sbb
sahf
sub
add
jp
test
int3
lret
xchg
push
lcall
dec
mov
js
dec
mov
std
rol
in
in
lret
mov
or
into
xchg
test
ds
pop
xchg
adc
push
xor
mov
add
inc
mov
jno
sbb
rcrl
gs
imul
cmp
push
dec
lods
cwtl
shll
add
lock
xor
jge
movsl
cmc
mov
jg
nop
dec
jg
pushl
stos
es
and
or
cmpsl
lds
cmp
repz
ljmp
adc
mov
loop
rclb
lea
fs
or
mov
dec
cmp
mov
test
inc
mov
adc
jns
les
lahf
xor
adc
xchg
sbb
int3
jne
mov
mov
mov
jno
pop
outsl
cli
jb
sti
test
or
clc
fnop
addr16
gs
mov
cmp
in
pop
lds
mov
jmp
outsb
cmp
sbb
hlt
clc
movsl
and
xor
cmp
mov
outsl
cs
sub
mov
and
data16
adc
mov
mov
adcl
repz
ds
inc
push
je
pop
in
jg
and
and
lcall
aas
or
sub
xchg
in
xor
push
jnp
test
jo
fisubs
xor
add
outsb
pop
jne
aam
test
scas
mov
mov
jne
ljmp
mov
cmpsl
cmpsb
xor
fwait
xor
in
pop
inc
xchg
pop
add
bound
adc
jmp
aad
nopl
dec
mov
fistps
scas
leave
and
mov
shlb
or
pop
sub
rcll
testl
into
pop
cltd
fs
hlt
rclb
and
addl
nop
lods
pop
push
push
mov
addr16
mov
mov
loopne
xor
mov
jae
mov
test
pop
push
inc
jg
cltd
cltd
pop
jne
sbb
lock
je
ds
adc
out
and
cld
mov
leave
loop
fsubrl
add
pop
push
mov
icebp
xor
rcrb
fbld
loope
pusha
add
rolb
mov
out
adcb
xchg
mov
sbb
outsl
jb
scas
mov
btc
shrb
xchg
outsl
fisubs
push
push
mov
sti
push
fcomp
adc
bound
mov
xlat
mov
add
movsl
inc
fwait
jmp
xchg
pop
cwtl
jae
dec
jns
notl
xchg
or
insb
add
adc
or
mov
lock
leave
sbb
push
lds
int3
jo
add
rep
add
stos
loopne
inc
sbb
add
sub
mov
jno
inc
stos
sbb
test
cs
pop
xchg
fnsave
jne
and
out
lcall
lret
mov
pop
popf
push
hlt
mov
stc
xchg
rclb
pop
sub
lahf
mov
popf
stos
xchg
mov
movsb
xor
mov
sub
xchg
jns
loop
outsl
addr16
mov
mov
rcl
cli
cmpsl
add
je
cmc
pop
aad
dec
loopne
jp
jmp
js
jno
sahf
jb
jne
lahf
mov
aad
add
test
les
mov
daa
mov
repz
sbbl
mov
sub
inc
jmp
mov
int3
loop
imul
add
cmp
addr16
inc
lock
ret
fwait
jo
sbb
iret
dec
or
push
lock
mov
push
loop
xor
xorb
jmp
adc
rcrb
cmp
adc
sub
sub
aas
jo
xorl
nop
and
xchg
stos
cmpb
dec
dec
repz
pop
add
sub
jecxz
dec
push
inc
mov
subb
out
xchg
mov
fldt
movsb
xchg
shl
pop
mull
movsl
loopne
icebp
imul
inc
push
xchg
pop
in
lods
pop
or
and
mov
out
icebp
add
jmp
clc
mov
xchg
roll
lahf
pop
lods
or
sbb
aam
adc
cld
add
decb
je
cmp
jge
xor
xor
or
sub
repz
es
cmp
loop
xchg
int
clc
adcb
loope
sub
lods
shlb
stos
shr
sbb
jns
imul
adc
subb
fiadds
push
and
cld
inc
jae
lock
std
iret
mov
data16
cmc
mov
ljmp
daa
and
aad
movsb
sub
lret
cmc
dec
cmp
fs
ss
lahf
test
stos
mov
les
popf
aad
mov
bound
push
jecxz
mov
xchg
dec
outsl
adc
popa
and
sub
fmull
cmc
std
mov
mov
js
mov
jge,pn
pop
test
fcoms
pusha
out
movsl
aad
xchg
pop
loopne
popf
mov
push
pushf
and
pop
sub
shl
call
jle
pop
lret
test
lock
stos
test
aad
mov
jnp
adc
push
test
sub
sub
add
or
inc
mov
aad
ret
iret
inc
xlat
add
inc
pop
xchg
bound
push
or
ret
push
jp
and
pop
aaa
subl
and
pop
in
js
mov
cmc
shll
test
in
pusha
in
fiaddl
mov
cmp
xchg
mov
out
xchg
or
jl
movsl
mov
fwait
jecxz
psubd
lock
mov
fsubl
jp
pop
lods
jbe
xchg
pop
push
ss
mov
cltd
shrb
lahf
das
pop
pop
stos
sbb
xchg
daa
bound
jmp
sahf
cmpsb
sahf
pop
xor
mov
testl
xorl
inc
adc
or
sbb
jae
or
cmp
dec
mov
ja
and
pushf
outsl
xchg
xchg
dec
daa
lret
into
jle
outsb
xchg
movsl
add
mov
test
inc
and
add
dec
xchg
lods
jge
ja
int3
mov
jp
or
xchg
lahf
mov
repz
clc
in
xlat
fsts
sub
pop
jns
dec
adc
inc
mov
lahf
pop
in
popa
mov
scas
dec
loop
mov
aam
xor
into
test
lock
or
sbb
inc
fisubl
jmp
lret
dec
pop
dec
add
sub
pop
inc
stc
shrl
mov
add
in
push
rorb
adc
dec
fstpl
adc
cmc
jae
and
dec
push
cmp
lahf
sub
inc
mov
and
push
mov
pop
add
mov
fnstsw
ds
inc
cmp
dec
sahf
fwait
leave
dec
rorl
dec
or
push
jnp
or
cs
mov
push
xchg
mov
imul
call
pop
jl
fs
lea
pop
jnp
push
xchg
pop
cmpsb
jo
adc
lds
xlat
pushf
stos
lods
pop
icebp
jb
mov
std
dec
and
inc
dec
inc
xor
cmp
iret
loopne
cmc
fisubrs
test
das
enter
mov
mov
xor
cmp
out
fstpl
movsb
int
xchg
and
mov
xchg
cmp
or
and
adc
fwait
add
pop
insb
mov
std
ja
push
mov
lahf
push
add
je
xor
mov
mov
fisubrs
aad
ljmp
mov
sbb
fidivrl
jp
fdivs
add
js
cmp
fisubs
imul
clc
sti
movsl
inc
xchg
mov
xchg
int3
lock
test
push
adc
mov
cmp
xor
jecxz
je
or
jne
aas
inc
mov
add
push
pop
add
nop
xchg
stos
push
adc
scas
mov
adc
push
std
out
mov
fsub
pop
mov
and
pop
test
and
jge
cmp
pop
incb
dec
or
xchg
into
pop
pop
mov
xchg
cli
test
xor
nop
lock
cmpsl
adc
sbb
fwait
ljmp
or
inc
jb
test
test
sbbb
mov
in
mov
shll
out
jae
repnz
cld
addr16
cmp
mov
fistpll
fdivrs
lock
xchg
scas
aaa
and
das
sbb
inc
mov
out
mov
xchg
aas
mov
clc
stos
call
call
push
and
ret
push
push
out
test
inc
mov
fdivs
outsl
jmp
push
inc
add
push
sbb
dec
jp
nop
mov
and
sbb
or
push
xchg
jecxz
nop
idivb
mov
push
mov
fs
cs
pop
adcb
cmp
pop
sbb
test
cmp
push
cwtl
int3
push
dec
or
pop
into
sbb
inc
aaa
arpl
mov
popa
or
les
jb
add
ja
nop
and
sbb
push
adc
push
mov
sub
mov
mov
inc
stos
adc
pop
cmp
push
in
imul
insl
repz
dec
add
imul
cmovns
sub
fsubrs
push
xchg
scas
pop
mov
cmpsb
fs
xchg
mov
rolb
inc
notb
outsb
xor
adc
dec
jne
or
inc
pop
xchg
cmp
push
and
mov
imul
jmp
mov
sbb
jne
dec
sti
inc
push
pop
xchg
hlt
push
push
ljmp
sbb
push
fnstcw
popa
push
or
into
fnstenv
xchg
mov
add
xor
out
push
mov
push
xchg
loop
cmp
fmull
xor
cli
sub
mov
sbb
aaa
mov
mov
adc
dec
jmp
and
add
cli
mov
mov
xor
es
mov
sbb
scas
push
and
inc
and
dec
and
xor
push
or
jb
cld
jno
jmp
pop
push
addr16
pop
test
lods
xchg
loopne
pop
mov
or
sub
push
sbb
xchg
or
add
mov
lahf
in
insb
repz
mov
xchg
cmp
sub
pop
and
lret
pop
je
sub
or
or
sbb
fwait
stos
jns
mov
aaa
adc
pop
pusha
stos
rorb
fiadds
adc
and
das
insl
rorb
sbb
pop
fwait
push
jnp
add
mov
fbld
cmpsl
cltd
mov
mov
sub
push
cli
dec
enter
stos
ss
xor
aaa
lods
pop
ficompl
mov
jbe
pop
daa
ja
das
add
out
jp
inc
mov
loop
lahf
mov
mov
xchg
add
dec
mov
icebp
and
pop
iret
push
dec
dec
mov
pop
xchg
es
pop
cli
stos
dec
pusha
je
cs
stos
shl
dec
decl
loop
lret
cmc
dec
insl
dec
ss
pop
mov
push
mov
or
into
movsl
leave
ljmp
mov
and
sbbb
aam
test
add
loope
hlt
add
jmp
and
push
rolb
pop
or
das
ret
dec
fcomps
dec
xor
mov
cmc
add
cmpsb
sbb
loop,pn
jo
shrb
push
jge
ret
pop
mov
mov
and
ret
int3
out
inc
push
out
cmc
jne
jle
xchg
push
mov
fnstsw
jae
iret
fbstp
outsb
or
lcall
jmp
ds
jmp
fcomps
scas
imul
inc
out
std
adc
adc
js
popa
fnstcw
xor
in
ret
add
add
ficoml
mov
in
pop
ret
cltd
push
mov
aad
mov
arpl
jne
xchg
pushf
fiaddl
dec
popa
inc
outsb
addr16
inc
lods
pop
bound
push
repz
xor
xor
xchg
push
jo
mov
dec
dec
push
lret
mov
insl
inc
xchg
pop
testb
or
test
push
aas
and
fsubs
adc
inc
mov
leave
pop
stos
dec
cmp
test
adc
cwtl
std
cmp
sub
in
mov
clc
int3
push
xchg
xor
roll
jle
dec
sbb
fcomi
ret
les
pop
jg
and
in
sbb
xchg
cmp
mov
sub
sbb
xchg
jmp
sbb
add
inc
clc
push
roll
lcall
ret
ja
les
mov
fidivl
pop
daa
shl
jne
mov
jg
out
stos
dec
out
pop
lret
pusha
push
lds
popf
mov
push
insl
inc
inc
into
pop
pop
popa
jns
mov
jmp
inc
sub
inc
bound
sub
inc
aad
add
or
lock
shrb
enter
rcl
add
push
push
pop
std
jge
sbb
mov
pop
xchg
push
jle
bswap
cmp
mov
sbb
aas
enter
loop
adc
and
repz
mov
shrl
push
inc
mov
push
jno
fadd
dec
pop
add
jge
pop
shlb
mov
loopne
cwtl
sahf
loopne
mov
pop
lcall
iret
je
ds
ja
stos
add
push
adcl
mov
fwait
mulb
fdivrl
stc
add
xor
sarb
add
clc
divb
cmp
adc
shrb
xor
cwtl
insl
or
lods
in
xor
std
dec
imul
or
dec
sub
fisubrl
popa
subb
dec
cmp
xchg
repz
jecxz
xor
push
mov
arpl
add
and
loopne
jmp
sbb
or
dec
xchg
inc
xchg
sub
xchg
aaa
fsubl
xor
sti
add
mov
pop
cmpl
xor
mov
stos
ss
icebp
inc
pop
in
pop
insb
add
or
ljmp
jb
sbb
or
jl
fstpl
insl
mov
call
xlat
sahf
sub
adc
adc
imul
xor
and
scas
lahf
imul
push
lea
push
rclb
lcall
or
lea
sub
pop
xor
vunpckhps
mov
sbb
sahf
dec
mov
testl
jecxz
test
dec
xlat
out
pop
adc
ja
fiadds
rolb
mov
xor
push
outsl
pop
iret
dec
movsb
or
inc
imul
jg
iret
divb
stos
xlat
jbe
rcrb
fwait
loopne
fildl
je
nop
cli
divb
dec
adc
in
popa
les
int
push
push
mov
sub
mov
or
and
andb
mov
inc
std
mov
fwait
psubusw
fucomp
les
lcall
test
add
movsb
mov
sbb
cli
mov
std
xor
loop
xchg
lea
dec
xchg
xor
ret
ret
hlt
mov
mov
addr16
sbb
pusha
mov
cmp
cmpsl
mov
or
aas
adc
cltd
dec
aas
dec
std
pop
jno
push
in
lahf
push
lods
push
xor
in
cmp
mov
in
and
jecxz
push
fwait
int3
jg
dec
loope
and
or
cwtl
pop
jns
insl
mov
and
ret
push
test
jne
jecxz
imull
loopne
jmp
dec
xor
mov
mov
popa
ret
loop
inc
sub
jp
loope
cli
repnz
out
jg
xor
hlt
push
stc
fprem1
mov
push
int
shlb
jnp
sub
mov
or
stc
fwait
dec
xor
mov
mov
in
mov
sti
cmpsl
aaa
std
out
iret
pop
je
lea
mov
insl
mov
sbb
cmp
rcrl
mov
xor
lcall
lods
mov
or
shlb
sahf
shrb
mov
mov
sub
jmp
out
jns
mull
jp
xchg
repz
dec
mov
pop
xchg
cmpsl
gs
andb
inc
dec
or
mov
xchg
mov
ja
aas
push
ret
sbb
jbe
dec
xchg
stos
pop
add
jge
ljmp
cltd
or
push
pusha
cli
cmp
test
inc
rcrb
test
das
test
sarl
aad
call
mov
sbb
cmpsl
cwtl
test
mov
xlat
mov
push
jo
and
mov
mov
add
lcall
mov
cltd
enter
mov
cmp
aaa
jbe
dec
jmp
divb
push
pop
add
leave
sbb
add
add
and
stos
imul
dec
adc
testb
push
xlat
outsb
jae
enter
out
cli
pop
mov
pushf
adc
bound
in
sbb
divb
add
cmp
add
sbb
xor
add
cwtl
cwtl
data16
aas
ljmp
lds
mov
rcrb
xchg
cld
enter
lods
rcl
dec
mov
jb
lods
sub
or
loope
adc
fstp
xchg
call
lods
lods
aad
add
mov
inc
jp
xchg
cmp
sbb
daa
mov
loope
mov
iret
mov
xor
pop
lcall
pop
sahf
inc
inc
lds
fs
imul
sbb
pop
std
ljmp
jl
aad
mov
movsb
jg
test
mov
add
xor
jo
pop
ficomps
xchg
or
dec
sub
cmp
and
push
xchg
pushf
in
inc
mov
pop
mov
movsb
je
popf
xchg
cwtl
and
gs
cmp
adc
gs
xchg
sbb
adc
ja
out
mov
lock
ret
xchg
cmp
test
dec
push
xchg
shll
pop
loopne
xchg
andb
lahf
sbb
pusha
int
xchg
dec
jecxz
pop
sbb
inc
es
or
insb
call
push
push
stc
xlat
psubb
inc
inc
repnz
test
and
shr
inc
stos
push
add
adc
imul
incl
add
stos
xorl
pop
lahf
cmc
ret
into
loopne
icebp
pop
std
or
push
dec
sub
add
or
push
repnz
pop
aad
xor
fbld
cmp
fadd
pop
sub
dec
xchg
adc
insb
ret
or
ljmp
pushf
ja
mov
jmp
xchg
repnz
sub
inc
lds
out
xchg
neg
into
push
pushf
adcb
stos
movsb
push
add
fcoms
add
in
cmc
push
aas
push
cltd
lret
add
repz
rclb
push
inc
pop
push
cld
mov
arpl
lods
arpl
xchg
sbb
arpl
out
pop
add
adc
push
jle
mov
in
push
test
hlt
aas
or
dec
popa
add
inc
push
sar
or
fbstp
into
test
cmp
push
dec
in
das
xchg
or
sahf
pop
clc
int
out
pop
cltd
mov
and
pop
sub
mov
and
mov
fsub
jbe
leave
push
xchg
cwtl
std
mov
sbb
cmc
push
pop
and
and
fimull
int
mov
lcall
outsl
pop
fwait
scas
add
adc
lcall
mov
xor
aam
test
out
xchg
out
addr16
mov
push
mov
pusha
sub
orb
test
jbe
lret
pushf
jle
filds
inc
jmp
inc
push
shlb
cmpsb
insl
lcall
jno
fucomip
pop
loope
pop
jle
mov
cs
mov
xchg
bt
cli
out
movl
fs
aaa
push
loopne
movsb
add
negb
cmpsl
cmp
dec
jb
popl
xor
add
inc
or
mov
mov
shr
sub
imul
pusha
xchg
cmp
xchg
adc
push
scas
cmp
cmp
push
push
inc
push
sub
mov
cltd
clc
cld
sbb
cwtl
push
ss
addr16
repz
in
addb
int
jns
xchg
jns
push
andb
adcl
jb
loop
out
into
sbb
fwait
xchg
mov
jnp
mov
sbb
test
and
mov
cld
mov
add
cmp
aam
xchg
dec
sub
ss
mov
andl
lahf
fiadds
mov
pop
int3
pop
cwtl
addl
xchg
inc
loop
inc
enter
jnp
cmp
pop
pop
mov
jnp
dec
push
mov
mov
in
dec
xchg
sbb
lods
mov
sub
xchg
mov
repz
arpl
jns
insb
fisubrs
into
push
mov
mov
pop
mov
xchg
jo
idivl
pushf
outsb
inc
aas
jl
adc
inc
lods
cmp
je
xchg
cli
inc
xchg
negb
gs
adc
mov
mov
jno
jo
inc
fmuls
shr
out
sahf
xor
mov
into
out
jo
rolb
adc
dec
pop
xlat
cmpsb
cmp
cmpsl
mov
or
push
aaa
jl
mov
inc
pop
mov
cmp
and
inc
mov
mov
pcmpgtw
ds
or
inc
mov
inc
mov
mov
mov
mov
xor
fs
pop
mov
loopne
int3
mov
lock
xchg
add
dec
inc
cltd
ficompl
dec
xchg
std
subl
cmp
jg
adc
fcmovne
jle
push
negb
sbb
mov
es
repnz
iret
jge
inc
jecxz
inc
scas
jb
mov
sub
pop
cmp
into
jbe
cmc
or
or
inc
mov
shll
int
mov
inc
loope
movsb
pop
xchg
xchg
aaa
xor
repnz
add
es
push
jmp
arpl
test
stos
adc
pop
add
mov
xchg
dec
repz
mov
arpl
pop
sbb
cmp
dec
jmp
mov
add
dec
mov
or
jmp
fbstp
push
mov
das
jb
mov
cwtl
bound
push
out
leave
fwait
push
or
insl
mov
in
out
jbe
popf
dec
push
jae
and
xchg
mov
pop
xchg
inc
outsl
insb
add
adc
mov
orl
xchg
insb
sub
inc
ljmp
and
fnstenv
nop
fucomp
push
mov
push
lds
aaa
sbb
es
sarb
loope
ret
inc
xchg
mov
daa
icebp
jne
push
add
sub
out
loopne
cld
movsl
out
jne
or
std
mov
shlb
aaa
inc
mov
or
push
jno
repz
and
cmp
sahf
inc
mov
stos
sbb
lahf
cmp
out
cmp
daa
mov
test
add
mov
lcall
fs
lahf
push
and
sub
dec
inc
daa
xchg
lcall
rorb
add
lcall
mov
testb
ja
lock
xor
repnz
cs
and
out
addr16
adc
pop
cmp
adc
sub
roll
stos
dec
daa
loopne,pn
mov
and
dec
outsl
pop
int3
pop
mov
dec
xor
xchg
pop
push
data16
mov
outsl
lret
in
mov
movsb
adc
repnz
mov
call
fs
inc
sbb
fwait
cli
popf
jbe
inc
loopne
imul
rol
or
iret
ret
imul
fwait
daa
sub
loope
gs
jp
fisttpl
addb
mov
cmpl
daa
imul
pusha
cmp
cmpsl
push
cmp
cli
jno
cld
stos
lods
or
jb
mov
xor
add
hlt
lea
aas
xchg
sbb
mov
call
sbb
mov
ficomps
jns
dec
jle
leave
out
sub
sbb
mov
add
aaa
push
jge
jnp
jo
lcall
mov
inc
xchg
pop
mov
dec
cli
xor
inc
push
or
jo
add
inc
aaa
popa
pop
fidivrl
push
dec
dec
jns
mov
cmp
cmp
out
mov
popf
lods
sub
jecxz
out
pop
pop
mov
xchg
or
cltd
je
je
popf
sahf
cli
mov
lret
aad
mov
sub
xor
scas
mov
cmp
or
out
sub
cld
shl
data16
xchg
cmp
cmp
xor
rcll
stos
mov
xor
insb
add
test
cld
cs
sahf
dec
add
add
dec
mov
cmp
pop
and
push
cs
xchg
pop
into
dec
ret
xchg
cwtl
sbb
arpl
scas
pop
adcl
js
mov
mov
movsb
mov
jp
mov
shlb
xchg
jbe
sbb
out
lea
dec
mov
cli
pop
inc
xor
sahf
push
inc
adc
movsb
mov
sub
into
pop
add
pop
xchg
mov
sub
and
xor
sub
stos
js
imul
pop
ficompl
cltd
and
dec
dec
cmpsl
repz
out
stos
aaa
sbb
mov
pop
jl
xchg
dec
enter
loope
jle
aaa
push
pop
dec
add
cmp
adc
rcrb
xlat
shlb
fadds
insl
dec
popf
push
inc
dec
cwtl
lods
adc
negl
push
sbb
jne
cmp
shl
mov
dec
das
aaa
fimuls
arpl
xor
stos
gs
lcall
sub
cwtl
outsl
bound
add
dec
loopne
aad
mov
lds
nop
jne
pop
je
mov
or
inc
jae
lock
pop
add
add
jne
addr16
xor
jb
xchg
es
enter
pop
and
je
rolb
cltd
push
adc
push
daa
aas
sub
in
loopne
jne
sub
mov
mov
cmp
mov
loop
or
mov
rol
ds
pop
iret
aam
iret
int3
push
je
inc
bound
and
rol
into
scas
cltd
sub
sbb
inc
pop
incl
mov
inc
in
push
into
lcall
cmp
dec
ss
sub
pushf
cmp
add
ficoml
cmpsl
jbe
and
sbb
mov
xor
xor
scas
sub
fmull
dec
sub
shll
mov
pop
jae
pop
sbb
aam
faddl
repnz
je
leave
xchg
push
outsb
repnz
sahf
or
mov
cld
add
push
adc
lret
aaa
icebp
roll
rolb
dec
mov
mov
jo
mov
adc
jo
dec
or
add
test
inc
out
out
scas
loop
enter
pushf
ljmp
loopne
cs
add
or
adc
pop
adc
add
jns
mov
fisttps
add
mov
add
ffreep
or
sub
loop
mov
sub
mov
xchg
scas
lret
stos
packuswb
fcomps
sub
mov
fcompl
jns
stos
mov
mov
or
cld
and
out
mov
jmp
pop
or
into
addr16
push
adc
rol
jnp
cmp
mov
es
cmp
lock
adc
inc
ficomps
jg
lods
idivb
int3
mov
movsb
jmp
mov
mov
mov
push
cld
xchg
aaa
dec
push
cmp
ljmp
test
cld
push
and
xchg
xchg
xor
mov
or
jb
jb
pop
pop
mov
add
aad
outsl
xor
xchg
ds
sbb
push
jle
mov
pop
in
int3
sub
pop
mov
adc
jmp
cmpsl
ss
and
pop
lret
sub
daa
mov
xchg
aaa
push
fwait
rcll
sahf
xchg
jo
sub
es
and
dec
pop
and
aad
call
sbb
cmp
cmpsl
in
scas
mov
stos
ljmp
movb
int
add
cmpsl
xchg
mov
clc
xchg
add
test
movsb
xchg
and
ficoml
push
dec
dec
or
movlps
clc
dec
lods
leave
adc
xor
push
inc
adc
push
or
push
lahf
cmp
pop
push
jge
and
cmp
xlat
xor
or
push
sub
daa
mov
jecxz
stos
sub
push
dec
js
fsubrp
fsubrp
mov
out
or
stos
mov
fwait
pushf
jle
repz
xor
xchg
add
cmp
int3
icebp
mov
inc
mov
loop
and
and
or
js
loope
and
icebp
mov
repz
insb
dec
inc
sbb
out
lea
jp
inc
iret
repnz
les
pop
test
jle
faddp
jne
sub
jmp
xlat
ds
xchg
bound
mov
cmpsl
xchg
add
repz
add
ss
cmpsl
add
push
mov
fiaddl
push
xchg
mov
insl
enter
xchg
push
mov
leave
je
mov
in
das
aas
dec
cwtl
sar
jae
sbb
data16
mov
mov
mov
jno
stos
mov
or
jnp
rcll
xlat
bound
loop
dec
ret
test
stos
push
scas
or
mov
out
cli
sbb
pop
push
dec
sbb
pop
or
subb
mov
es
cltd
shlb
push
add
xchg
and
lds
xchg
mov
add
sub
lahf
or
mov
mov
shl
jb
pusha
aam
pop
cmp
imul
in
mov
mov
fdiv
hlt
ja
movsb
aad
nop
lods
stos
shlb
int3
cmp
bnd
stos
adc
pop
cltd
int3
mov
pop
ret
mov
cmp
lods
pusha
xlat
sbb
in
or
sti
mov
sbb
add
test
sti
mov
cs
mov
jbe
test
and
daa
push
cld
mov
jne
push
aas
mov
outsb
sub
dec
dec
and
nop
into
pop
outsb
jge
adc
shrb
rclb
jl
fcmovne
rcll
mov
adc
jbe
mov
sub
jmp
fisubl
adc
xchg
sti
movsl
xor
iret
jmp
sub
insb
addl
pop
sbb
sbb
push
pop
popl
test
dec
movsb
mov
call
push
jmp
idiv
out
cmp
adc
pop
xchg
xor
cmp
dec
push
int3
inc
orl
repnz
xchg
insl
data16
iret
mov
mov
hlt
clc
mov
hlt
fst
xchg
push
push
jae
dec
pop
or
inc
int
jo
shrl
lea
and
add
outsb
fnstcw
adc
loope
pop
jne
movb
int
movsb
loopne
xchg
and
cli
dec
and
scas
mov
dec
cmpsl
fucomi
dec
ffreep
adc
xlat
cwtl
insb
cmpb
or
add
fidivl
jmp
mov
aaa
xchg
call
mov
mov
mov
jae
int3
sbbl
xor
lock
sub
ss
push
fwait
mov
insb
je
popf
push
xchg
gs
sti
jbe
pop
cmp
or
shl
push
in
sbbl
sub
insl
daa
int3
ja
mov
into
test
jl
sub
xchg
adc
lahf
ss
popa
cmp
int3
mov
adc
sbb
mov
ds
or
out
xchg
jp
xor
fists
frstor
pop
rcrl
insb
pop
jecxz
movsb
imul
mov
and
fnstsw
xor
xor
sub
push
pop
fyl2x
fdivrs
adc
lods
lds
lock
add
add
in
xor
das
loope
mov
dec
push
mov
aaa
mov
aam
sbb
jae
mov
xchg
in
fmull
mov
sbb
add
popf
mov
repz
inc
sbb
xor
jb
stc
outsl
sub
sbb
ds
add
in
enter
vmwrite
test
test
cli
push
pop
int
jns
jbe
sbb
pop
mov
fidivrs
mov
fs
mov
mov
lea
fwait
nop
mov
fnstcw
je
sub
xlat
mov
sbb
clc
in
mov
sbb
icebp
mov
mov
xor
sub
mov
sbb
cmpsl
add
frstor
movsl
cmp
inc
mov
jno
sti
rclb
jnp
and
or
or
push
pop
or
js
lea
fstp
and
ret
sti
popf
and
or
adc
sbb
fwait
scas
dec
rcrb
jbe
xor
or
xchg
repnz
adc
repnz
push
shll
sub
roll
int
push
into
jge
dec
pop
repz
fnstsw
loop
loop
cmp
cmp
adc
aam
mov
addb
aam
imul
pop
add
or
fadds
test
loopne
fisubrl
cmpsl
sub
xchg
pop
mov
imul
imul
fildl
inc
mov
lahf
cmp
sbb
repz
jne
and
pop
add
ljmp
sub
cmp
shlb
sbb
rcrl
mov
shr
fnsave
inc
sbb
push
xor
sub
push
inc
dec
pop
push
sbb
mov
fsubrl
es
lock
cmp
xor
inc
dec
dec
shrl
dec
mov
add
push
add
imul
jmp
outsb
vpmacsww
lods
dec
pop
jmp
js
jp
repnz
sti
inc
test
or
and
bound
sbb
pusha
ret
mov
sbb
fnstenv
add
cmc
mov
lret
daa
mov
nop
fisubl
xor
jmp
stc
dec
pop
add
pop
test
rorb
iret
clc
mov
mov
das
or
test
xchg
test
inc
ficoml
mov
mov
jb
call
cmp
xor
out
pop
mov
stc
push
divl
in
enter
xchg
push
cltd
stc
pop
dec
stos
push
xor
mov
mov
xor
xor
in
je
dec
movsl
outsb
pushf
sub
in
jp
into
mov
lahf
fistpl
jmp
sub
cwtl
test
push
xchg
sbb
mov
shr
inc
jno
cs
lds
lods
mov
and
outsl
dec
push
sub
pop
sub
jae
mov
push
push
adc
das
sbb
out
movsl
xchg
mov
sub
push
rcl
xor
sar
inc
sbb
ret
dec
imul
insl
loop
aam
ret
xor
pop
jl
mov
push
jne
out
imul
test
sub
pop
hlt
repz
fldl
xchg
push
xchg
aad
mov
mov
xor
sbb
loop
je
fcom
data16
or
jae
je
cmp
pushf
enter
and
cmp
or
sbb
lcall
sbb
mov
movb
mov
add
out
jmp
cmp
jne
pop
xchg
or
dec
rcll
das
xchg
jo
dec
mov
test
cmp
jo
lods
push
jge
test
and
test
sbb
jb
lret
les
add
bound
stc
sub
pop
movsb
fs
jge
mov
inc
dec
mov
mov
or
sbb
int3
call
shll
out
sarl
jecxz
out
stos
push
mov
jge
in
add
lcall
insb
jl
movsb
push
imul
jb
inc
movl
jns
bound
fsub
shlb
pop
fistps
mov
lret
mov
pop
mov
jmp
pop
and
push
ja
xchg
hlt
cmc
dec
pusha
imul
mov
sarb
repnz
sub
fxch
adc
stos
add
dec
mov
push
mov
sbb
mov
mov
lods
lret
xor
pop
add
and
stc
lret
mov
adc
insl
adcl
lahf
loope
jg
shll
rcrl
sbb
cmp
add
mov
loopnew
ljmp
or
cwtl
lcall
iret
xor
dec
nopl
add
push
gs
add
addr16
dec
jl
loope
adc
cmc
shlb
or
sub
and
adc
orl
ffree
stc
sub
das
ss
mov
fiadds
sbb
test
rcr
test
out
adc
int
mov
mov
out
adc
sarl
bound
push
shlb
push
adc
adc
cmc
inc
add
adc
push
iret
adc
stc
or
rcll
ljmp
jbe
out
aad
sbb
shlb
inc
sahf
fwait
xchg
xor
lods
xchg
cwtl
add
push
pop
xor
mov
mov
push
repz
jns
jecxz
jo
cwtl
pop
xchg
or
test
rorb
movsl
mov
push
ror
mov
push
pop
orl
jae
lods
sub
fisubl
in
jnp
andb
stos
popa
adc
cmp
jmp
cmp
pop
scas
pop
bound
sub
or
mov
in
stc
push
vpmaxub
xlat
dec
cmp
dec
dec
adc
fsubrl
aaa
mov
lea
push
std
or
inc
xlat
pop
lahf
ret
aaa
push
nop
ret
cmpsl
loop
hlt
fcoms
cmp
cmp
cwtl
jb
in
sbbb
fbld
ljmp
out
test
sahf
movb
xchg
ja
inc
dec
in
or
adc
aad
iret
in
pop
dec
insb
mov
fdivrl
jns
and
xchg
out
inc
sar
clc
cmpsl
or
adc
or
xor
stc
rol
sti
movsl
pop
test
or
sbb
test
int
mov
mov
jb
pop
push
test
cmpsl
cld
pop
in
xchg
pop
xchg
stos
inc
sbb
or
pusha
push
scas
xchg
mov
jns
sarl
dec
jno
or
inc
mov
aas
lret
in
mov
inc
add
mov
sahf
and
loopne
dec
repz
and
nop
xchg
es
in
sbb
outsl
mov
aad
jb
sti
cmovnp
cmpl
sbb
pushl
scas
lea
incb
add
rorl
nop
aad
lea
inc
mov
stc
sub
push
nop
mov
sbb
xlat
insb
insl
imul
xchg
mov
loopne
push
leave
and
mov
lret
inc
call
add
bound
adc
sub
adc
decb
jns
lret
icebp
mov
mov
outsb
in
or
pop
into
mov
hlt
mov
push
ja
xrelease
pop
test
xchg
popa
in
inc
inc
adc
cli
rclb
cmp
pop
call
mov
adc
fiaddl
dec
xlat
pop
dec
lea
jmp
jg
pop
or
ret
adc
push
insb
nop
push
scas
insl
movsl
test
lds
ret
push
fwait
adc
je
sub
int
push
mov
and
pop
mov
adc
and
adc
daa
push
cmpsl
icebp
pop
dec
iret
or
mov
pop
xor
or
fdivrp
aad
xor
sbb
bound
cld
xlat
int3
incl
test
mov
nop
bound
and
jno
and
test
add
push
push
imulb
mov
das
xchg
sub
imul
cli
out
sbb
sub
sbb
lods
daa
mov
stos
in
xchg
xor
dec
jmp
adc
mov
sbb
aad
pop
fwait
xor
mov
std
xchg
mov
filds
dec
dec
add
in
add
les
sub
scas
jne
lret
fstpt
ds
mov
pop
mov
pushl
add
cmc
imul
cltd
jge
clc
arpl
pop
pop
dec
stos
jbe
dec
std
pop
pop
push
sbb
mov
add
inc
cmp
adc
cmp
jno
mov
mov
lret
xchg
rorb
mov
xchg
cmp
pop
stc
mov
fmul
mov
das
cmpsb
sbb
inc
int
dec
xchg
xchg
mov
icebp
add
vpshld
popa
jns
push
xlat
mov
orb
hlt
add
inc
jo
dec
pop
or
inc
std
xor
mov
cli
das
mov
push
es
sub
sub
clc
mov
into
jae
xchg
add
xchg
push
push
sahf
add
xchg
test
roll
cli
push
xor
rcrl
and
adc
outsb
cmp
filds
pop
push
mov
test
adc
mov
xor
into
push
jle
mov
inc
test
loopne
mov
or
test
mov
push
sbb
dec
ret
loopne
int3
push
xchg
sbb
pshufw
mov
insl
add
aad
pop
pop
shl
jmp
xchg
mov
fisubs
adc
shrl
push
xor
mov
scas
sahf
pop
or
ljmp
int3
cmp
jnp
iret
xor
jl
xchg
jae
dec
mov
add
xchg
daa
cmp
jp
xchg
repnz
gs
push
lret
pop
jns
jmp
aas
or
cwtl
fsubrl
mov
dec
stos
in
dec
js
dec
push
add
out
daa
orb
mov
mov
add
mov
xchg
push
loope
mov
cmpsl
out
lds
call
inc
dec
clc
mov
sbb
addr16
mov
rol
adc
or
and
push
sub
in
dec
sbb
outsb
imull
iret
cli
mov
xor
cmpsl
sbb
mov
jns
mov
scas
push
es
stos
and
je
inc
fimuls
std
jge
lcall
test
dec
xor
mov
repnz
mov
inc
ret
ja
test
cmp
or
sbb
inc
dec
fidivrs
or
pop
scas
imul
popf
pop
mov
and
cmp
add
fucom
xor
add
out
adc
push
jbe
pop
mov
inc
lret
mov
dec
xchg
js
and
rcrb
lcall
xor
das
outsb
pop
xor
imul
mov
addr16
test
push
js
cld
cmpsl
lcall
in
mov
cs
cmp
cwtl
fst
filds
jl
and
sbb
stos
mov
pop
movsb
aas
xchg
mov
in
mov
stos
pop
arpl
loope
stos
outsb
and
mov
dec
stos
sub
adc
stc
arpl
bound
fucomip
or
xchg
jne
enter
xor
cwtl
and
push
arpl
sbb
fnsave
or
add
mov
xor
pusha
adc
stc
lahf
sbb
xchg
out
or
test
lea
repz
mov
scas
fucomp
in
sub
loopne
mov
xor
jne
sub
mov
popf
dec
sbb
push
pop
pop
lahf
fdivs
add
jo
push
fcompl
je
pushf
push
mov
rcrl
cmp
les
loop
out
bound
or
int3
mov
cld
imul
ja
out
cwtl
out
xchg
rcrl
and
xor
add
adc
ret
mov
test
scas
sarb
inc
jo
add
sbb
lcall
mov
cmp
adc
cltd
adc
data16
aaa
aas
aam
pop
jae
adc
pop
and
jno
movsb
sub
in
xor
add
mov
outsl
sahf
icebp
mov
mov
insb
dec
mov
jmp
fimull
repz
add
fldl
inc
ret
cmpb
push
mov
cld
es
insl
testl
iret
jmp
lea
std
test
xor
and
cmpsb
push
mov
in
add
nop
pop
iret
pop
int
leave
sub
xchg
sub
mov
scas
cli
pop
repz
jecxz
pop
fisubrs
dec
and
imul
sbb
aaa
xchg
hlt
jle
jb
leave
daa
lahf
push
insl
push
leave
push
push
cmp
aam
dec
dec
lcall
jo
out
pop
je
jae
add
mov
adc
sub
filds
divb
mov
inc
mov
iret
shll
enter
sahf
fs
fldt
adc
aam
xchg
addr16
nop
int3
jne
and
rcll
out
lods
mov
mov
mov
and
push
mov
and
sbb
push
jecxz
push
cwtl
sbb
inc
adc
sbb
incl
xlat
mov
daa
sar
add
xchg
and
cli
or
cli
sbb
rolb
orl
loope
outsb
jge
add
add
int
mov
cmp
popa
push
mov
jle
and
stc
pushf
lahf
stos
xchg
push
ljmp
cmp
pop
xor
add
adc
pop
adc
test
test
hlt
adc
cmp
or
ljmp
fmull
sbb
test
movsl
or
add
stos
dec
lea
scas
subl
pop
imul
jno
xchg
loope
cmc
add
lret
enter
fildll
mov
arpl
loop
sub
cmp
mov
mov
mov
dec
fcomps
sbb
mov
addb
or
imul
iret
sub
es
aad
ds
icebp
stos
sbb
mov
mov
addr16
push
sub
pop
mov
pop
shrb
int3
sub
ljmp
pop
ret
insl
icebp
xchg
xchg
imul
shl
ljmp
fsubl
adc
lods
fdivrp
pop
lahf
xor
sbb
xor
int
and
xchg
iret
iret
cmp
dec
pop
mov
outsb
mov
cmp
mov
cmpsb
std
andl
movsl
dec
dec
mov
loope
push
adc
dec
pop
pop
xchg
inc
cmovle
divb
fstl
js
cld
dec
outsl
cmc
mov
loopne
test
ror
test
cmp
or
or
popa
out
push
mov
outsl
xchg
mulb
mov
xchg
mov
mov
or
cmp
sbbl
test
sub
pop
mov
jae
cmpsl
mov
out
iret
div
sub
lods
or
data16
inc
adc
xlat
cs
sbb
inc
push
sub
push
cmpsb
cmp
jne
lret
jb
ret
cmp
dec
mov
popa
pop
cmp
cld
mov
xor
jne
or
lret
enter
out
dec
jmp
adc
scas
fsubrp
outsl
psadbw
popf
sub
sbbb
insb
sbb
push
pop
push
pop
xchg
ficomps
adc
pop
push
xor
cmpsl
dec
scas
inc
out
je
cmc
out
xor
int
divb
es
dec
jb
lock
cltd
stos
test
scas
jmp
push
push
jg
fstps
mov
mov
lcall
fcmove
dec
cltd
pusha
and
das
sbb
rorl
rorb
test
mov
mov
pop
ja
pop
pop
inc
sbb
dec
movsl
ja
pop
cmpsl
out
sub
jo
movsb
push
jmp
push
addr16
mov
or
int3
rcll
sbb
pushf
and
mov
mov
ljmp
xor
inc
out
mov
test
cmp
lahf
jmp
scas
add
adc
mov
lds
orb
fs
add
push
cmpsl
lret
sbb
jo
insl
or
ja
jns
insl
in
push
mov
jae
xor
add
int
xchg
sub
jle
xchg
pusha
ja
add
and
movsb
repz
pop
dec
out
scas
sub
mov
push
inc
and
mov
dec
mov
fisubs
sub
cmp
mov
add
inc
xlat
jns
imul
xor
mov
xchg
mov
mov
pop
push
loop
movsl
mov
xlat
sub
push
push
inc
or
loope
push
add
stos
stos
loop
aaa
lret
push
js
lea
rol
mov
push
jns
mov
das
jecxz
movb
or
mov
int3
xor
fidivrs
sub
mov
mov
xor
inc
push
repnz
xor
cli
adc
and
xchg
pushl
xchg
xchg
fsub
mov
test
and
mov
inc
cmpb
lcall
stos
xor
xor
les
int3
mov
das
mov
adc
pusha
les
and
add
xchg
sti
fstpl
mov
daa
mov
mov
into
sbb
jne
outsb
pop
imul
shrb
sti
adc
cmp
ss
push
or
andnps
adc
cmc
out
push
jne
or
cmp
gs
cmc
jg
mov
not
stc
mov
or
xlat
lcall
lock
cmp
jmp
cmc
fists
jnp
sahf
cmp
push
push
mov
je
scas
xchg
xchg
dec
xor
aam
inc
cli
jp
in
jo
inc
lea
xchg
mov
and
xlat
xchg
push
outsb
xor
lret
sbb
cmc
mov
test
paddd
jle
inc
mov
mov
xchg
test
sbb
push
cmc
aaa
push
inc
ds
cmc
aaa
pop
call
xchg
mov
loop
lods
outsb
and
sub
sbb
inc
insl
jbe
lahf
xchg
ljmp
mov
repz
popf
push
and
sarb
add
shl
jno
icebp
test
sub
pop
lods
xchg
inc
cs
in
dec
or
ds
in
and
loop
imul
hlt
adc
pop
cmpsl
out
cmc
or
mov
loop
pop
imull
nop
sbb
bound
or
push
xchg
xchg
cmpsl
xchg
hlt
xorb
sbb
xlat
inc
inc
imul
inc
pop
cmp
loop
jl
or
sub
and
test
jge
mov
xchg
cmc
out
pusha
xor
rorb
adcl
cmp
cli
dec
mov
inc
lods
icebp
adc
inc
pop
lock
dec
sbb
cmp
adc
dec
xor
pusha
sbb
int
mull
pop
dec
sub
jecxz
nop
sbb
sub
stos
aad
push
sti
jne
sbbl
inc
popf
or
popa
xor
sahf
repz
rcll
xchg
fcoms
nop
inc
xchg
insb
fs
outsb
int
pop
push
dec
xchg
mov
pop
test
cmovl
mov
inc
leave
sarb
mov
prefetch
mov
pop
fdivs
sbb
cmpsb
add
movsl
cmp
add
shlb
or
andb
cwtl
pop
int
xchg
ror
cmp
pop
jbe
dec
lds
lahf
movsb
addb
push
in
xchg
out
xor
and
insl
sub
stc
sbb
push
test
data16
sbb
test
push
pop
jmp
add
jge
in
pop
je
andl
pushf
jns
mov
cmp
fisubl
pop
int3
das
ficoml
ss
test
out
xor
movb
and
add
xor
sbb
sbb
data16
mov
mov
add
adc
xchg
mov
mov
pushf
mov
nop
popf
pop
dec
lcall
into
and
loop
add
push
push
outsb
mov
sbb
xchg
jns
jno
stos
daa
sub
pop
sub
lcall
add
or
scas
hlt
xor
out
insl
add
add
jle
cmpsl
xor
and
out
cmp
aam
fwait
mov
ja
xor
addl
sub
xor
sbb
xor
pop
jns
test
gs
cld
add
outsl
mov
mov
cmp
insb
frstor
call
add
scas
sbb
dec
popf
aad
out
rcrl
shrl
lea
xchg
rorb
mov
out
inc
mov
pusha
fisubrs
jp
xchg
adc
outsl
andb
xor
int3
gs
mov
add
xor
jbe
adc
cmc
pop
mov
shrb
fst
cmp
pop
bound
ds
mov
mov
sbb
movsl
cmp
lock
std
push
test
xchg
loope
int3
xorl
divl
pop
ficoml
adc
fstps
outsb
push
cli
test
addr16
daa
shrl
andb
push
and
jb
or
cmp
jno
cmp
jnp
add
test
aaa
ss
sub
lods
dec
jle
mov
out
int
loopne
jno
movsl
das
and
adc
xlat
test
mov
sbb
cs
pop
ret
aas
mov
sbb
sbb
or
pop
scas
fidivrs
push
sti
sub
hlt
mov
fisttpll
ljmp
inc
dec
dec
xchg
arpl
cli
imul
fxch
pop
shl
lahf
test
fnsave
mov
sahf
scas
xchg
xchg
bound
aaa
push
push
adc
jne
arpl
sub
movsb
sub
add
sbb
frstor
sbb
sbb
stos
adc
adc
paddusb
dec
sub
adc
stos
xor
stos
push
pop
stos
fdivl
pop
das
lahf
sbb
je
mov
ja
sub
lcall
sbb
arpl
and
call
xor
imul
in
outsl
and
adc
scas
xorb
lret
cmp
mov
call
adc
rcrl
cmpsb
mov
and
dec
int
mov
and
adc
mov
lds
imul
sahf
jae
xchg
mov
dec
cmp
push
or
pop
mov
pop
jae
outsb
pop
jmp
rclb
cmpsl
xor
leave
std
dec
xor
sahf
inc
js
loope
xchg
pop
lock
dec
xor
fneni(8087
popa
fcmovu
mov
and
xor
push
mov
add
push
pop
push
cwtl
pop
insl
inc
add
fimuls
int3
push
cmp
daa
dec
cli
das
stc
rolb
in
mov
inc
insb
pop
aam
inc
lret
lcall
mov
pop
int3
outsb
rcl
pop
dec
aaa
dec
inc
clc
and
dec
sti
add
jns
and
inc
je
inc
cwtl
out
data16
testl
xchg
adc
cltd
sbb
sarb
xchg
fdivl
les
sub
nop
fcmovu
sub
out
and
jg
sub
fistpl
lss
sbb
sub
xor
push
mov
outsl
iret
cmp
mov
lods
and
fldl
fnstsw
mov
fnstenv
test
je
addr16
dec
xor
dec
push
inc
dec
loop
mov
popa
ss
adc
adc
and
pop
or
lcall
fdivrs
mov
add
add
icebp
cmpsl
cli
add
adc
jae
jg
cmp
jmp
push
fwait
mov
into
dec
sbb
push
aad
clc
orb
in
sbb
test
mov
out
sahf
fcmovnbe
in
imul
push
xchg
out
sbb
mov
test
out
bnd
push
loopne
and
sbb
and
icebp
inc
mov
add
xchg
insl
std
adc
and
or
rcll
fwait
or
insl
sbb
pusha
popa
pop
les
pop
sbb
insb
dec
mulb
add
pop
stos
jno
mov
lret
sub
sub
xor
lret
lret
mov
or
ljmp
pop
dec
mov
pop
mov
shll
push
and
jbe
daa
imul
aaa
cmp
lea
call
dec
inc
mov
mov
add
call
sahf
mov
push
lret
pop
out
popa
dec
and
lods
iret
xor
std
scas
mov
mov
cmp
jecxz
pop
mov
push
sbb
push
stc
xchg
pop
push
xchg
inc
xor
sub
in
mov
xor
fisubs
into
inc
repz
mov
dec
inc
addl
inc
fwait
jnp
add
cld
xor
add
loope
xor
mov
pmaddwd
xor
outsl
add
cltd
xlat
pop
jno
rclb
pop
outsl
jg,pt
xor
nop
and
adc
or
mov
and
add
sbb
sbb
jbe
lock
pop
loope
int3
bnd
xchg
dec
clc
lods
xchg
cmpsb
addr16
icebp
out
out
fstps
js
mov
ja
int3
xor
sbb
cs
testb
js
icebp
into
jbe
xchg
xchg
sub
push
or
imul
mov
sbb
popf
lahf
xchg
movsl
enter
jnp
and
dec
movsl
in
cmpsl
cmp
stc
sbb
pop
stos
dec
adc
and
cmp
stos
xchg
pop
xchg
xor
inc
cltd
sti
sahf
repnz
mov
add
call
jae
sub
add
push
sub
add
pop
adc
sbb
clc
xor
mov
sub
cld
mov
fmul
jb
jle
pop
ret
add
test
filds
test
iret
mov
imul
nop
mov
js
xchg
popf
negl
sub
mov
push
push
pop
adc
cli
mov
lret
xor
gs
mulb
mov
mov
xor
dec
push
aaa
outsl
out
int
mov
into
dec
cmp
cli
nop
pop
push
rorb
ret
bound
scas
push
dec
inc
imull
loop
clc
lcall
mov
scas
pop
pop
rorl
cltd
or
mov
jmp
and
mov
movsb
mov
ljmp
add
pop
and
loope
shlb
sar
pushf
sbb
orl
push
sub
xor
fistl
es
rol
adc
cmpsl
dec
mov
mov
mov
dec
push
jl
push
frstor
lret
sub
inc
pop
jg
imul
mov
inc
mov
add
sbb
jae
fbld
add
cmp
pop
in
add
int
iret
jb
sub
and
shlb
xchg
insl
in
xchg
cwtl
ljmp
jbe
inc
stos
fisubrs
idivb
gs
aam
cwtl
sub
inc
cmpsb
inc
sarb
sbb
push
shll
adc
pop
mov
outsl
mov
cwtl
mov
jae
subl
push
and
cmp
dec
jecxz
lret
hlt
pop
xchg
cmpsl
push
jmp
stos
cmp
mov
fbstp
insl
mov
xchg
sub
retw
or
and
dec
adc
test
adc
xor
cld
enter
push
movsl
mov
les
loop
jo
jle
stos
mov
iret
aaa
adc
mov
js
push
fstl
out
mov
or
pop
fcoms
jmp
pusha
sub
jp
call
lods
shl
lods
add
and
dec
scas
mov
push
cmpsl
fs
data16
into
cmp
dec
adc
les
lods
cmp
in
and
xchg
ss
dec
ljmp
fucom
repz
lahf
and
shlb
inc
jbe
push
adc
xchg
dec
in
out
lds
xchg
lock
push
xchg
loopne
mov
sbb
and
add
or
mov
pop
push
push
dec
push
mov
nop
sub
les
or
cmp
push
insb
cwtl
clc
aam
ret
sub
cmc
dec
insl
mov
int
jns
mov
adcl
jecxz
mov
movsl
out
mov
into
pop
pop
inc
sub
or
popa
cli
push
and
push
dec
pusha
mov
ja
adc
or
add
out
xchg
add
lret
add
popa
and
jns
pop
insb
out
hlt
imul
sbb
inc
push
lea
inc
movsl
mov
xor
sub
in
fwait
shrb
fidivrs
push
jae
loop
add
pop
cmp
adc
stos
and
jae
jb
push
xchg
or
mov
xchg
lret
push
mov
sti
lods
xor
jmp
adc
rorl
and
push
insb
aas
add
lahf
and
int
aas
xchg
mov
lret
jo
int3
push
adc
cmp
or
lcall
sub
bound
mov
fbstp
cwtl
cli
fisttpl
sti
pop
ja
mov
jp
arpl
pop
dec
xchg
mov
nop
das
nop
out
cmp
mov
pop
mov
and
rcll
negb
push
bound
sub
mov
loope
std
sub
dec
fstp
xchg
add
in
jno
call
sbb
sbb
mov
and
rcrl
std
inc
pusha
int
decl
push
xchg
movsb
mov
mov
lock
fldenv
fiaddl
stos
or
push
cmpl
adc
iret
shlb
inc
push
pop
mov
les
outsb
scas
mov
jg
scas
in
inc
pop
test
pop
shl
jg
cltd
jp
xor
pusha
mov
xchg
pop
xor
mov
adc
in
mov
cltd
test
inc
outsl
jne
aaa
sub
sub
sub
in
add
mov
rolb
cmpsl
push
stos
lcall
hlt
aam
hlt
cs
out
or
add
sub
inc
push
outsb
test
je,pt
add
xor
or
loope
xor
ja
dec
jno
cli
dec
mov
sbbl
add
pop
and
jmp
pop
inc
push
adc
lret
loope
mov
addr16
xor
mov
lret
sub
int
out
into
cmp
arpl
cmpsb
int3
shrb
xor
mov
mov
into
push
mov
stos
jge
and
xchg
mov
jns
add
fisubrs
jne
inc
js
movsb
and
clc
sti
rclb
cmpsl
imul
loopne
mov
or
adc
cs
roll
stc
mov
stc
mov
aad
xlat
das
out
out
inc
fldt
lock
or
pop
jae
lock
daa
arpl
repnz
xor
data16
jne
rcrb
or
cmp
sub
les
pop
adc
addl
xchg
insl
pop
rol
xchg
dec
mov
push
fimull
repz
sub
add
ret
jb
fimull
enter
mov
lret
adc
into
sbb
movsb
into
push
test
out
add
push
fsubrl
aaa
insl
test
xor
and
xchg
sbb
cmp
or
bound
pop
push
testb
sahf
push
pop
inc
lds
dec
in
rcrb
fdivs
out
sub
mov
xchg
cmp
pop
sub
or
add
cmc
out
test
movsl
xor
adc
xor
fisttpll
hlt
ljmp
xchg
ljmp
and
ds
stos
sub
fucom
aaa
shl
out
add
fucomp
testb
adc
sbb
lret
sub
out
mov
enter
cli
js
aam
fsubs
in
loopne
fistps
sbb
and
adc
lea
push
cwtl
mov
inc
test
loop
enter
xor
and
cmp
mov
push
push
fdivrs
dec
pop
mov
pop
imull
lret
enter
iret
loopne
push
mov
scas
test
out
aam
sbb
fisubs
jge
cwtl
icebp
mov
test
xchg
push
mov
loope
loopne
aas
lret
lds
pop
sbb
test
test
xor
xchg
mov
test
scas
push
jno
std
push
lods
adc
addr16
pop
in
add
xchg
mov
fisubrl
lret
xchg
out
cs
std
add
cmpl
xchg
loope
dec
notl
adc
or
xor
enter
mov
adc
je
mov
push
daa
xlat
imul
js
cwtl
fnsave
jnp
cmp
inc
push
push
mov
sub
add
push
adc
inc
mov
dec
push
xor
mov
pusha
fs
sub
sti
add
push
ficomps
ja
mov
insl
scas
push
pop
mov
mov
fwait
cld
lds
mov
ret
cmp
andl
iret
push
pop
jb
adc
lods
mov
sbb
cld
aas
pop
sub
and
adc
inc
mov
and
pop
jle
add
fistpll
pop
movl
adc
test
pop
loope
push
mov
add
flds
adc
xor
dec
fmulp
jae
out
xchg
imul
xchg
in
adc
mov
faddl
imul
ljmp
cld
les
sub
cmp
hlt
repnz
jp
ss
mov
jnp
push
stos
loope
jmp
lock
pop
jge
lret
clc
gs
leave
pop
mov
push
clc
push
adc
mov
into
in
insb
enter
mov
mov
xchg
and
cwtl
mov
push
xor
jno
dec
cmpsl
push
in
jno
or
in
scas
add
mov
fmul
enter
inc
outsb
call
mov
cs
fisubs
lods
xor
cli
out
xchg
fnstsw
fistl
inc
mov
loope
hlt
lea
shlb
nop
clc
inc
daa
mov
repz
loopne
xor
lods
push
push
rcrb
cmpb
mov
stos
xor
xor
add
pop
lds
dec
mov
daa
add
ds
sub
rcrb
cmc
ja
imul
mov
sbb
xchg
fbld
dec
xor
push
clc
in
jbe
ds
xchg
mov
add
jg
xchg
mov
inc
jl
mov
mov
xchg
adc
add
div
pushf
jge
mov
push
gs
lods
add
inc
lods
int3
cmp
sbb
jo
popa
je
dec
dec
jp
gs
pusha
ljmp
adc
pop
sti
inc
ljmp
mov
fmull
xor
notb
pop
pop
aaa
sbb
dec
mov
sbb
test
cmp
jg,pt
stos
je
out
mov
in
sub
sub
sbb
cmp
call
fisttpll
sbb
repnz
clc
dec
and
and
lds
sub
dec
into
jp
inc
es
in
cmp
xchg
mov
loope
cmpsl
bound
popa
in
dec
clc
pop
dec
jae
xchg
adc
add
fistps
push
mov
dec
lock
or
cmp
imul
xor
dec
jb
movsl
mov
mov
movsb
rol
mov
dec
mov
ficomps
add
movsl
outsl
repz
mov
pop
sub
pop
sub
cmp
xchg
mov
dec
inc
pop
out
mov
lahf
sub
mov
bnd
cmpsb
inc
outsl
mov
cmp
jbe
std
and
outsb
mov
stc
push
shr
leave
mov
mov
ficoms
stos
movsl
dec
int
lock
pop
test
shrb
movsl
jo
pop
not
xor
popf
fistps
xlat
sub
mulb
sbb
lock
pop
xchg
jae
outsl
popa
andb
push
subb
in
pop
test
lret
pop
inc
lahf
inc
lret
test
mov
inc
push
inc
in
rclb
push
pop
int3
shrl
jmp
mov
or
fucomp
lods
cmpsl
xor
out
mov
paddq
mov
jp
into
clc
pop
in
in
push
xchg
aad
xor
jp
add
dec
int
push
mov
sarl
scas
jae
push
jle
push
shlb
clc
test
push
cwtl
test
addr16
in
sbb
inc
out
inc
jne
scas
insl
xor
add
es
dec
loop
pushf
ljmp
adc
loope
std
sub
ficoml
jnp
adc
into
mov
push
pop
test
jb
cmpsl
sub
popa
and
cmpsb
popf
xor
ret
cmpsl
sbb
das
cmp
loope
mov
addb
sub
jae
daa
rolb
push
out
cmp
push
int
enter
cld
pop
lret
test
cwtl
cli
xor
xchg
inc
jl
cmp
mov
or
and
ds
and
xchg
cmp
aas
mov
and
in
idivl
js
mov
adc
mov
add
add
add
or
jbe
ficomps
int3
push
pop
ljmp
mov
rol
inc
cltd
jno
aaa
fildl
inc
je
lock
dec
fisubs
dec
cltd
inc
mov
popa
hlt
mov
nop
pop
mov
adc
jbe
pop
jnp
mov
jmp
cmpsb
fiaddl
mov
push
divb
mov
adc
dec
or
xor
cld
repnz
sub
fsubrs
insl
fucomp
pop
loope
xchg
gs
push
adc
aam
lods
ficomps
mov
aaa
cltd
mov
or
fsts
or
lcall
xor
repz
pop
sti
repnz
popa
jnp
mov
mov
out
xchg
or
mov
fcmovnb
cmpl
dec
repz
push
sbb
cwtl
cmp
sbb
add
xchg
fmuls
mov
add
xchg
mov
enter
cmp
in
ret
cmpsl
lds
mov
lcall
aam
bound
in
mov
aaa
mov
lret
fstl
rclb
lret
daa
test
cmp
aad
addl
jb
cld
mov
cmp
cltd
test
in
mov
cmp
int
mov
loope
and
jl
int3
aam
add
xchg
pop
jns
add
jne
cli
aaa
aad
mov
inc
aaa
push
jp
stos
cmc
cs
inc
mov
mov
aad
adc
mov
jl
jae
jnp
xchg
mov
cmp
xchg
and
jmp
clc
sub
adc
sbb
xchg
cmp
scas
iret
lea
dec
and
mov
lea
adc
or
pop
jg
cmp
jg
add
push
jno
ljmp
or
insb
andl
mov
les
mov
insl
sub
inc
fsubl
dec
push
and
mov
inc
stc
out
sub
lea
xor
clc
or
sub
sub
pop
jo
repz
gs
pop
adc
cmc
mov
pop
js
arpl
imul
sub
out
das
push
push
cld
mov
push
xchg
sub
dec
or
mov
lret
mov
xor
cmp
mov
dec
loop
jmp
cld
loope
xor
fsubrp
out
dec
cmp
add
pop
dec
sub
cld
pop
mov
or
xor
rolb
in
mov
xor
fldenv
push
cltd
add
and
pop
push
ljmp
pop
scas
xchg
xor
or
cmp
lods
test
dec
add
in
push
pop
mov
adc
mov
adcl
jne
imul
lods
xor
mov
mov
pop
cmc
out
xchg
mov
fidivrl
and
mov
jae
push
hlt
xor
push
pop
pop
xchg
lods
gs
jnp
mov
imul
or
add
push
push
movsb
dec
cmp
sbb
rcll
push
dec
mov
jb,pt
and
mov
jle
fdivl
dec
sbb
movsb
add
cmpsb
and
scas
test
faddl
sub
push
or
movsl
mov
jno
gs
js
adc
cmp
or
jo
xor
mov
and
nop
sub
cld
jle
rcr
sti
int
out
sub
lcall
in
outsl
repnz
pop
divb
or
test
dec
jo
pop
imul
jle
mov
sub
sub
cmp
mov
hlt
in
sti
ds
imul
loope
adc
repz
mov
add
push
cmp
dec
lret
pop
pop
jmp
scas
sbb
sub
jbe
mov
jns
pop
incb
sub
sysenter
inc
mov
dec
daa
xchg
mov
test
push
ss
push
add
in
loop
and
jbe
outsl
sub
scas
and
add
repz
push
mov
jp
mov
add
sub
movb
mov
adc
imul
ret
pop
and
mov
push
or
inc
pop
das
mov
mov
int
and
imul
dec
lcall
cmp
cmovl
add
sbb
inc
jb
ljmp
adc
add
std
and
popa
push
jo
push
aam
add
repz
inc
fucomip
pop
sbb
sbb
xchg
mov
popa
das
adc
push
xchg
xor
jg
int3
lcall
push
dec
sub
in
pushf
hlt
mov
cmp
lods
or
or
roll
cmp
dec
add
dec
fucomp
mov
jbe
jbe
pop
es
scas
dec
jne
pop
fimull
arpl
ds
inc
dec
stos
int3
dec
xchg
pop
iret
mov
sbb
aad
mov
gs
out
iret
sub
cmp
mov
mov
xor
outsb
mov
subb
iret
inc
icebp
dec
jl
pop
push
or
push
idivl
loopne
rorl
ja
pop
dec
mov
jge
mov
and
mov
sub
ds
in
adc
xor
fsts
pop
mov
ja
and
jp
xor
in
daa
pop
popf
popf
or
sarb
xor
jb
inc
push
pop
pop
or
inc
mov
dec
pop
jmp
jl
arpl
push
cmp
mov
sbb
das
push
push
fs
xchg
lods
repz
cs
test
jge
out
aas
xor
dec
mov
outsl
out
pop
mov
clc
push
push
adc
push
dec
adcl
test
mov
mov
outsb
pop
mov
in
loop
mov
call
xor
pop
test
mov
cmpsb
stos
mov
push
pop
ja,pn
inc
dec
int3
orb
repnz
sub
popa
inc
and
pushf
lahf
call
push
sbb
jns
pop
dec
mov
sub
and
stc
adc
jbe
inc
outsb
mov
pop
pop
inc
cmp
addr16
popf
sahf
repz
psubb
adc
adc
repnz
cmp
in
hlt
mov
roll
inc
sbb
cltd
js
inc
imul
shlb
orb
mov
cmp
sub
lods
movsl
add
xchg
lds
mov
mov
ret
inc
cmp
dec
mov
pop
inc
inc
mov
mov
jle
cmp
imul
pop
add
cli
in
pop
sbb
jge
ret
inc
adc
faddl
loope
mov
andb
cmp
lahf
arpl
xor
sbb
jns
icebp
pushf
jp
jl
mov
or
loopne
aaa
or
xor
push
lods
adc
loopne
xchg
xchg
push
sub
or
out
adc
mov
stos
popf
push
aad
push
ficoms
iret
scas
xchg
ja
mov
sub
cmp
cmp
enter
cmp
mov
cmp
into
push
dec
push
and
jb
outsl
jl
or
mov
pop
pop
lock
xor
sbb
int
add
pop
ja
in
call
outsb
stos
fsubl
dec
cmp
or
push
jnp
or
xlat
sbb
repz
sbb
xchg
inc
sub
hlt
adc
cmp
setle
jno
scas
mov
and
fstl
inc
aad
xchg
add
jge
add
and
pop
shlb
jecxz
bound
adc
xchg
or
mov
or
push
mov
inc
inc
inc
psrlq
mov
inc
or
fsubr
inc
cmp
cwtl
bound
mov
cmp
addb
jbe
lds
push
pop
mov
jp
push
inc
test
mov
push
call
jmp
mov
mov
fucomp
xchg
mov
std
fwait
inc
sub
movsl
mov
mov
and
lcall
mov
fisttps
xchg
test
pop
cld
and
bnd
push
jae
xchg
add
or
int3
adcl
dec
popa
clc
mov
lahf
and
fcomps
es
lds
sbb
xor
adc
fdivr
loope
sahf
or
jns
xchg
mov
ds
mov
mov
jp
fucomi
dec
test
or
push
jle
adc
xor
test
movsb
aaa
les
clc
mov
rcr
cli
inc
pop
mov
sub
scas
and
repnz
pop
lds
add
nop
sub
arpl
in
mov
mov
and
fmull
fidivrl
cmp
cmp
mov
popf
dec
ljmp
adc
mov
pop
mov
xor
xlat
pop
gs
into
cmpsb
or
aas
pusha
loopne
mov
mov
push
ds
sar
lret
cmpsb
push
push
pop
roll
fldt
mov
insl
jno
and
out
cwtl
adc
add
ficoms
cli
cmp
loopne
mov
mov
sub
cwtl
popf
add
adc
rcrl
cmpsl
add
cmp
adc
inc
add
mov
sub
adc
dec
jo
add
ret
sahf
add
fiadds
push
pop
jo
dec
push
insl
sbb
popa
lock
outsb
loope
sub
mov
lret
and
or
xchg
shlb
add
daa
daa
daa
mov
cmpsb
js
mov
add
dec
push
fwait
sar
pop
insb
lods
sub
mov
and
mov
out
push
iret
mov
fld
outsl
push
stos
popa
loope
cli
inc
mov
mov
jnp
pop
xchg
xor
negb
and
cs
xor
xchg
mov
loop
xor
pop
sub
mov
insb
xor
pop
add
sub
dec
pusha
add
cmp
test
lock
pushf
fwait
xchg
addb
adc
cli
add
or
cwtl
dec
push
mov
sub
and
dec
cmp
inc
inc
adc
pop
in
bound
jmp
ss
xchg
pop
pushf
add
lods
ffree
mov
stos
push
push
loop
mov
shrb
sub
mov
icebp
jae
enter
or
pop
pushf
jnp
fwait
shl
mov
loop
inc
add
adc
imul
lahf
stc
push
in
mov
sbb
adc
inc
in
sub
pop
or
xor
pop
push
push
jnp
sti
mov
mov
ljmp
ljmp
inc
mov
inc
int3
negb
jg
sub
adc
call
aam
sbb
mov
aam
sub
push
or
out
push
xor
nop
sbb
or
push
ja
mov
push
rcll
jo
and
adc
cwtl
jbe
dec
inc
insl
test
cmp
js
shl
push
test
fisttpl
jg
fstpl
out
cmp
mov
stc
push
dec
push
lock
imul
mov
in
dec
lods
iret
mov
push
mov
xor
mov
push
int3
mov
dec
fidivrs
stc
and
xchg
mov
sti
daa
mov
shrb
stos
cld
push
mov
js
sbb
xchg
sbb
lock
into
aad
fwait
mov
cmp
outsb
rcr
cmc
cmp
push
lret
loope
mov
leave
in
cli
sub
out
jle
bound
addr16
ljmp
adc
jl
adc
icebp
mov
loope
sbb
dec
aad
popf
mov
dec
push
fwait
add
clc
insl
xchg
dec
add
cmc
push
mov
sub
stc
ja
and
fcmovu
jns
in
scas
mov
cmpsl
bound
sbb
jp
dec
pusha
sahf
push
ds
dec
adc
ret
roll
push
int3
repnz
popl
adcb
std
addb
jp
call
jecxz
xor
pop
sahf
sbb
sub
adc
mov
dec
push
gs
mov
mov
mov
mov
jnp
mov
lods
adc
push
fiadds
or
mov
adc
push
jg
popf
into
fiaddl
or
adc
lea
cld
pop
in
je
jmp
pop
xchg
xchg
xor
xlat
lea
push
js
cmp
adc
mov
and
shrl
inc
add
inc
shld
push
lods
out
xchg
or
daa
jmp
mov
std
loope
push
mov
int
mov
ljmp
pop
ds
jecxz
imul
popa
inc
scas
sbb
nop
mov
les
xchg
push
std
imul
mov
ss
and
cmpl
scas
int3
pop
push
xchg
lret
nop
dec
push
incb
cmpsl
sub
xchg
jp
and
loopne
sbb
jno
mov
daa
cmpsb
js
add
inc
sub
adc
lds
loop
cmp
jecxz
cwtl
inc
push
dec
jb
dec
popw
mov
mov
shl
les
push
sbb
add
lods
inc
mov
add
cmp
push
cmp
fs
scas
mov
stos
rcrl
jmp
fnstcw
stc
lret
popl
jbe
mov
addr16
jecxz
cmp
push
jo
pop
inc
lahf
enter
xchg
or
mov
lods
pop
loop
icebp
xchg
dec
sbb
fnstenv
add
cmp
test
sarl
xchg
and
sti
popa
scas
add
adc
adc
imulb
mov
or
test
js
imul
pop
jg
stc
cmp
xor
xor
addl
decb
jecxz
adc
cli
adc
addr16
movsl
cmc
inc
loop
daa
sub
add
sbb
add
mov
jle
fnstsw
stos
xchg
fdivrl
test
cmp
roll
and
and
mov
or
lcall
out
leave
rcll
cli
out
inc
adc
adc
rcrb
push
lahf
lock
cli
xor
mov
call
ljmp
pop
fdivs
and
mov
jmp
popf
jecxz
cmp
push
mov
loopne
lahf
in
das
cmp
popf
xchg
movsb
je
daa
std
xchg
adc
hlt
cmp
cmp
out
mov
dec
call
xor
and
xchg
shlb
xchg
jae
insl
ja
aam
cmpsb
sub
in
push
sub
inc
imul
movsb
xor
mov
jno
mov
cmp
push
shrl
cmpsl
mov
xor
sub
cmp
inc
inc
and
orl
dec
icebp
and
movsw
inc
and
es
rcll
jnp
push
inc
pop
adc
jle
cmpsb
aad
aas
mov
fimuls
jg
add
lret
add
jmp
dec
jo
mov
call
aam
into
popa
int3
dec
fisubs
loopne
jnp
and
fucom
es
fsubl
clc
leave
mov
or
dec
out
or
out
je
je
jo
push
fdivs
js
jns
sti
mov
mov
inc
sub
adc
in
dec
stos
lcall
int3
fdivrs
stos
sbb
push
lahf
aas
shlb
cs
pusha
push
xor
cltd
insb
lods
pop
sti
stos
mov
sub
es
es
jle
xchg
xlat
into
push
scas
cmpsb
add
pop
sbb
push
cwtl
cmp
xchg
sbb
mov
mov
lock
popa
lds
push
xlat
sub
xorb
sub
in
sti
jmp
mov
fcom
call
hlt
cmp
repz
dec
icebp
cmp
jmp
into
cli
xorl
mov
lods
bnd
dec
or
mov
cmpsl
jecxz
push
cmp
shl
mov
lahf
pop
clc
enter
nop
dec
mov
inc
inc
mov
dec
xchg
add
jne
enter
jb
jl
fdivl
xchg
cwtl
stc
jbe
mov
fwait
hlt
and
dec
mov
or
adc
jge
out
mov
aaa
fnstcw
dec
adc
pop
rcll
or
inc
xor
jl
cli
pop
leave
cmp
call
out
xchg
dec
gs
inc
enter
nop
xlat
ficomps
sub
icebp
out
adc
xchg
adcl
js
fisttps
popf
pushf
ljmp
mov
mov
push
mov
xchg
test
pop
out
scas
leave
mov
jl
call
aad
stos
inc
cmp
fldl2e
stc
in
inc
cmp
orl
lahf
shrb
sbb
decl
mov
js
push
hlt
and
mov
xor
ficoml
push
test
push
test
mov
jge
xchg
sbb
lret
inc
jae
scas
xchg
sub
mov
es
push
cmp
hlt
cli
sub
popf
cltd
xor
in
cmp
in
out
negl
mov
push
popf
inc
jge
addb
dec
push
addr16
lds
cs
bound
inc
pop
jno
mov
and
je
sub
test
addr16
cld
pop
push
std
andb
pop
cmpl
push
ss
sbb
mov
xchg
test
jp
dec
sub
push
shll
push
jbe
or
aas
sti
xor
cmc
lea
inc
cmp
test
pop
lds
jne
gs
sub
pop
inc
movsl
stos
cld
sub
out
dec
jp
clc
sahf
pop
adc
bound
sub
push
mov
dec
jl,pn
jecxz
outsl
inc
cmc
sarb
jae
and
mov
vminps
ja
dec
adc
mov
push
cmp
lret
aam
cmpsb
nop
movsl
dec
fwait
insb
rclb
dec
sahf
dec
push
pop
repnz
out
mov
dec
out
jo
std
in
and
mov
sub
add
dec
mov
push
push
xor
or
cmc
lahf
sbb
inc
dec
fidivs
or
pop
push
xchg
popa
push
sub
pop
jg
cmp
popa
test
imulb
stos
mov
test
dec
faddl
cmp
jae
or
push
add
push
data16
and
rclb
inc
mov
sbb
data16
inc
pop
pop
ljmp
addr16
xor
mov
in
cmp
pushf
cmp
jne
sti
inc
cs
insb
shl
cmp
mov
add
leave
inc
xlat
les
pop
or
das
push
pop
xor
shlb
inc
fwait
mov
sti
or
jnp
ds
or
outsb
or
inc
push
sbb
movsl
and
inc
stc
movsb
xor
sbb
inc
push
push
mov
push
sahf
sbb
fisubs
leave
call
lret
jnp
xchg
sahf
in
shlb
inc
test
adc
push
mov
cmp
inc
mov
jle
and
push
push
lret
std
jmp
cmp
xchg
daa
cmp
outsb
int3
cmp
cmp
jle
lods
out
and
shlb
and
xchg
es
in
adc
xchg
test
jnp
fists
loopne
jae
mov
ja
shrb
lcall
in
adc
stos
aaa
sbb
ss
adc
fs
cli
dec
nop
adc
jle
arpl
ss
in
scas
lcall
addb
xlat
cmp
repz
mov
xor
mov
xchg
push
fucomi
aam
xchg
cmpsl
scas
or
clc
imul
xchg
xchg
ljmp
inc
and
pop
xchg
ficompl
xor
mov
mov
xchg
icebp
scas
in
aaa
div
or
mov
push
pop
sub
xchg
or
mov
pop
inc
dec
roll
adc
push
jns
movsb
push
cld
ds
cmp
lock
mov
addr16
mov
jp
push
or
mov
sti
lret
jmp
ret
push
pusha
dec
in
test
push
test
mov
cltd
push
xchg
jecxz
push
out
jb
jbe
outsb
lods
or
shlb
inc
outsb
notb
push
pop
push
aad
or
push
cmp
mov
xor
and
or
inc
jns
adc
or
cmpsl
mov
xor
jae
add
adc
pop
xlat
fcomps
sti
lahf
adc
stos
mov
dec
cmp
adc
stos
les
xor
ret
shrl
pop
xchg
fstpl
stos
jns
lahf
mov
mov
jg
sub
hlt
sub
mov
cltd
popa
ret
mov
les
xchg
jecxz
loop
call
cwtl
into
jg
js
mov
call
pop
or
pop
pop
addr16
ret
insb
jnp
mov
jne
test
jecxz
cmp
lds
rcrb
nop
sarl
jno
scas
pop
dec
lds
sbb
out
pop
pop
leave
push
push
cmpsb
cmp
das
je
jge
push
test
push
adc
push
xor
popf
outsl
inc
cld
addr16
into
adc
jno
fstpt
cltd
fbstp
enter
push
aam
or
mov
and
js
int
jno
jne
incb
xchg
imul
xchg
adc
and
inc
adc
fistps
add
mov
sub
xchg
mov
je
in
inc
sbb
lcall
push
cmc
jmp
shr
inc
test
push
lret
cmp
mov
movsl
mov
std
clc
aaa
js
add
daa
aas
jne
jmp
sbb
lock
push
cmp
ficompl
and
lods
shl
scas
and
add
out
imul
stos
in
arpl
cs
cmc
add
js
inc
inc
push
imul
mov
jecxz
sub
ror
mov
xor
jp
nop
outsb
mov
pop
nop
and
xorl
jecxz
dec
mov
aad
jmp
mov
cmovne
rcll
or
ss
add
xchg
mov
inc
shrb
adc
lret
pop
leave
sbb
leave
in
scas
mov
sbb
sub
mov
or
cmp
in
or
dec
andb
data16
and
out
cli
sbb
test
pop
stc
cli
push
mov
aas
push
scas
xchg
pop
sub
gs
mov
cltd
fldlg2
push
add
jno
inc
rcrw
in
rol
jnp
pop
or
add
xchg
neg
ja
adc
adc
or
outsl
mov
in
gs
and
test
add
stc
sub
sbb
pop
test
mov
push
jne
xor
repz
jmp
loope
mov
mov
add
mov
out
mov
mov
add
push
sbb
in
stos
incl
push
inc
jp
ds
mov
mov
shlb
push
xchg
jecxz
sbb
ret
lret
fcmovbe
mov
push
cmpsb
cmc
test
out
push
call
pushf
cld
leave
insb
test
imul
cltd
xchg
nop
pushf
shll
adc
loop
dec
xchg
repz
sub
lcall
iret
test
mov
cmpsb
les
repnz
iret
pop
jmp
outsb
xchg
int3
or
inc
out
aam
out
adc
ljmp
inc
loopne
mov
cmp
rcrb
orl
and
aaa
mov
into
fildll
dec
mov
scas
xor
xchg
stos
nop
aaa
xchg
dec
mov
pusha
scas
inc
jns
aam
sbb
dec
in
insl
mov
push
cwtl
xchg
adc
imul
and
daa
mov
in
mov
mov
push
inc
lea
arpl
adc
sbbl
fidivs
test
fs
rep
xor
shl
mov
js
lret
nop
dec
lret
push
dec
cmpsb
xchg
out
or
xchg
cs
push
imul
mov
pop
fcompl
sbb
js
or
arpl
pop
adc
add
testb
adc
sbb
test
insb
jns
scas
nop
outsl
xchg
mov
inc
popf
adc
ss
arpl
or
cwtl
lock
mov
cmp
hlt
mov
scas
decl
sub
xor
push
mov
dec
popa
and
stos
shl
xor
push
or
outsb
daa
pop
xorb
mov
lea
xchg
push
mov
and
addl
mov
xchg
pop
ret
out
lds
cld
cli
into
jb
lahf
cmp
movsb
lahf
jb
inc
rorl
jl
leave
loope
jbe
push
ljmp
sbb
cli
or
push
sub
mov
mov
lahf
fcmovnu
loopne
mov
xor
repnz
fwait
js
add
sbb
xchg
dec
in
test
sub
push
shr
ss
imul
shl
dec
pusha
push
fcomi
ret
inc
xor
push
inc
divl
sbb
lret
push
or
adc
aas
ja
idivl
hlt
pusha
lods
inc
repz
lcall
xor
fwait
iret
cwtl
test
pop
bound
mov
enter
sbb
movsl
pushf
dec
popf
sub
daa
sub
jmp
lock
cmp
mov
sti
xchg
sbb
popf
mov
jbe
out
mov
pop
mull
rol
or
xchg
mov
mov
jmp
and
adc
int
sub
xor
mov
mov
je
icebp
pop
testb
mov
sbb
imul
jns
enter
imul
dec
mov
inc
push
idivl
xchg
cmpb
mov
push
stos
mov
dec
or
idiv
mov
sbb
add
test
in
jl
hlt
sarb
push
add
stos
pop
and
pop
and
ret
insb
push
inc
aaa
pop
push
jge
or
xor
aas
mov
pcmpeqd
arpl
movsb
adc
shll
std
bound
mov
push
push
push
xchg
inc
mov
and
out
sub
sbb
aad
pop
sbb
es
call
aad
adc
or
imul
sub
lods
adc
movsb
sub
push
mov
push
sub
jnp
lret
mov
mov
mov
push
repnz
out
inc
fidivrl
inc
out
cmp
sub
shrb
mov
cmc
out
or
cs
xor
fcomip
and
imul
mov
xor
outsb
xor
sub
nop
out
stos
jbe
fdivrl
scas
dec
outsb
pop
add
repz
insb
lret
jno
mov
rdmsr
xlat
xor
inc
sahf
cli
jnp
mov
inc
wbinvd
test
pop
ficoml
in
mov
push
in
mov
int3
aam
int3
cmp
mov
fnstsw
cmp
sub
imul
cs
es
or
divb
pop
push
adc
adc
xchg
sti
lds
call
push
mov
inc
mov
addr16
pop
jge
mov
outsl
je
sbb
sub
movsb
dec
shll
roll
addl
popa
clc
aad
in
enter
aam
loop
inc
xor
lret
mov
add
ss
mov
sti
cmpsb
mov
shrl
jmp
loopne
push
shl
xor
es
sbb
cmp
out
adc
xlat
in
mov
dec
dec
das
mov
scas
add
test
sbb
push
jne
push
and
jo
or
mov
out
cmp
ja
xchg
add
addr16
sbbl
push
js
pushf
insb
sarb
xor
cvtdq2ps
pop
push
sbb
push
add
push
fdivs
lock
movsl
adc
xchg
sbb
arpl
jne
inc
test
pop
or
fldl
in
jmp
sub
subl
sbb
out
ss
jbe
clc
jp
aaa
aas
and
push
imul
sub
cld
mov
lock
xor
and
test
and
enter
or
roll
shll
xchg
mov
jl
xchg
test
adc
jge
fldenv
or
mov
push
ss
std
mov
rol
sub
sub
pop
jno
leave
gs
scas
cmpsb
adc
lods
xor
adc
in
and
idiv
dec
sahf
adcb
pop
inc
cmp
jbe
enter
sahf
leave
dec
aam
mov
mov
pop
fsts
or
push
xor
xlat
icebp
jo
not
cld
lcall
test
into
lods
jg
insl
mov
inc
mov
mov
scas
dec
mov
mov
cli
mov
mov
stos
scas
pop
push
jle
shll
cmc
cli
inc
dec
shll
and
adc
pop
in
xor
push
scas
xlat
xor
es
pop
xor
sbb
mov
or
mov
or
neg
data16
mov
jp
int3
shrb
push
mov
and
dec
lds
or
sbb
stc
inc
gs
nop
dec
divb
mov
call
push
adc
push
and
flds
insb
je
lock
aam
pop
mov
sub
lret
icebp
and
sbb
pop
lods
mov
lcall
mov
and
loopne
and
fidivrs
sbb
fisttps
test
xor
jl
mov
and
fistpll
inc
lahf
aad
rep
lret
pop
aam
fcmovnu
jmp
in
sub
pop
orl
inc
in
out
pop
icebp
mov
push
clc
cmp
pop
sub
nop
cmpsl
ds
adc
das
lds
shll
scas
cwtl
gs
lret
movsb
dec
pop
popf
loope
rcrl
hlt
movhps
mov
dec
xor
inc
int
inc
daa
adc
sahf
mov
sbb
fcmovu
xor
dec
bound
mov
gs
and
xchg
mov
sub
sub
xchg
jmp
jns
jae
arpl
sbb
nop
addb
pop
dec
fstl
or
nop
mov
in
sarb
mull
stos
adc
nop
sbb
push
les
rorb
jbe
addl
scas
ja
inc
jmp
andl
push
and
pop
push
push
jae
or
call
cli
xchg
mov
js
std
out
dec
cmpsb
test
jbe
dec
jbe
lock
outsl
mov
cmpsl
mov
cmc
pop
not
cmpl
and
sbb
div
adc
lock
sbb
int3
repz
xchg
xor
shll
mov
addr16
jmp
call
dec
mov
into
mov
movsl
and
ret
mov
adcb
leave
inc
mov
sub
daa
or
pop
jno
add
add
add
aam
add
shll
xchg
fcompl
jbe
push
fwait
adc
lahf
mov
fsubrl
fmull
inc
inc
mov
adc
xchg
dec
popa
icebp
inc
push
stos
mov
pop
adc
cmc
cmp
std
aad
jge
icebp
mov
cwtl
aas
xchg
push
cs
pusha
sbb
popf
roll
out
ja
add
push
xchg
in
or
xchg
mov
lret
test
scas
sub
dec
popa
and
xchg
scas
jns
and
lcall
fldl
aad
fwait
in
adc
and
inc
mov
jmp
lds
lret
outsl
imul
adc
adc
sub
cmp
in
clc
cmpb
in
mov
pop
sbb
xor
or
inc
js
cs
cmp
or
fisubs
pop
ja
cmp
sarl
mov
outsl
sbb
idiv
jle
int
idivl
xor
lahf
or
cmp
push
aaa
sbb
jp
jns
rcr
xor
fsts
mov
into
daa
ret
adc
adc
stc
rcl
incb
mov
xor
add
das
cmpsb
test
clc
add
popa
jne
rclb
int
mov
push
push
cmp
xchg
pop
sub
popa
lcall
jge
loop
add
aam
sub
mov
xchg
cmpsb
decb
pop
sti
mov
std
es
pop
xchg
push
jmp
nop
loope
and
push
and
test
sahf
add
sbb
rol
sarb
inc
arpl
inc
xchg
popa
push
or
jl
dec
enter
in
lretw
and
stos
pop
decb
les
dec
pushf
in
inc
push
mov
dec
push
je
jp
jbe
cli
sub
jg
mov
push
dec
mov
add
dec
cmpsb
pop
fcmovb
daa
outsb
xchg
xchg
sub
adc
nop
aam
cmp
fcom
lods
fldcw
sub
leave
mov
dec
pop
icebp
sub
aam
fxch
mov
cmp
mov
mov
adc
ret
es
add
sahf
cmp
cmp
cld
push
cld
aad
adc
mov
repz
mov
mov
rclb
add
jns
add
dec
faddl
out
testl
test
xlat
dec
push
xchg
add
mov
mov
es
adc
mov
mov
pop
mov
dec
push
stc
mov
cmp
xchg
sub
enter
mov
mov
daa
stc
iret
cmp
xorl
mov
int
lcall
pop
lcall
jl
xchg
cli
pop
repnz
data16
rcl
mov
xor
cmpl
fwait
aad
jno
decl
imul
and
jp
push
sbb
ret
and
xor
inc
pop
add
scas
int
and
sbb
jecxz
lods
pop
cmc
and
xchg
inc
leave
jmp
inc
inc
test
push
dec
test
ljmp
mov
in
rorl
push
ret
in
ss
enter
sbb
push
call
cwtl
vpmovmskb
mov
mov
rcr
mov
or
sbb
pop
out
in
mov
cmp
push
push
jns
imul
xchg
dec
in
inc
popf
adc
arpl
inc
mov
mov
mov
xchg
mov
jl
dec
adc
inc
mov
inc
add
pop
into
dec
and
inc
in
lods
pop
mov
stos
adc
push
add
ret
pop
imul
cmp
ljmp
outsw
xchg
push
adc
shrb
loop
arpl
push
pop
dec
rorb
ljmp
scas
loop
cmp
sub
out
push
ds
test
cmpsl
out
xor
lahf
fcomi
out
stos
or
and
test
insb
jmp
add
adc
test
mov
in
cmp
outsb
jb
daa
xchg
lods
mov
lock
pop
mov
mov
jl
fwait
out
sbb
lahf
add
int
and
mov
jge
cmp
repz
mov
je
adc
inc
push
add
dec
pop
add
outsb
pop
shll
pushl
push
aad
js
pop
sbb
mov
or
shrl
mov
pusha
orb
sbb
xor
adc
fistpl
outsb
daa
jp
and
shll
repz
pop
mov
sahf
xchg
in
push
std
stos
imul
lret
jae
jge
inc
leave
adc
mov
xor
mov
fs
pop
mov
test
in
pop
nop
aaa
call
xchg
sub
cmp
repnz
add
sub
ret
sar
xor
repnz
push
sar
inc
xlat
es
xlat
mov
jo
push
aas
dec
jno
cmp
sbb
adc
jle
call
mov
lea
mov
imul
cli
jo
scas
sub
cmpsl
pop
mov
aas
push
mov
cli
lock
out
cs
xor
or
pop
out
xchg
xor
cmpsl
inc
shlb
movsb
add
adc
mov
movsl
in
lds
cmc
lret
aaa
fidivrs
adc
push
mov
aam
test
jae
loop
mov
nop
dec
mov
xchg
test
dec
fmuls
aam
clc
clc
fildl
pop
movsl
insb
out
loope
jnp
sbb
pop
xchg
cmp
add
add
dec
lahf
outsb
xchg
test
ret
bound
sahf
xchg
dec
sbb
add
push
out
push
dec
bnd
push
clc
xor
ret
mov
imul
fnsave
inc
mov
cli
jg
xchg
mov
bound
sbb
out
inc
dec
andl
pop
add
mov
fwait
adc
mov
push
cmp
pop
aam
test
jmp
gs
mov
nop
cltd
or
add
adc
loope
outsb
insb
testl
jne
dec
fbld
test
das
lock
jo
adc
dec
sbb
les
mov
add
push
nop
orl
shlb
enter
sub
out
xchg
ret
push
outsl
xchg
setge
jmp
xor
xor
es
jns
sub
pushf
imul
outsb
xchg
mov
rolb
inc
jo
std
xlat
sub
imul
sub
mov
daa
pop
ss
mov
mov
jns
xchg
loopne
mov
aad
fimull
in
stos
cmp
mov
xchg
mov
cmp
sbb
shl
add
scas
add
out
jp
and
popa
push
pop
in
and
jp
pop
xor
xchg
dec
sahf
lods
pop
lcall
pop
out
fnsave
jg
hlt
repz
adc
and
loope
stos
pop
insl
mov
and
insw
pop
fsubrl
mov
stc
in
sub
dec
mov
sarl
mov
push
in
int
or
mov
lret
xchg
mov
mov
sub
iret
mov
ss
sbb
iret
xchg
test
pop
xor
mov
repz
jbe
inc
mov
mov
cmpsb
int
mov
dec
dec
popf
js
ret
imul
test
stos
xchg
xchg
frstor
enter
leave
push
mov
es
cmp
mov
call
mov
or
jb
mov
mov
fsts
pop
mov
cmc
push
aam
xchg
stos
dec
inc
adc
pusha
not
scas
andb
mov
jp
imul
jnp
jp
xor
jl
pop
adc
pushf
push
mov
mov
or
into
aaa
mov
mov
push
cmp
into
jge
add
push
jnp
xlat
xor
adc
arpl
stc
sbb
sub
loopne
adc
lret
inc
mulb
adc
lret
popf
bound
bound
and
loopne
mov
xchg
ret
ret
pop
push
aad
sub
push
jmp
pop
lock
sub
mov
fsubr
or
mov
fldcw
or
push
icebp
pop
mov
nop
adc
cmp
aam
cmp
dec
leave
icebp
icebp
out
mov
sub
inc
sbb
xor
or
jno
xlat
dec
stc
fucom
ret
imul
cmp
or
push
cmp
jae
sahf
aam
xchg
dec
mov
test
mov
movsl
ja
std
pop
ds
dec
mov
mov
mov
push
lahf
pop
adc
mov
stc
xor
bound
push
call
mov
and
movsb
js
inc
fisttps
cwtl
sahf
or
repnz
add
sub
pushf
xchg
aaa
jg
pop
lods
out
subb
mov
mov
jb
xor
jne
adc
out
xchg
aas
mov
test
xchg
mov
imul
push
addr16
sarb
or
test
xor
pop
pop
jnp
mov
ja
dec
cmpsl
stos
cld
mov
push
pop
mov
cltd
or
push
out
cmp
rorb
adc
fdivl
idivl
iret
mov
idivl
push
lock
cmc
das
popa
cmp
daa
add
mov
add
fimuls
xor
je
loopne
lods
arpl
adc
push
xchg
jge
hlt
imul
add
lcall
mov
in
add
pop
mov
cmpsb
mov
pop
into
push
and
ret
adc
stos
movsb
rcll
lock
in
sub
in
fs
cmp
mov
icebp
jno
pop
adc
ret
or
lahf
pop
inc
pop
insl
sbb
std
lea
ja
pop
lods
lods
jae
jne
mov
lods
sbb
ja
insb
sub
insl
adc
scas
push
ret
xlat
push
push
aaa
pop
or
lret
std
addr16
sbb
xor
loopne
pop
cmpsl
daa
xchg
stos
rcll
mov
lods
push
scas
movsb
jg
push
jp
push
insb
dec
add
sbb
mov
clc
loop
hlt
ljmp
pop
inc
arpl
aaa
push
outsb
cmpsb
aad
lea
cmpsb
sbb
xchg
aas
shlb
pushf
cmpsl
adc
sbb
int3
jb
or
push
cs
repz
popa
and
xor
rcll
pushf
inc
inc
int
fidivrs
fcomps
push
lea
cmc
sub
mov
js
jecxz
out
cwtl
sbb
and
push
fistl
and
scas
sub
test
incb
jb
mov
inc
lds
jg
xor
lock
pop
in
andl
sti
adc
scas
leave
ss
fidivl
inc
mov
pop
pop
inc
push
lds
mov
pop
popa
pushf
gs
lret
adcb
add
or
push
jg
enter
inc
fsubrl
cs
test
hlt
adc
pop
fdivrs
xor
pop
iret
call
hlt
sar
mov
fldt
cmc
test
and
and
outsl
in
pop
enter
inc
mov
sub
adc
dec
sbb
jb
mov
xchg
aad
sub
push
fdiv
pop
sub
into
icebp
inc
push
jle
sbb
inc
sub
sub
call
rclb
and
cmp
inc
movsl
bound
sub
pop
mov
js
pop
repz
je
mov
jp
mov
cltd
mov
push
cli
pop
pop
cmpsl
dec
stos
push
rcrb
pop
mov
test
adc
pop
xchg
int
lcall
jne
sbb
out
into
add
sbb
mov
jno
sbb
cmp
fnsave
in
push
add
and
jae
sub
movsl
inc
or
xor
and
pop
mov
lret
lods
fisttpll
cmp
sahf
inc
in
loope
pusha
lahf
popf
push
addr16
loope
sti
js
daa
cmpsl
mov
jb
sub
xchg
ds
adc
fwait
xchg
sahf
xlat
xchg
cmp
jl
xor
or
jle
xchg
sar
inc
insl
pop
loopne
mov
mov
xchg
aad
xchg
sysenter
roll
sbb
xor
pop
negb
or
mov
cli
test
cmp
jg
mov
mov
jmp
mov
sahf
and
mov
shlb
push
mov
xor
popl
jne
out
js
sti
cmp
lods
fs
pop
inc
in
push
dec
cmp
repz
jns,pn
xchg
push
cld
sbb
sbb
push
pop
xchg
cwtl
out
mov
loopne
jp
push
and
mov
out
lea
xchg
lods
fcompl
jno
xchg
aad
sbb
dec
subl
mov
outsl
dec
sbb
push
je
fisttpll
mov
mov
mov
adc
sub
inc
cmp
pop
push
pop
or
movsl
push
xlat
jg
es
xor
ljmp
mov
sub
xor
dec
inc
adc
pop
clc
cmp
jg
cld
loop
jnp
arpl
jb
sbb
es
andl
lock
out
push
push
mov
loop
and
pop
popf
and
jl
leave
out
push
cmp
push
aaa
fdivrl
hlt
pop
pusha
cmc
mov
imul
scas
jno
adc
add
fcomip
std
or
push
mov
dec
mov
repnz
pop
cltd
sbb
jmp
sbb
shll
mov
jo
or
or
inc
in
dec
xchg
jmp
adc
cmc
or
mov
idiv
stos
ja
outsb
int3
mov
aas
sbb
lcall
mov
bound
jl
scas
xchg
add
rolb
outsl
mov
imul
addl
imul
jge
mov
xor
sub
and
push
sub
int
jnp
out
aad
fwait
adc
js
or
push
lret
out
daa
push
mov
icebp
lcall
inc
xor
add
fwait
insl
or
pushf
dec
rorb
jmp
dec
rep
pushf
clc
cmc
ja
ss
mov
sahf
insl
jmp
shll
pop
push
daa
daa
inc
jp
test
mov
mov
lea
je
add
sbbb
mov
mov
std
pop
and
jae
stos
cmp
add
movsl
ret
mov
sub
xor
sub
popf
mov
inc
add
shr
add
fcomps
adcb
or
cmp
add
cli
add
push
imul
sub
inc
rclb
imul
sub
fs
mov
imul
mov
xchg
push
push
cmpsl
xchg
xchg
rcll
mov
aaa
add
pop
insb
mov
push
cmc
lods
gs
sbb
lods
data16
mov
push
mov
iret
gs
popf
xchg
or
adc
addb
add
sbb
mov
adc
rcrb
pop
mov
jecxz
daa
call
dec
xchg
ror
mov
mov
ja
xchg
outsl
insl
xchg
stc
push
xor
xor
sbb
fwait
inc
mov
xchg
sbb
dec
dec
fmull
fldl
xchg
int3
mov
jne
inc
cltd
cmpsb
push
push
pop
sti
mov
out
lds
sbb
stos
aas
pop
or
js
mov
cmp
push
adc
mov
js
dec
cmp
jne
jl
push
mov
adc
mov
sar
iret
cltd
jmp
pop
inc
xchg
mov
mov
lahf
mov
mov
adc
sbb
push
es
movsl
leave
dec
imul
lock
xchg
mov
cli
cmp
push
add
cli
clc
sbb
cmpsb
iret
inc
test
pop
mov
mov
dec
das
xchg
mov
lahf
dec
pop
sub
aad
cmp
and
mov
and
jnp
cmpsb
cmp
and
mov
cmpsb
lds
dec
xchg
call
mov
push
push
out
aaa
sahf
outsl
jne
movsb
inc
incb
ret
or
mov
fistpl
add
mov
ljmp
int3
ja
call
mov
insl
mov
add
ror
or
sub
mov
push
sbb
mov
dec
push
push
lock
out
fs
mov
dec
ret
rorl
test
sahf
loopne
fnstsw
adc
mov
ss
pop
push
mov
mov
dec
scas
mov
push
cmp
dec
out
pop
aaa
incl
dec
pop
xchg
fsubrl
cmpsl
xor
out
cmp
add
enter
dec
mov
arpl
nop
dec
shlb
adc
cmp
repnz
pop
inc
adc
or
movsl
mov
out
sbb
or
inc
mov
adc
xor
dec
stc
add
inc
subl
push
jge
data16
xchg
cmpsb
scas
cltd
insl
fdivs
call
lock
inc
hlt
outsl
or
adcb
and
inc
shrb
pop
ds
rolb
jg
or
daa
test
test
or
pop
sub
mov
lret
rorb
jae
mov
adc
jnp
xor
or
lret
addb
or
mov
cmp
hlt
clc
pop
and
enter
xchg
enter
lock
cmp
pusha
jbe
xchg
or
lock
pop
int
pop
ljmp
out
popa
cmpsl
ds
fsts
adc
icebp
std
cs
fwait
add
xchg
rcr
jge
dec
dec
test
mov
cli
and
mov
add
wbinvd
pop
fwait
xor
fldenv
fwait
je
adc
pop
push
addr16
int
sbb
jne
xchg
xor
mov
test
movsb
xlat
xor
orb
mov
ret
mov
add
jns
bound
hlt
imul
lds
fistl
scas
adc
pop
jg
shll
loope
in
ss
dec
mov
lds
jge
mov
pop
cmp
adc
lcall
inc
mov
out
and
push
shrd
and
adc
ja
iret
lcall
add
sti
fsubr
inc
icebp
jo
push
scas
sti
sub
pushf
lcall
shlb
mov
jmp
xchg
fildll
xor
into
sar
mov
test
lret
fwait
loope
pshufw
dec
adc
jge
jl
aas
inc
subl
hlt
cld
jne
popl
leave
sbb
cmpsb
lock
sub
scas
out
jne
ja
xor
call
aam
push
inc
lds
enter
popa
push
movups
xchg
xor
scas
hlt
cmp
add
mov
xchg
les
push
shr
cmp
push
jl
cmc
sbb
add
out
mov
lret
add
stc
hlt
cmp
pusha
pusha
insb
sub
out
inc
xchg
jns
jg
cmp
incb
shr
sub
xchg
ja
xor
add
sub
sbb
jnp
mov
mov
xor
inc
movsb
push
call
add
clc
imul
icebp
lret
and
insb
in
ds
outsl
pop
jmp
outsb
je
sub
xor
arpl
popf
dec
xchg
leave
mov
jnp
jp
aas
mov
jbe
xchg
fnsave
adc
xchg
and
es
mov
leave
cmpsb
and
fs
mov
xchg
sub
fimull
in
or
shr
push
ret
and
sub
lcall
sbb
sbb
push
lcall
int
sbb
aas
inc
leave
ds
mov
outsb
cmpsl
or
xor
bound
pusha
pop
jbe
jo
push
or
aaa
xlat
aas
xchg
aad
icebp
sahf
enter
js
and
pop
add
aad
pop
das
push
dec
cmp
and
popf
sahf
push
lea
fisubrl
mov
das
ds
mov
cmp
imul
mov
mov
jae
jne
push
sbb
call
cmpsb
stos
xor
aas
jns
push
sbb
adc
notb
jno
shlb
dec
pushf
inc
lea
mov
pop
fisttps
mov
in
je
and
ds
sub
lods
pusha
pop
pusha
mov
jmp
stc
daa
aam
addl
aaa
add
fiaddl
sarb
sbb
arpl
icebp
jns
pop
test
insl
lret
lcall
imul
nop
sub
popa
enter
xor
and
fstp
adc
inc
or
add
hlt
adc
inc
iret
inc
in
cmp
xor
mov
cmc
pop
data16
cs
mov
pop
pop
xchg
and
inc
mov
xchg
flds
rolb
mov
fistps
mov
mov
inc
jns
ret
mov
sub
int3
xchg
mov
loopne
rcr
bound
lds
adcb
in
lds
mov
dec
add
mov
loop
iret
fsts
out
test
icebp
cmp
into
jno
out
daa
jmp
jnp
dec
mov
cmpsl
xor
cs
cmp
add
mov
and
test
or
loop
xchg
ficoms
iret
xchg
pop
lds
push
rorl
mov
mov
aam
jae
push
mov
lods
jbe
sbb
lcall
addl
iret
push
or
or
adc
fildll
ds
inc
push
xchg
hlt
test
add
xlat
lea
je
or
fsubr
lods
mov
xchg
dec
outsl
xchg
je
iret
mov
testb
sahf
xchg
mov
icebp
aas
xchg
xchg
popf
daa
add
lret
es
xor
in
aam
inc
ficoms
lcall
out
shlb
pop
push
dec
test
push
sub
and
mov
daa
add
outsb
xchg
jo
cli
mov
and
adc
or
or
xchg
inc
xor
adc
pop
push
jb
nop
lock
cmp
clc
sbb
in
test
cmpsl
or
hlt
mov
mov
push
jmp
add
push
mov
sub
fdivrp
shrl
or
jne
sti
stos
into
push
cld
xchg
fisttpll
aaa
ljmp
aam
jb
sbb
mov
clc
pop
mov
and
adc
bound
jo
cli
push
lods
jnp
push
stos
jae
dec
dec
push
sub
pop
or
and
stc
sub
das
or
cltd
leave
xor
stc
fisubrs
dec
idivb
pop
push
sub
push
jno
xorps
xor
out
iret
stos
push
add
push
jo
add
push
and
popf
lock
insb
and
push
shll
and
sub
lcall
cwtl
adc
dec
jecxz
in
sti
jne
test
fcomi
std
cli
int3
pop
or
mov
add
mov
imul
les
scas
pop
mov
dec
mov
inc
repz
pusha
mov
dec
sbb
add
pop
cmp
xor
adc
jmp
mov
mov
adc
adc
fidivrl
lret
inc
rcll
lods
dec
or
daa
std
lahf
jno
outsb
sbbb
cmp
ffree
das
mov
adc
xchg
or
cmpsb
pop
sub
jmp
dec
sti
push
shlb
or
rclb
jecxz
enter
lcall
dec
orl
mov
cmp
outsb
jno
jbe
cmp
or
ds
call
stos
xor
in
cs
mov
xor
mov
adc
stc
or
fisttps
and
pop
jge
in
mov
inc
mov
ds
xchg
data16
cmpsb
xor
pop
cvttps2pi
fdivp
inc
arpl
mov
cmp
jl
xchg
leave
imul
sub
xchg
jb
cmp
sbb
jbe
xor
jg
dec
mov
outsl
xlat
mov
push
clc
cmp
outsb
pop
insb
lods
push
mov
repz
cli
fwait
mov
push
add
fdivrp
rol
jae
das
out
dec
xlat
js
iret
repz
cmp
and
jno
lods
xor
add
pop
mov
sahf
push
ror
push
xor
xchg
ljmp
sub
je
inc
je
test
insl
cld
add
hlt
or
and
fwait
in
lea
aam
mov
xlat
adc
pop
add
out
cmc
or
stos
cmp
xor
out
pop
data16
out
inc
add
sbb
cs
mov
lahf
adc
ljmp
push
mov
out
mov
aas
xchg
fadds
pop
mov
mov
push
jae
pop
popf
mov
nop
negb
inc
inc
incl
test
xor
clc
std
gs
outsl
push
or
sbb
and
pusha
or
cltd
add
pop
pop
xchg
mov
arpl
inc
push
mov
jmp
and
ret
xchg
movsb
jno
mov
ret
sub
fimull
inc
call
jnp
sub
add
fwait
adc
enter
adc
xchg
mov
or
repnz
bound
cwtl
testl
push
aaa
ret
adc
jae
mov
and
js
push
cmp
jnp
cmp
test
xorb
stc
iret
hlt
fstps
mov
cwtl
inc
test
push
or
xlat
fld1
inc
sarl
sub
mov
pop
xor
add
or
adc
std
filds
sbb
hlt
sub
push
jge
roll
es
push
sti
jo
pop
push
jb
into
jp
add
jmp
fwait
rcrb
fiadds
sbb
add
add
inc
and
call
sahf
dec
in
dec
pop
adc
jmp
inc
mov
lods
js
adc
xchg
xchg
mov
add
push
fwait
je
push
lret
out
xor
cbtw
jbe
addl
add
or
cmp
dec
inc
loopne
arpl
lret
insl
add
sub
jno
fld
lds
fs
mov
jbe
sti
lret
fisttpl
shll
pop
sub
cmpsl
loopne
or
out
mov
lea
mov
xchg
adc
addr16
fisubrs
and
pusha
ss
jg
inc
rcrl
cltd
pop
inc
sbb
ret
outsb
aaa
incl
pop
or
ficoml
or
ja
xlat
dec
aaa
jge
and
jmp
mov
inc
inc
aad
cmpsb
call
in
mov
fisttpll
inc
push
xor
mov
xchg
sbb
int3
js
or
ljmp
add
ret
pop
adc
jecxz
mov
jnp
mov
leave
addr16
dec
push
sbb
push
adc
iret
adc
push
movsl
push
lds
out
out
xlat
scas
lds
filds
aas
in
lret
or
sbb
cmp
aaa
dec
leave
jns
pop
arpl
fst
mov
rol
shlb
test
mov
xor
loop
in
jmp
pusha
jmp
sbb
sbb
mov
xor
jne
cmpsl
icebp
sub
out
mov
push
stos
aad
lahf
or
lods
xchg
sub
pushf
lcall
fbld
mov
scas
incb
push
lea
cmp
push
mov
jecxz
xchg
iret
orb
movl
add
cmpb
scas
outsl
sbb
imul
push
int
out
push
xchg
repz
shl
push
push
jmp
cli
test
inc
inc
shlb
add
inc
mov
lcall
fisttpll
sarl
movsb
cmc
pop
clc
test
outsl
cmp
dec
or
and
adc
and
iret
xorb
imul
mov
cmp
push
in
nop
mov
jb
mov
jmp
lret
lcall
daa
les
pop
mov
sbb
push
lea
fists
sub
cmp
push
jl
mov
dec
arpl
mov
sbbb
ds
subl
arpl
ret
fcoml
or
or
mov
rcr
pop
imul
out
jne
les
popa
cmp
push
fnsave
jb
jb
and
adc
js
mov
hlt
sub
xchg
push
loop
cmpsb
sbb
or
cmp
add
fisttpl
jp,pn
push
out
xor
stos
jo
inc
enter
sbb
out
lret
push
fists
xchg
mov
fisttpll
add
add
pop
cmp
ljmp
sub
cltd
jno
repnz
cltd
mov
and
mov
lahf
in
sub
adc
aad
cwtl
arpl
aaa
dec
cmp
lret
imul
outsb
or
les
sub
jbe
test
and
jl
add
mov
xor
mov
ret
mov
dec
fcomi
aam
gs
adc
imul
lds
clc
imul
dec
stc
or
mov
popa
sti
sar
sbb
sti
jb
stos
add
pop
out
popf
insl
pop
xchg
loope
bound
xchg
int
mov
lock
jo
rorb
mov
rcrb
gs
push
js
pop
loope
out
push
inc
fmul
mov
scas
inc
mov
mov
mov
cmp
cmp
jecxz
xor
or
or
dec
sub
jno
idivb
in
jge
jl
repnz
cmpb
pop
inc
ss
fpatan
mov
push
inc
scas
cmpsb
pop
sbb
cmp
sahf
jmp
aas
aad
adc
jg
inc
jge
pop
xchg
ret
add
xor
mov
and
jle
aas
sti
add
jp
mov
mov
jg
inc
jnp
mov
push
cmpl
jo
mov
sub
sbb
pop
lcall
jae
addb
lods
jl
or
and
xchg
mov
gs
std
dec
xchg
int
xchg
push
cmc
mov
mov
int
pop
jo
sbb
in
faddl
addr16
push
pop
imul
dec
cli
aad
mov
outsl
xchg
into
adc
and
test
mov
pop
mov
mov
pop
test
lds
rcrb
leave
cwtl
sbb
je
std
ret
outsb
into
mov
test
sbb
bnd
mov
popl
leave
push
xchg
je
aas
mov
xor
push
dec
pop
ds
out
loopne
lret
popa
les
clc
pop
das
notl
idivl
in
ljmp
fmul
shlb
aaa
dec
rcl
dec
cmpsl
inc
loop
sub
push
sub
fxch
jg
mov
lret
mov
mov
sbbl
data16
sti
xor
push
hlt
es
cmp
adc
xchg
and
test
pusha
xor
xchg
stos
test
dec
cmpsb
or
jbe
adcb
mov
popa
int
outsl
arpl
insb
mov
mov
outsb
xchg
les
aaa
popa
inc
fcoml
popa
push
and
xchg
mov
in
add
cmpsb
adc
sub
mov
je
dec
pop
adc
jge
cmp
enter
in
sbb
fs
dec
ja
aam
mov
iret
and
inc
je
pop
nop
dec
sbb
mov
fmuls
hlt
aam
lea
dec
mov
movsl
stc
adc
push
adc
ss
pop
inc
stos
and
jecxz
push
mov
sub
test
popa
iret
adc
repz
not
out
iret
data16
pop
pop
icebp
mov
dec
sbbb
sub
adc
mov
cmp
ja
dec
xchg
lock
pop
bnd
movsb
xlat
pop
jmp
jp
incl
add
jae
cli
or
repz
adc
xchg
cmp
fldcw
rcrb
xor
cmpsl
lods
fdivl
lock
stos
jb
jmp
jp
scas
dec
cmp
jne
adc
addr16
mov
fldl
sbb
cmp
or
add
fwait
xchg
leave
fstps
rorb
rclb
push
insl
iret
out
push
mov
inc
mov
sub
jmp
icebp
movsl
out
ret
fistl
repnz
and
xchg
adc
mov
scas
gs
movsl
fildl
cmc
movsl
lods
jb
lcall
fstps
outsb
in
aam
idivb
xor
xchg
or
pop
ret
in
mov
lret
div
xchg
cld
das
adc
cmp
sar
adcl
imul
sahf
cmpsl
pop
mov
adc
and
lcall
add
sbb
sub
xchg
sbb
cmp
inc
cmpl
push
shll
inc
andl
sub
fidivrs
push
das
lock
jg
ficoml
mov
xchg
cmp
pusha
pop
jl
cmp
sarl
add
jbe
cwtl
cmp
jp
shl
rcrb
or
sbb
std
aad
sbb
shlb
push
in
cmp
lret
xor
outsl
push
mov
mov
push
jmp
mov
push
mov
mov
xchg
ds
adc
nop
xchg
scas
ret
push
jne
mov
xrelease
pop
dec
xor
mov
insb
jb
bound
stos
pop
jnp
xchg
adc
sahf
jns
dec
sbb
cwtl
pop
mov
cmc
test
inc
iret
xor
lea
inc
add
in
add
sub
cmp
or
jge
lret
aas
pop
mov
rclb
mov
fwait
xchg
mov
insb
int3
inc
sbb
insl
ret
mov
scas
or
mov
jb
daa
mov
push
adc
insb
enter
repz
fidivl
mov
pop
cmp
cwtl
xchg
divl
stos
pop
sbbb
sahf
fiaddl
pop
sarl
pop
add
cmp
aam
sahf
outsb
loop
cli
mov
sbb
mov
xor
inc
loopnew
dec
lods
push
jle
xor
in
imul
dec
cli
cmpsb
cmp
loope
jno
xor
cmpl
iret
je
inc
out
mov
push
push
js
add
adc
sub
mov
frstor
inc
pop
mov
shld
xor
daa
cmp
movsb
mov
inc
lds
aad
fldcw
insb
lcall
jnp
lods
sub
or
pop
xor
pop
pop
shrb
incb
inc
xorb
push
add
ss
popf
mov
jno
push
int
cld
sbb
test
xchg
and
mov
xor
lds
mov
add
lods
jnp
addb
repz
jecxz
das
jecxz
rcr
cmp
dec
push
and
pop
out
sarl
pop
dec
jae
sarb
subl
out
sub
addl
repnz
add
pop
pop
inc
xor
jae
xor
cli
dec
mov
mov
inc
push
sub
push
int3
mov
rcrl
aad
mull
lret
bound
or
dec
adc
adc
mov
pop
pusha
cmp
in
andl
sub
inc
and
loop
lea
cmp
inc
mov
xor
push
mov
cs
and
pushf
movsl
push
sbb
fdivr
jmp
pushf
js
sub
push
lret
cs
les
shrb
in
sub
xor
gs
push
hlt
inc
mov
pop
push
push
pop
jg
shll
out
or
loope
out
sbb
pop
push
in
aam
sbb
imul
mov
pop
xor
jle
push
xor
adcl
sub
and
sbb
out
pop
inc
jg
pop
cmc
js
jbe
mov
inc
adc
sti
int
test
cs
cmp
mov
fdivrs
add
mov
ja
inc
fprem
mov
les
push
das
mov
dec
rcrb
mov
enter
jge
and
hlt
mov
out
hlt
sub
lret
cmp
cmp
push
jb
pop
int
dec
add
sbb
in
pusha
rcrb
mov
leave
and
push
movsb
imul
add
add
inc
jle
scas
dec
sub
rorb
jae
lds
ret
fldcw
xchg
gs
sbb
cli
outsl
adc
out
in
inc
cmp
insb
jmp
adc
jne
cmp
shrb
mov
shlb
cltd
test
rcll
adc
add
mov
aad
out
sub
lea
ljmp
push
lods
jb
nop
mov
mov
pop
js
pop
call
movsb
xchg
xlat
mov
mov
push
inc
lcall
sub
or
stc
jbe
stc
movsb
fstl
lock
jcxz
sbb
shrb
xchg
imul
rcr
pop
pop
rcrb
lahf
scas
xchg
xchg
mov
fnstcw
pop
ja
int3
pop
jp
int
orl
pop
ret
pop
lea
popa
ss
ljmp
push
mov
xor
scas
pop
cmp
xor
insb
into
or
adc
mov
imul
pop
jns
dec
sbb
sarl
inc
xchg
jnp
sbb
add
cli
in
xchg
mov
cmp
jl
xor
in
pop
dec
ja
sbb
xor
in
mov
jp
das
shrl
jae
sti
jmp
or
sub
mov
arpl
jo
sbb
test
rcrb
mov
movsb
mov
dec
lock
and
fisubrs
or
sbb
shrl
inc
mov
mov
mov
in
xor
mov
xchg
fcomi
mov
jo
ja
push
mov
in
inc
xorl
mov
push
push
pop
dec
outsb
dec
loope
popa
ss
pop
fdivs
sarl
stc
popa
jp
shl
aaa
push
ficompl
pop
mov
sarb
mov
cmpsl
push
imul
jmp
lods
jne
dec
aam
mov
stos
mov
xchg
jl
xchg
adc
popf
call
jg
dec
xchg
xchg
and
test
aaa
fwait
mov
out
mov
xchg
cmp
jle
mov
pop
ret
les
sbb
rcl
xchg
jle
mov
pop
inc
add
mov
stos
leave
inc
adc
push
jns
push
mov
shl
jb
cs
fcoml
sbb
dec
sbb
push
icebp
jne
sub
pop
inc
adc
ret
adc
in
enter
inc
xor
mov
push
dec
je
xor
fimull
or
ss
dec
mov
cmp
add
in
adc
inc
push
pop
pop
pop
cmp
popl
jno
lods
bound
es
and
xchg
jo
xchg
mov
pop
or
xchg
int
icebp
imul
lahf
pop
xor
lea
xor
mov
sbb
add
vphaddwd
pop
inc
pusha
scas
dec
cmp
cld
je
dec
jecxz
ja
xchg
ss
movsl
iret
scas
xor
int
add
jecxz
inc
cs
les
sbb
sub
push
mov
push
ljmp
int3
jne
jecxz
cmp
iret
fimuls
sahf
cwtl
dec
cwtl
cmp
loop
sahf
xor
pop
add
lock
xor
push
adcl
adc
push
pop
adc
jg
jmp
scas
jmp
inc
scas
ficoml
inc
adc
fldt
sub
or
xor
gs
pushf
out
or
outsl
lea
adc
xor
icebp
sbb
lds
in
mov
scas
cmp
push
rol
xor
mov
sub
stc
jb
filds
popa
adc
sub
es
add
addr16
ficomps
inc
sub
lret
push
into
xchg
push
add
ds
add
mov
test
fcompl
or
hlt
ror
mov
sub
xor
nop
sub
mov
aad
addr16
jnp
jnp
icebp
sub
les
pop
sti
mov
and
sub
and
sbb
sbb
pushf
mov
stos
arpl
cs
mov
jmp
push
sbb
xor
pushf
pop
push
push
inc
and
and
das
xchg
xor
sub
ret
xchg
das
je
ss
xchg
cltd
ss
data16
aaa
out
lods
les
push
call
lock
pop
push
bound
in
fs
mov
adc
cld
push
ret
cld
notb
cmpb
xchg
xchg
xor
dec
mov
and
add
xor
cmp
inc
sahf
inc
gs
aaa
lods
repnz
mov
out
les
fsubs
cmp
ret
pop
jl
mov
dec
ss
test
call
cmp
dec
scas
pushf
pop
add
fs
dec
jne
xor
xchg
dec
cmp
ja
andb
jge
jae
inc
push
mov
test
sub
sub
ss
sbb
fcmovu
fdivs
cmpsl
mov
sbb
push
ja
add
scas
hlt
sarb
data16
dec
mov
sbb
imul
mov
push
sbb
int
push
jle
popf
sub
mov
fwait
pop
xchg
mov
scas
adc
sti
sbb
cmp
loope
daa
xor
clc
adc
xor
clc
cmpsb
cmpsl
inc
or
mov
sahf
add
sbb
movsb
inc
mov
and
and
fcmovne
jmp
addb
cld
dec
mov
in
sti
fucom
popa
mov
pop
dec
stos
mov
int3
int
and
xchg
and
mov
fsubl
out
cwtl
or
sbb
xchg
and
popa
ret
xlat
das
pop
lcall
sbb
cmpsl
inc
xchg
jmp
js
lea
daa
cli
jae
je
stc
fbld
or
mov
xor
xchg
mov
aad
mov
cs
sbb
stos
inc
icebp
in
les
and
push
adc
xor
mov
mov
push
xor
andb
cld
sbb
mov
and
jno
sbb
push
fnstsw
or
mov
jbe
xor
xor
daa
test
xor
mov
shrb
fxch
jnp
adc
ds
pop
dec
adc
leave
sub
out
scas
jl
cmp
xor
call
and
popf
arpl
cmc
and
mov
sub
add
and
inc
xor
jbe
pop
adc
sbb
push
jo
adc
je
inc
dec
xchg
aaa
test
adc
cmp
adc
fcomp
repnz
and
imul
int3
dec
push
xor
scas
nop
test
cmp
pop
imulb
test
ret
fisttpll
aaa
sbb
nop
sbb
jnp
ss
push
outsb
or
daa
in
scas
and
xchg
iret
out
and
in
pushf
pop
sbb
or
xchg
outsb
and
stc
arpl
xchg
movsb
dec
push
cwtl
mov
lcall
or
jae
movsb
ret
fimuls
push
dec
imul
adc
cmp
fldenv
pop
in
repz
dec
dec
and
sbb
adc
fidivrl
ja
lods
into
push
pusha
insb
inc
inc
cmpl
jge
sarl
cli
dec
imul
out
adc
movsb
in
jbe
ss
testl
mov
sub
inc
fmuls
cmp
nop
pusha
sbb
mov
inc
lock
rcrb
and
movsb
pop
pusha
jmp
xchg
lahf
nop
lahf
cltd
cld
dec
dec
mov
aam
adc
ret
fistpl
fcomi
lret
and
xchg
dec
stc
pop
aaa
cwtl
std
js
dec
stos
orl
mul
cltd
jb
shlb
in
and
fucomp
push
push
sub
loope
add
daa
add
setb
pop
jbe
leave
lods
mov
movb
pop
add
fst
lods
std
dec
pusha
mov
cmp
aad
xor
mov
dec
sub
mov
sarl
in
lods
lahf
dec
fs
pop
jg
push
ficompl
dec
outsb
add
test
mov
adc
mov
insb
sbb
pop
fwait
rclb
adc
test
imul
pop
mov
sbb
lcall
mov
nop
rcr
mov
adc
xor
inc
mov
mov
add
and
mov
xchg
ja
out
mov
mov
push
lods
add
mov
out
inc
test
sub
sarl
xlat
mov
push
mov
adc
or
xchg
sub
sbb
cmp
push
mov
bound
jns
arpl
mov
inc
adc
jge
fsubp
nop
xlat
mov
dec
shlb
sbb
xchg
sub
hlt
cli
cmp
insl
push
filds
push
jmp
cltd
mov
mov
sbb
adc
mov
pop
mov
inc
movsb
xor
in
int
or
sub
loope
push
inc
jo
daa
ret
jl
imul
mov
xor
push
mov
pop
nop
xor
aas
or
aas
xchg
mov
stos
adc
stc
and
call
lods
adc
sub
cmp
adc
roll
out
cmp
add
daa
mov
popa
sbb
test
lea
sub
std
inc
nop
repz
dec
jb,pt
fs
test
mov
mov
cld
sti
add
hlt
les
aad
mov
pop
cli
jp
inc
and
mov
mov
adc
fadd
aaa
aaa
pop
jl
jmp
mov
fstpl
mov
stos
hlt
mulb
lock
adc
xchg
popa
sti
push
int3
sbbl
mov
pop
sub
iret
mov
pusha
ret
ret
fld
test
add
mov
stos
test
jnp
test
mov
cmp
arpl
inc
push
call
lods
and
push
int3
inc
adc
imul
mov
xor
fwait
pop
pushf
jbe
xchg
jecxz
mov
fidivl
mov
ja
xchg
jo
insb
jno
movsl
push
adc
ja
fwait
mov
xchg
push
xor
mov
mov
xchg
pop
mov
adc
pop
jg
lret
pop
pop
out
inc
mov
pop
cmp
mov
pop
xor
shll
push
movsb
gs
xor
cwtl
xchg
mov
xor
popa
push
push
popf
int
sbb
faddl
mov
sub
cmpsb
pop
sbb
in
sar
mov
out
mov
sub
jb
sbb
mov
inc
add
mov
sub
add
dec
popf
adc
punpcklbw
insb
xor
mov
push
popf
pop
imul
cs
popf
sbb
movsb
xlat
and
cli
dec
or
nop
inc
dec
cmp
xlat
push
loope
scas
bound
pop
add
shrb
sub
movsb
add
adc
jp
inc
iret
mov
push
adc
insl
lret
in
in
add
push
aas
fbld
clc
or
add
popf
add
aam
mov
jnp
stos
inc
hlt
mov
rcrl
ja
inc
loope
pop
lds
das
stc
in
mov
xor
lods
insl
push
cmp
lods
jl
imul
addl
subb
push
xchg
or
nop
cmc
int
mov
popf
inc
les
jmp
nop
or
cmp
stc
pusha
xchg
or
mov
imul
sbb
adc
jns
sbb
rol
mov
daa
xor
and
add
xchg
repz
mov
lahf
sub
js
leave
inc
mov
xor
ficompl
adc
push
sbbl
rorl
icebp
cmp
daa
inc
fldenv
subl
jbe
es
push
into
test
mov
shrl
adc
aam
sbb
call
jge
add
sub
lea
rol
dec
aas
jns
mov
jbe
dec
loop
inc
shll
data16
xchg
mov
mov
test
loopne
or
repnz
add
pop
jl
fcmovnb
movsl
fbld
insl
mov
ds
and
test
fsubrp
pop
fwait
mov
pop
inc
mov
jp
or
xchg
push
je
cmp
or
jecxz
fwait
mov
bound
jnp
inc
inc
popf
adc
repz
nop
mov
data16
imul
mov
test
cmp
xor
lods
std
fdivrl
cmc
rcll
mov
mov
push
bound
rcrl
mov
lods
sbb
fs
cltd
mov
mov
scas
int
fildl
sub
sbb
out
dec
pushf
es
ss
push
loop
cmp
push
iret
imul
dec
shrb
out
jl
push
cmc
ja
loop
in
int3
popa
pop
inc
lods
lods
sbb
inc
cmp
add
xchg
inc
dec
and
outsl
push
test
pushf
mov
jge
jne
add
lds
adc
in
ljmp
es
and
xchg
insb
mov
and
shl
cmp
js
imul
pop
push
dec
inc
and
lods
adc
mov
test
vmulps
ret
mull
jne
scas
xchg
lcall
push
jmp
lock
lea
inc
mov
gs
mov
jp
cmp
call
aad
int
and
lock
sub
outsb
xchg
arpl
dec
les
repnz
adc
mov
out
ljmp
int
rcll
add
addr16
cs
rcrl
jae
frstor
pop
inc
std
iret
arpl
pop
sbb
lods
pusha
cld
cmpsl
ror
insl
mov
or
add
js
and
hlt
arpl
xchg
mov
pop
dec
sbb
lock
scas
mov
sbbb
aas
cltd
or
mov
push
lods
mov
cmp
movb
cmpsb
xchg
out
ja
pop
mov
int3
fsubs
push
mov
mov
mov
in
cmp
imul
pop
xor
pop
outsl
pop
test
pop
loop
jo
mov
ret
ret
adc
mov
push
sbb
xor
add
xor
and
and
inc
inc
add
andl
sbb
mov
cs
mov
fwait
lods
enter
outsl
jo
mov
out
jl
scas
or
mov
loope
jmp
mov
in
cwtl
dec
dec
js
add
jl
je
test
roll
out
adc
icebp
mov
call
fadds
dec
shrb
or
mov
jae
sbb
and
add
push
test
stos
fisubl
adc
cmp
and
in
add
fcoml
add
xor
ja
xor
lods
push
jns
xor
fistpl
pop
pusha
jg
mov
xchg
jmp
jbe
or
jg
sahf
out
insb
out
lods
jne
jp
mul
pop
outsl
dec
ds
gs
nop
mov
leave
mov
mov
jle
aas
das
idivl
push
cmp
dec
pop
xor
imul
pusha
or
les
mov
inc
ret
and
enter
aad
push
push
sti
data16
jmp
mov
mov
mul
hlt
lods
jae
inc
xchg
hlt
outsl
cmp
mov
js
adc
push
in
icebp
cmp
test
and
adcl
dec
mov
adc
fsubl
pushf
jg
out
mov
fwait
mov
cmc
imul
cmp
mov
movsb
xlat
xchg
cmp
pop
mov
push
mov
xor
fadd
ss
inc
push
int3
dec
mov
mov
mov
xchg
test
xchg
cmp
cmp
pusha
outsl
push
mov
shrb
jecxz
loopne
shl
mov
xchg
and
movsl
lcall
pop
xchg
sbb
cld
lods
loopne
addr16
jbe
ret
in
loopne
cwtl
push
or
lea
cmp
mov
dec
test
das
sub
jecxz
popf
enter
pop
fimuls
mov
cmc
jmp
popf
jecxz
sbb
dec
mov
sub
sarb
gs
push
imul
xor
pop
add
pop
jnp
dec
adc
fcmovbe
mov
fs
je
inc
cmpsl
scas
fs
xchg
pop
cmp
dec
stos
jno
pop
clc
fidivrs
xlat
pushf
mov
inc
cmp
xchg
in
cmpsl
jge
push
orl
sbb
jae
xchg
inc
std
inc
mov
int3
push
inc
decb
sub
sub
add
in
jb
ficoml
cmp
xchg
lcall
xchg
or
insl
xchg
push
jge
push
jb
lea
test
popf
rcrl
cs
js
push
mov
pop
out
es
nop
sbb
push
jne
fnsave
lea
ds
and
adc
push
pop
or
and
pop
popa
ds
repnz
nop
lret
adc
add
sahf
aas
add
mov
mov
or
lahf
rclb
aad
sti
loop
inc
adcl
inc
xor
pop
fstp
and
fsubrs
sbb
mov
mov
jae
movsl
outsl
adcl
add
pop
and
mov
fidivrl
mov
dec
inc
inc
in
xchg
push
int3
adc
mov
clc
dec
cmp
cmp
std
or
push
cmp
or
lcall
pop
icebp
push
js
fidivrl
dec
jno
xor
sti
mov
mov
and
xor
push
jne
or
mov
and
mov
aaa
or
cmp
icebp
aas
popf
push
int3
jle
test
mov
mov
scas
shl
ljmp
cmpl
fisubrl
sbb
dec
xor
lret
out
aaa
jne
sub
inc
stos
inc
insl
and
cmpsl
mov
ret
inc
mulb
sbb
cwtl
adc
into
push
ss
jmp
sarl
movups
jmp
es
inc
testb
sbb
inc
repnz
cmp
out
fists
fbstp
fsubs
movsb
jl
ja
dec
pop
and
mov
pop
dec
cli
xor
mov
jp
mov
push
leave
jmp
mov
dec
push
lea
js
add
pop
lahf
dec
sbb
dec
es
jl
dec
mov
mov
and
push
loop
lds
popa
dec
divl
push
add
cmpsb
mov
push
pop
push
mov
repz
loopne
mov
hlt
das
jo
lock
mov
cmp
iret
andl
lock
push
div
orl
popf
mov
pop
test
roll
xchg
fs
xchg
pop
popa
out
addl
roll
add
faddl
xchg
mov
pop
sub
insb
aam
loopne
fidivs
daa
dec
out
mov
mov
add
dec
mov
nop
and
xchg
pop
jge
std
scas
add
clc
pop
popf
jbe
xor
push
das
dec
sub
jp
in
fnstsw
sarb
pop
lods
add
mov
sbb
xor
lcall
add
push
cli
test
ss
xor
pop
sbb
mov
jmp
notl
lods
push
jae
hlt
cs
push
dec
xchg
hlt
inc
jmp
mov
movsb
add
cltd
mov
es
mov
data16
aas
adc
pop
jp
sbb
add
cmc
or
cmpsl
adc
es
dec
fistpl
jmp
decb
loope
sti
sti
mov
dec
enter
repnz
push
xor
into
jns
and
das
addr16
add
and
out
shl
std
sub
sbb
xchg
adc
aad
out
xor
mov
sbb
lret
jecxz
dec
cld
jbe
adc
push
js
repz
lahf
leave
xchg
call
aad
mov
mov
mov
xchg
mov
xor
out
repz
mov
or
adc
cmp
jo
fwait
outsb
lods
mov
incl
imul
and
dec
dec
dec
jmp
add
mov
mov
dec
lahf
xlat
sub
pusha
dec
jl
negb
ljmp
pop
or
jle
add
in
scas
in
dec
pop
dec
ret
leave
daa
cmp
js
dec
and
sub
test
imul
cli
add
jmp
in
enter
mov
cmc
add
iret
fs
shlb
stc
mulps
add
mov
pushf
out
mov
xchg
ss
mov
push
clc
xchg
ret
jns
pop
bound
jns
cmp
adc
ja
pop
jecxz
cwtl
incb
roll
mov
add
sar
mov
outsb
inc
mov
mov
push
adc
push
test
imul
inc
loope
incl
cmp
and
cltd
cmp
std
or
dec
sbb
jns
xchg
mov
mov
or
adc
sbb
sub
rcrl
pop
mov
repz
jecxz
out
mov
mov
push
daa
jl
mov
add
movsl
call
push
sbb
hlt
mov
adc
dec
jno
sub
jg
cmp
push
ret
jnp
lods
jne
sub
fcomip
fstpt
lods
mov
fnsetpm(287
cld
out
mov
arpl
jns
push
push
adc
push
xor
pop
jne
fwait
xchg
and
add
xlat
aam
inc
sub
pop
cmp
je
push
mov
sbb
sub
push
call
xchg
mov
ljmp
test
in
popa
mov
push
xchg
mov
push
loop
pop
imul
add
test
clc
add
mov
adc
ficompl
pop
aad
imulb
push
mov
xor
fs
and
cmpsb
mov
xlat
ljmp
push
das
arpl
imul
cmp
xor
cmp
fs
sub
mov
icebp
call
mov
fdivr
gs
cld
push
cmp
test
pavgw
js
xor
icebp
aad
add
inc
fisttps
in
xor
aam
cld
mov
int
rorb
sub
sbb
fisubrs
mov
fs
push
add
inc
clc
icebp
dec
sbb
cmpsb
incb
popa
xor
or
mov
mov
in
add
rep
cmp
adc
mov
adc
cmp
cmpb
xchg
addl
jnp
dec
pusha
sbb
cltd
das
sbb
sbb
mov
adc
add
push
mov
incb
iret
or
sti
xchg
or
xbegin
pop
or
add
xchg
daa
insb
mov
scas
imulb
pop
mov
bound
xchg
sub
repnz
lds
jno
cmpsb
lods
mov
xchg
inc
aam
insl
mov
test
aam
add
pop
sub
ljmp
or
cmp
imul
mov
ret
fs
inc
and
daa
icebp
std
dec
mov
iret
mov
push
mov
loopne
decb
pop
sub
je
jl
into
xor
loop
movsb
sahf
sbb
inc
mov
repz
pop
xor
pop
test
lods
inc
rorl
push
dec
hlt
aas
fadds
xchg
iret
mov
pop
lret
test
lret
push
jmp
ds
jo
gs
mul
xor
fsubs
dec
fisubs
jecxz
dec
stos
idivb
inc
je
jp
aad
cmpsl
and
loopne
sub
xor
das
mov
pop
mov
jp
test
sbb
das
adc
pop
jl
test
lods
mov
adc
adc
sbb
iret
test
icebp
int3
jo
adc
mov
int3
and
cld
xchg
jecxz
cmp
mov
inc
mulb
or
repnz
jne
into
and
sbb
push
mov
fs
inc
inc
fdivs
xor
or
in
cmovo
lret
repnz
daa
enter
cld
or
jnp
adc
sub
fisubs
scas
jbe
xor
pop
xchg
insl
xor
mov
push
js
xchg
stc
add
push
jl
xchg
mov
subl
mov
xor
xchg
mov
das
pop
cmp
mov
aaa
stc
data16
adc
andb
mov
xchg
test
jne
xchg
cwtl
das
inc
lret
sub
cmpsb
sub
stc
fstps
pop
popf
pop
and
testb
jp
out
pop
pop
fsubl
scas
or
dec
jo
pop
mov
dec
lret
pop
arpl
mov
out
xlat
popa
imul
xor
inc
daa
pop
flds
push
xor
jg
adc
mov
pop
mov
dec
testb
dec
push
mov
jno
and
sub
fisttpl
jg
fnstcw
addr16
aad
add
dec
sub
repz
pushf
dec
adc
sbb
in
and
rcrb
lcall
fs
sahf
dec
fcmovnbe
adc
xchg
push
mov
jmp
adc
aam
push
mov
jae
push
adc
cmpsl
xchg
adc
fdiv
sub
sbb
out
jmp
fistpl
mov
pop
negl
mov
inc
aaa
dec
les
adc
fisttpl
jno
aaa
sbb
loop
inc
push
nop
adc
outsb
push
cmp
jno
push
adc
adc
icebp
out
lods
lods
sub
aaa
lock
inc
into
xchg
and
mov
cmpsl
clc
jno,pn
inc
insl
bndstx
push
subb
and
adc
loope
mov
hlt
stos
rorb
jl
mov
push
jo
pop
jbe
cmpsb
adc
lret
jo
push
inc
inc
int3
lock
cmc
iret
mov
jmp
test
lds
pop
mov
sbb
push
mov
orl
data16
gs
sub
xor
push
sahf
insb
lret
push
mov
fnstsw
push
shrb
test
je
xchg
push
jmp
cs
xchg
fs
pushf
pop
xor
ljmp
push
mov
xor
xchg
mov
repz
jmp
loope
xchg
sub
adc
mov
outsl
les
add
or
jge
push
int3
mov
popaw
mov
jne
ret
fsub
out
cmpsb
pop
sub
insl
mov
or
clc
into
mov
lods
add
or
add
jl
stos
mov
cld
jecxz
add
arpl
addr16
in
add
push
aad
fst
mov
cltd
pushf
js
jae,pn
lcall
dec
jbe
ret
mov
push
push
lods
mov
or
in
jb
sbb
subl
mov
gs
int
lea
inc
and
insb
aam
fildl
sbb
fsubp
cli
pop
out
add
push
cwtl
pop
sub
cmp
jns
lods
jns
mov
loope
add
mov
orl
xchg
jnp
or
call
mov
aam
cmp
stos
imul
mov
divb
rcll
lret
cli
call
pushf
or
xor
cmp
sub
leave
cli
pop
out
repz
dec
adc
push
cli
sbb
inc
repz
sub
out
daa
mov
jns
insl
mov
cmp
cmpsl
int3
addr16
push
subb
in
pop
push
repz
xor
inc
inc
popf
fs
jl
xchg
jle
mov
mov
sti
fistl
shlb
jno
sub
inc
das
mov
lret
test
inc
jecxz
fs
mov
pop
fmuls
add
xor
jae
sbb
xchg
inc
rolb
jl
pop
mov
hlt
xlat
jle
or
jle
sub
daa
cmpsb
mov
sbb
jmp
xor
fnstsw
push
sub
add
mov
shrb
sub
or
push
mov
add
fisttpl
movsl
fldenv
xor
sarb
fwait
mov
inc
lret
add
xor
rsm
pop
leave
fcoms
and
xor
out
pop
and
cmp
xchg
sbb
cmp
adc
add
mov
aad
and
stos
mov
rorb
roll
jbe
jmp
jg
xor
fistl
dec
mov
movsb
test
pop
xor
aad
xchg
jnp
xchg
ret
test
inc
and
mov
outsl
push
int
cwtl
xor
shll
jbe
sbb
or
fiadds
mov
ret
lcall
loop
fldcw
push
aam
ljmp
cltd
inc
or
dec
repz
mov
rcrl
iret
dec
mov
inc
inc
xchg
or
jmp
jg
sub
pop
cld
cmp
adc
iret
fsubl
adc
jmp
mov
pop
push
sbbl
addr16
sub
mov
loop
xor
pop
mov
je
and
mov
push
lock
adc
dec
shrl
pushf
cltd
mov
cmp
js
inc
pop
sti
fwait
push
mov
rorb
pop
jns
fdivs
pop
pop
popa
lods
aad
push
xor
ret
faddp
jb
test
insl
mov
push
sbb
jecxz
fsts
sbb
jnp
data16
sub
ret
mov
cwtl
sbbb
dec
push
mov
fwait
jbe
scas
cmc
rcrl
inc
popa
aaa
sbb
pusha
leave
lods
jae
movsb
dec
or
jae
jno
jae
fisubrl
mov
add
in
sbb
mov
sub
addr16
bound
mov
xor
das
sbb
push
lret
lahf
into
add
or
lds
add
ja
lret
aas
inc
popf
in
imul
cmp
scas
adc
cmpb
pop
insl
std
loop
mov
nop
mov
or
fidivrs
mov
mov
sbb
push
inc
mov
popa
pop
ret
cmp
sbb
fs
pop
es
xor
movl
inc
xor
jns
repnz
insb
add
inc
add
adc
cmp
dec
iret
enter
and
daa
fwait
xor
out
cmc
lock
inc
mov
xchg
mov
mov
mov
cmc
sub
int
enter
ret
dec
cmp
ljmp
and
mov
mov
aam
xor
xor
stos
sub
fdivrl
js
ljmp
out
xor
push
fistpl
push
stc
mov
dec
cmp
xchg
mov
push
stos
imul
and
push
jge
xor
xchg
or
sahf
fnstsw
jns
rolb
mov
rorl
mov
stos
into
cmp
dec
cld
insb
inc
movsb
adcl
js
xchg
call
cmp
mov
push
sti
int
add
mov
movsb
or
push
stc
sti
push
dec
cmpsb
xor
cmpsl
test
sub
inc
xor
outsb
inc
lret
add
fwait
aad
leave
test
leave
into
aaa
into
ret
xor
mov
dec
stos
mov
fistl
mov
inc
sbb
ret
fnstenv
in
xchg
fsts
jns
sub
loopne
data16
inc
sbb
xchg
and
cwtl
mov
sbb
pop
jno
fwait
jge
rcl
aaa
push
into
cld
idivb
dec
leave
add
repnz
negb
pop
jle
or
daa
or
pop
xchg
lret
aam
inc
pusha
inc
fucomp
gs
jg
out
aam
mov
pop
mov
pop
movsb
sub
and
mov
repnz
ret
xchg
mov
push
pop
stos
xchg
push
fnsave
mov
fdivl
stc
xor
adc
outsl
fs
or
jg
mov
ljmp
cmc
mov
fnsetpm(287
push
fdivp
pop
jb
dec
pop
sahf
in
mov
mov
xchg
fwait
mov
test
cmp
ss
clc
movsb
bound
scas
push
or
mov
jp
fistpll
adc
addr16
mov
in
mov
sar
ja
xor
cs
lea
pop
loope
push
adc
push
mov
outsb
or
cmp
jecxz
popa
aaa
sahf
inc
fisubl
sub
pop
mov
adc
xchg
dec
jg
sub
insb
add
mov
push
ds
mov
sub
sbbl
mov
shl
aad
mov
inc
sahf
push
leave
out
and
dec
xchg
mov
or
add
les
ljmp
xchg
test
cmp
adc
rclb
pxor
mov
scas
pop
or
hlt
mov
pop
cmpsb
sub
popf
filds
xchg
das
cmpsl
push
sub
lret
loope
movsb
push
movl
jg
ret
ljmp
cmp
adc
idivb
inc
outsb
mov
lods
or
and
add
imul
pushf
incb
es
jo
push
or
mov
and
jge
fbstp
xor
ds
mov
xor
xchg
mov
inc
les
test
mov
adc
lds
loop
bound
jp
and
and
adc
ss
dec
or
push
mov
push
dec
dec
lcall
pop
lahf
mov
adc
mov
mov
andl
call
push
scas
mov
sbb
dec
ret
sarl
outsl
insl
test
mov
inc
mov
xor
cmp
clc
popf
adc
jle
test
iret
pop
roll
scas
add
lret
sbb
movsl
or
dec
out
mov
dec
out
clc
outsb
mov
pop
in
pop
popf
or
call
mov
inc
and
sub
cld
xchg
popa
clc
mov
and
cs
add
cmc
aam
jl
ficoml
add
adc
cwtl
outsb
add
mov
mov
sbb
stos
xor
push
lret
xchg
faddl
mov
and
inc
je
aaa
pop
scas
mov
movsb
add
cmp
mov
lods
mov
pop
mov
test
jbe
ds
int3
xorb
adc
jmp
loope
dec
es
pop
push
dec
cmp
sub
popa
icebp
mov
bound
movl
cmp
addr16
jns
inc
test
add
fnstsw
mov
push
cmp
cmp
and
dec
jbe
dec
push
cmp
mov
sbb
mov
xor
sbb
aam
add
insl
scas
fimuls
pop
dec
pop
dec
ret
rcrb
sub
mov
sbb
sbb
loopne
inc
push
jl
cmp
sti
stos
mov
inc
mov
neg
xor
into
cmc
sub
adc
arpl
and
lcall
hlt
xorl
xor
mov
cmp
inc
jo
cltd
dec
inc
stos
fcomps
pop
fsubrs
xbegin
add
or
fmull
ficoml
or
pop
fs
es
dec
xchg
xchg
loop
shll
dec
sub
jecxz
jbe
adc
lahf
xchg
sbbl
fcomps
sbb
insl
add
pop
out
cmp
std
mov
mov
fstl
jbe
mov
push
mov
adc
sbb
test
shll
and
add
sbb
sbb
xor
inc
call
movsl
mov
push
push
sub
sahf
test
mov
mov
fs
arpl
push
loopne
or
sti
or
push
mov
dec
mov
or
push
xchg
icebp
mov
rcl
lret
shlb
dec
push
repz
cmp
cmp
fmull
sub
or
xchg
cmpsl
roll
sub
inc
movsl
insb
dec
test
cld
mov
mov
mov
gs
ret
push
mov
mov
mov
cmp
mov
in
mov
xor
ljmp
mov
lds
movsl
jno
push
mov
jl
push
imul
mov
jge
pop
ret
pmaddwd
push
ds
clc
push
jo
and
and
loope
pushf
aaa
insl
inc
in
ljmp
movsl
cwtl
sbb
cld
sti
adc
mov
dec
pushf
or
adc
inc
xchg
sbb
mov
ljmp
jp
test
repz
cld
add
jp
data16
ret
jecxz
sbb
fiadds
adc
pop
aad
jno
dec
xchg
cmc
add
inc
cmp
push
mov
rol
iret
or
in
inc
call
push
mov
je
lahf
xchg
fdivr
mov
jb
fs
adc
dec
mov
lea
sbb
in
inc
xchg
daa
lea
std
stos
mov
sahf
xchg
and
and
stos
pop
enter
stos
sbb
pop
dec
xor
fstl
insl
push
sti
outsb
inc
jecxz
out
push
mov
jae
mov
lcall
daa
xor
and
lahf
push
iret
jae
clc
lds
cmpl
ret
insb
jae
sbb
arpl
outsb
xchg
cmpsl
xchg
imul
xchg
xchg
xchg
ficomps
push
jbe
int3
mov
mov
mov
mov
inc
in
xchg
add
inc
xor
pop
lcall
xchg
xchg
aaa
sub
cld
bnd
gs
movsb
popa
add
push
rcl
and
mov
fwait
scas
xorl
mov
pop
jbe
adc
cld
daa
inc
outsl
insl
lcall
orb
and
mov
ret
into
adc
mov
in
sarb
push
je
test
mov
pushf
push
and
scas
and
iret
clc
out
lret
nop
popf
xor
xchg
push
sbb
xchg
out
pushf
call
push
icebp
lret
xchg
xor
aaa
int3
cmp
sbb
sbb
adc
push
xchg
movsb
mov
push
mov
sub
or
push
mov
insb
jmp
adc
sub
sbb
inc
repnz
enter
mov
jmp
inc
sub
stos
pop
dec
sbb
dec
cmp
mov
pop
mov
hlt
push
lret
clc
sahf
je
aad
movsb
xchg
inc
aam
or
push
xchg
shll
or
iret
sub
mov
gs
and
inc
addl
inc
mov
sti
scas
or
jge
sti
sbb
mov
add
pop
ret
sbb
add
add
hlt
mov
lcall
pop
pop
ss
arpl
repnz
push
xor
icebp
addb
aas
in
mov
pop
xchg
xchg
insl
push
mov
idivl
cmp
out
or
fcomip
nop
mov
shll
addr16
test
jae,pn
jmp
loopne
jl
ss
push
movsb
mov
mov
popf
es
outsb
mov
jne
dec
subl
daa
pop
rcrb
jmp
dec
adc
out
dec
cmp
testl
movsl
cli
repz
jne
cmpsb
jne
insl
daa
lock
pop
jle
jmp
add
out
mov
in
pop
jecxz
add
sub
fstpt
pop
jne
repz
or
in
xor
xor
cmc
clc
cmpb
and
and
sub
mov
aad
jmp
sarb
mov
lds
inc
sub
sub
push
mov
jmp
mov
dec
cmp
mov
aaa
loope
into
imul
stc
lods
dec
xchg
mov
and
push
xchg
je
cs
mov
xor
jae
aas
scas
sahf
lea
lcall
cli
repz
cmpsl
test
mov
xor
movsl
sar
outsb
and
add
ret
lods
mov
xor
out
add
imul
xchg
stc
sub
xchg
xor
sar
test
imul
or
aas
add
lahf
imul
mov
jno
sub
mov
mov
loop
sbb
hlt
das
sub
clc
cmp
jg
faddl
test
dec
fwait
inc
push
sbb
cwtl
push
rcr
xor
mov
mov
adc
push
fidivrs
mov
fs
fs
xor
sub
push
lock
jnp
sub
ret
sarb
inc
inc
loop
inc
sub
loop
cmc
mov
sub
pushf
and
sbb
pop
cli
mov
in
inc
sbb
add
sar
insb
int
xrelease
mov
lds
cmp
cli
fpatan
lcall
scas
adc
cmp
pop
push
cmp
ret
push
pusha
dec
in
cmp
xchg
stc
or
fimull
mov
dec
scas
iret
loopne
ret
pop
jb
pop
mov
pop
adc
out
incb
sub
push
xchg
mov
cmp
lahf
push
pop
dec
into
jecxz
xor
jae
push
sbb
dec
cli
cmp
call
test
push
pop
hlt
dec
cmpxchg
ss
cltd
inc
or
call
cmpb
jno
mov
lock
push
aas
xor
inc
jl
or
adc
aam
fldl
pop
mov
pusha
push
mov
cmp
sahf
addr16
shrb
test
push
or
ret
sbb
dec
movsl
in
rclb
and
inc
out
jl
sarb
xor
lock
mov
enter
daa
mulb
cmp
loope
int3
mov
in
lcall
mov
mov
lods
xor
adc
mov
insl
mov
ss
loope
push
jae
ror
xorb
xchg
mov
insl
mov
repz
pop
cmpsb
or
mov
movsb
xchg
jno
pop
mov
aam
jne
andb
mov
icebp
sub
jle
mov
shl
xorb
int3
mov
xlat
sub
scas
mov
pop
fldenv
adc
in
negl
mov
inc
repnz
sub
fstl
mov
jle
js
sbb
pop
push
arpl
inc
cwtl
pop
sbb
xor
mov
lcall
ja
flds
rorl
pop
aas
fdivrl
cmp
out
mov
repz
jne
orl
add
cwtl
lcall
shl
sti
in
jp
repz
lret
push
xor
aaa
push
xchg
mov
ja
comiss
add
incb
jecxz
test
ja
test
cmc
dec
lret
mov
mov
xor
adc
add
jnp
jbe
push
cmpsb
iret
daa
sbb
pushf
in
ja
cld
iret
xchg
mov
roll
out
and
xor
out
fisubl
inc
adcb
adc
sbb
in
inc
sub
jb
cmp
outsb
push
mov
sbb
fwait
out
icebp
mov
fdivrl
jl
or
cmpsl
cmp
mov
mov
cmpsb
mov
loopne
add
flds
jne
arpl
dec
scas
mov
aas
push
inc
dec
enter
fnsave
fstp
add
cmp
inc
fcmovne
fwait
sub
mov
mov
or
cmc
cmp
mov
push
sbb
test
dec
add
cmp
mov
call
pop
or
pusha
or
movsb
adc
inc
mov
mov
xor
call
inc
das
push
xlat
cmp
cmp
pop
aas
test
lods
push
in
fcoml
adc
bound
or
pop
mov
or
in
loop
add
addr16
lret
push
cmp
xor
shr
cmpsb
xchg
adc
lea
int3
nop
pop
mov
bound
enter
ret
popf
inc
adc
jne
test
cltd
dec
fwait
mov
sub
aaa
push
cmp
add
xchg
push
mov
rcrb
mov
dec
repz
popf
cmp
add
jg
adc
rorb
into
xchg
adc
pushf
scas
ljmp
not
sbbl
pop
xor
mov
shll
mov
xchg
mov
xchg
push
mov
jmp
nop
lea
pop
cwtl
stos
push
pop
pusha
dec
xchg
mov
imul
cmp
dec
sbb
push
lahf
xor
mov
sahf
ljmp
mov
jns
mov
cmp
stc
or
rcl
jl
lock
jl
mov
fiaddl
lock
xor
xchg
aas
mov
mov
imul
in
cli
mov
push
push
lret
add
push
lahf
or
in
cmp
enter
push
lcall
int3
push
lahf
bound
popf
mov
add
cmpsl
pop
push
shll
mov
or
cmp
mov
je
aas
cmp
dec
mov
stos
mov
lahf
mov
int3
mov
cli
outsl
ret
ss
adc
inc
pusha
movsl
mov
lret
movsb
lcall
movsb
int
jg
dec
adc
ss
sub
or
xchg
aas
sbb
mov
fidivrs
inc
add
mov
rorl
pop
or
jo
iret
dec
add
jne
std
push
rol
scas
adc
mov
cmpsl
pop
xorb
nop
lahf
cli
loope
rcll
stos
jb
adc
pushf
iret
es
pop
lods
xor
in
add
das
fldenv
popa
add
mov
sbb
notl
cmpsl
and
xchg
inc
adc
fwait
lods
jne
pop
lahf
out
add
sub
mov
push
mov
stos
cmp
daa
jns
scas
outsl
imul
scas
push
pushf
or
hlt
enter
sbb
loop
lods
push
pop
sub
push
inc
sub
scas
shlb
scas
mov
testl
nop
xor
mov
mov
jp
jl
sahf
je
cld
mov
jns
addr16
mov
inc
sbbb
push
sti
mov
test
scas
cwtl
test
insb
fwait
push
inc
lret
lock
add
sub
push
add
cmpsb
mov
pop
in
dec
outsl
int
or
fbld
stc
cmp
adcl
std
insl
es
cmc
test
jp
enter
and
jp
jns
xlat
sub
fistpl
dec
cmpsl
mov
lods
dec
aas
in
jl
shrl
into
stos
mov
add
add
mov
popa
imul
ds
cmp
xchg
adc
rcr
mov
cmp
mov
das
jnp
icebp
imul
sbb
mov
mov
in
and
mov
and
and
cmp
pop
and
imul
les
addr16
stc
jmp
xchg
cltd
fistpll
cs
js
cmpsb
xchg
mov
push
jmp
or
cltd
jo
inc
sbb
movsb
into
jge
or
imul
mov
jle
cmpl
js
jo
hlt
shll
push
push
popa
iret
sub
shlb
sub
mov
jg
cli
xchg
adc
mov
mov
clc
fsts
mov
sbbb
push
outsl
push
xchg
pop
arpl
loopne
in
mov
fnsave
jl
test
jecxz
test
mov
jmp
lods
push
sbb
add
loope
add
inc
fsubl
pop
loopne
nop
mov
fldenv
ret
out
mov
inc
ret
sbb
fdivl
xchg
sbb
in
pop
push
imul
mov
movsl
and
hlt
sub
loop
scas
cmp
push
idivb
pushf
in
xchg
js
mov
push
adc
dec
loop
inc
loope
adc
fsubrs
cmpsl
pop
cmp
sbb
cmp
les
mov
gs
imul
or
fisubrl
xchg
ret
or
iret
mov
mov
enter
mulb
fwait
ja
dec
out
into
jne
add
bound
notb
stos
pop
jecxz
cmp
xlat
ret
push
loop
xchg
xor
cli
mov
testl
mov
sub
sti
inc
mov
pushf
add
jnp
mov
pop
push
mov
inc
inc
mov
mov
lock
inc
inc
adc
jecxz
mov
addr16
jmp
cld
ja
pop
pop
sbb
cmp
inc
pop
push
jb
push
xchg
popl
pop
pop
ret
imul
inc
inc
aas
xchg
sbb
movsb
mov
pop
xor
pop
pop
in
scas
addr16
lods
les
mov
or
pop
movsl
push
dec
lahf
pop
dec
shrl
push
cmpsl
cmpsb
das
mov
jb
xor
or
and
lcall
repnz
ret
sahf
xchg
xchg
pusha
js
jp
hlt
push
imul
sub
pop
sbb
push
jecxz
mov
shlb
jne
or
sbb
push
add
cmp
add
das
xor
add
sbb
sub
adc
sub
xor
xchg
movsb
loop
hlt
incl
stos
xchg
xor
dec
push
mov
mov
aad
mov
pop
lds
mov
mov
jns
mov
jecxz
dec
sbb
std
and
pusha
dec
fsubl
xchg
vmovss
pop
push
in
in
sar
xchg
rol
jmp
cs
mov
cli
sub
aam
pop
cmp
sub
mov
inc
adc
icebp
push
mov
jg
xor
shl
test
cwtl
js
sbb
mov
lahf
jl
jge
cs
fbld
scas
push
add
mov
aam
xchg
xor
add
mov
add
inc
js
mov
mov
mov
and
loop
inc
inc
scas
adc
test
enter
out
enter
loopne
psllq
ljmp
aam
pop
cltd
insb
daa
mov
push
mov
fcomi
sub
add
rolb
sub
sub
cmc
xor
cmpsl
xchg
cs
push
gs
adc
and
inc
outsb
jno
cmp
syscall
insb
jmp
xchg
jl
or
mov
cmp
xor
or
cld
push
xor
adc
add
int3
xor
es
xchg
mov
push
imulb
push
stos
cmc
push
gs
mul
inc
xor
sahf
sbb
mov
adc
cli
mov
out
fildl
jp
mov
ficoml
inc
fwait
pop
cmp
cmp
add
jns
das
mov
sbb
rcl
fidivl
pop
mov
iret
fwait
sub
inc
pop
lahf
jp
mov
adc
xchg
pop
scas
inc
sbb
and
insb
add
psubusb
push
xor
dec
mov
xchg
pop
mov
popf
aas
pop
in
es
push
daa
mov
popf
inc
xor
lods
mov
xchg
out
insl
jne
fildl
mov
lods
dec
and
mov
mov
push
jge
push
jl
imul
in
or
scas
int3
enter
pop
notl
sbb
icebp
jb
or
cmp
cmp
xchg
roll
das
pop
sbb
mov
adc
lret
mov
mov
mov
add
ss
sbb
lcall
sahf
jmp
cli
push
or
fwait
stos
aam
xchg
pop
stos
xorl
dec
ds
sbb
cmpsb
mov
dec
mov
lock
sbb
adc
loope
pop
jo
dec
cld
fsubrs
push
sbb
in
inc
add
sub
sbb
push
aad
aas
and
pop
dec
pop
mov
popa
fiadds
andl
cmp
pop
faddl
mov
mov
dec
cld
aad
int
arpl
scas
mov
inc
adc
cmc
in
mov
push
rclb
daa
mov
fiadds
adc
push
stos
enter
dec
mov
dec
pop
sbb
pop
push
lock
inc
sarl
repz
addr16
mov
sbb
lret
adc
test
push
dec
mov
push
jnp
mov
into
fwait
ret
mov
pushf
lcall
icebp
sbb
inc
dec
shll
inc
dec
jg
jge
data16
enter
adc
inc
popf
scas
push
out
push
lret
xchg
ret
and
or
fiaddl
xchg
insb
movsb
mov
ds
pop
add
xor
adc
mov
fmuls
pushf
fisubrs
adcl
lret
lods
scas
insb
xchg
xor
inc
cltd
shlb
cmpsb
out
js
cmp
js
popf
lods
lods
pop
fcomi
pop
insl
sbb
fwait
xchg
out
jns
outsb
dec
std
mov
sub
fstpl
stos
lea
mov
xor
adc
subb
adc
mov
lret
add
push
outsb
add
dec
cmpb
subl
adc
clc
mov
aad
dec
cmp
push
in
inc
lods
push
mov
std
ret
pop
out
test
fdivl
dec
dec
add
addr16
or
and
int3
lret
adc
pop
or
adc
push
lahf
mov
mov
lds
out
ljmp
dec
sub
pop
fmuls
rol
sub
mov
hlt
mov
aaa
rol
mov
int
pop
mov
mov
cmpl
ds
fs
push
add
push
mov
sub
mov
mov
ljmp
sbb
pop
ss
mov
sbb
mov
pop
ja
sub
inc
out
jge
dec
and
dec
out
adc
and
test
movsb
out
lret
xchg
dec
jne
or
pop
add
mov
pop
xlat
and
lods
ljmp
mov
ljmp
fsub
xor
in
rcr
mov
js
lods
and
nop/reserved
sbbl
mov
ja
jne
jnp
std
jno
adc
stos
rcrl
lahf
xor
mov
fistpl
aad
stos
dec
pop
push
fs
cmp
add
ss
pop
pop
dec
lret
addr16
cmpsb
adc
mov
sbb
add
xor
fcmovnbe
ret
xchg
push
sbb
fwait
aad
rcrb
fstp
inc
lahf
fwait
leave
jle
cs
movsl
lret
data16
insl
pop
and
mov
ret
leave
xor
shlb
jns
sbb
mov
cltd
je
stos
ret
clc
cltd
outsb
xchg
test
imull
insl
es
mov
sbb
movsl
mov
fiadds
adc
rolb
and
aas
or
xchg
fst
and
or
mov
pop
ds
out
lea
ret
loopne
cs
sbb
inc
shlb
inc
pushf
popa
loop
and
nop
or
iret
ret
and
cmp
sarb
ret
mov
out
sbb
adc
xor
daa
loopne
int
pop
jno
jno
ss
mov
push
or
xchg
push
out
pop
cli
inc
aaa
pushf
in
stc
call
push
fwait
xchg
dec
and
adc
cmp
jecxz
mov
sbbb
std
test
xchg
dec
es
cmp
inc
pushf
inc
test
jge
xor
insl
add
ja
jl
xchg
pop
sbb
jne
xor
inc
xor
sub
outsb
sbb
inc
xchg
sbb
sbb
xchg
fmull
je
and
jnp
push
les
push
cmc
inc
pop
lods
pop
fldl
mov
lcall
xor
mov
iret
add
pusha
cmpsb
sub
orl
icebp
cmpl
sub
int
mov
mov
push
jge
push
mov
jl
fsubrs
loop
pop
pop
rcr
xchg
push
mov
je
aaa
xlat
pop
jmp
aaa
fstps
and
aad
nop
sub
cltd
in
sbb
insb
add
adc
cltd
mov
mov
add
xor
mov
dec
dec
jecxz
mov
into
and
fs
fsubr
lret
nop
and
add
add
sbb
mov
push
stos
pop
repz
push
loopne
imul
scas
push
pmaxsw
fiaddl
push
scas
dec
xor
iret
push
out
pop
aas
add
hlt
or
imul
pop
test
sub
cmp
jb
shrl
in
pop
arpl
xlat
int
stos
das
rcl
dec
jnp
jmp
movsl
pushl
jge
pop
movaps
xor
movsl
divl
iret
inc
test
mov
ljmp
sub
fwait
jbe
push
fisttpl
or
es
push
jns
inc
cmp
sub
inc
push
notl
inc
sub
cmpb
and
sbb
outsl
into
pop
sub
push
sbb
sub
jb
mov
xor
mov
and
push
mov
add
repnz
xor
stc
outsb
pop
jns
cmp
testl
or
mov
sub
jle
mov
fadds
mov
das
test
jle
cmpsl
push
outsl
popa
mov
or
pop
mov
aam
leave
test
mov
and
sub
sub
imul
data16
into
test
aad
js
mov
cmp
push
stos
sbb
cwtl
push
iret
nop
xor
xor
or
xor
je
push
dec
imul
orl
mov
loop
jo
push
inc
fs
scas
ficoms
mov
fs
push
dec
pop
lcall
mov
mov
lcall
test
sbb
test
bound
mov
add
jae
cli
inc
sbb
push
movsl
adc
pop
or
jle
sub
pop
sub
inc
outsb
in
test
inc
add
shrl
mov
into
pop
mov
subb
out
pop
dec
imul
dec
or
inc
push
lea
mov
pop
add
jg
std
aas
jmp
adc
dec
mov
push
inc
mov
out
and
mov
xchg
loope
sbbl
fists
mov
out
fimuls
xchg
icebp
icebp
xor
cld
inc
shrb
psrlq
or
adc
dec
mov
add
or
mov
mov
int
dec
sub
and
stos
test
aas
je
mov
or
sbb
pop
je
push
fistpll
stos
ret
jecxz
sub
pop
mov
jecxz
xor
sbb
jge
mov
xor
dec
bound
push
mov
adc
std
pushf
xchg
call
ds
and
jmp
fnstenv
jb
and
push
jecxz
hlt
rcrl
cli
pop
xorb
movsl
dec
pop
cmp
add
sbb
or
test
pusha
push
add
subl
xchg
sub
in
xchg
cmp
inc
in
pop
or
aad
cltd
je
les
loopne
in
dec
les
sbb
mov
aad
mov
xchg
repnz
push
mov
rorl
sbb
sbb
inc
xchg
cmp
fimuls
cmp
leave
mov
loop
gs
cmc
sub
and
test
inc
dec
aam
jno
mov
daa
jno
mov
or
sub
rcr
ds
rep
arpl
pop
movsb
cmpsb
repz
pushl
test
fistpl
fistpll
fsubl
cmp
adc
or
xor
test
cmp
push
cmp
sbb
cmp
mov
cld
repnz
sahf
das
je
orps
push
pushl
inc
testl
stos
out
sub
sahf
push
lods
loopne
xchg
xchg
mov
mov
jae
sbb
mov
mov
loop
fcmove
pop
adc
pop
enter
cmpb
add
movsl
jno
jae
imul
stos
cli
mull
fstps
mov
inc
fcmovbe
ja
orb
pop
jb
mov
fs
xchg
mov
popf
hlt
jl
mov
into
loopne
push
ljmp
push
js
imul
pop
jns,pn
or
aam
shrb
daa
cmpsb
jmp
cmc
lret
out
and
js
fcomi
icebp
jg
mov
sahf
lahf
ja
mov
or
int
xor
pop
movsl
pusha
int3
mov
jle
es
inc
adc
insl
out
xchg
bound
cmp
loope
scas
scas
outsl
jg
pop
lods
xor
xchg
les
in
je
stc
and
push
cmp
int3
adc
xchg
add
mov
and
add
mov
dec
dec
sub
dec
faddl
jp
inc
pop
add
pop
test
xchg
and
cmp
pusha
aad
js
sbb
jp
push
inc
xor
ss
push
sbb
je
xchg
cmpsb
lea
ficomps
pop
push
dec
shrl
shll
loopne
rorl
testl
sbb
aaa
mov
pop
or
les
or
mov
dec
insb
xor
cmp
fcos
test
cwtl
insb
stc
adc
jnp
notl
push
sbb
out
fstpl
adc
mov
add
pop
aaa
ret
push
leave
mov
and
mov
mov
inc
xchg
test
fldcw
xchg
cmpsl
jmp
add
xor
xchg
stos
es
pushf
push
bswap
std
imul
push
rolb
xchg
fwait
pop
and
add
jl,pn
push
rcrb
dec
push
mov
out
repnz
sbb
push
movb
lret
loop
in
adc
ficomps
sbb
bound
push
xor
sub
xchg
xor
outsl
jne
dec
test
cmp
aaa
and
ss
ds
mov
pop
movsl
pop
xlat
adc
pusha
iret
mov
jp
dec
ret
inc
or
cmpsb
lahf
test
ds
sbb
cli
xchg
inc
adc
mov
or
mov
and
lea
or
mov
popf
jnp
jae
aad
mov
jmp
pop
bound
mov
cltd
and
mov
xor
dec
fs
add
xchg
mov
je
aas
xor
xlat
cmp
adc
cmp
sbb
pusha
in
cmpsb
and
pusha
in
scas
push
insl
mov
cmpsl
aaa
xlat
adc
sub
push
adc
pop
jp
loop
movsb
popf
xor
daa
add
inc
jnp
jnp
fadds
in
out
add
subb
imul
repnz
jae
cltd
pop
mov
push
in
mov
std
test
fwait
dec
js
push
mov
sub
cmp
or
and
push
daa
int
call
dec
cmp
aaa
adc
cmp
adc
fdivrs
cmp
mov
shr
mov
add
jge
lahf
xor
mov
jo
and
repnz
loopne
xchg
std
and
sub
sub
mov
jg
lock
fidivrs
push
leave
push
jg
cmp
push
in
jb
xchg
cmp
mov
xor
stos
leave
icebp
jp
ret
push
mov
push
adc
cmpsl
repz
jno
cwtl
inc
or
int3
jnp
push
mov
cs
or
shrb
sarl
jg
mov
or
lock
or
rol
std
dec
fdivrl
movb
xchg
xchg
aaa
stc
int3
xchg
stos
xor
js
das
or
mov
mov
out
push
mov
inc
mov
jp
xchg
nop
subl
mov
mov
cmp
or
adc
pop
sub
int
push
cmp
jne
aaa
xor
loop
add
or
xor
int
ret
xchg
jecxz
add
add
mov
outsb
mov
mov
mov
outsb
imul
insb
nop
xchg
adc
adc
push
xchg
push
mov
ficoms
pop
pop
lock
and
dec
cld
pop
add
jae
je
lret
mov
inc
es
rcr
sbb
aaa
pop
lahf
clc
arpl
add
mov
pop
and
push
dec
mov
loope
loope
jb
inc
cld
sbb
sti
stos
bound
adc
cmc
add
cli
inc
leave
pop
inc
andb
sahf
repnz
stos
mov
ljmp
pop
loope
int3
add
lods
lods
xchg
inc
stc
ficomps
mov
pop
cld
nop
sub
adc
jmp
pop
jne
es
mov
adc
mov
xchg
or
jl
out
lea
nop
cmp
xchg
loop
popa
lods
stc
test
adc
subb
cs
cs
mov
xchg
int3
andl
outsl
pop
mov
mov
push
sbb
mov
in
repz
push
into
pop
ds
cmp
iret
sahf
in
add
or
push
shr
pop
adc
mov
xor
xor
fisubl
and
addl
cmp
outsb
repnz
ljmp
ljmp
ret
jecxz
sahf
jmp
mov
in
mov
add
sbbb
xor
rcr
xchg
out
sbb
push
and
lods
cmpsl
lock
sarb
lahf
enter
dec
pop
inc
and
sub
into
dec
movsb
xchg
in
mov
ja
inc
movsb
movsl
mov
shll
pop
sahf
lds
push
stos
push
jae
inc
fbld
sbb
lds
sub
lret
mov
ss
inc
iret
xor
lret
fildl
rcll
out
out
orb
adc
ljmp
pop
dec
ret
hlt
test
dec
aaa
and
sub
jne
add
jb
rcr
loop
pusha
divl
clc
inc
sub
dec
iret
mov
repnz
jb
rorb
cmp
xchg
push
in
loope
imul
sbb
call
pop
lock
pop
inc
mov
ds
jg
or
ss
sarl
pop
push
push
sub
sarb
or
mov
sbb
adc
cmp
insl
inc
insb
cmc
jg
push
fidivrl
sub
fdivrp
test
outsl
mov
and
sbb
aam
and
jno
std
ss
xchg
mov
out
and
addr16
xlat
and
cld
adcb
xchg
out
cli
cs
orb
jmp
aad
cmp
hlt
iret
and
fnstenvs
popf
jp
sub
push
jne
jle
stos
lcall
int3
sub
mov
hlt
adc
mov
jae
fildll
sub
int3
sbb
add
insb
push
mov
fnstenv
xchg
xchg
and
ja
xchg
in
mov
gs
imul
push
pop
sti
xor
cmpsb
jnp
adc
and
hlt
fs
push
jmp
loope
ja
shl
ret
fcmovu
jl
ss
andb
fisubl
cmp
pop
adc
mov
sbb
lea
add
pop
add
fcmovnu
cmp
push
add
pop
outsl
inc
aas
cwtl
jmp
lahf
dec
sbb
cmp
lret
rcrl
or
fstl
push
jg
mov
xorb
xor
jecxz
sbbb
loopne
mov
cmp
fwait
or
push
test
push
dec
adc
outsl
mov
lods
xor
sub
aam
or
das
and
xchg
jae
daa
mov
mov
jns
stos
mov
jbe
push
outsl
cmp
fsubr
incb
add
lret
inc
xor
jmp
movsl
dec
call
in
and
aam
sti
and
cli
pop
arpl
dec
or
out
sub
out
clc
cli
popa
xlat
pop
and
ror
outsb
jb
pop
stos
cmp
add
neg
mov
and
mov
dec
pop
in
repnz
stc
mov
cmp
es
inc
daa
out
mov
aad
test
push
xchg
push
dec
nop
int
in
mov
cld
push
and
leave
sub
fs
outsb
iret
or
xchg
icebp
sbb
and
dec
addl
out
and
push
jnp
std
ret
idivb
sbb
inc
pop
repnz
shrl
and
or
imul
rorl
sbb
add
sub
test
outsb
cmp
enter
lahf
pusha
mov
fcomp
cli
inc
dec
mov
es
cs
into
test
insb
jae
inc
inc
repnz
lret
sub
dec
shrb
cmp
rorb
sbb
push
and
cmp
xchg
lds
leave
lods
dec
out
pop
sbb
pop
mov
cmpsl
in
popf
cmp
pop
sbb
cmp
ljmp
nop
lcall
sarl
push
mov
ja
rolb
mov
push
insb
add
negb
cmp
daa
int3
add
imul
lock
fsubr
lods
sbb
mov
test
shr
pop
push
inc
xchg
loopne
es
add
add
and
enter
sub
push
or
dec
inc
push
mov
push
rcl
pushf
xchg
push
inc
mov
mov
xchg
daa
pop
clc
xchg
dec
fmull
or
fsubl
xchg
jle
cmp
lret
jl
jnp
push
fs
push
int
decl
test
arpl
mov
mov
popa
subl
int
mov
daa
pop
mov
stos
in
xor
push
mov
icebp
or
adc
mov
cmp
cmpsl
stos
popa
sbb
ja
push
shl
sbb
xchg
jp
push
jo
dec
imul
push
sub
mov
sbb
adc
xchg
sbb
xchg
std
pop
push
or
pushw
shll
inc
popa
call
push
add
fidivrs
xchg
xor
js
push
sbb
lahf
aas
mov
lods
dec
rcrb
js
adc
mov
sbbb
ret
or
push
cbtw
push
push
push
mov
pop
xchg
adc
hlt
dec
jbe
jno
rcr
sbb
std
lock
pop
mov
pusha
xor
inc
xor
inc
jb
inc
xchg
jge
test
in
and
xor
or
addl
push
sub
dec
and
and
mov
call
sar
test
ja
or
out
mov
dec
dec
xchg
outsb
xor
cmc
std
inc
sub
mov
push
pop
fwait
gs
testb
jbe
jmp
push
stos
xchg
inc
pushf
mov
cwtl
fisubs
mov
rorl
mov
mov
mov
or
inc
aam
fcomps
jo
out
loopne
dec
mov
leave
aaa
mov
out
adc
pop
scas
les
jecxz
or
ficoms
add
pop
pop
loope
arpl
inc
lret
insl
ret
jb
dec
fnsave
jge
mov
test
inc
imul
inc
or
sarb
xchg
gs
jno
outsl
nop
cwtl
xchg
sub
in
or
and
popf
mov
dec
inc
sbb
dec
xchg
scas
mov
icebp
cli
arpl
subb
adc
fwait
dec
mov
int
das
out
jecxz
cld
sub
repz
mov
cmp
xor
enter
inc
xrelease
out
daa
hlt
inc
push
addr16
outsl
dec
lret
sub
cmp
add
sub
sbb
rolb
jmp
gs
into
fcmovnbe
adc
in
push
pop
inc
mov
leave
fstp
dec
cmc
xor
mov
cmp
das
lret
and
dec
loope
push
subb
mov
pop
and
cmpsl
xor
dec
in
jl
dec
roll
test
pop
dec
int
pop
cmpsl
lret
in
xchg
xchg
push
inc
sbb
in
jge
mov
inc
clc
add
in
dec
jp
jne
cmc
cmp
jno
cwtl
pop
jge
cmp
sahf
push
lods
fiaddl
cmp
arpl
int3
mov
xor
dec
in
jle
sub
das
fistpll
mov
test
hlt
std
enter
or
enter
cmc
icebp
rolb
outsl
lods
out
jmp
mov
dec
lcall
mov
pop
sub
aaa
es
mov
negb
negb
call
lahf
in
ja
jbe
or
fisttpl
fildl
lods
incl
and
push
or
js
lock
mov
icebp
lret
xor
out
cs
in
mov
into
cmp
test
and
je
out
dec
das
ret
mov
cmp
stos
xor
xor
jae
mov
pcmpgtd
add
movsb
sub
sub
scas
push
jmp
jb
adc
shrl
inc
pusha
sbb
rcrl
cli
outsb
pusha
lret
push
out
cmc
jp
insb
dec
or
popa
cmp
mov
test
push
aaa
ret
pushf
jmp
int
test
xchg
cltd
mov
jne
inc
stos
pop
adcl
dec
xor
dec
mov
sbb
cmpsb
shlb
or
mov
sbb
mov
dec
mov
pop
cmp
jl
aaa
ret
fistpll
xor
rol
mov
inc
jns
jge
popa
stos
lods
inc
and
jbe
cli
pushf
sahf
sahf
int3
test
inc
ljmp
je
and
push
mov
xor
pop
mov
jmp
out
and
stos
mov
in
out
inc
imul
cli
jo
out
aaa
in
cli
int
mov
out
nop
pop
enter
xchg
hlt
pop
call
flds
in
mov
hlt
fadds
test
imul
sbb
outsb
lods
jmp
xchg
pop
rcrb
jb
fmuls
in
insl
nop
adc
mov
fs
out
dec
push
jns
push
bound
mov
fisttpll
xor
mov
cld
je
mov
out
aaa
sub
push
lcall
jae
cwtl
pop
test
dec
push
jmp
out
jbe
pushf
xchg
test
cltd
adc
lcall
xchg
stc
mov
das
call
cmp
inc
outsl
sbb
push
mov
in
adc
xor
loopne
add
ss
imul
stc
jecxz
dec
mov
lods
aam
jecxz
pop
cmp
out
gs
icebp
fcmovbe
mov
xchg
call
or
imul
or
jb
dec
dec
cmpsb
pop
lret
out
mov
sub
mov
sbb
rcrb
icebp
mov
leave
push
push
sub
lods
adc
cmc
push
imul
repz
enter
add
adc
dec
cld
inc
insl
adc
mov
fidivrl
int3
xchg
scas
sbb
in
mov
lret
mov
inc
xchg
lds
shll
sub
ficoml
add
jge
sbb
popl
mov
mov
inc
daa
mov
into
add
cld
imul
cmp
lock
ret
inc
inc
adc
xlat
jo
pop
andb
inc
arpl
dec
xchg
out
fdivl
add
cmp
pop
adc
mov
stos
push
cli
xchg
sub
das
bound
bound
outsb
outsl
push
stos
pop
sub
adc
test
lock
popf
xchg
mov
insb
ret
sub
aad
pop
adc
das
adc
movsl
pop
sbb
js
xor
idivl
add
aaa
adc
add
mov
jno
fsubrl
aaa
shrb
mov
shr
test
sti
rorl
jge
mov
std
in
aad
lahf
call
cli
sub
cmpsb
mov
sbb
mov
xor
loop
pop
jg
fidivrl
push
ret
mov
cmp
je
xchg
aaa
xor
insb
cltd
dec
cmpsl
mov
xchg
clc
dec
or
lret
mov
mov
sbb
cli
push
mov
push
cli
sbb
lret
lret
mov
cmp
and
sub
mov
sub
and
mov
or
push
add
xchg
lahf
xchg
adc
mov
fimuls
xor
stos
stos
shlb
ret
mov
fldenv
xchg
loopne
div
fimuls
cld
sahf
lds
push
cs
push
mov
mov
out
add
ror
in
and
ficoms
into
stc
in
mov
aaa
les
inc
jecxz
lods
mov
in
fwait
cmp
sbb
out
adc
nop
in
rolb
negl
fdivs
loopne
or
mov
pusha
insb
mov
sbb
inc
cmc
jne
scas
jne
add
popf
jo
push
xor
cmp
xchg
sbb
adc
fidivs
pushf
aam
jecxz
fcoml
ja
inc
in
ret
mov
sbb
scas
add
insl
and
dec
xor
xchg
dec
mov
pop
in
dec
and
rcll
mov
rcrb
orb
scas
add
in
mov
or
repnz
pop
test
push
cmp
jmp
mov
jmp
ret
sbb
pop
jg
out
and
or
jns
por
mov
mov
stos
test
shll
imul
mov
fwait
jmp
add
lods
pop
call
sub
bound
cs
insb
adc
imul
mov
insb
cld
mov
rolb
fldenv
js
lret
dec
repnz
sbb
sbb
adc
clc
jg
xor
lods
insb
jno
std
mov
xor
mov
dec
pop
pop
test
dec
movsl
xor
or
dec
push
sbb
sbb
pop
cmp
insb
bound
fcmove
int3
xchg
lods
enter
cld
add
andl
pop
leave
fcmovbe
es
int3
push
jnp
movsl
out
lock
mov
adc
rolb
lret
mov
pop
jne
push
push
scas
fldl
pop
pushl
adc
cmpsl
adcl
mov
cld
lcall
sbb
ret
mov
adc
lahf
notl
sub
mov
push
add
mov
dec
or
fs
sub
movsl
cmpsb
sub
in
fwait
dec
insl
xchg
inc
fdivs
clc
stc
aas
and
and
dec
dec
push
popf
add
push
inc
mov
imul
es
add
movsb
push
fs
adc
push
push
mov
iret
enter
inc
mov
jnp
mov
icebp
inc
jne
jl
sbb
xor
int
pop
lahf
dec
cmp
jae
fucomip
push
imulb
jae
in
pop
add
roll
test
mov
insb
add
scas
fiaddl
popf
fcmovnu
jg
xor
pop
cs
es
jl
sbb
stos
popf
sbb
adc
rcrl
and
cli
js
shll
das
lret
in
dec
mov
mov
push
mov
sub
xor
sahf
push
cwtl
orb
mov
scas
out
adc
lcall
xor
mov
mov
fistpl
xchg
push
lret
sbb
jg
test
ljmp
pop
jmp
lea
test
es
sbb
or
pop
cmp
adc
xchg
in
rcrb
loop
lock
xchg
sti
add
ja
jno
bound
rorb
cltd
mov
mov
mov
lret
xor
mov
rcll
or
inc
inc
xchg
jbe
mov
test
and
jp
add
jno
cmpl
pop
and
cmp
sarb
xor
jl
test
push
popf
mov
les
fsts
inc
or
pop
xor
cmp
fisubrs
in
jbe
stos
pushf
dec
sub
movlps
sti
repnz
cld
pop
aam
sub
aad
test
xchg
xchg
mov
mov
sub
in
mov
gs
ds
adc
je
mov
inc
inc
insl
xor
enter
sbb
test
loope
push
jnp
std
and
xor
cmp
lea
iret
in
addr16
cmp
pop
mov
ljmp
mov
loope
mov
dec
stc
shrl
push
and
lret
pop
adc
in
fwait
stos
scas
jmp
imul
xor
dec
or
push
lds
lock
rcrl
rcl
out
push
insl
jle
movsl
hlt
fiaddl
jmp
push
out
cmpsb
push
push
cld
adc
cld
ret
pop
sub
frstor
sub
mov
and
loope
push
lcall
repz
fwait
adcb
lcall
fdivrs
gs
repz
pushf
xor
das
loop
js
test
in
stos
stos
mov
fdivrs
push
stc
shl
outsb
fimull
sbb
push
lock
mov
inc
repnz
pop
or
cmp
sbb
jmp
cs
or
fwait
not
inc
dec
push
add
fdivl
scas
mov
testl
mov
push
orl
jns
jg
dec
or
jno
ds
xchg
mov
mov
add
lds
icebp
sti
aas
add
insl
fadds
imul
into
bound
pop
test
mov
add
jecxz
jnp
push
and
cmp
add
int
lea
mov
push
jmp
jne
dec
scas
lods
in
inc
js
inc
xchg
push
lret
jb
test
ret
inc
adc
cmp
cmc
jp
mov
aam
loop
jb
cmc
out
out
in
pusha
pop
sahf
jle
std
dec
adcb
mov
lret
adc
pop
lods
and
push
mov
push
popf
xor
mov
sub
xchg
into
imul
push
jo
adc
out
mov
insb
inc
shll
sub
xchg
jbe
or
or
push
testb
sti
xchg
mov
mov
adc
fadds
inc
incl
ret
lds
stos
testb
cmp
xchg
iret
ficoml
or
shlb
xor
test
cmp
mov
adc
mov
cwtl
sar
nop
add
jo
in
xor
xor
daa
loope
push
js
sbb
mov
dec
std
mov
cltd
push
jmp
mov
cmp
fwait
lods
mov
fstpl
fcompl
cmp
cmp
lret
add
imul
mov
cmp
xor
jbe
inc
mov
lock
push
and
in
sti
nop
sub
or
mov
sub
setp
push
pop
sub
jecxz
out
jg
ret
jbe
daa
loope
sbb
or
xchg
jl
rcrb
sub
pop
cmpl
push
insl
push
jns
dec
mov
js
sbb
std
daa
and
cmp
and
sub
xor
inc
rcll
in
mov
lea
test
push
cmp
lret
mov
roll
xchg
dec
cld
cli
and
adc
cmp
and
mov
xor
pop
jl
jbe
fsubrp
mov
cmp
push
stc
leave
jns
xchg
fcmovnb
repz
insb
mov
mov
and
xor
sub
popf
mov
in
addr16
movsl
xchg
test
jg
jle
pop
push
sub
filds
fidivrs
jge
jb
sahf
popf
mov
cs
jne
xor
mov
ja
add
or
push
and
adc
aam
popa
cmp
cmp
mov
test
fdivp
pop
lahf
xor
fidivs
dec
mov
mov
aam
popf
rcpps
rol
jle
mov
loope
cltd
push
pop
in
sub
sub
pop
add
and
xorl
sbb
data16
sbb
sbb
lods
or
pop
repz
insb
mov
inc
int
lret
mov
push
inc
add
dec
xchg
sahf
jne
inc
sti
mov
ljmp
xchg
lods
sbb
test
vprotd
movsb
js
xor
add
ds
pop
jle
call
mov
xor
cmc
iretw
gs
xchg
add
out
mov
out
ja
insb
cs
in
into
xchg
sub
imul
fwait
inc
pop
in
stos
inc
lock
and
adc
xlat
push
push
cwtl
jg
jp
xchg
call
xchg
mov
lret
fisttps
fcmovne
int
mov
and
adc
dec
test
cltd
sbb
jge
into
inc
pop
sbb
insl
imul
add
sbb
add
ds
in
imul
hlt
lea
pop
add
mov
mov
popw
loopne
mov
jecxz
jb
cmpsl
xchg
stos
and
outsb
mov
adc
bound
cmp
add
scas
orl
inc
mov
and
jmp
pop
mov
pusha
inc
into
push
jl
jl
mov
cmp
cmpl
in
or
xchg
popf
loop
adc
gs
pop
subb
sbb
xor
add
jg
xorb
stos
cld
jp
ja
mov
shr
lcall
jns
lahf
add
inc
sahf
fldcw
iret
xlat
or
cmp
push
mov
xchg
xchg
cli
pop
mov
icebp
sbb
inc
mov
rcr
dec
iret
mov
adc
mov
repnz
pop
jae
mov
xchg
pop
shrb
stos
push
test
xchg
jns
push
aas
mov
mov
nop
mov
xchg
pop
int3
fstps
out
xchg
cli
iret
mov
pop
and
in
dec
out
ja
stos
in
inc
mov
and
enter
dec
lahf
stos
xor
mov
loop
jne
inc
add
addr16
xor
test
or
and
nop
inc
cs
orl
or
push
les
cs
pop
and
lock
xor
rclb
jbe
mov
xchg
ret
int3
xchg
arpl
pop
dec
pusha
jne
iret
add
in
xchg
and
mov
adc
mov
cwtl
push
mov
and
xchg
fdivr
mov
mov
adc
pop
outsb
cmp
leave
nop
sub
bndldx
addr16
push
bound
cmpsl
das
mov
sarl
movsl
popa
enter
add
xchg
loopne
femms
add
xor
mov
mov
dec
test
add
pop
inc
jle
test
push
push
xor
addl
sbb
bound
sbb
es
aas
jnp
or
stos
int3
shl
sarb
mov
or
jg
js
rorl
adcb
dec
outsl
pop
ja
sub
mov
and
lods
xor
or
sbbb
sub
fsubrs
mov
inc
adc
pop
arpl
xor
jmp
outsl
mov
cmpsl
rol
mov
xor
lret
leave
outsl
mov
mov
mov
xchg
inc
inc
cwtl
xor
rcl
ds
xor
add
aam
mov
out
cld
xor
sub
movsl
jo
xchg
xorl
push
pop
rcl
xchg
add
xchg
cs
mov
sahf
hlt
push
sbb
sbb
data16
add
leave
push
je
dec
xor
popf
in
xor
loop
fcmovnb
into
lret
xchg
mov
sbb
test
outsb
mov
inc
movsb
mov
lret
hlt
mov
xchg
sub
and
mov
mov
das
lcall
mov
xchg
les
cwtl
mov
inc
ss
add
fcoms
scas
loop
out
push
stc
pop
xor
mov
sarl
jae
leave
stc
mov
out
push
ficompl
adc
adc
lods
mov
fsubrs
imul
lea
pop
notb
rep
imul
add
mov
cwtl
sti
jb
adc
add
loopne
xchg
ret
mov
xchg
cmp
lret
lcall
fucomi
push
scas
and
cmpsb
dec
ret
pusha
mov
in
cmpsb
sbb
xor
ficoml
loop
insl
and
fildl
dec
aaa
mov
testl
icebp
jne
and
or
adc
cli
int
cmpb
push
or
insl
xchg
ja
arpl
loope
mov
pop
adc
mov
and
je
aaa
jl
lret
into
addr16
jg
hlt
aas
aas
cmp
mov
dec
jle
jno
sahf
pop
jne
xchg
sbb
mov
jnp
jmp
add
dec
iret
add
inc
mov
mov
js
test
sub
jae
jnp
shll
adc
js
sub
pusha
mov
mov
les
std
sbb
test
mulb
js
int
sub
mov
jle
faddl
mov
dec
cltd
pop
and
stos
test
add
data16
and
sahf
inc
mov
insb
test
push
inc
pushf
add
js,pt
or
push
pextrw
mov
out
popf
mov
xor
call
pop
push
xor
jne
ljmp
mov
add
inc
loope
push
std
ss
push
xchg
fwait
lea
mov
iret
or
mov
jnp
and
mov
out
aam
jne
movsl
in
jo
bsf
int
xor
xchg
adc
inc
mov
cmp
arpl
stc
outsb
mov
fdivrl
inc
int3
out
mov
out
dec
mov
arpl
call
inc
mov
push
fldcw
jae
and
xor
lds
cmp
hlt
test
jns
iret
mov
xchg
mov
lock
outsl
mov
ljmp
movsl
add
adc
jb
in
fidivrs
cmp
mov
dec
xorl
dec
inc
insl
int3
out
jle
mov
mov
and
xor
icebp
movsb
loop
lahf
sub
mov
into
lcall
or
ss
movsl
sahf
mov
inc
rcrl
push
pop
shrl
mov
fcomi
pop
ljmp
mov
sarl
pop
xchg
xlat
lods
mov
bound
repz
jbe
fsts
xchg
insb
loope
mov
enter
test
mov
icebp
cld
cltd
mov
fisubrs
cltd
sbb
iret
dec
xchg
mov
iret
and
fbstp
push
mov
adc
push
std
push
mov
pop
bound
pop
lahf
nop
inc
mov
roll
jbe
test
or
lahf
dec
mov
xchg
test
loopne
lea
orb
mov
cmp
lods
and
sbb
add
pop
jne
iret
insb
movsb
fs
rcll
add
mov
push
or
sub
popf
mov
cmp
dec
repnz
inc
jmp
xchg
jecxz
fistl
stos
pop
jmp
pop
in
and
mov
test
dec
gs
sub
push
orb
push
or
popa
xchg
jbe
sub
inc
or
jmp
cmp
xchg
sbb
fadd
ss
xlat
xchg
outsb
dec
or
mov
sub
js
xchg
fcomi
daa
or
les
dec
clc
fsts
cmp
dec
sbb
call
ret
cmp
and
inc
xchg
cmpsl
dec
fwait
imull
lcall
icebp
fwait
test
inc
lret
shll
dec
es
aaa
andb
inc
idivb
ss
xchg
js
xlat
mov
out
adc
ss
pop
inc
mov
repz
and
push
mov
mov
jo
sbb
push
aam
xor
icebp
icebp
cmp
jb
rorb
vmread
roll
or
xchg
mov
xor
add
or
faddl
jb
stc
xor
data16
pop
test
or
and
cmpsb
jne
leave
inc
in
cltd
in
fcomp
stos
lret
movsb
cld
or
jmp
lods
sub
mov
adc
xor
mov
stos
and
out
out
adc
or
sbb
add
adc
xchg
sub
add
cmpsb
pop
mov
and
or
or
ret
movsl
stc
add
push
imul
insb
pop
out
mov
aam
movsl
ss
cs
xor
hlt
inc
mov
repnz
shlb
hlt
pop
fs
lds
popa
ret
rclb
push
cmp
std
fstl
or
jo,pt
ret
fmull
cli
shr
pop
mov
test
pop
mov
mov
mov
ja
and
data16
cli
mov
shrl
jl
pop
inc
lret
adc
cs
cmp
inc
pop
popf
or
mov
lcall
cmp
sbb
pop
out
dec
inc
adc
jmp
push
mov
sbb
pop
mov
mov
fiaddl
pusha
xor
sub
in
ror
je
fistpll
flds
xchg
js
outsb
cli
pop
pop
mov
sti
or
arpl
add
xchg
repz
xchg
cmc
shlb
push
rorb
js
pop
subl
xchg
sarb
mov
subb
add
xor
pop
sahf
jmp
dec
jmp
lods
ss
clc
popf
cvtpi2ps
iret
push
pop
daa
leave
add
mov
mov
cmpsl
rcrl
sbb
jmp
adc
rcrb
pushf
cwtl
or
sub
ljmp
inc
mov
xchg
je
ds
gs
daa
repz
xchg
mov
jl
mov
fldcw
out
insl
stos
jnp
mov
sarb
dec
fbstp
mov
enter
je
inc
stos
cwtl
mov
inc
push
addps
lret
aam
push
push
enter
xchg
push
pop
addl
push
test
les
inc
sti
dec
pop
mov
shrl
push
and
push
shll
dec
cmp
jle
push
pop
adcb
cltd
sub
adc
cld
dec
adc
dec
cmp
movsl
jno
adc
xor
jecxz
add
ja
out
dec
inc
pop
cmpb
xor
es
imul
in
push
cmp
and
jns
ja
lea
mov
inc
sbbb
jle
jbe
repnz
sti
mov
bnd
xchg
cmc
push
mov
aam
inc
pop
hlt
mov
inc
sarl
adcb
add
mov
cmpsb
mov
pop
packssdw
jns
jb
pop
negb
xchg
push
cwtl
add
into
add
mov
dec
cmp
int3
mov
pop
aas
inc
enter
sahf
fwait
bswap
pop
rorb
lds
pop
scas
gs
xchg
data16
js
pop
mov
addr16
xor
jb
jmp
push
jnp
xchg
sti
sub
jmp
jb
adc
into
dec
mov
enter
mov
mov
or
out
shrb
mov
lret
adcb
mov
inc
aas
sub
aad
insl
pop
mov
push
mov
mov
jmp
mov
aas
out
cli
movsb
rolb
pusha
ds
xchg
fisubrs
enter
lods
loope
inc
jb
or
sbb
das
repz
cmpl
fs
nop
test
test
std
jecxz
push
enter
test
xor
das
mov
inc
idivl
sub
xchg
and
xor
pushl
pushf
insb
out
cld
jmp
xchg
js
gs
jge
lret
jmp
cld
xlat
dec
sub
fsubrs
loop
dec
repnz
sahf
mov
cmp
and
cmpsb
mov
cmp
adc
imul
mov
sub
pop
call
int
leave
out
leave
pop
dec
je
jae
aad
adc
jmp
mov
addr16
jnp
cmp
call
inc
imul
or
xor
pop
aaa
ret
lret
adc
sub
xchg
aam
insb
xor
lret
fnstenv
ss
int
in
movsb
jno
outsl
lret
lret
rclb
or
jmp
call
or
dec
add
sbb
mov
fidivl
stos
stos
aaa
inc
adc
popa
inc
pop
loope
xor
push
out
mov
xchg
sub
sbb
mov
mov
scas
jne
sti
popa
stc
xchg
and
test
push
xchg
scas
es
or
lret
jle
in
mov
jne
jno
insb
ficompl
adc
pop
bound
mov
inc
loop
dec
or
addr16
cld
imul
insl
fincstp
and
rcrb
add
add
add
cmpsb
mov
stc
test
add
hlt
cmpsb
ficoms
mov
dec
loope
or
cmp
pop
jg
pop
imul
or
scas
mov
xor
pop
adc
xor
adc
cmp
pop
imul
cmp
je
clc
imul
addr16
jbe
jo
mov
adc
sub
push
add
inc
push
inc
addl
aas
out
pop
sbb
and
cmpsb
xchg
lock
je
ret
cmp
cmc
and
push
mov
aad
pop
sbb
cmp
in
xchg
xlat
push
pop
or
pop
xchg
mov
sbb
inc
pop
repnz
out
lcall
iret
xchg
lods
push
lods
add
mov
add
adc
or
pusha
mov
mov
out
bnd
xor
mov
ljmp
repnz
xchg
lahf
jle
fisttpl
cs
lret
mov
mov
je
dec
push
sahf
jl
scas
mov
jecxz
push
mov
nop
xlat
jge
push
ds
pop
std
loope
and
and
xor
repnz
cmp
mov
je
add
into
arpl
jnp
xchg
dec
arpl
jbe
mov
sbb
jae
xor
scas
adc
and
and
imul
leave
lret
ds
movsl
ret
fnstenv
movsb
cmc
xchg
xchg
std
mov
cmp
arpl
loope
and
ret
pusha
xor
jge
movsb
ds
push
pop
gs
xor
add
xor
xchg
enter
mov
jb
in
xor
pop
jno
or
jne
std
mov
fwait
clc
push
mov
and
test
insb
fnstenv
add
ljmp
push
lea
inc
test
and
addr16
jecxz
insb
or
pop
push
movsl
mov
pop
ja
int
ficompl
inc
mov
jo
jecxz
jmp
mov
repz
call
test
push
jmp
jmp
mov
ljmp
jmp
addr16
lods
rorb
dec
arpl
das
dec
sub
repnz
fimull
stos
and
cwtl
xorb
push
jle
scas
or
and
mov
scas
mov
imul
sub
int3
cwtl
push
inc
filds
add
stc
in
inc
jae
scas
mov
cmp
mov
xchg
mov
lcall
movsb
mov
dec
push
inc
and
sub
push
inc
or
sub
and
jecxz
stos
cmp
inc
imul
mov
ret
dec
out
jns
mov
jp
adc
push
test
adc
add
jo
jae
lret
cmc
mov
inc
cmpsb
mov
lods
push
sti
test
cmp
mov
js
movsb
xor
inc
ficomps
or
mov
stc
popa
or
adc
push
lret
scas
or
ret
scas
mov
lret
inc
shll
outsl
lock
mov
mov
in
sarb
lods
xlat
inc
aas
nop
inc
subl
dec
mov
cmp
push
lret
fbstp
xor
inc
jae
push
fstpl
add
sub
or
push
adc
and
adc
mov
fsubrl
hlt
fs
rcl
cmpsl
shrb
push
cld
or
in
arpl
or
gs
cmpsl
stc
and
pop
cltd
pop
mov
or
dec
sbb
inc
loopne
notb
mov
adc
mov
mov
dec
pushf
xor
je
lods
mov
idivl
mov
testb
pop
sbb
push
mov
cmp
cmp
addl
mov
pop
pusha
adc
xchg
mov
ret
pop
imul
imul
scas
shll
or
sub
ja
cmpsb
mov
xchg
fimull
mov
jne
push
add
sub
sbb
aad
leave
dec
cmp
xlat
testb
imulb
add
dec
icebp
adc
lods
pop
inc
arpl
test
mov
sub
jecxz
pop
or
mov
sub
loopne
ja
push
mov
sti
cmp
clc
mov
rorl
loopne
roll
cmpl
leave
dec
fs
push
scas
cmp
cmp
jne
addr16
jp
jbe
mov
dec
sbb
frstor
shr
push
movsl
mov
adc
iret
sahf
aas
into
jbe
adc
and
ja
cmp
rcll
add
out
jmp
js
push
aam
aas
push
mov
xor
xchg
xchg
test
push
aad
stos
xor
dec
xchg
add
cmpsl
jns
xchg
xchg
fcmovu
mov
loope
lahf
dec
mov
fcoml
fsub
shll
imul
xchg
mov
sub
mov
add
add
lods
dec
inc
dec
inc
add
cmp
xchg
insl
add
or
faddl
jge
xor
push
lock
sti
mov
push
inc
sahf
sub
cmp
aad
movsb
lea
adc
push
push
nop
jmp
inc
jmp
lds
lahf
pop
aad
js
es
push
pop
cmp
push
loope
pop
lods
mov
or
shlb
or
into
imulb
pop
mov
dec
sub
shll
or
jno
jo
dec
fdivs
shl
test
adc
and
lock
xchg
inc
aam
jbe
mov
inc
mov
mov
lds
lret
pusha
mov
mov
fs
push
jo
lret
sub
sbb
outsb
mov
outsl
cmpsl
repnz
cmpsl
jp
cmpsb
jecxz
cmp
pop
mov
add
movsb
sbb
sarl
lock
je
imul
dec
mov
dec
lods
or
movsb
negl
int
xchg
je
imul
mov
pop
repnz
sbb
sbb
add
outsl
jnp
cltd
decb
pop
sti
add
insl
xchg
dec
mov
dec
stos
sub
mov
popf
pusha
loopne
push
cmpb
and
out
rcrl
cwtl
ret
lahf
mov
scas
sub
test
aam
cs
mov
add
fmull
fists
inc
int
jno
lea
out
dec
outsl
lcall
pop
xor
mov
cmp
jb
daa
mov
fiaddl
hlt
inc
mov
mov
add
jge
clc
aaa
js
adc
movl
dec
imul
ljmp
xor
pop
sub
daa
gs
in
std
sti
jb
mov
loope
pop
push
ss
cmp
mov
stos
inc
fstpt
mov
mov
and
add
popa
add
jne
and
loopne
mov
data16
aaa
mov
xor
pop
push
aas
cmp
test
and
dec
and
dec
mov
and
pop
push
push
xchg
repz
dec
test
or
dec
or
cmp
repnz
lcall
or
mov
icebp
pop
iret
xchg
lahf
push
xchg
mov
mov
je
stc
arpl
xlat
test
bound
ss
mov
adc
mov
xor
orb
jmp
data16
adc
jp
dec
cs
inc
push
and
test
std
loopne
fiadds
lahf
xor
out
les
stos
mov
add
inc
sbb
xor
pop
jno
mov
das
cs
jb
test
pop
ret
jmp
test
lahf
jae
and
popa
clc
ret
push
pop
inc
adc
negb
push
dec
shrb
sbb
add
repz
xor
push
clc
imul
or
sbb
add
inc
pop
mov
push
lahf
adc
xlat
mov
fbstp
clc
xchg
push
and
add
push
lahf
sbb
testl
or
adc
mov
push
aaa
and
fs
mov
pop
int
mov
leave
jge
scas
pop
cmp
push
popa
sbbb
push
lcall
bound
xor
ja
xor
outsb
mov
hlt
sbb
push
xchg
adc
add
xor
mov
outsl
movsb
enter
mov
aaa
movsb
es
in
cmp
jecxz
int3
mov
fnstenv
scas
rol
push
cmpsb
ja
cwtl
pusha
sbb
mov
addr16
repnz
aas
das
jge
push
or
sub
pop
push
int3
fs
push
push
nop
cwtl
pop
and
pop
icebp
ficoml
int
mulb
dec
aam
movsl
arpl
mov
jns
and
xor
add
sub
pushf
inc
into
or
je
fwait
cli
insb
fwait
loop
addr16
idivb
aaa
lcall
cmp
mov
pop
fdivl
pop
insl
mov
in
or
pop
inc
pusha
fcompl
or
or
jns
leave
or
xor
push
leave
or
cmp
div
lods
cs
cmp
insb
and
jnp
mov
mov
mov
fstl
cmc
sub
loope
dec
or
and
adcl
push
sbb
loope
or
js
pop
shrl
dec
inc
mov
xor
ss
insl
mov
push
shlb
mov
pop
and
push
jne
push
push
push
insb
inc
imul
sbb
in
decb
adc
mov
pusha
cmpsb
mov
enter
mov
pop
int3
out
and
mov
cmp
cmp
test
dec
inc
pop
xlat
insb
mov
xchg
iret
push
mov
mov
imul
pop
sbb
pop
sti
cmpsb
popf
or
js
into
sub
popl
push
push
push
mov
adc
cmp
sti
shrl
xchg
stc
rcll
lahf
jno
ja
test
rcll
cmpb
push
sub
xor
dec
xlat
add
cmp
sub
sbb
xchg
jb
rcrb
loopne
out
cmp
test
mov
in
push
stc
sub
fisubl
sub
in
andb
mov
mov
std
stc
sub
sub
inc
mov
adc
sbb
inc
or
sbb
in
pop
mov
sub
shl
cmp
add
repz
stc
jnp
mov
push
leave
cmp
test
push
xchg
pop
ret
inc
loopnew
sub
subb
pop
stc
fyl2xp1
xlat
xor
pushf
add
stos
mov
insb
mov
int3
lahf
inc
in
int3
ja
or
sbb
add
sub
sub
inc
sub
jg
out
call
push
pop
and
dec
int
cmp
shlb
aad
mov
xor
inc
mov
in
je
inc
xchg
test
dec
aad
incl
insl
mov
xor
imul
xor
lods
pushf
cmp
mov
push
or
mov
cli
das
cmc
movsl
ret
lret
mov
cmp
les
add
sbb
cltd
pop
data16
jge
xor
mov
fstps
shr
aad
test
mov
add
pop
lret
int
push
mov
mov
icebp
gs
and
mov
pop
mov
push
mov
mov
clc
push
cmpsb
jo
or
aaa
xchg
mov
push
cld
into
cmp
fsubrl
add
test
add
jnp
dec
and
push
fistpl
stc
add
in
push
push
lods
xor
ja
jmp
js
es
mov
out
ja
popf
fs
lods
ljmp
lods
dec
add
jmp
mov
sahf
sbb
shlb
sub
dec
hlt
inc
mov
or
mov
pushf
xchg
adc
add
cmp
lea
sub
or
ds
ja
fsts
add
out
push
cmp
inc
nop
test
aam
dec
inc
pushf
xchg
cmp
pusha
jl
mov
xchg
pop
int3
hlt
mov
inc
ret
fs
jno
add
jne
aad
push
jecxz
lret
inc
movsl
pop
push
repz
adc
sbb
sbb
lret
std
aad
ret
dec
popa
pop
xchg
inc
mov
add
sub
aas
mov
in
data16
xor
pushf
cld
clc
fdiv
aad
sarl
in
iret
sbb
aaa
clc
xchg
sub
fmuls
adc
jae
stc
mov
mov
sti
pop
mov
mov
aas
push
xchg
cld
mov
outsb
insl
sub
inc
push
sti
test
sarl
dec
xlat
sub
aaa
add
jecxz
and
into
nop
out
or
jecxz
pop
mov
nopl
ljmp
outsl
or
and
mov
bound
pop
push
lret
mov
or
push
push
pop
mov
aad
push
mov
daa
fnstenv
movsl
jmp
push
mov
or
fwait
push
sarb
jmp
cltd
call
push
enter
insl
and
jb
push
pushf
outsb
push
popf
es
and
pop
add
fistpll
and
nop
bound
push
int3
adc
dec
outsb
nop
inc
insb
repz
jmp
int3
aam
jecxz
jne
data16
data16
cmp
stc
add
adc
fs
pop
jb
out
sub
aaa
cmp
add
xchg
sub
inc
loop
push
lock
pop
inc
idivl
push
inc
rorb
inc
inc
pusha
mov
sar
cmp
loope
fsubrs
push
jmp
jmp
das
pop
jecxz
and
lods
movsb
push
cwtl
and
loopne
rorl
mov
ljmp
cmpsb
cmove
jp
ss
inc
mov
rcll
xchg
cmpsl
pop
jmp
sbbb
jp
xor
loope
pop
xchg
lock
mov
mov
sbb
cmp
repz
ja
lea
sbb
push
mov
fwait
jecxz
ret
sbb
bound
mov
jle
sbb
and
or
in
push
xchg
hlt
idivb
mov
pop
insb
inc
ds
lahf
mov
test
lods
cmc
aas
jge
mov
cmc
and
sub
fisttps
cld
int
jbe
xchg
mov
popa
sti
mov
into
aam
lret
dec
mov
clc
addr16
sub
psrlw
sub
dec
stc
stos
loopne
xchg
ret
dec
push
adcb
js
insl
dec
pusha
in
mov
pop
dec
jg
lret
xor
lds
out
aaa
jae
out
cltd
push
lock
in
push
or
scas
arpl
pusha
icebp
dec
cli
leave
adc
loop
push
scas
mov
pop
pop
or
pop
and
imul
jp
divb
hlt
psubusw
ret
cmp
sarb
jnp
sub
lock
in
dec
outsl
call
pop
imul
xor
push
fsubl
je
ljmp
mov
push
in
stc
lods
out
out
bnd
dec
loopne
dec
dec
rcrb
inc
add
inc
cltd
pop
dec
mov
lock
xor
orl
test
mulb
leave
push
ss
and
mov
cli
xlat
jl
xor
xor
jo
sbb
aas
adcb
bnd
add
rolb
push
jbe
adc
ss
xor
push
cmp
add
add
mov
xor
daa
dec
xor
mov
jne
pop
mov
sbb
inc
aas
lods
xchg
orw
mov
mov
test
nop
in
inc
aam
mov
ret
mov
imul
jl
icebp
mov
sbb
out
flds
inc
jns
mov
mov
lods
ds
in
lcall
xchg
gs
or
ja
sbb
popf
int
mov
xchg
jns
xor
out
fisubrs
pop
ficomps
lock
repnz
or
jge
cmp
fildl
dec
jle
popa
loopne
jmp
rolb
or
pop
pop
cmp
lcall
dec
mov
xor
xchg
lods
loopne
lahf
xchg
stos
xchg
mov
pusha
fwait
sbb
jmp
jns
mov
pusha
push
mov
push
pushf
or
cld
pusha
pop
dec
and
pop
sbb
xlat
and
sub
lcall
repnz
push
adc
and
add
scas
add
bound
hlt
iret
jp
inc
std
loopne
lods
scas
pop
pop
xchg
xchg
lea
ds
cmpsl
orb
mov
adc
js
xor
cmc
jbe
das
push
and
jp
jg
cmp
cmpsl
pusha
aaa
sub
cmpsl
mov
dec
repz
adc
test
ficomps
movsb
sub
add
push
xchg
mov
jmp
mov
mov
push
test
cwtl
pop
test
dec
ljmp
rol
mov
les
cmp
shl
mov
jbe
inc
or
rorl
push
ds
daa
repz
pop
arpl
test
inc
lret
push
mov
popa
push
mov
sub
cwtl
aam
psubw
xor
adc
dec
aaa
jb
xchg
pop
or
mov
xchg
dec
cmc
jno
sbb
out
mov
mov
push
pop
push
mov
cmpsl
sahf
add
test
mov
in
enter
dec
fsts
js
clc
mov
jmp
insl
cmc
mov
lret
xor
xlat
and
push
lea
ret
inc
sub
fs
pop
xlat
push
cmp
push
ss
jnp
xor
imull
fidivrl
sbb
or
inc
lds
sub
mov
shrb
lock
xchg
repz
inc
nop
dec
jmp
push
aad
adc
orl
in
inc
icebp
ja
test
rcrl
cmp
daa
ljmp
dec
adc
push
test
push
and
in
adc
push
adc
cmp
sti
pop
jae
cld
mov
jne
btc
loopne
sub
sub
clc
hlt
cs
les
lcall
int
out
lret
and
ljmp
shl
xor
cld
bound
mov
sbb
into
or
mov
rorb
jp
loopne
sti
daa
test
outsb
dec
mov
mov
mov
je
xchg
sbb
push
loopne
mov
push
icebp
daa
bound
inc
popa
std
setp
popf
lods
sbb
xchg
in
fwait
mov
mov
sbb
mov
adcl
mov
cmc
test
inc
xchg
cs
es
mov
jecxz
inc
mov
push
mov
aas
xorl
mov
mov
push
ret
fdivs
jecxz
xlat
sti
xor
adc
add
orb
cli
test
jno
pop
enter
cltd
arpl
lcall
mov
fwait
push
stos
xchg
cmpb
lahf
xchg
inc
adc
sub
pop
jno
jg
push
mov
imul
mov
sbb
scas
rolb
pop
pop
sarl
adcb
and
ror
mov
xor
loopne
jmp
ret
popa
loop
cmp
movsl
xor
pop
insl
test
and
inc
cmc
add
adc
xorb
push
adc
out
cmp
add
ret
inc
cli
aam
xchg
jle
fs
fdivrs
mov
or
repnz
mov
lcall
fnstcw
sbb
shll
ljmp
sub
sbb
ret
sub
sub
int
adc
cmp
loopne
mov
and
mov
test
add
cmpsl
cmpsb
cmp
push
push
std
xchg
jmp
stc
test
mov
push
mov
loop
popf
loop
call
sub
adc
aad
mov
mov
mov
xchg
jp
jnp
ficompl
or
outsl
lods
insl
sub
mov
mov
pop
jae
and
test
rorb
inc
adc
je
jne
test
iret
out
hlt
xor
push
jl
jb
popf
or
dec
jns
movsb
cmp
rolb
imul
jecxz
movsb
dec
jnp
pop
and
xlat
mov
gs
mov
rorl
jns
aas
rol
sbb
sub
pop
loop
xor
xor
jb
popf
jo
insb
cmp
sarb
ljmp
int3
popa
aad
push
out
mov
movsb
add
cmp
stos
jecxz
jle
test
pop
sti
mov
testb
insl
sbb
repz
dec
xchg
mov
sarb
fxtract
stos
cltd
xchg
mov
cmp
pusha
lret
and
repz
daa
sti
or
sub
xchg
ror
cmp
imul
sbb
les
adc
clc
out
mov
lcall
in
scas
dec
cmp
aaa
int
into
test
roll
inc
jb
or
into
pop
imul
jle
sahf
jbe
loope
sub
xchg
mov
dec
cmc
cmp
mov
sub
cmp
sub
fwait
clc
rclb
mov
xchg
je
push
into
push
cli
loop
lret
fucomi
data16
sbb
push
inc
sbb
mov
into
sub
cmpsb
mov
je
xor
cli
mov
or
dec
pop
cmp
xor
cli
daa
mov
scas
push
insb
ret
jo
pop
cs
sbb
fmuls
test
fisubl
xorb
and
je
test
fs
arpl
shrb
and
mov
rclb
js
xchg
lret
mov
pop
orl
bound
mov
pusha
bound
mov
or
mov
inc
or
movsb
lods
xor
hlt
mov
lcall
es
test
adc
inc
mov
mov
cs
cmp
xchg
lock
std
sbb
out
xchg
insl
or
rolb
and
rcll
cmpsl
mov
inc
jl
rclb
mov
mov
mov
stos
push
mov
cmp
lds
into
mov
test
rorb
push
cs
push
ret
cld
adcb
sub
loopne
pop
or
imul
push
cmp
xor
scas
fsubl
cli
xor
push
push
dec
fists
shlb
lea
jecxz
inc
mov
jne
mov
je
data16
and
mov
enter
inc
inc
xchg
out
imul
jge
insl
jle
adc
mov
sub
leave
lock
lea
xchg
dec
imul
movsb
adc
jno
loop
dec
add
imul
jne
out
test
in
fdivrs
call
mov
cwtl
and
inc
inc
cmp
xor
sbb
nop
push
push
call
clc
cmp
lcall
mov
cwtl
mov
js
push
into
and
inc
cli
xor
iret
fistps
gs
lods
xor
push
jge
mov
ljmp
mov
adc
outsb
loope
inc
repz
cld
mov
addr16
cmp
mov
add
cltd
stc
mov
add
lock
imul
dec
mov
fsubrs
sub
cld
fistpl
icebp
jbe
js,pn
jbe
insb
cmpsb
icebp
jo
inc
jnp,pt
mov
dec
imul
mov
add
out
outsb
pop
ss
sub
adc
int3
or
push
mov
fmulp
addr16
adc
cmp
stos
call
fidivrl
jbe
adc
sbb
stos
fwait
ja
or
dec
inc
push
imul
jb
adc
dec
adc
shl
stc
idiv
push
pushf
mov
lea
mov
jp
xchg
push
ja
dec
sbb
imul
arpl
mov
in
dec
mov
lret
dec
fisttps
lret
jbe
adc
jge
or
std
jnp
jge
dec
js
fadds
arpl
adc
popf
pop
loopne
add
outsl
pop
cmp
jae
xchg
inc
pop
mov
sbb
mov
adc
xor
mov
repnz
enter
push
vmread
jno
mov
lret
add
mov
daa
orb
mov
adc
mov
adc
cmp
jb
sub
lret
or
cmp
rclb
out
daa
popf
mov
arpl
jle
lret
scas
dec
dec
lcall
sbb
push
jp,pn
xor
add
pop
cltd
jb
adc
push
int3
cmp
fldcw
ljmp
sbb
fidivrs
fistl
mov
pop
xchg
push
jne
icebp
mov
arpl
sbb
in
push
ja
push
push
jns
fildl
jge
pop
jmp
push
jg
repz
pop
aas
dec
dec
dec
lods
pop
jae
jmp
xor
cmp
clc
xchg
inc
xor
fiadds
push
push
stos
add
mov
xchg
push
push
not
scas
push
mov
dec
bound
scas
rcrb
call
dec
dec
hlt
pop
repnz
lahf
push
adc
adc
adc
or
in
xor
jp
mov
loop
push
xor
aad
xchg
inc
mov
bound
sub
sub
adc
aas
jne
adcb
popf
add
or
sbb
adc
pop
sub
std
mov
and
aam
mov
cmp
and
mov
mov
mov
xchg
push
loop
shrl
into
xor
vunpckhps
test
ja
test
xchg
push
mov
and
daa
sbb
int
inc
inc
out
ds
dec
pop
movsb
adc
sti
jae
packuswb
bound
out
adc
pop
cltd
repnz
jge
fwait
push
mov
rorb
inc
scas
bound
sbb
add
cmpsl
or
pop
cs
mov
popa
or
aas
sub
pop
aad
sbb
out
aad
sub
xchg
lea
adc
jge
pop
inc
pop
fiadds
fisubl
inc
das
inc
test
sbb
mov
out
out
aaa
add
pop
mov
jo
loop
aaa
fildl
mov
or
enter
push
lds
lds
fdivrl
or
stos
pop
jecxz
mov
imul
es
ret
mov
ds
mov
rcl
fistpl
inc
divl
mov
gs
jmp
cmp
xor
out
jmp
stos
add
push
fcmovb
push
cmp
add
cwtl
fstpl
jae
dec
mov
push
pusha
or
pusha
loop
xchg
scas
add
out
fs
test
lahf
cmc
mov
in
imul
loop
and
cmc
push
aas
sbb
outsb
ret
or
mov
fwait
call
jb
shlb
icebp
movsl
add
clc
cmp
cmp
jne
bound
mov
pop
dec
push
xlat
or
xchg
jno
and
sub
std
aad
test
mov
imul
push
fs
cmp
inc
xchg
and
pop
sbb
mov
into
loope
xchg
test
ficompl
sub
pop
lods
out
sahf
mov
dec
es
xor
push
mov
mov
stos
fcoml
hlt
sub
push
and
mov
cmp
and
insb
sbb
insl
mov
clc
cli
gs
cld
cmp
inc
jl
jbe
pusha
popa
lahf
pusha
mov
fcom
insb
mov
mov
adc
push
adc
cmc
mov
cmpl
mov
sar
orb
into
test
pop
loope
pop
pop
and
sub
mov
out
out
push
cwtl
orb
and
in
imul
pop
mov
test
or
cmp
add
pusha
adc
add
insb
jge
aas
sbb
enter
cmc
cmp
xchg
sub
pushf
push
or
mov
sti
mov
jbe
push
test
pop
or
cwtl
pop
lock
xor
pop
negb
fiaddl
outsb
jecxz
xchg
imul
jmp
xor
aas
mov
add
jg
cmp
adc
in
outsl
call
rcrl
outsb
subb
fimull
popa
aam
cwtl
mov
imul
je
les
adcb
popa
fs
clc
jno
aas
mov
rep
loope
mov
fucom
ljmp
pop
pop
mov
inc
iret
cli
inc
test
push
mov
xchg
mov
mov
xchg
test
fidivs
mov
and
and
cmp
dec
imul
add
dec
jb
cmp
mov
dec
lret
daa
pusha
add
test
pop
ljmp
cmc
divb
out
sbb
pop
pop
push
dec
adc
mov
push
or
movsb
mov
xchg
sbb
lret
call
mov
mov
xchg
push
lock
push
inc
insb
or
adc
pop
inc
mov
adc
imul
fcmovb
inc
or
xchg
adc
cmpsb
push
rcrl
push
or
addr16
cmp
xlat
in
cmp
cmc
mov
xchg
inc
mov
lret
or
aam
out
loop
aam
or
scas
pop
adc
das
or
divb
mov
out
mov
dec
movsl
pusha
mov
clc
leave
cli
fwait
add
fcoms
shlb
mov
and
lahf
cwtl
mov
mov
addr16
xor
test
xor
fidivl
movsl
mov
repz
adc
mov
imul
xor
stos
xchg
leave
jne
adc
rcrl
aaa
int
jg
nop
movsl
in
das
repz
push
shrl
repz
lods
xchg
xchg
ret
cmp
int3
xlat
ss
ja
inc
mov
out
sbb
xchg
insl
popa
and
sub
dec
xor
pop
jl
scas
mov
pusha
enter
jge
xchg
pusha
adc
pop
sub
cmpsl
out
xchg
imul
cmp
adc
rclb
jo
inc
das
jno
sub
out
sbb
or
jmp
stos
mov
jae
dec
mov
dec
js
ljmp
jne
daa
sti
bound
add
cmp
ja
push
cmp
xchg
or
push
not
mov
adc
in
iret
pop
mov
cmp
repz
popf
xchg
jne
leave
mov
pop
mov
push
or
pop
jne
insl
inc
inc
lods
push
adc
jmp
mov
scas
int
dec
and
flds
xor
adc
pushf
xor
xor
dec
push
mov
mov
jae
or
rorb
cmp
push
int3
or
sbb
in
xor
jno
fidivrs
jg
sub
jbe
adc
addl
in
test
or
pop
aam
push
movb
adc
dec
adc
cmpb
stc
sub
inc
pop
xchg
jnp
imul
or
loope
out
pushf
add
stos
mov
pop
imul
xchg
outsb
push
loop
push
enter
mov
mov
sbb
std
pusha
cld
pop
lea
pop
lds
pop
pop
lahf
aam
aas
insl
rorl
mov
and
pushl
push
xor
sub
adc
cmp
xchg
ficomps
or
movsl
not
or
xchg
andb
arpl
xor
repnz
adc
test
xor
aaa
into
test
push
add
nop
and
outsb
test
jb
add
gs
jns
sub
or
push
addb
outsl
mov
inc
pop
movsb
addl
pusha
push
pop
mov
lods
fwait
arpl
push
loop
mov
dec
aad
push
sub
xor
cmp
dec
ja
xor
into
in
mov
test
push
mov
int3
inc
das
dec
mov
inc
lds
hlt
mov
ret
jmp
cmp
pop
jo
push
insl
lds
mov
dec
and
and
leave
push
int
lcall
cmp
out
mov
in
pop
sbb
add
push
cli
pop
adc
pop
insl
repnz
sub
jno
pop
out
pusha
push
sahf
mov
insb
cmp
out
cmp
and
add
testb
insl
mov
cld
and
popa
lds
push
mov
adc
dec
and
ds
out
aaa
mov
jl
cmp
xor
push
mov
fs
xor
push
xchg
loope
sbb
out
pop
cmp
out
dec
pop
clc
jle
pop
sub
sub
cmp
lahf
sarb
test
mov
cwtl
adc
mov
ja
mov
adc
dec
adc
sbb
insl
sbb
cmpsl
insl
dec
int3
xchg
mov
xor
and
cltd
inc
jg
clc
adc
fwait
gs
ret
out
jl
sahf
hlt
jno
aaa
pop
jle
sub
les
lds
ja
fwait
sbb
xchg
prefetch
sbb
out
xor
xchg
xchg
jns
sub
xchg
adc
roll
test
inc
adc
cmp
cwtl
sbb
jl
jmp
inc
cmp
dec
add
fistpll
popa
outsb
frstor
rolb
push
xchg
scas
nop
das
or
jae
cmpsb
push
dec
clc
cwtl
push
std
or
into
je
and
popf
sarl
sgdtl
leave
loop
es
dec
xor
pop
xor
pop
mov
lahf
jne
jnp
je
and
mov
ficomps
mov
dec
dec
imul
loop
movsl
outsb
dec
mov
cmpsl
sti
cmp
int
push
lods
addl
pushf
mov
mov
repnz
mov
sub
subb
test
and
fcoms
ss
xchg
cmp
pop
cld
les
cmp
pop
movsl
add
arpl
mov
pop
ds
xorb
lea
and
dec
jno
idiv
loope
mov
jge
aas
xor
pop
dec
in
addr16
mov
lahf
cmp
mov
xchg
and
jmp
jnp
shlb
pop
push
cmp
inc
cmp
mov
xor
mov
out
inc
sti
shll
scas
cwtl
int3
nop
xchg
cs
aam
lock
xchg
jl
pop
fistpll
xor
xchg
mov
in
cmp
popf
mov
cmp
xchg
movl
das
cmp
jmp
lds
cld
xor
adc
sbb
outsb
or
xor
pop
jno
stos
outsl
sub
daa
clc
loop
xor
sti
ss
sub
cld
mov
inc
aam
xor
jnp
fst
repnz
fisubrl
cmp
icebp
push
lret
sub
mov
out
xor
clc
jbe
iret
and
scas
les
scas
adc
mov
sbb
mov
mov
jnp
daa
shrb
rcrb
mov
cli
pop
jmp
dec
adc
dec
push
cli
test
jl
pusha
sahf
push
pop
arpl
icebp
divb
std
push
hlt
xchg
rcrl
and
lret
outsl
xchg
es
lods
add
cmpsl
test
int
scas
xlat
movsl
xlat
dec
add
fidivrl
push
addb
sbb
aad
fidivrl
aaa
inc
adc
sub
idiv
out
mov
stos
mov
mov
jge
enter
xchg
xor
or
xor
push
push
das
push
sahf
pop
pop
insl
imul
xchg
xor
jbe
je
jnp
insb
cwtl
push
loop
adc
mov
aaa
xor
pop
lods
into
ljmp
lret
mov
lcall
sahf
mov
mov
test
push
sub
jns
stc
jg
ret
or
or
lcall
lret
cmp
out
push
pop
loope
mov
loopne
inc
in
mov
or
aam
cli
jae
push
jmp
add
loopne
stos
xchg
or
sub
imul
add
mov
in
decb
rol
inc
ljmp
test
or
scas
fidivs
lcall
mov
pop
cmpsb
xor
in
rcrb
mov
repz
pop
popa
sub
rclb
adcl
daa
mov
comiss
cmp
sub
loop
push
sub
adc
repnz
shr
mov
imul
jl
jle
mov
sub
enter
adc
inc
cmc
xchg
push
sub
insl
push
mov
pop
xlat
les
jns
or
dec
imul
jb
iret
push
sti
cmc
cmp
neg
pop
je
cltd
sbb
add
jl
mov
cwtl
dec
mov
cmpsl
xor
mov
sub
mov
das
pop
rolb
xchg
add
push
ljmp
outsl
mov
cmpsl
insb
push
pushf
aam
push
adc
jge
stc
or
repnz
not
cmp
addr16
insl
jecxz
inc
outsl
les
add
and
subb
pop
jp
pushf
push
out
and
loop
inc
ret
les
dec
aas
xchg
cmp
mov
iret
sub
xchg
push
psraw
sbb
jg
mov
adc
jo
out
pop
pop
rorl
in
and
jg
jnp
cmpl
xor
dec
testl
cmpsb
jle
test
jo
push
dec
push
inc
das
push
jle
daa
adc
scas
mov
mov
std
and
shlb
jl
jo
jb
scas
inc
int
imul
pop
jecxz
adc
and
bswap
clc
and
iret
xchg
jo
and
imul
cmc
jecxz
insl
mov
notb
and
hlt
popa
in
mov
pop
movsb
push
shll
cmc
call
pushf
mov
mov
aaa
fwait
inc
push
pop
ljmp
push
xor
fucom
loop,pn
loope
jecxz
xchg
inc
enter
xchg
frstor
xor
pop
mov
lea
in
fcos
mov
pop
fs
test
push
jno
out
ja
pop
xchg
mov
inc
repnz
pop
aaa
test
and
shll
frstor
std
push
sub
dec
leave
or
fwait
jg
test
add
jno
dec
int3
movsl
add
loopne
jecxz
sbb
out
sti
test
and
arpl
and
clc
jo
mov
push
outsl
enter
fnsave
les
pop
pop
adc
scas
fildl
loop
sub
les
mov
dec
mov
inc
fdivl
and
push
std
fnstsw
cmc
negl
into
jno
cwtl
mov
or
scas
add
fildl
xor
jg
cmp
pushaw
mov
sbb
push
jge
movsl
movsb
or
sbb
or
mov
imul
in
sarb
jle
dec
fnstenv
adc
push
jp
jae
push
cmp
fucomp
push
fnstenv
leave
cli
ss
mov
ret
fsts
or
and
aad
scas
push
ret
inc
lock
rclb
inc
aam
pushw
nop
iret
sbb
push
mov
in
es
rdtsc
push
push
enter
mov
cmpsb
jb
mov
add
mov
cld
pop
sub
insl
int3
sub
mov
std
push
sbb
scas
xchg
xor
repnz
outsb
lods
or
out
stc
inc
in
cld
jmp
mov
jle
jle
sub
mov
popf
cmp
adc
shll
clc
dec
mov
pop
hlt
or
fstps
movsl
mov
push
and
mov
leave
sbb
test
mov
imul
int3
int3
lret
push
adc
mov
std
fimull
push
xor
push
addr16
sbb
repnz
pop
sub
cli
dec
mov
pop
mov
push
mov
mov
bound
clc
sub
jnp
scas
mov
push
xchg
hlt
fidivrs
cld
adcb
popa
inc
fbld
xlat
popa
jmp
enter
mov
push
bound
mov
pop
push
dec
fidivrl
loopne
sub
add
and
mov
ret
mov
mov
imul
mov
mov
push
cmp
and
inc
shrb
push
cmp
fstl
scas
fisttpll
xor
xor
mov
push
cmpsb
xchg
and
xor
sub
les
test
stos
fwait
sbb
or
in
in
iret
push
sub
xadd
fisubrs
mov
mov
pop
pop
dec
sbb
mov
out
fcomi
push
mov
mov
or
xchg
xor
imull
mov
test
je
push
in
add
std
jl
and
sbb
movsb
and
cmp
mov
pusha
dec
orb
rcr
cmp
out
pop
mov
ret
cmp
cmpsl
dec
lret
popf
pavgw
adc
sub
dec
popf
iret
mov
lret
dec
inc
movsl
test
inc
jl
lret
xor
insl
pop
fisttpll
gs
mov
test
or
test
xchg
jne
mov
push
imul
xor
loopne
push
jo
ret
loopne
fadd
fcom
int
dec
loopne
jecxz
cmpl
cwtl
repnz
jns
adc
push
mov
mov
xchg
xchg
pop
scas
pushf
and
push
test
pop
pop
dec
repz
xor
shll
imul
stc
sbb
int
mov
cmp
jno
sub
dec
mov
int3
jecxz
lret
mov
mov
inc
ficoml
mov
mov
jno
xchg
xor
sub
xchg
pop
int
mov
cmp
mov
inc
xor
xchg
adc
sbb
test
rcl
adc
pop
sub
xor
push
sbb
inc
xchg
aaa
mov
out
cmp
push
mov
push
pop
ja
xchg
mov
pop
sub
mov
sbb
loope
cwtl
subb
imul
pop
aaa
or
sub
lods
pop
mov
je
dec
cmp
fstpt
lcall
pop
pop
or
aad
sub
dec
pop
xchg
cmc
mov
xor
orl
test
add
sub
pushf
jns
std
add
stos
dec
cmp
shl
test
popf
aam
nop
loope
idivb
add
and
mov
inc
leave
loope
pop
pop
out
std
pop
outsl
or
xchg
sbb
into
jge
cltd
pop
iret
jno
loopne
shr
jo
add
icebp
cmp
jne
out
stc
dec
push
inc
jae
not
aaa
data16
cli
sub
insb
and
js
push
cmp
dec
xchg
fstpl
bound
sub
enter
addr16
lods
popf
pop
enter
xlat
xchg
push
jg
cmc
pop
xchg
cmp
mov
cwtl
ds
push
pop
fsubs
daa
mov
les
rep
jns
shrb
adc
std
ljmp
pop
pop
aas
pop
test
les
adc
pushf
and
xor
iret
faddl
push
lock
cwtl
aad
dec
dec
jo
mov
mov
rcll
or
mov
cmpsb
add
loopne
jp
fildll
push
ficoml
aam
xchg
outsb
leave
subl
aaa
cmp
dec
mov
jl
lahf
jmp
orb
aad
loopne
push
cltd
repnz
mov
cmpsl
mov
sbb
cld
sbb
cmpsl
or
clc
test
mov
out
push
int
mov
xchg
jbe
enter
dec
or
bound
xor
and
mov
fwait
xchg
inc
or
loopne
push
mov
pushw
iret
inc
shl
mov
sbb
mov
mov
sbb
enter
iret
outsb
jae
icebp
dec
pop
push
jmp
mov
pop
add
mov
cmp
xchg
pop
ljmp
popf
out
sbb
mov
lds
pop
jmp
and
loopne
mov
or
movsl
xor
xchg
out
stos
pushf
inc
sbb
aad
mov
sbbb
rolb
xchg
xchg
sarb
lods
inc
xchg
mov
or
rcrl
repz
mov
dec
inc
xchg
js
fstp
fsub
adc
inc
or
mov
mov
aad
test
xchg
mov
int3
jle
pop
bound
out
outsb
pop
leave
sub
mov
shrl
lcall
and
xchg
sbb
cmp
cmp
xchg
mov
fldt
das
fisubl
lahf
pop
scas
xor
mov
jbe
push
jecxz
lock
shlb
mov
inc
in
ljmp
xchg
dec
and
aaa
loop
xchg
mov
movsl
push
and
xchg
mov
je
push
jae
mov
lds
les
out
xchg
push
push
scas
mov
test
scas
or
inc
xchg
sbb
fs
xor
lods
pop
in
gs
frstor
xor
out
cmp
sub
mov
lret
mov
jnp
or
inc
pop
and
das
sar
or
mov
push
push
fstps
mov
mov
mov
mov
aad
xchg
xor
push
iret
nop
clc
fsubrs
mov
mov
nop
xlat
insl
xchg
mov
jae
out
mov
popa
pop
inc
or
mov
in
idiv
dec
lods
adc
imul
mov
rcl
arpl
push
add
fmul
ja
ret
adc
add
mov
test
pop
add
sub
int3
js
icebp
mov
xlat
push
add
outsl
test
unpckhps
xor
in
xor
movsb
cld
rcrb
pop
mov
push
xor
cltd
cmp
out
jbe
test
out
jecxz
int
repz
sbb
push
cmpsl
cmp
aam
xchg
push
adc
push
adc
mov
movsw
ret
aas
xchg
inc
loop
cwtl
loope
inc
sbb
inc
in
pop
dec
jne
dec
jmp
adc
rcrl
cli
cmp
xchg
stos
xor
jnp
insb
in
mov
cmp
adc
jnp
aaa
sbb
icebp
insb
movb
dec
lcall
sti
add
add
xor
inc
mov
mov
jg
and
jmp
dec
rcrb
sbb
push
add
pushf
sbb
push
adc
movsb
inc
outsl
cmp
pop
push
faddl
sbb
aaa
push
xchg
xor
sub
jecxz
xchg
outsl
cmc
mov
jns
and
lods
and
lcall
dec
jge
pop
mov
sub
mov
lock
sub
rorl
and
mov
mov
cmp
inc
sbb
lcall
pop
pusha
aas
mov
fcomp
ljmp
pop
jo
lds
iret
imul
sbb
xchg
dec
shlb
mov
ss
inc
data16
clc
fcomps
aaa
cs
or
imull
sub
int3
mov
test
mov
mov
call
pop
enter
jl
shlb
clc
cmp
and
mov
es
rcrb
orl
xlat
cmp
mov
add
adc
aad
ret
adc
jno
pop
sub
jp
mov
xor
jns
mov
mov
shrl
fiadds
lahf
pop
movsl
adc
fs
and
repnz
sbb
stc
push
xchg
mov
fldenv
sbb
jb
sbb
stos
sbb
mov
js
mov
xadd
movsb
mov
cmp
fs
mov
popa
jg
inc
loope
pop
jae
xchg
cld
mov
imul
stos
inc
ret
loop
mov
mov
filds
ss
add
repnz
xchg
pop
cmp
push
lahf
dec
dec
cmp
cmp
push
mov
sub
aaa
or
and
push
rorb
mov
xor
sbb
movsb
mov
movsb
mov
addr16
mov
mov
xchg
xchg
mov
or
mov
test
pop
outsb
dec
mov
jle
sbb
daa
imul
mov
inc
mov
and
iret
adc
pop
inc
ret
in
mov
ret
sbb
jge
mov
cmpsl
ss
jne
pop
sarb
dec
push
aaa
sub
repz
jl
cmpsl
dec
mov
fstpt
push
shl
jp
jle
outsl
jl
add
mov
push
lcall
mov
cmp
sarb
inc
in
lret
call
mov
add
or
jmp
aad
cli
loope
in
call
enter
jg
insl
jo
idivb
sub
mov
push
stos
pusha
cmpsb
popa
xchg
dec
mov
fiaddl
xchg
into
dec
mov
fdivr
push
or
andb
and
inc
and
fcmovne
cmp
or
or
adc
pop
jnp
xor
sub
and
mov
pop
and
pop
dec
sti
xor
add
xchg
or
xchg
fs
xchg
xor
cs
rorb
rcrl
pop
mov
mov
aad
pop
push
es
mov
je
aas
mov
sub
lods
mov
jne
rol
icebp
mov
mov
das
lods
mov
test
scas
repz
and
loope
or
insb
ss
out
sub
jnp
repnz
je
push
mov
jl
insl
mov
dec
lcall
movsb
aas
call
push
mov
mov
or
jmp
aas
push
xchg
mov
out
push
rolb
cmp
sbb
sbb
fnstenv
jb
sbbb
addr16
and
ljmp
sarb
adc
mov
dec
jbe
sub
jo
addr16
movsb
andb
sub
mov
push
in
xor
mov
pmaddwd
push
mov
mov
pop
jb
sbb
dec
iret
fstp
inc
mov
ds
and
jbe
jg
cmp
ss
scas
scas
in
cmp
insl
adc
test
ficoms
or
lcall
scas
repz
out
stc
clc
mov
xchg
cmp
mov
push
or
push
daa
lods
in
dec
movsl
jnp
and
cmp
adc
sub
repz
js
leave
addr16
mov
lea
fcomi
test
inc
push
jo
mov
in
xor
int
fldl
rcl
in
mov
imul
mulb
iret
adc
into
push
jbe
out
xchg
mov
lret
cmp
add
insb
jnp
int
sahf
xor
push
es
inc
xchg
push
sbb
adc
and
enter
fisubrl
cmp
fnstcw
xor
jmp
sub
sbb
sub
repz
aas
popa
mov
and
mov
das
fldl
and
mov
popa
adc
dec
sub
into
outsl
lods
jo
loopne
ljmp
in
movsl
insl
sbb
les
sub
xlat
daa
pop
jle
push
jo
stos
iret
scas
mov
inc
cli
and
pop
gs
sbb
roll
jnp
mov
cli
adcl
sbb
adc
addl
in
call
sub
data16
dec
ja
xor
inc
pop
pop
mov
sbbl
xor
cmp
push
andb
mov
or
outsb
and
jecxz
cwtl
pop
sbb
daa
inc
inc
push
push
cmpsl
adc
stos
cmc
fmul
jae
ljmp
repz
jne
clc
pop
aaa
sbb
test
push
fwait
dec
pop
dec
inc
decl
push
inc
lock
dec
leave
or
insb
inc
mov
bsr
xor
sbb
sahf
mov
cmp
jae
into
ror
mov
fwait
jg
mov
je
push
pop
xchg
outsb
andb
pop
sti
push
sub
subl
dec
cmp
cmp
sub
cmp
jl
xchg
sbb
inc
not
mov
or
add
fmuls
sub
mov
stc
lods
insl
std
pop
sbb
pop
test
int
cmc
mov
xchg
adc
push
cmp
pop
movsb
call
dec
scas
sahf
nop
mov
test
inc
jo
out
dec
inc
fcoms
stc
lahf
mov
popf
loope
clc
lds
addb
mov
xor
cwtl
mov
cmp
mov
inc
subb
cmpl
aaa
xchg
into
adc
jo
pop
lcall
sbb
dec
movsl
xor
inc
fstl
push
push
dec
or
pop
mov
jae
adc
int
sub
loop
jae
out
mov
stc
and
sbb
mov
mov
push
inc
cmc
lock
aaa
sub
xor
or
cwtl
lds
test
pop
jp
pop
jg
mov
addr16
addr16
sarb
nop
imul
jo
fnstenv
lret
sbb
push
push
pop
daa
mov
mov
ret
in
pop
loop
xor
sub
push
xor
adc
pop
dec
pop
arpl
test
lcall
orb
mov
mov
arpl
adc
add
aam
xchg
lcall
add
sub
test
pop
lods
and
je
inc
icebp
negl
adc
in
or
enter
xchg
add
scas
sub
add
hlt
sbb
sbb
or
out
jne
in
push
lods
xlat
xchg
int3
xor
in
jne
iret
or
and
mov
and
loope
bound
movl
mov
into
int3
pop
pop
lods
aam
jo
roll
cmpsl
lock
sbb
ss
mov
mov
ret
push
pop
sbb
shl
lcall
pop
and
data16
out
cmpsl
and
addr16
add
lods
add
mov
xor
std
xchg
mov
pop
aaa
popf
jae
cmp
std
push
push
or
dec
sahf
in
pop
std
push
and
jp
mov
fsin
dec
arpl
pop
xor
inc
adc
je
xor
mov
cmp
adc
rcl
xchg
inc
push
or
pop
stos
je
xor
enter
rcl
aad
xor
sub
fstpl
and
xor
aad
les
mov
cld
jbe
cli
cmpsb
sub
jno
and
jno
fnstsw
and
outsl
hlt
and
pop
fnstcw
xchg
push
and
rcrb
enter
push
inc
lods
sub
cmovns
int
in
loopne
clc
jmp
or
xor
std
or
arpl
dec
mov
repz
dec
mov
test
int
inc
or
pop
cmpsl
out
call
movsl
gs
in
xor
jne
ljmp
int3
fimuls
fs
jg
mov
and
sbb
aam
add
and
dec
jne
sub
popa
jbe
xchg
mov
sub
fdivr
je
sbb
lcall
jnp
ret
xor
inc
jae
pop
sub
adc
cs
cld
inc
dec
xor
js
in
js
in
les
emms
sahf
jg
push
in
push
scas
inc
adc
mov
cli
daa
rcrb
mov
jnp
dec
repz
out
aam
pop
cs
mov
or
push
imul
test
and
repz
shr
mov
and
loopne
jmp
and
aam
dec
fadd
mov
movb
shll
in
sahf
ficoms
inc
shrl
std
aas
stc
push
loope
xor
xor
lods
push
mov
stc
cmpsb
inc
pop
xchg
stos
mov
sti
jle
scas
test
in
mov
jge
jp
jp
jecxz
sbb
add
or
push
push
push
orb
subb
int3
out
sar
incl
pop
pop
cld
scas
dec
sub
or
les
je
and
push
xchg
and
and
adc
in
shll
ret
pop
jecxz
gs
cs
fcoms
popa
push
or
mov
gs
jmp
test
push
sub
ret
cwtl
out
mov
mov
push
mov
fisubrs
add
icebp
loopne
adc
mov
into
jbe
aas
ret
inc
testb
ja
mov
scas
fnstsw
insl
mov
out
cmp
sbb
fnsave
ljmp
mov
aad
mov
and
or
stc
fimull
xchg
dec
mov
mov
iret
es
dec
scas
push
inc
adcb
pop
imul
cmpsl
fidivl
cwtl
ret
cmp
push
mov
dec
std
iret
dec
dec
lea
mov
jmp
dec
dec
jmp
in
ret
adc
sbb
outsb
pop
jbe
lods
mov
dec
int
inc
ret
push
and
out
testl
mov
jg
mov
stos
imul
daa
outsb
mov
loopne
push
push
mov
test
loope
push
dec
xchg
mov
insb
jle
mov
rcll
add
test
in
roll
inc
mov
int3
pop
mov
mov
pop
lret
cli
popa
or
popa
les
enter
lock
push
adc
adcb
or
test
ja
idivb
push
fmuls
push
inc
mov
inc
mov
dec
jns
sti
dec
mov
test
push
addr16
mov
sub
lea
sbb
in
jns
push
pop
clc
mov
or
mov
jecxz
test
jbe
push
adc
xlat
ljmp
sahf
cmp
loop
or
data16
jmp
jge
out
xor
inc
int3
mov
aaa
lcall
stos
sahf
repnz
mov
test
inc
mov
xchg
into
xchg
sub
dec
xchg
jp
dec
push
mov
mov
xchg
pop
rsqrtps
out
les
push
mov
xor
ficoml
ljmpw
pushf
xchg
popf
out
outsb
inc
mov
pop
inc
or
je
in
lret
in
cmc
xchg
and
imul
test
inc
add
or
imul
jl
pusha
es
imul
out
mov
icebp
je
loope
xor
andb
mov
add
jns
push
jl
mov
sub
sbb
sub
cmp
inc
arpl
pop
xchg
add
xchg
scas
hlt
ljmp
out
sbb
jo,pt
jecxz
add
loopne
jae
lock
jmp
je
xor
addl
aad
pop
aas
and
rorb
fstpt
xchg
mov
mov
jmp
fld
out
roll
call
sbbl
sub
aam
sbb
sub
ja
imul
scas
cmp
fst
dec
out
fistpll
in
fs
pop
mov
mov
inc
std
je
or
das
lods
mov
loop
pop
icebp
push
clc
cmp
fsubs
inc
cmp
cmp
mov
pushf
outsb
sub
sub
bound
fsubrs
enter
shlb
rcrb
cmpsl
jle
in
shrb
lahf
sub
xlat
fldl
in
jmp
das
cli
in
lods
push
xlat
and
and
stc
imul
scas
jge
aam
dec
lret
mov
or
andb
loopne
add
das
push
xor
sub
js
je
jl
inc
mov
arpl
inc
out
aad
xchg
xchg
in
in
ja
mov
aas
adc
xor
mov
test
pop
xor
out
mov
jae
js
add
lods
jmp
pop
stos
jl
xchg
mov
mov
jg
js
outsl
sub
in
inc
or
push
cld
mov
xor
adc
or
push
add
sar
ljmp
cmp
sbb
sti
shlb
inc
pop
fwait
xor
jmp
fldenv
or
mov
mov
mov
jne
ljmp
or
pop
pushf
pop
std
popf
push
mov
lret
mov
pop
sti
cmpsl
xor
add
xchg
mulps
inc
aaa
fmulp
in
xor
or
jne
or
dec
sbb
loop
ret
or
xchg
stc
cmpsb
push
adc
mov
stc
push
push
mov
fs
std
pushf
push
imul
push
sahf
adc
fbld
adc
sbb
jp
fwait
xor
and
cmc
pop
icebp
lds
aas
iret
shlb
je
mov
add
fsubs
mov
push
sbb
jnp
rcr
loop
jnp
test
adc
or
adc
push
cmp
daa
sti
popa
and
mov
mov
sub
int
cmpsl
sub
fsubp
xchg
insl
divl
mov
sti
or
mov
clc
or
je
pop
cli
jns
popa
push
cmp
cld
out
lods
lods
pop
cld
and
mov
jmp
sbb
rorb
xchg
iret
push
pop
fdivrs
mov
imul
cltd
insl
xlat
mov
inc
mov
adc
call
cmpsb
dec
popa
inc
adc
dec
or
pop
adc
ret
sbb
add
mov
xchg
repnz
jmp
dec
inc
xlat
pusha
xor
sub
cltd
cs
cmp
popa
leave
add
vminpd
and
lahf
mov
and
idivl
inc
aaa
pushf
pop
out
ljmp
sbb
icebp
es
insl
mov
jge
jmp
xchg
inc
mov
and
jg
loopne
sbb
repz
mov
pop
xor
rcrl
dec
loope
xchg
outsl
out
sbb
push
aam
adc
push
adc
shl
popa
in
mov
adc
push
leave
jg
dec
push
inc
imull
sbb
xchg
dec
int3
xlat
push
addr16
or
insl
mov
das
divb
mov
rolb
shrb
in
or
out
or
fwait
mov
dec
xor
and
sbb
or
int3
sub
call
ljmp
add
and
mov
add
dec
stc
mov
pop
fwait
push
adc
data16
adc
jmp
js
jae
ss
and
sbb
cli
rolb
push
push
pop
dec
sti
xchg
add
ljmp
sub
negl
push
push
cwtl
cmp
jb
jl
push
adc
jp
aas
ss
lcall
push
inc
lds
or
adc
dec
jecxz
in
dec
idivb
or
outsl
xor
or
mov
or
sub
out
out
ficoml
in
cld
pushf
mov
or
enter
sub
dec
fldl
push
pop
pop
mov
rcrl
shll
rol
xchg
inc
fwait
iret
push
add
test
cmc
mov
enter
lods
inc
iret
mov
test
loopne
pop
mov
rorl
out
inc
inc
lods
clc
das
push
xchg
cmp
mov
xchg
push
incb
xchg
sbb
sbb
lods
sub
jnp,pn
cmpsb
add
loop
movsb
add
stos
ss
adc
sbb
inc
sti
xchg
addr16
jge
test
rcrb
psrlw
hlt
add
fisttps
stos
cmpsl
and
xor
jne
cmp
sub
pop
cmpb
jb
fnstcw
sub
push
pushf
loope
mov
ljmp
das
inc
dec
icebp
jne
mov
add
sbb
jge
pop
imul
jp
xor
in
adc
xchg
mov
insl
adc
sub
jge
xchg
leave
inc
push
jb
lea
xchg
andl
andb
ret
ds
outsl
adc
hlt
pop
push
xchg
sub
in
sarb
inc
cs
repz
fbstp
fdecstp
sub
mov
mov
inc
jmp
sbb
test
add
pushf
sub
sti
pop
aas
mov
push
push
mov
sub
mov
bound
int
out
push
std
enter
or
pop
pop
dec
aaa
xchg
jns
lret
stc
scas
aam
outsb
rcl
out
stos
mov
sbb
dec
adc
and
cmpsb
test
into
mov
push
mov
imul
fisttpll
push
adc
shlb
sub
test
in
adc
cmp
fidivl
ds
mov
ret
pop
push
inc
fdivl
adc
lcall
xchg
pop
fwait
xor
mov
and
clc
cmp
jl
ret
sbb
insb
jae
sub
cmpsb
ret
icebp
inc
jo
outsb
dec
adc
mov
sub
subb
mov
pop
mov
ds
lods
dec
mov
hlt
insl
into
popa
adc
dec
rcll
jmp
add
add
add
aaa
enter
pop
mov
mul
push
and
sbb
enter
adc
sbb
jecxz
jne
test
mov
fcomps
shll
mov
out
sahf
cmp
inc
cs
jge
inc
pushf
repnz
inc
adc
js
cmpsl
add
and
cmp
ss
fbstp
ret
lods
cmp
fsts
add
sbb
push
and
cli
gs
pop
mov
xchg
cmp
test
mov
stos
shrb
testl
sbb
test
xor
pushf
push
dec
pop
decb
jns
adc
enter
push
fadds
push
in
subb
sti
rol
test
or
sbb
stc
insl
dec
fsubs
fadds
dec
pop
lret
cwtl
rclb
cmp
fnstcw
out
add
cmp
and
jae
inc
adc
or
xchg
sbb
jbe
jle
jl
lods
adc
data16
mov
fidivrs
out
mov
outsb
mov
addb
sbb
and
push
pop
mov
fimull
mov
mov
or
insl
inc
xlat
mov
in
jecxz
dec
sbb
mov
orb
push
adc
jle
and
ret
pop
add
out
std
mov
mov
out
sbb
lods
cmc
fisubl
pusha
lret
movsl
fldcw
pop
pushf
scas
add
mov
sbb
pushf
jle
pop
dec
loopne
and
fcoml
lret
loopne
jno
mov
std
jp
xlat
sbb
cmp
daa
mov
xor
int3
and
lea
and
in
mov
outsl
jne
sbb
jb
dec
mov
cmp
xor
scas
dec
sbb
shrb
adc
into
sahf
xchg
in
pop
fmuls
aaa
imul
bound
add
test
cli
inc
cs
subl
mov
mov
pushl
dec
out
push
sub
or
pop
mov
fisttpll
sti
mov
mov
or
fwait
into
aam
or
ret
ret
mov
and
popf
rclb
sub
in
test
mov
ja
arpl
in
jnp
loopne
dec
rcll
xlat
lret
out
push
rolb
arpl
and
insl
repnz
sbb
pop
jp
jl
test
mull
aam
cmp
mov
and
shlb
inc
mov
sbb
sbb
xor
jb
cmpsl
call
in
sbb
imulb
push
ss
fadds
inc
mov
push
sbb
arpl
dec
push
dec
inc
push
and
loope
sub
inc
cmp
and
inc
xchg
xor
into
fcomp
loopne
and
mov
mov
push
idivl
push
sub
adc
sub
shrl
mov
enter
push
or
out
xor
push
mov
cld
xchg
xlat
stos
or
stos
in
cmp
cmp
sub
sahf
pop
mov
mov
in
icebp
cmpsl
cs
test
xor
movsb
int
add
cmc
mov
lods
sbb
mov
xchg
jl
iret
mov
lds
xor
add
gs
sub
cli
mov
pop
add
pop
nop
pop
or
cltd
into
inc
in
js
lock
jl
xlat
jle
or
jecxz
cmc
cli
cmpb
xor
or
xor
loop
addb
movsb
arpl
bound
inc
jge
into
cmpsl
sbb
adc
fcomps
aad
or
not
mov
outsl
inc
add
and
jno
loop
jns
pop
adc
loope
popa
mov
dec
lahf
push
sarb
gs
mov
fimuls
xor
mov
ret
inc
xor
sub
sbb
inc
mov
repnz
cmc
push
mov
cli
jo
mov
sbb
ljmp
scas
jp
jae
dec
mov
push
mov
mov
das
jbe
mov
pusha
test
mov
sub
sbb
jb
add
add
iret
nop
mov
shlb
xchg
movsb
gs
ds
movsl
cmpsl
push
cmc
dec
add
in
addr16
call
cmp
hlt
aas
push
sub
stos
push
jl
jo
test
or
pop
and
add
push
test
cwtl
or
pop
pop
xor
jae
adc
cmc
add
mov
jmp
mov
insl
and
mov
xor
sub
inc
jge
fsubrl
cmc
cmpsb
pop
mov
xchg
mov
xor
in
lret
sbb
pop
sahf
inc
cld
in
cmp
xchg
add
xor
hlt
jle
mov
sub
imul
out
aas
xor
inc
jge
pop
pop
in
push
mov
iret
adc
mov
lret
shr
push
lods
adc
and
loop
push
loopne
movsb
sbb
sub
repnz
sub
mov
add
sbb
jmp
cmpsl
iret
lds
bsf
or
mov
xchg
jle
into
xchg
bound
add
fiadds
lods
cwtl
mov
jae
push
in
fs
hlt
and
jl
mov
movsb
mov
aas
jp
fidivrl
xor
push
cli
xor
sbb
and
xor
lcall
xor
vunpcklps
sub
insb
add
cmovnp
mov
pop
mov
clc
mov
inc
or
mov
pop
imul
scas
push
cli
or
out
decb
pop
lret
popf
ljmp
jo
call
cmp
lcall
inc
mov
hlt
push
pop
jns
inc
pop
out
bswap
pop
jo
xor
insl
cs
adc
es
cmp
dec
push
cmpsl
fimull
push
cli
jne
pop
stc
std
push
rorb
out
jmp
hlt
cli
jb
stos
aam
sub
movsb
orb
std
xchg
insb
push
movsb
push
mov
xchg
or
ret
fs
xor
lds
in
fs
inc
and
daa
cmpsl
cwtl
mov
xorl
je
pop
sub
push
xor
cs
cli
pushf
xchg
pop
mov
dec
xchg
lods
inc
push
xor
lods
adc
jns
int
push
sarl
mov
in
sbb
cmp
lret
jne
dec
dec
ds
sub
inc
jmp
cmp
mov
mov
dec
js
seta
rcrb
divl
and
adc
inc
test
incl
outsb
sbb
cmp
mov
jecxz
dec
cmc
push
xchg
sti
idiv
sarb
xor
lods
in
das
xchg
fwait
jge
cltd
dec
jl
in
repz
push
icebp
pop
mov
push
cli
in
pop
fs
stc
rorb
inc
fildl
hlt
or
xor
inc
xlat
or
loope
sbb
xor
lock
sub
mov
mov
aaa
in
in
in
pop
push
repz
xlat
fucomp
mov
xchg
mov
mov
pop
dec
cmp
mov
mov
jecxz
int
sti
and
mov
push
add
pop
xchg
push
popa
je
outsl
pop
fidivrs
xor
add
pushf
add
stos
push
into
add
inc
movsl
mov
dec
fmuls
pop
or
lods
rcl
cmp
inc
out
sahf
pop
xlat
movsl
jbe
rorb
pop
push
sbb
mov
jo
insl
aam
cmp
ret
leave
jnp
xor
and
fcomp
out
call
push
add
mov
cmpsb
dec
and
cmp
cmpsl
lods
sub
sub
in
cmp
adc
pop
jle
or
or
and
xchg
lahf
dec
ja
in
dec
popf
jg
stos
call
ret
jg
push
xchg
cld
add
add
mov
loope
repnz
or
xchg
add
sarb
cs
mov
aad
movsl
mov
ret
mov
clc
cltd
popfw
dec
fcmovu
mov
mov
xchg
pop
add
pop
and
pusha
jge
sbb
fbld
pop
pop
imul
icebp
ficomps
hlt
ds
push
in
push
inc
sub
push
jle
test
lods
jl
jmp
loope
mov
dec
push
pop
loope
xorl
pop
rorl
cmp
push
mov
cld
jg
aam
aaa
cmpsl
add
fdiv
pop
mov
fwait
mov
addr16
cmp
push
aaa
mov
and
pop
and
push
mov
shrb
sbb
and
push
faddl
cld
mov
out
mov
aad
hlt
add
push
inc
push
cs
jno
add
lea
xchg
enter
loop
iret
inc
pop
adc
cmp
or
pop
test
rcrl
enter
sbb
push
test
into
inc
mov
push
sbb
loop
push
icebp
es
clc
inc
mov
cmc
fisubs
mov
jmp
pop
cwtl
pop
mov
mov
cwtl
mov
xlat
nop
cmc
pop
notb
scas
rcll
shll
mov
sbb
ss
sbb
enter
dec
or
jae
jno
inc
fldt
push
xorl
movsl
addr16
jnp
icebp
lea
dec
imulb
ss
sbb
add
mov
mov
rcrl
sti
call
mov
mov
outsl
inc
inc
xchg
inc
aaa
push
imul
push
scas
sub
jmp
dec
sbb
mov
xor
int
mov
and
jg
dec
nop
mov
lock
lret
mov
popa
adc
pop
movd
inc
jnp
test
dec
xchg
mov
mov
cltd
fcomps
ds
popa
stos
imul
lds
pop
jo
fsincos
mov
push
pop
je
daa
and
insl
outsb
inc
inc
mov
sub
ja
xor
aam
pop
sbb
jbe
push
sub
inc
mov
lods
movl
mov
pop
leave
fstpl
sahf
mov
iret
pop
cmp
add
fmul
cs
fdivs
scas
ret
push
push
and
dec
lret
cmpsb
je
test
dec
adc
xor
fwait
push
push
pop
jge
inc
bound
xor
jl
into
ret
scas
shlb
mov
ja
inc
mov
aaa
addr16
jo
into
add
or
push
lods
loope
lods
mov
popa
mov
pop
fsts
stos
jle
int3
mov
push
cli
xor
mov
std
lret
insb
lock
idivl
add
add
push
add
adc
into
imul
les
xor
fisubl
sbb
or
enter
sti
jns
add
inc
add
or
loope
mov
push
jg
jns
mov
jge
mov
sbb
lods
bound
fldl2e
xchg
dec
pop
out
je
cmp
mov
loopne
pop
push
push
shr
shll
sbb
push
xchg
xor
fcoml
mov
fcomi
and
nop
loopne
adc
push
les
test
sti
aad
xchg
test
sbb
fsts
lock
inc
arpl
imul
test
mov
sbb
pop
cmp
clc
outsb
and
mov
in
adc
fwait
stos
add
jns
xor
mov
cmp
cmp
bound
mov
jbe
sub
orl
or
ss
dec
push
lock
inc
cwtl
mov
mov
xor
test
and
sbb
aas
popa
mov
inc
in
mov
push
or
xchg
loopne
dec
icebp
pop
in
in
insl
or
push
fidivs
hlt
mov
sbb
and
push
out
hlt
int
mov
jmp
ret
mov
and
jp
enter
add
or
pop
sub
mov
into
sti
js
call
mov
cmpsl
adc
fcomps
sti
pop
or
jns
inc
fsubr
or
xchg
pop
mov
cmp
xor
cmpsb
out
stos
sahf
mov
jg
jle
fsubrl
repz
into
mov
sub
repnz
out
dec
clc
push
push
inc
pop
in
dec
or
clc
jl
inc
jmp
lret
mov
push
mov
jmp
je
pop
js
idiv
adc
cmp
push
and
arpl
pop
xchg
jp
clc
shlb
iret
in
cmp
lock
lock
xor
pop
sub
add
rol
or
xchg
in
loope
out
jl
jbe
out
pop
leave
out
sti
insl
scas
push
ljmp
or
aaa
leave
stos
sbb
push
paddsb
pop
aaa
icebp
add
add
rclb
push
xchg
in
mov
pushf
pop
sbb
jp,pt
mov
dec
and
mov
push
push
dec
xchg
xor
iret
repz
or
or
lret
sub
in
cs
cmp
jle
mov
mov
in
in
cwtl
cmp
pop
xchg
rcrl
push
aas
sar
rorl
leave
or
push
idivl
into
push
out
push
lcall
mov
sbb
popa
decl
inc
aam
out
insb
xchg
push
push
xchg
mov
sub
outsl
lcall
jbe
jmp
pop
stos
jge
aaa
inc
mov
or
fidivl
jp
clc
xor
negb
xchg
inc
push
inc
xchg
adc
jmp
and
pop
adc
lods
pop
mov
and
mov
call
xchg
sbb
push
push
jge
call
arpl
repnz
add
dec
xchg
push
out
imull
gs
pop
into
sbb
push
test
fistl
inc
mov
insl
insb
sub
sub
rorl
shl
ja
add
in
out
adc
mov
clc
adc
inc
cld
cmp
add
xchg
jno
rorl
cmp
cmp
cmp
scas
jns
dec
mov
fisubrl
jb
fnstenv
push
aad
test
sti
andl
pop
push
outsb
shrl
inc
or
in
xchg
dec
xchg
insb
jae
ss
adc
cld
push
int
bound
repz
and
cmp
data16
in
inc
xlat
pop
sub
filds
lcall
loope
in
sarb
cmp
fs
add
fadd
xchg
xchg
vphaddubw
jb
mov
jo
add
xchg
shlb
scas
xchg
adc
rorl
mov
push
mov
push
popf
cmp
stc
push
mov
jmp
pop
sub
pop
cmpsb
gs
inc
mov
inc
push
sub
lods
out
sub
jno
inc
insl
jg
mov
lahf
and
xchg
cwtl
adc
mov
loope,pn
arpl
int
mov
and
pop
push
xchg
pop
in
push
pop
add
mov
aas
fwait
pop
pop
pop
out
xor
dec
scas
rolb
mov
call
into
fstpl
push
add
jo
jge
mov
mov
das
jge
out
mov
push
and
mov
cltd
rcl
pop
mov
pop
cmc
sub
pop
ja
cmp
iret
mov
dec
fs
mov
popa
stos
inc
adc
lods
inc
rolb
test
mov
mov
pop
xchg
movsb
outsb
sbb
out
jge
add
out
push
mov
pushf
jge
pop
or
mov
imul
pop
nop
mov
aaa
scas
dec
je
push
adc
sub
cltd
es
xchg
jno
lds
mov
loope
adc
movsl
in
rorl
aaa
xor
ret
xchg
and
cwtl
jmp
out
xor
ljmp
fldt
in
repnz
lahf
addl
in
andl
jecxz
mov
in
popa
cmpsb
stc
fisttps
cmc
sbb
sahf
cmp
ds
adc
jp
mov
lahf
icebp
xlat
jae
pop
pop
xor
mov
jne
add
and
xchg
push
fisubrs
idivl
nop
jl
dec
mov
cmp
fdivr
dec
lret
mov
jg
xchg
cli
xor
scas
mov
ret
or
mov
aam
lret
push
xchg
cltd
mov
int
sbb
jmp
push
add
out
sets
ljmp
xor
cld
mov
pop
add
orb
or
bound
cmp
int
and
negb
bound
pop
lret
push
mov
clc
xchg
jl
scas
xlat
xchg
test
adc
and
and
cwtl
xor
cwtl
pushf
popf
int3
inc
push
jae
xlat
ja
cmp
mov
jl
icebp
jno
imul
sbb
mov
stos
insl
adc
rolb
pop
je
mov
int
sahf
inc
pop
add
mov
jae
or
sbb
cli
leave
and
ss
inc
and
lcall
xchg
inc
jbe
lret
sarb
inc
and
cwtl
jno
sbb
mov
popa
sub
iret
jns
jb
push
jbe
repnz
adc
add
es
data16
jae
addr16
nop
pop
xchg
nop
in
out
mov
fiadds
aaa
jecxz
sbb
cli
loop
or
push
push
jecxz
push
mov
ja
add
addr16
jnp
ficompl
fwait
mov
cmp
pop
in
scas
and
cmp
les
push
pusha
push
movsb
ljmp
jo
int3
orl
lcall
insb
add
sbb
psraw
push
cltd
jns
in
dec
jns
cli
cltd
lret
or
or
sub
lret
lea
sub
fistl
inc
xor
in
jne
jl
jp
or
xor
inc
push
sub
add
test
xchg
cmp
push
mov
arpl
enter
in
and
push
push
subb
data16
pushf
sbb
sbbb
mov
rclb
adc
mov
call
jg
test
adc
int3
adc
fcomi
jo
push
mov
push
push
imul
ss
out
out
inc
scas
inc
int3
nop
dec
aaa
xchg
or
icebp
cmpsl
cltd
cli
arpl
rol
xor
pop
lahf
out
movsl
push
or
mov
fdivl
mov
fisttpll
nop
in
rolb
and
ror
mov
sub
pop
icebp
sub
cmpsb
adc
sub
fwait
pop
adc
pop
push
inc
dec
les
je
arpl
les
sub
sarb
mov
adcb
imul
cli
in
pop
nop
loopne
adc
shll
cwtl
mov
jge
pop
es
loopne
mov
jae
es
jne
cmp
out
loop
dec
add
cli
aam
xchg
mov
pop
xchg
inc
addr16
push
and
fisttps
inc
enter
mov
pop
in
iret
mov
push
inc
cmpsb
inc
cmpb
sub
jbe
and
in
xor
aas
cmpsb
cld
push
lahf
scas
out
cmp
and
sbb
or
pop
xchg
and
aad
fbstp
mov
ds
cltd
pop
add
in
loop
fsubp
shll
pushf
lcall
mov
mov
flds
std
mov
test
in
icebp
pop
pop
cmpsb
stos
repz
jnp
shl
jl
ror
mov
jp
inc
bnd
fildll
dec
shll
mov
mov
or
pop
jo
fisubs
jno
loop
jae
add
add
fadd
mov
cli
and
and
mov
je
arpl
adc
daa
and
or
scas
xchg
mov
enter
mov
cmc
sbb
cmpl
insb
sub
jbe
push
or
sahf
push
in
xor
xchg
pusha
inc
cwtl
xor
mov
inc
addl
adc
mov
stc
ljmp
mov
ror
in
jp
shl
and
or
jmp
js
or
and
lods
sub
mov
aaa
xchg
adc
dec
aad
jge
out
cli
ljmp
and
and
push
aam
data16
cwtl
pop
push
mov
orb
fiadds
mov
pop
pop
movups
xchg
lret
dec
sahf
sbb
pusha
ficoml
lret
sti
test
shll
sbb
sbb
jns
ficompl
mov
lea
pop
ja
fsubl
mov
dec
mov
add
dec
sub
jmp
fwait
or
mov
leave
and
fisubs
outsl
mov
or
push
jecxz
adc
jmp
lods
test
dec
pop
xchg
je
movsl
movsl
mov
push
or
out
mov
or
mov
inc
stc
mov
and
dec
sbb
pushf
fdivl
inc
ret
pop
push
dec
xchg
fcmovb
aad
add
dec
dec
xchg
mov
dec
inc
mov
mov
das
leave
std
dec
loop
ss
mov
jns
out
sub
jbe
and
sbb
mov
pmaddwd
xor
push
mov
out
lods
sub
adc
je
cmpsb
jl
inc
xchg
lods
iret
cmp
imul
sbbl
xchg
xchg
movsl
fwait
cmpsl
out
jo
jge
cld
das
stos
scas
push
pop
add
rolb
fstpl
push
scas
and
push
pop
cmp
push
stc
ret
add
repnz
aam
or
push
mov
sbb
xchg
and
lds
aaa
xchg
xor
pop
js
pusha
xlat
mov
js,pt
mov
sti
data16
aad
loopne
adc
lahf
fistps
jg
push
fwait
add
scas
lahf
mov
push
testl
mov
shlb
inc
push
lock
test
inc
or
jmp
lret
fwait
lock
jnp
insl
lods
jo
jp
sbb
mov
sub
rolb
je
sbb
pop
pop
cld
pop
hlt
cmp
add
pop
pop
ljmp
mov
in
cwtl
pushf
mov
movlps
cmp
sub
jmp
movsb
fadds
jae
loop
lcall
aaa
cmc
dec
out
adc
lcall
push
dec
stos
cmp
call
ds
add
ds
pop
imul
pop
pop
dec
push
popf
lock
jbe
jb
movsb
out
testb
and
cmp
mov
jns
arpl
ljmp
aam
mov
mov
dec
out
stos
gs
pop
test
mov
xchg
lock
test
mov
add
adc
cmp
fsubl
dec
pop
dec
mov
adc
adc
pop
stos
movsl
push
insl
jmp
cmpsl
cmp
cli
xlat
jnp
jl
lds
inc
shlb
mov
sub
dec
stos
daa
xchg
stos
ljmp
mov
push
cmp
xchg
fisubs
es
aam
test
cmp
xchg
ret
mov
ds
in
and
shl
mov
sbb
sti
test
popf
into
push
pop
pop
in
add
out
lahf
icebp
or
xor
fsubrp
outsl
inc
and
test
xlat
rorl
push
mov
in
mov
cmp
stos
imul
aad
mov
pop
jp
pop
fwait
mov
scas
lret
xchg
fs
imul
subl
shl
sbb
out
jmp
xor
xchg
mov
dec
in
call
sbb
inc
cwtl
mov
insb
mov
xchg
xchg
das
xlat
aad
jle
popf
and
mov
cmp
outsb
insb
ficoml
push
mov
and
lock
lods
int
jbe
orl
in
sbb
clc
jne
popa
add
pop
xorl
jae
add
fidivrs
icebp
leave
ljmp
flds
add
mov
out
data16
daa
inc
mov
test
sub
loopne
add
inc
sub
xchg
and
dec
add
dec
shrb
notb
je
outsl
and
adc
dec
mov
cmp
or
xchg
movsb
clc
push
addr16
add
fldcw
popf
arpl
pop
mov
jp
leave
stc
movsb
pop
jg
push
jnp
mov
push
add
mov
jge
xor
jl
mov
mov
or
repz
add
mov
jl
cltd
mov
jae
adc
xchg
dec
push
test
push
xchg
mov
add
stos
pusha
mov
ds
int
adc
jecxz
ret
push
pusha
inc
imul
and
mov
insb
push
std
shlb
mov
mov
ss
xchg
sti
ret
dec
jno
push
inc
popa
vpaddusw
jp
fldenv
pop
imul
inc
ret
outsl
adc
cmp
add
in
add
enter
adc
test
hlt
sbb
xor
inc
lods
pop
repnz
inc
pushf
inc
pop
add
fdivs
mov
in
sub
leave
hlt
out
and
dec
addr16
mov
test
jo
rcrb
jb
out
hlt
out
stos
jp
repnz
adc
xor
sarl
mov
pusha
adc
ficoml
pop
mov
fdiv
call
add
in
fmull
ds
popf
in
or
mov
addr16
shll
fstpt
andl
pop
jmp
dec
out
aad
mov
neg
mov
fnstsw
pop
cmp
iret
inc
cld
ss
dec
add
jne
ret
call
movsb
movsl
adc
or
aas
mov
fisubs
mov
xchg
add
xor
aas
jmp
loop
xchg
jbe
cmp
cli
add
inc
add
pop
popf
stos
push
cwtl
fcmovne
adc
dec
fdivs
push
dec
mov
fs
adc
das
lea
jb
lods
addr16
ljmp
and
test
leave
adc
in
das
arpl
les
sub
aaa
and
dec
xchg
mov
mov
mov
rorl
jnp
and
xor
jns
xchg
and
shll
cmpsl
add
aad
sar
or
xor
sbb
xor
and
mov
sbb
pushf
pop
inc
sbb
xor
xor
fucomp
xorb
push
mov
mov
cmp
dec
push
add
int
enter
ret
test
leave
and
mov
sbb
xlat
aaa
inc
test
jp
mov
out
mov
push
cmp
dec
xor
pop
lret
push
int
lcall
xchg
inc
inc
out
popa
add
aam
hlt
xor
jge
out
gs
out
push
sbb
fisubl
xchg
mov
hlt
inc
stc
pop
fistpll
in
and
hlt
sub
mov
adcb
cmpsb
mov
xor
push
out
xchg
jne
pop
xor
rorb
pop
lret
loopne
dec
and
fs
mov
sti
mov
sbb
lds
mov
jle
mov
filds
fistpll
pusha
lret
mov
daa
shll
flds
inc
lahf
xchg
sub
adc
add
sub
iret
jle
scas
xchg
lods
push
cmp
les
push
push
out
add
mov
xchg
mov
or
popf
pop
mov
sti
mov
xchg
cmpsl
lret
add
std
shlb
repz
jae
push
jb
outsl
xchg
cld
add
push
ss
sub
cmp
jnp
icebp
aad
popa
sarb
push
loope
mov
shll
jmp
push
mov
shll
sub
xor
or
cmp
aad
movsb
jmp
and
pop
fsubl
fisubl
pop
daa
jmp
jmp
loop
sub
out
pop
clc
mov
mov
dec
aaa
fs
jmp
shll
outsb
lods
and
ja
jp
xor
fsubrs
addb
add
cmp
or
mov
add
add
lcall
pop
mov
addr16
fsubp
and
dec
push
mov
mov
loope
ljmp
stos
mov
sbb
in
pop
inc
testl
jle
testl
andb
sbb
or
movsl
sbb
cltd
mov
shrb
loopne
outsl
iret
pop
inc
pop
lods
outsb
sub
out
inc
outsl
in
mov
loop
hlt
data16
std
cs
cmp
je
jbe,pn
mov
mov
ror
push
cmp
test
icebp
leave
adc
or
mov
jb
insb
aaa
lea
call
out
inc
sahf
imul
jo
add
adc
mov
push
int3
rclb
sub
cs
add
aaa
ficompl
test
sbb
movaps
adc
jl
cltd
scas
addr16
aam
hlt
sub
sahf
inc
mov
sti
or
add
inc
or
adcl
lcall
inc
cmpsb
js
mov
xor
popf
daa
pop
inc
fisubs
mov
fiadds
stos
jb
or
sub
mov
in
shl
je
lock
push
sarb
stc
xor
scas
neg
scas
inc
outsl
xchg
mov
cmpsb
adc
fldl
rclb
insb
dec
pop
pop
ret
out
and
inc
jnp
in
dec
mov
mov
add
shll
jecxz
add
shrb
sahf
fdivl
arpl
mov
cwtl
popf
out
mov
pop
lea
scas
push
jnp
lds
sbb
pop
cmp
xchg
inc
mov
shr
and
pop
sbb
call
pop
andl
int
inc
jg
inc
sub
and
or
pop
sub
repz
ret
mov
aas
int
ds
inc
xchg
loop
cli
mov
or
imul
std
pop
paddw
lods
sub
stos
jns
xor
mov
adc
pushf
lret
lods
mov
lcall
imul
pop
fsts
and
imul
adc
std
xchg
mov
mov
scas
xor
sbb
inc
adc
xchg
sub
jecxz
aad
cmp
in
stos
push
pop
jecxz
and
js
or
xor
and
pop
mov
mov
push
xchg
aad
inc
add
or
dec
fwait
push
iret
stos
push
mov
sbb
pop
push
mov
sbb
inc
add
scas
push
add
jl
mov
xor
loopne
test
pusha
push
jns
out
cmp
fstpl
xor
das
lds
sub
pop
fiadds
test
addb
jno
add
fimuls
leave
mov
jb
xor
dec
addr16
lret
xorb
and
aam
aam
outsl
add
setnp
int
adc
sbbl
mov
dec
xor
lock
and
or
fstps
xor
loopne
out
adc
pop
repz
mov
push
mov
sbb
sbb
and
sbb
inc
insb
jg
ljmp
adc
lret
mov
movl
mov
sub
pushf
bt
movsb
imul
inc
or
hlt
pop
push
pop
mov
cmp
mov
into
mov
call
adcb
or
scas
dec
sub
sbb
xchg
jbe
shlb
xor
pop
xchg
jle
les
data16
push
push
push
mov
xor
test
add
cltd
iret
outsl
shrb
mov
cmp
lcall
dec
fcom
or
pushf
xchg
pop
or
stc
xchg
sub
subl
ret
add
pop
pop
xor
dec
hlt
insb
mov
sbb
imul
jno
pop
movsl
mov
test
jg
rolb
cmp
cmpsb
xchg
inc
mov
sub
cs
sub
or
pop
cmpsl
mov
rcll
outsl
int
push
xchg
or
adcb
call
cmpsb
mov
inc
lods
inc
mov
xchg
add
dec
push
mov
fisubrs
sti
repnz
mov
xchg
mov
dec
xchg
pushf
jae
in
cmp
cltd
lea
xchg
loope
cwtl
das
clc
mov
inc
inc
jae
dec
xchg
jg
in
add
ret
and
pop
cmp
test
dec
push
mov
cmpl
or
lcall
scas
add
outsb
outsl
pop
ljmp
mov
push
rcr
rcll
pop
hlt
in
sbb
mov
cmp
fldt
lods
ficoml
je
loope
lret
stc
ja
lods
jge
sub
stos
mov
fs
les
jo
sbb
jo
or
mov
dec
pop
popa
leave
fdivrl
sbb
push
mov
cmp
pop
xor
mov
cltd
or
out
mov
movsb
mov
xor
xlat
and
or
sbb
ljmp
mov
jmp
mov
jbe
push
iret
sahf
stos
pop
mov
add
mov
adcb
mov
and
and
mov
aas
es
xchg
lock
push
in
jge
js
xor
mov
cmp
sub
pop
mov
out
fstps
and
icebp
sbb
pop
sarb
pop
sbb
int3
mov
getsec
test
mov
sahf
jg
lret
xlat
xchg
dec
clc
ficompl
push
inc
pop
hlt
cmp
das
test
push
or
and
xlat
test
push
test
cmpb
cltd
in
inc
std
sbb
sar
int3
bound
sbbb
aas
cs
je
fmull
addr16
addl
outsl
push
sbb
in
aaa
and
rcrl
jno
pop
je
roll
stos
push
push
mov
aaa
shrb
xchg
sub
inc
xor
inc
jmp
fistps
cmp
bound
lret
sub
adc
sub
dec
mov
loopne
lret
inc
pop
lea
or
xor
incb
sbb
clc
pop
and
pushf
aam
scas
xor
mov
dec
dec
arpl
lcall
test
test
xchg
dec
mov
pop
xchg
or
repz
inc
sub
sahf
adc
lret
addps
je
jno
mov
mov
sub
add
insl
bound
lock
inc
scas
jnp
cld
ss
and
dec
push
dec
jecxz
jmp
das
and
cmp
mov
mov
in
pop
in
sbb
lret
loope
loope
in
imul
cmp
mov
mov
jno
cmp
push
repnz
mov
enter
add
mov
jo
cmp
loopne
imul
daa
adc
sti
sub
mov
jmp
in
outsl
mov
xchg
cmc
shlb
and
inc
push
cmpsb
adc
shlb
sub
cwtl
sbb
shrb
pop
enter
cmp
std
jge
inc
imul
adc
fistpl
repnz
xchg
nop
jg
js
imul
scas
stos
inc
je
mov
mov
shrb
xor
inc
mov
inc
adc
aaa
sub
dec
pop
cmpsl
out
popa
pusha
ja
into
and
sahf
aaa
mov
pop
and
mov
cmpsl
ljmp
mov
inc
dec
aad
xchg
push
pop
fisttpl
xchg
sahf
fidivl
fcmovbe
jecxz
movsb
jg
jo
mov
sbb
adc
loop
push
fs
add
fistpll
lea
sahf
test
jne
mov
sarb
stos
xchg
add
mov
gs
push
pop
outsl
rcrl
push
sahf
dec
xlat
push
jg
xchg
push
test
xchg
xlat
loop
push
xor
xchg
cmp
mov
xlat
pop
cmp
into
and
push
enter
mov
data16
stos
pop
push
or
mull
aas
aaa
adc
adc
test
shlb
dec
fadd
stos
jne
pop
mov
int
outsl
mov
hlt
jne
cmp
shrb
rcrb
ds
pop
add
iret
fbld
xchg
testb
pop
inc
rcl
lods
xor
dec
xchg
cmp
push
cmp
adc
inc
loope
sbb
push
xlat
stos
into
bound
jle
jnp
ret
xor
mov
int
and
test
inc
dec
test
cmpsb
or
in
js
dec
inc
fs
shll
jne
inc
cli
and
or
inc
in
mov
and
xchg
xchg
push
cmpl
rcll
adc
fmuls
ss
sbb
scas
pop
and
xlat
or
add
xchg
das
fstpl
adc
pop
mov
adc
jns
leave
lds
iret
test
mov
sbb
add
add
ljmp
rcl
les
ss
push
testl
insl
sbb
insb
sbb
std
or
cmc
stos
pop
nop
xchg
pop
lret
mov
arpl
inc
mov
enter
insb
fldenv
clc
lahf
insl
gs
test
pop
mov
cmp
jmp
fldenv
add
popa
sbb
jne
mov
std
xor
pop
sbb
dec
sbb
lea
sbb
test
jl
inc
stos
inc
loopne
ret
mov
push
cmpsb
mov
clc
add
cmp
jge
inc
stos
sub
andb
pop
fs
lcall
fwait
dec
inc
pop
sub
popf
pusha
dec
lret
lods
jecxz
xchg
cmp
inc
cltd
xor
cmpsl
cld
cmp
dec
jge
repnz
test
push
push
sbb
std
loopne
js
inc
test
je,pt
sbb
pop
out
inc
pop
sub
cld
cmp
dec
jmp
xor
mov
and
stc
clc
add
lcall
sahf
cmp
sti
in
add
dec
inc
sbbb
xor
ss
or
or
pusha
lds
cmpsl
adc
cmc
mov
dec
mov
mov
fdivr
jle
jg
mov
bnd
mov
pop
sti
ds
imul
mov
push
int
addl
daa
sbb
fwait
cmc
add
pop
bound
adc
iret
popf
or
stos
dec
add
and
mov
mov
imul
inc
fdivrs
test
je
mov
scas
stos
pop
out
fwait
aaa
sub
xor
xor
icebp
aam
clc
sbb
add
push
push
or
int
add
repnz
outsb
cli
shrl
fs
mov
jns
shrb
rcr
push
scas
or
fmuls
jg
shll
sbb
loop
addr16
jmp
cwtl
dec
hlt
dec
test
jecxz
push
adc
jne
fs
fldcw
cmp
push
call
test
aad
test
sub
xchg
sub
lahf
call
mulb
test
jno
pop
rcl
xchg
ftst
mov
sbb
insl
mov
inc
daa
ffree
cmpsb
jecxz
push
lret
inc
or
repnz
das
out
insb
mov
dec
lahf
jno
ret
scas
xchg
sarb
mov
clc
std
inc
mov
mov
adc
js
fnstcw
das
jg
inc
adc
mov
addr16
sbb
loop
ds
inc
jae
or
and
leave
push
jae
es
mov
scas
jmp
jae
rorl
cld
cmp
scas
jbe
jb
jg
hlt
ror
psrld
out
lret
xorl
dec
inc
mov
mov
mov
pop
and
dec
cmpb
inc
sbb
test
push
or
lret
push
movsb
adc
and
jo
xchg
outsb
cmp
int
push
shrb
scas
dec
adc
mov
adc
mov
sub
loopne
arpl
pop
mov
push
inc
test
push
pop
bound
cmp
inc
stos
sbb
mov
or
mov
aam
xlat
xor
lods
popa
or
insb
pop
repnz
jmp
int
push
xchg
sbb
dec
ficomps
sbb
outsb
fisttps
movsb
mov
jl
pop
mov
aam
adc
or
lret
bound
fldenv
jae
addr16
push
int
push
ficoml
pop
insl
push
fdivrl
push
mov
and
or
daa
sbb
addr16
cs
adc
pop
jb
xor
adc
outsl
dec
pop
lret
xchg
adc
jnp
std
jle
mov
add
movsl
test
test
bound
mov
jge
rorb
icebp
je
inc
lahf
scas
scas
sub
jns
ret
mov
nop
mov
iret
xchg
push
add
jo
sbb
nop
pop
pop
es
insl
test
stos
push
bound
jp
inc
xchg
adc
addr16
mov
popa
daa
mov
sub
jle
xchg
cltd
dec
repz
adc
mov
mov
out
cmc
jo
inc
cmp
sbb
cmp
dec
or
enter
add
jne
stos
xchg
call
and
outsl
cmp
addl
mov
mov
outsb
add
push
sub
je
xor
cltd
xchg
lds
mov
push
mov
jl
jne
ja
js
mov
sbb
les
ds
repnz
adc
mov
jmp
push
jl
mov
xchg
jae
pusha
mov
aam
add
xchg
adc
popf
pop
lret
fidivrs
cmp
loope
adc
fwait
testl
lods
pop
sbbb
test
pop
stc
lahf
mov
cli
gs
test
ljmp
jne
or
aam
jno
dec
xor
ficoms
or
lretw
inc
sbb
int3
ror
divb
lods
out
popf
xor
cmpsl
int
sbb
and
mov
das
out
gs
jae
sbb
cmp
dec
or
dec
je
sti
xchg
or
and
xor
push
and
test
rcrl
dec
xchg
xchg
sub
jae
fisttpll
push
andb
loop
or
mov
or
cmc
jmp
cmp
add
pop
xorl
add
pop
ret
loope
int
mov
inc
clc
iret
jl
dec
xlat
lods
add
adc
mov
jmp
nop
add
mov
ljmp
pop
test
pop
test
or
dec
jnp
cs
xor
inc
sbb
and
mov
clc
shll
mov
jne
outsl
cmpsb
rcrb
fcoms
sub
inc
outsl
out
pop
mov
mov
lret
mov
jnp
int3
or
cmc
aaa
out
sub
test
fistpll
inc
mov
psubw
add
mov
mov
jmp
inc
sahf
add
push
enter
inc
ret
cmp
dec
insl
sbb
jo
sub
or
lahf
mov
sub
sub
dec
aaa
xchg
xor
adc
bound
cmc
adc
loope
in
std
sub
or
sbb
jne
pop
leave
daa
and
inc
repz
xor
push
xchg
and
or
shlb
sub
lods
fldenv
jge
mov
inc
inc
pop
dec
push
imul
push
push
stc
aam
adc
push
push
sahf
mov
loop
and
faddl
sbb
cwtl
lret
pop
mov
iret
or
mov
sbb
push
sbb
je
loopne
sub
mov
test
mov
cmpsb
sub
shlb
repz
pop
push
fwait
cmp
dec
jns
jae
xchg
sub
fsubrs
stc
insl
imul
add
fidivl
imul
xor
jl
mov
and
lock
popf
clc
fdiv
call
fldcw
mov
push
cmpsl
pop
jge
jnp
test
mov
popa
cmp
mov
or
pop
out
mov
jns
inc
dec
cmp
mov
xlat
xor
inc
mov
xor
mov
out
xor
ljmp
fsubl
add
adc
scas
xchg
lahf
mov
shl
and
getsec
call
mov
sbb
jecxz
xor
sub
push
xor
mov
push
je
cs
jbe
adc
inc
popa
xchg
sbb
daa
mov
repnz
out
and
sub
mov
test
mov
div
inc
jns
push
cmc
ds
xor
ds
hlt
mov
mov
loopne
mov
aam
fidivrs
xchg
std
test
jns
out
sub
divb
pop
testb
sbb
subb
stos
push
and
and
leave
xchg
in
dec
mov
testl
push
movsl
xchg
push
xchg
cli
sbb
imul
pop
jle
jnp
ja
rorb
stos
sub
aaa
mov
dec
jno
jg
jno
inc
int3
es
cmc
mov
cs
xchg
mov
sub
insl
pop
xor
lods
jb
std
pusha
mov
add
iret
pmulhw
and
nop
push
sub
ja
js
and
and
jge
cmp
repnz
repz
sbb
test
pushf
movsl
repz
jg
add
sahf
sldt
xchg
test
xor
inc
push
hlt
call
jns
insl
rcrl
cmpsl
jle
mov
leave
jp
or
das
movsb
andl
loope
ljmp
xchg
je
mov
ss
push
inc
loop
subb
popf
outsb
adc
mov
jl
push
push
mov
mov
add
popw
push
fnstcw
lods
daa
out
xchg
ljmp
sub
stc
sub
out
jbe
push
add
cmpb
scas
scas
cmp
call
test
mov
pop
fiadds
sub
or
adc
cs
sub
into
push
mov
sub
popa
mov
inc
cs
mov
dec
and
stos
loope
aam
loop
mov
xchg
shll
cmc
push
xchg
jge
sti
push
mov
nop
pop
dec
mov
xchg
sbb
xor
mov
and
jns
aad
sub
adc
mov
lcall
fisubrs
push
das
outsl
and
jae
rclb
mov
cmpsb
rorb
inc
jo
mov
pushf
lret
imul
loope
mov
popf
decb
inc
daa
xchg
cltd
dec
or
testl
cmp
andb
pop
mov
or
mov
or
cmp
inc
xchg
sbb
cmp
jg
xor
insb
mov
pop
or
xchg
dec
cli
roll
repz
rorb
adc
dec
fisubl
push
or
jl
repnz
outsb
call
dec
push
mov
push
lods
mov
stos
mov
movsl
push
ds
int3
scas
ret
inc
xor
inc
xor
cmpsl
adcl
dec
jbe
inc
mulb
movsb
popf
inc
ja
arpl
repnz
mov
cli
jge
out
sub
jecxz
cmp
push
and
xor
ret
mov
scas
cmp
cltd
and
les
repz
fimuls
lret
and
sub
imul
popa
test
hlt
cmp
icebp
pop
jne
cmpsb
or
xlat
xchg
fdiv
movl
jle
xchg
ret
and
mov
into
aaa
outsb
dec
addr16
jge
scas
add
push
test
xchg
xor
ss
lea
movsl
push
xchg
clc
xchg
adc
jge
rsm
mov
repnz
rcll
push
cmp
clc
lret
mov
sbb
mov
lret
pop
stc
in
lahf
pop
jmp
cltd
jne
jb
inc
out
push
dec
pop
pop
cmpb
cmpsl
cs
ret
and
pop
push
mov
lods
lock
popf
aaa
fadds
adc
add
mov
cmpl
jnp
xchg
jbe
repz
int
and
fidivrs
fsts
sub
sub
cmpsb
das
adc
sbb
dec
mov
repnz
out
pushf
inc
ret
or
mov
xchg
dec
inc
fs
fs
ret
sahf
mov
pop
mov
mov
je
xlat
fadds
fcmovbe
mov
dec
push
sahf
push
cmp
pop
or
add
std
imul
cmc
rclb
leave
vcvtsi2ssl
stos
stos
xchg
popa
pop
pop
mov
sbb
mov
mov
cld
pop
mov
inc
cwtl
test
sub
dec
sub
mov
sub
xchg
fisubrl
jnp
daa
cmp
jecxz
out
ljmp
sti
and
jge
jl
xchg
dec
inc
hlt
mov
cmp
add
lcall
adc
addl
mov
adc
js
jle
sti
cli
aaa
int3
push
sub
jle
icebp
fiadds
addb
std
or
outsl
notb
lret
mov
push
or
popf
lahf
mov
adc
adc
jb
lahf
sub
pop
pop
adc
stos
mov
clc
or
ljmp
mov
sahf
fcompl
adc
fcoml
out
pop
jae
sub
jo
xchg
pop
pop
push
dec
add
add
push
add
xorl
cmpsl
movsb
invd
cmp
int3
add
mov
popa
add
test
fptan
ss
mov
cmp
sbb
jbe
pop
adc
sahf
out
sub
push
mov
ficoms
shlb
adc
out
or
cmp
xor
lret
dec
ret
sbb
aam
mov
mov
xor
xacquire
clc
jae
lods
jne
cmpsb
inc
iret
repz
push
mov
jnp
add
mov
test
dec
or
or
shrb
popf
mov
pop
or
in
inc
xchg
mov
cmp
data16
bound
sub
jne
fcmovbe
ss
xor
mov
push
sahf
mov
xchg
push
pop
int3
iret
inc
mov
and
cmp
gs
pop
shll
adc
fadds
popa
lock
les
popf
into
int3
es
stos
adc
jbe
cmp
xorb
out
push
shr
sub
mov
xor
and
dec
int
jmp
imul
inc
scas
mov
inc
mov
outsb
stos
out
push
cmpsl
pop
out
dec
insl
lret
mov
movsb
xchg
mov
rcr
icebp
cli
adc
nop
stc
inc
xor
xor
push
mov
add
addl
enter
pop
movl
mov
or
mov
fcomi
jbe
dec
idivl
arpl
repz
nop
push
mov
sbb
sarl
movsl
test
outsb
jae
cmpsb
in
xchg
jmp
cmc
mov
loope
fldenv
icebp
inc
insl
shll
xchg
dec
outsl
inc
movsl
mov
mov
fwait
xorb
mov
push
cltd
sti
outsb
std
jmp
call
jno
pop
pop
sbb
stos
xchg
inc
cmp
stos
addr16
psubusb
adc
lds
add
adcl
insl
dec
outsl
enter
or
jp
mov
scas
lret
gs
add
dec
pushf
gs
or
mov
add
jmp
movsl
mov
xor
addl
mov
jno
lret
dec
nop
ficompl
pushf
or
dec
pop
jge
pushf
clc
push
sub
pop
adc
ss
cmp
lret
mov
daa
mov
mov
push
dec
mov
fldenv
mov
sub
mov
insl
negb
int
add
lea
push
mov
push
mov
push
pop
mov
mov
pop
and
int3
jno
mov
sbb
sti
mov
pushf
loope
mov
pusha
lds
mov
imul
push
dec
xor
mov
cmp
mov
sub
sbb
outsb
mov
sahf
out
mov
in
adc
mov
popf
outsl
lods
push
inc
sub
jmp
sahf
dec
pop
inc
pop
xchg
je
cwtl
out
loopne
addb
xor
cmp
incl
outsl
sbb
popl
rcll
lods
aam
mov
fldcw
into
push
popa
and
push
mov
inc
das
and
cmp
imul
es
and
sahf
and
fidivl
iret
aam
fnstenv
push
aas
lods
push
push
or
push
je
loope
lock
or
cli
dec
sbb
or
push
cmp
pop
cli
add
cs
adc
mov
jge
add
cld
xor
jg
inc
in
inc
push
mov
sub
rolb
cmp
xchg
and
push
outsl
mov
lock
push
lret
pop
fldt
dec
into
rcl
dec
jo
xor
sbb
mov
dec
push
ret
inc
aas
jne
adc
jno
dec
adc
inc
pop
cwtl
imul
sub
xlat
dec
popf
or
dec
dec
mov
push
mov
pop
dec
dec
iret
in
lret
inc
clc
mov
mov
mov
cmp
mov
fisttpl
push
cs
les
aad
aad
ds
lds
iret
lock
dec
sbb
and
jge
lcall
bound
jl
inc
clc
pop
xchg
dec
loope
push
add
pop
sub
jl
enter
sbb
outsb
sub
addr16
aad
in
imul
nop
lahf
push
loop
mov
xor
push
push
inc
pushf
loope
xchg
fs
rclb
addl
into
or
shll
fiaddl
ljmp
push
cvtps2pd
in
leave
jbe
test
add
bound
push
ficompl
je
fldenv
dec
mov
cmp
push
mov
sub
mov
roll
subl
rcr
popf
loope
push
popa
adcl
mov
dec
xor
enter
mov
rcrl
sbb
data16
xor
sbb
mov
pop
jo
add
dec
adc
sub
xchg
lods
pop
dec
orl
lea
sbb
aas
lods
mov
js
push
mov
sub
dec
inc
jb
jecxz
mov
lock
popa
das
mov
push
inc
lea
mov
movsb
xchg
cli
add
pushf
mov
je
push
jb
in
sbb
xchg
cli
pop
lods
in
or
das
movb
xor
push
push
or
xchg
mov
scas
inc
fldpi
xchg
shrb
insb
pop
dec
cli
lcall
mov
cmp
push
vpunpcklwd
ret
jb
ret
xor
cli
push
mov
fcom
push
adc
test
sbb
xor
fidivrl
das
arpl
jns
inc
sub
and
mov
in
movsb
sub
adc
lods
loopne
mov
or
adc
flds
shll
add
bound
pop
pop
das
xlat
pop
repz
popa
int3
dec
in
or
or
mov
loop
sbb
fisubl
xchg
cmpsb
add
aad
cmpsb
fidivl
sbb
inc
rolb
sti
mov
and
icebp
lds
mov
sbb
aam
adc
lock
imul
lds
adc
mov
pop
jbe
xor
pusha
xor
nop
shl
stc
fdivrs
stc
jecxz
jp
xor
lea
je
pop
jno
pop
xor
cmc
repz
mov
fs
cwtl
inc
mov
leave
bnd
mov
dec
lea
and
cmp
sbb
das
mov
push
jge
cmpsb
mov
fcmovnb
insb
fisubrl
push
std
pusha
jmp
aas
mov
jecxz
arpl
std
stc
pop
fiaddl
xchg
mov
repnz
lcall
push
cltd
mov
or
enter
test
and
mov
inc
mov
outsl
pop
xor
xchg
adc
xchg
sbb
in
stos
xchg
add
inc
lret
dec
jns
pushf
stos
dec
xchg
je
add
insl
data16
add
int3
cmpb
lds
mov
clc
add
mov
fbld
jge
jge
pop
insl
sbb
movsb
mov
das
xor
test
std
movsb
jle
or
test
or
pushf
pushf
hlt
es
fidivrl
fidivrl
lret
mov
sbb
aas
out
push
imul
sub
js
stos
push
mull
or
std
xchg
push
or
pop
mov
mov
xchg
mov
orl
leave
das
mov
fdivr
inc
shlb
test
add
pavgw
lcall
js
push
into
leave
les
push
inc
xchg
leave
and
in
sub
xchg
pop
inc
movsb
shll
cld
call
cmp
pushf
rclb
sub
out
fstps
push
fistpll
fld
stos
in
or
or
mov
mov
add
cwtl
adcl
push
movsl
xchg
loop
ljmp
sbb
sbb
jns
xlat
insl
or
add
mov
scas
inc
ljmp
dec
sti
outsl
dec
call
xchg
shl
mov
mov
cmp
sbbb
mov
mov
push
inc
stos
mov
xor
lahf
inc
xchg
in
cmp
adc
test
add
cld
xor
pop
push
jne
xor
push
sbb
aas
bound
roll
or
dec
addr16
insb
sub
dec
and
lock
sub
or
and
mov
andb
mov
test
in
aad
add
imul
gs
int
pop
mov
ficoml
lods
and
xchg
std
fsubl
lods
inc
addr16
imul
add
je
aaa
mov
outsl
inc
and
jno
adc
cmpsb
stos
add
iret
cli
js
aad
stc
enter
into
jge
inc
movb
cmpsl
jle
sbb
jo
popf
hlt
cmp
and
xchg
aad
jne
fs
insb
mov
mov
mov
in
dec
fldenv
lock
loop
mov
adc
outsl
subb
out
out
in
pop
push
nop
push
cmp
inc
ljmp
add
jge
sbbb
out
add
xor
lea
cs
int3
test
or
out
cmpsl
sarb
xchg
xchg
arpl
pop
mov
scas
icebp
rcl
xchg
sar
divl
fistps
out
cmp
js
pop
jmp
aad
add
xchg
cltd
test
jbe
push
mov
cmp
pop
jb
sbb
sub
loop
fwait
jno
push
pop
mov
mov
adc
iret
lds
idivl
xorl
dec
aas
jno
dec
ficomps
or
sub
lret
inc
call
stc
xchg
mov
xor
and
sub
mov
in
insb
outsl
pop
xor
iret
insb
data16
lea
add
outsb
inc
cmpsl
lock
ljmp
sbb
test
mov
out
out
movsb
mov
adc
jmp
pop
push
jg,pn
and
out
popa
pop
adc
push
cmp
add
imul
xchg
adc
push
mov
mov
out
call
or
fcomp
mov
xchg
pop
dec
jmp
jmp
inc
rcrb
imul
push
pusha
shr
jecxz
es
mov
test
dec
jp
fnsave
daa
fnstenv
fdivrs
jo
mov
scas
mov
jo
fucomp
xchg
mov
cmc
cmp
jmp
cmpsb
xchg
movsb
inc
mov
lcall
xor
test
pop
push
cmpsb
mov
dec
push
lock
mov
mov
push
aas
mov
mov
xchg
test
push
shlb
xor
fsts
sbb
xchg
push
jnp
push
sub
fstp
add
out
mov
decb
mov
dec
sbb
iret
mov
xchg
repnz
inc
jge
fnclex
insb
pop
add
into
lcall
repz
inc
in
add
sub
and
cli
jno
cmp
xchg
push
mov
xchg
jmp
mov
push
jmp
sub
jo
cmpl
mov
test
inc
mov
mov
mov
je
mov
mov
xorb
add
icebp
ret
and
xor
shl
out
fidivrs
and
dec
test
iret
or
jmp
jnp
sbb
push
add
mov
jp
sub
test
xchg
or
das
mov
xor
lods
popa
adc
sub
and
push
inc
adc
adcb
lods
or
insl
sbb
pop
lcall
dec
imul
add
in
sub
lds
jno
adc
pop
imul
push
mov
cltd
and
and
jecxz
adc
xlat
and
scas
lods
je
and
mov
inc
clc
mov
sub
add
cmpsl
iret
xchg
cmp
mov
mov
out
xor
outsl
mov
fmul
or
dec
repz
sub
stos
pop
rcr
and
mov
cmp
mov
in
sbb
jns
push
lods
add
imul
cmp
jo
mov
fdivl
pop
dec
cltd
sub
xchg
mov
ret
in
jge
cld
sarl
cwtl
fists
xchg
outsb
push
dec
xchg
sahf
sahf
and
pop
test
clc
call
sub
addb
stc
push
hlt
mov
in
push
mov
popf
xor
cli
jmp
cmpsl
roll
mov
jp
loopne
adc
stc
mov
stc
fsubrl
adc
mov
imul
xchg
shlb
jae
outsb
loope
push
je
aam
pop
cwtl
xchg
or
nop
icebp
lcall
popf
push
jmp
mov
dec
cmp
mov
push
dec
dec
js
add
and
xor
jno
fmuls
test
mov
mov
repz
insl
push
sub
mov
cmp
pop
xlat
icebp
sub
aad
jle
jmp
sub
fstps
lock
leave
nop
scas
popf
xor
iret
repz
lea
rorb
rol
push
mov
sub
test
jecxz
adcl
mov
mov
out
inc
lcall
cmc
or
adc
imulb
cmp
add
nop
inc
stc
or
xchg
pusha
cmpb
ljmp
xchg
cmp
and
hlt
fidivl
aam
addr16
add
sbb
adc
or
adc
out
test
and
inc
pop
inc
jmp
in
jae
pop
pushf
fcmovb
jae
les
add
aad
es
or
jecxz
in
and
lock
dec
pop
stos
push
mov
add
mov
inc
addr16
loopne
add
dec
pushf
imulb
inc
jno
pushf
testb
adc
rorl
in
pop
bound
adc
xor
xchg
pushf
push
jp
sahf
data16
ficomps
jl
lds
hlt
pop
int3
mov
pop
or
and
pop
jle
sbb
dec
mov
mov
pusha
cmp
imul
dec
cmp
fadd
jo
test
enter
popf
cmp
dec
es
mov
adc
mov
mov
sbb
xor
lahf
movsb
mov
pop
pop
stos
sahf
xchg
in
daa
fs
mov
pop
out
iret
dec
in
sub
fisubl
mov
mov
addb
add
xor
loop
jo
pushf
pop
mov
aad
jbe
cmp
inc
mov
cmpsl
cmp
pop
shlb
aaa
cld
addr16
pop
outsl
lret
add
cli
mov
mov
push
adc
test
icebp
mov
mov
pop
and
push
repz
shll
and
add
nop
cmp
aas
inc
pop
aas
sbb
sar
daa
xor
sub
repz
jae
ficoml
mov
fimuls
test
push
cltd
xchg
fdivrl
add
arpl
and
movsb
enter
and
lea
xchg
data16
stc
in
add
adc
jl
or
daa
repz
movsl
and
inc
push
hlt
das
push
inc
dec
push
xchg
jge
xchg
shlb
jmp
xchg
cmpsl
cmp
test
jl
inc
xchg
rclb
cmp
sbb
test
sbb
cltd
mov
inc
addr16
push
dec
inc
push
stos
aaa
or
int3
mov
clc
fwait
xchg
enter
pop
fidivrs
aaa
jo
insb
cli
int
cmpsw
stc
pop
ficomps
inc
addr16
xor
mov
mov
test
gs
xchg
or
in
jp
xchg
sbb
shll
ret
mov
stc
mov
xor
adc
pop
adc
push
adc
jg
mov
popa
orb
pop
arpl
lahf
dec
mov
mov
push
push
jl
movsb
or
pop
mov
test
xchg
nop
ds
pop
mov
xlat
arpl
jno
iret
sub
out
add
insl
mov
int
xchg
daa
or
iret
mul
roll
push
out
pop
dec
stc
xor
pusha
ficompl
pushf
addr16
ds
mov
cwtl
sub
sbb
fstpt
add
lcall
sub
fmull
dec
in
addr16
dec
dec
mov
andnps
jge
into
cld
xor
les
push
or
sbb
rcrl
pop
nop/reserved
inc
in
jg
aaa
in
ss
outsb
in
jae
orb
push
shll
cmp
imul
adc
aam
fstp
mov
sub
mov
dec
rorb
int
insl
cli
sbb
adc
daa
xor
les
mov
gs
cmp
loop
sahf
lods
mov
fidivrs
aam
add
out
sbb
shlb
imul
cwtl
inc
cwtl
mov
sub
add
insl
arpl
adc
data16
scas
loopne
insl
in
gs
xor
outsb
inc
shlb
aam
adc
loop
cli
dec
popf
add
ja
hlt
jl
pop
rcll
mov
adc
mov
or
inc
mov
ret
adc
insl
out
jp
out
mov
lds
mov
sub
jae
rol
sbb
add
scas
dec
iret
pop
xchg
mov
push
movsb
aam
lock
sbb
cld
sub
xor
pop
mov
pop
and
add
fstps
cs
lahf
push
in
xchg
xchg
and
mov
jb
pop
cli
loopne
outsl
adc
arpl
or
out
lds
dec
gs
xchg
call
add
sbb
xchg
pop
enter
fidivrs
in
jne
pop
je
mov
popf
jns
sub
jnp
pop
cli
fsubrl
add
xchg
pop
pop
sub
inc
adcb
and
cs
cmpl
jns
add
sbb
cmp
inc
mov
fdecstp
or
mov
inc
jle
pop
sub
adc
inc
fists
sahf
add
push
and
pop
into
inc
test
xchg
movsb
push
mov
sbb
iret
xchg
out
or
fsts
scas
inc
movsl
mov
std
aas
add
repz
jmp
sbb
fstpl
and
das
sbb
cli
fxch
cmpsb
xchg
sub
mov
cmpsb
fwait
es
test
push
das
xchg
mov
movsb
dec
movsb
push
pusha
mov
cmp
repz
testb
mov
ds
loop
mov
sbb
push
and
add
mov
inc
aam
mov
insb
aad
pop
rcrl
int
push
jecxz
enter
pop
adc
ss
xor
adc
pop
aad
mov
cld
push
pop
fcomps
cltd
test
cmpl
jp
inc
xchg
fs
cli
inc
xchg
sar
add
dec
push
xlat
sub
js
mov
aas
fadds
hlt
dec
sub
push
inc
mov
pop
and
addr16
fwait
pop
leave
lods
push
and
add
or
jns
hlt
clc
insb
and
out
fldcw
arpl
dec
mov
fists
in
jbe
call
cmp
sub
xor
rcll
push
xchg
scas
jecxz
add
test
out
nop
inc
lods
push
push
into
xchg
test
dec
inc
xor
inc
xchg
in
xchg
pop
add
cmp
lds
sub
xor
mov
js
pop
dec
roll
xchg
jns
adc
cld
mov
fsubs
jae
loop
dec
loopne
int
pop
insb
mov
dec
dec
pop
mov
sub
test
add
xchg
popf
jno
inc
adc
mov
rclb
xchg
mov
xchg
inc
pop
dec
xor
mov
jp
das
sbb
adc
mov
adcb
test
lds
pushf
pop
jmp
pushf
cmp
in
lcall
adc
pop
out
or
mov
dec
cwtl
push
xlat
xchg
cli
adc
jae
das
fildl
push
dec
jmp
pop
mov
lock
addr16
lea
into
jg
dec
movsb
pop
roll
mov
ljmp
and
cmp
into
mov
mov
das
xchg
shlb
stos
jmp
cmc
mov
push
pop
cmpsl
mov
inc
mov
test
mov
sar
lcall
and
mov
in
adc
scas
and
xor
or
arpl
shrl
jl
mov
mov
or
scas
mov
or
mov
and
add
out
cmp
mov
jno
jle
push
mov
daa
notl
and
xchg
lahf
sub
push
rcl
adc
das
ret
jb
mov
push
add
lea
rcrl
hlt
shrb
xchg
lds
sbb
mov
test
or
lcall
jne
push
sbb
out
ja
dec
ret
dec
pop
icebp
sbb
pusha
arpl
jns
pop
in
in
loopne
mov
cmp
insb
popf
push
adc
or
sbb
xchg
sbb
add
mull
ds
test
ret
mov
add
sub
adc
sahf
rcll
into
outsl
mul
mov
enter
push
lret
sbb
test
lock
push
push
inc
mov
popl
xor
mov
fmuls
ja
arpl
pop
test
test
bound
imul
mov
inc
or
add
aas
pop
mov
push
cmp
adc
xor
in
mov
mov
inc
je
mov
out
add
ja
lds
shl
push
pop
mov
repnz
loopne
and
insl
mov
sbb
or
js
mov
addr16
jg
dec
push
and
jne
pop
outsl
ret
push
jmp
mov
xor
add
adc
lds
sub
inc
dec
xchg
inc
ss
mov
test
ja
addb
int3
inc
das
sahf
ret
out
add
outsl
pop
dec
cmp
ret
cmp
imul
pusha
or
orl
inc
mov
clc
xchg
xorl
mov
push
push
sub
mov
cli
enter
nop
aam
scas
push
push
mov
sti
inc
insl
xchg
pop
data16
test
and
mov
mov
pop
xor
das
iret
ss
push
fldenv
femms
fdivrs
xor
jae
inc
inc
and
xor
inc
xor
test
fidivl
lock
shll
cld
pop
jbe
sbb
ret
xor
jae
mov
loope
mov
lahf
out
adc
fwait
daa
inc
jl
lods
pop
pop
push
jo
xchg
out
jnp
jp
mov
sbb
pop
test
inc
xchg
clc
and
push
and
adc
mov
shr
hlt
aam
leave
pusha
lods
xchg
lahf
mov
pop
cmc
xchg
jl,pn
loopne
and
lods
sti
jo
or
inc
shll
add
nop
mov
push
mov
aas
dec
mov
jl
jp
lret
pop
inc
hlt
push
lock
xchg
hlt
inc
and
and
inc
je
add
lcall
fstps
arpl
cmp
adc
mov
mov
cmp
js
mov
adc
sarl
or
loope
xchg
test
adc
sbbl
rcrl
cwtl
push
out
mov
push
fs
movsb
loopne
pop
sub
scas
and
hlt
push
pop
mov
test
fs
repnz
add
sbb
mov
stc
out
xlat
repz
ret
sub
mov
fprem
andl
out
mov
sbb
cmp
test
insl
sub
add
addr16
lods
andb
in
dec
test
imul
push
js
ret
jbe
lods
mov
popa
sub
pop
clc
dec
pop
sbb
into
and
jmp
aad
pop
stc
test
lret
nop
test
mov
arpl
xor
pop
stos
aas
pop
pop
fldenv
mov
xchg
push
loop
push
fdivrl
xor
jne
dec
dec
adc
push
jnp
icebp
pop
test
xor
mov
sbb
imul
int
xchg
push
shrb
mov
sub
in
ror
or
jle
popf
imul
ja
lcall
adc
test
or
lods
fwait
ljmp
sub
arpl
inc
sbb
shll
shlb
loop
pop
arpl
push
aas
adc
push
loopne
bound
and
and
pop
or
jnp
lds
cmp
ds
dec
lcall
sbb
iret
inc
or
out
push
icebp
adc
js
ljmp
movsl
inc
xchg
loop
lret
cmpsl
notl
inc
aas
mov
and
std
mov
sbb
cmp
jo
mov
cmc
xchg
add
jle
mov
push
sub
mov
sbb
mov
inc
mov
imul
add
pop
lret
push
xchg
push
xor
lods
je
sahf
lock
cltd
sbb
inc
xchg
pop
mov
lret
shll
pop
mov
xor
jb
insb
rorb
push
pop
inc
push
aas
mov
dec
loope
cmp
jae
rolb
imul
xorb
sarl
pop
mov
inc
ljmp
test
mov
mov
call
sarb
jecxz
dec
movsl
adc
icebp
pop
cmp
mov
dec
pop
into
fcompl
pop
aam
aas
cmp
test
shll
jmp
add
lods
ja
and
cmpsb
mov
notl
pop
shlb
pusha
negl
das
sub
inc
lods
adc
sub
int3
adc
pusha
mov
fwait
out
xchg
push
test
out
sub
cs
ret
xchg
add
aam
jmp
inc
movsl
and
les
adc
nop
mov
mov
push
in
in
enter
test
inc
xchg
cmp
mov
dec
movsl
jne
push
xor
movsb
jns
dec
xchg
mov
sub
sub
scas
leave
cmc
lea
push
cmp
in
add
into
mov
mov
lods
js
jecxz
lds
outsb
in
and
popa
xor
add
cmp
add
sub
or
scas
push
and
pop
les
ret
leave
addr16
cmp
adc
fidivrl
push
push
cmp
js
adc
add
adc
ja
sbb
ret
mov
mull
jno
inc
int
fmuls
js
test
fstpt
dec
xor
and
or
cmpsb
idiv
aaa
roll
out
mov
in
xchg
jb
lds
sti
insl
xchg
and
dec
repz
rorl
jge
and
sub
sbb
stos
lods
mov
mov
jecxz
insb
xchg
ret
mov
ret
decb
out
jecxz
cmove
dec
mov
lods
sbb
roll
pop
mov
jmp
inc
inc
movsb
mov
inc
xchg
adc
mov
out
subb
cmp
cmp
scas
movsb
lahf
cli
push
dec
add
mov
mov
ret
popa
mov
paddw
sarl
gs
xchg
cmc
bound
pop
stos
or
xlat
rorl
adc
mov
test
jecxz
scas
dec
push
mov
insb
mov
dec
cli
das
pusha
adc
jne
out
inc
stos
cmp
scas
xor
or
lcall
jg
imul
mov
shrl
flds
shrb
dec
xchg
jecxz
jo
jno
fisubrl
xchg
and
jmp
inc
mov
scas
add
dec
lea
int
imul
dec
gs
xor
int3
fdivrs
jecxz
pushf
in
std
push
mov
ljmp
shl
mov
or
enter
imul
test
sbb
shrb
fwait
mov
or
es
mov
and
lods
sbb
push
inc
and
and
mov
loop
les
sub
jp
mov
dec
dec
jl
out
push
add
inc
mov
jle
shl
mov
add
sub
int3
pop
add
pop
ljmp
jnp
pop
aad
jmp
shll
mov
cmp
sbbl
push
mov
fidivl
out
popa
dec
pop
jnp
sahf
shrl
sbb
cmc
mov
dec
scas
scas
repz
les
mov
dec
sbb
fisubs
sbb
jne
sbb
sbb
xor
pop
out
pop
adc
hlt
ss
ret
ja
rclb
sub
addr16
sarb
sbb
adc
xor
scas
sbb
jne
daa
mov
ljmp
fs
pop
hlt
stos
gs
aaa
and
outsl
test
push
icebp
aaa
push
addb
in
dec
inc
pop
mov
sti
imul
pop
pop
xchg
mov
xchg
aad
or
push
icebp
mov
mov
xor
pushf
jne
push
mov
add
push
in
mov
hlt
or
adc
stc
or
jp
bound
clc
repnz
or
push
stos
sub
cmp
movl
loope
mov
gs
scas
stos
leave
adc
xor
paddusw
divb
pop
repnz
pop
pop
cmpsl
mov
ret
push
cld
push
and
in
dec
mov
lret
push
lock
call
ss
mov
fsubp
jo
lods
aam
xor
mov
dec
cmp
or
adc
loope
xchg
cld
mov
ja
sub
shlb
mov
jle
inc
and
jg
repnz
jne
pop
test
mov
inc
sahf
pop
push
ret
inc
xchg
lods
outsb
push
and
dec
pop
inc
dec
jecxz
dec
loop
aas
out
js
xor
push
call
cmp
je
das
mov
push
dec
add
decb
push
daa
into
movsb
mov
daa
aas
xchg
mov
scas
loopne
jno
push
addr16
leave
fldenv
sub
pop
jge
gs
push
repnz
sbb
pop
std
or
cmp
or
mov
and
xchg
xor
std
sarb
adc
or
lahf
in
icebp
mov
lcall
and
cmp
data16
mov
into
xor
orb
aaa
or
xchg
sbb
out
test
sahf
jae
or
add
decb
xor
xchg
int
jl
adc
or
cmp
les
cltd
inc
mov
xchg
sbb
shlb
out
push
jmp
rclb
fadds
add
aas
jmp
xlat
mov
mov
inc
filds
sbb
dec
neg
cwtl
iret
mov
in
jne
xchg
xchg
lcall
cs
jg
add
add
push
pop
sub
outsl
sbb
icebp
and
pop
pop
test
call
lds
cmp
xlat
mov
aam
and
adc
fistl
insl
mov
mov
mov
fstps
shlb
or
add
cmp
fbld
sub
fsubrl
cmpsb
xor
mov
jle
js
inc
fcmovbe
dec
dec
or
stos
mov
loope
and
rcll
mov
or
or
fs
mov
imul
ret
leave
out
aam
xor
test
fwait
pop
hlt
dec
aas
mov
dec
inc
mov
pop
xor
mov
or
add
sub
hlt
sub
sub
movsb
add
lds
mov
pusha
fstp
push
dec
stos
or
ds
pop
in
leave
or
and
and
movsl
cs
pop
aam
icebp
sub
je
push
or
sub
jmp
push
movsb
push
adc
pop
mov
mov
xchg
pop
sbbl
in
push
mov
test
popf
xchg
adc
aas
xor
push
and
movsb
je
addr16
pop
mov
dec
jle
jl
in
or
lahf
or
mov
mov
mov
ficompl
dec
neg
pop
push
xchg
mov
pop
mov
iret
adc
in
mov
mov
xor
xchg
sub
bound
aaa
dec
adc
jg
mov
lea
es
and
gs
arpl
mov
cmp
lret
mov
call
xor
loope
ret
xchg
dec
neg
jnp
push
jecxz
stc
aad
stc
out
in
push
test
cmp
inc
lahf
popf
out
outsl
shlb
adc
test
iret
and
add
or
pop
cs
xorb
add
jae
push
filds
loop
les
and
fcmovnbe
jp
std
mov
sub
dec
cmp
xchg
lea
mov
stos
stc
pop
insb
xchg
sbb
popa
jmp
push
leave
rolb
inc
mov
cmp
mov
and
xchg
add
sbb
inc
rolb
repnz
and
fdivs
out
jle
lcall
jmp
repz
push
sbb
lret
mov
xor
or
jge
cli
push
out
icebp
xor
xchg
dec
das
shrb
ss
mov
loope
inc
jp
ret
cmp
lock
jmp
test
cmp
inc
sarl
jno
das
cmp
insl
or
pop
xchg
lahf
sbb
in
and
inc
xor
mov
or
stc
mov
stc
inc
or
stos
rclb
cmp
or
mov
lock
mov
add
bound
and
inc
push
int
ljmp
lahf
out
jbe
xor
subb
jle
lret
out
pop
add
in
fiaddl
sub
clc
dec
hlt
push
and
cs
jl
xor
pop
cli
lahf
sahf
les
add
lea
into
es
sbb
add
lea
scas
repz
rorb
lods
xor
filds
push
sbb
pushf
add
adc
and
inc
inc
test
ds
cmc
mov
add
xor
lret
fstpl
popa
xchg
mov
lock
mov
out
andl
sbb
add
inc
add
pop
ret
stc
out
add
pextrw
jp
push
jb
inc
add
xor
inc
dec
mov
pushf
sahf
out
xchg
scas
andl
jle
sub
jmp
push
test
inc
push
cmpsb
fiaddl
pop
sbb
jb
lock
mov
adc
pop
imul
out
or
mov
stos
clc
clc
and
pop
mov
sbb
mov
cld
adc
std
int3
xor
fsub
addr16
aad
sub
adc
jb
push
sub
sub
sub
out
and
ja
jo
xor
or
dec
jmp
lods
xchg
jecxz
frstor
adc
cmp
jle
lock
ja
iret
jle
lds
stos
dec
push
push
jo
dec
jnp
test
enter
popf
lods
arpl
gs
pop
cmp
loope
loope
xor
mov
and
outsb
clc
xchg
xorl
jo
or
sarb
shrl
stc
fbstp
jmp
in
jne
or
add
dec
fwait
movsb
xor
cmp
movb
outsb
sbb
mov
push
cmp
add
in
xchg
aad
movsb
xchg
pop
mov
cmc
aad
xchg
addl
cmp
bound
out
ret
mov
and
pop
xchg
jp
pop
jecxz
fidivrs
mov
mov
cli
add
or
jmp
scas
inc
push
je
dec
mov
push
popa
adc
fstpl
mov
call
mov
cmp
in
stos
or
pushf
xor
pop
js
adc
mov
sub
inc
loopne
ficompl
or
in
push
xor
push
jge
insl
hlt
sbb
jge
xor
pusha
mov
cmp
add
imul
jle
int
adc
adc
sbb
sarb
sbb
lock
dec
adc
sub
xchg
aam
cli
dec
ja
test
or
mov
aaa
lods
jge
mov
dec
movsb
es
dec
mov
lcall
inc
jne
or
cmpsl
push
rorb
mov
and
jl
icebp
push
rol
pop
and
call
or
stos
inc
mov
std
inc
cmc
movsl
lret
mov
mov
and
leave
loop
pop
adc
pop
adc
lret
mulb
lds
mov
fildl
imul
notb
and
je
jge
pop
cmc
fcompl
inc
mov
cmc
lods
imul
fldl
insl
push
dec
outsl
loop
jae
jg
mov
stos
insb
shlb
scas
mov
jecxz
aaa
loopne
adc
inc
cmp
jl
adc
roll
outsl
mov
sti
mov
mov
dec
jno
sub
mov
das
dec
decb
pop
je
inc
mov
icebp
mov
cmpsb
lahf
sti
data16
jno
mov
add
mov
jbe
dec
xor
mov
clc
das
push
xchg
and
lock
mov
dec
rcll
sub
jmp
flds
adc
push
mov
cli
enter
sbbb
rcll
loop
xlat
add
es
ret
fcmovb
push
xchg
jmp
cmc
mov
push
xchg
fnsave
pop
or
stc
pop
les
push
xor
add
xchg
out
jne
mov
xchg
mov
ret
push
aam
inc
rclb
mov
ljmp
mov
pop
mov
cmp
ja
and
mov
sahf
xor
dec
insl
stos
or
jo
pop
int3
sbb
dec
imul
arpl
pop
inc
outsb
mov
pop
mov
cmp
add
mov
add
std
cmp
mov
add
push
in
int3
js
xchg
aad
scas
mov
jp
or
mov
jge
pop
pop
mov
insb
sub
adc
scas
lahf
fmuls
pop
mov
or
out
pusha
stos
inc
idivb
mov
jg
mov
gs
ficoms
lods
pop
leave
push
out
sub
adc
leave
add
jnp
jae
in
les
cmp
and
xor
add
dec
popf
dec
es
rolb
xor
jmp
cs
int
pop
fcmove
pop
pop
pop
jo
out
mov
pushf
inc
fsubrs
std
in
xor
ret
sti
lock
ret
fldcw
pushf
mov
hlt
ds
xchg
test
sbbb
out
fwait
in
adc
adc
cli
addl
es
mov
add
stc
jnp
insb
lret
push
pop
fwait
inc
or
xchg
out
aas
mov
out
xchg
and
push
subl
mov
shll
repnz
notl
int
negb
push
sbb
xor
mov
sub
lock
add
pop
out
sbb
mov
add
dec
mov
add
xor
mov
dec
int3
out
idivl
repnz
sub
andb
adc
push
inc
mov
dec
mov
ljmp
sub
mov
and
push
test
movsl
dec
stos
sbb
popa
movsl
ljmp
push
adc
mov
mov
decb
mov
pop
insl
ficoms
mov
out
mov
add
xchg
out
fisttps
mov
xor
or
ret
cld
cmp
fiaddl
mov
pop
inc
andl
jg
lahf
pop
xchg
cmp
je
cld
jmp
pop
dec
aas
pop
jmp
pop
fsubrs
out
sti
or
adc
sbb
xchg
push
sahf
mov
in
ret
xor
push
sbbb
es
pop
mov
mov
test
movsb
and
and
fcmovne
les
addl
cmp
sub
sbb
mov
mov
mov
mov
stos
inc
xor
pop
ss
arpl
loope
or
or
loop
leave
sbb
mov
xchg
stos
in
mov
daa
xor
gs
cmpsl
in
xchg
mov
test
lahf
mov
dec
jbe
xlat
and
lahf
and
inc
lods
pop
push
push
fwait
push
out
pusha
xchg
inc
scas
int
or
es
aam
cwtl
icebp
addr16
push
jbe
imul
pop
std
cmp
rclb
outsb
push
lahf
push
cmp
mov
lods
xor
popa
fldt
and
jge
scas
rcrl
fstl
in
mov
inc
sub
jbe
inc
add
add
stos
mov
pusha
mov
push
sti
decl
xor
dec
dec
cmp
mov
mov
sbb
repz
in
mov
dec
outsl
nop
fistl
iret
lds
test
negl
iret
mov
daa
and
push
xor
xor
adc
or
push
adc
sub
mov
sbb
fcompl
jno
cmp
ds
and
dec
sarl
ja
sbb
cmp
inc
test
mov
jmp
push
fistps
xchg
jmp
add
div
lods
jecxz
pop
movsb
pusha
and
jle
jl
pusha
nop
mov
jge
mov
fmuls
xchg
xor
fidivrs
mov
jo
in
jb
sahf
jns
icebp
cwtl
xor
lcall
adc
sti
sub
hlt
in
jb
push
push
pop
insb
pop
pop
fdivrl
lret
scas
xor
je
shrb
push
test
ds
jl
xor
pop
aas
and
jnp
shll
scas
js
adc
jecxz
insl
lcall
les
dec
popa
xor
sahf
dec
fucom
or
xor
outsl
or
xor
xchg
jmp
push
inc
xchg
fidivrl
jae
pop
clc
add
cltd
hlt
fsub
push
dec
popa
jbe
shlb
pop
repz
nop
push
rcrl
add
rolb
inc
adc
std
aaa
push
mov
dec
test
push
fidivrs
icebp
fwait
movsb
pop
add
xor
mov
test
xchg
rolb
adc
pushf
cmp
dec
and
push
mov
rol
mov
mov
mov
sarl
test
cmp
jge
popf
adc
in
fildll
mov
pop
gs
js
dec
adc
jmp
cmp
and
push
test
pop
sbb
mov
push
ds
mov
aas
fnstsw
out
scas
push
rorl
dec
dec
rorl
mov
jmp
sub
push
adcl
aas
test
mov
lea
add
mov
cmpsl
lret
test
jno
xor
mov
test
adc
call
cmp
aam
and
lcall
mov
cmpb
je
out
pusha
cmp
out
das
sub
lods
cli
callw
test
loope
mov
cwtl
flds
cmp
jne
negl
imul
gs
and
mov
xchg
pop
jb
nop
in
push
je
mov
inc
or
jb
sub
test
faddl
dec
adc
dec
hlt
addr16
sub
push
pop
cwtl
sarl
scas
int3
sbb
inc
xor
pop
dec
je
jg
adc
test
testl
add
stos
addl
xchg
xor
mov
and
in
push
push
faddl
mov
shr
ficomps
idivb
out
add
jo
sbb
cmc
xorb
xor
shrl
shr
bound
fistl
fsubl
rcr
lret
cmp
push
add
xchg
inc
or
adc
jecxz
aas
dec
push
daa
mov
daa
int
and
daa
cmpsb
mov
shl
fimull
mov
mov
sbb
dec
xor
push
xchg
xor
pop
dec
mov
les
sbb
mov
cmp
fdivl
jne
aaa
push
test
ja
inc
cltd
xchg
mov
insb
stos
out
xchg
mov
cmpb
gs
mov
push
dec
imul
jbe
push
fnstcw
inc
mov
xchg
pop
aam
jae
mov
jl
adc
loopne
insl
dec
xchg
pop
jecxz
sbb
sarb
rorl
out
test
icebp
push
das
loope
mov
xor
pop
jp
loop
fsubs
movsl
sbb
js
mov
xlat
int
mov
clc
test
ljmp
pop
mov
call
push
jno
mov
clc
sbb
fiaddl
iret
xor
dec
in
push
negb
test
pop
jns
cmpsb
cli
mov
stos
push
dec
xchg
aad
pop
cmc
pusha
and
pusha
lret
aad
je
loope
push
fs
cmp
sub
cs
push
adc
cs
andb
add
loop
clc
sbb
inc
dec
mov
mov
jg
inc
or
mov
add
dec
aas
push
into
mov
sbb
scas
outsb
loopne
int
mov
divl
xor
scas
or
xchg
jbe
js
push
jl
xchg
aad
adc
mov
mov
shr
hlt
hlt
xor
adc
popf
inc
pop
lods
pop
ret
add
dec
bound
std
stos
dec
mov
dec
gs
pusha
add
mov
outsb
pusha
std
in
push
mov
jl
jl
test
pop
inc
push
loope,pt
add
dec
xor
loop
push
icebp
push
ret
add
push
lock
push
xlat
cltd
aas
out
mov
out
add
cli
bound
push
mov
test
lds
jge
lods
ret
aad
iret
sub
data16
pop
int3
ja
out
lds
push
and
pushf
enter
shrl
mov
ja
inc
clc
push
sbb
xchg
push
mov
insl
and
push
outsl
outsb
push
xchg
push
jl
dec
mov
sub
dec
rcrb
mov
int
scas
sarl
sbb
lods
decb
xchg
mov
sub
repnz
stc
inc
call
jbe
jne
popf
push
imul
sti
loopne
add
out
jmp
aam
adc
fsubrs
fstl
es
aad
adc
push
adc
sbb
jl
movsb
mov
xchg
xlat
out
xchg
aas
lods
in
mov
adc
adc
repz
jmp
mov
dec
fcompl
inc
fistps
pop
add
push
jae
loope
dec
or
mov
xor
cmpsl
sub
jge
outsb
cmp
ljmp
sbb
jle
mov
icebp
adc
fcompl
movsb
inc
nop
lcall
in
mov
lods
and
in
iret
int3
hlt
inc
sbb
add
in
mov
daa
jp
out
sbb
sarb
xor
mov
and
dec
lods
lret
test
shrl
fucomi
mov
add
cwtl
test
outsb
gs
xchg
ljmp
jne
mov
stos
jo
add
sbb
push
ret
aam
lea
sbb
repnz
std
aaa
mov
mov
vpunpckhdq
pop
out
gs
add
sub
inc
mov
jmp
aas
dec
sbb
mov
lret
and
sub
mov
jl
ljmp
pop
inc
pop
lds
push
mov
pop
rorl
cwtl
loope
mov
mov
adc
and
pop
gs
inc
mov
lods
inc
inc
fnsave
inc
dec
xor
dec
pop
arpl
rol
adc
mov
out
test
lcall
cmpsl
cli
inc
cld
xor
sub
inc
pop
aas
jno
mov
cmpsb
xor
lods
loopne
sbb
lods
mov
scas
mov
test
iret
in
jns
mov
or
push
cli
pop
push
shlb
test
xchg
std
fisubs
or
mov
scas
xchg
jo
xchg
fwait
mov
rolb
adc
testl
pop
add
fs
jb
popl
jnp
sbb
fdivp
outsl
and
fwait
pop
test
pop
mov
adc
jbe
scas
push
adc
inc
xchg
xchg
and
adc
sbb
xchg
xchg
adc
sub
movsb
inc
xor
add
popa
pop
js
das
imul
lcall
dec
add
push
je
xorb
mov
dec
inc
mov
cwtl
cmp
mov
jne
ja
int
push
cmp
mov
mov
inc
mov
es
xor
inc
mov
mov
into
std
cmpsb
loope
adc
adc
push
xor
cmpsl
insl
in
sbb
mov
lds
ror
faddl
cmpsl
adc
pop
stos
popa
test
add
incl
mov
stos
push
xor
scas
jecxz
mov
sub
out
stos
mov
adc
sub
lret
repz
pop
push
iret
or
pop
addr16
fistl
add
push
cs
push
dec
out
lret
inc
ret
insl
add
fwait
shlb
inc
mov
mov
add
and
imul
cmc
xchg
out
mov
mov
cmp
in
sub
inc
and
shrl
xor
jl
adc
and
fimuls
xor
push
pop
jns
fs
or
inc
movsl
cmp
adc
pop
mov
das
in
fistpl
sbb
jns
pusha
ds
pop
sub
call
mov
ds
dec
inc
mov
mov
mov
mov
pop
adc
mov
lret
nop
nop
insl
push
inc
imul
into
int
lcall
push
sarl
imul
pop
push
cmpl
and
sbb
sub
fcom
outsl
adc
repz
pop
dec
ljmp
cmp
mov
xor
xor
sbb
popf
iret
loopne
jle
mov
xor
pop
or
fcmovnbe
jp
sub
jg
pop
in
mov
outsb
pop
cltd
aaa
aam
shl
xchg
xchg
das
dec
out
movsl
repnz
jbe
inc
mov
aam
sahf
mov
arpl
pop
adc
ret
jns
ljmp
int3
jg
cmp
into
movsl
jle
cmpsb
push
and
xor
loopne
loope
mov
pop
fucomi
adc
cld
cld
inc
addr16
das
mov
cmp
xchg
mov
push
push
call
mov
sub
mov
in
mov
push
mov
out
adc
es
aaa
movsb
pop
cmp
outsw
loope
jp
sub
lcall
bound
cmc
or
or
cmp
mov
mov
sub
jbe
inc
rorb
imul
sub
out
add
cmp
inc
sub
add
push
out
icebp
xchg
dec
push
and
stos
mov
mov
lea
pop
popa
enter
inc
in
outsl
jle
mov
xorl
movsb
sub
pop
cmp
xor
cmpsb
push
xor
and
mov
jo
mov
nop
xor
pop
or
popf
jl
mov
movups
push
clc
pop
lret
cmp
mov
mov
and
mov
jmp
inc
in
fadds
ret
pusha
dec
test
mov
dec
aas
and
leave
push
and
cmpl
inc
push
orl
mov
imul
adc
add
sbb
mov
push
in
xchg
dec
cmpsl
adc
orb
daa
les
pop
add
mov
mov
cmp
push
mov
icebp
push
adc
stos
insb
mov
sub
xor
js
push
stc
push
sbb
xchg
insl
lods
adc
jae
jp
sbb
xchg
cmpsb
jl
pop
jns
sbb
dec
shll
pop
adc
jae
int
in
xchg
xor
cli
aad
in
dec
ffree
imul
loope
sub
inc
adc
jnp
arpl
jo
xchg
sbb
lea
scas
jae
inc
sub
mov
aaa
mov
aad
call
mov
sub
sbb
mov
xorb
push
jbe
jbe
pop
ret
popf
leave
mov
xor
pop
lea
dec
push
sbb
outsb
cmp
pop
and
loop
jp
pop
cmp
push
mov
mov
rcll
cmpl
pop
cld
lcall
leave
mov
cld
rclb
mov
jbe
aaa
leave
and
notb
and
pushl
dec
in
xlat
jp
clc
mov
or
sbbb
pop
sbb
xor
add
test
cmc
popw
aad
rol
ret
out
data16
insl
loop
mov
cwtl
push
mov
mov
jnp
xchg
or
popf
jg
dec
xchg
inc
fs
scas
dec
xchg
mov
push
arpl
cmpsl
xchg
pop
pushf
daa
negb
inc
xchg
xchg
push
popa
ds
aaa
jmp
ds
inc
push
inc
add
popf
xor
xchg
sub
cmc
mov
notl
cs
out
mov
cli
add
jne
int3
loope
push
cmp
mov
xchg
movsl
addb
pusha
cmp
decl
push
xchg
insl
mov
fisubrs
mov
pop
cmp
adc
add
xor
data16
inc
outsl
leave
and
in
pop
inc
scas
outsl
inc
jle
cmc
inc
rcl
sbb
shrl
inc
movsl
push
shr
rcll
call
add
fs
mov
jl
std
popa
inc
jbe
adc
lea
mov
cld
inc
cli
lret
lret
dec
push
mov
loopne
ret
imul
push
xchg
mov
insl
and
jmp
je
push
sub
das
xor
pop
sbb
sahf
lods
icebp
add
test
das
std
call
and
pop
and
in
ret
outsl
aad
inc
cmc
and
mov
imul
mov
aad
bound
pop
dec
call
dec
xchg
pop
inc
and
cli
sahf
cwtl
mov
xor
mov
or
repz
stos
into
int
pop
and
or
or
mov
push
jno
sbb
jae
jp
mov
cli
lds
adc
cmp
repnz
adc
popl
xor
insl
push
test
jge
mov
and
xlat
ret
dec
loopne
nop
pusha
and
xchg
cli
repz
sbb
mov
lods
add
cld
mov
pop
mov
pop
outsl
das
jmp
fucomip
shll
pop
mov
shr
pushf
aaa
insb
std
enter
push
mov
lcall
sahf
adc
iret
aas
xchg
inc
repnz
inc
mov
adc
push
sbb
je
lret
dec
pop
pop
std
xchg
shrl
sti
pop
xchg
and
movsb
dec
adc
push
or
sbb
push
jge
pop
cmc
arpl
pop
pop
aad
mov
sub
out
mov
cmpsl
jnp
mov
sarl
lahf
xorl
mov
inc
and
cmp
hlt
and
fsubl
xchg
sub
popf
push
out
adc
pop
pop
in
or
pop
adc
sbb
adc
sbb
das
mull
mov
aam
xchg
jp
rorl
lea
xor
insl
jne
int
add
test
cmpb
repnz
jae
sbb
xchg
mov
fwait
pop
cmp
aaa
jg
pslld
sbb
les
mov
or
adc
ret
mov
data16
jp
add
ret
and
sahf
ja
cmp
inc
push
inc
jnp
lahf
adc
xchg
loope
jg
jg
bound
test
cmp
adc
mov
mov
subb
ret
loop
mov
cmp
cld
in
faddp
mov
addl
adc
out
xor
jns
outsl
xchg
out
cld
dec
es
or
adc
in
jp
out
xor
mov
and
rcrb
push
jb
or
push
popf
and
lcall
mov
loopne
out
lea
mov
mov
dec
out
daa
jp
stos
in
ret
xchg
jb
loop
popa
xor
rcrl
mov
popa
and
test
xchg
jge
js
jnp
adc
arpl
fisubrs
mov
int
push
mov
shl
xor
leave
jmp
jne
jbe
adc
xor
jle
mov
lahf
mov
xchg
sub
shrb
daa
pop
pop
pusha
sahf
mov
jmp
dec
das
dec
jae
leave
mov
test
sbb
and
mov
jb
or
incb
int3
mov
xchg
add
aad
push
jnp
dec
or
sbb
mov
jns
fwait
add
xchg
movsb
push
mov
mov
mov
in
mov
push
xor
icebp
push
xor
dec
and
mov
and
mov
stos
pop
jo
jmp
data16
rorl
mov
jmp
add
ss
fdiv
mov
mov
and
mov
repz
rorb
sbb
pop
cmc
ror
add
es
int
mov
and
or
mov
sarl
xchg
movsb
jae
ret
stos
xchg
test
jb
push
std
cs
cmpl
xchg
sub
insl
mov
jo
shlb
mov
fs
fcom
push
mov
add
rorl
out
cld
dec
icebp
mov
mov
lret
ja
lods
cmp
js
jnp
add
xchg
enter
sarb
aaa
xchg
int
adc
jl
lret
and
cwtl
lret
xor
lret
push
mov
repz
out
jmp
adc
cwtl
sti
mov
xorb
cmp
add
mov
mov
inc
pop
cmp
test
in
sub
nop
sbb
lea
loopne
scas
jne
aas
std
jecxz
push
mov
sahf
dec
enter
aaa
mov
adc
leave
push
xor
mov
and
aaa
mov
cld
adcb
sbb
sbb
in
gs
pop
addr16
push
and
mov
ficoms
mov
push
lock
inc
out
cmpsl
cmp
hlt
ret
jae
shll
sub
and
aas
mov
insl
jl
jb
stos
or
add
dec
enter
cmp
cs
lods
fdivrl
sbb
pop
xchg
mov
xchg
je
in
or
fldt
dec
cmp
xchg
sbb
nop
xor
sbb
mov
bound
push
dec
test
dec
jmp
bound
scas
das
out
dec
stos
add
jg
inc
mov
push
sub
leave
nop
ds
jge
cs
xor
inc
pop
icebp
mov
gs
cmp
pop
sbbl
and
push
jle
lret
mov
je
pop
push
inc
call
jmp
inc
adc
out
shrl
add
sbb
mov
adc
sub
mov
stc
add
aas
pop
pop
mov
mov
iret
pusha
dec
in
jne
mov
pop
sbb
aaa
dec
xorb
mov
push
mov
lahf
cmp
pop
lcall
inc
jno
lea
mov
push
lar
insl
call
ss
out
cli
or
add
pop
lds
enter
cli
adc
sbb
add
xchg
mov
out
arpl
mov
adc
stos
scas
inc
insl
pop
xchg
pop
jb
adc
or
stos
in
xor
mov
mov
sub
jge
inc
lods
and
mov
cld
les
cltd
repz
add
sub
add
outsl
jmp
mov
pusha
fwait
sub
xor
mov
testl
je
fdivs
cmp
pop
scas
xchg
add
adc
push
sbb
in
fisttps
leave
call
pushf
pop
jl
mov
hlt
sbb
lods
xlat
sbb
repnz
imul
adc
ss
es
pop
inc
sub
pop
cs
mov
push
jae
insl
andb
test
repnz
outsb
push
shlb
ret
icebp
mov
jns
in
add
mov
fdivr
sub
aas
mov
outsl
insb
mov
pop
mov
inc
and
mov
aad
xchg
in
stos
xchg
sub
outsl
sbb
mov
add
xchg
shrb
aas
push
iret
sbb
sti
js
sahf
pop
icebp
push
ja
mov
clc
pop
xlat
test
andb
andb
jp
mov
jecxz
out
push
mov
hlt
lahf
sti
sub
cmp
sub
dec
jbe
daa
loope
adc
cmp
sbb
mov
shll
push
push
bound
out
push
inc
mov
jnp
std
cmpsb
inc
es
cmp
loop
les
stos
pop
xchg
pop
push
dec
inc
insb
jns
in
dec
mov
xchg
mov
out
push
divl
xchg
mov
outsl
jb
lods
and
ffree
sbbl
lcall
test
dec
and
lods
add
loope
ds
and
inc
sub
mov
lods
xlat
inc
push
ds
xchg
xchg
scas
add
rcll
ret
lahf
sbbl
clc
mov
fistpl
movsl
les
xchg
add
ret
aas
leave
jp
rcr
and
mov
stc
and
push
cmp
add
fimuls
repnz
push
icebp
jmp
xchg
cmp
test
mov
in
or
push
hlt
inc
cld
dec
out
sbb
test
clc
adc
cmp
fnsave
xor
dec
cli
arpl
dec
pop
sbb
sbb
cs
into
aad
xlat
mov
mov
out
inc
pusha
repnz
or
sub
aam
lock
sub
or
jnp
jl
in
in
xchg
in
pop
fisubs
push
test
idiv
xor
out
and
add
mov
jle
lock
leave
xchg
jp
mov
lods
scas
hlt
cltd
add
mov
fwait
jl
jno
cmpsl
incb
pop
in
push
xor
call
inc
xlat
pushf
scas
pop
in
mov
std
xchg
enter
sbb
int
add
popf
stc
add
push
incl
jp
cmpsb
lahf
insb
fidivrl
pushf
out
sti
clc
pop
jg
shlb
fstl
push
push
fs
mov
jne
xchg
rcrl
stos
cmp
lea
ljmp
dec
mov
test
fwait
inc
ret
gs
fs
in
push
popf
lds
out
adc
push
xchg
outsl
jno
iret
lret
lret
test
fsubrs
mov
fwait
and
mov
xchg
jge
xchg
cltd
jne
sbb
mov
cmp
or
lea
dec
testb
je
push
inc
aas
dec
mov
cs
sbb
mov
push
dec
stc
xchg
insl
fcmovbe
and
mov
scas
fsubrs
test
inc
inc
pop
push
subb
mov
and
sub
cld
push
push
push
pop
mov
pushf
cmp
push
cmc
pop
push
sbb
xor
shlb
push
xrelease
xchg
clc
or
sbb
mov
in
fisttpl
dec
stos
rcrb
pop
test
repz
inc
data16
add
shr
data16
addr16
in
ret
and
jns
jnp
dec
notl
outsb
add
repnz
push
add
dec
mov
out
jnp
push
fcomi
push
xchg
ret
mov
xor
xchg
xchg
mov
vhsubpd
lahf
pop
push
in
adc
adc
fst
test
mov
movsl
xchg
push
pop
pop
stos
movsl
push
scas
stc
scas
movsb
ljmp
jno
fsubrs
cmpl
daa
add
mov
repz
adc
inc
mov
adc
sbb
push
lods
and
pop
frstor
cltd
pop
sbb
fbstp
fdivrs
xor
xor
dec
les
xor
add
hlt
jns
ds
mov
jo
push
sbb
xor
mov
jnp
xchg
mov
mov
cs
cmp
and
imul
scas
mov
ljmp
test
adc
mov
xorb
mov
xor
inc
xchg
mov
cmp
dec
sbb
lret
icebp
ds
popf
adc
lods
mov
test
repnz
lcall
push
push
test
loopne
ds
mov
mov
jmp
addr16
mov
push
bswap
sub
sbb
lods
cs
bt
sahf
cmpsb
jl
ss
mov
push
sbb
xorl
imul
push
cmp
shr
das
mov
aam
fst
and
inc
push
adc
rclb
shll
call
xorl
test
mov
dec
movsb
mov
push
mull
push
sbb
gs
cli
lods
or
mov
sbb
jge
sti
mov
add
push
in
faddl
lcall
fnstcw
popa
inc
lret
xor
and
int3
mov
cltd
pushf
stos
inc
fcomp
out
xchg
xor
std
call
adc
pop
lea
pop
mov
or
aad
int
xchg
xlat
mov
jle
arpl
cmp
cmp
imul
stc
loop
bound
sti
mov
divl
jnp
mov
sarl
stos
es
in
movsl
add
fwait
mov
mov
adc
xchg
popf
jmp
das
jbe
fwait
xor
pop
stos
testb
negl
movw
js
push
mov
shr
cwtl
mov
ljmp
icebp
imul
ljmp
inc
or
mov
fisubs
add
push
jge
sbb
push
cmp
imul
pushf
divl
sub
cmp
xor
sub
and
add
in
push
sbbl
lods
pop
sti
leave
movsl
jl
add
adc
inc
cmp
add
add
pop
sbb
in
cmpsb
push
sbb
xchg
filds
iret
cmpsl
lea
sbb
jge
in
xchg
pop
icebp
sarb
repnz
mov
cmpsl
lret
in
adcb
pop
cmc
adc
mov
adc
mov
inc
sti
cmc
cs
sbb
mov
addr16
or
stos
das
jae
arpl
lods
ss
push
and
xchg
repnz
push
outsb
pop
jne
leave
cmp
dec
sbb
sbbb
mov
xchg
outsb
mov
iret
sub
pop
stc
xchg
mov
push
add
inc
scas
test
or
mov
mov
loope
je
jl
pop
mov
or
mov
dec
adc
movsl
inc
sbb
adc
out
pop
or
imul
rorl
test
mov
push
mov
fistl
js
bound
ljmp
inc
outsb
test
outsl
loope,pn
lods
stos
sub
sbb
inc
xlat
mov
int
xor
mov
iret
push
or
imul
mov
add
imul
jae
cmp
jg
insl
movsb
shr
jns
add
xchg
lods
lret
xchg
call
lret
jge
test
and
dec
ret
sarl
push
cld
daa
push
cmpsb
cmpl
loop
add
adc
sbb
addb
imul
xchg
mov
mov
inc
mov
push
mov
sbb
jbe
in
data16
lcall
mov
popa
aaa
iret
stos
jmp
outsl
inc
fucomp
out
lret
enter
data16
leave
push
dec
andl
mov
int3
push
mov
cltd
pop
mov
ss
ds
pop
aam
adc
js
and
mov
inc
push
pusha
loope
js
mov
jbe
jmp
adc
ljmp
loop
xchg
inc
icebp
mov
jmp
imul
mov
mov
iret
rolb
test
push
adc
jno
jne
ret
test
mov
das
aam
xchg
xor
pop
jne
rorb
insl
xchg
jnp
imul
aam
sub
mov
aaa
mov
mov
pushf
call
pop
mov
rcrb
mov
pop
mov
push
cmpb
or
mov
jle
orb
scas
das
jbe
cmc
pop
sbb
jno
in
or
add
mov
xor
or
mov
lret
adc
stos
insl
push
mov
rcl
xchg
cld
test
pushf
cmp
cmp
mov
insl
stos
out
out
pop
shll
jno
adc
push
int3
inc
popa
jmp
lahf
mov
jp
daa
mov
das
mov
xor
lods
jae
insl
pop
jmp
js
lock
stc
ret
mov
adc
ficoms
jae
xchg
je
add
aaa
mov
call
hlt
pop
mov
lret
jae
mov
hlt
andl
repnz
sbb
dec
adc
jmp
cmp
loope
enter
pop
sar
jo
push
sub
dec
xor
push
xchg
pop
out
leave
add
int3
cmp
cmp
or
add
xchg
mov
out
pop
and
orl
in
test
rclb
inc
push
cld
ljmp
imul
cmp
stos
pushf
xchg
and
lea
dec
or
subb
in
jno
pusha
fdiv
pop
cli
cmp
popf
cmc
xor
jbe
cmp
jge
aas
inc
fmuls
inc
mov
repz
pushl
call
sbb
adc
es
jb
shlb
cmpsb
outsl
pop
inc
jg
inc
dec
mov
lock
jecxz
adc
les
pop
and
scas
fcompl
mov
frstor
and
int
mov
sub
stos
and
sub
cmc
stos
fwait
jle
test
xchg
or
mov
pop
sbb
mov
push
push
leave
sub
xor
lahf
adc
fyl2x
sbb
xor
pusha
adc
jns
push
dec
jb
inc
push
call
ja
test
fsubrs
mov
sub
in
or
scas
mov
mov
ret
xlat
mov
jmp
add
daa
cwtl
cmp
mov
iret
adc
sahf
ss
cmp
loopne
jno
mov
jae
lret
es
xchg
jne
cmpsl
das
or
fists
xchg
sarb
das
and
push
idivb
adc
xchg
out
lret
ds
imul
push
fs
adc
push
out
punpcklwd
cmp
mov
mov
lock
mov
push
mov
sarl
mov
mov
mov
je
mov
lock
cli
sbb
inc
add
lahf
xor
mov
ljmp
mov
cmp
arpl
mov
cmpl
inc
fwait
and
mov
push
or
call
repz
push
les
aam
hlt
jle
xor
mov
mov
dec
aas
cmp
sub
push
out
rcrb
dec
popa
adc
add
rcr
jne
jnp
les
mov
sbb
cld
cmp
lods
adc
pop
lods
dec
xchg
ret
jno
sbb
pop
jecxz
pop
call
xchg
sahf
push
stos
ss
bound
add
mov
dec
jae
out
add
mov
xchg
or
dec
leave
movsb
mov
repnz
pop
xor
stc
cmp
push
pop
das
fidivrl
or
imul
inc
hlt
dec
pop
out
sti
test
adc
add
xor
lds
fldenv
jne
push
cld
scas
mov
mov
movsb
imul
inc
mov
mov
in
pop
stos
inc
dec
push
in
arpl
out
test
mov
cmc
test
int3
sub
fiaddl
adcl
pop
notb
jecxz
xor
jle,pn
add
ficoms
addl
jae
pop
imul
fdivrs
push
push
push
xlat
and
in
jns
negb
xchg
cmc
bound
adcb
push
leave
mov
cmp
jb
cmc
xor
inc
push
mov
push
mov
pop
ss
movsl
fwait
cld
mulb
idivl
mov
out
mov
push
mov
sbb
inc
mov
jp
lods
sbbl
out
pusha
mov
xchg
sarb
and
sbb
cmp
repz
pushf
mov
std
jo
imul
rep
jb
or
test
lock
jmp
xchg
imul
repz
xchg
jae
outsl
jle
rorb
popf
ficompl
insl
and
lcall
stos
ss
lcall
insl
xadd
icebp
lock
sub
push
mov
movsl
fistl
pop
adc
cmpsl
push
test
inc
mov
out
nop
ja
iret
adcb
stos
add
add
stos
xchg
repz
jnp
ss
inc
sub
aas
repnz
cmp
mov
and
mov
gs
scas
aas
dec
push
push
add
xor
jno
fists
mov
fidivs
sbb
push
rclb
xchg
xor
das
repz
xchg
insb
mov
mull
movsb
pop
pop
mov
shll
mov
or
pop
out
xor
es
les
push
subl
sbb
cmp
add
mov
in
addr16
mov
lret
dec
jmp
xor
addr16
push
mov
adc
shll
aad
mov
add
insb
mov
popa
dec
popf
mov
push
or
jb
enter
decl
push
adc
and
shll
mov
cli
insb
mov
adc
xor
jmp
sub
lock
inc
inc
mov
pop
fwait
push
and
outsb
aam
mov
and
pop
mov
sub
mov
mov
dec
scas
push
xor
push
int
aad
ss
sbb
fcmovnbe
mov
arpl
aas
adc
shll
jle
push
sub
sbb
sbb
imul
jno
jno
pusha
jns
xor
movb
out
into
or
ret
hlt
cmp
mov
push
push
pop
clc
cmpsl
rclb
ljmp
fs
leave
or
sbb
push
sub
test
lahf
mov
jbe
inc
mov
sbb
aam
and
out
push
int3
shll
loopne
mov
aas
bound
xor
lret
lock
push
int3
add
fwait
push
xchg
leave
jl
lods
mov
loope
shll
mov
cmpsl
int
inc
aaa
sbb
pop
data16
adc
sub
mov
adc
or
in
mov
mov
sbb
inc
and
aaa
aad
sub
push
mov
push
rcl
mov
nop
dec
idivb
outsb
loopne
sub
ret
dec
add
or
ret
add
mov
or
push
pop
leave
jp
cmp
pop
out
stos
push
fxch
push
adc
adc
ret
adc
jl
fwait
mov
pop
jbe
lret
lods
jne
scas
adc
push
aad
push
stos
iret
jmp
push
and
aaa
js
dec
mov
mov
icebp
or
into
call
adc
pop
into
inc
ss
in
lcall
mov
mov
pop
dec
pushf
adc
inc
cwtl
pop
leave
pop
setnp
mov
cmpsl
lods
fldt
xchg
das
xlat
sarl
mov
ret
inc
sub
je
or
das
add
iret
fimull
jp
fldln2
stos
addr16
enter
fwait
dec
xchg
sbb
call
pop
inc
sub
jmp
sbb
mov
xchg
push
xor
ret
xor
into
ret
inc
jo
inc
lods
fxch
pop
xchg
data16
sbb
lahf
stos
mov
and
pop
dec
push
xchg
mov
pop
orb
in
or
lock
mov
inc
mov
aas
pop
ja
enter
inc
sbb
lock
mov
cmp
bound
pop
adc
mov
mov
daa
insl
pop
adc
movsl
jp
jb
jnp
lds
lahf
cs
and
out
xchg
call
jnp
mov
inc
mov
insb
jo
and
jmp
pop
and
mov
repz
ja
mov
je
mov
pop
test
je
into
inc
sub
loopne
xor
dec
arpl
insl
cld
jg
mov
lret
jbe
ds
dec
popa
mov
aam
dec
iret
jg
popf
fprem1
fmull
inc
cmp
fsubrs
scas
or
scas
adc
test
mov
mulb
pop
mov
int3
lcall
daa
jmp
jmp
sub
test
pushf
in
mov
lret
adc
xor
jl
lret
mov
loopne
and
loope
mov
cld
repnz
or
out
cwtl
pop
loop
movb
leave
push
mov
xor
jbe
cli
dec
stos
xor
cmp
push
imul
or
inc
ret
das
adc
sbb
and
dec
xor
adc
nop
stc
pop
inc
test
mov
fidivrs
sbb
jmp
cmpsb
inc
and
loope
stc
push
inc
dec
adc
mov
mov
test
mov
and
sub
pop
inc
push
insl
aas
mov
mov
loope
add
sub
jge
fcompl
roll
xchg
stos
lods
mov
inc
and
sbbl
test
cltd
push
es
gs
call
or
pop
aas
cmp
out
mov
adc
std
sbb
push
xchg
xchg
add
pushf
cwtl
cmc
bound
fistpll
pop
out
xchg
add
inc
jge
imul
test
cmp
xor
cmp
dec
push
cmp
or
shll
movsl
in
add
or
sbb
test
jecxz
push
jge
call
add
lock
fildl
popf
dec
sub
pop
add
call
fs
pop
pop
mov
es
jge
test
int
jb
and
bound
ret
iret
out
xchg
jecxz
mov
outsb
xchg
mov
clc
stos
mov
mov
jns
inc
out
or
lods
xor
sbb
insb
and
mov
mov
je
jno
in
jno
movb
sarl
dec
mov
xchg
adc
cmp
xchg
mov
xor
lods
xchg
das
sti
mov
adc
in
adc
jns
inc
sub
pop
mov
fimuls
pop
fmull
aas
loope
mov
xor
dec
pop
addr16
mov
hlt
add
call
movsb
push
cmpsb
popl
outsb
fs
pop
adc
push
ret
xchg
xor
inc
repnz
lods
push
sbb
or
add
mov
bound
push
ret
fildll
ja
and
mov
and
or
daa
in
arpl
dec
xchg
cs
cltd
rcll
push
jmp
repnz
sahf
out
jb
mov
rcrl
in
ja
or
sub
addr16
subb
sbbl
sbb
fsubp
mov
mov
roll
es
or
dec
rol
push
push
fnstcw
xchg
test
mov
inc
jl
add
inc
jbe
stos
push
jmp
mov
add
roll
jo
cmp
mov
into
dec
or
jge
aad
shrb
pop
test
into
mov
add
sub
pop
aad
push
xlat
mov
inc
add
cmp
inc
pop
push
mov
out
pusha
cmpsl
pop
cmp
test
cltd
inc
xlat
cmp
and
cmc
lahf
and
in
mov
sahf
xchg
and
push
sub
sbb
mov
push
sbb
sti
lea
jns
lret
pop
movsb
loopne
arpl
call
push
xor
lds
mov
dec
roll
insb
mov
xor
aas
sbb
jo
lea
and
mov
dec
push
cmp
rolb
cmp
mov
outsb
add
aas
aaa
jp
push
mov
mov
scas
ret
adc
lcall
mov
lret
into
outsb
sbb
mov
adc
pop
sbb
out
jo
xchg
loop
mov
les
sahf
or
jl
and
mov
adc
or
mov
es
out
leave
out
push
xlat
aas
push
xor
mov
lahf
xor
xchg
or
insb
incb
jbe
dec
xchg
cmp
pushf
xor
xor
icebp
add
mov
xor
jmp
cwtl
inc
std
pop
lcall
lcall
cmp
sbb
loope
fwait
cmc
pop
jne
test
mov
mov
jnp
out
push
xchg
cmp
push
ljmp
jbe
mov
adc
ds
negl
add
push
jnp
lods
je
sbb
shrb
bound
cmpsl
daa
cmp
xchg
ret
sub
jmp
xorl
cmpsb
mov
sarl
fstpl
mov
pop
popa
inc
pop
or
add
mov
in
shl
fisubrs
adc
aaa
inc
ret
mov
jns
loopne
fs
inc
imul
and
cmp
jecxz
mov
jmp
adc
es
xor
or
push
aad
jp
mov
lret
lock
fidivrs
in
int3
sbb
dec
dec
call
add
mov
ficoml
and
jbe
scas
sub
mov
loopne
sub
or
pop
mov
adc
stos
loopne
lods
adc
mov
push
pop
mov
dec
mov
add
out
add
js
es
adc
jg
mov
imul
pop
sub
xor
dec
pushf
fdivrp
imul
mov
mov
lret
mov
xchg
pop
mov
xchg
cmp
or
inc
bound
pop
and
cs
dec
jae
sbb
pop
jae
rol
sti
cmc
jb
and
fsubl
inc
push
sbb
inc
cmp
cmp
stos
sbb
call
test
jo
push
mov
pop
nop
int3
xlat
mov
sub
jmp
jne
xor
rclb
in
aam
fistps
mov
lcall
jnp
adc
xor
dec
adc
aad
dec
adc
sbb
jp
lret
scas
nop
dec
rcll
mov
arpl
pop
push
add
jns
jbe
cltd
andb
lds
xchg
sbb
hlt
hlt
scas
pop
stos
pop
faddl
imul
enter
aam
mov
mov
or
and
pushf
movd
in
mov
lods
stos
push
mov
xor
xchg
insl
fmuls
scas
push
or
mov
inc
cmp
jg
cmp
push
mov
bound
movsl
data16
lahf
fsts
pusha
cs
ds
rcl
add
repz
xor
xor
aad
mov
popl
push
stos
in
push
fistpll
cltd
sub
mov
add
inc
inc
cwtl
and
popf
lock
test
and
cmc
jae
pop
imul
call
popf
mov
es
jb
inc
mov
insl
leave
shl
cli
add
leave
xchg
xchg
fistps
and
and
je
push
je
adc
fcmovnb
gs
sbb
jle
push
add
push
mov
xchg
pop
mov
addr16
loope
jnp
mov
mov
push
xchg
xor
xor
mov
lds
pop
jle
mov
mov
push
stos
xor
popf
mov
add
lock
divl
jae
or
pusha
out
outsl
test
subb
cmp
fwait
inc
and
pushf
sti
aad
and
xchg
fucomip
rclb
in
cmp
jl
jl
add
mov
add
lds
popaw
and
lret
cltd
ds
xchg
imul
push
push
ret
xor
pop
adc
mov
add
mov
enter
add
or
sub
out
movsb
sti
xchg
stos
mov
ljmp
aam
aaa
aas
push
jl
test
xor
int
cltd
push
aam
xlat
pop
mov
and
or
adc
pop
shlb
cltd
ja
inc
int3
mov
or
fists
insl
mull
cmp
fnop
mov
mov
popf
adc
lcall
sbb
inc
loop
push
outsl
add
ja
test
popa
out
int3
push
mov
loop
out
mov
int
loope
call
scas
movsl
adc
loopne
loop
dec
inc
scas
mov
notl
pop
or
and
jnp
cmp
push
sahf
fildll
ret
movsb
mov
inc
lcall
xor
xchg
cmp
addr16
lods
stc
pop
xor
dec
jmp
gs
pushf
sti
cmc
movsl
aas
adc
dec
push
mov
pop
out
cmp
dec
pop
push
in
cmp
jnp
testl
pop
and
dec
out
pop
mov
cwtl
fldl
mov
pop
sbb
std
aaa
stos
popf
mov
into
cmp
mov
and
pushl
cs
lret
ret
bsr
push
inc
pop
sub
xchg
jnp
mov
fmuls
mov
cmp
pop
in
es
xor
pop
outsb
xor
out
or
es
jl
insb
in
adc
push
adc
lods
mov
adc
in
out
les
inc
push
push
jnp
addl
jmp
jmp
push
mov
push
aam
subl
fadd
daa
icebp
std
push
into
pop
sub
lea
sbb
enter
cmp
or
or
inc
push
cwtl
jecxz
cli
xchg
repz
inc
fwait
cmc
pop
hlt
testl
xchg
mov
dec
and
pop
xchg
pop
movsb
dec
xor
test
je
cmc
icebp
popf
cmp
xchg
sti
ror
test
sbb
ud2
ljmp
adc
imul
cmp
in
mov
in
ss
lods
cmpsb
adcb
pop
leave
loope
rcrl
iret
sbb
mov
xchg
jmp
aam
daa
sub
mov
out
jbe
mov
ret
pop
xchg
jmp
jl
fimull
jp
jae
bound
push
cld
add
xchg
cmpsb
cld
movsl
jecxz
and
mov
inc
sbb
iret
jns
push
out
fucomi
les
add
faddl
scas
add
arpl
lds
mov
adc
pusha
arpl
ror
add
sbb
sti
movsl
sti
shll
test
mov
sbb
inc
sub
push
ds
xlat
jnp
xlat
leave
mov
jle
mulb
dec
adc
shll
cli
imul
xchg
stos
imul
jge
test
and
xor
fiadds
mov
mov
pop
jp
push
push
add
mov
mov
cwtl
mov
and
xor
andl
ficomps
or
or
dec
in
mov
in
jmp
icebp
notl
fldl
push
clc
data16
dec
push
gs
icebp
lea
xor
pusha
cmp
push
add
jge
fs
adc
enter
xor
cmp
fwait
loopne
cs
int
push
xor
pop
dec
push
gs
inc
pushl
and
sti
and
mov
int
mov
scas
fxch
push
push
mov
insl
test
jns
sub
mov
fwait
clc
xor
adc
xor
jl
ljmp
mov
sub
loopne
xor
xorb
push
inc
bound
int
adc
push
or
mov
insb
jb
cmp
xor
or
gs
xor
ds
xor
sbb
mov
push
jp
dec
outsb
and
out
movsb
in
sub
or
and
aad
mov
push
or
xchg
adc
or
std
mov
xchg
xor
jno
xlat
popa
mov
out
mov
adc
pop
fimuls
fmul
and
xor
scas
cmpsl
rolb
pop
adc
fidivl
add
in
in
loope
je
cwtl
mov
inc
mov
or
sub
into
cs
je
or
es
incb
adc
orb
ja
fstpt
out
jmp
in
andb
mov
fucomp
dec
adc
mov
movsl
push
mov
jecxz
adc
lcall
int3
loopne
push
xor
jecxz
dec
repnz
or
cltd
lcall
das
and
bound
xchg
dec
inc
js
lods
clc
xor
lret
int
lods
sbb
xchg
sub
xchg
fisubs
repnz
pop
test
mov
and
mov
ds
rclb
pop
cli
push
xor
stos
xor
inc
xchg
mov
cmp
call
sbb
cmp
sub
out
mov
cli
pop
fcomps
daa
xor
int3
add
je
in
aaa
fimuls
movsl
xor
sub
repnz
std
mov
pop
fbstp
mov
imul
push
mov
test
adc
ss
jno
sbb
clc
ss
or
sar
fucomip
dec
adc
pop
out
xor
orb
mov
int
test
stos
sub
aad
xchg
mov
xchg
cmp
bound
jg
ja
sub
mov
bound
pop
sub
push
imul
jp
mov
jl
fmuls
push
xor
mov
mov
es
mov
leave
not
jo
cs
or
sbb
aaa
add
out
or
in
cld
nop
loop
ret
leave
mov
popa
aad
mov
fldenv
jno
mov
add
jle
dec
andl
or
aad
pop
sbbb
out
xchg
jle
mov
insl
ret
leave
mov
popa
xor
xchg
mov
pop
inc
orb
clc
xor
and
movsb
js
test
mov
inc
xchg
aam
mov
cltd
and
mov
push
aaa
outsb
add
ljmp
adc
xor
sbb
dec
dec
lret
push
pop
cmp
adcl
pop
repz
jg
and
aas
pushf
sarb
push
jne
test
xchg
arpl
mov
fsubl
sti
xor
jb
mov
dec
add
xchg
aam
imul
loopne
push
loop
aaa
and
or
imul
pop
mov
stos
mov
divb
or
lret
pop
rolb
push
dec
gs
and
adc
adc
jnp,pt
inc
sub
xchg
scas
cvtpi2ps
dec
outsb
scas
push
add
hlt
fs
push
movsb
or
shl
addr16
fcoml
inc
xchg
fwait
push
sub
push
adc
leave
pop
scas
cmp
xor
xchg
leave
stos
outsl
jne
ret
int3
xchg
or
aaa
insb
imul
sbb
out
xchg
sub
insb
jmp
mov
lret
jnp
ljmp
pop
push
scas
cmc
addr16
jmp
mov
mov
and
mov
xchg
cbtw
call
jno
mov
sub
pop
leave
cld
jo
sti
subb
pop
mov
testb
cmp
cltd
rolb
in
test
dec
testb
pop
or
or
pop
pop
add
arpl
lea
cwtl
pop
and
cmp
andl
in
mov
in
cmp
jp
and
aaa
inc
inc
ss
mov
subl
sbb
xor
adc
arpl
rcrl
fisttpl
sti
mov
faddl
push
loop
fidivs
xor
jne
test
mov
and
das
les
ret
sbb
pop
pop
inc
or
jns
divl
cmp
loope
adc
icebp
out
xor
sbb
sbb
das
mov
fs
aas
int
jmp
loop
xor
jo
arpl
xchg
dec
push
jnp
push
icebp
ljmp
movsb
or
dec
pop
sbb
pop
cltd
inc
mov
pop
mov
lret
jnp
sub
int3
dec
cmp
nop
mov
jmp
iret
jp
xchg
ljmp
dec
cmp
cmp
fdiv
pop
push
fcos
add
mov
testb
add
xchg
sbb
jge
dec
insl
movsb
inc
js
sbb
call
sbb
jmp
out
fldenv
sub
sub
mov
nop
out
adc
ret
sbb
push
lods
cld
push
adc
push
loop
adcl
mov
sbb
mov
loopne
insl
in
int3
lahf
outsl
mov
movsb
popf
jmp
lods
and
jle
je
daa
inc
fisttpl
mov
cwtl
adc
lds
mov
pop
or
in
pushw
loopne
dec
push
and
mov
mov
test
jle
jns
jp
and
test
movb
jecxz
jnp
rol
fs
pop
arpl
in
jo
sti
dec
mov
inc
insb
aam
mov
push
ds
and
pop
call
mov
mov
aam
iret
int
sub
mov
stc
jae
cmpsb
mov
lahf
xor
std
mov
sub
jg
lds
pop
mov
lret
cmc
loopne
cmpsl
pop
pop
cltd
push
daa
fbld
push
xor
sbb
mov
pop
adc
mov
adcb
lret
xchg
xchg
lods
pop
mov
pop
imull
mov
in
mov
mov
popf
cmovno
fwait
dec
push
frstor
scas
sbb
fldl2t
xor
imul
aaa
and
movsl
repz
pop
call
je
in
int3
lock
cmp
or
fsubrl
outsb
cmp
mov
adc
sbb
fimull
fidivrl
lahf
jb
sbb
dec
and
sbb
sbb
addr16
in
or
mov
shll
mov
push
adc
mov
pop
stos
insl
xchg
xchg
adc
dec
in
pop
jmp
out
cwtl
mov
xor
sbb
mov
mov
push
imul
sbb
dec
lods
popa
jecxz
push
pop
jb
lods
das
sub
aas
sub
sub
ds
add
movsb
mov
pop
pop
xor
out
jmp
movsl
mov
sti
sub
cmp
stc
mov
imulb
dec
mov
popa
pop
mov
adc
jb
adcb
pop
popa
push
movsl
mov
or
lea
mov
je
nop
mov
scas
push
inc
rol
aaa
scas
test
dec
xlat
hlt
cmp
add
cmp
aas
jle
aad
pop
int3
outsb
jns
xchg
adc
addr16
push
mov
or
mov
pop
rcll
and
leave
and
dec
out
mov
mov
jge
fbstp
call
test
pop
xor
test
push
adcb
cwtl
in
mov
jo
ret
pop
in
xorl
out
mov
cmp
jge
mov
mov
inc
mov
or
scas
mov
fistl
push
cmpsl
pop
inc
jl
jo
fwait
cwtl
repz
rolb
scas
xchg
pop
jnp
mov
xor
roll
push
push
enter
aas
mov
jge
fiadds
jne
mov
mov
das
sub
sti
lds
pop
push
xor
sub
mov
js
enter
movsb
mov
and
sarl
rcll
xor
test
stc
aam
xchg
pop
mov
xor
and
in
inc
xchg
dec
jg
outsb
dec
xchg
jno
adc
xor
jl
sub
xor
jae
xor
popa
adc
jmp
dec
movsl
mov
add
xchg
std
outsb
dec
xchg
jnp
jne
icebp
mov
jecxz
mov
pusha
fwait
xchg
test
dec
ficomps
lock
adc
mov
das
pop
dec
pop
sub
push
mov
push
pop
jmp
aad
mov
or
or
icebp
pop
pushl
mul
jno
loopne
adc
lods
test
lds
es
loope
mov
into
fsubl
roll
push
jne
dec
cmpsl
sahf
outsb
xor
mov
icebp
mov
es
inc
std
cmpsl
and
sbb
addr16
mov
inc
mov
insb
push
sub
sarb
les
lea
pop
ljmp
xor
insl
jno
mov
setle
bound
dec
cwtl
sbb
imul
sti
fiaddl
outsb
xorl
rcrb
popa
movsl
aam
dec
push
bound
push
sti
aad
dec
int
jns
jp
out
aas
cmp
call
cmp
adc
iret
mov
push
stos
cld
inc
or
stos
xchg
adc
jno
dec
shll
ss
and
mov
shll
ret
or
dec
jecxz
inc
xchg
inc
inc
testl
push
insl
es
addr16
and
xor
dec
sbb
or
stos
outsl
jnp
sub
loopne
xchg
insb
aam
insb
or
sbb
cmp
enter
fucom
cmp
daa
dec
mov
scas
int3
sbb
or
add
jno
pop
pop
enter
add
out
pop
adc
and
cmc
or
xchg
jp
andl
mov
pop
add
lcall
cs
dec
inc
xor
test
push
out
add
int
popf
mov
and
repnz
cmpb
dec
adc
cmp
testl
or
dec
into
push
aaa
stos
xor
and
lret
fs
adc
lahf
or
jg
scas
sub
shll
fidivrl
sbb
ret
inc
sub
out
pop
sbb
inc
lcall
insl
jecxz
sahf
add
and
incl
sub
lods
mov
bound
je
insb
daa
je
mov
inc
sub
imul
mov
shl
cmp
test
imul
pop
xor
mov
cmp
inc
xchg
ss
arpl
pop
fwait
push
cmp
int3
cwtl
push
mov
imull
xchg
or
xchg
mov
xor
jp
mov
adc
aaa
adc
lcall
mov
and
mov
jnp
fdivrs
cmpsl
cld
cli
in
sub
ss
jecxz
and
push
test
sbbl
ror
pop
clc
and
push
aaa
test
xor
test
push
shlb
or
ds
sub
xor
jmp
push
xor
dec
mov
pop
mov
ret
and
sub
shrl
imul
testb
cwtl
or
ret
mov
fists
decb
shrb
lret
icebp
scas
loopne
dec
xchg
pop
mov
cs
in
and
shlb
imul
sub
mov
lcall
xchg
sti
lret
fldt
or
add
out
sbb
jecxz
ret
into
mov
aas
cs
ret
cld
fsubr
aam
popf
sahf
pop
push
rcrl
or
jl
jle
inc
mov
out
std
stos
test
inc
insb
aas
cmc
push
jb
mov
and
sub
push
mov
lds
mov
fmul
and
fmul
jnp
les
in
xor
pop
jp
ljmp
push
push
movsb
cmc
insb
jmp
lret
jecxz
mov
adc
dec
int
rcl
cmp
pop
mov
mov
sub
push
and
push
fimuls
ret
clc
mov
xchg
fadd
in
mov
mov
push
sbb
adc
arpl
pop
add
ljmp
in
pop
shll
xor
pop
cmp
sahf
jns
cmp
les
incl
and
lcall
adc
sbb
adcl
scas
insl
out
bound
shlb
das
inc
lock
clc
push
outsb
ljmp
or
or
cmpsb
add
mov
pop
push
fwait
xor
loopne
push
xchg
xor
mov
or
call
mov
les
mov
aas
dec
arpl
pop
shlb
dec
push
jl
cwtl
mov
push
push
mov
push
and
movsb
push
dec
lds
cmpsb
hlt
mov
sahf
mov
inc
jp
xor
into
rol
or
push
outsb
out
xchg
fmull
imul
adc
or
jecxz
sub
push
sub
dec
bound
pop
in
jne
inc
xchg
adc
cmpsl
add
adcb
jnp
jmp
mov
ret
int3
cwtl
in
stos
pushf
inc
subb
jo,pt
bound
dec
clc
les
lds
xchg
repz
idivb
shrl
roll
ret
xchg
mov
cmp
fcompl
popa
scas
ds
mov
xchg
jne
mov
sarb
scas
repz
lock
jns
pop
into
scas
xchg
push
cld
loope
mov
loop
nop
iret
sub
or
mov
call
pop
data16
pop
sbb
mov
mov
mov
sbb
sti
lret
mov
fxch
repz
shr
inc
sub
std
sub
test
xchg
je
std
mov
or
inc
sub
mov
push
inc
push
jne
adc
jae
xchg
roll
jae
in
out
pop
jmp
cld
cmp
and
into
dec
cmp
nop
pop
xchg
and
bound
imul
lahf
push
jns
adc
mov
into
stc
clc
sub
ss
sub
push
test
rcrb
and
mov
fs
sub
xchg
mov
pushf
nop
pusha
push
jle
movsb
icebp
repz
dec
jl
daa
clc
ret
aad
pop
add
outsl
xor
div
xchg
lds
cmpsb
je
jno
xchg
mov
push
mov
lods
cwtl
inc
pop
nop
cmovle
outsl
insb
mov
enter
xchg
movsl
pop
int
push
stc
cmp
sbb
adcb
push
outsb
pop
das
ja
pop
test
aaa
jle
out
insb
pusha
in
xor
mov
xchg
or
xchg
xchg
inc
sbbl
shll
or
loop
adc
bound
popa
fstpl
nop
dec
push
cmpsb
jmp
roll
push
push
in
pop
mov
jno
testb
in
pop
ss
mov
dec
clc
andl
jae
pop
lcall
nop
pop
cmc
pop
popa
ret
mov
xchg
xor
dec
sub
dec
or
loop
adc
gs
mov
dec
xchg
mov
test
je
cmp
mov
data16
jecxz
sbb
jp
mov
dec
std
inc
jg
cwtl
testl
rcrb
push
push
pop
or
jmp
xchg
xchg
stos
mov
mov
cwtl
pop
pop
pop
aaa
lret
pop
int3
out
adc
or
inc
rclb
pop
lds
sarl
jge
mov
ret
adc
mov
in
cmp
ja
out
sub
jmp
xor
push
xchg
xor
jbe
daa
sub
mov
dec
out
divb
push
aam
pop
fcmovnu
emms
aad
xchg
mov
adc
jb
loop
movsl
stos
or
adc
push
sbb
adc
aam
cmc
pop
mov
xor
inc
and
inc
rcl
dec
sbb
insl
jmp
arpl
cltd
pop
call
sub
jecxz
push
xorl
jno
out
sub
push
jge
paddb
adc
dec
pushl
lret
scas
push
movsb
not
loop
sbb
xchg
jecxz
imul
adc
fmull
mov
hlt
hlt
call
cld
sub
and
scas
pop
cmp
insl
cwtl
daa
pop
sarb
cmpsl
pop
lds
in
jge
mov
pop
add
stc
xchg
aad
xor
mov
outsb
imul
jg
xchg
and
cmp
bound
jbe
repnz
out
push
adc
xchg
xchg
sbb
jecxz
sbb
inc
insl
loopne
lcall
inc
push
cmc
pop
jb
lods
sarb
cmp
jnp
insl
inc
cmp
mov
movsl
pop
scas
ret
loop
push
mov
push
idiv
rcll
repnz
lcall
fsubl
jmp
cmc
scas
aam
dec
iret
out
cmpsb
sub
ret
dec
ds
shll
call
mov
cmp
imul
xchg
cmc
jle
sub
sub
sub
out
movsl
and
pop
dec
call
lret
shr
loope
jecxz
ret
push
mov
and
in
aad
insb
leave
xchg
xchg
stos
inc
clc
fldl
mov
mov
sahf
dec
insb
cmp
test
jne
add
mov
in
mov
push
popa
mov
mulb
and
mov
out
cmpsl
jmp
xorb
fildll
call
in
ja
jle
inc
jg
mov
adc
mov
pusha
jl
dec
aam
mov
repnz
inc
push
inc
mov
inc
lods
dec
mov
dec
cld
sub
mov
inc
inc
inc
mov
mov
mov
push
sbb
fcoml
sbb
fcmovnu
cmp
mov
inc
loop
ret
lret
nop
mov
or
popf
inc
inc
daa
leave
sti
cmp
pop
mov
shrl
or
aaa
cmp
test
mov
imul
ss
addr16
sbb
lea
jmp
jp
pusha
add
out
in
sub
fcoml
xlat
lds
lret
sub
cmc
xor
dec
mov
hlt
ret
dec
movsl
push
inc
out
sahf
jnp
add
and
cwtl
cli
inc
push
mov
cmp
or
fiadds
pop
push
mov
pushw
jns
outsb
decl
cwtl
movsb
icebp
sub
inc
sub
cmp
in
jb
inc
icebp
cmp
icebp
sbb
fcmovbe
cld
mov
or
fchs
or
ret
mov
sub
fs
push
mov
pop
cmp
lret
or
dec
push
int
loop
fstps
sub
in
and
xor
jbe
inc
das
loop
fisttpll
cli
cli
push
push
xchg
mov
or
mov
push
inc
cmp
je
sarl
dec
jle
cwtl
sbb
xchg
sbb
arpl
mov
fistpll
hlt
jge
adc
aaa
mov
jp
sti
fidivrs
or
popf
test
ja
bound
fstpt
pop
and
inc
pushf
push
loop
cs
xchg
movsl
pop
push
fcomip
or
xor
enter
pop
and
mov
cmp
sub
push
inc
rcrb
icebp
iret
mov
mov
fdivl
xchg
jle
aad
ret
jmp
cmp
insl
sub
dec
test
or
ret
mov
ret
out
cmp
and
leave
or
push
loop
xlat
mov
cmpsl
notl
in
push
cmp
sub
jl
inc
dec
int
dec
mov
add
stos
or
add
lds
xor
leave
xchg
cld
stos
mov
fisubrl
insb
lahf
mov
sub
and
jne
ljmp
aam
adc
and
cld
jp
add
test
mov
xchg
scas
inc
dec
mov
add
mov
cld
loope
jp
mov
outsl
sbbb
xlat
add
xor
stos
int3
arpl
or
mov
dec
mov
mov
mov
push
and
xchg
imul
bound
xchg
dec
pop
std
or
dec
nop
icebp
inc
stos
xchg
push
or
push
sub
imul
cs
test
pop
inc
loop
mov
fstl
and
testb
inc
mov
dec
jae
ficoml
xor
sbb
or
cmpl
xchg
cmp
push
jno
adc
adc
popf
jg
and
jmp
dec
std
xchg
scas
push
addr16
sbb
dec
into
mov
test
fnsave
adc
std
mov
ficomps
rcrl
dec
mov
sub
ret
sti
push
mov
cmp
inc
sub
shrl
in
and
lcall
addr16
xchg
mov
adc
add
sbb
inc
lods
pop
sbb
adc
inc
xchg
inc
and
sti
push
leave
orl
aas
shlb
xlat
cltd
jno
jle
mov
in
sub
das
jp
ficomps
jmp
and
mov
sbb
fsubrl
daa
mov
dec
push
jmp
iret
adc
jo
pop
repz
lock
stc
xchg
ds
imul
js
xor
xchg
roll
pop
mov
fidivrl
mov
push
cld
xor
outsl
mov
test
fistpl
adc
cmp
les
mov
sbb
repnz
fidivrs
inc
xlat
mulb
in
gs
stos
daa
outsb
sub
filds
xlat
sysexit
fisubrl
xchg
mov
outsb
jb
ficomps
adc
lahf
nop
or
enter
push
cs
rolb
pop
mov
sub
jmp
pop
insb
pop
dec
fsubr
pop
mov
jp
sub
pop
pop
or
cmp
test
adc
pop
and
cmpsb
fwait
adc
popf
xchg
pop
mov
xchg
out
in
test
testb
cmpsl
test
xchg
sub
push
jl
in
stc
dec
es
int
jbe
push
xchg
push
pop
xor
cwtl
cs
inc
out
stos
iret
sub
pop
push
push
mov
sub
aaa
movsb
pop
aaa
sahf
cmp
or
cmp
mov
stos
nop
dec
mov
insb
lret
push
loopne
mov
add
mov
fildl
js
or
mov
mov
jp
add
rcll
jae
je
mov
imull
sub
add
cwtl
hlt
test
int
jp
out
xchg
xchg
mov
dec
out
mov
jo
add
or
les
scas
cmp
xchg
dec
mov
xchg
test
pop
pop
fcoml
std
add
das
xor
push
jecxz
push
cwtl
jae
inc
jl
sbbb
jns
dec
mov
int3
jle
cwtl
pop
pushf
call
add
mov
jne
mov
jb
adc
insl
fidivrl
jmp
xor
cmpsb
xor
repz
inc
cmp
je
jge
pause
out
xor
outsl
sub
mov
loope
cmc
push
mov
adcl
mov
loop
jmp
popf
jns
dec
insl
lret
loope
cld
cmp
hlt
mov
iret
xlat
or
dec
add
aaa
repnz
fwait
in
dec
into
aam
jp
pop
gs
aas
add
adc
orb
mov
jne
sub
dec
mov
out
pop
mov
push
test
jp
jl
mov
xor
jbe
push
out
aas
andl
push
xchg
addr16
cld
call
cmp
sbb
lods
mov
je
or
xor
jb
push
pushf
pop
adc
sbb
out
icebp
or
int3
je
sarl
lret
jb
leave
stos
mov
sahf
stc
hlt
xor
sub
cmovnp
sti
cmpsb
fs
fcoms
daa
les
bound
out
ret
push
ret
mov
pop
and
in
out
mov
cs
dec
in
jp
mov
mov
push
stc
clc
ret
pusha
push
push
lods
adc
xchg
xchg
mov
and
inc
adc
jbe
mov
push
addr16
pop
sub
fsin
fcompl
jb
loopne
cmc
out
sar
test
out
push
mov
xor
mov
fcompl
mov
cmp
sbb
mov
int3
insb
pop
mov
sti
inc
or
sbb
fistpl
imul
jne
or
cmp
lret
xor
sbb
add
outsb
xchg
movsl
push
clc
jb
or
icebp
filds
cld
lret
sub
push
sti
jne
jns
dec
mov
xchg
cmp
sahf
push
icebp
adc
adc
pushf
cmpsl
add
push
inc
cmp
sbb
in
ret
fisttps
add
cld
or
inc
mov
imul
jb
sahf
not
or
jo
mov
adcb
mov
push
add
push
adc
das
cmpl
xchg
mov
and
pop
lods
clc
pushf
into
mov
mov
adc
push
mov
jnp
push
cli
sahf
adc
mov
dec
jbe
mov
jae
add
push
adc
inc
stc
cmp
mov
inc
imul
dec
add
dec
es
outsb
scas
dec
cld
mov
mov
movsl
gs
adc
xor
dec
sbb
xor
lahf
aaa
push
dec
and
sbb
mov
xchg
cmc
mov
test
xchg
dec
pop
out
scas
shr
push
pop
outsl
inc
jmp
sub
in
frstor
popa
int3
aad
std
aas
push
mov
pop
inc
sub
dec
lods
push
mov
xor
mov
push
rol
lds
add
adc
ret
inc
adc
jle
cli
lods
aas
dec
test
mov
inc
stos
in
dec
jmp
push
or
mov
enter
push
mov
inc
cmp
scas
scas
loopne
mov
fs
into
arpl
add
mov
ja
aaa
fwait
push
mov
movsl
and
cltd
mulb
sub
add
fs
gs
fisttpll
and
and
inc
out
pop
bound
push
mov
fxch
sub
xchg
imulb
jno
jmp
mov
outsl
je
push
jo
jmp
sbb
add
cwtl
and
adc
lahf
fwait
cmpsl
pop
in
fcoml
aad
add
xchg
in
sub
dec
or
inc
xchg
or
adc
push
push
sbb
sbb
inc
adc
jmp
jno
ret
mov
mov
sub
stos
loopne
into
mov
hlt
xor
cmp
icebp
xor
in
movsl
sbb
rcr
pop
bound
and
inc
or
adc
mov
and
push
pop
jno
and
lock
shl
inc
into
fwait
scas
mov
push
cmp
sub
xchg
aad
in
insb
loop
popf
and
imul
or
bsf
xchg
out
psubusb
jbe
or
stos
sbb
popf
cld
xchg
mov
pushf
sbb
insl
in
pop
jns
ret
xor
inc
adc
cmp
fdivl
test
ja
xchg
mov
pop
cmp
rcrl
xchg
dec
pop
push
imul
sub
test
xchg
nop
adc
mov
addr16
outsl
les
stos
add
mov
cmpsl
dec
xor
cltd
out
popf
mov
push
insl
xchg
pop
fisttpl
sbb
stc
xchg
pop
mov
lahf
push
and
lods
js
sub
int3
mov
daa
rol
in
out
push
mov
cmc
insb
clc
pop
inc
mov
and
jne
cmp
movsb
test
rorb
lahf
fwait
push
jns
mov
ja
mov
fnstsw
rolb
bound
sub
inc
push
or
add
adc
pop
call
clc
push
mov
mov
push
rorb
into
add
mov
or
outsb
test
push
out
inc
in
lahf
push
insl
add
loopne
in
and
pop
testb
test
cmpsb
xlat
dec
aaa
mov
outsl
inc
cli
add
aad
stc
cld
insb
sbb
mov
addr16
push
adc
pop
fnsave
mov
mov
jecxz
jns
mov
inc
pop
cmp
int
push
inc
pop
cmp
outsl
push
mov
lahf
mov
xchg
push
fwait
ret
andb
shl
es
cmp
mov
jl
or
lods
mov
int3
xchg
outsb
mov
cmp
pop
cmp
aad
sahf
test
lahf
pop
jae
testb
pop
jns
pop
xor
vpaddusw
dec
sbbb
or
dec
xor
mov
lock
call
jns
idiv
cmpsl
rcrl
jne
lods
cli
adc
mov
cmc
and
lock
daa
daa
sbb
jbe
out
divb
fbstp
jecxz
shrb
movsl
std
je
push
test
outsl
sbb
dec
sti
dec
cli
sub
cwtl
pop
add
sti
sub
enter
cli
lds
je
iret
sub
jbe
push
lcall
jae
inc
push
test
int3
mov
hlt
dec
outsl
cmp
xor
mov
push
out
cmp
and
outsb
fs
gs
xor
adc
ret
push
insb
ljmp
and
xchg
lcall
test
mov
and
stos
push
mov
cmp
push
lods
push
js
sub
sbb
fcompl
fcmovnb
jmp
pop
pop
out
jp
push
add
pcmpeqd
mul
rolb
pop
repz
leave
xor
adc
aaa
ret
repnz
repz
dec
inc
cmpsb
push
in
jecxz
dec
cmp
xlat
jmp
xchg
jmp
test
movsb
push
xchg
xchg
jmp
cmp
push
movsl
int
mov
das
int
and
out
lea
mov
fwait
mov
cmp
or
aaa
push
jecxz
cmp
roll
dec
push
loopne
testl
imul
shlb
mov
lods
sbb
mov
mov
stc
lods
in
and
mov
repz
jmp
xchg
sahf
pop
cli
les
addr16
js
add
pop
adcb
inc
cmp
imul
nop
or
mov
and
pop
mov
lea
push
stc
cmovb
mov
mov
insl
ret
xchg
stc
rorb
fists
cld
lret
loope
jo
sti
fistl
adcl
cmp
push
mov
ficoml
xchg
movsb
sbb
int
push
cmp
mov
jnp
push
gs
fst
inc
pop
lahf
iret
xorl
jne
movsb
call
addr16
jae
outsl
imul
jo
push
jge
lahf
cmpsl
sub
jne
push
push
insl
inc
cmp
mov
add
fstpt
mov
xor
mov
cmpsl
cmp
cltd
adc
fcomp
jle
adc
cmp
dec
jg
sub
push
cmp
cmp
cmpsb
lret
daa
mov
jae
mov
lret
jno
ja
daa
and
loop
jmp
clc
jp
xchg
popf
xchg
inc
sbb
call
incl
test
jnp
loope
in
mov
jge
ficoml
stos
outsb
je
daa
or
cmpsl
xchg
or
mov
adc
or
je
push
fisttps
nop
lret
jo
and
test
icebp
int3
cmpsb
cwtl
dec
xchg
in
jnp
stos
sti
flds
pushf
fistl
imul
dec
test
iret
dec
adc
cmc
jecxz
jnp
xchg
cmp
fstps
sbb
stos
mov
repnz
pop
lret
dec
mov
pop
enter
lock
jecxz
jecxz
gs
add
dec
mov
dec
jecxz
add
sub
test
push
mov
xor
push
add
stc
flds
cmp
imul
fldl
leave
test
mov
sbb
pop
dec
push
xor
cmp
or
sub
jne
push
aam
scas
adc
push
cmpsl
int
iret
dec
jno
ljmp
cmpb
xor
sbbb
and
sbbb
inc
jae
pusha
sub
das
dec
xchg
aad
dec
and
sbb
es
dec
fbld
xchg
out
push
ret
imul
xchg
sti
mov
test
xlat
js
cli
sub
mov
add
inc
or
cmp
js
xchg
popf
fcmove
pop
sti
loope
sarb
repz
sbb
cmp
or
loope
push
sbb
stc
mov
jnp
andl
add
pop
pop
inc
dec
lods
add
pop
fdivrl
scas
pop
mov
xor
pop
pop
adc
pop
cltd
mov
push
cmpb
addb
sahf
xchg
pop
jle
gs
push
mov
xor
fstpl
fcompp
loop
mov
gs
test
fidivrs
rclb
mov
mov
or
pusha
mov
pushf
xor
shrl
mov
aad
lea
fdivrs
adc
xchg
sbb
into
dec
or
aam
ds
mov
pushf
jp
pop
dec
popf
aaa
jne
pop
push
and
lods
scas
cmpsl
xchg
loopne
dec
push
sahf
inc
lldt
cltd
mov
inc
into
das
mov
mov
out
fidivs
push
xor
cmpsb
lret
jnp
push
mul
jbe
xor
out
jnp
out
mov
frstor
repnz
in
mov
lret
popf
push
sub
sub
lock
loope
xor
dec
jnp
lods
lods
xchg
lcall
aad
aad
sub
mov
mov
mov
adc
pop
pop
cmp
cwtl
out
in
jne
pushf
insl
dec
or
test
jge
xchg
xchg
data16
mov
and
and
push
inc
pop
pop
aam
cmp
dec
sbb
inc
shr
out
mov
loope
pop
divl
aad
hlt
loopne
aad
jmp
aas
pop
dec
outsl
xchg
sbb
jmp
popf
inc
out
pop
xchg
jnp
add
jb
enter
mov
push
lcall
test
cli
fisttpll
pop
or
sbb
xchg
aad
jnp
xchg
outsl
sub
inc
ret
push
mov
int
sbb
mov
sub
fsubs
add
das
inc
push
pop
jb
stos
aaa
mov
mov
mov
out
arpl
outsb
pop
rcl
es
ret
js
and
sbb
adc
fsubrl
test
cmpsl
and
dec
jp
push
mov
pop
aaa
mov
lcall
xor
addr16
das
mov
bound
adc
stos
mov
adc
xchg
sbb
mov
popa
sub
xchg
xchg
sbbl
test
and
mov
add
lret
push
dec
push
sbb
lods
movsb
addl
movsl
pop
pop
push
mov
fcoms
inc
dec
cs
dec
mov
imul
lcall
dec
add
sarl
lds
xchg
icebp
rolb
mov
and
lcall
fwait
enter
xorb
mov
nop
je
sub
dec
in
cmp
imul
into
jne
jecxz,pt
xor
or
aas
pushf
fwait
mov
or
leave
cmp
mov
sahf
test
sbb
outsb
mov
popf
filds
mov
test
lcall
mov
xor
pop
cmp
rcll
jge
and
lcall
mov
push
nop
push
out
pop
push
sub
mov
inc
mov
stos
das
add
test
pop
cmp
add
sbb
mov
cs
jo
xchg
les
icebp
lret
lahf
movsb
lret
jecxz
cmp
das
adc
lods
in
out
outsb
adc
xor
cmc
cmp
cmp
ret
cmp
addr16
add
sbb
or
stc
pop
fwait
int
imul
lret
mov
adc
and
mov
cwtl
or
enter
aaa
cmc
or
imul
inc
lcall
subl
mov
gs
fdivr
movsl
lret
dec
daa
mov
in
test
loope
pop
add
aaa
mov
inc
cmc
mov
fildl
nop
jno
mov
dec
shlb
adc
cwtl
imul
jns
or
inc
addr16
pop
insb
cmp
xchg
and
jge
mov
js
inc
mov
stos
cmp
rcl
or
mov
int3
in
nop
xlat
push
in
loope
mov
es
jns
hlt
loop
or
cltd
mov
push
push
rclb
es
lret
or
or
dec
inc
cmp
and
dec
cmp
in
pushf
stos
outsb
mov
sub
out
push
popf
ret
xchg
flds
jge
dec
mov
stos
sbb
add
test
xor
repz
icebp
add
movsl
jnp
and
or
pop
mov
sti
sub
imul
lcall
sahf
bound
jo
movsl
mov
fs
aad
xchg
cs
mov
movups
lcall
js
into
inc
sbb
cs
xchg
or
xchg
arpl
mov
mov
cwtl
mov
adc
ja
cmp
add
test
mov
mov
mov
xor
mov
loope
aaa
mov
push
mov
and
push
or
xchg
jo
push
and
or
xchg
push
push
repz
xlat
pusha
sub
lret
or
pop
inc
and
data16
sahf
jns
lock
pop
scas
lock
mov
scas
lahf
icebp
dec
jb
xchg
jmp
aas
out
test
inc
sbb
sarb
mov
leave
out
cmpb
xchg
call
cld
dec
inc
dec
leave
lea
inc
add
inc
mov
cwtl
clc
sbb
mov
scas
jecxz
pushaw
outsb
stos
mov
pop
clc
dec
pop
fisubl
pushf
fadds
jns
inc
or
shlb
pop
pop
das
mov
pop
dec
and
jbe
jb
cmp
int
dec
mov
pop
enter
inc
cs
or
loopne
lret
jne
pop
je
fidivs
ret
in
inc
fmul
jge
incl
imul
sahf
insb
pop
testb
push
fadds
add
out
adc
lahf
icebp
test
pop
jnp
rcr
vmaxpd
in
mull
rorl
xor
cli
sti
push
inc
cmc
sbb
rcrl
jl
xchg
lds
dec
push
pushf
addr16
dec
sub
fs
mov
call
repz
pop
pop
mov
adc
xchg
xor
or
iret
loopne
pop
jg
xchg
fwait
movsb
xchg
lods
lea
dec
pop
jae
popa
testl
lret
mov
int3
xor
lods
mov
dec
push
push
jno
arpl
dec
lock
ret
push
mov
das
and
je
enter
push
outsb
xor
ja
mov
out
mov
mov
adc
jle
inc
das
or
inc
insb
cmp
push
andl
imul
outsl
add
jne
jg
dec
sar
and
nop
in
sub
in
shll
mov
add
fldcw
inc
sub
mov
lret
and
loopne
inc
ljmp
mov
ljmp
pop
jmp
pop
push
inc
aad
aam
call
push
outsb
insb
cmp
xlat
sub
icebp
sbb
or
cmpsb
fstpt
push
mov
popa
pop
adc
leave
cmc
xchg
xlat
popf
inc
sti
aam
mov
rolb
mov
xor
cmp
lret
xor
mov
ret
mov
shll
gs
push
xor
sub
pop
inc
test
cli
inc
or
fiaddl
data16
es
stc
inc
pop
xor
aam
add
add
push
pushf
pop
stos
adc
mov
std
das
adc
mov
sub
adc
inc
das
and
jb
out
in
or
fs
repz
sub
mov
ffreep
es
scas
lahf
aas
mov
les
jle
mov
add
adc
mov
ljmp
xor
or
pop
cld
ja
push
xor
and
pop
int
mov
lcall
or
sarl
aad
push
cltd
push
sub
cmp
or
sbb
lcall
xchg
adc
hlt
repz
pushf
mov
mov
jne
filds
mov
sbb
jno
xorb
repnz
out
in
xchg
incb
pop
inc
icebp
nop
jae
mov
inc
cmp
inc
pusha
push
leave
loopne
add
sbb
xor
sub
adcl
adcl
jecxz
in
pop
jno,pn
cs
push
mov
jmp
adc
inc
cmp
xor
jge
and
notb
fcom
outsl
and
xorb
out
fcmovu
jp
scas
jnp
daa
imul
mov
inc
and
mov
mov
lods
add
leave
mov
js
inc
xchg
or
cmp
inc
lret
cmp
adc
in
loop
sub
insb
mov
pop
lret
jne
out
clc
stos
or
arpl
mov
adc
xchg
aam
adc
jbe
inc
mov
pop
and
imul
push
insl
leave
bound
push
inc
mov
or
add
xchg
dec
sbbb
xchg
ret
subl
inc
add
xchg
mov
sub
std
aaa
sarl
cmpsl
pushf
jl
enter
test
and
out
mov
xchg
pop
nop
jmp
xchg
inc
adc
jne
push
rolb
or
and
jno
mov
pusha
sub
shlb
mov
jae
bound
xchg
imul
or
test
repz
out
cld
push
push
hlt
ret
mov
in
xchg
or
push
das
xchg
aas
add
mov
inc
mov
lock
fisubrs
inc
arpl
cmc
ljmp
shlb
test
pop
jno
cmpsl
mov
shll
mov
xor
sarl
popf
mov
imul
cmp
inc
call
jp
cmpsl
jae
mov
movsl
mov
and
mov
or
fsubs
sbb
push
jae
std
adc
xchg
xlat
inc
daa
jae
arpl
cmpsb
fildll
ljmp
jnp
pop
lock
fiadds
lea
sub
out
fisubl
xchg
mov
inc
mov
mov
sub
push
pop
jbe
jbe
popa
notb
push
fs
lret
in
mov
jb
enter
in
mov
xchg
fcompl
fmull
js
arpl
pop
int
repz
test
cmpsb
and
fstp
fisttpl
push
repnz
lcall
jns
adc
xchg
movsl
fcompl
outsl
stos
pusha
sbb
int
cmc
repnz
add
popf
fbstp
or
pop
rep
stc
cmp
sbb
test
ret
dec
repz
jb
inc
dec
push
ljmp
sbb
lods
imul
jge
mov
mov
adc
roll
fcomps
add
or
je
lea
les
fs
xor
hlt
insb
mov
out
push
xlat
mov
push
cmpsb
add
cmc
leave
fiaddl
mov
inc
stos
push
xchg
pop
mov
movsb
pop
ret
int
int
and
inc
or
int
fstl
fsubs
cmp
xchg
jge
mov
mov
and
xchg
or
mov
roll
mov
sub
mov
mov
jg
push
out
sbb
scas
or
cld
leave
pop
pushf
sub
leave
arpl
mov
pop
cmp
push
inc
push
mov
adc
or
push
fcomps
mov
test
bound
test
scas
jb
add
fldt
pusha
jecxz
fistl
fisubs
data16
xchg
or
aad
or
ds
ljmp
sbb
mov
jp
fmulp
ljmp
in
mov
add
add
add
or
xor
mov
test
into
add
mov
call
insb
push
enter
mov
jg
sbb
xor
mov
dec
fs
lea
arpl
sbb
jbe
or
hlt
je
pusha
out
sahf
xlat
mul
outsl
dec
xchg
sub
inc
sbb
cs
add
xor
loop
jnp
mov
insl
and
fwait
stos
mov
mov
movsl
test
in
cmp
adc
mov
push
push
lcall
in
xchg
mov
out
xchg
jmp
mov
add
lods
jb
xorb
pop
dec
sub
mov
cmp
mov
or
adc
aam
cmc
add
shr
dec
adc
popa
fmul
aas
cmp
mov
pop
in
cltd
pop
or
call
imul
cmc
inc
sub
sbbl
hlt
insb
xor
push
fcoml
loopne
add
loop
pushf
sbb
or
mov
jle
push
jnp
xor
cli
jb
ret
daa
addr16
pop
dec
add
repz
ljmp
movl
call
inc
xchg
lock
popa
inc
cld
insb
xchg
cli
scas
insb
lahf
jg
lea
fxch
sub
mov
leave
in
xchg
std
aad
mov
lods
ret
jnp
xchg
enter
or
dec
mov
imul
je
jmp
jbe
xchg
xchg
pop
lea
adc
ret
dec
aas
and
xchg
iret
pop
in
push
sbb
and
mov
loope
mov
jle
or
clc
inc
in
lds
sbb
jne
in
aaa
xor
movsl
aaa
jns
xchg
stos
mov
push
cld
add
mov
int3
out
mov
jle
adc
clc
das
jns
or
lods
mov
iret
and
or
in
cmp
or
push
jge
sbb
andb
push
inc
sbb
sub
mov
inc
and
xchg
mov
sbb
cwtl
data16
js
repnz
sbb
push
popf
jg
imul
mov
push
jns
xlat
test
ret
shl
xchg
cltd
jb
mov
xchg
adcl
pop
shll
ficoms
push
cmp
cmpsb
ret
push
adc
push
jno
arpl
jb
cltd
add
scas
pop
xor
xchg
popf
xchg
outsb
adc
pop
and
test
jle
inc
mov
xchg
sub
mov
add
jne
push
adcb
test
xchg
jge
xor
inc
daa
mov
and
inc
loopne
mov
cmp
gs
out
and
fsubl
fmull
movlps
lods
xor
push
lret
sbb
aam
mov
xchg
jne
jg
mov
and
roll
es
dec
movups
add
stc
xor
dec
push
mov
or
mov
or
bswap
orl
mov
or
cmp
int3
xor
jno
push
rcrl
dec
push
inc
jo
push
ror
iret
call
aaa
jl
pop
fsubrs
jp
mov
and
inc
push
dec
pop
cmp
flds
add
inc
jle
xchg
int3
sub
lret
ss
push
xchg
sbb
into
lods
jmp
mov
shrl
pop
inc
xchg
xchg
es
mov
xor
jns
int
into
js
adc
outsl
loopne
and
int3
aad
jmp
sub
dec
dec
inc
push
sarb
hlt
pop
ljmp
sbbl
mov
adc
cs
pushf
jo
movsl
repnz
xchg
push
xor
std
in
lock
ja
test
mov
inc
int3
scas
flds
jae
scas
iret
xchg
jle
fwait
outsl
xor
jnp
cmovp
inc
lahf
xchg
rorl
pop
enter
mov
inc
icebp
lret
add
sbb
testb
jnp
push
movsl
adc
adc
add
scas
push
or
dec
ds
inc
lcall
push
aas
jge
js
out
and
lret
aaa
dec
sub
enter
sahf
mov
xor
cmp
cwtl
fucomi
add
or
xchg
lcall
pop
cltd
mov
push
jp
loope
jp
inc
fmull
sbbb
sbb
lret
xor
cmc
xchg
cs
pop
push
cmpsl
dec
rcl
dec
cltd
mov
ret
mov
jne
jne
pop
mov
sahf
inc
std
xor
dec
push
jle
rorb
shlb
mov
lock
adc
int3
mov
aam
mov
pop
or
cmp
loopne
inc
cs
rcl
aas
sbbb
movsl
lds
mov
or
push
fwait
aad
test
xchg
iretw
add
out
sbb
fwait
sub
inc
adc
ss
mov
mov
xor
out
xor
push
mov
dec
pop
mov
pop
mov
sub
adc
lcall
dec
lods
pop
xchg
hlt
out
stos
rolb
in
outsb
mov
push
call
clc
mov
shll
sbb
mov
and
iret
push
xor
int
and
xchg
imul
shrl
ret
jl
ret
pop
shll
or
and
enter
imul
and
mov
lcall
push
add
sub
outsl
in
lret
daa
dec
sbb
orl
mov
pop
dec
sbb
mov
or
insb
arpl
test
fwait
inc
cltd
mov
imul
jbe
jbe
or
sar
stos
or
jecxz
and
pop
and
mov
ret
or
jno
ret
imul
inc
add
adc
sbb
out
cmp
lock
in
loopne
incb
dec
xchg
or
add
fwait
aas
daa
add
jle
mov
stos
outsb
inc
pop
ret
jnp
pop
xchg
leave
loopne
insb
pop
das
push
mov
mov
sub
sbb
pop
scas
dec
nop
mov
cmc
inc
clc
sub
jg
iret
mov
hlt
js
ja
mov
and
add
sbb
jnp
mov
jg
insl
testb
add
jp
rcrl
unpckhps
lock
mov
in
add
test
dec
adc
dec
dec
and
sub
addr16
jb
add
insl
xchg
pop
mov
jb
cmpsl
lods
mov
insb
push
pop
ret
xlat
movb
out
fisttpl
push
call
pop
add
or
dec
xor
aaa
int
js
sub
daa
stc
push
gs
ss
imulb
sub
aas
aam
sbb
orb
loop
and
call
mov
sub
fcoml
mov
call
jno
mov
ja
fisubrl
jne
fnsave
and
loop
mov
push
scas
push
inc
js
cld
or
test
arpl
mov
mov
cwtl
in
test
pop
scas
cmp
scas
cwtl
orb
imul
das
fimull
inc
mov
adcl
je
inc
in
xchg
push
dec
inc
roll
xchg
repz
mov
mov
iret
adc
adc
and
inc
xlat
and
add
or
movsb
aam
sub
dec
loope
mov
or
dec
xchg
popa
add
jmp
push
xlat
or
jbe
and
dec
cld
rcr
lret
dec
es
stos
push
mov
push
push
sti
icebp
lahf
jno
aam
in
mov
mov
mov
xor
and
pop
mov
jl
mov
xor
jno
mov
es
cwtl
stc
lds
gs
mov
mov
pop
imul
mov
ficoms
aas
dec
pop
add
cmc
and
push
mov
in
jbe
jno
shlb
roll
popa
sub
imul
ret
divb
lahf
add
dec
clc
and
negl
cmp
push
leave
push
orb
hlt
sub
inc
dec
cmp
mov
scas
inc
std
xor
js
jne
pop
mov
mov
mov
lret
arpl
push
decl
inc
inc
in
ds
sub
fsubrs
insb
orl
into
xor
ljmp
and
js
adc
bound
mov
aam
xchg
or
add
dec
or
adc
mov
popf
clc
mov
xchg
xchg
sahf
sbb
int3
or
lods
test
bound
shrl
mov
mov
sub
fmul
dec
xchg
dec
data16
mov
lret
test
lahf
push
test
fistpl
cmp
cmp
mov
cli
jl
add
ja
sbb
pop
or
cmpsb
pop
xor
sahf
jmp
push
iret
jns
cltd
xchg
sub
mov
test
xchg
adc
mov
lea
push
lret
mov
add
mov
stos
adc
sub
dec
inc
mov
stos
cmp
pop
cmp
cli
xchg
mov
test
sbb
test
rcl
sub
movsl
add
and
or
pop
xchg
iret
inc
jl
mov
xor
xor
add
mov
into
mov
dec
xchg
sub
push
inc
pop
sub
mov
sbb
fxch
dec
xchg
sub
jo
sbb
jae
mov
xor
scas
jmp
sarl
cwtl
icebp
addr16
mov
shr
into
xchg
pushl
aad
mov
sbb
cld
jl
pop
fsubrp
into
sub
outsl
in
cltd
pop
int
and
jl
lea
dec
lahf
enter
sub
jno
add
and
add
xor
ja
mov
mov
ss
imul
insl
fadd
and
loopne
sbb
movsl
loopne
mov
sbb
mov
adc
mov
xchg
or
adc
xor
fsts
sub
fldt
dec
cmc
shlb
imul
mov
push
pop
into
scas
push
stos
sbb
cmovae
add
mov
das
int3
dec
cmp
xchg
mov
xor
xchg
cmc
and
jbe
pop
dec
xchg
adc
and
fisubl
mov
push
sub
mov
cmpsl
lods
rcl
mov
jle
and
jnp
adc
bound
fistpll
push
jae
xchg
adc
and
fstpt
xor
mov
mov
xor
pop
cltd
sbb
xor
mov
jns
inc
pop
subl
cmp
pop
rcl
out
adc
and
inc
gs
cmp
sti
xlat
dec
mov
mov
xor
mov
mulb
jl
pop
push
test
pinsrw
les
stos
or
adc
add
stc
cmp
insl
push
mov
cmp
aaa
or
sub
jecxz
xchg
sub
cld
scas
adc
dec
movlps
mov
mov
jecxz
jbe
push
xor
push
cmc
mov
jne,pn
adc
shrl
es
jg
add
fimuls
ret
fistpl
loop
push
insl
scas
test
imul
jns
xchg
sarb
ror
jo
addb
movsb
into
adc
sti
rol
les
sbb
arpl
mov
imul
adc
popf
scas
psllw
jl
test
sarl
sub
xor
stos
adc
ljmp
xchg
rcrb
push
xlat
in
ret
sbb
xor
pushf
mov
cli
psrlq
or
scas
adc
imul
test
pop
sub
out
imul
adc
xor
pop
jno
stos
mov
push
cmp
dec
icebp
test
jmp
cld
negl
rcrb
jno
into
and
in
fidivs
inc
movsb
jne
roll
std
xchg
dec
pop
dec
std
push
mov
aad
lods
add
lds
mov
xchg
jo
pop
out
ficomps
aas
mov
xor
fwait
roll
and
pop
addb
dec
jg
fwait
inc
cmp
mov
push
cmp
mov
and
lret
pop
lods
or
pusha
sti
test
jecxz
mov
jp
adc
mov
out
inc
and
and
dec
pop
jle
in
cli
mov
inc
adc
call
sbb
mov
jnp
divb
or
leave
dec
inc
mov
iret
lret
mov
pop
mov
mov
pop
sbb
sar
dec
jo
pop
add
jge
inc
mov
fisttpll
push
xor
xor
mov
or
pusha
mov
ljmp
fisttps
cmpsl
jl
cmp
sub
mov
lods
scas
sti
addr16
inc
dec
mov
lds
ficoms
sub
mov
pop
je
mov
xor
or
add
jg
add
and
push
add
mov
or
push
xor
into
jno
ss
xor
adc
xchg
mov
mov
and
sub
cmp
es
or
in
fisubrs
loopne
cli
push
jbe
pop
fidivs
jb
mov
cld
xchg
repz
mov
or
sub
mov
or
imul
out
fisttps
inc
sub
in
lret
inc
sbb
cmpsl
rorl
out
mov
adc
aad
pop
cmc
sub
in
dec
pop
repz
hlt
inc
arpl
aad
jne
test
testb
icebp
jmp
out
scas
xorb
mov
fsubp
inc
xor
int
jle
test
mov
mov
or
pushl
call
mov
dec
mov
cmovne
hlt
fistpll
popa
adcb
insb
loop
aas
fsubl
out
pushf
or
stc
pop
enter
pop
loope
lret
cmp
pop
addl
xchg
push
ljmp
mov
hlt
cmp
add
push
push
dec
sub
fwait
push
stos
and
loopne
cmpsb
and
ds
pop
stos
mov
stos
fnstsw
int
push
cmp
mov
adcl
mov
out
mov
repnz
test
cmp
repz
push
mov
add
adcl
dec
mov
lret
daa
cltd
pop
mov
jecxz
mov
pusha
pop
push
enter
jae
or
add
fsubl
jp
stos
pop
sub
test
punpckhwd
xor
adc
add
enter
jbe
pusha
out
in
in
and
shll
shlb
sbb
mov
jo
sub
mov
into
push
mov
xor
mov
mov
pop
cmp
fldln2
or
scas
lds
and
or
mov
pop
aas
mov
test
xchg
gs
lds
lea
and
repz
sub
pop
inc
inc
test
mov
arpl
mov
cltd
adc
fidivrs
pop
and
cmpsb
movsl
push
pop
dec
and
mov
cld
ret
mov
sub
fcmovbe
sahf
and
fsubrl
ds
and
subl
inc
mov
pop
pusha
in
shrl
outsl
icebp
ljmp
mov
sub
xchg
mov
int3
xor
fidivrl
adc
test
cmp
and
jns
movsl
mov
xor
lret
xor
dec
icebp
shl
ret
test
rcr
xor
loope
aaa
push
add
cld
sub
pop
je
pushf
mov
xchg
and
push
dec
movsb
lahf
sbbb
in
pop
or
xor
push
in
sbb
out
das
pop
shlb
mov
mov
cmp
sub
arpl
addr16
outsl
movsl
mov
scas
iret
lods
mov
inc
cmpsb
and
cmpsb
cmp
cmp
in
aaa
aas
loop
dec
pop
dec
inc
lods
sub
xchg
jmp
jne
push
mov
sub
aas
stos
xchg
adc
lret
sub
dec
popa
addr16
loope
hlt
xchg
in
movsl
add
sti
xor
fisubl
movsl
lcall
jns
fs
cmp
in
lock
xor
int
adc
ljmp
test
or
mov
cwtl
cmp
sbb
and
rorb
scas
mov
or
xor
dec
fistl
sbb
iret
loop
in
call
dec
int
dec
mov
add
add
iret
xchg
shrb
pop
mov
mov
jecxz
dec
xchg
fiaddl
mov
cmp
cs
jae
popf
adc
mov
inc
lods
sarl
or
adc
cli
sbb
ja
pop
xchg
outsl
jp
mov
mov
testb
add
test
es
push
mov
mov
ja
cli
in
xchg
mov
inc
add
mov
mov
cmp
sete
imul
sub
lock
mov
loop
fcom
aaa
jno
in
icebp
addb
sbb
sbb
cmp
sti
sti
rcrb
pop
pop
das
or
pop
sahf
stos
roll
fistpl
sub
mov
call
sbb
ret
jmp
mov
push
push
mov
mov
dec
add
cs
ljmp
fwait
xchg
add
or
cmc
lahf
pop
xor
lahf
pop
ret
movsl
mov
hlt
ja
mov
cli
push
fstpl
lret
mov
inc
test
rcll
mov
mov
push
sbb
jmp
mov
jno
lret
push
cmp
sbb
xchg
insb
adcb
mov
mov
jle
xor
push
pop
push
out
xor
inc
xchg
loope
jg
sub
xchg
pop
jl
ret
nop
les
push
out
jp
out
xor
xchg
dec
clc
mov
lret
fimuls
mov
testl
mov
and
adcb
arpl
dec
int
push
push
mov
pop
pop
lahf
stos
dec
inc
pop
lds
jp
movb
dec
lods
mov
jl
push
mov
mov
rcrl
dec
jl
and
jbe
sti
adc
in
movsl
lret
mov
mov
or
pop
dec
sub
push
cmp
loopne
mov
lods
sub
gs
dec
fwait
mov
hlt
pop
inc
and
pop
pop
movd
dec
repz
call
jg
mov
jne
aam
lods
stc
xor
les
adc
fdivrs
inc
in
cmp
les
cwtl
xchg
pop
pushf
inc
cli
daa
call
dec
or
adc
jo
notb
pop
test
in
imul
mov
jecxz
pop
xor
mov
push
xchg
mov
js
lock
ds
jl
in
das
shll
das
imul
sbb
dec
dec
lods
mov
leave
sahf
stos
dec
imul
push
mov
call
movsb
mov
pop
or
fnstenv
xchg
jns
push
popl
sbbb
sti
xchg
jns
pusha
or
sub
out
fdivl
pop
or
xor
lret
push
add
jg
jmp
push
or
jge
lcall
int3
inc
mov
cmpsl
out
sbb
in
push
mov
lcall
popf
add
stc
add
or
or
imul
xchg
iret
mov
ret
mov
sbb
dec
xorb
adc
sub
fldt
insb
adc
xchg
xor
jb
push
sarl
stos
fwait
mov
adc
push
stc
mov
jnp
es
mov
adc
loop
and
ss
cmp
push
repz
ret
clc
pcmpeqd
sub
rolb
cmpsl
ret
ret
dec
dec
mov
jmp
add
mov
adc
xor
adc
jl
jg
and
push
adc
sbb
fsubs
call
cmpsl
jp
jmp
sub
cltd
clc
push
sbb
lea
xchg
cmp
mov
sahf
mov
es
or
pop
xchg
xchg
push
cmp
and
xchg
mov
imul
push
lea
mov
pusha
lea
fs
jmp
inc
jae
sarl
icebp
aas
and
sub
decb
inc
icebp
xchg
mov
mov
dec
decb
mov
sbb
mov
push
inc
cltd
jp
ret
popf
shl
loopne
mov
jmp
scas
add
dec
sbb
lret
and
add
add
cmp
xchg
insl
dec
ret
or
iret
jo
call
cmp
inc
in
std
in
hlt
sub
sub
movsb
xchg
xchg
ss
mov
or
mov
rol
repnz
sbb
jmp
cmp
push
aam
cmp
cwtl
sti
movsl
inc
lods
dec
pop
add
mov
out
pushf
xchg
jb
xchg
dec
jbe
pop
push
clc
pop
cltd
shrl
pushl
aas
pop
cmc
dec
xchg
and
mov
dec
cmc
mov
jp
mov
lods
out
dec
arpl
dec
jmp
popf
shrb
leave
inc
arpl
sbb
outsl
imul
push
lret
or
pop
repnz
xchg
imulb
push
mov
lds
ljmp
xchg
int3
flds
and
mov
pop
mov
mov
lret
rorl
jp
int3
in
daa
sbb
mov
or
sbb
pusha
mov
add
xchg
sbb
fiaddl
in
and
cmp
outsb
xor
and
test
test
sub
loopne
pop
push
cwtl
fsubl
add
test
lods
mov
idivb
inc
inc
pop
mov
gs
inc
enter
xor
sub
ss
shrl
out
dec
pop
dec
mov
add
sbb
jbe
sub
aad
sub
je
push
outsb
push
jg
int3
sti
mov
repz
outsb
or
popa
push
and
xor
adc
jbe
or
in
add
outsb
xor
sahf
pop
or
xorl
clc
ret
xor
aaa
or
jle
push
mov
fdivr
test
andl
jge
inc
mov
in
lock
pusha
inc
dec
jg
jg
jp
mov
ds
push
add
sub
mov
out
adc
pop
flds
push
push
inc
xchg
test
enter
cmc
xor
jnp
inc
add
roll
bnd
stc
inc
roll
xor
ret
mov
mov
dec
in
outsb
mov
out
out
decb
add
cmp
fldt
rcr
or
adc
fcmovnu
xchg
jge
jle
sahf
jnp
adc
pop
push
popa
fdivrs
add
pop
inc
and
mov
push
aaa
les
sti
insb
in
jmp
in
jp
cmpsb
mov
cmp
jmp
aaa
or
dec
loop
inc
add
pop
add
inc
lea
out
pop
scas
lahf
pop
mov
inc
sub
sub
push
sub
fwait
in
mov
jp
rcl
cmc
les
dec
adc
xchg
sbb
xor
stos
repz
dec
push
es
hlt
cs
ljmp
mov
pushf
insl
nop
inc
fcoml
cmpsb
pop
inc
pop
imul
scas
and
aas
insb
pusha
aad
clc
jae
es
adc
jo
cld
add
cltd
or
lret
inc
das
pandn
mov
bound
xchg
cmp
mov
xchg
jae
decb
xchg
adc
into
loopne
inc
pop
jns
mov
and
cmp
in
adc
stos
mov
ljmp
push
cmp
popa
les
imul
pop
insb
std
push
rolb
ja
push
jno
int
sub
mov
in
adc
cwtl
stc
push
mov
jne
movsb
cmp
inc
add
stc
leave
jp
ljmp
pop
out
rcll
enter
mov
dec
mov
std
lret
xor
test
and
pop
ret
mov
rorl
or
pop
jl
xchg
pcmpgtw
mov
gs
jp
push
lahf
jb
fimull
mov
aad
mov
mov
or
cs
fsub
stos
jmp
mov
ficompl
ret
mov
pop
hlt
cmpsb
lods
push
mull
aad
add
cmc
xchg
dec
fcmovne
dec
inc
aas
popf
cs
inc
sbb
xchg
pop
push
adc
dec
xchg
sbb
xorl
aas
out
test
pop
add
adc
ja
jge
sub
data16
pop
mov
nop
cs
sbb
mov
xorps
and
std
push
es
mov
xchg
cmp
mov
arpl
jb
dec
lahf
push
mov
inc
jbe
ds
ret
fsts
insl
mov
mov
mov
je
xor
ret
or
xlat
fs
cmc
jno
into
xchg
aas
xor
cli
adc
jg
and
out
mov
aam
imul
mov
fbstp
scas
cmp
or
sub
clc
repnz
or
lods
sti
and
or
out
mov
add
push
rcl
push
xchg
xchg
arpl
sub
add
aam
mov
mov
sahf
mov
mov
test
arpl
clc
mov
add
pop
sar
add
sbb
shl
mov
push
pop
add
iret
js
out
out
mov
pushf
and
inc
incl
rol
fstpl
std
jns
incl
xor
and
nop
xchg
aaa
xchg
cld
leave
mov
or
inc
pushf
inc
mov
cmp
mov
aam
fdivs
outsb
cs
dec
xchg
xchg
stos
out
es
dec
int3
out
jge
xchg
pop
loop
test
repz
in
in
jmp
and
jbe
ds
cltd
push
test
or
movsl
pop
inc
imul
sbb
in
in
xor
arpl
andb
pop
mov
mov
mov
xor
add
push
lods
add
mov
mov
frstor
mov
sbbl
out
aas
xlat
popa
mulb
jne
lock
add
sbb
das
insb
hlt
mov
cmp
pop
outsl
sub
sbb
pop
mov
fidivl
out
adc
ror
pop
loope
lock
mov
hlt
movl
stos
pop
inc
mov
pop
jo
dec
or
or
cltd
iret
testl
dec
es
cmp
lret
inc
xor
call
nop
jb
jg
sub
pop
arpl
xchg
mov
mov
lret
ja
cmp
andb
pop
jmp
lods
or
jge
mov
push
mov
xor
mov
mov
insb
icebp
jp
mov
test
adc
pop
mov
arpl
jns
gs
jge
cli
jp
xor
mov
add
adcl
clc
xchg
mov
add
or
push
adc
mov
inc
fidivrl
lock
shr
stos
pushf
dec
push
repz
fnstenv
add
ja
decl
aaa
es
scas
adc
jno
jnp
cmp
sub
pushw
jnp
movsb
push
bnd
cmc
mov
jmp
adc
inc
shll
inc
add
jg
jae
mov
and
leave
push
out
adc
data16
jnp
aad
cmp
insl
nop
jl
pushf
call
push
scas
pop
ja
jbe
or
fldl
cmp
inc
sbb
mov
mov
sbb
insl
sahf
mov
out
adc
fbstp
cmp
hlt
sahf
jns
push
pop
es
dec
inc
je
fstpl
add
es
lret
cmp
inc
cltd
in
lods
cli
and
fdivp
push
add
xchg
lahf
insb
cmp
xchg
push
arpl
add
jecxz
les
orb
xchg
xchg
loop
cltd
jb
push
jae
push
int
dec
sahf
pop
fildl
cs
cmp
push
mov
sub
jnp
dec
jnp
insl
mov
out
mov
ds
and
fistps
adc
pop
mov
cmpsl
ljmp
cli
imul
ss
xor
push
xchg
loop
clc
jo
push
adc
bsr
cmp
push
push
sbb
ds
mov
add
rclb
mov
or
movsl
and
and
mov
xchg
fisubrs
ss
or
dec
mov
dec
loop
sbb
pop
and
popa
inc
adc
xchg
mov
enter
or
cwtl
push
mov
js
out
pop
fdivs
sbb
xchg
lret
mov
mov
jo
pop
mov
xchg
pop
sub
arpl
repz
in
gs
jne
ds
sbb
orb
les
or
inc
lods
push
and
push
out
imul
scas
cli
jae
dec
add
ljmp
call
adc
lods
add
stos
repnz
mov
sti
bound
sub
dec
les
dec
mov
xlat
data16
mov
jno
es
cmpl
and
repnz
outsb
call
out
mov
rorl
aas
sbb
sbb
jo
fiadds
xor
insl
test
cwtl
dec
push
mov
in
and
pop
int
push
jne
gs
push
loop
mov
inc
push
ss
sub
daa
std
sahf
pop
add
test
sbb
inc
sbb
vpsrad
fwait
data16
or
push
and
ftst
xchg
mov
xor
xchg
cmp
lds
sub
lds
inc
sarl
inc
or
mov
ret
add
push
or
adc
mov
outsb
arpl
adc
sbb
dec
xchg
xchg
xor
lret
cmp
negb
mov
inc
repnz
das
sub
xor
cmp
int3
jmp
test
cmp
arpl
dec
ljmp
cmp
clc
loop
adc
scas
pusha
gs
scas
sub
jge
addr16
jmp
or
jo
mov
or
push
pushl
in
mov
sbb
pop
mov
adc
scas
fnstsw
addr16
mov
orb
mov
fs
push
jecxz
scas
cs
cmc
jae
mov
rorb
pop
push
int
out
les
push
cld
mov
nop
mov
les
cltd
scas
shrl
leave
outsb
or
mov
push
pop
lret
bound
pushf
addl
popf
aad
mov
sahf
mov
jl
mov
insl
inc
inc
mov
repz
mov
test
push
mov
dec
push
cmp
mov
push
enter
add
inc
sub
aad
lret
jg
xchg
fdivs
sti
fstpl
ret
sbb
popf
sub
or
addr16
mov
adc
add
jg
mov
sub
pop
jo
pop
movsb
xor
pop
inc
pusha
jbe
fmuls
out
pushf
xchg
mov
push
jp
movsl
sub
daa
test
mov
pop
pop
mov
dec
jle
repnz
cmpb
mov
leave
mov
sub
arpl
fsubp
or
jecxz
scas
les
dec
jge
sbb
mov
jmp
mov
and
call
xor
push
js
movsl
sarl
gs
outsb
cmp
push
ss
or
push
pop
xor
pop
jge
jb
dec
and
pop
lock
cwtl
cli
stos
fmull
mov
in
rclb
daa
inc
add
dec
inc
pop
cwtl
sub
jns
test
sbb
rcrl
xor
aam
sub
or
ret
imul
cmp
jne
pop
icebp
pop
cwtl
fildll
push
jne
frstor
rolb
loope
jge
enter
enter
push
iret
aad
xchg
pop
notl
dec
dec
data16
scas
push
je
shll
lcall
cmp
test
cmpsb
scas
data16
ss
out
pop
dec
popf
hlt
and
mov
xchg
inc
push
inc
or
push
cmc
js
fmull
add
je
movsb
imul
adc
rolb
inc
fcompl
mov
mov
aad
hlt
repnz
cmpsb
jnp
std
test
add
dec
add
dec
in
sub
pop
adc
mov
hlt
pop
sarl
mov
dec
cmpsb
test
pop
push
mov
add
pusha
lea
xlat
scas
or
inc
test
cwtl
xor
pop
cmpsb
ljmp
sbb
movsl
call
mov
add
or
sbb
xchg
rcrl
insl
sbb
fs
dec
sbb
mov
and
adc
xor
shll
pushf
pop
or
data16
je
nop
jbe
jo
shlb
bound
enter
jmp
push
and
shl
ret
shrb
or
mov
jecxz
xchg
test
mov
movsb
imul
mov
inc
jbe
je
test
xchg
dec
movsl
leave
outsb
testb
mov
test
lahf
jecxz
sbb
je
xor
xor
mov
mov
mov
sub
je
sbb
xlat
vxorps
test
sub
pop
mov
inc
rorb
jbe
idivb
push
adc
xlat
addl
pushf
add
cmp
xor
mov
adc
dec
clc
mov
cwtl
loop
dec
mov
je
cmpsb
xor
ljmp
cli
ret
push
adc
into
fsin
mov
arpl
xchg
int3
das
xlat
jo
lea
sub
sahf
cltd
popf
pop
xor
sub
mov
xor
or
adc
and
leave
test
mov
push
rcll
inc
ds
pop
hlt
mov
adc
into
std
loope
pop
cld
lds
mov
cmpsl
jmp
mov
xor
lds
inc
sub
sbb
cld
xchg
test
shll
xchg
jo
add
push
out
pop
mov
aaa
leave
shlb
push
cmp
pop
testl
fidivs
imul
rcll
ret
mov
fwait
fs
test
jae
mov
cmp
mov
leave
push
dec
adc
stos
ja
fsts
mov
mov
out
fnstcw
cs
cmp
cmp
movsl
mov
testl
inc
push
add
pop
jbe
fldl
in
stc
cmp
sti
jge
repz
rorb
mov
push
mov
jae
fisubl
or
mov
mov
into
jns
xchg
lahf
cwtl
mov
out
cmp
addr16
aaa
stc
movsb
jmp
push
pop
inc
shll
mov
xor
xor
lret
xchg
push
das
mov
adcb
insl
dec
insl
leave
xor
push
push
adc
nop
cwtl
cltd
fsubr
test
aaa
aad
and
inc
pushf
test
dec
movsb
sbb
xchg
xor
push
xchg
fsubs
mov
out
jno
sbb
inc
cmp
mov
and
mov
inc
loope
push
cmp
test
sti
mov
fstl
xchg
arpl
out
inc
xchg
in
cwtl
sub
mov
scas
mov
or
xchg
bound
enter
mov
std
xchg
inc
inc
push
cmpsl
jge
cmc
or
fisttpll
lahf
ja
dec
sahf
or
mov
jp
sti
lcall
sbb
fisttpl
mov
scas
fwait
cmc
std
mov
loopne
mov
sti
jl
pop
mov
iret
addr16
daa
je
ss
int
cmp
sub
leave
fisttpl
in
ficompl
cmp
xchg
add
jbe
inc
mov
call
pop
lods
jg
mov
pop
xor
xchg
lods
notb
lea
mov
ja
je
movsb
mov
mov
aam
fldcw
insl
pop
add
lods
aam
scas
xchg
enter
aad
xlat
push
cmp
stos
push
mov
daa
insl
push
outsl
xchg
pop
fucomip
or
fisubl
add
out
in
push
sar
or
test
rorl
add
add
cmpsb
notl
cmp
xchg
imul
mov
hlt
mov
and
fstpl
dec
jne
jbe
out
xchg
cltd
cmp
gs
lret
in
sbb
mov
leave
xor
jae
sbb
xchg
notl
cmc
mov
pusha
xor
fists
repnz
jne
in
aad
aaa
dec
cmp
in
fldt
or
leave
and
mov
out
and
mov
ja
scas
sub
push
pop
push
ret
test
push
clc
fsubr
jne
popw
mov
add
in
and
arpl
cmp
fwait
xchg
mov
or
call
rclb
dec
inc
push
repz
dec
adc
shll
and
xor
mov
jmp
xor
arpl
repz
adc
xchg
mov
push
jne
cmp
out
or
pusha
push
pop
jle
push
ja
mov
inc
pop
outsl
fiaddl
test
sub
cmpl
orl
sub
jnp
mov
jae
js
adc
outsl
pop
jmp
cltd
sbb
inc
mov
into
rclb
stos
xchg
data16
shlb
pop
and
pavgw
sub
mov
bnd
fsubrl
sbb
les
movsl
sarb
xchg
fcmovnb
cltd
adc
sbb
fwait
dec
inc
mov
enter
mov
pop
jbe
xor
in
pop
xchg
out
loope
jmp
repz
mov
jo
movsl
adc
gs
adc
adc
add
test
inc
jp
adc
lods
mov
fisubrl
add
scas
xor
in
mov
cmpsl
adc
shrl
arpl
pushf
sub
mov
pop
pop
sub
push
and
xor
test
cmp
fsubrs
das
outsb
add
add
dec
adc
mov
push
sbb
add
call
sub
lods
lea
push
out
pop
dec
lcall
add
sbb
mov
ljmp
pop
fildl
xchg
mov
cmp
mov
into
and
push
mov
pop
lock
add
fwait
adc
jg
push
xchg
xor
jno
jecxz
shrb
jge
roll
out
sub
sub
out
push
icebp
xchg
ja
out
jo
and
sbb
xchg
bound
in
add
mov
insb
aaa
mov
mov
xor
out
mov
insb
mov
das
rcll
in
stc
mov
or
inc
jno
sbb
je
test
neg
pop
add
sahf
pop
mov
fldl
cmp
push
dec
outsb
pop
mov
sbb
xor
test
mov
aaa
mov
das
je
sub
cmc
loopne
push
out
sahf
cld
inc
mov
jmp
adc
adc
xor
xorb
es
jno
dec
rolb
dec
xlat
xor
mov
movl
outsb
sbb
aas
mov
pop
and
cld
jle
mov
loopne
inc
push
fsqrt
mov
hlt
mov
or
jmp
je
fwait
dec
xlat
ret
ret
adc
push
adc
addr16
daa
or
stos
inc
inc
push
mov
insb
xchg
in
decl
sbbl
aas
dec
dec
sub
lock
mov
negb
or
sbb
lcall
pop
mov
xor
xor
lock
add
ss
idiv
dec
and
lahf
xchg
mov
aaa
xor
and
out
addr16
add
mov
test
sub
ss
insb
pop
insb
dec
outsw
fcomps
iret
fmuls
mov
sbb
and
mov
mov
stos
jmp
pop
fwait
leave
mov
popw
xor
neg
stos
mov
imul
movsl
push
popa
fldenv
push
mov
xchg
adc
fisttpll
inc
mov
add
lea
adc
stos
lcall
arpl
pusha
push
je
aad
cwtl
rorb
sbb
xchg
ds
popa
shlb
or
es
add
jo
mov
add
fnstcw
and
fidivrl
dec
ljmp
insb
movsb
or
push
cwtl
push
fucomi
inc
dec
lea
inc
xor
sbb
mov
add
clc
push
stos
mov
inc
outsb
bound
sbb
cmpsl
jp
inc
sbb
pop
repnz
jnp
dec
add
test
das
rcrb
in
out
jecxz
push
add
movsb
cmp
xchg
mov
push
cmp
sub
xchg
inc
icebp
mov
in
scas
cltd
arpl
xlat
nop
push
cmp
push
pop
sbb
lock
hlt
out
orl
scas
push
jno
push
mov
stc
add
das
int3
inc
das
add
fnstsw
rcr
or
fwait
xor
adcl
push
and
xchg
hlt
movsb
outsb
movsb
imul
cli
lods
dec
jmp
push
clc
mov
jne
push
cmp
fildll
std
cs
xor
adc
pop
pop
xchg
dec
inc
sti
mov
lret
bound
outsl
bound
jecxz
fiadds
or
sbb
inc
push
daa
or
pop
loopne
add
jg
out
jle
jnp
add
sub
leave
xchg
dec
pop
ret
pop
mov
icebp
dec
xchg
ret
push
rcrl
in
jmp
cmp
test
cmp
out
lods
inc
sahf
push
dec
fs
xchg
mov
in
pop
inc
mov
imul
add
pusha
in
idivb
cmp
addr16
pop
add
mov
cmp
add
jp
jmp
push
sbb
lods
lea
jo
or
fs
mov
scas
xchg
stos
into
das
repnz
das
jns
call
mov
sub
addl
and
lret
ljmp
inc
jmp
mov
jl
jnp
mov
dec
dec
mov
sbb
adc
inc
out
sbb
fprem
daa
dec
js
aam
sub
mov
addl
lods
in
pop
or
add
into
xor
push
dec
stos
jle
pusha
lods
sbb
xlat
xor
mov
sub
in
sbb
cmp
sbb
and
jp
mov
and
inc
mov
xchg
inc
jno
dec
ficompl
cmp
lock
jbe
test
and
fidivs
pop
mov
inc
jne
push
mov
ss
imul
push
xchg
rclb
stos
jl
pop
movsb
add
cmp
push
xor
out
mov
sub
aaa
mov
sbb
pushf
inc
jbe
inc
xor
js
popl
pop
stos
ret
jne
lock
add
shlb
pop
and
add
and
rcrb
sub
aam
ret
addr16
push
push
jl
sbb
iret
loopne
ret
cwtl
pop
repnz
mov
jle
incl
dec
fscale
inc
sub
clc
je
subl
je
fisttpl
iret
xor
push
scas
pushf
lods
outsl
inc
mov
sbb
pushf
cwtl
fisubl
les
adc
xor
in
xchg
inc
fnop
xchg
mov
jg
xchg
mov
into
cmp
sub
or
mov
aas
movsl
dec
lods
push
bound
in
bound
cmpsb
movsl
mov
leave
cs
mov
lcall
mov
xchg
pop
lahf
jo
cld
jns
cs
sub
fidivl
pop
addr16
loopne
arpl
outsl
push
ror
fstl
and
jbe
push
outsb
mov
push
mov
lock
sbb
mov
lods
dec
stc
lods
xchg
movsb
enter
and
jge
push
lahf
xchg
jns
popa
push
adc
arpl
mov
mov
scas
gs
lcall
jns
popf
dec
inc
outsl
inc
pop
adc
pop
pop
jns
into
xor
mov
xorl
xlat
push
fdivrs
mov
inc
lea
jbe
and
mov
call
xchg
inc
loop
loop
pushf
push
imul
dec
cwtl
sub
dec
inc
scas
testl
dec
jae
repz
aas
lock
cmpsb
mov
out
vshufps
popf
mov
inc
lea
addr16
cmp
cltd
repz
out
inc
dec
inc
cmp
mulb
or
in
test
add
je
outsl
add
xchg
in
jle
int
out
in
mov
adc
mov
stc
cs
adc
cmp
cmpsb
adc
ret
and
jne
fistpl
add
jle
push
lock
fsub
ds
inc
adcl
fnstcw
sub
and
jl
push
sahf
mov
mov
mov
das
xchg
cltd
sub
adc
lds
or
pushf
jbe
dec
lret
test
stos
inc
stos
aad
sub
cmc
xorb
movsb
push
adc
adc
addr16
jmp
lcall
sahf
push
loop
mov
lret
pop
jb
test
and
cmp
jbe
jae
inc
stc
mov
xor
cwtl
sub
push
xor
add
xor
mov
or
jbe
cmpsl
push
ss
xlat
jo
gs
lret
mov
popf
inc
sub
mov
shlb
jmp
push
or
imul
lret
xor
fldl
popa
add
jp
pop
sub
bound
pop
cmpb
sub
sub
push
sbb
push
adc
xor
inc
sbb
sbb
pop
movsl
push
test
loopne
add
lret
fldpi
and
or
in
jle
stos
and
into
push
push
inc
inc
cmp
pop
push
test
pop
jbe
cmp
cmpsl
mov
insb
in
adc
cltd
imul
repnz
pusha
push
out
mov
sub
mov
test
sgdtl
mov
imul
andl
push
or
rorl
rcrl
in
cwtl
cltd
sahf
mov
dec
mov
test
icebp
sbb
dec
out
cmp
mov
mov
inc
inc
push
in
jne
xchg
jg
lret
call
ret
mov
jg
push
push
icebp
jo
or
xchg
sbb
and
jns
sub
adc
pop
loop
cmpsb
cld
loopne
sti
shr
in
es
in
mov
inc
and
dec
or
incl
and
cmp
push
cs
inc
add
or
shll
push
sahf
mov
pop
xor
dec
mov
or
insb
orl
pop
sbb
push
sbb
sbb
push
add
or
mov
pop
mov
andb
sti
or
std
xchg
outsb
movsl
insl
inc
mov
jge
and
mov
imul
adc
clc
fchs
int3
lea
pop
fs
pushl
dec
loope
aad
and
roll
es
aam
jns
push
mov
mov
or
push
cmpsb
mov
xchg
pop
ror
xchg
shlb
out
lahf
cmp
sbb
push
icebp
xchg
leave
and
stos
xor
ds
mov
push
in
in
shl
add
pushf
mov
jg
neg
mov
mov
adc
push
mov
push
frstpm(287
add
test
xlat
pushf
sub
addr16
mov
mov
fs
mov
xchg
out
lds
out
dec
out
popf
pop
in
clc
es
add
sbb
sbb
pop
or
pop
ss
or
dec
clc
std
sbb
in
pushf
inc
push
xchg
loopne
xchg
in
stos
out
push
sub
mov
add
and
lcall
movsl
das
jge
mov
adc
xchg
cld
into
inc
adc
sub
jecxz
inc
fmul
mov
xor
test
flds
jl
xchg
sub
push
ljmp
or
mov
inc
inc
jge
xchg
outsl
push
xchg
mov
push
add
and
lret
pusha
out
lret
cmpsb
sbb
xchg
into
ret
and
or
add
jmp
stos
sub
sti
daa
mov
push
jno
lret
cs
outsb
roll
inc
jb
push
xor
jmp
sub
mov
sub
cmp
data16
aas
cmp
cld
pushf
loop
cmp
pop
sbb
mov
mov
sbb
shlb
sti
push
nop
sub
ds
push
rclb
sti
shlb
in
stos
lods
mov
mov
std
inc
mov
inc
shlb
add
xchg
in
sti
insl
inc
mov
dec
mov
sarb
jle
ds
in
clc
lds
fs
mov
push
hlt
cs
mov
popa
cwtl
mov
mov
sub
sub
mov
xor
ljmp
test
shrb
cmp
pop
incb
xchg
cli
shlb
cli
xor
les
add
repz
xor
shlb
insb
sub
sub
jecxz
adc
dec
into
push
je
mov
mov
adc
icebp
int3
sub
stos
xor
test
jmp
mov
ja
ss
in
ljmp
jo
loop
enter
mov
out
aam
sbb
out
jge
mov
adc
adc
leave
xchg
push
sub
xor
movsb
sbb
das
enter
std
jae
insb
mov
mov
pop
bound
xor
ds
sbb
adc
btr
clc
popw
test
rcll
popf
jp
aas
arpl
push
add
hlt
jp
sahf
int
mov
xchg
mov
rclb
push
or
dec
adc
push
lret
out
pop
out
jnp
iret
dec
neg
inc
mov
lret
mov
dec
mov
pop
cmc
mov
xlat
push
push
mov
notl
aad
push
addl
int3
cmpsl
xchg
push
outsb
xchg
mov
popf
and
pop
adc
loop
stc
xchg
pop
add
pushf
movsl
es
lret
or
imul
xchg
sub
out
add
add
jmp
mov
mov
pop
dec
add
jo
push
and
mov
in
jge
mov
nop
jae
push
inc
in
push
into
adc
push
gs
rcll
ret
in
jns
push
xchg
and
in
ja
cmp
pop
cs
fnstsw
scas
dec
cmp
xchg
push
dec
out
popf
in
lds
xor
inc
or
int
sbb
push
addr16
mov
rcrb
andl
jo
out
mov
mov
cs
lods
clc
lahf
pop
iret
cmp
incb
jo
aad
sub
femms
xchg
jge
repnz
inc
mov
lock
gs
adc
inc
xchg
daa
cmp
lds
jb
xor
mov
das
cmp
ja
cmp
rolb
movsb
inc
mov
movsl
adc
cltd
mov
push
cmp
pop
std
push
and
and
adc
test
push
and
push
push
sbb
jnp
orl
lret
mov
scas
xor
enter
jo
adc
and
fcmovnbe
mov
push
inc
xor
push
adc
jae
out
loop
add
repnz
movsl
or
pop
ljmp
les
xlat
mov
enter
jnp
xor
or
mov
xchg
and
dec
push
and
mov
push
lock
cli
add
mov
aam
jns
popf
insl
xchg
loope
in
mov
loop
adc
xchg
pop
sbb
clc
mov
popf
mov
mov
lds
cmp
adc
add
jnp
sbb
jnp
or
outsb
push
outsb
cld
loopne
mov
push
lock
loope
in
repz
cwtl
mov
add
insb
cmp
repz
pop
pop
jae
arpl
sbb
bound
push
cmp
sbb
sbb
xchg
inc
out
lcall
dec
fisubl
push
cmp
popa
adc
je
enter
dec
push
mov
push
pop
pop
jo
push
repnz
dec
sti
popa
enter
pusha
xchg
ds
pop
sbb
mov
fcmovnbe
lret
sbb
clc
add
sub
dec
aam
inc
xor
cmp
mov
js
repz
cwtl
int3
pop
pop
aaa
inc
or
scas
pusha
or
sbb
notl
pop
inc
push
mov
and
lea
mov
jmp
or
xor
das
nop
pop
and
dec
push
or
mov
pushf
mov
and
or
loopne
into
sbb
mov
stc
out
nop
int
push
js
cmp
xchg
hlt
insl
cld
scas
push
sbb
xor
dec
nop
ds
mov
cs
inc
jge
mov
pop
and
cmp
mov
jl
fists
xchg
ja
dec
sub
in
ds
push
mov
adc
or
cmp
cltd
push
lcall
iret
loope
add
mov
add
ret
push
scas
rcr
out
es
loope
loop
inc
into
sub
adc
shll
lea
inc
ss
lret
cmpsb
xor
pusha
fs
sti
arpl
shrl
notb
jns
lock
es
and
push
loope
push
sub
and
repnz
outsl
ja
sub
adc
out
fs
or
lods
ljmp
jo
call
ret
adc
loope
pshufw
mov
call
lea
fisttpl
rolb
sub
hlt
inc
into
push
or
push
sub
lret
jp
shll
pop
testl
dec
pop
pusha
pop
mov
pop
pop
sbb
sbbl
rorl
cmp
mov
aas
xor
xor
lods
adc
push
sub
jae
aaa
add
cmp
or
mov
cwtl
and
aad
or
rep
enter
pop
adc
cmp
xor
jmp
sbb
in
mov
sub
je
pop
daa
push
dec
add
ss
jg
cld
cmp
out
xlat
mov
lds
pop
jmp
inc
jge
mov
push
fdivrl
xor
in
and
jno
push
mov
sbb
xor
dec
mov
sar
and
loopne
int3
xor
dec
int3
mov
pop
aad
jae
pop
adc
out
mov
inc
inc
nop
lods
roll
xchg
fs
insb
xchg
test
fnstcw
dec
sarl
sub
sub
push
push
xorb
mov
jp,pn
fwait
dec
sbb
sbb
out
ss
xor
jne
add
rcrl
std
dec
fldenv
loope
mov
pop
xchg
jbe
add
enter
jbe
sbb
in
es
sub
xor
popf
jp
push
roll
and
test
dec
insl
mov
fidivl
mov
push
pushf
mov
insl
aas
mov
pop
std
mov
and
mov
jecxz
and
jge
xor
mov
lock
lret
mov
fistpll
int3
popa
adc
lret
not
cmp
lret
inc
jp
subb
push
int3
pushf
pop
xor
or
and
sub
rol
fstps
push
flds
leave
int
and
push
or
pop
arpl
xor
addr16
mov
mov
add
int
pop
mov
ss
cs
mov
jge
into
call
dec
mov
sti
and
cmp
mov
inc
fnstsw
sbb
cmp
lcall
mov
xchg
daa
xor
mov
inc
rclb
orb
pushf
xor
int
shlb
and
xchg
sbb
jg
das
in
inc
add
sbb
lahf
out
mov
insl
cli
ds
fnstsw
mov
movsl
or
pop
stos
adc
cmp
sub
in
lret
jo
jno
lahf
adc
push
inc
dec
dec
adc
sub
add
dec
cmp
sub
and
decb
inc
mov
cmc
mov
pop
daa
movsl
orb
mov
movsb
arpl
stos
std
sbb
aam
inc
push
shrl
dec
lret
out
lcall
pushf
xor
sbb
jne
cs
xchg
stos
mov
xor
mov
xor
loopne
daa
mov
dec
or
cmp
out
mov
jp
lods
imul
dec
jne
xchg
rorb
pop
pop
cli
jnp
lret
ret
cli
pop
cmp
xchg
push
out
pop
test
test
movsb
cmp
das
or
cmpsl
mov
mov
lcall
aaa
je
js
std
push
test
xlat
pushf
inc
xchg
mov
mov
and
fisttps
in
dec
mov
xchg
pusha
aam
dec
adc
add
repnz
or
add
cld
loopne
std
mulb
mov
push
or
xchg
adc
faddl
xchg
xor
fldt
out
add
sbbl
mov
cmp
rclb
mov
add
xor
pop
out
mov
mov
and
addl
ds
aam
sti
adc
sbb
mov
aam
dec
out
inc
pop
mov
lods
dec
hlt
cmpsl
ljmp
leave
fwait
shll
xor
pop
sbb
fldenv
sbb
mov
mov
push
mov
dec
mov
in
cmp
bound
shl
mov
dec
sahf
inc
std
inc
mov
pop
add
lahf
xor
cmpsl
leave
cwtl
and
ds
sti
mov
rorl
jno
push
cmp
mov
faddl
sub
push
fstp
lcall
les
or
sarl
dec
dec
outsb
push
mov
dec
sahf
sub
shl
ljmp
leave
vshufpd
das
push
and
pop
rcr
cwtl
mov
sub
out
jb
cld
mov
sbb
call
mov
jl
out
jae
push
jmp
lods
repnz
sahf
push
or
mov
jae
stos
push
xor
fsts
cmpsb
addl
mov
imul
add
inc
xor
in
xor
jle
movsl
jmp
and
aam
mov
mov
pop
int3
xchg
push
mov
inc
incb
and
mov
push
loop
cli
jmp
and
sub
outsl
or
aam
add
int
add
imul
leave
fidivs
sbb
outsb
or
lods
sahf
das
inc
pop
dec
pushl
xchg
das
mov
sub
or
shlb
xchg
push
sbb
pop
dec
loop
adc
fimuls
xchg
stos
test
xchg
insb
push
cmpsl
sti
add
adc
jl
sbb
ret
adc
mov
mov
dec
bound
and
xor
and
xchg
sub
xchg
out
test
add
inc
outsl
mov
jl
xchg
aam
sbb
pop
mov
pop
cmp
sbb
or
jge
jg
sbb
out
outsl
mov
adc
xchg
aam
divl
add
sbb
pop
and
add
int3
cmc
mov
hlt
divl
fistl
xlat
sbb
test
ficomps
repnz
xchg
jecxz
cmp
shrl
push
pop
add
add
xor
cmp
cmp
xor
push
addr16
jp
cli
shll
stos
jnp
sub
xor
je
mov
pop
in
xchg
inc
gs
test
jnp
in
sub
jle
or
testl
cltd
lods
jge
push
in
jge
mov
lcallw
xlat
out
sub
sub
stos
inc
test
cld
xchg
or
ja
and
dec
pop
xchg
push
cltd
pop
out
movsb
jl
adc
add
andb
insl
adcl
push
or
imul
inc
or
clc
shl
jne
jns
fsubs
enter
sub
imulb
enter
mov
pop
fnstcw
inc
lret
pusha
cmp
add
mov
mov
sub
pop
mov
test
inc
cli
xor
mov
push
stos
pop
push
or
mov
inc
xchg
fcoms
add
inc
std
fwait
sub
and
js
or
lea
cs
inc
ss
pop
xor
enter
add
repnz
cmpsb
aas
or
mov
or
out
jge
into
ss
loopne
sahf
sbb
ss
jp
loopne
xor
test
adc
adc
push
roll
js
mov
mov
movl
jno
inc
mov
sbb
repz
nop
pushf
cmp
aas
mov
les
movsl
mov
mov
sbb
je
pop
addr16
enter
pop
mov
rorb
mov
bound
add
jo
insb
jb
fcoml
rorb
arpl
or
iret
out
bound
pop
lcall
mov
int3
test
xchg
fiadds
mov
scas
adc
mov
shll
adc
stc
call
jmp
andl
push
arpl
arpl
push
jl
test
sbb
fcoml
lock
dec
sahf
pop
pop
gs
xor
mov
dec
in
mov
daa
cld
ljmp
sbb
mov
jecxz
mov
xor
sub
pushf
mov
mov
fldt
jg
shrl
mov
add
cmp
hlt
jno
xor
fdivs
ds
dec
popf
rcl
cmp
out
jns
cmpsb
mov
xchg
push
mov
xchg
jne
xor
sbb
push
xor
push
pop
jne
fnstsw
iret
in
cwtl
insb
lds
aam
in
xorb
jbe
dec
sti
add
or
push
icebp
sbb
incb
fnsave
dec
loope
decb
leave
arpl
mov
mov
jle
mov
jae
mov
and
mov
cmp
push
cmp
push
scas
and
xlat
fbstp
push
mov
jb
jne
mov
pop
cmp
mov
or
addr16
fidivs
fwait
mov
mov
mov
popl
or
aas
mov
loop
mov
xor
add
adc
jmp
jmp
pop
stos
es
call
pop
mov
arpl
xchg
out
movsb
jle
leave
mov
xor
outsl
push
ja
cmpb
inc
arpl
inc
push
or
pop
pop
ja
das
and
cli
cltd
ficomps
daa
cs
mov
outsl
ljmp
or
jecxz
mov
int3
lods
pop
inc
push
sbb
popa
mov
and
jge
scas
xor
pop
leave
ret
sub
xchg
bound
lahf
ror
sbb
sub
popa
popa
das
cmp
rcrb
xorb
cs
fbld
dec
int3
inc
xchg
cmp
dec
mov
sbb
mov
cmp
mov
sbb
out
mov
jmp
push
push
addr16
jmp
cmp
jns
leave
cld
adc
das
lock
test
mov
jl
lahf
or
call
stos
outsb
or
add
cmpsb
stos
lcall
push
add
fisttpl
inc
xchg
std
or
pmuludq
pop
daa
mov
js
sbb
adc
adcl
fidivs
inc
and
or
das
adc
subb
xchg
mov
fstp
int
outsl
ljmp
sub
mov
int3
or
mov
and
dec
in
mov
adc
mov
iret
gs
sbb
cmp
sbb
dec
fs
dec
jle
push
into
mov
js
sub
out
sti
and
movsl
push
and
xlat
sbb
add
jbe
clc
add
dec
popf
test
cwtl
or
imul
lods
test
push
sbb
cmp
dec
fwait
cs
fsts
sub
adcb
cwtl
popa
jl
mov
and
jmp
adc
rcrl
or
or
popf
sti
mov
rcll
add
inc
pop
aad
cmpsb
pop
lods
addb
or
xor
pushf
int
adc
cs
jp
xchg
xchg
daa
xor
push
lret
in
popf
mov
addl
int
jle
stc
bnd
lcall
dec
xchg
xchg
mov
sahf
addb
test
cmp
mov
pop
das
xchg
ss
int3
idivb
inc
fildl
sbb
push
lock
cmc
sub
mov
cmpsb
xchg
aaa
inc
jp
out
ss
push
lods
sbb
movsb
in
je
pop
and
movsl
xchg
frstor
je
add
fwait
lret
fcmove
call
jl
xor
or
iret
mov
cmp
ds
pushf
push
push
mov
mov
mov
push
inc
dec
sbb
inc
dec
xor
inc
pop
xchg
add
cmp
inc
rolb
push
into
dec
pop
sbb
addr16
mov
inc
std
mov
enter
arpl
or
inc
es
push
bound
addr16
fidivl
test
ds
dec
scas
pop
cli
and
das
ret
insb
jge
push
in
mov
xor
fwait
pop
push
hlt
xor
nop
sub
das
filds
std
mull
adc
xor
mov
jecxz
or
dec
push
jmp
jp
nop
dec
jecxz
mov
mov
imulb
or
dec
ror
push
adc
rolb
pop
jmp
and
addl
jl
addl
pop
or
adc
push
jnp
in
lock
ret
mov
sahf
and
adc
cmp
sub
std
lds
int
pusha
and
cmp
popf
ja
int3
lock
sahf
leave
rorl
aam
adc
cmp
jecxz
jae
jl
mov
xor
sbb
ret
lock
test
xor
and
mov
inc
xor
mov
jb
movsl
inc
add
push
mov
sbb
stc
ret
pop
mov
jns
addr16
ret
xor
shlb
mov
mov
add
mov
push
cmp
fstpl
jge
sub
push
sbb
mov
sub
sbb
imul
aam
imul
addb
scas
xchg
push
push
jg
lds
jnp
push
pop
and
jne
push
dec
daa
push
cmp
add
mov
sti
push
cmp
nop
fnstcw
loopne
adc
inc
popf
mov
xor
or
inc
lret
mov
or
and
push
shr
cwtl
fsts
xchg
jp
leave
push
mov
cmp
add
shll
inc
mov
adc
adc
xchg
xor
cmp
mov
aaa
test
pusha
mov
adcb
loope
dec
adc
call
cltd
pop
stc
sahf
pop
pop
mov
rcrl
out
es
int
insl
dec
in
stc
call
fsts
inc
std
call
sub
mov
xchg
sbb
jp
loop
outsl
shll
inc
pop
testb
in
inc
sbb
sarb
lret
mov
sbb
repnz
cmpsl
inc
test
pop
jecxz
sahf
aam
push
xchg
cld
insl
hlt
sbbl
out
icebp
sbb
push
sub
mov
jae
push
add
adc
shlb
and
cmp
pop
ja
cmpsl
int3
mov
stos
scas
sahf
or
sahf
xor
fidivs
jmp
mov
rolb
hlt
mov
pop
xor
stos
sarb
jecxz
and
mov
mov
push
push
xor
in
inc
shlb
bound
scas
lcall
add
mov
and
xchg
mov
xchg
aam
mov
cmc
sarl
inc
mov
fmulp
into
mov
cmpl
push
push
daa
adc
nop
aas
cmp
push
adc
notl
add
cmp
repnz
mov
push
mov
ret
xchg
out
push
and
jp
minps
bnd
xor
xorl
pusha
dec
pop
fsubr
lock
ss
mov
popf
or
sbb
xor
cmp
cmpsl
and
push
mov
data16
out
outsl
das
or
cmp
mov
mov
fildll
cltd
jb
fildll
mov
xlat
push
pop
outsl
ss
push
jmp
xchg
cmp
dec
push
mov
jb
and
dec
mov
std
sub
mov
mov
cmpsl
sbb
push
sarb
adc
add
inc
push
stos
loop
add
imul
fsubs
push
cmovne
sbb
movsb
sub
decb
or
cmp
pop
cmpsb
rolb
cmp
and
mov
add
aas
pop
mov
mov
push
sbb
sahf
fdivrl
xor
jo
nop
lret
hlt
cltd
mov
jo
pop
xchg
adc
aaa
aaa
or
xchg
mov
push
out
xchg
pop
push
mov
cltd
xchg
out
push
icebp
add
and
inc
and
xor
das
notl
pop
shlb
test
int
mov
std
mov
fstpl
imul
insl
or
push
cwtl
pop
push
fsub
mov
push
je
ficoms
test
les
push
or
test
xchg
mov
mov
jg
inc
add
arpl
and
loopne
mov
mov
movsl
push
lods
cmpb
scas
cmp
sub
scas
adc
orb
add
sahf
add
gs
cs
lock
in
push
dec
adc
std
mov
fildl
mov
aas
dec
int
cmp
cltd
jge
fadds
dec
xchg
pop
into
xor
cld
pop
inc
and
jle
iret
pop
pop
push
scas
push
dec
fistpll
imul
push
push
insl
insl
loop
aad
jne
les
push
popf
fndisi(8087
fcoms
add
andl
sahf
xchg
push
mov
shlb
dec
jne
ss
sbb
fdivs
das
test
add
xchg
ror
sub
mov
jbe
mov
shlb
daa
cmovp
cmpsl
rorb
adc
call
jno
jns
mov
adc
and
in
sbb
in
out
aaa
inc
call
lock
sub
negl
or
sti
add
repnz
icebp
add
inc
fisubl
jo
cli
inc
imul
pop
repz
cs
fisubs
mov
mov
outsl
dec
push
pop
je
movsb
cmp
mov
hlt
cmp
lahf
or
fidivs
inc
shll
xchg
pop
jl
lock
mov
jge
xor
enter
add
ficomps
std
out
adc
and
jns
aad
xor
add
jmp
xchg
pop
dec
mov
mov
cmc
adc
lea
adc
mov
inc
or
andb
jg
lock
in
leave
stos
jmp
jbe
inc
popf
fidivrl
jno
stos
sbb
jb
cs
cmp
sbb
nop
cmp
popf
addr16
mov
jmp
out
jl
stos
mov
mov
jmp
dec
push
mull
inc
das
sub
pop
mov
mov
push
inc
and
cmp
es
push
sti
or
fstpl
mov
iret
out
jl
dec
out
call
notl
aaa
adc
add
push
pop
mov
aam
push
xchg
inc
js
mov
sub
xor
ds
pop
add
push
jb
nop
xchg
into
cmp
in
and
mov
lock
mov
arpl
shrb
and
gs
lea
jmp
mov
pop
addl
inc
mov
dec
mov
outsl
out
ss
popa
push
sub
popa
push
fsubr
or
fs
dec
aad
mov
es
mov
outsl
lds
daa
mov
inc
fdiv
cmpsb
into
clc
jae
or
xor
jae
bnd
clc
push
movsb
js
out
decb
leave
push
cmp
aad
mov
stos
mov
cwtl
bnd
ds
loop
insb
mov
fwait
pop
cli
or
es
xchg
push
mov
fists
lds
mov
or
cmpl
in
mulb
pushf
jmp
and
dec
inc
aam
xor
iret
mov
jp
xchg
pop
mov
jle
bound
js
sbb
pop
push
inc
xor
jb
scas
jnp
jo
push
inc
fnsave
push
inc
dec
scas
or
push
out
mov
mov
pop
mov
and
push
xor
popa
orw
xchg
push
movsl
sahf
inc
outsl
mov
pop
pop
add
fcomp
adc
dec
arpl
outsl
jno
pop
mov
and
popa
cmp
pushf
push
mov
lcall
pop
xlat
or
aaa
add
and
sbbl
ficomps
fisttpl
jbe
mov
mov
jo
mov
adc
andl
daa
or
div
in
add
jno
mov
movb
inc
les
sub
fistl
hlt
and
push
fnstsw
sbb
jnp
into
pushf
sbb
xchg
mov
or
mov
mov
pop
push
xor
ja
mov
mov
push
pusha
std
inc
jl
out
jecxz
cmpsb
arpl
addr16
add
or
daa
iret
pushf
xor
cld
xor
sub
pop
pop
arpl
or
testb
xchg
adc
movsb
lods
gs
hlt
popa
fstpl
aaa
mov
mov
push
sub
jb
mov
imul
cmp
ds
lret
pusha
adc
lahf
cwtl
mov
jmp
mov
pop
int3
or
fwait
imul
push
inc
loope
fldl
aaa
stos
mov
mov
push
leave
addb
rcrb
lahf
pop
out
jnp
xchg
out
lret
outsb
pop
fwait
adc
cs
push
mov
sti
loope
xchg
test
dec
nop
std
movsl
mov
mov
and
js
push
push
ret
adc
lods
push
inc
into
push
dec
aad
inc
in
cmp
je
add
push
xor
imul
adc
rclb
or
leave
and
imul
in
rorb
in
int
test
mov
imul
clc
addb
push
enter
sarb
fmuls
mov
roll
lahf
inc
jo
js
je
pop
xchg
mov
fsts
cmpl
cmp
ffree
mov
cmp
jb
cmpsb
xchg
outsl
outsb
outsb
in
or
cli
cmp
push
scas
cmpsb
nop
mov
pusha
mov
pusha
aaa
in
inc
ftst
imul
int3
jne
rclb
push
dec
mov
and
test
stos
pop
jb
sti
rcll
sbb
or
mov
pop
loop
pop
mov
push
inc
push
push
jl
addr16
das
or
stc
mov
jl
inc
dec
or
fs
mov
push
lds
mov
adc
pop
push
fs
pop
jae
inc
in
rorb
adc
test
lret
test
mov
sbb
in
adc
jl
lods
addr16
and
and
js
insb
sbb
loope
push
add
std
idiv
pushf
enter
xor
pop
lods
insl
push
and
jbe
shrb
mov
adc
test
jmp
lods
dec
lret
sahf
fwait
inc
dec
dec
in
cmp
cmc
sub
lea
dec
loope
push
fsts
lods
mov
fcomi
mov
pop
jg
lea
cmp
hlt
je
loope
dec
adc
rorl
das
mov
cmp
in
push
push
popf
sub
sbb
movsb
neg
add
adc
xchg
addr16
push
mov
xor
cs
ja
mov
inc
push
les
movsb
inc
jbe
imul
push
mov
lock
add
sbb
mov
decl
xchg
insl
cli
je
movsl
call
jg
or
push
xchg
fisubrs
je
pop
cli
jne
gs
sbb
lcall
scas
push
add
jbe
hlt
pcmpgtd
cmp
out
popa
stos
sbb
es
dec
movsb
call
mov
mov
jge
inc
push
aam
jae
push
pushf
push
push
sahf
fisttpll
test
dec
pusha
fiaddl
dec
int3
test
inc
jge
mov
mov
add
jg
leave
push
out
push
cmp
and
mov
jne
pop
jo
pop
dec
and
wrmsr
jb
xlat
cs
jne
sub
test
cmp
fidivs
lods
sbb
outsl
fiadds
push
call
das
es
jecxz
dec
mov
into
call
into
adc
mov
jne
sub
test
inc
xlat
dec
addr16
shr
in
fsubs
xchg
pushf
outsl
mov
xchg
dec
iret
loop
add
fldenv
jp
cmp
into
inc
addr16
std
pushf
xchg
adc
jbe
mov
xor
fucomip
cwtl
inc
cmp
push
scas
lock
pop
inc
out
movsb
bound
arpl
xlat
sub
fbstp
xchg
lds
cmc
ss
sub
pusha
loop
fldenv
adc
sub
xor
mov
cmp
lods
les
or
push
call
and
ja
sub
lock
rep
xor
pop
shlb
sub
pop
sub
push
cmpsl
mov
insl
lret
pop
sub
mov
std
adc
and
xchg
cmp
stos
fdivl
daa
or
subb
jmp
sbb
stos
ds
sbb
inc
dec
xorl
insb
adc
ja
cmc
repnz
dec
fdivl
xor
ret
pop
dec
push
mov
mov
test
dec
xchg
nop
loopne
lret
jns
adc
mov
jne
pop
push
call
mov
push
lahf
sbb
lcall
addl
es
mov
movsl
mov
loop
push
lock
movsl
incl
dec
sub
cmpsb
jecxz
xchg
lods
ljmp
int
out
lahf
dec
int3
sbb
sub
cmpsb
push
and
xchg
sbbb
call
add
test
lea
sbb
push
sub
add
xchg
add
xor
push
shrl
cmp
dec
or
lods
add
xchg
mov
cmpl
fcmovne
pop
fs
lahf
jl
and
and
add
adc
adc
and
fs
xor
jmp
je
test
into
lock
fs
ss
lock
and
fwait
inc
cmp
push
cwtl
mov
insl
out
loop
scas
pop
aad
lds
jae
repnz
jb
and
scas
das
iret
push
mov
roll
subb
lcall
xchg
arpl
ss
sbb
pushf
lods
adc
in
mov
sub
je
movsb
iret
inc
cmp
lahf
clc
jo
lret
sarb
in
sub
mov
xchg
sbb
das
int3
js
mov
je
push
add
lea
jge
mov
xor
insb
dec
insb
mov
sub
pusha
fistps
mov
test
mov
or
popf
xchg
cld
cltd
subb
adc
add
jge
push
ds
sub
mov
ret
mov
jp
adc
lds
cmovb
in
adc
mov
push
int
mov
pop
int
add
push
testb
xor
mov
mov
inc
xchg
jecxz
aas
adc
jno
pop
int
and
mov
and
sti
sti
das
fldcw
mov
sub
dec
xchg
leave
pop
sub
xor
push
lds
rorl
dec
xor
fstl
jg
pusha
push
xor
jge
dec
loopne
outsb
insb
xchg
je
xchg
fisttpl
gs
xor
lock
shrb
cmpb
das
dec
dec
cmp
push
sbb
in
pop
xchg
in
je
lock
dec
jae
stc
ret
js
adc
or
sti
imul
insb
popa
push
adc
daa
popf
stos
xchg
mov
add
movsl
dec
mov
mov
iret
or
insb
mov
adc
cmp
daa
inc
push
xchg
pop
int
outsb
and
push
out
cld
outsl
ja
jo,pt
loope
dec
xchg
lods
ja
mov
inc
adcl
mov
imull
push
enter
gs
mov
push
add
inc
out
mov
sarb
xchg
mov
inc
add
outsb
out
adc
stos
test
sbb
pop
pop
icebp
mov
retw
pop
call
js
shl
loop
inc
shll
add
push
ss
jg
or
push
in
int3
or
rcll
jne
xchg
mov
add
mov
add
dec
xchg
and
sbb
push
cmp
xchg
jg
cmp
add
loope
pop
mov
jecxz
sbb
and
int
push
push
pushf
aad
les
mov
mov
fdiv
xor
pop
neg
push
or
push
or
xlat
mov
test
out
test
lahf
pop
push
out
xchg
imul
es
sub
incb
lahf
jmp
xchg
stos
sti
pop
ljmp
add
xchg
bound
inc
rorl
fcmovnu
mov
fadds
pop
jg
popa
imul
sbb
mov
lods
rolb
xchg
push
pop
pop
punpckldq
mov
xchg
loopne
xchg
dec
jg
xchg
pop
pop
loope
push
pop
or
mov
mov
lret
divb
fbstp
jo
clc
cs
mov
cwtl
aaa
jae
imul
dec
insb
pop
sbb
push
adc
jle
mov
or
xchg
aad
add
cmpsb
cltd
and
sarl
mov
mov
inc
in
or
dec
out
je,pn
pop
sub
cmp
getsec
inc
lods
mov
cmpsb
add
stos
xchg
lea
pop
inc
push
dec
rclb
call
lret
jl
cmpsb
fisubs
push
jp
aad
int
lahf
cwtl
mov
cmp
adc
rcrb
pop
mov
ret
fwait
in
hlt
jnp
insb
add
idivl
ret
and
sti
xorb
add
jae
loope
hlt
sbb
in
sbb
mov
sub
movsl
jno
lods
pusha
xor
lcall
vmptrst
mov
add
xor
cmc
in
pop
lcall
ja
ljmp
dec
jmp
xorb
mov
pushf
mov
fxch
int
inc
cwtl
inc
lret
stos
adc
cwtl
popf
insl
aas
cmp
lret
add
or
sub
inc
push
dec
sbbl
into
mov
jo
xchg
lahf
mov
fmuls
cmp
test
aad
fmuls
push
decb
xchg
pop
xchg
shlb
push
aas
imull
cmp
or
mov
test
scas
push
xorb
arpl
jge
sbb
pushf
mov
fbld
or
dec
in
xor
xor
push
cmp
push
stos
xchg
cmp
arpl
mov
in
and
jle
ds
lods
cmp
dec
sbb
shrl
jl
insl
test
mov
paddw
xorb
subb
xor
or
rcrl
popf
hlt
dec
inc
jns
mov
test
shlb
inc
jb
imul
mov
repz
inc
iret
iret
call
add
test
loop
cld
cli
out
xchg
mov
mov
xor
add
loope
and
lds
lret
imul
mov
sahf
ss
pop
push
inc
sbb
and
mov
ret
sti
aam
push
adc
mov
sbb
imul
fstl
mov
inc
int3
and
inc
adc
or
mov
inc
cmp
cmc
aam
inc
mov
movsb
mov
adc
cwtl
mov
mov
sbb
sbb
loopne
addr16
jnp
ret
xchg
out
mov
mov
clc
int
jp
addl
out
jnp
xor
mov
insb
fadds
xchg
imul
push
lea
jp
push
mov
inc
fs
dec
test
outsl
cmp
cs
icebp
std
addr16
inc
cltd
ss
lea
aaa
shll
jecxz
into
inc
sbb
xlat
xchg
jp
nop
js
loope
mov
in
sub
pop
push
jg
shll
mov
in
dec
sbb
mul
jge
daa
push
add
jns
push
int3
and
dec
lahf
shll
push
in
stc
cmp
mov
popa
jne
sub
inc
adc
scas
fsubl
mov
scas
cmp
jno
test
into
mov
out
scas
mov
test
mov
mov
pop
addr16
ja
pop
add
test
outsb
add
and
imul
test
inc
add
push
lock
mov
adc
inc
movsb
fiaddl
imul
jecxz
mov
std
inc
mov
mov
jbe
ds
sbb
insb
mov
xchg
mov
dec
sub
movsb
mov
call
out
repz
push
cltd
dec
int
loop
mov
shl
fcoml
or
insl
je
js
sbb
xchg
les
imul
pop
int3
andl
and
push
movb
addr16
rorb
cs
sub
dec
fwait
mov
mov
enter
and
jb
mov
push
insb
add
shrb
lahf
mov
mov
mov
jo
xchg
adc
cmc
fistpl
or
push
cmp
pop
dec
sar
inc
xchg
sbb
fsts
in
mov
enter
out
ret
incl
pop
pop
or
pop
xor
out
mov
push
push
roll
jmp
add
jmp
rclb
stos
jbe
add
rcrb
push
xor
jge
pusha
push
out
mov
jnp
add
dec
pop
xor
jge
inc
push
outsl
ret
scas
imul
inc
pop
xor
push
mov
gs
jecxz
xor
mov
fmull
mov
gs
jno
ds
push
lea
fdivrl
fmuls
imul
pop
fdivl
inc
sub
cmp
sbb
cmp
loop
sbb
sub
xlat
or
loop
push
or
jno
adcl
push
and
pop
jbe
mov
je
flds
daa
dec
ss
sbb
insl
sahf
aam
ret
add
ret
gs
mov
sbb
orl
and
flds
imul
pushf
cmp
nop
pop
sub
dec
fwait
mov
and
mov
aad
jae
shrl
pop
add
jb
push
stos
lea
dec
and
adc
imul
push
aas
pop
stc
imulb
jecxz
and
jp
orl
mov
rcll
xor
mov
pop
aaa
gs
jl
lret
sub
dec
and
adc
pop
shlb
mov
sub
pop
xchg
int
xchg
cmpsl
fs
inc
mov
repnz
imul
stc
popa
out
mov
cmp
cli
fisttpll
js
fnstsw
sub
xchg
add
adc
loope
shll
cmp
fxch
adc
iret
push
dec
cmp
pop
mov
pop
andl
adc
sbb
jmp
jo
mov
into
or
push
jg
dec
push
shll
inc
pop
test
cltd
push
scas
ret
mov
mov
movsb
xchg
xor
push
adc
adc
nop
push
jmp
in
pop
jecxz
sub
mov
mov
into
dec
rol
outsb
test
mov
jge
sub
and
gs
arpl
mov
sbb
add
hlt
xchg
cmp
lret
mov
fnstsw
cltd
sbb
fsubr
cmpsb
imulb
pusha
adc
push
lret
cmp
push
loop
and
fistps
mov
mov
jecxz
cmp
int
sub
sub
jno
jo
repz
clc
jnp
xchg
sbb
or
cs
int
pop
test
inc
xchg
sub
andl
enter
scas
jae
mov
mov
repnz
mov
sbb
cltd
jecxz
popf
in
sub
xchg
push
stos
dec
or
mov
push
xchg
test
or
sahf
out
movsb
jb
stos
pop
sub
addr16
rcl
xorl
xlat
push
std
dec
rclb
imull
xchg
or
in
push
fisubrl
into
jbe
add
cmpsl
dec
or
call
sahf
enter
adc
jge
in
jmp
push
push
sub
gs
shlb
dec
cs
xchg
ja
fidivs
push
sbb
inc
dec
cmp
ds
inc
shlb
mov
divb
cmp
jle
fisttps
roll
pop
ficoms
push
sub
cmc
out
mov
cmp
or
dec
mov
lds
dec
add
je
dec
loopne
mov
add
add
repnz
cltd
sub
lret
lds
lahf
sub
adc
pop
xor
loopne
test
sahf
sarl
dec
arpl
lret
ljmp
es
jne
pop
jbe
push
sub
pop
pop
jae
fldl
imul
fnstenv
cmc
test
fstpl
call
fstpl
arpl
dec
inc
push
and
push
jae
jge
out
scas
or
test
daa
xchg
cmp
push
jns
ljmp
rcll
insb
xor
pop
xor
adc
push
cmc
les
inc
sub
loop
pop
es
jnp
xor
fisttpl
sbb
pop
cmp
aad
scas
jo
or
cltd
and
ss
gs
insl
dec
sahf
lock
lods
mov
pop
fdivp
test
jo
mov
adc
loope
sbb
add
mov
jl
sbb
cltd
dec
pop
ds
cld
adc
mov
nop
bound
cmp
xlat
mov
and
fbld
bound
sbb
inc
dec
push
mov
or
sbb
xor
inc
mov
inc
and
stos
inc
add
jnp
repnz
clc
fcmovnu
mov
gs
adc
cmp
ja
mov
bound
xchg
ja
add
mov
push
sbb
popa
mov
stos
pop
jl
test
jb
and
cmpsb
iret
out
aam
or
or
stc
ret
dec
dec
mov
push
subb
sahf
ljmp
push
jno
mov
js
popf
in
inc
lock
in
inc
and
stos
lret
and
xchg
loopne
push
adc
fs
and
ret
stc
mov
aas
pop
xchg
mov
ret
popf
arpl
lret
imul
data16
bound
mov
xor
loope
out
test
mov
lahf
stos
bound
mov
inc
aas
cmp
test
into
pop
loopne
xor
mov
sbb
xchg
xchg
mov
orb
or
inc
push
adc
sbb
adc
sahf
icebp
pop
roll
fwait
xchg
cmpsb
add
insl
rolb
fisubl
stos
ja
inc
pop
add
fwait
mov
lods
cltd
ret
cmp
or
xchg
out
lods
outsb
aaa
mov
mov
fldl2t
sbb
stos
adc
jae
mov
das
mov
adc
cmp
dec
mov
mov
push
popa
xor
mov
mov
pop
fldenv
push
fstps
je
add
adc
sub
nop
sub
sbb
mov
test
mov
dec
xchg
jg
xchg
dec
xor
pushf
cmp
xlat
mov
sub
repnz
int3
incb
dec
mov
push
pop
aas
les
je
bound
int
mov
icebp
jmp
lods
xchg
enter
jne
das
jmp
push
pop
mov
sub
jns
mov
push
adc
sbb
daa
repz
dec
fwait
adcb
xchg
test
push
loope
adc
xchg
inc
or
push
and
sbb
xor
cltd
inc
dec
and
cmp
push
addr16
and
scas
mov
test
popa
pop
je
scas
cmpsb
xor
lret
ss
xor
jae
inc
xchg
cltd
lcall
xchg
outsl
cmp
or
push
repz
lea
sbb
dec
sub
or
pusha
and
jecxz
mov
test
dec
aas
roll
psubd
inc
pop
jns
and
lods
push
or
xor
fidivs
mov
mov
test
xlat
xchg
xchg
adc
shll
inc
je
repz
lret
pop
hlt
repz
imul
cli
xor
sub
ret
int3
inc
push
xchg
sbb
pop
je
jae
pop
xor
pop
outsb
dec
dec
pop
add
andb
mov
stc
pop
xchg
push
adc
lock
adc
dec
push
mov
out
je
popa
fs
js
inc
and
and
xchg
push
dec
mov
lds
mov
push
inc
lret
stos
dec
mov
push
xchg
test
aaa
scas
pop
hlt
add
pop
adc
or
iret
clc
jle
mov
pop
cmp
ljmp
jg
lret
push
sub
inc
adc
fisttpll
imul
inc
cmp
mov
flds
sbb
adc
pop
data16
adc
inc
add
mulb
adc
xlat
loop
add
test
cmp
std
scas
cmp
ret
in
jbe
add
movsl
iret
ss
loope
push
les
imulb
jecxz
testl
jo
testl
jo
add
aas
xchg
mov
mov
or
inc
mov
cli
in
les
or
rorb
xchg
leave
xchg
or
out
or
lahf
xor
or
cli
cmc
in
iret
adc
mov
aaa
loope
jb
pop
push
testb
cwtl
cmp
int3
cmpsb
lock
adc
or
and
pop
sub
loopne
decb
sbb
dec
loop
xlat
rcl
and
rorl
pop
enter
std
xchg
push
sahf
cmpl
xor
sarb
out
pusha
jmp
mov
xorb
fadd
scas
idivl
paddw
adc
add
pop
mov
sbb
sbb
notb
xchg
adc
test
addr16
sbb
shrl
jle
addr16
push
mov
rcr
call
ss
pusha
fwait
push
in
xchg
adcb
pop
shr
dec
addl
mov
push
push
xchg
scas
outsl
adc
ret
addr16
jo
push
dec
adc
dec
mov
mov
sub
xchg
clc
and
jl
mov
int
xor
add
sbb
push
mov
in
lahf
xchg
cmpsl
inc
mov
ret
sub
pop
inc
xlat
xchg
mov
dec
js
cmp
dec
js
arpl
add
icebp
or
lret
sub
fldln2
mov
insb
xchg
xchg
dec
push
jo
leave
mov
int
nop
orb
push
adcl
jmp
int
sti
idivl
mov
add
out
jae
dec
cmpsl
popf
mov
fisttpll
jg
xor
int
into
sub
in
cltd
xor
fisubrs
pusha
dec
jmp
test
xchg
xchg
stos
cli
jbe
jp
fsubl
dec
pop
add
in
adc
in
test
pop
pop
mov
and
sub
sub
hlt
adc
es
push
repz
fs
andb
or
and
mov
subl
mov
and
insb
ljmp
mov
jl
rcll
jae
pop
mov
pop
imul
or
adc
leave
add
sbb
fnstcw
mov
das
addl
sbb
mov
mov
aas
gs
jb
mov
dec
push
sub
adc
mov
mov
cmp
or
cmpsl
add
sbb
das
adc
inc
pop
ret
movsl
xorl
mov
mov
inc
dec
pop
div
push
mov
sahf
pop
mov
dec
ljmp
leave
mov
setp
out
jecxz
pushw
inc
mov
cli
aas
out
fisubrs
add
pop
sarl
xchg
mov
out
gs
pop
sbb
aas
arpl
lea
push
mov
bound
jbe
or
dec
sbb
push
sbb
pop
in
insb
jp
aam
mov
dec
pop
in
je
adc
imul
xor
aam
inc
fsubs
aam
mov
jle
sti
mov
push
fsts
addr16
pop
cld
ret
leave
ret
or
pop
and
pop
cmpsl
add
lods
cld
jg
and
call
adc
xor
xchg
out
call
sub
outsb
iret
icebp
or
decl
aas
aas
fmuls
lock
dec
inc
cmc
outsb
jnp
mov
push
subb
cmp
cmp
repnz
and
xlat
not
sub
inc
sti
push
pop
insl
mov
mov
repz
int
lds
shlb
inc
mov
push
loopne
fadd
cmp
fs
mov
loope
inc
add
or
inc
bound
mov
repnz
jbe
out
cmc
xor
xor
nop
push
aaa
test
aas
xor
int
decb
insb
add
sbb
xchg
into
stos
testb
cmp
mov
add
mov
clc
xchg
sarb
inc
inc
inc
xchg
or
test
xor
int3
mov
loop
mov
xchg
cltd
mov
push
mov
cmpsb
xchg
jp
cmc
sti
leave
xchg
pop
mov
testl
lcall
push
and
lock
mov
xchg
fisubrl
out
mov
mull
rorl
sub
movsl
cmpsl
sti
in
jo
push
add
mov
xor
sbb
mov
fstl
inc
in
fs
in
lods
int3
out
cmpsl
mov
loope
das
mov
or
adc
fldl
fists
in
sar
mov
and
icebp
push
pop
clc
div
xor
pushf
js
fldcw
fyl2xp1
dec
cmpsb
fiaddl
xor
sub
out
lock
mov
icebp
ss
int
sbb
rcrb
ljmp
mov
adc
dec
ljmp
stos
pop
inc
cmp
sbb
mov
fldcw
mov
aaa
inc
jmp
gs
pop
cmc
and
stos
sbb
nop
add
pop
inc
mov
mov
mov
jp
mov
jnp
mov
pop
sbb
rolb
subb
push
bound
in
lods
leave
mov
dec
cmc
mov
add
cmp
sbbb
in
jecxz
daa
cmp
addr16
pusha
jl
mov
rorb
inc
test
jl
sahf
movsl
dec
push
aaa
push
adc
cwtl
stos
cli
imulb
cmp
mov
sub
repnz
fwait
iret
inc
xchg
dec
shrb
or
rcr
cmpb
push
idivb
test
jne
add
repz
adc
popf
gs
adc
inc
cltd
or
push
adc
dec
test
jo
cli
lock
dec
lahf
es
mov
push
cld
out
jne
inc
inc
mov
sub
fs
test
adc
pop
loopne
aad
and
test
call
into
mov
fwait
and
jne
xor
not
iret
popa
and
outsl
scas
jb
sarl
and
add
xor
dec
std
iret
sbb
mov
aam
mov
jne
jp
or
xor
enter
jp
mov
add
fcomi
mov
xor
sub
je
jo
lcall
ja
sbb
cld
mov
jge
fstps
fsubs
sub
jp
or
inc
outsb
xchg
repz
movsb
roll
lock
pop
cmp
push
cmc
mov
mov
inc
jo
fprem
sub
push
pop
xor
pop
inc
outsb
repnz
mov
cmpl
insl
sbb
outsl
call
mov
das
cld
scas
rcrl
repz
xchg
ja
out
jecxz
rolb
pusha
or
lcall
test
in
mov
jecxz
inc
cmp
mov
cmpsb
test
dec
mov
pop
mov
xor
mov
xchg
les
int3
mov
shrb
lret
sub
sub
cmpl
cmp
mov
jnp
cmc
cmp
xor
xor
mov
mov
push
out
dec
test
mov
dec
lret
or
data16
call
sbbl
in
fstl
xchg
loopne
pop
ljmp
dec
call
pushf
pop
aad
leave
femms
std
add
pop
jp
lcall
push
or
mov
leave
cltd
gs
xor
arpl
out
loop
and
xorb
xchg
in
mov
ds
or
xor
push
in
cmp
or
int3
inc
pop
out
lods
adc
ret
call
mov
pushf
repnz
mov
cltd
sbb
sbb
push
mov
cmp
push
int3
cmpsl
push
cli
repz
ds
fwait
dec
push
or
int3
mov
xorl
popf
mov
cltd
fdivs
fdivp
mov
push
insb
inc
xorl
mov
cmp
sub
ret
lea
cli
or
orb
in
add
cmp
sub
fadds
and
jo
call
adc
les
xchg
adc
enter
xlat
sbb
mov
push
or
pop
jl
inc
cld
jle
call
cmpsb
pusha
fdivrs
das
fstpt
or
cmc
out
and
sub
or
push
fcoml
lahf
or
jne
and
scas
rorb
repz
loopne,pn
idivl
cmp
dec
mov
push
jns
xchg
jecxz
pop
or
frstor
pop
and
and
xor
hlt
aad
icebp
cmp
jge
cmpsl
insb
jl
xor
mov
clc
pop
imull
lods
xchg
mov
add
push
imul
jg
sub
mov
mov
in
dec
sbb
mov
mov
iret
sbb
xor
das
lret
mov
cmp
xor
icebp
mov
aaa
add
das
pop
fistpll
push
pop
jne
or
jmp
mov
jl
sbbb
enter
jle
sbb
pop
arpl
mov
pop
leave
push
or
ret
dec
arpl
jmp
or
xchg
jle
out
sar
stos
sbb
mov
lea
mov
mov
mov
jl
imul
sti
int3
inc
add
xchg
adc
sub
or
popf
cmpsl
aaa
rorb
pop
pusha
js
aas
xchg
lods
sbb
mov
sub
fsubrs
adc
out
repz
ficoms
repz
movl
test
incb
std
push
daa
adc
ja
and
sbb
add
in
cld
sub
loopne
pop
pmullw
mov
ret
mov
push
xchg
pop
into
dec
flds
jmp
leave
loop
int3
hlt
ja,pt
jl
mov
push
outsl
add
mov
fsts
outsb
outsl
dec
orl
pop
sub
push
inc
dec
icebp
mov
scas
fs
xchg
sarl
mov
out
jg
jmp
jb
incl
mov
outsb
decb
push
and
xor
negb
fs
mov
aad
dec
xlat
je
sub
imul
inc
les
lahf
adc
loop
sarl
xor
fcomip
and
lods
orb
xor
sbb
cmpsb
push
lret
rol
sbb
mov
push
mov
add
pop
ljmp
stos
push
push
lods
in
or
xlat
pop
cld
mov
fidivl
or
mov
inc
notl
sub
xor
iret
cld
fwait
data16
push
addr16
push
mov
addr16
jge
mov
xor
lea
pop
push
jb
mov
pop
adc
push
jns
pop
cmpl
or
lods
rclb
push
ret
ret
stc
imul
pop
cmp
adc
jne,pt
fstpl
sbb
lds
fs
mov
add
cmp
loope
jb
fs
test
jp
jnp
lcall
fidivrs
sbb
jae
leave
jl
lock
push
pop
in
ret
sbb
push
adc
xchg
adc
fsts
fnstenv
cltd
ds
pop
inc
in
pop
ffreep
push
loopne
lret
fbstp
jp
add
pop
movsb
fwait
adc
sbb
cmp
ret
lods
out
sub
int3
lahf
mov
in
pop
mov
arpl
mov
pop
push
pop
jo
mov
add
xchg
pop
aas
test
or
into
pop
jmp
cli
xchg
mov
out
jae
clc
fnstsw
mov
jne
pop
popa
mov
xchg
adc
push
bound
and
dec
mov
icebp
or
mov
ljmp
das
in
mov
add
mov
mov
fwait
dec
cmp
jge
rolb
dec
movsl
incl
dec
push
push
js
shlb
aam
inc
inc
or
push
es
shll
push
add
adc
mov
movsl
movsb
jno
imul
dec
add
sub
jl
push
stos
mov
lods
xchg
insb
testb
sar
insb
mov
push
outsl
dec
fisttps
sbb
xchg
mov
xchg
inc
outsl
jo
xchg
sarb
cmp
iret
roll
xchg
push
cltd
testb
jbe
jg
sahf
push
inc
les
rolb
into
fstl
test
add
dec
jmp
mov
cli
pushf
dec
pop
adc
arpl
pop
dec
pop
cltd
lock
xor
in
cmp
ss
enter
mov
jo
sbb
mov
push
mov
int3
repz
dec
out
sbb
scas
test
add
insb
cmp
xchg
imul
mov
mov
xchg
mov
mov
push
adc
hlt
push
mov
sbbb
in
arpl
cmp
popa
inc
ret
fbld
std
rorb
xchg
sub
out
add
ss
dec
orl
dec
rclb
jns
jne
dec
or
jo
cmp
lret
adc
scas
mov
adc
sarl
jno
outsl
mov
push
sbb
pop
lds
dec
iret
and
and
xorl
in
stos
addr16
fsts
imul
xchg
lock
fadds
dec
lds
mov
rolb
out
pop
mov
jns
jmp
mov
mov
mov
add
or
ss
or
clc
lret
jo
adc
scas
and
push
sub
push
stos
sarb
adc
and
jns
push
loope
addl
imul
cmc
jb
rolb
pop
adc
test
mov
push
adc
jae
fdivrl
dec
sub
fwait
ret
jne
bound
stos
inc
cmpsb
fimuls
insb
in
or
fadds
push
into
in
adc
int
fwait
es
popa
sub
pop
dec
aaa
shll
or
xor
jne
add
jge
inc
pusha
mov
xchg
pushl
fwait
stos
lret
icebp
lahf
rcr
adc
push
insb
notl
xchg
push
jo
cwtl
mov
addr16
jl
sub
jnp
inc
push
jmp
call
add
push
or
mov
xchg
scas
sbb
in
mov
cmp
sub
jns
les
out
pushf
or
loope
testl
sbb
repnz
nop
in
sti
fwait
sub
mov
and
cmp
add
jp
and
std
add
pop
sbb
mov
cs
aaa
cmp
pop
stc
cmpsb
pop
into
enter
movl
out
aas
imul
daa
js
lods
jae
aad
xchg
fwait
test
mov
scas
adc
in
iret
xor
movsb
xor
add
mov
lahf
push
push
push
or
mov
sahf
testl
fstpl
lods
aaa
mov
mov
sub
cld
je
sbb
fucomp
add
and
fdivl
inc
or
mov
jnp
push
xchg
rcl
js
xor
push
sbb
leave
mov
mov
pop
insl
stos
and
scas
adc
xor
rorl
push
stos
adc
into
sbb
sbb
mov
adc
in
push
dec
or
sbb
mov
lret
test
push
mov
and
fimuls
pop
jno
add
push
rcr
sahf
jp
imul
pop
leave
cmpsl
cmpsb
dec
mov
push
jne
push
push
pop
xchg
mov
sub
adc
sbb
loope
das
or
das
mov
mov
inc
inc
inc
sub
adc
pop
out
inc
faddl
pusha
scas
ficoml
sbb
into
and
lock
mov
pop
test
jmp
jbe
test
fsts
jo
mov
mov
and
mov
fdivrl
mov
hlt
inc
and
bndldx
enter
cmp
dec
mov
mov
mov
xor
jb
loope
cli
ja
daa
je
ss
cmp
inc
addr16
and
test
cmp
ss
xchg
dec
jmp
or
loop
push
sarb
aas
scas
jo
pusha
outsl
ss
xchg
sub
in
arpl
inc
push
das
inc
fwait
lret
insb
push
jne
fcompl
and
test
mov
es
loope
sbb
pop
test
pop
repnz
adc
stos
or
lahf
mov
btr
and
loopne
jge
js
mov
andl
data16
adc
call
or
or
or
mov
movsl
mov
dec
arpl
pop
and
aam
and
sbb
les
fimull
jo
pop
pop
push
cmp
stc
mov
dec
arpl
mov
pop
shr
dec
shl
in
dec
or
jo
jnp
aad
movsb
cmp
lds
inc
dec
and
inc
sbbl
mov
jecxz
cmp
in
push
bound
xor
roll
push
roll
sbb
push
cmp
adc
fdivs
repnz
push
push
dec
icebp
bound
mov
inc
sub
lret
sbb
out
loop
outsl
cmp
js
cld
inc
mov
or
pop
dec
xchg
ljmp
jmp
arpl
adc
clc
not
xchg
je
jbe
jb
dec
ljmp
dec
push
sbbl
rorl
cmp
jg
fadds
xchg
push
jno
push
push
in
or
int
xor
loop
faddl
pop
subb
popf
adc
dec
insl
insl
fldl
push
jl
mov
fnstenv
sbb
sbb
dec
xor
cmp
aam
dec
pop
adc
push
cmpsl
mov
out
pop
push
and
and
push
outsb
dec
shrb
loope
dec
shl
xadd
jae
push
pop
fsubrl
aam
stc
cmp
mov
jns
push
xchg
push
out
ret
sub
inc
pop
leave
inc
pop
push
cmp
lock
mov
push
aas
inc
es
lea
es
fsubs
xlat
xchg
shl
or
pushf
js
ljmp
ret
enter
dec
lods
shll
scas
in
inc
xor
sub
sahf
pop
popf
mov
ja
fs
pop
icebp
in
dec
xchg
cli
add
std
out
xchg
mov
jl
sbb
movsl
push
cmp
adc
sbb
jge
jno
cmp
push
ja
push
test
lds
jecxz
in
xchg
mov
adc
pop
jp
das
lock
cmp
cmpsl
mov
test
xor
pop
xor
div
jb
int3
mov
sbbb
push
xchg
cmpsb
add
xchg
icebp
mov
cmp
stc
pushf
into
mov
fldl
clc
mov
xor
adc
mov
cmc
ret
mov
mov
mov
test
mov
dec
mov
mov
repnz
rolb
ret
sub
pusha
pop
cmp
arpl
jne
inc
add
mov
adc
cld
outsb
mov
inc
sarl
adc
sbbl
cmp
jmp
shld
test
sbb
mov
xchg
mov
andl
push
jae
enter
cmp
nop
jg
push
jne
fwait
mov
mov
add
fsubl
add
cmp
xor
test
std
mov
in
outsl
and
mov
jge
orl
lret
dec
jae
push
test
addr16
xchg
mov
add
cwtl
push
notb
insl
ret
xchg
or
push
jecxz
test
hlt
cmp
fwait
adc
aaa
or
sub
scas
fcmovb
dec
push
jo
and
pop
xchg
lods
hlt
sbb
orb
xlat
add
adc
sbb
mov
mov
fiadds
iret
aam
fcomps
jl
aad
cltd
xor
aas
sahf
popa
cmp
addb
push
pushf
xor
lods
xor
loope
sub
dec
out
nop
lret
xchg
mov
mov
inc
dec
push
cltd
ret
stos
fwait
fwait
pop
and
pop
dec
push
push
add
rcl
adc
bound
mov
lock
xor
rolb
sti
enter
push
dec
pop
xchg
icebp
sbb
and
ss
aam
jg
incl
imul
popf
cmc
stos
cltd
int
add
je
cld
int
mov
repnz
lcall
mov
inc
in
and
or
loopne
enter
pop
decb
inc
enter
or
sti
xchg
inc
jmp
lock
dec
xchg
scas
push
mov
std
clc
inc
decb
fcoml
inc
and
addr16
pop
xchg
rcrl
arpl
into
cld
push
and
inc
lret
or
pop
shll
jp
int
pop
inc
orb
cmp
sbb
mov
ror
push
jns
or
mov
mov
pop
inc
adc
xor
ss
mov
mulb
mov
out
dec
mov
mov
sbb
cld
mov
je
sbbb
stos
pop
scas
cmp
mov
jp
mov
imul
jbe
and
dec
jge
mov
cmc
arpl
add
cwtl
xchg
outsl
mov
clc
das
lds
sahf
pop
enter
int
inc
sbb
insl
and
ret
jg
aas
popa
fs
add
dec
outsb
push
jecxz
mov
xor
mov
adc
testb
pop
push
sub
aad
into
js
js
cmpsb
push
xor
mov
and
jnp
pop
aas
call
pop
cmpsb
clc
je
jmp
jg
leave
pop
push
mov
cmpsb
xchg
aaa
iret
loop
int
in
pop
dec
cmp
scas
sahf
pop
stos
mov
mov
cmp
movsb
ss
or
mov
testl
dec
cmp
push
test
test
mov
fs
xchg
das
clc
fisttpll
gs
push
shlb
cld
ret
sahf
inc
mov
ds
gs
je
inc
cmc
fdivr
mov
mov
and
lcall
push
mull
or
addb
notl
mov
push
pushl
pop
aam
jnp
adc
push
in
jbe
pop
leave
out
adc
jge
jbe
adc
sti
cld
dec
gs
jle
sti
lods
aaa
jl
outsl
pusha
ror
or
push
iret
orb
inc
jge
jo
addb
push
xchg
jge
cmpsb
out
xchg
std
sub
enter
arpl
pop
mov
or
cmp
pop
adcl
rcll
lds
sbb
jo
push
aaa
push
inc
daa
pop
sysexit
mov
lock
out
ss
aaa
xchg
xor
aam
adc
mov
pop
pop
pop
fs
mov
call
push
dec
mov
push
in
pop
dec
sbb
arpl
pop
hlt
out
sbb
faddl
mov
aam
orl
mov
dec
lret
sub
jl
cmp
jecxz
mov
outsb
sbb
xchg
outsb
addr16
sarb
aad
jle
xor
daa
sub
mov
pushf
xor
enter
jns
mov
out
ss
pop
lea
push
or
inc
add
les
mov
cli
mov
adc
out
pop
das
mov
fidivrs
les
adc
repz
mov
iret
pop
lods
mov
or
mov
sti
xchg
les
xchg
inc
in
dec
pop
add
in
xlat
sbb
lods
sbbl
lods
sbb
push
hlt
dec
xchg
adc
inc
int
cmp
jmp
int
fisttpll
lock
idivb
les
or
push
sbb
dec
xchg
in
jnp
shr
inc
andl
in
xor
xchg
jae
fldenv
imul
xchg
or
iret
cmp
mov
loope
mov
inc
and
fstps
dec
sub
test
sub
std
xchg
lods
fistpl
jmp
mov
dec
mov
cmp
xchg
push
insl
pop
xchg
adc
xor
add
adc
dec
jle
inc
pusha
mov
inc
pop
cmpsb
cmp
sub
dec
dec
add
pop
fwait
sbb
jae
dec
inc
rorl
and
aas
push
mov
inc
and
cmpl
mov
pop
and
repz
int
xorl
nop
pop
xor
bound
movsb
gs
mov
cltd
cmp
push
dec
sub
test
push
int
cmpsb
and
pop
jo
shll
daa
mov
scas
movsl
or
or
push
les
dec
push
xchg
rorb
jle
add
jnp
cmp
adc
pop
add
sbbb
adc
neg
add
mov
and
sbb
dec
push
add
addl
dec
inc
iret
stos
cmpsb
pop
push
imul
faddl
cld
test
aas
out
sub
es
cmp
scas
rol
xor
mov
jmp
inc
cmp
dec
sar
mov
mov
cmp
and
xlat
xchg
mov
bound
jnp
sub
jle
mov
cmpsb
and
jecxz
push
pop
bound
jbe
fnsave
lret
push
and
outsb
lret
ret
jo
xchg
leave
bound
push
xchg
dec
std
rclb
test
mov
mov
jl
sbb
incb
jns
shll
mov
aam
push
mov
jb
lea
mov
ss
sub
or
adc
lods
adc
push
fbld
mov
cld
sub
xor
fcom
lret
xbegin
and
daa
popa
lret
xchg
call
cmpsl
jae
push
mov
pop
and
enter
lret
jecxz
pusha
ret
loop
adc
push
iret
mov
push
lods
clc
adc
pop
sahf
cmp
sbb
and
ja
aad
mov
scas
mov
adc
jnp
add
les
test
and
negb
out
and
push
cli
in
fcoms
lods
jnp
mov
lcall
sub
or
ficoms
test
push
push
and
add
xchg
cmc
mov
fsubl
lahf
pop
inc
inc
in
cwtl
cwtl
inc
sub
xor
sbb
xchg
xchg
inc
jne
fisubrs
cwtl
std
inc
lock
xchg
aad
mov
adc
xor
or
out
adc
out
dec
dec
mov
dec
jae
popa
xchg
ficoml
sub
repnz
dec
das
add
mov
lods
sbb
js
in
xchg
mov
out
fstps
adc
mov
pop
mov
cmc
dec
xor
sub
inc
push
sbbl
pushf
in
test
aam
gs
dec
out
repz
push
jle
dec
mov
ret
mov
mov
mov
cmp
mov
push
pushf
pop
cld
dec
pusha
xlat
nop
mov
lods
jmp
jecxz
push
notb
and
add
cmpsb
aas
push
push
jb
dec
out
mov
aam
push
inc
mov
fmuls
mov
cli
sub
in
sub
push
or
insl
repz
stc
mov
cmp
out
or
ljmp
dec
stos
loopne
add
movsl
shlb
dec
outsb
movsb
jl
iret
stos
stc
ret
push
fistps
scas
ljmp
out
in
insl
fimull
scas
xchg
mov
adc
cltd
and
push
add
sub
sbb
lcall
clc
jle
jbe
loope
mov
out
imul
je
sub
xor
shlb
inc
jge
jne
push
hlt
mov
in
mov
pop
xchg
mov
aas
popa
dec
mov
aas
mov
sub
jp
leave
daa
clc
je
cld
add
dec
or
xchg
icebp
in
jns
adc
lea
rcrb
loope
iret
sbb
dec
or
sbb
aas
mov
je
xchg
lods
mov
lret
bound
sbb
xchg
xchg
mov
fnstsw
cmp
dec
icebp
jb
in
xchg
xchg
imul
in
xlat
push
adc
and
mov
ficomps
dec
add
ljmp
push
cmp
inc
loop
int
adc
add
out
dec
xchg
push
enter
jl
pop
or
and
jg
lds
andb
jle
sarl
stos
dec
adc
push
mov
lret
cld
popf
test
es
jae
add
add
dec
cmp
and
mov
pop
ja
mov
popf
roll
jp
push
das
mov
test
jno
pop
and
xchg
mov
lea
dec
and
cmp
rorl
jnp
add
lock
aas
inc
dec
pop
add
cmp
and
or
jmp
and
ret
and
lret
stos
inc
sub
inc
dec
test
cmp
adc
push
hlt
nop
lcall
jge
sbb
pop
insb
jle
and
ljmp
je
pop
addl
mov
jp
imul
pop
or
sbb
inc
out
push
mov
mov
adc
inc
stc
xchg
jbe
xchg
mov
xor
stos
xlat
ss
push
adc
orb
mov
mov
aad
cmp
fnop
int3
cmp
sub
das
insb
in
leave
out
std
repz
es
jns
jle
repz
cmpsl
jg
gs
cmp
xchg
es
and
xor
sbb
mov
mov
gs
dec
fcompl
and
sahf
lahf
dec
loop
out
test
aaa
rcrl
shrl
jns
lcall
mov
mov
repnz
fwait
cmp
dec
xchg
push
orb
push
ljmp
add
cli
or
xor
and
cmp
jno
mov
mov
aam
jae
push
inc
jbe
mov
daa
xor
mov
pop
pop
jl
es
aad
hlt
dec
add
leave
add
lea
jb
test
ret
testb
jns
mov
xchg
add
test
fsubrl
jge
jns
cmpsl
rolb
sbb
inc
jl
and
cmpsb
add
inc
sub
into
cmp
lods
jg
shlb
rcl
outsl
or
inc
mov
jbe
or
orl
jmp
sti
imul
lea
rorb
jns
sbb
jmp
repnz
test
dec
lock
fsubrs
sub
mov
jle
pop
enter
push
inc
xchg
fistpll
cmp
test
and
jnp
add
xor
jl
int
stos
and
mov
int3
adc
ret
jnp
adc
add
pop
dec
add
sbb
pop
aaa
lods
jg
xchg
enter
pop
and
iret
mov
push
and
addr16
xor
fadd
mov
fstpl
mov
mov
ret
sub
xor
dec
dec
pop
push
mov
mov
jbe
bts
sbb
dec
fmul
sbbl
or
je
add
call
mov
or
cmp
mov
mov
xchg
mull
xor
jnp
ret
les
ret
mov
xchg
xchg
push
and
std
mov
jmp
imul
jno
dec
or
fcomi
mov
popf
pop
add
enter
xchg
mov
sarb
insl
adc
call
jge
mov
push
outsb
and
push
xchg
inc
sub
sahf
sub
jo
lea
cmp
cld
in
shll
xchg
jo
inc
dec
dec
int
dec
mov
jno
out
dec
inc
mov
rol
fs
sub
dec
xchg
lcall
dec
dec
mov
repnz
les
mov
jno
scas
sub
pop
insb
cmp
push
adc
mov
les
fs
nop
ja
add
fldenv
pusha
pusha
insb
cmp
insl
mov
mov
mov
mov
mov
xor
pop
push
adc
sahf
popa
inc
jl
dec
andb
fisttpll
xchg
mov
pop
fcompl
push
out
lret
push
xchg
std
lea
xchg
cltd
cmp
outsb
jnp
adc
insb
inc
push
xor
pop
movl
imul
gs
loope
enter
push
cltd
add
and
jno
or
scas
xlat
repnz
lret
mov
mov
push
sbb
xacquire
adc
in
jge
cmp
hlt
push
push
shll
jns
and
inc
jno
adc
mov
pusha
fildl
inc
cmp
int
push
sub
xor
test
cld
lret
test
pop
lods
dec
cltd
pushf
insb
lret
adc
adc
dec
nop
les
jmp
xor
in
adc
push
xor
addr16
cmp
mov
dec
test
cli
movsb
in
mov
pusha
xchg
shll
mov
aad
or
iret
add
adc
scas
dec
loope
inc
mov
icebp
dec
jne
fstpl
inc
push
movsb
or
std
std
loope
mov
aaa
pop
in
das
movsb
cwtl
movsl
ret
jp
xor
ret
js
lds
testl
test
out
add
jo
or
mov
out
test
scas
mov
fcmovb
add
loopne
pop
or
imul
jp
xor
enter
scas
scas
and
mov
jge
and
into
mov
in
adc
das
pop
mov
iret
fs
dec
sub
mov
call
xchg
jnp
arpl
jae
sub
inc
mov
fstps
adc
jle
out
test
daa
adc
jmp
scas
mov
cmp
testl
je
mov
jne
and
xchg
addr16
push
add
push
and
push
mov
dec
fwait
jns
and
daa
in
dec
lcall
js
shlb
hlt
int3
dec
in
xchg
adc
std
pop
rcrl
shrl
das
adc
mov
jg
subl
lods
movl
repz
call
push
test
lods
sahf
ret
js
lret
adc
sbb
mov
xchg
and
stc
pop
adc
rorl
inc
popf
and
aam
push
call
inc
int
jne,pn
test
jne
xor
sub
int
or
mov
nop
cmp
inc
add
mov
call
push
outsl
lahf
sub
enter
pop
xchg
insl
or
mov
bnd
enter
dec
or
insl
and
adc
or
jnp
aam
ret
xor
adc
pop
push
adc
or
xchg
idivl
mov
cwtl
frstor
icebp
pop
je
std
out
fimuls
pop
decl
inc
and
mov
jecxz
pop
imulb
dec
enter
fldt
pop
stc
inc
jno
nop
or
xchg
mov
pop
jl
add
pop
xlat
fldl
xchg
and
pop
insl
cs
aas
add
push
dec
leave
jmp
lds
hlt
leave
in
out
ja
xor
cmc
rorb
cmp
and
fcmovnu
push
mov
out
daa
push
psubusw
cmp
or
xchg
fstps
sub
mov
js
je
out
loope
dec
cmp
and
rclb
dec
call
scas
or
stos
and
gs
ja
cmp
inc
push
stos
cmp
xchg
push
xor
inc
push
fdivrs
std
jb
ds
sahf
mov
notb
fidivs
xchg
adc
stc
mov
lock
insb
lods
cmp
or
movsl
and
stos
xor
pop
xchg
push
lea
xchg
fs
adc
sahf
ja
add
jge
push
test
and
loop
xchg
or
cmc
in
aam
jb,pt
in
insb
and
loopne
adc
fistpll
xorl
add
push
mov
int3
dec
jae
sti
or
adc
gs
push
sbb
jb
out
clc
or
xchg
and
or
xchg
and
lods
lods
xor
jo
gs
jb
cwtl
outsl
and
imul
push
push
int
sti
daa
jp
je
push
movq
add
arpl
xor
fistpll
repz
inc
ljmp
mov
push
in
fbld
sub
xchg
pop
inc
inc
lods
dec
imulb
clc
jp
dec
xchg
and
fwait
push
in
inc
push
ja
push
mov
mov
hlt
mov
adc
aam
dec
gs
dec
imulb
lock
push
pop
inc
fs
nop
aaa
scas
movsl
xor
pop
inc
inc
jo
pushf
sbb
popa
arpl
dec
js
adc
and
jae
pop
test
xor
mov
orb
fst
jg
jle
mov
cltd
sbbl
cli
add
leavew
push
adc
nop
bound
fs
add
push
roll
repz
pop
in
sub
je
nop
call
push
pop
pop
mov
xchg
mov
cmp
adc
pop
hlt
jecxz
add
cmp
or
mov
push
cmp
xchg
testl
xchg
addr16
out
push
cmp
mov
ficompl
sahf
push
ljmp
mov
adc
nop
cmpb
sbb
push
inc
push
jae
or
cli
xor
pop
shld
pop
xchg
int
fwait
xor
cmp
stos
movsl
sbb
push
je
lods
rolb
mov
sahf
pop
test
inc
adc
test
add
fwait
mov
xchg
xchg
adc
mov
cmp
into
xor
sbb
sahf
cli
jmp
fldt
je
xchg
std
or
cmp
push
add
cmp
add
lea
sub
pushf
ja
push
sbb
sub
mov
cmc
popl
push
mov
mov
cmp
mov
stc
in
xchg
mov
pop
jne
mov
jbe
aaa
jno
cli
cmp
mov
icebp
pop
pop
pop
arpl
push
lods
or
imul
xlat
and
ret
or
or
loopne
mov
dec
push
shlb
lods
push
push
outsb
xor
sbb
je
mov
push
jge
sbb
faddp
fld
rcl
mov
ljmp
push
xchg
sti
cmp
shll
xlat
inc
iret
mov
iret
or
into
dec
lahf
leave
cmc
xchg
adc
outsb
add
cmp
push
psadbw
jnp
adc
lret
sbb
xor
adc
pop
push
sahf
fucomi
xor
les
les
cwtl
cwtl
int
cwtl
in
jmp
add
rol
jo
add
insb
lds
cli
rcl
inc
push
int
loope
testl
js
out
nop
dec
jge
aam
lret
lahf
xor
or
imul
add
sbb
xchg
push
sub
ficomps
test
mov
daa
jecxz
cmc
jl
out
dec
addb
les
sub
mov
in
daa
inc
cmp
and
push
imul
mov
pop
mov
sbb
cmp
js
jl
bound
stc
dec
sbb
lcall
xor
popa
push
cli
mov
lea
sbb
dec
subl
mov
and
jg
stos
popf
pushf
repz
push
sbb
and
cmc
adc
xchg
jecxz
xchg
mov
rorl
mov
imul
test
xchg
and
inc
shr
or
daa
mov
sbb
fiaddl
loopne
dec
pop
cmp
fistl
sbb
movsl
cmp
popf
mov
pop
je
and
cmpsb
sub
shrl
iret
pop
cmc
stc
push
xor
push
dec
imul
mov
cmp
and
jge
inc
jge
xor
fcmovu
mov
jg
movsl
xor
enter
rcll
and
push
and
and
push
jl
sbb
mov
aad
xchg
test
adc
jne
gs
lret
mov
aam
leave
lods
and
inc
mov
dec
in
rorl
movhps
push
jl
hlt
punpcklwd
lock
bound
fisubrl
mov
mov
aaa
mov
mov
out
mov
xchg
mov
mov
mov
and
xchg
push
pop
cs
mov
lret
repnz
test
mov
jecxz
int
sub
xchg
popa
ja
gs
imul
inc
test
popf
push
mov
adc
aad
ja
insl
add
push
xchg
out
fisttpl
dec
fisubrs
jmp
add
notl
ljmp
push
test
add
ficoml
pop
or
mov
cld
or
or
fnstcw
xlat
scas
push
push
sbb
in
vandnps
stos
cli
ljmp
mov
sti
xchg
shlb
adc
push
inc
lods
test
push
lret
jl
dec
xchg
scas
scas
cs
lods
std
ret
arpl
cmp
call
cli
pop
cmpsb
sub
mov
in
sbb
mov
mov
jno
das
dec
push
cmp
sbb
dec
loopne
call
aas
mov
cmp
sbb
push
pushf
je
cs
int3
sub
in
movsl
mov
mov
mov
addr16
dec
push
xor
sbbb
repnz
in
test
cmpsb
clc
cmp
push
in
or
push
inc
dec
push
lret
jge
cmp
enter
xor
adc
push
sarl
insl
mov
sub
pop
test
xchg
mov
inc
mov
je
ja
jns
add
pop
xor
push
cmp
push
div
imul
cmc
xchg
or
mov
adc
out
mov
orb
push
int
dec
pmaxub
leave
and
adc
inc
ljmp
or
push
lds
xchg
add
mov
or
jle
cmp
sbbl
cmp
xchg
in
sub
inc
or
outsl
sub
call
sbb
mov
jo
outsl
scas
and
mov
push
insl
popf
cli
sub
jnp
loope
fsts
lret
add
mov
loop
cmpsb
das
dec
pop
sbb
fcomps
les
addr16
and
fsubr
enter
popf
jge
test
gs
out
pop
xor
add
insb
xor
out
push
jns
iret
mov
mov
sub
mov
push
js
sbb
loope
fsubl
mov
inc
or
dec
push
mov
aam
mov
gs
out
and
jnp,pt
sub
cmp
das
push
sub
cmpl
pop
subb
js
lock
xchg
jnp
xor
xlat
cld
dec
sub
test
test
test
and
cld
push
mov
imul
and
mov
xor
lahf
push
cmp
sahf
cmp
outsb
shr
mov
xchg
loop
add
mov
repnz
movsb
lods
es
cs
aaa
lret
add
push
test
leave
aad
test
flds
fs
or
das
mov
or
mov
popf
imul
call
aad
imul
popa
cmp
sahf
js
ret
movsb
or
fldcw
aam
pop
popf
sub
mov
ds
cmp
add
repz
pop
cmp
and
or
sub
or
add
mov
lahf
xchg
lret
cmp
out
cli
inc
fldt
movsl
add
mov
ficoml
jno
jb
jmp
jbe
push
lahf
push
in
subl
jl
out
cli
xor
sbb
sti
add
push
xchg
dec
sbb
dec
sti
sbb
dec
pushl
outsb
xor
sbbl
call
incl
mov
mov
adc
mov
push
lods
cmp
add
mov
lcall
add
aaa
push
shlb
jecxz
jmp
adc
aas
mov
push
nop
cmp
movsb
push
jae
in
pop
cli
push
cmc
sub
js
bound
shlb
mov
mov
mov
lods
mov
dec
popa
add
js
push
pop
xchg
enter
rolb
imul
sahf
loop
incb
cmpsl
lock
mov
cmp
fwait
jl
into
fsub
repnz
mov
push
adc
nop
div
lds
scas
out
subl
xchg
and
daa
pop
adc
cmp
lcall
push
faddl
insl
push
int3
pop
inc
pushf
dec
loop
sahf
mov
lods
fs
aad
loop
mov
add
mov
fadd
test
ss
outsb
jno
enter
xorb
fsubl
jp
push
mov
sbb
mov
lahf
adc
mov
adc
bound
mov
neg
cmp
leave
jmp
pop
push
mov
test
pop
inc
jmp
pusha
popa
aad
imulb
jno
fs
mov
pop
push
clc
jge
fbstp
pop
mov
push
lds
mov
cmpsb
rclb
sbb
lahf
xor
and
andnps
push
lahf
sbb
push
and
sub
xor
xchg
push
mov
aas
notl
cmc
mov
mov
add
push
addr16
jbe
sbb
cmp
jmp
lds
ror
dec
test
or
adc
fnsave
inc
mov
les
std
adc
jno
cltd
cwtl
fcompl
ja
out
js
das
cmpsl
xchg
lods
xchg
dec
and
rolb
adc
mov
mov
fdivl
cmp
jb
xchg
mov
mov
aaa
addr16
lcall
lret
leave
into
pop
add
wbinvd
out
cmp
ss
xchg
je
loope
into
sbb
out
jmp
popa
and
aas
push
aas
daa
pop
sub
icebp
jg
xchg
mov
sbb
fwait
jp
mov
sbbl
inc
into
das
out
mov
mov
loopne
jge
cld
push
mov
pushf
ja
faddl
mov
sub
out
popf
dec
fstp
cmovns
mov
sub
pop
push
bound
xor
imul
lret
cmc
jo
insb
pop
pop
mov
rorl
jmp
mov
bswap
cmp
mov
pop
adc
stos
push
iret
push
dec
push
out
jmp
or
mov
adc
insl
fnsave
and
pop
ret
or
jmp
cmp
inc
xchg
mov
cmp
xchg
jecxz
mov
bound
or
ret
lea
into
sub
loope
add
inc
pop
sbb
sub
push
out
cs
sub
and
dec
mov
shrl
add
mov
push
cmc
sarl
jl
out
adc
dec
cmp
ss
nop
cmp
sbb
mov
lods
and
enter
add
cmp
push
jl
pop
add
add
mov
push
fsubs
xchg
gs
pop
inc
popf
sbb
aas
jo
jecxz
int3
jne
cld
jg
pop
push
push
jle
pop
jg
mov
jbe
adc
fidivl
out
sbbb
pop
and
jmp
cmp
out
out
insb
lcall
scas
mov
dec
das
xchg
cmp
jmp
sub
inc
mov
leave
dec
into
mov
movsb
inc
sub
mov
and
add
stos
mov
add
fcoml
and
sub
aam
cli
xor
sti
pop
fwait
insb
sub
cmp
sbb
insb
out
dec
je
mov
cmp
test
add
std
cli
mov
sub
lahf
xchg
lock
or
movsb
inc
mov
out
xor
decb
jl
insb
and
fnsave
push
xchg
jl
fdivs
jne
popa
sarb
push
xchg
push
testb
pop
out
jg
leave
bound
lods
xchg
aaa
pop
cli
clc
pop
mov
lret
pop
lret
xor
jo
scas
mulb
stos
stc
push
push
insl
pop
fpatan
out
jno
mov
push
push
sbb
xchg
in
shr
std
and
arpl
rcll
stos
cmp
inc
hlt
and
cmp
cmp
jl
lahf
xlat
push
test
out
lret
inc
test
lods
scas
and
subb
xchg
scas
repz
inc
push
cltd
js
jae
mov
lock
into
push
cli
jo
push
add
cltd
sbb
test
sbb
lds
iret
cmp
popl
xchg
lods
scas
inc
add
les
push
in
sarb
dec
dec
cmc
xchg
add
jp
mov
sbb
loope
icebp
mov
stos
mov
sarl
inc
js
fmulp
jecxz
adc
cmp
ss
test
mov
jmp
jb
pop
ret
imul
fistps
mov
xlat
push
pop
cmpps
sti
inc
inc
adc
stos
call
jnp
out
shll
lock
clc
add
mov
jae
popa
stos
jno
imul
or
int3
sbb
je
mov
es
ficomps
mov
adc
jnp
adc
inc
ret
jnp
dec
xor
adcb
mov
push
insb
xor
pushf
fdivr
out
sbb
sbb
xor
jg
testl
cmp
or
sbb
sub
in
ret
adc
insb
inc
mov
fiaddl
xlat
sbb
sbb
mov
cli
pop
add
mov
jl
push
imul
dec
out
mov
sbb
or
inc
xchg
dec
sti
cwtl
cwtl
xchg
ror
jbe
inc
call
aam
getsec
xor
in
adc
gs
pminsw
ret
adc
mov
xchg
and
cmc
jg
mov
xor
notl
cmp
pop
adc
jnp
xchg
mov
sub
mov
mov
inc
pop
push
cmp
enter
sbb
xchg
xor
cmp
sub
ret
inc
scas
jmp
je
dec
pop
mov
xchg
call
or
dec
outsl
std
fldenv
xor
pop
pop
ja
dec
int3
xchg
push
mov
xorl
out
push
xchg
add
xor
scas
scas
call
push
imul
pop
mov
pusha
mov
cmp
cmp
mov
dec
push
xor
repnz
out
push
pop
mov
lea
jne
out
sub
xchg
cmp
imul
imul
cmp
dec
and
xchg
mov
push
or
iret
stos
xor
xor
xchg
dec
rorl
loopne
inc
lods
cmp
aas
pusha
iret
add
test
pop
pop
imul
ss
push
xor
outsb
mov
adc
jne
and
mov
shrb
push
mov
orb
sbb
adc
aam
lds
sbb
lcall
or
xor
ret
ror
aad
and
dec
cmc
bound
das
ret
lcall
add
fdivrp
loope
gs
pop
aad
fidivs
rolb
int
outsb
stc
call
loop
inc
sahf
mov
movsl
sahf
push
loopne
ret
daa
sub
mov
dec
add
gs
movsl
dec
pop
mov
dec
jno
shr
adc
jle
ljmp
xchg
jae
call
fimull
dec
movsb
add
mov
add
cmp
lret
add
sbb
shl
jne
push
ljmp
push
and
test
ljmp
pop
repnz
xchg
lock
jl
adc
or
lock
rorl
mov
add
push
test
mov
and
out
add
xor
je
xor
jb
add
rcll
nop
push
sti
mov
aad
add
push
sar
or
les
cltd
das
mov
aad
fwait
jnp
mov
xor
mov
ret
testb
lret
pop
jecxz
and
inc
and
xor
lcall
mov
xchg
nop
mov
insl
in
and
inc
mov
scas
and
push
mov
jp
pop
sub
pushf
sbb
or
xchg
cmp
loop
sub
xor
sar
cwtl
movsb
push
push
fs
mov
jb
sbb
icebp
in
imul
addl
dec
pop
push
hlt
ja
aas
mov
out
es
push
xchg
lahf
sbb
das
xor
adc
xchg
jo
pop
mov
lods
shr
or
pop
stc
or
std
movsl
movsb
jne
and
icebp
push
int
loop
cmp
push
subb
imul
or
ficoms
test
cmp
fcmove
nop
adc
xchg
in
addr16
xor
pop
daa
sub
and
mov
ja
mov
jno
push
mov
xor
cltd
icebp
pop
rcr
pushf
loope
adc
enter
cwtl
mov
rcl
mov
adc
dec
xor
pop
push
addr16
pop
je
jmp
lods
frstor
rorb
lock
test
add
xor
int3
int3
mov
mov
pop
popf
in
je
cmp
lahf
out
mov
mov
stos
xor
and
out
xchg
xor
adc
addb
stos
fdivrs
cld
cmp
insb
cmp
outsl
cmp
movl
mov
xchg
adc
int3
arpl
mov
dec
pop
rcrl
sbb
lret
or
imul
mov
fcoml
adc
icebp
in
ds
mov
fwait
sbb
ss
jl
bound
out
jmp
bound
in
push
xchg
jo
mov
adc
bound
cmc
xor
push
push
aas
mov
xor
loope
out
push
mov
cmpsl
or
push
int
xchg
mov
mov
add
mov
cmp
push
gs
shll
or
or
lods
hlt
cmp
fdivrs
add
sub
iret
lret
xor
test
in
lret
sbb
lea
imul
cli
rolb
dec
lahf
mov
and
test
imul
adcl
push
mov
xchg
and
jg
imul
cmpb
stos
out
addl
pop
fstpt
je
insb
mov
mov
xor
mov
xchg
ljmp
and
adc
sbb
repz
aad
mov
sti
jo
sbb
mov
clc
lods
aaa
sbb
jg
mov
iret
mov
dec
mov
lret
out
lock
mov
in
jp,pt
rolb
jle
insl
in
sub
jb
test
and
or
push
aad
dec
inc
enter
cld
in
xchg
dec
popa
push
imul
mov
push
cmp
push
xchg
into
lcall
das
cmp
cmpsl
in
sub
out
pusha
inc
decb
inc
xchg
test
mov
xor
arpl
jno
inc
out
mov
xor
sti
in
adc
repnz
jae
ds
in
test
mov
pop
sbb
lea
dec
lcall
mov
mov
mov
fmuls
inc
mov
pusha
xchg
jbe
sub
fisubl
adc
inc
dec
out
push
dec
inc
lret
pand
sbb
dec
xchg
pop
aaa
push
inc
and
cmp
xchg
ret
icebp
fdivrp
std
jl
ffreep
inc
mov
and
rcrl
mov
jne
sbb
sub
sub
out
imulb
scas
add
xchg
in
cmpsb
or
cs
jb
mov
xor
push
dec
pop
js
xchg
add
dec
cmp
dec
jecxz
mov
out
sbb
and
test
daa
xor
mov
mov
xchg
js
add
and
lcall
loopne
adc
mov
inc
mov
or
fstpt
cmc
jge
inc
cwtl
fcmovnbe
jns
pop
or
sub
daa
cwtl
ret
js
in
push
dec
lods
ret
push
movsl
jo
pop
adc
or
fstpl
test
imul
cmpsb
sub
ret
mov
imul
mov
notl
out
mov
pop
jns
gs
adc
movsb
adc
cmp
or
mov
aaa
pushf
lcall
dec
leave
leave
jns
mull
xchg
jns
shrb
insb
jle
xchg
or
repz
mov
pop
pop
fdivrp
inc
inc
jae
mov
push
mov
mov
insb
jle
sbb
push
inc
out
xchg
push
mov
sbbb
inc
sbb
mov
loopne
sbb
sub
outsb
je
dec
das
aas
roll
and
push
sub
dec
cmpl
stc
dec
loop
inc
jbe
xor
arpl
pop
popf
cmp
arpl
loopne
lock
hlt
pop
xor
inc
fcomps
rcll
pop
xor
std
daa
in
cmp
or
lcall
xchg
dec
sub
sti
or
aas
cmp
fldcw
mov
js
roll
pop
fnstcw
sbb
aaa
sub
push
pop
sub
mov
je
out
mov
cmp
sbb
inc
sbb
imul
add
push
jp
xor
in
add
arpl
pop
xorb
int
inc
fwait
cmp
enter
or
data16
lcall
dec
fldenv
call
loop
or
and
je
pop
adc
pop
cmpsl
insl
or
jp
scas
aam
mov
rorl
jne
pop
shr
and
jae
sbb
iret
lods
stos
in
je
pusha
sub
xor
bound
cmc
inc
ds
pop
and
pop
jnp
negl
inc
iret
lcall
xchg
out
lcall
mov
xor
or
xchg
mov
push
mov
sub
add
mov
xchg
pop
orl
mov
lret
cmp
jp
push
pushf
inc
jnp
pop
cmpsl
cmp
leave
leave
push
insl
filds
ss
push
mov
add
jmp
mov
scas
xor
add
cltd
push
clc
pop
jno
pop
push
loopne
cmp
imul
andl
aas
jbe
imul
cwtl
int3
mov
jb
inc
xor
mov
insl
cmp
jp
int
fildl
cmp
dec
push
lods
mov
int
data16
add
or
jne
adc
lods
push
nop
jge
subl
sub
add
sub
rcrl
movsb
mov
rclb
mov
xor
cmp
push
mov
jae
aaa
int
push
mov
call
stos
and
mov
xchg
in
in
fmul
lret
push
mov
sub
ds
sbb
inc
pop
sub
fistl
jo
or
in
jp
or
pushl
sbb
xor
imul
mov
movsb
sub
loopne
mov
add
out
movsl
or
ror
fisttps
pop
jecxz
inc
fimuls
mov
loope
pop
push
jbe
push
mov
xchg
test
sahf
nop
inc
mov
push
mov
cmpsb
sbb
bound
xchg
xchg
sub
xor
push
lock
dec
mov
repnz
lea
pop
loop
adc
add
je
jecxz
mov
daa
ret
xor
aaa
add
xchg
dec
adcb
sub
cmp
cmp
pushf
mov
sti
push
cmp
lods
push
mov
in
dec
ror
lcall
pop
cmp
cltd
idiv
adc
out
jmp
subl
xor
insl
mov
and
cmpsl
push
inc
jns
or
iret
mov
dec
pop
or
stc
xorl
outsl
iret
lods
pop
stos
lahf
cmp
xchg
in
push
jp
push
pop
test
jmp
cmpsl
rcrl
mov
cmp
inc
mov
pop
push
iret
negl
pop
mov
fidivrl
pop
xchg
add
repz
adc
nop
arpl
hlt
sbbl
loopne
sahf
mov
xchg
push
sti
divb
mov
xor
push
jbe
cmp
sti
lds
dec
sbb
pop
pusha
or
std
ds
ljmp
push
stos
out
adc
fs
scas
cltd
or
push
mov
jo
mov
cltd
pusha
pop
imull
fists
jns
pop
pop
fcompl
mov
cmpsl
rorl
xchg
mov
dec
sub
imul
jo
iret
std
lret
cs
xlat
xchg
cwtl
and
iret
imul
rolb
enter
xchg
aas
adc
loope
rclb
inc
pop
xchg
aas
nop
leave
lea
enter
ds
in
xchg
jno
mov
pop
pop
test
pop
int3
add
loope
enter
and
std
jmp
or
sarb
out
lea
int
xlat
daa
cs
sbb
mov
cmpsl
sbb
mov
std
sbb
or
pop
xor
xchg
cmc
push
in
cmpsl
jle
jae
jns
add
call
icebp
das
cmp
inc
add
sub
adc
and
sti
or
mov
stos
push
gs
xchg
push
mov
jl
pusha
cwtl
daa
jmp
inc
mov
sbb
int3
test
xor
xchg
dec
jae
les
das
xchg
cs
stos
stc
leave
es
mov
ds
cwtl
adc
test
dec
movlps
cmc
sbb
cmc
es
out
cmc
pop
int
ficomps
push
and
pushl
rcll
and
loop
aas
outsb
inc
stos
dec
dec
xchg
or
mov
movsb
outsb
lahf
aas
repnz
jmp
push
mov
outsb
xor
cmp
mov
mov
test
int
jmp
push
push
dec
pop
mov
pop
xor
out
xor
dec
xor
sbb
xchg
jno
test
dec
jne
aam
fs
loope
rorb
mov
out
mov
mov
and
in
or
jecxz
lret
leave
stos
xchg
rorl
push
jbe
rcl
sbbb
and
arpl
push
or
sub
insl
pop
xor
or
iret
jne
fisubs
loop
mov
jb
aam
pop
fildl
inc
xchg
pop
inc
out
pop
fscale
stos
push
mov
out
sub
es
pop
and
test
xorl
lds
adc
fildll
movsb
mov
xchg
icebp
addb
sub
mov
incb
sbb
mov
adc
mov
lret
xchg
push
pop
repnz
sbb
inc
mov
sub
sbb
call
sbb
test
inc
sub
jmp
jne
fcoms
xor
push
dec
mov
in
aam
or
ljmp
and
add
pop
mov
mov
push
testl
xchg
pop
jg
adc
push
jg
into
push
test
sbb
adc
out
maskmovq
mull
or
inc
push
rol
nop
push
ljmp
leave
faddp
leave
repz
mov
pop
addr16
sub
mov
push
daa
int3
inc
mov
sbb
mov
sub
cmpsb
rclb
sub
jne
push
cmp
pop
cmp
add
cmpb
sub
jne
pushf
jno
jle
pop
adc
rcrl
cmpl
mov
es
xchg
cmpsb
xchg
movsbl
add
sbb
xor
dec
cmp
xor
or
lret
popf
movsl
and
aad
loope
push
popa
stos
inc
mov
sbb
fsubrl
dec
xor
out
mov
daa
pop
adc
fimuls
xor
scas
ljmp
sbb
lret
insb
cld
mov
push
test
add
push
leave
mov
clc
jbe
sbb
addr16
mov
xchg
push
int
mov
fs
and
fs
cmp
mov
loop
jb
in
and
sub
xor
imul
cmp
inc
push
lds
mov
pop
mov
lea
ja
cmp
xchg
js
xor
fisubs
clc
ss
add
cwtl
je
mov
cmc
lret
cwtl
fsubrs
out
je
addr16
loope
inc
mov
cmp
daa
sti
xor
pop
arpl
sbb
fimull
dec
jne
loopne
in
movsl
push
inc
mov
cmpsb
cmpl
pop
sub
sub
mov
lock
ret
cmpsl
jae
xchg
bound
mov
cwtl
add
mov
xchg
cmpsl
mov
inc
ds
insb
jecxz
cmp
mov
or
sub
int3
aam
dec
fisttpl
dec
je
test
ret
xor
test
adc
push
gs
repz
sbb
inc
mov
fisubl
fcoms
out
std
push
rclb
or
ja
fstps
inc
xchg
jnp
mov
add
popf
sub
inc
fildl
loop
cli
sar
add
js
mov
jl
and
jl
adc
and
push
inc
and
test
jecxz
lock
lock
fsubrs
addr16
sbb
out
sub
dec
push
jo
add
clc
pop
pop
sbb
mov
xchg
add
outsl
mov
popf
lods
shrb
paddusb
out
scas
cwtl
int3
xchg
jl
mov
ja
or
adc
xorl
rclb
mov
adc
adc
mov
scas
jge
adcb
pop
in
test
add
mov
mov
xor
and
loopne
in
lahf
scas
repz
and
pop
adc
xlat
out
add
cmp
sahf
xchg
test
jo
inc
push
push
inc
jle
clc
cmp
push
repnz
and
sub
xor
testb
mov
fisubrl
mov
ljmp
sti
lahf
mov
pusha
aam
repz
fists
cltd
adc
and
bound
push
and
and
push
in
in
ret
icebp
enterw
out
sub
jb
xorl
insl
cmp
lcall
cmp
inc
cmp
clc
cmp
xor
cltd
test
sub
stos
push
xchg
sub
cmp
add
mov
push
jns
ss
call
cmp
fcmovnbe
mov
sbb
xchg
pop
cmpsb
mov
int
cli
je
fcomps
dec
insl
adc
push
in
in
mov
and
daa
out
iret
jns
add
outsb
int
inc
sub
inc
scas
push
xchg
enter
ret
adc
jb
nop
out
outsl
and
push
or
mov
mov
inc
and
push
jl
arpl
cmp
sub
into
jge
add
into
push
in
hlt
lods
mov
xchg
testl
out
into
pop
fistpl
es
loop
imul
mov
lods
outsb
lods
and
push
sub
jl
cmp
ss
dec
mov
das
xchg
add
jnp
test
push
or
jecxz
enter
inc
dec
mov
push
movsb
sub
fstl
mov
dec
out
cwtl
xchg
jge
mov
push
jmp
cmp
and
xorl
lock
daa
xor
pop
jo
xchg
sub
jae
adc
cmpsl
add
sbb
sbbb
push
inc
imul
fs
push
out
jo
ds
and
mov
and
jle
fwait
std
dec
mov
outsl
addr16
popf
adc
push
loope
push
or
nop
or
insb
or
mov
push
xor
add
sbb
xchg
adc
sbb
mov
jae
fnstsw
jnp
sbb
enter
hlt
das
mov
push
and
cmpsl
sbb
pushf
in
mov
mov
inc
clc
xchg
adc
xor
pop
xchg
flds
mov
aad
and
stc
or
sbb
and
mov
mov
das
mov
jns
add
insb
inc
push
mov
or
push
xlat
test
jae
icebp
scas
adc
leave
lock
call
pop
mov
cmp
loopne
pop
jns
xchg
add
xchg
idivb
mov
sub
xchg
sbb
es
fwait
jae
je
inc
test
pop
push
push
or
jne
mov
cwtl
mov
pushf
psubb
adcb
fucomip
adc
adc
movsb
insl
jp
or
sub
cmp
push
outsb
fidivrs
out
sbb
mov
mov
jle
jge
movb
lret
scas
xchg
int
cld
ret
ljmp
mov
push
inc
push
pop
fsub
dec
stos
inc
notl
dec
adc
mov
imul
mov
jge
sahf
xor
lret
cwtl
xchg
in
imul
out
test
sub
push
dec
mov
cmpsb
sub
cld
movsb
sub
jne
ljmp
bound
call
pushf
sbb
add
cmovno
fnstenv
adcl
stos
clc
aaa
push
jg
cmc
fstpl
dec
sbb
rcr
or
mov
decb
out
repz
mul
sub
sub
push
xor
pop
mov
push
cmp
idivb
mov
inc
mov
hlt
lahf
mov
jle
cmp
arpl
inc
daa
push
sbb
dec
jmp
test
rcll
pop
cs
aam
into
ret
cli
add
cmp
test
and
mov
scas
mov
arpl
mov
insl
jl
outsb
clc
push
and
adc
pop
in
adc
mov
xor
sub
jns
call
jno
lcall
aas
mov
xchg
pop
adc
gs
mov
pop
scas
mov
add
push
xchg
sub
sbb
mov
mov
lret
adc
lahf
pop
loop
inc
imul
leave
pusha
sbb
mov
fcmovnu
mov
fcomps
pushf
out
in
pushf
insl
mov
jg
dec
add
sbb
js
adc
and
mov
xor
loopne
inc
shll
cmp
xor
outsl
fimuls
gs
pop
in
stos
inc
cmp
or
cli
dec
pop
out
push
vpcompressq
adc
sub
mov
push
add
jns
xchg
mov
cmpsb
push
clc
sbb
xchg
sub
push
inc
lods
xchg
dec
adc
xor
lds
rorl
pop
or
neg
scas
sub
arpl
mov
out
negl
push
mov
test
dec
rcr
mov
mov
or
shl
mov
and
jae
gs
jo
push
fcoms
adc
pop
rorb
int
movsb
cmp
enter
pop
cld
int3
sbb
sbb
call
popa
mov
int3
aam
aam
mov
and
outsl
jmp
mov
scas
shr
jne
dec
pop
scas
outsl
cmp
ljmp
cmp
mov
popa
aas
in
pop
stos
sbb
sbb
adc
add
sahf
add
movsl
xchg
adc
mov
jb
pop
inc
test
je
xchg
fsub
push
jge
mov
ja
mov
or
fcomi
mov
repz
hlt
sti
mov
shll
jmp
mov
ja
fnstsw
pop
aas
inc
xchg
sub
cmp
in
mov
lds
push
ja
xor
out
js
ja
jmp
xchg
and
xchg
and
test
jne
fnstsw
mov
xlat
je
fcomps
cmp
jne
in
or
cmp
inc
aam
xor
nop
jp
cmp
dec
cmp
xchg
adc
loopne
mov
dec
dec
xor
mov
add
insl
mov
push
xchg
mov
or
push
icebp
or
xchg
dec
add
jmp
push
inc
outsl
jns
addr16
test
sub
add
sbb
jb
in
jecxz
call
mov
and
rcll
aam
cli
and
mov
fiadds
or
xchg
xor
or
add
sarl
ss
mov
lods
int3
mov
sub
loopne
jo
or
jne
xor
shlb
cmp
mov
mov
add
cwtl
jecxz
leave
add
daa
std
repz
dec
sbb
arpl
xor
cwtl
shlb
xchg
mov
inc
fdivrs
stc
pop
int3
adcb
xchg
fdiv
and
cs
je
xchg
jg
jge
cmc
repnz
loope
push
adc
in
xchg
icebp
inc
pop
xor
mov
fwait
aad
jge
out
cltd
push
out
mov
sub
mov
mov
push
push
pop
or
aas
clc
std
dec
push
sbb
push
loope
int
das
mov
add
pushl
clc
pop
test
cmp
dec
sub
inc
push
out
add
and
add
lret
std
inc
jae
jne
mov
push
ljmp
lods
and
rep
pushf
or
mov
dec
in
rcl
enter
lock
cmp
pusha
imul
fs
push
lock
pop
add
jecxz
popa
ss
int
xchg
fsubrl
shll
xor
jl
je
cmc
mov
fst
mov
mov
push
mov
mov
aad
aad
jns
in
in
mov
hlt
rolb
jne
aam
sar
daa
cmp
sbbb
scas
sub
dec
xchg
jns
test
push
sbb
jae
fadds
popf
cld
aam
sahf
mov
mov
cwtl
or
jb
std
inc
jge
in
lahf
xchg
iret
jne
adc
jmp
mov
ret
dec
idivb
pop
pop
lods
or
sbb
es
cmp
mov
mov
in
les
clc
and
mov
fdivrs
cmpsl
sub
add
faddl
xor
push
sub
push
jge
imul
dec
jb
pushf
sbb
dec
mov
pop
fisttpl
neg
mov
jle
je
cwtl
fucomp
inc
cmp
xor
out
mov
lret
lcall
push
shlb
mov
jbe
jns
lcall
scas
dec
movsb
mov
nop
cltd
or
mov
push
daa
or
inc
pop
shrl
mov
or
ss
jno
push
pop
nop
sti
jmp
jg
mov
aaa
arpl
mov
je
aad
mov
movsl
test
add
or
mov
inc
int3
mulb
fcmovnu
fcoms
inc
addr16
sub
hlt
mov
dec
mov
sub
jb
out
xor
pop
sbb
sbb
push
mov
loop
out
sbb
jg
pop
daa
xor
pop
dec
mov
xchg
xor
stos
inc
pop
rol
add
cmp
push
xchg
pop
inc
cld
bound
ret
jmp
fisttpll
pop
mov
or
xchg
jne
lock
repz
or
cmc
fucomip
pop
xchg
mov
enter
adc
xor
jb
mov
pop
fdivs
mov
cmp
or
push
nop
int
cmp
inc
ss
pop
mov
push
out
adc
mov
dec
gs
jno
inc
outsl
and
roll
das
add
xchg
pop
pop
subb
jmp
mov
add
inc
push
jp
mov
rorl
bnd
inc
cs
mov
jecxz
into
mov
pop
mov
inc
outsl
mov
fsts
fcmovb
inc
xlat
mov
add
push
push
fisubs
enter
divl
repz
pop
mov
push
push
cmp
push
adc
jnp
and
aas
addl
dec
sub
in
lods
ja
push
hlt
xlat
mov
jnp
push
loopne
sub
insb
xchg
sbb
push
stc
jbe
and
pop
add
sbb
scas
lret
outsl
lahf
imul
sbbl
jg
fildll
cmc
sti
into
or
push
andl
jno
arpl
or
xor
mov
cmp
in
fldl
sar
mov
out
test
je
imull
loope
iret
fdivrl
and
pop
push
dec
lods
ror
aad
and
imul
pop
cmp
and
aad
pushf
jae
inc
sub
cmpsb
pop
pop
fisttpl
lcall
pop
gs
jl
sbb
negb
sahf
mov
ja
jne
push
adc
or
outsl
xlat
in
das
or
dec
xchg
push
and
out
stc
outsb
and
lods
xor
ljmp
cmpl
push
aaa
in
pop
mov
jmp
bound
outsb
rcll
repz
dec
cmpsl
pop
xor
cld
jmp
jns
subl
leave
sbb
mov
mov
mov
and
insb
jp
push
pop
mov
mov
pop
mov
xchg
lcall
or
pop
fstps
sti
push
adc
cli
pushf
int3
sbb
jg
or
and
std
scas
lds
in
jl
dec
xchg
ja
jo
push
sub
lods
sbb
and
or
dec
lcall
pop
and
jbe
std
add
in
fcoml
stos
out
orb
jg
sub
hlt
icebp
mov
ja
nop
test
xchg
jecxz
mov
add
test
jl
jno
cmp
repz
mov
xchg
mov
fdivrs
shlb
repz
inc
cwtl
cli
mov
sbb
lahf
call
mov
cwtl
pushf
inc
lds
nop
popf
dec
es
mov
inc
mov
push
test
in
jge
sub
int3
inc
or
cmp
clc
clc
stos
mov
jo
mov
push
cltd
nop
bound
sbb
fstpl
inc
push
int3
scas
imul
aam
fistpl
adc
mov
mov
add
mov
aam
imul
push
xchg
mov
push
inc
cs
adc
cwtl
xchg
adcl
xor
mov
push
lea
add
push
mov
rorl
adc
daa
aaa
mov
xor
add
addb
xor
out
pop
dec
stos
mov
inc
hlt
sbb
xchg
cmp
pop
cmp
xor
stos
fbld
in
rcrl
movsb
faddl
add
hlt
lods
movsl
clc
add
rol
rorb
dec
jmp
sbb
add
inc
xchg
das
shr
xchg
push
or
push
pop
repz
sbb
int
and
rolb
repnz
mov
dec
sub
and
cmp
in
add
mov
ss
push
insl
lahf
cmp
sbbb
inc
inc
sub
cmpsb
aaa
mov
xor
stos
rol
xor
mov
add
mov
clc
adc
nop
xchg
add
add
adc
sub
cwtl
addr16
inc
mov
stos
xchg
sub
movsl
ret
mov
js
fdivrp
mov
xchg
lock
int3
jae
jae
lret
mov
mov
add
aam
mov
sub
gs
iret
dec
xchg
sbb
ja
pop
es
add
std
sahf
mov
bswap
pop
mov
jno
xor
lahf
pushf
ret
testb
adc
push
pop
jmp
mov
stos
pushf
pop
push
mov
in
enter
in
out
addl
pop
rorb
pop
stos
ja
sbb
pop
stos
shll
in
mov
xchg
gs
mov
pop
lahf
mov
insl
inc
jne
mov
enter
dec
cmp
xchg
lahf
std
mov
push
push
inc
fistl
xchg
into
aas
mov
shl
mov
mov
fs
cwtl
xorb
into
test
fisubl
dec
push
cld
leave
int
iret
or
iret
out
inc
inc
test
insb
mov
rcll
sbb
mov
lret
outsb
jnp
mov
imul
push
dec
push
mov
ja
jecxz
ds
out
xchg
add
push
repz
mov
jmp
cmp
mov
xchg
rcl
xor
out
shlb
test
subl
sub
sub
jl
or
enter
ret
out
ds
xchg
lahf
or
mov
pop
jp
gs
in
mov
dec
adc
sbb
leave
jne
loop,pn
pop
in
fsub
mov
not
cmpsl
addl
fs
add
pop
js
aas
fwait
mov
add
adc
sub
mov
dec
loopne
mov
push
mov
push
or
jecxz
jnp
aad
lock
adc
mov
pop
mov
xchg
mov
sub
jge
mov
imul
inc
cmp
js
icebp
in
ret
fldl
dec
mov
into
js
rorl
push
loope
outsl
test
pop
movsb
mov
stc
lcall
add
push
out
les
xchg
loopne
pop
mov
push
in
inc
lret
mov
and
and
outsb
dec
les
fstl
dec
js
mov
aas
push
sahf
push
pushf
pop
ja
and
xor
push
push
in
orb
dec
iret
mov
dec
in
mov
cmp
js
jnp
mov
xor
ret
int
xchg
pop
cltd
fldcw
mov
pusha
out
add
cmp
aad
jns
push
popf
in
cmp
mov
loope
mov
stc
mov
clc
adc
andb
adc
fdivs
fcmovnu
mov
cmp
sarl
mov
mov
xchg
pop
push
imul
dec
call
pop
xchg
jnp
ss
inc
jns
dec
mov
pop
jl
jns
dec
dec
stos
mov
pusha
add
sub
inc
add
mov
fwait
add
push
push
xor
xchg
enter
lret
xchg
push
enter
or
xlat
es
ss
add
fcoms
cli
lock
dec
jle
mov
ds
jne
popf
push
rolb
in
dec
pop
jne
repnz
xchg
add
cmp
adc
adc
fistpl
clc
or
cmp
jp
int3
icebp
aaa
or
adc
out
dec
nop
shrl
push
jbe
xor
fnsave
cwtl
cmp
std
ja
sub
and
and
movsb
mov
les
test
gs
pop
adc
mov
push
fucomi
sar
js
sub
les
rcrl
xchg
orb
push
jg
inc
and
adc
pop
leave
mov
faddl
cmp
add
mov
lods
cs
jg
test
lock
fldt
addb
lods
sub
sbb
and
jecxz
sub
stos
pop
pop
addb
lret
push
pushf
fs
pop
inc
push
push
sbb
xchg
cmp
jbe
dec
test
ss
inc
insl
in
mov
fs
or
cwtl
xor
icebp
adcl
shrb
pop
xor
xchg
jns
push
push
dec
push
scas
pop
fiaddl
shll
inc
mov
and
jecxz
fsubs
les
cld
adc
sarl
or
arpl
call
adc
shl
aam
push
push
inc
ret
mov
je
lcallw
jo
test
jge
stos
xor
mov
popa
mov
ja
mov
jl
jb
aad
push
xchg
out
xor
outsl
mov
mov
pop
into
mov
jno
mov
mov
cmp
fdivrs
mov
mov
dec
dec
loop
jae
cmpsb
out
loopne
bound
cmpsb
dec
jno
popf
sarl
sbb
sti
pusha
dec
sbb
jne
fistl
adc
push
out
iret
lret
pop
ret
mov
mov
test
pop
lods
repnz
cwtl
lcall
adc
dec
pop
pop
mov
xchg
dec
pop
adc
pop
mov
ficoms
push
mov
mov
xchg
scas
jne
arpl
sbb
jnp
and
inc
out
xor
les
xor
ret
fnstcw
pop
jb
xor
push
repnz
xchg
jne
add
fdivrl
jno
iret
pushf
sysexit
cmp
mov
push
or
fldenv
inc
out
or
test
pop
pop
pusha
js
lds
mov
lcall
test
or
popf
mov
push
aas
bound
fimull
gs
pop
adc
lret
sbb
stc
mov
dec
xor
inc
imulb
shrl
mov
push
jns
inc
mov
inc
sub
inc
notl
or
call
hlt
dec
and
xchg
loop
sub
ret
mov
sbb
push
pop
and
dec
mov
dec
test
mov
push
cmc
jo
lret
jbe
sahf
mov
popf
cltd
xchg
sahf
js,pn
mov
xor
mov
stos
repnz
add
lods
cltd
add
inc
iret
mov
add
ss
mov
adc
mov
xchg
repz
add
outsl
pop
shlb
fsubs
jg
cld
mov
es
pop
dec
jo
pop
std
mov
and
jmp
mov
sbb
push
cmc
popa
mov
push
jae
jl
popf
popa
les
jno
out
or
shlb
jmp
sbb
mov
push
popa
popl
mov
sbb
dec
mov
in
mov
add
loop
sub
cmp
or
dec
sbb
mov
jae
test
dec
cmp
adc
xchg
push
mov
sbb
pushf
insl
mov
aaa
jbe
mov
cli
iret
mov
jge
jne
rolb
cli
mov
es
inc
rcll
es
inc
pop
or
mov
cmp
test
xchg
fs
sbb
cmpsl
cmp
inc
rcl
rcll
mov
sbb
fbld
add
andl
movsb
cmp
cmp
in
jp
inc
roll
pusha
jg
sar
mov
outsl
sbbl
std
loop
push
mov
popl
leave
adc
out
mov
jp
out
jmp
pop
or
push
mov
insb
adc
imul
pop
nop
popf
cmpsb
jg
push
push
or
add
xorb
gs
scas
xchg
dec
jno
daa
es
rep
pop
cwtl
sbb
and
cwtl
inc
cmp
insl
aas
push
and
sbb
adc
dec
jmp
dec
data16
movsb
push
sbb
add
xor
cmp
cli
cmp
or
jp
fistps
sub
cmp
jecxz
or
inc
daa
lea
add
out
dec
xor
add
aas
scas
mov
test
jns
xchg
mov
scas
lret
mov
mov
repz
daa
xor
dec
addr16
out
push
mov
call
push
pushf
sbb
imul
sbb
mov
mov
inc
aad
cli
jnp
jmp
loopne
int
loope
aaa
xchg
push
aaa
jno
insl
mov
jge
fbld
and
ss
jo
jno
popf
mov
stos
aaa
aad
inc
mov
or
dec
stc
mov
sub
cli
aaa
mov
test
inc
jl
leave
xor
cld
call
ss
mov
pop
lds
lods
adc
add
gs
jb
inc
mov
subb
and
cmp
bound
or
arpl
shl
lods
mov
js
int
add
sbb
data16
out
inc
and
dec
xchg
lods
jo
cmp
adc
pop
and
ss
push
xor
sti
and
cwtl
fwait
sub
pop
inc
imul
aaa
clc
add
xchg
aam
cmpsl
jno
repnz
cmp
int
mov
xor
test
inc
ret
sarl
adc
mov
push
cs
sbb
mov
xchg
mov
inc
outsb
leave
out
stc
jne
adc
leave
fbstp
jo
push
addb
cmpl
insb
mov
sub
xchg
mov
pushf
xlat
or
nop
jg
ds
push
rolb
pop
es
icebp
jne
daa
sub
jmp
mov
mov
arpl
mov
imul
andl
shlb
push
imull
daa
inc
movsl
fildll
sahf
nop
leave
or
lods
test
imul
mov
inc
pop
fldcw
lret
jns,pn
lret
inc
out
nop
mov
mov
flds
fldt
cmp
mov
fnstenv
das
mov
inc
jns
cmovae
aad
jp
sahf
xor
xchg
and
mov
aaa
add
or
push
aad
xchg
pop
push
fimull
fbstp
fsts
mov
fwait
jg
lods
mov
mov
and
push
sti
addr16
push
insb
sub
pop
dec
mov
push
fmull
sub
push
popa
xor
sbb
cmc
pop
adc
xorl
mov
mov
xchg
jg
mov
mov
sub
sub
in
aad
orl
outsl
xchg
cmc
adc
mov
xchg
mov
pop
dec
scas
sbb
daa
sub
mov
add
push
mov
movsl
mov
test
mov
iret
hlt
mov
xchg
xchg
cmpsb
or
aas
ffreep
jbe
scas
mov
jae
out
mov
adc
cltd
repz
mov
lret
and
mov
in
mov
bound
inc
xchg
in
and
mov
daa
rcl
add
mov
dec
and
psrld
pop
cmpl
jge
push
add
in
imul
cmp
xlat
dec
push
cmpsl
ljmp
gs
add
mov
jl
sub
fmull
mov
insb
rorb
jg
mov
xchg
shlb
or
mov
dec
dec
imull
cmp
aaa
cmpsb
sbbl
xchg
lret
jnp
add
outsl
add
sub
mov
add
cmp
push
std
xchg
push
sbb
push
cmpsb
xchg
jmp
mov
mov
mov
mov
jo
xchg
insl
fnsave
push
bswap
pop
add
sbb
cmp
stc
or
rclb
mov
push
call
mov
jns
int3
mov
pop
xchg
lret
fsts
xor
sub
pop
or
clc
inc
cmp
bound
jp
mov
fldt
xchg
inc
mov
pushf
cmp
or
ja
out
int3
xor
adc
jl
add
fdivrl
mov
stc
rorl
scas
arpl
test
out
inc
mov
lret
mov
jmp
jae
sub
cwtl
ljmp
and
jge
mov
popf
sahf
add
mov
sub
pop
loop
cmpsl
jns
dec
push
fs
inc
pop
xor
sub
out
and
mov
push
int3
mov
aam
and
ljmp
jb
popa
inc
jns
call
cwtl
clc
test
rclb
repnz
les
daa
mov
sub
shlb
jne
inc
test
mov
adc
das
out
icebp
and
rep
aam
ret
pop
fdivl
movsl
inc
push
hlt
ret
insb
outsl
fidivrs
out
icebp
loope
jg
fsubl
dec
lret
notb
call
sti
mov
pop
cltd
divl
sbb
xor
in
cltd
arpl
inc
or
inc
add
rcll
push
gs
push
sbb
sti
sarl
enter
out
jb
gs
jge
fisubl
out
pop
push
call
pop
jg
or
mov
push
lods
addr16
ljmp
push
xchg
dec
and
inc
jle
xchg
jp
push
repz
sub
inc
fdivrl
fisubs
ret
rcll
xor
mov
sarb
loop
arpl
dec
sti
mov
movsl
jo
fcomps
hlt
jl
sbb
insb
sub
mov
inc
jo
xor
dec
fadd
mov
cwtl
loop
inc
cmpsb
mov
out
mov
imul
pop
adc
pushf
out
dec
mov
imul
cmp
fstpt
lea
in
inc
lock
out
jbe
mov
bnd
jl
adc
loopew
add
call
sub
or
cmp
out
jp
adc
in
pop
jnp
clc
jae
data16
add
cmp
adc
cmp
push
and
adc
mov
jmp
das
fdivrl
lcall
imul
sbb
push
mov
pop
test
xchg
or
jle
or
lock
fnsave
sbb
push
icebp
dec
in
push
leave
inc
hlt
mov
mov
mov
pop
pop
paddusb
inc
dec
mov
push
into
cmc
xorb
movsl
mov
inc
sbb
into
mov
dec
sub
dec
pop
rcr
mov
jmp
mov
ja
adc
mov
stos
sbb
sub
jnp
xchg
and
ljmp
fidivs
push
popl
cwtl
adc
movsl
jno
lahf
daa
jne
cmp
sub
cld
nop
push
mov
push
loope
fnstenv
push
loope
loop
mov
cmpsl
and
lahf
sbb
out
shlb
movsb
pop
sbb
jp
sub
pop
or
push
jno
dec
ret
mov
jo
das
nop
push
xchg
xor
repz
add
xor
fimull
shrd
mov
test
mov
dec
imul
add
pushf
fdiv
les
repnz
cwtl
adc
push
adc
cmpl
mov
and
lds
dec
notb
xchg
jmp
je
int
arpl
mov
add
sbbb
and
cld
jl
mov
clc
xchg
popf
pop
jp
add
les
mov
or
push
out
adc
push
loop
adc
lods
adcb
mov
test
fidivrs
cmp
hlt
xchg
pop
mov
inc
mov
xchg
push
ja
daa
lcall
imul
repnz
inc
aas
test
mov
dec
pop
sbb
aad
insb
in
clc
jnp
mov
pop
xor
test
jo
dec
jb
xor
mov
iret
xor
lea
test
popa
dec
ljmp
adc
dec
test
push
push
in
mov
iret
and
dec
mov
inc
in
xor
gs
inc
inc
aaa
fldt
jbe
push
push
decl
add
jbe
jge
mov
test
out
and
cmp
pop
je
rorl
faddl
add
test
je
arpl
sub
push
mov
adc
icebp
js
inc
sub
mov
or
movsl
mov
lds
arpl
cmpsb
sti
rep
stc
cs
push
mov
mov
jne
jb
jne
hlt
mov
mov
fadd
cld
or
setg
xchg
lds
pop
sahf
fldcw
stos
and
pushf
shrl
imul
inc
and
popa
insb
and
adc
ds
mov
inc
addb
jecxz
sub
mov
mov
xchg
fwait
cmc
push
push
and
lock
dec
sub
cwtl
mov
popa
jl
aas
jnp
pop
jnp
loopne
divb
popa
sbb
lock
jo
insl
sahf
mov
xchg
addr16
jge
movsl
jbe
inc
pop
jl
pop
pop
leave
imulb
lods
popf
outsb
movsl
jmp
inc
and
js
add
inc
inc
mov
mov
dec
loopne
dec
mov
scas
ja
divb
sub
cmp
lahf
outsl
mov
inc
lret
out
or
and
popa
cli
mov
jnp
sbb
lock
and
loope
sbbl
rcrl
pop
icebp
jo
pop
jno
loope
scas
leave
fadd
fcmovu
sub
lea
and
mov
push
cmc
hlt
sbb
mov
adc
lret
insl
test
mov
test
mov
pop
ss
inc
xor
mov
mov
test
xor
mov
movsl
xchg
mov
pop
repz
xor
add
repz
outsl
mov
mov
jne
ficompl
and
inc
fcoml
into
mov
icebp
mov
mov
aas
and
in
stos
pop
mov
sahf
mov
adc
mov
sbb
jle
pop
pop
xchg
xor
shrl
lahf
jl
arpl
popf
icebp
mov
jp
iret
testl
rcll
negl
clc
fcomp
push
out
mov
loope
or
cmp
mov
xchg
mov
popa
in
xchg
rcr
jae
bound
lret
pop
mov
xor
mov
xchg
pop
dec
aaa
jmp
test
and
adc
addr16
cmc
popa
test
aad
jo
outsl
or
xchg
adc
mov
xchg
mov
push
daa
jo
dec
xor
push
xchg
inc
sar
insl
ss
das
in
adcb
stos
xchg
dec
arpl
jle
loopne
cmc
bound
or
jp
sbb
push
arpl
addr16
xchg
loop
dec
jl
ret
push
bound
dec
inc
stos
inc
in
mov
pushf
in
and
xchg
mov
call
mov
subl
aad
push
and
ret
imul
xchg
clc
xchg
cmp
add
sbb
cmp
push
mov
sbb
cwtl
xor
push
stc
ja
jmp
push
ljmp
inc
cmp
in
test
sbb
mov
push
jge
push
test
sub
jb
insl
in
fadd
lahf
pop
xor
test
xor
sbb
jo
sbb
xor
xchg
scas
sbbb
or
fwait
test
add
rcr
popf
jne
sbb
push
mov
sbb
stos
mov
mov
aad
xchg
hlt
je
add
cmp
fdivrs
test
cmp
popf
test
pop
scas
out
add
pushf
popf
push
mov
fcmovb
adc
fiadds
xlat
mov
pop
xor
ss
test
test
bound
mov
jecxz
sub
or
mov
mov
and
dec
das
and
fwait
or
sbb
lret
add
shlb
jl
xchg
push
sbb
stos
push
lock
orb
adc
enter
lock
jmp
pop
cs
sbb
popa
rol
shrl
push
and
push
adc
in
dec
daa
xchg
pop
cld
mov
mov
pop
test
xchg
xchg
jne
jae
data16
ds
push
xchg
inc
stos
dec
mov
mov
rorb
push
stos
and
pusha
test
cli
cmp
cli
sub
cmc
ja
push
clc
outsb
or
fwait
dec
push
cmp
in
mov
mov
sub
ja
movsb
rcr
add
popf
xchg
shrb
mov
mov
inc
inc
aad
loope
pop
mov
adcl
mov
add
push
test
sbb
sahf
cmp
daa
in
xor
cmp
cs
jg
inc
fcomp
and
add
xchg
push
or
inc
ret
jge
jl
ljmp
fdiv
insl
cmpsb
jecxz
xchg
lar
xchg
jg
jl
ret
jp
icebp
lods
popf
jne
dec
shl
sbb
pop
sbb
mov
mov
pop
add
mov
jl
mov
dec
inc
pop
cmp
jmp
jnp
pop
jg
stos
add
jl
int
and
sbb
adc
das
out
xor
pop
push
dec
xor
lds
push
adcl
gs
lret
call
testl
js
sbb
and
outsl
sti
hlt
push
orb
or
jge
dec
rcll
test
add
mov
lds
mov
xlat
jmp
jmp
adc
lcall
jmp
add
mull
add
popf
pop
sub
xchg
mov
sub
cmpsl
push
outsl
aad
jge
push
arpl
je
pop
sub
in
and
push
xor
mov
pop
enter
inc
mov
or
aad
adc
adc
dec
adc
push
pop
icebp
test
ja
jno
adc
pop
sub
sbb
cs
js
push
cmp
xor
repz
sbb
and
mov
mov
xchg
lahf
sbb
inc
xchg
mov
jns
xchg
sub
fstps
out
psubd
jg
icebp
ljmp
aam
je
pop
cmp
sub
mov
leave
push
xchg
mov
push
dec
scas
mov
aas
xchg
mov
jge
xchg
icebp
jb
loop
dec
loopne
mov
inc
or
mov
add
lcall
adc
sahf
leave
js
aaa
or
adc
jecxz
insb
loopne
jnp
add
lock
jae
arpl
xchg
adc
adc
add
in
pop
cld
adc
mov
gs
cmpb
aaa
cmpl
sti
ljmp
pop
cmpsb
mov
iret
mov
jne
push
cld
jno
popa
mov
addr16
sbb
and
pop
out
ss
gs
repnz
sub
inc
outsl
cld
xchg
test
out
inc
xor
pushf
mov
and
arpl
mov
mov
in
pop
ret
push
in
pop
xor
mov
mov
jle
sub
push
icebp
xchg
arpl
xchg
stos
mov
stc
jo
sbb
push
pop
mov
pop
xchg
bound
or
jns
popa
jl
fidivrl
cmpsl
pop
jo
ss
sub
arpl
inc
icebp
imul
sub
inc
mov
in
lock
nop
sub
je
and
add
arpl
xchg
xchg
push
clc
pop
jbe
inc
imul
or
xchg
pop
adc
mov
add
shrb
xchg
stos
or
cwtl
movl
add
push
mov
pusha
push
fs
fs
scas
fsub
adc
inc
hlt
test
pop
js
mov
sahf
adc
xchg
and
add
out
cmc
cli
in
or
je
or
pop
cmp
in
push
mov
pop
mov
cmp
popa
cmp
mov
mov
repnz
mov
shll
call
out
xor
aad
dec
push
test
or
fsubl
cmc
xor
test
xlat
stc
les
mov
stos
jb
and
dec
sarb
les
mov
mov
fsubrl
mov
cmp
test
mov
out
adc
ret
jns
push
cmp
outsl
and
xchg
iret
int3
lods
or
icebp
cmp
shr
loope
pop
inc
int
cmp
and
mov
xchg
das
mov
lret
nop
mov
fistpl
mov
dec
pop
sub
xor
test
out
jb
add
or
or
aas
ret
mov
rolb
jp
imul
stos
jecxz
js
popl
cwtl
xchg
iret
ficoms
mov
mov
dec
xchg
xchg
pop
and
lods
pop
clc
pop
lcall
inc
in
arpl
jecxz
aad
data16
leave
and
jb
in
dec
or
ret
addr16
inc
mov
scas
adc
add
lret
rol
xor
push
and
add
scas
insb
mov
les
std
mov
push
rorl
arpl
jb
test
sarl
jp
hlt
mov
mov
pop
jg
ss
mov
jge
aaa
inc
and
mov
jne
daa
jno
imul
repnz
xchg
ret
outsb
in
repz
pusha
in
fs
addr16
fbstp
pop
sub
test
gs
dec
mov
jmp
movsl
mov
test
inc
pop
inc
movsb
cmpb
cmp
sti
mov
adc
xchg
adcb
mov
cmpsl
xor
stos
inc
jge
xchg
lcallw
pop
lcall
fimull
iret
bound
cmc
sbb
dec
gs
push
xchg
jns
out
pop
gs
iret
pushf
add
mov
loopne
cli
cmp
inc
dec
mov
cmpsb
loopne
lods
push
cltd
not
jo
mov
mov
jo
in
das
cmp
test
push
test
xchg
into
in
push
cmpsl
fstpt
cmp
and
cs
lea
sbb
jl
jmp
jle
mov
xor
jg
insb
xchg
ret
cmp
test
add
leave
sub
outsl
les
inc
nop
andb
int3
mov
push
ficoml
addr16
dec
movb
les
push
jo
cmp
sti
into
push
mov
sbb
adc
mov
push
xchg
sub
ret
pop
fdivr
push
cmp
or
sbb
fsubr
add
fcmove
in
test
test
mov
mov
pushf
rcll
outsb
mov
inc
mov
shl
push
mov
mov
popf
lock
lods
jl
add
pushf
adc
outsl
nop
ss
adcb
scas
repnz
mov
fs
mov
xor
idivb
adc
push
mov
pushf
pop
mov
out
push
add
pop
fldl
mov
loope
jmp
add
xchg
fists
imul
adc
inc
std
pop
lcall
lahf
int3
outsb
pop
ficoml
test
fsubr
pop
push
xchg
mov
das
orl
mov
sarl
shl
pop
pushf
outsl
jp
daa
les
xlat
or
ja
out
pop
addl
inc
mov
shll
pop
rclb
shl
clc
and
rclb
pushf
sahf
test
dec
imul
fs
push
push
cmp
pop
jnp
xor
lds
fdivrs
and
jecxz
out
lret
ror
lods
mov
dec
fcomp
sbb
rcrb
mov
and
mov
mov
je
test
pop
shl
sub
cmp
and
pop
jg
je
shlb
outsb
jo
outsl
maxps
imul
dec
push
les
in
int3
push
js
outsl
push
cmc
sbb
add
cmp
mov
lahf
popa
push
imul
xchg
mov
cltd
sbb
and
dec
fadd
push
pop
loopne
movsl
sbb
cs
fwait
mov
cmp
movsl
push
ja
jne
sti
sbb
pop
sahf
pop
xchg
out
and
adc
out
mov
or
gs
jmp
stc
sbb
mov
mov
cmpsl
icebp
push
dec
push
es
sub
mov
adc
mov
shll
add
mov
repz
hlt
inc
pop
pop
jg
fwait
ror
sub
dec
jmp
or
sti
repnz
xchg
gs
pushl
out
hlt
mov
int
dec
in
adc
lods
ss
xchg
and
pop
les
xor
out
je
mov
add
mov
inc
add
sahf
clc
inc
js
xchg
fistpll
pop
sbb
mov
adc
rcrb
sub
push
lds
mov
nop
sbb
aam
add
xor
scas
call
sub
sti
sub
sbb
negb
push
test
daa
adc
lahf
fwait
sbb
out
or
dec
negb
or
or
xlat
mov
pop
cmp
or
sbb
dec
push
push
cs
pop
cmc
inc
test
mov
cmp
loope
mov
ja
cmpsl
test
repz
dec
cmc
sbb
mov
lcall
push
into
addl
cmp
stos
pop
ss
sbb
mov
jge
loop
mov
ss
repnz
arpl
scas
push
pop
push
xchg
add
mov
gs
cmp
out
dec
pop
inc
jo
or
sbb
xor
sidtl
repz
in
ss
sti
ds
scas
sub
scas
repz
inc
and
test
popa
ljmp
and
in
setno
shrb
mov
cmpsb
pusha
ja
jle
aas
aas
add
lods
scas
mov
mov
call
inc
sbb
inc
or
cmpsb
mov
push
mov
divl
push
push
add
jge
stc
adc
xorl
addr16
int
adc
dec
sbb
sbb
outsb
scas
cmp
rcr
repz
cld
xor
mov
ss
cli
mov
sti
ss
and
out
mov
out
add
aas
push
sbb
ljmp
jno
jbe
jecxz
jle
mov
nop
das
inc
test
mov
sub
adc
inc
lods
adc
jmp
push
shrb
insb
clc
mov
test
loope
das
popf
and
sub
mov
loop
xchg
xlat
xchg
mov
adc
inc
xor
mov
les
iret
inc
jmp
fcoms
and
or
jne
add
xchg
cmp
jecxz
stc
rolb
jo
repz
insb
dec
in
mov
ret
pop
adc
pop
ds
bound
push
cli
pop
sub
push
out
ja
dec
lret
push
mov
es
jecxz
mov
pusha
mov
lret
imul
shrb
sbb
sbb
bsr
jae
xor
cld
outsb
jg
push
loopne
pop
pushf
and
dec
dec
or
movsl
jae
cmp
adc
push
imul
je
testb
add
insb
adcb
das
jne
clc
gs
out
cs
mov
fisttps
sub
push
mull
and
jns
sub
and
aas
call
fdivl
pop
push
dec
fs
inc
enter
pop
and
loope
dec
sahf
sub
or
sti
xchg
orl
mov
xchg
sub
inc
roll
mov
mov
ret
int3
subl
ss
mov
aaa
pop
and
dec
rcrl
lea
mov
mov
ds
dec
outsb
sub
mov
loope
scas
test
jnp
mov
stc
leave
in
and
jno
out
push
pushf
dec
shll
popa
jl
sbb
mov
imulb
lods
sbb
arpl
jge
das
mov
mov
inc
pusha
and
mov
gs
pcmpgtw
loopne
jl
fidivrl
ja
add
in
lea
push
pop
popf
out
icebp
or
mov
stos
adc
out
rcrl
lock
aas
icebp
cwtl
dec
loope
imul
aad
dec
cmovne
outsb
inc
into
cmp
add
xchg
jae
and
or
mov
lods
sub
out
push
std
push
popf
xlat
dec
jae
adc
add
imul
jl
add
inc
mov
gs
lret
stos
inc
add
test
out
push
in
fxch
clc
mov
roll
or
xchg
rcr
inc
cmp
sub
daa
inc
mov
adc
repz
mov
dec
push
xor
cmpsl
dec
les
insb
mov
sbbb
and
leave
loope
push
mov
arpl
xchg
pop
ret
xchg
and
adc
and
test
mov
mov
inc
test
cmp
jp
and
adc
cmp
test
leave
xor
or
mov
push
leave
mov
neg
sbb
mov
and
outsl
pop
push
pop
mov
shr
cmp
push
push
mov
inc
sub
inc
jecxz
in
inc
dec
push
adcb
mov
or
dec
dec
loope
lods
dec
int
add
loopne
push
inc
arpl
xchg
je
jp
dec
and
mov
mov
pop
fidivl
inc
int
add
jbe
or
cmp
or
ljmp
je
imul
fwait
stc
imul
repz
clc
jno,pt
xlat
xchg
dec
or
lods
jmp
sbb
jecxz
sahf
jne
mov
mov
xchg
test
jno
pop
and
int
sahf
lds
mov
and
arpl
pop
cmp
pop
test
mov
xchg
sbb
push
jbe
imul
push
addr16
or
rorb
out
cmc
xlat
popf
pop
push
pop
cli
xor
add
dec
clc
xchg
stos
jmp
fcmovne
mov
cmc
ret
xchg
stos
inc
imul
bound
call
cmp
jle
testb
in
dec
in
iret
rcr
cmpsb
adc
mul
faddl
fdivr
in
lcall
movsb
int3
mov
outsb
pop
inc
imul
and
repnz
je
pop
xor
mov
pop
out
or
jecxz
sbb
popf
ret
add
jns
mov
leave
pop
adc
xchg
dec
rcrl
hlt
cli
scas
or
xchg
rcrb
cltd
jno
pop
push
imul
popa
jbe
dec
or
pop
push
lea
push
jle
xor
bound
fisttpll
insl
pop
and
mov
sbb
sbbl
outsl
pushf
mov
rcr
rcl
xlat
lods
imul
das
jo
cmpsb
shlb
lahf
jg
fdivrl
xchg
lcall
dec
mov
mov
inc
lods
xchg
mov
outsl
push
dec
rolb
xor
mov
and
test
inc
sbb
sbb
cmpsb
std
add
jne
lahf
or
popf
cmp
popa
adc
das
lock
push
xchg
pop
inc
inc
je
negb
mov
movsl
cmp
in
mov
hlt
add
push
inc
mov
cmp
sti
mov
fs
addl
enter
lret
std
inc
mov
push
ja
sbb
push
cmpsb
pusha
imul
aad
xchg
loopne
dec
das
fwait
sbb
xor
or
pop
stc
icebp
push
cmc
in
mov
xchg
ret
rclb
xor
xchg
test
xor
inc
scas
adc
jl
push
in
mov
xor
cmc
shl
testl
pop
mov
inc
stc
push
mov
push
sub
cmp
jne
imul
add
jbe
adcb
lock
in
js
mov
movsb
mov
les
je
iret
mov
jns
xor
xchg
nop
inc
es
adc
sbb
mov
sbb
dec
mov
enter
insl
push
or
sub
addb
or
das
movsl
shrl
mov
adc
cli
rcll
idivb
dec
scas
xor
aas
xchg
xor
daa
lds
sub
cmp
mov
lret
ja
mov
sbb
jne
add
xchg
mov
ja
pop
fs
popa
push
call
jmp
mov
rclb
and
cli
gs
icebp
mov
cs
stos
mov
pop
dec
pop
inc
test
dec
outsl
andl
push
inc
divl
rcrl
or
iret
fildl
popa
mov
mov
push
lock
cmp
lea
rorb
movsb
iret
imul
jg
bound
adc
pop
insl
dec
bnd
aad
sahf
mov
shlb
pop
xor
and
imul
jge
mov
sub
out
cwtl
adc
jle
add
daa
shll
loop
icebp
imul
aam
cmp
cmp
inc
scas
fdivp
sbb
sub
lret
sti
sbb
in
insb
mov
arpl
roll
mov
shrl
and
adc
ret
mov
mov
adc
rclb
pop
sbb
outsl
inc
push
mov
subl
movsbl
sbb
and
imul
mov
xchg
cmp
dec
cmp
pushl
aaa
lock
lcall
iret
mov
sbb
out
sbb
iret
sbb
xor
jns
add
mov
clc
pushf
or
sbb
mov
inc
ss
dec
cmp
pop
popf
xor
pusha
adc
lods
aad
in
mov
lret
pop
inc
mov
jecxz
lods
push
icebp
cmp
in
divb
cmp
jl
xchg
sbb
sbb
push
pop
push
pop
adc
mov
mov
addr16
jecxz
mov
pop
lea
stc
int3
jl
mov
xor
jecxz
int
mov
incl
dec
les
les
sub
push
addl
call
mov
xchg
mov
fdivr
push
imul
loope
daa
scas
sbb
lds
fmul
push
dec
lock
jmp
sbbb
push
xor
or
cmp
pusha
ret
dec
nop
dec
dec
test
cld
pop
icebp
aas
sti
in
pop
mov
test
xchg
andb
cltd
xor
sub
push
dec
and
jo
lods
adc
jbe
in
in
sbb
adc
jle
xlat
loopne
pop
outsl
mov
mov
cli
xorb
stos
in
sub
ds
shl
sub
mov
dec
inc
stos
imul
xor
divb
xchg
sub
jge
xor
fstl
mov
cli
mov
loopne
xchg
adcl
cmp
cmp
and
jo
xchg
and
or
sbb
sub
xor
inc
fs
xor
push
mov
xchg
push
sbb
outsl
pop
sbb
das
test
adc
or
arpl
pop
sti
push
cmpsl
fsubs
xchg
bound
mov
imul
repnz
mov
xchg
xlat
cmc
cmp
push
scas
push
or
cld
out
mov
add
fcmovbe
ljmp
imul
test
push
sbb
insl
cmp
lds
sbb
cld
es
insl
and
adc
ss
scas
jecxz
sub
pop
push
es
aad
ja
gs
ljmp
ret
mov
lret
xchg
imul
xchg
nop
addr16
pop
jle
into
pop
inc
or
lahf
lahf
sbb
and
in
and
pop
add
mov
notl
sub
rol
push
movsb
lds
jbe
push
std
sbb
aas
pop
pusha
or
pop
scas
loop
aad
mov
and
cli
outsb
cs
xchg
int3
and
ds
in
sub
xchg
xchg
push
mov
add
lds
push
cs
push
fs
add
sbb
add
cmpsl
stc
roll
outsl
mov
xor
call
add
sti
das
movsb
cmp
sarb
mov
xlat
fstp
andb
ds
xchg
outsb
mov
inc
xchg
mov
adc
and
insb
cmpsl
sub
push
adc
mov
movsb
pop
cmpsb
sub
pusha
mov
mov
arpl
pop
cmp
jae
mov
mov
sub
or
pop
dec
aaa
pop
leave
xor
outsl
arpl
adc
sbb
or
sbb
cmp
add
jno
fdivl
mov
shrl
mov
loop
mov
movsl
test
cs
cmp
lods
xchg
daa
xchg
stos
sbb
pusha
push
lods
xchg
add
ds
jb
jecxz
mov
xchg
test
xor
fcoml
fsubrs
roll
int3
lahf
in
dec
fwait
cmp
hlt
mov
jnp
jns
mov
js
lret
cli
int
and
idivl
cmpsb
in
adc
cli
rcrb
jmp
mov
mov
ljmp
cmp
sti
test
mov
and
xchg
cmc
jb
js
sub
add
rcr
xor
in
mov
std
adc
enter
add
xor
imul
repz
push
xor
adc
sbb
movsl
imul
sub
mov
imull
mull
pop
xchg
add
or
jae
addr16
ja
jne
repz
add
pop
xor
je
add
dec
sub
push
aad
out
lods
hlt
push
fildl
nop
add
mov
adc
jecxz
pop
push
add
je
pushf
ds
pop
sbb
mov
mov
pop
jp
jle
mov
xchg
fisttpll
push
jge
jg
xor
cli
push
in
pop
sbb
dec
mov
fwait
fmuls
ss
xor
test
or
jmp
jo
mov
xchg
fisubs
sub
cmp
dec
mov
fistps
rol
add
loop
push
or
fucomp
icebp
and
mov
rolb
sbb
enter
cwtl
sub
sar
xor
jb
pop
cmp
fucom
inc
fwait
dec
aaa
pushf
adc
cld
fldl
mov
lock
pop
push
mov
or
ljmp
or
ds
xor
divl
lds
and
jg
and
mov
jae
push
nop
or
movsb
xor
and
mov
xor
inc
popa
jl
inc
mov
cmp
xchg
cmc
push
cmp
daa
loopne
and
icebp
fldenv
shll
push
xor
adc
jl
pop
pop
cmp
sarl
mov
pop
jp
mov
lds
ds
arpl
add
out
bound
rolb
xchg
jl
cs
pushf
test
dec
adc
jp
xchg
imul
sub
popf
outsl
mov
jns
cmp
arpl
inc
push
int3
xchg
shlb
lds
sahf
cmp
insl
adc
mov
xor
popf
xchg
fdivrs
ds
inc
adc
pop
arpl
scas
sbb
xchg
jbe
mov
fiadds
push
loope
dec
dec
inc
loop
mov
or
in
push
inc
sub
fcomps
shl
ja
adc
adc
dec
sub
fsubr
ds
nop
dec
addb
jne
int
mov
fcomps
xchg
loopne
lock
int
push
jl
mov
icebp
es
dec
pushf
xor
add
and
or
inc
lock
dec
sti
pop
inc
jnp
jge
scas
sub
iret
xchg
std
xor
out
mov
push
adc
xchg
rorl
std
mov
and
mov
cmp
and
cmp
fists
sub
adc
das
push
insb
in
push
mov
fbld
es
pop
bound
aas
sub
int3
scas
cltd
insb
cmc
sbb
mov
dec
or
lahf
movsl
adc
mov
fistpll
cld
pushf
fiaddl
jg
outsb
or
ficoms
int
std
arpl
or
push
in
sub
add
mov
xchg
pop
push
cmp
mov
mov
shl
cwtl
lret
xor
mov
stos
mov
icebp
cs
cmp
lea
popf
xchg
xor
in
mov
adc
popf
pop
addr16
lret
inc
mov
movsb
shlb
mov
mov
addl
hlt
fnsave
shrb
push
or
add
xchg
out
push
add
mov
dec
mov
mov
gs
arpl
push
imul
mov
nop
inc
lock
das
adc
test
aaa
jle
jae
xorl
arpl
push
mov
ret
sbb
push
pop
mov
push
cs
scas
push
lods
jno
fbld
sbb
ret
xchg
sub
lret
adc
cs
sbb
das
push
adc
mov
fldenv
add
and
addr16
je
dec
pop
outsl
in
in
push
jnp
bound
loop
rol
inc
add
jp
aad
or
int
cmp
and
cmpsb
fwait
mov
mov
push
xchg
in
xlat
pop
adc
sub
sub
cmp
sahf
ja
je
scas
daa
xchg
push
xchg
test
add
loop
and
dec
cs
jb
xchg
and
cmpsl
or
es
lcall
lahf
aaa
jge
mov
push
pop
or
lock
jge
xorb
stos
push
xchg
add
call
or
push
outsl
or
andl
cs
xorb
loop
mov
je
inc
fwait
cli
cmpsl
lret
mov
xor
in
cmpsl
inc
pop
push
mov
movb
fwait
pop
jno
push
ficompl
sbb
js
std
enter
mov
insl
decl
mov
movsl
sub
cs
push
or
scas
gs
sbb
je
jae
lock
lret
mov
or
mull
jne
inc
mov
ds
push
aad
dec
inc
and
mov
stos
or
cmpsb
arpl
in
roll
int
inc
jmp
mov
push
nop
inc
nop
or
pusha
std
in
vsubss
sbb
cs
int3
lock
pop
sub
js
cs
dec
fisttps
cmpsl
movsl
pop
sbb
cmpsb
cmpsb
add
cmp
push
out
jb
pop
stc
repnz
inc
inc
fincstp
out
jo
inc
or
cmp
mov
aam
lock
lea
add
sti
ds
fs
adc
lods
mov
aam
add
sub
testl
add
xrelease
popf
cmp
adc
mov
sahf
repnz
stc
cwtl
mov
movsl
jb
stc
scas
cmp
adc
in
mov
imul
xor
ds
dec
cmpsl
and
xor
dec
dec
aas
xor
cmp
jmp
andl
mov
and
mov
das
push
pop
jl
push
inc
push
mov
fists
loope
pop
push
fcomp
and
mov
xor
adc
loope
cltd
fisttpll
inc
imul
mov
lcall
sub
mov
pop
out
add
sub
mov
arpl
mov
sub
leave
fldenv
test
into
mov
sub
lods
mov
lea
test
xchg
sub
inc
cmpsl
sbb
fdivs
std
rolb
nop
insl
clc
fcomp
add
mov
ljmp
negb
fcmove
ret
xchg
lret
jb
out
pop
shrl
cmp
dec
hlt
mov
pop
in
inc
cltd
and
cmpsb
hlt
add
leave
scas
dec
hlt
shlb
sub
lahf
xchg
loop
jne
fcmovu
push
mov
ljmp
rcl
pop
push
xchg
xchg
imul
in
aaa
add
in
mov
loopne
pop
test
push
pop
outsb
call
dec
aad
arpl
aas
sub
fs
fcoml
add
push
ret
roll
dec
mov
stos
loope
loopne
orb
loop
fmul
shrb
mov
cld
add
popa
jae
repnz
cld
xlat
popf
movsl
jecxz
mov
push
sbb
je
dec
hlt
add
out
scas
add
lcall
lock
arpl
add
loop
mov
popf
sbb
bound
jno
sbb
pushw
fisttps
lret
xor
flds
adc
and
pushf
jno
test
xchg
push
sbbl
imul
xor
push
mov
repz
dec
std
dec
jae
cmp
and
pop
sub
cltd
mov
fcompl
mov
mov
inc
cmpsb
adc
ss
pop
pop
sbb
lcallw
mov
sbb
mov
leave
push
in
leave
or
dec
mov
aaa
rorl
mov
stc
push
cmp
inc
cmc
data16
cltd
scas
and
stos
sub
xchg
popf
lret
add
stos
lahf
adc
xchg
sub
hlt
or
mov
sub
sub
and
cld
aad
jle
adc
or
adc
pushf
add
lret
and
mov
and
ret
pop
test
push
dec
add
lahf
mov
jp
lcall
outsb
test
std
jb
xor
sahf
loopne
mov
iret
lds
pop
outsb
fstp
push
push
scas
dec
cmp
repz
in
js
mov
sarl
pop
in
push
pop
dec
sahf
in
test
cwtl
sbb
clc
bound
orl
adc
mov
jmp
sub
fdivrs
popa
jp
lahf
inc
adcl
xchg
mov
push
push
in
mov
pusha
ret
lret
lock
pop
dec
and
sub
fwait
aaa
cmp
xchg
int3
pop
mov
cmp
or
mov
pop
mov
mov
push
xor
inc
mov
out
in
ret
mov
je
insb
fnsave
negl
dec
pop
add
adc
jnp
inc
or
sti
cmp
jmp
push
jae
cld
dec
add
and
scas
sarb
push
cmpsb
xor
jb
dec
mov
scas
jnp
mov
movl
sub
gs
jge
movsb
or
nop
jne
pop
sbb
mov
cmp
push
sub
push
or
and
inc
aad
test
ja
jb
fs
xchg
and
sbb
subb
scas
push
jns
aas
jge
pop
out
xchg
repnz
testl
addr16
mov
rclb
pop
daa
and
fwait
orb
adc
jnp
repz
out
and
pushf
mov
hlt
xchg
mov
inc
out
test
add
fistps
jl
movsb
aaa
ljmp
in
pop
pop
mov
das
inc
xor
fs
mov
xchg
ret
inc
and
out
test
xchg
inc
xor
jno
dec
xor
xchg
push
push
rcrl
mov
xchg
push
add
in
or
imul
cs
dec
iret
push
sarb
push
push
movsb
jmp
and
or
out
or
adc
std
lods
or
lahf
jb
mov
adc
pop
cltd
lret
inc
cmp
nop
push
mov
and
sar
roll
scas
xor
mov
pushl
sbb
fists
addr16
inc
fisubrl
sbb
cmp
pop
stos
sub
pushf
cmpsb
sub
inc
aam
cltd
add
and
and
jb
andl
lahf
jl
mov
jns
pop
dec
xor
cltd
add
insb
mov
adc
nop
xlat
pop
mov
and
or
and
mov
add
fst
cmp
pushf
add
cmp
outsb
cli
shll
inc
gs
out
mov
rorl
subb
repz
ret
leave
sub
sub
shlb
mov
mov
push
lds
jb
hlt
scas
push
fcoms
and
imul
daa
jge
mov
dec
lret
iret
and
imul
dec
out
pushf
push
fwait
and
jns
pop
adc
xor
mov
in
arpl
and
pushf
insb
push
pop
jecxz
fcmovnb
sbb
sar
xchg
aad
pop
or
fisttpl
push
cmp
js
mov
sti
jle
xchg
aad
cwtl
adc
lea
scas
fdivr
ror
inc
and
into
aad
dec
das
mov
mov
rcrb
cmp
ds
iret
sub
ret
dec
insl
dec
xchg
mov
scas
sti
sub
ret
repnz
adc
sub
imul
cmpb
sub
test
mov
mov
xchg
shlb
cmp
and
in
mov
mov
cld
mov
or
popf
jne
pop
jp
cwtl
imul
dec
into
loope
xchg
xchg
orb
cwtl
mov
mov
divl
leave
es
fcmovne
dec
and
jecxz
mov
test
in
mov
in
mov
mov
cmpsb
lds
rolb
aam
mov
cwtl
aaa
fs
dec
mov
jg
pop
mov
mov
jmp
ficoms
lret
fsubs
lret
push
call
cmp
lret
das
out
push
ret
xchg
add
sbb
adc
cld
sahf
aam
jmp
push
mov
inc
push
and
cmp
pop
jge
jg
shlb
daa
test
push
pop
repnz
fnstenv
pop
cmp
mov
aas
call
jp
pop
mov
clc
push
sub
iret
or
xchg
push
hlt
out
or
sub
and
lds
ret
fiadds
inc
sarl
fdivrs
pop
lret
mov
into
or
adc
ret
or
add
fs
lock
add
or
jns
jns
dec
sahf
clc
je
xorl
aas
out
fmul
adc
adc
xchg
call
popa
hlt
sbb
sub
inc
push
pop
pop
scas
pop
fsubrl
adc
sbb
mov
fwait
cmpsl
pushf
jb
add
lods
add
xchg
mov
xchg
lcall
push
mov
lods
sti
adc
push
ret
rdmsr
sub
and
fistpll
daa
cli
pusha
jecxz
lcall
jns
aaa
in
test
sahf
test
jmp
xor
hlt
jmp
fdivrp
sub
jb
jle
mov
sbb
into
stc
idivl
pop
jecxz
xor
jg
lock
and
rclb
in
jmp
cmc
popa
pushf
push
lock
jb
mov
sub
pop
mov
adcb
es
push
inc
xor
js
mov
sbb
adc
leave
int3
xor
pushf
inc
popf
dec
xor
and
mov
cwtl
test
sar
sbb
movsl
fimuls
pop
in
jnp
cmp
xchg
test
push
xchg
xor
mov
cmp
addl
mov
xchg
pusha
decl
sub
les
fsts
ret
or
call
insl
sbb
xchg
sti
inc
test
das
pop
dec
pusha
xor
or
jns
mov
jno
aaa
push
pop
imul
jbe
mov
add
push
ret
xlat
push
lds
sahf
lock
pop
jbe
and
in
jne
rcr
inc
adc
push
mov
lahf
cmp
fnstenv
sub
dec
mov
dec
lahf
lcall
and
and
jo
stc
lds
sub
sbb
movsl
imul
adc
lods
aad
aad
sbb
cmp
test
scas
mov
sub
packuswb
push
test
cmp
adc
into
pop
or
ficomps
out
in
out
cmp
mov
xchg
mov
je
sub
lret
mov
xor
xor
xchg
test
sbb
sbb
cwtl
movsl
mov
into
pop
jo
pop
add
adc
cltd
jle
push
and
sub
push
inc
pusha
push
lret
outsl
or
or
fadds
jbe
pusha
jmp
out
scas
jle
movsl
lea
popa
adc
jp
xor
push
lods
push
or
xor
stos
in
mull
out
out
xor
ss
dec
cmp
ror
ds
mov
dec
std
fsubl
pop
repnz
and
pusha
popa
lods
call
fnstenv
getsec
arpl
sbb
inc
popf
push
call
sbb
pushw
cmp
dec
xor
in
cs
rcrb
negl
inc
repnz
sbb
jp
adc
pushf
fisubs
outsb
aam
fcomp
sub
sbb
or
and
pop
push
lret
repz
xchg
mov
push
cmp
add
in
sbb
xor
cmp
pop
jmp
nop
xchg
es
cmpsb
rcrb
mov
movsl
sub
pop
pop
es
sahf
sbb
pop
icebp
shll
and
mov
inc
lret
jge
out
xor
inc
int
xchg
arpl
and
xchg
mov
dec
xor
loope
dec
sub
or
fdivrl
stos
sbb
out
pop
insb
add
and
out
cmc
push
xchg
cmpsb
int3
or
xchg
in
pop
insb
je
repnz
iret
pop
adc
jge
dec
inc
mov
subb
and
inc
cli
pop
test
jb
add
adcb
mov
and
je
pushf
outsb
cld
cli
sub
je
mov
in
mov
push
popa
add
fldenv
or
lea
fcmovu
pop
adc
push
push
enter
add
mov
push
lret
mov
inc
push
stc
sub
add
lds
or
stc
cmp
clc
mov
lret
or
xor
or
xor
ja
in
andl
out
push
inc
mov
scas
or
push
dec
pop
fs
dec
arpl
push
loop
push
aas
aas
mov
inc
push
xchg
xor
mov
call
jmp
and
mov
lea
cmp
pop
mov
loopne
int
push
lea
pop
pop
cmp
sub
lret
sub
roll
gs
and
lods
dec
out
push
outsb
add
cmp
ss
mov
arpl
pop
add
add
sub
pusha
mov
cmp
mov
hlt
filds
push
push
mov
scas
mov
sbb
movsl
loop
dec
pop
dec
pop
sbb
imul
cmp
mov
adc
push
xchg
inc
xchg
pop
aam
rcrb
or
test
aaa
push
pop
and
jl
imul
in
inc
nop
mov
mov
dec
lret
push
push
dec
xchg
sahf
cwtl
sbb
lods
test
and
mov
cmp
int3
enter
and
daa
stos
push
lret
sbb
mov
lea
jp
cmpsl
sarl
xchg
jmp
movsb
push
mov
call
jns
fs
fnstcw
mov
inc
push
int
xor
lds
add
nop
push
inc
int
fldcw
leave
lock
aam
movb
push
xor
or
xchg
sbb
sahf
icebp
inc
lds
mov
sub
loop
call
inc
cs
jbe
sbb
dec
jno
lods
jge
jmp
out
sub
push
dec
push
orb
lret
mov
lock
call
mov
std
ljmp
outsl
mov
test
sub
scas
cs
out
push
fadds
jb
mov
lea
push
mov
jno
dec
mov
sbb
xor
imul
ret
sbb
pop
shl
iret
ss
ret
sbb
outsl
push
dec
pop
cmp
aas
mov
cli
cmpsb
mov
push
dec
out
sbb
xor
cvtdq2ps
mov
xor
cltd
jne
or
add
out
push
pop
sub
xchg
sahf
push
mov
std
or
test
lcall
push
mov
xchg
outsb
fnsave
ja
and
dec
in
mov
daa
pop
shll
xor
mov
push
mov
jge
add
test
lahf
js
or
mov
mov
fldl
dec
and
sbb
hlt
mov
adc
or
and
stos
ljmp
lods
sarb
pop
test
mov
push
push
inc
mov
jle
cltd
das
inc
scas
call
pop
dec
and
push
ds
xor
insb
pop
ss
mov
hlt
mov
xchg
push
insb
adc
push
lcall
xchg
or
jge
dec
bound
pop
stos
cmp
ljmp
dec
test
and
sub
dec
mov
xchg
fcoml
arpl
sahf
mov
lock
adc
xchg
rolb
pop
jno
in
shll
clc
jb
cmp
cwtl
clc
popa
adc
mov
rolb
xchg
ret
movsl
lahf
fbstp
les
inc
pusha
and
sarl
sarl
aas
imul
add
or
sbb
sahf
push
xchg
fisubrs
js
xchg
ficompl
xchg
xchg
and
or
leave
mov
das
and
add
cs
jnp
rcrb
std
repnz
push
scas
ds
ret
push
dec
add
adc
jge
aam
loop
mov
in
mov
xor
cmp
je
mov
cmpsl
mov
ljmp
mov
push
pop
in
lods
dec
sbb
dec
push
mov
cmp
das
add
jge
cwtl
add
pop
sbb
test
cld
adc
les
xlat
pop
xorl
in
cmp
stos
inc
leave
add
inc
and
sub
lea
push
push
out
add
andb
loope
sbb
push
xor
mov
push
mov
jo
dec
fs
lods
cmp
adc
xchg
clc
mov
gs
mov
nop
inc
add
sub
inc
dec
sbb
xchg
leave
fidivrl
adc
ljmp
fnstsw
xchg
xchg
jns
arpl
rolb
inc
jecxz
arpl
dec
mov
loope
jne
icebp
xchg
push
mov
jecxz
outsl
dec
sub
rorl
into
repnz
lcall
arpl
orl
inc
mov
add
inc
add
icebp
add
subl
call
add
lcall
mov
inc
rclb
cltd
sbb
cmp
ja
gs
fldz
std
popf
enter
adc
imul
test
xchg
sub
xchg
xor
dec
lret
adc
mov
hlt
adc
fwait
pop
sbb
repz
in
pop
inc
adc
lods
push
mov
push
pop
in
loope
imul
repz
in
icebp
rcll
icebp
add
adc
and
ljmp
shlb
imul
or
dec
xchg
cmpsl
jge
push
sub
sti
adc
ror
inc
daa
xchg
scas
addr16
dec
dec
pop
fsubs
mov
mov
cmp
out
mov
inc
push
orl
adc
iret
mov
xor
cmc
lock
sarb
loopne
sbb
jnp
in
xchg
sbb
test
push
iret
add
and
push
and
repz
add
mov
jge
jl
mov
repz
lea
shrl
jecxz
cltd
mov
sub
jno
ret
cmp
cmpsl
mov
cmpsb
ret
xor
test
mov
paddq
les
movsb
mov
rcr
popf
mov
add
in
fstl
inc
cmp
adc
movsb
mov
arpl
adc
stos
inc
out
iret
jnp
jmp
scas
cmp
and
cmp
dec
mov
inc
js
imul
dec
add
lahf
out
mov
add
cmp
sarb
andb
lcall
inc
es
add
mov
int3
test
aam
jmp
push
xor
and
cmpsb
out
js
sahf
sub
sbb
inc
subb
mov
sbb
fsubl
sbb
ror
mov
fmulp
or
cmc
pop
bound
adc
cmpsb
add
arpl
xchg
and
test
inc
xchg
mov
fcmovu
insb
out
mov
ret
movl
das
addl
enter
mov
lods
pop
jp
cmp
int3
jbe
in
xchg
imul
and
and
pop
mov
push
xchg
daa
dec
mov
fnstenv
mov
test
enter
dec
mov
sub
aad
dec
jne
into
addr16
sbb
mov
mov
adc
and
loop
ret
add
jge
lret
xchg
aas
adc
ficompl
das
add
jmp
leave
mov
dec
fucom
lea
enter
fbld
mov
xchg
inc
jecxz
jno
out
or
xor
scas
push
dec
mov
imul
loope
mov
dec
jecxz,pn
lcall
insb
add
pop
push
pop
and
push
xor
fists
jb
out
insl
loopne
push
pusha
push
cmp
ret
gs
lahf
clc
cltd
lds
xor
dec
out
and
pop
mov
jl
cmpsl
push
sub
mov
call
dec
add
fnstenv
in
test
jmp
sub
pop
inc
pop
sub
cmpsl
fsubr
xor
leave
dec
xor
and
xchg
push
loop
lods
ss
sub
scas
mov
imul
stos
xor
mov
mov
in
jp
dec
inc
cmc
lret
ljmp
in
fistpll
or
mov
lret
out
mov
cli
jecxz
movsl
int3
xchg
call
es
imulb
fcmovnb
fs
jns
jae
xchg
jmp
jae
mov
and
pop
push
inc
aaa
aam
ror
mov
jbe
cmpsb
jno
aam
je
imul
mov
in
cmp
in
add
sbb
in
adc
and
jmp
pop
sti
sbb
daa
push
movsl
cltd
test
pop
or
stos
shrl
addr16
mov
rolb
add
jle
sbb
jecxz
mov
ss
adc
xchg
stos
lds
sbb
iret
and
pop
or
cmp
inc
inc
or
or
sub
sub
xor
sub
mov
dec
lock
fildll
mov
cmpsb
mov
adc
and
lret
pop
sub
lods
cmp
call
push
pushf
scas
add
sub
and
hlt
pop
mov
popf
inc
cltd
push
into
cmpl
cmp
pusha
adc
icebp
sub
mov
popf
cmpsb
mov
mov
adc
call
mulb
jb
sbb
pop
xchg
in
and
in
cmp
or
cmpsl
repnz
push
add
mov
add
mov
push
lea
adc
pushf
pop
dec
inc
mov
fsubrs
and
push
xchg
add
push
fwait
out
divb
popa
dec
fdivs
aad
lcall
ljmp
jae
cmpsb
adc
out
cmp
inc
lret
fidivrl
pushf
out
sbb
xor
rcr
fsub
dec
jl
pusha
jnp
outsb
popa
mov
in
dec
xor
pop
imull
je
sub
pop
pushf
jne
mov
mov
mov
mov
jmp
bound
cltd
cmpsb
cwtl
divl
lods
clc
cmpsb
sbb
push
dec
cmp
stos
aaa
bswap
idiv
sti
lds
gs
pushf
push
movsb
sub
sub
and
mov
fsubp
mov
popf
cmc
jae
pop
xor
outsl
adc
and
std
adc
pop
gs
sbb
sti
fdivp
popf
sub
adc
jno
dec
jns
cmpsl
adc
inc
push
sbb
pushf
mov
jmp
cmp
jmp
lods
xor
ljmp
cltd
adc
in
jle
adc
pop
pop
mov
push
shlb
adc
addr16
and
clc
inc
nop
or
jnp
stos
xrelease
xor
pop
insl
mov
std
arpl
outsb
cmp
mov
inc
mov
andl
shrb
gs
iret
mov
test
jg
lds
push
push
add
push
xchg
and
and
into
loope
cld
mov
and
sbb
pop
andl
cwtl
add
call
lds
dec
es
cmpsb
and
lds
fadd
sbb
je
jne
dec
cmp
leave
inc
out
stos
jg
idivb
or
out
jmp
xor
adc
loop
test
sbb
ja
ds
add
pushf
sbb
repnz
jge
pop
push
je
mov
adc
test
cmpsl
mov
jg
subb
pop
mov
scas
mov
pushl
jge
fdivrl
lods
pop
fdiv
imul
dec
mov
fadds
ret
or
sbbl
push
and
lret
addl
hlt
adc
xor
cmpsb
adc
aas
cmp
and
jae
jb
mov
or
rclb
fdivs
bnd
and
lahf
jne
jg
insb
jnp
xor
push
dec
xor
adc
sbbb
adc
push
inc
adc
mov
pop
lahf
sub
imul
cmp
push
jmp
adc
pop
cmpsl
cmpb
pusha
sbb
movsb
mov
je
lds
xchg
and
clc
sub
roll
clc
add
xor
mov
or
mov
xor
icebp
test
out
dec
push
xchg
std
lcall
fs
or
das
mov
push
out
mov
push
fmul
lods
lea
or
jmp
mov
jecxz
dec
sub
cmp
inc
pushf
fldt
jl
adc
sub
cwtl
ljmp
frstor
jne
addr16
mov
lods
in
mov
adc
cmpsb
mov
movsb
test
fsubl
mov
fisubs
repnz
cmp
imul
mov
mov
inc
xchg
xlat
inc
mov
scas
add
div
int3
push
cli
dec
cmp
fldt
mov
fidivrl
cmp
xor
jnp
or
outsl
xchg
notl
ljmp
mov
fistpll
xlat
test
xlat
push
pop
rcrb
pop
or
mov
xor
je
out
movsb
sub
lcall
mov
and
adc
xlat
in
sub
inc
outsl
mov
dec
jnp
in
pop
xchg
out
andl
mov
push
pop
into
scas
push
xor
fnstcw
sub
jmp
outsl
lods
lods
mov
lahf
cmp
leave
ret
fsts
insb
or
out
inc
mov
mov
xor
fmuls
sbb
je
pop
mov
lock
popa
and
ret
pop
pusha
roll
imul
dec
push
dec
in
xor
sbb
repz
mov
shl
fwait
push
insl
push
shlb
adc
packuswb
fadd
pop
in
leave
xchg
jns
outsb
stos
shrl
mov
into
jecxz
lahf
rcl
daa
inc
mov
and
mov
push
scas
ljmp
sbb
sbb
popa
inc
in
cmp
adc
pop
or
push
ljmp
pop
sub
pop
mov
xchg
in
add
jae
or
mov
xor
dec
jbe
jne
or
cmp
aaa
mov
arpl
xchg
ds
xor
stos
lret
clc
sub
mov
les
adcb
test
xchg
inc
call
pop
jnp
in
comiss
xchg
repz
mov
mov
mov
incl
mov
lea
js
jno
decb
xor
lahf
dec
cld
mov
add
mov
mov
pop
andb
xlat
sbb
les
push
xor
fidivl
and
out
fcmovne
movsl
mov
mov
fidivrl
icebp
sbb
popa
pop
dec
xor
fsts
or
mov
pop
inc
mov
xchg
andl
sbb
inc
lret
mov
xchg
fisubl
jl
test
fists
rcrl
and
mov
mov
popa
add
mov
cs
mov
outsb
adcl
and
xchg
pop
jp
inc
ja
mov
andl
adc
jo
fwait
pop
fcomps
xor
jecxz
adcb
sub
loopne
test
mov
fiaddl
pop
icebp
lds
mov
xor
xor
mov
xchg
jo
add
arpl
adc
push
xor
sub
pop
mov
addb
daa
adc
pop
cmpsb
iret
cmp
push
or
call
mov
push
mov
xlat
scas
jno
pop
jl
or
icebp
std
js
in
das
xchg
mov
xor
mov
int
dec
fcompp
xchg
inc
into
jns
dec
pop
fcmovb
repnz
mov
add
movsb
xor
mov
in
pushf
pusha
lret
addr16
pop
cmp
dec
adc
test
test
out
xchg
and
aam
ja
mov
stc
shll
in
or
mov
lret
test
xor
fcoms
stos
stos
icebp
and
pop
inc
in
pop
fwait
into
add
stos
mov
fdivrl
jno
pop
aam
xchg
ret
add
or
sti
int3
jns
ret
addr16
pop
inc
jmp
jne
out
in
cwtl
in
gs
orl
jae
mov
mov
neg
push
cmpsb
cmp
rolb
loope
imul
bound
inc
ss
pusha
insb
dec
je
imul
push
jo
into
cmp
mov
mov
scas
mov
fldl
shrl
mov
jne
jns
pop
call
nop
add
sub
or
sbb
xchg
fs
dec
call
pop
mov
stc
out
int3
imull
popf
nop
ds
xchg
mov
mov
pop
insb
inc
cltd
lea
call
adc
mov
dec
sbb
push
lods
popa
cmp
push
pop
sub
pop
adc
cmp
push
enter
sub
dec
push
push
loopne
movsb
jg
fcmovu
testb
aaa
dec
inc
inc
repnz
pop
mov
mov
call
icebp
adc
pop
popl
push
xchg
notb
adc
pop
pushf
sub
and
jne
sub
jno
push
mov
and
mov
fs
dec
sub
lret
fnsave
xchg
mov
cmp
rorl
push
mov
sbb
inc
stc
dec
insl
fdivrs
ret
mov
cmpsb
pushf
xlat
cltd
les
xor
int3
repnz
mov
cli
pop
lock
mov
jb
in
jmp
pop
scas
es
mov
mov
cs
jge
movsb
lods
int
dec
add
pop
pusha
loopne
insl
mov
and
pop
pop
rcrl
enter
test
adc
and
adcl
inc
imul
mov
inc
stos
lret
enter
pop
dec
dec
sub
lock
pandn
jae
sbb
mov
push
mov
mov
xlat
pop
xor
fsubr
pop
vpshld
inc
push
std
sti
cmp
add
rcl
cmp
jmp
dec
xor
stc
mov
cmp
lret
xlat
jmp
dec
sbb
inc
add
lods
test
mov
mov
jecxz
int3
mov
inc
pop
adc
mov
insb
jne
into
test
insl
pop
pop
int3
sbb
lods
dec
fbld
inc
mov
sbb
es
pop
in
fiaddl
and
enter
adc
push
leave
fnstenv
ja
es
stos
ljmp
push
push
arpl
fadd
lock
sbb
out
imul
into
mov
negb
ret
pusha
pop
and
inc
xor
cmp
jp
ret
dec
pusha
sbb
outsb
ljmp
fwait
std
test
loop
lcall
jae
clc
ss
rcr
inc
or
scas
notb
push
icebp
ret
xchg
test
xor
in
test
cmp
cmp
pop
sub
mov
sub
jo
rorl
xchg
and
aas
lds
sub
dec
roll
insb
pop
imull
cmc
jbe
sbb
dec
jo
test
sub
roll
test
jo
ds
jp
xchg
cmc
dec
fs
insl
add
js
les
out
push
xor
lret
lret
inc
sub
mov
mov
icebp
xchg
dec
xchg
das
mov
sub
cmp
cmp
mov
outsb
jo
aaa
mov
xchg
sarl
add
aam
mov
inc
dec
jo
xchg
xchg
insb
xlat
push
lock
mov
in
push
cmp
cmp
in
rorb
or
xchg
sbb
aad
push
dec
sbb
jno
jg
xor
lock
push
push
xor
xchg
and
and
inc
cmp
mov
cmp
ja
movsb
dec
aam
mov
sti
call
jb
xchg
pop
cmp
leave
pop
es
dec
int
dec
xchg
jl
addr16
cmp
push
xchg
andb
adc
lcall
enter
fnstenv
cli
xor
sub
out
into
scas
or
jmp
loopne
jg
mov
or
cmp
ret
xchg
adc
push
sbb
mov
leave
js
les
xor
sub
into
xchg
roll
pop
dec
mov
rcl
lds
decl
ficoms
cmp
mov
xchg
imul
loop
out
mulb
pop
pop
sbb
sub
inc
dec
out
cmp
dec
push
xor
loop
paddd
add
add
ret
mov
and
mov
jnp
lret
push
test
jle
or
shrb
adc
lock
lods
jae
mov
lock
add
cmp
shll
and
loopne
clc
xlat
sbb
add
mov
loopne
pop
clc
push
jne
ret
mov
push
sbb
xchg
mov
jne
mov
nop
or
imul
jae
xchg
daa
and
push
mov
xor
lcall
add
jns
xor
dec
and
hlt
popf
mov
dec
inc
push
addb
or
cmp
bound
pushfw
xchg
popl
dec
out
mov
jecxz
inc
test
and
xor
cmp
stos
outsl
pop
jmp
hlt
fiadds
jb
xor
add
insb
cmpsl
addr16
xchg
fwait
out
in
iret
sbb
jno
mov
push
inc
nop
cmp
adc
dec
fnsave
cmp
stc
fst
adc
and
pop
and
mov
das
push
lds
mov
aas
lcall
mov
adc
lock
or
lock
push
sub
mov
out
add
out
scas
pop
mov
lcall
in
sbb
adc
mov
jbe
scas
ss
iret
test
jo
out
rcll
imul
fiadds
jl
xchg
jae
inc
loope
push
xorb
subb
jae
das
mov
inc
fst
push
mov
cltd
iret
adc
scas
mov
test
iret
je
stc
ficoms
xchg
out
lret
xlat
push
sbb
scas
mov
inc
pop
dec
xor
sbb
sbb
es
add
das
lea
jmp
gs
in
je
shlb
adc
outsb
cmovne
repnz
ret
mov
mov
stc
push
push
dec
mov
or
mov
int
fldl
in
std
and
orb
lods
scas
shll
loopne
mov
jmp
pop
xor
fs
pop
mov
out
jmp
movsl
jbe,pt
mov
imul
insb
in
cmc
pop
sysret
pop
adc
fimuls
cmp
fisubl
out
jg
inc
mov
insl
xchg
out
dec
or
adc
popf
mov
fmuls
mov
dec
or
shr
vmwrite
jmp
pop
les
sahf
movsb
hlt
jnp
jo
sbb
adc
add
push
mov
das
hlt
xor
pop
dec
push
or
mov
rolb
loopne
hlt
int3
dec
aaa
loope
in
xchg
xor
push
sbb
pop
les
inc
stos
sub
mov
push
mov
and
push
push
sub
jns
inc
insb
es
xor
mov
adc
je
fstps
lods
pop
cmp
mov
lahf
fdivr
aad
enter
pop
daa
dec
xchg
jge
out
sub
mov
stc
mov
popl
xlat
xchg
ret
scas
mov
pushf
inc
push
lock
negb
cmpsb
cmc
mov
jmp
mov
xchg
push
xor
pop
push
xchg
rorb
adc
xchg
mov
mov
lds
push
clc
mov
jmp
lahf
add
pop
cltd
adc
je
pop
pushw
sbb
mov
popa
rorb
mov
scas
sub
cmp
or
lock
js
scas
cmp
jne
popa
add
add
arpl
das
repz
scas
pop
xor
mov
pusha
jb
outsl
sbb
sbb
mov
jbe
add
jo
or
adc
test
and
inc
cmc
mov
mov
test
sbbl
callw
mov
xchg
xor
sbb
sbb
cltd
push
fildl
mov
mov
pop
shlb
int
cli
jbe
or
sti
shlb
dec
xchg
xor
adc
fisubl
lret
mov
push
loopne
test
or
push
gs
inc
das
loop
cmp
or
and
or
add
shrl
dec
inc
jp
push
cmp
mov
xchg
mov
idivl
adc
decl
subb
test
sub
mov
mov
and
and
inc
push
cmp
xor
popa
test
jo
call
sbb
dec
je
sahf
mov
aas
das
stos
les
inc
rdmsr
or
mov
fnstsw
mov
push
cli
or
das
fnstsw
and
data16
arpl
arpl
into
or
dec
add
ffree
fnstenv
sub
pop
xchg
scas
rol
add
xchg
lret
or
inc
jmp
jle
xor
iret
call
xchg
xor
test
aas
lods
push
jg
dec
fildll
cmpsl
aas
pop
or
push
sub
fidivs
int
test
sub
loope
jge
out
inc
test
hlt
jmp
adc
leave
aam
xchg
add
dec
fxch
dec
rclb
cmp
lcall
adc
xchg
shl
in
dec
pop
mov
dec
push
or
inc
in
loopne
cmp
sahf
jnp
les
ret
inc
sub
sti
sahf
mov
lea
mov
add
jmp
or
jge
dec
adc
push
int
ja
mov
cmp
ret
fs
fldl
mov
into
dec
or
mov
es
adc
lret
dec
gs
dec
testb
rclb
mov
aaa
push
mov
adc
sbb
pop
loope
inc
shll
sbb
out
cmp
mov
pusha
jge
scas
mov
lcall
add
push
pop
mov
insl
sub
ds
sti
inc
jb
repnz
mov
dec
xorl
popa
sbb
jmp
prefetchnta
sub
push
push
mov
mul
icebp
push
jg
outsb
out
outsb
and
push
jge
addr16
cmpsl
mov
sub
enter
test
and
orb
push
mov
adc
xor
leave
ljmp
push
and
mov
adcb
mov
and
andl
rcll
negl
mov
inc
and
add
inc
pop
push
imul
mov
mov
pushf
push
jg
or
je
loope
call
cmp
lds
mov
and
push
push
mov
stos
paddw
lods
mov
pop
out
inc
pop
ss
punpcklwd
insl
pusha
jge
addr16
xchg
icebp
mov
adcb
lret
bt
jnp
pushf
pop
mov
outsb
push
or
sub
test
sub
dec
push
dec
lahf
out
or
cmp
sub
stos
pop
js
push
lods
xor
ljmp
xchg
mov
mov
inc
lock
dec
fdivrl
sub
stos
sbb
ja
out
add
scas
pop
je
ss
add
in
ja
aas
and
pop
add
out
xchg
inc
pushl
movsb
mov
mov
sti
sub
mov
push
movsb
fs
sbb
inc
cmp
daa
sbb
xchg
gs
sub
mov
mov
std
fucom
fisttps
repnz
aas
mov
in
lods
dec
movsb
jge
xor
lret
jno
and
mov
out
add
push
or
lea
push
xchg
mov
push
adc
adc
lret
jbe
popf
jne
scas
stc
mov
xor
cwtl
adc
pop
adc
stos
aaa
out
in
das
mov
inc
push
jg
mov
mov
inc
leave
pop
imul
cltd
arpl
push
ljmp
mov
cld
bound
sahf
int
iret
into
jg
pop
mov
rcrb
andl
add
stos
jnp
sbb
pop
test
mov
push
int3
xchg
or
pushf
jae
mov
mov
jge
sbb
aas
sub
mov
mov
sbb
inc
add
lock
jle
in
add
or
imul
mov
mov
in
xor
mov
mov
xlat
jnp
fadds
adc
iret
dec
out
movsl
pop
cmp
in
push
and
jo
xlat
or
pushf
test
sbb
jns
pop
aaa
sbb
xchg
lea
jo
push
gs
roll
and
ficomps
std
add
test
test
mov
adc
cmc
jns
adc
test
in
inc
xor
adc
dec
and
cmp
pop
push
pop
mov
test
leave
ret
fldenv
fidivs
or
dec
pop
inc
jns
sbb
pop
ret
psubusw
sub
sar
push
xor
xchg
bound
aaa
mov
pop
test
jl
inc
cmp
gs
adc
add
rolb
adc
sahf
fmull
add
das
fucomip
mov
test
mov
notb
sub
movsl
mov
pop
fwait
in
and
das
jecxz
push
or
cld
aam
dec
xchg
xchg
das
das
push
aas
fs
dec
sahf
mov
sub
outsl
push
in
jecxz
adc
movsb
mov
loopne
or
dec
xlat
aad
int3
fildl
dec
or
push
xchg
xorb
dec
ljmp
add
jnp
cmp
jno
and
aad
jge
insb
add
daa
addr16
xchg
mov
rcl
jmp
in
jp
mov
pop
xor
sub
push
mov
sbb
int3
sbb
jge
add
jbe
inc
out
mov
jb
inc
clc
mov
and
lods
out
lcall
fimuls
lods
ss
aam
cmp
stos
xchg
sbb
sbb
or
mov
jbe
mov
mov
ja
dec
lret
arpl
fisttpll
stc
aad
push
mov
mov
mov
mov
imul
mulb
das
pop
add
enter
jmp
bound
sbb
add
shrb
in
call
out
mov
in
sbb
pusha
sarb
rorb
sub
mov
mov
pop
cs
test
xchg
aam
xor
data16
mov
ss
sub
movsb
add
insb
enter
or
lret
fistpll
mov
movsb
mov
lahf
test
lahf
adcl
aas
shll
pop
ljmp
aas
shrl
fidivrs
mov
cltd
mov
xor
shrl
adc
fwait
stc
roll
jnp
add
or
cmp
aaa
sub
mov
daa
and
cmp
leave
std
imull
shl
pop
jg
jle
test
in
xchg
or
adc
inc
mov
push
pop
sub
cwtl
sti
fisttpl
dec
push
test
add
movsb
stc
xchg
sub
arpl
cmp
js
lds
aam
adc
mov
adc
pop
xor
fsubl
das
das
out
xor
aam
sbb
flds
loope
imul
xchg
or
decl
sbb
or
pop
sbb
das
sub
fwait
mov
scas
icebp
arpl
pushf
movl
mov
sub
mov
aad
popa
adcb
cld
lahf
or
inc
rcrb
repnz
jg
add
andb
jns
sub
mov
adc
fiaddl
sbb
mov
cmp
xor
filds
jno
push
pop
mov
loopne
ss
ficompl
mov
add
wrmsr
add
ljmp
xchg
inc
movsb
cli
sbb
lds
mov
mov
dec
imul
icebp
pop
push
add
sub
mov
jmp
imul
outsl
jns
inc
loop
pusha
pop
mov
jns
adc
out
idivl
adc
mov
test
mov
mov
data16
xor
test
add
mov
and
xchg
adc
inc
rcl
xor
or
xchg
or
push
push
loop
lcall
ret
sbb
inc
and
fmuls
in
in
ficompl
add
xchg
movsb
push
mov
adc
and
scas
push
jo
int
xlat
cmpb
dec
sbb
xor
imul
push
sbb
mov
jo
dec
fwait
xorl
test
test
loopne
adc
xchg
jp
sbb
gs
or
rorl
jns
and
adc
cltd
and
xchg
xor
fldcw
jns
fscale
push
out
xor
lds
cwtl
clc
mov
mov
loope
and
je
add
xor
movsl
lods
add
cmp
sti
xor
jns
sub
fisttpl
dec
and
mov
insb
aam
jge
push
mov
xchg
add
push
daa
inc
cli
fstpt
into
in
int
xchg
js
sub
loopne
cmpl
push
push
into
xchg
test
loop
iret
stc
insl
loop
clc
negb
push
xchg
xor
xor
insb
push
jg
push
ret
sub
xchg
sub
out
dec
clc
jmp
push
mov
roll
xchg
and
jo
popa
inc
cmp
cmp
ljmp
dec
sbb
add
mov
in
or
mov
jl
movsb
mov
push
cli
and
cmp
test
push
sub
mov
pop
cmp
cmp
mov
mov
inc
rcrb
xor
testb
mov
clc
or
and
daa
addl
or
scas
dec
push
in
rcl
test
mov
inc
lods
or
or
or
mov
ror
int3
scas
mov
testb
aam
lcall
pushf
sub
dec
lods
aam
cmp
int
pop
movl
mov
xchg
notb
outsl
mov
pop
pop
sub
js
rcl
add
dec
cmpsl
add
les
or
into
cmpsl
imul
inc
jg
stos
sub
mov
pop
xlat
push
daa
imul
mov
mov
ret
mov
int3
mov
push
pop
lret
xchg
int3
jnp
lods
add
fsts
push
xchg
xor
cli
add
mulb
aas
dec
adc
rorl
cmp
test
pop
cld
adc
pop
test
lods
cmpb
jecxz
mov
sbb
divl
jne
fwait
or
sbb
mov
sub
fdivs
inc
outsl
shll
xorb
push
cli
push
and
jne
pop
out
add
scas
mov
sub
and
add
mov
adc
jp
mov
mov
mov
and
pop
movsl
popf
xchg
mov
dec
mov
test
fdivrs
in
dec
xor
rcr
jo
repz
adcb
lret
cmp
add
stc
sbb
fldenv
mov
data16
jb
sbb
cmpsb
sbb
popf
mov
jbe
mov
pop
inc
test
mov
ret
mov
cmp
cmc
stos
scas
cmpsl
stos
loop
aam
test
test
fsubs
sub
mov
xchg
sub
fdiv
fnstsw
sub
pop
mov
adc
mov
push
in
lahf
icebp
in
and
jno
jnp
adc
sbb
lea
lret
cmp
inc
dec
test
stos
inc
lods
add
outsl
enter
inc
cwtl
pusha
or
arpl
push
fcmovnb
pop
inc
roll
mov
xchg
inc
addr16
ja
loope
inc
aam
jg
inc
mov
fwait
cs
dec
add
sbb
jmp
cmpb
popf
in
outsl
int
lds
pushf
mov
sbb
mov
lret
std
daa
pop
xlat
std
lahf
jmp
cmp
call
lds
insb
dec
fs
mov
cld
cmc
pop
inc
aad
in
sub
popa
sti
push
xchg
dec
mov
inc
lret
bound
loop
xor
jns
xchg
test
jge
inc
outsb
data16
cmp
fdivrs
and
outsl
push
ret
xchg
icebp
shl
jbe
and
lods
sbb
sub
cmc
int
inc
mov
icebp
and
jg
lods
adcb
rclb
movsl
in
out
add
pop
jns
lret
fisttpll
lods
xor
push
adc
ret
shr
fldt
dec
xor
dec
pop
ja
push
push
jne
test
sbb
xor
cmpsl
out
add
loope
adc
or
xchg
sahf
push
jb
mov
addr16
sbb
pop
int
inc
xor
out
cltd
xchg
adc
jb
jbe
loope
arpl
rcrb
imul
pop
and
cld
pop
bnd
cmpsb
popf
leave
loopne
and
scas
bound
addr16
mov
popl
inc
jp
ljmp
mov
arpl
mov
inc
push
sarl
pop
test
mov
test
mov
sbbb
lods
sbb
inc
loop
mov
call
add
out
add
jmp
sbb
repnz
ror
sbb
icebp
into
sub
jno
inc
xchg
jno
push
divb
mull
dec
fucom
or
insb
filds
sbb
mov
les
nop
inc
mov
mov
pop
inc
xchg
mov
repz
push
adc
or
sub
and
mov
cld
pop
ljmp
push
xor
test
sbb
cs
adc
xor
iret
popl
lret
ja,pt
pusha
out
mov
add
mov
inc
or
mov
hlt
or
jl
dec
das
cmp
stos
add
adc
and
jge
xchg
jae
mov
out
orb
cmpsl
cmp
jge
pop
ds
mov
add
ljmp
adc
inc
and
out
jno
mov
divb
mov
xor
mov
dec
mov
push
repnz
jae
adc
movsl
pop
push
por
sub
add
jle
push
jecxz
je
mov
ja
repz
lahf
aad
push
sub
push
sub
fcom
outsl
xor
aaa
push
push
pop
mov
sub
or
or
inc
push
xor
xchg
and
adc
out
call
ja
mov
out
lcall
xor
das
fucomp
int
jge
repnz
inc
fs
fnsave
add
pushf
in
insb
add
adc
sti
push
jle
mov
shll
ss
pop
bound
je
enter
mov
mov
adc
and
decb
ljmp
inc
ljmp
xor
jl
js
bound
xor
dec
cmp
mov
out
jmp
sbb
jmp
xor
or
mov
xchg
mov
xlat
pusha
mov
lret
in
lods
aas
sub
and
sbb
mov
sti
jle
mov
imul
mov
jns
scas
mov
jge
cmp
jge
addr16
cmpsl
cmp
xchg
pop
mov
inc
pcmpgtb
pop
es
lahf
insb
call
imul
repnz
std
xor
pushf
je
jne
xor
daa
popa
test
jmp
rorb
pop
mov
call
push
in
imul
push
or
clc
dec
and
loop
xchg
and
arpl
xchg
mov
push
out
cmpsl
and
push
mov
fwait
xor
jno
pop
dec
sub
lods
repz
mov
sub
pop
adc
and
cmp
ret
sbbb
xchg
lods
add
movsb
jl
xor
test
out
xor
mov
push
cmp
mov
sub
js
test
inc
fbstp
ljmp
sti
cli
or
add
ds
fmull
xor
std
shlb
jmp
push
jmp
out
xchg
mov
div
pop
or
xchg
xchg
jl
add
shrl
cmpb
in
pop
cwtl
push
pop
push
sub
push
dec
mov
pop
jb
sahf
cmp
mov
pop
mov
lock
pop
jbe
mov
pop
mov
sbb
sahf
cmp
cmpsb
mov
aam
leave
push
sub
and
in
faddl
jo
mov
xor
daa
or
inc
cmp
ljmp
pop
jp
imul
popa
xor
inc
ljmp
lahf
mov
in
add
mov
mov
test
jne
sbb
jne
mov
push
hlt
inc
addl
mov
inc
outsl
sbb
leave
into
addr16
mov
insb
fldenv
xchg
aaa
mov
fucomi
dec
dec
pop
jmp
and
repz
aam
fnsave
lret
sbb
mov
movsl
shlb
pop
adc
dec
xchg
pushf
loop
cvtpi2ps
sub
jmp
andl
pushf
cmp
push
out
gs
stos
lahf
mov
cwtl
repz
bound
inc
cli
inc
adc
lds
or
push
das
push
rcll
push
test
test
into
add
and
mov
xchg
aam
mov
jge
lret
pushl
cmp
lds
out
cmpsb
mov
push
mov
nop
jns
xor
scas
int3
idivl
sub
js
sub
addb
cld
inc
jae
pop
cmp
adc
ja
and
fadds
lahf
push
subl
xchg
or
jp
jl
inc
aas
adc
call
cmp
inc
sbbb
add
inc
scas
add
sub
sbb
popf
inc
clc
sbb
call
xor
lods
div
lods
in
addl
xchg
or
xor
sub
add
sti
and
mov
and
inc
fwait
lret
test
mov
sub
ds
aas
subl
shlb
sbb
push
inc
cli
jno
insl
in
and
jp
jo
sbb
aam
add
jae
pop
sub
loop
dec
mov
sahf
mov
cmp
mov
bound
mov
movsl
mov
int
adc
imul
add
js
push
aas
and
add
or
mov
imul
jmp
popf
andl
pusha
stc
inc
test
ss
setb
loop
dec
call
add
push
mov
push
mov
outsb
fs
cmc
les
fadd
xor
sbb
and
sub
mov
mov
mov
loopne
lea
adc
mov
or
push
add
mov
push
inc
dec
push
nopl
add
mov
add
jp
mov
imul
imul
hlt
mov
jl
rcr
popa
mov
ror
push
sbb
jle
loope
inc
in
orb
adc
outsl
jae
xchg
ljmp
stc
and
mov
pusha
jns
mov
jbe
sbb
push
dec
mov
loopne
enter
mov
sbb
inc
dec
xchg
inc
mov
dec
fistl
mov
sbb
mov
pop
xor
xor
xor
xchg
jb,pt
js
adc
cmp
rcr
xchg
jp
mov
ss
sub
stos
cmp
adc
inc
dec
js
je
ror
std
mov
fbld
adc
repnz
cmp
mov
push
nop
ret
lods
push
cmp
sti
insb
add
jecxz
cmc
mulb
sbb
mov
and
jmp
push
sub
adc
add
jns
xor
adc
mov
cmp
dec
xchg
add
xor
inc
int
push
lcall
xchg
cmp
sbb
push
adc
data16
mov
loope
lods
and
rcr
push
ja
and
int
je
sbb
or
sbbl
jb
cmp
xchg
pop
adc
loopne
ss
jp
adc
add
sub
cld
mov
enter
jmp
les
aad
ljmp
and
mov
int
jmp
xor
in
pop
or
pop
push
cmpb
mov
pop
arpl
mov
subl
mov
adc
gs
aas
shll
mov
xchg
notl
movsb
test
and
data16
pop
lods
pop
rclb
movsb
xchg
jecxz
in
aam
cs
sahf
jbe
or
adc
pop
and
or
pop
sbb
scas
mov
and
std
sub
sbb
push
out
aas
ss
pop
lods
fwait
aad
xchg
pop
icebp
pop
scas
adc
int
arpl
adc
aas
add
pop
adc
and
push
xchg
adc
insb
jo
push
test
pop
mov
jp
mov
addr16
rorb
iret
shrb
jg
arpl
or
sbb
inc
pusha
sbb
mov
inc
jmp
jnp
cmp
cmpl
ficoml
lcall
movsb
movsl
jno
cmp
mov
enter
jmp
xchg
sbb
add
sub
pop
cmp
lods
rol
clc
push
int3
in
cmpl
cmp
iret
xchg
dec
and
jmp
jp
pop
lcall
and
cmpsb
inc
jns
cli
add
mov
jl
es
hlt
mov
ljmp
cwtl
pop
mov
cmp
fcoml
cmp
das
cs
cwtl
sub
mov
push
push
sbb
lock
and
out
mov
imul
pushf
les
xor
loope
adc
sbb
xor
or
rcrb
mov
jbe
lea
adc
mov
pushf
push
ret
mov
sti
repz
and
inc
arpl
mov
sbb
fadd
sub
pushf
iret
xchg
fidivrs
add
ror
fadds
push
mov
out
movsb
pop
movsl
aam
and
repnz
mov
imul
add
push
testb
adc
in
data16
loop
dec
clc
or
data16
mov
mov
fdivs
cld
lods
sbb
sbb
xor
xchg
jp
pop
lcall
cs
leave
and
add
dec
mov
jle
jbe
dec
pop
cltd
pop
ss
pop
jnp
jb
xor
cmp
inc
pushf
sahf
in
aas
loope
xchg
fcmovbe
outsb
leave
jnp
imul
jle
push
mov
repz
aas
movlps
mov
mov
popa
jne
movsb
rcl
jle
lcall
push
out
xchg
and
mov
scas
cli
bound
test
nop
clc
inc
sbb
fstps
cli
jae
or
dec
cmp
sbb
and
int3
fiaddl
xchg
pushf
xor
and
stos
scas
out
daa
lds
and
jl
lods
fisubs
jge
mov
nop
test
cld
aas
push
repz
fucomi
push
mov
jo
jnp
jecxz
pop
pop
stos
sbb
call
or
lret
mov
mov
mov
jno
push
std
xchg
fmulp
in
xor
mov
xchg
subl
aas
jno
pop
jecxz
pop
push
xchg
xchg
inc
add
mov
jno
adc
jne
out
push
movsb
jecxz
xchg
mov
push
ret
cwtl
sahf
fistpl
ljmp
inc
das
lods
xchg
js
sub
pop
xchg
xchg
dec
aam
movsb
sbb
leave
outsl
mov
mov
jb
mov
add
fiaddl
or
or
frstor
add
dec
push
mov
pop
mov
lcall
into
jp
and
fidivs
enter
mov
sbb
in
outsl
je
pop
fsubrp
out
adc
xchg
mov
popf
les
enter
dec
movsl
outsl
outsl
sub
popa
and
push
adc
mov
push
fisubrl
mov
insb
jns
or
xor
sub
adc
cli
dec
loop
ja
call
push
fsubr
sub
push
fcom
add
repz
cmp
pop
or
jnp
bound
xchg
mov
ret
leave
das
gs
jmp
incb
pop
cmp
cmp
data16
into
add
jmp
std
test
xor
scas
pop
cs
xchg
add
addr16
loop
lods
out
jnp
call
inc
in
jl
push
jmp
cmp
inc
sarb
loop
iret
lock
cmpsl
imul
push
loop
aas
xchg
pop
lret
mov
sbb
jle
enter
xchg
ss
je
dec
sub
in
inc
imul
es
hlt
std
and
sbb
mov
mov
test
into
stos
pop
cmp
fmul
cs
lahf
add
stos
sub
es
stos
jae
aaa
scas
dec
lcall
jne
adc
jg
gs
mov
or
fists
sahf
ja
xchg
rolb
lret
int
sbb
add
lds
cwtl
sbb
xchg
xor
mov
scas
notl
mov
lock
or
mov
push
pop
and
cmp
inc
mov
cmp
test
cmp
loop
aad
and
xor
pop
push
in
pop
outsb
dec
lods
fwait
add
iret
jo
lret
dec
or
stos
inc
xlat
or
jp
sbb
push
sbb
icebp
inc
icebp
shl
leave
xchg
aam
stos
adc
or
hlt
and
shlb
fsubrl
adc
push
cmc
ja
int
repnz
cs
lahf
pop
pop
mov
lret
jmp
inc
mov
push
inc
adcl
test
pop
repnz
xchg
xor
mov
mov
shrl
pop
movsb
test
jmp
rcrb
lret
iret
mov
daa
xchg
sub
pop
adc
repnz
or
clc
and
repnz
xchg
fildll
std
lock
iret
or
aas
cld
nop
inc
gs
inc
pop
ss
xchg
xchg
mov
out
test
jg
jnp
push
dec
xchg
pop
push
aad
fidivs
lods
xchg
push
add
xchg
xchg
jp
sarl
xor
lret
jb
std
aaa
imul
arpl
jo
ret
sub
gs
out
out
xlat
xor
repnz
xchg
inc
jno
ds
xor
xor
addr16
mov
xlat
inc
jae
mov
out
sbb
mov
and
or
out
or
mov
jb
sbb
ds
inc
mov
jne
xchg
adc
sbb
push
sbbl
xchg
cmp
incb
cli
popa
int3
rorl
or
cmp
dec
cmp
jecxz
inc
push
roll
mov
lods
adc
addl
cld
fsubrs
push
lea
and
aam
scas
mov
shrl
cmp
leave
sarl
dec
xchg
rol
fwait
inc
jg
pop
lahf
or
xor
arpl
repz
pop
cmp
push
xchg
cmp
mov
hlt
push
pusha
xchg
xchg
xchg
jo
mov
and
ret
cmp
add
xor
into
push
jecxz
or
enter
jge
movsl
fisttpll
mov
jecxz
xor
cwtl
push
nop
inc
xchg
inc
out
mov
inc
out
stos
jae
cmp
es
ljmp
test
fcoms
notl
inc
jmp
leave
daa
pop
int
cmpsl
pop
jo
nop
fmull
jle
cmp
cmp
sub
cli
sbb
jge
mov
dec
dec
or
lods
jg
xor
sbb
ja
jo
xor
bound
bnd
xor
arpl
leave
cmp
push
pushf
push
mov
push
scas
xor
test
push
lds
or
clc
dec
sbb
sbb
sbb
sbb
jl
jb
andl
lods
adc
lds
or
es
cwtl
mov
jo
fs
jg
int
cmp
out
insb
sub
push
sbb
jp
inc
lea
loop
pushf
xchg
hlt
ja
or
adc
cli
xchg
cmp
sti
adc
pop
lods
jmp
fidivl
inc
cld
mov
xor
and
scas
mov
sub
jae
icebp
hlt
sbb
imul
jmp
test
xor
mov
jmp
sahf
addr16
mov
lods
call
mov
leave
pop
imul
inc
repnz
push
stc
or
stc
loop
sbbb
and
mov
cmp
or
out
cmp
roll
es
push
xlat
testb
fidivrs
xor
mov
or
movsl
dec
fcmovne
sub
jmp
mov
inc
daa
xchg
lea
xor
sub
xor
mov
scas
ret
and
rcrl
cltd
and
pop
rolb
out
popa
sbb
jmp
loope
jp
inc
loop
iret
int
cmp
outsb
inc
push
ljmp
mov
pushf
gs
stos
lret
jns
xchg
mov
into
insl
mov
in
pop
jge
push
jmp
scas
or
arpl
sub
push
lahf
sbb
or
jecxz
loopne
dec
lret
add
and
cmp
cltd
adc
add
xchg
addb
pop
adcb
popf
in
lret
lahf
push
pop
sub
xchg
or
test
minps
xchg
xor
cmp
lcall
out
je
adc
outsb
lods
xchg
cld
sbb
rclb
jno
data16
jl
imul
fmuls
hlt
sbb
adc
mov
hlt
ja
test
inc
loope
stos
out
lock
add
jg
push
call
sub
in
mov
adc
pop
gs
scas
xchg
push
aas
sub
mov
dec
cmp
and
inc
inc
lods
sbb
or
lods
aas
adc
sti
xchg
jmp
lret
loop
popf
add
cmc
jp
loop,pn
push
out
ret
mov
and
jbe
ret
ss
mov
dec
addr16
es
lods
add
mov
loope
sbb
and
pop
aas
cmp
lahf
loop
add
mov
fs
hlt
mov
add
movntq
dec
fbld
and
mov
loop
adcl
xchg
out
xchg
pop
add
mov
xchg
mov
push
dec
xor
sub
data16
dec
sbb
mov
push
mov
leave
lret
sbb
sbb
mov
test
scas
lret
xchg
xchg
jae
adc
ja
pusha
xor
push
mov
jno
add
mov
push
jg
mov
and
test
std
cmp
pop
mov
sbb
pop
aam
or
and
xor
iret
out
enter
bound
cmpsl
loope
jae
cmp
add
loop
lea
daa
cmpsb
jne
popf
xchg
dec
jo
xor
cld
add
sbb
mov
mov
inc
and
jg
mov
fildl
push
movsl
mov
mov
dec
jo
sub
push
mov
addb
lods
cmp
dec
mov
mov
push
fistpl
cmpsl
push
nop
pop
cmp
dec
pop
mov
les
mov
mov
arpl
sbb
xor
cmp
push
and
add
clc
mov
fisubs
cmp
les
stos
cwtl
adcb
cs
push
lahf
mov
idivb
mov
out
imull
jne
shlb
fcomp
cmpsb
mov
push
adc
adc
xchg
jno
sahf
dec
push
lods
push
out
icebp
je
shlb
sub
mov
push
fidivrs
push
mov
add
in
out
in
std
pop
fdivr
xorb
gs
add
sbb
jecxz
inc
sbb
add
xchg
in
jp
mov
push
mov
adc
add
jno
lods
xor
cli
xor
ret
pushf
push
mov
jge
xlat
int
mov
cmc
cmc
hlt
in
sti
jbe
mov
push
aad
in
scas
ljmp
lds
sbb
push
nop
pop
test
std
cmpsb
pop
jg
jg
lods
xor
jns
jge
add
fildll
scas
sahf
loopne
cmpsl
ret
push
mov
loop
mov
xchg
pop
lea
mov
pop
sti
jmp
mul
cmpsb
pushf
leave
push
and
or
jg
jle,pt
loopne
shrb
mov
jb
adc
xor
sub
aas
pop
adc
clc
fiadds
ret
pop
mov
clc
add
hlt
push
mov
test
lret
mov
fidivrl
scas
inc
xchg
je
into
pop
sti
mov
xor
call
mov
xchg
xor
loop
mov
je
lock
xchg
mov
arpl
mov
roll
push
pop
imul
adc
ljmp
mov
int3
sarl
in
iret
test
jge
cmpsl
roll
push
and
xor
mov
sub
mov
scas
push
lcall
arpl
mov
mov
and
mov
mov
add
and
nop
ror
jne
or
nop
push
adc
jle
pop
pop
mov
int3
xlat
movb
call
cs
inc
fs
dec
mov
mov
inc
icebp
mov
aas
xchg
stos
out
sbb
popf
aas
cmp
test
push
cmp
js
imul
subl
lcall
out
add
xchg
dec
mov
imul
cmpsb
cld
scas
out
addr16
daa
jl
sbb
loope
mov
leave
lock
in
repnz
std
into
divl
push
fldt
add
push
into
sti
mov
fucom
add
orl
pop
mov
dec
mov
inc
shll
lret
or
daa
push
pop
std
leave
sbb
lcall
cmpsl
inc
push
or
sarl
movsb
adc
mov
aaa
xor
pop
mov
adcb
sahf
fidivrs
les
or
fsubrl
xchg
mov
test
cmc
scas
inc
cmpsb
jp
push
and
insb
xor
stc
ljmp
out
inc
sbb
inc
inc
adc
fcoms
or
xchg
cmpsb
mov
rclb
jl
popl
and
outsb
sbb
add
sub
aam
out
cmp
mov
ficomps
mov
cmp
jno
xlat
adc
sbb
push
sahf
jg
insl
adc
shll
mov
emms
ret
mov
pop
sbb
sub
mov
and
shl
ret
ja
adc
popa
pop
loop
pop
jl
xchg
mov
sbb
inc
sub
mov
mov
addr16
pop
adc
addr16
sbb
inc
push
popf
pushf
lret
lock
inc
ret
mov
ljmp
pop
or
sub
stc
addb
cmp
mov
pusha
mov
add
dec
pop
jo
jg
rorb
jnp
lock
arpl
sahf
dec
bound
insl
sbb
mov
lds
jl
aas
xor
hlt
popa
leave
push
mov
loope
mov
popa
sub
xchg
loop
fcomp
addl
jmp
and
inc
cmpsl
sbb
je
mov
incl
mov
adc
mov
cmp
stos
popf
enter
shll
je
mov
mov
iret
dec
imul
mov
jl
stos
inc
mov
popa
push
cmp
mov
pushl
out
fsts
mov
js
xchg
lods
andl
cmp
adc
cltd
sbb
clc
mov
pop
jg
pop
sbb
popf
shlb
mov
or
xor
das
sbb
sbb
sbb
push
cmc
add
pop
xchg
push
out
fsubr
outsb
or
rcrb
jnp
push
decl
int
inc
cli
pushf
shrb
std
push
iret
dec
pop
jno
cmpsb
rcll
mov
lock
pop
outsl
sbb
test
mov
jle
mov
cmp
or
into
push
jnp
insb
or
add
and
call
cmp
mov
in
ficomps
add
into
ror
leave
add
mov
mov
jle
jno
dec
xor
pop
dec
shl
in
scas
cld
fucom
cld
dec
mov
sub
pop
cmpb
lahf
stc
dec
test
jbe
mov
arpl
push
pop
mov
nop
cmpl
sahf
jb
mov
test
mov
mov
jne
das
dec
test
stos
test
in
and
xchg
cmp
outsb
mov
push
and
mov
cmc
dec
add
sub
iret
xchg
sub
js
dec
push
dec
sub
sbb
mov
movsl
xchg
or
not
push
lret
add
jbe
mov
sbb
mov
sahf
xchg
test
or
addb
lods
or
pop
test
clc
rorb
dec
and
sarb
sbb
lea
push
icebp
cmp
mov
popa
scas
andl
lock
pusha
shrb
out
out
in
or
inc
adc
ss
test
pop
and
jns
sbb
nop
cmp
sbb
ja
daa
jnp
xor
mov
mov
dec
jmp
mov
outsb
loop
sbb
cmp
inc
and
mov
dec
mov
stos
inc
inc
cmp
mov
and
shlb
lret
push
xor
or
mov
xchg
push
xchg
add
and
jp
xor
push
les
sbb
and
faddl
add
dec
fists
cltd
ficompl
imul
push
lds
cmpb
aas
pop
pop
cld
popa
sbb
sub
cmp
mov
dec
inc
mov
inc
insl
sub
stos
and
mov
push
inc
mov
mov
stc
scas
push
inc
dec
cmp
imul
rcr
filds
out
jo
pusha
icebp
daa
addr16
fidivrl
into
jo
mov
sbb
cwtl
in
enter
pop
mov
repnz
enter
xchg
and
xchg
dec
scas
jns
decl
mov
inc
dec
ja
mov
ja
or
pop
jmp
and
dec
mov
pop
xlat
fcomi
sbb
shlb
and
dec
pop
ret
pop
out
cmp
mov
cmp
cwtl
sti
or
and
inc
out
stos
or
jae
or
push
xchg
dec
sbb
xchg
mov
popf
aad
pop
int
mov
std
jle
lods
inc
shll
adc
iret
push
pop
leave
rolb
iret
push
mov
sahf
cmp
jmp
mov
es
js
mov
mov
mov
es
sbb
cs
sbb
xchg
repnz
pop
jmp
cltd
inc
lods
xor
stc
movsl
push
stos
dec
jecxz
lea
and
mov
xchg
push
and
push
xchg
stos
and
sub
cmp
in
inc
jmp
fstpl
xchg
addr16
xchg
cmpsl
fwait
aas
cmp
or
lahf
cmp
sub
aad
mov
icebp
sub
mov
lret
jbe
rolb
lahf
jmp
jl
leave
adc
ja
push
andl
push
xor
aad
xor
divb
or
inc
jno
xchg
ret
jmp
or
fstl
cmp
or
ret
mov
xchg
mov
add
add
cmp
lods
arpl
icebp
dec
xchg
int3
ja
mov
mov
fcompl
or
sub
adc
add
fbstp
xchg
mov
out
jge
dec
lcall
and
pop
mov
rol
mov
xchg
xchg
push
mov
inc
stc
sub
or
inc
faddp
push
imul
hlt
cli
pop
jae
icebp
fwait
roll
outsl
loope
xor
clc
adc
dec
cmpsl
shlb
jns
mov
sbb
test
xor
xchg
push
fstl
insl
mov
enter
in
add
fs
sub
stos
in
inc
sub
jne
in
fstpt
outsb
mov
mov
div
adc
xchg
shll
popf
mov
ret
out
scas
push
pop
sub
sub
imul
hlt
nop
mov
and
call
dec
adc
arpl
cmpsl
pop
out
dec
push
ret
pop
inc
jge
rclb
sub
adc
arpl
push
rorl
mov
adc
xchg
add
mov
call
lea
push
jle
jns
ret
jle
inc
xor
movsb
mov
xchg
or
add
xchg
imul
scas
mov
dec
scas
xor
xor
jg
jl
sub
loope
jle
sub
fcomps
jb
pop
int3
xor
mov
mov
pop
add
inc
popa
xchg
gs
loope
imul
sbb
jg
cwtl
mov
mov
test
mov
xchg
dec
aam
jle
movsl
mov
push
sbb
lds
lods
shrb
sahf
xor
je
psubusw
xchg
insb
add
stc
shl
and
inc
fldl
aam
push
outsb
fmull
adcl
lret
cli
std
jmp
pop
rclb
sbb
lods
cmpsb
jbe
shlb
rorl
mov
cs
mov
xor
inc
lahf
xor
fucomip
jg
lea
fcmovnbe
dec
daa
rorl
dec
ss
or
or
dec
add
push
js
pop
stos
insb
dec
pop
test
cld
imul
and
mov
pop
push
add
adcl
es
xor
mov
xchg
out
adc
repnz
sarl
adc
push
daa
aas
lret
lds
adc
aas
push
inc
inc
jae
mov
lock
mov
aaa
addr16
aaa
jb
orb
push
push
je
pop
ret
clc
push
push
pop
fimuls
loop
cs
es
mov
outsb
add
xchg
fldenv
push
pop
loope
insb
jno
scas
xlat
jp
xchg
jmp
xchg
jl
cs
jg
cmp
push
sub
add
add
insl
sti
int
addr16
sbb
in
lret
pop
cmpsb
iret
hlt
jnp
clc
lods
das
and
repnz
push
push
je
arpl
sub
stc
mov
pop
push
fildl
jb
popa
inc
adc
repnz
enter
sahf
imul
data16
cmpsl
js
fistps
hlt
add
mov
rclb
mov
jl
mov
cwtl
xor
pop
jns
mov
mov
fidivrs
movsl
jmp
xchg
sub
repnz
ret
jge
push
push
jns
pop
lock
xchg
lock
pusha
pop
clc
incl
inc
testl
pop
pop
hlt
not
incb
mov
into
xchg
addr16
and
test
xor
and
data16
sub
xchg
inc
jp
je
pop
pop
aas
psadbw
icebp
js
outsl
jmp
stos
shrl
jecxz
ljmp
mov
sub
and
and
adc
inc
mov
push
and
lahf
dec
xchg
xchg
xor
int3
cli
pop
sbb
mov
and
pop
mov
mov
andl
push
jecxz
enter
sar
mov
push
mov
mov
scas
mov
lea
rcrl
and
sub
sub
fldenv
subl
adc
push
push
pop
je
adcb
pop
sbb
or
lret
lods
jle
sbb
cmpsb
add
jge
leave
out
or
lcall
call
sbb
add
daa
sbb
push
mov
test
dec
mov
pushf
mov
and
fs
cmp
pop
in
cld
jae
inc
sub
push
fisubrl
jge
push
sti
pop
lahf
imul
cmpsb
inc
fcoml
push
mov
push
std
call
mov
mov
push
addl
outsl
mov
sbb
scas
out
dec
jnp
pop
fistl
add
mov
in
in
inc
sahf
jb
test
mov
nop
mov
mov
xor
fwait
popa
xor
sahf
sub
test
cmp
mov
lret
insl
xor
adc
sbb
jne
orb
test
cld
dec
xor
faddp
dec
stos
das
sbb
in
pushf
mov
std
or
fiadds
cmp
sbb
mov
xchg
mov
bound
popw
jmp
adc
jo
out
in
imul
cltd
push
pop
cmp
mov
ss
pop
lret
xor
iret
dec
lahf
sub
adc
arpl
pop
or
scas
mov
xor
xor
mov
stc
sti
push
sbb
sub
pop
jmp
jae
xchg
adc
mov
jle
cli
adc
xor
cmp
and
xor
pop
jp
pop
ficomps
lret
sahf
pop
mov
and
or
out
jp
push
mov
add
neg
or
nop
int3
or
sub
insl
push
add
mov
lods
test
and
adc
jbe
cs
fnsave
inc
jb
imul
jp
inc
scas
rol
insb
mov
popf
stc
gs
inc
xlat
fimuls
bndldx
mov
setnp
push
mov
loope
jbe
cs
push
cltd
sub
inc
jns
cmpl
movsl
mov
decl
jbe
sbb
ljmp
arpl
pop
mov
shll
cltd
mov
add
sbb
and
cwtd
jl
lret
fwait
arpl
pop
xlat
adc
pop
lret
and
insb
pop
jmp
mov
pop
mov
cmp
scas
test
dec
dec
out
fstpt
outsl
and
add
loopne
adc
pop
outsl
popf
cmp
fmull
sub
les
filds
loop
or
or
nop
add
inc
shlb
pusha
fldcw
ds
pop
xchg
inc
movsb
mov
or
push
adc
add
sbb
lahf
xor
add
adc
sbb
xlat
cli
or
xor
jnp
int
rol
xor
das
cmp
or
jl
popa
or
fldl
inc
lock
push
stc
cmp
imul
cmpsb
sub
sub
xor
sbb
jge
mov
cmpl
mov
mov
jb
add
mov
mov
cltd
mov
je
mov
loopw
stos
int
fwait
ret
adc
sub
add
fnstcw
loop
mov
pop
movb
loop
xchg
dec
mov
fnstcw
cmp
mov
push
inc
and
lea
in
imul
adc
mov
mov
es
and
and
xor
cwtl
sub
cs
add
sub
imul
cli
fidivrl
cs
pusha
les
mov
xchg
inc
bound
out
pop
mov
into
aad
sbb
movsl
lds
sbb
xor
lea
roll
das
ds
ljmp
std
lods
pushf
jbe
sbb
lret
mov
cs
cltd
stc
dec
and
mov
sbb
sub
shl
sub
fdivl
ljmp
push
push
fldl
mov
shll
and
sub
push
sbb
ja
arpl
mov
shrl
ljmp
mov
cwtl
sub
int
mov
inc
ja
lcall
out
mov
mov
mov
adc
add
and
pop
gs
xor
sub
cmp
xchg
cli
and
inc
fcompl
les
sahf
add
dec
sbb
add
cwtl
ss
popf
sub
js
test
mov
sub
icebp
mov
and
loopne
xor
pop
xor
lods
sbb
xor
and
pushf
mov
add
push
aas
ja
xchg
test
jl
pop
ret
imul
dec
cmp
mov
test
inc
sbb
mov
scas
cmpsl
testl
mov
icebp
dec
in
pop
icebp
aaa
fdivs
inc
pop
or
sub
cmp
dec
mov
dec
jns
icebp
fsubl
adc
lcall
subl
add
jne
sbb
stos
imul
lret
stc
fnstsw
mov
push
lret
lds
xchg
push
dec
and
or
inc
insl
rcrl
add
mov
adc
jbe
subl
repnz
dec
rclb
int3
pop
pop
or
jb
push
mov
js
jne
cmpsb
call
push
lds
cmp
dec
cltd
push
sub
add
pop
out
repz
das
push
mov
aas
incb
out
sti
mov
insl
mov
sub
lcall
nop
or
aam
sbb
mov
rol
mov
mov
dec
push
stos
jl
dec
mov
push
or
jb
push
repnz
pop
pusha
and
xchg
push
lret
aad
adc
pop
xchg
dec
ss
out
icebp
mov
pushf
fcomps
pusha
lods
sub
fcoml
inc
sbb
shrl
or
outsl
dec
movsb
and
clc
aaa
add
pop
stos
sbb
and
ja
xchg
xchg
dec
fldl
test
insl
inc
pop
xor
lock
sub
gs
mov
loope
pop
xchg
lock
jns
lds
jns
ljmp
cwtl
mov
xor
and
lods
jo
and
sbb
sbb
xchg
ljmp
and
lahf
cmp
add
push
arpl
and
xchg
xchg
mov
test
mov
or
lea
dec
dec
and
loope
int
mov
jl
rcr
inc
sbb
inc
iret
mov
mov
and
adc
jne
inc
push
xor
das
faddl
jno
mov
and
cwtl
sbb
inc
pusha
jnp
pop
iret
out
ds
push
mov
std
cmp
and
hlt
jp
out
dec
inc
lea
stc
shrl
mov
pop
out
xchg
and
sbb
mov
imul
push
int3
pop
outsl
lret
jb
out
sub
aas
insl
sbb
rolb
dec
mov
out
xlat
loopne
push
inc
add
sarb
mov
inc
ds
in
lret
adc
pusha
sub
scas
push
hlt
inc
xchg
push
pop
out
jmp
mov
fwait
jno
lret
or
add
jns
testl
mov
enter
xlat
dec
aas
mov
inc
cmp
daa
sbb
aad
lcall
in
push
movsl
mov
pop
cli
and
xchg
outsb
push
add
sbb
and
enter
leave
arpl
add
fcmovnbe
mov
cmpsl
xchg
ljmp
notl
sub
adc
jp
push
add
inc
lods
gs
out
jnp
repnz
push
sub
cmpsb
dec
sub
push
icebp
and
or
neg
xchg
inc
loop
sbb
notb
std
sub
push
insl
mov
or
out
arpl
std
aam
cld
sub
aas
movsb
mov
mov
je
imul
dec
push
pop
or
icebp
aas
mov
inc
sub
add
mov
inc
rorb
fists
loop
sub
cld
loop
cmp
in
jp
sarl
and
push
lahf
rolb
jbe
fmul
sub
clc
out
xchg
iret
mov
push
jle
rcl
lods
push
jns
sti
pop
adc
mov
leave
jbe
add
sarl
ret
pop
sbb
js
pushf
cmpsb
inc
sub
mov
dec
and
ds
imulb
stos
and
mov
enter
xchg
sbb
sub
cmp
int3
cmp
mov
mov
add
ljmp
cwtl
jnp
pushf
push
jae
or
xchg
ja
ret
mov
cmpsl
lods
push
daa
fwait
jecxz
mov
in
test
pushf
pop
mov
pop
call
push
add
shll
iret
out
lret
inc
sbb
push
dec
ljmp
jge
mov
mov
cltd
dec
fstpl
mov
sbb
sbb
test
cld
das
xchg
scas
xchg
mov
cmp
sub
xor
js
adcl
push
mov
mov
push
mov
js
and
mov
mov
sub
push
aaa
addr16
pop
mov
mov
sbbl
es
aas
sti
out
or
data16
ficompl
push
lea
repz
loopne
and
mov
sahf
stos
xor
test
xchg
cld
mov
mov
push
ret
int3
dec
mov
shlb
push
mov
inc
imulb
mov
sbb
in
push
outsb
push
mov
push
popa
and
mov
leave
scas
fcmovnb
test
cli
xor
adc
loop
bound
jp
ss
lcall
inc
pop
sub
js
cmp
sbbb
or
cltd
in
dec
daa
mov
inc
fs
inc
aas
lods
jns
gs
cmp
leave
leave
jl
adcl
outsb
fnstcw
and
push
pop
jns
sub
imul
fwait
cmp
lret
jae
pop
push
test
adc
mov
cmp
jl
push
arpl
jae
scas
int
jno
cli
mov
xor
imul
in
cmpsb
hlt
push
mov
call
test
test
popa
stos
jnp
xchg
add
es
in
sahf
sbb
ficompl
data16
xchg
icebp
xchg
sti
jae
and
je
push
push
sbb
in
dec
pushl
sbb
xor
shll
je
xorb
lds
sbb
lea
mov
inc
sub
clc
jg
test
roll
cmpsl
adc
mov
jle
cmp
lcall
lods
push
out
in
stos
pop
repnz
sbb
popa
sub
dec
push
ror
popf
dec
out
xchg
mov
xchg
sub
adc
in
and
push
cmc
out
xchg
inc
xchg
mov
mov
cli
sub
in
push
pop
sbb
mov
sub
repz
pop
sbb
cwtl
sub
pop
lret
enter
xchg
or
outsb
rclb
insb
ds
mov
pop
cmp
pushf
mov
add
in
insl
unpcklps
push
roll
arpl
pop
adc
jp
mov
pop
fwait
xlat
mov
cmp
mov
sbb
cmp
xchg
or
mov
stos
jg
ja
xor
add
jno
mov
push
dec
jno
fldenv
xor
mov
iret
int3
pushw
inc
jnp
jbe
insb
mov
sahf
out
shlb
imul
aas
add
or
pop
mov
cwtl
jecxz
mov
xor
mov
pop
mov
push
push
decl
lods
int
pusha
into
or
lcall
pusha
push
mov
lea
jbe
movsl
xor
add
sub
inc
dec
push
ret
jle
inc
loop
dec
dec
mov
clc
loopne
mov
mov
cmp
ret
add
es
pop
in
dec
test
scas
pushl
aad
fcompl
mov
es
test
adc
xchg
mov
imul
fyl2x
pop
mov
mov
rolb
fimuls
mov
inc
mov
add
mov
mov
aaa
out
popa
mov
test
push
loopne
es
bound
push
mov
nop
add
and
and
push
inc
test
pushf
es
call
shrb
out
push
insb
pop
ret
lock
icebp
cli
push
pop
inc
adc
sti
sarl
lahf
dec
pop
icebp
cmp
lea
mov
pop
mov
cmp
subb
js
mov
hlt
fdivl
negb
cmp
pop
cmp
or
add
push
dec
adc
es
fwait
lret
jg
push
dec
fcomps
pop
mov
aas
sub
pop
test
rorl
sahf
fxch
mov
jno
add
sbb
push
xor
js
int
sahf
sub
lods
xor
xor
ja
sub
pop
adc
popa
push
lahf
outsb
pop
mov
aas
loop
sbb
jmp
xchg
cmp
inc
jo
push
cmpsl
sbb
movsl
mov
sahf
test
xchg
mov
pusha
inc
cs
cmp
mov
cs
push
mov
leave
sub
jnp
jae
ret
sub
scas
subl
and
loope
push
push
aaa
jmp
or
mov
xchg
mov
scas
pushf
aas
call
mov
dec
sbb
arpl
insb
shrb
pop
push
ret
popa
movsl
inc
stc
cltd
adc
mov
dec
cmpsb
incb
adc
or
sub
sbb
fdivrs
int
xor
jb
aam
jns
jle
pusha
push
fwait
add
mov
push
clc
mov
mov
cmp
or
rcr
xchg
xchg
xchg
fcomps
ss
addb
es
cmpsl
adc
aam
jl
mov
cmp
cmp
stc
shll
data16
sbb
aas
dec
inc
icebp
insb
mov
or
pushf
inc
pop
call
sbb
inc
dec
xor
sub
pop
daa
jnp
inc
sahf
rcrb
push
out
xchg
or
jbe
add
cmpsb
inc
jo
hlt
jb
mov
mov
ja
mov
adc
mov
iret
fsubl
iret
fwait
lret
inc
push
cmp
outsl
lret
inc
add
cmpsb
popf
add
cwtl
outsl
enter
pop
push
addl
adc
push
and
ja
arpl
pop
and
or
push
lcall
ret
pop
in
enter
and
pop
insl
icebp
outsl
data16
das
movsb
sub
jle
cmpsl
sub
or
std
out
jecxz
mov
xchg
mov
mov
lret
inc
xor
mov
lcall
mov
mov
adc
or
adc
in
pop
mov
notl
lock
mov
jae
sub
std
or
mov
mov
sbb
jo
ljmp
pop
jae
cmp
dec
ret
push
rol
decb
sub
in
movsl
jb
or
shll
iret
incb
sbb
pop
pop
jae
adc
mov
popa
jecxz
adc
mov
cmpsl
sub
hlt
inc
push
cmpsb
pop
in
arpl
das
fidivrl
xor
inc
mov
es
insl
popa
xlat
sub
aam
dec
xchg
nop
mov
sti
jecxz
out
mov
out
inc
and
icebp
scas
and
ret
push
pop
sub
aad
test
jno
cld
jne
test
push
movzbl
xchg
sbb
inc
out
aas
jl
imul
adc
in
inc
push
xor
call
cmpsb
push
xchg
fimull
mov
shlb
add
mov
xchg
test
sub
cld
push
mov
pop
xor
and
push
mov
or
pop
mov
inc
push
repz
sbb
fldcw
adc
xchg
clc
les
and
add
addb
dec
in
lods
inc
push
sub
std
add
cs
xchg
and
sbb
jbe
mov
in
loopne
je
xor
dec
adc
mov
dec
shrb
pop
lcall
xor
mov
jo
mov
adc
dec
js
sbb
pop
hlt
daa
jno
xorl
aaa
ds
and
pop
push
andb
dec
andl
mov
popf
cmp
ljmp
cld
outsb
inc
sbb
cld
jge
xchg
mov
xchg
shll
inc
popf
jno
pop
mov
imul
jmp
pop
dec
and
cmp
fisubs
push
sbb
iret
jns
repz
mov
or
adcb
push
pop
fsubs
mov
in
pop
jne
test
xor
fwait
insb
and
sub
aas
inc
push
or
fs
mov
mov
or
xor
pop
push
mov
fs
sbb
pop
xchg
xchg
adc
adc
jmp
data16
insb
aas
mov
test
and
xorl
pop
push
xchg
mov
adc
add
jbe
dec
push
or
or
shll
sub
filds
push
cmp
sahf
or
pop
ja
cs
xor
shll
ja
pop
int
jbe
push
popa
mov
scas
mov
js
jae
shll
es
pop
pop
push
push
jg
sbb
mov
sub
xor
pop
xor
sub
into
xchg
jl
fistpl
ficoml
push
push
insl
jno
sub
stos
aad
repz
scas
add
inc
jbe
mov
cmp
mov
pop
pop
ds
mov
outsl
dec
hlt
or
into
pop
rorl
pop
cmp
xchg
cmp
sub
fldl
add
xchg
xchg
fwait
loopne
push
cmp
xor
add
in
pop
push
add
jle
shrb
or
mov
call
pop
inc
notl
shl
jne
sub
adc
sbb
mov
les
dec
cmp
les
scas
xchg
lds
cli
dec
andb
cwtl
fucomi
cmp
and
xchg
inc
sbb
sahf
js
adc
loop
xchg
pop
sub
cli
in
in
mov
stos
jne
std
mov
mov
movsl
mulb
cmp
adc
inc
lret
in
decb
into
dec
adc
inc
mov
mov
std
lcall
ficompl
daa
mov
push
sub
push
pop
repnz
out
xchg
pop
mov
lcall
fistpll
int
mov
les
ds
add
mov
iret
inc
sub
adc
mov
dec
or
push
cmp
jns
lret
mov
je
bound
ja
subl
mov
stc
jge
lret
cwtl
xchg
fwait
test
sbb
xchg
loopne
lods
mov
mov
and
sub
mov
insl
pop
mov
sub
fs
and
lds
jmp
out
xor
std
inc
mov
daa
mov
dec
add
push
sbb
xlat
mov
add
and
sbb
lret
xlat
mov
xchg
es
xchg
popf
cltd
push
nop
dec
das
lods
xchg
inc
scas
jmp
pushf
jo
mov
sarb
popa
cmp
fcoml
push
and
in
push
xchg
push
pusha
or
mov
daa
cmpsl
mov
into
lret
jg
jne
lods
js
and
sti
push
jno
mov
xchg
jge
mov
and
or
ret
xchg
es
xlat
jmp
mov
mov
pushf
in
sarl
pop
xchg
mov
movsl
jne
sbb
xlat
hlt
pop
movsb
int3
mov
hlt
dec
pusha
sbb
xchg
pop
or
jmp
xor
sbb
stc
add
add
push
inc
fsubp
out
rorl
loop
xchg
repz
sub
push
add
sbbl
inc
mov
notb
cmpsb
cwtl
mov
lods
pop
jbe
xchg
sahf
popa
gs
out
daa
push
movb
out
ss
jg
adc
xchg
jb
push
leave
xchg
mov
and
xlat
imul
sub
dec
fisubs
or
aad
lret
push
test
or
dec
sub
in
gs
mul
test
push
push
js
xor
pop
cli
xor
imul
xchg
mov
loope
lds
xor
out
push
adc
add
add
dec
daa
in
or
push
ret
lcall
test
ror
adcl
add
dec
xchg
mov
stos
test
movsb
into
sarl
popa
aas
sbb
jne
loope
aad
add
mov
in
add
add
adc
cli
pop
cltd
or
rorl
xor
xor
sbb
into
sarl
nop
je
cmp
ret
mov
push
fucomip
pop
andb
lret
xor
leave
jmp
and
repnz
dec
fadd
sbb
icebp
out
jg
inc
jno
sti
out
aam
shlb
andl
mov
fistpll
test
pop
aaa
push
push
jnp
dec
add
ljmp
cmpsl
aad
enter
or
imul
xlat
ret
mov
repnz
scas
addl
cmc
cltd
pusha
js
aad
adc
mov
dec
test
add
mov
jb
ja
mov
movsb
jnp
mov
adc
popa
add
hlt
sbb
dec
sbb
aaa
push
pop
sub
fs
loope
mov
movsl
gs
pop
jne
lods
sub
and
repz
into
jle
and
cmp
lcall
subb
pop
mov
jne
pop
mov
cmp
arpl
cmp
data16
dec
lock
sub
int3
pop
adc
lods
dec
sbb
or
gs
add
pushw
sti
dec
pop
test
lods
push
xchg
in
mov
mov
cmp
cmc
sub
inc
stos
test
pushf
les
nop
dec
pop
cmp
in
sbb
mov
jle
or
or
andb
add
inc
add
add
incb
popf
mov
add
mov
insb
sbb
or
ret
pop
push
jmp
pop
sbb
pop
push
jae
dec
mov
int
loope
and
push
pop
dec
jge,pt
icebp
out
adc
in
xchg
inc
leave
cmp
fildll
loope
movsb
mov
leave
sbb
fs
xchg
inc
push
cld
mov
xchg
lahf
rcl
xor
cmp
cld
pop
lods
dec
sbb
xor
stos
cmp
or
and
pop
add
test
imull
adc
sub
cmp
dec
pop
dec
add
xchg
imul
fwait
xor
inc
shlb
sarl
rcrb
inc
xor
mov
sbbb
inc
pushf
and
pusha
dec
add
xor
xor
jg
into
aas
test
in
xlat
lcall
lret
hlt
stc
cmc
fs
fstp
dec
les
sqrtps
jnp
loop
bnd
push
mov
pop
push
lret
aad
mov
enter
sbb
daa
repz
test
lods
adc
rcrl
fisubrl
mov
mov
mov
push
loope
repz
popf
inc
mov
fwait
or
or
or
mov
idivl
and
add
andl
xchg
aad
lahf
int3
test
ret
and
mov
pop
pusha
out
sarb
in
jecxz
pop
push
insl
jns
cmc
aas
mov
jo
mov
in
in
mov
and
mov
adc
sbb
fdivrp
mov
jae
cli
jl
jb
sbb
scas
movsb
mov
dec
mov
pop
mov
jno
mov
es
popa
iret
sub
cmp
sti
jmp
push
xchg
scas
int3
popf
jne
cmp
aam
push
mov
mov
stc
mov
in
xchg
push
out
jne
mov
mov
mov
test
xchg
mov
cmp
adc
nop
in
test
cwtl
addr16
popf
aas
add
xchg
adc
jl
movsl
push
sub
jle
mov
xchg
sbb
loop
pop
xchg
sar
movsb
xchg
push
hlt
cmp
cmp
lock
mov
mov
leave
xor
stc
rcrl
or
or
imul
jge
dec
in
inc
lret
mov
sub
jb
test
scas
or
and
adc
adc
fisttpll
and
lea
jns
test
jnp
in
pop
mov
mov
xlat
adc
or
movsb
fidivrs
ret
jl
sub
sub
push
add
and
inc
xchg
ss
or
loop
mov
mov
mov
adc
out
arpl
je
sub
stc
jle
ds
rclb
inc
sub
cmp
pop
lock
mul
adc
dec
lahf
rcrl
mov
sub
and
rorb
ljmp
fdivr
lea
add
adc
cmp
jmp
push
or
les
out
and
sbb
and
or
in
fbstp
xor
or
adc
adc
std
mov
lds
jg
xchg
jle
pop
in
mov
mov
pushf
inc
inc
mov
or
jno
inc
movsl
scas
add
inc
hlt
adc
popa
cmc
data16
int3
idivb
mov
pop
aad
sbbb
push
stos
dec
sbb
jbe
adc
lea
cmpsb
mov
aas
stos
into
outsl
out
xorb
xchg
leave
cld
cltd
dec
pop
push
cmpsl
test
mov
mov
in
mov
mov
fbstp
lea
pop
jl
and
cltd
inc
sbb
pop
mov
xchg
adc
add
jne
xchg
and
ficoms
fisttps
test
xchg
repnz
push
inc
inc
ffreep
push
mov
cmc
pusha
popa
stos
cli
pop
and
fdivl
pop
nop
jne
add
pop
int
and
inc
xor
cld
clc
push
push
mov
stos
mull
mov
jae
dec
es
cs
sub
test
dec
jns
xchg
enter
inc
xlat
mov
std
stos
jo
insb
mov
sahf
push
ljmp
jnp
push
jbe
jno
mov
arpl
fdivl
icebp
sbb
repz
add
mov
mov
scas
pop
dec
aaa
pop
inc
and
arpl
xorl
inc
sbb
push
inc
ja
scas
sbb
and
fsubs
jbe
push
adc
dec
fisubs
popa
jp
out
mov
sbb
cltd
sub
into
lods
nop
icebp
loope
push
pop
popf
out
shlb
jns
shll
jno
cmp
cltd
dec
xor
mov
hlt
mov
add
add
addb
jnp
cmp
ret
lcall
inc
jo
or
cld
jle
outsl
jp
or
lds
inc
sti
or
mov
test
or
mov
dec
add
in
sub
sbb
sbb
cltd
inc
xor
sub
push
in
sbbb
inc
push
or
cmp
inc
cmp
sub
incl
mov
inc
aas
gs
fldlg2
push
jl
roll
cltd
xchg
fs
dec
nop
inc
push
lods
or
mov
or
shrb
jb
sub
rcll
jno
cmp
je
int
in
mov
pop
fs
pusha
pop
push
rcrl
shr
mov
mov
jb
lcall
sbb
xor
sub
dec
inc
sbb
sbb
inc
arpl
jo
add
jo
sbb
data16
inc
out
dec
stc
jmp
add
into
xor
in
push
sbb
pushf
adc
inc
stc
jb
jnp
xchg
inc
in
push
imul
jne
mov
arpl
outsb
fs
and
adc
jb
mov
into
and
dec
dec
xor
adc
push
inc
repnz
pop
mov
call
mov
sub
shlb
add
mov
inc
dec
in
jae
jp
cltd
cwtl
loope
push
cmp
mov
call
mov
pop
mov
jns
dec
insb
aam
sub
fs
or
sti
mov
aas
dec
scas
mov
sub
aas
push
cmc
adc
fwait
or
jmp
inc
ret
in
add
jg
les
push
adc
mov
push
mov
loop
pop
int3
cmpsb
adc
lds
sbb
dec
movsb
pop
push
popf
out
dec
mov
push
das
pop
mov
push
or
pushf
jns
inc
dec
aas
mov
std
cmp
adc
dec
je
xor
or
neg
icebp
loopne
mov
xchg
ret
mov
jmp
shlb
mov
mov
negl
pop
ds
dec
mov
loopne
cs
xlat
lea
cmpb
int
rorw
mov
adc
ja
enter
inc
test
hlt
test
dec
mov
sti
jns
inc
cltd
sub
stc
cmpsl
shl
nop
fbld
mov
in
cmp
mov
lret
into
fists
jg
in
xchg
sbb
and
cltd
push
adcl
and
mov
dec
pop
jmp
pop
enter
sub
push
cmp
imul
sbb
dec
xchg
shr
loop
icebp
fidivs
cmp
in
sub
outsb
lahf
pushl
or
stos
pop
lret
push
aad
cmpsb
pop
or
arpl
xchg
cmp
inc
js
das
pop
stos
inc
xor
std
mov
xor
aaa
push
loopne
xchg
insl
out
adc
ds
xor
out
and
pop
push
add
jns
dec
inc
xchg
pop
in
cs
dec
push
pushf
mov
repz
movsl
cmc
imul
mov
out
sahf
mov
fsubrs
inc
leave
push
mov
sbb
pop
push
mov
mov
repnz
loopne
out
mov
inc
pop
lock
dec
mov
pop
and
xchg
test
push
or
adc
adcb
add
inc
ds
and
mov
je
adc
add
xchg
cmp
pop
ljmp
enter
sbbl
data16
push
mov
popa
fwait
jbe
sub
pusha
insl
jl
mov
sbb
add
fadds
dec
dec
jo
jne
lcall
jg
imul
std
aam
aas
sub
outsb
les
fdivs
data16
add
addr16
adc
adc
stos
ret
inc
add
orb
push
xchg
xchg
int3
cld
clc
gs
andb
les
rol
leave
xchg
and
jno
sub
dec
in
test
sbb
sbb
inc
js
or
int
and
mov
or
scas
or
xchg
int3
dec
fbstp
xchg
std
cld
insb
aaa
int3
or
rcll
call
push
repz
test
jns
adc
cmp
ja
dec
int
ds
cmp
mov
cmp
push
inc
into
mov
xor
call
mov
pushf
aaa
fmuls
add
daa
mov
push
aam
xlat
xor
dec
clc
hlt
pop
popf
xchg
xchg
cld
decb
fsubrs
bound
insl
daa
lcall
or
rcrl
dec
lea
xor
ds
mov
mov
ret
jns
xor
jge
mov
mov
in
jp
imul
mov
jb
cmp
mov
push
sbb
out
sbb
aad
sahf
mov
andb
push
sbb
sub
out
and
pop
loop
loopne
pop
push
mov
mov
leave
lock
cmp
jbe
sbb
out
sbb
push
add
jne
fmuls
jae
movsb
mov
push
cwtl
xor
shl
call
dec
jecxz
leave
mov
and
rclb
insb
xchg
mov
xchg
jne
out
fdivrl
psrld
dec
rorl
mov
jg
sbb
int
mov
sti
sub
xchg
int
cmpl
sti
push
push
imul
hlt
cmp
popa
push
inc
out
or
xchg
ret
hlt
and
mov
xor
cmp
fimull
cmpb
hlt
xchg
mov
dec
and
xor
fbld
shlb
test
push
mov
inc
sti
aam
mov
add
aaa
dec
in
std
inc
je
xchg
fcompl
cwtl
mov
xor
ret
or
sahf
out
mov
push
push
scas
jmp
lock
mov
mov
test
cltd
mov
loop
mov
ja
xchg
lret
sub
cmpsl
cmp
or
push
repz
pop
xor
inc
pop
fadds
mov
iret
test
mov
lcall
lcall
mov
lods
add
ret
cld
fdivl
mov
cwtl
das
andb
pop
dec
mov
jne
test
xor
imul
nop
popa
hlt
scas
mov
mov
lret
inc
in
adc
push
ja
mov
ss
jl
and
inc
xchg
cmpsb
jne,pn
mov
add
sub
or
cwtl
inc
jno
jecxz
or
mov
or
out
push
cmp
out
push
icebp
fidivrl
dec
js
data16
js
jle
movsl
into
mov
repz
cmp
gs
or
aad
push
sub
std
and
sbb
xchg
mov
mov
cli
bound
shrl
icebp
movsb
cmp
outsl
sub
inc
loope
push
inc
in
inc
sub
mov
sbb
jne
jb
flds
js
sbb
repz
xchg
in
and
xchg
or
out
sbb
sbb
adc
int3
jae
loopne
pop
pop
push
in
rorb
fucom
dec
stc
mov
inc
jns
iret
subb
gs
cmpsb
fstpl
jo
pop
out
mov
scas
adcl
int3
add
mov
push
in
lods
sar
adc
inc
push
idiv
mov
addr16
cmpsl
sahf
push
cmp
popf
jae
sub
mov
add
jns
mov
sub
inc
sub
pop
or
mov
jmp
add
arpl
mov
xlat
jge
aam
mov
adc
jl
pop
popf
lods
xchg
jae
mov
xchg
mov
fsubrl
subb
inc
cli
add
in
cmpsb
and
fstl
shl
stc
or
mov
xchg
out
test
xchg
sbb
add
sub
addr16
jo
push
arpl
mov
ljmp
imul
lcall
movsl
sahf
out
push
inc
repnz
lcall
sub
pop
negl
push
cld
les
sahf
mov
mov
inc
jmp
xor
orb
sbb
je
mov
or
cmp
mov
mov
sub
adc
aam
pop
iret
out
incl
sbb
popf
mov
dec
cmpsl
aaa
or
cld
inc
or
mov
mov
icebp
ljmp
mov
nop
cld
das
shlb
mov
aas
cmp
mov
in
sbb
add
push
loop
cmp
or
dec
or
cmp
dec
mov
clc
adc
mov
or
cmc
inc
inc
btrw
enter
mov
sbb
in
xchg
inc
add
gs
jp
shlb
nop
or
xchg
push
cwtl
push
mov
lcall
lret
mulb
std
adc
xchg
lcall
aas
mov
push
push
shl
ja
aam
daa
movb
cli
adc
add
jbe
clc
jnp
xchg
or
in
popa
sub
rol
push
lods
notl
xor
sub
push
insl
mov
mov
sbb
and
movsb
or
jno
sahf
jge
cmpsl
push
aam
dec
xorb
jmp
popa
cld
into
add
test
pop
sub
rcrb
mov
mov
and
cltd
icebp
adc
in
pop
and
xor
fidivrl
pop
cmp
shll
jge
inc
pop
jae
push
push
das
out
mov
dec
test
test
loop
dec
in
pushf
jp
xor
movsl
sarb
sbb
je
add
cld
sti
clc
pop
or
xchg
add
ret
jns
sbb
aam
rclb
in
gs
jnp
jecxz
mov
leave
mov
sarl
fwait
lret
shl
cmp
mov
pop
sbb
pop
stos
mov
cmp
or
adc
mov
ret
rorl
jp,pn
pop
outsl
cmpsb
jnp
stc
mov
ror
ret
sbb
inc
arpl
xlat
in
outsl
adcl
movsl
int3
dec
stos
xchg
cmpsb
leave
sti
push
mov
std
outsb
ja
rorb
mov
aad
fstpl
xchg
leave
repnz
aad
mov
jae
sub
mov
insb
cli
xchg
xlat
pop
xchg
test
in
add
push
or
xchg
fwait
scas
inc
xchg
mov
stc
sub
inc
sub
or
jno
mov
dec
scas
js
shlb
add
stos
adc
jne
stos
hlt
hlt
fs
push
adc
add
push
cmp
jns
call
fiadds
call
pop
mov
pop
fndisi(8087
test
push
movsb
les
push
jnp
das
out
mov
ret
mov
mov
xor
pushf
sbb
cld
fldt
mov
pop
jmp
cli
jp
fstpt
fimull
jne
cmp
mov
cmpsb
adc
je
sub
push
int
pop
add
outsb
movb
mov
shrb
push
pushf
sub
test
or
push
cmp
ss
pop
jnp
xchg
out
cltd
std
push
dec
inc
sub
mov
test
xor
sbb
mov
push
insb
in
daa
shrl
es
mov
notb
das
adc
shl
mov
mov
xchg
nop
xor
mov
push
subb
out
js
jle
jge
icebp
scas
inc
int3
aas
mov
inc
imul
push
pop
je
jg
xchg
mov
or
pop
mov
pop
push
inc
leave
imul
xchg
add
mov
je
and
mov
dec
insl
xchg
mov
jg
sub
rol
xchg
fisttps
mov
dec
popa
pop
sbb
test
lds
cli
mov
or
xor
mov
iret
fdivrl
rcr
subl
mov
mov
pop
xchg
ret
xchg
push
inc
or
cltd
push
pop
outsl
shlb
push
cmp
or
sub
sub
pusha
cld
push
push
and
mov
roll
scas
push
cmpsb
lahf
aaa
not
testb
sti
outsl
test
push
add
loope
adc
orb
aaa
pop
scas
push
pop
push
xor
repnz
aad
test
addb
cmp
scas
mov
or
daa
fsubs
idivl
push
aas
jg
jmp
imul
cmc
and
ss
sub
mov
inc
ret
xchg
inc
adc
adc
adc
or
gs
test
xorl
lea
dec
mov
pop
shr
pop
rorb
outsl
adc
clc
and
push
mov
imul
xorl
iret
sahf
jge
adc
mov
in
int3
jno
inc
or
and
push
or
add
xchg
test
pop
adc
movsb
mov
cmp
cmpsl
rcrb
lret
xchg
mov
lret
loop
mov
add
shl
and
adc
push
cmp
push
and
cs
loope
add
fimull
or
mov
outsl
inc
sbbb
push
xchg
dec
jb
pop
sti
inc
mov
bound
and
roll
xchg
and
nop
nopl
dec
in
sub
xor
mov
mov
fsub
mov
pop
cvtps2pi
and
nop
movsl
dec
push
dec
cmp
push
push
cmp
clc
xchg
sbb
adc
test
mov
push
ljmp
jmp
out
adc
std
inc
cwtl
mov
push
dec
call
loopne
insl
or
jo
or
mov
movsl
mov
stc
inc
jle
jle
xchg
sbb
mov
pop
mov
decb
cmp
gs
mov
les
sbb
es
mov
std
cmp
sbb
cmpsl
xor
dec
inc
stos
outsl
cmp
sub
mov
push
data16
push
sbb
inc
xchg
mov
mov
inc
aam
xchg
sub
mov
daa
sbb
or
pop
dec
data16
inc
and
xchg
pushf
dec
lods
mov
pop
rcrl
jge
xor
sahf
testl
xchg
fisubs
xchg
dec
mov
fsubrl
mov
mov
inc
icebp
loopne
dec
ucomiss
repnz
and
sub
mov
mov
addr16
mov
std
arpl
or
insl
jnp
lods
jge
ss
fwait
outsb
lods
outsl
push
out
lods
mov
arpl
and
mov
jle
lahf
out
xchg
fs
jp
test
dec
pop
das
lret
xor
add
jo
imul
clc
fs
sahf
loopne
sub
out
das
fldenv
mov
lods
out
movsl
negl
and
jae
fisttpll
lods
jne
push
outsl
xchg
out
cmp
jbe
fldcw
insl
test
or
shlb
xor
aam
push
mov
dec
lods
ficoml
xor
cld
mov
out
cmp
xchg
push
xchg
les
ja
mov
push
mov
js
or
lahf
pop
cltd
xchg
mov
aaa
sbb
xchg
cmpl
scas
icebp
push
aam
pop
sbb
into
cs
pop
fcoml
nop
in
mov
aad
lds
rclb
dec
stos
testb
daa
pop
cwtl
out
lcall
dec
iret
mov
pop
mov
aad
pop
idivb
dec
push
add
pop
and
in
icebp
pop
lret
std
repz
and
add
dec
or
stos
push
jge
outsb
sbb
loopne
sub
stos
add
movsb
push
xor
pop
xchg
sbb
mulb
andl
popf
push
xchg
mov
mov
cmpsl
mov
jecxz
sub
mov
repnz
lds
lret
sub
add
insl
push
sbb
mov
mov
lcall
movb
xor
add
push
xchg
inc
add
outsl
push
cmp
lcall
xchg
fisubl
lret
pop
dec
addb
or
loopne
jb
les
mov
sub
es
ret
push
pop
mov
adc
clc
sbb
cld
mov
xor
inc
ret
aas
add
js
mov
and
negb
or
outsl
cmp
lock
mov
jae
icebp
cli
mov
add
mov
mov
and
shll
aad
inc
test
or
in
mov
xlat
xor
cmpsl
ret
fs
sub
mov
lods
icebp
insl
enter
rcr
js
ja
sub
call
push
cmp
std
adc
jno
shlb
stos
inc
dec
enter
ret
jecxz
arpl
out
ret
add
les
inc
ja
leave
roll
inc
sbb
cs
imul
fmull
mov
push
sub
lret
stos
imul
lret
mov
insl
jl
bound
outsl
clc
rclb
xchg
dec
push
or
mov
mov
cmc
mov
mov
pop
enter
push
jl
inc
dec
lods
adc
andb
dec
aam
lahf
push
in
addr16
shlb
mov
icebp
pop
jo
sbb
lods
les
jno
jo
scas
inc
clc
out
and
stos
cmp
jb
sub
adc
or
in
fcomps
sbb
cmpsl
int
mov
clc
popa
leave
dec
cmpsb
fdivr
icebp
add
test
cmp
and
ret
pop
xor
lds
mov
mov
add
aaa
and
inc
dec
pop
and
roll
lret
les
adc
or
cmp
cmpsl
dec
push
mov
pop
push
mov
push
loope
leave
pop
sub
push
aaa
sbb
repnz
dec
addb
lea
scas
ds
insb
dec
call
fadd
or
mov
dec
adc
mov
mov
fnstenv
out
xchg
addr16
mov
sbb
aam
int
lcall
stos
push
xor
or
repnz
mov
iret
add
rclb
insb
xchg
popa
fnop
or
mov
nop
daa
sbb
mov
jle
add
icebp
jecxz
ret
pop
dec
sarb
pslld
fidivl
popa
mov
jb
and
dec
lret
divl
cmpb
cmp
adc
push
decl
push
je
les
in
adcl
negb
popf
adc
aaa
jne
sbb
movsl
fdivl
mov
sbb
mov
out
dec
pusha
xchg
add
pop
sti
mov
add
add
cli
xchg
xor
negl
out
jns
mov
pop
adc
inc
ja
sbb
xchg
mov
dec
gs
shl
and
out
jo
jne
xor
adc
iret
aaa
xchg
in
lods
mov
adc
ja
cmp
ss
pop
dec
jl
fists
push
das
iret
int
xchg
sbb
fmuls
out
and
ljmp
inc
punpckldq
mov
sbb
inc
fstps
adc
inc
inc
and
into
test
icebp
push
mov
pushf
roll
mov
xchg
inc
sbb
push
xlat
cmp
inc
inc
icebp
orl
insl
int
dec
jmp
es
jb
dec
push
ret
sub
pushf
xchg
lret
xchg
shrl
dec
fimull
xor
out
movsb
aad
arpl
adc
divl
fs
ja
pushf
das
mov
stos
adc
mov
mov
loopne
insl
add
jle
fldl
into
movl
inc
test
and
mov
jbe
mov
hlt
xchg
movsb
imul
outsl
lcall
in
cmp
dec
das
pop
nop
ror
arpl
sahf
in
stos
aam
roll
popa
and
fisttpl
fdiv
sbb
mov
mov
mov
fisubl
lret
sbb
cmpsb
jecxz
mov
jns
push
xchg
repz
add
sbb
fs
neg
push
cld
sub
pop
mov
stos
shrb
sbb
sti
pushl
sub
fists
sub
mov
enter
cmp
js
imul
inc
sub
loope
ret
addr16
hlt
jae
mov
fstl
jecxz
repz
leave
outsl
in
inc
sbbb
mov
ror
or
mov
into
mov
jmp
cmp
push
mov
mov
fbld
inc
insl
fsubrs
jg
jnp
insl
sub
adc
jbe
xor
add
mov
xor
sahf
loopne
divb
ljmp
mov
out
pop
jle
mov
mov
rcll
loopne
push
mov
mov
in
sbb
push
xor
dec
mov
mov
hlt
fcomip
arpl
and
or
cmp
adc
lock
adc
pop
jb
ljmp
mov
mov
loopne
mov
aas
xchg
add
je
xchg
push
xchg
cmp
sti
das
inc
inc
das
aas
loop
xchg
pusha
xchg
mov
jb
dec
adc
arpl
sbb
cli
cmp
daa
and
mov
testl
adc
fdivrs
adc
lahf
movsb
pop
lcall
cld
test
pop
loope
and
adc
repnz
or
cwtl
idivb
xchg
pop
aam
mov
cmp
jne
pop
aad
stc
mov
dec
cwtl
psubd
hlt
and
xchg
mov
push
mov
mov
and
pop
push
je
adc
data16
pop
sub
or
nop
rolb
dec
inc
mov
aam
fbstp
pushf
cs
jns
test
enter
iret
mov
pop
or
add
cmpb
or
pop
sub
push
sub
sbb
out
fwait
cmp
and
icebp
and
hlt
in
int3
add
sub
cltd
mov
into
jle
xor
dec
or
test
add
bound
loope
sub
mov
gs
jle
in
mov
mov
mov
pop
mov
jecxz
fwait
mov
es
fucom
pusha
xor
xchg
rcr
movsl
add
mov
push
adc
dec
std
xchg
sti
cmp
int3
lret
mov
sahf
mov
sbb
stos
and
pop
push
push
fisubrl
jae
test
fwait
mov
cli
lcall
xchg
add
or
iret
les
push
cmp
in
loop
dec
pmulhuw
fistpll
shlb
push
out
jnp
mov
out
call
jno
enter
mov
int
inc
fldcw
dec
pop
pop
mov
orl
dec
mov
popf
test
mov
popa
xlat
ss
adc
jecxz
add
outsl
icebp
push
icebp
jae
adc
and
je
lret
popf
push
or
std
cs
xor
fidivl
lea
mov
icebp
mov
push
or
scas
bound
pop
xchg
sub
mov
jmp
je
mov
in
cmp
inc
rol
imul
dec
adc
hlt
jp
sub
test
inc
les
add
adc
pop
ss
subb
test
movsl
sbb
dec
add
ja
loopne
xchg
sbb
cmp
cwtl
jmp
sbb
jbe
mov
leave
loope
jmp
pusha
or
or
xchg
xchg
fdivp
inc
dec
inc
jle
das
mov
add
adc
jne
hlt
lods
fisubrl
dec
xchg
sbb
popf
sbb
or
ss
fcmove
and
test
xor
in
inc
pop
lods
call
rcr
cmp
sbb
xchg
int
data16
aas
jae
mov
shlb
dec
cmpsb
inc
pop
pop
rcr
sub
das
cmp
out
sahf
mov
cmp
ja
mov
inc
inc
jne
sbb
add
add
loop
jno
cmpsb
mov
aad
and
xor
subb
sbb
aam
sbb
leave
dec
pop
iret
push
xor
shll
outsl
add
lret
inc
sub
lahf
push
imull
or
bound
clc
pop
push
add
insb
push
push
push
xchg
add
mov
jbe
mov
push
or
or
mov
mov
dec
stos
add
jmp
jge
mov
shrl
or
shrb
push
ret
into
jne
ret
aad
scas
cmp
push
dec
or
jl
cmp
dec
lret
push
jl
mov
aas
es
cld
shlb
jmp
fwait
mov
sar
lcall
push
daa
cmpsb
adc
shlb
clc
ret
call
adc
cmpsb
jbe
subb
or
xor
addb
cmp
pop
fmull
cmp
mov
cld
hlt
adc
jecxz
adc
insb
sbb
cmp
je
cmp
inc
pusha
cmpsb
in
jne
out
testl
adc
js
xchg
inc
add
jmp
push
paddsw
pop
mov
or
mov
mov
push
push
in
cli
jg,pn
ja
mov
sub
and
inc
dec
jle
aas
sub
aam
xchg
dec
sub
popf
inc
inc
push
inc
mov
out
mov
inc
addr16
lock
mov
push
call
adc
cmp
inc
or
insl
add
dec
jle
les
aaa
fnstenv
rol
je
adc
cs
out
ss
stc
inc
jns
jns
rcl
sub
imul
aas
xor
rolb
icebp
fs
xchg
inc
mov
or
out
mov
imul
cmc
ss
ret
push
pop
imul
push
fists
aaa
mov
and
movsl
pop
and
or
adc
shll
lock
cmc
sbb
sahf
lret
inc
ds
dec
jo
mov
pushw
ret
cltd
jmp
popf
cld
push
pusha
test
adc
mov
inc
scas
pop
sub
mov
imul
out
sahf
dec
mov
pop
mov
dec
dec
jl
fldl
or
shrl
sub
jp
cs
mov
pop
xor
ljmp
add
sub
orb
fmull
add
and
jnp
pop
insb
jl
es
jnp
xorl
enter
popa
inc
sub
ja
pushl
je
fistpll
push
outsl
add
jb
mov
loop
into
test
test
and
or
stos
adc
cmp
enter
dec
outsl
and
lret
mov
lds
fdivr
sub
push
mov
and
cmp
pop
jl
jl
adc
push
pop
js
or
imull
call
repnz
ret
outsl
push
and
sti
nop
pop
ds
sbb
lret
jnp
adc
sti
leave
mov
xor
arpl
loop
mov
and
sub
adc
xchg
mov
mov
xor
pop
adc
test
aaa
cld
scas
adcl
mov
sti
fsts
mov
aaa
cltd
push
cwtl
inc
jle
data16
jle
roll
inc
sub
fidivl
mulb
mov
cmc
inc
lret
pusha
jle
sbb
xor
xchg
ljmp
stos
in
mov
inc
mov
inc
enter
fsubs
jge
sub
sarb
mov
aad
je
or
call
in
jecxz,pt
outsb
fdivr
add
cmp
clc
fmull
scas
mov
mov
pushf
add
leave
popf
sub
pop
ret
jg
cmp
test
xchg
mov
mov
cmp
jecxz
ja
jae
fisttpl
lock
add
sub
push
dec
xchg
es
test
sub
imul
cltd
inc
lahf
and
adcb
xor
clc
in
xlat
jb
int3
cmc
stc
enter
ror
dec
out
push
add
lcall
or
mov
mov
data16
data16
loop
imul
clc
xchg
test
out
sub
hlt
out
sbb
fistpll
push
sbb
lcall
xchg
aam
out
lea
outsb
dec
cmp
mov
cmpsl
scas
add
aam
or
lret
mov
xchg
pop
push
shrl
jns
int
call
les
add
sub
push
dec
imul
in
or
mov
dec
das
scas
sbb
adc
mov
lret
dec
mul
ret
adc
mov
dec
std
out
or
sub
nop
push
sbb
lds
mov
bound
daa
mov
or
jne
mov
lods
js
jne
jle
outsl
lahf
xor
stos
hlt
out
in
movsb
dec
insb
out
lahf
push
fdivrl
popw
test
in
fiaddl
ss
outsb
cld
mov
fdivrl
sub
testb
addl
leave
sbb
std
es
scas
negl
cmp
and
dec
jecxz
dec
neg
sahf
jne
es
pop
pop
xchg
xchg
fadds
push
dec
push
stc
bound
dec
pop
into
into
mov
inc
adcb
faddp
test
imul
mov
ja
fcomps
hlt
push
push
icebp
or
push
pop
lea
mov
push
mov
xor
adc
push
rcrb
repz
in
gs
mov
xchg
push
jb
jo
dec
fdivrs
stos
pusha
pop
js
mov
dec
push
es
mov
mov
lock
lods
scas
xchg
cmpsl
mov
aas
lret
mov
addl
stc
test
int3
mov
loope
jmp
push
sti
xchg
add
xor
mov
xchg
mov
lock
lret
and
mov
sbb
test
mov
mov
loope
fdivr
adc
add
inc
hlt
xor
add
fsubrs
sub
mov
dec
testl
or
icebp
testl
push
aaa
inc
xchg
test
shl
or
or
lret
divb
addl
outsb
cmp
jae
or
sbb
adc
je
int3
fcompl
add
mov
roll
fs
add
inc
dec
push
lock
push
daa
cmp
xchg
mov
sahf
dec
and
adc
xchg
xor
es
mov
mov
int
pop
fnstsw
daa
add
mov
inc
sbb
xchg
fcmovnbe
mov
jecxz
adc
roll
jmp
pop
mov
sub
iret
mov
inc
mov
mov
shrl
insl
sub
mov
xor
jno
or
fildl
dec
mov
arpl
or
out
push
xor
mov
mov
insl
out
xor
xchg
lds
mov
pop
xor
mov
cmp
int3
cmp
jno
mov
sub
gs
shll
sbb
test
sbb
mov
jns
leave
popa
mov
leave
adcb
push
cmp
xor
or
sbb
and
aaa
aas
nop
sbb
rorl
les
push
push
cmp
sbb
mov
pop
loope
daa
loopne
and
push
lret
das
in
std
subb
jmp
lret
arpl
and
stos
int
enter
scas
fildl
insl
das
xchg
out
push
gs
sub
mov
inc
mov
inc
rep
mov
add
fadds
fbld
shr
out
jne
cmp
das
jne
ret
mov
push
lds
pop
and
outsl
int
js
loop
and
mull
pop
imul
cltd
sub
cmp
js
dec
jnp
out
imul
sub
xchg
xor
jle
push
sbb
and
pusha
outsb
mov
jmp
or
scas
jne
scas
sbb
xchg
aad
cs
iret
or
pop
and
into
adc
mov
xchg
imul
popa
pop
inc
xor
xchg
adc
frstor
xchg
insl
dec
adc
sub
xchg
pop
xlat
test
sti
lods
adc
ss
fadds
fisttpl
inc
or
pushf
call
sub
cli
sti
pop
lcall
in
dec
push
icebp
xchg
fcomps
and
lods
xlat
test
scas
insl
jae
lds
inc
inc
lock
adc
or
pop
inc
nop
inc
gs
cmp
jnp
mov
sub
sbb
imul
stc
frstor
test
xor
fildll
cmc
mov
das
daa
or
andl
lods
and
andl
pop
add
int
sarl
cmpsl
in
pop
adc
adc
push
mov
shll
push
cmp
sbb
movsb
insl
fdivl
dec
jns
test
repz
mov
mov
and
push
stc
je
mov
clc
xchg
rcr
repnz
outsl
sbb
mov
divl
jl
dec
insl
clc
in
das
adc
imul
pop
jg
icebp
mov
pop
lahf
mov
je
xor
lret
rol
pop
jecxz
outsb
xchg
jae
les
cld
cmp
sbb
imulb
xor
mov
lcall
hlt
cmpsb
xor
mov
rorl
inc
and
xor
out
dec
jg
pop
idiv
mov
mov
pop
jo
lahf
orl
mov
pop
jmp
scas
mov
sbb
or
xor
daa
and
nop
gs
mov
cmp
push
adcb
mov
add
dec
stc
pop
sbb
push
inc
dec
sahf
arpl
jnp
sbb
push
test
pusha
loope
sbb
sbb
pminsw
dec
aam
pop
push
lret
dec
int3
pop
jl
daa
pusha
clc
jmp
or
ds
fsubrp
mov
push
rorb
sahf
xlat
push
aas
std
lods
push
lea
cwtl
jbe
xchg
or
subl
dec
sbb
sarb
in
dec
shr
cld
pop
dec
test
inc
insl
data16
aad
mov
mov
sarb
push
mov
enter
ljmp
cmp
mov
add
xchg
dec
push
jp
lods
movsb
imul
mov
test
pop
gs
mov
or
mov
adc
rorl
sub
dec
jae
jge
push
loop
in
mov
outsb
out
sbb
pop
pushf
and
and
sub
cs
bsf
push
pushf
mov
popf
ret
ss
inc
stc
add
mov
push
cwtl
mov
and
add
sbb
jge
or
sahf
scas
inc
mov
jae
addl
gs
test
xchg
daa
pushf
or
pusha
divl
inc
in
mov
inc
roll
xor
dec
insb
fsubrs
ret
rcrb
mov
mov
in
fwait
les
pop
lds
push
xchg
lods
jmp
mov
push
dec
outsb
pop
fdivrs
xchg
lret
scas
mov
jle
add
push
std
mov
std
ret
aam
or
js
movsl
jp
cmp
pop
and
jmp
xor
pusha
les
and
mov
test
insl
adc
imul
fisubl
and
addl
es
and
rcrb
cmp
mov
js
pop
daa
pushf
pop
stc
mov
movb
pop
or
ret
xlat
repnz
sub
arpl
xchg
dec
push
push
jmp
test
sbb
dec
in
aas
cld
mov
adc
fldcw
shr
aad
xchg
repz
pop
out
jge
rcl
mov
inc
dec
xor
arpl
adc
andb
cld
insb
fs
mov
add
jae
dec
aad
pop
sahf
cld
push
adc
faddl
add
test
sub
flds
pop
inc
push
pop
sti
jecxz
mov
ss
push
cmpsb
mov
fildl
inc
gs
dec
stc
js
imul
or
pop
dec
stos
push
pop
jle
sahf
addr16
adc
and
test
xor
xchg
test
inc
or
push
mov
push
call
fsubp
std
lds
test
hlt
mov
xchg
adc
pop
pop
xchg
data16
pop
cmp
xchg
es
and
add
ret
jecxz
aam
jo
mov
xor
jns
mov
lds
and
pop
loop
aaa
pop
dec
add
fwait
xchg
popa
jp
xchg
push
jnp
inc
mov
test
cs
out
fistl
addr16
push
sbb
xor
lds
inc
dec
lret
divb
inc
lret
adc
lods
push
push
jmp
add
imul
xchg
shl
lahf
mov
fsubl
mov
inc
jg
push
flds
inc
rorl
jmp
jno
mov
int
jae
dec
dec
sbb
add
dec
mov
cld
mov
and
std
inc
jae
inc
xor
pop
dec
mov
xchg
cmpb
inc
or
dec
lret
or
flds
jmp
ret
loop
mov
pop
pop
jg
out
xchg
rcl
hlt
addl
aad
mov
dec
je
movsl
sbb
fucomp
scas
jnp
fstpt
push
imul
xlat
orb
test
repz
filds
scas
mov
cmp
sahf
xor
mov
mov
out
pop
add
nop
pop
les
imul
xor
aam
fistl
cmp
cmp
aad
push
daa
mov
gs
cmc
lock
and
or
js
fcom
mov
xor
sub
scas
test
cmp
icebp
les
pop
sub
adc
icebp
shll
imul
cmpsl
shlb
mov
jp
xor
fidivrl
pop
lds
stos
push
ss
mov
leave
loope
sbb
repnz
dec
lea
ret
repnz
inc
movsb
sbb
lret
xor
test
fucomip
fmul
int
ss
fs
jle
pop
pand
rorb
call
mov
lahf
arpl
mov
addb
mov
push
movsl
hlt
and
addr16
mov
out
mov
push
aas
inc
adc
mov
movsb
mov
jne
test
sub
leave
push
std
mov
dec
test
inc
push
or
divl
andb
ja
push
mov
loope
push
xchg
jecxz
or
jmp
in
leave
cld
stos
or
mov
fbstp
add
cld
les
inc
mov
adc
dec
ucomiss
ficoms
inc
aas
adc
xchg
push
or
hlt
popa
inc
jg
push
fwait
in
sbb
jg
push
fs
lcall
leave
ss
push
adc
lret
inc
cmp
inc
mov
stos
cmovne
and
jnp
out
xor
jnp
or
sarb
test
std
outsl
adc
push
jmp
iret
push
xchg
push
xor
repz
and
jmp
fildl
popl
movsl
add
lahf
xchg
lret
insb
mov
jge
xor
inc
push
cmp
sub
jb
mov
inc
fcoml
popf
outsb
dec
insl
push
or
test
flds
or
push
int3
pop
sub
iret
jbe
mov
loop
mov
cmpsb
sti
aad
int3
adc
mov
movsl
cmp
testl
neg
fucomi
test
sbb
mov
adc
int3
or
pop
cltd
adc
and
gs
rcrl
jmp
stc
movsb
pop
mov
aas
insl
add
jne
lea
leave
or
dec
mov
mov
push
sbb
ss
jns
fsubs
pusha
mov
mov
cmp
push
pop
jb
or
addr16
or
out
adc
mov
pop
fdivp
imul
cltd
je
push
into
ret
xchg
sahf
int3
out
cmp
popf
sbb
jmp
mov
mov
movsb
add
in
mov
xchg
ret
aas
inc
pop
and
outsb
fdivr
hlt
add
pop
pop
and
call
jmp
push
popl
xchg
mov
inc
adc
adc
pop
or
arpl
lea
decl
ret
push
insb
leave
cmc
sub
jge
inc
testl
push
int3
or
cmp
xlat
push
pop
jp
repz
pop
jae
dec
pushf
movsb
push
or
adcb
mov
shrb
outsb
cltd
inc
icebp
ror
leave
int3
fmull
aam
jo
shll
push
fbstp
xchg
into
out
xor
mov
gs
or
shrl
mov
jb
mov
pop
mov
sar
shr
jb
mov
scas
jmp
sbb
mov
outsl
xor
fildl
xchg
jae
mov
add
cmpb
mov
std
enter
jle
jl
push
mov
mov
mov
das
cmp
and
jp
aam
testl
outsl
insl
nop
sbb
adc
inc
lods
xlat
rorb
add
pop
and
inc
xchg
test
repz
and
jno
pop
nop
jle
jg
inc
mov
mov
aas
add
pop
iret
bound
dec
lret
mov
fstpl
sub
xorb
mov
int
inc
fsubrl
jmp
nop
stos
add
outsl
dec
imul
and
jb
jae
pop
push
xchg
mov
add
mov
shrb
fiaddl
pop
mov
rol
nop
add
dec
lar
cld
sbb
inc
inc
sub
sarb
mov
pushf
daa
xor
lea
push
out
cltd
jl
adcb
out
adc
int
or
dec
rorl
xor
jnp
xchg
push
jmp
mov
xchg
pusha
fbstp
loope
aas
stc
movsl
xchg
push
add
add
lcall
insl
fs
lods
outsb
imul
stc
insb
mov
ja
mov
idivb
addr16
and
pop
int3
int
data16
pop
mov
loop
enter
loope
cmpsb
mov
jns
imul
scas
mov
pop
xor
cltd
xlat
pushf
push
daa
fbstp
mov
jbe
xor
push
adc
aad
loopnew
aas
out
dec
adc
fisubl
add
divb
dec
xchg
in
xchg
lahf
jp
push
out
ret
mov
xchg
cmp
dec
arpl
test
aaa
and
ret
arpl
fs
enter
pop
pop
dec
lea
adc
sub
dec
xchg
adc
adc
inc
pop
cltd
popa
and
aad
and
aam
xor
sub
repz
mov
lahf
clc
fidivrl
mov
mov
inc
sahf
jle
in
imul
xchg
loopne
sub
jg
enter
jns
push
fadds
fdiv
jg
sbb
test
xchg
mov
inc
lahf
sub
out
push
loope
add
stos
xchg
shrl
sbb
dec
sub
pop
push
mov
in
lods
mov
fnsave
ss
sbb
and
lret
push
mov
adcb
sbb
mov
lea
out
dec
decb
xor
and
test
dec
fldt
int3
and
orl
jb
mov
nop
dec
push
cs
fcompl
cmp
sbb
xor
mov
add
add
jo
es
lock
push
cmp
enter
aas
fisttpll
enter
or
push
cmp
lods
and
cmp
pop
insl
fsubl
shrb
jmp
xchg
into
out
daa
xlat
cld
js
mov
adc
jo
sub
mov
mov
in
shr
imul
neg
leave
inc
sub
sahf
iret
push
shll
ljmp
cmp
sbb
aaa
insl
lods
lods
das
rolb
test
rorl
adc
ret
pop
jno
add
rcr
dec
dec
sbb
dec
add
data16
and
arpl
sub
lds
call
into
pushf
rorb
test
push
jp
jge
jp
push
and
outsl
xchg
inc
mov
mov
movsb
lods
mov
jo
mov
ret
sub
mov
cmp
dec
jnp
mov
mov
add
test
sub
jne
lods
cmp
idivb
fidivrl
xchg
mov
xor
pop
lret
inc
ret
movsb
stos
and
sub
and
aas
xor
loopne
sub
fwait
call
or
push
mov
cmp
or
fcompl
lcall
arpl
dec
sti
jb
pop
jp
and
add
test
outsb
stc
mov
pop
lret
dec
movsl
and
cltd
cmp
insb
adc
mov
add
imulb
xor
jnp
mov
in
xchg
sarl
out
mov
xor
mov
aad
fstps
ljmp
sahf
inc
ret
fisttpl
xchg
lcall
cli
mov
icebp
arpl
pop
ds
out
lcall
sbb
sub
gs
and
pop
lahf
shrl
mov
fdivrp
arpl
push
shrb
jg
lea
fsubs
enter
lret
sbb
sbb
int3
push
insb
cwtl
out
lock
in
sbb
add
xor
in
inc
inc
push
cmp
and
sti
jo
ret
call
mov
call
mov
lcall
inc
outsl
pop
cwtl
xchg
or
adc
push
xor
jnp
pop
inc
xor
clc
jle
push
sti
mov
clc
xor
xchg
push
scas
fwait
std
ds
xchg
or
mov
inc
lret
adc
sti
daa
jno
sub
or
jnp
pop
xor
jno
inc
xchg
fs
les
cmp
or
sti
mov
add
cli
call
mov
loope
dec
femms
arpl
in
outsb
aam
shll
sub
enter
icebp
and
mov
ljmp
test
fidivs
cs
sub
lea
adc
mov
imul
test
jmp
cmc
adc
pop
adcl
test
ljmp
ja
orl
outsb
lret
lahf
hlt
xor
js
outsb
mov
mov
inc
lcall
push
out
shl
xchg
xchg
xchg
adc
add
and
jmp
and
or
adc
je
fnsave
add
int
lret
adc
ret
lods
cvtps2pi
lret
shl
clc
push
js
sbb
hlt
not
sbb
pop
xchg
jmp
adc
in
cmp
push
cmpsb
or
push
mov
adc
movsb
sbb
mov
xor
testl
jae
loope
lea
cmpsl
mov
adcb
push
adc
in
insl
out
notb
call
out
xor
sti
mov
out
mov
out
adc
cld
jbe
mov
and
add
fnstcw
lods
dec
dec
cmpsl
fsub
clc
jbe
jecxz
jmp
lods
aam
movb
loope
ret
lcall
jns
sub
aad
test
xlat
xchg
cmp
iret
dec
adc
mov
adc
pop
int
outsb
jle
sub
adc
out
call
addb
and
popa
jecxz
ret
nop
cs
repz
popa
inc
das
dec
dec
test
push
and
jae
cli
or
xor
xor
jl
in
fidivrs
lds
mov
lock
add
lds
jmp
dec
sbb
faddl
loopne
pop
aas
mov
call
and
mov
push
lods
or
test
adc
xor
add
loope
ss
adc
rcll
outsl
dec
inc
push
out
push
mov
or
pop
mov
push
and
test
xchg
scas
out
push
mov
jmp
xor
jne
push
imul
push
mov
jne
shr
jne
add
xchg
jp
loope
and
sbb
in
add
dec
mov
sbb
sub
push
loop
mov
fs
mov
rcrb
sbb
in
mov
fstpt
pop
lods
push
insl
jle
jns
in
and
lahf
mov
hlt
sub
mov
add
xchg
dec
and
fwait
mov
rorb
jecxz
pop
test
hlt
push
and
lods
xchg
and
and
mov
add
push
imul
notb
clc
movsl
ftst
aad
das
add
cmp
mov
jns
and
sbb
sub
rolb
fmull
ret
mov
imul
jle
sbb
fld
divb
adc
xlat
adc
push
repnz
dec
lock
rcrl
cmpsb
imul
jmp
rorb
aas
push
mov
xorl
inc
scas
add
loop
xlat
stos
add
and
pusha
hlt
cmp
scas
les
jae
xchg
lret
pop
jg
push
jns
iret
nop/reserved
jg
cwtl
ss
dec
lds
fstpl
test
xlat
ja
inc
bts
sar
dec
pop
push
arpl
shll
ljmp
mov
cmp
sub
scas
aad
jne
dec
sti
mov
cmpsb
mov
std
push
sub
fwait
shll
push
mov
mov
test
cli
movsl
push
and
lret
sub
insb
cmp
test
cmpb
and
pop
bound
dec
enterw
clc
pop
outsb
and
xor
push
or
jns
inc
rorl
sub
jecxz
dec
fdivrs
push
push
push
clc
jg
xchg
lret
lds
andb
stos
stos
test
sub
fsubrs
das
ficoms
push
push
jmp
test
shrb
or
cmp
negb
jmp
dec
fs
inc
inc
das
cmp
into
xor
and
sbbl
leave
fs
mov
cmp
xchg
xchg
xchg
sub
testl
lret
cwtl
sbb
pop
adc
lods
jae
aas
push
inc
rcrl
fs
nop
xor
rorl
clc
out
xor
pop
xchg
xchg
js
lahf
in
mov
pop
fbstp
fwait
gs
lods
jnp
mov
fidivrl
jp
jp
jb
mov
jbe
mov
cmpsb
icebp
or
in
sbb
mov
shll
into
pop
sarb
out
push
sbb
mov
pop
xor
and
lods
or
adcb
xchg
loope
dec
push
inc
icebp
sbbl
mov
imul
insb
lret
sub
daa
leave
xchg
sub
inc
insl
mov
push
movsl
sahf
inc
adc
or
fs
sbb
lds
mov
ret
loopne
mov
sub
imul
cmpsb
xlat
jnp
and
aam
push
jl
icebp
ficoms
jle
insb
movsl
cmp
and
push
enter
loope
int3
cli
sti
adc
mov
dec
les
addb
or
add
cmp
into
pop
aam
push
test
arpl
lock
jnp
push
loop
jb
jle
pop
lahf
adc
mov
sti
cli
je
pop
adc
sub
pop
mov
movsl
adc
inc
mov
movb
dec
fsubrl
scas
fsubr
dec
dec
lea
xor
repz
xchg
jp
pop
dec
push
jmp
sub
fistl
pop
sbb
mov
gs
rorb
sbb
ja
jno
push
pop
push
inc
cmp
push
pop
sahf
mov
pop
jnp
cmp
mov
sub
push
push
xor
dec
push
into
cmp
sti
jbe
sbb
in
ljmp
test
fwait
jmp
xchg
and
pop
push
adc
add
outsb
mov
mov
je
sbbb
scas
fldt
mov
es
jae
in
adc
and
aaa
stos
imul
lods
je
xor
fisubrs
sbb
and
lret
jg
psubb
jmp
ds
loope
and
dec
or
push
xchg
push
sub
pop
sbb
loope
pop
pusha
push
ss
cmpsb
mov
aad
or
jmp
xchg
xchg
push
xchg
push
mov
cmpsb
inc
ljmp
xor
pop
scas
mov
jmp
sub
es
inc
dec
xor
mov
mov
adc
pop
xchg
and
pushf
into
imul
jae
insl
fsubl
in
aaa
jo
lret
inc
mov
ret
xor
inc
out
xchg
cli
lds
adc
cmp
daa
repnz
inc
es
out
and
dec
cld
xchg
mov
pop
aaa
cmpsl
in
fnstcw
jno
bound
adc
xchg
std
dec
scas
je
pop
lock
jbe
pop
dec
inc
jno
xor
ret
jbe
repz
dec
movsb
cltd
mov
push
sub
cs
in
xlat
mov
sub
jmp
cltd
sub
xchg
pop
sti
mov
stc
hlt
sub
adc
lret
rorb
pop
xor
das
cmp
push
push
es
sbb
and
aaa
mov
xchg
cmp
lods
mov
ja
adc
add
cmp
dec
xchg
adc
inc
test
push
in
enter
cmpb
jg
int3
rcrl
xchg
dec
inc
push
insl
jno
fcmovb
cmc
cmp
in
xor
push
aas
clc
mov
mov
jb
lods
sbbl
add
pop
int3
js
fmul
jb
cmp
adc
sbb
test
jle
addr16
int3
je
mov
test
or
out
pop
pop
sahf
sarl
dec
movsl
cmpsl
sub
into
js
js
or
cs
pusha
mov
pop
inc
xchg
call
divl
pop
sarb
insb
ljmp
cs
mov
xchg
cs
pop
push
testl
push
adc
cmp
cmc
scas
add
adc
enter
xchg
icebp
push
gs
movsb
mov
cmp
aad
ja
mov
push
push
push
dec
push
inc
dec
bnd
mov
pop
jnp
sbb
and
jg
in
sub
jbe
fsubl
es
leave
les
sti
dec
aaa
shll
mov
cmp
gs
pop
pop
xchg
ficoms
cli
scas
jnp
mov
sub
jne
addl
stc
push
stos
sub
in
nop
or
fbstp
int
in
mov
fsubrs
lock
out
es
js
sbb
insl
cmpsb
pop
cld
scas
sbb
jns
xor
cmp
inc
adc
sub
mov
gs
inc
mov
test
leave
sahf
mov
outsl
std
mov
sub
lods
add
das
pusha
inc
inc
stos
jbe
call
sub
xor
int
ret
cmpsb
sub
jae
cmpsb
in
es
push
imul
mov
sub
jle
bound
sbb
push
xchg
inc
lcall
xchg
fwait
stc
add
sub
fs
fdivr
popw
sub
imul
lods
dec
popa
sbb
add
fimuls
jo
bound
mov
repnz
pop
scas
mov
push
xchg
ret
aam
out
add
sbb
lret
enter
insb
sub
push
mov
jnp
sub
pop
sub
lods
cwtl
test
xlat
add
negb
sbb
xor
dec
mov
sahf
adc
jns
sbb
add
insl
scas
in
pop
rolb
dec
sub
cld
in
in
add
out
mov
lds
xchg
je
cmp
sti
popf
nop
jne
notb
mov
xchg
inc
inc
cld
cmp
add
pmaddwd
loopne
sub
cmp
ss
dec
pop
and
push
add
sub
pause
or
dec
push
push
aad
dec
jp
call
test
sarl
pusha
xchg
and
mov
jecxz
out
sbb
rorl
aaa
mov
cmp
rorl
cmp
pop
fwait
sub
jns
sub
or
call
dec
and
imul
inc
push
xchg
jo
sahf
push
xchg
popa
mov
ss
inc
cmpsl
notl
jle,pn
xor
pop
insb
insl
xchg
ljmp
jecxz
lock
lret
nop
jecxz
dec
add
fwait
sub
int
ret
test
cmp
lods
cmp
sbb
gs
mov
add
sub
jp
adc
subl
mov
pop
in
mov
add
imul
and
lea
jae
jnp
or
push
push
or
inc
dec
insb
inc
popa
js
ss
xor
add
jg
mov
rorb
mov
xchg
test
sub
lods
hlt
fsub
sbb
mov
or
dec
push
lret
lods
call
ss
xchg
xor
fxch
out
lret
pop
mov
test
insl
jbe
sub
out
adc
cld
arpl
push
mov
out
inc
jle
push
ret
stos
fisubl
insl
sub
xchg
cmp
inc
into
movsl
mov
xchg
dec
xor
test
outsl
test
xor
mov
and
imul
or
lcall
mov
jnp
cmc
lods
dec
sahf
add
iret
pop
mulb
push
and
add
jnp
or
pop
scas
shlb
mov
ja
adc
add
call
in
int3
testl
jle
xchg
adc
mov
and
pop
dec
dec
insb
fxtract
movsl
rorb
cmp
cmpsl
sbb
movsb
mov
mov
xchg
cld
mov
inc
jno
jecxz
mov
in
stos
scas
pop
adc
xchg
sbbb
call
inc
and
lcall
jno
push
int3
pushf
inc
bound
jmp
mov
mov
fcomps
pop
dec
ds
fcomi
push
addl
cmp
push
pop
repnz
js
cmp
les
jge
sbb
aas
mov
sahf
mov
movsl
mov
adc
xor
inc
jge
jo
xlat
insl
daa
rorl
in
push
xchg
mov
sbb
add
pop
push
sub
sub
xchg
xchg
inc
jmp
push
cmpsb
lret
mov
arpl
mov
loopne
cli
lcall
jmp
inc
das
mov
xor
in
xor
mov
add
shrb
xor
inc
nop
lds
push
dec
sub
fdivs
dec
sahf
push
push
mov
pop
in
and
cmp
sbb
lret
cli
loopne
pop
movl
cvtps2pi
mov
sub
stos
add
push
mov
shll
sar
leave
ja
into
or
jecxz
in
outsl
xlat
sub
and
call
pop
repnz
mov
mov
add
or
cmpsb
pop
cmpsb
outsb
sbb
fwait
add
mov
leave
fstps
scas
jo
sbb
fldcw
test
lds
stos
movl
fwait
pop
cmp
sbb
mov
mov
or
pusha
xor
dec
sub
outsl
in
movsb
in
mov
fldenv
cltd
add
jp
pop
sar
bound
mov
stc
cs
sbb
sub
out
push
inc
inc
inc
push
mov
out
push
insl
aam
mov
test
stos
lods
mov
ret
cwtl
shlb
xchg
sub
cmp
mov
mov
xchg
fmul
xchg
fs
mov
adc
in
pop
ja
aaa
push
loop
cmp
test
pop
xchg
mov
pop
sbb
movsb
sbb
test
add
test
ss
imul
push
mov
adc
mov
roll
pop
and
pop
xor
lret
inc
test
lods
add
xor
xchg
inc
loop
cwtl
xchg
adc
sub
insl
imul
cmp
xor
clc
push
xchg
and
or
dec
subl
stos
pop
cld
adc
dec
lret
cmp
fcompl
mov
push
adc
nop
inc
jo
pop
sub
in
xor
test
movsb
daa
cmc
leave
test
cld
cmp
test
lahf
shl
test
es
lret
add
mov
cwtl
and
lds
lea
add
push
loope
mov
xor
ja
aaa
cmp
sti
addr16
popa
pop
mov
lock
dec
hlt
adc
xchg
int
out
sbb
mov
lock
cld
dec
mov
sbb
mov
leave
stc
and
filds
xor
mov
loopne
insb
mov
imul
mov
sub
sub
and
xchg
cmc
or
inc
xchg
imul
jp
push
data16
add
filds
cmp
jb
xchg
mov
imul
movd
loope
pop
sub
loop
jecxz
xor
shlb
xor
stc
in
and
jl
nop
xchg
scas
lahf
add
pop
sbb
clc
mov
rorb
sahf
call
stos
ljmp
fsubs
sbb
shrb
jbe
and
lds
insb
cmp
loop
mov
dec
add
rcr
fdivrl
orb
adc
adc
jg
lods
adc
movl
pop
nop
enter
ret
or
mov
mov
fwait
inc
je
or
add
push
insl
xchg
or
jbe
cmp
scas
in
scas
addr16
xchg
int3
imul
mov
xlat
adc
push
mov
mov
subl
add
cmp
loope
roll
push
mov
lds
repz
bound
test
push
or
lcall
ss
ret
sahf
or
cltd
lret
div
loopne
or
fs
dec
mov
scas
lds
in
mov
mov
decb
xchg
sub
hlt
mov
mov
cwtl
or
fs
inc
xor
std
dec
push
add
xor
sbb
mov
pop
and
pusha
ss
push
inc
and
outsb
pop
insb
sbb
xor
test
pop
insb
adc
pop
aas
scas
or
dec
fistl
sub
add
add
call
ret
lock
add
dec
jb
fwait
ret
bound
cwtl
imul
push
out
arpl
sub
pop
sub
aad
aam
mov
insb
lds
andl
insl
add
add
lret
dec
sbb
or
pop
cmp
addr16
ret
sbb
sub
sti
cmp
mov
bound
cmc
rclb
clc
cwtl
int3
inc
cmp
movsl
and
fcmovne
repnz
mov
imul
lds
scas
mov
in
xor
dec
divl
popa
add
fsts
cmpsb
mov
jg
xor
jb
jae
outsl
loope
sbb
fidivrs
shlb
and
fstp
int
mov
scas
in
lods
cmp
sub
xor
sbb
int3
xor
sbb
inc
xchg
fs
nop
mov
cmpsl
lods
inc
notb
lret
dec
pop
xchg
sti
pop
inc
push
into
jo
das
adc
push
pop
mov
jb
imul
xchg
mov
mov
pop
pop
mov
dec
push
and
pop
ret
mov
jmp
xor
cmp
push
subl
into
xor
push
mov
leave
lcall
dec
test
push
aad
lds
lods
ljmp
adc
pushf
data16
popf
mov
insb
dec
mov
loopne
lahf
cmpsb
mov
in
cmp
inc
in
adc
pop
xor
inc
lcall
push
mov
cmp
cmp
nop
stos
in
push
jnp
sbb
sub
stc
mov
lds
dec
aam
adc
fisubrs
adc
dec
aam
gs
xor
cmove
cmp
je
mov
mov
shll
pop
js
pop
push
mov
sahf
and
jbe
js
jae
mov
aas
rclb
mov
mov
push
cmpsb
fstps
test
jb
je
push
jle
je
divl
pop
das
adc
jno
pop
add
pop
xor
and
push
ret
jb
mov
shll
fisubrs
outsl
dec
sbb
scas
inc
xor
cmp
inc
jb
lods
dec
cmp
sbb
pop
pop
fisubs
jb
add
pusha
push
lcall
sbb
push
fwait
inc
lock
scas
cmpsb
stc
sbb
lahf
mov
sahf
pop
xchg
ret
push
pop
das
and
lret
dec
imull
push
imul
mov
adc
mov
mov
mov
push
enter
and
xchg
sbb
lret
inc
imul
push
and
jmp
mull
jecxz
aad
in
lahf
pop
enter
pop
mov
les
sub
sbb
cmp
hlt
dec
or
adc
inc
dec
sbb
lahf
ljmp
sbb
mov
push
xor
cmp
scas
movsl
pusha
fistpll
cli
xlat
dec
or
adc
add
jmp
cmp
or
subb
mov
mov
or
xor
dec
pop
or
orb
adc
jns
sub
mov
or
and
jmp
mov
xchg
in
push
shll
add
push
aas
xor
pushf
insb
into
call
out
pop
jne
imul
mov
mov
testl
shl
popa
call
pop
sbb
and
imul
cmovp
mov
push
in
xor
pop
leave
adc
xchg
popa
sbb
or
sbb
jecxz
dec
lret
fistps
mov
scas
outsb
jbe
stc
sbb
mov
data16
repz
mov
add
dec
rorl
push
fldl
sbb
and
xchg
loopne
idiv
mov
addr16
jns
push
cltd
jecxz
jb
ja
cmc
xor
stc
pop
mov
imulb
lcall
popf
xorl
sub
inc
jg
repnz
sub
mov
hlt
push
cmp
movsb
mov
int3
adc
fwait
pop
pop
fcomps
shl
xor
sub
fmull
pop
adc
hlt
dec
sub
push
lds
or
bound
andb
das
gs
ljmp
push
cmc
mov
insb
ret
or
fs
sbb
dec
jecxz
xor
icebp
mov
jle
shl
jnp
mov
cmpsb
and
push
fbstp
pop
mov
rorl
jae
test
ds
das
mov
lds
and
pop
hlt
decl
adc
arpl
imul
jo
fisubl
mov
orl
jmp
cwtl
dec
in
pop
sbb
scas
sahf
scas
mov
subl
pop
pop
subb
adc
add
add
mov
xor
ret
adc
jno
push
cmp
mov
fcoms
fldenv
jmp
and
cmpsl
or
outsb
and
pop
or
inc
add
cld
std
and
mov
outsb
or
mov
pop
icebp
loop
pusha
ss
or
fidivs
xchg
loopne
in
fnstcw
scas
xchg
pop
call
pusha
or
imul
pop
sbb
xchg
cmpsl
lret
hlt
jae
pop
jge
in
ds
push
or
pop
aam
int3
xchg
xchg
outsb
mov
shlb
ja
sub
xchg
add
mov
add
jnp
fsubrs
jnp
add
jge
leave
push
jae
sub
dec
cmp
or
cmp
mov
sub
dec
fisubrl
push
movsb
mov
dec
xor
xor
enter
push
cmp
jg
push
mov
add
inc
mov
pushf
rcl
sub
out
cmpsl
sbb
push
mov
cltd
push
leave
jl
movsb
mov
outsl
dec
mov
push
shrb
xchg
mov
insb
xchg
inc
insb
jecxz
out
cmpsb
dec
imul
rclb
jae
mov
clc
int3
add
incb
stc
mov
pushf
es
cmp
mov
ffree
loope
mov
or
ret
inc
push
xchg
add
jmp
pop
rcr
sbb
mov
or
xchg
push
stos
cmp
imul
cmc
sub
shll
cmp
adc
sbb
sbb
outsl
rcrb
pop
lds
and
fwait
dec
xor
mov
mov
mov
mov
or
mov
jno
mov
add
and
push
or
in
sbb
mov
dec
sbb
cmp
inc
ljmp
xchg
push
fisubs
mul
int3
sub
stos
jns
pop
push
sub
lds
mov
jmp
icebp
push
or
mov
pop
inc
ret
xor
cmp
ss
inc
and
mov
out
mov
xor
fldenv
sub
inc
inc
hlt
out
sbbb
mov
gs
rol
xchg
repnz
adc
insb
cwtl
jno
cmpsl
lock
mov
sarb
test
xchg
sub
pushf
cvttps2pi
mov
stos
pop
fdivrs
dec
popa
xor
mov
pop
das
call
addr16
imul
sbb
pusha
dec
add
pop
push
ret
mov
or
es
mov
adc
mov
sbb
out
imul
mov
es
es
clc
xor
xchg
frstor
xchg
dec
adc
stos
sahf
and
enter
aas
inc
adcb
add
mov
cmp
xlat
pusha
movsl
fwait
std
lods
ja
or
mov
scas
dec
add
int3
push
stos
iret
sbb
mov
dec
test
mov
mov
xchg
jns
popa
jmp
dec
out
popa
dec
push
cmp
cmpl
pop
push
andl
mov
fldenv
imul
repz
cld
outsb
adc
jp
pop
es
jb
pop
xchg
xchg
out
sub
ljmp
in
das
xchg
in
test
pop
out
dec
clc
sbb
xchg
xchg
into
add
add
test
cmpsb
movsl
fxch
inc
and
ljmp
addl
cmpsl
dec
movsl
aad
xchg
jecxz
call
xchg
lods
inc
and
pop
outsb
ja
test
push
mov
out
addr16
scas
cmp
pop
sub
lods
or
sub
xchg
adcb
mov
pop
stc
sti
movsb
mov
sar
jbe
dec
sbb
xchg
mov
das
clc
cmp
inc
pop
ljmp
lcall
fidivrs
negl
mov
test
xor
cmp
sarl
xrelease
xchg
pxor
jp
sbb
loopne
dec
lock
in
jge
scas
movsl
scas
xlat
mov
mov
aam
inc
cwtl
dec
mov
insl
ret
scas
ljmp
data16
push
push
cmpsb
sub
xor
cltd
test
mov
dec
in
inc
mov
insb
mov
inc
das
dec
shll
popf
fisttpl
sbb
fiaddl
cltd
mov
addl
inc
and
popf
rclb
and
and
xchg
xor
fidivl
iret
popf
subb
sub
and
in
fs
in
pushf
push
push
and
mov
ficoms
jg
dec
sarb
pop
mov
pop
pop
popf
add
push
jp
cs
fsts
add
push
push
jb
test
or
sbb
xchg
je
ja
mov
lods
xchg
je
lret
and
out
scas
jbe
push
jecxz
xchg
cmpsb
lcall
push
lds
and
xchg
pop
dec
daa
mov
cmp
lods
das
or
add
es
inc
outsb
mov
adc
inc
push
jns
sbb
out
inc
mov
cmp
push
push
or
movsb
in
mov
mov
ss
or
int
push
add
rcl
cmpsl
pop
mov
loopne
xor
push
jne
sub
or
mov
xchg
scas
or
stos
sbb
pop
and
repz
sub
add
cmc
jne
sti
xor
dec
lret
imul
sub
adc
scas
int3
push
pop
mov
jle
jle
xor
sbb
mov
shll
sub
mov
gs
mov
adc
lret
sti
popf
and
fidivs
pop
and
into
sbb
data16
xor
xor
cmp
ficoms
ljmp
or
in
popa
out
fbstp
pop
mov
stc
inc
cmc
jb
aaa
aas
dec
scas
dec
sub
mov
mov
and
xchg
jb
in
lds
inc
pop
lahf
stc
int
stc
push
pushf
cmp
push
addr16
stos
and
js
ljmp
push
xor
or
repz
js
adc
movsl
pop
jg
mov
and
xchg
testl
adc
pop
std
out
cli
lds
jg
movsl
push
inc
popf
xor
sbb
jecxz
stc
pop
xorb
cmp
dec
mov
jnp
ficompl
xor
adc
lretw
dec
orb
xchg
out
fs
jle
insb
mov
mov
movsl
push
ffreep
cmp
push
stos
jg
in
adc
and
add
and
mov
jle
pop
sub
cmp
and
sbb
pop
stos
sbb
mov
jge
inc
inc
xor
cld
xchg
push
shll
mov
or
out
or
aaa
inc
rclb
cltd
push
push
xchg
mov
mov
cmp
pop
push
dec
test
add
clc
jbe
push
mov
mov
insl
nop
andb
movsb
mov
push
outsb
xlat
insl
pop
jl
jge
iret
ds
add
pop
orps
jl
cmp
dec
inc
pop
jmp
lahf
adc
dec
xchg
enter
les
push
xchg
pop
out
add
push
xchg
je
xchg
iret
jb
imul
jp
dec
inc
push
xor
jb
sub
mov
scas
repz
pop
mov
cmpsb
xor
or
enter
pop
xor
pusha
jbe
jmp
sbb
icebp
scas
mov
mov
out
push
dec
call
push
scas
dec
leave
jl
xchg
mov
mov
fadds
leave
mov
out
sub
cs
dec
movsl
mov
push
dec
je
mov
hlt
mov
mov
sub
std
push
cmp
inc
cmp
push
jp
xchg
cmc
and
nop
and
orl
cld
jns
shlb
gs
insb
xchg
adc
int
push
aaa
jbe
push
dec
cltd
fisubl
push
mull
cmc
leave
hlt
cmp
fidivl
inc
in
mov
pop
add
pop
enter
or
inc
xchg
imul
mov
in
repz
rorl
pop
inc
inc
inc
iretw
sbb
icebp
dec
sbb
loopne
mov
loop
insl
xchg
jg
cs
cs
and
and
dec
in
ss
inc
mov
pop
jbe
add
aas
popf
js
push
dec
push
loopne
sahf
mov
and
cltd
mov
and
data16
mov
and
pop
inc
sti
add
leave
adcl
pop
popa
and
jb
cmp
cltd
jo
fs
lea
fs
lods
sub
hlt
mov
pop
fstl
push
dec
adc
lds
xor
xor
jbe
xchg
scas
push
push
mov
sub
xor
out
dec
idivl
mov
mov
lret
xor
sub
push
sbb
lcall
add
mov
data16
inc
ja
ds
iret
movsl
shll
mov
out
push
lds
dec
icebp
inc
insb
mov
std
dec
stc
sub
cmpsl
jne
movsb
add
adc
fildll
adc
ret
clc
push
int3
in
idivb
cmpsb
sbb
adc
imul
divl
xor
push
leave
xchg
push
dec
das
movsb
and
in
or
mov
or
imul
mov
pop
lods
pop
xchg
inc
out
push
insb
into
and
stos
xlat
pop
idivl
sub
dec
enter
jmp
lods
addr16
mov
pop
jmp
aaa
cld
iret
sub
das
xchg
mov
xor
aad
je
sub
imul
pop
push
jae
adc
paddw
dec
mov
adc
push
jno
mov
pop
ss
into
cmovle
cld
jb
sbb
mov
jne
xor
add
sub
inc
mov
test
repz
movsb
inc
pushf
dec
lahf
rorl
pop
push
add
mov
out
dec
adc
ror
pop
scas
cmp
push
inc
sbb
sahf
lahf
lds
loop
rorl
mov
push
mov
push
mov
mov
sbb
adc
or
bound
cmp
aaa
jb
test
fadds
mov
push
pop
adc
xor
int
mov
scas
cli
aam
mov
adc
pop
lds
sub
lret
into
mov
enter
aaa
and
dec
xchg
mov
fdivs
andb
jns
mov
jecxz
or
cmpsb
imul
aam
mov
sbb
pop
popf
gs
dec
iret
add
sti
mov
mov
vpsrlw
mov
nop
jo
ret
insb
repz
and
dec
mov
ja
lret
pop
cmp
ss
mov
jmp
js
and
adc
lret
mov
cmp
test
inc
mov
lcall
hlt
mov
dec
push
sbb
mov
fisttps
pop
filds
fxch
add
mov
shlb
jne
cmp
cmpsl
jo
dec
repz
jmp
sub
ficoms
mov
lods
push
jle
and
int3
push
punpckhdq
stos
xchg
push
test
fwait
stos
xchg
scas
mov
dec
loope
push
popa
dec
xchg
adc
inc
rcrl
push
icebp
jb
out
sbb
mov
ret
popf
shll
popa
inc
mov
les
push
and
loope
push
mov
gs
push
dec
shlb
dec
adc
mov
cwtl
mov
cmp
xchg
in
std
imul
dec
add
adc
loopne
pop
pop
cmc
js
mov
jg
icebp
add
jno
iret
rcll
idivl
mov
cld
add
push
lds
ret
cmp
js
mov
or
jg
aas
gs
jp
push
ret
lahf
adc
idivl
mov
jo
cmp
mov
mov
jb
fs
dec
repnz
cmpsb
aaa
and
adc
xor
ficompl
mov
bound
mov
mov
fcoms
cmp
mov
cs
push
aas
aad
or
mov
sub
aas
scas
pop
adc
int3
lds
hlt
lds
jns
jg
adc
push
sbb
and
adc
dec
pop
jge
lret
mov
mov
dec
lret
rcrb
add
hlt
stos
sub
pop
out
xor
gs
xorl
xchg
js
aam
jge
mov
cmp
imul
push
inc
lods
xchg
mov
push
fsubrs
xchg
outsb
pop
aaa
adc
fisttps
push
loopne
xchg
push
leave
outsb
rcrl
xchg
aaa
inc
cli
mov
clc
pop
jmp
dec
push
cmp
mov
in
mov
bound
pop
xor
mov
xorb
add
mov
scas
jne
mov
aas
sub
sub
xorb
lcall
xchg
fsubs
mov
lcall
xor
push
insl
ss
shr
movsl
insb
cmpsb
pop
cmpsl
xor
sbbb
mov
sub
adcw
jnp
into
xorl
test
and
push
cmp
int
shll
add
outsb
mov
mov
sub
cld
push
syscall
push
ss
and
pop
pop
je
imul
pop
icebp
mov
jae
pop
out
inc
adcb
jmp
rorl
out
fsubl
xor
push
repnz
je,pn
jmp
add
ret
fimuls
aaa
movsl
fistl
jp
lret
int3
ds
push
arpl
push
or
cmp
jmp
aaa
inc
xor
mov
loopne
push
lret
xchg
adc
scas
or
sub
enter
xchg
cmp
cli
adc
out
nop
sub
aam
es
push
nop
jg
std
sub
and
popf
pop
out
stos
lods
jne
fisttps
cltd
and
push
jmp
outsl
push
jns
leave
sub
or
or
inc
das
cs
push
mov
arpl
into
pop
dec
lcall
or
adc
cmpsl
inc
add
or
fisubl
mov
or
imul
push
jae
pop
testb
mov
or
test
add
jg
sub
int3
mov
sti
cmc
cmc
push
and
push
sub
andl
mov
mov
inc
jne
xor
fcom
aad
ds
mov
xor
dec
dec
in
mov
test
jg
shrl
dec
push
cmpsb
mov
test
ja
sub
aad
sti
xchg
sbb
cs
and
push
xchg
xchg
add
lock
sub
xlat
out
shll
jge
push
test
mov
movsl
int
outsl
hlt
adc
sub
test
mov
xchg
repz
mov
add
into
sub
push
mov
cmp
sbb
ja
ljmp
sti
or
push
dec
or
lret
loopne
ret
and
cmp
xchg
js
xor
dec
sub
mov
jne
shl
mov
mov
test
stos
scas
pop
fisttpl
shrb
mov
cmp
adc
dec
repz
or
mov
pop
add
add
sub
addl
test
mov
aas
sbb
jge
out
cltd
push
dec
mov
imul
fisttps
xor
adc
and
insl
or
test
popf
jmp
lretw
jle
push
in
insb
jl
loopne
loop
cwtl
les
pop
adc
xor
out
jbe
call
or
jle
lahf
aaa
shlb
cs
js
xor
cmp
jp
xor
push
hlt
jp
jno
or
or
fmuls
sti
push
fcoms
repz
sbb
faddl
inc
pop
jne
xchg
mov
int3
insb
and
push
je
cmp
mov
and
mov
cmp
fisttps
fcomps
cmp
dec
iret
jo
adc
sbb
cmpb
dec
cli
push
shr
mov
sahf
clc
out
dec
xchg
test
fwait
call
out
dec
in
jae
dec
inc
pop
cli
pop
dec
gs
mov
xchg
push
cmp
dec
es
in
dec
sbb
xchg
cmc
mov
and
pusha
and
js
and
filds
mov
aas
push
xor
cmp
push
dec
mov
xorb
sub
jb
lods
scas
mov
adc
rorl
and
fimull
iret
mov
and
lahf
jb
addb
push
fcompl
fmuls
cmp
ret
jmp
lea
pop
mov
mov
sub
and
cmpsb
pusha
inc
pop
sbb
mov
movsb
sbb
push
adc
push
jg
xchg
mov
push
mov
lahf
push
test
lret
jle
repz
xor
pop
les
and
pop
cmc
pop
inc
testb
sbb
fdivs
jo
jne
mov
mov
imul
gs
sar
imul
rorb
adc
xchg
xchg
mov
jns
push
add
add
mov
xor
js
andb
fisubs
leave
aad
pop
clc
aam
jp
push
js
adc
push
icebp
sub
inc
aad
mov
mov
insb
and
fadds
sbb
lock
out
adc
imul
pusha
pop
ror
sahf
and
ficoml
jle
lret
mov
adc
loopne
or
in
jns
push
loopne
fdivr
add
push
cmp
js
test
pop
sbb
xchg
push
out
and
scas
push
sti
mov
dec
xchg
and
pop
pop
mov
imul
mov
cmp
dec
stos
stos
add
jo
xor
mov
inc
les
inc
ficoms
fistl
cmc
clc
iret
adc
ljmp
rorb
out
add
mov
jmp
sbb
mov
mov
daa
test
inc
and
and
inc
ret
sub
stc
dec
sbb
xor
xchg
pop
adc
inc
bnd
data16
add
stc
adc
jmp
gs
or
pop
xchg
aaa
movsl
or
js
cwtl
mov
add
nop
add
adc
jns
adc
in
es
test
frstor
jae
fldcw
iret
loopne
inc
mov
cld
mov
jp
sbb
cmp
ljmp
call
pushl
cmp
cli
jb
ljmp
repz
mov
dec
out
cmc
or
inc
mov
mov
jge
mov
adc
xor
scas
lret
lcall
inc
xchg
rcl
xchg
sarl
pop
mov
sahf
repz
scas
cmp
ret
pop
mov
pop
pop
adc
push
push
dec
dec
dec
mov
int
daa
mov
sbb
cltd
cli
sbb
popf
test
shll
sub
enter
movsb
dec
jmp
and
jecxz
bound
lds
fs
ljmp
and
inc
loopne
mov
adc
jp
sub
pushf
fsubl
inc
mov
jecxz
push
lea
push
cs
jno
inc
mulb
cwtl
cmpsb
sarl
sbb
push
xor
or
cmp
std
sbb
mov
inc
jne
xchg
mov
cmpsb
out
js
ds
shll
ja
fadd
ljmp
imul
sbb
divb
jge
add
std
cld
mov
push
sub
push
inc
add
xchg
jbe
jne
int
std
xor
pusha
aad
lret
xor
or
in
iret
pusha
push
ret
xor
or
adc
test
lret
jo
push
sub
pop
inc
das
sub
sbb
xchg
push
xchg
pop
inc
add
imul
lret
dec
inc
aas
push
xlat
enter
pop
repz
imul
ror
add
pop
and
push
mov
and
std
pop
push
movsb
cs
jae
add
lods
inc
rclb
lock
lea
cmp
scas
pop
jns
rorb
sar
add
and
jb
scas
inc
adc
push
jae
dec
mov
dec
sub
inc
inc
jmp
cltd
scas
or
mov
or
cmp
lret
sbb
int
lea
and
das
push
adc
xchg
mov
imul
adc
cld
push
ljmp
adc
xlat
sub
jns
fcmovnu
lods
jb
bound
test
sti
inc
aaa
xorb
jb
mov
xor
xor
ret
std
mov
stc
std
sbb
and
sbb
mov
out
and
repz
lea
sub
fidivs
cmp
or
int3
jo
mov
jbe
xchg
lahf
popa
ret
mov
lret
pop
das
shl
daa
dec
xchg
xchg
mov
hlt
outsb
lods
stos
mov
daa
add
in
dec
in
pop
iret
sbbb
jnp
adc
ljmp
mov
mov
xor
mov
sbb
pop
ja
je
hlt
mov
sbb
mov
loop
adc
mov
cmp
mov
mov
cld
pop
xchg
pop
adc
data16
lcall
inc
add
scas
push
popf
movsb
loop
mov
cwtl
das
xorb
sub
cld
fsubs
outsb
adc
mov
mov
mov
add
cld
jge
add
cmp
cmp
mov
dec
xchg
fisttpll
inc
sbb
mov
push
jb
icebp
jmp
lea
out
lret
loop
aas
mov
daa
inc
jns
aam
mov
lds
call
fwait
sbb
pop
and
mov
push
mov
scas
mov
inc
pop
sbb
aad
aam
xchg
xor
shl
je
dec
arpl
hlt
sub
and
aaa
pop
test
es
aad
mov
and
into
sub
jl
xor
push
adc
jnp
in
pop
jp
add
jbe
test
pop
jae
out
sti
cmp
ljmp
xchg
dec
pop
test
aam
xchg
mov
jl
mov
aaa
cmc
push
pop
push
jp
cmp
mov
lret
arpl
mov
in
jnp
in
stos
sub
fnstenv
mov
pop
sti
and
ja
mov
iret
sub
dec
dec
pop
xor
inc
pop
dec
pop
pop
xlat
mov
jb
iret
pop
lea
jno
jge
cwtl
fnstcw
mov
pop
pop
push
into
lret
push
mov
sarl
std
lret
outsb
or
stc
or
ss
aas
out
mov
int
mov
ret
push
mov
pop
popf
in
das
mov
pop
stos
mov
xorl
in
aas
cmp
push
imul
leave
inc
push
jg
clc
dec
and
xor
jl
inc
mov
and
je
xor
pop
and
dec
mov
negl
xor
push
sub
cs
add
mov
test
ds
mov
push
test
and
sbb
mov
lahf
inc
xor
popa
inc
xchg
insl
lock
push
xor
in
fiaddl
test
add
or
aad
aas
sahf
andb
xchg
imul
cmpb
gs
dec
mov
pop
jl
cs
cld
add
dec
rorb
adc
add
cwtl
mov
test
nop
test
testb
cmp
sti
push
fidivrs
cmpsl
and
leave
loop
test
sbb
jecxz
cmp
in
or
addr16
xor
mov
or
jbe
clc
fiadds
ljmp
adc
lret
dec
rorb
dec
loope
sbb
xchg
stos
pop
fstps
pop
dec
xor
sbb
push
call
dec
dec
sub
mov
fs
out
pop
push
hlt
fsubs
sub
cltd
in
and
enter
xchg
xchg
ja
mov
or
inc
mov
mov
mov
push
pop
pop
std
jae,pt
or
and
push
filds
jmp
push
fistpl
pusha
fsts
inc
fs
je
inc
mov
sarb
stos
mov
decl
pusha
adc
fadds
push
insl
pop
cwtl
pushf
es
or
xor
xor
gs
lds
addl
dec
insl
scas
icebp
cmc
int
mov
ficomps
js
and
cs
mov
or
mov
mov
icebp
shrl
pop
mov
or
adc
xor
mov
test
push
adc
mov
inc
popa
hlt
sub
addr16
std
ljmp
call
hlt
and
jge
mov
xor
add
push
cmc
ljmp
xchg
push
repz
mov
fs
mov
mov
mov
nop
mov
mov
jp
nop
int3
sbb
enter
jbe
and
fxam
cltd
xor
jecxz
sbb
cmp
pop
pusha
iret
daa
or
and
imull
aad
idivl
push
stos
ret
adc
sbb
ja
push
xchg
pop
push
dec
inc
popf
mov
cmp
adc
inc
mov
push
pop
fcoml
rcrl
into
add
stc
or
jne
fisttpl
jno
nop
mov
insb
aaa
inc
out
pushf
lods
cld
addr16
sbb
pop
in
in
rorb
mov
jnp
inc
movsl
lcall
cmp
rclb
arpl
push
imul
andb
pop
sbb
fdivl
or
mov
dec
into
push
scas
mov
mov
pop
cmc
movsl
inc
movl
xor
ret
or
sbb
xchg
jno
mov
pusha
arpl
sub
fucomi
popf
xchg
addb
repnz
lret
push
in
pop
lret
in
insl
repnz
mov
aad
test
push
jnp
push
arpl
das
adcl
call
mov
imul
addr16
loop
add
stos
mov
and
mov
dec
push
or
xor
cmp
adc
lods
and
mov
add
fs
add
aaa
dec
fucomip
out
mov
aad
or
sar
or
testl
clc
jne
in
push
mov
mov
sahf
cmp
jbe
mov
movb
mov
pop
mov
repz
mov
lcall
out
stos
aaa
mov
sbb
sti
mov
jecxz
push
arpl
xchg
repz
rclb
xor
rcr
push
jp
jbe
mov
adc
adc
sub
push
out
loop
xor
icebp
push
cld
sbb
std
mov
jp
push
pop
aad
lods
clc
mov
mov
cld
adc
xchg
pop
or
xchg
push
dec
pop
push
ss
pop
and
adc
jbe
ffreep
aam
sub
not
adcb
stos
addr16
jp
jg
pusha
mov
push
in
mov
mov
ljmp
lods
mov
dec
enter
out
jnp
cltd
push
push
xchg
mov
out
mov
push
repnz
lea
push
scas
rolb
pop
cmpsl
pop
stos
pop
xor
jmp
cwtl
jo
cwtl
jl
cs
cmp
loop
insb
or
movsb
push
jp
and
add
cmp
aad
add
add
mov
xorl
or
std
fidivrl
dec
cwtl
mov
mov
stos
jo
sub
pop
mov
mov
cli
neg
mov
pop
addr16
xorb
leave
bound
or
xchg
std
cmp
push
cli
bound
or
add
cwtl
hlt
xor
xor
and
mov
shlb
out
aad
pop
and
inc
loope
or
sbb
xchg
jbe
lcall
js
call
mov
int
adc
les
loop
inc
scas
shlb
jnp
fcomp
test
xchg
sbb
mov
inc
mov
inc
xchg
outsl
in
mov
dec
adc
mov
cltd
fcompl
lea
xchg
mov
fimuls
mov
sbb
dec
adc
je
dec
ja
fdivrs
jo
mov
xor
cmp
cmp
pop
rclb
xor
pop
dec
xorl
lahf
sahf
cmp
mov
mov
dec
add
sub
xor
xor
sahf
repz
testb
add
add
decl
aad
lods
ret
sub
inc
ljmp
cwtl
jp
xchg
sub
dec
mov
push
jno
loop
cmp
rcll
xchg
mov
mov
std
ljmp
jae
loopne
stos
cwtl
nop
adc
push
sub
push
lock
sbb
push
and
call
mov
pop
xchg
loop
mov
mov
test
aas
inc
pop
rcrb
xchg
add
aad
scas
cmp
into
xchg
pop
icebp
subb
sub
rcr
or
push
push
call
das
lcall
repz
incl
aam
pop
dec
scas
mov
sahf
shlb
arpl
ss
pop
iret
movsb
fstl
and
xor
jno
mov
outsb
call
scas
pop
idivb
mov
adc
pop
into
shll
pop
dec
cmp
fistpll
cld
jp
push
sub
fnstcw
loopne
sahf
sub
pop
mov
fdivr
in
fs
test
inc
sbb
shrb
enter
mov
adc
leave
mov
add
and
push
hlt
js
mov
pop
sub
xchg
popa
enter
stc
into
mov
sti
lock
sub
sbb
cmc
inc
xor
frstor
dec
rclb
sbb
movsb
lock
fwait
mov
ljmp
jmp
test
dec
cmpsl
add
lods
fcom
out
stos
jmp
fdivr
inc
leave
and
cmp
jbe
mov
inc
mov
mulb
sub
pushf
or
ret
pusha
dec
xchg
pop
jle
insb
xchg
stc
leave
divb
out
add
fs
mov
add
out
cmp
sbb
xor
or
xor
cmp
cmp
jb
sbb
cs
movsb
cmpsb
aas
movsb
add
iret
pop
xchg
mov
xchg
arpl
cmp
mov
jl
aas
mov
sbb
dec
cs
daa
insl
dec
jl
lret
mov
ss
lret
pop
mov
loope
xor
in
outsl
andb
pop
cwtl
iret
out
cli
or
popf
push
pop
dec
mov
mov
fadds
icebp
sbb
scas
fcmovnb
stos
push
in
add
aas
fdiv
cmp
clc
xor
popf
mov
enter
inc
daa
in
jecxz
jae
mov
jbe
push
popf
xorl
loope
aas
cld
ds
clc
outsl
mov
and
push
add
clc
test
pop
stos
mov
pop
inc
pop
pop
rcll
insl
lods
cmpl
cltd
imul
xchg
jecxz
add
pop
shll
and
call
out
cld
test
ja
mov
mov
cmp
jns
iret
ret
xchg
jns
xor
movsb
sbb
add
int3
lret
je
addr16
push
mov
imul
and
adc
and
pop
outsl
inc
sbb
loope
push
mov
loope
mov
loope
inc
mov
lar
lock
das
sub
xchg
add
and
sub
pusha
pop
subb
lahf
pop
lods
or
cmp
fsubr
shrb
inc
push
sbb
xor
cltd
xor
inc
jmp
loope
fldcw
sahf
mov
ret
rolb
jecxz
dec
lahf
fwait
rolb
jl
test
mov
iret
ljmp
stos
xchg
imul
sbb
pusha
xchg
dec
adcl
push
lcall
fnstcw
jp
fildll
je
inc
dec
fidivs
mov
inc
hlt
in
ljmp
inc
jp
addr16
add
out
adc
xor
lret
scas
or
sub
nop
lcall
sbb
inc
jno
out
enter
xor
aas
loope
je
std
test
xchg
add
mov
mov
push
fisttpl
dec
xchg
pop
mov
sbb
mov
iret
push
fisubl
out
movsl
dec
dec
bound
das
mov
cmp
icebp
mov
jl
dec
and
movsl
lods
sbb
jle
dec
mov
pop
fiaddl
in
mov
cld
jns
or
mov
pop
jp
repnz
xor
test
loopne
in
fdivs
xor
cmp
cli
daa
sbb
xchg
pop
sahf
loope
pop
push
lret
xchg
sbb
out
sub
sub
push
mov
and
xchg
jo
cmpsb
out
adc
pop
jle
mov
sub
addr16
lcall
lods
clc
leave
ret
mov
sbb
xorb
mov
sub
in
mov
dec
and
adc
xor
adc
int3
out
jmp
jno
pushf
rorl
stos
sub
ds
xchg
mov
and
call
jnp
pop
sbb
out
push
repz
add
jo
popa
and
add
leave
xlat
and
cmc
push
in
adc
pop
xchg
push
rcl
push
popf
or
fnstcw
xor
out
pushf
lret
or
lea
add
inc
dec
lcall
mov
mov
dec
rcll
leave
fists
ds
jp
inc
inc
cwtl
loopne
or
daa
jmp
mov
sub
pop
inc
pop
fldl
and
xchg
mov
cmp
mov
loope
xor
faddp
push
inc
insb
ret
inc
hlt
dec
repnz
pop
popf
rorl
mov
ja
pushf
enter
dec
cmp
dec
clc
push
pop
je
sub
cmpsl
repz
call
xchg
mov
xchg
gs
std
push
jne
lea
ljmp
sahf
mov
popa
call
js
mov
mov
movsl
insl
add
cltd
sub
cld
jp
out
sbb
dec
jmp
add
orl
std
xchg
fmulp
cltd
inc
or
mov
scas
int
movsl
loop
jl
push
adc
repnz
or
cmpsb
lods
test
pop
leave
jecxz
aaa
pop
cli
mov
mov
jg
into
mov
call
dec
shlb
insb
test
je
loope
jne
ficoms
in
mov
pop
and
fidivl
in
mov
int3
fsubp
out
shl
inc
shl
jnp
push
stos
stc
xchg
dec
add
cmp
test
jg
fwait
leave
aaa
clc
fdivrl
or
pop
dec
int
iret
jbe
imul
jmp
and
ss
incb
jns,pn
xchg
mov
inc
pop
loopne
or
in
push
leave
movsl
push
fnsave
jg
mov
out
push
xchg
std
pop
mov
push
stc
ret
inc
int3
sbb
adc
jmp
sub
imul
sub
fs
push
mov
mov
jmp
dec
cld
aas
mov
popf
ret
in
outsl
pop
jle
mov
stos
cmp
lgs
cwtl
sbb
fucom
xor
pusha
push
cmp
fnstcw
out
bound
adc
push
movsb
mov
adc
out
xor
faddp
aas
icebp
pop
xor
cmp
into
leave
mov
insl
ret
mov
xchg
testl
repnz
push
repnz
add
jle
fst
sbb
pop
out
cmp
mov
repz
mov
cwtl
test
shlb
hlt
dec
fs
lret
jle
add
int3
ret
push
cs
xchg
xlat
outsb
push
mov
popa
loopne
mov
add
jne
imul
cmp
stos
dec
jns
pop
mov
add
xor
jbe
or
outsb
sbb
loop
cli
inc
sub
testb
outsb
jmp
adc
inc
and
jecxz
shrb
cmp
rolb
jns
jb
test
lret
imul
stos
inc
inc
jge
in
push
jnp
arpl
das
inc
ja
adc
scas
push
pop
negb
fistpl
push
fisubl
adc
xchg
cmp
xchg
lcall
cmpsl
mov
in
insl
sbb
insl
adc
lret
lods
pusha
add
xor
jecxz
test
dec
mov
pop
pop
inc
inc
sub
cld
hlt
mov
mov
or
das
cli
orl
mov
into
xchg
mov
xor
adc
out
sbb
aam
bound
mov
cwtl
jb
mov
xchg
adc
sub
mov
jno
int
or
cs
mov
or
cmp
lea
out
clc
lret
in
xor
lods
adc
xor
je
dec
add
cwtl
bound
ljmp
sbb
add
cmp
pop
lcall
ret
push
cmpsl
inc
xor
lods
adc
test
push
xchg
dec
jmp
cld
fcmovnbe
xchg
es
test
popf
inc
test
sub
jbe
jmp
sbb
cmpsb
fisttpl
mov
inc
inc
imul
xchg
jecxz
les
mov
leave
dec
mov
aaa
or
lods
mov
jo
out
je
pop
les
mov
jns
pop
push
iret
xchg
mov
fsubl
mov
sbb
mov
xchg
xor
pop
loope
dec
push
addr16
mov
jle
xor
sahf
xor
mov
mov
sbb
js
sti
aas
addr16
jl
dec
xchg
add
test
push
js
jp
mov
sub
je
mov
and
jmp
mov
in
push
sbb
mov
loop
or
sbb
in
dec
ficoml
or
lahf
test
dec
mov
nop
cmp
cmp
add
jne
idivb
aaa
xor
sti
inc
push
add
jne
imul
jns
xchg
les
stos
mov
mov
mov
xchg
ret
push
jge
stc
pushf
mov
aas
insb
fcmovnu
fdivl
loopne
sar
mov
mov
nop
jmp
leave
dec
mov
in
ljmp
dec
adc
mov
lock
aaa
add
jns
jp
cmp
popa
nop
jb
pop
mov
jne
adc
inc
movsb
push
inc
pop
jle
adc
out
add
fstp
push
cmp
jbe
repz
and
imul
subb
sub
call
mov
lcall
push
fsub
jnp
cltd
loop
or
push
mov
inc
filds
out
adc
fidivrs
mov
dec
rcll
add
in
xchg
jg
loop
sub
xor
jns
testb
jl
jae
add
jle
ljmp
rorl
popa
cs
xchg
cld
add
imul
and
cmp
jnp
inc
cmp
adc
and
jge
test
cmp
sbb
dec
fdivrl
mov
cld
clc
fildll
push
jge
inc
inc
push
and
push
in
mov
and
mov
jle
insb
insb
push
inc
and
aas
adc
icebp
js,pt
mov
lods
push
inc
xchg
popf
mov
scas
std
lock
xchg
and
fdivl
inc
in
in
call
fnstsw
gs
and
ja
inc
loope
imul
pop
dec
in
push
sbb
jb
nop
cwtl
dec
out
pop
cmc
cmp
insb
repz
imul
cmpsl
sbb
jnp
sub
mov
xchg
bound
addr16
arpl
fisubl
dec
push
lods
rorl
add
std
cmp
push
sub
or
and
lret
mov
push
subb
test
jnp
scas
flds
xchg
inc
sbb
out
out
mov
divl
rcrl
xor
mov
aas
shr
lret
repz
xor
outsl
inc
xor
clc
lods
jns
data16
dec
in
cli
xchg
pop
and
in
cwtl
lret
insb
sti
hlt
fdivrp
jl
enter
add
jmp
and
rcl
sub
outsl
lcall
cs
mov
mov
xchg
divl
pop
mov
in
pop
fisubs
sbb
shrl
mov
mov
and
pop
cvtdq2ps
jl
push
ds
mov
lods
inc
inc
cmpsl
clc
push
sub
push
add
inc
addr16
add
cwtl
sti
or
popa
push
lds
xchg
dec
inc
outsl
pop
int3
je
cmp
clc
das
stc
enter
or
fsubrs
mov
jle
dec
jo
int
data16
xor
fwait
mov
xor
lret
scas
mov
pop
sbbl
sub
mov
ficoml
push
divb
insb
or
test
adc
push
dec
and
xor
out
into
shrb
mov
stc
lahf
lds
add
mov
add
movsb
daa
addb
daa
loopne
fwait
in
xor
popa
in
or
sbb
sbb
arpl
mull
addr16
pop
mov
call
ds
jg
sub
out
daa
cmpsl
fcomi
cld
cmpsb
pop
xchg
xchg
dec
lret
das
ret
sub
cmp
imul
inc
out
in
push
cmp
mov
jl
pop
pop
jno
or
cld
jp
cmp
jns
push
imul
dec
mov
adc
call
xchg
pusha
pop
mov
xor
negb
sub
aad
lcall
in
xchg
push
xor
shll
fstpt
pop
out
and
inc
aas
mov
push
cli
pop
mov
mov
sub
subw
xchg
std
int3
xor
ror
jge
sub
sbb
push
out
aad
aas
cmp
sbb
dec
or
xor
loopne
xchg
push
test
pop
cmpb
inc
inc
mov
pop
icebp
mov
push
cmp
ret
jno
push
sbb
cmp
lods
mov
rcll
jne
cmp
cmp
jns
sub
movsl
bound
adc
out
in
testb
mov
sub
jl
scas
or
xchg
rol
das
sahf
xor
adc
jmp
in
mov
mov
loope
mov
outsb
xor
divb
cld
jbe
cs
sub
xchg
mov
add
push
adc
cmp
fcmove
clc
cmc
rcrl
jns
dec
push
rorb
pop
sub
jb
sbb
repnz
inc
aam
sbb
push
cmp
fsubs
mov
stos
clc
loop
mov
and
in
pop
nop
sbb
cmpsl
mov
jns
ficomps
sub
pop
lock
fsubs
ja
rol
mov
into
push
adc
js
sbb
dec
add
cli
jle
popf
test
lods
aad
mov
cmp
call
pop
jnp
and
and
aas
and
add
fcomip
andb
aas
inc
adc
xor
push
iret
jbe
bnd
cmp
cs
pop
movsb
pop
inc
aam
test
cwtl
xchg
xchg
aad
inc
sub
jno
call
bound
xchg
dec
sub
add
xor
stos
adc
stc
push
xchg
pop
add
dec
shrl
aad
cmp
sub
shr
mov
pushw
adc
aas
sub
sub
aad
out
sar
clc
jae
push
add
cltd
imul
sarl
cmp
xchg
fwait
cli
jle
fisttpll
xchg
adc
sbb
and
sub
mov
and
pop
jo
pop
push
jae
lcall
xorl
stos
push
adc
mov
xor
aas
sahf
mov
push
jo
test
mov
pop
mov
stos
sub
xchg
orl
std
sbb
jns
mov
push
pop
adc
dec
and
and
pop
arpl
xchg
mov
pop
or
scas
xchg
stos
cmc
dec
outsb
cmp
jo
mov
mov
jno
inc
jb
fnstenv
das
daa
scas
sub
je
push
bound
mov
mov
and
ret
mov
lret
sarl
aam
into
mov
arpl
icebp
movsb
bound
rclb
jmp
retw
pop
ficoml
push
loop
add
pop
mov
jl
mov
inc
les
ret
fistpl
call
orl
xchg
inc
cli
fldt
stos
stc
fwait
lods
jmp
aam
jp
fiaddl
xor
xor
cmpsb
sbb
ljmp
adc
mov
inc
sub
outsl
mov
aam
fwait
int3
mov
xlat
cmpsb
pop
out
dec
orb
mov
jmp
lods
mov
fldt
flds
inc
dec
dec
sbb
jae
dec
mov
cld
add
daa
mov
xchg
add
js
int
movsl
fcomi
sahf
pop
mov
mov
test
es
dec
pop
dec
dec
and
loopne
pop
and
jne
icebp
push
xchg
incb
cmp
imul
xor
lea
adc
mov
iret
dec
addr16
dec
sti
ljmp
sub
loope
mov
pusha
int3
mov
push
jns
lds
icebp
mov
jnp
push
js
jo
popa
cld
lret
sbb
cmp
loop
aas
push
fld
loop
popf
out
inc
inc
out
fucom
xchg
in
mov
xor
push
xchg
aaa
push
add
add
loopne
xor
cmpsb
aaa
adc
stos
push
inc
jnp
pop
jl
xchg
out
xchg
iret
outsb
jge
mov
sbb
movl
dec
dec
adc
stc
inc
dec
add
pop
popa
xor
jecxz
divb
or
stc
inc
aas
dec
jae
movsb
and
mov
mov
sbb
xchg
int
es
sbb
cmp
jl
dec
add
mov
cmpsl
push
xlat
cmp
xchg
cmpsb
sbb
mov
inc
add
inc
xorl
divw
cmp
hlt
jmp
movsb
int3
inc
bound
clc
repnz
cmp
or
pop
inc
js
je
imul
add
xor
ret
fstpt
inc
pop
and
dec
lret
test
and
dec
scas
addb
adcl
jecxz
and
adc
ret
into
mov
int3
mov
fcoml
add
sub
pusha
push
leave
aaa
fs
push
shlb
lock
sti
lcall
inc
sbb
movsb
inc
xor
sub
dec
mov
les
movsl
mov
or
test
adc
jae
cltd
jg
pop
ret
cmp
inc
sbb
xor
pop
out
int
inc
movsb
inc
mov
mov
je
adc
cmp
push
jg
mov
imul
js
in
push
jge
or
mov
cmpsb
jg
sbb
or
data16
dec
sub
sub
fwait
mov
repz
sbb
push
push
adc
cmpsb
pushf
cs
stos
mov
daa
cmp
push
shrb
cmp
or
rcrl
lret
loop
lods
jg
push
xor
jle
daa
push
into
lret
das
stos
js
xlat
out
pop
pop
pop
scas
lcall
add
data16
inc
and
shlb
aam
mov
xchg
ret
or
xchg
mov
sub
loopne
out
fmul
xchg
xor
push
dec
into
aas
mov
jecxz
cmpsb
popf
into
insl
xor
pop
add
outsb
into
fbld
lcall
mov
cs
mov
pop
clc
in
jl
mov
pop
hlt
orl
outsb
scas
pop
gs
mov
rcrb
dec
repz
les
and
in
popa
movsb
dec
adc
dec
fsubr
adc
js
mov
mov
hlt
cwtl
insl
xchg
leave
das
and
sbb
insl
loop
dec
mov
rorb
fwait
mov
inc
xchg
add
sbb
cwtl
dec
std
mov
push
xchg
iret
or
out
mov
pushl
les
imul
pusha
cmpsb
fdivl
leave
mov
cmp
sub
pop
push
sub
dec
jge
out
cmp
lret
mov
ret
mov
addr16
lret
jl
xor
pop
int3
add
jo
lods
push
scas
mov
pushf
inc
mov
cmp
add
adcl
add
jge
inc
or
mov
das
sbb
or
dec
inc
and
push
sbb
mov
mov
sarl
mov
loopne
test
sarl
insl
xlat
pushf
push
nop
popf
dec
adc
mov
test
ja
or
test
data16
push
fsin
lds
in
andl
mov
je
je
and
test
aad
mov
jae
add
je
out
xchg
jecxz
cmp
jle
adc
scas
fmuls
mov
inc
addr16
and
jnp
jp
imul
adc
xchg
out
pop
push
sti
ja
cmp
popf
push
sahf
ljmp
in
dec
test
mov
imul
xchg
mov
cmc
shr
add
inc
bswap
dec
int
or
mov
imul
addr16
jl
xor
mov
push
imul
or
xchg
orb
pop
mov
add
adc
inc
sahf
ljmp
call
fdivrp
push
xchg
xchg
das
push
cs
cwtl
aad
into
sub
sbb
aas
mov
jb
cmp
std
sbb
jae
mov
call
daa
sub
pop
xor
jns
mov
mov
mov
movsb
int3
push
sbb
outsl
xor
nop
pop
stos
scas
es
pop
adc
push
and
xchg
and
pop
cmpsb
fxch
fimull
pop
sbb
arpl
lea
dec
push
mov
pop
adc
xor
daa
and
cs
shl
mov
enter
mov
xlat
lock
rcrb
inc
or
loopne
lods
dec
inc
testb
adc
push
hlt
cmp
xchg
shl
inc
das
sbb
pop
pusha
mov
iret
fnsave
xchg
mov
mov
leave
testl
mov
pop
dec
dec
loope
pop
jne
lret
xchg
jnp
xor
cld
sub
jmp
movzbl
cmp
fs
mov
cmp
daa
clc
enter
stos
sub
out
adc
andl
daa
inc
push
lods
dec
enter
jl
xchg
pusha
nop
push
and
subb
and
repnz
xchg
mov
jmp
pop
shrb
out
negl
stos
out
dec
pusha
or
add
dec
mov
pusha
fdivr
add
in
sbb
inc
imul
scas
fs
jno
mov
xchg
popf
mov
dec
and
jae
ja
mov
pop
push
mov
pop
dec
pop
inc
movsb
std
popa
cmpsb
mov
adc
loop
xchg
xor
lcall
mov
mov
rolb
jbe
int
pop
lock
negl
inc
sub
sub
xor
or
or
sti
testb
push
xchg
outsl
jge
push
shl
cmc
add
inc
pop
out
mov
mov
lret
dec
leave
sti
mov
pop
jno
movsb
pushf
sub
das
fisttpll
mov
insb
call
roll
mov
popa
fisttps
sbb
mov
std
dec
nop
adc
ljmp
lret
repnz
or
in
out
mov
and
adc
dec
repz
aad
dec
lcall
jnp
ret
adc
test
push
in
inc
std
adc
sbb
in
mov
jle
repnz
mov
cmp
in
cmpsb
and
or
push
and
cmc
scas
icebp
in
sub
jp
push
loop
add
push
pusha
lret
mov
push
xor
xchg
sub
sub
inc
ja
mov
int
pop
xchg
nop
scas
iret
dec
stos
xchg
push
push
cmp
mov
je
aad
insb
or
inc
sbb
and
mov
test
push
sbb
xchg
xchg
loop
aas
fmull
mov
clc
and
pop
xchg
popf
stc
dec
mov
dec
fidivrl
add
cmp
and
and
sub
fcmovb
and
inc
dec
repnz
add
mov
into
pop
cmp
sti
cmc
inc
movsl
push
in
daa
and
sub
cmp
jecxz
mov
push
xor
fstps
fidivrs
imul
push
mov
sub
lods
mov
pop
cmp
repnz
jbe
jg
test
gs
arpl
popf
cli
mov
xlat
pop
int
inc
xor
mov
xchg
idiv
push
arpl
adc
loope
aad
mov
and
mov
xchg
ficompl
xchg
push
mov
ja
inc
pop
popf
fcoms
sub
xchg
test
mov
pop
cmpsl
lret
push
dec
xchg
fstps
dec
mov
jne
mov
popa
mov
mov
xchg
ljmp
test
sbb
mov
or
adc
cmp
mov
call
rcll
dec
or
sti
jl
lea
xchg
lods
test
adc
shl
sti
mov
add
test
and
add
fiaddl
ljmp
inc
shl
cmc
inc
xorb
loopne
dec
fdivs
xchg
and
rcr
pop
rorl
testl
cli
outsb
push
les
js
cld
push
imul
push
xor
jne
out
push
mov
jge
scas
lahf
in
push
xchg
dec
inc
bound
jmp
sub
filds
dec
xchg
xor
push
xor
or
dec
sbb
add
cld
inc
test
mov
ds
pusha
adc
adc
inc
cwtl
add
loop
dec
jae
or
jno
out
sub
xchg
mov
out
mov
or
jae
mov
or
aaa
pusha
insl
movsl
push
test
es
out
int3
ret
clc
hlt
add
in
cs
nop
hlt
gs
js
add
jl
sar
test
mov
movsb
pop
add
jbe
mov
movl
in
dec
adc
cmp
mov
xor
sbb
adc
aad
out
mov
test
mov
push
sub
push
push
push
lcall
dec
bound
mov
ret
jae
jns
or
mov
shrb
out
pop
pusha
sbb
push
jl
sub
js
sub
mov
xchg
push
ds
popa
int
in
ret
or
pop
dec
pop
cld
out
sub
nop
mov
mov
xchg
cmp
push
into
shl
xchg
insb
cmp
mov
movsl
push
mov
pop
sbb
cltd
addr16
cmc
add
inc
cltd
lea
mov
jno
ffree
fdivrp
jb
xchg
ds
imul
inc
test
inc
mov
cltd
adcb
jne
lods
cmp
enter
add
sti
repnz
push
push
movsb
test
dec
push
cs
bound
jno
mov
cmp
lcall
cmp
xchg
mulb
js
test
mov
gs
push
inc
outsb
push
incb
sub
jae
in
movsl
jae
jno
mov
lret
repz
pusha
sub
out
mov
sub
cmpsl
aad
dec
ds
out
pop
mov
filds
cs
bound
lret
cli
jb
mov
xchg
inc
inc
dec
adc
or
cmc
pop
lahf
lahf
adc
xor
lods
push
in
lock
add
add
xlat
jmp
jg
cmp
dec
add
cli
mov
mov
push
shl
je
mov
xchg
mov
dec
scas
pop
jg
addr16
mov
jecxz
icebp
adc
jns
pop
pop
shrb
or
mull
dec
and
sub
clc
stc
jl
inc
scas
imul
mov
idivl
mov
arpl
inc
inc
loope
sub
aad
out
and
xchg
jo
ret
dec
cwtl
xchg
sarb
mov
xor
ljmp
jmp
jecxz
mov
negl
int3
or
jb
dec
pop
sbb
icebp
inc
jecxz
stos
lods
test
jns
adc
xchg
xchg
fistpl
pop
xlat
mov
mulb
adc
jo
push
scas
in
je
push
mov
test
jb
icebp
in
hlt
fstps
enter
int3
stos
push
hlt
jns
stc
das
push
mov
cltd
push
xchg
pop
ljmp
test
add
xor
lret
mov
pushf
cmc
in
and
pop
sbb
jge
inc
hlt
xchg
ds
ds
fnclex
push
xchg
daa
loopne
hlt
icebp
scas
shll
xchg
and
add
outsl
leave
push
cld
push
inc
push
push
inc
xchg
aaa
xchg
rcll
jp
xchg
scas
pop
mov
push
mov
int
mov
ja
xchg
mov
repz
or
in
xor
enter
jne
mov
sbb
xchg
mov
and
in
push
imulb
add
lock
imul
inc
hlt
adc
sbb
xchg
das
cs
xor
xor
js
and
and
loopne
or
inc
mov
mov
movb
sub
mov
fnstsw
rcrl
mov
add
rcrb
mov
dec
push
pushl
inc
cs
sub
pop
fnsave
xor
or
and
dec
in
stos
or
cli
xor
mov
les
xchg
cmp
or
pop
mov
jp
fstpl
loop
pop
and
jnp
ljmp
inc
fidivrl
xor
insb
mov
sbb
call
aad
sub
jl
ss
js
rcrb
in
std
orb
imul
xchg
push
push
and
add
jns
pop
fldenv
mov
jb
sbb
ja
addr16
or
add
out
xchg
out
pop
cmc
icebp
mov
adcb
dec
dec
icebp
push
add
out
fidivrs
push
inc
or
pop
sub
cmp
lods
push
jl
adc
sbb
and
xchg
xor
jp
lods
loope
jo
dec
je
aam
lods
mov
add
daa
or
movsl
fwait
nop
inc
orl
loope
xchg
ss
fldt
lcall
cmpsb
xor
pop
popa
imul
leave
xor
or
mov
icebp
pop
adc
push
imul
dec
shll
dec
rcrb
add
outsl
shl
imul
xor
dec
cld
mov
daa
and
loope
sbb
lret
xor
jae,pt
aad
push
test
pop
and
lahf
out
je
jp
inc
ja
leave
jae
out
bound
pop
loope
mov
std
mov
gs
mov
mov
sbb
or
in
scas
and
xor
lret
push
cld
push
loopne
gs
data16
outsb
lahf
in
lock
cld
cld
jle
xchg
push
sbb
ret
mov
dec
cmp
stos
pop
fucomp
sub
push
push
js
test
add
mov
enter
mov
mov
adc
dec
test
sbb
inc
inc
add
jb
pop
jl
sbb
mov
mov
mov
mov
aad
sti
xchg
push
std
pusha
mov
cltd
push
movsl
inc
fwait
repnz
jmp
cwtl
cmp
sbb
fdivr
pop
jl
sahf
adcb
addr16
jno
jne
adc
insl
adc
and
icebp
loop
pop
sahf
or
subps
inc
xchg
push
outsb
adc
testl
cmc
push
jmp
xchg
rcll
xor
fsubs
int3
adc
cmp
pop
cltd
stc
stos
mov
aaa
jno
and
pop
or
imul
arpl
mov
sti
mov
cmp
mov
and
push
pop
ss
or
push
mov
into
fxch
in
sahf
cmp
xchg
negl
incl
iret
or
repnz
pushf
inc
jmp
pop
insl
in
sub
inc
and
push
push
lds
ret
adc
jb
xchg
xchg
xchg
add
sbb
jp
es
dec
fldt
sbb
outsl
xchg
loopne
cmpl
xchg
jne
int
movsl
xor
cld
jp
adc
outsb
adc
xlat
addr16
out
stc
scas
out
idivl
adc
inc
lods
mov
outsl
jp
xor
xor
cmp
pop
xchg
std
mov
pop
or
adc
in
clc
fs
loope
cmp
jp
sbb
push
jp
mov
fisubrs
ja
jbe
cmpsl
cmc
or
mov
and
shlb
jbe
mov
xchg
in
imul
lret
inc
test
cmp
xchg
or
sarb
out
lcall
or
stos
out
loopne
xor
popf
sti
push
cmpsl
add
pop
jae
cld
sbb
es
jnp
movaps
push
mov
push
xor
in
mov
cmp
jmp
or
xchg
popa
ret
outsl
rcrl
mov
add
cmp
stc
movb
and
call
push
in
push
fdivrl
in
sub
jmp
subb
outsb
mov
orl
push
push
loope
xchg
inc
scas
mov
or
push
scas
orl
fs
sbb
shlb
push
mov
sub
mov
fmuls
scas
movsl
andb
testb
dec
xchg
or
sub
loope
sub
out
ret
mov
jmp
imul
loope
in
shlb
pop
and
add
icebp
sub
bound
mov
jecxz
or
test
in
mov
int3
jmp
mov
add
sbb
cmpl
scas
cmp
jne
ljmp
pop
push
xchg
push
dec
jg
xor
cli
and
cmp
mov
or
xor
arpl
mov
add
dec
inc
mov
loope
adc
inc
enter
push
push
pop
jo
sar
or
pop
inc
adc
test
je
sarl
fsubrl
pop
push
out
xor
cmp
inc
out
inc
outsb
orb
in
or
mov
sub
sbb
scas
mov
xor
cli
inc
cmp
lcall
lods
jge
insl
pushf
hlt
cmp
pushf
cmpsb
icebp
cmp
mov
mov
dec
sub
adc
inc
or
out
xor
mov
jg
jae
flds
sbb
loop
mov
or
xor
and
shrl
sbb
adc
movsb
cmp
test
clc
push
add
test
fcomps
clc
gs
lahf
sbbl
stc
lock
xorb
sbb
and
adc
xchg
adc
dec
in
xchg
xchg
fisubs
fildl
add
adc
push
pop
push
jae
mov
or
into
pushf
xor
or
ss
fwait
xor
dec
or
fnstenv
sbb
pop
mov
sub
xchg
xchg
popw
sbb
inc
dec
mov
inc
lret
lret
add
call
inc
jne
xchg
xor
mov
daa
loope
dec
mov
clc
in
fcompl
pop
popf
xchg
fistps
xchg
mov
int3
cmpsb
xor
subl
inc
mov
add
in
in
bound
xchg
mov
stc
fdivs
inc
xchg
js
push
mov
add
fdivrs
ret
shlb
das
cltd
push
rol
lods
jae
jae
push
jno
bnd
sub
mov
jecxz
sbb
xor
cmp
popf
jmp
mov
xchg
inc
out
jb
loope
add
cmp
mov
iretw
mov
xchg
jle
mov
mov
int
fwait
cmpl
or
int3
std
mov
lret
std
in
stos
mov
mov
mov
test
ljmp
push
jne
push
inc
mov
insb
nop
jmp
mov
xor
movsl
xchg
lret
ret
scas
mov
daa
or
loope
pop
lcall
fisubrs
nop
cwtl
mov
jmp
pushf
xchg
add
std
lock
sub
divl
enter
lret
xor
push
enter
ret
inc
sub
fnstenv
lods
insl
outsl
repz
imul
jbe
mov
or
push
enter
xor
push
fs
inc
inc
jp
ds
cmp
inc
mov
and
jmp
push
mov
inc
inc
mov
lds
and
movsl
adc
push
pop
ret
sbb
cmp
imul
mov
pop
icebp
or
push
sbb
je
inc
mov
pop
popa
mov
or
sbb
lcall
jno
ret
push
adc
and
js
adc
test
dec
pop
push
in
and
test
daa
sub
rcrl
sub
divb
push
jle
dec
js
xchg
cs
arpl
pop
cs
dec
jb,pn
jo
cmp
and
cltd
sub
sub
dec
lock
dec
cmpsb
bound
jo
or
rcrb
lods
insb
inc
fidivs
cmp
sbb
xchg
cmp
hlt
jae
xchg
stos
cmpb
jbe
xor
icebp
push
dec
fdivrl
xchg
pop
and
ficomps
in
lods
test
jb
dec
mov
sub
mov
cli
inc
cmp
xor
mov
sub
popl
pop
mov
mov
mov
mov
fcompl
test
add
sub
or
jge
sub
sahf
bound
ljmp
fcompl
mov
dec
mov
in
inc
icebp
mov
pop
loopne
call
jns
xor
xchg
lahf
les
mov
out
or
jns
cmpsb
push
lahf
rorl
xchg
mov
fidivrs
ret
sbb
ret
xchg
dec
imul
lock
add
mov
adc
pop
dec
out
and
pop
rclb
cltd
lcall
fiadds
sub
jne
aas
xchg
mov
or
adc
int
or
leave
fnstsw
loope
fisttpll
in
xchg
adc
dec
inc
iret
lods
jns
cmc
xor
xchg
adc
cmp
and
jnp
divl
push
inc
repz
and
les
sub
pop
or
stos
movsl
or
adc
lret
popf
dec
scas
jnp
test
xchg
push
sahf
fidivrl
shll
out
nop
cs
ret
cmpl
leave
rcll
arpl
push
mov
adc
addr16
dec
and
add
cmc
push
movsb
sbbb
pop
je
out
mov
mov
ljmp
jle
hlt
mov
sbb
pop
add
aam
or
xchg
dec
ss
movsb
in
cs
imul
lret
jmp
ret
cwtl
loope
ss
dec
cld
shlb
add
cmp
int3
mov
clc
out
push
insb
mov
daa
and
loopne
or
mov
dec
mov
rorb
add
testb
lret
lcall
mov
test
jne
mov
inc
push
mov
xlat
inc
stos
lret
cmp
push
inc
sbb
mov
pop
rorl
or
push
ljmp
jne
popa
dec
je
pop
das
sub
cmp
mov
and
rcr
jp
xor
ljmp
mov
pushl
xchg
in
stc
or
fs
cli
ljmp
lahf
pop
loop
dec
cld
inc
aad
sub
lods
jg
insb
sahf
inc
out
call
and
lcall
inc
shl
cmp
cwtl
mov
pop
outsb
sbb
xor
arpl
xchg
inc
insb
jnp
dec
cmp
cs
lock
xchg
cmp
dec
fdivl
mov
mov
lret
popf
cmpl
add
jne
mov
mov
pop
ljmp
sbb
jp
test
cmpsb
or
arpl
arpl
stos
rol
mov
mov
xorl
stos
push
loop
mov
mov
mov
pop
nop
cmp
insw
add
mov
mov
xlat
insl
cs
pop
das
negl
or
jmp
stos
or
push
mov
dec
jnp
test
or
mov
int
or
pop
jg
and
dec
mov
lahf
popl
ja
loope
jle
inc
outsl
mov
sbb
stos
and
xor
lret
imul
in
pop
xor
jno
aaa
pop
sub
stos
mov
xor
xor
xchg
sub
mov
add
inc
sbb
lods
xchg
adc
inc
cmp
adc
pop
frstpm(287
cld
sbbl
dec
cmp
pop
int3
insb
mov
xchg
xchg
insb
dec
call
out
mov
and
movsb
lea
idivb
and
movsb
cwtl
cmp
xchg
pusha
cltd
fldpi
sbb
stc
add
inc
mov
jo
sbb
sahf
aaa
out
push
rorb
leave
inc
aas
hlt
sub
lahf
in
in
nopl
cli
sbbb
mov
and
leave
mov
jmp
addl
mov
popa
std
mov
int
cmp
dec
fiaddl
mov
pop
stos
xor
incl
xchg
shlb
cmp
int3
add
mov
or
pop
iret
mov
inc
shrb
sub
adc
stos
ljmp
aad
sbbl
icebp
or
ljmp
fs
je
adc
pop
movsb
sbb
inc
sub
arpl
insb
and
bound
pop
test
cs
repnz
cmp
in
xchg
test
add
xchg
repnz
cwtl
ljmp
jb
cmp
enter
push
repnz
add
cmp
and
mov
mull
in
mov
out
xchg
cmpsb
inc
icebp
addb
adc
and
sahf
adc
adc
cmc
test
fisttpl
into
loop
shl
lahf
mov
mov
test
xchg
sub
cld
mov
pop
mov
bound
rclb
aam
test
jnp
mov
fwait
adc
dec
fnstcw
xor
arpl
jnp
mov
mov
sub
test
inc
shlb
jb
push
lods
insl
ret
sbb
aaa
add
icebp
popf
jae
push
fistpll
pushf
aam
mov
fcoml
cmp
insb
jno
fs
fildl
sbb
sbb
aad
movsl
mov
cmp
mov
xor
jg
loopne
and
test
fdivr
and
sahf
in
sbb
lcall
push
imul
pop
insl
xchg
mov
loopne
shll
jae
jae
dec
pop
sahf
es
loopne
cwtl
jl
push
mov
inc
loope
mov
mov
scas
sub
je
xchg
inc
xor
pop
je
rorl
sar
jge
sub
add
sub
cmp
jp
pushf
shr
add
or
test
and
lods
scas
stc
mov
xor
or
push
mov
out
add
xor
iret
in
mov
push
sbb
cltd
dec
pop
xor
cmpsl
aad
push
push
dec
add
nop
xchg
and
mov
sub
mov
ss
jmp
dec
xor
movsl
and
mov
or
mov
mov
fldt
ficoml
push
in
mov
lds
mov
lea
jg
dec
jno
mov
fcoml
mov
pushf
inc
sbb
pop
in
pop
jge
push
fistpl
dec
daa
std
inc
and
outsb
in
das
adc
popa
movsb
dec
sub
adc
fisttps
mov
cmp
popa
out
mov
ret
aas
aad
pushf
pop
cmpl
inc
jno
mov
decl
lods
mov
cmp
scas
shlb
in
cmp
mov
call
nopl
jns
std
hlt
sahf
mov
or
lea
mulb
sub
pop
ffree
pop
nop
addr16
dec
pop
xor
adc
or
sub
push
and
xor
imul
sbb
lea
mov
aas
fdiv
dec
adc
shlb
aaa
in
nop
dec
andb
jmp
aam
jecxz
mov
cmp
lret
mov
lods
push
jnp
test
or
sbb
or
lea
scas
mov
xchg
out
jmp
adc
mov
jecxz
xor
mov
enter
aam
aas
test
xchg
pusha
ficompl
push
jecxz
pop
loope
inc
xor
lahf
imul
sti
sahf
test
xlat
jl
xchg
popa
jmp
mov
mov
int
jg
scas
add
popa
inc
cli
mov
jne
in
pop
push
cmp
stos
sub
push
ds
xor
pusha
stos
push
xlat
push
pop
mov
rolb
rcr
nop
iret
das
les
test
mul
dec
lret
sbb
insb
psrld
cmp
jp
and
add
clc
dec
xor
lret
jns
sub
inc
das
shlb
mov
inc
aas
loope
stos
insb
out
into
cmpb
outsb
cmp
xor
lds
add
adc
or
cmp
lea
dec
sub
into
les
cwtl
rol
inc
test
mov
loopne
fs
and
stc
mov
rcrb
jbe
shrb
test
mov
lahf
enter
sub
inc
adc
orl
pusha
mov
push
scas
cmp
mov
add
loope
inc
inc
vcmpps
scas
sub
ljmp
inc
and
xor
nop
ret
mov
add
pop
mov
rorl
je
test
cmc
psrlq
push
sub
push
push
inc
jb
cmp
in
in
mov
mov
mov
xchg
icebp
aad
sub
rcrl
int
das
xchg
mov
push
in
jg
ljmp
out
pop
ja
sub
sub
mov
lret
push
leave
repz
rcll
js
in
adc
outsb
cmp
sbb
jge
scas
add
xchg
shl
push
enter
scas
popf
mov
rcr
xchg
outsl
sub
nop
inc
rcll
inc
or
stc
and
mov
mov
ret
lcall
and
icebp
mov
out
push
push
test
dec
mov
popa
fnstcw
outsb
out
je
aaa
jo
sub
mov
xor
jl
push
and
xor
push
test
inc
pop
sahf
inc
dec
cmp
xor
pop
jns
jecxz
sbb
pop
sub
fmuls
outsb
jg
xchg
jo
sti
add
adc
hlt
pop
lret
jg
sub
ljmp
pop
test
stc
addr16
popf
movsl
xchg
jmp
scas
ss
rorl
xor
aad
jne
push
adcl
adc
adc
cmc
cmpsl
js
in
lds
cmp
jbe
push
push
sub
inc
lea
les
pop
and
push
jno
push
sub
mov
push
aas
sahf
fists
cvtps2pi
push
mov
insb
out
rolb
and
aad
sbb
rclb
inc
cs
pop
pop
popa
or
jg
jmp
dec
enter
or
andb
push
or
inc
xor
cld
ljmp
or
imul
sbb
int3
xor
adc
sub
popa
cld
fwait
rol
or
or
jge
inc
out
sub
pop
xchg
test
gs
test
mov
cmc
inc
mov
xlat
add
sbb
pop
leave
inc
inc
fwait
jp
sahf
movsl
nop
int
mov
test
mov
lret
push
lret
or
dec
ljmp
enter
fstpl
jns
adc
lcall
adc
mov
adc
bnd
pop
stos
daa
arpl
add
adc
fs
mov
push
movsl
icebp
in
mov
push
inc
add
rcrl
mov
and
mov
mov
adc
fldl
testb
clc
sbb
sbb
stc
in
push
pushf
lcall
xchg
adc
xchg
xchg
shrb
xchg
push
rcrb
addr16
test
push
das
sbb
add
aas
and
das
pop
rorl
leave
pop
or
jbe
mov
pop
sub
fwait
pop
xor
addr16
or
jbe
fldl
enter
les
inc
sub
pop
std
shll
aas
add
inc
xlat
clc
sbb
mov
pop
ret
in
shl
aaa
inc
das
fisubl
add
lds
lcall
int3
mov
mov
mov
adc
out
inc
mov
ss
sub
xchg
inc
xchg
pop
stos
popf
jg
and
test
lods
ja
ret
pop
xlat
xor
imul
adc
xchg
sub
movsl
ficompl
mov
lahf
and
jbe
andl
sbb
xor
ja
daa
jae
dec
cs
ret
outsl
inc
xor
lahf
shl
push
push
cwtl
call
pop
popf
cmpsb
push
inc
adc
je
mov
mov
aaa
shr
aas
and
mov
fstl
dec
out
das
xlat
or
sub
mov
mov
daa
mov
mov
cmovae
lods
mov
push
adc
mov
pop
lret
test
pop
mov
dec
rolb
pop
push
or
pop
mov
or
cli
pop
xchg
gs
jecxz
or
push
xor
clc
sub
setbe
jle
lcall
adc
dec
test
test
and
test
outsl
stc
fbld
and
push
or
dec
imul
mov
sbb
and
lods
sub
and
push
pop
cli
cmp
clc
shl
xor
sub
stc
fs
jnp
cmp
mov
adc
outsb
mov
repz
and
mov
add
adc
cld
addb
cmc
xlat
jle
mov
jns
sbb
push
sbb
ret
and
dec
jno
mov
shll
subl
rcll
pop
cltd
adc
scas
mov
push
or
cwtl
pop
mov
xchg
jge
movsb
and
shlb
pop
jb
ret
inc
out
pushf
hlt
stc
jbe
nop
lock
or
out
cmp
popf
xor
dec
dec
jecxz
sub
inc
sahf
add
into
rorl
push
dec
jae
fistl
add
xlat
xchg
pandn
ss
mov
rol
enter
cld
call
mov
push
loop
and
jmp
cs
out
movsl
lcall
jge
inc
or
cmp
inc
lods
mov
movsl
xor
les
outsl
dec
and
pop
pushf
jp
jno
mov
je
push
sbb
icebp
xchg
push
lds
dec
inc
movsl
scas
pop
mov
mov
loop
imull
xchg
in
mov
dec
adc
cltd
test
pop
or
clc
add
cli
int3
pushf
mov
int3
sbb
sub
push
inc
adc
mov
xchg
xchg
xlat
cltd
xchg
cmp
test
push
fnstcw
pop
gs
mov
inc
mov
ss
mov
sbb
inc
xor
sahf
cmc
pop
ficoms
fwait
dec
and
mov
cld
fimull
fadds
call
push
fadds
inc
cmp
cmovne
cltd
mov
loope
dec
sbb
cmpsb
dec
out
push
daa
enter
mov
add
pop
add
std
mull
popf
xor
dec
sub
mov
stos
xor
in
cmp
mov
test
push
sahf
fsubrl
inc
sub
and
andb
stos
and
in
adc
cmp
test
jnp
pop
leave
lds
xchg
push
es
lret
xchg
sbb
and
mov
mov
push
ljmp
mov
sti
mov
push
pop
out
add
push
jns
adc
push
int3
aaa
or
stc
lea
mov
les
popa
mov
jo
adc
test
in
movsb
dec
fldenv
into
jne
lock
pop
mov
lcall
jmp
shl
push
sar
jmp
xor
push
sub
call
imul
add
in
loope
in
ljmp
mov
or
jecxz
mov
jmp
sbb
sub
test
pop
push
les
lret
xchg
add
or
sqrtps
lcall
xor
inc
dec
lock
mov
insb
ja
jecxz
ret
js
jae
mov
mov
cmp
inc
and
cli
jp
push
mov
push
jbe
lret
lods
jo
into
jae
mov
je
adc
add
daa
and
fmul
orb
pop
test
sar
mov
pop
dec
sub
jno
mov
ss
ds
jge
lds
mov
pop
rolb
xor
mov
mov
jae
inc
push
movsl
arpl
cmpsl
imul
cmpl
xchg
mov
inc
inc
inc
push
push
rcrb
and
jb
jmp
push
sbb
mov
xor
je
pop
cmp
shll
aas
jecxz
push
mov
arpl
adc
pop
jne
push
cmp
xchg
mov
lret
shl
and
pusha
pop
les
xchg
cwtl
xchg
pop
sub
pop
push
mov
mov
and
adcb
testb
aam
and
pop
xor
jmp
mov
out
add
adc
push
nop
out
adc
mov
xchg
setp
ljmp
jmp
jnp
sub
test
or
sub
adc
push
sub
cmp
sahf
mov
call
xchg
lods
mov
dec
aas
cmpsl
xor
iret
and
mov
mov
daa
rcll
enter
mov
ret
xchg
mov
pop
or
adc
sti
in
adc
std
cmpsl
aad
mov
jbe
lret
push
sti
fdivs
cmp
and
sbb
sti
je
mov
mov
lahf
and
xchg
div
clc
xadd
xchg
loope
loopne
dec
in
push
inc
pop
int3
outsl
dec
in
xchg
imul
aas
lods
inc
ss
aam
mov
push
pop
loopne
int
ret
sbb
xor
outsb
jge
mov
pop
push
sbb
inc
lea
and
pop
dec
cmp
xor
xchg
mov
lret
cmpsb
cmp
push
inc
or
es
pop
sbb
loopne
daa
movswl
sarb
or
out
jle
sbb
xchg
iret
nop
lret
ds
sub
mov
popf
push
roll
mov
fildl
leave
clc
mov
add
jg
fsubrl
stos
or
jbe
pop
cmp
int3
pop
pop
pop
or
ss
iret
pop
ljmp
add
cwtl
mov
stos
and
mov
mov
xchg
into
mov
adc
call
out
jo
lahf
dec
outsl
xor
mov
rcll
mov
enter
ds
cs
or
pushf
les
inc
faddl
and
jp
lods
cwtl
mov
mov
clc
add
mov
cmp
jbe
andl
aaa
pop
or
xor
mov
adc
insb
cmp
inc
jne
xor
into
inc
inc
pop
pop
and
out
pop
push
adc
pop
call
push
pop
mov
adc
push
movsl
sub
xlat
sbb
scas
test
pop
fisubrl
sub
sbb
mov
cwtl
lock
xor
mov
cmp
lcall
les
scas
fisubrs
push
lahf
cmp
inc
dec
out
leave
xchg
inc
jae
jno
adc
test
lods
pop
cld
dec
inc
scas
test
inc
jb
movsl
inc
in
fnop
adc
sbb
add
add
in
jns
clc
sbb
mov
lods
mov
mov
sub
test
jb
pop
shrl
mov
sbb
xbegin
aaa
jmp
fidivrs
and
xchg
jb
pop
mov
iret
test
ret
jl
les
ret
ret
mov
push
movsb
mov
out
mov
cmpsl
xchg
pop
and
and
loop
mov
add
mov
stc
dec
cmp
xlat
sub
pop
sbb
pop
push
mov
cmp
dec
test
int3
sahf
mov
fmul
in
stos
cmp
imul
cmpsb
jle
cmp
dec
jae
fldenv
fndisi(8087
ret
sub
pop
aas
add
jmp
pop
arpl
shrb
xlat
addr16
jle
adc
dec
or
shll
fstpt
in
out
cltd
pop
pop
pop
shll
mov
aas
jmp
xlat
xchg
mov
test
imul
sbb
popw
jbe
outsl
sbb
shrl
pushf
add
ja
pop
pop
and
push
push
push
push
sbb
ret
mov
stc
jle
in
mov
adc
inc
mov
push
ja
jbe
pop
add
push
xor
dec
scas
js
or
xchg
ja
push
mov
outsb
jle
push
adc
inc
lock
mov
cmpsl
enter
xor
mov
mov
mov
mov
jbe
add
aam
inc
mov
adc
sbb
adc
mov
sub
andb
popf
mov
pop
push
rorb
xchg
xlat
jnp,pt
xchg
jge
push
lods
mov
mov
mov
shll
nop
mov
adc
fidivl
cld
pop
add
shll
lret
xchg
and
adc
sub
or
sub
lods
xchg
aaa
mov
sub
cltd
mov
jbe
cli
pop
fidivl
sbb
mov
loope
mov
stos
sbb
adc
cmp
jae
mov
adc
sub
jg
in
lods
lret
movsl
lret
imul
or
adc
push
jns
cmpsb
dec
loopne
jl
stos
scas
dec
loope
and
repnz
shrl
out
push
cmc
sbb
dec
andl
imul
outsb
push
enter
ss
lds
dec
in
mov
ss
sti
outsl
sbb
dec
sub
je
push
data16
test
scas
xchg
xor
xchg
adc
jbe
jnp
mov
pop
sub
jb
and
xchg
scas
jl
pop
js
nop
out
jp
mov
pop
dec
std
mov
inc
inc
sub
std
xchg
ror
push
mov
out
inc
dec
xor
aas
xchg
pop
push
lahf
dec
loop
fs
test
mov
mov
adc
loop
into
loop
dec
push
leave
xor
xor
outsb
cli
mov
inc
mov
add
iret
movl
add
mov
jns
sub
push
arpl
mov
inc
jnp
repnz
add
mov
xchg
cmp
out
dec
and
movsl
addb
mov
push
add
jp
sahf
adc
cmp
and
popf
insb
jg
inc
stos
jecxz
cmpsl
outsl
outsl
pop
add
push
ret
add
in
xor
pop
and
and
sbb
lret
jb
pop
push
cmpsb
add
xchg
imul
cmpsb
cmpl
and
pushf
xor
jne
xlat
popa
sub
rsm
mov
push
lahf
aas
jmp
xlat
jl
mov
lcall
adc
data16
mov
push
push
push
and
ljmp
bound
lds
mov
and
lret
mov
aas
leave
dec
int3
in
xchg
or
loop
mov
test
sahf
add
sahf
mov
push
pop
das
iret
add
cmpsl
pop
and
adc
sub
les
add
iret
push
lret
or
shl
mov
xchg
jno
scas
xor
cmpsl
mov
inc
mov
lahf
outsl
lcall
int
mov
inc
push
cmp
js
xchg
jb
scas
inc
in
jo
jle
mov
xchg
inc
insl
pop
jb
push
divl
lret
mov
lea
insl
das
add
cmc
mov
ret
push
mov
pop
insl
cwtl
fcompl
mov
insb
cmpsb
xlat
add
lret
les
outsl
pop
xor
adc
and
sub
jnp
xchg
push
mov
push
in
mov
shlb
daa
cmp
pop
xorb
es
cmp
dec
adc
aas
cmp
or
jnp
fidivl
pushf
arpl
push
sbb
add
insb
mov
lds
lret
sbb
inc
add
mov
jmp
push
outsl
stc
notb
lods
cltd
stos
pop
subl
movb
jnp
lods
and
int3
lods
xchg
mov
cmp
rcr
test
cmp
xchg
adc
loopne
stos
pushf
jnp
add
into
or
adc
and
sbb
mov
data16
adc
inc
mov
adc
les
and
gs
mov
arpl
cmp
pop
push
lods
add
shrl
or
aad
int3
xchg
dec
in
aas
xor
xor
pop
inc
mov
jge
inc
add
jns
xor
mov
enter
andl
mov
imul
repz
insb
cmp
mov
sub
outsl
jb
sahf
js
popf
lahf
sub
mov
enter
test
pusha
adc
sub
inc
or
lcall
ret
imul
cmp
cmp
sahf
cmpsb
cmpsl
or
xor
int
addb
or
adc
xchg
das
xchg
or
arpl
aad
daa
outsl
insb
push
mov
mov
repz
movsl
push
cltd
es
cmp
or
fiaddl
inc
shrl
clc
cs
dec
insl
hlt
sbb
arpl
or
xor
add
and
fcoms
in
rclb
jb
ds
jle
outsb
sbb
mov
lods
xchg
rcrb
nop
leave
orl
repnz
push
icebp
xchg
mov
add
or
xchg
js
dec
xchg
shrb
stos
xchg
flds
pop
lcall
mov
in
pop
pop
or
cmp
clc
fcoml
decb
mov
jnp
popf
or
fucom
jecxz
dec
fistpll
pop
fidivl
push
outsb
xlat
push
dec
jns
xchg
dec
sub
das
jnp
loope
cwtl
insb
aaa
ss
add
loopne
adc
add
push
iret
ja
inc
icebp
jno
popf
xor
xor
fisubrl
pop
aam
xor
or
cmc
sbb
mov
push
hlt
mov
mull
push
jge
fisttps
stos
cltd
or
jbe
iret
arpl
lods
cmp
adc
repnz
mov
push
je
add
or
adc
daa
jl
arpl
cmp
pop
dec
shlb
sub
push
scas
inc
out
fwait
add
dec
add
push
xor
loope
loope
test
ja
sbb
cltd
mov
popf
out
inc
jl
stc
dec
inc
mov
xor
sub
sbb
jg
movsl
add
push
xchg
cmc
sbb
les
mov
xor
imul
pop
insl
cmp
leave
movsl
xchg
dec
mov
jle
xchg
lahf
dec
lret
fildll
loope
dec
in
dec
xor
sbb
add
fsubp
aad
add
cli
das
cmp
push
add
iret
test
dec
mov
xchg
outsb
jp
mov
jnp
not
add
lret
loop
add
lds
cmp
push
jbe
cmc
divb
out
cltd
adc
xchg
or
sbb
adc
loop
pop
push
jnp
imul
inc
and
inc
movsl
push
pop
leave
mov
push
loop
mov
xchg
and
loop
test
test
push
mov
sbb
sub
jp
cmp
fsts
ret
add
jle
cld
jns,pn
sti
enter
adc
stos
lret
dec
inc
push
pop
aaa
fists
push
insl
loop
in
and
add
movsl
mul
dec
xor
xchg
outsl
les
inc
pop
push
addb
inc
mov
push
stc
mov
addr16
mov
int
sub
mov
jb
movsl
fsubl
jecxz
loop
jne
jb
movsl
cmp
xorb
imul
out
adc
in
loope
repnz
test
fdivrl
out
test
test
inc
cmp
hlt
or
mov
mov
rcrb
dec
iret
pop
adc
inc
sbb
int
inc
dec
hlt
jg
iret
rorl
adc
mov
xor
pop
in
or
add
addl
mov
inc
cld
sbb
bound
and
mov
mov
outsl
jno
adc
sbb
push
add
dec
xor
and
adc
daa
mov
dec
jecxz
inc
insl
leave
cs
test
sahf
xchg
jl
fisubrl
shl
or
mov
push
dec
jnp
mov
pop
mov
rcl
push
sub
test
cmp
pop
imul
into
push
sbb
in
pop
mov
xor
add
scas
int
fcoms
icebp
out
scas
inc
push
xchg
test
sub
nop
cltd
scas
xor
mov
cli
push
mov
mov
add
sbbb
xchg
pusha
out
mov
jb
icebp
pop
es
cmp
sti
lods
cltd
cmp
sbb
lret
stos
xchg
jmp
out
sti
lret
mov
bound
and
inc
cmp
mov
repz
or
sbbl
sub
mov
lret
xor
lcall
ret
lahf
xor
and
mov
fsts
fisttpll
in
xor
aaa
nop
cmp
sub
adc
lds
mov
xchg
dec
xchg
and
add
mov
movsb
lret
lods
push
cmp
sbb
jle
arpl
les
push
add
fiaddl
dec
mov
out
loopne
pop
add
cmp
push
cli
lea
stc
loope
sti
mov
imul
push
scas
dec
es
ljmp
sub
dec
enter
jge
iret
dec
cltd
sub
push
movsb
call
add
mov
ljmp
fs
mov
sahf
sub
add
test
aaa
arpl
pushf
push
xchg
add
push
in
add
mov
int
xor
push
or
lock
mov
jg
out
lahf
and
pop
shll
pop
faddl
rcrb
daa
and
jle
ljmp
outsb
bound
xchg
scas
mov
mov
push
enter
xlat
push
fmuls
jae
xor
pushf
adc
jo
incb
mov
cmpsb
stc
ficoml
push
sarl
adc
aas
clc
and
aad
lahf
jmp
imul
clc
add
dec
sarb
mov
inc
out
pop
inc
inc
pop
shrb
imul
or
in
jl
xchg
es
dec
movb
or
stos
or
cli
mov
jae
sarl
xchg
es
add
js
in
sti
push
add
lock
and
dec
dec
mov
push
pop
mov
or
imul
rcl
xchg
adc
mov
fiadds
popf
pushf
pop
mov
or
inc
jl
rolb
aad
loope,pn
or
mov
imul
pop
insl
cmp
inc
dec
jmp
test
jle
shrb
or
scas
or
inc
add
xlat
inc
add
incl
adc
push
lea
imul
sbb
shrl
cmp
mov
dec
push
mov
ljmp
mov
mov
add
mov
add
mov
cld
in
mov
das
sbb
mov
into
rcl
imul
call
cmpb
insb
dec
shlb
ret
push
cmpsb
dec
sahf
xchg
ljmp
cltd
mov
ja
jo
test
jne
jle
fdivrs
cmpb
adc
mov
sbbl
popf
mov
and
cwtl
sbb
xor
ja
in
xchg
int
lea
mov
mov
rorb
int3
test
mov
dec
sub
cmpsl
fwait
xor
aam
ret
std
cmpsl
ds
push
cs
in
push
out
jne
fdivs
push
and
inc
sub
stos
gs
rcrb
ljmp
fdivrl
push
jno
mov
sub
pop
lahf
mov
je
adcb
repnz
xor
add
stc
ret
iret
inc
test
push
lcall
mov
cmpsl
jp
flds
clc
xchg
cmp
sbb
clc
loopne
jbe
fcomip
mov
push
gs
je
mov
xchg
test
fnsave
add
ljmp
mov
and
pop
mov
mov
in
dec
sti
jecxz
and
sbb
jb
pop
inc
jg
mov
cmp
mov
fsubr
subb
dec
ja
scas
add
adc
jmp
inc
nop
dec
lcall
xchg
hlt
shll
fwait
xor
mov
sbb
mov
mov
test
adc
pop
outsl
test
mov
rolb
pusha
cmpsl
xor
in
test
ror
mov
jecxz
arpl
adc
mov
ret
pop
addr16
cmpsb
enter
shlb
lret
rcll
mov
sub
mov
insl
fdivs
mov
add
arpl
add
jne
cmp
mov
outsl
sbb
bt
xor
movsl
jl
test
or
mov
popf
sub
adc
mov
sarl
jge
adcl
xchg
xor
inc
shr
jb
ret
mov
cmp
sub
cmp
jecxz
and
addl
xlat
lea
or
adc
adc
fwait
testb
xchg
movups
fldt
sbb
outsb
andb
sub
add
add
ret
pop
imul
xchg
mov
pop
out
lret
or
leave
fimull
in
je
sahf
pop
xor
jns
adc
push
push
push
mov
add
mov
lock
inc
movsb
and
movsb
in
lcall
js
dec
xor
aas
je
mov
push
out
xor
and
xor
push
into
lods
xor
push
adc
pop
cmc
ja
cli
adc
sub
dec
cld
xchg
dec
data16
imul
xchg
int
xchg
dec
fwait
sahf
fsubrs
inc
mov
push
dec
xchg
mov
sbb
lds
hlt
pusha
stc
mov
stos
sbb
rcll
fisubrl
pusha
push
ret
jecxz
in
xlat
fld
insl
jl
sahf
and
mov
call
or
add
xor
adc
inc
add
adc
dec
in
sahf
addl
insb
push
fmul
ss
and
xchg
daa
iret
jb
sbb
xchg
xchg
push
cmp
xchg
xchg
jb
imul
dec
mov
aam
mov
loopne
js
scas
jae
xor
cmp
sub
xchg
clc
fisttpll
dec
out
push
cltd
mov
inc
xchg
dec
pop
mov
pop
mov
stos
out
mov
imul
lock
dec
icebp
lret
pop
adc
inc
ljmp
fcompl
jp
insl
sub
mov
jle
les
vmovapd
lahf
pop
rcl
mov
outsl
jbe
push
cmpb
xchg
je
iret
dec
pop
fisubrl
jmp
push
loopne
adc
or
mov
divl
das
sub
out
mov
movq
push
xchg
mov
mov
lock
push
ds
add
rcr
mov
mov
das
dec
xor
push
xchg
mov
shll
jge
stc
out
test
mov
inc
daa
in
repz
lret
pop
dec
push
xchg
in
sbb
mov
jmp
icebp
fwait
xchg
mov
jge
stos
mov
mov
or
addl
sub
cmp
ds
into
out
iret
jb
test
push
jp
mov
stos
test
and
aas
jae
mov
inc
cmp
pusha
cli
call
fdiv
dec
pop
jae
mov
mov
lods
dec
pop
lret
mov
dec
jle
jnp
daa
pop
cmp
shrb
aad
js
xchg
fdivr
clc
imul
mov
xchg
or
add
push
push
inc
sbb
sahf
hlt
add
clc
add
xor
test
adc
push
call
mov
cld
cmp
imul
jb
arpl
clc
in
push
scas
sub
jnp
gs
mov
xor
imul
pop
outsb
cmp
clc
mov
lea
das
imul
mov
sbb
nop
mov
cmp
add
popf
pop
adc
not
out
mov
and
pop
shlb
sub
push
ret
aam
cmp
adc
gs
xchg
pop
test
or
loop
pop
cld
addr16
lods
sub
dec
pop
repz
xor
or
iret
push
iret
ret
movsl
sarb
xor
dec
sub
cs
xlat
push
mov
lock
cmpsl
pop
jmp
jo
lds
mov
sbb
fldt
jae
daa
cmp
dec
jl
push
mov
repnz
mov
aam
imul
mov
xlat
add
int3
mov
jno
sub
pop
or
pop
insb
inc
push
push
lret
mov
out
shll
fcmovnu
movsl
adc
mov
add
out
xsave
xchg
movsl
testl
lahf
cmp
dec
and
roll
mov
sbb
lcall
cld
pop
out
pop
popf
pop
ds
in
mov
jbe
sarb
lret
shl
test
xor
cmp
out
or
push
aam
xchg
mov
decl
sbb
jne
mov
sub
cwtl
movsb
jb
mov
inc
push
neg
inc
mov
jnp
sub
add
push
rcll
iret
cmp
dec
cli
pushf
sbb
cmp
call
xchg
sbb
jbe
pop
arpl
sub
rolb
xor
jmp
pop
fimull
mov
in
or
jbe
orl
movsb
enter
push
imul
sub
mov
lret
cltd
or
xor
ja
mov
jae
test
aam
outsb
test
imul
in
fdivrl
jno
or
inc
cld
mov
daa
adc
outsb
cli
dec
lods
out
sbb
in
ss
mov
sbb
or
aam
sarb
inc
inc
sbb
mov
hlt
mov
test
push
or
pop
aad
pop
int3
int
insl
ds
mov
ss
sub
rorl
jle
pop
cmpsl
aas
pop
push
cli
sbb
test
xchg
incl
ret
sub
aad
xchg
push
cmp
xchg
loop
call
ja
lods
fiaddl
pop
adcb
mov
pushf
mov
insl
cld
call
mov
sbb
cmpsl
loopne
cld
fimull
lret
pop
lahf
xchg
and
or
sbb
mov
sub
fwait
push
xor
sahf
fistps
popa
in
mov
stc
add
jp
arpl
shrl
outsl
lcall
mov
in
scas
xchg
inc
sbb
das
mov
fnstcw
fwait
ja
mov
pop
sahf
push
and
inc
shrb
roll
arpl
sbb
lods
push
sahf
ds
push
cs
jge
xor
dec
test
fmull
dec
fmuls
mov
loopne
ljmp
loop
stc
in
das
jecxz
shll
or
cli
or
lods
fstps
test
arpl
add
mov
test
mov
in
adc
push
in
jmp
and
jp
aam
movsb
pusha
mov
mov
ret
aas
and
mov
adc
subl
mov
fidivl
inc
cmp
and
xor
push
adc
or
mov
add
arpl
dec
scas
push
adc
mov
jbe
mov
adc
inc
rdtsc
xlat
jmp
js
sbbb
repz
dec
or
xor
aas
jb
lret
ret
xchg
and
mov
and
push
jns
and
add
adc
dec
xlat
jnp
mov
insl
xchg
je
inc
cmp
add
fwait
dec
jne
loopne
sbb
jo
and
mov
insl
xchg
repz
or
mov
xor
test
pop
or
add
test
pusha
xchg
xchg
enter
movsb
sbb
dec
in
out
decb
test
jge
repz
adc
repz
iret
call
jbe
lds
inc
cmp
ss
popa
cmp
jae
add
jns
int
loopne
xchg
imul
inc
cmp
mov
or
jns
sub
repz
jns
and
jle
jmp
mov
stos
add
scas
arpl
int
imul
loopne
mov
sbb
jle
inc
dec
mov
dec
lods
cli
mov
lahf
and
dec
cs
out
inc
out
sbb
push
adc
fdivr
pop
sbb
push
shlb
inc
jg
enter
cmp
mov
sub
orl
sub
cmp
insl
cmovnp
movb
sbb
pop
in
sub
mov
or
divb
xchg
push
or
out
shl
and
lods
push
cs
fstps
out
je
orl
xchg
adc
fisttpll
cmpsb
ss
jp
add
add
add
push
mov
jne
adc
mov
loop
nop
rcrl
mov
ret
mov
pop
das
xchg
inc
stos
and
mov
xor
sub
sub
cli
add
fldl
dec
pop
mov
mov
je
imul
lods
lea
rcr
in
cmp
ss
clc
push
and
dec
ljmp
addr16
add
push
cmp
lea
inc
popf
inc
sbb
inc
or
test
jge
xor
xor
lcall
ret
inc
call
fbld
das
ror
cs
loop
repz
xchg
out
adc
test
out
mov
inc
xchg
cltd
jp
lock
bound
and
xchg
ds
push
sbb
pop
add
test
aaa
cmp
mov
lcall
inc
insb
mov
or
cmp
loop
repz
icebp
test
adc
dec
in
int3
insl
cmp
mov
inc
jno
push
mov
dec
stc
cld
subl
jbe
out
adc
sbbl
sbb
xchg
jne
addr16
xor
fbstp
push
cmp
std
sbb
pop
inc
inc
pusha
xchg
in
sub
xchg
mov
or
lods
insb
jae
call
lahf
in
mov
sahf
jp
pop
adc
icebp
ljmp
in
aas
push
sbb
xchg
xchg
add
test
or
pop
pusha
dec
test
aas
cmp
mov
cmp
sbb
xlat
fs
pop
test
mov
outsb
cmp
int3
or
cmpsb
out
cwtl
lcall
push
dec
jns
ret
cmp
jl
dec
in
dec
cltd
dec
ret
push
push
mov
icebp
lcall
xor
pusha
jb
cmpsb
mov
frstor
sub
mov
push
or
std
add
mov
mov
xchg
dec
add
lcall
es
pop
sub
or
in
loope
test
loopne
and
push
mov
xchg
lret
sbb
mov
daa
repz
xor
cltd
mov
pop
jbe
addb
jmp
sub
scas
sbb
cmpsb
das
ficoms
js
out
addr16
negb
adc
mov
inc
add
fsub
mov
arpl
push
addr16
ficomps
scas
inc
xchg
shll
pop
jae
push
ret
inc
fistpl
in
xchg
lods
fidivl
pop
jmp
xor
sub
mov
xorb
andb
test
cmpsl
cmp
sub
add
enter
push
jl
addr16
mov
pusha
sub
mov
iret
jbe
sbb
sub
mov
mov
imul
mov
jge
sahf
into
arpl
icebp
mov
fadds
es
mov
xor
inc
popl
add
mov
insl
jne
in
ja
jl
mov
in
popa
mov
jp
add
daa
pop
pop
jl
add
stos
push
inc
sub
cmp
aas
mov
xorb
mov
add
push
xorl
mov
test
mov
ss
dec
mov
lock
mov
jp
mov
idivl
in
push
daa
scas
jle
lret
enter
addr16
adc
pop
dec
pop
das
mov
jb
dec
sbb
lret
popa
loopne
push
cmp
into
push
xchg
rcrb
sub
inc
sbb
and
jl
xchg
fdivrl
and
pop
xor
lods
ja
lods
jmp
das
dec
addb
pop
inc
xor
mov
sub
xchg
jge
bound
inc
mov
out
cmp
sub
rorl
jo
es
ljmp
ljmp
jle
loope
adc
cmp
and
repnz
outsb
push
adc
aaa
cli
adc
inc
adc
cmpsl
add
or
adc
fs
in
jge
out
fwait
aad
gs
subl
aaa
shll
into
lods
mov
cld
adc
add
shlb
pushf
test
mov
adc
xor
or
push
inc
push
orl
fsubl
mov
bound
mov
xchg
push
out
pop
int3
cld
bound
xchg
fnstenv
mulb
pop
shrl
std
sbb
mov
and
arpl
push
fistps
cmp
aaa
fwait
xchg
push
mov
mov
mov
addl
cmpsb
lods
mov
sub
fwait
add
out
dec
sub
mov
xchg
jle
xor
lds
xlat
test
pop
sub
xorb
fwait
imul
cmp
jae
jbe
adc
and
add
mov
sub
xchg
sbb
add
cmp
mov
xchg
fldenv
pop
icebp
and
pop
inc
mov
mov
out
push
inc
inc
xchg
scas
dec
sub
sarb
jg
cmp
push
or
fst
ljmp
dec
roll
mov
lock
cltd
jmp
clc
lahf
out
push
mov
push
jg
movb
push
mov
mov
popf
movsl
push
and
lcall
and
jg,pt
sub
add
out
add
xor
mov
pop
cmpsl
mov
insl
xchg
in
cwtl
daa
push
cmc
mov
lock
sub
xor
sahf
int3
push
loope
je
push
clc
fwait
and
ret
aad
mov
pop
dec
sbb
cmovle
mov
jo
push
aaa
shlb
fimull
rcl
sub
push
gs
cli
sub
or
mov
adc
repz
add
mov
rolb
bound
xor
cwtl
movsb
pop
cld
out
push
sti
mov
and
jne
cmp
sbb
fcomp
inc
out
sub
ret
ret
add
fdivs
mov
or
xchg
rcr
and
jle
xor
jle
push
push
sarl
nop
cmp
and
cmp
imul
fidivs
pop
movsl
push
mov
mov
cmp
and
icebp
gs
mov
pushf
and
and
jo
iret
cmp
addr16
xchg
adc
mov
or
ljmp
push
sahf
pusha
add
stc
mov
leave
cwtl
sub
cmp
je
outsb
movsb
addr16
mov
inc
mov
nop
lods
ljmp
jmp
mov
mov
push
imulb
push
push
daa
pop
xchg
into
lods
jg
mov
pop
nop
fs
sub
sahf
enter
imul
fs
mov
inc
fsubl
push
cli
testb
ret
testb
inc
mov
roll
mov
fimull
adc
jno
je
xor
aaa
mov
test
lock
gs
sahf
and
jmp
mov
xchg
adc
mov
in
rcrb
jbe
lcall
lods
sub
jne
je
pop
repnz
push
call
bound
loopne
clc
sub
push
sub
xchg
mull
mov
pop
fidivs
mov
addr16
fidivs
cmc
iret
lcall
mov
into
int
outsb
out
mov
shrb
iret
movsl
lock
jmp
daa
pop
pop
inc
lret
jp
icebp
xchg
adc
cmpsl
sbbl
loope
and
inc
and
gs
and
push
add
pop
aam
lcall
lods
cs
xchg
push
mov
aas
xor
out
lret
jns
add
jno
mov
scas
jno
add
lea
push
dec
push
js,pn
test
mov
pop
lods
jno
gs
lea
pop
ss
add
into
mov
xchg
xchg
movsl
das
ss
xor
lea
lcall
cli
adc
ss
movsb
pop
ficomps
lds
pop
add
cmp
out
mov
xor
popa
mov
je
jb
sar
fdivl
add
daa
push
mov
adc
dec
add
lods
inc
push
push
or
fwait
inc
xchg
jecxz
cmp
test
push
pushl
daa
arpl
shr
cmp
mov
add
lahf
test
sbb
inc
enter
mov
inc
mov
add
sub
dec
cmp
or
cmp
mov
jg
int
sbb
sbb
popf
cmpsb
or
popf
jmp
mul
out
add
lods
fcom
xchg
xchg
idivl
int
jge
pop
and
sbb
pop
outsl
sub
shll
es
jecxz
test
dec
xlat
loopne
jns
clc
out
mov
sub
shl
mov
jle
in
lea
or
andb
pop
xchg
addr16
sub
jmp
mov
and
dec
sub
sbb
incl
pop
lret
pop
dec
mov
mov
xchg
pusha
test
outsb
mov
addr16
sub
mov
mov
mov
dec
and
jb
test
jo
or
das
dec
sbb
mov
or
push
inc
fcompl
mov
lret
mov
jmp
insl
dec
mov
pop
xchg
mov
cs
mov
aaa
add
jmp
ljmp
add
or
loop
jo
mov
cld
je
addl
sub
aas
or
test
push
outsb
in
mov
mov
movsl
adcb
inc
mov
mov
mov
std
mov
rclb
adc
lea
mov
in
les
loopne
scas
cltd
in
jmp
sub
imul
xchg
cli
push
sbb
bound
dec
cmp
add
sbb
add
mov
imul
movsb
xor
sti
jmp
lret
divb
dec
lds
push
or
sub
js
leave
lret
xor
xor
adc
cmp
js
inc
mov
test
fildl
ffree
pop
sbb
mov
es
outsl
out
push
push
add
push
cltd
scas
repz
cltd
mov
mov
pop
mov
pop
mov
ret
xchg
hlt
push
std
les
mov
xchg
mov
push
or
fists
ret
aam
jae
hlt
adc
xchg
xor
dec
mov
and
std
xchg
out
sbb
loope
imul
lock
shrl
push
fldenv
xchg
lods
push
mov
push
mov
outsl
into
outsb
rcr
mov
xchg
cmp
test
or
call
mov
cmp
lods
xor
adc
fsubl
jns
push
add
cmpsl
mov
dec
inc
push
out
pop
es
dec
pop
dec
mov
or
dec
mov
lcall
pop
scas
push
mov
adc
lret
sub
cli
push
jne
cmpsl
add
sahf
xchg
pushf
xchg
sarb
fcoml
shrl
mov
icebp
push
daa
js
xchg
dec
or
push
loop
mov
negl
inc
cltd
mov
jae
and
neg
lret
cld
ljmp
mov
add
outsb
sbb
add
shlb
sub
mov
out
shrb
xchg
dec
push
jno
lret
push
xor
or
stc
data16
xchg
xlat
scas
sahf
pandn
xchg
cmp
ret
outsl
shl
dec
push
sub
jno
movsb
pop
push
dec
sbb
and
mov
sbb
sbb
jno
in
adc
fistl
inc
ds
out
dec
push
ljmp
gs
int3
xor
sbb
dec
fwait
shrb
and
mov
jge
scas
push
jmp
arpl
sar
jo
pop
cmpsl
dec
test
bound
and
cmc
lea
aad
movsl
dec
mov
out
pushf
negb
cld
xchg
outsl
mov
jb
jmp
adc
imul
es
mov
stc
pusha
pop
pop
xchg
scas
mov
les
jle
push
pop
adc
push
data16
icebp
loope
sbb
xor
push
mov
mov
sub
mov
imul
nop
adc
mov
xchg
mov
sbb
icebp
outsb
and
jns
inc
inc
in
stos
or
push
cld
repz
xor
mov
out
mov
jnp
sbb
jns
stos
stos
mov
hlt
loope
add
mov
dec
pop
push
fmull
pop
repz
pop
xchg
inc
loopne
jle
sub
push
sbb
outsl
cmp
mov
push
cmp
push
das
lcall
inc
add
jne
xchg
and
outsl
shlb
cmpl
cmp
cmpsb
ss
loop
out
xor
test
push
test
xor
inc
enter
inc
outsb
cld
lds
xchg
push
scas
mov
xchg
and
xchg
imul
and
xor
out
xchg
repnz
repz
testl
pop
xchg
test
cmpsb
leave
aad
outsb
es
jp
adc
sbb
inc
clc
adc
pop
out
adcb
xor
xor
out
xor
inc
jnp
inc
xor
lock
sbb
jbe
dec
mov
aad
dec
mov
push
cmc
loop
adc
stos
ret
lods
cli
lds
mov
subb
and
scas
int
popf
pop
in
and
inc
enter
fisttpll
test
aam
out
ret
fs
xchg
imul
or
cltd
outsl
xchg
inc
sbb
lss
adc
cmpsb
cmpsb
push
add
cmp
loopne
jg
push
cmp
dec
out
xchg
inc
cltd
or
mov
mov
cs
xchg
jl
mov
and
push
jl
andb
inc
in
mov
insb
adc
cmp
or
dec
rcrb
gs
ja
insb
jns
in
insb
mov
dec
mov
stos
in
mov
sub
lods
sahf
sbb
mov
and
sahf
scas
push
sbb
mov
adc
shl
lahf
sub
cmp
aas
enter
and
sbbb
insb
shll
ds
cwtl
mov
lahf
mov
xchg
fs
inc
mov
fs
add
push
dec
push
and
pop
stos
dec
xchg
inc
imul
nop
mov
push
cmp
jb
and
sub
lcall
ret
cmpsl
or
data16
jo
jne
xchg
or
cmp
aas
xchg
dec
push
test
call
jnp
das
es
test
sub
push
push
xchg
pop
cld
push
push
jae
cmpb
xor
out
pop
fistpl
jmp
dec
aam
insb
mov
and
jg
out
sub
nop
sbb
hlt
scas
mov
hlt
enter
or
or
repnz
cs
inc
cmp
dec
inc
adc
ret
mov
dec
mov
jns
pop
push
mov
addr16
jbe
scas
xor
jge
mov
fidivs
inc
in
sub
fwait
and
add
pop
fst
sbb
sbb
pop
lods
adc
clc
or
lea
xchg
or
xchg
arpl
dec
clc
sar
test
shrb
rorb
and
push
sarb
pop
lcall
call
inc
aam
addr16
movsl
outsl
rolb
lret
jb
movsb
imull
out
cmp
pop
dec
imul
push
test
out
mov
les
in
sahf
pop
xchg
in
push
out
ror
mov
inc
outsb
adc
cmpsl
mov
lea
int
rol
mov
jae
xchg
mov
jno
loopne
push
mov
aaa
sub
add
pop
jae
inc
dec
dec
add
xor
pop
xchg
push
shrb
sbbl
sub
int3
jo
jne
pop
mov
std
out
test
cs
jo
mov
lods
cwtl
push
addr16
mov
pop
mov
into
inc
or
push
or
push
mov
mov
mov
mov
jo
orl
imul
imull
dec
mov
lds
mov
mov
push
stos
sub
mov
loope
loope
addr16
scas
or
dec
sub
mov
mov
push
ss
mov
xchg
mov
xchg
inc
sbb
popa
sbb
jle
or
out
aas
fdivrs
scas
pop
in
or
mov
mov
jns
xchg
hlt
sub
jne
inc
adc
xchg
ficoml
out
nop
sar
rcr
imul
movsb
inc
xchg
pop
push
dec
mov
data16
fistps
je
jecxz
jg
sbb
and
adc
dec
inc
adc
imul
outsb
repz
jg
add
jle
mov
or
in
or
arpl
iret
clc
jmp
sub
inc
leave
and
push
cmp
xchg
pop
dec
pop
xor
std
aaa
jmp
loop
cmp
cmp
dec
loopne
mov
cltd
sbb
mov
out
ss
mov
pop
mov
test
dec
mov
xchg
jle
fcomi
insb
divl
jmp
sahf
add
in
xchg
test
aad
jbe
mov
dec
mov
inc
out
sub
and
seta
lret
popa
xor
push
mov
mov
mov
arpl
inc
pop
ljmp
mov
in
mov
push
or
popf
fs
xchg
popf
sbb
or
dec
inc
dec
cli
xlat
out
sub
or
pusha
cmpsl
cli
int3
inc
add
push
mov
or
lock
ljmp
daa
insb
in
repnz
out
mov
add
push
mov
xchg
jmp
push
push
int3
test
cmp
arpl
pop
call
pop
lret
sahf
jmp
lds
insb
lea
sbb
rorl
out
sbb
adc
clc
add
scas
lods
mov
dec
xchg
sub
je
adc
int3
adc
inc
mov
push
frstor
xor
stos
push
push
lea
jne
and
out
pop
sarl
mov
jmp
or
xchg
iret
loopne
sub
data16
mov
cmp
cmp
aad
mov
movsl
push
push
xlat
push
gs
or
sti
lds
ja
mov
sbb
xor
jle
in
add
imul
inc
mov
xchg
mov
in
sbb
int
push
mov
and
pop
aas
fs
mov
sbb
lods
mov
adc
xor
cli
cmp
arpl
les
jmp
jb
dec
ror
dec
sbb
cli
cltd
adc
out
cwtl
aam
lahf
jb
fcmovbe
pop
mov
sbb
mov
out
out
adc
pop
lcall
sub
movsb
call
cmp
data16
adcl
add
or
mov
jne
jp
ret
lods
push
bound
cli
daa
aaa
mov
je
adc
cmpb
inc
popa
xchg
repnz
fcoms
pushf
aad
jb
xchg
mov
mov
sbb
inc
shlb
xchg
mov
push
sub
add
pop
enter
push
fdivrs
add
sar
test
inc
sub
fildl
xor
xchg
xor
andl
fbld
mov
xor
add
imul
decb
cmpl
dec
ja
loop
das
int
pop
je
jb
ds
nop
js
mov
xchg
jae
sub
push
jl
push
shll
popf
repnz
ret
cmp
cli
xchg
fwait
int
sub
xchg
jb
lret
fsts
outsb
in
cmc
cmp
int3
sti
cli
scas
push
mov
daa
push
mov
fs
cmp
xchg
fdivrl
or
ret
jne
out
mov
dec
aaa
mov
adc
jmp
jl
xorb
mov
push
inc
cmp
dec
xchg
nop
pushf
dec
cs
sahf
ret
jns
pop
test
pop
push
insl
xor
les
aam
inc
sbb
and
cld
sub
in
and
add
stos
and
sub
inc
cs
shlb
in
mov
scas
xchg
stc
int
push
shr
and
push
cmp
push
enter
repz
ss
and
lods
fdivrl
test
pusha
jo
cmp
repnz
jno
xor
pop
cwtl
sub
adc
mov
jg
pop
dec
push
push
fstpt
or
gs
push
ds
shll
dec
mov
in
outsb
imul
loop
mov
andb
lret
adc
add
lea
pop
aam
add
sub
pop
test
outsb
mov
xchg
flds
bnd
add
test
popf
enter
push
jg
cmp
xchg
je
push
and
dec
cmp
mov
movsl
fidivrl
jg
adc
mov
ficompl
inc
ret
dec
jne
pop
adc
lret
shll
mov
lahf
popa
out
push
js
adc
ja
adc
jb
subl
fprem1
int3
fnstenv
outsl
call
or
std
xlat
cltd
dec
inc
sbbl
xor
push
inc
imul
and
data16
sbb
jmp
fmuls
mov
sahf
insb
sub
out
aas
pop
xchg
repz
adc
fld
ret
sti
aas
testl
lret
inc
dec
lods
add
mov
xor
cltd
xchg
adc
lods
je
sbb
adc
add
lods
xlat
outsb
iret
rorb
scas
or
cli
add
mov
out
add
adc
jns
filds
mov
mov
cwtl
stos
cli
dec
or
mov
ss
scas
mov
gs
dec
push
out
fldenv
mov
pop
add
test
push
fiadds
or
cltd
jbe
ljmp
and
inc
icebp
push
call
fwait
mov
hlt
ss
mov
mov
pusha
push
pop
rol
jl
mov
rcll
pushf
test
lods
je
pushf
xor
inc
sbb
cwtl
les
xchg
movsl
pop
adc
mov
add
cmc
or
imul
data16
test
pop
add
aas
cmp
xchg
jns
sbb
pop
add
in
aam
dec
xor
mov
in
inc
aas
mov
repz
in
xchg
mov
sahf
adc
fs
push
sbb
in
rol
pop
loopne
cli
les
hlt
sbb
ret
insb
xor
cmp
sti
sbb
shll
ljmp
neg
dec
mov
ja
repnz
loope
out
rorl
mov
sub
cmp
mov
aam
sub
xor
test
popf
pop
or
into
mov
cmp
sti
sbb
in
xor
enter
loope
out
or
adcl
xlat
nop
fisubl
mov
sbb
inc
mov
stos
add
scas
dec
imulb
dec
stos
rcll
pusha
jecxz,pt
mov
sub
daa
jl
movsl
fcomip
mov
jo
mov
mov
jmp
loope
call
xchg
outsl
lods
in
inc
pop
cmp
aad
je
inc
ret
push
into
cltd
sbb
pop
mov
pop
test
and
add
outsl
adc
dec
sub
in
out
adc
mov
xchg
add
xor
movl
xor
adc
and
sarb
xorb
and
add
lret
mov
rcrl
adcb
pop
paddusb
pushf
cmp
fsubrl
sbb
les
xchg
sub
add
push
mov
adc
jle
sahf
and
and
scas
jmp
mov
ds
mov
mov
and
popf
xchg
insb
jle
xor
mov
and
mov
jno
outsl
xchg
or
je
insb
push
ja
pop
add
adc
insl
cmp
rorb
sub
sbb
ds
stos
ret
sbb
jbe
and
push
xor
add
push
and
sahf
cmp
data16
dec
sub
jnp
jl
xor
jl
std
cltd
lock
push
cwtl
pop
enter
pop
mull
iret
inc
ret
cli
sti
push
or
cmc
adc
add
inc
sbb
sub
mov
and
or
aad
cmp
xchg
sarl
inc
cs
or
mov
jmp
mov
mov
out
out
sub
insl
adc
xor
out
sub
bound
sbb
lret
pop
sub
cld
add
xchg
add
adc
out
sbb
je
pop
jb
nop
jo
add
js
jle
jbe
shlb
js
xchg
enter
lret
mov
mov
in
lods
jmp
dec
insl
adc
sub
adc
aas
mov
jmp
sbb
popa
sti
or
mov
push
cmp
sub
dec
popa
and
push
lods
leave
fdivs
sbb
mov
popf
out
sbb
xchg
jmp
mov
mov
sarb
imul
enter
fisubrl
push
push
xchg
sarl
sbb
push
jle
gs
sarl
inc
fnstsw
lea
addr16
nop
cmp
jae
ret
andl
test
fistpl
sbbl
adc
sbb
mov
or
mov
cli
aaa
push
sbb
repnz
sbb
into
outsb
fldenv
mov
xor
pushf
aam
xor
ds
pop
lret
adc
xchg
fimull
mov
out
cmpl
mov
pop
jg
movsl
lahf
ljmp
lret
loope
mov
dec
int3
mov
or
xor
sub
jbe
jecxz
test
inc
cmpsb
in
dec
mov
call
data16
cmp
push
push
and
dec
and
fimuls
adcl
les
fnstcw
adc
popa
lods
popl
xchg
dec
jnp
in
out
xchg
sbb
xchg
cltd
xchg
in
jns
cltd
icebp
data16
add
pop
or
scas
adc
xchg
fcmovne
inc
push
icebp
ret
call
lods
jns
pop
bound
jmp
cmp
sub
xchg
ss
into
rclb
mov
je
jecxz
setae
push
cmp
repz
cmp
popa
popl
fsubr
addb
jo
xchg
int
inc
in
shrl
in
dec
ja
out
bound
sub
mov
push
sbbb
push
push
scas
jmp
sbb
lret
xchg
cmpsl
sahf
inc
dec
icebp
hlt
fmull
inc
sti
dec
push
pop
movsb
enter
xor
mov
jns
ss
pop
inc
das
mov
cs
cld
mov
mov
push
aaa
cmp
ds
sub
sub
xor
xor
sti
repnz
cmpsb
mov
out
bound
aad
call
pop
testb
or
pop
lds
ja
stos
imul
test
push
call
mov
pop
xchg
mov
mov
lret
sbb
jg
int3
push
or
scas
sub
icebp
repz
mov
mov
xchg
pop
in
in
xchg
shl
add
pop
add
cli
mov
mov
mov
lods
mov
aam
cmp
icebp
mov
out
xchg
pop
stos
dec
pop
mov
xchg
out
mov
decl
cmp
cmpsb
xchg
vcvtpd2dqy
rcr
jae
pushf
lock
les
jge
pushf
jbe
dec
xor
subl
xchg
sbb
xchg
mov
pop
loop
insw
cmp
repz
test
xchg
cli
xor
sub
mov
or
dec
xor
inc
and
mov
jbe
das
pop
rcll
rcl
inc
rcrl
aad
cltd
mov
cli
jns
mov
iret
push
ss
lods
bound
jg
xor
lret
mov
clc
rcrl
inc
and
jg
or
arpl
jb
pop
loopne
ret
int3
xchg
add
pop
scas
pop
mov
inc
out
jns
mov
lea
jnp
enter
jecxz
fstpt
xlat
bound
mov
cmpsb
cs
movsb
popl
mov
lahf
push
or
xchg
aad
xchg
and
mov
sahf
leave
lds
push
adc
pop
adc
xchg
loopne
repnz
xchg
mov
push
xor
nop
lods
mov
mov
mov
into
mov
push
lds
lock
rorb
inc
loop
imul
loop
mov
cli
ret
push
lret
inc
sub
inc
loope
int3
jmp
gs
jbe
rorl
sahf
push
cmp
mov
popa
fwait
sarb
imul
repz
cmc
xor
dec
mov
rolb
and
mov
sub
dec
data16
inc
and
rclb
push
ljmp
mov
or
into
aas
xlat
pop
andb
lcall
pusha
adc
stos
mov
jns
xchg
inc
adc
mov
push
leave
adc
add
jl
jb
jne
add
ss
mov
pop
sahf
outsb
cmp
pusha
ja
sub
pop
fs
mov
lret
lods
inc
and
sahf
test
jns
and
mov
xchg
std
sub
and
xor
fdivrl
jo
xor
mov
loope
repnz
ret
pop
insb
lea
add
mov
xchg
mov
outsl
shlb
mov
or
mov
divl
rorb
and
daa
mov
add
push
dec
or
ficoms
pop
cwtl
mul
mov
sub
into
lahf
stc
push
lods
mov
pushf
or
jne
hlt
std
sar
xchg
add
inc
sahf
test
mov
inc
adc
xor
pop
test
push
leave
adc
adc
lods
sbb
xlat
sbb
inc
sbb
adc
cs
push
out
pop
push
in
cmp
shlb
mov
adc
mov
cmp
mov
and
push
inc
stos
dec
hlt
addr16
loop
jne
mov
xchg
pand
mov
negl
mov
xchg
mov
dec
xlat
dec
dec
push
inc
xor
jno
lods
and
or
test
jmp
cld
shr
jae
repnz
ret
inc
mov
push
xchg
aad
imul
fistpl
xlat
pop
pushf
jns
mov
fisttpl
inc
push
test
mov
repz
dec
sub
and
xor
sbb
cmpsl
mov
jmp
xor
adc
inc
inc
fnstsw
popf
test
fucomi
outsl
push
pop
pop
fwait
test
inc
pop
mov
mov
cmp
cwtl
imul
scas
imul
imul
xchg
jo
in
inc
mov
pop
outsb
cmc
push
or
mov
pusha
mov
xchg
adc
insl
insl
out
inc
dec
sti
adc
xchg
mov
ljmp
rclb
add
dec
and
mov
mov
fdivp
mov
stos
xorl
sahf
push
mov
mov
mov
outsl
imul
stos
push
adc
add
xor
aaa
mov
xorl
movsl
dec
inc
into
mov
les
repnz
mov
popa
stos
xor
lea
and
mov
rorl
add
shl
add
shrb
cld
loope
mov
shl
jno
mov
dec
cwtl
pop
add
in
cld
and
sbb
je
std
pop
add
jae
mov
adc
dec
inc
hlt
sahf
jo
leave
cmp
pushf
dec
fwait
jb
movsl
insb
xor
lea
stos
cmpsl
and
je
adcl
or
lds
xchg
mov
aaa
push
and
cwtl
or
in
out
adc
and
aad
jecxz
jge
pop
addl
push
jb
scas
repnz
test
sub
call
lahf
subb
inc
jns
outsl
or
dec
js
fsubr
pop
iret
imul
xor
add
add
pop
inc
and
adc
or
push
ljmp
xchg
mov
jmp
adc
ss
scas
mov
lock
cmp
lock
push
inc
fnstsw
in
clc
mov
or
push
inc
jp
jmp
dec
pop
and
adc
in
inc
or
rorl
imul
fisttpl
scas
or
loope
mov
xchg
push
pusha
ja
or
push
adc
mov
fstl
mov
jne
jns
repnz
fcoms
sub
or
dec
fistps
mov
test
or
mov
cmpsb
adc
adc
dec
movsb
push
je
test
inc
pusha
les
popf
jmp
stos
jge
loop
pop
cltd
add
or
pop
push
sti
xchg
adc
leave
or
mov
inc
mov
dec
dec
in
in
test
jg
sbb
xor
loope
push
xor
int3
hlt
ret
xlat
cmp
dec
in
mov
outsb
fcoms
push
outsl
insb
xchg
pop
and
add
psubsw
cmpsl
fstps
jbe
mov
cmp
jnp
sub
ljmp
popl
push
jmp
test
or
ja
ret
adc
mov
sbb
add
pop
pop
mov
test
jns
pop
jp
dec
push
jl
adc
push
dec
leave
jl
fistps
lahf
pop
sbb
sbb
sub
mov
jbe
nop
xor
mov
jb
mov
and
es
add
ret
scas
mov
out
dec
aad
repz
mov
and
sbb
shll
test
mov
dec
jmp
shrb
out
lret
sbb
xor
add
loopne
lret
das
fistps
and
push
mov
fwait
imul
mov
popa
lods
inc
or
pop
mov
test
xchg
es
das
pop
mov
dec
pop
pop
bound
repnz
or
movb
add
push
mov
xchg
jne
dec
jo
jne
jmp
pop
adc
or
pop
pop
adc
ret
aas
mov
scas
pusha
add
jmp
push
adc
mov
aam
incl
aad
mov
movsl
fwait
inc
adc
int3
dec
in
rolb
fcmovnbe
sub
push
shlb
cmp
test
stos
movsb
addr16
nop
ret
lods
rcrl
adc
dec
sbb
lahf
pop
pop
sahf
mov
lahf
xchg
jmp
mov
dec
sbb
pop
aad
cli
adc
or
mov
xor
mov
pusha
in
ljmp
adc
fs
ja
outsb
push
bound
es
test
xor
ret
loopne
cmp
and
scas
aaa
or
jmp
addb
out
mov
cmp
icebp
inc
pop
test
xor
xchg
xchg
lods
and
jno
cmp
clc
push
pop
push
gs
or
lahf
ret
je
enter
inc
cwtl
dec
aas
imul
xchg
or
insl
mov
sbb
adc
and
pop
xor
jl
push
out
sbb
aas
mov
stos
add
jp
pop
sahf
cmp
test
sub
popa
pop
sub
lods
ret
adc
imul
sub
ret
and
jnp
jns
sub
sub
jg
mov
adc
sub
clc
pop
mov
and
es
aas
sub
je
sbb
sti
push
dec
hlt
imul
mov
movsl
daa
mov
dec
or
sbb
jcxz
jp
sub
addb
ficompl
mov
cmp
sub
in
loope
stos
ret
push
in
mov
push
mulb
sub
addr16
stos
lahf
nop
pop
test
dec
int
add
data16
adc
stos
lret
xor
fsubs
inc
mov
cmp
pusha
jecxz
dec
mov
call
popf
shrl
and
shll
xchg
lahf
sbb
push
xor
jno
jmp
push
scas
movsl
inc
push
int
ficoms
test
pop
cmp
lcall
sub
clc
push
scas
mov
lods
in
loopne
int
xor
mov
ds
dec
shl
cwtl
xchg
mov
xchg
rolb
out
jb
adcb
add
mov
jecxz
push
jne
bound
dec
test
call
arpl
mov
gs
in
cwtl
xlat
es
imul
jne
add
or
mov
push
es
pop
sahf
add
pop
sahf
ret
mov
sarb
dec
adc
pop
loopne
fldl
mov
jp
xchg
adc
pop
cmc
lcall
fucom
int3
push
jl
test
aam
ret
call
js
adc
inc
ljmp
push
mov
add
mov
add
add
addr16
dec
jle
pop
jne
in
stos
xor
pushf
mov
cmp
push
push
push
sbbl
lods
scas
lret
cwtl
adc
in
outsl
pop
cli
mov
aaa
mov
sub
out
mov
sarb
cmp
std
xchg
mov
add
xor
sub
pop
jne
xor
shrl
insb
pop
push
in
insb
nop
mov
lret
sbb
mov
out
lcall
cmp
sti
cltd
loope
push
jne
xor
add
mov
jo
repnz
pop
xor
lods
sub
mov
inc
jp
jb
pushf
add
stos
sahf
ds
mov
in
inc
xor
test
jne
cltd
and
cmovno
filds
dec
sbb
xor
js
nop
int3
sbb
cwtl
mov
mov
movsb
jmp
cmp
mov
inc
divl
cmp
rorl
push
dec
cmpsl
mov
ds
cmpsb
test
fwait
negl
std
mov
or
push
mov
lds
jb
fcoms
inc
movsl
movmskps
push
mov
rcll
pop
sti
or
aaa
out
incl
ja
cmp
outsl
fcomip
xor
je
or
push
xchg
mov
jg
lcall
cmp
rcrb
jno
jp
bnd
jge
push
data16
xchg
adc
sbb
ficomps
leave
lcall
cmp
decb
push
enter
iret
out
cmp
sbb
lcall
inc
call
xor
int3
test
sub
dec
adc
fwait
adc
shrb
lret
popa
sbb
mov
push
bound
pop
repnz
dec
mov
and
ret
adc
imul
sbb
lret
jbe
xchg
mov
mov
sub
push
shlb
enter
ljmp
ret
jp
mov
xchg
mov
or
int3
jbe
pop
imul
imul
aam
sbb
jge
sbb
jp
and
imul
xchg
sub
stc
add
cmpsb
cmp
fstps
sub
cs
sub
sub
ds
xchg
rcrl
daa
shl
shrl
adc
stos
jg
and
int3
jnp
sub
dec
shrl
push
mov
js
jmp
or
repz
sub
inc
iret
pop
cmp
into
data16
mov
xor
xlat
xlat
ss
xchg
cmpsl
xor
jle
mov
adc
jb
cmp
pop
dec
xor
add
pop
cwtl
push
sahf
jle
sub
cmp
xchg
gs
movsb
mov
in
jmp
cmp
mov
sbb
dec
or
cmp
adc
loope
xor
pop
mov
idivl
xchg
sbb
add
aam
pop
adc
mov
iret
mov
fucomi
lock
repnz
flds
and
lds
fsubrs
mov
push
cli
push
mul
xor
sarb
popa
xchg
filds
inc
les
push
mov
xor
push
cmp
test
mov
mov
add
sahf
cmpsb
movsl
daa
mov
data16
aaa
pusha
call
fists
push
push
cmp
cltd
or
in
mov
dec
cmc
mov
adc
lret
in
dec
mov
push
add
pop
pop
dec
push
dec
or
add
mov
jmp
std
sub
fmull
add
jecxz
lock
fcompl
and
and
lret
inc
jg
jmp
mov
lods
push
int
adc
xor
arpl
outsb
pushf
insb
xor
and
inc
je
cs
xchg
sti
iret
pop
mov
rcrl
lret
repz
add
cwtl
inc
pop
loope
fnstenv
ret
push
ret
jae
repz
sbb
or
jns
mov
vphadduwd
ds
mov
gs
fisubs
inc
shll
fidivrl
cmp
andb
inc
and
xchg
add
mov
xor
movsl
dec
ja
scas
ret
daa
mov
sbb
nop
lock
test
push
dec
cmp
xchg
sub
test
mov
cs
jg
inc
stos
lahf
pop
lret
fimull
pop
xchg
pop
jp
imul
fidivrl
popf
xchg
out
inc
mov
xor
dec
mov
jae
dec
dec
hlt
xor
mov
shrl
jp
or
mov
cmp
dec
mov
subl
leave
pcmpeqd
xchg
imul
inc
cwtl
ret
pushf
cmp
mov
cmc
xchg
rcrl
cmp
loope
mov
sub
cmp
mov
jp
pushf
hlt
sbb
mov
jg
ret
fwait
xchg
or
dec
loope
xchg
rolb
dec
push
jp
pop
stc
scas
mov
pop
cli
inc
mov
or
push
sub
inc
lcall
push
icebp
add
push
hlt
int
bound
mov
bt
jae
setl
dec
sub
fmuls
mov
cs
loope
jae
mov
mov
lods
movsb
jl
fwait
int
pop
clc
scas
aam
mov
xchg
fs
xchg
xor
xchg
mov
test
lods
adc
cmp
jmp
xchg
sub
xchg
cmp
xorl
inc
shl
outsb
movlhps
or
fimuls
push
sbb
xor
sub
xchg
test
pop
mov
ret
cmpl
rorl
rcrb
pop
aaa
leave
mov
into
in
jns
fld
mov
dec
and
dec
dec
out
fs
in
sub
pop
cmpsb
add
xchg
push
stos
mov
jg
imul
xchg
scas
das
adc
ffreep
test
inc
cltd
in
pop
arpl
mov
cmpsb
sub
mov
mov
ja
arpl
mov
dec
sub
jmp
lcall
cs
fcompl
inc
ja
mov
popa
push
xor
cmpsl
shlb
mov
or
cld
mov
pop
icebp
sbb
das
sub
sbb
aas
adc
add
push
fcom
mov
add
xchg
sahf
mov
shl
mov
dec
cld
xchg
inc
jmp
adc
shll
out
pop
mov
or
mov
popl
push
pop
cmpl
popa
pop
gs
cmp
jge
sub
fldenv
cmp
sbb
aad
out
jbe
ja
push
test
popf
cmpsb
mov
inc
dec
or
xchg
mov
clc
arpl
jg
inc
js
inc
ret
sbb
aaa
cmp
jge
xchg
jbe
or
pop
fimull
lods
sub
icebp
incl
jmp
enter
stos
mov
loop
scas
mov
push
xchg
cmp
nop
inc
arpl
das
aaa
inc
inc
mov
sarl
sti
and
ud2
pushf
add
mov
and
xchg
pop
inc
je
insl
sbb
xchg
and
das
aam
pop
mov
and
push
or
cmp
jb
xor
sub
xor
dec
add
xchg
dec
stos
out
xor
dec
jecxz
and
mov
adc
sti
cmp
mov
loop
xor
pushf
and
jmp
mov
movsl
cmc
addr16
inc
jnp
xchg
and
or
inc
arpl
xchg
je
adc
sbbb
push
push
jns
bound
adc
xchg
mov
mov
xchg
and
push
outsb
mov
mov
sbb
icebp
mov
lahf
idivl
fcoms
mov
dec
outsl
mov
loopne
jl
cmc
jmp
add
jge
inc
imul
gs
xchg
pop
test
mov
sti
pop
mov
aas
dec
std
cmpsb
mov
mov
pop
pop
lock
jl
mov
scas
clc
imul
cli
pop
jl
lret
xchg
test
jne
dec
negl
je
lcall
stc
sub
in
and
pop
sbb
imul
lcall
pop
adc
movsb
loopne
sbb
out
add
clc
pop
fldcw
pop
flds
and
lea
stc
popl
aad
mov
dec
mov
dec
cmp
xchg
inc
lock
add
mov
scas
xchg
push
popa
das
push
mov
xlat
lret
ja
cmp
loope
sbb
push
sbb
cmpsb
notl
movsl
call
pusha
xchg
jb
xor
aaa
mov
int
outsl
arpl
fdivr
and
movsb
in
jecxz
les
test
dec
mov
fcomps
xor
movsl
push
jmp
ljmp
dec
roll
push
movsl
or
add
add
dec
or
cs
test
pusha
test
sbb
stos
jl
push
cmp
sub
cmpsb
fcmove
sub
movsb
dec
mov
int3
in
adc
andl
addr16
lret
adc
dec
les
loop
cmp
xchg
test
inc
fcmovb
inc
pop
xchg
mov
push
das
movsl
out
or
outsl
cmc
iret
roll
ret
call
add
jbe
fcoml
sub
iret
push
jg
aad
pop
jnp
and
pop
cmp
cli
xor
push
add
inc
xchg
int
cld
out
pop
je
push
jl
lahf
mov
lods
out
pop
mov
push
in
aad
jne
fnsave
xor
add
push
das
xchg
xor
test
or
es
sub
fs
cltd
out
push
loope
lcall
push
stos
addr16
mov
push
arpl
out
rclb
cmp
or
jl
call
nop
mov
mov
adc
mov
mov
and
and
gs
mov
sub
mov
xchg
push
sub
inc
popf
fnstcw
loopne
jge
aad
sub
sbb
fdivrs
push
out
mov
clc
mov
push
ret
mov
cmp
xchg
sub
sbb
jae
cmpsl
sub
out
dec
cmp
aaa
xor
mov
xchg
fildl
xor
sub
push
arpl
fnstcw
fwait
mov
push
shll
mov
and
adc
ja
cmp
inc
nop
test
mov
pop
cmp
lods
xchg
int3
loop
xchg
stc
jbe
out
rcl
pop
scas
pop
test
cmc
push
dec
and
sbb
mov
add
pushf
aas
insl
push
jno
sub
cmp
frstor
and
xchg
mov
in
push
and
xchg
cmp
andl
pop
jmp
cmp
into
sbbl
pop
jge
and
scas
outsb
ret
and
outsb
sub
aam
dec
test
adc
fdivl
imul
cmc
out
aas
pop
pushf
mov
in
xchg
dec
ficoml
push
xchg
cltd
int
outsb
inc
xchg
in
out
mov
pusha
mov
adc
shlb
fldt
stc
out
test
mov
and
xchg
pop
cmp
jns
lods
jns
fdivl
lret
mov
sub
aaa
add
aaa
push
test
mov
cmp
movsl
out
loop
scas
shrl
stc
bt
xchg
popa
or
retw
sti
ja
dec
inc
pushf
aaa
or
sub
adc
mov
and
enter
mov
cmp
adc
mov
stos
adc
ss
rcll
fldenv
shlb
mov
outsl
push
pop
int3
movsb
xor
mov
jbe
stos
jb
mov
adc
stc
mov
fisubrl
mov
add
push
sub
cmp
lret
ds
in
fdivrl
in
cmp
negl
pop
mov
mov
mov
xchg
mov
push
mov
das
ret
fcomip
jge
cmp
js
jl
mov
cwtl
xchg
dec
inc
rcrl
aas
xor
outsb
addr16
test
outsl
mov
ret
fdivs
sub
cmp
ja
mov
movsl
push
icebp
and
xchg
jne
inc
dec
stos
mov
vmread
add
jb
pop
fcmovnbe
and
xchg
in
mov
aam
lret
lods
daa
cwtl
inc
test
xchg
ja
loopne
jno
mov
out
xchg
je
sbb
popa
cmp
sub
mov
mov
sahf
xchg
pop
or
bound
xchg
lahf
sbb
fisttpl
data16
pop
mov
cmpsb
popa
sbb
call
ret
dec
and
es
jl
test
fwait
scas
std
cmpb
xchg
and
add
adc
clc
mov
push
add
arpl
xor
imul
and
cmpsb
sub
push
arpl
sahf
add
sub
add
mov
cmp
call
mov
jns
inc
cmc
inc
lret
xor
and
lretw
xlat
sbb
add
fs
jno
dec
inc
xchg
inc
leave
rcll
push
add
mov
mov
out
into
pop
loope
bound
movsb
jo
or
ret
or
sub
in
les
icebp
add
or
push
scas
cmp
push
cli
imul
stos
push
cmp
loop
nop
aam
push
lds
push
das
inc
xchg
scas
dec
jle
mov
stos
in
test
cmp
aas
leave
fwait
in
sti
dec
bound
movsl
inc
or
mov
fiaddl
add
incb
push
imul
push
lret
in
dec
cmc
sbb
sub
jae
pop
mov
nop
enter
faddl
xlat
cmp
dec
rcrb
hlt
lds
inc
mov
cmp
dec
jbe
repnz
ret
push
cmp
jmp
mov
into
aam
xchg
mov
cli
jbe
ds
fcompl
cs
xchg
jl
sbb
mov
dec
loop
xchg
adc
jns
add
jle
das
mov
lods
jnp
loop
testl
fsubr
das
push
loop
push
imul
xchg
repz
pop
clc
jmp
inc
inc
mov
sbb
fcomps
mov
dec
inc
jmp
xor
jge
dec
stc
pushf
call
push
lock
cmp
cmpsb
imul
fbld
adc
xchg
int
int3
scas
mov
mov
fidivl
inc
in
sarb
dec
sti
out
shrl
pop
andl
jmp
mov
test
pop
dec
shr
ja
in
sub
adc
pop
lcall
in
cwtl
pop
jle
xchg
jecxz
mov
fistps
mov
pop
jne
lods
nop
inc
sbb
add
cld
lods
into
xor
iret
mov
ljmp
inc
mov
fwait
add
xor
test
movl
int
sub
inc
int3
outsl
inc
sbb
sbb
sub
leave
jae
loopne
test
and
in
repz
jge
sub
loopne
les
and
lahf
push
xor
cmpsb
push
ja
subb
dec
sti
sub
fs
adc
mov
sahf
mov
pop
sub
popa
push
adc
outsl
loope
sbb
mov
or
xor
out
xchg
aaa
icebp
mov
lds
xchg
cltd
in
xchg
or
loope
inc
clc
es
mov
push
hlt
push
cli
push
cmp
sub
cmpl
cld
mov
jne
ja
lahf
arpl
decl
xor
jbe
adc
lock
jae
inc
in
out
dec
repz
lods
pushl
mov
adc
xlat
outsb
mov
cs
gs
imul
clc
fistps
xor
loopne
data16
mov
cmp
movl
push
ret
cmpsb
fmull
cs
add
ret
adc
scas
scas
and
adc
data16
cmovle
push
jno
dec
divl
sar
addb
cmp
jae
testl
push
push
inc
inc
mov
jae
sbb
mov
lcall
cltd
pop
outsl
sub
sti
aam
pop
push
int3
or
out
push
ds
std
sub
adc
fnsave
xor
push
daa
icebp
push
cmc
jmp
adc
mov
xchg
mov
xchg
xorl
lock
cmp
inc
into
jne
and
bnd
add
dec
push
push
repz
mov
cltd
push
repnz
sbb
imul
mov
mov
jmp
pop
rorl
adc
xchg
xchg
mov
xor
xchg
cmp
push
xchg
je
call
or
jbe
sarb
push
or
dec
dec
std
xchg
daa
mov
imul
dec
push
inc
cmpsl
outsl
cltd
pop
cmp
test
adc
sti
je
cmpsl
cmc
test
xchg
dec
push
lods
adc
ret
pop
adc
lds
std
xchg
jle
inc
imul
sub
fadds
lods
lea
jp
jmp
jae
jl
dec
fwait
adc
sbb
mov
add
xor
mov
xor
fisubrs
arpl
lea
daa
cmp
push
mov
add
inc
ljmp
add
mov
mov
addl
shlb
dec
push
pop
push
and
mov
jbe
jo
mov
xor
sub
push
cmp
pushf
jbe
mov
push
fwait
lahf
out
mov
cmpsl
pop
push
test
sub
or
pop
clc
pop
in
pushf
insl
push
push
cli
add
xor
adc
mov
push
dec
xchg
mov
xchg
sti
test
mov
xor
jae
inc
ret
lret
xchg
pop
mov
xlat
push
je
mov
mov
push
les
test
lcall
mov
mov
arpl
movsl
pop
mov
add
push
mov
jmp
and
ds
pop
or
dec
pop
jns
add
cli
shr
xchg
int
lret
sbb
pop
imul
gs
lahf
pop
lcall
je
xorl
out
lods
xchg
xchg
popa
aad
push
pop
lret
inc
or
inc
movsb
ss
in
mov
sub
mov
hlt
xlat
xchg
fs
mov
les
inc
sub
sbb
or
jo
pop
push
pop
adc
stos
pop
cmp
lods
cmpb
mov
enter
push
jnp
adc
add
dec
inc
stos
into
fs
lock
mov
fcompl
into
dec
cmp
lret
pop
inc
jmp
repz
sahf
pusha
lret
or
adc
xchg
jbe
cmp
movsb
push
dec
ffreep
push
mov
ss
jno
pop
jae
ret
adc
mov
nop
pushf
js
jl
adc
lret
int
imul
iret
or
push
add
cs
cmpsb
or
push
xor
push
repz
ret
cmp
incl
jmp
jnp
xor
pop
std
push
fwait
adc
xchg
pushf
rorl
outsl
je
cmp
rcrl
insl
add
cld
dec
mov
xchg
test
into
fbld
das
and
add
mov
cmp
fistpll
ljmp
jecxz
cltd
fisttpll
arpl
mov
xchg
jecxz
std
into
pop
stc
stos
pop
jmp
js
int3
mov
test
addl
dec
xor
popa
cli
out
adc
aaa
dec
xchg
fcmovnu
push
jns
jl
pop
bound
mov
imul
das
fsubr
dec
addr16
ficoml
adc
popf
bound
cmp
push
imul
fs
and
dec
lcall
inc
mov
dec
sub
test
cmpsb
push
in
and
cld
mov
adc
and
test
jge
push
sub
sub
cmp
rol
xor
sbb
sbb
jl
cmpsb
mov
das
mulb
cltd
or
jns
inc
rcrb
mov
dec
mov
push
ljmp
mov
add
inc
cmpsb
insb
sahf
mov
and
and
cmp
jno
mov
mov
inc
push
into
enter
pop
stos
cli
negl
inc
mov
inc
dec
stc
or
mov
xchg
inc
aas
filds
loope
jecxz
jge
repz
push
shr
gs
les
mov
mov
movsb
pop
sbb
in
adc
pop
call
imul
mov
mov
popa
neg
divb
sub
das
push
loopne
negl
jne
xchg
cmpl
cmp
negb
stos
cltd
mov
imul
xchg
jnp
inc
faddl
call
and
addr16
ror
test
mov
jg
sarl
lret
jecxz
rolb
and
enter
mov
xchg
pop
mov
popa
mov
inc
sub
les
dec
or
rorl
adc
cmc
inc
push
and
cs
jecxz
mov
mov
lods
faddp
jmp
movsl
pop
shlb
sti
adc
imul
aam
lcall
cmp
out
mov
mov
adc
add
outsl
hlt
shrb
adc
sbb
or
nop
test
idivb
shll
in
pop
js
movsl
clc
and
je
fidivrl
hlt
aas
jae
sub
bound
and
sbb
or
dec
or
push
cltd
idivl
add
adc
sarl
mov
std
pop
aad
push
xor
test
shrb
ret
nop
ljmp
xchg
ret
mov
sahf
adc
push
gs
xchg
or
fimuls
out
out
push
and
or
call
xor
add
nop
mov
mov
rol
cmp
or
pop
sbb
add
xor
insl
fcomip
xchg
pushf
sahf
lods
sbbb
call
pop
movsb
dec
push
xchg
dec
sbb
push
mov
mov
mov
in
addr16
xchg
aam
loopne
inc
or
sub
mov
push
in
pop
test
mov
roll
add
xor
pushf
push
fidivrs
fsts
pmaddwd
pop
xchg
xor
adc
and
jp
lea
hlt
rcrl
fcomps
cmp
push
loopne
scas
adc
repz
cmp
xlat
xor
push
inc
or
xchg
adc
inc
push
pop
aad
inc
out
lret
pop
and
cmp
push
jle
fadd
lcall
pushf
and
pop
into
lds
jb
and
dec
mov
lods
cs
adc
das
mov
lcall
inc
cmc
lods
pop
test
arpl
iret
or
int3
addb
jp
xchg
aam
or
pop
sbb
hlt
clc
mov
fisttpll
adc
mov
and
push
dec
pop
xor
dec
das
clc
jp
add
sub
sbb
jp
movsl
aam
sahf
sahf
dec
jle
jecxz
jl
jo
invd
sub
push
fidivrs
cmc
repz
aas
sbb
and
or
jp
cld
xchg
aad
push
jo
pop
addb
aaa
push
hlt
mov
jb
in
int3
gs
ss
iret
push
inc
test
ret
push
gs
jp
mov
negl
imul
stos
jmp
adc
jbe
push
test
lods
xchg
push
and
pop
insb
ds
shrb
repz
cmp
out
sub
mov
cltd
dec
and
push
xchg
cli
or
out
xor
aad
mov
inc
sti
loopne
pop
imul
push
sbb
test
fs
mov
mov
inc
dec
popf
fadds
cmp
call
mov
or
jae
arpl
rcll
mov
mov
mov
sbb
sub
popf
mov
dec
push
fdivrs
mov
xchg
into
dec
cmp
aam
or
sahf
mov
enter
jne
movsb
push
fistpl
fucom
scas
push
inc
or
mov
and
xchg
aas
push
mov
or
mov
dec
jo
test
ds
adc
cltd
fs
in
jbe
mov
fisttpl
loope
fpatan
loop
fcmove
cs
fimuls
xchg
int3
mov
or
ljmp
jl
aam
repnz
dec
adc
add
daa
xchg
mov
test
sub
add
aaa
pop
nop
stos
aas
add
cmpsb
in
and
push
lock
das
je
loope
cmp
shll
dec
pusha
and
adc
inc
ret
sbb
shlb
jo
add
outsl
dec
in
loope
add
or
aaa
push
or
cltd
loop
movsl
mov
std
mov
bound
push
test
xor
or
stos
and
push
or
insb
insl
pop
xchg
xor
cmp
xchg
push
jo
cmp
inc
scas
iret
push
aad
sub
fistl
adc
xlat
cld
push
fwait
subb
sub
test
jbe
ret
push
stc
dec
xchg
lock
mov
cmp
call
es
mov
lahf
sbb
test
mov
dec
push
mov
addl
pushf
push
jle
mov
mov
or
roll
lea
mov
jge
inc
adc
xor
aam
cmp
roll
dec
ss
fsubs
fwait
push
cmp
mov
pop
pop
lret
and
add
pushf
dec
mov
movsb
or
dec
dec
mov
stc
push
fsubrs
sbb
add
push
inc
test
pop
push
leave
xor
push
mov
into
loop
jp
push
and
inc
data16
dec
add
adc
movsb
bound
out
in
pop
hlt
mov
cmpl
fnstsw
cli
fdivs
sub
or
aad
and
push
mov
lock
pop
mov
mov
aad
cmpb
mov
and
jnp
sbb
xchg
cs
jge
iret
pop
in
jb
imul
iret
dec
pop
pop
mov
add
fisubrl
ret
imull
cmp
loop
shr
les
push
int3
in
add
shll
xchg
iret
gs
pop
mov
and
xchg
fsubs
pop
xlat
or
arpl
dec
pop
pop
sti
mov
dec
jbe
aad
dec
xchg
imul
cmp
cld
pusha
cwtl
lds
lods
test
and
jnp
cmp
mov
fs
test
in
push
inc
inc
mov
fistl
adc
aam
inc
mov
jmp
push
rcrl
jbe
addl
sbb
jle
je
pop
push
fucom
outsl
and
cmp
ss
add
pop
in
or
pop
and
fwait
cmpsb
dec
lcall
sub
imul
fnstenv
jne
jle
mov
test
inc
mov
nop
xor
or
mov
dec
enter
mov
test
sub
add
mov
in
nop
or
mov
mov
lcall
ret
jecxz
mov
loope
sahf
sbb
mov
or
rcl
aad
aam
add
jmp
mov
add
nop
in
test
ljmp
jb
mov
xchg
inc
leave
out
pop
pop
mulb
ja
mov
insl
mov
sarb
mov
xor
jb
sub
push
lods
sbb
fdivr
mov
add
repnz
mov
sbb
sti
cld
repz
loope
xchg
lods
aad
add
add
int
in
cs
inc
cltd
incb
xchg
cmp
or
aad
mov
xor
mov
lahf
inc
ds
xchg
scas
outsl
or
nop
pop
sbb
sysexit
mov
xchg
stos
cmp
xchg
jb
sub
shl
or
mov
mov
adc
push
mov
testb
inc
push
pushf
addr16
loopne
lods
fmull
push
daa
or
push
es
dec
jp
cmpsl
imul
scas
je
jnp
sub
add
lods
bound
add
or
push
scas
mov
sub
push
xchg
push
fcmove
lds
push
mov
cltd
mov
daa
test
sar
add
sti
inc
push
xchg
aad
cwtl
stos
mov
add
test
cmpsl
loope
mov
dec
adc
pop
xorb
and
mov
iret
mov
pop
cmp
jp
inc
jbe
mov
ljmp
mov
cmpsb
inc
je
sub
jnp
mov
xchg
and
push
int3
repnz
loope
inc
outsl
xchg
and
xchg
push
dec
subb
rclb
insb
xchg
adc
jns
jge
dec
sbb
repnz
pop
test
cmpsb
es
sub
hlt
jg
ss
mov
xchg
jb
xchg
xchg
sar
cmc
push
call
jnp
mov
in
addr16
inc
negb
fnsaves
pusha
mov
or
xor
jae
adc
cmp
ja
adcb
mov
adc
outsl
pop
shlb
mov
rcrb
data16
mov
cmp
pop
mov
add
in
and
mov
mov
dec
push
jge
movsl
or
add
mov
adc
rorb
add
or
out
addr16
mov
xchg
mov
mov
fsubrs
cmp
out
add
or
inc
aad
and
shlb
jo
je
sub
add
cmp
insl
repnz
pop
dec
xchg
mov
aaa
inc
and
sbb
sarl
into
dec
xchg
ret
inc
dec
cmc
js
pop
jns
mov
xchg
aas
cmp
push
fistl
ret
xchg
popl
outsb
mov
rolb
inc
in
mov
mov
dec
insl
xchg
arpl
inc
mov
flds
rcrb
inc
cmpsl
xor
loope
dec
fisubrl
xor
je
xor
add
gs
hlt
sub
je
mov
sub
outsl
insl
jae
incb
fnsave
cli
fiaddl
xchg
mov
sbb
push
ss
jl
add
rorb
dec
fsubrl
sbb
in
xor
xor
nop
dec
sub
les
idivb
js
add
inc
dec
std
lcall
inc
xchg
pop
adc
arpl
outsb
adc
scas
adc
ret
or
shlb
addb
ror
adc
mov
gs
adc
mov
int
in
pushf
jl
sti
add
sub
idivl
int
and
mov
or
mov
fiaddl
clc
mov
mov
stos
sbb
push
stc
mov
mov
pop
add
cmp
sbb
lret
xor
inc
add
into
cmpl
xor
mov
mov
test
lret
mov
or
push
js
data16
adc
mov
incl
push
mov
mov
icebp
mov
sub
adc
pop
push
push
and
fdivrp
and
outsl
add
scas
enter
cmp
lock
and
fidivl
dec
movsb
iret
push
sbb
push
in
mov
icebp
sti
ja
insb
sub
inc
mov
mov
daa
iret
mov
stos
insb
fstl
mov
cli
lea
lret
jl
add
sti
in
dec
test
mov
dec
sar
push
push
xchg
add
dec
sbb
xor
aam
or
test
loop
cld
test
out
icebp
aaa
and
adc
push
test
xchg
mov
lea
in
cmp
out
ffree
mov
iret
mov
clc
stos
lea
xor
popf
cmp
popa
ficompl
fldcw
test
push
push
xchg
aas
cmp
fwait
adcb
mov
mov
mov
out
das
js
mov
cmp
jg
lods
pop
imul
inc
fs
fcmovnbe
fmuls
cmp
jecxz
mov
dec
int3
sbb
xchg
clc
aad
movsl
xor
mov
inc
test
out
push
jecxz
pop
mov
add
outsb
ret
adc
and
cmc
cmpsb
inc
jns
jg
push
outsb
xchg
push
pop
mov
add
sbb
stos
inc
dec
into
push
push
adc
rcrb
mov
inc
rcll
and
stos
mov
arpl
clc
xchg
adc
lahf
jb
aad
mov
in
cmpsl
inc
push
mov
xchg
in
imul
lea
fs
lret
add
sub
pop
push
pop
dec
or
jp
and
lret
lret
push
test
mov
notl
inc
repz
xor
adc
jg
jae
xchg
mov
push
pop
push
gs
aas
xor
or
dec
out
push
ds
sub
add
mov
and
repz
pop
push
scas
mov
cmpsl
push
test
cmpsb
ret
insl
sub
xor
int3
jnp
int3
shll
adc
in
fcomp
nop
ficoms
rcrb
sbb
pop
dec
negl
insb
cmp
stos
adc
jmp
xchg
inc
or
fisubs
push
in
sbb
sbb
add
clc
add
in
xor
shrd
dec
and
daa
inc
hlt
and
adc
and
sub
shll
mov
imul
fwait
scas
and
outsb
xchg
dec
push
ret
cmp
es
xlat
pop
mov
dec
xor
lock
adc
mov
fdivl
aad
cmp
mov
mov
dec
mov
xchg
sarl
in
jo
mov
pop
push
and
sbb
pop
cld
or
jbe
iret
scas
popa
ds
fstpt
add
lret
xchg
call
fldl
jecxz
xchg
scas
dec
dec
sub
mov
fcmovb
mov
or
and
aaa
scas
rol
outsb
mov
inc
dec
sub
mov
sbb
mov
push
adc
jmp
or
iret
ljmp
sbb
cmc
mov
lods
ret
cld
adc
jne
mov
sti
jno
ret
test
int
xchg
sbb
mov
sub
pop
addl
out
std
scas
arpl
push
movsb
jmp
or
push
push
mov
pushf
push
imul
inc
or
mov
pop
fwait
xor
push
mov
lret
jnp
dec
mov
dec
and
test
jb
mov
test
adc
inc
sbb
xor
push
fsubrs
mov
outsl
sbb
test
js
andb
and
push
insl
movsl
mov
cltd
push
jno
lods
in
adc
lds
insl
adc
je
dec
cltd
jnp
jg
dec
mov
pop
adc
mov
xor
xchg
mov
push
sbb
popf
dec
pop
dec
sbb
mov
insl
pop
cwtl
sbb
imul
ds
mov
push
ret
outsb
imulb
mov
xlat
fidivl
dec
adc
dec
clc
test
jnp
add
out
push
mov
out
add
xor
mov
jl
push
cwtl
lea
mov
aas
call
and
data16
out
mov
int3
inc
mov
nop
cmp
stos
sahf
inc
cwtl
xlat
sbb
decl
sbb
out
xchg
cmp
fsubrs
adc
gs
mov
jp
pusha
shlb
mov
add
es
loop
mov
cli
mov
cmp
and
fmuls
add
ret
pop
sub
stos
out
dec
pop
and
out
mov
mov
push
mov
ljmp
cmp
push
fdivl
repz
out
mov
cmp
imul
adcb
xchg
test
inc
adc
xchg
popa
adc
popa
adc
add
push
negb
repnz
push
outsl
inc
mov
icebp
out
lahf
orl
inc
fistl
pop
inc
xor
mov
cmp
dec
push
or
cmpb
cmpsb
xor
sti
inc
mov
jbe
and
popf
mov
or
dec
adc
push
push
cmp
push
push
push
aaa
fbstp
test
push
sub
das
inc
int3
pusha
das
pop
iret
sub
lcall
imul
jecxz
or
leave
jb
movsb
cmp
movsb
or
cld
pop
add
test
cmp
int
arpl
pop
fs
dec
push
jp
scas
pushf
or
xchg
sub
fcmovu
leave
es
pop
aaa
sbb
pop
dec
adc
xor
mov
ja
and
flds
fsubl
icebp
sti
dec
mov
push
outsb
xchg
lahf
cs
enter
leave
mov
pop
gs
sahf
repz
mov
aas
clc
cmp
xchg
cmp
xor
and
cld
sbbb
divb
pushf
in
arpl
pop
push
mov
cmp
pushf
jno
mov
test
faddl
pop
push
and
mov
rorl
or
mov
jl
mov
outsb
dec
xchg
stc
push
ss
add
and
lcall
hlt
xchg
rclb
out
push
stc
pusha
out
dec
push
sub
xchg
push
aad
test
xchg
or
mov
xchg
mov
test
ljmp
fldt
popa
icebp
out
sub
pop
out
mov
lods
mov
push
and
sbbl
fiadds
xor
push
lret
popa
imull
mov
aad
dec
mov
or
int
jge
and
ja
fists
push
pop
es
adc
outsb
xchg
iret
push
cltd
out
cmpsb
lods
and
and
or
sbb
xchg
xchg
js
or
mov
out
push
cmp
mov
ffree
push
les
stc
or
imul
dec
aas
adc
divl
sti
sbb
les
dec
adc
jno
pop
pinsrw
call
loope
ja
mov
aad
scas
lock
shl
data16
addl
jp
clc
push
outsb
push
js
aad
mov
shrl
or
fs
mov
mov
pop
rclb
cmp
aad
push
in
add
and
and
jle
mov
je
jg
lahf
cwtl
movsl
bound
mov
add
dec
shlb
notl
cmp
mov
test
js
jmp
mov
daa
cmp
iret
or
in
cmc
mov
in
imul
add
aaa
xor
add
cs
sbb
arpl
popa
pop
shrb
rep
cmp
mov
mov
loopne
ljmp
cmp
bound
mov
fstpl
aas
arpl
jge
sbb
push
xchg
inc
imul
bound
inc
push
out
mov
mov
sbb
test
and
push
sub
and
outsb
pop
test
dec
pop
ds
mov
insb
and
pop
bound
mov
push
aas
cmpsl
imul
mov
inc
je
loopne
cwtl
xchg
sub
stos
sbb
arpl
push
in
sahf
aad
test
xor
fwait
xor
pusha
adc
jmp
sub
pop
pop
test
adc
pop
inc
sub
bound
xchg
rol
pop
mov
sahf
mov
mov
jle
outsl
les
repz
inc
sub
xchg
add
jp
or
dec
jno
pop
lretw
das
arpl
mov
ss
lahf
push
call
pop
cltd
mov
aas
push
jecxz
push
or
mov
add
hlt
inc
daa
inc
jge
adc
jg
inc
mov
adc
pop
test
sbbb
andl
nop
xlat
iret
push
mov
insb
adc
pusha
adc
jbe
pop
and
jle
les
cli
sub
dec
fdivrl
dec
ss
sti
adc
pop
pop
xchg
ud2
lret
xor
mov
test
mov
lds
cld
add
cmp
in
jmp
dec
dec
imul
das
jmp
cmp
out
push
pop
xor
xchg
jp
test
jns
nop
cmc
push
pop
adc
ds
jno
imul
in
cmp
mov
inc
cmp
popa
insb
stc
pop
mov
xchg
outsl
inc
mov
in
int3
dec
fsubs
mov
push
test
sub
arpl
and
mov
jmp
fldt
daa
pusha
add
and
xchg
lods
inc
jne
xchg
pop
fiadds
xchg
outsl
push
icebp
ljmp
scas
mov
mov
jne
push
leave
xchg
lcall
jg
ret
cmc
scas
ret
cmp
or
dec
cmp
repnz
shrd
xchg
outsl
push
xor
jg
and
or
mov
jp
ret
iret
or
xchg
adc
jl
rorl
mov
pop
fcompl
outsl
pop
xchg
pop
lret
aaa
pop
and
ljmp
jg
xchg
or
xchg
lcall
lods
xchg
mov
adc
mov
arpl
jmp
sub
out
inc
lret
xchg
push
add
int
out
pop
jne
jle
xlat
mov
push
mov
xlat
dec
push
frstor
jae
cmc
je
cmp
es
pop
mov
push
jecxz
popf
fs
std
cmp
mov
idivb
and
rol
mov
push
adc
push
push
pop
sub
fs
icebp
call
inc
das
add
xchg
lret
mov
das
push
icebp
mov
or
xchg
clc
jo
in
jp
fsts
xchg
repz
mov
pop
xor
call
adc
arpl
cmpsb
and
shrl
or
mov
inc
sub
xor
test
push
lcall
int3
adc
sbb
pop
dec
fsubs
ror
push
and
mov
and
push
sti
xor
loope
out
lods
dec
pop
jg
xor
hlt
pop
pushl
xor
adc
in
adc
cmpsl
sub
mov
xor
out
das
mov
dec
sub
mov
sub
repnz
push
iret
xchg
mov
jno
out
mov
dec
mov
popa
jae
jno
jp
daa
lahf
and
push
jp
popf
rcrl
or
cmp
mov
dec
filds
mov
mov
xchg
jne
xchg
sub
repz
mov
xor
sbbl
lret
mov
jne
fldlg2
jl
test
mov
pop
mov
pop
dec
out
scas
mov
sub
sbb
rcr
xlat
imul
mov
jp
ja
daa
fwait
shlb
jns
pusha
xlat
adc
das
fnstcw
leave
loop
xor
ljmp
mov
into
mov
es
cmpsb
ljmp
lret
or
and
jl
ja
int
cmp
not
inc
test
inc
dec
sbb
dec
repnz
and
and
outsl
in
xor
aam
ja
add
sub
insb
imul
mulb
or
cs
push
sbb
inc
out
sub
incb
sti
jbe
in
sub
dec
iret
push
pop
mov
sub
subl
jae
pop
pop
pop
jg
outsl
subb
inc
test
jl
daa
lahf
push
aad
dec
in
aad
mov
mov
jp
clc
enter
push
test
dec
movsl
push
mov
in
sbb
and
cmp
movups
and
fimull
push
push
insb
fcoms
stc
imul
lret
sub
xlat
pop
dec
mov
sbb
enter
movsl
inc
in
jne
inc
cmp
mov
loope
jecxz
mov
xchg
xchg
test
add
test
inc
jns
xchg
adc
sbb
xchg
lods
clc
push
and
clc
inc
daa
call
cmp
ljmp
lahf
jmp
int3
jecxz
jp
sti
inc
mov
and
sub
jg
and
outsb
outsl
outsb
ret
inc
cli
pop
inc
sub
enter
ljmp
cmp
repz
clc
dec
add
das
loop
and
mov
xchg
out
sbb
or
xor
mov
cmp
cmc
or
lea
sbb
mov
stc
stos
fmul
dec
mov
or
imul
orl
mov
mov
mov
push
jp
fildl
pusha
call
shr
divb
xor
lock
scas
pop
cmp
adc
pop
cmp
ret
xchg
pop
xchg
cmp
ret
test
xor
scas
shrb
sub
ja
pop
les
sub
ret
sub
adc
adc
mov
push
js
sbb
inc
jbe
mov
cmp
sbb
jg
xchg
jl
stos
movsb
mov
mov
jb
add
int
mov
rcrb
push
inc
jmp
pop
adc
shlb
mov
or
push
outsl
mov
dec
out
pop
cmpl
addr16
mov
mov
popf
or
xchg
loope
vmovq
retw
mov
mov
xchg
inc
jne
add
push
xchg
outsl
scas
dec
inc
jmp
shll
push
jae
inc
in
mov
add
mov
push
pop
repz
jns
sub
xor
daa
out
add
out
icebp
xor
aaa
or
dec
sbb
insb
add
cmp
mov
insl
cmpsb
push
lret
jno
cmp
outsl
xchg
insl
leave
mov
pusha
cwtl
xrelease
mov
dec
and
in
pop
mov
loope
lret
sbb
mov
adc
cmp
mov
mov
std
repnz
jns
or
jp
lods
inc
das
xchg
jge
mov
shll
add
pop
or
scas
xchg
xchg
adc
repnz
fcompl
bnd
js
jmp
pusha
stc
fistpll
lock
out
xor
lret
movsb
push
in
data16
in
stos
out
push
push
inc
mov
sub
in
aas
push
push
movl
ljmp
add
dec
ljmp
hlt
std
test
push
addr16
adc
inc
xor
pop
sbb
shrb
jb
cmc
pop
aam
or
mov
jp
cli
int3
pushf
dec
jge
mov
jno
scas
inc
adc
jnp
ja
xchg
cmp
sahf
xor
loopne
faddl
daa
es
mov
xor
lock
stc
lea
mov
add
int3
aas
lds
inc
clc
or
xchg
movsl
sarl
push
inc
movsl
fistl
mov
scas
cmp
mov
lods
adc
sbb
std
sub
aad
lods
fstpl
and
mov
push
xchg
jb
sub
push
loopne
cmp
jmp
cmp
icebp
push
scas
push
in
ficoms
addb
dec
mov
mov
inc
or
popf
sbb
ficoms
fiaddl
loope
sub
jp
adc
cld
pop
jae
fdiv
adc
cmp
in
jne
xor
jle
daa
data16
jae
cmpsb
mov
cmpsl
inc
fwait
in
sbb
pusha
dec
or
fwait
and
test
das
dec
push
jl
nop
dec
mov
fwait
mov
pop
aad
inc
add
push
popa
inc
iret
or
add
xlat
inc
sbb
lea
mov
les
pop
loopne
adc
mov
adc
fdivp
roll
fdivrl
stos
imul
jecxz
jo
insb
mov
cmpsb
xchg
push
orl
pop
add
out
loop
add
pop
jg
fldl
xchg
ds
into
imull
fcompl
pop
or
sahf
subl
lock
cmp
push
push
aad
sbb
out
jns
in
and
cmp
xor
adc
bound
jno
sarb
daa
mov
arpl
lcall
sahf
jle
sbb
jnp
scas
dec
mov
pop
xchg
dec
cli
pop
ss
or
pop
sbb
xor
decl
mull
popf
lcall
mov
jl
jecxz
push
rcrl
int
sti
push
xor
sti
mov
scas
and
jb
inc
mov
int3
sub
pop
xor
xor
std
inc
mov
xchg
xor
movsl
mov
sbb
fwait
sbbb
decl
sbb
in
mov
sbb
je
adc
sarl
popf
fildl
ror
inc
mov
mov
push
sub
shlb
sbb
sbb
data16
jmp
in
sbb
xchg
push
cmp
mov
cmpsl
sbb
pop
add
ret
mov
les
ret
aam
les
dec
aad
xchg
xor
les
sahf
stos
inc
add
fisttpl
les
ja
jp
leave
mov
hlt
fucom
stos
leave
repnz
sbb
insb
outsb
add
iret
shrb
pop
and
cwtl
negb
add
adc
subb
sub
add
sbb
shll
add
icebp
mov
cmp
icebp
testb
lods
xor
jns
outsl
jge
xchg
mov
sbb
push
and
dec
dec
je
stos
cld
ret
fidivrs
push
in
mov
or
testb
mov
scas
shll
fldcw
jp
out
pushf
jno
mov
int
ljmp
sar
cmpb
inc
daa
sub
or
lds
xchg
iret
sbb
mov
jo
or
jl
and
int3
rolb
pop
outsl
or
nop
stc
shll
sub
cmpsl
outsb
push
clc
cwtl
pusha
ss
lret
inc
in
xor
fcomps
xor
mov
dec
out
push
in
sub
fstpt
idiv
sbb
insb
scas
cmp
cli
aas
lods
dec
push
fidivrs
xchg
xlat
rorb
pushf
out
mull
sub
xor
je
dec
pop
inc
sbb
movsl
sbbb
in
lods
popf
mov
test
stc
pop
and
push
cld
cmp
loope
adcl
je
mov
jns
lock
lcall
lcall
fs
adc
loopne
pop
lret
fsubrl
push
rolb
punpckhwd
repz
pop
cmpsl
jg
inc
add
fdivrs
pop
test
mov
and
sub
dec
push
pop
addl
mov
cli
fldl
sbb
dec
sub
jmp
scas
call
mov
lcall
lcall
fsubrl
popf
push
les
cmp
cs
cmpsb
lcall
sbb
mov
sbb
mov
imul
decb
mov
fsubs
cmp
popa
xor
stc
add
cltd
inc
movsl
mov
mov
in
pop
or
divl
jecxz
mov
lds
out
dec
gs
pop
push
int3
icebp
stos
and
pop
fs
std
inc
dec
dec
add
mov
mov
ss
lret
mov
dec
cmp
and
pop
sbb
shll
pop
add
jle
ljmp
int
add
roll
inc
cmc
pop
dec
push
xchg
or
mov
mov
int3
test
ja
mov
push
loope
cmpsl
or
daa
shll
les
xlat
fiaddl
add
js
popf
fisttpl
adc
frstor
sbb
fidivl
jne
clc
lret
in
lea
pop
xor
mov
mov
stos
aaa
leave
xchg
inc
rorb
adc
stos
sbb
shl
mov
int
std
mov
xchg
imul
loope
cld
out
mov
sbb
push
adc
cmp
jnp
adc
int3
clc
pop
jecxz
movsb
clc
cltd
aad
and
inc
xchg
pushf
mov
sub
les
mov
sahf
push
int3
jns
inc
andb
cld
ret
aam
jae
les
fsubrs
sub
hlt
mov
sub
sub
adc
rcll
dec
jb
or
pop
jno
sub
cmp
mov
pop
fdivrs
idiv
dec
push
js
and
mov
add
mov
pusha
or
or
les
and
xorl
mov
imul
popa
push
add
popf
or
bound
call
ss
xchg
push
ret
jb
xchg
pop
sbb
xor
xor
fs
mov
je
mov
test
loopne
lea
sbb
xor
pop
sbb
lods
adc
sahf
fdivl
push
aam
jns
sar
clc
jmp
mov
cs
sbb
lods
aam
in
lcall
callw
and
int
add
imul
cli
jle
pinsrw
cmpsb
stos
fwait
roll
icebp
mov
add
sbb
adc
daa
jecxz
cmp
rcrb
arpl
adc
jno
xor
lahf
jle
mov
xchg
and
test
bound
jne
pushf
mov
jnp
push
imulb
loopne
out
dec
ss
dec
hlt
or
popa
or
daa
pop
add
popf
xor
out
mov
dec
aam
add
pop
sbb
pop
cmpsl
fsub
push
in
ret
and
push
cmp
icebp
rdtsc
dec
and
popa
outsl
sub
daa
dec
sub
add
mov
les
adcl
add
mov
stos
daa
jle
xor
jns
inc
ret
xlat
add
jle
mov
add
mov
enter
xor
fsubs
and
test
scas
test
lods
jb
popa
pop
test
fidivs
xchg
push
out
push
ljmp
cmc
cmp
inc
lea
mov
adcl
imul
ficoms
scas
or
mov
aas
jmp
fisttps
pusha
adc
mov
adc
dec
cmp
jb
inc
jg
arpl
cmpb
xchg
mov
pop
pop
lock
pop
mov
movl
insb
mov
and
adc
push
mov
hlt
mov
mov
test
push
cwtl
in
inc
mov
out
jecxz
adc
addr16
rol
ds
pop
xchg
adc
xchg
mov
ret
cmp
scas
sti
mov
dec
fwait
sbb
test
mov
daa
inc
mov
xor
cmp
aam
push
jle
pop
jle
mov
adc
aaa
inc
xchg
fcom
mov
and
and
repnz
push
popl
shl
outsl
aam
mov
or
add
push
mov
aas
dec
ljmp
sub
stos
xchg
xchg
jge
mov
es
shlb
jb
add
xchg
xor
sahf
rcr
push
cmp
movsb
adc
push
mov
insb
fnsave
inc
push
push
xchg
lcall
pop
dec
mov
push
mov
mov
cmp
cmp
cld
cmc
cmp
int3
adc
fsubp
mov
fdivl
pop
sbb
xchg
pop
test
hlt
iret
fiaddl
loopne
icebp
inc
jg
test
pushf
jnp
push
call
lcall
pop
or
jns
inc
mov
inc
cmp
xor
sbb
sub
cmc
or
les
jl
outsl
jbe
mov
pop
push
xchg
dec
rcll
pop
and
xor
mov
pop
jecxz
mov
call
cwtl
scas
and
mov
cltd
sub
adc
insl
cmp
js
dec
and
inc
arpl
js
fucomi
jns
movsb
cs
iret
xchg
shlb
sub
pop
sub
cmpsb
jl
sbb
repz
mov
test
mov
cli
sub
arpl
inc
addl
test
into
cltd
add
push
xchg
xchg
mov
push
cs
lds
and
pop
adc
inc
out
lock
or
jne
inc
mov
hlt
lcall
cltd
jb
push
aas
mov
pushf
je
xor
les
jge
call
pop
pushf
lret
and
arpl
rorb
inc
lock
ljmp
add
add
sub
dec
les
jg
leave
dec
pop
or
pusha
ret
or
and
jl
insb
add
jecxz
mov
jmp
insl
pop
stc
xchg
mov
or
push
push
inc
arpl
imul
mov
in
stos
pop
dec
rolb
pop
pop
or
pop
pop
jle
rorl
pop
inc
pusha
mov
push
ficompl
arpl
movsl
sbb
fcompl
dec
jno
pop
jle
dec
or
push
xchg
and
iret
jnp
outsb
push
in
aam
adc
xor
mov
or
mov
mov
in
jo
cmp
inc
repnz
xchg
es
test
aas
and
push
out
mov
cmp
sbbb
sarb
sbb
cmc
xor
mov
xor
popf
leave
test
xlat
and
pop
sbb
idivb
dec
inc
fsubl
std
push
into
mov
dec
jae
or
out
sub
add
xchg
mov
addr16
mov
das
nop
jecxz
or
cmp
or
pop
xor
mov
mov
lcall
shrd
mov
mov
pushl
mov
iret
pop
jbe
aam
ds
adc
js
out
mov
add
icebp
sub
cmp
or
daa
push
loope
inc
mov
mov
out
mov
and
jle
stos
addr16
in
orl
test
imul
mov
mov
adc
jne
mov
addl
shll
jmp
jne
mov
adc
sub
stos
jl
out
jne
js
shll
jp
imul
insb
addl
push
or
cld
pop
loopne
movsl
fsts
push
out
notb
hlt
jnp
out
insl
icebp
sbb
stos
xchg
into
movsl
push
test
jbe
sub
test
ljmp
call
daa
xchg
push
xor
popf
mov
and
test
sarl
mov
jp
out
and
adc
xor
mov
lret
adc
arpl
mov
mov
repz
jno
sbb
sahf
lods
aad
push
xchg
pop
shll
inc
xor
insb
cmp
and
cmp
mov
outsl
imul
rol
or
mov
sbb
dec
into
pusha
xor
mov
rcl
jge
pop
stos
lods
in
cmpsb
adcb
sti
sbb
xorl
fldl
ss
xchg
lret
cmpsb
or
lahf
outsl
push
cmp
xchg
aad
sub
lods
mov
mov
and
sbb
inc
push
dec
cwtl
out
inc
sarl
mov
push
std
mov
dec
subps
xor
lods
push
jne
and
sub
push
je
lock
inc
add
mov
pusha
mov
push
data16
mov
cmpsl
pop
popa
jb
push
pop
and
cmp
jecxz
and
test
sub
gs
jnp
sti
inc
sahf
sub
mov
popa
shlb
pusha
fucom
in
pop
push
hlt
jnp
outsb
mov
and
rorb
mov
leave
inc
out
adc
add
or
aad
and
xchg
dec
ret
in
adc
rorl
ficomps
orl
aas
pop
pop
lahf
xchg
fisttps
subl
push
out
and
push
pop
je
outsl
or
gs
or
inc
dec
mov
mov
mov
push
imul
push
jbe
out
xchg
or
call
mov
cmp
mov
and
ret
lahf
bound
fwait
xor
cmp
xor
or
clc
add
loope
push
inc
imul
nop
cmc
add
daa
in
mov
mov
push
out
xchg
jle
testb
test
leave
and
pusha
cwtl
sub
dec
arpl
les
push
or
cmp
dec
mov
inc
fwait
outsb
outsb
mov
xor
jg
mov
insb
cli
in
add
pop
mov
decb
loop
fmul
xor
add
xchg
fsub
fisttps
mov
push
lds
cld
repz
cld
adcb
cltd
xchg
pusha
cmp
cmpsb
dec
mov
pop
jle
testl
sti
push
pop
mov
shlb
js
push
xchg
fst
sarl
sbb
mov
lock
jmp
push
mov
dec
mov
loop
lea
lret
dec
xor
popf
pusha
pop
inc
outsb
or
jecxz
into
mov
inc
pop
mov
xorl
out
xor
iret
sub
loop
sbb
cld
test
cs
and
cmp
iret
xlat
aas
jns
ficompl
add
mov
ror
push
mov
sub
lea
ss
mov
jo
cmp
push
sbb
cmpsb
xchg
test
sbb
jno
adc
jmp
mov
mov
cmp
in
cmpsw
popa
lods
sarb
mov
js
pop
sub
test
into
fdivl
jns
adc
int3
sar
sbb
imul
add
test
stos
int
bswap
fdivl
sub
push
sub
inc
sahf
shll
inc
mov
mov
and
adc
into
adc
repz
orb
loope
shlb
aas
icebp
lods
aas
js
xor
xchg
jmp
add
fcompl
jne
mov
sbb
sub
aad
dec
push
pop
inc
or
inc
ss
shrl
push
call
fwait
mov
pop
sahf
cmpb
adcl
mov
pop
aaa
pop
adc
mov
sub
lea
int
cli
lds
movsb
int
cmp
int
inc
pop
movsb
in
popf
ret
mov
push
dec
or
mov
xor
jl
movsb
outsl
sarb
lret
adc
cwtl
and
jb
pushf
mov
and
outsl
or
mov
lahf
rorb
das
xchg
inc
mov
int
mov
sub
aad
in
and
int
iret
jecxz
mov
add
dec
or
xor
in
negl
or
in
xchg
pop
and
mov
iret
test
sub
mov
jns
add
adc
push
ds
inc
jnp
lock
bound
xchg
jno
pop
pop
gs
addb
lcall
scas
aas
and
outsb
out
idivb
out
mov
fldl
or
inc
andb
sub
negl
lcall
es
pop
andl
mov
xor
hlt
jae
mov
jno
insl
and
jae
arpl
rcrl
ds
stos
addb
cs
mov
and
data16
lahf
inc
std
jp
mov
test
mov
cmp
jno
pop
jne
push
dec
jge
push
in
push
lret
or
adc
or
jle
mov
add
rcl
xchg
outsb
mov
ja
cli
outsb
xchg
sub
das
sub
and
cwtl
mov
or
sbb
fsubl
jb
addr16
pop
mov
adc
aam
adc
fstpl
cwtl
push
sarl
xchg
xchg
testl
and
adcl
scas
mov
and
mov
out
insl
inc
sbbl
cmp
rclb
push
adc
pop
mov
ret
adc
sub
popf
xor
sbb
leave
jb
sub
scas
bound
xorb
mov
sub
outsb
mov
inc
jecxz
add
push
hlt
mov
fcomps
cmp
lahf
jmp
xor
lock
adc
add
ficoml
fmul
dec
xchg
jle
leave
xchg
test
mov
arpl
pop
cmp
mov
mov
rcll
pushf
pop
movsb
iret
cs
jae
ds
pop
icebp
iret
push
cmpsb
push
xchg
stos
sbb
fsincos
flds
or
gs
test
dec
adc
test
cmp
loop
sub
sbb
mov
rcrb
cltd
call
jae
add
into
mov
fcompl
jl
stos
lret
hlt
enter
pushf
shlb
xor
arpl
add
jbe
fbstp
fildll
stc
lods
stc
das
mov
jle
ret
pop
fldl
ds
clc
or
and
ret
dec
mov
xor
adc
ucomiss
xchg
sbb
or
ja
and
add
and
icebp
adc
insl
das
adc
sub
dec
mov
jmp
fndisi(8087
lcall
insl
lods
out
sbb
add
inc
mov
xor
rclb
je
aam
ffree
in
sbb
xor
into
shl
je
mov
xchg
push
cs
bswap
adc
inc
je
jle
pop
mov
pop
out
mov
mov
scas
dec
iret
std
popf
xor
sbb
testl
outsb
mov
sub
imul
lret
lods
icebp
push
mov
jp
jmp
cmp
testb
hlt
mov
out
sub
pop
add
pop
and
pop
adc
pop
or
fcomps
mov
fldenv
and
xlat
insb
xchg
cld
push
bound
mov
in
rorl
lcall
mov
and
mov
jae
jecxz
cmp
xor
stos
movsl
cmp
mov
loope
adc
in
fsubrs
and
mov
push
ljmp
pop
add
out
fisubrl
push
repz
gs
pop
push
mov
adc
shrb
mov
and
mov
xchg
jo
adc
jne
stc
sbb
pop
popf
pop
sub
pop
into
xor
xchg
pushf
xchg
in
dec
stc
fchs
dec
pop
int3
dec
call
push
xor
sbb
xchg
movl
lods
dec
xor
xchg
xchg
lock
mov
mov
gs
sub
jbe
dec
or
pop
imul
mov
pop
push
xchg
jne
mov
popa
mov
lret
lret
fcoms
xchg
test
filds
inc
adc
shlb
sbb
scas
stos
sub
adc
ret
cmpsl
push
aaa
push
ss
fldlg2
inc
push
dec
negb
out
xchg
pop
dec
out
outsb
in
xor
dec
addr16
aas
pop
cld
push
insb
pop
repz
dec
add
sahf
popf
dec
fucomp
add
inc
cmp
movsb
leave
inc
xor
std
cwtl
call
pop
add
mov
negb
push
adc
mov
cmpsb
fwait
cmp
cmp
lods
cmp
mov
jae
add
shlb
icebp
push
arpl
push
mov
mov
push
sarb
shrb
sbb
or
pop
pop
lret
inc
sub
adc
sub
pop
xorb
imul
fadds
out
jne
xor
xchg
mov
outsb
popl
dec
fldcw
sub
mov
pop
sbb
mov
xchg
clc
inc
mov
imul
cmc
push
mov
jno
mov
add
add
mov
enter
xchg
das
jne
xchg
mov
dec
adc
pusha
dec
mov
iret
mov
int
jecxz
or
push
add
lea
jne
fsubs
pop
bound
adc
aaa
iret
test
dec
or
imul
or
dec
push
pop
pop
cli
aaa
mov
push
cmp
cli
movsb
inc
cmp
mov
jo
inc
ret
sti
cmp
nop
inc
fwait
int
mov
push
adcl
jnp
xor
lret
add
pop
push
dec
scas
xchg
nop
int
lret
ja
fldcw
add
and
pop
push
mov
pop
clc
push
cmp
sbb
mov
xor
leave
push
out
and
nop
in
dec
and
cmc
jno
lods
cs
and
nop
mov
adc
rcrb
mov
cmp
or
pop
mov
jne
sub
cmc
cmp
sub
aas
es
xchg
outsb
repnz
mov
cmp
xlat
cmpsl
cmovle
imul
scas
sbb
adc
and
push
mov
int
cwtl
lret
push
lret
pusha
xchg
jmp
mov
xor
jge
lds
pop
dec
dec
cltd
cltd
add
repz
ja
loop
aad
mov
or
ret
pop
dec
test
ja
jmp
lret
xor
insl
jl
mov
jecxz
testb
orb
inc
adc
sbb
loopne
cmp
mov
jno
movsl
aaa
mov
dec
std
in
stc
lds
mov
dec
lahf
push
or
outsl
lcall
push
jmp
and
jge
cs
out
or
xor
jl
jne
xchg
jb
and
mov
jp
fisttpll
stc
test
sbb
fdivrl
adc
mov
sbb
mov
mov
xchg
pushf
pop
lret
mov
ljmp
mov
jnp
aas
cmp
push
dec
les
cmp
adc
mov
or
push
cmp
mov
aas
jbe
movhps
jns
popf
ret
push
xor
push
pop
pop
push
inc
push
stc
and
xchg
cmp
shll
pop
inc
inc
pop
add
scas
int
mov
popa
sbb
repz
xor
test
stc
rcr
test
adc
test
clc
push
xchg
mov
pop
push
lret
mov
mov
fidivrl
and
xor
pop
mov
rcrl
cmp
mov
ja
shll
cwtl
mov
pop
inc
movsb
aaa
je
popa
dec
shrl
cmpsl
push
scas
cmp
test
mov
push
sub
sub
inc
shll
mov
in
loope
mov
iret
mov
loope
mov
movsb
sub
rol
leave
push
loop
jnp
jg
mov
sbb
push
iret
mov
decl
dec
mov
mov
jmp
push
int3
das
push
pop
mov
cmp
mov
sbb
mov
mov
jo
adc
leave
cwtl
popf
pop
pusha
inc
push
cmpsl
push
sbb
or
xchg
aad
sub
inc
cmp
dec
divb
scas
jnp
mov
adc
mov
out
jmp
in
push
adc
insb
add
imul
cs
jp
std
pop
cmp
pop
sub
lds
jmp
mov
nop
xchg
push
jne
fisubrl
fsubr
bound
pop
in
repnz
fnsave
inc
push
es
push
mov
inc
sbb
aam
jb
sbb
mov
mov
lahf
outsl
lahf
push
sub
jecxz
test
movsl
sbb
fldt
pop
or
stos
mov
std
enter
pusha
push
cmp
push
mov
in
add
adc
pop
int
es
jo
sub
leave
std
in
fnstsw
or
jbe
or
jecxz
lods
mov
inc
sti
ja
sti
cmpsb
insl
pop
jmp
fnstcw
xor
xchg
jl
iret
mov
into
cmp
push
mov
ret
mov
dec
out
fs
roll
pop
pop
push
xchg
fldcw
xchg
rorb
clc
test
jmp
xchg
inc
adc
jmp
hlt
fs
mov
push
sub
adc
lcall
adc
mov
enter
jbe
cmp
pop
lahf
and
scas
push
xor
in
lods
js
push
in
mov
cld
xor
fsts
arpl
jb
clc
pop
scas
insb
inc
mov
sbb
sbb
daa
or
pop
in
sbb
xor
ljmp
ficoms
insl
int3
sahf
jne
insl
outsb
lcall
ja
cmp
int3
sub
ret
sbb
mov
stos
aas
jbe
sbb
mov
aad
dec
push
popf
enter
mov
and
lcall
pop
xchg
imul
xor
pop
mov
sub
cmp
inc
jns
lahf
mov
push
ret
iret
loop
push
add
rcr
aam
mov
bound
inc
mov
mov
inc
xchg
pusha
lods
mov
not
xor
cmc
mov
dec
out
pop
int3
rolb
ret
jle
or
adc
int
push
push
push
xlat
loopne
mov
scas
push
xchg
div
std
inc
cmp
sub
push
xor
out
outsb
jne
sbb
mov
pop
mov
sub
mov
test
add
pop
adc
pop
mov
add
fcmovne
sub
fidivrs
nop
sbb
xor
jcxz
test
jge
std
mov
sbb
shr
jnp
mov
lcall
divl
mov
pop
in
pop
lds
and
or
adc
cwtl
repnz
and
call
leave
ljmp
lahf
push
ds
mov
cmp
hlt
mov
mov
ret
scas
and
inc
int3
mov
clc
and
inc
sbb
std
aaa
jb
ds
sbb
leave
and
scas
xchg
mov
push
push
xchg
mov
insb
push
cmp
hlt
out
fistl
in
stc
mov
cmpb
jecxz
sbb
and
test
jae
or
dec
dec
push
pop
fidivs
mov
fldt
mov
sar
imul
inc
lods
pop
nop
cltd
negl
jbe
ljmp
lahf
adc
inc
and
adc
pop
pop
repnz
cmpsb
rclb
push
mov
mov
pop
pop
clc
scas
sbb
loope
cmpl
repz
sub
nop
pop
xlat
cli
cld
adc
stos
ret
fwait
lret
loope
xchg
pop
xor
push
xchg
clc
xchg
jb
or
insl
mov
daa
sbb
arpl
outsb
pop
push
dec
jge
jne
and
inc
dec
outsl
or
out
rcrl
popw
mov
add
cmp
test
orb
xchg
lock
inc
ljmp
daa
dec
subb
out
dec
out
adc
ror
data16
or
les
aaa
sub
jge
jae
stc
cld
test
pop
xor
dec
js
insl
sub
mov
dec
imul
adc
fs
stos
fcom
adc
in
push
insb
push
and
in
sub
enter
out
xchg
sub
lock
push
sub
pop
icebp
dec
loop
test
sub
sahf
nop
rorb
dec
xchg
lret
cli
inc
push
mov
jmp
les
pop
shlb
scas
in
je
out
or
pop
xor
ficompl
jns
jo
fildl
popa
int3
pop
aad
cmp
jb
add
mov
mov
push
xchg
imul
add
push
sahf
dec
add
scas
push
test
fcoms
lret
push
push
xchg
js
jne
ret
inc
xor
sarl
jge
inc
mov
xchg
cmp
rcll
divl
jns
icebp
dec
sub
js
cmp
push
jne
notl
scas
add
adc
gs
shll
outsl
add
pop
add
cmp
and
iret
cltd
mov
inc
sahf
sahf
and
int3
cmc
pop
gs
out
outsl
and
xchg
fldcw
outsl
mov
adc
or
cmp
mov
int
lods
aaa
ja
sbb
jno
popf
pop
cmpsl
inc
repz
mov
mov
inc
jnp
cmp
pusha
mov
addl
fisttpl
push
adc
adc
pop
sub
hlt
add
mov
push
mov
sbb
test
leave
mov
inc
or
mov
lock
add
nop
cld
jno
icebp
loopne
out
or
cwtl
xchg
inc
xor
pop
pop
je
test
sbb
pop
mov
dec
loopne
push
shll
cld
movl
sbb
dec
clc
cmc
push
addb
ret
popa
test
subb
dec
das
inc
jg
jo
fwait
scas
mov
es
lea
sub
push
out
dec
inc
loop
mov
jle
inc
sub
sti
mov
dec
cmpsl
mov
jg
jmp
jmp
adc
lock
fdivl
inc
xor
dec
loop
sbb
adc
mov
bound
push
mov
cmp
add
cmp
jmp
cld
stos
xor
push
fidivs
sub
lds
inc
jge
mulb
fldl
dec
jb
xor
jecxz
dec
scas
mull
ret
push
jg
push
test
adc
roll
std
gs
sbb
roll
sti
adc
sbb
fistpll
xchg
cmp
inc
test
sar
enter
ss
lea
xchg
mov
mov
and
dec
pop
test
cld
jle
test
scas
cmp
adc
add
pop
ret
dec
add
leave
je
jge
cmc
pop
dec
dec
lcall
hlt
in
inc
fists
mov
movsl
push
sbb
mov
pop
dec
mov
and
inc
adc
sti
adc
call
and
xor
inc
push
loopne
adc
jge
mov
and
repz
push
rcr
repz
iret
cltd
in
mov
ja
incl
mov
dec
inc
mov
dec
pop
xchg
jbe
movsl
or
imull
mov
in
das
clc
pop
sbb
cmp
pop
mov
test
test
sarb
adc
cwtl
call
mov
loop
jg
xlat
add
sbb
aas
idiv
ret
adc
lret
adc
outsl
out
sbb
cld
sub
adc
mov
cmp
or
mov
pusha
lods
or
testl
push
test
movsl
lock
adc
push
dec
insb
push
cli
mov
xor
scas
jl
mov
pop
sub
bound
out
clc
ja
pop
jmp
xchg
shrb
repz
sahf
mov
adc
lahf
adc
in
inc
dec
imul
dec
xchg
rorb
lcall
pusha
push
sahf
lea
push
fcompl
lods
es
lret
aaa
fs
in
inc
notb
push
pusha
lahf
lock
cmp
cld
push
adc
adc
inc
outsb
mov
push
ds
arpl
je
push
pop
xchg
mov
lea
inc
xchg
cmpsl
cs
sub
push
insl
popf
sub
ret
add
push
stos
sti
cmpsl
inc
xchg
mov
pop
adc
cmp
push
cs
and
pushf
call
arpl
mov
test
insl
fisttpll
in
shr
pushaw
mov
lea
in
add
lahf
cmp
mov
pop
xchg
sbb
adc
xor
sbb
sub
call
jl
push
loopne
adc
int3
and
shrl
adc
test
pop
or
iret
xor
test
adc
push
shrl
mov
out
sbb
xchg
movsb
insl
pushf
mov
out
jbe
insl
hlt
cmp
jne
push
mov
xorb
xor
out
roll
sbb
pop
jae
jmp
mov
add
sbb
and
lock
and
mov
jle
adc
leave
xlat
arpl
addb
hlt
add
dec
inc
adc
xchg
jne
das
pop
pop
dec
inc
dec
ja
std
xchg
jmp
es
negb
sbb
cmp
aad
popa
push
sub
mov
and
pop
lock
in
imul
loopne
cmp
mov
les
lret
std
hlt
mov
in
addr16
jg
mov
fwait
rcrl
cmp
push
adc
repnz
rcrb
std
pop
fidivs
dec
out
xor
jne
insl
repz
in
lahf
pop
jmp
cmp
pop
cmp
sti
addb
xchg
mov
daa
pop
rcrb
inc
repnz
ja
fldenv
out
cmc
mov
xor
insw
or
fdivrl
xor
sub
cmpsl
push
mov
mov
das
mov
cltd
les
mov
popaw
mov
movsl
ret
sub
notl
adc
icebp
xchg
imul
adc
loopne
test
xchg
lds
movsb
push
popa
mov
mov
mov
test
into
dec
and
dec
jno
or
adc
add
pop
pop
push
cs
stos
pop
popf
jmp
and
ret
lret
xchg
in
xchg
pop
data16
sbb
call
sbb
fisttpl
or
les
nopl
lcall
jle
jo
mov
loope
push
cmc
cmp
mov
loopne
inc
dec
push
pushf
push
insl
and
sbbb
div
test
ja
or
lods
xchg
insb
mov
icebp
xchg
xchg
lret
sbb
pop
outsl
push
adc
movsb
jge
sti
and
lds
or
mov
pop
cmp
cmpl
popf
bound
outsl
pop
repnz
subb
pop
out
mov
movsb
mov
imul
mov
dec
and
push
pop
hlt
fldt
lods
jne
push
mov
add
pop
ss
cmp
inc
aam
jnp
or
or
cmp
xchg
and
or
icebp
or
test
push
push
and
inc
sbb
or
cld
aaa
pop
xor
jne
mov
fwait
in
je
cmp
mov
insb
sarl
bound
sarb
rorl
fs
cli
jo
aad
or
pop
je
mov
insl
test
push
mov
adc
loopne
mov
scas
and
out
jno
and
cmc
xrelease
xor
dec
and
or
jns
push
fwait
xchg
scas
imul
popf
dec
jno
hlt
adc
mov
mov
sbb
jl
mov
cld
xorb
jns
cli
enter
mov
push
int3
mov
jns
xchg
pop
in
or
cmp
fsubp
jg
dec
out
mul
sbb
fidivs
adc
inc
mov
pop
rolb
leave
cmpsl
sub
cmc
cmp
repnz
xchg
add
mov
jo
pop
add
jecxz
sub
sub
hlt
jns
fwait
mov
les
jne
addr16
pop
loopne
mov
mov
mov
les
inc
sub
int
push
xor
sbb
imul
or
push
mov
xchg
in
lods
cmpsl
lahf
mov
das
pop
popf
nop
lods
lods
cs
test
pop
fcompl
xor
imul
cmp
push
cwtl
mov
jno,pn
jbe
or
mov
pop
xchg
cmp
cwtl
sub
nop
loope
fwait
push
cmpsl
xor
sbb
dec
dec
lods
inc
lods
std
out
aas
xchg
jns
xchg
stos
inc
jecxz
pop
mov
dec
pop
dec
pop
inc
mov
push
xacquire
jnp
add
pusha
dec
adcl
icebp
jo
jb
add
out
dec
add
je
jecxz
in
inc
inc
outsl
xor
inc
sbb
call
scas
mov
and
into
xor
sarb
and
or
shll
divb
in
mov
push
clc
loop
rcll
loop
dec
push
les
jb
xor
or
inc
icebp
mov
or
mov
xorl
xchg
in
call
or
jne
push
cmp
push
jg
dec
lret
lahf
insl
sub
xor
mov
xchg
or
stos
aam
inc
cli
fwait
jns
xchg
and
push
es
push
data16
adc
pop
cmp
mov
inc
repz
xor
jo
gs
or
pop
imul
jmp
sub
jbe
movsl
add
or
dec
loopne
cmpsb
xchg
push
mov
pop
inc
xor
push
leave
fsubrs
push
mov
and
mov
add
popa
aad
cmpsl
mov
jo
out
clc
jno
lret
mov
xchg
xor
out
xchg
mov
pop
mov
in
paddq
and
mov
out
pop
and
cs
push
sbb
add
in
mov
xchg
mov
outsb
lods
push
ret
inc
std
icebp
mov
iret
test
outsb
mov
adc
aam
loope
dec
std
xor
movsl
mov
mov
test
lods
int3
aaa
mov
enter
inc
insb
test
sti
je
rcrl
js
dec
xchg
dec
sti
jno
cli
fildl
adc
pop
push
loopne
cld
jae
adc
mov
xor
cs
xchg
rclb
pop
dec
xor
add
push
aad
pop
or
in
lret
lds
push
out
xchg
xchg
sbb
dec
push
mov
aaa
jo
adc
and
aam
ss
and
dec
lahf
pushf
jne
pop
decl
ds
xchg
rol
jo
mov
dec
into
lods
cld
pusha
inc
mov
push
nop
call
push
jmp
jo
or
inc
scas
pop
xchg
pop
cmpsl
mov
int3
insb
aad
mov
xor
jmp
or
inc
cmpsl
pop
nop
xchg
stos
dec
mov
imulb
jb
data16
mov
mov
xchg
cmp
cli
movsl
int3
adc
lret
ja
xchg
jmp
xchg
test
mov
test
outsb
xchg
test
or
enter
xchg
sbb
or
insb
test
nop
or
xlat
fisubs
inc
push
pop
push
xor
in
hlt
mov
mov
adc
or
jge
les
loop
das
mov
ror
scas
int3
jne
push
lahf
xlat
push
xor
mov
sahf
pop
bound
mov
fldl
aad
jge
test
lcall
stos
aas
inc
nop
add
add
xchg
testb
repnz
das
shll
mov
out
call
je
xchg
repz
ss
inc
les
lret
js
out
xchg
shr
lahf
fiadds
push
ret
jl
cmp
mov
sarl
popf
jb
cmp
xor
inc
cltd
sti
dec
xor
sarl
jne
out
pop
push
cmp
shll
loope
mov
push
loop
push
push
jl
and
mov
sub
into
pop
das
pop
test
pop
pop
fsubs
icebp
mov
out
add
sub
pop
push
cmp
cmc
jecxz
popa
gs
icebp
pop
pop
test
mov
sbb
sti
jmp
jg
mov
push
int
jae,pn
fwait
adc
repnz
test
and
push
dec
xchg
pop
mov
mov
xchg
mov
hlt
nop
cmpsl
lea
and
fildll
sahf
mov
cmc
sahf
subb
repnz
pop
jle
xchg
xchg
leave
sub
imul
cwtl
test
sub
inc
in
sbb
push
sub
aam
dec
cwtl
shl
ljmp
or
pop
test
adc
inc
addl
or
cmp
push
loop
xor
or
jne
cmp
dec
repz
ja
call
test
xor
pop
push
push
mov
mov
sub
pusha
push
arpl
out
and
dec
dec
sbbb
daa
mov
insb
sub
xor
icebp
stc
jns
mov
adc
lret
repz
pop
imull
or
fwait
mull
push
js
or
cmp
cmp
clc
mov
and
aam
cmp
or
cmc
fisubrl
push
mov
daa
inc
sub
sub
rcrb
add
shll
mov
xor
in
adc
pop
mov
loop
xchg
outsb
dec
pop
xor
add
mov
pop
cld
pop
pop
stc
inc
stos
scas
mov
sub
lods
mov
stos
inc
mov
aas
xchg
dec
mov
mov
std
mov
fidivl
std
dec
out
loope
dec
inc
pop
add
mov
in
push
in
add
dec
or
testl
les
and
cmpsb
mov
mov
push
push
jge
xor
jb
cmp
inc
xchg
sub
xor
or
test
out
lcall
push
cmp
sbb
stos
dec
jmp
mulb
int3
mov
adc
mov
add
daa
pushf
scas
icebp
sbb
push
int
mov
hlt
mov
sbb
cmp
repnz
stc
int3
loope
pop
out
adc
fdivrs
mov
dec
mov
test
aam
mov
fidivs
push
dec
or
iret
xchg
add
cmpsl
adc
int
in
std
dec
xchg
ja
mov
mov
nop
fimull
mov
jecxz
test
scas
lock
cmp
jle
pushf
sbb
int3
cld
mov
add
mov
jmp
loope
cmp
dec
mov
push
lret
ret
nop
lret
cmp
adc
xor
imull
leave
cmp
mov
in
adc
cs
out
add
daa
mov
mov
imul
push
lret
xchg
fsubs
cmpb
popf
inc
lods
ror
mov
and
jmp
lods
jnp
and
inc
xchg
adc
adc
mov
test
pop
clc
or
mov
jmp
repnz
out
xchg
icebp
sbb
lret
xchg
push
sbb
mov
loope
xor
ljmp
inc
xchg
scas
test
inc
lcall
mov
or
div
retw
call
aas
pushf
mov
push
jo
les
insl
aas
cmc
je
aas
and
inc
out
fisubl
and
mov
nop
pcmpeqd
stc
pop
sbb
rclb
aaa
aam
adc
sbb
cmp
cmp
mov
movsb
ds
decl
outsb
or
pop
push
gs
push
and
ss
sub
xchg
inc
iret
pop
xchg
addr16
rol
pop
pop
repz
loope
sub
jo
jne
mov
lods
add
ljmp
ja
scas
push
push
jmp
dec
push
clc
dec
xchg
adc
xor
add
dec
in
or
inc
ret
lds
aad
sub
pop
movhps
loop
jg
jne
out
or
cld
sbb
or
adc
fiaddl
jl
jecxz
mov
leave
cpuid
jno
sbb
ss
shlb
sbb
mov
sub
sub
push
or
xchg
cmp
xchg
sub
lea
mov
inc
push
or
pop
sbb
mov
add
mov
push
pop
mov
cwtl
mov
out
sbb
lods
ret
mov
mov
dec
insl
and
icebp
fwait
mov
stos
xor
jns
lock
das
sarl
adc
mov
sbb
push
aam
pusha
jae
fcom
pop
cmp
jb
xchg
fwait
xor
xlat
cmpsl
jge
dec
xor
push
jb
js
jle
mov
hlt
insb
arpl
pop
hlt
rcrl
and
pop
int
mov
jns
xchg
adc
xchg
pop
and
sub
mov
dec
pop
mov
push
push
adc
stos
push
push
and
cmp
out
xchg
iret
js
xchg
mov
jl
xor
pop
sti
mov
push
imul
sbb
or
add
movsl
icebp
jmp
jge
iret
mov
insb
cli
imul
pop
aad
lods
mov
scas
icebp
and
sbb
fists
and
xor
add
fwait
imul
sub
adc
lret
pushf
add
lcall
dec
xlat
clc
dec
sub
jmp
push
push
xor
pop
call
mov
inc
jno
mov
lods
sbb
lods
and
and
fstpt
xchg
push
fxch
cmp
xor
xchg
xlat
pop
xor
int
aad
jns
repnz
fcmovnbe
out
pop
imul
sbb
or
mov
fcompl
pop
dec
stos
cmpsb
lea
in
lods
inc
sub
js
nop
jp
out
iret
pop
lds
or
sarl
xchg
aam
rol
test
repz
add
int
mov
mull
shlb
or
mov
inc
xor
mov
lret
je
mov
fwait
adc
fstpt
dec
int3
dec
jmp
cmp
push
scas
negl
mov
test
cmp
imul
xor
xor
mov
iret
mov
in
je
cmp
dec
jae
add
xor
stos
data16
dec
add
mov
pop
mov
cld
and
sub
cmp
daa
popa
xchg
push
add
mov
add
ret
stos
out
add
lds
dec
mov
iret
lock
imul
mov
lock
imul
or
push
and
add
andb
mov
cld
pop
clc
lds
decl
sbb
inc
sub
push
jnp
cli
jo
add
jmp
imull
cmp
sbb
test
sti
jb
lcall
dec
pop
enter
ljmp
cmp
cmpsl
popa
inc
sub
jo
mov
lcall
or
scas
lock
daa
das
test
pop
rcl
pop
fnstcw
mov
div
pushf
sbb
pushf
jp
dec
mov
and
jne
push
cmp
xor
out
and
sbb
dec
imul
shll
adc
dec
xchg
loope
addr16
std
outsl
mov
cltd
scas
cwtl
repnz
mov
push
std
mov
les
sbb
lods
mov
or
mov
sbb
mov
rcrl
out
sbb
mov
ja
bts
sub
in
loopne
shrl
mov
pop
sbb
or
rolb
push
xor
iret
and
dec
test
jmp
xor
inc
ljmp
ret
sub
ret
push
sbb
cmpsb
aas
inc
int
xchg
rcll
test
jp
mov
sub
sub
aad
fisubs
mov
aam
mov
lea
push
push
add
leave
jl
sbb
jno
mov
push
xchg
into
test
mov
es
push
pop
dec
es
sub
in
or
xchg
xchg
adc
jl
cmp
lods
sbb
mov
call
cmp
sub
out
sarl
or
clc
cli
int3
add
sbb
outsl
adc
push
and
xchg
imull
sbb
inc
add
scas
popf
dec
xor
in
call
lret
and
mov
xchg
mov
pop
mov
push
das
inc
loop
push
insb
or
mov
fstpt
add
cwtl
mov
test
clc
xor
sbb
jne
loope
mov
xchg
or
push
adc
out
loopne
test
jne
sub
gs
bound
ja
jecxz
xor
fsts
sub
adc
cmp
mov
jmp
mov
std
mov
enter
dec
mov
mov
lods
fadds
aad
mov
mov
jecxz
cld
adc
mov
or
xor
mov
jnp
cmp
and
add
pop
mov
inc
mov
xor
lds
dec
jbe
pop
fldcw
xchg
js
push
mov
ds
mov
cmpsl
hlt
std
xor
sbb
fisubl
jb
push
loop
adcl
popa
mov
test
inc
mov
mov
or
mov
xchg
fcomps
aam
nop
pop
int
jge
inc
aaa
xchg
lods
ss
nop
cmpsb
addr16
lods
dec
cwtl
pop
pop
push
jle
mov
jl
es
in
les
into
xor
aas
mov
push
cwtl
and
cmpl
mov
jg
cs
add
into
outsl
rolb
cli
rorl
xor
rorb
jno
and
pop
xor
mov
mov
mov
mov
inc
ds
repz
pop
test
sbb
or
mov
into
in
dec
add
ja
sar
aad
mov
inc
cwtl
mov
and
out
bound
insl
jge
call
mov
mov
bound
lret
movsl
jecxz
and
adc
cmpsb
xchg
fsin
jns
pop
or
outsl
lds
add
out
jle
adc
cmp
fistl
lds
cmp
dec
pusha
sub
insb
mov
fucomp
xchg
push
movsl
xchg
insl
flds
das
aam
xchg
cld
aaa
cmp
xlat
mov
adc
xchg
pop
dec
xor
shrb
shlb
jae
add
sbb
mov
test
lea
cmpsl
inc
cmp
push
out
lcall
loop
sbb
mov
mov
stos
push
in
mov
hlt
fidivrs
leave
pop
and
sbb
mulb
pop
jo
xchg
pop
jbe
cmp
enter
enter
out
out
cmp
rorb
gs
int
imull
shll
subb
pushl
pushf
sub
jne
mov
into
scas
mov
out
pop
cmp
std
leave
roll
roll
jmp
xor
xchg
call
lret
lahf
pop
aaa
ds
in
stc
sub
int
ret
dec
push
imul
mov
or
out
rcl
ret
cwtl
or
jge
push
adc
out
cmp
fcmovu
mov
mov
fsubrl
add
orl
out
jge
mov
push
mov
sbb
inc
lock
daa
dec
std
stos
add
adc
notl
pop
mov
sbb
loop
jp
adc
lock
mov
fists
dec
xor
add
bound
cmp
sub
insl
jae
dec
test
cltd
lds
shrb
jae
and
loop
lea
mov
fisubrs
js
xor
movsl
adc
sub
inc
lods
xor
loopne
mov
xor
dec
jne
hlt
rcrl
orb
mov
jge
scas
gs
push
lock
addr16
adc
add
imul
test
aaa
adc
cmpsl
jae
dec
addr16
icebp
pop
jmp
pop
in
insl
shll
push
in
or
sti
mov
cmp
je
out
std
les
shr
ljmp
push
sub
pop
sarb
pop
jmp
pop
rorb
and
xchg
pop
cmpsb
sahf
shll
xor
cld
inc
pop
sbb
pushf
in
divl
fwait
mov
test
jo
ds
lcall
lcall
add
in
and
pop
xlat
pusha
enter
call
jns
aas
jae
fidivrl
inc
jg
jno
mov
comiss
verw
aad
push
add
inc
mov
jmp
outsl
repnz
int3
push
add
ja
ret
popf
filds
pushf
jne
out
and
loop
cmp
rorb
data16
ret
stc
mov
dec
in
jnp
mov
dec
cwtl
mov
mov
je
xchg
jb
out
je
fnstcw
daa
jg
mov
imul
mov
cmp
iret
sub
xchg
inc
adc
sarl
std
movsl
inc
push
int
int
lock
stos
out
mov
shl
pusha
xchg
aad
inc
xchg
and
inc
dec
push
sub
jg
xchg
xchg
xor
mov
inc
xor
pusha
xorl
and
lcall
loop
push
cmp
mov
cmc
sub
mov
push
cs
clc
cmp
sub
enter
movsb
and
ja
aaa
pop
push
adc
sar
pop
adcl
dec
sub
ret
cmpsl
and
ret
adc
das
and
mov
mov
fidivrs
movsl
lcall
pop
aad
adc
jb
add
sub
arpl
lds
or
xor
daa
xor
sub
or
and
xchg
or
addr16
mov
xor
cmp
xchg
xor
add
adc
lods
cmp
adc
cli
or
xor
cwtl
je
lret
outsb
je
mov
push
sub
mov
push
fsts
cli
push
push
lods
inc
frstor
mov
adc
jns
mov
sbb
cmp
mov
add
jp
rorb
jl
jno
addb
cmp
sub
adc
movsb
add
xchg
pushf
ret
ds
cmp
xchg
jmp
movsb
mov
adc
push
sahf
out
inc
shl
sarb
adc
outsl
jmp
pop
sbb
jle
mov
or
push
inc
and
xor
add
mov
ljmp
outsb
icebp
lret
push
xchg
jb
rcl
pop
mov
xrelease
push
lock
rclb
jae
stc
jno
or
adc
ds
adcb
push
leave
mov
and
nop
fistl
test
mov
cmpsb
push
insl
shlb
and
in
in
sub
add
cmp
cld
jbe
pop
cli
mov
push
sub
pop
cmp
sbb
cmp
mov
popf
scas
mov
mov
pop
dec
mov
or
fwait
ds
mov
insl
lods
dec
js
movsb
clc
ficompl
mov
mov
xchg
stc
mov
xor
cmpsl
das
add
jno
xchg
inc
out
adc
jo
cmp
jge
mov
fiadds
pop
shr
mov
mov
jl
adc
es
mov
xor
ja
cmp
mov
jae
lret
sub
dec
icebp
sub
into
fiaddl
mov
and
or
aaa
lahf
add
sub
aas
add
xchg
sbb
mov
add
inc
jge
dec
add
and
lds
rorb
jbe
divl
insb
scas
add
jle
mov
sub
testb
jns
int3
rolb
inc
icebp
mov
ljmp
faddl
mov
dec
add
lldt
xor
test
cmp
icebp
xchg
clc
scas
pop
icebp
cmp
js
push
icebp
push
outsl
aas
mov
test
jmp
add
pushf
sti
pop
je
sub
out
pop
loop
inc
ja
push
xor
pop
xchg
mov
negl
inc
sub
fs
cmp
loop
mov
mov
and
mov
pop
fldl
xor
loopne
loopne
adc
mov
jl
jp
enter
jb
mov
loope
lahf
push
push
jge
and
pop
repnz
out
push
and
mov
push
xor
test
aas
and
pushf
lds
iret
jge
xchg
shlb
outsl
mov
xchg
mov
xchg
data16
push
aam
imul
insb
out
cmc
movsl
in
and
into
cmc
add
outsl
pop
xlat
movsb
aam
aad
sub
jns
push
push
fildl
or
sub
jns
fwait
ljmp
dec
repnz
pushf
inc
xchg
jb
jmp
dec
nop
cs
lahf
dec
jecxz
dec
sub
cwtl
mov
mov
cmc
imul
orl
add
fisttpll
in
int
bound
pop
dec
xor
mov
std
repz
sub
subps
adc
lods
fucomip
outsb
ljmp
gs
mov
mull
loopne
dec
sarl
mov
inc
ljmp
xor
xor
addr16
mov
add
mov
shrl
das
jne
loop
jno
pop
repnz
das
push
lcall
inc
outsb
mov
inc
mov
aam
leave
leave
add
clc
nop
mov
push
xor
out
xlat
xchg
dec
push
mov
jns,pn
push
cmp
xor
or
dec
sub
in
or
cmp
push
outsl
out
push
ficomps
lret
out
xlat
sub
xor
add
or
jp
cli
in
sub
inc
mov
push
inc
adc
or
jl
dec
jge
mov
cmpsb
mov
outsb
pop
addl
inc
pusha
rolb
fdivl
and
loope
in
push
cmpl
dec
pop
test
mov
sub
out
adc
insb
cmp
mov
cmc
dec
jne
out
loope
mov
std
arpl
pushf
jp
mov
mov
or
adc
mov
or
int3
cs
outsb
cmp
and
loope
inc
rol
xchg
jmp
cmp
or
aas
movsl
add
mov
jae
add
jno
aam
push
and
rorb
sti
mov
insb
popf
or
and
scas
sub
mov
out
mov
cmp
mov
mov
xchg
cmp
cmp
cltd
xchg
fs
cmp
bnd
jb
hlt
pop
and
gs
adc
stc
call
pushf
ljmp
aas
xchg
sub
in
ss
addr16
push
xchg
cmpsl
xor
or
popa
and
jmp
fsubl
inc
lods
les
daa
dec
push
int
push
in
fstps
dec
xor
jmp
sub
popf
cld
jl
loope
jne
pop
out
inc
sahf
enter
lods
mov
or
pusha
adc
sbb
aaa
xor
out
jg
aaa
aaa
cwtl
mov
daa
jle
pop
outsb
int
push
test
push
in
mov
or
fbld
imul
mov
inc
jg
les
push
mov
mov
sub
or
or
in
rcll
sbb
leave
add
aam
fstps
repnz
lcall
cmp
mov
and
jl
xor
pop
jge
xchg
popl
fnstenv
mov
aad
gs
stc
mov
cmp
mov
aad
out
inc
arpl
jl
in
daa
cs
xor
dec
mov
adc
mov
xor
xor
cmpsb
nop
mov
fcompl
and
xchg
xor
sub
cltd
mov
mov
sbb
aad
cmp
test
lahf
xor
into
out
jne
in
into
cmpsl
xchg
mov
push
mov
popa
pop
out
push
adc
mov
mov
out
xchg
mov
int3
rep
cmp
pop
daa
call
fldcw
fistpll
push
insb
pop
jo
out
pop
pusha
pop
jge
leave
mov
push
cmp
mov
sub
jp
mov
loopne
into
sub
sbb
hlt
notb
push
and
lea
loop
xor
mov
addr16
rorb
jae
add
push
add
ret
les
pop
inc
lods
mov
fmuls
add
ss
daa
mov
popf
rorb
dec
je
sub
aas
xor
pop
and
mov
or
cld
jmp
mov
push
cmc
jecxz
cmp
mov
cmp
cltd
add
xorb
mov
mov
or
pop
and
mov
nop
test
fildll
pop
outsb
lods
add
pop
into
or
enter
mov
or
push
fbld
stos
shl
inc
cmp
jno
imulb
jbe
test
subb
mov
push
into
push
addr16
cmp
icebp
and
repnz
cld
mov
cld
sub
gs
adc
inc
sarl
jno
pop
gs
subb
loopne
js
and
fdivrp
mov
enter
mov
filds
pop
cmp
jb
cmp
outsl
add
lods
sbb
xor
mov
mov
jmp
or
sbb
or
mov
dec
popf
pusha
cmpb
or
fs
pop
jecxz
xor
mov
leave
dec
bswap
pop
mov
cmp
sub
and
dec
jmp
sub
psraw
in
insb
push
jp
mov
cmp
scas
sub
imul
sub
xchg
jb
leave
push
xchg
jg
cmpsl
in
or
push
add
aam
popf
mov
and
mov
pop
cmpsl
repnz
call
fs
mov
arpl
and
std
xor
loope
or
jae,pn
rclb
sub
mov
imul
push
addr16
pop
push
xlat
fwait
mov
cmpb
pusha
cmpsb
jecxz
cs
fidivl
fildl
mov
clc
mov
mov
xchg
test
arpl
jge
pop
add
mov
out
ss
lods
xchg
cmpsb
cmp
lods
lcall
or
mov
not
mov
mov
fcompl
in
lea
repz
ljmp
xchg
dec
ds
mov
int3
in
imul
pop
call
insl
adc
repz
incl
or
pop
mov
sub
jo
or
lods
mov
mov
div
pop
sbb
pusha
les
push
sub
or
int3
xchg
lds
mov
cmp
sbb
push
stos
ja
cmp
xor
fiadds
pop
and
mov
push
push
pop
pop
jae
sub
pop
fbld
push
ret
pushf
out
xchg
aaa
jne
les
jmp
movsl
int
adc
subb
mov
mov
adc
sbb
jbe
inc
enter
daa
gs
mov
sbbb
push
adc
jne
int3
sub
sbbb
in
mov
sbb
pop
lahf
addl
outsl
push
nop
mov
in
test
adc
aas
xlat
imul
outsb
test
mov
mov
xchg
ret
gs
inc
adc
mov
pop
mov
cs
out
ljmp
ds
in
xor
fisubrl
icebp
lods
scas
or
sbb
xor
add
pop
fcmovbe
sahf
lret
outsb
push
mov
cli
movsl
dec
jmp
fildll
cmpsb
pop
fwait
repnz
stos
sub
cmp
cmp
fs
nopl
lcall
scas
push
aad
clc
jne
shrb
pop
scas
lahf
push
xchg
fidivl
frstor
cmpsl
out
xchg
mov
push
mov
imul
pusha
addb
mov
mov
xchg
aam
pop
add
shll
out
xchg
movsb
xlat
push
cli
xchg
mov
out
jg
stc
dec
inc
ss
and
test
pop
push
cmp
pop
imul
and
lock
mov
pop
rorl
mov
shrb
popa
mov
pop
lret
sub
shlb
loop
out
mov
mov
add
push
ds
stos
sbb
clc
lret
push
dec
jle
adc
xchg
shlb
mov
fisubl
push
dec
adc
leave
cmpsl
adc
hlt
mov
pop
add
lods
fsubs
pushf
push
dec
out
add
cmp
push
sub
push
mov
inc
jnp
lock
shll
ljmp
cmp
jl
mov
jns
sbb
repnz
aas
or
out
popa
sbb
lods
cltd
sbb
mov
sub
pop
arpl
shrl
pop
dec
jle
cmpl
mov
cwtl
mov
mov
dec
inc
into
stos
das
jnp
clc
pop
mov
daa
sar
out
je
int
addr16
cli
cmp
adc
ret
sbb
mov
cli
aad
push
inc
and
lea
jge
lods
addr16
ss
sbb
mov
icebp
or
icebp
mov
or
xchg
mov
jbe,pn
int
loop
push
loope
cltd
xchg
push
insb
xor
push
mov
in
in
and
scas
push
xor
push
add
imul
pop
movsb
popf
js
mov
push
jle
adc
jge
dec
adc
mov
pop
cltd
dec
nop
aas
xchg
push
xchg
imul
mov
and
loop
mov
fwait
mov
mov
ret
dec
fisubs
pop
sub
and
jns
dec
mov
fs
and
cltd
movsl
dec
cmp
jmp
sub
out
aad
xor
adc
in
icebp
mov
mulb
push
imul
lods
arpl
mov
push
xchg
loope
cmp
xlat
ds
dec
cmpsb
mov
or
inc
or
inc
add
call
add
mov
daa
push
or
cmc
pop
mov
mov
outsb
dec
fstpt
jne
dec
cmc
mov
mov
mov
xchg
hlt
in
pusha
push
xchg
imul
inc
cwtl
sti
sahf
xchg
fmuls
stos
adc
stos
movsl
jl
cmpsb
add
dec
and
leave
ljmp
sbb
cmp
adcb
jnp
out
mov
inc
and
sub
fwait
test
lods
loopne
jecxz
sar
sbbl
pop
scas
in
mov
imul
jns
or
ljmp
cld
lcall
jns
les
scas
cmp
fiadds
mov
and
aam
pop
movsl
loopne
aas
enter
inc
or
sbb
fxch
arpl
cmc
dec
mov
adc
adc
pusha
inc
movsb
cld
stc
imul
lods
pop
inc
adcl
cmp
test
sub
outsb
sahf
cltd
mov
sub
pop
hlt
push
stc
lcall
sahf
out
insl
clc
push
outsl
inc
fadd
aam
dec
dec
mov
xchg
sar
fwait
cltd
dec
push
cmp
rcr
outsl
inc
rclb
movb
mov
jne,pn
sar
scas
sub
dec
ficompl
and
clc
aad
mov
dec
mov
js
cltd
loop
ss
mov
jno
mov
sbbb
push
pop
in
das
xchg
push
pop
add
mov
icebp
add
push
enter
and
jo
inc
leave
ds
fistl
outsl
mov
lea
stos
sub
cmc
jmp
inc
dec
push
in
pop
dec
pop
rcrb
fwait
and
lahf
lds
push
add
mov
sub
inc
push
mov
fnstsw
mov
dec
arpl
cmp
pop
je
cli
dec
cmp
inc
jne
mov
cmp
xor
push
leave
cmpsb
dec
dec
dec
daa
repnz
and
popa
arpl
clc
lock
inc
and
sbb
ret
mov
push
push
mov
jno
xor
sbb
xchg
push
dec
in
jne
inc
enter
dec
repnz
and
jns
cmp
jmp
ds
mov
je
mov
ret
fs
ja
and
and
xchg
leave
cmp
add
out
ret
pop
push
push
jmp
fldt
push
ljmp
rclb
mov
test
testl
add
dec
pop
xchg
shll
mov
xorl
add
pop
inc
sti
fsubl
sbb
jo
pushf
out
or
scas
pop
and
fwait
and
xchg
icebp
jnp
cmp
popf
jp
rcrl
push
rcrb
aaa
jp
mov
sti
imul
out
mov
cmp
xchg
scas
aaa
inc
jl
mov
sbb
push
push
nop
ror
gs
jle
dec
fistpl
popa
sub
push
dec
mov
enter
dec
cli
loope
gs
loope
push
mov
jb
jnp
js
xor
ret
push
xor
jg
xchg
pushf
inc
mov
xor
and
in
lods
mov
xchg
push
rcl
test
mov
popa
or
mov
jecxz
mov
add
add
outsb
filds
pop
and
inc
add
daa
jb
sub
aas
push
mov
cmc
cmc
mov
adc
nop
dec
sahf
lods
fmull
mov
repnz
and
push
mov
pop
lret
fdivl
xchg
mov
std
insb
jo
jecxz
in
imul
mov
mov
dec
adc
push
push
push
adc
out
test
xchg
and
outsl
pop
aaa
inc
lahf
mov
mov
adc
shrl
insb
les
xchg
jns
ret
rclb
outsb
shll
or
in
pop
lcall
ret
ja
mov
scas
cli
mov
xchg
push
sub
xor
inc
dec
adc
sbb
test
sub
sbb
pop
mov
dec
cmp
imul
sub
jbe
xchg
cld
add
xchg
cmpsl
orl
imul
add
out
sti
cmp
inc
push
mov
mov
iret
shlb
xor
jge
sub
or
sbbb
sbb
jp
sub
leave
sbb
cmpsl
and
dec
push
pop
js
std
push
push
ret
std
sbb
ficoml
lds
pop
push
jno
shlb
xchg
sub
outsl
call
orl
xor
rcl
lock
rcrl
mov
mov
insl
fsubs
aas
and
xor
pushf
sub
pop
jge
jg
cmp
addr16
stos
daa
push
jb
jbe
test
dec
in
lret
in
add
dec
outsb
fsubl
jmp
cmp
cmpsl
out
std
test
movaps
xor
fiadds
jae
stc
push
int
movsl
push
cmpsl
push
pop
sub
xchg
inc
lret
lods
fistpll
idivl
addr16
mov
mov
inc
insl
mov
fsts
int3
sbb
push
jns
lret
pop
dec
xchg
rcrb
push
dec
fs
leave
adc
pop
pop
enter
fsubrl
cmpsl
enter
xchg
aad
in
cs
fdivrs
imul
repnz
decl
negl
xchg
lahf
xchg
xor
xchg
iret
mov
pop
in
ret
mov
ljmp
mov
movsb
xchg
mov
sbb
xchg
cmpl
in
repz
or
xor
lds
sbb
dec
daa
jle
and
mov
lret
cmpsl
dec
xor
arpl
insb
cmp
adc
sub
loope
inc
ljmp
mov
or
mov
xchg
negb
or
sahf
mov
cmp
and
scas
adc
stc
es
out
push
xchg
push
inc
jle
inc
pop
cli
shlb
repz
pushf
push
cmp
pop
mov
mov
outsb
out
mov
mov
mov
test
mov
fs
out
js
pop
outsl
ja
in
roll
cmp
imulb
pop
xor
and
inc
das
adc
femms
shlb
mov
pop
mov
jl
mov
inc
adc
jle
out
mov
mulb
jne
rclb
jne
shll
cmp
push
adc
adc
sub
rcr
xchg
je
mov
lods
jb
dec
movsl
pop
cmc
out
call
daa
insl
xchg
jno
xchg
pop
and
pop
out
call
push
mov
and
jecxz
mov
mov
sahf
test
and
test
shrl
in
mov
mov
shlb
mov
flds
pushf
push
lahf
pop
add
jge
fisubrl
sub
jbe
fistpll
enter
aam
push
out
xchg
push
xchg
stos
in
mov
sbbl
into
mov
in
inc
ffreep
mov
sub
inc
jl
adc
pop
pop
lea
adc
stos
arpl
in
mov
push
xlat
outsl
xchg
fdivrp
pop
js
jl
mov
pushw
daa
dec
lods
ljmp
cld
add
fiaddl
movsb
sahf
mov
rorb
shrl
push
es
push
imul
sub
jg
jecxz
pop
sbb
iret
xchg
mov
sbb
cld
mov
dec
ss
mov
lcall
sahf
sarl
repz
push
adc
mov
push
test
lods
pop
pop
jo
jo
dec
dec
adc
scas
sub
into
pop
dec
push
mov
hlt
cmp
cmp
fcomip
mov
nop
out
cmpb
subl
dec
mov
inc
rclb
jecxz
pop
and
add
aas
adcb
push
sub
test
pop
iret
mov
cwtl
imul
mov
mov
in
mov
mov
insb
cmp
inc
and
add
or
push
cmpsb
leave
inc
adc
test
enter
out
inc
outsl
add
ret
jg
int
mov
adcb
pusha
pop
dec
out
ljmp
ljmp
mov
mov
cwtl
pop
or
cmp
lcall
and
ret
inc
fsubrs
dec
add
pop
jae
push
push
adc
cmp
mov
xor
test
adc
mov
mov
pop
test
stc
out
jl
pushf
test
jb
pop
push
daa
lods
out
rclb
sbb
js
mov
xor
lock
lcall
inc
jo
aam
stos
scas
add
subb
push
pop
xor
pop
ljmp
push
push
xchg
push
mov
pop
xchg
call
or
push
xchg
xchg
stos
mov
out
test
cmp
or
xor
andl
cmp
and
loope
lods
jo
repz
sbb
jnp
fdivl
add
dec
xchg
aad
ret
inc
pop
push
ja
lea
mov
sub
dec
jmp
inc
lds
js
jmp
rorb
cltd
sti
push
popa
and
cmp
inc
push
lahf
hlt
cld
in
inc
cmp
sbb
xor
scas
mov
pop
nop
cmp
in
pop
insb
and
lea
cmc
ds
xchg
test
and
pop
pop
js
movsb
inc
pop
ljmp
add
and
aad
sbb
push
cmp
xor
inc
mov
sbb
xchg
jae
in
sub
xchg
fidivl
push
mov
subl
push
sar
ficompl
lret
mov
xchg
pop
ds
mulb
xor
js
gs
lahf
mov
sub
lret
arpl
jg
cmp
popf
dec
push
xlat
addb
jne
sbb
add
xchg
cmpsb
and
cmp
xor
ds
incl
mov
ret
dec
mov
mov
cmp
lret
ljmp
jg
iret
jae
dec
add
xchg
ret
cmp
arpl
mov
push
into
push
fmull
xchg
mov
cs
jp
sub
inc
pop
push
loope
stc
addr16
pushf
xor
daa
mov
shl
repnz
pusha
fimuls
mov
out
pmullw
cmpsl
mov
nop
xchg
movb
mov
stos
std
into
dec
gs
cmpsl
cmp
das
cwtl
es
cltd
and
js
popw
and
aas
adc
ret
jge
push
aam
mov
rcr
fldl
mov
test
xchg
inc
mov
inc
pop
stos
negb
xlat
sub
mov
dec
in
clc
lods
xor
cmpsl
adc
mov
cmpb
bnd
pop
adc
fcoml
or
clc
mov
fs
or
sbb
cmp
insl
jae
test
and
pop
pop
add
jne
cmp
or
out
adc
inc
sahf
xchg
into
sbb
or
in
add
je
aas
jle
ret
push
cmp
pop
aad
add
fnsave
xorl
or
sub
icebp
rcrl
gs
xor
push
js
ja
cltd
testb
jns
adc
mov
repz
hlt
sub
inc
jo
adc
shrl
mov
add
pop
xor
dec
push
push
ss
mov
ja
test
int3
subl
pop
rcr
cwtl
js
iret
mov
mov
mov
sbb
repnz
rol
or
jp
out
push
loop
sbbb
pop
les
stos
test
sub
add
adc
out
test
outsb
lods
cmc
repnz
adc
aas
aad
push
iret
xor
push
es
jne
jg
inc
cmp
in
loop
lock
sarl
dec
hlt
int3
hlt
pop
cs
sarl
aaa
mov
aam
movsb
outsb
dec
ljmp
test
cwtl
cld
or
xchg
pop
hlt
push
addl
push
sub
lahf
inc
mov
sub
sub
je
std
lahf
inc
xchg
cld
push
mov
add
hlt
and
out
jp
movsl
jmp
push
shrl
inc
pushf
lock
icebp
xorl
popa
cmpsl
jnp
test
inc
fidivs
mov
insl
add
pop
mov
xor
mov
ds
pushf
je
mov
inc
sub
inc
out
out
scas
enter
push
mov
in
mov
std
add
aas
sub
adcl
pop
sub
hlt
add
js
adc
hlt
test
aam
movsl
aas
lods
pop
jmp
lods
ret
icebp
int3
xchg
push
inc
sub
bound
adc
or
push
movsl
xchg
enter
sub
arpl
push
or
nop
jb
in
out
xor
shrb
sahf
shl
inc
cli
cs
mov
loope
sbb
jmp
mov
frstor
outsl
dec
movsb
and
test
push
addr16
mov
aam
mov
or
push
jns
out
je
out
adc
sahf
mov
push
enter
xchg
jnp
xchg
jae
les
insl
xor
cmp
lds
jo
loop
shl
jp
leave
add
lahf
lods
test
cmp
data16
into
ret
cmp
in
mov
sub
pop
cmp
lahf
xchg
mov
mov
xor
xchg
adcb
mov
adc
addr16
cmpsl
or
test
xchg
jle
test
and
push
movsb
stos
fldt
sbb
adc
enter
inc
mov
add
scas
sahf
mov
xor
sub
movsl
shl
pop
cmc
lahf
push
cmp
add
aam
in
sub
xor
shlb
les
push
sarl
mov
xchg
scas
ficompl
nop
add
add
jle
jmp
push
lcall
in
shl
bound
push
shll
mov
jns
pop
or
pop
pop
mov
add
xchg
inc
stc
jns
test
push
push
xor
lea
pop
or
popa
jb
fsubrl
mov
scas
loop
sub
mov
cmp
clc
aas
int
test
pop
xor
cmpsl
xchg
adc
repz
inc
ja
aad
lock
data16
inc
xchg
lea
insb
sbb
outsl
sub
sar
and
cmp
andb
mov
push
dec
pop
lahf
rcrb
jns
push
jbe
testl
push
or
pop
jbe
arpl
fisubrs
add
les
jns
push
aas
adc
insl
bound
push
push
jle
cmp
mov
fdiv
add
dec
lcall
push
test
out
adc
ret
ret
cld
adc
jg
sahf
mov
or
sub
repnz
cli
mov
add
aas
repnz
dec
out
data16
cmp
ret
adc
insb
cli
lods
push
pop
lret
div
xor
pop
mov
and
call
adc
xlat
scas
xchg
dec
dec
xchg
iret
scas
iret
mov
fiadds
sub
sbb
in
mov
mov
aad
pop
cltd
loop
jns
js
mov
add
testl
push
pop
ja
mov
out
scas
sbb
mov
adc
cld
incb
jo
mov
pcmpgtb
inc
ret
ret
repnz
testl
or
fnstcw
jns
mov
pop
sub
sub
mov
aam
shl
cmp
lock
je
out
stos
xchg
fcoml
addr16
xor
push
ja
stos
or
out
push
daa
clc
cmpsl
subb
and
aad
lret
mov
lods
out
mov
add
out
sbb
dec
cmp
jmp
pop
add
add
jecxz
mov
push
ljmp
int
xor
xchg
sysenter
enter
lock
daa
add
mov
leave
adc
sahf
and
pop
xchg
test
lods
push
out
les
xchg
sbb
std
lods
mov
add
push
iret
js
adc
push
sub
call
pop
out
sbb
and
cmpl
sub
stc
adc
shl
adc
les
sbb
mov
loop
dec
xchg
lret
jb
loop
xor
add
sbb
dec
rcrl
pop
js
ja
insl
sub
xchg
xor
xchg
negb
adc
push
dec
xchg
in
push
stc
sub
sub
orl
mov
icebp
mov
or
push
or
xchg
xchg
push
pop
fidivs
pop
inc
fcomi
test
add
push
mov
mov
jnp
mov
or
jae
hlt
loop
or
ror
mov
iret
out
lcall
sub
inc
dec
jo
loop
jmp
mov
ja
call
shr
pusha
addr16
fdivs
sti
jnp
pop
ss
rcrl
sar
inc
ds
mov
xchg
ds
mov
imul
sub
cmp
xchg
aad
pop
pop
ud1
aas
aaa
inc
ljmp
or
ds
cmp
xchg
or
sub
push
xchg
adcl
mov
scas
call
mov
mov
js
enter
flds
cli
sub
inc
ljmp
mov
pusha
dec
imull
mov
sub
test
dec
in
sub
iret
pop
repz
pop
sub
js
sbb
mov
adc
push
ret
jno
push
inc
jnp
dec
inc
ja
push
jecxz
ja
mov
mov
inc
popf
arpl
test
addr16
in
pop
hlt
push
adc
or
sti
xchg
out
jp
or
dec
stos
jle
dec
and
iret
sub
movsb
push
jnp
inc
or
push
icebp
aaa
push
dec
xor
push
adc
cmp
push
mov
gs
into
and
enter
jecxz
fcompl
jne
pushf
mov
cld
pusha
cmc
mov
out
sbb
push
insl
mov
and
add
xchg
roll
mov
rcrb
stc
inc
out
dec
pop
mov
je
fs
dec
enter
xchg
push
jg
ds
ret
xchg
inc
ret
inc
fdivrs
push
dec
mov
add
mov
push
jp
jns
and
les
or
push
xor
insb
scas
lahf
pop
push
scas
mov
mov
jns
test
lret
mov
adc
mov
out
inc
mov
mov
test
xor
cmp
rcr
scas
cli
pop
fists
into
pop
and
dec
cmp
mov
test
sti
mov
fdivs
and
cwtl
cmp
mov
add
mov
mov
or
mov
test
out
stos
pushf
incb
mov
hlt
adc
jb
loop
or
mov
fstl
in
xchg
cmpb
les
stos
int
movsl
fldcw
adc
cmp
mov
sbb
scas
jmp
jp
pop
lock
shr
add
movsb
jnp
bound
dec
outsl
push
js
or
test
es
cli
out
pusha
jnp
addl
xchg
aaa
push
or
lock
cmp
frstor
into
js
loopne
ror
movsb
add
jb
adc
fbld
add
xor
fs
mov
sar
lret
or
loope
cli
sub
xchg
test
clc
dec
push
push
mov
shr
fcoml
mov
inc
mov
imul
adc
push
push
mov
mov
dec
repz
cmpsb
aad
fs
pop
or
clc
icebp
mov
dec
push
mov
sti
pop
adc
mov
enter
push
xorl
dec
mov
ficoms
ret
stos
outsl
pop
sbb
adc
sub
popf
sarl
pop
cmp
push
lods
mov
popa
or
or
mov
push
adc
and
aam
dec
push
jge
ret
into
jns
push
scas
jnp
jo
popa
mov
dec
xorl
out
scas
inc
mov
xchg
loop
mov
push
cmp
fs
nop
add
mov
xor
mov
inc
int3
mov
cli
sub
mov
stos
sub
pop
xchg
scas
adc
mov
arpl
addr16
push
add
loop
jle
mov
push
das
xchg
pop
mov
bound
pop
xor
sub
dec
arpl
mov
out
inc
adc
pop
jmp
mov
cmc
xchg
loopne
rolb
daa
pop
sbb
scas
mov
ret
and
clc
ss
movsb
enter
popf
push
push
inc
xchg
adc
pop
paddusb
pusha
es
or
push
inc
gs
arpl
lea
dec
adc
stos
pushf
sbb
insb
popa
mov
cmp
pop
fidivl
aad
push
add
mov
lret
test
mov
pop
std
setp
xor
pop
push
xchg
aaa
shlb
stc
les
xor
out
out
or
push
mov
std
and
jnp
inc
push
int3
xor
or
pop
sbb
mov
push
mov
movsb
in
inc
add
pop
stc
inc
adc
cmp
fcom
fsubrs
push
mov
loopne
ds
push
lock
cld
fstl
jge
mov
loope
cmp
mov
and
out
push
xchg
push
std
xorb
test
mov
or
pop
inc
and
and
hlt
adc
mov
loope
dec
loopne
je
xlat
cmp
pushw
xchg
sub
mov
lods
movl
xchg
scas
mov
iret
pop
fnstsw
decl
pop
xchg
ds
jecxz
hlt
add
and
and
push
push
scas
sub
adc
repnz
lds
inc
sti
into
loope
jne
shlb
mov
xor
inc
sub
mov
mov
add
mov
push
mov
cmp
xchg
xchg
cmp
fs
std
sub
fwait
int3
mov
mov
push
xchg
or
sar
cltd
mov
jnp
or
pop
inc
mov
ret
xor
adc
syscall
mov
pop
mov
das
or
fmul
mov
in
push
sub
insl
inc
pop
icebp
shlb
push
cmc
ds
subb
inc
mov
enter
into
stos
jae
in
mov
pop
add
sarl
push
ffreep
movsb
rclb
pop
dec
add
js
pop
add
ds
jge
add
std
pop
dec
imull
sarl
jns
push
les
jecxz
mov
xchg
mov
or
fsubrs
mov
and
mov
lret
cmpsl
sbb
sbb
sbb
push
xlat
dec
push
cmpl
loope
dec
mov
add
sbb
lock
fisubrl
jge
mov
xchg
jge
mov
jns
clc
mov
sub
jecxz
or
sbb
adc
icebp
dec
pusha
or
mov
mov
cld
jno
xchg
dec
sub
jle
in
sub
mov
jnp
xchg
loopne
pop
inc
pushf
xor
insb
inc
pop
popf
push
xchg
stos
mov
fld
cld
jmp
lahf
lcall
movsb
dec
jae
in
mov
out
inc
adc
out
nop
stc
mov
dec
or
xchg
movsb
pop
pop
outsb
pop
movsl
mov
push
aas
in
lret
sbb
fsubl
pop
in
aaa
imul
lret
sub
jecxz
fiadds
stc
inc
mov
shrl
mov
inc
add
cmp
lcall
jl
stc
stos
cmp
jb
adc
cmp
sub
push
dec
fmuls
mov
mov
or
inc
push
sahf
sbb
aaa
outsl
test
ret
cmpsl
push
js
mov
mov
and
shr
and
jb
sbb
fbstp
xorl
ss
loope
pop
jmp
mov
cltd
shl
loopne
pop
iret
paddw
sub
into
and
mov
add
leave
ja
mov
lods
sahf
in
jo
clc
pop
or
cmpb
repz
mov
push
cmp
sub
popf
aam
jb
movl
ret
bound
and
push
lea
add
in
out
mov
ret
mov
repz
inc
das
stos
scas
out
cs
mov
rorb
leave
stc
jge
subl
iret
scas
clc
xchg
test
pop
sub
ret
imul
xor
mov
popf
xor
sahf
add
or
inc
clc
dec
xchg
cmp
sbb
mov
pop
xchg
cmpsb
pop
mov
aad
fisttps
push
loopne
pusha
out
cmpsb
push
repz
mov
mov
add
sarl
xor
adc
lock
rolb
dec
imul
smsw
test
mov
in
aad
or
es
sbb
xchg
mov
cmp
mov
test
dec
arpl
sub
dec
outsb
mov
sbb
leave
sbb
pop
lods
lcall
and
std
mov
stos
fldpi
or
loopne
push
or
xchg
in
imul
push
ret
fisubrl
push
lock
sbb
jo
mov
scas
pop
shll
dec
xlat
inc
xlat
mov
jbe
and
leave
in
or
or
adc
or
pop
or
mov
xor
mov
popf
and
mov
jmp
outsb
setle
rcrb
mov
push
mov
pop
inc
sahf
lea
stc
add
jnp
inc
add
sub
and
and
out
sbb
test
jle
outsb
jecxz
mull
nop
rcll
pop
jae
sub
or
cmp
sbb
cltd
cmpsl
mov
jo
popf
jge,pn
dec
xorb
imul
jne
mov
or
push
push
mov
push
pop
xchg
ds
or
and
xchg
ljmp
add
cmc
jl
ds
jl
xchg
pushw
sahf
cmp
lret
inc
sbb
or
and
fldl
in
sbb
jbe
push
xchg
hlt
mov
mov
and
sbb
add
ret
xchg
stos
test
lock
xlat
mov
movsl
xchg
xchg
sub
jle
dec
out
mov
jnp
push
add
xchg
or
inc
mov
je
push
sbb
adc
shrl
adc
divb
jb
ficomps
enter
iret
scas
dec
jnp
inc
mov
ljmp
enter
and
jmp
inc
push
or
in
dec
add
outsl
jl
cmp
aas
pop
sbb
push
stos
cmp
jmp
and
mov
outsb
mov
mov
pushf
insl
ljmp
add
pop
jnp
and
int
xchg
mov
inc
mov
fsts
push
mov
cmp
mov
pop
mov
push
mov
aad
fildl
xchg
fnstsw
movsb
cmpsb
sti
cmp
inc
dec
sub
in
ret
jp
lret
push
mov
pop
leave
xchg
jae
xchg
jno
cmp
mov
pop
and
mov
cli
cmpsb
pop
scas
dec
sbb
data16
adc
lret
add
repnz
cmp
push
push
pop
mov
mov
pop
sub
mov
mov
rol
cmp
jo
jns
fisttps
adc
cmc
sub
cli
adc
add
pop
int3
loop
sbb
and
inc
xor
data16
and
rcrl
pop
lret
pop
dec
stos
push
mov
scas
int3
pusha
cwtl
jge
out
shll
jbe
xchg
ud1
fwait
mov
scas
incb
mov
fs
int
pop
sarb
adc
lahf
mov
or
cmp
nop
inc
insb
jno
inc
imulb
int3
repnz
dec
out
adc
mov
jns
mov
loop
dec
cmp
mov
arpl
cmp
and
dec
xorps
hlt
and
fs
lahf
xor
cmovge
mov
jl
ljmp
in
in
jb
mov
dec
mov
repz
movsb
mov
and
lret
stc
icebp
insb
adc
sub
not
out
cld
shll
pop
jmp
mov
fs
mov
mov
push
and
cmp
lds
jle
hlt
cmp
leave
inc
push
aam
in
addr16
jns
into
insb
repz
movsb
push
outsb
mov
stos
jp
sub
lret
jo
mov
fwait
data16
rorb
cmpsb
lods
and
test
jp
xchg
dec
jmp
jae
es
sub
pop
pop
cmp
jne
out
fsubl
jae
sbb
out
adc
dec
into
iret
push
sbb
cmpsb
cmp
dec
aam
push
or
loopne
sbb
lahf
push
fcmovnbe
xchg
sub
xchg
scas
or
mov
inc
shll
inc
insl
push
and
pop
mov
push
cli
and
lea
jnp
stos
iret
sti
inc
jns
mov
in
clc
sub
mov
clc
mov
frstor
add
mov
iret
mov
lods
cmp
adc
or
into
dec
andl
mov
int
and
push
jl
mov
cmpsl
lods
inc
adc
fidivrs
jns
loope
dec
pop
test
push
lret
shlb
push
adc
scas
daa
adc
imul
mulb
mov
mov
out
js
pop
cmpsl
lret
aad
dec
stc
addr16
inc
rcr
outsb
cld
mov
jl
adc
xor
xor
shrb
movsb
inc
clc
jae
and
std
and
cwtl
xor
cmpsb
and
pushf
or
cwtl
xor
sbb
and
jmp
cmpsl
gs
idiv
scas
jbe
push
ljmp
scas
sbb
mov
inc
ja
inc
xor
sub
icebp
pop
xor
and
mov
push
inc
jo
inc
pushf
outsl
shll
xor
lea
icebp
inc
out
fidivl
in
test
rcr
negb
loopne
push
pop
imul
sub
dec
sbb
inc
mov
scas
mov
jp
or
and
xchg
fs
jnp
jmp
loope
js
stc
mov
jmp
sub
cmp
cltd
pop
sbb
dec
loopne
pop
push
popf
jnp
or
push
add
repnz
add
pusha
xlat
dec
cmpsl
leave
rorw
or
rcrb
sti
das
mov
jle
pop
adc
out
cld
lods
mov
loope
enter
push
xchg
insl
adc
lds
test
sahf
es
sub
pop
lcall
xor
mov
mov
push
mov
jbe
andl
dec
fidivs
int
mov
sub
xchg
jmp
cs
pop
push
decl
mov
int3
andb
orb
gs
lret
or
mov
add
aaa
bound
loope
hlt
cmovne
lahf
inc
push
dec
sahf
cmp
loope
enter
call
loopne
aad
jle
mov
out
jnp
jg
in
xchg
rclb
push
out
hlt
subb
ljmp
lea
test
sbb
inc
mov
mov
adc
xchg
and
imul
divl
gs
dec
aam
pop
jecxz
sub
in
pushf
in
xor
popa
push
jno
enter
add
or
ds
xchg
addr16
or
mov
ljmp
bound
sub
loop
cmovb
jl,pt
dec
inc
call
aas
mov
push
mov
mov
in
inc
cmp
jmp
mov
mov
test
push
testl
dec
xchg
lds
call
test
xor
mov
pop
jge
cmp
clc
and
rcr
push
mov
fnstsw
sbb
jle
lahf
into
xchg
adc
sbb
and
je
loop
divl
scas
cltd
sbb
push
cmovno
aas
adcb
push
xchg
daa
lahf
push
sbb
rcr
pusha
add
out
and
into
push
and
jmp
dec
lods
and
fiaddl
testb
sub
movsb
jbe
push
sub
xchg
sub
frndint
xchg
test
in
push
jg
cli
shr
mov
inc
mov
dec
enter
cmp
inc
pop
decl
push
stos
sbb
adc
dec
imul
add
fimull
cmp
popa
out
pop
sub
jae
pop
arpl
dec
call
mov
loopne
test
jmp
sbb
js
mov
and
add
ss
or
dec
dec
xchg
cld
xchg
add
adc
insb
cmp
jp
fwait
leave
ret
sti
push
popf
sub
movsl
xor
lea
mov
cli
push
pop
push
fildl
enter
push
mov
ret
outsl
push
xchg
add
sub
adc
movsl
jns
aaa
repnz
hlt
pushf
inc
inc
pop
cwtl
mov
mov
sbb
xor
movsl
push
xor
lret
mov
imul
ret
add
arpl
and
loopne
lret
insb
jmp
and
out
test
sub
sub
jle
mov
dec
add
popf
scas
push
inc
cmp
add
sub
mov
add
ds
stos
mov
pop
popa
push
ds
daa
pop
je
pop
clc
iret
jg
fidivs
fmuls
out
inc
fnstsw
dec
outsl
and
lahf
arpl
or
and
dec
jnp
pop
add
adc
aam
or
std
mov
lahf
shll
jmp
ret
push
xchg
movsb
jge
cmp
loopne
dec
inc
call
xchg
inc
fbstp
cmc
cltd
pop
leave
cmp
add
rcl
loope
std
repz
inc
mov
out
shrb
call
cmp
xchg
jno
push
adc
stos
pop
out
leave
repnz
enter
xor
and
cld
push
imul
decl
aaa
sub
and
xlat
daa
fisttpl
or
dec
dec
sub
add
push
mov
jo
mov
subb
sub
or
xlat
mul
mov
ret
inc
xchg
adc
out
cli
les
dec
fs
sar
andb
or
cmpb
sub
mov
js
jbe
test
and
out
jo
loope
pop
jmp
mov
jmp
outsl
mov
or
or
xchg
jns
ficomps
lds
sbb
out
ja
pop
xor
je
outsl
xor
pusha
jmp
loope
mov
aaa
movsl
xchg
cmp
popa
sub
adc
cmp
pushf
and
jns
jecxz
mov
push
pop
and
shlb
pop
sbb
test
daa
js
subb
sbb
aam
cld
out
js
dec
jmp
lahf
lds
sbb
iret
and
lock
jns
loope
sub
pushf
mov
jnp
pop
push
mov
pop
sbb
mov
push
test
movsl
xchg
jnp
sbb
nop
out
jb
pop
push
out
in
and
icebp
vmovq
or
lea
aad
cmp
out
sti
into
pop
sbb
push
mov
nop
sbb
daa
lock
bound
sbb
pop
or
push
lret
sti
add
jb
mov
ja
mov
sub
jle
insb
add
rep
mov
add
pop
aas
xchg
xchg
arpl
icebp
mov
jp
scas
lcall
jle
int
mov
imull
in
xor
mov
add
or
imul
add
and
mov
mov
mov
xchg
xchg
imul
xchg
and
cld
mov
es
das
ds
inc
sub
xchg
les
mov
xor
lds
xor
or
fldenv
jo
lock
daa
mov
repz
jl,pn
or
adc
lea
in
jle
mov
mov
pop
fdivrs
enter
mov
add
das
ficoms
mov
lret
outsb
pop
stc
aad
add
outsl
cld
scas
dec
lret
and
ss
sub
dec
enter
xor
push
or
xchg
adc
lds
mov
sahf
xchg
aas
or
repz
stos
in
inc
in
mov
push
sub
loop
test
pop
sub
out
cmc
adc
gs
in
adc
hlt
jbe
fbld
lahf
xchg
mov
roll
rol
or
enter
adc
mov
sbb
mov
adc
pop
jbe
cli
add
outsl
push
add
loop
cmp
pusha
aam
mov
adcl
mov
jp
dec
and
add
mov
adc
xor
mov
mov
ret
ja
std
lret
sbb
lret
and
pop
fwait
out
dec
int
lds
call
jl
push
movsl
dec
jo
jecxz
dec
movsl
fsts
mov
and
dec
xchg
mov
push
je
pop
adc
push
fadd
imul
loope
mov
adc
mov
xchg
out
shlb
jp
ds
stos
jg
sbb
and
leave
repnz
cmp
insl
dec
xorl
hlt
or
int3
or
inc
in
cmp
iret
lcall
lods
aam
cmp
hlt
out
mov
jae
and
push
dec
add
dec
cwtl
shlb
fdivrl
xor
or
mov
push
outsb
add
cmc
nop
ja
rcr
mov
ljmp
jmp
jnp
ss
je
orb
aas
lret
and
lret
out
xchg
jbe
call
imul
mov
or
push
sub
test
addl
loope
xchg
scas
cmp
das
test
cmp
pop
mov
dec
test
sub
gs
xlat
pop
int
mov
aaa
roll
insl
or
cmp
inc
mov
imul
mov
mov
lret
cmp
jg
test
jle
mov
inc
and
dec
sub
jno
adc
push
dec
mov
mov
out
call
adc
stc
push
cmp
imul
xchg
ret
adc
mov
nop
dec
out
cwtl
cltd
cmp
push
add
inc
mov
mov
rorl
or
dec
fxch
popa
jge
int3
mov
jg
fstps
sub
and
enter
div
and
imul
fidivrs
mov
inc
iret
push
push
out
dec
imul
pop
and
sbb
fsubl
fs
test
xor
lcall
mov
pop
sub
hlt
pop
pop
test
loope
add
inc
repnz
or
lods
roll
cmpsl
dec
mov
pop
movsl
test
sbb
push
scas
cmpsl
ss
push
cmp
pop
mov
xor
lea
js
pop
sbb
int
jg
jae
mov
mov
jge
push
lahf
mov
fs
xor
mov
stc
xlat
push
push
mov
cmp
inc
rcrb
sar
add
pushf
or
pop
loopne
adc
dec
xchg
cmpsb
call
lret
pop
jmp
inc
dec
lcall
inc
inc
cmpsb
mov
xchg
test
scas
sbb
jne
dec
mov
sbb
cs
cltd
mov
push
mov
jbe
bound
mov
les
inc
push
adc
mov
cmpsl
js
xchg
sbb
notl
outsb
pop
pop
xlat
mov
ja
pushf
mov
adc
addr16
jb
les
dec
mov
add
lahf
scas
jno
out
xchg
shll
jb
fisubrl
imul
dec
jmp
push
pop
mov
push
repz
notl
mov
shr
bound
out
cwtl
cmc
scas
pushf
jb
jnp
in
imul
pop
inc
inc
ds
push
mov
loope
ss
filds
cmp
orb
or
push
fnsave
out
cmpsb
fs
cld
push
dec
enter
aas
mov
aad
imul
xor
mov
push
adc
out
cwtl
push
push
inc
xchg
push
adc
lods
adc
push
cs
js
push
mov
scas
jbe
cs
mov
xchg
push
inc
or
cmpsb
add
gs
jecxz
subl
add
dec
xor
jle
mov
cmp
jle
dec
icebp
or
int3
pop
sbb
mov
shll
pop
pop
rcl
cli
mov
loop
daa
or
push
in
data16
jmp
jns
push
dec
mov
push
je
insb
in
std
dec
divb
add
pop
sub
mov
push
ljmp
jno
xor
pop
sbb
pusha
sub
and
repnz
or
adc
cmp
jecxz
xor
test
mov
sub
sbb
or
dec
inc
test
pop
mov
cmc
lea
mov
mov
in
xchg
inc
mov
dec
sub
mov
inc
add
sbb
cmp
inc
into
add
rcrl
cwtl
daa
lahf
and
push
or
in
lds
int3
mov
lock
enter
out
and
and
out
rcrb
lea
clc
out
ljmp
jno
sub
sbb
and
vlddqu
lahf
sti
insb
js
add
adc
sbb
out
inc
sub
pop
lods
add
gs
std
xchg
int
jmp
fs
daa
push
lret
inc
and
jge
out
jb
push
mov
mull
stc
pop
negb
push
test
lods
icebp
adcl
cmp
stos
mov
stos
dec
mov
insl
adc
ljmp
outsb
sbb
int3
lret
shl
cli
lock
mov
int
add
rolb
sbb
xor
sub
or
sub
lret
xor
iret
sub
outsb
mov
and
ss
fs
daa
sti
stos
adc
test
vsubsd
imul
xchg
ret
xor
not
fldenv
and
ds
jp
cltd
xchg
sub
call
sarl
or
mov
xchg
scas
daa
jno
cltd
mov
inc
jnp
pop
mov
iret
jns
mov
jo
push
jbe
add
popf
mov
adc
or
inc
push
mov
aaa
push
mov
in
adc
divb
fstpt
and
in
jge
gs
out
shll
in
xchg
mov
js
pushf
or
in
sbb
mov
fldt
xchg
push
lods
xchg
dec
adc
xor
mov
sarb
pop
sub
sbb
lret
test
jle
inc
hlt
inc
mov
inc
cmp
jo
ja
mov
fldl2e
push
mov
ret
in
subl
jg
sbb
outsb
nop
adc
mov
mov
xchg
mov
or
jmp
push
fists
jl
jmp
sbb
imul
iret
mov
or
rol
test
out
adc
jg
push
in
or
loope,pt
xchg
fbld
mov
mov
sbbb
pop
push
add
inc
push
inc
mov
jae
repnz
push
loope
mov
inc
shrb
dec
fsubl
data16
test
hlt
aad
movsl
out
movsl
sahf
mov
fidivrl
xor
mov
mov
pop
sbb
es
push
ret
jne
mov
add
jbe
mov
mov
test
fiaddl
scas
shll
xor
lods
les
mov
mov
dec
pop
mov
sbb
sub
push
jmp
leave
pop
call
jno
lds
test
es
idivl
imul
pop
dec
mov
or
hlt
testb
imul
xchg
mov
out
clc
loop
and
aas
fstpt
mov
jnp
imul
mull
rcrb
mov
out
add
jle
stc
or
loope
jo
loopne
push
xchg
adc
xchg
sbb
lods
rolb
add
movsb
mov
push
sbb
jp
fdivs
lcall
add
iret
xchg
in
nop
loop
mov
cmc
push
repz
jae
sbb
daa
jne
call
adcb
mov
xchg
jnp
xor
push
sub
je
xchg
mov
xchg
cld
add
pop
sar
fimull
test
jg
mov
adc
popf
pop
mov
add
movl
stc
push
xor
sbb
sub
push
sub
aaa
inc
pop
add
movsb
mov
inc
shrl
jbe
add
lcall
ljmp
jbe
push
imul
hlt
xor
mov
popf
inc
out
je
cwtl
les
xchg
imul
inc
adc
jge
inc
lock
jae
and
push
inc
jg
out
xchg
int3
aad
adc
daa
adc
add
and
cmpsb
jnp
sar
pushf
cmc
inc
popa
enter
adc
out
div
mov
loop
iret
dec
out
ret
jp
mov
mov
dec
scas
cwtl
xor
fiadds
test
jmp
stc
adc
stos
sub
cltd
mov
dec
adc
dec
inc
fldl
pop
fucompp
sbb
and
out
cmp
fs
pop
sbb
pop
jg
leave
push
js
pop
pop
and
fmuls
mov
mov
popf
outsl
xchg
ja
insb
repnz
xchg
cmpsb
adc
repz
insb
test
xchg
call
add
and
jns
in
and
cmp
push
dec
test
mov
cli
xchg
mov
clc
pushf
dec
dec
fcoms
int3
xchg
push
incl
popa
push
pop
in
and
sbb
pop
add
add
push
imul
adc
movsl
dec
pop
movsl
sub
std
push
iret
imul
ss
add
scas
lods
lea
lea
loope
into
out
push
or
xor
loope
sti
loopne
shrl
or
jns
pop
mov
test
push
js
adc
sbb
cli
iret
or
adc
cmpsb
sbb
jae
xchg
ja
mov
mov
lcall
ja
mov
lds
inc
xchg
add
or
dec
add
push
adcb
push
adc
mov
out
fwait
fmull
mov
xchg
aad
fwait
movsl
mov
xor
insl
movsl
sbb
jo
orl
and
push
aas
rorb
mov
mov
insb
imul
test
cmovns
das
fsubl
jo
mov
mov
mov
aas
pop
mov
in
mov
mov
call
xchg
mov
xchg
sahf
sub
push
in
fcoml
addr16
mov
scas
into
xor
movsb
or
push
push
lea
cmp
xor
xor
push
sub
data16
ret
push
and
jge
dec
in
in
sub
std
push
and
mov
call
mov
fwait
push
fisttpll
test
xor
icebp
cmp
repz
mov
iret
insl
stos
lcall
int
arpl
sbb
test
xchg
mov
jmp
pop
sub
sqrtps
add
jne
add
and
lcall
repnz
in
mov
les
shll
mov
pop
xor
shr
adcl
out
cmp
mov
pop
mov
push
mov
subb
dec
cli
xor
insl
cmpsl
mov
scas
bnd
mov
pop
inc
pop
mov
adc
pusha
int3
ds
rcr
inc
iret
inc
add
rclb
es
bound
fucomp
scas
adc
mov
dec
pop
add
sbb
fcmovne
jg
mov
pop
sbb
incb
addr16
jbe
mov
out
dec
ja
mov
cmp
jb
sbb
fwait
dec
aam
push
arpl
jmp
das
out
scas
or
insl
ljmp
cmp
sub
add
push
inc
call
cltd
popl
dec
jecxz
call
inc
rol
fs
and
popa
fsubr
mov
sbb
stc
aad
add
push
push
call
sub
out
push
mov
ret
push
pop
subl
movsb
jmp
in
cltd
push
shll
add
pop
out
adc
in
sub
js
jecxz
in
cmc
fcoml
popl
mov
fstpt
testb
jns
leave
or
lahf
sub
cmpsb
adc
push
testb
clc
lcall
push
adc
call
pop
out
fsubs
mov
sub
cmpsl
mov
xchg
aas
aad
adc
sub
test
mov
imul
mov
lret
pop
inc
mov
dec
or
add
in
sub
je
lret
test
mov
inc
adc
adc
sbb
jo
mov
test
fists
test
add
sbb
push
mov
pop
insl
je
add
or
push
or
mov
mov
cmpsb
insl
push
out
cld
repz
out
adc
in
cli
loope
cmp
lea
popl
adc
add
sbb
in
gs
pop
inc
or
int
jno
jne
xchg
sbb
and
jmp
ljmp
sub
jno
xor
jb
xor
iret
jecxz
cwtl
call
or
push
aam
adc
sbb
sarb
or
hlt
sahf
into
or
mov
dec
mov
push
insb
jmp
in
adc
push
push
dec
add
ss
enter
sbbb
sub
jg
mov
repnz
cmp
sti
dec
insb
iret
movsl
sub
or
and
xor
xor
sbb
rcll
push
mov
push
pop
pushf
idivl
mov
repnz
loop
pop
filds
xchg
and
cmp
add
jae
mov
ds
stos
neg
sbb
push
xor
sbb
ljmp
loope
sbb
loop
dec
cmpb
adc
out
add
xor
jle
sbb
jle
ret
leave
mov
ljmp
or
push
sbb
ficompl
dec
adc
clc
aam
pop
or
rcl
arpl
mov
adc
imul
js
ss
cmp
cmpsb
push
fstl
push
repnz
sbb
aas
outsl
aas
cmp
andb
scas
mov
mov
cmp
loop
sahf
or
fsts
js
pop
push
cs
roll
call
lock
and
xor
adc
jbe
inc
xchg
inc
daa
xor
pop
sub
and
icebp
sbb
jae
fistpll
push
or
rorb
jmp
xor
inc
popa
loopne
push
lcall
mov
cmp
popa
xchg
or
nop
mov
cmp
imul
and
das
cltd
pushl
cmpb
scas
jns
push
out
pushf
pop
cmp
cmp
movsb
pop
outsl
jnp
pop
stos
cwtl
cli
inc
test
jl
aam
cmp
pop
das
ret
std
and
ljmp
loope
ljmp
out
xor
pop
repnz
pusha
cli
push
mov
inc
xor
add
lods
sarl
add
fs
xor
repz
sti
add
pop
fdivr
xor
add
ljmp
push
outsb
jne
pop
lods
push
loop
sbb
add
jb
sbbl
push
xor
adc
or
push
dec
mov
push
inc
outsb
xchg
mov
cmp
adc
mov
in
in
push
xor
inc
sub
jmp
inc
adc
mov
jmp
pop
mov
es
jp
mulb
push
pop
das
aam
pop
bound
pop
sub
and
mov
lods
mov
pop
and
test
add
test
in
sarl
and
daa
mov
cmp
or
xor
insl
sub
mov
and
movsb
ret
out
push
shll
jmp
shr
fs
gs
out
pop
sbb
mov
pop
add
jg
adc
jmp
dec
daa
mov
lret
aam
and
fstl
mov
pop
mov
arpl
and
outsb
add
mov
adc
mov
or
stos
cmp
or
rcll
fwait
pop
imul
ret
or
push
cwtl
clc
sub
shll
inc
fcmovb
sbb
xor
adc
lods
xor
xor
pusha
popa
insl
arpl
addr16
cmp
dec
and
cmp
or
or
and
jb
lcall
lea
inc
xorl
repnz
pop
cltd
aam
shl
adc
shrb
push
xchg
nop
mov
popf
js
sbb
movsb
sub
fsts
jmp
xlat
sbb
repnz
adc
cmp
jne
sbb
insb
test
aas
pop
clc
out
xor
push
in
or
pop
lret
inc
push
sub
cltd
jns
mov
dec
mov
in
in
leave
xor
or
push
gs
mov
es
sbb
out
dec
loopne
fstpt
fsub
aas
inc
xchg
cmp
or
push
fcom
sbb
sub
gs
int
lock
push
imulb
sbb
ret
decl
cld
arpl
and
inc
rcll
lret
insb
pop
sbb
mov
shrl
pushf
inc
lods
jl
sarb
sub
dec
leave
mov
movsb
test
xor
add
adc
pop
aas
xchg
rcll
lcall
in
pusha
ret
push
pop
push
bound
xorl
pop
xchg
push
int3
jg
mov
jmp
add
arpl
add
call
ss
orl
add
es
pop
enter
icebp
mov
movsb
sub
xor
fcmovne
mulb
push
or
lds
cld
push
enter
fucomi
jnp
rep
mov
out
jae
loope
rorb
adc
mov
inc
ljmp
inc
adc
ljmp
mov
jle
dec
andl
dec
sahf
adc
cmp
dec
mov
in
adc
inc
cmp
mov
outsb
inc
pop
cmc
or
mov
in
jns
gs
push
ret
roll
out
xchg
out
sysret
scas
pop
sub
push
and
pop
loope
mov
adc
dec
les
add
dec
xor
les
out
outsb
das
andl
mov
or
outsb
mov
lret
mov
sub
nop
into
push
push
lods
jp
test
leave
jbe
cmpsl
negb
jo
loope
cmpl
cld
mov
adc
enter
sub
cmpsb
xor
pop
pop
jg
stc
mov
push
mov
lret
sbbl
bound
jmp
out
repnz
pusha
ret
sbb
fistpll
fdivrl
outsl
pushf
pop
pushl
mov
fsubs
jle
sub
in
stos
fstps
jb
enter
or
or
nop
dec
in
das
call
add
stos
ret
jno
inc
lcall
push
gs
mov
fsubl
pop
xchg
xor
stc
jns
xor
pop
mov
and
xchg
sbb
xchg
les
int3
jmp
dec
ss
mov
adc
call
mov
inc
shlb
dec
pop
cmp
fisubl
sbb
xchg
fbld
pushf
sarb
pop
or
jb
add
shl
shrb
scas
je
pop
dec
insl
sbb
out
xchg
push
jmp
addr16
xchg
bound
insl
xchg
inc
sbb
push
sub
scas
mov
xchg
cwtl
in
movsb
das
outsb
js
insl
popf
pop
or
cld
push
cmp
filds
test
aaa
negb
imul
sbb
faddp
stc
shll
aad
jecxz
jbe
inc
mov
out
test
out
inc
cli
rorb
mov
divb
popf
inc
or
xchg
jle
mov
imul
sbb
xor
sub
add
stos
das
cmp
adc
aam
jae
das
scas
gs
mov
rcrl
pop
loop
add
inc
or
mov
mov
and
add
jmp
jb
cmpsl
cwtl
jne
stos
in
mov
adcb
add
add
or
rorb
subb
push
in
push
adc
popf
imul
dec
pusha
xorl
pop
push
or
mov
push
test
rorl
std
clc
addr16
xor
cmpsl
aad
js
mov
jl
stc
out
push
sub
xlat
sbb
js
mov
fstpt
push
das
sub
jne
dec
negl
push
or
xchg
push
and
in
sbbl
pop
mov
mov
iret
cwtl
enter
sub
and
sub
xchg
out
mov
push
pop
jno
int3
pop
jle
iret
imul
jns
gs
jmp
imul
push
mov
out
inc
dec
lock
xor
push
mov
mov
push
mov
xor
push
rcrb
jg
stos
nop
bound
jns
xchg
out
lea
push
les
movsb
bound
loope
lds
pop
cs
mov
dec
xchg
xchg
xchg
mov
and
imul
add
add
lds
push
lods
mov
add
aaa
sbb
xor
xchg
dec
sbb
cli
sbb
push
mov
pop
aam
pusha
inc
mov
inc
sbb
jp
cli
jae
sub
icebp
loopne
mov
enter
mov
or
lcall
or
pop
aad
es
cwtl
les
adc
int3
pop
popa
xchg
out
xchg
call
imul
mov
popa
adc
cwtl
push
aam
jmp
mov
clc
fnstsw
xchg
les
dec
adc
adc
mov
mov
dec
ljmp
dec
jnp
or
cmp
jmp
sbb
push
sub
lds
push
sbb
das
jnp
push
ud1
jae
jnp
lret
cmp
in
cld
jnp
mov
jb
pop
xchg
xor
fmuls
shl
push
mov
mov
add
stos
inc
or
mov
stos
fs
icebp
or
xor
aaa
insb
and
xchg
flds
cmp
jecxz
jmp
pop
icebp
jns
inc
mov
mov
cmp
ret
adc
inc
fucomi
popf
fs
subl
mov
shl
xchg
inc
rcrl
in
mov
jg
les
dec
insb
adc
and
jb
jnp
xchg
je
test
mov
mov
mov
inc
stc
jge
aam
mov
divb
aad
xor
mov
iret
sar
pop
orb
cmp
mov
js
adc
lret
sti
ret
fnstsw
insb
fcoms
add
rclb
and
jbe
dec
shrb
stos
dec
push
xor
inc
jp
or
mov
fisubs
and
lcall
adc
jbe
out
ja
dec
push
scas
movsl
rcrb
dec
push
jo
lods
icebp
sbb
lcall
adc
mull
add
cld
js
cmpsb
jg
mov
mov
push
pop
in
jg
jp
push
pop
xor
dec
mov
pop
rep
sub
test
push
es
mov
sbb
pushf
xchg
inc
xchg
lret
insl
adc
pop
ss
jecxz
and
hlt
hlt
sbb
inc
mov
mov
mov
mov
inc
jle
push
push
adc
add
aam
cmp
mov
mov
cmc
loope
adc
outsl
in
movsb
push
icebp
dec
inc
sti
inc
mov
cmp
inc
and
sbb
movsb
jecxz
lea
test
mov
and
pop
imul
in
adc
insl
push
stos
cmp
movsl
cwtl
mov
push
mov
aam
push
stc
add
jge
shrl
in
cmpsb
xchg
xor
cld
xor
jg
sbb
roll
outsl
xor
cmp
pop
dec
add
repz
ljmp
idivb
mov
mov
orl
xchg
icebp
popa
ljmp
and
inc
sbb
adc
inc
inc
mov
icebp
dec
adc
leave
insl
cli
or
insl
sbb
jle
or
or
andb
iret
add
testl
jnp
out
dec
jmp
fwait
dec
scas
xchg
adc
loopne
lcall
arpl
je
je
dec
divl
add
push
mov
les
les
push
stos
mov
dec
lret
insl
or
sub
mov
lahf
mov
ljmp
stos
scas
inc
out
pop
jns
xchg
pop
cmp
and
inc
inc
and
in
stc
jo
or
or
xchg
fwait
mov
fisttpll
mov
or
add
sti
sub
mov
dec
je
add
mov
jg
xor
icebp
stos
cmp
and
or
data16
icebp
jl
push
ja
ss
aam
jmp
repz
loop
mov
pop
xor
imul
pop
add
push
hlt
cmp
fst
mov
imul
imull
mov
mov
inc
in
and
sarl
inc
jecxz,pt
xchg
jo
mov
rcrl
mov
mov
xchg
enter
push
sub
mov
add
adc
pop
pop
nop
cs
hlt
dec
push
add
adc
mov
xor
rolb
roll
rorl
inc
cmp
test
mov
ret
xchg
subl
fucom
lock
rcl
add
mov
jmp
mov
out
xlat
inc
pop
add
leave
out
inc
scas
push
orl
mov
push
dec
pop
test
loope
xor
xor
cli
mov
addr16
jnp
mov
push
and
call
repnz
ljmp
pop
outsb
shll
lods
gs
lock
sbbb
adc
xchg
push
insl
and
icebp
dec
sbb
insb
mov
mov
aas
iret
aad
mov
add
lock
call
add
mov
jl
or
les
fstp
dec
emms
and
adc
push
cmp
subb
mov
jns
dec
in
push
pop
pushf
or
testb
and
ss
scas
cmpb
mov
jbe
mov
xchg
leavew
pop
std
mov
insb
inc
xlat
inc
mov
add
sahf
adc
fwait
push
shlb
adc
add
or
pop
repz
adc
mov
fcoml
xchg
ror
or
lahf
filds
test
addr16
ret
mov
jno
add
push
rorb
add
and
out
or
mov
push
inc
ds
stos
dec
daa
and
loope
das
pusha
cmpsb
mov
scas
aad
call
sub
cmc
leave
dec
test
fwait
sbb
sub
mov
or
les
xchg
ficoml
sub
dec
jno
insb
lods
repnz
mov
pop
cmp
std
sub
mov
test
jb
sbb
pop
cwtl
es
es
cmp
ret
mov
cli
push
out
test
jmp
int
pushf
cmpsl
rol
es
movsl
test
sbb
jb
frstor
test
js
gs
daa
ja
fists
pop
mull
fsts
sub
or
aas
ret
mov
ss
or
and
fsub
rorb
frstor
adc
sub
push
popa
fxch
enter
xchg
bound
dec
inc
add
mov
mov
call
addr16
mov
and
rcrb
push
xchg
testl
rol
jl
sub
xchg
sub
fs
mov
mov
add
push
xor
and
fcomps
inc
mov
imul
fcom
sti
fdivl
shl
inc
cmp
movsl
push
jnp
pop
push
in
add
jle
or
mov
subb
fwait
imul
fists
cld
push
mov
add
pop
lds
add
enter
les
cmp
xchg
cltd
mov
xchg
xchg
daa
ljmp
das
inc
and
sbb
push
mov
cltd
cmp
cmpsb
movsl
dec
lea
out
push
movl
aas
jl
sub
and
mov
push
iret
clc
std
lahf
mov
push
jbe
mov
and
pushf
lcall
pop
aam
push
inc
add
jnp
orb
adc
sahf
lcall
lds
jge
jecxz
cmpsl
fistl
mov
gs
lock
popa
xor
xchg
test
lock
aaa
shlb
add
cmp
imul
push
loope
imul
adc
les
leave
outsb
lcall
out
xchg
push
sti
add
xchg
addr16
test
pop
sbb
stos
inc
lret
leave
pop
inc
imul
add
ja
pop
jne
idiv
iret
mov
xchg
jge
jl
jle
push
push
xor
movsl
xor
sub
add
insl
call
xchg
xchg
sub
notl
mov
inc
adc
xchg
addl
pop
sbb
cmc
in
mov
mov
test
call
push
ja
sub
nop
iret
dec
shll
mov
lahf
mov
lret
push
push
ljmp
adc
dec
push
pop
inc
addr16
daa
mov
inc
shr
in
xor
lods
pop
into
sbb
fdivrl
mov
mov
inc
mov
faddl
ret
sub
mov
cmp
shrl
pop
repnz
js
scas
mov
mov
cmp
mov
int3
dec
std
enter
stc
mov
jne
pop
lcall
in
pop
sbb
imul
xchg
add
cmp
xor
imul
and
mov
sub
push
pop
mov
shlb
push
xor
jg
scas
ficoms
add
loope
xor
scas
aas
jecxz
mov
test
jmp
out
fs
iret
lret
xchg
setae
mov
aaa
jnp
iret
pusha
mov
and
mov
repnz
and
outsb
add
jmp
imul
imul
leave
cmp
adc
ret
iret
push
dec
mov
rcll
cmp
inc
and
xchg
jb
aas
and
sbb
adc
sahf
cmpsl
xchg
or
hlt
sub
sub
add
or
fistpll
xlat
lods
pop
cmp
repz
mov
in
les
sub
inc
inc
jns
fdivrl
mov
adc
mov
adc
adc
cmp
inc
divb
in
xchg
test
fidivl
mov
dec
in
sub
mov
cld
in
leave
add
push
mov
mov
fwait
sub
clc
mov
lea
jmp
and
cmpsb
enter
pop
leave
cmp
adc
js
mov
fsts
stos
in
sbb
cmpsb
popa
nop
or
and
ljmp
cmpsb
dec
lahf
test
jle
outsb
add
iret
repnz
gs
fs
pop
inc
cmp
std
outsb
pop
loopne
ds
adc
shl
pop
sbb
dec
add
nop
mov
cwtl
mov
push
pushf
push
ffree
inc
mov
xchg
dec
xchg
mov
inc
in
lods
xor
es
sbb
rcll
and
mov
cmp
sub
push
sbb
frstpm(287
cmc
xor
cmp
sbb
fdivl
dec
cmp
push
mov
xlat
add
xchg
cmp
add
js
pop
ds
xchg
mov
mov
push
inc
inc
jmp
stc
pushf
push
pop
push
call
pop
or
push
sarb
sti
xchg
mov
and
cld
push
cltd
mov
aaa
pop
adc
imulb
js
fildl
rcrl
xchg
out
pop
ljmp
or
sbb
pop
push
push
insb
sub
jge
jne
add
mov
in
push
hlt
cmp
outsb
xor
cli
lahf
shlb
xlat
out
xor
dec
dec
addl
inc
add
xchg
mov
mov
movsb
jnp
ret
and
cmp
dec
aaa
cmpsb
push
adc
les
add
adc
jno
popf
add
pop
adc
sbb
or
bt
mov
adc
and
jle
push
out
cmp
xchg
loopne
clc
mov
xor
rsm
in
jecxz
fldl
xor
jbe
or
out
push
les
adc
clc
jb
in
ja
movsl
call
aaa
mov
push
sbb
nop
or
or
cmp
bound
mov
sbb
int
mov
repz
dec
fcomps
fildl
inc
scas
sbb
clc
clc
dec
test
cmp
pop
out
daa
or
fucompp
popf
out
push
out
je
fmuls
ficoml
inc
inc
jbe
sar
js
cwtl
cmovg
push
andl
cmp
aad
xchg
bound
sbb
mov
mov
test
sbb
add
out
or
mov
mov
orl
inc
mov
das
mov
xor
mov
imul
into
jns
jns
push
mov
inc
or
daa
popf
test
inc
dec
aam
push
and
mov
shrl
pop
cmpsl
mov
fsubr
dec
cmp
pop
stos
xor
mov
xchg
imul
incl
jno
jecxz
push
adc
aam
jge
repz
je
jg
repnz
lods
mov
mov
mov
mov
jecxz
test
xchg
mov
push
repnz
sbb
sub
pop
mov
add
iret
gs
fcomps
or
mov
jbe
lcall
sti
les
das
xchg
test
or
jp
mov
mov
or
in
inc
pop
mov
fsubl
push
ss
repz
inc
mov
jo
mov
pop
rorl
sub
jae
jns
xchg
add
push
add
xchg
cmpsl
outsl
xor
imul
jg
adc
or
xchg
xor
inc
test
faddl
cld
xchg
pop
insl
xchg
push
mov
mov
jb
push
lcall
scas
cltd
mov
xor
adc
jmp
xchg
or
push
cmp
mov
dec
stos
cmp
fwait
push
aas
sbb
icebp
inc
mov
in
push
pop
xchg
loop
fisubl
in
addb
add
jbe
sub
jne
add
loope
sub
dec
sub
sbb
pop
or
out
push
jb
bound
inc
pop
jmp
mov
and
outsb
outsb
mov
mov
in
cli
jp
pop
push
cmc
fnclex
add
cmc
cs
push
jno
pop
popf
stc
mov
lods
lds
cmp
or
aam
outsb
mov
and
or
push
outsl
pop
jnp
pop
testl
inc
dec
enter
inc
xchg
cmc
notb
mov
cmp
mov
inc
mov
or
cmpsb
icebp
jp
fcoml
inc
ret
lret
or
xor
fisttpl
cli
fnstsw
fidivrs
mov
mov
jb
mov
fisttpl
stos
xor
jge
mov
jp
andl
fdivrl
nop
shrb
inc
popf
cmp
aaa
jns
rclb
inc
jmp
xchg
enter
lods
sub
imul
ret
cmp
xchg
jp
xor
sbb
mov
push
out
cmp
mov
aad
sbb
mov
sti
jle
data16
and
outsl
mov
iret
add
sbbb
pop
xor
ret
jecxz
or
sbb
lcall
and
mov
je
inc
rolb
push
xchg
mov
sbb
cli
mov
test
xchg
popf
push
stc
mov
aad
out
out
enter
in
push
jbe
push
je
jecxz
mov
sbb
or
push
add
and
test
lea
ror
sti
in
loop
in
out
mov
addl
in
repnz
jno
mov
ljmp
add
jmp
xlat
bnd
scas
mov
imul
or
or
cmp
inc
pop
pop
jne
xchg
icebp
sbb
adc
aas
xchg
xadd
ljmp
rcr
dec
cmpsl
mov
ds
or
xchg
pop
ds
je
scas
push
cmpsb
jo
mov
pop
mov
cmp
dec
sub
loop
jmp
insl
pop
mov
nop
pop
xchg
cmp
adc
add
adc
pop
mov
shlb
aad
cmp
js
hlt
mov
add
das
sbb
fisubrl
shlb
jl
mov
sbb
jae
inc
lea
lret
lods
pushf
lea
mov
push
add
and
mov
fildl
lcall
adc
jle
xchg
jg
faddl
lahf
outsb
imul
popa
or
insl
imul
cmc
sub
mov
fdivs
ljmp
mov
out
push
inc
cmpsl
fdivrl
cwtl
dec
inc
dec
mov
movsl
lods
test
fsubs
cmpsb
shrl
lcall
fisubl
sti
fiaddl
fsubs
das
lods
dec
leave
clc
fdivl
cmpsl
jl
js
frstor
mov
mov
dec
cmpsb
out
iret
mov
fsubrl
and
xchg
sbb
xchg
jmp
xor
lods
and
movsb
ret
push
lock
loope
mov
aad
pop
cmpsl
cltd
int
dec
test
mov
test
pop
shll
cwtl
and
pop
popf
jmp
add
xchg
enter
sarl
lods
js
out
xchg
loop
movsl
repz
rclb
arpl
cli
mov
sub
popa
mov
xor
dec
imul
and
xchg
cld
hlt
fdivrs
or
cmpsb
inc
mov
sahf
adc
mov
std
lret
sbb
jae
lahf
push
popa
and
test
sbb
dec
fidivs
hlt
jns
jp
adc
rcl
jle
mul
cmc
sub
enter
xlat
mov
push
out
jne
mov
inc
and
mov
scas
xchg
fiadds
call
push
sbb
push
vmovhpd
mov
in
sub
cmp
jge
test
pop
mov
dec
mov
inc
mov
push
sub
jg
pop
xlat
lret
xchg
push
daa
jmp
sbb
pop
push
std
lcall
mov
jmp
fisubrs
and
fs
push
movsl
test
and
in
loop
popf
fidivl
push
inc
add
aaa
cwtl
add
leave
ret
sub
ss
ret
sub
cli
test
xadd
je
sub
in
mov
add
adc
fidivrl
lds
les
pop
pushf
mov
das
cmp
mov
xorb
gs
mov
xchg
sub
xchg
or
sbb
pop
int3
loope
ror
ss
or
in
popa
mov
jno
enter
push
repnz
add
enter
mov
xchg
or
iret
inc
sbb
hlt
xchg
mov
mov
testl
push
and
xchg
sbb
pop
sub
pop
cmp
jl
jg
out
ds
pop
daa
pop
and
dec
push
or
inc
or
std
ret
aad
shr
adc
dec
loope
lods
xchg
insl
rclb
xchg
mov
stos
sub
shll
xchg
fs
fidivs
addb
push
fdivr
int3
xchg
ja
or
add
movsl
call
mov
loopne
test
test
nop
je
add
add
sarb
imul
addr16
pop
jge
pop
and
add
scas
idivl
add
ss
mov
xchg
add
mov
dec
push
xchg
mov
aas
push
cmp
jl
rorb
jns
lods
loop
nop
out
sbb
mov
adc
dec
xchg
mov
fldenv
sbb
jb
loope
cmp
dec
mov
push
enter
sbb
iret
sbb
ds
push
icebp
xor
mov
aam
or
jecxz
cs
inc
std
mov
xchg
loope
xchg
lods
push
add
jg
add
cmpsb
jne
mov
sbb
adc
lods
cmpsl
fimull
add
fidivrs
punpckhwd
push
ljmp
and
add
scas
jo
mov
pop
adc
aad
cmpsl
adc
mov
lret
lret
iret
mov
aam
xchg
jno
mov
cmp
in
imul
notb
mov
jno
inc
xor
pop
sub
cmc
test
out
adc
xchg
jp
push
fstpt
mov
lret
dec
imul
mov
dec
test
pop
pop
mov
and
lock
jle
mov
movsl
add
push
ret
addr16
pop
push
loopne
cbtw
cmp
dec
icebp
insb
loop
imul
fldl
adc
fimuls
les
int
test
in
fdivs
stos
roll
mov
leave
mov
xor
fcmovnbe
int
pop
xchg
iret
xchg
call
cld
fs
jmp
fs
and
int
sub
ljmp
lds
mov
xor
jecxz
inc
pop
fwait
imul
das
dec
mov
push
iret
sub
mov
int3
call
ret
adc
cmpsb
mov
xchg
push
add
dec
jle
ds
inc
add
jae
arpl
jecxz
fsts
pop
inc
sbb
out
loope
outsl
repz
mov
test
test
nop
lahf
mov
mov
repz
inc
rcrb
cmp
fcoms
dec
in
and
fidivs
mov
lea
inc
mov
rep
or
fwait
push
and
xchg
movsl
dec
adc
mov
adc
fdivp
das
or
and
or
bound
adc
push
out
fistpll
xchg
cmp
xchg
cmp
and
fistpll
ficompl
push
push
cmp
or
idiv
lcall
and
xor
jle
xlat
shrl
jo
scas
je
out
push
lea
mov
xlat
ss
mov
repz
test
mov
push
ja
fucomip
adc
pop
imulb
mov
loope
push
dec
and
rcrl
arpl
adc
cmp
add
xlat
repnz
add
in
mov
and
sbb
icebp
loope
cmpb
rcll
mov
adc
jge
or
mov
ja
pop
iret
cmpsb
and
and
test
pushf
xchg
mov
jo
hlt
movsb
push
divl
rol
cmp
into
in
push
movsb
or
ja
inc
int3
das
cmc
push
mov
arpl
nop
mov
inc
inc
shlb
into
jp
adc
dec
mov
jge
push
inc
mov
cmp
adc
scas
push
xchg
or
cmp
lods
insl
dec
loopne
nop
dec
filds
jl
add
dec
fmul
push
sub
and
mov
ds
icebp
insl
xchg
fcoml
in
pop
es
fsubrs
xchg
lahf
pop
imul
ficoml
or
and
push
imul
in
jecxz
sahf
popa
fwait
dec
adc
in
sbb
mov
mov
sub
lods
pusha
mov
jg
sub
ja
cmpsb
lahf
mov
iret
sub
dec
lock
cmp
bound
adc
imulb
les
xor
fucomip
popa
popf
insb
push
inc
jbe
rcll
push
add
icebp
mov
or
sbb
mov
stc
mov
outsb
cmc
out
mov
and
xchg
ljmp
das
insl
test
dec
or
xor
push
lret
shlb
and
cmp
test
push
cmp
popf
int
mov
dec
clc
adc
inc
dec
hlt
gs
push
mov
fadds
test
imul
mov
dec
mov
pop
popf
pushf
scas
adcb
add
pop
pop
add
outsl
outsb
rcll
ljmp
and
inc
mov
xlat
mov
cmp
push
sbb
popa
xchg
adc
jno
add
lcall
push
lods
mov
pop
imul
mov
cmp
push
dec
adcl
xchg
fmuls
loope
fs
stc
mov
mov
sahf
and
lods
std
sar
jle
xor
mov
cmp
xchg
jns
mov
push
pop
mov
push
sub
mov
xchg
mov
fnstcw
xor
hlt
mov
rolb
mov
scas
mov
push
add
push
sub
jns
icebp
jnp
addr16
add
jmp
lds
repnz
xchg
or
sti
mov
fwait
imul
mov
jns
sbb
lret
mov
lods
fs
lret
push
lret
rclb
or
mov
lahf
lods
mov
repnz
ljmp
mov
jno
sbbb
movsb
add
lret
cmp
cmp
xchg
ficompl
sub
adc
fs
cmp
pop
sar
adc
push
imul
or
and
int3
rolb
sbb
dec
fbld
clc
mov
inc
jecxz
or
test
in
out
mov
shll
mov
das
jp
lret
scas
stc
aad
stos
add
inc
mov
popa
push
ja
add
mov
or
hlt
inc
sbb
xchg
xor
iret
and
je
sub
lods
jecxz
sbb
ret
xor
addb
or
mov
pop
insb
test
cmpsl
lock
or
movsb
not
and
repnz
sub
jp
jbe
sbb
mov
mov
mov
or
rcrl
adc
mov
mov
out
mov
push
outsl
xchg
push
jl
pop
js
pop
push
call
lods
es
pop
dec
fmull
push
mov
mov
cli
pusha
out
push
push
sub
mov
and
jecxz
dec
xchg
jb
fwait
gs
mov
cmp
xor
sub
mov
cmp
mov
lock
jmp
lret
adc
aam
push
xchg
sqrtps
mov
or
fistps
adc
adc
xor
loopne
push
shll
loopne
stc
mov
stos
fsubrl
clc
or
adc
xchg
adc
xchg
inc
inc
es
repz
lahf
test
aam
test
andb
inc
pop
mov
xchg
sub
movsb
push
mov
lret
outsl
gs
aam
cmp
jmp
js
flds
mov
rcr
call
mov
mov
cmp
movl
fmulp
dec
jge
cmpsb
mov
pop
xchg
push
mov
cmp
xorb
cmp
xlat
sub
adc
rolb
out
int
rclb
sbb
movsl
out
mov
mov
cld
je
mov
mov
cmp
lcall
cmp
xchg
pop
ret
lds
inc
and
push
xchg
fsubl
bnd
add
shrl
lret
push
add
mov
shlb
in
shr
pop
and
xchg
push
adc
nop
pop
xor
popa
mov
xchg
mov
stos
idivl
add
fs
or
pusha
inc
and
xor
andb
cmc
popf
into
pop
lea
and
pop
aam
xchg
pushf
repz
cli
push
lahf
das
push
add
cs
mov
add
addr16
test
in
push
test
jle
xor
out
dec
lds
andl
dec
fisubs
adc
cld
and
loope
xor
inc
mov
inc
xor
sti
xchg
mov
pop
inc
xchg
dec
mov
sbbl
xor
sub
pop
jo
add
mov
xor
sbb
je
pop
lahf
fisttps
or
sbb
xor
mov
inc
mov
loope
orl
push
lods
push
adc
xchg
mov
out
sub
push
add
xchg
push
jl
std
int
push
hlt
sbb
xchg
stos
jecxz
mov
daa
lahf
imul
loope
repz
jo
adc
mov
aad
sbb
dec
jb
ljmp
mov
sbb
sub
push
xchg
add
inc
pushw
mov
xchg
in
mov
es
push
jp
test
aam
and
xchg
shll
or
jp
shrl
sub
push
xor
jmp
xchg
jo
gs
decb
out
pop
jge
or
pop
negl
cmp
or
xchg
and
adc
roll
sbbb
push
stos
xlat
mov
mov
or
std
inc
and
xchg
sub
xchg
push
fisubrs
inc
xchg
mov
jno
mov
cli
movsl
inc
mov
imul
pop
pop
ret
dec
mov
shlb
add
arpl
rcr
jmp
adc
mov
sbb
inc
or
pop
jno
mov
adc
mov
mov
and
in
add
dec
dec
shl
stos
xchg
cmp
in
cmp
repz
aad
ror
cld
dec
sub
mov
xor
jp
jmp
sub
jns
sub
inc
jle
in
mov
sub
rclb
mov
movsl
jno
sahf
pop
and
or
jle
lea
loope
xor
cs
loop
out
jg
jecxz
inc
movsl
and
out
inc
cli
fstpl
lahf
mov
gs
jne
push
cmp
cmpsb
loope
outsb
xor
sbb
pop
dec
or
cmp
jno
aaa
lock
scas
mov
je
or
cmpsb
ja
aas
xorl
aad
inc
mov
cli
and
pop
pop
or
push
add
sar
jg
pop
imul
push
sub
push
lcall
data16
lods
xchg
aaa
mov
mov
stos
or
xchg
pop
xchg
mov
and
and
popf
jle
add
idivb
faddl
sub
mov
push
fisubrs
ret
jnp
cmpsl
movsb
sub
test
std
hlt
imul
fsubs
and
nop
mov
notb
arpl
lea
inc
xor
jecxz
aaa
mov
mov
call
popa
mov
xlat
test
fwait
xchg
stos
xor
and
movsl
jle
hlt
fwait
push
std
pop
dec
inc
pop
xor
push
xor
sarb
sub
mov
and
pusha
cmpsb
arpl
fs
or
xor
lods
and
lret
sub
xchg
sbb
cmp
loopne
add
sub
arpl
inc
pop
sub
ljmp
into
sbb
jae
mov
inc
loop
mov
and
mov
mov
mov
repnz
mulb
call
dec
sbb
cmp
xor
into
fmull
push
mov
lock
sti
push
mov
jb
or
xor
sbb
xchg
xchg
mov
mov
loope
jmp
mov
fs
rclb
sub
pop
or
sub
push
cwtl
bnd
movsl
cmp
aam
mov
jl
or
jge
cmp
pop
mov
and
sub
aad
xchg
imul
cli
sbb
sarb
test
int
mov
fcoml
or
mov
imul
lret
xor
iret
cmp
lods
cmp
test
xchg
add
and
xchg
mov
xlat
aam
in
adc
pop
pop
or
sub
lods
pop
jo
xor
insb
and
jle
stos
les
fimuls
mov
cmp
jbe
ficoml
clc
cmp
pushf
or
lods
lret
mov
xor
or
das
pop
hlt
inc
mov
repnz
pop
dec
pop
js
add
xchg
cmpsl
popf
fisubrl
cmp
lods
ja
lods
hlt
dec
lcall
lods
sti
mov
dec
gs
int3
adc
sbb
sti
sub
ret
cmp
pusha
les
push
cmpsl
push
add
out
xorb
push
repz
popa
sahf
cltd
loop
add
jbe
mov
adc
test
xchg
sub
adc
xchg
imul
inc
mov
adc
jle
mov
test
das
jno
mov
inc
inc
mov
js
mov
mov
add
cmc
pop
jne
jne
es
icebp
hlt
and
iret
xor
js
rcrb
sbb
inc
pushf
jns
sarb
lret
test
adcl
mov
ret
mov
clc
js
xchg
add
dec
cmp
mov
xor
and
fcoms
xor
jp
mov
js
aad
cld
movsb
jg
ror
scas
xchg
and
mov
sub
bound
pop
fists
stos
movsb
vmovhps
inc
cli
mov
or
sub
leave
int
adc
fs
mov
xor
test
aam
iret
mov
dec
addl
dec
mov
bound
and
inc
rcll
ret
and
out
in
repnz
imul
pop
push
enter
cld
inc
pop
pop
in
pop
inc
movsl
jns
test
and
imul
pop
les
insl
jb
in
dec
push
arpl
cs
sti
pop
lcall
lods
sbb
outsb
cmp
cwtl
jb
fs
xor
pop
sub
lret
sub
xor
mov
cmpsb
mov
mov
mov
jno
mov
test
mov
das
pop
pop
sbb
adc
out
xor
dec
into
inc
lahf
pop
mov
inc
inc
mov
jbe
inc
inc
or
outsb
mov
sbb
inc
fisubl
notb
xchg
idivl
shrb
ficoml
mov
mov
sahf
rorb
data16
mov
inc
popf
shrl
push
inc
adcl
cld
imul
mov
push
scas
pop
pop
add
out
loope
inc
idiv
pop
dec
fisubrs
sub
repnz
insl
or
jle
stos
das
dec
or
pushf
sahf
cmp
pop
push
mov
enter
not
cmp
fsubrl
inc
int
adc
lock
sub
ret
pop
ret
add
divb
popf
rorl
adc
jl
mov
cmp
lahf
out
cmp
jo
mov
adc
cwtl
icebp
jecxz
bndldx
or
cmp
sbb
cmp
cli
inc
adc
scas
inc
and
std
shlb
in
cmp
pusha
out
mov
cmp
sahf
outsl
rcrl
mov
lcall
xor
dec
pop
loope
mov
push
aam
call
mov
mov
xor
mov
orb
push
pop
cmp
adc
sub
push
mov
daa
rolb
shl
fldenv
or
jge
cmc
adc
outsb
xchg
andl
movsb
stos
insb
fwait
xor
cs
and
cli
cwtl
loopne
in
add
bound
dec
and
sub
fistps
push
pop
inc
clc
out
jo
mov
outsl
aaa
and
fsubr
xchg
xchg
push
mov
incb
int3
fildll
daa
fstps
les
inc
jo
pop
inc
lea
std
xchg
sbb
sbb
or
dec
pop
mov
mov
adc
push
repnz
jecxz
inc
xchg
fistps
add
inc
nop
and
adc
push
dec
xchg
dec
cmp
lret
add
fsts
cmp
jl
cs
stos
sbb
and
pop
into
jl
xor
lods
xchg
out
clc
icebp
js
jl
mov
mov
fidivrl
jecxz
iret
gs
loope
lret
sgdtl
push
popf
outsb
adc
fsubr
movsl
fdivrs
push
push
scas
jno
in
or
pusha
inc
add
cmpsl
xor
sub
sbb
mov
and
pop
test
inc
pop
inc
les
cs
sub
cvtpi2ps
iret
cmc
stc
add
repnz
mov
enter
cmp
sbbb
xchg
fstps
ljmp
adc
mov
mov
mov
inc
xchg
bnd
lahf
jbe
jb
out
inc
jns
xor
push
ds
ret
mov
mov
mov
or
cmovb
add
das
add
flds
aaa
scas
inc
xor
inc
mov
int3
push
in
pop
or
cmp
sub
in
fbstp
dec
insb
or
add
xchg
jecxz
hlt
and
mov
arpl
and
push
cs
pop
addr16
push
mull
cld
std
in
std
pop
rol
push
adc
outsl
cmpsl
add
mov
in
and
mov
inc
jmp
cwtl
mov
out
dec
lods
rcll
add
xor
iret
push
dec
add
dec
mov
fstl
jne
cltd
rcll
mov
in
lds
jg
pop
imul
pop
sti
add
push
adc
sub
jne
pop
xchg
lret
aad
insl
add
outsb
mov
push
push
cltd
dec
and
xchg
int
jno
add
adc
push
call
data16
out
inc
outsl
adc
idivl
movsb
ljmp
clc
adc
int
jl
leave
xor
mov
xchg
scas
sbb
pop
or
xchg
lea
mov
mov
jae
aad
cli
xor
xor
flds
icebp
dec
sar
jae
andl
aam
pop
pop
xchg
jecxz
ja
inc
dec
repz
adc
scas
push
aaa
repz
mov
pop
lret
dec
gs
mov
pop
lds
jl
mov
sarl
and
xchg
inc
jo
hlt
cmp
es
lret
lcall
fwait
int
dec
call
arpl
pop
fmul
mov
movsb
pusha
mov
dec
lret
loopne
xchg
dec
dec
and
mov
and
scas
int3
pop
das
xchg
repz
sub
aaa
dec
inc
cmp
or
add
mov
dec
and
lret
sub
lea
sbb
inc
pop
jl
fildll
inc
imul
push
std
in
pop
divl
mov
aaa
pop
in
mov
stos
adc
jo
cmpl
push
shll
mov
repz
add
shlb
js
dec
push
inc
pop
inc
pop
jno
xchg
jne
ss
inc
stc
jle
fstps
sub
je
inc
xchg
jns
int
add
test
or
rorb
aam
push
xchg
popf
dec
xor
jne
ds
or
pop
push
icebp
jecxz
leave
loopne
mov
mov
mov
mov
push
test
arpl
mov
pop
sbb
and
xor
mov
movsb
inc
adc
sahf
scas
fsubrl
les
imul
inc
mov
repz
adc
jecxz
hlt
mov
rcrl
push
cmp
mov
hlt
in
loopne
int
lds
insl
or
test
pop
adc
adc
cmpsb
shld
inc
push
xor
roll
adcl
mov
clc
xchg
cmc
leave
int3
jns
shrl
and
jnp
outsb
fidivl
int3
das
xor
lds
mov
loopne
push
lea
pop
call
sbbb
inc
sahf
lods
inc
and
mov
movsl
sub
mov
mov
int
push
addr16
xor
add
or
pusha
or
sbb
out
push
nop
scas
mov
push
inc
sahf
or
mov
sbb
dec
adc
or
push
jb
andl
push
adc
pop
dec
out
or
stos
in
popf
cmp
aas
or
mov
adc
iret
jg
imul
test
pop
lcall
mov
add
push
cwtl
stos
sub
mov
or
in
mov
movsl
push
scas
jp
xor
in
push
inc
arpl
fsubrp
pop
inc
in
mov
lods
mov
add
pop
mov
add
gs
hlt
mov
jns
dec
cmp
mov
mov
aas
int
mov
loopne
jle
bound
lret
fs
outsb
sahf
cmp
and
mov
in
ljmp
aad
pop
add
mov
sub
xor
sub
icebp
xor
mov
movsb
jl
in
inc
test
xor
and
xlat
popa
das
lahf
jb
xchg
mov
insl
movsb
fisubrs
std
repnz
inc
push
cmp
sub
or
inc
cmp
lret
mul
leave
mov
jno
dec
mov
outsl
push
cltd
jg
xor
testl
add
scas
sarb
arpl
ds
rorl
sub
enter
call
lahf
rol
cmp
pop
jbe
pop
sbb
adc
sub
mov
fwait
cmp
jle
xchg
sub
xchg
cwtl
ss
fcmovne
jae
rolb
cmc
dec
leave
fdivl
mov
lret
pop
dec
sub
add
loope
fimull
cwtl
in
shlb
imul
adc
inc
cmc
test
loopne
xchg
dec
push
xchg
jns
mov
sub
adcb
mov
int
std
fcompl
and
test
popa
cli
dec
jmp
int3
jb
lods
or
or
xchg
out
mov
xor
shr
int
das
add
in
andl
mov
add
pop
sbb
xor
inc
xor
cmpsl
dec
jecxz
push
push
popf
mov
imulb
scas
stc
push
shlb
adc
add
test
in
mov
dec
and
cld
js
lret
cmc
xchg
and
add
xor
dec
arpl
and
jge
fisubs
adc
push
dec
push
loopne
jp
int
dec
daa
push
lock
sub
mov
xchg
in
mov
and
jo
jl
pop
stos
addr16
pop
xor
adc
mov
sbb
mov
adc
sub
lds
int
sbb
outsb
aaa
pop
lcall
imul
inc
jnp
mov
leave
mov
data16
mov
mov
scas
lods
and
or
fimuls
jae
sub
cmp
xchg
hlt
icebp
jno
xchg
stos
pop
jne
mov
and
pop
lahf
jno
pop
and
loope
js
ret
pop
test
and
fistpl
out
pop
jne
xchg
add
out
add
fucomip
dec
sub
mov
leave
xor
and
mov
dec
and
das
push
cmp
sti
cs
jmp
sbb
fs
xchg
notb
arpl
outsl
je
insl
xchg
and
mov
xchg
rcrl
movsb
jmp
mov
mov
popa
lea
sbbl
shll
mov
jno
sar
inc
lods
ss
mov
add
mov
dec
mov
dec
dec
insl
adc
in
ss
sub
in
sub
or
mov
push
fwait
jge
cmpsb
nop
push
cli
test
xor
cli
adc
movsb
xorb
and
add
inc
testl
cmp
aam
daa
sbb
enter
mov
call
push
mov
rolb
in
mov
lahf
add
mov
pushl
push
pop
cmpsl
je
push
push
push
scas
leave
fnstcw
mov
in
pop
jnp
cmp
repnz
jl
sub
add
rep
pop
lea
dec
scas
push
lahf
rol
mov
xor
add
sarb
push
insl
sbb
in
or
cmp
push
sbb
xor
cwtl
stos
pushf
lods
dec
mov
stc
loop
test
test
sub
pop
cmp
inc
test
movsb
dec
fnsave
scas
insb
mov
test
push
mov
xlat
pop
xor
jg
jns
push
popa
inc
jge
pop
sbb
stos
mov
pop
mov
out
popa
xlat
je
inc
jmp
icebp
xor
pop
pop
lock
xor
aas
call
jecxz
add
ret
rcl
xor
push
out
rcrl
mov
jl
in
mov
jge
addl
inc
xor
or
scas
pop
in
jge
int
mov
rclb
lret
push
les
ret
int
mov
xchg
jp
out
fmull
test
sti
ret
jns
add
xchg
dec
std
and
cmp
aad
mov
addr16
pop
dec
repz
dec
adc
pop
inc
out
fwait
sahf
sbb
add
jno
or
clc
or
mov
inc
jp
xor
in
adc
rorl
xchg
xor
sub
fwait
cmp
mov
jnp
inc
xchg
ret
or
jle
cmpsb
pusha
jne
cs
mov
std
adc
push
addr16
push
and
adc
sbb
clc
fcoms
cmp
in
xchg
outsl
adc
pop
mov
pop
or
movsb
mov
cmp
fsubr
xchg
gs
fwait
int3
adc
and
or
sbb
inc
mov
ss
outsb
fwait
pop
shll
pop
push
pop
les
inc
cli
int
cwtl
stos
bound
cmpb
test
jecxz
loope
adc
daa
cmpsb
fsts
adc
and
or
cmpsl
out
pop
addl
sbb
inc
js
lahf
xchg
enter
mov
mov
push
sbb
icebp
mov
das
pop
jecxz
pop
iret
daa
pop
lcall
pop
push
clc
repz
or
inc
sbb
mov
aad
jle
mov
inc
pushf
fcmovnu
and
out
inc
push
inc
mov
mov
call
push
add
lcall
and
xor
push
jl
adc
cltd
and
ljmp
mov
cmp
adcl
fdivrs
fadds
in
lods
icebp
jno
mov
aaa
mov
jecxz
jnp
insb
xchg
outsl
fistpl
dec
lret
pop
add
icebp
mov
std
into
add
pop
sbb
xchg
cmp
sub
or
mov
adc
clc
add
movsl
lods
jmp
iret
ljmp
push
mov
lcall
mov
mov
fsubrl
mov
adc
mov
mov
sti
or
jge
xchg
sbb
sar
ficoms
adc
int3
fnstenv
loope
cld
cmpsb
subb
adc
mov
xor
stc
cli
loopne
and
or
or
sub
mov
sbb
out
xchg
push
push
nopl
std
flds
sbb
fimull
jle
push
mov
pop
in
mov
mov
mov
cli
or
push
add
and
sbb
mov
mov
jg
xor
andb
cli
push
out
xor
std
rorb
nop
cltd
add
in
push
cmp
das
movsl
xor
mov
repz
and
mov
mov
gs
fistl
in
xchg
mov
inc
sub
sub
lods
out
and
orb
rolb
push
test
mov
test
pop
xor
movmskps
test
and
jno
and
lods
mov
add
xchg
mov
movsl
push
sub
leave
push
outsb
shll
push
cmpsb
icebp
lea
in
mov
xchg
repnz
insb
mov
cld
ret
mul
lcall
pop
mov
push
xlat
xchg
xchg
sbb
sarb
into
push
jns
mov
mov
stos
movsl
es
arpl
cmp
cmc
inc
add
sub
stos
mov
das
fs
das
loop
sti
mov
dec
out
cli
mov
cmp
repz
out
lahf
pop
jl
lcall
mov
mov
cltd
insb
pop
mov
jno
xchg
mov
cmp
or
test
in
cli
pop
lret
add
mov
movsl
out
ljmp
jmp
adc
xor
mov
jg
incl
jae
call
in
jle
sar
add
sbb
ret
and
cmc
push
sti
push
xor
xchg
add
hlt
mov
fs
jne
xchg
and
mov
data16
insl
lods
or
repz
dec
mov
out
mov
pop
mov
rcll
call
pop
jp
or
mov
mov
mov
add
push
xchg
test
ljmp
jne
push
stc
add
pop
pop
mov
lods
jno
sahf
pop
aas
ljmp
loope
imulb
mov
xchg
fdivrs
lock
xor
into
adc
fcoml
sbb
add
imul
cmc
dec
pop
scas
sub
xchg
inc
mov
cmp
subb
pop
aam
movsl
sub
sub
mov
mov
or
in
fldcw
push
loope
inc
sbb
repz
loop
jne
push
movsb
cmp
push
adc
insl
faddl
test
xor
dec
xchg
xchg
and
dec
xorb
lcall
adc
in
jae
in
rcr
and
lret
int3
cltd
aas
pop
push
aaa
pushf
push
xchg
xor
mov
or
subb
mov
mov
mov
add
cltd
pusha
jo
mov
mov
dec
lahf
push
out
insb
sub
inc
jmp
jne
or
scas
push
pop
lret
pop
mov
mov
and
scas
dec
mov
data16
roll
pop
add
lcall
fistps
nop
sbb
icebp
push
out
cld
ret
cmp
scas
in
inc
adc
add
pop
push
xchg
pusha
mov
xor
cmp
aaa
rolb
fs
repz
call
dec
sub
jge
fwait
jmp
mov
sbb
inc
xor
and
mov
sub
and
imul
out
and
insl
jle
cmp
ljmp
test
dec
mov
dec
hlt
xchg
loop
cmp
stos
inc
out
pop
subb
fdivr
pushf
push
dec
fsubl
cld
leave
lods
push
xchg
es
in
out
in
mov
sub
cmpsl
jmp
insb
jmp
in
fdiv
rcrb
xchg
mov
or
ss
pop
inc
arpl
outsl
push
mov
xchg
punpckhdq
cltd
popf
push
mul
mov
pop
mov
pop
div
mov
test
xchg
js
mov
cmpsb
or
loopne
pop
repz
das
popf
mov
inc
mov
pusha
inc
add
fstps
ret
movb
ret
lds
jo
add
adc
jne
mov
jp
or
mov
or
cmp
in
in
in
inc
jl
mov
repz
call
adc
sbbb
sub
cmp
jp
test
mov
mov
repz
aad
fs
iret
adc
sbb
fldln2
std
test
and
push
mov
cmp
scas
inc
lahf
ss
addr16
ret
lcall
pop
sbb
daa
jmp
add
lret
pusha
jae
pop
push
and
cmpsl
shl
push
xchg
ret
lcall
in
inc
movsb
sbbb
xor
xchg
dec
orb
lret
adc
inc
test
mov
fstpt
out
test
xchg
pop
fcmovnbe
jnp
fnsave
fsubp
lods
mov
add
push
dec
mov
mov
test
outsb
mulb
stos
pusha
insb
rol
je
sarb
lret
stos
lret
nop
aam
or
inc
mov
popa
fnstsw
jmp
or
push
inc
push
repnz
fdivrs
xchg
jl
bound
pop
fwait
shrl
fstpl
lods
lock
iret
xchg
xchg
stos
out
stos
xchg
lock
negl
ljmp
cmp
test
jns
lea
ficoms
mov
jle
rcpps
out
jnp
jp
sbb
jmp
jmp
inc
add
ds
or
mov
icebp
lds
cmpsb
and
je
cmpsb
xlat
or
mov
sbb
stos
mov
mov
out
mov
cmp
cmpsl
bound
ret
rclb
sbb
mov
into
cmp
and
pop
mov
inc
clc
mov
in
mov
xchg
dec
lods
pop
fildll
xor
sbb
movsl
push
cmp
sub
mov
lret
add
test
insl
repz
leave
mov
clc
mov
lock
or
xchg
sbb
jp
icebp
add
loope
repnz
push
dec
ret
leave
xor
dec
xchg
adcb
int3
lahf
je
cmc
mov
cld
repnz
sub
adc
and
aam
xchg
mov
xorl
mov
sub
cmp
ficoms
into
inc
loope
push
xchg
dec
jbe
stos
jmp
or
divb
push
mov
loopne
loopne
jle
arpl
inc
or
ss
adc
push
adc
out
xor
cmp
iret
inc
loopne
dec
dec
dec
out
pminub
lret
and
dec
push
xchg
sub
jge
cmp
dec
sbb
neg
mov
arpl
push
xor
adc
outsb
dec
pop
dec
mov
inc
std
mov
sub
cmpsb
lcall
and
xchg
pop
sarb
stc
add
dec
mov
stos
cmp
push
shr
mov
or
lahf
mov
bound
es
stos
pop
stc
and
and
pop
push
inc
movsl
mov
test
sub
in
sub
popf
jno
or
or
xor
shrb
inc
jp
aam
or
sub
pop
push
push
fiaddl
ss
jnp
adc
lods
dec
test
leave
xor
stos
sti
xor
jne
call
xor
loope
cli
push
and
frstor
nop
jmp
jmp
movsl
mov
mov
sbb
xchg
cmp
out
fidivl
movsb
or
fdivs
scas
jae
fsubrl
or
mov
data16
push
and
in
add
add
sub
lds
popa
mov
or
push
mov
rolb
ljmp
pop
push
aaa
jg
iret
in
xor
bound
ljmp
fwait
std
sbb
int
ja
mov
mov
daa
inc
inc
lret
mov
adc
dec
lcall
ljmp
sarb
xorb
jo
lock
hlt
out
push
or
icebp
inc
data16
jl
xlat
xchg
sbb
fisubl
pop
shrb
shlb
in
push
mov
adcb
mov
pop
ret
push
mov
scas
push
cld
sti
jno
xor
push
lret
lahf
pushf
mov
sbb
lmsw
fwait
pop
and
jl
add
jb
ds
mov
ret
adc
pusha
pop
mov
pop
rolb
stos
pushf
and
xchg
incl
cmp
repnz
and
sti
jne
aaa
mov
shl
insb
neg
or
add
scas
loope
movsl
fsubl
inc
aad
repz
ret
xchg
jmp
fxch
xchg
ret
sub
jae
push
mov
fcmovne
iret
xlat
xor
mov
dec
loopne
mov
push
mov
int
cli
jno
push
imul
cmc
mov
sbb
dec
jbe
je
jecxz
cwtl
push
outsb
inc
or
jbe
sbb
imul
jl
xchg
adc
push
jnp
fs
sbbb
inc
outsb
sbb
daa
dec
xchg
movsl
rorb
mov
pop
fldcw
into
andb
dec
dec
xor
mov
test
daa
stos
adc
movsb
inc
pop
or
ret
cwtl
fnsave
lret
jbe
or
and
and
add
hlt
jo
in
les
adc
rcr
inc
push
xor
sbb
aas
add
pop
outsb
jge
int3
in
jecxz
inc
addr16
adc
sbb
lcall
lock
mov
mov
cmpl
ret
push
lods
inc
testl
inc
push
imul
inc
mov
dec
daa
shrb
out
pop
aaa
sbb
inc
push
add
sbb
pop
pop
cmpsb
add
out
jns
and
aad
ficoml
add
test
ficompl
pop
push
mov
sbb
shrl
ss
adc
push
shr
divl
dec
sbb
dec
fdivs
pop
loop
call
icebp
xchg
mov
movsb
ljmp
ds
mov
lds
xor
out
adc
test
repnz
fstps
mov
sub
xor
or
lds
push
fs
sar
xchg
scas
ja
and
outsb
shr
lahf
sbb
ffree
pop
aam
aas
rorl
cmp
lods
pop
enter
popf
nop
dec
jae
sbb
add
fnstenv
pop
imul
pop
cmp
xchg
mov
out
fdivrl
sti
xor
cwtl
sbb
dec
add
rorl
inc
loope
sbb
inc
or
xlat
adc
les
xor
pop
pushf
imul
dec
dec
mov
mov
mov
add
or
shlb
lcall
add
push
call
pop
aam
xchg
mov
inc
xor
insl
popa
lcall
shlb
xor
jmp
push
sbb
jnp
xchg
dec
int3
call
pop
sbb
loop
jg
call
xchg
jo
sub
dec
sbb
xchg
cs
jecxz
out
in
push
inc
jo
int
mov
ja
mov
jno
div
cmc
push
push
adc
je
or
mov
sbb
pop
xchg
shrb
aam
sub
movsl
and
aaa
jb
outsl
cmp
cltd
cmp
add
hlt
and
mov
pop
inc
cltd
mov
xchg
aaa
bound
in
leave
sbb
pop
mov
inc
cmpl
jp
mov
scas
cmp
fs
es
mov
cs
cmpsb
scas
xor
add
pop
sub
call
ss
xor
xchg
mov
cmpsb
push
sbb
sub
outsb
in
imul
push
repnz
subl
pop
fisttps
fsubp
mov
inc
jo
int3
dec
xchg
lds
cmpsb
loop
icebp
dec
out
inc
aaa
and
roll
cmp
adc
ds
push
xchg
xchg
iret
inc
ljmp
comiss
aas
and
xchg
pop
out
es
fcoml
movsl
or
adcl
push
in
ficoml
xchg
out
pop
int
push
inc
xchg
or
inc
stos
add
leave
shl
push
loope
int
das
ss
pop
test
jecxz
mov
lahf
inc
cmp
pushf
mov
outsl
adc
sahf
mov
pop
pop
mov
or
pcmpgtb
mov
or
mov
dec
add
outsl
jmp
mov
adc
shlb
stos
aad
jle
hlt
icebp
or
into
inc
mov
sbb
jo
sti
mulb
fwait
pushf
dec
and
and
sbb
ss
jecxz
mov
add
and
loop
loop
arpl
inc
push
cmpsb
and
cld
xchg
xor
pop
jno
lds
inc
xchg
movsb
jp
loop
jne
cmp
push
mov
push
cs
add
js
and
cs
outsl
adc
fisttpl
and
sub
ficoml
mov
into
pop
lret
xchg
jb
mov
sbb
sub
insb
jae
fisubl
subl
and
pop
dec
imul
cs
pop
pop
loopne
iret
push
cmp
jae
push
xlat
stos
adc
mov
ret
xor
pusha
sbb
scas
dec
vmovaps
or
in
sbb
out
movsb
sarb
push
jns
insl
xchg
popa
and
insl
mov
cld
notl
cmp
pop
les
int3
mov
pusha
cltd
sub
test
push
ret
adc
inc
es
or
dec
push
loope
and
pop
sub
add
and
repz
xchg
adc
imul
jne
sbb
cld
data16
fdivrl
sti
dec
cld
addb
jb
daa
mov
cmpsl
inc
fldenv
cli
lcall
xchg
mov
cmp
cld
popa
cmpsb
sbb
aaa
int
in
mov
and
xlat
cmpb
iret
push
sub
and
popa
test
adc
iret
rcl
pop
lock
loopne
into
out
aam
add
in
or
jecxz
js
dec
repnz
jo
imul
out
gs
mov
xchg
sub
push
mov
jge
daa
dec
or
jnp
dec
xor
xchg
pop
arpl
adc
pop
or
sub
and
ds
mov
nop
push
inc
imul
push
cmpsl
outsb
insl
mov
xlat
scas
mov
sbb
add
inc
je
or
sbb
testb
or
or
je
rcll
xchg
and
pop
cmp
stos
add
dec
add
push
daa
cld
cmp
dec
lcall
lods
std
out
int
sti
aas
out
repz
adc
jnp
inc
das
or
jo
cmpsl
push
adc
lcall
shll
mov
div
sub
mov
cmp
adc
jb
adc
cmc
push
push
adc
idivl
int3
xor
scas
mov
add
sbb
adc
mov
pop
roll
jecxz
sti
pop
jb
push
stc
xor
add
clc
leave
inc
loope
sub
or
cmp
mov
lea
mov
test
push
push
xchg
pop
sub
loop
js
or
sub
movsb
cmp
test
lods
xor
mov
enter
mov
aas
dec
pop
inc
mov
add
fucomip
xchg
mov
xchg
cli
inc
xchg
and
lret
mov
ss
inc
inc
fcmovne
jmp
pop
jno
imul
repz
push
ret
mov
dec
out
aaa
adc
mov
push
xchg
xchg
test
push
or
ret
dec
out
and
fstp
nop
icebp
push
xchg
iret
shlb
cmpsb
or
mov
and
or
out
cmp
mov
movsl
push
mov
push
push
and
std
rcr
jae
rcll
or
loope
bound
fldt
lret
cwtl
or
es
dec
fucomp
ljmp
push
mov
jmp
push
out
iret
dec
mov
pusha
loope
pusha
fnstsw
sub
repz
jbe
out
push
lods
aad
xchg
inc
adc
fcoms
test
and
scas
jmp
rclb
inc
and
jmp
jg
loopne
push
mov
dec
and
push
sbbl
call
sahf
js
push
push
sbb
mov
inc
push
inc
mov
push
xchg
push
std
int
add
pushf
aaa
in
lret
jo
sub
daa
fistpl
fwait
loope
dec
daa
das
or
lods
xor
xor
xor
fidivl
scas
fcomi
filds
aam
mov
stos
add
mov
jnp
aam
enter
stos
lea
push
sub
add
sbbb
movsb
and
cmpsb
mov
jecxz
ret
cwtl
xor
and
inc
jl
test
lds
and
inc
fistpl
push
je
cltd
cmp
jno
jp
lds
js
jb
pusha
inc
iret
pushf
cmp
jle
jbe
fldenv
xchg
xchg
out
std
mov
adc
mov
mov
outsl
ljmp
imul
jae
and
push
mov
xor
bound
push
pushf
mov
lods
pop
ret
mov
pop
pop
call
xor
int
mov
cmp
fisttpl
push
imul
data16
fs
sahf
out
mov
iret
data16
fs
sub
and
jmp
pop
clc
lahf
clc
sub
mov
pop
sub
aaa
push
adc
adc
ret
mov
cs
loopne
es
jmp
push
dec
pop
in
add
push
insb
mov
arpl
mov
outsb
stc
push
mov
data16
mov
mov
stos
loopne
hlt
sub
pusha
in
add
aad
scas
cli
xchg
es
test
enter
xor
cmpl
cmp
lds
dec
std
sub
cmp
mov
mov
adc
scas
nop
clc
lahf
dec
cli
movsl
addr16
xlat
push
or
cmp
lcall
mov
push
mov
pushl
leave
lods
pop
dec
pop
push
or
jo
xor
dec
fwait
jno
cli
ja
jp
fmulp
rorl
lods
pop
cld
adc
loopne
popf
scas
loop
or
mov
dec
arpl
popa
cmc
sbbb
dec
and
bound
into
cmc
pop
ret
cmpl
dec
xchg
cmp
jns
lock
add
mov
inc
pop
call
lods
leave
sub
rolb
jns
test
xchg
mov
jo
jl
adc
mov
test
xor
pop
pusha
inc
inc
xchg
fwait
mov
popa
imul
jmp
jbe
dec
add
loop
xor
sahf
ds
gs
mov
testl
ja
lret
cmpsl
movsl
call
xchg
pop
mov
ss
pop
and
aaa
dec
adc
lcall
jle
stos
ja
and
into
and
jmp
adc
pop
insl
mov
cmp
jno
pusha
lcall
in
mov
in
lds
insl
pop
sti
xor
dec
cwtl
xchg
ret
out
sti
out
mov
dec
jecxz
cmp
ja
loopne
jmp
xchg
incl
pop
sub
in
mov
add
dec
xor
sqrtps
clc
mov
mov
test
push
mov
inc
jno
pusha
xchg
mov
or
mov
bound
aad
push
sub
daa
mov
faddl
enter
jmp
xchg
orl
adc
and
xor
and
mov
sub
ret
cmpsb
xchg
inc
jno
addr16
outsb
mov
pushf
js
out
jne
jge
sub
inc
iret
pusha
push
or
mov
fs
repz
xchg
xchg
xchg
mov
pusha
sbb
sbb
divb
adc
sub
adc
pop
mov
ret
mov
out
push
in
adc
ja
arpl
lahf
cmpl
int3
mov
rclb
sub
mov
mov
andl
mov
shl
xor
loope
repz
loop
fdivs
shrl
and
insb
mov
push
mov
in
xchg
std
sbb
pop
dec
mov
sub
pop
pop
cli
adc
inc
push
mov
sarb
ja
jp
rcr
mov
test
push
imul
outsb
jmp
int
imul
pop
pop
mov
xor
mov
test
outsl
push
imul
xor
mov
pop
stos
push
scas
mov
imul
iret
mov
adc
mov
sbb
push
xor
dec
dec
cmp
idiv
and
pop
fistps
push
dec
add
pop
jmp
sub
pop
xlat
push
push
add
scas
data16
push
nop
pop
mov
xor
pop
and
jns
sub
in
mov
clc
jae
pop
adc
ss
lock
sub
aas
jp
push
push
addl
jo
hlt
xchg
fisttpl
into
jne
inc
in
pop
xchg
cmpsb
repz
xor
xchg
roll
ss
outsl
shll
jae
mov
jmp
sti
mov
add
das
dec
inc
insb
es
repnz
dec
ja
es
aam
out
adc
shrl
hlt
add
sti
push
and
cs
add
js
sbb
lahf
lcall
pop
jno
outsb
sbb
push
jns
xchg
sbb
scas
rclb
inc
inc
inc
pop
bound
xchg
xchg
mov
aas
les
and
cmpsb
insb
imul
pop
jecxz
dec
pop
mov
dec
jbe
je
sbb
fucomp
mov
out
das
out
lahf
das
or
cmp
mov
call
lds
push
daa
inc
cmp
push
lahf
pop
les
or
inc
ret
int3
jbe,pt
jne
out
xchg
dec
mov
in
fmull
je
jb
push
and
aaa
movl
pusha
into
sbb
fnstcw
mov
push
pop
fisttpll
ja
popf
adc
mov
lret
clc
sub
mov
out
mulb
cmpsb
xchg
push
lahf
aam
and
mov
push
enter
add
stos
push
stc
mov
dec
cwtl
inc
sub
dec
fsub
add
cmp
sub
mov
xor
xchg
inc
jb
imul
jno
mov
cmp
pop
mov
mov
or
pop
jmp
cld
push
mov
adc
mov
cmp
inc
pop
pusha
movsl
dec
xor
push
movsb
mulb
pushf
lods
push
sahf
xlat
cmovge
and
imul
push
cmc
outsl
gs
adc
add
xchg
pop
dec
mov
push
lret
pop
ret
scas
fistpll
push
xchg
aas
stos
das
repnz
icebp
or
call
js
pop
push
mov
push
add
push
dec
iret
or
xor
shrb
fiadds
or
xchg
sub
push
dec
push
cli
and
jge
sbb
pop
xor
add
out
js
arpl
iret
mov
movsl
fbstp
xchg
xor
or
repnz
add
call
push
add
outsl
cmp
mov
out
in
movsb
xchg
scas
push
outsb
dec
add
mov
push
fcomp
push
data16
neg
jl
push
push
ror
sub
push
mov
mov
jmp
das
aas
mov
filds
cs
je
jle
lock
mov
add
pop
inc
inc
stos
and
sub
fsts
sub
xlat
rcr
ds
mov
and
mov
imul
mov
out
xchg
jb
lahf
xchg
dec
ficoml
cmc
mov
dec
jp
add
jo
stos
jb
popf
cltd
ret
dec
add
shl
insb
mov
sahf
mov
fimull
mov
jns
xor
cld
lods
fsts
nop
push
cwtl
in
iret
xor
rclb
or
push
cld
pop
jbe
xor
ss
aas
rorb
data16
push
decb
mov
push
imul
adc
fcom
mov
cmpsl
movsb
imul
out
jb
lock
jo
ret
inc
jl
pop
mov
xchg
sub
sbb
rcll
les
rcrl
out
sub
test
dec
and
ret
push
lods
int
xlat
jmp
mov
in
aaa
push
out
jnp
setne
mov
lods
repz
ffree
jne
and
stos
jle
cltd
add
imul
xchg
outsb
ret
adc
dec
push
lea
outsb
xchg
mov
in
jb
push
pop
sbb
out
cmp
cld
insl
addr16
int3
mov
rcl
movsb
adc
sub
jmp
scas
push
insb
jge
xor
test
xchg
pushf
lret
jae
test
scas
pop
inc
inc
mov
clc
dec
shll
aam
dec
xchg
stos
lods
pop
cli
mov
lret
out
jo
int3
leave
sbb
sub
rorl
mov
push
mov
sbb
mov
mov
lcall
mov
xchg
sbbl
jge
scas
pop
and
loop
xchg
addr16
sbb
incb
jmp
stc
mov
out
pop
stos
int3
pushf
push
outsl
mov
xor
enter
bound
lock
mov
or
adc
mov
sbb
sub
push
lahf
xchg
or
out
cmc
iret
mov
in
mov
add
mov
icebp
in
and
mov
inc
les
lret
lods
fldenv
lahf
pop
outsb
mov
mov
mov
sbb
leave
xor
or
or
or
cld
xor
xchg
cmp
and
aaa
js
jo
jns
cli
int3
sbb
popa
push
pusha
add
aad
xchg
jne
shlb
jle
add
pop
jb
xlat
cltd
sti
test
mov
sub
add
xchg
xchg
cmc
push
sbb
push
inc
test
mov
lock
fists
sbb
mov
jg
xchg
iret
cmpsl
imull
pop
ret
scas
fbld
adc
adc
aam
in
jge
mov
push
xchg
lcall
ret
jb
pushf
in
pop
sub
icebp
in
test
mov
inc
mov
loope
nop
jp
pop
cmp
pop
lret
int3
repz
dec
cmp
jg
adc
ja
adc
sbb
xchg
mov
fwait
xlat
cli
daa
or
imul
loopne
orb
hlt
popa
or
mov
adc
xchg
sahf
push
loopne
or
jns
mov
xchg
fsubl
cmpsl
fcomi
mov
test
push
lods
or
in
in
ret
aas
jmp
inc
cmp
aas
sbb
push
xor
jle
push
xor
sarb
das
add
das
sub
pop
push
test
sub
pop
add
sbb
jns
adc
rcrl
and
xor
mov
lock
fs
cmp
test
mov
lret
popf
xor
sub
aas
xor
fwait
push
das
mov
shrl
sub
mov
mov
mov
inc
add
add
xlat
addb
dec
sub
add
mov
loope
aad
or
sahf
clc
add
mov
movsb
imul
out
xlat
push
and
popf
pop
adc
or
bound
push
std
and
fstp
add
push
dec
imul
divb
out
dec
adc
pop
push
testl
iret
push
ljmp
aam
imull
call
mov
xlat
or
shlb
pushf
jnp
inc
clc
mov
int3
cmc
divb
xchg
inc
dec
lret
adc
imul
fcmovu
je
int3
push
jbe
nop
dec
dec
out
and
inc
add
aas
push
aam
mov
jae
mov
enter
mov
movl
mov
hlt
cs
cmp
cmp
js
lahf
loop
push
and
add
mov
push
popa
pop
push
push
test
shlb
mov
stc
loop
jo
cmp
push
loop
inc
pop
or
test
sbb
test
decw
push
xchg
adc
stos
cmpsl
out
xlat
shlb
lea
xor
cmc
scas
mov
mov
jge
ljmp
movsl
not
mov
push
mov
pop
xchg
mov
sbb
or
sub
jmp
mov
sub
out
mov
dec
lcall
xchg
adc
adc
repnz
add
cltd
sbb
xchg
sbb
out
or
popf
xchg
xorl
push
icebp
aad
idivb
sub
lds
int3
cmp
xlat
addr16
cmp
add
cmp
pop
sbb
xchg
xor
inc
sub
mov
out
xor
push
xchg
pusha
shll
jno
mov
out
mov
inc
adc
and
int
lret
nop
in
repnz
lock
dec
and
int
mov
sbb
adc
xchg
push
negb
and
out
or
lret
xchg
fcoml
inc
and
lods
xor
hlt
or
and
in
mov
jmp
rclb
orl
or
dec
pop
add
adc
fistps
imul
adc
sbb
in
dec
leave
cmp
arpl
push
stos
xchg
mov
les
xchg
ljmp
mov
aam
imul
add
and
cs
dec
scas
cmpsb
add
mov
and
add
pop
inc
dec
shl
aaa
ja
cmp
in
rorb
add
das
sbb
insl
jbe
out
lahf
push
jp
adc
sub
xchg
sbb
bound
push
fs
repnz
and
repnz
sti
in
xchg
and
mov
and
add
or
shl
das
mov
fldcw
lods
jae
int3
shlb
outsb
das
lea
adcl
nop
bound
push
add
lods
push
sbb
jg
pop
loopne
pop
pop
ret
jno
iret
add
lods
movsb
icebp
cmpsl
push
mov
test
out
or
jno
outsl
andl
test
xchg
nop
sub
notl
pusha
push
cwtl
inc
add
or
push
mov
aad
inc
stos
or
popf
mov
cmpsl
outsl
push
push
pop
fwait
mov
mov
out
lods
add
bound
or
leave
cmp
pop
mov
insl
mov
fsubs
fdiv
int
cmpsl
mov
pop
inc
call
scas
jp
adc
jl
ja
pop
mov
loope
or
fists
nop
dec
sub
leave
sar
lcall
pop
and
inc
add
and
clc
arpl
cmp
testb
jg
adc
test
push
scas
sahf
hlt
mov
jae
sbb
std
aad
and
cmp
jge
cs
fucomi
test
push
popf
adc
xor
mov
sbb
testl
fcomi
insl
jp
rclb
ljmp
push
push
cli
repnz
inc
xor
mov
popa
mov
in
pop
loope
mov
fsts
fisttps
add
mov
in
stos
fwait
push
flds
mov
subl
jae
rcr
push
pop
mov
sbb
add
jne
jp
xor
icebp
jbe
adc
sub
test
ss
div
in
sbb
mov
jp
pop
mov
inc
cmp
scas
loopne
adc
mov
xchg
lds
inc
jbe
vpcmpeqd
or
cmpl
mov
push
adc
jecxz
fs
insb
mov
sub
mov
cmp
sbb
mov
popf
lcall
daa
adc
cmpb
push
mov
sbb
or
mov
gs
in
inc
jno
adc
iret
test
lock
sahf
mov
cld
ss
add
cmp
xorb
adc
or
dec
adc
sub
daa
xchg
mov
test
es
jo
push
adc
call
xor
popf
xor
dec
icebp
sub
mov
jb
xchg
loop
sub
stc
aaa
in
push
jne
pop
mov
sbb
lahf
inc
xchg
mov
stos
pop
lea
add
sti
push
and
gs
pop
scas
pop
sub
arpl
xor
std
adc
leave
pop
mov
xchg
mov
lock
repz
rorb
mov
dec
sub
inc
test
clc
insb
hlt
add
fstps
xor
clc
jne
jno
fldt
push
shrb
xchg
sub
cmpb
pop
mov
enter
mov
adc
hlt
inc
faddl
push
mov
pop
lret
adc
test
push
xchg
jnp
push
xchg
xchg
adc
gs
sbb
ret
push
insb
testb
fmuls
popa
sub
rcrb
in
xor
outsb
or
popa
xchg
sahf
lods
mov
push
mov
mov
stc
sarb
mov
stc
jecxz
add
dec
add
xchg
mov
dec
adc
and
dec
pusha
lods
cmp
pop
pop
outsl
sti
lahf
inc
in
adc
adc
mov
push
fidivrl
jl
imul
pop
mov
test
jo
xor
lahf
nop
stos
cltd
jmp
gs
nop
pop
fs
mov
leave
lret
mov
pop
scas
roll
push
jg
push
es
push
sbb
lock
add
pop
jmp
in
or
sbb
jnp
push
mov
outsl
out
fmul
dec
movlhps
in
or
rcrb
rcll
sbb
jns
sbb
mov
call
mov
arpl
mov
sub
aas
ret
lret
das
add
mov
cmpsl
clc
push
cmpsl
sub
add
leave
inc
unpcklps
jecxz
xchg
lahf
inc
cld
fstpt
rorl
jne
ror
icebp
lret
out
rcr
ljmp
add
mov
xor
lds
sub
mov
in
cwtl
popa
add
clc
and
imul
out
cmpsl
cld
sarl
imul
fmull
inc
aaa
push
mov
loopne
lods
adc
jmp
mov
push
insb
mov
mov
in
repnz
cmp
inc
loope
sub
test
sbb
jp
cli
xor
xor
adc
ljmp
shl
mov
jg
xchg
sub
mov
xor
dec
ss
add
repz
push
sbb
push
fstpt
push
divb
push
je
aam
cs
int3
jns
jne
xor
stos
xlat
inc
aas
xchg
lods
rcll
lock
jp
and
insl
mov
inc
clc
dec
negl
sbb
dec
cwtl
mov
jns
cmc
xchg
cmp
push
add
lret
mov
ljmp
in
xchg
push
xchg
loopne
ljmp
cmp
inc
enter
push
outsl
dec
xlat
mov
sub
push
pop
mov
pop
dec
loopne
je
xor
pmuludq
out
sar
mov
mov
or
das
xor
popa
mov
pusha
sub
xchg
std
js
jo
cltd
sbb
dec
fisubrs
pop
ret
into
pop
clc
pusha
mov
stos
popf
data16
adcb
inc
sbb
or
shll
ss
or
mov
shll
popf
bnd
xchg
jae
xlat
pop
jb
mov
mov
je
jno
dec
and
jns
jmp
add
xor
xchg
dec
in
xchg
push
inc
je
lea
fisttpll
jmp
mov
dec
jbe
sti
fwait
jle
roll
scas
xlat
imul
xchg
cmp
mov
and
stos
mov
pop
sub
lods
cwtl
adc
stc
in
daa
mov
pop
jns
out
out
adc
les
push
ljmp
cmc
fnstsw
push
in
add
push
fisubrs
pusha
add
icebp
in
fcmovnb
ret
icebp
xchg
out
mov
or
or
cli
lock
mov
sbb
jno
dec
push
ret
arpl
pop
sub
sub
ret
adc
mov
pop
mov
add
imulb
mov
lock
pop
cmpsb
cli
push
mov
mov
jl
add
push
std
rcr
or
pop
and
hlt
lea
sub
dec
cmp
ftst
mov
aad
lahf
push
xchg
add
ds
inc
adc
aaa
push
cmp
or
insb
ret
push
jle,pt
pop
pop
shl
xor
js
dec
push
andb
and
movsb
pop
pop
leave
push
dec
lahf
inc
cs
mov
jge
push
inc
imul
jns
adc
mov
cmpsb
adc
jno
ljmp
xor
lsl
shrb
ret
dec
sub
fs
repnz
inc
and
mov
inc
xor
mov
mov
fs
ds
and
fwait
sti
jecxz
add
sar
push
lods
sbb
mov
mov
out
stc
rcl
and
scas
xor
popa
mov
ss
cmc
lahf
test
pop
add
subl
rcll
jne,pt
sbb
ljmp
mov
mov
pop
rcrl
je
mov
mov
test
out
push
mov
lret
movsb
jne
cltd
jge
in
lods
daa
and
push
gs
addr16
insl
loope
rorl
and
hlt
aam
in
fisubl
inc
enter
jno
dec
test
adc
jne
fdivrs
ljmp
xchg
lods
dec
mov
mov
gs
xor
push
repz
icebp
hlt
sbb
jo
cmpsl
mov
dec
pop
inc
lods
mov
cmp
cld
outsl
incl
dec
lahf
out
cmc
mov
cwtl
aaa
jb
mov
popf
push
sub
sub
xor
pop
inc
add
js
adc
pop
insl
and
mov
xor
xchg
movsl
les
mov
movsb
lods
imul
fcomip
int
push
cmc
and
loopne
outsb
mov
stos
sbb
dec
sub
xchg
add
rcl
aam
inc
mov
arpl
aas
dec
lcall
dec
imul
negl
cmp
jg
cld
outsb
adc
scas
imulb
or
lahf
sti
movsb
hlt
xor
test
cli
movsl
jmp
mov
gs
or
insb
xor
mov
lds
addr16
cmpsb
cmc
mov
push
mov
mov
xor
cmc
ficomps
addr16
hlt
dec
mov
mov
xor
cmp
popf
stos
fsubs
lahf
fstps
cmpsb
mov
lock
mov
sub
push
sub
add
xor
dec
test
jmp
xchg
jmp
dec
mov
pop
pop
and
fisttpll
fsubrs
mov
add
push
sbb
outsb
mov
cmp
test
xlat
pop
sti
sub
int
xchg
out
dec
mov
dec
cmp
adc
mov
mulb
fistpll
push
xor
aam
xor
dec
mov
pop
out
cli
inc
sub
add
xchg
xor
dec
arpl
test
dec
push
adc
in
imul
mov
inc
xchg
std
fsts
call
mov
xchg
pop
ja
repnz
xchg
lgs
jmp
aaa
js
loop
in
inc
inc
jne
mov
pop
lods
xor
jge
xchg
dec
shl
popf
inc
mov
mov
cld
test
repnz
lret
jecxz,pn
mov
jns
notb
inc
bound
mov
gs
sbb
mov
mov
pop
xor
shrl
cmpsb
dec
add
push
sbb
sub
mov
cmpsb
sub
ja
push
sahf
sbb
test
add
and
pop
rol
rcrl
mov
shrb
lret
sbb
jecxz
cmp
mov
xor
movsb
jge
or
sarb
leave
int3
hlt
jne
movsb
repnz
and
inc
sbb
and
test
jae
loope
sub
movsb
mov
mov
add
pop
out
xor
scas
mull
mov
mov
push
pop
xchg
pop
pop
es
add
dec
xor
inc
fstl
in
add
add
fisttps
pop
rorl
nop
aam
dec
arpl
mov
jg
xchg
jbe
dec
scas
addr16
iret
jne
or
scas
in
mov
data16
add
dec
aam
sub
mov
cli
rorl
sub
add
stos
jnp
dec
cmp
sbb
out
mov
pop
dec
clc
sbb
call
das
xor
daa
in
ret
imul
push
xchg
adc
mov
dec
andb
movsl
mov
xor
decb
dec
pop
repnz
imull
iret
inc
rol
add
test
adc
pop
cltd
imul
dec
or
and
and
jo
sub
mov
test
inc
cmpl
push
or
push
loope
rcrl
sbb
ds
jbe
jg
fcomps
scas
cld
test
daa
mov
orb
pop
leave
ret
push
push
scas
and
mov
jl
cs
mov
cmpsl
pop
daa
jae
leave
sbb
lret
mov
lahf
loope
mov
add
sbb
xchg
test
and
mov
pop
xchg
shl
push
cmp
inc
in
mov
testl
xchg
jl
xchg
daa
nop
push
repnz
negb
jle
ljmp
notl
int3
idivb
or
pop
mov
add
lds
aam
mov
in
pop
cmp
aaa
imul
leave
xorl
icebp
and
or
sti
imul
jae
push
push
mov
mov
fiaddl
and
sub
inc
cld
popa
pop
test
adc
gs
out
mov
or
xchg
std
jb
pop
mov
mov
push
mov
nop
test
sub
daa
mov
mov
rorb
sbb
add
mov
or
mov
enter
xchg
cwtl
movsl
leave
mov
mov
hlt
cltd
or
sbb
mov
out
mov
pop
push
pop
jbe
pop
dec
mov
test
or
xchg
pop
pop
push
and
aam
mov
push
imul
push
mov
push
frstor
push
xchg
and
xchg
lea
inc
out
ficomps
and
lock
hlt
cltd
or
ja
insl
dec
dec
jl
stc
mov
iret
pop
push
add
je
mov
mov
xor
cmovge
pushf
test
dec
lret
pusha
test
loope
nop
sbb
jnp
sahf
int3
movsb
arpl
jg
sahf
scas
ret
wbinvd
into
lds
lods
iret
out
cmp
add
add
pop
decl
mov
pop
sbb
push
sub
outsb
sub
pop
mov
js
lcall
pop
inc
pusha
sti
xor
push
jl
sub
dec
sbb
leave
sti
rdtsc
outsb
push
nop
sti
lcall
xor
shll
adc
iret
or
loope
adc
push
xor
insb
sub
pop
jp
clc
xor
jo
repnz
push
loopne
cmpsl
cmc
aad
sbb
cmp
out
loopne
nop
ljmp
xchg
push
push
or
cmp
cltd
popf
jbe
push
ja
lds
mov
insb
xchg
inc
adc
inc
and
and
jmp
sbb
lret
insl
mull
mov
fs
push
xchg
fwait
dec
sub
aam
mov
mov
jge
insl
test
fadd
mov
cld
adcb
and
jno
jo
jno
sbb
andl
push
fmuls
popa
imul
in
movsl
mov
xchg
add
mov
loope
sub
movsl
inc
hlt
inc
into
pusha
sbb
fs
jecxz
loopne
shlb
xor
sti
sahf
and
mov
popa
sub
jle
sbb
push
jp
movsl
add
movsb
push
jmp
sub
jl
sti
and
cmp
scas
push
addr16
or
out
xor
mov
insb
sub
mov
dec
push
int
test
inc
adc
cmpsb
add
pop
into
add
mov
mov
aam
push
push
jnp
outsl
cmp
inc
mov
sarl
cmpsb
pop
cs
shr
pop
mov
xchg
jne
jnp
mov
sbb
jo
xor
xchg
adc
push
daa
mov
out
test
test
push
jns
sbb
xor
cmp
lcall
ret
fsubs
push
fdivs
inc
xor
data16
jge
scas
add
arpl
loope
xchg
cmp
sub
adc
dec
mov
aaa
xor
push
test
int
mov
inc
mov
jle
xchg
xor
arpl
aas
pushf
pop
stc
mov
arpl
jo
pushf
pop
mov
mov
mov
push
push
adc
dec
and
lea
push
shl
pop
pop
inc
mov
fcoml
and
inc
inc
ret
and
notl
adcl
inc
mov
incl
icebp
add
jne
sub
jbe
shrb
gs
pxor
and
sbb
mov
notb
les
jns
scas
aad
mov
cmp
push
scas
jae
les
arpl
mov
aad
adc
js
aam
insb
ljmp
aas
into
inc
imul
xchg
pop
cmp
andl
adc
stc
cmp
movsl
xchg
mov
xlat
clc
bound
gs
subb
mov
and
jl
add
jp
lods
cmpsb
clc
ja
and
loopne
into
ret
cli
jnp
frstor
cmp
pop
imul
clc
sbb
mov
nop
mov
xor
xor
in
mov
scas
scas
dec
ret
xor
adc
mov
cmp
or
aam
inc
adc
pop
cmp
ficoms
pop
sub
lods
mov
mov
lcall
push
fimuls
fidivrl
leave
inc
cmp
push
pop
xor
sarl
push
stos
negl
rcl
pop
scas
dec
mov
je
popf
push
in
mov
push
negl
jno
imul
adc
fwait
dec
pop
sbb
je
cmpsl
inc
jbe
xchg
int
es
add
inc
lods
lcall
subb
jp
stos
idivb
sbbb
jno
mov
aad
out
popf
add
ret
push
adc
xor
imul
cli
into
cmp
push
xchg
fidivl
add
jb
movsl
fldl
xor
xor
mov
movsb
jge
fs
mov
mov
jle
mov
fistpl
notb
insb
jnp
subl
ret
imul
adc
adc
cs
subb
sbb
adc
inc
call
mov
cmp
dec
in
sub
daa
xchg
pop
mov
sbb
add
lods
gs
cli
dec
jge
ljmp
test
dec
push
dec
xchg
es
ficoms
sar
into
mov
fisubrs
imul
imul
sbb
xchg
inc
push
mov
jb
pushf
and
test
fiaddl
push
jb
cmp
lods
ljmp
in
push
sub
add
xchg
push
imull
adc
loopne
add
mov
mov
xchg
shrl
imul
xchg
cmp
sbb
out
xchg
mov
int3
test
int
inc
iret
push
aas
pop
push
repz
pop
sbb
stos
xchg
std
xor
mov
lahf
pop
lahf
sbb
scas
push
mov
iret
adcl
popa
roll
sbb
popa
pop
xchg
inc
mov
xor
sbb
dec
jo
fnstcw
or
fucomi
xor
out
push
addr16
fadds
std
jbe
jno
dec
int3
or
push
mov
xor
aaa
adc
adc
jb
mov
adc
test
movsb
das
sbb
sar
into
and
test
lods
int3
sub
mov
push
xchg
shr
xadd
sub
ficompl
sub
subb
mov
dec
popa
jge
jo
mov
inc
pop
aaa
adc
adc
stos
mov
fisubl
xor
mov
jge
ss
and
sub
sub
pmullw
and
fnstcw
mov
mov
mov
fs
ret
jl
mov
mov
xlat
inc
lret
xor
inc
xchg
sub
sbb
lea
push
mov
rcr
dec
xor
xor
test
cltd
jae
lods
rorb
jle
and
push
inc
xchg
out
insb
or
xor
jecxz
xor
ss
into
imul
jmp
popf
ret
and
nop
std
incl
or
inc
fisubs
cmp
dec
xor
push
hlt
pop
xor
sti
cmovo
jge
dec
mov
gs
push
add
add
mov
push
xor
jo
mov
pushf
jl
sbb
and
sbb
push
in
int
push
cld
push
fcomps
lods
inc
add
cmp
xchg
xor
mov
dec
loopne
out
push
xor
or
mov
ja
push
ja
mov
fcompl
mov
ret
and
mov
xchg
sbb
into
lret
pusha
cmc
out
stc
xor
sbb
xor
rol
shrb
or
arpl
sub
xchg
xor
mov
in
fwait
mov
dec
imul
and
mov
nop
lret
test
dec
push
aaa
inc
mov
outsb
bound
cltd
dec
out
dec
xor
mov
cmp
xor
sbb
inc
mov
in
or
mov
fnsave
lods
iret
dec
sub
sub
pop
xchg
and
push
pop
dec
xor
lods
popf
cli
cmp
lods
push
out
jl
jle
insl
mov
test
cmc
idiv
ret
cmpsb
xor
addb
xor
and
rclb
dec
lcall
outsl
mov
ret
push
push
ror
decl
je
bnd
cld
mov
das
or
out
imul
or
inc
add
xor
pop
flds
sahf
jbe
fsubs
aad
add
xchg
clc
inc
xchg
cmp
arpl
sbb
shl
or
cmp
arpl
shrl
outsl
jb
sub
loopne
add
adc
ficoms
add
loopne
push
push
sbb
sub
and
test
in
out
mov
repz
xor
push
scas
or
cmpb
in
sarl
jnp
ljmp
leave
xchg
xchg
pushf
jno
or
xchg
repz
or
xchg
xchg
jmp
enter
pop
in
jno
lret
mov
mov
and
sub
pushf
xchg
sbb
xchg
lcall
sub
insl
and
mov
fcmovnb
cmp
xchg
mov
pop
mov
push
pop
inc
mov
aas
or
sub
mov
mov
daa
sbb
ljmp
gs
test
push
negl
jno
mov
jo
enter
mov
and
sub
fadds
gs
rcrb
add
sub
shll
sbb
std
cmp
out
or
dec
dec
xlat
add
sbb
dec
sub
jae
psllw
push
mov
insb
aad
pop
adc
push
push
xlat
mov
push
xor
orl
push
addb
in
and
loope
in
mov
bound
fistl
shlb
inc
aad
popa
lock
jbe
adc
push
and
mov
sub
pop
shl
stc
popf
xor
aaa
divl
pop
push
cli
push
js
popf
pop
mov
aam
pop
cs
jns
testb
iret
and
inc
or
out
out
sub
push
mov
notb
xchg
test
lret
sbb
fistl
dec
cmp
movsl
je
pop
hlt
bound
gs
xchg
pop
aaa
mov
dec
push
lods
pop
push
call
loope
movsl
xchg
jae
out
or
into
pop
cmpl
inc
xor
adc
mov
add
mov
push
add
push
and
inc
sahf
pop
dec
pop
shlb
mov
sub
add
mov
sub
jl
mov
js
push
daa
and
add
or
repnz
push
push
out
and
mov
jecxz
push
adc
and
xlat
pop
in
lods
jbe
inc
sbb
cmp
fdivl
lret
inc
pop
and
lock
incl
dec
flds
fcoml
inc
jno
or
add
sbb
mov
cmp
incb
mov
mov
popf
adcb
mov
sar
pop
cmp
int
icebp
xor
int3
and
repnz
pop
or
or
int3
xchg
leave
or
pop
lahf
aad
xor
xor
pop
arpl
repz
xchg
jle
jo
xchg
dec
fcomi
adc
dec
pop
mov
insl
ljmp
cmc
nop
pop
fldl2e
in
sbb
mov
std
leave
dec
in
xchg
ret
pop
push
fidivl
sub
ss
xor
movsl
dec
push
aam
fwait
cmpsl
test
fwait
inc
or
jae
fprem1
pop
jb
sbb
pop
adc
bound
mov
cmpl
pop
pusha
pop
cld
sbb
sbb
popa
lret
cmpsb
into
loope
push
repz
cs
inc
mov
daa
pop
mov
mov
ret
add
sub
sbb
cmp
test
fidivrs
popa
push
roll
jg
or
arpl
push
inc
cmc
pop
dec
pop
imul
test
mov
or
pop
cltd
mov
insl
xchg
push
pop
jnp
imul
mov
fidivs
je
mov
pusha
sub
ljmp
shll
jge
jge
nop
ret
jp
loop
or
incb
or
loope
pop
shll
jg
cmp
test
call
xchg
add
scas
mov
inc
push
decl
cmpsb
sub
cs
push
push
pusha
cltd
daa
sbbl
sar
mov
test
push
lock
mov
inc
jecxz
sbb
mov
jl
xchg
call
sbb
xchg
sbb
int
sbb
lcall
jo
push
and
xchg
xchg
xorl
cmp
in
pop
cltd
arpl
lret
cmc
mov
shrb
popa
push
jb
xor
mov
jl
jl
lahf
in
outsl
sub
shlb
adc
mov
popa
mov
incb
xor
nop
mov
aaa
inc
sub
ret
dec
inc
shl
fistps
xor
je
in
push
xor
rclb
lock
cmp
test
fistps
mov
test
sub
mov
jmp
cmc
push
or
in
cmp
fiaddl
xchg
lea
shlb
lea
mov
dec
xchg
jbe
jnp
xchg
xlat
lret
jecxz
mov
mov
rorb
call
jp
es
mov
pop
ret
xor
mov
mov
cmpsb
sub
sti
inc
fwait
sub
mov
out
fwait
jbe
in
pop
xorb
pop
lcall
loopne
add
mov
jno,pt
mov
mov
lea
fmuls
xor
popa
mov
cld
pop
xchg
fxch
pop
mov
sbb
sub
push
mov
neg
sbb
fldt
lods
sti
cs
fcoms
or
push
aam
test
or
jno
push
mull
mov
mov
pop
imul
sbbb
out
cmp
push
scas
cwtl
dec
cmp
idivl
loopne
fstl
mov
jno
lretw
sbb
jecxz
std
aaa
les
aad
outsl
rclb
rcrl
subl
xor
mov
cmp
sahf
sbb
lea
push
imul
mov
inc
test
mov
mov
inc
mov
nop
inc
sti
or
sbb
jnp
pop
fs
cmpsl
sub
mov
inc
ja
mov
mov
inc
lea
cltd
lcall
icebp
xchg
test
push
sbb
jl
pop
addb
push
push
mov
pushf
sub
movsb
and
lea
xchg
popf
pop
push
mov
adc
cmp
push
jge
ljmp
js
jge
arpl
and
imul
dec
mov
popa
adc
dec
loop
js
movsw
and
adc
idivl
pop
and
out
or
or
push
push
mov
in
aam
loope
pop
mov
bound
loopne
xchg
ja
lds
mov
and
lock
insl
adc
lock
mov
mov
xchg
mov
mov
mov
pop
sbb
sbb
cmp
lret
int
push
cmp
inc
pop
dec
adc
cmp
out
out
push
adc
hlt
pop
test
popf
add
icebp
sbb
push
popa
and
pop
dec
fwait
sbb
push
and
jmp
xor
fcoms
js
stos
outsl
aam
sahf
xchg
mov
mov
orb
ret
xor
es
sti
pop
jg
loop
repnz
sbb
mov
pop
imul
dec
clc
scas
sub
sub
jg
mov
std
or
mov
stc
mov
sub
dec
xor
inc
aas
add
sarb
scas
push
loopne
or
cmp
jge
stc
jns
hlt
and
xchg
sub
addl
lock
loop
nop
cmpsl
push
mov
outsb
inc
push
fisttpll
ja
lret
dec
push
mov
shl
jmp
addr16
loop,pn
fistps
pop
or
popf
int
idivl
inc
rclb
loopne
push
jbe
inc
mov
jle
xor
mov
sbb
imul
push
mov
into
enter
ljmp
arpl
outsb
pop
das
cwtl
loop
aas
jnp
push
pushf
aad
xchg
pop
dec
jl
andb
fwait
into
mov
test
mov
and
sti
jecxz
jo
cwtl
xchg
iret
rcll
insl
mov
xor
lods
pushl
pop
sbb
xor
sub
adc
and
push
imul
and
jbe
je
sub
xchg
adcb
add
and
addr16
sbb
xchg
mov
ja
cmp
cmpsl
jbe
push
xchg
sbbl
mov
adc
daa
mov
jne
cld
rcrl
sbb
lock
ret
outsb
data16
lret
cld
ret
and
scas
and
int
test
dec
sbb
outsb
jns
adc
gs
testl
mov
cmp
push
mov
pop
jno
cmpsl
out
ja
dec
lods
push
enter
test
jbe
fs
mov
sub
mov
inc
in
jg
adc
popf
lahf
jl
mov
mov
shlb
jns
mov
and
push
fsubs
mov
mov
das
xor
lahf
pop
rorb
cmp
cvtdq2ps
pop
cmc
stos
push
ret
fwait
lret
mov
loop
xor
lcall
mov
or
pop
jl
push
push
test
pop
inc
cmovnp
dec
and
or
adc
les
inc
inc
adcl
imul
inc
aam
push
je,pn
xchg
sub
lcall
jne
mov
and
les
cltd
sbb
fcmove
jl
cmp
sbb
sub
arpl
rorl
inc
cmp
sahf
sbb
jb
pop
movsb
dec
mov
pop
xlat
adc
subl
insb
mov
arpl
adc
inc
movsb
and
pushf
leave
xor
inc
mov
jge
jmp
jnp
cmp
les
fs
movsl
cld
dec
and
cmp
adc
lea
fxch
inc
jp
add
lret
test
xchg
push
arpl
push
mov
pop
xor
cmp
mov
cmc
jno
xchg
inc
int
outsb
les
rorl
mov
rcrb
pop
out
push
movsl
outsl
push
or
adc
push
cmpsl
dec
ret
fldcw
js
push
movsb
mov
out
movsl
dec
arpl
jns
xor
add
cmp
xchg
mov
adc
sub
fistl
call
and
mov
inc
add
xor
cwtl
scas
testl
in
jnp
enter
fmull
xor
push
fisubrs
xor
or
lea
jmp
les
pop
icebp
add
shrl
cmp
add
test
jmp
les
popa
pop
pushf
lods
in
sub
push
call
pushf
mov
push
popa
ret
out
rcrl
stc
mov
adc
call
aad
mov
leave
outsb
lock
imul
fyl2xp1
scas
dec
pop
jmp
loopne
sbb
push
nop
stos
movsl
pop
lods
xchg
cmp
nop
push
push
fcoml
js
mov
inc
mov
lahf
mov
lods
mov
push
mov
icebp
mov
sbb
ss
sub
xchg
js
sbb
pushf
ss
imul
sahf
cwtl
sub
call
add
mov
sub
pop
xor
push
gs
fldcw
orb
bound
sub
mov
add
aam
mov
inc
out
movsb
cmp
fsubrl
mov
clc
push
push
icebp
outsl
sub
jecxz
and
inc
cmp
xor
lretw
adc
lret
pop
mov
cmp
pop
add
or
xchg
xchg
sti
test
inc
out
xor
jg
sbbb
sti
dec
push
in
mull
lret
adc
pop
lret
cmpsb
jmp
sti
shlb
fs
cmp
mov
sahf
and
out
add
add
into
imull
lcall
push
inc
out
out
cmc
ljmp
xchg
push
bound
or
cmp
cmp
and
fmull
rorb
xor
iret
dec
fs
daa
xlat
add
mov
mov
in
les
pop
fs
imul
das
xlat
add
lret
inc
test
sbb
fdivr
out
mov
aad
xchg
and
mov
sub
arpl
push
icebp
lods
mov
xchg
cmp
das
and
stos
ljmp
ds
lcall
lret
sbb
movsb
xchg
in
shrb
rcl
inc
lods
outsl
xchg
xchg
arpl
sbb
je
fcos
icebp
mov
jo
cmp
jmp
push
sub
arpl
sbb
jmp
sub
cmp
add
and
cs
icebp
cli
mov
jnp
lods
sub
je
mov
inc
loopne
out
into
enter
xlat
pop
ficoms
push
cli
or
setae
inc
adc
mov
push
add
repz
jecxz
stos
lea
stos
js
push
sub
aaa
into
cmp
cli
xchg
mov
add
pop
mov
push
rorb
push
xor
sub
loop
fcoms
mov
xchg
and
sarl
add
pop
mov
jge
or
mov
test
stos
lea
je
or
mov
incb
jp
ret
and
sarl
cld
inc
sbb
push
rcrb
in
sbb
jl
mov
addb
into
cli
loope
rclb
cwtl
push
jle
pop
lea
enter
stos
adc
pushf
xchg
xchg
pop
mov
stos
arpl
test
ror
xchg
aad
mov
push
iret
call
mov
insl
xchg
xor
pop
xorb
mov
xchg
std
dec
and
stos
dec
xor
test
pop
or
gs
sbb
pop
cwtl
and
aam
out
popa
adc
test
cmpb
push
cmp
pop
jb
cmpsl
scas
fdivrl
stos
sbb
pop
lret
xchg
shlb
dec
cltd
roll
xchg
out
loopne
mov
mov
dec
push
inc
popa
das
dec
ret
mov
xor
jecxz
mov
test
stos
cmp
jb
mov
subb
lods
fsubs
and
cmc
int3
mov
pop
push
cmp
push
in
sub
or
pusha
mov
pop
ret
movsb
xor
test
add
mov
les
inc
pop
mov
jns
cmp
pushf
push
movsb
add
pop
mov
lret
jl
adc
push
iret
test
test
mov
sbbl
ret
push
push
mov
sub
mov
add
sub
imul
dec
inc
mov
xor
scas
lret
mov
mov
popa
fs
xor
scas
jo
stc
push
outsl
shrb
neg
lods
push
or
jno
inc
pop
iret
mov
cmpsl
pop
fidivl
mov
sub
imul
jne
fwait
lahf
inc
fcmovne
cmpb
imul
fs
ljmp
subl
push
insl
or
shlb
fistl
stos
std
push
out
push
inc
jbe
insl
jnp
jnp
mov
cmp
sub
sub
inc
inc
out
scas
or
in
ror
and
cli
add
cmp
stc
pop
mov
sub
rcll
or
cmp
sub
stc
push
lock
call
push
xchg
imul
ljmp
adc
mov
xchg
sbb
pop
jbe
mov
iret
lock
sub
mov
popa
shlb
aaa
ds
lods
cmc
shll
jns
xor
sub
pusha
xchg
out
sub
pop
sbb
lret
mov
push
test
sbb
push
and
jle
cltd
loope
pop
dec
lds
rorb
xchg
in
cmp
enter
add
or
loop
roll
imul
lret
inc
aaa
or
cmp
push
hlt
out
cs
push
pop
add
xchg
faddp
imul
push
insl
movsl
pop
or
out
mov
inc
jge
ja
bound
lock
shll
fadd
or
sub
aas
lahf
int3
adc
stos
sarl
cltd
in
addl
aas
or
stos
sbb
push
lea
cmp
sub
cmc
jns
adc
xor
in
xor
pop
out
xchg
xor
sub
dec
repz
inc
ret
addr16
pop
push
jg
aas
xor
jbe
pop
cli
mov
in
jns
loope
pop
fs
mov
mov
mov
xchg
mov
sti
push
cltd
mov
incb
xchg
or
mov
rorb
lods
daa
pop
aaa
add
jg
dec
enter
mov
jmp
mov
lds
mov
fsts
int
andb
icebp
adc
mov
dec
jbe
mov
push
sbb
das
dec
mov
mov
push
pop
add
cmp
jae
mov
mov
push
jmp
cmpsb
add
fildll
mov
or
adc
jne
aad
mov
mov
inc
jne
inc
mov
sbb
inc
pop
movsl
enter
nop
pop
sub
inc
int3
or
dec
das
lea
jae
outsb
mov
fistl
outsb
mov
mov
lods
xchg
jo
jae
inc
xchg
stos
push
outsb
adc
cmp
xchg
aas
jo
mov
call
rcll
arpl
mov
les
sub
push
adc
xchg
daa
mov
ja
add
cmp
jg
cmp
mov
lock
xor
psubw
push
and
negl
sub
inc
popl
inc
repz
mov
cwtl
add
popa
in
jecxz
add
inc
cli
and
mov
mov
aaa
adc
xchg
icebp
fisubs
pop
iret
addr16
stos
jle
push
inc
jno
mov
xor
inc
push
cmp
push
ret
cmp
xchg
jbe
fadds
movsb
popf
out
std
add
in
mov
or
cmp
popa
insb
push
testl
scas
xor
test
cmp
sbb
jne
dec
stos
jb
push
or
sbb
dec
add
aam
pop
lea
xchg
and
arpl
mov
fcmovnu
jae,pt
adc
ja
cmp
scas
dec
pop
movsb
mov
xor
lods
jmp
inc
xchg
movsl
mov
gs
jns
fdivrl
adc
cmc
add
xchg
inc
xor
jae
imul
lahf
std
data16
je
xchg
cs
pop
adc
sbb
xchg
mov
scas
lret
lds
addr16
mov
or
inc
mov
mov
dec
mov
out
sarl
fcmovnu
fisttps
xchg
in
cmp
loop
scas
jecxz
cmp
mov
ljmp
push
pusha
xor
mov
pop
inc
push
mov
mov
mov
imul
inc
pop
dec
sub
push
fnsave
sub
dec
push
jp
jnp
push
in
sbb
rorb
jle
not
fcomi
negl
scas
mov
xlat
lods
mov
fsubs
jmp
loope
jno
ds
movsb
bound
shll
lods
mov
fisubl
cld
pop
push
and
fdivrp
pop
add
dec
xchg
mov
lret
push
cltd
jbe
adc
jle
and
adc
movsb
stc
or
sbb
inc
in
ss
inc
jo
scas
sbb
add
and
dec
lds
repz
js
inc
pop
jecxz
movsb
push
pop
cmp
jne
cmpsb
aad
std
xor
fucomp
xlat
shlb
movsb
ss
mov
or
jb
dec
push
rclb
jmp
cmc
push
mov
sub
sub
and
adc
or
lds
lds
jmp
sub
test
lea
mov
jle
push
hlt
rcl
in
xchg
sahf
push
adc
in
inc
dec
or
outsb
dec
cwtl
xchg
lret
pushf
dec
sbb
aas
enter
outsb
fwait
popa
ljmp
pop
pop
mov
call
cwtl
fcmovne
xchg
adc
inc
jbe
and
mov
ret
jg
or
repnz
stos
mov
xor
lcall
outsb
adc
xor
xchg
imul
add
mov
jbe
cmpsb
std
into
lahf
out
pop
sub
shrl
aam
scas
cwtl
inc
in
decb
sbb
dec
movsl
jmp
dec
les
outsb
push
or
stos
jecxz
leave
cmpsb
and
mov
test
out
jno
dec
mov
pop
ja
cmp
outsl
mov
and
adc
es
enter
xchg
cltd
dec
ljmp
les
xchg
dec
jle
jle
addr16
sbbl
test
xchg
xchg
pop
mov
mov
adc
xchg
cmp
pop
into
cmpsl
shrb
xor
push
cmp
jno
dec
xchg
aam
fdivl
outsb
data16
mov
js
mov
dec
push
lock
dec
ficompl
push
sub
test
mov
cmp
daa
mov
lcall
shll
xchg
daa
cmp
loopne
dec
adc
push
pop
mov
mov
pop
cmpsb
push
movsb
bnd
adc
xchg
outsl
dec
pop
jbe
or
cmp
pop
rcrb
in
push
inc
ss
je
xchg
icebp
sub
mov
cmc
mov
jb
test
out
das
test
filds
test
dec
shr
stc
aad
mov
daa
add
inc
cmpsb
in
fxch
adc
mov
mov
sub
repnz
inc
sub
dec
push
add
jnp
push
and
jb
enter
out
lcall
nop
fimull
jge
lret
mov
jecxz
ja
cmp
xor
rcrb
jmp
stos
lods
mov
add
push
mov
add
fdivrl
xchg
les
stc
push
add
stos
inc
and
dec
pushf
loope
sub
fnstenv
push
jnp
jp
mov
dec
jb
or
sub
jge
jb
fists
sbb
add
xchg
addr16
xchg
lcall
cmpsl
sbb
lahf
clc
negb
jle
insl
fucomp
cmp
mov
repz
jge
pop
push
sub
jge,pn
scas
jle
and
sarl
mov
mov
sbb
mov
fimuls
loope
stos
sahf
adc
scas
jge
cwtl
mov
cmp
pop
cmpsl
mull
rcrl
fmuls
mov
popa
fs
les
cmp
sub
pop
enter
test
popf
pushf
xchg
push
je
inc
out
jne
cmp
mov
cli
dec
pop
inc
cmp
test
es
fsubr
test
mov
xchg
pusha
in
push
mov
mov
aad
jo
and
sbb
int
orb
out
xchg
sbb
cmp
rcl
bound
add
fidivl
dec
lahf
scas
andb
push
cmp
adc
fs
fidivs
mov
adc
push
pop
mov
out
stc
in
movsb
arpl
mov
push
adc
push
imul
gs
jae
test
add
dec
into
or
cmp
lods
out
sbb
xchg
jl
rep
xchg
nop
or
dec
ret
in
pop
hlt
or
jg
out
push
aad
bound
movsb
sub
xlat
mov
insb
add
xchg
mov
dec
mov
xor
cmp
cmp
mov
enter
push
rolb
mov
mov
aaa
in
cmp
test
pop
addr16
rorb
add
out
sub
xchg
arpl
in
mov
pop
fs
inc
jb
mov
sbb
inc
lret
ds
rcr
sbb
loopne
mov
cmp
clc
dec
lahf
push
out
push
mov
sbb
jge
fidivrl
push
mov
mov
jg
or
fimuls
fwait
xor
lods
add
or
xchg
or
sub
pop
clc
push
jb
idiv
call
adc
mov
nop
cs
adc
push
jp
or
sub
and
mov
jecxz
add
sub
mov
shll
test
mov
push
addr16
xchg
out
testl
lcall
gs
push
push
xor
lds
test
fwait
mov
shlb
adc
pop
and
pop
je
stc
lock
bound
mov
popa
mov
jmp
cmp
cli
or
and
sbb
jg
cmp
push
mov
rcrb
fistpll
fnstsw
incl
pop
outsb
aas
pop
dec
sub
aas
addr16
xchg
adc
test
push
insb
scas
push
jnp
test
fildl
ret
scas
cmpsl
pop
popf
fdivs
sub
xor
mov
mov
and
adc
xor
cltd
sti
movsl
add
mov
lcall
in
daa
mov
mov
pop
mov
mov
pop
ds
test
inc
jl
jg
jl
mov
mov
cwtl
push
ret
outsl
push
xor
sub
stos
fwait
mov
sbb
mov
pushf
rorb
sub
and
out
sbb
pand
js
cmpsl
in
cmpsl
outsb
xor
les
stos
notb
xor
adc
rcrb
inc
xor
mov
inc
stos
push
add
push
jp
xor
insl
mov
lods
add
nop
jl
lods
out
jbe
push
stos
fsin
ret
mov
xchg
jb
jge
lret
imul
mov
pop
mov
jp
xor
leave
jae
xor
jne
aam
sub
mov
inc
cmp
jns
inc
jg
js
add
jne
pop
jnp
fmull
jmp
aad
imul
xor
mov
test
das
lock
adc
xor
mov
int3
lret
mov
sbb
mov
adc
jge
sub
add
lea
iret
or
mov
push
jg
aas
xor
jno
and
add
out
mov
cltd
pop
mov
stos
fwait
les
push
push
jle
mov
mov
faddp
mov
scas
lods
testl
push
add
out
or
scas
mov
loop
test
psubsb
lods
out
mov
mov
jmp
cmc
test
inc
notb
cs
push
jl
and
xor
push
aad
jne
push
mov
pop
adc
add
sub
lahf
out
dec
in
dec
add
es
mulb
sbb
pop
dec
adc
arpl
mov
mov
bound
fisttps
jg
shl
fildl
xchg
mov
cmp
sbb
adc
xor
iret
xchg
mov
andl
mov
inc
xchg
mov
mov
adcl
or
sbb
push
mov
scas
loop
or
add
sub
mov
fmull
jmp
dec
jb
call
lcall
mov
out
call
lahf
loope
cmpsb
enter
mov
stos
push
mov
popa
int3
mov
adc
fwait
xchg
jns
loopne
std
fwait
mov
rcrb
fbstp
insl
fcomps
es
sub
movsb
mov
cmp
xlat
sub
insb
mov
cmp
rcrb
sbb
roll
inc
std
int3
xor
int
jo
lds
pop
jl
lcall
aaa
scas
es
sbb
stos
fwait
mov
cld
dec
popl
cmpsl
adc
xchg
inc
ss
dec
jb
mov
in
and
outsb
ljmp
add
aad
jg
test
adc
xchg
lcall
outsl
mov
cmp
adc
pushf
sbb
jp
testl
inc
fisttpl
mov
push
adc
jb
mov
int
inc
popf
sbbb
xor
mov
lea
cli
adc
jp
adc
push
aam
loop
sbb
and
test
adcl
es
jno
insl
sbb
cs
rcl
xchg
leave
mov
aaa
sahf
sbb
mov
fisttps
mov
cmp
pushl
sub
mov
add
bound
jne
aad
xor
mov
add
rorl
mov
out
jb
inc
pop
jo
dec
ljmp
jns
fsubrl
psllw
mov
cld
push
outsl
cwtl
jg
dec
cmc
imul
shr
subb
outsl
pop
dec
cmp
and
hlt
insl
cmp
pop
pusha
mov
jg
les
cltd
add
flds
in
enter
adc
call
pop
cmp
rcrb
icebp
xor
int3
out
fwait
dec
add
lret
xchg
inc
xor
push
loopne
mov
dec
jns
lea
mov
xor
pop
cmc
push
jle
ror
adc
in
xchg
jo
popa
into
xor
jmp
mov
xchg
andb
pop
es
adc
jp
negb
xor
sbbb
stos
popf
mov
cmp
jns
jne
lods
sub
dec
lcall
test
adc
mov
pop
in
mov
js
rcrb
adc
xchg
mov
sub
jecxz
add
subb
cmp
sti
roll
xchg
das
mov
mov
xor
sub
lock
ficoml
inc
testb
xchg
mov
jle
shl
das
xchg
popf
lret
hlt
fisttps
or
jmp
shlb
mov
xlat
mov
pop
das
inc
push
sbb
mov
pop
lea
jb
jl
les
sti
imul
stos
pop
jns
inc
movsl
roll
out
push
sbb
cmp
mov
mov
mov
pop
cmp
mov
add
lret
ljmp
pushf
add
fucomip
roll
jno
sbb
lcall
insl
loopne
xchg
mov
movsl
popa
dec
in
mov
mov
mov
jno
push
jo
nop
sub
jb
add
imul
dec
push
dec
pop
inc
ret
sbb
aam
pusha
js
icebp
shlb
repnz
shl
pop
lret
push
mov
mov
pusha
out
pop
inc
imul
loope
enter
cwtl
in
dec
popf
dec
jg
sub
adc
push
pop
mov
and
inc
ljmp
repz
xor
lret
clc
ret
mov
jns
repnz
stos
lds
ja
mov
das
and
lcall
scas
cmpsl
movsl
outsb
or
clc
mov
jge
cmp
adc
xchg
aad
ljmp
fmull
jecxz
xchg
dec
push
in
pushf
add
lds
pop
int
repnz
push
push
xchg
xor
fcomps
jne
jg
adc
in
fsubp
not
in
movsb
into
push
jae
pop
arpl
ds
fstps
out
stos
mov
cmpsb
ret
push
pop
mov
mov
rcrl
jmp
pop
pop
sub
adc
ja
mov
xor
insb
add
movsb
out
lea
pop
fiadds
inc
xor
scas
dec
ss
addr16
and
or
sbb
cli
mov
mov
loopne
in
je
mov
lods
lret
into
and
add
inc
stos
cwtl
xchg
cli
inc
sti
rcll
xchg
add
insl
add
inc
stos
push
loopne
fstpt
testb
xor
add
or
push
cli
ja
or
hlt
aam
fstp
in
fisttpll
sub
cmp
sub
add
cmp
js
insb
cs
dec
xchg
mov
mov
mov
xlat
and
sub
scas
and
adc
mov
and
jecxz
inc
push
insb
jp
and
jl
pandn
lods
popf
mov
lock
int3
rolb
sbb
inc
or
imul
pop
xor
xchg
mov
pop
mov
xchg
jl
addb
into
rorl
lahf
mov
sbb
aas
shll
add
test
std
push
adc
push
xor
mov
push
mov
int3
cld
lret
push
push
inc
loop
mov
test
pop
outsl
fucomip
sub
fistpll
mov
mov
cld
das
xchg
jns
cltd
jne
xchg
jecxz
int
popf
test
insb
mov
in
dec
fucomip
sub
push
je
jbe
and
nop
xor
movsb
ljmp
inc
sub
dec
in
loope
add
push
fwait
add
je
lea
je
adc
rcll
push
ss
out
dec
xor
push
ljmp
jnp
in
out
xchg
xlat
pop
xor
jmp
inc
int
adcb
push
xor
repnz
jno
mul
das
and
ljmp
and
sahf
jmp
fdivl
mov
or
shrb
ja
negb
xchg
mov
loop
rcrb
sbb
ret
filds
inc
in
test
sbb
test
xor
testb
or
imul
shlb
sub
cmp
dec
addl
and
push
push
mov
fisubrs
movsl
cmpl
bound
in
dec
ror
subl
andb
xchg
fidivrs
outsb
clc
and
and
cmp
les
xchg
leave
dec
aam
push
mov
push
rclb
sahf
mov
es
lahf
mov
addr16
cwtl
or
repz
clc
mov
out
jecxz
loopne
cmp
add
push
jns
add
mov
shll
cmp
lock
addr16
daa
inc
fucomip
push
imul
lret
adc
outsb
fisttpll
sbb
shll
lods
or
pushf
mov
popa
xor
insl
cli
test
adc
push
leave
es
sub
mov
cld
xchg
dec
out
stos
lret
dec
ret
sbb
lcall
cmp
fdiv
arpl
aas
mov
lods
push
pushf
cmp
sbb
addr16
mov
xor
daa
cmpsb
cwtl
arpl
sub
sbbl
mov
jge
adc
pop
mov
inc
cmp
push
rcrb
iret
aam
cmpb
sahf
push
pop
mov
or
dec
xchg
adc
dec
add
lret
xor
icebp
roll
fimull
idivl
in
dec
cli
gs
mov
jb
jb
stos
mov
sub
pop
mov
fadd
or
je
and
push
dec
push
int3
mov
jno
lcall
ljmp
mov
inc
sub
in
dec
popl
push
stos
js
movsb
in
adc
lods
mov
mov
orb
xor
dec
or
ficomps
pop
lea
mov
rcrb
out
fdivr
stos
hlt
sbb
cmp
jecxz
insl
repnz
xchg
push
pop
pusha
jmp
in
into
call
pop
sub
adc
push
jl
loopne
insl
repz
and
jecxz
hlt
fcomps
les
data16
sarb
mov
les
inc
ss
cmp
hlt
clc
les
mov
jo
mov
shrl
cmc
and
aas
ss
adc
dec
add
ret
imulb
cmp
jge
add
mov
iret
xor
cmc
push
push
das
mov
arpl
shufps
jnp
sti
sbb
outsb
mov
test
sub
in
push
mov
outsb
and
lods
mov
pop
mov
ret
pusha
mov
repz
dec
cli
push
xor
out
lahf
pop
das
sbb
jne
cli
cld
adc
adc
and
sti
lahf
mov
cmp
add
negb
fisttps
clc
pusha
mov
movsb
cltd
dec
dec
jns
or
dec
das
sub
test
jge
jg
cmp
in
xor
xor
lds
cmp
inc
xchg
fldln2
dec
inc
out
outsb
sti
cs
imulb
jnp
add
pop
lock
cmpsb
mov
out
cmp
lods
out
add
pop
and
loopne
shrl
adc
cli
sub
mov
lahf
das
jb
mov
sub
jle
int3
bnd
inc
or
movsl
and
cmpsl
pushf
in
ja
jno
cmp
shlb
cmpsl
es
enter
inc
adcl
in
pop
fadd
dec
mov
sub
out
shll
or
cmpl
pop
mov
cmpl
outsl
mov
cmp
lcall
xlat
adc
push
es
sub
mov
movsb
and
dec
shl
or
push
dec
lcall
ljmp
jmp
sbb
aas
mov
jae
ret
cmp
xor
mov
pop
jecxz
cmp
sbbl
aas
dec
stc
push
test
jns
xchg
push
repz
mov
dec
dec
adc
arpl
out
fcoml
insb
adc
sti
push
ja
in
mov
and
imul
jae
adc
jns
movsl
insb
call
mov
enter
xchg
jae
mov
adc
movsl
sub
add
jmp
sub
xor
and
mov
lea
push
rcrb
shr
xchg
or
dec
or
data16
sub
dec
and
and
daa
scas
shl
and
sbb
push
out
dec
mov
outsl
test
adc
out
in
jg
test
jecxz,pn
cmpsl
cmc
sahf
in
xchg
pop
push
mov
das
xchg
ficomps
pop
repz
arpl
jnp
les
or
mov
pop
inc
divb
rcl
inc
hlt
aad
rcr
push
pop
or
dec
and
and
jle
adc
or
decl
loopne
and
sbb
mov
nop
xor
std
lret
cmp
xchg
and
sub
sub
les
sbb
push
loope
add
enter
dec
xchg
clc
sub
ljmp
mov
inc
in
mov
xorl
and
mov
mov
sbb
mov
jle
lods
jmp
xchg
cmpsl
fists
ficomps
shlb
jl
cltd
das
std
rcrw
mov
aad
jnp
pop
insw
std
dec
fst
or
movsl
lcall
xor
sbb
jnp
xorl
popa
aas
xchg
stc
loopne
and
pushf
jns
addb
pshufw
push
xor
jno
adc
sub
roll
sub
inc
scas
push
ret
cmp
cltd
inc
movsb
lods
ss
ret
popf
cmp
mov
adc
mov
je
cld
das
insb
or
dec
subb
in
xchg
add
aam
std
add
stc
ljmp
ret
gs
test
leave
add
and
enter
cmp
and
xchg
fcompl
mov
cmp
sub
mov
call
jo
dec
jb
pop
mov
sbb
movsb
movsl
push
cli
mov
xchg
sbb
fdivrs
cltd
inc
and
hlt
and
push
lock
bound
ljmp
dec
ss
cli
leave
outsb
arpl
dec
mov
lret
dec
into
pop
mov
adc
mov
or
push
lret
mov
sub
inc
shll
arpl
fidivrs
sub
adc
lahf
push
cmpsb
aaa
push
test
inc
add
push
leave
cmp
sub
test
lret
mov
lcall
stos
pop
mov
daa
sbb
scas
xchg
ds
shrb
add
leave
arpl
adc
in
cmp
mov
push
inc
push
dec
xchg
xor
js
sarb
push
cmpsb
or
imul
jmp
inc
inc
pop
in
adc
sbb
clc
push
xchg
int
inc
mov
xor
pop
sahf
sub
mov
cwtl
shrl
or
rcl
push
sub
shlb
xchg
test
dec
std
outsl
iret
xor
inc
cli
xor
lahf
push
cmp
jbe
add
imul
push
sub
dec
mov
call
repz
xchg
das
adc
popa
pop
mov
jp
mov
cmp
iret
add
pop
repz
decl
sahf
add
imul
lret
mov
push
xor
cmp
and
inc
adc
pop
inc
call
inc
or
mov
and
xor
and
fsub
xchg
jb
dec
mov
push
sub
jo
lcall
xchg
add
enter
sub
mov
das
xor
sub
xor
adcl
xchg
push
jmp
xor
dec
and
push
mov
mov
xchg
data16
xor
mov
xchg
mov
int
and
sbb
push
jg
mov
nop
pop
cmp
xchg
mov
or
adc
push
loope
xchg
repnz
popa
outsb
in
cltd
push
fistpll
or
mov
pop
fwait
xchg
aam
es
adc
add
xchg
imul
xchg
mov
lahf
outsl
push
dec
lds
bound
pushf
cs
cmc
movsl
out
cmpsb
add
pop
or
add
dec
sub
test
inc
sbb
push
repnz
jg
pop
mov
popf
mov
xor
faddl
jp
inc
pop
jae
ret
adc
xor
sub
popf
mov
lods
outsl
pop
lret
push
in
inc
fildll
adc
pop
bound
xchg
cmp
shl
std
andb
inc
pop
test
add
cmp
into
mov
mov
jne
xchg
pop
cmp
rcrb
sbb
and
and
dec
fistps
xchg
sahf
test
cli
add
add
dec
ret
cs
insl
cs
ret
and
cmp
jbe
push
test
xchg
cmp
push
rcrl
inc
cli
aad
pushf
adc
leave
jmp
and
lahf
push
cmp
out
xor
fs
dec
mov
jecxz
sarb
dec
icebp
cmpsb
jne
sbb
dec
scas
push
dec
push
dec
and
push
test
ljmp
pop
sub
lcall
rcl
mov
scas
aas
sahf
mov
dec
adc
std
cmp
in
fcompl
jmp
push
fisttpll
and
out
ss
jne
inc
inc
lret
loope
sub
imul
fmull
mov
mov
dec
mov
mov
xchg
cmpsl
in
add
xor
or
fs
xor
add
mov
cld
fadd
adcl
call
fistl
push
arpl
bswap
adc
mov
outsb
stc
insb
in
inc
roll
inc
jmp
push
mov
pop
std
out
ja
pop
pop
xchg
push
fs
ret
fidivrl
shl
lock
pop
and
jae
loope
dec
call
add
ret
cmpsb
popa
xor
sub
stos
movsb
pop
and
sahf
rclw
add
add
dec
cmp
xchg
adc
push
mov
lret
cmp
stos
in
lock
shrl
cmp
scas
or
bswap
ret
out
sarl
mov
or
les
movsb
lea
sti
jl
fs
mov
sti
push
inc
arpl
ljmp
add
aad
mov
push
lahf
push
lds
mov
xchg
sbb
dec
ds
jo
mov
mov
sbb
jnp
test
dec
sbb
pusha
push
orb
pushf
push
subb
mov
and
inc
lcall
loope
adc
rol
xchg
pop
fimull
add
sub
jg
mov
push
push
pushf
ret
aaa
scas
lcall
daa
ss
dec
jg
mov
or
inc
xor
lret
mov
rclb
lods
movsb
cmp
push
hlt
adc
enter
inc
insl
jecxz
es
lods
adc
and
add
pop
sbb
movsl
jo
push
push
in
cmp
insb
repz
lods
and
jno
aam
lods
and
xchg
sbb
mov
leave
mov
jge
mov
xor
loope
mov
adc
inc
testl
fwait
xchg
mov
pop
cmp
in
sub
fnstsw
sbb
cmp
in
jl
pop
shrl
aaa
dec
xlat
inc
jb
inc
pop
enter
push
inc
rorb
xor
divl
mov
stos
test
mov
divb
jbe
pop
int
and
pusha
cld
pop
fmulp
sbb
call
mov
mov
shlb
push
stos
jnp
and
addl
and
mov
dec
pop
fistpll
orl
pop
repz
xor
pop
pop
aas
push
aam
pop
inc
test
mov
aam
push
clc
mov
xchg
cli
test
call
call
sbb
pop
mov
mov
nop
jecxz
ret
push
pop
shl
js
mov
ficomps
adc
hlt
and
popl
loop
scas
jge
sub
mov
push
inc
clc
mov
out
test
sbb
cmp
movsl
mov
ss
int3
mov
out
mov
test
leave
push
mov
adc
push
inc
stos
fsubr
dec
addr16
adc
insb
jecxz
data16
pop
in
pop
cltd
add
outsl
jb
insb
cmp
orb
shl
sahf
push
xchg
in
mul
mov
mov
mov
clc
lods
pop
cmp
pop
pop
cli
gs
fdivr
lahf
mov
roll
jne
clc
fildl
or
cmpsl
cld
negb
stos
fstp
or
adc
daa
roll
outsl
loope
loopne
sbb
adc
or
fildl
mov
sub
xorl
jp
inc
sub
mov
daa
insl
dec
pop
mov
in
idivb
rclb
ljmp
cmp
sahf
push
xlat
jno
cs
insb
shll
pusha
out
or
fmulp
jo
push
pop
hlt
mov
sbb
insl
movsl
sub
pop
in
in
pop
mov
mov
popf
push
jle
cmp
push
mov
repnz
xchg
je
xchg
sbb
adc
popf
pop
and
addb
cmp
adc
cmpsb
xchg
mov
xchg
jnp
ss
jo
cltd
xor
mov
iret
mov
sbb
sbb
stos
nop
fistps
sub
hlt
adc
mov
mov
cld
jne
fs
push
in
loope
div
repnz
ss
xor
loope
lahf
xchg
mov
inc
dec
addl
mov
data16
sub
leave
jle
in
into
or
cld
lret
push
clc
mov
sbb
aaa
push
sbb
inc
jecxz
pop
js
jnp
inc
dec
div
aas
dec
sub
xchg
jp
inc
hlt
push
neg
mov
aam
push
aad
movsb
add
adc
lcall
int
sbb
mov
daa
negb
mov
or
add
sbb
xor
ret
push
cmp
addr16
sub
mov
mulb
sti
add
dec
jg
xchg
pop
fstpt
daa
out
mov
jecxz
ss
in
pop
adc
add
sbb
sti
inc
hlt
aas
loope
jl
loope
sahf
and
movsl
adc
lahf
xor
mov
cmpsl
pusha
shlb
push
inc
in
jle
mov
jp
and
pop
sti
int3
lds
or
push
mov
pushf
ret
mov
pusha
test
mov
insl
mov
fidivs
dec
push
jno
fs
enter
imul
iret
cwtl
fwait
mov
lea
lods
bound
mov
cmp
test
imul
iret
jmp
ds
cmp
xor
jg
gs
je
loopne
jne
lds
mov
sbb
mov
xchg
nop
inc
add
push
jl
ja
inc
mov
mov
pop
shrl
test
pop
adc
push
loopne
outsl
sbb
inc
ss
test
inc
mov
pop
fists
mov
into
ficoml
pop
mov
cmp
cld
and
roll
and
add
mov
and
push
inc
xor
sub
into
ret
in
stc
push
sub
add
adc
int
daa
or
jmp
mov
test
inc
xor
cmp
pop
icebp
xchg
mov
dec
lds
cld
sti
xor
nop
lock
inc
js
pop
incl
ljmp
fdivr
ss
fnsave
dec
pop
imul
pop
add
shrl
out
mov
vmovupd
test
js
jne
aam
mov
movsb
stc
ffreep
pop
jb
cmp
popf
mov
dec
mov
aaa
pcmpgtw
out
and
mov
iret
rolb
out
lret
inc
popa
clc
or
repnz
js
imul
pop
push
adc
cwtl
stos
dec
and
std
ret
or
into
mov
dec
push
out
imul
test
test
out
in
sahf
pop
sbb
cli
lea
aas
lods
jae
push
add
pop
sub
jl
mov
lret
pop
fmull
and
push
and
rcrb
movsb
cmpsl
xchg
and
push
js
inc
inc
or
nop
xchg
mov
test
int
add
scas
pushl
or
jmp
lret
sbb
mov
insb
cli
sub
outsb
jle
mov
lret
lods
lret
sub
std
imul
rol
xlat
xchg
mov
dec
imul
dec
adc
addb
xchg
jp
lods
ljmp
mov
pop
dec
and
add
outsb
arpl
das
jnp
fdiv
mov
mov
mov
arpl
out
sub
aam
inc
cmpb
mov
mov
push
xor
loopne
movsb
sbbl
and
leave
ljmp
jle
or
mov
loop
pop
dec
add
lods
sub
mov
adc
xor
dec
sbb
push
pop
pop
lret
pop
ds
inc
ljmp
cmp
aaa
cs
add
adc
fisubrs
or
jns
sub
adc
push
repz
inc
movsl
mov
lret
jb
inc
int3
cmp
xor
call
xchg
push
stc
adc
mov
je
lock
jne
jbe
in
jno
sbb
lret
repz
enter
push
xlat
jnp
imul
inc
or
adc
addb
jbe
rorl
lods
loope,pt
mov
addb
cmp
outsl
xchg
push
out
movsl
insl
sarb
xor
mov
inc
jo
jno
cmp
mov
mov
jge
lds
mov
mov
stc
je
push
mov
cmpb
dec
add
jnp
mov
in
dec
sbb
xchg
mov
mov
jo
popa
out
pop
inc
lods
push
not
pop
jae
push
movsl
or
mov
shrl
add
cmp
fldcw
test
sub
mov
imull
leave
jmp
sbb
lahf
ret
lods
lods
rcll
jle
push
negl
push
outsl
test
dec
mov
aam
ss
lods
inc
pop
jg
cwtl
aas
cmp
add
or
push
scas
pop
and
mov
inc
ja
adc
call
mov
and
les
pop
pop
aas
push
xchg
xchg
cli
pop
mov
push
adc
sbb
arpl
and
arpl
lea
adc
insb
aam
lods
lcall
loope
test
push
add
shrb
lret
insb
scas
xchg
mov
and
push
imul
notb
dec
sarl
addps
pop
jns
xchg
mov
add
dec
sahf
sub
xor
aam
push
pop
jb
sbb
gs
imul
inc
int
inc
movsb
xchg
add
add
mov
cmp
pop
pop
mov
dec
xchg
mov
jno
fidivs
sti
cmp
out
aam
ja
fsubl
and
pop
subb
push
push
mov
call
sahf
adc
or
js
cmp
jle
push
loopne
and
sub
push
popl
out
mov
and
lahf
sti
mov
mov
push
aas
xor
or
loope
popa
xchg
add
cwtl
add
pop
das
fcmove
push
jmp
inc
xchg
data16
cmp
push
jnp
nop
mov
cmp
sbb
or
iret
scas
dec
icebp
outsl
testl
sbb
pop
call
mov
jbe
jmp
lret
adc
push
cmp
sub
push
and
jmp
adc
subl
dec
xchg
addr16
and
ja
test
mov
or
sbb
or
xchg
mov
jnp
jbe
and
movsl
les
adcb
push
jns
arpl
movsl
push
movsb
lods
ljmp
pop
push
repz
mov
int3
inc
and
outsb
aam
xchg
setbe
xlat
adc
inc
sbb
out
lahf
add
fbld
js
xchg
push
ljmp
dec
sub
imul
add
out
out
inc
enter
jmp
lds
mov
or
mov
std
cli
push
mov
mov
adc
pop
into
jo
adcl
and
cmp
xlat
outsl
jecxz
jns
push
test
stos
cmp
pop
shll
stos
mov
leave
shlb
xchg
mov
adc
xchg
xchg
popa
lret
mov
mov
lcall
mov
and
and
mov
aaa
mov
stos
fsubrl
cmpl
mov
xor
mov
jne
sub
out
test
subb
retw
mov
jmp
loope
rclb
jno
sbb
aaa
sub
adc
xchg
fdivr
pushf
push
enterw
hlt
loopne
mov
dec
dec
pop
shll
das
add
inc
cmp
out
mov
mov
dec
mov
notl
out
inc
adc
adc
pop
and
lock
sahf
mov
lock
xchg
lods
sbb
or
cmpb
mov
mov
or
sub
pop
call
movsl
xchg
outsl
ja
add
inc
repnz
push
fwait
xor
ret
sbb
sub
inc
out
lock
push
ja
dec
sub
lods
movsb
jns
and
jae
out
mov
nop
mov
mov
out
scas
cwtl
fdivr
shl
jb
les
imul
imull
int3
inc
push
sub
stos
enter
xor
dec
or
add
leave
pop
mov
int3
jge
adc
enter
lock
out
je
pop
xlat
aas
fcomps
sub
loopne
mov
lods
sbb
loope
adc
lret
inc
inc
addr16
sub
and
test
notl
fcomip
bound
jg
mov
andl
out
mov
jg
or
pusha
add
xor
dec
cmpsl
fidivs
loopne
icebp
xchg
xor
adc
adc
push
mov
pop
pusha
jg
jl
lahf
cmp
or
pop
aas
mov
insb
or
inc
pop
outsl
push
xlat
xorl
test
fcmovu
dec
mov
pop
push
push
pop
jge
iret
jge
cmp
mov
xchg
sub
lcall
fldt
jae
cmp
mov
iret
cmp
stos
sahf
fs
and
mov
jnp
pop
leave
leave
lret
ret
mov
aad
inc
xor
mov
add
les
inc
lcall
add
ret
sub
clc
lcall
js
push
add
fwait
loop
push
daa
inc
call
lock
dec
mov
jns
jns
outsl
cmpsb
idivb
es
pop
sub
enter
rcll
xchg
adc
ret
xchg
add
aad
mov
add
mov
mov
sub
dec
sub
imul
es
add
adc
add
sbb
iret
push
push
jge
mov
jecxz
pop
loope
pop
xchg
sub
test
mov
insl
fwait
imul
outsl
xchg
pop
loope
push
xchg
mov
jmp
push
or
fsub
mov
movl
aaa
arpl
lods
push
mov
pop
xor
mov
sub
stc
xchg
or
fisttpl
subl
push
cmp
popa
or
aaa
std
or
xor
fimuls
mov
add
pop
inc
orb
xor
mov
subl
lret
and
int
fcompl
cmp
call
dec
mov
push
xchg
adc
jno
xchg
mov
in
mov
and
mov
fcoml
test
outsb
sub
lock
lcall
fwait
pusha
pop
mov
repnz
mov
arpl
nop
push
pop
pop
dec
pop
jp
mov
cmp
outsb
push
jmp
arpl
les
ror
fimuls
pop
mov
pop
je
data16
ljmp
shll
jmp
xor
incb
sarb
jae
dec
test
cmp
pop
loope
jae
push
push
movsb
cmpsb
out
xlat
aad
shlb
xchg
sub
push
mov
push
dec
into
push
add
jmp
jnp
sub
lea
mov
adc
inc
adc
inc
rolb
icebp
sub
push
orb
ret
xchg
lds
dec
dec
aam
mov
add
jecxz
sub
not
mov
inc
add
into
sti
hlt
mov
shrb
repnz
aad
mov
pop
shlb
sub
cmpsl
mov
daa
aaa
add
adc
enter
std
ja
mov
sub
jge
and
inc
sub
js
into
cld
push
insl
hlt
test
popf
out
jae
leave
movsb
mov
adc
and
jno
pop
pop
dec
gs
cmc
cli
in
pop
scas
inc
pop
push
jae
jb
in
push
mov
inc
adc
insb
pop
pop
pop
fisttpll
add
hlt
dec
add
adc
cmp
fisubrl
add
push
std
test
dec
insl
adc
aas
xor
decb
jnp
dec
inc
sub
sbb
ss
mov
int
inc
notl
jp
xchg
aad
iret
cmp
dec
sbb
mov
popf
lret
mov
pop
jge
push
adc
aad
div
test
sub
push
mov
aad
inc
fistps
jno
add
pop
jp
dec
test
mov
loop
lahf
push
mov
sub
add
sbb
mov
cmp
push
fdivp
push
cmp
jae
jo
mov
xor
stos
cmp
mov
andb
mov
add
or
je
sti
mov
das
testb
cmpsl
xchg
sti
xchg
movsb
and
movsb
dec
jo
shll
jecxz
dec
dec
int3
shl
dec
cmp
push
scas
or
xorl
mov
gs
into
call
test
ljmp
inc
push
imul
aad
add
sahf
push
cmp
mov
rcll
sub
mov
jae
and
notb
sub
test
xchg
cld
push
nop
popa
xchg
fmull
les
fisttpll
add
stc
mov
add
inc
push
adc
je
out
sbb
lods
xor
and
inc
cmp
pop
mov
cwtl
out
das
das
loop
xor
es
lea
sti
inc
cltd
faddl
js
pop
sub
and
sets
dec
loope
jge
stos
pop
jae
mov
xchg
in
jae
dec
inc
pushf
jo
xor
shl
mov
and
push
push
push
xchg
inc
cwtl
addr16
or
mov
add
cmp
xchg
shr
les
nop
push
mov
stc
sbb
cmp
dec
rcrb
les
test
jb
div
jmp
ss
fwait
jmp
xchg
or
call
or
pop
hlt
xchg
cld
jg
iret
lret
repnz
fwait
in
mov
mov
mov
push
cmpsb
cs
push
shl
ficompl
movsl
sub
pop
movsl
mov
xchg
mov
das
xchg
clc
in
jecxz
mov
stc
sahf
cmp
push
out
hlt
and
pop
xchg
jmp
cmp
aas
mov
xchg
cmp
mov
pop
adc
xor
or
idivb
cmp
fs
dec
xchg
enter
mov
movsb
xchg
shll
iret
xchg
mov
mov
or
inc
mov
cmpsb
inc
popa
je
ljmp
jns
mov
or
in
shll
xor
rolb
xchg
xchg
rol
adc
lret
daa
subb
stc
ds
int
add
xchg
xchg
pop
cli
outsb
push
jge
loopne
adc
pop
movb
xor
ds
das
std
fcompl
inc
xchg
inc
cli
cmp
mov
rorl
jne
test
insl
lds
ljmp
nop
pop
mov
test
cli
mov
ret
cmp
cmc
dec
rol
and
ds
pause
push
rcll
lea
insl
add
ror
lods
push
addb
sti
push
pusha
out
outsw
fbld
out
and
cwtl
jno
xor
cmc
sbb
push
loop
pusha
in
xchg
xchg
xor
cwtl
inc
cmpsl
push
cltd
adc
sbb
fisubrs
inc
cmp
push
and
inc
fidivl
cmp
jae
mov
roll
shrl
lea
test
aaa
fnstenv
ljmp
sub
xor
sbb
lcall
call
aam
int3
je
sub
xor
xchg
or
fstl
cmp
sub
mov
in
mov
push
push
shlb
leave
movl
addr16
pop
movl
adc
jns
jecxz
pop
or
ja
cs
loop
mov
and
xchg
sbb
shlb
xchg
out
sbb
shrd
push
push
mov
dec
test
inc
push
std
orb
mov
jmp
hlt
mov
repnz
je
hlt
lret
adc
adc
loop
outsl
add
nop
jg
mov
cli
cmp
mov
mov
mov
pop
and
xchg
sub
push
xlat
mov
xor
jl
arpl
jl
aas
inc
flds
mov
in
fdivl
sbb
jo
fsubs
jg
dec
movsl
mull
lds
movsb
mov
dec
and
mov
cmp
std
adc
popa
xor
jae
incb
leave
fdivl
sbb
jge
push
push
ds
mov
pushf
out
shr
jae
inc
pop
push
sbb
or
jecxz
std
addl
or
cmp
xlat
ljmp
pop
mov
mov
cmp
add
mov
push
dec
mov
test
xorl
inc
cmpsl
mov
sbb
mov
sub
pop
jnp
icebp
scas
inc
fmull
pop
ret
iret
sbb
rcrb
pushf
or
cmp
mov
es
inc
jg
add
mov
push
cmp
insb
inc
jg
and
cmpsl
jge
or
imul
movsb
jo
pushf
pop
scas
jmp
mov
xchg
lret
jmp
sub
sbb
pop
or
rclb
cwtl
inc
dec
gs
xchg
lcall
daa
mov
popf
lods
inc
mov
or
andl
div
into
repz
lea
cwtl
or
add
sbb
pop
cmp
lret
outsb
jnp
fstpl
stc
outsb
pushf
mov
das
jb
xor
jb
pop
iret
minss
aam
mov
rolb
out
int3
fnstenv
scas
pop
dec
int3
sbb
sub
pop
icebp
shrb
lock
ss
int
insl
addl
movsl
pop
in
adc
xchg
fistl
jb
loope
sbb
call
push
gs
loope
xchg
pop
mov
insl
loope
fmulp
or
jns
add
leave
pop
sub
hlt
mov
aas
ljmp
dec
cmpsb
pushf
sahf
loopne
inc
pop
aas
pop
flds
rorb
mov
mov
xchg
aaa
pop
and
fs
inc
repnz
lea
cmp
ret
xor
dec
xor
add
sahf
xchg
and
cs
xchg
dec
jl
or
and
int
jae
pop
iret
mov
jb
push
pop
out
das
in
int3
pop
and
lcall
and
adc
add
cltd
dec
jmp
subb
jle
ss
or
js
jecxz
xchg
cmpb
adc
leave
push
pop
lret
adc
xchg
jge
dec
dec
push
jecxz
jle
test
pop
mov
mov
jecxz
dec
push
das
addl
stos
pop
lea
cmp
mov
pushf
sub
or
mov
es
mov
insl
fld
lods
movsl
enter
dec
mov
popl
rcrb
mov
ja
xor
cld
das
cmpb
jae
cmpsb
jg
xor
imul
pop
add
sti
and
jg
dec
push
aas
mov
mov
ja
shr
mov
cmpsb
adc
add
or
or
add
lock
cmp
sub
es
nop
push
cmp
loop
repz
pop
out
mov
or
pop
sub
loopne
aas
push
sahf
ret
xchg
outsl
jne
subb
or
ja
out
xchg
cli
and
mov
push
test
and
sbb
imul
aad
jge
clc
sub
popa
cmp
xor
adc
push
inc
imul
pop
cmpsl
add
adc
sti
neg
sub
js
pop
call
mov
cli
push
sti
nop
jg
pop
mov
fs
stc
lahf
adc
repz
fidivl
outsb
ret
mov
mov
imulb
pop
fbstp
mov
sbb
cmpsb
outsb
push
mov
xchg
fucomp
ss
push
fwait
ljmp
push
dec
lahf
add
in
inc
out
dec
mov
xchg
dec
inc
imulb
or
ljmp
xchg
cmp
fstps
fidivrs
sub
mov
push
cs
jp
gs
je
pusha
inc
test
sub
xor
pop
push
adc
cmp
bnd
inc
ds
cmovne
add
int
mov
mov
xchg
dec
cli
pop
pop
int
and
sub
fwait
rcrl
shrl
addr16
stos
xor
and
sbb
pop
insl
ds
popa
sub
lea
fmull
sbb
je
jnp
roll
sub
jmp
cmc
add
fisttpl
pusha
push
dec
sub
popl
dec
push
cltd
xor
pop
jge
out
cmp
mov
jg
into
les
jecxz
iret
or
lods
xorb
clc
pop
sbb
sbb
clc
pusha
loopne
stc
movnti
popa
in
adc
jno
aad
mov
jg
fs
popf
stos
push
dec
jae
or
jecxz
add
fdivrl
adc
dec
jnp
xor
cmp
sti
out
push
repz
rorl
add
dec
mov
mov
mov
daa
pop
aas
sbb
int3
dec
das
mov
mov
sbb
sbb
mov
sbb
fsubr
int
aam
out
push
jecxz
jae
push
xchg
outsl
movsl
jmp
xchg
int3
sahf
inc
inc
xchg
cmp
dec
cli
mov
ss
pop
scas
test
out
cmp
in
stc
inc
mov
imul
inc
inc
and
aas
test
loop
cs
orb
xor
dec
pop
js
cmp
push
mov
dec
sub
pop
pushf
insb
cmp
ret
and
gs
rcl
jp
mov
cmp
icebp
adc
jmp
notl
pop
xor
inc
jbe
mov
sbb
mov
test
icebp
loop
adc
mov
es
cwtl
dec
negb
int3
aas
out
cmp
idivb
popf
jecxz
fistps
sub
sahf
pop
cmp
cmp
mov
push
popf
incb
xlat
sbb
nop
add
mov
iret
cmp
jbe
adc
xchg
les
pop
or
call
mov
loope
mov
pusha
in
push
pop
sub
and
sbb
lds
sbb
popf
adc
and
pop
pop
dec
cltd
xlat
std
jae
jmp
inc
inc
xlat
inc
pop
dec
stc
sbb
fsubrl
mov
add
fs
ret
adc
sub
imul
ret
jae
iret
data16
inc
mov
mov
aam
xchg
addb
rcll
frstor
in
sti
push
fisubrl
fyl2xp1
test
mov
xchg
pop
mov
sub
xor
sarl
stos
adc
jmp
out
aam
jb
pop
inc
cmpsb
cmpl
jl
mov
movsb
push
jmp
movl
fwait
cmpsb
add
bound
jbe
xchg
jb
push
dec
xchg
jge
mov
adc
push
sub
mov
mov
push
mov
xchg
out
sub
adc
das
sbb
in
mov
dec
push
mov
sbb
lds
inc
stos
cmp
and
dec
push
xchg
shll
fiadds
mov
mov
cmpsb
setp
jg
mov
inc
mov
push
push
pop
daa
sub
fwait
leave
iret
nop
mov
in
ja
in
mov
inc
mov
lods
xchg
les
dec
jbe
pop
jmp
mov
jg
cmp
pop
jb
xor
imul
ds
adc
inc
mov
inc
mov
mov
dec
aaa
pop
push
rclb
or
stos
repz
or
stos
xchg
ror
xor
sbb
mov
stos
jecxz
mov
add
mov
jb
push
jle
imul
or
out
pop
adc
test
insb
inc
into
xor
stos
cmp
xchg
test
xor
xchg
hlt
mov
cmpsl
out
loop
mov
mov
or
fimull
add
fidivs
movsl
push
leave
xchg
sbb
xor
in
or
bound
std
in
xor
int
decl
push
and
cmp
jbe
cmp
add
sub
enter
or
lahf
sbb
mov
xchg
xchg
je
pop
xor
fs
out
mov
mov
dec
or
nop
inc
and
hlt
inc
ret
sti
inc
scas
hlt
add
xchg
enter
ret
xchg
roll
inc
xorb
pusha
jno
test
les
stos
jecxz
cmp
sub
push
adc
xorl
cmp
add
fs
call
or
xchg
cmp
leave
pop
push
mov
orb
shrl
ret
cli
ret
mov
or
jae
cmpb
mov
outsl
out
cmp
and
ret
pop
lret
lahf
sarl
jmp
xor
mov
mov
pop
fwait
into
xor
cwtl
fisubl
inc
mov
add
and
xor
ror
add
inc
and
adc
cmp
mov
inc
enter
sub
aad
ret
xchg
arpl
shlb
mul
or
leave
dec
imul
cmc
or
sbb
outsb
scas
fsub
mov
maxps
inc
jb
fs
inc
scas
daa
add
adc
leave
xor
dec
frstor
mov
arpl
andb
push
sub
cld
and
loope
or
fbstp
mov
jne
scas
xchg
pop
add
jecxz
mov
pushf
pop
jmp
fdiv
fnsave
sub
cmc
adc
dec
xorl
lods
sbb
into
fwait
push
mov
bound
dec
sbb
sbb
jg
mov
pop
mov
inc
jg
inc
xchg
mov
cs
lock
data16
rorb
push
shrl
in
sarb
mov
cmp
or
fwait
jnp
repnz
jle
xor
mov
mov
aad
pushf
push
xor
outsl
aas
lea
inc
mov
sub
jo
cltd
adc
lds
cmp
clc
int3
xor
icebp
fdivp
xchg
popa
es
mov
xchg
stc
xchg
in
mov
jecxz
insl
xor
lea
ja
jb
and
je
push
iret
rclb
and
pop
fwait
test
jnp
gs
ds
sub
out
in
sbb
inc
sbb
inc
out
pop
in
testb
dec
mov
int3
push
push
jae
bound
pop
push
sbb
add
or
jle
xor
cmpl
dec
lods
mov
movsbl
sub
lds
xchg
aaa
roll
xchg
mov
out
outsl
jns
pusha
fdivl
add
sahf
xor
and
imul
insl
push
cmpsl
pop
push
cltd
icebp
jp
imul
xor
sub
push
push
and
clc
repz
cmp
jbe
or
cmp
out
xchg
pop
xor
dec
loop
lds
push
adc
scas
or
je
aam
or
pop
xchg
imul
out
scas
xlat
pushf
sbb
or
push
aas
push
mov
xchg
pop
loop
mov
pushf
jp
inc
lea
arpl
inc
cwtl
mov
xor
mov
scas
push
sub
mov
sbb
inc
cmpsb
dec
cvtps2pd
push
movsb
pop
ja
mov
xchg
mov
mov
daa
add
lock
add
xchg
push
xchg
in
negl
pop
jmp
cmp
ror
test
in
sbb
adc
insb
sarb
pushf
mov
idivl
lret
les
les
outsb
mov
in
cmp
popf
lcall
mov
int
nopl
enter
jg
cmpsl
dec
mov
mov
or
push
xor
aas
push
inc
or
jl
adc
rorl
int3
and
cs
mov
loop
data16
add
jg
mov
mov
insl
xchg
pop
movsl
and
daa
jp
xor
sbb
mov
add
xchg
xor
test
or
outsl
into
test
sbb
xchg
jns
int3
adc
mov
icebp
test
jl
lods
inc
jle
inc
andl
imul
mov
ret
jp
inc
aad
mov
add
adc
mov
pop
cwtl
fidivs
push
xchg
push
ja
dec
and
mov
or
aas
mov
mov
cmp
xor
push
fsubrs
mov
add
and
js
in
ret
add
mov
subl
movsl
mov
clc
pop
enter
lcall
fwait
in
push
mov
and
clc
jle
cmpsl
out
push
and
inc
push
mov
xor
leave
fbld
idivl
cmp
dec
mov
jge
dec
mov
pop
and
fcmovnbe
scas
mov
jmp
dec
push
inc
inc
fsts
push
test
mov
sbb
xor
popa
js
adc
cli
sbb
xor
push
pop
stos
fnstenv
mov
sti
jmp
push
pusha
rcl
out
lret
and
dec
xor
pop
mov
adc
sbb
adc
mov
lods
adc
mov
jle
fwait
lods
cmp
or
enter
mov
sbb
dec
sub
pusha
jle
inc
pop
cwtl
cld
movsb
fnstsw
xchg
pop
popf
sahf
jae
inc
call
sub
repnz
mov
and
jne
ljmp
xor
leave
mov
sahf
adc
xchg
js
pop
xor
sbb
cmp
and
stc
insl
sbb
jle
push
xchg
or
mov
jmp
dec
inc
mov
and
adc
rcrl
out
xchg
sbb
negb
out
pop
xchg
rcrl
fdivrp
mov
adc
jp
enter
or
xchg
jns
pushf
xor
inc
mov
push
es
divl
sarb
pop
mov
mov
ret
inc
outsl
pop
enter
jmp
repz
hlt
hlt
scas
js
pop
pop
or
shl
leave
and
cwtl
rolb
jo
cwtl
cmp
ljmp
movsl
xor
jnp
imul
dec
in
subb
xchg
xor
push
and
mov
movsl
int
cmp
add
mov
test
add
pushf
inc
and
xchg
mov
sub
sbb
dec
test
imul
jl
or
popf
adc
mov
fisubrs
xchg
jo
cmp
mov
adc
cmp
cmp
xchg
loope
je,pt
insl
in
mov
cmp
or
cmp
lea
push
mull
loop
push
mov
nop
cmpb
out
divl
stc
jae
das
xor
sbb
mov
add
inc
sub
and
xchg
mov
or
sbb
movsl
mov
addr16
mov
movsl
stc
add
test
cmc
test
cwtl
lock
and
mov
pop
repnz
jo
pop
cmp
roll
cmp
aas
add
dec
iret
lret
xchg
dec
and
xchg
mov
sbb
push
sub
mov
clc
adc
xchg
push
xor
pop
cli
leave
sbb
xor
fldenv
xlat
repnz
fimull
fucomp
push
mov
sti
xlat
or
clc
mov
lock
xor
fwait
jae
inc
pushf
inc
dec
push
and
in
push
adc
ljmp
cld
stc
sbb
sbb
dec
push
cmp
aad
or
sbb
hlt
mov
inc
leave
pop
inc
std
ss
sahf
mov
or
gs
push
iret
xchg
nop
mov
rcr
pushf
in
pop
pop
cld
push
das
pop
movl
mov
pop
shrb
pop
adc
xchg
or
mov
sahf
outsb
jo
jg
lret
icebp
clc
inc
mov
cmp
mov
cmp
xchg
in
test
jo
insl
fs
das
aas
pop
and
sub
aas
pusha
or
mov
cmp
mov
mov
popa
mov
lahf
push
sub
shrb
stos
pop
push
gs
aaa
ret
fldt
mov
sbb
test
dec
dec
mov
jle
std
mov
xchg
mov
lods
jmp
lods
cltd
stos
repz
out
xor
mov
shlb
sti
mov
mov
inc
in
nop
jge
test
sbb
iret
clc
leave
adc
gs
hlt
xchg
jne
and
fbld
xor
loopne
xchg
jns
out
pushf
fsqrt
mov
mov
test
fisubs
popf
xchg
sbb
adc
or
into
pop
adc
mov
adc
pop
sti
imul
mov
xor
ds
or
jge
mov
loopne
mov
add
inc
lret
out
in
lret
xchg
mov
inc
dec
lods
int
mov
sbb
dec
lret
out
add
adc
aas
movsl
in
movsb
outsb
xchg
scas
hlt
pop
lock
cwtl
mov
mov
cmp
and
jne
and
mov
adc
movsb
push
jp
loopne
mov
lcall
jecxz
xchg
call
sub
cmp
dec
dec
aas
adc
mov
and
popa
mov
outsb
popa
mov
movl
mov
pop
or
cmp
pop
inc
mov
dec
insb
daa
sub
dec
dec
xchg
imul
and
jmp
dec
inc
lret
jo
pop
adc
sub
push
in
mov
jecxz
xchg
daa
xor
adc
lods
adc
jne
rolb
out
or
pop
xchg
xor
jne
js
movsb
push
xchg
scas
mov
test
mov
cwtl
sub
movsb
sub
sub
cltd
arpl
push
orps
fucomi
mov
ljmp
jnp
push
addr16
pop
fwait
lret
dec
xlat
sbb
xchg
test
adc
fdivl
ljmp
in
jge
test
dec
outsl
fwait
push
leave
cmc
xlat
ret
push
iret
mov
rcrl
testl
inc
imul
xchg
mov
pop
add
call
add
or
and
sub
and
dec
jg
jg
lock
mov
jg
dec
stos
loopne
pop
mov
mov
pop
cld
das
mov
add
shll
inc
or
clc
outsl
adc
ljmp
aad
icebp
scas
sub
sbb
ja
cmc
popa
sub
mov
push
movsl
lods
dec
push
loop
pop
lea
nop
and
pop
adc
test
inc
subb
mov
ror
sub
dec
es
mov
loop
xchg
lret
xchg
xlat
sbb
data16
mov
push
pop
mov
int
lahf
sub
sbb
pushf
sahf
mov
adc
lods
call
push
cmp
sti
cmp
sbb
push
outsl
mov
xor
push
cmc
sub
pop
rorb
adc
xchg
lods
dec
in
or
mov
int
xor
fmuls
sahf
rcl
add
movsb
pop
test
es
fs
push
dec
andl
xor
ds
cltd
jno
sub
adc
xchg
inc
and
fisubl
aas
lcall
xchg
pop
sbb
sbbb
test
cmc
adc
loopne
dec
daa
enter
cmp
jns
pop
push
pop
mov
or
dec
repz
mov
ljmp
pop
cmp
xor
adc
in
mov
xchg
cli
sti
outsl
xor
jb
xor
and
aam
test
mov
jno
push
dec
xchg
push
add
mov
loopne
or
xchg
ljmp
pop
arpl
jg
pop
outsb
bnd
mov
inc
aaa
mov
loop
sbb
shr
mov
jnp
negl
xchg
push
dec
enter
sub
jno
mov
adcl
add
jl
inc
out
xchg
and
clc
mov
sbb
cmp
fisubrs
add
test
or
fucom
rcrl
outsl
push
mov
pop
aas
add
adc
push
jno
inc
ljmp
dec
mov
add
jbe
cmp
stc
dec
cld
mov
cs
loope
add
cmp
outsb
pop
push
scas
arpl
push
jns
cmp
add
fdivs
jge
pushf
loopne
push
lods
jl
jb
out
daa
mov
mov
pop
jecxz
test
xchg
jb
pusha
es
pop
enter
outsl
in
or
adc
adcb
xchg
pop
test
xchg
push
cs
lods
out
xor
fsts
insb
movsb
pop
faddl
or
ljmp
sarb
es
sahf
lret
es
mov
jecxz
aad
and
jb
cmpsl
adc
pop
mov
inc
and
test
fcoml
xlat
test
test
je
push
mov
fmull
jns
mov
fwait
pushf
mov
or
sub
testb
xor
cld
ljmp
cmp
pop
out
bound
sub
js
cmp
push
adc
lahf
pop
out
dec
pop
and
pop
inc
out
loop
orl
and
fwait
inc
dec
cmpxchg8b
test
xchg
mov
daa
test
adc
push
adc
fcoms
repnz
out
xchg
scas
imul
pop
or
mov
cli
and
aas
lds
adc
mov
and
in
repnz
lock
ret
fnstcw
dec
or
fimull
xor
push
lahf
jl
sbb
cmp
pop
mov
pop
mov
fidivrs
in
xor
cld
mov
add
inc
push
mov
pop
push
imul
test
clc
push
shrb
xchg
pop
cli
dec
jp
test
rcrb
push
push
std
cmc
push
outsb
stc
je
xor
mov
ljmp
cmp
fildl
rcll
cmp
call
ja
loopne
inc
xchg
cmc
pop
xchg
test
sti
bound
fidivrs
enter
mov
xchg
scas
int
les
push
lds
ja
inc
mov
adc
cmp
or
sub
cmp
inc
cmpsb
jmp
movsb
pop
cmpsl
mov
insl
xchg
outsl
test
sbb
pusha
mov
data16
add
aaa
adcl
dec
dec
cmpsl
jge
in
and
jmp
mov
mov
sub
cmp
cmpsb
mov
xor
dec
addr16
sbb
mov
sub
xor
movsb
and
lea
out
cmp
movsl
mov
clc
inc
mov
fwait
mov
xchg
test
sbb
or
mov
hlt
in
icebp
ds
mov
xchg
push
jmp
cld
mov
jge
jmp
testb
das
rcll
iret
mov
daa
pop
hlt
dec
addr16
cmovns
incl
clc
nop
stc
xchg
xor
jae
inc
xchg
in
mov
mov
fdivs
loopne
je
push
inc
cld
fbstp
fbstp
mov
mov
rcl
and
lret
rcll
dec
adc
cs
pop
sbb
cmpsb
popa
xor
mov
jge
cmp
test
dec
inc
mov
lret
pop
enter
adc
aaa
icebp
fucomip
rcr
mov
cli
scas
sti
test
pop
mov
popa
sahf
cmp
aaa
pusha
ret
sbb
int3
cwtl
incl
adc
jg
lods
loopne
rorl
push
test
loopne
test
imul
and
xor
lahf
es
scas
in
push
mov
push
dec
push
test
add
out
adc
cmp
ja
mov
or
cmp
pusha
jmp
ficoml
clc
xchg
mov
popf
std
and
test
xchg
movsb
mov
jne
cmpsb
iret
and
adc
cmp
jg
lea
jg
scas
aas
mov
lods
and
gs
fs
cmp
fimull
pusha
and
ss
mov
fimull
or
pop
xchg
test
dec
add
add
scas
cmp
add
enter
test
pop
mov
js
leave
inc
arpl
dec
outsb
adc
xor
jecxz
stos
enter
jge
mov
mov
clc
sub
enter
lret
mov
das
test
test
xchg
mov
int
test
bound
push
inc
je
lret
sbb
mov
inc
std
pop
xchg
insw
inc
xor
jl
outsb
mov
mov
les
cmpsl
outsb
popa
dec
nop
rorl
loop
jno
outsl
mov
cpuid
adc
inc
rorb
cld
push
adc
mov
add
fcmovu
scas
popf
cmpsl
or
addl
ds
and
scas
mov
cmp
leave
movsl
push
xchg
adc
pop
mov
jnp
and
mov
ljmp
repz
outsb
mov
es
adc
fistpl
loop
xor
pushf
cmp
rcrl
push
int3
push
xchg
mov
mov
mov
add
inc
mov
imul
dec
into
lds
hlt
dec
movsb
lods
rcll
add
into
push
push
sbb
mov
popa
pushf
cmpsb
jg
imul
movl
andb
xchg
xor
dec
inc
arpl
ja
out
stc
popf
push
cmp
in
cmp
mov
push
ds
cmpsb
mov
jne
movsb
call
fs
cs
mov
shrb
jnp
js
xchg
sbb
dec
cmp
repz
outsb
loopne
aad
gs
mov
iret
sbb
add
clc
je
dec
in
and
or
dec
jl
test
int
in
notl
and
imul
stos
pop
pop
mov
stos
scas
xchg
or
sub
adc
addr16
mov
subl
leave
in
mov
inc
in
pop
testl
arpl
nop
jo
xchg
jmp
cmp
shll
pop
fmul
fistpll
cmpsb
adc
scas
sub
insl
jnp
mov
mov
movsb
aad
xor
sahf
jae
bnd
pop
fisttps
adc
xchg
jp
enter
out
into
mov
stc
mov
sub
mov
cmp
pop
rcr
jecxz
sti
mov
clc
aad
mov
movsb
sub
mov
ja
jl
icebp
cmp
lock
divb
push
lods
push
iret
ljmp
or
jmp
mov
or
pop
subb
std
pop
push
ss
push
mov
mov
lock
mov
mov
test
push
roll
and
adcb
xchg
inc
cmp
mov
in
mov
mov
iret
or
in
les
xor
mov
push
les
mov
mov
and
stos
mov
jae
cli
inc
sbb
mov
jb
sbb
and
std
pop
flds
in
arpl
xchg
cwtl
fcmovnb
mov
pop
xor
shrl
lahf
xor
ret
sbb
and
dec
mov
xor
pusha
mov
jnp
scas
add
cmc
and
cmp
int3
mov
into
fs
sbb
pop
push
test
dec
add
jns
sbb
adc
mov
xchg
nop
pushf
add
repz
jmp
das
and
sub
cmovl
xchg
adc
popf
inc
imul
popa
test
out
cmp
xor
leave
ficoms
inc
stos
cmp
jno
fld
sub
mov
lock
lods
imul
adc
jne
sarb
loop
out
not
sbb
xchg
push
cltd
mov
and
sbb
pop
or
mov
sti
insb
mov
xor
dec
hlt
or
shr
jo
cld
mov
movsb
test
push
insb
sti
push
sub
jl
fistl
or
xchg
inc
ret
test
or
mov
cltd
cmp
addl
imul
xchg
imul
rorl
mov
fsub
pop
das
xlat
and
mov
stos
ja
popw
push
fwait
dec
fsubrs
ljmp
hlt
add
sbb
enter
mov
xlat
out
pop
out
test
jmp
movsb
fbld
test
jg
js
jmp
