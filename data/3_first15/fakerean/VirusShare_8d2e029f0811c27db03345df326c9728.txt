pop
ret
int3
int3
int3
int3
int3
int3
mov
mov
cmp
push
je
cmp
je
inc
add
mov
pop
add
add
or
add
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
lea
test
je
mov
mov
push
call
mov
mov
xor
pop
ret
cmp
je
test
je
xor
mov
mov
mov
pop
ret
mov
cmp
add
mov
cmp
jne
mov
cmp
jne
mov
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
push
call
mov
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
lea
jmp
int3
int3
push
mov
and
sub
push
mov
push
push
lea
mov
mov
push
push
call
mov
mov
lea
lea
push
rep
call
mov
fldz
mov
add
fstl
lea
fstpl
push
push
lea
push
push
mov
call
inc
add
add
push
push
call
mov
mov
mov
add
call
cmpl
mov
mov
jne
fldz
mov
fldl
fcom
fnstsw
fstp
test
jne
fldl
incb
fcom
fnstsw
fstp
test
fldl
jne
fld
fadd
fcompl
fnstsw
test
jp
test
fstp
fstp
mov
faddl
fildl
jl
fmulp
sub
fstpl
call
fnstcw
add
movzwl
or
mov
fldcw
fistpll
mov
cmp
fldcw
jae
push
push
call
pop
pop
pop
mov
pop
ret
fldl
fldl
fxch
test
mov
fildl
jl
fld
push
fmulp
lea
fxch
lea
mov
fstpl
fld
fmulp
fxch
fstpl
fld
fmull
fstpl
fmulp
fstpl
call
test
je
fldl
pop
fstps
pop
fldl
pop
fstps
fldl
fstps
fldl
fstps
mov
pop
ret
fldl
fldl
fldl
fxch
jmp
mov
andl
mov
push
pushl
mov
call
pop
mov
mov
xor
pop
ret
push
mov
push
push
xor
cmp
je
xor
pop
leave
ret
cmpl
mov
push
mov
jne
cmp
jne
lea
orb
testb
jne
mov
push
mov
mov
push
call
mov
mov
mov
call
mov
mov
mov
push
mov
mov
call
push
pushl
mov
call
test
js
mov
cmp
je
xor
inc
pop
pop
jmp
cmpl
jne
jmp
xor
jmp
push
mov
sub
push
mov
push
push
xor
mov
call
mov
push
lea
call
and
lea
push
lea
mov
movl
mov
call
xor
cmp
je
push
lea
mov
call
mov
lea
push
push
call
mov
xor
call
push
lea
je
inc
add
lea
xor
call
and
and
lea
mov
push
mov
lea
movl
movl
out
add
mov
mov
test
jne
pushl
lea
call
andl
andl
lea
push
mov
lea
movl
movl
std
inc
add
mov
test
jne
pushl
lea
call
lea
xor
call
lea
xor
call
lea
xor
call
lea
xor
call
lea
call
xor
pop
pop
pop
leave
ret
mov
mov
mov
cmp
sbb
neg
ret
int3
int3
int3
push
mov
and
sub
push
push
push
mov
push
lea
xor
mov
mov
mov
lea
call
test
je
lea
call
cmp
je
mov
mov
mov
push
call
jmp
lea
mov
mov
lea
call
test
je
lea
call
cmp
je
mov
mov
mov
push
call
jmp
lea
mov
mov
lea
call
test
je
lea
call
cmp
je
mov
mov
mov
push
call
jmp
mov
cmp
je
call
mov
mov
cmp
je
call
mov
mov
cmp
je
call
mov
push
call
push
call
add
push
call
pop
pop
pop
pop
mov
pop
ret
push
mov
and
push
decl
cmpl
push
je
pop
mov
pop
ret
mov
test
je
push
mov
call
jmp
push
mov
call
testb
je
push
call
pop
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
test
push
je
inc
add
mov
outsb
sbb
int
pop
or
lea
mov
call
mov
lea
push
mov
add
call
mov
test
jne
push
push
call
add
test
je
mov
movl
lea
xor
movl
call
mov
test
mov
je
mov
mov
push
call
cmpl
je
mov
mov
mov
mov
call
mov
test
je
mov
mov
push
call
mov
test
mov
jne
mov
mov
mov
add
test
mov
jne
push
push
call
test
je
test
je
mov
mov
push
call
mov
mov
test
je
mov
mov
push
call
mov
test
mov
jne
mov
push
push
call
mov
test
je
addl
mov
test
mov
jne
mov
mov
mov
test
jne
mov
add
add
xor
lea
and
xor
call
xor
pop
pop
pop
pop
ret
mov
jmp
lea
movl
mov
mov
push
push
call
testb
jne
mov
mov
mov
push
mov
call
jmp
mov
push
mov
call
jmp
mov
push
mov
call
jmp
call
jmp
mov
mov
xor
push
mov
call
jmp
push
mov
mov
test
je
cmpl
je
push
mov
test
je
mov
push
mov
push
mov
call
test
js
mov
test
je
movzwl
mov
push
pushl
mov
call
mov
cmpl
jne
mov
mov
call
test
jne
mov
mov
call
andl
push
mov
lea
call
mov
mov
test
je
movzwl
mov
push
pushl
call
mov
mov
call
lea
call
jmp
xor
pop
pop
pop
ret
push
mov
test
je
push
push
push
mov
push
xor
lea
push
mov
mov
mov
push
push
call
cmp
jne
push
mov
call
lea
mov
mov
call
mov
lea
call
lea
mov
call
mov
lea
call
push
call
pop
pop
xor
pop
pop
ret
mov
test
push
push
mov
je
push
push
mov
call
push
mov
call
mov
push
push
call
pushl
mov
call
pop
pop
ret
push
call
pop
test
je
call
test
mov
je
mov
push
call
mov
jmp
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
push
push
push
mov
mov
xor
cmp
mov
je
mov
mov
push
call
mov
mov
lea
mov
mov
lea
lea
push
mov
push
mov
mov
movl
movl
mov
call
cmp
jne
mov
add
call
inc
add
cmp
je
mov
mov
mov
lea
push
mov
call
mov
cmp
mov
je
push
mov
lea
mov
call
mov
cmp
je
test
movl
mov
mov
je
add
mov
mov
mov
mov
mov
mov
movsb
add
inc
and
test
jne
test
jne
lea
call
lea
call
push
push
lea
push
push
push
movl
movl
mov
call
mov
add
test
jne
test
jne
lea
call
mov
test
jne
test
jne
mov
pop
pop
pop
pop
xor
call
add
ret
mov
add
push
call
add
test
jne
push
call
add
jmp
int3
sub
push
push
push
push
mov
xor
cmp
jne
mov
mov
call
test
je
mov
mov
cmp
mov
jne
cmp
jne
mov
mov
mov
mov
test
mov
mov
jne
mov
test
jne
mov
mov
mov
cmp
mov
jne
mov
mov
cmp
jne
or
mov
test
jne
mov
mov
mov
mov
push
call
orb
pop
pop
pop
pop
add
ret
mov
mov
and
xor
or
jne
test
je
orb
jmp
mov
mov
sub
cmpl
mov
mov
mov
mov
jne
mov
add
mov
mov
mov
lea
push
push
call
lea
lea
call
mov
push
push
lea
push
mov
push
push
call
testb
jne
mov
push
mov
lea
push
push
push
call
add
jmp
mov
mov
add
mov
mov
mov
mov
sub
mov
lea
mov
mov
push
push
mov
call
lea
lea
call
mov
push
push
mov
push
push
push
call
testb
jne
mov
mov
push
lea
push
push
push
call
add
jmp
testb
jne
movl
jmp
mov
mov
mov
xor
cmp
mov
jne
cmp
jne
mov
mov
sub
sub
add
sub
add
mov
mov
cmp
mov
jne
mov
mov
sub
sub
add
sub
add
mov
mov
test
mov
je
push
lea
push
push
push
call
mov
mov
add
cmpl
je
mov
test
je
mov
mov
push
lea
push
call
mov
mov
mov
cmp
jle
mov
cmp
mov
jne
cmpl
jne
mov
sub
add
mov
mov
test
je
mov
mov
push
lea
push
call
mov
mov
cmp
jle
mov
cmp
mov
jne
mov
sub
add
mov
mov
push
lea
push
push
push
call
add
jmp
xor
jmp
mov
test
je
xor
push
lea
push
push
push
mov
mov
mov
mov
call
add
jmp
push
mov
mov
sub
push
mov
push
push
lea
lea
movsl
movsl
movsl
lea
movsl
call
test
je
andl
pushl
push
pushl
call
add
cmpl
jne
pop
pop
pop
leave
ret
cmpl
movl
jne
lea
push
mov
call
push
mov
call
push
call
pop
jmp
cmpl
jne
lea
push
mov
call
push
mov
call
push
call
pop
jmp
mov
movl
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
mov
mov
test
push
mov
push
jne
mov
test
jne
test
jne
lea
xor
mov
call
mov
lea
mov
lea
mov
mov
call
cmp
jne
test
je
mov
mov
movzbl
and
neg
sbb
add
cmp
jb
mov
mov
push
lea
push
push
push
movl
call
test
js
cmpl
jne
xor
cmp
mov
je
mov
jmp
mov
mov
test
jne
mov
mov
mov
lea
push
push
push
call
test
js
add
cmpl
jne
cmpl
jne
jmp
mov
mov
lea
push
push
push
call
test
js
cmpl
jne
push
lea
movl
call
mov
mov
lea
push
push
call
test
js
testb
mov
je
mov
mov
push
push
call
mov
push
xor
mov
lea
mov
call
mov
cmp
je
testb
mov
je
mov
mov
push
push
call
mov
lea
lahf
add
push
and
lea
mov
movl
movl
movb
add
add
inc
push
js
mov
mov
call
mov
push
lea
push
push
mov
call
mov
test
je
mov
add
push
call
add
test
je
lea
call
lea
call
lea
call
xor
pop
mov
pop
pop
pop
xor
call
add
ret
push
mov
and
sub
mov
xor
mov
mov
push
mov
push
mov
push
mov
push
push
push
push
mov
mov
mov
call
mov
movl
andl
or
cmp
je
mov
push
call
test
je
mov
mov
testb
jne
push
lea
push
call
test
jne
cmpl
je
lea
push
pushl
mov
pushl
push
call
test
je
lea
push
call
test
je
andl
mov
lea
call
lea
xor
call
lea
xor
call
lea
add
call
mov
mov
pop
pop
pop
xor
call
mov
pop
ret
add
mov
mov
mov
xor
add
lea
mov
mov
push
push
mov
mov
mov
call
mov
test
jne
pushl
lea
push
push
pushl
push
lea
push
mov
call
mov
mov
mov
andl
test
jne
add
mov
andl
test
jne
push
push
lea
push
call
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
xor
cmp
push
mov
mov
jne
push
call
add
cmp
je
push
mov
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
push
push
push
call
mov
mov
mov
push
call
pop
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
lea
mov
or
lock
dec
je
pop
ret
movl
mov
test
movl
movl
movl
movl
je
cmpb
jne
movl
push
call
add
xor
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
push
movl
call
add
cmpw
je
xor
pop
add
ret
cmpw
jne
mov
mov
call
test
je
push
mov
push
call
add
test
jne
mov
push
call
add
test
je
push
mov
mov
test
je
mov
push
mov
lea
movl
call
mov
test
je
mov
mov
push
call
test
je
push
lea
mov
call
push
call
mov
mov
mov
push
push
mov
call
add
test
je
mov
mov
push
push
call
mov
add
cmpl
jne
cmpl
push
jne
mov
push
push
mov
push
push
call
test
js
mov
lea
call
lea
call
mov
pop
pop
pop
add
ret
mov
push
call
jmp
mov
jmp
push
mov
push
push
mov
test
push
mov
jne
push
call
test
pop
je
call
mov
test
je
mov
push
call
pushl
mov
push
call
andl
push
lea
call
mov
test
je
mov
mov
push
call
pushl
mov
pushl
push
pushl
mov
call
test
js
mov
mov
xor
lea
call
mov
pop
pop
leave
ret
xor
jmp
push
mov
push
mov
test
je
mov
push
call
mov
test
mov
jne
test
mov
je
movb
mov
push
call
mov
lea
call
mov
test
je
mov
push
call
mov
test
mov
pop
pop
jne
mov
lea
call
mov
test
je
push
call
xor
ret
mov
mov
cmp
je
test
je
cmpl
je
pushl
push
call
test
pop
pop
jne
xor
inc
ret
xor
ret
push
mov
push
mov
push
mov
push
pushl
pushl
push
call
test
js
mov
cmpl
jne
xor
pop
pop
pop
ret
mov
test
je
pushl
mov
call
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
test
not
je
jmp
lea
test
jne
cmp
push
push
jae
cmp
jae
test
pop
pop
je
nop
movzbl
xor
and
shr
xor
add
sub
jne
not
pop
ret
mov
shr
xor
add
mov
shr
movzbl
and
mov
xor
mov
and
shr
xor
add
xor
add
xor
add
mov
shr
and
mov
movzbl
xor
mov
and
shr
xor
add
xor
add
xor
mov
shr
movzbl
and
mov
xor
mov
and
shr
xor
xor
xor
mov
shr
and
mov
movzbl
xor
mov
and
shr
xor
xor
xor
mov
shr
movzbl
and
mov
xor
mov
and
shr
xor
xor
xor
mov
shr
and
mov
movzbl
xor
mov
shr
xor
and
xor
xor
add
mov
shr
movzbl
and
mov
xor
mov
and
shr
xor
add
xor
sub
xor
mov
shr
and
mov
movzbl
xor
mov
shr
xor
and
xor
sub
jne
jmp
mov
shr
lea
xor
add
mov
shr
and
mov
movzbl
xor
mov
shr
xor
and
xor
sub
sub
mov
jne
jmp
add
loop
add
add
call
mov
roll
out
add
test
jmp
int3
int3
sub
push
mov
test
push
mov
push
mov
je
mov
push
mov
call
add
mov
lea
xor
mov
push
lea
lea
movl
movl
mov
mov
call
mov
test
js
mov
mov
push
push
push
mov
call
mov
mov
mov
push
push
mov
push
mov
push
mov
push
push
mov
call
mov
mov
add
mov
lea
call
mov
pop
pop
pop
add
ret
push
mov
push
pushl
andl
mov
lea
call
pushl
mov
pushl
call
push
lea
call
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
mov
xor
mov
test
mov
push
mov
push
mov
push
mov
movl
je
test
je
test
je
cmpl
mov
mov
je
movl
movl
lea
push
mov
push
push
push
push
mov
movl
call
test
js
xor
cmp
mov
jne
mov
cmp
mov
je
testb
jne
add
mov
mov
lea
push
push
call
test
js
cmpl
mov
jne
mov
mov
mov
push
push
call
test
js
mov
push
mov
mov
call
test
js
xor
mov
mov
mov
cmp
je
testb
jne
mov
mov
cmp
je
testb
je
lea
push
lea
push
mov
mov
movl
movl
mov
mov
call
mov
mov
push
lea
push
call
add
lea
push
push
call
mov
test
jne
test
jne
mov
cmp
je
testb
jne
push
lea
mov
call
mov
lea
push
lea
call
add
test
mov
js
mov
test
je
mov
mov
lea
push
push
call
cmpw
je
mov
mov
mov
mov
lea
push
mov
push
movl
movl
call
test
je
movb
testb
je
mov
test
jne
test
jne
cmpb
jne
push
lea
movl
call
mov
mov
lea
push
push
mov
call
test
mov
js
mov
test
je
cmpl
je
mov
test
mov
je
mov
mov
push
call
mov
test
mov
mov
mov
movl
je
movzbl
mov
mov
push
push
mov
call
mov
mov
mov
mov
push
lea
push
mov
lea
push
push
push
call
test
mov
js
cmpl
je
mov
test
je
mov
cmpw
je
xor
mov
push
mov
lea
movl
call
mov
mov
mov
push
push
call
mov
mov
mov
mov
push
push
push
call
lea
call
test
je
mov
mov
mov
push
push
call
lea
call
mov
mov
lea
call
lea
call
mov
mov
pop
pop
pop
xor
call
mov
pop
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
mov
push
push
mov
repz
add
mov
mov
mov
add
mov
mov
mov
lea
lea
mov
cmp
je
mov
mov
sub
cmp
push
jne
push
push
call
add
test
jne
mov
mov
cmp
je
mov
cmp
je
mov
push
push
sub
sub
push
mov
push
mov
mov
call
test
je
jmp
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
or
or
add
jo
mov
pop
pop
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
cmp
jne
mov
push
mov
push
push
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
sub
push
mov
cmp
je
mov
push
mov
add
mov
mov
mov
mov
lea
mov
mov
call
test
je
mov
mov
cmp
mov
push
jne
push
push
call
add
test
je
addl
jmp
mov
mov
call
test
je
pop
xor
pop
add
ret
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
lea
add
add
mov
mov
lea
lea
call
test
je
mov
mov
mov
mov
mov
pop
mov
mov
pop
add
ret
xor
pop
add
ret
int3
int3
int3
int3
int3
int3
mov
cmp
je
mov
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
fldz
push
push
mov
fcoml
mov
fnstsw
test
je
fcompl
fnstsw
test
je
push
mov
test
jne
push
call
add
test
je
fldl
fstpl
fldl
fstpl
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
call
add
pop
pop
pop
ret
fstp
mov
push
movl
call
add
pop
pop
ret
xor
jmp
push
mov
push
lea
push
pushl
mov
call
test
je
mov
mov
mov
xor
inc
pop
pop
ret
push
mov
sub
push
mov
mov
push
mov
mov
call
cmp
je
xor
pop
pop
leave
ret
push
pushl
mov
pushl
call
mov
call
pop
ret
int3
int3
int3
int3
int3
int3
push
push
push
mov
test
push
push
je
lea
mov
test
jne
pop
pop
pop
lea
pop
pop
ret
test
je
sar
sub
mov
je
mov
test
je
mov
push
call
cmp
jne
cmpl
jne
cmpl
jne
add
cmpl
je
mov
mov
and
test
mov
je
addl
mov
test
je
mov
mov
mov
test
je
pop
mov
pop
pop
pop
pop
ret
mov
sub
je
mov
jmp
movl
mov
mov
push
mov
call
pop
pop
pop
xor
pop
pop
ret
lea
or
jmp
cmpl
je
mov
call
test
je
movl
jmp
push
push
mov
mov
call
add
add
push
mov
mov
test
mov
push
je
lea
push
call
test
pop
jne
push
call
pop
lea
call
lea
call
testb
movl
je
push
call
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
mov
xor
mov
mov
push
push
mov
push
mov
test
je
mov
mov
xor
cmpl
movl
mov
movl
je
mov
lea
push
lea
push
mov
mov
push
mov
call
mov
mov
mov
test
mov
je
mov
lea
mov
mov
mov
test
jne
test
jne
push
call
mov
mov
mov
and
or
add
mov
mov
xor
mov
test
jns
mov
mov
test
jne
test
jne
mov
pop
pop
pop
mov
xor
call
mov
pop
ret
push
call
xor
test
je
mov
orl
jmp
mov
mov
cmp
je
cmp
je
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
lea
mov
push
lea
lea
movl
movl
mov
mov
call
testl
jne
mov
lea
lea
push
lea
push
mov
mov
movl
movl
mov
mov
call
mov
mov
add
lea
push
push
call
mov
test
jne
test
jne
mov
mov
mov
mov
mov
lea
call
mov
test
jne
test
je
mov
push
call
mov
add
mov
pop
pop
pop
xor
call
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
lea
mov
push
lea
lea
movl
movl
mov
mov
call
mov
test
js
push
mov
call
cmp
jne
mov
mov
call
test
jne
cmp
jne
mov
lea
push
lea
push
movl
mov
movl
mov
mov
call
mov
mov
mov
push
push
call
mov
test
js
testb
jne
mov
mov
mov
push
push
mov
call
mov
mov
test
jne
test
je
mov
push
call
add
mov
test
js
mov
mov
mov
mov
lea
mov
call
jmp
mov
add
call
xor
jmp
xor
jmp
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
push
push
push
mov
mov
mov
cmp
mov
je
cmp
jg
mov
cmp
je
mov
cmp
je
cmp
je
mov
cmp
je
cmp
je
xor
mov
pop
pop
pop
pop
xor
call
add
ret
mov
mov
call
mov
push
mov
call
jmp
mov
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
jne
jmp
mov
cmp
je
cmp
je
cmp
je
cmp
jne
addl
jmp
mov
mov
xor
cmp
je
cmp
je
cmp
je
mov
cmp
je
mov
jmp
push
mov
andl
push
lea
mov
test
movl
jne
lea
call
mov
call
testb
je
push
call
pop
pop
mov
pop
ret
push
mov
push
push
mov
cmp
je
mov
mov
lea
mov
mov
mov
leave
ret
push
mov
mov
sub
push
xor
test
je
push
xor
push
lea
lea
movl
mov
mov
mov
call
mov
push
lea
lea
movl
mov
mov
mov
call
mov
cmp
je
push
call
push
mov
lea
mov
call
mov
cmp
mov
je
push
lea
mov
call
mov
lea
push
push
call
cmp
je
pushl
mov
add
mov
call
mov
push
lea
call
mov
lea
push
push
call
lea
call
lea
call
cmp
je
cmp
je
mov
cmp
je
pushl
mov
call
cmp
je
mov
mov
call
mov
mov
mov
call
cmp
jne
call
mov
lea
call
lea
call
pop
lea
call
lea
call
pop
mov
pop
leave
ret
mov
cmp
je
jmp
add
int3
int3
int3
push
mov
and
push
push
mov
push
push
mov
nop
testb
jne
push
lea
push
call
test
je
andb
cmpl
je
cmpl
jne
cmpw
je
push
call
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
movw
cmp
jne
mov
mov
mov
cmp
je
cmp
jne
cmpw
je
cmp
jne
cmpw
je
cmp
jne
cmpw
jne
mov
push
mov
call
cmp
je
push
call
test
je
cmpl
jne
cmpw
jne
mov
pop
pop
pop
mov
pop
ret
mov
push
push
push
push
push
push
mov
call
jmp
lea
mov
cmp
lea
je
jmp
mov
orl
mov
call
jmp
mov
push
mov
call
jmp
mov
push
push
push
call
jmp
push
mov
push
cmpw
jne
mov
test
je
mov
push
call
mov
test
mov
je
mov
mov
push
pushl
push
push
call
lea
call
xor
leave
ret
int3
int3
mov
test
push
push
je
mov
mov
mov
cmp
je
mov
add
test
jne
mov
pop
movl
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
pop
mov
xor
pop
ret
push
mov
push
push
mov
test
je
mov
push
call
mov
mov
mov
leave
ret
mov
andl
test
je
lea
push
push
push
add
push
call
and
je
andl
test
je
andl
pushl
lea
call
mov
andl
lea
mov
call
mov
test
je
jmp
sub
mov
xor
mov
mov
push
push
mov
push
mov
push
mov
cmpl
je
mov
test
mov
jne
test
jne
lea
push
push
call
lea
mov
mov
mov
mov
lea
lea
xor
push
lea
sar
push
mov
movl
movl
mov
mov
mov
call
mov
mov
push
push
push
call
add
cmp
mov
je
mov
mov
mov
push
call
mov
mov
mov
push
lea
push
push
call
test
lea
js
call
mov
test
jne
test
jne
mov
movl
xor
mov
pop
pop
pop
pop
xor
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
lea
push
push
movl
call
add
test
je
jmp
lea
mov
mov
cmp
jne
call
mov
lea
push
push
call
add
test
jne
pop
pop
ret
int3
int3
int3
int3
int3
push
xor
cmp
push
push
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
je
call
mov
call
test
jne
xor
mov
mov
mov
mov
lea
mov
mov
cmp
je
push
call
cmp
je
mov
mov
mov
push
call
cmp
jne
mov
mov
mov
lea
push
mov
call
mov
push
lea
call
pop
mov
mov
pop
mov
pop
ret
mov
mov
mov
call
mov
jmp
push
mov
sub
cmpl
je
mov
andl
andl
andl
push
lea
lea
movl
mov
call
mov
test
je
mov
lea
push
push
call
lea
call
mov
mov
mov
leave
ret
mov
test
je
mov
mov
push
call
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
push
push
lea
test
push
jge
xor
pop
pop
pop
pop
add
ret
mov
mov
mov
lea
xor
mov
mov
mov
lea
mov
mov
push
lea
mov
add
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
cmp
je
push
lea
call
pop
pop
pop
xor
pop
add
ret
mov
ret
movzwl
push
lea
mov
test
je
pop
ret
push
mov
and
sub
mov
andl
andl
andl
andl
lea
push
mov
call
mov
lea
call
test
jne
mov
call
call
test
je
xor
inc
mov
pop
ret
int3
int3
int3
cmpl
push
mov
push
push
mov
jne
cmp
je
xor
cmpl
jne
cmp
je
xor
test
jne
test
jne
cmpl
je
mov
cmpl
je
pop
pop
pop
ret
mov
mov
movl
call
cmpb
jne
test
je
mov
mov
add
cmp
je
cmpl
jne
mov
call
pop
pop
pop
ret
mov
jmp
mov
call
mov
call
pop
pop
pop
ret
movzwl
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
xor
ret
mov
dec
test
jle
cmpw
je
xor
inc
ret
int3
int3
sub
push
mov
mov
test
je
mov
mov
push
push
push
xor
call
cmp
je
lea
push
push
lea
mov
call
mov
lea
lea
push
push
mov
call
mov
push
lea
mov
call
mov
mov
lea
push
push
call
mov
cmp
pop
je
lea
mov
mov
mov
push
push
mov
call
mov
mov
lea
push
push
mov
call
cmp
je
cmp
je
cmp
jne
cmp
jne
cmp
je
call
cmp
je
mov
push
mov
lea
mov
call
mov
lea
mov
mov
push
push
mov
call
mov
push
mov
call
lea
call
lea
call
lea
call
xor
pop
pop
pop
add
ret
lea
push
lea
movl
movl
movl
call
mov
mov
push
push
call
add
cmp
je
mov
cmp
mov
jne
xor
mov
jmp
xor
jmp
mov
mov
jmp
push
mov
push
mov
lea
push
lea
push
pushl
movl
call
mov
mov
and
neg
sbb
not
and
leave
ret
andl
ret
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
push
mov
push
push
lea
mov
mov
call
add
sub
jns
mov
push
push
lea
push
push
call
cmp
jl
mov
mov
call
test
je
test
je
test
je
test
je
lea
lea
lea
mov
mov
movl
jmp
lea
addl
addl
mov
mov
mov
mov
mov
mov
add
cmp
mov
je
cmpl
jne
call
mov
and
mov
mov
shl
shr
lea
lea
or
mov
mov
mov
add
cmp
movl
mov
je
cmpl
jne
lea
call
mov
shr
lea
mov
and
mov
shl
or
mov
mov
add
lea
cmp
je
cmpl
jne
lea
call
mov
shr
lea
mov
and
mov
shl
lea
or
call
subl
jne
push
push
push
lea
push
call
mov
pop
pop
pop
pop
add
ret
cmpl
jne
movl
movl
jmp
cmpl
jne
movl
movl
jmp
cmpl
jne
movl
movl
jmp
int3
int3
int3
int3
sub
push
mov
test
je
push
mov
movl
mov
cmp
push
je
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmpb
jne
mov
test
je
push
mov
lea
movl
call
mov
test
je
mov
mov
mov
push
call
lea
call
cmpl
je
xor
pop
pop
pop
add
ret
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
je
mov
cmpb
je
lea
call
test
je
mov
mov
add
push
push
push
call
pop
pop
pop
add
ret
mov
xor
push
lea
lea
movl
mov
mov
mov
call
mov
cmp
jne
push
push
lea
call
xor
add
cmp
je
mov
movl
mov
lea
cmp
movl
movl
movl
mov
mov
je
mov
mov
push
call
test
mov
je
mov
mov
push
call
mov
test
je
xor
call
add
or
mov
mov
mov
push
mov
call
lea
call
pop
lea
jmp
add
jmp
push
mov
sub
push
mov
mov
test
je
testb
je
push
push
xor
push
lea
mov
call
lea
push
mov
lea
call
test
pop
js
pushl
mov
lea
mov
mov
call
mov
cmp
je
mov
lea
push
push
call
test
jne
mov
cmp
jne
and
mov
lea
push
lea
call
mov
test
pop
jne
mov
mov
call
xor
push
mov
lea
mov
call
cmp
je
mov
cmp
jne
mov
inc
push
push
lea
call
cmpl
pop
pop
jne
mov
lea
call
lea
call
lea
call
lea
call
lea
call
pop
mov
pop
pop
leave
ret
pushl
call
test
pop
je
mov
mov
push
pushl
push
call
mov
jmp
mov
mov
push
call
xor
ret
mov
pushl
mov
pushl
mov
push
call
movsbl
add
and
ret
push
mov
push
push
push
push
push
xor
push
lea
mov
call
mov
mov
lea
push
push
call
mov
cmp
mov
jne
push
lea
mov
call
mov
lea
push
push
mov
mov
call
mov
test
jne
testl
mov
lea
push
push
jne
call
mov
test
jne
mov
mov
push
pushl
push
call
mov
lea
call
lea
call
pop
mov
pop
pop
leave
ret
mov
push
push
push
call
cmp
je
xor
jmp
call
jmp
mov
ret
int3
int3
cmpl
push
push
mov
jne
add
add
add
test
sbb
adc
add
test
je
push
push
xor
mov
or
add
or
mov
mov
cld
inc
add
push
mov
call
pop
pop
mov
call
test
je
mov
mov
push
push
push
call
test
js
mov
cmp
je
test
jne
test
je
mov
mov
push
call
mov
test
mov
jne
test
je
mov
mov
push
call
pop
pop
ret
orb
jmp
mov
jmp
push
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
cmpl
jne
cmpl
jne
cmpb
jne
xor
pop
ret
mov
mov
mov
call
xor
pop
ret
sub
push
mov
push
push
mov
mov
push
mov
mov
test
movl
movl
mov
je
mov
mov
mov
mov
mov
lea
push
push
lea
call
mov
mov
add
test
jne
test
jne
test
jne
mov
mov
mov
push
call
mov
test
mov
jne
mov
push
call
add
push
mov
call
mov
mov
mov
lea
add
lea
lea
add
cmp
jne
push
push
push
push
mov
call
cmpl
jbe
xor
mov
movl
lea
mov
push
push
call
push
mov
call
mov
add
mov
mov
push
add
push
push
call
test
je
mov
mov
lea
lea
lea
cmp
je
lea
mov
jmp
lea
test
je
push
movl
movl
movl
call
mov
add
add
cmp
jne
mov
addl
mov
add
cmp
mov
jb
xor
pop
pop
pop
pop
add
ret
push
push
mov
mov
test
je
test
je
sar
mov
mov
push
push
push
push
push
call
mov
call
test
jne
pushl
mov
push
call
mov
call
test
jne
pushl
mov
push
call
pop
xor
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
cmp
je
cmp
je
mov
test
push
je
mov
lea
cmp
je
mov
add
test
jne
mov
movl
mov
cmp
je
cmp
je
mov
lea
push
push
push
movl
call
mov
mov
pop
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
add
mov
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
pop
mov
xor
pop
ret
mov
cmp
add
mov
cmp
jne
mov
cmp
jne
push
call
add
test
je
mov
mov
mov
push
call
mov
pop
xor
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
cmp
je
mov
test
push
je
mov
cmp
je
mov
add
test
jne
mov
movl
mov
cmp
je
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
pop
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
movl
pop
xor
pop
ret
cmp
je
cmp
je
xor
mov
pop
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
mov
pop
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
push
call
add
test
je
mov
mov
mov
push
call
mov
pop
xor
pop
ret
mov
add
call
ret
int3
push
mov
push
mov
imul
xor
cmp
mov
jg
sub
js
push
mov
cmp
jge
movzwl
add
cmp
ja
cmp
jb
add
movzwl
shl
add
sub
jns
pop
pop
pop
ret
cmp
jb
cmp
ja
and
shl
lea
jmp
lea
cmp
jbe
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
cmp
push
mov
jne
test
jle
xor
jmp
lea
movzwl
cmp
ja
cmp
jb
add
cmp
jl
push
xor
cmp
setne
push
push
xor
add
mov
call
mov
push
mov
mov
call
mov
push
mov
mov
call
add
cmp
je
mov
or
shl
or
mov
shl
or
pop
pop
pop
mov
mov
pop
pop
ret
cmp
jb
cmp
jbe
add
cmp
jbe
pop
xor
pop
pop
ret
cmp
je
pop
xor
pop
pop
ret
mov
shl
or
mov
mov
shl
or
mov
shl
or
jmp
push
mov
and
mov
sub
push
xor
cmp
push
push
je
mov
push
lea
mov
call
mov
mov
mov
mov
lea
orl
testl
jne
mov
mov
mov
mov
mov
call
add
mov
mov
mov
test
je
mov
lea
push
push
pushl
push
push
call
mov
test
je
mov
test
mov
je
mov
mov
push
call
mov
mov
call
mov
lea
call
pop
mov
pop
pop
mov
pop
ret
int3
int3
int3
int3
cmpl
jne
mov
push
mov
push
mov
testb
push
je
mov
sub
je
push
call
add
add
mov
xor
pop
pop
pop
ret
mov
lea
lea
push
call
add
test
je
mov
movl
mov
push
lea
push
push
call
add
movb
mov
pop
pop
xor
pop
ret
mov
push
lea
mov
push
lea
jmp
push
call
pop
add
cmp
jne
pop
pop
ret
pushl
call
ret
mov
call
mov
ret
push
mov
push
push
decl
cmpl
jne
push
movl
lea
mov
push
mov
mov
add
shl
add
cmp
je
mov
jmp
mov
lea
call
mov
call
addl
cmp
jne
mov
push
push
push
push
call
mov
cmp
jne
lea
call
lea
call
lea
call
lea
lea
call
mov
call
push
call
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
cmp
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
adc
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
push
call
mov
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
je
mov
xor
mov
mov
pop
ret
mov
cmp
jne
addb
dec
add
add
mov
add
jge
add
add
jo
popa
mov
push
addr16
mov
push
ja
leave
jbe
lret
add
add
lock
add
call
add
add
push
mov
add
push
push
push
push
call
fadds
mov
add
push
bound
lock
xchg
lds
add
add
add
add
add
test
xchg
insb
jle
dec
add
xchg
testl
add
push
in
xchg
testl
add
add
in
loope
add
lcall
inc
in
push
push
push
push
call
add
xchg
add
add
mov
movsb
add
pop
fildl
add
lds
add
mov
add
add
cmpsl
stos
add
leave
roll
clc
lret
mov
add
jbe
js
std
lcall
lock
push
push
push
push
call
add
leave
jmp
jns
fildl
jns
add
shrb
add
shrl
add
mov
add
lcall
push
push
lea
push
push
push
lea
push
lea
push
push
call
add
ficomps
xchg
push
add
xchg
faddp
mov
fiaddl
xorl
imul
mov
lcall
add
addr16
add
add
mov
add
in
add
lcall
push
push
lea
push
push
lea
push
call
add
push
int3
popl
push
add
jno
into
stc
add
stos
popa
add
xchg
add
add
movl
in
rcll
add
movsl
xchg
push
add
in
pop
call
call
push
lea
push
push
call
add
push
fsub
pop
push
push
test
jmp
fiaddl
fimull
jl
push
add
add
xchg
add
jns
sub
pop
push
push
push
call
pop
add
xlat
je
incb
jns
mov
arpl
add
mov
jae
add
divb
xlat
jno
arpl
xorl
mov
in
add
movl
mov
sub
sub
pop
call
push
lea
push
push
push
push
call
shr
aad
jmp
addl
mov
add
jp
add
sti
xchg
add
movb
add
out
add
mov
int3
mov
les
gs
mov
xchg
push
mov
in
in
pop
jmp
ret
push
push
call
add
add
xchg
mov
std
add
jno
fcomps
add
fwait
xchg
xchg
mov
insb
push
add
shl
scas
sub
pop
mov
mov
push
lea
push
push
lea
push
call
add
popa
mov
add
mov
add
jbe
mov
mov
jo
add
add
popa
pop
add
xchg
add
xchg
mov
lcall
pop
in
add
push
lea
push
push
push
lea
push
push
lea
push
push
call
add
outsl
gs
mov
mov
add
mov
mov
add
add
jmp
icebp
loope
sti
cli
scas
add
xchg
jp
lret
pop
mov
roll
lcall
ret
movsl
inc
add
push
push
push
push
push
push
push
push
lea
push
push
call
xlat
fldl
push
add
popa
pop
fistpll
add
add
add
pushf
in
in
add
add
mov
add
fldenv
jne
test
mov
add
add
add
add
xchg
add
movl
in
out
add
add
shlb
cmpsb
lods
ljmp
lcall
pop
add
repz
push
push
push
sub
push
or
not
add
xor
shl
add
sub
sub
pop
sub
pop
push
push
push
push
push
lea
push
push
push
call
mov
sarl
add
add
in
scas
xchg
fsubl
jl
mov
add
leave
stc
xchg
mov
pop
pushf
stc
mov
test
add
pop
add
mov
add
xchg
mov
lcall
jne
call
push
push
push
lea
push
push
push
lea
push
lea
push
lea
push
lea
push
call
in
add
loopne
scas
mov
out
icebp
pop
xchg
pop
mov
mov
add
push
icebp
push
pop
add
lds
add
add
popf
add
mov
jno
sub
pop
mov
movl
push
push
push
lea
push
call
add
add
add
add
add
mov
add
add
in
data16
test
add
mov
add
mov
fs
cwtl
repnz
add
add
loope
out
divb
mov
xchg
push
add
inc
call
push
push
push
push
push
push
call
hlt
add
jne
lods
push
add
mov
mov
pop
lret
add
add
mov
add
xchg
outsl
add
mov
outsl
fwait
add
jb
lods
add
add
mov
jl
add
addl
fmulp
add
fnstsw
add
add
in
loopne
push
pushl
push
push
push
push
push
lea
push
call
mov
add
bound
lods
fsubrp
add
jns
js
add
popf
in
pusha
std
pushf
pop
pushf
mov
ljmp
je
js
add
jmp
add
test
mov
add
sahf
jp
cltd
lahf
push
push
add
int
loope
lcall
sub
pop
pushl
push
push
lea
push
push
call
ret
add
fdivr
xchg
add
rolb
loop
int
into
add
add
push
cmpsl
xchg
call
sti
cmpsl
enter
addb
std
fildl
cli
ret
iret
add
into
add
add
push
add
add
movsl
jnp
in
lock
call
pushl
push
push
push
push
lea
push
push
push
call
out
outsl
add
push
in
js
add
xchg
add
arpl
add
add
out
data16
cli
add
mulb
mov
push
fisubl
xchg
add
fdiv
mov
std
mov
ret
pusha
fwait
add
loopne
add
add
mov
std
add
add
sub
pop
pushl
call
push
push
dec
dec
push
sub
add
lea
sub
lea
shl
pop
sub
ror
ror
pop
push
push
lea
push
push
lea
push
push
push
call
add
test
imul
out
mov
scas
addl
add
pop
add
mov
mul
add
add
add
add
add
add
add
add
jb
add
mov
ja
fnsave
sti
loopne
mov
clc
add
push
add
add
mov
pop
pushl
call
push
lea
push
push
lea
push
push
call
add
cli
add
add
cmpb
add
scas
push
mov
mov
add
mov
push
add
add
pop
add
rolb
ret
loopne
js
in
stos
add
lcall
inc
push
push
add
push
or
inc
add
inc
not
sub
inc
pop
add
not
pop
push
push
lea
push
push
push
push
push
push
push
call
xchg
leave
sar
add
add
cltd
flds
add
rol
add
add
add
add
in
mov
add
add
test
add
add
mov
add
add
mov
in
fcompl
push
push
push
call
ret
roll
aam
push
add
mov
add
add
xchg
jmp
popf
jl
jl
add
bound
pop
jb
add
push
loopne
push
in
xchg
add
add
add
scas
lcall
add
into
test
add
lret
sub
pop
call
push
push
push
push
push
lea
push
call
pop
jecxz
add
add
add
xlat
xchg
add
mov
out
add
imul
add
pushf
outsl
add
add
pop
push
mov
xchg
mov
sti
add
clc
push
push
lea
push
push
push
call
add
add
add
leave
add
fldcw
xchg
icebp
loope
outsl
add
add
stos
mov
pop
add
cmpsl
aam
jl
lahf
jmp
pop
add
lock
in
sahf
add
add
xchg
int3
add
xchg
mov
addb
push
popl
sub
pop
push
push
push
call
add
fwait
mov
loop
test
lcall
xchg
add
xchg
push
mov
jl
add
add
add
mov
mov
pop
mov
arpl
loop
mov
out
add
sub
pop
push
push
lea
push
push
call
mov
add
jmp
nop
mov
sbb
add
fwait
add
push
flds
add
fidivl
test
out
iret
add
mov
add
jnp
add
fildl
icebp
add
add
lret
adc
addr16
mov
add
add
lcall
pop
hlt
push
push
push
push
lea
push
push
push
push
push
call
push
mov
lea
add
add
shlb
jo
push
mov
pusha
add
lcall
add
repnz
addl
addr16
pop
arpl
add
add
xchg
mov
repnz
add
xchg
add
add
add
icebp
add
in
add
sub
pop
add
push
push
push
push
call
jns
mov
in
lds
mov
out
add
xchg
testl
std
add
cltd
add
add
data16
adc
pop
filds
add
lret
jno
xchg
add
add
lods
fst
fildl
outsl
add
mov
cld
lods
sub
pop
add
push
push
push
lea
push
push
push
push
call
add
addl
add
jl
movsb
mov
aad
add
lcall
xchg
test
add
mov
add
scas
mov
add
push
add
push
call
add
push
sub
pop
add
push
lea
push
push
push
lea
push
lea
push
lea
push
push
push
call
add
pop
into
add
add
fwait
mov
aam
je
add
add
add
add
add
nop
add
lods
add
ficomps
pop
add
fsubs
add
add
rclb
les
lcall
xor
push
push
push
lea
push
lea
push
push
push
call
mov
add
mov
add
imul
add
add
add
pop
sarb
lds
lret
scas
sub
pop
add
push
push
push
lea
push
push
push
call
add
jne
add
pop
pusha
add
rolb
mov
pop
ljmp
mov
jnp
jmp
sub
pop
push
push
push
push
push
call
out
add
pop
add
mov
push
jae
in
in
add
add
add
imul
add
xchg
scas
add
add
cmpsb
add
add
test
push
test
add
mov
testl
in
lret
add
enter
sub
pop
mov
xor
push
push
push
push
lea
push
lea
push
push
lea
push
call
jno
add
pop
add
out
out
add
mov
mov
mov
add
xlat
add
imul
xchg
cli
add
add
fistps
add
add
jne
pop
into
add
pop
push
sub
pop
add
pop
push
push
lea
push
lea
push
push
push
push
push
lea
push
call
xchg
add
add
lret
add
fildl
jmp
movb
testb
arpl
xchg
scas
pop
mov
lea
jmp
test
mov
jns
sub
pop
mov
xor
push
push
push
push
push
push
push
push
lea
push
push
call
pop
mov
lea
out
cltd
scas
add
add
movsl
push
add
push
add
into
mov
rolb
test
xchg
add
rolb
lcall
push
lea
push
push
push
push
push
call
push
in
add
add
mov
iret
mov
clc
test
sahf
fiadds
arpl
push
pop
out
faddl
add
mov
add
cmpl
mov
add
popa
mov
out
rorb
leave
fs
std
out
pop
ja
pop
xchg
out
leave
sub
pop
mov
xor
push
push
push
push
push
push
push
call
xchg
mov
lods
add
mov
add
pop
lcall
test
shlb
add
pop
add
add
stos
mov
add
xchg
int
shl
mov
xchg
in
mov
add
loop
add
mov
mov
add
add
mov
fstpt
lcall
enter
call
xchg
mov
pop
lret
add
ret
add
leave
sti
add
clc
add
push
pop
add
popa
rolb
push
push
add
outsl
mov
push
test
add
push
add
add
push
addl
fst
incb
add
add
lret
imul
add
in
hlt
lcall
rep
push
lea
push
lea
push
push
push
call
jo
add
xlat
add
stos
orb
arpl
add
cltd
lods
add
add
xchg
add
pop
add
add
add
leave
mov
lcall
push
lea
push
lea
push
push
push
push
push
call
lret
test
add
adcl
aam
out
xchg
add
mov
outsl
push
push
out
roll
roll
add
add
movsb
test
sub
pop
mov
push
push
lea
push
push
lea
push
push
push
push
push
call
testb
cmpsl
add
add
fsubrl
jno
lea
loope
push
mov
lret
jge
rolb
add
add
test
add
lcall
pop
in
add
push
lea
push
push
call
xlat
aad
fisttpl
aam
add
popf
add
jmp
jmp
loop
loope
mov
add
add
mov
shrl
and
stos
mov
push
add
lds
mov
fnstsw
sub
pop
add
mov
xor
push
push
push
push
lea
push
push
lea
push
call
push
leave
out
mov
jnp
outsl
test
fsub
add
add
popf
xchg
addb
imul
mov
jp
lods
jle
lds
add
in
in
lcall
push
and
repnz
push
push
push
push
push
call
add
loope
add
lret
add
mov
add
mov
add
ret
add
add
add
jnp
arpl
jge
push
add
pop
add
add
add
add
jo
xlat
add
add
icebp
push
add
fadds
push
push
add
lock
lcall
dec
sub
pop
jae
push
lea
push
lea
push
push
push
push
push
push
call
xchg
lret
add
out
add
lods
xchg
jae
add
add
nop
addb
add
add
in
add
add
add
mov
mov
out
out
add
add
iret
mov
mov
add
iret
std
add
popf
fldl
lcall
or
push
push
push
lea
push
push
lea
push
push
call
xchg
stc
popf
push
xchg
jmp
pop
pop
push
add
add
mov
pop
pop
add
jnp
add
xchg
jle
xchg
xchg
test
mov
add
mov
testl
cmpsb
scas
popf
add
rcll
mov
xchg
jbe
add
mov
mov
add
sub
pop
add
push
lea
push
push
push
push
push
push
push
call
ret
add
roll
js
add
loop
fdivr
les
fadd
mov
add
sti
enter
in
pop
pop
add
flds
add
add
test
jecxz
pop
gs
add
mov
add
add
add
imul
add
add
lcall
ret
sbb
pop
mov
xor
rorl
rclb
mov
mov
push
add
add
add
ljmp
add
data16
mov
fsubl
sarl
add
testl
imul
addl
cmc
les
add
imul
add
stc
int3
add
add
add
shr
addl
xchg
sub
pop
add
push
push
push
push
lea
push
push
push
push
lea
push
push
call
popl
addl
add
add
loopne
nop
add
add
fs
add
mov
xlat
add
add
mov
addb
add
add
cmc
add
pusha
test
add
add
mov
add
add
add
fdivr
lcall
fsubrs
and
iret
adc
movl
fildl
add
sti
dec
sub
shl
rol
pop
rol
ror
pop
push
push
push
push
call
add
je
shl
add
jle
gs
enter
add
xchg
cli
mov
iret
out
lret
xchg
imul
jecxz
mov
add
add
xchg
shlb
pop
mov
jge
mov
clc
push
push
loope
add
pop
mov
loopne
add
add
int3
xchg
lcall
jne
call
push
push
lea
push
call
shl
movl
add
insb
add
add
add
ficoml
add
add
imulb
mov
lcall
in
hlt
lcall
add
ror
add
push
push
pop
add
shr
rol
sub
not
add
pop
sub
shr
pop
push
push
push
push
lea
push
push
push
call
fs
add
out
mov
add
add
pushf
mov
in
pop
add
popa
add
add
popf
lods
lods
cwtl
add
push
mov
test
xchg
frstor
iret
add
in
fldl
sarl
pop
add
add
sub
pop
push
push
push
push
call
add
push
mov
add
lret
add
pop
addb
addl
add
fildl
xchg
jo
mov
add
rclb
push
push
push
push
push
call
add
jnp
pop
add
test
notl
add
add
add
add
add
xor
xchg
rolb
add
add
nop
add
in
add
add
xlat
incb
mov
in
lcall
clc
push
push
push
call
add
add
add
ljmp
jnp
repnz
jl
add
add
in
add
add
mov
add
jecxz
cwtl
add
add
add
pop
add
lcall
mov
push
push
lea
push
push
lea
push
call
mov
add
fsubrs
mov
scas
addl
pop
shl
add
add
add
pop
fadds
mov
sub
pop
add
add
push
lea
push
push
call
push
add
add
add
call
add
int3
stos
mov
sar
leave
push
add
add
mov
ret
movsl
inc
add
push
push
push
push
push
lea
push
push
call
lahf
mov
insb
mov
testl
add
out
push
add
xchg
fldl
int
add
add
add
outsl
jns
fisubs
fwait
sahf
les
add
lock
add
mov
add
xorb
add
add
add
imul
testl
or
testb
lea
push
push
call
mov
in
add
add
add
add
out
mov
pop
js
add
shll
mov
add
add
mov
jmp
nop
mov
icebp
add
mov
in
in
lcall
jne
push
push
push
push
push
push
push
push
push
push
call
add
fsts
pushf
addr16
add
cld
add
scas
jnp
rolb
fstpt
not
pop
jmp
add
add
icebp
jnp
mov
push
mov
mov
je
xchg
add
je
jno
add
std
in
add
add
add
lcall
inc
adc
test
push
push
push
push
call
sti
add
add
lahf
add
add
jns
out
add
mov
jae
in
je
jmp
add
add
testb
xchg
cmpsb
add
icebp
add
xlat
push
lea
cmpsb
add
add
xchg
les
mov
mov
mov
mov
ret
jbe
roll
lcall
add
push
push
push
lea
push
call
add
loope
add
add
add
add
cltd
rorb
add
jnp
add
add
pop
loope
mov
add
add
int
js
add
add
jb
sarb
les
add
push
push
push
call
push
faddp
xchg
mov
mov
roll
add
add
add
add
add
push
stos
bound
add
push
mov
test
lcall
lock
push
push
push
push
push
push
push
push
call
add
mov
in
ja
add
push
mov
jno
add
out
fsubrs
icebp
mov
add
stc
fs
add
sub
pop
pop
mov
push
push
push
push
push
push
lea
push
push
push
push
call
add
imul
xchg
fstp
pop
sahf
cmpsl
movsl
lea
leave
fs
mov
push
mov
stos
push
rcrl
test
cltd
add
add
movsl
pop
fucomip
popa
fsub
fnstcw
add
xchg
add
add
push
add
add
lcall
or
push
push
push
push
lea
push
push
push
lea
push
call
add
add
cmpb
xchg
hlt
jle
mov
mov
pop
push
add
fistpll
roll
out
pop
add
xchg
pop
mov
xchg
ror
add
roll
jecxz
add
je
add
js
xchg
stos
add
hlt
add
data16
add
jns
push
add
add
add
sub
pop
add
push
ror
pop
rep
push
shr
pop
mov
push
push
push
call
add
add
int
mov
add
add
add
add
xchg
mov
cmpsl
add
add
add
jbe
add
add
movl
mov
pop
sarb
xchg
add
leave
mov
pop
add
or
push
push
push
call
add
out
fs
arpl
shlb
flds
add
imul
in
add
jns
sub
pop
add
push
push
push
lea
push
push
push
call
rclb
add
rcrl
xchg
add
aad
add
pop
mov
add
add
mov
xchg
lds
add
lcall
leave
je
push
push
push
lea
push
lea
push
push
push
push
call
add
iret
add
mov
cmpsb
mov
testb
xchg
add
add
cmpb
pusha
add
stc
hlt
add
add
rolb
nop
mul
add
mov
aad
lods
mov
add
jmp
add
fsubr
add
add
jp
into
arpl
fnstenv
add
popa
add
sub
pop
mov
xor
push
push
push
push
call
andb
add
jle
push
add
jo
add
add
pop
pushf
lret
shll
add
bound
fs
add
mov
lods
add
add
add
sub
pop
mov
push
push
push
call
add
jle
pop
add
clc
add
add
xchg
jb
stos
add
in
add
mov
loope
dec
arpl
add
test
add
add
lret
cmp
mov
clc
lcall
adc
push
push
push
push
lea
push
push
push
call
jecxz
add
jl
mov
test
cld
add
add
add
rol
add
jae
push
out
mov
jecxz
push
popl
out
pop
push
add
push
int
pusha
lock
add
subl
in
roll
add
jge
add
in
in
lcall
les
add
push
ror
pop
add
push
lea
push
lea
push
call
add
add
add
mov
rcrb
gs
add
bound
jecxz
hlt
jge
jae
bound
add
add
add
in
loope
out
ja
add
mov
add
lahf
test
iret
faddl
add
xorb
enter
mov
in
add
jle
mov
lcall
jne
push
dec
shr
pop
push
push
lea
rol
sub
pop
mov
push
push
lea
push
push
push
push
call
loope
add
mov
mov
jb
add
ficoml
scas
in
pop
mov
add
fsubrs
add
add
add
push
out
jo
imul
mov
add
sub
pop
xor
push
push
push
lea
push
call
add
loop
sub
pushf
add
ror
add
jbe
roll
mov
add
fst
in
add
lock
popf
add
ret
roll
lcall
les
add
push
add
shl
shr
pop
add
push
rol
pop
pop
rep
push
ror
pop
mov
xor
push
push
lea
push
push
push
call
lock
lret
xchg
mov
add
ljmp
test
je
add
add
filds
add
cmc
shl
add
push
les
add
lcall
leave
je
mov
push
lea
push
push
push
push
push
call
jle
add
add
add
lods
negl
add
cmpsl
cltd
add
roll
add
add
mov
pop
fiaddl
stos
in
add
mov
addr16
test
add
sub
pop
add
push
shr
rol
pop
add
push
shl
pop
rep
push
sub
add
pop
pop
push
push
not
add
shr
sub
push
or
inc
add
inc
inc
sub
pop
ror
add
pop
push
push
push
call
push
fbld
add
xchg
jae
filds
addl
loop
mov
lcall
add
aam
cmc
add
add
xlat
fiadds
add
sub
pop
pop
push
rol
shl
pop
mov
push
lea
pop
mov
push
push
call
add
add
aam
add
mov
mov
int3
add
mov
add
add
push
add
add
notl
lock
add
addb
enter
mov
jno
out
ret
pop
outsl
add
ret
fisubl
mov
push
shl
shr
shl
lea
pop
jmp
push
inc
pop
push
mov
push
push
push
lea
push
push
push
push
push
push
call
clc
gs
test
roll
mov
in
fcmovne
pop
jno
bound
gs
jge
mov
mov
add
cld
push
push
push
call
add
add
incb
mov
pop
flds
mov
xchg
add
add
mov
jno
add
lret
mov
lcall
icebp
push
nop
insb
popl
lcall
push
push
push
lea
push
push
push
push
call
add
push
add
add
mov
mov
add
mov
stos
lea
mov
aad
mov
add
add
mov
push
jp
add
nop
nop
sti
int
add
add
add
test
push
push
rol
pop
push
push
push
call
add
xchg
sti
roll
add
add
subb
push
xchg
mov
add
movsl
add
add
mov
lods
add
add
add
in
jmp
add
mov
sahf
mov
in
clc
lcall
inc
cld
push
push
push
lea
push
push
lea
push
lea
push
push
lea
push
call
mov
add
push
mov
mul
add
sbbl
add
add
add
iret
add
push
mov
jnp
cmpsl
mov
add
xchg
add
add
add
add
mov
add
fiaddl
into
mov
fdivr
lcall
push
push
push
push
push
lea
push
push
push
push
call
test
add
iret
mov
std
add
je
add
sti
mov
cld
pusha
add
test
test
add
add
add
test
add
cmpsl
mov
add
lds
sub
pop
pop
push
push
lea
push
push
push
lea
push
push
lea
push
push
push
call
add
add
mov
add
fdivrp
mov
lock
add
add
addl
fldt
pop
fwait
out
in
add
popf
add
push
add
sar
add
bound
test
idiv
add
add
add
sub
pop
pop
push
lea
push
lea
push
push
push
push
push
push
push
push
call
mov
popa
add
jl
mov
imul
out
cmc
stos
cmpsl
jmp
sti
mov
imul
out
roll
lea
push
push
push
push
push
push
call
mov
lods
nop
ja
mov
mov
cli
add
jp
mov
lcall
add
add
add
cmc
xchg
int3
add
std
loop
push
movsb
pop
in
fildl
mov
popa
xchg
add
xchg
fwait
add
jnp
ret
in
leave
ret
push
dec
add
pop
push
push
dec
pop
mov
push
push
push
push
call
add
mov
add
add
mov
fiadds
ja
add
incb
add
popf
pop
add
out
add
leave
mov
lock
add
pop
add
movsl
mov
add
pop
push
pop
add
add
sarl
lock
lcall
clc
push
push
push
push
push
push
push
lea
push
push
call
int3
add
movl
in
idiv
mov
jns
je
add
test
add
add
lcall
pop
push
push
not
pop
push
push
push
inc
ror
ror
pop
push
movl
push
push
push
push
push
call
mov
outsl
pop
mov
into
sarb
jo
fwait
lea
scas
pushf
add
ja
pusha
add
add
data16
mov
push
gs
mov
add
mov
shl
push
cmp
add
add
mov
outsl
sub
pop
addl
push
ror
inc
shl
sub
pop
test
je
push
sub
xor
add
pop
mov
push
not
not
pop
pop
push
push
push
lea
push
push
call
add
faddl
sti
test
mov
cmpsb
push
lahf
add
mov
add
mov
testb
gs
add
add
mov
pop
rcrl
add
lcall
push
push
push
push
push
call
iret
jae
add
push
mov
jmp
jne
test
aam
mov
pop
jb
push
mov
in
in
movsl
out
mov
int
lods
pop
cli
movsl
je
jno
add
int
js
mov
fdivl
hlt
add
cli
lcall
jb
mov
add
in
in
pop
pop
push
lea
push
push
push
lea
push
lea
push
push
call
add
add
call
add
imul
popa
jbe
jl
add
add
filds
add
ficomps
add
and
cmc
aad
nop
add
lcall
leave
push
push
push
push
push
push
push
lea
push
push
call
lea
arpl
add
aam
sar
push
add
add
add
movsl
add
add
lods
mov
pop
rolb
loopne
lea
test
std
add
test
rcrl
pop
add
ret
out
push
add
in
lods
add
add
mov
std
xchg
mov
fcompl
add
push
push
push
push
push
push
push
call
movsb
ret
shr
add
add
add
lods
push
imul
in
push
add
add
add
roll
add
add
add
sub
pop
mov
push
push
lea
push
push
push
push
push
call
add
mov
add
add
push
mov
add
jnp
add
shll
into
push
fstpl
out
add
add
in
in
lcall
cld
push
push
call
mov
movb
add
iret
add
add
je
mov
jnp
in
add
add
lds
into
add
lods
ja
clc
loop
jno
push
add
xlat
add
lcall
push
rol
inc
pop
push
push
add
xor
inc
pop
push
push
push
shr
pop
testl
addl
push
rol
shl
pop
push
push
add
shr
lea
xor
pop
call
push
push
call
xlat
aam
je
push
jmp
pop
lcall
popf
add
movl
add
xchg
pop
rcrb
add
stc
add
jae
in
clc
lcall
inc
cld
push
push
push
push
push
push
push
push
call
add
mov
mov
imul
add
add
push
add
mov
add
lret
mov
add
jne
in
loopne
lcall
jne
push
push
xor
dec
add
pop
push
call
push
push
push
push
push
call
in
je
mov
add
add
add
arpl
add
add
add
add
push
idivb
notb
js
add
pop
stos
add
out
pop
add
xchg
add
jnp
repnz
ret
mov
lcall
jge
add
test
push
push
call
xchg
in
add
movsl
orb
roll
addb
add
lret
clc
fildl
add
jge
ljmp
hlt
pop
pop
push
lea
push
lea
push
lea
push
push
push
push
push
call
add
movsl
xchg
add
shll
mov
add
add
push
jae
int
aad
add
add
add
lcall
andl
fldl
shlb
add
lret
add
popl
shll
push
in
loopne
pop
push
sub
shl
not
pop
pop
push
push
call
add
add
icebp
add
add
in
add
aam
add
add
add
cli
push
je
out
aad
push
add
jb
add
add
xchg
ljmp
scas
add
add
push
mov
add
jmp
in
clc
pop
pop
leave
push
lea
push
push
call
lahf
xchg
out
addb
pop
add
cltd
mov
push
add
popa
mov
stc
in
lds
add
lds
ret
add
insb
add
xchg
sub
pop
ret
push
push
push
push
push
push
push
push
push
call
push
add
add
call
ret
rcrl
mov
fdivrs
rcr
mov
add
add
test
int3
add
add
jmp
xorl
push
add
out
test
add
sub
pop
mov
add
push
lea
push
push
push
lea
push
push
call
scas
add
lea
in
addl
jmp
add
addr16
enter
add
arpl
add
imul
call
push
push
rol
pop
push
push
add
shr
pop
push
push
lea
lea
shl
inc
pop
push
movl
push
lea
push
push
push
call
jp
hlt
add
mov
add
add
test
add
test
push
add
add
xchg
sti
add
xchg
mov
add
bound
add
mov
mov
ja
fstpl
mov
add
add
push
jge
jmp
add
mov
roll
sub
pop
push
call
push
add
pop
push
push
push
push
push
call
mov
cltd
outsl
add
add
ljmp
add
add
mov
pop
cmpsb
mov
fiaddl
add
mov
call
mov
jmp
cmc
sub
pop
call
push
lea
push
push
lea
push
push
push
push
push
call
addl
add
in
add
mov
insb
in
cltd
test
clc
jle
add
bound
je
jnp
add
push
in
ja
add
fldl
fiadds
add
sti
add
std
jp
ljmp
add
decb
pop
add
sub
pop
subl
push
not
pop
cmpl
jne
pop
push
push
push
push
push
push
call
sti
mov
xchg
mov
gs
jge
mov
mov
add
add
loop
xchg
jle
jo
jo
js
add
add
enter
insb
pop
add
add
mov
add
add
fsubrp
pop
add
fwait
add
xchg
mov
xlat
mov
in
call
pop
push
push
call
cltd
add
out
mov
pushf
stos
add
add
add
add
test
pop
shlb
add
loope
jecxz
enter
add
add
jle
popa
add
rcr
mov
add
xchg
xchg
in
add
add
cmc
popa
add
mov
add
add
add
push
push
push
lea
push
push
call
mov
mov
cmc
pop
add
push
jbe
movl
rolb
mov
add
lods
imul
add
add
js
enter
xchg
add
jns
add
jns
mov
mov
ret
mov
mov
out
in
push
fld
movsb
fidivl
popl
add
lock
pop
pop
push
push
push
push
lea
push
push
push
push
push
call
add
jb
shl
pop
scas
push
mov
repnz
jp
fildl
add
not
add
lds
add
add
pop
leave
push
push
push
call
add
add
sbbb
mov
shr
loop
stos
add
add
add
add
add
add
xchg
enter
add
jae
add
mov
in
push
in
lea
aam
mov
gs
call
add
jmp
add
push
push
lea
push
push
push
push
push
lea
push
push
push
push
call
mov
add
lea
add
jmp
add
aam
enter
xchg
add
fiadds
movsl
arpl
add
mov
push
enter
mov
arpl
sahf
mov
in
popa
add
mov
adcl
pusha
add
add
xchg
lods
add
sub
pop
mov
push
dec
rol
pop
add
push
push
push
lea
push
push
push
push
lea
push
call
pusha
ret
add
lods
add
add
ljmp
add
aam
lods
add
js
lahf
call
shl
mov
sahf
add
add
pop
mov
add
ja
add
lcall
push
shl
rol
pop
push
push
push
add
add
pop
push
push
lea
push
push
call
xchg
sarb
add
mov
xchg
roll
add
test
addl
sti
add
xorb
add
add
ljmp
add
in
push
xchg
scas
icebp
test
add
lcall
inc
or
push
push
lea
push
call
add
push
add
push
xchg
add
add
mov
push
add
roll
ret
in
mov
push
add
je
insb
in
add
add
insb
add
loope
jbe
in
lock
lcall
inc
cmp
call
pop
pop
mov
shr
push
sub
pop
add
push
xor
pop
mov
mov
push
add
add
not
sub
pop
add
push
push
lea
push
push
push
push
push
lea
push
push
call
fdivl
add
aam
jl
add
mov
push
in
stos
mov
stos
jle
idivb
cmc
roll
add
add
add
add
iret
jb
add
add
mul
jl
add
pushf
add
add
add
push
add
in
mov
in
fdivr
lcall
shlb
pop
mov
push
inc
shl
pop
mov
cmp
jne
push
add
add
pop
cmp
jne
push
lea
push
lea
push
lea
push
push
call
int
cmc
pusha
add
jl
push
mov
add
add
add
add
mov
lods
je
mov
cmpsb
lea
stos
les
scas
add
add
fists
in
pop
mov
push
lea
push
push
lea
push
lea
push
push
lea
push
call
movsb
mov
add
xchg
lret
add
add
ja
pop
cwtl
add
mov
jo
add
stc
in
push
xchg
add
add
add
lret
pop
jmp
push
add
sub
pop
mov
push
ror
pop
mov
sub
jne
push
sub
xor
pop
mov
movl
push
lea
push
lea
push
push
call
data16
push
std
sahf
lret
pop
add
ret
push
lret
cli
loopne
mov
add
rclb
xchg
add
add
roll
fcmovnu
xchg
mov
testl
add
test
add
xchg
sub
pop
jmp
push
sub
not
shl
pop
mov
push
push
push
push
push
push
call
add
add
add
add
add
aad
stos
fsts
jmp
add
add
out
add
add
sub
pop
mov
push
dec
sub
pop
cmp
jne
push
dec
pop
mov
push
push
push
push
push
call
std
std
add
mov
mov
jnp
loop
lods
addl
add
add
mov
add
jl
mov
add
add
add
add
into
shr
pop
jmp
push
lea
push
lea
push
push
lea
push
push
push
lea
push
push
push
call
add
lock
lock
je
lcall
test
add
mov
add
pop
push
mov
cmc
push
xchg
arpl
pop
mov
xchg
repnz
add
add
inc
cld
push
push
push
push
push
lea
push
push
push
call
jbe
add
add
jmp
xchg
push
add
mov
add
idiv
flds
lcall
cmpsb
add
pop
cmc
add
mov
add
in
loopne
cmpw
jne
push
push
push
lea
push
lea
push
push
push
call
push
add
in
lock
push
jae
add
cld
stos
xchg
push
pop
mov
pop
stos
add
out
mov
add
add
jmp
mov
call
add
add
jnp
mov
xchg
test
add
pop
mov
push
ror
lea
add
sub
pop
movl
jmp
push
sub
not
pop
pushl
push
shl
xor
lea
pop
pop
push
inc
pop
mov
push
push
push
call
lahf
add
add
pop
stos
push
xchg
lds
mov
shr
push
lods
add
cld
cltd
add
mov
xlat
movsb
roll
jp
add
mov
stos
sub
pop
mov
push
shl
pop
mov
push
push
inc
xor
push
xor
add
ror
rol
sub
sub
pop
dec
shl
pop
push
add
pop
push
call
push
shr
pop
cmpl
je
push
push
shr
push
or
inc
add
add
shr
sub
sub
pop
sub
inc
sub
ror
pop
push
xor
pop
push
call
push
shr
pop
cmpl
je
push
push
not
push
or
inc
add
add
ror
sub
pop
dec
pop
push
push
push
push
push
push
push
push
call
nop
in
add
xchg
add
cmc
add
icebp
add
add
ficomps
stc
cli
jp
imul
jge
add
ficoml
rcrb
add
ret
add
mov
icebp
scas
add
add
decb
int
add
push
push
call
int3
jge
fwait
in
add
aam
mov
out
add
xchg
xchg
add
cwtl
add
add
insb
add
add
add
add
lcall
mov
add
xchg
gs
mov
add
pop
call
cmpl
je
push
push
add
push
or
not
add
xor
sub
inc
pop
sub
shl
pop
push
rol
rol
pop
push
push
push
push
push
push
lea
push
lea
push
call
add
insb
out
idivb
movsb
cmc
mov
add
push
add
jae
push
nop
in
jmp
add
add
aam
add
mov
add
mov
jns
scas
icebp
mov
add
add
mov
popf
add
fs
add
add
add
sub
pop
call
cmpl
je
push
push
shr
push
or
not
add
shl
add
inc
sub
sub
dec
add
dec
lea
pop
add
rol
pop
push
not
lea
pop
push
push
lea
inc
pop
call
cmpl
je
push
push
shr
push
push
pop
add
lea
sub
ror
inc
pop
add
pop
push
rol
inc
shr
not
pop
push
push
push
push
lea
push
push
push
push
push
push
call
xchg
push
jae
idiv
push
add
jo
stos
add
sti
add
add
mov
idivb
hlt
stos
mov
movsl
loope
add
pushf
add
mov
mov
add
add
add
add
test
stc
push
add
jecxz
jmp
in
fdivr
lcall
pshufb
cmpl
je
push
push
rol
add
push
or
not
add
sub
shl
sub
add
pop
shr
xor
ror
pop
push
add
ror
rol
pop
push
push
add
xor
dec
inc
pop
call
push
push
push
lea
push
push
push
call
sti
add
add
jae
mov
testl
pop
pop
fwait
xchg
push
add
add
jno
repnz
add
popl
lds
add
add
jmp
out
push
xlat
movl
sub
pop
cmpl
je
push
push
inc
ror
rol
push
or
not
add
xor
sub
shr
pop
rol
pop
push
lea
push
push
push
push
push
push
push
lea
push
call
insb
pop
arpl
add
add
sahf
mov
pop
add
pushf
rolb
int
add
in
push
add
add
mov
outsl
add
mov
jl
add
add
testl
ret
movl
add
xchg
add
mov
pop
pop
add
push
add
test
jae
in
fmulp
sub
pop
push
push
push
push
push
call
rcll
aad
add
add
jmp
pushf
add
jno
push
add
sahf
add
lahf
rcl
push
push
add
add
jl
add
lock
call
cmpl
je
push
push
add
push
or
not
add
lea
add
rol
sub
xor
pop
xor
pop
push
not
pop
push
push
push
call
push
add
testb
fsts
add
movb
test
mov
test
add
lods
mov
in
shrb
int
sub
pop
call
push
push
lea
push
push
lea
push
push
call
xchg
add
lahf
repnz
cli
enter
test
xchg
add
arpl
add
add
add
mov
fiadds
mov
faddl
clc
add
rcrb
sti
andl
jne
add
add
mov
add
mov
xchg
add
in
popf
sub
pop
cmpl
je
push
push
rol
dec
push
xor
add
xor
lea
sub
lea
not
shr
pop
sub
inc
pop
push
lea
push
push
push
push
call
loopne
add
add
cmpl
out
insb
js
roll
add
add
add
add
sti
add
call
testl
add
add
lret
add
test
push
sub
pop
push
push
push
push
call
mov
mov
int3
push
mov
addb
rcrb
stos
jl
imul
mov
mov
add
add
push
xchg
std
sub
pop
call
push
push
lea
push
call
pusha
xchg
cld
lret
push
int3
fidivl
int3
enter
iret
add
add
add
add
in
jo
in
hlt
lcall
cmp
test
stc
sbb
mov
lea
push
or
inc
add
not
rol
add
shr
sub
add
sub
add
pop
sub
ror
pop
push
ror
not
shl
pop
push
push
push
push
push
push
lea
push
push
push
call
lcall
addl
addb
add
clc
add
iret
ja
lahf
add
add
testl
jno
aam
add
add
cmc
add
cli
add
sub
pop
call
push
push
push
push
push
lea
push
call
in
add
out
jb
fnstsw
add
add
mov
add
jl
add
out
fiaddl
add
mov
ficoms
and
push
in
bound
add
jb
popa
nop
add
add
add
pop
mov
call
add
add
call
cmpl
je
push
push
push
push
pop
add
add
rol
not
sub
ror
xor
pop
shr
lea
pop
push
shr
add
pop
push
push
add
shr
inc
pop
call
cmpl
je
push
push
sub
rol
push
and
add
shl
sub
sub
sub
pop
rol
rol
pop
push
push
call
pop
movsl
jecxz
in
push
add
jecxz
mov
test
push
cmc
pop
in
mov
popl
add
mov
cmc
add
add
pop
mov
xchg
add
pusha
add
push
add
aam
add
mov
mov
cld
add
fdivrp
add
push
sub
pop
push
call
push
push
lea
push
push
push
push
push
call
add
add
js
add
imul
cmpsb
jae
nop
add
xchg
add
xchg
imul
add
in
sbb
add
sub
pop
cmpl
jne
mov
push
sub
dec
shl
pop
movl
jmp
push
lea
push
push
push
lea
push
call
push
add
pushf
pusha
repnz
add
add
stc
mov
mov
mov
pop
movb
add
sub
pop
xor
push
dec
xor
pop
pop
push
push
call
shrb
add
add
mov
add
mov
loop
mov
mov
add
jae
pop
add
add
add
add
add
movsl
push
push
jnp
loopne
int3
xorl
repnz
test
add
rcrb
int3
mov
pop
push
rol
dec
inc
pop
pop
push
shr
dec
add
pop
pop
leave
push
not
pop
ret
push
inc
rol
pop
push
mov
push
sub
rol
pop
add
push
sub
xor
add
pop
cmpl
jne
push
push
shl
add
push
or
inc
add
sub
shl
shl
sub
add
pop
dec
pop
push
not
pop
pushl
push
push
push
push
push
push
call
pop
les
add
lahf
mov
add
js
jnp
mov
lods
outsl
add
add
std
jae
add
ljmp
add
add
push
xor
add
push
push
call
add
jge
fldl
mov
fnsave
push
mov
add
mov
aam
mov
mov
shll
stos
add
iret
fldl
xchg
add
add
add
mov
add
jo
stc
jbe
in
clc
lcall
rclb
pushf
dec
mov
push
push
call
icebp
pop
push
in
movsl
add
cmc
jns
adcl
rolb
cmpsl
imulb
add
add
jb
fcomps
add
shll
incb
aam
aam
xchg
add
add
scas
fdivrs
iret
add
test
push
test
in
lock
jmp
push
dec
xor
pop
cmpl
je
push
add
shl
shr
not
pop
cmpl
jne
leave
push
push
push
push
push
push
push
call
lahf
hlt
push
loopne
not
lock
out
jb
mov
add
mov
std
add
add
jp
add
fsts
pop
mov
pop
cwtl
add
into
scas
jbe
stc
jne
out
add
mov
mov
add
sub
pop
add
pop
push
push
push
push
push
call
mov
xchg
shl
add
test
mov
mov
fiadds
iret
pop
add
fwait
add
outsl
add
add
mov
lret
je
add
stos
add
push
xor
xor
lea
pop
pop
push
push
push
lea
push
push
call
mov
cltd
stos
loopne
rolb
mov
add
fwait
out
add
out
fadds
pop
add
repnz
mov
push
in
in
pop
pop
push
lea
push
push
call
add
out
lods
std
in
rolb
lods
pop
je
insb
xor
scas
pop
cli
xlat
xchg
add
add
push
xchg
lret
cmc
in
in
in
into
sub
pop
leave
push
push
push
lea
push
call
aam
add
roll
aad
add
filds
jb
mov
pusha
jecxz
add
add
add
imul
add
les
xor
sub
pop
ret
push
shl
shl
not
shl
pop
jmp
cmpl
jne
push
push
dec
lea
xor
dec
push
sub
add
lea
add
sub
add
add
shr
pop
inc
sub
dec
pop
push
push
lea
push
push
call
imul
add
jae
add
add
add
add
xchg
imul
outsl
add
lcall
jne
push
push
lea
push
call
add
into
je
shlb
mov
imul
pop
pop
jno
mov
jne
lds
outsl
add
add
clc
add
xlat
add
push
popl
movl
mov
add
test
hlt
lcall
sub
add
iret
inc
shl
pop
push
push
sub
add
pop
call
push
lea
push
lea
push
push
push
call
add
movsl
cld
add
into
pop
add
cmpsb
movsl
add
add
jp
add
jp
mov
mov
in
loop
add
add
add
popf
add
add
add
xchg
add
add
in
pop
jmp
cmpl
jne
push
push
lea
push
lea
push
push
push
push
push
push
push
call
cmpsb
cmc
add
add
cli
jb
jo
addb
lret
fwait
ret
imul
addb
mov
mov
add
call
ret
jl
out
fcmovnb
jbe
add
add
mov
add
jns
add
les
mov
push
push
push
push
push
push
push
call
hlt
mov
repnz
cltd
add
mov
add
add
add
add
pop
jb
mov
fst
add
scas
add
rcll
add
insb
add
add
add
outsl
add
add
add
push
lea
push
push
push
push
push
lea
push
push
lea
push
push
call
pop
add
imul
add
loopne
add
outsl
add
cltd
add
fiadds
jo
popa
add
arpl
pop
jmp
ret
mov
xlat
testb
mov
xchg
add
out
add
add
add
pop
icebp
loope
in
fcomps
dec
sbb
add
rol
add
pop
push
push
push
shl
push
or
not
add
xor
sub
lea
shr
dec
pop
xor
pop
push
shl
sub
rol
pop
pushl
push
add
inc
xor
sub
pop
call
push
push
push
call
add
xchg
out
add
jecxz
push
loope
add
movsb
add
in
add
fwait
insb
mov
out
shrb
add
bound
push
scas
jae
mov
insb
sub
pop
call
push
push
shl
add
sub
push
and
add
shr
sub
lea
pop
inc
sub
ror
pop
push
lea
push
push
push
push
push
push
call
in
add
jae
add
int3
mov
add
mov
add
cmpsl
imul
add
sahf
cld
add
add
add
xlat
push
mov
add
add
add
mov
pop
pushl
call
push
not
pop
call
push
push
dec
dec
push
sub
add
not
shr
rol
sub
not
pop
shr
add
lea
pop
push
sub
pop
pushl
push
push
push
push
push
push
call
pop
add
push
lret
enter
jle
in
movsb
add
cmc
int
imul
cwtl
add
pusha
xchg
add
add
add
fidivl
call
call
call
push
push
add
push
xor
add
lea
sub
add
shl
rol
pop
dec
shr
add
pop
push
push
push
push
push
push
lea
push
call
les
pop
push
out
mov
test
add
fadd
add
add
iret
sbbl
add
add
mov
movsl
push
mov
scas
add
add
lcall
jne
call
push
push
lea
push
push
lea
push
push
lea
push
push
push
push
call
pop
add
imul
rolb
out
mov
clc
data16
add
rcl
shl
cltd
add
pop
push
add
pop
call
push
push
not
shr
ror
push
sub
add
lea
lea
shl
rol
sub
pop
sub
ror
add
sub
pop
push
push
push
lea
push
call
in
subb
fmul
xchg
push
add
clc
cltd
add
mov
cmpsb
popf
pop
mov
add
test
out
in
add
pop
nop
add
mov
js
jl
hlt
add
jge
iret
add
rolb
sub
pop
pushl
push
ror
add
rol
pop
call
call
push
push
add
xor
inc
push
or
inc
add
shl
sub
shl
sub
add
add
pop
xor
rol
xor
pop
push
push
push
push
push
lea
push
call
movl
int3
add
mov
fwait
sahf
add
fbstp
add
jne
add
in
call
pushl
call
push
lea
push
push
push
push
push
lea
push
call
aad
add
add
in
fsub
add
push
add
push
in
add
insb
xlat
aad
xlat
je
cli
add
pusha
add
sti
add
mov
imul
ja
stos
add
divb
in
lcall
shrb
mov
pop
push
shr
lea
push
or
not
add
ror
sub
ror
pop
rol
shl
add
pop
push
lea
push
push
push
push
call
mov
mov
add
add
add
add
ljmp
add
add
add
lcall
jne
call
push
add
pop
call
push
push
rol
not
sub
push
push
pop
add
not
rol
sub
rol
pop
sub
dec
lea
pop
push
push
push
call
add
jp
add
add
rcrb
cmpsb
add
xchg
loopne
divb
movb
add
test
loopne
add
icebp
jno
fwait
loopne
jbe
add
push
popa
add
iret
pop
add
xchg
add
outsl
add
add
fwait
in
add
loop
push
jnp
shrl
sub
pop
pushl
push
sub
xor
pop
call
call
push
push
rol
shl
lea
push
or
inc
add
lea
inc
sub
sub
rol
pop
inc
not
shr
add
pop
push
push
lea
push
push
push
push
call
fldl
add
add
add
add
lea
data16
fsubr
add
lret
mov
add
pop
add
cltd
add
add
addb
nop
add
icebp
add
fwait
add
int3
jl
add
add
shl
add
arpl
xchg
sub
pop
pushl
push
xor
shl
lea
pop
call
call
push
push
add
ror
push
push
pop
add
dec
inc
sub
add
pop
shl
pop
push
add
add
pop
pushl
push
xor
sub
xor
inc
pop
call
push
push
lea
push
push
push
push
push
push
call
loope
add
add
adcb
jge
add
stos
add
add
rolb
add
mov
nop
pop
aad
aad
enter
add
add
pop
mov
pop
ljmp
add
add
add
jns
mov
lret
loope
jge
lods
scas
in
jnp
sub
pop
lea
push
sub
add
sub
lea
pop
push
push
push
call
mov
loopne
fstpl
cmpsb
add
rolb
pop
add
add
mov
xchg
add
jae
add
lret
jae
lea
jp
add
mov
loopne
add
imul
add
add
into
leave
add
mov
stos
sub
pop
call
push
push
shl
sub
sub
xor
push
xor
add
shl
sub
inc
pop
inc
xor
add
pop
push
lea
push
push
push
push
push
call
add
js
push
mov
add
into
mov
lahf
add
js
add
add
add
add
add
add
arpl
sub
pop
pushl
call
push
sub
shr
not
pop
call
push
push
sub
dec
push
xor
add
dec
sub
rol
pop
inc
add
dec
inc
pop
push
lea
push
call
add
pop
add
mov
fidivl
jp
popa
add
add
ret
fnstsw
push
add
hlt
push
nop
jbe
mov
data16
shrl
jo
cltd
movsb
add
repnz
call
popf
loope
xchg
flds
lcall
jne
call
push
add
inc
pop
call
push
push
sub
shr
not
push
push
pop
add
rol
xor
lea
sub
ror
inc
shl
pop
pop
push
dec
xor
pop
pushl
push
add
xor
rol
pop
call
call
push
shl
pop
lea
push
push
xor
push
sub
add
dec
sub
lea
sub
not
not
pop
shr
sub
pop
push
shl
rol
add
inc
pop
pushl
call
push
sub
pop
push
push
lea
push
lea
push
push
push
call
add
mov
in
fwait
cmpsl
add
in
add
mov
mov
add
arpl
imul
push
add
divl
add
add
lods
add
jno
add
mov
fildl
pop
add
add
mov
into
add
nop
pushf
xchg
add
shrb
outsl
out
push
push
sub
lea
not
dec
push
or
not
add
shr
sub
add
rol
rol
pop
ror
add
shl
not
pop
push
lea
push
lea
push
lea
push
lea
push
push
push
call
pop
stc
add
push
ret
add
rcl
add
arpl
add
xchg
lock
int
mov
icebp
add
add
add
lcall
jne
call
push
shl
pop
call
mov
push
push
xor
push
sub
add
lea
not
dec
sub
sub
lea
xor
xor
sub
pop
sub
shr
not
pop
push
lea
push
push
push
call
add
add
add
mov
add
stos
xchg
fadd
lcall
add
pop
add
jmp
pop
lock
je
add
iret
popf
add
les
add
add
jne
add
sti
jp
add
lcall
jne
call
push
lea
push
push
lea
push
lea
push
push
push
lea
push
push
push
call
mov
mov
lahf
add
fld
add
loopne
sub
xchg
add
xlat
arpl
mov
lret
add
out
jge
shr
add
stos
clc
jno
add
add
popf
jo
add
add
add
push
cltd
popa
add
sub
pop
push
push
rol
rol
sub
pop
pushl
push
push
push
push
lea
push
push
call
jns
mov
jmp
add
repnz
hlt
insb
aad
test
add
add
mov
add
mov
add
add
add
mov
mov
push
js
xchg
xchg
mov
add
pop
icebp
loope
mov
xchg
add
andl
enter
addb
in
call
incl
pushf
mov
sub
sub
push
or
not
add
not
add
add
xor
sub
lea
shr
pop
sub
add
rol
pop
push
push
push
call
add
add
loop
rcr
scas
jnp
fwait
add
mov
jo
idivl
push
add
test
jne
add
add
add
add
mov
lods
add
add
mov
add
bound
add
lcall
jne
call
push
push
ror
add
push
or
inc
add
sub
sub
sub
pop
shr
ror
xor
pop
push
push
shl
push
or
not
add
sub
xor
inc
pop
sub
dec
shr
pop
push
lea
push
lea
push
push
call
mov
sti
add
mov
fadds
movl
ljmp
add
scas
fucompp
add
out
adcb
shrb
add
sub
pop
call
push
push
inc
not
not
push
or
not
add
sub
dec
not
add
add
pop
pop
push
push
lea
push
push
push
push
lea
push
call
fsubrl
stos
add
add
imul
cld
xchg
add
add
xchg
add
int3
add
add
addl
lods
mov
rorl
mov
mov
add
jl
popf
xchg
movsl
stos
lea
mov
add
arpl
add
add
sub
pop
pushl
push
push
push
push
push
push
push
call
add
rolb
add
add
fiadds
rcl
add
add
addb
mov
push
cwtl
add
push
je
loopne
stc
add
jns
add
push
add
add
into
mov
jl
add
addl
sub
pop
call
mov
push
rol
pop
lea
push
not
pop
lea
push
lea
push
push
push
lea
push
push
lea
push
push
call
add
jne
sub
add
js
add
stos
mov
add
xchg
mov
add
in
add
movsl
add
addr16
jne
mov
or
add
pop
add
pop
pop
add
add
add
insb
add
jbe
jb
sub
pop
push
push
push
lea
push
push
lea
push
call
mov
add
mov
pop
stc
lahf
std
fisttpll
push
add
add
add
add
add
add
jo
addl
mov
add
nop
jne
jmp
lret
mov
add
lcall
push
push
lea
push
lea
push
push
push
push
push
call
add
jnp
lock
les
mov
add
nop
lcall
add
call
jns
jecxz
shrb
mov
mov
pushf
add
mov
ficompl
jbe
mov
jmp
scas
mov
lcall
add
test
push
lea
push
call
stc
lea
xchg
add
pop
add
shl
loop
add
add
ljmp
out
mov
mov
push
push
sub
pop
push
push
xor
shl
sub
pop
push
push
push
push
push
push
call
enter
add
add
out
movb
mov
mov
popa
stos
pop
add
sbbb
pusha
iret
fstpl
fs
mov
add
add
mov
in
in
pop
push
push
lea
push
push
lea
push
push
lea
push
lea
push
push
push
lea
push
call
add
add
add
xchg
cmp
add
arpl
add
mov
call
add
xchg
jmp
les
cwtl
cltd
out
push
into
js
in
fdivr
lcall
add
int3
lea
rol
pop
push
push
add
dec
dec
pop
pushl
push
push
push
push
lea
push
call
add
fldenv
mov
add
add
mov
fsubr
lret
mov
pushf
pop
rolb
push
hlt
push
push
add
add
push
and
add
sub
sub
add
inc
sub
pop
dec
pop
push
push
push
call
js
outsl
loope
mov
add
lret
call
jae
add
add
sahf
add
jae
mov
negl
add
lret
cmc
mov
mov
cli
mov
rorl
cltd
push
mov
js
test
les
add
rolb
pop
pushl
push
rol
dec
not
dec
pop
call
push
xor
shl
pop
call
push
lea
push
push
lea
push
call
lahf
push
sar
add
fsubl
aam
iret
sti
xchg
add
hlt
add
mov
loopne
rolb
test
add
data16
mov
incb
cli
mov
arpl
pop
mov
push
lea
push
lea
push
lea
push
push
lea
push
lea
push
push
push
call
ficoml
cwtl
aam
mov
mov
jno
arpl
add
add
test
std
js
lock
xlat
scas
add
jne
xlat
add
mov
loope
mov
stos
sub
pop
pop
push
push
push
push
push
push
push
call
jno
scas
add
xchg
fnstenv
nop
iret
mov
add
add
mov
movsl
push
xchg
add
gs
sub
pop
dec
jne
call
push
push
not
dec
push
or
inc
add
sub
sub
shr
pop
lea
ror
shr
pop
push
push
push
push
push
push
push
lea
push
call
jb
mov
add
add
out
add
push
add
xchg
add
add
xchg
add
rol
call
add
cli
lret
add
movsb
xchg
xchg
add
add
add
add
add
add
jbe
shll
lea
add
scas
add
add
jne
push
push
push
push
lea
push
push
push
push
call
lock
pop
add
add
fcmovnb
add
add
push
jl
jmp
add
add
nop
add
add
mov
add
pop
test
add
shl
addl
add
stc
scas
add
lods
shl
add
sbbl
push
add
push
push
not
inc
pop
call
mov
push
rol
pop
lea
push
push
inc
push
xor
add
shl
xor
sub
add
dec
pop
not
pop
push
push
lea
push
push
push
call
add
add
pop
std
test
push
fiaddl
jno
add
add
popf
add
add
lret
flds
lods
push
js
add
hlt
fdiv
addl
cli
and
hlt
pop
add
jne
push
push
push
lea
push
lea
push
call
jmp
stc
test
add
add
ror
mov
xlat
mov
negb
pop
add
pusha
add
cltd
mov
add
add
add
in
in
lcall
lret
add
jmp
ror
sub
sub
pop
call
push
push
add
not
sub
push
and
add
shl
not
rol
not
sub
add
pop
rol
xor
pop
push
add
xor
lea
pop
pushl
push
push
push
push
push
call
mov
add
in
mov
add
add
lret
addb
push
rcll
filds
in
push
out
add
push
mov
add
out
jle
add
andl
out
add
add
add
mov
mov
fldl
add
add
xchg
scas
jl
sub
pop
call
push
add
pop
call
push
dec
shl
lea
pop
mov
lea
push
push
add
inc
ror
push
or
inc
add
sub
shr
sub
sub
pop
sub
pop
push
sub
shl
rol
pop
pushl
push
push
call
add
test
push
fdiv
add
test
add
loop
add
pop
add
push
add
xchg
je
add
add
add
push
mov
test
test
lcall
addr16
add
bound
repz
les
test
lea
push
call
add
mov
add
mov
outsl
add
jne
add
insb
add
aam
add
loope
lret
sub
pop
lea
push
pop
push
push
pop
push
push
push
call
add
xchg
jnp
add
mov
mov
xchg
push
add
test
fcmove
std
data16
add
cld
pop
in
mov
stos
mov
add
lahf
add
add
in
addr16
mov
add
xchg
xchg
add
clc
pop
push
pushl
push
push
sub
add
push
or
inc
add
rol
sub
rol
xor
sub
pop
dec
not
xor
pop
push
inc
sub
sub
pop
push
push
shl
sub
xor
pop
call
push
push
sub
shr
push
xor
add
rol
sub
xor
shl
lea
pop
inc
not
shr
pop
push
lea
push
push
push
push
push
push
push
lea
push
call
scas
add
add
add
mov
loop
add
mov
add
jmp
pop
int3
gs
rclb
cmpl
filds
movb
mov
add
js
pop
add
add
add
fcmovne
lret
jno
add
xchg
add
xchg
cmpsb
in
add
subb
fdivr
lcall
jne
push
push
lea
push
push
push
push
push
push
push
push
call
add
add
add
fisubrl
add
mov
push
add
aad
add
imul
jno
iret
xchg
add
test
add
in
fcomps
xor
add
push
push
lea
push
call
add
mov
out
add
adc
leave
add
add
addr16
stos
lret
add
add
cwtl
add
push
add
push
add
add
mov
shll
jnp
in
hlt
lcall
call
cmc
hlt
stos
xchg
call
mov
test
add
lock
roll
rcl
mov
mov
add
add
lods
mov
mov
insb
mov
add
add
in
add
mov
enter
add
jmp
jo
jle
cwtl
add
add
add
mov
mov
add
pop
add
xchg
add
lea
lcall
shrb
or
lea
out
fs
push
push
pop
add
xor
not
sub
shl
sub
pop
sub
pop
push
push
lea
push
push
push
push
call
xchg
lock
mov
mov
hlt
loope
xlat
add
sar
imul
aad
add
add
add
call
push
lea
push
call
add
add
insb
lret
jbe
add
arpl
jns
jae
add
pop
add
aam
stc
jb
fsub
add
add
xchg
add
mov
jmp
fmuls
jbe
popa
test
jo
arpl
cltd
adc
add
out
dec
pop
call
push
sub
sub
xor
sub
pop
jmp
push
shl
pop
pushl
mov
push
dec
pop
jmp
push
push
not
push
or
not
add
sub
shl
sub
sub
rol
ror
add
pop
rol
ror
ror
pop
push
sub
pop
pushl
push
add
dec
pop
call
push
inc
sub
add
pop
push
call
push
push
add
sub
sub
push
or
not
add
not
dec
sub
dec
rol
ror
pop
dec
rol
pop
push
ror
shl
pop
pushl
push
push
push
push
lea
push
push
call
add
test
add
add
mov
jno
test
shrb
add
mov
mov
push
addr16
nop
fs
stos
jae
add
fisubl
add
scas
jmp
add
lcall
jne
add
push
lea
ror
pop
push
call
push
not
pop
leave
add
push
lea
push
push
lea
push
lea
push
push
call
mov
add
scas
mov
push
add
lcall
add
add
arpl
add
nop
add
add
in
xlat
add
mov
add
hlt
in
add
pop
shll
sub
pop
pop
push
ror
sub
pop
pop
push
lea
push
push
call
add
aad
add
rorb
add
add
add
ret
mov
add
hlt
add
add
add
add
nop
add
xchg
add
in
xchg
add
jle
xchg
mov
js
add
nop
add
sub
pop
pop
push
push
push
push
push
lea
push
lea
push
lea
push
lea
push
push
call
add
add
add
stos
cld
imul
add
jbe
mov
loopne
add
in
mov
add
add
add
loope
add
push
testb
add
lcall
push
add
pop
leave
push
push
push
lea
push
push
push
push
call
outsl
mov
add
add
cwtl
add
lret
popf
add
test
stos
mov
clc
mov
mov
fdivrs
in
add
push
sub
rol
sub
pop
ret
push
lea
push
push
push
push
push
lea
push
lea
push
call
mov
loopne
jns
jge
testb
xchg
mov
add
xchg
add
add
add
shlb
lcall
add
imul
rolb
add
jnp
stc
enter
bound
sub
pop
leave
push
dec
rol
add
pop
ret
push
not
pop
push
mov
push
lea
xor
sub
pop
cmpl
jne
push
add
not
pop
mov
push
lea
push
call
clc
lea
add
push
into
add
addr16
add
mov
mov
mov
loopne
add
loopne
add
add
sub
pop
jmp
mov
push
push
push
push
push
push
lea
push
call
cmc
jnp
stc
add
mov
add
mov
aad
lods
out
nop
stos
add
add
add
mov
loop
outsl
mov
in
in
and
push
push
lea
push
push
push
push
push
push
lea
push
push
call
add
ja
pop
add
std
mov
jecxz
in
add
add
cld
add
xchg
add
add
imul
jae
add
add
add
mov
aad
jmp
jnp
loop
mov
jno
iret
add
add
jle
xchg
fiadds
leave
push
shr
pop
xor
push
not
dec
pop
add
xor
push
rol
add
pop
dec
push
push
push
call
pop
ret
out
add
add
sti
add
add
add
iret
mov
fucomi
add
add
lock
mov
add
popa
pop
flds
add
addl
add
add
in
jno
add
add
add
js
push
add
scas
add
add
xchg
pop
in
sti
mov
addl
add
and
add
push
push
push
push
push
push
push
call
mov
add
jno
add
xchg
scas
add
repnz
fwait
add
jecxz
imul
stos
add
aad
mov
add
push
lea
add
jge
push
add
addr16
push
fadds
xchg
pop
sub
pop
sub
pushl
push
push
push
push
push
push
call
add
jmp
add
rorb
add
pop
jne
sahf
mov
imul
in
cld
mov
add
addb
add
cmc
lods
jmp
test
mov
sahf
mov
add
pop
stos
cmp
mov
add
sub
pop
pop
push
ror
pop
sub
push
lea
push
push
call
std
add
cli
cmpsl
fwait
std
les
add
pop
add
test
roll
add
add
ljmp
sub
pop
cmp
jne
push
lea
push
push
push
push
call
movsl
loopne
je
iret
add
add
mov
add
add
xchg
mov
cmpsb
jle
xchg
add
add
xchg
shlb
mov
mov
pop
aam
mov
add
add
lcall
enter
push
xor
rol
sub
pop
sub
push
push
push
call
add
add
add
jl
test
arpl
add
add
add
add
add
xchg
add
add
mov
add
cwtl
test
ret
in
add
xlat
add
leave
lret
add
add
clc
xchg
mov
addl
fwait
push
add
add
je
jge
jns
sub
pop
mov
push
push
lea
push
push
call
pop
int3
mov
add
add
test
les
mov
add
jecxz
push
loopne
add
add
mov
add
add
add
add
add
push
add
add
lcall
jmp
xchg
cmp
fwait
push
lea
push
lea
push
push
push
call
add
int
add
enter
mov
ja
cmpsb
neg
xchg
jnp
mov
loope
xlat
mov
jecxz
add
fcoml
mov
gs
mov
add
iret
lret
decb
add
popf
add
add
jne
mov
in
loopne
add
sub
push
sub
dec
pop
pushl
push
rol
inc
pop
pop
shr
push
sub
rol
pop
and
push
dec
pop
sub
cmp
jne
push
dec
pop
leave
push
lea
push
call
lahf
scas
into
pop
add
add
xchg
mov
cwtl
add
add
add
add
fwait
add
lahf
add
mov
icebp
ljmp
mov
movsb
xchg
jmp
mov
icebp
add
add
add
add
lcall
add
push
ror
pop
push
mov
push
rol
pop
add
push
dec
pop
push
push
push
push
push
lea
push
push
call
add
mov
push
adcb
call
lea
xchg
add
add
jmp
add
fisubs
push
jb
add
cmc
rcl
adcb
jo
insb
add
cld
add
hlt
ja
add
add
add
lret
add
add
push
push
sub
pop
push
push
xor
pop
mov
push
push
lea
push
push
push
push
push
push
push
push
call
add
out
int3
negb
add
add
add
pop
xlat
lret
stos
xchg
test
add
arpl
jle
int3
add
movsb
jno
testb
in
add
push
stc
jns
cmpsl
pop
jo
pop
sub
pop
lea
sub
push
push
call
pushf
add
add
movl
add
jle
xchg
pop
ret
insb
leave
add
pop
lods
and
add
lock
xchg
add
sarb
fidivs
push
imul
add
xchg
add
popf
xchg
add
xchg
push
add
add
sub
pop
mov
push
push
lea
push
push
call
fildl
leave
mov
jbe
imul
add
popa
xchg
add
add
add
add
stc
ja
enter
cmpsb
add
call
add
add
jmp
mov
add
roll
push
stos
add
lret
add
xchg
push
mov
in
add
cli
lock
sub
pop
shr
push
push
push
lea
push
push
push
call
add
outsl
push
roll
mov
add
addr16
lds
add
pop
in
movsl
add
add
add
stc
mov
add
lcall
ficoml
mov
add
push
lea
push
push
push
push
lea
push
push
call
add
lret
add
enter
loop
cli
lds
sarl
add
xchg
add
shr
add
jle
add
add
add
mov
mov
sarb
add
mov
in
in
mov
push
shr
rol
pop
add
push
xor
lea
add
xor
pop
xor
push
push
push
lea
push
push
push
push
lea
push
push
call
add
fnstcw
loope
fadds
add
push
add
add
lret
je
arpl
xlat
add
mov
nop
xchg
pop
sub
pop
mov
and
push
shl
sub
ror
pop
rol
push
dec
pop
rol
xor
push
push
lea
push
lea
push
call
scas
pusha
jmp
add
adc
xlat
sti
push
ljmp
add
add
mov
add
xchg
add
xchg
fistpl
add
aam
mov
scas
bound
add
cmc
add
add
sub
pop
inc
push
rol
add
shr
pop
cmpb
jne
add
push
dec
pop
cmp
je
push
rol
pop
add
push
rol
inc
sub
pop
cmpl
jne
push
pop
xor
pop
push
push
push
lea
push
call
mov
andb
scas
scas
lret
add
xchg
add
add
add
cwtl
faddl
add
test
add
add
add
add
add
add
stc
push
add
scas
in
in
lock
lcall
push
push
lea
push
push
call
push
mov
add
in
push
fs
lret
add
jp
add
jns
flds
loope
push
rolb
jp
add
testb
sub
pop
pop
pop
push
not
ror
inc
sub
pop
pop
leave
push
push
call
mov
add
add
lods
add
mov
mov
call
in
pop
ljmp
loopne
add
add
lods
add
add
notl
pop
ret
mov
push
push
lea
push
push
lea
push
lea
push
lea
push
push
lea
push
call
scas
stos
aad
add
add
jo
into
mov
pop
mov
add
popa
add
subb
add
notb
insb
add
sbbb
sub
pop
add
push
push
lea
push
push
push
push
push
push
push
push
call
add
addr16
bnd
fwait
sahf
shll
add
add
add
add
mov
stos
lock
add
add
push
fwait
add
add
ret
add
fcomps
push
inc
pop
push
push
pop
add
push
push
push
push
push
push
push
push
push
push
call
add
mov
add
add
pop
rolb
js
push
loop
xchg
add
mov
mov
sahf
leave
nop
add
jmp
int3
push
shr
in
fdivr
lcall
add
loopne
pop
testw
push
xor
ror
pop
pop
push
lea
push
lea
push
lea
push
call
loope
xchg
add
jmp
push
add
add
leave
cld
js
jbe
lds
add
test
pop
bound
test
add
lret
mov
jecxz
in
add
cltd
scas
mov
cwtl
mov
jno
add
in
lock
lcall
mov
push
shr
sub
pop
push
push
add
sub
pop
call
push
push
push
lea
push
push
push
lea
push
push
push
call
pusha
jmp
push
add
mov
mov
add
add
flds
add
jle
aam
lock
add
loopne
jle
jge
jmp
jmp
add
rclb
add
ja
popf
gs
mov
add
mov
andl
pop
xor
pop
push
dec
add
pop
pop
push
ror
add
pop
pop
pop
push
push
lea
push
lea
push
lea
push
push
call
lcall
push
mov
add
add
aam
add
add
mov
test
push
loopne
incb
add
add
fiaddl
mov
fsubrl
add
roll
stos
pop
into
mov
mov
rolb
lcall
push
push
push
push
push
push
push
push
push
lea
push
call
mov
mov
add
add
lock
in
jmp
mov
pusha
mov
add
loope
xchg
in
fcomps
push
shl
pop
ret
push
push
push
push
call
pusha
add
jnp
in
sahf
in
add
add
add
xchg
add
imul
enter
mov
cmc
sar
ret
flds
pop
in
fiaddl
js
je
add
add
add
sahf
jno
add
add
add
lcall
mov
push
add
pop
add
push
push
push
lea
push
push
push
lea
push
lea
push
lea
push
call
notb
add
lahf
aam
add
roll
add
add
test
iret
enter
add
shlb
pop
add
xchg
mov
xchg
push
add
add
add
add
bound
fdivr
lcall
push
ror
sub
pop
push
push
add
pop
push
push
ror
pop
push
mov
push
push
push
call
add
add
add
call
outsl
les
aad
mov
imulb
xchg
imul
ja
aad
hlt
fmul
mov
add
stos
loop
popl
loopne
rolb
imul
outsl
into
mov
add
add
sub
pop
push
push
sub
dec
pop
pop
lea
push
push
lea
push
push
push
push
push
push
push
call
add
roll
add
cmc
mov
add
popa
cli
repnz
shrb
add
lea
add
add
cltd
add
out
mov
push
push
popa
fiadds
sub
pop
sub
push
push
lea
push
call
add
out
in
add
jne
push
add
rcr
add
add
add
cld
add
add
scas
add
test
add
add
fcoms
mov
js
push
cmpsb
mov
jge
push
add
sub
pop
mov
shr
push
shr
not
dec
pop
add
mov
push
add
add
sub
pop
add
push
push
call
jns
add
mov
xchg
add
add
mov
add
add
cld
add
in
mov
lret
test
push
js
into
pop
test
add
add
add
pop
mov
add
lret
mov
add
cmpsb
into
clc
add
shlb
add
in
clc
lcall
jae
popl
push
push
lea
push
call
testl
add
add
add
xchg
fiaddl
mulb
mov
sub
pop
mov
push
push
lea
push
push
push
push
push
push
call
add
jns
add
aam
add
add
cli
filds
jle
push
mov
add
add
add
add
mov
addl
fs
cmpsb
add
pop
js
in
loopne
lcall
stc
xor
push
add
rol
pop
lea
mov
push
lea
push
lea
push
push
push
lea
push
push
lea
push
push
push
call
mov
js
cmpsl
lcall
xchg
add
add
add
imul
pop
add
push
push
push
push
lea
push
push
lea
push
call
sti
push
fiaddl
cltd
cmc
add
imul
jmp
add
add
sahf
iret
add
popl
push
add
fiadds
xchg
add
add
mov
lcall
rclb
lea
pop
rol
push
sub
pop
nop
push
push
lea
push
push
lea
push
push
call
mov
fdivrp
jne
lock
add
add
add
pop
stos
lahf
xchg
bound
icebp
xchg
mov
stos
mov
out
mov
lret
shll
test
jns
add
pop
pop
add
mov
add
lcall
xor
push
add
pop
nop
push
lea
push
push
call
mov
icebp
push
pop
add
xchg
add
addb
mov
mov
pushf
add
pop
out
pop
add
add
insb
add
add
add
xchg
mov
stos
mov
out
call
add
aam
faddl
inc
push
shl
dec
add
pop
nop
push
lea
push
push
push
lea
push
push
push
push
push
push
call
jnp
add
add
jb
add
pop
push
add
lods
fcomps
add
mov
cmc
jmp
nop
xchg
jbe
add
add
add
pushf
pop
add
incb
lds
lret
mov
imul
fdivr
lcall
push
push
push
lea
push
push
push
call
add
mov
push
add
add
push
xchg
popf
add
lods
add
jno
pushf
add
hlt
add
add
add
mov
ljmp
sub
pop
cmpb
jne
push
shr
not
pop
add
nop
push
ror
add
dec
pop
nop
push
push
push
push
push
lea
push
push
lea
push
lea
push
push
call
popl
jp
fiadds
fdiv
mov
xchg
add
add
stc
gs
add
add
add
pop
jo
jb
mov
vandps
fistps
add
add
add
pop
add
inc
or
test
add
push
xor
add
lea
pop
nop
push
xor
sub
pop
nop
push
push
push
lea
push
lea
push
push
push
call
pop
les
fstpl
add
out
add
movb
add
xchg
test
add
add
jecxz
xlat
addr16
add
lcall
push
xor
ror
pop
nop
nop
push
push
push
push
push
lea
push
lea
push
call
add
test
add
add
movl
add
roll
cltd
add
mov
mov
add
in
add
mov
add
in
push
add
jp
mov
add
add
sub
pop
cmp
jb
push
lea
push
push
push
lea
push
push
call
mov
add
xchg
add
imul
add
push
add
les
add
outsl
popa
mov
sarl
pop
lock
add
jge
add
push
add
mov
add
add
xchg
test
add
mov
cwtl
outsl
leave
add
fldl
sub
pop
xor
push
lea
rol
pop
jmp
mov
push
push
push
push
push
push
push
push
push
call
jns
add
filds
add
xchg
gs
addr16
add
add
leave
add
sarb
mov
add
jmp
stc
addb
add
filds
add
stos
add
mov
add
add
loope
pop
fwait
push
outsl
mov
add
pop
add
cltd
add
add
push
push
push
push
lea
push
push
push
push
push
lea
push
call
add
mov
jmp
add
mov
add
movsb
in
add
add
sahf
iret
add
shll
clc
pop
add
stos
add
jnp
pop
add
cmpsl
les
add
mov
lds
mov
mov
add
mov
jb
push
push
lea
push
push
push
push
lea
push
push
push
call
popa
add
out
add
je
add
add
aam
cli
pop
lret
add
mov
test
pop
cwtl
mov
add
add
add
mov
jae
mov
add
xchg
add
jns
add
imul
add
roll
lcall
inc
sbb
lea
push
push
lea
push
push
lea
push
push
call
imul
scas
leave
add
cli
cmc
aad
jle
rolb
add
add
add
xchg
pop
add
xchg
arpl
add
add
add
xchg
lock
push
movsl
lea
popa
push
arpl
jp
fwait
pop
add
add
rcr
push
movsb
fldpi
cmc
add
enter
pop
add
push
dec
pop
mov
push
add
pop
xor
xor
push
sub
pop
shl
xor
push
lea
push
push
push
push
call
addr16
cmpsl
call
add
into
add
add
call
popa
popa
mov
stos
mov
pop
add
out
cmpsl
push
sub
pop
shl
push
add
pop
xor
push
sub
pop
shl
xor
push
push
push
push
lea
push
push
push
push
call
jne
add
add
push
int3
xchg
add
popl
add
add
loope
add
add
xchg
mov
mov
add
stc
add
add
fcomip
add
add
outsl
mov
add
out
jno
add
test
addl
mov
lods
loope
jle
add
add
push
push
sub
pop
mov
push
ror
ror
sub
pop
add
push
lea
push
push
push
push
call
out
add
popa
add
add
ja
int3
popf
add
add
mov
add
fldl
add
add
outsl
add
add
add
add
loopne
fiaddl
lahf
add
add
pop
mov
aam
add
cmc
loope
add
pop
push
shl
pop
pop
pop
push
push
push
push
call
fsubrl
add
loope
arpl
ret
loopw
mov
faddl
jo
add
mov
xchg
xchg
mov
ret
je
add
loope
testb
jbe
fcompl
cld
clc
cmpsl
add
add
lock
mov
call
mov
ret
std
add
testb
push
push
lea
push
lea
push
call
add
jecxz
add
cli
ja
add
add
add
out
add
add
add
push
add
into
add
add
mov
data16
hlt
add
jmp
lahf
pop
add
int
add
lods
mov
jmp
add
loope
sub
pop
ret
push
push
rol
rol
sub
xor
pop
mov
push
push
push
push
push
push
push
call
mov
add
mov
movsl
mov
add
mov
mov
add
nop
add
jo
mov
out
mov
add
add
add
lcall
push
push
push
lea
push
push
push
push
call
push
in
add
add
ljmp
fnstsw
iret
xchg
add
sbbl
jb
sub
pop
push
push
rol
pop
push
push
push
lea
push
lea
push
push
push
push
call
les
lods
xchg
add
mov
add
mov
pushf
into
rcrb
add
jecxz
loop
add
add
mov
mov
add
add
rolb
cmpsl
ljmp
lcall
dec
or
push
lea
push
push
push
push
lea
push
call
add
cmpsb
bnd
add
in
add
clc
add
cmc
test
add
mov
add
out
mulb
ret
int3
add
push
mov
mov
add
mov
lcall
loop
outsl
add
add
sub
pop
mov
mov
push
not
add
pop
test
je
mov
push
push
push
push
push
lea
push
push
push
push
call
in
add
push
mov
mov
ret
mov
add
add
jmp
rolb
les
ja
pop
mov
hlt
lods
jae
add
mov
mov
jle
push
pushf
xchg
testl
mov
xorb
jge
sti
outsl
pop
js
add
pushf
add
fcompl
testb
roll
cltd
push
call
add
push
ljmp
ret
add
push
pop
clc
add
add
loopne
add
add
mov
xchg
jl
jo
cltd
cld
outsl
add
xchg
add
jns
cli
stos
sub
pop
mov
mov
push
sub
ror
shl
pop
mov
push
push
push
lea
push
push
lea
push
call
add
mov
imul
add
add
jnp
jmp
add
ja
outsl
jnp
les
xchg
jne
pusha
nop
push
add
addr16
add
add
add
test
pop
jnp
filds
lcall
push
push
lea
push
lea
push
push
push
lea
push
push
push
push
call
mov
add
test
data16
add
imul
stos
jns
add
fstps
jecxz
mov
add
add
fcompl
add
lcall
rorb
test
add
push
lea
push
push
push
push
push
push
call
push
outsl
add
add
int
add
call
push
outsl
in
out
add
add
add
mov
add
pop
cld
add
mov
stos
leave
cmp
add
lds
jnp
fcompp
mov
addr16
add
add
mov
in
in
test
je
push
xor
xor
pop
mov
push
push
push
lea
push
push
lea
push
push
call
loope
add
divb
add
mov
ja
test
add
push
jp
cmc
jns
fwait
add
jge
add
roll
int
movsl
icebp
pop
jne
add
stc
add
fwait
mov
jno
lret
add
jno
add
roll
in
in
lcall
push
sub
rol
add
pop
cmp
je
push
push
push
push
lea
push
lea
push
lea
push
push
push
push
call
sub
fst
add
popa
mov
out
jmp
ret
pop
xchg
jge
add
rolb
add
pop
mov
stos
mov
add
into
add
cld
jecxz
mov
lahf
add
mov
lcall
rorb
or
call
rcrb
push
push
lea
push
push
push
lea
push
call
icebp
mov
bound
add
add
add
sti
mov
add
add
mov
add
add
iret
sub
pop
pop
pop
push
lea
push
push
call
fists
imul
add
add
add
std
shll
add
add
out
sub
pop
pop
push
add
add
dec
pop
pop
push
pop
leave
ret
push
add
xor
pop
mov
inc
push
inc
inc
pop
cmp
jne
push
inc
pop
lea
push
shl
lea
not
pop
mov
push
lea
push
push
lea
push
push
lea
push
push
push
lea
push
call
mov
add
test
out
add
mov
add
popa
add
add
loope
jnp
add
add
lcall
in
test
add
push
push
push
push
push
push
call
push
add
add
add
add
add
add
imul
pop
stos
add
std
aam
mov
add
nop
out
xchg
shrl
add
mov
xchg
add
add
test
lcall
push
push
push
lea
push
push
push
call
mov
add
push
add
faddl
stos
add
roll
push
jle
add
xchg
add
add
jno
add
add
add
lret
loopne
addl
add
jb
sub
pop
add
cmp
jne
push
lea
push
lea
push
push
push
push
push
push
push
lea
push
call
test
add
fwait
add
xor
add
cli
mov
pusha
roll
aam
add
out
mov
mov
roll
add
ljmp
add
stc
shr
nop
mov
add
lcall
inc
add
call
je
mov
push
lea
push
push
push
call
call
add
outsl
hlt
roll
add
subb
leave
adc
add
push
jmp
add
add
into
iret
pop
add
lcall
roll
loopne
test
std
call
push
call
add
xchg
add
add
pop
mov
fs
ljmp
notl
incb
jbe
add
into
add
sub
pop
jmp
xor
push
push
push
lea
push
push
call
xchg
mov
mov
add
add
jae
cmpsl
subl
add
rolb
fsubr
add
mov
cld
push
add
add
mov
pop
loop
jecxz
andl
in
in
lcall
push
sub
pop
pop
push
rol
rol
pop
pop
push
ror
sub
not
sub
pop
pop
push
push
push
push
push
push
call
add
je
xchg
lcall
lock
add
add
insb
nop
push
scas
add
add
jmp
add
fwait
lret
jne
add
sub
pop
leave
push
push
lea
push
call
mov
rolb
aam
mov
jmp
mov
add
xchg
push
add
add
cmc
sti
add
mov
in
mov
sub
pop
ret
push
push
lea
push
push
call
out
add
arpl
xchg
add
int3
pop
add
cmc
fildl
fwait
xchg
add
fwait
iret
add
add
fxch
aad
add
fadds
inc
call
lea
push
push
lea
push
push
push
push
call
mov
enter
addl
jl
mov
movsl
add
gs
test
int3
ljmp
add
out
mov
add
popa
mov
add
jo
xchg
add
mov
add
fldl
mov
mov
mov
sub
pop
pop
pop
push
push
call
add
mov
filds
add
int
jp
jmp
add
add
popf
les
test
addl
mov
test
call
xchg
test
fistps
out
out
xchg
stos
add
lcall
add
add
cmc
mov
lcall
push
push
push
push
push
push
push
push
push
call
fadds
add
add
test
add
add
mov
stos
movsl
jge
add
pop
add
test
add
in
jb
push
ret
jnp
jns
lret
xchg
or
loop
movsl
add
shrl
mov
pop
mov
outsl
jae
add
sub
pop
pop
leave
push
push
push
push
push
call
popa
xchg
add
xorb
shl
add
mov
jmp
add
add
sub
pop
ret
mov
push
lea
xor
pop
pop
push
push
lea
push
lea
push
push
push
push
push
push
call
add
add
movsb
addr16
push
add
pop
xchg
add
lret
mov
stos
out
movsl
int
pop
add
add
stos
add
add
mov
fisubs
add
mov
add
fstpt
lcall
push
push
lea
push
lea
push
push
push
push
push
call
add
add
out
out
in
add
pop
add
rclb
mov
xchg
add
lcall
add
pop
add
sub
pop
pop
pop
push
lea
push
push
lea
push
push
push
push
push
lea
push
call
add
arpl
add
addl
fiadds
mov
jne
add
ret
movsb
lods
pop
jp
test
movsb
pop
add
add
add
mov
mov
push
add
ret
test
jae
clc
sbb
test
ja
test
jae
sbb
push
inc
and
cmp
dec
jae
test
push
pushf
mov
aas
rorl
rol
lods
pop
fcmovu
lds
fisttpl
sbb
xchg
xchg
jae
mov
aas
mov
std
jp
std
loop
jmp
add
mov
outsl
and
cmp
cmpsb
xchg
inc
pushf
mov
xchg
test
fldenv
lahf
pop
jnp
pop
jmp
outsl
out
repz
sti
imul
xchg
push
arpl
adc
jge
aad
pop
and
or
movl
or
push
sbb
push
ja
in
incb
or
mov
daa
outsl
xchg
sub
or
int
xchg
xchg
jmp
test
inc
push
call
lret
stc
adc
out
cmpsb
xchg
popf
aas
mov
add
push
ror
cwtl
in
sub
sub
or
mov
dec
std
rol
jecxz
mov
and
out
add
sub
push
sti
mov
in
sbb
loope
sub
lea
pushf
cld
aad
jne
stos
je
movsl
or
nop
and
icebp
loope
decb
or
aam
aam
punpcklwd
je
and
push
ljmp
jne
inc
loopne
mov
out
dec
pop
jb
xchg
sub
adc
sub
pop
notl
imul
leave
repz
loop
jg
mov
mov
aad
enter
inc
fwait
loop
lret
les
fcomp
sbb
jecxz
inc
stos
outsb
aaa
iret
enter
sbb
xor
sub
xor
fdecstp
mov
nop
andb
rcr
ljmp
adc
cmpsb
sub
arpl
sahf
xor
sbb
jae
fistps
lcall
out
and
jne
out
shrl
and
dec
xorl
mov
pop
mov
mov
movsb
fwait
pop
mov
jg
xchg
cwtl
add
ret
sahf
add
shrl
cmpsb
mov
rcll
dec
mov
pusha
nop
rcrb
out
popf
cmp
pop
sbb
les
mov
test
adc
mov
fstl
jno
inc
lea
add
adc
mov
add
push
aam
pop
in
add
push
scas
push
jp
mov
icebp
mov
mov
xchg
andl
push
roll
add
lds
into
inc
test
add
aad
mov
stos
aas
ss
mov
and
dec
xchg
ja
mov
mov
fidivl
dec
mov
push
jae
adcl
arpl
filds
mov
in
dec
jns
loope
xchg
test
fstl
movsl
test
dec
sbb
jp
dec
mov
dec
ror
sub
psubb
mov
filds
jnp
stos
mov
popa
data16
push
dec
xchg
push
dec
dec
push
dec
outsl
movl
lea
loopne
sub
in
add
xchg
push
xchg
test
out
cs
sub
mov
sub
jl
jbe
mov
rcr
scas
xor
inc
cmpsl
push
daa
fs
xchg
cmc
cli
test
stc
pop
cmp
std
cmp
icebp
mov
push
mov
xlat
fldl
popa
jb
mov
add
jecxz
arpl
pop
pop
aas
cwtl
dec
inc
cmp
movsl
mulb
jge
add
lods
pop
pop
push
push
and
enter
ficomps
into
bound
cmp
jle
and
loope
sarl
mov
out
pop
sub
lahf
cmpsl
xor
cmpsb
or
jmp
aad
popa
dec
in
mul
xchg
iret
jg
mov
jge
into
adc
pop
xor
test
mov
pop
test
enter
mov
data16
ror
mov
std
aaa
pop
push
dec
push
in
and
pop
iret
fnstenv
and
aad
mov
loopne
jecxz
hlt
add
dec
stc
ljmp
jg
inc
mov
fists
or
pushf
sbb
test
imul
cmpsl
mov
scas
out
pop
subb
push
push
enter
int
and
jle
stos
inc
in
push
jne
loope
imul
add
adc
dec
hlt
rolb
sub
test
lret
stc
sub
jo
or
daa
mov
repnz
cmp
stc
jmp
popf
into
jno
xchg
sbb
sbb
inc
in
xor
pop
loope
ljmp
cmp
fsubrs
cmp
push
lcall
jno
jle
xor
pop
adc
mov
mov
jnp
out
frstor
cwtl
ja
test
jp
not
mov
arpl
repz
lret
scas
test
push
data16
cltd
call
sbb
aaa
mov
or
cvttps2pi
lods
sbb
jne
sarl
xor
jp
icebp
pop
jl
movsb
inc
push
adc
mov
sub
mov
mov
es
xlat
mov
sub
stos
out
sbb
sar
scas
mov
cmp
cwtl
lock
cmpsl
adc
ljmp
and
sub
lods
stc
lds
sahf
mov
mov
hlt
push
mov
mov
dec
cmp
jmp
mov
jmp
adc
or
out
push
xlat
xor
mov
dec
dec
mov
fcmove
push
mov
mov
lods
je
adc
aam
pop
hlt
in
jae
js
xchg
push
dec
inc
fadds
xchg
add
xchg
rcrl
mov
pop
loope
jle
fidivrl
test
mov
out
inc
push
je
sub
mov
sbb
jno
adc
jge,pn
push
cmp
cli
mov
mov
call
jmp
adc
add
xchg
stos
sub
popf
dec
test
push
jbe
loop
repnz
sbb
add
mov
mov
adc
fadd
add
sub
and
pop
dec
sbb
jne
sbb
inc
stos
ret
push
sub
mov
loop
aad
loopne
fadds
xchg
mov
xchg
and
movl
dec
sbb
push
lds
test
sbb
ror
ljmp
mov
lock
xor
cwtl
mov
xchg
aad
xor
nop
cli
and
xchg
or
pop
mov
enter
pop
or
loopne
xchg
xor
call
stos
les
es
mov
jge
cld
xchg
loopne
mov
aaa
xor
and
mov
out
inc
or
sbb
in
mov
sar
push
sbb
cld
arpl
ja
jmp
ljmp
and
mov
mov
pushf
xor
loope
and
lret
daa
sahf
es
dec
popf
xchg
dec
cmp
xlat
mov
shl
insl
lcall
pop
aas
lcall
outsb
ficompl
sub
call
ja
mov
and
xchg
xchg
sub
dec
inc
pop
aad
inc
popa
loopne
and
fiadds
add
pop
int
cwtl
into
or
inc
leave
sbb
test
outsb
adc
push
mov
clc
xlat
test
xchg
mov
mov
scas
scas
xchg
test
imul
dec
push
daa
and
mov
mov
push
sti
lret
aaa
je
add
dec
imul
fistps
lock
movsl
add
mov
ficoms
sub
sub
hlt
ret
push
sub
sbbl
cmp
pop
xchg
jo
adc
mov
mov
ficoms
dec
inc
shll
mov
jnp
dec
mov
mov
mov
or
test
frstor
loop
stos
ljmp
mov
in
movsl
mov
loopne
data16
dec
les
pushf
push
jl
xchg
xchg
shrb
push
jg
sti
inc
ss
insl
xlat
push
dec
cmc
add
test
mov
dec
adc
inc
loop
lock
xor
test
imul
imul
aaa
test
sub
sub
bound
imul
cmp
pop
addl
mov
xorl
ja
daa
inc
outsb
aas
inc
aaa
loope
arpl
cwtl
cmpsl
or
cmp
shrl
and
xchg
loopne
inc
cmc
xchg
push
sub
gs
iret
sbb
aaa
inc
pop
pushw
pop
shr
add
inc
imul
cmpsl
leavew
cmpsl
lods
insb
into
ds
es
shlb
cmp
push
inc
jno
daa
xchg
es
add
scas
jl
add
jle
inc
mov
inc
adc
xchg
cs
cmp
xor
movsl
jg
cmc
mov
and
or
clc
push
fadds
cs
in
aas
movsb
adc
aam
add
fwait
scas
jecxz
ret
jae
inc
dec
test
sar
scas
cmp
mov
mov
xor
lahf
adc
mov
mov
mov
adc
mov
add
hlt
xor
push
and
cmc
out
xor
shl
push
cld
xor
stos
sbb
sarb
aad
mull
push
out
testl
jecxz
out
xchg
lahf
in
mov
pop
xor
pop
mov
pop
add
push
addb
mov
in
jb
mov
push
sti
xor
xchg
mov
inc
xchg
add
pop
pop
shl
dec
dec
mov
fsubs
push
adc
jp
dec
or
loop
push
and
sbbb
inc
loope
sbb
pusha
xchg
or
inc
sub
inc
lea
xor
xor
call
sub
loope
jmp
and
test
orl
jne
sbb
fnstenv
or
mull
lret
cwtl
ss
inc
movsl
out
cmp
sahf
movsb
adc
and
mov
xchg
popl
lea
cld
cmp
xor
mov
cmp
fstpt
push
sub
test
jb
scas
les
leave
mov
sub
add
sbb
popf
cltd
pop
sbb
pop
shrb
mov
into
enter
inc
fbstp
leave
fwait
jle
cmp
xchg
pop
lcall
xchg
cmp
and
js
das
cmp
mov
sbb
dec
mov
cld
jb
lock
lods
mov
xchg
push
cmp
aaa
inc
dec
xchg
cmp
jbe
jg
lcall
clc
inc
mov
pop
push
xor
mov
mov
scas
and
dec
fisttpll
fdivrs
iret
push
scas
xor
push
dec
mov
mov
mov
out
stos
cmpsb
mov
adc
sbb
mov
xchg
cmp
xchg
mov
jb
mov
push
shll
sbb
jae
dec
mov
push
cli
push
dec
sbb
subl
mov
std
mov
add
add
daa
jno
add
movsb
cmp
movsb
mov
sub
pushf
rolb
int3
or
bound
jnp
out
addr16
xlat
sbb
or
mov
jns
outsb
cmpb
js
inc
xchg
leave
mov
mov
or
sbb
mov
dec
lcall
sbbl
bound
inc
out
sbb
mov
push
rcll
test
pop
add
adc
scas
mov
cmp
in
in
adc
fst
xor
test
fwait
stos
cmp
or
add
sub
cltd
ja
test
call
enter
xor
add
mov
push
mov
lcall
sbb
or
ror
das
dec
arpl
mov
dec
es
xchg
sub
gs
xor
mov
imulb
inc
scas
adc
test
mov
nop
mov
or
in
add
pop
push
or
mov
jmp
or
in
or
xchg
cld
test
pop
outsb
ret
push
mov
adc
pushl
popf
and
add
dec
cli
jo
pop
mov
xchg
add
sbbl
push
paddusb
sub
rcl
mov
fcompl
xchg
xchg
cmp
arpl
cs
fwait
cmp
mov
and
xor
mov
fnstenv
xor
int3
test
shlb
stos
dec
mov
das
xor
lea
fwait
xlat
jo
movsb
mov
dec
mov
mov
inc
adc
sbb
ret
xor
xor
icebp
mov
mov
rol
inc
movsb
in
fildl
sbb
mov
xor
addr16
ret
shlb
incl
mov
lock
fadd
mov
in
mov
dec
jg
mov
leave
dec
sub
mov
push
stos
adc
ret
push
add
xor
xchg
dec
nop
cmpsb
adc
push
mov
lahf
and
mov
jno
add
nop
lret
cs
loopne
mov
movsl
push
jle
xchg
dec
mov
dec
out
es
jl
push
mov
or
adc
rcrl
add
repz
subl
dec
movsl
cmp
sbb
dec
and
cmpsb
shrl
sub
and
ret
in
and
sub
inc
xlat
push
movsb
pop
xchg
pop
dec
pop
outsb
push
outsl
push
or
movb
push
cmp
loop
sarb
pop
lea
fidivrs
jbe
cli
loop
pop
jbe
mov
dec
into
mov
test
stos
call
lds
sbb
push
dec
imul
test
adc
call
outsl
fwait
xchg
loop
or
xorl
test
out
cli
jl
xchg
mov
sbb
outsb
cmp
sub
mov
add
movsl
jae
inc
cmpsb
or
aam
mov
icebp
inc
fsubrl
dec
fisttpl
sbb
fisubrs
sub
dec
outsl
shrl
repnz
div
out
mov
push
flds
mov
mov
clc
das
dec
jg
sbb
sub
test
clc
sarl
stos
insl
jge
mov
push
xchg
sub
fsubrl
xor
sub
sahf
adc
or
scas
inc
in
dec
and
mov
sbb
adc
mov
int3
dec
scas
int
imul
test
loope
pop
pop
mov
dec
mov
xor
dec
stos
sahf
inc
mov
outsb
push
adc
cld
add
stos
sub
mov
in
lahf
mov
mov
std
cwtl
inc
or
adc
pusha
push
fnsave
adc
pop
stos
push
aam
mov
xchg
lods
cltd
repz
push
xchg
pop
clc
and
xchg
test
jecxz
jns
cs
cmp
movsb
adc
leave
xor
pushl
jne
pop
les
cmp
shlb
aam
ja
jmp
dec
jae
mov
inc
arpl
mov
icebp
jnp
xor
jns
pop
jl
dec
pushf
pop
pop
fidivrs
cwtl
and
mov
repnz
clc
xchg
add
xor
clc
sahf
adc
mov
add
adc
in
jae
in
mov
jmp
rolb
inc
dec
ja
cld
or
aaa
loope
inc
ja
insb
int3
push
lahf
jp
pop
xchg
int3
or
jbe
xchg
jns
cmpsl
repz
jecxz
popa
ds
fildl
daa
mov
or
addr16
or
sub
lds
scas
push
mov
mov
popa
je
in
mov
shrb
mov
and
insb
call
cmp
mov
iret
xchg
lods
in
mov
adc
push
lea
add
popf
lock
les
loope
dec
cmpsl
cmpsb
jnp
sbb
jp
loop
lock
das
cwtl
cmc
arpl
or
pop
pop
add
dec
movsb
scas
fiaddl
cmpb
lea
fcoms
adc
fucom
mov
enter
jmp
pop
pop
add
in
xchg
das
pushl
inc
mov
subl
mov
test
cld
scas
or
outsb
popa
sub
or
call
xchg
ret
mov
insb
outsb
bound
ficoms
mov
push
jmp
fdivrs
bsf
repnz
or
and
mov
std
mov
ja
fmulp
imul
push
mov
jns
loope
addr16
ds
rclb
and
cmpsl
into
outsb
or
cmp
int3
setbe
movsl
clc
jmp
cmp
nop
dec
out
xor
jne
fs
int
fildl
mov
dec
sub
and
movb
mov
mov
movsb
popa
lret
stc
icebp
xor
mov
mov
push
mov
pop
fldt
fs
inc
or
btc
loop
aaa
jo
pop
lcall
pop
enter
clc
enter
arpl
mov
cmp
xchg
addr16
push
outsb
arpl
in
mov
ret
adc
movl
gs
sub
mov
std
aam
cmpsb
sbb
cmp
xchg
jb
jae
or
fwait
test
or
push
in
sbb
push
out
orb
xchg
sbb
pop
hlt
shlb
test
enter
dec
and
fstl
mov
out
and
or
jb
insl
sbb
inc
fmuls
dec
cmpsl
mov
dec
pop
fwait
cmc
test
dec
lock
test
cltd
subb
mov
xor
sbb
loop
push
sahf
sub
cwtl
cmc
mov
jl
scas
push
push
push
push
call
inc
xchg
push
repz
adc
fldl
or
popf
sbb
popf
sahf
inc
pop
push
and
mov
jp
dec
les
invd
incb
insb
dec
mov
xchg
hlt
ret
in
cwtl
cwtl
shll
and
and
std
dec
out
mov
clc
inc
fnsave
das
mov
cwtl
push
aaa
mov
jo,pn
dec
jecxz
pop
repz
dec
add
ret
or
dec
dec
aaa
dec
les
pop
nop
and
stos
daa
mov
xor
push
jbe
jb
sbb
xchg
or
dec
mov
mov
mov
and
add
mov
jle
fnstsw
xchg
sahf
pop
pusha
cmp
pop
sub
outsb
and
enter
mov
push
ret
add
xchg
inc
cmp
xchg
movsl
pop
add
cltd
rcl
imul
xor
cmp
adcb
xor
mov
test
ret
xor
jb
test
push
push
sub
pop
push
xor
call
std
inc
dec
lret
fistpll
sbb
dec
push
jmp
mov
int
leave
aad
sub
or
sti
add
rcll
rcrb
dec
mov
mov
lret
dec
cmpl
lret
push
ss
lds
ret
std
mov
dec
inc
sbb
dec
xchg
jg
push
insb
jns
pop
lds
pop
push
sbb
mov
mov
lods
fldt
cmpsb
das
or
cmp
add
outsb
push
loope
ljmp
xchg
or
mov
xchg
pop
and
mov
lea
out
pop
test
stc
fimull
mov
subl
sub
mov
imul
repnz
cmp
inc
addr16
adc
push
push
incl
sub
cmp
sbb
fimull
adc
test
iret
pop
in
sbb
and
push
or
sti
fdivl
add
xchg
int3
andb
mov
pop
inc
or
pop
inc
mov
test
test
call
inc
lds
push
push
pop
test
lret
sbb
push
scas
scas
jne
mov
aad
push
stc
std
add
and
int3
adc
lods
adc
repnz
les
test
jg
adc
shll
xchg
inc
jbe
pminub
es
xor
in
mov
dec
ficomps
hlt
dec
mov
pop
cmc
cwtl
lock
fcoms
mov
xchg
mov
jb
aaa
jns
test
jmp
fbstp
and
ret
pop
rcrl
fisubrl
rolb
mov
xor
cli
outsl
ror
adc
mov
mov
push
push
and
dec
shll
mov
mov
fsubrs
lcall
fldt
pop
mov
cwtl
mov
fstps
scas
and
xchg
cmp
mov
lds
iret
mov
lret
inc
cmp
or
add
jecxz
lret
pop
xor
mov
dec
push
andb
das
mov
aaa
test
outsl
test
xor
rolb
mov
push
or
cmp
scas
fldl
sbb
gs
lret
cmpsl
jmp
push
inc
insb
cmp
mov
mov
add
sarb
cmp
daa
dec
adc
sub
nop
and
bound
push
pop
call
xchg
lret
mov
test
dec
in
fcoml
rorl
out
push
push
and
fstpl
out
fimull
xchg
sbb
jecxz
test
add
lret
inc
push
push
mov
sarb
mov
fnstenv
and
jbe
sub
and
je
xchg
cmpsl
push
outsb
movsb
aaa
cmpsl
stc
test
cmpsl
pushf
or
pop
mov
adc
push
push
xchg
push
ret
push
in
imul
aad
insl
xchg
in
or
xchg
js
out
sbb
in
pushf
mov
sub
ds
mov
push
mov
adc
rolb
xchg
fisubl
dec
repnz
sub
inc
pop
jb
adc
push
das
incl
mov
iret
daa
bound
cmp
mov
push
dec
dec
mov
lods
xlat
jle
insl
nop
test
call
cmp
xchg
pmaxub
xor
sbb
shufps
pop
pop
jge
les
aaa
test
cmp
adc
pop
ljmp
cs
jl
mov
aas
sbb
outsl
repz
push
mov
and
jge
out
xlat
cmpb
pop
insl
cmp
xor
jnp
mov
xor
dec
or
mov
add
rolb
pop
xchg
mov
loop
insl
sbb
cmp
inc
adc
xor
hlt
mov
punpcklwd
sbb
stc
cltd
xlat
xchg
sub
sti
fistpl
mov
add
mov
lea
pop
rcr
insb
fildl
push
push
jns
out
push
push
jmp
adc
mov
repnz
int
enter
daa
cltd
pop
negb
in
pushf
loope
pop
std
cmp
outsl
adc
push
xchg
negb
mov
mov
cmp
int3
imul
pop
push
mov
js
push
dec
xchg
stos
idivb
and
and
test
mov
and
test
nop
enter
xchg
push
pop
idivl
sti
xor
pop
inc
jg
out
sti
mov
xchg
fdivs
adc
inc
test
out
push
fwait
mov
scas
push
sub
xor
fdivrs
add
jecxz
inc
mov
stos
ret
ret
mov
lret
jmp
xor
jne
mov
pop
sub
movsb
out
cmp
push
scas
jae
and
hlt
aam
jb
jl
lea
mov
into
into
or
mov
stos
inc
incb
out
fmuls
cmp
lret
test
js
ljmp
lret
aaa
sub
pop
int
lds
mul
or
ja
fimuls
shrb
jo
push
jnp
cmp
data16
sub
jno
add
mov
insb
mov
push
and
outsb
lods
pop
pop
scas
mov
js
sbb
shll
inc
mov
sbb
sbb
negb
dec
test
icebp
add
mov
popa
sti
adc
cmp
jno
adcl
lret
sbbb
sub
mov
and
add
mov
subb
in
mov
lods
sub
fs
adc
inc
incb
mov
lahf
mov
scas
xchg
adc
add
xor
and
xchg
out
push
dec
pop
push
inc
aas
and
imul
push
cmp
mov
mov
push
xlat
mov
and
add
test
push
aam
clc
mov
sar
scas
cmp
pop
push
fcompl
decl
in
adc
mov
bound
push
leave
or
imul
pop
jp
popl
imul
pop
or
mov
inc
ja
add
out
stos
sbb
imul
sti
adcb
xorl
or
test
out
and
adc
mov
out
push
scas
enter
inc
mov
es
or
push
dec
pop
push
mulb
push
ljmp
jecxz
pop
ds
jle
mov
les
pop
insl
mov
jae
cltd
sti
sbb
pop
mov
std
inc
dec
lret
notb
adc
jp
mov
cwtl
mov
jns
mov
cltd
ds
popf
mov
insb
fldcw
mov
test
iret
rcr
push
sbb
or
call
rcrl
xor
pop
push
rolb
mov
jo
jns
jl
out
mov
xor
loope
pop
shll
or
mov
test
mov
loopne
jl
scas
arpl
jg
add
push
addr16
mulb
outsb
out
repnz
cmp
stos
xchg
ret
jmp
add
mov
push
xchg
int
jno
hlt
push
mov
loop
mov
cld
pop
lret
xchg
mov
push
sub
lcall
in
sbb
cmp
or
sbb
cmc
sub
ret
mov
ja
xchg
imul
inc
cs
mov
pop
mov
fcoml
xor
dec
add
jl
push
idivb
mov
mov
sub
loope
das
cwtl
nop
in
es
inc
clts
push
dec
xchg
out
mov
test
inc
mov
clc
daa
js
movsl
aas
in
cmpsl
nop
push
fdivr
push
push
inc
cmp
outsb
lea
inc
fwait
out
iret
mov
addb
sbb
push
cmp
test
outsb
jg
sbb
cs
sub
das
testb
jmp
iret
pop
cli
ficomps
sbb
pop
bound
cltd
cmp
adc
cli
cmp
mov
daa
shl
jns
pop
adc
ss
xchg
sub
mov
pop
lea
and
outsl
mov
xor
mov
mov
shll
pop
mov
movsl
or
out
sahf
test
xchg
jge
dec
icebp
loop
mov
push
les
pop
in
or
shll
es
mov
sbb
mov
push
pop
sbb
dec
arpl
xor
movsl
aaa
mov
mov
add
ljmp
mov
inc
lods
aam
ficomps
stc
inc
es
cld
mov
sbb
lock
xor
dec
fsubl
ja
aad
dec
scas
jbe
pop
stc
mov
mov
outsb
jo
ljmp
aas
sahf
movsl
mov
or
cmp
stos
sbb
jne
sbb
push
imul
in
aas
shl
lds
adc
jne
pusha
pushf
aaa
or
add
test
mov
test
rcll
mov
out
inc
je
nop
outsl
sub
sarb
mov
daa
rorb
mov
sti
jp
or
mov
mov
push
fcompl
or
filds
mov
mov
sti
dec
mov
fisubrl
testl
xor
dec
mov
pop
or
lock
lahf
mov
stc
fistps
pusha
std
or
gs
xchg
pop
pop
jecxz
and
sahf
sub
jbe
jg
iret
mul
xor
push
adc
and
js
push
sti
ret
mov
bound
aam
shll
lods
dec
pop
or
dec
jmp
dec
fnstsw
inc
jo
shr
mull
std
mov
pop
and
pop
cmp
cmpsl
jmp
bound
add
nop
mov
sub
mov
in
pop
inc
int
or
push
mov
adcl
test
call
out
jo
cmpl
adc
cmpb
bound
and
cli
sahf
jne
mov
mov
add
fldt
lock
out
adc
dec
or
dec
shll
or
shlb
ljmp
jge
push
xor
jmp
movsl
inc
inc
ret
push
iret
pop
nop
ficoml
outsb
xor
xor
pusha
ja
mov
inc
cmpxchg
mov
imul
stc
fnstcw
jnp
mov
ss
repnz
sbb
add
popa
int
in
adc
jmp
cwtl
mov
in
push
sub
lcall
mov
shlb
loop
inc
enter
in
inc
mov
or
outsl
test
jmp
sub
sub
fwait
out
pop
rol
repz
mov
scas
add
push
jecxz
adc
fstps
sbb
imul
push
stos
aam
lods
lds
and
add
inc
ja
or
test
xchg
popa
arpl
outsb
insl
cld
push
jnp
inc
jo
or
test
in
lock
dec
xchg
fistpll
dec
popa
dec
in
jns
xchg
fwait
int
int
out
mov
xchg
dec
or
les
in
cmc
mov
enter
xchg
adc
loop
or
nop
mov
test
push
dec
push
mov
aaa
dec
call
jmp
gs
push
fbld
bound
jge
and
sar
aaa
in
xor
xor
sbb
mov
pop
or
xchg
std
repz
mov
jne
loopne
mov
into
rcr
dec
lahf
imul
addr16
push
cmp
fstps
push
sub
shll
jbe
rorl
inc
enter
das
sbb
js
test
cmpsb
xchg
pop
or
sbb
addr16
mov
lcall
adc
sar
cmpsl
mov
mov
jmp
cmp
and
ja
adc
pop
mov
sub
sub
pop
add
enter
mov
jmp
enter
mov
loopne
jmp
test
lds
sub
push
repz
adc
mov
scas
xchg
cmp
cmp
repz
pop
push
outsb
in
push
stos
sub
sar
adc
mov
es
xchg
mov
jp
sbb
and
add
jnp
enter
dec
sahf
cltd
mov
mov
inc
lahf
ljmp
push
xchg
sbb
in
dec
data16
ljmp
pop
ja
rclb
fisubrl
push
clc
gs
fstl
adc
dec
call
hlt
fsubl
jae
mov
push
push
mov
cmpsb
xchg
xor
mov
js
aam
nop
mov
stos
and
xchg
dec
pop
shr
mov
xchg
pop
mov
jp
popl
arpl
push
xor
scas
ret
or
adc
and
or
jae
faddl
ss
or
push
or
push
sub
xchg
out
dec
das
cmp
xchg
int3
in
loope
int3
lods
jp
leave
jno
sub
add
mov
mov
ss
mov
cwtl
or
mov
pop
adc
cmpsl
fdivrl
mov
xor
push
and
mov
repz
push
cmp
push
cltd
fadds
fsub
fwait
in
jb
repnz
pop
in
cmpsl
stc
adc
mov
dec
mov
es
or
hlt
in
sub
iret
mov
lds
nop
lret
out
imul
xchg
out
fistpl
adc
sub
shl
lea
subb
addr16
inc
call
aaa
icebp
or
arpl
cmp
inc
jmp
loopne
test
sub
shl
add
imul
pop
fdivrs
mov
sub
sbb
leave
out
and
ficoms
mov
cmp
add
mov
stc
xor
push
js
dec
mov
pop
add
fstpt
sub
fisttpll
pop
xor
inc
enter
out
cmp
sub
test
stc
cwtl
adc
pushf
adc
mov
cmp
sahf
out
int3
pop
mov
ljmp
stc
addb
sbb
sub
mov
addb
icebp
into
mov
mov
shl
push
ja
dec
jp
mov
xchg
push
pop
ds
stc
daa
mov
pop
lods
sti
insl
fimuls
cmp
loope
icebp
sub
fisttpll
test
inc
push
ja
jno
rcll
sub
push
loop
xchg
pop
aaa
jno
fcmovnb
loope
add
bnd
jp
add
cmpsb
xchg
and
mov
cltd
negb
sbb
sub
jmp
mov
mov
sub
xadd
xchg
and
fwait
loope
pop
inc
ficoml
adc
xchg
xor
mov
mov
mov
jno
cld
inc
loopne
lahf
or
jp
inc
xchg
sar
loopne
pop
std
xor
mov
js
arpl
xor
test
pop
mov
add
scas
insl
mov
inc
cmp
stos
push
adc
pop
xor
xor
inc
mov
ret
or
ficomps
shl
pusha
addr16
movsb
mov
pop
stos
add
fcoml
nop
dec
out
dec
cld
sahf
lcall
xchg
cli
xchg
int
mov
add
pushf
int3
jg
dec
push
dec
mov
push
repz
sub
push
inc
orl
add
push
mov
clc
cmp
mov
das
dec
clc
je
test
mov
adc
fldcw
xor
lret
push
rorl
or
dec
adc
movsb
cli
mov
mov
daa
pop
inc
cld
sar
pop
imul
xor
push
mov
or
in
stc
sub
sub
cmc
jae
xor
sbb
in
iret
ds
cltd
cmp
sub
rcll
sbb
or
cmp
ja
fisubrl
sub
ss
fwait
mov
cwtl
jmp
movsl
cltd
jge
dec
dec
push
sbb
and
testl
adc
dec
fldenv
ficompl
rorb
aad
sarl
cltd
ret
fcompl
daa
aas
dec
jecxz
es
arpl
cmp
mov
scas
popa
or
mov
inc
mov
sbb
pusha
mov
dec
lods
and
inc
repnz
push
xor
adc
fs
aam
andb
xchg
sub
lret
mov
pop
insb
jno
xchg
xchg
sahf
sub
das
and
push
dec
loopne
pop
xlat
sti
jb
adc
add
sbb
jp
add
das
dec
add
mov
xchg
test
cltd
pop
cld
push
ror
mov
sub
xor
int3
jg
dec
pop
bound
push
mov
cli
mov
shrb
pop
pop
push
dec
and
ret
xor
lret
je
xor
xor
std
inc
xchg
test
pusha
outsl
sarb
lret
fmuls
jle
adc
cltd
sahf
inc
repz
and
out
add
xlat
mov
push
mov
jnp
sarb
pop
push
add
out
cmp
jns
cmc
sub
dec
xchg
out
iret
icebp
outsl
mov
imul
mov
sarb
and
push
adc
and
pop
lods
fidivrs
cmc
xchg
je
js
dec
fldcw
insl
call
mov
xchg
aas
mov
test
sbb
imul
or
call
jge
cltd
loop
bound
or
push
shll
test
or
jle
repz
xchg
pop
in
test
inc
add
jecxz
scas
cmp
mov
fisttps
or
insb
movsb
mov
inc
sti
in
into
outsl
add
ret
sub
or
jns
or
sbb
testl
in
cltd
das
and
int3
dec
imul
and
sub
pop
jmp
out
sbb
cld
sub
xchg
imul
adc
loopne
bound
inc
sbb
pushf
enter
and
cmp
push
xor
push
adcl
lcall
jbe
aas
cmpsl
std
mov
and
rcll
gs
jae
es
xor
sbb
or
or
sbb
adc
out
add
or
js
mov
jg
jle
cs
pushf
mov
pop
jo
or
inc
lcall
fiadds
lret
aam
cmp
scas
les
rcl
push
mov
xor
je
mov
xchg
xor
rorl
jo
popa
push
xchg
xor
fildl
jle
ficomps
jecxz
hlt
mov
mov
leave
jge
test
mov
and
dec
sbb
outsb
mov
inc
mov
mov
mov
icebp
adc
sub
aas
xchg
jae
add
jecxz
xchg
mov
out
push
pushf
mov
loope
adc
dec
mov
mov
scas
bound
or
cld
shll
dec
adc
sahf
fisttpll
adc
lcall
push
pop
js
sub
push
dec
fbstp
push
mov
imul
lock
andb
jl
in
mov
pop
aad
mov
ljmp
cmc
repnz
cmp
jae
bound
xor
mov
out
out
repnz
dec
in
fcompl
and
mov
popf
mov
pop
das
mov
dec
add
mov
add
mov
xchg
push
mov
fimull
leave
repnz
cli
add
cmpsl
rcr
jno
pusha
add
cmp
sbb
loopne
jecxz
push
adc
enter
xor
jnp
shll
in
add
addb
or
arpl
add
mov
push
test
push
jecxz
fnstcw
xchg
ja
inc
mov
push
std
or
dec
mov
sbb
mov
xor
daa
fsubs
movsb
sub
mov
lock
mov
scas
sbb
inc
jbe
lods
mov
call
fildll
neg
mov
jp
cs
or
mov
cmp
int
jbe
loop
in
dec
push
lret
lds
mov
pop
popa
mov
idiv
push
sti
and
clc
adc
push
push
adc
jbe
xor
push
mov
int3
jnp
pop
scas
sbb
loopne
sti
jge
and
lock
and
pop
push
test
pop
mov
pop
insb
adc
xor
scas
rorb
cmpb
mov
jg
outsb
lahf
gs
fstp
sub
lahf
jmp
ss
shlb
push
test
mov
sbb
vbroadcasti32x2
add
sub
push
sti
in
out
data16
sbb
mov
jecxz
inc
inc
add
dec
or
cmc
in
rcrl
sahf
insb
rorl
jecxz
mov
inc
jp
in
out
jge
jle
aad
or
sub
cltd
aaa
adc
movsl
scas
cmp
popf
cltd
loop
aad
jae
push
ret
mov
dec
adc
loopne
roll
push
inc
or
into
push
repz
sarb
repnz
pop
cltd
push
ret
into
cmpsb
addr16
scas
scas
xor
je
pusha
cmc
sub
cli
adc
mov
cmp
jl
xchg
imul
ljmp
dec
insl
mov
lea
pop
add
xor
nop
inc
in
mov
lock
fucomi
psubsw
insb
neg
repz
sub
inc
fcom
push
xlat
add
pop
xorb
pop
scas
mov
xor
jb
je
imul
mov
sub
imul
xchg
adc
lea
cmp
imull
mov
pushf
inc
pop
xchg
sub
mov
cmpsb
mov
pop
sahf
clc
xlat
int
pminsw
add
repz
cmp
xor
push
lret
femms
in
dec
movsb
mov
adc
cmpsb
aas
stos
mov
fsubrl
and
xor
out
mov
mov
mov
mov
xor
sub
push
das
mov
adc
push
scas
mov
test
in
pop
mov
out
cltd
inc
outsb
and
loopne
out
push
adc
or
outsb
cs
pop
popa
fs
cld
or
fwait
mov
pop
fs
pop
push
aas
push
fildll
push
mov
cmc
movsb
movsb
or
xlat
push
push
and
and
test
push
cmc
add
gs
lcall
xor
shr
push
jno
cli
shl
notl
mov
xchg
dec
out
adc
dec
int
or
andb
mov
cmp
imul
imul
xlat
test
sbb
pusha
inc
xchg
dec
aad
pop
mov
xchg
aas
stos
fistpl
mov
rcr
int
andl
inc
mov
outsl
das
loope
jno
xchg
cld
addl
mov
mov
cmpsl
jl
xchg
stos
jecxz
outsl
out
adc
or
adc
dec
xor
sbb
mov
push
mov
clc
xchg
inc
ljmp
mov
sbb
cltd
notb
and
scas
mov
sbb
fcoml
mov
dec
outsl
scas
in
ja
outsb
cmpsl
or
mov
and
cmpl
jae
and
or
inc
jg
adc
iret
xor
subl
mov
hlt
mov
in
in
inc
stos
je
and
cld
add
push
dec
out
pop
aad
xchg
jge
adcl
lock
pop
mov
imul
pop
jecxz
add
mov
mov
out
repnz
ret
mov
jb
fstl
in
cwtl
jecxz
adc
mov
mov
mov
push
jp
push
fcomps
add
cmpsl
xor
rclb
add
lret
add
dec
pop
or
inc
daa
lret
test
rorl
outsb
jge
xchg
xchg
dec
outsl
or
repz
arpl
mov
mov
inc
inc
inc
fs
popa
lret
or
cmp
lods
push
fdivrs
or
jne
shrl
xchg
add
mov
jo
scas
dec
xor
sbb
mov
insl
dec
mov
into
nop
call
jbe
repnz
push
sbb
jb
cmp
cltd
dec
xchg
mov
shr
shrb
loope
cmc
cltd
sbb
ret
xor
aaa
cmpsb
ror
lods
mov
bound
or
jae
mov
sti
repnz
and
cmpsl
jns
cmp
lcall
mov
push
inc
jle
out
dec
jmp
and
push
addb
pop
in
sbb
lahf
mov
mov
mov
pop
cmp
adc
push
sbb
jmp
lahf
pop
adc
dec
dec
xchg
push
inc
mov
mov
pop
adc
das
rcrb
adc
pop
dec
push
mov
xchg
jl
mov
add
sahf
adc
pop
push
adc
push
xor
insb
into
fdivrp
mov
sbb
or
das
cmc
xchg
loope
arpl
cwtl
int3
idivb
fldcw
cmp
or
inc
push
sbb
lods
lods
jmp
movsb
popa
mov
cwtl
test
in
push
cmp
pusha
lret
jecxz
daa
dec
or
jae
mov
stos
xchg
jbe
pop
mov
cmp
push
add
xchg
cmp
idivb
int3
pop
and
pop
movsl
pop
inc
ds
lods
js
call
ja
lods
stc
popf
cmp
fistpll
into
pop
out
add
jmp
nop
ja
mov
push
insl
dec
aam
cs
push
mov
cmp
pop
lock
inc
add
es
sbb
jl
in
int
push
inc
ret
popa
xchg
add
inc
inc
and
or
leave
outsb
hlt
test
data16
in
fbstp
push
jno
mov
fcmovne
ja
les
and
add
mov
or
pop
lods
jbe
push
sub
xor
aaa
testb
fidivs
dec
or
xor
jmp
dec
scas
ja
data16
mov
inc
dec
push
call
inc
fstpl
inc
mov
fadds
ljmp
mov
adc
jno
inc
lock
fimull
mov
push
leave
test
movsl
mov
add
jns
lret
mov
xor
adc
stos
ss
fbld
mov
sub
js
ret
add
ror
sub
in
pop
add
xchg
mov
cmp
addr16
into
xor
rol
enter
loopne
push
pop
aaa
or
repz
cmp
xchg
mov
insl
shlb
xor
test
add
in
and
dec
jne
pop
and
mov
sub
insb
fbld
movl
nop
jge
lret
sahf
jmp
inc
push
cmpsl
test
daa
dec
pop
mov
adc
lea
pop
imul
lds
pop
adc
sbbl
std
imul
addb
dec
mov
imul
mov
pop
into
mov
pop
xor
aas
cmp
sbb
jae
in
sbb
jge
scas
shlb
lahf
lods
insb
pop
or
xchg
idivl
stc
mov
aam
imul
push
inc
cmp
orl
xor
cmp
mov
dec
or
fmulp
jecxz
outsl
push
stos
shll
mov
mov
xchg
mov
dec
emms
and
ret
mov
adc
outsl
arpl
jnp
fisubrs
dec
fstpt
out
cmp
jle
nop
sbbb
std
adc
inc
add
stos
aas
mov
jne
xchg
lcall
xor
sbb
xor
out
ffree
jns
cmp
mov
cmp
dec
mov
mov
and
stc
mov
dec
shl
bound
leave
mov
and
lock
adc
popf
mov
cs
aas
sub
cmp
data16
adc
mov
jnp
dec
or
xchg
rcr
xchg
lret
or
mov
dec
dec
add
or
and
and
lahf
aas
jecxz
shl
test
jae
sti
mov
gs
jp
xchg
hlt
dec
imulb
int
je
movsl
stos
xor
sub
cltd
fwait
pop
inc
daa
pop
dec
call
pop
pop
sar
test
mov
dec
aas
inc
stos
insb
cmp
test
xchg
in
lret
sub
adc
cltd
xor
sub
call
xorb
adc
aas
xchg
push
outsb
test
adc
or
jl
xchg
push
out
fmuls
sahf
xchg
jo
stos
scas
add
xchg
mov
mov
add
dec
adc
mov
insl
mov
mov
dec
and
jno
mov
leave
addb
mov
enter
mov
pop
fidivl
adc
push
mov
push
call
inc
frstor
rolb
std
subl
sub
imul
je
cld
mov
shlb
gs
jmp
mov
xchg
inc
lret
push
aad
clc
out
mov
loope
inc
and
lock
or
mov
pop
jno
mov
adc
rorb
mov
sub
push
jno
es
sub
jb
sti
mov
lea
pop
hlt
in
mov
sbb
push
push
inc
xor
aad
cld
test
jg
test
ds
mov
fs
mov
jo
add
lahf
mov
cltd
lea
push
push
or
xchg
test
dec
dec
jnp
jno
test
and
sbb
fnstsw
fdiv
mov
nop
hlt
cmp
xchg
mov
icebp
dec
lahf
adc
mov
outsl
cmp
ja
int3
aaa
lcall
in
popf
test
adcb
test
cmp
xchg
add
or
jnp
mov
and
ds
imul
inc
xchg
dec
xchg
cmpsb
dec
or
or
jge
imul
notl
shlb
jle
pop
lods
call
inc
sub
aam
jae
add
aas
push
push
mov
jbe
sbb
sbb
ss
insl
inc
lds
push
cld
in
popa
sbb
xor
jno
sahf
in
test
mov
sub
dec
mov
xchg
jbe
add
loop
out
push
pop
je
scas
xchg
mov
clc
jb
lods
rcrl
inc
push
pop
in
mov
scas
jle
rorb
mov
mov
and
lret
mov
push
test
cmp
mov
mov
int3
pop
sub
push
test
and
scas
fstpl
xchg
and
xchg
adc
xchg
scas
paddsw
movsl
fiadds
test
xor
mov
inc
and
lret
jle
push
pop
imul
mov
loope
sahf
sbb
shll
cmpsl
pop
add
cwtl
cmp
insl
sbb
popf
adc
mov
inc
xor
jmp
mov
pop
pop
sub
testl
stos
loope
rol
mov
arpl
fbld
sbb
cs
push
lret
lods
ljmp
push
adcl
push
mov
xchg
out
xor
scas
or
or
outsb
cmc
repz
jge
daa
mov
je
xchg
push
mov
dec
mov
fwait
call
dec
mov
push
nop
and
dec
enter
add
cwtl
fyl2x
jmp
rol
aaa
push
and
test
out
mov
cmpb
xor
insb
jle
jg
bound
leave
call
ljmp
out
ret
fbld
xchg
push
xlat
lret
movsl
scas
and
xchg
cmp
popa
andl
xorb
push
rorb
xlat
jmp
inc
fistpl
inc
cld
out
ds
push
repnz
jmp
imulb
mov
cs
mov
outsb
adc
xor
sbb
add
sbb
lret
xchg
pop
iret
sub
lock
dec
push
dec
or
jne
pusha
mov
xchg
aas
call
jo
mov
sahf
inc
popw
fisubrl
cmp
test
adc
loope
hlt
push
or
cmp
dec
aaa
scas
dec
jle
enter
adc
jbe
dec
add
outsl
imul
mov
xchg
or
imul
or
mov
daa
push
mov
jnp
xchg
or
add
xlat
and
rol
addr16
inc
sub
cwtl
lods
mov
call
and
inc
cwtl
out
mov
dec
jno
in
imul
sub
adc
inc
jle
repz
jmp
xor
pop
je
out
loope
bound
inc
outsl
add
or
outsl
out
sbb
xchg
xorw
aas
repz
sub
into
add
and
call
add
scas
shl
leave
dec
mov
mov
push
pop
xchg
rcll
xchg
nop
divb
xlat
cmp
pop
fstpt
xchg
fcom
sbb
lret
jbe
pmulhuw
pop
mov
pop
sub
xchg
push
jae
les
sbb
test
fs
jmp
orb
sahf
lcall
vpsubusw
cmp
divb
and
mov
xor
add
xchg
je
jmp
popf
les
das
mov
call
inc
push
mov
sti
push
mov
push
in
scas
jecxz
rcrb
dec
gs
outsb
xor
push
cmp
arpl
lret
loopne
add
scas
jo
dec
repnz
jo
popf
mov
inc
in
inc
or
cli
xlat
or
inc
and
aam
outsb
mov
fbstp
and
addr16
mov
sahf
and
sub
push
mov
add
outsl
andl
or
mov
into
and
push
pop
sbb
sbbl
or
sub
inc
repnz
fsubrl
daa
xor
call
push
jnp
mov
inc
aad
xchg
cmpsl
dec
pop
ds
mov
into
pushf
add
cmp
imul
jl
rcl
popa
cmp
xchg
and
loope
cmp
xchg
sti
lret
lret
je
jp
mov
adc
xchg
jmp
jl
cmp
aad
push
inc
repnz
ss
fsubrl
mov
jae
or
aaa
int3
cmpsb
mov
jbe
imul
popa
shlb
jb
std
pop
pop
push
mov
lods
inc
xor
jbe
cmc
mov
or
loopne
popa
lods
xor
or
imul
je
data16
fld
cmpb
push
loope
sahf
push
xchg
imul
push
test
pop
pusha
jb
mov
mov
sti
ret
add
lret
jns
push
stc
mov
xchg
lret
enter
push
sbb
pushf
lret
mov
jno
mov
test
je
xor
rclb
adc
outsb
ds
pop
dec
pop
cmpsb
test
xchg
cmp
inc
out
repz
adc
jle
add
int3
jne
clc
pop
call
sub
rcrl
js
jo
icebp
cmp
pop
mulb
imul
clc
jbe
ss
pop
imul
ret
push
ror
xchg
stos
and
mov
shlb
test
lcall
cmpsb
inc
xlat
mov
pop
lods
or
mov
loopne
dec
lock
clc
cmc
xchg
sub
addr16
cmp
mov
add
nop
leave
inc
lret
sub
pop
xchg
mov
and
out
stos
cmp
or
jecxz
jo
rcrl
ljmp
push
jo
ljmp
cwtl
stos
mov
add
fdivrs
int
lock
jge
insb
pushf
fisttps
pop
subb
and
mov
out
lods
rcr
out
push
inc
xor
push
mov
data16
inc
hlt
and
push
lds
mov
xlat
push
jns
mov
clc
push
sbb
push
dec
or
leave
sbb
push
ret
mov
pop
dec
out
lret
aaa
adc
inc
push
pop
inc
and
add
sub
fstp
sti
movsw
xchg
jmp
lock
mov
jecxz
pop
jg
cld
add
ret
fimuls
mov
cmp
int
xchg
or
test
arpl
mov
push
data16
xchg
insl
add
xor
lock
cltd
adc
fsubrs
in
xchg
aaa
out
lea
test
add
lea
pusha
xor
mov
ja
aas
fwait
dec
cltd
fiadds
popa
dec
dec
cmp
addr16
xchg
push
pop
fcoml
xchg
lcall
add
lret
add
dec
incl
test
std
mov
mov
push
xlat
icebp
loop
fsubrl
sti
jno
scas
mov
pop
adc
inc
frstor
mov
fninit
jne
repnz
or
es
test
inc
jno
inc
les
rcrl
out
mov
add
mov
adc
dec
adc
lods
push
jmp
cmp
push
lret
lahf
orb
lret
popf
je
mov
xchg
shlb
in
popa
in
inc
mov
and
clc
sbb
notb
mov
dec
in
aad
cmp
and
fiaddl
xlat
int3
xor
pop
mov
outsb
and
push
sarl
push
je
mov
lcall
dec
clc
sti
adc
ret
cmpsb
lock
jb
int
mov
scas
xchg
dec
pop
gs
mov
dec
icebp
jmp
xchg
mov
adc
push
adc
les
xchg
mov
sub
repnz
jb
jl
imul
jns
mov
push
cmp
push
pop
xor
jne
dec
out
push
cmp
pop
xor
xchg
ret
mov
lock
icebp
jb
jg
pop
lods
or
adc
push
mov
out
incb
pop
or
inc
mov
fs
fstpl
test
and
ss
xor
pop
mov
fisttpll
pop
cmp
int3
aam
jmp
pop
mov
jo
mov
jo
pop
out
repnz
incl
faddl
jmp
dec
pop
mov
rclb
and
add
pusha
adc
pop
or
int
enter
mov
ficoml
rolb
movsl
push
mov
cmpb
insl
data16
std
push
outsb
mov
rcr
jmp
int3
sub
jmp
add
scas
call
push
xor
bound
mov
cmp
inc
cld
sub
lock
cmp
movsl
out
dec
lahf
loope
xor
lcall
scas
dec
dec
popa
and
pop
les
adc
adc
rcl
xchg
mov
test
pop
inc
gs
and
mov
adc
mov
push
fistpll
mov
into
lods
jo
mov
dec
in
test
fnsave
pop
outsl
inc
cwtl
cmp
dec
out
xor
movsb
les
aad
or
dec
sub
push
out
pop
jge
into
mov
cs
in
fnstenv
inc
sbb
jne
xor
and
bnd
fxch
cmpb
cwtl
clc
dec
xor
dec
repnz
out
xor
sbb
mov
adc
mov
aad
jmp
or
inc
add
mov
dec
mov
mov
outsb
cmc
sbb
idiv
enter
aam
sub
lods
loope
xor
mov
into
lret
mov
fsts
cmp
int3
sti
arpl
jg
std
xchg
inc
scas
ret
jo
xchg
das
dec
enter
or
mov
dec
jae
mov
push
add
xchg
pop
mov
mov
mov
scas
pop
xor
out
mov
lcall
sbb
test
push
pop
fisubrl
adc
adc
data16
icebp
sbb
lret
adc
movsl
lds
and
and
negl
ss
sub
add
mov
into
imul
cltd
inc
push
data16
shll
add
mov
jo
stos
adc
cs
imul
push
rclw
jb
xor
sbb
in
pop
push
clc
int
pop
insb
adc
sbb
rcl
mov
mov
xchg
jne
adc
cltd
or
dec
fcmovnu
pop
ret
cs
adc
push
insl
out
xchg
jg
mov
stos
out
popa
and
mov
sbb
arpl
add
rcrb
rcr
jecxz
xor
ljmp
shl
fsts
cmp
fs
mov
pop
fs
insl
jae
mov
sub
aad
movsb
mov
imul
idiv
leave
adc
xor
sbb
dec
aam
push
mov
scas
js
xor
stc
xchg
hlt
dec
xor
lea
mov
adc
xchg
push
push
inc
dec
push
adcb
rorb
mov
sahf
iret
int3
aas
pop
bts
push
fistpl
stos
xor
and
sbb
stos
sbb
in
sub
push
retw
stc
cmp
mov
adc
push
in
lods
mov
adc
dec
cmpsb
adc
inc
out
fbstp
cmc
lret
or
iret
stos
jg
mov
sbb
sub
push
push
mov
ss
ja
fimull
iret
loope
rol
test
sbb
push
lds
lret
std
inc
std
push
mov
test
jg
mov
aas
leave
into
xchg
movsb
test
fsubrp
insl
repz
push
sub
mov
jo
fbstp
sti
adc
and
mov
je
cltd
sub
and
outsb
pop
mov
daa
fisubrl
out
ljmp
and
stos
mov
pop
dec
and
adc
lcall
pop
repz
mov
dec
and
fpatan
mov
and
ljmp
pop
pop
and
int
mov
cltd
fmuls
fs
mov
test
adcb
mov
mov
mov
test
ss
jl
push
mov
and
mov
popa
pop
lods
push
xor
bound
mov
sub
or
cmc
and
jne
inc
mov
adc
daa
sar
fdivrl
out
mov
xor
mov
sub
scas
add
jae
adc
sbb
mov
sti
mov
adc
aas
and
cmc
ds
mov
and
inc
lock
fimuls
inc
xlat
push
or
aaa
int
add
or
out
dec
hlt
gs
mov
inc
enter
mov
notl
sar
in
jle
popf
and
mov
jne
dec
dec
jbe
and
mov
insb
pushw
xsha256
cmpsb
shll
repnz
int3
cmp
lahf
xor
sub
loopne
imul
sbb
pop
sahf
mov
jg
jg
es
ret
xchg
jl
mov
mov
sbb
xchg
cmp
in
aad
stc
xlat
repnz
mov
dec
mov
and
mov
fists
sub
lahf
in
inc
push
out
jns
movsb
jns
cmp
iret
mov
divb
adcl
mov
xor
pop
and
stc
mov
add
dec
sub
int3
es
cmp
mov
and
xchg
cmp
movsb
stos
dec
loopne
adc
push
pop
add
jbe
addl
xchg
je
add
sbb
sub
mov
add
mov
movsb
data16
mov
xor
lcall
jnp
loope
and
inc
push
aas
enter
jle
cwtl
fistps
inc
icebp
in
iret
mov
movb
inc
sbb
enter
and
or
dec
imull
aas
sbb
cli
push
movsb
nop
outsb
out
outsb
pop
pusha
aas
fdivrl
cld
push
jmp
pop
mov
sbb
cmp
sub
dec
cmp
jo
mov
and
inc
sub
fdivs
jnp
inc
push
sbb
and
rcr
push
cmpsb
lds
mov
and
adc
loope
fnstsw
in
pop
ljmp
fs
push
aad
pushf
in
pop
stos
scas
int3
adc
mov
fidivrl
sbb
cli
jns
ss
pusha
jbe
xor
loope
int
testb
int
data16
orl
cmp
inc
adc
iret
out
in
mov
jle
stos
ljmp
fwait
out
push
jne
push
and
test
cld
mov
adcb
dec
push
int
out
cltd
mov
andl
arpl
incb
cld
push
int
and
mov
lcall
cmpsb
inc
push
pop
jle
dec
hlt
pusha
aas
lcall
push
add
xchg
xor
andb
jle
or
iret
test
sbbl
out
dec
xor
out
cmc
inc
orl
mov
mov
popf
les
xchg
jnp
fmuls
subb
addr16
int
mov
ds
push
fstp
or
divb
jp,pn
push
cmp
sarl
fcomip
mov
aad
shr
lcall
or
sarl
lea
stc
gs
fwait
sub
aas
movsb
andl
sti
or
dec
fldl
and
mov
cmp
in
xchg
and
cld
cmpsb
adc
xchg
test
push
xchg
test
inc
push
bound
fwait
daa
mov
sbb
sub
and
lahf
or
loope
enter
xor
sbb
imul
ds
and
mov
push
sub
insb
sbb
lods
mov
into
test
icebp
add
pop
iret
jge
jge
testb
jns
mov
inc
xchg
push
mov
pop
push
mov
scas
jb
dec
dec
arpl
cwtl
fwait
icebp
loopne
xchg
mov
cmp
jge
fsubrs
cmp
aas
in
das
add
xor
dec
cltd
mov
cmp
arpl
sub
cs
jbe
pop
inc
std
in
mov
in
jae
call
fcompl
mov
fimuls
mov
mov
jne
or
xor
les
enter
adc
and
add
rolb
sbb
mov
jecxz
push
jle
ja
outsb
pop
test
jp
mov
mov
push
shll
dec
xor
lcall
outsb
xchg
jp
mov
jge
sub
xor
test
add
or
shr
pushf
and
ds
data16
mov
adc
or
mov
lods
fistl
push
push
ljmp
xchg
adc
mov
adc
aam
xchg
js
mov
cmp
or
rcr
pop
xor
inc
pop
sub
push
cmpsl
pop
aad
adcl
fwait
ja
mov
cwtl
rcrl
int
in
adc
push
and
push
cmpsb
xor
das
inc
inc
outsb
idivl
add
loope
shll
std
sar
or
adc
loope
adc
mov
add
cltd
test
push
sub
sub
mov
leave
loope
in
cmp
dec
fbstp
nop
mov
fsubrs
imul
adc
dec
clc
outsb
and
repz
sub
cmp
in
cmp
je
les
jae
leave
push
mov
jo
shl
cwtl
in
and
fisubl
mov
dec
call
dec
in
push
test
dec
stc
inc
jle
inc
loopne
sub
sar
cmp
jnp
and
lcall
cmp
test
fs
xorl
insb
add
push
data16
out
cmp
out
in
test
and
inc
loope
or
xor
xchg
ljmp
std
loop
lret
cmp
mov
or
in
push
pop
pop
je
inc
cld
gs
xchg
test
pusha
neg
shrb
movsb
lret
daa
jb
mov
or
xor
lods
push
icebp
xor
mov
std
sbb
push
jnp
pop
mov
jp
xor
jp
push
inc
mov
lods
imul
or
mov
dec
in
pop
adc
dec
ret
jp
mov
stos
inc
fdiv
pushf
pusha
dec
ja
aad
repnz
insb
jp
or
add
fldt
sbbl
mov
out
scas
adc
std
inc
mov
add
mov
out
jnp
xchg
mov
test
out
inc
mov
cmp
ss
xor
mov
gs
mov
pop
push
pusha
sub
jle
fisubrs
dec
or
mov
bound
push
adc
mov
mov
cmp
dec
jne
mov
mov
imul
mov
jle
into
repz
push
dec
leave
cmp
shrb
std
lea
dec
call
int3
ljmp
xor
xchg
add
dec
filds
leave
and
rorl
jge
mov
fwait
mov
stos
sbb
dec
or
movsb
pop
call
dec
repz
add
cmp
cli
inc
sbb
add
daa
outsl
dec
stos
mov
pop
fdivrs
cmp
iret
sub
push
pop
xor
cs
mov
jae
and
mov
fcomip
out
jae
in
jg
and
and
mov
jo
push
out
xchg
ret
scas
sbb
xchg
mov
adc
mov
fs
jae
fwait
jbe
and
xchg
out
fstps
ljmp
insb
fistps
clc
mov
ss
pop
inc
dec
icebp
insb
push
pop
cltd
fs
jno
lock
sbb
inc
leave
aas
popf
dec
and
rol
cmpsl
es
and
jle
sahf
test
jno
loope
popf
sub
stc
imul
scas
popa
sub
pusha
or
repz
mov
mov
pop
xor
hlt
outsl
cmp
rolb
std
push
addr16
jnp
lret
test
or
rcr
or
push
jns
adc
xchg
cli
icebp
mov
adc
push
lcall
stc
out
add
test
icebp
sub
int3
pop
pop
aas
and
scas
push
in
je
cs
movb
push
int
xchg
xor
or
das
rorl
or
daa
add
sbb
mov
jo
push
and
dec
adc
fmul
arpl
xchg
repnz
pusha
movsb
xchg
xchg
ret
and
mov
cwtl
adc
insb
xor
xor
dec
in
mov
frstor
or
int
or
hlt
jns
fimuls
out
pop
mov
shl
mov
imul
lods
call
insb
adc
ret
dec
out
dec
adc
mov
stc
add
ja
push
pop
and
inc
fdivl
inc
lds
ret
ss
inc
lar
add
arpl
sti
mov
sbb
xchg
fdivrl
push
stc
pop
mov
pusha
cmp
and
jno
xchg
inc
dec
xchg
sub
push
mov
xchg
or
add
push
sbb
stos
aas
sbb
movsl
mov
sub
repnz
in
cmp
cwtl
sub
xor
xor
push
dec
insb
enter
xchg
cmp
in
and
scas
je
imul
or
or
sub
mov
pop
divl
mov
and
xchg
hlt
jg
push
add
test
mov
jmp
adc
push
add
in
test
lods
movsb
jp
insb
sub
xsha256
cmpsb
adc
ljmp
mov
adc
aaa
sahf
mov
out
sbb
aas
clc
mov
addr16
mov
add
sub
push
mov
loopne
ficompl
sti
packssdw
out
xor
xchg
lcall
xor
sbb
jns
mov
adcl
xchg
fisubrs
dec
adc
adc
mov
pushf
or
pop
and
xor
subl
hlt
mov
xor
mov
sahf
dec
pushf
mov
cs
mov
pop
jecxz
xchg
fstps
jnp
test
fsub
pusha
test
push
inc
les
mov
js
imul
mov
insb
pop
mov
mov
xchg
add
adc
int
cmc
and
push
das
jae
add
int3
cltd
pop
repnz
in
fs
nop
aam
adc
test
movsl
movsl
adcb
cwtl
xchg
xchg
in
leave
inc
xchg
adc
notb
pop
cli
xchg
sbbb
cmc
jmp
movsl
psraw
sbb
inc
aas
enter
or
lea
jl
ljmp
or
bound
scas
lods
cmc
mov
xor
pusha
cs
sbb
jnp
cmpsl
mov
add
sub
mov
aam
add
fstl
mov
ljmp
mov
jmp
dec
in
fidivrl
repnz
insb
jmp
lods
xchg
aad
and
dec
pushf
or
fnstcw
push
cltd
dec
inc
pop
or
daa
leave
ljmp
icebp
xchg
push
fnstcw
ljmp
test
dec
adc
mov
push
data16
xchg
cmp
pop
dec
adc
add
xor
dec
push
inc
push
or
iret
sbb
or
push
nop
mov
jo
daa
imulb
orl
sbbb
mov
fistl
popf
mov
jmp
insl
dec
bound
adc
dec
mov
cmc
sub
test
aas
push
mov
inc
test
mov
mov
push
jmp
push
jecxz
pop
ret
lods
fbld
rorl
dec
test
mov
jno
xchg
test
inc
xchg
pop
mov
cmp
xchg
frstor
dec
pop
cli
incb
fiaddl
xor
inc
sbb
or
and
jl
ficompl
dec
std
push
add
adcl
lret
inc
xchg
stos
push
pusha
push
fmuls
shlb
aas
push
aas
cmpsl
jle
fmul
xlat
bound
imul
xor
cmp
int
out
and
add
mov
les
and
pop
xchg
fiaddl
movsl
iret
mov
imul
add
popa
fcompl
fwait
out
add
dec
or
add
insl
push
and
sbb
lock
or
push
lods
xchg
jecxz
mov
mov
clc
loopne
mov
fisubrl
xlat
lret
repz
adc
rcll
div
adc
stos
sub
test
mov
push
mov
sub
xchg
add
das
mov
and
lahf
addr16
xchg
xchg
mov
cmc
mov
pop
push
dec
mov
cld
jmp
lcall
test
and
push
fdivr
nop
mov
push
mov
jb
sti
clc
push
push
or
fimull
mov
mov
dec
push
in
hlt
xchg
sub
cmpsb
sbb
popf
adc
mov
add
push
push
add
push
aaa
bound
or
push
lret
sub
out
pushf
mov
movsl
add
xor
outsb
das
out
lret
xor
xor
sub
mov
xor
jnp
fxch
daa
testb
inc
lods
xchg
adc
xor
repnz
add
jg
pusha
dec
xor
aad
testb
aad
jo
jae
mov
inc
int3
outsb
xor
ljmp
push
jg
xor
dec
jle
dec
int3
sub
dec
loop
pop
test
cmpsb
int
rcr
pop
cmp
pop
repz
pop
xor
push
and
fisubl
leave
xchg
aad
dec
ret
fisubrs
push
cmpsl
test
push
push
fdivrs
cmovno
cltd
hlt
xlat
jle
add
push
in
dec
or
cmp
in
add
add
mov
mov
jl
movsb
loopne
fsubr
cmp
cli
add
fnsave
int3
jbe
mov
negb
movsb
and
dec
jl
pop
jo
mov
pop
adc
jno
mov
outsb
mov
dec
jg
inc
lods
sahf
cmp
mov
adc
or
pop
out
fst
mov
xor
sub
or
ror
pop
mov
mov
adc
gs
into
dec
dec
xchg
or
cmpsl
call
xor
xchg
jmp
and
mov
fsubs
inc
mov
ret
pop
lahf
sbb
jle
test
lret
and
dec
dec
nop
add
rol
push
xchg
aam
mov
dec
ret
das
and
out
fs
daa
jge
icebp
cwtl
mov
stos
in
cmp
mov
inc
orb
mov
mov
sub
fwait
cmpsb
popa
aaa
xchg
pop
push
cmp
add
xchg
mov
repz
jbe
insb
aaa
movsl
movsl
jb
xor
or
jne
rorb
jbe
pop
outsb
mov
jmp
sti
cmpsb
and
jb
lcall
adc
es
cltd
pop
mov
mov
add
mov
fwait
cmpsb
fbstp
or
or
adc
popf
cwtl
or
jbe
fucom
js
icebp
mov
out
mov
cld
repnz
mov
insb
inc
mov
fldl
push
push
and
leave
pop
inc
call
dec
jb
xorl
pop
fidivrs
popl
in
imul
lret
ret
sub
cld
push
lret
cwtl
xchg
test
push
in
xlat
fisubrs
das
xor
dec
or
mov
shlb
inc
and
push
call
add
inc
aaa
mov
push
push
and
scas
dec
fwait
addr16
mov
fcompl
divl
test
call
add
daa
in
xchg
adc
mov
xor
add
push
ss
jnp
fs
dec
out
lahf
cmp
jmp
sbb
subb
inc
add
jno
rcr
aad
out
pop
mov
push
rcl
jne
mov
jp
in
mov
loop
push
mov
lret
push
cli
xorl
and
jns
mov
popf
or
rol
mov
clc
push
ret
xchg
cmpl
in
jecxz
add
subl
pop
push
movsl
fdivs
add
fucomip
inc
fcom
jns
in
and
jns
int
test
icebp
test
inc
sbb
xchg
mov
imul
rcrl
popf
lods
mov
stos
add
nop
add
mov
pop
or
test
dec
jl
insl
push
push
adc
mov
fistpl
mov
cmp
sar
shll
xlat
js
hlt
enter
or
mov
lods
je
icebp
addr16
inc
mov
cld
pop
inc
out
add
out
cld
loopne
pop
sbb
scas
jg
and
add
aas
jnp
out
mov
and
test
xchg
sbb
inc
push
sbb
xor
hlt
int3
mov
rorl
cmp
jnp
rol
and
inc
inc
loop
rcrb
adc
imul
lahf
addr16
js
ds
ss
das
mov
push
shlb
xor
test
push
sbb
mov
lcall
mov
es
imul
loop
movsl
xchg
adc
sub
mov
pop
shlb
pop
inc
rol
les
shlb
mov
lahf
xchg
xor
sti
xchg
sbb
mov
nop
xchg
movsb
inc
jb
cmpb
data16
sub
ficompl
pop
icebp
mov
test
mov
cmp
xchg
hlt
sahf
xor
adc
mov
xchg
mov
mov
rorb
jp
mov
sarl
rorl
imul
shlb
gs
lds
aas
mov
lods
sbb
rol
jnp
lds
push
add
jg
int
aas
xchg
xor
std
mov
cmpb
lea
call
push
sub
cmp
xchg
mov
lods
mov
cli
mov
cwtl
int
stc
fs
sub
pop
iret
shrb
mov
cmc
add
data16
movsb
or
mov
je
pop
add
push
xor
movl
adc
push
cmp
mov
inc
and
lods
cmp
pop
xor
push
test
dec
jecxz
mov
mov
dec
or
mov
movsb
sti
div
jp
inc
fisttpll
popf
jb
gs
mov
mov
pop
and
repnz
fstpt
mov
or
outsb
loopne
push
out
addr16
in
nop
push
push
stc
xchg
jp
mov
arpl
loop
inc
or
inc
int
icebp
mov
lret
or
pop
mov
pop
cltd
sti
or
test
add
sbb
sub
out
jecxz
aaa
jb
js
dec
mov
pop
add
loopne
idivl
xchg
repz
arpl
inc
jnp
mov
std
fcomp
sub
test
dec
sti
add
push
cs
mov
lea
jns
and
and
loopne
inc
ret
loop
pop
push
jp
add
pop
mov
mov
xor
or
cmpsb
add
or
or
mov
push
sub
popa
andl
xchg
xor
dec
mov
push
icebp
xchg
data16
pop
ja
cmp
cmp
adc
out
aam
xor
fsubl
xor
push
dec
cmp
pop
out
sbb
stos
int
movsl
lret
xchg
aas
or
push
call
lret
int
out
jne
xchg
imul
push
stos
xchg
ljmp
enter
dec
decl
movsb
add
dec
mov
dec
addr16
and
cs
push
out
ss
movsb
test
inc
jne
daa
inc
mov
pop
fnstcw
imul
repnz
mov
rol
and
adc
xor
pop
push
in
pop
cmp
jmp
into
jl
mov
xor
mov
test
cmpsb
add
xor
mov
je,pn
jp
aas
jecxz
mov
inc
mov
jo
insl
xor
aad
jle
or
xchg
pop
cmpb
leave
test
outsl
bound
insb
pushf
scas
pop
outsl
mov
lahf
sub
fwait
dec
movsl
lods
xor
pop
negl
jbe
je
sub
fs
idiv
inc
bound
in
pop
lret
in
mov
lods
lods
cld
push
fidivrs
clc
or
mov
fs
aam
stos
insl
into
mov
repz
jg
les
jae
ljmp
pop
bound
inc
cltd
popf
and
push
pop
sub
sbb
cmp
dec
imull
add
and
test
test
in
mov
insl
out
xor
aas
pop
test
lods
push
fcmovne
test
dec
in
loope
inc
push
in
xchg
mov
pop
mull
inc
mov
xor
ja
inc
loope
xor
int3
icebp
sub
ret
or
mov
aam
lods
push
int3
pop
xchg
inc
mov
cld
psubsb
sbb
jne
xor
mov
out
or
xor
notb
pop
jl
push
jne
dec
test
cld
scas
ret
popf
mov
mov
push
addr16
xor
and
mov
mov
add
or
enter
push
jae
call
cmp
loopne
adc
jne
jae
stc
divb
ss
popa
loop
aad
push
lds
gs
push
fists
call
add
xchg
scas
mov
inc
fwait
icebp
add
pop
xchg
je
inc
testb
push
xchg
push
icebp
cli
stc
out
jnp
inc
pop
pop
shl
lods
dec
jb
push
fistl
pop
es
add
adc
loope
push
test
dec
jp
shlb
inc
cwtl
test
xchg
imul
gs
fdivp
ficoms
clc
push
aad
sub
push
inc
mov
cmp
push
jo
and
ret
xor
adcl
pushl
mov
sub
cli
cmp
mov
outsl
cld
clc
fnsave
add
mov
mov
mov
cmp
inc
xchg
xchg
jmp
loop
fiadds
outsl
cmp
and
sar
push
jbe
test
into
sbb
das
popf
sub
pushf
pop
fisubl
in
pop
pop
test
xor
cmp
push
push
push
loope
xor
jl
mov
repz
xchg
inc
enter
shlb
rcrl
add
pop
lcall
icebp
mulb
inc
lea
mov
adcb
xchg
cli
jle
pop
inc
push
jo
fidivrs
and
mov
jmp
mov
test
decb
inc
fwait
add
fstps
push
ljmp
xchg
pop
cmp
fistpll
or
push
rcll
push
inc
rol
lds
mov
pop
sbb
jne
inc
jp
jno
jne
jle
dec
xchg
sub
cmp
sub
mov
inc
mov
cmpsl
mov
aas
lcall
lods
pop
data16
jge
adc
pop
cmp
inc
gs
inc
push
jge
inc
fldt
fiadds
and
rcr
or
repnz
imul
cmc
adc
sub
mov
mov
cmp
jg
popf
daa
mov
test
mov
fcoml
movsl
pop
sub
mov
pop
jl
inc
xor
repnz
add
inc
lock
lret
sbbl
stos
sti
xor
cmp
imul
imul
bndldx
adc
pop
push
imul
nop
sub
js
imul
cwtl
jnp
sub
cmp
inc
ja
cwtl
fstps
xlat
push
cmpsb
inc
fidivs
scas
push
lret
dec
sub
push
and
out
jmp
out
fwait
jb
jae
and
std
and
dec
test
push
or
dec
jae
imul
mov
mov
scas
pop
lea
push
jbe
les
ljmp
jp
mov
movsb
repnz
dec
insb
fistpll
test
pushl
or
in
bound
add
dec
sub
mov
xor
jae
mov
xor
cli
pop
insl
mov
out
bound
dec
pop
sbb
jmp
and
popf
mov
jbe
fstl
push
cmp
and
adc
repz
loope
sbb
adc
pop
pushf
out
daa
inc
xchg
out
pop
and
fsubr
mov
repnz
es
fldenv
shll
push
cmpsl
outsb
out
push
adc
out
sub
jno
mov
jae
jmp
sub
call
mov
popf
mov
fsubrl
lods
ss
roll
dec
pop
negl
push
push
int3
and
xchg
adc
pop
enter
push
pop
jmp
xor
shll
push
cmp
repz
pop
cwtl
mov
fldt
jo
and
and
or
out
out
aas
mov
xchg
xchg
mov
xchg
pop
loopne
int3
and
mov
fistl
xor
add
mov
and
jnp
ficoms
fisttps
pop
jae
notb
fsubl
test
cmc
push
ret
add
xor
or
pop
jno
pop
cmp
push
movsl
mov
aas
shrb
inc
jbe
xchg
in
mov
aas
sub
iret
icebp
out
xchg
adc
sub
or
test
pop
jg
mov
inc
inc
pop
xchg
mov
sub
std
cmc
das
push
loope
push
xor
mov
movsb
inc
out
stos
and
movsl
mov
aam
sti
or
fdivrl
push
insl
xor
mov
mov
or
push
xor
jnp
sbb
std
jne
insb
bound
or
adc
mov
repz
stc
lock
jno
and
int3
loop
dec
in
pop
xchg
sub
int
aaa
pop
dec
lret
inc
xor
inc
jmp
fcomps
and
in
mov
jo
xor
jge
adc
repnz
push
pushl
bound
lea
js
adc
dec
xchg
lahf
sub
scas
ret
xchg
sub
call
jp
dec
fistl
and
push
mov
push
ret
sbb
jnp
mov
lea
outsl
loopne
cmpsb
xchg
mov
inc
sti
rolb
jo
aad
xchg
iret
enter
shrl
shl
pop
add
popf
mov
jnp
addl
aam
xchg
cltd
jp
pop
and
mov
stos
clc
jmp
not
mov
lods
stos
xchg
leave
push
dec
lcall
or
jge
and
into
adc
mov
sbb
lock
outsl
jle
jmp
and
push
and
data16
insb
incl
pop
ja
cltd
add
scas
ljmp
mov
in
sbb
orl
pop
scas
pushf
data16
ret
pop
and
or
inc
or
inc
cld
xlat
mov
out
dec
xor
mov
js
or
shrl
popa
jno
mov
cwtl
daa
adc
sarl
mov
loopne
xchg
mov
outsl
andl
repz
es
inc
mov
or
xor
adc
or
mov
add
adc
fistpl
int
fsubr
test
pusha
out
jne
ret
and
fnstcw
jnp
das
rolb
test
ret
in
iret
fadd
insl
std
jg
xchg
fdivrs
ret
stc
test
outsl
testl
ret
xor
lret
icebp
cmp
stos
scas
cmp
out
mov
xchg
and
das
addr16
es
jbe
js
scas
enter
xor
shll
jbe
loop
insl
shll
pop
icebp
pop
sub
jl
rol
ja
xor
out
lret
fiadds
ret
add
pop
cmpsl
jp
jge
jbe
or
sub
cmpsb
ss
push
rolb
or
mov
lds
xchg
imulb
pop
inc
sahf
bound
adc
daa
leave
or
cmp
jl
fcoml
mov
cli
jnp
sbb
movsb
lahf
jb
mov
mov
cltd
sub
push
sbb
sub
lret
mov
out
adc
leave
outsb
out
icebp
add
mov
cmpb
push
rcrb
scas
adc
xchg
or
push
outsb
in
outsb
fnstenv
mov
std
pop
mov
jle
testb
test
inc
data16
mov
or
and
stos
pop
jo
mov
pop
xchg
fidivrs
das
sub
cs
rcll
int
mov
js
test
stos
lea
add
xchg
xchg
in
or
cmp
ss
pop
fists
xchg
mov
cmp
lahf
js
das
mov
pop
aad
mov
pop
int3
shr
inc
cmp
xor
mov
jmp
bound
jbe
ficoms
mov
mov
xchg
push
xor
cltd
adc
cmp
out
adc
gs
mov
xor
hlt
jno
aaa
dec
xor
lret
outsb
fnsave
scas
sub
sbb
lods
outsl
cwtl
lock
mov
add
in
loop
sbb
pop
add
add
jecxz
lods
inc
mov
rol
fisttps
jg
xor
aad
push
pop
dec
and
loop
aas
push
jmp
out
pop
push
push
xor
adc
inc
out
push
sbb
fidivrs
mov
imul
sub
fadd
insb
icebp
mov
push
pop
call
jg
ss
in
push
jb
bnd
imul
cmpsb
loopne
push
movsb
jge
insl
mov
add
sub
adc
pop
mov
outsl
mov
cli
out
mov
sbb
sti
popa
aam
out
cmp
std
xor
sub
jecxz
lcall
push
push
and
pop
test
mov
cmp
aaa
cltd
inc
and
hlt
in
jg
or
imul
push
pop
push
or
push
pop
adc
inc
loopne
aad
stos
pop
dec
fisubrs
andb
mov
clc
sahf
sub
jno
xor
icebp
push
js
pop
popa
imul
arpl
sbb
inc
testb
pop
jl
jnp
cmp
fmul
test
and
clc
lods
sbb
adc
dec
loop
loopne
lods
clc
jmp
lcall
shrb
cld
mov
mov
fcoms
ret
add
push
or
stos
leave
stos
dec
xor
pop
cli
inc
or
jmp
scas
push
scas
mov
lods
aas
ds
xchg
xchg
jne
jp
xor
shrl
test
pushf
pop
stos
inc
and
add
push
adc
std
jecxz
cmp
xor
mov
imull
pop
dec
push
pop
sarl
add
mov
or
inc
shlb
mov
dec
shr
mov
jmp
sbb
xor
sbb
add
cmp
cmp
jae
daa
push
push
hlt
push
xor
mov
aad
jno
test
cli
pop
insl
mov
in
cli
stc
mov
in
xor
fwait
mov
fldenv
arpl
xor
adc
mov
fmulp
sbb
adc
rep
in
mov
pop
inc
fldt
mov
mov
popf
xchg
push
adc
cmc
jge
xor
repnz
mov
fnstenv
push
arpl
cmp
inc
jecxz
mov
fnsave
push
sbb
fstpt
xchg
std
movsb
pop
add
hlt
imul
pop
aad
mov
rorl
cmp
popf
popa
mov
fsts
fidivrs
fidivrs
popa
pop
loope
call
cmp
dec
inc
jno
shlb
mov
inc
adc
ror
rorl
inc
xor
daa
jmp
loop
lret
movsl
sti
mov
and
lcall
jecxz
cltd
je
push
jp
jp
mov
sbb
testb
sbbb
add
mov
sbb
fisttpl
fucomi
cld
add
pop
jge
cmpsb
fiadds
mov
dec
sbb
sbb
mov
outsb
repnz
xchg
fcomp
fsts
je
cmc
jmp
shll
xlat
daa
push
jno
add
jno
pop
xor
sub
ret
or
ja
vpsraw
cmp
out
or
movsl
pop
push
bound
outsb
lret
mov
and
inc
rorl
dec
mov
cmp
sbb
add
jns
addr16
jg
mov
xor
int
cld
push
mov
inc
lods
shll
repnz
jbe
jne
xchg
in
add
cli
stos
and
test
repz
sub
mov
push
mov
enter
or
mov
js
add
subl
cmp
xchg
das
out
jecxz
ja
lock
dec
xor
mov
sub
push
add
cmpsb
loopne
imull
stc
push
jg
push
xchg
aad
jmp
scas
aaa
loop
out
jle
aas
hlt
fwait
ret
daa
jnp
sub
lea
dec
gs
ljmp
jo
adc
push
and
push
scas
in
mov
in
push
and
jmp
push
mov
fstpt
negb
pushw
mov
or
addr16
cwtl
inc
ljmp
adc
jb
sbb
push
cmc
or
cmp
into
mov
ljmp
xor
ret
aas
js
push
cmp
xlat
push
mov
shr
jne
leave
cmp
aad
mov
lahf
pusha
jle
shlb
pop
dec
jecxz
ds
in
in
mov
cmp
adc
dec
inc
cli
sbb
notb
cmp
negl
daa
lahf
jl
cs
lahf
pop
sbb
push
and
pop
les
and
pop
arpl
andl
addb
insb
push
ja
popf
inc
push
cltd
lcall
out
add
xcrypt-cbc
cmpsl
aad
lahf
mov
jne
test
pop
lods
sahf
je
loope
pop
cwtl
out
in
cmp
mov
jo
into
nop
xchg
js
jmp
shl
cmp
mov
sub
inc
mov
nop
cmp
aas
pop
xchg
cmp
int3
stos
sub
push
pop
and
cmp
jae
hlt
pop
push
sbb
mov
xor
test
popa
out
adc
lcall
and
dec
sbb
pop
cli
pop
idivb
mov
cs
pusha
lcall
jne
aam
adc
add
cmp
js
fdivl
adc
aas
jle
popf
add
test
sbb
add
ud2
mov
jae
incl
cmp
pop
sahf
stos
xor
popf
add
inc
add
add
pop
pop
inc
jno
popf
or
push
push
imul
jnp
xor
push
adc
popa
jnp
mov
cli
mov
add
fdiv
jno
sbb
nop
mov
loop
xchg
or
jns
xor
mov
add
dec
fsubs
dec
and
fsubs
push
sbb
inc
or
mov
xchg
push
inc
scas
cmp
jns
cli
data16
pop
adc
adc
adc
arpl
cmp
inc
sub
dec
jecxz
push
popa
lock
push
xchg
mov
loop
call
mov
pop
xor
mov
cmp
push
mov
sbb
es
pop
jp
or
repnz
jmp
mov
mov
and
xlat
outsb
or
loop
add
test
out
ss
mov
xor
dec
pop
mov
dec
mov
adc
and
in
arpl
filds
adc
mov
dec
lods
cmp
cmp
push
loope
mov
add
das
ljmp
xchg
das
call
es
fstpl
add
push
in
pop
fs
xchg
rcrl
pop
out
out
pop
cmc
pop
adc
lahf
mov
mov
and
or
adc
sbb
es
imull
xchg
das
sub
out
aad
inc
mov
mov
inc
into
and
cli
push
out
rcrb
xor
pop
adc
aam
jae
add
xchg
test
mov
fstpl
insb
dec
xor
or
stc
or
in
lea
pop
insl
dec
lds
sbb
hlt
arpl
scas
inc
push
xor
xchg
mov
dec
enter
dec
xchg
jne
test
sbb
inc
mov
je
jl
stc
inc
mov
ret
les
mov
mov
cwtl
mov
cltd
lods
insl
mov
sbb
sbb
aam
sahf
das
cli
push
pop
xchg
arpl
rcl
sub
inc
mov
inc
mov
push
dec
mov
adc
xor
xchg
mov
pop
dec
fadds
dec
mov
pop
fidivrs
cli
cmp
mov
jne
sbb
imul
cmp
xchg
and
je
push
daa
es
push
xchg
xchg
jge
movl
cmpl
popa
adc
fbstp
mov
andb
mov
sbb
fs
pusha
es
pop
push
cmp
xchg
cmpsb
in
gs
cs
mov
in
addb
es
xor
cmp
in
mov
stc
aas
sbb
push
lock
and
push
orb
cmp
and
jo
lock
popf
sbb
pop
jmp
pop
in
aas
in
mov
xchg
mov
in
jg
dec
fst
add
pop
mov
pusha
das
mov
fsin
mov
adc
pop
ss
adc
mov
inc
repz
sub
call
sub
pop
push
xor
sbb
add
xchg
pop
dec
mov
scas
testb
int
cld
idivb
and
data16
cld
xorb
popf
mov
rcrl
inc
inc
dec
lock
inc
movsb
bound
test
loopne
pop
aam
pop
and
fnstenv
sarl
jge
es
push
push
adc
jmp
mov
jp
dec
stos
cmp
mov
xor
cmpsb
jbe
adc
out
jno
sub
bound
jno
jmp
or
pop
mov
aas
ror
ret
adc
mov
dec
data16
and
cmp
inc
mov
push
adc
rolb
adc
sbb
or
fidivs
ljmp
push
out
fidivrl
fcomi
lret
dec
sbb
push
jo
cmp
fsub
cltd
daa
cmp
test
out
in
clc
arpl
aad
ret
jb
popa
mov
cmpsl
imul
nop
adc
sbb
in
int3
and
adc
scas
lcall
pop
in
and
adc
xchg
add
mov
dec
inc
aaa
mov
sbb
adcb
in
xchg
sbb
push
inc
lock
mov
fimull
xchg
mov
stos
xchg
aas
sub
pop
jle
mov
scas
ja
cmpsb
inc
jecxz
lods
int
or
xor
pop
sahf
push
pop
push
lret
sbb
lea
cli
inc
mov
in
les
jecxz
fwait
repnz
imul
mov
sub
sahf
cmpsl
push
dec
inc
mul
adc
clc
jecxz
sub
push
xchg
lock
mov
test
dec
test
lcall
mov
movsb
rcl
lea
ret
adc
push
mov
mov
mov
lods
fwait
xchg
sub
sub
jl
adc
cmp
clc
cmpsl
dec
scas
lods
jbe
enter
out
push
daa
lods
lcall
imul
and
or
cmpsl
mov
and
pop
add
fimuls
xchg
xchg
xchg
adc
jbe
pop
fwait
dec
xchg
adc
mov
dec
mov
mov
inc
cli
push
jl
in
test
int3
mov
jne
ss
in
jle
sarl
xor
fldenv
dec
dec
mov
arpl
or
push
sbb
icebp
inc
aas
and
pop
jecxz
mov
jbe
xchg
mov
cmp
pop
push
cmpsl
lea
jbe
aaa
or
sbb
outsl
inc
and
pop
divb
lret
xor
sub
sbb
ss
inc
mov
fistpl
insb
sub
inc
jecxz
aaa
icebp
enter
lea
cwtl
inc
outsl
sub
and
cld
je
sub
sub
pop
inc
jne
sub
adc
testl
jl
push
ds
hlt
loop
test
loop
in
mov
stc
or
hlt
into
rorl
call
je
repz
add
xchg
xchg
mov
out
icebp
imull
inc
lods
fs
jp
sbb
pop
lods
add
sbb
cmp
add
jp
adc
cmp
jge
shrb
or
std
lods
daa
xor
xlat
lea
inc
jg
mov
dec
mov
sbb
add
xchg
aam
jl
dec
mov
xchg
cmp
aam
dec
jo
lahf
cmp
mov
sub
sti
cmpsb
imul
movsb
push
dec
adc
fisttpll
xor
enter
call
pop
mov
sahf
and
mov
or
cwtl
mov
pop
mov
popf
inc
cmp
sahf
xchg
faddp
std
jmp
imul
ss
into
cmc
add
mov
fistpl
pushf
add
dec
mov
adc
xchg
stos
iret
add
ss
jmp
inc
sub
test
xor
jbe
faddl
movl
jne
xlat
xchg
loop
repz
cmp
add
jne
cld
push
dec
jl
pop
dec
orl
ret
push
jp
inc
stos
cld
out
ljmp
push
mov
jg
add
sbb
outsl
mov
xchg
dec
fisubrl
out
sub
shll
inc
lods
ja
sti
ret
jno
sbb
jmp
ret
jmp
iret
adc
dec
js
lds
push
jl
ja
pushf
andb
shll
enter
push
repnz
stos
lods
lods
cmp
repz
xchg
imul
mov
das
imul
pop
cmp
ret
and
push
sub
inc
mov
rorl
cmpsl
mov
xor
repnz
js
imul
push
jo
call
daa
mov
repnz
pop
mov
aas
leave
pop
scas
mov
mov
daa
cmp
jp
lods
cmp
or
cmp
aaa
xchg
daa
push
sbb
test
pop
mov
dec
jmp
dec
sbb
aas
imul
insb
outsb
sub
test
test
dec
jo
adc
pop
push
push
call
push
jno
add
xor
lret
lock
cmp
lahf
pop
orl
mov
cmp
xchg
push
xchg
xchg
inc
leave
out
jge
bound
rcrl
pushf
adc
shl
sti
mov
adc
inc
cmpsb
sub
loope
dec
aaa
sub
sti
xor
incl
lahf
cmp
mov
or
popa
jp
mov
iret
sbb
or
fstpt
rcrl
loop
rorb
inc
push
push
or
pop
shrl
clc
sub
les
xchg
or
pop
xchg
or
adc
or
int3
pop
push
jo
in
lds
pop
enter
je
pop
cld
sub
fstps
popf
aaa
sbb
adc
jae
sbb
push
inc
xchg
aam
imul
cmp
sbb
push
sbb
add
sar
enter
sti
sub
insl
ljmp
adc
ret
jmp
inc
mov
xorl
add
sbb
xor
in
adc
adc
or
into
sahf
fnstsw
lock
sahf
adc
ret
cmp
andl
mov
imul
fs
in
call
jb
addr16
xor
daa
push
insl
push
testb
into
das
mov
pop
ss
mov
daa
pop
sub
pop
sbb
add
in
add
pop
inc
das
shl
mov
mov
or
sbb
mov
sbb
sub
dec
js
and
add
pop
mov
hlt
xor
lock
pop
sahf
enter
hlt
pop
movsb
mov
sahf
cld
push
jno
shl
jbe
in
lock
push
scas
cmp
mov
dec
add
fwait
in
cmp
fidivrs
mov
push
or
dec
in
mov
cltd
push
add
jns
lods
mov
mov
xchg
dec
push
cmp
and
cmpb
cmp
and
mov
add
inc
push
xchg
fcompl
jge,pt
and
cmc
mov
loop
lods
test
cmp
push
aaa
cmp
mov
inc
or
pop
xchg
nop
dec
cmp
mov
jp
cmovns
sub
and
mov
daa
cs
scas
sub
dec
inc
hlt
into
jg
inc
xor
jle
les
dec
pop
call
scas
adc
mov
ror
cmovg
bound
cwtl
in
out
sbb
xchg
xchg
sbb
aad
sub
fsubrs
cmp
jmp
gs
cmp
jmp
xchg
fstps
shrl
insb
dec
or
insb
imul
mov
fidivs
arpl
xor
inc
sub
test
push
jnp
je
adc
mov
test
sarl
mov
cmp
int
jmp
and
push
bound
push
mov
jno
pop
pop
mov
adc
je
mov
adc
daa
pop
add
in
pop
jg
cltd
adc
jnp
push
jne
gs
scas
fldl2e
in
cltd
rorb
inc
je
aam
jge
nop
sbb
cmp
mov
in
and
mov
jg
push
mov
enter
inc
loop
mov
or
xor
cmp
xor
adc
icebp
arpl
or
rcll
out
pop
out
fadds
roll
lds
xchg
ss
daa
loope
das
rolb
fwait
push
xor
pop
dec
adc
sahf
cmp
mov
nop
loopne
mov
hlt
and
jbe
lea
movsl
cwtl
test
incb
and
mov
std
jl
adc
mov
and
movsl
sbb
stos
mov
aas
repnz
or
push
lods
loop
add
ret
pop
inc
push
test
popa
inc
negb
psubsw
pop
pop
jmp
cwtl
lret
cmp
jmp
xor
cmp
ficompl
sbb
push
testb
mov
xchg
enter
loope
inc
fstp
cmp
and
cmp
out
js
idivl
mov
xorl
push
mov
cwtl
mov
out
xchg
or
dec
mov
mov
fbstp
cltd
push
andb
push
dec
sbb
sbb
and
imul
push
mov
sahf
mov
lahf
loope
clc
ja
fidivrl
int3
jmp
mov
je
gs
xlat
sahf
jns
stc
cmp
dec
adcl
aas
out
pop
enter
inc
cmp
stc
mov
add
push
loopne
add
mov
loopne
loopne
pop
loope
jb
mov
dec
dec
push
pop
sbb
or
lods
cld
mov
push
aaa
clc
push
xor
xchg
repz
sahf
test
sbb
mov
mov
xor
ljmp
xor
pusha
xchg
cs
sub
dec
fst
xchg
add
pop
in
imul
insl
add
or
dec
stos
popf
inc
adc
ret
pop
dec
scas
mov
add
inc
cmp
scas
mov
shll
dec
push
push
dec
mov
add
push
in
cwtl
or
jae
mov
or
xchg
mov
jecxz
inc
int
das
testb
xorb
adc
cmpsl
mov
dec
rep
inc
enter
mov
lods
inc
push
into
adcl
cli
cmp
nop
ret
pusha
mov
movsl
sub
adc
or
popa
ds
pop
mov
mov
adc
inc
sub
dec
insl
dec
in
je
xor
xor
insl
mov
jl
test
jl
xchg
push
inc
xchg
mov
test
outsb
into
pop
test
hlt
sbb
sarl
dec
fsubs
jae
out
jno,pt
mov
inc
icebp
mov
dec
mov
and
sub
add
les
pop
sub
jne
outsl
lcall
add
sti
mov
imul
mov
sub
shrb
icebp
jp
ja
rorl
gs
fidivrl
shlb
aaa
xor
fisttpll
xchg
js
lock
addr16
cmp
sahf
pop
lret
inc
push
mov
and
scas
and
bnd
adc
int
cmp
gs
jnp
xchg
test
pop
pop
mov
insl
pop
ret
push
aaa
mov
push
sti
dec
xor
inc
fisttpll
inc
hlt
adc
lea
in
dec
popf
sbb
lock
add
cmp
cmp
adc
subl
rep
repz
fdiv
xchg
or
sub
orl
jmp
inc
sahf
fwait
ds
lret
and
and
xor
pop
jb
sarb
sub
fs
stos
cmp
cmp
imul
jno
or
or
repnz
xchg
leave
lcall
popf
xchg
sub
ss
xchg
inc
rclb
push
mov
push
fsubr
ss
or
push
repnz
fisttpl
clts
out
pop
shl
stos
fists
and
and
decl
ficoml
loope
movsl
xchg
xor
mov
std
stos
push
dec
pop
pop
adcb
arpl
gs
cmpb
pop
cmp
aas
mov
adc
ljmp
mov
aas
adc
jns
sub
mov
sub
shll
mov
sub
mov
shrb
fistps
mov
inc
mov
pop
movsb
ss
gs
or
lods
jge
cmp
int
mov
fs
lds
adc
mov
std
push
jns,pn
lret
mov
mov
popf
adc
jle
call
dec
mov
mov
adc
and
and
sti
and
outsl
cmp
xchg
inc
add
nop
cmp
push
rcrl
in
int3
pop
rorb
loope
inc
pop
nop
and
push
cld
add
lock
sbb
push
out
jns
jmp
jae
dec
dec
fnstenv
or
and
inc
jnp
daa
push
xchg
mov
out
jecxz
jnp
lock
into
or
popl
in
ror
insl
pop
cld
sbb
xchg
fsubs
imul
pop
jnp
rcll
jno
imul
loope
mov
xor
loop
mov
pop
lea
das
out
les
test
jl
xchg
cltd
and
xchg
lret
stos
aas
lods
jmp
push
mov
adc
lret
mov
xor
add
inc
xchg
sbb
fs
enter
loopne
jb
mov
or
fnstsw
aad
dec
cmp
orl
repz
clc
xor
dec
cltd
imul
dec
outsl
mov
loop
loopne
xchg
jg
fistpll
add
int3
mov
mov
mov
pop
mov
and
push
push
push
rclb
mov
or
dec
fildl
std
repz
dec
ss
loopne
sub
sub
loop
loop,pn
popa
test
pxor
insl
cmc
mov
adc
iret
mov
out
cmp
push
sub
mov
jle
adc
outsb
add
dec
jb
ret
add
xchg
icebp
mov
adc
test
push
lds
cld
pop
lgs
and
ficoml
jne
scas
mov
xor
out
jge
ljmp
sbb
add
and
in
pop
xor
mov
push
mov
or
mov
addr16
aad
out
inc
shrl
out
sub
dec
loopne
clc
xlat
adc
dec
cltd
and
ds
lock
movsb
pop
adcl
aam
sbb
stos
sbb
add
mov
adc
mov
loop
outsb
int3
or
add
mov
add
mov
pop
jge
fcmovu
or
dec
xor
pop
jecxz
or
scas
adc
or
mov
pop
dec
xor
push
bound
add
je
jbe
add
loope
jle
movsl
or
mov
inc
add
xchg
mov
stos
adc
fs
call
fmuls
ret
sbb
pushf
pop
dec
scas
rcpps
fucomip
mov
mov
popf
push
lds
ss
sbb
push
dec
cmp
arpl
fisttps
inc
mov
xchg
int3
jno
cmp
jne
in
dec
xchg
inc
mov
sub
addb
ror
mov
jo
rcr
xchg
fisttpl
dec
mov
add
clc
mov
jle
aam
xchg
fsts
mov
mov
add
arpl
in
popf
xchg
sti
sub
into
aaa
jns
pop
push
imul
and
mov
cmpsb
lahf
orb
mov
cs
xor
ss
add
insb
sbb
cltd
call
scas
shll
pop
movsb
sub
add
stos
and
adc
test
rorl
dec
xchg
mov
dec
push
sub
pop
push
mov
cmp
dec
inc
cs
and
inc
dec
pop
xor
mov
xor
rorb
leave
cmp
push
jne
fucomip
xor
cmp
inc
outsl
mov
pop
pop
jmp
or
cmp
or
sti
mov
cltd
pop
lock
sub
rcr
xlat
mov
pop
xchg
mov
ss
dec
jle
jmp
inc
fadd
sub
enter
add
cvtps2pd
rclb
mov
jecxz
cmp
loopne
or
sarb
sti
xor
stos
data16
jo
int
and
mov
jne
loop
and
dec
repz
push
inc
in
out
xchg
movsb
daa
push
jnp
mov
jb
fsubrp
mov
sbb
out
repnz
lret
in
mov
stc
lock
adcl
lock
and
fcoms
cmp
stc
mov
lret
ds
divb
nop
dec
lock
and
fldl
cltd
mov
cmpsl
push
cmc
dec
xchg
push
ret
push
sub
aaa
dec
faddp
add
clc
or
jle
les
sub
int3
cmp
imul
rep
clc
xchg
adc
cmc
sahf
dec
xor
lods
xor
outsl
jl
lods
sub
xchg
or
jae
je
xor
gs
mov
pop
cwtl
mov
sbb
mov
xor
cld
mov
scas
dec
push
ja
inc
in
jnp
mov
lods
out
pop
std
and
or
pusha
mov
into
mov
fs
cmp
jle
mov
jl
adc
popl
add
movsl
cmp
adc
or
push
jge
pop
mov
xor
ret
inc
xchg
dec
push
and
icebp
sub
cmp
add
mov
adc
stos
movsb
add
pop
inc
sbb
faddp
out
lcall
mov
pop
mov
xor
loopne
mov
fadds
cltd
fbstp
les
cmp
pop
xchg
sbb
xchg
sub
stc
jp
push
sub
push
cmp
mov
mov
scas
shll
gs
lret
xchg
call
lods
pop
repnz
xor
iret
fisttpl
sub
ficomps
or
cmpsb
jbe
loop
and
lahf
xlat
fwait
push
mov
fcmovne
dec
clc
xchg
data16
pop
pop
int3
fsqrt
mov
test
aaa
fs
dec
mov
adc
enter
aas
pop
and
cmp
pushl
das
push
les
push
out
mov
ljmp
pop
sarl
xor
daa
arpl
dec
mov
fstl
leave
and
cld
fldcw
mov
scas
xchg
inc
mov
mov
shrb
mov
inc
jmp
js
add
mov
jp
push
addr16
inc
xor
repz
mov
sub
mov
sub
mov
and
sti
rcrb
and
filds
jae
or
mov
dec
lods
into
xchg
imul
imul
sbb
pop
jne
xor
mov
cmp
aaa
sahf
add
mov
fldenv
ja
test
xlat
test
sahf
sarb
pop
push
sub
or
mov
call
jbe
jae
dec
jno
jmp
repz
pop
jg
pop
and
push
sarl
mov
push
cmp
pushf
inc
and
and
pop
ds
sahf
aas
stos
jnp
jecxz
push
xchg
mov
fwait
ret
pop
insb
repz
inc
shll
jbe
shrb
cmpsl
mov
cwtl
adcb
mov
mov
sarb
int3
ds
jo
and
test
push
jge
in
negl
xor
cmc
pop
loopne
cli
mov
scas
icebp
pop
testl
loope
inc
jge
mov
xor
mov
mov
aas
cmpsl
shrl
dec
ja
jno
adc
stos
mov
lcall
fistpl
push
sbb
inc
sbb
pushf
fists
sbb
shld
roll
jno
xchg
dec
mov
jbe
or
ret
push
adcb
and
jmp
jl
aad
or
and
push
lock
fdivs
arpl
clc
dec
in
ret
sub
pop
test
outsb
or
pop
pusha
lods
arpl
add
mov
out
mov
lret
add
sub
test
clc
lea
lds
dec
xchg
dec
divl
lods
mov
subb
xchg
jle
mov
pop
ja
cltd
shll
sub
nop
push
sbb
sbb
fldt
shrb
call
sahf
adc
js
jmp
scas
call
push
adc
push
push
mov
jne
cmpsl
jl
ja
fadd
jmp
rcrl
mov
xchg
jl
xchg
pusha
rclb
lock
js
sbb
cmp
inc
data16
add
jae
punpcklbw
lret
cli
fstcw
push
dec
xchg
adc
addr16
stc
pusha
push
pop
rcll
repz
inc
mov
out
insb
sti
adc
popf
lret
xchg
jecxz
or
lret
int
sub
sub
test
inc
cltd
jg
cltd
adc
pop
pop
ss
arpl
xor
sbb
push
lock
jno,pn
arpl
push
outsl
loope
jge
aad
pop
sbb
sbb
aad
pop
rcrb
fsub
mov
stc
inc
or
rolb
jg
test
idiv
andl
cs
pop
fbstp
pop
lods
je
cs
sbb
inc
xchg
addr16
dec
call
movsl
shr
jecxz
dec
sti
xor
fisubs
sbb
xchg
out
rcll
xchg
mov
adc
loop
xchg
jae
dec
ja
pop
cmpsb
pop
mov
pop
push
ds
push
push
pop
mov
push
into
stos
int3
roll
stos
ja
dec
outsl
dec
push
out
leave
test
fsubrl
xor
into
mov
ret
jecxz
lods
inc
shlb
std
ds
pop
mov
mov
pusha
cmpsb
outsb
call
mov
inc
sarb
or
or
xor
icebp
inc
mov
ret
push
dec
stos
jae
xor
mov
out
out
jl
push
jl
or
pusha
jo
mov
mov
inc
xchg
aas
pop
jne
mov
mov
sub
aad
repnz
scas
shlb
jb
fisubrs
imul
lds
mov
aas
sti
lret
adc
mov
mul
imul
and
movsl
inc
pop
pushf
jge
mov
mov
dec
rcl
lods
cmc
nop
insb
jae
inc
or
loope
loope
cmp
daa
mov
outsb
jg
loope
popa
pop
pusha
or
sub
in
mov
fildl
ds
sub
cmp
gs
ds
xor
stos
xchg
ss
test
movsb
cmpsl
dec
and
mov
arpl
jbe
mov
fisubs
bound
ret
fldl
pushf
mov
test
sarb
out
fidivrl
test
stc
push
lret
sub
and
jmp
cmpsb
ljmp
out
js
push
jl
pop
xchg
iret
and
mov
cmp
test
jmp
cltd
nopl
cmp
mov
xchg
or
mull
push
cmp
loop
cwtl
mov
sub
ret
xorl
test
bound
out
fimuls
mov
lds
clc
add
and
loopne
push
jo
mov
imul
mov
mov
notb
sbb
mov
xchg
nop
scas
mov
stos
lret
sahf
add
shrl
ret
sub
fs
xchg
pushaw
or
mov
sbb
add
cmpsb
cs
adc
popf
sub
mov
xor
pop
ret
movsb
dec
ss
jns
call
rcll
mov
mov
xchg
sbb
mov
add
fs
lret
rcrb
push
cmp
mov
nop
inc
add
mov
jp
xor
dec
sbb
or
in
lock
jle
push
inc
loopne
adc
sbb
sub
inc
mov
test
arpl
rcrb
push
mov
out
or
inc
stc
push
add
stos
mov
sbb
jbe
test
cmp
mov
hlt
dec
inc
dec
mov
add
inc
xlat
ljmp
mov
and
dec
or
or
sub
ret
push
mov
jne
inc
mov
adc
icebp
and
push
xchg
decb
movl
or
push
aam
inc
add
pop
in
inc
sbb
test
fidivrl
mov
dec
adc
mov
xor
int
cs
stos
mov
add
std
adc
movq
imul
lods
popf
daa
insb
add
dec
adc
fiaddl
mov
addr16
lea
adc
ficompl
add
dec
pushf
mov
in
lock
aam
mov
popa
jl
xchg
pop
pushf
outsb
jmp
jae
add
pop
sbb
and
lcall
inc
sbb
into
mov
xchg
adc
xor
jle
or
out
aaa
jb
push
out
push
rcrl
out
pop
icebp
mov
adcl
movsb
popa
test
rorl
insl
cmp
mov
and
repnz
sbb
dec
lock
ds
sub
cmp
popf
adc
nop
lcallw
repz
test
and
and
popf
mov
pop
repnz
mov
jecxz
xchg
pop
xor
sahf
mov
and
neg
or
xor
or
jl
shlb
push
mov
inc
sbb
lods
pop
sbb
jb
ljmpw
out
movsl
lock
out
inc
cmp
fists
aas
and
xchg
mov
shr
shl
xor
mov
loope
pop
sub
sbb
orl
sbb
outsl
or
inc
faddl
mov
rcl
or
sub
jmp
sub
aam
dec
mov
push
mov
lcall
dec
add
mov
sahf
subb
enter
mov
out
fisubrs
jecxz
mov
rcrl
inc
lods
mov
fwait
and
pushl
inc
mov
sbb
insl
or
cli
xchg
movsb
cwtl
jb
push
mov
aad
aas
aaa
xor
mov
dec
mov
jg
push
ss
shl
jecxz
add
jb
insb
or
pop
fsubs
rcr
das
xchg
mov
jnp
mov
insb
roll
repz
add
adc
jecxz
repnz
mov
mov
hlt
aaa
add
arpl
ljmp
xchg
shlb
add
out
addr16
mov
stos
push
dec
insb
add
popa
dec
sub
push
scas
mov
cmpsl
mov
bnd
bound
mov
mov
js
mov
push
enter
cmp
imul
shl
mov
push
mov
int
pop
cli
xor
mov
mov
out
add
xor
pushf
jmp
push
pop
out
fnstsw
xchg
call
loopne
nop
sbb
jl
aam
test
fsubl
push
mov
mov
iret
push
popf
xor
jae
xor
mov
daa
das
scas
ret
shlb
test
pop
jmp
xchg
and
mov
or
cltd
call
leave
lret
addr16
adc
dec
xor
sub
and
movsl
cli
shll
or
adc
push
test
in
jecxz
cmp
outsl
js
jno
cwtl
add
mov
inc
outsl
test
clc
aam
lock
aam
jmp
sub
ret
leave
repnz
jmp
or
dec
arpl
test
lret
shll
ror
aas
jmp
sahf
push
in
push
jmp
mov
arpl
add
sub
mov
insl
xchg
mov
outsb
fcmove
and
fwait
or
push
jp
jno
adc
push
lods
mov
jno
mov
pop
jnp
cwtl
inc
and
cmp
fisubl
stos
cltd
shr
cmpsb
mov
rolb
xchg
pop
pop
les
xchg
add
mov
pushf
inc
insb
cmp
out
orl
sbb
jmp
aaa
push
dec
mov
stos
comiss
mov
shrd
cmp
cltd
ljmp
adc
adc
into
jl
inc
or
push
adcb
hlt
enter
jno
insl
pusha
push
push
mov
sahf
jbe
subb
sub
sub
ret
cmp
inc
xlat
dec
pop
cmp
mov
inc
jl
dec
outsb
sub
push
or
mov
movl
mov
out
cs
adc
out
scas
das
loopne
push
xchg
mov
jge
xor
es
scas
push
ret
popa
addb
mov
xchg
dec
iret
lret
add
aam
ss
rorb
movsb
outsl
pop
mulb
hlt
add
loop
dec
cmp
hlt
xor
or
test
dec
xor
frstor
and
into
test
lcall
sub
inc
les
ds
and
inc
or
cmp
lret
xor
bound
xor
int
cmpl
subl
rcl
xchg
daa
fadds
clc
movd
movb
les
gs
stc
and
popf
adc
jnp
cmp
or
fistpll
ds
cmpsl
mov
pop
mov
xchg
sub
int
dec
mov
call
pop
and
fucomip
icebp
lds
ja
pop
jecxz
pop
imul
sti
and
cmp
adc
sbb
outsb
movsb
mov
dec
mov
add
icebp
mov
fwait
pop
adcl
mov
fmuls
stos
push
std
inc
das
das
loope
pop
mov
lods
nop
lcall
clc
gs
fcoms
push
cmpsl
repnz
and
add
cmc
or
mov
jns
daa
dec
mov
into
rorl
inc
push
data16
mov
inc
pop
cmp
lcall
xor
arpl
push
das
insb
imul
or
repnz
test
xor
ljmp
arpl
mov
push
mov
shlb
sbb
sbb
and
xor
in
mov
sub
das
jl
incb
in
out
call
sbb
mov
adc
cmp
mov
xlat
xor
jb
mov
subl
and
sbb
lcall
xor
ficompl
jle
jnp
adc
mov
vpunpcklwd
loopne
fisubs
push
or
stos
stos
fdivl
hlt
pop
jg
xchg
fwait
lret
jmp
fstpt
pop
repnz
divl
pop
addr16
mov
push
mov
dec
dec
sub
sub
and
jae
adc
xor
mov
adc
xchg
test
sub
inc
cmpl
mov
fldt
sub
faddl
jnp
fs
dec
add
lods
mov
jno
incb
loopne
mov
xlat
add
lea
sbb
out
or
xorb
dec
int
lahf
xchg
divb
dec
jmp
pop
or
and
mov
leave
mov
pop
push
leave
ss
movsl
dec
insl
cli
push
out
test
fnsave
mov
sahf
test
xlat
fwait
xlat
adc
add
daa
fcomps
in
xchg
sub
xor
mov
test
dec
xor
push
in
fdivrl
ja
ds
sbb
pop
mov
inc
xor
sub
mov
lret
xor
int
pop
pop
cmp
fsubr
daa
dec
xor
mov
gs
adc
out
lahf
mov
in
dec
ds
pop
inc
xchg
mov
incl
xlat
cmp
stc
cmp
cmpsb
insl
mov
push
jl
mov
lcall
mov
sbb
js
jecxz
mov
pop
movsl
xchg
mov
cmp
icebp
test
pop
or
mov
push
add
mov
pop
insl
in
inc
push
sbb
orps
outsb
es
dec
xlat
inc
iret
cmp
add
xor
sar
enter
cmp
jp
dec
push
insb
lods
testl
xchg
int
jge
fcmovnbe
decl
in
pop
stc
lret
push
lar
test
addb
sub
ss
ret
jne
stc
add
xor
cmpsl
scas
pop
mov
out
in
jge
leave
incl
cltd
orl
push
call
test
mov
scas
dec
jge
pushf
xor
fimull
xlat
mov
fisttps
int3
add
push
test
push
cmp
push
mov
cli
mov
cltd
sti
sbb
mov
xchg
pop
push
pop
leave
loop
pop
mov
xchg
stos
pop
cmpsl
out
nop
stos
andb
daa
sub
out
sub
outsb
mov
lret
std
je,pt
dec
jmp
out
int3
cmpsl
lods
cmp
sub
sub
mov
cli
inc
xor
sbb
mov
aas
aad
jg
push
std
js
add
lahf
cmpsb
and
mov
push
ret
mov
outsl
or
aas
aad
cwtl
lret
fdivl
pop
incl
lea
xchg
das
pop
pop
push
int
or
jmp
dec
lock
mov
loop
dec
mov
test
call
xchg
or
cs
sahf
ficoms
sub
mul
out
mov
push
gs
jl
push
popf
rorb
test
inc
sbb
cltd
mov
xor
dec
rcrl
mov
imul
fbld
out
mov
mov
dec
adc
xchg
imul
cmpb
in
insb
hlt
or
shl
push
sbb
jns
add
cmp
jns
sub
push
push
cwtl
imul
push
push
push
lock
leave
jecxz
adc
cmp
push
shl
pusha
push
lods
js
jns
dec
cmp
hlt
les
jge
call
add
inc
mov
mov
mov
xchg
lea
scas
push
cmc
mov
rcrb
inc
lods
mov
jp
and
sub
imul
sbb
pop
jnp
sub
inc
pop
mov
xor
xlat
push
xor
lods
and
mov
les
or
stc
cld
add
imul
sbbl
lods
cmp
sbb
jne
insb
sub
loop
push
mov
pop
daa
fisttps
jp
mov
mov
mov
inc
ss
adc
dec
addl
loope
sub
movsb
push
fstpl
icebp
mov
pop
dec
dec
stc
das
and
ja
cmovno
xor
xor
in
das
dec
test
arpl
in
imul
jle
shl
sub
call
loope
lret
cmp
mov
mov
lods
ret
pop
pop
sahf
add
out
stos
sbb
je,pn
shrl
shll
dec
mov
xchg
stos
fildll
adc
adc
inc
lcall
dec
jo
loop
in
sub
fistpl
mov
and
or
sbb
aad
addr16
push
scas
and
jns
es
pop
out
dec
frstpm(287
pushf
dec
test
orl
pusha
add
test
les
adc
xlat
fstl
lahf
sub
in
sub
xor
in
movsb
sti
fistpll
mov
inc
push
loope
mov
cmpsl
mov
push
push
sbb
nop
push
push
jmp
arpl
pop
pop
sti
or
jge
sbb
stc
jmp
ljmp
jnp
enter
add
adc
fprem
or
jecxz
push
dec
xchg
inc
aam
sbb
or
imulb
sbb
pop
or
pop
or
mov
outsl
dec
push
sub
jae
dec
adc
adc
gs
dec
das
sbbl
mov
mov
out
sbb
fmull
xor
scas
jle
out
dec
cwtl
filds
inc
inc
int3
rolb
push
jo
jns
les
into
cli
mov
insb
pop
aas
mov
outsb
movsb
mov
in
adc
jae
push
pop
es
inc
movb
or
dec
sbb
enter
and
pop
sub
fsubrl
push
arpl
mov
push
js
adc
popf
adc
cs
addr16
pop
fsubrl
rol
roll
testb
dec
adc
in
and
aaa
enter
fistps
push
xor
mov
cmp
nop
pop
mov
xorl
clc
inc
mov
pop
les
xchg
pushf
jo
ljmp
xchg
in
insl
or
out
add
ja
insl
or
test
add
or
push
cltd
ss
xchg
mov
movsb
popf
out
add
orl
insl
and
nop
pop
mov
mov
ds
xchg
inc
pop
fmuls
mov
mov
test
mov
mov
jmp
fld
or
fwait
les
inc
sub
testb
sahf
mov
test
cmpsb
xchg
add
outsl
or
ja
jb
negb
cmc
scas
ja
xor
mov
and
dec
imul
jno
mov
rcrl
aam
mov
xor
mov
inc
fs
mov
lret
xchg
sbb
fwait
divl
bound
xor
pop
or
or
xor
enter
and
sub
shrl
xlat
push
sbb
insl
mov
std
outsl
jo
and
mov
dec
push
stos
and
outsb
adc
sub
push
es
sub
cwtl
inc
sbb
xchg
xchg
test
xor
sub
fistps
repnz
jge
xor
cmp
and
mov
fnsave
xchg
mov
add
test
pop
jne
in
addr16
xor
out
xor
ret
xor
repnz
out
bound
idiv
xlat
push
cmp
inc
inc
xor
ficomps
clc
in
je
sub
aad
jp
out
sbb
jg
or
pop
mov
sets
pop
int
pop
shrb
or
jmp
jno
mov
aaa
cli
inc
mov
or
je
shlb
or
aas
js
xor
xor
adc
mov
shlb
loope
add
mov
js
mul
mov
sub
ret
aam
popa
ficompl
lret
xchg
cmp
xchg
leave
imul
mov
cmpsb
jg
or
ret
call
dec
fwait
dec
data16
jae
je
mov
divl
sbb
fwait
inc
call
or
push
dec
leave
lock
cwtl
je
in
xor
pop
mov
clc
inc
mov
add
fwait
mov
test
fistps
mov
or
mov
shrb
sbb
inc
addr16
jmp
js
ficomps
das
mov
andb
test
mov
clc
mov
push
mov
repnz
dec
je
inc
sbb
aam
xor
fbld
shrb
jp
sbb
out
rorb
lods
inc
ss
jl
or
leave
imull
dec
dec
je
mov
stos
in
cmp
les
pushf
lcall
add
fnstenv
xchg
mov
adcl
popf
mov
add
push
jmp
call
adc
and
or
jg
xchg
addr16
push
sub
jmp
repnz
jne
inc
scas
enter
xor
ss
or
sbb
xchg
mov
sub
push
imul
cwtl
pusha
pop
mov
cltd
movzwl
and
mov
out
mov
es
insl
pop
stos
add
int
sub
adc
dec
pop
shl
js
fwait
scas
xchg
lea
jge
adc
fwait
sbb
dec
scas
cmp
clc
mov
cld
enter
xor
inc
jne
repnz
or
push
sbb
pushf
add
xor
loop
push
lea
jae
frstor
into
cli
repnz
arpl
bound
aas
cmp
mov
inc
and
xor
fsubrl
mov
sbb
and
adc
inc
jl
sub
sbb
loop
pushf
mov
xchg
in
pop
lea
xor
mov
push
arpl
pop
cmc
orl
xchg
or
mov
jle
dec
stos
cs
icebp
out
sbb
push
insl
pop
testb
mov
adc
movsl
dec
int
xchg
in
movsl
cld
mov
push
int
and
arpl
insb
addl
and
rol
jnp
jl
arpl
les
adc
jg
aaa
cmpsl
insb
outsl
es
adc
pop
ja
xlat
pop
fwait
arpl
es
popa
adc
fidivs
adc
ficoml
pop
inc
add
cmp
arpl
cltd
cld
popf
dec
mov
mov
dec
sub
imulb
fsubrs
outsl
adc
nop
sub
pop
mov
mov
jmp
ss
or
jae
hlt
movsb
or
xchg
push
clc
test
dec
xor
lea
xlat
sahf
pop
ljmp
lods
in
xor
sbb
mov
mov
mov
cmpsl
or
adc
cmp
ss
sar
jo
in
cmp
or
mov
mov
mov
lods
add
xor
je
and
add
scas
sub
in
int
nop
shrl
int
fwait
cmc
mov
subl
arpl
lds
mov
or
push
nop
aas
xor
clc
sahf
lret
pop
fiaddl
jl
dec
push
sahf
add
test
jge
test
add
loop
fxch
jo
loop
or
cmpsb
sbb
push
mov
stos
pop
mov
sahf
mov
adc
jne
mov
movsl
mull
stc
push
push
add
inc
pusha
les
test
mov
mov
jb
daa
jmp
out
push
cmp
cmp
push
add
sahf
xor
les
cmpsl
push
cmp
jge
das
call
adc
push
mov
adc
bound
decb
mov
cmpsb
aad
push
repnz
mov
ja
jge
or
sub
fsubs
pushf
adc
call
mov
xchg
jecxz
pop
filds
jb
aam
fildl
dec
mov
shrb
fisubrl
sub
ljmp
jecxz
inc
test
xor
and
push
es
adc
pop
inc
mov
popf
xchg
sahf
es
cmp
ja
add
jns
cwtl
ljmp
adc
cmp
mov
fcoml
push
std
inc
jnp
push
xchg
outsb
cli
fs
dec
fdivrl
mov
push
mov
adc
pop
add
nop
xchg
xor
sub
inc
sub
sub
bound
dec
push
arpl
ljmp
popa
fnstenv
hlt
cmp
mov
pop
xlat
es
stos
push
push
inc
call
add
and
gs
mov
test
insl
lock
ss
or
imul
xchg
inc
sub
adc
and
dec
popl
lret
push
int3
out
and
add
push
dec
sbb
les
push
shl
push
js
in
ja
lret
push
shlb
mov
xorb
jecxz
mov
pushf
shlb
dec
xor
divb
sbb
shr
or
loopne
pop
sbb
mov
xorl
pop
outsb
sbb
xchg
mov
sbb
in
push
pop
imul
cmp
dec
sbb
or
aad
add
stc
jecxz
int
jg
xchg
test
lock
clc
lret
aaa
idivl
pop
cwtl
inc
cli
sahf
clc
orl
jns
negl
lret
push
adc
inc
sbb
push
mov
stc
push
movl
fsubrs
and
sbb
repnz
pcmpgtd
ss
sub
ret
adc
imul
inc
sub
fimuls
ljmp
mov
cmpl
fisubl
pop
mov
daa
test
mov
cmp
insl
pop
roll
or
push
inc
into
dec
cmc
sbb
test
sbb
in
cmp
pop
mov
pop
adc
inc
pushf
stc
pushf
outsb
dec
movsb
cmp
adc
dec
push
jae
shll
test
orb
loope
scas
inc
mov
pop
push
lods
and
pop
ss
mov
nop
inc
dec
mov
ret
add
pop
jmp
hlt
leave
or
mov
mov
jge
push
sbb
cmp
mov
xor
cltd
cmp
mov
xchg
xchg
jne
stc
or
ljmp
repz
dec
jecxz
sbb
jle,pt
shlb
pop
mov
pop
inc
adc
imul
rcrb
and
jle
loope
pusha
sbb
subl
repz
testb
jge
mov
imul
mov
xchg
lods
jecxz
and
aas
loop
inc
fbstp
data16
into
and
je
cmp
push
xchg
ret
cmp
negb
scas
mov
or
andl
mov
sub
leave
mov
cmp
mov
dec
mov
cmp
out
ss
iretw
fwait
in
es
icebp
outsb
leave
adc
jnp
in
cmc
jle
in
add
and
inc
fnstcw
xlat
mov
sbb
or
outsl
scas
and
andl
pusha
mov
mov
cmpsb
sbb
push
ljmp
popa
inc
leave
inc
ja
outsb
movsl
mov
cmpl
dec
shl
aaa
jg
jno
push
jecxz
dec
dec
aam
cmp
xor
int3
mov
cmp
shrl
sbb
push
sarb
xlat
mov
mov
push
mov
ficoms
inc
jae
mov
insl
sub
loop
data16
jecxz
jmp
out
cmpsl
fst
or
inc
inc
notl
call
daa
adc
cs
movsb
insl
inc
hlt
jg
out
lcall
or
xor
sbbl
or
sbb
addr16
insl
pusha
jl
mov
or
rclb
and
and
outsl
mov
cmpsb
jmp
xor
mov
shll
jmp
fisubs
dec
inc
sub
popa
ljmp
or
int3
dec
outsb
sarl
add
push
or
sub
or
pop
cmpsb
enter
pop
mov
inc
dec
jecxz
rclb
push
sbbb
push
mov
fnsave
sub
loopne
mov
or
mov
pushf
cli
adc
stos
out
push
xchg
shll
test
mov
mov
dec
pop
add
pop
pop
inc
fsubs
cmp
sarb
sbb
fistps
pushf
add
mov
pop
add
push
adc
or
int3
shrl
dec
daa
mov
mov
pop
cmp
in
jns
jg
data16
or
js
or
add
jle
scas
xor
cmp
stos
jae
jne
jne
xchg
ds
lcall
pop
mov
sub
lea
fstpt
ja
push
push
jg
add
clc
cmpsl
pop
add
sbb
les
xor
jge
push
jg
into
mov
mov
push
push
add
cmp
push
mov
jg
add
cli
mov
pop
jne
jnp
jmp
sub
push
je
mov
xor
and
in
or
je
movsl
lea
cmp
pop
ja
cwtl
inc
cwtl
ja
nop
shrl
mov
outsl
push
dec
pop
or
xchg
dec
jg
into
jmp
js
sbb
mov
arpl
xchg
decl
and
adc
pop
pop
or
push
add
or
xchg
add
or
insl
jmp
leave
pop
pushf
add
pusha
mov
xlat
nop
lcall
mov
lret
sarl
adc
pop
imull
std
stc
je
cltd
xchg
add
and
pop
sbb
test
fimull
inc
jo
mov
repnz
movsb
push
jo
jmp
enterw
cmc
xor
iret
add
fdiv
mov
cmp
js
movl
adc
dec
ja
fisubrs
mov
mov
cld
mov
ret
or
lahf
ficompl
add
popf
add
ljmp
dec
mov
pop
js
out
push
popl
xor
push
jmp
and
and
mov
adc
popf
subb
dec
addb
scas
lds
push
enter
pop
or
jnp
jg
nop
mov
adc
cmp
jmp
push
or
popa
imul
mov
jb
sahf
fisttpl
ret
add
fisubs
insl
sbbl
int
cmc
aam
stos
xchg
jne
lods
add
and
cs
aad
mov
lcall
mov
and
ret
mov
jecxz
jo
inc
addb
arpl
inc
xchg
mov
add
xchg
pop
lods
xchg
inc
enter
jbe
adc
sub
or
add
dec
mov
and
pop
sbb
mov
xchg
es
or
inc
jp
enter
jne
jae
dec
dec
dec
les
dec
pop
rcrb
adc
data16
mov
insb
xchg
ret
xor
push
aas
cmp
push
lock
pop
fadds
add
pop
pop
stos
adc
aam
shlb
lods
pop
shrl
dec
push
enter
dec
or
das
add
dec
cwtl
shll
xchg
add
pop
adc
add
addb
das
jns
jo
cmp
push
sub
clc
mov
cltd
ja
fprem
std
stos
or
js
sarb
insb
jb
cmp
mov
xor
xabort
sbb
cmpsl
cltd
fsubl
jae
jb
inc
js
movsl
jns
bound
sbb
icebp
pop
mov
adc
outsl
mov
pop
ja
mov
loop
jo
into
cmp
movsb
mov
push
sahf
insb
into
in
cmp
adc
in
mov
mov
or
or
fs
lahf
stc
push
addr16
fsubl
dec
add
sub
cmp
repnz
fs
xchg
dec
fs
mov
inc
cltd
mov
add
mov
mov
sbb
dec
push
ljmp
sbb
xor
mov
jbe
add
add
pop
movsl
inc
popf
adc
jne
fcmovnu
push
mov
lret
cmp
stc
repnz
dec
int
pop
xchg
loop
sub
repnz
dec
scas
aad
clc
in
aam
mov
shlb
jge
std
not
sbb
sti
inc
ja
xchg
add
cmc
ss
mov
push
fidivrs
sarb
or
test
sbb
pop
es
inc
pushf
or
and
push
pop
addl
inc
enter
dec
fistpll
inc
xlat
mov
jl
mov
mov
sti
jmp
mov
push
pop
aad
lock
movsl
scas
pop
mov
jmp
push
subl
push
fs
scas
or
dec
out
lret
jae
movsl
inc
jmp
jp
popa
dec
in
pop
cmc
adc
and
fsts
lea
cmpsb
cmpsl
cld
and
gs
cmp
cld
jmp
lahf
das
call
ljmp
mov
add
cmp
or
in
xor
out
insl
nop
or
jl
or
outsb
inc
insb
sbb
pushf
les
pop
fdivl
push
or
push
fadds
dec
cwtl
push
idiv
pusha
adc
ss
test
and
mov
rorl
lods
jnp
adc
in
repnz
loopne
dec
sbb
imul
xor
dec
arpl
cmpl
pop
add
in
push
push
pop
sub
dec
scas
and
aas
dec
mov
enter
cmc
out
dec
pop
inc
inc
cmp
add
sub
addr16
ja
push
fwait
stos
push
inc
scas
arpl
push
xchg
sbb
fdiv
pop
scas
sti
mov
dec
adc
rclb
add
xor
fs
xchg
pop
xorl
mov
mov
ss
adc
xor
jmp
stos
test
push
jle
out
xchg
cmp
imul
and
test
clc
test
movsb
sub
pop
adc
push
adc
mov
shlb
sbb
push
or
or
jge
rcll
in
push
mov
lahf
push
fstpt
popa
incl
mov
ds
adc
sub
push
inc
push
cli
shr
push
xchg
pop
jns
mov
iret
ss
test
popf
inc
icebp
test
push
sbb
xchg
push
push
outsb
or
mov
sahf
xchg
or
mov
jno
imul
js
scas
add
and
ss
jmp
int
rcrb
pop
loope
cwtl
adc
out
dec
xchg
idivl
jg
jno
jle
push
sub
std
or
mov
scas
aaa
test
push
mov
lea
adcb
push
cltd
cmp
movsl
push
push
stc
enter
ficomps
ficomps
leave
xchg
mov
jns
out
in
test
subl
lods
and
insl
test
ljmp
lret
mov
mov
adc
aaa
mov
mov
adc
pop
insl
mov
sbb
icebp
fidivrs
mov
pop
outsl
addr16
pop
mov
call
stc
jp
gs
arpl
sub
test
adc
push
pushf
add
push
lcall
bound
pop
mov
dec
pushf
mov
iret
or
add
cmp
xchg
mov
ret
orl
lock
mov
xor
pop
xchg
sub
mov
fcoms
ja
js
pop
inc
push
jns
add
push
sarb
ret
jno
jne
addr16
mov
loopne
movsl
ljmp
inc
ret
inc
xchg
cmp
das
rcr
iret
idiv
and
fsub
fcomp
mov
jl
pop
fldl
daa
or
mov
mull
push
pusha
aas
test
pop
xchg
mov
das
xchg
and
daa
repz
sbb
arpl
inc
enter
popf
roll
xchg
inc
or
pop
std
ja
jl
and
sub
jecxz
fwait
inc
or
mov
xchg
insl
fldenv
cmc
jg
xchg
mov
push
pop
pusha
jge
cmpsl
or
xor
outsb
add
bound
mov
sub
hlt
mov
add
pushw
xor
stos
inc
das
sbb
mul
in
scas
mov
push
std
and
into
mov
mov
popa
cmp
jns
push
shrb
jbe
imul
cmp
in
les
cmp
outsb
data16
loop
addr16
mov
fnstenv
cmc
ss
and
ret
add
xchg
or
mov
out
addr16
stc
insl
addr16
gs
repz
outsb
stc
xchg
sbb
push
sahf
lock
sub
inc
outsl
xor
orb
mov
insl
stos
clc
addr16
int
adc
jecxz
dec
jno
imul
insl
add
jmp
popa
rcll
add
loope
mov
sub
mov
int3
arpl
inc
mov
shrl
stos
ljmp
cmpsb
xlat
add
scas
pop
mov
dec
aam
ljmp
dec
outsb
out
mov
xchg
inc
and
jno
push
in
mov
ret
push
and
data16
add
push
mov
adc
push
jecxz
out
sbb
pop
add
lods
sbb
xor
mov
enter
test
cmpsb
xchg
xorl
add
in
scas
addb
push
jnp
xchg
dec
lret
movsb
pop
cmp
push
pop
fnstenv
imul
adc
js
mov
hlt
lcall
std
insl
jecxz
adc
mov
adc
pop
ret
loop
scas
mov
rcll
int
test
loopne
in
fwait
inc
out
cld
pop
mov
jecxz
test
lcall
jno
cmp
ret
test
cltd
sbb
mov
pop
aaa
imul
lds
imulb
cmp
dec
pop
and
and
dec
and
cmp
test
popa
push
pop
inc
xor
pop
stc
inc
popa
mov
ficompl
inc
fdivrl
movsl
add
rorl
sbb
dec
cld
loop
dec
dec
mov
xor
adc
out
mov
xchg
push
xlat
mov
dec
sbb
sti
adc
mov
push
test
loop
push
lods
andnps
lds
jno
fisttpll
sbb
cmp
aas
inc
faddl
dec
sbbb
in
arpl
aad
repz
mov
adc
mov
xor
clc
popa
xchg
push
inc
cltd
mov
sbb
adc
fwait
and
add
and
push
mov
lcall
push
cwtl
pop
xchg
test
push
pop
into
insb
aaa
xchg
in
fisttpl
js
pusha
stc
imul
or
push
dec
push
and
out
movsl
repnz
add
lcall
je
cld
sbb
vpshlb
nop
in
outsl
ja
bswap
cmpsl
xorl
pop
das
outsb
gs
jp
rcrb
push
out
fwait
neg
call
shrb
ret
shll
push
push
stos
cmp
pop
sub
sub
test
in
dec
pop
adc
jne
repz
ds
loope
pop
repz
mov
adc
xchg
fdivr
sar
fidivrs
repnz
and
sub
pop
out
ret
shlb
repz
and
std
sarb
sub
fidivrl
cmp
aad
inc
mov
into
sbb
mov
push
cltd
bound
push
mov
xchg
add
lahf
mov
sub
sbb
cmp
xor
dec
les
push
adc
sub
mov
mov
inc
leave
int
ljmp
pop
or
push
in
push
push
dec
adc
loope
scas
dec
in
outsb
mov
and
insb
rolb
popf
aam
icebp
gs
bnd
push
jnp
jmp
js
fcmovu
popf
mov
mov
rorl
stc
roll
adc
sbbl
in
sbb
dec
adc
pop
int
inc
pop
call
inc
test
pop
pop
inc
flds
lock
add
adc
sbb
jno
lods
xlat
adc
mov
daa
in
les
pushf
mov
xchg
clc
mov
pushf
pop
xchg
loope
fs
je
das
stc
out
ljmp
out
imul
cld
shlb
aam
sub
add
inc
stos
iret
imul
sub
mov
outsl
imul
sbb
xchg
data16
js
ljmp
mov
sti
mov
inc
jb
push
repz
cmpsb
mov
rcll
push
scas
bound
jecxz
dec
xchg
int
addb
push
mov
ret
xchg
mov
js
mov
or
inc
sti
pop
adc
arpl
mov
add
mov
ror
add
dec
cmpsb
add
cmp
sahf
clc
call
out
ljmp
dec
stos
lret
rorb
push
cmp
int3
sbb
jnp
and
push
or
loopne
ret
pop
gs
frstor
lahf
arpl
loope
call
adc
jo
test
outsb
jmp
mov
and
or
add
shrb
addl
adc
push
pusha
cli
jo
cmp
mov
dec
dec
mov
in
iret
dec
jmp
bound
stc
sbb
cmp
push
cmc
or
push
mov
push
lcall
into
cmp
jmp
mov
mov
sub
and
fldenv
or
cmpsl
movsb
idiv
div
dec
test
jle
ljmp
mov
cld
fildl
mov
fdivrs
shl
imul
or
iret
push
jp
rorb
xor
push
pop
mov
fldt
cltd
pop
mov
adcl
adc
adc
dec
jns
xlat
repnz
xchg
lcall
sbb
ja
idiv
mov
dec
fstpl
cmp
imul
mov
and
fs
jp
cmp
add
lret
and
je
adc
jnp
mov
push
repnz
into
inc
popf
fwait
pop
and
push
pushf
movsl
cmpsl
sbb
iret
ljmp
inc
adc
add
mov
test
gs
mov
inc
fidivrl
sti
cs
repnz
movsb
inc
lds
out
inc
lods
xchg
jmp
imul
lret
scas
leave
shrl
repnz
inc
push
repnz
cmp
mulb
cmc
enter
mov
sub
jnp
mov
call
push
adc
pop
fwait
mov
in
add
push
jge
lods
dec
sub
or
rcr
aam
repnz
jae
sbb
out
lahf
arpl
push
int3
ficoml
add
inc
add
in
clc
cwtl
pop
jmp
jmp
andb
or
scas
pop
addr16
lahf
xor
imul
xor
mov
sub
push
xlat
pop
push
das
outsl
jnp
mov
sbb
and
les
stos
xor
push
dec
inc
add
sub
fdivrs
push
mov
or
sbb
cmp
in
dec
std
xorl
mov
or
pop
cmp
imul
adc
dec
jne
ds
ror
sbb
and
movl
call
sbb
adc
jbe
lods
lods
lahf
call
push
push
ret
out
fcoml
lods
sub
aaa
or
dec
add
cld
cli
mov
push
dec
mov
stos
push
lods
jl
add
push
mov
fmuls
sbb
mov
jbe
dec
fwait
out
aad
cmp
es
cwtl
lahf
mov
pop
into
ss
test
jo
jge
adc
nop
cmp
pop
rcll
sbbb
mov
mov
pop
stc
push
dec
inc
cs
jmp
call
inc
cmpsl
cmp
push
sub
inc
sbb
lods
pop
mov
out
lods
jb
mov
int
mov
sub
lods
js
rolb
mov
dec
or
pop
sbb
mov
ret
stos
xchg
xor
ja
cmc
xchg
add
int
push
cld
xchg
mov
gs
push
adc
pop
pop
es
push
sarl
dec
jo
lds
xchg
rep
xchg
faddl
jno
jns
movsb
je
shr
test
pusha
out
test
fdiv
enter
sub
nop
jno
push
fistpl
jp
mov
sbb
fwait
xchg
pop
cmp
fildl
or
mov
add
lcall
add
cmpsb
push
sub
xchg
adc
int
daa
je
pop
push
imul
pop
sbb
aaa
jle
scas
std
imul
adc
xchg
xchg
cmp
mov
lods
dec
repnz
loopne
cltd
bound
adc
mov
xchg
cmp
mov
in
add
cli
mov
test
outsl
push
adc
pop
mov
sbb
xchg
popf
mov
add
xorb
push
bswap
cmp
pop
leave
fldenv
mov
inc
adc
cs
xchg
call
sbb
cmp
lods
push
test
inc
call
or
cmpb
sub
and
jecxz
mov
mov
mov
in
aam
jp
je
push
mov
lds
xchg
add
xchg
ss
in
xchg
xor
inc
push
mov
stos
sarl
xchg
jns
mov
and
mov
xor
lahf
imul
mov
dec
aas
in
jge
in
jns
gs
push
in
adc
pusha
fldl2e
pop
repz
sub
mov
enter
pop
mov
dec
out
push
aaa
inc
xorl
mov
sbb
dec
js
add
in
push
and
pop
scas
out
ss
fldt
push
add
mov
or
mov
mov
out
jb
adc
push
leave
add
lds
test
adc
clc
jecxz
sbb
sbb
ret
cmp
add
add
in
cmp
addr16
jne
cmp
xchg
dec
dec
scas
xor
negl
cmpsl
test
xchg
fwait
push
jne
push
push
inc
jo
xor
test
pop
sbb
add
xchg
cmp
pusha
push
jg
push
addr16
scas
adc
movsl
not
fnsave
add
adc
incb
or
xchg
fiaddl
ret
roll
mov
addb
xor
stc
out
and
add
in
jp
aas
sbb
mov
jmp
pushf
xchg
ljmp
js
sub
cld
push
push
pusha
dec
mov
int3
push
lret
loope
jns
lds
jmp
int3
add
add
adc
mov
push
xor
pop
or
and
sti
mov
push
in
shrb
sbb
movb
ds
ret
sbb
int3
push
jecxz
jns
or
adc
das
jmp
mov
xchg
mov
out
jp
pop
or
clc
out
xchg
out
ja
test
std
mov
jbe
daa
and
frstor
jae
sub
cld
fidivrl
int
pop
stc
lds
clc
out
cmp
mov
gs
fnstcw
hlt
xor
or
int
mov
into
in
inc
push
test
lds
sub
xor
add
outsl
add
pop
outsb
mov
mov
rorl
insl
push
pop
rclb
out
or
sub
fdivrp
imul
arpl
ljmp
loopne
jns
lret
and
pop
sub
cmp
pop
jbe
das
aaa
enter
cld
int3
inc
add
cmc
mov
outsl
push
inc
loopew
pop
loope
pop
mov
cmp
gs
pop
ja
cltd
or
andl
and
in
add
ljmp
lret
fisubl
and
mov
cmp
adc
add
decb
mov
mov
pop
dec
jp
pop
mov
sbb
add
pop
xor
sbb
dec
test
xor
mov
push
mov
ja
test
mov
dec
dec
das
aas
jl
aam
cmpsl
cs
fs
mov
add
movsl
sbb
fcoml
add
push
sub
push
sbb
push
mov
jmp
into
mov
xchg
flds
and
mov
std
xor
xchg
std
adc
insl
mov
ret
push
mov
push
mov
fwait
test
pusha
shrl
aam
and
inc
push
dec
and
cwtl
ljmp
arpl
movb
pusha
sarb
pop
nop
imul
xor
sub
dec
adcb
pop
movswl
sub
arpl
and
iret
fisttpll
mov
out
add
push
or
push
ljmp
fwait
mov
cmp
pop
and
test
loope
inc
movsl
sub
xor
or
scas
mov
mov
mov
neg
sub
ret
mov
sub
in
loopne
mov
rcll
xchg
mov
adcb
push
mov
jne
inc
cmpsb
and
or
mov
adc
pushf
ds
jle,pn
leave
arpl
jb
push
jb
mov
sti
fildl
sti
xchg
dec
lret
out
mov
call
and
mov
js
sti
sbb
push
inc
inc
out
outsl
movsb
sub
adc
mov
stos
out
mov
sbb
icebp
adcb
mov
pop
fstpt
lods
push
lods
inc
mov
mov
mov
jl
ret
cmpb
and
std
nop
and
or
push
rcr
jbe
movsl
push
leave
loopne
pop
shll
mov
pop
adc
arpl
cmp
xchg
out
and
popf
lret
repnz
cld
jmp
aas
gs
movsl
fmull
in
and
shlb
cmp
jle
dec
push
push
and
push
or
insl
sbb
es
mov
sbb
mov
lds
mov
adc
into
ret
or
cmp
xchg
push
jns
stos
dec
test
mov
std
idivl
fmuls
mov
adc
lret
rcll
fmulp
pop
stc
jmp
xor
scas
push
in
je
adc
xor
insl
push
sbb
dec
out
pop
jns
xor
push
pop
jo
xor
ja
cs
jo
pop
xor
cmpsl
imul
cmp
mov
rcl
xchg
sarl
push
shl
clc
iret
arpl
adc
xchg
mov
add
dec
or
arpl
aas
xchg
in
in
jp
int
pop
mov
adc
test
xchg
pop
push
fwait
movsl
rol
insb
inc
int3
into
adc
pop
jg
jp
sbb
sahf
mov
mov
push
jo
and
inc
insb
out
fnstsw
pop
iret
add
jnp
fnsave
adcl
cmp
cmc
mov
adc
jp
xchg
outsb
fadds
nop
inc
loopne
xorb
cmp
out
pop
lret
fsubr
imul
add
and
and
jnp
nop
sub
push
mov
inc
xor
dec
xor
xchg
or
or
ja
mov
outsb
and
pop
cld
imul
dec
leave
dec
jp
ret
mov
jp
icebp
in
sbb
cmp
adc
xorb
jnp
cmp
dec
sub
jne
mov
iret
mov
es
lcall
fistpl
mov
jne
loope
rolb
inc
jnp
sti
test
loop
xor
test
lret
xor
daa
pusha
push
daa
xchg
pop
ljmp
jns
mov
fsubp
icebp
jnp
mov
scas
clc
fs
lds
push
add
add
and
dec
push
sub
mov
pop
dec
lea
jp
mov
fiadds
cld
dec
movsb
popf
add
shl
insb
xchg
negl
inc
cmpsb
movsl
mov
inc
and
inc
insb
rcrb
sbb
cli
mov
movzwl
cmpb
das
jge
mov
aas
mov
in
push
scas
sbb
or
repz
cld
inc
xlat
sbb
pop
lock
jno
bound
and
lock
jmp
inc
jg
jb
mov
sub
inc
cmp
into
jbe
sahf
rorb
sti
mov
cmpsl
mov
add
jg
or
and
addr16
push
enter
ret
xchg
adc
mov
psubb
adc
lock
push
push
dec
test
je
mov
ljmp
pusha
stos
dec
ljmp
pop
insl
mov
inc
cmpsl
addr16
adc
in
or
jmp
call
sahf
jecxz
add
sbb
loope
push
push
test
popa
enter
movsb
nop
mov
js
push
sbb
inc
dec
test
mov
cmp
fldl
push
rcll
fcompl
sub
add
addl
inc
mov
xor
or
mov
pop
les
mov
stos
call
mov
mov
and
mov
pop
mov
dec
movsl
sbb
aas
adc
push
mov
mov
mov
stos
hlt
add
fldt
sahf
pop
mov
dec
iret
xchg
icebp
lock
sbb
movb
test
pusha
inc
xor
nop
mov
inc
out
cmp
mov
pusha
aad
push
cmp
enter
out
push
adc
mov
loopne
add
dec
xor
shll
xor
cmp
rcll
xchg
add
jmp
pop
subl
sti
lock
sub
pop
aad
adc
aas
into
mov
stc
cmpsb
fimuls
mov
xchg
jbe
fs
mov
add
pop
fisubl
icebp
push
push
inc
mov
scas
pusha
and
mov
out
inc
fiaddl
sti
cli
mov
sub
scas
fwait
push
mov
jns
add
test
sub
repnz
mov
lret
cmp
rorl
jo
pop
inc
ud0
fcomi
in
int3
xlat
and
lods
and
mov
ds
adc
stos
je
rclb
push
sbb
outsb
pop
std
aam
shrb
xchg
arpl
push
stc
leave
pop
dec
shl
pop
fdivrp
jnp
in
outsl
aad
lret
and
add
xor
es
cmp
mov
hlt
aaa
xchg
fsubs
mov
mov
les
scas
cld
xchg
jno
loope
push
jno
in
adc
pop
sahf
lods
lret
inc
push
push
das
inc
or
ror
aaa
iret
xor
repnz
jmp
addl
ret
pop
jp
mov
xor
nop
sub
push
repz
inc
inc
repz
fnsave
mov
movsb
mov
je
fmull
add
jae
rclb
or
ficomps
cmpsb
xchg
and
or
cmpps
xor
hlt
mov
adc
jno
adc
movsb
lods
mov
mov
adc
xor
mov
cmpsl
pushf
xchg
jbe
scas
arpl
fimull
jnp
out
stc
mov
or
jmp
popa
fcmovnbe
mov
shll
pop
or
mov
and
add
lods
and
dec
mov
xor
ret
rolb
push
insl
push
and
rcr
xchg
sub
mov
pop
mov
loope
mov
xor
es
out
lcall
mov
cmpsb
daa
xor
push
or
adc
lods
orb
and
sub
fsts
xchg
mov
xchg
fisttps
ret
out
test
add
mov
mov
dec
jo
push
jbe
pop
test
jbe
pop
cli
pusha
and
imul
mov
jo
faddp
add
mov
fdivr
cmp
pop
insl
pop
mov
gs
sbbb
mov
cltd
mov
fists
inc
movsl
arpl
xchg
add
jecxz
addr16
fistps
pop
sbb
mov
dec
sub
lcall
push
push
repz
dec
int
jnp
ud1
ja
jmp
sbb
imul
jge
xchg
mov
xchg
fdivs
popf
fcomps
pop
fucomi
jecxz
sbb
mov
or
cld
jle
iret
dec
push
je
sarl
es
mov
outsb
jnp
sub
lea
xor
adc
pop
cwtl
add
sbb
movsb
jbe
add
jp
cmc
rcr
pushf
cmp
and
push
mov
push
mov
rol
jnp
jg
pop
addl
lahf
xchg
jbe
lock
xor
xchg
add
add
push
test
xor
into
jge
lock
cmp
repz
repz
inc
and
jp
movsl
mov
mov
in
out
loope
mov
sti
mov
add
or
dec
inc
in
or
shll
xor
sub
andl
sti
push
dec
popf
xor
fwait
outsb
sbb
or
mulb
xor
sbb
push
aas
pusha
or
ljmp
or
lret
jne
mov
xor
lock
inc
data16
dec
stos
lahf
je
cmp
mov
adc
hlt
daa
dec
cld
sub
hlt
inc
ss
lea
in
stc
aaa
lret
jnp
mov
arpl
mov
push
fisubrl
sbb
xchg
int
add
and
adcb
mov
jg
jno
inc
cmp
push
xor
ljmp
xor
insl
out
outsb
pop
les
mov
sbb
test
mov
adc
ss
mov
sub
in
fstpl
dec
outsb
jae
mov
mov
hlt
xor
push
push
je
lds
push
scas
xchg
imul
xor
bound
jp
sbb
mov
mov
orb
sbb
std
jno
sub
cmp
arpl
sti
cmpsl
shrl
pop
and
add
push
jnp
pop
or
mov
das
xchg
mov
sti
and
int3
imul
stos
sub
and
push
push
fsubrl
push
dec
xchg
cmp
pop
mov
hlt
pop
cltd
orb
push
aad
adc
and
mov
dec
xchg
mov
adc
jno
cmc
jbe
scas
and
push
js
lods
dec
shll
mov
lcall
and
jecxz
jne
xchg
jp
cmp
jmp
test
pop
lahf
mov
inc
stos
sub
pop
cmp
lahf
mov
cmp
or
mov
out
inc
sub
inc
leave
cwtl
jb
aaa
mov
mov
mov
out
imul
lods
frstor
pop
ret
fcompl
cmp
sub
ss
std
mov
shrb
sbb
jmp
scas
jmp
jle
and
mov
xlat
adc
mov
pop
out
mov
popf
pusha
outsb
jge
test
aaa
hlt
rorb
push
imulb
dec
jns
ljmp
movsb
mov
fsubrp
sbb
inc
loop
push
cltd
fadds
movsb
sbb
cld
cmc
and
push
cld
jg
pop
inc
call
pop
incl
add
cmp
mov
adc
mov
sub
das
aaa
dec
stc
and
scas
adc
jp
cmpsl
xor
loope
dec
loopne
icebp
xlat
jns
cltd
aad
fists
cltd
mov
std
cmpsb
adc
mov
ljmp
lahf
aaa
jge
jl
es
push
mov
jmp
sub
mov
xchg
outsl
dec
imul
jl
jp
lret
mov
mov
jecxz
mov
shlb
mov
shrl
gs
sbb
dec
xchg
sti
inc
cmp
xchg
aam
leave
imulb
outsl
orb
add
xchg
or
ja
mov
jo
mov
mov
addr16
jle
mov
pop
push
in
sub
mov
mov
pushw
mov
daa
sbb
cmpsb
lods
inc
mov
inc
mov
loopne
dec
sbb
xor
roll
xlat
mov
jne
dec
push
in
cld
pop
test
repnz
push
or
and
fildl
dec
cmp
femms
popa
jne
mov
mov
jge
adc
sub
mov
inc
movsb
das
testl
cmp
mov
mov
dec
leave
inc
and
xchg
push
ja
adc
or
push
in
incb
jmp
cmp
cmp
and
sbb
xchg
xor
pop
inc
iret
hlt
or
out
fistl
cmovg
sti
lahf
or
jb
cmpsl
or
jbe
mov
or
jnp
int3
sar
jecxz
addb
xlat
or
dec
cmpps
add
adc
add
jmp
push
or
add
pop
push
xchg
push
xor
xor
adc
lock
sbb
jg
pop
inc
les
popa
popf
push
les
std
repz
xchg
loopne
pushf
cld
sub
and
aad
lods
in
pusha
xor
mov
mov
mov
mov
and
mov
adc
in
adc
mov
mov
icebp
add
xchg
mov
insb
adc
test
loopne
xlat
or
ret
scas
mov
fwait
push
hlt
xor
jecxz
movsl
jl
mov
mov
mov
adc
loop
scas
nop
int
or
push
fcoml
loop
pop
inc
cmp
jae
ljmp
sub
rcrl
mov
push
outsb
push
dec
jge
shrl
sbbb
sub
in
je
iret
mov
mov
pushf
fsubrs
inc
mov
add
fistl
and
in
jno
stos
rolb
imul
mov
pop
ljmp
pop
add
das
psubsb
inc
jp
jnp
mov
or
pop
pop
xchg
cmp
mov
mov
mov
xlat
insb
dec
imul
inc
leave
pop
bound
ja
mov
in
dec
sub
fildll
xchg
popa
xchg
outsb
cli
push
lret
pop
scas
jns
test
out
rcrl
pop
dec
jl
and
sub
ljmp
in
jb
std
shrl
das
xchg
xchg
jne
gs
dec
mov
mov
dec
jb
sbb
movsb
jmp
testl
mov
out
sti
jg
mov
jo
sub
cmc
sahf
push
dec
xor
cmp
daa
pushf
pop
xchg
xchg
cmp
push
popf
mov
inc
push
movsb
inc
aam
pop
cmc
pop
add
repnz
mov
loope
jbe
iret
pop
enter
stc
xor
loope
mov
pushf
jg
arpl
adc
cs
cmc
mov
jns
sub
cmp
andb
and
dec
lret
sbbb
outsl
mov
fnsave
shrb
mov
xchg
test
mov
jge
add
mov
mov
ja
jb
mov
dec
or
test
mov
movzbl
mov
nop
outsl
or
sti
inc
es
call
loop
xor
xor
enter
loop
mov
push
cmp
mov
adc
les
sbb
into
pop
pop
xchg
or
btr
pop
lock
cld
fidivl
xchg
in
lahf
lret
jle
inc
pop
pop
lods
add
dec
lcall
aaa
clc
jmp
insl
inc
out
push
sub
sub
dec
lret
push
aam
mov
pop
jmp
std
cmc
stos
insl
xchg
aas
mov
pop
fnsave
sbb
or
shll
sub
mov
int
mov
pop
lods
sar
sbb
jo
add
out
dec
xor
mov
dec
jo
outsl
dec
inc
mov
xor
dec
ss
mov
jl
pop
mov
cwtl
mov
dec
fsubrp
aas
jo
xchg
clc
les
push
popf
mov
sbb
insb
mov
push
iret
in
mov
fsubr
xchg
test
scas
lret
jbe
jns
sub
dec
sbb
hlt
add
jne
and
nop
jns
in
fsubl
cmpsb
pop
pop
jbe
js
mov
lahf
cmp
push
mov
mov
sbb
mov
mov
insl
ret
test
jmp
inc
sbb
js
imul
call
stc
fisubs
les
pushf
filds
mov
jg
cmp
fidivs
push
adc
adc
jecxz
ret
rolb
jae
adc
mov
in
mov
or
mov
and
xor
dec
push
das
mov
or
enter
or
mov
mov
mulb
adc
jb
loopne
jp
mov
fnsave
or
and
movsl
lods
mov
in
ret
sbb
pop
insl
pop
and
sti
test
mov
js
push
jns
push
aam
sbb
and
mov
dec
insb
sub
enter
dec
fbstp
adc
bound
test
xor
push
js
fnstsw
test
in
add
lods
cmp
inc
push
adc
outsl
outsb
mov
dec
and
fadd
ffreep
xchg
mov
mov
lds
or
cld
in
adc
lahf
mov
push
gs
jecxz
arpl
pop
mov
aas
nop
sbbb
push
loope
push
inc
cltd
lea
inc
or
add
movsl
test
or
mov
stc
fcmovne
or
int
cmpb
aas
push
ss
xor
stos
mov
mov
jne
js
imul
mov
xor
pop
push
enter
test
or
inc
mov
adc
pop
mov
repz
mov
ret
cmp
cmc
aas
mov
push
mov
dec
push
stos
adc
leave
lret
test
xchg
and
adc
xchg
sti
or
or
pop
icebp
push
mov
add
mov
and
cli
jmp
mov
pop
cmp
push
sbb
cmp
add
jp
lock
xor
into
xor
jmp
mov
adc
push
dec
mov
jecxz
nop
ljmp
xor
fiadds
fiadds
push
add
loop
cmp
xchg
mov
dec
iret
dec
ret
test
lea
rcll
mov
ja
add
scas
insl
xor
push
ficoml
mov
xchg
sub
dec
clc
xor
enter
push
pop
std
xchg
jb
rorb
cmpsb
dec
or
test
xchg
je
xchg
aam
aas
sbb
xor
inc
push
and
incb
pop
rolb
repz
out
inc
andb
xor
sbb
sub
incb
mov
mov
ds
lret
aam
rclb
adc
pop
mov
cmp
mov
xlat
push
lahf
xchg
aam
pop
add
sub
insb
lret
scas
fisttpll
cmp
cmp
test
jns
test
loopne
mov
add
cmp
out
ja
mov
and
and
pop
repz
mov
inc
dec
mov
clc
rorb
fwait
push
jp
test
fidivrl
dec
pop
fdivrs
movsb
scas
sub
dec
xchg
inc
xchg
mov
adc
cwtl
dec
scas
leave
insb
cmpl
arpl
aad
push
ret
adc
aaa
int
inc
into
cmpsb
jns
pusha
pop
pop
jb
notl
stc
ja
inc
ja
mov
mull
shlb
lahf
sbbl
pop
sub
and
pop
popf
in
out
dec
sbb
sub
inc
adc
fisubrs
orb
cmc
dec
jne
mov
outsb
aaa
xchg
jl
enter
lds
jp
fwait
lret
and
rorb
and
push
dec
es
mov
sub
lahf
ljmp
loop
mov
push
sub
mov
imul
adc
and
call
pop
xor
lahf
pop
push
pop
pop
xor
push
sub
add
sbb
mov
and
out
aaa
sub
xchg
mov
mov
jecxz
imul
mov
fidivl
out
pop
fsubrs
push
out
loopne
mov
fdivp
rcl
daa
cld
sbb
cwtl
pusha
xchg
lods
in
adc
aas
ret
xchg
aad
inc
lret
inc
out
clc
cmp
lret
xchg
daa
das
aas
xchg
dec
and
push
mov
popl
lret
cmp
popf
cli
insb
push
dec
dec
mov
leave
or
out
sbb
mov
jno
fwait
sub
pop
iret
icebp
repz
jne
cltd
movsl
xor
loope
out
fucomi
movsb
xchg
outsb
les
loop
rcrl
add
fcoms
pushf
cld
inc
out
jo
hlt
sub
push
add
repz
loop
xchg
hlt
ret
sub
and
ficoml
mov
out
les
adc
mov
ja
mov
push
cwtl
mov
leave
xor
out
adc
jns
sbbl
jl
in
mov
inc
test
mov
cmp
rcrl
mov
adc
test
inc
add
in
mov
lock
stos
fnstsw
mul
push
mov
xorb
mov
test
ja
lcall
rcl
inc
mov
xor
aam
cmp
pop
lds
in
adc
xchg
aas
xchg
roll
fistpl
lret
xchg
js
lock
push
ret
sub
in
push
adc
leave
pop
inc
ljmp
notl
ret
adc
jae
je
pop
in
jmp
ja
xor
pop
pop
jmp
ds
push
fs
cld
lahf
adc
pop
popf
sub
icebp
mov
incl
pop
push
test
sete
pop
or
fildll
xor
and
adc
sbb
add
xchg
push
mov
jno
lret
cmp
mov
mov
or
jbe
clc
repnz
push
xor
ja
mov
inc
lret
int3
dec
fistpll
and
dec
mov
add
dec
lahf
push
push
or
sbb
ret
andb
or
movsl
arpl
fdivr
daa
dec
sub
sbb
dec
mov
jg
mov
sbb
mov
mov
outsb
arpl
sbb
inc
pop
fstl
and
inc
aad
ret
sub
jle
jle
xchg
mov
dec
daa
dec
jmp
and
mov
mov
inc
f2xm1
cmp
add
adc
adc
and
mov
xlat
std
sub
aaa
mov
push
repz
and
dec
sbb
inc
in
and
ror
iret
iret
je
push
mov
mov
fisubl
fdivrl
push
repz
out
inc
jns
pop
pop
fmull
and
arpl
js
pusha
xor
js
dec
punpcklbw
jmp
dec
jl
dec
and
xchg
or
jecxz
push
test
std
outsl
or
cli
test
cltd
aas
mov
cmp
lock
loope
lods
mov
aam
mov
jle
sub
fsubs
iret
pop
cli
sbb
lods
dec
insl
mov
sti
mov
aad
mov
mov
xor
hlt
mov
mul
cmp
fisubrs
mov
in
scas
pop
popf
jg
push
out
mov
adc
inc
adc
imulb
negb
mov
jmp
imul
repz
mov
arpl
xor
cmp
das
mov
cmp
cmp
inc
push
adcl
fmuls
xchg
jne
and
lock
xchg
fs
icebp
sub
int
jnp
sarl
adc
lahf
loope
rorb
inc
dec
xor
fnstcw
es
and
fidivrl
sbbl
pop
add
jp
add
jle
xor
sub
subps
enter
xor
aad
push
gs
orb
mov
and
lcall
cmp
clc
lds
xor
stc
cli
mov
or
nop
jl
inc
adc
int
xchg
mov
dec
adcb
in
in
pop
cli
nop
cmp
cld
jne
outsl
mov
leave
repnz
sar
pop
push
mov
jecxz
out
sbb
or
movsb
mov
xor
fsubr
cwtl
out
cmp
jmp
insl
add
cmpsl
dec
fwait
in
scas
pop
in
stos
sahf
dec
pop
leave
jno
sub
shlb
enter
pop
lcall
out
stc
dec
jmp
rolb
xchg
jne
add
in
mov
loope
jge
repnz
jmp
dec
xlat
popf
cmp
fs
fnsave
clc
jne
xchg
pop
pop
imul
dec
adc
mov
pop
adc
sub
add
fcmovb
leave
dec
iret
lahf
push
mov
ds
scas
int
push
cmpsl
mov
jg
test
pusha
cmp
fildll
out
fs
jmp
out
stos
movsb
jbe
jge
test
mov
dec
popl
rcrl
inc
into
mov
sbb
cmpsb
sub
pop
out
imul
pop
stc
pop
cmp
nop
mov
aad
mov
dec
cmp
movsl
and
dec
in
cld
insb
ret
sbb
mov
xchg
addr16
add
inc
cmp
dec
mov
mov
icebp
pop
xchg
mov
stos
subb
rcr
out
add
scas
out
pop
leave
mov
push
push
aaa
dec
sub
daa
sub
mov
inc
mov
aaa
pop
ds
pop
push
insl
scas
jmp
mov
test
mov
lahf
lcall
jns
gs
adc
ret
hlt
add
jecxz
jp
push
cmp
jbe
push
or
pushf
xchg
push
cmpsb
sahf
push
pop
sbb
inc
daa
sub
scas
das
fldt
popf
xor
cmpl
movsb
sub
dec
out
hlt
loope
dec
inc
arpl
lock
repz
push
notb
in
daa
jle
rol
add
outsb
cmp
sub
mov
fnsave
sub
push
arpl
out
imulb
rcrb
and
mov
inc
cwtl
insl
pop
push
mov
mov
mov
ja
test
fsubrl
or
jle
and
dec
jb
jmp
sbb
pop
mov
cld
push
fimull
jl
add
jge
sbb
lods
lret
ret
shlb
sbb
inc
dec
dec
xor
sbbb
cmp
ja
mov
adc
adc
hlt
xchg
jns
int3
push
add
adc
les
aas
js
daa
inc
out
out
jbe
fcmovu
push
call
cmpsl
xchg
jecxz
pop
outsl
nop
fdivrs
ds
jecxz
xor
mov
push
mov
xchg
adc
jbe
ret
sahf
add
and
pop
push
fbld
out
xchg
dec
dec
ret
dec
mov
out
sbb
ficompl
or
jns
or
push
or
es
addb
dec
mov
or
and
notb
or
push
movsl
mov
or
mov
fs
lods
cmp
cs
mov
sub
orb
sbb
cwtl
pop
insb
enter
movsl
or
je
add
push
dec
push
push
push
daa
repnz
adc
int3
insb
test
add
dec
or
clc
icebp
mov
mov
stos
jno
pusha
nop
lea
add
popf
insl
cmp
xor
pop
inc
sub
das
sbb
sub
pop
mov
inc
out
jnp
loopne
les
cmc
imul
test
cmpsl
insl
in
mov
sub
bound
push
sti
and
fisttps
sub
pop
and
fstpl
sbb
fstl
std
dec
xchg
rcr
jl
xor
outsl
out
push
mov
in
out
lea
cmp
insl
ja
pop
int
sbbb
out
or
sahf
dec
push
pushf
andl
insl
inc
adc
adc
test
je
lea
xchg
sbb
pop
jne
js
mov
pop
inc
loopne
pop
cmc
shlb
xlat
movsl
out
adc
pop
mov
inc
int3
jnp
je
and
sbb
sarb
xorl
xor
inc
shr
lds
adc
rcrb
add
das
pop
xchg
jecxz
movl
testb
adc
mov
cmc
es
push
insl
test
jecxz
pop
xlat
decl
xlat
dec
test
aad
in
mov
add
idivb
hlt
dec
add
and
mov
jns
jp
push
out
adc
int
leave
cmp
cmc
mov
adc
dec
jbe
out
pop
sti
add
ret
sbbb
addb
shll
rcrb
ror
and
cld
mov
inc
into
add
cmp
inc
push
pop
adc
or
mov
xchg
cmc
in
push
adc
xchg
push
pop
sbb
push
daa
in
xchg
pusha
push
pop
xor
fwait
test
dec
adc
xchg
scas
test
scas
inc
hlt
or
pop
hlt
addr16
outsb
shl
js
std
mov
sbb
int
std
xor
shlb
stc
fistl
lcall
pusha
sahf
in
insb
in
xchg
inc
in
ror
and
inc
push
cld
shrl
and
mov
shl
fisubrs
hlt
clc
dec
add
lods
fisttpll
push
fnstcw
push
sub
cli
or
inc
push
mov
cli
jne
inc
lods
ret
movb
rcr
into
sti
aam
inc
lods
inc
ljmp
jecxz
jns
cmp
adc
sub
stos
orl
push
push
jb
pop
mov
es
bound
jl
adc
insb
aaa
xchg
mov
dec
xor
leave
pop
pop
add
fstpt
adc
lahf
loopne
insl
fs
inc
mov
cmpsb
cmpsl
xor
cmc
pop
dec
sbb
cmpsb
das
popf
testl
testb
cli
jbe
aas
add
cmpsl
pop
xor
jmp
fidivs
xchg
jl
lea
fcomps
aad
rcrl
adc
imul
das
mov
movsb
fwait
rolb
push
lods
xor
and
les
addr16
outsl
scas
imulb
inc
push
or
and
in
rcrb
jbe
ret
aad
add
dec
andb
xchg
mov
in
outsl
mov
mov
icebp
out
test
lahf
scas
mov
shll
out
in
add
xlat
inc
xchg
mov
sub
adc
adc
es
mov
sub
push
pop
adc
xor
inc
out
dec
mov
xchg
pop
idiv
add
add
ss
dec
mov
push
stos
lds
aam
loopne
lock
ljmp
add
dec
loopne
scas
pop
repnz
decb
mov
out
je
into
cmp
jmp
or
push
stos
push
xchg
je
fidivrl
fwait
xor
sub
pop
js
cmc
push
in
fs
dec
mov
mov
xchg
xor
in
cltd
cmp
cltd
inc
jo
adc
test
xchg
lods
sbb
mov
add
lcall
lods
dec
pop
sbb
add
arpl
adc
sbb
jb
lahf
adc
int3
fidivrs
push
sbb
and
pop
dec
arpl
test
scas
mov
notl
cmc
fwait
push
jg
inc
xchg
mov
mov
xchg
dec
adc
insb
loope
scas
cmpsb
mov
outsl
dec
mov
dec
data16
sbb
in
add
fisttps
insb
fadds
sbb
xchg
arpl
and
shlb
mov
sub
fidivrl
dec
loopne
and
sar
push
int3
or
mov
ret
mov
jg
xor
jle
fadds
push
leave
adc
push
mov
and
add
lock
fcmovnbe
aad
jp
mov
pop
xchg
and
pushf
inc
jo
pop
cmpsb
aas
or
mov
xor
lcall
cmp
ds
sbb
dec
adc
xchg
sarl
in
inc
das
inc
mov
xlat
gs
cmc
pop
lret
stos
cli
pop
jb
pop
leave
divl
fbld
mov
pop
sbb
popa
movsl
xchg
lock
xchg
xchg
jmp
in
push
mov
xchg
sti
adc
inc
pusha
dec
loope
fcomps
jecxz
pop
cmp
in
mov
fstl
ja
pop
call
pop
mov
es
mov
mov
sub
cli
in
mov
fwait
les
ja
sti
adc
inc
ds
lcall
jae
adc
in
aaa
dec
in
bound
add
in
jg
sahf
xchg
mov
push
pop
imul
fcomi
adc
mov
jecxz
or
jmp
xchg
nop
in
inc
ljmp
adc
in
mov
sub
insl
ja
je
jne
and
lahf
cmp
adc
imul
jo
lret
lds
cmp
lods
sub
lcall
push
enter
icebp
and
xchg
hlt
xor
xor
es
rorl
xchg
test
jmp
les
in
ss
imul
dec
pop
insl
push
jp
mov
inc
mov
mov
cli
add
mov
mov
into
xor
cwtl
add
rol
push
xor
pop
out
dec
in
jmp
mov
shl
inc
mov
sahf
repnz
pop
xor
mull
cmpsb
mov
pop
adc
jp
add
push
and
out
in
lods
cmp
sub
jl
xor
cmpsl
test
xchg
ffreep
lods
and
adc
ret
mov
push
sbb
divl
cld
andl
int
jp
cltd
sbb
jp
in
mov
icebp
sub
negb
push
out
int
or
add
sbb
push
push
push
fs
xchg
or
out
dec
lea
pop
loopne
lret
int3
out
sub
rorb
fcmovne
mov
lcall
mov
mov
inc
mov
in
int
mov
mov
or
jae
in
ret
push
ja
fmull
shl
mov
dec
aad
or
or
sbb
add
loope
pop
fwait
inc
out
jp
ljmp
stc
jnp
popa
jae
out
jl
mov
sarl
popa
ficomps
nop
push
mov
fstpt
pop
fdivs
mov
jns
mov
mov
adc
fcmovbe
stos
je
fstpl
cwtl
imul
xchg
int3
cwtl
and
inc
or
push
stos
ds
cmp
pop
cwtl
cmp
adc
rcrl
cmp
orb
push
shll
jmp
jo
mov
clc
lret
jns
jne
push
sub
scas
sub
adc
xor
pop
inc
jg
add
jns
mov
out
lcall
xor
pop
inc
and
xor
xchg
inc
jg
rorb
sub
and
mov
or
add
xchg
mov
rcrb
pushf
cmc
or
popa
pushf
jbe,pn
fistpl
inc
cmpl
cmovnp
add
sub
out
lahf
jns
fstl
fwait
popf
push
xchg
fadds
pop
stc
or
sub
jecxz
jmp
mov
xor
lock
les
inc
mov
jno
rcrl
mov
jbe
lahf
aas
in
or
ljmp
test
mov
add
sbb
push
xorb
notl
inc
roll
mov
xchg
cwtl
adc
lcall
mov
xchg
rcrb
int
ss
or
lods
xlat
leave
mov
and
inc
jae
sbbl
loopne
pusha
jecxz
in
sbb
mov
or
xor
lahf
push
enter
aam
dec
cmp
mov
pop
push
jne
mov
dec
out
ss
loop
clc
dec
fisubs
cmp
inc
sub
pop
sub
or
dec
inc
add
ret
inc
pop
inc
adc
xchg
sbb
xchg
jnp
mov
push
sbb
mov
idivl
in
or
mov
push
clc
mov
sub
icebp
shrb
xchg
dec
sbb
mov
fidivs
inc
divl
mov
pop
mov
clc
adc
icebp
icebp
mov
xor
mov
daa
xor
xor
xchg
pop
add
enter
sti
and
int
in
xchg
popa
cmc
dec
sub
push
cmp
adc
jnp
pop
call
mov
push
pop
jp
addb
xor
mov
mov
add
and
scas
fwait
mov
jp
adc
and
pop
bound
stos
dec
and
mov
mov
stos
cs
push
sub
adc
or
movsl
adc
sti
inc
xor
imul
imul
cmpsb
or
es
fsubrp
cmp
out
test
xchg
shlb
hlt
dec
in
jo
inc
xor
lods
rcr
cmpsb
mov
int3
cld
imul
test
push
xor
dec
push
or
sub
push
das
add
push
mov
sarb
sub
cmp
mov
sub
mov
subb
andb
loop
xor
sbb
or
mov
sbb
jne
xchg
bound
negl
jmp
mov
ljmp
cmp
aad
cmp
insl
outsb
cmp
iret
xlat
imul
dec
xor
mov
lds
add
sarl
jae
je
mov
ljmp
stos
push
lods
in
cld
push
test
outsl
xor
into
mov
cli
dec
pop
push
les
sbb
push
fstps
or
jp
add
jge
outsb
lcall
pop
add
mov
push
jo
iret
call
cld
aas
cmp
adc
jg
jge
int3
sbb
pop
push
jnp
dec
int3
not
mov
xlat
popf
or
mov
pop
enter
cmpsl
jae
hlt
or
xor
cmp
cmp
rcr
mov
mov
stos
sbb
loope
or
repz
mov
repz
cmp
add
xchg
and
arpl
lgdtl
popa
mov
int3
scas
out
mov
sub
idivl
jne
pop
int3
xor
call
pop
repnz
scas
sub
cmp
aas
addr16
mov
imul
lea
pop
inc
out
ja
aad
mov
mov
pop
jbe
in
push
cmc
push
rorl
push
xor
andb
inc
inc
sbb
bound
bound
adc
cmpsl
xor
mov
lret
sub
nop
add
jbe
leave
xchg
or
pop
cmp
push
mov
mov
push
lods
xor
rcrb
mov
adc
movsl
add
sub
stos
cmc
jno
ret
ljmp
dec
cmpsl
cmpsb
arpl
in
push
dec
xchg
sahf
aam
adc
mov
xor
inc
loope
insl
push
and
test
fidivrl
xchg
pop
rclb
add
inc
mov
xor
in
mov
xorl
or
aas
imul
fidivrl
jecxz
mov
enter
testb
cwtl
ficompl
xchg
mov
mov
xlat
fadd
xrelease
iret
cmp
bound
pop
rcll
repnz
out
mov
lods
vunpckhps
les
jl
cmpsb
mov
mov
aam
add
add
mov
and
inc
and
push
aaa
pop
arpl
dec
aad
adc
ret
pop
jns
mov
cltd
or
cmp
popa
push
add
fimuls
add
lcall
stos
lcall
leave
out
xchg
or
dec
adc
jbe
mov
dec
lret
cmpsl
mov
dec
sbb
inc
push
xchg
xlat
or
mov
add
bound
out
lahf
mov
subb
nop
fadds
stc
pop
stos
lods
cs
daa
jg
cmp
cmp
jl
pop
ja
xchg
mov
mov
cmpsb
adc
inc
adc
js
xchg
lea
loopne
aas
xchg
mov
aas
mov
dec
push
ss
cmp
decb
sahf
jp
pusha
fcoml
cmp
sub
movsb
loope
inc
icebp
xor
add
and
sbb
mov
scas
jno
sub
dec
movsb
test
adc
cmpsl
scas
cmp
jge
shrl
int
inc
jecxz
inc
cmc
ss
cmp
and
sbb
jb
dec
testl
adc
add
push
into
ljmp
mov
test
call
sbb
sahf
imul
popa
test
loope
mov
cmp
xchg
ror
mov
or
xor
pop
dec
mov
shlb
mov
loop
xchg
or
adc
cmp
jg
push
repnz
cs
jge
add
dec
std
ljmp
inc
rclb
dec
outsl
aas
cmpsl
xor
xchg
mov
cmp
mov
cmpsl
stos
divb
bound
inc
xor
push
mov
xchg
pop
shl
jl
lock
icebp
mov
xchg
clc
daa
mov
outsb
scas
jns
aad
jmp
insb
mov
les
je
xchg
push
popf
cld
pusha
and
xchg
sub
cli
sbb
pusha
mov
jnp
sbb
fcmovnbe
or
sbb
xchg
mov
scas
call
or
mov
inc
adc
add
hlt
repnz
ja
add
cmp
sub
xchg
and
sbb
js
xchg
test
fs
jae
sti
pusha
pop
jns
leave
add
adc
add
pop
aad
in
movl
lret
cmp
and
mov
fnstsw
xor
orl
dec
daa
jle
and
inc
jo
jg
gs
jns
cmp
lcall
nop
incl
lea
push
pop
sti
pop
cwtl
cs
push
sbb
fnsave
int
sbb
movsb
add
sbb
mov
dec
mov
jle
out
pushf
adc
xorb
push
sbb
inc
add
add
leave
outsl
test
xchg
inc
inc
scas
imul
cmp
push
mov
xor
dec
sahf
dec
jno
leave
repz
dec
orb
mov
inc
or
dec
cli
inc
test
push
imul
bound
in
mov
shll
loopne
out
hlt
mov
test
pushf
dec
push
mull
cmp
push
outsl
mov
pusha
push
inc
enter
and
fcompl
test
xchg
xorl
cmc
dec
rclb
lret
call
insl
test
push
std
add
push
push
lcall
inc
dec
fbld
pop
enter
mov
push
xchg
mov
cs
out
cwtl
pop
lahf
xor
pop
movsl
push
ds
pop
xor
stc
mov
dec
mov
pushf
or
push
or
cmc
das
xchg
jne
push
inc
jb
jp
loopne
iret
scas
je
xor
scas
cltd
aas
pop
cwtl
bound
xchg
add
jae
mov
xor
cmp
rep
xlat
and
push
aaa
loope
mov
mov
cmc
inc
pop
xchg
add
xchg
stc
xchg
mov
in
push
and
cmp
jnp
cmp
cmpl
out
in
insb
mov
mov
pop
cmp
mov
xchg
and
sub
inc
icebp
fidivrs
mov
and
inc
ljmp
jg
test
and
test
shl
xor
mov
sti
and
ds
sub
jecxz
pop
in
inc
mov
lds
icebp
push
cmp
cmp
sti
popf
or
test
call
mov
xchg
cmp
andl
das
divb
mov
adc
or
cmp
jne
notl
push
or
shlb
jle
or
jmp
mov
mov
adc
sbb
dec
or
into
push
push
cmp
repz
mov
cld
jg
xor
out
adc
scas
cld
loopne
test
mov
mov
mov
mov
movsb
mov
jae
repnz
sbbl
pop
pushf
aam
outsl
mov
out
stos
cmpsl
cmp
sahf
addb
stc
mulb
int3
push
xor
xchg
out
shlb
mov
xchg
cmpb
sub
push
adc
xchg
jbe
push
jmp
xor
seta
mov
mov
lea
mov
mov
sti
iret
ljmp
cmpsl
mov
pop
lds
je
inc
xchg
xor
fwait
or
push
inc
xlat
cmp
in
cltd
jb
in
int
es
stos
adc
xchg
mov
push
out
xchg
fwait
push
jmp
mov
xchg
orb
inc
xor
sub
sbb
or
mov
add
lret
mov
sub
nop
std
push
mov
lds
jl
cs
fsub
in
je
fldln2
xchg
addr16
popf
or
mov
ja
rcl
or
lds
shrb
mov
sbb
pop
xor
mov
imul
in
jo
ljmp
flds
mov
test
inc
cmpsl
roll
dec
ss
rcrb
lretw
mov
jl
inc
mov
or
mov
mov
int3
movsb
xchg
sbb
das
xlat
sub
call
push
xchg
xor
ret
mov
cmp
add
outsl
dec
mov
insl
bound
jle
xchg
negb
testl
cld
xor
repnz
dec
or
test
lret
jle
xchg
sbb
dec
pop
je
sbb
xorl
jmp
xchg
sub
push
int
cmpb
clc
adc
loope
mov
inc
pop
mov
andl
bound
popf
rcrb
add
add
in
mov
scas
dec
popa
xor
sub
out
xor
aam
mov
mov
movsl
shrb
pop
out
xor
ficomps
pop
repz
sahf
sub
cli
pop
mov
fdivrl
sub
stc
sbb
outsb
sub
ffreep
inc
scas
rcll
jne
inc
mov
mov
push
repnz
add
fisubs
mov
ja
inc
pop
in
push
inc
add
rorl
or
pop
ficoms
xchg
mov
mov
rcll
sarl
clc
sbb
mov
ret
and
pusha
pushf
frstor
inc
mov
push
adc
cltd
sbb
inc
jns
jb,pt
inc
push
fldl
das
hlt
xchg
fstpl
xor
xchg
mov
lcall
mov
inc
stos
sbb
cs
cltd
es
xchg
arpl
mov
outsl
or
or
fsubl
and
sbb
mov
push
lods
cmpsl
jns
sbb
rcrl
xchg
cmp
stc
sbb
add
movsb
out
mov
lods
mov
ss
repnz
xor
mov
or
fcomps
pop
addr16
cmc
cmp
inc
jno
das
pushl
aam
enter
mov
fs
loop
repnz
adc
xchg
in
mov
lds
mov
rcrl
fiaddl
es
pop
fsub
pmovmskb
shrb
jmp
xchg
cmpsb
addl
icebp
fidivl
sbb
cltd
scas
add
fidivrl
lahf
lret
jbe
sub
push
jle
jo
cltd
pop
daa
jns
lcall
outsl
insb
jne
fcoml
mov
xchg
jne
int3
movsb
pop
fmuls
mov
dec
testl
and
in
xor
aaa
mov
arpl
xor
sbb
lcall
and
stos
sub
popl
imul
pop
add
mov
add
mov
ds
pop
sbb
or
sub
xlat
js
cltd
mov
cmpsb
push
jnp
add
and
inc
jnp
and
jo
cmp
jecxz
outsb
insb
fisttps
jae
stos
lds
jl
push
mov
fidivs
aam
inc
or
cmp
in
fwait
or
jne
add
sub
mov
mov
test
xor
dec
fs
xchg
mov
xchg
pop
add
pop
and
scas
repz
push
stos
dec
xor
stos
test
insb
dec
or
mov
cmpsb
or
mov
mov
jno
push
or
pop
mov
adc
ret
int3
push
add
cmp
das
lcall
cmp
xor
jne
pop
es
add
cmpsl
jb
into
ja
mov
repnz
dec
cmp
das
fsubs
movsl
xchg
mov
mov
enter
jmp
test
jle
in
sbb
or
dec
imul
inc
fwait
mov
sbb
cli
xlat
push
sub
sbb
xchg
shr
aad
cli
pop
add
int
push
jnp
sti
je
jp
fmul
enter
imul
dec
mov
mov
mov
push
adc
je
sub
ljmp
pop
and
sbb
sbb
jne
xorb
cwtl
mov
pop
cmp
push
out
int3
mov
inc
cwtl
fdivl
push
or
xlat
dec
cs
scas
xchg
mov
dec
mov
mov
dec
xchg
mov
iret
out
adc
or
inc
pop
lock
hlt
or
cmpsb
inc
ffree
and
cmp
adc
pop
mov
mov
and
in
push
nop
imul
or
out
inc
lret
ja
add
test
cmp
lcall
out
push
xchg
in
pushf
inc
mov
es
rclb
mov
push
push
xchg
or
adc
ljmp
mov
fmuls
cwtl
and
lock
fdivrl
mov
mov
jb
in
jbe
sub
daa
loopne
xor
stos
and
icebp
test
in
jnp
mov
inc
xchg
inc
lds
mov
push
jae
stos
fsubl
jmp
shl
testb
arpl
int3
inc
fdivl
xchg
ret
leave
cmp
stos
test
mov
sub
mov
pusha
arpl
es
adc
ljmp
adc
cmc
mov
into
ret
push
imul
add
pop
loopne
mov
xchg
jbe
cld
mov
mov
test
mov
jecxz
repz
jg
sbb
repnz
mov
dec
push
xchg
test
xor
dec
mov
ss
movq
test
test
adc
lds
xchg
in
cmpsl
mov
sub
fsub
dec
xor
popa
and
mov
les
pop
dec
mov
daa
sbb
mov
push
pushf
push
pushf
sbb
gs
adc
or
mov
inc
add
jg
ror
xorl
fldenv
mov
mov
mov
add
scas
scas
mov
dec
xchg
mov
shll
xor
cwtl
dec
sub
aaa
test
dec
adc
jmp
mov
jb
loopne
or
movsb
xchg
and
and
pop
bnd
aad
mov
xchg
push
in
and
mov
mov
pop
mov
mov
imul
fadd
push
call
mov
push
rcr
xchg
dec
push
jg
or
pop
lea
sbb
test
mov
lcall
inc
into
jle
fsubrl
adc
xor
mov
xor
lds
jge
and
fwait
cltd
lret
lods
aas
pop
mov
clc
push
movsb
jp
pop
xchg
xchg
mulb
movsl
inc
xchg
int
add
cwtl
out
lds
add
push
cltd
mov
push
movsb
mov
loop
and
movsb
arpl
mov
je
aas
rcrb
rclb
or
mov
sbb
mov
jbe
loope
mov
or
push
inc
sbb
fs
inc
xor
cmp
test
ret
push
add
inc
push
sub
or
or
mov
movl
fisubl
pop
clc
gs
outsl
mov
xchg
stos
inc
sbb
mov
aas
sbb
xchg
xchg
mov
out
dec
imul
aaa
lahf
outsb
adc
jns
in
test
shll
jecxz
fsubrl
fcmovnu
jecxz
sbb
xchg
mov
je
xchg
aaa
inc
movsl
adcb
push
mov
inc
rolb
inc
imul
push
imul
mov
xor
xchg
jmp
inc
and
das
rclb
jmp
mov
cs
clc
sub
inc
sub
or
mov
movsl
push
adc
push
imul
out
inc
dec
adc
and
dec
js
shrl
cmpsb
adc
pop
js
xchg
mov
stc
fists
sbb
sub
js
mov
arpl
pushf
lds
add
adc
addl
scas
test
fsubrs
mov
leave
gs
aas
bound
in
das
cmova
mov
insl
sub
cmpsl
pop
xor
ret
pop
sbb
push
dec
add
xchg
pop
in
or
or
pop
and
fstps
les
inc
xchg
imul
pop
pushf
loopne
inc
outsb
int3
cld
leave
add
jmp
xor
cld
pop
mov
insb
xchg
lret
mov
sbb
jns
jge
lcall
sub
dec
movsb
mov
add
out
cltd
in
ror
mov
mov
add
xchg
insl
cmp
mov
rclb
gs
pop
pushf
xchg
cmc
mov
cs
lret
sub
mov
scas
pop
jbe
sub
mov
and
mov
xchg
out
scas
cmp
inc
xor
inc
sub
mov
inc
subl
push
test
popf
xchg
fists
inc
nop
push
ljmp
into
test
pop
ds
push
and
sbb
jge
pop
mov
and
adc
pop
aaa
add
pop
adc
je
popf
cs
pop
dec
int
push
xchg
inc
mov
mov
sub
lock
cmc
pop
out
mull
sti
scas
nop
shrl
cmpsl
xchg
scas
sub
idivb
pop
push
inc
mov
fldlg2
xchg
mov
out
cmp
cmp
xchg
scas
das
loop
adc
fbstp
outsb
sub
lods
pop
shll
mov
and
aad
int
aad
pusha
add
and
sbb
pop
pop
sbb
mov
xor
or
lock
mov
xbegin
mov
push
push
xchg
xchg
std
dec
adcb
int
and
ret
loop
xchg
inc
test
dec
notb
out
bound
dec
mov
dec
xchg
daa
fisubl
daa
mov
les
xchg
mov
inc
leave
push
mov
sarl
mov
movq
cs
daa
mov
jnp
fistps
in
cmp
ret
leavew
in
aad
and
cmp
daa
push
mov
lods
into
mov
aas
inc
jne
inc
out
jmp
outsl
xchg
xor
mov
rcll
rclb
iret
pop
lds
cld
mov
cmp
cmp
or
lock
scas
leave
push
scas
outsb
mov
pop
daa
dec
push
mov
cmpsl
pop
adc
mov
jbe
lret
ret
mov
in
ds
loope
and
sahf
add
pop
pop
push
ret
in
and
les
ds
rcrl
xchg
int
and
mov
aas
cmc
jmp
inc
xchg
repnz
mov
inc
mov
adc
dec
cmpsl
insl
xchg
adc
cmp
enter
jns
stc
sti
clc
add
test
inc
xchg
insl
or
inc
cwtl
bnd
xchg
int
sbb
ljmp
shl
insb
dec
ds
nop
cwtl
and
out
push
nop
and
xchg
insb
outsb
int
mov
xchg
movsl
or
mov
idivb
or
mov
xlat
push
xchg
aam
add
cmpb
js
arpl
add
sahf
or
aad
pop
or
inc
ds
inc
scas
movsb
mov
loopne
int
mov
in
jl
inc
mov
add
xchg
scas
cmc
jnp
push
xchg
sbb
sarb
jge
xchg
xchg
loopne
enter
or
or
and
sarl
arpl
loop
inc
mov
bound
idiv
jo
lods
mov
jnp
mov
sahf
mov
testb
lea
add
mov
andb
dec
sarb
jno
std
fnsave
mov
xchg
cli
js
js
inc
in
aam
negb
push
out
sub
jmp
ljmp
cmp
cmc
push
jg
call
push
ds
mov
mov
aaa
adc
lret
sub
mov
mov
js
mov
stos
xchg
jge
jecxz
out
test
mov
aad
out
mov
shrl
dec
push
ret
out
pop
stos
jo
inc
or
sub
mov
dec
inc
jne
dec
cli
lods
cld
push
lods
mov
jae
jo
out
xchg
add
fdivrs
lret
aam
imul
pop
mov
mov
andl
mov
fucomip
pop
xchg
pop
movsb
sub
pop
loop
push
rorb
int
in
push
or
pop
cmp
stos
xchg
push
pop
arpl
cmp
mov
jg
mov
int3
in
into
push
push
or
inc
mov
gs
dec
adc
push
mov
je
push
xchg
int3
mov
xlat
mov
add
fs
ja
sub
shrb
jmp
adc
dec
mov
pop
adc
fiaddl
sub
in
ljmp
mov
pop
push
mov
adc
jbe
rcll
mov
inc
and
adc
popa
movsl
xchg
cltd
test
lds
jl
xchg
jne
pushf
push
repz
iret
lock
jae
pop
dec
jl
std
iret
iret
neg
das
inc
xlat
xor
js
jecxz
xchg
or
jecxz
inc
mov
rcr
xchg
jmp
xor
jne
jbe
pop
cmp
xor
and
xchg
push
pop
loop
mov
adc
push
iret
repnz
enter
repz
push
jno
in
loop
pop
adc
ror
pop
push
xchg
jecxz
add
out
xchg
ss
cmpsl
ret
ja
and
push
push
sbb
xor
out
mov
sbb
in
dec
jo
fstps
data16
cs
mov
inc
repnz
inc
xor
sub
push
mov
out
or
scas
add
ds
call
jge
aaa
adc
push
cmc
pop
xor
insl
mov
cmp
xor
cmp
adc
mov
sti
push
dec
mov
es
leave
dec
inc
pop
cmp
jge
ficoml
push
cwtl
lret
test
inc
imul
adc
cs
jecxz
sbb
lcall
nop
cmpsl
sub
xchg
mov
dec
jmp
or
iret
add
inc
loope
pop
fidivs
or
mov
push
lods
xchg
cmc
in
xlat
mov
add
xchg
hlt
xchg
mov
inc
add
fstpl
pop
addr16
ljmp
stc
inc
jg
daa
adc
mov
cld
jnp
outsl
insb
lcall
cmp
sub
mov
xchg
xorb
add
stos
arpl
mov
or
dec
add
std
sub
shrb
and
pop
sti
xchg
xchg
sub
stos
xchg
mov
add
cld
loope
dec
andl
test
aam
int3
push
xchg
sti
pusha
sbb
out
lock
push
xor
lods
dec
mov
xor
sub
mov
inc
in
cmp
dec
fiadds
xchg
dec
test
movsl
pop
cs
xchg
sbb
shl
pop
jo
fistpll
adc
lcall
mov
lods
add
cmpsl
inc
sbb
cmp
pop
xor
outsb
cmp
jnp
cld
jbe
ret
add
push
aaa
adc
scas
in
inc
pop
jbe
jno
pop
sub
insb
test
or
repnz
ret
mov
dec
push
xchg
popf
jg
xchg
pop
jbe
add
stos
clc
xor
addb
cmp
dec
dec
pop
mov
jnp
ret
jne
aad
sub
test
push
sub
jbe
int
xchg
cmp
cmp
cwtl
sbb
cli
push
cli
inc
inc
push
je
and
fiaddl
mov
or
jnp
lcall
pop
sti
loop
stos
rclb
fs
inc
mov
imul
sub
shlb
imul
push
adc
aaa
cmp
shlb
popf
jmp
add
roll
fstpl
xor
in
cld
stos
mov
pushf
outsb
stos
fwait
lret
nop
push
cmp
xor
jae
inc
fiadds
dec
sbb
pop
sub
push
dec
daa
or
sub
stos
cwtl
in
cmp
sbb
xor
adc
jbe
es
mov
adc
test
fmull
and
fs
jnp
js
cmp
hlt
sbb
fisubrs
subl
add
xchg
outsl
dec
loopne
mov
fnsave
fidivl
das
jp
sti
outsl
add
test
ret
pop
lds
sbb
mov
lock
outsl
es
pop
push
xchg
das
and
loop
insl
xor
mov
cmp
scas
adc
xchg
call
out
in
imul
andl
fwait
into
addr16
xchg
ret
sbb
jnp
dec
sub
leave
push
ret
mov
adc
scas
popf
sbb
add
dec
pop
cmc
outsl
jmp
cltd
cmp
push
mov
jmp
mov
adc
push
push
mov
adc
pushf
adc
pop
jbe
int3
movsl
push
cmpsl
stc
adc
push
jne
daa
cmpsl
popf
jne
imull
rcrl
rorl
push
push
pop
cwtl
in
call
mov
adc
sub
fimull
mov
lahf
and
movsb
xchg
jmp
cmc
dec
inc
mov
mov
out
jp
lret
mov
mov
push
mov
xchg
mov
ss
arpl
iret
pushf
jns
pop
popf
movsb
or
xlat
out
int
aad
mov
ljmp
je
imul
xchg
sahf
and
dec
dec
ljmp
dec
stos
aad
jns
in
dec
mov
orl
testl
scas
in
shr
ja
push
push
ss
mov
cmp
sbb
movsb
add
insl
xor
mov
jle
jp
jp
xchg
and
insl
add
lock
mov
cld
dec
nop
fwait
mov
mov
jb
outsb
cmp
fldcw
ret
lcall
dec
pop
sub
inc
push
lods
loope
mov
ljmp
add
jns
xchg
push
enter
cmpsl
stos
dec
xchg
fcmove
mov
pusha
scas
aad
movsb
ret
dec
enter
stc
xchg
cmpsb
push
inc
and
cmpl
cmc
push
dec
sbb
mov
push
dec
jno
sarb
insb
mov
push
rol
xor
mov
out
cmp
movsb
repnz
repz
test
insl
neg
cmp
mov
push
mov
imul
sbb
aas
je
out
aaa
test
lcall
pop
jge
pusha
sahf
mov
xor
test
fstp
loop
jg
outsb
pop
inc
addr16
push
and
and
lcall
add
mov
stc
mov
sbb
jbe
in
mov
mov
lahf
les
movsb
addr16
int
push
jnp
add
fcoms
adc
or
out
pop
mov
sahf
imul
xchg
ficoml
pop
pop
xchg
mov
loopne
orl
loop
fsubrl
xchg
popl
cmpb
xor
sub
jbe
sub
daa
mov
out
adc
dec
jge
popl
inc
lret
adc
mov
pop
pusha
pop
gs
mov
cwtl
xchg
movsl
push
pop
push
xor
pop
std
aad
sbb
lahf
dec
xchg
es
adc
imul
cmpsl
add
mov
and
mov
push
in
and
lret
mov
mov
fucomip
mov
or
sub
mov
aas
xchg
imul
insb
insb
cmp
pop
lds
xor
jno
adc
inc
gs
adc
subb
test
inc
xchg
push
lock
xor
dec
fdivr
mov
lret
scas
out
dec
rorl
addr16
jns
mov
dec
and
in
sbb
xchg
add
in
mov
jno
int
push
imul
sub
loop
test
into
mov
adc
add
jmp
adc
mov
cmp
icebp
addr16
ret
sub
jecxz
insb
mov
incl
daa
mov
pop
mov
gs
xchg
sbb
aam
xchg
scas
or
xor
fnstenv
dec
add
jl
hlt
push
test
subb
scas
or
gs
jae
dec
jmp
or
shll
adc
and
lret
dec
add
repnz
lahf
popa
out
cli
xchg
dec
fistpl
pop
sub
mov
ffreep
push
stos
sub
sbb
inc
decl
not
pop
or
adc
mov
out
and
sub
xchg
jge
and
stos
inc
jne
stos
push
lret
sarl
test
sti
into
push
xchg
addr16
dec
cs
or
popf
dec
and
sahf
sub
cmp
push
test
cwtl
pop
jp
mov
cmpb
mov
mov
lcall
lcall
mov
mov
mov
ret
or
xorl
mov
push
cmp
aam
jbe
fnsave
nop
ss
jns
shll
cs
popa
pop
ret
push
jo
push
mov
in
test
xor
add
xchg
cmp
pop
pop
mov
loope
and
loop
sti
out
stos
in
push
into
push
jmp
cli
imul
outsl
and
pop
sbb
jge
cmp
dec
test
movsb
iret
xor
or
leave
jecxz
push
in
dec
cmp
out
cmpsb
and
mov
cld
mov
add
adc
sbb
inc
loop
mov
jp
pop
mov
cmp
inc
jge
out
cwtl
or
pop
xorl
ss
adc
inc
movsl
add
xor
cmp
fistpl
sbb
hlt
jae
jnp
jo
inc
xadd
loopne
mov
or
fcmovnbe
and
sub
fdivl
mov
sub
xor
int3
mov
dec
lret
mov
in
les
int
mov
push
cmp
subl
or
xchg
rcrb
adc
das
xor
mov
add
outsl
mov
ja
icebp
adcl
test
sub
and
inc
mov
in
ja
jnp
xchg
jg
test
in
adc
inc
fs
xor
cmpsl
inc
or
xor
cmpb
jp
jbe
and
or
scas
in
fcom
scas
stos
xchg
call
sahf
mov
or
cmc
repnz
aad
inc
jecxz
pop
cmp
decb
int3
sub
jnp
test
dec
mov
sbbb
push
neg
stc
pop
das
stos
movsb
add
mov
scas
inc
lret
lcall
cli
xchg
dec
jg
xchg
or
inc
addr16
dec
js
and
add
lcall
mov
nop
mov
test
cmpsb
dec
cmp
lret
jno
mov
inc
xorl
stos
mov
movsb
mov
fsubrs
sub
mov
bound
inc
std
lcall
sub
and
mov
arpl
pop
jno
std
inc
sub
std
je
pinsrw
pushf
pusha
sbb
ja
mov
sub
fisubrs
loop
sbb
push
xor
test
jns
sahf
pop
inc
adc
scas
fwait
addb
in
stc
popa
jge
dec
jbe
shll
mov
pop
nop
loop
xor
shll
inc
fmul
repnz
out
push
lret
in
cmp
sti
sti
in
aas
movsl
in
xchg
outsl
les
sbb
mov
push
js
sbb
xchg
push
xchg
fstl
or
dec
out
and
cld
sbb
mov
std
sub
add
stc
jge
or
jge
popf
mov
shrb
or
fucomp
pop
push
jmp
jmp
add
push
add
iret
mov
iret
fs
jp
pop
mov
jns
inc
call
inc
int
and
sti
add
mov
dec
jns
or
push
leave
lahf
call
cmp
sbb
lret
into
cmp
ss
pop
xchg
daa
rorl
mov
shll
out
mov
and
ss
sbb
out
test
or
jae
xchg
xchg
adc
add
icebp
int3
push
mov
lcall
je
mov
sbb
out
inc
and
mov
xchg
or
xchg
pop
daa
push
xchg
arpl
xor
pusha
mov
mov
jo
mov
arpl
dec
cmp
mov
mov
outsb
cltd
jbe
incl
mov
add
push
mov
movsb
icebp
inc
lahf
in
andb
loope
pop
mov
inc
dec
movl
addr16
pop
sbb
mov
test
add
ret
mov
jle
push
fwait
xchg
in
sbb
jns
jb
stc
iret
push
out
push
in
add
or
test
pop
pop
mov
push
xchg
cs
pop
and
cmp
lock
mov
loope
push
pop
ds
dec
scas
and
das
shll
pushf
push
xor
out
movsl
pop
adc
xchg
sahf
movsbl
scas
mov
cmc
repz
in
push
jp
cwtl
or
mov
add
subb
mov
cwtl
sbb
push
btr
sub
xchg
lods
in
imul
sub
sub
loop
nop
inc
ficoms
testb
pop
lea
sarl
ficomps
inc
aam
daa
push
stos
sub
incb
iret
jp
pop
inc
push
aaa
ud2
ljmp
loop
or
mov
inc
es
sub
or
rcrl
sbb
movsl
stos
int3
pop
idivl
xor
sub
push
inc
and
mov
xchg
stc
dec
subl
xchg
jmp
add
fxch
push
sub
mov
jae
sbb
fsubl
out
dec
scas
movsb
sbb
fistl
pop
xchg
fsub
out
jne
icebp
jne
and
and
dec
fcompl
rorl
xchg
mov
dec
fisubrs
outsb
aam
pop
jmp
inc
iret
adc
lods
out
out
and
iret
dec
rcrl
popa
fldl
je
lods
push
or
dec
and
add
and
movsb
bound
insl
cmpb
add
dec
stos
ds
lret
sbb
cmp
ret
out
add
adc
sar
leave
fcompl
dec
movsb
pop
lds
pusha
lret
pop
inc
adc
mov
cmpsb
xorb
fidivrs
mov
sbb
rcll
jno
int3
pop
push
jge
mov
sub
sbb
ret
cmp
aaa
xor
loopne
filds
mov
adc
mov
call
jbe
xor
loop
jg
stos
iret
jg
adc
jmp
addb
fwait
sbb
pop
mov
mov
push
xchg
fisttps
arpl
loop
mov
adcb
data16
dec
arpl
sbb
out
sub
adc
dec
fildl
cs
mov
xchg
les
dec
sbbl
imul
pop
loop
stc
scas
stc
test
mov
add
mov
add
repz
cmp
ret
repz
add
popf
cmp
daa
iret
xor
cli
xchg
xchg
cltd
sbb
outsl
jge
jae
push
pop
sub
xor
mov
xchg
bound
push
sbbl
adc
in
cmpsb
push
outsb
das
imul
or
cmpsb
cs
icebp
mov
stos
jg
mov
mov
in
aas
add
ljmp
or
out
xor
push
inc
pop
sti
test
es
insl
pop
inc
ss
xlat
stos
out
out
xchg
mov
fisttpll
sbb
popf
inc
dec
inc
enter
jns
stc
iret
mov
leave
adc
loope
sbb
mov
push
jle
add
push
aad
inc
cmp
or
xchg
out
xchg
andl
orb
shll
in
adc
cmp
test
pop
jo
jnp
fidivs
lock
add
int
dec
mov
rolb
xor
leave
cs
pop
aas
cmp
dec
fisubrl
pop
add
and
push
push
dec
cld
daa
out
and
add
lock
jb
aam
add
sahf
dec
push
xor
push
mov
loopne
daa
and
push
xchg
scas
in
jecxz
mov
push
push
dec
pusha
pavgb
in
add
mov
mov
cmp
lea
push
or
push
jo
push
pop
fisttpl
dec
repnz
mov
xor
addb
pop
cmc
int3
daa
add
mov
aaa
or
adcb
sub
sub
push
sub
xchg
sbb
out
cmp
sbb
fdivrl
push
xor
cmp
mov
cmp
pop
aam
jmp
sbb
sub
in
insl
and
rcrl
ret
aas
sbb
sub
jae
dec
push
imul
xchg
jmp
jo
dec
dec
adc
clc
mov
jmp
mov
int
inc
std
lods
divl
in
aad
jle
lds
xor
xchg
or
lcall
mov
sbb
pop
fdivrl
je
cmp
cli
shl
cltd
pcmpeqb
jb
pop
inc
fs
jp
subb
movsl
cmp
les
outsb
mov
sub
lahf
add
mov
test
add
iret
sbb
jae
mov
test
inc
jp
pop
icebp
xor
push
pop
cmp
inc
ficomps
sarl
mov
dec
pusha
int3
cs
jno
sub
pop
jp
lock
ret
mov
js
loope
cwtl
inc
push
lods
test
daa
nop
out
lret
adc
movsl
adc
ja
dec
repnz
or
insb
mov
movsb
lret
mov
push
cld
aaa
mov
out
pop
lock
mov
push
and
mov
mov
lock
outsl
aaa
in
adc
pop
xor
data16
int3
jmp
add
mov
rcr
je
xchg
or
xchg
mov
mov
mov
cpuid
push
xchg
cmp
in
lea
jno
or
xchg
xchg
ljmp
jge
je
mov
in
imul
adc
jmp
arpl
cmc
mov
aaa
jno
ret
fistl
mov
stc
lret
sub
jg
std
push
dec
popa
inc
imul
mov
adc
or
outsb
pop
stos
int
xlat
cmpsb
dec
outsl
lds
adc
and
add
vpaddusb
in
mov
les
shl
sahf
mov
fwait
mov
neg
mov
enter
je
aas
push
imul
repz
test
inc
adc
xchg
inc
repnz
push
lods
dec
adcl
pop
inc
test
ret
push
mov
ror
inc
jo
lods
xchg
lea
movsl
andl
push
pop
jo
sub
inc
jnp
adc
mov
push
mov
dec
lods
push
and
and
pop
jle
mov
ss
insl
jmp
lahf
add
add
add
cs
mov
xor
adc
xlat
and
ret
or
pushf
lret
sbbb
jl
imul
push
fs
jae
pop
xchg
aaa
cmp
test
fisttpl
out
in
sub
mov
mov
fisubrs
xchg
xchg
in
insl
mov
dec
aaa
adc
push
jge
cmp
repnz
xor
or
xchg
dec
xor
sub
sti
movsl
mov
jne
inc
mov
adc
ret
add
test
lods
int3
addr16
pop
lods
clc
mov
das
sub
xchg
lcall
pop
adc
aas
xor
cmpsl
jl
pop
push
divb
mov
mov
dec
daa
pop
pop
clc
movlps
clc
mov
sbbb
andl
out
mov
mov
adc
scas
dec
cmpsl
pop
sbb
es
sub
push
mov
xchg
mov
fwait
mov
mov
lret
inc
sub
lods
dec
jae
mov
leave
mov
popf
nop
mov
mov
dec
mov
inc
jne
std
fidivrs
fisttpll
popf
mov
pop
inc
adc
fldt
roll
or
adc
decl
nop
mov
mov
std
aaa
add
push
jl
cmpsb
je
dec
mov
cli
repnz
push
and
add
mov
xchg
mov
loope
mov
mov
xchg
dec
outsl
in
push
repz
out
xchg
inc
popf
stos
sbb
lea
shlb
shl
push
lret
jns
xchg
pushf
adc
out
pop
mov
or
jg
mov
aaa
cmp
cmp
ficompl
loopne
loop
imul
mov
sarb
fs
adc
mov
subb
sti
mov
cmp
inc
pop
sbb
sahf
mov
or
xchg
sbb
push
adc
pop
mov
and
sbb
inc
lods
adc
pop
cld
jmp
out
and
loopne
sub
mov
inc
inc
cmp
fnstcw
pop
in
popa
push
jecxz
xchg
adc
js
out
jmp
jbe
or
mov
push
add
jg
dec
pop
xchg
push
lods
out
fdivl
daa
incl
stos
fisubl
pop
ret
jle
inc
jbe
jo
sbb
push
xchg
cmp
out
cmp
out
shlb
ret
hlt
cld
je
pushf
jno
cwtl
jp
pop
or
mov
fistpl
in
popf
fidivl
incb
es
leave
repz
stos
movsl
ljmp
jnp
pop
sbbl
arpl
bound
testb
inc
jne
pop
inc
leave
pop
gs
sbb
ror
sbb
inc
cmp
add
sub
pop
fwait
sbb
insb
enter
xor
push
shlb
insb
xor
js
or
in
jmp
cwtl
cmp
lock
inc
ret
outsl
sbb
jle
rcl
cmp
jle
shlb
mov
adcb
gs
push
xchg
xor
enter
ja
lcall
insb
mov
xchg
stos
jp
cli
xchg
sbb
popf
push
adc
and
cmp
pop
pop
lcall
push
push
mov
adc
sub
mov
xor
xor
insl
cmc
add
fstl
stos
mov
cmpsl
jne
sub
sti
in
outsl
dec
es
mov
cmp
adc
lods
pop
jnp
clc
or
out
push
fsubrs
in
adc
xor
cltd
std
js
pop
or
arpl
or
jno
popa
test
movsl
and
inc
lea
pop
adcb
mov
push
rcrb
dec
xchg
mov
push
push
or
mov
fiaddl
and
pop
jecxz
jecxz
xchg
jns
adc
dec
sbb
mov
iret
xor
popf
lock
jbe
lcall
xchg
inc
jp
rcrb
cli
mov
mov
pop
pop
xchg
xor
jmp
mov
lods
into
cmp
and
sub
sbb
sub
out
out
vpmullw
and
pop
pop
ret
mov
aas
das
mov
jns
mov
mov
dec
call
ljmp
out
aad
test
push
xchg
adc
lea
xchg
cltd
lds
mov
out
stc
lahf
push
add
pop
jns
mov
jno
pop
xchg
mov
hlt
rorb
in
xlat
mov
jae
shll
adc
adc
out
dec
cmp
and
test
daa
jge
movsl
loop
cmc
add
dec
out
pusha
sub
push
aad
leave
hlt
mov
xor
xorb
jle
mov
mov
mov
jnp
sbb
mov
pop
and
xchg
sti
iret
lret
les
cmpsb
out
jae
mov
cld
sbbb
cli
test
cmpsb
jg
sub
outsl
cli
add
mov
insl
dec
outsl
mov
or
sbb
mov
fisubrl
and
mov
jne
leave
xor
cwtl
xor
and
mov
cwtl
push
lea
cltd
sub
call
mov
pushf
pop
inc
jbe
pusha
mov
inc
dec
iret
inc
lcall
lcall
sub
push
mov
dec
adc
cmpsb
mov
push
jl
push
mov
cwtl
int3
cmp
sub
dec
mov
imul
cmpsl
fistpll
stos
out
movaps
js
mov
push
dec
ljmp
adc
jae
jne
rcr
mov
mov
cs
cli
loope
adc
mov
lret
out
dec
in
test
and
cmp
jnp
cltd
loop
mov
insl
pop
inc
enter
and
ja
xchg
ficomps
cmp
mulb
ret
xchg
in
sub
mov
pop
dec
mov
lret
and
aas
sbbl
dec
mov
jns
cmpsl
and
data16
push
push
xor
push
add
add
sbb
ret
ficomps
jmp
jmp
sub
sti
insl
scas
stos
imul
mov
test
adc
push
rcl
jns
cmp
sub
mov
pop
add
sub
cmp
negl
in
and
dec
inc
dec
mov
or
or
jg
jbe
jo
xchg
out
cmc
jns
ficoml
sti
into
jl
mov
mov
insb
mov
in
les
ja
cmpsl
jg
jbe
mov
xchg
adc
mov
push
lods
outsb
ret
ret
pop
std
cmp
xor
or
inc
cltd
leave
inc
mov
jg
push
pop
test
jne
cmp
cmp
fwait
pop
xchg
inc
pusha
xorl
xlat
inc
jnp
mov
js
and
mov
or
mov
out
xchg
mov
jle
jne
out
sbb
shll
jle
icebp
mov
or
xchg
std
imul
xchg
mov
nop
mov
push
icebp
int
in
imul
xchg
push
pop
daa
sbb
fisubrs
fadds
lods
mov
fisttpll
adc
cmpsl
or
aad
adc
test
daa
dec
das
sbb
movntq
fst
cmc
rolb
jp
rol
fisubs
adc
inc
sbb
jmp
lcall
sbb
out
scas
popa
sbb
sbb
mov
scas
js
cmpl
mov
int3
mov
hlt
mov
push
cltd
mov
je
stc
sbb
scas
loope
loop
iret
mov
xchg
mov
sbb
mov
or
sub
shl
sbb
sbb
dec
insb
into
cmp
push
fcoms
push
inc
xchg
movsb
xor
sub
es
popa
sub
jns
and
add
out
iret
fwait
sub
nop
fs
aaa
loope
inc
xchg
fidivl
bound
es
and
rorb
in
imul
int3
mov
ficoms
add
xor
push
mov
data16
and
fcoml
stos
sarl
and
xor
add
sub
popa
mov
into
adc
pop
lods
xchg
fisubl
scas
push
negl
lock
inc
mov
mov
sbb
inc
cmp
push
add
stos
fwait
adc
or
stos
test
insb
les
jl
mov
sub
and
or
iret
dec
stc
sub
sti
jg
xchg
testb
or
jl
ja
inc
scas
addr16
fmuls
test
adc
loope
jl
jnp
xchg
clc
cltd
push
repnz
mov
scas
gs
loop
ret
dec
popf
leave
cmp
loopne
jmp
sub
mov
fistpll
shrl
shr
push
shr
xchg
rolb
imul
cltd
sbb
lods
test
fimuls
mov
das
cltd
push
inc
add
dec
js
gs
sub
jecxz
sub
push
out
fldl2t
cmp
xlat
cmpb
mov
rclb
fmull
and
jl
mov
packuswb
cmp
loopne
sbb
ficomps
cmp
or
mov
pop
dec
lcall
sbb
in
incb
xor
push
inc
cltd
jmp
push
pop
loope
push
fldl
jnp
fadds
data16
add
daa
js
push
scas
xor
rcl
add
push
enter
rclb
lcall
out
pop
out
sub
mov
mov
dec
cmp
ja
addr16
jg
das
imul
mov
jae
mov
imul
push
cmp
daa
dec
das
pop
ljmp
sbb
adc
xchg
add
mov
sbb
jecxz
loopne
lret
rcrb
ret
mov
mov
fs
iret
sub
aas
sbb
insb
mov
idivl
sbb
sti
fisttps
shl
mov
icebp
lods
push
and
in
ret
rclb
sub
cmc
shll
inc
push
or
in
or
loope
cmpsb
mov
add
rolb
faddl
cli
dec
mov
pop
lods
inc
jb
test
push
jae
inc
jns
in
push
cltd
dec
pop
mov
mov
pop
xchg
arpl
jb
xchg
nop
mov
xchg
pop
dec
enter
out
adc
insl
cmc
jle
adc
daa
inc
mov
sub
je
and
and
pop
mov
pop
sub
call
or
imul
push
out
adc
ret
pushf
or
inc
in
pop
xlat
nop
ficompl
push
sub
adc
ds
sub
push
xor
call
call
jmp
inc
and
inc
mov
js
xchg
or
call
jmp
rcl
jo
mov
fs
xchg
mulb
insb
mov
xchg
shll
lods
sbb
mov
adc
inc
cltd
pop
pop
xchg
push
testb
leave
mov
push
mov
dec
lcall
aaa
mov
lahf
and
rol
scas
xor
lods
scas
and
lahf
cwtl
sbb
cmp
xlat
sub
mov
pop
in
test
push
xchg
and
loope
cmp
inc
mov
jmp
jmp
ljmp
pop
popl
movsb
les
cmpsb
cmpsl
xor
dec
mov
mov
jge
es
cmp
cmp
mov
mov
cmc
sbb
scas
into
push
jbe
cmp
or
mov
mov
das
xchg
bound
int
add
ffree
adc
test
jl
inc
xchg
bound
movsb
and
adc
jge
xlat
pop
push
push
lock
aas
sub
js
lea
push
xorl
inc
sub
adc
fs
inc
inc
pop
push
dec
enter
inc
or
pop
add
scas
xchg
in
xchg
push
push
xchg
or
mov
xchg
dec
mov
rorb
das
mov
mov
cmp
or
jae
jbe
ret
repnz
cwtl
out
cmp
and
cs
in
and
mov
sbb
dec
pop
jp
leave
test
jns
push
jg
fcomps
dec
dec
sub
lret
js
lahf
adc
push
jns
loopne
out
ror
push
dec
dec
cltd
push
daa
mov
aam
sub
into
inc
add
dec
adc
pop
pop
sub
sub
adcl
lea
jg
jge
xchg
sbb
rcl
fwait
mov
fmuls
test
dec
fdivrl
inc
adc
inc
icebp
sbb
lods
aas
loopne
push
testl
shll
push
push
pop
fs
mov
mov
sbb
or
fldcw
mov
xchg
mov
dec
shl
jp
stc
mov
mov
leave
push
lds
fwait
pop
int3
out
rorl
push
sbb
sub
addl
sub
idiv
jne
rorl
aaa
btc
xor
jp
push
out
mov
popf
shl
outsl
insl
push
pop
repz
jl
adc
aam
mov
mov
jns
mov
mov
adc
fidivl
xlat
sbb
insl
push
popa
sub
popa
mov
lods
sbb
icebp
mov
pop
and
mov
scas
dec
les
sub
scas
pop
and
mov
mov
jb
jbe
ret
and
inc
adc
bound
xor
push
cmp
pop
in
jge
cmp
fmulp
std
shl
pusha
scas
gs
nop
fidivl
xchg
les
add
or
sub
sbb
push
mulb
negb
pop
sub
ret
aad
add
pushf
push
loop
mov
pop
mov
mov
cli
or
push
scas
ljmp
xorl
fs
aas
hlt
adc
enterw
xlat
clc
pop
jo
scas
cmp
inc
popf
mov
or
inc
imul
inc
push
stc
sbb
and
ret
mov
loope
or
and
mov
mov
mov
xchg
push
and
xchg
push
jmp
frstor
int
inc
mov
pop
les
lret
dec
iret
ret
cmpsl
xor
xor
addr16
lahf
jne
push
aam
or
pop
xchg
mov
lods
cmp
dec
sub
test
andl
int
push
xlat
sub
imul
mov
inc
jecxz
shrl
jbe
and
insl
xchg
jne
mov
sbbl
jg
xor
rorl
or
repnz
push
aas
xorb
je
adc
mov
and
push
daa
mov
popa
inc
cmpsl
shlb
lret
fistps
mov
sub
mov
test
xor
insb
mov
ret
scas
clc
inc
sbb
dec
xor
in
jb
adc
inc
mov
ficomps
adc
orl
cld
int
fs
dec
hlt
sahf
addl
orl
ficompl
push
jno
arpl
jns
add
sub
or
add
xchg
imul
cmp
sarl
sub
pop
jnp
stos
sub
ss
repnz
clc
mov
repz
flds
imul
jbe
or
and
les
rcll
jecxz
sbb
insl
test
in
das
mov
sti
js
push
xchg
loop
fwait
and
out
mov
push
rcll
mov
jg
push
ds
mov
dec
sub
push
std
je
mov
sbb
sar
std
sub
mov
adcb
add
adc
bound
in
fsts
jbe
addb
dec
icebp
sbb
mov
dec
repnz
mov
fists
or
out
rcrb
and
cmp
leave
lcall
out
xchg
mov
das
stc
or
add
sub
daa
mov
mov
decb
lods
sbb
jp
js
test
movsl
jnp
or
adcl
sbb
in
jp
in
cmp
ds
loopne
jbe
pop
push
out
mov
lret
push
jecxz
add
mov
sbb
es
xor
push
or
or
inc
in
xchg
xlat
in
mov
xchg
hlt
sbb
adc
xorl
cmp
int
mov
test
jnp
negl
les
fisubl
lock
outsl
fs
lock
push
cli
dec
sbb
lea
cwtl
mov
test
mull
lea
add
jp
pop
dec
xor
sub
ljmp
cmp
sbb
or
iret
aad
or
mov
jne
lret
adc
in
xchg
loop
gs
imul
lods
js
mov
scas
push
mov
pcmpgtw
xchg
pop
xchg
loope
xchg
aaa
cltd
fnstcw
cwtl
mov
pop
cmp
mov
clc
xchg
pop
push
cmp
mov
int
mov
bound
sbb
inc
pop
jmp
mov
into
mov
push
test
mov
insb
out
jns,pt
mov
inc
imull
or
mov
icebp
dec
and
ffreep
push
ficomps
sti
sub
xchg
mov
cmp
int
rcll
scas
lods
insl
push
into
or
jae
hlt
js
pushf
cld
fmul
mov
mov
std
mov
or
movsb
push
pop
jmp
ret
push
inc
or
lahf
pop
mov
add
insl
xor
lea
adc
mov
imul
repnz
add
shr
into
daa
dec
ljmp
mov
gs
call
jne
push
in
fcompl
flds
pop
movsb
xor
push
cli
stc
loope
pop
mov
in
mov
lods
ret
cltd
fcomps
cmp
and
sub
lret
lcall
cmp
fcom
xor
mov
and
lret
jl
mov
adc
mov
pop
rolb
and
cs
nop
sbb
insl
stc
push
repnz
sbb
mov
ret
mov
daa
cmp
jne
cmc
jecxz
fsubrl
aam
ljmp
orb
add
adc
ss
out
pop
ret
enter
scas
lcall
les
xchg
or
addl
dec
movsl
jbe
pop
in
mov
and
in
push
scas
int3
xchg
jl
fdivrs
pop
scas
mov
sbb
rcl
dec
and
xor
and
or
sub
adc
jns
mov
mov
adc
rcr
or
pushf
sbb
cwtl
xor
push
rclb
loopne
repz
mov
jbe
mov
xor
repz
xchg
cwtl
fwait
mov
mov
call
ror
sub
out
add
xor
lds
lahf
addr16
ljmp
cmpsl
out
pushf
inc
outsb
cs
push
mov
flds
or
pop
xor
mov
mov
dec
mov
lea
or
addr16
inc
call
fcmovu
test
into
jne
js
scas
hlt
arpl
jnp
xor
imul
ja
mov
mov
sub
insl
scas
nop
sbb
leave
mov
call
jp
lcall
jb
stc
in
arpl
dec
lahf
or
hlt
aam
xchg
jb
cltd
sub
pop
mov
rorl
jns
int
hlt
arpl
lahf
daa
lods
les
mov
dec
jb
outsl
js
adc
mov
pop
out
fwait
xchg
mov
cli
cmpsl
sbb
pop
imul
adc
iret
ret
mov
mov
and
popf
adc
adc
loope
repnz
xorb
dec
repnz
push
sbb
enter
scas
pop
cltd
pop
int
pop
fwait
call
mov
jnp
lcall
push
cmc
and
jge
add
aam
in
mov
clc
lea
imul
xor
cmp
jecxz
inc
cwtl
shll
push
repnz
and
adc
xor
fiadds
cmpsl
push
mov
jae
dec
push
mov
adc
int
sbb
sbb
inc
dec
adc
lret
loopne
push
cmp
push
push
fwait
nop
les
pushf
mov
data16
stos
or
fidivs
pop
aaa
pop
fisubrl
imul
xor
push
jno
or
jp
in
test
adc
in
and
push
cmp
pop
mov
jg
test
xor
inc
lret
loop
adc
xchg
inc
jg
movsb
and
popa
and
in
idivb
outsb
cmp
repz
in
mov
lahf
shlb
notl
repz
daa
bound
push
mov
daa
jns,pn
mov
loop
inc
mov
aad
aam
cwtl
xor
into
xchg
inc
and
add
roll
in
inc
mov
lahf
dec
loop
icebp
notb
pop
sbb
aas
cmp
xor
aas
out
orb
adc
sbb
scas
testb
pop
and
cmp
call
mov
jl
jge
xchg
mov
xchg
and
inc
lcall
xor
shl
das
sub
cs
xchg
hlt
ror
xchg
cmp
ja
hlt
lret
xchg
pop
push
push
mov
pop
jne
mov
daa
or
cwtl
ljmp
mov
and
xchg
mov
aaa
shrl
and
sahf
mov
dec
mov
xchg
xchg
push
outsl
imul
mov
sbb
and
push
std
mov
shl
sti
adc
or
xor
xor
sbb
or
ret
inc
or
testl
addl
jg
or
js
sub
jae
xlat
xor
int3
pop
idivl
push
inc
orb
cmp
mov
enter
pop
dec
xor
loop
out
out
loopne
loopne
push
ss
push
mov
pop
pop
mov
xchg
jno
add
lods
jnp
adc
jo
mov
add
dec
inc
mov
and
in
and
andb
out
mov
jle
xor
mov
flds
xchg
jge
fimuls
fdivr
insl
dec
push
jl
out
xor
jno
lock
mov
xchg
pop
popw
adc
mov
daa
xchg
sub
js
xlat
inc
xchg
sbb
cmp
mov
enter
lods
sti
aad
mov
lahf
sbb
mov
push
cmpsb
push
mov
or
or
push
pop
popa
xchg
or
adc
int
mov
cmc
inc
mov
movb
aad
shll
adc
cmpsb
adc
jg
mov
jge
sti
sub
push
in
cmp
dec
add
cmp
pop
fwait
aas
fdivrl
lock
test
inc
aad
or
test
icebp
inc
imul
rolb
je
jo
push
js
js
js
mov
subl
jae
bound
mov
into
pop
xor
cmp
jecxz
add
or
insb
and
xchg
dec
pusha
xchg
mov
popa
add
test
mov
das
icebp
out
and
push
shrl
xchg
mov
cmp
movsb
stos
push
loope
mov
or
insl
push
fnsave
adc
aas
add
add
pop
mov
xlat
mov
adc
inc
mov
pop
mov
push
lock
ds
xchg
push
xchg
xchg
mov
jns
mov
or
stos
lea
out
cmc
cmp
add
mov
pop
clc
insl
nop
mov
xchg
bound
adc
push
push
loop
jmp
mov
dec
ret
aam
xchg
push
movsl
xor
xor
cmc
addr16
mov
sbb
sub
adc
js
pop
inc
push
je
and
rcrl
mov
push
lods
ja
sbb
cmp
test
add
push
sbb
sub
pop
cmc
dec
sbb
aas
bound
xchg
push
dec
sbb
cmp
push
push
sbb
mov
dec
nop
push
mov
and
add
xor
dec
sub
pop
sbb
rorl
sbb
adc
outsl
cmp
jmp
mov
add
jp
cmp
jo
or
inc
adc
mulb
mov
push
ffreep
xchg
and
mov
pop
sbb
fs
ret
ss
shll
aad
repnz
dec
pop
dec
mov
cs
jb
jmp
jp
xor
mov
mov
adc
fiaddl
dec
movsb
and
popf
add
jge
push
sub
mov
rolb
out
test
xlat
movsl
jmp
bound
scas
mov
imul
xchg
sbbl
mov
lahf
jle
mov
lds
roll
add
cltd
mov
xchg
mov
mov
insl
xchg
xchg
pop
aaa
sti
dec
sbb
mov
push
mov
xchg
out
dec
loope
mov
fucomi
mov
pop
mov
dec
lods
and
mov
test
jmp
je
lock
xchg
jo
jns
out
jnp
jmp
fmul
pop
in
fidivl
pop
iret
iret
les
dec
cld
add
pop
fadds
cld
xchg
mov
insb
inc
push
fimuls
inc
sbb
lcall
test
dec
jp
adc
call
dec
divl
mov
hlt
mov
ljmp
insl
cmp
scas
cmp
or
mov
out
adc
sahf
inc
dec
test
movsb
icebp
daa
add
ror
mov
repnz
sub
mov
or
xor
mov
xor
push
inc
lret
test
cmp
pop
and
jle
inc
lods
ret
in
pop
stc
xor
loop
add
pop
xchg
lahf
ja
pop
adc
stc
call
dec
dec
pop
test
adc
or
bound
nop
fmull
mov
sahf
sti
jnp
les
in
cli
lret
je
mov
lahf
inc
inc
jp
sub
iret
bound
call
and
std
lods
pusha
mov
push
push
xor
push
dec
outsb
dec
mov
lods
adc
subb
js
add
push
mov
cmp
testl
lret
sbb
add
pusha
and
int3
inc
add
push
cmp
outsb
mov
pop
pop
mov
xchg
cmp
mov
mov
scas
push
clc
subb
adc
sub
mov
mov
into
add
fstl
xchg
aad
insl
test
dec
or
js
test
mul
mov
pop
push
add
int3
lods
stos
cwtl
lods
inc
repz
subl
mulb
outsb
jnp
shlb
loopne
mov
ja
inc
mov
inc
mov
scas
or
mov
mov
out
out
scas
movsb
shlb
js
mov
push
or
into
enter
pushf
loopew
add
or
nop
sub
jne
loope
inc
call
dec
pop
cmpsl
xorl
mov
jo
std
stos
mov
lds
jp
sbbl
mov
xor
xor
xchg
adc
pusha
mov
outsb
mov
icebp
in
pop
adc
dec
cli
pop
sbb
pop
popf
outsl
je
lea
xchg
push
adc
jmp
roll
lret
xor
jno
cli
add
and
inc
jmp
std
xor
pusha
in
aam
xor
int3
cltd
popf
mov
aad
pop
cmp
jno
inc
cmc
xchg
sbb
test
stos
fcomps
cltd
enter
fwait
jle
mov
and
mov
or
stos
mov
cmpsl
lods
mul
ffree
xchg
mov
flds
and
imul
test
cmc
sti
sbb
jns
fisttps
paddd
push
and
xchg
mov
push
scas
rcll
adcl
lea
mov
dec
add
in
or
and
inc
mov
aaa
mov
sarl
cwtl
iret
mov
mov
pop
add
ffree
mov
mov
pop
pushf
pop
sub
test
mov
icebp
aad
hlt
les
fwait
sub
xor
loope
imul
inc
pop
or
xchg
jns
cwtl
xor
insl
xchg
fwait
push
jl
psadbw
fsubr
dec
int
mov
movsb
pushf
movsb
pop
jg
fsubr
add
sti
gs
mov
mov
add
cwtl
jmp
pop
popf
ja
xchg
out
xchg
in
sub
fsubs
shrl
lea
fisubl
sub
sub
bound
cmp
loop
cmc
mov
mov
sbb
pop
arpl
xor
jnp
cmpsl
pop
daa
nop
and
scas
shrl
je
sbb
mov
push
insb
push
sbb
lods
or
ret
lds
mov
ja
shl
cmp
repz
add
fistps
jne
push
cltd
test
xor
inc
xchg
lcall
insl
inc
cmp
ss
inc
jo
frstor
xchg
popl
lods
rcl
mov
inc
pop
push
into
movsl
dec
xor
imulb
cmp
scas
mov
outsl
xor
leave
push
and
pop
nop
ficoms
pop
pop
xchg
in
lea
outsl
sbb
test
rclb
hlt
mov
shrl
leave
adc
fmull
out
add
jb
imul
adc
pop
jg
xchg
mov
sbb
inc
inc
push
lds
dec
cltd
ss
mov
push
adc
pop
stos
mov
adc
inc
sbb
aad
push
in
cmp
ret
movsl
jmp
pushf
pop
lret
dec
rorb
inc
jmp
bound
mov
adc
sbb
daa
shrb
fisttpll
test
push
and
adc
adc
out
ss
aas
outsl
sbb
inc
addr16
fldcw
push
sub
sbb
xor
xor
insb
addr16
in
jo
cmpsb
lock
pop
in
ret
ss
fstpl
loope
cmp
in
ss
ljmp
cli
insb
andl
call
lods
inc
f2xm1
aam
lock
shl
sub
movsb
mov
or
lds
push
xchg
push
pop
inc
cmp
test
xchg
lds
out
pusha
movsb
sub
sahf
popa
push
fisttpl
or
jl
xor
jg
sbb
pusha
jno
jo
jle
xchg
mov
lock
std
mov
into
orb
push
inc
mov
sar
cmpsb
xor
in
popf
pop
dec
mov
jle
add
push
push
imul
pop
sbb
mov
cmp
into
mov
and
out
or
mov
add
pusha
dec
pop
inc
adc
ror
dec
mov
loopne
ror
mov
xchg
push
mov
adc
adc
in
ficomps
inc
adc
call
push
jmp
fisubl
pop
dec
inc
sbbl
loope
sti
mov
fistl
dec
jb
add
push
push
sub
jae
fs
or
push
outsb
addb
das
fwait
test
mov
jecxz
jne
add
jns
adc
fwait
ss
mov
dec
loop
jmp
dec
cld
out
out
aad
push
loope
add
mov
negb
and
mov
adc
dec
ljmp
arpl
cmpsb
or
push
fsubr
adc
movsb
sub
clc
mov
mov
hlt
lret
cmp
cmpb
and
mulb
lret
cmp
stos
jecxz
jb
enter
int3
aaa
inc
int
xor
push
mov
and
sti
and
mov
mov
aas
sub
jp
and
dec
or
imul
jo
fidivl
add
mov
in
fisttpll
bound
mov
jmp
inc
mov
mov
lcall
nop
in
or
inc
pop
sbb
xchg
test
or
xor
fbld
cltd
nop
fsubrp
ror
out
cmp
pop
adc
pop
push
inc
int
and
push
jmp
call
adc
pusha
lret
and
sbbb
es
hlt
cli
and
lods
add
xor
outsb
clc
lcall
mov
xchg
test
ds
xchg
add
cmc
sahf
adc
lret
mov
jo
js
xor
mov
lock
decl
fsubs
arpl
nop
popf
pop
scas
inc
jne
and
adc
xchg
dec
dec
imulb
mov
pop
adc
lods
ss
call
dec
add
lods
dec
or
push
pop
add
lret
pushf
sar
test
sahf
pop
jns
sub
subl
jno
jp
daa
adc
pop
cld
mov
add
xor
decl
andb
add
rcrl
xchg
push
or
push
cs
dec
pusha
outsb
mov
sub
push
sbb
movsl
in
pop
pushf
gs
mov
pop
jns
jp
es
sub
push
push
out
pop
push
jae
adc
dec
push
fimuls
cli
mov
inc
adc
cltd
and
iret
mov
add
sbb
xchg
mov
inc
mov
hlt
xor
cmp
mov
addr16
mov
loop
popa
add
xchg
imul
xor
dec
cmpsb
and
daa
pop
outsl
hlt
mov
pop
push
mov
jp
in
mov
jo
fisubs
in
sub
or
add
add
int
in
pop
scas
popf
add
mov
frstor
adc
sbb
xchg
xchg
movsb
pop
dec
repz
sahf
add
and
cwtl
jae
fimuls
clc
lea
cmp
and
xor
popf
lods
cmp
push
popa
pop
loope
test
aam
arpl
xchg
dec
ror
or
cld
fucompp
into
fimuls
push
xchg
data16
and
or
fsubp
icebp
xchg
cmp
mov
rorb
shlb
js
mov
xchg
hlt
jnp
lods
xor
imul
bound
mov
imul
jae
daa
jge
mov
cmp
dec
add
fiadds
dec
xchg
push
push
push
mov
and
subl
jmp
jae
mov
ss
cmc
lea
mov
jnp
cli
gs
aam
ja
push
push
pop
mov
or
mov
iret
addr16
pushf
xor
pusha
xor
mov
aas
lds
scas
in
mov
daa
cmp
pop
xor
jns
nop
fistpll
imul
push
pop
out
xchg
jb
mov
pop
push
cmp
fdivrs
int3
sti
daa
sbb
mov
dec
pop
sar
aas
sar
cs
and
mov
xchg
or
pop
js
lcall
aas
mov
add
cld
in
fiaddl
stos
mov
adc
es
loope
adc
push
repnz
into
push
repnz
sbb
jge
jne
ret
or
int3
divb
aam
int
addb
cmp
repnz
and
push
cmpsb
xchg
loop
lahf
outsl
pop
push
bound
gs
mov
movsl
loop
aas
cmp
movsb
sub
push
mov
imul
adcb
aad
into
sahf
xchg
shlb
lret
addl
mov
repnz
lcall
fnsave
aam
movsl
pusha
shr
aad
repnz
and
xor
xchg
cmpsb
jb
testb
insl
mov
and
pop
adc
fistps
jge
push
inc
out
mov
adc
mov
adc
fwait
add
push
repz
cmp
adc
jecxz
dec
mov
out
shr
scas
dec
mov
fcmovnbe
icebp
dec
pop
xor
jecxz
adc
stos
sar
inc
mov
call
pop
or
sub
sub
popa
mov
fmull
std
loopne
jl
ret
lcall
pop
sub
mov
jo
push
in
jmp
push
jecxz
repz
sub
jae
mov
cld
push
pop
test
mov
pop
test
sbb
inc
fistps
inc
nop
xor
cltd
inc
dec
dec
or
sbb
jb
enter
stos
ljmp
push
inc
xor
popa
mov
mov
or
aam
repz
mov
push
push
in
or
adc
into
pop
hlt
sbb
push
push
mov
outsb
push
xor
lahf
lret
out
das
insb
or
or
and
scas
mov
imul
leave
dec
mov
jne
inc
jg
mov
repnz
ss
pop
jb
pop
rcrl
xchg
sbb
cmpsl
dec
xchg
fucom
and
xor
outsb
in
out
xor
test
gs
jns
xor
inc
sbb
rclb
pushf
pop
stos
or
cmpsl
lcall
dec
push
in
fildll
int3
cwtl
test
sahf
aad
adcl
cmpsl
imul
xchg
stos
ja
ret
jns
adc
and
test
and
shll
fidivs
sbb
loope
sbb
leave
cli
cwtl
enter
ret
sarb
mov
mov
loope
mov
stos
add
and
or
dec
inc
jge
das
fadds
mov
adc
sub
push
daa
mov
mov
loope
dec
xor
mov
cs
cmp
xchg
fidivrl
call
add
ret
dec
inc
jge
xor
mov
jns
cmpsl
leave
dec
pop
cmp
sbb
imul
push
pop
jae
leave
pop
cltd
out
fidivrl
add
inc
aad
dec
lcall
bound
mov
push
mov
std
les
lods
lods
stos
sbb
adc
add
ror
push
sub
push
in
push
lods
mov
xlat
mov
mov
mov
std
jmp
xchg
and
je
pop
jl
dec
push
stos
lock
divl
ret
mov
inc
aam
inc
pop
dec
xlat
outsl
insl
sbb
fwait
ja
arpl
adc
mov
xchg
sub
sar
mov
in
xchg
test
cmp
xor
mov
push
pop
jno
push
je
dec
inc
int3
jno
add
divl
sub
or
xor
out
cmp
arpl
mov
adc
pusha
pop
push
pusha
xchg
jmp
adc
sbb
xchg
pop
push
mov
insb
fwait
cmp
imulb
adc
movsb
sbb
push
popa
or
mov
dec
cmp
mov
in
cli
push
psllq
sti
lret
dec
xchg
dec
sub
cmp
mov
sub
cmc
or
inc
push
aaa
inc
mov
xchg
jno
in
ljmp
ds
or
mov
add
pop
lock
and
add
xor
jns
sub
adc
push
and
jno
xchg
mov
push
out
push
mov
jecxz
xchg
mov
cs
in
mov
jo
and
pop
cwtl
mov
imul
add
mov
xchg
stc
adc
dec
cmpb
mov
mov
cltd
lahf
leave
or
repnz
aad
push
xchg
sbb
push
add
or
out
add
add
ss
dec
mov
cmp
std
inc
add
sub
push
lods
test
and
add
jnp
gs
push
mull
out
pusha
or
push
mov
mov
mov
fcompl
cmp
inc
mov
mov
out
xchg
pop
mov
fnstcw
sub
ret
filds
nop
das
sbb
loope
push
xor
xchg
stos
push
mov
mov
xor
aaa
sarl
jge
or
pop
ficoml
xor
aas
push
push
out
movsb
mov
sub
test
inc
mov
cmp
mov
push
adc
xchg
xchg
sbb
popa
push
jecxz
mov
sub
sahf
outsl
inc
fcoml
pop
insb
jg
xchg
add
mov
mov
in
add
inc
sti
jl
stc
sbb
lea
test
jg
jo
sar
pop
ds
pop
xchg
sbb
adc
mov
mov
or
and
inc
and
adc
mov
mov
cmp
ja
mov
arpl
hlt
jmp
int
in
mov
insl
cmpsl
xchg
das
push
outsl
pop
add
into
xchg
sbb
movsb
sbb
in
mov
mov
pop
and
imul
cmpsb
into
scas
ja
inc
jg,pt
push
test
cmp
dec
dec
mov
or
decb
fld
ljmp
es
dec
out
movsl
pop
push
outsl
ljmp
leave
inc
fwait
xor
jmp
loopne
sarl
fdivrp
dec
cmp
insb
push
pop
jmp
dec
mov
pop
ret
repnz
cmp
sahf
js
dec
xor
les
jg
push
jmp
rolb
mov
ror
les
rcrl
pop
je
xchg
les
lock
cmp
mov
sub
cmp
lahf
aam
xchg
sahf
mov
lahf
pop
xor
pop
push
repz
or
inc
mov
movzbl
or
and
cmp
pop
xor
movsl
sbb
jle
add
shll
mov
inc
outsl
out
mov
jp
jl
dec
out
adc
lds
mov
jnp
inc
add
insl
daa
jne
add
pop
or
int3
mov
adc
dec
ss
popf
cmpl
mov
movsl
sub
mov
push
fsts
movsb
cld
jbe
jg
lea
call
mov
scas
je
mov
mov
xchg
dec
sti
and
incb
add
mov
imul
ret
mov
sub
paddw
jecxz
lahf
daa
mov
xor
insl
sbb
push
pop
adc
rcl
loope
leave
idiv
ret
push
arpl
or
test
test
sub
mov
add
push
in
je
mov
cmc
push
dec
pop
sahf
out
notb
sbb
push
mov
dec
pop
arpl
jge
roll
bound
sarl
dec
push
das
repz
scas
sbb
fwait
adc
push
insl
add
repnz
mov
ljmp
test
xor
cld
scas
jne
cwtl
mov
jp
mov
or
pop
adc
outsl
and
or
pop
jg
sahf
xchg
push
into
lcall
jmp
test
insb
push
xor
das
stos
fiadds
rolb
call
inc
dec
nop
jno
stc
movsl
jo
pop
popf
mov
push
lods
shlb
rcrl
and
hlt
mov
inc
ret
xchg
leave
cmc
xchg
xchg
add
mov
sub
mov
es
cld
dec
sbbb
adc
mov
into
and
cmp
or
pop
fs
sahf
hlt
add
shll
sub
cld
and
rcl
jp
sti
add
and
out
shlb
cwtl
mov
sub
fidivl
fistps
cmpsb
push
flds
jecxz
sub
jo
inc
push
add
jns
neg
cmp
sqrtps
out
in
xchg
mov
xlat
iret
pop
sahf
in
adc
jg
mov
adc
icebp
sub
xchg
add
push
adc
lock
test
mov
cmpsb
loopne
jne
and
fsub
iret
outsw
dec
popf
pop
das
in
lret
sub
push
cwtl
sar
and
mov
ljmp
or
aam
pop
ss
test
lcall
cmp
out
nop
jmp
out
stc
cld
jg
pop
lret
mov
sahf
sub
cli
lds
mov
mov
inc
add
sub
pop
cmc
jg
negl
repz
adc
aaa
cmpsl
mov
push
ret
xor
shlb
pop
popf
loop
into
pop
pop
rorb
dec
fwait
sahf
sub
add
mov
add
ds
xchg
xor
sbb
push
popa
popf
insl
les
mov
pusha
rclb
xchg
sbb
movsb
in
mov
push
and
mov
shl
in
pusha
es
inc
sub
and
cwtl
jle
dec
pop
adc
push
mov
movsb
sti
mov
jbe
adc
fsubs
pop
iret
psrlw
sti
push
stc
mov
inc
mov
push
into
in
outsl
shl
sbb
jecxz
and
in
les
imul
imul
xlat
xor
adc
xchg
xchg
pop
push
dec
mov
faddl
sbb
mov
les
mov
scas
rcll
and
cmp
pop
or
sbb
mov
in
rcrl
adc
sub
lret
int3
nop
dec
fcompl
fwait
push
gs
cmp
ljmp
lret
inc
pusha
adcb
jns
adc
lds
inc
dec
leave
loopne
repz
adc
jmp
imul
nop
adc
mov
mov
push
sub
pop
mov
push
mov
sub
fcomi
jnp
mov
dec
xchg
push
loopne
mov
test
mov
fdivs
pop
fmull
fisttpll
jns
pushf
call
pop
or
pop
enter
and
mov
in
ret
pop
gs
add
mov
ss
fsts
sarl
jb
sub
sbb
shll
sub
mov
orb
fcmovnbe
jg
push
inc
addr16
xchg
cmp
inc
shll
loopne
or
int
push
lea
subb
xchg
repnz
out
jbe
push
fs
mov
enter
push
outsl
sbb
cld
shrl
repz
cld
hlt
dec
pop
loope
add
ds
cvtpi2ps
bound
fs
mov
js
outsb
fisubrs
movsb
dec
jmp
mov
xor
and
and
jp
xorl
jae
std
mov
push
loop
dec
ja
test
les
push
pop
jl
imul
and
cmp
lret
xor
lock
outsb
mov
mov
add
mov
lcall
movups
sbb
and
jo
sahf
stos
sbb
ret
loopne
pop
push
lds
cmpsl
sub
cmp
inc
or
jmp
add
xor
xchg
mov
jl
xor
sbb
data16
xchg
lea
jle
jle
jns
or
in
inc
aaa
mov
push
call
pop
lods
push
adc
test
arpl
pop
pop
push
jl
cs
cmp
xorb
cmp
lret
repnz
dec
scas
in
out
dec
sarl
adc
cld
loope
mov
sub
jo
sbb
adcl
pop
test
pop
mov
mov
adcb
test
jg
or
xor
iret
jnp
push
push
pop
mov
imul
dec
push
push
inc
inc
and
adc
mov
jns
lods
mov
pop
js
fildll
cmp
loopne
mov
mov
mov
nop
jne
addl
sub
lret
dec
arpl
in
sub
and
add
cmp
pushf
addl
xor
sub
out
lahf
adcl
es
imul
mov
addr16
xchg
sub
fidivs
jg
dec
cmpb
popa
adc
cmp
push
adcb
fwait
repz
enter
inc
cmp
jecxz
xchg
std
ja
test
lcall
ss
in
pop
les
divl
mov
xor
das
rolb
and
sub
scas
and
imul
pop
dec
loopne
sub
pushf
pop
push
push
aaa
das
in
ret
iret
les
cmp
mov
sub
imul
inc
push
mov
push
int
testb
push
aad
mov
mov
fwait
and
jl
stos
sbb
pop
out
mov
mov
daa
xlat
jmp
pop
jb
mov
aaa
subl
ret
loopne
add
jp
pop
add
and
fwait
out
movsb
mov
iret
dec
xor
dec
cmp
inc
sbb
xor
and
ret
jae
jno
sahf
int
lcall
gs
adcl
stos
push
movsl
mov
int3
icebp
jno
daa
pop
jne
movsb
sub
ja
test
inc
inc
repnz
popa
jb
scas
add
mov
outsb
mov
mov
sahf
loop
jnp
push
ljmp
in
repnz
roll
loop
dec
mov
add
mov
mov
unpcklps
cwtl
cmp
int3
or
cmp
jns
call
insl
pop
pop
fldcw
lea
add
or
mov
pop
dec
pop
pop
add
repz
ror
push
dec
aad
mov
jbe
loop
hlt
mov
jle
lcall
popa
mov
insl
popf
daa
orl
xor
mov
xchg
outsl
mov
test
imul
add
jle
and
mov
xchg
and
mov
arpl
sbb
loope
pop
int
mov
fisttps
mov
inc
push
mov
or
mov
je
pop
int
adc
and
roll
mov
stos
jae
sub
or
sbb
pop
adc
cmc
or
and
rcr
test
push
pop
fistps
arpl
add
or
pop
je
cmpsb
and
cmpsl
push
outsb
shrb
and
mov
lock
pop
gs
push
push
pop
imul
lcall
out
int3
lret
das
pop
or
outsb
add
scas
shlb
popa
data16
js
dec
xchg
pop
jp
cmpsb
sbb
in
inc
mov
mov
imul
cwtl
aas
add
and
das
or
push
dec
sub
mov
scas
adc
mov
xor
and
or
xchg
cwtl
xor
jne
in
jmp
jge
in
mov
mov
dec
jns
addr16
je
fs
int
lock
icebp
dec
aas
pop
sbb
leave
arpl
jecxz
mov
and
pop
jl
sbb
sub
call
insl
inc
mov
out
scas
xchg
les
subl
out
enter
and
loop
lock
xchg
pop
fwait
lahf
push
xor
pop
jno
imul
mov
dec
dec
mov
sub
rorb
addr16
arpl
sbbl
ja
add
cmp
add
gs
rorb
aaa
adc
or
int3
mov
cmc
adc
sbb
in
adc
sbb
imul
sbb
fstpl
or
xchg
lahf
dec
adc
gs
lods
mov
add
cmp
jno
xor
adc
int3
pop
sub
xchg
mov
sbb
dec
std
fs
jmp
mov
pop
shlb
inc
pop
fnstenv
jle
sbb
cs
jp
je
hlt
push
sbb
loope
fdivs
mov
data16
mov
shl
out
cli
mov
and
mov
gs
xchg
xor
adc
sub
in
mov
loope
jo
or
push
outsl
mov
sub
inc
inc
jmp
mov
and
in
outsb
sub
fs
repnz
enter
mov
inc
cmp
xor
xor
lahf
stos
mov
xchg
mov
push
jno
movsl
out
out
jbe
xor
lret
lahf
push
pop
movsl
out
jmp
outsl
cmp
xlat
inc
in
xorb
js
mov
jl
jg
mov
sub
push
repnz
es
aam
and
mov
lret
mov
sub
xchg
sub
cmp
das
clc
movsb
cmp
pushf
out
test
pop
and
cmpsb
stos
fldcw
pusha
mov
ja
push
stos
cli
push
enter
iretw
into
fdivrl
cmpsb
lahf
aam
push
sub
mov
lret
aam
scas
adc
mov
sub
fisttps
rorb
loop
nop
cmpsb
cmc
cmp
mov
or
xchg
arpl
pop
mov
cmp
xchg
sub
fldcw
jmp
scas
or
dec
enter
push
fs
push
pop
ljmp
imul
out
adcl
inc
cmp
push
lret
cwtl
adc
lahf
ja
jnp
mov
rcrl
push
xchg
sub
shlb
jmp
insl
jns
cmp
jnp
sbb
aaa
stc
mov
xchg
inc
mov
out
or
rolb
adc
and
mov
cwtl
bound
sbb
jp
call
psubb
cmp
sbb
jo
jg
mov
inc
inc
cmpsb
jmp
out
outsl
inc
cwtl
test
xchg
xchg
orb
mov
xchg
jg
mov
sahf
cltd
sbb
cwtl
mov
jno
add
sub
bound
dec
mov
test
mov
inc
scas
jb
pusha
dec
arpl
push
hlt
xor
or
pop
je
lods
fwait
xchg
sbb
jle
cltd
in
xor
adc
adc
jae
inc
or
or
sbb
fstl
mov
in
pop
ds
lahf
pop
or
xchg
pop
adc
jnp
out
jbe
cmp
or
mov
xor
arpl
dec
enter
add
aam
or
mov
xchg
adc
out
jmp
ret
cmp
xlat
ljmp
pushf
mov
cmp
xchg
roll
out
or
test
ret
dec
jns
iret
push
mov
xlat
imul
int
lret
dec
cmp
sub
mov
int3
push
inc
inc
mov
pop
jnp
hlt
sub
mov
scas
fldenv
shlb
jle
fists
ja
out
enter
jmp
mov
les
push
add
cmc
andl
stos
cltd
push
out
orl
push
movsb
xchg
sbb
dec
pop
data16
mov
jge
mov
or
or
push
pushf
jo
xor
push
push
add
das
in
mov
mov
test
mov
je
sti
ljmp
xchg
lea
out
add
or
adc
popa
jge
xchg
test
pop
adc
inc
imul
fdivl
or
les
cmc
outsl
jne
mov
sub
inc
pop
inc
adc
jbe
fcoml
sbb
or
iret
js
jne
mov
lea
les
cld
cmpsl
xor
loopne
popa
cmc
lock
fistl
ja
js
add
lahf
pop
push
add
and
out
fbstp
push
mov
or
orl
mov
and
pushf
shrl
nop
jmp
push
inc
fnstcw
xchg
out
mov
cmp
gs
push
adc
adc
cli
cmp
shll
int
pushf
push
push
adc
jnp
fistl
stc
pop
lds
out
repz
insb
stos
shll
jmp
ss
aaa
mov
lret
outsl
movb
loopne
mov
icebp
fmuls
jp
fwait
xor
add
jno
lret
cmp
mov
add
sbb
cmp
mov
push
sarb
lahf
lcall
cld
sub
fbstp
leave
mov
jns
inc
out
jnp
mov
dec
add
imul
dec
clc
cmp
pop
lahf
inc
xchg
push
test
sub
daa
pop
nop
loop
jle
jge
in
mov
mov
daa
mov
sbb
mov
in
sarl
sub
rcrb
pushf
and
in
jae
dec
xor
pop
sbb
f2xm1
pushw
cmpsb
mul
out
cmp
cmpsl
das
addb
jns
test
cmp
rcrb
out
mov
popa
int
loopne
outsl
les
jp
fmuls
and
mov
adcb
stos
add
or
xor
xchg
sbbl
mov
push
fisttpll
div
fnstcw
mov
add
leave
fildl
imul
movsb
jecxz
fwait
movsl
jnp
iret
pop
std
lcall
jge
and
xchg
mov
out
arpl
xlat
sbb
addr16
pop
std
jecxz
or
sub
push
xchg
jmp
mov
lahf
add
dec
jle
add
push
movsl
psadbw
das
add
mov
mov
fdivp
fbstp
fsubl
cwtl
fsubr
or
sbb
insl
lahf
jg
psubusb
or
je
addl
or
mov
popa
arpl
pop
jo
pop
dec
rcrb
dec
mov
pop
jmp
or
filds
cmp
xor
adc
inc
and
mov
sub
fildll
lret
sub
pushf
lahf
push
add
mov
adc
outsl
cltd
push
adc
in
mov
rcrl
sti
mov
divl
pop
pop
sub
fwait
int
test
dec
test
sar
sbb
push
jge
sub
ss
ret
ja
fldcw
inc
data16
mov
cmp
test
mov
or
jbe
mov
inc
lret
inc
push
ljmp
lds
into
pop
lock
xchg
insl
jo
push
sub
cmp
pop
int
and
sar
out
movsb
fists
jne
jae
ret
pop
xor
and
jae
ss
push
testb
out
adc
insl
lods
out
xorb
and
jmp
clc
icebp
push
pop
fisttpll
push
cmpsl
jl
shlb
inc
dec
mulb
dec
mov
jno
xor
xchg
sbb
dec
dec
xchg
push
xchg
int3
adc
jp
hlt
mov
cmpsb
stos
hlt
shrl
or
mov
cmp
lret
sub
je
insb
mov
popf
mov
icebp
mov
sbbl
loop
or
sarb
out
das
mov
out
push
sub
xor
adc
xor
cmp
aas
hlt
lds
and
cmp
fdivr
stc
rorl
dec
pop
and
xlat
out
ljmp
add
lahf
sbb
or
inc
jp
roll
or
insb
or
cld
xchg
rorl
lods
cmp
and
mov
das
mov
mov
into
bound
or
dec
in
rcl
or
pop
xchg
imul
fbld
xchg
popf
xor
movsl
cmp
inc
lods
out
cmpsl
mov
sub
js
push
addr16
inc
clc
lret
cmp
mov
pusha
inc
int
or
mov
loop
dec
das
cltd
or
inc
mov
push
jmp
mov
add
pop
sub
rcrb
adc
mov
punpckhdq
ror
push
mov
addb
xchg
popa
mov
adc
adc
rorl
push
fs
int3
xchg
je
and
mov
push
mov
inc
xchg
xchg
mov
test
and
call
cmp
xchg
mov
mov
mov
xor
adc
pusha
repnz
ljmp
jg
sahf
shrb
pop
lret
ja
push
fdivrs
or
stos
rcl
push
pop
in
inc
scas
pop
add
roll
xor
and
popa
pop
xchg
mov
sbb
mov
xor
sub
jp
fmuls
decl
ljmp
dec
xchg
push
jecxz
in
xchg
adc
adc
scas
pushf
test
fldenv
and
xchg
fmuls
push
inc
push
jmp
popf
pop
mov
jne
or
stos
mov
mov
scas
push
out
pop
xor
iret
add
test
add
mov
dec
jp
gs
jge
xchg
gs
mov
lahf
xorb
pusha
movsl
das
movsl
jae
cmp
test
das
ds
idivl
test
mov
xchg
push
mov
push
xchg
push
outsb
in
dec
enter
xchg
mov
mov
ss
rolb
int
shll
test
sbb
jmp
and
mov
bound
xchg
scas
inc
pop
sub
insl
fsubl
fiadds
and
push
push
aaa
push
sub
jmp
lea
jge
and
mov
shlb
pop
mull
push
sbbl
push
fdiv
andl
jae
imul
outsl
cwtl
int
rorl
clc
pop
lret
lea
jno
or
sahf
dec
dec
xchg
dec
add
and
adc
mov
mov
loopne
lcall
js
mov
dec
scas
shrb
cmp
xor
nop
stc
sub
imul
jl
jbe
sub
sub
mov
lods
pushf
mov
mov
xlat
cmp
mov
imul
aaa
test
rol
xchg
push
sub
jnp
dec
dec
lret
nopl
idivl
jge
sbb
fcmovb
rcl
and
inc
lret
loope
cmc
sbbb
pop
lahf
enter
rolb
sub
fwait
sarb
mov
jbe
mov
mov
inc
fsubrl
out
lret
jb
call
test
sub
sub
sub
mov
pop
cmpsl
dec
bound
adc
in
push
cmp
xchg
mov
call
pop
push
xor
leave
int
cmp
push
mov
mov
sub
mov
dec
or
movsl
mov
lahf
xlat
mov
loope
insl
pusha
popa
cli
add
les
pop
cs
dec
jg
mov
mov
test
push
movsb
or
and
inc
cli
test
xchg
addb
jae
xchg
cmp
aaa
scas
push
and
dec
jmp
rcr
sub
pushf
cli
sub
push
in
jge
int
jb
imul
fwait
outsb
pop
mov
cmpsb
inc
cmp
add
jp
pop
fld
shrb
xchg
jnp
icebp
std
or
and
int
and
cwtl
lods
mov
ret
ret
xor
push
sbb
mov
out
xchg
cltd
cmp
repnz
adcb
add
subl
lds
rcrb
arpl
cmc
xor
jbe
pop
or
std
ss
in
shll
in
fld
and
icebp
dec
mov
vmovsd
cltd
mov
pusha
mov
lock
mov
push
clc
sbb
std
add
mov
fstl
dec
sbbl
lret
repz
lahf
aam
mov
adc
mov
dec
movsl
movsb
adc
push
sub
add
popa
ja
mov
dec
fidivrs
hlt
cmpsl
jge
dec
mov
mov
cmc
sub
leave
dec
ss
push
cmp
pop
xchg
xor
sub
js
rorl
and
dec
jp
sub
sub
leave
loopne
mov
mov
popf
pop
lahf
and
scas
outsl
fmuls
add
popa
ja
jmp
imul
xchg
xchg
clc
cwtl
cmp
pushf
push
notl
ret
outsl
adc
lret
add
xlat
data16
xor
mov
dec
push
cltd
aad
les
fwait
push
mov
fidivrl
xchg
inc
cmp
mov
dec
or
hlt
dec
xor
je
les
sbb
mov
addb
and
pop
enter
inc
sub
jecxz
fs
rcr
fucom
dec
lcall
sbb
test
bound
mov
inc
fbld
push
sbb
testb
mov
imul
mov
test
les
push
and
fildll
data16
in
jns
mov
or
and
push
stos
daa
adc
pop
pop
loopne
icebp
cli
or
das
aaa
xor
sub
jecxz
ret
test
pop
add
jbe
mov
iret
std
push
add
sub
sti
in
test
addr16
repz
les
cli
xchg
lods
out
gs
xchg
cmpsl
lds
cmp
sbb
xchg
add
hlt
dec
in
fs
pop
sbb
adc
hlt
adc
push
mov
in
ss
in
in
push
imul
mov
jp
pop
sti
or
in
inc
push
sbb
daa
daa
repnz
pop
cmp
push
lret
adc
pop
iret
test
sbb
jnp
adc
sbb
jbe
push
popa
popf
test
push
push
popf
loope
pop
mov
inc
les
fbld
mov
lea
jb
mov
mov
in
enter
inc
sub
es
mov
inc
pop
lcall
test
inc
xchg
jg
lcall
pop
mov
mov
mov
mov
ret
cmp
cmp
inc
fwait
mov
lahf
mov
mov
lods
int
or
jb
mov
adc
xor
aad
ss
push
or
cwtl
popa
add
loop
xorl
mov
mov
icebp
mov
stc
jle
jmp
xchg
out
repnz
xchg
aas
pop
mov
or
lret
mov
adc
mov
adc
or
out
fists
jl
add
pop
mov
sub
sub
js
lods
inc
or
fisttpll
jge
outsb
mov
fs
sbb
icebp
les
pop
cmp
in
lods
sub
dec
leave
dec
fdivs
stos
jns
aam
mov
mov
scas
dec
add
in
inc
stos
into
or
cs
std
cmp
sbb
popf
out
dec
stos
inc
outsb
loop
xchg
jl
mov
fists
dec
pop
test
mov
pop
push
pop
sbb
fwait
or
xchg
imul
addr16
lcall
push
jns
mov
mov
sub
adc
ja
das
loop
idiv
push
xchg
movsl
xchg
push
lea
btr
iret
adc
arpl
fwait
cltd
sbb
dec
pop
dec
sub
stos
hlt
or
call
das
and
adc
sub
sub
fistpll
int
dec
push
arpl
mov
fsubs
sti
lcall
inc
stc
mov
jmp
add
jmp
test
mov
pop
lods
stc
ss
dec
aam
iret
push
or
pop
push
jb
xchg
leave
lods
cmc
or
xchg
mov
or
pop
inc
mov
out
inc
sub
leave
adc
inc
xchg
imul
push
repnz
push
jo
daa
mov
mov
adc
rcll
inc
mov
fst
lahf
or
data16
cmp
pop
scas
aad
mov
test
inc
or
shll
lcall
icebp
clc
inc
mov
xor
or
add
mov
dec
mov
sbb
inc
pop
ds
stc
sbb
js
sti
call
iret
pop
scas
lock
rcrl
or
cs
xor
mov
pop
call
call
cwtl
cmpsb
or
repz
jae
lret
je
cmp
loop
repnz
add
cmpb
adc
push
into
idivl
jmp
jmp
insb
push
rcl
ljmp
add
inc
ljmp
inc
jb
dec
sub
mov
pop
mov
arpl
xlat
movsb
cs
mov
adc
mov
dec
data16
sbb
int
inc
add
clc
je
push
test
mov
bound
les
mov
mov
pop
jae
outsb
ljmp
in
cld
jbe
or
dec
mov
cmpb
xchg
rcrl
rolb
xchg
mov
lea
js
incb
mov
stc
xor
mov
loopne
sub
test
mov
and
sti
dec
jle
ja
das
inc
sahf
dec
xchg
push
repz
scas
inc
ret
not
dec
jns
ja
outsl
iret
xchg
es
jnp
fcoml
insl
pop
rol
es
loop
cmp
popa
sub
push
adc
jle
int
jmp
ljmp
sbb
ss
je
jb
push
stc
mov
lret
push
add
push
mov
testb
call
and
mov
sahf
outsb
push
mov
in
xor
jge
stos
insl
mov
xchg
adc
out
aaa
adc
les
cltd
lods
mov
outsl
mov
dec
cli
xorl
push
lret
std
outsb
loope
filds
jne
push
aas
cmp
stos
in
jns
sbb
sub
int
jno
sub
movsl
mov
rcrl
adc
dec
mov
dec
xchg
das
sbb
adc
jg
push
jg
xchg
scas
repnz
pusha
cmp
push
divl
push
outsl
mov
mov
adc
cmpsl
pop
mov
daa
sbb
ja
arpl
add
push
vmread
sbb
jnp
mov
push
mov
mov
loopne
sub
fdivl
aad
lods
hlt
hlt
cmp
adcl
and
cmpsl
insl
push
call
sbb
jbe
cli
add
pop
das
loopne
cmp
out
incb
lds
loope
mov
fs
push
aaa
outsb
sub
xor
adc
or
ss
cmp
sbb
mov
loop
xchg
imul
jge
pop
shll
pop
aad
adc
inc
push
stos
jns
xchg
cmpsb
add
ljmp
lret
mov
jmp
dec
ds
pop
shlb
mov
add
jo
in
aas
push
scas
test
cmp
inc
adc
mov
adc
mov
add
test
lea
cli
maskmovq
testl
xchg
jae
movsl
cmp
iret
lahf
add
mov
add
ret
jl
pop
or
inc
add
out
daa
sbb
pop
push
movsb
sbb
aad
add
shll
setb
dec
mov
fs
mov
xchg
pop
add
push
popa
adc
fwait
icebp
fcomi
pop
out
add
xchg
jecxz
andnps
mov
insb
pop
fisttpl
jg
cld
mov
rorl
repz
insl
mov
fcom
iret
outsb
xchg
fwait
nop
xlat
out
mov
xchg
push
pop
dec
leave
mov
idivl
lcall
jg
cs
test
mov
sbb
jg
ja
neg
stos
aaa
enter
jg
mov
mov
mov
mov
les
ljmp
nop
mov
rolb
in
jb
xchg
and
sub
mov
xor
mov
je
rolb
stos
test
push
ja
xchg
sahf
jb
and
shrb
cmc
out
hlt
mov
dec
pushf
les
add
insl
mov
das
jbe
je
fs
clc
or
dec
test
mov
push
add
add
arpl
add
cmp
or
xlat
jno
inc
push
cmpsl
mov
push
rclb
and
dec
dec
shrl
fdivs
pop
xchg
mov
or
inc
xchg
test
dec
outsb
push
jmp
incb
imul
fldl
test
xchg
adc
fisubl
lods
stos
test
dec
loopne
fimuls
lcall
iret
fs
cld
cmp
and
test
lcall
push
stos
xor
lods
adc
sbb
jb
xchg
ret
and
inc
jmp
cli
aaa
jg
push
aas
out
les
cmp
mov
sbb
add
pop
add
inc
je
daa
inc
mov
aad
push
sbb
xchg
push
addl
jmp
pop
popa
andb
ret
daa
mov
or
sbb
mov
fs
add
std
aas
lods
adc
inc
adc
jge
jae
mov
pusha
ror
sbb
and
xor
cmc
adc
push
in
pusha
or
fs
xor
sub
in
jecxz
sbb
pusha
mov
bound
mov
arpl
repz
jno
dec
add
cmpxchg
out
fistpl
adc
lods
and
mov
in
sti
mov
maskmovq
lea
sub
push
push
jmp
mov
xchg
push
pop
ud2
adc
cmp
add
or
pop
roll
sbb
stos
movl
cli
pop
mov
jbe
dec
jo
lret
pop
mov
pop
cmc
cmp
adc
mov
xchg
jge
pushf
mov
or
adc
mov
add
iret
ret
and
dec
aad
cs
mov
pop
lcall
out
jns
cld
mov
push
fmull
je
or
lret
lcall
mov
mov
lahf
int
adc
lea
fidivs
jnp
es
xchg
imulb
int3
mov
pusha
dec
hlt
ret
arpl
fildl
imul
shlb
push
xchg
cmp
sbb
sub
adcl
jae
cmp
scas
popf
lcall
scas
xchg
push
or
sub
push
xlat
movsb
add
mov
jle
nop
inc
mov
push
outsb
faddp
rolb
pop
and
push
jae
adc
xchg
out
pop
or
xor
xor
dec
fcompl
and
rcr
jne
adc
sbb
dec
ret
lret
mov
mov
xchg
cwtl
insb
divb
sbb
fnstenv
fbstp
cmp
popf
pop
les
or
push
push
xlat
les
or
jle
mov
test
and
iret
dec
inc
mov
mov
pop
ret
cmpsl
push
lahf
sbb
jb
jecxz
mov
sbb
fimull
jae
jecxz
push
sbb
inc
jbe
xor
mov
mov
fisubrl
pop
lock
test
inc
xor
repz
ficoml
push
mov
int3
out
imul
push
fucomi
mov
sub
jne
inc
lds
movsl
rcrb
daa
int3
mov
mov
dec
pop
push
xchg
dec
xor
loope
int
out
dec
dec
pop
fadds
mov
mov
add
and
cltd
mov
pop
xor
cmpsb
mov
adc
clc
add
inc
cmpsb
mov
cmp
pop
push
mov
lret
mov
dec
cmp
xor
mov
lods
or
sbb
es
xchg
and
push
fisttps
lret
nop
imul
imul
and
xor
cmc
jno
fwait
sbb
cmp
mov
clc
ficoml
pop
jnp
jmp
jne
push
mov
inc
fadd
sbb
or
pop
leave
pop
js
outsb
cmpb
pop
mov
faddp
mov
sub
sub
adc
dec
into
int
out
sbb
mov
sarb
mov
not
out
push
stos
lods
push
adcl
xchg
shlb
push
push
jg
or
popf
adc
push
orb
ret
push
push
insl
test
int
push
subb
scas
mov
daa
rcrb
mov
fwait
mov
jnp
repz
sbb
std
mov
adc
jno
or
inc
decl
popa
testb
fsts
mov
push
cmp
and
fucomi
jb
popa
add
loopne
jle
enter
and
aad
ja
push
jb
and
mov
stos
imul
testl
imul
adc
popf
or
scas
lret
push
imul
pop
xor
sub
aam
je
cmpsb
xchg
pop
jl
shl
and
das
in
mov
orb
jmp
fisubrl
dec
mov
loop
es
stos
mov
aaa
xorb
loop
clc
jl
out
ds
push
loope
fcoml
bnd
cmp
sbb
pusha
dec
in
adc
jae
or
cvttps2pi
int
aas
mov
adc
sub
jae
mov
and
sub
lea
mov
pop
mov
outsb
stos
rcrb
sub
icebp
test
aad
lods
jns
cmp
insl
xor
stos
inc
jg
sub
ds
jmp
dec
fimuls
jecxz
mov
cmp
test
cli
fcomps
or
xchg
xchg
clc
sbb
mov
push
test
dec
and
xor
add
mov
scas
xor
mov
cmp
xchg
adc
ret
push
rorl
pushf
cs
out
or
mov
xchg
inc
in
xor
jp
outsb
leave
std
cmp
xlat
int3
js
mov
dec
in
sbb
stc
cmp
fs
sbb
cmp
ficoms
xor
xor
adc
adc
and
add
lcall
cmp
ss
lods
cmp
imul
outsl
int3
test
mov
and
mov
mov
jbe
add
mov
jge
int
dec
ljmp
pushf
in
lock
ficoms
insb
aas
cmpsl
xchg
adc
cmp
cmp
scas
or
pop
sbb
test
sub
fstl
ss
out
inc
or
and
xchg
test
divl
movsl
adc
mov
inc
pop
scas
sbb
data16
outsl
lods
dec
nop
push
lret
inc
inc
pop
jl
jo
outsb
dec
dec
lret
repz
lahf
fbld
lret
call
xor
add
fidivl
cmp
shl
mov
xor
push
mov
sub
sub
inc
movsl
incl
push
cmp
or
xor
mov
sar
hlt
and
pop
push
or
gs
xchg
cwtl
mov
sbb
out
test
out
data16
stos
ljmp
sub
and
add
lods
test
jp
ret
xlat
sbb
lcall
mov
push
and
mov
or
cltd
sub
cs
sub
es
sub
fldenv
xchg
sbb
jne
pusha
mov
sub
fiaddl
mov
iret
inc
inc
pop
loope
mov
push
inc
adc
in
inc
cmpsb
pop
jg
mov
inc
fsubrp
xchg
fnsave
aam
jno
imul
sub
push
pop
sti
inc
pusha
ss
push
xchg
pop
sub
test
mull
pop
xchg
js
scas
pop
sbb
fimuls
loope
rorb
inc
cmpsl
lods
fildll
inc
mov
mov
int
sti
jp
push
jbe
mov
xchg
xchg
rcl
imul
sbb
loope
stos
lods
xor
jbe
add
icebp
ljmp
mov
jo
sbbb
and
push
push
mov
add
or
and
cmp
mov
push
jg
mov
add
popa
rcll
cli
lahf
xor
daa
out
xchg
fs
xor
or
mov
inc
add
mov
bound
push
push
scas
xor
jo
jb
ret
dec
stc
and
aad
loopne
and
pop
xor
fdiv
adc
xchg
sbb
mov
xor
sbb
adc
mov
cmp
lret
mov
cmpsl
push
push
fs
sahf
rcrl
es
nop
std
push
inc
fs
enter
out
jbe
pop
inc
loop
mov
jnp
neg
hlt
mov
pop
repnz
xchg
nop
mov
jge
push
icebp
cmp
out
push
cld
in
push
enter
or
jno
mov
push
es
sbb
loop
pushf
out
jno
orl
fldl
push
inc
mov
cs
xchg
pop
cs
or
out
test
mov
imull
inc
shlb
pop
ds
cmp
shll
adc
das
lret
and
rclb
jae
dec
sub
push
cmp
add
dec
in
mov
inc
lcall
shr
or
mov
dec
dec
js
and
and
gs
insl
pop
jg
mov
dec
mov
pop
lcall
repz
jp
mov
daa
pushf
and
loop
popf
popa
stos
add
adc
lret
inc
ret
mov
pop
mov
adc
and
popa
xchg
test
scas
iret
sub
xor
mov
das
mov
rcrb
es
adc
mov
insl
stos
leave
neg
orb
outsb
inc
call
jg
xor
xchg
xor
fwait
test
mov
je
pop
aas
mov
enter
imul
mov
lods
jg
pop
das
sbb
mov
xchg
jecxz
sub
adcb
int
out
or
shll
fiadds
repz
in
aas
xchg
inc
dec
movsb
dec
add
mov
dec
and
mov
mov
or
mov
jg
adc
pop
mov
mov
out
or
aad
test
pop
mov
cli
in
pop
sbb
adc
sbb
sbb
int
lods
rol
imul
adc
xor
or
inc
add
sub
xchg
sar
test
inc
add
xchg
dec
sub
cmp
pop
inc
inc
repnz
cmpsb
aaa
and
or
sahf
orb
push
in
roll
xchg
aad
mov
push
ljmp
sbb
or
jae
mov
arpl
jbe
adc
fwait
mov
jmp
inc
aas
lret
add
lret
mov
les
lahf
lock
cmp
into
cmp
iret
and
sub
inc
or
movsb
repz
jns
mov
stos
sbb
je
int
mov
out
faddp
movsl
test
dec
shrl
jge
outsl
out
mov
bound
adcl
les
push
inc
sahf
and
cltd
and
out
test
add
fdivr
movb
fcmovu
inc
out
xor
lock
adc
cmpsl
or
hlt
xorl
and
out
popa
mov
fstps
jp
and
pop
fucomip
in
adc
ljmp
fwait
xchg
sbb
sbbb
out
pushf
lret
int3
xchg
mov
out
enter
insb
jne
push
addl
aam
pushw
push
scas
pop
xchg
fdivs
cli
inc
aam
jae
xchg
fstpl
ljmp
add
mov
inc
add
add
insl
mov
js
mov
mov
lds
or
pop
mov
shll
push
in
enter
dec
pop
cltd
sub
stos
pop
jp
mov
cmp
mov
fsubrl
dec
dec
pop
jl
add
push
cmpsl
xor
pop
fwait
dec
enter
scas
mov
sbb
xor
cmp
sbbl
and
call
xor
push
sbb
or
and
and
loopne
xor
cs
mov
fucomi
mov
sbb
cmp
cmp
sti
mov
mov
inc
out
cmp
cltd
movsb
push
mov
lahf
aam
in
test
in
rol
sbb
ds
xchg
addr16
sub
pop
push
int
leave
loopne
rorl
fistl
pop
mov
push
inc
mov
inc
inc
out
or
pop
xor
jmp
int
les
imul
cmpl
pop
mulb
cmpsb
fistpll
aas
xor
add
enter
rolb
add
dec
push
mov
out
mov
xor
test
shrb
sub
adcb
mov
sub
or
fcmovnu
xchg
lcall
scas
xor
xchg
mov
out
mov
xchg
mov
mov
fists
mov
jo
jle
adc
mov
je
fnstsw
out
stc
or
push
scas
fnsave
mov
jecxz
pop
add
fdivrs
adcl
out
outsb
fiadds
dec
clc
sub
jl
add
fisttps
mov
mov
frstor
mov
inc
and
mov
aaa
test
sub
int3
aaa
push
hlt
and
sub
cmp
dec
insl
adc
pop
pop
cmc
xor
pusha
pop
pop
jecxz
mov
pop
mov
dec
popf
arpl
movsl
ds
int3
bound
inc
jnp
into
ja
and
inc
scas
dec
pop
aas
sahf
jmp
test
xchg
frstpm(287
xor
jbe
shlb
pop
fildl
mov
xor
mov
mov
push
pop
movsl
shlb
imul
sar
shll
hlt
xor
jg
outsb
fidivrs
dec
cmpsb
xor
ds
stos
and
cwtl
addl
dec
adc
arpl
jbe
in
in
inc
sarl
loope
xchg
lret
dec
and
rolb
mov
mov
lods
scas
lods
nop
repnz
pop
add
push
fwait
lods
dec
push
push
mov
cmpsb
add
scas
gs
lock
clc
cmpsl
mov
mov
adc
push
fcoml
pusha
imulb
ret
jl
xor
mov
xchg
fwait
into
ja
jle
cmp
mov
cmp
pop
jno
out
adc
cmc
xchg
mov
jnp
adc
xorl
mov
sbbl
mov
dec
mov
dec
pop
cmp
ljmp
icebp
push
push
daa
repz
cmp
inc
icebp
push
ja
dec
push
xorl
loope
push
dec
pop
dec
sub
inc
out
mov
mov
stos
loope
arpl
cmp
xor
out
rorl
mov
pop
inc
jle
push
shrl
mov
popf
fisttps
jmp
pop
mov
mov
xchg
ret
int
xchg
pushf
push
outsb
or
jecxz
mov
sti
add
or
pop
pop
lods
add
jo
add
addr16
pusha
xor
add
pop
sub
and
push
lcall
sbb
xchg
sbbl
fadds
dec
ds
ret
andl
stos
data16
rcrl
call
std
loopne
int3
jae
adc
icebp
jnp
push
adc
dec
mull
sub
inc
mov
in
inc
rol
add
sbb
jae
pop
mov
int3
push
push
sub
xor
jnp
xor
mov
xchg
inc
cmp
into
mov
adc
clc
mov
clc
loope
in
push
rcl
dec
sbb
dec
mov
or
and
lcall
pop
outsb
negl
inc
lcall
dec
enter
lock
add
xor
fcmovnb
test
int3
inc
mov
xchg
in
push
inc
shll
sbb
jnp
mov
push
push
xor
ljmp
pop
fstpt
add
je
adc
mov
mov
mov
pop
sbb
out
ret
push
test
jg
icebp
rorl
xor
jmp
mov
mov
into
push
dec
cmp
inc
xchg
pop
pop
mov
push
mov
insb
imulb
dec
add
dec
jge
xor
cmp
loopne
cmpb
xchg
aas
mov
push
cmp
addr16
sbb
xchg
xor
insl
xchg
aam
fildll
add
pop
xchg
and
add
push
add
movsl
xchg
loop
push
mov
pop
xlat
je
cmp
and
loope
sub
mov
pusha
jno
mov
out
lret
inc
sub
xor
mov
push
mov
out
inc
jle
mov
cmpsl
scas
push
lods
mov
repz
pop
fwait
add
ret
ss
mov
pop
aam
and
mov
push
push
cmp
add
ljmp
rclb
cmp
aam
adc
icebp
inc
push
fcmovu
sub
xor
dec
lea
cwtl
pop
xor
mov
test
js
rolb
dec
jmp
sbb
jg
cmp
rolb
adc
sbb
arpl
adc
mov
jo
sahf
ss
push
lret
or
dec
xchg
jl
xor
push
cmc
sbbb
mov
lcall
push
addr16
inc
fs
push
mov
sub
mov
jle
sbb
ret
iret
iret
and
hlt
inc
inc
jmp
push
test
pop
lret
cmp
lea
into
out
lret
jmp
adc
lret
inc
mov
xchg
add
mov
cmp
sub
adc
scas
pop
sub
xchg
testb
cwtl
xchg
and
add
cmp
lret
and
lods
cmc
and
in
mov
and
push
mov
and
cld
or
sbb
imul
cmp
out
pop
xchg
test
cmp
mov
movb
cli
mov
pop
dec
leave
jmp
mov
xchg
sbb
xlat
inc
push
cmp
out
repz
mov
gs
cmp
push
enter
pop
pop
jecxz
mov
pop
push
xor
sub
mov
out
adc
jbe
xchg
shlb
or
mov
and
mov
pop
adc
mov
cltd
pop
mov
mov
aas
dec
pusha
pop
clc
mov
push
and
adc
test
push
sbb
cmp
or
xor
call
sbb
sahf
sahf
jno
lret
jns
or
stc
dec
xor
cwtl
cmp
insb
es
inc
add
sub
mov
sub
cmpl
movsb
add
xlat
inc
mov
push
adc
push
adc
and
dec
vpslld
sub
in
inc
mov
add
sub
dec
cmp
and
int
outsl
clc
push
dec
add
mov
insl
dec
mov
nop
mov
in
into
popa
sbb
pop
cmp
lahf
insl
je
lea
mov
arpl
xchg
and
call
xchg
jp
dec
jo
mov
cli
daa
xchg
mov
int
lret
les
add
sub
ss
cli
pop
arpl
sbb
sbb
cmp
push
xor
sbb
xor
faddl
out
insb
dec
out
xchg
push
mov
xlat
sbb
ret
jmp
jle
mov
cmpsb
sbb
stos
add
push
scas
andb
cmc
xor
and
mov
jb
push
in
mov
sub
push
mov
xor
std
mov
mov
lea
xchg
loopne
cwtl
pop
dec
lea
xchg
test
pop
test
pusha
cmp
cmpb
mov
gs
sti
and
sbb
jbe
xchg
jg
mov
dec
loope
stc
pop
lret
aam
mov
aas
stos
lods
mov
jns
aad
mov
or
ret
cltd
cmpsb
jnp
outsb
ja
and
loop
mov
addr16
in
addr16
jb
pop
xor
div
add
nop
ja
jne
pop
inc
int3
test
dec
jge
lods
std
call
jns
addr16
add
fbld
pushf
push
je
inc
stos
adc
dec
mov
ljmp
icebp
mov
fisttpl
push
enter
fistpl
shl
sub
daa
gs
sub
add
jbe
mov
push
xor
fisubrl
setae
into
adc
loope
stc
mov
fdiv
push
xchg
cld
jl
clc
nop
in
and
sub
ljmp
xchg
nop
test
fadds
cmp
jbe
test
outsl
xlat
inc
mov
hlt
xchg
rorb
lret
mov
sbb
dec
and
pop
data16
add
push
push
aaa
inc
or
mov
aas
push
cmp
test
mov
mull
adc
jne
sbb
mov
lock
jbe
jmp
das
jbe
call
jg
dec
mov
mov
outsb
out
mov
xchg
sub
mov
mov
xor
pop
add
cmp
daa
in
pusha
ljmp
aad
sub
mov
mov
jno
aaa
mov
shlb
push
rep
fs
fwait
cmp
inc
jl
add
sbb
call
psadbw
push
push
xor
push
mov
mov
bnd
dec
in
sbb
shrb
enter
mov
push
jb
push
jle
outsl
adc
add
mov
xor
lret
mov
sbb
mov
je
add
in
and
cmp
outsb
push
test
jns
out
mov
jns
push
shrl
int3
sarb
push
and
adc
ret
mov
and
xchg
mov
loopne
outsl
push
mov
cmp
mov
jbe
jp
or
push
bswap
sbb
scas
fsubrs
aas
mov
and
in
movsb
hlt
dec
dec
dec
mov
mov
push
dec
inc
sub
aad
and
fwait
popf
cwtl
ds
cmp
ja
sub
mov
test
out
les
scas
fcmovb
loop
sub
scas
or
inc
test
decl
into
add
scas
ja
cli
inc
stc
jnp
shll
sub
retw
xlat
sub
mov
in
mov
or
jns
fldl
les
or
repz
sub
cmp
jns
test
std
mov
dec
shlb
cmp
imul
sub
push
pop
add
out
insb
divl
ljmp
loop
push
push
cmpsb
testl
jne
cmpl
std
mov
dec
sbb
out
std
lret
jmp
andl
std
jp
mov
pop
dec
sub
fmuls
xchg
fldt
dec
push
pop
dec
push
sbb
daa
adc
test
jae
jbe
add
add
es
outsl
pop
xchg
push
dec
sbbb
inc
lcall
mov
out
dec
mov
div
mov
add
test
std
mov
test
out
loop
popf
imul
dec
or
bound
xor
sub
xor
arpl
cli
mov
movsl
clc
xchg
imul
test
jg
insb
js
jl
fwait
inc
xchg
imul
addr16
jbe
mov
gs
repnz
movsb
es
push
ja
mov
imul
popa
adc
adc
mov
mov
push
pop
mov
ljmp
jo
sub
loopne
ljmp
imul
mov
fbld
mov
or
mov
sub
in
sbb
mov
xor
daa
push
mov
arpl
add
cld
aas
addr16
in
xchg
pushf
xchg
inc
or
push
test
and
adc
jmp
pushf
aas
dec
cmp
test
addb
pop
jae
xchg
lds
inc
cwtl
repz
loopne
test
jl
fidivrs
push
push
out
out
mov
sub
dec
in
xchg
adcl
pop
push
add
mov
jg
lods
xlat
and
pop
mov
loop
inc
dec
push
pop
lahf
stc
repnz
xchg
mov
mov
fnstenv
push
dec
frstor
sbb
jae
in
in
cli
inc
adcl
xor
out
in
mull
xchg
inc
mov
imul
mov
inc
push
mov
mov
leave
inc
js
daa
adc
xchg
insb
dec
cmp
inc
fldt
add
xor
std
jns
mov
mov
outsl
scas
sbb
push
enter
xchg
or
sbb
jge
cmp
outsl
dec
push
fiaddl
lock
cld
mov
jmp
pop
pop
jns
sbb
test
sub
jmp
lock
not
testl
and
jb
add
push
xor
lcall
shlb
pop
aas
jns
lock
xor
movsb
cmpsl
jbe
or
dec
jl
sbb
and
mov
in
imul
and
adc
fld
adc
andl
pop
ds
xchg
jb
jle
xchg
int
imul
cld
push
mov
out
mov
mov
mov
aaa
dec
xor
or
inc
cmp
cld
ficoms
cmc
dec
mov
fimull
push
sub
push
xchg
sub
pop
mov
mov
lcall
pusha
lcall
mov
mov
mov
nop
adc
sub
mov
push
pop
push
out
addb
mov
cmp
mov
push
sub
in
lods
loope
in
sub
cmp
insl
jno
push
popa
test
data16
mov
jg
sub
or
fsubp
sahf
fsubrs
jg
mov
pop
mov
inc
pusha
xor
mov
mov
out
dec
add
pop
sbb
imul
or
xchg
inc
push
icebp
mov
test
and
sbb
ret
hlt
aad
pop
mov
les
or
mov
test
xchg
pop
std
mov
or
lods
sub
mov
int
push
es
inc
je
mov
jl
pop
lds
mov
outsb
lods
pop
les
call
xchg
push
fwait
dec
movsl
arpl
pop
fsubr
jo
jmp
xchg
pop
cmc
out
ret
pop
mov
notb
out
mov
in
sub
mull
sub
mov
mov
mov
and
mov
lods
mov
pusha
sar
push
movsl
xor
and
xor
jo
mov
cmp
iret
in
xor
xchg
pushf
or
mov
bound
into
lods
mov
mov
dec
pop
loopne
pop
cmp
or
push
mov
pop
scas
and
jecxz
std
rcl
mov
sub
inc
and
bound
test
jne
cmp
dec
scas
adc
mov
fs
xor
loop
jb
and
stc
data16
push
jne
mov
adc
adc
jl
dec
mov
call
sbb
jg
roll
jecxz
std
or
arpl
rcr
or
dec
inc
ja
mov
sbb
ret
xor
push
inc
and
dec
jno
es
lods
out
pusha
and
mov
xor
dec
or
js
push
fistps
out
adc
pushw
pop
aad
dec
inc
pushl
sbb
pop
fcmovne
sbb
adc
mov
mov
imul
lock
xchg
sbb
mov
mov
lea
scas
xchg
inc
incb
out
push
xor
cmp
test
loop
adc
push
sbb
add
mov
rcrb
call
int
mov
xorb
inc
lcall
adcb
ret
mov
fdivr
jmp
loop
inc
inc
loop
pop
push
push
test
inc
sub
push
jne
fdivp
ljmp
jle
dec
movsb
mov
mov
push
ds
aam
sub
inc
in
jecxz
xor
pop
adc
and
mov
in
in
mov
mov
mov
sbb
or
shrb
inc
mov
ss
cmp
pop
shrb
outsb
inc
movsb
fbstp
jge
out
pop
loopne
pop
aad
pop
xor
insb
mov
lcall
orl
or
mov
lods
add
loop
rcll
nop
sub
jmp
and
negl
sbb
jg
or
add
out
xchg
xchg
js
sti
dec
imulb
and
iret
jno
pop
mov
repz
sub
push
jg
adc
dec
cmp
out
add
pop
mov
inc
pushf
mov
es
pushf
pop
out
scas
or
ljmp
out
or
lock
pop
idiv
add
jp
cld
mov
mov
into
sbb
xchg
mov
scas
es
in
in
les
roll
and
mov
mov
aaa
in
inc
mov
into
dec
jecxz
mov
push
fnstenv
sub
or
push
push
neg
or
out
sbb
jecxz
and
gs
push
add
jl
jbe
out
lock
jns
add
sub
loop
in
nop
sbb
aaa
addb
add
push
pop
add
cmp
in
inc
jnp
sbb
insb
in
jmp
mov
xorl
lret
fldenv
mov
outsb
rep
pusha
or
cmp
push
adc
out
movsl
scas
insl
fisubrs
dec
rcrl
aad
xor
ret
and
dec
dec
in
inc
into
popf
add
sarl
or
pop
ret
mov
mov
push
cmpb
cmp
ret
loop
jne
fildll
aam
leave
jae
lret
pusha
insl
xchg
adc
fcmove
in
loope
adc
xor
push
cmpsl
add
mov
xchg
sbb
sub
movl
mov
int
pop
lods
test
dec
inc
add
lds
add
rcl
sub
jmp
mov
pop
mov
xor
inc
pop
in
sub
jno
pop
add
inc
repnz
leave
inc
mov
les
or
mov
hlt
test
icebp
shlb
inc
fbld
mov
enter
imul
sahf
stos
mov
pop
or
pop
xchg
pop
rdpmc
popa
push
push
inc
mov
mov
cmc
cmp
dec
dec
adc
je
pusha
hlt
sbb
inc
stos
mov
daa
rcrb
pop
lock
lods
sub
hlt
mov
notb
adc
cmp
cmc
pop
dec
mov
sub
push
or
mov
pop
xchg
test
and
jno
movsb
jecxz
std
das
inc
mov
ljmp
sbb
lret
pop
sarl
push
and
in
push
xor
popf
pop
push
mov
mov
rcl
sub
mov
cmpb
cli
pop
sbb
addb
xor
xor
mov
push
sub
jecxz
rcll
adc
stc
int
sbb
data16
and
jbe
pop
roll
into
sub
ss
mov
xchg
cmp
pusha
cld
sbb
jp
dec
push
gs
lret
push
dec
push
jns
cmp
mov
mov
aaa
xchg
ja
pop
es
sub
mov
dec
mov
xor
adc
jge
insb
imul
jecxz
xlat
dec
int
int3
cmp
push
jp
loope
and
gs
stos
mov
or
mov
loopne
repz
cmc
inc
addr16
sbb
stos
mov
mov
mov
fucom
ds
scas
ljmp
je
or
mov
into
mov
jp
lcall
ja
cmovg
push
inc
cmp
pop
cmp
lods
cwtl
jg
mov
daa
dec
and
sub
push
add
and
sub
aam
push
and
cmp
test
stos
push
test
addr16
cld
ficoms
mov
lahf
lods
mov
mov
fnstenv
add
mov
xchg
xchg
jns
sbb
sahf
cwtl
mov
dec
add
mov
arpl
iret
popf
jle
test
jmp
dec
cmp
pop
mov
inc
scas
pop
in
cmp
fcomps
loopne
std
ror
das
inc
cld
aaa
sbb
je
pop
pop
mov
mov
push
xor
scas
test
sbb
insb
cmp
jmp
adc
test
cmpsb
cmp
jne
cmp
dec
mov
cmp
jmp
leave
insb
sub
test
out
popl
repz
rol
call
mov
stos
dec
push
push
dec
xor
scas
push
mov
jge
xchg
filds
mov
inc
mov
das
pop
mov
rsm
ja
cmp
xchg
inc
jne
fwait
imul
popa
stos
ds
push
sub
mov
stos
or
and
mov
scas
sbb
arpl
push
in
fwait
jle
mov
and
xchg
cli
popa
jmp
dec
repnz
or
pop
jge
test
push
xor
mov
mov
les
movl
mov
out
stc
jmp
sbb
or
mov
adc
jmp
cmp
hlt
aad
mov
xor
xchg
mov
fimull
push
lods
loop
mov
xchg
dec
sbb
pop
fs
jge
pop
test
shr
dec
inc
xchg
mov
ficoml
in
int3
fwait
psubd
imul
jnp
sbbl
jle
dec
in
mov
cmp
out
xor
insb
or
lret
rcrl
or
mov
lds
and
lods
jmp
inc
xchg
inc
pushf
ret
aas
jo
xchg
outsb
movsl
clc
sub
testl
mov
stc
jae
push
repz
dec
shlb
sbb
out
lock
push
pusha
sub
push
add
cmpsl
rol
jae
sbb
mov
notb
dec
ret
out
dec
inc
popf
push
sti
ficoms
insb
jp
ja
cmp
sbb
insl
jp
std
mov
xor
mov
sbb
jno
pop
repz
sbb
rorl
out
mov
aam
xchg
inc
out
into
push
adc
jo
rolb
and
mov
adc
mov
xchg
addr16
mov
loope
pop
push
andl
inc
ja
xchg
gs
sub
icebp
jle
ds
sub
ds
cmpsb
add
ds
pop
jo
fildl
enter
movsb
xor
inc
push
mov
mov
mov
addr16
and
rcr
stos
pop
cwtl
dec
cmpsb
add
lock
inc
ret
jge
int3
outsl
out
rcl
addl
lea
cmp
fildll
push
xor
fisubrs
push
cmpsb
repnz
test
mov
and
mov
ret
leave
movsbl
mov
stc
fucompp
jp
imul
xor
add
jmp
out
add
sub
cmpsb
daa
pop
jge
sbb
push
test
mov
into
lret
addb
lret
aam
dec
add
test
das
mov
push
stos
subl
dec
movsl
mov
add
call
xchg
nop
imul
repz
pop
mov
dec
les
sbbl
lods
icebp
or
pop
or
into
lea
push
or
jne
pop
insb
insl
stc
cs
test
cli
mov
pop
orb
mov
dec
loop
push
or
mov
daa
mov
xor
xor
cmp
mov
icebp
insl
or
mov
pop
and
mov
xchg
adc
fs
jns
mov
das
pop
add
jnp
popa
popa
shll
mov
add
daa
lds
dec
das
aam
jo
dec
repnz
lods
add
cltd
sub
insl
xchg
xor
icebp
sbb
dec
int
pop
cmp
dec
adc
popf
pushf
jecxz
js
incb
xchg
xor
ja
ljmp
lcall
mov
sbb
lahf
insb
inc
jecxz
push
cmc
jbe
lds
ss
hlt
and
repz
sub
outsb
aaa
fst
js
enter
dec
outsl
shrl
roll
enter
pop
iret
lock
sbb
dec
orb
rol
jb
mov
push
dec
push
and
lea
lahf
ds
mov
idiv
leave
in
sbb
xchg
push
int3
jp
jb
test
hlt
sub
push
sti
notl
mov
cld
mov
insb
inc
pushf
or
ja
insl
xchg
test
scas
je
gs
push
cltd
fcoms
push
jae
outsl
rcll
jne
adc
mov
mov
ret
push
std
test
imul
fwait
inc
das
cmpl
out
test
stos
scas
lret
imulb
sahf
int3
je
std
pop
xor
dec
push
sbb
push
gs
fcmovu
and
mov
push
sbb
lds
inc
cmp
ret
lret
or
fdiv
shlb
js
pop
xor
arpl
sti
negb
andb
add
sbb
jge
cmp
jle
pop
sub
in
or
das
addr16
imul
xor
scas
xor
inc
xchg
inc
jmp
adc
testb
repz
pop
cmp
adc
push
das
and
mov
sbb
daa
int3
pop
les
stos
xor
pop
fwait
inc
mov
xor
cmc
hlt
or
cmp
dec
ja
push
inc
in
loopne
or
jns
jge
sub
mov
psllq
cmc
pop
in
arpl
das
and
rcrb
shrl
scas
sub
iret
repz
pop
fisttps
jbe
push
dec
cmp
inc
mov
aas
rcrl
and
iret
xchg
cld
lcall
repnz
pushf
dec
push
lcall
adc
add
jb
out
rol
mov
popf
jae
mov
rcrl
adc
cwtl
mov
das
dec
cmp
call
xlat
jnp
mov
xchg
or
rcrl
jno
cmp
sbb
test
iretw
dec
lret
pop
jle
push
lcall
addb
shlb
out
ja
lahf
sub
mov
xor
stos
pop
movsb
sbb
bound
dec
lods
stos
mov
sbb
test
fsubr
cmp
mov
dec
lahf
dec
add
scas
or
pop
mov
xor
pop
fdiv
cmpsb
mov
jp
les
rorb
push
test
test
pop
popf
cmp
sarl
ret
cmp
push
in
gs
test
inc
outsb
dec
push
imul
pop
stc
jge
add
dec
popf
mov
adc
xchg
adc
sub
and
mov
addr16
cmp
pushf
mov
jne
fdivl
fwait
jno
lods
ja
jecxz
or
pop
mov
pop
leave
adc
aad
ret
addl
les
lock
lahf
push
pop
in
loope
pop
mov
cltd
mov
stos
xchg
lahf
xor
or
sbb
aas
dec
push
sbb
sub
cmpl
jl
sti
sbb
repz
cld
pop
xchg
lcall
sub
sti
add
or
cmp
sbb
cmpb
cmp
push
leave
jle
call
pop
sub
cmpsl
mov
xor
mov
fisttpll
add
out
sub
or
cld
add
push
stos
es
stos
outsb
dec
mov
mov
inc
call
rorl
jp
mov
add
scas
inc
rol
mov
and
js
jae
xorb
sbb
pusha
std
inc
jne
insb
lret
ret
sub
pop
pop
sbb
lods
fs
imul
mov
jns
xor
or
sbb
fisubrs
xor
test
out
mov
hlt
mov
outsb
hlt
mov
pop
xchg
inc
subl
cmp
xchg
std
inc
push
push
mov
or
jle
adcl
ds
inc
std
iret
add
in
pop
pop
mov
cmp
cld
repnz
adc
push
xchg
push
push
lods
pusha
mov
out
mov
rcrl
lock
into
xchg
mov
out
mov
push
lods
les
jns
push
jle
cmp
add
aaa
jne
sbb
mov
jbe
inc
push
gs
shll
jae
pusha
fnstsw
faddl
sub
mov
cltd
aaa
dec
mov
push
out
mov
jge
out
aam
mov
sub
push
pop
test
in
lcall
out
dec
mov
leave
insl
test
je
sbb
adc
aas
cmpsl
mov
cmpsb
adc
repz
cmp
movsb
xchg
leave
addr16
inc
flds
hlt
outsb
shll
cmpsb
jns
out
adc
mov
cmpsl
mov
das
shll
adc
int3
fldl
bound
cld
mov
push
mov
cmp
cli
add
xchg
mov
jne
push
pushl
lea
bound
xchg
pop
jp
jecxz
adc
call
mov
xchg
es
popa
push
push
xor
xchg
push
lcall
ja
inc
repz
xor
roll
lods
mov
je
enter
mov
jp
jns
es
mov
xlat
pop
xchg
push
sub
leave
sub
add
push
fdivrl
stos
adc
int
bound
nop
push
div
fistpll
sbb
aad
dec
out
and
js
aaa
add
mov
fidivl
cmp
jns
sub
fmuls
add
popa
xlat
cmc
cmp
push
sub
movsl
xor
sahf
lret
clc
mov
sub
mov
int3
inc
xchg
sbbl
out
andps
stos
jno
loope
hlt
pusha
sti
or
je
mov
int3
xor
jl
push
add
outsb
stos
outsl
sbb
mov
lea
lret
nop
inc
sarb
and
pushf
adc
jmp
repnz
movsb
push
add
insl
mov
test
out
movsb
out
arpl
mov
xor
movsl
jmp
add
iret
mov
fcmovu
mov
les
cmp
jbe
inc
sub
mov
outsl
inc
mov
mov
xchg
roll
cmp
cs
orl
and
mov
aad
jae
lret
stos
addr16
dec
mov
movsb
cmp
cmp
sub
xor
adc
or
fadds
mov
adc
cmp
fiaddl
and
pusha
inc
mov
sahf
and
jae
dec
and
mov
add
lods
or
sub
dec
lret
jle
mov
fisubrs
out
decl
stos
out
call
adc
jbe
mov
sbbb
or
pop
mov
ja
xchg
sahf
fs
rcrl
add
test
mov
shl
dec
repnz
inc
jg
in
mov
dec
and
mov
es
adc
lret
push
test
imul
and
pop
loopne
dec
mov
imul
fs
sub
cli
lahf
cmpsl
into
push
pop
mov
jae
fisubs
imul
movsl
sub
pop
lcall
les
xor
test
xor
enter
and
mov
in
pop
mov
xchg
sub
mov
pop
mov
les
mov
nop
sub
jp
pusha
xor
jge
jmp
fsincos
pop
pop
dec
and
lods
adc
or
xchg
sbb
mov
lea
push
test
mov
xchg
sub
xchg
nop
sahf
in
dec
es
cmp
testl
pop
sbb
cld
scas
fmuls
add
xchg
add
push
dec
sbb
aaa
push
fwait
push
dec
mov
and
or
sub
repz
outsl
jo
movsl
xchg
nop
mov
xchg
xchg
ret
nop
mov
testl
add
fwait
mov
cld
adc
sti
scas
sahf
loopne
enter
scas
xorb
jp
scas
stos
leave
ficompl
fisubs
es
cli
push
into
push
mov
mov
xor
repnz
mov
pop
mov
jecxz
cmp
test
js
mull
mov
test
jbe
cmpsb
inc
dec
cmp
loop
sub
inc
push
insl
stos
mov
in
adc
or
and
gs
into
test
pushf
fld
pusha
xchg
xchg
mov
sub
adc
adc
test
adc
add
dec
lock
enter
dec
pop
mov
in
jecxz
xchg
push
movsb
pop
push
pop
mov
jg
lds
pop
call
in
and
je
pop
and
pop
lcall
test
dec
jns
in
loope
add
sub
rorl
lock
mov
add
pop
mov
jbe
xchg
addr16
test
imul
inc
icebp
or
adc
ljmp
and
je
cmpsb
icebp
popf
push
fistpl
mov
incl
fidivrl
jno
ret
loop
lret
add
push
mov
inc
fistpll
mov
fldcw
ljmp
add
jmp
divb
imul
imul
fmuls
mov
notl
ret
movsl
scas
push
jb
adc
loopne
push
or
ret
lret
int3
pop
test
pop
call
lcall
rorl
repnz
or
movsb
or
stos
scas
or
shl
push
push
std
jo
sub
out
mov
mov
mov
test
add
mov
cmpsl
lock
loop
mov
or
stc
sub
sub
mov
lret
pop
neg
jb
push
jo
lock
dec
in
je
mov
cmc
pusha
lret
sub
lea
ja
cli
jns
jl
pushf
mov
cmp
mov
xchg
mov
jg
jo
sbb
pop
call
jno
mov
xor
jnp
js
cmpsb
mov
imulb
or
inc
cld
leave
out
mov
add
sub
or
sti
sahf
jl
daa
aad
mov
arpl
jne
popf
cmpsl
dec
les
or
and
mov
in
int
sub
dec
xor
push
and
sub
outsl
pop
xchg
int3
adc
adc
loop
lret
dec
cmp
jmp
push
mov
add
je
sub
and
loope
xchg
imul
xchg
aas
aaa
and
dec
or
rcrl
push
mov
stos
xchg
add
adc
addr16
sub
sbb
les
dec
xchg
mov
xchg
test
popa
loop
push
sub
fcoms
add
lahf
shrb
dec
outsb
gs
jnp
add
bound
cmovne
mov
cltd
daa
cmp
lret
cmp
cli
mov
cmp
cmp
cmp
addl
lea
cmp
jmp
insb
std
in
add
sub
pop
pop
cmp
mov
pop
test
js
push
ret
mov
xor
arpl
xor
hlt
sub
jge
jecxz
xor
lcall
aam
in
out
dec
push
push
ljmp
and
sbb
cmc
cld
sti
movsl
push
push
js
or
imul
sub
nop
cli
pmaddwd
sub
sbb
lea
sarl
or
dec
imul
ds
pop
fdivs
adc
sti
pop
sbb
clc
or
add
int
pusha
push
lret
mov
sub
out
out
pop
and
jp
pushf
inc
and
jno
outsl
inc
mov
sbb
iret
xchg
iret
push
js
into
pop
push
jns
xor
call
aas
test
dec
sbb
sbb
and
mov
xlat
pop
inc
jae
cmpsb
ret
xchg
popa
loope
dec
mov
lock
scas
jo
cwtl
shr
inc
xchg
lds
push
stos
imul
lock
push
mov
dec
mov
mov
adc
hlt
xor
inc
adc
scas
mov
lret
push
mov
loop
iret
jmp
stc
cmp
xchg
mov
push
xchg
ret
push
xor
stos
mov
faddl
scas
cli
mov
sbb
test
add
loopne
out
out
lahf
xchg
rcr
insl
add
mov
enter
cmp
mov
xchg
inc
add
lock
xchg
movsb
and
outsb
xor
mov
mov
stc
daa
xchg
lret
lods
dec
push
mov
test
xor
or
mov
cs
adc
push
pusha
scas
lods
sub
cmc
lahf
ficoms
hlt
sub
xlat
sbb
scas
arpl
pop
cmpsl
and
lds
je
inc
cltd
enter
pop
mov
sbb
das
push
data16
push
pop
jmp
scas
in
cmpsb
jbe
icebp
mov
inc
f2xm1
fdivrl
jg
mov
adc
push
insl
int
test
inc
pop
movsl
cmpsl
ds
decl
fcompl
inc
lods
std
negb
outsb
jbe
imul
in
and
dec
sbb
xor
mov
insl
cli
aaa
cmp
adc
filds
sbb
ds
std
arpl
hlt
call
std
pop
adc
lret
dec
test
ljmp
dec
mov
cmp
std
fwait
pop
pop
mov
cmp
pop
dec
and
and
mov
clc
cld
cmp
rorb
dec
dec
sbb
xor
lea
adc
pop
pop
fdivs
das
mov
bound
pop
adc
inc
or
jnp
mov
std
adc
sbb
xor
sti
xchg
pushf
ljmp
pop
sbb
jmp
or
sahf
shll
into
pop
mov
imul
iret
inc
imul
mov
fiaddl
lret
scas
in
add
dec
jno
xchg
add
sbb
lahf
lahf
addb
jb
fsubp
test
in
sbb
pusha
out
aaa
test
add
dec
push
pushf
dec
xchg
sub
imul
cmpb
mov
pmuludq
mov
mov
push
int
or
nop
cmc
or
fidivl
mov
cwtl
andb
lods
daa
jp
out
movsb
hlt
subl
pushf
dec
inc
xchg
push
enter
xchg
pop
ret
andb
pop
imul
out
clc
out
int3
in
cltd
mov
fidivl
cmp
jns
add
add
xor
test
js
mov
das
or
xchg
and
movsb
lds
push
movsl
jl
cmpb
push
xchg
out
xchg
fdivl
cmp
push
lock
out
std
gs
sbb
lahf
xchg
inc
sbb
or
aad
les
shlb
pop
mov
mov
xchg
push
lahf
jb
mov
pop
in
pop
lods
mov
mov
xor
fldcw
adc
iret
sbb
xor
jnp
insb
inc
call
sbb
movsl
mov
lods
or
pop
pushf
fwait
daa
cltd
jo
cwtl
insb
xchg
pushf
cmpb
push
jge
ret
int
in
mov
popa
fsubrl
nop
push
pop
dec
sbb
imul
push
dec
in
sub
ss
adc
ficoml
cmpsb
lea
inc
mov
fildll
mov
jae
jge
stc
in
sub
sbb
mov
int
repnz
pop
or
sahf
lcall
std
int3
cmpsb
sub
sbb
cli
addr16
or
mov
jle
lods
lahf
lret
mov
push
cmpl
ret
test
test
jge
sbb
push
inc
int3
xor
shl
mov
addr16
jp
fiaddl
or
mov
and
dec
pop
outsl
or
loop
mov
hlt
pop
and
jg
fimull
mov
insb
and
xchg
shlb
pop
adc
push
iret
sub
dec
pusha
add
or
outsl
jae
pusha
flds
mov
dec
out
mov
push
daa
mov
popa
mov
adc
pop
lret
inc
mov
cmpsl
ficompl
repz
cmc
stc
dec
nop
gs
inc
sbb
dec
out
and
popa
mov
dec
ja
int
mov
vorps
dec
aam
outsb
lds
mov
and
mov
xor
jne
push
ljmp
out
lahf
mov
js
gs
cmp
dec
nop
mov
push
xorb
aam
adc
rorl
push
aaa
out
popf
movsl
adc
lcall
daa
jp
test
xor
adc
push
stc
rcll
mov
push
add
xorl
cltd
xchg
arpl
scas
cmp
jo
lcall
sbb
and
mov
adc
push
jmp
inc
mov
shl
jae
xlat
or
jl
add
test
mov
mov
inc
sub
cmpsb
popf
pop
jecxz
mov
es
cmp
std
cs
pop
bound
xchg
popa
aaa
pop
idivb
stos
shll
pop
dec
dec
dec
push
pushf
rcrl
loopne
xor
jo
and
sti
or
xor
xor
xor
ljmp
and
fcmovne
jnp
and
add
sbb
sbb
dec
lea
xor
sbb
cmp
incl
and
das
stos
jl
out
cmc
repz
in
push
daa
jo
xchg
or
push
rcll
ja
fwait
xlat
dec
scas
insl
pop
cmp
fisubs
lret
mov
ret
insb
cmc
out
inc
movsl
inc
jo
push
outsb
cmp
stos
int3
mov
sti
push
in
sub
cli
or
fdiv
scas
xchg
dec
adc
inc
lods
mov
push
in
sub
mov
dec
sub
cli
pop
pop
dec
cld
enter
sbb
ds
roll
sbb
outsl
jns
xor
popa
fidivrl
sub
add
data16
push
notl
push
xor
mov
je
mov
add
int
mov
xchg
mov
inc
test
lods
cmc
jmp
gs
insl
inc
insb
daa
lret
sbb
loope
inc
xchg
lret
sub
mov
sbb
and
xor
sbb
jle
cltd
push
ljmp
cmp
or
lret
lcall
sub
cmp
jbe
lods
jmp
notb
sahf
in
xor
in
lahf
lret
imul
adc
mov
xor
add
outsb
jp
pop
push
int
pop
pop
mov
push
push
push
xor
repnz
push
xchg
cli
int
pop
mov
andl
les
dec
mov
and
sti
mov
mov
dec
jp
arpl
lds
rcrl
sub
jmp
les
cmp
xchg
fists
jno
test
fcomip
add
insl
push
cmp
addr16
pop
addl
rol
lea
nop
jmp
sbb
inc
mov
mov
fldenv
shll
mov
enter
sub
jb
sub
std
rcrb
cmp
cltd
into
out
stos
lcall
mov
and
jnp
sbb
sub
inc
sub
std
and
dec
push
outsb
inc
mov
dec
dec
pop
sbb
fst
cmp
fisubl
loopne
pusha
std
ja
push
aam
movq
jo
pop
repnz
ja
xchg
stos
inc
xor
mov
push
dec
out
sbb
mov
gs
mov
and
repnz
xchg
lods
xor
and
push
fwait
xchg
or
ret
push
test
outsb
cld
xchg
stc
dec
push
sub
mov
test
inc
out
movsl
lcall
mov
into
pop
repz
stc
or
add
addr16
icebp
mov
iret
dec
cwtl
aas
add
jg
xchg
sbb
cli
scas
into
mov
sahf
ficoml
pop
xor
cwtl
sub
stc
xor
push
ret
sub
movsl
sub
pop
icebp
sbb
neg
xchg
ss
addr16
loope
adc
inc
repz
adc
in
sbb
jne
add
mov
jb
pop
inc
push
sub
rcl
jle
movsb
mov
inc
push
xchg
add
sbb
xor
or
insl
aaa
dec
sbb
out
pop
push
xlat
stos
push
push
xchg
push
xor
xor
imul
ret
out
dec
aam
sub
lods
xor
shll
ja
xorb
data16
sub
pop
sbb
or
lea
int3
or
dec
sbb
cwtl
subb
lret
add
lock
stc
jo
cmp
mov
push
into
std
xor
lret
xlat
call
cli
scas
cmp
or
mov
cmp
es
pop
out
or
xchg
or
sbb
xchg
xor
repz
loope
xor
iret
xor
mov
push
cmp
jb
lods
testl
stos
xchg
adc
js
outsl
pop
into
in
sarb
sbb
and
inc
mov
pop
inc
xor
clc
jl
pop
mov
mov
jns
outsb
cltd
rorl
cmpsb
mov
mov
add
mov
mov
pushf
lahf
test
pop
into
push
push
or
push
sti
std
and
or
inc
push
popf
dec
pop
pop
in
in
iret
mov
shlb
mov
jnp
ljmp
or
mov
and
inc
add
push
xor
jns
das
mov
insb
sub
pop
adc
or
out
insl
test
inc
popf
lods
dec
std
jb
lcall
adc
mov
int3
and
and
mov
pop
fwait
outsl
test
aam
xchg
inc
aas
sti
lret
or
das
cmc
sub
push
pusha
xor
jecxz
shll
ds
stos
cmp
int
or
or
mov
imul
xchg
cmp
pop
ret
sbb
aaa
scas
push
out
mov
add
pop
jmp
cmp
jle
mov
pop
xchg
mov
adc
mov
into
add
xchg
add
shll
imul
cmp
or
jecxz
lcall
add
mov
adc
adc
sarl
xchg
xchg
int
jmp
add
inc
stos
sarb
push
add
andb
mov
lcall
arpl
sarb
loopne
push
popf
stos
aas
ja
cmc
jp
and
daa
dec
stc
push
cli
stos
mov
mov
cmp
inc
dec
popf
mov
dec
mov
sub
fcompl
aaa
push
jp
and
inc
mov
std
pop
adc
mov
stc
test
or
sub
jmp
call
ret
push
iret
dec
pop
stos
mov
mov
stc
lea
cmp
scas
inc
adc
sarl
mov
sub
cmp
dec
adc
dec
mov
jb
inc
cs
pop
sbb
les
dec
sub
sti
mov
testb
or
xchg
push
dec
mov
out
xor
jnp
mov
sti
inc
and
sub
or
adc
mov
jecxz
lods
pop
gs
sbb
push
rolb
push
mov
mov
adc
gs
orb
mov
sbb
and
pop
imul
mov
lahf
cmpsb
imul
mov
inc
pop
dec
icebp
cmp
inc
mov
mov
or
xor
dec
jg
roll
mov
or
sub
xor
pusha
gs
and
enter
mov
xor
jecxz
aad
es
mov
scas
dec
js
jns
in
and
adc
dec
dec
adc
mov
push
cmp
testb
jg
arpl
cmp
xchg
aaa
push
out
sub
xchg
andps
or
repnz
and
cmp
jge
add
mov
fisubs
push
xlat
add
sub
mov
or
inc
xchg
adc
mov
ret
jmp
pop
mov
mov
in
mov
mov
lods
sub
mov
lret
cmpl
outsb
jg
movb
int3
adc
lods
sub
mov
cs
test
mov
pushf
and
jbe
fwait
and
xor
inc
and
or
adc
sub
cmp
or
cmp
sbb
idivl
jno
add
mov
mov
sbb
ret
push
cld
push
push
sbb
cwtl
es
lcall
cwtl
aas
pop
add
mov
movsl
adc
or
mov
mov
addr16
outsb
mov
xchg
mov
arpl
in
lret
enter
push
negb
push
dec
jmp
cmp
push
mov
stos
das
test
mov
add
cmc
mov
adc
rorl
in
jg
fbld
or
repz
data16
icebp
sahf
cmc
adc
mov
mov
mov
int
pop
lret
and
sbb
loope
push
vpunpckhbw
movsl
ja
push
mov
or
jge
jl
rcll
int
testl
pop
lock
aam
lea
push
inc
and
push
pop
repnz
add
lcall
shll
pusha
mov
mov
shl
mov
aad
shl
outsl
cmpsl
push
divb
dec
int3
inc
jne
cmpb
stos
cmp
jb
mov
idivb
fldl
fnstsw
lea
add
mov
mov
mov
outsl
aaa
and
mov
push
mov
iret
add
aad
mov
ret
in
scas
fldcw
mov
popa
loopne
js
lods
mov
or
push
jge
xor
xchg
adc
les
push
lods
fisttps
sub
xor
xorb
xchg
mov
les
mov
adc
xchg
aaa
mov
mov
sub
push
clc
insb
aaa
inc
xchg
or
cmpsb
hlt
mov
lahf
imul
sub
lcall
shl
push
gs
push
cmpsb
xchg
mov
aam
jg
sub
out
scas
sub
adc
push
push
stos
mov
or
mov
lcall
cmpsb
dec
jp
test
into
addl
push
int
rclb
xor
or
xchg
adc
xor
push
jg
push
hlt
jno
xor
sbb
or
xchg
push
mov
push
push
pop
stc
aad
sub
cmp
mov
jge
fcomps
out
int3
insl
pop
pop
iret
mov
cmp
cmp
enter
pop
mov
mov
inc
popl
iret
into
mov
xchg
comiss
mov
cmp
push
xlat
add
pop
clc
or
rcr
stos
cmc
push
dec
adc
adc
rorl
ret
aas
add
mov
stc
popl
xchg
add
cltd
and
mov
mov
inc
sbb
out
rcll
test
cld
xchg
sbb
add
mov
aam
jecxz
mov
sbb
push
dec
and
pop
sbb
sub
pusha
mov
rcrl
push
movsl
adc
inc
mov
push
push
or
int
rcrb
xchg
sar
je
push
je
push
lahf
xchg
cmp
jg
stc
test
dec
mov
cltd
test
push
cmp
bswap
sbb
xchg
popa
jns
mov
inc
scas
push
lods
mov
fwait
lock
ret
rcl
loope
pop
in
sbb
adc
jbe
pop
push
cmp
or
cmp
lds
inc
or
fstpt
adc
out
ja
mov
mov
lahf
sahf
pop
ret
insl
xor
mov
sbb
xchg
test
cwtl
adc
sub
loope
ljmp
test
mov
sub
lret
insl
cmp
adc
inc
mov
sbb
adc
mov
jnp
fidivrs
xchg
xchg
test
cmp
cmc
fldenv
inc
aaa
pop
xchg
adc
fadd
shll
nop
sbb
mov
jp
in
jge
mov
push
sub
test
ljmp
clc
fs
pop
adc
hlt
mov
xchg
fcmovnu
jg
push
dec
andl
bound
jge
rcrl
test
ja
xor
mov
cltd
xchg
fwait
enter
jecxz
stos
mov
xchg
rorl
cld
pop
mov
out
js
shlb
icebp
out
jle
and
mov
pop
hlt
popf
sbb
aas
sbb
xchg
lods
add
popf
in
movsb
pop
push
nop
out
mov
jg
pop
sar
adc
mov
ss
push
subl
cld
fs
dec
cwtl
sbb
pop
pop
mov
push
in
inc
push
or
pop
xor
xor
push
insb
pushf
int
sbb
loope
in
inc
lods
pop
and
push
jne
add
jle
pop
lahf
or
adcl
mov
fs
aaa
mov
jb
addr16
pusha
cmp
add
popa
popf
mov
popf
cmc
mov
add
inc
dec
pusha
inc
test
fisubl
fistpll
fs
aas
stos
fs
mov
out
sub
nop
popf
and
jge
ret
and
inc
out
fadds
lock
add
mov
mov
dec
lret
add
push
jo
and
fiaddl
lret
popw
popl
out
in
mov
inc
dec
repz
cmc
mov
cmp
mov
popf
mov
icebp
mov
mov
ret
aas
leave
pop
push
divl
xchg
mov
inc
or
jmp
shl
in
push
cwtl
pop
jo
sub
jle
xchg
scas
mov
fildll
lret
stos
mov
cmp
sub
add
rolb
jae
insb
jno
add
add
inc
adc
inc
jle
movsl
nop
xlat
les
mov
push
aad
cld
sub
arpl
jge
idivl
and
inc
mov
cmpsb
ljmp
xor
xchg
orb
clc
sub
aam
jmp
sub
pop
std
adc
mov
push
cs
out
lods
lret
in
hlt
pop
sub
pusha
jg
mov
cmc
sahf
outsb
ret
outsl
les
iret
lret
inc
xlat
or
inc
and
int3
popf
incw
es
jb
xor
rcr
icebp
int3
cli
jns
add
incb
imul
sub
push
out
incb
xchg
leave
xlat
cld
cmp
jne
sub
fwait
jnp
and
dec
je
ffreep
jge
andnps
mov
pop
out
adc
adc
into
fdiv
cld
mov
fnstenv
mov
repz
push
sahf
stos
mov
push
cld
adc
call
mov
cwtl
or
add
out
test
sarl
xchg
dec
cmp
dec
cmpsb
add
or
push
fldl
jbe
and
clc
jbe
jnp
mov
push
sbb
mov
loope
imul
jecxz
pop
mov
mov
jns
adcl
xor
lds
xchg
leave
cltd
mov
xor
pushf
out
hlt
pop
mov
stc
mov
xchg
cltd
xchg
in
bnd
pop
orl
pop
popa
mov
loopne
enter
js
pop
push
lcall
out
test
inc
sbb
insl
sbb
imul
pop
pop
stc
jle
pusha
xchg
sbb
xor
mov
into
inc
xchg
mov
mov
cmp
sbb
pop
jno
in
jmp
dec
out
sbb
xchg
mov
movsl
sub
sbb
shll
mov
fdivrs
xchg
fs
imul
lea
out
stos
mov
add
push
stos
pop
push
inc
in
in
test
push
adcl
push
pushf
push
push
int3
mov
pop
icebp
cmp
enter
sar
rorl
fildll
cmp
int
pop
mov
mov
lcall
push
cmp
mov
sub
lea
cmp
test
shlb
pop
aas
imul
test
clc
int3
push
mov
imul
jg
jecxz
jns
cmc
mov
push
xchg
mov
test
xchg
out
mov
lret
imul
jne
or
addr16
add
cwtl
int3
popf
popf
sbb
mov
into
mov
xchg
pop
push
xor
fistpll
pop
push
ret
jle
jae
mov
insl
mov
or
pop
mov
popa
mov
fwait
fwait
and
inc
mov
repz
mov
mov
inc
loope
mov
paddw
xor
imul
ljmp
jne
leave
sbbl
cmp
loope
test
sbb
inc
mov
leave
out
mov
or
push
push
cmc
push
fwait
mov
mov
mov
sar
cmp
xor
out
mov
into
xchg
add
in
sar
sbb
andb
jecxz
mov
outsb
inc
imull
aas
repnz
test
xchg
outsl
dec
cmp
pusha
sub
inc
mov
loopne
lret
mov
rorb
loope
add
into
shlb
jne
cmp
sti
shl
mov
std
cmp
subl
jecxz
inc
pusha
add
or
int
sbbb
inc
sbb
cwtl
out
in
lahf
mov
lods
addr16
mov
adc
adc
cld
sbb
test
lods
stos
jl
stc
sbb
push
mov
inc
outsl
mov
jg
xchg
mov
cs
in
fyl2xp1
push
popa
cmp
ljmp
sub
mov
sbb
movsl
and
mov
fadds
ret
jg
jecxz
sub
bound
out
ja
inc
ds
xor
dec
jg
pop
sbb
xlat
outsb
fistpl
fwait
je
sub
jno
dec
cmpsl
adc
xchg
insl
jbe
decl
push
pop
push
sti
xor
test
outsl
pop
int
insb
jecxz
inc
sbb
xor
jp
in
hlt
out
scas
in
lahf
push
orb
in
lods
aaa
popf
lahf
lds
and
movsl
cmp
mov
jl
xchg
lret
fmuls
std
pop
mov
add
or
ficoml
push
jo
cmp
nop
outsb
call
fwait
xor
mov
mov
iret
cmpsl
fdiv
mov
inc
mov
iret
mov
xor
das
lea
outsl
inc
inc
jne
sub
pop
mov
or
adc
lea
ljmp
out
lcall
add
mov
sbb
xchg
xchg
pop
dec
xor
jno
jnp
test
cmp
ret
hlt
mov
mov
ja
cmp
sub
lods
fildl
mov
test
out
xchg
lds
lock
xor
sub
fwait
add
jo
cs
lods
lret
shlb
adc
je
stc
ficomps
inc
ret
cmpsl
push
jl
cmp
jnp
xor
pop
cmc
addr16
xor
daa
push
pushf
inc
js
pop
les
or
mov
or
repnz
pop
cltd
lea
inc
mov
jbe
mov
out
sahf
xchg
push
cmp
jnp
dec
inc
jg
stos
pusha
int
test
test
cwtl
xchg
xor
int
xchg
in
jno
push
daa
push
sbb
jo
scas
es
ljmp
adc
rorb
mov
push
test
jg
jmp
pop
and
fsubrs
inc
or
inc
adc
push
push
sti
leave
jno
dec
xchg
fs
into
loop
or
lcall
xor
inc
add
mov
cwtl
jp
push
ficompl
and
cld
jp
jns
cmp
call
push
dec
aas
mov
repz
insb
lea
cmp
pop
arpl
or
notb
aam
mov
jle
adc
pop
pop
sbb
xor
ret
dec
aam
sbb
xor
lahf
rcrl
xchg
movsl
jl
lcall
rolb
cmp
ficoml
sub
xor
test
mov
cmp
orb
lcall
dec
push
mov
andb
aaa
sub
fwait
jns
jbe
aaa
fbstp
jo
imul
rcll
jg
pusha
sbb
aam
mov
movups
loop
add
mov
jae
jns
test
into
icebp
aas
add
jmp
jl
fiadds
mov
into
ljmp
xchg
sub
xchg
arpl
inc
and
das
movsb
dec
sahf
push
xchg
data16
adc
in
add
adc
add
test
sahf
push
jo
shrb
sbb
in
lock
push
rcrb
sbb
out
cwtl
fiaddl
pop
pop
sub
aas
pop
dec
aad
xchg
stos
lahf
test
xchg
cwtl
pop
je
push
and
movsb
mov
punpckldq
repz
or
adcl
mov
and
in
and
cmp
jno
pop
and
adc
xor
testl
pop
and
mov
lahf
mov
push
jl
add
mov
dec
xchg
jecxz
int3
add
fistpl
sarl
or
mov
cmpsb
mov
sbb
in
les
dec
out
add
dec
fcmovnbe
inc
add
enter
hlt
xchg
adcb
sub
jg
test
or
shlb
cmp
or
lds
dec
notb
mov
cmpsl
stc
mov
push
mov
lods
test
inc
shrb
xor
jae
adc
repnz
test
clc
or
pop
jne
icebp
add
shlb
or
dec
enter
or
push
stos
out
sar
aad
popa
sti
out
xor
jg
xor
sahf
jbe
pop
jns
sub
xor
fyl2x
adc
or
push
mov
and
fdivr
or
aam
jns
and
xchg
aam
pop
mov
fyl2x
jmp
and
pop
mov
mov
xchg
sub
xchg
fadd
xchg
fs
pusha
xor
push
pop
xchg
mov
fistpl
jnp
jnp
xorb
outsb
aas
xchg
sahf
mov
xchg
sub
xlat
adc
adc
adcl
pusha
jle
mov
cmp
rorb
das
mov
adc
push
das
mov
add
xchg
cmp
jmp
mov
mov
subl
stc
inc
jl
xchg
or
xor
cmp
xor
cmc
lret
psadbw
add
pop
pop
popa
add
push
jg
iret
ficoml
lea
push
inc
or
jmp
jl
in
xor
mov
push
test
mov
rol
adc
or
test
sbb
cltd
fwait
adc
int3
jl
in
jp
adc
enter
xchg
jg
add
adc
lret
inc
rclb
loopne
cmp
and
xchg
or
popf
push
ret
inc
pop
mov
ja
jno
leave
inc
xchg
out
dec
add
roll
dec
cmc
inc
sbb
xchg
xchg
jmp
in
sahf
dec
mov
imul
mov
scas
mov
mov
loope
jmp
pop
push
out
push
in
dec
cmp
sub
pop
inc
cmp
test
xchg
add
out
push
mov
jle
pop
or
sub
cltd
mov
cmp
cwtl
enter
mov
dec
dec
mov
aaa
or
dec
aad
dec
in
loop
scas
xor
jnp
push
cwtl
push
pop
add
jns
or
sbb
jl
inc
nop
popf
xor
inc
mov
add
cli
pop
test
mov
test
inc
pop
mulb
xor
mov
push
xchg
cwtl
out
push
and
andl
push
pop
jmp
lea
int3
cmpsb
mov
jb
nop
cmpsb
in
jae
inc
dec
outsl
jmp
jecxz
or
dec
mov
pop
repz
pop
xchg
xor
rorl
ret
mov
fs
sbb
je
inc
aaa
and
lods
and
cwtl
aaa
push
insl
push
sbb
sub
jecxz
xchg
mov
jb
scas
cltd
adc
fcmovnu
scas
add
mov
mov
push
jge
rorl
or
out
sti
fmuls
ja
mov
adc
inc
and
loope
std
repz
push
das
loopne
leave
xchg
fisubs
cmpsl
les
mov
je
inc
fstps
mov
ret
repnz
adc
jp
sbb
jns
push
jp
sub
rclb
orb
inc
jl
dec
mov
jns
mov
hlt
mov
push
dec
mov
out
aad
mov
push
dec
out
nop
cs
sahf
std
and
lahf
pop
fldenv
popa
out
subb
inc
pop
lock
jbe
xlat
dec
out
pushf
pop
insl
in
jge
ret
scas
in
pushf
lds
pusha
sbb
jge
daa
mov
cwtl
pop
sub
and
cmp
fldl
pop
sbb
js
rolb
pop
call
or
js
xchg
dec
or
cmp
sahf
stos
popf
mov
inc
mov
push
icebp
inc
aam
sub
sbb
fnstcw
mov
ret
xchg
popa
sti
xchg
testb
push
mov
aam
xchg
insb
xor
and
add
mov
jns
hlt
cmpsb
sub
stc
movsb
xor
sbb
in
and
and
pop
cli
and
adc
fiadds
call
or
movsb
cmp
sti
daa
add
inc
out
enter
xchg
mov
mov
sub
es
xchg
push
jbe
dec
push
or
sbb
movsb
and
and
inc
mov
inc
mov
push
ss
insl
jg
mov
mov
into
imul
push
negb
subl
adcb
dec
lret
rclb
shl
je
xor
loope
sub
icebp
pop
xchg
and
mov
jno
mov
push
mov
adc
mov
in
fisttps
mov
int
adc
or
std
fsubs
data16
xor
stos
cmp
add
push
push
and
xchg
aas
stos
ds
lock
sub
shll
mov
fwait
insl
push
add
xchg
movsl
mov
jnp
push
mov
cmpsb
jge
outsl
into
fnstenv
std
push
fstl
bound
shlb
jge
stc
cmp
aad
jbe
negb
sbb
pop
mov
outsb
jmp
mov
roll
cli
fmuls
dec
dec
xor
or
lock
mov
inc
push
fs
aad
add
negl
ficoms
outsl
push
jne
cmp
or
inc
mov
fistl
scas
jle
adc
xor
pop
add
int
xchg
andl
rcrl
mov
mov
add
adc
stos
aaa
test
mov
dec
mov
test
shl
dec
mov
das
pop
xchg
push
push
pop
lock
dec
inc
scas
inc
add
sbb
insb
bound
or
and
lock
fists
push
enter
sbb
mov
mov
pop
mov
dec
push
repz
and
sbb
repnz
lods
aas
jle
inc
cmpsb
pop
jbe
xor
call
sub
or
repnz
mov
xchg
jns
call
pop
jecxz
push
push
xlat
in
loop
lcall
mov
inc
scas
jne
ret
inc
cmp
mov
and
pop
sbb
ret
outsl
test
stos
mov
jnp
jno
pop
xchg
sub
push
je
push
nop
shlb
cmp
mov
arpl
sbb
fstpl
pop
jmp
dec
in
cmp
sbb
mov
mov
xchg
clc
ss
shll
sub
std
stc
xchg
dec
ficomps
and
aaa
push
scas
mov
fstp
and
popf
dec
xchg
xchg
pop
lret
mov
xor
popf
nop
dec
cmp
scas
imul
push
pop
pop
or
sub
arpl
push
mov
xor
xchg
jns
out
mull
mov
mov
aad
ficoml
sti
loope
xor
push
adc
push
dec
iret
sub
aad
push
sub
xor
mov
dec
push
sbb
push
mov
call
and
adc
cmp
sbb
int
cmp
addr16
pop
imul
add
inc
idivb
stc
jp
xor
int3
adc
repz
pop
adc
inc
stc
push
pop
xchg
adc
pop
into
mov
or
lret
dec
rcrl
cmp
push
cmp
add
pop
loopne
xor
mov
sbb
sub
mov
shlb
test
or
and
cld
stos
shlb
sbb
adc
pop
popf
ds
loopne
testl
mov
jg
cmp
mov
pop
outsl
arpl
sti
test
scas
outsl
repnz
ret
fstpt
or
pusha
movsl
jnp
add
cs
lcall
sbbb
loopne
push
jo
sub
pop
mov
jne
dec
clc
jmp
mov
xor
call
lock
xchg
mov
cmpsb
xchg
divl
dec
inc
lds
adc
pop
pop
mov
cmpl
jb
repz
and
aas
mov
daa
add
daa
sub
pop
xchg
loopne
pop
hlt
xchg
adc
nop
xor
xor
and
or
outsb
dec
aaa
lock
clc
insb
pop
aas
lea
andps
or
jmp
mov
xor
push
mull
testb
push
mov
jmp
aaa
xchg
push
inc
mov
sbb
ret
movl
pop
fcmove
sbb
sbb
dec
push
mov
mov
aam
add
roll
jmp
std
nop
ja
in
mov
dec
inc
fistpl
or
add
pop
ret
cmpsb
xchg
or
push
lea
xchg
sbb
mov
or
into
mov
or
imul
pop
mov
push
or
mov
sbb
inc
cmc
mov
lea
test
lret
das
imul
xor
inc
xlat
lods
jmp
mov
sarl
sub
sahf
es
addb
sub
pop
xor
inc
test
xor
popf
ljmp
les
cmp
mov
mov
sarl
mov
fists
xchg
or
nop
and
xor
mov
js
mov
lcall
or
popa
dec
add
jl
aam
jns
cld
es
xor
xor
or
xor
push
xlat
test
lds
out
mov
push
sbb
outsb
stos
outsb
push
cld
xchg
xchg
ja
mov
or
iret
negl
jne
pop
bound
cmp
stos
rcll
mov
and
mov
jnp
push
sub
inc
and
out
sub
add
jmp
jbe
loop
pushf
cld
aas
dec
in
jl
sbb
add
enter
lock
add
rorl
jmp
pop
add
mov
fwait
imul
fsubrp
adc
lds
test
mov
jns
aas
stc
bound
icebp
mov
sbb
out
xchg
adc
push
inc
fnstsw
and
je
outsl
adc
lock
popa
sub
cmp
xchg
xor
lahf
outsl
sbb
xor
mov
js
stos
xor
sbb
loop
add
aas
sbb
shl
jb
jl
and
andl
xor
insl
jne
xchg
mov
xor
dec
sub
mov
inc
rclb
xchg
jp
nop
or
jo
fwait
nop
xorb
rcrb
sbb
test
xchg
sbb
js
cmp
rcr
std
cmp
xchg
arpl
out
inc
push
loop
nop
shrl
dec
aaa
xor
movsl
pop
mov
jo
xor
xchg
and
sbb
int
push
pop
or
jle
lds
push
jmp
cli
cmp
or
pop
mov
pop
lret
xor
insl
push
cmpsb
push
fnstsw
addb
mov
push
add
cmp
cmp
jbe
push
xchg
push
fnstcw
repnz
push
jmp
ljmp
mov
lret
in
test
shll
sti
mov
xor
cmc
fwait
push
mov
rcl
or
sahf
mov
xchg
cmp
out
dec
incl
fsubrs
hlt
outsb
push
dec
loopne
jl
les
and
adc
jae
int
cmp
sub
pop
mov
leave
push
aam
ja
cmp
insb
mov
sti
lret
rcr
xchg
sub
jl
js
mov
fldcw
pop
ja
incb
add
sub
rcrb
loope
pop
cmpsl
stc
push
addr16
mov
icebp
jnp
dec
repnz
jne
pop
cmp
xchg
daa
adc
popf
icebp
arpl
clc
lret
mov
jbe
add
mov
jns
lds
mov
test
sub
stc
push
mov
mov
addl
rorb
inc
cmp
adc
out
cli
dec
mov
jns
and
sbb
adc
jge
sub
jp
jns
rorb
dec
jg
sti
shl
pop
in
adc
repnz
iret
cmp
or
ss
fidivrl
pop
loope
mov
and
bsr
jge
incb
test
inc
test
mov
aas
push
pop
fisubl
mov
sarb
pushf
dec
and
jl
sub
add
fwait
jae
xchg
mov
lahf
push
jnp
push
test
xor
jb
jae
je
xor
adc
ja
mov
cmp
imul
push
xchg
xchg
aas
push
test
stos
rorl
out
dec
fistps
lock
cli
rolb
jl
xor
jae
lcall
xchg
out
mov
js
cmpsb
in
push
push
sbb
push
jle
jecxz
pop
mov
shlb
addr16
fstpt
mov
dec
push
test
mov
in
xor
popf
inc
xchg
sbb
mov
dec
movsb
xorl
and
aas
dec
adc
into
pop
and
xor
andl
inc
sbb
push
pop
sbb
pop
sbb
mov
rolb
es
jle
dec
jne
jnp
ss
popa
sub
insb
int
mov
lods
roll
mov
cld
xchg
fadd
dec
out
loop
and
mov
in
lahf
clc
xor
daa
xchg
pop
jo
inc
xchg
insl
inc
mov
ss
shlb
jl
ss
push
xorb
inc
rorb
loopne
add
push
push
fmul
or
jge
iret
les
icebp
sbb
sbb
dec
mov
test
dec
jbe
cld
addr16
divb
es
hlt
lods
mov
mov
sbb
push
mov
cwtl
lods
or
ror
push
mov
dec
test
sub
xchg
adc
scas
pop
shl
lods
lock
cmp
mov
jbe
lods
dec
jecxz
cld
cmp
mov
lret
out
out
adc
rcrb
cmp
sub
inc
movsl
inc
mov
iret
inc
inc
push
sub
mov
or
aaa
cmp
inc
xchg
dec
mov
mov
ret
loop
mov
cli
adc
sub
push
iret
push
jo
into
sbb
fs
cmpsl
and
inc
inc
enter
xor
xor
add
or
mov
and
test
sbb
iret
jbe
lret
dec
fs
inc
rclb
mov
cltd
ret
movb
push
and
dec
pushf
jo
cmpsl
lds
xchg
addb
xor
cmp
mov
out
je
mov
sti
jmp
dec
out
mov
aas
negb
dec
fwait
aaa
mov
sti
ret
ret
jo
lcall
jne
enter
mov
cld
sbb
mov
pop
add
mov
mov
sub
dec
mov
xor
cmp
fisttpll
cli
mov
mov
mov
or
sbb
mov
jbe
jge
mov
and
jnp
mov
cmp
cmp
or
pop
mov
stos
test
mov
or
pop
push
movsl
bndldx
roll
xor
xor
call
inc
or
addr16
push
push
out
movsl
insl
ljmp
xchg
push
cmp
lock
arpl
js
cmp
call
push
shl
gs
cmp
dec
test
rorb
icebp
sar
push
cmpsb
test
mov
mov
repz
xchg
mov
xchg
lret
push
rolb
mov
das
jbe
pop
or
push
adc
push
cmpsl
test
jle
test
ret
dec
adc
mov
pop
sbb
ret
sub
sbbb
mov
subb
and
inc
pushf
xchg
push
arpl
push
fisttpl
das
test
js
mov
arpl
pop
sub
push
pop
inc
sub
fdivl
xor
jp
aad
test
lret
mov
sbb
and
pop
lret
daa
adcb
mov
addr16
or
mov
xchg
fldenv
pop
mov
push
push
sahf
aad
mov
sub
fcmovnb
and
adc
andb
push
xchg
out
pop
out
mov
lahf
lahf
add
and
jne
pop
cmp
sub
xor
mov
test
clc
xor
fmul
into
cmp
sub
sub
mov
mov
in
add
dec
ret
cltd
das
inc
sbb
in
cmp
fldt
ljmp
mov
add
or
rol
into
push
bound
lods
mov
sub
loope
fxch
loopne
in
mov
popa
movsl
pop
xchg
sbb
outsb
add
mov
rolb
repz
rorl
pop
enter
dec
push
jmp
jmp
iret
mov
fmull
dec
sbb
lock
insb
xor
lcall
xor
mov
test
mov
scas
into
out
sti
shrb
inc
cld
int3
aad
popf
mov
inc
cmp
push
test
fadds
lahf
mov
cld
dec
mov
repz
jl
xchg
sar
fistps
mov
mov
adc
dec
clc
mov
iret
loope
pop
mov
jp
pushf
pop
pop
mov
dec
pushf
adcl
sbb
sbb
push
dec
jl
jle
ret
cmp
cmpsl
jp
jl
or
pusha
insb
out
or
shll
in
enter
adc
stos
adcb
pop
fwait
enter
int3
cmc
loopne
sub
movsb
cmp
ret
dec
loop
mov
hlt
inc
ss
and
dec
gs
jge
lcall
ret
frstor
addr16
sub
in
xchg
adc
cmp
adc
and
rcrl
in
and
sub
push
mov
dec
ret
test
inc
or
push
pop
push
mov
stos
cli
and
idivb
ret
push
rcpps
dec
inc
addr16
fstpl
mov
jb
mov
sbb
sahf
rcl
cwtl
sti
xor
jmp
andb
xor
pushf
movsl
dec
jp
inc
insl
mov
sbbb
std
xor
push
lret
arpl
jle
aas
pop
and
int3
inc
cmp
stos
xor
and
cld
jnp
sahf
mov
int3
aam
mov
bound
pop
jb
jl
dec
mov
sarb
and
shlb
dec
loope
sub
frstor
ds
push
ficoml
cwtl
jl
pop
dec
xchg
push
rcrl
inc
cmc
jb
cmp
out
dec
push
adc
xor
sub
jl
gs
xchg
shlw
or
cmp
ljmp
insb
adc
and
data16
cmp
in
popf
int
mov
sub
push
in
sar
ss
push
jnp
xchg
dec
push
dec
dec
ffree
xchg
xor
lret
rcll
inc
lahf
fwait
sbb
fwait
xor
add
jbe
fists
sbb
shl
cmpsb
lahf
inc
test
ja
fwait
int
bound
cwtl
aad
stc
fcmovnu
xchg
mov
xchg
inc
fldenv
jb
cs
push
ja
push
subb
xchg
pop
mov
jne
inc
jp
mov
pop
popa
dec
movsb
outsl
xchg
stos
adc
cmc
popl
xchg
push
mov
jle
andl
fnstcw
mov
cmp
xchg
inc
sub
or
mov
cmp
mov
ds
pop
push
jo
aas
mov
push
mov
mov
iret
cmpsb
xchg
outsl
rorl
sbb
and
popf
ret
xchg
and
inc
pop
xchg
sbb
loope
mov
insb
jne
adc
jo
mov
adc
push
iret
jecxz
int
mov
add
test
mov
jne
int
mov
out
and
lahf
pop
xor
adc
into
add
loope
push
imul
leave
cmpsb
addr16
jnp
xchg
sub
push
and
mov
dec
cmc
mov
cvtps2pi
js
jns
xchg
or
addl
dec
inc
mov
lcall
loopne
mov
pushf
inc
mov
test
xor
jecxz
adc
inc
movsb
inc
mov
in
cmp
lahf
mov
lock
and
das
xor
sbb
ja
fadd
movsb
sbb
mov
inc
cmp
sub
sub
outsb
gs
or
push
add
mov
icebp
idiv
push
repnz
fdivrp
mov
outsl
loope
int
idiv
js
push
pushl
aad
jbe
adc
daa
mov
mov
jo
mov
call
icebp
mov
adc
jbe
in
lods
fdivs
lods
mov
jl
sub
and
adc
inc
pusha
std
ret
fnsave
xor
and
rolb
inc
push
sbb
mov
icebp
sub
jp
nop
fidivrs
loopne
mov
push
adcl
mov
sbb
mov
out
fsubrs
add
push
push
adcb
rcl
sti
or
subb
hlt
and
mov
jle
ja
or
pusha
sub
jb
or
fxch
cmpsl
push
push
add
push
pop
inc
jp
dec
mov
and
aas
out
mov
clc
sub
inc
aam
dec
sub
adcb
or
je
inc
jno
scas
in
mov
imul
push
and
sub
aad
add
pop
adc
and
leave
dec
push
loop
jno
cmpsb
and
and
dec
loope
adc
shl
xchg
cltd
inc
or
mov
addb
rcr
popf
ja
mov
xchg
lods
jo
xchg
add
mov
adc
mov
mov
iret
loopne
mov
ss
movsl
lcall
les
jnp
sub
out
nop
fadds
cmp
bound
push
lret
jbe
xchg
sub
add
fsubp
daa
clc
aas
ds
cs
xchg
int
je
push
test
inc
orb
and
lods
mov
pop
cltd
mov
mov
pop
dec
mov
hlt
sahf
cmp
sbb
ret
sub
pop
int
out
sbb
mov
xchg
xchg
icebp
adc
iret
adc
xlat
aam
rcrl
lock
mov
out
cld
pop
lods
jns
xor
xchg
testb
verr
loop
rclb
les
out
and
push
cmpsb
repnz
lock
cltd
ss
clc
mov
cmp
int
adc
data16
mov
sti
gs
out
sbb
mov
adc
pop
shr
lds
enter
jnp
fimuls
popf
cmpsl
ljmp
int3
in
lea
fisttpll
sbb
addr16
sub
mov
lods
fimull
insl
cmpsl
rcll
and
lret
pop
pushl
mov
aad
das
dec
pop
addr16
sub
cmp
mov
lea
ss
pop
aad
jb
cmp
out
jns
aas
rclb
push
push
jo
in
cli
das
movsl
in
jecxz
sarl
mov
sahf
roll
adc
sbb
xchg
sbb
fwait
hlt
inc
outsl
and
sub
dec
mov
sbb
test
aam
filds
shr
inc
lds
scas
hlt
fmull
fneni(8087
cmp
xor
mov
push
lcall
aaa
jne
adc
incb
repz
sub
pop
leave
outsb
and
adc
sbb
shll
jl
je
mov
gs
add
mov
test
int
sub
shll
call
test
test
ret
int
fstps
das
pop
cmpsb
das
ss
outsl
and
pop
imul
sahf
nop
inc
jecxz
xchg
test
ja
adc
pop
scas
call
push
and
jmp
cmp
mov
faddp
sbbl
xor
push
inc
fwait
adc
xor
mov
imul
cmp
loop
xchg
fbstp
xchg
or
xor
das
cs
xchg
inc
mov
dec
fidivrs
outsb
sbb
mov
inc
push
bswap
mov
push
xchg
cld
jge
shlb
sub
test
test
push
mov
scas
lret
pop
push
sbb
call
mov
pop
mov
sbb
inc
call
add
cld
lock
data16
int
fsts
cmpsl
and
xchg
shlb
mov
lahf
nop
mov
push
cli
sbb
push
icebp
jb
cmp
push
dec
repz
adc
push
fstps
decl
sti
inc
xor
in
cld
and
icebp
jo
ss
pop
mov
pop
inc
int
jns
jae
adc
or
lock
pop
data16
push
jle
scas
cmp
mov
jo
into
cmpsb
mov
popf
ljmp
mov
mov
pop
inc
dec
cmp
mov
add
imulb
std
cltd
lahf
js
push
faddl
inc
sub
test
mov
push
mov
pushf
cmp
mov
and
in
mov
sbb
jl
xchg
cmp
push
and
jbe
loop
push
jns
movsl
sbb
jo
roll
sub
imul
icebp
outsb
and
call
in
fldenv
sahf
sbb
das
lret
out
mov
lahf
xchg
data16
cmpsb
lods
out
repnz
outsb
mov
add
imul
dec
fmul
mov
das
push
dec
mov
mov
push
ret
cmp
sbb
cmp
inc
jne
daa
pop
mov
loopne
mov
mov
jl
jmp
sbb
jae
jno
xchg
arpl
and
add
inc
ret
outsb
dec
add
in
cmc
xor
push
push
sbb
xchg
jbe
mov
mov
outsb
in
fstl
push
inc
inc
ret
or
sbb
xchg
in
fsubs
push
add
cld
addr16
mov
notl
rol
jecxz
sub
mov
jnp
push
shlb
pusha
mov
lea
sub
outsb
push
jne
inc
mov
ljmp
std
out
jb
bound
add
cmpl
insl
jns
lret
sub
sub
mov
inc
mov
int3
inc
pusha
cmp
cwtl
add
jmp
stos
pop
push
mov
loopne
adc
out
jl
int
cltd
xor
pop
lea
and
sbb
and
mov
mov
dec
adc
arpl
leave
push
pop
dec
push
sub
insb
push
xchg
lcall
stos
mov
sub
stos
addr16
sbbb
leave
stc
out
jns
dec
inc
or
scas
stc
movsl
test
cltd
imul
ljmp
lahf
icebp
rcll
sbb
sub
cmc
cmp
leave
cld
test
popa
pop
stos
xchg
dec
sub
bnd
push
stc
enter
lds
test
cmp
sbb
push
movsl
imul
mov
xchg
lret
inc
dec
int
xchg
pop
adc
imul
or
lods
in
js
fists
gs
or
es
sahf
add
dec
mov
into
or
daa
scas
or
faddl
dec
lock
adc
insb
out
add
sub
mov
mov
addr16
fwait
sub
scas
idivb
pminsw
add
je
mov
into
xchg
pop
shl
fs
ja
mov
loope
lret
push
repz
jl
inc
leave
adc
call
jno
scas
lcall
sbb
xchg
dec
aas
xchg
in
sub
push
divb
jle
adcl
add
in
sarl
cltd
or
pop
pop
adc
cli
imul
loope
lods
xchg
loopne
mov
and
mov
lcall
dec
xchg
cmc
jnp
and
mov
xchg
mov
xchg
jge
test
loope
into
popf
dec
xor
mov
lock
xchg
cmp
lcall
lahf
jle
mov
rorb
insb
lcall
and
lret
and
inc
push
loop
lret
dec
leave
or
lahf
andb
fcomi
testb
mov
add
inc
push
jecxz
pop
fisubrs
push
je,pt
xchg
cmc
mov
ljmp
push
mov
xchg
ljmp
loop
add
clc
enter
mov
jmp
inc
ficomps
push
test
pop
mov
fs
inc
stos
or
pusha
outsl
mov
test
push
ret
push
cmpl
in
scas
xor
xchg
sub
movsb
pop
cmpsb
pop
test
sbb
jmp
dec
dec
shll
jae
pop
push
fscale
cmpsl
add
das
mov
hlt
xchg
out
jno
or
adc
mov
mov
sub
xchg
cmpb
add
outsb
mov
or
ja
xor
sbb
mov
scas
jo
fimull
push
push
scas
push
mov
jns
fsts
es
mov
xchg
int
xchg
xor
test
push
fdiv
push
ja
mov
pop
and
sub
mov
inc
fwait
mov
sarb
adc
pop
sbb
out
insb
lods
lea
or
and
mov
jno
dec
int3
stos
xchg
dec
jecxz
push
in
jno
cltd
mov
mov
sahf
pushl
test
xlat
pop
jo
xor
jmp
adc
pop
cmp
push
cld
daa
insl
dec
cmpsl
push
adcb
es
in
and
xchg
test
add
lods
mov
insb
inc
or
pop
fsubl
pop
dec
jp
inc
mov
cmp
mov
push
or
mov
dec
pop
out
pop
lcall
inc
je
idivb
sub
push
cmp
and
mov
lods
jp
loope
mov
mov
adc
lock
push
aas
lods
leave
clc
jecxz
sbb
push
sub
mov
out
movsl
mov
ficoml
es
sub
in
xchg
pop
xchg
in
push
jno
mov
loope
xchg
xor
xor
cmc
incb
test
lock
mov
fsubrs
mov
mov
push
jno
lahf
andl
pop
ret
or
sub
xor
pop
out
add
fidivs
mov
add
pop
sbb
cli
mov
mov
mov
cmp
pop
hlt
cmc
dec
adc
adc
div
lret
aaa
sub
push
rolb
sub
sbb
mov
mov
cwtl
sbb
mov
mov
lcall
dec
fstpt
cmp
movsb
out
lahf
cmp
fistpll
int
bnd
pop
jecxz
mov
mov
test
adc
xchg
sub
mov
inc
mov
pop
mov
lret
cmp
pop
sbb
js
jns
sub
sbb
pushf
push
inc
xor
dec
xchg
rolb
adc
jae
pop
imul
or
cmp
rcrl
inc
movsl
fistps
rcrb
rcrb
mov
aad
push
out
mov
scas
ret
dec
fwait
xor
xchg
in
jbe
xor
mov
out
dec
iret
addb
mov
add
cld
addb
mov
addr16
call
cli
and
mov
filds
outsb
hlt
sti
hlt
mov
mov
call
xor
push
xor
ficoms
ss
or
jae
lcall
xchg
sub
sti
hlt
jae
inc
push
clc
cmp
testb
sbb
imul
push
lcall
ret
scas
les
scas
repz
test
ljmp
out
cmpsl
or
in
sar
mov
outsl
xchg
scas
outsb
ss
push
stos
dec
shll
repz
push
jne
addr16
jmp
sub
or
fimuls
add
aad
aad
pusha
stos
imul
sbb
or
repz
ror
mov
xchg
jl
inc
adc
arpl
add
mov
ficoms
scas
mov
ds
pop
shrl
cmp
std
fstpt
mov
popl
xchg
mov
inc
mov
movsbl
cltd
addb
push
jae
dec
and
or
fildll
adc
add
int3
push
dec
in
xor
lds
rorb
cmp
fdivrl
and
and
ret
rclb
inc
inc
add
daa
or
nop
fcmovb
add
jmp
pop
cmp
push
and
or
pop
push
pushf
add
push
stos
sbb
aaa
movsb
lret
xchg
push
outsl
lods
xor
mov
mov
or
xchg
sbb
add
fidivrs
mov
xchg
test
mov
call
in
adc
sbb
test
push
ret
sbb
pop
dec
or
ss
mov
push
xor
mov
imul
scas
inc
popf
xlat
outsl
cmp
sbb
cmpl
out
pop
mov
inc
outsb
insb
out
out
std
lea
movsl
mov
ficoml
sub
iret
adc
cli
pop
daa
mov
push
lock
nop
les
and
pushf
test
sti
mov
in
mov
sub
jno
cmp
push
xor
stos
cwtl
rcrl
cmc
add
orb
adc
lahf
xchg
pxor
aas
and
movb
je
jb
popf
aad
xlat
inc
sub
pop
aam
xchg
ljmp
mov
jno
dec
popa
xchg
xchg
push
adc
adcb
fs
test
push
loope
inc
dec
lea
push
int3
sub
and
lds
in
pop
add
daa
out
jmp
sbb
imul
mov
or
push
loopne
mov
mov
out
mov
jns
stos
verw
lds
lahf
aam
push
xlat
loope
xchg
xor
pop
jae
add
int
rcr
mov
pop
clc
cmp
and
xor
arpl
push
fdivl
ss
jge
mov
mov
mov
inc
cli
push
loope
adc
cmpsl
mov
inc
and
mov
jle
subl
ljmp
push
ljmp
cwtl
bound
loopne
sub
pop
shll
xchg
ret
mov
sub
inc
daa
adc
ret
or
push
jle
dec
dec
push
je
xchg
scas
popa
pop
div
out
clc
out
ss
cwtl
jmp
and
les
jg
pminub
jns
mov
pop
mov
cmp
jne
int3
pop
mov
repnz
pop
roll
lds
daa
ja
mov
in
jae
lret
lea
sbb
xchg
jae
int
iret
xchg
loop
sub
cmp
js
xor
jb
fisubl
pop
sbb
xbegin
frstor
sbb
data16
push
cmp
aaa
dec
repz
sub
je
jle
test
mov
sub
sbb
and
sub
ja
dec
or
pop
shrl
mov
sub
cmp
xchg
or
add
inc
add
popa
or
push
cmpsb
cld
pusha
lds
sub
xchg
dec
arpl
mov
sub
sub
cwtl
mov
les
push
xchg
push
push
xlat
popf
lods
pop
pop
cli
ret
adc
std
mov
or
mov
mov
test
ss
add
bound
jl
sub
subl
popf
xchg
hlt
push
inc
cmp
cwtl
aad
inc
fstps
lahf
xor
mov
lock
shlb
mov
outsl
mov
or
loopne
or
jns
lods
fsave
inc
cwtl
mov
pop
stos
pusha
pop
inc
adc
shrb
fnstenv
setg
rorb
mov
xchg
int3
or
sbb
movsl
add
cmpsb
add
adc
push
out
daa
leave
loopne
popw
push
cmpb
or
aas
incb
inc
add
sbb
jo
push
pop
xchg
xchg
mov
push
addl
shl
jb
push
dec
mov
push
pop
mov
inc
insb
cmp
out
mov
push
out
xlat
jo
xchg
sbb
movsb
lcall
or
mov
pop
sub
cli
mov
mov
push
movsb
call
mov
ret
aad
sub
xchg
popa
push
sti
cmp
sub
xlat
aas
test
cmpsl
cmp
jl
sbb
push
and
jbe
in
jecxz
enter
and
sbbl
sarl
xchg
xchg
fists
xor
aam
movsb
mov
mov
outsb
popa
sbb
or
addr16
sub
ja
decb
shll
push
jg
pop
je
fldl
in
sarl
mov
pop
sub
loope
test
mov
xchg
testl
je
sub
push
jno
out
xchg
loopne
data16
es
mov
inc
ljmp
into
ja
loopne
mov
xor
mov
jge
xchg
mov
or
sbb
andb
mov
inc
icebp
pop
fistps
xor
popa
dec
out
xchg
xchg
pop
fistpl
and
inc
inc
add
popa
lods
push
adc
xchg
adc
sahf
lret
xchg
xchg
fstl
mov
mov
jmp
nop
test
push
sbb
out
cmc
dec
std
insb
scas
cmpsb
das
lcall
popa
or
je
mov
cmp
dec
jnp
and
clc
repnz
sub
jmp
xchg
jae
sbb
or
mov
xchg
clc
xchg
inc
addr16
psrlq
sub
xchg
es
pop
jns
clc
xchg
add
or
in
fwait
jecxz
push
das
and
or
xchg
dec
add
clc
add
and
push
in
jnp
xchg
adc
andb
adc
jle
in
mov
xchg
mov
pop
jmp
test
push
pop
mov
jae
sbb
sub
push
repz
mov
lock
scas
int3
jmp
sbbl
jne
cmpsl
jns
mov
lds
dec
sbb
mov
mov
pop
jecxz
inc
imull
adc
push
pop
aam
sbb
adc
cltd
adc
mov
sbb
test
icebp
pop
mov
lahf
out
js
lret
sub
or
gs
pop
sahf
sbb
xchg
cs
insl
push
lods
daa
dec
adc
out
push
inc
das
fisubrl
jbe
xchg
roll
adc
popf
mov
sbb
ret
into
movsb
cmp
jge
pop
xor
imul
cltd
cwtl
les
sahf
into
test
rcrl
push
sarl
sarb
std
ret
jg
dec
pusha
mov
lds
ja
jmp
push
jb
icebp
inc
or
clc
jae
outsl
pushf
testb
and
cld
lods
mov
mov
movsb
xor
in
xchg
notl
sbb
jno
sbb
faddp
test
cmc
lret
xor
scas
inc
loopne
and
lret
cwtl
lcall
jmp
mov
daa
dec
dec
int3
es
dec
popf
movsl
jae
mov
gs
fbld
sub
push
mov
or
and
adc
mov
out
mov
mov
pushf
dec
fmul
lea
xchg
in
mov
das
and
or
xor
lea
mov
scas
out
fstps
adc
mov
sub
inc
ljmp
jbe
addr16
sub
xor
pop
sub
ret
inc
aas
cmp
mov
pop
jg
add
pcmpgtb
or
test
adc
iret
cmp
xlat
lcall
nop
fiaddl
hlt
or
neg
xchg
jno
in
mov
sub
out
jns
push
mov
mov
pushf
sub
mov
roll
and
in
clc
adc
in
xor
xchg
xchg
push
aaa
cmp
ss
adc
in
dec
adc
clc
leave
int
adc
push
cmp
jae
and
lret
or
jb
jae
cld
xor
and
mov
mov
xchg
stc
dec
insb
xchg
je
cmp
mov
stc
popf
add
push
push
mov
inc
push
and
mov
sar
test
ret
outsb
adc
xchg
pop
adc
in
div
fwait
pop
xor
cmp
popf
sbb
cmpb
or
leave
repnz
dec
jecxz
mov
mov
cmp
add
mov
les
stc
scas
pushf
jno
xor
pop
and
sti
fdiv
jge
or
in
jl
vpcmpestrm
int3
pusha
movsl
inc
das
xor
add
push
ret
sub
xor
icebp
aas
ret
scas
lret
mov
lret
push
clc
mov
adc
loope
roll
pop
mov
mov
xchg
pop
mov
cmp
scas
xchg
add
dec
add
cmp
imul
cmp
mov
xchg
std
dec
xchg
add
outsl
cs
xor
loop
ficomps
int3
les
cltd
fs
testl
push
jg
leave
out
mov
add
xadd
pop
jo
stos
add
xor
inc
jle
les
jne
mov
or
pop
stos
imul
jecxz
jns,pt
sub
mulb
push
inc
icebp
repz
fistpl
inc
sbb
into
xor
mov
pop
fistps
cwtl
add
xchg
leave
jb
mov
xchg
and
and
or
pop
iret
push
int3
mov
pop
mov
popa
mov
stos
sub
and
mov
leave
outsl
jge
bsf
cmpsl
add
in
inc
xor
mov
shr
pushf
sti
jne
mov
imul
test
fcomi
lock
gs
jg
inc
sahf
xchg
shl
mov
push
aas
xchg
cmp
cli
pushw
mov
aas
add
or
jg
adc
pop
ds
fsubr
cmp
inc
adc
sub
int
xchg
sbb
sub
outsb
mov
mov
popa
xchg
insb
push
icebp
dec
sbb
sbb
jno
dec
pop
ret
pop
jnp
daa
or
dec
mov
int3
into
out
sbb
aas
outsb
aad
enter
gs
adc
inc
and
add
sbb
mov
jno
mov
sbb
jl
push
popa
pop
add
sub
push
ret
negb
mov
xor
adc
and
neg
das
mov
pop
aaa
cltd
dec
cmp
loopne
sub
out
jbe
cmpsb
xor
xor
add
mov
jb
or
bound
xorb
ficoms
xchg
sbb
cmp
loope
outsl
mov
adc
nop
sbb
loopne
nop
or
and
loop
stc
push
mov
jecxz
xor
and
arpl
xlat
in
cld
rcrb
sbb
shrb
mov
test
and
dec
and
lods
sub
aas
xor
mov
decl
les
pop
xor
mov
aam
add
inc
push
xchg
push
test
aam
push
fisubrl
pushf
xor
mov
or
mov
sub
cwtl
ss
inc
aas
addl
jg
cmp
scas
push
adcl
rclb
nop
push
imul
sbb
xor
push
movsl
xchg
mov
popf
and
push
lods
xor
sbb
mov
cmp
push
repz
jb
lcall
xchg
mov
es
fldt
cmpsl
adc
cmc
pop
aaa
call
sub
or
add
mov
cld
cmpsb
das
repz
jmp
mov
shlb
xorl
inc
ja
sub
mov
jno
inc
push
out
add
fmuls
adc
rclb
pop
pop
das
push
clc
push
push
add
adc
aaa
in
xlat
add
push
aas
or
cli
cwtl
sbb
dec
jl
sub
lods
or
lock
lods
es
daa
cmp
add
xor
xchg
pop
loop
sub
inc
inc
xchg
cmp
cli
or
and
add
lahf
mov
sbb
stc
push
push
mov
in
xor
inc
xor
add
pop
jne
xchg
loop
addl
jb
subb
and
sti
outsl
fwait
cmp
pop
dec
ljmp
subb
ret
xchg
and
jno
movsl
push
test
lea
jg
mov
mov
aam
mov
or
mov
arpl
adc
inc
lock
mov
ss
cmp
pop
sub
js
xchg
jge
out
mov
sarb
cmp
inc
adc
test
mov
jne
jmp
out
test
jl
xchg
lds
mov
incl
jp
adc
mov
dec
adc
icebp
loop
add
inc
repz
xor
jp
mov
outsl
sbb
lea
nop
xor
mov
lret
xor
or
loope
test
adc
pusha
inc
jl
or
aad
leave
sub
mov
into
cmp
sub
push
inc
push
cs
pop
out
adc
pop
sbb
mov
mov
add
scas
leave
data16
pop
pop
ret
push
lock
or
ja
or
add
out
int3
in
inc
je
pop
jns
xchg
xchg
sub
movsb
adc
add
pop
cltd
incb
and
test
pop
jle,pt
adc
push
jae
dec
rorl
add
shrb
mov
mov
mov
jno
sub
das
xchg
popa
and
lods
sti
scas
jge
test
in
adc
xchg
leave
jo
out
out
adc
mov
and
or
aas
push
pop
hlt
jnp
push
ja
test
mov
or
mov
xchg
into
int3
and
mov
cmp
lret
out
popa
dec
pop
sub
cltd
adc
pop
xchg
inc
mov
iret
mov
dec
out
mov
mov
sbb
outsl
pop
jmp
in
cmpsb
add
in
xchg
dec
lods
shl
in
cltd
leave
pop
jge
push
imul
or
ret
push
xor
leave
mulb
push
nop
popf
pop
add
xor
rorl
jl
lret
inc
popa
imul
pop
dec
rolb
int3
dec
push
daa
adc
test
fsts
add
mov
adc
and
mov
cmpsl
push
fwait
lock
and
or
jns
lea
jp
scas
cmp
inc
std
rorb
add
out
popf
add
pop
dec
mov
cs
adc
inc
xchg
push
xchg
pusha
mov
ret
mov
divb
addb
in
lret
cmp
xchg
mov
ret
inc
sub
int3
imul
jmp
iret
and
subb
pushl
dec
add
mov
stos
jp
idivl
jns
jl
aas
rorl
mov
sarl
popf
int
lret
sarl
dec
jmp
pusha
pop
outsl
test
out
shlb
icebp
sbbb
idivb
mov
nop
ds
sbb
push
loopne
stc
add
fiadds
cmc
mov
in
icebp
leave
outsl
inc
pushl
sbb
ret
or
leave
shrb
cmpsb
mov
sub
fcmovu
and
imul
inc
xchg
lods
sbbl
mov
sub
shrb
fistpll
jp
pop
in
inc
jns
pushf
loopne
repz
dec
pusha
pusha
test
imul
fwait
inc
fisttpll
add
cmpsb
mov
sarb
addb
xlat
test
cmp
shrb
iret
push
mov
fcompl
negl
jle
sbb
push
subb
jl
cld
mov
xchg
ret
xrelease
vmaxss
adc
mov
mov
call
fisttpl
inc
add
or
mov
mov
adcl
mov
cmpsl
jg
mov
in
sbb
mov
push
pop
inc
ljmp
rclb
loop
cmp
lcall
das
inc
xor
mov
bound
dec
mov
pop
fs
dec
mov
sbb
adc
mov
lret
push
xchg
mov
push
pusha
push
push
stos
add
xchg
rcl
std
sahf
mov
aad
and
xchg
ljmp
mov
mov
imul
mov
scas
jbe
jmp
sbb
icebp
inc
mov
xchg
or
into
mov
fxch
xor
lea
shr
out
mov
jge
pop
clc
push
test
xchg
push
mov
insl
sub
fdivrl
inc
mov
mov
or
movsl
push
mov
xor
adc
andb
ror
fs
pusha
xchg
and
lds
xor
jbe
lahf
jns
xchg
push
adc
in
lods
ret
bound
pop
pop
jb
loop
fbld
xchg
xchg
das
xor
mov
push
shlb
jle
lea
lods
and
sub
add
stc
outsb
dec
mov
ror
pop
mov
ja
into
cwtl
mov
cmp
jge
xor
rclb
cmp
call
add
mov
scas
mov
xor
movsb
int3
sti
xor
adc
enter
pusha
push
fwait
add
dec
fdiv
push
rolb
mov
mov
pushf
or
push
mov
xor
dec
arpl
fwait
int3
cmp
pop
jmp
xchg
pop
ss
in
jg
dec
test
cmp
or
ret
mov
xor
xor
pop
or
iret
int
aas
lret
mov
mov
mov
dec
mov
pop
pop
pop
push
stos
dec
mov
mov
loope
out
push
and
inc
xchg
ret
jae
insb
nop
leave
adcb
mov
ljmp
and
out
add
sbb
mov
leave
lahf
cmp
cmp
mov
inc
jg
divl
orb
int
mov
dec
ss
jl
sbb
xchg
sbb
sbb
ret
stos
xor
cmp
movsb
int
mov
xor
cld
mov
repnz
loope
jae
lret
hlt
jae
mov
orb
dec
mov
jnp
aad
std
xchg
mov
xchg
cltd
mov
add
aad
xlat
cmc
mov
cmp
or
lea
sbb
adc
xchg
ds
test
sub
jbe
and
sti
cmpsb
call
push
data16
aaa
sub
rcrb
loop
mov
xchg
adc
movsb
pushf
pop
jg
movsb
lods
loopne
pop
jnp
mov
in
add
adcl
and
rorb
cmp
inc
or
push
shl
enter
cmpsl
lods
ret
pop
lds
insb
sbb
cld
popf
jnp
shl
sbb
add
hlt
mov
mov
sarb
xchg
push
cmp
or
sbb
ss
xchg
in
int
mov
sbb
mov
test
fstl
adc
adc
xchg
jecxz
mul
pop
push
orl
mov
mov
sub
xlat
and
es
cmp
popa
rclb
stc
enter
mov
scas
inc
pop
sub
adc
js
dec
stos
sti
push
aam
xchg
idiv
cmp
fcomps
cmp
add
in
daa
mov
adc
orl
jno
ret
xor
fisttps
adc
pop
mov
sbb
loop
lea
jae
add
pop
push
add
dec
repnz
pop
xchg
in
gs
cmpsl
nop
xchg
or
cmp
and
jp
add
dec
addr16
iret
incb
add
fists
jmp
pop
mov
call
sahf
xor
outsl
push
jl
iret
mov
xor
mov
dec
shlb
add
and
mov
pop
mov
jb
lea
in
pop
xchg
test
or
xor
es
stos
pop
dec
jp
mov
cltd
xchg
mov
mov
mov
sbbl
lret
fbstp
jle
push
into
lea
xlat
rorb
adc
inc
mov
roll
mov
mov
sbb
bound
push
pop
pop
clc
lahf
lret
pusha
nop
pop
push
mov
pop
add
xchg
xchg
test
addr16
dec
negl
mov
xor
sub
inc
and
cmp
fwait
and
pop
cmpsb
dec
addl
mov
in
fisubs
iret
cmp
pushf
or
or
bswap
sub
hlt
pop
sbb
nop
ficompl
pusha
xchg
jecxz
out
repnz
outsl
out
les
sbb
push
into
lcall
mov
les
and
pop
nop
pop
jle
loope
cmpsb
inc
scas
icebp
aas
pusha
cld
popa
aaa
mov
jne
bound
xor
xchg
push
and
push
imul
xchg
adc
cmpsl
mov
decw
lret
jne
or
xchg
cmc
xchg
in
xor
cmp
xor
shll
xchg
mov
pop
bound
jb
in
lods
ficoms
fistl
testb
dec
lods
mov
xchg
jb
push
mov
mov
push
push
insl
cmp
sub
inc
leave
inc
aaa
lock
loope
sbb
xchg
or
lea
push
xor
nop
inc
in
das
mov
icebp
inc
lret
dec
inc
or
jg
test
fstp
int3
pop
mov
mov
jmp
test
int
in
and
dec
xor
cmp
movsb
jns
sub
ljmp
sbbl
add
inc
cmp
cmp
out
pop
mov
jle
scas
loopne
out
and
das
sbb
xchg
mov
cs
adc
into
in
movsb
or
gs
and
in
or
fs
divl
mov
xlat
in
mov
lods
push
rolb
mov
xchg
adc
mov
loopne
rol
push
outsb
rorl
xor
jp
int
jg
inc
and
aaa
and
imull
or
push
pop
mov
mov
addl
fiadds
push
imul
popf
push
jo
cmp
cwtl
shrl
push
xor
pusha
mov
sahf
test
ja
mov
test
loope
sahf
or
fistl
adc
dec
lods
arpl
repz
pop
bound
push
insl
adc
adc
shlb
jle
fcmovnb
cmc
jmp
sub
cmc
inc
ret
adc
inc
cmp
mov
xlat
mov
mov
js
jge
test
xchg
aaa
pop
call
in
out
mov
add
aam
cmp
sbb
sbb
bound
icebp
scas
imul
jb
xchg
jb
jne
aaa
sar
arpl
pop
or
pop
mov
sahf
cmp
mov
sub
sbbb
push
push
push
xchg
push
je
popf
cmpsl
push
stc
sar
jne
fnsave
mov
push
inc
jnp
sub
dec
pop
pop
cmp
call
add
repz
pop
fidivl
cmp
and
mov
ret
add
xor
push
div
or
hlt
pop
xchg
pop
xor
pusha
mov
nop
jp
rolb
mov
jbe
push
pop
mov
test
iret
mov
jl
fidivl
jne
cld
lds
pop
outsb
arpl
enter
aas
and
repnz
mov
add
mov
ja
jae
data16
xor
mov
mov
cmp
je
or
aam
jle
cmp
dec
or
clc
scas
or
inc
jne
mov
cli
xor
cmp
stos
dec
cmp
sub
xchg
mov
sahf
sahf
aam
add
add
pop
xor
fs
jecxz
jl
add
or
inc
pop
div
mov
mov
add
add
scas
in
ret
sahf
rolb
jmp
xchg
and
and
test
orl
dec
xlat
cmc
arpl
cli
pop
inc
daa
add
inc
xchg
and
push
test
xchg
adc
jle
xor
inc
jb
stos
sub
aaa
jnp
les
mov
add
mov
das
fwait
into
aaa
insb
or
inc
sbb
aaa
sub
mov
scas
jnp
mov
mov
imul
pop
popa
xchg
or
into
mov
test
ljmp
lahf
sbb
pop
or
xor
and
leave
gs
xor
xchg
cmp
and
les
scas
fsub
dec
sub
cld
push
into
aas
pushf
arpl
mov
push
pop
xor
adc
test
lcall
loope
cmpsb
or
pop
sbb
mov
mov
pop
jp
push
fsubs
into
push
inc
jbe
rorb
rcr
imull
inc
jg
xor
dec
cmp
mov
mov
xchg
sub
mov
mov
fs
dec
dec
jge
popf
push
push
icebp
cs
cld
add
push
test
pop
fcmovu
mov
push
jecxz
lea
into
in
imulw
mov
or
ret
cmp
out
push
push
jb
cli
jb
fistpll
out
xchg
mov
movsb
insl
cmp
mov
ljmp
adc
ss
fcoms
leave
int3
jne
adc
adc
sub
adc
sbb
pusha
jns
jl
add
sub
xchg
stos
adc
sarl
shll
and
cmp
into
addb
insl
xor
pop
mov
mov
bound
leave
cmp
nop
and
xchg
xchg
cli
dec
movsb
inc
int
push
sub
in
ss
int
push
imul
xor
inc
fistpll
out
xchg
jl
andb
jmp
addl
adc
sbbl
sbb
in
mov
jmp
jge
notb
call
shll
or
push
hlt
xor
sti
jp
sbb
js
fcomi
mov
shrb
xchg
gs
into
addl
sbb
xchg
sbb
mov
xchg
adc
lcall
pmaddwd
stos
das
mov
fs
add
outsb
and
jbe
adc
pop
lret
jmp
dec
jp
outsl
mov
std
push
insb
adc
adc
sub
cmpb
sub
jnp
mov
adc
sarl
cmp
iret
inc
outsl
insb
xchg
add
fcoms
push
repnz
sub
icebp
idivb
aad
push
jge
out
outsl
sub
movsl
sbb
nop
mov
sbb
xchg
push
mov
fs
ljmp
push
xchg
push
loopne
mov
mov
push
or
das
sahf
orb
nop
push
fs
popa
xchg
sarl
jns
mov
dec
mov
add
xor
dec
lea
xor
lahf
scas
jae
loop
addl
pop
jmp
ffreep
inc
in
push
mov
out
inc
lods
jbe
popf
adc
cmp
cs
subl
lock
jo
pop
and
stos
jl
mov
push
clc
imul
inc
add
fcoms
xor
push
aaa
xor
idiv
shll
movsb
scas
dec
mov
fstps
loope
out
sub
jno
mov
mov
add
xchg
addl
movsb
mov
ret
data16
nop
push
sub
mov
add
leave
push
mov
insb
pop
rep
out
push
or
loop
pop
cmp
jno
je
std
cld
add
dec
push
aad
addr16
push
bound
mov
sub
adc
push
xor
iret
mov
outsl
ljmp
mov
pop
out
add
mov
push
cmp
xor
je
inc
popf
in
mov
inc
xor
imul
movsb
sub
int3
mov
xchg
inc
dec
insl
lea
out
idivl
fisubs
lret
in
mov
mov
fwait
js
inc
lcall
or
adc
punpckhbw
or
push
cmp
insb
xchg
pop
scas
add
ds
push
mov
xor
dec
movsb
leave
dec
xchg
mov
and
cmp
push
push
loopne
jb
in
sbb
mov
shrl
mov
outsl
pop
ja
pop
pop
arpl
cmp
mov
test
ss
mov
xchg
xlat
push
adc
addr16
xchg
and
pop
push
dec
int3
outsb
in
xor
jmp
push
mov
push
sbb
pop
stos
bound
pop
das
pop
movsb
cmp
sahf
loopne
xchg
hlt
scas
xor
inc
ds
add
lret
mov
cli
test
std
lcall
xchg
cmpsb
aaa
xchg
lods
and
xor
cmp
xchg
cmp
and
add
cmp
dec
test
insl
loopne
outsl
xchg
cltd
pusha
dec
mov
imul
and
xchg
pop
push
xor
push
cltd
and
iret
sub
mov
adcb
mov
adc
push
mov
xchg
inc
mov
dec
gs
rep
and
xor
out
imull
lds
xor
in
add
lret
inc
lock
push
nop
sbb
insl
push
cs
pop
arpl
mov
and
test
int
xchg
mov
inc
fldcw
out
lock
sahf
jecxz
pop
mov
std
xor
sahf
ja
es
fistl
mov
cmp
cld
and
and
add
out
pop
in
test
mov
in
add
xchg
sbb
mov
push
pop
lret
jl
popa
ret
adc
je
xchg
cmp
adc
fistps
cmp
insb
or
xlat
out
mov
data16
lret
push
dec
scas
sub
dec
adc
xlat
push
in
dec
xchg
push
and
pop
push
aaa
xchg
push
les
sub
jbe
xchg
les
pop
test
das
outsl
popa
mov
xlat
xchg
loope
aam
sbb
xchg
inc
or
fldcw
mov
cs
shlb
fsubrl
mov
stc
ds
pop
cs
lea
je
adc
inc
ja
inc
xchg
outsl
or
outsb
jns
mov
enter
loope
outsl
add
lret
mov
neg
sub
adc
mov
adc
gs
cld
imul
rcr
xchg
icebp
inc
mov
xchg
outsb
icebp
sub
dec
sub
dec
mov
cmp
push
dec
mov
push
xchg
cmp
aam
xor
xchg
aad
push
mov
push
fisubl
movsl
je
mov
cmp
jnp
add
fcomps
xor
or
mov
push
xor
mov
in
mov
push
lahf
cmp
shrb
int3
pop
jnp
int3
push
or
mov
pop
and
mov
xor
mov
push
sarb
jle
cmp
mov
in
mov
aas
jae
mov
sub
jecxz
adc
pop
lret
jno
scas
arpl
mov
mov
and
das
arpl
and
lcall
ljmp
push
popf
and
loopne
adc
xchg
fdivrl
jle
push
fisubs
push
sahf
out
xchg
leave
mov
ret
mov
jo
push
and
lods
daa
in
fsubs
dec
popa
mov
loope
cmpl
xor
jnp
imul
inc
and
mov
inc
ljmp
mov
adc
aas
in
ljmp
or
shl
movsb
test
nop
mov
aaa
test
inc
cld
inc
jg
into
push
rol
inc
push
xor
rcrb
addl
xchg
out
dec
sbb
imul
push
push
sub
inc
pop
xchg
popa
adc
outsl
jne
jge
iret
lock
out
gs
insl
fdivrl
sub
outsb
xor
or
gs
cmpsb
xchg
mov
stos
ja
and
sub
mov
int
mov
jno
push
mov
pop
cli
adc
mov
movsl
pop
fucom
lds
cmp
test
aam
ret
and
or
and
idivb
mov
mov
or
xchg
rcl
fs
fcoms
or
or
test
adc
or
jnp
dec
loop
pop
sub
mov
or
push
jle
cmp
jbe
lock
mov
push
stos
cmpsb
adc
fs
lods
cmp
es
inc
and
push
hlt
adc
iret
in
scas
icebp
adc
or
adc
mov
mov
push
aad
jmp
stos
movsl
cmpsl
or
outsb
pushw
sub
lods
in
xchg
mov
cltd
push
inc
adc
add
jns
in
dec
pop
mov
out
adc
xchg
sub
pop
sbb
push
sub
shlb
in
arpl
outsb
scas
lods
test
cmp
adc
test
repz
lahf
mov
add
popl
push
inc
inc
test
sbb
push
mov
mov
shll
dec
out
daa
jmp
rclb
out
imul
repnz
test
xor
add
inc
in
pop
add
inc
and
js
je
mov
jb
dec
and
add
mov
or
adc
aas
sahf
icebp
mov
rclb
add
ljmp
fnsave
pop
loope
mov
cltd
and
mov
test
pusha
push
add
shll
and
sub
sbb
xor
mov
adc
fldenv
aad
xor
enter
push
add
or
jg
cmp
out
test
jb
lds
fldt
adc
add
mov
dec
xchg
adc
sbb
shll
lods
xorb
dec
mov
mov
push
pop
pop
rcll
sti
push
mov
cld
aas
lods
mov
loope
sbb
sbb
es
iret
std
les
lds
jg
pop
and
ja
push
pusha
mov
repnz
dec
dec
or
sub
push
mov
and
jmp
xor
cli
popa
fildl
das
test
cmc
nop
hlt
imul
jg
out
mov
aaa
mov
mov
shl
mov
pop
test
add
lahf
sti
adc
idiv
pop
bound
divl
adc
out
push
das
pop
adc
cli
rcll
xchg
fldt
jae
mov
negb
inc
test
dec
xchg
pop
jns
dec
lcall
dec
adc
jo
mov
or
sub
ss
ror
jnp
ss
scas
jae
jns
paddsb
mov
jnp
or
adc
fwait
adc
xchg
jno
das
sbb
mov
inc
test
mul
mov
es
pop
shr
mov
stc
mov
push
ljmp
push
push
mov
pop
sub
push
pop
ficompl
out
inc
xchg
mul
cmp
sbb
mov
jnp
mov
stc
repnz
push
lret
repz
cmp
sub
das
shlb
and
mov
and
push
cmpsl
jno
aam
and
incl
jns
loop
fs
mov
xor
xchg
mov
ret
mov
repz
mov
popl
pop
daa
into
jb
in
dec
loop
xchg
fs
push
inc
scas
nop
lcall
pop
in
push
cmc
fsub
pop
ljmp
or
and
sbb
lods
jbe
or
push
fs
adc
clc
hlt
push
test
dec
repz
adc
add
nop
insb
cmp
xorb
jbe
push
mov
cmpsl
or
cmp
fdivr
cmp
pushl
ret
hlt
jle
mov
xchg
mov
lock
das
paddd
cmpsl
xchg
push
fidivl
adc
adc
or
dec
pop
jg
fcoml
pop
cmp
loop
pop
and
ds
shr
pop
cmp
xor
mov
movsl
add
dec
out
mov
mov
loop
or
loop
int
stos
jmp
add
repnz
push
fs
daa
or
jge
or
jp
imul
pusha
es
ljmp
mov
jecxz
xchg
mov
data16
mov
inc
sbb
in
rcrb
dec
inc
jecxz
aad
sub
dec
cmp
arpl
fsubl
stos
adc
jo
outsb
mov
dec
iret
cmp
or
pop
push
in
bound
push
iret
rolb
mov
mov
xor
jnp
jmp
test
xchg
jb
aam
adc
pop
cld
das
xchg
loope
lds
push
fnstenv
in
xor
cmpsb
faddl
addr16
loope
sbb
adc
fdivrs
ja
shrl
xchg
sahf
adc
cmp
in
dec
nop
mov
or
fldcw
ljmp
aas
imul
sahf
enter
lcall
scas
push
testb
in
jle
xchg
dec
jns
and
out
test
push
imul
xchg
xchg
scas
iret
fisubs
sbb
call
sbb
movsb
addr16
pop
pop
fidivl
and
mov
lds
outsb
jmp
inc
mov
cwtl
pusha
int
fimuls
or
aad
pop
imul
les
les
sub
dec
cmp
ja
sbb
pop
mov
dec
test
aam
adcb
mull
test
dec
cld
enter
xchg
dec
push
cmp
fsin
mov
out
pop
cs
cmp
aas
cmp
loope
and
aad
push
hlt
or
out
and
push
sahf
stc
adc
adc
pushf
or
push
mov
adc
ficoml
jmp
test
stc
pop
pop
dec
jg
mov
pop
fiaddl
fstl
mov
sub
out
pop
fsubs
sti
fadds
add
loop
daa
jmp
sbb
xchg
add
scas
lods
dec
call
xor
ret
test
mov
dec
cmpsl
push
outsl
cmp
clc
ljmp
sbb
std
and
lods
lret
std
jl
sti
test
sarb
addr16
jmp
sahf
inc
cmp
cmc
and
jmp
xchg
dec
cltd
adc
push
adc
int3
sti
les
push
loopne
stos
pop
add
leave
inc
leave
jae
mov
cs
cli
mov
mov
int3
mov
add
push
push
movl
ret
cli
pop
movsl
inc
inc
call
add
aam
pop
popa
xchg
fmuls
xchg
in
push
stc
imul
mov
dec
mov
jae
push
fnstsw
jg
mov
jl
or
dec
cli
in
mov
jp
cmp
aad
loopne
lock
push
fsubl
mov
out
xchg
jecxz
cmp
out
mov
xchg
push
stc
daa
sti
push
xchg
sbbb
cmpsl
sbb
xlat
xchg
aam
and
xchg
dec
push
lds
repnz
push
push
adc
sub
adc
mov
sbb
dec
mov
nop
pop
fwait
lods
js
popa
sub
or
cmpsb
or
in
sub
add
daa
ja
cmpsb
fcoms
addb
roll
test
dec
das
cwtl
sti
push
int3
cmp
dec
cmp
in
mov
arpl
xchg
fwait
inc
out
jb
mov
repz
int
int
adc
pop
in
fcom
pop
aad
cmp
pop
in
subl
jle
cmp
sbb
mov
dec
mov
cmpl
jmp
roll
out
xchg
repz
enter
das
mov
push
icebp
mov
sub
fcmovb
sbb
push
push
addw
ljmp
stos
dec
xchg
push
push
loop
mov
mov
orb
xlat
imul
and
lret
sub
mov
mov
inc
sub
decb
sbb
jge
jb
dec
int3
cmp
rorl
mov
notb
fcomps
in
in
sahf
jecxz
add
pop
inc
mov
dec
mov
pop
xchg
cwtl
mov
sbb
lods
gs
push
jne
sub
xchg
cmp
sub
jl
add
fimuls
sub
sbb
ja
lret
lock
dec
sub
adc
mov
add
aad
gs
inc
fmuls
pop
mov
jl
bound
or
cltd
sbbl
je
test
sarl
aam
lahf
lret
ljmp
hlt
cmpb
or
and
pop
out
and
movsl
fcomps
cmp
insl
inc
xor
pushf
inc
lcall
pop
ret
dec
inc
sub
mov
lods
adc
xchg
xchg
adc
bound
leave
adc
adc
rcrl
push
inc
icebp
lds
insb
loop
xchg
lcall
xor
mov
pop
jle
add
lea
pop
push
push
xchg
mov
sbb
adc
add
sarb
in
fldcw
inc
adc
xchg
out
and
mov
ja
mov
xor
adc
in
fucomp
pop
lods
xor
cmpl
push
push
mov
std
repz
jp
rcrb
roll
push
xorb
cmp
xchg
lcall
dec
cmpsb
andb
scas
movsb
adc
test
or
xchg
jae
aad
pusha
cmpsl
lds
pushf
iret
dec
pop
inc
jb
mov
ficoml
stc
inc
int
pop
xchg
dec
mov
sbb
mov
leave
mov
sbb
jne
insb
xchg
idivl
movsb
jp
add
icebp
push
int
nop
fdivl
js
push
scas
pop
clc
xchg
nop
or
mov
mov
imul
popf
fsub
pop
push
sub
sub
fistpll
mov
in
xor
fnstsw
fwait
xor
js
mov
rcrl
lahf
dec
push
mov
mov
mov
outsl
ja
lcall
add
cmp
imul
sub
jg
gs
xor
push
dec
pop
dec
cltd
pop
or
sbb
inc
iret
lret
lds
mov
in
xor
jecxz
jo
or
mov
scas
int
gs
mov
and
mov
sub
inc
loopne
notl
xor
int
inc
imul
push
pop
pop
jae
int
mov
jno
out
and
lcall
in
push
mov
scas
arpl
jecxz
xlat
ljmp
xchg
jecxz
mov
xchg
push
lods
pushw
jl
push
aam
lea
pusha
fists
mov
jbe
jb
mov
pop
out
xchg
or
mov
or
dec
insb
aam
xchg
pop
jbe
xchg
lea
nop
imul
loop
inc
xor
daa
bound
scas
mov
aam
push
es
lcall
cli
mov
repnz
push
clc
and
mov
mov
int3
push
loope
inc
inc
cmpsl
js
aad
inc
out
or
cld
in
test
sub
push
dec
sbb
xor
pop
push
xchg
push
sti
scas
rorb
or
fistl
and
adcb
in
and
ja
push
iret
inc
repnz
cmp
enter
pop
mov
lcall
add
in
leave
call
cmp
cmpsl
rorl
scas
lret
lock
jno
mov
or
cld
dec
cmp
lods
jo
jbe
xor
in
out
mov
sbb
aas
sub
ss
popa
dec
scas
and
or
stos
fdivrs
inc
subb
movsb
mov
xchg
js
ffree
mov
leave
movb
pop
rcrb
inc
das
mov
pop
or
bound
data16
push
mov
and
rorb
sahf
pop
test
push
push
pusha
and
or
dec
out
bound
and
push
shll
cmp
jle
mov
cltd
hlt
inc
jmp
ss
cli
jbe
and
ljmp
test
aaa
aaa
xchg
push
hlt
xchg
outsl
pop
mov
je
outsb
cmpsb
jne
pusha
in
ja
imul
xchg
mov
mov
push
xchg
leave
mov
dec
and
jae
mov
cli
cmc
sub
movsl
in
in
movb
int3
shll
mov
lock
dec
sbb
or
dec
fisubl
imul
jmp
pop
cmp
sbb
mov
scas
push
jl
fcmovu
dec
pop
jl
test
int
lods
push
cwtl
scas
filds
aad
push
mov
mov
stc
and
xchg
or
and
test
and
iret
dec
lret
push
jp
cmova
lret
fdivp
jle
shll
xor
adc
inc
sti
cmp
jmp
lods
pushf
and
push
aam
sbb
cmp
xchg
mov
cmpsb
jl
les
outsb
or
and
cltd
arpl
inc
push
int
inc
push
sub
mov
lea
lret
cmp
push
and
pusha
mov
mov
xchg
mov
adc
enter
js
jo
int
iret
fidivl
or
jl
xchg
jb
or
push
addw
mov
cwtl
fnstcw
ret
fdivl
or
fiaddl
push
aam
cli
ja
fld
jnp
add
out
mov
lods
jno
cld
xor
fsubrs
sti
dec
shrb
and
sbb
sub
sub
push
sti
dec
mov
cmp
lcall
jns
push
xor
outsb
aaa
loope
and
sub
lcall
xadd
fdivs
mov
dec
outsl
addr16
mov
push
aad
filds
shl
xchg
jl
popf
scas
daa
std
mov
popf
and
insl
xchg
mov
jge
adc
aad
sub
sub
movsl
bound
adc
out
js
lods
fmull
sbb
jno
jno
adc
dec
jge
inc
in
ffree
mov
adc
pop
fistpl
xchg
add
int
pop
dec
jl
cmpsb
sarb
or
rol
imul
jl
adc
jo
popf
xor
mov
mov
fadds
scas
pusha
test
mov
cmp
and
in
nop
push
int3
data16
xchg
jae
sub
sbb
mov
xlat
push
cmp
cmp
or
xor
insb
cmp
push
push
stc
sbb
lds
mov
mov
testb
data16
ljmp
or
cmp
xor
out
mov
mov
mov
lcall
shll
or
ljmp
adc
dec
or
mov
cmp
insb
inc
negb
repnz
sub
outsl
fisubs
jno
repnz
or
cmp
or
mov
inc
mov
jp
add
jl
and
stc
shll
adc
out
mov
sbb
pop
inc
popf
aaa
xchg
mov
fsubs
int3
cmp
out
test
pop
movsb
scas
xchg
xchg
sub
push
adc
inc
imull
sub
xchg
cmpsb
xor
ljmp
ret
push
adc
xchg
mov
cwtl
scas
mov
inc
push
negl
xchg
rolb
sbbl
xor
shl
add
in
jl
stc
mov
mov
add
push
je
mov
jge
pop
cmc
jle
inc
rsm
jno
mov
pop
sar
enter
arpl
push
add
push
push
xchg
adc
jno
mov
jo
sahf
das
insl
xchg
mov
mulb
das
sub
inc
sub
outsb
cmp
mov
lret
inc
fstl
mov
xchg
jge
out
push
dec
jl
mov
jp
fldt
std
ljmp
cmp
xor
es
pushf
lds
vprotb
cld
sbb
cmp
sub
dec
popf
loopne
xor
sub
sub
jo
jae
xchg
das
adc
jl
add
sbb
mov
lret
arpl
stos
aaa
les
fiaddl
jmp
lcall
dec
or
add
cmpsl
not
dec
mov
shlb
scas
cmpsb
push
ljmp
pop
popa
ss
push
add
fiadds
sbb
inc
ret
xor
add
lret
xchg
es
lret
shrl
fisubl
bound
jmp
add
add
sub
add
dec
dec
int
or
sbb
or
out
aad
mov
and
sbb
adc
filds
adc
stos
xor
dec
jb
repnz
jp
mov
arpl
xor
mov
push
mov
cmpb
loopw
xchg
in
fnstenv
mov
xchg
xor
lea
imul
inc
addl
mov
push
xor
nop
test
mov
frstor
pushl
in
pushf
movsl
or
jp
pushf
jecxz
sub
push
mov
fdivl
sub
add
push
test
push
es
sub
mov
mov
ss
jg
push
sahf
or
xchg
pop
add
outsb
pop
push
leave
nop
stos
jae,pn
dec
or
inc
loop
add
std
inc
jle
cld
jne
hlt
cs
insb
jns
xchg
cli
dec
mov
push
cltd
ljmp
adc
push
sahf
inc
push
test
add
in
dec
adc
pop
push
popa
dec
jle
push
xchg
pop
pop
fmuls
outsb
out
xchg
lock
loop
or
movsb
jb
xor
fistps
mov
lret
add
jns
hlt
mov
addr16
mov
mov
jl
int
jmp
dec
pop
adc
jno
sub
dec
and
dec
push
add
loop
cmc
enter
jo
add
aaa
dec
mov
and
jmp
add
mov
xchg
lahf
adc
and
rcll
inc
mov
rolb
cli
imull
orb
push
inc
mov
lcall
inc
mov
pop
icebp
xchg
shrl
mov
add
mov
or
ret
jge
test
lock
subb
lods
insl
sub
inc
jns
cmp
and
and
push
mov
push
das
xchg
jns
lret
stc
mov
imul
les
cs
loope
pop
js
and
cs
xchg
mov
mov
adc
pop
sbb
xor
cmp
cmp
push
lds
sbb
loopne
xchg
mov
xchg
xor
imul
push
loop
add
ja
packsswb
mov
mov
insl
dec
insb
mov
jg
rcll
aam
mov
pop
xor
call
mov
lods
or
mov
out
jbe
gs
nop
pop
in
lds
inc
sbb
xor
jo
cmp
jecxz
vpsrlq
rorl
lea
xchg
stos
shrb
repz
in
dec
in
or
adc
push
mov
in
push
mov
xor
ret
call
adc
jmp
xchg
pushf
in
fdiv
out
jmp
push
add
add
cld
sbb
stos
cwtl
movsl
mov
mov
add
clc
add
imul
into
cmp
movsb
cld
mov
mov
call
repz
pop
mov
ret
in
add
insb
repnz
lcall
jnp
mov
test
add
or
pop
sbb
and
xchg
test
dec
inc
xchg
mov
hlt
cmc
pusha
filds
cmpb
imulb
inc
jae
insb
cmp
mov
dec
add
or
add
mov
stos
sbb
mov
and
icebp
fwait
pop
push
xor
jbe
imul
mov
mov
mov
inc
data16
jo
scas
ror
ljmp
mov
inc
pushl
lods
xor
es
xchg
das
into
popa
aas
or
mov
scas
pop
adc
sbb
mov
imul
out
mov
xchg
jp
rcrb
and
cmp
scas
mov
mov
pusha
xchg
pusha
fcmovu
mov
sbb
and
mov
testl
enter
xor
ret
movsl
push
pop
jbe
or
mov
push
dec
jb
movsl
scas
push
iret
filds
mov
xchg
sub
shll
js
mov
insb
int
ds
xchg
dec
dec
push
mov
rorl
jns
sbb
push
jns
nop
fsubr
ss
cmp
adc
adc
lret
push
xor
js
shr
jl
flds
inc
lds
popf
pop
xlat
rorl
lock
pop
nop
and
add
pop
pusha
out
lret
cltd
lret
mov
jo
in
fdiv
sbb
in
sbb
aas
repnz
inc
scas
pop
mov
jge
pop
inc
jns
stos
movsb
arpl
inc
push
aad
out
xor
lcall
adc
out
repz
gs
mov
inc
and
outsl
es
pushf
cmpsl
sub
enter
mov
pushf
pop
pop
rcrl
push
sub
in
jl
mov
mov
lods
je
push
dec
shlb
outsl
enter
fstpl
pop
cmpsl
stc
add
dec
adc
loop
incb
dec
repnz
bound
xor
pop
jae
fs
getsec
fwait
add
call
sahf
mov
pusha
dec
cmp
sbb
outsb
dec
inc
pop
mov
push
es
jge
jne
popa
out
js
push
imul
fdivrp
jno
sarl
fadd
mov
pusha
mov
hlt
push
push
insb
or
ja
jecxz
mov
sub
fimull
clc
adc
shlb
push
mov
xor
lds
xchg
adcl
jne
pop
pushf
push
sbb
mov
cltd
repnz
adc
mov
adc
fnstcw
pop
out
or
btr
mov
lret
or
insb
dec
xchg
cmpsb
rcrl
enterw
and
sti
addr16
cmc
popl
aaa
sub
xor
push
push
jl
ja
mov
inc
mov
push
mov
fwait
aaa
and
out
pop
push
sbb
push
test
inc
mov
push
cltd
xchg
adc
aam
neg
dec
jmp
lahf
sub
xlat
inc
xor
lds
sub
push
xchg
dec
or
int
call
pop
xchg
mov
mov
popf
inc
stos
movsl
sbb
sbb
push
mov
cmc
and
loope
fnstcw
imul
out
mov
dec
rcll
sub
stc
mov
das
lcall
mov
adc
mulb
xchg
inc
push
inc
pop
mov
add
jns
push
mov
xchg
dec
push
push
sbb
jg
sub
testb
cmpsl
lods
sbb
pop
push
xor
lds
jecxz
stc
pusha
clc
adc
out
mov
jecxz
xor
adc
inc
int3
push
adc
or
iret
pop
cwtl
mov
insl
ja
outsl
outsb
iret
dec
rcrb
scas
cmp
pop
sarl
sub
mov
inc
push
pop
ret
aam
cwtl
iret
popa
or
sub
sub
jmp
and
out
in
mov
int3
xchg
lahf
mov
fidivl
sub
fimuls
sbb
dec
sub
jne
fwait
sub
add
cld
inc
and
movsb
aam
das
add
cmpsl
mov
mov
and
stc
sbb
cltd
or
push
sti
xlat
pop
jae
push
scas
adc
mov
jno
outsb
test
mov
adc
jae
mov
cmp
xor
jnp
imul
sub
xor
rsm
inc
mov
fistps
mov
std
add
mov
imull
jl
aam
push
xor
jecxz
add
adc
mov
mov
out
xor
test
inc
adc
jge
hlt
jno
sub
popf
xchg
xor
fidivl
mov
dec
jae
or
in
sbb
xor
or
jp
sub
xchg
ja
test
jl
aas
push
hlt
inc
outsl
into
pop
add
cmovnp
pop
bound
rcr
jae
into
in
sbb
pop
cmp
subl
aad
leave
les
xchg
insb
pushf
shlb
in
mov
jne
insl
mov
adc
inc
sbb
out
mov
or
dec
mov
insb
nop
jg
ja
push
aas
clc
mov
int
test
mulb
push
dec
xchg
js
sahf
adc
int3
xchg
add
jmp
outsl
leave
pop
cmpsb
xchg
pop
push
repnz
fsubrp
bound
cli
mov
sbb
push
les
mov
or
insl
xchg
stc
xor
mov
pushf
nop
pop
xchg
sarb
pop
aaa
adc
and
popf
jb
adc
xchg
cs
xchg
shlb
daa
ja
xchg
jmp
cltd
mov
insl
sarb
mov
inc
and
xor
data16
pop
mov
int3
or
add
sti
mov
into
xor
in
xor
and
inc
cmp
xchg
sbb
sbb
jne
push
lods
pusha
pop
fidivl
js
movsl
pop
jne
dec
xlat
push
test
lods
xor
xchg
lods
pop
fstps
push
lahf
std
cltd
push
fwait
testl
cmp
inc
ret
add
addr16
outsb
lret
data16
mov
mov
sub
pop
vandnpd
xchg
hlt
stos
add
inc
sbb
fcompl
lock
jno
rcrb
sub
hlt
push
fisttpl
sahf
enter
pusha
xchg
lcall
popa
mov
push
inc
mov
inc
mov
daa
pushl
pusha
push
fdivl
xchg
clc
mov
out
jnp
loopne
repz
rcrb
add
insl
cmp
mov
scas
push
cmp
ret
mov
jns
fistl
stc
push
out
es
cld
sbb
mov
je
xor
aaa
rorl
aam
cwtl
lea
rol
rcr
rcrl
stos
data16
push
pusha
jnp
dec
loope
out
sub
sub
xchg
mov
outsb
sahf
xchg
ss
mov
cwtl
stos
hlt
outsl
adc
xchg
sub
subb
out
pop
jecxz
pop
add
mov
ja
lcall
jnp
fs
sub
icebp
push
xor
xor
add
mov
lods
bound
push
mov
jmp
cmp
add
out
scas
cmc
push
add
cmp
dec
mov
sbb
arpl
mov
pop
add
dec
insb
sbb
pop
pushf
sub
mov
shlb
cmp
addr16
jns
clc
ja
mov
je
dec
jne
mov
sub
addr16
into
lahf
scas
jge
mov
jmp
lods
xchg
test
scas
lods
xchg
hlt
mov
ret
shr
mov
lock
add
scas
roll
push
aam
into
push
or
xor
test
popf
cmp
mov
fmuls
cld
xchg
std
pop
jne
fmuls
iret
and
push
repnz
inc
stos
push
pop
pop
push
or
loop
test
mov
xor
xor
cmp
adc
fistpll
jp
iret
popf
imull
jge
xchg
das
mov
ret
adc
push
outsb
cmpsl
pop
sub
lahf
sbb
jnp
lcall
push
xlat
cld
cmpsl
jmp
pusha
lcall
cmp
gs
popa
dec
xor
xchg
leave
pop
or
mov
add
and
pop
push
mov
mov
sub
inc
push
test
fisttpl
sub
pop
cli
fldcw
outsl
repnz
rcr
inc
out
adc
cld
call
inc
adc
jmp
pop
mov
fidivl
cs
loop
shll
jb
lods
jmp
filds
jmp
mov
inc
div
dec
xor
pop
pop
sbb
movsl
or
xor
adc
adc
pop
lea
pop
aas
mov
inc
mov
jo
mov
jno
andl
imul
aam
inc
and
or
push
iret
and
fmuls
add
lea
add
adc
lds
in
and
mov
and
js
fsubr
pusha
mov
lock
dec
das
add
lock
movl
inc
mov
or
mov
and
jo
push
out
jmp
lahf
pop
mov
je
test
testb
mulb
imull
xor
loop
fcomip
lea
inc
xchg
int3
jbe
pop
and
add
push
sti
lods
out
mov
xor
cmc
push
popa
jb
jo
or
out
lods
gs
cmp
xor
xor
shll
cmpsb
and
mov
push
sbb
sub
and
push
jp
cmpl
pop
insl
stc
pop
xchg
adc
scas
daa
xor
dec
xor
push
lock
xchg
andb
outsl
push
hlt
mov
sbb
add
push
je
lods
scas
pop
repz
add
rcll
fbstp
lea
pop
inc
mov
cmp
adc
jge
jne
js
or
insl
fisubl
inc
sbb
int
or
nop
loop
push
call
sub
movsl
test
push
outsb
mov
addr16
mov
xor
sbb
lods
inc
les
in
jbe
notl
ficoml
mov
sbb
sub
daa
leave
cmp
ret
test
xor
pop
das
jmp
jle
sti
jns
popa
mov
mov
mov
xlat
mov
popf
xor
into
mov
jl
mov
cmp
repnz
outsb
push
call
dec
jno
scas
mov
addr16
out
lcall
repnz
push
inc
mov
push
adc
xchg
repz
mov
jbe
stc
out
js
or
xchg
or
push
pop
fstpt
dec
clc
inc
inc
data16
pop
add
pusha
cmp
adc
aad
pop
and
loop
dec
cwtl
dec
shl
mov
bound
dec
add
or
fwait
jne
cld
mov
stos
mov
xchg
out
cmp
ja
sub
popf
inc
jae
push
sti
out
mov
cli
mov
int
scas
pop
clc
push
sub
aaa
mov
xchg
aas
mov
lods
mov
pusha
and
popa
rorl
push
enter
cltd
inc
aaa
xor
in
test
xchg
lds
es
outsb
es
into
mov
push
xor
add
lock
jb
jmp
fsubl
lods
cld
sbbb
or
mov
xchg
fmuls
jg
cs
mov
pusha
aaa
sub
dec
imul
push
arpl
sbb
fcmovnbe
dec
fldl
test
cmc
jmp
mov
lods
xchg
sub
cwtl
add
arpl
mov
stc
adc
fs
mov
add
imul
imul
cmp
cmc
pushf
xchg
push
outsb
iret
ja
pushl
out
int
cmpsb
and
cmpsb
dec
pop
adc
xor
sub
in
jl,pn
add
ds
fistl
mov
out
adc
adc
ljmp
cmp
or
mov
cli
add
fwait
adc
in
mov
sbb
lds
out
mov
fsubs
mov
sbb
fwait
and
iret
xchg
or
xchg
push
and
sub
mov
lahf
xchg
movsb
stos
mov
xor
icebp
cmp
inc
sbb
mov
in
sub
dec
stos
jno
stos
or
test
xor
outsl
xor
inc
sbb
inc
mov
stos
fldt
mov
inc
mov
adc
int
mov
xchg
xlat
and
call
fstp
add
pop
mov
outsb
popa
daa
shll
int3
inc
add
loop
inc
out
push
mov
push
ja
mov
mov
push
jns
or
loopne
pop
out
dec
add
mov
leave
shl
addl
jb
cmp
mov
add
cld
outsl
mov
inc
es
mov
xor
or
mov
xchg
test
xor
inc
jecxz
test
and
xchg
mov
mov
rolb
sbb
sbb
push
jbe
or
add
out
sbb
dec
mov
arpl
adcb
subl
data16
xor
mov
mov
ljmp
mov
mov
repnz
scas
cmp
dec
lods
rcrb
or
adc
sbb
gs
imul
mov
xchg
and
xchg
aam
adc
addr16
rcl
sub
push
shll
test
imul
cmp
test
dec
inc
push
adc
dec
call
sbb
cli
cmp
cmpsl
and
lods
test
and
inc
stos
dec
mov
xchg
jmp
mov
inc
sub
cmc
shl
lods
dec
rcrb
out
pop
sbb
int
iret
dec
imul
lods
imul
jmp
in
sub
flds
ficoml
clc
add
cld
cmc
jae
sbb
ja
add
mov
or
pop
sbb
xlat
add
lods
dec
pop
jmp
hlt
lock
sbb
fwait
sub
ret
clc
fistpll
add
into
and
push
stos
je
jge
scas
test
popa
push
test
xor
fiaddl
dec
js
add
stos
pop
std
or
adc
push
ss
mov
lahf
lds
inc
stos
push
xchg
sbbl
test
stos
push
subl
ds
jmp
enter
leave
out
insb
scas
jmp
push
jmp
mov
dec
mov
push
cltd
test
and
sub
addb
dec
mov
mov
push
sbb
daa
call
arpl
xchg
jb
dec
push
inc
lds
arpl
pop
mov
add
mov
or
rorl
xchg
or
mov
daa
jle
sti
push
pusha
pushl
cmp
in
std
mov
xchg
inc
jno
xchg
sbb
ss
lock
mov
lea
add
mov
cmp
movsl
jae
and
push
cld
std
mov
push
ljmp
push
or
gs
popf
adc
mov
daa
cmc
inc
add
push
orb
push
pop
adc
and
cmp
xor
sti
aad
cwtl
pop
sti
sbb
out
sub
xor
and
dec
icebp
out
pop
cs
arpl
mov
push
js
out
ret
dec
test
nop
push
dec
sbb
enter
out
sub
sahf
test
stos
sub
shrl
and
sbb
adc
jmp
lcall
mov
add
inc
xorl
mov
mov
imull
out
push
lods
and
movsb
mov
ss
mov
repz
mov
into
xor
xor
es
push
repz
out
xchg
pushf
inc
mov
sbb
enter
rcrb
mov
vcvttss2si
mov
imul
inc
mov
jae
mov
jmp
fistl
bnd
fnstsw
popf
loopne
dec
cmp
push
call
and
mov
mov
jmp
test
out
sbb
in
mov
cltd
ja
xchg
bound
dec
jns
sub
push
mov
and
lods
jmp
or
xchg
mov
fs
add
inc
xor
sahf
outsl
xor
int
mov
pop
xor
sbb
popa
dec
shrb
fwait
pop
fimuls
sbb
mov
out
loopne
ja
xchg
inc
scas
push
mov
inc
sub
mov
dec
insb
add
ja
push
ljmp
xchg
add
scas
mov
cmc
push
insb
sub
cmp
push
or
or
pushf
cs
sbb
pop
nop
xor
ss
push
jnp
pusha
aas
shrl
pop
xor
mov
push
fldt
mov
and
js
lret
sahf
push
jge
scas
dec
jp
jbe
push
das
pop
lahf
in
mov
push
cmp
int
lret
pop
in
mov
and
jo
inc
cmpsb
sarb
pop
shlb
sub
mov
push
inc
dec
push
mov
sbb
fstps
lods
mov
dec
scas
loopne
push
fs
sti
mov
adc
cmp
loope
sti
pushf
insb
cmp
jle
sbbb
push
push
and
adc
inc
mov
jg
adc
cli
lret
mov
xor
push
movsl
rcr
push
pop
sub
rclb
cs
dec
in
jecxz
hlt
cmp
adc
sub
popf
sbb
push
fs
iret
test
push
lahf
inc
lods
lods
int3
test
sbb
pop
xor
inc
push
mov
in
cs
clc
fcos
test
lods
leave
mov
fistps
into
lods
jns
sub
into
loopne
fwait
mov
xor
cmp
aad
mov
shl
in
jb
out
repnz
dec
sub
daa
adc
jne
mov
lea
pop
iret
pop
sbb
shlb
fsub
add
mov
and
ljmp
jnp
inc
dec
mov
pop
xchg
mov
push
adc
mov
sub
fisttps
mov
push
sbb
sbb
xor
and
sbb
sub
xchg
ret
data16
fisttpll
out
fildll
movsb
aam
jl
jb
xchg
fiaddl
ljmp
cld
xor
mov
dec
sbb
es
lods
xchg
aas
inc
fiaddl
incb
aam
into
lret
pushf
add
cmpsb
add
rcrl
addr16
add
jg
aam
push
push
and
xchg
imul
ljmp
sub
jmp
xor
aas
adc
dec
sub
aas
mov
pop
sahf
pushf
ja
in
arpl
and
sbb
or
pop
xchg
orb
xor
call
dec
adc
mov
inc
out
arpl
ficoms
pushf
and
pop
jne
xor
enter
inc
andl
roll
sub
scas
xchg
nop
jmp
xor
aas
cltd
and
jno
out
or
sbb
and
les
mov
cmc
test
fiadds
push
adc
into
shll
mov
fsts
insb
cmpsl
in
add
fld
repz
movsl
mov
cmp
out
shrl
lcall
loope
dec
ror
out
cli
inc
xchg
fidivrs
mov
ds
iret
push
push
xor
cmpsb
mov
adc
inc
jmp
mov
mov
ljmp
lea
dec
xchg
xchg
mov
push
xchg
pop
pusha
adc
popf
out
subb
mov
int
or
pop
inc
lods
mov
stos
fwait
adc
gs
xchg
test
push
cmp
outsb
je
push
jmp
fdivrp
in
lea
and
outsb
std
movsb
cli
fildll
scas
icebp
fiaddl
xchg
test
push
hlt
cmp
icebp
loopne
mov
xchg
inc
adc
insb
movsb
jnp
xchg
js
lock
mov
or
cli
sbb
lea
fcmovnb
mov
mov
sbb
pushl
bound
rclb
sub
gs
icebp
divl
mov
push
dec
loopne
mov
ficoms
insl
xor
vmovapd
test
inc
movb
jg
push
mov
mov
out
outsb
mov
in
call
dec
add
lahf
inc
sti
les
jmp
sub
mov
lahf
aam
sarb
es
push
lahf
pop
repz
aad
aad
jns
mov
ljmp
outsl
xorb
jmp
test
mov
adc
fldcw
or
nop
subb
or
stos
les
sbb
pop
mov
and
cs
out
jl
push
mov
jl
fsubrs
mov
add
popf
mov
cmp
cwtl
mov
test
and
jg
stos
mov
add
mov
xorl
cld
inc
fs
fsts
cltd
mov
mov
dec
lahf
or
adc
test
lret
subl
out
cmp
and
orb
je
and
dec
das
cmc
movsb
mov
push
test
pop
mov
scas
and
repnz
dec
andl
ret
add
pushf
dec
data16
mov
dec
mov
pop
les
sti
hlt
mov
ficoml
ret
jle
mov
push
aad
xor
outsb
ljmp
sub
pop
cmp
or
pop
mov
fcompl
push
pusha
and
test
int3
dec
lea
push
push
push
arpl
push
out
add
stos
sbb
inc
cld
aaa
xchg
lret
shl
pop
mov
sti
mov
jne
fcomip
out
xor
das
mov
int3
addl
call
sbb
movsb
add
mov
daa
fldl
xchg
adc
jl
fldt
imul
enter
inc
mov
jg
mov
test
test
adc
addr16
xchg
sbb
adc
call
outsl
popf
leave
jp
out
jp
fnstcw
adc
cmp
mov
stos
fdiv
sbb
and
lock
adc
dec
popf
gs
jnp
lahf
adc
mov
daa
cmpsb
mov
and
sub
iret
cwtl
dec
inc
pxor
stc
dec
enter
jnp
scas
jae
pop
repnz
movl
pop
repz
mov
xor
pop
out
and
sbb
mov
loopne
scas
in
bound
sbb
mov
add
cmp
pop
sbb
nop
in
xor
sub
lret
inc
pop
add
jno
aas
lock
aaa
mov
jns
clc
cmpsl
enter
faddl
add
loope
jecxz
sbb
popa
mov
mov
lods
adc
cmpsl
ljmp
dec
lahf
aam
xor
xchg
push
ds
loopne
fistps
xchg
je
and
test
pusha
cmpsl
clc
mov
repnz
adc
and
nop
fs
xor
push
fwait
icebp
in
mov
pop
ret
les
std
mov
add
repnz
ds
mov
mov
inc
jo
rclb
mov
pusha
insl
dec
mov
dec
push
mov
pop
and
fadd
jl
jmp
or
popf
mov
notb
inc
fsubr
stos
mov
movsl
adc
cmp
or
push
adc
out
enter
std
jle
stos
xchg
push
xor
mov
dec
test
pop
loopne
js
addr16
pop
mov
mov
jecxz
jb
rorl
popa
gs
fcoms
shr
adc
and
jne
mov
xor
out
div
mov
or
and
adc
add
mov
pop
jecxz
faddl
enter
mov
and
push
fcmovnb
fadd
rol
fisttpl
cmc
cwtl
jle
icebp
lcall
pusha
pop
lea
fisubrl
adc
mov
mov
lods
adc
cmp
and
sbb
sub
lret
xchg
inc
jle
sbb
test
add
jl
inc
jne
mov
xchg
bound
xlat
push
cli
sub
ret
shlb
sub
cmpl
xor
xor
sub
sahf
cmpsb
dec
pop
xchg
in
dec
scas
sbb
sahf
aas
sub
pop
aaa
fld
xlat
jne
je
fsts
xor
pop
mov
mov
fsubrp
dec
push
ss
pminsw
std
repz
adc
inc
mov
jl
xchg
push
outsb
lret
int
call
movsl
inc
mov
imul
sub
nop
xor
mov
subb
mov
pop
shll
sti
fwait
adc
lret
fld
push
push
loop
xor
das
fwait
mov
insl
mov
pusha
mov
lcall
mov
and
lret
aam
loop
or
dec
xor
ret
data16
cmp
inc
jmp
jg
pushf
add
hlt
or
cmp
test
lea
push
rcll
dec
shll
rorb
pop
in
cmp
cmpsl
lcall
sbb
pop
bound
fdivs
pop
cli
push
or
mov
shl
addb
push
lea
ljmp
sbb
sti
dec
mov
xor
xlat
int3
lods
mov
adc
in
cmpsb
cmc
cmp
xlat
int
loopne
inc
mov
xchg
inc
sub
mov
inc
and
dec
push
inc
inc
pop
push
in
push
pop
pop
pop
andl
sbb
push
mov
ljmp
lcall
into
push
cwtl
addb
mov
je
rol
mov
cmp
push
push
lret
or
mov
push
add
adc
fsubrl
add
cmp
mov
jl
add
dec
and
das
rorb
inc
iret
daa
lods
lcall
xor
sbb
xor
loopne
insl
adc
mov
add
pop
add
decb
aam
dec
mov
test
fsubl
pop
dec
shll
fists
movsl
add
push
aad
mov
ds
inc
xchg
stc
inc
xor
inc
push
jb,pt
and
in
stos
or
cmp
out
les
pop
inc
sbb
add
ret
push
ror
divb
ja
shll
clc
out
hlt
jmp
sbb
xor
xchg
lock
nop
lcall
xchg
push
stc
push
insl
pushf
push
cld
mov
scas
add
scas
mov
stos
or
rcl
lock
and
xor
daa
cmp
bound
nop
repz
ret
stc
jl
shrl
lods
mov
pop
cltd
add
ficomps
sbb
shl
lods
adc
mov
sub
sub
cs
push
and
adc
add
ja
xchg
dec
xor
pushf
leave
sbb
inc
or
mov
enter
int3
cmpsb
es
push
and
xchg
pop
js
fcomps
lds
in
add
inc
mov
fdivrl
cmp
jno
ds
insb
xor
xor
xchg
mov
push
lret
sub
outsl
shrl
lahf
pop
sarl
je
test
imul
push
jns
mov
dec
cwtl
nop
js
shrl
lds
inc
dec
sub
fs
inc
mov
dec
jge
mov
iret
movsb
sahf
mov
std
mov
imul
push
popa
ljmp
push
mov
call
push
adc
lock
xor
pop
dec
jle
dec
mov
jmp
loopne
xchg
clc
and
pop
lds
arpl
lods
out
pushf
xor
stos
push
ret
sbb
sbb
add
pop
sub
pusha
mov
jecxz
push
cmc
mov
addr16
js
movsl
loope
rcrb
aad
mov
lret
xorb
imul
fcmovne
je
ljmp
cs
mov
in
push
adc
into
jg
test
scas
lods
inc
lret
push
dec
dec
pop
xchg
imul
xchg
shl
dec
mov
pop
daa
or
mov
jle
jns
jl
sarb
ja
jae
insb
jae
mov
mov
rep
movsb
dec
aas
rcrb
lods
xor
inc
leave
pop
fs
and
mov
lcall
and
test
out
lret
add
dec
mov
cmp
mov
popf
fdivs
clc
sbbl
ss
dec
mov
call
das
or
int
adc
mov
and
imul
mov
or
icebp
lea
jne
les
fnsave
add
addr16
mov
adc
mov
repnz
cmc
insl
xchg
sbb
stc
iret
jecxz
imulb
stc
mov
loopne
push
jnp
xlat
add
imul
arpl
dec
sbb
xchg
xchg
fbld
add
sub
hlt
movsb
sbb
xchg
xchg
roll
pop
loopne
idivb
cmp
mov
xchg
xchg
xor
andl
sub
dec
adc
add
or
adc
adc
insl
into
adc
int3
mov
out
adc
sbb
in
ljmp
dec
sub
repz
test
lods
cmp
mov
add
imul
add
stc
adcl
in
pop
and
and
imul
add
or
push
xchg
mov
cwtl
push
in
mov
mov
push
xor
and
jp
in
or
scas
cmp
ret
xchg
xor
add
inc
ljmp
cmp
jg
mov
sbb
push
mov
clc
mov
lock
scas
jp
or
mov
pusha
push
pop
test
mov
lea
jno
xchg
inc
mov
arpl
mov
aam
pop
dec
lcall
orb
jp
mov
icebp
and
mov
jne
in
gs
cmp
rclb
jp
bnd
jp
in
in
ljmp
bound
mov
and
stc
or
xlat
icebp
add
push
xchg
fdivl
cmp
roll
dec
sub
shlb
inc
dec
push
popf
test
jno
push
pop
push
std
sbb
push
push
dec
adc
inc
sub
outsl
dec
push
int
cld
push
or
adc
js
out
iret
jns
clc
mov
stos
bound
sbbb
testl
mov
lahf
pusha
out
xchg
lea
xor
cmp
push
mov
and
jbe
notl
mov
in
lods
insb
cmp
sbb
shll
jbe,pt
cld
icebp
jne
es
xor
cmpl
jno
xchg
and
rcl
cltd
call
nop
imul
pop
dec
pop
aaa
push
mov
xchg
fdivs
iret
mov
sbb
popf
mov
cmp
sbb
push
lods
shll
iret
fnstcw
dec
xchg
inc
sbb
dec
mov
inc
or
push
xor
jne
push
xchg
cmp
cmpl
out
cltd
cwtl
add
push
test
pop
loop
add
jge
xchg
lret
xchg
jg
pop
out
xor
push
sub
in
rorb
mov
or
lds
pop
fs
icebp
fsubrl
test
mov
inc
dec
lds
mov
stc
xchg
das
mov
push
sub
enter
inc
xchg
enter
fbstp
addl
jns
xchg
mov
idiv
mov
stos
or
xchg
mov
inc
cmp
jns
aaa
mov
pop
push
into
push
scas
pop
push
push
sti
mov
and
xor
das
int3
push
int3
push
mov
dec
sbb
mov
icebp
pop
jmp
jle
and
or
pop
sbb
xchg
jb
xlat
add
fnsave
call
aad
pop
or
cli
dec
mov
lcall
int
push
popa
int3
cmp
xchg
jno
fcomp
das
ds
sub
add
add
inc
push
subl
push
jbe
cld
insl
ljmp
adc
and
cmc
lret
lock
lods
add
lea
mov
push
sbb
xchg
dec
cltd
ljmp
sbb
rcrl
jbe
in
push
mov
or
out
fwait
nop
pop
inc
inc
push
out
jae
pop
cli
xorb
mov
test
xchg
mov
movl
lea
or
and
mov
pop
xchg
jmp
cli
cmp
fs
fwait
cmpl
fbld
jnp
out
jg
bswap
stc
mov
jb
daa
pop
stos
mov
cmp
inc
addb
cmp
movsl
pop
xor
pop
enter
mov
andl
and
pop
fwait
xor
int3
das
mov
sub
insb
sub
sbb
rcrb
inc
lcall
cmpsb
inc
push
aaa
xchg
clc
out
mov
mov
push
xlat
dec
inc
or
jno
cltd
addr16
in
mov
rcrl
ret
push
and
mov
icebp
sub
mov
aaa
mov
and
das
test
sbb
lds
nop
xor
sbb
lods
mov
mov
stos
mov
pop
inc
jp
cmp
test
dec
add
adcb
xchg
and
xor
nop
test
dec
sub
repnz
movsl
popf
iret
cmpsb
test
outsb
scas
loope
lcall
adc
push
ljmp
lahf
fdivl
or
mov
int3
dec
jbe
lods
and
adcb
cmpsb
or
cmp
jbe
and
cmp
aaa
fwait
jmp
nop
ror
jo
lds
jge
jge
fsub
fs
daa
pusha
mov
and
insb
jne
adc
mov
test
sub
dec
mov
add
hlt
insb
cmp
adcb
nop
dec
pop
cmpb
sahf
or
scas
xchg
ljmp
cmpsl
pop
and
add
xchg
leave
pushf
xchg
jbe
adc
adc
inc
jne
cmp
cmp
addr16
daa
mov
cmp
fwait
inc
daa
lea
inc
mov
or
fwait
sub
pop
dec
stos
mov
or
add
sarl
push
pop
xor
subl
leave
insl
push
mov
xlat
jno
out
scas
sti
push
pop
dec
decb
pop
pop
pushf
mov
cmp
jg
push
push
andl
data16
mov
dec
test
push
push
sub
pop
out
and
mov
fsubs
jbe
add
inc
push
leave
movsb
pop
and
cltd
dec
and
adc
mov
jecxz
test
lret
test
into
mov
pop
cs
lock
xlat
ss
pop
lret
into
mov
mov
adc
out
add
sub
ret
shl
popa
jge
dec
sbb
adcb
aad
aam
jae
xor
push
xor
inc
cmpsl
adc
test
push
jns
or
mov
jbe
and
xchg
movsb
aaa
rclb
sar
lret
mov
add
lret
int3
cmc
xchg
or
lret
in
pop
and
mov
pop
stos
nop
push
mov
int
sbb
test
and
dec
mov
daa
cltd
dec
mov
jbe
popa
das
adc
data16
fwait
jmp
sbb
pop
cwtl
lret
icebp
push
pop
sbb
movzbl
call
lret
dec
loop
pop
xor
push
inc
cmc
add
mov
mov
iret
in
xchg
in
divl
add
lret
in
sub
outsb
cltd
adc
or
cmc
leave
pop
xchg
data16
int3
addl
cli
adc
mov
int
push
das
mov
and
scas
fstl
sub
fdivr
sub
out
xchg
scas
lds
pop
out
test
movsb
mov
inc
cmp
loop
xor
aas
dec
ret
rclb
dec
lret
lea
sbb
push
mov
push
sarb
ss
push
andl
stc
cmp
sub
mov
and
lret
stc
ss
push
jge
xchg
js
jge
test
ss
xor
mov
movsl
pop
icebp
fwait
ljmp
lret
mov
and
add
mov
test
mov
jnp
into
xchg
fidivs
sbb
mov
orb
stos
cmpb
mov
cmp
in
inc
pop
in
test
sarl
popa
mov
in
cmp
dec
mov
fmul
sbb
repz
xchg
pop
jne
fucomi
mov
xor
nop
inc
cs
jge
and
loope
lahf
sahf
nop
gs
dec
inc
cld
ror
sbb
cmp
push
out
jns
cmp
fidivl
jl
mov
rcr
mov
inc
jecxz
jp
mov
push
xchg
mov
add
in
shlb
sub
scas
mov
lods
insl
roll
jecxz
pop
add
arpl
lds
cmpsl
adc
push
lea
dec
cmp
lcall
mov
sbb
sbb
stc
lds
icebp
cmp
lods
rcl
dec
les
fwait
bound
aam
sub
jae
sbbb
outsb
outsl
xor
inc
push
movsl
mov
outsl
jp
pushf
cmp
cwtl
rclb
imul
popf
lods
pop
loopne
mov
cmp
movsl
jnp
shlb
call
cmp
in
sbb
adc
sbbl
xchg
std
adc
in
stos
cmp
push
sbb
cmp
push
popf
sbb
test
xor
lods
mov
mov
inc
sbb
loop
inc
add
sbb
pop
add
repz
xor
push
or
outsl
dec
pushf
fs
dec
pusha
inc
and
pop
ja
pop
add
adc
les
adc
les
aad
mov
int3
lods
mov
scas
pop
test
and
or
or
arpl
inc
lcall
xor
mov
add
mov
mov
cmp
add
mov
loope
push
aaa
xorb
or
pushf
clc
fcoml
sbb
pop
ret
loopne
addr16
mov
mov
cld
fstps
stos
ret
xor
mov
mov
or
clc
jge
cmp
mov
shrb
dec
jmp
rep
mov
xor
cs
adcb
out
xchg
xchg
insl
jno
cmpsb
xor
push
sti
test
outsb
jno
or
push
arpl
imul
int
jae
dec
mov
xchg
lock
imul
jl
inc
cmp
mov
sub
testb
fdivp
in
stos
stos
data16
aas
repz
pop
cwtl
and
sub
inc
inc
or
mov
rorb
sar
adcl
sub
inc
cwtl
je
adc
rcrb
and
pushf
dec
out
bound
pop
or
cmp
data16
inc
int3
and
mov
push
incl
test
dec
xchg
sbb
xor
mov
insl
xchg
int3
sahf
arpl
sub
outsb
sahf
lods
cmpsl
xchg
and
xor
rcrl
in
xorl
movsb
repz
aad
cmp
es
mov
out
loope
test
stos
mulb
mov
ret
fs
sarb
mov
loop
jno
jg
pop
out
jp
jecxz
push
jp
dec
mov
out
sbb
sbb
add
add
lods
add
scas
pop
mov
adc
out
ss
sahf
stc
data16
mov
adc
inc
ret
fstl
xchg
sub
pop
and
nop
mov
mov
jge
xor
mov
dec
roll
shl
mov
mov
shrb
push
and
jb
leave
jae
push
shll
lcall
ret
loope
sqrtps
mov
hlt
or
xor
mov
add
mov
repnz
mov
mov
or
das
push
pop
mov
pop
mov
pop
fnstcw
std
lret
cmp
mov
mov
mov
lret
bound
cmp
in
aad
in
push
xor
pop
in
mov
xchg
lahf
scas
jg
mov
sub
fwait
xchg
cmpsl
fdivrp
push
mov
xchg
push
mov
idivb
leave
shl
xchg
adc
mov
add
repz
push
jp
js
adc
adc
jl
push
dec
fdivl
mov
jge
out
cltd
hlt
or
arpl
pop
xchg
adc
mov
lods
int3
in
jne
sbb
mov
xchg
test
push
adcl
pop
sbbb
icebp
divl
jl
test
mov
adc
jmp
fwait
pop
js
js
stos
aam
cmp
and
or
jo
mov
scas
xchg
jb
fxch
jae
inc
pop
dec
ret
test
sbb
scas
jo
mov
pop
cmp
rcll
int3
mov
mov
and
push
lea
fstps
xor
jnp
jle
mov
xchg
jb
adc
mov
fnstsw
push
bnd
push
xchg
subb
stos
ljmp
jno
sahf
cmpsb
jno
inc
push
push
mov
dec
jmp
inc
roll
cmpsl
mov
sbb
push
lods
dec
mov
pop
arpl
mov
xor
inc
imul
push
push
ss
imul
xor
outsb
push
outsb
scas
roll
mov
movsb
aas
or
call
mov
pop
sub
shrb
pop
jb
xchg
or
arpl
lcall
or
mov
aas
push
loop
shl
push
inc
fnstcw
cmpl
sti
out
mov
mov
jnp
and
lds
cs
repz
jns
mov
or
scas
sub
mov
sub
mov
cmp
fmull
mov
xorb
test
xchg
sbbl
xchg
out
leave
pop
movsb
out
lcall
testb
mov
clc
pop
scas
in
adc
hlt
ficomps
stos
push
loop
test
dec
add
fsubrl
jns
jle
pop
mov
arpl
sub
push
xchg
in
leave
mov
inc
orl
out
and
subl
dec
adc
shlb
adc
jbe
jg
movsl
inc
pop
mov
iret
movsb
ret
clc
test
adc
jmp
xor
outsl
lock
lret
push
call
adc
mov
test
dec
inc
enter
push
add
jae
call
mov
mov
dec
lods
inc
cmc
mov
sti
sbb
sub
jmp
jmp
sbb
xchg
lahf
mov
xor
push
ret
es
xchg
in
test
incb
loope
mov
and
pop
xchg
leave
dec
pop
jo
pop
pushf
popa
sub
inc
out
push
clc
loop
sbb
cmp
xchg
or
popa
add
xor
cmp
inc
and
loop
cmpsl
ja
movsb
test
dec
and
aad
cmp
mov
adc
cs
loope
ret
xchg
and
cli
adc
fsts
mov
fimuls
push
orb
mov
daa
test
mov
and
xor
push
lret
inc
ljmp
lret
adc
cmp
cmp
pop
sbb
lahf
rclb
cmpsb
jae
lret
arpl
into
inc
push
sbb
imul
lret
popw
add
xchg
es
add
lcall
cmpsl
jo
aam
mov
jmp
lret
xlat
test
adc
pop
xchg
aas
pop
mov
shr
xchg
fcoms
dec
outsb
xchg
mov
in
repz
mov
cli
mov
cld
movsb
addl
lahf
inc
ss
stc
jb
loope
bound
xchg
ds
xor
call
in
sbb
mov
jmp
dec
dec
dec
pop
cmp
arpl
xchg
jmp
aas
sbb
js
xchg
push
add
xor
enter
inc
leave
jbe
push
push
test
cs
mov
xchg
jae
jge
cmp
inc
push
push
sti
inc
dec
jge
push
imul
fldenv
pop
int3
inc
aad
and
mov
sbb
mov
repz
subb
mov
cld
mov
movsb
add
das
push
sti
and
ror
xor
cmc
sbb
loope
popf
loope
loopne
repz
cltd
mov
mov
sub
adc
imul
loopne
xchg
add
pushf
cmp
jne
jge
add
jns
call
pop
stos
xchg
jns
xchg
pop
add
insl
push
mov
or
popf
popf
jle
outsl
mov
jne
or
ret
mov
dec
mov
stos
js
mov
jle
pop
out
mov
imul
mov
outsl
popa
push
xchg
ret
stc
es
fisubrs
push
mov
mov
aaa
stos
dec
sub
mov
adc
int
dec
or
mov
inc
cmc
dec
mov
inc
lods
aad
inc
faddl
cs
adc
dec
imul
push
loop
cmp
clc
dec
je
repz
daa
loope
dec
stos
push
subb
out
je
dec
mov
or
in
pushf
arpl
dec
and
sti
push
test
mov
repnz
push
incl
and
or
stos
mov
jge
scas
xor
pop
or
outsl
stos
cli
bound
lret
mov
mov
sbb
in
int
outsb
mov
adc
iret
insb
gs
aaa
cmpsl
add
mov
out
jge
dec
mov
int3
in
repnz
and
out
stos
adcl
sti
es
lcall
arpl
aas
mov
mov
or
mov
das
bound
lret
sbb
inc
mov
incb
icebp
in
add
adc
xlat
mov
ljmp
mov
mov
js
fsubrl
popa
js
into
sub
enter
cmp
dec
xchg
dec
xchg
dec
sbb
scas
psrld
inc
push
add
mov
mov
jb
push
shrb
insl
xor
xchg
cmp
xor
dec
cmp
xor
into
push
sbb
shlb
mov
push
jmp
lret
gs
scas
insl
mov
or
repz
in
scas
inc
adc
mov
pushl
mov
ret
xchg
pop
test
imul
and
orb
pushf
dec
ljmp
in
fsts
fldcw
mov
dec
add
loopne
pushf
jno
jmp
mov
mov
sub
jnp
icebp
inc
sarl
idivl
push
js
mov
xchg
dec
shrl
jge
loopne
inc
mov
fisubs
je
jmp
xchg
or
fs
subb
sub
fnstenv
stos
mov
and
sub
pop
rcr
mov
sbb
in
mov
or
fninit
lea
lods
xchg
ljmp
mov
or
dec
out
mov
add
cmp
add
adc
repz
icebp
mov
int
call
jno
ja
mov
outsl
add
pop
mov
xor
bnd
lcall
orl
jp
and
outsb
mov
std
inc
pop
push
test
cs
and
dec
sub
push
cs
xchg
mov
out
inc
es
shrb
ss
jg
daa
jnp
shl
lret
bound
cmp
push
std
cmp
ds
and
imull
and
lcall
mov
mov
icebp
and
sarb
adc
xchg
xchg
inc
sahf
test
mov
int
in
jae
sub
jmp
stos
in
mov
das
add
xchg
mov
push
adc
out
out
and
fwait
and
lods
jmp
xor
loopne
adc
cmp
push
jle
das
dec
add
pop
fcmovb
mov
mov
aad
mov
es
aaa
xor
scas
push
loop
pop
jge
xlat
lret
sarl
jnp
mov
cmpb
sub
adc
cmpsb
ljmp
sbbl
mov
movsl
data16
xchg
mov
and
inc
iret
inc
loope
out
insb
popa
push
fs
repnz
enter
or
std
femms
push
pop
mov
or
popf
xchg
ud2
push
pop
notb
adc
test
jb
insb
sbb
int3
push
mov
imul
int
inc
in
fs
ss
pushf
imul
pop
test
pop
inc
insl
mov
ja
je
pop
pop
outsb
stc
add
xchg
xchg
test
inc
mov
mov
rol
dec
out
pop
in
inc
add
lret
xor
pop
inc
js
push
inc
cmp
mov
lea
cmpsb
inc
mov
fiadds
fsubrl
jle
fisubs
lds
jnp
mov
mov
inc
dec
cmp
pop
adc
les
jmp
ja
dec
shlb
cmc
cmp
dec
sbb
inc
fdiv
jmp
mov
or
pop
adc
stos
dec
xlat
push
sarb
dec
pusha
adc
xor
xor
ds
inc
cs
fs
gs
pop
stc
loop
add
lcall
shrl
std
cmp
mov
or
cmpsb
mov
sbb
jl
enter
and
jmp
push
fisttpl
inc
sbb
pop
bound
xchg
mov
dec
xchg
mov
shll
sbb
xchg
in
pop
xchg
stos
and
mov
subl
mov
xor
mov
sbbl
fadd
cmp
lea
xor
inc
mov
xor
add
mov
sub
subb
cmp
mov
fs
or
mov
out
shlb
pop
inc
xor
or
mov
sub
mov
arpl
prefetchw
fiaddl
mov
cmp
movsb
push
inc
std
out
mov
jge
cmp
push
in
cwtl
shrb
into
mov
lcall
sti
pop
xchg
sbb
xor
aam
sti
out
and
scas
stos
xchg
jle
or
and
cmp
scas
pop
mov
add
mov
lahf
pop
adc
outsl
scas
or
negl
xchg
rcll
mov
jmp
dec
and
xlat
cmc
lods
xor
mov
je
jg
mov
or
test
movsl
ljmp
mov
stc
pusha
xor
and
adc
jl
pop
icebp
subl
gs
std
jno
lcall
lret
test
jno
fs
mov
or
lds
xchg
jmp
sbb
scas
cs
pop
mov
and
popf
rolb
cmp
shl
out
mov
jo
and
fdivrl
mov
outsb
add
into
jnp
and
push
das
mov
lds
and
or
cmp
xchg
jp
or
pop
inc
fmuls
push
test
dec
jle
push
or
out
outsb
push
sub
ljmp
push
sbb
push
dec
push
bound
std
ja
pop
jge
out
mov
xchg
add
sbb
dec
in
out
incb
mov
push
inc
pop
mov
mov
aas
gs
scas
xchg
in
dec
insl
jne
pushf
pop
jg
test
cmc
sarb
in
fidivrs
mov
jnp
sti
sbb
inc
sti
inc
add
mov
out
mov
mov
movsl
imul
fists
mov
les
es
xchg
sub
arpl
cli
mov
sub
mov
mov
cltd
popf
out
in
jmp
popa
add
mov
add
call
jmp
hlt
push
xor
fidivs
ret
movd
pushf
push
mov
xchg
pop
out
xor
xchg
xchg
mov
inc
inc
push
test
cmpsl
mov
fisttpll
adc
dec
xchg
clc
cbtw
jecxz
mov
dec
pop
dec
or
sbb
mov
fsubrp
pop
mov
lahf
add
in
cmp
jge
fcomip
ds
es
cmc
lret
xchg
or
lods
ds
int
push
lock
lahf
mov
cmp
js
insl
jmp
movsl
and
and
test
or
out
pushf
call
adc
jo
mov
and
lahf
int3
cmpsl
pop
push
sarl
fstps
mov
sbb
push
cs
scas
pop
test
int3
or
inc
outsb
sahf
inc
bound
out
xchg
ss
sub
test
loop
and
aad
push
xchg
icebp
movhps
fistpll
aam
pmulhuw
add
ds
sub
adc
sti
leave
insl
pop
add
mov
sbb
sub
scas
inc
cmpsb
xchg
cmc
dec
out
paddusw
pop
aad
ret
rcll
js
push
and
lock
lea
out
shrl
push
testl
xchg
shll
mov
icebp
jne
mov
push
ret
into
sbb
fs
rcrl
mov
sbb
out
mov
call
lods
or
in
mov
sbb
fs
and
in
fldenv
ja
lock
shll
lds
call
inc
out
in
cmpsb
sahf
fucomi
adc
jge
aad
xor
jmp
incl
fucom
dec
mov
nop
adc
ss
dec
xor
pop
fnstcw
in
lea
fnstsw
sub
shl
inc
jne
rcrb
jp
in
jae
xchg
lods
and
ja
push
imul
push
movsl
js
sub
jmp
jo
test
shrb
cmp
repz
sbb
loopne
and
pop
mov
std
in
and
inc
mov
lcall
sub
das
xor
inc
dec
jbe
in
inc
pop
mov
out
subb
mov
mov
bound
push
rolb
dec
iret
loope
fnstenv
hlt
sbb
mov
jp
movzwl
or
es
cltd
push
sbb
adc
lods
mov
in
scas
mov
bound
nop
cmp
ror
add
xor
ret
cmp
shlb
pop
sarl
mov
in
cltd
fildl
push
push
sahf
or
fsts
scas
jmp
xor
subl
jns
data16
ljmp
xor
jo
cmp
leave
sub
aas
int3
xchg
ja
popa
in
scas
aaa
mov
ss
ret
jge
cmp
jne
push
sub
jge
ja
dec
fistpl
cmp
ret
cmp
xchg
xchg
das
ljmp
push
les
clc
push
in
outsb
lods
push
jmp
cmp
add
push
pop
mov
lea
shrl
lea
jge
in
xchg
fisubs
pop
jle
mov
mov
js
hlt
cmpsl
pop
xchg
push
shlb
xor
les
sbb
and
xchg
dec
dec
sub
divb
push
testb
push
push
ret
pop
out
push
cmp
push
sub
cld
sbb
mov
jb
out
pop
dec
xchg
pop
and
outsb
add
loopne
ljmp
push
pop
stc
cmp
lock
add
push
mov
xchg
movsl
or
hlt
mov
xchg
dec
ds
jg
and
movsb
pusha
or
enter
xchg
and
jmp
mov
lods
or
fbld
enter
je
lret
insl
jmp
repz
ja
test
lret
and
mov
push
repz
dec
test
data16
in
mov
cmpsb
mov
push
push
scas
mov
dec
fdivl
dec
jb
test
das
or
dec
adcb
hlt
push
mov
push
sbb
cmp
and
jnp
not
data16
bound
call
loopne
xlat
in
jmp
push
xchg
iret
das
xchg
add
js
aam
jp
in
outsl
in
pop
or
cmp
out
jb
pop
ljmp
and
jnp
push
dec
mov
inc
mov
in
jo
xchg
icebp
cmp
lock
mov
cmp
dec
push
clc
adc
cs
dec
mov
mov
xor
in
mov
addr16
std
cs
cwtl
mov
inc
lock
lods
mov
std
fimull
pop
ja
fdivp
pop
dec
xor
add
pop
cmpl
xchg
lock
scas
xchg
bound
cmp
xchg
cmc
mov
out
fwait
inc
dec
mov
pop
and
push
sbb
fldt
inc
xorl
inc
mov
jo
iret
xchg
or
callw
mov
add
pushl
pop
mov
es
out
int3
jmp
lahf
jns
mov
xchg
push
leave
orb
gs
pop
mov
and
daa
sbbl
sahf
mov
aaa
js
ret
lret
popa
and
cmp
sar
mov
sbb
add
xchg
sub
pop
add
pop
js
ds
pop
sbbl
out
lds
andl
inc
dec
clc
or
cmc
cltd
fnstenv
popa
jg
mov
sub
into
test
mov
xor
lods
sti
dec
xor
pop
push
pusha
fildl
lock
cmpl
mov
jp
fcomp
jnp
ret
cli
push
lods
ds
cli
in
or
ljmp
jecxz
and
xchg
cld
in
push
dec
sbb
xchg
pop
xchg
dec
cmp
xchg
xchg
mov
outsl
inc
inc
cmp
loopne
jo
xchg
pusha
scas
or
ds
jp
vmovntps
push
mov
sub
mov
add
repz
jbe
enter
pop
mov
push
sahf
or
push
int3
mov
out
xor
scas
sub
jbe
push
or
and
mov
stc
fdivrs
xchg
out
dec
stc
or
mov
push
clc
xchg
pop
ljmp
rorb
xor
mov
mov
sbb
cmp
int3
push
jge
jnp
push
es
push
fcmove
scas
pop
xchg
add
cmp
and
in
test
outsl
xchg
dec
aam
lds
push
cmp
into
ffreep
lods
seta
pusha
lods
aad
and
dec
add
mov
sbb
ret
xor
mov
nop
stos
lods
loope
insb
and
push
cmp
arpl
xchg
rorl
mov
and
mov
xlat
shll
out
stos
sbb
loop
xchg
je
pop
mov
push
mov
mov
test
decl
pop
jne
call
js
stc
pushf
adc
add
ret
repz
addr16
and
pusha
testb
shll
mov
and
inc
loop
test
scas
adc
jnp
xlat
gs
sub
rcll
inc
adc
xor
xchg
movb
pop
mov
push
int3
push
pop
mov
and
sub
push
mov
mov
insb
add
cmp
dec
sub
pushf
xlat
sbb
call
in
inc
repz
and
dec
in
push
lods
xchg
or
mov
loopne
xchg
mov
pop
int3
out
sbb
call
sbb
mov
pop
mov
cmc
out
je
lods
out
jb
gs
bswap
or
inc
sti
hlt
stos
hlt
push
mov
sub
xchg
imul
imul
cli
push
xchg
lock
and
cmc
test
fists
or
mov
push
sbb
xchg
xlat
xor
sahf
dec
xchg
mov
mov
xorl
xchg
jb
and
sub
pop
push
add
mov
adcb
jnp
and
lahf
std
and
test
sti
jmp
mov
mov
push
insb
movsl
dec
jge
cmp
vmovq
out
sbb
pusha
pushf
aaa
rcrb
xchg
movsb
xchg
movsl
and
sub
lods
pop
mov
addr16
push
push
xchg
jmp
outsb
push
mov
andb
das
cmp
loope
pop
cmp
cmp
add
loopne
xchg
mov
pop
pop
xor
push
shll
lods
xlat
ljmp
aam
xchg
mov
xchg
lret
add
xchg
xchg
xor
xchg
dec
and
jae
mov
hlt
icebp
dec
jmp
push
adc
mov
popa
fidivs
cmpsb
push
lret
sahf
mov
adc
rcrl
or
dec
jl
movsl
cmpsb
add
and
sbb
push
fs
push
adc
or
mov
outsl
xor
and
pop
add
jl
push
fsubrp
mov
and
mov
and
pop
or
jle
cmp
mov
or
ss
and
push
cmp
scas
in
and
lea
or
scas
es
pop
push
imul
pop
jno
ds
scas
loopne
ja
fcmovbe
stos
or
je
in
push
jge
cli
dec
insl
mov
in
mov
and
mov
subl
leave
sub
insb
lock
push
sub
sub
out
pop
lods
cld
adcl
inc
jno
push
mov
xor
enter
mov
xchg
mov
pop
imul
sbb
fs
arpl
mov
das
xor
icebp
daa
pusha
inc
int
inc
pop
push
movsb
cs
or
jg
fbstp
dec
push
push
andb
mov
cltd
add
sbb
fisttps
call
sbb
daa
or
insl
aas
jne
stos
push
push
imul
aad
mov
adc
int3
push
scas
dec
mov
test
cmpsl
xchg
fwait
mov
cmc
icebp
xchg
out
das
fdivrl
xor
ds
cltd
and
es
insb
mov
cs
xchg
cmp
inc
loop
test
push
push
cmp
test
pop
sbb
mov
out
scas
inc
loope
inc
xor
jb
mov
icebp
add
dec
jns
movsb
pop
lahf
dec
lret
cld
pop
mov
jnp
dec
lahf
cwtl
mov
roll
ret
popf
ret
or
ds
inc
mov
add
fmul
mov
test
ret
cmpsl
into
fiaddl
cmp
mov
sub
jo
lcall
sbb
sbb
pop
xor
mov
fldcw
inc
mov
stos
xor
aam
daa
cmpb
adc
fstl
test
add
sbb
adc
mov
mov
dec
xlat
stos
lods
mov
xchg
rorb
iret
and
lret
push
inc
cmp
mov
push
push
pop
add
push
jge
pop
sbb
mov
push
jns
cmp
jl
adc
pop
insb
pop
jle
std
mov
xchg
xchg
iret
jo
jl
adc
hlt
das
ja
fildll
jo
icebp
mov
add
and
add
ljmp
stos
pop
mov
fcomip
idivl
sahf
mov
stc
xorb
add
dec
and
push
test
mov
cmp
aas
popf
ljmp
daa
imul
mov
pop
pop
ja
hlt
jecxz
push
ret
pop
jp
imul
xor
cmp
mov
stc
dec
mov
cmp
push
arpl
sub
cmp
mov
mov
dec
loop
jg
arpl
mov
repz
sbb
and
dec
lods
adc
jp
in
gs
dec
inc
mov
dec
aas
xor
test
gs
gs
mov
test
sbb
cmc
into
add
lods
add
in
test
mov
ror
xor
loopne
xor
xchg
cmpsb
mov
lock
addr16
rcll
les
pusha
xchg
stc
jns
sub
sbb
mov
mov
xor
outsb
cmpsb
push
lret
addb
pop
stc
push
mov
mov
xchg
mov
dec
or
add
aaa
addb
sbb
ror
pop
adc
stos
xchg
repnz
rolb
loopne
sub
in
les
xchg
mov
rcll
nop
cmp
mov
pop
sahf
dec
xchg
stc
push
scas
pop
and
push
data16
movsl
clc
xor
xor
rclb
movsl
xchg
xorb
lret
or
xor
pop
xor
pushf
mov
xor
dec
lods
xor
hlt
jmp
lds
inc
fmull
pop
es
int
mov
in
fcmovu
dec
sbb
addr16
scas
or
push
dec
fisubrs
xor
dec
mov
inc
jne
or
push
fst
js
dec
lahf
and
pop
js
imul
xor
inc
pop
repz
in
lahf
sbb
jb
xchg
insb
imul
mov
out
lahf
mov
dec
ficoml
inc
inc
xor
adc
add
jge
add
lea
cmp
pop
mov
cld
in
fsub
mov
inc
push
xor
fwait
lahf
adc
shrl
ljmp
movsl
push
sub
movsl
and
sti
push
cmpxchg
gs
pusha
insb
add
adc
mov
fcmovnu
mov
imul
mov
mov
mov
add
xor
outsl
cmp
mov
stos
xor
stc
dec
cli
or
ljmp
stc
lds
roll
pop
mov
or
mov
mov
pop
push
pop
dec
rcr
daa
xchg
out
jle
xor
sub
std
popa
push
and
or
ljmp
fcomps
std
pop
mov
adc
std
das
fnstcw
mov
hlt
in
xchg
mov
cli
pop
out
xchg
pop
and
dec
pop
lock
lock
push
and
ret
fs
mov
push
add
mov
aas
xchg
ret
pop
jl
pusha
add
mov
mov
xor
or
loope
mov
sub
outsb
jo
leave
enter
pop
push
xchg
adc
aam
jp
mov
jnp
psubd
cld
out
pop
sbb
les
sub
inc
sti
int3
es
xor
pop
nop
mov
clc
push
xor
add
scas
xchg
dec
cmp
xchg
mov
jbe
mov
xchg
dec
stos
add
dec
das
mov
out
mov
inc
adc
stos
cmp
dec
jle
aad
test
sahf
inc
jno
outsb
pop
out
into
mov
sbb
mov
inc
test
test
lret
jae
sbb
lea
inc
dec
pop
push
jecxz
jl
mov
pop
outsl
fiadds
enter
iret
rclb
push
lods
mov
mov
bound
or
jge
cltd
out
test
xor
adc
cs
loop
test
scas
add
ja
inc
xchg
push
lea
icebp
nopl
inc
adc
aaa
ja
dec
pop
je
je
addb
xchg
xor
movsl
nop
fisubs
shlb
iret
imul
dec
call
pop
adc
imul
mov
dec
std
je
jo
shlb
fs
mov
xchg
pop
pop
add
pop
mov
leave
xchg
xchg
add
xor
fimull
cld
xor
push
jns
or
pop
mov
jmp
add
std
ljmp
dec
adc
std
jbe
cmp
popa
mov
add
aaa
test
or
ja
push
sub
push
test
rclb
add
loop
inc
scas
push
mov
fcomi
push
adc
sub
std
sub
dec
test
das
push
sub
das
push
std
icebp
fisubl
test
jl
out
test
and
incb
inc
rsm
pop
cmp
xchg
fs
xor
pop
jno
inc
outsl
push
movsb
loopne
mov
xor
mov
mov
rorb
push
test
cmc
out
sbb
inc
pop
mov
cld
cld
addr16
pop
cltd
sbb
lods
xor
test
int
shlb
pop
imul
xchg
mov
outsb
mov
icebp
xchg
in
add
xchg
push
ret
movsl
outsb
xchg
and
jne
mov
fs
notb
cltd
dec
imul
into
mov
dec
xchg
out
rorb
lahf
fildll
mov
popf
mov
repz
fnstcw
add
xor
and
mov
mov
or
sub
lds
lds
hlt
cli
add
pop
adc
jnp
xor
xor
lahf
call
int
pusha
add
jb
loope
and
out
push
inc
pop
and
pop
sbb
xchg
xchg
push
jl
adc
scas
mov
jp
push
sti
in
jmp
dec
popf
mov
xchg
xchg
js
push
lds
mov
xor
jle
imul
xchg
cmpb
xchg
xor
cld
jb
out
ja
out
and
push
addr16
push
test
ficomps
popa
jmp
repz
push
dec
daa
jbe
inc
call
sbb
js
push
lods
mov
mov
push
xchg
das
pop
scas
mov
mov
dec
inc
and
push
sub
imul
push
push
cmp
mov
test
data16
cmpsb
mov
testb
ret
std
inc
xchg
mov
mov
and
push
into
push
leave
sub
fdivrp
repz
xchg
or
sbb
jnp
jne
ficoms
xor
xor
nop
add
jl
ret
repz
ret
sub
fiadds
cmpl
ljmp
arpl
or
jecxz
lods
iret
addr16
xor
xor
mov
jb
and
adc
aas
dec
into
jl
ljmp
add
adc
pop
pop
pop
add
jno
cld
sarl
inc
dec
inc
jae
movsb
shll
in
adc
push
pop
cmpsl
lcall
clc
lcall
push
xor
in
idivb
popf
cmp
adc
jg
jp
insl
mov
push
jp
cmc
sub
adc
imul
aaa
xchg
xor
cmp
mov
pop
movsb
inc
push
shl
sub
gs
arpl
push
std
mov
pop
cmp
sbb
je
in
push
loopne
arpl
bound
scas
jns
loop
fstpt
int
shll
add
push
jno
sbb
jbe
jo
jle
pop
sbb
mov
mov
fiadds
and
mov
iret
mov
pushw
stos
outsl
xchg
cli
xlat
stos
insb
pop
push
inc
lahf
lret
adc
js
mov
into
leave
movl
test
je
adc
lds
dec
mov
cmp
out
movsb
hlt
lea
imul
cmpsb
es
mov
or
out
sahf
mov
outsl
popa
jae
aaa
and
inc
inc
xor
inc
jge
ror
push
xchg
adc
imul
aas
roll
or
stos
ja
or
ds
adc
mov
test
cwtl
aam
imul
stc
sbb
cmp
into
call
out
sbb
mov
add
push
xor
sbb
sub
cmp
shll
imul
fisubl
and
shll
ficoms
pushw
mov
fs
int
mov
cmp
cwtl
push
pop
les
inc
xlat
lahf
xor
mov
add
out
movsl
xchg
test
fcmovb
enter
arpl
mov
jnp
xchg
push
mov
push
or
jl
std
dec
andl
push
mov
in
call
xor
ja
mov
pop
lea
xchg
mov
pop
jmp
pop
mov
xchg
mov
pusha
jl
push
push
aas
pop
mov
jmp
popaw
cmp
std
mov
mov
adc
cmp
push
inc
push
inc
mov
aam
mov
lcall
movsb
cmpsb
sbb
push
and
dec
xor
repz
push
popf
jecxz
subb
lods
lahf
jbe
inc
inc
mov
push
cmp
clc
in
call
add
lock
sub
dec
pop
xchg
cmp
lods
dec
fcoms
addb
stos
dec
inc
dec
add
inc
jg
inc
xchg
adc
or
scas
lahf
aaa
pop
jne
jle
jae
add
mov
jecxz
jl
xor
mov
das
and
mov
jmp
insl
ret
fistpll
test
inc
mov
sub
sub
das
push
and
and
mov
dec
xchg
or
adc
imul
mov
fsubs
clc
dec
int3
lods
loop
jg
pop
es
or
add
les
mov
pop
es
sub
xor
push
jmp
jg
addl
sub
and
prefetch
jnp
push
das
shlb
or
mov
fmul
insb
repnz
movd
ret
orb
inc
inc
adc
cmpl
imul
ret
mov
sub
pop
das
jb
ret
mov
lahf
jle
mov
push
cmp
in
ret
xor
add
pop
and
and
adc
jo
lahf
enter
sub
xchg
mov
cmp
dec
push
adc
stos
adc
pop
pop
dec
mov
sub
and
push
leave
adc
sbb
cmc
pop
add
insb
sub
push
add
inc
and
adc
adc
ja
push
push
cli
xor
les
cmc
pop
fnstsw
incb
popa
dec
iret
stos
pop
mov
int3
fisttps
cmpb
iret
or
xor
mov
lods
and
popf
add
or
ja
add
cwtl
sbb
mov
sti
pop
jb
lret
mov
out
sub
jg
sub
fidivrl
mov
cwtl
or
fsubrs
ret
jg
adc
aas
or
cmp
aam
adc
lock
mov
outsb
pop
aas
stos
jp
std
idiv
daa
fistl
add
sbb
outsb
or
mov
adc
mov
sbb
or
fsts
cwtl
push
fimuls
pop
xchg
dec
mov
out
xchg
scas
filds
testl
jge
or
pop
lock
jmp
pop
pop
xchg
bound
repz
sbb
movsb
lret
cmpsl
and
push
loopne
inc
shlb
mov
cmpsl
dec
or
jmp
lea
mov
adc
add
pop
neg
mov
add
addl
cmp
jbe
adc
inc
shll
out
in
mov
and
xchg
sbb
dec
aad
ds
hlt
sbb
dec
jns
fisubrs
std
shl
push
rol
arpl
dec
ljmp
shlb
cwtl
testb
adc
cmpsl
mov
movsl
andb
pushf
jle
std
jge
xlat
sub
push
lahf
adc
dec
lds
sbb
sub
mov
hlt
mull
imul
dec
fisubrl
cmc
int
mov
scas
cld
push
jns
dec
jb
add
aad
movsl
in
in
icebp
inc
les
jo
mov
pop
das
bound
shrb
push
test
lahf
aas
lahf
jg
addr16
push
aad
sbb
mov
loop
xchg
adcb
imul
imull
dec
dec
inc
sub
mov
std
imul
sbb
inc
xchg
sub
out
mov
sub
out
xchg
mov
ret
mov
adc
nop
xchg
shr
lea
mov
jno
sbb
xchg
xchg
inc
fnstsw
xchg
leave
rorl
lock
inc
xchg
xchg
aad
insl
into
jge
ret
sbb
jmp
mov
mov
inc
sub
mov
test
xor
scas
ror
mov
xor
sbb
push
push
inc
cltd
ror
xor
mov
in
ret
pop
movsl
sub
divb
in
loope
idivl
cwtl
mov
sbb
push
clc
lcall
add
ljmp
sub
push
std
fwait
jbe
or
cmp
inc
loope
mov
sbb
pop
ss
pop
cmp
or
sbb
xchg
int
in
loopne
cld
push
lods
dec
xor
jne
out
ret
aaa
ffreep
cwtl
lahf
or
jecxz
inc
push
ljmp
loop
inc
push
in
int3
js
adc
cmp
and
fildll
arpl
mov
fadds
outsb
in
bound
mov
and
xchg
bound
mov
push
inc
aaa
push
inc
cltd
mov
loopne
mov
fs
jge
into
push
js
jge
push
sbb
cmc
push
adc
cmpxchg
in
mov
lret
jp
daa
jbe
or
mov
mov
loope
jp
xchg
adc
jg
pushw
mov
popf
mov
sbb
mov
add
dec
mov
add
and
push
inc
and
adcl
fiadds
inc
mov
dec
in
fs
mov
dec
dec
jl
nop
pop
out
jne
xor
pop
out
aad
jmp
int3
xchg
jecxz
test
repz
sbb
cmp
lods
sbb
or
addb
sbb
add
test
iret
repz
sbb
popa
adc
mov
andb
cmp
mov
mov
push
aad
xor
mov
dec
xor
jne
mov
pusha
push
or
arpl
xchg
fwait
loopne
sbbl
pop
insl
or
sub
fwait
xchg
push
pop
mov
shrb
and
cmp
repz
and
adc
cld
inc
hlt
mov
cmp
test
jae
xor
bound
fnstsw
int3
int
push
idivl
in
jp
add
and
pop
subb
es
scas
scas
notl
add
sbb
cmp
mov
adc
fdivr
inc
fs
add
add
arpl
add
stos
pop
xchg
int
sti
adc
popa
mov
fadds
gs
mov
fwait
and
shrl
xchg
decb
mov
insb
loopne
rolb
mov
xchg
xchg
jbe
push
lds
insb
in
sub
sbb
adc
push
mov
mov
sbb
lret
or
mov
repz
push
cltd
sub
pushf
lock
in
pusha
push
jnp
aaa
bound
pop
xor
fdivrs
mov
mov
cli
mov
adcl
negb
pushf
xchg
insb
mov
cli
or
cmpsl
mov
es
fildll
cs
pop
cmpsb
xchg
mov
outsb
pop
fcmovb
mov
leave
or
and
fwait
shlb
and
inc
nop
lret
jg
adc
int
lods
dec
dec
jno
dec
unpckhps
lock
int
cmp
pushf
repnz
sbb
xor
adc
mov
mov
or
inc
stc
push
jecxz
lret
mov
push
pushf
sbb
xchg
dec
mov
and
push
inc
js
cmp
scas
xor
xchg
push
push
add
in
or
pop
dec
or
mov
dec
mov
inc
lock
or
fadds
mov
lods
jp
cmp
sarl
mov
xor
cltd
and
imulb
push
or
clc
push
jg
fistpll
aam
push
xchg
pop
cmp
scas
fst
xchg
sub
out
daa
jnp
inc
hlt
cld
out
lods
shll
pop
adc
xor
adc
mov
mov
enter
loopne
popl
into
stos
out
xchg
aas
and
bound
xor
aaa
mov
cmpsl
and
sub
jmp
clc
sbb
sbb
in
mov
cmp
pop
outsb
fnstcw
fstps
jg
push
xor
enter
int
call
imul
mov
push
fldt
imul
rcr
jmp
gs
jno
movsb
push
scas
mov
xchg
jg
fstpl
clc
push
mov
push
and
mov
push
xchg
adc
mov
test
dec
bound
std
mov
btc
test
mov
mov
in
jl
pop
repz
sbb
and
jae
pushf
pop
mov
mov
loopne
sbb
xchg
fs
out
cmp
cmp
aas
enter
sub
lea
rcrl
aas
adc
jge
mov
daa
es
out
inc
and
aas
fnstcw
xor
lret
mov
sarb
faddl
out
rol
cmp
popa
jge
mov
stos
xchg
inc
fnstenv
cwtl
add
sub
lods
loope
in
mov
jge
popf
repz
mov
or
imul
fsubrs
pop
push
add
or
xlat
push
ja
loopne
xchg
mov
add
clc
push
inc
sbb
dec
rolb
jnp
xchg
push
or
inc
pop
dec
loop
std
enter
fsubrl
mov
sub
cwtl
stc
xchg
test
jmp
jmp
repnz
lahf
lds
inc
test
xor
add
enter
into
push
mov
adc
cmpl
ret
movsl
dec
xchg
sbb
push
scas
cmp
pop
pop
lahf
and
jnp
imul
jne
mov
sub
pop
cmpsl
mov
sti
lock
adc
out
stc
sub
lods
rep
push
inc
rol
jl
cld
in
adc
mov
rcr
gs
jno
out
mov
mov
enter
mov
xor
xor
in
jb
in
push
mov
mov
adc
sbb
fldcw
mov
jnp
xor
test
cmpsl
inc
adcl
mov
jecxz
xchg
xor
adc
add
jne
imul
jnp
test
repnz
pop
sub
push
mov
push
int
lahf
dec
inc
push
scas
inc
jae
dec
mov
mov
adc
popf
cmp
jb
loopne
test
xchg
xor
mov
ret
xor
push
std
adc
popf
adc
out
mov
mov
adc
mov
stos
push
dec
ljmp
xchg
push
xor
mov
scas
in
or
pop
dec
add
sbb
sub
ds
test
fisttps
cmpb
pop
lea
sbb
add
pop
cmpsb
in
cmp
adc
xor
jo
mov
std
inc
gs
daa
xor
fiadds
adc
inc
daa
sub
sldt
in
mov
stos
mov
cmp
and
and
add
cwtl
cmp
jnp
inc
sbbl
mov
xchg
stc
cli
and
jns
push
adc
insl
xchg
xor
popa
xchg
inc
pop
xchg
fwait
or
sub
mov
lods
cmp
fwait
push
xchg
mov
mov
add
sub
sub
div
cmp
dec
in
leave
add
cmpl
nop
les
add
and
sub
sarb
jmp
cmp
xchg
dec
lret
mov
test
stc
pop
or
mov
xchg
mov
dec
pop
movsl
test
mov
pop
cmpsl
in
jp
fsubl
and
rol
jmp
mov
out
pusha
test
and
sbb
sub
outsl
xor
dec
sbb
xchg
pop
pop
dec
push
push
shll
int3
mov
fcomps
jno
shl
ret
jecxz
jae,pn
in
pop
cmp
mov
sbb
jb
scas
mov
stos
dec
loopne
add
ds
lods
mov
xor
mov
push
loopne
data16
cmp
ljmp
add
and
xchg
cmp
imul
std
out
pop
sub
loop
pop
int
js
in
divl
clc
cmpsb
inc
js
dec
cmp
rolb
mov
movsl
adc
arpl
jmp
sub
adc
mov
ret
clc
adc
push
cld
jnp
shlb
in
imul
mov
fwait
icebp
sti
icebp
mov
ret
xor
addr16
les
clc
pop
sub
pop
dec
push
sub
iret
rorl
mov
and
out
pop
mov
mov
dec
push
jbe
insl
dec
pusha
cwtl
clc
push
mov
imul
xor
cltd
ret
dec
xchg
pop
sbb
popf
pop
pop
scas
test
dec
xchg
insb
or
sub
pcmpeqw
and
scas
mov
fcomip
xor
and
add
hlt
fildll
mov
decb
push
mov
cmp
mov
xor
jmp
fs
mov
jne
pushf
xor
adc
inc
jl
lods
shll
mov
push
mov
aad
cmp
push
mov
rcll
mov
ret
push
roll
xor
ljmp
bound
mov
ss
pop
leave
lret
divb
lods
mov
fadds
andl
leave
stos
inc
loop
push
mov
inc
jl
push
fimull
jg
scas
pop
mov
or
mov
push
mov
jne
xchg
xchg
pop
popa
mov
scas
ret
jecxz
fldl
je
ficomps
dec
inc
xor
insl
xchg
and
cmp
xchg
xor
xchg
xchg
test
jno
cs
fiaddl
std
mov
jns
test
or
sarl
jne
mov
push
fisubs
imul
loop
loopne
pop
mov
xorl
lea
jne
sbb
loopne
lock
les
pushf
test
dec
xor
mov
call
dec
xorl
jle
ret
add
mov
mov
notb
xchg
or
dec
in
push
dec
fisubrs
mov
nop
sub
pushf
inc
fnstenv
sbb
call
and
testl
mov
lahf
xchg
push
inc
and
inc
sub
andl
sbb
sub
push
adc
stc
mov
inc
push
mov
lahf
adc
aas
sub
into
xorb
rorb
out
lcall
xor
pop
mov
and
aam
clc
sbb
cmpsb
nop
mov
xor
cld
aad
neg
int3
insb
adc
mov
xor
mov
imul
shll
pop
std
popa
pop
pop
out
xor
inc
or
xchg
mov
adc
popf
popa
iret
pop
mov
xchg
addr16
cli
mov
or
aaa
sub
mov
jle
jecxz
xchg
mov
jnp
insl
or
nop
repnz
add
jne
aaa
loope
ja
jecxz
inc
sbb
dec
lcall
mov
cwtl
out
icebp
icebp
mov
cmp
or
loope
daa
inc
mov
add
and
pop
cmp
ret
push
in
std
push
cmpsb
lds
mov
in
repz
in
icebp
xchg
pop
iret
lret
pop
aas
inc
sub
mov
gs
repz
mov
mov
aaa
lahf
shl
pop
xchg
jmp
cmpb
push
out
es
add
shrb
cmp
and
or
scas
mov
lods
in
cmp
loope
shll
adc
cld
pop
add
sub
jae
shlb
fisubs
mov
push
lahf
sbb
gs
or
fisubs
test
pushf
ss
sbb
jle
push
xchg
sbb
xchg
loopew
jmp
repz
mov
mov
mov
mov
pop
xchg
mov
dec
jo
lods
push
int3
inc
movsb
jecxz
add
inc
and
out
pushf
in
adcl
xchg
je
ja
jb
dec
lea
scas
xlat
fcmovu
xchg
xchg
cltd
dec
sti
cmpsb
or
sub
xor
cmpsb
insl
cmpsl
xor
mov
inc
int
push
les
mov
pop
ja
cli
xlat
mov
out
xchg
dec
pusha
adc
shl
cmp
mov
lret
adc
mov
dec
cmpsl
sbb
rolb
hlt
or
push
in
inc
mov
push
lcall
iret
mov
fnstcw
insl
adc
and
pop
pop
fsubrl
sbb
int3
mov
test
xchg
pop
mov
in
and
or
mov
bound
lods
or
ss
add
fisubrs
sub
or
lea
mov
or
enter
and
pminub
sbb
inc
pop
add
mov
sub
and
les
sbb
sbb
loope
call
loop
call
xchg
mov
fsubr
std
daa
mov
rorb
pop
jns
sti
mov
sbb
jns
cli
fisttpl
je
outsb
add
mov
xor
pushf
sbb
or
pop
lea
mov
bound
fidivs
out
jle
int3
pop
adc
cli
call
outsb
pop
insb
in
enter
add
push
pop
or
xchg
adc
add
mov
loop
adc
stc
lock
dec
xchg
test
xchg
popf
mov
lods
bound
int
aaa
das
lret
mov
lret
push
lret
test
idivb
loope
adc
aaa
adc
sub
std
jmp
add
jns
inc
add
lret
roll
popa
andb
orl
xor
loope
les
pop
dec
scas
in
andb
mov
adc
lea
loopne
js
and
push
xor
imul
sbb
xlat
movsl
pop
adc
lahf
aaa
sahf
fdivrp
in
scas
and
inc
pusha
lea
out
dec
adc
adc
aaa
in
or
sub
cmpsb
les
nop
mov
jmp
xchg
subb
int
scas
and
xchg
mov
jns
out
arpl
xor
imul
add
xchg
movsb
cmp
test
nop
sbb
mov
movsb
bound
stos
jp
jecxz
addb
cmc
rol
pop
dec
adc
pushf
jg
sbb
sbb
fstpl
cmp
andnps
pop
xchg
mov
in
add
jns
out
sahf
call
pop
cmp
loop
stos
dec
inc
call
mov
cmp
jl
lock
aam
lahf
pop
dec
and
push
pop
and
push
int
pusha
pop
test
cwtl
push
cmp
dec
add
jnp
or
push
aaa
mov
dec
xchg
repnz
jg
sub
outsb
rcll
jg
lret
leave
test
gs
adc
frndint
mov
and
int3
jp
and
add
jno
subl
inc
xlat
inc
imul
lds
push
pop
mov
sahf
or
dec
inc
rolb
jp
fsub
gs
repnz
xchg
lret
mov
aad
negb
out
pop
test
inc
cmp
dec
ja
test
sbb
hlt
aaa
or
mov
jno
pop
mov
or
mov
mov
sub
push
popa
jge
mov
jns
and
push
cmp
mov
add
leave
divl
mov
repz
ss
nop
and
stos
jns
mov
loopne
xchg
ret
fadds
mov
out
ret
sub
leave
xchg
frstor
je
sbb
subl
xor
sub
xchg
mov
dec
mov
pop
adc
aas
in
jo
fs
pop
add
xchg
lock
add
mov
sbb
gs
out
imul
push
cwtl
cmpsl
cld
add
sarb
xor
iret
xor
xchg
es
iret
xor
jbe
insb
mov
aad
sbb
sub
xlat
cmp
or
lds
ror
and
iret
cltd
or
stc
cmpsl
jno
mov
lea
rorl
popf
mov
jb
pop
fsubrl
add
add
inc
lds
sub
sbb
xchg
lods
lret
cmc
ficoms
in
mov
and
mov
stos
sub
shll
mov
es
mov
fisttpl
iret
ja
pop
jmp
mov
dec
and
outsl
cmp
incb
xchg
pop
stos
out
js
pop
xor
dec
jb
xor
push
pushf
push
mov
js
addr16
mov
adc
pop
hlt
andb
push
inc
jp
dec
loope
outsb
add
in
aam
rol
xor
cmp
mov
movsl
jecxz
mov
movsl
lods
dec
push
jp
xchg
mov
add
xchg
dec
sbb
cmpsl
push
jge
out
mov
nop
mov
scas
adc
jmp
jmp
pop
add
inc
xor
jno
flds
dec
pop
sahf
aad
xlat
lods
ds
aas
daa
lock
imul
scas
adc
push
fstpt
cmp
sarb
inc
addr16
sub
stos
push
push
test
dec
jg
ret
outsb
inc
push
sbb
jno
sbb
inc
rorl
and
inc
xor
aam
xchg
pop
call
call
jg
std
add
xor
pushl
pop
xor
or
push
push
or
cmp
jmp
mov
js
loopne
pop
outsl
cmp
nop
lock
shlb
sbb
jmp
xchg
pop
ret
insl
call
daa
jg
rorl
pop
inc
adc
pop
xchg
cmpsl
or
mov
dec
or
xchg
push
mov
adc
aas
imulb
aad
sbb
mov
and
push
pop
in
test
sbb
call
xor
out
sbb
bound
hlt
lret
sbb
dec
aam
sub
jne
fstps
mov
pop
test
out
fists
jmp
jp
mov
push
add
sbb
mov
jo
repz
fldenv
adc
cmpsb
xchg
mov
cmpb
adc
inc
movswl
std
sti
cmp
fidivs
cmp
std
test
pop
mov
mov
push
mov
pop
ret
xchg
cld
cli
sub
inc
ds
daa
stos
mov
dec
rol
mov
adc
loope
cltd
adc
mov
stos
mov
in
push
shll
pop
inc
push
ss
xchg
push
cmp
xchg
xchg
pop
pop
and
je
andl
movsl
test
hlt
jnp
cmpsb
aam
add
adc
dec
mov
dec
je
icebp
cmp
mov
out
fdivrp
add
ljmp
mov
or
int
jns
push
sbb
addr16
push
xchg
repnz
add
adc
add
jl
push
sti
sbb
dec
sbb
loop
push
xchg
sub
fs
addl
std
jmp
jne
cmc
add
jle
inc
sub
pop
std
pop
repz
mov
ret
js
or
test
push
popf
lock
pop
pop
mov
jmp
mov
push
mov
fbstp
adc
mov
add
fnstsw
mov
mov
out
or
fs
sahf
aas
or
outsl
pop
loop
dec
add
xchg
ret
in
xchg
je
mov
test
or
mov
or
mov
int3
xor
inc
push
push
stos
xchg
cmp
dec
inc
jno
pop
mov
sbb
xor
fistps
jecxz
or
ret
sahf
jmp
imul
pop
bound
add
negl
push
ja
and
jp
jge
push
loope
pop
repnz
jmp
jae
lock
and
dec
xor
out
cmc
scas
pop
xor
into
xchg
pop
adc
sub
xor
fimull
fimull
fwait
ret
fcmovnb
add
aaa
push
and
in
inc
enter
sti
test
fldl
leave
bswap
lret
stos
aaa
push
and
ret
enter
popf
xorb
bound
insl
in
push
xlat
dec
xchg
xchg
xor
cmp
cmp
xchg
daa
test
addl
mov
sbb
push
sub
into
jge
movsl
leave
movsl
push
out
sub
or
inc
bound
shll
jmp
xchg
mov
push
mov
dec
and
cltd
push
faddl
cmpl
clc
mov
pop
and
les
lcall
ss
std
int3
cmp
dec
loop
dec
adcl
add
or
scas
fucomip
call
and
in
fsub
pop
ficomps
cwtl
xor
or
cmp
inc
add
cmp
pushl
mov
nop
push
xchg
add
mov
and
dec
mov
jg
test
mov
les
mov
lock
mov
cmpl
mov
adc
lods
or
xchg
sub
outsb
mov
xchg
xchg
jbe
push
insb
push
cmc
xchg
jg
lods
lret
dec
pushw
nop
adc
insl
push
je
mov
sub
mov
push
inc
push
cmc
in
fstpt
inc
sub
push
lods
pop
mov
cmp
andl
aad
and
push
shll
cld
clc
mov
push
lcall
and
push
or
rol
mov
mov
push
in
arpl
repz
addr16
inc
cld
pop
popf
aas
xor
add
ficoml
xchg
mov
ss
pop
iret
sarb
push
inc
ja
scas
mov
jp
sbb
dec
sub
jbe
das
aaa
pop
adc
xchg
call
pop
es
test
xor
inc
test
imul
jns
dec
xor
sub
insl
sbb
pop
adc
lcall
out
pop
push
and
push
dec
inc
jnp
pop
jne
dec
rolb
lcall
lock
pusha
xchg
adc
fst
push
inc
xchg
mov
adc
push
loope
and
cli
int3
call
push
or
and
divl
and
imulb
outsb
or
adc
or
jmp
cmp
fnstenv
mov
and
push
sbb
mull
ja
mov
dec
gs
push
loopne
mov
xacquire
bound
xor
xchg
lds
test
int3
inc
xchg
mov
add
sbb
push
ja
lods
jmp
add
arpl
xchg
fisttps
pop
mov
cmp
cmp
jecxz
pop
cmp
pop
insb
push
int3
push
addr16
jle
sub
cmp
outsl
mov
mov
jp
push
sbb
sbb
xchg
add
or
fcmovb
dec
cmp
loop
mov
mov
cmc
je
out
je
sub
lcall
add
movl
dec
lcall
add
pusha
cli
dec
mov
pusha
loop
dec
cmp
insl
lcall
pause
sub
pop
cmpsb
xchg
enter
dec
pcmpeqb
roll
cmpb
neg
pop
cld
sub
stos
push
and
sub
leave
aas
inc
ljmp
xor
push
push
lods
pop
lods
addl
ret
sub
push
or
stos
ds
push
aaa
sbb
and
adc
inc
mov
dec
out
fisubl
and
add
pop
ljmp
cmpsb
jns
fists
jmp
fcompl
ja
and
mov
and
sarb
out
sub
stos
jecxz
mov
pop
jns
mov
shrb
inc
and
mov
push
mov
pop
dec
in
xchg
xchg
cs
aas
fistps
mulb
inc
push
in
imul
inc
xlat
lcall
xor
dec
pushf
fnstenv
dec
ds
xchg
push
mov
imul
mov
cltd
bound
inc
pusha
test
or
mov
std
ficomps
lock
sbb
xchg
adc
mov
mov
sbbl
cld
lcall
fwait
std
push
pop
jp
sbb
sti
add
notl
add
or
or
xchg
mov
fidivrl
data16
lds
inc
jmp
test
aam
xor
iret
ja
nop
push
xor
xchg
dec
ja
xchg
sbb
sbb
call
out
setno
ljmp
sbb
gs
test
dec
jg
fcomps
jo
pop
ljmp
lret
xor
je
and
or
fsubs
or
sahf
or
daa
ds
out
cmp
mov
inc
je
cmp
xchg
mov
shrb
xor
cltd
stc
adc
xchg
add
adc
jmpw
mov
enter
lret
cmp
cltd
lret
repz
iret
mov
cmpsb
xor
pop
push
mov
dec
popa
mov
fmuls
and
mov
mov
imul
mov
inc
sub
sub
jmp
je
xor
add
cmp
and
mov
xlat
mov
mov
cmp
mov
mov
sar
lods
cmc
or
jp
xchg
lock
call
xchg
push
inc
sbb
mov
or
jbe
inc
mov
mov
loope
les
nop
frstor
jle
push
lret
leave
push
mov
adc
push
in
test
push
push
lods
out
cmpsl
cli
in
shlb
sbb
jge
std
mov
mov
sti
pop
testb
adc
dec
cs
add
nop
jmp
inc
mov
test
push
popf
ss
push
adc
test
sarb
cs
js
fildll
js
aaa
fcompl
outsb
sub
add
mov
mov
inc
test
popf
in
std
sbb
sbb
adc
stos
add
dec
push
xor
out
scas
sub
std
out
inc
ljmp
mov
mov
rorb
out
test
cmp
loopne
ret
lods
les
test
adc
jg
mov
movsb
ds
jge
into
loop
sbb
std
xchg
out
or
add
jmp
imul
ds
push
xor
pop
xor
addr16
and
arpl
jno
push
insb
loopne
outsb
aad
movsb
ficompl
stc
adc
xchg
adc
movq
ret
arpl
mov
mov
insl
stos
test
and
scas
jnp
mov
add
sbb
add
xchg
sub
repz
movsb
sbb
mov
lods
aas
adc
pop
cmpsb
int
xor
cmp
xchg
jg
and
sti
mov
add
ss
cwtl
pop
dec
add
adc
in
mov
push
mov
fs
out
lcall
fcomps
mov
mov
inc
jae
mov
imul
mov
andl
stc
out
mov
rcr
sbb
jg
sti
add
fdivl
iret
mov
jecxz
add
lods
and
shr
lcall
test
ret
test
pop
arpl
ljmp
sbb
push
es
popa
cltd
sub
mov
test
add
sub
push
hlt
out
enter
add
pop
aaa
push
push
leave
inc
mov
fnsave
jmp
test
in
push
mov
jno
ret
test
ds
lahf
int3
adc
testb
mov
and
inc
and
cs
ljmp
test
lret
sub
leave
mov
xor
add
dec
pop
and
dec
call
push
jno
pushf
pop
mov
mov
mov
scas
sbb
push
scas
out
pop
pop
mov
aam
mov
adc
pop
pop
mov
dec
add
frstor
lret
shrl
mov
leave
flds
negb
nop
sarb
pop
dec
fs
push
out
ss
sarl
imul
jae
mov
jbe,pt
inc
pop
in
add
pushf
push
insb
and
adc
scas
inc
inc
cli
es
xor
jo
push
and
sbb
repz
mov
iret
mov
setbe
or
xchg
xchg
add
sysret
adc
loop
ret
jae
stc
cmp
jge
data16
mov
mov
mov
test
ret
lods
call
sbb
imul
cwtl
push
xchg
jecxz
xchg
and
jnp,pn
bound
jmp
int3
stos
fidivrl
mov
aaa
jb
push
call
and
and
pusha
lds
or
push
shrl
sbb
push
mov
and
or
jbe
sbb
stos
push
nop
mov
movsl
ds
loope
adc
dec
jmp
fwait
adc
and
cmp
mov
xchg
stos
jbe
addr16
xchg
andb
pop
dec
lcall
xor
pushf
scas
or
arpl
imul
cmpsb
push
pop
xchg
sub
xor
inc
jp
sub
hlt
xchg
dec
xchg
stos
divb
arpl
push
sbb
dec
xorb
fisubl
outsl
rep
repz
mov
iret
enter
adc
mov
outsb
xchg
xor
lock
mov
out
out
sar
sbbb
and
sbbl
dec
jg
cwtl
in
frstor
jge
pop
flds
sbb
fldcw
and
or
pop
cmp
and
popf
aaa
mov
movb
mov
test
jle
aas
add
mov
jmp
pushf
xor
in
and
xchg
mov
je
mov
mov
mov
pop
xchg
or
aaa
pop
jae
jmp
outsl
shll
xor
loope
loope
inc
pop
dec
xor
lea
loope
push
push
cmp
call
mov
sub
sub
xchg
ss
shll
xchg
or
lahf
aaa
jbe
ret
lret
and
in
lods
je
addl
cli
cli
dec
cmc
jns
cmpl
xchg
orb
cltd
xchg
push
out
pop
xor
aam
pop
les
mov
sub
xchg
fldt
xchg
out
loopne
adc
aaa
enter
inc
aaa
imul
jg
orb
sbb
dec
push
mov
ror
add
ret
scas
dec
jns
movsl
push
xchg
mov
pop
mov
decb
cs
pop
dec
mov
enter
dec
inc
fwait
stos
enter
sub
pop
sbb
mov
addr16
push
testb
minps
psllq
out
inc
inc
pop
iret
loopne
adc
cwtl
and
inc
or
adc
pop
stos
cwtl
lock
jae
mov
sbbl
jo
jmp
inc
ffreep
lods
xorb
push
test
loope
hlt
or
test
mov
dec
mov
jge
setns
xor
push
fisubl
xchg
fnstcw
adc
popa
push
mov
inc
push
test
sub
imul
lods
adc
fs
arpl
cmc
lods
or
mov
cmpl
out
lahf
sub
cmp
ret
mul
push
and
loope
mov
sbb
in
dec
mov
pushf
movsl
test
es
sub
and
stc
lea
xchg
push
mov
mov
dec
cld
sub
adc
xorl
sub
lock
sbb
popf
out
dec
pop
popf
fsubp
test
adc
mov
in
inc
sahf
out
sub
adcl
inc
in
scas
adc
xchg
mov
mov
rcrb
xchg
inc
lods
call
jno
push
mov
dec
push
stos
push
xor
pop
pop
push
pop
jmp
sbb
shrl
in
sarl
loopne
cmp
cmc
add
cmpsl
lods
dec
cmp
lods
or
rorl
pop
leave
adc
shlb
test
mov
mov
lods
pop
jecxz
or
jae
ja
sbb
sub
test
leave
and
push
leave
jp
mov
xchg
jecxz
jbe
test
cwtl
in
lahf
mov
sbb
cs
shll
and
shll
mov
ja
jo
xor
or
mov
pop
lds
jne
rolw
mov
push
dec
shlb
ja
inc
cmpb
pusha
adc
mov
lret
push
jmp
insb
jecxz
add
xchg
in
nop
mov
roll
lret
fcomi
cmp
mov
jb
or
pop
mov
insb
fldcw
stos
cmp
mov
jnp
std
and
push
icebp
rorl
cmp
je
pop
mov
jns
xchg
push
cltd
lahf
dec
mov
dec
mov
sbb
inc
dec
cwtl
xchg
sbb
push
cwtl
pop
es
pop
sbb
insl
out
inc
and
mov
push
or
mov
mov
add
nop
add
and
fcomi
mov
jp
adc
nop
test
inc
inc
jb
out
xchg
adc
dec
popa
cmp
cwtl
je
push
icebp
loopne
push
in
shll
sbb
out
push
pop
cmpl
xchg
loop
jp
jae
inc
ret
cmc
inc
and
cld
mov
jl
das
ja
fists
xchg
in
jnp
xor
test
add
lds
fprem1
sbb
add
js
xchg
xchg
xlat
fnstcw
mov
jb
cmpl
jp
rclb
xchg
cli
sub
or
mov
xor
outsl
bound
pushf
aaa
xlat
int
imul
cmp
sub
mov
test
xor
inc
or
movsb
or
jl
cs
rclb
sub
and
divl
and
xor
or
fisttpll
js
stos
sarl
shr
setno
popf
fistpl
adc
xor
mov
cmc
in
or
adc
mov
shrb
ja
cmp
jmp
add
mov
addr16
addr16
das
xchg
adcl
or
andl
push
dec
mov
cli
cld
jecxz
out
adc
scas
mov
jno
cld
shrl
jle
lahf
and
push
shlb
hlt
xor
out
mov
fs
aad
out
fstpl
pop
pop
stc
stos
jp
outsl
inc
cmp
cli
cmp
and
or
inc
mov
dec
es
leave
mov
push
fxch
push
mov
rolb
xchg
inc
sbb
push
sahf
adc
imul
mov
mov
aam
pop
push
int3
jo
pop
add
xor
into
mov
add
repnz
in
imul
cltd
inc
fsubrl
mov
enter
sub
cmp
fsubr
jnp
jo
stc
bound
sub
in
ja
pop
and
xchg
jg
ja
pop
rcrb
sub
inc
mov
sbb
xor
xchg
pop
xor
mov
loopne
insl
jae
or
lds
adc
pop
shrb
push
testl
test
or
xchg
mov
mov
jae
cwtl
out
aad
push
pop
fcmovne
pop
xchg
sub
bound
add
mov
in
mov
movsl
test
dec
repz
gs
imul
mov
pushf
pop
repz
scas
adc
shlb
inc
mov
pop
imul
sahf
add
jno
mov
jge
add
ss
clc
lock
jne
dec
or
mov
jno
and
mov
mov
insb
shlb
mov
or
mov
inc
sub
lock
cli
mov
xchg
mov
test
rorb
sbb
mov
bound
sbb
mov
push
xor
sub
mov
in
popa
out
leave
jge
int
adc
push
push
outsl
lods
xchg
add
push
mov
inc
mov
inc
in
js
xchg
cltd
pop
jne
pop
or
repz
ss
fs
or
orb
stc
cs
and
mov
testb
cld
repz
xchg
test
lret
pop
mov
fs
push
test
std
shl
movsb
dec
js
pop
and
outsb
mov
ss
fdivl
int
fmuls
aaa
pop
aaa
mov
lcall
jnp
sbbb
js
adc
popa
enter
xchg
xor
int
fcom
jge
xchg
adc
or
add
sbb
aas
inc
imul
fisttpl
lahf
popa
push
cmp
loopne,pn
dec
popl
jge
mov
shrb
pop
cmp
push
pop
push
test
sbb
loope
xchg
lcall
mov
or
pop
fadd
xor
les
xchg
inc
loop
pop
das
out
addr16
imul
or
inc
mov
es
dec
int
mov
arpl
mov
xlat
jbe
pop
inc
movsb
pop
pop
pop
mov
icebp
jno
sar
jno
sahf
or
shll
adc
mov
or
imul
jo
cltd
mov
mov
ja
inc
out
shl
mov
add
or
sbb
int
leave
fdivrl
popa
ss
in
sarb
cwtl
stc
mov
or
js
xor
or
ret
push
xor
push
aaa
ja
movsl
push
sar
rol
es
jmp
mov
xor
rol
cli
ss
loope
mov
push
cmc
loope
adc
aad
push
or
stos
sbb
jp
sub
int3
sub
and
scas
push
nop
gs
xor
test
mov
shl
repnz
or
cmpb
pop
push
inc
rorl
push
js
mov
xor
ja
mov
scas
loope
inc
inc
outsb
rcrl
cmp
and
mov
repz
fcomip
jbe
shrl
jle
stc
out
outsb
xor
lcall
cmpsl
add
push
cmp
push
xchg
adc
cmp
orb
pop
or
xor
add
mov
xchg
rcrb
sbb
mov
inc
int3
repnz
mov
vcmpss
and
push
mov
mov
sub
push
out
xchg
pop
add
iret
in
mov
sbb
mov
xor
repnz
mov
and
out
and
negl
imul
rolb
mov
xchg
shr
test
push
cmp
push
mov
scas
fsubrp
int
inc
push
adc
test
lret
scas
inc
out
fldl
xor
sahf
mov
aas
cmp
mov
cmp
imul
out
mov
cld
lahf
dec
pop
push
pushf
pop
je
jne
dec
ret
or
sbbl
clc
ss
dec
ljmp
pop
or
jmp
add
gs
scas
movsl
je
jo
jmp
dec
mull
sti
sub
popf
xchg
mov
aad
or
cmp
xor
push
mov
ret
stos
or
push
mov
inc
fdivr
mov
jg
mov
fidivs
addr16
icebp
or
filds
cmp
add
mov
andb
inc
call
dec
inc
dec
push
cmp
leave
adc
movsl
ret
shlb
mov
sti
mov
jbe
sbb
mov
stos
aam
cmc
adc
or
mov
xchg
pop
push
cmpsl
aam
outsl
mov
inc
and
movsl
add
enter
inc
push
xchg
mov
call
xchg
jns
test
mov
dec
sti
iret
out
aaa
outsl
or
inc
pop
sub
cmp
mov
xor
mov
int3
jae
mov
aaa
mov
sub
loopnew
js
adc
bound
jl
ret
int
xor
in
adc
arpl
xchg
mov
loopne
lds
inc
sbb
out
or
movsl
inc
cmp
push
inc
rorl
lcall
ret
scas
jbe
xchg
int
dec
in
push
or
enter
push
cli
pop
mov
add
sbb
jle
addr16
int3
rcrb
cmp
ret
xchg
sbb
jp
push
inc
loop
adc
cmc
add
insb
or
mov
cwtl
push
adc
jl
in
mov
pop
in
div
xor
xor
imul
mov
movsl
push
mov
ret
inc
jmp
or
and
scas
mov
mov
sti
and
inc
cmp
add
jbe
jbe
aam
sbb
test
out
rolb
jnp
pop
sbb
test
outsl
fnstsw
or
add
dec
int3
push
cmpsb
inc
sbb
cmp
mov
xor
fisttps
or
fisttpl
idiv
arpl
pop
jb
loop
ret
fimull
push
gs
lahf
in
lods
and
fsubrl
xchg
imul
int3
mulb
push
out
push
xchg
jge
ftst
xor
in
or
aaa
rorb
or
sbb
fs
iret
fidivs
adc
outsb
rorl
sub
adcl
mov
pop
jle
push
arpl
jnp
push
xchg
adc
sbb
mov
adc
pop
iret
mov
xchg
cmp
pop
xor
xchg
out
stos
inc
sbb
ret
dec
inc
and
mov
inc
mov
push
xchg
shlb
repnz
cmp
inc
mov
mov
cmc
cmp
dec
sti
mov
sub
push
add
jae
inc
movb
xchg
push
push
test
cltd
inc
std
gs
sbb
or
std
mov
or
jp
cmp
repz
ror
inc
fsubs
daa
sub
cwtl
sbbl
mov
out
mov
cld
fists
push
ds
ss
imul
xchg
aad
push
xor
jns
cmc
jbe
push
pop
push
cli
mov
mov
sbb
movsl
ret
and
push
scas
into
cltd
jne
jmp
adc
mov
loope
and
cld
fnstenv
add
xchg
lock
jnp
inc
adc
pusha
inc
push
cmp
adc
mov
movsb
shrl
jno
fcomps
dec
unpcklps
cmpb
mov
outsl
lock
or
dec
clc
mov
shrb
out
out
mov
cvtpi2ps
rcll
sbb
pop
pop
in
adc
lcall
dec
fsts
cmp
dec
pusha
push
aam
mov
xchg
push
jle
xchg
dec
inc
inc
iret
mov
or
jl
in
lock
or
dec
and
pop
xchg
scas
rolb
dec
push
arpl
iret
push
mov
out
push
xor
int
daa
dec
xchg
jns
sbbl
bound
cmpsb
push
sub
pop
stos
pop
stc
mov
jmp
loop
add
jno
xorb
gs
jg
pop
dec
mov
mov
stc
popf
dec
adc
jno
lea
cmpb
outsl
add
mov
cmpb
mov
bound
insb
and
lods
rorb
cmpl
jnp
stos
cld
mov
xchg
adc
std
mov
test
lcall
adc
nop
ret
ret
gs
imul
int3
or
or
inc
mov
cmp
mov
add
lcall
sbb
push
fidivrs
ret
test
cwtl
sub
inc
lcall
int3
mov
adc
mov
adc
adc
outsl
adc
push
sbb
ret
jp
dec
daa
mov
cmp
sahf
add
cmp
mov
inc
iret
rcll
push
icebp
imul
fsubs
je
into
jae
loopne
hlt
cli
xchg
jmp
jmp
mov
inc
push
pop
mov
push
cmp
sub
in
popa
inc
xchg
aas
lods
push
mov
std
inc
xchg
xlat
jg
xchg
jb
repz
xlat
push
mov
cmp
les
loop
lret
xchg
xlat
out
dec
mov
repnz
cmp
lcall
xchg
idivl
sub
pushf
sub
mov
and
cld
xchg
sarl
xor
stos
xchg
dec
xchg
movsl
xor
dec
out
out
iret
fcompl
cmp
add
repnz
pop
popf
fwait
sbb
lock
dec
std
ficoms
mov
sarb
inc
mov
icebp
push
sub
js
popa
sti
cli
adc
or
cmp
test
stc
adc
mov
loop
cmc
loope
loopne
insb
push
stos
sbb
dec
push
in
jbe
lcall
mov
jmp
push
flds
jno
dec
enter
xor
andb
sbb
push
xorb
repz
or
and
sub
cmp
jo
loope
mov
aam
in
scas
pop
ret
adc
lods
mov
jp
or
cwtl
popa
adcb
into
mov
add
je
push
xor
imul
mov
dec
daa
cmpsb
pusha
jno
jle
sbb
inc
push
cmc
lcall
lods
mov
call
cli
sub
xchg
imul
and
popl
jg
mov
js
add
dec
jb
add
jnp
cwtl
ds
incl
jge
mov
push
mov
fnstenv
testl
mov
lods
mov
pop
dec
pop
movsb
add
or
sbb
mov
push
testl
dec
movaps
or
adc
jecxz
mov
nop
inc
test
stos
pop
test
push
lods
dec
sub
jmp
stc
jp
inc
mov
fisttpll
lret
jecxz
iret
and
and
divl
ds
or
xor
mov
pop
push
xchg
leave
add
dec
mov
pop
pop
es
movsb
shlb
xchg
sbb
push
cmc
jp
cwtl
imul
sbb
clc
lahf
inc
pop
add
das
movsl
sbb
cmp
push
popf
jecxz
and
cmc
add
mov
cs
push
daa
fxch
inc
outsb
rcrl
imull
mov
mov
js
and
or
dec
in
dec
mov
shlb
sti
xchg
inc
mov
xchg
lret
out
ret
cmp
mov
punpcklwd
dec
cmp
add
in
xlat
push
pusha
inc
clc
pusha
loope
test
pop
adc
pop
mov
and
jno
movsb
xchg
push
cmp
lds
lea
rcll
aaa
scas
mov
lahf
inc
cltd
out
aaa
pop
pop
jns
je
or
popf
mov
jp
inc
imul
mov
add
cmpl
mov
stos
cmp
ficompl
or
xor
into
jns
push
adc
inc
subb
out
dec
jne,pt
mov
cmpsb
lret
ret
in
pop
sub
ss
divl
test
jmp
jnp
cld
ds
pop
fistps
mov
orl
or
inc
iret
xchg
fst
sub
orb
push
imul
inc
cwtl
jne
push
adc
xor
sbb
call
xor
in
dec
adc
sbb
addl
add
xchg
insl
repz
ljmp
lods
push
pop
push
xchg
lcall
ss
sbb
aam
idivl
into
iret
and
mov
mov
stos
icebp
mov
sbb
les
sub
xchg
js
push
shl
shll
jp
push
shlb
cmp
inc
dec
out
and
fcmovnbe
or
data16
das
mov
mov
int
mov
mov
lea
mov
or
lods
mov
cs
inc
into
jp
mov
je
shlb
xor
push
inc
xor
es
jl
lret
add
jle
cmp
pusha
hlt
and
cmp
push
mov
rcll
cli
mulb
enter
pop
das
ljmp
or
add
lret
out
pop
inc
sbb
fsubr
movsb
popf
inc
mov
inc
push
jbe
out
xor
jle
mov
fcoml
shl
mov
ret
fwait
and
out
and
and
pop
loop
mov
inc
ja
or
scas
dec
fsub
sub
mov
fwait
adc
push
in
cltd
cmp
adc
shll
and
lds
or
jne
sar
push
cs
and
jo
insb
stc
jecxz
movsb
xor
rol
and
lods
sub
sbb
fwait
sbb
jae
aam
sti
and
jae
out
push
leave
push
mov
adcb
xchg
add
je
jbe
xor
sbb
out
ficompl
mov
xchg
cmpsl
jnp
fistps
push
pop
mov
lds
inc
and
mov
sti
icebp
fs
imul
cmp
xchg
fs
dec
leave
fs
mov
les
fisubs
ret
mov
imul
stos
sbb
jo
loop
mov
ljmp
cli
negl
cmp
dec
aas
push
call
sti
add
es
jg
pop
xor
movhps
or
pop
pop
mov
adc
scas
stos
inc
dec
inc
push
mov
xlat
mov
or
inc
jbe
jp
mov
or
mov
scas
xor
and
jmp
pop
aas
inc
sub
push
imul
lret
push
bound
dec
push
testb
lahf
add
mov
cmp
inc
dec
testb
mov
and
and
add
pop
test
sub
stc
mov
sbb
sub
push
test
sbb
push
pusha
scas
out
pop
and
cmpl
arpl
or
lcall
mov
dec
dec
out
lods
cmp
cwtl
in
or
outsb
test
repz
scas
imul
cmpsl
int3
and
xor
test
js
out
add
je
cmp
lahf
cmp
enter
jno
loop
pop
stc
daa
pop
xchg
fcmovu
lea
hlt
test
cmp
sub
xchg
adc
inc
mov
rcrb
fildll
mov
pop
arpl
dec
imul
mov
cltd
mov
jno
shrb
aaa
daa
shlb
mov
mov
cmp
in
inc
ljmp
mov
fmuls
sarl
mov
mov
test
popa
lea
sti
adc
jl
jecxz
aas
sbb
cltd
push
push
mov
imul
punpckldq
lret
pop
loope
and
jl
nop
jnp
aad
cld
test
or
and
adc
hlt
inc
cmp
mov
push
sub
imul
gs
aas
sahf
incb
arpl
jnp
push
out
fsubrp
adc
daa
test
testb
jnp
xchg
pop
aaa
xchg
xchg
insb
jae
sub
lahf
pop
xor
push
scas
dec
jae
icebp
adc
andb
scas
pmullw
sbb
rorl
cmp
cmp
clc
imul
sub
jns
ljmp
enter
sub
test
loop
fsubrl
adc
hlt
insb
hlt
mov
ficoms
adc
in
and
pop
sbb
push
out
sub
jb
in
push
mov
ja
pushf
sarb
inc
cli
test
shrb
jnp
fdecstp
outsl
adc
pop
ja
lods
pop
out
push
xchg
sub
ret
dec
cltd
dec
inc
pop
rolb
movsb
and
dec
and
hlt
add
mov
sbb
mov
leave
push
scas
into
sahf
xchg
adc
scas
sarl
movsb
pusha
in
push
and
sbb
sbb
lret
sub
xchg
add
incb
in
dec
xchg
and
jbe
pop
and
imul
or
repnz
inc
shll
cmc
jge
or
aas
push
jle
pop
cwtl
fsubrl
fcomps
addr16
aas
dec
ret
outsb
movsl
sbb
pop
mov
mov
xorb
unpcklps
mov
mov
mov
pop
or
mov
insl
add
jbe
jmp
dec
xchg
cmpl
pop
out
sbbl
xor
js
insl
rolb
gs
enter
popa
xchg
aam
xor
xor
pop
loopne
cmp
mov
out
fdivl
jbe
or
add
xor
inc
or
mov
fsubl
jecxz
xchg
ret
mov
je
ja
dec
sub
xor
testb
jg
pop
mov
aas
mov
flds
push
xor
pop
popa
scas
sub
xor
add
faddl
inc
mov
mov
lahf
rep
repnz
stos
testb
fs
jge
aaa
fiadds
aam
rcrb
enter
pop
jmp
xchg
icebp
clc
scas
jmp
mov
mov
push
cmpsl
jb
and
iret
xlat
jl
push
mov
lret
inc
popf
imul
in
mov
outsb
cli
push
movsb
cmpsb
xchg
fmull
ud0
xchg
insl
cli
cmp
in
fmuls
ror
fdivs
mov
push
js
loop
adc
xchg
mov
mov
mov
imul
xchg
test
aaa
mov
push
je
cmp
lock
lea
shrd
cmp
jbe
push
repnz
pop
out
lods
and
sbb
je
lds
out
add
mov
sub
lahf
mov
insl
int3
mov
xchg
inc
add
daa
test
pop
pop
cmp
push
clc
mov
xchg
aaa
in
fwait
arpl
rolb
repnz
mov
fwait
and
rcl
xchg
cmp
jg
xor
dec
mov
mov
add
inc
test
daa
call
loopne
pop
sbb
mov
sbb
xchg
test
inc
sub
aam
stc
sbb
mov
jae
xchg
mov
das
imul
insb
sbb
jns
xchg
add
xlat
nop
fwait
sbb
or
in
ss
pop
pop
xchg
inc
cwtl
cmpsl
jp
sub
cmpsb
sbb
in
pop
out
add
arpl
cmpsl
mov
scas
in
clc
cmp
cmpsl
dec
out
mov
fwait
push
mov
mov
sub
movsl
xchg
mov
and
data16
shl
sar
cmp
mov
dec
mov
xchg
ds
or
and
mov
add
mov
stc
das
inc
cmp
shrb
pop
mov
pushf
aam
sbb
or
pusha
je
aaa
enter
add
sahf
and
cltd
xchg
xor
inc
addr16
nop
jle
data16
rorl
add
rcll
inc
push
xchg
jnp
popf
mov
sub
push
stos
xchg
sbb
ljmp
jecxz
dec
cmpsl
outsl
jne
mov
pop
add
movsl
add
add
aaa
test
imul
daa
jecxz
pusha
inc
or
rcrb
shlb
and
xchg
xchg
ja
inc
mov
cltd
jno
jmp
inc
flds
out
outsb
sbb
aad
jb
mov
xchg
cli
jo
dec
inc
movsb
je
dec
push
pop
or
xor
jno
icebp
dec
add
push
push
and
cltd
pushf
lods
outsl
push
fistl
push
pop
fwait
dec
aad
out
call
push
lds
or
mov
dec
aam
pusha
cld
lock
dec
cmpsl
push
adc
xchg
sbb
mov
inc
std
xchg
fwait
or
vmovlps
addr16
imul
into
dec
pushf
sbb
jae
jnp
or
pushf
xchg
xlat
stos
jbe
lds
fldt
in
sub
or
mov
pop
fmull
movsb
sub
out
leave
pusha
add
repnz
push
insb
jp
insl
mov
xchg
cld
sahf
fs
pop
mov
out
fsubl
imul
cli
mov
cwtl
pusha
inc
xchg
jae
mov
mov
mov
lock
mov
aas
sbb
mov
movsb
and
jno
mov
xchg
lods
loope
gs
dec
inc
xchg
repz
cmp
dec
lret
xchg
inc
jns
lds
clc
pop
dec
sub
push
out
jns
ss
ljmp
push
addr16
lods
aaa
into
adc
dec
dec
fcompl
add
sbb
pop
pop
jge
lea
aas
adc
cli
rcrb
mov
xor
aas
jb
mov
adc
pop
pop
mov
int
xlat
adc
out
cmpsb
pop
inc
add
sbb
popf
sbb
add
das
out
jge
jnp
pop
outsb
movsb
xchg
fs
add
sub
in
jbe
cld
mov
add
stos
mov
aam
ret
cmpsb
or
pushf
lret
sbb
xchg
mov
pop
push
inc
sub
jne
add
mov
xchg
adc
call
dec
jmp
xchg
test
adc
lcall
stos
loope
mov
aaa
cmp
aas
sub
pop
or
insl
cld
mov
mov
insb
cli
mov
dec
gs
push
lods
sub
mov
ret
popa
xor
js
add
adcb
jnp
scas
mov
lret
out
popa
adc
jecxz
push
pusha
mov
fwait
pop
test
cwtl
add
xchg
add
or
fdivrl
or
push
dec
jne
push
xlat
sub
loopne
dec
lahf
sbb
lds
push
inc
xor
push
xor
push
mov
xor
mov
lret
sbb
mov
dec
or
test
aas
aas
or
sbb
sub
je
out
push
jns
fidivl
dec
sub
inc
in
add
cmp
inc
jmp
push
cli
mov
and
in
pushf
inc
cmp
pushf
cmc
int3
jl
inc
mov
xor
jnp
push
pop
jae
mov
inc
sbbl
repz
push
repz
push
icebp
lock
xor
js
or
aad
dec
inc
cmp
inc
cmp
inc
jne
push
xchg
inc
icebp
ffreep
pop
repz
aad
add
jno
mov
adc
popf
shlb
mov
outsl
repz
xor
xor
add
shll
incl
sbb
and
dec
iret
mov
test
lret
je
or
inc
adc
jp
xor
addb
jo
xchg
std
scas
test
pop
cmp
and
stos
add
cmp
mov
test
jb
push
pop
dec
popf
pop
inc
xchg
jmp
pushf
sbb
pop
add
lahf
popf
xchg
cs
and
pop
mov
sub
outsb
dec
test
arpl
sub
push
add
mov
mov
mov
les
adc
subl
sbb
fst
pop
sbb
cmp
pop
xor
cmp
lcall
enter
movsl
mov
test
adcb
inc
mov
rcl
or
dec
js
inc
adc
xlat
pop
or
pop
inc
out
push
in
pushf
sbbl
dec
or
xchg
jnp
stos
dec
pop
addr16
xchg
frndint
mov
pop
movsb
push
scas
xor
and
fnsave
mov
adc
mov
imull
cli
sbb
movsl
sahf
push
gs
pop
adc
aaa
hlt
add
lahf
add
push
outsb
cwtl
inc
adc
cltd
pop
cmp
xor
stos
nop
inc
push
mov
loopne
cmp
cli
mov
fmull
cmp
mov
scas
push
push
sub
pop
sti
cmc
inc
dec
add
outsb
aad
add
push
popa
jp
insb
mov
out
outsb
frstor
inc
fwait
lea
out
lcall
inc
test
pop
cmp
lret
fidivl
and
test
sub
mov
imul
cmp
sub
or
adc
fidivrl
adcl
inc
pop
pop
stos
ljmp
xchg
and
out
xchg
fwait
add
pop
stos
clc
add
inc
xor
mov
leave
pop
pop
mov
mov
xor
loope
imul
fs
jo
popa
pop
sbb
adc
xchg
add
stc
inc
mov
test
ficomps
or
pusha
jl
lods
fmuls
push
pop
pop
sahf
or
xchg
sub
in
sub
and
dec
adc
sahf
inc
addr16
jo,pn
and
cmp
add
dec
cmpb
inc
push
andl
shll
xor
gs
inc
ss
sbb
ror
jmp
mov
icebp
adc
cmpsl
inc
cmp
rcrl
push
lahf
push
dec
fists
jo
insb
test
mov
xchg
imul
call
daa
orb
fisttps
cltd
push
mov
cmpsl
inc
sub
inc
sbb
aad
pop
xor
dec
je
in
mov
pop
insl
mov
cmpsb
cmp
inc
loopne
dec
xchg
clc
mov
xor
push
push
mov
xor
pop
dec
scas
test
mov
dec
pop
pusha
out
xor
xchg
mul
mov
enter
xor
push
in
icebp
lods
addr16
lods
or
cld
jg
sub
cltd
loope
mov
in
pusha
test
adc
js
std
aaa
and
mov
insl
xor
cmp
out
adc
xor
cmc
pop
cmc
lcall
fs
xor
outsl
ret
repz
jge
sub
sbb
push
or
jbe
fwait
jo
or
ror
sbb
sbb
fs
mov
push
sahf
or
xchg
mov
std
inc
jp
push
fcmove
pop
sub
adc
add
test
lea
in
jb
mov
sbb
mov
popf
les
add
jne
ss
jns
clc
adc
sarl
ljmp
mov
dec
imulb
push
test
das
and
adc
and
stc
dec
pop
shrl
add
fisubs
ficoml
cmp
lret
cmc
mov
dec
iret
jp
jl
call
jo
cli
adc
test
in
or
std
clc
cli
mov
inc
test
mov
pop
insl
insl
test
insb
add
lahf
rorb
and
sbb
lock
outsb
cmpsb
das
push
lods
mov
scas
jb
push
xor
rol
gs
daa
fs
add
stc
cltd
outsl
movsb
mov
dec
cli
jne
out
and
mov
or
ss
sbb
movd
test
cli
pop
mov
repnz
cmp
cmc
xor
push
pop
inc
outsl
cli
xor
inc
lods
fwait
lock
test
lock
mov
ss
fistps
xchg
xor
stos
dec
cmpsb
cmpsl
sarl
aam
xlat
jae
pop
or
clc
add
jbe
pop
add
mov
add
aas
sub
ret
cmc
dec
adc
fs
and
inc
sbb
mov
xorb
pop
mov
cmp
ficoms
scas
ja
push
dec
cs
aam
pop
roll
adc
mov
out
mov
pushf
icebp
cmp
test
jecxz
mov
fmulp
fidivrs
add
xchg
mov
jmp
loopne
addb
es
jnp
and
mov
data16
sbb
stc
aam
movsb
cmp
push
push
aaa
push
sub
xor
jl
or
jb
xor
shl
jge
mov
push
fwait
cmp
daa
loope
movsb
or
pop
add
cld
or
testb
lahf
movsb
cwtl
lock
cmp
mov
or
mov
xchg
adc
jecxz
adc
mov
test
lea
aaa
imul
jge
sysenter
lock
add
aad
jp
je
mov
sbb
and
mov
jg
jbe
mov
push
or
sub
jo
mov
cli
sub
fildl
jg
lahf
adc
dec
push
xor
lcall
js
addr16
lcall
xchg
or
lds
sarl
pop
cmp
push
inc
cld
push
in
sub
popa
stc
fwait
dec
das
orb
fidivl
movsl
pop
dec
mov
mov
dec
cmpsb
es
mov
jg
sbb
mov
push
into
jne
outsb
outsl
add
testb
cli
mov
es
xor
push
jno
add
fcompp
dec
adc
push
clc
sbb
pop
mov
jmp
or
push
and
jge
sub
dec
in
lret
add
popf
mov
clc
das
lret
testb
xlat
not
inc
pop
enter
dec
aam
out
rcl
shr
jbe
cmp
cmpsl
inc
dec
mov
push
mov
inc
pop
or
enter
repnz
mov
push
xor
and
jbe
cs
and
lods
addr16
adc
xchg
repnz
ja
mov
dec
aam
jl
aaa
movsb
shr
cmc
dec
mov
sti
into
sub
pop
push
iret
out
es
or
mov
outsl
in
fisttpl
sub
dec
and
sarb
pop
stos
cmp
xchg
lret
cmc
adc
inc
jp
xchg
ljmp
popf
mov
movsb
cld
call
and
pop
or
dec
ja,pt
push
jbe
test
sbb
inc
les
jp
mov
cmp
push
cli
rcll
jp
test
bound
and
int3
mov
shl
iret
call
mov
pop
in
xor
cltd
pop
shl
pop
out
inc
inc
mov
andl
xchg
movsb
sub
xlat
adc
cmp
mov
ja
sub
cltd
mov
mov
inc
imull
imul
cli
xchg
jl
sub
ror
scas
mov
push
xchg
xchg
xchg
xor
scas
popf
mov
xchg
add
mov
aaa
lods
outsl
mov
stos
pop
fwait
xorl
loopne
pop
xor
xorl
pop
sbb
dec
mov
cmp
mov
enter
and
jbe
inc
enter
xor
mov
aas
fwait
sbb
shll
or
mov
in
sbb
nop
xor
rorb
adc
sbb
iret
mov
jge
mov
cmp
push
xchg
push
and
imulb
or
std
mov
test
pop
iret
xchg
xchg
adc
aas
out
ja
imul
mov
mov
push
xor
mov
adc
jo
mov
xor
push
lret
mov
test
fsubrs
add
outsb
es
test
cmp
popa
insl
sub
inc
pop
dec
mov
rclb
mov
rolb
adc
je
aad
insb
jbe
add
xor
cvtpi2ps
jmp
stos
inc
popf
lea
daa
fcom
int
das
cmc
push
inc
shrl
imul
sub
in
sub
scas
pop
mov
lods
das
xchg
mov
inc
xlat
iret
lods
std
fwait
and
and
jmp
sub
sub
mov
xor
fs
mov
add
mov
fisttps
lret
rorb
jl
xchg
sub
jb
and
adc
push
and
aaa
push
fs
jmp
pop
pushf
iret
add
scas
data16
out
in
cmp
inc
pop
fcmovbe
dec
push
insb
add
in
std
nop
out
adc
adc
xor
xor
int
scas
hlt
jnp
inc
pushf
popf
fwait
out
sub
aad
lret
sbb
dec
jp
push
lahf
push
int
jmp
add
sbb
push
test
in
pushf
ret
lahf
shlb
and
std
sub
jl
filds
popa
lret
and
dec
call
inc
add
pop
xor
test
pop
in
lods
xor
jmp
push
movb
mov
leave
xchg
jb
or
loope
mov
in
popf
mov
fists
sbb
js
fisttpl
fists
pop
addb
dec
stos
jae
ret
mov
cmpb
adc
push
dec
cwtl
mov
mov
mov
bound
dec
inc
pusha
mov
xlat
in
adc
jmp
sub
mov
pop
int3
pop
lock
sbbb
cmova
fnstenv
dec
push
mov
inc
arpl
cmp
popf
jo
cmpsb
mov
mov
push
adc
leave
mov
ret
add
mov
cmc
popf
inc
ja
sbb
jg
and
sbb
ret
flds
addr16
mov
in
sbb
js
addr16
int
leave
scas
in
jo
xor
push
lods
sbb
aad
imul
popa
call
inc
scas
mov
push
sbb
inc
pop
mov
mov
addr16
jl
mov
pop
daa
frstor
sub
push
mov
fadds
add
nop
push
jl
xlat
imul
bound
stos
inc
pusha
lcall
xchg
enter
pushf
pop
dec
std
movsb
aam
dec
add
fstps
daa
xchg
test
pop
and
cmpsb
jl
cwtl
adc
popf
aam
jbe
sub
lods
insl
mov
aas
cmp
pop
dec
pop
adc
xchg
sbb
mov
adc
cmc
inc
scas
and
cli
aaa
pushf
push
arpl
fs
mov
cmp
popf
imul
jg
movsl
sahf
xor
dec
or
mov
test
push
jp
addl
nop
pop
out
cmp
jle
out
testl
loopne
fnstsw
es
sub
and
pop
dec
lret
cmp
repz
daa
mov
xchg
mov
andl
into
adc
mov
dec
sbb
jge
in
or
xor
or
pop
sub
enter
es
sub
stos
adc
adc
sarl
sub
pop
imul
cmp
jo
mov
cmpsl
and
aaa
loop
add
mov
mov
fwait
lea
push
sbb
xor
imul
shrl
outsl
mov
dec
push
sbb
in
or
and
enter
cwtl
jp
mov
enter
iret
mov
xchg
jmp
pop
test
jl
cmpsb
les
stos
lods
push
inc
pop
mov
in
mov
stos
fsubrs
mov
mov
scas
mov
or
or
lds
and
xchg
stos
dec
shlb
lock
xchg
xchg
bound
rorb
scas
dec
in
fmuls
push
into
jle
out
or
loopne
pop
push
jp
test
push
ret
scas
call
pushf
iret
adc
sbb
mov
xchg
xor
dec
cmp
out
jecxz
sub
rcrl
xchg
cmp
dec
mov
add
mov
lahf
test
shll
adc
fiaddl
xchg
xchg
push
cmp
jmp
out
cld
aam
xor
dec
loope
mov
add
out
pop
popf
pop
mov
jp
adc
cwtl
mov
data16
jecxz
xchg
xchg
leave
push
jle
mov
mov
stos
cmp
cli
push
sbb
mov
dec
dec
inc
movsb
icebp
sub
stos
cmp
sbb
dec
inc
cmp
aad
jo
stc
mov
xor
jo
mov
es
popf
imull
pop
mov
xchg
jecxz
xchg
rcrb
sub
mov
mov
push
outsb
pop
mov
addr16
sar
mov
ror
xchg
sbb
mov
push
mov
jl
mov
bnd
mov
or
lods
mov
xchg
clc
scas
mov
or
aaa
or
lcall
int3
sub
insb
xorb
loop
adc
mov
mov
xchg
push
push
shlb
dec
push
fildl
mov
lock
cmp
adc
xchg
pop
jmp
enter
and
and
rolb
cmp
gs
dec
add
jno
les
sbb
xor
jae
cmp
mov
cs
and
sar
cmpl
into
ljmp
xor
aam
loope
scas
stos
add
and
add
mov
mov
push
ja
lds
mov
jge
pushf
cmovg
adc
and
fcomps
sbb
rcl
outsb
or
ja
test
fcomi
or
adc
rclb
cmp
cltd
stos
xor
sahf
push
mov
mov
ja
push
call
dec
outsb
pop
inc
daa
ficompl
leave
xor
adc
add
inc
xor
xor
pop
cmp
adc
gs
cmp
cmc
lret
inc
movsb
cmpsb
jno
xchg
dec
dec
mov
jae
lret
push
leave
scas
cmp
mov
rol
jne
inc
mov
rorl
lea
xchg
hlt
and
pop
fisttpll
ds
push
adc
cmp
xlat
xchg
mov
jne
sub
shr
sub
mov
fcmovb
xchg
inc
jle
xor
inc
das
add
das
xchg
pop
les
nop
inc
fildl
xor
js
mov
xor
mov
dec
mov
xchg
xchg
sbb
fwait
scas
mov
push
jno
cmpsb
pop
shlb
add
sbb
int
adc
mov
or
repz
je
cli
mov
mov
test
das
jo
fcoml
or
gs
dec
incl
in
adc
lret
push
xor
mov
js
test
mov
enter
mov
jns
pop
pop
call
mov
xor
das
and
addr16
movsb
gs
pop
mov
mov
mov
insl
cmc
sub
and
ja
out
enter
ja
fidivrl
xlat
inc
inc
cmp
int
loope
lcall
je
push
jb
cmp
mov
fwait
incb
sti
fistl
cltd
mov
or
movsb
mov
lods
scas
ror
fistl
mov
sub
sbb
and
dec
pop
lahf
es
cmc
jmp
jbe
or
popa
mov
cs
lret
adc
in
inc
movsl
ret
xlat
jnp
or
pop
into
xor
movsl
xchg
cld
push
jp
pmuludq
fidivrs
sarl
or
xor
sub
sahf
xor
ret
jns
lret
into
cwtl
mov
in
sub
and
lret
shrb
mov
mov
mov
inc
xchg
outsl
sahf
aad
jns
idiv
lds
sub
dec
xor
pop
cwtl
pop
cmpsl
imul
adc
dec
gs
pop
stos
cmp
cmp
fwait
xchg
fildl
mov
aad
pop
cmc
jne
mov
mov
add
xchg
xorl
inc
int
loope
mov
loope
mov
roll
fcompl
sti
fistl
mov
or
fildl
mov
stos
inc
in
in
add
jmp
adc
inc
loopne
mov
mov
aad
jbe
negl
int3
inc
cmc
and
xchg
sbb
imul
sub
sub
cmp
in
shlb
mov
dec
adc
push
movsl
xlat
sbb
and
and
xor
pop
shrb
mov
aad
mov
adc
out
nop
or
hlt
aaa
xchg
stos
insb
pushf
pop
pop
or
subl
push
mov
es
sub
ja
cmp
inc
pop
out
subb
dec
daa
sbb
pushf
sub
or
mov
xchg
ret
clc
sarb
or
in
mov
icebp
adc
jne
add
call
dec
loopne
in
out
mov
jne
popa
mov
sub
inc
nop
movsl
or
inc
xlat
jle
jns
mov
orb
or
jb
push
sbb
mov
or
push
clc
loop
mov
orl
xor
scas
gs
ror
push
pop
fwait
je
push
adc
js
mov
lret
push
xor
mull
or
cmp
dec
mov
aad
clc
dec
xchg
imul
mov
rorb
xchg
or
pop
inc
dec
out
fcomps
cli
xchg
mov
inc
dec
stos
aad
int
lret
inc
adc
and
aad
adc
jl
stc
jp
fldt
ret
cmc
and
mov
nop
ds
test
andl
jae
inc
popl
popf
lods
push
mov
add
mov
xchg
xchg
iret
xchg
jg
push
fisttpll
popl
out
push
xor
adc
xchg
ret
xor
mov
inc
jne
imul
in
shlb
and
mov
dec
out
dec
mov
in
push
notl
pop
icebp
xchg
mull
popf
push
mov
notl
sti
add
popa
aas
and
aam
xchg
pop
lods
inc
xchg
push
call
or
pop
adc
push
push
inc
cmpsl
cmp
and
mov
test
cltd
inc
xchg
or
xchg
shrb
into
cmpsb
daa
lcall
test
sbb
or
loop
cwtl
add
jp
dec
or
mov
shl
mov
ret
int
mov
push
mov
xchg
pop
adc
or
mov
mov
xor
mov
xor
adc
lahf
add
xchg
inc
leave
loope
push
imull
sahf
mov
daa
pop
mov
mov
dec
pusha
cmp
bnd
ja
add
or
and
jmp
out
sbb
mov
gs
daa
inc
and
out
int3
rol
lret
mov
jns
xchg
dec
or
push
cltd
lret
dec
mov
inc
shlb
adc
or
jbe
bound
fisubrl
decl
arpl
pop
and
mov
fwait
movl
add
xchg
adc
jae
push
jo
ds
push
xchg
push
pop
inc
test
jno
in
xor
or
cmp
es
jl
into
cmp
in
mov
xor
push
rcl
xor
dec
imul
loope
orb
les
add
xlat
push
and
mov
lcall
iret
pop
cmp
xor
jo
jge
leave
std
jle
aas
xor
add
add
pop
cli
sahf
dec
mov
mov
mov
jb
insl
push
or
bound
popf
stos
in
push
arpl
and
test
sbb
pop
mov
ret
hlt
pop
cmpsb
aaa
scas
and
sarb
pop
jnp
fst
and
inc
loop
scas
repz
pop
shlb
or
xchg
mov
shrl
data16
lret
jge
jo
add
ret
pop
enter
sbb
mov
pusha
adc
mov
dec
adc
adc
out
add
ftst
data16
or
testb
and
fisttpl
mov
enter
imul
xor
stos
xor
cmp
and
imul
push
mov
add
movsl
jb
fisubl
cli
es
add
mov
idivl
popa
cmpsl
mov
cmpsb
aaa
cwtl
xchg
xlat
push
lahf
out
inc
lea
cs
lock
and
rcl
adc
mov
jg
loope
in
test
sarl
fneni(8087
or
add
pop
jnp
lods
mov
add
test
dec
push
paddd
aas
mov
jno
andl
pop
fistl
shll
mov
dec
pop
add
jge
xlat
in
out
xchg
aaa
and
lahf
fiaddl
push
fnsave
imul
subl
mov
push
adc
mov
sub
fs
ret
sbb
push
jnp
push
cmp
enter
adc
loopne
add
mov
adc
dec
rorb
jge
scas
shrb
mov
and
repz
aas
outsl
sub
hlt
mov
sbb
xchg
xor
cmp
inc
inc
add
jmp
cs
daa
or
pop
ret
jle
mov
clc
aaa
mov
cli
mov
stos
dec
and
jne
sahf
cmpsl
jl
mov
out
shlb
lea
jno
sahf
insb
hlt
push
test
pusha
in
add
imul
dec
adc
sbb
dec
and
mov
pop
out
fidivrs
pop
push
mov
fdiv
xchg
jp
adc
xchg
subb
mov
stos
push
pop
icebp
clc
test
bound
xchg
xchg
mov
xchg
dec
xchg
sbb
xchg
adc
cmp
adc
out
sub
xor
mov
sub
je
jae
pop
rcrb
jne
stos
ljmp
jecxz
xchg
mov
or
shl
jno
cs
add
and
push
push
xor
cmp
push
fadds
dec
test
dec
shrb
outsb
loope
outsl
and
loope
jle
or
mov
mov
cli
idivl
jnp
xchg
and
lock
xlat
bound
or
jnp
pop
mov
cmp
repnz
in
dec
mov
repnz
mov
shrb
cmpsb
mov
int3
stos
mov
xchg
add
test
sti
mov
adc
test
pop
mov
push
ss
cmp
add
push
and
ret
lods
loop
dec
mov
enter
subb
dec
lea
cltd
movsb
scas
test
and
fwait
cmpsl
cmc
lret
call
mov
sahf
mov
cwtl
pop
divl
aam
xchg
mov
dec
iret
lret
mov
xor
repnz
adc
shll
add
fnstsw
xchg
jecxz
in
fildll
cmp
mov
mov
or
or
add
inc
test
ja
jp
sbb
or
jb
in
mov
dec
pop
sub
or
jo
fistl
out
es
ret
mov
mov
or
inc
dec
sub
mov
enter
push
sar
into
cli
icebp
sbb
ss
icebp
push
ss
mov
mov
xchg
test
ret
mov
outsl
or
inc
hlt
sub
pop
push
mov
loopne
ja
ss
pop
imul
mov
mov
mov
scas
sarl
js
adc
pop
mov
cld
je
cmp
sbb
inc
mov
mov
pop
test
test
mov
fs
dec
lock
sbb
in
mov
lock
mov
push
mov
das
aas
mov
aas
dec
je
jnp
lahf
mov
inc
rep
loopne
sub
push
outsl
inc
aaa
jb
shll
jmp
idivl
xchg
mov
xor
in
cli
test
mov
and
cmp
arpl
xchg
ljmp
test
lcall
test
and
test
out
loopne
jle
xor
mov
imul
lret
in
inc
call
or
iret
dec
rcr
jmp
cwtl
fidivrs
pushf
sub
cmp
xor
mov
xor
loopne
mov
mov
lret
rcrl
daa
cli
pusha
cmp
push
movsb
popf
loopne
loop
lahf
push
ja
es
adcl
aas
add
int
sub
lahf
mov
movsb
jb
and
or
xchg
ljmp
pop
inc
in
out
fisubrs
scas
inc
mov
in
xchg
cmpsl
mov
xlat
pop
dec
cmpsb
pinsrw
and
and
dec
or
and
add
mov
adc
popf
ja
xchg
stos
fsubl
sub
dec
out
dec
push
xchg
xchg
loope
test
inc
pop
aaa
scas
add
fwait
mov
scas
cmp
or
mov
int
jp
ret
or
pop
mov
jp
movsl
mov
lcall
iret
aad
push
movsl
leave
jl
sub
xor
fs
mov
pop
push
push
pop
xor
cmpsl
xchg
pop
addb
repnz
sbb
std
sbb
nop
inc
jb
out
arpl
mov
lds
mov
fisttpll
jl
sub
cli
mov
lahf
rclb
sbb
add
xchg
adc
jl
mov
xlat
jbe
xor
imul
xchg
out
xor
inc
stos
ljmp
mov
and
adc
xchg
ja
cmc
mov
mov
mov
test
sub
aaa
popf
ds
lea
add
mov
shlb
inc
or
mov
movsb
fldl
cmp
pop
inc
sub
loopne
push
in
adc
imul
xor
popf
mov
push
roll
lock
pop
loopne
in
les
scas
adc
add
fimuls
pop
jns
pop
stos
lahf
jae
mov
mov
scas
aas
push
outsl
sub
sbb
in
outsb
mov
mov
clc
or
daa
ret
mov
das
xchg
add
xchg
lds
jecxz
mov
aad
arpl
xchg
inc
aad
imul
xchg
and
popa
nop
xchg
call
adc
insb
iret
cmp
xor
sub
mov
and
scas
mov
adc
sbb
dec
std
push
pop
arpl
addb
jp
push
cmpsl
enter
sbb
aas
mov
push
ja
sub
mov
int3
sbb
js
into
or
xorl
xor
inc
loopne
push
js
add
sub
mov
pop
cmc
jbe
scas
cmpsl
sub
push
fldenv
jns
gs
push
pop
jno
dec
cmpsb
pop
popa
pop
mov
cmp
xor
push
cmp
leave
sbb
jno
sbb
and
jle
jb
out
daa
dec
in
rcrl
ret
sti
sarb
mov
out
jo
in
sbb
jg
ljmp
pop
int
dec
mov
push
sarb
divb
and
jbe
xchg
and
movb
mov
rorl
xor
fimull
mov
movsb
inc
xchg
loope
cmp
push
and
or
dec
fisubs
js
inc
cmp
testl
xorl
pop
das
push
or
fadds
icebp
lds
lret
xchg
xor
add
loope
push
sub
testb
das
sub
popf
sbb
xchg
jne
out
or
rolb
loope
jb
out
ja
adc
mov
lock
ja
leave
out
jg
lahf
test
jns
fisubs
in
test
jl
scas
loope
mov
ss
push
xchg
es
repnz
push
push
or
mov
and
shr
sub
add
out
mov
filds
push
mov
scas
pop
xchg
lock
add
std
xchg
mov
ja
int3
cmp
sub
into
out
cmp
xor
lock
fstpt
mov
es
jmp
insl
lods
fdivrs
jmp
movsb
js
in
cmp
retw
jp
mov
roll
jns
ljmp
outsb
in
jb
push
adc
xor
std
sub
movsl
insb
cmp
out
cmpb
out
sbb
mov
mov
lahf
sub
cmp
dec
jg
pop
cmc
cwtl
xchg
jbe
mov
lock
notl
lret
fwait
add
scas
lret
addr16
scas
insb
adc
xor
int3
jne
cwtl
push
test
mov
lret
ds
mov
subb
cmpsl
ror
pusha
icebp
insl
icebp
pop
das
es
sbb
sub
fistl
lods
lea
into
frstor
int
popa
mov
cltd
mov
je
nop
xchg
icebp
test
rcll
test
fiadds
cmp
div
pop
xlat
jb
lods
hlt
stos
loopne
push
jbe
ficoms
mov
add
repnz
lock
jnp
sub
mov
fdivl
or
add
clc
out
add
out
and
mov
js
addl
adc
fcompp
aad
fldcw
fnstsw
loop
xchg
push
sub
sub
sahf
cmp
lahf
mov
cmp
in
out
lret
aas
cmp
push
pushf
add
jg
icebp
sub
jge
hlt
xchg
sbb
mov
add
sub
flds
adc
and
inc
inc
out
cmc
mov
fwait
mov
arpl
push
insb
push
push
xchg
mov
pop
notl
xor
cmp
outsl
sbb
push
xor
push
xlat
jns
fcompl
jb
loop
rorb
fildll
pop
icebp
test
sbb
frstor
arpl
outsb
mov
xor
roll
xchg
aad
repz
