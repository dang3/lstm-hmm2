sbb
add
mov
sbb
lock
adc
or
pop
jge
cld
aas
xor
in
dec
push
or
in
in
or
push
push
scas
xor
push
push
push
mov
mov
add
xor
push
mov
sarb
out
cmpsl
mov
test
test
push
lods
jl
leave
bswap
or
cmpsb
xchg
rol
mov
jae
jne
push
movsb
add
mov
inc
dec
jo
jle
or
outsl
cmp
pop
push
push
push
shll
mov
imul
sbb
cmp
loop
sub
enter
into
xor
dec
icebp
push
push
cmpsl
fisubrl
shl
ret
arpl
push
cmp
push
jge
sbb
mov
sub
pop
test
ljmp
outsl
or
or
add
and
xor
sbb
jge
jns
and
mov
inc
hlt
or
in
push
sbb
js
test
jne
or
cwtl
and
xchg
dec
add
or
hlt
jmp
add
jno
gs
popf
push
in
jmp
cmpsb
pop
mov
or
mov
mov
cmpl
xchg
outsb
adc
ret
and
enter
shll
sahf
jnp
sbb
ljmp
pop
cltd
xchg
add
test
adc
add
inc
jmp
sbbl
xor
fwait
jae
imul
les
ljmp
je
add
add
cmp
cmp
xchg
or
xchg
dec
mov
sbb
push
test
mov
jne
dec
or
adc
dec
shlb
test
mov
or
sub
add
add
dec
cmpb
cltd
loop
push
cmp
adc
cvttps2pi
cmpsl
inc
inc
sub
imul
rorl
ret
push
mov
xchg
imul
push
sub
fucomip
and
jns
xchg
xchg
jo
sbbb
xor
es
popf
mov
lea
clc
shrl
fistpll
xor
adcb
icebp
clc
mov
or
inc
fucomp
xor
pop
mov
sarl
mov
cmpsl
mov
stos
call
int
jnp
rcrl
xor
pushf
xlat
fiadds
adc
or
ss
xor
push
rclb
add
mov
inc
loope
in
sbb
stos
sahf
dec
lds
xorl
mov
mov
add
out
jo
add
adc
loope
mov
das
inc
adc
js
mov
push
adc
pop
loop
add
je,pt
aad
andb
mov
inc
xchg
push
xchg
mov
adc
dec
das
mov
ret
pop
jmp
shrl
mov
or
out
sub
fcomps
jbe
push
test
and
push
scas
lret
or
cmp
ret
mov
jae
sbb
outsl
in
int
lds
ds
and
push
bound
rcll
mov
pop
pop
mov
dec
test
or
cmp
lods
rol
addl
jae
insb
or
jle
scas
cmc
andl
inc
pop
or
push
jge
rol
sbb
test
mov
lea
sbb
popl
xor
mov
or
scas
cmp
insb
cmc
inc
sub
imul
outsb
hlt
sbb
adc
or
fadds
cs
cmp
loop
sub
ss
lahf
lods
mov
popa
inc
lahf
in
push
jne
rcrb
push
adc
jb
cmp
dec
mov
jl
movsl
mov
clc
loopne
pop
inc
xor
or
sub
jg
pushf
inc
mov
jge
adc
mov
cmp
jg
sub
mov
stos
leave
add
push
mov
or
out
repz
aam
fnstsw
cmp
jg
das
insl
pop
mov
push
ret
push
loopne
sti
jnp
cli
cmpsb
out
jo
addl
imul
cwtl
pop
in
stc
push
je
mov
and
std
xchg
rorl
pop
mov
jge
sbb
lret
xor
mov
movsl
test
ja
sbb
mov
lcall
jo
mov
push
pop
mov
gs
and
jnp
cmp
or
push
jmp
sbb
push
pop
in
jnp
cmp
dec
jbe
sti
aam
int3
mov
push
and
jae
jg
enter
adc
and
sbb
mov
cmpsl
adc
outsb
xchg
mov
inc
scas
cmp
mov
jno
ficoml
test
es
arpl
mov
out
xchg
cs
mov
pop
inc
push
and
popf
jp
in
jnp
subb
insb
and
mov
test
push
or
fisttpll
icebp
cmp
hlt
add
and
sbb
fisubrs
jne
sub
gs
xor
pusha
mov
mov
test
pop
push
adc
cmp
testb
fcmovnb
fildl
movsl
lods
dec
mov
mov
and
inc
and
inc
mov
pop
leave
nop
add
hlt
sub
pusha
add
dec
sarb
repz
mov
outsl
push
xor
push
mov
and
xchg
jg
add
lea
adc
jb
aaa
out
ljmp
inc
hlt
imul
sub
bnd
fcmovb
jmp
inc
xchg
add
scas
mov
xchg
cmp
lret
negl
xchg
xor
fistpll
mov
bound
jmp
inc
push
xchg
mov
test
push
cmp
cmpl
cltd
aas
sub
sbb
lea
je
scas
and
ret
movsl
and
pop
sbb
js
jmp
mov
and
and
and
push
jb
sbb
jo
mov
sbb
inc
cmpsb
aad
pop
clc
rorb
aam
ljmp
mov
push
dec
lahf
test
or
push
sti
push
and
popa
stos
int
mov
les
and
sub
push
xor
mov
repz
xor
xchg
enter
jb
mov
push
cmp
inc
or
stos
push
test
ret
mov
movsb
popa
jnp
jg
cmpsl
inc
push
pop
push
push
inc
mov
icebp
sbb
mov
je
ja
xchg
fcomps
sub
or
adc
xor
daa
test
adc
inc
movsl
inc
mov
fmul
pop
daa
adc
loopne
mov
add
pop
xor
add
cmc
fnstcw
cmp
icebp
sbb
add
sbb
push
adc
sbbb
dec
mov
sbb
ret
sbb
scas
mov
fisttpl
mov
sbb
mov
cmp
in
das
icebp
fs
dec
xor
sbb
das
push
add
jnp
inc
nop
daa
mov
mov
cmp
mov
ljmp
jbe
data16
xchg
cmp
mov
mulb
inc
mov
and
outsb
je
mov
xor
inc
cmpsb
mov
add
lea
pusha
repz
sub
mov
mov
mov
or
sub
ja
adcl
xchg
push
pop
sub
mov
lcall
jl
addb
outsl
cld
aas
cs
sti
das
imul
jbe
int
adc
xor
sub
lods
jbe
mov
mov
inc
xchg
aaa
jecxz
iret
ja
inc
sub
fimuls
gs
hlt
xchg
test
add
push
fldl
sub
scas
xor
loop
inc
xor
pop
or
decl
mov
cmp
push
jecxz
test
icebp
jbe
cli
sarl
or
cltd
ss
and
mov
int
sub
mov
sti
dec
add
jb
and
jns
mov
inc
mov
inc
sbb
mov
cmc
in
mov
das
xorl
call
pop
subb
out
daa
mov
mov
fildl
lahf
aam
repz
shl
mov
jno
mov
int
sub
jle
aaa
push
or
dec
pop
push
ds
push
adc
adc
adc
pop
inc
inc
or
ljmp
mov
xor
and
xchg
out
enter
insb
aaa
cli
sub
in
push
jae
mov
sarl
pop
pop
push
inc
mov
dec
loop
jge
es
loope
push
pop
inc
push
fcomip
pop
push
cwtl
in
mov
or
jbe
mov
out
leave
inc
pop
mov
push
lds
je
push
jmp
enter
inc
pop
fistpll
popa
jno
and
dec
inc
lock
sub
cld
push
test
cmpsl
xchg
cwtl
imul
xlat
cmp
pop
push
mov
and
sbb
push
test
and
sarb
fxtract
pop
adc
sbb
push
aaa
mov
cmp
xchg
mov
sub
scas
aaa
inc
pop
and
and
mov
ss
aam
jg
movsl
aas
cwtl
pop
test
and
sub
sub
iret
xchg
fistpll
inc
cmc
lods
inc
add
gs
xor
inc
xchg
sbb
dec
ss
jge
call
fbstp
loop
dec
sbb
mov
js
xchg
mov
imul
and
sub
fdivl
jne
cmp
xbegin
jmp
mov
mov
sti
ret
in
test
vpacksswb
and
push
jmp
dec
mov
lock
loope
clc
es
mov
pop
xor
mov
inc
pusha
mov
mov
mov
aaa
addr16
lods
pop
and
push
inc
and
and
push
cmpsl
sub
aas
fcompl
cmp
lret
push
shll
mov
popa
andb
pop
sub
cs
test
mov
nop
mov
shrl
sub
fcompl
imul
les
insb
jp
mov
lock
imul
ret
push
inc
jo
loope
stos
pusha
hlt
aaa
or
mov
loopne
push
push
loop
push
push
scas
shl
mov
or
and
mov
xor
adc
bound
fwait
icebp
fidivrl
pop
mov
jbe
sahf
ljmp
out
arpl
cmp
popf
cmp
jne
call
xor
aas
push
int
imul
adc
push
inc
stc
push
dec
mov
jno
cmpsb
adc
cmc
push
push
in
scas
arpl
dec
inc
mov
fidivs
inc
push
cmp
movsb
pop
aas
insl
fsubs
jmp
das
inc
cld
popf
adc
push
xor
jle
pop
lcall
scas
fs
mov
inc
test
push
lock
andb
or
adc
dec
pop
add
mov
mov
xchg
xor
and
or
imul
mov
faddl
xchg
xor
out
sbb
pop
shlb
jl
arpl
xor
cmc
xchg
mov
jne
fwait
in
mov
lods
ss
jmp
jmp
pop
out
les
hlt
jg
ficoms
jae
mov
push
clc
lcall
mov
ret
test
ja
lret
lods
pop
pushf
mov
push
cli
pushf
insl
enter
in
push
mov
push
or
lret
sbb
out
adc
cmp
jmp
adc
cmp
cmovne
mov
pop
inc
imul
popa
arpl
cltd
jmp
xchg
mov
dec
inc
mov
inc
stc
jns
sti
sbb
gs
lods
mov
movsb
inc
pop
enter
xchg
ret
out
lahf
xlat
outsb
sbb
adc
or
push
cmpsl
inc
imul
dec
pusha
dec
fisttps
loope
fisubs
sahf
fldcw
repz
loopne
sahf
and
rcrb
shl
jp
xor
dec
pop
jecxz
js
cmp
mov
andb
in
cmp
jl
fisttps
in
or
cmpl
lret
xchg
je
nop
jns
fcompl
fisubrs
lods
sbb
out
inc
inc
imul
jle
mov
inc
aad
or
jno
lea
negl
hlt
push
pop
scas
movsl
mov
stos
pop
sbbl
ds
mov
movsb
push
daa
or
lods
rorb
int3
adc
pushf
sub
xchg
das
icebp
lock
fisubrl
pusha
cs
mov
std
mov
icebp
pop
push
jmp
adc
adc
aas
lahf
into
add
jp
call
bswap
pop
xor
sub
addr16
adc
pushf
sub
mov
mov
out
rcll
les
mov
and
jmp
mov
imul
add
mov
xchg
mov
jg
mov
xor
stc
inc
dec
mov
sub
imul
sbb
push
movsl
sub
in
loope
pop
aam
ret
and
or
test
lock
roll
ja
or
ljmp
cmpb
ret
addr16
inc
push
aaa
xchg
lds
push
in
aad
lret
mov
ret
lcall
xchg
pop
cmp
mov
xor
jnp
pop
inc
insl
mov
and
or
test
adc
add
xchg
xchg
rcrl
mov
pusha
add
xor
hlt
mov
rol
pop
mov
and
vhaddps
je
inc
andb
stc
enter
in
in
inc
jecxz
pop
sub
jge
je
pop
jp
repz
mov
pop
jne
or
inc
xchg
xor
xor
sahf
pop
nop
inc
jp
jl
xchg
and
sbb
int3
jmp
jp
mov
add
addr16
and
lea
or
pop
dec
cwtl
pop
cs
bndldx
dec
push
inc
inc
adc
mov
dec
shrl
mov
fbstp
imul
jecxz
movsb
sub
pop
fwait
outsl
scas
fldl
scas
repz
dec
sahf
jg
mov
xlat
cli
cmp
fildll
popa
pushf
mov
xor
ja
stc
in
cli
push
repnz
mov
push
jae
mov
idivl
fcmovnb
mov
daa
adc
loopne
lods
xlat
sub
pop
lods
xchg
xchg
xchg
or
fsubs
imul
mov
cmc
incb
cmp
icebp
sti
sub
adc
add
inc
out
fildll
inc
or
push
nop
and
fstl
mov
sahf
push
es
push
stos
dec
ret
sbb
push
mov
pop
xchg
sti
mov
add
push
lea
stos
xchg
add
movsl
jl
test
jge
addl
lock
jecxz
inc
js
mov
inc
sub
lret
insl
cmp
jbe
cs
flds
in
subb
fstl
jmp
xchg
mov
or
pop
sti
push
cmp
sarl
sub
push
or
cmpsb
dec
popw
ret
ljmp
or
xor
dec
addr16
mov
repz
pop
js
dec
xlat
add
fbstp
icebp
imul
stc
int
cmp
mov
in
xor
or
push
mov
xlat
andb
push
xor
inc
int
test
sbb
dec
adc
stos
imull
scas
in
jnp
idiv
jle
call
hlt
sub
inc
div
ljmp
mov
dec
adc
adc
arpl
popa
pop
in
inc
cltd
jae
adc
jb
mov
and
mov
mov
faddp
inc
sub
out
xchg
mov
not
dec
loop
xor
dec
sbb
fucomi
js
mov
dec
dec
mov
and
inc
mov
jl
loopne
lea
enter
cmovl
stos
fs
sub
fwait
or
into
or
enter
cltd
ret
testb
add
setge
add
cmovno
es
dec
dec
clc
xchg
mov
jle
frstor
inc
push
and
cmc
rorl
ljmp
pushf
rorb
incb
jecxz
dec
add
cmc
jns
out
cmpsl
mov
cmpsb
cmp
sub
aad
pusha
cmp
lds
inc
fdivp
loop
xor
stos
sbb
adc
sub
ret
aam
jmp
mov
pop
jae
and
pusha
es
rcl
je
xchg
mov
inc
mov
loopne
mov
cmpsl
ret
dec
testl
mov
and
repnz
or
and
jno
fs
fbld
jl
mov
pop
adc
add
push
jns
jle
loopne
push
or
cmpsb
jnp
jb
mov
jo
out
fsub
mov
cld
das
scas
lods
out
test
lcall
and
push
aaa
push
shl
and
or
pop
mov
loop
push
pop
pop
rorb
lret
popf
cmpsl
js
inc
push
je
mov
icebp
mov
dec
stc
mov
pop
adc
movsb
mov
and
pop
out
jns
and
out
push
xor
pop
sti
and
mov
popa
lock
fwait
es
jl
mov
cld
cmp
fcmovb
sti
lods
adc
clc
loopne
xchg
xor
fwait
aas
mov
stc
jnp
in
fbstp
out
enter
xchg
push
sub
xor
mov
insb
or
lret
mov
out
xor
lret
cmp
mov
movsb
fwait
mov
js
hlt
cld
stc
rolw
sbb
inc
jae
or
or
aas
data16
pusha
sub
mov
cmp
mov
mov
and
stc
int3
add
pop
mov
or
mov
cmpsl
xchg
push
push
add
and
jmp
sub
xchg
inc
adc
cmpsb
mov
inc
test
cld
ret
mov
adc
iret
sahf
sub
mov
in
std
cli
sub
mov
stc
mov
cmp
add
call
xor
or
jae
jle
or
es
push
imul
push
pop
or
push
and
push
fs
shll
jecxz
repz
sti
adc
cmpsb
scas
mov
push
test
arpl
mov
addr16
out
jle
pushf
cmp
xor
movsb
pop
adc
add
mov
mov
add
ret
inc
sbb
sub
push
push
adc
fiaddl
mull
xor
mov
loop
imul
cmpsb
imul
lret
out
leave
or
int
movl
cmp
mov
dec
adc
or
pop
aad
xchg
inc
xchg
dec
push
fisttps
adcb
cmp
adc
arpl
fistps
sahf
or
rorb
ljmp
or
or
mov
dec
bound
or
andb
out
mov
aas
sub
lahf
aas
sbb
push
sub
jmp
inc
hlt
test
dec
outsl
test
out
or
pop
pushf
mov
call
movsb
fwait
and
cmp
clc
sbb
push
out
xchg
popf
sarb
xor
loopne
inc
js
loope
in
jae
pop
inc
mov
repz
iret
push
enter
jg
mov
test
iret
sbb
outsl
dec
sbb
scas
daa
adc
je
adc
fs
movsb
shl
leave
decl
cmpsl
in
or
lcall
jmp
xchg
push
insb
mov
in
mov
push
sarb
imul
add
push
enter
xchg
and
inc
aaa
xchg
or
in
mov
repnz
popa
mov
jge
sar
cld
cli
xchg
fdivrl
in
ljmpw
xchg
and
fadd
movsb
popa
push
fsts
insb
daa
cwtl
popf
insl
xor
fs
jns
in
sbb
aam
pop
movsb
push
push
test
mov
xor
mov
lret
pop
push
iret
jle
xchg
mov
cmp
inc
rcr
int
fnstcw
mov
mov
jbe
das
push
loop
out
jmp
popa
rorl
ss
push
xor
cmc
movsb
xor
push
enter
mov
int3
pop
sbb
aas
add
icebp
ds
clc
xor
mov
and
shlb
push
sarl
xchg
mov
adc
xchg
rclb
sbb
ss
mov
lea
adc
jp
jne
push
nopl
sar
and
inc
stos
xor
ja
push
lods
xchg
cltd
xchg
int
inc
sbb
movsb
mov
out
xorb
jp
mov
rorb
shl
xchg
daa
ds
inc
je
addr16
adc
cmp
sub
test
dec
fstps
addl
jns
dec
mov
aas
mov
insb
icebp
dec
bound
ljmp
pusha
push
and
int3
xorl
lods
add
push
and
xchg
sarl
in
fistpl
inc
sub
fildll
sub
pop
jg,pt
mov
jl
jmp
loop
out
fs
icebp
xchg
push
inc
and
enter
sub
mov
cmp
and
pop
pusha
adc
stos
pop
mov
sbb
adc
punpckhbw
xchg
add
nop
dec
adc
mov
rorb
clc
cmp
int3
call
xor
inc
loope
pop
or
daa
lds
aam
dec
lods
add
insb
addb
mov
push
jb
push
xchg
sub
xor
inc
orl
movsb
ss
xchg
mov
adc
daa
mov
pushf
test
cmp
test
and
mov
jbe
sbb
xorl
cmp
push
fiadds
inc
aas
mov
cld
packuswb
dec
in
out
lods
xlat
iret
jns
push
push
dec
and
and
xchg
mov
pop
sub
mov
pop
xor
mov
es
das
xchg
in
or
insb
and
and
inc
sarb
ficomps
enter
iret
jo
adc
test
pop
push
imul
cmp
ja
into
inc
and
sub
cmpsb
push
idivl
in
jo
rcll
popa
sarl
sub
mov
jl
add
fwait
ret
inc
add
mul
leave
and
stc
test
inc
jae
rep
loopne
rorb
mov
rcll
dec
in
adc
dec
cmp
ret
jbe
lock
outsb
enter
cmp
sub
push
jns
mov
and
cli
jl
jb
jecxz
stc
lods
adc
cltd
dec
inc
xchg
stos
push
adc
mov
ja
das
cmc
cmp
pop
insl
or
lret
pop
push
jnp
repnz
imul
add
push
mov
adc
in
rol
push
fs
adc
sbb
fwait
rorl
stc
xchg
sub
gs
aas
sbb
imul
rorl
scas
ds
xchg
sub
arpl
int
push
dec
shl
sub
fdivl
jmp
fnstsw
js
mov
insb
testl
aaa
cwtl
mov
lahf
xchg
in
fs
inc
cmp
addb
in
insb
mov
jmp
pop
push
test
sbb
lret
rcrb
push
movsb
fcmovne
aas
fistpl
sub
pushf
arpl
sub
stos
cmp
hlt
call
sbb
fmuls
pop
mov
loopne
pushf
xor
mov
jae
ret
daa
inc
push
cli
sbb
xor
push
sbb
sbb
insl
mov
mov
cld
mov
imul
test
cmp
ds
shl
in
nop
jmp
mov
test
scas
scas
dec
mov
adcl
xlat
fldt
dec
out
cmp
pop
fstl
or
and
dec
adc
push
nop
pop
lsl
fwait
lret
pop
pop
jbe
nop
imul
xorb
dec
sarb
cmpsl
jae
mov
int3
ss
mov
pop
xchg
dec
sahf
ljmp
sti
dec
stos
cmp
cld
xor
jno
imul
mov
cmp
push
add
dec
adc
out
or
sti
clc
and
jmp
and
in
scas
mov
sbb
notl
push
ljmp
cltd
gs
repnz
subb
cmp
enter
pop
loope
inc
jb
mov
inc
xor
inc
add
mov
add
add
sub
or
popf
cld
xchg
jl
lcall
icebp
leave
dec
fisttps
add
testb
jno
pop
nop
cmc
and
aad
mov
jge
and
sub
mov
or
shll
dec
shl
lret
sub
add
cmpsl
sbb
leave
rorl
jmp
stos
push
repz
pop
and
mov
xor
inc
js
loopne
push
cwtl
pop
rep
add
mov
dec
sub
push
cld
jbe
jns
xchg
into
repnz
rol
fwait
orl
rol
in
out
sub
dec
mov
cmp
ljmp
fs
movsb
sarl
mov
je,pt
jnp
scas
cmp
mov
mov
and
iret
adc
xor
inc
push
push
jmp
lods
mov
inc
push
jb
shl
add
insl
add
push
sbb
inc
aas
and
jne
out
adc
aaa
jl
sub
cmp
std
lods
push
mov
shrl
in
imul
fwait
cld
jmp
push
xor
jl
jnp
scas
outsl
xorb
in
inc
sbb
mov
xor
inc
xchg
xor
inc
adc
or
jb
leave
call
cmp
cmc
sti
dec
popf
sub
lds
sbb
das
mov
push
dec
in
inc
inc
cmc
enter
pop
sarb
sbb
out
dec
pop
push
fdivs
jno
xchg
cmp
jg
jle
mov
icebp
jecxz
in
bound
loope
fcomp
push
int3
push
bound
push
dec
mov
mov
lods
mov
ss
push
jg
inc
adc
sbb
push
push
int3
jecxz
lret
add
sbb
lds
fistl
pop
jmp
dec
insl
fnstsw
mov
sbb
or
cmpsl
lea
movsb
jno
rorl
push
in
imul
cs
or
pop
mov
pop
aad
pop
stc
stos
inc
push
cmpsb
adc
outsl
imul
push
inc
cmc
adc
stos
cmp
inc
fcompl
lds
lahf
int3
sub
jmp
data16
add
mov
mov
jp
or
jge
mov
cmp
out
shll
divl
xchg
mov
into
dec
and
mov
rolb
xchg
loop
call
xor
lahf
push
mov
arpl
mov
test
xlat
adc
sbb
mov
loop
imul
jmp
decb
out
mov
scas
pushf
mov
std
inc
out
mov
sbb
lock
into
in
je
xlat
cli
pop
or
js
cmpsb
push
lcall
cli
mov
je
cmpsl
mov
into
andl
fists
jecxz
fldt
popa
dec
pop
aaa
aas
pop
mov
loopne
inc
push
add
lcall
xchg
call
imulb
sub
push
or
mov
dec
cs
out
inc
ds
ss
leave
pop
cmp
xchg
pusha
mov
mov
mov
js
outsl
hlt
fisubrl
imul
jno
push
cmp
dec
movsb
out
sarb
imul
fisubrs
dec
xchg
lret
jnp
leave
repnz
pop
loop
pop
loopne
jo
pop
sahf
rcrb
xchg
outsb
and
scas
inc
mov
scas
inc
cmpsl
cwtl
and
mov
dec
xchg
dec
bound
dec
mov
mov
scas
call
in
adc
cmc
xchg
and
cmp
out
je
jne
push
xchg
and
dec
push
leave
sub
push
and
shrl
test
push
and
mov
outsl
pop
mov
sar
sub
mov
cli
hlt
notb
repnz
je
gs
out
pop
loop
dec
pushf
mov
mov
in
inc
into
aad
dec
pushf
popf
pop
sub
inc
pop
loope
xchg
cmp
xor
decl
xchg
xor
or
scas
and
mov
cld
int3
jae
dec
movb
imul
imul
and
hlt
mov
int
mov
int3
xlat
mov
or
xorl
mov
xchg
in
je
aam
aas
lret
sbb
lea
jae
leave
insb
pop
lock
cmp
arpl
or
out
gs
pop
and
xchg
xchg
push
and
inc
insl
repnz
pop
stc
mov
sub
mov
insl
xor
popa
outsb
cmc
lock
or
mov
imul
xlat
test
adc
mov
dec
dec
aam
or
addr16
into
dec
pop
fnstcw
pop
jmp
mov
mov
fstpl
xchg
out
push
mov
add
insl
lods
mov
add
movsl
and
adc
outsl
idivb
out
fldt
lods
lock
daa
xchg
or
divl
out
sub
imul
addr16
and
push
xchg
push
xchg
dec
vpermi2q
pop
mov
andb
cmpsl
inc
jb
addr16
cmp
inc
mov
sbb
mov
sbb
mov
aad
inc
cld
pop
lret
fnstsw
test
cmpsb
out
jmp
adc
pop
push
add
jle
das
mov
and
bound
mov
fsubrs
lods
xor
rolb
insl
xor
jne
jne
scas
adc
xor
loop
test
mov
mov
xchg
cmp
or
push
push
mov
rolb
std
divl
cld
sahf
sub
in
add
xor
ljmp
es
test
or
int3
cmpsb
aad
lahf
xchg
push
xchg
stc
add
imul
in
jmp
ja
push
cmp
sahf
adc
xor
xor
into
mov
dec
cli
jl
jl
lret
stc
cmp
pop
inc
filds
or
xchg
xor
mov
sub
sbb
push
cli
pop
push
dec
js
xchg
xor
fwait
xchg
aas
push
xchg
xchg
or
inc
incl
cmp
cmpsb
call
jle
mov
fimull
pop
stos
sub
mov
rcll
in
add
cmp
jb
pop
sub
pop
in
lds
bound
js
outsb
and
test
faddp
fstpt
fimuls
sbb
lahf
pop
pushl
sbb
or
sahf
fcoms
mov
nop
in
aad
popa
jg
sub
dec
cmc
sub
mov
jo
cmc
insb
sbb
inc
ljmp
test
sub
adc
pop
fdiv
lea
cld
mov
ds
aaa
push
sub
sbb
push
test
sub
xchg
mov
cli
lret
test
xor
inc
cli
adc
xchg
outsb
dec
insb
mov
ja
xchg
shrb
cli
sub
decb
test
lods
or
rcrb
sub
sub
ja
fisubs
mov
inc
mov
sarl
gs
lock
pusha
adc
mov
or
test
jmp
arpl
inc
sbb
xor
testb
sbb
stos
xorb
in
movsl
int
push
dec
or
cmp
or
andb
jo,pn
into
lea
das
insb
inc
dec
cmp
mov
jns
ljmp
lret
mov
mov
jg
pop
jne
subb
cmp
ljmp
lods
push
js
push
rclb
movsb
in
pushf
xchg
push
popf
or
decl
mull
insl
mov
fnstcw
sahf
fs
scas
push
stos
cwtl
in
stos
js
setns
arpl
push
aas
pusha
xor
loop
inc
nop
mov
xor
stos
jnp
push
inc
int
std
stos
cwtl
xchg
idivb
outsl
shll
pop
adc
mov
xor
jge
lock
jecxz
and
xchg
dec
push
call
mov
stos
or
scas
pop
nop
sbb
pop
or
jmp
pop
mov
sub
push
addl
int3
add
imul
jge
pop
add
push
int
jbe
int
jno
push
addr16
push
jo
mov
xor
lcall
out
add
sahf
xchg
xor
daa
lds
push
jnp
push
aam
std
pushf
xchg
adc
daa
shrl
lds
or
and
sub
add
outsl
push
cmpl
lret
js
jl
push
or
add
or
loop
adc
and
push
dec
lahf
sub
mov
sub
mov
scas
inc
scas
push
sub
nop
dec
mulb
sub
sbb
roll
es
addl
js
gs
xor
sub
dec
mov
pop
xchg
xor
jo
adc
scas
xchg
add
lods
scas
inc
jbe
sub
cmpsb
daa
and
shl
sarl
inc
dec
lahf
mov
subl
push
fildll
incb
xchg
mov
lret
fildl
aaa
dec
sbb
jl
cmpsl
out
sbb
sbb
fmull
fildl
or
ret
mov
adc
arpl
and
test
dec
lock
out
or
push
sub
test
movsb
pop
mov
lcall
shr
popf
lods
test
imul
xchg
data16
iret
mov
jbe
cmp
mov
and
int3
popa
data16
adc
mov
gs
cmp
push
dec
jl
pop
sbb
push
sarb
sbb
cmpsl
pop
ret
cs
pop
sub
loope
repnz
add
mov
cmp
popf
xchg
add
sub
cmpsl
loop
mov
orl
inc
mov
out
jae
add
inc
addr16
push
xchg
pop
pop
test
movsl
cmp
or
fiaddl
push
arpl
adc
jb
pop
dec
jmp
push
mov
das
xor
stos
ds
xlat
xlat
mov
mov
fnstenv
push
in
cmp
mov
out
jb
out
pop
rolb
xor
sub
lds
and
add
push
out
lret
into
rcrl
cmp
adc
push
pop
sbb
gs
scas
lcall
sti
lods
clc
pop
stos
push
push
pushf
outsb
xor
pop
negb
in
mov
shrb
push
fisubrs
mov
mov
fstp
in
sbb
xor
push
lods
fnstcw
fwait
scas
add
loope
fadds
or
pop
mov
add
add
into
aaa
xchg
sub
xchg
ss
clc
fdivs
adc
ss
pop
test
insb
add
and
jno
mov
mov
pop
push
sub
pop
sbb
ds
fwait
add
call
jb
and
cmp
sub
mov
jmp
ja
stos
loopne
sarb
and
fstl
pusha
pop
into
loopne
sbb
dec
or
cmp
push
jle
jae
pop
sub
pop
sub
xor
inc
or
mov
push
adc
out
and
leave
ss
mov
and
fdivs
fdivl
add
or
lods
push
pop
push
xchg
outsl
push
insb
sahf
fmuls
push
mov
scas
test
jle
xor
or
popa
push
cmc
jne
fidivrs
jne
mov
push
xchg
jg
inc
cmp
fisttps
outsl
pop
test
cwtl
dec
mov
inc
dec
mov
and
incl
adc
enter
add
in
cmp
sbb
jge
xchg
leave
xchg
cli
xchg
loope
pop
and
pop
pop
cmp
push
test
test
xchg
jb
mov
mov
mov
xlat
push
xchg
jmp
scas
dec
in
jge
iret
in
icebp
movsb
jae
addr16
mov
roll
sti
and
jmp
mov
adc
mov
inc
inc
cmpsl
out
lahf
push
jl
lock
scas
add
out
out
cmp
mov
cmp
and
fimuls
xor
outsb
ret
ds
lcall
icebp
or
stc
adc
xchg
sarl
in
inc
shll
xchg
mov
sub
xchg
adc
inc
repnz
lods
insb
lea
test
outsb
inc
jnp
and
xchg
add
lods
js
dec
pcmpeqw
addb
jo
xchg
push
inc
ljmp
lock
jno
lret
std
in
into
xchg
sub
dec
or
mov
pop
push
mov
inc
pop
mov
fnstenv
push
push
int3
fcomps
adc
fcoms
inc
push
xchg
sbbl
in
add
adc
enter
cli
fs
inc
jmp
dec
pextrw
or
addr16
xchg
inc
in
icebp
mov
movsl
movsl
mov
lds
andl
pop
sti
dec
clc
icebp
push
xchg
fstpl
lahf
pusha
stos
or
mov
dec
xor
inc
sbb
xchg
sub
movsb
inc
cmpsl
push
fldt
mov
push
sbb
rclb
jl
jo
xor
xor
add
jge
insb
int
ljmp
rclb
dec
sbb
push
mov
adc
push
fldenv
add
ss
dec
notl
into
inc
xchg
push
pop
scas
sbb
mov
inc
xor
stc
in
or
enter
or
loope
or
into
subb
pusha
add
divl
out
push
lea
cmp
and
or
out
inc
das
fnsave
pushf
mov
scas
xchg
sbb
ljmp
icebp
xchg
xchg
divl
add
xchg
aam
adc
xor
cwtl
dec
dec
loope
xchg
cmovne
mov
test
shl
xor
in
in
push
mov
inc
mov
pop
inc
jl
cli
shlb
xchg
jnp
mov
lods
jbe
and
ret
push
mov
into
js,pn
pop
sub
lcall
adc
ja
iret
popf
cli
outsb
enter
js
lcall
out
xchg
cmp
jmp
imul
test
cmpsb
fiaddl
out
js
loope
mov
ds
push
fsts
jnp
ja
ja
int
adc
arpl
xchg
arpl
aad
push
stos
call
cld
test
sbb
je
js
dec
mov
mov
dec
lock
shrb
addr16
hlt
sbb
les
daa
mov
andl
sahf
imul
repnz
mov
int3
js
pushf
sahf
mov
dec
cmp
inc
cs
and
es
xchg
lret
mov
insb
cmp
dec
sub
push
sti
clc
loop
pop
adc
inc
loop
fbstp
sti
push
fbld
jge
aaa
cmp
fldl2t
outsl
dec
lods
xlat
loope
xchg
pop
sub
and
xchg
rol
pop
fisttpl
mov
inc
out
cmp
cmp
jle
xor
aad
imul
or
inc
popa
mov
cltd
subb
lods
mov
xchg
sub
sub
bound
xchg
jmp
or
xor
mov
adc
cwtl
lods
xchg
int
pop
xor
xlat
cld
mov
xchg
or
cmp
mov
jae
push
test
push
test
cwtl
testl
adc
rcll
pop
or
push
xor
sub
out
jno
sbb
push
cmp
int
cwtl
insb
pop
sbb
add
test
mov
dec
aas
and
mov
add
cmp
inc
cltd
sub
les
popf
sub
repz
je
int3
cmpsl
inc
enter
mov
xor
jo
cltd
adc
icebp
or
out
out
xor
sbb
leave
sub
les
cli
mov
mov
pusha
sbb
inc
xor
roll
cltd
xchg
jecxz
mov
xor
popa
mov
pop
les
mov
push
or
stc
sub
push
sbb
sub
leave
xchg
fwait
out
cld
add
xchg
popa
sbb
jp
fistpl
jmp
mov
roll
out
fildll
push
jbe
add
adc
ljmp
push
rcrl
sub
pop
inc
fwait
mov
imul
xor
xor
dec
push
add
test
iret
push
xchg
inc
mov
cmc
pop
aam
mov
repz
stc
cmpsb
sub
sub
push
shlb
sub
lret
shll
je
xor
test
lds
lea
sub
cmpsl
outsb
in
add
fiadds
out
imul
in
cmp
mov
leave
test
daa
mov
cmpsl
pop
ja
test
popa
adc
scas
adc
in
mov
adc
mov
out
sahf
cmpsb
mov
or
cmp
enter
sub
mov
lods
cmp
mull
cmpsb
lods
gs
xchg
rorl
cmpsb
pop
pop
fcomps
xchg
pop
or
push
xor
and
mov
das
mov
adcl
cmp
shrb
xchg
pop
or
loop
notl
and
cltd
xchg
jns
add
sub
leave
cmpsb
mov
push
mov
mov
shrb
mov
or
mov
dec
mov
mov
adc
push
movsb
dec
jecxz
jg
inc
mov
cld
fsubr
cmp
mov
imul
dec
fistpl
stc
outsl
mov
roll
jmp
inc
pop
xlat
push
inc
js
mov
dec
add
xor
lret
test
pop
jbe
pop
cmp
clc
andb
dec
data16
pop
mov
mov
xchg
cmp
adc
sub
mov
mov
mov
xor
or
mov
add
loopne
shrb
loope
sbb
sbb
int3
mov
mov
jp
xor
es
jle
or
je
test
mov
sarl
addr16
lea
out
mov
pop
leave
cmp
xchg
pop
hlt
mov
ret
sbbb
call
push
aaa
ret
inc
rcl
xchg
leavew
xor
fidivrl
xor
jmp
arpl
call
dec
pop
enter
sbb
or
aas
mov
mov
xchg
test
pop
mov
or
jae
call
inc
and
sub
mov
push
sub
jnp
dec
les
into
enter
cltd
out
mov
cmp
cmp
testl
fsubrl
xor
xchg
add
mov
sub
stos
mov
and
mov
leave
in
push
mov
push
push
jns
xchg
jl
daa
sub
mov
add
jg
push
and
push
fstpl
imul
out
insl
and
lock
rcl
aad
lds
or
push
clc
and
nop
movsl
dec
and
repz
pop
ret
out
xor
ror
mov
inc
adc
fucomi
dec
jns
addr16
adc
aam
push
enter
add
xor
mov
ret
jae
out
jmp
je
lahf
xchg
lods
add
and
fisubrl
cmp
inc
cli
jp
sarl
xor
inc
xor
xchg
cli
stos
shll
inc
jp
xchg
mov
dec
cmp
mov
call
mov
lods
or
dec
fcomps
lret
cmp
add
aam
and
ret
in
inc
rcl
sbb
mov
bound
jno
gs
stos
es
or
in
push
add
push
shrl
ljmp
pop
enter
cmp
mov
push
jno
xor
imul
aad
adc
cmp
sti
cwtl
mov
addr16
ljmp
push
notl
mov
and
stc
mov
sbb
lea
adc
stos
inc
sub
and
xchg
mov
stos
push
outsb
out
inc
add
pop
notb
jnp
cs
sbb
cmpsb
cmp
sarl
push
lods
xor
test
fcomp
fwait
jo
mov
and
bnd
cmp
pop
insl
rcrb
ret
inc
inc
bound
xlat
sbb
mov
jle
mov
outsl
pop
pushf
or
or
fnsave
sahf
hlt
sar
xchg
pop
imul
xlat
pop
sbb
das
jecxz
sbb
ja
mov
fidivl
push
or
xchg
sub
pop
jge
add
iret
adc
scas
test
loop
dec
sub
pop
xlat
jle
fs
mov
dec
push
loope
mov
push
pop
in
xor
movsl
sbb
jp
pop
xor
div
sti
pop
dec
cmp
dec
push
jne
bound
cmp
mov
add
pop
xchg
aas
and
or
push
pop
into
ret
or
mov
add
inc
sbb
mov
mov
in
aad
pop
aas
jg
das
xor
mov
int
divl
call
jb
addr16
stos
pop
in
out
test
push
pop
jmp
out
inc
mov
sbb
arpl
add
add
xor
pop
int
test
sbb
in
lcall
inc
or
sbb
out
xorb
rol
out
sub
pop
mov
jo,pn
daa
loopne
ja
sahf
leave
ss
push
aas
xchg
add
mov
ljmp
push
divl
test
cltd
loop
cmc
les
sbb
xorb
sub
adc
dec
cltd
xchg
arpl
jb
stos
in
mov
inc
mov
icebp
jnp
movsl
push
add
movsb
lods
icebp
call
fwait
ja
test
ss
cld
or
mov
push
cmp
mov
pop
fwait
sub
jl
xchg
idivb
mov
mov
sub
hlt
orb
xchg
orl
xchg
sub
fisubrl
dec
xchg
jns
out
in
adc
daa
mov
dec
pop
nop/reserved
nop
insl
fcmovbe
loopne
lret
aaa
lret
jmp
ret
xor
mov
fsts
aad
in
mov
negb
dec
inc
cmp
addl
pop
ljmp
mov
test
cmc
pop
inc
out
les
cmpsl
in
enter
pop
or
xor
andb
mov
mov
or
add
mov
lret
and
loop
sahf
xchg
fs
xchg
enter
bound
mov
out
sarb
mov
imulb
lret
xor
test
popl
push
cli
xchg
cmpsl
insb
lahf
in
lcall
insb
sbb
xlat
ss
add
mov
ja
cmpsl
adc
outsl
test
pop
push
dec
jno
or
fwait
jecxz
or
add
fs
fldl
mov
ret
cmp
outsb
sti
dec
lods
adc
or
out
mov
jle
dec
xor
cmp
js
daa
insl
jp
mov
or
cmp
cmp
adc
pop
mov
push
ja
sbb
daa
add
add
std
add
loop
inc
movsl
int3
ds
mov
fdivs
fisubrl
jne
mov
test
in
push
sahf
fisttpl
add
lahf
pop
sbb
dec
jg
sub
mov
sub
mov
mov
in
mov
xchg
hlt
inc
testb
mov
and
jmp
mov
cmpsb
sub
xor
test
fisubs
js
push
jno
idivb
imul
add
fcompl
shl
mov
xchg
push
xchg
subb
xchg
imul
or
int3
dec
adc
jge
stos
dec
popf
cld
aaa
mov
pushf
ret
cmpsb
nop
cmpsl
adc
in
adc
jbe
xor
pop
out
scas
jmp
outsl
pop
rolb
xchg
test
jb
mov
pop
cmp
das
jg
mov
cltd
xor
mov
dec
or
mov
push
push
mov
pusha
sbb
and
push
fsubrs
ds
dec
ffree
jecxz
adc
push
outsb
push
and
mov
and
mov
insb
jl
push
fsubl
xchg
mov
jmp
or
stc
xchg
cmp
lock
sbb
jno
js
mov
pop
xchg
push
xchg
movsb
jne
flds
push
subl
dec
fisubl
mov
movsb
cmp
push
and
jp
push
sbb
stos
jne
call
lods
cltd
paddq
in
jge
sub
inc
mov
test
out
rolb
loope
repz
icebp
push
jne
rcrl
in
movsb
dec
ljmp
lea
mov
stos
pushf
add
pop
xchg
and
add
and
jnp
pop
adc
pop
in
pop
cltd
popf
xchg
mov
ljmp
dec
cmp
cmpsb
aad
dec
outsl
test
mov
hlt
mov
shlb
fwait
and
fwait
xor
mov
xor
xor
jb
lods
outsl
push
mov
mov
pop
xchg
rclb
xor
xor
ret
je
sbbl
dec
and
inc
imul
inc
fsts
into
and
push
push
into
shlb
enter
imul
movl
sbb
aam
push
add
xchg
test
adc
fbstp
int
cs
test
sub
bnd
or
lods
xor
adc
jae
out
jmp
push
js
adc
testb
push
cli
mov
xchg
jb
mov
pop
inc
xor
sarl
loope
cmpsl
sub
aam
outsl
shl
add
loope
les
xlat
out
flds
cmp
pop
testl
sahf
inc
int
pop
pushf
sbb
mov
mov
std
pop
pop
xchg
xchg
loopne
insb
fs
adc
iret
outsb
sbb
loop
pop
jb
adc
mov
loop
cmp
ljmp
dec
stos
add
lahf
sub
leave
cld
jns
jb
lods
lret
movsl
sub
pop
mov
mov
fiadds
mov
decb
mov
push
or
push
sub
and
sti
or
mov
inc
popfw
in
and
dec
out
xlat
pop
cwtl
rcr
divb
mov
fs
pop
pop
test
push
xor
xchg
cmp
sbb
je
jbe
ret
pop
frndint
mov
ret
mov
cs
sbb
mov
mov
push
inc
fwait
mov
inc
shll
add
push
popa
jbe
call
lods
cmp
mov
sti
jno
popf
fcmovne
fs
add
push
push
xchg
push
cwtl
xor
ljmp
leave
pop
aam
sbb
push
test
xor
mov
inc
mov
push
sahf
mov
mov
adc
or
fists
inc
pop
lods
push
mov
cmp
ret
insb
xchg
pushf
xor
mov
lret
dec
inc
jl
push
leave
dec
lods
jge
xorl
inc
pop
jge
movsl
or
daa
leave
xor
adc
or
rorl
aaa
movsl
jae
jg
loope
sbb
aam
and
flds
popa
or
sbb
nop
adc
xchg
repz
mov
shll
arpl
add
mov
insl
sahf
xchg
mull
xchg
jo
in
es
in
outsb
das
push
pop
cmpsl
push
dec
cmp
lahf
xor
sub
or
push
sub
jl
cs
leave
sahf
mov
mov
push
adc
insl
sub
mov
iret
or
dec
cmp
lahf
addr16
mov
and
ret
in
lds
mov
fdivl
xor
pop
dec
push
and
jmp
jp
lea
pop
xchg
mov
test
push
sub
or
in
mov
mov
add
jmp
stos
adc
or
add
and
loope
mov
call
dec
jecxz
fimuls
or
lock
add
cmp
adc
jge
inc
jne
cmp
test
testb
sub
mov
mov
rolb
inc
aas
stc
xchg
sbb
lret
loopne
hlt
sbb
mov
gs
js
test
std
pop
fsubl
cmp
cld
mov
mov
adc
ss
int3
cltd
pop
out
jg
clc
cmpsb
js
sub
pop
pmuludq
sbb
fisttpll
repz
xchg
pop
in
es
adc
iret
and
mov
sub
pop
test
or
sahf
cwtl
push
js
jbe
pop
adc
movsl
ds
push
inc
mov
aam
cs
ja
xchg
and
or
cli
sbb
xchg
ds
shll
mov
std
sbb
jo
fwait
pop
pop
test
adc
jmp
pop
dec
out
push
add
into
mov
mov
out
lods
sbbb
push
and
lret
mov
jno
dec
das
dec
xlat
jp
aaa
lds
push
sub
call
lds
add
test
dec
out
and
pop
sarl
gs
andb
sub
loop
dec
fstl
xchg
cli
push
jnp
cs
daa
push
add
and
xor
mov
stc
adc
jbe
imul
pop
xchg
adc
xor
es
rcl
sub
out
adcl
add
mov
lock
pop
inc
adcb
jl
aam
rclb
addl
adc
fst
mov
adc
sub
fs
insl
ficoms
or
les
mov
pop
jle
xor
push
stos
inc
jp
iret
xchg
inc
hlt
cmpb
fistpl
dec
lods
xor
test
cmp
lods
push
pop
scas
push
fldcw
sub
ss
push
sub
push
orb
aam
push
inc
mov
pop
je
adc
lahf
fdivrs
gs
mov
mov
push
sti
cmp
mov
clc
insl
or
into
xor
shll
jecxz
scas
divl
adc
adc
mov
dec
jmp
push
repz
push
movsl
mov
popf
test
movsl
mov
sub
arpl
inc
in
mov
stos
sbb
and
cli
xchg
jle
fnsave
xor
addr16
in
std
mov
inc
repz
mov
stc
lods
fdivl
dec
int
dec
decb
mov
sub
or
mov
and
pop
iret
and
mov
adc
in
outsb
and
mov
xchg
mov
mov
fstl
sub
sub
add
fildll
int3
jg
stos
push
pop
inc
push
in
ret
mov
outsl
add
mov
test
push
mov
xchg
jns
imul
out
push
std
mov
dec
mov
jmp
das
sub
ficompl
sub
jmp
mov
lods
gs
xchg
mov
and
mov
jb
xor
and
bound
jne
iret
das
fs
or
ret
sub
cmp
push
mov
fsin
inc
pop
out
cmp
je
dec
cmp
push
insl
pop
mov
xlat
ret
mulb
push
mov
or
in
or
repz
in
lcall
jae
leavew
jmp
xlat
sahf
dec
jb
lock
mov
repz
push
mov
pop
jl,pn
xor
fnsave
add
iret
or
pop
jp
dec
adc
std
xor
push
imulb
sbb
mov
pop
scas
xchg
and
pop
ja
clc
ret
jne
fstps
cmp
in
aas
xor
or
roll
mov
lods
mov
testb
lret
test
addr16
dec
push
or
gs
add
stos
dec
in
mov
sub
je
pusha
lds
xor
aas
ficomps
mov
dec
cmp
lea
cmpsb
test
lahf
repnz
and
xchg
adc
int
push
mov
test
roll
dec
imull
xlat
inc
xor
sub
fsts
mov
adc
dec
xor
sbb
sub
mov
in
ffreep
test
int3
outsl
enter
and
dec
ficoml
outsb
stos
js
aad
dec
icebp
mov
dec
es
adc
pop
rorl
pop
jmp
xchg
decb
and
dec
mov
es
imul
push
push
repz
or
or
inc
lret
push
push
push
xor
sub
lret
call
xchg
push
lock
sarb
stos
movsb
cmp
xchg
xor
sbb
out
dec
xchg
test
xor
pavgw
sbb
jecxz
out
bound
pop
push
bound
scas
add
pop
inc
loopne
sbb
mov
stos
popa
ror
and
cli
jp
sub
sub
pop
xor
xlat
mov
pop
out
lcall
inc
mov
mov
call
pop
and
cmp
or
inc
outsb
inc
insl
dec
mov
ljmp
mov
pop
daa
mov
dec
pop
xlat
push
pop
push
adc
shlb
inc
fwait
mov
insb
orb
pop
cmp
iret
loop
test
jle
add
cli
cmpsb
and
fnsave
clc
mov
jnp
ljmp
sbb
pop
xchg
xorb
xlat
daa
pop
fs
mov
inc
xor
daa
and
mov
inc
inc
xlat
cli
mov
iret
sub
in
mov
sbb
mov
xor
mov
xor
or
mov
fists
inc
push
std
dec
cmc
ret
lret
stos
pop
sub
fs
andl
bound
pop
sbb
xchg
jp
or
enterw
jns
add
pop
mov
into
sahf
pop
aam
stos
pop
push
push
xchg
stos
test
jbe
jecxz
mov
pusha
loope
mov
aas
cmp
or
inc
iret
cmp
mov
mov
bound
pusha
out
repnz
into
xor
imul
push
fistl
adc
fs
cmp
lahf
rep
or
xchg
pushf
cmp
or
jo
fs
mov
xchg
dec
pop
pop
cmpb
jle
mov
addr16
icebp
mov
nop
cmpb
mov
jbe
aaa
sti
out
mov
mov
jle
test
dec
pop
gs
inc
xchg
je
insb
push
push
cld
popa
lods
cmp
nop
dec
lods
cld
cltd
push
jle
incb
or
mov
std
mov
cmp
dec
repnz
jmp
mov
mov
mov
pop
test
xor
int3
daa
sub
subl
out
xchg
cltd
pop
cltd
loopne
pushf
sbb
jl
sub
pop
lods
mov
int
push
push
loopne
mov
dec
push
lcall
rcrl
inc
jg
add
sbb
pusha
jne
les
fcomps
jne
es
scas
jmp
std
jecxz
cmc
or
out
jp
lea
out
mov
lods
lret
cmp
push
out
jae
pushf
loope
dec
icebp
push
jecxz
jnp
lea
sub
les
icebp
jbe
adc
mov
xchg
cmpsl
xchg
loop
mov
inc
dec
xchg
add
je
rol
xor
lahf
inc
and
addr16
cmpsl
add
mov
push
cmc
push
jne
mov
add
adc
cli
ja
hlt
sub
inc
outsb
pop
icebp
sbb
shl
fs
jno
and
stos
pop
in
pop
xchg
mov
mov
out
lahf
fildl
insb
adc
addb
addb
daa
fwait
jp
mov
lahf
mov
push
sbb
sub
fnstenv
jo
cmp
dec
sub
daa
xor
cmpsl
hlt
push
push
mov
ret
cmp
shlb
mov
cmpl
in
cmp
ficompl
sub
dec
and
pandn
jl
insl
and
cli
inc
jno
jmp
movsl
dec
mov
je
dec
nop
cmp
cld
insl
and
mov
sti
out
add
inc
pop
and
mov
jne
pop
xchg
loope
cmp
jmp
int
cmp
cld
out
sub
dec
mov
popf
rorl
jp
pop
mov
jae
inc
sahf
js
push
mov
mov
mov
mov
dec
mov
xchg
and
inc
out
jl
fsubs
pop
inc
fistpll
jmp
sti
sbb
jae
sbb
xchg
add
inc
popa
mov
xchg
fldt
ror
call
stc
add
push
lods
cmp
stos
aad
or
call
sbb
popa
mov
pushf
stos
cld
cmp
movsl
mov
cwtl
sbb
dec
add
pop
jmp
mov
leave
ja
and
repnz
aaa
mov
scas
movsb
xor
pop
mov
adc
outsb
sti
add
leave
cs
inc
into
or
mov
negb
inc
inc
repnz
xor
mov
sub
mov
adc
push
aas
ret
call
fists
cltd
mov
fwait
mov
sub
sub
cmp
lahf
jno
and
mov
repnz
and
sub
rcr
jmp
in
dec
jb
sbb
out
das
shll
cmp
das
test
test
insb
inc
fs
dec
sub
jo
fwait
inc
or
out
push
adc
arpl
adc
fiaddl
xchg
faddl
rcrl
jnp
loop
pop
pop
cmpsb
and
mov
pop
lcall
call
push
cmp
enter
rolb
psrld
dec
enter
lcall
ret
add
insl
push
mov
mov
jnp
subl
lret
test
movsl
negb
stos
xchg
xor
push
push
sbb
jl
fsubr
negl
int
push
jecxz
and
xlat
dec
aas
sti
cwtl
mov
pusha
imul
pushf
add
imul
jmp
call
arpl
mov
dec
cli
cwtl
push
jl
lahf
into
es
sub
add
or
cli
lods
test
jmp
mov
lret
pop
adc
stos
jb
dec
mov
scas
pop
idivl
adc
mov
std
push
testb
cmp
test
lods
icebp
xchg
outsb
lds
pop
jge
cmp
in
inc
insl
pop
clc
sub
fcompl
xchg
cmp
sub
dec
mov
cmpsb
mov
xchg
sti
loop
mov
popa
repz
jns
inc
sahf
xchg
stos
clc
xor
xchg
dec
jecxz
in
filds
ljmp
sbb
lds
lds
in
frstor
cwtl
adc
sahf
sarl
mov
mov
into
xchg
push
insb
pushf
mov
in
mov
add
xchg
mov
mov
data16
jno
cmp
ss
lahf
sti
pop
iret
inc
sub
lods
cmp
xchg
xlat
xor
mov
sbb
test
cli
arpl
inc
js
pop
test
xlat
test
mov
mov
stos
or
fsubl
mov
es
ficoml
adc
in
dec
add
fildl
sub
aam
and
dec
sbb
push
mov
outsl
push
stc
popa
subl
adc
enter
data16
adc
pop
inc
push
test
lds
jno
xchg
cmp
xchg
xchg
popa
out
int3
scas
repnz
pop
hlt
jle
loopne
fdivs
ss
or
in
int3
imul
test
jnp
inc
stos
addl
mov
inc
jg
or
pop
mov
pop
lea
add
popf
adc
push
jmp
cld
lock
lock
ljmp
lahf
lret
add
movsl
mov
mov
inc
push
int3
inc
into
imul
push
out
fidivl
aad
rcr
addr16
leave
cld
insb
repz
insb
add
clc
outsb
sub
add
mov
xchg
insl
sub
leave
nop
cmp
test
je
mov
insb
mov
mov
stos
dec
adc
mov
inc
fiadds
rclb
nop
xor
mov
xor
leave
push
cld
xlat
push
add
bound
es
cmpsl
aad
icebp
dec
loopne,pn
js
outsb
jno
xor
mov
xor
inc
add
adcl
lret
popf
shll
cmp
hlt
jnp
jl
movsb
mov
sub
jnp
add
mov
call
mov
mov
fsts
add
add
xor
stc
mov
outsb
cmpl
cmp
stos
mov
das
repz
xchg
and
mov
mov
mov
fisubrs
and
lea
stc
in
nop
push
dec
idivb
xchg
loop
lret
and
cmpsl
lea
jno
mov
push
lea
out
aad
push
sub
enter
aaa
int3
push
xchg
fistpll
test
lcall
adc
jno
jp
mov
jnp
mov
pushf
pop
cltd
push
repnz
sahf
xor
sarb
iret
daa
add
mov
iret
xorb
mov
out
add
lds
mov
insl
pushf
adc
jmp
ret
cmpsl
add
inc
orl
mov
ss
mov
sti
add
mov
adc
fmull
adcl
mov
mov
jl
mov
add
movb
add
inc
adc
ljmp
jb
call
jnp
out
cmpsl
push
scas
mov
dec
xor
idiv
push
xor
lea
loop
out
mov
rcrl
sbbl
mov
and
dec
adc
pop
add
lret
xor
sbb
xorb
xchg
mov
mov
pop
loope
mov
jp
outsb
mov
call
lock
int
icebp
add
pop
xor
dec
sbb
sahf
dec
pop
push
inc
pop
insb
into
xchg
or
mov
xor
inc
push
cmp
pushf
or
shlb
cmp
mov
in
jo
mov
mov
or
lods
adc
lods
cmp
scas
sbb
mov
out
cmc
orb
inc
and
dec
loope
jp
mov
lods
ljmp
int
mov
inc
lcall
pushf
mov
dec
sub
and
dec
les
loope
push
gs
dec
js
into
enter
dec
xchg
testb
testl
xchg
xor
std
and
cli
mov
jg
cmp
int3
mov
push
or
popa
decl
rcll
dec
push
outsl
sub
xchg
sub
jle
mov
adc
mov
or
xchg
out
es
or
jb
mov
pop
mov
push
mov
in
out
inc
in
test
imul
lds
inc
leave
adc
mov
cld
mov
adc
and
movb
cld
and
lret
adc
xor
test
sbb
gs
mov
outsb
xor
sbb
jecxz
and
scas
pop
or
mov
shrb
or
out
dec
inc
sub
xlat
jecxz
adc
or
dec
push
sarl
push
and
js
xor
repz
insb
cmc
cwtl
mov
shr
cmp
mov
inc
dec
pop
adc
cmp
mov
inc
sub
adc
retw
sbb
rcrb
clc
ja
pop
pop
jno
testl
xchg
add
cvtdq2ps
xlat
cmp
push
out
mov
outsl
jb
cmp
sbb
sarb
ss
cltd
repnz
sbb
cli
push
mov
je
sti
ss
push
jo
negb
mov
ds
out
outsw
sbb
pop
or
mov
cmp
sub
notb
decb
test
add
pop
push
in
or
mov
mov
leave
insl
mov
sub
repnz
xchg
dec
push
ret
add
push
mov
sbb
adc
mov
adc
loopne
push
loopne
push
fistpll
lock
in
sub
jb
push
push
cmpsl
mov
push
leave
dec
jg
dec
fistpl
mov
fwait
lods
das
mov
stc
mov
and
sbb
sub
clc
leave
or
out
fisubrl
and
rcl
fdiv
call
fbstp
loopne
pushf
ret
mov
arpl
mov
fistpl
mov
fists
outsb
mov
stc
dec
dec
dec
or
cmp
jle
sbb
and
or
mov
in
jo
adc
xchg
lods
lds
stos
incb
pop
xchg
sahf
mov
subb
jmp
test
or
call
test
or
xchg
outsl
mov
dec
adc
cmpb
or
xor
fmul
push
lea
les
cmp
sbb
mov
scas
repz
jb
or
push
xchg
xchg
scas
and
jo
out
jo
push
xchg
xlat
pop
stos
and
stc
xchg
jle
mov
pop
lock
repnz
mov
stos
cld
jb
and
loopne
fbld
and
test
imul
in
cli
add
mov
push
xchg
add
pushf
or
ljmp
into
mov
int3
das
inc
xchg
push
lods
pop
pusha
pop
arpl
sbb
outsl
xlat
stos
in
lods
dec
dec
jle
jbe
fisubl
cmpsb
testb
mov
mov
push
cmp
out
es
out
mov
inc
push
xchg
mov
jecxz
sbb
inc
testb
push
sbb
ljmp
mov
in
fists
stc
adc
fwait
add
hlt
stos
fsubs
xchg
jmp
pop
lret
jbe
cmc
mov
jecxz
in
out
jp
pop
cmpsl
out
rcl
mov
mov
icebp
or
jmp
cmpsl
or
pop
mov
lods
addr16
inc
dec
vunpckhps
mov
or
sbb
mov
lods
or
cld
lock
sbb
xchg
xchg
hlt
or
lods
mov
outsl
cmp
sub
lret
xchg
pusha
sbb
sbb
sbb
aaa
lods
mov
inc
mov
cli
mov
pusha
jb
cltd
inc
rol
ja
xchg
xor
outsb
inc
mov
es
or
mov
adc
adc
pop
sub
xor
les
test
scas
jp
push
pop
inc
pop
imul
sbb
outsl
and
xor
clc
test
xor
ja
loopne
push
shrl
lock
test
push
lret
cmpsb
cli
cmpsb
mov
in
js
sbb
sbb
hlt
insb
sub
sub
sarb
adc
mov
and
loop
out
icebp
lock
testb
pusha
push
jmp
push
or
push
ja
xchg
inc
in
cmp
and
inc
inc
outsb
push
inc
scas
jbe
sti
xor
sub
cmp
dec
sub
rclb
out
popa
pop
loop
xor
push
xchg
andl
jno
or
jae
fstl
pop
shl
shrl
imul
lcall
out
iret
sahf
inc
cmpsb
mov
cld
jno
out
xchg
push
sub
or
movsl
and
ficoml
mov
push
jnp
fwait
jne
push
sbb
mov
mov
inc
inc
pop
adc
jno
popa
push
cmp
push
aam
cmp
lock
mulb
es
shll
inc
test
repz
shll
mov
cmp
and
xor
mov
and
cs
add
cld
inc
xchg
fidivrl
jbe
sti
pop
aas
lret
pop
dec
pusha
pop
hlt
or
sub
popa
dec
mov
pop
rorb
pop
adc
inc
or
xor
push
dec
popa
test
xchg
mov
in
push
mov
imul
pop
add
in
lock
adc
push
jmp
xor
sbb
mov
cmp
mov
push
xchg
pop
pop
mov
ds
mov
adcb
jnp
add
sub
jo
cld
mov
mov
push
test
popf
aam
cmp
push
adc
fwait
adc
lcall
in
and
in
xchg
sub
add
test
push
sub
add
push
or
test
and
cmp
pop
je
xchg
cmpsb
mov
mov
sub
enter
aaa
mov
insb
push
and
sub
test
pop
lret
out
lret
pop
cld
rcrb
imull
push
xchg
inc
fisttpl
dec
or
ds
or
inc
in
popa
popa
mov
std
or
movsb
pusha
xor
adc
fwait
push
dec
sbb
sbb
or
jnp
addr16
sbb
add
pop
pop
mov
cmp
jne
sub
movsl
xchg
lods
call
std
and
inc
pop
mov
mov
mov
mov
add
ss
in
pop
dec
adc
lea
in
xor
cli
xor
mov
js
lods
ret
push
mov
sub
ret
mov
int3
mov
pop
arpl
jnp
mov
cmpsb
cmpsb
and
jns
gs
mov
jle
dec
and
addl
shlb
jmp
lds
jmp
stos
xchg
or
pop
mov
push
int
outsb
mov
adc
mov
ljmp
movsl
dec
in
sub
hlt
cld
shr
dec
pusha
push
rcrl
mov
add
inc
sbbl
add
movsl
imul
filds
mov
cmc
cmp
gs
out
cmp
cmp
addl
pop
mov
add
mov
jbe
push
sbb
mov
cltd
cmp
jo
dec
mov
inc
push
mov
data16
mov
add
push
mov
inc
ret
js
jo
ljmp
pop
adc
divb
cmpsl
cli
cwtl
repz
xchg
mov
mov
sahf
cld
push
sbb
jecxz
xchg
pop
cli
aad
inc
lock
push
popf
pop
mov
pop
adc
push
or
leave
shlb
sub
out
and
imul
ret
fucomi
lock
mov
ficomps
push
enter
lea
inc
repnz
pop
pop
sbb
pop
add
faddp
jne
push
sub
xor
lea
scas
xchg
push
mov
push
inc
lcall
add
add
test
cli
imul
add
dec
test
lods
test
xchg
push
data16
rorb
sub
push
adc
sahf
cmp
les
out
hlt
add
in
adc
mov
mov
outsb
aaa
insl
xchg
cmpsb
sahf
mov
mov
mov
mov
stc
daa
or
mov
cs
cmp
test
add
jp
xor
in
push
xchg
shll
pop
sbb
add
cmp
jle
shlb
fisubs
das
frstor
pop
and
popf
mov
mov
fnstcw
inc
shlb
cmpsb
les
iret
in
stos
xchg
adc
out
outsl
push
and
pop
pop
adc
gs
sbb
lods
movsb
inc
mov
or
push
nop
push
sub
add
and
into
fs
lcall
mov
bound
xchg
mov
add
rcll
xchg
fwait
dec
or
mov
lahf
in
in
push
sub
inc
icebp
inc
pop
sub
mov
mov
inc
and
cmp
cmpsb
bnd
lods
inc
dec
out
cwtl
sbb
fnstsw
mov
pop
insb
lcall
daa
dec
jb
ret
shl
and
jo
loop
mov
xor
scas
mov
out
cmp
out
aas
nop
das
loope
push
adc
data16
jbe
xor
or
push
pop
sub
add
adc
pop
mov
test
insb
and
dec
sub
pop
inc
cmp
dec
add
mov
es
sahf
scas
iret
mov
mov
gs
stc
cmc
or
sbb
cld
pushf
add
nop
ffree
arpl
ss
lahf
jnp
jo
cmp
xor
xchg
add
jnp
fisubs
push
pop
dec
push
mov
pop
cs
or
cmc
mov
mov
push
xchg
cmpl
xlat
imul
mov
sarl
jnp
adc
mov
and
pop
inc
lock
or
std
xchg
call
out
fadds
adc
sub
enter
add
test
and
dec
shr
imul
or
sarb
add
inc
push
xchg
leave
rcr
cmpsl
sbb
ljmp
mov
and
pop
sar
test
cltd
mov
out
gs
mulps
pop
dec
mov
adc
jnp
nop
inc
mov
sbb
push
jnp
loopne
xlat
aad
ret
bound
insb
pop
rcrl
aam
test
mov
mov
sti
add
sub
cmp
sbb
js
or
pop
jo
sub
mov
mov
inc
jae
fwait
mov
cwtl
aas
insl
in
add
pop
jl
or
insl
pop
popa
jno
gs
inc
adc
pop
sbb
push
push
mov
dec
jns
xor
gs
dec
push
mov
xchg
xor
arpl
pop
int3
test
mov
adc
loopne
or
sub
xchg
inc
push
repnz
adcb
out
pop
je
decl
mov
jmp
sbb
aam
in
mov
int
mov
mov
sub
cmc
ds
jge
xor
outsl
push
push
sbb
sub
add
xor
cmc
or
stc
dec
inc
xchg
ds
lock
xchg
mov
fsqrt
jno
daa
cmp
lods
pop
aaa
or
arpl
sbb
xchg
das
jecxz
les
repz
add
mov
jmp
pop
cmp
loop
movsl
data16
add
dec
sbb
pop
inc
aad
push
dec
lods
dec
push
and
icebp
push
push
push
enter
test
sbb
rcrb
rcr
lcall
stc
mov
or
jne
jle
enter
xchg
xor
sub
mov
push
mov
dec
mov
inc
jo
aas
addr16
movsb
push
shlb
mov
rcl
pop
lock
mov
ljmp
les
ljmp
xlat
cmp
inc
jne
in
adc
fldcw
sbb
fmull
jecxz
into
inc
cmp
push
aam
xchg
adc
mov
pop
mov
jae
mov
sbb
mov
cmpl
cmp
outsl
dec
inc
ja
and
stc
jl
mov
imul
outsl
jecxz
sbb
inc
js
fs
push
or
jp
pop
cmpsl
lods
mov
lcall
sbb
mov
sub
fnstsw
mov
jecxz
out
push
xchg
repz
xlat
je
je
push
aad
jnp
outsb
or
loope
cmpsb
dec
shrb
adc
sbb
mov
mov
rorb
or
out
inc
aaa
out
inc
pop
ret
incb
iret
push
mov
and
enter
pop
or
dec
into
push
out
jge
mov
and
std
push
nop
mov
xchg
push
add
or
leave
jne
jl
cmp
sar
sub
gs
dec
fmuls
call
jbe
sbb
jno
mov
dec
lcall
or
xchg
xor
stos
movsb
in
add
scas
inc
mov
fsubp
jno
jge
icebp
inc
sbbl
stc
imul
je
cli
pop
push
push
out
pushf
push
fwait
daa
lds
into
dec
mov
jl
ds
xchg
sbb
mov
in
testl
dec
lret
and
cmp
inc
enter
push
or
cmc
bnd
push
dec
imul
imul
mov
mov
and
jne
bound
ret
push
lock
push
sub
in
mov
inc
mov
cwtl
fistps
out
or
loope
pop
fwait
adc
call
inc
out
jmp
fs
push
jecxz
push
dec
popf
mov
and
inc
push
xchg
imul
push
xchg
lods
cmp
add
jle
xchg
jae
sub
lock
in
fadd
push
movsb
lcall
pop
mov
fcompl
mov
mov
out
add
xchg
in
lret
mov
adc
lea
imul
mov
and
ret
addb
pop
or
pop
lods
pop
pop
mov
lret
outsb
inc
subb
jno
lds
psubsw
out
push
and
outsb
add
mov
cwtl
and
testb
dec
fnstenv
aaa
mov
jnp
mov
cmpsb
stos
pushf
inc
int3
mov
test
mov
sar
outsl
jg
cmp
lods
push
outsl
push
fwait
xchg
adc
ret
jg
test
adc
inc
jbe
out
les
dec
pop
dec
cld
push
adc
pop
imul
scas
mov
pushf
mov
sbb
push
pop
pusha
sahf
jbe
cld
fldl
loop
mov
or
sbb
imulb
imul
jae
jmp
mov
into
mov
or
sub
clc
ljmp
and
dec
pushf
add
dec
fmull
dec
add
movsb
mov
xor
xchg
cmp
fsubrl
adc
sbb
mov
fcomps
sub
jge
fcomps
divl
xchg
aam
pop
mov
movsb
ret
push
mov
push
test
mov
into
mov
push
addr16
imul
sub
insl
icebp
popa
mov
loopne
scas
add
into
fsubrl
sbb
icebp
cmpsb
push
rcll
js
iret
push
fwait
out
dec
daa
xchg
mov
add
pop
sahf
sub
mov
stc
cs
shll
jb
and
addb
adcl
xchg
je
jle
add
and
movsl
dec
add
nop
mov
sahf
xor
sbb
xor
mov
or
push
and
add
test
rcrb
mov
mov
cmc
xchg
rorb
loope
test
mov
push
lods
push
sahf
xor
mov
movsl
cmpsl
stos
xchg
mov
outsl
iret
inc
dec
mov
subl
push
push
je
inc
mov
mov
add
cld
test
pop
xchg
in
dec
pusha
mov
push
sub
ss
ss
adc
mov
add
clc
inc
negb
scas
std
repnz
xchg
pop
cld
sbb
sub
out
cmc
in
ret
xchg
lret
mov
outsb
lret
jno
mov
add
repnz
adc
ds
jb
push
jae
dec
or
mov
xchg
ret
xchg
movb
outsl
dec
fwait
mov
pop
in
add
in
lds
roll
inc
test
or
in
inc
lods
movsb
inc
fs
push
lea
imul
das
in
in
out
jecxz
and
adc
nop
and
jno
cmp
ret
fsubp
aas
mov
or
testl
mov
xor
add
push
imul
ljmp
bound
faddl
lret
cld
dec
xlat
test
jnp
iret
popa
pushf
in
shll
gs
fstpt
cs
adc
ss
and
fidivl
movsl
lds
dec
ljmp
pop
pop
push
movsl
adc
gs
inc
mov
subl
loop
iret
nop
hlt
nop
pusha
mov
add
scas
cmpl
sub
ds
sbb
adc
call
xor
loope
xchg
nop
cmpsb
or
lock
and
loop
add
insl
je
or
jge,pn
pop
movsb
pusha
mov
sbb
mov
lret
xor
mov
outsl
xchg
fsubrs
xor
daa
in
and
arpl
hlt
imul
cmc
fbld
push
push
in
xchg
dec
jno
loope
pushf
or
jb
mov
add
mov
mov
add
push
pusha
nop
mov
sub
sub
fiaddl
aas
ja
jl
int
data16
aad
push
es
fwait
insl
dec
cmp
scas
or
rcrl
fbstp
or
add
mov
sbb
out
loopne
jne
jbe
add
je
icebp
scas
imul
mov
loopne
pusha
adc
lret
aaa
pop
cltd
or
scas
push
sbb
pop
cld
or
lahf
enter
or
mov
dec
mov
add
mov
mov
ds
out
enter
mov
cmp
inc
xchg
lods
fcomps
add
lods
das
or
sbb
cmp
mov
xor
pushf
cltd
bound
mov
lahf
sbb
imul
decb
loopne
add
mov
ja
addr16
neg
adc
hlt
add
aam
fisubl
and
add
push
mov
out
loop
dec
inc
jns
repz
cltd
fs
xor
aam
dec
cmp
ret
fbld
iret
inc
cmp
push
jl
cmp
lret
jmp
in
je
add
out
or
mov
and
mov
dec
xor
in
mov
xor
popa
out
std
inc
push
sub
xchg
loopne
mov
movsb
fnstcw
add
es
inc
ljmp
lret
and
mov
pop
loopne
repz
int
mov
test
scas
lds
or
mov
push
mov
ja
orl
out
xchg
or
pusha
std
loop
or
or
mov
or
in
jb
xchg
es
jg,pt
stc
arpl
lret
pop
das
mov
mov
jmp
stc
stos
repnz
icebp
das
xlat
arpl
daa
mov
nop
call
ret
out
shrl
cltd
fiadds
xor
xchg
sti
push
popf
sub
test
icebp
das
stos
pop
mov
add
xor
xlat
lods
movsl
in
pusha
adc
loopne
xchg
mov
jne
mov
lock
dec
sbb
or
jo
xor
cld
mov
popf
jnp
popa
sahf
ss
inc
mov
or
jb
dec
insb
dec
stc
dec
push
lret
push
mov
xchg
push
jbe
push
repnz
or
arpl
jp
xor
jnp
sti
push
ret
movl
outsb
jns
movsb
xor
gs
test
push
mov
xchg
loope
sbb
dec
cmpsb
jge
lret
mov
scas
idivb
cltd
and
mov
inc
push
xchg
dec
loop
and
sarb
dec
cli
inc
gs
ss
xlat
jmp
dec
test
arpl
sbb
adc
inc
inc
aas
xor
ljmp
shrl
dec
out
adc
lea
cmpsb
mov
push
jns
les
sub
lods
add
or
fwait
negl
daa
mov
adc
push
jp
push
test
das
adc
fwait
dec
cmpsl
pop
fs
jecxz
mov
cmp
lods
inc
repz
adc
loope
arpl
ret
aam
int3
pusha
push
xchg
mov
mov
repz
or
sub
bound
shlb
ret
cmovnp
and
lock
test
fwait
add
jmp
hlt
push
ret
jo
and
xchg
pop
pushf
repnz
orb
repnz
dec
adc
aam
in
cmpsb
mov
das
addr16
jnp
lret
and
inc
movsl
add
or
sahf
adc
xchg
ret
fmull
cmp
in
imulb
push
ret
mov
lcall
adc
mov
lahf
inc
into
pop
lahf
mov
mov
packuswb
push
fldl
or
or
fnsave
jp
cli
imul
stc
dec
inc
lahf
lods
aad
test
fisubrl
scas
pop
or
or
clc
sbb
and
mov
jae
fisttps
lea
add
mov
aaa
cmp
lds
decl
sub
push
xor
lret
shlb
mov
imul
xor
les
cli
lds
xchg
add
add
ret
daa
sbb
loope
es
jl
mov
mov
cmp
pop
xlat
stos
xlat
push
jecxz,pt
out
movntq
out
add
dec
aas
orl
pop
test
inc
jbe
or
outsl
sub
inc
pop
ljmp
cli
movsl
pop
cmp
stos
mov
ret
fistpll
lret
adc
push
mov
xor
inc
push
dec
shll
adc
xchg
sbb
sti
or
and
jmp
push
lods
rcrb
xorl
sbb
int3
fcom
sbb
xor
xor
sbb
adc
mov
push
sti
lock
adc
mov
dec
and
ss
jae
insl
dec
aas
int
nop
push
jl
push
pop
push
sbb
rclb
sbb
push
jnp
adc
adc
inc
adc
decb
xor
or
pop
repz
or
fstl
int
jbe
xor
mov
sub
add
jno
outsb
jmp
and
sbb
or
int
inc
jge
sarl
loopne
add
in
imul
test
sbb
rclb
addr16
loopne
gs
inc
fnstcw
ds
std
out
cmp
or
lock
inc
sub
loop
pop
and
mov
mov
test
daa
mov
and
mov
mov
test
push
add
adc
lret
rcrl
pop
adc
pminsw
add
hlt
sub
int3
in
push
sbb
orl
ljmp
cs
mov
mov
or
cmp
rorl
lahf
je
ret
pop
fisttpll
mov
ljmp
mov
loopne
add
inc
mov
jae
and
or
mov
xlat
cmpsb
in
jmp
sbb
push
cmpsl
or
pop
jmp
mov
rol
pop
mov
push
sub
and
int
cmpsl
jno
lret
push
pop
ret
push
sub
push
and
jb
push
bound
add
loopne
dec
jo
xchg
rcl
cli
or
and
mov
pop
and
mov
gs
dec
js
mov
enter
into
sbb
sbb
ds
cmpsb
das
add
lret
jnp
cmp
xor
gs
test
mov
jecxz
sarb
data16
aad
shlb
mov
sahf
sub
sar
js
fmuls
fstps
mov
dec
lods
jnp
jnp
add
sahf
out
sbbl
stos
loopew
mov
xchg
leave
cld
pop
pop
mull
stos
les
lahf
pop
xor
fdivl
mov
cltd
add
jne
push
dec
mov
add
outsl
xchg
mov
mov
or
stos
aas
mov
jecxz
and
rcr
inc
fsub
xor
addr16
mov
and
inc
ret
imul
xchg
rcl
in
notl
rorb
lahf
cmp
cmp
mov
cmp
sbb
jmp
jg
cmp
loopne
seto
xchg
lret
sti
push
and
lea
loopne
ljmp
je
pop
popa
ficomps
insb
xchg
mov
leave
push
pop
jg
adc
push
js
frstor
add
shlb
rolb
push
popf
push
arpl
scas
popf
call
movsb
xorb
pop
and
jmp
gs
lret
dec
fmull
push
sbb
and
jecxz
ds
cli
adc
out
xor
lds
in
pushf
lods
sub
sbb
out
sub
ljmp
stos
lock
jl
pop
mov
adc
clc
mov
mov
fs
mov
dec
inc
data16
xor
fsubrs
xor
ret
out
dec
pushf
sbb
xchg
or
aas
add
mov
ffreep
fs
dec
lds
popf
iret
xor
xor
pop
dec
divb
inc
fisubrl
out
add
js
push
inc
pop
leave
nop
add
ja
cli
pop
repz
lods
mov
inc
in
sub
xor
jns
cmpsb
mov
mov
in
sub
int3
stc
push
flds
fisubrs
test
sbb
pushf
mov
mov
adc
stc
scas
mov
test
cmp
dec
pushf
xchg
xchg
rcrl
sub
sub
subb
or
cmp
cwtl
mov
sbb
xchg
leave
and
mov
sub
mov
xlat
imul
fsts
cmp
xchg
std
aam
pop
je
pushf
jne
jno
dec
jmp
inc
xlat
mov
mov
xor
pop
jecxz
fldcw
lret
cmc
je
repz
int3
push
add
dec
sub
push
mov
das
fldenv
push
mov
insl
outsl
mov
jne
sbb
push
out
loope
iret
mov
inc
mov
jle
pop
jecxz
jg
jno
jne
and
cmp
ret
aam
enter
stos
push
and
fstps
or
jle
addr16
enter
push
std
push
test
sbb
cmpsl
pop
cmpsl
std
mov
stos
nop
adc
loopne
shrb
shr
je
popl
adc
mov
jns
mov
pop
mov
loop
scas
int
add
lods
inc
leave
cmpsl
repz
xchg
dec
test
imul
push
inc
jp
push
into
dec
push
fsubrs
adc
or
inc
cld
push
mov
inc
aam
iret
fdivp
adc
loopne
or
inc
fsubs
ret
pop
ficompl
xchg
stc
js
mov
fdivl
xor
repnz
pusha
leave
and
sub
add
cmp
hlt
clc
mov
jmp
adc
mov
paddd
sbb
dec
test
inc
mov
mov
in
cmp
push
adc
mov
jae
push
mov
sbb
das
mov
std
adc
pop
xor
insl
jmp
xchg
repz
jbe
push
scas
xchg
scas
mov
or
push
pop
pushf
xchg
adc
cs
test
aad
sti
repnz
add
lahf
xchg
sub
dec
movsb
pop
out
sbb
fistl
push
clc
dec
add
or
ja
add
dec
fsubrl
ljmp
lcall
pop
mov
xor
bound
outsb
or
stos
jnp
jno
jmp
cmp
pusha
pop
xchg
scas
pop
jg
sarl
inc
xchg
adc
or
clc
enter
cmp
jl
sub
mov
xchg
adc
std
cmp
ret
xchg
mov
stos
pop
ja
into
mov
cltd
xchg
mov
ret
aam
daa
push
sbb
mov
subb
aas
cli
inc
daa
sbb
adc
sub
xor
dec
sbb
mov
dec
cmp
rcrl
rorb
mov
addps
cmpsb
dec
pop
xor
cwtl
pushf
dec
call
out
fdivrl
sbb
ljmp
sub
push
jp
les
mov
sub
cmp
dec
jmp
int3
ja
arpl
dec
movsl
or
sub
aam
xor
stc
xchg
je
fstpl
sar
aad
test
mov
in
dec
je
mov
pop
ret
mov
inc
xchg
pop
jmp
cltd
jne
ficomps
in
pop
pop
jg
pop
aas
mov
mull
xor
or
cmp
jecxz
cwtl
aad
cltd
mov
in
push
mov
enter
fstps
int3
mov
cwtl
aas
adc
jp
lret
jns
xor
mov
jg
iret
jbe
mov
xor
test
mov
inc
mov
stc
sub
std
loop
sub
js
scas
mov
jp
popf
insl
xor
leave
dec
xchg
jmp
push
cmp
repnz
pop
xchg
loopne
sub
cli
xchg
cmp
repz
rolb
or
dec
xchg
push
sahf
testl
in
lcall
adc
jl
loope
outsl
mov
mov
xor
das
xchg
mov
ds
outsl
xor
adc
mov
lods
out
add
adc
pushf
imul
xlat
mov
hlt
xor
jo
push
pop
pop
and
push
cmp
inc
sub
ds
loope
fdivs
pop
sbb
cmpsl
or
dec
jmp
inc
mov
cmp
inc
mov
lahf
ror
sbb
leave
iret
push
add
inc
xor
mov
pop
icebp
xchg
and
xchg
lret
ljmp
out
lods
sbb
adc
adc
cmp
in
lods
push
push
push
mov
insb
push
mov
test
andl
lahf
cld
mov
sbb
cltd
aas
stc
fcomps
mov
xor
cmp
xor
ficoml
push
jno
mov
js
or
test
cld
pop
sub
jbe
and
js
xchg
dec
cmc
in
outsb
in
pop
lods
cmp
addr16
aam
push
mov
mov
dec
cmpl
xchg
pop
lea
add
sub
cli
cmp
mov
int3
mov
ds
pop
ficomps
xchg
mov
mov
loop
std
adc
dec
mov
jl
inc
jp
xchg
jge
nop
ds
push
adc
cmp
fcomps
sub
loope
add
and
mov
js
es
lret
or
andb
adc
and
mov
mov
mov
fwait
push
cwtl
adc
pop
xchg
incb
xor
stos
in
arpl
pop
fdivrp
and
hlt
mov
or
rorl
cmpsl
sarb
faddp
lcall
fiaddl
xor
mov
xchg
xchg
sbb
adc
stc
sub
sbb
pop
in
mov
out
jae
imul
aad
dec
inc
cld
xchg
out
sub
pop
mov
lahf
mov
fstps
pop
sub
jo
out
dec
xchg
and
hlt
jl
mov
mov
adc
dec
jb
ss
push
popf
je
cwtl
jae
mov
pop
adc
cwtl
mov
sbb
xorb
inc
lahf
cmpsl
sbb
jl
scas
dec
mov
rcl
add
lcall
lock
enter
fimull
inc
ss
mov
fs
and
or
lret
lods
cli
je
stos
pop
pushf
outsl
pop
es
ret
addr16
in
cmpsb
int
movsb
pop
clc
je
dec
inc
mov
cmp
mov
test
xchg
fmulp
adc
sub
push
stos
loop
fildll
mov
rcr
cli
xlat
and
mov
jno
int3
inc
call
daa
and
negl
sub
jo
cmp
sub
adc
lods
add
test
xorb
scas
imul
subb
fildll
bound
and
inc
scas
testb
ja
jnp
or
mov
pop
push
xchg
xor
jg
cmp
nop
pop
lock
sbb
adcb
or
jno
orl
stc
jge
and
shrb
pop
repz
xchg
sbb
out
std
ss
lods
popf
xchg
ret
or
xor
mov
xchg
call
xchg
ljmp
popa
mov
test
movsb
xchg
lods
pop
pop
push
inc
dec
or
and
add
andb
sbb
rolb
pop
push
push
into
xlat
repz
pop
jg
pop
sbb
stos
jge
test
out
out
roll
cmp
sub
push
add
sub
mov
cmp
aad
dec
dec
mov
jg
enter
in
sbb
jg
dec
xchg
mov
adc
and
stos
lds
and
adc
call
mov
xchg
cli
cmc
cmpsb
fnstenv
fists
jmp
mov
std
mov
shr
ret
jmp
add
push
mov
push
cmp
adc
push
fstpl
movsl
pop
xchg
xor
cwtl
sbb
mov
data16
or
xorl
fcmovu
jae
cmp
and
out
lahf
fmulp
jo
popa
add
adc
mov
push
iret
fnstenv
imul
es
xor
idivb
addr16
cs
sbb
sbb
add
aad
pop
js
cmp
ds
rorl
dec
mov
xchg
in
push
mov
xchg
jb
sti
enter
mov
or
inc
jecxz
mov
mov
jno
sbb
hlt
push
das
adc
out
orb
xor
jmp
leave
adc
mov
pop
adc
fwait
pop
loope
sub
fstps
sbb
adc
out
adc
insb
jge
mov
inc
push
and
xchg
shlb
dec
cmpsl
hlt
push
and
sub
push
arpl
pop
lods
push
xchg
roll
push
imul
iret
lahf
cli
xor
xor
add
in
push
stos
stos
ljmp
sub
je
lahf
push
adc
sbb
in
xchg
lock
adc
mov
fistl
and
cmpsl
fstps
and
mov
xchg
hlt
ljmp
sti
adc
bound
push
popa
cmp
aam
xor
test
push
outsl
mov
imul
sub
xorb
jp
mov
enter
sub
push
rcrl
lahf
and
lea
adc
or
cwtl
mov
jg
aas
inc
cmpsb
mov
and
jle
sub
cmp
mov
mov
add
in
pop
add
out
test
push
loopne
aad
popa
icebp
adc
jnp
pop
insb
cs
ss
cli
lret
add
int3
insl
rorl
sbb
xchg
lret
out
addl
cmpsb
jp
sub
mov
cli
adc
int
insb
call
mov
inc
sub
cmp
mov
ret
rorl
and
cs
in
push
dec
mov
pop
out
lock
int3
xor
lock
and
jmp
mov
cmpb
jae
pop
fistl
or
cmpsb
fsubp
cmp
push
lcall
fs
lret
addr16
rclb
out
fldt
jg
shlb
xchg
in
cltd
out
sbb
adc
mov
inc
mov
inc
push
in
orl
pop
add
pop
xor
mov
jmp
mov
cltd
xor
or
sbb
leave
xor
lods
add
add
sbb
lods
adc
inc
mov
and
repnz
ret
push
movsb
add
call
xor
jl
imul
insb
pop
jecxz
orb
loopne
cmp
lret
sbb
sbb
or
lret
push
xlat
ret
icebp
jl
jmp
int
lods
dec
or
mov
and
leave
cmp
adcb
js
xor
and
pop
dec
gs
cld
aam
inc
psubb
ss
sbbl
lods
mov
fwait
dec
stos
cli
jno
cmp
push
sub
shlb
mov
jbe
and
sti
test
adc
inc
xor
aad
test
jno
push
push
jmp
mov
imul
xor
lahf
bound
inc
pop
inc
xchg
adc
and
cmpsb
xchg
scas
mov
pop
jns
dec
lcall
dec
aaa
movsb
pop
xor
jo
adc
aaa
xchg
test
mov
and
jno
cli
or
fs
pop
push
mov
xchg
mov
movsb
and
fs
sbb
sub
sbb
mov
jbe
loopne
inc
sub
imul
je
pavgw
mov
scas
mov
add
gs
fildl
and
and
jg
je
mov
pop
xchg
push
loopne
add
mov
and
into
push
push
mov
loopne
mov
stc
test
out
out
fs
sub
adc
push
jle
lahf
popa
outsb
data16
mov
popf
mov
dec
popf
push
mov
push
lcall
lret
enter
das
cmc
mov
lcall
jb
out
xchg
lods
push
adc
sub
and
cmp
jecxz
jne
push
inc
jnp
sub
push
mov
pushf
mov
dec
das
push
xchg
aam
adc
xchg
inc
push
into
and
call
pop
shll
push
pop
push
test
mov
fstpl
xchg
mov
jl
mov
addb
clc
call
push
rclb
mov
insb
scas
shlb
inc
std
insb
ds
or
test
pop
dec
mov
or
jge
sub
xor
scas
cmp
repnz
pop
int
xor
lret
xor
pushf
clc
movsb
jns
sub
mov
bound
cli
bound
jp
ja
mov
aaa
mov
ror
sbb
in
hlt
sbb
decl
arpl
lret
jno
fadd
ja
out
jne
loope
jno
push
push
cmp
insl
push
mov
jmp
sub
addl
pop
xor
sbb
stos
add
cld
int3
repz
jl
xchg
jbe
push
pop
mov
scas
mov
out
mov
push
xchg
inc
out
fsubrs
jecxz
dec
jecxz
out
cltd
popf
mov
dec
pop
jge
sub
mov
dec
clc
testb
pop
dec
xchg
stos
imul
in
adcb
test
dec
mov
lret
xor
popl
push
in
pop
mov
cld
repz
insl
xor
pop
stos
cmp
jae
lods
jo
lret
pop
dec
dec
cltd
or
sbb
pop
in
inc
cmpsl
gs
sub
aam
sub
aad
sti
enter
insl
adc
adc
pop
mov
fstpl
in
cmpsl
push
lret
fimuls
in
pop
mov
push
inc
lds
xchg
scas
fists
push
xchg
xchg
adcl
push
mov
nop
push
in
mov
shrl
ret
fadd
test
lret
mov
add
xor
pop
sub
fwait
xorl
movb
jbe
or
xchg
test
and
leave
cmpsb
stos
push
sub
test
sarb
hlt
mov
gs
test
clc
mov
or
push
ljmp
sub
bound
outsl
push
pushf
jg
es
mov
add
jo
mov
cmc
outsb
push
std
shll
subb
into
out
mov
mov
mov
and
shll
xor
pop
es
adc
push
pop
les
lds
jnp
subl
add
mov
dec
imul
add
stos
adc
imul
pop
sbb
mov
or
xor
loope
cmp
pop
mov
xlat
mov
mov
fistl
lods
xor
dec
cmpsb
bound
in
int3
and
sbb
stc
stc
cmp
pop
cmpsb
out
je
pusha
pop
push
sbb
imul
xchg
in
add
aad
ljmp
cld
cwtl
pop
fmuls
andb
ror
stos
inc
clc
xchg
pop
pop
dec
ss
jecxz
dec
mov
adc
popf
xor
adc
dec
or
mov
jg
test
stc
cmp
les
ss
dec
push
scas
xlat
sub
jae
push
and
mov
sub
test
mov
push
frstor
cli
mov
xor
adc
mov
mov
lret
pop
cmp
repz
popa
aam
sarl
cwtl
cli
add
aam
xchg
ret
jne
mov
pushw
fs
jg
jno
mov
mov
mov
daa
repnz
adc
mov
aam
mov
scas
icebp
jg
in
jno
lods
mov
fmul
in
xchg
sbb
rcrb
push
inc
dec
sti
add
or
sbb
xor
cmp
daa
out
push
inc
push
pop
sub
iret
jo
mov
sub
push
out
roll
or
je
int3
jne
sub
mov
dec
mov
in
xchg
insb
cmc
mov
adc
adc
sub
sub
adc
push
jo
adc
ret
add
daa
imul
outsb
fdivs
bswap
xchg
inc
mov
pop
push
xor
popf
cmp
popa
mov
dec
xor
imul
xchg
push
mov
int3
loopne
ss
inc
enter
test
mov
or
push
adc
push
and
into
pop
shll
and
jle
push
push
lods
cmp
and
xor
adc
and
ja
adc
imul
jbe
jl
sub
xor
cmp
ljmp
dec
push
push
cmp
cmpl
leave
jne
and
push
shll
xchg
mull
sbb
push
aad
data16
or
sbb
jp
inc
adc
jp
test
adc
sti
sbb
rorb
mov
cwtl
popa
push
enter
mov
shlb
sbb
cmpsb
sbb
push
ljmp
loopne
clc
pop
mov
inc
pop
or
jmp
movsb
inc
xchg
aam
loop
cmp
sbb
or
sahf
pop
cmpsl
ss
lods
add
stos
mov
xchg
pushf
mov
in
icebp
or
outsb
mov
in
scas
nop
push
movsb
cmp
add
insl
stc
insl
sbb
test
aam
pop
sbb
test
addb
loop
aas
inc
daa
or
inc
add
ljmp
movsb
jl
pop
mov
mov
je
adc
cmp
push
and
popf
aam
cmp
mov
cmpsl
mov
cmc
leave
or
out
jmp
fmuls
cld
icebp
test
ja
add
out
dec
sbb
icebp
jp
inc
cwtl
cmpsb
mov
dec
fs
daa
popa
jge
adc
push
lock
subl
jns
mov
pushf
repz
test
insb
fsubrs
aam
lahf
xchg
pop
sub
xchg
inc
pop
jecxz
jbe
test
inc
xor
jnp
cmp
roll
cmpsl
inc
or
sub
fcomps
jmp
sbb
addr16
mov
push
add
popf
jl
or
adc
add
fs
fldenv
sbb
sar
clc
cs
movb
inc
cmovns
jge
nop
dec
cltd
call
call
mov
pop
dec
jle
mov
cmp
aaa
xchg
jle
jo
jl
xor
xchg
pop
or
stc
frstor
cs
mov
push
filds
stos
dec
push
into
mov
jno
sbb
and
mov
xor
cmp
stos
add
jecxz
stos
sbb
dec
test
fisubrs
push
mov
sbb
sub
int3
fdivrs
jmp
subb
or
pop
lret
test
cmp
jb
loopne
sub
mov
insl
ja
xchg
bound
sbb
mov
enter
subb
out
mov
jae
insl
pusha
push
push
stc
loopne
fs
and
dec
sub
js
fsts
arpl
lock
sbb
xchg
or
mov
lds
xor
push
pop
sti
inc
mov
or
and
fldt
add
sbb
in
fwait
aam
outsb
pop
cli
mov
call
dec
inc
gs
push
adc
cmp
test
xchg
xor
es
add
push
lea
pop
fdivrl
stc
mov
jbe
into
addb
cwtl
jl
xchg
and
sub
dec
cmpsb
scas
clc
iret
stos
into
loop
dec
mov
push
jmp
jge
frstor
push
test
add
jns
ja
lcall
filds
lahf
push
mov
sbb
in
cmp
aas
lret
add
bound
ds
push
jne
mov
push
xchg
hlt
jno
nop
inc
xchg
mov
fistps
faddl
pop
lcall
in
lods
mov
or
cmpsb
cli
cmc
jae
jmp
jae
bound
sbb
mov
movsl
ja
xchg
mov
adcl
sbb
mov
cmpsb
push
cltd
xor
movsl
and
xchg
jnp
stc
in
mov
cmp
inc
xor
xlat
sub
jmp
or
mov
cld
xor
mov
mov
mov
cmp
iret
jp
sbb
clc
jae
fcomp
int
imul
adcb
jnp
xor
ds
test
mov
mov
daa
push
mov
imul
and
jae
and
sub
rclb
or
jle
insl
or
test
lods
ss
cld
mov
dec
cli
push
iret
shrb
loop
jmp
push
rcll
aad
mov
dec
jge
inc
jb
push
test
sti
loope
call
adc
xchg
add
jle
test
ljmp
add
testb
cltd
or
sahf
out
and
mov
daa
push
je
insl
inc
in
dec
push
xorb
fldt
stc
xchg
int3
cld
xchg
sbb
mov
xor
std
jmp
fisubl
push
mov
xchg
dec
fldcw
sub
xchg
cltd
je
jg
xor
leave
add
dec
push
dec
jl
jae,pn
xlat
xlat
movb
ret
inc
rcl
adc
inc
dec
iret
sbb
aaa
adc
push
scas
mov
sub
pop
cmpsb
orl
mov
shrl
leave
lea
imul
dec
enterw
sbb
mov
cmp
out
lock
pop
jbe
or
jg
rep
push
jbe
jl
pop
push
subb
mov
dec
cltd
imul
push
xor
push
test
cmpsb
in
push
push
cmp
lds
imul
sub
icebp
lahf
cltd
into
push
das
fs
and
sub
in
mov
inc
sbb
ljmp
inc
jae
aas
inc
ret
movb
outsl
dec
in
sub
mov
push
sub
je
mov
mov
jmp
lcall
add
fistpll
mov
ss
out
repz
jb
mov
pop
aaa
sbbb
jo
inc
popf
insb
fisttps
inc
inc
das
jbe
sbb
sar
sbb
sbb
xchg
sub
lcall
dec
xchg
sub
in
pop
mov
mov
dec
pop
jmp
mov
inc
icebp
ja
pusha
jb
mov
and
das
and
mov
fwait
out
mov
ljmp
jb
std
jb
jbe
mov
inc
sbb
addr16
dec
iret
sahf
loopne
or
movl
and
int3
add
pop
or
popa
sbb
aas
push
js
aad
pop
jo
movsl
je
fildll
testl
pop
push
imul
dec
mov
push
cli
mov
xchg
adc
movsl
mov
mov
mov
jmp
cmp
int
in
mov
dec
inc
xchg
sbb
inc
cmp
js
nop
mov
lea
add
xchg
xor
mov
leave
push
dec
ds
mov
mov
push
ret
ljmp
mov
imul
push
mov
cmc
and
xorl
mov
out
fcom
inc
pop
movsl
xchg
ss
fs
fwait
jmp
inc
fimull
jmp
mov
adc
xchg
mov
out
cmc
jle
sahf
jge
add
jo
hlt
stc
push
mov
push
sti
shlb
aad
mov
mov
mov
dec
add
pop
bound
push
inc
rol
mov
js
pop
in
sbb
cltd
mov
std
adc
icebp
lcall
jne
addr16
mov
add
inc
and
inc
push
jp
popa
out
sub
dec
movsb
call
popa
sbb
data16
xchg
out
dec
pop
mov
and
lret
adc
fsubrl
es
pushf
lods
mov
arpl
cmp
or
add
mov
jnp
dec
push
jge
adc
push
mov
lods
jge
jmp
fwait
cmc
cmp
cmc
xchg
sarl
pop
mov
cmp
or
sarb
or
xchg
jne
sub
fcmovb
and
inc
and
pop
leave
xchg
add
pop
es
shr
loope
jmp
add
mov
dec
mov
jl
fs
scas
mov
aam
or
sub
stos
jo
dec
loop
test
inc
and
inc
xor
shlb
jg
adc
addl
adc
pop
dec
lahf
shll
sub
xchg
das
cmc
add
inc
xchg
repnz
or
mov
pop
mov
push
roll
int
pop
sysret
sub
loopne
mov
mov
sub
sub
ret
sub
dec
push
cld
mov
lods
fs
setae
ficoml
xor
xlat
and
add
xchg
pop
popf
jmp
dec
adc
inc
cmp
adc
sbb
jno
arpl
and
bound
mov
mov
out
sbb
sti
sbb
negl
add
mov
jae
andl
pop
cmp
mov
xor
fdivl
gs
ret
js
sahf
test
pop
push
sbb
inc
push
mov
inc
ljmp
xor
lret
mov
outsb
and
popa
mov
adc
pop
mov
lock
fstpt
push
lret
js
and
push
mov
cwtl
filds
je
xor
mov
push
sahf
clc
inc
outsl
in
add
fcmove
inc
sub
sti
inc
sub
push
scas
xchg
push
scas
out
ss
xchg
cmpsb
adc
cmovb
rcll
xchg
sub
aaa
sub
ret
mov
cli
xor
fcoms
stos
mov
push
cmp
mov
cmpl
repz
dec
and
inc
fsts
mov
out
jnp,pn
add
add
pop
cmp
out
lcall
pop
mov
push
roll
mov
and
repnz
jp
inc
lret
dec
ds
pop
dec
mov
ja
cmp
aad
rcl
and
xchg
pop
aad
pop
mov
sbbb
mov
mov
dec
insb
sub
and
stc
lods
add
in
dec
mov
xchg
or
adc
jp
mov
dec
ss
mov
icebp
sahf
xor
inc
pop
out
adc
sbb
mov
mov
stos
mov
jb
xchg
adc
mov
out
mov
push
and
fdiv
clc
jae
mov
mov
into
scas
out
loopne
in
pop
loop
jge
push
sub
ret
mov
jl
dec
rcr
daa
push
mov
push
rcr
test
jle
inc
test
sbb
fistpl
shlb
mov
nop
data16
pop
xchg
pop
sbb
aad
pop
mov
inc
push
adc
xor
dec
xchg
shr
inc
sbb
cmp
cmp
add
imul
popa
daa
lret
sbb
aam
push
lahf
xchg
fisttps
test
les
ljmp
pop
add
fnstsw
adc
stos
loop
xor
pop
pusha
cmp
rorb
pop
dec
jge
out
sbb
adc
add
pop
stos
pop
sti
movsb
bound
push
lds
inc
pop
mov
fcmove
fwait
pop
mov
xchg
fpatan
mov
in
inc
xor
cmp
pop
bound
sarl
loopne
test
sti
mov
int3
push
xchg
sbb
cmpsb
mov
jmp
jns
or
lock
lock
add
sbb
mov
fstl
dec
icebp
mov
xchg
xchg
dec
outsl
sbb
fidivs
dec
notl
insb
cmc
cld
jae
adc
xchg
lock
das
lret
insb
pop
ss
xor
dec
or
hlt
push
cmpsb
es
mov
and
pop
add
pop
xchg
rcrb
pusha
test
outsb
rorb
and
into
mov
and
and
mov
enter
dec
push
cmp
push
ret
add
xchg
cltd
js
iret
lock
push
dec
mov
or
cmp
lret
mov
mov
xor
cmc
mov
fisubl
in
push
mov
cs
jp
mov
fidivl
stc
clc
mov
pop
mov
ret
inc
add
int
and
mov
inc
lods
insl
fucom
jmp
in
push
loope
lds
pop
ja
add
shlb
jl
cltd
mov
fwait
mov
std
test
sbb
xchg
test
jnp
push
rorb
add
daa
add
pusha
push
cmp
push
test
aam
mov
in
cld
rcrb
mov
mov
dec
fcom
ss
cmp
xchg
and
sub
ds
jmp
xor
xchg
ja
add
ret
push
repz
stos
cmp
mov
xchg
in
test
jl
cmp
nop
loope
imul
stos
and
test
inc
outsl
repnz
sbb
xchg
insl
out
mov
ret
insb
adc
iret
int3
or
xor
or
ss
jecxz
imul
add
in
xlat
push
lds
lods
shrl
sub
lds
cmp
into
stc
scas
xor
mov
pop
mov
int
bound
cmp
push
fdivrs
mov
test
popf
sbb
pop
dec
int3
fbld
cmp
pushf
mov
in
addr16
ljmp
or
mov
sbb
mov
pop
mov
sarl
jb
pop
push
xchg
push
pop
mov
or
dec
iret
mov
je
bnd
xchg
ret
mov
jbe
jl
push
adc
push
lcall
cmp
cmc
hlt
lcall
jnp
mov
leave
lahf
inc
xchg
sbbl
mov
lret
shll
sti
inc
xor
sbb
insl
out
js
mov
xchg
fildll
cmp
jno
and
dec
jb
add
imul
inc
xchg
jl
sub
jl
fs
inc
adc
sahf
and
cs
mov
addr16
jl
sub
dec
and
cwtl
pop
aaa
xor
inc
cli
inc
adc
or
adc
sub
ds
cltd
cs
jle
jl
jb
jo
inc
push
lea
imul
sbb
ljmp
mov
cmpsb
outsl
push
out
lahf
inc
sub
fistpl
push
sahf
dec
pushf
loope
push
fucomip
xor
aad
sbb
adc
cmp
push
ret
cmp
pop
je
jle
iret
mov
aam
sub
insl
pop
es
dec
cmp
aad
pop
and
repnz
cmp
jo
pusha
arpl
imul
adc
or
sbb
insb
rcrl
add
push
test
sub
lret
xor
or
cmp
or
jmp
dec
scas
dec
sahf
jg
pop
cltd
in
sarl
ljmp
in
adc
gs
test
je
subb
jmp
in
xor
sbb
dec
pop
inc
test
fsts
into
ds
in
and
xchg
or
sub
and
mov
mov
mov
mov
jmp
addr16
push
ja
jns
jle
xor
adc
mov
sbb
out
call
mov
cld
insl
cld
xor
dec
sub
add
mov
xor
mov
sbb
aas
xchg
xor
mov
pop
push
cmp
hlt
mov
fsub
pop
sahf
pop
sub
cmp
sub
shrb
jmp
inc
out
lea
negl
pop
insl
xor
enter
test
adc
stos
mov
ficoml
les
cmp
pusha
jg
sbb
add
aaa
mov
dec
xor
arpl
adcl
jmp
imul
mov
push
leave
ret
push
lcall
mov
aam
jno
out
pop
add
rcrl
and
add
dec
out
int3
pop
jo
add
adc
pop
or
rol
data16
imul
inc
sub
push
daa
lret
ret
lcall
push
rclb
enter
push
cwtl
ljmp
fucompp
fnstenv
pop
leave
popa
ss
push
sub
aad
adc
cmp
fsubrs
and
dec
adc
jmp
sarb
dec
jp
add
int3
cmpsb
je
xor
pcmpeqw
in
or
add
inc
sub
xchg
pop
xchg
jae
jmp
cmp
dec
cmp
call
mov
add
mov
adc
inc
scas
popa
pop
idivb
xchg
pop
mov
and
lods
imul
movsl
xchg
dec
lahf
pop
mov
packssdw
xorl
mov
repnz
nop
mov
cmp
and
push
mov
or
cwtl
inc
testb
bound
ja
xor
sub
or
xchg
add
sub
or
int3
inc
aas
sbbb
in
outsl
xchg
cltd
jo
pop
and
jae
adc
sub
ret
movsl
xchg
decl
int
push
addr16
mov
icebp
add
sbb
test
lea
xor
xor
pop
lret
push
in
fcom
jne
pop
sub
push
insl
or
in
sub
mov
and
jge
mov
jge
nop
sub
gs
mov
adc
out
mov
into
mov
shll
sub
push
jnp
mov
into
scas
xor
xchg
rclb
xor
inc
cltd
shl
and
cld
jo
pop
div
or
aad
jge
mov
adc
mov
mov
sarl
lret
jge
jge
jne
ss
sub
movsl
jnp
mov
into
xor
jge
cmpsb
jecxz
sbbb
iret
jle
mov
fists
mov
jl
pop
push
loope
xchg
adc
jge
in
mov
aaa
mov
push
lret
inc
adc
loop
cld
xchg
bound
test
xchg
hlt
lock
xor
dec
aaa
push
fnstcw
mov
fs
icebp
fistps
shl
insb
cli
mov
mov
nop
enter
xchg
rcrl
add
hlt
inc
iret
loopne
xchg
fdivrl
mov
clc
or
xchg
cltd
das
ljmp
push
loope
or
aas
insb
dec
std
fistl
jae
pushf
enter
jg
xchg
jl
test
loope
ja
icebp
sub
ds
inc
push
movsl
jmp
push
jno
cs
ds
insl
imul
cs
lret
sub
fiaddl
sub
aad
inc
stc
les
add
mov
inc
stos
ror
sub
or
outsb
dec
inc
scas
int3
or
pop
jp
push
push
mov
les
negl
xchg
or
fcoml
mov
lods
aaa
dec
rorl
xor
fs
adcb
add
jg
scas
mov
mov
sbb
mov
fnstenv
dec
fisttps
sub
xor
mov
fiaddl
sbb
popf
xor
fwait
outsl
jbe
dec
dec
sub
or
pop
pop
std
push
xor
or
dec
pop
sbb
stc
add
clc
les
xlat
xor
mov
mov
cwtl
ds
mov
jge
lods
pop
and
outsl
movsl
andl
xchg
and
cltd
jae
xchg
hlt
test
inc
repz
adc
shr
mov
in
pop
in
repnz
mov
jbe
lahf
xchg
hlt
dec
fildll
inc
xor
enter
das
jb
sub
loope
or
cwtl
sbb
adc
fidivl
push
dec
stc
inc
push
add
outsl
sahf
or
cwtl
xchg
lods
pop
or
in
cmp
dec
out
jo
pop
xor
imul
or
mov
cmp
pop
xchg
shrl
jmp
push
push
ret
enter
and
sahf
mov
xor
xchg
push
push
xor
adc
jbe
fwait
jb
jg
mov
xchg
mov
aad
enter
lds
inc
fcoml
pop
cmp
xor
lret
inc
jp
inc
sub
stos
fcomi
in
dec
push
fisttpll
scas
lahf
cmpsb
rcll
fisubrs
loopne
sbb
add
movsb
push
imul
pop
jecxz
roll
adc
jbe
adc
cs
xchg
adc
popf
ja
movsl
fidivrs
shlb
dec
je
ljmp
ja
cwtl
mov
lcall
enter
push
push
popf
jecxz
cmpsb
xchg
xchg
mov
mov
fxch
cmp
jg
shl
mov
fwait
pop
jg
jmp
psraw
nop
daa
xor
xchg
mov
pop
push
ret
mov
jne
mov
mov
roll
pushf
cmp
je
sub
xchg
imul
int
aas
jecxz
loope
pop
mov
or
das
inc
cwtl
mulb
mov
cmpsb
sbbl
pop
xchg
sub
imul
out
jne
divl
fcomps
andl
xchg
mov
adc
pusha
pop
pop
xchg
mull
jnp
push
insl
mov
pop
ret
lcall
adc
movsb
jle
pushf
xchg
inc
fsin
xor
cmp
inc
into
cmpsb
outsb
out
in
inc
inc
sbb
or
rcl
stos
repnz
les
mov
sub
cwtl
xor
rclb
imul
rcll
sub
out
or
jb
push
mov
sub
test
lods
cmp
arpl
jns
inc
jmp
mov
lcall
test
mov
data16
icebp
jae
ljmp
insl
or
cmp
fmulp
adc
pop
mov
and
jmp
adc
or
ss
dec
inc
outsb
pusha
sbbb
aas
aam
out
leave
xor
sbb
cwtl
fbstp
out
gs
push
push
jle
xchg
fsubrl
jmp
dec
mov
insl
jmp
push
sub
sbb
dec
stos
enter
std
test
ja
aas
lds
push
pop
mov
pop
das
insl
in
xor
shr
and
mov
pusha
and
jnp
in
ds
pushf
data16
or
dec
sbbb
movb
jge
jbe
insl
push
dec
jno
jnp
pop
xor
pop
orb
or
sub
rolb
jno
movsl
cmp
cmc
insb
lods
inc
mov
dec
fcmovbe
pop
int3
cwtl
lods
mov
mov
rolb
pop
rcrb
dec
jmp
jecxz
xor
cwtl
jle
xor
pop
xchg
mov
fcomps
sbbl
xchg
lret
adc
push
jne
pop
jbe
lcall
adc
lods
insl
popa
inc
sbb
out
xchg
cmpsb
push
jbe
aas
call
jae
repz
nop
jnp
int
iret
xor
jo
push
sub
data16
in
shrb
add
lods
add
popa
sub
sbb
mov
lret
mov
test
into
mov
push
xor
mov
cmpsb
lgs
or
jae
jp
repnz
add
mov
lahf
cli
std
xchg
mov
out
jge
cmp
sbb
mov
movl
dec
and
js
pushf
incb
mov
fbstp
test
fwait
js
xchg
xchg
cmp
sub
leave
pop
lods
cmp
mov
pushf
mov
lods
push
sbb
dec
dec
nop
leave
rcrb
loop
xchg
cmc
fucomip
push
lret
repz
xor
xchg
sub
dec
fstpl
jns
hlt
adc
add
lcall
out
cmp
push
sub
jmp
push
lods
lea
push
push
inc
int
ret
outsl
ds
repz
fldenv
aad
sub
mov
ss
xor
arpl
dec
ficomps
adc
imul
xor
dec
sbb
dec
ficompl
inc
adc
xchg
aam
bound
inc
cwtl
lock
movsl
add
mov
sbb
mov
ja
aas
and
dec
test
push
sub
mov
mov
push
pop
out
lock
jge
ret
pop
bound
scas
stos
sbb
inc
lcall
lods
scas
dec
cmp
rorl
push
fwait
jp
add
stos
xchg
push
shl
mov
or
sub
cmp
ja
daa
into
mov
loop
and
push
push
dec
xor
xlat
sbb
inc
fbld
push
fwait
push
stos
and
sbb
and
fidivrs
xchg
push
jnp
bound
movsb
xchg
in
jb
pop
imul
repz
hlt
xchg
lcall
dec
mov
push
sbb
push
bound
dec
repz
sub
dec
icebp
lahf
push
push
cwtl
jnp
mov
faddl
pop
icebp
loope
dec
out
aam
int3
mov
mov
dec
add
jecxz
cmpsl
repnz
cltd
jp
and
dec
in
cmp
lods
dec
gs
stos
lds
mov
nop
cltd
int3
je
imul
xlat
xor
push
push
fcomps
jne
sbb
aad
push
test
mov
les
inc
insl
push
bound
imul
cmp
pop
jns
cmpsl
mov
rcll
pop
xchg
dec
ja
das
les
adc
fisttps
mov
adc
cwtl
stos
xchg
mov
pop
popf
jp
repnz
or
push
or
adc
out
pop
shrl
test
add
ljmp
jne
js
ja
cli
xor
repz
sbbl
sub
loopne
push
test
repnz
inc
mov
mov
rcll
inc
add
mov
stc
pop
jl
add
mov
dec
and
scas
ficomps
insl
fiaddl
xchg
sbb
arpl
mov
lods
sbb
pop
and
nop
dec
jno
data16
std
xchg
test
imul
mov
sub
jnp
jg
lret
mov
sbb
loop
xchg
jnp
pop
not
xchg
rcll
add
pop
imul
push
jne
mov
sub
adc
ss
out
push
or
inc
leave
icebp
xchg
push
adc
cld
das
add
rcll
fwait
push
popa
cmp
dec
inc
das
adc
and
mov
xor
int
daa
ds
ret
adc
add
mov
in
nop
in
pusha
push
inc
cmpsl
imul
inc
dec
add
mov
gs
cmp
adc
pop
mov
outsl
loop
cltd
and
cmp
test
in
in
sub
pop
adc
stos
xchg
cmpps
fildl
inc
fidivrl
loopne
ret
pop
loope
pop
sub
stos
pop
cmp
sbb
fwait
loope
xchg
iret
je
jmp
or
xor
into
rcrb
sti
lods
inc
mov
cmc
mov
cmp
jle
test
int
jbe
cmp
test
xchg
es
jl
xor
out
shl
sbb
rcr
test
pop
dec
pushf
rclb
sub
jle
cli
jecxz
adc
xor
xchg
mov
sti
test
loopne
rol
out
ljmp
cld
repnz
aam
mov
lds
cmc
outsl
jle
add
xchg
arpl
mov
in
push
test
jge
mov
sbb
lods
jl
mov
inc
pop
ret
xor
or
jl
and
mov
int3
enter
push
negb
xorb
mov
call
int
mov
sub
decb
mov
imul
imul
pusha
and
adc
js
mov
xchg
js
movb
add
cli
push
mov
add
add
pop
or
stos
cwtl
into
cmp
xchg
xor
jns
mov
sub
and
cmc
dec
gs
bound
mov
jmp
ja
out
push
insb
shrb
mov
cmpsl
jnp
mov
lcall
pop
mov
mov
xchg
cli
sbb
mov
xchg
pop
inc
ds
test
movsb
in
pop
outsb
add
pop
dec
rolb
ljmp
push
inc
aam
or
cmp
inc
jmp
inc
repnz
loop
xchg
push
in
push
adc
nop
inc
inc
in
bound
in
shl
iret
or
fdiv
aad
inc
cmp
enter
pop
push
mov
fldt
daa
cwtl
mull
mov
mov
ret
xlat
insb
fmulp
jp
mov
addr16
or
pop
pop
int
mov
mov
jns
int
mov
faddl
cmp
clc
in
les
xchg
jmp
xchg
inc
imul
inc
imul
rcrl
js
sbb
dec
push
popf
test
pop
push
std
sub
adc
sub
add
loope
icebp
dec
xchg
push
fld
out
sub
sbb
scas
aad
mov
and
xchg
cltd
push
sub
add
xor
ljmp
adcb
andl
xchg
cmpb
inc
lods
ficoms
pop
pop
fwait
pop
or
and
nop
jle
cmc
popa
rcrl
cmp
jns
xchg
sub
dec
cltd
xor
in
mov
mov
jge
in
scas
scas
add
jle
xlat
aad
rclb
rorl
les
cli
loopne
mov
insb
sub
imulb
pop
xchg
and
and
or
xchg
xchg
push
test
enter
adc
sub
adc
lahf
xchg
in
sub
mov
test
sbbb
out
xor
sub
mov
sub
fcoml
and
add
hlt
jecxz
mov
pop
scas
pop
add
and
jbe
jns
fsubr
mov
movsl
mov
or
push
cmp
mov
or
mov
mov
xchg
insb
loopne
inc
dec
sbb
push
xor
push
pop
jl,pt
add
loopne
test
aas
lret
pop
stos
xchg
cmpsb
add
pop
js
mov
push
test
jge
out
jb
cwtl
xchg
push
pop
in
xor
xor
mov
push
xor
and
in
sub
stos
icebp
ljmp
jecxz
xchg
out
mov
xor
mov
movsl
jl
lds
aad
jbe
mov
adc
stc
jmp
gs
and
sub
push
in
add
xor
mov
xor
mov
in
rorb
add
xchg
pop
scas
enter
rcll
je
pop
clc
cwtl
sub
adc
ds
in
insl
addr16
dec
shrl
fsubp
mov
out
add
loopne
cs
aas
mov
stc
jo
push
pop
pop
sbb
fwait
xchg
hlt
adc
popf
std
jecxz
cmp
dec
ljmp
sub
ret
mov
fdivrs
jecxz
dec
iret
enter
push
ljmp
inc
fldt
dec
test
jo
pop
xchg
daa
std
add
fildll
or
scas
in
ds
insl
cltd
enter
mov
mov
stc
mov
push
pushf
mov
push
out
cmp
add
outsl
mov
and
mov
mov
fsubl
outsb
shll
adc
and
mov
sbbl
ja
loopne
sahf
xchg
push
outsb
shlb
test
pop
sahf
orb
fdivs
arpl
das
dec
lcall
test
mov
cmpsb
pop
sbb
pop
fildll
in
lahf
movsb
cld
imul
pop
decl
daa
ret
dec
inc
adc
jne
test
sub
mov
dec
xor
push
adcl
ljmp
pop
mov
push
addr16
dec
enter
xlat
ds
stc
mov
mov
pop
insb
inc
jb
scas
xor
ljmp
arpl
mov
shll
add
ljmp
or
pop
fs
xchg
stos
lcall
xchg
notl
mov
out
mov
jp
cltd
scas
jg
sbb
add
mov
and
shll
nop
pop
arpl
cmpsb
int3
add
add
es
int
jae
stos
xchg
mov
nop
hlt
iret
mov
mov
insl
mov
xor
loope
mov
xlat
add
lcall
mov
gs
bnd
out
mov
dec
lret
mov
dec
jo
cmp
or
stos
leave
push
xlat
addl
jae
das
icebp
adc
xchg
sbb
push
adc
sbb
xor
fdivrl
adc
mov
inc
call
dec
sbb
mov
outsb
jo
les
cmp
js
movsl
jns
out
cmp
insl
mov
mov
inc
push
ljmp
ds
xchg
mov
fists
push
jmp
cmp
clc
jmp
js
hlt
add
jecxz
dec
xor
andl
ss
fidivrl
xchg
sbb
arpl
adc
insl
cmpb
sbb
jmp
push
inc
pop
add
ja
les
sbb
lahf
movsl
sub
pop
push
add
push
and
dec
shll
dec
scas
cld
xchg
addr16
aad
imul
jmp
decl
call
pusha
push
add
mov
movsb
inc
aam
jl
out
test
cmp
mov
mov
pushf
repz
dec
sub
or
mov
or
popf
jg
jle
fistpll
and
das
incb
jg
push
jne
loope
rol
mov
or
test
test
inc
mov
shrl
sbb
cmpsl
outsl
cli
mov
aam
jno
pop
mov
std
arpl
push
xchg
sub
mov
fs
imul
push
push
jo
cmc
jns
mov
sub
dec
jmp
cmp
in
rolb
std
adc
mov
dec
cmp
or
es
rorb
add
data16
setp
std
test
jbe
rolb
lret
and
pop
sbb
jb
xlat
cmp
xor
adc
adc
aad
sbb
cmp
pop
add
fmuls
mov
sbb
mov
or
cwtl
cmp
lods
push
cmp
pushf
ret
inc
ret
lea
xor
stos
fnstsw
mov
inc
cmovl
dec
and
jns
xchg
lret
into
aaa
xlat
add
jge
sbb
call
sbb
test
cmpsl
mov
dec
aad
lahf
mov
rol
ss
mov
inc
add
pop
jnp
cltd
popf
pop
and
sub
movsb
push
movl
jge
and
push
inc
adc
jp
rorl
iret
popf
sub
in
mov
inc
push
mov
ret
andb
add
je
jge
mov
aaa
movsb
inc
inc
rolb
cmp
sub
daa
test
push
xor
testl
enter
mov
shl
jmp
mov
inc
xor
sbb
int
dec
jp
adc
cld
mov
mov
sub
popa
pop
imul
pushf
sbb
scas
mov
ja
ss
imul
into
xchg
jmp
pop
mov
rcrb
jnp
out
pop
jle
pop
in
mov
push
dec
std
sub
arpl
add
add
and
xor
popf
mov
int3
loop
movsb
out
test
out
inc
mov
and
test
mov
lds
ds
ret
jl
insl
sarl
out
mov
icebp
mov
jo
rep
mov
sarb
js
and
or
daa
rcrb
add
call
rorl
icebp
icebp
insl
aad
lock
loop
push
daa
repz
xchg
and
jmp
xchg
xor
jmp
dec
dec
ljmp
push
test
sub
adc
add
xor
sbb
inc
divb
movsl
add
jmp
loop
xor
mov
sub
sti
pop
out
jmp
lcall
pop
cmpsl
stos
sar
mov
xor
dec
push
loopne
mov
cmp
xor
push
mov
lcall
add
test
fwait
jbe
subb
test
push
fcoms
jmp
scas
orps
cmp
cmpsb
mov
lret
clc
push
and
inc
fdivp
fmuls
scas
cwtl
mov
out
test
lods
mov
fdivrl
test
stc
pop
or
fimuls
ja
cli
mov
push
cmpsl
in
ret
mov
pop
enter
das
test
push
sbb
pop
popa
dec
je
movsb
push
pop
inc
lods
fmull
xor
imul
mov
rolb
in
clc
repnz
dec
cmp
dec
sub
icebp
div
add
clc
sbb
lret
sbb
lds
and
mov
cmpsb
adc
mov
xchg
cltd
dec
rol
mov
fsubl
cmpsb
jne
sti
pop
shrl
call
js
outsb
lds
movsl
inc
jg
and
push
cmp
fidivrl
std
in
sbb
loope
imul
jge
aaa
gs
dec
xchg
mov
cmp
cltd
inc
push
test
push
inc
and
pusha
cltd
push
mov
out
or
fs
out
dec
leave
push
add
imul
sar
stc
dec
into
mov
aam
push
mov
cli
dec
ljmp
and
out
inc
push
xchg
jl
pop
imul
sub
xlat
loopne
cmc
mov
push
jle
add
stos
addl
cmpsl
mov
lods
mov
jge
les
scas
fdivl
lods
pop
add
das
mov
rol
adc
rcll
xchg
xchg
push
popf
out
jnp
push
pop
jnp
cmp
mov
ja
adc
mov
pop
jle
push
adc
cmp
mov
adc
inc
stc
mov
mov
jae
ss
cld
inc
lea
and
pop
fdivrs
jns
ljmp
jmp
jno
in
and
ror
or
mov
jecxz
xor
lret
xor
sub
push
cmp
and
movsb
imul
clc
sahf
and
pop
test
faddp
rorl
inc
clc
jecxz
mov
icebp
or
dec
mov
xchg
and
shrd
cs
add
mov
mov
lods
je
aam
jo
mov
movsb
cmpsb
sahf
ficoml
dec
xchg
mov
jge
add
daa
rcrb
pop
cmp
ljmp
jb
mov
iret
xchg
jns
push
push
out
sub
leave
roll
and
fs
mov
add
xor
loop
pop
rolb
in
mov
jg
popf
mov
sub
out
xor
fcmovne
mov
jmp
mov
aam
fadd
popf
mov
stos
data16
movsb
mov
jnp
jg
pop
dec
mov
fidivrs
roll
dec
mov
pop
adc
adc
testl
aam
std
mov
mov
push
repnz
sti
stc
scas
out
pushaw
fcoml
adc
cmpb
adc
inc
jecxz
adc
ja
es
sub
rcrb
pop
or
addr16
adc
out
sbb
xor
lods
mov
xor
push
pop
hlt
mov
xor
xchg
pop
cli
and
mov
and
xor
loop
enter
sbb
shll
add
inc
and
insl
or
xor
stc
nop
push
adcl
xchg
scas
adc
test
or
cmp
push
adc
jge
mov
jle,pt
mov
push
mov
fildll
lret
mov
lret
clc
cmc
pusha
ljmp
mov
js
inc
pop
loope
stc
dec
ds
push
add
test
push
mov
mov
cs
stos
mov
ficompl
testl
scas
push
pop
dec
mov
fists
shl
mov
mov
imul
lcall
dec
or
popf
mov
gs
ljmp
cmp
xchg
enter
ret
data16
cmpsl
imul
adcl
push
or
lock
outsb
sarl
pop
ds
imul
mov
loope
popf
movsl
mov
add
fidivl
push
cli
push
or
shl
aam
jge
sub
out
mov
mov
rol
xchg
mov
cmp
xchg
lret
fwait
mov
push
call
into
push
negl
hlt
push
mov
pop
cltd
adc
or
js
adc
mov
xchg
cmp
popf
xlat
icebp
daa
imulb
divb
fstpt
push
dec
fbld
sti
sub
test
xor
sub
dec
cmp
push
and
rcrl
in
roll
sbb
jb
xchg
push
cli
pop
mov
jmp
mov
les
push
sub
fnstcw
andl
lcall
jno
orb
repz
xchg
add
repz
loop
pusha
in
fldl
cmp
outsl
or
cmpb
xchg
xchg
xchg
mov
inc
xor
mov
gs
push
mov
xchg
cmpl
adc
rol
push
test
adc
adc
fldcw
negb
loopne
pop
pop
or
cmp
pushf
xlat
aaa
xor
or
pop
enter
xchg
or
call
std
mov
inc
mov
dec
add
pop
nop
ficompl
push
sub
sbb
jae
pop
mov
testl
inc
cmp
jg
aam
pop
sti
insl
adc
add
jmp
fisubrl
mov
push
adc
or
imul
xchg
jns
daa
subl
add
mov
in
scas
imul
and
out
xchg
cltd
fistl
jle
push
pop
adc
pushf
ret
jmp
fisubrs
add
adc
bound
pushf
out
add
jno
adc
pop
jg
enter
imul
xor
adc
jae
or
xor
and
jmp
stos
or
xor
mov
and
mov
and
pop
sahf
imul
mov
lret
bound
dec
or
aaa
ret
push
xchg
insb
loopne
push
sbb
xchg
inc
jmp
fdivrs
pop
inc
notl
jl
mov
movsb
jge
pop
das
out
mov
adc
adc
cmp
mov
fxch
pop
shll
push
xor
repnz
imul
xchg
iret
xchg
jns
sbb
pop
cwtl
std
movsb
lods
xlat
insl
rcrl
fwait
push
pop
add
testl
mov
shll
daa
sub
and
and
pop
dec
xor
fldenv
nop
xor
cwtl
dec
push
push
jmp
je
mov
arpl
js
jne
mov
enter
xlat
insl
sub
adc
cmp
addw
xor
xor
dec
dec
mov
divb
int
sbb
out
xlat
push
addr16
aad
push
cmp
cltd
cltd
cmp
loopne
xchg
push
imul
add
add
xor
jmp
lods
sub
inc
ret
dec
int
mov
sub
mov
out
and
cmp
mov
popa
xchg
scas
mov
lock
jne
jb
push
cmp
mov
cmp
and
cmp
js
arpl
cmc
imul
dec
movsb
std
add
mov
mov
inc
mov
mov
lret
dec
cmp
fcom
and
mov
sub
pop
loop
ja
das
jno
sbb
cmpsb
xor
fists
insl
in
rcll
pop
sbb
aas
fstpt
mov
mov
dec
cmpsl
stos
push
iret
rorl
and
shrb
mov
sti
shl
dec
inc
fcmovb
jnp
ret
dec
jle
inc
lea
mov
pop
fldl
cld
mov
sbb
dec
lcall
test
add
shrl
and
insl
ret
dec
jg
iret
movsl
fs
out
ja
jle
cld
repnz
shll
fwait
xchg
in
mov
mov
cmp
ja
pop
shl
test
adc
adcl
mov
or
jns
ret
pop
xor
sub
fcoml
sub
fs
cmp
repnz
les
pushf
gs
jbe
jns
and
stos
jmp
add
add
push
or
in
pop
xor
xchg
cltd
mov
cmpsb
or
popa
int3
in
fldenv
dec
push
pushf
aas
push
pop
and
leave
leave
das
dec
jno
andl
sub
push
mov
or
nop
gs
mov
sub
cli
cmp
push
fbld
test
or
in
negb
sbb
gs
cmp
and
jmp
pushf
aas
push
jb
xchg
test
fnstcw
aas
adc
xchg
mov
pop
jnp
hlt
xor
push
test
rcrb
or
repz
in
nop
cmc
test
xor
ljmp
fcoms
pop
ret
xchg
fnstcw
cmpsl
add
xor
add
mov
subb
xchg
jns
pop
jne
push
les
mov
in
inc
cmpsb
fs
cltd
mov
and
mov
scas
fstpl
mov
jge
stos
stos
iret
sahf
testb
sub
lods
shll
sbbb
push
xor
subb
outsl
jg
sti
or
ret
ds
scas
inc
frstor
out
out
inc
arpl
jmp
and
jbe
adcl
jnp
and
push
lret
push
fsubl
xor
push
sub
jmp
in
xor
rcl
jl
loopne
xor
jno
ror
fcoml
lods
and
sub
mov
fcmovnb
ficompl
testb
add
and
iret
mov
ja,pt
push
fmull
xor
stc
mov
push
lods
jno
dec
push
xchg
add
mov
cs
cmp
fdivr
iret
lods
pusha
les
jecxz
aam
out
and
jge
mov
push
arpl
lcall
push
cwtl
movsb
dec
add
sbb
in
xor
divl
sahf
mov
xor
test
orl
fbld
enter
shl
xchg
fwait
mov
pop
or
push
pop
mov
and
mov
jg
ss
sbb
mov
sub
sahf
ret
sub
mov
imul
insl
jne
push
in
call
push
cmc
xchg
dec
popf
lret
outsl
and
dec
fldt
ja
mov
jp
cmpl
sbb
cmp
hlt
add
xchg
movsl
jge
or
enter
je
int3
aam
and
inc
sbb
in
inc
xlat
sub
jae
mov
stos
push
int3
das
das
stos
lret
cmp
fnsave
mov
rcrb
pop
rol
fs
ljmp
mov
pushf
fcomi
dec
inc
mov
jns
stc
fs
jno
inc
loop
aaa
stos
enter
jnp
movsl
dec
pop
mov
cwtl
jecxz
or
inc
mov
add
or
addr16
stos
xor
sbb
push
mov
mov
cld
dec
fidivrs
int
cmc
testl
mov
pop
and
and
enter
fsubrl
enter
pop
sbb
pop
rcrl
iret
xor
dec
data16
mov
in
cmp
xchg
loope
pop
push
dec
push
inc
xor
pop
cwtl
xchg
stc
and
iret
int3
or
sbbb
scas
out
sbb
push
cwtl
out
dec
xchg
je
imul
jns
cmpsb
xor
in
jecxz
cs
mov
incl
add
lret
das
hlt
add
xlat
push
xchg
dec
inc
movsl
sbb
fstpl
pop
pop
test
movsb
in
jne
and
mov
mov
mov
dec
daa
std
outsl
push
mov
ss
cmpsb
adc
call
jl
mov
add
enter
cmp
dec
pop
leave
shll
mov
fists
gs
cmp
divb
pop
aam
divb
ret
hlt
mov
push
xchg
idivb
icebp
rorl
outsl
sbb
xchg
mov
popf
and
and
mov
pop
lret
or
xor
in
cld
sub
inc
shlb
cmp
xchg
pop
sub
std
add
bound
cmp
dec
dec
add
cmp
addl
and
push
cmpsb
dec
mov
jge
sbb
aaa
jp
arpl
cmp
fisubrl
dec
int3
cmpsb
xchg
pop
dec
iret
and
test
fnsave
pop
std
xor
mov
popa
pop
aaa
inc
dec
shr
and
pop
ja
lret
ja
cwtl
notl
mov
sbb
and
mov
out
idivl
pop
push
mov
xchg
add
mov
or
mov
fwait
nop
mov
cmp
push
or
push
and
das
mov
fs
fidivs
ficoms
cmp
sar
jb
pop
jne
mov
sti
cltd
jle
and
and
cmp
xchg
push
lods
movsb
xchg
cmp
scas
in
sbb
shlb
pop
icebp
mov
cli
cmpb
mov
movl
cld
aam
imul
sub
test
dec
dec
pop
movsb
mov
adc
in
dec
and
mov
xchg
imul
scas
fmul
loop
xor
mov
inc
dec
push
loope,pn
cmp
lret
pop
adc
stc
xor
gs
push
testb
movsb
lods
adc
int
dec
or
dec
lods
insl
hlt
rclb
sti
jns
lods
dec
push
pusha
mov
mov
mov
add
cmp
leave
inc
dec
nop
and
sub
ljmp
xchg
pop
scas
cs
shll
xor
mov
jo
add
fstl
lods
push
xchg
out
testb
ffreep
call
rorl
leave
shll
jns
in
dec
mov
add
ds
aad
xchg
fldt
dec
cwtl
sti
sahf
repz
jbe
add
aad
call
mov
hlt
lea
je
ja
push
out
xchg
fldl
daa
cmp
int3
mov
insb
jno
and
inc
shlb
cwtl
sub
push
fwait
sbb
test
insb
lret
xchg
mov
lret
and
adc
test
push
test
int3
mov
or
mov
outsl
repnz
shlb
int
test
sub
cli
inc
imul
in
xchg
mov
push
mov
dec
cltd
inc
xlat
addr16
icebp
sbb
decl
push
inc
loopne
repnz
mov
arpl
xor
hlt
mov
ret
es
insb
fs
inc
in
fdivs
mov
jb
shrl
push
stc
fisubl
mov
outsl
mov
ja
dec
jmp
sbb
xchg
cmpsb
loop
pop
mov
or
pop
out
dec
cwtl
dec
mov
lods
push
cltd
rorb
inc
aad
add
leave
xor
sub
mov
mov
fstpt
fnsave
int3
mov
xor
add
setbe
jno
popf
pop
aam
jmp
sbb
mov
dec
test
das
xor
fs
push
xchg
ljmp
pop
mov
and
sti
dec
mov
mov
fs
push
in
insb
jae
or
cmp
mov
ficoml
sarb
fistpl
shrb
leave
push
ss
movsl
ja
lock
insb
pop
scas
cmpsl
xchg
add
enter
add
cmp
cmp
mov
cmp
sub
out
dec
sbb
add
push
jl
addb
mov
fmull
cmp
jno
xlat
xor
xchg
pushf
sbb
pop
stos
dec
fwait
inc
dec
jle
and
es
pop
lods
dec
adc
ja
cmp
cmpsb
inc
and
jns
pop
bound
jns
sbb
test
flds
stc
mov
sbb
jge
lsl
fstps
in
or
repnz
add
mov
mov
push
outsl
das
aad
daa
cmp
mov
ret
iret
fistpll
push
rcl
mov
insb
mov
insb
je
pushf
test
adc
push
shl
addr16
mov
std
mov
pop
add
rdmsr
addr16
xchg
out
and
jbe
out
adc
mov
and
xor
into
mov
xor
fs
xchg
pop
add
cmp
ret
inc
jno
data16
push
test
outsl
pop
pusha
xchg
push
enter
cmp
sub
call
pop
cld
adc
cwtl
sub
cs
ror
and
mov
fcomps
pop
mov
lea
and
dec
scas
mov
int
js
nop
imul
enter
xor
mov
add
mov
roll
mov
jge
idivl
arpl
dec
inc
mov
xlat
add
pusha
jnp
pop
push
add
jge
sbb
dec
divb
aas
arpl
mov
mov
pop
xor
lahf
and
negl
mov
insl
jl
sbb
push
push
push
aaa
push
fldl
mov
sbb
sbb
or
test
pop
mov
clc
insl
fcoms
mov
repz
ret
jl
adc
scas
notb
idiv
mov
lods
jle
push
arpl
idivl
aam
add
pop
inc
xchg
mov
js
clts
jnp
ljmp
mov
sbbl
xchg
push
lret
aas
test
jae
fldcw
jle
fbstp
sahf
cltd
out
loopne
cltd
adc
lcall
add
jp
lret
mov
and
mov
adc
xchg
add
inc
xchg
mov
add
repnz
adc
pop
insb
test
out
cmp
xchg
sub
adc
nop
insl
les
adc
popa
mov
or
leave
pop
push
push
fdivrl
sub
dec
stc
or
filds
jg
mov
sbb
xlat
lods
or
andl
out
stos
pop
jno
xor
inc
lock
pop
test
sub
jno
inc
outsl
lock
inc
adcb
fwait
into
mov
mov
sbb
subl
fwait
test
mov
shrl
mov
popa
mov
sbbl
mov
and
sahf
bound
roll
or
fsub
xchg
cli
inc
movsl
sbb
icebp
sbb
shrb
dec
mov
shrb
xlat
inc
jle
cmp
jns
mov
xchg
xchg
sub
fisttps
daa
in
inc
popf
xor
mov
sahf
loop
jge
mov
sbb
fmuls
in
jne
es
lahf
or
xchg
mov
pop
call
inc
stos
jg
and
inc
push
add
and
loope
dec
mov
jecxz
sub
sub
rolb
arpl
subl
fnsave
xor
enter
mov
lea
adc
aam
sbb
pop
sbb
mov
sub
mov
adc
mov
jbe
sbb
fcmovnbe
iret
addr16
test
lds
push
push
fcomi
in
testb
mov
pop
sub
mov
pop
jne
push
cs
repnz
lods
or
ret
and
adc
sbb
sub
stos
pop
rcrb
es
jle
adc
pop
mov
das
fisubs
fcmovu
mov
push
inc
popw
movsl
mov
test
les
jnp
pop
mov
clc
dec
mov
lahf
lods
dec
call
arpl
or
aaa
rorb
and
loop
add
addr16
inc
cmp
mov
mov
repnz
ret
call
adc
inc
int
movsb
sahf
shll
xor
packuswb
dec
dec
pusha
outsl
adc
rorb
enter
mov
mov
pushf
popa
movsl
std
adc
xor
push
aam
dec
lea
loope
scas
fisttpl
into
js
dec
std
mov
pushf
mov
test
mov
jno
cmp
or
pop
insl
mov
pop
js
inc
push
inc
leave
loopne
push
mov
xchg
lahf
push
inc
pop
fstp
enter
mov
mov
les
in
dec
fbld
cmp
mov
adc
daa
dec
inc
test
fmul
test
adc
aaa
test
test
jg
xchg
pusha
xlat
das
sar
popw
xlat
insl
scas
jo
lds
or
xlat
aad
int3
out
cmp
incl
scas
out
ficoms
adc
push
ljmp
pop
dec
dec
dec
out
xchg
cmp
stos
movsl
testl
mov
adc
popa
sbbl
adc
mov
pop
clc
lock
lds
inc
jp
and
add
jp
dec
xchg
mov
addr16
bsf
lcall
jmp
push
shll
push
push
pop
xchg
mov
js
jle
add
or
or
cmovne
pop
subb
cltd
inc
and
gs
ret
and
fdivs
pop
nop
mov
ljmp
jl
jno
sbb
iret
mov
xor
sub
sub
pop
adc
fwait
mov
arpl
enter
cmp
test
fcomps
in
mov
jae
insb
pop
mov
push
xor
js
mov
lds
lret
push
jecxz
jge
adc
iret
sbb
idivl
fwait
sub
cmp
mov
fidivs
sbb
sti
mov
xlat
pop
sbb
push
aad
stos
stos
cmp
push
stc
in
jnp
ljmp
js
mov
arpl
lea
pop
out
out
add
fisubrl
mov
scas
les
sbb
sub
dec
sub
inc
out
or
sub
gs
dec
sbb
ret
inc
rcll
dec
fistl
cmp
mov
or
cli
or
fsubs
bound
adcb
movsl
iret
int3
mov
pop
pop
rolb
mov
push
aaa
nop
cli
cmp
cmpsb
call
test
test
jmp
bound
jns
jne
rcr
jbe
inc
mov
jecxz
cld
lret
mov
cmp
mov
add
jmp
pop
xchg
jae
mull
or
jp
xor
jecxz
in
mov
dec
pop
mov
mov
stos
xchg
flds
inc
data16
mov
scas
push
mov
fldenv
mov
sahf
push
xchg
add
jbe
xchg
js
test
aad
xchg
jmp
cmp
pop
fimull
fldt
mov
sub
xor
mov
pop
call
dec
xchg
shl
and
and
aad
lods
mov
push
dec
and
iret
push
cltd
ja
jns
mov
test
lea
sub
nop
mov
sub
pop
dec
das
jp
mov
lock
jae
or
xchg
cmp
cli
jge
out
or
sbb
cmp
lahf
xchg
mov
mov
mov
ljmp
jg
mov
imul
add
xchg
push
inc
popf
sub
ds
in
inc
mov
popa
ljmp
fmulp
pop
xor
xchg
mov
movsb
mov
add
faddp
rorl
cmpsb
inc
xchg
insb
mov
mov
cmp
xlat
dec
jmp
or
roll
andb
push
jae
out
cmp
outsb
sub
movsl
push
xchg
xchg
lds
das
sbb
rclb
dec
inc
add
add
outsl
out
inc
cmpb
sar
lods
mov
imul
fnstsw
lock
jns
stc
jae
jns
aaa
mov
jbe
jo
or
sub
cwtl
arpl
fwait
push
push
inc
sti
push
xor
shl
dec
loope
sub
inc
dec
rep
inc
fsubrs
ret
call
nop
jl
sahf
adc
xchg
cmp
pop
std
add
jb
mov
adc
ret
jo
jecxz
arpl
sbb
add
cmpsb
out
sbb
ds
cmpsb
hlt
ret
subb
cwtl
test
mov
pop
add
pop
es
and
lret
jns
dec
lcall
pop
pop
jnp
dec
loopne
mov
sbb
iret
pop
into
push
pop
fst
in
sbb
xchg
xor
nop
stos
pop
adc
lock
ret
aad
push
mov
clc
lret
pop
xchg
xchg
add
enter
xor
adc
fmul
mov
adc
adc
out
lret
push
inc
inc
test
rcrb
mov
leave
and
jge
xor
xchg
out
add
jae
sarb
xchg
pop
mov
insb
cmp
aas
jnp
push
xchg
cmp
mov
repz
push
movsl
int
xchg
aaa
roll
xchg
sahf
push
ss
inc
enter
orb
into
push
adc
popaw
popa
daa
adc
ds
enter
mov
xchg
sahf
in
inc
popa
add
sarb
in
pushf
pop
repz
pop
sbb
insl
scas
mov
sti
fwait
sbb
in
cmp
ficompl
jecxz
dec
sub
call
iret
adc
pop
stos
sbb
adc
clc
clc
loopne
push
scas
or
outsb
in
mov
mov
push
popf
or
inc
jns
andb
sub
in
and
in
pop
cs
xlat
fidivl
jae
mov
lods
or
inc
test
cmc
or
fcompl
jle
in
into
jbe
movsl
dec
rolb
repnz
add
sub
mov
pop
fadds
or
xchg
pushf
test
jbe
aaa
imul
xchg
dec
push
pop
mov
jae
mov
ja
mov
adc
fistpll
and
mov
ret
ret
inc
push
outsb
test
outsl
mov
mov
fstpl
mov
sbb
lds
sub
and
stc
jo
push
mov
sbb
dec
push
rcrb
mov
shlb
lahf
ret
imul
test
mov
loope
mov
iret
adc
xor
scas
lea
pop
xor
aas
adc
jle
mov
pop
mov
dec
mov
sbb
sbb
push
add
pop
data16
fisubrl
daa
push
test
pop
lock
or
popl
mov
jne
outsl
and
cld
mov
pop
les
ss
push
mov
std
int3
jns
lds
mov
sahf
in
in
xor
adc
dec
popa
leave
push
cmp
push
in
std
rcr
hlt
dec
pop
or
rcrb
arpl
dec
or
je
jo
or
push
mov
fld
and
aam
out
sub
scas
inc
loop
pop
xchg
lret
sub
mov
dec
add
push
mov
push
ljmp
add
in
mov
fs
sahf
add
subb
add
dec
pop
xor
adc
mov
subl
mov
out
nop
test
jp
jno
fstps
insb
inc
xchg
out
push
addl
in
lret
shr
push
jg
stos
adc
push
mov
je
xchg
subb
jge
cli
sahf
or
insl
mov
fwait
int
dec
in
or
fsubrp
das
inc
or
aam
fisttps
inc
adcb
and
pop
add
mov
cmp
xlat
dec
adc
mov
and
fwait
andl
into
insl
cmp
jns
shll
xor
lahf
xchg
aas
mov
xchg
sbb
pop
or
fidivl
lea
mov
call
movsl
nop
cli
rcrl
fistpl
outsl
in
mov
outsl
jo
xor
jmp
lods
dec
fcomps
sbb
add
xor
pop
sbb
push
lods
test
mov
pushf
negl
adc
xor
sub
in
inc
fstpl
jmp
or
movsb
cmpsl
pop
push
jbe
sub
jp
inc
movsb
outsb
or
sti
cwtl
and
loopne
add
xor
repz
jne
pop
push
sarb
push
rcll
jne
lcall
insl
cmpsl
and
stc
cmpsb
cmp
mov
jns
fdivs
movsl
xchg
popf
push
ljmp
pop
fisubrs
cltd
dec
push
cmova
mov
test
lods
jae
xor
rorb
loop
push
or
dec
les
leave
fnstsw
dec
outsb
mov
jp
jmp
cmp
adc
sbb
mov
into
push
xor
inc
ds
adc
ljmp
pop
xchg
add
mov
in
daa
fldenv
js
cmpsb
sub
aam
movsl
orb
push
cs
and
imul
cmp
sbb
nop
cmpsb
add
jmp
out
push
aam
dec
mov
divb
dec
xorb
out
or
or
outsl
sahf
xchg
add
xchg
scas
sahf
pop
hlt
push
insb
mov
lahf
jl
leave
enter
stos
pop
aas
mov
movsb
js
mov
cmp
dec
pop
jmp
je
out
adc
adc
nop
cwtl
in
or
xchg
fimuls
and
push
data16
lods
packsswb
data16
mov
mov
stos
fmulp
pop
rcrb
sbb
repnz
and
dec
xor
cltd
adc
fs
jl
clc
sbb
jbe
inc
inc
xor
in
adc
cli
sbb
imul
pop
cmpsb
shll
faddp
dec
notb
test
popa
les
mov
test
pushl
sbb
sub
inc
fiaddl
cs
in
mov
dec
adc
rcrb
cmpsb
dec
push
les
test
lahf
mov
inc
inc
push
cmp
lods
rorl
sub
jo
leave
add
rep
mov
outsb
mov
sti
dec
gs
out
ja
push
ret
fstl
push
leave
fs
insb
push
and
mull
push
daa
add
adc
out
mulb
push
test
pop
cmpsl
add
and
je
lcall
ret
adc
cmpl
iret
movsl
and
lods
loopne
sbb
sti
sbb
xlat
popf
pop
cmp
enter
cmp
imul
push
xchg
int3
mov
mov
dec
add
jo
sub
or
dec
cmpsb
repz
rcl
xchg
addr16
cld
xchg
xor
xchg
mov
mov
lods
mov
cmpsb
xchg
or
out
pop
pop
int3
fstl
sub
call
daa
adc
data16
fsubl
shll
mov
pop
sub
xchg
mov
loop
aam
xchg
xchg
push
into
lret
jg
push
rolb
jle
fsubrs
out
sub
out
mov
inc
jno
xchg
sahf
loop
lods
inc
mov
xor
jno
ret
sbb
jno
add
cwtl
shl
sbb
mov
not
std
sub
cmp
lret
fs
mov
add
push
popf
arpl
loop
hlt
daa
mov
jle,pt
iret
xchg
aaa
mov
jmp
adc
addr16
jp
cld
out
xor
push
lds
rorl
flds
xor
cmp
add
xor
or
and
insb
test
jmp
jecxz
or
in
mov
fsubrs
mov
loopne
jle
pop
pushw
xor
sahf
daa
jg
xor
aas
or
cmp
cwtl
insb
adc
inc
rol
inc
pop
mov
or
lret
jmp
dec
imul
xchg
js
daa
pop
push
gs
roll
outsl
mov
test
or
push
jg
in
ds
mov
stos
scas
mov
div
bound
scas
mov
mov
and
mov
ljmp
inc
jg
inc
in
ja
sub
inc
aad
sbb
nop
into
pop
xchg
xchg
arpl
cs
lahf
test
inc
test
sbb
and
fcmovbe
int
add
out
int
insb
movsb
je
adc
jno
push
xorl
lret
push
bound
and
sub
mov
das
mov
and
xor
adc
add
or
scas
das
or
adcb
sbb
rolb
loop
dec
pop
pop
mov
sub
add
fistl
lahf
sti
pusha
jmp
xchg
push
dec
or
aad
jl
sbb
call
mov
jp
dec
in
sarl
mov
jns
les
mov
dec
enter
int3
and
adc
loopne
test
xor
inc
out
jmp
inc
pop
rorb
mov
pop
sbb
movsl
or
xor
out
shll
sbb
ljmp
pusha
mov
dec
dec
lods
mov
push
inc
sbb
sarb
push
sti
stos
or
cmpsb
adc
call
xchg
cs
insb
add
in
lcall
adc
cmc
loopne
lods
dec
dec
int
mov
cmp
lahf
or
nop
and
out
adc
in
fwait
mov
inc
or
btc
sub
test
and
push
data16
hlt
mov
jg
mov
nop
shlb
sbb
or
cli
iret
dec
das
mov
xlat
mov
addr16
xor
sbb
pop
xchg
xlat
out
add
ret
mov
and
stos
mov
push
mov
les
pop
cmp
jne
mov
sahf
lahf
or
mov
jnp
jg
cld
push
mov
mov
movsl
pop
sahf
cs
mov
pop
mov
das
sub
jbe
or
aam
pop
aas
mov
std
movsb
popa
fdivl
cmpsb
xor
or
xor
sarb
push
mov
sbb
popf
les
xchg
xor
sub
jbe
das
xchg
js
aam
iret
aad
inc
icebp
clc
sbb
dec
fwait
insl
push
or
les
cmpsl
or
adc
aas
lods
fs
dec
or
lds
inc
inc
stos
out
iret
or
adc
je
test
sub
cmpsl
cmp
adc
pop
xchg
inc
jnp
mov
shlb
mov
adc
cmp
sbb
sbb
push
lret
xor
lock
out
or
test
das
pop
cltd
inc
jp
sub
mov
xor
out
icebp
push
jp
aam
fisttps
outsl
sub
and
or
pop
ret
mov
ret
stc
mov
out
mov
push
stos
fnstcw
mov
imul
and
outsl
out
cli
jb
jnp
adc
shr
jnp
dec
xchg
outsl
adc
fmulp
ds
add
ret
mov
int
mov
pop
sub
les
lods
inc
inc
scas
dec
jmp
in
faddp
scas
xchg
inc
cmc
or
or
pop
fwait
cmp
add
in
das
rolb
imul
repnz
jo
cltd
repnz
scas
adc
mov
cmpsl
iret
es
xchg
inc
cltd
and
cwtl
mov
mov
int
adc
mov
xor
push
sti
and
in
jecxz
lods
mov
sbb
sub
test
scas
push
in
xor
add
add
lea
add
xor
lods
mov
push
jno
mov
and
adc
mov
shrl
mov
jecxz
add
jo
ss
and
fwait
jb
call
aam
arpl
adc
push
hlt
inc
cmp
push
sbb
ss
bound
jmp
lcall
cwtl
add
iret
inc
mov
cmp
sub
cmp
pop
cs
mov
xchg
shr
pop
mov
jns
pop
jge
push
outsb
mov
mov
rcrb
dec
push
dec
xlat
sbbl
cltd
in
cltd
cmp
out
cmpsb
mov
movsl
loope
mov
and
cmp
aas
mov
xchg
daa
or
cmp
mov
les
push
scas
and
hlt
das
or
inc
inc
int3
jecxz
addr16
dec
pop
ret
andb
or
xlat
icebp
jbe
mov
enter
int3
xchg
ljmp
outsl
mov
daa
icebp
pop
stos
mov
mov
stos
mov
test
cltd
cmp
mov
pop
leave
repz
loopne
sbb
das
xchg
mov
pop
jae
addl
and
inc
call
in
imul
sub
inc
int3
jns
pusha
es
xor
pop
lcall
add
xchg
loop
mov
mov
clc
aad
jbe
sti
ret
fstl
inc
loope
loopne
inc
cld
jp
popf
mov
sub
cmc
vmovups
mov
pop
xor
enter
js
mul
arpl
stos
incl
popa
mov
lret
andb
jecxz
mov
jnp
xor
lahf
les
shlb
in
fstl
mov
cmp
inc
lods
clc
test
dec
mov
mov
or
or
adc
jb
mov
xor
cmp
or
push
sbb
shlb
call
xchg
cmp
pop
test
repz
add
xor
push
sbb
lea
shr
lret
lcall
xchg
xchg
sti
fucomi
scas
jl
pop
and
mov
dec
xchg
lods
lahf
add
xor
and
push
adc
adc
push
imul
leave
aam
lcall
xor
jno
js
out
insl
xchg
pop
in
push
xchg
popa
dec
fimull
sbb
and
insb
hlt
fcmovu
lds
adc
lea
inc
dec
mov
and
rorb
adc
xchg
xchg
sub
neg
paddw
fsubrl
inc
cmp
shlb
stos
sub
sub
adc
pop
arpl
testb
push
ss
adc
jg
popa
sbb
add
sub
mov
pushf
push
fdivr
iret
sbb
rcr
mov
mov
mov
xchg
lds
test
pop
jp
jae
scas
jge
pop
inc
jl
and
insl
mov
lahf
or
in
pop
decb
ret
lret
std
ficomps
cmpsb
sbb
ror
sub
push
out
inc
sbb
dec
cmp
jbe
addb
insb
push
push
ja
mov
cld
les
vcomiss
aam
bound
push
lods
or
xchg
loope
mov
add
addr16
popa
jle
or
push
dec
jb
mov
lahf
adc
test
jne
add
adc
idivl
ljmp
mov
addr16
pop
push
mov
sub
xor
or
sbb
add
dec
nop
add
cmp
xor
xchg
lea
dec
and
movsb
mov
sub
in
out
xlat
shll
mov
mov
inc
not
sbb
cwtl
sbb
xchg
push
xchg
push
push
pop
push
sub
mov
or
pop
insl
mov
fstps
xchg
adc
inc
ret
pop
xchg
sbb
fidivl
mov
aas
pusha
sub
rorl
mov
sbb
push
jp
jge
lods
cli
inc
and
mov
into
add
inc
inc
cld
pop
popa
mov
inc
xor
out
jnp
fldl
jle
rclb
fsubr
push
mov
cmovge
and
call
and
push
jbe
jp
push
add
in
data16
xchg
std
rcll
jae
jne
sbb
lea
jl
pop
add
cltd
push
int
out
lods
or
adc
incb
rclb
movsl
filds
jge
jnp
pop
out
or
notb
mov
mov
aas
inc
inc
cltd
ret
cwtl
ficoml
andb
bound
mov
add
mov
incl
mov
lcall
daa
push
in
rcrl
or
push
and
or
aaa
jne
mov
sub
data16
je
int
sbb
ds
mov
push
fisttpl
jbe
and
sbb
inc
rorl
std
inc
lret
xchg
cmp
popa
sbb
ss
in
and
leave
mov
test
mov
dec
test
jg
and
xlat
pop
jae
mov
bound
and
sbb
stos
insb
cmp
mov
inc
cmp
push
push
imul
sbb
ret
mov
insb
jb
mov
inc
movsb
jbe
popf
xchg
ficoms
lock
jns
gs
dec
iret
cmp
jb
push
mov
dec
jae
lret
pop
stc
lods
mov
xchg
push
lods
and
add
xor
and
sub
clc
lea
mov
mov
mov
cs
jae
outsl
pop
or
xchg
sahf
sub
sbb
fdivrl
push
jno
sbb
aas
sbb
dec
adc
add
lods
mov
lods
mov
pushl
cmp
outsb
notl
lret
xorb
xchg
daa
leave
cmpsl
in
jp
and
fmull
push
add
dec
pop
mov
jp
mov
add
or
mov
sahf
sti
scas
inc
aad
push
unpcklps
jo
aam
jno
xchg
nop
sub
cmp
pop
mov
stc
sub
int3
arpl
xchg
imulb
pop
lds
cmp
movsb
or
in
push
cmc
pop
mov
rcll
mov
xlat
fcom
cmp
out
ror
mov
bswap
push
in
pusha
or
dec
dec
lds
fimuls
loopne
je
jl
pop
and
out
sahf
sub
jnp
xchg
and
hlt
pop
rcrb
and
and
fxch
cmp
into
sub
mov
sub
sbb
pop
cmp
lods
sub
sbbb
das
sub
xor
or
mov
sti
das
add
sub
pop
xchg
and
stos
mov
int3
mov
jae
orb
fs
pop
adc
std
inc
mov
shrl
xchg
repz
or
stos
push
cwtl
mov
rcrb
inc
pusha
add
mul
ljmp
sub
or
xor
pushf
scas
xor
cmp
leave
loop
out
sahf
mov
mov
cmp
filds
sub
or
imul
lret
cmpsl
test
out
inc
and
xor
repnz
push
adc
xor
dec
lods
xor
xchg
inc
mov
sbb
mov
sahf
mov
aas
push
lea
int3
sub
sahf
loopne
jne
mov
or
xor
cmp
jmp
clc
outsl
in
pusha
das
inc
cmp
sahf
mov
dec
cltd
lret
repz
shrb
fwait
inc
mov
add
mov
das
or
cmp
lret
mov
cmp
rorl
mov
insb
push
lret
fnstenv
dec
ja
iret
xchg
pushf
lods
shll
shrb
add
pop
sbb
cmp
pusha
sti
les
xchg
fs
mov
out
daa
cld
ja
mov
cmp
lods
cmc
or
jge
lahf
mov
xor
insl
int
push
xor
lds
mov
sbb
xor
mov
fisttps
into
mov
jmp
in
inc
push
or
pusha
cli
sti
dec
int3
mov
mov
add
cmpb
arpl
sbb
int3
arpl
or
stos
cwtl
fwait
cmpsb
adcl
into
xchg
and
scas
xchg
enter
movsl
std
lret
addr16
iret
or
mov
out
add
jmp
lcall
ljmp
js
popa
ljmp
and
add
cmc
gs
cli
mov
testl
aas
and
and
cmp
xor
xor
dec
pop
dec
cmpsb
cmp
add
xchg
mov
enter
scas
xor
fldenv
mov
xchg
and
mov
add
xchg
mov
add
lods
nop
addb
adc
push
mov
mov
mov
fs
rcrb
call
lea
dec
pop
mov
cmp
adc
jle
sub
enter
lcall
fnstsw
out
out
mov
pop
sbb
mov
insb
cmpsl
out
test
loope
dec
pushw
adcb
out
jge
jns
fisttps
xchg
add
sub
movl
sti
stos
push
jmp
stos
movsl
xchg
lds
sbb
and
scas
sbb
cmpsb
std
shr
xchg
mov
pop
push
or
outsb
jecxz
icebp
and
les
adc
and
or
push
mov
je
inc
jg
loope
mov
shll
lahf
fimuls
adc
data16
scas
mov
out
fcmovb
lret
gs
lods
add
push
inc
pushl
sub
pop
shll
sahf
dec
movsb
inc
mov
hlt
pop
das
popw
jbe
mov
repz
gs
and
orb
mov
or
jb
sar
adcl
add
xor
xchg
jb
test
xchg
xchg
jg
sbb
test
mov
push
imul
jmp
mov
push
popf
aaa
dec
jbe
push
jge
mov
inc
daa
mov
stc
xchg
mov
mov
popa
xor
arpl
lock
mov
mov
ja
fisubl
push
xchg
push
push
daa
push
int3
push
incl
dec
out
cmp
xchg
inc
jno
adcb
jae
push
push
adc
fwait
in
out
inc
fstpt
adc
push
mov
shlb
scas
xchg
mov
sub
jge
ficoml
popl
mov
mov
fiadds
mov
jns
adc
cmp
sbb
cmp
in
arpl
and
and
in
mov
dec
roll
iret
xchg
loopne
jae
shlb
xor
imul
jg
dec
inc
sbb
cmpsb
test
les
js
andb
sub
dec
les
and
out
push
cmp
int
jmp
iret
in
add
cmp
in
lcall
ret
mov
adc
test
pop
mov
mov
loop
lea
push
lcall
xor
daa
add
pop
sbb
dec
add
mov
jb
idiv
in
sbb
popa
mov
lock
mov
shr
xchg
das
sti
lcall
mov
inc
in
add
or
ljmp
xchg
adc
push
xor
push
cmpsl
jmp
dec
loop
int3
and
dec
push
les
mov
adc
fnstcw
jmp
inc
mov
adc
push
dec
leave
push
cs
ja
inc
mov
ds
cmp
in
rcrl
dec
mov
mov
push
outsl
call
sbbl
decb
aas
orl
mov
and
popf
shll
mov
sub
aad
jecxz
lds
gs
leave
mov
leave
rcll
push
cmp
jns
mov
mov
dec
dec
lret
mov
mov
cmpsb
imul
mov
test
sub
adc
dec
fnstcw
ret
fildl
xor
dec
xlat
mov
cmp
call
mov
sub
adc
adc
fistl
clc
xor
shl
jnp
inc
les
xchg
jge
xorl
mov
xor
jp
std
imul
lret
test
insb
out
nop
icebp
in
inc
mov
or
jns
imul
out
mov
lret
mov
xor
xchg
add
push
cmp
mov
mov
out
pop
mov
sub
jnp
outsb
setb
into
test
sbb
ficomps
inc
adc
repnz
mov
or
test
movsb
mov
cmp
pop
ret
xchg
rorl
jae
call
or
test
imul
xor
push
in
jns
loope
pop
jo
mov
jo
mov
or
mov
push
arpl
xchg
mov
rorl
push
adc
jns
and
and
add
sbb
inc
imul
lock
push
xlat
and
sbbl
nop
mov
pop
int3
xchg
imul
mov
testb
fwait
outsl
pop
cmp
sub
enter
jb
inc
repz
inc
cli
mov
dec
adcl
cmpb
fldcw
and
jge
std
xor
aas
mov
imul
xor
sbb
stos
add
sbb
outsl
cmp
test
pop
loope
mov
popf
call
popa
test
dec
mov
push
xchg
adc
ljmp
xor
mov
xor
sbb
cmpb
pusha
jmp
ret
mov
mov
aaa
lods
js
aad
lahf
inc
popa
movl
test
mov
das
add
out
scas
inc
imul
xchg
hlt
cmpsb
and
clc
inc
pop
mov
push
fnsave
notl
scas
sbb
jb
mov
icebp
insb
xchg
sub
lock
lock
cmp
or
lods
xchg
daa
daa
pop
mov
add
mov
std
lods
pop
rcll
subps
cmp
or
test
les
push
cmp
lahf
out
out
test
das
pop
out
xlat
cmp
jb
and
sahf
sbb
imul
stc
test
orb
frstor
and
sub
es
pop
push
add
out
xchg
jae
int
mov
cmp
xchg
sarb
and
pop
cmp
pop
mov
jecxz
mov
sbb
pop
jmp
addb
jge
movsb
jae
xchg
xlat
and
dec
jno
inc
lahf
das
mov
ret
jle
call
adc
shl
stos
dec
dec
mov
scas
pop
cmp
jb
cmc
sbb
std
pop
ror
mov
aaa
or
sbb
adc
fdivrl
aad
push
lahf
adc
inc
cmp
or
sbb
jbe
xor
xor
notl
add
aaa
add
sbb
shlb
mov
inc
repz
loope
cmpsb
and
les
mov
jne
std
mov
fsub
and
addr16
mov
push
mov
pop
popa
test
sahf
dec
dec
add
fisttpll
insl
movsl
cmpsb
std
xchg
push
ljmp
cmc
ss
sbb
xchg
fmuls
ljmp
inc
fbld
pop
pop
xlat
nop
xor
sbb
mov
adc
je
add
and
cmpsl
gs
inc
cld
adc
mov
jo
cmpsb
sahf
loopne
jne
jb
jne
dec
mov
fiaddl
jecxz
jb
lcall
movsb
mov
add
sbb
push
nop
xchg
movb
push
scas
loop
jmp
mov
icebp
or
idivl
push
jno
push
adc
shlb
inc
cmp
xrelease
jg
pop
out
pop
xor
adc
inc
or
cwtl
popa
shr
out
sub
jae
movsb
lret
rcr
or
insl
fsincos
mov
cmp
test
sub
daa
fsub
xor
subl
cmp
and
mov
sub
mov
mov
inc
push
loope
sub
mov
out
xlat
stos
movsb
aam
sbb
in
xchg
ss
pop
in
push
lea
xor
arpl
iret
in
jp
test
mov
adc
add
dec
enter
in
pop
jg
movsb
and
cmpsl
push
sti
das
stos
and
into
jg
xor
lock
dec
imul
adc
mov
sub
xor
lds
push
lds
jae
outsb
js
sbb
lods
pop
mov
push
mov
out
adcl
ret
dec
pop
sub
dec
and
xchg
fdivrl
mov
mov
mov
mov
add
sub
jmp
mov
mov
sub
dec
lret
fmuls
jl
mov
xchg
aaa
push
pop
stos
mov
sarb
addl
orl
add
and
popa
xchg
sub
jg
mov
out
xchg
jae
or
sbb
pushf
pop
ror
and
popa
add
mov
loope
dec
or
push
lcall
jo
scas
ss
adc
popa
push
dec
es
lahf
mov
out
das
cwtl
and
jno
out
sbb
mov
mov
mov
push
push
inc
sbb
dec
sub
out
psllq
into
xchg
fprem
push
shr
jno
mov
stos
pop
repnz
xchg
in
and
xor
cwtl
arpl
aad
push
daa
aad
dec
mov
or
add
push
daa
xchg
mov
gs
insl
push
adc
push
aam
das
pop
xchg
or
nop
jg
add
inc
stos
mov
add
in
dec
add
insb
jbe
sub
mov
adc
clc
addr16
adc
movsb
sahf
in
push
push
je
mov
jecxz
dec
fnstsw
pop
xor
enter
mov
cmp
cmp
jne
or
fcmovu
icebp
gs
arpl
test
jb
sub
into
leave
or
adc
mov
pop
test
xorb
jb
ss
aad
inc
jbe
lea
icebp
or
ja
and
ljmp
std
test
jg
xor
xor
xlat
mov
inc
outsb
ja
inc
cmp
out
dec
aaa
inc
nop
adc
push
int
daa
mov
mov
fs
adc
mov
sub
add
pop
bound
push
push
in
mov
outsb
jns,pt
push
mov
cmp
lcall
into
aaa
test
loop
sbb
test
or
movsl
inc
push
jb
loop
ja
mov
mov
mov
stos
mov
lock
inc
out
es
jmp
aad
lock
movsb
pusha
dec
lcall
mov
inc
sub
push
es
inc
stos
mov
in
mov
pop
shl
in
jmp
mov
and
nop
fwait
dec
pushl
sbb
pop
inc
in
insl
add
lods
enter
pop
repnz
and
ret
jp
xorl
inc
iretw
stos
rcr
test
test
adc
or
shl
sub
xor
icebp
ds
adc
mov
push
add
daa
sti
cs
dec
mov
jnp
push
dec
dec
xchg
jae
fisubrl
adc
inc
mov
jo
sbb
pop
pop
adc
fnstcw
mov
les
or
mov
sub
mov
push
jecxz
push
fadds
mov
cmp
aaa
sbb
cmc
cmp
dec
xchg
repz
leave
repnz
ljmp
in
mov
loope
cwtl
jnp
divl
sub
mul
push
out
nop
call
aad
ret
sbb
adc
pop
push
aam
das
cmp
xchg
mov
adc
scas
jns
pop
in
pop
adc
mov
cmpsl
ljmp
fstps
sub
push
push
dec
mov
mov
pusha
js
rclb
push
adc
mov
jecxz
push
mov
mov
lock
ret
sbb
scas
leave
jg
adc
inc
fildl
call
flds
xor
jb
movsl
fcom
sarl
pop
jno
outsl
jl
cmpsl
pop
repz
clc
fistpl
pusha
mov
sbb
cmpsl
pop
rorb
addb
shufps
inc
adc
lds
mov
sti
arpl
out
ja
jbe
mov
pop
cmc
imul
mov
mov
pop
pop
in
shlb
sub
adc
xchg
decb
xchg
xchg
out
lahf
pop
dec
push
pop
xor
pop
mov
sub
shr
pop
adc
add
rclb
push
push
dec
push
jl
sti
rclb
push
mov
cmp
ret
out
daa
jg
insl
cmp
push
adc
push
shll
inc
leave
inc
pop
call
insl
lahf
insb
mov
loope
and
and
pop
cmovb
outsl
mov
js
sti
jb
xor
xchg
imul
lahf
or
in
je
push
push
ss
jecxz
or
inc
sub
mov
and
arpl
decb
stos
scas
clc
gs
repnz
fistl
cmp
out
xchg
dec
ljmp
outsb
sbb
or
std
test
jae
sbb
jae
add
scas
sbb
inc
les
sbb
dec
ficoml
mov
loope
mov
addr16
cmp
ficoms
incb
loop
test
sbb
pop
das
aaa
icebp
and
rcrb
mov
loop
jg
popa
cmp
xchg
and
cli
iret
shll
jmp
cs
sub
movsl
jae
cmp
dec
pop
lcall
add
mov
xor
ret
pop
out
sub
cs
push
les
jg
fsub
mov
stc
mov
pop
sbb
insb
lock
adc
lea
or
push
pop
pop
push
test
jl
mov
fidivl
xchg
push
insb
or
sti
add
dec
xchg
mov
arpl
mov
scas
out
jb
test
push
jns
mov
sbb
data16
fbstp
sub
jp
xor
imul
aam
fwait
pop
fdivl
xchg
aam
inc
sub
or
mov
je
xor
cmc
pop
mov
pop
xchg
pop
cmp
inc
lcall
adc
jne
inc
repz
pop
scas
shl
cmp
xchg
xchg
or
pop
outsl
shlb
mov
sub
jo
inc
cmc
insl
xchg
jle
cld
mov
gs
fistps
movsb
scas
adc
clc
lret
imul
mov
pop
pop
inc
sub
cmpsl
mov
lock
inc
clc
rcl
mov
test
adc
outsl
add
insb
xor
pushf
shr
loopne
inc
ja
mov
pop
jo
js
mov
fcomip
ret
pop
xlat
xlat
sbb
mov
mov
inc
jmp
push
mov
adc
xchg
ficomps
push
jae
pop
push
aas
filds
sub
dec
mov
clc
add
add
push
push
and
lods
push
mov
arpl
aaa
cmp
xlat
cs
es
cmp
inc
rolb
repz
and
adc
ds
and
bound
ficoml
jecxz
mov
and
mov
das
lods
mov
les
popf
mov
cmp
stos
mov
sbb
outsl
lcall
xchg
bnd
hlt
mov
xchg
mov
push
and
cmp
mov
fldl
jp
xor
pop
loopne
jle
jmp
jl
dec
cmp
int3
gs
into
jnp
sbb
loop
sahf
push
bnd
popa
and
pop
mov
xchg
out
mov
into
dec
out
int
or
adc
xor
cmp
mov
stc
mov
mov
mov
stos
and
icebp
push
rcll
aad
jg
mov
push
or
dec
nop
aaa
adc
inc
jmp
adc
jmp
in
mov
push
mov
cmp
sbb
loopne
xlat
sti
dec
mov
pop
or
cld
sbbb
dec
lods
mov
xor
and
enter
add
push
movsb
inc
mov
test
call
mov
xchg
roll
xchg
jae
add
add
adc
cli
lea
test
adc
cmp
jno,pt
daa
mov
int
jnp
sub
pop
cmp
popf
stc
test
pop
adc
mov
dec
add
xchg
loop
outsl
mov
pop
xchg
inc
and
pop
loope
nop
jmp
pushf
aad
xor
mov
xor
dec
push
xchg
dec
or
pop
xchg
dec
out
mov
cmp
cmp
adc
nop
mov
je
push
sbb
or
daa
mov
stos
mov
mov
xor
mov
push
adc
adc
sbb
cmpsb
icebp
dec
xor
loope
rclb
aad
daa
xor
inc
std
xor
jle
dec
enter
aas
das
popa
fwait
mov
mov
icebp
add
lret
int
sbb
loope
pop
sar
jnp
icebp
cmp
lods
imul
pop
bound
test
add
or
stc
adc
pop
sub
movsl
pop
into
test
int3
fwait
shll
mov
pop
push
test
aas
xor
rorb
decl
lods
ja
xlat
and
add
out
sub
dec
xchg
scas
and
out
fwait
aad
xchg
mov
xchg
jl
test
or
mov
pop
fmuls
loop
lret
sahf
pop
mov
add
fistps
jns
xlat
jle
sub
xchg
sti
rcrl
xchg
xor
xchg
mov
xor
in
pop
adc
repz
lret
and
in
cli
stc
xchg
push
fnsave
scas
xchg
cmpsb
es
fnsave
pop
inc
out
xchg
xor
adc
xlat
sbb
fcom
adc
mov
jg
fstl
fs
xor
popa
sbb
and
enter
daa
push
hlt
dec
insl
sbb
and
cmp
lods
lods
jmp
out
aas
cmp
add
adc
mov
movsl
xchg
push
xchg
xchg
sbb
push
sub
adc
jg
cmp
aas
push
mov
cwtl
inc
out
push
jnp
ret
addb
xchg
mov
stos
push
push
lds
sub
scas
out
push
ss
adc
jnp
addr16
cli
mov
jbe
adcb
inc
dec
push
movsl
cmp
ds
pop
test
xlat
cmp
pushf
sbb
dec
and
mov
mov
xlat
outsb
xor
xchg
sub
cmp
lret
mov
push
sub
sub
data16
push
adc
ret
jno
lret
loope
rcll
push
mov
mov
cmp
push
cmp
cli
push
mov
cmp
insb
fisttps
xchg
loopne
push
out
dec
pop
mov
hlt
or
ss
pushf
xchg
xchg
sbb
jb
xor
sub
push
mov
subl
out
xor
lret
cmc
mov
jbe
mov
and
idivl
out
into
daa
sbb
xchg
adc
insl
jecxz
mov
push
inc
ds
fistl
fimuls
lret
cmp
outsl
push
xchg
jmp
fs
and
inc
dec
shlb
cltd
ds
gs
mov
mov
mov
rcr
jmp
jno
por
pop
push
pushf
es
js
dec
xor
mov
aam
shlb
daa
pop
sbb
daa
outsb
cmpsl
mov
push
sbb
inc
sti
dec
add
stos
fwait
sbb
cmc
dec
loop
jo
mov
aas
mov
into
add
pusha
leave
adc
ja
into
in
inc
jae
mov
mov
inc
fbstp
sbb
cwtl
xchg
push
add
insl
xchg
adc
jmp
addr16
addb
movl
fldenv
cli
lret
imul
and
mov
les
jb
and
bound
mov
nop
stc
xor
inc
push
and
push
call
inc
or
sbb
xchg
ficoml
bswap
cmp
push
leave
sub
daa
std
push
in
jecxz
add
pop
dec
lret
popf
push
int
stos
add
push
pop
test
adc
sbb
aaa
sbb
xchg
pusha
mov
or
and
push
lcall
cmp
aas
mov
add
jo
xor
inc
pop
out
lock
dec
rcrb
sbb
add
adc
fistps
sbb
mov
iret
sub
jo
inc
mov
xchg
inc
push
arpl
jne
inc
lods
add
push
in
pop
pop
inc
rorl
and
cltd
mov
xor
sbb
jns
into
and
cwtl
mov
adc
mov
add
cmp
bound
rorb
cmpl
testb
mov
push
xchg
add
leave
in
inc
jle
cmp
out
xorl
cmc
adc
addr16
daa
jp
pop
faddl
dec
fdiv
movsb
outsb
xor
int3
in
aad
leave
mov
out
inc
rorl
das
xorb
jae
je
imul
sbb
mov
jns
dec
imul
pop
test
scas
pop
lcall
adc
mov
addr16
cltd
stc
dec
shlb
push
sbb
test
int3
xor
adc
mov
jno
mov
lcall
dec
cmp
pop
stos
add
ljmp
mov
mov
push
mov
je
int
nop
gs
dec
or
addr16
jbe
hlt
enter
test
ljmp
sbb
dec
lods
cwtl
std
and
lods
mov
and
xor
in
or
sti
push
push
push
inc
sub
icebp
jnp
sub
shlb
ds
push
movsb
stos
xchg
push
xor
repnz
loope
addr16
sub
jne
mov
ficoms
loopne
lock
das
nop
pop
pop
xor
add
sub
add
lahf
mov
pop
sbb
mov
rorl
fcmovu
xor
add
ret
inc
fdivrl
shlb
cmp
xchg
jne
in
mov
outsl
setg
fld
sub
sub
and
jno
fldenv
loopne
sbb
cltd
aaa
iret
push
sarb
loop
ret
jno
jno
pop
mov
sub
jns
cmp
xchg
cmp
adc
daa
add
divb
xor
gs
fisubs
popa
in
adc
jmp
dec
fwait
mov
jecxz
inc
dec
js
jp
mov
cltd
arpl
test
sub
repnz
jmp
cld
or
stos
dec
or
pop
std
lds
clc
sahf
mov
pop
out
lret
arpl
int3
adc
sub
inc
or
sub
dec
pop
dec
xor
data16
push
pop
cli
or
jmp
xchg
jge
add
outsb
test
or
or
dec
xor
mov
pop
add
iret
and
adc
inc
or
or
pop
cmpb
inc
mov
xor
xorb
pop
push
jg
xlat
jmp
adc
push
popf
push
jno
insl
mov
movsb
sbb
push
scas
mov
imul
in
fwait
imul
das
cmp
insl
pushf
dec
cltd
or
inc
pop
mov
out
andl
leave
cmpsl
imul
stos
add
mov
daa
mov
shlb
cmp
cmp
adc
and
roll
pop
cmp
out
push
mov
mov
push
iret
mov
aas
mov
cli
popa
pop
or
cmpsl
cmpl
sbb
cmp
cmpsb
paddusw
mov
cmp
ficomps
cld
fdivrs
pop
hlt
ret
dec
and
arpl
sahf
mov
cltd
movsb
xor
xchg
add
mov
into
inc
xor
adc
test
sub
addr16
mov
fsubl
mov
mov
insb
cmp
int3
push
fimuls
push
and
pop
sub
adc
or
mov
stc
cmp
cmp
cmp
lods
leave
clc
or
dec
cmp
pushf
aam
push
mov
or
dec
pusha
dec
and
insb
movb
xchg
fisubl
in
jmp
and
pop
push
and
cs
and
xlat
mov
jb
int3
mov
sub
push
push
push
data16
pop
push
sbb
dec
cmp
test
xchg
jmp
cld
add
sbb
dec
andl
sub
lret
pop
loope
mov
or
and
mov
fisttpll
cwtl
loop
rorl
imul
cmpsl
jae
inc
orl
pop
push
fadd
out
add
cld
insb
xor
or
mov
pslld
insl
js
test
mov
xchg
test
loop
or
pusha
sub
mov
jbe
jnp
lea
jo
inc
rclb
dec
mov
push
ds
push
clc
pop
pop
push
imul
sahf
lahf
loope
jnp
cmp
adc
xchg
out
add
add
cwtl
dec
xlat
add
arpl
cmp
mov
push
cli
sbb
cwtl
push
fwait
push
cmpsl
and
roll
ret
mov
in
or
icebp
pop
pop
je
out
mov
jg
xchg
push
and
pop
jne
add
cmp
in
fnstenv
loope
in
pop
ja
ror
mov
shll
int
std
inc
cmp
push
jbe
push
sub
fldl
in
pop
das
jg
jp
repz
ss
sbb
stos
sahf
clc
addb
sti
shrb
inc
stos
jge
aad
push
mov
jns
push
or
and
jge
outsb
inc
push
jns
loopne
aas
lcall
inc
andb
movsb
insl
sti
jle
test
jp
xchg
mov
add
mov
add
mov
scas
loop
call
cmp
cmpsb
ljmp
sbb
and
xor
push
add
xor
pop
pop
cmp
xor
mov
cmp
sub
jge
cmpsl
push
rcl
clc
mov
mov
stos
pusha
sahf
and
jecxz
push
add
pop
call
iret
into
in
mov
cmp
das
or
clc
jmp
inc
inc
inc
cwtl
hlt
mov
cltd
xor
icebp
iret
aam
xchg
push
nop
inc
xor
push
jo
jo
cmp
flds
in
mov
clc
and
pop
mov
ret
adc
std
fs
dec
test
stos
outsb
xor
pushf
push
divb
sbb
adc
loope
bound
and
adc
pop
sbb
cltd
ficompl
pop
sub
je
sbb
jnp
aaa
add
aad
sbb
faddl
mov
mov
xchg
fcomps
and
aas
or
lcall
cmp
push
fiadds
bound
cmc
jl
insb
jg
jo
xchg
daa
das
scas
leave
test
mov
add
fistpl
mov
mov
xor
fdivrl
setle
pop
rcrb
test
fisubrs
ja
rcll
push
dec
lret
adc
and
push
mov
repz
sti
and
lods
push
jp
xor
jbe
pushf
push
dec
out
sbb
cmp
icebp
dec
mov
out
push
adc
sbb
mov
xor
sub
add
fdivr
outsl
xchg
idiv
out
outsl
mov
out
jl
jp
pop
jg
mov
ljmp
or
in
leave
add
dec
insl
mov
call
mov
lds
inc
push
or
shl
fsubr
je
mov
or
or
xchg
in
mov
lds
es
jb
daa
jne
or
aaa
pop
ret
lahf
inc
ret
outsb
mov
pop
xor
das
int3
and
ss
mov
sbb
lods
or
and
xchg
xchg
pop
shlb
call
ret
shl
clc
ss
push
hlt
mov
mov
iret
fadd
ret
cltd
sbb
and
xchg
ret
adc
stos
pop
push
pop
movsl
xchg
pushf
adc
popa
mov
pop
popa
cmp
cmc
gs
adc
jecxz
inc
sub
js
sbb
mov
mov
cmp
push
and
daa
mov
insl
mov
mov
xchg
scas
fidivs
cli
push
int3
xor
xor
out
stos
pop
xor
imul
in
jp
sbb
cmp
popa
and
sahf
into
mov
xor
mov
xorb
jns
push
inc
ret
data16
xor
xor
sub
fwait
cli
cmpsl
shlb
cmp
and
cli
xor
subb
mov
xchg
aaa
push
data16
lret
add
push
lds
addr16
incl
aas
cmc
mov
sbb
in
sbb
imul
addr16
movsl
add
xchg
sub
scas
mov
out
pop
mov
adc
mov
push
mov
mov
add
pop
scas
call
aad
xlat
scas
pop
shl
std
or
lcall
sub
outsl
in
loop
aas
movsb
fidivl
cmp
aad
cmc
mov
cmp
cmp
pop
adc
lret
in
clc
loop
insb
adc
lahf
mov
leave
jb
ds
cmp
repnz
imulb
lcall
or
add
lock
pop
jle
mov
cmp
adc
shrb
pop
pushf
stos
mov
jns
mov
cmp
xlat
lcall
mov
or
xchg
xor
stc
repz
dec
sub
mov
pop
in
loope
jbe
out
orl
sub
xor
outsl
cltd
cltd
jecxz
lock
mov
cwtl
push
dec
cmpb
lods
xchg
sbb
mov
pushf
jg
stos
shrb
lret
call
jmp
pop
cld
into
cmp
and
mov
jne
mov
jbe
fdiv
insl
adc
and
hlt
cmc
sub
out
sbb
push
dec
jnp
test
in
popf
xchg
test
inc
xor
inc
addr16
jns
rol
les
dec
test
in
xchg
adc
sbb
inc
or
fisttpll
xchg
mov
sbb
or
sbb
pop
pushf
mov
push
insb
jbe
xor
push
out
dec
out
xchg
fildl
jo
cwtl
jg
out
dec
push
or
add
enter
pop
push
xchg
xchg
sbb
je
pop
pop
pop
repnz
data16
jae
jb
cld
dec
lock
out
aam
cmpsb
add
clc
and
ss
push
mov
push
dec
lret
and
test
sahf
popf
test
stc
aaa
popf
int
popa
jb
jne
outsl
out
insl
sub
cmpsl
push
sbb
sbb
dec
and
cli
jmp
dec
cmpsl
insl
mov
cmp
popa
into
popa
outsb
or
inc
stc
shl
inc
mov
cmpb
push
push
mov
sub
jbe
cli
xchg
jb
cmp
ficompl
popa
xchg
out
push
push
or
subl
imul
std
mov
fldcw
aad
insl
dec
add
aaa
sbb
movsl
xor
int3
add
cmc
inc
cltd
js
ret
and
mov
arpl
mov
mov
scas
dec
insl
nop
xlat
shll
test
lock
fsubl
jle
cmc
and
and
mov
adc
and
xor
rcrl
xor
dec
cs
push
ss
adc
jecxz
push
mov
adcb
sahf
fisubrs
xor
aam
sti
insl
movsl
les
bound
decl
adc
mov
rcll
movsl
inc
popf
add
push
sub
test
stmxcsr
xor
cmp
pusha
test
divl
ror
mov
pop
mov
xchg
adc
pop
rorl
fbld
mov
loopne
ret
jle
mov
loopne
add
mov
mov
jae
into
mov
sahf
push
popa
rolb
shll
add
or
inc
rcl
jb
setl
or
aaa
push
sahf
dec
leave
scas
rclb
je
add
das
xlat
cli
adc
mov
xchg
add
mov
mov
adc
push
sti
add
cld
xor
push
andb
ret
cltd
and
cs
int
sub
ret
faddl
dec
fs
xlat
enter
outsl
lret
cmp
sub
test
push
int3
push
adc
push
dec
xor
xchg
sub
sub
out
pop
cli
stc
loopne
sub
xor
cmpsb
mov
mov
add
inc
add
or
insb
jg
sub
jne
sub
inc
adc
pop
or
std
arpl
popa
pop
mov
adc
ret
cwtl
xor
lods
loop
cltd
stc
mov
add
push
xor
js
xchg
add
arpl
mov
push
sahf
scas
hlt
or
inc
inc
xor
aas
aaa
and
scas
jle
pop
jae
fcomps
das
sbb
sbb
fnstcw
dec
in
loope
mov
inc
or
jl
or
es
pop
add
xchg
mov
mov
adc
popa
sub
dec
sub
mov
fstpt
xor
in
jl
or
lock
fadd
xor
xor
cltd
sub
andb
in
lahf
adc
pop
leave
test
xlat
mov
and
cmp
xchg
hlt
xchg
int3
mov
mov
fcoms
xchg
mov
imul
jnp
and
xor
mov
test
orl
sbb
adc
or
fimull
int3
popf
adc
push
insl
enter
sbb
ret
popf
fnstenv
fs
dec
jne
popf
aam
cmp
xor
inc
xchg
jmp
decl
jne
lods
adcl
adc
push
hlt
xchg
bound
ds
xchg
dec
jns
lret
mov
ds
adc
lea
inc
dec
inc
mov
enter
out
xor
dec
jg
in
cmpb
pop
or
out
inc
xchg
mov
in
fcoms
mov
xor
mov
das
and
aad
pop
lret
ret
mov
or
pop
fwait
cmpsb
std
xchg
sbbb
cmc
xor
pop
pop
push
rolb
cld
lcall
cmpsb
aas
dec
fdivp
jb
mov
mov
dec
mov
dec
insl
cmc
inc
mov
mov
js
xor
and
fisubl
in
rorl
jge
dec
sarb
or
push
pop
in
xsaveopt
and
mov
shll
int
mov
fldenv
and
xor
out
clc
mov
sahf
jp
addr16
and
sbb
sbb
ds
pop
jae
insl
push
xlat
dec
sbb
fiadds
pop
fidivrs
aas
lcall
test
xlat
dec
addr16
mov
in
push
sub
fnsave
xor
adc
cwtl
xor
inc
dec
sbb
mov
repz
scas
std
enter
xor
push
adc
sub
leave
and
mov
pop
aaa
add
jnp
xor
mov
aad
cmp
cmp
fwait
mov
xchg
adc
testl
popf
fstl
push
and
inc
mov
pusha
rolb
push
xchg
movsb
fisttpll
mov
pushf
or
lock
int3
lea
xchg
cmpsb
loopne
in
mov
or
xor
test
dec
out
das
sub
xor
mov
push
ret
leave
xor
adc
mov
or
sbb
xchg
stos
mov
lds
jl
stos
std
fstpl
stos
es
jb
jmp
cmp
jp
push
inc
out
add
insb
mov
sbb
imul
lcall
mov
push
and
sbb
cmpsl
pusha
dec
in
xchg
mov
pop
pop
mov
xchg
pop
cmp
jo
inc
iret
pop
mov
cmp
xchg
pop
push
push
xchg
dec
sti
push
inc
cmp
add
jg
dec
testl
jl
lods
movsb
stc
stos
adc
cltd
dec
icebp
dec
pop
pop
xchg
sbb
je
dec
cmp
scas
roll
add
aam
add
and
wrmsr
dec
mov
mov
dec
je
adc
cmp
push
cmp
sub
movsl
out
es
loopne
fidivrs
sbb
lcall
mov
or
shlb
ss
cld
repnz
rcll
dec
xchg
mov
and
popa
jnp
push
sbb
data16
pop
out
dec
adc
jo
outsl
mov
sub
mov
sbb
test
inc
je
rol
outsb
pop
loopne
enter
sbb
adc
insb
push
test
aam
fistpll
dec
sbb
xchg
lods
jae
test
mov
ret
cld
mov
and
push
out
dec
lock
incb
xchg
ljmp
sbb
xor
lock
fwait
scas
add
ja
pop
jno
test
outsb
xor
jg
dec
pusha
bound
mov
cmpsb
shr
call
mov
test
mov
div
sbb
test
mov
and
out
jae
cmp
enter
sub
repnz
icebp
lea
data16
outsl
sub
adc
xchg
inc
xor
mov
in
es
ret
xchg
sti
pop
mov
or
jg
add
adc
mov
sub
dec
test
xor
ret
subb
out
rcr
pop
movsb
loop
lock
mov
out
jnp
add
sub
adc
pop
outsb
movsb
jmp
pop
mov
xor
pop
add
mov
bound
arpl
pop
pop
sub
jp
aaa
sub
fsubrs
ljmp
outsb
jno
adc
hlt
dec
int3
jns
dec
jmp
push
gs
mov
xor
popa
mov
sbb
fwait
int3
inc
aas
inc
pusha
in
sub
fidivs
movsb
cmp
rorl
loope
test
fistpl
in
lret
push
cmp
sbb
in
push
sahf
add
adc
out
pop
xor
popf
cmpsl
outsl
inc
mov
add
and
clc
xor
stos
cmp
scas
dec
inc
sbb
mov
xor
lret
xchg
leave
cltd
xchg
bound
in
stos
pop
incb
adc
and
sub
movsb
pop
dec
out
push
pop
push
jmp
out
adc
mov
and
pop
cmpsb
pop
repz
movsl
out
mov
pusha
fs
dec
mov
mov
mov
into
dec
fcmove
rol
xchg
sub
into
jnp
fst
les
hlt
icebp
aad
cld
out
in
rcrl
adc
movsb
loope
nop
push
jmp
jno
jp
mov
xchg
testb
mov
sbb
inc
stc
scas
pushf
jae
shrb
sbb
ret
lock
pop
aam
or
cmp
lods
fsubrp
pmaxub
test
stos
or
jle
stos
cli
sub
mov
dec
or
bound
mov
outsl
push
mov
inc
dec
scas
cmp
or
inc
scas
cli
inc
adc
aam
inc
insb
xchg
icebp
aaa
loopne
xor
xchg
pop
xchg
setg
fcompl
adc
addr16
push
dec
mov
test
push
divl
aaa
pushf
or
lret
push
xor
and
and
sbb
jg
xchg
pop
push
arpl
mov
outsb
mov
xlat
lahf
add
out
faddl
test
cmp
push
popa
fwait
sub
icebp
jle
imul
or
ret
push
movsb
inc
mov
test
cmp
mov
mov
and
mov
mov
lahf
call
inc
repnz
push
adc
sahf
push
or
fnstsw
inc
xlat
add
ret
imull
jnp
out
andl
adc
pop
push
pop
cmpsl
jle
or
lods
add
gs
movl
xor
and
cltd
jne
adc
pop
push
mov
mov
or
push
ficomps
lods
xor
push
sbb
mov
inc
dec
jmp
cltd
out
pop
push
and
xor
xchg
mov
es
jg
xor
ret
jo
sarl
jp
popf
inc
jo
adc
mov
fdivl
add
mov
mov
fstps
in
and
ss
jo
repz
mov
push
ss
cltd
jne
icebp
stc
dec
hlt
dec
add
dec
stc
rol
lret
cmp
mov
mov
inc
add
out
sahf
dec
into
inc
jb
inc
push
stos
xor
mov
mov
or
dec
iret
xchg
push
loopne
inc
or
sti
pop
es
push
mov
mov
daa
sbb
or
jecxz
mov
or
je
cmp
ds
popa
mov
lock
or
call
push
mov
dec
jmp
inc
mov
push
xchg
ljmp
gs
add
sub
inc
jne
add
scas
fwait
add
dec
mov
or
xchg
loope
insl
loope
dec
sti
shlb
lret
inc
xchg
xchg
jns
push
rcrb
rcll
inc
jbe
adc
fnsave
clc
scas
mov
repz
arpl
cmpsb
push
test
shll
or
cwtl
mov
ds
fcomp
lret
jle
in
push
andl
in
mov
pop
movsl
lea
dec
int3
mov
ret
bound
pop
pushf
dec
movsl
sub
shrl
nop
or
loope
mov
jnp
and
push
sub
jg
mov
xor
jecxz
xchg
cmpsl
cwtl
lods
jp
mov
sub
gs
enter
call
lcall
and
pop
ljmp
cmp
lods
sub
lcall
lea
in
mov
pop
xor
cmc
pop
xlat
sti
inc
cmpb
test
cmp
ds
or
test
fidivrl
adc
sub
pop
mull
sbb
test
lahf
xor
dec
mov
push
mov
cmpsb
sub
sbb
push
repnz
lcall
xchg
faddl
aas
ret
outsl
aad
jae
rolb
inc
sbb
out
ret
xor
and
or
cld
jne
pop
jmp
flds
and
mov
xchg
fadd
xchg
scas
sub
pushf
mov
cli
sub
test
lret
jecxz
enter
jge
mov
cmp
jg
or
push
repnz
cli
ljmp
or
aaa
mov
pop
andl
adc
xor
dec
push
xchg
xlat
std
movsl
mov
addr16
fdivs
aam
repnz
adc
fcoml
xchg
dec
adc
decb
add
inc
pop
stc
or
push
or
push
pushl
insb
and
das
out
or
lock
enter
xchg
mov
cmp
adc
adc
sub
mov
adc
mov
and
sub
fs
fs
pushf
data16
and
push
and
insl
jl
popl
subb
sub
xchg
inc
repz
dec
dec
enter
dec
lds
sbb
fcmovnb
outsb
pop
lods
test
test
sete
jns
cwtl
sbb
adc
pop
enter
push
push
mov
xchg
mov
adc
jg
out
and
cmp
or
sub
xor
mov
xchg
push
mov
fadds
mov
fnstenv
das
das
jns
fildll
fsubr
mov
mov
push
and
cli
cld
popa
scas
or
xor
push
call
ret
mov
loope
sub
and
mov
xor
mov
test
sarb
lret
cs
xchg
or
stos
insb
push
xchg
push
int3
dec
fwait
aaa
push
xor
pushf
inc
aaa
cli
pop
int3
andl
or
xor
pop
jno
mov
cmp
xchg
push
dec
mov
jg
cmp
enter
dec
cmp
sbb
popf
or
loope
cmp
outsl
aad
popf
lock
add
sbbb
aad
ret
ds
sub
in
ret
or
mov
out
loope
mov
push
mov
cmp
inc
imul
push
pop
sbb
aaa
pop
imul
fstl
insb
inc
cmp
or
xchg
jp
mov
mov
and
out
sub
inc
jo
lea
xorb
rcr
pop
mov
cmp
pop
jmp
push
xor
or
ss
and
pop
sbbl
inc
sbb
mov
fidivl
loopne
xchg
scas
stos
pop
dec
xchg
pop
push
jbe
mov
sbb
mov
fdivs
jns
adc
inc
jnp
fists
test
sbb
xor
aam
cmc
mov
inc
inc
mov
push
push
or
adc
js
call
or
repnz
inc
pop
lea
andb
stos
lods
imul
jno
insl
push
sbb
cmp
call
imul
mov
sub
mov
jecxz
lods
xor
cwtl
jge
add
inc
sbb
pop
push
cmp
inc
pop
xchg
in
push
mov
mov
mov
in
push
shll
jle
ds
jae
adc
das
insl
push
shll
cmp
pop
jno
sbb
aam
aad
adc
xor
popf
mov
cmp
lods
xchg
push
shrl
movl
mov
popa
popa
movsb
cmp
popf
xor
hlt
loope
rcrl
cmc
dec
movsl
add
mov
test
jo
pop
lret
rol
cmp
mov
xchg
jp
mov
jge
adc
cmp
aas
movsl
pop
or
sarb
and
dec
iret
mov
dec
mov
or
xor
pusha
sbb
cld
in
test
out
xchg
cmpl
pop
ror
lock
stos
or
jns
dec
enter
ret
push
pop
ret
cmp
jmp
insb
or
cli
mov
sbb
xchg
pop
xchg
jbe
mov
push
sbb
sub
cltd
popa
adc
stos
lcall
mov
stc
rcrb
mov
or
and
dec
test
cs
and
push
xor
pop
pop
mov
jns
inc
test
outsl
stos
mov
push
shll
jno
iret
jnp
jae
mov
mov
push
in
pop
out
and
lea
jno
dec
mov
push
sbb
pop
sub
into
or
push
adc
sub
lock
popl
es
adc
movsl
aad
lods
jp
sub
out
cmp
stc
cmp
and
movsl
movsl
xor
filds
mov
cmp
sub
jmp
mov
in
jl
outsl
lahf
mov
mov
inc
cld
aaa
daa
movsl
or
ja
mov
xor
shll
ret
aaa
mov
fidivs
sub
ret
mov
xor
in
int
sbb
icebp
pop
jg
sbb
mov
and
jle
cmpl
mull
imul
jnp
dec
mov
or
and
mov
fbstp
ljmp
cmp
xchg
andl
lea
paddusb
gs
xchg
lret
fbstp
imul
mov
ss
rolb
push
hlt
stc
push
mov
stos
push
or
pop
cwtl
fbstp
pop
sbb
add
mov
inc
add
iret
lods
inc
sub
add
or
lods
sar
test
ss
or
mov
fisubrs
mov
aad
jne
pop
jle
les
or
cwtl
mov
or
jmp
add
mov
movl
pushf
in
imul
sub
sbb
clc
pop
lcall
dec
arpl
in
and
inc
cli
loop
xlat
pushf
xchg
xchg
cld
stos
lret
mov
int
imul
daa
in
popa
cmp
xlat
cmp
test
and
xchg
jge
aad
xchg
es
adc
loope
data16
scas
shlb
sub
cwtl
cs
mov
or
scas
clc
jmp
dec
aas
aaa
jnp
aas
xchg
sbb
push
ffreep
jmp
mov
push
outsl
pop
sub
push
xchg
sub
ss
into
leave
std
jbe
jecxz
hlt
xchg
sub
mov
dec
arpl
xchg
neg
in
aam
inc
in
inc
add
movsl
arpl
frndint
pop
xchg
imul
and
iret
popa
sbb
xor
pop
pop
and
clc
pop
sarl
cs
push
out
xor
aad
lcall
sub
jo
pop
adc
push
pop
lea
mov
sbb
pushf
das
call
fwait
and
mov
decl
and
mov
addr16
push
ja
idivb
imul
sbb
pop
std
sub
pop
jge
lret
xchg
mov
cmp
push
cmpsb
cli
lock
aaa
inc
or
aaa
movsb
mov
xlat
lcall
insb
xchg
mov
cwtl
push
out
jo
stos
xchg
push
inc
pop
iret
or
sub
cmp
sub
mov
mov
loopne
and
test
push
jl
rol
outsl
cli
or
ret
lahf
pusha
mov
testl
adc
adc
mov
sub
adc
xchg
xchg
int3
sbb
lds
add
pop
cmp
mov
insb
dec
add
add
decb
imul
in
adc
sbb
jno
mov
arpl
add
nop
iret
cwtl
testb
pop
sub
dec
movsb
fwait
iret
dec
lods
loop
sahf
aas
mov
adc
cmp
call
sarb
data16
in
aad
dec
pop
inc
hlt
repz
daa
nop
shlb
mov
into
sub
add
xchg
pop
jnp
jmp
push
lods
or
cli
cmp
cmpb
jmp
push
int
imul
dec
xchg
hlt
pop
fcmovb
ret
ficoml
lahf
popf
push
pushf
jle
mov
adc
xor
les
dec
int
mov
lret
ret
stos
xchg
add
or
cs
jo
sbb
dec
ljmp
add
fnsave
enter
jmp
fmulp
xor
mov
mov
movsb
iret
jge
jl
cwtl
andb
sahf
aam
and
imul
dec
lds
ljmp
dec
push
scas
es
leave
std
push
xlat
pop
pop
daa
cmp
ret
push
fistl
inc
jmp
in
bound
and
mov
pop
jne
cmp
mov
dec
dec
pushf
fsubr
jno
push
leave
mov
cmpb
push
aaa
test
mov
js
fs
xchg
inc
aaa
test
inc
adc
xchg
stos
mov
popa
into
adc
call
std
lods
fwait
sub
or
lods
jge
xchg
add
mov
mov
mov
dec
jnp
and
cmp
and
xchg
repnz
adc
in
xchg
sahf
mov
aad
loop
lret
aaa
lods
xor
cltd
jle
ja
pop
out
ret
aas
jne
pusha
xlat
jne
add
loop
adc
mov
out
cmc
pusha
cli
int
push
sahf
mov
mov
fs
inc
xor
xchg
in
mov
sti
jb
arpl
sbb
pusha
push
and
lock
mov
dec
fstpl
xor
push
dec
xchg
cs
or
pop
or
jns
clc
pop
xor
movsb
add
add
dec
add
cmpsl
or
adc
jecxz
cld
movsl
jne
xlat
dec
add
gs
cs
inc
cmc
cmpsb
inc
sub
sti
in
mov
jp
inc
mov
push
cmpsb
push
lods
jne
inc
sub
jne
das
push
xor
or
rcrb
rolb
lods
sahf
movsl
push
cmpsl
cltd
mov
aam
cwtl
cmp
testb
dec
ficompl
enter
mov
lods
lret
jmp
jae
sbb
xor
xorl
cltd
push
lods
xchg
xor
adc
xchg
push
cmp
and
rolb
jns
imul
lods
rorl
mov
inc
repnz
mov
pavgb
fst
pop
jne
jns
out
jae
push
cli
incl
nop
push
repz
ljmp
fbstp
lret
ror
pop
ss
mov
push
shrl
stc
dec
and
adc
repz
fldl
aaa
or
out
mov
sbb
cmp
mov
push
and
push
stos
into
fwait
mov
mul
outsb
aas
sti
sbb
hlt
leave
pop
sbb
aas
les
ljmp
or
pop
lcall
inc
cld
loope
into
push
nop
nop
dec
dec
push
jae
shlb
bound
mov
pop
cmpsl
xorb
lcall
push
mov
lahf
pop
fisttps
push
mov
xchg
dec
push
inc
les
adc
mov
mov
xchg
xor
adc
xor
test
sbb
mov
cld
mov
mov
loopne
mov
push
jne,pt
push
adc
lods
scas
imul
ja
pop
in
call
mov
jo
xchg
popf
repz
xor
xor
enter
faddp
cmovs
mov
add
jle
mov
cmp
repnz
pusha
xchg
mov
or
in
fisubs
negb
and
add
gs
dec
nop
sub
shrb
push
movsl
loopne
add
icebp
xor
iret
outsl
jle
enter
dec
ja
push
sub
sbb
mov
lea
ja,pt
pop
addr16
into
mov
test
and
cmp
dec
add
lahf
mov
outsl
repnz
mov
sbb
cmp
lret
leave
imul
pop
das
add
je
fwait
inc
in
xor
add
rclb
pop
lret
in
push
ficompl
call
mov
mov
repnz
push
test
and
loopnew
mov
rcrl
std
ret
aad
lcall
mov
or
sbb
xor
mov
xor
dec
jb
inc
cmpl
icebp
cltd
push
add
xorb
ljmp
cmpb
jl
adc
mov
xlat
adc
jg
lock
mov
jae
or
pop
sbb
cmp
mov
add
inc
int
jo
leave
jb
loop
xor
jp
mov
js
jmp
dec
fldl
dec
fsts
sub
sub
lds
xchg
jge
sub
in
out
adc
push
mov
or
icebp
icebp
xor
inc
inc
mov
lahf
jp
fmuls
and
xchg
ret
sti
pop
and
enter
jae
push
ror
mov
mov
push
jae
hlt
mov
mulb
test
lods
jle
mov
dec
frstor
mov
and
lcall
pusha
clc
pop
movsl
push
shl
push
scas
add
jbe
pop
rorb
push
cmp
std
jge
ds
call
cld
push
nop
and
inc
xchg
dec
push
add
mov
aaa
jo
insl
add
arpl
and
pop
fsubrs
xor
fsts
loope
jmp
fcmove
jb
repnz
movl
cltd
rcrl
fidivl
mov
cmp
or
shr
repz
pop
les
or
mov
mov
xchg
or
sbb
insb
stc
add
push
shrl
ljmp
jge
je
rclb
dec
adc
imul
dec
inc
or
les
int3
lcall
outsb
scas
mov
add
jb
adc
mov
cltd
lock
and
xor
dec
mov
push
mov
shrb
mov
or
jo
adc
leave
and
shl
mov
push
sub
movsl
cmp
sub
fsubl
xor
sarb
mov
push
push
mov
mov
cmp
cmp
clc
inc
push
xor
imul
scas
loop
lcall
adc
repnz
imul
sarl
jmp
or
pop
inc
or
jp
fidivl
popa
jns
aaa
ss
mov
fisttps
mov
push
xor
repnz
outsb
or
sub
in
mov
xor
movsl
pop
push
jecxz
add
sbb
ss
add
pop
outsb
inc
sbb
dec
jl
cmp
les
ss
lds
sti
cmp
or
mov
ret
pop
lahf
or
frstor
push
sti
and
inc
jle
pop
mov
jmp
push
jnp
adc
pushl
pop
stc
aam
imul
jns
inc
pop
insl
leave
movl
cs
pop
dec
aaa
imul
nop
ljmp
xor
es
or
inc
pop
arpl
fcompl
sub
push
adc
out
ret
mov
test
inc
pop
jae
scas
data16
or
mov
push
pop
or
iret
js
jae
jnp
xlat
gs
mov
clc
or
sahf
dec
in
adc
pusha
mov
adc
insb
add
cmp
mov
lahf
iret
repnz
test
mov
scas
iret
into
movsb
push
jmp
push
stc
xchg
std
pop
push
mov
adc
test
pop
out
or
stc
ds
inc
cmp
jl
lret
xor
and
mov
movl
xchg
inc
pop
ret
adc
xchg
fidivrs
sbb
movsl
add
jbe
dec
adc
je
lcall
pop
push
jno
mov
int
cmpl
sbb
lods
mov
add
lahf
inc
mov
pop
pop
jne
push
nop
mov
and
jge
lods
std
jg
mov
xchg
popa
ljmp
mov
add
iret
push
scas
adc
xchg
iret
xlat
iret
iret
jp
sub
js
jle
rcrl
jge
test
outsl
fcoml
pop
or
sti
dec
rcrb
push
iret
xor
repnz
push
pop
mov
push
mov
mov
push
test
xchg
pusha
rolb
sub
add
mov
pop
or
dec
cmp
mov
stos
out
shrl
or
popa
pop
jb
in
push
lods
cmpsb
jle
inc
enter
xchg
lcall
jae
outsl
cmp
mov
gs
gs
jl
daa
jmp
inc
fnsave
cmpb
jmp
cmp
pop
test
fdivrs
stc
nop
mov
rolb
sub
fwait
roll
xor
repz
std
sub
pop
das
push
iret
mov
xor
pop
add
stos
inc
inc
mov
jns
and
in
add
hlt
mov
int
hlt
sahf
enter
scas
cmpsb
mov
inc
mov
cwtl
lea
fcomi
popf
pop
jns
xor
int
cmp
outsb
cmpsl
dec
cmp
mov
cli
mov
push
jns
add
xchg
enter
inc
or
mov
xor
inc
mov
aaa
aam
lds
mov
jge
ss
roll
rorl
cwtl
loope
adc
adc
inc
mov
sub
xorb
dec
inc
lret
lds
adc
cwtl
pop
xchg
inc
push
xchg
pop
xor
cs
testb
pop
cmpsb
shlb
and
mov
mov
movsl
and
cld
and
lods
lcall
scas
sti
call
loop
ss
stos
leave
add
cmc
mov
add
stos
cmp
scas
sbb
mov
jne
add
adc
test
mov
dec
xor
xchg
jno
push
mov
insb
adc
cmpsl
push
data16
jg
mov
mov
xor
dec
mov
cmpsb
flds
addr16
dec
orl
call
jne
inc
cmp
les
rcll
ficoml
aad
mov
fsubrs
sar
push
cmp
pusha
dec
xchg
fwait
mov
adc
xchg
push
out
add
push
daa
inc
adc
sbb
loope
sub
icebp
add
daa
out
test
sbb
dec
pop
ds
fsub
ficoml
push
xchg
adc
xor
pop
xchg
pop
inc
sbb
pop
dec
iret
int
movsl
pusha
xor
or
jno
push
mov
mov
lcall
ret
test
std
push
pop
pop
adc
or
or
mov
pop
cmc
test
aam
out
cltd
into
xchg
adcb
js
mov
loopne
lds
xlat
ss
aad
cmc
aam
pop
jmp
sub
jbe
push
adc
sbb
addl
in
fsubr
xor
mov
mov
imul
xor
mov
cmp
fldl
sub
pop
imul
cmp
ljmp
and
repnz
jbe
mov
movaps
push
add
mov
rorl
in
fstpl
cmpsb
xchg
mov
mov
mov
and
inc
lock
push
push
mov
mov
xlat
add
mov
int
inc
fwait
mov
and
dec
mov
push
sub
repnz
push
mov
shll
aas
insl
cltd
cld
ljmp
int
mov
rcrb
lahf
push
mov
push
dec
pop
aam
inc
iret
fdivl
pop
xorl
xchg
dec
repz
insb
popa
or
adc
lods
push
xchg
or
or
xchg
mov
adc
clc
outsb
dec
push
std
dec
pusha
jo
rcll
push
movsb
push
jb
aas
scas
insb
in
add
sbb
out
sbb
adc
test
inc
pop
pushf
or
iret
in
cld
inc
xchg
mov
ljmp
das
and
add
pop
stc
je,pn
into
sub
test
lods
mov
pop
pop
jl
or
out
or
icebp
iret
fisubrs
or
fidivrl
aad
mov
jbe
fnstsw
pop
aaa
mov
js
sbb
inc
lret
popf
test
aam
xor
xor
lock
test
fs
stc
stos
jns
outsb
out
push
inc
fadds
cmovno
adc
clc
mov
cmp
das
vfmsubps
pop
xor
adc
add
jmp
mov
cmp
add
je
gs
cmp
mov
push
or
dec
jb
aaa
movsl
dec
mov
fadds
lock
push
or
sub
mov
pop
adc
rol
adc
dec
fabs
inc
inc
cmc
lret
push
mov
aaa
cmp
or
test
mov
sti
mov
push
les
inc
cmp
dec
and
sbb
lock
inc
sub
daa
and
xchg
ja
dec
jns
inc
fistpll
imul
mov
mov
dec
inc
push
mov
cmp
lds
jb
in
push
sbb
lods
mov
jo
cld
push
add
pop
retw
pop
cmp
lret
insb
jecxz
cmp
push
aam
aas
aas
lods
cmp
add
xchg
icebp
mov
fwait
mov
cmpsl
adc
mov
cli
lock
in
daa
xchg
inc
push
fcomps
and
push
pop
enter
sub
jo
push
popf
and
sub
in
shll
push
mov
adc
xor
add
addr16
loop
adc
lock
pop
mov
ret
push
xchg
daa
bound
dec
jle
fdivs
or
loope
ret
outsl
adc
sbb
cld
xor
call
setge
in
aam
and
xor
std
vmovaps
mov
sub
inc
adc
mov
mov
mov
xor
leave
inc
mov
in
rcll
jo
push
mov
xor
imul
cmc
xchg
aad
push
out
push
test
mov
xlat
popf
fimull
sahf
mov
fwait
and
sbb
cmp
shrb
xchg
insl
ds
jl
and
aaa
mov
xlat
or
sbb
jae
lods
orb
cmp
mov
subl
sub
leave
lret
xor
mov
inc
stos
jp
pusha
xor
movsl
fwait
mov
iret
orl
add
mov
dec
bndstx
jmp
fidivl
push
je
aas
lods
call
inc
or
arpl
insb
inc
or
mov
mov
cmp
test
or
push
repz
mov
sbb
lods
push
pop
or
popf
xor
fidivs
add
inc
pushf
std
sbb
in
add
std
es
inc
mov
cmp
add
push
xchg
fcmovne
or
xchg
outsb
add
outsb
or
mov
xchg
inc
pop
cli
xlat
std
lock
push
adc
sbb
stos
mov
aas
sub
aad
imul
jb
int
div
es
icebp
and
mov
daa
fidivs
roll
push
sub
jmp
jae
xor
pushw
mov
jne
ja
insb
lret
iret
pop
push
cld
dec
mov
mov
cmp
xchg
iret
insl
sub
shr
add
jl
xorl
xchg
addr16
adc
cmc
mov
test
out
cmp
bound
mov
cmp
shll
leave
pop
mov
cmpsl
sub
data16
data16
popf
add
mov
jno
push
add
and
aas
iret
insl
jns
and
orb
mov
mov
jg
ss
clc
cwtl
mov
and
pop
mov
sbb
jg
ja
mov
fildll
lea
loopne
or
shrl
or
xchg
pop
in
and
mov
or
inc
cmp
fsubl
xor
jo
pushf
sahf
jle
dec
inc
rorb
rcll
mul
aas
jnp,pt
pop
popf
fwait
mov
mov
or
sbb
push
lret
loopne
sbb
fsubrl
scas
add
pop
arpl
in
sub
add
movsb
xchg
inc
xor
out
nop
aad
dec
jmp
inc
arpl
push
movl
cmc
out
xchg
cli
dec
mov
lcall
cmc
shrl
or
insb
or
jecxz
gs
mov
mov
into
adc
repnz
pop
add
adc
ds
inc
xchg
pop
rcrb
mov
cmp
scas
lods
rcll
out
lock
jae
add
es
outsl
scas
gs
jno
in
jecxz
pushl
add
pop
cmp
xchg
lret
sub
inc
out
std
clc
lahf
dec
loope
pop
ja
pop
adc
repnz
mov
mov
adc
popa
pop
ds
push
jo
mov
dec
repnz
popf
xchg
sub
xchg
out
inc
rolb
cmpsl
adc
xor
stos
in
jb
orl
fisubrl
dec
mov
jecxz
andb
push
add
repz
jle
repz
and
loope
jns
in
push
mov
repnz
mov
outsl
je
iret
or
cwtl
jmp
fs
and
push
and
xchg
dec
fcmovb
insl
xchg
sub
in
push
cld
dec
push
mov
mov
insl
add
mov
inc
cmp
out
ret
pop
jg
mov
insb
sub
jle
inc
insl
ljmp
push
jmp
imul
inc
cltd
jb
rclb
mov
xor
and
fs
es
lea
xlat
mov
or
stos
dec
inc
add
fdivrs
cmp
movsb
pop
xchg
dec
jl
cld
xchg
leave
sbb
out
mov
lahf
ds
pusha
pop
stos
mov
shl
loope
mov
inc
inc
pop
xchg
push
lds
jno
inc
cli
xchg
fucomip
mov
ja
lods
sbb
mov
cmp
mov
iret
cmp
jno
push
scas
call
lea
pop
std
mov
cmp
mov
mov
scas
pop
jmp
ss
jecxz
psubq
inc
lea
in
in
sbb
mov
mov
inc
rclb
mov
mov
push
add
dec
jb
dec
in
and
cmp
sub
cwtl
pop
fsubl
into
push
ja
and
xlat
xchg
nop
jp
dec
jbe
iret
gs
arpl
and
sbb
jo
ret
call
inc
mov
sbb
fimuls
xchg
mov
mov
cmp
stos
mov
inc
jb
inc
or
pop
xchg
mov
sar
mov
pop
push
stos
jmp
mov
dec
lret
fsub
daa
push
cmpsb
mov
shr
inc
inc
pop
insl
gs
icebp
mov
mov
push
std
popa
in
int
das
adc
sub
xchg
xor
ja
xor
lcall
cmpb
jg
repz
add
aaa
lahf
repnz
jns
pop
jmp
je
movsb
aaa
jecxz
push
sbb
pusha
pop
ljmp
std
adc
mov
push
pop
in
sti
or
mov
mov
enter
or
fwait
xchg
gs
mov
scas
and
sbb
add
in
movsl
aas
jge
push
jbe
js
add
and
imul
and
fmuls
mov
cltd
insl
data16
and
sbb
rolb
mov
data16
push
or
mov
cmp
mov
cld
push
mov
mov
adc
divl
xchg
mov
add
dec
imul
mov
hlt
decl
decl
xchg
es
cmpsb
adc
add
mov
jae
andl
aas
out
cli
sub
fistl
inc
roll
xorb
shrl
sbb
ljmp
mov
inc
cmpsl
scas
icebp
pop
jmp
xor
insb
enter
inc
dec
js
outsl
jb,pn
pop
lret
jp
decl
sahf
push
mov
pusha
mov
adc
movsl
xor
jae
dec
insl
psrlw
sbb
inc
mov
repz
insl
xor
sub
movlps
jne
test
jo
lods
sbb
or
inc
cmpsl
mov
fsts
add
movsl
data16
and
and
inc
rcrb
push
cmp
js
cltd
xor
lds
mov
fidivrl
sub
stos
mov
cwtl
bound
iret
mov
or
mov
imul
xor
ret
mov
mov
shll
iret
push
repnz
lahf
adc
into
lahf
stos
inc
cmc
inc
mov
sbb
aas
notb
xchg
inc
push
pop
xlat
jo
adc
jge
lcall
std
sahf
clc
popa
cmpb
movsb
out
iret
mov
mov
push
add
mov
imul
mov
push
push
sbb
pop
pop
cmp
pusha
dec
pop
sbb
add
or
daa
sbb
xchg
dec
mov
push
ja
sbb
and
dec
or
sarb
es
fstpt
xor
mov
sub
stos
in
ss
dec
add
repnz
hlt
sbb
pop
movsb
add
push
aad
jle
inc
fdivl
imul
out
fadd
stos
pop
jno
cwtl
sub
push
xchg
sbb
cmpsb
add
fcmovbe
or
jnp
jne
pop
fiaddl
inc
repz
dec
or
int3
jns
das
aaa
clc
insb
lret
psrlq
inc
inc
cmp
jae
add
xchg
mov
mov
or
or
jbe
fsubs
leave
fyl2x
call
xchg
add
jmp
pusha
sub
bound
pop
jg
xor
notl
dec
xor
in
out
mov
adc
push
addr16
jp
add
aaa
rorl
xor
dec
mov
jmp
mov
mov
jmp
pop
add
and
xor
xchg
cld
inc
in
adc
loop
fsubl
add
repz
icebp
add
lret
lret
mov
cmp
outsl
cs
js
xchg
rcr
cltd
cli
adc
inc
pushf
adc
xchg
gs
pop
popa
push
pusha
or
xchg
cltd
push
ficoml
inc
or
test
xchg
aam
push
mov
add
mov
mov
int
mov
xor
mov
xchg
and
jecxz
daa
cmp
int3
push
cmp
xchg
imul
jmp
test
cmp
mov
shll
jge
fwait
jno
lcall
and
lea
idivb
sub
cmp
inc
sahf
mov
lret
dec
sbb
xor
test
ret
mov
inc
adc
xchg
dec
or
or
popf
inc
imul
sub
fsub
dec
push
or
cli
jbe
leave
fnstenv
cmp
push
fs
and
xor
jne
mov
pop
add
add
leave
lcall
out
add
jmp
js
repz
dec
mov
inc
sub
xchg
xor
pop
jp
inc
js
aas
lock
lds
jge
bound
add
scas
jno
scas
les
shl
cmp
lock
aas
or
out
sbb
cmp
jo
ret
push
dec
lcall
mov
xor
stc
in
popa
out
ret
inc
sbb
cmp
or
aaa
dec
jno
aaa
lea
inc
xor
pop
aas
fs
insl
push
pop
ja
scas
cwtl
nop
add
in
jo
daa
loope
and
inc
pop
mov
sbb
aaa
shlb
cmovge
fiadds
add
aaa
pushf
add
ljmp
scas
sbb
mov
cmp
sbb
mov
mov
shll
ret
inc
pop
iret
loopne
sbb
push
sub
mov
das
jg
mov
test
mov
xchg
aaa
popf
rcrl
addr16
pop
fcompl
fsub
push
sbb
popa
test
cli
pop
push
pop
xchg
dec
fcmovu
dec
lock
jmp
cmpsl
ja
inc
jle
mov
cmp
outsb
test
rcrl
enter
xchg
test
lret
mov
mov
test
mov
ret
in
mov
iret
jle
lock
outsl
mov
sbb
out
in
add
lea
and
lea
ret
push
xor
adc
jne
cmc
lock
add
adc
xchg
and
xchg
inc
mov
and
outsl
or
mov
dec
dec
les
ljmp
inc
test
shll
cmp
insb
push
iret
jmp
mov
add
test
inc
or
push
mov
in
jb
stos
test
in
lcall
leave
pop
or
xchg
dec
mov
sbb
jecxz
sahf
push
mov
loope
sahf
pop
add
push
cwtl
es
iret
fstpl
test
scas
scas
lods
dec
push
sti
gs
xchg
xor
mov
fxch
xchg
cmp
mov
xchg
daa
ret
cmc
fistl
in
push
inc
mov
sahf
ficompl
addr16
addb
mov
jno
dec
lea
jp
dec
mov
out
jae
loop
aaa
das
bound
loop
ret
dec
cmpsl
sub
mov
jbe
adc
inc
mov
pop
xchg
shr
sub
adc
movl
xchg
xor
mov
pop
add
sbb
ljmp
adc
dec
push
pop
add
cltd
dec
iret
xor
lret
sub
gs
les
xor
adc
xchg
xchg
sbb
add
pop
push
sbb
ret
dec
hlt
xchg
xacquire
push
jl
add
add
fdivl
shll
popf
jb
jp
leave
pop
test
jge
shrb
dec
sub
push
decl
shl
dec
jno
xchg
cmp
jg
insl
add
subl
in
and
mul
jns
inc
fisubrl
jge
dec
leave
pushf
add
hlt
push
sarl
fnstenv
pop
frstor
pop
push
dec
push
ja
jo
dec
arpl
int
push
idivb
sub
jg
bound
xchg
lds
and
push
inc
xlat
mov
mov
pop
push
lock
sub
xchg
jp
jne
xor
sbb
jl
in
mov
das
fldcw
mov
pop
xor
daa
and
fs
xlat
add
movb
popa
pop
xor
jae
cmp
aas
test
pop
dec
pop
lea
mov
lcall
push
notl
scas
std
fs
pop
lods
jnp
scas
scas
in
lock
pusha
lea
cmp
push
jmp
mov
repnz
xchg
ss
adc
loop
ja
mov
aaa
in
stc
cmp
dec
popa
stc
int
xchg
imul
out
repz
imul
test
mov
daa
imul
lahf
inc
shll
std
test
icebp
rcl
cld
xor
jo
iret
aam
out
mov
mov
push
lret
xchg
enter
mov
aas
pop
mov
lret
lock
xor
or
mov
sub
stc
mov
shlb
test
rorl
mov
sbb
xor
jge
inc
cwtl
cs
or
xor
or
inc
int
cmc
jbe
and
loope
and
cli
mov
inc
dec
push
mov
ja
mov
leave
mov
add
and
movsb
loopne
popa
add
mov
or
out
adc
push
test
lret
das
cmp
sahf
stos
mov
mov
imul
push
dec
ror
fsubrl
cwtl
loope
in
adc
pop
xor
mov
mov
mov
mov
mov
push
insb
outsl
fiaddl
stos
scas
cmpsl
push
jo
dec
pop
mov
sbb
and
insl
js
jne
mov
ss
xchg
mov
aas
dec
into
in
push
seta
stc
xchg
pop
cmc
or
adc
cmp
shlb
push
cmp
cmp
pop
adc
ret
cmpsb
pop
jo
lods
jnp
sub
sbb
push
xchg
mov
mov
in
cmp
xor
shlb
das
mov
pop
pop
sub
ret
in
and
xorl
das
inc
push
mov
scas
dec
icebp
xchg
and
imul
test
push
adc
sub
jge
pop
push
frstor
mov
jge
mov
sub
movsl
xchg
hlt
cwtl
std
gs
mov
inc
adc
hlt
cmpb
lahf
faddl
add
movsl
pop
stc
in
sti
push
inc
add
les
test
lahf
cmp
dec
pop
shll
outsb
es
mov
jmp
stos
inc
xlat
add
mov
pop
pop
mov
int
or
jmp
stos
ror
loop
or
sub
jmp
jo
jle
dec
das
jmp
push
icebp
adc
xchg
and
daa
and
stos
mov
fdivp
and
sub
cltd
fcompl
incb
in
sub
xor
push
mov
inc
pop
shl
mov
gs
pushf
xor
adc
stc
pop
hlt
ret
sub
mov
mov
cmc
cmpl
mov
ss
aaa
cmp
and
aam
test
adc
xchg
push
cmp
stc
rcrl
or
mov
pop
xchg
adc
cmp
or
push
push
and
std
add
popa
xchg
jl
jmp
and
fsts
divl
mov
pop
nop
adc
mov
loopne
cmp
push
push
dec
cmpsl
lret
and
sbb
cltd
repz
jg
das
push
mov
test
jno
out
scas
bound
pop
sub
loop
ljmp
xor
pop
andb
mov
or
mov
jnp
stos
adc
mov
lea
jp
or
jle
or
xchg
leave
mov
xchg
daa
jmp
push
lahf
pop
jmp
sbb
mov
adc
sbb
fcmovnu
insl
mov
cs
pop
jbe
inc
push
mov
mov
icebp
arpl
test
fcom
xchg
cltd
add
data16
cmc
xchg
cwtl
sub
push
jecxz
jmp
lcall
xor
add
push
in
xlat
adc
sti
clc
andl
cvtps2pd
mov
es
mov
cld
cmp
sarb
mov
movsl
push
adc
stc
xchg
sub
out
movsb
and
push
std
orl
repnz
rcrb
icebp
inc
sub
sbb
out
sub
jg
arpl
sahf
dec
lret
jns
mov
jg
xchg
xchg
repnz
insl
pop
and
inc
clc
daa
add
or
andb
jp
shl
and
dec
sub
ja
xchg
cmc
push
mov
daa
sbb
enter
cwtl
push
mov
out
je
ds
xchg
call
fcmovbe
enter
mov
cmp
mov
stos
cmp
aaa
mov
fisubs
inc
dec
jmp
jb
adc
and
jnp
and
xchg
aad
lds
xchg
mov
mov
mov
xor
add
inc
insb
js
inc
push
mov
repz
dec
cmp
cwtl
inc
ret
adcb
mov
add
xorb
fldenv
push
outsb
pop
fnstsw
mov
leave
outsb
ja
add
mov
mov
gs
stos
into
mov
rorb
test
faddl
adc
into
repz
std
or
and
xor
sahf
and
lret
pop
mov
xlat
mov
in
push
shl
ljmp
and
mov
xor
lock
fst
dec
and
ret
stos
xchg
mov
jmp
pop
mov
push
je
int
adc
or
adc
frstor
jb
adc
adc
in
ret
iret
jb
dec
ffree
and
push
pop
jno
mov
pushf
lods
and
addr16
mov
aas
int
cmp
mov
jns
cmp
sub
out
mov
inc
shl
stos
in
pop
iret
adc
jb
ret
jl
mov
sub
mov
and
and
mov
or
gs
push
or
mov
pusha
dec
hlt
fnstsw
outsl
aam
sub
rcrb
adc
pop
dec
mov
sbb
adc
aas
sub
sub
dec
repnz
or
cmp
out
adc
aam
mov
int
cs
xor
xor
inc
into
jecxz
insb
negb
sar
aaa
out
and
mov
pop
hlt
shrl
adc
jbe
jne
addl
mov
push
sbb
es
xor
pop
outsb
into
fucomp
clc
sub
adc
xor
xlat
shlb
pop
cmpsb
lret
jb
inc
in
adc
xor
fwait
addr16
lock
repnz
or
push
sbbl
and
jb
mov
xor
xchg
mov
jge
inc
cmp
mov
sbb
pop
pop
test
into
add
dec
and
out
xor
jne
out
push
shll
into
dec
cmp
loop
test
and
popf
add
adc
daa
and
cmpsl
and
xor
jne
es
fcomip
mov
cmpsb
test
adc
mov
sub
ret
mov
dec
es
mov
js
fnsave
ss
int
mov
adc
mov
cmp
pop
mov
in
sub
vmovntdq
adc
int3
xchg
nop
ficoml
xchg
inc
dec
inc
loop
frstor
dec
pop
dec
dec
in
rcl
sbb
push
and
add
xor
jle
idivb
pop
fisubs
pusha
xchg
xchg
inc
dec
jge
mov
adc
dec
jp
call
xchg
xor
popa
scas
imulb
inc
adc
mov
fsqrt
xchg
push
xor
push
stc
scas
cmpsb
xor
xor
push
pop
pop
test
call
bound
jbe
sub
push
lods
mov
loope
xchg
xchg
shrl
adc
mov
mov
or
stc
popa
shlb
ret
mov
stos
stos
xchg
dec
mov
stc
push
ret
jg
movb
or
out
lock
add
adc
dec
mov
mov
outsb
pop
inc
xchg
into
outsb
paddd
jecxz,pn
into
leave
jne
pop
test
adc
mov
push
pop
sti
repz
ljmp
repnz
popf
pop
test
popa
jns
mov
mov
mov
outsb
scas
adc
js
fsubl
test
cmp
jno
or
leave
addl
push
mov
sub
sbb
add
push
or
fwait
mov
jb
mov
sahf
mov
dec
dec
cwtl
pop
jle
scas
loop
pop
scas
pop
or
sbb
clc
je
xchg
sbb
out
adc
in
icebp
sub
movsl
mov
xor
gs
fistl
mov
iret
imul
test
sub
or
mov
insb
test
cmp
fwait
popa
sub
dec
jb
int
sbbb
and
pop
cs
jns
push
lock
mov
dec
cmp
int3
data16
into
cmp
fwait
aas
xchg
mov
popf
aam
push
mov
shr
fucomi
out
hlt
lods
adcb
data16
fidivrl
xchg
inc
adc
daa
jne
cwtl
out
sbb
jb
xlat
nop
fdivr
lds
mov
jecxz
mov
movswl
je
scas
and
iret
nop
xchg
shrb
pop
fcoms
or
inc
movsb
cmp
aas
mov
dec
mov
outsl
jo
jg
test
daa
xchg
or
adc
test
add
or
ja
push
outsb
cmp
fstl
dec
xchg
sbb
icebp
xchg
mov
push
sbb
push
adc
pop
add
aas
repnz
cli
xchg
cmp
push
outsb
cmp
xor
xor
cmpsb
mov
cmp
fwait
mov
adc
mov
fisubl
or
lods
fwait
andl
jl
or
fwait
add
push
rcll
sbb
mov
jne
mov
xchg
cmp
pop
scas
sub
repz
cmp
and
or
and
cli
leave
call
cmp
pop
jbe
adc
rcll
jae
inc
push
or
aam
push
roll
add
inc
sbb
call
jns
cmp
xchg
insl
aad
mov
stc
aaa
imul
push
inc
push
xor
mov
sub
arpl
les
into
rorb
dec
adc
add
push
jp
aaa
gs
xchg
add
push
xchg
mul
sub
lahf
cltd
outsb
and
push
jbe
mov
push
fdivl
pop
adc
inc
cmc
cmpsb
pop
jae
jmp
and
sub
jo
icebp
push
mov
xor
pop
and
xchg
out
loopne
push
adc
ds
lods
inc
sub
jmp
shlb
stos
mov
outsb
sub
pop
and
push
sahf
dec
mov
push
xchg
ret
jl
subb
cltd
test
xchg
and
cs
mov
stos
outsl
inc
xor
jecxz
xchg
sti
push
lret
sub
cmp
push
sub
xor
rcl
outsb
imul
ds
adc
jl
loopne
xchg
xlat
ret
mov
push
or
and
mov
and
cmp
addr16
pop
jp
adc
je
pop
dec
dec
in
jne
popa
pmaxub
mov
adc
or
lods
adc
cmp
and
in
nop
pusha
repz
movsb
inc
mov
cmc
scas
orb
cmpsb
stos
jl
inc
mov
sub
test
fnstsw
addr16
loop
cmp
xchg
mov
outsl
dec
cmpl
andl
addl
gs
imul
push
sub
dec
mov
fsts
push
xchg
loopne
jb
fwait
and
test
pop
add
pop
in
in
push
mov
shlb
mov
fisubrl
mov
and
loopne
insl
ret
mov
fnsave
cmpsb
add
push
xchg
pop
lods
xchg
int
in
lds
movsb
pusha
scas
fmull
clc
sti
jne
add
jmp
xchg
push
sbb
mov
dec
xchg
fsubs
push
and
jge
dec
stos
sub
sahf
xor
sbb
mov
fldt
mov
mov
push
mov
ret
mov
movsb
mov
sub
adc
jl
scas
vpmacsdql
and
push
es
xchg
outsb
rclb
in
and
scas
inc
inc
mov
testb
mov
sar
pusha
iret
bound
push
dec
xlat
mov
mov
jecxz
in
push
lahf
xlat
pop
and
adc
xchg
push
and
mov
lret
sti
adc
loope
sub
push
outsb
mull
divb
xor
faddl
pop
mov
xchg
orb
push
in
and
repz
sbb
jle
sub
outsw
ljmp
je
pop
jecxz
or
pop
xchg
xor
mov
cli
cmpsb
pop
int
arpl
lea
iret
nop
cmpsl
sbb
jns
mov
sbb
cmp
cwtl
push
sub
imul
ret
dec
mov
mov
xchg
imul
out
push
fwait
push
and
push
jb
push
fiaddl
lods
sti
add
fistl
jb
jbe
pop
xchg
rcrl
clc
and
xchg
out
sub
sub
lods
cmp
ret
and
cltd
pop
mov
pop
cmpb
and
push
xchg
cmc
jne
mov
out
test
sbb
cmc
jge
lret
das
push
dec
inc
pop
and
mov
movsb
jle
xchg
hlt
adc
test
fwait
adc
jecxz
mov
pop
adc
lahf
fdivrl
sbb
xor
imul
cmc
js
mov
fisubrl
ja
outsb
inc
sbb
rorl
jg
cmp
out
jp
mov
ror
jns
mov
cmp
sub
stos
neg
push
or
movsl
lret
ss
stc
sub
outsb
xor
cmp
jecxz
fmul
sub
test
fidivs
jne
sti
dec
inc
testb
aaa
adc
mov
cmp
and
loopne
add
push
push
idiv
insl
sub
fwait
sub
gs
lods
in
jl
daa
xchg
fbld
pop
jmp
mov
inc
in
insb
mov
inc
lret
scas
iret
jl
xchg
jp
clc
dec
test
int3
mov
testb
xor
inc
shrb
fcoms
addr16
xor
mov
mov
sti
xchg
loop
pop
rclb
mov
movsb
mov
negb
and
push
inc
pop
xchg
jo
scas
scas
movsw
das
xor
inc
cmp
dec
adc
push
push
popf
push
lcall
xor
dec
call
ret
and
add
lods
xlat
mov
dec
jecxz
cs
or
cltd
cmpsl
xor
add
test
and
xchg
xor
inc
xchg
and
inc
or
lods
jne
or
push
xchg
sub
ror
dec
push
dec
dec
std
fstl
lret
arpl
rorb
sub
retw
pop
adc
cmp
loope
jnp
ljmp
adc
xor
sub
out
and
push
nop
sub
cmp
test
mov
add
cmpsb
cli
push
xor
push
ljmp
out
and
movsl
lea
push
mov
push
cmp
clc
pop
inc
roll
les
and
decl
lods
cli
sub
adc
cmc
add
test
cmp
jbe
or
inc
scas
mov
mov
out
outsl
insl
mov
xchg
jmp
call
or
xchg
addb
std
shrl
mov
das
and
cwtl
pop
sbb
jno
or
das
cmp
add
aam
ret
cld
loop
cmp
jecxz
sbb
imul
in
push
movsb
in
add
pusha
mov
push
mov
mov
out
mov
ja
mov
cwtl
pop
into
hlt
dec
mov
pop
ficoml
lret
and
mov
sub
adc
jmp
cmp
rcr
pop
push
sub
mov
outsb
adc
ds
scas
cmp
sub
fxtract
cmc
cmp
lea
push
adc
ljmp
lock
mov
ret
xorb
jg
mov
icebp
in
xchg
dec
pop
insl
and
mov
dec
enter
jb
fpatan
cmpsb
cwtl
in
gs
cmp
cmpsb
jg
pop
imul
repnz
test
mov
cmc
push
and
addr16
pop
or
push
arpl
pop
dec
or
mov
dec
dec
loopne
hlt
pop
lock
jg
pop
add
test
inc
je
lcall
inc
dec
popa
pop
jnp
xor
xchg
lods
mov
ds
outsb
test
mov
shlb
and
insl
mov
sub
mov
push
pop
je
sbb
or
test
and
and
jge
and
out
jae
mov
mov
cs
sbb
es
mov
out
cmp
lea
into
lock
mov
int
sbb
fildll
dec
out
and
rcrl
sub
dec
stos
push
xchg
jns
mov
out
xor
push
rcl
ret
imul
inc
add
sub
pop
xchg
rclb
rcl
into
add
mov
fdivrs
push
or
inc
ss
out
imul
imul
repz
lods
mov
push
aam
les
into
xor
xchg
shrl
add
push
jmp
xchg
add
jmp
lret
aam
mov
or
nop
fbstp
sub
adc
lret
cmp
push
lock
movsb
jae
faddl
mov
mov
pop
or
inc
lea
insb
pop
pop
cmpsb
push
xor
enter
xor
mov
aaa
jb
cmp
xor
adc
and
imul
dec
orl
pop
add
dec
out
push
sbb
lret
sti
xchg
repz
or
fbld
lods
adc
in
jno
jecxz
pop
dec
aad
adc
bound
rorl
cltd
jl
push
into
cmp
adcl
sub
leave
clc
jmp
fmull
mov
push
pop
lock
add
aad
or
xchg
rcll
xor
push
mov
push
push
cmp
test
mov
mov
jb
std
and
sub
add
inc
xchg
inc
scas
xor
loop
imul
sahf
movsb
js
sti
hlt
mov
push
mov
mov
fsubs
in
inc
idivb
lahf
rcll
int3
mov
jmp
sub
sbb
jp
sbb
cmp
pop
arpl
pop
lret
dec
mov
in
daa
and
loope
xlat
mov
mov
movsb
inc
pop
test
mov
mov
rcrl
cmp
and
pop
jns
ret
jae
cmc
mov
js
sub
cmp
mov
lret
push
xor
scas
pusha
and
xor
sti
lock
inc
dec
cli
adc
and
push
and
je
lods
lcall
sbb
insb
arpl
cmpsb
fmull
ss
ret
lock
in
xchg
outsb
pop
xchg
les
push
mov
mov
pusha
inc
push
stos
push
xor
and
insb
rcl
rcl
ficomps
xor
mov
mov
pop
iret
in
aad
xchg
push
mov
imul
cmpl
push
xor
push
dec
xor
cmc
jbe
push
lds
pop
pop
subl
lcall
daa
mov
push
xor
lret
cld
cmpsl
nop
jg
and
inc
andb
fistl
xchg
mov
push
insl
push
and
push
sub
scas
lods
mov
adc
or
shl
sub
inc
jle
sbb
aad
sub
jmp
mov
fldcw
lock
sbb
aad
das
dec
jecxz
ljmp
fldz
cs
dec
aas
mov
lds
movsb
mov
mov
lret
dec
sbb
mov
bnd
int
scas
mov
fidivs
mov
jecxz
lea
and
push
or
dec
inc
test
cmp
push
imull
and
add
sbb
adc
cmp
push
arpl
xchg
push
test
jge
loope
loop
pop
xchg
mov
mov
mov
xor
pop
shlb
shll
inc
add
add
lock
sbb
adc
shlb
xor
cmp
inc
mov
push
in
pop
jnp
es
divl
adc
adc
push
push
outsb
scas
sti
fbld
mov
sbb
pcmpeqw
dec
int3
hlt
or
shlb
lea
push
test
or
inc
jae
xchg
out
lret
fucomp
loope
push
cmp
adcl
jge
stos
testb
and
mov
sahf
lahf
sub
pop
fistps
inc
cmpsl
pop
jle
sub
gs
jecxz
xchg
mov
mov
leave
leave
sbb
leave
xchg
cld
pop
hlt
mov
ficomps
gs
in
xchg
jl
cs
enter
and
pop
push
jbe
gs
xchg
mov
push
or
jb
push
inc
sbb
mov
jmp
sbb
and
adc
inc
jge
call
dec
adc
jp
out
cmp
xlat
stos
push
push
fistps
popa
dec
adc
jmp
mov
adc
popf
clc
push
mov
pop
mov
clc
dec
std
jge
xchg
fidivs
jge
mov
pop
imul
ret
test
test
pop
mov
cld
cmpsl
push
mov
test
aas
xor
inc
fmuls
push
or
rorb
out
fs
lea
xchg
sbb
jns
imul
lock
mov
jp
inc
mov
ret
adc
sbb
push
ljmp
repz
cmpsl
test
lret
das
pop
or
and
inc
nop
cmp
loope
cmp
push
popa
js
test
lods
sbb
orl
cmp
pop
and
in
ja
icebp
mov
push
jecxz
push
fs
xchg
cmc
ficoml
mov
popf
out
mov
inc
cmp
push
jnp
aas
stos
out
les
scas
icebp
enter
or
add
loope
call
cwtl
stos
in
inc
fadds
fstpt
adc
in
push
xor
cmp
cld
adc
mov
int
repnz
push
add
push
xor
testb
and
cmp
pop
stos
aaa
shlb
daa
mov
sub
sbb
pop
mov
pop
ss
mov
movsb
stos
pop
cmc
add
test
or
mov
stc
outsb
pop
and
das
loopne
out
bound
dec
or
data16
pop
adc
pop
dec
adc
pop
xchg
adc
adc
sbb
cmp
je
stc
mov
and
inc
movsb
mov
or
jp
mov
xchg
cs
jno
mov
leave
and
cmp
jecxz
inc
lock
xchg
loopne
mov
push
addr16
arpl
jns
pushf
xor
fistl
clc
and
test
sub
dec
stc
jo
nop
mov
outsl
mov
test
movsl
and
dec
sbb
loopne
mov
mov
sti
dec
hlt
mov
push
adc
mov
and
pusha
jl
mov
insl
pop
mov
sub
mov
fs
js
aas
jns
mov
test
fimuls
icebp
ja
inc
mul
loop
pusha
sahf
rorb
and
int
outsb
in
addr16
pop
mov
mov
cmp
ret
lods
bswap
push
enter
jle
xchg
inc
sarb
in
mov
arpl
cmp
and
mov
lds
mov
push
outsb
jnp
push
fdivrs
add
clc
mov
loopne
fidivrs
mov
in
ret
aaa
mov
js
jbe
movl
rorb
adc
mov
mov
hlt
jmp
imul
push
push
aas
ror
dec
mov
jle
fwait
out
xor
sbb
pop
ljmp
xchg
mov
mov
inc
fisttpll
sub
cmp
andb
popf
pop
add
inc
mov
jb
pop
mov
mov
dec
jno
push
cmpsb
test
and
ja
sub
sub
adc
sbb
sbb
je
jns
fcompl
pop
test
mov
lods
and
push
sub
push
adc
outsl
mov
jbe
mov
sub
pop
cli
pop
or
lods
sbb
push
popf
xchg
pop
fldt
mov
pushaw
outsb
dec
stos
mov
mov
push
ret
and
ljmp
dec
loope
daa
pop
out
sub
je
xlat
sub
dec
notb
ljmp
icebp
test
daa
dec
cmp
rcr
aaa
mov
jmp
mov
cmp
jno,pt
jecxz
push
enter
and
out
xchg
mull
push
dec
dec
subl
sub
lods
in
aad
push
jge
pop
inc
cmp
popa
rcrl
iret
jnp
cld
dec
stos
jne
pop
push
sahf
or
fnstsw
aaa
arpl
out
stos
xchg
call
and
aas
or
pop
pop
inc
movsl
loop
add
cmp
fildl
mov
es
cmp
test
mov
test
jns
adc
in
sbb
pushf
mov
xor
out
or
mov
jns
stos
js
xchg
aad
pushf
dec
push
jne
repz
pusha
or
cmpb
adc
sub
loop
hlt
mov
cmp
lcall
xor
test
xor
imul
xchg
add
xor
lds
push
mov
xchg
pop
sub
cwtl
add
lret
inc
jecxz
adc
rcrb
bound
cwtl
cmc
sbb
sbb
or
add
stos
rcrl
adc
jge
mov
stos
inc
push
xchg
test
das
test
mov
jns
mov
fs
cmp
std
subb
inc
push
jnp
push
pop
aam
jae
mov
mov
stos
xor
jns
adc
sahf
andl
and
fimuls
adc
inc
loopne
loopne
mov
ret
and
adc
sub
scas
jg
roll
jg
nop
adc
jmp
push
mov
mov
xor
jb
imul
sub
or
es
and
cltd
repz
mov
push
inc
and
repnz
mov
mov
test
xchg
push
out
push
shrb
in
adc
xchg
mov
insb
cs
andl
subb
in
mov
xor
into
sbb
in
push
into
lsl
inc
push
mov
mov
sub
inc
push
adc
sbb
cmp
mov
cmp
mov
add
in
xor
cmp
sbb
rcll
pop
popa
imull
cmp
add
jge
pop
shll
jmp
cmp
adc
adc
sbb
inc
dec
inc
lea
imulb
icebp
sbb
scas
mov
fcompl
inc
and
dec
stos
add
jmp
xor
push
pop
test
mov
pop
sbbb
pop
lock
clc
fs
mov
mov
dec
icebp
add
jl
pop
push
sub
jnp
xchg
lods
sub
sarl
or
andb
call
test
pop
xchg
adc
das
sub
push
into
ljmp
clc
push
sub
insb
es
aam
push
repz
cmp
mov
mov
mov
daa
jne
and
das
je
cmp
push
or
push
mov
push
push
pop
cmp
push
sbb
fs
xlat
les
push
stos
arpl
sti
je
pop
or
int3
adc
pop
xchg
sahf
dec
dec
loope
pop
xor
or
sub
pop
repnz
mov
add
adc
gs
fs
ret
sbb
into
xchg
lods
fwait
pop
xor
xchg
loopne
mov
mov
fwait
adc
daa
mov
mov
ret
pop
xchg
pop
cli
sbb
push
dec
out
inc
mov
add
call
xorl
xor
fcomps
jecxz
inc
push
and
aas
mov
dec
test
dec
mov
out
je
add
insl
mov
std
out
je
adcb
mov
mov
jl
jle
int3
imul
or
inc
stos
and
adc
lds
fstpl
in
push
outsb
mov
xchg
leave
push
stos
ds
daa
adc
loopne
and
inc
jo
shl
cmpsl
mov
out
negl
xchg
jg
std
adc
push
or
fimuls
sub
repz
add
sub
outsb
dec
pop
test
sub
cltd
mov
lods
add
pop
push
das
je
fmuls
aas
fwait
cs
sbb
rol
push
sub
daa
or
push
leave
lods
pop
out
push
add
mov
sub
arpl
mov
or
cltd
out
sti
cmp
push
lret
int3
in
adc
shl
add
inc
in
push
mov
cmp
popa
fcmovbe
rcr
mov
mov
lahf
xor
jge
pop
and
mov
jae
xchg
addl
sarl
xchg
dec
out
inc
inc
mov
mov
pop
mov
out
pop
xor
push
nop
rcll
add
sub
jmp
pop
fwait
pop
mov
mov
ds
loopne
aad
mov
push
in
add
adc
out
or
js
das
dec
lea
stos
and
shlb
jns
or
sbb
xchg
out
mov
cmpl
int
push
xchg
fmul
das
movsb
cmc
lcall
popf
idivl
and
sbb
cmpsb
or
lret
fimuls
inc
fistl
cs
loope
xor
xchg
jns
stos
mov
stc
ljmp
aaa
mov
fnstsw
mov
aaa
mov
scas
jecxz
sahf
xchg
dec
xchg
pop
cmp
push
cmp
dec
stc
mov
jl
xchg
mov
push
out
aam
dec
dec
jl
mov
imul
and
dec
pop
sub
rcrl
nop
movsbl
jno
es
das
add
inc
mov
jo
xchg
jge
call
das
stc
mov
xadd
adc
sahf
or
pop
ss
sbb
ffree
push
out
xchg
shll
in
add
mov
sub
das
in
cmp
ljmp
mov
test
cwtl
sub
call
xchg
ret
sbb
push
or
xor
jb
fwait
dec
add
dec
dec
shll
push
mov
mov
mov
es
insb
imul
sub
mov
jecxz
andl
stos
push
jno
sbb
movsl
lds
insl
mov
adc
mov
mov
mov
addb
xchg
pop
ss
xor
mov
lods
jle
mov
adc
add
jmp
jg
inc
loope
ret
dec
sbb
sub
lret
cmpl
xor
xor
xchg
sbb
aad
divl
jns
in
mov
lds
push
iret
adc
or
add
jmp
call
sub
xchg
nop
push
and
shll
cwtl
sbb
jo
and
xlat
push
cmpsb
outsl
icebp
dec
scas
lea
idivl
dec
jp
outsl
dec
adc
popa
cmp
mov
dec
stos
xlat
xchg
dec
data16
pop
adc
jmp
cld
scas
xchg
arpl
idivl
xchg
out
xchg
sti
inc
insl
sbb
sbb
mov
mov
mov
aam
fstpl
sbb
add
daa
add
dec
lods
jmp
fnsave
xchg
andb
xor
pushf
test
addr16
mov
ss
loop
enter
dec
sbb
hlt
xchg
stos
lock
imul
pop
inc
fstcw
ja
andps
mov
loope
sbb
insl
aam
stos
addl
pop
mov
jle
pushf
mov
loopne
xchg
je
insl
ljmp
push
enter
repz
insb
xchg
incl
jb
test
lods
popf
test
aam
cwtl
inc
pusha
cmp
jno
cmc
lock
sbb
lret
adc
push
pop
jp
test
gs
mov
les
add
inc
dec
stos
lock
or
outsb
test
add
mov
int3
mov
inc
or
xchg
test
repz
rcrb
aam
xor
ljmp
cmp
repnz
sbb
jmp
arpl
sbb
adc
cmp
cmpsl
aad
xor
scas
das
xchg
pop
test
xorl
sbb
jo
add
ds
lcall
movsb
out
mov
adc
jp
or
add
movsl
dec
and
cmp
cmp
ret
sub
imul
xor
xchg
xor
dec
xchg
fistps
mov
fsubrl
xor
je
je
mov
pop
jae
pop
mov
faddl
pusha
xor
repnz
mov
pop
push
mov
adc
and
lds
dec
leave
bswap
mov
ss
adc
pop
and
clc
fdivs
sub
add
dec
inc
xlat
stos
mov
dec
mov
lret
fwait
ljmp
mov
add
jnp
mov
push
fstpl
inc
in
jp
out
call
cmp
enter
xlat
sbb
pop
flds
push
jge
subb
dec
xchg
sti
daa
stos
lret
jae
inc
jmp
loop
outsl
int3
pop
jg
dec
ret
xor
pop
push
cmpsl
ljmp
and
xchg
adc
jle
mov
mov
push
imul
mov
xor
push
mov
rcrl
mov
shll
sti
cmp
mov
clc
call
cmp
frstor
test
jnp
cmpsl
jp
test
pop
fistpl
push
cld
sub
fcomi
pop
sbb
dec
lret
imul
dec
xor
js
lret
mov
add
mov
fmuls
mov
mov
popf
mov
adc
lea
inc
dec
adc
shll
xor
pushf
shll
loopne
daa
mov
test
bound
dec
std
and
int3
sub
dec
push
xor
jmp
movl
xor
aam
int3
xor
scas
lret
jmp
xor
push
mov
lcall
xchg
fnstenv
dec
jns
movups
insb
pop
or
and
movsb
xchg
ds
cmp
pop
or
aaa
insb
stos
dec
daa
cmp
stc
sub
pop
adc
cmpsb
lret
push
insb
test
sbb
stos
inc
xor
sarb
decl
clc
mov
fists
and
sub
adcl
inc
and
xlat
adc
mov
mov
lcall
dec
popa
cltd
push
pop
lods
or
or
push
mov
jp
cltd
xor
aas
ret
push
xchg
and
test
test
loopne
scas
inc
sti
push
aam
xchg
pop
aam
or
xchg
cmp
sti
enter
pusha
nop
cmp
inc
movsb
ss
repnz
pop
in
fcomps
insl
out
cmpsb
xor
loop
push
scas
mov
sub
xorb
bound
fisubl
arpl
imul
adc
and
or
mov
cltd
push
cmp
mov
jns
dec
ret
fisttpl
or
mov
push
imul
stc
jle
cmp
sahf
fdivl
sub
push
push
xor
frstor
ret
sub
xchg
mov
and
cmpsb
out
cltd
mov
clc
imul
xorl
out
xor
dec
insl
xlat
and
repz
push
xchg
cltd
outsb
cmp
dec
daa
repnz
int3
xlat
fiadds
jecxz
dec
xchg
jmp
leave
lds
data16
dec
test
movsl
dec
push
mov
neg
mov
mul
push
push
sub
xchg
in
test
aaa
dec
imul
mov
repnz
scas
jo
mov
movsb
out
loop
andb
xchg
sbb
loope,pt
add
inc
into
jle
fbld
fcmovnb
mov
out
in
negb
or
mov
pop
ret
lcall
shll
and
mov
in
push
inc
jns
insb
daa
stos
mov
dec
sbb
add
fcoml
outsb
push
fwait
lret
testb
pextrw
pushf
jmp
sub
scas
mov
cmovg
pop
outsl
xchg
cmc
inc
mov
mov
push
mov
or
es
pushf
jp
pop
aad
xchg
fldl
lahf
movsb
je
jns
sahf
pop
in
jne
data16
stos
stos
out
adc
shll
push
mov
or
rcrb
mov
daa
shll
clc
rclb
xor
stos
out
jb
xchg
int
push
xchg
cmp
mov
adc
xchg
aaa
pop
loop
out
jmp
xor
cmp
xor
cmp
push
mov
sarb
pop
cli
cmp
xchg
dec
cld
addr16
pop
std
sub
mov
jns
mov
jnp
rcr
repnz
sub
fadds
repnz
xchg
test
push
dec
lods
xor
and
add
sbb
push
mov
ret
sub
or
xchg
inc
xchg
sub
fmul
sub
push
pop
adc
lret
pop
push
push
jns
call
or
xor
iret
jnp
ds
stos
insl
add
mov
insl
sarb
aaa
sbb
mov
mov
adcb
and
and
push
sbb
and
and
cld
pop
or
imul
ljmp
cmp
aas
ret
fwait
nop
ret
lods
cli
jns
or
les
mov
int
cltd
mov
in
mov
mov
sbb
ds
inc
or
fdiv
sbb
dec
pushf
je
xor
mov
pop
mov
adc
jp
pusha
ja
les
mov
mov
cmp
jbe
mov
cmc
aaa
adc
push
cmp
xchg
adc
mov
jae
fstl
icebp
adc
mov
sarl
stos
lods
inc
mov
pop
les
sti
pop
push
cltd
cmp
cmp
stos
dec
in
daa
pop
or
sti
js
xor
sarl
popa
popa
xchg
daa
pop
inc
add
sub
jbe
xchg
in
in
cmpsb
add
mov
dec
sbb
fs
popf
xor
mov
scas
fidivl
push
xchg
ret
inc
mov
ss
in
xlat
aaa
inc
cltd
cmp
js
pop
sbbb
data16
enter
xchg
clc
bound
loope
sbb
rcr
jmp
xor
inc
popf
sub
sbb
add
xchg
stc
cmp
out
bndstx
insb
out
sub
add
ret
jnp
xlat
ljmp
je
scas
push
lret
aam
ret
test
jp
mov
dec
lret
setnp
fnstenv
pop
mov
sub
mov
lret
and
cltd
aas
xor
fistps
lods
sbb
mov
out
test
mov
and
jp
jg
imul
in
push
gs
mov
fwait
out
dec
movsb
dec
and
adc
std
mov
arpl
pushf
dec
and
iret
incl
xchg
movsb
push
int3
clc
pop
idivl
xor
test
push
fisttpl
ficompl
and
mov
sub
addl
imul
sbb
sti
mov
out
aas
cli
shl
je
xor
inc
push
dec
xchg
adc
xchg
xlat
mov
cmc
in
pop
xor
sbb
test
xor
inc
mov
mov
mov
daa
loope
insb
in
or
inc
mov
into
mov
jmp
mov
cmp
xchg
ja
or
xor
repz
imul
pop
out
leave
mov
add
push
adc
or
into
int
fmuls
mov
outsb
es
fs
mov
mov
mov
push
pop
mov
in
flds
ffree
imul
leave
sbb
jnp
test
leave
push
aaa
mov
arpl
and
inc
loop
add
mov
lds
push
lods
rcrl
inc
std
test
add
pop
sti
inc
fisttpl
std
xchg
fld
add
ljmp
mov
jp
imul
fs
cmc
mov
lcall
jp
or
fnsave
and
jle
xchg
add
imul
pop
or
mov
xlat
scas
dec
scas
sub
mov
dec
sub
adc
ljmp
sbb
clc
clc
add
push
cmpsl
int
gs
inc
add
cmc
shr
xor
push
mov
mov
shll
xchg
dec
pop
push
aad
sub
cmc
mov
sbb
or
notb
xor
push
and
jnp
mov
out
push
into
mov
push
pop
push
xchg
cs
out
shrb
movl
and
xlat
jge
sbb
in
xlat
out
icebp
xchg
mov
mov
sbb
push
stc
sbb
add
cld
and
adc
jo
push
jmp
dec
or
stos
dec
adcb
mov
xor
pop
jmp
scas
jbe
cwtl
fs
pop
mov
mov
das
aaa
xor
pop
or
out
shlb
cmp
push
fistps
sub
xor
push
subb
sub
sarb
jo
stos
out
repz
mov
jno
or
xchg
das
push
sbb
or
rcl
cmp
lcall
je
push
in
je,pn
or
dec
add
mov
repz
es
sub
jns
fwait
test
push
adc
and
testl
iret
cmp
xchg
push
movsl
pop
add
dec
or
pop
jb
faddl
mov
test
loope
sarb
sbb
lret
repz
dec
gs
sbb
fistpll
cld
rorb
jnp
mov
sti
jns
dec
add
push
outsl
or
pop
inc
add
ret
gs
dec
xor
mov
lock
enter
jl
and
mov
xor
orl
imul
mov
test
jecxz
popf
inc
jae
insl
push
sbb
fsubrl
ret
gs
into
sub
mov
and
ds
movsl
sbb
cli
or
mov
mov
out
push
mov
mov
imul
xchg
stos
loop
mov
xchg
rclb
pop
test
aad
inc
jb
sti
imul
les
and
mov
clc
mov
xchg
jle
fldt
cmp
dec
push
add
das
sbb
fildl
mov
stos
lea
fdivl
cmpsl
pop
mov
push
mov
sub
lcall
sub
ss
mov
movsb
or
push
dec
mov
aaa
out
std
push
lods
cmc
dec
mov
jg
ja
fs
lods
sahf
sbb
clc
cmp
inc
sub
std
or
sub
adc
push
mov
and
rclb
xchg
cwtl
in
cmc
clc
popa
in
repnz
xchg
sbb
test
sti
sub
sarb
push
arpl
cmp
stos
daa
in
jbe
xor
mov
loop
ss
cmovs
loop
movsl
push
inc
pop
aad
scas
jg
leave
test
sbb
jb
dec
fcom
frstor
cmpsl
inc
sbb
xchg
in
mov
push
scas
movsl
jns
call
lret
jno
sbb
mov
in
ds
cmpsl
arpl
cmp
ja
loop
cld
mov
stos
nop
les
stos
cmp
les
out
xchg
xor
and
xchg
ss
dec
xchg
mull
or
sbb
fidivrs
pop
xor
inc
pusha
and
mov
sahf
xchg
push
dec
mov
jg
bound
mov
mov
jae
popa
rolb
adc
mov
inc
push
mov
lock
les
mov
stc
int3
lcall
or
mov
push
cli
jb
fcmovnb
sbb
push
pop
test
xor
lods
inc
adc
add
mov
xor
cmpsb
inc
aaa
cmp
popf
iret
or
rorb
outsb
es
and
adc
mov
mov
push
jp
pushf
cmpsl
adc
bound
ret
ds
lods
cmp
fnstenv
divb
add
cmp
jmp
cld
pop
cld
sub
mov
iret
pop
mov
outsb
sub
cli
sahf
push
fcmovu
add
jne
test
imul
ss
out
push
cld
or
and
dec
sahf
sbb
pop
mov
push
and
push
add
dec
add
mov
ljmp
cmpsb
add
pop
mov
mov
push
add
ret
in
mov
push
cmpsb
mov
mov
adc
dec
adc
nop
xchg
cli
notl
je
cmp
jb
imul
sbb
imul
lock
mov
xor
fsubr
dec
int3
ja
inc
mov
stos
stos
pop
xor
aad
xchg
into
imul
enter
fisubl
xchg
dec
lods
sub
imul
sbb
cld
mov
xchg
outsl
les
popa
lret
add
testl
xchg
fbld
add
hlt
pop
adc
je
xchg
mov
sbb
pop
dec
xchg
cli
xchg
pop
mov
push
and
sub
and
ret
push
or
push
sub
leave
iret
xchg
fs
sub
xchg
pushf
add
fnstcw
mov
xor
stc
out
dec
leave
inc
insl
pop
aam
icebp
and
and
imul
fs
and
mov
pop
or
jg
mov
lods
mov
jno
test
pop
or
xchg
xchg
adc
lea
cmp
mov
mov
mov
orb
add
mov
inc
xchg
pop
adc
out
aad
stc
mov
idivl
sbb
inc
cmpsl
pushf
jl
jno
les
mov
fwait
mov
jp
xor
testl
fsubrl
ret
fcomps
or
push
sub
mov
jecxz
jo,pn
pop
shlb
jno
sarb
inc
mov
js
cmp
dec
fldt
pop
mov
mov
adc
insb
adc
sbb
and
lea
sub
push
insl
mov
and
ret
jle
pushf
arpl
daa
leave
jns
sub
shrb
push
test
mov
daa
stos
stos
jb
pop
or
ret
dec
lcall
push
xor
fsubl
inc
mov
mov
sarb
test
cmp
lods
stos
insl
inc
sbb
xor
hlt
test
mov
enter
loope
hlt
push
mov
lcall
fcoml
outsb
dec
xor
jo
fs
test
insl
popf
loopne
jl
and
out
xchg
cs
loop
sub
cmpsb
mov
add
push
mov
xor
jl
jge
sarb
cltd
xchg
stos
or
cli
ror
scas
cmp
push
lods
nop
inc
push
adc
lahf
mov
xor
push
lods
jecxz
pop
ret
lahf
mov
push
xchg
jl
call
addl
xor
data16
sbb
cmp
mov
pop
je
insb
mov
adc
aad
mov
loop
int
pop
fs
or
loope
shlb
pushf
cmpsb
ljmp
mov
lcall
addr16
in
mov
cs
in
jmp
loop
movsl
lods
daa
insl
mov
mov
out
movsl
xchg
imul
mov
cmp
adc
pusha
and
sub
add
mov
hlt
aam
xlat
xchg
jg
cwtl
mov
xchg
in
sbbl
push
mov
inc
test
sbb
sub
or
sbb
iret
mov
mov
arpl
jl
inc
sub
mov
xchg
sbb
mov
add
cli
cli
sahf
arpl
add
cmpl
movsl
dec
test
aaa
call
sbb
imul
xchg
inc
mov
sarl
cmc
xchg
aas
mov
inc
xchg
lds
mov
dec
iret
sub
ljmp
in
ss
insl
test
pop
leave
push
je
repnz
and
cmp
out
jmp
movsb
pop
sub
popf
in
sub
inc
jecxz
jle
loop
adc
mov
jp
nop
fdivs
ds
xor
je
or
dec
icebp
idivl
pop
or
cs
jb
outsb
je
jne
jl
mov
ret
inc
sub
xchg
jp
out
pop
movsb
jge
and
pushf
loop
stc
inc
push
adc
out
dec
movsb
xchg
or
cmpsb
jno
jecxz
lret
jo
dec
movsl
or
enter
push
mov
xor
out
gs
gs
push
push
rcr
push
or
movsl
and
jns
cmpl
push
out
adc
arpl
cmpsb
jecxz
into
mov
imul
sahf
in
dec
in
mov
scas
jl
sub
in
jae
je
sub
ret
sbb
aad
mov
daa
ret
sub
daa
inc
loop
jnp
lret
inc
insl
cmpsl
popf
or
popf
xchg
mov
push
push
sub
loop
adc
arpl
or
fdivp
push
pop
mov
mov
fs
jb
sub
pushf
push
lahf
cld
ret
cld
nop
test
js
cmc
push
ret
into
cmp
fisttps
dec
fldl
adc
bound
dec
jp
es
popf
push
and
call
mov
ret
icebp
pop
inc
pop
mov
sbb
push
sub
orb
movsb
lods
shlb
dec
jnp,pt
and
outsl
add
scas
into
daa
lcall
into
mov
ss
test
arpl
fidivs
and
xchg
jo
insl
jp
daa
lret
test
push
leave
mov
jmp
ret
jne
or
pop
sbb
mov
repz
mov
push
push
pushf
add
push
push
dec
lret
pop
scas
je
mov
jecxz
cmc
and
cmp
repnz
jnp
lahf
outsb
out
dec
push
jg
pop
test
mov
pop
xchg
lret
rol
in
xchg
daa
jne
popf
push
repz
jnp
mov
int3
popa
xchg
into
test
aad
movsl
pop
sub
mov
in
pop
cmp
fcompl
call
movsl
dec
ret
or
cmc
pop
push
out
cld
cli
int
in
jg
mov
push
pop
mov
lock
cmpsb
or
mov
int
pop
into
push
jecxz
in
sub
ret
jnp
adc
jge
popf
push
int
lahf
xor
mov
roll
push
mov
or
push
je
nop
jns
lods
fadds
dec
xor
idiv
adc
loope
push
push
leave
jno
jg
xchg
or
lods
in
jle
mov
aad
mov
leave
push
dec
dec
mov
sub
push
dec
adc
sbb
pushf
push
push
sbb
jnp
cmp
ret
test
shlb
dec
pop
out
fcmovu
bound
xchg
pop
jo
or
leave
lods
push
or
bound
jno
mov
movsl
adc
xor
sbb
or
lcall
add
xchg
jns
icebp
lret
mov
imul
sti
repnz
rol
pop
lahf
popa
jmp
ss
xlat
cld
add
jbe
ud1
or
in
push
mov
aad
push
xor
out
and
xor
mov
imul
push
jbe
cmc
pop
add
dec
xchg
dec
fcompl
jge
shrb
inc
and
xchg
ja
add
xor
inc
aad
mov
data16
in
shrl
dec
mov
out
inc
mov
lret
rcll
push
xor
insb
insl
and
aam
jae
lds
sbb
push
mov
fbld
jns
xchg
and
cs
sahf
adc
ret
sub
outsl
push
stc
mov
jecxz
stos
mov
push
ficoms
jne
rorb
jmp
test
or
sar
mov
fs
sub
add
dec
pop
sti
dec
popf
icebp
sbb
jnp
mov
add
addl
fbld
and
nop
popf
mov
iret
mov
sbb
sbb
sbb
cmpsb
repz
loop
push
add
stos
and
mov
stc
lods
sub
lods
mov
xchg
jns
pusha
dec
fmull
cs
mov
loop
insl
dec
popa
xor
mov
daa
repz
xor
push
sub
jl
lret
mov
jno
cld
bound
pushf
cmc
dec
adc
test
cmpb
lret
adc
leave
jnp
push
jb
push
pop
or
stc
mov
dec
lcall
pop
hlt
leave
adc
inc
flds
aam
aad
cmp
lea
adc
cmpsl
inc
mov
clc
roll
shll
xchg
dec
dec
lret
xchg
cs
out
lret
xor
cmpsl
pop
pop
cmp
cmp
cli
push
pop
lods
mov
sub
ds
mov
push
or
and
std
add
push
andl
aam
mov
xchg
test
add
mov
mov
and
inc
push
lcall
add
ss
ss
sub
movsb
jmp
cmc
jg
cmp
mov
mov
inc
pop
fldenv
sub
shlb
mov
mov
in
mov
mov
decb
jle
mov
sbb
jmp
jle
js
jne
ljmp
push
jp
mov
or
xchg
adc
dec
xor
mov
mov
notb
cmp
pop
pop
inc
xor
xchg
xchg
jns
out
jno
sub
push
mov
out
loopne
or
sbbb
jae
out
xchg
lret
mov
jns
in
push
call
mov
adc
imul
jle
cmp
sub
xchg
mov
or
pushf
mov
test
dec
dec
dec
fnsetpm(287
mov
and
xchg
ret
inc
mov
add
shll
pusha
xchg
fstpl
cs
xchg
sahf
cmp
popf
addr16
mov
cltd
sub
or
pop
add
cltd
les
xchg
pop
add
bound
dec
and
in
add
dec
je
pop
fwait
je
lret
sub
adc
hlt
data16
orl
orl
fwait
aaa
in
iret
sbb
or
mov
xchg
jnp
imul
pop
fwait
cmc
mov
inc
push
mov
add
dec
ret
dec
ljmp
les
or
arpl
xchg
ljmp
sbb
jp
aaa
aad
xchg
jmp
std
insb
imul
or
mov
mov
es
into
add
dec
int
fldcw
sbb
lahf
pushf
push
leave
inc
lods
adc
mov
pop
mov
push
inc
mov
mov
sub
fcomp
pop
push
movb
repz
into
std
imul
addl
and
xlat
sti
xchg
inc
sub
mov
insl
cwtl
gs
pop
mov
stc
adc
mov
hlt
xchg
add
sub
and
xor
add
jmp
fidivrl
cmp
into
xchg
stos
mov
cmp
mov
mov
popa
mov
fldenv
xor
mov
or
testb
das
inc
inc
lock
shll
sbb
mov
sub
cld
call
mov
jle
pop
push
sbb
icebp
add
popf
das
in
adc
mov
pushf
rorb
in
jo
mov
inc
leave
ficomps
and
fisttps
inc
jle
hlt
jg
xchg
mov
movsl
loope
in
test
add
push
scas
sbb
and
jo
push
scas
cmp
outsl
mov
mov
dec
ds
pop
outsl
test
pop
addr16
sbb
jns
xchg
mov
mov
mov
es
clc
jmp
sbb
pusha
stos
cmp
mov
xor
xchg
dec
add
sti
outsb
cld
push
adcb
mov
sub
or
lret
or
mov
inc
cmp
movsl
push
js
cmp
leave
cmp
sbb
repnz
out
test
fildll
fs
dec
lret
and
mov
pusha
cmp
dec
std
insl
and
mov
mov
jns
jl
push
pushf
out
cs
lods
cmc
sbb
adc
adc
cmova
inc
and
daa
pop
sub
inc
dec
push
stc
mov
push
shrb
ss
sub
psllq
pop
add
sub
mov
and
adc
or
sbbl
out
orl
lods
jae
into
out
add
enter
bound
add
mov
push
je
xor
inc
imul
and
pop
in
out
add
add
ljmp
mov
aad
inc
scas
pop
ficompl
mov
daa
insl
xchg
xor
jb
ret
dec
add
sub
mov
int
adc
jge
insl
push
mov
sbb
jg
arpl
sub
add
cmpb
ljmp
adc
mov
and
jb
xor
cs
loop
out
adc
jp
sub
and
mov
or
mov
ret
mov
rcll
movsl
cmpsb
sti
push
fnstenv
movl
sbb
push
rorl
jp
xor
inc
lret
sbbl
nop
jmp
int3
and
adc
lods
insb
sub
and
add
divl
push
idivl
aaa
ss
scas
cld
pop
in
add
mov
xor
in
cmp
std
lods
mov
push
sahf
in
nop
lock
adc
dec
lods
adc
movb
adc
adc
fbstp
push
stc
loopne
fmuls
loop
test
js
mov
movsb
cmp
adc
sbb
jle
dec
pop
mov
hlt
cs
lcall
nop
fisubrl
dec
add
popa
insb
mov
adcl
dec
jno
sbb
mov
clc
jbe
jae
jno
stc
mov
out
mov
mov
pop
dec
enter
and
xor
xor
aam
push
ja
pop
push
sbb
xchg
in
dec
pmulhuw
add
inc
lret
out
or
rorb
movsb
pop
jle
int
push
scas
sarl
add
roll
nop
inc
pop
cmpsl
cmc
dec
ds
adc
and
xlat
cltd
adc
int
loop
std
call
out
or
aam
xor
push
xchg
cmc
outsb
test
cmp
popf
rol
jbe
mov
imul
iret
or
add
mov
add
sbb
loop
mov
ror
dec
cmpsb
jbe
sbb
add
mov
shrb
fidivs
shll
cmc
imul
cmp
xchg
shll
icebp
popa
mov
pmulhuw
fsub
or
pushw
icebp
mov
add
and
jmp
out
jge
andl
fsub
fnstsw
mov
cmp
xchg
jne
cmpsb
mov
sub
insb
adc
test
outsl
jb
push
mov
pop
sbb
jb
or
loope
inc
rcr
pushf
dec
jnp
xchg
cmp
jne
or
pop
incb
lock
xchg
andb
add
movsb
pop
inc
inc
in
mov
xor
stc
mov
cmpsb
insl
xor
in
xor
push
rorb
jle
mov
mov
cwtl
in
xor
cmp
roll
add
ja
sub
in
aas
lea
pusha
mov
xor
stos
js
cmp
xchg
rep
pop
mov
fs
pushf
mov
rclb
dec
loop
test
call
cmp
xchg
aam
jae
in
rcrb
sub
in
ret
aam
dec
cltd
movsl
fmuls
adc
lahf
xchg
aaa
jle
dec
xor
fimuls
es
inc
pop
ljmp
dec
test
rorb
popa
shll
inc
push
ret
pop
mov
repz
test
jns
cs
sbb
add
icebp
sar
aad
fs
cld
jmp
imul
push
rolb
jns
push
push
cmp
add
repz
rclb
into
push
and
jge
fsubp
rcll
xchg
sub
jmp
sub
cmp
inc
in
pop
sbb
sbb
xor
and
and
add
movsb
fwait
xorb
int3
incb
or
push
out
cwtl
sub
scas
outsl
mov
push
iret
insb
insl
test
pop
xchg
jg
mov
lds
push
std
inc
pop
sub
inc
loope
stc
dec
sbb
into
stc
pop
jb
loop
das
mov
xchg
sbb
ret
xchg
push
or
xchg
stos
dec
cmc
cmp
cmc
mov
lret
aad
je
movsl
fs
ret
xor
pop
in
mov
inc
adc
int3
jae
js
lods
jo
jge
add
lods
outsl
shll
push
sub
inc
stos
pop
mov
or
fisubl
test
add
and
mov
or
fdivl
nop
das
jbe
xchg
in
lcall
insb
gs
xchg
xchg
jg
add
inc
add
pop
sbb
bound
mov
mov
call
jne
jne
repz
fisttpl
inc
jp
lahf
lods
pop
out
dec
jne
cmpsl
dec
daa
dec
cmpsb
pushf
icebp
dec
xchg
stos
daa
sub
mov
inc
pop
jo
mov
rclb
jo
mov
imul
scas
lahf
je
fcompl
je
jl
ja
sbb
xchg
sbb
push
lea
cmp
pop
push
mov
adc
inc
adc
or
loop
xchg
adc
lahf
bound
pop
xchg
mov
lods
xchg
jae
ret
dec
pop
jge
test
xchg
into
or
mov
rclb
xlat
subl
or
inc
xor
adc
nop
cltd
sub
mov
sub
push
cmp
ror
push
push
inc
xchg
jl,pt
mov
jl
sbb
and
scas
pop
rcrl
pop
inc
jmp
push
dec
mov
mov
rclb
sti
jb
push
adc
mov
decl
shll
cmpsl
js
shrb
fadd
xor
jo
xchg
outsb
js
inc
bound
mov
incb
repnz
or
cwtl
or
push
add
jns
sub
shrb
xchg
test
jl
mov
cmp
adc
cld
out
in
jl
or
sub
rolb
adc
jmp
dec
cltd
fsubr
mov
pop
fcmovb
adc
or
xor
or
adc
icebp
and
dec
lods
push
loopne
mov
mov
adcb
bound
jle
repz
jnp
mov
das
xor
movsl
pop
subb
js
popa
cli
test
lds
and
push
inc
xor
mov
jecxz
in
lds
loope
es
shl
popa
notb
xor
jp
push
cwtl
ds
jne
pop
rorb
jge
pusha
mov
fs
out
js
daa
dec
rorb
aaa
adc
sub
clc
cld
push
addr16
xor
jecxz
xchg
sbb
es
pop
and
ljmp
data16
add
dec
loop
enter
mov
popa
push
clc
stc
sahf
push
mov
mov
sbb
fadd
stos
push
int
loope
rcrl
pop
mov
inc
lods
xor
je
pop
xchg
jle
jmp
pusha
mov
notb
popf
mov
cmp
std
iret
dec
dec
inc
pop
pop
and
ja
fs
mov
stos
testb
je
mov
popa
adc
cld
jg
push
incb
inc
mov
sub
sti
push
dec
jns
jecxz
push
xchg
in
jae
iret
sub
in
int
push
xchg
sbb
mov
movsl
add
mov
enter
sbb
mov
sbb
fidivrs
arpl
inc
gs
cmp
cmp
xchg
outsl
fsubrs
out
cmpl
out
out
push
xor
arpl
rorl
out
into
dec
mov
jle
push
fadds
inc
mov
xor
dec
dec
pop
push
je
sbb
fnstcw
inc
jge
xchg
and
insb
and
sub
stos
in
jmp
nop
aad
or
cmp
cmpsb
dec
inc
popf
sbb
cmp
xchg
cld
nop
cwtl
nop
xor
push
mov
pop
or
test
mov
movsl
sbbb
test
enter
push
mov
and
mov
jmp
mov
rcrl
jp
xchg
mov
cmp
xchg
test
icebp
lods
rcl
mov
test
sbb
stos
sahf
cli
lret
jmp
adc
pop
imul
pop
sub
arpl
or
fsubp
shll
jge
inc
pop
mov
lcall
andl
sbb
push
lods
pop
dec
cmp
pop
add
cwtl
iret
or
lcall
iret
in
mov
int3
and
lahf
mov
mov
insb
push
pop
xchg
jnp
loope
mov
push
add
jae
sub
sub
sahf
repnz
mov
mov
cmp
push
fistpl
repnz
in
xchg
test
sub
lret
mov
cmp
fxch
fs
sub
xchg
shll
pop
stos
outsl
stc
test
jne
and
mov
int3
and
int3
add
ds
pushf
xchg
cmovnp
repnz
push
mov
push
jecxz
daa
jb
push
ret
xchg
repz
pop
arpl
popa
cmp
jge
jmp
lods
aam
sub
mov
lock
in
mov
pop
popa
outsl
jge
push
cmp
jo
mov
mov
mov
leave
push
dec
mov
ja
fs
shr
ja
stos
xchg
cwtl
and
es
je
mov
icebp
adc
xchg
js
and
fsubr
in
lods
jns
add
cld
leave
addr16
mov
dec
rcll
maxps
jg
fdivl
loope
inc
je
mov
sbb
jbe
jg
cmpb
or
inc
sbb
movsl
pop
sbb
mov
mov
dec
mov
ja
jo
mov
test
loope
scas
lcall
push
mov
aad
inc
dec
addr16
dec
mov
int
cmpxchg
mov
xor
jb
int
pop
mul
lds
dec
mov
pushf
xchg
cmp
push
rol
mov
cli
jbe
inc
jge
fadds
push
iret
mov
mov
push
clc
or
push
mov
sbb
jb
pop
loopne
and
mov
push
sarl
cld
jo
xor
cmp
cs
sub
sbb
push
std
cmp
loop
or
or
mov
aaa
add
xchg
pop
nop
mov
in
lea
mov
push
jl
popa
push
sub
mov
shrb
test
cmc
in
mov
pop
pushf
pop
lret
fcoml
inc
dec
xchg
push
cmp
aad
cld
add
filds
filds
int
lds
data16
sub
idiv
les
std
mov
mov
sub
lcall
int
loop
dec
gs
mov
popf
or
cmpsl
inc
cli
int3
loope
lcall
icebp
scas
pop
xchg
cmp
and
ljmp
sub
popa
xchg
sub
mov
inc
lods
xor
inc
inc
adc
inc
jae
clc
pushf
dec
out
arpl
out
push
lret
and
cmpsl
cmc
adc
xchg
ja
xchg
jb
xchg
jg
repz
sbb
cwtl
int3
mov
lock
and
imul
xor
int3
leave
sbb
xlat
daa
xchg
cmpsl
addl
xorl
mov
in
add
enter
mov
nop
push
fidivrl
imul
add
dec
jmp
xlat
or
and
mov
in
sti
inc
and
cs
jl
inc
rolb
loope
lods
stos
and
lret
test
jno
mov
inc
sub
mov
push
sahf
sbb
cmpsl
and
jnp
push
idivb
movsb
subb
push
fsubrp
xor
in
xchg
filds
ficoms
aaa
inc
push
test
push
mov
lods
cmp
shrb
add
insb
mov
mov
xchg
cmp
mov
arpl
das
add
enter
mov
jb
push
fstps
cmp
ds
aad
fucomp
pop
in
rorb
adc
dec
or
mov
push
nop
sbbl
mov
mov
jg
jnp
cmp
loopne
mov
stos
test
addr16
push
jl
bound
fldt
dec
out
cmp
mov
cmpsl
rorl
jmp
and
or
lret
imul
cmp
or
mov
add
aaa
mov
sub
imul
jecxz
dec
sub
cli
insb
mov
ds
mov
cmp
pop
inc
into
adc
and
cld
pop
cmp
out
sbb
lods
xor
loop
inc
adc
fsubl
sbb
mov
push
popf
jg
xor
movsb
cmp
adc
ret
mov
sub
mov
shl
cmpsl
inc
movsb
call
and
or
jmp
mov
push
adc
push
sbb
test
shl
mov
sub
xor
cwtl
cmp
orb
hlt
fstpt
pop
test
xor
ja
repz
je
shll
in
sub
jnp
insb
xlat
sbb
jp
scas
bound
into
out
mov
mov
aas
sub
sub
jae
lret
outsl
es
sti
test
add
dec
in
pop
dec
notb
out
adc
mov
in
gs
add
lds
mov
push
imul
xor
pop
test
popf
dec
loop
and
jle
pop
out
mov
add
icebp
out
ljmp
outsb
mov
xchg
pop
out
imul
add
xchg
cmp
out
in
enter
push
push
push
ja
xchg
or
mov
cltd
sub
jae
pop
or
jo
sbb
pop
mov
lds
movsl
mov
dec
push
testl
scas
sbb
ja
cmc
std
data16
fs
iret
nop
lret
inc
or
pop
xchg
fs
dec
hlt
mov
mov
add
and
mov
outsb
mov
xchg
mov
add
sbb
inc
aam
packssdw
add
jecxz
shl
es
fwait
dec
xor
push
inc
lahf
es
rcrl
fists
dec
inc
aad
cmp
jo
orb
cmp
mov
cmp
gs
cmpsb
insb
es
frstor
adc
outsb
pushf
das
subl
pop
push
inc
punpckhwd
cltd
xor
ret
cmpsb
in
jl
sub
out
shll
aas
push
aas
xor
xchg
adc
mov
lcall
mov
jge
imul
lea
push
lock
mov
imul
out
adc
xor
lret
stos
add
cmp
lgs
bound
dec
adc
inc
stos
in
and
icebp
and
xor
sahf
lret
and
test
add
ss
mov
lods
lea
sahf
jg
xchg
mov
push
mov
divl
pop
sub
sub
inc
xchg
test
jle
in
push
popf
icebp
mov
sbb
shr
or
nop
push
nop
xor
inc
dec
pusha
ja
popa
fimuls
addr16
adc
jg
outsl
add
lock
xchg
jnp
mov
jecxz
jmp
stos
out
dec
inc
out
or
pop
aaa
scas
xor
ljmp
test
sahf
repz
xchg
jle
mov
pop
mov
loop
xchg
sahf
mov
mov
inc
xor
mov
add
in
jnp
fdivs
sub
sbb
popa
cld
rorl
loop
xor
insb
gs
add
and
fisttpl
pop
fmuls
sbb
or
push
jle
mov
rep
nop
pusha
iret
rolb
pushf
fnstsw
mov
sbb
scas
jecxz
imul
dec
xor
jne
inc
jb
nop
sub
inc
xchg
cmpsl
pop
inc
jbe
sbb
gs
xchg
push
xor
addb
push
pop
or
xchg
inc
pop
xchg
mov
add
call
fnclex
loop
jnp
adc
mov
xor
jge
xchg
cmp
lds
sbb
jns
add
loope
mov
repnz
fucompp
xor
or
adc
out
and
cmc
out
jecxz
sbb
mov
push
jne
mov
das
or
xchg
push
sub
push
outsb
fldcw
jne
rcr
out
lcall
mov
xchg
jbe
inc
movsl
cmpl
push
jge
inc
popa
test
popf
outsl
add
xchg
scas
shrb
sbb
andl
mov
xor
add
jnp
jns
sti
pop
or
sub
pop
pop
adc
scas
sbb
jmp
inc
setle
subl
lcall
std
xchg
cmp
sbb
xchg
or
cmp
sbb
push
negb
xchg
leave
xchg
or
mov
xchg
fcoml
mov
loope
sbbb
mov
and
inc
lods
call
addr16
cmpsb
jns
dec
jne
mov
popa
ja
add
mov
repnz
cwtl
bound
sub
int
or
loop
lea
gs
lcall
popf
int3
addr16
pop
shlb
fs
push
dec
in
sub
mov
lret
dec
ficomps
adc
sti
pop
lds
enter
cmc
and
popa
and
pusha
xorl
testb
aad
in
leave
adcl
ljmp
movsl
jp
nop
int3
clc
lds
cmc
jmp
jp
rorb
mov
loopne
xchg
insl
push
sub
or
push
or
pop
ds
imulb
xchg
add
sub
lret
push
mov
pop
pop
fldl
mov
or
and
sbb
addr16
out
paddb
dec
mov
addr16
mov
mov
dec
test
mov
into
sbb
inc
push
nop
push
fldenv
je
jno
mov
jbe
jl
pop
dec
mov
cltd
lds
mov
in
popw
push
jmp
xor
ds
movsb
lret
aas
ret
and
pop
jbe
mov
bound
sbb
in
int
std
ljmp
lds
dec
mov
ds
xchg
xchg
and
movsb
push
stos
push
dec
call
jmp
ret
nop
add
hlt
loopne
cmp
mov
test
adc
and
cmp
jno
adc
mov
push
rcll
aas
sub
aad
jb
inc
pop
cmp
xchg
cli
sub
mov
ficompl
jle,pt
stc
popf
inc
in
jno
add
imull
sub
pushf
out
iret
test
int
dec
pop
inc
ss
jbe
mov
call
cld
mov
xchg
fisubs
cmpsb
repnz
lcall
xlat
insb
in
div
mov
insl
mov
cmpb
mov
ds
fsubrs
mov
loopne
or
sub
and
dec
fisubrs
push
jg
loopne
or
mov
mov
cmp
xchg
cmp
ja
inc
xorl
stc
pusha
dec
js
js
popf
mov
leave
fidivl
xchg
loop
push
mov
aam
adc
mov
or
fisttpl
dec
ficomps
mov
jg
inc
adc
cli
inc
in
ss
insb
fisubrl
add
hlt
cwtl
adc
xor
loope
inc
jae
cmc
ds
fistps
adc
inc
mov
dec
sbb
cmp
xor
ss
xlat
ficoml
mov
into
iret
outsb
aam
scas
loope
fcomp
fcmovnb
inc
mov
insl
fs
lahf
mov
jle
jmp
mov
sti
rolb
xor
xor
pop
xor
pop
or
mov
imul
jbe
adc
sub
lret
ret
sbb
rolb
xchg
pop
je
rcll
out
cld
jnp
mov
dec
stos
in
js
push
inc
subl
and
push
dec
cmp
outsl
outsl
sbb
push
dec
inc
or
mov
imul
fbld
sbb
or
or
mov
pop
mov
dec
popf
cmp
cs
xor
outsl
jle
cmc
add
mov
mov
jnp
jle
push
jmp
aas
mov
sti
sahf
pop
fisubrs
rcrl
inc
jge
std
add
mov
lods
jae
cld
imul
cld
sahf
and
daa
push
cli
pop
test
sar
sbb
mov
dec
xorl
stos
leave
jmp
mov
xor
and
jns
mov
pop
xor
adc
cld
fcmovne
lds
mov
in
sbb
popf
lods
stos
fwait
jno
sahf
das
adc
dec
adc
or
pusha
dec
in
imul
rcrl
xchg
xchg
push
aaa
jns
inc
jecxz
dec
inc
lds
add
add
jbe
call
mov
gs
sbb
push
jae
popf
push
push
pop
arpl
jge
adc
sbb
pop
mov
inc
mov
xchg
test
mov
rorl
leave
inc
jl
or
dec
out
jbe
xchg
mov
pop
bswap
xchg
stos
and
pop
inc
mov
repnz
xchg
ret
and
pushf
adc
pop
mov
sbb
mov
iret
cld
xchg
icebp
setp
and
xchg
movsl
pop
addl
mov
pushf
cmp
outsl
xor
pop
mov
aaa
cmp
std
imul
testl
in
mov
add
add
in
hlt
add
ljmp
dec
jmp
inc
adc
xchg
or
or
pop
es
and
mov
sbb
mov
stos
ljmp
sahf
pop
mov
push
cmpl
mov
repnz
cmp
ljmp
mov
xchg
sub
leave
iret
int
mov
in
and
sbb
sub
push
fwait
add
inc
ja
xorb
lods
adc
jmp
jb
addl
mov
pushl
pop
das
test
popf
push
aaa
lods
daa
mov
inc
mov
es
pop
inc
dec
mov
aaa
xchg
xchg
ja
mov
mov
jge
loop
fbstp
mov
les
repnz
xchg
cmpsb
mov
test
fcoms
mov
popa
roll
andnps
jmp
in
mov
cmc
cmp
and
lock
es
pop
mov
sub
mov
mov
add
mov
dec
repnz
xor
sbb
inc
repnz
jg
repnz
cltd
sbb
popa
cmp
pop
add
in
fistps
xchg
mov
push
mov
hlt
dec
mov
pop
pushf
cmp
xchg
sub
fcoml
fcoml
scas
loopne
xchg
scas
sub
lock
out
mov
cmc
xchg
mov
lret
push
cmp
mov
add
xor
sti
mov
movsb
dec
push
insl
dec
ds
push
stc
scas
push
mov
mov
sbb
cmp
fsubr
fisttpl
mov
cmp
pusha
inc
test
out
cmp
xor
js
mov
dec
icebp
sub
jle
jno
pop
pop
cmp
push
mov
pop
mov
dec
jb
add
mov
mov
aas
mov
xor
jb
cwtl
mov
pushl
sbb
sbb
jle
sub
adc
fidivrs
fcomps
scas
es
filds
clc
add
mov
cltd
mov
test
hlt
inc
and
mov
into
outsb
sbb
mov
jae
push
cmpsl
adc
fadds
sub
mov
push
sub
test
inc
jmp
outsl
jge
sbb
cs
jns
andb
loopne
jb
cwtl
fildll
notb
mov
out
jb
jno
sub
mov
sub
icebp
aaa
imul
pop
in
sbb
mov
cwtl
push
sub
xchg
test
loope
add
fiaddl
xchg
cli
je
pop
dec
es
mov
mov
nop
popf
rcll
mov
repnz
fcomip
pop
push
cmpsl
nop
jnp
mov
lcall
mov
std
push
insl
lods
rol
pop
test
sub
or
sahf
mov
subb
sub
imull
popl
cmp
pop
sub
inc
push
push
mov
insl
loop
dec
daa
adc
in
xor
sbb
iret
xor
add
xchg
adc
pusha
dec
fidivrs
insb
aad
leave
mov
dec
scas
dec
scas
pop
inc
push
and
fstl
sbb
or
inc
and
in
pushf
fistps
mov
sti
push
popf
push
cmp
int
xor
adc
test
lcall
imul
push
cld
mov
lret
icebp
test
sbb
hlt
outsb
shll
xchg
dec
enter
pop
mov
into
or
add
jbe
call
adc
xor
das
mov
jl
lock
mov
insb
fs
mov
pop
std
loopne
dec
repz
sbb
jge
pop
mov
aaa
movsl
adc
orl
mov
rcrl
pop
sahf
dec
jmp
test
sbb
pop
fisttps
jmp
xchg
ret
shlb
ret
std
sahf
mov
popf
int3
push
popa
mov
aad
into
mov
faddl
jecxz
push
fimull
inc
iret
fidivrl
out
jmp
push
subb
pop
nop
out
mov
lcall
add
mov
dec
movsl
and
mov
adc
sub
push
ss
ret
and
xor
inc
xchg
mov
subl
dec
dec
cmp
int
aad
test
nop
xor
xor
clc
inc
lret
movsl
loopne
cli
mov
adc
insl
cmp
or
mov
sub
mov
call
and
icebp
ja
repnz
stos
leave
push
jo
mov
pop
inc
fisubl
ja
xor
movl
mov
out
push
and
mov
stos
out
fs
cwtl
lds
daa
nop
inc
das
or
mov
lcall
jmp
fwait
pop
sbb
fst
daa
push
cmp
adc
outsl
sub
and
lahf
or
mov
adc
int
sub
aaa
sbb
and
mov
xchg
pop
enter
lods
and
lds
mov
sbb
sub
xchg
pop
dec
cmc
dec
mov
popf
mov
pop
iret
inc
jb
repnz
pop
in
mov
mov
xchg
call
ljmp
jnp
pop
ret
jne
repz
sub
mov
lret
sbb
fimull
push
pmullw
cs
hlt
test
sub
pop
xchg
loope
pushf
dec
xor
dec
jp
stos
push
cmp
sahf
lcall
or
mov
inc
les
adc
shrb
ret
cmp
andb
mov
addr16
les
setbe
pop
rcrl
scas
inc
cmp
xor
ljmp
jno
leave
and
mov
subl
sbb
and
inc
jg
fcomps
mov
mov
loopne
push
enter
adc
add
cmp
jne
add
ss
sbb
jne
lock
or
mov
insl
subl
inc
or
fwait
sub
aas
ss
ja
je
jb
mov
or
xorl
cmpsl
mov
pushf
mov
push
xchg
popa
cmp
fcmovne
or
dec
lret
lahf
dec
ja
into
pop
idivb
lods
jle
into
ss
push
lock
scas
arpl
mov
sbb
outsl
and
insl
in
movsl
ljmp
sarb
inc
mov
push
fisttpll
leave
repz
aam
jmp
out
sub
in
and
mov
mov
loop
add
movsl
decl
xchg
and
inc
loop
test
pop
shll
pop
out
xchg
jae
inc
mov
lods
clc
sub
pushf
sbb
js
aas
jp
je
test
or
add
sbb
sti
jle
mov
xchg
sub
inc
cmp
out
loope
ljmp
xor
mov
out
xor
movb
xchg
cmpsl
xor
and
dec
sub
out
jl
iret
shr
cltd
cli
ljmp
adc
cmp
sbb
insl
cli
fcomp
xor
mov
jl
sbbb
pop
xlat
test
mov
aad
xor
in
es
adc
mov
js
dec
aad
inc
fstpt
imul
mov
andb
movsl
in
dec
fwait
mov
ret
dec
sbb
negl
pop
adc
push
movsb
adc
sbb
add
int
repz
add
mov
mov
es
fldt
mov
mov
xlat
jg
ret
aam
or
xchg
sti
lahf
rcrb
dec
lds
sti
and
cld
in
mov
nop
lcall
arpl
popf
imul
fwait
pop
int
push
lds
inc
xlat
lcall
dec
or
sub
sub
scas
pop
and
divb
inc
lock
cmc
imul
lcall
stos
lods
andps
dec
out
mov
mov
rorb
push
push
adc
push
loopne
imul
jmp
call
sbb
xor
mov
mov
in
scas
shrl
inc
arpl
js
cli
cmp
fucomi
or
sbb
adc
mov
lret
pop
mov
or
lods
dec
cmpsl
add
mov
push
out
inc
adc
out
test
enter
es
cltd
cmpsl
test
mov
mov
loop
es
add
or
ds
xchg
add
xor
test
adc
call
and
aam
cli
mov
mov
jo
sub
pushf
fiadds
jae
sti
out
fistps
sbb
cmc
fnstenv
pushf
jae
cmp
mov
imul
lret
xlat
ret
cmp
repz
pop
ljmp
rcrl
das
fisubrl
cmp
dec
pop
movsl
cmpsl
add
in
in
call
in
cmp
ret
fdivrp
push
ja
xchg
cmp
leave
loope
xchg
add
xchg
and
jbe
rolb
push
cmp
push
xchg
dec
and
pop
dec
adc
xchg
in
nop
xor
jbe
xor
dec
dec
or
movsb
int3
repz
push
lock
lret
mov
sbb
cmp
or
gs
sbb
ss
adc
inc
adc
jp
roll
adcl
dec
dec
call
rorl
jb
shlb
pop
cmpxchg
or
or
cwtl
scas
pusha
push
lret
iret
and
xor
jge
lcall
cmc
sbb
scas
test
and
dec
mov
dec
jecxz
jmp
pushf
icebp
popa
lret
and
sub
xor
js
xchg
ss
outsb
add
mov
lods
inc
cli
negb
gs
push
inc
xor
sub
jb
or
jbe
mov
push
mov
jg
mov
push
lods
push
imul
call
mov
xor
icebp
hlt
add
or
js
and
xchg
ret
lock
jmp
jle
shl
and
dec
lods
push
sbb
in
lea
or
or
sub
push
pop
in
pmulhuw
mov
data16
testb
data16
lret
mov
rcrl
movsl
out
dec
sub
or
enter
mov
mov
popf
inc
ljmp
insl
dec
sbb
outsb
lret
xor
mov
mov
cmp
loope
jbe,pn
xor
aas
cwtl
int
or
sub
and
mov
scas
pop
fmull
push
pusha
lods
and
jmp
mov
push
push
mov
lahf
sbb
or
xor
lahf
into
aaa
cltd
insb
stos
enter
das
mov
adc
pop
dec
cmp
pop
sbb
bound
imul
int3
xlat
and
add
cltd
cld
int
pushf
xchg
gs
and
mov
mov
add
xor
and
inc
jle
xor
dec
push
sbb
stos
leave
mov
push
fiadds
sbb
dec
sub
shll
xchg
aaa
icebp
ret
xchg
pop
mov
nop
iret
aam
and
test
dec
and
outsb
push
fucompp
popa
nop
cmp
fmull
push
addr16
inc
cmp
inc
push
fs
add
and
inc
repnz
mov
jmp
mov
sbb
sahf
mov
jmp
lret
xchg
out
aaa
jmp
ss
xchg
loop
sbb
inc
pop
jmp
fiaddl
xchg
cmc
fwait
insb
gs
push
movsb
test
lds
sbbb
stos
es
sbb
xchg
lcall
jg
jmp
push
jns
and
test
in
and
stc
decb
mov
pop
popa
mov
inc
lret
test
pusha
mov
movsb
neg
popf
mov
std
cmpsb
pop
aas
dec
dec
sbb
mov
mov
mov
shl
scas
pop
mov
mov
jbe
ljmp
jge
gs
inc
test
out
cs
loopne
mov
mov
rcll
mov
nop
fstpl
or
out
popf
dec
mov
in
mov
lods
sbb
push
xchg
xor
movsb
push
pop
test
mov
and
add
lcall
pop
mov
lahf
pop
leave
pop
loop
mov
das
fnstenv
int3
pop
stc
sbb
cli
pushf
in
pop
xlat
fisubrs
es
mov
push
mov
test
and
iret
cwtl
data16
cmp
daa
icebp
add
iret
mov
xchg
out
push
push
inc
bound
out
cmova
cwtl
movsl
sub
dec
stos
pop
or
or
xor
push
rcll
stos
inc
mov
fcmovbe
cmp
mov
into
ret
mov
inc
sub
imul
btc
out
dec
faddl
rcl
rcll
xchg
sbb
and
rcrl
sbb
popf
or
mov
insl
and
mov
adc
xor
add
fadds
gs
lahf
loopne
cmc
push
ficomps
mov
movsb
mov
divb
in
add
int
sbb
pop
push
dec
mov
mov
inc
jp
sub
add
jne
or
mov
clc
loop
andb
negl
xlat
sti
fwait
inc
and
push
daa
or
icebp
mov
es
or
gs
mov
das
cmp
mov
cmp
vdivpd
adc
ljmp
pop
xorb
fildl
push
xor
pop
loopne
hlt
inc
daa
sub
add
mov
out
or
scas
cmp
dec
mov
sahf
cltd
mov
jmp
xchg
movsb
mov
mov
jmp
jbe
or
xor
dec
popf
xchg
enter
cmp
in
mov
mov
add
pop
jns
pop
cwtl
fadds
xor
fcomps
in
sub
mov
mov
pop
ret
lsl
xor
ljmp
xchg
mov
iret
mov
scas
and
enter
add
frndint
and
adcb
push
out
xchg
pop
xchg
cmpb
jge
or
mov
pop
popf
loop
cmpb
lock
lcall
inc
cwtl
pop
mov
xlat
sar
sub
push
push
inc
mov
imul
adc
jg
in
in
in
mov
jnp
dec
jo
jmp
dec
pop
icebp
jo
mov
imul
popf
lret
pop
mov
fisubrs
push
xlat
mov
jno
test
aas
sub
mov
cltd
getsec
sbb
adc
fprem
aad
adc
bnd
mov
sbb
por
sub
add
xor
add
add
andl
xchg
popa
fwait
sub
sub
das
frstor
or
pusha
je
pop
iret
cmc
pop
push
lcall
pop
out
mov
ficomps
mov
aaa
dec
loopne
add
orl
test
insl
mov
jg
or
out
push
pushf
jne
push
cmp
xchg
popa
xchg
imul
data16
cmp
cmp
sarb
dec
push
jb
out
mov
movsl
mov
pop
jp
shll
fucomi
mov
push
scas
adc
sbb
outsl
cli
bound
popf
push
mulb
stos
mov
loopne
das
sub
js
fs
aaa
mov
or
loope
ret
cltd
mov
repnz
xchg
adc
lods
int3
jbe
xor
aam
or
mov
ret
in
movsl
and
or
jno
jle
ret
jae
out
call
mov
imul
mov
and
jg
push
aas
fcoml
jno
mov
adc
or
lods
lret
mov
cmp
cmpsl
repnz
aad
popl
mov
lods
cmp
mov
out
sbb
aad
xlat
mov
divb
sti
cmc
push
fwait
inc
test
inc
aam
in
aaa
arpl
mov
jl
int3
ja
cmp
mov
mov
cmp
pop
ret
inc
in
push
pop
aas
dec
cmp
pop
and
adc
dec
aas
xor
pushf
ja
movsl
movsb
or
mov
insb
fwait
mov
aad
cwtl
ret
add
push
adcb
push
xchg
lret
mov
mov
mov
jp
adc
mov
jo
cwtl
xor
xor
mov
and
stos
mov
add
ret
gs
and
add
je
pop
sbb
out
push
mov
xchg
jecxz
add
pop
nop
push
add
inc
lret
push
adc
xor
mov
sbb
jecxz
setg
sub
call
cmp
movsb
pop
lahf
jae
pop
xor
adc
lahf
push
xlat
mov
xchg
or
insb
and
jmp
ss
pop
cmp
dec
mov
fcomp
add
xlat
loopne
jno
js
xchg
daa
nop
jne
sbb
xor
bound
cli
popa
in
jmp
fsubrl
leave
dec
lcall
int
mov
fidivl
mov
aad
int3
mov
scas
test
scas
xchg
mov
mov
ror
or
pusha
leave
out
fs
stos
fwait
imul
cmp
leave
sub
inc
shlb
test
adc
mov
frstpm(287
in
je
dec
sub
cmc
imul
test
sbb
mov
adc
mov
inc
jb
dec
jecxz
sbb
pop
imul
inc
xor
cmp
shrl
and
test
mov
out
pop
jns
mov
add
movsb
fnstsw
sub
sbb
jge
ror
imul
je
aas
cwtl
push
add
jecxz
mov
test
repz
out
cmp
mov
push
fs
dec
stos
es
cmpl
fnsave
mov
push
dec
into
arpl
xchg
addr16
mov
stos
sub
pop
jno
xor
or
iret
and
std
and
and
mov
mov
fstl
movsl
adc
mov
mov
pop
subb
lcall
and
sub
dec
mov
jmp
movsb
inc
sub
jg
dec
lods
and
fsubs
lock
sahf
inc
dec
aas
mov
fs
and
jl
lret
mov
add
jo
cmpsl
pop
lret
das
lret
inc
xor
mov
int3
mov
xor
dec
jbe
cmp
out
js
inc
xor
mov
decb
push
xor
jne
sub
in
into
enter
push
sub
and
inc
sbb
mov
les
lea
rcrl
jo
out
loope
dec
outsb
clc
cwtl
mov
out
jb
mov
xor
test
push
cltd
mov
out
pop
and
cmpsb
scas
imul
dec
stc
cmpsb
cmpsl
loopne
push
jle
mov
adc
dec
inc
gs
in
push
xchg
andl
mov
popa
push
cs
test
jmp
sub
into
data16
add
xchg
fldl
lret
ds
sbb
cmc
mov
cmpsl
xchg
pop
push
daa
outsb
lahf
lods
xchg
sbb
mov
cli
pop
add
mov
or
cmp
out
shrl
loopne
jns
dec
ja
push
sub
and
outsl
leave
or
dec
aas
jp
cld
jb
mov
imul
push
add
insb
xchg
pusha
sbb
jge
in
push
mov
lret
mov
and
adc
and
pop
testl
hlt
sub
lahf
jo
adc
loope
cmp
scas
bound
pop
sbbb
stos
cld
sub
xchg
fmul
fcmovu
ss
cwtl
leave
mov
mov
add
in
lea
into
jl
and
fld
fnstcw
les
pop
int
leave
aas
cmp
push
fcoml
push
inc
mov
repnz
sti
push
movsb
push
dec
insl
fmul
push
xor
int
lret
cmp
xor
pusha
xchg
dec
mov
fsubp
cld
adc
or
cmp
pop
rorb
jp
shrb
xchg
or
pop
outsl
js
loopne
mov
jle
xchg
mov
add
inc
adc
movsb
out
adc
out
push
adc
and
std
mov
push
xlat
mov
cmp
mov
daa
dec
mov
mov
mov
test
test
mov
mov
js
int
pop
es
pop
dec
xchg
test
inc
in
push
mov
jmp
dec
outsb
cld
mov
adc
push
adc
xchg
test
pop
xor
mov
shl
push
in
push
xchg
inc
pop
inc
sub
mov
stc
xor
es
push
jne
lcall
stc
pop
jae
inc
sbb
pop
mov
orb
jp
or
adc
and
popf
add
sahf
lods
daa
add
imul
cmpsb
inc
out
into
inc
ss
pop
sbb
outsb
test
rcrb
fmulp
inc
sub
mov
pop
xchg
fiadds
mov
loopne
push
cmpsb
out
adc
pop
xchg
dec
mov
enter
xor
mov
lahf
push
inc
sbb
cmp
pushf
push
imul
mov
xchg
or
pop
sub
jge
mov
ret
jle
inc
std
cmp
fidivrs
sbb
sub
inc
adc
push
inc
notb
push
fisubs
popa
jecxz
dec
stos
in
stc
imul
jg
inc
out
insl
and
aaa
shlb
sub
jmp
scas
lods
stos
push
insb
adc
enter
aam
pop
mov
das
jl
xchg
pop
jl
mov
push
jmp
xor
sbb
ret
cmp
rcll
into
lock
xor
iret
xchg
add
add
int
mov
js
negl
pop
scas
pop
sahf
cmp
shll
out
scas
push
xchg
add
repnz
incb
mov
xor
shrl
xchg
jg
int
push
enter
int
stos
sub
adc
aas
cld
push
mov
cmp
xchg
xchg
add
push
cli
jecxz
push
xor
cltd
xchg
mov
pop
insb
lea
test
adc
ret
test
loopne
aas
cmpb
shll
sbb
pop
in
pushf
pushf
mov
pop
cmp
in
add
cld
inc
xchg
jmp
push
repz
dec
push
mov
xchg
mov
jbe
popa
push
adc
dec
scas
rorl
lcall
push
cmc
movsl
int3
mov
nop
je
push
sub
outsl
mov
insb
dec
cwtl
mov
repnz
xchg
out
dec
sub
test
fcompl
mov
test
jle
das
insb
mov
das
mov
shlb
sbb
imul
sahf
xor
fwait
cmpl
repz
sbb
iret
in
add
icebp
or
and
lcall
daa
jnp
lahf
fldl
mov
pop
loope
fstps
mov
dec
mov
push
pop
imul
sti
mov
jnp
sarl
mov
mov
in
jae
ret
xchg
daa
movb
jb
pop
push
daa
imul
data16
filds
sbb
or
xchg
dec
cmp
push
in
ss
cmp
sbb
fstps
jecxz
clc
or
out
cmpsb
push
dec
out
xchg
pop
test
test
scas
subl
lock
add
lock
mov
shll
pop
gs
out
popa
in
movsb
mov
jmp
mov
js
xor
jne
pop
push
mov
pop
and
adc
add
pop
fs
shlb
mov
icebp
mov
and
repz
into
popa
adc
scas
push
mov
cli
mov
sub
push
mov
in
out
adc
dec
mov
sahf
xchg
add
inc
outsl
lahf
cmp
xor
add
call
fistps
lcall
mov
mov
pop
pop
mov
dec
mov
aas
out
mov
fimull
iret
into
and
mov
sub
jge
adc
jnp
stos
outsl
pop
add
pop
in
mov
and
loop
push
mov
outsl
outsl
cmp
or
sbb
popa
adc
mov
popa
mov
jg
sub
sti
sub
jno
aaa
add
adc
mov
stc
dec
xchg
cltd
xor
sbbl
pop
jg
xchg
mov
cli
insb
or
sub
xor
dec
fildl
mov
in
push
arpl
gs
fildl
inc
add
imul
add
push
insl
les
inc
push
mov
mov
outsb
lret
data16
std
jg
rcll
into
out
mov
imull
fadds
mov
jno
mov
cld
xchg
mov
imulb
jle
and
dec
mov
sub
mov
ret
sub
in
out
mov
add
push
push
std
jne
add
and
call
adc
out
xchg
inc
ret
xchg
aad
jae
pushf
aas
cmp
daa
testb
and
out
xchg
rcrl
dec
jl
pushf
pop
xlat
mov
mov
push
push
out
xchg
sub
mov
jmp
lds
mov
jl
fisttpl
or
subb
xchg
cld
dec
idiv
jp
jns
add
push
outsb
pop
jmp
mov
xor
lods
mov
sbb
push
sub
dec
xor
xorb
mov
dec
adc
mov
cmpsl
cmc
sbb
repz
daa
adc
clc
xor
aaa
mov
js
paddq
fwait
out
mov
xchg
inc
arpl
pop
adc
leave
add
aas
fs
xor
and
out
mov
mov
push
cmpb
mov
out
outsl
xor
in
outsl
dec
adc
stc
xor
pop
dec
adc
or
mov
push
dec
xor
mov
adc
jmp
not
outsb
imul
sbb
dec
iret
lret
rcrb
fisubrs
xchg
call
inc
imul
or
insl
sub
mov
popf
movsb
call
sub
leave
xor
cmpsl
mov
add
dec
fisubrs
and
sahf
adc
xchg
adc
sbb
orl
scas
addb
add
mov
jo
push
in
stos
mov
mov
dec
xchg
dec
cmp
ljmp
pop
pop
add
loop
mov
add
dec
cmp
movb
sbb
cmpsl
adc
xchg
mov
inc
pop
cmp
adc
mov
stos
mov
loop
sti
jle
pop
cmp
lahf
mov
adc
test
dec
xchg
out
lcall
cmp
lret
cmp
pop
int3
stos
adc
adc
fdivs
icebp
push
add
dec
lds
insb
lock
mov
cmp
jo
fidivrs
dec
loope
out
pop
xchg
sub
fmull
ds
test
lods
fs
and
sbbl
mov
fcompl
out
push
xchg
dec
xchg
lods
dec
lods
popl
or
ficoml
add
push
js
aas
cmp
outsl
xor
sub
mov
push
mov
outsb
push
mov
xor
xchg
lcall
outsl
pop
f2xm1
test
sub
rcrl
cmp
jp
es
dec
jns
fsubp
lock
repz
jge
xor
aad
or
jae
andl
push
mov
jne
inc
push
ja
insl
jne
pop
jbe
test
or
xchg
mov
aad
push
adc
push
adc
aam
adc
test
inc
test
add
sbb
jb
lcall
stc
mov
xor
fwait
leave
insl
sarb
int3
lret
mov
jae
sbb
add
or
or
pop
push
xchg
testb
adc
pushf
in
loop
adcl
pop
jb
lds
xchg
rclb
jo
adc
xor
es
or
cmp
aaa
loopne
mov
jl
add
arpl
loopne
hlt
pop
loopne
pop
cmpsl
hlt
sub
shll
lods
int
xchg
or
mov
inc
mov
push
and
inc
ljmp
adc
scas
dec
mov
outsl
hlt
aaa
add
and
jnp
push
insl
test
lods
lret
mov
inc
mov
cs
sub
mov
jge
fsubl
xchg
daa
pop
xor
out
or
mov
stos
pusha
test
inc
cmp
shll
mov
flds
xchg
push
mov
cltd
jae
dec
subl
pop
hlt
dec
aad
mov
push
or
outsl
test
xchg
popf
ljmp
jb
push
dec
xchg
fstps
in
aad
icebp
cs
inc
mov
jg
sub
int
cli
inc
insl
or
sbb
idivb
mov
adc
in
xor
dec
lock
jle
sub
in
dec
jb
leave
cmp
incl
cmp
test
mov
fistl
and
jmp
pop
jo
push
cmp
xchg
mov
add
mov
mov
push
push
sbb
mov
push
xorl
mov
nop
sbb
aas
dec
cmpsl
mov
fdivrs
data16
clc
cmp
nop
add
fstl
dec
jg
jbe
mov
mov
cmpsl
sub
cmp
mov
or
pop
sub
lahf
adc
or
popf
push
xor
movsl
xchg
gs
xor
adc
fcoml
leave
out
arpl
jno
add
mov
push
cmpsb
or
mov
mov
jnp
sub
inc
inc
sar
ds
pushl
out
cwtl
adc
mov
mov
dec
loopne
inc
or
out
test
xlat
lret
sbb
sub
sbb
push
dec
add
mov
aas
xchg
repz
cmp
inc
pop
xchg
adc
add
mov
in
inc
adc
arpl
pushf
in
add
ljmp
fnsave
inc
fistps
ss
mov
dec
cmc
test
lds
aad
xchg
int
push
xchg
push
shlb
outsb
xor
aas
sti
xor
cmp
mov
sub
es
test
ss
inc
shll
push
mov
lahf
sbb
jmp
mov
scas
jne
shrl
inc
mov
xor
ja
sarb
lret
push
mov
inc
mov
lret
mov
sti
jbe
push
pop
rclb
out
mov
imul
cwtl
mov
xchg
out
dec
mov
das
dec
mov
pop
dec
int
nop
or
stos
mov
xor
pop
movsl
push
jecxz
jle
cmp
push
int
lock
jnp
movsl
or
and
cmp
inc
xchg
aaa
pop
xchg
std
repnz
rcl
cwtl
add
add
or
or
int3
pop
ret
loope
cli
insl
or
adc
ds
and
lds
cmc
lea
cwtl
push
repz
mov
xchg
mov
leave
mov
aas
pop
mov
aad
and
enter
pop
aaa
fs
add
xchg
sub
jl
adc
mov
xor
repnz
or
jmp
nop
xchg
mov
loope
sub
pop
dec
in
lret
and
in
add
movsl
mov
cltd
mov
das
rorb
sbbl
jno
xor
cmpsl
xorb
sbb
push
fs
cltd
xor
sub
and
xchg
fs
mov
xor
mov
xchg
fwait
inc
cmp
mov
je
arpl
push
add
rolb
loope
mov
jp
mov
xor
inc
sub
and
add
inc
testb
les
jns
pop
xchg
outsb
inc
fisubs
push
jge
mov
arpl
push
cmpsl
mov
test
lcall
stc
addr16
push
mull
mov
rcrl
sbb
dec
les
movsl
sub
dec
mov
lods
or
lret
int3
add
xor
insb
xor
and
mov
ja
push
pavgw
cmp
jne
and
ljmp
xchg
mov
scas
mov
dec
in
sbb
mov
stos
lret
bound
cmpsl
fnsave
lea
lcall
or
addr16
add
dec
or
adc
fcoms
jae
fmul
add
and
lods
lret
js
pop
xchg
scas
and
test
lods
loopne
cmp
sbbl
lock
xchg
clc
push
addr16
inc
jge
mov
dec
out
pop
sub
cld
jle
fildll
subb
push
add
out
mov
xchg
mov
inc
dec
mov
or
xchg
mov
aad
cs
in
pop
or
mov
inc
and
mov
jp
xchg
leave
mov
int
push
mov
or
and
push
stos
ret
sub
and
js
inc
insl
pusha
xchg
pop
js
loop
stc
mov
push
mov
adc
fnstenv
xchg
jecxz
mov
gs
mov
jge
fsubs
xchg
loop
fsubrs
imul
js
popa
cltd
adcb
ret
testl
sahf
repz
or
ss
enter
sub
jne
cmp
clc
jbe
inc
cld
add
pop
adc
jbe
xchg
jae
into
idiv
dec
pusha
fst
jmp
pop
sub
mov
aam
leave
pop
fst
aas
dec
cltd
repnz
shlb
xor
cmc
dec
ret
dec
out
push
inc
test
mov
adc
icebp
lret
sbb
lahf
and
and
or
lret
aas
mov
xchg
and
aaa
adc
inc
fisttpl
gs
js
xor
dec
icebp
lret
or
sub
inc
inc
lock
shll
ds
and
repnz
cld
jg
jno
pop
inc
xorb
pmuludq
lock
pop
rorl
loop
lcall
ljmp
pop
pushf
mov
imul
cmp
fs
lods
in
imul
sbb
daa
mov
in
pusha
out
bound
icebp
subl
push
pop
or
fidivrs
mov
out
fstpt
xor
jle
shrl
mov
aad
lcall
mov
xchg
jb
adc
jbe
xchg
pushf
loop
push
push
pop
xor
mov
cmpb
ficoms
inc
add
xor
push
ss
xchg
js
dec
mov
sub
cltd
or
bound
mov
aad
add
imul
sub
and
into
cs
dec
adc
shr
bound
push
jne
jb
jp
and
jae
pop
push
mov
cmpsb
xor
cltd
mov
jmp
or
adc
adcl
imul
fistpl
mov
add
pop
push
test
test
mov
sub
adc
bound
inc
and
movsb
mov
das
mov
loop,pt
xlat
pop
pop
ja
call
test
jge
jo
sbb
arpl
xor
xor
mov
xchg
into
sub
shl
das
adc
push
inc
add
ss
dec
rorb
inc
or
loopne
mov
sbb
xlat
fcomps
mov
and
mov
daa
mov
xor
pop
pop
xchg
pushf
ds
adcl
out
add
push
or
add
fnstenv
dec
or
int
enter
ret
mov
mov
sti
sub
pop
push
and
dec
xchg
rcrb
jmp
inc
jno
mov
stc
lahf
mov
and
or
jno
xchg
pop
cmp
mov
mov
or
not
pop
stc
hlt
mov
adc
lcall
adc
subb
imul
popa
jp
pop
adc
xor
mov
push
dec
ljmp
out
outsl
xchg
sub
pop
fldl
sahf
je
and
shrb
xor
adc
inc
mov
mov
cwtl
sub
iret
clc
pop
dec
push
push
cld
pop
es
call
idivb
push
push
sbb
fiadds
or
adc
cmpsl
adc
mov
jnp
imul
xor
cmp
add
mov
fstpt
mov
scas
mov
aas
inc
push
mov
fsubs
push
xchg
cmpb
mov
xor
cltd
clc
ret
inc
adc
gs
sub
xchg
aad
and
dec
cmp
jns
sub
mov
push
pop
js
imul
or
out
test
addr16
add
jo
xor
mov
lea
testb
dec
and
stos
lret
dec
shll
inc
daa
out
jnp
mov
push
pop
cmp
or
shrb
test
lcall
aam
jle
mov
fs
inc
mov
test
cmc
mov
stos
pop
pop
sub
imul
and
lock
push
inc
repz
hlt
xor
and
push
aad
outsl
pusha
cmove
ficomps
test
dec
in
iret
or
adc
and
ror
push
out
sbb
adc
dec
gs
stos
aas
or
jle
rorb
int
gs
fisubrl
bound
jmp
and
inc
and
push
sbb
xor
dec
push
aam
pop
fwait
push
jmp
mov
add
xchg
mov
lds
pop
inc
adc
nop
dec
sbb
loopne
sub
fsubl
js
stc
out
mov
jle
shlb
push
repnz
pop
and
gs
pop
xchg
add
dec
aaa
movsl
add
les
xor
fcmove
pop
jmp
xchg
cmc
jl
cwtl
cmp
sub
js
aas
shrl
mov
jnp
or
inc
cmp
xor
mov
or
fdivs
cmp
lret
fcoms
fwait
lock
aaa
xchg
or
push
mov
push
sbb
xor
movsb
add
mov
mov
jg
xchg
pusha
popf
pop
cmp
push
push
or
dec
loopne
dec
mov
arpl
mov
add
sub
push
mov
js
popf
fildll
lret
into
lcall
dec
mov
das
sub
push
jl
test
in
pop
sub
test
inc
mov
cmp
ret
es
mov
mov
cmp
in
into
jg
test
fisubs
sub
mov
pusha
sti
xor
fidivs
jle
ret
insl
mov
jl
out
jecxz
dec
test
pusha
adc
add
arpl
sub
cmp
sub
cli
cmp
andl
je
inc
mov
popl
mov
in
lock
add
and
std
popf
mov
ljmp
cmp
call
add
nop
stc
push
popa
cltd
lds
jl
ljmp
out
test
cmp
in
sti
xchg
pop
shll
aaa
loopne
imul
mov
aad
rcrl
inc
les
add
jbe
outsl
les
test
pop
mov
fwait
mov
lds
shrl
roll
jg
push
sub
scas
ret
sbb
into
cmp
push
mov
push
push
mov
ret
fmuls
xlat
push
arpl
pop
jl
cmp
mov
xchg
stos
ljmp
push
pop
mov
push
arpl
pop
fdivrl
out
jmp
mov
rclb
jns
mul
adc
pop
mov
daa
imul
and
fwait
dec
pusha
pop
daa
cmp
sbb
pop
rcll
or
sub
push
add
mov
rcll
lahf
add
adc
jnp
mov
push
mov
mov
shll
fs
cmp
arpl
in
cmc
out
cld
push
mov
cmp
sbb
imull
mov
inc
mov
ss
add
dec
aam
inc
mov
mov
mov
mov
fidivs
lret
xlat
push
enter
rcl
stos
mov
jb
add
push
mov
and
fldt
add
push
call
sbb
call
fdiv
push
outsl
add
aas
xchg
push
xchg
nop
mov
dec
ffreep
repz
rorb
movsl
sahf
fidivrl
shll
scas
adc
xchg
popa
add
fcmovbe
lcall
mov
daa
shl
jecxz
cmp
pop
imul
push
icebp
pop
jge
stc
enter
out
jg
aas
and
add
mov
out
sbb
inc
add
push
sbb
aaa
add
repnz
xor
pop
loop
clc
mul
fidivl
pop
bswap
jae
fs
sub
divl
lret
arpl
sbb
cmpsb
scas
or
mov
pop
hlt
jmp
dec
jge
lods
gs
push
and
aaa
xchg
test
cli
mov
fwait
mov
mov
enter
repz
fisttps
sti
subb
dec
inc
lcall
js
add
arpl
lea
cli
sub
loopne
cmp
lods
cs
js
mov
dec
pusha
jl
mov
jmp
in
nop
and
xlat
adc
lret
mov
dec
insb
pop
sub
jns
xchg
dec
sbb
jl
xor
sbb
daa
out
psubb
insb
shrl
sbb
mov
cli
movsb
dec
dec
in
lods
mov
push
das
sbb
ret
xor
insl
insb
cmpsb
xor
inc
jne
jo
sub
out
arpl
stc
subb
addr16
mov
sbbb
lret
test
inc
pop
std
ret
insl
adc
fidivrl
test
addr16
arpl
and
rcrl
dec
dec
movsb
mov
or
popf
and
jge
and
mov
push
and
inc
sbb
je
add
fsubrs
adc
lods
add
xchg
mov
push
movsl
mov
nop
push
push
stos
xchg
ljmp
mov
jnp
fs
mov
push
mov
sti
aas
and
and
idivb
scas
clc
shr
decl
scas
stos
or
and
adc
mov
sbb
mov
pop
les
imul
cmp
loopne
dec
mov
cmp
push
in
jg
push
fsub
sub
mov
push
out
add
aad
outsb
mov
sbb
loop
hlt
icebp
hlt
imul
int
cwtl
jns
pusha
bound
stc
lret
int3
movsb
mov
int
xchg
scas
inc
fcoms
mov
repnz
xchg
cmp
xchg
lds
iret
lods
shrb
js
adc
push
sbb
inc
jmp
push
inc
popa
mov
sub
mov
sbb
pop
add
test
icebp
pop
addb
mov
adc
sub
mov
sar
sbb
mov
ret
ja
mov
fadd
push
sbbb
rcll
shll
push
mov
lods
negb
mov
sbb
insl
lds
inc
outsl
inc
ss
xchg
loope
int
xor
adc
lock
mov
mov
mov
dec
sub
ja
inc
insl
jbe
aad
mov
lea
add
fs
cli
stos
xchg
popf
bound
int
dec
xchg
cld
mov
pop
dec
dec
mov
test
sub
stos
push
push
out
popa
mov
or
inc
scas
jle
cmpb
sub
and
bound
jg
icebp
add
xor
add
es
push
pop
mov
xchg
xor
dec
in
rcrl
loop
les
repnz
lcall
imul
mov
sub
jmp
inc
rcll
push
cmpsb
inc
mov
pop
xchg
mov
lds
pop
ret
mov
inc
cmp
call
pop
dec
sbb
dec
cmp
jbe
mov
sub
dec
scas
sbb
sub
lret
pop
lcall
adc
or
mov
insb
cmpsl
mov
and
dec
insl
mov
pop
movl
or
push
xor
cmp
cmp
mov
icebp
pushf
divb
sub
cli
pop
and
cwtl
sub
xchg
sbb
push
fcompp
sti
inc
xchg
int3
sbb
mov
mov
jnp
scas
mov
push
imul
outsl
push
rcrl
sub
add
jnp
or
push
loop
ja
push
xchg
nop
cmp
adc
loop
imul
or
scas
dec
ds
dec
adc
faddl
ss
ja
ret
and
andl
or
rclb
js
call
mov
inc
xchg
repz
pop
xlat
xor
iret
and
dec
mov
sahf
sti
outsb
dec
push
jge
add
shr
push
mov
lods
scas
dec
inc
out
mov
fwait
rolb
mov
mov
or
ret
cmp
jnp
mov
push
mov
stos
adc
out
lock
mov
or
pop
loope
imul
pop
add
push
cli
ds
mov
jnp
lret
fsts
stos
shlb
xchg
out
mov
cmp
addb
gs
icebp
mov
xor
jns
add
incb
push
pop
in
dec
jae
pop
pop
pop
outsb
mov
imul
lods
mov
cmp
mov
lea
cmpsb
cmp
mull
adc
test
xor
jge
jmp
ss
mov
sbb
push
jnp
inc
mov
fs
mov
or
cmp
jmp
sarb
ficoms
jne
mov
mov
popf
mov
jbe
mov
nop
aad
jg
daa
or
jo
xchg
mov
loopne
test
mov
or
jecxz
loopne
mov
cmp
adc
mov
push
mov
add
in
fsubrs
sub
lods
inc
sub
fs
inc
mov
stc
mov
scas
mov
dec
stos
push
xchg
sbb
xchg
outsb
dec
es
leave
icebp
mov
jp
clc
pop
cmp
divb
jge
add
xchg
cltd
xchg
int3
add
cwtl
inc
sub
mov
js
lds
cmpsb
push
jns
lret
imul
cltd
loopne
dec
push
ljmp
inc
xlat
sahf
mov
pusha
frstor
push
and
lock
pusha
sahf
xor
sub
pop
mov
mov
lea
xor
lods
pop
ret
jnp
subb
into
pop
ds
popa
and
xchg
dec
mov
rorl
pusha
clc
mov
cmp
lea
leave
push
rorb
push
push
lds
jnp
jns
xchg
mov
les
inc
divb
xor
and
outsb
negb
adc
dec
push
loope
push
cltd
call
add
sub
sbb
cmp
lahf
mov
jl
popa
fimuls
cmc
inc
pop
mov
out
push
and
cmp
neg
addr16
dec
enter
test
pop
aam
addb
stos
inc
repnz
loop
push
shrb
mov
sub
and
js
ss
add
mov
or
pop
dec
pop
ljmp
pop
sbb
jnp
jle
pop
loop
pop
leave
stc
shlb
xchg
jmp
clc
lret
mov
adc
or
cltd
shrb
les
arpl
ds
mov
sbb
add
aas
push
push
push
inc
push
and
and
mull
inc
ds
push
test
push
and
jmp
jg
lret
pop
adc
incb
enter
ja
test
repnz
mov
push
aam
add
rorl
aam
jne
xor
dec
jnp
mov
inc
das
mov
jle
ljmp
mov
dec
out
xchg
roll
pop
push
sti
lret
sbb
pop
sbb
cmp
pushf
pop
cld
ficomps
cwtl
fcoms
push
pushl
mov
xchg
aam
enter
mov
jg
push
scas
dec
je
xchg
pop
xchg
lea
ja
mov
test
in
push
insb
sbb
ret
and
outsb
dec
stc
sbb
adc
lahf
es
mov
adc
sub
mov
mov
jmp
cwtl
xor
pushf
sahf
mov
mov
mov
lret
adcl
xchg
adc
test
lock
into
das
pop
arpl
dec
xor
imul
fwait
sub
fidivl
in
aas
lcall
in
push
jge
xchg
xchg
int
inc
imulb
rorl
pusha
sub
mov
jge
sbb
sbb
mov
add
sub
push
repnz
popf
cmpsl
scas
mov
mov
out
pop
cmp
sti
lea
fs
or
out
jo
stos
dec
xchg
mov
push
imul
cmp
cmp
aaa
xchg
aas
insb
hlt
cwtl
popa
sbb
jp
jg
pop
pusha
push
into
push
in
jp
hlt
xor
pop
cltd
adc
mov
ficoml
or
aas
lcall
iret
pop
jmp
push
mov
arpl
mov
fistps
pop
adc
jnp
pusha
jge
mov
ja
mov
test
movsl
stos
orl
pop
and
sti
xor
xor
lahf
add
or
fcompl
push
dec
ja
loopne
inc
adc
push
dec
push
fcoms
les
dec
movsb
jae
sbb
dec
sbb
int
cwtl
cld
shll
mov
push
ljmp
repz
std
in
adc
cltd
out
shl
mov
jbe
rcrl
nop
mov
fmuls
push
in
sbbb
arpl
xor
xor
loope
ljmp
jno
push
sub
ljmp
sbb
shlb
xor
sub
inc
pop
inc
xor
adc
ljmp
jle
shr
push
adc
xor
hlt
dec
dec
cmp
push
pop
testb
out
jmp
movsl
sarl
aaa
cmc
cmp
jnp
pop
cmpsl
js
call
xor
loop
add
jp
push
pcmpeqd
add
inc
fsubl
jno
mov
ljmp
cmp
dec
daa
sbb
rcrl
out
or
repz
mov
jb
pop
int
lods
mov
push
inc
mov
ljmp
and
subl
jbe
lea
mov
xchg
popa
cld
cmpsl
movsl
les
ljmp
scas
sub
adc
sbb
push
je
adc
push
adc
mov
aaa
mov
popa
lods
bound
inc
movsb
mov
aam
andl
sub
aam
cli
icebp
cmpsl
js
jae
hlt
inc
xchg
xor
test
jl
dec
jae
xchg
jle
movsb
adc
xchg
fbstp
fists
xchg
test
setne
imul
imul
rcrb
pop
push
mov
lcall
push
incb
ficoml
or
push
in
dec
push
icebp
mov
mov
push
pop
dec
popa
mov
out
mov
dec
sbb
and
jno
mov
sub
xchg
mov
jecxz
popf
and
sti
subb
aas
in
and
add
push
call
xor
fisubrs
xchg
and
movb
dec
mov
add
xorb
call
xchg
pop
mov
mov
jmp
ret
dec
insb
mov
nop
mov
hlt
fsqrt
push
xchg
pop
jbe
neg
push
mov
or
shlb
lcall
pop
push
xor
and
stc
sahf
lods
outsb
cmp
sbb
and
mov
imul
xchg
scas
xchg
out
add
sbb
or
jo
and
sbb
enter
sbb
lods
pop
mov
ret
out
push
lcall
xrelease
push
bound
call
gs
fs
mov
jmp
pop
inc
lods
ja
lret
jecxz
notl
daa
imul
lret
jp
jp
and
mov
shll
xchg
outsl
mov
movsb
rcrb
and
loop
jae
push
jo
adc
fadds
mov
push
jg
insb
add
mov
repz
pop
pop
lret
cs
pop
cmp
pop
and
std
xorb
rorl
test
push
mov
ds
mov
sahf
mov
jbe
sub
inc
xchg
ds
in
lods
fwait
cmp
push
pop
xor
sbb
lret
sbb
sub
cli
xchg
sub
bound
fnstcw
push
jo
pop
scas
dec
test
cmc
push
cmp
sub
jg
ja
jnp
clc
adcl
mov
pusha
add
or
dec
fcoms
push
das
jmp
aas
jno
pushf
sbb
jnp
or
inc
inc
mov
adc
sub
jnp
fsubs
test
fimuls
insb
test
or
imul
and
test
adcb
pop
adc
xchg
xchg
and
in
xor
leave
adc
fstpl
push
push
lods
and
sbb
inc
enter
xchg
cmpsl
nop
sub
pop
jno
mov
add
lods
cmc
push
popf
mov
sbb
fisubl
push
or
jbe
in
jns
mov
pop
clc
jno
sub
mov
lock
pop
and
xlat
xlat
push
pop
jl
jne
pop
cwtl
pop
pop
mov
pop
into
outsl
clc
shr
jle
addl
andl
push
inc
lcall
push
addb
push
or
mov
repnz
sub
xor
or
lahf
adc
test
adc
loop
out
inc
mov
or
mov
aaa
ljmp
loope
push
arpl
lcall
cld
and
push
sub
pop
ss
imul
sbb
cmpsb
sub
pop
push
xlat
add
pop
push
incl
mov
cmp
out
inc
jo
rorl
stos
lock
cmp
sub
enter
sub
push
lods
dec
mov
test
dec
adc
repnz
jecxz
popa
movsl
and
pop
mov
scas
inc
mov
bound
mov
or
ficompl
cmc
in
push
fisttps
fsubrs
push
and
push
jo
push
push
vmovsd
adc
enter
cmp
cmp
xor
adcb
dec
xor
cmp
mov
pop
pusha
push
flds
inc
sahf
sbbl
lods
xchg
or
loopne
daa
push
mov
jno
dec
adcb
pusha
sbb
ds
inc
sbb
mov
or
jl
nop
or
xchg
and
orl
mov
mov
mov
aad
or
pushf
icebp
inc
jecxz
xor
int3
jb
or
pushf
pusha
cmovl
push
jbe
mov
es
in
in
fwait
mov
mov
jno
movsl
jge
cmc
insb
pop
and
mov
out
aaa
jo
jg
mov
mov
cld
adc
pop
jns
dec
mov
sbb
sbb
xor
xchg
bound
and
jo
aaa
ficomps
mov
inc
mov
stos
sub
in
aas
mov
mov
mov
add
ja
mov
sbb
xchg
cmpsl
or
ljmp
data16
subb
lea
inc
outsl
pop
cmp
add
and
arpl
ficompl
mov
mov
sub
push
cmp
pop
ja
pop
and
inc
dec
cmp
addb
ret
sub
lds
sub
lret
orl
aas
jnp
dec
jg
es
movsb
fstp
push
inc
pop
xchg
pop
ficompl
fs
out
add
lea
aam
mov
mov
out
add
movsl
xchg
cmp
pop
insl
xor
mov
jne
mov
adc
xchg
pop
adc
pop
pushf
bound
jmp
out
out
adc
scas
inc
jl
stc
sbb
sbb
cs
jge
or
loopne
ss
ret
push
mov
sub
mov
sbb
outsb
mov
mov
scas
mov
shrb
mov
jmp
int3
dec
dec
mov
add
xchg
or
shll
daa
scas
inc
sarb
cmp
pop
out
ss
notb
inc
inc
pop
test
sbb
dec
sbb
sbb
pop
jmp
inc
xchg
out
lcall
mov
jno
mov
mov
sub
mov
jmp
cmpb
mov
std
icebp
and
cs
lods
lds
xchg
xor
cltd
fsubl
lods
rcll
mov
and
cmp
cmpl
jno
std
mov
add
mov
push
mov
lea
push
rcrl
test
dec
xor
sbb
mov
add
std
subb
inc
sub
decl
into
mov
cs
mov
mov
mov
and
repz
mov
xchg
xor
xchg
dec
jmp
scas
neg
dec
jl
xchg
stos
leave
outsb
shlb
les
lahf
push
sarb
in
push
lds
push
mov
jmp
in
pop
push
xchg
out
adc
test
test
mov
sub
inc
add
mov
popa
inc
test
push
xchg
in
inc
je
add
out
mov
mov
add
int3
push
mov
push
fidivs
daa
cmpsl
sbb
sub
iret
es
mov
enter
stos
push
and
out
lds
fidivl
lcall
mov
int
dec
je
dec
ss
sar
pushf
js
add
sub
xorb
clc
mov
jbe
pop
add
lea
sbb
in
sbb
rcll
mov
fimull
lcall
sti
pop
sub
out
push
loope
test
fists
inc
mov
aad
pop
or
aad
sahf
je
mov
jecxz
mov
in
pop
cwtl
or
enter
lods
push
clc
mov
mov
ds
xchg
roll
mov
push
ljmp
xchg
out
lea
in
mov
add
xchg
daa
mov
repz
and
test
sub
cmp
scas
es
addl
bound
fstp
jb
push
pop
call
in
pushf
leave
mov
iret
mov
negb
ret
out
xchg
fcomps
and
cmp
mov
add
shl
sbb
cmpsl
pop
cmc
in
dec
push
popl
or
jge
ja
fdivrs
inc
inc
xor
andb
mov
push
scas
push
xor
jl
push
test
adc
lcall
xchg
fcoml
mov
inc
leave
outsb
aaa
enter
rol
cmp
je
negl
orb
jo
ss
ret
dec
inc
in
dec
cmp
push
leave
arpl
gs
ret
ror
sahf
inc
jns
lret
pop
cmp
mov
test
xchg
jo
out
mov
test
aam
test
out
enter
cltd
mov
xor
xor
push
and
shlb
jns
notl
popa
push
xchg
xchg
nop
push
cmp
xor
pop
mov
sarl
sbb
stos
jno
add
mov
and
inc
scas
aam
repz
pop
fildl
lock
push
pop
cmp
xor
jb
stc
push
mov
mov
ja
mov
leave
js
mov
lods
lock
push
pushf
dec
jecxz
cs
cli
addb
push
xor
in
push
enter
cmpsb
adc
mov
imul
jae
xchg
data16
jg
mov
cmp
sub
idivb
in
in
ret
pop
mov
jne
xorl
mov
rorb
xchg
cltd
fnsave
xchg
clc
roll
cwtl
pop
das
sbb
jnp
or
lcall
es
fs
pop
xchg
fdivr
fcoms
fsubs
fsubr
mov
bound
imul
xchg
sbbl
jge
stc
pop
cmc
push
jnp
int3
or
lds
andl
ret
push
shrb
popf
popf
sarb
adcb
push
ds
cli
mov
ret
dec
into
movsl
mov
mov
push
aaa
or
and
ds
test
jge
out
shll
in
mov
and
pop
mov
xchg
adc
and
push
cmp
cli
xor
scas
xchg
adc
sahf
push
sub
int
icebp
add
mov
or
repz
in
mov
xchg
cs
mov
cmpsb
sbb
repnz
mov
or
mov
shrb
cld
mov
xchg
dec
jg
jnp
dec
inc
mov
xchg
loope
push
mov
mov
or
add
movsb
sbb
lcall
xor
ret
mov
jnp
cmp
add
adcb
lahf
pop
lcall
aas
movsb
imul
call
add
repnz
and
fisubrs
push
xor
pop
mov
mov
pusha
pop
xchg
inc
gs
cmpsb
movsb
ja
xor
pop
clc
xor
sub
fsubl
scas
xor
movb
pop
pop
adc
jmp
inc
xchg
test
mov
rolb
ds
mov
cmp
and
imul
mov
leave
mov
pop
jge
xchg
fwait
test
es
fcmovu
mov
xchg
mov
dec
push
icebp
popf
hlt
mov
ds
pop
sub
sahf
lret
dec
jl
aam
imul
pop
lret
out
push
dec
loope
adc
nop
and
fwait
out
scas
aam
int
cmc
shr
hlt
push
cmpsb
sbb
jbe
stos
push
pop
mov
add
push
add
mov
pop
jecxz
or
adc
jl
fstpt
repnz
repz
jmp
add
icebp
dec
mov
popa
jo
das
stos
cmp
mov
test
mov
scas
fcompl
mov
movsl
loope
add
mulps
stos
xchg
xchg
test
orl
xchg
dec
shlb
cmpsb
imul
xchg
testb
jo
push
je
sub
into
call
mov
lods
cmp
jbe
cmp
xor
add
inc
jns
mov
iret
sbb
push
xchg
out
ds
xor
sbb
insl
jp
xor
ljmp
and
insb
add
jp
not
xchg
sbb
int3
in
dec
xor
cwtl
fdivrs
orl
mov
push
xor
add
mov
imul
fucomp
sub
icebp
es
cwtl
push
aaa
leave
mov
mov
push
xchg
add
cld
loop
sti
mov
shlb
pop
fdivl
xor
sarb
jecxz
icebp
lahf
mov
popa
or
rol
cwtl
arpl
push
push
adcb
lret
stos
sti
xchg
dec
and
pop
push
lds
ds
jp
out
pop
mov
lcall
hlt
out
push
sub
xor
xchg
sbb
dec
xchg
sub
add
addr16
cmp
out
xchg
add
cmp
ss
jne
cs
adc
and
fadd
ret
adc
and
std
insb
mov
jae
sub
sbb
xor
dec
sbb
push
imul
aaa
jns
fdivl
idivb
pushl
in
rorb
lcall
add
movb
add
cmp
cmp
push
sub
sar
std
sar
push
shll
orb
ret
daa
cwtl
stc
icebp
test
mov
loope
loopne
jle
dec
jno
jae
out
repz
adc
jnp
scas
fdivrl
xchg
xchg
xchg
das
and
dec
xor
mov
aad
hlt
mov
je
cmp
outsl
insl
adc
aam
fsubrs
xchg
ss
mov
mov
ss
fiadds
fwait
jge
inc
roll
int3
roll
mov
repnz
pop
loopne
cli
xorl
or
imul
inc
std
jl
lods
mov
sti
mov
mov
sub
bound
rclb
leave
loop,pt
mul
aaa
mov
mov
add
jae
xchg
dec
daa
pop
loope
ret
out
sarb
outsl
sbb
push
and
pop
ficoms
mov
inc
mov
mov
jmp
leave
insb
test
or
or
mov
dec
xchg
add
loopne
sub
mov
stos
stc
je
mov
push
jp
pop
cmpsb
subb
sub
lahf
inc
out
int3
repnz
lahf
push
mov
and
ljmp
nop
hlt
inc
fs
jmp
mov
out
fsts
and
push
push
xor
pushf
jns
scas
das
inc
add
shrl
inc
movb
xchg
in
mov
xorb
popl
rorl
mov
push
push
pop
aad
fldenv
push
sbb
mov
jns
sub
add
jbe
jno
mov
mov
shll
sub
adc
enter
mov
shll
inc
ror
iret
into
mov
fwait
cmpsb
pop
shll
cmp
outsl
push
inc
sbb
push
sub
push
ds
adc
shl
xchg
lcall
jbe
xor
cmp
test
insl
mov
xchg
notb
nop
pop
add
adc
ja
scas
push
dec
mov
lret
je
or
and
add
lret
jbe
cmpsb
cmc
aam
repz
in
ss
dec
pop
pop
mov
jle
data16
loop
push
jno
shl
xchg
cs
addr16
pop
loope
adc
or
outsl
out
andb
outsl
add
sbb
imulb
cwtl
adc
repz
pop
fidivs
shrl
filds
filds
cli
and
mov
xor
xchg
adc
cvtps2pd
roll
loope
adc
or
pop
out
outsb
jg
into
sub
mov
addb
inc
in
enter
cmpsl
ljmp
jno
jb
gs
or
mov
inc
push
sbb
pop
mov
into
lea
mov
sub
mov
aaa
ss
imul
xor
push
imul
insl
inc
cltd
cmpsb
jno
or
inc
inc
das
sbb
std
out
int3
or
test
inc
rcrl
fcoms
ja
pusha
fcom
jne
jmp
pop
dec
notl
add
fcoms
cmpsb
inc
lea
push
inc
rcrl
xor
cwtl
mov
mov
ds
lock
out
jle
insl
sbb
js
xchg
mov
sti
int
jne
jo
mov
mov
jmp
sahf
cmp
adc
mov
push
lret
lock
pushf
xchg
out
out
pop
push
insb
jb
inc
dec
mov
cmpb
rcrb
sbb
ja
notl
xchg
movsl
and
cli
jb
mov
dec
pop
lods
push
pop
push
scas
mov
pop
dec
repnz
imul
mulb
push
sti
push
cmpb
adc
cwtl
out
mov
mov
loope
jno
cmp
cmp
push
push
lret
cmp
lret
adc
mov
cmp
leave
lahf
xor
add
cmpsl
mov
dec
movsl
mov
sub
mov
mov
adc
fstps
nop
imul
filds
push
fwait
mov
jl
into
cld
imul
pop
pop
rcl
xor
pop
xor
push
nop
dec
cmp
jns
adc
fsts
stos
ds
in
pop
mov
jb
and
fstl
insb
or
faddp
xchg
cmp
lahf
movsl
jno
lcall
dec
inc
add
sbb
inc
popa
std
es
inc
sbb
dec
movsl
pop
pop
rolb
mov
repnz
popa
imul
pop
pop
fistl
pop
xor
cs
sub
push
mov
leave
lods
pusha
movsl
mov
fdivr
push
dec
pusha
ja
xor
add
mov
jo
jo
imul
xor
ret
sbb
loopne
jnp
out
jecxz
mov
clc
mov
inc
adc
pop
sub
cmp
cli
add
cmp
aas
or
pop
in
es
jae
dec
mov
cld
daa
adc
es
mov
dec
jl
and
or
push
sbb
test
dec
sbb
lcall
icebp
xchg
xchg
xor
imul
ljmp
cs
cld
or
frstor
mov
fmull
or
ja
cmc
cmp
push
jno
xchg
sbb
rol
xor
sub
cmp
cli
sbb
test
out
imul
cltd
inc
mov
mov
int
sbb
jb
aam
into
pop
jo
lock
pop
cmp
xor
dec
and
fldcw
std
cmp
jnp
adc
dec
xor
push
subl
dec
testl
imul
stc
and
ficoml
jle
cwtl
pop
out
movsl
cmpsb
rolb
cmpsb
fldcw
mov
ds
loope
xlat
jbe
or
inc
mov
ror
push
pop
les
sahf
jns
mov
xchg
pop
ret
sub
jb
popf
sarl
je
mov
pop
pop
and
adc
mov
loope
mov
gs
popa
sbb
movsb
ljmp
out
movsl
divl
arpl
push
nop
cmc
outsb
pushf
push
cli
ret
fildll
lret
fisubrs
movsl
sbb
push
setp
inc
jmp
mov
arpl
cwtl
pop
ja
push
jo
adc
pop
popf
mov
push
dec
in
movsl
mov
movsl
pop
fiadds
fstp
sbb
lds
pop
xlat
jnp
test
sbb
inc
test
ja
sbb
cs
or
lods
mov
mov
je
cmp
adc
dec
push
mov
jbe
js
or
shl
and
xor
mov
dec
test
push
mov
adc
int3
jo
push
mov
inc
and
xor
das
cmp
add
or
stos
cmp
int
inc
or
mul
imul
int3
enter
jecxz
jecxz
pop
shlb
or
add
jb
out
jne
out
add
lods
sub
lds
add
cld
xchg
pop
ret
sbb
testl
cmpsb
fldcw
pop
add
mov
imul
arpl
cmp
mov
jle
xor
or
mov
adc
sti
dec
xchg
add
daa
das
stos
mov
loope
into
adc
test
mov
mov
dec
dec
sub
sbb
outsl
mov
cmp
and
xlat
jne
or
xchg
mov
les
sbb
addr16
sub
push
outsl
or
and
mov
push
add
sub
idivl
mov
sbb
mov
cmp
lea
js
in
pop
add
insb
rcrl
cmp
movntps
mov
sub
out
hlt
int3
pusha
cwtl
shrl
push
lcall
xchg
cmp
lcall
push
gs
push
sbb
out
dec
jbe
out
lock
aam
ss
aad
xchg
jne
in
inc
aaa
push
ss
mov
xor
mov
dec
js
cmp
xlat
xchg
sahf
gs
xchg
in
or
rcrl
sbb
loop
pop
pop
sub
call
mov
adc
decb
jno
push
xchg
lret
gs
pop
and
push
mov
pop
jecxz
clc
outsl
into
bnd
fs
inc
mov
cwtl
bswap
cltd
cwtl
loope
mov
dec
push
jecxz
and
mov
jecxz
out
shll
in
stos
and
mov
lret
popf
pop
mov
xchg
sbb
xor
fidivl
movsl
xchg
mov
jle
mov
into
mov
lds
shlb
mov
push
lret
mov
inc
push
lock
push
pushf
fnstcw
lahf
and
aaa
lahf
xchg
push
aam
and
cmpb
adc
addl
xchg
xchg
out
and
fs
and
aaa
mov
cld
int
cmpsb
cmp
mov
in
test
pusha
push
cmp
adc
sub
cmp
push
jne
cmp
out
push
pop
in
jg
jmp
mov
dec
rclb
mov
test
dec
movsb
hlt
or
jle
mov
mov
test
push
mov
dec
push
jae
push
jg
sub
sub
or
mov
push
pop
sahf
int
mov
sbb
push
sub
fnstenv
rcll
mov
mov
mov
xorl
xchg
pop
es
lret
lea
pusha
leave
repz
mov
fadds
stos
inc
inc
pop
mov
dec
aam
cmp
mov
and
daa
xchg
push
jmp
pop
xchg
dec
mov
aaa
or
ficoms
xor
imul
mov
scas
repnz
cmpsl
ficompl
pop
push
clc
pop
pop
int
cmpsl
jmp
jnp
inc
push
and
mov
mov
das
aas
jnp
or
sbb
xor
jl
outsb
or
nop
adc
inc
sbb
jle
call
cmp
mov
repz
cmp
imul
movsb
dec
mov
repnz
fisttps
sub
cmp
inc
jle
and
sbb
add
nop
mov
lret
mov
push
das
cmc
mov
mov
push
pop
fwait
dec
lods
sbb
lret
mov
pop
cmp
mov
daa
mov
or
dec
add
push
push
mov
stos
sarb
cld
sub
pushf
jae
call
loope
dec
popa
or
sub
shl
popl
mov
jecxz
sbb
and
popl
or
out
adc
adc
out
inc
imul
pop
stc
movsb
insl
adc
cltd
sbb
adc
mov
or
push
or
fists
das
ds
adc
or
mov
shll
in
xor
ja
data16
xchg
xchg
mov
add
jb
aam
negb
xchg
outsl
add
mov
lds
lahf
fs
inc
push
sub
sbb
ja
into
insl
data16
jns
sbb
outsl
iret
popa
aad
sub
mov
sbbl
mov
pop
adc
repz
adc
scas
ret
sarb
jp
pop
mov
fstp
inc
sub
or
lret
int
mov
lock
xlat
ret
add
into
xchg
cld
and
aas
scas
ficoms
test
mov
sbbl
xor
inc
out
sarb
fadd
push
sub
enter
sbb
das
out
sti
sbb
jmp
jl
clc
aad
pop
ljmp
dec
push
jmp
jg
push
sbb
mov
stc
sbb
neg
stc
mov
lret
lea
lcall
mov
jno
mov
imull
xor
adcl
jo
aaa
xor
iret
pusha
test
in
cmp
mov
pop
in
sbb
cld
mov
sub
sti
flds
rorb
dec
testb
cmp
or
mov
and
data16
jbe
mov
lods
push
push
cld
cmpsl
cmp
lods
inc
sbbl
aas
icebp
sub
cmp
lock
cmp
loopne
shlb
xchg
mov
xchg
inc
sbb
cmpsl
xor
fcmovne
push
xchg
mov
ret
or
and
test
cmp
ss
push
out
cmp
cmc
orl
pop
dec
idiv
shll
mov
push
mov
pop
das
push
cmc
cmp
dec
sub
stc
lea
loope
sarl
nop
incb
dec
addl
xchg
aaa
push
scas
sub
jg
aas
mov
cld
inc
adcb
ret
jns
leave
dec
jae
mov
rcll
pop
je
mov
sarb
lods
mov
or
out
sar
jae
cmp
push
fadd
inc
push
jecxz
movsl
fnsave
xlat
xchg
out
popf
sub
jbe
into
push
mov
and
mov
in
jge
fwait
and
andl
hlt
xlat
lcall
mov
cmp
cmp
test
or
out
data16
jl
popa
leave
pop
dec
inc
cmp
pop
jg
and
sub
pop
add
pop
mov
pop
movl
addl
test
jl
outsl
push
inc
das
popa
or
hlt
pop
xchg
scas
cmc
or
push
outsb
iret
jmp
cmp
pop
enter
clc
cmp
les
scas
ficompl
sub
xor
dec
cwtl
adc
lahf
mov
test
inc
dec
test
mov
je
rcrl
je
lods
popa
mov
orb
popa
jne
xchg
addl
rcrl
out
dec
xchg
repz
xor
outsl
sbb
sarl
jo
pusha
cld
test
pop
mov
mov
ds
fcmovnb
test
test
jb
add
jb
adc
dec
imul
aam
dec
xlat
dec
sub
es
jle
inc
pop
out
sbb
or
lret
jo
popf
les
lea
popa
sub
fs
sar
sub
jae
popf
dec
and
das
js
mov
cwtl
push
pop
xor
rcr
lds
mov
fcomp
std
out
xor
pop
pushf
mulb
sbb
push
xchg
fmuls
flds
xor
mov
test
mov
movsb
add
mov
std
inc
daa
adc
sbb
pop
or
iret
mov
or
pop
jbe
cmp
out
xchg
movsl
push
push
fdiv
pushf
jl
cltd
pusha
xor
movsl
jge
fsubrl
aam
scas
push
shr
add
and
fisttpl
out
call
enter
je
mov
jne
pop
mov
dec
and
cmp
cld
add
add
lea
int
daa
test
push
and
xchg
sub
mov
imul
cmp
jno
cmc
sub
dec
cmp
add
pop
push
mov
mov
push
sbb
pop
cmpsb
inc
xchg
jae
fldt
mov
scas
dec
arpl
popf
out
cs
inc
jmp
test
and
adc
into
push
jecxz
and
pop
xchg
cmpsl
mov
mov
cmp
faddl
adc
dec
outsb
ljmp
out
imul
jle
adc
sbb
fmull
cmpsl
cmp
pop
jb
sahf
push
nop
and
leave
out
jmp
xchg
lods
insb
xlat
fcomip
sbb
hlt
inc
imul
fs
repnz
jo
cwtl
cmc
outsb
cmp
int
popa
dec
ret
mov
xor
add
or
cmpl
and
push
fstps
hlt
add
push
jmp
mov
mov
adc
mov
fbstp
adc
lds
push
data16
out
mov
inc
push
jnp
cmp
sub
lret
dec
aad
cmp
jo
add
pop
xor
xchg
enter
sub
cmpsl
nop
push
es
sbb
ja
addr16
mov
decb
pop
int
xchg
scas
sbb
icebp
xor
outsb
sbb
pop
enter
outsb
dec
fcomps
mov
int
in
xchg
inc
aam
sub
fisttps
adc
clc
adc
pop
leave
int
notb
cmpsl
iret
fidivrl
aas
call
inc
xlat
movb
jl
pop
sub
cs
sbb
inc
out
inc
pushf
cltd
cwtl
and
adc
icebp
outsb
mov
xchg
movsb
jge
sub
mov
pop
jmp
std
mull
int
sti
sbb
loop
ljmp
lods
addr16
sbb
iret
mov
icebp
and
sub
into
mov
push
imul
xchg
in
add
lahf
mov
jg
cmp
mov
lock
fdivr
mov
jge
xor
xor
loop
cld
and
mov
insl
fsub
sbb
sbb
jge
xor
xchg
push
ret
xchg
pop
pop
cmp
outsl
pop
jne
or
push
jle
cwtl
cltd
repz
and
fldl
das
lret
arpl
nop
inc
pop
dec
stos
cld
lahf
jecxz
xchg
repz
jbe
std
imul
lods
scas
dec
test
and
loopne
sbb
add
mov
shll
insl
iret
repnz
xchg
clc
jns
or
lcall
mov
aaa
mov
xor
jmp
rclb
sbb
or
pop
fcompl
incl
mov
icebp
xchg
roll
jne
cltd
enter
scas
fistpll
push
xchg
add
mov
inc
hlt
sbb
int
jg
push
lock
ja
andb
push
ljmp
loop
pop
cwtl
xor
leave
inc
adc
inc
xchg
movsl
pop
add
and
cs
mov
aas
pushl
sbb
lods
ja
sbb
xor
cmp
std
imul
ja
xchg
daa
jmp
test
inc
and
xchg
jmp
push
imul
push
and
xor
cmp
add
fwait
xchg
ret
push
add
cmc
and
or
xor
mov
aad
jp
rol
mov
insl
movsl
push
bound
jne
enter
jnp
loope
push
pop
fwait
out
or
negb
aas
mov
mov
sub
or
jae
out
ja
test
jle
cmp
pop
fcmovbe
add
rcrb
mov
dec
jmp
push
or
mov
or
cmp
cmc
cmpl
adc
faddl
std
es
cmp
in
push
fcompl
int
add
fcoml
jae
enter
int3
jne
dec
dec
mov
xor
lds
dec
push
arpl
sbb
push
push
rol
in
lahf
jecxz
add
mov
int3
imul
aaa
movsb
arpl
push
jp
aam
or
daa
add
pop
inc
pop
mov
pop
mov
test
in
leave
adc
pop
ret
arpl
inc
cwtl
mov
fwait
sahf
cmpsb
popa
cmp
into
pop
lods
repz
add
mov
sbb
je
xchg
adc
jbe
shlb
xor
pop
mov
fcoms
mov
int
js
or
mov
nop
dec
or
repnz
mov
arpl
jg
in
in
out
das
mov
pop
and
xchg
imul
mov
je
sub
or
leave
dec
inc
push
outsb
add
mov
andl
jp
aad
ja
xchg
cmp
mov
xchg
arpl
jecxz
push
ljmp
or
lds
mov
cmpsl
add
mov
sub
inc
xor
xlat
mov
loopne
xlat
out
push
outsb
push
xor
dec
lods
in
fnstsw
adc
jno
jle
stos
in
pushf
mov
es
and
lods
jl
dec
mov
imul
cmp
daa
adc
xor
xor
xchg
mov
sub
ret
add
pop
sahf
sbb
mov
ss
and
push
lods
cmp
repnz
push
pop
scas
sub
gs
mov
sbb
cwtl
out
out
rcrl
and
jae
fnsave
ss
mov
outsl
xchg
int
icebp
xor
xchg
add
mov
lods
dec
jp
add
jp
pushf
pop
aad
dec
cmp
and
add
cmpsl
por
dec
xor
push
mov
xchg
inc
inc
daa
or
or
in
ret
or
or
shl
mov
pop
xchg
mov
gs
sahf
in
push
jl
xlat
or
pop
add
sub
dec
in
sbb
xchg
frstor
cmp
inc
roll
add
fiadds
and
lds
out
out
jno
jo
push
inc
dec
movsb
fmull
jl
loop
cmp
lcall
es
cmp
rcrl
les
pop
jb
addr16
imul
ror
test
les
mov
jp
lea
das
or
mov
mov
add
jbe
shlb
push
test
pop
xchg
sub
pop
jle
inc
aaa
imul
mov
pop
adc
inc
ja
push
mov
jmp
and
filds
sub
jge
lret
mov
stos
mov
loopne
daa
push
xchg
ret
imul
dec
cmp
sbb
testb
sub
pop
add
popf
dec
jne
mov
inc
in
mov
or
jp
shl
adc
stos
gs
cs
ds
fidivrs
sbb
xchg
xor
lahf
movsb
xchg
add
push
lea
pop
jne
push
sub
nop
jb
repz
stos
dec
xchg
and
and
cmpl
and
jne
fisttpll
out
movsb
dec
sarb
test
lods
sub
in
dec
dec
lea
data16
inc
lea
popa
aas
aas
mov
out
loop
push
mov
sbb
add
or
stos
add
sub
test
popf
lret
xchg
cmovnp
mov
clc
rcll
lret
maskmovq
imull
fbstp
or
aas
pop
mov
push
xchg
jmp
addb
mov
mov
lods
pop
dec
and
adc
add
sub
jmp
push
jp
out
mov
in
cld
lret
dec
mov
xchg
idivl
stc
xlat
insb
mov
arpl
xlat
sahf
shr
popf
repz
push
add
mov
ficompl
push
cmc
jnp
es
imul
cwtl
movsl
cld
pusha
or
mov
and
ss
repz
stos
pop
pop
icebp
xchg
test
int
jp
cmp
ret
cs
push
sub
or
cmpsl
gs
jl
inc
in
scas
mov
adc
mov
aas
fisubrs
pushf
roll
push
pop
pop
cmovae
add
out
pop
dec
cltd
xor
xor
and
cltd
filds
stos
xor
movsb
lret
scas
and
movsb
pop
add
add
adc
mov
test
out
mov
jns
cmp
insb
push
jmp
push
dec
loopne
pop
pop
lods
dec
lcall
inc
sbb
scas
mov
gs
in
xchg
testl
mov
pop
mov
in
cmpl
sub
sbb
pop
xor
and
add
dec
xchg
jns
cmp
add
shll
xchg
mov
cs
jae
xchg
xchg
mov
dec
push
cmp
xrelease
bound
fdivs
ret
stc
pop
enter
mov
in
add
or
and
lds
pop
adc
call
add
push
das
cmc
jmp
in
sub
fnstenv
or
sub
nop
pushf
leave
jmp
jne
sub
push
fcmovu
arpl
xor
xchg
mov
out
cld
dec
inc
mov
jno
jl
in
movsl
adc
loopne
add
ss
arpl
loop
fld
stc
push
rorb
fldt
mov
xor
nop
adc
stc
roll
mov
xor
cmp
mov
cld
daa
aas
push
insl
imul
fnstsw
cmp
iret
fldt
mov
pop
inc
or
sub
push
adc
dec
mov
dec
mov
subb
ljmp
push
popf
in
pop
stos
in
xor
lods
mov
sti
jl
jmp
rcll
andl
sub
pop
push
push
fbstp
push
ja
int3
sub
out
sbb
jecxz
push
test
insl
cmp
sahf
in
js
aaa
shr
push
ror
mov
shll
push
movsb
test
mov
push
pushf
aam
cli
push
lock
sahf
cwtl
sbb
dec
loop
seto
bound
jns
sub
xchg
cmp
fsubrp
subl
or
shl
ror
pop
xor
repz
nop
sub
outsb
sub
adc
mov
xchg
mov
cs
addr16
rclb
out
lahf
cld
pop
sbb
push
insl
push
pop
fs
mov
or
pushf
jb
push
cmp
and
aaa
pop
jmp
inc
mov
sti
xchg
mov
push
leave
in
jbe
pop
dec
js
fdiv
pop
std
or
sub
cmc
dec
inc
in
insb
shll
jae
push
dec
and
inc
jno
mov
mov
das
jbe
out
add
xchg
lea
dec
inc
test
mov
lock
adc
test
cmp
pop
test
mov
xchg
fistl
pusha
dec
or
ljmp
and
insl
fwait
xor
inc
cmpsb
enter
xchg
xchg
inc
push
loop
loopne
push
mov
orl
xchg
shrl
or
mov
scas
mov
cmp
push
push
movsb
dec
and
and
mov
out
or
loope
and
inc
mov
and
jo
hlt
adc
pop
mov
dec
leave
inc
cmpsb
dec
push
add
xor
scas
xlat
imul
adc
loope
sbb
jg
lea
bound
push
imul
mov
cltd
movsl
jne
sbb
mov
les
stos
lds
push
cmpsb
or
lock
aad
sub
mov
or
lods
nop
xchg
pushf
push
clc
test
shll
hlt
cmp
in
xor
push
mov
cmc
push
aam
repz
test
cmc
mov
faddl
mov
sbb
cwtl
lret
or
cs
mov
ror
push
in
cmp
daa
jae
sarl
sbb
push
jp
js
std
adc
jae
loope
dec
push
inc
dec
dec
pop
insb
cmc
aam
or
ss
cmc
loope
shl
ds
mov
mov
fimuls
add
jp
add
adc
fsubr
add
fmuls
jns
jg
in
adcl
sub
int
iret
outsb
stos
adc
dec
popa
inc
inc
inc
xor
insl
stos
lret
adc
dec
movsl
or
nop
sahf
int
leave
push
mov
int
out
xchg
and
bound
adc
loope
or
test
mov
jmp
mov
movsb
cmp
lret
xchg
xchg
xchg
sbb
mov
sub
jnp
and
sub
mov
pop
sub
ja
pop
sbb
and
ret
mov
sahf
bound
mov
sbb
add
xchg
shll
xor
test
and
mov
pop
imul
mov
lea
pop
mov
cmp
cmp
xchg
push
mov
mov
in
sbb
ja
jge
push
inc
out
and
and
out
ret
daa
inc
subl
mov
cmpsl
pop
add
dec
dec
rclb
repz
repz
fadd
jb
push
adcl
sub
into
cmc
and
out
lahf
push
stos
or
xor
pop
cmc
mov
outsl
clc
imul
int
fdivl
rorb
cmp
cmc
mov
cmp
mov
cmp
icebp
hlt
mov
xor
cltd
clc
mov
dec
xchg
sti
jp
je
mov
pop
es
jo
push
push
test
mov
daa
shl
fwait
jo
fcomps
push
add
sbb
mov
cmc
lret
pop
adc
cltd
cmpsl
cs
push
or
insb
pop
je
xor
adc
mov
scas
nop
inc
push
insb
jbe
loope
sbbl
xor
in
shll
lret
lcall
aaa
and
xchg
movsl
pusha
mov
outsl
dec
loope
repnz
lret
stc
push
mov
push
rolb
xchg
push
jae
fisttps
lret
inc
hlt
stc
fwait
or
daa
cmp
and
mov
loop
dec
test
push
jle
xchg
jnp
decb
mov
xchg
sbb
stos
pop
sub
stc
aam
fidivrs
js
push
out
sti
push
mov
mov
cmp
roll
out
add
mov
dec
lret
das
cmc
out
out
jecxz
xchg
cmpsb
int3
ret
lea
cwtl
aas
jns
push
icebp
add
jne
pop
inc
in
jae
jne
jg
dec
dec
mov
cmc
test
daa
push
xor
or
dec
shrb
bound
push
pop
cli
cli
pop
testb
pop
jg
jecxz
int
addr16
testl
stc
xchg
pusha
cmp
and
inc
loope
mov
mov
xchg
mov
adc
dec
xor
fmulp
mov
adc
mov
inc
mov
test
inc
adcl
movl
gs
jle
and
lahf
dec
mov
mov
mov
cltd
push
jns
xor
dec
cmp
mov
jg
pop
subl
mov
mov
or
mov
or
popa
or
mov
or
pop
xor
push
data16
xor
push
push
push
sbb
aad
push
test
mov
pop
repnz
loopne
adc
aas
pop
mov
push
jnp
gs
push
dec
sahf
cmp
insb
xor
mov
orb
popa
xorl
in
xor
mov
pop
mov
cmp
out
dec
cmpl
lods
dec
mov
ds
pop
outsl
mov
imul
lods
fs
jnp
cmp
dec
sbb
xor
int3
dec
orb
movsl
push
sub
cmpsb
jne
arpl
mov
cmc
data16
mov
cld
jmp
xchg
imul
mov
dec
jecxz
int
mov
in
adc
loope
loop
addr16
iret
add
out
stc
push
xorb
inc
or
mov
inc
xor
into
push
call
out
outsl
insl
mov
dec
call
push
inc
jp
insl
push
pushf
sub
mov
fdivrp
add
test
dec
xor
push
es
aaa
xchg
mov
int3
lcall
js
mov
or
stos
movsl
cmp
jge
mov
into
cld
lock
lcall
pop
add
hlt
aaa
cmp
xchg
adc
popf
mov
movsb
ret
decl
xchg
ss
xchg
xorl
sbb
cmp
sub
and
sbb
imul
cli
dec
jle
push
imul
ja,pn
ficoms
sbb
mov
pop
xchg
pusha
loop
and
xchg
orb
shll
jae
push
mov
leave
js
inc
and
in
or
mov
jne
jg
mov
mov
cmpsb
xchg
in
xor
lcall
aas
or
cli
cmp
xor
mov
cmp
ret
fcoms
and
cmp
das
sbb
xlat
and
inc
and
jmp
jge
popa
pusha
or
jo
pop
mov
leave
test
pop
std
and
andl
add
lret
mov
in
xor
jge
xor
fs
push
pop
rolb
fldl
mov
loopne
push
jb
cmc
lock
sub
ja
xor
cmp
dec
mov
adc
icebp
mov
adcl
arpl
pop
mov
cld
inc
push
scas
out
testl
std
andb
pop
dec
or
mov
jbe
lock
ljmp
mov
xchg
mov
lods
pushl
cs
mov
pushf
sub
cmpsl
outsl
mov
insb
mov
sbb
mov
xor
sbb
xor
mov
jp
xchg
mov
or
xchg
jge
sub
or
int
xchg
test
rorl
in
jns
jle
lods
sub
fiaddl
sub
popf
mov
xchg
inc
ffreep
imul
pushl
int3
int
jle
loope
jae
push
insl
push
xchg
clc
jbe
data16
mov
popa
scas
pop
ds
sbb
fs
or
shll
pop
xor
rcrb
shll
leave
jp
sbb
jae
xchg
gs
fiaddl
pop
enter
repz
adc
lds
adc
mov
mov
sarl
cwtl
xchg
scas
es
stos
push
and
pop
ret
clc
push
inc
push
call
enter
imul
fcmovnb
cmp
stos
xor
jmp
cltd
sbb
mov
inc
xor
decb
mov
movsb
loopne
aam
xchg
loope
stc
jo
push
mov
loop
sub
inc
xchg
aaa
stos
ret
jae
mov
jle
movsb
in
mov
adc
sarl
stos
dec
push
mov
inc
leave
sub
adc
pop
sub
in
mov
les
or
dec
mov
lods
mov
push
dec
icebp
jl
cmpsb
std
ljmp
je
int3
rcll
fistpll
aaa
rorb
sub
scas
lret
adc
rcl
mov
xor
xchg
adc
clc
enter
mov
enter
xor
pop
sub
inc
or
mov
lret
pop
cmpsl
inc
and
mov
jb
js
fwait
pushf
mov
hlt
adc
aaa
stc
mov
sub
int3
lahf
sub
fwait
mov
movsb
add
mov
sbb
push
inc
mov
sub
test
inc
push
push
sbb
fwait
out
scas
popf
mov
lock
add
and
fucom
xlat
xor
sarb
xchg
jp
fstp
cmp
shrl
mov
mov
dec
leave
xchg
inc
add
dec
mov
test
out
xchg
and
push
sbbb
mov
adc
xor
sbb
and
adc
mov
mov
mov
iret
dec
sbb
push
xchg
push
data16
cmp
ss
cwtl
loope
test
or
sti
mov
jne
ja
jle
or
lcall
dec
mov
mov
inc
xchg
repnz
mov
andb
in
aad
loop
in
insl
lods
sahf
pop
pusha
mov
loopne
aas
adc
out
xchg
loop
outsl
aas
arpl
insl
nop
jl
das
pop
dec
cmp
in
xor
in
add
push
sub
dec
frstor
push
mov
lret
fiadds
outsl
pop
test
icebp
nop
imulb
js
fcmovnu
inc
adc
mov
or
adc
add
add
stos
xchg
cmp
push
je
and
jg
adc
outsb
ret
mov
jmp
and
sbb
fnstsw
xor
fwait
push
arpl
fmull
loope
int
out
lock
cmp
jns
sbb
mull
es
push
and
and
adc
xchg
inc
fs
je
mov
push
shll
push
pop
and
repz
repz
int
orl
xor
in
add
popa
cmp
repz
popf
push
lods
fwait
inc
push
mov
pop
dec
add
push
test
inc
test
arpl
shl
sub
pop
sbb
or
cwtl
loopne
aas
xchg
mov
cld
outsb
leave
xlat
pop
mov
jle
cli
lret
mov
lods
cmp
mov
std
lods
sub
out
and
xor
in
jp
mov
mov
gs
or
clc
lock
scas
in
jnp
lods
jbe
adc
aaa
movsl
cmp
and
mov
and
lods
dec
out
and
push
add
subb
shrb
pop
cwtl
test
out
xchg
roll
mov
inc
leave
test
xorl
movswl
adc
xchg
mov
pop
mov
add
mov
cli
or
cmp
loopne
insl
mov
jbe
dec
push
shll
dec
dec
iret
scas
inc
push
jbe
pop
rolb
testb
fwait
insl
cmp
push
xchg
inc
mov
cmp
jae
jne
repnz
and
lret
dec
movsb
xor
mov
shrb
xrelease
or
sbb
push
push
push
out
mov
mov
pop
mov
dec
and
movl
dec
jns
jns
shr
and
scas
movl
xchg
dec
xchg
dec
shll
dec
mov
mov
out
push
cmp
mov
mov
clc
fstps
mov
outsb
movsb
adc
push
rclb
bound
or
and
mov
ljmp
add
in
pop
adc
pushf
xor
inc
add
mov
adc
push
xor
cmp
rolb
das
mov
out
bound
fwait
adc
or
sub
fsubrs
loopne
popa
test
mov
call
xchg
sbb
cmpsl
out
add
ljmp
out
dec
pop
sbb
pop
mov
push
push
stos
movsb
stos
jge
call
aam
aaa
mov
add
ljmp
mul
jns
mov
outsb
repz
lock
add
outsb
mov
push
rorl
or
sub
sbb
jecxz
pushf
rep
cmp
std
ret
mov
iret
out
sub
mov
les
dec
fldl
push
insb
dec
out
popf
scas
in
jbe
mov
jns
mov
fwait
aas
je
aad
arpl
addr16
fildl
in
push
aad
cmp
lahf
sub
lock
and
fistps
add
repz
imul
sbb
out
pop
pop
or
std
sbb
add
lods
iret
sarl
test
pop
popa
insb
add
pop
fwait
dec
sti
or
repz
push
lods
dec
push
test
xchg
iret
sub
adc
cli
or
adc
mov
test
and
pop
dec
jno
or
sti
hlt
mov
loopne
push
adc
jle
cmp
loope
xor
stc
mov
dec
movsb
xchg
xchg
push
xor
fcmovnu
out
sbb
movsl
dec
popa
lahf
scas
push
scas
inc
fdivrs
dec
ffree
mov
nop
jne
cwtd
mov
das
lds
outsb
adc
rcrb
xchg
xchg
loope
repz
out
push
push
xchg
mov
sub
jle
dec
pop
cmp
pop
cmp
mov
mov
nop
test
lret
arpl
sub
es
outsl
das
divl
daa
repnz
adc
and
jmp
inc
fcmovnb
bound
jbe
cwtl
dec
popl
dec
cld
mov
idivl
sub
dec
jl
scas
subl
adc
cmpsb
xchg
arpl
mov
inc
mov
mov
sbb
outsl
sub
int
leave
dec
call
popa
loop
mov
fcmovnu
mov
pop
mov
popa
cmpsb
int
xchg
xchg
in
call
fcmovnb
inc
repz
adc
and
test
dec
add
data16
mov
jo
xchg
test
xchg
hlt
or
sub
mov
int
sub
into
popa
mov
sti
xor
mov
xor
mov
iret
jne
adc
sub
fnstsw
test
jo
mov
pushaw
or
idivb
adc
push
adc
pop
fwait
sti
inc
cmp
cltd
pop
mov
or
pop
cwtl
pop
testl
mov
mov
jo
mov
mov
mov
out
sarb
dec
cld
add
jns
pop
cwtl
scas
jmp
push
xor
arpl
sub
mov
test
jl
jnp
sub
std
and
or
xor
faddp
mov
lds
test
jle
mov
mov
or
push
pop
int3
jns
movsb
xor
loopne
loopne
pop
lea
dec
test
sbbb
push
lcall
popf
pop
data16
cltd
and
jo
and
and
push
cmp
and
nop
mov
inc
int
and
push
in
shl
in
repz
in
pop
inc
cmpsl
or
jnp
bound
pusha
pop
pop
xchg
inc
pop
mov
cmp
mov
adc
ffree
es
inc
push
orb
out
int
mov
push
cmpsl
shl
push
cs
hlt
fwait
dec
push
xor
pop
and
stc
sub
ljmp
cs
lock
push
and
xor
loope
add
lods
incb
leave
inc
push
fsub
imul
fsubr
cmp
outsl
pop
push
xchg
mov
mov
fisubl
mov
repnz
push
pop
or
pop
testb
jbe
or
dec
sub
lcall
cmp
mov
xchg
mov
pop
daa
lea
into
outsl
and
mov
mov
xor
jl
sub
rolb
push
lea
in
jecxz
aam
adcb
jae
icebp
sub
sub
enter
lahf
call
scas
lcall
push
cmp
hlt
cli
xchg
and
or
cmpsl
das
shl
ficoml
sub
sbb
jge
adc
stos
ss
in
xchg
lods
or
xor
in
divb
xorb
jmp
sarb
orb
xchg
dec
mov
sarb
xchg
std
subl
addl
cmpsl
loop
fcmovb
and
jno
dec
add
test
mov
jp
fidivrl
outsb
cmpb
ds
xorb
and
ret
test
mov
aad
int
test
mov
add
outsl
inc
pop
lods
pop
std
lods
xor
xchg
imul
mov
jb
int
mov
or
mov
aam
add
cli
fdivrs
clc
sarl
sub
jno
lods
subb
and
jne
ss
cmp
mov
test
mov
pop
mov
sbb
jns
clc
insb
cmpsb
push
in
dec
and
insb
mov
inc
sbb
pop
push
inc
fs
push
ljmp
xchg
pop
or
xchg
leave
outsl
call
xchg
inc
push
mov
xchg
cmpsb
mov
mov
mov
inc
push
std
repz
fdivs
cmp
inc
sub
popa
out
inc
and
sub
and
or
in
xchg
les
bound
mov
xchg
cmc
push
stos
mov
mov
pop
xlat
pushf
hlt
cmpsb
inc
fcoms
xchg
mov
pop
fstl
push
ret
dec
jns
jb
fld
push
js
sub
dec
mov
daa
test
pop
pop
xor
push
sti
xor
mov
push
and
fidivl
call
mov
push
push
sahf
cmpsl
mov
mov
imul
je
mov
xor
loopne
movsl
xchg
push
adc
and
mov
stc
mov
xor
xchg
scas
adc
dec
jne
and
add
jo
cmp
leave
pop
popa
sbb
jns
or
inc
sub
not
dec
hlt
ret
in
fldl
xchg
icebp
xchg
pop
jo
pop
sub
sahf
inc
mov
and
dec
sbb
push
call
sub
clc
sbb
test
sti
aaa
ss
and
sub
loop
mov
inc
outsb
sbb
adc
lret
xor
sbb
or
nop
ret
xchg
push
out
cmc
sbb
xchg
loopne
jno
xorb
fists
pop
jl
movsb
pop
jg
outsl
insb
jo
mov
pop
in
jbe
std
les
std
shl
outsl
mov
add
bound
out
mov
pop
sbb
mov
adc
xlat
push
fdivr
test
aas
or
jns
adc
inc
mov
xchg
pop
lds
sbb
sub
jge
push
add
xchg
jle
or
inc
das
imul
imul
int
outsb
xchg
rol
popa
jb
data16
pop
mov
inc
lds
or
push
jle
sbb
cs
fnsave
jl
aaa
icebp
stos
shr
aad
in
inc
inc
push
add
fisubrl
les
ja
imul
or
inc
push
pop
repz
push
fwait
das
dec
push
jb
cli
imull
lret
sbb
test
adc
lea
mov
and
sbb
scas
iret
movsb
lcall
adc
sbb
adc
push
inc
inc
xchg
pushf
push
addb
enter
pop
fsts
mov
xchg
add
pop
cltd
xor
test
lods
or
jo
scas
mov
test
pop
xor
xor
jp
sbb
xchg
push
cmpsb
repnz
dec
adc
addb
lods
mov
into
fildl
or
es
outsb
push
mov
int
inc
adc
loope
lds
fs
fiadds
iret
pop
outsb
es
jp
pushf
in
push
mov
xchg
mov
xor
push
cmpsl
fnstcw
jge
shrb
cmp
xor
or
or
decb
sub
sub
adc
cmpsb
xchg
or
in
lods
lcall
lock
into
mov
mov
je
mov
mov
cmpsb
and
mov
inc
xchg
int3
sbb
jno
pop
mov
adc
or
fstpt
aaa
scas
pusha
lds
pop
fildl
add
ret
mov
add
subb
pop
dec
mov
mov
or
nop
ds
sbb
jbe
adc
fs
repnz
pushf
sbb
mov
mov
or
pop
dec
stos
and
jecxz
movsb
xor
or
js
jle
dec
push
pop
ss
jmp
mov
mov
repz
cmc
ss
enter
pop
adc
xchg
stos
out
or
leave
jo
push
push
cmp
pop
cmp
pushf
cmp
mov
int3
loopne
pop
mov
scas
stos
jl,pt
cmp
pusha
cld
sub
lods
mov
ror
sub
pop
imul
sub
shrl
pcmpeqd
xchg
mov
jnp
int
lds
push
mov
test
cmpsb
mov
imul
lret
xchg
push
or
cmpl
js
in
inc
movsb
xchg
mov
jecxz
repz
jmp
xchg
pop
aad
push
jg
adc
mov
stos
outsb
ds
dec
and
ss
sar
outsb
adc
jae
stos
pop
or
negl
loopne
out
test
dec
sbb
xchg
test
addr16
xor
or
or
call
inc
ret
mov
jae
mov
cmpsb
jl
sbb
sbb
std
jbe
xor
cmp
sbb
cltd
jge
shl
lds
dec
out
lret
arpl
xor
test
mov
ret
add
loop
and
push
push
out
fistps
int3
cmp
mov
hlt
ljmp
std
push
cmp
pop
popa
loope
dec
lds
pop
std
arpl
push
imulb
xlat
out
mov
cli
adc
sbb
aam
mov
pop
faddp
cmpsl
or
mov
jne
mov
and
ds
bsr
cmp
outsb
sti
pop
cmp
or
int3
lods
adc
mov
pop
aas
fbld
lahf
dec
mov
mov
nop
loopne
rcrl
add
push
lret
in
cli
jecxz
imul
ljmp
adcl
iret
mov
sti
mov
mov
mov
lcall
cli
dec
std
filds
outsl
xchg
in
insl
xor
cmpsb
jp
inc
fnstenv
cmpsb
pop
mulb
loopne
jne
jge
cs
jl
cli
mov
mov
lds
mov
jb
and
dec
lcall
imul
mov
push
mov
jnp
int3
cmp
rolb
cwtl
pop
shlb
mov
es
stc
idiv
push
out
pop
sahf
push
mov
or
sub
mov
xor
enter
jl
std
lods
loopne
in
push
mov
add
cs
daa
inc
in
mov
out
add
or
lcall
sarb
insb
nop
sbb
inc
sarl
add
xchg
xchg
mov
gs
sahf
std
popf
push
sub
test
pop
inc
push
orl
data16
gs
ljmp
push
ret
jg
jbe
mov
fld
pushf
icebp
arpl
stc
lods
push
mov
aas
dec
mov
dec
mov
rorb
pop
imul
ljmp
rcl
jle
lea
in
cmp
rorb
mov
dec
add
adc
xchg
lods
insl
mov
jo
ljmp
mov
mov
dec
adc
or
in
or
xchg
jl
xlat
pop
idivl
or
je
push
inc
out
jnp
orl
insl
movsl
pop
sarl
cwtl
fwait
mov
or
rolb
sub
pop
enter
pop
fwait
cmp
dec
sbb
xor
jmp
cmp
adc
mov
push
add
add
cmp
shr
xchg
and
fwait
xlat
bnd
jne
dec
aaa
xor
int
aas
lret
cmp
push
inc
fidivrl
add
cmpsl
or
lods
repz
mov
ret
rcll
pusha
packsswb
cmp
cs
negb
es
sahf
sbb
js
mov
jmp
sbb
dec
and
repz
scas
xchg
bound
mov
xor
pushf
xchg
and
test
mov
lods
fiadds
dec
ja
lock
push
adc
sbb
add
jns
fdivl
lcall
inc
sub
cmpsb
jnp
std
sub
inc
loope
mov
jno
sub
push
xor
arpl
je
movsl
scas
imul
lods
mov
add
rcrl
inc
add
outsl
xchg
pushf
ror
inc
pop
jbe
fisubrl
cs
dec
stc
mov
pop
out
cmpsb
mov
xlat
sub
jle
xchg
push
cmpsl
rcrb
mov
add
lret
mov
pop
xchg
mov
testl
inc
jl
or
cmp
rorb
cltd
push
push
loop
cli
jnp
cmp
test
test
stos
lea
mov
mov
repz
sahf
jmp
out
mov
sbb
or
inc
sub
xor
dec
outsb
add
mov
or
jp
push
adc
add
scas
dec
mov
std
and
push
xchg
inc
xor
aad
loope
call
xchg
pop
hlt
ret
pop
test
push
push
dec
xchg
stc
ds
xchg
xchg
mov
sarl
pop
sub
rep
cwtl
sbb
lods
xor
cmp
mov
leave
pushf
lock
lods
mov
push
pusha
adc
fs
es
shrl
adc
pop
push
lahf
stos
dec
imul
cmpsb
scas
cmpsb
pop
pop
sbb
enter
cli
lods
push
lods
push
sbb
mov
add
aaa
repnz
add
cmc
mov
jle
pop
outsw
pop
rorb
sbb
and
pop
jae
ror
push
scas
mov
xchg
lcall
cmp
rorl
shlb
xor
mov
lret
mov
fs
repz
and
mov
ljmp
pop
add
fsubrl
mov
sub
sub
mov
fistl
enter
xchg
test
sub
and
jno
pop
scas
mov
and
or
xor
sbb
mov
cld
outsl
jl,pn
cmpsl
mov
pop
rcrl
inc
sbb
ljmp
add
add
ror
push
pop
pop
inc
js
aad
pop
lret
cmpsl
mov
shr
xor
dec
int
ljmp
popa
movsb
xor
cmpsb
stos
out
xchg
es
lret
mov
xchg
push
outsb
pusha
mov
jmp
lods
lods
add
mov
dec
incb
jb
mov
and
cmpb
cmp
mov
incl
std
leave
mov
dec
jns
jb
ret
testb
push
fiaddl
cs
pop
subl
add
cmp
fs
int
sub
mov
jnp
insb
mov
push
cmpsb
mov
inc
xchg
pop
sbb
push
out
inc
out
add
push
shl
push
or
and
aas
imul
sbb
pop
ljmp
and
mov
dec
shl
dec
mov
popf
xor
pushf
jmp
stos
mov
jle
xchg
add
icebp
sub
gs
sbb
dec
pushl
cwtl
iret
cmp
jge
lcall
bound
repz
jp
lds
shll
ficompl
jno
pop
push
xchg
repz
push
mov
add
stos
xchg
outsb
into
add
bound
pop
shrl
lcall
push
jns
dec
and
dec
mov
inc
dec
push
ret
adc
pop
mov
xchg
and
add
js
jbe
sahf
lods
out
rcl
jns
sub
lds
movsl
std
mov
hlt
sbb
and
cltd
xor
mov
mov
arpl
or
pop
repz
mov
add
loop
cmp
push
fldl
xchg
hlt
iret
int
pop
push
inc
cli
lahf
xor
lock
mov
mov
dec
mov
out
push
adcl
fnstcw
cmp
lcall
xor
jbe
push
jl
mov
enter
xchg
popa
and
nop
test
jb
fs
xorl
jl
mov
xchg
mov
and
xor
loopne
pmaxub
mov
stos
mov
xchg
outsb
rcl
sbb
push
fdivrp
sub
sbb
xrelease
sbb
inc
ja
out
sub
pushf
xchg
sub
out
out
test
pop
mov
jne
mov
adc
fildl
pop
and
xchg
out
add
and
cmc
cmc
inc
xchg
clc
cli
arpl
add
pop
inc
fdivrs
fnstenv
and
xlat
sahf
push
cmp
pushf
int
sub
cwtl
rcll
inc
aam
arpl
mov
mov
push
or
inc
push
cs
mov
mov
ds
std
and
push
mov
xchg
push
rcrl
push
lods
sbb
jo
loope
test
pop
in
jbe
rcr
pusha
dec
cmpsb
imul
sbb
inc
push
xchg
dec
les
pop
mov
mov
mov
dec
adc
jle
cmpsb
icebp
pop
jl
test
test
mov
addr16
js
mov
mov
test
movsb
lock
cmp
call
loopne
xchg
flds
sbb
xlat
es
fildll
cli
ret
push
pop
iret
add
xchg
pop
arpl
push
mov
insl
dec
cs
or
xor
iret
xchg
mov
stos
adc
sbb
test
push
xchg
dec
push
in
imul
loopne
cli
das
inc
push
inc
sub
mov
std
lahf
inc
pop
testb
dec
inc
or
es
jecxz
notl
sahf
dec
out
fildll
push
fidivl
cmc
xor
mov
push
mov
push
in
es
fwait
cs
push
cmp
xchg
sub
xorl
fs
xor
mov
shlb
sbb
push
pusha
mov
add
mov
dec
lds
fcomp
mov
pop
jbe
test
pop
pusha
nop
push
subb
subb
loope
inc
aad
orb
xchg
pop
les
pop
add
lret
or
xor
cli
sub
movsl
sub
xchg
lret
mov
aas
adc
cmp
lret
push
cli
dec
jecxz
fsubrp
sbb
incb
mov
push
push
jno
xchg
int3
mov
insl
pusha
notl
sub
sub
fdivl
sub
sbb
sbb
fwait
inc
loopne
mov
sbb
imul
jg
shlb
daa
stc
pop
or
leave
xchg
xchg
cmpsb
stos
mov
mov
jbe
pop
subb
in
orl
andb
enter
mov
inc
sub
mov
cmc
mov
or
dec
shlb
jne
stc
pop
pushl
iret
adc
jns
add
daa
adc
das
cld
cwtl
sbb
js
ljmp
push
cld
insb
and
ljmp
imul
add
mov
idivb
xor
push
movsb
fwait
lret
pop
movsl
gs
inc
ss
cld
inc
mov
insl
xor
ffree
jo
ljmp
aas
gs
mov
inc
xchg
inc
ret
add
jbe
inc
lret
xchg
inc
or
adc
fsubs
cmp
pop
push
jl
mov
adc
xor
cmp
xor
push
mov
cwtl
cmpsl
imul
pop
sub
lods
int3
jl
jo
iret
mov
mov
inc
cmp
aam
cwtl
lret
xchg
repnz
jae
dec
in
xor
aas
adc
xor
cld
pop
ret
fadds
out
bound
bound
jg
pop
jb
mov
jnp
jo
jnp
loope
sub
les
adc
xor
xchg
xchg
fwait
mov
dec
mov
jb
dec
xchg
insl
mov
xchg
repnz
in
out
in
mov
mov
cmp
adc
add
hlt
mov
sti
cmp
icebp
lret
ljmp
sub
jnp
cs
jecxz
ss
mov
pushl
or
add
ss
rclb
sub
scas
or
test
jle
cmp
stos
dec
popf
sub
decb
lods
arpl
pop
insb
sbbb
mov
test
or
push
sbb
outsl
lods
cmp
mov
rcl
sarl
shrb
fnsave
int
xchg
js
xchg
push
adc
and
dec
out
iret
loopne
mov
sbb
cmp
in
pop
popf
dec
fwait
int
inc
push
sbb
or
nop
mov
mov
out
mov
repz
sahf
ret
aam
cmp
cld
xor
mov
lock
ret
sbb
in
dec
mov
repz
cmpsl
or
gs
mov
pop
push
adc
insl
in
lock
out
push
xchg
xchg
pop
pop
xchg
mov
xlat
sbb
imul
mov
add
sub
push
pop
lahf
fs
cmp
ljmp
data16
scas
mov
xchg
or
inc
sub
cmp
push
arpl
hlt
sub
or
mov
push
adc
repnz
and
leave
adc
lea
xor
mul
push
jl
ret
sar
mov
dec
dec
sbb
test
fists
in
inc
sbb
bound
xor
jmp
jge
mov
dec
mov
add
notb
jl
mov
mov
xor
popa
xlat
mov
lds
cli
enter
pop
push
adc
adc
cmp
mov
aad
adc
aad
sub
popa
push
and
or
ret
je
je
fnstcw
dec
push
in
sub
dec
pop
push
cltd
dec
popf
pop
xchg
xchg
push
lods
sub
mov
sub
pop
lret
rol
leave
xchg
jle
dec
and
aas
mov
shlb
cmpsl
dec
jl
jl
mov
cmp
sub
xchg
sbb
in
mov
xchg
aas
mov
subl
inc
enter
insb
inc
cmp
push
jle
out
mov
xorl
mov
mov
test
pusha
mov
fistpll
sti
popa
dec
fisttps
repz
cmpsl
lcall
js
mov
xchg
jo
loope
iret
sub
test
fucomip
ret
cs
insl
out
xchg
push
cmp
lods
fucomp
add
ror
mov
adc
inc
stc
pop
pop
inc
and
or
mov
and
int
adc
je
adc
pop
insl
loop
or
cltd
jl
dec
cld
test
cmp
shll
sbbl
jle,pt
inc
iret
pop
mov
xchg
mov
jp
xchg
fists
jns
mov
incb
dec
je
fistpll
or
rolb
popf
sbb
aas
or
lock
aam
adc
push
jnp
mov
mov
xor
out
sbb
xchg
rclb
arpl
das
pop
test
pop
and
mov
jg
fdivs
icebp
mov
xor
fstl
jbe
mov
push
ret
mov
imul
push
sbb
lcall
add
outsb
mov
out
lds
pop
scas
idivb
push
scas
nop
sbb
adc
data16
mov
xorl
pop
subb
jbe
aam
lahf
lock
push
xor
fadds
cmp
out
xchg
xchg
cmp
scas
stos
mov
pop
lret
pushf
adc
dec
sarb
jmp
icebp
lret
push
addr16
lods
out
mov
movsb
jo
jno
loope
mov
addl
imul
dec
lcall
add
mov
insb
mov
jp
push
sub
pop
inc
fucomip
ret
mov
push
stc
xchg
rcrb
inc
cld
popa
test
fsubr
andb
lret
mov
stc
insb
jno
orl
mov
lcall
pop
out
ds
js
add
lea
mov
mov
inc
jns
mov
insl
sbb
imul
push
test
cli
sub
dec
es
loopne
inc
sub
popa
ficompl
aad
push
dec
sbb
rcl
cmp
repz
mov
inc
into
leave
es
mov
sub
xchg
mov
push
les
std
and
xlat
jp
in
setae
push
sbb
jmp
mov
les
ss
cmp
aam
nop
hlt
cmp
dec
dec
xor
lock
test
sub
sbb
jmp
sti
xchg
dec
inc
aad
subb
sbb
lcall
pop
jp
pop
mov
inc
test
mov
adc
daa
push
cli
out
movsb
dec
cmp
adc
mov
int
xchg
sbb
jmp
mov
xchg
mov
push
xchg
aaa
pcmpeqb
dec
xor
shr
into
daa
sbb
xchg
push
mov
or
js
dec
repz
stos
or
pop
jne
test
notb
test
add
out
ror
mov
pop
xor
in
fxch
pop
xchg
jp
xchg
out
lods
mov
and
aaa
in
shl
mov
dec
mov
fdivl
xor
sub
jnp
xchg
push
mov
stos
jp
popf
mov
mov
or
cs
dec
shrb
sbb
scas
daa
scas
sub
or
push
sub
lcall
divb
pushf
cmp
mov
test
mov
sbb
sub
push
jno
mov
jmp
out
lods
xchg
cmp
xor
mov
shrl
or
lret
fdivrs
filds
push
es
pop
fsubs
mov
xchg
popa
shll
js
dec
pushf
ljmp
jno
scas
pop
pop
sub
and
clc
ljmp
sahf
iret
xchg
xchg
fwait
daa
xchg
cmc
dec
dec
fstpt
fimull
mov
sub
fldenv
and
dec
adc
pushf
insb
mov
or
repz
out
outsb
fdivrl
cmpsl
popf
je
les
out
inc
sub
pop
and
push
mov
int3
xchg
movl
cmpsb
mov
iret
mov
sbb
and
clc
cmp
jno
cmp
je
daa
aas
aam
movsl
pusha
add
jp
testb
pop
inc
add
cli
stos
vcvtps2pd
adc
addr16
mov
or
push
ds
icebp
call
int
imul
dec
inc
add
adc
xor
mov
or
inc
sarb
inc
sbb
sahf
in
addb
mov
in
adc
mov
ljmp
ljmp
jmp
fnstenv
adc
sbb
adc
subl
aas
ret
int
mov
pop
mov
movsl
xchg
dec
insl
pushf
ficompl
filds
fcmovne
lea
jns
or
mov
inc
dec
and
daa
add
push
jnp
add
push
add
dec
add
add
test
pushf
and
testb
xchg
call
sub
repnz
dec
nop
xor
add
dec
cmpsl
cmp
dec
or
lcall
or
enter
jbe
lahf
mov
pushf
mov
mov
mov
mov
jmp
xchg
push
and
jo
cmpsl
movsl
mov
xor
pop
mov
sti
dec
das
and
mov
pop
inc
insl
clc
jno
dec
pop
gs
ljmp
push
xchg
into
xchg
dec
sub
shll
dec
jmp
xchg
sbb
int
mov
push
out
mov
cmp
mov
jl
cmp
rcll
mov
mov
scas
xlat
sahf
idivb
cmp
or
dec
push
test
xchg
cmpsl
mov
xchg
cmpsb
or
sub
pushf
mov
jmp
test
add
jb
int
mov
rcr
xchg
mov
loopne
repnz
ret
fldenv
mov
sbb
pop
sub
pushf
adc
test
into
addr16
jmp
std
popfw
popa
cmp
imul
jecxz
push
sbb
pop
shll
ret
push
inc
les
inc
xchg
pop
insl
xor
jnp
out
aas
mov
sub
push
mov
push
aaa
mov
out
dec
adc
xor
inc
hlt
ret
and
pop
and
int
aas
dec
pushf
xor
jno
adc
arpl
repnz
hlt
xchg
dec
cmp
call
icebp
fcompl
fiadds
or
ljmp
xor
shrb
xor
push
pop
ljmp
add
push
es
cmpsb
aas
pop
jecxz
lods
cmp
subl
xor
push
pop
jb
loopne
add
push
xchg
pop
test
pop
push
loop
negb
lods
cmp
xchg
push
sbb
add
ret
stos
sbb
add
fcoms
inc
fdivp
push
and
mov
mov
cwtl
and
pop
insl
mov
pop
pop
mulpd
xlat
in
dec
pop
jle
loop
lea
fisubrs
pop
repnz
mov
adc
adc
fsubrl
outsb
or
cmpsl
pop
out
cmpsb
cmp
iret
inc
test
aad
mov
lea
je
idivl
test
call
fcompl
out
fnstcw
lahf
addr16
fisubrl
pop
xlat
inc
xchg
jmp
dec
sbb
ds
inc
cmovae
cmpsl
adc
dec
push
aaa
sbb
push
movsl
cmp
mov
dec
push
cltd
jns
mov
inc
xor
lcall
and
inc
roll
push
cmp
in
test
stos
xchg
push
xor
sbb
mov
inc
adc
fistps
sbb
insl
mov
fimuls
cmp
sbb
movsl
push
in
and
call
arpl
xor
divb
jmp
xchg
lock
ficoml
pushf
fisubrl
nop
fprem1
cmp
mov
int3
in
inc
pop
mov
mov
xchg
xchg
cmpsb
sub
pop
inc
xchg
inc
push
jl
test
imull
sub
aas
mov
jge
lret
gs
adc
pop
mov
cmp
adc
sub
xchg
dec
mov
leave
lods
push
pop
cmp
je
mov
fdivl
sbb
mov
stos
wbinvd
jae
add
ret
shll
sbb
std
sub
lock
jno
repz
adcl
cmpsb
lds
fdiv
cli
aam
mov
jge
xor
seta
cmp
add
jp,pn
mov
scas
icebp
rcr
fwait
mov
pusha
addb
push
insl
mov
in
pop
hlt
xchg
mov
pop
das
mov
xor
or
negb
mov
or
lock
lods
adc
popf
faddp
and
adc
je
cwtl
shll
lock
loope
mov
scas
adc
xor
sbb
jb
cli
dec
mov
pusha
cmp
pop
jecxz
adcb
das
xchg
adc
test
sbb
add
jmp
pop
dec
popf
movsl
mov
cmp
pop
and
sbb
imul
addr16
arpl
jb
leave
push
iret
adc
push
fidivl
jge
mov
je
sbb
subl
roll
popf
call
pop
lea
mov
sbb
mov
fsincos
inc
test
pop
decb
rorl
adc
cli
jmp
lds
out
jmp
mov
or
push
dec
popf
cld
rcrb
mov
push
add
lret
add
jne
pop
sbb
scas
xchg
mov
out
jnp
cmp
adc
leave
lahf
fisttpl
insb
sahf
or
sub
mov
es
ret
mov
movsl
mov
sub
sbb
push
xchg
gs
ret
xor
fnsave
pushf
push
mov
push
idivl
insl
insb
sbb
lret
inc
xor
or
pusha
mov
popf
mov
sbb
mov
pop
leave
call
cmpsl
shll
xor
and
nop
cld
in
dec
mov
and
aad
enter
dec
inc
cmpsl
sarl
sti
xchg
aad
dec
mov
xor
stos
fcomip
jo
shlb
sub
scas
mov
push
adc
dec
stos
imul
pop
push
repz
pop
xchg
pop
fidivrl
add
je
cmp
shld
jmp
aas
jb
mov
sarl
adc
xchg
push
sub
inc
pusha
into
jle
xchg
push
cmp
mov
adc
mull
add
xchg
xor
fidivrs
mov
cwtl
aad
mov
lods
hlt
cmpsb
push
mov
dec
push
fs
ja
ss
jns
nop
sub
es
pop
push
fidivl
out
popa
inc
into
add
lret
inc
push
and
call
xor
mov
ja
dec
xchg
adc
dec
ss
or
sti
imul
add
in
aad
icebp
and
scas
sbb
xor
stos
out
and
test
pop
punpcklbw
addl
push
mov
add
dec
mov
fildll
jg
sub
lcall
or
call
sub
and
scas
sbb
pop
cwtl
es
pop
sub
xor
pop
adc
and
loop
jnp
adc
inc
ret
cmpsb
loope
stos
inc
mov
mov
add
push
stos
test
jp
or
dec
test
lcall
inc
rep
dec
mov
jmp
push
jmp
mov
dec
push
ljmp
fnsave
aas
leave
outsb
mov
fcomps
sahf
fidivrs
jb
adc
xor
js
pop
movsl
movsl
loope
stos
jno
jp
insl
addl
popa
loopne
xchg
into
shrl
iret
test
sbb
lods
jb
out
jb
and
push
push
or
xlat
iret
xor
mov
xchg
push
and
mov
adc
fscale
jmp
mov
xor
shll
adc
arpl
jnp
push
loop
pop
outsl
sbb
icebp
iret
sub
ret
mov
jl
ret
mov
ljmp
rcll
cmp
repz
les
pop
enter
cmpb
inc
nop
sbb
in
mov
js
lret
xchg
xchg
mov
sti
push
je
or
adc
shll
lret
into
xchg
add
sbb
outsl
sbb
jecxz
popa
iret
sbb
push
xor
jne
push
adc
in
repnz
iret
and
push
movsl
add
aad
xchg
dec
dec
pop
fnsave
jmp
or
jne
popa
mov
cmpsb
lea
and
adcb
es
dec
shrl
subps
adc
clc
cmpsb
mov
sub
mov
and
adc
xchg
xorl
call
jmp
add
fcoms
mov
ja
mov
mov
in
scas
aaa
sbb
mov
ret
inc
xchg
inc
inc
jae
aaa
xchg
xor
pop
mov
fsts
or
sbb
out
sbb
in
clc
push
orl
pushf
ja
imul
push
xlat
cmp
jp
loop
scas
std
push
sub
mov
ds
out
jae
je
or
or
ss
mov
cmpsb
cld
dec
rcr
sahf
push
sbb
mov
out
ja
mov
imulb
outsb
out
dec
stos
rcl
fldt
mov
popf
lock
dec
cmp
pop
jb
push
push
pop
xor
push
sub
sub
gs
cmpsl
notb
and
outsl
mov
rcll
ret
push
clc
mov
xchg
cs
jnp
mov
pop
add
push
cmc
pop
mov
dec
push
pop
lahf
mov
jbe
pushf
mov
and
ret
sarb
call
lahf
sbb
test
add
mov
pop
and
dec
or
cmp
fsubs
cmpsl
cmpsl
mov
leave
rcl
jecxz
cmpsl
test
loope
les
or
enter
jns
negl
mov
cmpsl
mov
iret
jno
adc
inc
mov
out
adc
ja
pop
mov
pop
mov
add
dec
test
loop
ljmp
jns
xchg
adc
or
push
mov
jae
mov
pop
in
dec
sbb
cmc
push
lret
out
into
inc
add
test
into
sub
fmul
jl,pn
jle
sub
jle
pushl
notl
xchg
jo
cmp
sbb
inc
cld
dec
jle
push
jo
sbb
mov
inc
mov
lret
push
dec
mov
mull
mov
bound
data16
ja
test
negl
xchg
inc
scas
sub
test
jns
cmp
clc
mov
popf
les
ret
rolb
fcoms
lds
fwait
out
loope
leave
std
xchg
dec
push
aaa
test
and
jb
fsubrs
and
outsl
and
lea
lods
add
xor
mov
cmc
mov
mov
mov
jle
or
or
hlt
mov
iret
scas
mov
int
dec
xchg
jne
ss
cmp
call
fwait
jp
cld
push
repz
xor
and
lcall
js
inc
in
shrb
dec
jnp
je
push
cmp
add
test
mov
movsl
jae
adc
cwtl
inc
popf
fstps
sub
pop
data16
xchg
adc
dec
pop
adc
lods
push
xor
mov
xor
mov
inc
add
xchg
shll
cwtl
shr
push
icebp
push
xchg
push
mov
scas
jge
lock
add
and
rol
stc
in
mov
rol
or
dec
inc
xchg
clc
cld
lret
jnp
inc
jae
iret
mov
lret
jo
into
fidivrl
roll
je
mov
imul
dec
jns
hlt
loop
mov
outsl
add
mov
out
arpl
in
cmp
bound
cmp
mov
pop
adc
int3
or
ret
lret
add
iret
test
enter
in
pop
and
xchg
roll
cvtpi2ps
adc
mov
arpl
imul
movsl
int
sub
iret
fdivr
jbe
push
movsl
mov
fstl
pop
cs
push
mov
add
mov
lcall
push
nop
inc
jns
lret
inc
xchg
fwait
push
push
mov
int3
popa
sub
jo
push
push
sub
arpl
test
inc
call
lock
fimuls
shrb
movsb
jle
lahf
or
jae
test
jecxz
push
es
fisubs
xchg
loop
loop
test
push
dec
pop
das
dec
dec
jno
sbb
inc
sbb
sbb
sub
xor
rcll
sbb
cmp
pop
bound
pop
shrl
ret
out
mov
cmp
ret
roll
sbb
mov
fadds
mov
shlb
push
xchg
xor
outsl
sub
call
in
lds
enter
js
fs
pop
pop
addr16
call
cwtl
in
jns
je
xchg
loope
out
mov
mov
ret
mov
into
test
aaa
aad
inc
xor
pop
pop
add
pop
xchg
shr
shll
lods
inc
cwtl
cmp
sub
test
rcll
enter
mov
add
pop
out
lds
dec
push
gs
jge
jge
mov
mov
enter
loop
clc
cwtl
jge
push
mov
push
enter
or
push
lret
pop
lea
sbb
iret
out
popf
mov
sbb
cmpsb
mov
jg
outsl
aaa
ds
out
lret
add
dec
test
sub
nop
sub
pop
repz
cmp
inc
arpl
aaa
shrb
hlt
adc
pop
inc
cltd
popf
mov
inc
xor
push
or
jecxz
movsl
fiadds
mov
mov
fsubl
bound
je
sbb
test
cmp
and
cmpsb
scas
mov
ljmp
and
lds
sub
mov
cltd
adc
mov
in
bound
negl
sbb
daa
shrb
jp
sub
and
cmp
xchg
pusha
sbb
xor
fsubs
nopl
mov
cmpsl
and
mov
mov
pop
jl
repnz
nop
pop
aad
scas
and
push
out
enter
outsb
lock
test
jmp
mov
divl
sub
adc
lock
clc
repnz
movsb
mov
pop
mov
push
lea
jae
pop
fisttpl
aam
add
lcall
repz
push
shrl
jns
mov
jb
ds
sub
jl
cld
les
inc
jae
pop
mov
pop
out
sub
jnp
mov
mov
jo
cmp
mov
shll
mov
ret
ds
cld
jns
pop
push
addb
inc
mov
pushf
mov
movsl
dec
enter
ret
cmc
xchg
and
sbb
subl
cmp
xor
sub
stc
push
pop
mov
insb
icebp
in
push
call
dec
rorb
xchg
sbb
mov
inc
hlt
aad
insb
xor
inc
test
fisubs
mov
imul
add
aam
bound
sahf
inc
fldenv
push
in
xor
cmpsb
cld
popl
sub
jmp
iret
repz
jnp
pop
outsl
sub
mov
std
dec
inc
in
nop
jg
ss
popf
repz
stc
int3
or
cmpsb
and
dec
jb
out
lahf
inc
dec
jbe
push
push
sahf
fdivrl
mov
shll
sarb
lods
jno
inc
jns
outsb
dec
call
dec
fldcw
push
xchg
dec
jo
mov
cmp
leave
cmp
inc
lods
or
sar
mov
jecxz
sub
xchg
lcall
je
pop
dec
xchg
insw
xchg
and
pusha
outsl
sub
scas
mov
mov
fdivs
and
rclb
addb
sub
push
imul
mov
or
in
and
outsb
pop
es
loope
pop
js
ss
daa
jg
sub
cmpsl
loopne
xor
xchg
aas
loopne
test
sbb
push
add
push
lahf
stos
sbb
insb
mov
adc
jmp
xchg
stc
add
add
insl
adcb
push
mov
mov
mov
aad
xor
push
inc
dec
sbb
ret
adc
mov
xchg
mov
in
push
clc
and
hlt
xchg
pause
mov
mov
outsl
rorb
dec
xor
xchg
std
add
dec
mov
jg
mov
repnz
cmp
lcall
sahf
je
push
dec
mov
fs
add
pushf
ja
mov
inc
and
stos
inc
cltd
pushl
ja
pop
jnp
adc
jne,pt
xchg
mov
sub
test
ljmp
sahf
jno
pop
adc
mov
push
nop
mov
cmc
dec
jmp
aaa
scas
mov
sbb
outsl
add
fs
mov
iret
shr
icebp
clc
ret
loope
xchg
and
out
adc
pusha
popf
mov
lods
jle
adc
mov
lock
and
xchg
fmulp
fstp
or
js
push
repz
dec
adc
rorl
push
scas
add
jno
adc
mov
sub
inc
stos
sub
pop
mov
sbb
daa
sbb
sub
pop
ss
stc
push
xor
inc
aad
fisttps
insb
call
int3
add
push
xchg
sti
mov
subl
orl
rcl
jge
pop
cmp
mov
mov
push
jb
push
pop
and
mov
pushf
xor
dec
cld
lahf
jle
nop
out
mov
sbb
fdivl
je
mov
mov
std
dec
xchg
ljmp
in
pop
dec
xchg
xchg
leave
mov
jns
jmp
stos
fmul
sbbl
dec
rclb
or
xchg
arpl
test
push
popa
addr16
xor
stos
sbb
mov
imul
call
sbb
into
mov
stos
xor
mull
orb
scas
cmpsl
lret
outsb
data16
xor
pop
dec
test
mov
cwtl
ret
das
pop
fadds
xchg
loope
enter
sbb
sarl
mov
sbb
jbe
push
fnstcw
js
xchg
mov
int3
xchg
mov
into
aam
pop
cltd
pop
xor
data16
mov
mov
in
lcall
xor
mov
mov
lret
arpl
mov
jnp
lret
sub
movsb
mov
hlt
movsl
lret
mov
pop
pop
add
aad
and
mov
incb
jbe
inc
sbb
and
mov
sub
std
xor
es
fbstp
jecxz
sbb
push
in
dec
cmp
mov
push
adc
mov
mov
out
jbe
dec
inc
adcb
dec
jnp
sbb
cli
xor
dec
mov
mov
xor
es
push
cmpb
fwait
insl
xor
or
mov
inc
mov
out
sub
popa
mov
ret
outsb
and
loop
xchg
cltd
out
push
outsb
pop
pop
inc
repnz
rolb
les
jecxz
stos
pop
jecxz
gs
mov
adc
pop
xchg
aaa
jecxz
out
sti
push
cmpsb
push
scas
mov
leave
sti
subb
mov
cmp
loope
mov
dec
inc
add
stc
add
add
xor
cmpsl
sbb
adc
test
outsb
pop
inc
and
jae
xchg
xchg
fs
sbb
bndstx
mov
cwtl
jp
in
loope
add
out
inc
mov
stos
out
scas
fstps
lcall
fildll
ss
mov
and
xor
aad
es
ret
out
sbb
fstl
sarb
bound
pusha
add
mov
jecxz
rolb
xor
ljmp
ret
adc
lret
cmp
loope
mov
xor
mov
jb
filds
push
jbe
cltd
loopne
subb
jbe
shr
stos
subl
jg
stos
push
iret
call
mov
adc
loop
sbb
outsl
add
aad
xchg
dec
lods
add
jmp
cmp
cmc
adc
sub
test
cmp
ljmp
sub
pop
push
sub
xor
lods
mov
adc
repnz
mov
or
mov
in
dec
pop
js
sub
js
xchg
fidivrl
lock
repnz
sbb
cmpsl
xor
mov
scas
push
adc
xchg
and
int
ljmp
xchg
ja
sub
shrl
pop
jmp
mov
test
outsb
pop
ljmp
sub
adcb
add
js
jbe
mov
inc
mov
cmpsb
mov
and
out
mov
or
mov
cmp
mov
dec
shll
cmp
loop
push
xlat
js
in
int
jns
cmpsb
rorl
mov
ss
xchg
nop
mov
push
mov
xchg
loope
mov
fildll
enter
gs
stc
jecxz
pushf
loope
sub
adc
les
xor
xchg
inc
jne
addb
bound
push
sbb
sarl
push
mov
or
cmp
dec
js
adc
shll
dec
add
mov
inc
fsts
or
xor
adcb
xor
adc
xor
std
push
lock
xor
bound
xor
pop
sti
adc
inc
cmp
push
lcall
or
roll
pop
inc
pop
sub
add
orw
addl
lcall
mov
sbb
inc
inc
and
or
mov
push
imul
sub
mov
mov
aas
mov
mov
jns
inc
sbb
movsb
sub
and
push
jl
xlat
dec
and
jg
add
pushf
cmp
adc
jnp
sub
cmc
adc
testb
mov
mov
lock
movsb
xlat
xchg
std
jns
or
sub
adc
icebp
fwait
out
mov
mov
lods
hlt
call
idivl
xchg
jge
test
or
jl
inc
gs
sbb
movsb
int
test
mov
sub
jmp
aas
push
enter
dec
das
ret
lcall
cmpsl
data16
roll
test
push
or
mov
add
dec
and
es
outsl
int3
je
ret
add
scas
ficomps
cmc
mov
loop
add
xchg
out
ret
dec
dec
jp
sbb
out
bound
inc
jmp
icebp
xchg
cmp
mov
mov
repz
mov
scas
sbb
inc
jecxz
push
push
xchg
icebp
or
cmc
or
or
rcrb
push
sbb
in
mov
sbb
mov
inc
adc
xor
arpl
and
mov
and
scas
cli
lahf
ss
cmpsl
ficomps
cmpsb
mov
push
xor
sbb
and
jno
sbb
pop
xor
jmp
pop
and
mov
xor
jecxz
shrb
dec
ja
dec
push
loope
inc
add
ja
inc
xchg
xchg
xchg
fmuls
test
push
mov
xchg
icebp
fwait
inc
push
inc
test
or
rclb
fnstenv
inc
adc
dec
jp
sar
push
mov
sahf
xchg
fs
stos
gs
insl
jle
ljmp
and
lock
push
mov
mov
js,pt
xor
in
push
adc
or
test
xchg
jmp
cwtl
imul
sub
shr
jge
sub
cmp
push
incl
das
sub
les
call
ds
outsb
pop
enter
dec
cld
dec
cmp
sbb
pop
xor
hlt
fidivs
in
cs
cltd
mov
js
push
add
push
aad
cmp
fstp
cmp
loop
dec
aam
enter
repnz
or
sub
mov
in
mov
xchg
pop
mov
dec
push
add
cwtl
cmp
add
call
mov
and
ja
push
or
int
or
js
xchg
ficoml
dec
popf
jns
scas
ljmp
cmp
pop
pusha
roll
mov
jg
push
adc
sub
mov
cltd
cld
ss
int
leave
clc
cmpsb
sbbl
pop
pop
sbbb
call
and
in
aaa
jecxz
negl
or
movsb
int3
or
sbb
cmpsb
in
jno
pusha
mov
add
jge
std
icebp
lahf
out
and
call
inc
das
and
mov
cmp
mov
push
xor
adc
into
aam
ss
cmpsb
and
das
mov
mov
cltd
xor
sti
out
rorl
stos
sub
lods
pop
cltd
adc
or
pop
mov
sahf
icebp
fstpt
mov
out
iret
call
rol
fsubs
push
js
add
adc
dec
imul
stos
push
cld
frstor
sbb
push
and
sub
adc
mov
pop
pop
cli
imul
jl
out
out
fldcw
jmp
stc
mov
es
addr16
cld
fisubrs
and
in
inc
xor
int3
enter
xor
push
test
rclb
sbb
fstpl
arpl
mov
jg
pop
adc
cmp
add
scas
rcll
or
mov
mov
jle
stos
movb
ja
pop
shlb
xor
sub
scas
or
and
aas
mov
inc
inc
sub
dec
push
scas
scas
leave
dec
cli
loopne
inc
cltd
dec
ret
cld
movsl
cmp
sahf
jg
adc
dec
mov
jnp
jb
xchg
cs
ret
aas
xor
xor
mov
pop
mov
and
insb
xor
test
xor
aad
inc
out
popf
jns
in
dec
leave
sub
xchg
mov
push
jno
das
jo
aad
xchg
lret
mov
stos
sahf
push
sbb
addr16
xorl
cli
outsl
dec
mov
pop
lods
cmp
mov
mov
jp
scas
dec
xor
adc
les
cmc
sbb
mov
movsb
ds
js,pt
cmpb
and
es
out
xchg
jns
cld
ljmp
fisubrl
cmp
push
sbb
iret
mov
negl
pop
sbb
fs
lret
mov
movsb
or
leave
aas
scas
mov
stos
lret
les
into
lds
loope
test
mov
pusha
inc
or
jl
mov
test
push
or
mov
sub
pop
adc
mov
data16
les
shl
mov
mov
cmpsb
bound
xchg
xchg
cmpsl
out
jo
push
fdivrs
std
mov
int3
dec
dec
add
inc
mov
mov
cmpsb
mov
push
pop
int
cmp
jp
add
and
lea
stos
pop
jl
xchg
jnp
xor
in
jnp
add
add
pop
and
outsl
imul
ret
idivb
jle
jno
push
jp
inc
mov
push
push
stc
loopne
push
and
jb
sar
mov
jge
or
cltd
dec
xor
leave
and
outsb
repnz
fwait
mov
mov
xor
dec
inc
jecxz
icebp
movsl
lock
adc
cmp
pop
jo
mov
data16
mov
sbb
mov
arpl
jmp
movsb
cmp
lahf
xor
and
dec
jae
mov
and
xchg
jae
out
fs
sub
add
pop
andl
adc
lret
xchg
lods
mov
sub
jb
fists
ret
vpshufhw
push
xchg
push
inc
push
mov
lods
dec
and
dec
xchg
cmc
icebp
sub
sub
arpl
fdivrp
test
inc
lret
cltd
cmpb
mov
adc
cmp
adc
jecxz
push
popa
and
jo
lds
xchg
bound
out
pop
outsb
sub
mov
inc
out
clc
sub
mov
popf
adc
jecxz
xor
pop
ljmp
lcall
pop
clc
cmp
inc
xor
pop
loop
movsl
lock
push
xor
movsl
aam
in
out
xchg
mov
arpl
pop
push
add
scas
aaa
mov
xchg
pop
push
dec
out
push
ficomps
dec
and
and
mov
dec
cmpsb
and
mov
out
lock
sbb
and
cmp
cld
fwait
imul
xor
pushfw
xchg
stos
sbb
cmpsl
dec
int3
sbb
outsb
dec
and
add
mov
arpl
cltd
ljmp
out
out
adc
fists
sub
js
shr
or
push
xchg
xchg
adc
sub
aaa
jle
lock
xlat
mov
popa
std
sbb
pop
cltd
fdivp
mov
xchg
jbe
lret
faddp
mov
outsb
mov
or
es
stos
mov
and
daa
sbb
or
into
pop
jae
sub
cmp
adc
jmp
cmovns
xor
adc
pop
pop
jbe
ds
adc
and
pop
popf
mov
gs
jns
mov
out
fcompl
pop
ss
stc
test
js
pop
pop
pusha
mov
enter
aam
xchg
push
repz
sub
add
sbb
pop
test
fistpl
dec
mov
pop
ss
lcall
pop
outsl
rcl
loop
sarb
lods
mov
dec
lods
loope
fnsave
in
incb
ret
int3
data16
mov
add
sbb
jb
jge
lods
and
dec
sti
outsb
push
in
cltd
xchg
and
movsl
push
mov
add
mov
aad
js
xchg
gs
or
sbb
imul
fcmovbe
sbb
sub
mov
leave
mov
add
aaa
jae
push
dec
popf
mov
or
and
push
dec
mov
push
mov
icebp
sbb
sti
xchg
test
mov
leave
orb
fidivs
adc
das
mov
addl
add
icebp
add
cmp
inc
loop
ret
outsb
add
arpl
cmp
cmp
mov
inc
je,pt
jno
out
pop
stos
push
popa
push
gs
add
test
popa
cmp
adc
sbb
sub
push
ficompl
push
ret
xchg
pop
push
adc
mov
fsubrl
mov
sbb
sbb
insl
dec
mov
in
test
push
cmp
into
sahf
cs
xchg
jbe
xor
out
inc
lcall
jmp
out
xor
sub
or
je
inc
cmp
mov
mov
inc
cltd
scas
xor
xchg
mov
mov
inc
pop
push
fs
icebp
data16
mov
xchg
pop
xchg
outsl
jmp
mov
xlat
gs
push
sub
mov
in
loope
in
idiv
loop
xorb
add
fldenv
cld
or
loop
js
dec
pop
sub
out
dec
xchg
in
pop
das
icebp
fs
out
add
aad
insb
adc
cmp
iret
sbb
ss
dec
inc
loopne
sti
xlat
inc
stc
xchg
bound
sub
lret
push
lods
repz
sub
inc
sub
sbbb
and
mov
push
dec
jno
lds
dec
mov
push
sti
cmpsl
or
nop
out
xchg
rcr
idiv
mov
test
pop
jle
stos
arpl
ret
mov
shrb
pop
mov
dec
pop
scas
bound
jecxz
cli
fwait
mov
push
mov
mov
ret
leave
xor
push
out
jmp
push
les
push
rol
aas
lahf
xchg
ret
lods
orl
mov
mov
pop
imul
push
addr16
loope
mov
pushf
mov
popa
in
int
and
fdiv
mov
fdivl
out
jb
lcall
pusha
pop
dec
sahf
push
or
arpl
adc
movsl
jno
sub
popa
test
sbb
pop
push
mov
add
popf
es
mov
test
and
pushf
and
repz
sti
fdivrl
out
add
xchg
pop
mov
ror
out
mov
and
sbb
fists
pop
testb
mov
cmc
pop
in
cmp
dec
or
jno
mov
jns
loope
scas
fbstp
out
jno
mov
push
jo
lea
xchg
cs
insb
push
les
adc
int
dec
mov
dec
mov
xchg
push
jg
stc
xor
jg
cwtl
xchg
push
sbb
fwait
repnz
sub
dec
pop
fisubrl
outsl
loope
movsb
add
or
sbb
push
push
cmpsb
fistpll
lahf
push
push
pop
das
or
sub
int3
rcll
jnp
jae
cmp
jne
xor
or
mov
leave
add
nop
pop
enter
or
out
cmc
or
or
inc
pushl
popa
fs
mov
push
cmp
xchg
aaa
sub
cmpsb
iret
loope
sti
pop
icebp
pop
std
push
xchg
or
push
das
aam
ja
jbe
xor
xchg
sub
jnp
inc
fdivrs
popa
jle
xchg
jmp
xor
les
scas
in
cltd
call
pop
subb
mov
sbb
jp
outsb
jmp
dec
call
mov
mov
int
adc
xchg
xor
addr16
mov
sarl
ret
fwait
mov
pusha
ds
mull
cmp
mov
es
push
mov
ljmp
stos
mov
mov
shll
js
pop
cltd
fxsave
fsubrs
add
test
or
push
js
jge
mov
popf
and
dec
mov
mov
mov
cmp
xchg
roll
repnz
test
xor
xlat
cmpsb
push
ret
lahf
movsb
adc
cmp
lods
aad
popf
cmpb
add
jp
pushf
outsl
add
xor
mov
lea
fcmovb
mov
test
jns
incl
xor
inc
fidivrs
loop
cli
sub
mov
testb
jge
out
aam
imul
scas
sbb
mov
push
or
mov
pop
sbb
xorl
fld
mov
pop
incl
fdivrs
mov
and
and
push
call
arpl
mov
xor
pop
dec
lods
aas
cmpsl
hlt
inc
in
xchg
jno
movsl
ret
mov
cli
std
sub
dec
push
mov
sti
cmp
cmp
shll
sub
xchg
roll
les
push
subb
pop
lfs
cmp
mov
test
outsl
cwtl
aaa
in
mov
xor
gs
in
loope
outsb
movsb
imul
gs
mov
out
xchg
fwait
push
pinsrw
movsb
or
inc
cmp
and
xchg
mov
popa
leave
popf
pop
js
sarb
mov
or
jmp
leave
rcrl
jle
sub
jle,pt
lods
adc
movsl
sahf
outsb
mov
rorb
out
cs
and
out
inc
dec
sub
mov
mov
aaa
test
fcoms
xchg
mov
repz
sbb
sti
adcl
rcr
lret
cld
mov
shll
mov
xchg
stc
adc
mov
add
mov
popa
shlb
aas
sti
lcall
pop
sub
push
push
push
out
pop
mov
sbb
in
cld
mov
dec
push
add
sub
ret
scas
lahf
jns
add
ficoms
rcrl
dec
jne
cmp
iret
xchg
out
add
sbb
jno
cmp
add
in
ljmp
xchg
mull
push
stc
adcb
jb
stos
rorb
cmp
fbstp
aas
add
das
xor
inc
add
out
jecxz
xlat
hlt
cmpsb
lock
aad
in
call
xchg
inc
cli
dec
mov
push
sti
lret
mov
repz
mov
js
sub
xchg
stos
mov
scas
jmp
xchg
lea
mov
stos
es
or
mov
cmp
das
popf
or
shr
aaa
loope
ss
fwait
or
out
pushf
outsl
fstl
mov
scas
loopne
jge
je
movsl
mov
cmpsl
decb
lret
mov
inc
ss
jb
mov
jno
stos
dec
push
pop
mov
and
push
jo
push
imul
pop
mov
stos
iret
add
sub
xor
mov
pop
add
mov
mov
xchg
fldcw
cmc
and
xchg
std
add
and
cmc
out
pusha
out
cmp
loope
sahf
cmc
and
sti
orb
insb
movsl
cmp
je
or
push
inc
out
mov
adcb
sbb
test
test
inc
or
adc
cli
adc
xor
or
ss
push
pusha
push
mov
push
pop
add
scas
cltd
pop
jb
cmp
movsb
jo
pop
inc
stc
shrb
test
adc
mov
movsb
insl
fcompl
xchg
push
jne
sbb
adc
insb
gs
ror
cmp
incb
in
lcall
in
mov
sti
or
push
fimull
jp
mov
nop
dec
pop
scas
cmpl
mov
cli
pushf
xchg
flds
dec
in
pushf
xor
adc
fstps
lods
and
push
lds
add
fsubr
lea
rolb
pop
gs
sbb
scas
outsl
sahf
aam
clc
inc
call
dec
adc
shl
push
loop
mov
pop
int3
jg
sub
pop
pop
xchg
xchg
inc
xchg
ret
inc
lcall
mov
movsl
sbb
test
test
cmp
outsl
lahf
mov
mov
lret
sbb
mov
xchg
add
inc
jne
or
in
loop
fsubrs
xor
hlt
fmulp
out
add
cmp
jo
imul
dec
lret
cltd
shl
jg
sarb
shll
and
out
push
shrl
shl
fistl
ja
jecxz
sbb
add
xchg
jno
rcrb
jp
cmp
test
mov
push
divb
adc
jle
test
jecxz
loop
push
scas
in
mov
jbe
outsb
movsb
sti
into
mov
inc
or
pop
pop
adc
out
mov
movl
cs
add
or
movsb
push
pop
inc
or
sub
xchg
mul
inc
inc
daa
shl
fwait
call
add
mov
mov
xchg
repz
int
push
nop
jecxz
mov
pusha
add
js
mov
cmp
stos
mov
push
notl
mov
mov
xchg
cwtl
sbb
add
pusha
lods
dec
and
lret
sbb
fs
xor
mov
or
iret
jnp
leave
cs
bnd
pop
xor
push
aad
lret
scas
push
lret
in
xchg
mov
lret
fnsave
imul
mov
daa
xlat
add
adc
pop
and
je
inc
jmp
nop
scas
ret
lret
into
sbb
or
mov
or
pop
or
mov
imul
xchg
sti
ret
les
adc
jge
mov
daa
mov
loope
fcmovnb
arpl
jg
aam
add
cmp
cld
movsb
cmp
sarl
daa
lret
nop
scas
js
xchg
and
xchg
cld
or
inc
mov
inc
mov
and
mov
adcl
pop
fisubs
mov
movsb
mov
pop
orb
mov
mov
xchg
add
xchg
push
lret
adc
pop
testb
decb
ja
adc
inc
cmpl
mov
faddl
test
cmp
xchg
xor
mov
xchg
xchg
iret
fwait
cmpsb
movsl
aam
sub
lds
jg
pop
pop
iret
pop
inc
mov
mov
cmp
jmp
inc
and
adc
ds
and
pop
ljmp
add
mov
push
jae
inc
push
jp
mov
nop
mov
sbb
dec
popa
mov
scas
jns
stc
xchg
xchg
into
xchg
aas
lret
push
lret
mov
sbb
cs
push
mov
dec
jno
lahf
enter
test
lcall
push
xor
repnz
out
add
int3
in
xchg
pop
xlat
movsb
cmp
es
mov
sbb
jp
add
push
xchg
adc
mov
sub
pop
sub
mov
cmpsl
mov
push
test
test
test
fmul
push
xor
arpl
jbe
orb
out
mov
xchg
call
mov
pop
sbb
out
leave
lds
pop
shrb
sti
mov
std
and
mov
and
dec
call
xchg
leave
cs
dec
or
push
mov
shl
sbb
push
fisubrs
loop
shlb
xchg
enter
and
maskmovq
mull
and
xorl
push
adc
pushf
and
inc
loop
lcall
in
sbb
ds
in
mov
aaa
xor
add
add
out
fimuls
imul
pop
mov
test
aaa
inc
out
subb
jo
iret
je
inc
add
jl
mov
or
ret
inc
lods
xchg
out
idivl
mov
or
sbb
sub
mov
inc
mov
xchg
jg
sbb
mov
ss
shll
in
inc
addb
add
jae
or
cltd
push
push
nop
ja
and
ss
xchg
js
adc
sub
jns
cmp
leave
and
sub
mov
cmp
add
ss
pop
xor
in
cmpsb
cmp
test
std
sub
movsb
int
xchg
and
mov
adc
stc
mov
mov
ss
or
es
xchg
adc
jo
mov
iret
bound
jne
dec
lods
orb
xor
or
add
or
es
lods
add
scas
jmp
dec
cwtl
daa
mov
inc
jp
pop
cmp
enter
popf
mov
and
cwtl
jno
je
data16
addl
xchg
std
lods
ss
insb
jo
push
pop
iret
dec
push
jge,pt
arpl
addr16
test
mov
fidivrs
jp
imul
decl
ds
pop
mov
insb
jae
fstpl
mov
es
mov
inc
sbb
mov
jno
and
adc
jecxz
dec
aas
xor
stos
or
test
sub
adc
ss
cmp
rorb
pushf
pop
sub
repz
mov
sahf
cmp
sbb
adc
jae
push
jne
mov
mov
mov
out
and
and
out
jb
outsl
xchg
insb
mov
leave
sbb
xchg
loope
mov
popf
xor
out
mov
jno
sbbl
sbb
pop
lret
jmp
add
das
jp
jp
repnz
in
pop
mov
fnstenv
push
jo
es
insl
jg
repz
shll
lret
into
sub
mov
jle
lret
js
jbe
addb
xchg
xchg
aaa
jbe
inc
xor
jp
cmp
scas
push
add
out
fnstenv
rcr
jns
mov
mov
jno
fsubr
in
notl
xor
cmp
fdiv
icebp
jae
aam
fwait
je
loope
mov
push
enter
int3
xor
repnz
mov
sbb
mov
sbb
inc
or
pop
mov
int3
das
jecxz
adc
ret
ret
dec
lods
adc
mov
pop
cmp
and
inc
and
xor
ret
fstp
or
fsubl
popa
orl
pop
pusha
aaa
mov
into
pop
imul
add
inc
cmpsb
dec
mov
mov
xchg
xchg
jl
inc
lahf
or
mov
in
rcrb
add
adc
mov
mov
push
subl
pop
test
mov
jp
stos
adc
jg
jne
adc
sbb
or
aaa
jl
add
jae
movsb
adc
sbb
sahf
pop
ljmp
mov
or
call
test
jno
mov
insb
les
and
ffreep
push
jne
push
mov
mov
in
subl
out
in
addr16
dec
sub
sub
add
adc
ljmp
popa
push
dec
popa
mov
xchg
lahf
pop
dec
push
mov
jl
cmc
sarl
inc
and
insl
mov
mov
fidivrl
jl
nop
adc
ret
arpl
out
push
adc
stos
fiaddl
lea
aam
negl
repnz
sti
jle
rcrl
imul
inc
jmp
push
sbb
fisubrl
sub
mov
lahf
dec
sub
divl
push
adc
mov
mov
push
lret
mov
mov
jae
lock
inc
nop
scas
iret
ljmp
mov
sub
dec
mov
nop
fs
movsl
mov
adc
push
cmp
xor
mov
in
fnsave
mov
adcl
imul
push
and
adc
pop
cs
jmp
adc
inc
mov
mov
pop
lods
loop
int
cltd
mov
lds
icebp
and
out
movsb
pop
push
bound
add
stos
out
sbb
mov
mov
pop
sbb
mov
mov
adc
iret
mov
add
push
icebp
xchg
sub
stos
aam
dec
jnp
pop
mov
cwtl
scas
jo
mov
xlat
inc
lret
xchg
mov
mov
in
imul
add
cs
inc
add
dec
adc
add
push
pop
sbbb
fcomps
jo
jmp
scas
inc
orb
or
jae
add
dec
ret
outsb
inc
adc
jge
pop
xchg
sub
out
mov
es
dec
loopne
jns
in
push
cmp
push
sbb
cli
inc
sub
cmpsb
popa
push
dec
dec
xchg
cs
push
lods
and
inc
fidivrs
jbe
js
sbb
dec
jl
cmp
in
fsubp
pop
cmc
mov
stc
sbb
in
pop
sbb
sbb
mov
sti
jnp
or
mov
es
imul
adc
rclb
jns
test
fidivrs
pop
cmpsb
das
inc
in
push
sub
lock
push
sbb
sti
sub
dec
test
jnp
mov
mov
add
rcr
xchg
in
push
mov
pop
les
pop
dec
divl
fmuls
ja
shll
mov
pop
dec
nop
sub
xchg
jl
cmpsb
jb
dec
test
loop
mov
sbb
sub
dec
mov
ret
jae
scas
std
pop
lret
aas
mov
imul
aaa
pop
repnz
popa
xchg
leave
xchg
adc
lcall
add
test
cmpsb
mov
jbe
mov
jmp
xchg
xchg
arpl
out
or
push
and
mov
popa
sub
test
push
ret
les
add
test
dec
pop
lret
mov
aad
ret
add
imul
mov
scas
add
sub
repz
scas
and
jg,pn
movsl
push
pop
sbb
push
mov
outsb
push
lcall
xchg
xchg
leave
idivb
lret
ljmp
mov
pop
mov
mov
add
das
dec
stos
lcall
cmpsb
xor
pushf
stos
shl
jecxz
pop
sbb
lcall
pop
outsl
test
jge
fdivrs
ficomps
andb
dec
bound
mov
lods
sub
sbb
xor
outsb
das
inc
pop
stc
ror
cmc
sub
in
mov
push
xchg
shll
iret
scas
fsubrp
mov
push
add
cmp
mov
nop
jae
jmp
movsl
xchg
hlt
mov
push
imul
jmp
or
movsl
enter
aam
adc
push
popa
jg
sub
jle
fdivrl
mov
push
iret
xor
jne
cmpsb
movl
dec
xchg
mov
pop
out
inc
xchg
lods
icebp
jl
je
cmp
int3
pop
mov
scas
fsub
push
mov
scas
mov
add
sub
lahf
out
mov
fdivrs
arpl
xchg
pop
maxps
adc
pop
xchg
mov
pop
push
insl
test
push
cmp
cs
xchg
mov
sub
pop
push
push
aad
jae
loop
test
popa
push
jae
dec
xor
idivl
ds
sub
mov
in
dec
loopne
insl
mov
sbb
mov
fsubrl
aas
fwait
jge
insl
in
fcoms
xchg
cmpl
outsl
mov
into
rcrl
pop
fs
lcall
sahf
ret
sub
mov
and
ljmp
aas
inc
jecxz
mov
adc
push
mov
mov
jmp
dec
push
lea
fwait
xchg
sbb
setge
push
xor
sahf
jp
inc
lock
jbe
insl
mov
pop
nop
cmpb
add
xor
and
sahf
popa
xchg
cltd
inc
mov
stos
fldcw
push
notl
in
mov
push
sbb
sbb
cld
bound
out
push
mov
mov
pushf
flds
es
mov
xor
pop
test
cmp
ljmp
and
jg
insl
aas
jno
ficomps
and
stos
or
shlb
jae
lods
xorl
aaa
das
es
mov
pusha
mov
loop
sub
std
jne
in
push
xchg
jl
ja
jno
in
psubd
cmp
jl
mov
xor
jg
xchg
cmp
dec
cmpsl
icebp
sarb
and
gs
jge
ficomps
cmpsl
std
out
arpl
xchg
jo
cmp
subl
fcom
sub
jmp
xor
fwait
inc
arpl
adc
pushf
pop
in
jae
or
mov
shl
dec
mov
js
jmp
adc
test
ljmp
dec
filds
sbb
icebp
push
lret
lods
test
jo
stc
mov
test
adc
ds
push
aad
aaa
iret
sbbl
test
nop
cmp
pop
and
fcompl
pop
ds
pushf
fcmovnb
xchg
aam
or
xchg
sar
pop
jecxz
inc
jg
jp
xchg
push
lret
mov
inc
mov
das
adc
mov
imul
mov
sub
fwait
xlat
cmp
lods
out
popf
dec
mov
lret
cli
xor
add
mov
add
adc
xchg
repz
dec
cmp
push
jecxz
jl
and
aas
mov
mov
repz
jno
mov
and
lret
orl
sub
rorb
js
ret
imul
cmp
cs
adc
dec
jg
xchg
jmp
fucomi
pop
xchg
inc
cmc
aas
mov
leave
pop
cmpsl
push
inc
xlat
pop
orl
xorb
pop
adc
in
imul
or
jg
enter
in
inc
dec
or
sbb
xchg
ljmp
lods
mov
ljmp
lds
or
xlat
pop
sahf
sarl
push
sbb
sub
out
lds
sub
push
jne
les
jecxz
and
shrl
stc
sub
or
and
flds
dec
inc
mov
sbb
pop
dec
or
jle
mov
int3
pusha
mov
lods
push
inc
test
and
popa
push
rol
leave
negb
or
push
pop
jae
fwait
negb
addr16
xchg
mov
lcall
jp
jge
add
das
shrl
test
mov
xchg
adc
rcrl
xchg
add
push
sub
lods
mov
pop
push
and
jg
jne
arpl
or
movsl
stos
pushf
xchg
lock
inc
mov
aam
push
ret
inc
xchg
xchg
or
aad
lea
pop
repz
sbb
scas
loopne
cwtl
nop
sbb
movsl
mov
mov
mov
icebp
jge
push
adc
aaa
iret
aas
outsl
aaa
or
lods
sub
clc
cmovb
sbb
aad
test
int3
cltd
outsb
mov
jno
sub
adc
shr
dec
xorl
mov
mov
pop
call
xchg
rsm
push
sub
sbb
arpl
shrl
pop
fldl2e
inc
and
mov
lods
cmp
jae
divl
lcall
repz
xor
xchg
js
enter
cmp
sahf
filds
test
mov
cmc
and
fs
bound
push
aaa
xchg
aas
pusha
lock
pop
and
out
sub
cmpb
adcb
mov
pop
shrl
stos
push
popa
inc
jg
cmp
push
cmpsb
jo
gs
sbb
in
nop
fisubrl
push
sub
sti
gs
xlat
clc
push
dec
xor
mov
je
push
or
cltd
add
decb
jb
and
mov
bound
cltd
inc
loopne
out
insb
movsl
dec
xchg
jmp
out
fdivrp
inc
mov
push
ljmp
fcmovne
in
nop
sti
in
hlt
ret
gs
ror
dec
shrl
jle
xor
lods
mov
mov
mov
dec
jne
data16
dec
in
std
rcrl
ret
mov
add
cltd
leave
sbb
rcll
enter
imul
and
sbb
inc
mov
std
pop
inc
jmp
cmp
push
add
push
mov
fstl
pop
rcrl
sub
and
cs
cli
ds
mov
outsl
mov
pop
xchg
outsl
outsb
hlt
or
add
push
stos
dec
mov
adc
out
lahf
sub
mov
and
loopne
jp
out
xchg
fwait
pop
ss
add
push
mov
adc
sbb
xor
xchg
in
add
xchg
mov
inc
mov
sub
and
hlt
pop
inc
and
pop
xchg
cmp
add
xor
int
mov
ss
loopne
pop
in
aam
out
sbb
jg
inc
dec
add
arpl
inc
mul
xlat
js
xor
mov
and
shlb
sbb
cmp
jae
jo
int
jge
int3
cmp
in
push
sbbb
pusha
dec
add
push
mov
aad
xor
lahf
mov
fstpt
test
add
mov
dec
lock
out
pop
aaa
dec
cwtl
out
pop
mov
mov
xchg
repnz
fsubl
pop
push
push
mov
inc
push
mov
jo
lret
xchg
icebp
lea
xor
dec
subl
jae
rcll
push
sub
les
xor
xchg
jmp
decl
aad
pusha
imul
mov
lds
fldenv
sub
push
sbb
in
repz
in
in
std
mov
lea
outsl
popa
es
jbe
cmp
mov
push
in
icebp
mov
sub
push
decl
or
sub
xchg
dec
repz
xor
mov
sub
inc
and
int3
and
mov
in
cwtl
test
sub
jns
pop
jmp
fnstenv
mov
xorb
pop
imul
push
dec
mov
jbe
std
fisttpll
or
test
sub
mov
lock
xchg
add
xchg
jle
or
sbb
push
scas
adc
scas
sub
mov
rcll
lahf
shll
add
in
push
jo
push
jmp
cmp
vcvttsd2si
leave
stos
push
test
mov
jg
leave
jns
aam
push
stos
xchg
and
popa
in
xlat
cmc
mov
leave
push
push
in
sub
jbe
pop
clc
jge
dec
push
icebp
pop
cmpl
sbb
and
pop
cmp
lods
ror
and
btc
jecxz
leave
pop
in
sti
sub
int
fwait
stos
mov
xchg
add
aam
xchg
xlat
jp
cmp
add
insl
push
xor
push
xlat
fs
dec
pushf
icebp
lods
inc
sbb
in
jecxz
cmc
addl
xor
and
out
filds
das
jae
sbb
call
out
push
pop
dec
or
cmp
add
pop
cmp
mov
mov
add
and
test
sbb
fstpl
sahf
fstpt
xchg
data16
add
sub
outsb
sbb
push
mov
int3
jb
xlat
push
mov
cltd
inc
f2xm1
hlt
jl
jbe
test
neg
jmp
xor
bound
das
xchg
ljmp
idivl
jo
xchg
scas
xchg
sub
sub
scas
icebp
outsb
popf
mov
mov
push
mov
mov
cmpsb
out
dec
jb
mov
pop
sub
pop
sub
cmpb
aaa
icebp
inc
movsb
jp
inc
jb
imul
add
out
mov
adc
repnz
jbe
xor
add
xchg
or
leave
dec
jge
repz
shll
xchg
jbe
dec
jo
mov
out
fcoml
cmp
and
xchg
jg
inc
daa
xor
pop
repz
leave
bound
fs
cmp
or
inc
mov
lods
mov
iret
and
cli
dec
lret
sub
pop
aad
pop
mov
test
jo
xor
xchg
ljmp
je
sub
call
mov
mov
pop
insb
jae
jnp
xor
inc
cs
adcb
dec
push
mov
pop
push
adc
in
fwait
xor
sbb
add
xchg
cmp
add
mov
in
stc
pop
jle
xchg
cmpsb
jbe
lds
scas
jns
push
aam
push
lods
es
push
lea
add
stos
sub
mov
clc
fildll
sbb
cwtl
imul
outsl
or
sub
mov
sbb
sti
loope
scas
call
call
out
lret
nop
cld
rcll
sbb
rcrl
adc
dec
jecxz
aaa
mov
in
push
cmp
sbb
sub
adcl
jo
push
sbb
xchg
cwtl
mov
push
jecxz
cmpsl
add
dec
mov
fs
pop
push
fsubrs
sbb
loopne
or
loop
push
call
dec
and
lods
ret
mov
loope
lahf
fcoml
in
or
and
cmp
dec
mov
cld
push
lret
jns
mov
rcrl
decb
fwait
dec
cmp
jecxz
cmpsb
or
sub
cltd
ja
add
rclb
gs
lea
xchg
inc
leave
stos
fbstp
sbb
and
fmull
xorl
inc
jno
xchg
sbb
ficomps
mov
stc
mov
jne
mov
jl
les
pop
lods
ja
push
push
cmp
xor
cmp
and
cli
addr16
xchg
cld
xchg
cltd
mov
loopne
mov
push
lds
mov
inc
mov
daa
cmpsl
fmull
enter
rcll
int3
dec
mov
enter
dec
push
mov
push
jne
dec
xchg
aam
mov
jnp
adc
mov
and
imul
cmp
iret
mov
mov
clc
xchg
mov
xor
pop
sub
cmc
test
dec
pop
or
cli
in
imul
outsl
add
int3
shlb
das
ret
pop
dec
sbb
repz
shll
jne
mov
pop
sahf
jne
sbb
loope
sub
fs
mov
dec
mov
and
pusha
cmpb
push
inc
inc
inc
inc
cmp
xor
xor
xchg
shrb
sbb
inc
cmpsb
mov
jecxz
sahf
xchg
pop
cmp
pop
shlb
sbb
cmpl
mov
dec
or
fldcw
add
lock
insl
test
mov
popa
cmp
int3
hlt
fisttpl
pop
roll
pushf
xorb
clc
loop
add
scas
cmp
movsl
sti
popf
mov
sub
loopne
jp
sbb
fisubrs
mov
cli
aas
mov
orb
mov
push
pop
rcrl
jne
out
mov
shrb
pop
sbb
mov
out
mov
icebp
push
jae
sbbl
dec
fnstcw
sahf
push
sti
add
dec
fcom
pop
cmp
lahf
jmp
shr
sub
shll
inc
fs
inc
cmpl
sub
stos
in
jp
jmp
stc
pop
push
mov
divl
add
dec
icebp
inc
xor
sub
ja
cmp
fadds
mov
pop
mov
and
jg
inc
dec
dec
jae
sub
or
push
mov
nop
sub
lods
jmp
out
jbe
scas
in
push
add
push
mov
inc
cmp
test
cmpsb
flds
fisubl
out
jge
sub
dec
or
dec
and
lods
or
push
test
dec
clc
cmp
mov
push
out
mov
mov
out
jno
mov
jl
jo
cmp
jg
dec
in
imul
mov
sahf
cmpsl
arpl
ljmp
pop
cltd
outsb
aas
inc
pop
imul
lret
js
data16
xchg
cmp
add
sub
int3
popf
sar
xchg
and
adc
movsb
daa
pushf
dec
xchg
jecxz
sbb
cwtl
outsl
call
xchg
int3
fs
sub
inc
mov
fwait
jp
mov
jmp
mov
dec
fcompl
loope
sub
mov
inc
cmp
test
dec
mov
popl
repz
daa
jle
sub
mov
in
popa
pusha
dec
sbb
icebp
pop
inc
mov
cvttps2pi
push
push
testb
sub
daa
jns
add
xor
aad
inc
idivl
push
push
scas
sub
dec
xchg
dec
fwait
jnp
mov
add
popa
test
pop
cmp
add
mov
fisubs
sub
push
adc
iret
or
fildll
xor
or
dec
sti
push
imul
test
add
das
hlt
shlb
loopne
push
cmp
enter
mov
loopne
nop
stc
test
push
les
mov
sub
xchg
mulb
cs
into
out
xchg
sub
test
fldcw
xor
adc
daa
cmc
add
out
imul
iret
dec
mov
int3
shlb
sub
dec
lods
fmull
dec
add
inc
incl
scas
test
iret
pop
and
jle
sbb
je
sub
lret
fcos
pop
add
jbe
lret
cmp
out
bound
mov
or
add
lods
ljmp
cmp
arpl
rcrb
inc
inc
mov
jmp
pop
and
pusha
mov
xor
mov
mov
lds
pop
fists
cli
aad
inc
and
and
mov
inc
lds
lret
out
inc
mov
gs
and
pop
daa
outsb
jns
mov
div
xchg
fs
push
mov
pusha
data16
int
mov
sub
dec
adc
scas
insl
roll
icebp
xchg
mov
and
pushf
mov
sahf
sub
shl
scas
sar
in
xor
cmc
imul
cmc
aas
pop
sbb
lcall
add
fists
mov
cs
test
sbb
adc
adc
shr
addl
in
push
pop
mov
push
nop
ljmp
push
mov
fsubl
xchg
inc
ret
xor
or
cmp
cmpsl
sub
test
test
fdivrs
addr16
mov
adc
fldcw
inc
fldt
push
mov
inc
and
cmpsl
imul
lret
insb
jbe
test
cmpsl
mov
cld
es
rolb
scas
ds
mov
dec
pop
vcvtss2si
pop
test
hlt
mov
mov
lock
lock
pushl
stc
jmp
iret
gs
mov
pop
xchg
cmp
mov
mov
cmpsl
or
or
in
notl
add
imul
pop
xor
cmpsb
add
mov
stos
sti
or
out
movsl
lret
add
push
push
sti
bound
ljmp
adc
sahf
inc
cli
push
xlat
adc
orl
in
dec
movb
push
shrb
pop
iret
pop
sub
je
xchg
push
in
xchg
mov
ret
jecxz
ret
dec
mov
jg
ret
inc
mov
pop
jns
imul
in
aam
leave
add
sahf
gs
push
sub
xor
mov
loopne
shrb
jmp
outsl
outsl
jb
jns
or
outsb
push
xor
leave
jbe
paddsw
inc
xlat
push
add
addl
mov
imull
dec
fnstenv
repnz
and
sbb
mov
flds
mov
addr16
aam
out
mov
aaa
sub
add
push
add
aam
adcb
icebp
or
push
shlb
lea
sub
aam
out
push
pop
xor
icebp
mov
out
incl
or
add
imul
inc
mov
test
ljmp
mov
out
std
xor
lds
test
into
into
cs
nop
adc
rolb
orb
leave
pusha
shlb
dec
outsb
shll
stos
in
outsb
stos
andb
xor
xor
pslld
std
inc
mov
fidivs
je
sub
xor
or
jp
aas
fdivr
add
out
andb
and
add
jbe
ror
adc
repnz
xchg
mov
adc
adc
leave
adc
lods
loop
std
out
jno
jge
dec
push
sbb
jo
jo
add
xchg
loopne
pop
mov
add
mov
fsubl
push
or
and
mov
mov
lea
and
sbb
mov
mov
int3
mov
push
shrl
cmp
xchg
rcr
add
pop
test
js
out
std
bound
xor
and
outsl
shlb
fidivrs
loope,pn
push
fadds
or
rol
inc
test
mov
xchg
xor
xor
sbb
and
and
mov
ja
pusha
sbb
mov
cs
lods
xchg
push
inc
dec
inc
cmp
sbb
pop
cmp
jl
cmpl
xchg
lea
movsl
or
jb
ja
ss
std
sub
sbb
pop
lahf
or
outsl
dec
push
les
orb
pop
repnz
fistpll
dec
out
xlat
lret
add
aas
js
leave
outsb
push
mov
divl
lods
ret
ja
fnsave
aaa
fwait
movsl
pop
ljmp
push
adc
cmp
pop
inc
sbb
aaa
cltd
xor
mov
dec
loop
out
pop
sarl
push
sbb
and
loop
fisttpll
xchg
mov
fwait
sarl
pop
outsl
push
movsb
shlb
xlat
imull
es
iret
adc
cmc
mov
outsl
push
pushf
stc
and
sbb
inc
mov
sbbb
cltd
xchg
push
jp
sti
sub
xor
lret
push
xor
or
cltd
or
adc
mov
mov
pushf
sbb
ljmp
call
xor
jl
fildll
sbb
insl
or
pushf
iret
mov
pop
add
test
dec
or
push
call
jnp
cmpsl
mov
xchg
and
mov
or
je
inc
or
ficoms
fsubrl
fnstenv
fsubp
jp
xchg
mov
mov
stos
mov
push
jge
in
jo
dec
fsubs
int
fadd
imul
movsb
dec
cltd
das
fisttpll
adc
xchg
mov
inc
inc
mov
xchg
dec
int
imul
inc
sub
mov
add
dec
cld
inc
and
sar
popa
push
mov
lock
in
or
push
push
push
and
ja
jecxz
aas
test
push
push
dec
pop
pop
mov
mov
jnp
pop
outsl
jb
cmp
mov
and
inc
push
pushl
lds
sub
test
xorb
xor
lahf
stc
fwait
xchg
and
fcmovnb
cmp
mov
pop
and
pop
xchg
sbb
orb
int
dec
arpl
jmp
je
or
jno
or
xor
mov
aam
inc
roll
adc
dec
mov
sbb
xchg
fsubrs
mov
inc
fadds
jb
xor
movsl
jge
scas
aam
cld
loop
adc
sub
add
dec
jle
insl
xor
mov
mov
xor
in
xchg
ja
stos
dec
push
xchg
les
jnp
repz
jbe
aad
jecxz
mov
pop
xlat
xchg
inc
mov
enter
fcoms
and
mull
xor
fidivl
xor
stos
out
out
fiadds
inc
test
mov
shll
subl
dec
nop
scas
call
inc
ret
jbe
cmp
dec
outsl
cmp
push
sbb
cs
mov
scas
inc
sub
pop
xor
push
xor
push
adc
sbb
loopne
xor
cmp
fwait
rorb
lahf
xor
rcll
fs
orb
inc
jne
sub
lret
fsubl
push
xor
andl
loopne
std
incb
sub
leave
xchg
das
mov
es
lods
out
pop
push
shll
fdivl
insb
int
push
xchg
outsl
imul
dec
enter
arpl
shrl
sbb
aam
pusha
hlt
xor
jne
outsb
xchg
fistps
mov
nop
mov
mov
sub
stos
aaa
out
inc
sbb
push
imul
xor
push
popa
cmp
aas
rcr
scas
add
xor
sti
aad
into
add
cmpsl
xchg
xlat
inc
jae
mov
adc
sub
out
clc
mov
mov
dec
mov
sub
imul
lds
into
pop
xchg
mov
pop
and
inc
repnz
mov
mov
jns
data16
ret
fs
jp
icebp
out
jno
out
sub
adc
cmc
mov
lods
fistpll
dec
sbb
fbstp
mov
push
lret
or
pop
js
mov
sbb
cmp
push
jl
mov
xchg
lcall
jnp
xor
mov
or
adc
cmp
jne
mov
mov
lods
in
aam
jb
fdivrs
ficomps
int3
mov
dec
movsb
inc
push
pop
testl
xchg
lcall
or
xchg
imul
jmp
jo
mov
mov
stc
cltd
out
outsb
popa
stc
imul
adc
sub
push
mov
sbb
pop
mov
rep
fs
fistps
iret
push
mov
pushf
std
sub
inc
inc
ja
subb
shrl
push
or
rcl
test
xchg
jns
fxch
sub
sahf
add
lret
sbb
or
dec
pop
clc
xchg
xchg
cld
mov
dec
scas
shll
xor
push
sub
jo
fxch
std
xchg
jne
mov
adc
lahf
dec
jmp
mov
and
jne
imul
pop
xchg
cmp
out
mov
lods
xchg
push
shl
cmpsl
push
das
fsubs
push
mov
fwait
outsl
mov
pushf
fs
sub
cs
push
mov
inc
pushf
dec
mov
shlb
movsb
fnstenv
loop
cmc
mov
popf
mov
hlt
mov
idivl
pop
fistl
pop
push
mov
mov
call
sub
test
inc
or
sbb
sti
fidivl
xor
mov
ja
sbb
lahf
lret
xor
xchg
mov
pop
xchg
test
push
mov
mov
jmp
inc
ret
pop
push
pop
jbe
lea
sub
shlb
xor
test
pop
aad
iret
cli
inc
xchg
jge
push
pop
arpl
mov
jl
mov
lods
cld
stos
or
push
pop
adc
xchg
adc
pop
fsubs
xor
es
push
nop
adc
add
bound
mov
in
mov
xchg
mov
cld
pushf
or
in
or
data16
std
shrl
icebp
sbb
imul
mov
sbb
mov
aaa
rorl
out
cli
inc
pop
into
les
inc
inc
xchg
shll
out
add
xlat
cmp
xchg
fs
dec
pop
adc
ret
mov
adc
cs
adc
arpl
repz
pop
jge
lret
sub
rolb
push
adc
fwait
jle
test
fxch
cwtl
insl
xor
mov
inc
lock
hlt
inc
leave
stos
rcll
sub
jecxz
inc
jmp
push
aam
imul
orb
pop
inc
or
sbb
rol
popa
jmp
jp
popa
mov
inc
sub
cmc
mov
popf
jno
fildll
cmc
shrb
pop
mov
add
mov
inc
push
cmp
mov
shrl
pusha
fidivrs
ret
push
xchg
mov
lahf
jge
push
sub
dec
out
sbb
add
outsb
cmc
ljmp
jno
add
push
xor
dec
inc
int3
cli
std
fwait
push
js
or
rcl
mov
jb
pop
ja
test
dec
ss
adc
lock
data16
jp
rolb
jecxz
in
sbb
ljmp
test
aad
dec
jne,pn
xchg
cmp
imul
popf
arpl
dec
shl
xor
pop
cmp
cmp
dec
cltd
aad
sti
out
inc
push
lock
inc
jb
movsl
inc
out
jmp
inc
xor
lds
sbb
jno
mov
sbb
cwtl
jno
xor
test
jnp
mov
mov
insl
dec
int
jb
pusha
stos
adc
or
jp
pushf
out
jg
xchg
or
std
fwait
rcll
pop
out
sbb
dec
jp
ret
push
ret
push
test
sahf
rcrb
xchg
jno
aaa
dec
lret
push
jmp
scas
fs
push
and
pop
inc
inc
subb
jg
xchg
stos
das
daa
mull
cmp
mov
cwtl
cwtl
cmp
inc
mov
lods
mov
adc
xor
sbb
in
cmp
adcb
bound
lcall
sub
mov
sub
adc
push
or
xchg
lcall
push
test
or
pop
xchg
sbb
or
imul
or
xchg
mov
push
arpl
dec
lcall
sarl
js
cld
push
ret
mov
sbb
int3
sbb
cmp
dec
ljmp
cltd
fiadds
ljmp
lret
mov
out
push
sub
fisubs
imul
lods
dec
pop
cmp
sbb
jg
movsl
adc
movsl
push
mov
pop
adc
adc
dec
fildl
mov
dec
push
mov
test
push
popa
lret
lcall
data16
pop
xchg
shll
negb
mov
push
psubb
je
cmp
mov
cld
mov
dec
pop
dec
ret
jnp
scas
lds
mov
add
ffreep
jge
stos
mov
jge
pusha
lea
lcall
icebp
push
movsl
mov
out
xlat
insb
inc
movsl
call
lock
and
mov
sbb
sub
and
jecxz
lahf
mov
sbb
fwait
mov
fnsetpm(287
sti
lcall
lcall
cs
pop
push
lea
out
fsubs
jmp
adc
incb
es
and
xchg
int3
test
mov
push
dec
aam
cmp
dec
jae
mov
repnz
jmp
lods
mov
int
xor
adc
sbb
add
aas
test
aad
cmc
xor
and
lahf
sbb
push
mov
fs
shr
nop
or
insl
in
mov
ds
outsb
in
push
xbegin
iret
ja
or
lods
cwtl
es
std
adc
jo
or
or
mov
xchg
mov
jp
pop
pop
hlt
mov
mov
mov
and
fildll
dec
in
repz
push
xlat
stc
push
and
add
xchg
fsts
dec
in
lret
dec
push
mov
cmp
loop,pt
pop
jne
push
push
fndisi(8087
push
testb
mov
jae
push
in
lret
inc
inc
sbbb
div
add
out
loop
stc
cmp
repnz
jmp
xchg
mov
in
xor
push
cld
push
loope
inc
shl
lock
mov
dec
xor
dec
dec
pushf
out
xchg
push
test
fnstenv
cmpsl
or
jp
sbb
dec
fidivrs
adc
inc
inc
fldenv
adc
jmp
test
xchg
ret
inc
sbb
mov
adcl
pop
in
testb
shrb
ljmp
xor
mov
mov
call
dec
subb
mov
in
jno
test
mov
rolb
stos
pop
js
adc
int
outsb
out
or
ret
repnz
jae
pop
or
mov
or
sub
insl
sar
iret
jnp
insl
fdivrl
cmpsl
push
ja
popf
andb
test
imul
stc
inc
mov
mov
jns
mov
addb
and
subb
push
loopne
jle
add
mov
mov
orl
jmp
pop
mov
sarl
popf
mov
mov
push
xchg
adc
fidivrs
dec
push
pop
lods
daa
and
and
iret
idivb
inc
sub
in
lret
jge
fistps
pop
in
xchg
xchg
stos
outsl
mov
dec
loopne
add
add
cmc
inc
sbb
and
xchg
test
mov
adc
fildll
enter
mov
cmpsl
sub
jbe
xchg
xchg
xchg
and
xchg
je
test
push
daa
inc
fwait
sti
xchg
xlat
push
add
mov
mov
movsb
or
and
ret
cmp
mov
push
std
adc
fwait
mov
daa
mov
hlt
jns
add
rorl
xchg
add
leave
je
pop
lret
push
cmp
fs
mov
adc
push
rcr
mov
lods
cmp
and
mov
in
lods
cmp
push
or
jns
shll
xchg
in
xchg
push
add
adc
out
cmp
lds
into
faddl
add
or
lock
xor
cli
cmc
out
je
outsb
fistps
jle
mov
push
rclb
popa
adc
sbb
adc
lret
mov
or
xor
mov
add
test
imul
enter
sti
lahf
inc
xor
lret
jg
mov
mov
mov
jno
mov
lret
mov
fldl
adc
adc
fdivrs
sub
int3
jo
push
jg
push
nop
cs
mov
jne
popf
ds
jg
cmp
dec
add
ljmp
inc
pop
cmp
inc
jl
lcall
push
daa
outsl
les
xor
in
and
push
or
xchg
cmpsb
test
xchg
or
rolw
lret
mov
cwtl
push
in
add
xor
xchg
mov
aad
mov
fmull
mov
sub
shlb
je
jb
pop
sbb
stos
sbb
repz
push
andb
inc
pop
pop
dec
jne
cs
repz
sbbl
ret
roll
adc
sbb
xchg
es
orl
cmp
ljmp
adc
mov
fistpll
lret
ret
clc
std
and
movsl
hlt
mov
ja
adc
mov
sbb
inc
mov
and
lods
xor
mov
lds
stc
or
cmp
sbb
cmpsb
in
fidivl
pop
mov
push
pop
mov
jo
xchg
xchg
int3
pmulhw
in
push
gs
sbb
pop
out
sbb
fistpll
lock
jno
xchg
adc
aam
lock
ds
shr
cmp
movb
fildll
shl
sbb
inc
fwait
in
mov
push
mov
in
rorb
sub
enter
cmp
mov
hlt
aad
int
pop
xchg
stc
jp
lahf
cmp
sbb
mov
jmp
or
cltd
cli
pop
out
rcrl
jae
add
jmp
clc
adc
adc
sahf
fsubrl
xor
movl
pusha
cmp
or
jle
adc
notb
mov
stos
sub
mov
mov
mov
lahf
pop
sbb
mov
inc
aaa
shr
es
scas
scas
xor
in
sub
icebp
mov
sub
lds
outsl
and
pop
mov
dec
add
xor
push
jne
sbb
pop
or
push
lcall
in
sub
jl
mov
inc
ljmp
mov
inc
je
jnp
push
aad
push
add
in
pop
test
popa
xchg
mov
jmp
stos
fbstp
jne
sti
cmpsl
pop
push
add
and
ret
fstl
ljmp
push
aam
sbb
bound
shll
xor
jp
out
aaa
outsb
xor
xchg
rcll
hlt
repnz
mov
add
ja
pop
outsl
xor
xor
dec
sbb
pop
ja
test
dec
inc
cmp
cmp
loopne
push
mov
jne
xchg
push
push
mov
pop
cmpsb
jmp
xchg
movsb
jne
push
pusha
aas
je
js
frstor
dec
sub
mov
jl
mov
jne
jp
pop
mov
mov
test
test
and
jle
dec
test
dec
push
lcall
add
sub
and
xchg
sub
iret
xor
adc
jl
or
adc
lret
push
pusha
push
lods
cwtl
es
xchg
je
lret
fisubs
mov
pop
add
cs
dec
pop
sbb
inc
enter
xor
jbe
shrl
fisubrs
test
in
ret
jno
adc
cld
les
dec
sahf
jmp
add
xor
sub
push
mov
outsl
iret
add
leave
ja
dec
inc
aad
icebp
adc
xlat
sub
das
xchg
adc
or
and
push
add
push
inc
inc
pop
dec
xchg
push
inc
movsl
neg
jl
push
shlb
sub
sar
mov
and
xor
mov
or
jns
popa
mov
mov
and
cmc
mov
mov
xchg
loop
pop
inc
pop
pop
fbstp
inc
push
add
call
xor
add
jae
mov
mov
test
lock
cmc
pop
fnsave
xchg
pop
adc
movsl
sbb
int
insl
rorb
out
mov
mov
mov
dec
xor
mov
mov
iret
inc
push
stos
es
or
int3
pop
lds
jg
aaa
nop
inc
add
stos
not
fstl
push
add
adc
adc
iret
enter
pop
pop
push
cltd
sbb
cmpsb
pop
shrl
into
push
sbb
ficoms
mov
inc
xorb
mov
stos
int
pop
int
pushf
lock
pop
push
cmp
lea
pop
out
das
test
mov
leave
mov
jne
push
popa
xchg
push
push
fisttpll
adc
add
adc
add
dec
arpl
push
and
xchg
movsl
or
pop
jmp
xor
mov
lock
lret
mov
sbbb
rol
and
je
sbb
aaa
add
rorb
clc
cmp
xor
pop
aam
movsb
push
testb
xor
xchg
pop
add
and
ret
sbb
xchg
fidivrs
shl
sbb
rcll
add
movsb
and
jns
dec
lret
fadd
mov
lods
push
insb
ja
outsl
lea
cltd
shll
push
popf
or
and
xor
mov
mov
cmp
pushf
mov
fcoml
inc
das
sub
jge
sbb
add
mov
jmp
leave
insb
cmpsl
rcll
int3
inc
scas
dec
rcl
adc
out
pop
cwtl
leave
pmovmskb
out
insb
jl
mov
imul
cmp
xchg
xchg
inc
push
add
das
cmp
jno
xchg
adc
les
inc
shr
mov
test
push
mov
pop
inc
nop
inc
dec
mov
ljmp
adc
cmp
int
xchg
add
mov
sti
mov
arpl
sarl
mov
in
cli
pop
sub
cltd
daa
cmp
test
lock
mov
movsl
push
mov
stc
xchg
inc
push
fwait
dec
test
jmp
fists
mov
adc
jo
fnstsw
jmp
inc
pop
inc
mov
adc
mov
push
xchg
mov
mov
sbb
iret
mov
mov
jle
and
xor
mull
out
lock
subb
orb
enter
popf
mov
lds
scas
jp
lds
jge
cmc
fcomps
dec
and
fnstcw
into
dec
aad
movsb
dec
pop
scas
sarl
test
and
addr16
imul
jge
sbb
or
shrl
stos
adc
pop
movsb
dec
roll
cli
sbbb
push
mov
es
jl
stos
adc
or
nop
lret
mov
mov
in
das
push
je
outsb
pop
stc
imul
inc
sbb
out
cld
push
mov
fistpll
cmp
mov
mov
sub
inc
xchg
jp
jp
fwait
and
gs
call
outsl
adc
inc
in
pop
jecxz
xchg
out
mov
mov
pop
mov
and
test
fldcw
jae
cmp
in
out
je
jge
push
pop
fisttpl
xchg
xlat
and
clc
es
adc
mov
mov
jno
hlt
and
pop
dec
pop
push
pop
mov
xor
push
pop
lea
mov
rorl
push
dec
and
pop
rolb
into
movsl
mov
aad
test
push
aam
mov
xlat
push
cmp
test
inc
jne
mov
mov
and
jo
loope
insb
daa
in
repnz
mov
jg
pop
aam
arpl
into
pop
pop
ret
pop
cli
push
xchg
mov
cmp
dec
push
cmpsl
xchg
mov
sub
xor
leave
pusha
mov
or
push
outsl
xchg
pusha
sub
sbb
iret
push
xchg
sbb
inc
das
inc
pop
mov
dec
pusha
jmp
jmp
das
mov
test
cli
jge
mov
or
xor
jl
mull
or
hlt
push
mov
sub
mov
mov
and
xor
faddp
xor
mov
xor
adc
sbb
mov
lods
mov
mov
outsl
and
test
in
int3
aam
or
xchg
or
sbb
je
mov
mov
pop
jmp
or
xchg
sub
ja
push
push
mov
loop
clc
adc
daa
lea
popa
push
pop
push
add
in
and
insb
lahf
mov
mov
jle
jnp
sahf
sarb
jp
hlt
add
push
jno
jmp
inc
xor
pop
jns
fldcw
mov
je
daa
xchg
movsl
xor
into
jns
xchg
xchg
push
outsb
or
push
mov
jle
and
dec
mov
xor
loopne
cmp
mulb
mov
iret
mov
mov
add
jmp
addl
ss
xchg
xchg
insb
pusha
mov
in
jge
sbb
mov
aam
sbb
jmp
sbb
ljmp
je
jnp
adc
lds
cmp
mov
inc
icebp
push
lock
pop
jo
push
xor
fld
cwtl
aam
arpl
popa
dec
nop
insb
clc
imul
pop
gs
sub
cmp
sub
jecxz
or
rorl
pop
jp
mov
add
shlb
dec
ja
dec
cld
in
bswap
inc
push
cmp
aad
fcmovbe
js
push
jne
jne
inc
sbb
movsl
mov
inc
lods
out
mov
mov
cs
je
aad
adc
out
jnp
xchg
or
imul
push
rolb
and
imul
in
sbb
pop
mov
push
cmc
and
pop
jle
shlb
cmc
add
mull
mov
and
cmp
push
xor
popa
mov
sub
xor
mov
dec
scas
aam
cmp
insl
daa
lret
or
cmp
add
xchg
mov
xor
xchg
mov
stos
out
sub
stos
cltd
mov
notb
mov
push
lds
dec
in
xchg
xor
or
jle
popf
and
les
jns
sbb
mov
insl
jg
in
cltd
out
sbb
sub
dec
mov
sub
pop
insb
adc
cltd
mov
inc
inc
sbb
pop
jle
jns
mov
push
xorl
fs
jae
adc
decl
fidivrs
push
insb
nop
int3
xor
mov
ja
cmp
cs
pop
fidivs
in
and
test
movsb
or
jb
xor
pop
addb
int
ficoms
bound
mov
sub
sub
shr
movsl
dec
push
push
add
add
inc
jb
sbb
add
xorb
clc
mov
fidivrs
aaa
push
sub
fisubrs
xor
inc
inc
loope
into
pop
nop
leave
cld
cmp
lods
push
test
xchg
fs
push
fs
outsb
fidivrl
ss
aas
cmp
lea
das
sahf
testb
fistl
push
dec
mov
test
add
add
jg
mov
mov
outsl
cltd
in
fnsave
lcall
mov
std
pop
mov
xor
das
mov
fdivs
jp
cs
cltd
dec
sti
ss
rorb
mov
sbb
fisttps
stos
jge
xor
in
gs
ret
les
mov
in
pop
cli
xchg
add
loopne,pn
test
iret
lcall
ss
je
mov
adc
aas
movsl
loopne
ja
sub
pop
mov
test
pop
stc
jge
adc
clc
mov
inc
mov
cmpsl
mov
out
test
mov
push
xchg
imul
daa
inc
xor
jg
enter
xor
aad
adc
push
push
ret
cmp
repz
subl
movsb
pop
outsb
or
subl
jb
push
xor
in
pushf
sbb
fsubr
push
cmp
mov
popf
inc
hlt
icebp
cmp
mov
jns
inc
incl
and
loope
inc
popa
xchg
and
push
js
inc
mov
cmpb
sub
inc
inc
clc
dec
pop
popa
into
sbb
call
fidivl
mov
and
ret
aaa
mov
sub
out
cmpsl
sahf
push
or
sub
jl
jae
and
mov
jb
shll
mov
ja
movsl
adc
xchg
sub
nop
mov
out
shlb
and
call
mov
out
es
scas
rcrb
and
xor
and
add
pop
mov
push
push
push
sub
loop
insl
dec
xor
test
mov
jno
sbb
into
add
dec
mov
mov
and
inc
inc
jbe
xchg
lods
xchg
dec
shrl
dec
adc
scas
jb
dec
xchg
add
pop
and
aaa
lock
filds
jmp
hlt
pop
jns
mov
int
push
rolb
push
dec
insb
or
mov
xchg
mov
add
jecxz
push
sbb
xor
jle
repz
xor
xor
jb
mulps
pop
inc
aam
aam
mov
lods
add
repnz
loopne
inc
xor
enter
cmp
mov
jbe
xchg
movsb
xor
loop
stos
outsb
rorb
pop
dec
xchg
dec
data16
imul
stos
sub
mov
sub
popf
aas
jb
clc
dec
jmp
jmp
jmp
add
jae
sbb
in
sbb
in
adc
add
cmpsb
fldenv
push
lods
lods
shrb
enter
sub
mov
rcrb
gs
adc
rcr
jecxz
and
icebp
es
gs
and
outsb
cwtl
push
push
leave
jmp
jb
in
xor
rcr
xor
adc
inc
xchg
sub
ret
dec
sub
sub
pop
add
repz
and
pop
mov
xchg
in
icebp
xchg
adc
jnp
push
mov
cmpsl
flds
jnp
and
outsl
js
push
popf
data16
gs
es
xchg
rcll
into
push
pop
fstpt
std
shr
and
enter
inc
stos
scas
ljmp
push
test
sbb
mov
mov
mov
pop
pop
add
into
daa
dec
enter
and
push
xor
xor
cmp
je
add
orl
das
popa
out
fsts
xor
cmpsl
push
and
mov
inc
mov
clc
mov
push
push
idivl
inc
ret
stos
mov
test
jecxz
shll
ss
push
in
cmc
dec
xor
sbb
jmp
push
aam
dec
pop
cwtl
pop
fisttps
lea
mov
outsb
aam
aad
or
xor
shlb
out
mov
xchg
rolb
enter
cmc
push
shrb
div
sarl
xchg
push
insl
mov
loopne
xchg
adc
fs
cmp
xchg
jnp
cld
arpl
xor
push
movsl
popf
ficoms
ja
lcall
rcll
andl
sbb
das
test
aam
jne
mov
jae
sub
mov
dec
pop
repz
test
cltd
fbstp
js
lahf
fistps
scas
or
mov
into
sbb
jo
hlt
push
dec
fs
nop
js
dec
add
scas
mov
aam
push
mov
and
arpl
and
fimuls
adc
inc
mov
inc
sub
inc
popa
std
or
int3
cmc
jo
outsl
sbb
fadd
sub
push
inc
xchg
insb
mov
dec
es
or
in
in
mov
aad
xor
popa
pop
adc
jecxz
loope
pop
xchg
stos
mov
jge
scas
ret
inc
shl
jo
sar
movsl
sbb
mov
js
punpckhwd
xor
test
sub
aas
inc
js
std
jns
or
mov
mov
lahf
jb
push
lret
test
xchg
shrb
mov
test
mov
inc
test
jp
cmpsb
ljmp
dec
pop
mov
shll
jbe
mov
fisttpl
mov
je
in
lret
jno
push
push
push
jns
xor
cmp
pushf
loope
jns
out
loope
pushf
pop
movsb
icebp
sub
cmpsl
inc
loop
or
cmp
es
and
fxch
test
adcl
sub
lods
test
orl
bound
push
nop
popf
out
mov
imul
mov
mov
loop
js
mov
xchg
aaa
cmp
fwait
bound
adc
cmp
sahf
mov
and
in
jp
jno
mov
sahf
cwtl
rol
lods
xlat
cmp
xor
mov
gs
lahf
adc
lods
dec
xor
jge
dec
and
cmpsl
sub
cmpsl
add
enter
mov
pop
sbb
call
lea
lcall
cmp
cmpsl
cmp
insb
aam
adcb
sbb
sub
lahf
dec
rclb
jbe
shll
out
popf
fcomi
mov
mov
shlb
push
jbe
int
mov
arpl
sbb
jg
fdiv
ss
pop
cltd
fisubs
xchg
and
loopne
test
int
jmp
in
push
pop
dec
mov
shll
aam
mov
mov
js
inc
ljmp
cmp
stos
fsubrl
ds
mov
jb
mov
fisubl
and
inc
xor
shll
pop
xor
ljmp
push
xor
cltd
sbb
xchg
add
mov
aas
and
in
xor
movsb
loope
xchg
mov
aaa
push
mov
cmp
pusha
sub
lea
mov
out
xchg
and
add
jne
dec
jne
cmc
mov
cmpl
sub
in
mov
xorl
inc
test
inc
adc
stos
pop
outsl
lcall
xlat
fadd
pushf
pushf
icebp
test
pop
or
cmp
dec
imul
das
inc
mov
cltd
add
repz
mov
mov
pop
les
mov
adc
test
mov
pop
ficoms
inc
xchg
pop
hlt
mov
mov
movsl
jne
scas
cmpb
adc
pop
loopne
cmp
aas
stc
aas
outsl
or
xor
pop
out
sarl
sahf
push
mov
iret
xchg
cvttps2pi
push
into
dec
incb
loope
add
adc
or
out
lock
or
rcl
loope
inc
repz
roll
sub
in
mov
in
inc
inc
pop
pushl
filds
mov
outsb
xchg
mov
and
test
xor
sarb
ret
mov
sbb
cwtl
mov
stos
pop
cwtl
inc
sub
daa
sub
bound
sub
xchg
xchg
test
cmovs
xchg
xchg
inc
xchg
pop
mov
pushf
sub
xchg
and
pop
ds
xchg
or
pop
lret
call
inc
or
test
sub
fisttpl
fdivr
in
cmpsl
cltd
xchg
shll
sub
push
xchg
jo
sbb
xor
insl
cmpsl
push
cwtl
leave
inc
stos
movsb
popf
sub
jb
sub
repnz
mov
and
stc
or
xor
enter
std
lea
shll
push
xchg
push
and
push
arpl
popa
pop
out
xchg
push
sub
shl
inc
fisubl
or
jmp
push
sti
insb
and
sub
andb
ss
xor
push
cltd
loopne
call
pushf
dec
inc
scas
cmpsb
or
and
jae
jle
mov
jbe
syscall
jns
and
lds
sub
imul
fstpt
inc
repnz
mov
sbb
popa
cld
sbb
push
arpl
movsl
inc
jne
out
sahf
dec
sub
mov
jo
lods
rclb
sbb
sbb
out
jo
mov
in
popa
out
xlat
fs
mov
ljmp
out
imul
imul
dec
pop
pop
mov
sub
test
dec
mov
daa
pop
shll
fldenv
cmp
movsl
push
aam
jne
fnsave
fiaddl
outsb
or
push
pop
or
push
mov
mov
cmp
repz
cmp
mov
data16
mov
fiaddl
sti
sub
cltd
lods
inc
bound
inc
addb
fs
mull
call
fsubp
mov
jnp
int
lods
cmp
sbb
pop
ss
or
push
mov
iret
cltd
movsl
inc
fwait
mov
shl
jg
xorb
cmpsb
mov
mov
in
gs
lds
dec
ja
xchg
mov
add
push
inc
mov
stc
xlat
scas
lahf
push
daa
outsl
repnz
hlt
sub
notl
inc
mov
adc
sub
dec
xor
jle
icebp
stc
add
repnz
leave
push
or
mov
movsb
sub
in
push
cmc
stos
mov
mov
push
mov
movsb
je
test
sub
or
cmp
sbb
inc
jbe
mov
xorb
ret
xchg
jp
mov
dec
or
mov
xchg
in
je
mov
hlt
cmp
xchg
add
pop
movsb
and
clc
ds
dec
pusha
push
add
aaa
lret
and
dec
insb
add
cli
push
or
aas
mov
mov
insb
push
movsb
pop
dec
mov
arpl
sahf
pop
and
pop
lret
cmp
std
cli
cmp
fiadds
xchg
ret
adc
stc
lcall
testl
or
clc
mov
and
adc
push
fisubrl
cmp
jl
inc
test
movsb
sub
cmpsl
push
pop
outsb
adc
lret
pop
pop
push
xchg
cmp
xchg
pushf
xor
sbb
push
in
in
sub
mov
push
and
mov
jle
mov
mov
adc
loop
push
outsl
loope
adc
popl
push
loope
fsubs
jge
stos
xchg
sti
ret
pop
data16
lret
int3
adc
or
jae
push
sbb
pop
ret
mull
dec
pushf
ret
and
out
xor
jecxz
fstps
cltd
pop
pop
add
mov
push
test
sub
mov
xor
mov
sub
push
js
push
inc
push
outsb
lcall
sbb
out
mov
pop
xchg
pop
push
loopne
mov
sbb
sahf
cld
jmp
lods
adc
push
nop
mov
in
jg
enter
testb
or
imul
cmc
or
add
or
cli
pop
negl
faddp
lds
cli
push
aad
iret
mov
pop
jl
das
cmp
out
mov
jno
fistps
sbb
adc
lcall
in
and
shll
sbb
inc
cmp
pusha
inc
adc
stc
outsb
out
sub
jo
and
dec
ljmp
sub
jo
lret
lret
outsb
out
jmp
sub
fwait
pusha
push
adc
inc
insb
xchg
das
aaa
cmp
outsl
xchg
add
aad
addb
xchg
iret
addr16
push
scas
sub
mov
shlb
inc
jecxz
and
sarb
jae
mov
sub
pop
mov
sarb
movsb
nop
movsb
adc
jp
xchg
std
sub
and
sbb
clc
xchg
pop
cli
lret
mov
jg
repnz
add
shll
pop
call
pop
cltd
jecxz
shll
or
mov
xor
push
fcompl
jo
inc
add
mov
and
xchg
adc
inc
hlt
mov
dec
mov
xor
cli
addr16
adc
jno
cld
popf
pop
subl
adc
jmp
ss
fmul
jae
add
push
xchg
sbb
fucomp
mov
push
insb
push
les
not
aas
faddp
inc
add
inc
fwait
ljmp
xor
lret
int
jecxz
adc
dec
mov
sbb
xchg
popf
sub
mov
pop
and
xor
or
sti
out
mov
xchg
cmp
adc
stos
mov
xlat
je
sahf
test
mov
mov
or
inc
arpl
nop
jle
leave
and
in
fs
jmp
mov
or
or
sbb
test
mov
lret
add
test
imulb
xor
cs
ljmp
test
iret
aas
or
or
addr16
lock
fildl
or
fcomps
pop
xchg
aas
outsl
and
jl
inc
lds
fwait
xchg
xchg
pop
rcrl
add
lahf
imulb
fstpl
nop
jmp
xchg
lods
mov
bnd
aam
das
cwtl
rcl
pop
and
clc
push
xchg
stos
add
add
insl
in
cltd
adc
sbb
js
mov
cmp
jbe
icebp
jle
fs
mull
aas
xchg
lods
mov
lds
mov
pop
push
and
lock
imull
push
loopne
dec
inc
mov
movsl
add
adc
loop
loopne
push
cmp
int
xchg
cltd
sub
les
rorl
jge
bt
rcll
mov
lods
mov
repnz
push
push
sub
out
dec
or
mov
pop
dec
cltd
and
add
add
clc
imul
jle
mov
movsl
in
insl
xor
fadds
or
mov
enter
push
ljmp
jno
hlt
stos
pop
push
jne
arpl
mov
mov
lds
enter
hlt
rol
sbb
dec
pusha
mov
cwtl
adc
imul
icebp
test
push
movb
add
fnstenv
mov
js
jne
fadd
inc
jnp
insl
xchg
xchg
sbb
or
insb
pop
test
xor
nop
mov
rol
inc
xor
cmp
nop
inc
pop
fisubrs
stos
lret
push
pushf
scas
adc
loope
pop
test
cmp
iret
cmp
int3
mov
stos
jbe
cltd
jne
adc
jbe
fucomip
aad
cmp
jae
fadds
repnz
enter
in
int3
push
fisubs
pop
loopne
xchg
sub
nop
insb
inc
inc
loopne
adc
inc
mov
mov
and
fldl
cs
sub
xorl
lcall
aad
dec
imul
lds
test
jo
push
enter
adc
adc
dec
lahf
pop
or
daa
cmpb
inc
cmpsl
push
mov
xchg
in
loope
add
orl
test
cmp
mov
mov
lcall
cmp
mov
in
lret
lods
sub
jnp
push
addr16
stos
push
pop
jo
xchg
int
cmp
pop
outsb
scas
pop
mov
xchg
cmpsl
sbb
cli
test
add
push
and
sbbl
push
ror
mov
test
loopne
aas
fdivs
or
pop
jmp
fldl
mov
add
jecxz
mov
test
hlt
fnstsw
fildl
cmpsb
push
flds
sub
out
out
mov
shl
das
cli
and
out
imul
call
rcll
mov
jae
insb
jns
leave
xor
sbb
in
mov
jne
pop
sbb
xchg
jg
popf
rorl
push
subl
into
mov
jo
mov
out
pop
push
shl
mov
mov
pushf
lret
in
push
pop
leave
push
adc
das
mov
mov
neg
mov
sbb
divb
mov
ret
lods
pop
jp
in
xlat
in
sub
lods
leave
adc
sbb
jge
fistl
push
or
mov
ret
mov
mov
xor
dec
pop
lods
out
imul
push
mov
insb
fs
adc
pop
sub
cmpsb
inc
sub
bound
lock
outsb
sub
adc
xchg
pushf
enter
jns
outsl
sbb
shll
movsb
add
jno
push
cld
mov
stos
data16
je
inc
arpl
bound
enter
ss
lods
add
leave
mov
mov
jecxz
fnstenv
xor
mov
scas
dec
dec
jmp
push
push
mov
adc
aaa
mov
xchg
adc
mov
mov
jmp
rorb
fucomip
in
or
bound
test
test
clc
stos
pop
push
pop
fxch
pop
add
bound
out
xor
mov
mov
jge
popa
xlat
sub
pushl
pop
inc
mov
les
sbb
sbbb
lret
push
fimuls
and
dec
mov
jo
mov
push
cmp
jg
mov
mov
xor
push
loop
sbb
mov
jno
out
xor
test
mov
dec
adc
incb
jecxz
out
dec
fisttpll
loopne
mov
test
movsb
sub
pop
xchg
decl
adcb
test
aas
xchg
mov
adc
bnd
xchg
sbb
push
xor
lret
jae
mov
adc
test
or
fs
add
in
aam
xchg
dec
fstpt
je
iret
mov
or
or
loopne
pop
cmp
sub
insb
or
daa
aas
pop
fnclex
cli
push
lret
sub
cmp
lock
cmc
mov
je
arpl
inc
inc
xchg
subl
xor
cltd
icebp
lret
inc
push
out
adc
and
mov
out
add
mov
int
es
movsl
cmp
pop
mov
scas
mov
xor
dec
and
lods
sbb
mov
push
shrw
cmpsl
push
mov
imul
xchg
mov
fxch
cli
mov
outsl
cmp
xchg
adcl
popf
dec
pop
leave
cmpsb
fidivrs
dec
jecxz
mov
xor
inc
xchg
fstl
test
lods
jne
lcall
and
mov
mov
out
sbbb
stc
mov
mov
outsl
push
push
and
fstps
fs
cli
rorl
xchg
aas
sub
push
and
jnp
loopne
mov
xlat
data16
pop
gs
mov
dec
stos
sub
pop
shlb
mov
add
fildl
xchg
cmp
pop
sub
ret
mov
out
xchg
pop
mov
sub
mov
jmp
aad
addr16
insb
lods
push
dec
sarl
sbb
stos
push
int3
insl
push
mov
into
mov
mov
movsl
pushf
mov
out
add
outsb
ja
movsb
movsl
xlat
inc
fs
roll
insl
shlb
mov
push
push
pop
bound
xor
adc
jg
popa
fisttpl
sbb
jge
shlb
sahf
dec
xchg
dec
mov
pop
pop
xorb
jns
negl
push
inc
subl
pop
pop
push
div
dec
sub
sbb
jmp
and
pop
mov
xor
rolb
ds
xor
mov
xchg
test
mov
sub
repnz
dec
cmovno
adc
mov
test
xlat
fldt
inc
jns
push
popa
mov
or
cmp
mov
sub
subl
sbb
jle
jp
jns
xchg
jbe
jmp
jne
psubd
fnop
lea
mov
ret
insl
int
inc
push
addr16
cli
loope
lret
aas
imul
arpl
and
pop
jge
rcll
call
sub
sbb
test
mov
js
xchg
jb
xchg
loop
cmp
push
aaa
clc
loopne
ret
test
fsubrs
push
jnp
or
mov
jne
int
jp
rcll
adc
adc
jnp
or
and
xchg
cli
pop
xchg
mov
add
aad
cld
add
jle
les
les
cmp
or
sbb
aad
push
mov
push
xchg
data16
arpl
loopne
mov
add
dec
stc
adc
ljmp
leave
imul
scas
pop
mov
int3
ret
push
shll
js
mov
adc
fwait
add
inc
pop
repz
inc
int
xor
aam
pusha
int3
rorb
fists
es
pop
cmp
and
push
xchg
mul
inc
fsubrs
ss
cmpsl
sub
xchg
mov
xchg
ss
outsb
adc
inc
into
mov
iret
jnp
add
sbb
xor
xchg
out
mov
sub
xrelease
add
sbb
aad
jo
sub
leave
fmull
js
xor
dec
adc
push
lret
adc
jo
dec
jecxz
test
or
adcb
je
mov
sbb
ret
sar
jp
xor
cmpsl
nop
mov
pop
imul
popf
xor
and
mov
inc
mov
xlat
mov
or
sbb
adc
bound
or
test
sub
and
dec
stos
ss
sbb
cli
dec
ficoml
or
push
loope
test
stos
test
inc
inc
and
push
push
adc
dec
pushl
push
sarl
mov
pop
fs
or
scas
fldt
cmc
pushf
popa
push
xchg
mov
sbb
mov
sub
dec
sahf
push
fcomps
bound
mov
inc
xor
cwtl
aam
pop
jg
dec
out
fs
loopne
stc
std
sbb
adc
aam
aam
das
in
pop
in
pop
xchg
daa
out
mov
aas
in
icebp
ja
imul
mov
and
ja
sar
lahf
mov
je
or
cli
cltd
cmp
xlat
sub
popa
mov
push
ret
jnp
xchg
mov
hlt
jmp
push
sub
mov
adc
jne
mov
xchg
or
movsb
movsb
fwait
cmpsl
inc
mov
pushf
and
out
xchg
sub
jns
shl
mov
aas
dec
xor
inc
lds
out
orb
pop
mov
pushf
rcll
cmp
mov
mov
lcall
out
xchg
and
xorb
lods
mov
iret
add
xor
mov
aam
fs
pop
push
in
leave
movsl
out
movsl
pop
push
dec
das
lea
flds
addr16
cli
sbb
pop
pop
cld
or
mov
inc
std
xchg
sub
push
and
adc
popf
mov
jo
sbb
stc
jb
cmp
pop
mov
sti
mov
adc
cmp
pop
into
xor
ss
mov
push
nop
stos
mov
cwtl
mov
ds
adc
xchg
or
xchg
lahf
jle
add
jae
mov
stos
push
ja
push
mov
xchg
test
jl
mov
push
je
pop
sbb
pushf
xchg
lods
and
dec
push
sub
mov
inc
test
jecxz
and
es
jecxz
nop
lods
or
aam
test
ljmp
enter
icebp
xchg
jmp
cmpsl
pop
jns
xchg
mov
dec
rcrl
xchg
cli
inc
xor
pop
ja
xchg
aaa
stc
shlb
repz
fwait
nop
push
jbe
inc
sti
lods
cmp
sbb
add
fcoml
jmp
add
cmp
scas
aad
rclb
xchg
adcb
dec
rcrb
push
push
xchg
stc
or
inc
push
aas
sub
pop
jge
inc
pop
xor
mull
in
in
lock
fadd
add
loope
pop
or
hlt
jne
xlat
lcall
lret
mov
leave
les
divl
ja
outsb
mov
inc
push
sbb
stos
push
cltd
popf
pop
push
test
push
movsl
repz
mov
or
data16
in
ljmp
cs
imul
dec
test
push
sbbb
push
popa
mov
and
push
shlb
cmpsb
cmpl
inc
je
mov
sbb
js
mov
dec
add
push
sbb
mov
sub
lock
cld
adc
push
mov
call
testl
add
jle
jl
inc
mov
fs
sub
jb
sbb
lds
add
stos
mov
movsl
imul
jl
jl
ljmp
push
je
mov
lock
cltd
pop
xchg
cld
adc
cmpsl
mov
stos
cmpsb
sbb
jl
cmp
add
xchg
lods
or
add
lcall
and
and
out
push
dec
sahf
jb
pop
mov
pop
cli
inc
sbbb
xor
xchg
dec
out
rorb
mov
mov
mov
add
test
sbb
dec
aaa
mov
lret
jl
or
lahf
mov
pop
std
in
push
popa
into
sbbb
pop
sahf
mov
jne
repnz
dec
or
iret
fwait
lds
sbb
or
sub
push
aas
fwait
xchg
jo
sbb
loopne
sbb
stos
cmp
outsl
mov
int
or
jge
hlt
jo
lahf
cwtl
and
stos
add
outsl
or
add
add
jae
popf
jmp
arpl
xchg
jmp
add
aad
test
sbb
xor
inc
ja
dec
ja
into
jbe
mov
rorl
insl
gs
mov
cli
aas
lock
cmp
xlat
push
xchg
adc
into
enter
and
iret
pop
jmp
inc
cltd
mov
jne
sbb
mov
adc
pop
out
dec
int3
pop
mov
mov
ljmp
mov
aas
and
adc
movsb
mov
push
repz
cmc
sbb
stos
jb
fisttpl
cmp
pcmpgtw
dec
pop
outsb
sub
ljmp
add
ret
dec
out
add
and
test
sbb
jp
lock
cld
sub
aad
sbb
inc
cmpb
fldenv
mov
dec
imul
jns
push
sbb
mov
push
into
test
cld
xor
inc
stos
aaa
adc
push
jmp
notb
scas
dec
adc
scas
inc
insb
xorl
dec
lds
outsb
sahf
movsl
imul
xor
mov
jb
loope
xor
leave
and
jnp
sti
xchg
xchg
cmc
xchg
xlat
pop
and
aaa
aad
jg
or
cli
out
iret
mov
sahf
arpl
sub
loop
stc
bound
and
inc
add
fwait
xor
mov
and
ret
pushf
jecxz
sarb
cli
dec
cmpl
jb
aaa
dec
adc
dec
into
cld
add
cmpsb
in
mov
push
push
pop
lods
js
aam
aam
push
cmp
mov
xchg
pop
stos
and
xor
dec
test
jne
add
cmpsl
xchg
and
dec
xlat
lock
mov
dec
outsl
gs
jmp
lock
icebp
adc
jg
cwtl
jnp
outsb
out
jle
pusha
enter
or
mov
cmp
xor
jl
sbb
in
sub
cld
daa
call
push
inc
dec
and
stc
testb
mov
ljmp
jae
ret
arpl
jl
or
dec
jne
popa
das
pop
xchg
lods
push
ljmp
ret
xchg
dec
xchg
inc
mov
mov
sub
testb
mov
lods
addb
mov
sub
push
loopne
clc
cld
movsb
loopne
cmc
je
shlb
movsb
mov
wbinvd
cmp
pushf
cmp
add
iret
dec
outsb
dec
jmp
fisubs
and
imul
loopne
add
add
cmc
gs
movsb
sbb
dec
rcrl
mov
daa
test
push
rcll
xchg
mov
cmp
adc
gs
xchg
add
xlat
fidivrs
nop
test
cli
icebp
and
ds
jo
sub
sbb
push
je
pop
xchg
fstpt
mov
and
mov
and
loopne
mov
dec
das
mov
ja
cmp
enter
outsl
mov
push
fwait
out
or
jmp
xchg
mov
jmp
into
leave
les
lcall
adc
insl
addr16
retw
push
push
in
std
lods
jp
cmp
into
push
mov
mov
mov
lds
cmp
xchg
and
cmpsb
pop
cmp
xchg
and
jg
test
cmp
sbb
xor
push
jle
xchg
testb
int
jmp
adcb
and
cs
sub
das
sbb
inc
cmpb
jl
pusha
pop
sub
xor
js
mov
dec
stos
mov
test
add
sbb
icebp
outsb
cs
decb
sub
add
sbb
mov
push
inc
fdivrl
inc
inc
lcall
xlat
or
sub
popf
loop
add
rolb
js
jnp
out
inc
call
ds
cmpsb
adc
pusha
aad
inc
ds
test
es
sub
mov
mov
outsl
out
adc
and
and
push
cmpb
pop
adc
jecxz
dec
adc
imull
hlt
cltd
sub
es
push
movsb
dec
repnz
insb
jg
lret
jg
push
and
cli
pop
fxch
adc
rolb
jecxz
xor
jecxz
out
shll
mov
and
mov
pop
ja
mov
ss
fnstenv
and
test
dec
fiadds
mov
adc
pop
jbe
cmp
rcr
xchg
mov
push
sarl
imul
mov
aam
inc
popf
leave
xor
out
mov
lds
xchg
int3
push
adc
andb
xor
jb
sbb
inc
lcall
sbb
int
in
movsl
pop
pushf
pop
subl
ds
fldt
int
movswl
xor
adc
ficompl
decl
lcall
sub
mov
ds
or
orl
pushf
outsb
incl
pop
ja
loop
cmp
popl
out
imul
sbb
and
and
jns
and
jmp
leave
jo
jo
out
mov
and
fidivs
jbe,pt
or
or
jnp
sub
mov
mov
mov
push
fldcw
scas
cmp
daa
add
aam
adc
es
pop
pop
fbld
fisubrl
cmp
ret
ficomps
out
cmpsb
mov
lods
adc
jl
lea
outsb
ljmp
or
xchg
lea
fs
adc
fdivrl
pop
lods
addr16
add
insb
pusha
adc
ffreep
insb
fistpll
mov
xor
xor
push
ss
lds
cmp
push
rorl
mov
repz
jns
mov
xor
adc
fcmove
add
daa
jb
adc
mov
pop
mov
push
mov
lcall
inc
loop
push
fldcw
mov
outsl
pushf
xor
paddw
jbe
xor
repz
jb
xor
out
add
mov
jmp
mov
jo
out
pop
push
cli
jbe
and
and
daa
mov
push
jge
lcall
mov
repnz
fiadds
inc
mov
pop
aas
sbb
in
enter
sti
xor
jnp
and
or
xor
iret
push
xor
or
inc
lahf
and
cmp
push
adc
insl
jmp
pushf
xor
push
ret
lods
jl
jo
cmpsb
fdivrp
stos
mov
test
xor
mov
pop
outsl
xor
in
inc
sub
and
rorb
adc
popa
int3
negl
movb
sub
dec
push
mov
mov
pop
jbe
push
cld
cmp
cmp
ja
test
test
cmp
lock
adc
lods
xchg
adc
dec
outsb
pop
cmp
daa
or
mov
leave
and
jecxz
popa
jl
in
pop
sbb
mov
pop
push
fsub
and
ja
dec
jno
cmp
mov
fmuls
pop
popa
mov
repnz
dec
aaa
dec
xchg
lret
push
test
jg
fstps
pop
pop
xchg
les
lds
daa
or
scas
faddl
dec
sub
pop
xor
push
out
or
jmp
aas
push
xchg
inc
and
test
lods
push
lods
rolb
subb
dec
lret
jb
icebp
inc
sbb
dec
sbb
sti
rcrl
iret
rcrb
stos
sbb
inc
mov
adc
or
push
pushf
aas
cltd
pop
and
mov
mov
mov
ret
sbb
int
mov
inc
pusha
xor
push
imul
mov
popf
add
jmp
rcrl
mov
sub
inc
fsubrl
dec
data16
pop
jns
xor
in
enter
mov
xlat
out
call
or
jmp
or
jae
dec
fdivr
inc
sub
push
sti
add
por
aam
add
dec
jae
dec
ljmp
or
sub
faddl
inc
stc
sbb
shr
shll
subb
imul
ret
out
test
push
inc
aaa
xlat
sbb
cmpsl
inc
or
pop
cmp
jns
cmp
dec
sub
ljmp
xor
pop
pop
pop
js
mov
mov
out
ror
pop
jns
dec
or
inc
mov
adc
fldl
jl
jb
xchg
push
or
out
test
sbb
jbe
xchg
sub
test
dec
pop
pminub
sub
popa
and
negb
stc
sub
and
inc
xchg
popf
dec
xchg
jbe
inc
jo
jecxz
bound
jg
aam
mov
fisubrl
dec
mov
mov
push
xor
stc
add
ret
aam
iret
xor
xchg
pop
jg
mov
push
mov
adc
jl
movsl
shr
in
outsl
insb
adc
add
push
add
jg
mov
or
int
sub
stc
xchg
jg
inc
or
les
fwait
and
fldl
and
jmp
negl
loope
adc
popf
outsb
inc
dec
stos
inc
add
lods
mov
mov
rcll
jb
push
push
adc
cli
push
adcl
mov
cmpl
leave
mov
inc
imul
adc
int3
loop
or
in
es
repz
inc
fwait
out
jcxz
lret
or
rcr
inc
into
ds
jns
js
pop
imul
jg
xchg
pop
cmp
and
cld
or
ret
outsb
test
or
sbb
cmp
sahf
sahf
and
aas
dec
lods
sub
xchg
incb
sbb
cmpsl
push
push
out
jb
shrl
sub
xchg
mov
inc
or
rcl
pop
push
push
aam
xchg
adc
and
pop
add
xchg
cmp
sbb
roll
leave
scas
fistl
push
fcomps
into
fisttpl
inc
mov
fldenv
int3
push
sti
jle
scas
or
and
push
lods
xchg
dec
ljmp
adc
int
lods
inc
xchg
lea
sbb
mov
icebp
sbb
push
mov
test
add
shl
lea
dec
jecxz
push
jge
pop
outsl
sub
repnz
rclb
mov
ja
addr16
sahf
mov
lret
insl
dec
or
sub
mov
adc
jo
int
insl
into
jae
mov
iret
scas
xchg
sub
es
repz
scas
sub
xor
pushl
in
mov
jo
xor
out
adc
and
jmp
test
call
notl
sub
xchg
lods
stos
mov
mov
lret
mov
xor
mov
fisubrl
insb
mov
sbb
mov
test
aaa
pop
jno
mov
lock
aaa
lret
addr16
mov
dec
sub
cmp
movsb
sub
fidivs
and
ds
xchg
adc
inc
imul
aaa
lahf
jo
inc
push
dec
ljmp
mov
sub
cmpsb
lcall
xchg
jl
popf
mov
inc
mov
fstpl
push
stos
push
rcll
mov
sub
xorl
dec
ds
jnp
push
xlat
mov
sub
add
sub
jp
mov
jmp
mov
in
in
aaa
repz
lahf
push
mov
prefetch
rcrb
clc
and
or
inc
in
loop
cmpsl
gs
jp
out
inc
stos
sbb
mov
adc
daa
stos
sahf
out
dec
mov
cs
enter
push
std
mov
out
and
lods
popf
out
mov
jecxz
mov
jg
pop
ja
mov
outsl
inc
inc
mov
pop
pop
xchg
xchg
data16
jbe
mov
gs
ret
rclb
inc
fadd
hlt
cli
push
fstl
pop
adc
ja
add
lods
adcl
sbb
in
fwait
rorb
fwait
inc
repz
cmpsl
rorb
ljmp
fs
mov
mov
push
inc
aam
inc
mov
test
jb
int
sti
adc
call
mov
mov
push
dec
inc
inc
test
lahf
push
test
push
in
enter
bound
jge
mov
dec
jle
or
sub
xchg
ret
insl
mov
hlt
ljmp
sti
cmp
cmpsl
out
arpl
xor
movsb
mov
mov
rcrl
call
fldl
sahf
ds
mov
pop
push
fstpl
subb
dec
std
repnz
imul
push
loopne
mov
frstor
jecxz
movsb
shl
cmp
xchg
mov
rolb
out
pop
xor
pop
xchg
cmp
cmp
sbb
arpl
shr
pop
dec
into
ret
fs
jg
or
popf
idivl
add
push
fistps
out
xchg
out
and
mov
das
in
dec
pushf
mov
ds
into
sti
das
mov
mov
sbb
sub
xlat
imul
push
mov
lods
cmpsl
test
into
sub
and
std
ja
icebp
rcl
fnstcw
imul
in
cmpsl
sub
cmpsl
rol
ja
mov
mov
cs
push
cld
adc
pop
fmull
lret
stc
or
mov
mov
ret
xor
sbb
cmp
and
loop
clc
cmpb
lea
mov
xor
mov
xchg
cmp
and
mov
jl
or
cwtl
lods
or
sbb
xchg
dec
dec
rcrl
and
add
jge
in
lock
dec
test
and
mov
jnp
jae
and
sub
fs
push
into
mov
shl
xchg
test
add
lods
pop
mov
jns
mov
sub
lret
sti
xor
mov
or
ss
xchg
pop
xchg
mov
xchg
fs
adc
mov
add
xor
std
mov
ljmp
or
or
fs
imul
and
call
ljmp
hlt
mov
out
sub
push
add
outsl
pop
js
mov
pop
or
mov
sub
stc
ror
xchg
jne
mov
cmc
add
popf
shl
cmpsb
dec
out
pushf
sbb
pop
mov
pusha
pop
dec
jmp
push
in
lahf
push
cltd
loopne
hlt
lock
pusha
mov
hlt
dec
or
mov
pop
mov
push
nop
adc
jge
sbb
push
dec
loope
stc
loope
push
mov
jg
scas
fwait
gs
sub
ret
cmp
xchg
mov
ret
xor
adc
test
loope
pop
int
lea
stc
adc
push
sbb
sti
mov
add
sub
inc
cltd
pop
loopne
push
mov
call
leave
daa
in
pop
push
or
in
mov
js
rol
xor
cltd
std
out
and
shlb
push
movsl
adc
nop
andb
pop
xchg
sahf
mov
addr16
imul
cmp
bnd
and
mov
add
dec
cmc
popf
adc
sub
jle,pn
ss
jmp
or
mov
repnz
pop
xchg
xchg
loope
outsb
mov
div
inc
adc
mov
xor
xor
adc
stc
and
xor
mov
adc
xlat
das
sbb
adc
and
jne
lret
pushf
and
jle
stc
movl
mov
xchg
aam
test
mov
pusha
repz
pop
imul
fidivs
add
test
popa
adc
cmpsb
cmp
adc
pop
int3
cmp
imul
or
inc
push
insb
ds
pop
arpl
lret
movsb
lret
adc
mov
add
lods
dec
ljmp
sub
inc
dec
lret
xchg
inc
std
int3
pop
rcl
inc
fisttpll
xor
dec
mov
push
add
bound
or
stc
jle
stos
mov
ret
out
outsb
pop
fistl
movsl
mov
inc
cld
lret
xchg
aaa
pop
rcll
or
mov
cld
adc
scas
jae
and
cmp
pop
adc
sti
ja
pop
push
mov
rcl
icebp
rolb
jo
adc
pop
xor
je
mov
add
adc
mov
push
sbb
xchg
inc
mov
pcmpeqb
add
cmc
push
adc
insl
xchg
mov
lock
movsb
jbe
rcr
cmp
lret
sub
lcall
mov
fiadds
xorb
pop
mov
pusha
mov
or
sbb
mov
adc
jae
movsb
inc
jecxz
mov
cwtl
in
xor
je
fwait
outsb
cmp
lret
insb
dec
xchg
and
pop
fcomi
and
push
stos
add
jno
fwait
sub
adc
mov
mov
mov
add
xor
pop
das
or
cmp
pop
sbb
pop
and
mov
movl
dec
lahf
cmpsl
mov
loope
lock
or
adc
cmpsb
jbe
inc
dec
push
xchg
int
ror
jb
ss
xor
ljmp
jg
cmp
ret
xchg
push
pop
bound
xor
or
add
sar
rolb
scas
lcall
xlat
jae
and
xchg
imul
lds
scas
add
icebp
fisttps
nop
sahf
cmp
pop
inc
mov
dec
mov
jmp
out
mov
test
in
cld
aam
inc
add
xor
push
mov
sti
repnz
cli
jno
mov
imul
pop
std
fbstp
in
ljmp
ss
push
xor
jnp
jg
xchg
xor
mov
sti
cltd
fdivs
cmc
es
mov
adc
cmp
jg
push
or
rcl
mov
shll
mov
jg
fnstsw
cli
or
add
mov
ret
pusha
sbb
mov
sbb
movsb
aam
sub
arpl
jnp
pushf
sbb
add
stos
and
and
out
ud0
orb
jl
out
jns
pop
mov
cmp
in
pop
or
jnp
cmp
popa
pop
cmp
or
je
xor
test
aaa
jmp
imul
ret
adcb
xor
sbb
cmp
jmp
lds
cltd
mov
push
pop
lahf
cli
mov
mov
jo
stos
les
das
adc
pop
imul
inc
push
ljmp
xchg
push
ret
adc
xchg
cmp
and
mov
cmp
in
sub
mov
and
or
mov
imul
cmp
inc
iret
fwait
adc
stos
cli
jp
jle
rcrb
mov
loop
and
jmp
out
xchg
stos
adc
mov
loopne
add
xchg
stos
mov
int3
loope
popa
pushf
imul
xchg
lea
movsl
adc
pop
or
mov
add
cmp
insl
pop
push
pop
inc
sbb
xchg
jo
insb
push
ljmp
les
adc
jle
sbb
mov
mov
mov
mov
mov
mov
xchg
in
cltd
cltd
and
inc
jnp
test
push
sbb
sub
mov
xchg
jecxz
jbe
jbe
cs
lret
popa
outsb
sarb
lods
dec
dec
js
or
aad
into
push
dec
and
xor
mov
sub
out
fldt
orb
sub
jg
and
rcl
jle
pop
pop
jae
mov
mov
ss
push
cwtl
pop
fildll
mov
mov
pop
scas
mov
repz
scas
push
jno
loopne
clc
add
jne
push
outsb
inc
add
adc
repz
cmc
inc
sub
mov
pop
lret
sarl
repnz
adc
mov
or
rclb
loopne
push
movswl
jbe
sti
sub
jns
andb
fsubrs
mov
add
mov
push
xchg
push
add
stos
jae
mov
outsb
dec
xchg
lods
pop
das
into
mov
cwtl
gs
mov
sub
pop
jg
jecxz
mov
lds
stos
jl
sbb
adc
mov
inc
sub
testl
andb
cmp
pop
pop
mov
mov
or
fidivl
lods
call
lret
and
xor
or
outsb
notb
mov
cmp
ljmp
out
shlb
cmc
test
inc
sbb
and
dec
repz
inc
aad
mov
sbb
mov
mov
add
cmp
sbb
ficompl
mov
fldenv
xor
jge
push
in
das
sbb
xor
jbe
pop
dec
dec
pop
lret
mov
push
inc
lock
fldl2e
mov
repz
sar
add
scas
sar
push
int3
rclb
cli
or
movsl
xlat
mov
mov
sub
jbe
inc
xchg
rclb
push
cli
sub
andl
movsl
and
loopne
fldl
jbe
mov
and
in
jns
xorl
mov
sbb
lods
fucomp
sub
outsb
jno,pn
jbe
stos
outsl
xchg
pop
inc
mov
cmp
or
jbe
test
addl
sub
jnp
add
add
cli
cmp
xor
stos
xchg
mov
mov
ss
or
xchg
pop
xor
lods
xchg
fwait
je
bound
inc
mov
std
mov
push
or
lahf
pop
clc
shlb
sbb
dec
inc
clc
insb
nop
ss
movsl
push
jecxz
adc
icebp
sub
ja
xchg
daa
cwtl
fidivrs
mov
insl
lds
call
xor
iret
push
jecxz
inc
cmp
aaa
mov
push
dec
popa
xchg
adc
or
nop
loopne
jecxz
add
dec
imul
call
popa
pop
and
js
or
ljmp
jno
cs
and
inc
popf
rol
fld
paddusb
clc
dec
adc
js
cmp
push
clc
mov
mov
shl
lea
or
je
lret
rcrb
jne
xchg
ds
cltd
iret
xor
dec
stos
les
xchg
stos
jmp
or
sub
xchg
cmpsl
sahf
lods
div
and
jo
sub
leave
xchg
inc
xor
clc
fwait
adc
mov
and
shll
push
lock
or
out
or
lods
sbb
pop
mov
int3
and
dec
push
fiaddl
mov
push
or
sbb
dec
out
and
mov
jb
inc
cmpsb
inc
adc
icebp
scas
cli
aas
aad
dec
inc
pushf
fisttpl
mov
stos
cmpsb
push
sub
pop
mov
je
sti
push
jle
sti
fnstcw
pop
mov
aam
inc
sub
hlt
not
enter
adc
js
lods
scas
push
sub
inc
fwait
lea
mov
dec
jo
pop
push
cmp
cmp
push
arpl
or
es
mov
and
lret
inc
ficompl
add
repnz
cmp
in
push
sub
push
lods
loopne
iret
or
push
ljmp
aaa
mov
pop
mov
iret
rclb
stos
jns
xchg
in
fnstenv
lods
and
je
mov
mov
add
cmp
cmp
and
xor
mov
cli
cmp
mov
int3
fistps
and
inc
sbb
pop
push
push
js
mov
test
shr
outsb
sarb
fistpll
push
and
cmp
daa
fadds
daa
in
dec
ret
cmp
jbe
mov
sub
push
and
xor
cmp
xchg
loope
in
cmpsb
sbb
push
add
add
mov
data16
mov
xlat
add
jno
jl
int3
mov
test
or
outsl
mov
add
mul
jecxz
mov
sbb
stc
pushf
xchg
add
fwait
add
shrb
add
ds
std
mov
inc
cmp
cmp
sbb
adc
loop
into
cmpsb
inc
xchg
cmp
shlb
push
imul
std
fcmovu
push
jge
sub
das
inc
xor
jno
mov
out
pop
aam
fnsetpm(287
pop
push
sahf
mov
push
push
xchg
movsb
adc
loop
sub
pop
shrb
pop
xchg
rcrl
push
out
out
in
cli
loop
push
pop
sub
dec
cs
nop
mov
mov
and
mov
add
jp
fdiv
mov
les
add
xor
sub
mov
sbb
out
xlat
incl
adc
ljmp
stos
dec
inc
fiadds
dec
push
add
lret
mov
inc
mov
xlat
les
mov
int3
jbe
xor
adc
inc
ret
ss
outsl
in
jmp
and
ret
sbb
negl
aad
add
ret
add
scas
adc
ljmp
inc
jbe
sarb
mov
or
sarl
push
and
dec
and
or
cmc
mov
addr16
mov
push
fdivl
jmp
pop
jge
icebp
xor
inc
gs
inc
mov
xchg
cmp
pop
popa
dec
add
or
dec
jle
mov
notl
push
push
sbb
fsubs
mov
popf
xor
and
dec
mov
xor
dec
push
jmp
push
stc
outsl
nop
nop
jno
jo
pop
mov
rorb
or
mov
rorb
xchg
xchg
test
push
adc
push
cmp
mov
inc
adc
sub
rcr
arpl
data16
test
add
rorl
or
cmp
jae
cmp
sbb
inc
xchg
jnp
popf
sub
mov
xchg
xor
jo
pop
mov
pop
outsb
out
push
sbb
movsb
leave
inc
jp
pop
mov
or
jge
or
jmp
ret
push
cli
dec
mov
adc
popa
push
enter
mov
repz
ljmp
adc
mov
jge
sti
sub
and
cmpb
shl
std
ficoml
cmp
and
fbld
jge
sahf
jne
mov
addr16
jmp
lahf
and
fs
shl
mov
pusha
andl
mov
adc
xchg
pop
push
out
xor
fld
mov
mov
and
sbb
les
sub
cmp
repz
or
andl
outsl
shl
enter
in
lahf
aas
or
imul
rolb
sbb
mov
enter
sub
mov
nop
testl
nop
and
sub
icebp
xchg
push
cmp
push
sarb
ss
leave
test
push
sti
fs
push
in
sub
js
ljmp
cmp
pop
daa
icebp
ja
mov
rep
inc
fimuls
lcall
cmp
mov
ljmp
and
or
fs
inc
dec
ljmp
int3
test
push
pop
sti
add
jb
popa
sub
cld
insb
dec
inc
pusha
cmp
mov
xchg
push
add
incl
jl
pop
mov
cmp
outsb
scas
jb
icebp
mov
xlat
xchg
ljmp
fdivl
or
shll
ja
movsl
dec
jnp
clts
arpl
mov
loope
push
sub
imul
pop
inc
out
icebp
sub
push
mov
fwait
add
mov
adc
mov
xor
call
scas
andb
nop
in
and
lock
jo
add
int3
pusha
mov
jmp
push
fstpl
in
xchg
xchg
and
xchg
gs
inc
and
das
adc
fisubl
add
push
inc
fwait
shll
shlb
cld
push
and
inc
adc
in
adc
mov
mov
xchg
inc
jae
pusha
cmp
lods
inc
bound
lahf
shlb
inc
les
adc
stos
pop
std
test
sahf
pop
outsl
ret
push
jge
mov
fidivrl
test
xor
sbbb
fildl
cmove
dec
mov
outsb
pop
ljmp
xor
lds
cwtl
test
cmp
and
data16
dec
insl
insb
push
and
data16
add
xchg
xchg
push
lea
and
aas
mov
jle
mov
in
in
xchg
bound
inc
and
xchg
xor
push
stc
cmp
mov
adc
jae
inc
test
out
fldl
mov
lret
mov
cmc
push
les
or
nop
outsb
and
inc
rorl
jnp
and
adc
xor
ficoml
sbbl
testb
and
pop
push
loopne
mov
sbb
pop
push
and
repz
ds
jp
lret
cwtl
imul
gs
lods
dec
insl
mov
cltd
bound
mov
dec
mov
xchg
cli
add
dec
pop
push
jecxz
out
testl
shrb
outsb
mov
js
or
pusha
fs
cmp
int3
cmp
std
or
mov
cmp
mov
xchg
mov
jns
dec
imul
lock
aaa
jmp
xor
pop
push
add
fnop
ficompl
scas
xlat
xchg
push
add
adc
pop
repnz
lea
adc
lcall
mov
movsb
xchg
inc
dec
sub
and
cwtl
lret
and
fstpl
pop
mov
dec
sbb
push
gs
pop
out
adc
outsb
sti
aas
mov
sbb
push
and
lods
je
push
cmpsb
in
andb
sbb
pusha
iret
sub
hlt
sub
mov
jle
dec
out
test
or
repnz
mov
test
inc
loopne
inc
sti
outsb
fists
stos
xor
jecxz
in
mov
pop
aad
outsl
mov
repnz
add
push
pop
push
mov
lcall
repz
mov
push
push
pop
cmpsl
leave
out
int
jle
xchg
mov
aaa
cmp
mov
inc
or
inc
inc
pop
cmp
loopne
push
mov
or
xlat
sti
mov
ficompl
mov
shl
pop
aam
add
jecxz
inc
and
std
and
mov
inc
adc
sbb
lret
inc
and
push
mov
mov
aad
mov
xlat
pop
pop
andb
call
push
test
arpl
mov
mov
cs
dec
cltd
xchg
or
mov
mov
lds
call
pop
jmp
sub
negl
lods
pop
inc
test
shrl
adc
aaa
in
xor
push
dec
jle
pop
sbbl
clc
mov
cltd
sbb
roll
push
mov
adc
pop
push
popf
jl
sub
sub
in
sti
es
hlt
movsl
or
cld
ljmp
or
xchg
inc
and
out
mov
push
je
or
cmp
or
jne
cmc
xor
test
in
jbe
xchg
loope
arpl
push
push
stos
cli
inc
sub
ja
sub
pop
mov
aad
and
sti
lret
repnz
push
xchg
jne
dec
sbb
jno
mul
or
fistpll
out
shll
mov
xor
dec
bound
and
jae
out
call
xor
push
jbe
xlat
icebp
mov
in
sti
sbb
push
inc
mov
inc
add
addr16
nop
pop
adc
inc
mov
nop
jb
mov
out
out
test
movb
mov
cmc
xor
shlb
xchg
mov
stos
inc
fcomps
or
pusha
shll
mov
pop
push
mov
jecxz
cmp
sub
cmp
mov
sbb
outsl
stos
insb
aas
pop
mov
and
cmp
in
out
xor
aad
sbbb
dec
xchg
icebp
test
sub
out
mov
into
iret
jbe
bound
sahf
inc
push
xor
gs
push
fsubrl
or
negb
arpl
xlat
push
scas
xchg
ret
cmp
cs
pop
adc
aas
cmpsl
and
mov
repz
xchg
mov
fcomps
js
push
cmp
popa
mov
push
shrl
loop
gs
mov
mov
lret
dec
push
insl
pop
xor
out
ffreep
sub
cmpsb
cmpsb
fcomip
jg
ret
bound
cmc
jne
jl
das
negb
faddl
into
in
jl
jae
xchg
mov
mov
mov
lods
fwait
sbb
xchg
arpl
nop
cld
dec
data16
mov
jb
imul
pop
stc
lock
adc
mov
pushf
pop
mov
sahf
icebp
and
popa
jo
out
mov
mov
push
out
jno
jnp
sarb
inc
and
movsl
dec
pop
movsl
loope
jne
pop
xor
ret
imull
jne
cmpsb
mov
jl
xchg
pop
out
cmp
xchg
imul
fstps
pop
clc
jno
test
or
sahf
sar
adc
jbe
and
subl
mov
and
jns
movsl
inc
loop
pushf
lcall
mov
lods
xchg
inc
cmc
lcall
sahf
in
andb
or
mov
aas
testl
push
jmp
xchg
ret
dec
sub
outsb
fdivs
repz
push
in
mov
mov
add
sbb
dec
movsb
adc
je
mov
mov
mov
out
into
sbb
das
daa
inc
adc
and
xchg
xchg
pop
mov
sub
rcr
xor
daa
inc
fimull
jno
adc
test
push
fsub
dec
dec
in
push
clc
ljmp
ja
lock
lcall
imulb
jp
nop
and
clc
and
jb
lcall
stc
adc
xorb
adc
mov
pop
inc
stos
mov
cli
icebp
xchg
mov
mov
xchg
mov
out
aam
subb
es
adc
lock
pop
enter
mov
cld
in
cmp
sub
adc
push
mov
sub
cmpsb
and
loopne
sub
pusha
es
or
mov
xor
jnp
jb
popa
and
arpl
xchg
xor
out
aaa
jge
lock
popf
gs
push
test
cmp
fs
jg
inc
rorl
xor
fstpt
sub
mov
push
inc
adc
in
dec
mov
dec
sbb
test
lds
dec
inc
push
das
pop
cmc
sti
fcompl
push
or
add
arpl
mov
insl
sub
xchg
dec
out
aam
rorb
and
jnp
in
xchg
mov
add
xorb
push
mov
es
pop
aad
stc
bt
mov
out
rol
push
cmp
loop
dec
add
sbb
jmp
xor
and
xchg
jns
mov
xchg
sub
cmpb
roll
mov
frstor
insb
xor
stos
mov
orb
fwait
xchg
ret
push
and
push
push
ss
clc
sub
mov
in
je
adcb
inc
mov
outsl
fs
std
pop
jmp
mov
in
cmp
mov
dec
mov
dec
out
mov
ss
xchg
mov
xchg
das
jecxz
mov
pusha
and
inc
lahf
cmp
popf
pop
repz
jno
adc
sahf
add
jb
sbb
sti
push
mov
into
jae
cmp
lea
fsubl
lret
sub
sbb
pop
xchg
mov
arpl
or
xchg
pop
arpl
pop
pop
xor
dec
xchg
cwtl
xor
adc
loop
lods
jge
jae
jo
mov
adc
leave
dec
jae
test
push
mov
jnp
xor
fsubrp
mov
jecxz
outsb
mov
xchg
gs
andb
push
scas
pusha
cs
gs
adc
mov
sub
push
mov
lds
adc
das
scas
or
dec
ret
lds
rolb
iret
mov
push
fildll
jmp
shrl
cli
pop
inc
insl
jbe
jp
or
cmp
iret
stos
out
mov
insl
add
add
push
aad
dec
in
cwtl
sbb
xor
mov
pop
mov
inc
mov
pushf
adc
subl
ds
push
mov
lods
mov
scas
add
xor
push
xor
dec
sarb
mov
bound
imul
dec
sbb
pop
pop
inc
mov
pop
add
mov
mov
aaa
jns
lea
leave
aad
es
repz
dec
mov
jne
inc
out
repz
addr16
sbb
jb
pop
ja
outsb
mov
jp
inc
sbb
js
sbb
pushf
mov
stc
adc
jnp
sbb
outsl
adcb
aas
inc
or
cld
xchg
pop
dec
and
orb
cltd
jnp
mov
mov
mov
subb
dec
and
mov
inc
inc
mov
and
daa
loopne
xor
dec
or
adc
push
push
mov
imull
and
cmpsl
daa
sbb
add
and
and
push
dec
add
mov
mov
pop
ss
insb
int3
add
jb
les
scas
jmp
fbstp
cmp
das
movl
pop
inc
inc
or
in
addr16
mov
dec
xor
sbb
mov
xor
addb
addl
xchg
mov
sbb
pop
popf
sub
cmp
or
call
in
mov
lcall
mov
movsl
test
sti
shrb
pop
aad
cmpsb
rolb
jle
jecxz
test
out
lock
sbb
sub
jp
sbb
cltd
aad
popa
movsl
andb
mov
sarb
cmp
sbb
dec
inc
les
pop
outsb
fcmovnb
out
cld
imul
out
mov
insl
add
adc
mov
jne
jl
mov
cmpsb
mov
add
fdiv
dec
fimuls
push
add
popa
add
in
cmpsb
push
bnd
sarl
sbb
sub
hlt
xorl
add
les
sti
stos
xchg
dec
fidivrl
and
cli
popa
jmp
ljmp
sub
inc
rolb
decb
pop
imul
outsl
mov
sbb
xchg
xchg
jl
test
mov
mov
subl
rorb
in
sbb
cli
std
ss
jno
dec
sub
rsqrtps
fdivr
sbb
sbb
sub
add
mov
jno
ficomps
test
lea
dec
and
or
sbbb
mov
or
mulps
popl
pusha
cmpsb
into
loope
jb
mov
pop
shll
bound
jno
mov
mov
cmp
cmp
jg
aad
sti
add
out
stos
in
or
lds
mov
push
mov
adc
and
jo
add
or
inc
cmp
push
and
sub
fadds
mov
push
cmp
adc
mov
fisttpll
fists
lods
loop
push
cli
ljmp
mov
ret
xchg
xchg
push
sbb
sti
mov
xor
fsubrl
aas
cwtl
push
mov
repz
cmp
and
movsb
std
rorl
pop
lret
mov
jp
arpl
xor
and
in
into
test
bound
jae
add
stos
lock
fsub
push
jnp
in
pop
jno
push
mov
lcall
mov
cli
imul
popf
clc
ret
mov
stos
icebp
jp
movsb
data16
in
addr16
push
jo
adc
adc
xchg
enter
sub
outsb
pop
sbb
push
fists
dec
push
mov
cmp
stos
or
loopne
lcall
mov
cli
and
xchg
lret
int
adc
shlb
out
rcr
inc
out
mov
aas
aas
cmc
pop
adc
mov
repz
mov
insl
fidivrl
push
fidivs
xchg
mov
sub
pushf
dec
pop
imul
shrl
lahf
aad
loop
sbb
std
int
pop
sub
cmp
call
into
imul
push
fistpl
ret
mov
jns
scas
pop
mov
adc
addb
pop
fistpl
outsl
rolb
sti
into
sbb
decb
into
xchg
add
fmul
lret
cmp
out
ret
mov
sbb
cld
lods
in
xchg
outsl
leave
nop
sub
ror
push
sbb
mov
cwtl
jecxz
lret
lods
xlat
out
sub
xor
fbld
icebp
mov
in
dec
or
and
es
popa
adc
sub
xorb
mov
dec
aad
shlb
popa
outsl
mov
xchg
cli
jge
jp
inc
lcall
mov
jp
dec
pop
das
test
enter
data16
cmpl
cmpsb
sub
fsubs
cltd
movsb
movsl
out
inc
dec
push
inc
mov
mov
aad
cmpsb
push
ret
roll
xchg
and
and
mov
xorb
pop
and
xchg
repnz
or
stos
dec
dec
jp
mov
inc
mov
push
jg
call
rcll
mov
mov
lret
cmp
or
pop
sub
lcall
repnz
lcall
mov
imul
inc
iret
lcall
mov
daa
sbb
jle
scas
out
insl
lock
das
push
aam
xor
cmc
xchg
cmpsl
push
xchg
push
xor
push
les
push
leave
fsub
fcomi
shll
cmp
push
rcrb
popa
lods
mov
jp
dec
cmp
mov
and
add
sub
mov
dec
scas
dec
addr16
xchg
lods
pop
repnz
fnstcw
xchg
in
xchg
icebp
cltd
lds
aam
lcall
xchg
gs
mov
jg
push
mov
mov
lea
test
add
outsb
imul
push
add
sbb
fwait
inc
cmp
mov
mov
jb
adc
mov
mov
mov
xchg
repnz
mov
stos
pop
push
pop
mov
xchg
inc
pushf
fwait
push
xchg
mov
push
pop
flds
das
icebp
test
inc
nop
stos
fnstcw
or
sub
xor
mov
pop
and
and
mov
inc
mov
and
push
jl
aam
dec
popa
push
mov
adc
xchg
jge
sub
pop
mov
sub
push
fdivs
aaa
in
xchg
cwtl
push
cli
mov
in
xchg
cwtl
out
sarl
dec
test
inc
popa
subl
mov
lea
es
ds
push
out
jb
nop
icebp
lahf
mov
call
or
aam
outsb
icebp
mov
bound
xor
cwtl
mov
inc
popf
sti
testl
out
test
jae
or
jne
inc
dec
icebp
notl
add
aad
pop
pop
int3
xchg
or
icebp
cwtl
jo
testl
dec
repz
pusha
pop
pop
sbb
mov
out
jns
fnsave
iret
adc
mov
inc
or
xor
ljmp
pop
sbb
aad
pop
mov
dec
arpl
fs
xor
jb
add
sbb
scas
pop
mov
and
pop
ret
mov
rcrl
loop
jg
fisubl
mov
add
repnz
push
outsb
daa
js
iret
shlb
scas
mov
xchg
mov
cld
xor
stos
push
test
mov
dec
sbb
push
jge
pop
out
pop
sbb
mov
inc
xchg
adc
ficoml
pop
stos
mov
pop
jno
xor
dec
add
lods
lret
int3
cli
add
loope
mov
adc
mov
push
lock
orl
lret
xor
pop
pusha
mov
jle
and
push
add
jb
fucomi
scas
int3
lea
sub
dec
addr16
lcall
jecxz
inc
push
insb
xor
cli
sub
dec
jmp
xchg
pop
pusha
imull
push
int
or
sbb
lods
into
pop
lea
enter
aad
add
mov
sub
rcll
or
push
mov
or
dec
inc
out
mov
sub
inc
mov
loope
xor
mov
fldcw
and
add
sbb
stos
xor
adc
xchg
outsb
cmpsb
sarb
lahf
pop
inc
push
xorl
inc
pop
stos
loopne
pop
pop
ret
lret
xchg
mov
pop
int3
bound
popa
arpl
inc
jge
jo
sarl
add
push
popf
and
stc
adc
mov
fldl
add
inc
lcall
inc
adcb
inc
add
mov
int3
test
jl
dec
mov
fisubs
test
push
out
imul
lds
pop
cmp
cmpsl
mov
sbb
sbb
jno
pop
jb
dec
dec
cmc
sbb
sub
shlb
inc
ds
ret
aaa
push
fstps
and
subl
push
and
mov
sbb
enter
pop
int
and
mov
add
dec
cmp
mov
leave
decb
mov
lds
sbb
lea
mov
stos
es
cmp
ljmp
in
std
dec
xor
and
cmc
scas
inc
mov
push
sbb
jg
lret
movsl
xor
shll
shll
sub
pop
mov
xor
jns
std
out
lock
xchg
fs
and
sub
jp
aas
shlb
test
pop
dec
sub
in
inc
mov
jb
dec
aas
xchg
push
int3
addb
add
in
idivb
repnz
ja
and
test
loope
in
mov
fcmovu
orb
loop
addb
sarl
fsubp
stc
mov
pop
sub
xchg
dec
add
xchg
lds
jne
dec
sub
add
and
xchg
pop
xchg
and
jp
test
insl
jge
cmc
xchg
test
cmp
xor
adcl
sub
pop
jae
xchg
cmc
xor
xor
stos
jmp
sub
push
inc
ja
xchg
jo
jb
mov
sti
push
and
icebp
push
xlat
test
pop
fsubrs
and
push
xchg
jno
jne
subl
hlt
or
pop
pusha
idivb
pop
mov
and
ret
dec
stos
mov
pop
or
inc
push
pop
ret
add
push
lea
sbb
loop
in
xchg
lods
xor
push
repnz
inc
fnstcw
ljmp
jp
icebp
mov
jbe
mov
push
pushf
test
inc
rcrb
adc
test
or
mov
test
cld
push
sbb
jnp
and
leave
mov
cwtl
jne,pn
scas
pop
push
cmp
push
ljmp
dec
jmp
dec
leave
clc
mov
mov
stc
adc
xor
mov
mov
popf
xor
and
push
and
les
or
shll
fisttps
ret
rcrl
clc
mov
inc
std
cli
ds
not
xchg
and
mov
rcrb
lods
jne
clc
addr16
vcvttsd2si
or
xor
or
fld
inc
in
loope
cmp
pop
outsl
jmp
cmp
loopne
add
jae
xor
add
lea
cmp
xor
sbb
fs
add
sbb
aaa
icebp
mov
or
hlt
pop
addr16
aas
xchg
psubq
loope
jns
jo
test
push
dec
js
lds
ret
loopne
into
outsb
inc
adcb
mulb
cld
iret
test
xor
pop
lods
shll
jno
je
lcall
imul
pushf
mov
xchg
dec
dec
dec
fcmovbe
xchg
mov
jge
inc
mov
adc
repnz
inc
pop
add
jbe
push
into
enter
lret
sbb
lcall
inc
ds
ljmp
dec
adc
mov
mov
lret
add
mov
jl
mov
test
pusha
add
or
loope
std
cs
push
xor
imul
adc
dec
out
xchg
mov
out
add
sbb
pop
test
push
or
and
xor
or
roll
jno,pn
jle
fiadds
xchg
dec
loop
jmp
imul
adc
adc
std
jnp
and
sbb
cld
in
movsl
add
sbb
xchg
je
jp
sbb
and
in
pop
lahf
jge
mov
jne
push
and
test
pop
sbb
orl
call
test
scas
out
pop
je
roll
icebp
pop
and
stc
push
sbb
xchg
notb
arpl
loop
out
je
in
push
mov
push
push
inc
testl
leave
cmc
out
stc
ja
out
fbstp
rcll
mov
xor
mov
and
jae
sbb
xor
movsb
pop
mov
adc
push
cmp
das
in
lods
mov
mov
sti
sbb
jo
popl
filds
lcall
and
sti
push
lret
hlt
in
addr16
out
imul
push
fildl
out
jecxz
out
dec
or
cmp
out
hlt
loop
jge
pop
push
imul
push
xor
popw
test
mov
mov
leave
movsl
into
sub
ljmp
insb
lret
sbb
loop
mov
aam
inc
push
call
xor
popa
jmp
stos
into
and
adc
mov
push
pop
xor
pop
stos
xchg
scas
push
jmp
or
andb
outsl
or
ret
std
aam
sbb
ja
mov
pop
mov
dec
sub
and
jle
cmpsb
testb
pop
js
cmp
dec
aam
pop
test
mov
lds
xor
add
mov
pop
scas
jnp
xchg
sbb
cmpsb
in
jge
cli
bnd
sbb
xor
mov
into
pop
std
fidivrs
loop
icebp
xchg
stos
mulb
push
xlat
xor
pop
xor
push
stos
aam
dec
pop
test
aas
pop
add
shrb
sbb
lds
mov
fldl
imul
jns
xlat
imul
imul
push
popf
push
sub
shrl
pusha
xchg
push
and
xchg
jb
jp
dec
scas
rclb
addl
jnp
not
imul
mull
or
pop
xchg
sub
mov
sysret
movsl
push
cs
pop
xchg
mov
lds
cltd
xchg
add
sub
mov
push
aas
es
test
testb
in
xchg
insl
pop
lahf
sub
adc
fldl
ss
mov
addr16
clc
fwait
jle
out
push
and
lods
inc
inc
into
push
cs
add
mov
sub
xor
out
cmp
jle
insb
mov
movsb
rol
mov
push
jmp
ret
roll
mov
mov
fistl
jnp
movsb
jne
daa
bound
and
and
mov
repnz
out
outsb
scas
mov
adc
divl
and
sub
outsb
cld
filds
stc
xchg
push
stos
inc
lods
jns
cmpsb
dec
pop
push
pop
in
xor
adc
ss
pop
push
jmp
addb
add
cld
add
testb
lret
out
fiaddl
or
imul
out
das
or
popf
sub
or
inc
test
imul
jbe
mov
loopne
enter
pop
adc
sahf
dec
iret
inc
sbb
xor
sarl
pusha
jns
inc
or
cld
push
fidivs
xchg
and
pop
fstp
push
pop
fists
mov
aam
jno
jno
dec
xor
cmp
xor
jb,pn
test
dec
fwait
rorb
and
iret
pop
aad
push
inc
push
adc
test
ror
sbb
mov
std
jns
and
gs
outsl
bound
ret
add
inc
mov
or
cltd
or
and
adc
test
rorb
sbb
adcl
movl
out
pop
jno
and
xor
call
lods
js
or
dec
scas
data16
arpl
jbe
pop
add
in
shrd
cmpsl
fdivl
mov
sbb
cmp
and
and
data16
add
xchg
jge
negl
sti
dec
sbb
jns
push
lret
insl
push
mov
jae
imul
rcrl
sub
insb
jno
inc
cmp
push
dec
ljmp
loop
cs
pop
in
sbb
lods
or
mov
mov
push
sub
push
pop
repz
jo
jmp
lahf
or
mov
push
push
sub
mov
shl
imul
mov
movsb
push
mov
hlt
iret
xchg
mov
mov
add
and
nop
add
std
cmp
minps
outsb
clc
adcl
in
adc
jno
xchg
inc
into
mov
out
jo
cwtl
xor
gs
and
push
in
lds
mov
fcoms
lock
sbb
lds
cmp
cwtl
mov
or
inc
pop
lcall
and
inc
sub
movl
or
xchg
jmp
jbe
inc
xchg
fdivrs
pushf
arpl
pop
lahf
mov
fdivrp
mov
mov
ret
fstpt
clc
pop
xchg
out
imul
adc
xor
mov
lock
sub
jne
shll
aaa
cmpb
insb
hlt
dec
inc
mov
in
dec
cmp
test
addl
fidivs
sbb
aam
out
andl
testl
notl
dec
fdivs
ret
ficompl
and
loop
push
cs
sub
cs
iret
shlb
or
in
ret
xor
mov
inc
or
mov
int
ja
test
mov
xchg
push
sbb
dec
fstps
enter
push
add
mov
psadbw
add
and
push
push
fs
loope
int
aad
xlat
cmp
mov
packsswb
icebp
adc
push
lds
dec
and
inc
dec
xor
jge
imull
fidivl
inc
pop
std
xchg
sti
and
inc
lcall
fiadds
inc
ss
mov
subl
data16
jae
jae
add
daa
imul
out
jne
cld
mov
mov
add
push
pop
push
jns
or
repnz
cs
sti
cmp
icebp
orl
dec
jae
pop
roll
lods
jnp
mov
enter
push
jl
xchg
cmpsb
out
in
jg
pop
movsb
and
xchg
push
cmc
mov
inc
mov
pop
lds
loop
and
outsl
arpl
mov
cmp
out
movl
xor
imul
out
call
push
cltd
call
xchg
lock
sahf
pop
cmp
dec
pmulhw
and
insl
or
outsb
lock
pop
sbb
jns
fiadds
pop
mov
add
push
xor
cmp
pusha
decl
mov
out
sub
shlb
sahf
mov
in
aam
sbbl
cli
push
insl
divl
mov
adc
or
push
mov
js
ljmp
lods
adc
mov
add
cli
enter
inc
dec
jbe
or
or
pop
push
sub
jle
jle
jp
test
pusha
iret
iret
jmp
adc
pusha
stos
andl
cmp
mov
mov
pushf
popf
and
jl
mov
xchg
push
sbb
ss
inc
jnp
stc
push
ret
fistpl
mov
push
or
lock
fnstsw
sbb
sbb
jb
ret
mov
push
sub
sti
pop
adcb
aam
xchg
add
mov
cli
inc
mov
dec
jae
sbb
shrb
ror
jl
cmp
jbe
insb
mov
sub
mov
pcmpeqb
out
mov
jl,pn
mov
adc
cli
or
cmp
call
arpl
js
jbe
lcall
mov
loopne
enter
test
and
das
mov
cwtl
jno
lea
shlb
mov
aaa
je
iret
sbb
add
test
jns
jbe
es
cld
xchg
mov
shll
in
incb
sbb
fidivl
sbb
push
dec
mov
in
and
xor
mov
mov
jno
mov
aaa
icebp
loopne
movsl
cmpsl
dec
lcall
inc
and
iret
pop
sti
push
and
add
in
cli
ds
ja
and
cld
jmp
dec
ss
mov
mov
pop
sbb
inc
add
lcall
xchg
fdiv
mov
jge
fistpl
iret
jnp
jmp
lret
or
ret
xchg
jnp
jo
or
xchg
fadd
mov
pop
iret
push
lea
inc
in
dec
sbb
pusha
adc
or
push
je
fs
cltd
xchg
mov
in
js
int
inc
lods
aad
jecxz
dec
popf
sub
in
mov
pop
fwait
data16
test
push
mov
outsl
outsl
mov
or
cmp
ss
out
mov
xlat
cmpsl
jp
and
insl
mov
xor
lods
or
adc
pop
lock
in
scas
and
fnstsw
cli
insb
and
mov
sbb
mov
jl
sbbb
push
jbe
sbbb
test
fstl
xrelease
xchg
sahf
mov
fnstcw
push
scas
pushf
stc
inc
lcall
popa
cmc
in
jle
ja
adc
lds
push
jb
push
sbb
dec
dec
icebp
lahf
aaa
sbb
lret
mov
and
lods
out
pop
jge
inc
fldl
and
fnstcw
imul
adc
add
jb
jg
les
in
dec
popf
dec
mov
stos
or
js
je
cltd
cmpsb
movb
jg
cs
ret
inc
dec
fimull
sbb
aam
lcall
pop
test
scas
ja
mov
ja
dec
sub
movsb
mov
cmp
andb
adc
jo
xchg
notl
shlb
push
pop
push
loop
push
push
sbb
mov
jg
adc
clc
pop
pop
xchg
jp
rcrb
in
pop
ficompl
sbb
pop
sub
mov
push
js
aaa
pop
and
popa
aam
in
loope
lea
les
mov
sbb
mov
mov
push
call
xchg
notl
addb
lods
call
icebp
push
je
mov
cli
cmp
sub
xchg
push
xchg
leave
std
cli
jne
lahf
pop
addb
jmp
in
xor
arpl
daa
cmp
mov
mov
dec
sbb
push
sbb
push
and
dec
jmp
sub
iret
test
bound
jnp
test
mov
gs
test
add
jge
test
mov
or
add
mov
aaa
stc
cmc
divb
cmp
sbbl
xchg
jnp
insl
xor
ds
inc
xor
cmc
jne
mov
je
test
jecxz
cmpsl
mov
push
or
and
add
add
data16
push
cmp
lods
mov
sahf
push
lods
mov
mov
ss
mov
cmp
pushf
pop
mov
sbb
sub
adc
mov
push
hlt
into
leave
push
add
sub
test
dec
cli
jnp
add
jmp
pop
pop
or
add
popf
out
or
scas
cmpsl
sarb
or
sbb
int3
adc
std
mov
cs
inc
iret
les
xchg
lock
lods
jb
scas
data16
scas
fisttps
fildll
cmc
in
into
mov
push
xchg
shll
ret
push
cld
cmp
fsubrl
mov
loop
cmc
dec
fidivrs
pushf
or
outsl
cld
xlat
fcmovnb
out
es
in
arpl
pop
lods
lcall
aam
pop
xchg
outsl
push
add
loopne,pn
sub
les
mov
or
shlb
pop
test
jmp
loop
mov
mov
cmp
hlt
je
inc
lret
and
mov
cmpsl
pop
add
adc
les
inc
jl
imul
subl
or
push
pop
cld
je
decb
pop
loopne
cld
inc
mov
xor
out
jo
lods
loope
pop
sbb
xchg
mov
shrl
jnp
inc
xchg
gs
cmp
xchg
and
sarl
sub
in
fs
data16
xor
out
mov
push
rep
dec
mov
mov
sbb
dec
xchg
adc
ljmp
mov
cmp
loope
aad
sti
imul
dec
sub
jg
icebp
ss
mov
push
ja
and
jmp
pop
ret
or
sbb
lcall
adc
iret
clc
ret
cmp
lret
lahf
out
xor
mov
iret
insl
fists
sbb
test
cmp
scas
xor
mov
mov
test
iret
lock
xchg
mov
hlt
inc
movsb
pop
leave
stc
iret
ficompl
push
lods
mov
cmpsl
xor
mov
iret
add
loop
mov
push
enter
xchg
daa
call
imul
arpl
jnp
cwtl
insl
and
into
mov
ds
je
xor
xor
push
aaa
push
inc
pop
pop
add
sbb
mov
xchg
pop
sub
dec
sub
adc
loope
inc
lret
enter
mov
loope
cmp
ja
jl
es
jge
dec
repnz
pop
or
push
subb
loope
jmp
adc
stos
adc
push
cmp
clc
pop
lods
test
cmp
sub
mov
pop
fs
mov
popf
cmp
jle
imul
pop
xor
dec
mov
xor
inc
out
arpl
sti
fidivs
insl
add
rol
in
pop
adc
and
cwtl
cmpsb
push
adc
sub
iret
or
call
daa
test
loop
mov
add
mov
jmpw
pop
roll
js
mov
aad
js
in
cmpsl
les
aad
sti
scas
ja
mov
enter
pusha
cltd
pop
mov
mov
ja
lcall
cmpsl
inc
lahf
inc
popl
cmp
xchg
loop
mov
cmpsl
sahf
push
clc
outsl
adc
and
pop
aad
xor
out
mov
sbb
incl
iret
fwait
jmp
jb
movsb
into
and
lock
pop
shll
xrelease
cld
push
call
movsl
dec
or
test
mov
daa
mov
lret
enter
fnstenv
dec
jae
inc
movsl
test
ljmp
dec
adc
hlt
mov
mov
scas
inc
in
fmul
adc
fs
fsubrp
lods
stos
je
subl
fisubl
add
lods
inc
dec
pushf
das
fs
repnz
iret
xor
jae
stos
loope
sbb
dec
movsb
sbb
repnz
add
push
mov
xor
dec
cmp
sbb
movsl
shlb
js
push
insw
mov
lahf
inc
jmp
shll
or
and
enter
aas
mov
clc
add
pop
sbbb
nop
fs
fstpt
inc
mov
or
mov
xchg
repnz
dec
lret
mov
fdivs
lret
mov
xor
pop
rcr
push
sbb
imulb
fcomi
inc
push
or
idivb
add
cwtl
dec
shl
mov
in
test
enter
xor
into
imul
loope
push
jl
sub
data16
jae
xor
dec
jns
cs
in
mov
sub
and
insb
mov
dec
rcrb
jg
sub
in
mov
cmp
cmp
addr16
mov
cmpps
aas
scas
sbb
mov
nop
sub
adc
push
in
sti
inc
and
jns
xor
add
lods
cmp
int3
movsl
pushf
repnz
cmp
loopne
je
popf
push
pop
shrb
sti
scas
popl
aad
scas
test
test
ret
pop
daa
insb
addl
dec
repz
push
mov
jl
nop
jl
add
inc
test
in
sbb
ds
xor
test
fidivs
test
sub
xor
subb
cs
jae
outsb
sub
mov
pop
cli
fs
mov
pop
out
lods
xchg
dec
add
out
fwait
cmpsl
outsb
movsb
xor
xlat
insl
jae
aad
adc
das
add
dec
out
loope
aas
push
pop
cmp
xor
lea
mov
stos
or
mov
pushf
mov
and
jo
fcoml
test
lahf
pop
icebp
popa
rorl
mov
inc
mov
sarl
scas
fmulp
or
lds
xchg
sbb
lcall
push
ret
xorl
push
fmuls
test
mov
pushf
ret
inc
pop
fcmovbe
fnsave
adc
movsb
jae
sti
test
mov
addb
inc
stos
js
call
popa
fcoml
jbe
fwait
sub
outsb
dec
data16
mov
mov
xorb
cltd
gs
adc
push
cltd
pop
push
push
bound
fdivrl
out
mov
testl
je
or
push
jl
push
nop
mov
xor
xchg
mov
xchg
sbb
pop
in
add
gs
leave
psubb
mov
pop
rolb
int
rorl
aad
inc
adc
in
lock
mov
xchg
adc
lock
clc
aas
dec
aas
test
sub
outsb
add
lods
jp
adc
jmp
ss
sub
bound
adc
push
pop
push
hlt
filds
fs
xchg
and
pop
jmp
mov
mov
push
mov
sbb
aad
cmp
dec
loopne
les
daa
push
xchg
mov
xlat
adc
pop
leave
and
je
sbbl
hlt
pop
test
mov
out
dec
out
sub
xchg
mov
lcall
lods
sbb
adc
cltd
mov
fcmovbe
sbb
mov
adc
mov
arpl
in
fsubrl
test
stos
mov
mov
out
ss
jle
mov
cld
xchg
sbb
mov
mov
sub
insb
pop
mov
cmp
add
mov
fnsave
lahf
fstpt
sbb
sub
nop
xchg
nop
loopne
jl
pop
js
fisttpl
nop
push
aas
push
fs
cli
dec
mov
loopne
and
jnp
loop
icebp
mov
add
push
ret
push
data16
mov
cmp
dec
out
aaa
push
rolb
sbb
adc
sbb
inc
ja
push
mov
push
sub
addr16
pop
add
dec
push
cltd
jne
repnz
push
or
cli
ds
enter
cmp
dec
sub
movsb
rolb
and
mov
sahf
or
mov
mov
push
pop
or
sub
pop
add
lds
xor
pop
loopne
insl
pop
push
arpl
sbb
iret
int
mov
xor
dec
jae
jl
test
fildll
icebp
shll
in
pop
sbb
lods
adc
pop
mov
divb
lods
popa
push
cmp
mov
push
imul
or
or
shl
dec
jge
rclb
mov
rorb
mov
xor
mov
int
or
sub
adc
clc
lods
fcomps
mov
sbb
mov
xchg
test
or
mov
jp
inc
repnz
and
xchg
ljmp
repz
add
jmp
lahf
push
cltd
inc
jle
daa
and
icebp
fstl
sub
fldcw
fsubs
adc
inc
sbb
insl
lret
mov
mov
dec
dec
cmp
fnstsw
movb
jge
fisttpll
ds
mov
adc
or
jns
icebp
push
cltd
inc
add
adc
aaa
and
in
iret
sarb
stos
sbb
add
jne
loop
cld
sub
or
inc
cmp
push
sbb
cli
push
sahf
cwtl
or
outsb
nop
jo
xor
sbb
pop
cmpsb
ror
push
inc
ja
fnop
push
mov
mov
popa
add
pushf
push
aas
and
into
adc
nop
xchg
call
xor
sbb
push
in
sub
call
insb
inc
cltd
xchg
cmp
shrb
scas
mov
push
cmpsb
out
enter
jg
xchg
pusha
pushf
jmp
xchg
push
pop
sub
mov
cmp
pop
js
mov
xchg
mov
push
mov
outsb
scas
insb
pop
mov
iret
sub
mov
add
fistpll
lods
je
cmp
sahf
inc
lret
fisubrs
mov
lahf
notb
mov
mov
mov
sbb
call
repnz
shlb
outsb
ljmp
fcmovnu
sub
or
pop
push
fisubrl
cltd
cld
mov
dec
fwait
adc
fsubrl
sub
xlat
dec
call
adc
hlt
out
popa
fnsave
mov
push
pop
scas
xchg
and
fidivs
fwait
rcr
in
sbb
roll
imul
adc
lods
pop
and
add
ret
hlt
push
dec
dec
mov
mov
dec
and
push
pop
sbb
mov
int
xchg
pop
es
aaa
cld
xor
sbb
test
cmp
pop
jp
into
outsl
fistps
nop
mov
push
pop
mov
cwtl
call
mov
arpl
sbb
push
cltd
mov
add
push
cmp
cmpsb
cmpsl
orb
push
mov
push
icebp
mov
pop
adc
pop
movsl
jecxz
cmpl
pop
out
or
dec
mov
out
mov
adc
adc
mov
push
popa
sbb
bound
mov
lock
mov
and
mov
inc
scas
mov
in
mov
stos
mov
cmp
ror
fidivrl
xchg
dec
push
insl
jae
adc
arpl
sub
push
negl
pop
stos
test
movsl
ret
xchg
sahf
xor
dec
xacquire
dec
cmpsb
pushf
ret
xor
inc
nop
rol
push
hlt
or
mov
sbb
aaa
stos
jecxz
push
in
xor
loop
push
mov
jbe
imul
push
xor
dec
call
push
popf
xchg
push
insl
scas
rcpps
jno
loope
push
clc
push
clc
lret
and
and
sbb
xchg
xchg
sbb
jmp
ja
das
jo
in
imul
and
xchg
sub
xchg
mov
fsts
sbb
les
aad
fbld
mov
scas
incb
dec
or
imul
push
cmp
mov
sub
jle
mov
rorl
in
cmp
popf
dec
aam
push
fcmovbe
xchg
mov
pop
jp
pop
int
adc
pop
int
fisubs
hlt
cmpsl
and
mov
push
pop
jne
fcmovu
out
mov
mov
out
xchg
xor
mov
loop
sbb
push
cmp
sahf
movsl
das
inc
mov
fidivrs
cwtl
pop
addl
je
cmp
fisubrl
or
push
lcall
and
or
cmc
mov
mov
lret
push
or
ret
inc
mov
pop
xchg
jno
inc
lods
mov
rcll
cli
jns
repnz
add
jl
sbb
loope
es
mov
in
das
sub
out
cmpsl
test
int3
sbb
mov
ret
cli
xor
ljmp
dec
fisttpll
loopne
push
in
aam
lret
mov
cmpxchg
inc
jae
inc
dec
dec
movsl
mov
aam
std
pshufw
add
loope
sub
mov
pop
aaa
in
jg
pushf
into
das
das
int
fisubrl
incl
xlat
mov
mov
push
jns
dec
out
mov
in
sarl
or
stc
ret
test
das
dec
xchg
xor
repnz
stos
in
jne
loop
in
xlat
cmpsb
cmpsb
cmpsl
call
into
hlt
cmp
mov
dec
fdivs
jp
mov
inc
and
movl
out
dec
repnz
ja
cmp
ja,pn
inc
cwtl
int3
sub
pop
into
enter
push
pop
fldz
dec
push
loopne
into
ret
xchg
mov
cltd
sahf
ret
and
jnp
jno
pop
pop
inc
push
repz
rcr
mov
or
fildl
and
jmp
movb
fs
and
fbld
sti
sub
scas
and
mov
inc
pop
aas
sub
pop
xor
dec
stos
push
push
stos
aas
pop
xchg
xlat
stc
mov
lret
mov
jns
xor
or
clc
sbb
push
sar
outsb
push
fdivl
lds
mov
addb
lea
mov
cs
scas
mov
stos
addr16
hlt
jmp
and
xor
loopne
push
loopne
les
aam
loop
pop
movsb
adc
fisttpll
in
mov
xor
xchg
aam
and
or
daa
fmulp
popf
jne
test
fwait
mov
xchg
fucomp
mov
clc
inc
lahf
jp
pop
pusha
inc
call
xchg
push
cmp
lret
cmpsl
dec
orl
push
fdivrp
xor
jmp
and
mov
gs
push
xchg
mov
insb
call
iret
pop
ret
in
cwtl
adc
fwait
pusha
add
popf
and
mov
pop
xor
add
rolb
cmpsb
dec
dec
pop
jne
nop
lock
add
mov
mov
xchg
das
pusha
or
inc
orb
mov
jns
scas
push
stos
aam
jne
ds
hlt
adcl
mov
test
sahf
mov
sbbl
mov
shlb
aaa
dec
scas
sub
inc
xchg
aas
add
sbb
and
les
dec
pop
fwait
outsb
lcall
sbb
push
push
adc
xchg
push
mov
push
call
inc
aam
jno
sub
jmp
pushl
mov
mov
add
inc
in
aam
repz
mov
xchg
int3
popa
cmp
subb
lret
mov
movl
rcll
fsubl
enter
mov
inc
xchg
ljmp
push
mov
xchg
jb
and
adc
repz
int
std
movsl
fdivl
in
fmul
pop
in
pop
pop
mov
or
stos
lock
push
adc
jno
mov
lods
out
fwait
hlt
cwtl
test
jp
inc
sub
inc
inc
and
cmp
ret
and
cmpsb
jp
mov
cs
jg
fwait
dec
mov
mov
add
loop
adc
repz
inc
ljmp
mov
xchg
pop
sbb
imul
in
in
mov
orl
ljmp
or
push
xchg
adc
sarb
adc
call
roll
cmp
or
les
xor
or
test
pop
insl
xor
adc
jecxz
lret
jne
in
xchg
jnp
xchg
jnp
add
das
adc
scas
lahf
fdivrl
dec
sar
xlat
cld
mov
shll
push
lahf
or
jnp
es
mov
aas
dec
sbb
adc
test
cs
jl
insb
mov
cmp
jae
add
sbb
mov
std
stos
push
imul
insl
sbb
fnstenv
loop
cmpl
out
mov
imul
fimuls
fs
mov
cmp
pushf
sbbb
cli
and
notb
shrl
add
bnd
push
mov
inc
mov
cmp
pop
popf
pop
ds
mov
or
xchg
outsl
imul
shll
sbb
add
push
jae
sbb
fcomip
shrb
jno
sub
fists
iret
mov
inc
imul
jno
pop
ds
mov
fiadds
inc
aad
cwtl
add
gs
sub
fcoms
psubsw
sahf
adc
jae
pusha
xchg
pop
ret
dec
mov
ss
movsb
lcall
jne
dec
add
lret
adc
lahf
jg
call
xchg
mov
call
sbb
popf
rolb
xchg
gs
mov
bound
mov
fisubl
out
dec
out
jno
test
lods
jle
dec
stc
cmp
inc
or
repz
or
cmp
jnp
add
stc
aad
xor
iret
mov
lahf
sub
inc
push
pop
mov
xchg
call
mov
add
clc
adc
sbb
sub
mov
jae
jno
mov
mov
iret
jns
pop
cmc
dec
inc
enter
loop
inc
cmp
roll
sbb
jnp
pushf
push
sbb
xchg
std
sub
cmp
xor
adc
cmpsb
adc
lcall
push
inc
lods
sub
lods
inc
ret
push
xor
mov
in
aaa
cwtl
dec
scas
test
mov
fcmovu
inc
mov
arpl
pop
pushf
sub
inc
add
loop
mov
or
push
jbe
mov
das
sarl
sahf
adc
movsl
cmp
jle
mov
sbb
mov
sbb
loopne
xchg
inc
movsl
or
outsb
shr
mov
jae
lods
jg
cwtl
movsb
xchg
or
adc
xor
jb
test
jo
push
movsb
loop
fdivl
xor
adc
addb
outsl
add
ret
mov
inc
fsubs
sbb
fidivrs
push
add
and
ss
inc
fbld
imul
pusha
mov
stos
push
and
and
xchg
mov
pop
enter
loope
in
loop
es
mov
xchg
leave
sbbb
xor
xchg
and
mov
lret
jecxz
in
fbstp
push
dec
mov
lea
ficomps
in
push
pop
aad
mov
outsb
push
xchg
icebp
data16
xchg
stc
lret
or
imul
arpl
popf
adc
cmp
iret
ds
xlat
lods
movsb
faddl
repnz
mov
xchg
mov
mov
jmp
out
adc
sbb
mov
inc
jnp
loopne
push
cli
cmp
lock
out
or
push
pop
cmpsl
aad
nop
jmp
scas
outsl
pop
mov
aas
notb
rcr
sub
insl
push
adc
mov
xor
fnstenv
jecxz
push
cmp
loope
gs
shlb
mov
mov
jecxz
mov
out
sbb
jbe
and
adcb
test
bound
test
and
dec
mov
outsb
clc
inc
out
adc
inc
add
push
test
movsl
mov
mov
jmp
dec
insb
fdivrp
xor
and
lds
inc
jp
popa
and
cmp
xor
imul
repnz
push
pop
xchg
and
negb
or
xchg
ret
fisubrl
inc
push
mov
xor
stc
cli
add
jg
pop
and
xor
ror
or
arpl
push
dec
and
adc
popl
mov
mov
popf
insl
pop
clc
inc
sub
cmp
push
sub
es
jle
js
or
repz
lret
pop
jl
hlt
xchg
push
js
adc
lds
or
add
stos
lods
out
cmc
lods
jmp
dec
xchg
or
std
pop
pop
jg
mov
loope
imul
mov
and
sbb
sbb
mov
scas
es
rorl
hlt
mov
popl
cmpsl
cmp
pop
cmp
outsl
mov
out
imul
push
mov
int
pop
push
pop
fs
je
push
sbb
out
jge
cmp
mov
xor
jo
mov
out
inc
push
push
mov
fmul
or
out
adc
sbb
cmp
lea
xchg
in
xor
push
jo
mov
mov
cwtl
es
imul
jnp
mov
addb
out
mov
popf
push
mov
test
bound
jne
jnp
sub
int
sub
iret
test
and
loopne
cmp
sub
and
xlat
outsl
jg
in
insl
mov
mov
xchg
sar
mov
je
mov
int3
lcall
xchg
shlb
xorl
inc
and
adc
cmp
jp
jbe
imul
aas
add
aas
les
push
cld
cmp
jle
sub
ror
pushf
shl
push
repnz
imul
adc
int
jmp
rcl
emms
push
jmp
bnd
mov
sbb
cmp
cltd
sbb
hlt
inc
repz
icebp
test
sbb
pop
jnp
sub
test
lahf
cmp
cltd
fwait
shll
jns
add
in
dec
push
gs
ljmp
add
mov
push
mov
ret
jae
fst
xchg
cli
dec
adc
push
adc
lret
outsb
and
in
or
jle
daa
popf
inc
jns
mov
mov
and
inc
cmp
sbb
das
inc
or
or
push
icebp
mov
data16
or
or
pusha
pop
insb
pop
mov
std
cs
add
add
pop
mov
or
repnz
jge
xchg
jmp
lock
ret
cmp
pop
push
jmp
dec
fsts
out
and
push
test
pop
inc
sarl
int3
test
sub
xor
inc
loop
sahf
push
pushf
das
lcall
stc
cmpsb
les
cmpsl
mov
sbbl
and
sarl
mov
jecxz
cmp
xchg
aaa
push
rorl
out
ret
into
fprem1
jmp
lds
repnz
mov
lcall
mov
dec
movsl
ds
aas
pusha
loop
addb
sub
jp
dec
in
call
jmp
mov
pusha
imul
imul
xchg
out
ljmp
insl
sub
pop
loopne
fs
xor
les
jnp
adc
leave
pop
xlat
mov
mov
add
mov
test
push
pop
mov
xlat
jg
push
shll
negb
adc
jp
cmp
loope
dec
mov
cmpsl
cmc
scas
aas
mov
or
mov
mov
addl
xchg
pop
mov
sti
cmp
outsb
push
jnp
iret
ds
jmp
sbb
pop
popf
aaa
cmp
lret
xor
idiv
jbe
xchg
cwtl
jns
or
shlb
pop
and
or
std
out
daa
push
and
in
int3
es
dec
leave
push
jo
push
stc
add
add
push
cmp
push
xor
mov
jns
jb
sbb
mov
shrb
loope
push
test
roll
gs
jae
popa
rcll
mov
mov
sub
mov
jecxz
push
ret
loope
idivb
push
and
push
das
mov
jbe
fbstp
out
jl
add
stos
add
pop
and
bound
loopne
fsubrs
scas
and
sub
and
pop
add
mov
imulb
cmp
int3
xlat
push
les
lods
fwait
dec
iret
insb
push
repnz
repz
xchg
mov
pop
loop,pn
shl
cmp
cmp
inc
data16
mov
adc
mov
pop
mov
pop
xchg
repnz
sarl
mov
lds
pop
out
scas
mov
xor
pop
or
aam
or
and
add
popf
add
jbe
dec
add
jb
adc
cmp
sbb
add
xor
xchg
insb
mov
adc
add
cmpsb
xor
mov
or
shr
and
or
fbld
pushl
xor
mov
mov
push
xlat
push
ja
ja
nop
pop
es
mov
jmp
icebp
lcallw
and
pop
lea
inc
lods
xchg
sbb
clc
fs
mov
mov
adc
lahf
loop
sub
xor
sub
xchg
xlat
scas
lds
test
mov
inc
sbb
sahf
or
arpl
mov
xchg
mov
fcompl
nop
jecxz
les
push
cld
push
xlat
rcll
adc
or
out
cs
rclb
cmp
dec
clc
jne
xchg
test
xor
xchg
mov
push
aam
push
adc
movsl
cmp
add
pop
mov
add
subb
andl
jbe
stc
test
cld
push
ret
xor
xchg
push
outsb
push
std
dec
sub
mov
mov
popa
mov
cmp
mov
mov
stc
jb
sbb
xchg
call
imul
or
or
mov
push
int3
scas
subb
sbb
mov
xchg
xor
fdivrl
pop
jbe
fcmovnb
adc
mov
std
int
mov
push
xor
adc
mov
xchg
or
bound
push
cmp
cmp
lcall
gs
push
push
inc
and
dec
or
inc
fwait
inc
jns
ljmp
popa
lcall
loop
std
lods
sub
mov
sbb
in
jne
into
lret
cmc
std
push
jnp
pop
sbbl
sahf
test
mov
dec
xor
cmp
mov
cmp
outsb
in
fmull
mov
cmp
sub
iret
sub
adc
sub
push
mov
push
and
mov
cmp
pop
pop
ret
add
andb
orl
dec
mov
adc
in
insb
add
mov
pop
pusha
dec
lret
sub
dec
jl
clc
das
call
fistpl
data16
repz
adc
jmp
fnstsw
or
or
jb
fidivl
jbe
incb
lcall
adc
aad
loop
leave
rorb
loop
ret
mov
lretw
jne
pushf
jo
push
cmp
xor
xchg
xchg
aaa
cmpl
lock
mov
inc
xchg
repz
jle,pn
cmc
dec
notb
add
pop
insl
test
dec
pushf
push
pop
and
xchg
xorb
lds
rcrl
inc
pop
cmp
loop
loope
in
mov
xchg
dec
add
sahf
cli
xchg
dec
rcl
push
std
mov
fcomip
xor
jne
cwtl
xlat
fidivs
clc
cmp
loope
push
sti
push
aam
push
loop
adc
add
mov
lods
fdivs
lret
add
flds
xor
adc
mov
ret
add
lea
and
add
xor
sahf
jmp
add
fisttps
aad
movsb
fcmove
std
and
and
test
fldcw
xchg
cld
int
xchg
vmovdqa
test
dec
sarl
ss
outsl
aam
xor
cmp
xor
scas
cmc
add
xchg
jle
adc
subb
stc
sub
pop
jns
test
push
dec
mov
inc
jp
push
xchg
cmp
hlt
push
mov
add
dec
dec
scas
popf
mov
or
push
xchg
imul
push
ljmp
jle
cmp
jmp
jge
das
adc
cmc
aaa
xlat
dec
inc
jl
cmp
cmp
adc
in
shlb
cltd
mov
mov
insb
push
xor
xchg
and
stos
jno
iret
outsl
xchg
repz
push
pop
xchg
push
aad
cli
jno
xchg
cmpsl
rcrb
push
es
sbb
inc
incb
ljmp
scas
loope
js
push
sub
cmp
not
xchg
notl
ljmp
push
dec
mov
aas
xchg
dec
imulb
test
mov
popa
sbb
popl
push
adc
dec
das
inc
loopne
and
and
and
jo
sbb
lods
sbb
fmull
inc
xchg
jne
in
sbb
icebp
xchg
cmpsb
adc
popf
aam
repnz
popf
daa
mov
out
and
pop
fcoms
push
dec
pop
fstl
mov
rclb
cmp
cmp
sarb
cmp
sub
aaa
xor
mov
fsubp
fildl
inc
mov
and
and
out
aam
test
scas
sbb
insb
xchg
push
adc
cltd
fildll
ljmp
insl
mov
out
and
rcll
pop
ss
sahf
mov
cwtl
mov
jg
ror
jmp
out
sbb
out
clc
adc
addr16
xor
les
jmp
jg
je
cmc
in
clc
stc
sub
pop
scas
xchg
dec
insb
andb
addb
push
pop
add
pusha
xchg
addb
out
dec
inc
daa
sbb
jge
dec
notb
in
sub
push
sub
stos
pop
je
xchg
adc
cwtl
aad
addr16
test
lock
cmc
ror
jnp
xor
cmp
xchg
jns
ficomps
out
imul
int
mov
jge
inc
adc
mov
and
les
repz
xchg
mov
inc
sub
mov
xchg
cmc
and
xchg
mov
sbb
mov
add
push
jnp
lret
mov
cmp
divb
frstor
jle
jno
mov
mov
xor
testl
mov
cmp
sub
insl
lret
loop
push
pop
push
cwtl
jecxz
mov
in
clc
inc
adc
sbb
icebp
sbb
dec
and
shl
int3
xchg
cmc
mov
arpl
pop
stos
pop
pop
xchg
jle
imul
xchg
je
sbb
adc
shlb
lret
xor
sub
ret
jg
xor
decl
push
sbb
mov
pop
xchg
ljmp
aas
pushf
xor
int
ret
pushf
pusha
mov
xchg
pushf
fnstsw
xor
clc
adc
adc
sbb
or
add
sbb
inc
movsl
inc
imul
ret
lods
loop
into
cmp
push
sub
jp
push
adc
das
in
xor
cld
sti
lcall
xchg
mov
jle
sbb
test
mov
dec
adc
cmpsb
mov
cmp
add
ljmp
jne
mov
add
mov
out
xor
fisubrs
mov
jecxz
and
sub
dec
scas
mov
xchg
decl
je
xor
mov
fisttpll
out
icebp
pop
cmp
push
sbb
in
in
popf
pop
js
mov
test
adc
insb
sbb
data16
jns
cmp
dec
push
loopne
mov
jb
jno
popf
dec
pop
fldt
jg
rol
ljmp
lret
cmp
mov
cs
and
xor
cmp
lods
inc
sub
lock
scas
or
mov
mov
mov
push
xchg
xchg
lret
nop
push
fisubrs
shrl
sbb
stc
shrb
mov
ljmp
hlt
imul
ja
jle
popa
xor
nop
xor
repz
int3
rcll
fbld
jmp
jmp
mov
push
into
fstpt
push
and
rclb
ljmp
je
scas
mov
mov
sub
enter
adc
dec
mov
xor
dec
call
scas
inc
cmp
cmp
inc
xchg
sbbl
sbb
mulb
mov
inc
pop
push
test
xchg
mov
push
pusha
xchg
cmp
ds
xchg
lods
adc
mov
scas
xor
mov
mov
sbb
cmp
mov
pusha
inc
fists
push
cmp
add
mov
adc
inc
cmp
dec
fcmovne
mov
incl
sbb
or
nop
aam
out
xchg
insb
lea
int3
inc
push
jne
arpl
cmpsl
push
pop
cmp
push
leave
pop
add
shl
mov
inc
xor
mov
lret
flds
dec
leave
mov
cld
pop
fucomip
test
stos
xchg
jge
mov
pop
fildl
dec
cmp
push
xchg
sbb
and
cld
cli
mov
jnp
pop
lods
mov
inc
add
arpl
push
sbb
and
adc
or
clc
pop
jle
mov
push
sub
mov
add
mov
jnp
mov
xchg
movsl
callw
fldcw
int
icebp
mov
or
arpl
lods
xchg
pushf
dec
sbb
cmpsl
aaa
jnp
aaa
lret
cmp
adc
insb
pop
aaa
sbb
jb
enter
inc
scas
mov
mov
scas
push
popa
lret
dec
arpl
fldl
movsb
cmp
pop
orl
mov
xchg
jb
adc
ljmp
pop
fidivrs
cmpsl
out
adc
cmp
cmp
frstor
jbe
mov
enter
sub
shrb
movsb
jl
and
std
push
jmp
nop
mov
and
pusha
lds
inc
ss
mov
pop
push
test
pop
inc
loop
arpl
sbb
sub
rclb
push
test
jle
lods
out
jno
ja
push
xchg
or
ss
leave
icebp
push
mov
scas
sub
xchg
fs
mov
mul
pop
dec
jne
push
fisttps
or
out
gs
pop
pushf
pop
inc
mov
rcrb
mov
jp
test
cmp
jbe
movl
pop
pop
jge
jo
pop
inc
mov
out
rcr
int3
inc
pop
bound
push
xabort
ds
repz
arpl
jnp
inc
rclb
sar
add
negb
push
or
dec
hlt
cmp
cmc
sbb
scas
cs
xor
mov
add
jae
push
xor
repnz
or
and
rclb
in
hlt
ret
pushf
lahf
stos
adc
or
cmp
hlt
fnstsw
mov
stc
fs
aas
sti
pushf
jmp
xor
lcall
sub
dec
cmc
mov
sbb
mov
fmull
ss
push
xchg
fmull
pop
push
shrl
inc
ror
add
repnz
adc
xchg
rcrb
es
fsubl
xchg
adc
fcomps
gs
je
cwtl
push
and
stos
fidivrs
mov
lock
mov
mov
shl
xchg
jmp
int
stc
mov
popa
aaa
in
test
js
bound
imul
scas
push
and
push
addb
ja
jecxz
jl
mov
fnstenv
jae
jg
mov
dec
nop
daa
imul
pop
ds
nop
jae
add
inc
lods
cmp
and
mov
repz
sub
adc
daa
push
mov
rorl
push
pushf
loopne
pop
ljmp
hlt
outsl
mov
lods
aas
add
jo
and
push
sbb
addr16
cmc
push
push
rclb
cs
sub
sub
fisubl
fs
dec
and
in
js
shll
cmp
adc
and
inc
sub
gs
scas
ror
jmp
nop
call
push
mov
dec
add
jno
int
pop
clc
and
int
pop
mov
jno
pop
shr
shl
sbb
add
rolb
dec
push
pop
hlt
pop
call
add
pop
clc
ja
lahf
cmpb
push
mov
inc
icebp
and
or
out
or
mov
dec
shrb
mov
ret
pushf
jg
mov
das
lcall
movl
cmp
loope
pop
stos
push
xor
pushf
lds
mov
outsb
pop
aas
add
movsb
push
mov
ds
cwtl
nop
ret
sbb
mov
xchg
in
or
enter
add
loop
in
push
sub
popf
movsb
mov
cmpsb
add
in
adc
pusha
push
xchg
into
stos
cmp
cmp
aas
push
or
jbe
inc
in
ja
aaa
insl
push
jae
cmpsl
arpl
fnstsw
add
push
es
lret
push
and
push
loope
or
sub
loop
xchg
mov
shll
jmp
mov
xlat
popf
sbb
xchg
or
mov
and
and
mov
imul
popf
js
cmp
out
inc
xchg
loop
and
mov
stos
pushf
lods
pandn
pusha
mov
inc
ret
outsb
ror
push
out
pop
fs
push
movsl
push
adc
add
mov
test
mov
ret
xlat
ljmp
aam
push
or
inc
test
ret
std
inc
xchg
cmpsb
mov
addb
aaa
ljmp
out
dec
cmp
ljmp
test
pop
sbb
jmp
dec
ja
push
push
icebp
or
fadds
or
push
push
jns
in
pop
mov
div
push
cli
xorb
mov
ljmp
mov
adc
mov
das
cld
xorl
xchg
mov
in
movsl
fst
xchg
repz
mov
cmp
sbb
or
inc
testl
jg
dec
pcmpeqb
xchg
test
adcb
mov
lock
cmp
int
int
sbb
mov
adc
dec
adc
cmp
in
cltd
andb
in
jno
mov
xor
in
pushf
sbb
jecxz
cmpsl
push
lcall
mov
fnsave
xor
sbb
pop
rcll
iretw
sti
insb
add
dec
cmpsl
mov
xor
sub
jno
aad
mov
imul
into
mov
sub
mov
shlb
divb
lea
xor
mov
add
or
sub
icebp
push
and
xchg
mov
dec
sti
jge
mov
test
mov
cmp
decb
or
xor
sub
ret
outsb
mov
mov
mov
xor
push
mov
loope
add
mov
ds
mov
pop
xor
mov
lods
xchg
sub
mov
ds
rorl
jae
jne
pop
sbb
clc
js
leave
movsb
mov
lds
outsl
or
jg
sti
dec
ss
out
sbb
movl
scas
xchg
and
dec
jnp
stos
aas
jmp
cmc
jg
in
fdivs
addr16
fnsave
rolb
int
pop
push
mov
cmp
xchg
leave
xchg
cli
adc
mov
sbb
jb
xchg
jle
nop
fstpl
push
jg
outsl
mov
rcrb
mov
out
mov
cmp
sbb
insb
xor
test
hlt
dec
cmp
imul
test
jg
jecxz
jg
sub
sbb
fldl
push
jg
sarl
pop
mov
pop
or
scas
jp
rclb
push
cltd
dec
das
add
aad
sbb
mov
mov
xlat
out
scas
aaa
stc
mov
mov
xor
lcall
dec
xchg
daa
sbb
mov
pop
sbb
inc
dec
or
adc
adc
imul
bound
flds
mov
xchg
jns
pop
lret
into
fsubl
or
loope
das
test
and
adc
sub
in
mov
out
dec
call
mov
mov
and
fsubrs
pop
rorl
bound
int3
test
in
dec
add
inc
stos
ret
xchg
mov
negl
movsl
fwait
pop
bound
loopne
inc
add
pop
test
int
jns
push
std
jle
pop
stc
add
push
movsl
and
pushf
gs
mov
leave
push
sbb
or
sbb
push
shll
jae
cld
and
fdivrp
cmpsb
adc
pop
sbb
xor
insb
xor
in
rorb
test
aas
dec
dec
nop
int3
orl
xchg
sub
aas
sbb
jl
call
inc
and
insb
cmpb
jo
scas
ds
int3
stos
aad
mov
dec
dec
fcmove
lods
dec
and
pop
out
dec
jecxz
inc
inc
mov
into
dec
enter
test
into
xchg
xor
inc
inc
pinsrw
mov
test
jmp
das
jnp
aad
xchg
not
popa
cs
xchg
lret
fwait
leave
insl
ficomps
leave
shlb
fisttpll
sub
movsl
imul
or
xchg
mov
pop
jo
shll
mov
cmpsl
dec
shlb
push
jno
hlt
sbb
sti
test
pop
out
jbe
cmp
scas
mov
xchg
cmpsb
sub
mov
daa
test
pop
xor
ret
loope
addb
push
imul
or
cwtl
in
sbb
mov
fistpll
xor
inc
aas
dec
xchg
stc
sahf
add
push
fisubl
aaa
mov
adc
lcall
jne
cmp
or
sbb
nop
addr16
rcrb
xchg
popa
stc
int3
hlt
movl
xchg
inc
push
ss
lods
add
jp
scas
insb
pop
mov
nop
inc
dec
push
sbb
jo
jecxz
dec
pop
iret
enter
adc
jae
xor
inc
fdivrl
jmp
fsubrl
xor
lea
call
aad
sbb
cli
pop
xor
jmp
pop
mov
pop
and
fs
inc
mov
xchg
jb
pop
aas
inc
inc
xchg
repnz
arpl
jp
sahf
sbb
and
push
fdivrs
out
sbb
pop
sbb
xchg
cli
cmp
lds
mov
imulb
push
fs
aam
adc
decb
sbb
xchg
addl
sub
es
mov
in
pop
repz
int
push
in
push
hlt
test
jle
imul
in
cld
mov
dec
fwait
mov
xchg
adc
popa
or
inc
out
clc
cmp
int
dec
es
push
sti
lret
callw
cld
mov
stos
test
mov
cmpsl
push
mov
push
arpl
out
mov
jmp
fdivr
pop
icebp
mov
mov
lret
cmc
xchg
dec
int3
push
sahf
push
adc
and
into
adc
jl
xor
icebp
negl
or
ret
in
ja
nop
and
and
push
or
mov
mov
push
int
pop
adc
orl
in
mov
addr16
sahf
lods
sub
sbb
shll
iret
add
adc
adc
mov
inc
dec
scas
sahf
out
pusha
xchg
andl
in
cmp
mov
mov
xor
or
addr16
mov
inc
xchg
lcall
fcmovbe
dec
or
pop
mov
cmp
out
adc
jl
mov
jae
or
into
fiadds
or
xchg
loope
push
insb
xchg
or
aaa
in
pop
pop
loope
xchg
xchg
arpl
jge
ret
xlat
adc
and
mov
dec
dec
sub
push
fidivrs
or
roll
inc
mov
mov
hlt
dec
loop
xor
ret
fiaddl
aas
and
imul
into
xchg
cwtl
inc
cmc
pop
out
xor
shll
or
lods
out
xchg
jmp
sub
lea
sbb
sbb
adc
cmp
test
pusha
shlb
loopne
out
dec
les
movsl
mov
sub
jp
int3
inc
pushf
mov
fbld
std
jnp
cmpsb
shll
jae
mov
mov
xchg
adc
or
cmpsl
lahf
xor
repnz
sbb
ret
dec
stos
scas
mov
test
inc
push
imul
jb
rolb
add
fcomip
scas
imul
test
insl
push
ljmp
push
or
aam
mov
push
xchg
leave
aaa
cmc
mov
cli
mov
xchg
dec
aaa
pop
fdivrp
cld
pusha
out
lea
mov
dec
shl
pop
rcll
imul
movsl
xchg
dec
sbb
add
mov
les
mov
sub
mov
or
and
or
movsl
sti
leave
inc
cli
jle
lds
pop
push
sub
pop
dec
lods
dec
push
sub
add
mov
push
mov
scas
mov
int3
sbb
dec
jns
test
sbb
lock
int3
push
dec
dec
jmp
test
cmp
fsubrp
daa
repnz
rcll
adc
xor
ret
mov
inc
dec
andl
add
ret
mov
adc
mov
mov
and
hlt
clc
lret
jecxz
jnp
mov
jae
fsubrs
outsl
sbb
xchg
push
repnz
fst
fwait
aad
adc
xchg
cmpsl
ljmp
and
inc
pushf
sahf
fs
sbb
mov
in
push
or
call
cltd
xor
push
xor
sbb
push
ja
cltd
mov
jecxz
xor
lahf
nop
int
inc
pop
pusha
mov
mov
aam
sub
inc
jg
jnp
dec
std
dec
push
adc
stc
cmp
mov
divl
pop
jge
inc
inc
jle
hlt
repnz
jbe
or
and
repnz
in
or
mov
pushf
ret
fs
xor
fsubr
xchg
xchg
mov
jo
scas
cmpsb
iret
repz
push
divb
and
cwtl
cltd
aaa
jo
pop
std
sbb
cmpl
ret
inc
cmpsb
out
push
adc
aas
sahf
inc
pop
push
jnp
shrb
cli
ret
mov
addr16
rol
mov
sub
or
daa
xchg
jo
fistps
imulb
out
pop
popa
popa
gs
xchg
fidivl
fldcw
dec
xor
ljmp
inc
jle
mov
xchg
adc
pop
cs
mov
fisubrl
inc
xchg
and
aaa
mov
scas
sbb
lods
mov
xchg
lahf
jbe
fstpt
shll
cmp
pop
popa
loop
inc
inc
ret
scas
pushf
adc
jecxz
ja
std
bound
std
dec
hlt
inc
xor
rcrb
sub
jns
push
test
jg
mov
leave
mov
push
hlt
int
push
mov
out
mov
out
xlat
jge
cmpsb
daa
adcb
leave
and
cltd
dec
cmp
inc
mov
mov
dec
icebp
fdivrl
push
fs
sub
jns
clc
push
and
xor
clc
pop
int3
push
sub
push
and
sub
xchg
jp
scas
xchg
out
mov
jno
cli
cmp
fbstp
mov
mov
jns
sub
cmp
cmpsl
and
pop
mov
pop
cmp
leave
pop
adc
mov
pop
jbe
add
pop
mov
scas
fstpt
sub
fs
arpl
dec
jge
mov
fadds
iret
call
fisttpl
out
aam
jbe
aad
js
addb
scas
mov
and
fmull
pop
cmc
dec
adc
dec
or
repz
scas
inc
hlt
xor
dec
aam
cmp
lret
dec
repnz
imul
in
adc
test
outsl
cld
mov
cmp
ds
jbe
in
add
int
mov
or
ljmp
add
out
add
in
sub
in
dec
and
xchg
arpl
xor
fldenv
push
or
xorb
dec
outsb
push
leave
ret
pop
mov
test
jb
inc
dec
push
push
lods
lods
dec
gs
push
push
mov
les
or
andnps
movsb
xchg
sbb
sub
insl
outsl
jmp
inc
lds
xchg
push
ljmp
cs
mov
test
sarl
fs
cmp
dec
les
cmp
aad
mov
inc
add
aaa
pop
pop
xchg
nop
fidivs
notb
jb
or
xor
sti
mov
int3
cmp
jp
or
mov
insl
xchg
pop
insl
sahf
aas
loopne
mov
dec
into
xor
xchg
mov
pop
pop
mov
aam
adc
outsl
movsl
sbb
and
addr16
adc
push
xor
fists
push
mov
enter
pop
inc
sub
ja
movsl
lcall
push
inc
aas
xor
dec
xchg
or
cmc
dec
rcrb
sahf
mov
mov
and
fwait
or
xchg
xor
push
shr
cmp
inc
adc
mov
fs
fiadds
lret
ret
lods
lods
cmp
frstor
enter
mov
lods
rcl
cli
xor
pop
cmc
filds
rcrb
pop
xchg
mov
enter
daa
and
loop
hlt
push
sub
je
inc
xlat
adc
xor
push
adc
mov
xor
mov
add
xchg
in
jge
roll
unpcklps
sbb
mov
push
shll
cltd
lock
push
test
add
sbb
jg
add
push
insl
inc
sahf
cmp
rcll
inc
popf
ljmp
ret
dec
pop
bnd
iret
pop
xor
in
mov
cltd
popf
ljmp
insl
imul
jns
jge
fucomip
in
inc
cmp
das
sbb
test
loop
jb
rcrl
push
fldl
stos
in
jno
outsl
imul
mov
pop
xchg
neg
mov
jnp
es
rcrb
pop
test
cmp
fsubrl
xchg
cmpsl
aam
xchg
rcrl
int
jmp
cmc
mov
jg
loopne
subl
and
and
mov
popa
popf
sbb
imul
inc
or
xorb
or
or
loope
rcrb
nop
and
jl
dec
cmp
clc
pushf
scas
fstl
arpl
es
rclb
sti
pop
aaa
inc
cmpsl
pop
jmp
loope
mov
mov
arpl
push
test
cmp
adc
sub
pop
jb
pop
and
lret
cmp
or
inc
inc
pop
iret
xchg
je
adc
lea
and
in
pushl
cmpsb
push
cwtl
jl
add
stos
cmp
xchg
pushf
add
or
lds
pop
cmp
int
movsl
lcall
cmpsb
lret
pushf
in
cmpsb
cmpsl
cmp
cwtl
cld
add
pop
jnp
mov
jmp
inc
xlat
lods
xor
xchg
shrb
ret
and
jo
pop
pop
sub
nop
mov
adcl
jl
push
orb
mov
mov
cmp
cmp
mov
dec
add
test
xchg
mov
lahf
mov
insb
jecxz
xchg
addr16
ja
sti
ficoms
fdivrs
push
jg
daa
mov
jno
or
gs
outsb
pusha
xor
lahf
sub
jnp
push
jmp
aas
jbe
inc
mov
aas
in
xchg
push
sbbb
jnp
sub
js
cltd
filds
sahf
sbb
dec
ficomps
out
clc
mov
sub
xchg
ret
sub
mov
mov
mov
in
xor
popf
inc
or
mov
call
adc
adc
in
orb
push
pop
movl
sub
pop
adc
inc
shll
jle
and
adc
ss
lods
push
shrb
jp
push
adc
fs
fistps
mov
and
jne
stos
add
and
subb
mov
or
and
or
adc
mov
add
pop
outsb
mov
pop
outsl
dec
dec
jo
xor
lods
cmp
add
mov
sub
adc
push
aam
mov
cmp
xchg
xchg
fsubrl
fiaddl
mov
leave
imul
fsubs
fldl
xchg
sub
ret
jb
sar
jo
stc
add
lock
jae
mov
cltd
jl
xor
sbbl
repnz
jg
add
adc
fsubp
push
push
sahf
scas
mov
xor
int3
pop
pushf
inc
jbe
scas
add
xlat
fsubs
daa
gs
ret
xchg
push
lret
insl
jb
xlat
cli
arpl
mov
push
loope
push
push
or
and
popa
and
push
lret
and
push
push
outsb
xor
addl
xchg
sbb
mov
jmp
rcrl
mov
mov
fsubl
or
and
jge
hlt
mov
xor
mov
fwait
scas
js
mov
push
jmp
faddl
jnp
rorl
fisubrs
push
sub
sub
sbb
mov
in
das
dec
dec
out
xchg
and
or
cmc
mov
jmp
int
inc
mov
imulb
aad
mov
ret
sbb
and
ffree
pop
jns
xchg
pop
je
mov
pop
ret
shl
mov
js
ret
cmp
in
pop
repz
jns
cmpsb
sub
and
lret
xlat
pop
xor
push
orb
add
lcall
in
sarl
xchg
stc
gs
adc
sahf
out
jbe
mov
push
add
mov
cmp
mov
mov
sub
popa
mov
jl
lcall
cwtl
dec
fwait
xor
int3
enter
sub
aas
ja
in
sub
jge
mov
add
jo
adc
aad
je
loope
push
cmp
bnd
push
or
jp
es
outsl
scas
inc
jg
adc
mov
jns
aaa
adc
push
inc
sbb
push
dec
cmp
xlat
or
jae
mov
sbb
and
sbb
mov
imul
sar
in
out
add
cmpsb
dec
sbb
arpl
repz
scas
xchg
mov
movsb
xor
out
fiaddl
cmp
mov
test
adc
push
inc
rol
jns
xor
xor
push
iret
xor
loope
dec
mov
dec
and
sbb
addl
mov
sub
and
jp
test
xlat
push
sbb
mov
pop
frstor
jne
pop
jae
in
push
sbb
gs
inc
fdivs
add
mov
in
dec
aad
repnz
call
push
pop
adc
fstps
xorl
sbb
push
bound
in
mov
loope
mov
lret
jo
or
jg
mov
scas
pushf
adc
push
out
or
xor
aam
cld
xlat
push
int
test
lods
int3
jae
cli
mov
imul
add
es
je
filds
imul
popa
ret
or
mov
jecxz
lock
jle
cmp
pop
sti
mov
or
iret
movsb
or
jae
sbb
int
xor
sub
dec
mov
fsubrl
adc
mov
push
xor
dec
mov
rcll
mov
ret
jg
cmova
scas
movsl
jmp
jno
pop
ja
jns
imul
arpl
icebp
dec
adc
leave
sbb
insl
mov
xor
or
mov
xor
data16
jbe
jg
test
roll
ljmp
aas
repz
inc
cmp
outsl
pop
les
fsts
int
and
es
es
cs
repz
mov
xor
insb
mov
std
test
dec
xchg
and
cltd
push
fwait
cmp
lret
adc
in
xor
daa
mov
sbb
xor
arpl
jg
arpl
inc
mov
mov
js
test
xchg
cmpsb
stc
jge
pop
mov
rcrl
outsl
or
filds
dec
popf
mov
bound
and
push
sbb
cltd
stos
add
lds
ss
out
sti
in
jo
dec
dec
inc
fwait
retw
cmp
sahf
mov
sub
xchg
xlat
jne
sbb
xor
inc
out
mov
lret
push
fmull
aaa
cwtl
out
arpl
jg
lret
xorl
mov
lods
outsl
les
sub
int3
lds
pop
push
mov
subb
inc
lods
scas
mov
jecxz
cmpsl
sti
in
mov
subb
lea
sub
xchg
or
ja
push
xor
in
jne
dec
xchg
outsl
imul
push
in
sbb
movsl
cli
mov
jo
or
jno
inc
jno
jecxz
and
or
pop
imul
repz
add
ds
fisttpl
pop
and
std
fcomi
popf
out
mov
vmwrite
add
dec
jp
in
fdivrs
ret
ds
or
jl
cmc
ljmp
mov
int
push
sbb
pop
xor
sub
cmpsb
fmuls
ja
cltd
ja
pminsw
mov
outsb
mov
jge
xchg
cmc
loop
or
jno
xor
jo
movsl
xchg
and
jmp
sbb
add
addr16
jno
xor
push
pop
mov
gs
idivl
push
dec
enter
adc
and
sbb
scas
rcrb
jmp
shll
mov
lock
adc
mov
pop
ret
xor
leave
pop
pop
sbb
mov
dec
jbe
aad
sbb
mov
fwait
mov
clc
in
gs
fwait
and
sbb
pop
imul
fisubrl
xchg
push
push
push
pushf
mov
cmc
fisttpl
jp
mov
imul
insl
sbb
cli
mov
pop
std
or
fmuls
js
into
fcom
loopne
lret
mov
ss
sbb
push
inc
popf
maxps
addl
mov
jno
pusha
xor
and
lods
push
into
mov
divl
incl
or
add
inc
jmp
inc
pop
call
repnz
jne
dec
das
mov
out
inc
repnz
mov
adc
dec
and
inc
jmp
fnstsw
mov
sub
je
jae
lds
loopne
sbb
jg
cmpl
stc
aas
ds
xorb
cltd
in
cmp
jle
lcall
test
sbb
out
or
cmpsl
xchg
gs
out
repz
or
gs
loop
lcall
repz
popf
neg
sbb
jle
cli
loop
add
pop
pop
fsqrt
xor
push
push
and
bound
add
mov
scas
cmp
jmp
mov
rolb
test
jo
loop
sub
stos
sub
cld
imul
in
xchg
out
push
xchg
arpl
mov
jmp
xchg
mov
or
iret
adc
aad
mov
and
jecxz
mov
xchg
hlt
bound
inc
rolb
lds
sbb
test
sub
pusha
xchg
cli
mov
xchg
rolw
mov
pop
into
xchg
sub
rcll
and
iret
dec
clc
mov
mov
fsts
inc
xchg
addr16
adc
jo
js
and
jmp
xchg
cmp
negb
loopne
sub
mov
imul
xchg
xchg
ret
movsb
pusha
xor
add
sub
addr16
inc
mov
cmp
jns
push
push
inc
rorl
nop
xchg
sbb
mov
daa
out
dec
or
mov
xchg
inc
adc
cmp
cs
repz
stos
jbe
adc
daa
cmp
mov
fsubrp
pushf
ljmp
mov
ja
fisubs
dec
loope
add
scas
add
popa
fmull
lret
enter
repnz
and
aam
shll
xchg
sub
pushf
sahf
add
out
dec
mov
repz
mov
inc
dec
into
addr16
mov
je
pop
pop
cli
inc
and
or
scas
iret
insb
xor
and
insl
std
lea
sbb
pusha
lea
in
std
filds
jle
scas
arpl
shll
das
aam
dec
out
mov
sbb
push
mov
or
sbb
sti
pop
add
mov
arpl
mov
test
and
fdivrl
inc
arpl
jle
cmc
popa
xchg
or
dec
ret
aaa
push
jo
jno
mov
ds
incb
sub
push
dec
clc
adc
std
sbb
popa
inc
pop
dec
mov
fcoms
testl
fnstsw
mov
fwait
jmp
icebp
xchg
mov
shlb
gs
cmp
inc
xor
push
jp
push
fstps
fs
clc
dec
outsb
push
in
cmpsb
andb
sub
sarb
mov
adc
inc
scas
fldt
push
sbbl
test
jg
adc
aas
mov
jg
jmp
pop
push
push
inc
ja
and
xor
out
pop
dec
iret
mov
insb
out
loopne
mov
inc
gs
and
sbb
inc
xor
ss
push
pop
cmpsl
mov
sbb
adc
repnz
mov
mov
or
fsubs
mov
xchg
add
cli
pushl
jle
stc
sub
es
icebp
lock
xor
lret
jl
js
sub
jle
rorb
dec
lea
mov
shll
std
inc
js
inc
mov
das
js
push
xchg
ss
add
repnz
sbb
outsl
out
jg
sbbl
idivb
sbb
or
sahf
mov
and
or
scas
arpl
add
cmp
test
adc
les
dec
loope
xchg
cmp
int3
dec
xchg
leave
push
test
ss
lahf
or
adc
dec
jmp
adc
es
stc
nop
ds
inc
popa
fisttpl
out
sub
add
repnz
pop
fsub
pop
jns
cmp
sti
rcrb
and
scas
dec
adc
popf
aam
leave
adc
dec
jl
imul
push
xchg
sbb
lock
stos
stos
sub
mov
cmpsl
and
fwait
mov
test
shlb
ror
es
inc
mov
stos
jae
jmp
xor
and
mov
into
repnz
xchg
push
cmpsb
and
jcxz
loop
mov
or
jb
cmp
das
int
xchg
mov
or
test
pop
pop
xor
repz
mov
mov
loopne
xor
lods
dec
push
sub
jecxz
out
jmp
fdivrs
mov
leave
pop
or
xchg
adc
inc
add
cmpsb
out
xor
add
add
adc
std
add
pusha
cmpsl
jge
mov
sub
stos
loop
cmp
jmp
mov
mov
ret
jmp
sub
fyl2x
cs
iret
popf
jge
push
push
nop
mov
jns
sub
mov
mov
or
stos
inc
inc
fisubs
pusha
pop
nop
sub
jecxz
stos
stos
inc
mov
outsb
popa
dec
aam
sbb
frstor
sahf
stos
jnp
adc
push
nop
cmp
into
sbb
pop
mov
adc
lcall
jbe
sub
sahf
inc
ss
mov
jb
push
xlat
rcll
aaa
in
imul
push
aas
jp
into
fisubrl
dec
lcall
out
mov
into
xchg
pop
stc
jb
loop
movsl
repz
decl
xchg
sub
or
or
cld
pop
test
sbb
adc
clc
push
mov
push
cwtl
mov
rcr
and
cmovno
sub
dec
pop
repz
cwtl
imul
fwait
movsl
in
mov
push
sub
xchg
out
mov
and
dec
movsb
mov
out
out
fwait
outsl
out
inc
cmpsl
pop
cmp
popl
push
pop
push
rcr
mov
outsl
cmc
mov
mov
jne
adc
add
outsl
mov
fwait
sbb
push
jg
loop
cmp
lcall
insl
lahf
adc
subb
sub
xor
test
rcll
cli
out
fistpl
push
push
and
ds
xchg
cmc
outsl
int
xchg
and
jg
cmp
dec
mov
ficoms
pop
daa
movsl
jno
loope,pt
pop
popa
sub
inc
push
daa
stc
or
cli
jne
xlat
jg
insb
xor
sbb
lret
or
xor
pop
decb
shll
xchg
dec
stc
cmpsb
push
stos
sbb
es
imul
adc
pop
and
pop
mov
pop
xlat
imul
xchg
imul
imul
mov
hlt
xchg
in
add
in
out
insb
inc
cmp
and
mov
call
mov
sub
scas
fisttpl
push
es
mov
or
fcmove
or
lods
test
inc
dec
popl
sub
push
cltd
push
adc
add
lret
mov
test
mov
push
mov
sub
pop
scas
out
and
dec
inc
dec
cmp
aad
jl
dec
faddl
ljmp
pop
shrb
cmp
xlat
dec
mov
push
jp
push
into
call
lret
add
push
cmp
xchg
sbb
idiv
jge
imull
fs
js
jl
int3
es
rorb
fwait
imul
cwtl
mov
xchg
cs
shl
mov
inc
sbb
dec
mov
lret
mov
ret
mov
loopne
fsubrs
lea
pop
jno
dec
add
ja
xchg
push
sbb
ret
popa
jl
into
in
pop
sbb
jg
popa
cmpsb
mov
mov
sub
sti
sbb
push
fs
pop
loopne
inc
or
push
mov
and
mov
inc
mov
pop
cmpsl
and
jno
and
xchg
out
or
xchg
mov
dec
add
arpl
mov
lods
sarb
jae
popa
xor
and
mov
leave
sub
mov
cmp
sub
push
dec
aas
xor
cld
xchg
jecxz
xchg
shll
arpl
pop
sbb
adc
add
sub
sbb
insb
mov
test
test
jo
fisttpll
aad
add
cmc
in
cli
divl
dec
fisubrs
nop
sbb
push
adc
fs
lods
fisttpl
dec
sbb
stc
sub
xchg
inc
mov
rorl
mov
addl
xor
jl
jmp
imul
mov
cld
ret
dec
sbb
inc
lret
test
inc
and
call
cmpb
mov
imul
out
test
xor
mov
in
data16
mov
test
bound
mov
pop
or
inc
cmp
jbe
add
mov
lods
aaa
mov
cmc
jle
hlt
sub
push
aam
lcall
inc
test
imulb
pop
cwtl
mov
int
push
repz
or
xor
pop
inc
cmp
js
cmp
test
xor
test
lea
shlb
adc
ja
out
cld
and
pop
or
lahf
ss
mov
faddp
or
call
lds
xor
dec
jae
mov
lods
test
jmp
ret
cmpsl
xorb
xchg
stc
pop
pop
movlps
push
sahf
out
mov
out
sbb
daa
rorl
imul
popf
lds
push
stos
jns
jl
mov
aas
movsl
sbb
negl
loopne
cmpsb
sub
cmp
test
out
push
hlt
push
test
dec
cmp
test
mov
mov
jnp
xor
iret
pushf
aaa
jno
pop
adc
cmpsb
decb
add
dec
out
insl
mov
stos
dec
cmp
add
insb
sbb
push
call
fs
loopne
or
xchg
ficoms
shlb
jnp
and
xchg
pop
inc
shlb
xor
cmp
shrl
inc
icebp
sbb
leave
dec
cmpsl
sbb
mov
push
pop
out
or
xchg
add
movl
mov
sub
or
xchg
sarl
xchg
mov
jbe
xchg
pop
sub
cmc
sub
or
mov
xor
fs
jno
nop
dec
add
out
out
xchg
mov
aas
push
pusha
rclb
scas
add
mov
lds
repz
push
lahf
iret
push
shlb
mov
mov
sub
idivb
stos
xorb
pop
fst
mov
jno
mov
cld
pusha
push
je
lret
lret
jge
stos
bnd
jge
addl
jae
mov
mov
sub
pop
repnz
ljmp
shl
jl
mov
or
mov
adc
outsb
je
inc
bound
push
mov
in
ljmp
arpl
fstpl
sbb
mov
jle
mov
push
jae
cmp
mov
in
daa
lods
xchg
jle
enter
mov
mov
andl
pusha
xor
outsl
cld
push
sub
shl
cmpsl
inc
fwait
es
and
dec
imul
icebp
and
mov
jb
adc
aam
xchg
mov
lret
sub
cwtl
mov
and
push
gs
push
gs
cwtl
ljmp
int
lcall
mov
mov
dec
mov
sti
jmp
push
jo
std
sarl
shrl
scas
push
nop
push
xor
fwait
imul
pusha
inc
loopne
push
add
sbb
and
dec
sub
push
lahf
fs
cmp
push
sbb
cmp
lret
testb
std
sbb
out
nop
das
xlat
inc
imul
mov
cld
repnz
sbb
xor
clc
cltd
mov
dec
sbb
xchg
jecxz
or
fcmove
loopne
and
daa
fwait
test
or
cmp
jl
adc
mov
pop
loope
xor
pop
xchg
mov
je
adc
fcomps
sbb
push
sarb
xor
pop
xchg
sbb
or
icebp
mov
inc
push
dec
inc
js
lds
lret
fcomps
clc
adc
loope
loopne
repz
movsl
inc
movsl
sbb
xor
inc
nop
lret
mov
adc
mov
cmpsl
cltd
mov
idivl
xor
sar
mov
outsb
test
or
mov
fistpl
lods
xchg
push
or
jecxz
ficompl
pushl
jmp
fstl
and
leave
pop
jg
and
adc
les
inc
ds
xor
dec
inc
push
stos
leave
cmpsb
jno
clc
cld
sbb
and
jb
scas
push
enter
mov
clc
ds
imul
xor
shl
inc
bound
pop
mov
daa
out
imul
adc
cld
fdivr
xchg
or
sbb
and
imul
mov
rsm
aam
lret
mov
sbb
inc
mov
mov
mov
jg
adc
and
rorl
ror
push
cmp
add
push
cmp
mov
dec
adc
orb
sub
lds
lds
mov
out
sub
scas
ljmp
jg
cld
xchg
sarb
subl
clc
sub
adc
inc
and
lea
sbb
add
mov
psllw
shlb
sbb
das
jp
fstpl
repnz
jae
aam
dec
fsubrs
loopne
xchg
cmc
ficoms
or
pop
inc
and
sahf
lea
pop
ljmp
xlat
negb
mov
rcl
inc
movsl
jo
movsb
dec
xchg
dec
loope
xor
ljmp
xchg
push
stos
inc
pop
lods
cld
movsb
add
cmp
clc
and
int3
push
lods
cltd
jge
lahf
fwait
push
pop
lret
fdiv
cld
arpl
es
adc
mov
outsb
cmpsl
test
mov
xchg
mov
ficompl
cli
test
dec
cld
jg
stc
sbb
mov
arpl
xor
frstor
mov
cltd
or
and
rcll
lret
inc
leave
push
jecxz
jbe
fidivrs
dec
nop
subl
jae
addr16
rorb
call
outsl
jge
xchg
mov
cmp
and
adc
cmc
sub
hlt
add
xor
add
adc
loop
inc
sbb
cmc
aam
in
xchg
sub
pop
loopne
hlt
mov
jns
cltd
cmc
xchg
cmp
loopne
jns
add
xchg
jl
adc
dec
repz
sbb
xorl
pop
sbb
adc
or
or
icebp
pop
test
push
enter
inc
pop
dec
push
dec
dec
filds
jp
pop
insb
adc
nop
push
icebp
aad
test
or
inc
push
nop
jle
cmp
push
jge
dec
cmp
pusha
in
loop
push
dec
pslld
in
mov
adc
xchg
xor
ret
lds
lds
je
dec
push
dec
ja
stos
xor
xchg
xor
jecxz
test
sti
mov
les
pop
adc
xchg
bound
les
mov
add
sub
push
or
sbb
mov
test
and
sbb
lcall
std
inc
pop
xor
clc
xor
xchg
mov
ret
scas
jnp
jmp
rcr
out
rclb
push
ficoms
mov
sub
adcb
rcl
repz
cmpsl
call
xchg
jg
lea
xchg
popa
insl
jae
add
cmpsb
lods
pusha
mov
dec
jmp
mov
mov
in
push
jg
ret
nop
mov
icebp
dec
and
mov
mov
inc
adc
into
ja
stos
ret
loopne
in
enter
aaa
out
xchg
dec
bound
movb
sbb
mov
xchg
insb
jnp
inc
xchg
fwait
pop
ljmp
lods
std
andl
jne
sub
xchg
ljmp
push
or
sbb
mov
je
adc
test
mov
mov
dec
incl
push
xchg
mov
lea
cmc
mov
rcl
mov
inc
xor
rcrl
cmp
mov
outsl
add
adc
test
lea
sbb
xor
stos
or
cmp
std
fistpl
xchg
outsb
and
dec
fnstsw
loopne
int3
mov
inc
cmp
pop
inc
pop
pusha
inc
imul
fmuls
pop
jnp
std
fisubrl
or
mov
in
aad
xchg
in
dec
insb
jle
out
sub
ljmp
xchg
cwtl
push
test
push
insl
dec
xlat
fmuls
sti
pusha
or
lds
loope
aaa
xchg
mov
aad
xor
pop
iret
mov
cmpsb
pop
add
mov
cmc
push
gs
push
mov
xchg
int
inc
mov
lock
add
or
loop
cmp
adc
or
cwtl
lret
shrb
test
adc
mov
sub
test
movsl
push
adc
daa
adc
mov
cmp
mov
sub
mov
outsl
mov
outsb
push
jb
jmp
dec
setle
xor
enter
and
sti
xor
shrl
lahf
xorl
clc
xlat
loope
adc
cmp
mov
jecxz
pop
cmc
aad
push
mov
hlt
xchg
inc
xchg
inc
push
cmc
mov
into
lods
aad
push
push
shrb
inc
lods
adc
or
pause
adc
in
dec
movsb
bswap
jmp
mov
test
sbb
or
mov
push
xor
or
sub
sbb
pop
in
imul
jl
and
lods
cmpsb
push
loop
cs
ja
icebp
mov
imul
and
mov
xor
into
addr16
lret
dec
popf
push
sahf
loop
sbb
push
in
in
scas
insb
fistl
lcall
jo
cs
pop
ret
inc
stos
ret
lods
fcoms
lea
insl
js
push
addr16
fld
sbb
xor
int3
frstor
or
sbb
xlat
scas
daa
popa
sbbl
dec
mov
pop
sub
fistpl
mov
or
in
pop
add
or
cmc
dec
sub
jno
inc
dec
shl
cld
xchg
repz
push
ficoms
xchg
sahf
or
gs
mov
test
mov
ret
pop
cmpb
dec
xchg
in
cmpsl
loop
repz
jb
dec
mov
ss
cmp
out
loop
mov
sbb
iret
pusha
dec
decb
dec
adc
sub
test
sbb
pop
pop
je
mov
pop
dec
std
out
xor
fs
xchg
scas
shrb
jge
paddw
or
in
call
mov
out
mov
pop
lds
mov
jp
nop
adc
fwait
imul
and
das
insl
int
pop
mov
inc
add
xchg
xor
jmp
mov
add
lret
push
mov
icebp
mov
sarl
xor
sub
int3
out
or
xchg
cld
sbb
cwtl
push
fidivl
cmpsb
jge
mov
jl
cltd
call
inc
pop
fcomi
loop
imul
push
mov
sahf
push
enter
in
jmp
mov
loope
sub
daa
shll
xor
cmp
pop
xor
daa
sub
and
mov
or
in
and
jns
into
movl
jnp
iret
cs
and
sahf
add
cmp
cltd
jae
jo
setns
pusha
or
ret
cld
cmp
stc
testb
sbb
ss
test
je
test
xchg
out
inc
jecxz
pusha
lds
das
loope
mov
xorb
in
mov
push
fdivl
push
dec
hlt
add
outsl
stos
mov
in
outsb
cld
mov
mov
xchg
pop
cltd
dec
in
in
jle
inc
and
inc
insl
dec
arpl
popf
cmp
or
or
mov
fwait
dec
sub
add
dec
sub
push
adc
and
lea
stc
fs
mov
popa
rcrb
jnp
sbb
out
stos
cmpsb
jno
jp
and
pop
push
jno
scas
cwtl
aad
mov
add
pop
sbbb
and
adc
nop
testb
cmp
inc
jp
das
movsl
add
mov
insb
jmp
mov
data16
lret
mov
push
aas
stos
fnstenv
push
xor
xchg
icebp
xchg
fsubrs
adc
sub
scas
punpcklwd
mov
push
cmp
xor
push
pop
pop
push
mov
mov
xchg
clc
mov
sbb
repz
imul
and
sbb
sub
push
shlb
cmc
mov
arpl
add
xchg
jmp
inc
xchg
fdivp
sbb
sub
subb
leave
rcr
jp
push
push
dec
aaa
mov
loop
pop
mov
push
cmp
xchg
jl
fcomp
fs
adc
sub
push
inc
xchg
sub
test
dec
pushf
pop
ret
mov
xlat
sbbb
sahf
testb
ja
cmpsb
hlt
in
fwait
nop
out
mov
lar
sub
nop
lret
push
mov
add
adc
xchg
sbb
outsb
adc
andb
es
jmp
in
lret
xlat
lods
lods
and
mov
std
xchg
movsb
mov
std
movsl
enter
adc
jns
fistpl
xchg
push
insl
jg
movsl
mov
inc
sbb
in
test
cmpsl
or
xor
bswap
testl
mov
inc
sub
inc
shll
xor
mov
data16
mov
jbe
imul
inc
xchg
push
ja
loope
out
inc
sarl
jae
jb
imul
mov
test
dec
scas
sub
adc
sbb
mov
inc
pop
or
xchg
ja
jg
insl
xchg
adc
cmp
dec
xchg
loopne
cvtps2pi
add
pop
or
pop
fdivrl
mov
mov
and
and
rcrb
cmpsl
repz
popa
and
mov
xor
icebp
sub
and
dec
mov
in
fildll
jb
in
mov
in
xchg
mov
add
adc
movl
xor
icebp
or
out
and
mov
sbb
adc
insb
adc
inc
sub
outsb
imul
push
ds
pop
imul
xor
iret
cld
mov
nop
jmp
out
mov
sbb
pusha
dec
outsl
push
stos
xor
stc
filds
pop
sbb
inc
out
stos
nop
clc
clc
xor
xchg
das
es
mov
outsl
cmpsb
faddl
pop
sbb
pop
shll
cmp
lahf
jle
jb
cmp
inc
cmc
jge
or
lahf
cmp
stc
rcrl
aas
scas
rorb
push
sbb
mov
sbb
aad
cli
push
dec
clc
jle
test
sahf
fisttpl
xchg
mov
imul
mov
ds
mov
adc
xor
stc
scas
mov
aaa
in
rcl
jge
test
aam
fwait
push
pusha
mov
jmp
imul
out
jp
dec
jbe
adc
stos
repz
adc
popf
mov
inc
dec
add
aaa
and
shlb
adc
mov
lret
mov
lahf
jo
cmp
jge
pop
xchg
popa
call
insl
ret
bound
mov
rclb
adc
and
push
pop
mov
in
std
mov
outsb
and
sbb
daa
jo
pop
and
mov
pushf
sbb
push
cs
xlat
adc
out
cmp
mov
sub
clc
or
bsr
out
lcall
inc
fisubrl
mov
sbb
mov
sbb
pop
mov
lods
mov
in
jae
or
fmuls
lea
xchg
fistpl
mov
add
stos
mov
mov
call
sti
cwtl
push
dec
lret
les
in
dec
mov
xchg
pop
mov
sbb
xchg
in
inc
sbb
aam
ret
add
push
mov
movsb
or
cmp
lahf
mov
rcrb
jo
cld
orl
xor
insb
paddsb
push
call
mov
orb
push
insl
jle
or
xor
add
dec
adc
loop
movsb
out
and
test
mov
call
or
add
sub
xchg
jb
jno
xchg
ss
mov
dec
and
lock
or
adc
out
dec
pop
push
push
call
push
stc
sti
out
and
iret
and
int
aam
lods
into
fmull
loop
xchg
mov
dec
and
or
hlt
notb
xchg
orb
sahf
data16
sub
mov
je
mov
mov
dec
pop
jno
push
pop
push
mov
hlt
push
jne
mov
dec
jecxz
fbstp
out
jg
mov
and
sub
loopne
pop
xor
push
ret
xchg
xor
or
sub
pop
adc
mov
jae
jnp
mov
repnz
jo
movsl
cmp
xchg
ss
jnp
or
jae
dec
aad
enter
or
inc
cmp
push
scas
cmp
push
shlb
push
jnp
lahf
fstpt
in
stc
jl
add
ljmp
stc
push
repnz
or
add
sbb
std
xor
ror
or
jns
gs
dec
sub
push
mov
cs
test
fs
iret
enter
pop
and
in
mov
sub
in
mov
test
fwait
daa
ds
shll
mov
call
dec
aas
jge
incl
push
inc
mov
in
ja
push
and
aas
das
inc
mov
lcall
in
pop
pusha
push
cmp
or
in
mov
and
jnp
push
push
ffree
arpl
pop
lret
dec
shll
pop
push
adc
cltd
or
lret
test
or
outsl
adc
addr16
push
clc
pop
dec
cld
inc
shr
adc
add
mov
mul
insb
lds
mov
mov
scas
fisubs
or
dec
cltd
mov
and
dec
xlat
add
sub
or
jle
xchg
and
mov
and
or
jg
scas
mov
cmp
sarl
and
or
xlat
sbb
fistpll
repnz
jp
push
add
fistl
lret
cmpsl
fadd
icebp
test
and
out
lods
sbb
sbb
cmpsl
rorb
pop
sub
mov
or
jae
push
cmc
fwait
enter
adc
in
push
cmp
and
mov
rcrb
into
push
dec
push
in
add
adc
popf
inc
mov
lds
add
rclb
out
add
fdivrl
dec
jns
mov
xchg
test
inc
insb
xchg
jge
rolb
and
add
ret
and
cmp
cmp
sbb
push
sbb
scas
xor
jne
pop
cmc
arpl
or
loopne
lret
popa
int
in
mov
hlt
push
aas
xchg
or
and
mov
or
in
push
push
fstps
push
dec
sbb
dec
ret
push
inc
scas
jo
pop
sbb
push
cmp
aad
rolb
inc
fwait
js
in
data16
and
push
jle
jo
test
and
cmp
fwait
insl
push
add
cwtl
int
sbb
jae
pop
insb
and
ficompl
sbb
das
inc
pusha
in
lods
add
pop
pop
pushf
test
cltd
push
lret
xor
push
xor
inc
fists
push
sub
push
fstps
adc
jmp
fs
add
mov
mov
push
aad
xor
fdivrs
int3
push
out
mov
sub
cltd
add
cmp
out
test
mov
adc
mov
mov
movb
pop
and
inc
je
jnp
xchg
mov
cmpsl
sub
test
nop
pop
push
in
js
mov
sub
xchg
adc
xor
stos
adc
xor
pop
sbb
loopne
scas
pop
pop
mov
je
addr16
dec
cmp
mov
mov
mov
sbb
pusha
leave
jo
mov
mov
mov
xchg
insl
fsubs
nop
xchg
ja
pop
out
mov
fs
rcll
call
loope
xchg
lods
lock
js
dec
test
icebp
pushf
add
push
stos
add
sub
cmpsl
xchg
fldcw
inc
decb
cwtl
lahf
out
jb
iret
jo
mov
fs
cmp
adc
inc
jl
and
cmp
mov
xchg
mov
iret
flds
xchg
lods
test
and
xor
into
andb
rolb
add
xchg
jmp
bnd
sbb
subb
repnz
sbb
sub
jmp
push
adc
mov
add
pop
push
sahf
cli
sub
movsb
and
outsl
adc
ja
jo
mov
test
into
sbb
test
inc
ja
xlat
push
mov
jns
push
lds
shll
dec
xchg
push
push
in
push
clc
popf
mov
sarb
std
out
ret
sbb
sbb
lcall
push
shll
fisubl
ljmp
jl
lods
xchg
sbb
cld
enter
lret
out
rcrb
xor
imul
pop
and
add
mov
and
push
mov
adc
fistpll
jns
in
in
lret
xor
dec
scas
repz
sbb
xchg
daa
pop
mov
ds
push
xor
push
or
mov
jae
jl
arpl
pop
into
push
movd
inc
xchg
sar
mov
bound
arpl
scas
xchg
andnps
or
rorl
daa
imul
fadd
sbb
push
pop
sub
jne
xor
fwait
inc
arpl
popf
cwtl
mov
sbb
mov
lods
lods
out
enter
push
mov
test
push
mov
clc
out
xor
mov
mov
adc
xor
popa
push
push
shr
push
sbb
movsl
stc
aam
insl
cld
jle
adc
mov
xchg
add
pusha
jle,pn
cmp
push
ror
in
xchg
dec
xchg
mov
jb
add
jg
push
mov
cmp
fistps
mov
outsb
fmuls
ds
add
pop
lds
ss
pop
mov
xor
jae
push
insb
xor
pushf
mov
mov
dec
ja
xor
xlat
ds
or
int3
push
cld
cmp
adc
shlb
shrl
dec
push
sbb
or
and
int3
mov
imul
jbe
push
pop
push
add
rol
iret
xor
dec
cmp
mov
sahf
mov
jnp
shll
rcrb
mov
daa
sbb
call
xor
gs
add
mov
shll
pop
sar
aas
jae
jmp
sbb
in
push
xorb
push
jp
insb
xor
jle
dec
scas
sbb
xchg
aaa
sbb
lret
cmp
popf
js
test
clc
dec
addr16
xor
aaa
pushl
push
mov
xor
pop
mov
sbb
xchg
jmp
cmpsl
mov
and
pop
sti
mov
add
push
push
mov
std
into
movsb
jns
mov
aas
pop
xchg
and
outsb
pop
ja,pn
mov
mov
fs
and
mov
cld
cmp
jnp
mov
shll
mov
rcl
cmp
clc
inc
out
pushf
mov
sub
mov
lds
mov
scas
jo
aam
adc
loope
es
mov
push
jb
push
cli
inc
cmp
test
sbb
sub
fcmovnbe
lods
aam
shll
mov
pop
gs
stos
cld
adc
les
lods
imul
fidivrs
fdiv
adc
xchg
imul
jnp
decb
cmpsl
lods
outsb
pop
adc
fimull
test
push
mov
pop
fisubs
addl
jbe
jmp
out
xor
ficoml
mov
cmp
orl
cmp
cmp
fnstenv
test
xchg
movsl
jmp
xor
pop
mov
mov
ja
adc
lea
rorb
popf
sub
jnp
ds
mov
cld
dec
xorl
daa
push
add
jns
push
cmp
mov
in
push
mov
gs
and
sbb
sub
sub
jno
iret
pop
cmc
xchg
mov
or
pop
cmp
mov
lret
sbb
push
popf
mov
addb
sbb
xchg
in
and
adc
and
push
loope
movsl
pop
cmc
inc
fsubrs
imul
sti
dec
aas
stos
sub
loope
stc
test
or
cmp
pop
or
hlt
lret
aaa
int3
or
adcl
inc
lods
push
icebp
and
outsl
pop
sbb
fisubs
sub
cltd
push
cli
adc
jl
jg
pop
xor
or
sub
scas
jbe
movl
test
sub
in
jno
xchg
inc
rorb
fwait
dec
pop
push
lods
sbb
mov
push
stos
jo
lret
into
fmul
jge
inc
or
das
popa
cmp
mov
dec
xchg
aas
mov
mov
xor
arpl
push
lods
fwait
push
add
fcompl
cmp
dec
sahf
push
dec
lret
lock
shll
mov
xchg
jb
nop
mov
pusha
testb
inc
lods
sub
pop
cmp
inc
fldl
les
lods
cs
fs
lods
jb
cltd
pop
and
gs
insl
xlat
movsl
xorps
imul
jmp
mov
pop
sti
out
mov
xchg
out
addr16
cmp
insl
pop
mov
cmpsb
cmp
in
mov
in
es
xchg
mov
pop
loop
nop
pusha
sub
pushl
xchg
and
push
fisttpll
idivl
push
nop
jnp
jmp
mov
paddb
add
sbb
jp
shl
cmp
and
inc
sub
mov
mov
aaa
mov
popa
mov
xchg
pop
addr16
sbb
sub
pop
push
xchg
mov
gs
pop
fneni(8087
hlt
fiaddl
cltd
cli
mov
jne
sub
bound
sbb
lret
sub
mov
ss
adc
mov
orb
push
lahf
xchg
jge
mov
scas
xchg
aad
cmpsb
insb
xor
pop
idivl
mov
movb
sub
mov
jmp
lahf
mov
push
out
or
mov
jo
jbe
ficompl
movsl
js
iret
movsw
fisubs
jne
cli
fcmove
push
repnz
outsb
cmp
repz
mov
cltd
or
push
cli
push
test
mov
iret
and
inc
inc
sub
das
inc
mov
popf
xchg
pop
mov
test
push
enter
sbbl
push
sub
mov
adc
and
loope
outsb
imul
xchg
shr
movsb
ret
out
jmp
icebp
scas
das
sbb
cmpsb
push
test
inc
mov
xlat
dec
and
xchg
fadds
adc
pushf
pop
mov
pop
or
scas
jns
push
pusha
pop
ss
fistpl
mov
gs
mov
cmp
mov
mov
jnp
and
stos
jbe
in
mov
shl
sahf
ret
dec
stos
arpl
inc
push
arpl
mov
mov
push
jl
cmp
jns
in
inc
lret
jl
pop
and
movsl
andl
fstpt
orl
insl
mov
pop
pop
sbb
aam
push
push
mov
mov
jne
mov
xor
jne
push
ja
sbb
insl
fldenv
jbe
enter
lea
push
rorb
daa
jge
push
pop
adc
xchg
int3
inc
popa
mov
push
mov
aaa
and
adc
or
data16
push
dec
aam
mov
add
nop
mov
push
xchg
push
das
stos
xor
or
add
movsl
aaa
mov
mov
cmpsb
mov
ljmp
jnp
shlb
lds
loope
jge
mov
cmp
mov
add
mov
inc
or
cwtl
dec
adc
das
adc
lea
lcall
fsubp
scas
int
int3
adc
fisubs
aam
scas
cld
pop
and
cmp
cmp
repz
mov
inc
aam
ja
loop
add
fiadds
cld
leave
mov
xor
cmp
xchg
insl
dec
mov
enter
or
or
sub
sub
xlat
mov
jb
sub
mov
mov
aad
pop
in
mov
inc
sub
inc
push
xchg
mov
aad
mov
imul
or
push
add
adc
inc
cmp
inc
dec
insl
mov
xor
jp
cmc
movsb
mov
dec
lds
xor
pop
add
sbb
adc
imul
push
mov
aam
or
xchg
mov
cmp
sbb
mov
out
mov
stos
out
lahf
test
adc
mov
or
cmp
and
pop
jg
test
lea
xchg
pusha
int3
mov
lcall
inc
cmp
fcomp
xchg
add
and
fincstp
sbb
mov
out
lea
cmp
scas
xchg
insl
mov
testb
dec
cmp
xchg
push
adc
pusha
and
mov
scas
lea
in
sbb
jmp
push
adc
pop
test
or
adc
cli
or
pusha
pop
inc
rol
outsb
adc
jecxz
loop
mov
cmp
pop
sahf
mov
jl
fsubrs
inc
push
aam
rorb
mov
or
sbb
sub
gs
test
fs
sbb
ret
push
out
in
into
in
and
data16
iret
fwait
inc
lds
jecxz
xchg
sbb
aas
push
xchg
lret
data16
pusha
push
inc
or
xor
dec
dec
push
out
mov
jecxz
push
cmpsb
rcrb
lods
mov
gs
jmp
mov
jg
lods
mov
add
sbb
mov
push
jo
mov
pop
popa
sub
leave
fsubl
inc
movsl
rcll
inc
sub
ds
push
xlat
stos
jmp
mov
dec
inc
inc
cmp
fbstp
pop
xchg
ds
aam
ss
mov
aaa
ljmp
scas
xchg
call
sarb
lds
cs
or
xchg
leave
xchg
inc
frstor
fcompl
std
enter
imul
repz
sub
mov
sbb
adc
adc
inc
shlb
mov
dec
test
in
dec
shlb
adc
cmp
icebp
fistpll
arpl
ret
pop
push
adc
pop
dec
ds
push
ss
add
dec
in
sbb
jmp
scas
xchg
push
sbb
mov
jns
into
mov
jl
sub
mov
and
cmp
ja
push
cmp
mov
repz
out
mov
icebp
pop
xchg
and
lea
inc
ret
fwait
out
add
inc
dec
cmp
sbb
push
jp
add
mov
scas
mov
or
cmp
mov
jno
push
jmp
sub
jnp
xchg
dec
aad
clc
inc
sub
xchg
pop
in
ret
xchg
fwait
sub
ret
xchg
rclb
loop
insb
mov
shll
dec
aad
lds
mov
cmpsl
repz
cwtl
add
sbb
or
xor
xchg
mov
nop
cmp
test
sbb
rclb
xor
adc
jns
inc
xor
xchg
stos
sbb
mov
ljmp
pop
cmp
mov
scas
lea
xor
lods
in
xor
nop
ficompl
adc
aas
mov
cmp
bound
and
cmpsb
lock
cmpsl
push
stc
aaa
ror
xlat
adc
das
aas
xor
test
test
mull
sub
mov
jl
nop
xchg
mov
mov
or
sub
pop
jp
nop
lahf
dec
popa
push
leave
ljmp
lcall
jns
aad
xchg
aad
orl
push
sahf
mov
and
jb
xor
mov
mov
int
rcll
stc
loope
int
xchg
jge
xchg
xlat
mov
jns
movb
outsl
lea
adc
mov
cli
push
aad
mov
ret
cmp
or
subl
in
jp
push
lods
pop
in
mov
push
test
pop
mov
hlt
cli
idivl
pop
mov
loop
in
mov
fdivl
dec
jb
in
or
lock
lret
jecxz
push
push
and
and
scas
loope
fistps
es
loope
bound
repnz
inc
shrb
js
pop
push
push
mov
lahf
ret
loopne
nop
add
movb
sub
fimull
rorl
test
lahf
mov
xchg
dec
push
push
scas
mov
icebp
jle
and
aas
mov
dec
insb
test
sbbb
arpl
inc
fisubs
jle
imul
lret
out
and
and
pop
push
mov
orb
mov
dec
jle
sahf
icebp
cwtl
int
sbb
dec
inc
mov
inc
fidivs
or
into
adc
inc
mov
or
dec
jle
mov
in
rclb
sahf
mov
out
out
sub
cmpsl
repz
fstl
ljmp
mov
inc
scas
xor
xor
xchg
push
pop
pop
xchg
das
xchg
fdivrp
hlt
mov
lcall
or
dec
pop
mov
inc
dec
mov
jecxz
popf
pcmpeqw
adc
add
repnz
or
fldt
nop
mov
sbb
adcl
lcall
push
pop
aas
fwait
mov
out
mov
in
mov
outsl
fadd
int3
fcomps
jns
xor
sbb
test
or
inc
pop
stos
mov
orb
ret
dec
cmpsl
push
data16
mov
test
ds
or
cmp
push
fdivrl
pop
mov
xchg
in
mov
mov
orb
popa
xchg
mov
inc
mov
mov
cltd
nop
adc
adc
push
aad
out
mov
xchg
addl
adc
fiaddl
repz
push
aad
jmp
pop
call
or
push
mov
inc
pop
jecxz
mov
lret
xlat
mov
andl
pop
inc
dec
mov
mov
frstor
and
shr
pop
mov
fidivl
pusha
iret
pop
subl
testl
test
insl
pop
sub
xlat
dec
orl
aas
xchg
divb
in
push
mov
dec
xor
es
or
in
cwtl
cmpsb
call
xchg
push
sub
loop
xchg
mov
aas
dec
repz
les
and
jae
dec
scas
lret
lret
jnp
sbb
and
mov
dec
lock
jb
jl
or
lret
xor
in
mov
jae
jg
rcrb
aas
mov
dec
jg
dec
xchg
icebp
popf
add
aad
cmpsl
jae
jnp
loope
stos
lds
popf
mov
ds
fcmovnbe
inc
scas
cltd
cmp
or
into
ja
mov
call
insb
dec
xchg
or
pop
and
jb
in
pushf
xchg
bound
jno
cmp
inc
cld
lahf
adcl
pop
dec
lock
or
xor
cmp
pushf
test
pop
out
and
leave
push
sub
int3
clc
dec
mov
popf
mov
or
inc
ret
dec
into
sub
daa
stos
adc
push
push
add
adc
mov
cmp
in
mov
sub
mov
lock
push
cs
cmp
jo
mov
daa
mov
mov
stos
mov
fisttpl
movsl
inc
loop
add
enter
mov
dec
aas
ja
lret
adc
inc
inc
leave
add
jmp
dec
xor
dec
out
dec
arpl
push
mov
and
sub
fcoml
pop
jns
sub
xor
mov
sub
sub
jae
jbe
sbb
dec
mov
nop
add
fwait
out
ficoml
cli
and
xchg
pop
aas
inc
fs
xor
lret
sbb
pop
push
mov
out
aas
lret
mov
loopne
pusha
lea
or
insb
movsb
into
out
add
stos
sarl
ss
xchg
or
jb
cli
test
adc
pop
cmc
stos
daa
loop
pop
pop
imul
push
xor
cmp
dec
fsubs
cli
mov
data16
psllw
push
jecxz
ret
jmp
mov
imul
and
pop
gs
xchg
ficompl
pop
dec
sub
pop
and
pop
sbb
lock
bound
mov
xor
int3
mov
push
insl
js
lret
inc
imul
hlt
pop
je
aad
pop
out
pop
mov
jbe
shlb
add
subl
inc
or
mov
rcrb
in
clc
add
or
and
popa
into
and
mov
in
lock
jb
ficomps
pop
fld
dec
mov
std
leave
out
in
aaa
adc
je
loopne
jg
cs
divl
scas
mov
cs
stos
sti
fwait
pop
jge
insl
push
and
dec
mov
lods
mov
aad
lds
cltd
scas
jo
pushf
or
cs
aaa
sbb
adcb
not
inc
in
adc
faddl
jg
faddl
das
xchg
insb
in
inc
and
dec
imul
mov
arpl
or
mov
lea
sub
jecxz
jmp
movl
cli
shll
mov
mov
scas
in
mov
pop
cltd
and
pop
dec
sub
js
jg
pop
dec
inc
push
negl
pop
fisubs
cmp
add
rorb
jne
xor
fisubrl
pop
neg
je
add
je
pop
jae
testl
mov
mov
sub
dec
lods
popf
xor
je
jae
inc
mov
xchg
shll
aas
lods
or
pop
push
xor
mov
xor
stc
pop
bound
xor
and
dec
inc
cwtl
test
pop
add
jg
xchg
adc
mov
repz
inc
sbb
rcl
pop
es
movsb
movsl
test
jecxz
out
repz
imul
inc
pop
leave
pop
pop
movsb
call
add
addr16
fdivs
jae
jecxz
xchg
cmp
inc
push
cs
mov
or
pop
fistpll
js
push
xchg
jmp
pop
cmpsb
push
ret
maskmovq
sub
jno
bound
inc
mov
push
mov
sub
bound
adc
pop
aam
push
js
jl
shlb
loop
ja
sbb
jns
mov
lods
mov
pop
cmpsl
out
jae
subl
hlt
inc
and
jns
jmp
mov
popa
inc
movsl
adc
dec
insb
bound
cld
xorb
cmp
shlb
and
out
in
sahf
repnz
cmc
and
fmulp
movsl
or
arpl
pop
cmp
cld
sbb
mov
pushf
cli
rcll
mov
mov
lea
addb
int3
mov
mull
shl
add
sbb
fmull
and
jmp
jae
dec
dec
pop
bound
jmp
in
enter
dec
jg
push
xchg
or
shl
jbe
sub
or
jns
pop
sub
fs
mov
sub
lret
es
call
mov
mov
dec
sub
and
mov
jmp
lret
lahf
xchg
ficoms
sbb
push
mov
jl
div
insb
xchg
dec
dec
mov
xchg
sar
sub
pusha
xchg
ud1
dec
iret
mov
scas
test
sub
pop
insb
in
mov
xor
mov
dec
xor
sbb
xchg
or
xchg
in
popa
push
cmpb
fimuls
adc
sbb
imul
sbb
adc
clc
fidivrs
adc
sub
push
fidivl
add
call
call
push
popf
loope
xor
mov
sub
lock
or
push
jp
movsb
dec
addr16
call
and
outsb
jns
jb
rclb
lods
cs
push
adc
aam
mov
xor
sbb
dec
cwtl
in
out
lods
fidivl
stos
fdivrl
out
push
jne
icebp
scas
mov
testb
cmc
repz
pop
sbb
mull
pusha
addl
int3
cltd
fadds
jecxz
adc
stc
fimuls
sub
adc
int3
std
push
xchg
mov
dec
test
mov
int
inc
sahf
mov
repz
adc
jo
sub
sub
xchg
lds
inc
mov
mov
and
mov
cmc
xor
inc
lods
adc
lock
xlat
fdiv
adc
or
test
cmp
shll
sub
loopne
xlat
jmp
jae
test
daa
push
mov
nop
rclb
aas
xchg
and
cmc
out
mov
ret
sahf
pop
popf
daa
or
int
cmp
divb
mov
inc
ljmp
dec
jl
into
les
push
push
inc
test
icebp
jecxz
dec
scas
std
pusha
mov
adc
fnstcw
fs
cwtl
sub
test
xchg
sbb
sub
push
or
add
pextrw
cmp
repnz
sahf
adc
out
scas
sub
in
repnz
sbb
xor
dec
addr16
mov
dec
shlb
push
iret
jb
push
arpl
je
cmp
jns
clc
das
jne
insl
fbstp
or
pop
cmc
and
cmp
xchg
and
xor
sbb
jno
ljmp
jp
aad
inc
mov
ss
pop
dec
into
scas
push
adc
adc
in
cmpl
loop
inc
xchg
lds
pop
lea
pop
mov
cmp
mov
jb
not
call
sbb
push
aad
xchg
jle
sahf
dec
fistps
inc
sbb
out
pop
lds
mov
cmpsl
mov
fsts
or
pop
cmp
aas
scas
bound
fisttpll
or
cld
cltd
push
call
jb
jp
mov
jae
std
adc
nop
cmp
mov
insb
dec
aas
xchg
sahf
inc
test
fsubrl
cmpl
movsb
sub
imul
cmp
sbb
loope
add
jo
ljmp
sub
out
test
lcall
xchg
rorl
push
inc
pop
and
fsub
or
cmp
dec
pop
mov
nop
sbb
aam
mov
mov
mov
fdivrl
lahf
lds
mov
and
inc
sahf
mov
mov
jge
imull
xchg
out
lret
jns
push
jb
ret
adc
push
push
jo
test
pop
mov
outsb
mov
pop
inc
dec
pusha
adc
or
ljmp
xor
loop
cs
mov
scas
test
jno
out
xor
inc
int3
in
add
pop
loop
mov
and
jno
xor
loopne
aad
test
cmp
dec
cmpsb
clc
cli
sarl
inc
int
sub
dec
xchg
sub
cmp
loopne
repnz
sbbl
shlb
test
test
inc
call
sub
lods
push
test
out
out
xchg
and
out
stos
add
gs
repz
and
shr
cmp
stc
mov
mov
movsb
loopne
aam
mov
lahf
jmp
cmpsl
das
out
icebp
or
frstor
bound
int
inc
xchg
sub
dec
leave
adc
fs
enter
jmp
sub
cmc
sub
sbb
lret
and
nop
out
jae
or
or
test
imul
cltd
repnz
shlb
leave
sbb
mov
jp
sub
cltd
movsb
sub
jge
jbe
xchg
ret
dec
xchg
movsb
imul
out
fdivrl
inc
cmpl
hlt
sbb
pusha
lods
and
inc
pop
pop
cld
cmc
ds
push
jmp
and
divb
pusha
dec
mov
sub
mov
mov
pop
jnp
cs
add
dec
jo
repnz
adc
xchg
test
push
orb
push
jecxz
addl
in
sub
mov
mov
js
out
sarl
jnp
js
lea
dec
mov
popa
add
jecxz
add
cltd
test
sbb
sub
push
ja
js
adc
fidivl
or
jbe
in
rorb
jno
sub
xchg
adc
add
cmp
pusha
fs
loope
call
filds
jmp
fisttpll
jne
loopne
rcrb
adc
jne
dec
sbb
pop
pop
push
stc
mov
loop
or
pop
inc
xchg
fwait
mov
out
pusha
pop
sub
cli
popa
pop
int
repz
xor
popf
fs
push
sub
mov
jne
add
roll
lea
jg
mov
mov
mov
pop
xchg
sti
jae
das
sbb
jbe
js
add
push
daa
and
adc
bound
lahf
aas
mov
arpl
movsb
fidivrl
loopne
out
fcomps
sub
int3
addb
push
lds
jg
xor
mov
push
pop
repnz
sbb
push
inc
cmpsb
rcr
aas
lret
std
lcall
in
push
repnz
and
es
test
jbe
clc
imul
cmpsb
mov
push
push
sbb
mov
or
sub
sbb
lret
sub
in
jae
enter
sbb
sbb
movntps
sub
das
inc
dec
fisttps
pop
push
add
scas
pop
ja
mov
xchg
mov
jb
arpl
push
ficoms
lcall
pop
add
mov
xor
popf
dec
das
ret
repnz
fs
sub
cmpsb
mov
outsb
add
lea
orl
adc
ja
int3
mov
mov
sub
push
out
push
inc
and
add
jno
mov
movsb
xchg
cli
test
loop
mov
mov
jbe
ret
cmc
xchg
clc
movsl
xchg
fdivrl
cmp
stc
les
lods
mov
jnp
orb
xor
lods
jns
jle
ljmp
imul
in
xchg
cmp
mov
mov
and
pop
dec
repnz
ljmp
je
cld
mov
xor
push
outsb
xchg
pop
inc
push
or
dec
fldcw
xor
fcmovne
mov
xor
adc
fsubs
adc
popf
mov
dec
sahf
dec
mov
sti
bound
pop
lret
xor
jno
imul
fwait
mov
sahf
fcomp
movsl
imul
iret
es
mull
xchg
imul
pop
mov
fmuls
jne
incb
jb
jg
or
xor
sub
pop
insl
rcll
xor
ret
jle
cs
popl
inc
lcall
test
xor
mov
jb
jne
enter
xor
scas
rcl
mov
daa
mov
in
cmp
pop
aas
mov
mov
and
fcmove
mov
loope
inc
test
and
dec
mov
ja
addr16
add
xchg
mul
scas
repnz
repnz
aaa
pushf
test
xlat
orl
jb
add
jae
xchg
or
cmc
sti
push
cli
adc
fiaddl
add
faddp
pushf
aaa
mov
popf
pop
inc
cmp
outsb
arpl
adc
fwait
pop
sub
xor
popa
ja
sahf
sbb
les
data16
sub
mov
fnstenv
jno
es
rorb
mov
shl
daa
mov
int
fstps
add
xlat
pushf
xor
fimull
push
push
mov
sub
jno
lea
mov
pop
and
neg
xor
sub
int3
out
aam
mov
mov
popf
mov
cmp
xor
test
sbb
mov
add
out
sti
aas
or
inc
sahf
outsl
in
scas
lea
dec
mov
rol
inc
xchg
out
cmpsl
jle
xor
test
lcall
mov
scas
mov
or
int
nop
repz
lock
dec
mov
dec
lods
ret
lret
cld
inc
mov
daa
pop
imul
sbb
and
mov
cmp
fcmovne
xchg
push
ret
lods
sbb
push
sarb
fnstsw
inc
rol
loope
fstl
mov
sahf
popf
cmp
les
or
xor
sbb
and
jl
and
mov
pop
inc
fcos
or
insl
dec
mov
jae
jns
out
or
cs
roll
jae
es
push
jne
leave
lcall
shrb
inc
sbb
call
and
fidivl
imul
xor
out
into
jle
pop
inc
shl
sbb
cltd
xchg
hlt
push
inc
mov
jno
jecxz
fisubl
enter
or
aas
xor
push
sti
int3
xor
cmpsb
fsubs
sbb
jg
push
dec
jge
mov
repz
and
loope
adc
sahf
mov
or
pop
in
push
jle
jbe
dec
stc
shll
pushf
fisttpll
adc
pslld
jnp
push
push
in
ret
inc
enter
mov
pushf
lret
lcall
out
pop
xor
aad
enter
fcoml
out
movsb
clc
dec
pop
sbb
mov
ljmp
stos
pop
mov
imul
mov
xor
push
jg
ret
sbb
fs
loop
add
pusha
nop
nop
mov
vrcpss
test
xor
dec
pop
cmp
push
mov
pop
fs
jo
sub
fnsave
test
add
adcb
cs
sti
xor
mov
fsts
mov
les
and
outsb
mov
out
outsl
sbb
add
out
inc
sub
neg
and
push
loop
add
xchg
gs
pop
test
push
mul
cmp
inc
mov
arpl
sub
sbb
mov
add
aad
jle
pusha
jle
rcr
shlb
out
push
out
ret
mov
pop
ret
psubq
cmp
mov
adc
mov
les
add
shrl
xchg
mov
les
pop
scas
cmp
insb
movsb
xor
dec
in
js
popa
xchg
mov
push
scas
xchg
sar
insl
mov
outsb
scas
stc
add
mov
popa
int
cmp
xlat
xlat
test
mov
add
pop
mov
out
imul
iret
outsb
and
push
inc
push
ret
push
jnp
outsb
js
xchg
xorl
push
inc
test
lret
xor
xchg
jb
cmp
mov
fmuls
stc
loop
bound
xor
xor
pop
icebp
adc
repnz
adc
sbb
sbb
cmc
add
int3
mov
imull
inc
mov
cmp
ret
sbb
and
loopne
jae
adc
or
loop
pop
insb
ret
dec
stos
sarl
cs
xor
mov
or
out
mov
scas
mov
adc
cmp
cltd
mov
sub
jo
aad
add
or
nop
aad
sub
mov
cs
rcrb
ror
ja
icebp
pop
aas
xchg
or
in
fdivl
xor
adc
fdivrp
sbb
shr
sub
mov
sub
sub
and
cmp
mov
icebp
mov
cltd
pop
and
fs
test
adc
and
jo
ficompl
cmp
sub
xor
dec
jb
xor
xor
inc
adcb
dec
pop
sub
into
cmp
out
push
daa
subl
out
dec
pop
mov
fsts
push
rsqrtps
push
enter
dec
lret
push
sub
outsb
mov
fcmovnbe
add
lret
hlt
or
and
or
es
into
dec
int3
mov
jp
notb
lea
enter
mov
dec
lods
flds
mov
pop
mov
or
pop
xlat
xor
nop
or
dec
repz
out
jl
push
mov
jne
push
xchg
in
out
or
mov
mov
out
cmpsl
inc
scas
lock
push
inc
inc
or
xlat
bound
sub
push
xchg
idivl
aam
out
stos
pop
sub
into
je
mov
add
sbb
outsl
lods
je
jo
out
push
cmpsl
in
pop
clc
ja
mov
pop
inc
adcl
and
int3
lahf
cmpsl
jnp
test
fisubrl
clc
mov
jmp
jg
idivb
mov
or
mov
insb
mov
mov
pop
adc
call
cs
ljmp
pop
sbb
jle
pusha
cmc
jnp
mov
or
cmp
dec
stos
in
xor
insb
out
cmp
and
add
arpl
ficompl
mov
xchg
lea
scas
sahf
enter
outsl
mov
mov
mov
mov
icebp
dec
dec
sbb
out
movsb
pop
fstpl
fcompl
leave
jno
add
cmp
mov
aad
fsubp
add
add
out
imulb
jbe
ret
dec
mov
stos
out
icebp
cmp
addb
xchg
into
jno
mov
movsb
mov
sahf
sub
stc
xchg
cmpsb
adc
mov
aad
xchg
xorl
and
mov
daa
jbe
aam
ror
adc
sti
lret
cmc
xchg
adc
inc
arpl
jle
mov
jo
xchg
fldenv
shl
xchg
ljmp
fwait
mov
out
adc
inc
add
je
push
lahf
sub
ret
xlat
sbbb
or
jae
out
mov
xor
cld
pop
adc
jbe
cmp
jecxz
sbb
arpl
pop
outsl
stc
hlt
cwtl
dec
pop
std
mov
sbb
push
out
jp
mov
test
into
jo
lret
xchg
or
adc
sbb
movsb
lea
aas
sbbb
fisubl
pop
insb
roll
lret
jp
fcmovbe
push
or
push
cmp
cmp
adc
sub
out
movsl
mov
int
insl
inc
call
lcall
scas
push
xchg
dec
insl
int3
sarl
iret
mov
out
jmp
push
add
aam
loop
add
insl
enter
cmp
out
popa
rcll
stos
xchg
pop
xchg
xchg
pop
loop
lods
inc
aad
data16
and
adc
xlat
mov
mov
pop
bound
call
lock
sbb
movsb
lock
cld
cmp
movsl
lahf
ret
and
cmp
dec
mov
xchg
sti
dec
ds
lea
call
insl
cs
fsubrs
enter
push
pop
pop
cmp
sbb
test
jno
sbb
inc
in
or
cmp
xchg
sahf
testl
pop
outsl
fwait
jb
imul
xor
bound
sub
das
ret
fnstcw
xor
scas
iret
cld
sbb
mov
ret
pop
mov
mov
jnp
xor
push
cwtl
xor
cmpl
aas
xlat
stos
pop
sbbb
in
push
xchg
sbb
sub
sub
pop
loopne
dec
daa
outsl
popa
cmp
cmp
sbb
jge
push
pop
pusha
dec
push
test
pop
xchg
jno
fstl
and
cmp
stos
push
push
pop
sub
fisttpl
sbb
stos
xchg
repnz
fsubrs
sub
push
jmp
cltd
jo
imulb
inc
push
clc
clc
fadds
jnp
mov
mov
leave
dec
push
leave
out
lret
sub
xchg
mov
adc
mov
mov
lock
outsb
dec
xor
les
aam
jae
sub
jp
aam
jns
xlat
out
pop
mull
adc
jmp
shrl
cmp
int
mov
mov
mov
sub
enter
mov
mov
shrl
xchg
sahf
pusha
fxch
mov
repz
inc
orb
sub
test
cmp
mov
dec
pop
xor
or
mov
movsl
xchg
iret
xchg
in
push
adc
mov
js
xchg
es
scas
xchg
dec
push
fwait
xor
into
dec
lea
aas
xchg
xlat
mov
mov
test
lcall
bound
mov
sub
shr
cmp
lret
outsb
fs
pushf
adc
je
cmpl
sar
gs
lds
sbb
out
popf
push
inc
out
jbe
sub
pop
aas
xorb
sub
sub
les
enter
push
xor
fisubs
add
cmpl
adc
imul
int3
sub
les
xchg
mov
cli
xchg
lcall
mov
out
mov
es
inc
adc
pop
cmp
and
push
shrl
loopne
jns
xchg
cmc
subb
xchg
mov
sbb
fadds
lods
sti
push
cmp
sbb
or
or
cmp
cmpsb
in
push
cmp
dec
sbb
lret
adc
mov
adc
jae
lods
xchg
sub
mov
inc
idivl
push
pop
sbb
mov
test
test
jb
cmp
ja
js
or
inc
and
repz
xchg
dec
orb
inc
add
inc
mov
test
mov
sub
fwait
lea
add
orb
insl
push
mov
add
xor
jo
xor
dec
mulb
lds
out
loop
push
push
arpl
pop
pop
pop
addr16
ds
mov
adc
and
mov
cmp
aaa
mov
imul
sbb
mov
test
inc
cltd
lods
sbb
jnp
lock
sti
sbb
or
in
sbb
cmpsl
xchg
int
mov
shlb
mov
jp
leave
inc
and
jge
push
jmp
out
add
imul
inc
jns
or
and
inc
xchg
in
cli
push
out
sub
scas
mov
stos
cmpsb
movq
rol
nop
insb
sbb
add
insb
push
test
dec
fwait
dec
mov
int3
out
hlt
ret
mov
in
mov
jnp
adc
jecxz
mov
fcom
ljmp
adc
add
jb
in
push
movsl
xchg
push
cmp
lds
pop
jmp
or
loope
and
jl
in
aas
jl
or
out
leave
sahf
adc
dec
mov
test
inc
add
orl
mov
add
test
dec
xchg
xorl
xchg
or
popf
das
jecxz
sbb
addr16
movsb
ret
mov
sbb
call
jae
insb
sub
lock
mov
pushf
daa
mov
loop
repnz
shr
nop
popf
lock
rcrb
filds
imul
movsb
push
loopne
xchg
gs
dec
pop
adc
lock
cld
cmpsb
xchg
out
adc
test
pop
xor
sbb
test
movsb
fdivrs
in
fcmovbe
mov
les
jp
add
clc
push
fdivl
inc
cmpsl
jnp
push
mov
nop
outsb
shl
pop
sub
xchg
test
inc
imul
mov
out
dec
jnp
sub
add
inc
jno
imul
sub
xor
cmp
aaa
xchg
sti
std
scas
jo
jbe
in
daa
test
add
xchg
push
cmp
mov
movsb
fdivrs
sbb
xchg
dec
inc
or
xchg
mull
mov
rclb
aas
sti
add
jae
xor
inc
sahf
cmpsl
jae
dec
std
push
or
cmp
add
mov
xor
ret
inc
xchg
enter
sub
data16
xchg
adc
dec
pop
lret
and
push
test
iret
pop
inc
or
sub
repz
mov
and
xchg
and
add
insb
mov
mov
pusha
mov
mov
mov
hlt
xor
sbb
pop
fwait
dec
rol
sub
push
add
movsl
push
lahf
lds
or
decb
add
dec
mov
mov
inc
xchg
iret
xchg
inc
xchg
sbb
loope
xchg
inc
jns
jae
outsl
xchg
in
or
jle
push
dec
mov
adc
push
adc
shll
sub
pop
push
aam
in
mov
push
or
js
or
clc
icebp
dec
and
js
es
addr16
movsl
and
orl
xor
fmul
jne
imul
int3
inc
adc
jp
adc
incb
jno
mov
jl
stos
sbb
loope
dec
push
add
test
ljmp
jno
jmp
pop
sub
pop
sti
cld
jle
ljmp
sbb
jno
push
pop
dec
sbb
outsb
call
or
idivb
pop
aaa
xor
sbb
scas
jae
adc
andl
ljmp
jne
or
mov
fwait
call
test
mov
scas
es
fmuls
push
fdiv
shrl
fcoml
adc
mov
daa
mov
lock
popf
sub
push
xchg
mov
xchg
push
std
int3
cltd
je
xchg
daa
nop
in
jae
sub
jns
xchg
stos
leave
pop
jnp
dec
inc
jnp
and
aas
pop
nop
loope
sub
int
roll
xor
xor
mov
cld
sahf
push
jecxz
fs
aad
xor
shlb
adc
orb
and
aam
arpl
nop
call
jp
and
push
xor
mov
push
call
cmp
aas
scas
stos
nop
or
xchg
dec
pushf
pop
cmp
pop
mov
or
add
push
sahf
stos
add
or
push
int
push
cli
xchg
dec
das
mov
and
xor
lahf
mov
test
shll
adc
push
mov
stos
sbb
add
clc
add
fwait
lahf
adc
add
scas
sub
loop
jle,pt
fwait
mov
xchg
dec
mov
mov
fnstenv
dec
pop
sbb
in
loopne
shrb
aas
lret
in
es
mov
fists
adc
jge
mulb
movb
inc
addl
js
ret
pop
sbb
bound
in
scas
or
or
push
push
jl
pusha
mov
or
icebp
enter
mov
pop
or
js
push
popa
leave
xchg
aas
mov
pop
pushf
orb
push
mov
sbb
mov
push
lock
loopne
push
inc
icebp
mov
and
in
or
ja
mov
mov
into
cwtl
or
pop
js
pop
xchg
jmp
shl
shr
sub
push
shll
jns
xchg
outsb
and
ja
ljmp
cmp
jne
dec
mov
sub
aas
hlt
stos
cmp
push
and
out
sub
fucomip
loop
inc
jmp
push
cmc
mov
ror
shlb
clc
insl
xor
imul
adc
adcb
movlps
pop
mov
stos
cmpsl
mov
mov
les
inc
jg
ret
push
mov
imul
xchg
jb
or
push
repz
mov
or
and
push
and
adc
cwtl
push
outsb
mov
xor
cmp
push
js
les
scas
dec
movsl
loopne
faddl
fs
jp
adc
cmp
popf
cld
adc
aad
adc
xchg
arpl
mov
test
fsubrs
xchg
lahf
or
enter
adc
andl
dec
jge
movsl
mov
loope
call
xchg
and
mov
mov
cltd
je
or
lea
inc
les
into
xchg
add
xor
scas
and
jp
lcall
pop
out
cld
sub
imul
cs
ja
fcmove
adc
jae
push
jns
push
cmp
lcall
lcall
sub
aaa
jo
int3
jl
ja
in
pop
popf
cld
dec
pop
inc
sbb
inc
leave
dec
push
cmp
lock
adc
mov
adc
fmuls
or
sbb
pop
mov
stos
incb
rclb
scas
cmpsb
jnp
and
jb
mov
jo
ficomps
jo
popf
pop
out
pop
push
int
sbb
and
int
dec
jae
push
xchg
or
add
pop
daa
mov
cli
sarb
dec
mov
outsb
inc
movq
jne
adc
push
clc
lcall
pop
test
and
outsb
rcl
pop
cmp
cltd
movsb
lods
sar
mov
lret
and
sub
mov
insb
jmp
loope
push
sub
js
adc
xor
stos
mov
out
in
xor
xchg
fsubl
movsl
insl
ret
push
aas
add
lock
cmp
fisubrl
loope
pushl
movsl
cmpsl
incb
aad
fs
inc
neg
out
popw
inc
adc
pop
pop
and
push
lret
in
pop
mov
lods
lds
jl
mov
fmuls
not
mov
and
je
cmp
sbb
ja
pop
xor
lods
xor
jle
scas
lods
lock
loop
dec
and
adc
jbe
mov
push
leave
cmp
cmp
xchg
dec
out
and
adc
mov
imul
and
test
mov
subb
adc
xchg
outsb
push
jmp
and
mov
mov
pop
mov
push
cltd
adc
stos
cmpsb
xchg
xchg
into
mov
adc
sbb
out
xchg
jne
push
mov
ficomps
adc
push
push
xchg
push
push
out
popa
lcall
ret
popf
jnp
adc
fnsave
inc
sti
je
ljmp
sub
cmp
int
pop
sahf
ds
mov
mov
popa
ja
test
add
xor
jecxz
sti
dec
gs
leave
fbstp
pop
stc
ret
out
sbb
fldl
mov
mov
jbe
cltd
hlt
sbb
or
add
jbe
enter
rclb
scas
into
addr16
jno
xchg
jne
cmpb
inc
in
xor
stc
mov
sbb
add
mov
mov
loopne
push
pop
jge
mov
pop
loop
test
mov
bound
cmp
cmc
and
adc
lret
mov
inc
out
mov
aas
sub
mov
xorb
mov
mov
ds
inc
lock
pop
in
test
xchg
movsb
or
push
loope
sbb
loope
and
jle
test
out
int
xor
dec
loopne
iret
daa
out
lcall
mov
push
inc
and
cli
leave
push
adc
xor
push
jnp
cmpsl
xor
mov
fldt
das
enter
shll
mov
enter
jbe
leave
aas
xchg
cmp
or
pop
inc
out
sahf
enter
lahf
ss
enter
mov
fmull
outsb
cmp
add
enter
inc
mov
popa
sbb
sarl
pop
mov
aad
addr16
aad
out
imul
int3
out
icebp
pusha
into
push
add
push
sub
mov
loope
das
and
sub
enter
cli
or
sbb
lock
je
enter
scas
fistpl
mov
xchg
jb
int3
xchg
or
xchg
aad
lahf
add
mov
das
pop
loop
dec
loopne
cwtl
sub
xchg
mov
scas
int
inc
loop
push
and
cmpsl
dec
adc
dec
test
aaa
fsubrl
rcr
cmpsl
jne
test
arpl
lcall
arpl
xchg
mov
out
aas
push
mov
lods
outsb
hlt
sub
mov
fcmovnu
into
cmp
out
out
jbe
mov
loop
stc
or
cmpb
rcr
jge
out
cmp
or
xor
mov
test
push
push
ds
dec
jns
mov
fwait
fwait
in
push
lcall
aad
adc
ds
sti
push
mov
sub
test
push
enter
mov
hlt
pop
cwtl
call
std
cs
jnp
cmc
mov
xchg
loopne
loope
lock
pop
jns
into
loop
rcrb
ss
jle
fldt
and
out
enter
dec
sbb
cmp
fcmovne
fstps
adc
dec
addr16
dec
lret
les
xor
shl
cmpsb
xchg
xchg
fisubrl
insb
outsl
xchg
fwait
push
nop
stos
cmovg
or
jmp
in
inc
stos
jb
mov
icebp
jb
shll
les
into
sbb
movsb
mov
stos
and
jo
stc
pop
sbb
and
cmpsb
jbe
sub
test
adc
sbb
pop
es
push
nop
dec
pop
out
shrl
cs
inc
or
insl
repz
fdivp
repz
jg
rol
call
mov
loop
mov
jle
repz
out
dec
test
add
xchg
psubd
into
mov
xor
mov
in
xchg
popf
out
lahf
dec
int3
out
insl
add
jecxz
add
push
jl
into
call
scas
sub
sbb
xchg
or
aad
imul
movsb
ret
xor
out
xor
cs
or
into
xor
pop
mov
add
cltd
stos
push
dec
mov
mov
push
jb
jl
add
mov
jbe
dec
mov
mov
test
cmp
inc
subl
mov
inc
pushf
sub
mov
decl
loope
inc
and
ficomps
roll
sti
out
pop
pusha
aaa
pop
jp
and
mov
lahf
das
jo
jo,pt
jno
stos
mov
outsb
scas
hlt
popf
jg
cmpsb
jge
mov
mov
adc
or
adc
add
leave
cmc
push
mov
loop
cmp
cmp
mov
sub
sti
mov
push
sub
xchg
or
adc
adcb
mov
or
inc
mov
mov
outsl
mov
dec
jg
aam
dec
sbb
lahf
pop
stos
cs
inc
in
jno
push
sub
adcb
and
jl
adc
sahf
dec
cmp
icebp
xchg
cwtl
jmp
cmc
inc
adc
lret
outsl
rcll
and
jnp
xchg
sub
ds
and
pop
push
push
pop
stos
sahf
jne
shrl
movsl
out
stc
insl
ret
mov
js
adc
mov
subb
adc
in
stos
ss
je
cmp
movsl
loopne
sbb
es
mov
xlat
ljmp
sub
mov
mov
push
loop
cmp
add
add
pop
repz
mov
movsl
and
movsl
mov
inc
hlt
mov
cmp
cli
cmp
xchg
pop
fadd
cmp
xchg
out
stc
add
mov
sbb
add
leave
icebp
pop
dec
cmc
jle
push
enter
adc
popf
jno
mov
jns
movb
ret
adc
add
insl
sbb
int3
push
call
fcompl
inc
push
fsubrs
push
push
loop
mov
push
dec
in
add
mov
ret
inc
jbe
ss
lret
stos
or
xchg
pushl
push
sbb
std
push
mov
xchg
ja
mov
sbb
arpl
or
repnz
pop
push
loop
inc
mov
xchg
mov
push
hlt
cmp
in
add
nop
pop
insb
jb
push
test
or
mov
push
aaa
fistpll
inc
iret
ljmp
jno
imul
pop
jae
jno
mov
in
fnsave
adc
mov
es
out
and
aam
sub
imul
in
sti
adc
lods
in
adc
andb
lahf
mov
in
into
mov
es
mov
xchg
idivb
adc
xchg
iret
adc
jmp
pop
or
xor
enter
sub
push
fisttps
add
cltd
imul
mov
inc
pop
cs
arpl
xor
fnstsw
xor
ds
scas
pop
mov
mov
adc
cmc
xor
loopne
loop
xor
and
xchg
pop
das
fadd
int3
faddl
loope
fs
and
cli
js
lods
xchg
fbld
mov
jb
in
sub
pop
iret
sub
bound
das
repnz
fldl
sbb
mov
jp
jno
xchg
add
inc
test
test
jno
and
in
ds
push
lcall
mov
jmp
push
ficomps
into
jnp
cs
rol
into
sbb
sbb
xchg
test
xchg
jmp
jmp
cwtl
ds
add
lds
mov
mov
inc
fnstenv
out
subl
jg
scas
mov
dec
jge
arpl
jo
mov
test
inc
sub
mov
sbb
xchg
fistl
adc
les
lea
inc
xchg
push
jp
mov
loopne
scas
ficompl
jg
fmulp
push
mov
inc
and
cmpsl
mov
jecxz
ljmp
sub
push
mov
cli
xchg
push
ljmp
dec
stos
fimull
mov
cmp
fsubs
rcrl
xchg
jnp
rcl
test
sub
daa
sub
addr16
and
adc
cltd
pop
int
push
or
xchg
int3
push
fmul
test
lds
cs
adc
jecxz
int3
jl
repnz
jecxz
and
sbb
cmpsb
lea
and
stc
fldcw
mov
jecxz
lock
pop
insl
std
aad
xor
push
adc
call
mov
inc
push
cmp
and
out
fimuls
popa
icebp
sub
scas
fsubrs
fistpll
rolb
dec
scas
iret
mov
and
lea
je
mov
dec
push
mov
xchg
mov
jbe
in
test
inc
rorb
mov
and
jo
in
push
sbb
data16
xor
pop
xor
fs
in
outsb
incb
jnp
int
loopne
testb
sbb
out
mov
data16
aad
adc
jo
dec
imul
dec
add
or
pop
dec
inc
pop
sub
movsl
dec
pop
or
pop
ljmp
pop
iret
sbb
enter
enter
sahf
pop
adc
mov
pop
loope
push
pop
cwtl
pop
push
cmpb
pop
sub
cwtl
dec
hlt
pop
jne
dec
mov
and
jmp
push
and
sbb
addl
nop
sub
jecxz,pt
and
out
aaa
repz
add
add
cmpsl
sarb
fcos
sbb
stos
xchg
and
push
notb
or
int
mov
lret
ljmp
leave
xchg
xorl
stos
or
pop
arpl
dec
fldenv
es
popf
sub
push
mov
ret
shlb
push
inc
js
stos
and
subl
sub
test
hlt
mov
and
jae
repz
sub
in
aas
lret
cmp
and
les
pop
mov
dec
std
and
dec
dec
in
sub
sbb
insb
and
jg
xor
mov
mov
pop
dec
xchg
std
movsb
mov
lock
sahf
xchg
cld
xchg
jns
xor
call
jns
mov
jl
add
push
add
and
add
loopne
adc
add
adc
popa
jecxz
dec
mov
pop
test
mov
mov
notl
out
aaa
aaa
scas
adc
je
xor
xchg
loope
sub
push
sub
sti
cli
jae
cwtl
mov
ret
cltd
push
scas
cmp
aad
xchg
dec
push
mov
jp
ljmp
add
je
out
loopne
rcrl
mov
pop
push
incl
xor
mov
lret
and
mov
push
push
shlb
xor
cwtl
cmpsb
sbb
xor
stos
test
sbb
pushf
xchg
add
loope
inc
mov
fcmovb
add
btc
sub
jle
dec
push
std
das
inc
or
push
push
ljmp
xor
lods
jmp
dec
pop
stos
pusha
adc
rcl
ficomps
jp
fsub
out
inc
mov
inc
or
sbb
dec
xchg
jae
inc
ds
jne
or
mov
testb
lods
push
aad
sub
lea
xor
insb
jns
les
cmp
sub
leave
push
repz
nop
test
das
lock
or
in
std
push
jg
adc
mov
std
mov
int
jp
cli
jl
out
divb
lahf
or
inc
mov
insb
mov
aaa
push
arpl
dec
or
xchg
cwtl
and
ds
add
fcomp
mov
adc
rorb
loop
dec
aas
xchg
mov
shrl
into
and
jae
fcoml
inc
xor
jns
ds
shll
sbb
lds
mov
or
pop
push
pop
fnstenv
notl
leave
sub
rorl
fs
fcoms
dec
aas
adc
ret
inc
add
fsubrl
jnp
pusha
ftst
push
cwtl
push
test
repnz
cli
inc
inc
jp
push
or
mov
stos
stc
testl
adc
or
adc
fistps
push
xor
ljmp
addr16
int
push
adc
iret
push
xor
imul
mov
cwtl
mov
or
push
icebp
in
mov
dec
adc
sarb
pop
xchg
push
adc
aam
add
icebp
mov
popf
mov
push
pop
cmp
xlat
fwait
cmc
add
jmp
add
push
jle
sbb
add
imul
call
jnp
daa
popa
nop
push
xchg
adc
fwait
test
push
outsb
mov
mov
pop
repnz
mov
fcomip
inc
adc
xor
mov
or
pop
pop
add
and
xchg
inc
inc
sub
popf
les
daa
in
jg
stos
aam
outsl
push
stos
or
aas
outsb
mov
movsl
mov
mov
mov
adc
imul
inc
mov
mov
mov
add
mov
dec
inc
pop
or
cld
inc
mov
dec
jecxz
pop
mov
clc
cmc
hlt
mov
jmp
mov
outsb
arpl
pop
jecxz
add
loopne
xlat
aas
xchg
arpl
imull
xorl
dec
rorb
out
into
xchg
dec
ret
dec
stc
mov
mov
fwait
add
sbb
xor
ret
or
or
insl
insb
sbb
rolb
fidivs
fs
stos
mov
xchg
xlat
xchg
push
pop
sub
lods
imul
xchg
push
add
int3
shll
xchg
iret
jl
dec
cld
sti
and
nop
addl
push
push
mov
pop
je
push
bnd
inc
push
ret
stos
popf
add
adc
mov
jbe
cmp
fisttpll
sarl
fcoms
mov
cmc
lahf
dec
push
push
fcomp
jns
mov
push
out
cmp
mov
repz
stos
mov
inc
adc
push
repnz
push
arpl
lods
jne
jp
filds
or
aas
inc
movb
xchg
push
incl
wbinvd
in
pop
loopne
divb
scas
cmpsl
pop
xor
xchg
addb
mov
out
test
mov
push
push
inc
pop
sbb
out
out
dec
cli
adc
fld
mov
test
add
push
fs
mov
sub
xchg
out
xchg
mov
jp
mov
imul
inc
and
pop
push
jge
aam
pop
rcr
mov
xchg
mov
lea
imul
test
testb
andb
test
pop
push
das
arpl
adc
pop
push
and
adc
outsl
dec
sub
addr16
xorl
pop
sbb
mov
int3
cmp
pushf
lock
xchg
sbb
adcl
mov
xchg
xchg
push
popf
aad
jp
mov
adc
lods
mov
and
jo
and
sub
mov
push
cmp
pusha
roll
jecxz
xor
imul
rorb
or
jo
push
cmp
inc
jne
jb
mov
je
push
mov
push
add
dec
in
cmp
sbb
xchg
mov
sub
and
into
stc
in
push
lock
cli
stos
jae
mov
push
mov
push
mov
add
ljmp
push
mov
pop
loopne
xor
fwait
jl
fstp
popf
cmp
ffree
cmp
add
mov
jp
jle
and
subl
imul
push
mov
lods
cs
shrl
xchg
je
daa
jns
stos
xchg
test
ljmpw
jnp
jnp
pop
subl
dec
push
mov
cmpsl
pop
inc
mov
mov
outsb
lret
push
stos
adc
sub
jne
adc
cmp
mov
repz
std
inc
inc
testl
nop
xchg
jbe
out
dec
pop
adc
cmpsb
loope
ror
push
xor
jge
ret
jae
dec
dec
xchg
insb
xchg
cwtl
dec
pop
enter
jne
stos
int
and
add
out
jae
xchg
imul
imul
int3
or
dec
inc
jae
inc
sbb
pop
inc
jnp
xchg
lahf
add
lock
xchg
lahf
aam
mov
sbb
inc
mov
pop
push
cmpsb
or
jecxz
hlt
cmpsl
out
pop
popa
mov
out
shrb
jmp
sbb
adcl
or
je
sbb
adc
inc
mov
repz
adc
or
xlat
rcll
insl
cmp
sub
inc
hlt
and
test
sbb
or
out
cmp
bound
mov
and
arpl
push
repz
out
jno
dec
test
xchg
lahf
loopne
in
fldcw
rorb
xchg
dec
mov
mov
mov
and
dec
xchg
pop
or
ja
icebp
subl
pop
inc
dec
imul
lock
push
stc
ret
dec
sbb
dec
cmp
addb
mov
xchg
insl
mov
dec
dec
popf
stc
lods
mov
outsb
fwait
ret
leave
stos
cmp
adc
or
insl
out
mov
fsave
pop
jp
xor
xchg
mov
loope
div
jmp
pushf
xor
stos
pop
in
movsl
cmpsl
negb
hlt
dec
test
rsm
and
out
adc
aaa
fdivl
push
cmc
push
addr16
pop
mov
pop
or
and
mov
stos
push
pop
daa
pop
inc
pop
cmc
nop
sbb
pop
mov
out
adc
xor
sbb
int
cs
rcll
jo
out
scas
nop
dec
mov
stos
push
inc
push
push
xchg
push
sbb
jne
std
in
leave
bound
jg
out
dec
test
pop
mov
xchg
lods
or
cli
outsl
adc
xorl
aam
jns
fdiv
sub
mov
inc
jb
cld
imul
popa
cs
cmp
sbb
bnd
fmull
fadd
mov
cmp
out
adc
dec
dec
gs
sub
daa
jae
add
psubb
jne
jle
mov
cli
icebp
adc
add
loopne
and
mov
ss
or
jge
movsb
xchg
push
insl
mov
push
out
xchg
xchg
xchg
lcall
fdivrl
and
push
push
outsb
lret
sbb
dec
pop
mov
push
fisttpll
fucomp
cltd
xor
push
movsb
adc
mov
pushf
icebp
mov
pusha
inc
ss
or
repnz
mov
mov
fdivs
jno
fisttps
sti
lock
sbb
cli
push
inc
push
jge
xor
mov
push
mov
lods
sub
sbb
mov
mov
jo
fcompl
leave
pop
mov
cld
and
inc
jl
xchg
pop
dec
enter
xchg
std
mov
je
loope
sbb
lods
xor
outsl
cwtl
adc
mov
inc
add
dec
push
mov
stc
jno
xchg
repz
cmpsl
push
push
add
jae
mov
push
and
mov
xchg
xchg
inc
pushf
xor
fidivs
das
idivb
leave
pop
aad
push
imul
addr16
decb
out
mov
lock
ss
fildll
daa
sbb
data16
stc
xor
aam
mov
mov
dec
and
cmp
insb
gs
aad
ja
xchg
cmp
pop
mov
push
adc
imul
mov
and
dec
loopne
add
cmp
jno
maxps
push
sbb
repnz
cwtl
xor
dec
mov
push
pop
loop
xchg
add
test
loopne
fprem
loopne
jnp
mov
lea
xor
jle
lods
les
cmc
cli
stos
mov
mov
lods
movsl
and
dec
dec
push
mov
and
mov
jb
or
push
mov
int3
testl
mov
jbe
lret
and
pushf
or
lock
cmpsb
lret
xor
xor
pop
rcrb
sti
ret
arpl
cmp
enter
sbb
notb
xchg
add
inc
imul
cltd
push
xor
addb
or
xchg
je
insl
xor
dec
or
movb
les
mov
inc
xor
adc
push
fstpl
andl
popa
pop
lahf
fmul
mov
and
shl
xlat
movsl
shl
popa
dec
mov
jne
jle
cmp
mov
imul
fisubrs
cmc
xor
adc
jg
jns
pop
mov
pop
lahf
add
pop
add
sarl
push
sahf
inc
xor
jmp
cmp
cmc
lods
and
xor
sub
hlt
xor
shll
shll
cmp
pushf
hlt
imul
inc
popa
mov
mov
push
adc
jo
pop
inc
in
and
mov
lret
pop
imul
mov
pop
mov
movsl
xor
rolb
add
adc
dec
outsl
mov
and
les
int
add
call
popf
lock
xchg
push
xchg
add
mov
mov
inc
addl
sbb
jle
add
mov
out
fwait
cmp
lods
inc
imul
xchg
xor
loop
popf
mov
fcmove
mov
pushf
fidivrl
icebp
imul
pop
mov
add
pop
testl
aaa
mov
inc
inc
inc
in
xchg
push
idivb
dec
sti
out
mov
xchg
add
lcall
sbb
or
cld
icebp
daa
inc
std
and
out
rolb
jno
sbb
lahf
push
dec
and
xchg
lcall
sahf
push
mov
push
adc
pop
mov
push
scas
jmp
inc
push
cltd
push
pushf
testb
dec
inc
push
xor
push
jecxz
pop
lea
test
jge
inc
mov
push
movsl
jns
std
jbe
pop
xor
jne
push
dec
mov
cmp
cmp
es
inc
test
jne
adc
push
fistl
hlt
data16
inc
in
dec
sbb
push
and
movsb
jl
sub
xchg
xlat
shrb
ds
test
xchg
xlat
mov
aaa
jl
sbb
pop
out
stc
pop
cmp
cwtl
xor
cmp
add
mov
stos
scas
mov
orl
sti
rol
mov
xchg
mov
mov
inc
fisubs
shlb
fwait
or
int3
pop
add
pop
jge
xor
cld
neg
loope
fs
push
xor
scas
fisttpl
xchg
pop
testb
mov
push
add
and
dec
test
sub
mov
push
pop
jb
sub
int3
fisubl
jb
jbe
cmp
test
dec
ljmp
in
push
adc
hlt
fdivs
pop
inc
les
sti
and
push
inc
mov
push
dec
inc
jecxz
fcompl
sbb
or
int
sbb
push
in
clc
pusha
mov
inc
push
mov
pop
inc
fistpl
pop
pop
dec
jo
mov
aad
mov
fbstp
repz
xlat
cmp
mov
testb
add
ljmp
pop
cli
aam
inc
jmp
xor
push
js
xchg
xchg
outsl
mov
in
stos
ja
flds
cwtl
push
or
cmp
inc
daa
inc
pop
or
call
inc
rolb
fmull
sbb
add
lret
mov
push
test
jns
xor
insb
pushf
lret
or
or
stos
cmp
jo
cltd
arpl
cli
loope
cmp
dec
std
imul
pop
pop
in
jns
rorb
lcall
pop
rorl
xchg
mov
rorb
jne
dec
ja
cwtl
movb
cmp
add
fwait
mov
fsubr
pop
inc
sarl
jge
cmp
or
lcall
and
push
or
aaa
or
dec
push
add
insl
test
inc
rorb
adc
aam
inc
and
std
jg
in
add
rol
aaa
mov
sbb
mov
pop
cmp
add
mov
hlt
cli
cltd
int3
xor
stos
push
mov
cmp
outsb
xor
push
test
dec
es
add
push
iret
je
or
mov
sub
cmp
fwait
xor
pushf
sbb
cmpsb
loopne
mov
cltd
je
xchg
mov
xchg
pop
pop
add
inc
adc
jno
jmp
xlat
mov
cltd
push
add
fbstp
shrl
dec
dec
sbb
or
mov
pop
aaa
ja
add
subl
pop
mov
fwait
nop
imul
in
ss
push
jae
jg
aaa
jg
ret
or
pusha
mov
andb
and
xor
and
loop
cmp
adcb
or
inc
in
or
in
jge
xchg
stos
incl
mov
cltd
rclb
insb
adc
dec
adc
invd
jne
daa
mov
daa
fstpt
cmp
cltd
outsl
pop
fdivl
jmp
add
iret
scas
mov
mov
mov
cmp
push
jo
xchg
iret
fldcw
mov
mov
clc
shll
aam
data16
mov
mov
stc
push
add
adc
inc
insl
stos
in
aam
lret
aas
xchg
iret
imul
data16
scas
dec
nop
sub
push
cmpsb
xor
xor
sbb
lock
fs
add
cmp
ds
fs
or
sub
cmc
lahf
aas
push
call
int3
clc
lahf
das
out
mov
fnstenv
cs
movsl
mov
xor
xor
jo
xchg
int3
lea
jp
mov
sahf
repnz
inc
pop
jnp
mov
mov
mov
sbb
ds
mov
call
and
outsl
push
cmp
lods
imul
add
mov
out
xor
pop
mov
adc
scas
pop
arpl
push
shrl
or
xchg
lahf
cmpsb
daa
mov
mov
or
jecxz
lret
dec
sub
rcll
mov
int
hlt
inc
int
xor
sbb
xchg
jl
pop
sbb
ret
stc
lahf
sbb
fsubrs
cld
rolb
add
loope
notb
mov
jae
aad
test
out
xor
outsl
popf
push
mov
aam
xchg
shlb
test
lret
cltd
hlt
je
orb
orb
cmp
cmpsl
fimuls
adc
repz
inc
je
xchg
cmp
ss
movsb
mov
cmp
cmpsl
movsl
call
or
movups
mov
jne
cmpsb
mov
and
outsl
mov
mov
jl
jnp
dec
aas
mov
rcrb
fnstsw
adc
xchg
adc
mov
and
aad
sbb
dec
xchg
sbb
dec
mov
rorb
sub
pop
popa
dec
sbb
jno
mov
sub
inc
inc
test
divb
mov
pop
aam
mov
jle
dec
jp
imul
push
mov
cmp
fmull
lahf
cld
mov
mov
push
xor
dec
loopne
sbb
mov
sub
sahf
or
jno
push
fldl
mov
mov
fisubl
ret
push
xor
nop
movsl
outsl
pushl
mov
mov
mov
pop
popf
rcll
hlt
adc
out
stos
or
push
jmp
popf
push
movb
aaa
dec
xchg
mov
mov
or
test
inc
jae
in
xchg
icebp
mov
jmp
and
dec
aad
sub
mov
rclw
cmpsl
shrl
adc
push
push
bound
pop
and
lret
xchg
inc
pop
lods
jge
gs
jb
hlt
data16
insl
or
fwait
pop
sub
pop
jae
sbb
dec
pop
lods
push
cmovne
stos
int3
faddl
stc
adcl
inc
test
js
adc
sbb
push
cltd
cltd
cmc
cmpsb
mov
cmp
cmp
aam
addl
imul
and
cmp
cs
cli
out
sti
sub
push
ss
xchg
add
test
and
push
pop
scas
add
pop
jl
jg
add
cmp
out
pop
ljmp
push
lret
push
mov
inc
sub
xchg
outsb
cwtl
nop
mov
scas
addr16
adc
loopne
popf
sti
lea
xor
xor
and
mov
inc
dec
in
push
data16
xor
cmc
mov
inc
lea
fwait
mul
js
test
mov
lahf
in
sarb
jmp
mov
jle
inc
inc
push
jecxz
sarb
shll
push
dec
dec
dec
nop
icebp
inc
mov
add
mov
push
sbb
rcl
das
dec
jmp
out
dec
xor
loopne
jmp
sub
inc
xchg
and
jp
in
cmpsb
hlt
and
push
cmpb
mov
ja
push
jmp
inc
mov
xchg
es
cld
jbe
addl
sub
and
imul
inc
ss
xchg
fisubrs
inc
shll
mov
rcrb
jg
aaa
mov
mov
je
add
cs
pop
cmp
pop
jl
arpl
jae
enter
xchg
jns
or
inc
and
int
pushf
cmp
lock
cmp
mov
mov
lret
mov
mov
iret
hlt
dec
xchg
sarl
les
movb
imul
adc
fcoml
jecxz
lcall
sarl
addl
sahf
push
sub
call
ret
hlt
adc
inc
sbb
xchg
cld
sbb
notrack
pop
pushf
insl
gs
js
aas
movsl
jge
fistps
jne
cmpsb
jmp
push
cwtl
jne
jnp
aas
push
fstps
and
enter
lock
pop
pop
push
add
idivl
popf
mov
fwait
adc
xor
sub
jo
fwait
nop
add
cwtl
inc
push
push
daa
jge
add
lods
gs
cmp
in
and
in
das
movsb
ficoms
ja
js
sti
pop
add
in
mov
stc
add
ret
nop
in
notl
in
sarb
and
inc
cmpsb
out
leave
fidivrl
mov
mov
jle
or
and
imul
jnp
xor
sub
push
into
pop
sub
sarb
pop
nop
repnz
pop
push
jno
lods
mov
cmp
daa
mov
out
jns
mul
popa
xchg
pop
mov
sub
jnp
adc
leave
lret
or
cmp
mov
or
or
and
outsb
sub
xchg
pop
cld
jne
outsb
ja
outsl
ss
or
js
test
ljmp
lods
inc
fisubrs
shrd
cs
shll
add
jne
xchg
popa
and
jbe
and
xchg
mov
mov
sahf
shlb
cs
in
repnz
xor
mov
sub
popl
pop
andl
clc
push
mov
lret
mov
int
insb
stc
pop
addb
rcrb
es
fisubrs
int
cmpsb
and
fcomip
pop
orb
out
cltd
into
mov
pop
repnz
stos
icebp
arpl
int
data16
fists
gs
cmpsb
scas
mov
pop
sub
inc
cmp
mov
pop
insb
lds
dec
push
mov
psllq
cs
sub
inc
or
dec
iret
lds
pusha
fbstp
fimull
imul
pusha
fistl
out
data16
outsl
mov
je
add
mov
jo
jmp
nop
dec
std
in
jle
push
ljmp
fwait
jl
xchg
inc
push
hlt
pop
xchg
rorb
sbb
out
dec
pop
and
mov
mov
decl
fbstp
push
push
test
pop
xchg
cmpsb
xchg
loope
cmpb
xor
fdivl
ja
fimuls
cltd
sbb
outsl
inc
fmull
cmp
out
out
inc
lcall
scas
ficoms
inc
js
lods
call
fiadds
movsb
subl
in
add
pop
je
pusha
ret
cmpsb
je
into
dec
pusha
jecxz
add
ret
mov
pop
mov
repz
pop
adc
and
outsb
addl
push
icebp
movsl
xor
jle
aad
xlat
lahf
sbb
push
mov
push
aam
mov
mov
ret
ljmp
mov
and
mov
pop
push
and
scas
cmpsl
fldl
scas
adc
loop
cmp
imul
addl
call
lea
pop
mov
inc
into
push
jnp
jae
outsb
mov
dec
xchg
jb
cmp
subb
sbb
movsl
stos
in
inc
push
fiaddl
xorb
jns
imul
lea
dec
fidivs
jb
lret
fbstp
cmpb
cmpsl
mov
stos
inc
ljmp
repz
or
data16
sbb
jns
movb
push
xchg
insb
jae
or
mov
mov
jle
adc
xchg
je
repz
lcall
adc
inc
dec
lea
cmp
insb
mov
xchg
std
inc
rclb
pusha
cld
push
call
push
imul
cld
adc
test
outsb
cmp
jp
stos
mov
mov
push
add
cli
dec
fldenv
adc
mov
pop
or
inc
sub
loop
daa
in
gs
insl
xchg
es
inc
popl
push
sbb
gs
popa
sbb
add
ja
adc
insw
scas
push
adc
cld
in
cmp
out
pop
shrd
ret
test
rcll
mov
mov
adc
or
dec
or
push
sub
leave
das
inc
pop
lcall
rorl
mov
int
inc
fimull
aad
sahf
mov
mov
adc
sub
sbbb
aam
adcb
movsl
vpcmpeqd
dec
sbb
and
orb
inc
movsl
jp
ffreep
cmp
arpl
mov
cli
or
mov
or
rorl
mov
pop
lods
outsb
and
stc
pop
adc
sbb
dec
repnz
cmp
xchg
adc
pop
ljmp
dec
pop
scas
fisttpl
aas
cmp
sti
cltd
jg
or
test
xchg
incb
adc
test
cwtl
mov
iret
or
dec
ss
imul
leave
mov
gs
divb
shr
bound
mov
add
inc
popf
andb
jp
mov
fsub
mov
adc
daa
test
cmc
pushf
or
shll
cmp
xchg
add
inc
jmp
rcll
adc
push
or
pop
mov
mov
jge
pop
fsubrp
xchg
cmovo
jge
push
or
out
pushf
lods
sub
pop
push
dec
shrl
jb
clc
ljmp
xlat
mov
pusha
and
push
icebp
scas
pop
xor
xchg
fdivrs
mov
gs
das
cmp
inc
and
push
mov
das
testb
mov
add
lock
jb
jo
xchg
repz
dec
mov
pop
xor
mov
push
fs
xor
mov
test
lahf
sub
imul
push
mov
fcom
add
ja
push
fsubrl
lock
mov
pop
xchg
jmp
hlt
and
in
iret
jge
pusha
outsb
xorb
cs
mov
cmp
adc
xchg
es
and
xchg
cs
push
push
xor
pusha
pusha
sub
test
aam
sbb
add
lret
mov
sbb
cltd
fs
dec
addl
cmpsl
mov
movsl
popa
pop
mov
inc
add
popa
jnp
incl
cmp
jle
pop
mov
or
pop
cmp
hlt
test
cld
lock
xor
add
fists
loopne
pushw
nop
negl
imul
push
mov
in
cmp
aas
ss
sbb
repz
cltd
push
xchg
cmp
sub
xor
dec
scas
inc
pinsrw
imul
sbb
xor
fwait
sub
addl
mov
mov
ds
lods
out
int
ss
push
movsl
repnz
ret
mov
push
mov
out
cli
jo
mov
jno
jge
lock
mov
and
inc
and
push
inc
cld
mov
mov
stos
popf
adc
icebp
inc
sbb
adc
pop
bound
outsl
jnp
adc
pusha
or
pop
insb
add
fcoms
das
lret
flds
mov
movb
js
rorl
xchg
mov
push
lea
lea
es
repnz
push
enter
pop
mov
mov
sbb
jmp
sbb
js
int
mov
adc
out
xchg
mov
sarb
xchg
jg
mov
cs
ljmp
loope
jle
inc
xor
fs
xor
push
cmp
sarl
sub
aas
push
or
xlat
lahf
add
xchg
fwait
rorb
mov
mov
rclb
insb
cmp
in
loop
jmp
lret
push
dec
addb
add
shr
mov
xchg
pop
popf
in
out
mov
sub
adc
cmp
jne
sub
test
xor
jbe
ljmp
in
test
aam
mov
fimuls
cmpb
push
push
xchg
adc
repnz
fisttpll
cmc
pop
jno
fisubl
cmp
sbb
ss
in
jns
iret
gs
mov
xchg
imul
add
sub
sahf
adc
in
jb
mov
and
xor
sbb
fdivl
sbb
std
mov
popa
add
fs
push
aas
aas
lahf
jbe
lea
int3
iret
enter
enter
xchg
dec
dec
xchg
andl
and
mov
mov
fst
mov
stos
addr16
call
jne
jb
jmp
daa
xlat
mov
lods
mov
lret
jg
je
sub
mov
sub
and
js
imul
mov
leave
dec
sub
add
insb
pop
and
push
mov
push
rclb
in
push
xor
jne
cmpsb
into
dec
push
roll
fstpt
inc
push
shll
dec
das
inc
add
mov
jge
dec
cmp
insl
shrb
jecxz
popf
sbb
dec
jp
mov
sub
xlat
cmp
adc
test
aad
fiaddl
hlt
dec
pop
sub
call
lea
lret
add
jae
mov
xchg
and
adc
outsb
scas
and
sbb
push
gs
push
mov
outsb
rolb
daa
das
mov
lret
test
sub
mov
mov
push
lods
jbe
test
hlt
decl
jecxz
and
jae
mov
cmp
fidivrl
sti
jb
test
das
pop
mov
jno
jecxz
cmp
repnz
xchg
adc
aad
mov
pop
lcall
pop
jp
cli
ret
pop
xchg
inc
push
and
cltd
pop
sbb
cmp
mov
mov
and
mov
shrb
test
inc
cmpsb
movsb
pop
mov
lret
imul
push
outsb
fistps
mov
insl
test
pop
popa
sbbl
icebp
jne
out
scas
sbb
and
pop
jbe
or
nop
in
jns
sbb
add
icebp
mov
mov
dec
out
fdiv
or
shll
pop
push
dec
fmul
cltd
push
pop
push
repnz
setno
and
jb
pop
pop
sbb
mov
jae
movsb
cld
sub
or
lock
out
pop
sarb
fucom
loopne
leave
jmp
xchg
enter
pop
cmp
mov
clc
mov
inc
mov
xor
in
xor
in
std
xor
pop
xchg
addb
imul
int
fcmovnb
out
fcompl
or
push
xchg
lea
movsl
and
adc
out
in
das
mov
mov
aam
pop
cmp
add
cld
sub
jl
mov
mov
jnp
adc
in
xchg
sub
push
cmp
mov
jl
mov
out
stos
jb
out
std
sbb
xchg
lock
ret
fwait
jmp
add
jge
push
pop
rcrb
jecxz,pt
jae
xchg
rolb
sahf
outsl
ret
mov
xlat
ja
in
mov
andb
aam
ficomps
xor
notl
loop
pop
cli
test
jbe
daa
data16
int
cmpsl
fcompl
or
repz
stos
or
icebp
insb
loop
in
xor
insl
xchg
movsl
jle
scas
pop
dec
cltd
jne
push
sub
jne
aaa
dec
xor
ljmp
xor
mov
lahf
or
jle
neg
cmp
or
sbb
stos
out
sub
pop
mov
mov
pop
inc
mov
or
lcall
test
and
mov
push
xchg
inc
mov
sub
mov
sbb
push
mov
xchg
arpl
mov
dec
adc
movsb
push
push
fcoms
cwtl
outsb
adc
jl
jge
mov
jb
int
xor
sub
inc
sub
in
push
or
icebp
jne
sahf
pushf
rorl
inc
sbb
shlb
repz
adc
lock
bound
mov
clc
pop
mov
adc
add
mov
mov
cs
rcll
pop
int3
cwtl
js
or
shl
add
push
dec
sbb
adc
movsb
out
inc
push
adc
hlt
outsb
pop
push
inc
xor
and
pop
xchg
hlt
ds
sbb
add
and
lcall
push
add
das
leave
sbb
push
insb
iret
jbe
dec
dec
mov
js
dec
jle
jb
loopne
ret
lret
add
scas
mov
out
inc
pop
add
or
lcall
test
sbb
dec
adc
pop
insl
lds
addr16
movb
subb
xchg
pop
enter
scas
xchg
fcomps
dec
sbb
inc
aam
xchg
fcomip
das
rolb
rcrl
test
adc
in
mov
mov
mov
mov
jmp
mov
mov
popa
mov
loope
lea
jno
and
sub
gs
outsb
icebp
loope
jp
adc
fsubrl
into
or
iret
push
push
and
jbe
test
addr16
sub
ljmp
inc
adc
in
cwtl
add
push
test
xchg
jb
sub
lock
divl
dec
out
or
xchg
das
pop
icebp
or
movsb
push
mov
ret
mov
aad
mov
loope
xchg
into
fwait
pushf
pusha
cmpsb
icebp
mov
jmp
dec
mov
dec
add
gs
aaa
cmp
std
sbb
lods
jno
shlb
and
push
add
sub
stos
xor
cmpsb
inc
xor
mov
clc
test
or
imul
idivl
out
in
in
in
jle
xor
cmpsl
movsb
test
push
mov
xor
lahf
cmp
sub
cmpl
es
sbb
iret
popa
popf
scas
or
ror
add
pop
lods
xchg
shlb
iret
out
sub
mov
cld
or
push
pop
mov
mov
mov
rcpps
mov
jo
sarb
add
mov
loopne
xor
mov
cmp
push
mov
ret
xchg
cld
loope
test
rol
aas
cmc
xchg
fdecstp
jecxz
cmp
mov
xor
fcmovbe
push
aad
or
lcall
sbb
into
add
push
sti
xchg
or
adc
inc
mov
enter
pop
inc
insb
mov
call
test
push
push
ds
adc
sub
pop
sub
xorb
fwait
xchg
or
fimull
pop
inc
add
xchg
shlb
ss
in
aaa
mov
sbb
nop
insl
rol
test
movsl
mov
or
dec
movsl
mov
les
cmp
out
loope
mov
or
push
es
lret
test
das
sub
lds
xor
divb
imul
mov
and
or
ljmp
xchg
push
scas
dec
out
and
push
cmpsb
xor
pop
xchg
dec
std
cmp
dec
addb
inc
xchg
iret
cmp
jns
sub
dec
mov
lret
adc
adc
aaa
pop
jb
mov
std
es
ja
shll
mov
cwtl
and
push
sub
pop
lods
outsb
xchg
ljmp
fwait
inc
mov
ja
adc
mov
ret
aad
jnp
and
or
outsl
xchg
mov
lcall
jmp
mov
in
cwtl
pop
add
pop
dec
sub
addr16
xchg
shlb
xor
jbe
fsubs
xchg
push
sub
arpl
outsl
shll
sti
xchg
faddl
adc
popf
mov
push
add
enter
xchg
mov
pop
out
xchg
sbb
mov
int3
inc
movsl
icebp
cmp
fcmovnbe
out
jl
in
test
je
repz
enter
or
iret
xor
sub
pop
fidivrs
int
nop
test
leave
pop
sbb
sahf
dec
push
pop
dec
mov
push
mov
sbb
and
push
mov
mov
mov
sbb
adc
add
inc
jp
pop
push
ds
push
loope
add
movsl
lahf
daa
dec
pop
mov
dec
rclb
out
jmp
sub
inc
xchg
mov
add
bound
sar
fldcw
dec
lods
es
jl
jnp
lods
push
jno
dec
arpl
xchg
sub
mov
and
jp
dec
or
clc
cmp
out
icebp
fdivrs
sub
and
mov
stos
add
movsb
push
mov
inc
xchg
sbb
jns
sbb
push
jno
pop
aas
dec
add
fwait
mov
jbe
xor
sbb
addr16
jae
scas
jecxz
mov
out
out
mull
lret
aad
mov
adc
cs
popa
push
shrl
ds
dec
jbe
xchg
int
test
das
pop
je
shrb
push
xchg
jle
push
shl
sub
cli
sub
pop
cs
add
shlb
pushf
cmpsl
and
aas
xor
out
pop
mov
dec
lret
dec
outsb
fsincos
mov
dec
es
pushf
xchg
pop
jb
outsb
dec
or
nop
jl
adc
pop
ret
shll
fadds
das
mov
pop
push
in
movsb
pop
sahf
push
mov
ret
pop
idivl
cmp
inc
in
les
push
pop
push
int
dec
rorl
dec
or
popf
mov
stos
push
pop
cmp
clc
js
frstor
dec
jae
iret
xchg
icebp
popa
add
xchg
stos
cwtl
shr
ss
inc
popa
push
mov
xchg
xor
adc
inc
mov
mov
out
scas
inc
in
cmp
icebp
test
stc
sbb
ljmp
cmpsl
es
adc
cmp
push
pop
sub
jle
movsl
lods
and
fiadds
jge
or
and
pop
in
xchg
jg
push
cmpsl
adc
js
jno
ja
imul
movsl
sbb
mov
fldl
lds
orb
mov
je
xor
pop
xchg
les
bound
mov
movsb
or
loop
sub
sub
xchg
rcr
jns
into
xchg
pop
dec
mov
push
sti
push
test
mov
mov
stc
fildll
imul
jge
push
insl
sbb
sti
in
out
addr16
mov
and
loope
mov
dec
and
out
arpl
aas
push
lret
hlt
outsb
push
xchg
cld
mov
test
fs
xchg
dec
lret
hlt
stc
push
add
leave
call
pop
ret
leave
idivb
and
push
jnp
lock
pop
mov
lret
out
sbb
fs
in
shl
movsl
pushf
inc
add
jno
nop
pop
daa
jecxz
inc
cmp
push
add
xor
mov
jno
out
push
ds
lods
sub
out
ret
scas
jns
cli
rcrl
aad
fucomi
lods
push
lods
cmpsb
inc
in
sbb
cmpsl
push
or
sub
sub
or
push
int3
or
xchg
loope
or
fmul
sahf
xorb
mov
mov
pop
pushf
outsl
in
dec
xor
pop
ret
xor
cli
arpl
inc
bound
mov
jmp
bound
dec
das
into
xor
xor
je
aam
inc
clc
aam
inc
and
mov
xlat
sub
sbbb
pcmpgtw
imul
roll
jno
mov
cmpsl
sahf
dec
test
pop
sub
insb
loope
fs
enter
sub
xlat
mov
or
pushf
and
addb
test
aad
adc
in
add
adcl
aam
mov
mov
lods
popf
add
push
sub
frndint
out
je
sbb
and
mov
mov
test
insl
adc
sub
inc
icebp
push
inc
sbb
mov
mov
cmp
shlb
mov
insb
cbtw
aaa
fs
sahf
pop
pop
pushf
adc
cltd
lret
xor
in
stc
sub
push
adc
push
pop
xor
mov
clc
mov
into
jecxz
mov
cld
clc
mov
xor
rcll
sahf
xor
push
push
icebp
dec
mov
pusha
outsb
test
add
cltd
add
sbb
icebp
insb
clc
xor
and
popa
lods
out
cs
imull
pusha
sbb
imul
or
popf
test
xlat
rep
xchg
jns
pop
int
or
seto
fwait
push
test
push
mov
xchg
mov
icebp
mov
inc
mov
adc
repz
cmp
push
mov
inc
test
mov
add
shlb
jnp
lock
and
jo
jne,pn
sub
jne
inc
and
popf
shrl
and
mov
pop
adcl
xor
xchg
and
cmp
andl
jno
stos
pop
adc
outsl
mov
pop
or
mov
shrl
test
adc
pop
adc
push
add
push
jae
push
lret
negl
cmp
ficomps
pop
je
cmpsl
dec
dec
fistl
xchg
in
inc
imul
loopne
repz
and
pop
in
xlat
bound
sbb
adc
cmc
subl
ret
cmp
xchg
mov
nop
or
sub
adc
mov
mov
cli
cmp
mov
xchg
rcll
icebp
sbb
repz
outsl
lahf
gs
std
pop
xchg
cmpsb
xchg
cmp
es
xchg
jle
sbb
lret
inc
and
push
sub
popa
and
cld
xchg
sbb
xor
jg
icebp
cmp
pop
test
xchg
scas
or
lods
jns
lret
adc
pop
int3
popf
mov
dec
mov
push
test
inc
cwtl
aaa
mov
add
andb
jo
xchg
test
out
into
sub
popa
dec
in
lods
push
inc
push
sets
incb
roll
adc
push
mov
and
mov
loopne
out
pop
repz
push
stc
fwait
add
adc
divb
movsb
push
std
mov
pushf
jo
outsb
sbb
cmp
mov
pop
loope
and
adcb
decl
ror
pop
outsb
sahf
push
ss
test
clc
and
and
xchg
adc
lret
loopne
lret
lahf
in
jnp
inc
push
xor
aad
es
mov
fdivr
jg
ljmp
stos
fisubs
jge
jnp
jns
sub
ljmp
cmp
push
or
jl
dec
mov
adc
fisubrs
lods
and
sub
cmp
mov
cs
fistpl
aas
sahf
push
lret
aad
shrl
lods
lss
hlt
lcall
ja
dec
pop
mov
xchg
jbe
pop
leave
sbb
mov
or
mov
ds
jle
scas
mov
inc
jnp
loope
out
cmp
fst
out
push
ret
mov
cmp
mov
nop
adc
imul
xlat
or
arpl
fnstsw
cwtl
jle
out
mov
ljmp
cmp
jecxz
cmp
in
push
pop
sbbb
add
ljmp
mov
les
mov
mov
pop
popa
sub
mov
add
shl
inc
ficoms
nop
stos
in
clc
xor
std
mov
adc
imul
aam
or
mov
jecxz
jmp
xchg
iret
pop
repz
gs
xchg
sbb
pop
push
nop
mov
mov
push
push
bound
mov
sbb
jno
inc
cmpsl
cmpsb
dec
fs
movsl
lret
push
lock
out
and
pop
out
jb
xchg
and
arpl
sbb
aam
aas
xchg
imul
divb
or
xchg
imul
pop
push
addr16
add
mov
xchg
daa
push
or
popa
pusha
sbb
cmp
jo
loop
ja
addl
xchg
xor
mov
sub
popa
mov
shrl
mov
xchg
cs
enter
roll
outsb
xchg
mov
aam
sub
lcall
es
jne
test
dec
xchg
add
adc
or
shr
mov
data16
rorl
and
push
add
psubd
jne
cwtl
or
push
mov
sub
xchg
sub
xchg
push
call
push
ficomps
out
xor
pop
and
dec
fldl
dec
int3
dec
adc
sub
inc
cmp
or
dec
push
sarl
fs
and
inc
cmovns
hlt
mov
or
xchg
add
cli
les
es
pop
cmp
into
cmp
mov
mov
push
adc
sub
jae
or
add
and
and
add
sub
sbb
cmp
mov
mov
mov
aad
in
mov
repz
hlt
sub
ljmp
outsl
xor
jmp
ds
std
or
daa
ljmp
push
adc
mov
xlat
cli
leave
test
pushf
mov
and
fists
mov
mov
sub
icebp
test
and
mov
mov
push
mov
inc
mov
repnz
sbb
dec
repnz
add
add
mov
sarl
ret
sbb
jns
aam
ret
xor
rol
icebp
icebp
in
push
in
in
mov
mov
lahf
fisubs
mov
jae
rclb
lahf
xchg
movl
jecxz
lods
xor
mov
fcos
lahf
rcll
lret
cmp
inc
inc
jge
cli
or
out
ja
pop
andb
inc
inc
mov
call
nop
push
aas
fidivl
or
add
mov
sub
jnp
xchg
loop
out
pop
dec
cmp
or
add
jnp
xchg
ljmp
fdivrl
lods
mov
movsl
sub
lret
xchg
push
icebp
sbb
xchg
and
add
pop
sbb
adc
pop
pop
adc
xor
mov
sbb
shl
iret
pop
xor
mov
les
imul
iret
addr16
or
fldcw
out
mov
div
sbb
adc
insl
inc
sbb
cmp
dec
dec
call
sbb
data16
jo
add
xor
scas
insl
shrb
mov
xchg
gs
adc
inc
mov
shll
inc
nop
bound
xor
mov
dec
mov
pop
aam
inc
ss
jle
push
test
jnp
fstpt
fcom
mov
pop
fcomi
xor
mov
jge
adc
push
adc
gs
lock
dec
jns
adc
imul
daa
sub
cli
fcomip
adc
leave
mov
decb
test
or
fildl
add
and
and
mov
adc
adc
dec
cmpsb
mov
das
push
insb
loope
ret
bound
test
iret
int3
shll
nop
aaa
js
push
out
add
jl
cld
lods
rclb
out
mov
stc
pop
inc
push
shll
pop
pop
jmp
fsubs
xor
data16
and
jbe
mov
movsb
sti
sub
xchg
dec
in
cmp
arpl
inc
in
loope
adc
cmp
int3
arpl
push
loopne
nop
sbb
sbb
arpl
add
js
xor
icebp
movsl
stos
mov
imul
pop
or
aas
inc
mov
std
sbb
in
in
cmp
ret
aam
pop
pop
and
dec
xor
sti
leave
je
xchg
roll
out
test
mov
push
mov
sbb
mov
mov
out
push
lock
lock
pop
xor
fnstenv
ret
xchg
xchg
cwtl
fdivrl
ss
pop
pop
loop
dec
xor
into
leave
andb
mov
push
test
rol
mov
xchg
outsl
pop
dec
mov
data16
xchg
in
xor
mov
int
icebp
icebp
pop
inc
fbld
xor
mov
call
js
loope
cltd
stc
mov
aaa
mov
pop
es
test
dec
cmpsb
push
mov
push
dec
dec
xchg
dec
addb
or
icebp
bnd
das
mov
dec
cmpsb
inc
push
jns
out
pop
ret
push
jne
mov
out
mov
dec
shlb
inc
push
xchg
add
or
sub
out
jo
js
iret
mov
je
sti
into
xchg
sbb
or
mov
int
jge
add
add
jecxz
cmpsl
pop
mov
push
xchg
loop
lds
jp
ja
shlb
sub
xor
nop
movsb
insl
sbb
cld
testb
bound
inc
mov
fs
and
stos
mov
fistps
dec
pop
sub
in
inc
imul
sub
gs
aaa
lcall
xor
mov
je
test
ja
out
jmp
ret
in
test
jnp
pop
sbb
test
dec
or
push
in
sub
test
ja
ss
xchg
shrb
pop
rolb
and
adc
mov
loopne
cmp
ja
jecxz
in
int
lds
jns
mov
scas
add
int
iret
pop
xchg
movsb
addb
test
xchg
xor
sub
xlat
rcl
xor
xchg
test
mov
pushf
sub
daa
add
out
testl
das
push
call
je
or
cmc
andl
pop
dec
lock
adc
in
pop
repnz
sbb
push
add
sub
inc
pusha
inc
pop
fmuls
push
push
movsl
inc
xor
pop
add
pop
dec
stc
and
pop
dec
pop
cmp
sbb
push
cwtl
rorl
sub
scas
cwtl
call
call
mov
loope
cmpsl
or
xchg
inc
repnz
xor
inc
ja
or
sbb
cld
and
bound
in
cmp
cmpsl
mov
shrb
cltd
pop
add
add
add
test
xlat
xchg
imul
test
sbb
scas
pop
mov
and
add
mov
das
xor
bound
add
inc
out
shrb
mov
rcll
and
pop
sub
pop
push
ds
pop
push
mov
rorl
sub
test
pop
dec
fwait
and
inc
adc
dec
lahf
leave
daa
add
lahf
fs
mov
adc
into
outsb
adc
jno
das
je
add
inc
pop
and
sahf
sbb
mov
pop
or
xor
fmuls
cmpsl
in
mov
pop
sti
push
cld
sbb
insl
mov
hlt
cmc
int
decl
fmull
fistl
aad
sbb
pop
lea
jno
inc
mov
repnz
push
data16
ror
adc
mov
adc
shrl
popf
jl
dec
cwtl
in
adc
push
pop
push
fistpll
scas
or
mov
std
pop
xchg
sti
and
push
jno
lock
cmpsl
sbb
push
inc
xor
rclb
ret
in
mov
js
shl
xchg
scas
mov
sarb
sbb
jns
jae
or
scas
scas
mov
pop
pusha
and
dec
push
jg
ja
xchg
adc
xlat
das
dec
inc
fwait
scas
mov
sub
dec
cmp
lods
adc
push
adc
popf
rolb
outsl
push
mov
add
imul
jnp
pop
xchg
clc
arpl
jl
cltd
lahf
inc
cltd
cmp
pop
jl
sbb
lret
fucom
inc
ja
sbb
mov
mov
jmp
pop
mov
repnz
inc
push
xchg
dec
ret
mov
push
loope
in
lods
dec
inc
cmp
xlat
sahf
sub
or
ss
fcompl
sbb
pop
popa
lcall
xchg
or
out
xor
shr
das
loope
gs
and
mov
cmp
addr16
pusha
push
cmp
cmp
hlt
cmpsb
dec
cmp
lret
in
int3
outsb
mov
shrl
rcl
je
lea
cld
or
dec
jmp
fisttpll
mov
inc
mov
js
jmp
mov
inc
aas
out
mov
call
je
aas
xor
sub
dec
and
jle
in
cltd
xchg
jnp
insl
sub
and
fdivl
cmc
lods
or
hlt
xlat
push
out
push
sub
pop
ja
adc
pop
pop
lods
sub
jo
mov
hlt
jp
push
push
fildll
jne
inc
cmp
and
dec
aam
push
pop
rorl
clc
sub
or
iret
lret
shrl
das
lret
idivl
enter
or
lea
jnp
scas
and
cld
push
mov
nop
pushf
imul
pop
xorb
rcll
test
cmpsb
xchg
lea
mov
scas
push
mov
add
jo
xor
loopne
fnstcw
ljmp
xchg
pushf
cmc
scas
add
fcmovu
dec
and
pop
imul
add
push
fdivl
cmpsb
jmp
xchg
filds
cmp
cmp
sbb
ss
jecxz
sub
jae
leave
pushl
jo
arpl
adc
dec
sub
mov
mov
jecxz
fiadds
or
or
add
dec
movsl
in
cmp
hlt
inc
movsl
or
xor
enter
std
sbb
dec
popf
or
testl
mov
xor
movsb
cltd
or
dec
jmp
cwtl
cli
imul
sti
ljmp
flds
cwtl
push
test
sbb
fstpl
push
adc
jg
jae
test
ficomps
ja
pop
lods
xchg
push
push
notb
fldl2e
adc
xchg
mov
int
jle
add
lds
jo
scas
fcmovne
dec
pop
sbb
or
cmp
inc
sbb
addr16
stos
add
cmpsb
xchg
jecxz
loope
lds
cld
sbb
out
cmp
mov
insb
mov
imul
out
cli
test
cmp
mov
out
push
frstor
push
sbb
jmp
movsl
adc
test
mov
jne
mov
jmp
xor
jbe,pn
add
dec
adc
cmp
pop
shrl
out
popf
adc
jmp
and
adc
lock
cwtl
jg
shll
xlat
and
mov
cmp
mov
inc
add
push
mov
jge
fcoml
mov
cmp
lods
cmp
pop
movsb
sub
inc
movsl
xor
jbe
dec
sub
cmc
xchg
fdivl
mov
fcoml
xchg
cwtl
adc
mov
sub
sbb
and
hlt
mov
sarb
stc
test
jbe
pop
cmp
sub
sbb
movsb
or
inc
and
test
loopne
cmp
rcll
das
add
sub
add
aam
sti
addb
sub
sahf
mov
sub
clc
icebp
or
pop
inc
orl
lods
adc
fcompl
push
mov
dec
push
leavew
mov
sub
mov
jo
jns
ret
sti
xor
stos
call
xor
dec
sbb
pushf
push
dec
xchg
xchg
icebp
loope
scas
dec
add
or
mov
dec
lock
xor
leave
cmp
dec
stc
fiadds
test
sti
or
gs
add
xchg
xor
sbb
out
cmp
push
scas
xchg
or
jecxz
testl
test
mov
push
rorb
jg
pop
dec
inc
pop
jae
xor
rol
xor
addr16
push
lea
arpl
jecxz
fidivs
mov
inc
xchg
jo
push
push
outsb
int3
jne
aaa
xchg
push
mov
out
xchg
popa
orl
aas
into
mov
pop
sub
ss
out
mov
mov
sub
in
ds
xor
sbb
lock
xor
sbb
repz
add
adc
mov
icebp
lahf
out
dec
mov
bound
jmp
mov
lcall
das
lods
scas
dec
dec
adc
movsb
mov
shll
push
bound
leave
cld
orb
add
scas
jnp
stc
pop
or
add
cwtl
imul
xlat
cwtl
inc
aaa
std
cmp
dec
fwait
adc
jns
cltd
addl
outsb
in
faddl
xor
jle
and
in
push
sti
inc
mov
add
test
push
icebp
pushf
xorl
das
sbb
mov
daa
popf
adc
fdivl
cwtl
cmpsb
sub
cmp
inc
mov
pop
out
and
inc
cmp
pop
in
lds
bound
jbe
cwtl
test
pop
push
jnp
ss
sbb
popa
jecxz
cltd
sbb
xchg
ja,pn
and
shl
outsb
sub
cmpsl
push
sbb
repz
mov
push
sahf
xor
jne
sub
pop
out
push
test
xchg
test
push
xor
and
xor
mov
pop
pop
test
mov
mov
mov
jl
sbb
fs
insb
fcoml
dec
loopne
sbb
or
into
frstor
mov
dec
push
lahf
sbb
push
cmp
lahf
xchg
sbb
clc
sahf
je
daa
and
mov
cmp
jmp
in
sarl
jle
xchg
add
xor
sbb
pop
mov
adc
push
aaa
pop
idivb
mov
jns
inc
ror
test
clc
sbb
in
stc
test
jae
push
cmp
cmpsl
mov
mov
ficomps
mov
sahf
dec
push
xor
jl
popa
push
add
pop
dec
lahf
int
xchg
jo
sahf
adc
jge
addb
pop
loop
jmp
mov
and
pusha
inc
mov
dec
aas
add
xchg
mov
mov
loope
xor
in
shll
mov
sub
mov
adc
cmc
jg
push
xor
mov
mov
adc
pop
out
hlt
call
decb
test
mov
movsl
fisttpll
xor
add
and
dec
leave
pop
cmp
loopne
scas
sub
out
call
imul
mov
add
add
adc
fwait
lahf
mov
cmp
mov
out
jo
pop
loopne
lahf
jb
fbld
cmp
or
jecxz
mov
dec
pop
inc
sub
and
cli
cli
dec
push
pop
les
jnp
mov
cmp
and
outsb
push
insl
mov
fcompl
mov
dec
sub
js
jl
push
xor
lea
out
ret
cmp
push
mov
shrb
pop
xchg
test
loopne
aaa
push
out
pop
repnz
into
cmpsl
lahf
and
and
and
mul
sub
nop
mov
and
add
mov
fidivs
push
mov
clc
xor
pop
popa
add
sub
es
lcall
inc
int
dec
insl
mov
and
fs
adc
inc
push
dec
jl
mov
push
xor
stos
outsl
fldl
xchg
dec
and
stos
repnz
arpl
adc
and
stos
mov
call
enter
pop
das
cmc
je
lret
inc
mov
icebp
test
xor
xchg
bound
pop
ds
shlb
or
out
out
mov
int
pop
jno
popf
push
add
jb
and
sub
xchg
lods
test
mov
mov
mov
fldl
in
test
test
outsb
jb
adc
sbb
std
jbe
push
das
pop
sub
scas
ja
stc
divb
jp
inc
cmp
xchg
movlps
mov
int3
fwait
movsb
incl
and
cmp
pop
lock
enter
stos
cmp
test
imul
xchg
fs
mov
cwtl
ljmp
lock
mov
fwait
loope
inc
shlb
jne
gs
outsb
adc
jns
cmp
mov
cli
ljmp
pavgb
shlb
sub
mov
xor
mov
jne
cmc
les
mov
mov
pop
dec
aad
push
cmpsb
xchg
out
fiadds
sub
pop
jle
js
push
xlat
sub
jp
push
test
test
fcmovu
cmp
imul
test
fimull
jge
sbbl
cmpb
adc
jg
scas
and
decl
adc
cmp
add
and
sub
pushf
adc
mov
sbb
inc
lahf
sbb
pushf
outsb
pop
outsl
cmp
mov
xor
sbb
aas
dec
sub
cmp
or
xlat
push
and
mov
dec
negb
jb
cli
inc
mov
mov
int3
outsl
pop
pop
push
jo
sti
cmpsb
push
arpl
jb
mov
int3
lret
mov
dec
ja
dec
fdivrl
pop
scas
repz
cld
js
hlt
and
mov
dec
and
xchg
adc
flds
popa
fwait
inc
cmpsb
push
jg
cmp
pop
mov
sub
lret
data16
mov
fildl
test
and
popa
mov
inc
push
mov
dec
mov
fsubl
repnz
pop
hlt
or
mov
adc
jae
ss
inc
aas
dec
aas
lret
add
or
jge
xor
sub
push
xlat
data16
push
pusha
fisttpl
fldt
and
mov
lods
or
shrb
xor
push
sahf
and
pushf
in
xor
ss
adcl
cmp
sbb
lock
cmp
fwait
popa
ljmp
lds
and
lahf
add
cmp
js
or
push
outsl
repz
xlat
jge
fisubrl
out
push
stos
imul
cltd
xchg
mov
das
sub
xorl
xchg
xor
clc
loopne
into
mov
mov
lock
cli
test
pushl
pop
mov
sub
mov
push
rcll
dec
jb
and
sbb
or
push
mov
push
pop
mov
das
or
mov
in
scas
fs
inc
hlt
rcll
dec
negb
aas
out
cmp
xchg
sti
in
add
adc
jbe
sbb
and
sub
pop
push
mull
fcomip
in
pusha
pop
or
jns
lcall
setno
ss
xlat
jnp
out
repz
add
test
sbb
push
cwtl
inc
mov
inc
scas
xor
fisttps
and
or
fs
mov
and
add
roll
cmp
nop
outsb
popf
cmp
adc
adc
aad
mov
shll
xor
pop
loope
add
pushf
icebp
xchg
fmull
cmp
sbb
leave
push
repnz
movsl
scas
in
sbb
pop
xor
ret
lock
add
xor
int3
ffree
add
sbb
shrl
jl
fxch
mov
dec
ficoml
les
lock
xchg
push
shlb
leave
push
mov
dec
dec
inc
mov
xchg
fnstcw
push
and
notb
fistps
dec
push
movsl
outsl
mov
xlat
and
adc
inc
das
fs
mov
adcb
fcoms
addr16
add
sub
inc
or
adc
icebp
insl
push
sub
rorl
xlat
jb
lods
add
pop
inc
stc
sbb
and
xchg
in
mov
rcrl
in
outsb
test
lret
push
xchg
adc
and
mov
mov
sbb
loop
xchg
lods
xchg
vpmaxsw
inc
mov
mov
das
loop
mov
aad
ss
jle
lcall
idivb
insl
sub
cmp
daa
stc
adc
dec
xchg
pop
iret
xor
fsubrs
repz
iret
sub
lock
pop
fdivrl
out
test
gs
andb
mov
lahf
shl
sub
sub
or
and
jle
push
push
rcl
inc
lds
and
popf
xchg
cli
xor
shll
loopne
push
call
lods
mov
pusha
push
jb
andl
nop
dec
les
push
dec
inc
divb
adc
push
insb
add
push
cmp
fwait
sbb
iret
and
push
push
sti
loope
mov
in
iret
xor
fwait
sbb
push
stc
dec
stc
push
loopne
xor
pop
xchg
xchg
add
fcos
push
scas
sbb
jns
jge
sbb
jl
int3
stc
jo
mov
pop
push
xor
mov
lahf
decb
add
inc
nop
xchg
push
and
sub
mov
int3
popf
sbb
loop
push
and
leave
sarb
decl
inc
sub
sbb
push
cmc
jne
inc
mov
loop
xchg
inc
pushf
in
mov
dec
push
jae
xor
xchg
scas
xchg
push
inc
in
test
cmpsb
xchg
repz
es
adc
mov
xchg
lock
addr16
leave
int3
daa
jo
movsl
imul
fisttps
int
add
inc
fists
cmpsb
inc
mov
adc
xor
ror
daa
test
iret
jmp
dec
push
sub
cmc
int3
dec
pusha
imul
jmp
xchg
addr16
std
push
mov
sti
mov
cmp
push
es
pusha
mov
les
adc
scas
adc
inc
pop
mov
mov
push
adc
fxch
out
xorl
jp
jbe
jge
out
adc
xor
jns
jecxz
or
rol
ds
call
sub
cld
rclb
ss
fnstsw
xchg
jge
pop
ret
pop
xorb
test
fmuls
and
pop
pop
fsubr
inc
dec
mov
jo
or
sbb
fldcw
pop
sub
jmp
in
test
jns
fdiv
dec
fs
add
aam
mov
jo
pop
imul
outsl
rol
roll
fiaddl
sub
loope
js
iret
add
sti
push
pop
inc
xor
testl
jne
sti
pop
cld
cmp
mov
mov
dec
popf
aas
out
ret
cmpsb
jg
cs
test
xlat
movsb
adc
imul
cwtl
inc
xchg
in
mov
andb
popa
lds
sti
xchg
add
das
or
mov
mov
sub
ds
js
mov
xor
add
cmp
adc
aad
pushf
sub
xchg
dec
sub
repnz
pop
scas
in
pop
mov
pop
scas
push
das
pop
pop
or
xchg
push
hlt
push
addb
or
jae
add
or
aam
inc
push
pushf
test
inc
shll
fldt
xchg
push
inc
push
stc
adc
lods
shrl
sub
sub
test
loop
pushf
divl
sub
sub
dec
and
ficomps
ljmp
jl
das
test
nop
dec
lcall
sbb
das
jmp
xor
in
mov
pop
mov
fcompl
xchg
or
adc
fistpl
out
and
mov
mov
sub
mov
mov
mov
jle
lea
repnz
fadd
pusha
sub
out
shll
push
adc
cmp
pop
mov
lea
out
dec
addr16
nop
mov
or
xchg
leave
dec
mov
xchg
xchg
sub
push
and
adc
pop
cmp
xor
sbb
dec
pop
adc
in
push
inc
jns
mov
inc
andb
push
sbb
gs
lods
jmp
pusha
mov
and
int
insl
outsb
dec
pop
js
sub
inc
pause
clc
movsb
xchg
rorl
outsl
dec
cmp
arpl
adc
and
and
fwait
adc
sarb
rcrl
into
sahf
inc
test
ficoms
mov
insb
mov
adc
sbb
adc
jl
fwait
push
cmp
cld
inc
pop
lods
add
mov
xor
mov
adc
loop
icebp
insl
xor
lret
jb
inc
mov
mov
out
out
je
inc
xchg
push
aaa
cli
mov
shr
ret
and
out
sub
movsb
mov
movsb
mov
repz
repnz
xchg
xor
fwait
push
push
filds
dec
outsl
xor
mov
stc
xchg
cmp
dec
icebp
adc
imul
xor
mov
shld
jae
mov
fdivrp
mov
and
mov
out
call
out
push
or
push
inc
lock
shl
mov
into
cmpsb
jno
cmp
xchg
add
xchg
leave
lret
test
roll
sub
ret
test
arpl
pushl
cmp
cmpb
or
mov
fdivs
and
mov
cwtl
mov
out
lea
xchg
scas
aaa
jbe
jb
mov
and
jno
add
adc
jmp
ret
cld
inc
adc
fs
lods
flds
stc
cs
cmp
push
mov
jge
js
xchg
jo
inc
jnp
lds
cli
rcr
mov
cli
and
push
clc
mov
mov
js
scas
jp
xchg
ficomps
out
dec
inc
into
and
aaa
jo
out
testb
cmp
repz
or
inc
sub
sbb
fs
lret
or
iret
jp
in
xorb
inc
or
pusha
and
lea
movsb
add
xor
xor
mov
sub
sahf
mov
lret
repz
rol
out
sub
mov
sub
push
std
and
inc
mov
cmc
bound
xlat
dec
push
pop
xor
loop
shrb
ja
adc
out
jecxz
cmp
popa
adc
rorl
dec
mov
clc
iret
xor
scas
pushf
test
xchg
cmpsl
xor
scas
mov
pop
mov
loopne
xchg
push
pop
icebp
into
xchg
nop
or
ss
mov
fsubrl
jge
mov
mov
mov
stos
pop
jnp
rcll
ljmp
data16
bswap
or
test
and
and
cmpsb
pop
adc
int3
inc
shrl
movsb
popf
cmp
adc
pop
xchg
xchg
jbe
leave
inc
out
jl
pushf
xchg
adc
iret
cli
push
sbb
xchg
adc
xchg
lahf
scas
mov
jmp
add
dec
shrb
mov
out
mov
push
and
xchg
cli
test
ja
sbb
lods
cmc
jnp
dec
ret
cmp
mov
or
cmc
lcall
lods
fiadds
loope
sahf
jmp
and
jge
lret
movsl
loop
lahf
into
cmp
in
mov
xlat
or
jle
into
push
subl
ljmp
test
int3
out
push
aas
insl
cs
scas
mov
xor
lock
sbb
cli
cmpl
insb
in
iret
mov
xchg
push
pop
repz
sbb
mov
xchg
adc
gs
mov
push
cmovbe
lock
jg
test
out
mov
hlt
loop
loop
or
das
adcl
sbb
inc
xor
mov
ds
pop
mov
pop
mov
adc
call
jecxz
pop
out
dec
pop
fbld
dec
roll
scas
sub
mov
iret
xchg
leave
add
sbb
popa
lret
push
dec
nop
iret
cmp
push
mov
das
out
movb
xchg
sub
push
into
int
and
sub
sub
imul
or
xchg
jmp
and
dec
incl
andb
mov
loopne
add
insl
inc
enter
push
ja
cmp
fldl
pop
cmp
popf
stos
out
jg
or
mov
inc
int
sub
mov
je
loope
push
inc
pusha
mov
push
mov
sub
cwtl
xor
ja
ds
push
mov
dec
push
inc
cmp
mov
xchg
mov
mov
notl
repnz
push
jg
jb
sti
adc
lock
shl
cltd
cmp
les
pushf
xchg
pop
sahf
es
adc
icebp
insb
js
aas
sbb
push
popf
or
roll
loop
decb
jns
jb
sub
int3
cli
sbb
mov
pop
jne
and
xchg
enter
fdivl
inc
testl
xor
imul
mov
xor
mov
pop
adc
dec
movsl
cmp
aad
and
stos
mov
out
pop
jg
add
jmp
mov
sub
jo
popf
mov
rclb
xchg
sti
mov
bnd
imul
lods
sub
adc
cmp
add
mov
lret
es
clc
xchg
inc
out
outsl
insb
and
fidivrl
jle
sub
repnz
pop
mov
dec
or
out
iret
pushf
je
scas
aam
or
repz
push
push
in
dec
pop
xchg
je
lahf
leave
enter
cvtps2pd
pop
pushf
les
fdivrl
pop
push
filds
popa
out
arpl
pushf
xchg
add
lods
shl
dec
adc
das
in
cs
in
or
ja
add
mov
or
push
xchg
cltd
cwtl
nop
ret
jnp
mov
mov
pushf
mov
pop
loopne
mov
loop
cmp
lods
ljmp
adc
sbb
adc
adc
cmc
dec
sarb
jne
and
pop
jl
sbb
xchg
and
sub
test
bound
mov
mov
adc
data16
mov
push
mov
push
rcll
pop
sbb
add
sbb
es
out
xchg
adc
and
dec
daa
sbb
cmp
mulb
flds
je
ja
xchg
out
cwtl
pop
popa
sub
imul
pop
inc
es
push
test
dec
jmp
or
adc
xchg
dec
cmp
mov
and
pop
in
adc
sub
mov
lcall
and
cltd
movsb
xchg
add
mov
pop
daa
mov
out
cmp
cmp
mov
mov
popa
cwtl
pop
add
add
pop
push
fiadds
xchg
cmp
cmp
jae
mov
mov
xchg
jecxz
dec
cli
in
push
enter
xorb
mov
adc
cmp
lea
push
imul
xchg
fld
mov
push
or
loope
arpl
xchg
jno
pop
rorb
test
cmpsb
xchg
aaa
daa
push
cs
repnz
sbb
dec
icebp
adc
mov
out
push
inc
mov
lods
test
jmp
xor
popf
push
sub
lret
cltd
cwtl
fs
je
jne
push
and
iret
aad
jp
inc
adc
imul
add
adc
lea
aas
push
out
push
jecxz
pop
jb
rorb
inc
lock
shrb
ss
mov
fildl
mov
sub
shlb
or
aad
mov
das
mov
fldcw
push
sahf
push
int
inc
jp
js,pn
leave
iret
mov
push
cmp
popf
add
popa
sysenter
inc
xchg
push
sub
shrb
pusha
mov
and
push
push
pop
aam
test
insl
fnsave
xchg
je
sbb
cld
jmp
and
addr16
jmp
loop
xchg
lahf
dec
jle
cmp
inc
push
fstl
leave
inc
pop
pusha
push
movsl
je
dec
sub
mov
out
fwait
and
cmpsl
push
and
fsubl
push
pop
pop
popf
mov
sbb
dec
inc
data16
aam
repnz
lds
or
cmp
xchg
add
mov
pop
lret
inc
adc
loop
xor
iret
xorl
sbb
adc
mov
mov
mov
inc
test
ljmp
test
push
stos
clc
daa
push
xor
push
popf
and
je
push
add
xor
dec
or
push
out
scas
inc
jmp
daa
mov
push
shlb
push
mov
insl
stc
gs
cmp
or
cltd
mov
cwtl
sub
xchg
lret
ds
in
jae
xchg
push
or
ds
mov
aad
inc
ds
bound
inc
cli
jle
cmp
add
aam
mov
inc
push
lret
in
out
jg
sub
xor
filds
mov
push
cltd
sbb
cltd
loop
insl
rolb
ret
push
out
daa
inc
aam
inc
pop
or
call
jge
sub
lret
mov
movsl
inc
mov
out
mov
into
fimuls
clc
arpl
xchg
aas
rorl
inc
push
or
fsubl
loop
fbstp
insl
pop
push
xor
mov
fdivr
test
es
stc
push
sbb
mov
fisttpl
ret
mov
adc
jmp
add
loopne
adc
adc
jp
unpcklps
xchg
adc
or
fnstcw
fs
cmpsl
cli
xchg
mov
out
pop
and
pop
aaa
xchg
inc
xor
popa
jnp
inc
mov
out
mov
int3
mov
je
sub
lds
xchg
push
fwait
test
add
mov
sar
das
clc
adcb
aam
ds
xchg
xchg
and
insl
pop
es
fisttps
pusha
mov
in
aam
in
jns
dec
ljmp
mov
mov
push
dec
jl
mov
repz
ljmp
andl
sbb
cld
decl
bound
addr16
dec
xchg
mov
add
xchg
xchg
popaw
sbb
loope
mov
fwait
out
push
push
adc
in
stos
cli
jo
xchg
call
dec
jnp
and
sub
pop
push
mov
mov
add
cwtl
movsl
jnp
mov
cwtl
jne
aaa
lds
mov
adc
jg
movsb
ret
mov
icebp
daa
ds
gs
cmpsl
int
or
rcl
cmp
int3
lret
stos
xlat
and
sahf
mov
inc
pusha
mov
sbb
sahf
mov
data16
push
xchg
stos
fisubrs
jne
icebp
or
loope
popa
loope
scas
adc
cmpl
mov
fidivl
push
adc
xchg
data16
push
sub
pop
push
and
mov
mov
mov
sbb
jge
xor
sub
adcl
loop
orb
call
dec
cli
jo
mov
jne
outsl
repz
jb
lahf
mov
ds
aaa
sti
loop
add
sub
test
jnp
dec
outsl
loope
push
ror
sahf
aas
aad
bound
jo
adc
std
or
repnz
ja
int
inc
sbb
cli
add
dec
mov
bound
jmp
mov
dec
xor
pop
mov
add
jge
sbbb
call
xchg
pop
push
cmp
cld
inc
xor
ret
xchg
ss
cmpsb
sub
repz
jbe
inc
xchg
adc
adc
lret
mov
popf
loop
adc
std
test
ret
sub
pop
xchg
xor
xchg
mov
mov
loopne
mov
ds
add
mov
mov
and
stos
pop
push
cltd
in
jle
sti
xchg
pop
fwait
cmc
or
jle
xchg
adc
cmpsb
imul
imul
into
fs
or
cmp
sbb
lock
rolb
sub
aam
fmull
outsl
mov
mov
jg
in
fistl
je
sbbb
cmp
fincstp
aaa
sbb
movsl
outsb
push
mov
add
ret
std
decl
jle
mov
inc
pusha
jg
dec
rcll
int
test
jb
je
out
bound
jmp
jb
movsl
loopne
in
ffreep
ljmp
or
sbb
fwait
xchg
cltd
scas
iret
jae
mov
push
in
enter
stos
sarl
scas
enter
or
div
cs
test
std
nop
mov
movsl
mov
leave
mov
lea
lock
or
and
mov
fsubl
xchg
stos
mov
xor
test
add
cmp
js
cltd
sti
adc
mov
mov
hlt
in
out
dec
xchg
pop
add
and
inc
and
jns
jns
mov
push
mov
repnz
dec
sbb
mov
sbb
sbb
ljmp
push
test
cli
mov
outsb
bound
inc
cmp
mov
push
ficoml
in
shr
mov
fwait
dec
sub
clc
mov
shlb
mov
inc
jg
andl
push
and
iret
cmp
sub
and
out
rcrb
xchg
outsb
es
adc
sub
imul
or
mov
mov
fcoml
sahf
jecxz
lret
or
nop
imul
rolb
out
adc
iret
ror
push
paddsw
mov
aas
loope
cmp
aaa
insl
push
ja
addb
sub
pop
dec
xor
pop
pusha
push
xchg
andb
jns
jg
popa
push
lock
push
jg
push
pop
cmp
xchg
inc
push
dec
and
nop
or
sub
daa
add
jb
fidivrs
mov
pusha
xor
stos
ja
aad
xor
dec
sub
test
cmp
leave
into
lret
repnz
pop
mov
addr16
out
mov
cli
inc
lahf
movb
mov
cli
mov
inc
mov
adc
push
push
mov
ficoms
jbe
push
sar
pop
inc
mov
lahf
pop
sahf
or
cmp
in
pop
scas
repz
popa
push
dec
hlt
jns
outsb
xchg
jbe
push
cmc
mov
dec
test
sub
mov
xor
sti
sbb
jp
nop
ds
sbb
push
les
in
jle
lods
mov
sahf
inc
or
dec
in
loopne
push
int
mov
repz
clc
inc
or
inc
imul
pop
pop
xchg
or
aam
aas
jo
test
inc
sub
pop
repz
ds
xor
je
and
sub
lahf
mov
ljmp
xor
ret
mov
xchg
fldenv
adc
in
push
sub
lea
sti
call
je
out
and
test
or
ja
xor
xchg
in
aad
test
xchg
ret
shll
inc
aaa
xchg
out
dec
pop
adc
out
insb
call
dec
push
call
push
shrd
mov
fmulp
shl
push
std
add
stos
movb
orl
mov
mov
andb
addr16
dec
push
jge
rolb
js
aaa
mulb
mov
out
test
pop
pop
stos
pop
xchg
into
dec
andl
push
cmp
pop
in
or
dec
daa
add
jl
jb
ljmp
mov
lret
cli
cmpb
adc
lahf
not
xor
mov
push
mov
pop
sarl
xchg
push
fwait
in
add
jbe
mov
aam
xchg
adc
jns
subb
dec
repz
inc
in
push
out
lds
into
jmp
xor
iret
cld
scas
or
sar
sbb
out
or
push
jae
pop
movsb
test
leave
pop
lods
jne
push
int
insb
sub
push
mov
mov
push
inc
push
xchg
xchg
lret
cltd
fwait
mov
rcl
sbb
xchg
inc
lea
and
daa
jecxz
and
mov
fwait
int3
xchg
aad
lock
lea
mov
shl
ds
sub
inc
inc
mov
bound
mov
js
mov
shrb
sbb
insb
or
test
xor
xlat
mov
pop
inc
repnz
fucom
mov
pop
sub
sub
push
stos
cmp
mov
in
sbb
notb
or
mov
cmp
aad
mov
cmp
mov
add
loope
fildll
cmp
inc
mov
enter
cmpsl
arpl
adc
pop
lret
aad
jp
or
jmp
inc
aaa
loopne
rcr
cli
and
inc
inc
dec
mov
dec
xchg
inc
icebp
add
stc
js
add
jae
or
push
repz
mov
aam
popf
mov
mov
pop
hlt
mov
es
ja
and
cmpsl
mov
adc
in
mov
cmc
int
fmul
xor
jb
cmpsl
xchg
out
fwait
add
xor
pop
es
addb
pop
lret
push
inc
leave
mov
mov
sbb
aas
cmp
and
jae
lods
int
pop
or
clc
dec
das
ss
push
add
stc
lret
xor
and
icebp
xchg
dec
lret
mov
sbb
dec
enter
mov
test
jle
sub
add
mov
add
sbb
xchg
or
test
enter
cmc
fisubl
push
adc
jmp
aam
ljmp
mov
jmp
xchg
mov
test
scas
push
leave
and
xor
rcrl
push
inc
cmp
sbb
mov
fmuls
repnz
mov
test
jp
pop
push
lods
push
pop
ljmp
mov
adc
das
in
sub
pop
fadds
and
cmp
push
out
jno
in
sbb
dec
sbb
mov
les
outsb
sub
push
out
sbb
loopne
inc
inc
insb
out
out
addr16
loopne
in
ss
mov
mov
pusha
xlat
mov
shrl
pop
lods
and
mov
out
sub
popa
mov
fildl
mov
pop
aaa
xchg
sub
arpl
xchg
mov
insb
out
and
adc
push
js
jg
dec
pop
lea
cmp
cmp
mov
mov
jge
add
imulb
scas
and
mov
das
fildl
sbb
inc
mov
xor
sub
repnz
je
mov
mov
push
mov
mov
cli
dec
inc
cld
inc
call
pop
xchg
adc
mov
dec
testl
sbb
cld
mov
xlat
aaa
dec
jecxz
xchg
les
in
jmp
fisttps
inc
pop
mov
mov
popf
test
stc
mov
popf
out
xchg
cli
adc
xor
xor
sub
lcall
jne
pushf
rcll
adc
dec
in
and
xor
lret
fisubrs
pop
in
jp
cltd
and
pop
mov
in
notl
inc
mov
inc
je
scas
test
ucomiss
test
sub
xor
rolb
jg
iret
push
test
jo
dec
pop
xchg
test
jb
and
fldcw
into
or
mov
stc
pushf
popa
aad
inc
mov
stc
mov
sahf
sbb
jae
xchg
rclb
stos
jo
repnz
xlat
fcomps
sbb
bound
cmp
insb
sbbb
mov
add
inc
inc
add
add
jmp
add
xchg
dec
inc
fldt
mov
movsl
cmp
xchg
daa
push
es
adc
xchg
repz
rcl
adc
dec
cmpsl
sbb
nop
pop
or
cmpsb
subl
or
insl
cltd
gs
call
xchg
xchg
lods
xorl
lock
mov
pop
mov
test
aam
aas
or
insl
mov
cmp
pop
pop
in
xchg
or
jae
outsl
and
xor
inc
mov
nop
add
int
mov
jb
push
sti
sub
jno
dec
fadds
push
adc
arpl
push
mov
loop
xor
add
add
jle
lcall
push
movsl
adc
in
addr16
test
fwait
out
rcll
cmp
sbb
jo
sub
mov
test
jecxz
inc
int
popa
andl
icebp
arpl
stos
lock
mov
pushl
sbb
jecxz
fcomip
push
add
repz
cld
outsl
ds
xlat
int3
sar
jl
sbb
aaa
or
or
sub
and
cmp
mov
cmp
jbe
push
cmp
jge
push
cld
add
lret
movsl
fisttpll
push
pop
push
jne
mov
jae
fisttpl
add
sti
jne
xchg
mov
data16
idivb
in
xchg
ljmp
or
mull
outsl
imul
mov
out
mov
adc
xor
out
jb
insb
lods
rcrb
mov
adc
pushf
jne
fs
fcmovb
cmpsb
daa
dec
ret
add
dec
repz
mov
push
push
pop
and
inc
pusha
cmp
mov
and
in
xchg
cltd
orb
in
inc
lods
mov
add
imul
out
aad
loopne
outsb
sbb
pop
cmpb
fmuls
xchg
nop
push
stos
push
insl
movsbl
out
arpl
addr16
shrb
xchg
xchg
jl
jno
and
fwait
and
adc
mov
xor
out
rcll
cld
sbb
ret
inc
cmpsl
xchg
addr16
push
sub
cli
adc
adc
les
fisubrl
pop
div
xorl
mov
popf
cmp
and
fadds
xchg
into
pop
xchg
aaa
shlb
dec
cmpsb
pop
lahf
jnp
cld
xor
mov
sbb
dec
xchg
test
mov
insb
cmc
push
xchg
stc
mov
aam
stos
imul
fwait
dec
out
or
sbb
cmp
jmp
pushf
inc
mov
or
xor
xchg
addr16
xchg
inc
adc
out
or
jbe
sbb
jl
lret
cli
fidivrl
or
xchg
pusha
out
and
out
mov
test
mov
cmp
iret
out
ss
es
or
mov
or
stos
jns
jae
mov
insl
jne
stc
pop
data16
adc
xchg
jb
into
aad
mov
cmp
mov
daa
ljmp
addr16
test
sub
out
add
ds
ja
movsl
aaa
dec
sub
in
popa
loope
jle
add
add
imul
ror
push
aad
ja
hlt
lret
stc
inc
iret
loope
out
jo
vmread
sbb
test
out
pop
stos
daa
lock
dec
mov
sbb
xchg
or
mov
cmpsl
mov
mov
in
inc
xor
jp
mov
pop
mov
popf
xorb
mov
cmp
popa
stos
test
mov
dec
adc
jmp
loopne
ss
leave
ja
inc
pop
cs
test
sarb
or
sub
call
push
dec
in
fildll
sbb
lods
xchg
rcl
adc
dec
shlb
or
insb
cmpsb
mov
push
dec
pop
ret
enter
int3
andl
mov
ret
push
int3
fsubrl
adc
xchg
pop
iret
call
dec
xor
icebp
in
dec
call
stos
loope
inc
ret
repnz
fnsave
cmc
ljmp
sahf
cmp
das
mov
mov
mov
lods
test
in
jge
pushf
and
dec
testl
sbb
inc
mov
pop
fildl
inc
push
insl
negl
inc
push
outsb
lret
lret
mov
jg
cmp
call
cmp
and
sub
js
inc
dec
clc
mov
ficoms
xchg
jg
inc
sahf
dec
sbb
loop
mov
add
shlb
mov
push
jge
cmp
cmp
orl
rolb
or
and
and
js
cmp
xchg
and
je
adc
jb
push
in
ret
es
std
shlb
les
sub
filds
pop
sub
rolb
jmp
inc
add
xchg
jno
pop
push
mov
clc
mov
mov
aaa
jmp
aad
aas
sub
adc
testl
leave
dec
jl
jg
rolb
nop
push
sub
xchg
add
popf
pop
push
mov
ret
sbb
add
dec
shl
in
in
int3
inc
loopne
jecxz
sub
andb
mov
aad
xchg
or
xor
xor
mov
leave
or
pop
in
and
arpl
movzbl
or
jne
jbe
dec
std
xchg
ss
push
mov
ficoms
xchg
mov
add
pop
lds
out
xor
xchg
rcll
sub
dec
lds
adc
shrb
and
cld
ss
mov
mov
pop
pop
mov
mov
add
fimuls
mov
xchg
sub
adc
pop
pushf
inc
arpl
jge
fcomps
dec
mov
mov
push
jge
shll
dec
fldl
pop
inc
adc
ss
fsub
push
or
xchg
sub
xor
or
daa
data16
xor
ljmp
push
push
mov
pop
lcall
rcrl
add
mov
xchg
int3
push
jmp
rcrb
daa
jne
stos
jle
sbbb
popa
pop
jb
lea
xchg
mov
xor
ja
cmpsl
mov
mulb
push
add
mov
in
sbb
or
push
cmp
inc
sub
jmp
xchg
dec
movsl
jecxz
jbe
mov
sub
cmp
fs
scas
hlt
out
popl
js
scas
mov
xchg
inc
orl
ss
fdivrs
dec
push
insb
aaa
cmp
adc
sbb
leave
dec
mov
lret
nop
and
shl
jl
bnd
xchg
dec
daa
mov
and
pop
arpl
jmp
ja
jne
rcl
outsl
mov
fucomip
mov
jg
xchg
mov
fistl
xchg
or
mov
pusha
jbe
xchg
and
or
pop
test
sub
pop
inc
jl
jl
sbb
jp
inc
or
xchg
xor
push
mov
inc
jecxz
mov
or
inc
inc
sarb
pushf
into
mov
fisttps
lods
ficomps
cmp
call
xchg
insl
popa
ljmp
loop
cmp
leave
je
sbb
pop
sti
jnp
fcoms
mov
or
jecxz
jne
inc
or
test
mov
xchg
lea
ljmp
sub
outsb
push
push
dec
pop
inc
loope
sbb
gs
jae
pop
pop
mov
inc
cmp
sub
and
mov
loope
xchg
cs
cld
and
pushf
inc
aaa
mov
xor
lds
in
arpl
pop
jmp
hlt
lds
adc
push
or
cld
rol
cmc
aas
cmpsl
add
pop
xor
sub
out
scas
enter
pop
test
js
loop
imul
mov
sub
je
nop
sbb
test
add
fcomps
dec
adc
jb
into
mov
sbb
aam
aad
loopne
ss
xchg
xchg
xlat
ficomps
push
mov
call
stos
jecxz
jae
and
insl
mov
jecxz
push
fwait
xchg
jno
jnp
push
jl
inc
mov
shrl
mov
xchg
xor
inc
imul
pcmpeqd
cli
dec
xchg
dec
fs
cmp
fidivl
mov
stos
lods
int3
subb
ret
fisubs
pop
cmc
cltd
xor
insb
test
movsb
test
iret
adc
or
cmp
xlat
pop
aaa
mov
pop
mov
mov
sub
je
lds
xorb
add
das
cmp
push
cmpl
shr
cld
icebp
outsb
sub
jbe
rcrb
mov
dec
jns
xorl
dec
xchg
clc
js
loopne
cltd
cs
call
mov
jb
jg
test
hlt
and
pushf
pop
inc
fmuls
fisttps
and
iret
sbb
int
push
push
in
xlat
stos
cmpb
cmp
xchg
lods
sub
mov
dec
add
pop
outsb
jge
push
insl
fwait
test
arpl
jnp
ret
dec
out
dec
jp
adc
fucomip
sbb
dec
daa
xchg
push
jge
pop
clc
xor
push
inc
pop
pop
repz
out
mov
jnp
lods
in
xchg
dec
jb
leave
xor
jle
test
jmp
les
adc
inc
lret
mov
in
es
inc
bound
or
dec
push
ljmp
jg
lock
out
cmp
aas
int3
sbb
add
jno
sub
lods
sub
and
sbb
pop
push
mov
les
lods
enter
or
mov
adc
pusha
mov
and
cmp
and
mov
jl
sub
mov
rorb
xor
jg
movsb
xchg
lret
les
incb
push
icebp
cmp
jp
mov
jae
adc
int
push
sbb
xchg
mov
mov
xlat
adc
stc
ljmp
ja
loope
repnz
repnz
lock
test
jo
mov
nop
insl
cmp
jl
pop
dec
ss
push
pop
call
mov
call
jmp
mov
dec
call
cmpsl
mov
test
push
jg
adc
push
dec
inc
adc
sbb
pop
mov
fisubrs
xchg
jle
out
stos
pop
popf
notl
loopne
push
xor
push
lahf
sbb
inc
inc
mov
sbb
and
cmp
mov
daa
insb
mov
lret
icebp
pop
cli
dec
jne
jne
fwait
adc
aaa
xor
push
sub
adc
aaa
lahf
movq
mov
add
cmc
mov
and
shrl
in
push
mov
pop
out
cmp
stos
outsb
leave
lea
movsb
or
add
mov
sub
mov
sub
and
fbstp
cmp
iret
fists
in
pop
fnstcw
arpl
sub
mov
std
sahf
addl
pop
sub
lea
in
iret
mov
and
sti
mov
or
push
sbb
scas
xchg
cmp
adc
imul
movsl
and
inc
mov
adc
mov
pop
punpckldq
daa
cmp
scas
xchg
ret
dec
fstl
dec
lods
and
jle
lcall
inc
mov
stos
mov
lret
mov
mov
sbb
cwtl
leave
or
insl
fwait
sub
int
adc
dec
jmp
test
add
xor
mov
out
xor
adc
cmpb
mov
cmp
test
dec
push
mov
adc
xchg
pop
out
sub
repz
lret
sahf
loop
push
test
or
imul
mov
mov
ja
adc
out
pop
and
mov
test
shl
in
mov
in
dec
into
mov
dec
dec
js
imul
cltd
jns
sub
pop
mov
push
or
or
xlat
mov
pop
cwtl
repz
pop
xor
xadd
jmp
es
in
dec
pop
enter
sahf
adc
fdivrl
jmp
cmp
inc
mov
loopne
jmp
push
dec
pop
mov
sbbb
fimuls
xor
fnsave
adc
push
out
inc
mov
push
push
andb
xchg
arpl
add
or
inc
lods
and
inc
outsl
imul
loop
cmpsl
in
sub
push
lcall
out
std
dec
dec
cmp
add
xor
sbb
cwtl
mov
push
ljmp
outsb
sbb
cmpsl
xchg
sub
push
fdivp
fistpll
or
adc
inc
mov
xlat
xchg
cmp
push
pop
pop
scas
sub
ret
in
xchg
int
push
and
lods
leave
movl
mov
pop
dec
fdiv
push
adc
dec
sarl
idivl
out
clc
sti
lcall
sub
and
add
insb
inc
fiadds
test
and
int
je
adc
sub
mov
insb
repz
cwtl
adc
mov
cmp
test
gs
pop
shr
call
mov
shlb
push
and
jge
pushf
push
and
fistpll
mov
inc
cmp
in
push
mov
push
jne
pop
lea
call
dec
dec
xor
test
dec
and
push
adc
xchg
scas
push
pushf
inc
xchg
adc
and
xor
shlb
sub
sbbl
jp
adcl
js
gs
add
dec
mov
sbb
jmp
nop
push
sbb
or
rcrb
cmc
imul
cld
inc
ljmp
lahf
adc
ret
mov
jnp
inc
cmpsl
loopne
je
mulb
js
adc
nop
sbb
out
call
fisttps
or
jp
into
les
sub
bound
cmp
inc
push
pushf
mov
stos
inc
sbbl
dec
pop
sbb
js,pt
mov
leave
adc
in
insb
imul
ret
jno
stos
inc
mov
aas
mov
loop
ds
and
cmp
mov
inc
adc
test
cwtl
and
ja
mov
and
jmp
loop
xchg
pop
cwtl
rclb
cmpsl
fldenv
jl
add
sub
hlt
push
jmp
add
popa
push
lds
push
mov
push
inc
pop
and
or
adc
push
and
cs
rorb
sub
jbe
divl
inc
ret
adc
cmp
into
mov
adc
fs
cmc
ret
lds
and
mov
into
adc
pop
pop
insb
or
inc
xor
jp
in
sub
push
jge
sub
movsb
jmp
in
adc
leave
gs
in
push
test
sahf
icebp
in
dec
or
pop
sub
nop
lcall
push
mov
cmp
ret
inc
xchg
xchg
loopne
leave
xorb
shlb
test
push
das
mov
nop
cmp
xor
stos
push
lcall
xor
xor
repz
push
enter
mov
into
mov
sarl
or
add
and
ja
and
popf
cs
adc
in
inc
into
loope
xchg
pop
inc
mov
push
bound
pusha
int3
push
stos
push
sbb
fwait
popa
pop
ja
aaa
xchg
lret
call
mov
dec
dec
ljmp
arpl
je
loopne
xor
adc
loope
push
jo
jno
xor
shrb
cld
lret
inc
test
push
arpl
popf
mov
std
dec
pop
xor
shrb
mov
adc
dec
xor
pop
dec
adc
lcall
sbb
cmp
xchg
xor
adc
cwtl
rcr
dec
push
mov
mov
add
adc
cmpsl
aam
jo
and
sub
or
mov
imul
es
mov
je
jo
add
sarl
iret
inc
out
pop
leave
jl
push
enter
xchg
sbb
mov
lods
xchg
jg
jecxz
mov
mov
bound
popa
mov
sub
lret
xchg
test
mov
xor
movaps
lock
cmp
jno
pop
cmp
jae
push
mov
dec
out
lahf
dec
sar
in
cld
test
insb
pusha
add
icebp
addb
adc
stos
test
mov
mov
and
scas
ja
enter
int
lods
jmp
loope
sbb
cli
sub
xchg
jb
cmpsb
out
lcall
cmp
xchg
incl
popa
jmp
sub
subl
push
xchg
outsb
dec
in
xchg
jmp
or
pushl
pusha
and
jmp
pop
push
mov
mov
sbb
inc
movntq
add
sarb
fwait
jne
jnp
repz
orl
jl
xor
mov
sub
outsl
sub
xchg
mov
loop
imul
xor
outsb
dec
sbb
fidivl
mov
add
xchg
mov
loopne
add
xor
fwait
stos
pop
inc
mov
hlt
mov
clc
mov
shll
pop
clc
xchg
mov
xlat
and
icebp
dec
push
es
movsb
dec
fcomi
pop
nop
fisubrs
jbe
xchg
fildl
push
rolb
or
mov
xchg
mov
push
rorl
add
adc
jbe
and
shrl
mov
and
dec
mov
push
mov
loope
adc
rcll
inc
daa
sub
push
and
cmpsl
inc
fs
dec
xchg
in
subb
push
xchg
sbb
xor
enter
sub
add
or
stos
mov
cmp
mov
pop
cmp
jb
sbb
gs
stos
cmp
dec
dec
mov
pusha
pop
test
mov
daa
ljmp
clc
mov
outsl
mov
sbb
imul
dec
fs
sub
or
mov
aaa
cmp
adc
sub
cltd
stos
lcall
xchg
sub
cltd
mov
mov
mov
insb
fistl
sub
test
sub
cmp
and
adc
add
shrb
jecxz
les
fcoms
out
mov
test
jl
cmc
stos
and
dec
or
cmpsb
ja
sbb
pop
es
scas
orl
clc
pop
adc
xchg
cltd
cmp
rcrl
cmp
icebp
mov
in
cmp
mov
xor
ss
lods
pop
mov
repz
stc
and
jno
rcrb
lret
or
jbe
push
dec
sub
pusha
jle
inc
add
sub
inc
aad
xor
xchg
je
pop
cmpl
push
shr
dec
lret
loopne
stos
sbb
xor
xor
push
sbb
jb,pn
add
pusha
aad
pop
insl
ljmp
push
stos
in
hlt
mov
fcoml
hlt
das
inc
pop
or
xor
pop
push
aas
stc
aad
push
and
into
push
js
ret
shrl
aam
sahf
repz
dec
lods
inc
jge
ljmp
mov
sahf
mov
xlat
adc
sbb
insb
std
loope
sahf
jnp
mov
mov
mov
rol
fisubrs
pop
popa
popl
mov
push
popf
dec
pop
fisubrl
sub
loop
daa
jp
int
pop
xchg
pop
add
jno
jg
imul
sub
cmc
add
pop
jno
jecxz
add
inc
push
outsb
enter
mov
jbe
popf
cwtl
push
jle
cld
push
mov
test
nop
cmpsb
nop
js
adc
mov
and
bound
xor
rcll
xchg
call
jne
adc
xchg
jg
cs
mov
bsf
scas
scas
jecxz
and
cs
test
push
dec
or
pop
out
repz
jno
jmp
sub
jbe
dec
or
xchg
dec
fldt
lods
dec
xchg
mov
lret
mov
add
movsb
cltd
pop
cmc
cmp
mov
xchg
mov
loope
sbb
mov
xchg
and
mov
push
mov
andl
dec
shlb
xor
mov
and
ja
xchg
sbb
cmpsb
xchg
cli
andb
mov
inc
push
in
int
jle
fst
sub
and
or
test
add
jmp
mov
jns
and
mov
pop
nop
mov
or
pop
popl
lods
outsl
sbb
cli
shrl
mov
jae
scas
fld
or
int
cmp
push
aaa
mov
cld
dec
and
inc
pop
push
jp
dec
sbb
insb
xor
xor
repnz
test
xor
and
shl
mov
xor
je
jno
js
inc
jnp
push
add
fnstenv
loopne
loop
jge
xchg
cwtl
cs
push
and
mov
sahf
nop
dec
xchg
into
xor
pop
adc
out
loopne
sbb
fisubs
ja
sahf
and
mov
fucom
je
lahf
out
lcall
loopne
mov
lods
int
sub
in
je
sti
nop
loope
push
push
sbb
cs
pop
out
out
cmp
int
mov
mov
rclb
in
scas
cmpsl
popa
mov
cld
cmpsl
je
sbb
push
ja
fs
cmpsb
mov
mov
and
dec
sar
stc
mov
sbb
jg
dec
jl
push
cs
sub
xchg
cmpsl
jns
pop
leave
test
xor
scas
mov
data16
enter
inc
fwait
in
out
xor
popf
jle
and
movsl
enter
sub
aad
mov
ljmp
dec
roll
aaa
imul
jo
xor
icebp
jle
js
shlb
repnz
aam
enter
imul
cmp
imul
mov
cmp
inc
insl
sti
sbb
xchg
jle
sub
icebp
fwait
or
test
ss
repnz
into
xchg
or
push
push
fcomps
xchg
xor
incb
sbb
inc
mov
push
xor
cli
xchg
adc
add
and
clc
and
insb
ficompl
leave
inc
clc
cmp
adc
add
test
jge
and
add
int3
pop
negl
int
jbe
call
xchg
inc
sub
shlb
imul
sbb
test
mov
jmp
orl
cmp
xchg
or
xchg
shrl
mov
inc
std
outsb
and
mov
mov
rorb
mov
in
add
aam
adc
frstor
mov
pop
inc
xchg
push
stos
mov
mov
cli
pop
xor
in
sub
loope
insl
xchg
or
test
dec
sub
jl
cmp
add
inc
hlt
xchg
loop
xchg
add
cli
mov
addr16
insl
pop
push
sbb
icebp
in
cli
divb
das
and
popa
lret
loope
ljmp
fcmovnu
sti
sbb
dec
sarl
ljmp
mov
sar
fimull
aas
test
ds
out
clc
insb
sub
push
je
repnz
or
cmp
out
jae
insl
icebp
cli
sub
test
jb
aas
out
call
jecxz
sub
iret
push
outsb
adc
in
std
xchg
sub
inc
test
push
lret
or
add
pop
into
inc
cs
mov
or
fisttps
and
cmc
sbb
push
or
xor
pop
cmc
popf
pop
pop
stos
sahf
mov
movl
or
pop
addr16
push
xor
pop
int3
xor
ret
ret
xchg
sub
jae
mov
std
insl
sbb
or
addb
sub
jbe
aad
mov
in
fnstsw
test
movsb
aas
cld
js
lahf
add
test
imul
std
xchg
add
dec
dec
movsl
outsb
pop
rorb
jecxz
enter
in
imul
adc
mov
cmp
jp
jg
ret
subb
mov
cmp
fidivl
ror
sti
xorl
inc
out
or
pop
or
fs
add
pop
repz
adc
xchg
cmpl
or
stos
dec
in
or
mov
mov
mov
std
nop
test
fldl
das
mov
orb
fmuls
sub
xchg
sarl
mov
and
sub
mov
call
xchg
int
xchg
popf
outsb
adc
repnz
jle
jb
inc
cmp
mov
push
cmc
and
lea
in
negl
gs
outsb
out
into
xor
mov
mov
negl
jge
aaa
fmull
ja
aas
in
out
mov
mov
pop
jg
cwtl
add
repnz
dec
sbb
aaa
adc
roll
jo
mov
aaa
jecxz
adc
pop
mov
push
sti
data16
pop
mov
pop
scas
xchg
mov
push
xor
jns
lret
push
ss
mov
mov
and
or
mov
cmpsl
dec
insl
hlt
ljmp
adc
cmp
xchg
hlt
mov
push
pop
imul
or
stc
stos
bound
jle
xchg
stos
xor
fsubrl
mov
push
add
and
popa
dec
out
sub
in
jo
cmp
sti
inc
xor
nop
pusha
sub
loop
cmc
into
int3
cli
in
test
ljmp
lods
inc
int3
adc
dec
sub
pop
incl
in
test
in
sub
test
ljmp
dec
pop
jb
imul
jno
orb
icebp
in
les
mov
js
sbb
and
fucompp
lea
xchg
add
and
enter
sub
lods
aas
adc
xor
nop
mov
pushf
push
or
cmp
pop
and
xchg
push
test
mov
mov
arpl
mov
jmp
daa
outsb
mov
xor
pop
stos
sbb
mov
dec
sbb
dec
mov
nop
xchg
push
mull
scas
mov
lods
push
mov
cmp
les
xor
js
dec
sub
insb
add
sbb
cmp
mov
jns
dec
int
mov
xlat
les
aad
xor
pop
mov
dec
sbb
imul
cmp
pusha
test
or
aas
pop
jbe
cltd
or
xchg
lea
jne
movsb
test
jb
data16
ret
mov
dec
loop
cmpsb
stos
mov
mov
pop
sub
xchg
dec
xchg
bound
xchg
bound
movsl
and
mov
mov
sub
sahf
aad
jo
and
ss
mov
pop
push
or
or
andl
fisttps
aaa
inc
xchg
xor
cmpb
arpl
gs
rolb
cmp
fbld
in
and
adc
popa
mov
adc
jae
dec
and
add
loop
shl
push
cwtl
ret
test
xor
dec
sbbb
inc
pop
stc
cmpsb
lock
adc
data16
sub
mov
dec
fs
push
shrb
push
jo
xor
add
stos
sub
pop
enter
lods
mov
mov
mov
pop
cmp
bound
add
test
jp
cs
mov
idivb
mov
loop
xchg
jb
leave
xchg
sarl
or
mov
and
outsb
ss
adc
mov
sub
shl
adc
mov
and
push
mov
mov
stos
rolb
add
mov
ds
cmp
jns
sub
xor
sub
xchg
cmc
push
int
gs
out
and
ljmp
int
jmp
push
cs
jo
lock
sbb
repnz
xor
cmp
jae
mov
dec
mov
jb
das
xchg
subl
or
iret
jns
ss
push
nop
dec
cmp
push
mov
xchg
dec
fsub
rolb
sub
and
inc
adc
or
out
xlat
sub
inc
pop
in
xchg
push
imul
add
repnz
std
sub
mov
xor
lods
pop
mov
in
cmc
push
int3
movsb
out
or
xor
repnz
inc
push
mov
daa
xchg
mov
jae
fildl
adc
dec
aas
jg
mov
jo
rolb
adc
jns
out
mov
dec
jg
lds
pop
xor
rcr
icebp
out
or
dec
subl
adc
inc
ret
stc
mov
push
cmc
adc
in
jb
rcrb
fstps
mov
jmp
int3
jecxz
aaa
adc
imul
xor
dec
js
es
aam
fidivs
push
inc
sub
adc
inc
mov
pusha
test
and
jns
xchg
clc
lods
ret
out
xchg
lret
lods
ss
dec
test
and
in
jmp
mov
xor
or
adc
stos
sbb
mov
fisttps
in
fbld
mov
int3
xor
and
test
mov
cs
push
mov
std
mov
cltd
sahf
pop
jbe
fdivp
mov
sahf
shlb
iret
loope
ret
scas
lods
adc
popl
add
xchg
int3
stos
mov
fsubl
adc
sub
inc
testl
and
les
xchg
loop
ss
test
aaa
fdivrl
enter
push
mov
add
aaa
xchg
pushf
inc
pop
fsubrl
adc
ss
cli
cmp
mov
movsl
lods
push
fdivrp
testb
xor
rorl
xorb
mov
sbb
ja
enter
cmc
sub
mov
clc
sub
fsubp
and
jne
sub
add
lds
xchg
sbb
mov
call
pop
inc
xor
stos
adc
mov
stc
sti
xchg
lea
or
push
jb
adc
jo
mov
mov
xchg
jecxz
mov
enter
pop
jno
pushf
and
ja
pop
sti
loope
je
xchg
pop
test
daa
xor
jp
dec
add
jecxz
outsb
pop
shrb
push
jae
insb
adc
sub
icebp
mov
dec
xchg
inc
sbb
mov
inc
mov
xor
je
pop
arpl
cmp
push
cmpsl
push
dec
sbb
xor
inc
pusha
inc
mov
repz
pusha
hlt
sbb
sub
ret
push
lret
aam
in
fwait
xor
add
adc
cmc
pop
lret
je
imul
xorl
outsb
or
push
pusha
rolb
lods
cmpl
scas
inc
push
dec
hlt
sbb
fldt
lock
jbe
sub
and
cmc
pop
ffreep
push
inc
test
outsl
vmread
mov
mov
mov
hlt
insb
test
adc
xor
mov
push
outsl
outsb
adc
icebp
push
hlt
dec
mov
push
mov
adc
sti
ret
lods
push
loop
dec
xchg
repz
aam
ret
orl
jge
idivl
adc
cmp
es
mov
adc
into
repnz
inc
mov
notl
in
sub
call
repz
aaa
scas
imul
xchg
xor
mov
bound
or
push
aas
gs
pop
adc
dec
pop
jne
pop
into
jns
enter
sub
ret
and
push
inc
adc
jg
adc
pop
mov
pop
dec
mov
into
inc
hlt
loopne
adc
pop
ror
push
mov
add
je
outsb
push
push
jb
sub
rolb
loope
jl
sahf
imul
rcrl
es
inc
imul
loop
data16
sbb
jne
xor
sti
pop
push
xlat
mov
xchg
mov
pop
test
outsb
notl
mov
cmp
movsl
icebp
repz
sbb
call
test
jb
in
clc
xor
mov
mov
xchg
mov
xchg
and
xchg
dec
nop
sbb
dec
dec
xchg
inc
pop
cmp
push
sbb
fistps
and
add
push
dec
loopne
subb
cmp
inc
push
xor
lret
inc
pusha
lods
in
ja
add
cmp
mov
aam
faddl
sbb
pop
fsubs
dec
inc
sub
pop
dec
gs
inc
sub
mov
or
xchg
jb
js
divl
dec
push
imul
sub
inc
push
fists
mov
in
call
test
lcallw
ja
inc
jno
sbb
lods
adc
rol
iret
scas
clc
fisttps
dec
filds
add
pop
mov
add
fwait
lea
fistpll
fsts
sub
in
pop
dec
mov
hlt
xchg
mov
jbe
inc
xchg
fwait
lret
jge
xchg
mov
lods
loop
mov
mov
mov
rorb
pusha
sbb
jg
push
sbb
pop
lret
orl
sub
stc
cmc
jmp
pop
arpl
xor
mov
push
dec
aad
ja
pop
inc
sbb
xchg
jecxz
outsb
popa
xor
das
jno
push
je
sub
mov
rorl
test
adc
push
mov
faddl
jp
and
jg
and
sbb
imul
rcll
js
shrb
adc
sbb
stos
lock
dec
sbb
mov
int
pop
push
in
loopne
loop
in
adc
and
adc
pop
retw
ret
mov
loopne
adc
scas
xor
shrb
les
lods
push
sub
mulb
pop
mov
inc
inc
mov
inc
dec
mov
out
cmp
xorb
sbb
popf
xor
push
inc
test
pop
mov
int3
dec
and
enter
shr
lds
lock
mov
dec
mov
orb
mov
sbb
jecxz
add
xchg
hlt
fadds
inc
stos
xor
sub
int
out
cmp
jg
outsl
push
fidivs
cmp
arpl
push
cmpsl
xchg
xor
push
mov
in
rcll
imul
call
or
fadd
test
ds
jge
insl
and
aam
jmp
cmp
lods
fisttpl
or
mov
shrb
fwait
ljmp
fwait
adc
xor
push
adc
mov
scas
lds
and
and
pop
mov
xor
in
jle
scas
pop
repz
xchg
les
push
xchg
jecxz
test
sbb
cld
out
int3
sub
aad
aaa
and
mov
add
rcl
pop
pushf
cmpb
out
mov
sbb
jg
std
mov
inc
push
cli
fsts
inc
movsl
sbb
pop
dec
mov
repz
insb
ret
xchg
scas
rcr
or
and
mov
movsb
test
pop
inc
loope
jbe
addr16
in
popa
cli
sbb
jbe
dec
xor
push
mov
ds
sbb
lds
sub
add
addr16
lock
add
shrb
dec
insb
flds
dec
xchg
xchg
int
mov
data16
mov
out
scas
subb
dec
pop
das
push
jne
sbb
add
lcall
adc
dec
les
or
push
add
push
sbb
sarl
xchg
push
into
and
pop
lret
add
mov
and
xchg
jecxz
sub
stc
lods
xchg
rclb
xor
stc
fwait
rolb
arpl
cmp
adc
das
js
jg
mov
cmp
push
add
mov
gs
dec
inc
xor
fnsave
aaa
ret
es
mov
fst
push
outsl
sub
xchg
pushl
repz
ret
pushf
clc
je
scas
push
adc
or
cmp
leave
addl
dec
sahf
xor
stos
cmpsb
cmc
inc
mov
aaa
pop
fldt
shlb
inc
pop
popl
in
xchg
inc
sti
sbb
dec
push
js
push
movsl
js
call
movsb
lds
and
scas
enter
xchg
pop
mov
and
aad
lret
inc
pop
movsl
repnz
pop
fisttps
enter
inc
jge
mov
push
sub
and
adc
call
in
pop
sarl
mov
icebp
rolb
scas
sti
ja
roll
cmpsl
shrw
test
xchg
cmp
dec
aaa
xchg
fldl
dec
out
xchg
fsubrp
stos
push
inc
movsb
imul
pop
int
adc
out
jb
or
adc
jmp
je
mov
inc
lahf
shll
scas
clc
data16
inc
jbe
mov
jbe
mov
inc
adc
loopne
push
inc
xor
lods
loope
nop
sbb
xor
stos
cmc
fs
iret
mov
sbb
ror
push
adc
lods
cli
in
fstpl
pop
pop
push
jo
out
sbb
adc
add
mov
daa
adc
mov
mov
inc
inc
je
movsb
cmc
mov
adc
cld
loopne
mov
inc
cwtl
add
inc
push
pop
sbb
sbb
lods
inc
sub
jbe
pop
xor
mov
std
push
mov
push
bound
mov
and
notb
pop
movsl
push
cmc
in
adc
rcl
jle
sbb
add
or
scas
add
lock
lcall
movsl
sbb
push
push
pusha
or
mov
pop
push
mov
testb
adc
call
jnp
int
aam
xlat
sbb
xchg
movsb
dec
sti
mov
cs
push
in
or
dec
jle
sub
cmpsb
adc
jno
call
test
pop
fdivl
out
sbb
ret
cwtl
pop
add
or
ret
pop
xchg
inc
jo
pop
inc
lret
sbb
pop
sahf
stc
push
push
lock
and
imul
idivb
mov
dec
lock
daa
mov
outsl
enter
fistl
rorl
inc
jg
push
or
add
icebp
cmp
loop
pusha
mov
icebp
imul
data16
ds
add
ret
push
mov
outsb
xlat
arpl
sahf
enter
lods
xchg
mov
push
cmp
pusha
cmpsb
rcl
icebp
pushf
add
push
loopne
sarl
pop
cmpsl
hlt
std
add
je
loope
movsb
or
and
nop
out
or
or
inc
jl
xchg
push
fdiv
pop
add
subps
xchg
sub
mov
leave
stos
push
test
les
mov
dec
pop
int3
in
dec
add
xchg
push
sbb
ja,pn
xor
mov
jae
push
jg
cmp
and
out
test
inc
pop
fistl
roll
jge
adc
roll
aam
push
sbb
fcomp
outsb
mov
test
pop
sbb
sub
adc
jne
pop
fwait
cli
dec
scas
movsb
test
xorl
dec
hlt
ror
popa
popf
ret
dec
mov
lds
daa
dec
int3
mov
cmpsb
stos
jge
pop
push
push
pusha
shlb
sbb
xchg
mov
lcall
aaa
incl
jno
loop
or
cmpl
outsb
fnstcw
push
nop
and
jb
pop
or
cmc
shl
lds
movsl
jp
add
dec
sbb
mov
sarb
mov
push
xor
outsb
cmpsb
js
daa
rorb
mov
insl
mov
jns
cmp
mov
xchg
dec
daa
sbb
dec
bound
push
adc
or
sbb
ret
sub
pop
out
push
mov
ret
jae
mov
ljmp
lock
popa
and
jmp
jmp
mov
sti
pop
or
push
rolb
inc
mov
int3
call
or
dec
daa
lcall
cmc
not
dec
dec
xorb
adc
hlt
mov
adc
lcall
jnp
dec
add
test
das
dec
pop
mov
jge
mov
imul
nop
push
insl
bound
lods
daa
push
pop
mov
insb
xchg
adc
mov
push
add
mov
sbb
add
and
push
pop
and
pushf
mov
push
es
dec
scas
push
out
clc
cmp
jne
pop
sahf
mov
xor
js
les
push
call
jae
xor
adc
std
stos
cltd
push
dec
inc
add
inc
pop
sahf
jl
mov
pop
fdivr
lods
pop
xlat
inc
mov
mov
data16
test
notb
push
andb
xor
jns
loopne
adc
cmp
cli
scas
rcrl
jno
rol
popa
xchg
in
lods
push
pop
push
in
dec
das
lods
enter
int
daa
mov
imul
or
lods
add
rcrl
jp
js
mov
push
sbb
inc
sub
pop
ss
loop
and
pop
cmpsl
scas
pop
mov
xchg
in
mov
pop
xchg
cmp
sbb
mov
cmp
fimuls
adc
test
fisttps
xchg
fimull
mov
scas
pop
jl
insb
fidivs
cmp
sbb
outsb
push
mov
or
rcrb
fwait
mov
insl
movsl
bsf
jmp
ret
pop
jmp
pop
mov
sbb
xor
pop
leave
call
leave
push
dec
sbb
dec
xor
sub
adc
hlt
outsl
cmp
faddl
sti
rcr
fstp
mov
or
mov
fwait
and
dec
lock
and
sbb
xchg
lods
std
inc
cwtl
out
lock
lahf
push
inc
adc
sbb
push
out
mov
shll
or
fidivs
bound
xor
popf
ret
xchg
call
test
and
fsubrs
xchg
test
xor
push
lock
ja
and
in
call
clc
cmpsb
and
add
pandn
mov
sub
xchg
cs
test
push
mov
mov
xchg
sub
fsts
addr16
es
mov
jmp
rcrl
lret
cmp
cs
icebp
dec
pop
clc
mov
cli
push
movsl
push
loop
out
cmp
cmp
stos
mov
sub
sub
push
push
mull
and
and
sbb
insl
mov
call
cmp
jle
insb
lret
and
jo
push
mov
push
test
mov
push
and
in
pop
sub
es
fdivrs
sub
push
mov
cmp
adc
mov
test
mov
jecxz
fmull
jae
int3
aas
push
ljmp
push
imul
movsl
stos
xchg
popa
mov
lods
addl
stc
lret
enter
add
test
addr16
mov
stos
es
pop
push
jno
sbb
xlat
xor
adc
or
jne
mov
inc
lods
and
popa
fdiv
ret
outsl
mov
pusha
or
jne
lods
push
sub
xchg
ret
je
rcl
dec
or
xchg
add
pop
fld
and
imul
cmp
outsb
rorb
add
bound
js
popa
cmp
setae
clc
mov
mov
adc
insb
dec
outsl
dec
xor
das
lock
sbb
adc
fildl
fistps
xrelease
sarb
mov
jne
shll
aas
fwait
pop
daa
sbb
stc
fs
cmpsl
mov
pop
cmp
inc
lret
in
adc
stc
int
mov
lret
sahf
inc
js
inc
leave
pop
push
and
test
mov
pop
lret
pushf
fcomip
out
jl
xchg
xor
hlt
dec
pop
cs
push
cwtl
xor
and
push
rorb
adc
movsl
stc
lock
mov
or
pop
jns
sahf
mov
sbbl
repz
rcr
adc
repz
push
pop
adc
jb
jp
lea
cmpsb
push
fwait
loopne
jbe
xchg
lret
inc
mov
repz
ret
jns
rolb
arpl
fdivr
sbb
mov
arpl
dec
push
popa
inc
daa
lods
sarb
fsubrs
jns
xor
adc
and
hlt
enter
pop
and
fnstenv
je
push
adc
lret
xor
fisubrs
pushf
push
push
fwait
mov
out
cmp
xlat
sub
mov
repnz
sbb
lcall
lahf
hlt
sub
repz
fcmovnu
cmp
and
scas
and
test
sub
mov
aam
lock
ficomps
jns
mov
in
repnz
jns
out
addr16
xor
jl
arpl
leave
mov
pop
ja
mov
ret
iret
leave
popf
jle
cld
jb
scas
into
scas
pusha
jns
or
push
xor
les
lret
sbb
sahf
test
push
stos
push
pop
fdivl
sbb
sub
push
fwait
mov
popa
mov
or
jp
jbe
in
cmp
in
movsb
frstor
cmp
push
in
or
push
fdivp
stc
sub
shrl
push
sub
arpl
push
in
cmpsl
imul
mov
push
push
cmp
pop
mov
fsubrl
enter
sub
inc
loop
lcall
leave
daa
mov
rorb
push
mov
push
xchg
test
jo
std
xchg
rorb
inc
pop
mov
scas
imul
icebp
sub
add
in
stos
adc
lcall
mov
adc
pop
or
inc
test
shll
fisttpl
add
cli
sub
int3
xchg
mov
cmp
mov
pop
cwtl
clc
lret
push
xchg
pop
fwait
jb
add
cmc
stos
jnp
stos
insl
sti
int
sub
hlt
movsl
push
int
pop
mov
jg
ja
mov
loopne
push
sbb
in
mov
pop
lret
test
fimuls
cmp
pop
lcall
mov
cmpl
jle
dec
test
xor
dec
dec
dec
push
stos
ret
jle
out
push
and
imul
ds
fisubs
outsl
inc
or
push
and
mov
sbbl
fldt
ljmp
das
push
sbb
jae
mov
leave
fidivrl
stos
adc
lcall
mov
inc
in
in
and
sarb
jecxz
dec
sti
jo
incb
push
ja
filds
xchg
ror
clc
or
pop
lret
data16
fisubl
inc
xchg
nop
fadds
int
cmc
loop
xchg
rcr
andl
dec
add
test
push
repnz
movsb
adc
push
icebp
xchg
outsl
xchg
add
lock
cmp
rcr
jb
cmpb
sub
cmp
pop
sub
push
out
aam
jne
xor
xor
call
aaa
dec
pop
pop
adc
xchg
adc
arpl
rorb
push
sarl
jmp
mov
lret
inc
sbb
fsubrl
in
test
mov
inc
cmpsb
pop
push
movsb
cltd
xor
push
ds
addr16
stos
and
cmpb
test
push
daa
pop
insl
pop
or
jl
mov
jne
sub
cmp
mov
dec
movsb
dec
push
call
sub
sub
icebp
mov
xlat
xchg
or
adc
push
inc
inc
gs
dec
jge
mulb
xchg
sub
inc
push
fbstp
sub
push
or
aad
mov
xor
or
repnz
test
jg
mov
pop
cwtl
out
daa
mov
and
or
cmpsb
outsl
inc
pop
sbb
popa
mov
cs
scas
inc
sbb
pop
mov
out
data16
push
frstor
pushf
mov
loopne
xor
lahf
cmp
adc
or
jns
push
ljmp
pop
mov
call
pushf
xor
add
fld
mov
inc
add
out
sbb
push
cmp
pop
pop
test
sub
outsl
xchg
xchg
pop
mov
testl
and
push
mov
push
icebp
lock
iret
xchg
lcall
sbb
test
push
dec
hlt
out
xor
out
rcr
sub
aam
dec
mov
mov
pop
mov
dec
mov
pop
unpcklps
fldl
xchg
adc
adc
jle
dec
pop
fisttpl
call
clc
push
and
jmp
and
xor
iret
mov
mov
sub
daa
mov
mov
ds
loop
or
std
xchg
push
aad
pop
lcall
fwait
xor
cvttps2pi
data16
gs
pop
jbe
stc
mov
cld
add
push
jns
xchg
subb
mov
call
daa
inc
inc
or
inc
not
push
sub
out
ss
gs
mov
dec
adc
or
pushf
inc
sbb
int
push
push
popa
jo
and
lods
in
dec
movsl
xor
cmp
imul
ss
xor
je
sbb
fistps
clc
leave
xchg
push
push
mov
js
arpl
push
sub
pop
mov
in
mov
aad
cmc
add
popa
and
xchg
jns
xor
repnz
mov
xor
std
dec
mov
or
das
push
insl
sub
mov
push
xchg
inc
pop
or
in
jne
lds
ljmp
call
in
dec
jge
push
mov
stos
lods
cmpsl
mov
out
cmc
shlb
test
std
fwait
test
xchg
cmpsb
jno
repz
sbb
ds
out
adc
or
push
movsl
insb
mov
loope
adc
sti
and
js
push
or
adc
add
cmp
pop
cmp
cs
fistps
shrl
dec
in
pop
lcall
cmpsl
cmp
xchg
push
cmp
sbb
test
dec
sahf
and
js
xchg
aaa
sbb
inc
inc
movsb
inc
lods
fwait
adc
popa
cwtl
cld
scas
mov
pop
sti
mov
movsb
inc
mov
mov
loopne
xor
push
mov
xor
cmp
inc
inc
mov
in
test
mov
fisttps
imul
jl
pop
fdiv
orb
and
sub
nop
fnsave
sub
sbbb
and
cwtl
fs
and
int3
and
orl
ljmp
stc
into
or
lret
in
mov
cs
shll
iret
and
outsb
mov
loop
inc
mov
insl
mov
sbb
xorb
add
pop
je
in
das
cmc
mov
leave
sbb
pushf
movsl
jmp
adc
xchg
sbbl
cmp
pop
lea
mov
addr16
rcrb
sbb
push
setae
mov
cmpsl
test
in
aam
cmp
sub
in
push
out
mov
orb
ss
popf
in
push
ljmp
add
btcl
adc
pop
push
pop
push
imul
jl
insb
push
adc
mov
mov
pop
mov
aam
mov
inc
repnz
mov
mov
jmp
lret
xor
push
pusha
in
fsts
pop
outsb
and
jp
lcall
sbb
jb
loop
cmp
jno
mov
nop
shlb
popa
push
ljmp
les
sub
aas
inc
popa
or
pop
stc
sbb
jl
or
scas
shrb
cmp
mov
mov
scas
mov
sub
or
jb
loope
jnp
xorb
fwait
push
push
jecxz
aaa
cwtl
test
hlt
pushl
sbb
fcmovne
inc
cmp
cmp
dec
pop
jns
add
outsb
push
mov
dec
adc
add
cmp
cmp
or
scas
mov
inc
cmpsl
lcall
push
jae
or
and
cs
scas
mov
pushf
lea
icebp
cmc
notb
das
and
xchg
mov
gs
and
das
mov
cmp
and
stc
hlt
add
cltd
test
mov
lods
inc
shl
jae
loope
fs
ret
lods
push
lods
test
mov
movsl
inc
lea
lcall
push
jne
data16
aaa
jno
stos
imul
sub
and
incl
cmp
into
adc
jp
xchg
sbb
or
fcoms
test
sub
mov
mov
xchg
or
dec
xor
adc
xor
xchg
push
or
and
sbb
inc
outsb
fimull
cmc
jbe
dec
or
loope
lahf
icebp
ret
fdivs
push
pop
push
sbb
jb
ds
pop
jp
ret
pop
imul
adcb
dec
sub
xor
inc
ficoml
out
repz
enter
jl
repz
test
push
cld
ja
jno
or
inc
and
shlb
dec
dec
inc
mov
idiv
into
loop
repnz
js
add
push
lret
xor
cmp
bound
jl
add
das
dec
jnp
stos
insl
icebp
pop
aam
clc
insb
or
test
das
rorb
daa
popa
add
mov
es
cmp
into
adc
sbb
mov
jmp
cmp
ja
push
sub
adc
lcall
pusha
sub
add
loopne
adc
cmp
repz
repz
xchg
loope
insb
mov
in
ficompl
jb
cmp
mov
out
bound
addr16
lcall
mov
pop
inc
or
cld
idivb
mov
and
and
push
es
mov
pushf
lods
addl
add
xchg
pop
les
lds
in
cmp
push
pop
mov
lcall
or
lret
inc
mov
arpl
daa
jb
mov
xor
test
stos
std
adc
jnp
pop
push
nop
inc
and
dec
push
push
xor
fdivl
std
adc
sub
bound
adc
std
jne
sub
push
sbb
cmp
ljmp
sub
mov
xor
cmp
lods
in
out
mov
xchg
loopne
imul
rcrb
rolb
inc
mov
xchg
add
lret
mov
inc
ret
sahf
outsb
sbb
dec
push
rorl
mov
mov
in
test
mov
pop
mov
sub
std
adcl
add
int
insb
xchg
movsl
cld
adc
stos
aas
push
lods
jno
sti
jae
sahf
pop
shlb
das
sbb
pop
aas
dec
add
shr
gs
push
cmp
push
dec
or
xchg
call
sbb
push
push
imul
mov
and
jle
dec
fwait
jo
inc
out
sub
xor
mov
dec
adc
enter
fsubp
out
xchg
xor
int
out
lock
mov
sahf
sbb
cltd
outsb
mov
pop
lea
fisttps
sub
test
lcall
sbb
mov
or
sbb
xor
into
jmp
jo
into
imul
push
dec
lret
fsubrs
cld
mov
aam
cltd
or
mov
jae
repnz
push
loope
pop
cld
cmc
mov
jno
sub
in
aad
faddl
insl
jge
int3
or
jp
jl
call
xchg
xorb
dec
cli
pop
and
cmp
test
cmp
mov
inc
sbb
lock
push
imul
push
movsl
jge
data16
mov
or
add
push
cmc
xchg
adc
pushf
or
and
clc
sbb
pop
mov
or
sbb
mov
sub
cwtl
push
dec
pop
out
mov
lods
int3
and
outsb
out
cli
xchg
sbb
loop
jl
pusha
incl
scas
push
repnz
mov
adc
fs
test
popf
dec
ljmpw
insl
sub
arpl
ret
push
shl
into
addr16
lods
mov
jno
fisttpl
lret
cmc
daa
repz
rcrb
sub
sbb
icebp
data16
pop
cmp
pop
sbb
xchg
outsb
test
cmpsl
xchg
inc
xchg
and
subl
cmc
scas
insl
fisubl
and
dec
dec
cmpsb
jo
int
cmpsb
fbld
jg
aas
call
dec
and
pop
icebp
arpl
jne
jae
sbb
dec
or
enter
dec
lea
jnp
imull
aaa
add
pop
adc
fisubs
jb
and
fwait
je
jno
mov
scas
int3
sub
ja
fisubrl
push
cwtl
cmp
dec
ret
mulb
dec
jge
push
popa
add
je
fwait
push
sbb
dec
je
or
jb
mov
mov
imul
add
jb
jmp
js
into
mov
filds
push
or
jo
aas
cmc
lods
push
stos
inc
or
sbb
push
push
inc
mov
test
add
addr16
loope
cmp
mov
xor
mov
sub
mov
jno,pn
insl
rorl
xor
repz
push
int
mov
orb
popa
sbb
pop
gs
sbb
ss
push
std
sarb
rclb
xchg
gs
in
sbb
scas
sbb
bound
lea
addl
push
xchg
xchg
cmc
cmp
and
sbb
ret
pushf
and
test
ljmp
xor
add
sub
or
pusha
inc
roll
pop
jmp
cmp
cmp
sub
or
fwait
lds
pop
aad
call
leave
mov
push
test
fdivrl
adc
outsl
push
xor
pop
sbb
push
add
mov
aad
xchg
dec
fwait
pop
jb
lods
subl
cmp
mov
cmp
or
in
and
mov
pop
xchg
fldcw
mov
lock
cmp
jg
shr
shl
imul
jmp
cmp
pop
std
adc
mov
jne
sub
and
call
test
pop
test
fstps
xchg
xchg
mov
out
xor
imul
add
lahf
imulb
out
cmp
cs
hlt
add
xor
cs
fistl
ret
sbb
xchg
or
and
jb
sub
jmp
xor
jg
or
sbb
pop
mov
cld
fs
push
push
cmp
cmpb
les
push
xor
aaa
pop
or
movsl
push
lcall
loop
int
cld
fsubrp
aas
jmp
sbb
mov
daa
jo
dec
addr16
bound
sub
insl
out
xor
rep
lock
inc
das
sub
pop
pop
dec
jg
cmp
cmp
imul
cmpsl
jae
lea
xchg
xchg
lret
sbbb
adc
ja
loopne
addb
imul
sbbl
nop
int3
push
loope
or
int3
cmpsl
into
pop
pushf
das
les
subl
scas
popa
pop
fstpl
in
pop
call
sahf
negl
cmp
mov
call
das
sub
xchg
fcmovne
mov
inc
inc
sbb
test
addr16
aad
or
jns
icebp
adc
cmp
dec
cmp
jno
cltd
std
dec
xchg
xor
cmpsb
js
pop
xchg
and
notb
adc
mov
pop
rcll
std
adc
dec
leave
xchg
popa
sub
cmp
test
push
xorb
pop
cmp
inc
push
push
inc
adc
mov
jecxz
and
sub
adcb
stos
sub
mov
out
fwait
push
pop
jae
insb
icebp
clc
fdivl
xor
stc
movsb
iret
xchg
daa
andl
arpl
and
cmp
int
jge
loop
in
hlt
repnz
xor
cmp
and
mov
out
inc
dec
xor
jnp
mov
jge
insb
sub
scas
pop
adc
add
adc
adc
loope
popl
sbb
lds
add
push
subps
stos
icebp
pop
inc
out
push
andb
pop
jo
fisubrl
mov
add
pop
sub
jno
mov
push
mov
stc
mov
sbb
jb
int
std
mov
mov
pop
out
aaa
cmp
xchg
sbb
sub
pop
xchg
push
ja
mov
pop
into
insb
pusha
aas
les
insl
mov
or
test
out
lock
or
insl
inc
sbb
pushf
js
and
addr16
xor
inc
lret
pop
mov
test
insb
mov
int3
arpl
mov
repz
mov
sub
sub
dec
jns
loope
roll
adc
stos
out
xor
and
pop
sbb
pop
enter
or
clc
arpl
fstpt
and
pop
jbe
sbb
cwtl
mov
bnd
js
fs
xor
lea
insl
in
jno
cmp
dec
mov
outsl
bound
xchg
cmpb
and
xorl
lock
incl
sub
sbb
cmp
cmp
adc
pusha
pusha
xchg
xchg
out
add
in
sbb
sbb
and
andl
shl
dec
mov
lea
popa
inc
jmp
fcmovnb
dec
push
or
movsl
xor
out
sbb
imul
movsb
aas
idivl
stos
pop
xchg
xorb
leave
push
out
icebp
xchg
jmp
push
xor
mov
or
dec
popa
mov
cmp
cmp
jno
sub
mov
jmp
add
testl
jns
int
mov
fwait
sub
icebp
ds
ds
inc
sbb
fidivs
xlat
in
push
and
push
cld
inc
in
sub
cmpsl
cli
aad
sub
xlat
sbb
cmpl
push
inc
fwait
cmp
iret
mov
add
pop
out
mov
ret
out
xor
std
mov
test
in
loopne
rorl
or
aam
stos
loope
pushl
xchg
inc
lds
lret
inc
add
cmp
add
push
mov
jecxz
jns
ss
mov
lods
cmc
shll
jl
push
bound
leave
popa
int
movl
lods
pop
push
add
or
rorb
dec
ds
ret
daa
iret
lds
jmp
push
dec
add
xor
hlt
sbb
or
repz
sub
dec
int
or
push
cmpsl
push
adc
mov
and
les
jp
js
add
xor
dec
mov
xchg
jecxz
dec
je
push
aad
mov
insb
sarb
mov
mov
pop
cld
outsb
jne
in
ret
cmp
and
fwait
inc
ret
adc
test
les
pop
mov
loopne
adc
inc
test
adc
cmp
std
popf
incb
add
mov
ja
loop
push
das
cmc
out
fs
sarl
add
mov
ret
inc
lds
popf
mov
pop
sbb
inc
mov
adc
xchg
cmpsb
in
mov
or
jecxz
sub
mov
jbe
lcall
pop
test
cmp
aad
jae
mov
in
sbb
arpl
pop
add
jl
sub
sbb
dec
fwait
in
mov
outsb
mov
lret
add
pop
das
xchg
into
test
xchg
test
ret
test
xchg
loopne
sub
insb
les
sub
xlat
xor
std
cmpsl
push
fucomip
sbb
aam
shl
sbb
sbb
xchg
mov
call
sbb
pop
dec
sbb
scas
test
ljmp
je
daa
icebp
jecxz
xchg
test
ds
jb
cltd
addr16
pop
pop
or
lahf
ja
xchg
into
push
arpl
aas
jp
dec
jne
mov
addr16
add
mov
adc
nop
sarl
leave
arpl
nop
dec
fwait
sbb
in
push
leave
sbb
leave
test
lock
jno
aaa
pop
nop
inc
into
adc
fcoms
icebp
leave
pop
mov
inc
loop
das
sub
lret
mov
xor
mov
std
je
push
mov
mov
inc
mov
faddp
mov
cmp
cld
sbb
cmp
popf
sbb
add
pop
mov
and
loop
in
sbbl
sahf
jge
cmpsb
push
sti
lahf
cwtl
ljmp
jmp
in
add
xchg
out
sbb
mov
jge
rorl
cmc
mov
ds
cltd
jns
or
fistps
aad
adc
lods
jbe
popl
div
loopne
mov
mov
push
cmp
xchg
xchg
lret
mov
mov
aam
mov
mov
mov
xor
outsb
ret
pop
stos
imul
movsl
jg
subb
adc
lret
xchg
jns
lods
lea
fists
and
mov
xor
xchg
fs
insb
loop,pt
int3
and
lret
in
mov
and
mov
inc
shlb
mov
lock
call
in
xor
js
or
jl
add
fs
sbb
les
ret
add
aam
inc
jns
mov
clc
repz
and
roll
lock
push
lds
ficomps
stos
aam
jo
daa
jl
popa
daa
adc
les
dec
lcall
jle
lods
mov
in
adc
adcl
dec
add
add
and
pop
pop
lret
scas
aad
out
adc
lret
mov
sahf
mov
fcmovne
jecxz
roll
roll
xlat
xor
pop
and
movsl
hlt
ret
pop
popa
adc
out
inc
push
or
decl
int
mov
lret
insb
inc
rcrl
mov
shl
mov
mov
movsb
push
adc
push
outsl
out
xchg
push
adc
mov
push
mov
out
mov
insl
hlt
inc
cmp
pop
fwait
mov
xchg
loope
or
lods
or
xor
cld
addr16
xchg
outsb
cmp
mov
divb
mov
mov
rolb
sub
ret
orb
lods
hlt
inc
pop
addl
clc
loopne
or
xchg
addb
not
shr
cmp
push
xor
jae
push
mov
addr16
dec
xchg
inc
insb
cmp
push
insb
outsl
cmp
jb
test
dec
push
setp
or
fisttpl
pop
fsubrl
xor
jle
movsl
rcll
ja
cmpsb
jo
std
in
pop
cmpsl
pop
mov
loopne
sarl
and
sub
xor
cwtl
aaa
dec
bound
pop
adcb
add
aad
push
adc
inc
lret
xchg
movsb
sub
jo
adc
shlb
cmp
adc
jo
xor
div
fldenv
mov
repnz
adc
repz
into
arpl
lds
ljmp
xor
mov
je
jp
cmp
call
aaa
gs
jp
test
icebp
xchg
pop
jg
into
mov
add
loopne
out
inc
mov
outsl
pop
xor
push
loop
xchg
rorb
pop
fs
mov
rcrl
test
add
mov
push
jmp
or
mov
lcall
pop
addl
repnz
popa
in
loopne
leave
adc
cmc
dec
fmuls
mov
cmp
jo
jne
fistpll
in
push
lods
test
and
xor
or
popf
outsl
das
stos
movsb
lret
pop
call
sbb
inc
mov
inc
mov
imul
and
rorl
flds
dec
jo
aam
ret
sbb
xchg
lret
adc
mov
jg
xchg
rorl
std
pextrw
stos
insl
jno
fstl
ljmp
repz
xchg
mov
xor
leave
inc
scas
or
fsub
dec
jae,pt
out
xchg
add
fxch
add
hlt
les
mov
test
popa
cltd
cld
cmpl
mov
jne
pop
loopne
js
sub
mov
xlat
mov
add
bswap
or
repnz
fwait
ret
ja
mov
cmp
xchg
xchg
push
jecxz
gs
icebp
lds
jno
mov
jns
mov
jmp
add
cmpsb
fwait
sahf
jle
nop
mov
mul
xchg
ljmp
aaa
mov
movsl
int
rcl
fwait
jmp
cmpsl
in
pop
inc
test
dec
icebp
repz
xchg
sbb
push
mov
mov
call
loopne
jns
imul
mov
dec
fsubrs
daa
sub
pop
jno
jb
xchg
cmp
xor
gs
adc
js
jmp
mov
jno
push
lret
xor
jno
fmull
mov
jg
mov
in
dec
xchg
imul
inc
scas
xor
dec
jmp
subb
mov
sbb
jmp
sbb
sub
adc
cli
dec
addr16
test
jns
lahf
movsb
or
sub
xor
mov
mov
mov
mov
xor
in
jl
add
jbe
int3
mov
add
inc
testb
stos
mov
mov
jmp
adcl
cmpsb
jne
jo
inc
in
sub
mov
je
aad
clc
in
popf
int
jl
pusha
xlat
and
mov
sub
push
loop
xchg
outsb
es
outsb
iret
sahf
movsb
lea
idivb
pop
add
cmp
out
sbb
sti
push
cmpsb
mov
pop
aad
mov
mov
dec
hlt
insl
aas
jecxz
push
lods
sub
inc
sbb
push
mov
jle
cmp
push
iret
loop
test
inc
cmp
dec
out
popa
shlb
inc
clc
or
icebp
imul
add
sbb
ret
cmp
repz
fstl
lods
aad
jge
xor
sub
fldcw
mov
in
xor
nop
sarl
arpl
repnz
cld
rorl
and
fiadds
fsubl
jns
mov
mov
and
clc
out
addl
leave
inc
fistps
inc
mov
xlat
xchg
ret
and
cmp
shrl
xor
pop
test
cmc
sbb
punpcklbw
pop
mov
adc
stos
pop
push
bound
loopne
push
jmp
push
xchg
in
movl
push
mov
or
or
inc
inc
das
or
push
sub
rcrl
mov
cmp
divl
scas
stc
filds
or
aad
frstor
xor
roll
xor
cld
mov
pop
sbb
scas
andb
and
sbb
scas
nop
negb
xorl
xor
scas
cmp
dec
push
loopne
loopne
pop
aaa
stos
push
icebp
out
fld
popf
mov
mov
movsl
xor
mov
or
outsl
push
outsl
ds
push
dec
icebp
into
out
sbb
fstp
push
dec
add
mov
in
fs
lcall
push
shrb
fnstcw
sub
xor
xchg
jae
jns
jg
popa
jae
push
sbb
sbb
xlat
inc
lods
xor
cmp
lea
out
jge
and
cmpsb
inc
in
insl
imul
cmpsb
cmp
mov
sub
jno
stos
lea
in
mov
fsub
ss
mov
bound
lret
rorb
das
outsb
int
jbe
in
mov
roll
mov
notl
imul
and
popa
add
nop
mov
adc
pop
push
aad
aam
mov
dec
inc
xchg
in
cmp
cltd
and
jmp
xor
push
int3
out
clc
outsl
xor
jecxz
ss
mov
loope
testl
in
pusha
addr16
jns
negb
xchg
dec
xchg
and
or
and
imull
mov
inc
aaa
mov
xchg
dec
rorl
or
sub
ret
mov
mov
int3
cmpb
repnz
cmp
jge
xor
aas
jecxz
jle
cmpb
jle
int
and
adc
insl
ja
cmp
out
test
mov
sbb
pop
cld
sbb
xor
scas
jle
popf
fiaddl
shrb
aaa
popf
xor
push
fdivrp
mov
mov
pop
sub
adcb
es
leave
or
inc
push
js
cltd
jbe
scas
out
add
sub
dec
push
pop
jge
outsl
jge
scas
or
data16
int3
add
mov
pop
cmp
jae
pop
mov
fsts
xorb
adc
adcb
push
les
ret
inc
aam
mov
pusha
jl
jnp
scas
aas
sbb
imul
xchg
mov
dec
sub
and
mov
hlt
ficoml
into
mov
bnd
shlb
mov
repz
mov
pop
loope
pop
pop
jle
sbb
xor
add
out
xor
push
adc
shll
aad
mov
cmp
push
in
mov
das
push
loopne
repnz
notb
jne
sub
js
test
pusha
ja
push
xor
and
cmp
lret
jge
jae
inc
out
xchg
out
imul
cmp
and
es
outsl
cmpsb
mov
mov
pushf
gs
cld
hlt
and
adc
pop
pop
imul
and
std
test
es
into
icebp
xlat
mov
aad
lret
jae
cmp
sub
inc
mov
pop
sbb
orb
adc
push
gs
imul
push
cld
xorb
jnp
xchg
cli
xor
inc
xchg
push
pop
ret
cmp
lods
add
clc
adc
int3
popaw
add
jns
je
sbb
add
stc
xor
cli
inc
mov
push
or
aaa
adc
imul
out
xor
daa
decl
sbb
outsl
divb
je,pn
movsb
inc
push
or
dec
loopne
fdiv
fwait
in
adc
test
dec
jecxz
push
xchg
pop
inc
addb
aas
xor
push
repnz
xor
aad
cs
mov
xor
and
fisttps
je
dec
xor
mov
inc
jno
shrl
lret
daa
cmpsb
or
jle
cmp
inc
dec
aaa
mov
or
pop
mov
mov
pop
dec
arpl
or
add
push
sub
insb
adc
xlat
push
into
ret
int3
into
insb
aad
dec
movsl
lcall
push
fistps
jge
pop
lock
pop
dec
cltd
cmpsb
out
xor
inc
sbb
stos
js
pushf
push
mov
pop
leave
xor
lret
dec
repz
loopne
pop
or
sahf
add
push
rorb
popf
into
cmp
sti
dec
popf
cmpsb
lret
scas
inc
xchg
imul
cwtl
incl
test
ret
aad
and
seto
push
movsb
xor
hlt
rolb
leave
pop
je
adc
adc
and
sub
or
fsubrp
lcall
push
lods
roll
lock
xchg
jmp
push
mov
inc
lret
lret
dec
lahf
ret
orb
mov
fdivrl
add
into
cld
add
into
mov
jno
and
adc
dec
fcomps
arpl
xorb
xlat
xor
fsubr
pop
lret
dec
ss
or
sub
push
mov
dec
loope
out
cmp
test
sbb
out
and
test
jo
ret
adc
jbe
jb
jge
dec
daa
repz
mov
sub
add
les
icebp
in
adc
cmpps
sub
test
scas
pop
inc
stos
push
lock
push
arpl
jnp
sahf
add
or
cli
push
sarl
xchg
mov
data16
mov
and
ror
or
mov
inc
inc
jge
imulb
in
pushf
xchg
add
rcr
adc
mov
lock
dec
jns
ret
scas
xor
cmpsb
jnp
adc
movsb
stc
cmp
ss
fnstsw
int3
out
or
rcrl
jl
lret
cmpsl
or
addr16
adc
cmp
out
shl
push
add
mov
stc
mov
popa
out
je
data16
jmp
repnz
hlt
mov
add
cs
pop
pop
push
jmp
cs
aad
inc
xor
fcmove
lods
cmp
in
cmpsb
in
add
add
sub
stos
fsubrl
xchg
aaa
inc
outsb
push
shrl
jge
ret
sbb
sbbl
push
call
sub
jne
pop
imul
fwait
cmpsl
xchg
sbb
xor
mov
and
aam
int
lret
movsb
inc
jne
pop
inc
fwait
or
fsubs
enter
xchg
xor
sbb
icebp
and
jg
push
xor
inc
and
aad
jae
fsubrl
mov
pop
pop
aas
leave
test
adc
sbbl
icebp
sbb
cmp
cmpsl
sbb
or
in
xchg
push
xor
fildll
mov
jb
inc
iret
in
mov
push
in
push
dec
in
nop
xchg
filds
hlt
sbb
lahf
fidivs
and
inc
inc
icebp
sbb
out
imulb
xchg
out
jo
inc
and
out
fidivrl
addl
out
xchg
mul
frstor
xchg
out
or
and
add
or
xor
shll
fs
mov
sub
cmp
pop
xchg
test
cmpsb
fstps
cwtl
out
inc
outsl
xchg
aas
add
std
sub
in
push
ss
fmul
popa
lahf
pop
jle
lea
adc
gs
inc
icebp
stos
pop
dec
jge
push
cli
or
sbb
mov
adc
sbb
pop
jp
cs
insl
cmpsb
adc
into
cmpsb
jle
outsb
dec
pop
sbb
push
clc
fdivr
mov
xchg
and
adc
xchg
ret
lret
aad
test
test
mov
in
sub
cld
je
mov
jbe
iret
push
inc
xchg
and
sub
cmp
lahf
cmpsb
jns
push
cmp
cmpsb
cmp
pop
mov
ds
cmpsl
pop
outsl
adc
in
inc
lret
push
imul
sbb
leave
jno
sbb
icebp
icebp
mov
gs
imul
ds
enter
int
fdiv
imul
outsl
jecxz
push
adc
loop
pop
sti
fcomps
mov
push
cmp
jle
xor
push
mov
ret
mov
xchg
negl
xchg
jno
pop
inc
cmp
ret
push
mov
sub
mov
jg
jl
scas
mov
out
lcall
jb
pop
aas
mov
xchg
addr16
fisubl
xchg
shlb
loopne
pushf
jne
inc
xchg
cwtl
and
sbb
fucom
adc
or
int
roll
xor
push
movsb
or
xor
outsl
clc
js
or
mov
scas
loope
xchg
mov
repz
pop
jbe
mov
cmpsb
mov
mov
ds
outsb
gs
or
xchg
int
repnz
test
jl
into
sbb
loope
movsl
cmpsl
test
xchg
lcall
jmp
shlb
pop
push
jae
dec
popf
dec
mov
mov
dec
cmp
es
mov
cld
mov
inc
mov
xor
mov
shr
sbb
adc
pop
push
imul
fwait
mov
daa
cmp
mov
jp,pn
nop
mov
cmp
mov
lock
inc
out
sub
sub
ds
jg
adc
or
mov
aad
push
xchg
insl
jne
cs
jne
nop
addr16
mov
fsubrs
js
enter
sub
adc
cmpsl
jns
gs
adc
and
jns
inc
test
inc
imul
addr16
mov
repz
sbb
popf
pusha
cs
cld
out
mov
ja
push
ljmp
mov
loope
out
add
imul
int
icebp
push
nop
jle
mov
sbb
xchg
cmp
lcall
mov
xorl
xchg
jno
or
add
sbb
and
outsb
mov
mov
xor
mov
jmp
mov
push
sbb
ret
mov
jae
fisubs
stc
fmull
repnz
sbb
add
cltd
lds
sbb
in
sbb
sub
push
movsl
xor
mov
xchg
cmp
mov
pop
loopne
adc
das
mov
subl
pop
xor
inc
pop
fildll
jecxz
xor
mov
mov
sarl
inc
and
sbb
jge
sub
fcoml
sub
adc
sar
fldl2e
dec
xor
adc
rcr
jne
sub
mov
jp
shrl
aam
mov
aas
gs
fstl
je
pop
hlt
mov
cmp
add
sarl
adc
xor
sarb
push
mov
shl
inc
adc
mov
popa
adc
sub
pop
out
out
jns
push
int
jne
xchg
push
xlat
pop
inc
aam
cmp
mov
push
cmp
adc
xlat
xchg
insb
pop
test
lods
data16
mov
mov
out
xchg
inc
adc
movsb
cmpsb
shrb
push
add
icebp
bound
out
xchg
bound
inc
rorb
push
cmp
sbb
sub
dec
pusha
pusha
stos
jb
mov
ret
mov
lea
ret
outsb
mov
gs
mov
xlat
mov
push
xchg
int3
lods
dec
and
pusha
mov
jne
sahf
pop
and
push
mov
sbb
mov
test
inc
pop
in
leave
iret
addr16
cs
adc
scas
cmp
cmpsl
into
lock
cwtl
loopne
push
fidivrs
adc
pop
mov
std
test
push
mov
mov
imul
add
sti
mov
dec
cmp
shll
mov
js
popa
std
shll
repnz
inc
test
jp
decl
stc
popa
int3
sbb
movb
push
inc
mov
mov
fdivl
addr16
pop
cltd
shl
push
inc
xor
scas
loopne
cmc
dec
fidivs
rolb
les
add
test
leave
into
in
mov
imul
repz
jnp
and
xchg
inc
rclb
mov
sbb
and
jge
repz
leave
stos
pop
xor
inc
js
out
and
fwait
fs
jo
sbb
lcall
scas
mov
ja
cmp
cltd
ja
leave
lret
push
std
in
mov
add
add
mov
ljmp
icebp
dec
sbb
xchg
xchg
out
iret
addl
fwait
jg
cltd
ds
lcall
stc
popf
sbb
lret
pop
adc
cmpl
cmpsl
jecxz
subb
mov
cmpsl
cltd
leave
ss
test
pusha
or
xchg
inc
mov
mov
shlb
enter
mov
int
movsb
enter
adc
sbb
test
mov
and
sub
aam
cmp
and
mov
in
lret
xchg
mov
or
jnp
inc
dec
lcall
inc
adc
xchg
sub
mov
sahf
sub
xor
pop
push
loope
push
adc
mov
pop
repz
mov
or
stos
pop
mov
mov
push
lahf
xchg
cmp
inc
push
imul
fidivs
les
cmpsl
inc
xchg
xchg
icebp
xor
cltd
sub
cwtl
pop
mov
push
pop
call
ljmp
aas
pusha
roll
imul
inc
clc
inc
inc
jecxz
lock
movsb
outsl
mov
mov
outsb
sbb
adc
push
stos
or
scas
shlb
mov
cmp
xlat
orl
nop
rorl
pop
das
dec
inc
movsl
inc
or
mov
lds
hlt
push
mov
adc
sbb
f2xm1
insl
ljmp
mov
inc
inc
inc
or
loopne
jmp
test
fcompp
data16
popa
mov
dec
push
movsl
xchg
ret
inc
loopne
mov
dec
shll
mov
bound
inc
lods
sub
jmp
xchg
cwtl
test
pop
cmp
sub
mov
pop
cmp
pop
mov
pop
stos
scas
jle
inc
clc
xchg
imul
arpl
mov
dec
in
les
scas
adc
mov
cmp
inc
mov
push
jg
lods
lock
mov
cmp
in
ljmp
jl
and
insb
and
cmp
ljmp
xchg
ljmp
push
mov
iret
dec
test
mov
xorl
adc
lret
xor
imul
data16
subb
and
xchg
or
sbb
ja
xchg
out
sbb
cmp
sbb
dec
push
or
sub
divl
mov
lds
rcll
jo
lahf
insl
aaa
cmp
loope
inc
leave
mov
bound
adc
int3
test
push
push
in
xor
sti
insb
loop
sti
testl
inc
jp
inc
outsl
mov
adc
dec
test
mov
dec
fwait
sti
lcall
insl
roll
outsb
adc
xor
repnz
or
fcmove
xlat
clc
dec
ljmp
ljmp
loop
in
sarb
call
in
xchg
stos
pop
outsl
add
cmpsl
repnz
lds
out
rorb
push
mov
sbb
pop
mov
aaa
imul
sbb
out
aas
fcmovnu
or
cmp
sbb
push
lret
sahf
hlt
xor
clc
loope
add
mov
arpl
mov
lock
pop
jmp
cltd
subb
jnp
jg
daa
lds
add
rcl
mov
shl
dec
inc
sub
sbb
rcl
push
loope
cmp
lock
test
js
dec
or
mov
lret
into
in
iret
lahf
dec
negb
in
mov
or
xchg
loope
iret
jae
mov
into
push
pop
dec
cmp
mov
xchg
push
sbb
pop
inc
outsb
dec
xchg
cmc
sbb
lods
or
sti
fisubrs
test
dec
pusha
call
dec
shll
jnp
or
mov
xor
popa
aas
inc
in
fadds
pushf
xchg
pop
pushf
mov
out
adc
shrl
loopne
je
cs
outsb
sub
and
adc
pop
icebp
mov
lock
test
push
std
popf
insl
mov
jne
pop
sub
pop
add
dec
jecxz
ret
sbb
nop
gs
jb
dec
lahf
dec
je
mov
or
mov
push
mov
mov
hlt
jg
ret
test
out
cld
ret
sbb
data16
mov
jno
dec
inc
and
add
popa
cmp
lock
cmp
fucomi
xchg
dec
fstpl
mov
shlb
push
lea
add
sbb
iret
ret
in
xchg
cmp
xor
inc
push
mov
imul
cmp
jae
ds
xchg
cmp
ret
pop
inc
test
and
xor
lock
jmp
iret
jg
rcrb
call
xchg
cwtl
sbb
stc
popa
mov
cli
and
filds
ljmp
data16
add
fs
imul
ss
pop
idiv
mov
mov
out
sbb
inc
cmpsl
inc
cltd
lcall
scas
add
sahf
xor
and
cmp
mov
push
fstenv
rcl
int
pop
les
jo
jbe
sbb
jecxz
mov
sub
mov
and
cld
xchg
pushf
jge
pop
decb
js
xchg
fistpl
movsb
or
jle
sbb
add
and
les
ror
bound
xor
lods
jb
xor
xchg
outsb
sarb
push
xchg
out
adc
fldt
pop
mov
mov
sbb
stc
inc
lret
std
iret
adc
sub
pop
cmp
in
and
in
repz
enterw
mov
xor
dec
data16
cmpl
nop
or
jle
sahf
sub
stos
xor
sti
push
adc
fmul
mov
mov
imul
in
sbb
push
outsl
jecxz
cltd
mov
push
push
sbb
out
enter
jge
cmp
inc
lods
jge
testb
push
push
mov
mov
inc
sub
loop
or
xchg
pop
xchg
mov
shr
andl
test
pushf
xor
cmpl
ret
sub
pusha
inc
dec
jmp
sub
push
rclb
pop
push
push
push
addr16
cwtl
sub
fiaddl
sbb
call
or
xor
fs
test
mov
imul
outsb
xchg
and
jae
fwait
aaa
lahf
outsb
dec
pop
sbb
push
sub
enter
mov
mull
stos
popa
fsubl
popa
repnz
loop
sbb
test
aad
pop
in
mov
xlat
add
test
pop
dec
mov
sub
cs
into
mov
cmp
adc
out
movsb
into
scas
lock
add
pop
shrl
xor
sti
bound
arpl
gs
dec
in
pxor
aam
adc
mov
repnz
and
sbb
addr16
add
insl
roll
xor
sbb
dec
dec
adc
dec
bound
out
push
jae
adc
xchg
or
mov
pop
cmp
fstl
mov
and
mov
pusha
sub
push
test
mov
mov
das
cmpb
faddl
xchg
push
cmp
in
movsl
das
out
fidivrl
gs
je
add
or
sub
lret
js
xchg
loopne
push
sub
test
sbb
cli
mov
xchg
xor
mov
add
cmp
mov
nop
cli
arpl
fisubrs
enter
lcall
out
jecxz
iret
mov
mov
push
out
andb
decl
fcompl
mov
jg
rcll
pop
adc
mov
mov
add
int
push
fucomi
push
pushf
jmp
jge
shrl
add
lea
out
add
imul
sub
jo
jns
xchg
scas
sbb
js
mov
shll
lret
push
inc
fstps
dec
nop
lods
mov
dec
sarb
scas
push
or
push
scas
pusha
in
testl
sbb
rcrl
jle
out
mov
dec
sub
lahf
mov
pop
out
das
popa
ret
mov
fldt
xchg
dec
add
mov
enter
fcomi
cmpsl
scas
lods
lds
dec
dec
or
xchg
js
loop
push
lds
jmp
jecxz
sahf
lret
std
sub
or
insl
addr16
imul
sbb
lea
pop
fucomip
adcl
inc
es
pop
aad
push
leave
fsubs
push
mov
iret
sarl
mov
jmp
cmc
lahf
jae
pop
lcall
fsub
lahf
addr16
mov
popl
pop
imulb
lcall
rcll
repnz
outsl
inc
std
das
ret
mov
cmpb
aad
mov
push
inc
outsb
xor
iret
pusha
leave
cmp
loopne
dec
or
lea
addr16
stos
jg
jmp
dec
push
xchg
push
adc
or
aas
xor
push
dec
stos
inc
push
mov
and
jge
push
push
in
adc
xchg
test
xchg
cltd
push
jecxz
sbb
fcomip
fstl
ja
xchg
cmpsl
lahf
stc
sbb
push
inc
ss
inc
loopne
sub
jo
and
addr16
jle
push
notb
insl
sub
in
mov
dec
mov
leave
orb
push
aam
out
cmpsb
inc
sub
into
subb
mov
es
ror
inc
pop
fimull
dec
mov
shll
mov
cmp
ret
dec
adc
leave
jge
mov
inc
das
mov
jo
xlat
lret
ret
jl
fnstsw
mov
cmp
xor
mov
sbb
lret
and
out
mov
mov
and
out
into
cmp
dec
scas
push
sub
sub
aam
js
outsl
inc
mull
scas
andl
aaa
mov
shlb
sbb
pop
ss
xor
add
push
add
fisubs
sub
pop
push
inc
std
cmp
enter
inc
mov
inc
testb
push
xor
into
cmc
pop
sbb
test
cmpsl
int3
mov
cltd
push
int
loope
sub
jbe
push
movsb
in
or
repnz
mov
mov
subl
mov
repz
aad
push
nop
adc
push
test
or
push
stc
mov
outsb
dec
dec
dec
js
out
dec
mov
adcl
js
sub
add
rorl
push
xchg
icebp
push
in
jp
mov
loop
lret
or
and
cmpsl
cmpsl
pop
cs
addl
xor
fwait
shrb
inc
ja
or
cmpsb
add
pop
push
mov
push
dec
adc
pop
push
lock
hlt
fucomp
imul
xchg
cmp
cltd
sbb
sub
add
lea
jo
test
daa
fsubr
lods
pusha
fcomp
pop
insl
or
gs
movsl
mov
inc
nop
sbb
out
pop
icebp
les
adc
inc
sub
jge
xor
les
pop
scas
in
test
cmc
inc
sub
leave
xchg
and
fsubrs
xchg
sbb
jmp
fwait
clc
pop
mov
xchg
mov
xor
sub
dec
into
aad
repnz
xchg
test
fnstenv
mov
or
roll
inc
cld
jne
push
mov
loope
cmpsb
lods
mov
mov
ret
sti
loopne
mov
dec
cmc
js
outsb
stos
gs
xchg
rcrl
stc
push
shl
push
js
jp
sbb
rclb
cmp
or
pop
sbb
mov
mov
dec
insl
mov
dec
arpl
aam
in
cli
in
out
cmp
pop
outsl
and
movsl
repz
dec
xchg
xchg
lods
std
cmpsb
shlb
or
iret
or
and
bound
mov
js
loopne
jle
aam
cmpsl
outsb
iret
aad
cmpsb
sti
adc
or
xchg
lahf
lret
xchg
mov
mov
ljmp
push
xchg
addr16
ss
mov
lock
mov
push
cmp
popa
push
xchg
icebp
push
mov
mov
sub
test
rolb
mov
fwait
inc
or
rorb
sbb
sbb
and
sbbb
push
and
ds
jb
add
jmp
int
or
jbe
add
xor
xchg
scas
jmp
ss
inc
lods
jbe
rolw
lcall
cmp
aas
scas
ret
pop
nop
clc
jmp
add
sahf
stc
rorl
xor
mov
cmp
rcrl
jns
mov
xor
popa
mov
test
sub
push
xchg
xchg
mov
mov
sub
jge
mov
sub
ljmp
and
in
xor
fsts
push
lcall
xor
add
xchg
scas
adc
mov
leave
fsubrl
sbb
xchg
mov
mov
cmp
test
int3
jno
imul
cmc
or
pop
push
jle
xchg
arpl
mov
cld
notl
jae
sbb
aaa
jge
sub
into
jno
jmp
mov
pushf
imul
jae
dec
stos
mov
ja
mov
test
pop
xor
adc
mov
clc
xchg
add
pop
mov
test
lods
neg
bound
xchg
sub
sarl
inc
stos
sub
leave
ret
test
int3
pusha
stos
movsb
adc
push
push
cs
mov
imul
pop
in
dec
adc
mov
cwtl
push
movl
stos
outsb
and
jp
mov
lds
xor
jp
cmp
dec
ja
test
adc
orl
ja
dec
jbe
sbb
jl
fstpl
int
test
fdiv
out
insb
xlat
jns
loopne
dec
xchg
or
repz
icebp
es
leave
xor
cmp
imulb
cmp
inc
inc
xchg
xor
push
cmpsl
pop
mov
jp
add
push
insl
jmp
xchg
arpl
or
xor
adc
mov
aas
mov
push
aad
mov
cmc
mov
mov
mov
jge
popa
push
xor
or
gs
not
insb
fcmovnbe
repz
aas
pop
mov
jp
mov
out
sbb
loope
cltd
xchg
int3
test
sbb
flds
arpl
lds
sub
mov
jo
mov
imull
je
fmul
inc
xchg
scas
es
mov
push
cmc
ja
pop
out
xor
test
inc
xchg
dec
aas
aas
xchg
call
loope
ja
fcomi
clc
and
sbb
cmp
cmp
rorb
mov
insb
dec
int3
repnz
push
lea
negb
adcl
cmp
pop
test
push
dec
jecxz
incl
xchg
sti
mov
cli
pop
inc
mov
mov
sbb
mov
mov
out
rcr
fstps
jb
or
mov
mov
mov
mull
cmpsb
xor
jbe
imul
ret
test
fisubl
adc
mov
lods
movsl
inc
fmul
sahf
mov
sahf
or
pop
in
jo
addr16
lea
insb
or
and
cmp
out
mov
daa
imul
enter
lret
dec
mov
or
mov
outsb
pusha
cmp
inc
jne
pop
fistpll
mov
das
stos
mov
negl
or
adcl
mov
adc
repz
mov
nop
pop
sti
aaa
add
push
pop
data16
and
xchg
and
dec
arpl
fistpl
pop
inc
mov
inc
add
sbb
in
out
mulb
call
or
loopne
clc
mov
jb
push
bound
cltd
imul
das
popa
inc
xlat
cmp
xor
fcmove
sbb
mov
jge
push
cmc
movsb
test
shlb
mov
jno,pn
fdivrp
stc
pushf
dec
push
add
bound
les
or
jmp
in
ja
jne
mov
enter
cmp
and
sbb
mov
dec
movl
cld
arpl
fstl
aas
push
inc
adc
ror
cli
ret
dec
or
sub
fstpt
and
das
sbb
fimuls
pop
cmp
add
data16
imul
ret
jo
gs
fucomip
sbbl
mov
mov
mov
pushf
inc
bound
inc
cmp
push
sbb
mov
les
mov
push
movsb
out
jne
cli
sbb
inc
dec
mov
rclb
jb
cmpsb
repz
mov
sbb
pushf
negl
fdivs
sbb
xchg
stos
inc
jae
scas
aas
mov
inc
es
adc
lcall
jne
sbb
cwtl
outsl
adc
loopne
negl
dec
sub
movl
pushf
jnp
outsl
add
cs
xchg
out
adc
out
push
jmp
mov
dec
xlat
sarb
popl
xor
push
ja
outsl
andl
popf
lods
and
inc
push
xchg
adc
scas
or
loopne
mov
xchg
fsubs
mov
ret
pop
test
adc
jns
dec
shlb
clc
loopne
test
mov
mov
jb
xor
jecxz
fcompl
popf
in
mov
push
push
jno
mov
mov
inc
mov
sbb
test
or
xor
or
das
lea
daa
sbb
cwtl
fwait
dec
sbbb
jmp
push
fwait
adc
fistl
add
popf
push
add
push
std
adc
fwait
iret
dec
incb
mov
sbb
xor
fwait
cmpsb
test
les
mov
adc
push
dec
dec
jne
adc
daa
dec
and
xlat
fiadds
ficoml
data16
movsb
push
repz
lods
js
in
or
faddp
or
dec
cmpl
jnp
test
xchg
pmullw
add
jl
mov
mov
mov
mov
cmp
inc
fcomps
imull
adc
xchg
add
inc
jge
or
gs
aaa
das
mov
ficomps
push
ja
xor
shl
je
in
out
loope
in
lret
test
out
shlb
test
lods
add
ror
jge
outsb
lds
or
inc
add
enter
aad
and
rorl
cld
pusha
push
push
and
lret
xchg
sbb
cmpsb
push
mov
fs
inc
imul
movsl
inc
push
lods
and
andl
cmc
mov
lock
xor
shll
pusha
testl
inc
shll
xchg
mov
add
push
or
hlt
inc
loope
bnd
dec
xor
jg
fdivs
xchg
mov
lods
pop
xchg
mov
fists
idivb
mov
repz
xchg
xlat
shrb
adc
adc
jl
lds
xchg
nop
jb
mov
insb
xchg
popf
mov
mov
std
int3
mov
aaa
pop
mov
xor
mov
pop
stos
stos
outsl
insb
std
jno
push
inc
out
test
push
pushf
out
sub
ds
jbe
xor
add
mov
dec
mov
ret
sub
cmc
ds
pop
xchg
mov
jl
ds
mov
cmp
sbb
cmp
jns
call
inc
and
pushf
push
daa
cmp
mov
jmp
inc
ret
stos
mov
xchg
pop
mov
in
out
pop
rcrl
adc
dec
test
out
add
enter
mov
jb
movsl
sarb
loopne
mov
loope
and
dec
mov
add
mov
cmp
hlt
faddl
xor
sbb
jmp
cmpb
mov
inc
xchg
sub
mov
loopne
inc
sub
sub
jp
stc
addr16
dec
icebp
outsl
and
cmp
mov
inc
cmpsb
pop
adc
ret
cmpsb
ljmp
xor
xchg
rcll
push
mov
je
xchg
inc
sti
xor
and
cltd
pusha
mov
and
movsb
dec
dec
cmp
jno
pop
mov
mov
add
mov
cltd
call
std
pop
jp
cmc
sbb
dec
xor
push
push
arpl
xor
lret
cmpsb
out
lea
fs
jne
pop
call
pop
mov
adc
in
fnstenv
cli
ljmp
daa
clc
insb
in
imul
cltd
xchg
fsubl
lods
sbb
xchg
mov
mov
cmp
push
cmp
out
mov
aas
mov
sbb
cs
call
nop
fdivs
mov
cwtl
sub
cmp
push
test
shlb
sbb
stc
cmp
jl
hlt
or
dec
lds
xchg
repnz
rcrb
cmpsb
cwtl
cltd
pusha
cld
inc
sbb
mov
push
push
mov
cmpsb
cmp
or
pop
ret
in
dec
sbb
sar
movb
mov
lea
rorl
roll
mov
pop
pop
daa
popa
or
cmpb
push
lahf
mov
ja
int
dec
sbb
test
mov
cmp
imul
or
mov
popf
sahf
add
xchg
sub
push
call
pop
cld
jl
xor
dec
or
mov
decb
and
lea
ret
add
push
js
aad
stc
cli
in
movsb
mov
dec
daa
push
ljmp
jp
lods
jnp
cmp
mov
or
ret
jb
enter
sbb
lods
outsl
adc
stos
fstl
pop
jnp
inc
jae
fwait
incb
mov
mov
pop
sub
cld
sub
cltd
mov
sbbb
rolb
out
and
vpcomud
xchg
xor
fcomi
mov
adc
in
ljmp
clc
sub
and
and
insb
jnp
push
mov
sbb
sbb
outsl
test
mov
inc
add
addb
mov
sub
clc
fs
aaa
out
xchg
fstps
bound
outsb
mov
jg
fld
ljmp
fstpl
test
and
bound
fiaddl
add
inc
or
push
dec
dec
aas
js
push
out
ljmp
movsl
cmp
inc
cmp
shrl
sbb
sub
ret
insl
xor
jnp
mov
mov
lret
inc
mov
dec
and
icebp
ja
push
fisubrl
lret
push
aaa
adc
mov
sub
adc
jle
repz
jae
cmp
or
int3
jb
xchg
sbb
xor
pop
cmc
mov
dec
daa
and
xchg
pop
mov
push
in
xchg
in
lock
ss
repnz
push
aam
mov
pop
jmp
xlat
bound
xchg
cmp
jge
and
out
ja
xlat
adc
pop
ret
jmp
or
push
scas
sbb
xor
scas
adc
orl
and
aad
and
push
push
icebp
xchg
cmp
cld
mov
and
sub
fistpll
xchg
adc
addl
sub
jmp
dec
mov
gs
loope
cmp
dec
mov
in
lods
in
fdivrl
int3
scas
adcb
mov
xchg
and
mov
xorl
stc
adc
cmp
or
jbe
sub
cmpsl
test
mov
outsb
mov
stos
sub
sub
push
add
mov
shl
int
stos
jns
mov
aad
ret
adc
les
or
arpl
ljmp
mov
das
xor
fcomp
cmp
fcoml
cmpsl
jmp
repnz
popf
lds
mov
mov
pop
cmp
faddl
adc
pop
popa
loope
mov
xor
popl
dec
fildl
repnz
fs
jne
sbb
dec
jno
scas
xor
movsl
test
and
in
stc
data16
push
ss
jmp
pop
call
mov
xchg
cmp
sti
push
aaa
push
addr16
pushf
xchg
inc
cltd
rcll
aad
push
repz
xchg
in
or
and
inc
mov
xor
pop
ret
xchg
mov
bnd
ljmp
movsl
ror
pop
cmp
or
scas
or
or
adc
in
ror
adc
pop
ret
add
add
fidivrl
ss
xchg
sbb
and
mov
inc
aas
pop
cmpsb
or
mov
pop
sahf
pushf
mov
imul
mov
xchg
nop
xor
jge
addr16
xor
and
cmp
rcrb
xchg
ret
fdivl
dec
mov
or
mov
xor
pop
push
cmp
add
aad
xor
mov
ficomps
pop
js
jl
outsb
leave
das
dec
xchg
add
bound
and
jecxz
mov
lahf
sub
and
cmp
loope
hlt
push
cltd
push
and
pushf
dec
and
movsb
jmp
ja
lahf
jae
movl
je
jmp
or
sub
dec
js
int3
ret
pop
push
add
pusha
jl
aaa
lock
mov
pop
clc
mov
loop
cmpsl
and
repz
dec
dec
xor
ror
dec
icebp
aad
std
or
mov
popf
sub
sub
insb
addr16
xchg
int
dec
dec
sub
rcll
pop
fisttpll
add
test
dec
mov
mov
les
jmp
xor
inc
addl
or
mov
xchg
scas
fcomps
pop
mulb
mov
sub
add
stos
sbb
cmpsl
or
daa
or
fs
push
cmp
inc
push
imul
bswap
rcr
add
test
sub
cltd
jecxz
dec
out
dec
or
sahf
mov
mov
mov
push
xor
adc
bsf
int3
shlb
inc
ljmp
mov
dec
mov
push
out
add
lods
popa
popf
in
add
imul
jbe
jl
jp
lret
imul
in
lret
imul
dec
shl
pusha
xor
dec
xchg
sbb
cmp
mov
je
dec
out
fstl
call
hlt
test
fdivs
daa
aaa
cmp
pop
push
inc
sbb
push
call
fisubs
jo
and
imul
stos
roll
lods
loop
dec
adc
pop
cmpsl
iret
fwait
push
push
out
xchg
fsubrl
inc
test
dec
inc
push
jle
movsl
leave
dec
pop
cmp
add
mov
les
jmp
or
loopne
sub
xlat
mov
dec
dec
and
rorb
gs
lock
add
leave
mov
mov
idivl
push
jne
mov
mov
cmp
mov
stc
xor
dec
stos
cmp
dec
fwait
in
out
fstl
mov
aas
fldenv
popa
jo
movsb
imul
xor
into
add
add
pop
cmp
int
nop
decb
test
dec
mov
mov
test
lods
popl
mov
stos
mov
inc
push
adc
push
mov
movsb
pop
add
sti
jecxz
mov
fildll
loope
movsl
sub
add
push
mov
xor
or
in
mov
clc
popa
cld
mov
mov
lods
ss
cmp
mov
test
daa
jno
mov
mov
cmp
sub
and
push
pusha
pop
fiaddl
and
inc
add
pop
out
jle
dec
outsb
test
cmp
and
pop
fistpl
dec
insb
pop
push
lods
aad
sti
repnz
and
dec
mov
and
mov
pop
leave
inc
jl
les
lret
push
inc
imul
dec
cld
push
fcompl
lock
nop
ret
inc
dec
cmp
inc
ds
out
mov
adc
lods
idivl
loop
sub
mov
fdivl
sti
fdivrp
outsl
pop
lret
pop
into
push
leave
ret
in
and
inc
push
inc
out
push
adc
inc
or
insb
pop
dec
mov
fcomps
adc
pop
push
aam
add
pop
jnp
inc
pop
popf
fsubs
roll
jns
jp
push
rcrb
adc
sub
int
outsl
cli
and
or
ror
nop
out
test
sti
cmp
add
mov
push
push
stos
iret
or
dec
add
shlb
insl
mov
mov
ja
arpl
mov
shlb
loop
stos
je
ja
pusha
mov
ret
test
xor
mov
mov
add
pop
rcl
jno
push
enter
sub
xchg
mov
sbb
das
ret
xchg
cmpsl
mov
or
jns
lock
daa
cltd
outsl
pop
add
bound
inc
pop
insl
imul
push
in
stos
jns
dec
xchg
fs
dec
mov
xchg
mov
lods
subl
test
jne
push
jecxz
xchg
imulb
xchg
pushf
inc
mov
dec
sub
xchg
pop
dec
call
push
pop
jmp
dec
jo
sbb
inc
arpl
push
pop
inc
sbb
jno
push
sbb
mov
pusha
push
mov
imul
scas
hlt
dec
cli
ffreep
addr16
loope
mov
loop
jl
pop
jecxz
dec
xchg
xchg
push
push
sub
jo
sbb
mov
pop
stos
les
test
dec
or
push
ss
adc
add
cmp
and
enter
cwtl
push
outsl
rcr
daa
cmp
daa
aas
sbb
mov
pushf
int3
pop
pop
cmpsl
mov
lds
js
pop
fcoms
sbb
nop
jb
mov
mov
inc
xchg
dec
stos
out
dec
push
mov
lret
ss
jecxz
shrl
mov
gs
test
push
xchg
jns
or
lcall
xchg
out
cmp
jne
test
popf
inc
clc
mov
mov
sbb
cmp
out
jl
int
mov
sub
xor
push
xchg
pop
push
mov
pop
mov
mov
push
stos
dec
addr16
enter
jle
xor
sub
testl
or
arpl
test
mov
add
cmp
pop
jne,pn
pop
nop
shll
inc
mov
adc
arpl
xlat
add
sti
shl
shrb
sub
daa
bound
push
xchg
int3
xor
clc
imul
out
xor
jmp
pop
inc
xor
jae
inc
rcrl
data16
std
jp
mov
mov
and
adc
mov
pop
pop
aad
loop
mov
dec
pop
rclb
xchg
rclb
aas
pop
imul
lods
imul
adc
incl
cli
or
sbb
int
pop
mov
popa
in
push
xchg
clc
jno
push
fwait
mov
nop
ljmp
test
daa
aas
movsb
pop
fsubrs
adc
push
ret
xor
push
loope
cmp
sbb
roll
pusha
sbb
cli
ret
jae
mov
xchg
repnz
mov
mov
aad
mov
push
xlat
pop
and
fs
fimull
adcl
leave
jp
out
or
js
adc
leave
subb
mov
test
push
lcall
in
or
bound
movsl
cld
cli
lea
or
test
cmp
fnstenv
in
cmc
pop
xchg
jp
cmc
enter
xor
iret
jg
mov
inc
test
pop
xor
jbe
imul
mov
movq
enter
and
xor
popa
aad
scas
push
or
mov
lea
push
and
cwtl
inc
and
ret
push
push
jmp
cli
push
das
ficomps
call
pop
push
std
xorl
insl
inc
sub
sarb
push
sbb
call
cmpsl
sarl
lret
mov
push
pop
fcomps
into
imul
inc
cmp
aas
lahf
cld
add
rorl
xchg
mov
jg
inc
das
xlat
or
pop
scas
fidivrs
jmp
pop
jbe
data16
rorb
out
jbe
and
sub
inc
test
push
add
call
mov
pusha
out
or
pop
sub
out
xchg
repnz
movsb
mov
push
sti
mov
es
dec
call
inc
push
push
gs
push
mov
and
pop
cli
stos
adc
lret
sub
sub
mov
sub
inc
inc
jnp
rcll
and
les
fldt
inc
dec
inc
mov
jb
mov
jmp
cltd
jl
add
faddl
cmpsb
mov
add
add
xor
pop
push
js
loopne
push
sub
insl
outsl
leave
pop
xchg
leave
fcoms
call
mov
lods
mov
push
mov
loope
hlt
sub
jbe
jmp
pushf
aas
scas
pop
inc
xchg
mov
popf
inc
or
out
icebp
sub
mov
push
and
aaa
xchg
dec
xchg
iret
fistl
dec
sbb
fistpll
inc
and
inc
push
jnp
fidivrl
adc
dec
mov
push
dec
es
pop
rolb
lods
add
push
sub
jge
add
ja
xchg
or
mov
je
pop
aaa
xchg
push
addr16
orl
jno
fildll
mov
mov
out
push
cmp
jp
std
pop
add
mov
mov
pop
add
loop
not
xor
dec
ficomps
in
icebp
outsb
cld
jb
push
fcompl
push
sbb
sub
cwtl
push
dec
sahf
into
aad
jle
pop
pop
jmp
mov
data16
fdivrs
push
or
mov
pop
jae
inc
add
test
push
into
dec
mov
cli
jle
mov
icebp
cmpl
mov
cmp
cld
test
stc
push
inc
sub
xorb
icebp
push
inc
subl
sub
jp
lock
fidivrl
jle
incb
pusha
fsub
bound
sbb
aaa
sbb
ja
call
insl
adc
adc
cmc
les
lahf
mov
jg
nop
or
inc
mov
fists
adc
mov
lock
aad
stc
stc
insb
pop
outsb
or
jmp
xorb
sub
sti
jg
jp
pop
lret
lock
adc
movsl
mov
pushf
and
xchg
outsb
cmp
loop
das
mov
out
iret
add
mov
aaa
pop
adc
jne
sbb
pop
sbb
lds
sbb
into
and
jp
jno
push
mov
fnsave
mov
add
scas
fnstenv
adc
and
mov
mov
or
cmc
cwtl
inc
mov
mov
sub
aam
shll
jl
call
add
sahf
sbb
das
fs
rorb
inc
or
mov
push
pushf
or
cld
sub
test
mov
xchg
movsb
jbe
jp
jbe
mov
pop
jmp
pop
stos
test
fimuls
test
subl
shl
xor
xor
out
dec
clc
xchg
push
imul
loopne
movl
arpl
cmp
mov
push
add
sbb
add
test
scas
rcrl
cmpsb
sbb
lcall
icebp
lods
pop
sbb
xchg
cltd
xor
adc
movsb
dec
mov
imul
dec
push
xor
in
mov
repnz
in
fmuls
in
jge
ja
movsb
rclb
mov
bound
imul
xchg
pop
and
fwait
and
popa
sbb
mov
push
das
popa
xor
popf
inc
cs
push
js
jge
testb
mov
movsb
sarl
xor
incl
xor
xchg
pop
dec
fs
je
lret
xchg
mov
pop
lods
js
jmp
mov
cltd
pop
pop
lcall
cmp
in
add
testl
add
xchg
xchg
jbe
xchg
pusha
mov
push
adc
stos
sbb
sub
orb
jno
lahf
mov
fisubs
callw
adc
pop
sbb
out
or
mov
or
scas
xor
je
mov
pop
dec
pop
fmull
js
cmp
ret
xchg
dec
fldcw
mov
pop
or
push
inc
icebp
fnstenv
fdivs
xor
add
jnp
pop
imul
rol
xor
push
adc
jp
jae
and
sub
adc
adc
shl
fwait
inc
cmpl
xchg
jb
push
push
mov
push
aaa
xchg
or
pop
inc
scas
int3
lcall
stos
lock
sahf
jecxz
fidivl
addr16
dec
xor
inc
cmp
jo
pop
mov
xchg
repz
ror
andl
mov
call
in
test
sub
mov
int
in
gs
jmp
out
loopne
add
cltd
cmp
lcall
sarb
pop
mov
jge
sbb
pop
rcrl
inc
cld
in
dec
sahf
std
ret
push
lahf
test
lret
out
insb
in
das
push
lods
pop
ljmp
and
xchg
ljmp
mov
cld
nopl
xchg
dec
mov
movsl
push
mov
xchg
xor
cs
rcrl
insl
adc
or
in
jcxz
inc
filds
dec
enter
push
fucom
test
xchg
js
popf
mov
aad
int3
je
pop
pop
pop
or
iret
cwtl
outsb
test
sub
mov
push
xlat
mov
enter
lds
mov
test
inc
mov
movsb
lods
mov
sbb
mov
scas
dec
aad
cmp
arpl
mov
out
jmp
adc
push
pop
dec
stos
adc
out
loope
mov
push
scas
je
xor
arpl
stos
jbe
pop
sbbb
sub
shlb
lods
jnp
push
adc
dec
sbb
pop
xchg
and
and
das
sbb
mov
out
testb
pop
call
aam
stos
xor
xchg
orb
xchg
sbb
push
ror
push
mov
rcl
jbe
sbb
iret
push
aaa
xchg
xor
in
and
test
ds
sbb
pop
inc
sbb
call
mov
repnz
leave
mov
cmpsl
jno
sbb
inc
sbb
xlat
mov
sbb
mov
jbe
add
jmp
bound
ds
pop
loope
mov
jnp
pop
jb
mov
fstp
jno
hlt
sbb
jg
outsb
push
sbb
pop
aad
into
ds
mov
fnstcw
mov
adc
adc
adc
shll
adc
fcoml
stc
mov
cwtl
mov
shrl
cltd
testl
loop
push
pop
cltd
xor
push
out
call
or
or
imul
mov
stos
pop
or
xchg
testb
jge
call
sbb
inc
dec
dec
dec
cli
mov
les
out
push
leave
sbb
push
mov
inc
lcall
adc
mov
xchg
test
sbb
jae
sub
mov
call
xchg
mov
mov
mov
mov
sbb
loop
or
aas
vpsubsb
add
xor
mov
xlat
cli
into
es
adc
cmp
ret
das
dec
pushf
loopne
movsb
daa
sub
rorl
mov
pop
aam
xchg
jge
dec
pop
add
xchg
movsb
inc
sbb
es
cmpsb
pop
adc
std
call
and
pop
loop
sbb
add
xchg
pushf
push
fwait
sbb
push
or
push
mov
mov
xorb
fldenv
mov
cmpsb
aad
cmp
jge
xor
add
repnz
sub
and
xchg
imul
ljmp
imul
push
outsl
pop
or
clc
and
sbb
adc
lea
dec
mov
jg
ret
cmp
aas
and
shrb
sbb
and
sbb
push
fisttpll
cmp
mov
aad
aas
int
call
mov
mov
jle
sub
mov
loopne
stos
outsb
cmpb
fbld
sbb
sbb
push
fnstcw
pop
xchg
sti
loope
test
fisttpll
dec
out
outsl
ja
xchg
imul
mov
push
repnz
jmp
add
or
int
dec
pop
out
cmp
fmull
shlb
repz
fs
push
inc
jmp
inc
mov
movsl
gs
push
mov
add
repz
mov
cmpsl
daa
and
test
lahf
push
or
scas
jge
mov
jmp
cmp
rolb
xchg
addr16
push
xchg
pop
pushf
fs
mov
and
sbb
xor
jle
push
mov
in
js
push
push
xor
sub
mov
fs
inc
inc
push
sub
dec
gs
sub
iret
jmp
and
push
cltd
or
add
fucomip
ds
xchg
and
push
push
mov
sbb
pop
and
ds
loop
push
sbb
push
out
mov
inc
dec
std
into
out
inc
jl
push
out
or
jp
jmp
cli
jle
lock
sbb
push
out
movsb
popa
not
ret
mov
loope
or
loop
sar
cmp
shl
xchg
daa
lock
jns
jmp
fstps
adc
adc
xchg
fbstp
out
daa
adc
sub
or
je
push
rorl
jg
ret
test
aam
xlat
push
into
jecxz
add
add
lahf
dec
add
lea
mov
outsl
push
call
daa
nop
xchg
mov
adc
pop
call
pop
or
ljmp
shll
inc
mov
test
jp
inc
mov
push
sub
sbb
dec
cmp
dec
jb
and
int3
enter
mov
enter
mov
outsl
mov
in
and
fs
scas
inc
adc
xor
sbb
sbb
addr16
dec
mov
and
in
pushf
jbe
lock
xor
test
mov
sbb
pop
outsl
dec
jmp
dec
cmp
dec
push
outsb
in
or
int3
js
xchg
pop
out
pop
data16
in
das
xchg
es
xchg
test
addr16
jmp
ljmp
cld
mov
aas
ss
mov
out
adcb
popf
mov
lret
aas
sbb
and
cmp
pop
push
jmp
daa
and
sub
adc
enter
xchg
cmp
out
pop
std
cltd
cltd
test
adc
ret
ss
xor
mov
lea
push
or
pop
popf
fdivl
rol
jo
xchg
out
sbb
jp
dec
pushf
jae
or
into
mov
pop
das
mov
arpl
sar
ja
push
clc
nop
pop
lds
pop
nop
jg
pushf
xor
adc
mov
xlat
push
xchg
repnz
pop
xchg
mov
scas
pop
incb
outsb
ljmp
pop
dec
lret
and
lods
movsl
and
in
movsb
xor
imul
push
xor
lcall
push
in
ljmp
jge
mov
enter
push
jae
push
adc
adc
xchg
mov
inc
iret
lock
mov
aaa
sbb
ljmp
fadds
and
xor
pop
cmp
pop
clc
shll
add
xor
mov
cld
or
pushf
push
push
xorb
pop
nop
dec
mov
cwtl
cmpsl
sbb
stc
ret
inc
imul
push
push
fsubs
cmp
mulps
mov
pop
add
push
lods
or
xchg
in
add
mov
push
jns
mov
xor
add
pop
fldt
xorb
stos
int
or
es
stos
mov
inc
dec
negl
nop
leave
mov
mov
xor
sbb
push
out
dec
scas
xor
scas
push
mov
leave
xchg
lahf
decb
negb
or
sbb
pop
sahf
xor
fsubrs
dec
sub
subb
outsl
inc
xchg
idivb
data16
cli
fcomi
pusha
mov
aam
add
inc
lcall
loope
push
insl
ss
add
movsb
mov
fnstsw
lcallw
fsubrs
int3
push
or
adc
sbb
lahf
adc
andb
jle
jae
mov
push
xor
or
mov
out
fadd
xchg
pop
cltd
dec
xor
adc
and
xor
push
in
std
push
and
or
or
push
in
dec
cmpsl
ds
stos
push
flds
mov
add
imul
xlat
jg
inc
hlt
sbb
cld
mov
fldcw
cmpb
in
out
inc
push
push
aas
or
lret
mov
bound
mov
mov
icebp
jo
add
addl
aas
jnp
adc
xchg
std
dec
daa
das
testb
loopne
sub
enter
lods
adc
mov
ja
push
loop
mov
mov
ret
fldt
add
mov
out
cmp
and
mov
out
mov
loopne
pop
test
mov
icebp
sbb
cmp
lods
lods
mov
in
mov
jmp
mov
adc
pop
cmp
pop
mov
cli
fsubr
sti
ljmp
xchg
fistpll
push
xor
add
mov
daa
push
cltd
jae
repnz
sub
sbb
fnstsw
xor
shl
sub
aad
call
mov
push
pop
out
fnclex
fldt
cli
mov
test
jg
sbb
mov
mov
sarb
xchg
inc
js
sub
addr16
mov
lret
sahf
adc
je
mov
ds
sbb
int
mov
daa
orb
mov
stc
xor
repz
in
push
mov
movsb
lcall
xor
jecxz
int
daa
mov
lret
mov
das
stos
loope
fwait
or
scas
in
push
pop
lea
jp
gs
lret
daa
les
mov
xchg
mov
push
loope
jne
cltd
sti
pop
cwtl
pop
ret
dec
sti
cltd
addr16
or
sbb
xor
jp
ret
ret
inc
push
cmpsb
sbb
xchg
lds
lds
xchg
mov
jo
dec
mov
sub
push
data16
jno
xchg
scas
add
add
pushf
subb
jne
sbb
jge
mov
das
cwtl
xchg
adc
mov
or
dec
dec
lahf
scas
ficoms
aam
lret
pop
sbb
jecxz
sbb
in
and
xchg
push
out
pop
into
mov
cmc
in
push
hlt
lahf
dec
mov
popf
filds
fwait
and
sub
mov
xchg
sbb
mov
sub
xchg
xor
loopne
fwait
outsl
and
and
fs
cmp
xchg
pop
out
sub
mov
pop
in
andl
mov
adc
mov
out
into
in
sbb
jl
sub
cmc
ret
cmc
push
pop
fcompl
or
fldenv
loopne
mov
inc
cmp
jnp
fiaddl
mov
and
ret
lods
fstpt
mov
shll
sub
cmpsl
aaa
mov
out
dec
inc
jp
jae
loopne
adc
lds
push
fidivs
into
dec
mov
sub
fdivs
out
popa
cmp
push
in
addl
sti
mov
xchg
cmp
and
mov
xchg
cwtl
xor
jo
fiadds
enter
pop
cmp
xlat
push
or
enter
cld
fmul
mov
sub
cmpsb
dec
imul
jecxz
cmp
cmp
cltd
dec
pop
out
sbb
push
inc
add
inc
repnz
pop
fcmovnbe
sbb
iret
xchg
jge
adcb
testb
es
sti
add
jmp
inc
sub
adc
pop
jbe
xor
enter
cld
mov
stos
mov
insb
in
sbb
loopne
and
int3
popa
adc
imul
lea
shlb
popa
call
jns
or
mov
bound
fbld
mov
insl
das
cmp
xorl
mov
dec
push
push
pop
push
out
hlt
cld
fsub
pop
sub
xchg
cmpsl
enter
pop
adc
add
xchg
mov
jbe
mov
lods
jae
sbb
lds
cmp
mov
and
mul
lods
hlt
xchg
push
add
mov
pop
movsb
bnd
nop
out
outsb
popf
adc
mov
cmp
add
cmp
mov
ljmp
scas
test
and
cli
sbb
sbb
adc
xor
insl
or
shlb
ds
sbb
xor
pop
xor
jne
adcl
sahf
stc
sbb
daa
imul
jnp
popa
rcrb
pop
pop
xor
mov
imul
shl
inc
cmc
cli
sub
cmpb
lahf
adc
and
scas
push
ja
stos
xor
and
outsl
sbb
cli
push
jnp
rol
movsl
dec
sbb
mov
aam
repz
in
cwtl
neg
addr16
lret
adc
mov
xchg
aad
lea
sbb
sbb
inc
jb
sbb
out
cld
out
test
insb
cmp
cli
xor
fisttpl
inc
adc
aaa
outsl
sub
sahf
insb
int
push
sbb
aaa
pop
scas
xlat
xchg
xor
cmp
iret
insb
adc
sbb
cli
jecxz
out
lods
xor
push
jmp
fdivs
mov
mov
or
sub
cld
pop
sbb
xchg
dec
sbb
stos
iret
loop
es
int3
or
into
add
add
mov
testb
jmp
daa
cmp
adc
or
call
int3
sbb
push
push
lcall
dec
ret
dec
push
icebp
mov
enter
or
cmpsb
xchg
xor
cmc
sbb
les
inc
ficomps
sub
xor
fisttps
mov
inc
std
sub
jb
mov
in
adc
ret
cmc
push
loopne
roll
mov
inc
mov
lret
mov
scas
arpl
scas
shrb
test
aam
aad
enter
pop
pop
in
or
repnz
pop
vcomiss
xor
push
movsl
mov
cmp
jno
xor
fstpt
out
adc
mov
incb
mov
cmp
or
sbb
int
out
pop
adc
js
stos
xor
js
xchg
fbstp
add
ja
xor
sub
inc
mov
mov
stc
in
out
and
scas
arpl
popf
add
jl
xchg
xchg
and
cltd
sub
adc
dec
repnz
xor
lock
ss
xor
xor
push
inc
cmp
lods
sahf
divb
nop
fadds
popf
imul
loope
xor
test
lods
xchg
adc
push
shrl
fistps
cltd
dec
aaa
lcall
call
cltd
mov
es
int3
add
xor
push
cli
pop
cld
test
in
xor
or
jns
rcrl
mov
jb
ror
mov
leave
pop
dec
jge
cs
push
les
xchg
out
jmp
push
int
fstpl
adc
adc
lea
jl
rorb
out
cmp
push
je
sbb
rcr
popl
cmp
sub
les
push
sti
daa
es
push
int3
xchg
push
jne
js
xchg
outsb
mov
and
aad
add
xchg
out
add
jle
cmc
or
mov
pop
in
fwait
fs
out
dec
inc
xor
adcb
insl
sbb
xor
jg
add
add
ror
xor
add
sub
inc
fidivrl
cmp
jle
add
or
mov
push
and
adc
out
adc
es
xchg
adcl
mov
sbb
stc
dec
or
and
dec
mov
pusha
or
out
sbb
push
int3
sub
mov
xor
cmp
clc
popa
push
insl
push
sub
aas
adc
movsl
push
fwait
push
shll
iret
jns
pop
add
sub
icebp
lcall
cmp
dec
sub
dec
fcoms
icebp
mov
push
or
xchg
lea
jecxz
iret
stos
or
call
pop
and
outsb
dec
lods
cmpsl
mov
mov
fld
inc
stos
adc
in
inc
mov
pop
cmp
sbb
xchg
push
scas
sbb
pop
call
cmpb
or
cmp
cmp
cmpsb
out
xor
ds
hlt
fbld
and
das
mov
hlt
adc
adc
sub
jecxz
sbb
ficomps
jge
xor
lret
xor
movsb
sub
icebp
cld
ss
cmp
lods
inc
dec
xchg
xor
out
pop
xchg
lock
push
mov
fmull
aaa
rclb
dec
mov
dec
dec
imul
sub
add
into
ret
xchg
leave
call
shl
pusha
xchg
push
in
fsubl
cmp
inc
or
adc
pop
dec
and
pop
repz
sbb
pop
pop
pop
lcall
mov
sub
stos
inc
sbb
arpl
in
imul
or
ret
inc
hlt
and
push
in
xor
cltd
sbb
repz
dec
sbb
inc
fisubl
push
out
sbb
test
xchg
popa
xchg
ret
enter
xchg
mov
lea
dec
add
shlb
popa
jns
push
xor
insl
lock
lret
inc
js
jle
std
pop
int
cwtl
pop
dec
testl
cmpl
roll
std
xchg
lahf
and
fisttpl
push
jo
xchg
cmc
fs
loope
shr
es
push
cli
filds
ret
mov
std
dec
mov
cli
int
mov
jmp
mov
mov
mov
jb
cmpb
inc
dec
add
add
sbb
cmpb
loopne
jnp
add
sbb
add
popa
sub
lds
jle
dec
gs
imul
test
mov
outsl
rorl
call
ror
pop
push
cmp
sub
cmpsb
in
push
push
mov
xor
push
add
jb
push
pop
and
outsl
sbb
xor
outsb
adcb
gs
cmpb
xchg
hlt
pop
decl
mov
cmp
enter
sti
mov
arpl
aaa
fdivl
clc
mov
clc
xchg
out
mov
cwtl
and
subb
in
and
iret
js
dec
cmp
push
mov
mov
es
push
ret
movsb
pop
fldl
xchg
into
sti
xchg
jle
jo
into
mov
ret
xchg
add
jnp
or
inc
mov
lret
outsb
popa
and
sbb
vpshufd
enter
addr16
hlt
addb
in
push
fisttps
lock
or
aam
dec
sbb
mov
or
or
cmp
push
scas
inc
aas
add
or
shl
lahf
xor
fldlg2
mov
in
aam
or
sub
imull
sahf
inc
jl
into
mov
add
add
pop
test
jb
add
cmpsb
pop
add
lods
pop
lds
inc
adc
and
or
aam
sti
cmp
sbb
aaa
femms
ljmp
in
xchg
scas
stc
popa
repz
jp
inc
mov
and
sub
std
push
cmp
jne
nop
dec
inc
cmp
sbb
dec
jb
push
pushf
add
idivl
and
jbe
jmp
es
sub
mov
lret
data16
push
mov
hlt
jae
push
fucomi
shlb
sub
lahf
sarl
inc
mov
push
add
jle
int
imul
clc
rcl
stc
out
les
pop
xchg
pop
in
add
pop
stc
jp
dec
movsb
popf
sub
out
pop
or
mov
add
cmp
and
mov
mov
cmp
cmp
insb
sti
in
add
add
xlat
popa
repnz
lahf
popa
sbb
repnz
inc
inc
push
or
cmpsl
push
mov
inc
lret
xor
mov
push
mov
lcall
xchg
mov
dec
cwtl
mov
test
inc
mov
into
mov
pop
sbb
aam
add
or
xor
lret
jnp
notl
popa
inc
adc
repnz
not
cld
in
xchg
popf
xchg
icebp
mov
sbb
ret
rorb
icebp
jnp
inc
mov
xchg
aas
xchg
xchg
es
int
xchg
cmp
adc
fsubr
jl
les
clc
aas
test
mov
xchg
insb
inc
rcrl
aam
jnp
jg
pop
lock
sarl
orb
mov
xchg
jle
push
mov
inc
jb
pop
jno
mov
jecxz
or
testl
and
jnp
arpl
addr16
xchg
popf
shlb
pop
pop
jecxz
mov
sbb
pop
stos
cli
jns
dec
jecxz
outsl
std
dec
cmp
jg
xchg
and
jmp
enter
in
jnp
stc
mov
fstl
jbe
outsb
rcl
inc
push
mov
mov
orb
or
push
xor
arpl
push
sub
add
dec
test
mov
xchg
addr16
jmp
ficomps
pop
in
add
jge
sbb
xchg
movsb
or
in
leave
or
adc
movsb
repnz
mov
lret
les
popa
int3
les
xorb
lret
lods
aas
cmp
sti
lret
sbb
into
push
xchg
dec
jnp
test
stos
sub
lds
loop
sbb
lahf
ds
and
xor
es
or
xor
dec
lcall
lea
jp
gs
push
inc
adc
inc
dec
out
flds
insb
or
dec
xchg
or
add
or
jnp
inc
movsb
add
and
roll
repz
pushf
mov
je
cmp
movsb
repz
dec
lahf
pop
aaa
mov
jns
cltd
roll
arpl
xchg
add
loope
jne
sub
jp
cmpsl
sub
xchg
fs
cmp
add
mov
xchg
mov
mov
dec
jno
or
sbb
cmp
mov
leave
loope
xchg
rolb
sbb
mov
jae
clc
push
jnp
cmp
inc
cmp
adc
mov
aad
mov
push
mov
mov
dec
out
jbe
xchg
push
repnz
mov
cmc
out
out
mov
sbb
mov
mov
mov
js
leave
xlat
mov
dec
jmp
jmp
out
or
xor
stc
lock
loopne
fdivl
xor
aad
sub
and
adc
push
bound
pop
mov
iret
jbe
dec
jne
push
stos
or
lret
and
movsl
int
aam
lea
ret
adc
lahf
mov
test
and
mov
inc
lret
pop
pop
push
lock
scas
xchg
xlat
adc
lods
push
mov
aaa
scas
or
cmc
mov
aaa
repnz
incb
pop
jno
pushf
iret
es
sub
clc
jle
loope
pop
popa
arpl
rorl
add
dec
push
mov
in
cli
in
stos
movsb
pusha
loope
mov
aas
fs
movl
cld
sbb
movsl
mov
out
push
add
push
je
fwait
mov
cmpsb
fwait
sarl
sbb
call
mov
pop
out
fisttps
sti
sbb
fbstp
inc
jb
add
or
inc
adc
gs
lcall
enter
shlb
cmp
jmp
inc
mov
shll
rcrl
loop
sbb
fadd
in
pop
push
lods
mov
and
stos
sbb
scas
scas
sub
mov
mov
dec
mov
es
mov
adc
roll
push
mov
loope
dec
xor
ljmp
cmp
mov
mov
loope
adcl
stos
push
push
sbb
ds
popf
add
sti
pop
xchg
cwtl
xor
out
sbb
sbb
mov
adc
add
loop
lcall
push
pusha
not
inc
mov
sbb
push
shl
lock
out
test
addr16
mov
sub
push
jmp
arpl
shll
in
sub
xor
adc
divb
dec
pop
aad
xchg
int
andb
or
in
fdivs
popf
cmp
xor
adc
sbbl
lahf
bsr
mov
pop
sahf
out
sbb
pop
lock
ds
xchg
xchg
popf
jmp
ffreep
mov
in
imul
data16
inc
xor
es
std
shrb
sub
pop
mov
sbb
jge
and
mov
cwtl
leave
adcl
daa
ss
insb
jne
jg
mov
sbb
nop
cmp
xor
sub
jne
push
sbb
ret
jns
aad
stos
dec
cmp
lret
xor
adc
enter
pop
pop
inc
into
mov
mov
or
mov
push
pop
js
mov
cli
xchg
cmp
push
shll
mov
pop
arpl
das
or
mov
dec
das
into
mov
lahf
xchg
sub
insl
lret
jb
jecxz
ror
in
xor
jecxz
leave
aam
push
dec
mov
jb
or
mov
mov
mov
ss
mov
sub
or
jmp
jl
sbb
add
cmc
push
ret
mov
xchg
int3
outsb
push
js
mov
iret
push
sbb
sub
or
lea
sbb
cmc
add
loop
std
imul
ja
push
and
and
addr16
xor
ror
iret
or
dec
push
and
call
jle
jge
rcrl
push
inc
enter
inc
orl
sahf
sbb
sub
mov
jns
adc
lock
pop
into
push
ret
xchg
dec
mov
daa
mov
insb
cmc
cmp
pop
loopne
cmp
out
jl
jno
and
add
cmpsl
xchg
mov
mov
rcrl
into
mov
fstl
add
mov
test
mov
pushf
or
stos
jns
lea
outsb
scas
aad
test
scas
sub
movsl
mov
in
scas
push
fsubs
pop
fnstsw
cld
push
out
aaa
sbb
ret
insb
dec
xor
nop
mov
mov
je
shlb
xor
int
cwtl
fildl
cmc
in
jae
mov
cld
and
into
mov
sub
cmp
mov
push
jno
shll
mov
jl
rcrb
jne
into
push
push
das
jge
dec
add
rcl
pop
inc
lret
lds
cmp
push
mov
arpl
cltd
inc
jl
movsb
lods
lods
repz
pusha
aad
icebp
nop
cmp
sub
aas
xor
scas
mov
in
mov
enter
pop
cmp
insb
jb
push
mov
rcrl
scas
loopne
sbb
int3
cli
inc
nop
ljmp
mov
fisubrs
sub
loopne
push
scas
aad
sbb
stc
inc
out
iret
or
cwtl
mov
movsl
hlt
adc
mov
mov
ja
stc
push
bound
inc
jg
fsubrl
fsubl
jnp
or
out
mov
and
push
cmpsb
sbb
cltd
das
movsb
xlat
add
push
sbbl
inc
outsb
ret
cli
les
inc
push
leave
ss
mov
push
push
and
lods
imul
add
aad
test
int
sbb
jns
and
inc
and
testb
ffreep
inc
fldcw
out
dec
js
out
xchg
in
cwtl
fcom
out
test
ror
inc
xor
xchg
xor
daa
test
jmp
cmp
push
aam
rorb
shrl
nop/reserved
mov
sbb
dec
push
jns
test
js
and
mov
dec
out
mov
xor
push
fnstcw
or
out
ljmp
pop
cld
lret
sarb
mov
lods
pop
sub
in
jb
push
roll
mov
cwtl
test
cmp
mov
movsl
insb
out
xor
insb
xlat
imul
lret
imul
push
or
push
add
fld
popl
lcall
sahf
mov
cmp
lret
mov
lcall
jl
sbb
jbe
incl
inc
inc
js
xchg
das
or
cmp
out
mov
ss
inc
xchg
in
xor
fbld
xor
mov
sub
rclb
montmul
cmpsb
inc
xchg
inc
lcall
pcmpeqd
xor
push
ret
lret
push
mov
in
and
push
fldt
cmp
inc
jp
sub
mov
fwait
mov
jmp
or
add
mov
clc
test
mov
mov
xor
sbb
mov
mov
dec
leave
test
aad
mov
fistl
shlb
xor
movsb
out
dec
cmp
aam
adc
pop
lret
xchg
pop
dec
cmp
pop
in
jmp
xchg
dec
fnsave
push
sbb
jl
leave
add
dec
icebp
aad
repnz
or
rcrb
and
pop
jle
hlt
lods
mov
xchg
js
sbb
aas
repnz
xchg
cmpsl
enter
lods
sbb
in
dec
ffree
outsb
popa
dec
ja
loop
orl
out
xchg
je
fndisi(8087
int3
sti
adc
xorb
mov
pop
or
jmp
popa
stos
push
std
aad
lea
xor
mov
sub
cmc
mov
or
je
lret
ret
pushf
mov
push
sbb
enter
cwtl
movsb
ljmp
lods
push
sub
test
mov
lahf
ja
or
xchg
adc
inc
xor
shr
xchg
cld
imul
pop
sbb
pop
icebp
lock
push
xchg
push
and
out
xorl
push
mov
daa
nop
push
jb
das
lret
pop
ljmp
jmp
out
pop
aam
pushf
mov
pop
xor
add
fcos
imul
std
call
xchg
popf
imull
movsb
jle
out
call
and
dec
push
rcrl
fisubrs
push
add
aaa
mov
pop
ss
xlat
dec
stos
inc
xlat
shlb
xchg
arpl
lret
clc
jo
pop
out
jmp
test
pop
enter
add
in
inc
push
cmp
adc
negb
imul
loop
int
and
sbb
scas
sbb
cmc
and
add
insl
mov
cmp
and
or
mov
js
jne
data16
inc
push
jp
xor
xchg
xchg
jb
adc
sbb
xchg
mov
addr16
pop
jne
mov
and
cmp
jbe
leave
pop
cmpsl
fstl
sbb
push
mov
dec
mulb
inc
test
pusha
divb
mov
mov
loop
xchg
popa
pop
scas
fdivr
pop
mov
int3
stos
test
xlat
loop
inc
subb
push
adc
jne
add
cmpsl
test
add
aas
out
dec
lock
out
lds
push
leave
add
pop
lods
and
in
inc
adc
adc
push
and
movsb
jo
xlat
cmp
ja
das
add
out
jnp
add
cmpsb
in
inc
out
scas
and
fisubs
mov
cmp
dec
aad
test
loop
popf
jge
lahf
movsb
inc
jbe
stc
mov
sbb
arpl
les
loopne
shl
lahf
sub
ret
out
fsubl
sbb
mov
adc
mov
jle
cmp
dec
jmp
cltd
add
out
or
sbb
push
cmovl
sahf
push
or
testb
bswap
jno
test
push
adc
jbe
bound
jmp
mov
add
sbb
jo
enter
pushf
xor
xchg
ret
xchg
decl
sbb
push
mov
imul
xor
push
fists
notb
faddp
mov
jge
aaa
cs
dec
jecxz
xchg
rcrl
lret
mov
add
sbb
arpl
push
adc
sarb
or
lods
stos
push
imul
pop
pusha
movsb
mov
pop
adc
xor
lea
stos
mov
idivb
or
mov
adc
cmp
jnp
xor
pop
add
jne
ss
and
imul
frstpm(287
xor
pop
adc
inc
stos
fisubl
scas
subb
es
sbb
out
sahf
mov
cltd
sub
sub
fwait
jecxz
dec
mov
cmp
insb
mov
jmp
dec
xor
les
push
pop
pusha
sub
mov
mov
bound
hlt
xchg
pop
lcall
les
stos
mov
and
lods
dec
das
fildl
aas
fldl
loop
pusha
int3
add
and
cs
xchg
sbb
xchg
lods
cmp
lds
sbb
cmp
cli
ljmp
pop
xor
jno
test
jmp
mov
adc
orb
lret
call
jge
lock
shll
les
lock
mov
dec
push
pop
out
int3
cmp
sbb
pop
enter
and
stos
pop
cmpsb
rcr
in
mov
cmp
and
dec
inc
xor
fcoms
mov
in
fmul
int
ret
scas
fs
mov
push
nop
and
testb
add
das
push
pushf
and
push
pushfw
sub
xchg
mov
aam
std
adc
mov
out
stos
shrd
cli
test
movsb
fildll
xchg
pop
xchg
cmc
lock
xchg
insl
ret
sti
mov
lds
xchg
sub
lea
pop
cmc
repz
enter
sub
clc
out
add
stos
das
nop
push
sub
sbb
push
std
fwait
insb
pop
adc
fimuls
sub
cmp
and
out
or
xor
iret
inc
rclb
popf
sub
xchg
cld
scas
fmuls
scas
push
mov
popa
push
xchg
leave
shl
pop
ja
mov
inc
jno
sub
sub
lock
movsl
inc
pushf
rclb
xor
xor
in
inc
jo
into
rorb
mov
pushf
repz
movsl
sub
sti
mov
and
push
adc
cmpsb
inc
inc
mov
and
and
adc
in
idivb
fildll
inc
leave
lcall
jge
outsl
adc
mov
bound
arpl
aas
adc
mov
popa
shll
popf
sbb
in
mov
daa
sbb
jno
or
dec
ds
pop
sub
add
or
inc
mov
jle
es
jns
out
je
xchg
push
xor
leave
mov
in
xor
sbb
and
lods
push
mov
mov
repnz
pusha
loopne
int3
jmp
test
fwait
cmp
arpl
pop
in
mov
mov
sub
add
push
pop
sub
push
and
dec
loope
sub
iret
out
int
and
stc
fbstp
sarb
insb
andb
callw
lds
jp
faddl
in
ficompl
popa
mov
cmp
mov
inc
dec
adc
xchg
cmp
inc
jmp
shlb
aaa
je
das
cmc
push
movsb
stc
pop
rclb
bound
mov
push
lods
jmp
sub
test
pop
or
pop
ret
mov
pop
fiaddl
shlb
out
xchg
xor
pop
test
lock
dec
mov
sbb
and
insb
test
mov
and
and
inc
and
fs
mov
pop
push
outsb
jle
or
bnd
fcmove
jno
in
test
and
xchg
cmpsb
hlt
in
orb
xchg
jo
idivl
push
mov
lods
jnp
mov
sub
inc
lret
push
mov
clc
es
and
cmp
imul
cmp
mov
cwtl
push
gs
inc
mov
sti
js
mov
xchg
or
sbb
or
imulb
in
pop
xchg
pop
popa
flds
jg
mov
push
insl
jg
pop
jns
mov
adc
mov
lcall
jbe
call
jge
int
movsb
jp
les
mov
push
inc
dec
dec
xchg
aaa
mov
aam
ret
add
add
out
lcall
jge
xchg
arpl
dec
dec
movsl
inc
adc
mov
das
xchg
lds
sahf
lods
xchg
jns
xor
pop
hlt
xchg
fstp
and
xor
pop
jbe
inc
add
pop
jb
inc
cmpsl
pop
mov
and
test
mov
inc
pop
mov
inc
xchg
adc
dec
test
ljmp
xchg
fnstenv
adcl
fildll
mov
into
sub
and
outsb
xchg
loop
daa
adcl
jg
jmp
dec
sbbl
inc
pop
js
mov
into
jge
pop
ficoms
enter
cmp
mov
cli
outsl
jnp
rolb
int
pop
not
sub
jnp
xchg
push
jge
scas
and
push
lods
push
clc
or
mov
test
loopne
xchg
push
lds
insb
xor
xchg
jo
inc
aas
je
mov
repnz
mov
mov
lcall
mov
jle
cmp
xchg
lea
cmp
das
sub
add
jge
push
out
stc
adc
sti
add
fdivrs
inc
sub
inc
sbb
fs
iret
xchg
out
adc
sbb
mov
mov
xchg
loop
or
fdivl
jle
push
in
enter
loopne
cmpsl
jecxz
repnz
or
leave
fistps
pop
mov
int
sbb
add
aas
lret
jg
gs
sbb
fcoml
add
cmpsl
sbb
or
fiaddl
in
leave
inc
dec
inc
jge
sbb
loopne
jge
dec
lcall
pusha
xchg
int3
jne
mov
jle
fmull
pop
out
push
sub
scas
es
push
push
ljmp
mov
sub
inc
mov
and
iret
xchg
les
cmc
loope,pt
inc
add
fstps
rcrl
lea
sbb
xor
dec
into
mov
sarl
xor
xchg
jns
dec
xchg
shll
pop
testl
fcmovu
mov
or
sub
or
mov
out
push
cmp
shll
sbb
frstor
lahf
lcall
or
out
lret
pop
in
in
or
inc
es
imul
pusha
adc
cmp
ret
lea
lods
in
dec
push
imul
popa
repz
mov
cmc
mov
nop
fnstcw
mov
jo
test
pusha
push
rorl
mov
push
cwtl
mov
in
mov
loope
pop
out
sarb
orl
outsl
popf
ds
pusha
jmp
out
and
sbb
jle
sarb
lods
in
insl
inc
out
mov
mov
xor
mov
adc
daa
rcr
mov
dec
xchg
dec
add
sbb
inc
in
sub
dec
jg
inc
pop
adc
dec
jb
pushf
rcr
mov
push
inc
add
sbb
pop
mov
xchg
xlat
xor
lcall
sub
insl
pop
mov
pop
xor
sbb
sbb
imul
add
lcall
jmp
int3
lds
jge
sbb
aad
mov
mov
and
xchg
pop
xor
or
inc
sahf
xor
lods
loopne
jo
popf
fs
and
sbb
mov
jmp
cli
mov
pop
jae
loop
inc
es
ret
dec
inc
cld
cmp
mov
cmpsl
jg
dec
adc
pop
mov
inc
fiaddl
bound
mov
xor
cmp
inc
and
pop
stos
pop
push
jecxz
pop
cli
mov
lock
cmpsb
fidivrl
movsl
scas
repz
cmpsb
insb
xor
jecxz
mov
pop
bound
daa
pushw
ret
cmc
nop
or
push
mov
pop
dec
add
push
push
out
dec
inc
pop
icebp
sub
ja
add
mov
stos
clc
iret
loopnew,pn
mov
fucomp
sub
mov
mov
mov
pop
xor
test
popa
jl
fistpll
adc
pop
mov
xchg
jmp
mov
out
icebp
lret
jl
jmp
push
decb
pop
fmul
daa
adc
punpcklbw
jl
mov
cmp
outsl
subb
jge
scas
mov
jo
xorl
xor
mov
push
fistps
pop
movb
xchg
shrl
or
fadds
or
sti
jmp
xchg
cltd
bnd
rcrb
cmp
jno
mull
clc
push
adc
ja
stos
fdivrs
mov
push
fs
jns
push
mov
scas
or
pop
mov
lods
imul
push
ja
mov
loop
jg
clc
jno
lret
in
push
or
in
sbb
out
xor
aas
and
add
ret
in
jne
cli
xchg
mov
repnz
inc
xor
inc
aaa
jb
dec
pop
out
dec
fcmovu
pop
add
cmp
movsl
bound
call
cmp
int3
ja,pn
cmp
jns
std
cmp
xor
or
mov
sub
cmp
ret
mov
xchg
mov
addb
mov
rorb
fimuls
fs
xor
ret
fwait
mov
shl
dec
mov
stos
push
scas
clc
jne
xor
mov
scas
shl
push
std
fbld
gs
xor
insl
aaa
testl
sbb
negb
cmp
cmpl
shlb
pop
nop
adc
cmpxchg
imul
mov
xchg
add
mov
jo
xlat
mov
sub
rorb
cmpsl
icebp
test
aas
idivl
les
popf
aaa
lret
jp
mov
mov
insb
push
xor
or
push
lock
adc
insl
str
fdivp
mov
in
mov
out
jno
cmp
aas
dec
add
andl
jl
sub
jnp
sub
xchg
mov
popf
or
pop
aad
call
sub
sbb
jnp
jge
cmp
dec
inc
es
dec
xlat
xchg
pop
sbb
or
pop
leave
sbb
sbb
push
scas
mov
out
inc
pop
add
addr16
movsb
or
dec
mov
and
sub
jnp
jbe
out
pop
or
sub
inc
mov
jecxz
add
jg
idivb
insl
dec
rcrl
ficoml
jmp
xchg
xchg
sbb
sbb
popa
mov
ret
mov
cmpsl
adc
xchg
repnz
dec
mov
xchg
inc
arpl
jmp
inc
cltd
push
cmp
std
jmp
pop
sub
push
fistl
test
and
dec
and
les
lods
xor
jo
xchg
rorb
jno
pop
inc
ret
sub
push
mov
push
pop
jmp
sbb
je
cmp
lret
cltd
ja
sbb
mov
pop
popa
clc
shrb
and
mov
in
ss
xor
stos
daa
fiaddl
int
adc
mov
std
decb
add
push
mov
es
push
nop
xlat
jmp
xchg
jle
pop
lret
xor
and
test
mov
mov
cld
call
sub
jmp
mov
push
fsubl
fisttpl
cmc
sub
xchg
aaa
rsqrtps
xor
call
sub
daa
lahf
add
push
pop
adc
dec
nop
and
popf
loopne
cmp
movsl
pop
mov
lret
jge
cmp
pop
lret
xchg
xor
sarb
das
pop
xchg
jb
pop
stos
cld
popa
repz
fs
adc
push
hlt
sub
sbbb
sbb
lret
pop
adc
jae
pop
mov
lret
dec
inc
imul
out
xchg
test
sub
stc
push
push
popf
hlt
out
jmp
jnp
test
adc
adc
ret
cld
jecxz
outsb
cmp
daa
jg
push
inc
lds
inc
jb
add
aad
pop
mov
vucomisd
aam
stos
push
cmp
inc
cmpsl
pusha
stos
adc
cmp
mov
int3
nop
jne
mov
cmp
xchg
aad
sub
mov
xor
insl
pop
mov
andl
sbb
in
imul
xchg
mov
andl
mov
dec
stc
mov
push
xchg
clc
mov
push
out
ss
mov
sbb
and
cmp
jbe
rol
mov
std
imul
push
sub
mov
mov
ds
lea
insl
inc
inc
aad
xchg
mov
rorb
xor
addr16
jp
mov
xchg
or
sub
jle
lds
push
or
sahf
mov
daa
mov
scas
jne
xchg
fsubrs
fcmove
mov
dec
dec
cmp
outsb
push
push
pop
xor
mov
inc
and
pusha
rolb
jmp
pusha
cmp
pop
sbb
cmpsl
pop
cmp
jmp
arpl
push
cs
jecxz
data16
and
daa
xor
xchg
stc
xchg
adc
xor
or
push
fsubrl
rep
cmp
test
push
jb
push
call
lods
subb
sbb
mov
inc
xorl
sub
cwtl
jns
mov
cmp
push
jmp
xor
sbb
dec
push
out
popa
fildll
mov
add
pop
test
push
outsl
push
cmp
adc
cmp
fnstenv
dec
or
jle
dec
sbb
js
mov
dec
outsl
ror
cmp
cmc
or
push
mov
jae
dec
mov
adc
test
pop
loop
mov
inc
comiss
push
push
fistps
fstpt
fidivl
sbb
push
cmp
sub
cmp
and
inc
pushf
popa
in
dec
push
loope
addr16
mov
in
pop
dec
adc
ud0
insl
cmp
mov
jo
es
enter
in
div
sbb
dec
inc
push
jp
dec
xorb
bound
jecxz
jns
mov
iret
repnz
push
stc
cwtl
jl
repz
out
sub
js
sub
add
fldt
adc
js
push
jns
push
sarb
mov
xchg
testb
movsl
pop
and
pop
push
dec
testb
cwtl
push
pop
mov
dec
add
outsb
push
jmp
lret
loop
adc
std
dec
push
push
inc
jno
sub
and
jmp
or
insl
xchg
sub
fwait
pop
test
push
xor
in
rolb
mov
sti
cmc
sbb
cmpsl
mov
ret
movsl
and
lret
mov
pop
dec
cltd
aaa
js
ficoms
xlat
movsb
shlb
popl
dec
cmp
loopne
jo
into
pop
inc
daa
and
and
xchg
or
cltd
pusha
or
dec
test
lods
sub
xor
sbb
lahf
sarb
mov
dec
sub
cmp
ja
aaa
lcall
xchg
cmp
sub
and
pop
xchg
fs
push
jmp
inc
jmp
popa
mov
in
mov
xor
jnp
icebp
xchg
sbb
fwait
or
enter
mov
push
adc
add
js
xchg
push
aad
out
cs
enter
and
xchg
mov
into
xor
shlb
gs
lahf
enter
xchg
mov
test
dec
int3
fmul
fsubrs
jmp
fdivrs
push
mov
aas
push
adc
lret
or
fsubrs
xor
sub
dec
and
test
lea
loop
dec
das
jnp
aas
mov
xchg
lods
lcall
cmp
addl
rorl
jno
outsl
push
fisubl
cmp
xchg
cs
add
jae
mov
jg
sbb
sahf
aaa
divb
lds
fmuls
test
mov
inc
in
xchg
xor
or
in
aaa
mov
xchg
cmc
push
out
lods
sti
mov
push
ret
imul
pop
or
sub
jg
insb
jb
lods
test
scas
stos
cwtl
bound
shll
scas
jb
fiadds
push
inc
negb
mov
gs
mov
or
xor
sbb
dec
lret
cmc
lret
or
ss
push
xchg
push
mov
enter
dec
mov
push
cmp
xchg
in
cmp
dec
aad
bound
sub
fldcw
fimull
pushf
outsl
ljmp
and
fimuls
test
clc
sti
or
movsb
icebp
push
fwait
cmc
mov
pop
jle
jno
jl
xorl
cli
pop
adc
mov
jne
test
sbb
lock
xchg
xor
nop
lret
subl
shlb
mov
js
adc
xchg
cmp
not
lahf
add
sahf
scas
data16
iret
decl
mov
outsl
adc
fnstenv
dec
adc
mov
out
dec
test
jae
popa
adc
repnz
jl
ljmp
push
icebp
add
adcb
mov
aam
stc
or
ja
lcall
adc
dec
lods
scas
and
repz
outsb
mov
pop
or
adc
outsb
dec
testl
fsts
leave
test
loope
add
adcb
ret
inc
sub
push
mov
inc
and
push
xchg
loop
scas
cltd
and
fdivr
out
pop
mov
xor
loop
jne
ljmp
mulb
cmpsl
and
dec
inc
cwtl
push
test
fsubrl
xor
jae
jns
ds
shl
fs
test
ret
add
popf
cli
xlat
xchg
sbb
cwtl
jns
aas
les
jae
pop
push
cltd
mov
cmp
pop
int3
and
rorl
daa
test
test
arpl
imul
mov
leave
out
inc
cmp
fisttps
push
xor
fsubrl
lea
inc
daa
loop
js
lods
mov
pop
xor
push
mov
sbb
lea
mov
je
sub
test
shrl
sbb
or
mov
or
and
mov
ret
aaa
outsl
bound
mov
jle
pop
mov
inc
in
or
push
adc
inc
int
jp
mov
sbb
ss
mov
xor
mov
mov
outsl
in
clc
lret
sub
lods
pop
mov
push
add
cmp
mov
xchg
pusha
int
push
xor
lds
sub
clc
mov
in
test
mov
and
sbb
mov
sahf
fs
mov
pop
jb
loopne
sub
insl
out
mov
cwtl
mov
aas
mov
fs
push
mov
fcmovne
mov
mov
jnp
cmp
test
subl
stc
pop
test
outsl
cld
outsl
and
test
into
mov
into
test
dec
daa
pop
out
stos
xor
pop
mov
jbe
inc
inc
or
xchg
les
mov
mov
fisttpll
mov
scas
or
dec
loopne
xor
std
or
test
sbb
lods
xchg
jne
jne
mov
lcall
pop
rorl
cli
cmpsl
sbb
and
adc
and
jge
mov
or
movb
pop
jae,pt
jb
mov
cmc
call
fistps
dec
jmp
mov
jmp
push
or
gs
aad
jg
std
pop
mov
jge
orb
enter
test
pop
loope
sbb
dec
cmp
ret
fcoml
jae
and
jbe
mov
mov
mov
loope
jmp
sub
dec
or
add
aaa
cmpsb
fs
or
dec
fcoms
movsl
mov
pop
test
mov
pop
sub
enter
push
add
int
jl
out
or
xor
sbb
xchg
dec
inc
add
jb
xor
push
call
xor
cmpsw
lsl
push
loopne
jae
cs
jmp
jg
loope
leave
sub
mov
cmpsb
and
ret
int
jle
mov
jbe
or
sub
sbb
cmpsb
push
xor
test
push
jo
jb
mov
jns
fsubrl
clc
sub
flds
fisubl
fwait
aas
out
stc
ret
sbb
in
inc
mov
aas
cld
es
sahf
adc
mov
pop
fisubrl
jge
mov
jo
cmp
and
in
or
xor
mov
dec
xor
cmp
mov
cmpsb
push
insl
mov
and
jp
das
sub
pop
cmp
shr
test
movsb
add
push
lret
push
repz
idivl
sbbb
jecxz
sub
push
and
in
ret
inc
or
inc
sarb
mov
lret
ret
mov
fidivrs
testb
cmp
ret
adc
xchg
decb
lcall
dec
enter
lock
jae
mov
ja
inc
sbb
rcll
or
out
jl
cmpsb
mov
dec
fldcw
jno
pop
insb
dec
or
mov
mov
shl
mov
jnp
pusha
xchg
stos
arpl
subb
xchg
hlt
cmp
push
inc
in
test
stos
test
adc
je
mov
mov
adc
and
fsubrl
sbb
shrb
test
sub
mull
mov
outsl
sub
jnp
fsts
fbld
rorb
jg
push
in
xor
sbb
mov
icebp
xor
shlb
lock
sub
sbb
dec
es
lea
mov
mov
shl
inc
lea
insb
pop
roll
or
push
mov
cs
push
jo
ret
xor
cld
push
lret
adc
push
lahf
js
lret
popa
repnz
in
daa
int
loopne
repz
or
add
jge
add
popf
pop
jb
sahf
jae
je
sub
jo
inc
xor
xor
fnstsw
mov
jge
push
cmp
push
sbb
into
sbb
adc
lret
pop
pop
mov
mov
adc
into
movsl
ret
outsl
and
clc
jae
pushf
mov
lret
in
push
mov
pushf
push
in
adc
push
in
pop
fisubl
sub
ja
addb
pop
jmp
testb
mov
xor
shll
inc
push
xor
adc
stos
std
divl
jb
fwait
pop
insb
cltd
aas
dec
repnz
mov
out
mov
xchg
mov
movsl
popf
inc
imul
cs
sub
loopne
inc
das
mov
jne
mov
out
or
loope
xchg
addl
lahf
dec
test
mov
jecxz
in
jns
jno
push
sub
fcoml
sub
pop
cmpb
inc
sbb
rcrb
movsb
cmpl
sarl
daa
push
mov
mov
cmp
sarb
and
or
je
in
pop
lods
pushf
push
mov
lret
fs
std
pop
jmp
cli
jne
shl
dec
sbb
add
dec
jp
jmp
xchg
or
js
mov
scas
sub
fidivrs
mov
lds
or
cmpsb
daa
cmp
fstpl
outsb
jecxz
sbb
icebp
rcrl
jecxz
push
adc
xchg
lahf
ret
pusha
push
sub
pop
push
test
cmp
insl
jnp
push
add
lret
xor
insb
or
push
repnz
gs
mov
sbb
fsts
int
pop
leave
cmp
lods
sub
and
xchg
xlat
fs
out
jo
cmp
pop
scas
xor
adc
gs
scas
cmp
sub
cltd
mov
loop
insb
out
bound
inc
pop
imul
adc
pop
jp
nop
in
pushf
pushf
js
hlt
mov
sub
lret
fmul
ds
sbbb
lock
push
lahf
lcall
add
sub
mov
repnz
cmpsb
cld
bnd
cli
xchg
imul
mov
arpl
repnz
xor
cld
test
repnz
outsl
mov
cltd
imul
pop
xor
aam
pop
add
mov
popl
cmpsl
sti
clc
inc
push
ja
fsts
sarb
in
lock
pop
jno
cmc
add
lcall
mov
mov
adc
stos
cwtl
addr16
mov
enter
pavgw
and
jb
idiv
dec
inc
test
cmpsb
mov
pop
mov
sub
xchg
sbb
push
push
and
mov
rcrl
cmp
popf
add
fwait
mov
inc
push
cs
push
jbe
and
out
mov
xchg
dec
adc
icebp
jecxz
dec
fs
pop
lahf
mov
ret
cmp
outsb
movsl
mov
dec
xchg
subl
jmp
stc
fnstenv
aam
push
mov
lea
add
mov
fdivl
and
dec
xchg
lcall
add
pop
jge
scas
repnz
sbb
call
and
outsl
mov
sbb
mov
pushf
mov
dec
jbe
ret
mov
out
pop
into
ss
mov
iret
pop
lods
popa
bound
sbb
push
xchg
pop
jecxz
aaa
or
icebp
jnp
clc
mov
mov
push
and
jo
push
xchg
cltd
lock
pop
fisubrl
inc
les
test
xchg
icebp
dec
and
js
or
mov
mov
imul
pop
mov
add
rol
iret
loopne
mov
dec
inc
repnz
cmp
jns
and
les
btc
fiaddl
call
pop
dec
or
lds
inc
xlat
xchg
ja
jns
fimuls
fsubr
pushf
jp
jb
sub
mov
sbb
mov
dec
xor
cmovle
call
push
cwtl
sub
stos
ret
xor
dec
in
cltd
jg
and
sub
fs
nop
xor
mov
into
dec
mov
mov
pop
lock
std
or
xrelease
ds
cmp
jo
ss
jp
cmp
ljmp
inc
stc
mov
fs
outsb
adc
dec
pusha
outsb
pop
xor
hlt
repnz
inc
mov
push
in
and
inc
loope
xchg
jbe
in
pusha
adc
push
xchg
imul
test
add
push
lret
sub
pop
fdivs
cmp
ja
xchg
ds
cmp
fstpt
rorb
cmpsl
out
dec
in
cmp
xchg
movsl
dec
inc
or
lock
or
mov
xor
mov
fadd
stos
outsb
int3
mul
inc
das
xor
push
test
insl
mov
or
movsb
or
xchg
mov
pushf
add
xchg
movsl
jbe
xor
xchg
mov
sub
fisubl
lretw
decl
jbe
inc
nop
push
mov
cli
jmp
dec
test
adc
negl
mov
sti
pop
out
hlt
repz
call
push
out
in
fldenv
push
mov
push
and
inc
push
call
shlb
hlt
sbb
jmp
jne
test
cmpb
shll
fwait
push
sbb
xchg
mov
std
xchg
ficomps
mov
int
pushf
pop
mov
rcl
jne
cmp
inc
js
test
rcrl
and
mov
adc
roll
sarb
pop
mov
push
sbb
cmp
aas
ret
sbbb
and
ljmp
sub
push
hlt
and
xchg
dec
jb
inc
jae
or
rcrw
loope
push
jno
inc
pop
es
xor
inc
xor
sbb
mov
mov
in
push
popf
sub
rorb
mov
mov
scas
loope
mov
mov
out
fs
xlat
or
push
mov
ljmp
mov
inc
mov
rcll
lcall
loope
out
in
inc
clc
push
int
cli
xchg
jno
scas
stos
lret
test
dec
jae
push
and
test
xor
pop
xchg
aas
cmc
cmc
test
push
pop
fidivs
inc
sub
mov
add
ror
jnp
ja
adcl
outsb
dec
sbb
mov
mull
aad
cs
imul
mov
sbb
stc
push
push
jmp
pop
repnz
jns
mov
push
ds
push
inc
sbb
lret
xor
adc
sarb
mov
fstps
pop
ror
outsw
div
inc
jp
roll
pop
scas
xchg
push
sub
inc
test
jae
jno
bound
pop
and
mov
addr16
lock
jmp
fisttpll
jae
xlat
adc
adc
bound
pop
sbb
and
jb
sub
gs
add
mov
pop
pushf
cli
adc
jno
push
sub
enter
dec
fldenv
jae
cltd
ficoms
xchg
jns
cmp
xor
jle
add
add
sbb
dec
xor
iretw
pop
test
fmuls
push
outsb
adc
jmp
fcmovbe
xchg
and
and
inc
push
sub
ljmp
test
jno
xchg
dec
gs
sti
mov
xor
pushf
fimuls
enter
stc
xlat
mov
jl
notb
mov
mov
push
rcr
jp
iret
or
xchg
lcall
test
jle
insl
push
pop
adc
lea
sbb
mov
leave
mov
cmpsl
imul
xchg
jecxz
notb
mov
xlat
and
mov
js
sub
pusha
add
push
sti
pushf
std
dec
shlb
push
icebp
pop
shll
mov
repnz
push
push
jecxz
test
xchg
mov
rorl
xchg
popa
jno
mov
mov
push
inc
inc
mov
mov
jmp
mov
push
xor
jp
cmp
cmpsl
sub
aam
sbb
mov
mov
je
popa
xor
ds
push
mov
pop
add
addr16
cmpsb
pop
das
int
pop
outsb
mov
push
aaa
mov
jne
fnstsw
add
clc
cld
lods
mov
sub
push
or
add
hlt
mov
jmp
dec
mov
mov
sub
dec
sar
pushf
cmp
mov
pop
adc
push
push
jmp
pop
sub
shr
mov
leave
nop
leave
sbbl
pushf
xchg
jg
adc
push
and
leave
and
lds
add
or
int3
hlt
adcb
xlat
xchg
sti
xor
cli
xlat
push
out
dec
fwait
cmp
push
div
cli
clc
push
lea
jbe
jle
test
rorb
and
aad
stos
xchg
bound
fimull
out
jmp
pop
scas
faddl
pop
jno
scas
js
ja
sub
cmp
inc
subl
xor
cmp
into
aaa
xchg
sub
movsb
dec
popa
jns
loope
mov
test
repnz
ret
mov
arpl
mov
rcl
mov
jns
sub
push
nop
mov
rep
out
xchg
jle
push
imul
or
adc
aas
jp
jae
adc
sbb
js
xor
mov
sbb
mov
lsl
js
dec
xor
je
fyl2x
loop
into
jne
fiadds
aas
mov
mov
aad
dec
inc
pop
adc
xchg
xor
adc
pusha
fldenv
jmp
data16
lret
dec
aaa
xor
add
xor
and
jne
xchg
ds
shll
xor
and
jns
inc
xchg
insl
lret
xchg
mov
inc
xchg
popa
jb
loop
mov
inc
test
pop
push
dec
out
test
scas
and
testl
arpl
sub
push
push
or
adc
js
fmuls
add
addr16
test
adc
aas
leave
rcrl
and
fs
sahf
jno
pop
sub
jae
arpl
push
in
in
test
repnz
dec
pop
sbb
cwtl
cmpsb
add
repnz
push
subl
cmp
pop
jnp
or
mov
int3
popf
repz
mov
xchg
or
mov
mov
mov
sub
arpl
cs
inc
mov
jo
cmp
popf
mov
insl
and
push
mov
fld1
push
test
or
cltd
mov
jno
mov
pop
adcl
aam
outsl
lahf
push
dec
popa
outsl
aam
mov
add
xor
es
idivl
and
push
scas
rol
stos
ret
stc
mov
adc
test
fisubrl
aam
test
sbb
add
push
add
js
in
stos
shl
mov
out
scas
addb
mov
addr16
aaa
lds
je
inc
cmp
aaa
xor
sub
mov
in
pop
lods
mov
mov
ja
push
icebp
mov
out
sbb
ja
outsb
jecxz
fsubl
loop
in
mov
scas
xchg
inc
lret
loopne
in
sbb
mov
loopne
fidivl
in
dec
movsb
repz
adc
icebp
out
mov
jnp
add
repz
fimull
bound
pop
aad
xchg
jbe
scas
jne
scas
and
icebp
xor
test
push
das
and
jecxz
into
in
int3
scas
mov
pop
pop
insb
mov
jns
or
scas
cmp
push
in
hlt
repnz
and
mov
xchg
pushf
jno
sub
sti
insl
push
inc
clc
mov
jae
aaa
or
push
in
adc
imul
jge
adc
daa
lods
in
xchg
stos
std
add
mov
clc
push
in
andb
daa
push
int3
mov
and
sub
xor
mov
mov
loope
outsl
sub
ret
bnd
dec
mov
shll
addb
add
dec
inc
ret
pop
xor
cmp
in
shl
sbbl
or
insl
fisubrl
add
push
cmp
mov
aam
inc
dec
lret
and
gs
sub
aad
testl
arpl
stc
loop
rolb
cs
adc
jmp
or
pushf
add
sbb
jl
pop
shll
xor
sub
jno
fwait
adc
std
sub
mov
call
ss
jp
clc
sbb
and
aas
sub
mov
insl
lahf
mov
xor
mov
lock
pop
sub
jg
scas
add
xor
bound
jge
push
test
cmp
jns
sub
jle
push
inc
shrb
ljmp
sub
cld
pop
push
push
out
inc
scas
into
pop
fmuls
add
push
into
outsb
in
shrb
stos
dec
push
push
xchg
iret
push
push
fnsetpm(287
mov
and
or
clc
mov
outsl
fwait
jno
es
subl
jg
jno
and
addr16
and
xor
sub
fwait
jl
daa
push
adcb
arpl
cmp
movsb
loopne
fs
movb
fnclex
pop
sub
xor
jo
out
test
out
iret
xor
scas
fcompl
das
jns
mov
js
ret
gs
sbb
out
jne
out
fnstcw
dec
icebp
jbe
ds
andl
push
or
data16
jmp
mov
test
stos
pop
mov
out
inc
pop
mov
mov
add
xchg
sub
inc
jle
dec
adcl
stos
out
in
shl
sub
xchg
push
insb
jns
jmp
sbb
mov
mov
push
test
push
pop
and
or
loop
arpl
les
xchg
das
lahf
lds
cs
popa
lds
pop
lcall
add
add
mov
aaa
js
popa
addr16
cltd
imul
xchg
and
xor
out
mov
imulb
pop
out
in
shl
aaa
mov
pop
mov
xor
pop
dec
loop
add
cltd
enter
stc
xchg
jge
mov
xor
add
cli
call
xor
lahf
or
jae
push
enter
mov
in
mov
lea
pop
clc
or
movsl
std
movsl
add
pop
push
cmp
ret
int
pop
leave
mov
mov
loopne
in
icebp
lock
movsl
popf
dec
and
push
jbe
cmpsl
pop
pop
fdivrs
and
and
decl
scas
out
movsb
mov
pavgb
out
mov
cs
jno
insb
stc
xchg
js
lock
and
xor
mov
aad
pop
add
aas
mov
push
insl
push
lret
sub
xor
jnp
cmp
out
inc
cli
lahf
ljmp
mov
imul
pop
call
sub
sub
out
or
subb
push
xor
clc
jmp
sbb
jecxz
mov
test
mov
movsb
lods
add
add
mov
push
xlat
or
push
push
sahf
aaa
sbb
mov
mov
out
cmp
sarb
clc
leave
scas
pop
filds
repz
fiaddl
cmp
mov
inc
inc
pop
sub
movsl
pop
sbb
pop
rol
bnd
and
sbb
adc
sti
xchg
mov
push
test
out
mov
dec
adc
stc
push
or
add
cld
inc
sbb
add
data16
stos
xor
out
daa
pusha
adc
inc
arpl
sbb
cmc
shll
adc
mov
adc
rcrb
add
dec
sub
in
sbb
mov
aaa
in
and
push
dec
inc
push
movl
dec
clc
xchg
push
sub
xor
cmpsb
mov
pop
outsl
lock
inc
inc
scas
jb
and
imul
mov
lock
into
xor
lds
mov
and
fwait
ljmp
aas
test
loope
sbb
repnz
adc
lock
or
dec
and
into
mov
lahf
into
jns
ds
add
cmp
loopne
fbstp
or
addr16
mov
mov
scas
mov
fcmove
pop
xchg
cmpsl
imul
fidivl
or
mov
test
ja
movsw
mov
fwait
mov
jns
mov
frstor
push
outsl
cmp
xorl
call
mov
pop
fwait
mov
xlat
rorb
or
xchg
add
ja
and
add
leave
ret
sahf
xchg
pop
push
jbe
test
insl
aaa
add
dec
fildll
lret
adc
inc
loop
or
std
push
and
gs
jo
and
push
cld
fldcw
push
sbb
or
push
test
stc
addr16
fisubl
sub
mov
mov
dec
lds
inc
inc
sbb
inc
jbe
arpl
add
mov
jle
out
pop
xor
shrl
out
sbb
sub
je
cmp
mov
lret
mov
cwtl
jmp
leave
bound
imul
sub
inc
jge
xchg
add
add
cmp
loopne
dec
xchg
negl
gs
imul
les
pop
cmpsb
mov
adc
fmull
ret
cmp
enter
and
sub
push
mov
mov
out
adc
xchg
testb
pusha
or
dec
mov
test
cmc
incb
jp
jge
pushf
mov
sbb
repnz
mov
loope
xor
add
repnz
cwtl
leave
mov
jbe
lods
lahf
or
mov
test
mov
fcmovnbe
pop
xchg
jns
mov
popf
pop
hlt
insb
cwtl
or
idivl
jae
shr
pop
sahf
test
iret
inc
mov
push
out
inc
iret
lods
pop
js
cmp
out
scas
xchg
push
xorps
jge
out
neg
loop
adc
jl
dec
popa
push
in
arpl
imul
arpl
scas
fs
jbe
adc
sbb
clc
mov
or
daa
cltd
pop
pop
adc
hlt
roll
push
jg
lret
push
shll
sub
test
cltd
sub
ret
repnz
setnp
loopne
lock
icebp
stos
sarb
lods
cs
cmpsb
shll
pop
shll
xor
xlat
scas
sub
xchg
shll
insb
jb
add
add
cli
imul
inc
xchg
dec
pushf
sbb
popa
lds
je
mov
mov
sahf
lds
lret
push
or
jbe
mov
lods
jp
dec
add
stos
dec
push
or
pop
mov
push
dec
dec
push
adc
inc
leave
lret
or
shl
in
mov
or
or
xor
pushf
loop
cmpsb
lea
ds
rcrl
dec
out
and
xchg
leave
mov
pusha
test
orb
mov
js
lds
insl
xchg
ljmp
cmp
pushf
rcl
dec
pop
add
stos
sub
fsubl
or
push
cltd
cmp
adc
loop
cmp
scas
arpl
aas
push
jg
xchg
aad
out
xor
or
js
inc
cmp
dec
insb
adc
pusha
jmp
jl
out
pop
adc
sbb
mov
adc
push
jbe
jmp
push
aas
or
cli
pop
xchg
or
lahf
push
jle
inc
mov
mov
inc
lds
cltd
push
test
cmp
pop
gs
xchg
out
pop
movsl
mov
push
sub
out
and
aam
push
fs
enter
mov
dec
in
mov
movsb
mov
and
cld
or
inc
das
outsl
aam
out
xorl
sarl
pop
mov
mov
ret
adc
loop
je,pn
outsb
inc
add
push
or
dec
mov
or
lods
xlat
mov
addl
inc
mov
xor
ja
addr16
cmpsl
cmpsl
fdivrs
push
dec
inc
stos
xchg
adcl
das
pop
sub
js
jl
push
cmc
or
mov
jne
adc
adc
push
xchg
aam
lea
cmp
or
mov
lret
xor
xlat
sub
xor
nop
or
fbstp
out
in
push
pop
in
jno
pop
sub
fucomi
xor
push
stos
sub
mov
sub
xor
dec
or
bound
in
popf
addr16
das
subps
mov
je
cli
jns
icebp
rorb
jl
and
mov
jns
orb
jmp
scas
andnps
dec
lcall
or
adc
cmp
inc
arpl
xor
xrelease
hlt
lods
mov
inc
stos
lret
mov
mov
test
cmp
mov
lods
js
repnz
add
fsubl
in
dec
cs
push
test
jnp
mov
js
pusha
iret
andl
lea
fstps
dec
push
and
jbe
sub
outsl
add
fcmovb
add
cmp
call
xchg
leave
dec
out
or
sub
loop
popa
inc
cmp
mov
inc
push
push
subl
aaa
fstps
pop
inc
aam
out
lahf
call
scas
outsb
jae
stos
fcomps
xchg
jge
push
inc
fsubl
inc
add
adc
mov
repz
je
ret
test
iret
fistl
test
push
loop
dec
mov
xchg
adc
shrb
sbb
fcmovbe
stos
mov
pusha
xor
xchg
aaa
jae
mov
ret
loope
sarl
mov
cmpsb
cmp
mov
scas
ret
cmp
mov
lods
mov
mov
or
sbb
jmp
add
jmp
hlt
aad
lcall
push
jne
mov
xor
push
hlt
adc
cwtl
nop
cmpsl
and
popa
outsl
jp
popa
stc
int3
repz
adc
fdivs
leave
inc
lea
jo
mov
ret
mov
pavgb
in
mov
popf
push
mov
dec
mov
scas
push
lock
aam
outsl
jne
je
lods
inc
pushf
clc
mov
fstps
imul
xchg
inc
popf
loopne
inc
and
sub
nop
aam
jbe
ds
int3
pop
call
dec
addb
imul
pop
cli
add
std
es
dec
inc
mov
dec
cmp
and
jae
and
lret
ljmp
mov
das
fstpt
push
pop
xor
xlat
jnp
stc
stos
call
jns
arpl
mov
pushf
lret
addr16
rcrb
scas
cli
or
out
sbb
xchg
cmp
jnp
push
mov
push
mov
jp
sbb
xor
fcompl
xchg
gs
popf
push
or
aaa
mov
add
addr16
add
pop
cmp
mov
adc
aam
out
ds
push
fstpl
imul
add
dec
cs
cmp
sti
lcall
jns
cli
out
out
out
out
negb
sub
cmc
sahf
or
or
adc
add
mov
jmp
out
outsb
dec
insl
or
fcmovb
fsubrs
icebp
pop
cmp
push
dec
adc
repz
arpl
aam
and
mov
jns
arpl
xchg
jle
jbe
fldenv
jnp
xor
push
mov
movsb
and
ss
mov
fdivl
push
dec
and
outsl
jbe
movsb
mov
idiv
ret
xchg
in
pop
jl
inc
push
sbb
pop
shlb
jge
pop
mov
ret
mov
cli
inc
jg
fdivs
or
jns
jns
cmp
shrl
sub
in
fdivs
shll
test
dec
sub
fs
dec
cmp
in
pop
popa
cld
or
cmpsl
sbb
rorl
xor
sbb
out
je
pop
lahf
mov
in
icebp
in
mov
repz
jnp
incb
dec
repz
xor
lret
xchg
test
sub
jl
sub
hlt
iret
lahf
pop
les
aaa
add
fists
push
adc
call
mov
mov
xchg
ss
sub
adcl
lcall
adcl
aad
aas
rcll
mov
dec
mov
out
fdiv
mov
xchg
sub
adc
cmp
jecxz
cltd
and
sub
jns
mov
sbb
cmp
lret
lcall
or
sbb
outsb
insl
or
jmp
rcrl
and
jecxz
add
xchg
mov
out
jno
xor
or
cmc
mov
and
nop
push
clc
out
fucomip
dec
jl
adc
add
add
cld
outsl
lods
lods
movsb
shlb
push
xor
adc
shl
popa
std
les
add
add
dec
std
lret
xchg
xchg
jge
mov
orb
roll
and
and
inc
sbb
mov
rolb
jg
lods
adc
sub
push
into
mov
mov
xor
pop
or
push
subl
push
inc
mov
dec
leave
cltd
out
out
mov
hlt
pop
xchg
mov
dec
mov
mov
cltd
ds
sti
pop
mov
adc
inc
mov
mov
xor
mov
or
push
push
lods
inc
js
shll
jmp
mov
mov
push
leave
adc
hlt
dec
push
sub
jno
xchg
insb
out
sub
pop
adc
mov
mov
lods
mov
jecxz
add
rorl
std
push
jmp
mov
or
jg
std
idiv
iret
xor
pop
pop
mov
fildl
jbe
out
out
jg
lret
pop
mov
inc
out
test
imul
inc
sub
sbbl
xchg
or
xchg
jle
lods
mov
pop
insb
push
int
mov
jb
jg
push
push
pop
negb
es
pop
xor
jmp
dec
sbb
test
icebp
pop
ds
sbb
or
iret
jmp
mov
sub
pop
arpl
adc
std
mov
movl
pop
stos
jg
jl
jno
repz
movsb
xchg
xor
mov
cmc
aad
pushf
notb
xchg
movsl
or
mov
adc
pavgb
xor
xchg
clc
push
rolw
xchg
les
jecxz
idivb
insl
out
pop
sbb
push
mov
mov
stos
rorb
stos
stos
add
jnp
fadds
roll
inc
fwait
popf
pop
jg
lds
dec
sahf
jecxz
mov
ljmp
or
filds
jae
test
std
and
push
addb
jo
in
lods
enter
xchg
sbb
mov
sub
je
xor
mov
decl
xchg
test
aad
dec
test
xchg
or
sti
std
rolb
xlat
cli
cmp
pop
xor
mov
dec
inc
aaa
aam
adc
stos
dec
xchg
mov
das
mov
cmpsl
push
mov
hlt
cmp
or
inc
stos
shrd
std
popa
push
scas
aad
ret
cmp
and
inc
push
sarb
xor
mov
sbb
sbb
cltd
sub
and
ss
fisttps
mov
cli
das
sub
cmc
pop
inc
or
out
in
sbb
rcll
lcall
leave
lret
and
mov
aas
lcall
fmuls
inc
fcom
mov
movb
mov
cltd
inc
lds
loopne
dec
out
or
out
xchg
clc
gs
mov
and
call
sahf
stos
repnz
ja
add
push
adc
fcoml
outsb
ja
xor
sbb
sub
cmp
and
outsl
pop
dec
xchg
xchg
stos
aad
jno
xchg
xor
movsb
jne
outsb
push
mov
pop
or
test
cltd
sub
jp
fimuls
insb
in
enter
das
mov
shrb
sarl
dec
sbb
lret
dec
mov
xchg
xchg
push
fucomip
push
enter
mov
mov
in
cmp
dec
imul
xor
cli
adc
mov
add
popf
lock
loop
xchg
lea
sbb
lds
cmpsl
arpl
push
insl
jmp
rorl
lret
jp
push
add
mov
inc
mov
ss
dec
dec
lods
pop
push
icebp
adc
or
imul
push
mov
jno
cmp
fnsave
stc
mov
stos
and
sub
or
xor
rcl
stos
in
add
add
sbb
data16
mov
arpl
dec
pop
gs
lods
push
inc
lahf
ret
shlb
into
cmc
test
lock
test
or
in
pop
je
shlb
push
mov
int3
sub
sub
arpl
adcl
lahf
repz
mov
mov
insl
fwait
int
pop
xlat
sub
cmp
iret
je
int3
aad
ljmp
cmpsb
jns
mov
movsb
pop
popa
dec
rcr
into
and
das
mov
cmpsl
ret
nop
cmp
fistpll
mov
push
dec
cmp
daa
fs
insl
pop
imul
jle
arpl
test
xchg
adc
loope
sahf
jecxz
push
loopne
cld
popf
pop
fs
pop
repnz
ljmp
ret
out
xchg
inc
insb
dec
ret
in
and
inc
out
xchg
dec
push
sti
test
stos
scas
xchg
sub
inc
shlb
cmp
out
push
rcrb
mov
pop
sbb
in
adc
mov
mov
jecxz
shrl
mov
sahf
fs
jae
mov
adc
popa
and
lahf
push
xchg
sub
xor
test
fwait
dec
int
jp
inc
pop
std
js
inc
inc
ret
rcl
adc
mov
sbb
sbb
cmp
aas
iret
jae
push
out
inc
cmpsl
icebp
cmp
negb
fwait
mov
shrl
jge
fcoms
pop
fistps
xchg
add
out
scas
fadd
ds
mov
gs
lock
hlt
adc
fcomi
cmp
xor
repnz
pop
call
mov
xchg
cld
and
inc
jecxz
pop
mov
jnp
fnsave
push
jae
sahf
insl
mov
enter
jbe
test
push
jp
sub
les
xchg
xchg
and
mov
call
xlat
inc
push
adc
xor
adc
rcl
jg
jb
cmpb
pop
sbb
mov
shll
sub
rorl
jmp
jns
jns
mov
mov
sub
cmp
dec
jge
fidivrs
xchg
hlt
mov
push
mov
push
jecxz
and
xchg
in
xchg
adc
addr16
xchg
js
mov
cmp
fstps
lret
jge
sbb
les
lock
xor
inc
fldenv
lahf
mov
negb
jmp
mov
pop
jge
inc
imull
nop
mov
flds
jp
sbb
cmc
shll
leave
push
into
adc
jecxz
inc
sbb
push
add
fwait
das
aaa
loope
xchg
mov
xchg
cs
pop
int3
je
ds
jecxz
inc
mov
das
jl
and
in
out
mov
cmpsl
jmp
mov
test
pop
jne
test
dec
sbb
mov
mov
clc
cs
mov
mov
or
add
cmp
sbbb
repz
mov
dec
or
jl
push
in
hlt
pop
les
ljmp
lret
inc
cmpsb
xchg
insl
dec
xchg
xor
jle
sub
or
out
ds
add
loopne
out
adc
lret
fs
inc
cltd
mov
lock
mov
imul
vpcmpeqw
sbb
push
sti
inc
dec
xchg
lods
xchg
sbb
loope
xchg
cwtl
jnp
arpl
lcall
imul
cmp
sub
mov
ds
out
les
and
in
hlt
xlat
sbb
inc
add
mov
adcb
das
and
lcall
xlat
iret
fadd
push
int3
and
xchg
and
xor
xor
add
add
loope
dec
enter
inc
xchg
fbstp
push
je
xchg
mov
in
adc
adc
vshufpd
adc
dec
sbb
mov
adc
loope
loope
dec
int
shr
xlat
push
mov
call
sub
in
in
test
lret
and
push
push
xchg
in
stc
in
and
cmp
in
push
dec
or
xchg
jne
aas
pop
jne
sbb
insb
sub
aas
mov
lret
repnz
sub
dec
das
inc
lret
jbe
pop
mov
mov
jno
fsub
into
mov
lds
fildll
push
cmp
xchg
mov
mov
pop
mov
movsl
int
mov
push
push
loopne
mov
ficompl
push
mov
ss
xchg
popa
add
or
cmp
loope
cmpl
pushf
rclb
mov
movl
cmp
loope
test
in
jae
dec
cmp
fwait
das
rorb
test
movsb
jmp
popa
push
pop
adc
push
cli
adc
or
inc
xchg
mov
lods
int3
push
sahf
jnp
data16
rcrb
or
and
rep
mov
sbb
test
popa
sbb
in
out
shrb
enter
adc
sub
inc
or
inc
jbe
fs
imul
push
mov
dec
jo
out
inc
pop
sarb
sbb
dec
cltd
stc
jb
mov
movsb
xchg
cmp
std
jle
cld
lret
pop
jg
push
mov
repnz
jg
out
add
lcall
popa
jns
sub
popf
cmp
pop
cmp
addl
push
mov
mov
mov
stos
inc
cmpl
push
mov
int
sub
add
mov
cmp
jno
in
mov
mov
add
xor
lds
mov
jbe
ret
jbe
iret
in
mov
inc
adc
shll
xor
sub
mov
div
inc
xchg
in
int
aaa
rclb
mov
mov
and
cli
sub
imul
cmp
lcall
in
xor
and
mov
loopne
sub
fsts
adc
divb
shrb
lahf
pushf
sarb
cmp
xchg
sub
jbe
mov
and
in
mov
pusha
mov
jl
lds
decl
adc
lret
aas
mov
cmp
lods
sbb
call
dec
lahf
and
in
add
push
mov
out
and
stos
or
push
jo
fldt
shl
rcrb
sti
pop
lods
adc
test
mov
cmc
mov
test
xor
sbb
sub
inc
call
popf
mov
sbb
ret
ret
into
aad
insb
xor
cld
test
cmp
mov
addr16
mov
xchg
xchg
dec
cmp
dec
mov
sub
mov
and
mov
xchg
icebp
pop
ret
xchg
lcall
inc
xchg
and
push
mov
mov
fcomps
insb
push
sub
test
add
je
pop
fcomps
rol
pop
cmp
out
stos
mov
push
mov
daa
inc
jecxz
in
mov
and
iret
dec
mov
roll
sub
or
push
xor
jb
stos
jno
fisubs
loop
dec
fs
xchg
push
mov
and
mov
ds
and
fiaddl
or
pop
jle
and
push
rorl
jecxz
loop
test
shl
outsl
cli
push
mov
je
std
loop
xor
dec
mov
stos
stos
ljmp
fs
data16
addb
pop
int3
sub
hlt
mov
mov
filds
push
daa
in
into
sub
jno
pop
add
insl
lds
xor
dec
insl
add
nop
mov
add
and
add
xchg
repnz
pop
pusha
xor
adc
test
bnd
jmp
iret
inc
imul
ss
out
pop
or
inc
incb
outsl
xchg
mov
or
cmp
cld
int3
mov
push
addr16
push
scas
shll
cmp
cmp
push
push
shlb
cmp
neg
sbb
bnd
inc
fisttpl
fs
mov
inc
xchg
rcrl
xchg
push
and
add
ret
cld
sbb
mov
sbb
scas
or
sub
jns
pusha
filds
push
mov
push
sub
sbb
mov
cmpsb
mov
negb
and
push
inc
ljmp
jne
repz
sbb
ficoml
inc
xchg
jns
push
adc
test
fwait
dec
pop
jmp
jecxz
lret
addr16
scas
js
dec
mov
xchg
pop
repnz
adc
iret
xor
xchg
cs
jecxz
pop
fsubrp
mov
out
inc
inc
dec
jae
out
jae
sub
inc
aam
aaa
cltd
dec
mov
mov
stos
add
add
scas
movlps
fsub
dec
ss
and
test
push
bound
jp
lcall
push
lea
cmp
mov
inc
push
mov
cmp
adc
push
out
popa
pusha
outsb
adc
lret
shlb
out
push
sub
sub
dec
sub
mov
std
decl
mov
in
inc
dec
add
repnz
cmp
push
jle
incb
jns
mov
add
lcall
cmpsl
enter
mov
add
push
jb
mov
out
rcll
dec
cmp
jno
js
insl
test
daa
dec
fidivl
mov
icebp
loop
sub
xchg
cmp
push
fidivl
adc
push
dec
mov
and
xorl
push
shlb
fbld
rcrl
inc
pop
lods
loop
int3
sbb
mov
dec
jg
cld
repnz
cs
xchg
mov
rclb
xlat
js
insl
push
pushf
shrb
js
xchg
inc
data16
xchg
lods
lret
in
mov
leave
in
push
sub
mov
or
inc
and
adc
and
lds
cmpsl
cltd
data16
push
in
je
mov
push
stc
push
mov
pop
mov
test
inc
mov
roll
dec
adc
into
dec
lds
loop
cs
jp
cmp
outsb
or
pop
add
icebp
xchg
inc
lds
and
icebp
cmpsb
dec
inc
clc
mov
fimull
jle
scas
div
mov
pop
out
fimuls
jge
mov
mov
dec
cmp
jne
lret
aam
insb
call
dec
movsb
pop
sub
pusha
testl
ds
mov
pushf
lock
out
cmp
test
dec
push
jg
int3
add
jno
lcall
lods
xchg
jo
mov
xchg
cld
mov
sub
ja
push
insb
lods
jnp
mov
mov
cwtl
ljmp
xor
cmpsb
lea
push
out
jge
xor
bound
sbb
clc
mov
mov
fcmovne
cmp
xchg
xor
sbb
xchg
xchg
sub
pop
or
cld
rol
xlat
or
pop
shll
mov
aas
xchg
rorl
lcall
pop
ljmp
inc
push
or
mov
rolb
cwtl
incb
aad
fdivl
add
jmp
or
addl
and
test
push
int
in
jo
pop
lea
mov
cwtl
repz
or
jecxz
leave
dec
aaa
cltd
add
adc
fdivrs
sub
stc
and
cmpsl
mov
cmp
mov
inc
cmpsb
sbb
adc
push
xor
movsb
xchg
cmc
cmp
adc
cmp
and
push
jge
das
pop
cs
cs
jo
out
jp
push
fstpt
mov
call
xor
sub
add
mov
push
adc
int
addl
popa
xchg
pop
adc
mov
cmc
int
or
dec
cltd
xor
test
rclb
lret
xor
movsl
lea
lret
daa
in
mov
add
push
enter
lcall
shr
scas
jmp
dec
pop
xor
pushf
pop
mov
sbb
jae
lds
hlt
bt
shr
leave
imul
shr
push
cmc
add
pusha
cmpsb
lret
lods
inc
jecxz
jle
lods
mov
test
mov
jle
cwtl
out
arpl
iret
push
push
in
dec
mov
and
call
fistl
daa
add
xor
cmp
xchg
add
sub
imul
stos
fdivs
incb
mov
aaa
aam
dec
cmpl
xchg
sahf
cmc
sub
movsl
push
mov
repz
loope
adc
aad
adc
orl
outsb
movsl
in
loope
or
daa
jl
ljmp
imul
stos
stc
out
jp
mov
push
imul
add
dec
push
sub
ret
dec
ja
lcall
lds
or
call
sub
add
ret
jg
pop
mov
pop
sub
add
bound
and
gs
xor
mov
aas
cmp
and
lea
pushf
ss
cltd
adc
xchg
adc
andl
push
mov
xchg
fadd
dec
push
clc
cmp
comiss
pop
sti
sbb
sub
mov
xor
icebp
out
scas
xor
int
aas
out
mov
roll
jnp
test
movsl
lahf
in
inc
cmp
xchg
dec
loope
das
push
andl
xchg
out
push
mull
cmpsb
out
push
mov
jns
cltd
dec
addb
xchg
xchg
loope
int
aam
push
fists
inc
loopne
jp
xor
ss
movl
pop
pop
sarb
lea
jb
add
fimuls
and
loopne
jp
es
fs
push
jecxz
inc
shlb
imul
stc
sbb
lods
and
mov
test
fdivrp
fwait
cli
add
mov
enter
in
test
test
dec
inc
movsl
add
push
pop
xchg
lret
lock
dec
fstpl
push
and
and
bound
ja
sbb
out
xchg
dec
add
fs
cmp
test
mov
sarl
sub
orl
mov
mov
in
push
jle
popf
push
xor
push
jo
mov
loope
scas
pop
pop
aam
mov
into
orl
repz
cltd
in
mov
repnz
xor
add
jmp
movsl
mov
mov
mov
jae
sbb
pop
shlb
in
sub
mov
and
rcll
shl
mov
fistl
cmpsb
xchg
and
pop
ljmp
shlb
movsl
jp
rcrl
aaa
sbb
jnp
push
sbb
sbbb
fdivl
and
push
cmpsl
mov
movsb
add
es
into
fcoml
cmc
mov
pusha
int3
int
call
imul
sbb
pop
aaa
xchg
lahf
mov
cmp
ror
and
mov
xchg
in
jno
xchg
cmpsb
xchg
idiv
mov
mov
lods
dec
and
jmp
push
pop
xor
adc
xchg
or
mov
loop
inc
xor
sbb
sbbl
adc
inc
cltd
aaa
movsl
and
test
ja
mov
hlt
pushf
sub
test
iret
loopne
cmc
xor
jmp
adc
js
adc
fstps
enter
push
xor
repnz
rcll
xor
xor
adc
mov
dec
xchg
sub
mov
loopne
cmp
pop
push
pop
repnz
ljmp
and
or
xor
or
dec
xor
int
cmp
lods
push
pop
add
daa
div
ljmp
xlat
pop
jg
mov
inc
scas
lods
stos
adc
aad
test
lods
push
mov
xchg
pop
push
sti
push
pop
adc
push
inc
adc
outsl
xchg
push
sub
inc
push
sbb
sbb
popa
in
add
jns
pop
jg
out
imul
sub
jnp
mov
ret
pop
loopne
loop
in
lods
fwait
and
add
test
mov
gs
jg
daa
pop
push
daa
rorl
outsl
rcl
mov
sbb
aad
jl
push
push
fisubl
and
jl
mov
bound
pop
jns
loopne
rcr
inc
pushf
fcompp
mov
std
loopne
pop
outsl
movsl
xchg
inc
ds
push
enter
ficompl
das
out
dec
scas
jecxz
xor
mov
dec
mov
or
push
mov
cld
push
sub
mov
pop
shl
sti
sbb
test
mov
ja
int
xor
pushf
jle
call
daa
or
adcb
pop
pop
sub
lods
and
lods
sarb
aas
xor
cmp
cmp
hlt
mov
push
mov
imul
popl
jno
inc
cmp
scas
fwait
add
push
fsub
sub
inc
nop
pop
imul
cmp
inc
iret
sbb
jmp
icebp
mov
dec
aas
push
les
xorb
add
xchg
in
fdivs
fs
mov
pop
cmp
rolb
xor
jle
in
sub
dec
mov
xchg
rcrb
mov
subb
add
mov
mov
push
icebp
mov
cltd
mov
push
shll
dec
jp
ss
inc
mov
mov
sbb
dec
sbb
jbe
jns
pop
aaa
test
and
sbb
adc
xchg
pop
clc
adc
icebp
gs
cs
or
inc
push
cmp
mov
or
mov
cmovae
inc
jl
mov
movsl
rcr
cmc
sub
mov
lea
cmpsb
add
xlat
xchg
mov
fucomp
sub
xchg
mov
mov
mov
and
dec
loop
cli
pop
cmp
outsl
pop
jae
test
sub
shlb
jnp
out
push
pop
data16
pop
sahf
lods
roll
and
cwtl
lahf
inc
jnp
aad
pop
imul
and
push
or
jnp
movsb
movsb
cs
scas
rolb
mov
xor
or
or
shrl
outsl
sub
lock
mov
stos
movsb
or
cltd
pop
sbb
fsubl
xchg
cwtl
scas
adc
pop
popa
test
cwtl
int
dec
in
adc
jecxz
ss
jg
mov
cli
push
xor
add
movsl
sub
nop
add
add
jnp
cmc
jp
jno
insl
stc
cmpsl
xchg
mov
inc
fimuls
and
jge
mov
and
jle
test
fisttpll
lcall
stos
lret
sub
lcall
in
adc
pop
xchg
cmp
xchg
jmp
or
shl
in
xorb
jle
clc
or
clc
sbb
add
cltd
mov
adc
sahf
inc
mov
test
fcomp
dec
inc
movsb
xchg
loopne
lret
mov
repz
adc
and
sbb
aaa
test
cmpl
and
sbb
outsl
push
ja
std
cmpsl
in
insb
loop
out
push
nop
push
mov
jmp
and
inc
call
fisttpl
gs
into
pop
hlt
and
inc
cwtl
idivl
loop
dec
inc
adc
mov
cmp
rcrb
lret
sti
xor
pop
push
andl
bound
inc
js
push
in
xchg
xlat
ja
ret
jb
int
iret
in
adc
popf
pop
pop
inc
xchg
pop
push
jno
jo
loopne
pop
xor
repnz
ret
lock
adc
out
add
in
js
adcb
jge
les
adc
fs
sbb
inc
jp
loop
js
pop
jbe
push
int
mov
into
jnp
mov
push
xchg
scas
jp
loopne
xchg
adc
mov
mov
test
inc
or
jb
decl
mov
pop
fistpl
sub
cmpsl
inc
sub
nop
pop
push
fwait
int
loope
cmpsl
sti
inc
jp
enter
pop
mov
xchg
push
cs
clc
jae
xchg
std
pushf
cld
sarl
inc
dec
fdivs
mov
cmpl
mov
cmp
aad
jg
aam
pop
out
mov
sbb
jne
add
fwait
loopne
cmp
les
in
les
cmp
sahf
out
inc
sbb
out
cmp
ljmp
cs
int3
jl
fxch
jae
mov
adc
mov
frstor
clc
xor
adc
dec
jno
xor
mov
xchg
pop
push
add
lahf
cmp
icebp
pop
push
mov
push
out
insl
insb
hlt
sbb
push
test
dec
cmp
jne
mov
aam
mov
push
mov
cmpsl
ljmp
pop
cmp
adc
scas
adc
adc
dec
lods
ret
jns
sarb
push
xor
add
jmp
sbb
jo
in
arpl
mov
jbe
xchg
add
xchg
fcoms
fwait
xchg
sub
leave
and
jne
mul
sub
test
loopne
ljmp
std
repz
loopne
out
sbb
es
pop
and
jno
inc
jno
xchg
repnz
jl
movsl
xor
push
jge
ret
push
push
cmp
popf
xor
mov
xchg
sbb
loopne
dec
add
cmp
mov
jo
mov
lea
iret
inc
pop
cs
push
out
cmpsl
mov
lods
int
test
jl
xor
pushf
or
xchg
mov
out
call
jecxz
scas
cli
push
add
jno
data16
in
push
dec
or
gs
dec
sub
push
sbb
pop
aad
rcll
mov
push
xchg
push
std
xchg
mov
movsb
jno
adc
fldenv
out
data16
movsb
push
std
rcrl
mov
dec
out
mov
xor
mov
out
or
aam
sbb
dec
inc
inc
icebp
sarl
jmp
jo
cld
xchg
mov
lret
add
or
aaa
popa
fnstcw
cmp
add
cmp
das
sti
jle
pop
popf
inc
aaa
scas
mov
iret
mov
cmc
or
sub
rorb
xor
jecxz
rol
insb
enter
lret
faddp
movsb
pop
fldenv
out
inc
imul
movsl
and
sub
aaa
mov
dec
in
lods
inc
sub
jmp
jge
orl
int
push
dec
sbb
pushf
sub
ret
push
push
imul
pop
in
test
push
cmp
or
mov
mov
aam
push
sti
frstor
push
or
inc
pop
mov
lcall
xchg
cmp
add
dec
jnp
repnz
or
fldl
fmuls
mov
sub
ret
or
fstp
lret
icebp
sti
into
pop
mov
fdivrs
add
inc
dec
loopne
jle
and
mov
lods
xor
cmp
cmc
cmp
push
sbb
bound
daa
inc
adc
loop
push
fdivrl
jp
and
sub
xchg
xchg
repnz
std
test
ds
test
cltd
and
ds
test
jp
mov
mov
push
popf
pop
outsl
out
jge
adc
jge
push
jno
bound
andl
cmpsb
cmp
jb
jne
test
adc
in
dec
pop
out
jbe
mov
push
lahf
popl
cmp
or
bound
arpl
lahf
cs
dec
minps
repz
enter
popf
mov
dec
jl
jge
icebp
loop
icebp
out
dec
fistl
popf
repz
xchg
or
in
jmp
sbb
sti
dec
and
mov
inc
and
cld
xchg
leave
sbb
sar
mov
cmp
cmpps
add
mul
mov
xorl
and
push
pop
nop
negl
orps
pop
js
sub
ret
pop
out
shl
mov
repz
xor
dec
gs
lahf
cmp
jo
addr16
pop
cmp
pusha
pop
adc
or
mov
push
cmpsb
jge
cmp
dec
pop
mov
lcall
stos
xor
xor
bound
adc
adc
pushf
leave
out
mov
scas
adc
jbe
pop
adc
cmp
adc
dec
inc
ljmp
movsl
out
cld
loope
xchg
lock
mov
dec
cmp
dec
lods
into
jecxz
pop
sub
sbb
in
or
push
test
out
pop
mov
and
pop
mov
mov
mov
xor
pop
lahf
mov
push
xlat
fldenv
stos
test
jbe
adc
std
outsb
stos
and
scas
aas
mov
xor
cmp
stos
subb
sti
stos
dec
jns
push
fs
or
ficoms
add
pop
ficompl
jns
cmpsl
inc
mov
adc
dec
xlat
inc
rol
clc
out
lret
inc
xchg
xchg
loop
idivl
ret
mov
mov
fimuls
enter
jp
inc
outsb
xor
rolb
orb
mov
pop
adc
lods
das
cmc
lret
lret
rolb
sub
ja
push
in
inc
cld
push
loopne
aaa
adc
jge
je
lea
fs
fwait
repz
scas
push
xchg
popf
aas
dec
sub
ffreep
popa
pop
mov
out
aad
roll
xor
mov
fcompl
pop
in
xor
push
jne
jmp
ss
cmp
cmovnp
cs
mov
dec
sub
fnstenv
cmp
dec
pop
add
pop
mov
xor
jb
sub
adc
mov
jmp
lcall
pop
loop
mov
jbe
int3
cmp
sarb
les
lods
fnsave
cmp
bound
daa
out
pop
loop
lcall
je
nop
into
mov
orb
mov
mov
aas
xor
or
int3
sub
dec
xor
arpl
xchg
loope
xor
sub
jp
xchg
xlat
dec
inc
push
aas
loopne
pop
mov
ljmp
xlat
shll
mov
add
outsl
loop
sti
cmp
mov
sub
pop
pop
sbb
movsb
sub
iret
outsb
mov
pop
andb
in
aad
sti
imul
adc
cmp
sbb
push
fldenv
add
jmp
jg
ljmp
pop
xor
mov
dec
out
imul
shrb
enter
mov
cmp
xchg
insl
dec
push
fcompl
ret
or
pop
sub
fdivs
std
sbb
lcall
cld
push
scas
hlt
jle
pusha
xchg
popa
pop
mov
ds
es
or
push
add
push
add
dec
repnz
inc
mov
sarl
pop
xorl
repnz
out
cld
sahf
loopne
sbb
cmp
test
sbb
inc
shl
lret
stos
hlt
add
jns
sbb
jmp
loop
cmc
leave
lret
fwait
addr16
outsl
mov
mov
popf
into
push
pushf
inc
mov
mov
jmp
xor
and
lea
je
sub
mov
mov
dec
jl
inc
shrl
cli
xor
cmpsb
ret
mov
mov
push
lea
mov
je
mov
push
ja
dec
dec
sbb
jo
dec
ja
mov
and
jae
xlat
xor
test
add
int
popf
andl
fnsave
rdmsr
es
mov
scas
and
cmp
sub
fsubl
push
fidivs
adc
and
sub
push
outsl
ljmp
inc
lcall
push
rcr
push
mov
test
movsb
bound
and
roll
or
ficoml
mov
mov
lock
xor
mov
iret
inc
in
jp
fmuls
test
jmp
subl
sarl
les
rcl
es
in
repz
call
leave
into
in
cld
mov
dec
mov
xchg
push
mov
sub
inc
jmp
es
packssdw
mov
mov
loop
or
test
hlt
sbb
mov
divl
cmpsl
nop
sbb
jo
mov
dec
cmc
inc
js
scas
or
sti
sbb
pop
and
hlt
or
xor
jns
jl
push
push
popl
popf
cmpsl
cmp
out
mov
xchg
xor
jb
mov
ja
or
leave
popf
fildll
cmpsb
mov
scas
ja
push
clc
xchg
jg
mov
inc
cmpsb
fdiv
mov
out
or
inc
orl
xchg
mov
jbe
xor
and
ljmp
loop
test
jne
sbb
pop
push
xchg
push
aad
test
mov
shlb
cmpsl
roll
daa
mov
cmp
rcll
xchg
test
add
and
sahf
mov
xor
jmp
jno
dec
into
pushf
sar
mov
aam
jbe
out
push
jp
iret
pop
insb
dec
push
pop
mov
dec
inc
inc
xor
rclb
sub
pop
xchg
int
add
jbe
push
icebp
test
lret
js
xchg
sbb
nop
mov
sbb
stos
push
adc
lret
out
loop
jo
xchg
jb
and
int3
out
and
test
jp
mov
lods
adc
push
cmp
push
pop
fiadds
pop
sub
or
addr16
fists
adc
xchg
mov
add
lcall
inc
xchg
and
popa
ds
pop
vminsd
mov
arpl
aas
jno
mov
and
jo
mov
push
jmp
insb
aaa
adc
mov
mov
push
ja
js
and
idivb
test
stos
sbb
gs
clc
das
out
je
loope
mov
mov
shr
dec
push
cmp
mov
shlb
std
jmp
lods
xchg
fldcw
jmp
mov
mov
cmp
mov
cmpl
xchg
loope
repnz
fcmovnb
mov
aas
lret
cmp
adc
xor
test
insl
pop
clc
stc
cmp
xchg
cltd
enter
mov
data16
add
ret
enter
push
cs
enter
adc
ljmp
mov
mov
mov
rcr
mov
pop
loop
aas
shlb
add
or
mov
repnz
mov
and
mov
mov
jne
mov
test
test
testb
cmp
cmp
shlb
aam
cmpl
shl
loope
sub
fdiv
xor
cwtl
mov
pushf
pop
shll
mov
cmp
jp
jne
add
ret
pop
jl
daa
negb
xor
and
mov
dec
inc
aad
imul
shrb
xchg
jecxz
std
add
or
sbb
and
leave
dec
pop
pop
lods
dec
sbb
or
sub
push
rol
loope
mov
js
push
es
loop
or
and
jne
popf
inc
std
cmp
cld
inc
movsb
scas
xchg
ljmp
jl
call
mov
out
inc
adc
dec
xchg
jno
inc
out
mov
addl
and
scas
push
adc
sbb
mov
out
cmc
int
je
mov
xor
cld
and
repnz
dec
jo
imul
in
sub
je
sub
add
cwtl
and
mov
mov
ret
in
lds
test
mov
adc
adc
orl
adc
sbb
test
or
cmp
scas
push
fiaddl
push
adc
jmp
inc
mov
int
cmpsb
mov
stos
inc
stos
shlb
nop
into
mov
push
shl
rcrb
jmp
mov
int3
pusha
sti
icebp
daa
inc
sub
inc
xchg
lods
loope
jmp
fidivrs
pop
xor
xor
adc
or
push
or
shlb
jmp
xchg
arpl
or
jno
push
jo
dec
lret
fistpll
fsub
test
jmp
cmp
aas
mov
dec
outsb
xor
push
incl
int
dec
js
xor
daa
push
loope
xor
stos
push
scas
jns
fcompl
xchg
or
mov
jo
dec
pop
push
cmovo
and
xor
xor
and
pop
cmp
xchg
rorb
popf
push
add
lods
loopne
mov
mov
and
sbb
fbld
call
mov
adc
xchg
mov
dec
cld
fidivrs
xchg
pop
xor
jge
cmp
sbb
into
popf
scas
leave
out
fisubl
nop
test
arpl
or
mov
xor
sbb
sbb
push
mov
adc
popf
jecxz
push
cli
std
lcall
pop
inc
sub
sbb
gs
add
and
mov
stos
push
mov
aas
pusha
pushf
out
add
jecxz
into
xchg
stos
je
clc
cmp
in
mov
loope
xchg
add
cmp
inc
dec
pop
sti
faddl
dec
cmp
ds
inc
jb
repnz
outsl
jle
push
test
out
fsubl
dec
in
inc
loopne
out
cmpsl
cmp
mov
sbb
sbb
sbb
dec
out
dec
int
gs
pop
fsubr
pop
adc
movsb
negl
inc
test
push
adc
add
loopne
fucomp
adc
out
cwtl
cltd
movsb
js
test
push
inc
bt
inc
sub
and
mul
add
cmp
pop
sti
dec
and
ret
xchg
imul
outsl
test
jnp
ss
js
cmpsl
jg
loop
pusha
cmp
sbb
jge
xchg
sub
mov
pop
inc
je
mov
and
mov
or
inc
inc
scas
dec
imull
dec
mov
rclb
jae
and
xchg
test
jl
mov
test
jb
or
xor
cmp
sub
popa
mov
add
cli
mov
or
stos
dec
ficompl
and
xchg
push
ss
push
aad
mov
mov
jge
fwait
sub
cmp
jb
mov
adc
stc
loopne
insl
cld
in
leave
cmc
sahf
xor
addl
aas
mov
xor
add
ss
andl
mov
mov
andl
fwait
xchg
pop
aaa
daa
rolb
jnp
mov
sub
arpl
or
mov
hlt
ror
push
mov
pusha
pop
out
subb
rep
sarb
insb
mov
pop
ret
xor
nop
rol
ficompl
test
in
adc
lock
xchg
call
pusha
scas
aaa
stos
outsb
out
dec
mov
sbb
push
xor
pop
and
xor
scas
xor
xchg
mov
dec
gs
mov
mov
xor
imul
adc
xchg
mov
pop
ret
into
sub
mov
mov
jge
mov
or
jge
dec
lds
inc
rol
and
in
or
int3
xlat
push
popa
gs
sti
mov
repnz
push
mov
es
xor
insb
or
out
clc
mov
and
pop
stc
xchg
jg
xchg
movsb
lods
jg
and
mov
in
imul
pusha
mov
js
loopne
and
fld
test
sti
cmp
ficompl
inc
fisubl
push
and
cmp
push
mov
dec
fucomp
add
xchg
xor
cli
sub
xchg
test
or
insb
cmp
sub
jl
xor
sahf
mov
mov
lretw
mov
out
sub
daa
sbb
cmp
test
pop
loop
jmp
fwait
out
mov
mov
mov
jbe
mov
std
les
rclb
cmc
dec
stos
push
aam
cld
mov
icebp
repz
sbb
sub
scas
xchg
shr
sbb
addb
loope
mov
or
jo
mov
mov
repnz
mov
xor
mov
push
dec
aaa
jle
nop
mov
out
sahf
iret
je
inc
fisttpl
sar
xlat
push
push
adc
push
xchg
enter
dec
sbb
inc
inc
loop
cmpsb
add
cmp
std
les
mov
addr16
jmp
scas
in
std
and
pop
pop
dec
es
dec
pop
inc
and
cld
add
shll
test
add
icebp
xor
insb
movsb
dec
and
sub
dec
and
outsl
xchg
fstps
fisubl
hlt
dec
pop
dec
ljmp
mov
jmp
inc
into
icebp
or
pushf
iret
jmp
movsl
std
mov
dec
int
sub
stos
arpl
enter
push
or
push
add
idivb
jmp
fists
fwait
push
jge
aam
in
ds
xchg
les
xchg
inc
outsb
ss
loopne
inc
jp
loope
jbe
sbb
lcall
mov
xchg
cmc
outsl
inc
xor
fsubrl
sarl
inc
sbb
xchg
or
mov
adc
call
fxch
xchg
shrl
jb
int
mov
adc
pop
das
fs
xchg
xchg
out
adc
mov
sbbb
fs
and
and
ret
test
icebp
subl
cld
sub
add
and
jecxz
jns
sahf
imul
insb
ret
ja
loope
inc
mov
jl
jmp
ficompl
jae
insb
inc
stos
pop
or
shll
scas
lret
mov
addr16
and
fmulp
mov
sbb
or
or
push
and
repz
fs
fists
pop
xchg
xchg
rolb
movsb
aas
pushf
int
mov
popa
nop
xchg
insb
mov
subb
stos
ds
fiaddl
or
adc
or
cmpsb
mov
and
add
jno
aad
jns
jl
lea
mov
int3
xor
mov
push
iret
cmpsb
sbb
xor
aad
jns
sbb
mov
inc
push
push
idivl
xchg
call
push
xchg
mov
mov
or
jmp
xor
add
into
bound
pushl
stos
ret
daa
mov
push
divb
cmp
aas
cmc
shrl
enter
push
inc
add
or
dec
jo
adc
rcrl
xor
pop
in
int3
je
mov
lea
pop
pop
testl
sub
pop
sub
test
pop
lcall
dec
out
lods
mov
jbe
scas
adc
rolb
jmp
jp
jecxz
in
inc
lret
cltd
adc
jmp
popa
sbb
add
jbe
stos
jmp
jne
xor
stos
lds
shlb
mov
loop
xchg
pusha
test
jae
adc
stos
fldl
mov
dec
shrl
cwtl
gs
ret
xchg
pop
or
testb
subl
daa
xor
mov
ss
lret
mov
cmp
test
fidivs
sub
test
add
or
scas
outsb
ljmp
xor
or
push
imul
and
sbb
cmp
adc
mov
mov
inc
out
movsb
sbb
cmp
inc
add
inc
fnstenv
mov
pop
mov
sbb
aaa
call
pop
sub
stos
insl
imul
mov
inc
pop
and
jne
fs
pushf
ds
movsb
pop
dec
add
cmp
adc
jmp
mov
or
jecxz
rorl
ffree
push
sub
insb
stos
xor
push
mov
imul
inc
jp
mov
test
sahf
and
fnclex
push
sbb
cmp
sbb
mov
inc
mov
ret
adc
dec
mov
shrl
in
call
xchg
xor
push
xor
rclb
or
loopne
or
push
mov
and
jne
mov
push
loopne
jp
sbb
fxch
pop
pushf
xor
int3
cli
inc
fsubrp
inc
jmp
mov
inc
pop
add
mov
mov
lret
insl
adc
pop
inc
or
adc
add
and
test
xchg
push
shlb
repnz
add
shlb
push
inc
pusha
in
stc
pop
mov
into
movsl
lahf
jecxz
push
cmc
jle
or
notl
pop
mov
push
dec
std
xlat
ret
cmp
jl
ret
mov
divl
lock
testl
push
push
outsb
ret
fsubrl
xchg
popa
lcall
and
and
or
push
sbbl
mov
ret
sbbl
mov
insl
cwtl
adc
push
jbe
push
mov
loope
jp
sti
push
daa
fldenv
xorb
not
jae
call
jl
clc
stc
test
cmp
dec
push
loope
pop
mov
insl
push
loop
sbb
into
jl
or
repz
and
out
mov
mov
cmpsl
adc
lds
inc
lret
ja
daa
push
int
xchg
cmp
jl
popf
ss
jne
fwait
and
cmp
xor
inc
inc
xor
sub
dec
loope
aad
jbe
ret
pop
xor
jmp
ret
pop
xchg
jbe
inc
adc
jbe
js
add
add
adcl
or
mov
icebp
sbb
stos
hlt
ds
ror
imul
imul
and
mov
test
lock
mov
sbb
cmp
and
jno
jl
xchg
popf
inc
xorb
out
ljmp
mov
loope
push
leave
cmp
inc
out
sbb
mov
mov
xor
jl
sub
xor
cwtl
nop
pop
arpl
add
aam
loop
jge
sub
lods
pusha
jb
test
add
fdivrl
jne
arpl
sbbb
add
pop
in
insl
movsl
jnp
test
clc
les
jl
insb
and
test
leave
imul
std
scas
mov
mov
sahf
jle
das
dec
in
dec
xchg
dec
sub
cmpsl
int3
fstpl
loope
test
gs
mov
adcl
push
imul
mov
adc
int3
rclb
js
je
cmp
mov
mov
push
inc
imul
adc
and
cmp
out
in
ljmp
lea
pop
and
daa
outsl
pop
and
outsl
inc
sbb
sub
xlat
cmp
test
fsubl
jge
fcomp
push
jmp
inc
dec
arpl
jmp
sbb
mov
repz
daa
xor
fistl
es
pop
dec
xlat
sbb
enter
shll
inc
loope
pop
adc
xlat
pop
mov
pop
mov
pop
iret
push
repnz
jo
fistps
jne
and
cld
adcb
pop
fists
aas
call
dec
pop
je
in
add
test
mov
fldt
push
xchg
xor
dec
mov
js,pn
xchg
sbb
out
jns
pusha
push
push
sahf
mov
icebp
mov
les
xor
mov
mov
mov
add
aam
mov
les
aaa
and
out
jne
xor
lret
mov
adc
ror
movsl
aad
jecxz
imul
push
rorb
cmp
mov
xchg
stc
push
sub
test
cmpsb
imul
andb
xor
mov
mov
add
pop
gs
mov
pop
ret
insl
sahf
sbb
test
cs
xchg
cmp
add
das
xor
out
mov
sub
xchg
roll
cmp
mov
test
aaa
loope
sarb
ret
ja
dec
ds
daa
ret
inc
dec
call
out
push
bound
fbld
cmp
in
cwtl
adc
lock
push
or
jae
jmp
or
adc
mov
dec
mov
pop
add
cmp
insb
in
fnstsw
ljmp
or
test
pusha
adc
repz
add
inc
addr16
imul
mov
fcomip
mov
gs
jecxz
mov
push
push
or
sbb
dec
lret
and
movsl
cmp
mov
negb
sbb
shlb
inc
rcrl
pop
xchg
jne
jl
pop
shll
jp
xor
jns
xor
ror
mov
mov
mov
inc
gs
sub
xchg
shll
cmp
adc
loopne
popa
enter
jecxz
jg
pop
pushf
fldenv
xchg
popf
xor
fsubrl
and
lcall
shrl
dec
dec
adcl
pusha
pop
arpl
mov
inc
mov
in
dec
push
jns
cwtl
arpl
popa
mov
pusha
push
xchg
bound
js
xchg
inc
mov
sti
cmp
add
pushf
into
hlt
fistpl
jbe
faddl
repnz
dec
jbe
jmp
pop
lds
inc
cmp
mov
dec
loopne
dec
adc
fidivs
dec
inc
popf
mov
or
inc
or
inc
scas
ss
out
xor
mov
pop
or
insb
addr16
inc
sbbb
pop
pushf
pusha
push
inc
js
xchg
ret
dec
mov
shlb
cmp
std
aaa
push
shl
and
pop
jge
ljmp
push
aaa
inc
sub
lods
mov
mov
sbb
inc
cmc
xchg
jg
mov
lods
mov
adc
mov
dec
shl
ljmp
and
add
inc
mov
pop
sub
jmp
inc
or
cltd
mov
scas
xchg
orl
cmp
xor
xchg
xlat
or
mov
outsl
shlb
or
imul
add
dec
jns
push
dec
ror
add
cltd
mov
cwtl
cmpsl
xor
sbb
add
dec
dec
in
or
hlt
pop
push
mov
popa
pop
sub
dec
mov
leave
ljmp
stc
aas
xchg
mov
mov
pop
insb
sbb
adc
sub
int3
xchg
xchg
mov
xchg
test
inc
cli
jg
lret
mov
sbbl
stc
addr16
add
xor
cmc
sbb
mov
xchg
sti
int3
cli
fistps
inc
or
and
imul
test
xchg
add
sub
fs
pinsrw
test
xchg
out
and
outsb
jp
xor
lret
enter
mov
and
subl
mov
pop
in
mov
jb
xchg
int3
lea
mov
pusha
push
push
stos
mov
fcoms
sbb
push
pop
dec
mov
inc
bound
jne
lods
outsl
xchg
fwait
sar
xor
pop
enter
inc
xchg
test
xor
xorb
push
and
push
nop
cmp
lea
xchg
mov
sbb
xor
sub
xchg
sbb
dec
mov
movsb
cs
pop
movsb
cmp
sub
xchg
jns
mov
pop
sub
dec
loopne
adc
xchg
add
jb
mov
xor
cli
xchg
or
addr16
stos
aad
and
std
cmpsl
mov
in
cmp
mov
mov
cmp
imul
lret
cmp
daa
pop
test
and
pop
push
js
inc
mov
dec
leave
inc
jmp
push
jmp
in
add
xlat
lods
ds
orl
in
cmp
call
sub
mov
in
flds
pop
movsb
xchg
sbb
jns
pop
jno
ret
stc
sbb
ss
sub
test
push
jae
scas
popf
rcl
pop
imull
push
loop
xchg
pushf
shl
lret
divl
mov
push
sub
nop
out
movsb
inc
mov
mov
and
and
xor
add
mov
test
clc
push
dec
xchg
mov
incb
stos
mov
pop
sub
and
dec
insb
es
fnsave
push
shr
add
xchg
test
sub
dec
mov
imul
push
xchg
sbb
fxch
inc
pop
jp
lret
cli
mov
rcl
xor
jp
add
adc
test
mov
in
push
dec
sub
cmp
pop
es
jb
push
mov
fcmove
lret
lahf
jmp
imul
sub
addl
fildl
push
je
sub
enter
popa
int3
and
sub
jge
lret
cwtl
cmp
out
loop
out
test
and
xor
mov
mov
sub
ljmp
adc
pop
insl
stos
jne
std
icebp
in
xor
shrl
stc
xor
jecxz
jecxz
and
call
dec
js
es
enter
out
xchg
inc
subb
dec
loopne
rcl
imul
sub
out
cld
sbb
dec
iret
mov
dec
mov
ljmp
lock
daa
jbe
shlb
jns
aas
fcomps
bnd
sub
mov
dec
jb
mov
repz
insl
jb
aad
jnp
mov
cmc
push
pop
sub
mov
and
push
addr16
or
out
mov
adc
cmp
aas
cmp
mov
lret
xor
rorb
push
loopne
add
adc
jns
xor
mov
add
enter
aad
mov
mov
js
sarb
pop
and
inc
push
mov
or
xorb
fstp
shrb
cwtl
pandn
pop
mov
jmp
loope
lret
cli
imul
push
inc
push
lahf
jl
ret
mov
ja
xchg
cli
sbb
inc
icebp
shrl
add
test
rcll
dec
enter
dec
pusha
ja
sahf
lcall
call
or
out
popa
adc
movsb
leave
les
rcrb
mov
inc
xor
outsl
dec
lock
lret
hlt
mov
in
cld
cmp
int3
push
jge
fimull
lods
mov
push
xchg
leave
pushf
add
jb
xchg
inc
aad
lret
adc
test
cmp
repnz
mov
push
dec
test
aad
inc
xchg
sub
adc
enter
and
pop
or
jecxz
sbb
add
pop
add
mov
iret
adc
mov
rolb
pusha
xchg
sbb
in
inc
stos
cmpsb
jbe
cmp
or
and
fs
xchg
stos
xchg
pop
add
pop
fsubrs
loop
loop
xchg
cltd
sub
push
test
pop
into
les
xchg
out
pop
mov
sub
pop
inc
fistpl
xchg
pusha
ljmp
jmp
mov
leave
imul
jge
insl
xor
push
pop
cmc
pop
ljmp
xchg
inc
push
inc
bound
cmpsl
mov
add
popf
les
scas
mov
lods
jne
or
jle
xor
push
push
adc
xchg
cltd
sbb
or
imul
clc
dec
pop
and
stos
sbb
inc
xor
fidivl
mov
stc
ja
lret
mov
lcall
push
or
and
dec
mov
addr16
sbb
lods
aad
jnp
mov
divl
sub
daa
adc
stos
jge
sti
stc
scas
dec
dec
cld
and
ja
cmp
mov
gs
xchg
sbb
add
clc
xchg
inc
fxtract
mov
cld
inc
lahf
jle
mov
arpl
mov
cs
shr
sub
pop
sarb
xlat
xchg
stos
inc
test
pop
cli
rclw
test
mov
pop
pop
mov
lock
repz
mov
cltd
add
push
rcl
outsl
jecxz
push
xor
cli
add
push
gs
les
pop
add
imul
addl
xor
rcrl
lods
out
cld
cmp
pop
imulb
mov
pop
xor
sub
add
pop
cmp
shrl
xchg
push
dec
jle
or
or
push
movsl
into
push
dec
shrb
add
and
les
fcomps
outsl
push
es
pop
xchg
roll
mov
in
lods
popa
mov
popa
ljmp
rorl
add
int3
push
movsl
xchg
out
iret
addl
xorb
insl
mov
pop
pop
jns
mov
out
shll
adc
stc
fmuls
sbb
xor
lret
jecxz
ret
dec
cltd
das
mov
pop
sub
adc
push
jo
mov
jns
xchg
sbb
outsb
repz
push
popf
add
or
mov
xchg
xchg
mov
push
add
cmp
xor
xchg
enter
nop
cmp
mov
mov
push
jmp
rorl
popf
daa
hlt
aaa
pushfw
mov
test
sarl
shll
lret
gs
jbe
mov
jmp
push
ds
lret
jae
mov
cmp
int3
fildll
iret
push
leave
inc
xchg
popa
and
or
test
push
enter
mov
mov
or
sub
sub
inc
mov
inc
jnp
cwtl
add
fisubl
fdivrs
insl
test
pop
add
jmp
lcall
stos
xchg
mov
in
xchg
scas
les
adcl
sbbl
fcmove
popf
sbb
push
in
outsb
repz
ret
insl
shrb
das
out
test
and
mov
add
add
dec
or
sbbl
fildll
cmpsb
ja
push
addr16
mov
sub
mov
add
adc
or
pop
dec
std
pop
das
push
mov
sub
in
fildll
xchg
leave
fnstcw
dec
enter
movsl
roll
mov
pop
add
mov
adc
or
adc
fadd
in
xor
mov
cmp
xchg
iret
jo
push
test
mov
push
inc
in
aaa
xchg
outsb
or
push
or
lahf
mov
aas
pusha
cli
mov
or
out
sub
xchg
les
sbb
xchg
mov
lcall
aaa
sbb
cld
xchg
mov
insl
clc
pop
dec
adc
cmp
imul
dec
push
rcrl
inc
push
xchg
icebp
cmp
xchg
mov
jne
popf
lcall
xlat
aas
adc
fisubl
and
sub
cltd
pop
jmp
scas
mov
jno
jo
loope
adc
mov
dec
push
or
dec
ss
xchg
and
push
mov
out
push
test
out
adc
in
es
leave
mov
and
mov
roll
add
and
test
mov
sbb
loope
push
addl
jae
pusha
and
dec
push
in
fdivrs
shl
push
outsl
mov
or
inc
ja
xchg
popa
push
sti
mov
and
cmpsb
cmpsb
mov
jl
scas
pop
mov
sub
pop
sub
mov
add
inc
fs
shll
ficoml
stos
xchg
data16
add
sahf
sub
loop
jmp
sti
loopne
cmp
stc
sub
cmpsb
ja
hlt
xchg
loopne
mov
int3
adc
scas
push
mov
fs
jnp
push
fs
test
xlat
shll
in
leave
push
pop
cltd
xor
aaa
cli
adc
lahf
nop
adc
mov
out
fs
adc
mov
sub
mov
cmp
or
mov
cltd
add
adc
aas
pop
sbb
insl
sub
mov
push
or
fldt
pop
cmp
mov
lds
lret
lods
xchg
xchg
sbb
dec
shl
out
fisttpl
mov
mov
cmp
outsb
push
add
jmp
mov
xchg
ds
xchg
ss
cmp
mov
lcall
movsl
loope
insl
scas
pop
out
cmc
inc
je
dec
in
jl
pop
mov
test
nop
or
pop
adc
in
jo
fbld
push
mov
push
jne
cli
cmp
icebp
add
sbb
outsl
pop
pop
cs
push
add
cmp
inc
pop
sub
mov
add
mov
push
les
in
push
sbb
jmp
cmp
std
fsubs
and
push
push
shrl
mov
inc
add
sub
mov
push
sti
sbb
fwait
mov
int
mov
shl
and
xchg
add
xchg
lock
lods
xor
push
lahf
mov
jno
nop
mov
sub
ja
lock
jge
std
push
mov
push
fcoml
xchg
jl,pn
icebp
xchg
subb
mov
fidivs
cs
roll
test
jl
pusha
push
mov
jp
stos
push
fimuls
out
aas
push
xor
pop
add
sahf
push
sti
movsl
mov
leave
insl
jns
enter
lret
adcl
dec
pushf
sbb
or
bswap
mov
scas
out
sbb
cld
dec
inc
sbb
bound
mov
jg
outsl
push
out
cmp
lahf
mov
and
mov
icebp
xor
stos
iret
pop
loop
or
pop
jno
jge
cmp
xor
cli
frstor
jl
loope
mov
xlat
ljmp
xor
out
lret
ds
insl
std
lock
xchg
jge
aad
std
popa
mov
cltd
xchg
fwait
fs
adc
dec
test
jle
or
push
cmp
mov
lcall
cmpsb
call
xchg
out
sub
sbb
cs
add
and
jp
dec
lret
lods
sbb
jl
push
pop
mov
sub
cmp
in
arpl
inc
loop
pusha
jecxz
sbb
xor
xchg
dec
lret
xor
sbbb
test
pop
fs
mov
sbb
and
adc
aas
push
mov
cmp
sahf
jno
sbb
fiadds
mov
mov
mov
sbbb
sbb
lret
fistpll
dec
outsb
pop
mov
pop
xchg
out
pop
xor
mov
jge
pop
mov
xchg
lret
int
shrb
add
insb
dec
clc
push
or
std
test
ds
push
cmpsl
mov
jo
cmpsb
mov
out
push
jae
shll
mov
lcall
pushf
cmpsl
and
mov
in
xor
outsb
xchg
insb
xchg
aad
imul
fsubr
and
sub
pop
cltd
cld
and
push
loope
jbe
xchg
js
fisttpl
test
jae
push
outsb
xor
pop
xor
sahf
xchg
daa
shlb
pop
repnz
sub
arpl
test
push
push
fs
insb
xor
push
cmp
push
adcl
mov
int
xchg
mov
cmpsl
fnsave
rolb
or
mov
roll
adc
ret
outsl
out
sub
add
lea
mov
adc
mov
test
xor
and
add
mov
push
jae
icebp
cmp
or
sbb
cmp
daa
dec
sub
jno
pusha
fstpt
jne
pop
fcompl
out
popf
stos
cmpl
mov
jbe
mov
je
add
lret
jg
rcrb
cmc
aam
hlt
jbe
mov
mov
insb
inc
aas
xor
pushl
jecxz
jb
fldt
cmp
jmp
movsb
xchg
fdiv
pushf
mov
call
js
cmc
js
in
jmp
push
movsb
pop
outsb
fidivs
das
aad
jo
push
dec
mov
adc
mov
lock
adc
addl
cmp
inc
sbb
pop
popf
adc
mov
jns
mov
lods
lret
mov
mov
sarb
mov
dec
int
pop
in
cmpsl
pusha
loope
jge
int3
cmp
mov
insb
out
cmp
inc
add
mov
add
mov
cmp
xchg
push
test
pop
dec
mov
jns
or
fcmovb
pop
hlt
js
xor
push
inc
or
and
fistpl
sub
fldcw
cli
cld
inc
or
int
lods
push
inc
icebp
xchg
or
adc
es
mov
orl
call
inc
dec
icebp
in
mov
cltd
xlat
test
insb
ss
std
test
mov
sub
push
or
std
jl
xchg
sub
popf
mov
and
jo
insb
mov
aam
lcall
pop
mov
mov
jbe
js
and
pop
pop
push
dec
fs
jno
pop
orb
mov
cmp
pop
pop
jne
cmp
mov
jo
mov
in
lds
cmp
mull
shll
lock
insb
cmpsb
sub
sahf
pop
and
cmp
pushf
in
sbb
and
inc
mov
xchg
add
repnz
dec
or
popa
inc
add
iret
lock
cmp
mov
jae
jecxz
dec
push
or
into
lahf
fsubr
jb
push
dec
mov
std
jno
jp
jo
ret
jp
pop
or
add
pushf
jns
mov
shlb
inc
inc
adc
xchg
aaa
lds
xor
insl
out
inc
cmp
xchg
cmp
movsl
outsb
loopne
cmp
mov
push
and
sub
movsl
cmp
les
adc
xchg
pop
xchg
fbstp
ds
vpaddusb
pop
sub
jp
add
inc
negl
in
adc
mov
insb
sub
fdivs
xor
jae
rorl
repnz
shll
sarl
mov
add
lret
mov
movl
mov
sbb
int3
sbb
inc
loop
sub
ds
sbb
pcmpeqd
adc
cmc
xlat
loope
cld
add
in
or
push
mov
and
xchg
xchg
aam
jne
mov
daa
push
in
cld
out
sti
pop
mov
pop
push
mov
jno
repnz
lock
enter
test
lea
sbb
outsb
push
cmc
loope
fcmovne
inc
test
cli
xchg
pop
sbb
add
jo
jb
sub
xchg
push
push
cmp
pop
push
xor
popa
out
insb
jmp
and
jbe
push
pop
and
mov
in
clc
cmp
mov
lea
push
ljmp
gs
mov
xchg
sti
add
std
inc
mov
ss
inc
push
xchg
mov
jns
fstpt
inc
mov
or
inc
scas
sbb
pop
adc
pop
xor
inc
xchg
mov
push
mov
stc
and
xchg
gs
or
push
jb
gs
adc
dec
xchg
and
daa
push
xlat
pop
cmp
jne
jecxz
test
dec
cld
jo
xor
outsl
das
arpl
push
sarb
pushf
mov
ffreep
fwait
mov
adc
fstps
dec
pop
ss
xor
dec
lds
jg
xchg
movsl
cmc
mov
mov
inc
sub
sub
jne
test
add
pusha
mov
inc
mov
repz
sub
in
in
inc
push
test
or
pop
add
int3
aas
fstpt
mov
jnp
ja
outsb
cmc
or
and
cmp
mov
aam
jmp
mov
gs
repnz
mov
repnz
inc
lea
push
fwait
add
lods
hlt
arpl
push
jl
mov
mov
icebp
push
add
loope
mov
mov
and
dec
icebp
aad
inc
in
lahf
sbb
test
repnz
scas
insl
mov
fsubrl
or
push
rolb
xor
inc
mov
and
loop
xchg
xor
or
jmp
xchg
add
mov
sbb
shrl
add
nop
pop
xor
ja
cmp
adc
jecxz
xchg
mov
inc
sub
mov
mov
std
ret
gs
pop
in
jg
sub
aas
es
cmc
add
xor
jecxz
or
mov
inc
push
mov
mov
add
movsb
imul
pop
jg
lcall
sub
mov
inc
lock
fsub
test
ja
fnstenv
sub
imul
in
pop
dec
lds
cmp
adc
mov
xchg
push
mov
in
mov
add
lret
xor
addr16
jno
sbb
es
lret
adc
mov
or
loopne
mov
jl
add
cmp
xchg
dec
jo
cmpsb
std
cmc
sub
loope
lret
out
shrb
jb
jno
jo
push
sbb
jl
inc
cmp
add
daa
xlat
scas
outsb
stos
pop
push
mov
xlat
or
cmpb
mov
jg
mov
addb
enter
xchg
pop
sub
sub
xor
loopne
lods
xlat
pusha
push
jo
adc
ja
jg
xchg
inc
mov
rclb
fbld
sbb
shlb
lods
or
clc
fcompl
cmp
or
ret
adc
aad
repnz
clc
lahf
cmp
fstps
add
fdivl
dec
push
outsl
inc
imul
pop
push
iret
outsl
es
cmpsb
out
dec
cmp
stc
fisubl
dec
ljmp
sahf
pop
or
movb
jne
test
pop
cmpsl
test
sahf
fisubrl
sbb
inc
inc
fisubrs
jge
jmp
rorb
filds
pop
xor
sbbb
mov
dec
lods
xor
push
loop
fs
sub
add
shrl
fldenv
xchg
xchg
add
hlt
popf
repz
dec
pop
andl
jbe
dec
dec
mov
cmp
bound
inc
push
pop
cmpsl
or
xchg
ret
fabs
add
add
jb
mov
fisubrl
arpl
fistps
fistps
hlt
repnz
enter
mov
add
fildll
adc
inc
fdivl
mov
call
nop
fs
cmp
mov
and
cmc
es
or
xlat
jbe
test
testl
mov
insl
aas
adc
jo
or
sar
adc
push
adc
dec
pop
lea
pop
sub
rcr
hlt
outsb
in
fiaddl
fistpl
outsb
inc
pop
sahf
test
outsl
imul
imul
mov
scas
or
cmc
in
jmp
lcall
and
jno
loop
lds
dec
mov
mov
lcall
mov
or
aam
add
sub
lret
fsts
aas
je
jo
test
add
hlt
mov
clc
or
mov
lret
xlat
fisubl
xor
imul
out
add
adc
push
pop
adc
icebp
fwait
test
push
sbb
cmc
test
call
dec
test
jecxz
das
stos
cmp
push
sbb
int
int
orl
add
test
jp
imul
andl
pop
cmp
dec
pop
mov
aas
shl
sub
mov
xor
ror
jne
mov
test
lea
mov
shlb
adc
jno
adc
pushl
fyl2xp1
imul
jns
es
and
inc
cmp
je
xchg
popf
nop
nop
mov
pop
outsl
notl
andb
insl
jo
aam
add
into
inc
xor
and
loope
outsl
cmp
cmp
mov
cmpsl
jnp
enter
imul
pusha
mov
loope
xor
imul
jl
xchg
out
sbb
push
iret
xor
jmp
mov
sub
xchg
vmulps
cltd
lret
loope
jge
cltd
jle
fldl
jmp
cmp
stos
jmp
std
cmp
aad
std
xchg
addr16
in
ljmp
lods
lret
xchg
lret
iret
outsl
or
out
mov
push
sahf
mov
int3
ja
icebp
shlb
jbe
ja
mov
fistps
popa
fldt
je
and
push
scas
and
jp
lods
push
xor
dec
mov
js
psubb
xchg
shl
mov
and
daa
cmp
out
addb
inc
lods
pop
pop
push
dec
jl
js
push
inc
dec
stc
push
jnp
cmp
mov
pop
in
xor
sbb
xchg
mov
push
outsl
jp
call
mov
sti
stos
out
xchg
and
xlat
xor
aas
mov
inc
mov
and
insl
enter
sub
jo
mov
or
das
pop
lret
mov
pop
notl
lods
push
sub
enter
addr16
aas
imul
popf
dec
arpl
int
push
add
mov
jnp
sub
jnp
jl
pop
push
sub
xor
idiv
mov
inc
pushf
sbb
pop
insl
mov
sar
test
inc
sar
jecxz
lcall
pop
pop
xchg
enter
call
cwtl
clc
cmpl
mov
pop
cli
lods
shrb
inc
xor
test
mov
fnstsw
pop
subl
adc
call
dec
jmp
sbb
mov
and
cwtl
or
cmp
push
out
repz
aam
pop
out
sub
push
pop
push
fisttpl
adc
les
or
cmc
push
stos
mov
or
inc
mov
and
mov
pop
lods
popa
or
cltd
adc
jnp
add
repnz
filds
lods
hlt
or
mov
dec
aas
and
inc
jp
stos
pop
sub
mov
xor
lea
xchg
lret
dec
add
aaa
cmp
xchg
ljmp
and
mov
loopne
xchg
xchg
dec
dec
aad
ljmp
jge
dec
js
shll
and
faddp
lcall
pop
jns
xor
insb
jae
cli
out
sbb
inc
cwtl
jne
add
dec
test
lods
inc
std
mov
dec
loope
sub
mov
dec
lods
fldcw
dec
pushf
add
fistpll
xchg
xor
cli
stc
xchg
cwtl
mov
pop
cltd
sbb
dec
mov
dec
popf
pop
leave
imulb
loop
lsl
in
jns
inc
push
inc
or
push
xor
and
sarb
jle,pt
stos
cmp
jnp
mov
icebp
xchg
adc
int3
mov
movsl
jl
xchg
scas
loopne
repnz
pusha
rorb
xchg
testl
lret
scas
popf
xor
repnz
push
mov
lods
inc
cli
xchg
ja
gs
lods
lahf
rcrb
fcmovne
pop
je
xor
in
fucomi
cmc
cmpsl
sub
mov
mov
inc
cmp
jno
push
shll
sbb
dec
movsb
sub
fs
das
jg
mov
jo
jge
push
mov
xor
mov
push
sbb
daa
cmc
adc
arpl
fwait
inc
mov
dec
push
fldcw
outsl
out
sarb
pop
add
inc
dec
cmpsl
pop
jl
and
cmp
cmp
xchg
add
icebp
sub
or
push
dec
cld
stc
stc
popf
add
xchg
out
dec
or
push
mov
insb
nop
test
add
mov
dec
lds
push
xchg
adc
jg
lds
dec
xor
orl
add
dec
divb
gs
int
movnti
adc
pop
sbb
and
fcmovu
add
push
mov
lods
push
sub
aad
push
or
int
arpl
pop
adc
pop
mov
sub
leave
and
xchg
mov
push
mov
addr16
int
mov
imul
inc
out
cmp
cmp
inc
enter
ss
jle
mov
fdivrs
mov
dec
xchg
adc
dec
bound
sbb
idivb
pop
sub
mov
fistpl
pop
add
mov
adc
and
pop
push
push
sub
fdivl
push
dec
sub
out
lock
or
sbb
lcall
pop
cmp
add
fs
mov
testb
hlt
stos
adcb
inc
out
scas
xchg
leave
push
mov
or
jbe
push
cmc
mov
leave
or
ljmp
mov
lret
in
rclb
arpl
mov
andl
sahf
mov
xchg
or
mov
xlat
mov
pop
jmp
cli
das
inc
pop
pop
mov
aam
xchg
je
jl
cld
fs
inc
or
pusha
inc
add
and
loopne
aam
push
in
gs
mov
lea
lret
gs
jbe
stos
outsl
jno
xlat
pop
popa
push
fisttps
jle,pn
pop
push
jo
fnstcw
push
sti
pusha
push
sub
mov
test
fcoms
pop
outsb
sbb
out
mov
lret
addr16
sbb
push
call
pop
push
sahf
adc
dec
pop
lret
push
pop
sub
stos
gs
cs
fbstp
aaa
lahf
ja
xlat
divl
sub
xchg
frstor
arpl
les
mov
shl
mov
mov
stc
dec
mov
jb
cmp
mov
pop
cmp
mov
dec
mov
dec
in
das
in
pop
and
outsl
push
add
push
jnp
cld
mov
jbe
dec
jmp
mov
ljmp
xor
mov
pop
add
out
jle
add
rclb
aas
les
mov
or
sbb
in
insl
pop
sub
call
inc
sub
insl
lods
iret
sub
in
out
push
jnp
adc
out
fiadds
mov
sbb
dec
lods
popf
add
ss
sub
dec
int
dec
std
push
cmp
es
je
cmp
insb
sbb
data16
sub
lock
cmp
adc
imul
mov
cld
out
dec
inc
cmp
imul
shl
xlat
stc
into
sub
pop
sbbb
loop
loopne
popa
xor
mov
call
pop
sar
mov
xchg
leave
xchg
out
faddp
loop
sub
mov
imul
mov
hlt
pushf
mov
pop
loopne
mov
dec
push
sbb
mov
out
fistps
push
addr16
outsl
and
scas
js
cmp
and
or
insl
sub
xchg
cwtl
jo
xchg
lcall
mov
lds
or
hlt
mov
xchg
and
pop
sbb
loopne
lcall
cmp
fcompl
cmp
loop
pushf
mov
imul
or
pusha
dec
mov
rcll
ret
sbb
rorb
add
add
sub
and
adc
sub
test
rcr
outsb
cmpsb
or
inc
cmp
pop
es
daa
shlb
sbb
pusha
mov
xlat
fwait
repnz
test
int
call
les
mov
enter
aas
inc
xchg
mov
das
outsb
jnp
cmc
jle
mov
mov
icebp
dec
daa
inc
jbe
pusha
pop
and
inc
rolb
pop
mov
aam
pop
mov
insl
mov
or
out
sti
pusha
mov
loope
scas
clc
push
xchg
scas
sbb
jnp
std
into
loop
sti
push
int3
xchg
add
stos
push
adc
mov
pushf
lcall
imul
clc
dec
loop
mov
repz
and
mov
xor
sbb
lcall
cmp
xchg
sbb
lret
fmull
mov
xor
ret
into
push
imul
pusha
mov
cmp
dec
mov
or
cld
leave
jo
hlt
hlt
add
and
dec
push
inc
dec
cmp
add
loopne
inc
aaa
arpl
iret
cmp
or
iret
cmp
repnz
cs
mov
push
add
sahf
loope
call
xor
dec
jecxz
in
arpl
stc
and
int
and
loop
ds
mov
xchg
xchg
push
pusha
in
dec
xor
or
or
push
adc
call
mov
mov
dec
xchg
xchg
les
stc
ss
xor
ret
hlt
add
loop
icebp
mov
push
mov
mov
mov
sbb
repz
jne
into
jo
imulb
xchg
in
push
scas
movsl
cmc
adc
jg
mov
xor
ja
jge
push
pushf
lea
and
push
out
push
mov
add
dec
fidivl
shll
cmpsb
pop
outsl
js
fstpl
rorb
and
xor
popa
es
fbld
jle
mov
lahf
jl
into
add
out
push
lahf
scas
jg
mov
dec
dec
xchg
testb
lock
test
jns
clc
and
and
push
mov
ret
jl
jb
adc
scas
std
pop
fnstsw
mov
jge
je
sub
mov
or
xchg
aaa
and
mov
mov
add
pop
jne
pop
push
push
out
xor
jmp
cwtl
and
rcll
mov
and
call
sti
jmp
xor
inc
clc
xor
inc
iret
test
xchg
mov
fmuls
lods
mov
sar
and
jecxz
cmc
cmp
jle
pop
imul
xor
lahf
jmp
fnsave
pusha
xor
roll
lea
les
les
xchg
xlat
arpl
pop
push
icebp
inc
and
pop
sahf
pop
push
lea
clc
or
xor
loope
int3
adc
ljmp
xchg
clc
fistps
mov
fnsave
aad
pop
and
popa
xchg
adc
aam
dec
dec
int
fcomip
mov
dec
ds
jge
loopne
sahf
xor
pop
xor
ja
sub
outsl
sarl
flds
popa
mov
mov
stos
fwait
lock
mov
mov
jns
sub
xchg
pop
int3
xor
jmp
jp
movsb
mov
push
and
cmc
push
sbb
xchg
add
pop
jmp
mulb
popa
les
rorl
cmpsl
fwait
aas
or
bnd
push
push
scas
or
mov
dec
fadds
repnz
in
aaa
sbb
and
mov
out
dec
cli
cmpsl
test
mov
jp
lock
in
test
fcoms
or
xor
enterw
inc
cmp
ljmp
pop
push
hlt
dec
sti
sub
mov
fildl
add
out
push
hlt
mov
adc
add
cmpl
sahf
add
jg
jae
mov
mov
jl
add
push
int
clc
stc
aad
dec
addr16
stc
sbb
mov
pusha
negb
jecxz
scas
xor
cwtl
cmpsb
or
lahf
insl
out
fidivl
mov
fistl
pop
test
imul
inc
popf
dec
dec
sti
xchg
std
sbb
outsb
inc
outsb
ret
sahf
outsl
xchg
stos
popa
xor
int
ret
pusha
lods
call
les
incl
dec
mov
dec
mov
mov
cmpsl
jg
xchg
xor
lahf
jb
lret
push
scas
leave
adc
sahf
push
in
xchg
jecxz
xchg
pop
in
dec
adc
test
inc
or
in
or
jg
xlat
pushf
fstl
orl
and
mov
lods
loop
jno
mov
add
push
out
ret
lahf
arpl
loope
aaa
dec
in
in
cld
das
or
int3
call
jecxz
jae
scas
lds
xchg
rolb
dec
pop
or
dec
outsl
and
cmpsl
jo
or
lret
inc
adc
ret
cmp
movsb
dec
sub
nop
lret
mov
cmpsb
stos
cs
push
dec
mov
push
rcll
fiaddl
lcall
shll
jae
inc
loope
mov
test
ljmp
xor
ja
mov
je
or
out
mov
adc
or
das
sub
mov
lret
adc
arpl
mov
cmpsb
test
outsb
xor
push
inc
dec
out
scas
iret
pop
mov
scas
paddb
adc
hlt
roll
divb
aad
pop
arpl
mov
xchg
push
jo
stos
hlt
lods
roll
push
lahf
inc
test
in
test
aaa
sbb
mov
loopne
outsb
shlb
adc
pop
jns
incb
fwait
div
jp
or
stos
mov
inc
imul
lds
pusha
mov
aas
movntq
jnp
fwait
lret
cmp
xchg
adc
mov
icebp
ljmp
or
mov
dec
ja
push
in
xchg
xchg
cwtl
mov
call
mov
xchg
xchg
ret
data16
js
test
fwait
jne
xor
push
lods
pop
inc
mov
push
sahf
daa
out
hlt
cmp
xchg
hlt
loopne
fwait
movsb
mov
std
or
dec
mov
or
pop
cmpsb
add
mov
inc
cwtl
dec
sub
inc
xor
popf
cld
enter
movsl
adc
pusha
rcrb
mov
rcrl
push
pop
adc
addr16
ja
and
scas
mov
arpl
inc
movsb
mov
mov
inc
shrb
or
push
push
jb
in
movsb
pop
aad
and
mov
jns
loop
adc
lock
out
and
cld
dec
sbb
adc
push
stos
stos
lret
testb
jmp
mov
adcb
jl
cmp
rolb
into
push
mov
or
cli
push
cmp
cwtl
fstpl
movsl
sbb
fstpl
mov
clc
into
adc
iret
mov
cmc
xor
hlt
scas
sarl
inc
test
sbb
out
out
pop
sub
stos
mov
cmc
fwait
ja
rcll
add
aaa
push
cmp
mov
popa
jno
xchg
adc
rolb
leave
push
scas
aam
pushf
iret
aas
jb
jmp
insl
jp
pop
jno
xchg
mov
sbb
inc
xchg
push
mov
pop
lcall
mov
jge
in
aam
sbb
hlt
imul
xchg
cltd
sti
rol
stos
cs
ss
pop
outsb
jbe
into
cld
pop
push
in
inc
call
cwtl
scas
or
test
pushf
outsl
push
sbb
in
mov
test
test
mov
pop
fisttpl
xor
sub
jnp
jecxz
popa
mov
dec
inc
call
cmp
sub
mov
mov
xchg
jmp
std
add
xchg
cmpsb
sbbl
xchg
sbb
mov
sbbl
jmp
cmp
ja
mov
pop
dec
push
cmp
cmpsl
and
out
sub
mov
div
mov
aad
cmp
cmp
in
lock
mov
int3
or
jbe
pop
sub
add
xorb
cwtl
sbb
jo
pop
ja
fucompp
and
mov
pop
or
mov
or
jae
adc
test
call
data16
push
push
mov
cltd
lods
mov
sub
sbb
add
and
leave
dec
stos
push
inc
pop
and
or
xorw
push
mov
and
incb
clc
lods
rcll
sub
cmp
xlat
push
mov
pop
xchg
mov
push
push
push
shll
adc
sub
dec
popa
jle
sbb
xchg
ret
pop
xor
pusha
stc
mov
mov
push
es
add
mov
mov
fs
adc
cld
lds
insb
push
dec
jl
or
mov
adc
icebp
popa
xchg
std
lcall
ljmp
fnstenv
sub
scas
into
rcrb
xlat
mov
cmp
inc
movsl
pop
jbe
dec
xor
pop
outsl
adc
popf
cmp
lret
nop
shl
xchg
xlat
js
sbb
cwtl
dec
jl
mov
out
push
mulb
mov
mov
cmp
fiaddl
cmc
in
lds
insl
or
jnp
fwait
mov
insl
shrl
jnp
cmp
add
dec
test
xchg
adc
test
jae
cmp
jae
dec
aad
mov
sahf
and
hlt
stc
loope
loop
sti
adc
mov
push
adc
xchg
aaa
fstpt
int
rcll
ret
scas
mov
mov
int
adc
pushw
pop
lret
mov
pusha
scas
enter
subl
fisubrl
or
inc
sub
jge
jmp
sbb
dec
loop
sbb
xor
lret
aas
cmp
add
cmp
out
adc
add
sub
xor
push
xchg
in
repnz
push
jecxz
lret
jl
and
out
inc
adc
je
sbb
cltd
popf
push
cli
jae
out
nop
hlt
cs
jge
ljmp
into
dec
inc
ret
mov
inc
shl
je
xchg
lods
movsb
jmp
jg
add
in
cwtl
repnz
mov
add
sbb
and
inc
mov
data16
clc
cmc
dec
dec
pop
cmc
lret
subb
out
leave
cli
xchg
or
sub
cmp
sbb
outsl
js
dec
mov
scas
jae
test
lods
mov
outsl
in
and
mov
test
push
xlat
or
aaa
sub
xor
outsl
fisubl
mov
ret
fidivrs
xchg
mul
xchg
push
and
sbb
out
push
imull
and
dec
push
gs
decl
add
inc
xor
sbb
jne
dec
popa
cmpsb
out
loopne
stos
push
jmp
xchg
mov
mov
out
cmp
gs
loope
jbe
call
arpl
cmp
mov
dec
cltd
and
or
pop
cltd
mov
and
jne
or
xor
push
fstps
and
rolb
clc
inc
jno
push
sbb
mov
icebp
testb
dec
jae
xor
push
mov
enter
sbb
dec
jo
pushf
test
or
aad
rcrb
daa
inc
in
sbb
push
push
and
test
shlb
mov
pushf
je
test
push
icebp
sbb
dec
cmp
scas
mov
mov
cmp
insb
ds
add
inc
mov
and
lock
cmc
xor
and
add
dec
jno
int3
data16
xor
enter
pop
pop
std
test
test
pop
dec
jb
cmpb
lahf
sahf
pop
xor
shlb
shll
arpl
bound
int
enter
fisubrl
into
adc
pushf
jp
dec
push
lods
imul
mov
stos
repnz
cmc
cwtl
pop
inc
jp
dec
jae
mov
aam
sarl
mov
sbb
and
sbb
inc
int3
sbb
fs
mov
test
dec
push
fucom
fcomp
push
add
scas
cmp
jo
sub
mov
push
aaa
daa
jmp
out
push
dec
pushf
in
mov
mov
sbb
sbb
fmull
imul
ret
cmpsl
lock
sarb
dec
xor
lret
test
out
mov
out
rol
les
loop
movsb
cmpsl
add
or
adc
dec
into
testl
scas
push
xlat
and
stos
and
mov
ret
fldt
cli
stos
pmuludq
cs
lcall
cmp
inc
testb
fdivrp
inc
aaa
xchg
adc
ss
ror
notrack
or
jne
mov
int3
push
cmp
fsubs
int
lods
mov
xchg
jbe
or
xor
xchg
sub
jge
mov
mov
test
shlb
dec
mov
mov
lcall
xor
fldenv
mov
arpl
sub
add
fcoms
mov
js
xchg
pop
in
pop
divl
scas
lret
jae
push
pusha
jle
adc
dec
push
aam
mov
sub
sar
jg
test
das
ret
push
mov
daa
outsb
or
lret
bnd
jg
loop
mov
cmpsb
repz
cmp
push
insb
mov
jo
sub
lds
sbb
pushf
leave
jno
dec
cmp
mov
mov
push
cwtl
rcll
ja
test
push
pop
pusha
add
pop
and
mov
incb
jnp
jecxz
cmpsb
mov
movsb
push
fs
cld
inc
js
jnp
pop
jecxz
push
int
pop
out
fisubs
sub
iret
or
fsubs
clts
push
addl
jns
shl
xchg
inc
dec
ljmp
lea
std
mov
int
dec
out
stos
push
cmp
xchg
pushf
js
pop
cmp
rcr
cmpsl
mov
cltd
xchg
scas
in
sub
cmp
ret
add
test
xchg
cmpsl
iret
inc
cmp
loope
mov
into
sbb
mov
sbb
popa
leave
lcall
adcl
inc
scas
sub
je
nop
pop
sub
cmp
dec
inc
sbb
testb
lahf
repnz
sub
daa
pop
in
div
xchg
insl
sti
sub
push
xor
and
out
mov
out
dec
popa
mov
ja
dec
xchg
adc
je
int
or
sub
xchg
movsl
xchg
fsubl
test
push
push
sbb
inc
pop
or
and
sub
daa
push
repz
add
add
mov
mov
in
xlat
fisttpll
sub
enter
sbb
lret
adc
cmpsl
sub
cs
adc
out
cmp
lret
jo
xor
insb
or
sub
adc
pop
push
mov
dec
enter
and
nop
mov
sub
jg
sti
cmpl
in
lds
popf
mov
stos
adc
xor
stos
mov
daa
loopne
mov
push
or
push
out
adc
sub
adc
insb
ror
loope
push
pop
pop
mov
xchg
xor
adc
mov
sub
int
xchg
fstps
mov
pop
adc
movsb
clc
jnp
idivl
cli
sbb
and
push
data16
xchg
mov
mov
jne
jo
jns
insb
movsl
cmp
add
pushf
ljmp
mov
lds
sub
jne
rsqrtps
psubusw
mov
jo
incl
lret
mov
adc
les
dec
imul
jb
rorb
pop
jmp
out
fld
cs
push
mov
adc
pop
sub
adc
jbe
fbld
fwait
pop
xchg
push
pop
mov
jns
jp
mov
sti
sub
xchg
movb
outsl
add
shll
ffree
mov
xlat
pop
push
lds
leave
pop
add
push
mov
push
int3
jmp
cmp
aas
imul
pop
jne
cmpsl
xor
adc
sub
adcb
dec
mov
jmp
sub
xor
movsl
ret
inc
dec
std
add
xchg
push
xor
shrb
in
test
lret
sbb
or
shlb
repz
stos
sub
dec
jp
pop
mov
leave
test
jge
jnp
andb
aad
addr16
cmp
shrl
push
sbb
inc
and
and
mov
sbb
divl
mov
mov
pushf
jecxz
fdivrs
push
add
repnz
push
cmp
aad
xor
pop
shll
or
dec
and
pop
or
cmc
xorb
inc
sbb
add
loopne
push
pop
mov
and
adc
add
iret
jmp
pop
push
sub
push
pop
push
pop
pop
popa
push
xchg
daa
sub
cmp
je
sti
sbb
inc
aas
out
int
pop
mov
cs
aaa
insl
mov
mov
movsb
daa
mov
adc
adc
or
or
mov
sahf
pushf
cltd
cmp
push
mov
testl
adc
fstps
ja
add
push
scas
notl
fnsave
mov
in
leave
prefetcht2
cmpsb
inc
int3
fucomp
leave
cmp
aam
xor
loope
add
cmc
inc
xchg
popl
add
add
not
push
bound
ret
cmpsl
push
jp
shrl
out
test
out
pop
unpcklps
or
pop
dec
add
fnsave
sahf
push
fsubr
ss
int
and
mov
sbb
add
mov
mov
mov
sub
filds
int3
dec
dec
stos
test
inc
jp
sub
jo
test
dec
jbe
leave
in
shll
lea
clc
mov
mov
insl
cmpb
shll
out
mov
xchg
jecxz
cmp
and
dec
mov
out
movsl
and
mov
mov
dec
outsb
sbb
xchg
cmpsb
xlat
pusha
xchg
sbb
stc
cmpsb
push
and
jbe
cs
aad
movsl
dec
fwait
mov
daa
mov
mov
int3
das
ds
outsl
sub
mov
mov
and
cs
sbb
mov
jno
mov
adc
cmc
clc
lret
xchg
imul
stos
nop
sbb
dec
ss
icebp
fldt
add
pop
loopne
flds
aas
jmp
pusha
hlt
ss
inc
gs
outsb
mov
and
sub
mov
mov
les
jge
lcall
or
pop
lcall
cmp
mov
sbb
or
scas
mov
cmp
iret
imul
inc
fbstp
nop
adc
dec
xor
pop
adc
jp
add
add
and
push
arpl
mov
xchg
inc
outsb
test
and
jne
jns
lahf
in
fcmovnb
mov
push
push
sub
adc
mov
inc
pop
loop
sti
inc
inc
imul
dec
cli
scas
inc
and
ret
xchg
mov
aam
popa
shll
popa
dec
pop
lods
and
push
int
inc
pop
in
inc
adc
mov
add
cmpsb
cmp
push
in
fwait
xchg
pop
pop
fsubs
add
push
pop
cmpsb
imulb
adc
mov
cmpsl
or
pop
or
adc
cmp
out
or
jp
lds
inc
mov
arpl
out
pop
inc
xor
jb
mov
pop
jbe
sub
pop
mulb
incb
nop
add
stos
pop
out
imul
mov
repnz
adc
sbb
or
daa
pusha
inc
popf
stos
imul
in
repnz
mov
lea
mov
fisubl
and
pop
and
insl
sbb
mov
jecxz
cmp
xchg
and
sub
jb
xorl
lods
ds
shr
clc
icebp
sahf
inc
fdivrl
fsubs
dec
sbb
and
mov
scas
cmp
xor
sbb
sub
push
mov
dec
sub
push
mov
inc
shll
adcb
and
xor
and
sub
sub
add
mov
push
cltd
mov
je
test
sbb
mov
fisubrl
loopne
scas
mov
ja
inc
lds
ja
jne
push
adc
sub
jb
push
shll
clc
pop
std
jns
imul
pop
inc
or
out
fwait
pushw
icebp
inc
fistpl
add
cwtl
lret
xor
xchg
cmp
pop
jnp
fstpl
push
imull
out
sub
imul
and
push
mov
inc
int3
inc
sub
or
cmp
outsb
mov
fnstenv
sbb
cs
rcll
cmpsl
out
add
sbb
outsl
mov
or
and
mov
sub
and
push
rcll
flds
or
out
lods
xor
ud1
adc
and
pop
jl
xor
cld
dec
add
xchg
mov
outsb
dec
jbe,pt
gs
clc
jle
loopne
ss
push
fwait
jg
pop
js
loope
xchg
mov
xor
out
mov
or
dec
cmp
repnz
pusha
pop
sbb
idivb
xor
dec
idiv
sbb
inc
mov
jae
push
in
dec
xacquire
mov
mov
jg
sti
shrb
inc
push
and
inc
cs
repz
cmc
add
mov
or
pop
mov
nop
fwait
mov
sub
scas
mov
add
clc
adc
jb
sub
stc
mov
pop
mov
pop
imul
rcl
mov
sbb
pop
loopne
dec
lahf
adc
repnz
fdiv
clc
jo
push
sbb
pop
xchg
xchg
mov
imul
add
cmp
inc
mov
insl
cltd
lahf
out
mov
scas
mov
imul
ss
mov
dec
push
rcl
push
js
pop
mov
mov
inc
loope
ret
in
push
rorb
or
add
aad
xchg
test
sub
jnp
sub
inc
dec
daa
mov
fldenv
mov
jno
inc
movsl
repnz
fdivp
adc
xchg
inc
xchg
pop
pop
mov
mov
repz
jmp
xchg
sub
pop
arpl
mov
and
das
pop
pop
addr16
adc
and
adc
mov
repnz
push
jno
add
sahf
je
add
insl
rcrb
lret
enter
add
lods
sti
and
adc
ret
add
push
push
test
repz
xchg
gs
gs
jecxz
ljmp
jl
ret
jns
iret
xchg
jg
adc
cmp
flds
xor
cmp
mov
cmp
pushf
ljmp
sub
andb
dec
push
loope
out
push
gs
roll
xchg
push
out
mov
lds
dec
insl
jecxz
adc
jmp
out
sti
add
in
cltd
inc
in
bound
test
mov
sbbl
and
mov
imul
leave
aad
jg,pn
sarb
es
in
imul
out
out
cmc
cwtl
cmp
les
sahf
fdivr
mov
roll
xchg
mov
sub
cmp
cltd
mov
repz
fs
mov
add
lods
std
mov
lahf
scas
push
in
test
or
pop
pop
pop
push
jnp
imul
and
cli
divl
cli
js
mov
or
movsb
xchg
dec
das
loop
pop
in
es
jl
xchg
gs
mov
idivl
push
jge
jmp
mov
aaa
push
and
mov
mov
or
fisttpl
lock
sbb
mov
in
jmp
test
stos
cmpsl
mov
rolb
jae
mov
fcomp
rcl
jnp
dec
pushf
jmp
dec
clc
sti
and
sbb
pop
lds
subl
mov
pop
sbbb
sub
std
sub
and
fidivrs
fstpl
sub
mov
movhps
inc
or
sub
iret
cmp
in
ja
repz
sbb
sub
ficomps
jae
sarl
lcall
dec
xor
sbb
pop
push
push
cmp
stc
test
sbb
fidivl
xor
fwait
push
mov
and
lcall
aas
outsb
fildll
dec
push
xchg
iret
arpl
sbbb
adc
test
popa
rcrb
arpl
push
into
sbb
push
movsb
or
stc
shl
mov
inc
repz
sub
jecxz
outsb
xor
adc
dec
mov
aaa
sub
imul
inc
pop
adc
fldcw
mov
out
push
repz
icebp
push
lds
lods
ds
push
out
mov
cs
test
int
mov
xor
mov
xor
adc
aaa
in
popa
cmc
xorl
fisttps
addb
jne
scas
in
add
cld
and
jp
push
cld
cmp
and
imul
mov
push
mov
in
push
jmp
stos
ds
adc
or
mov
add
cmpsb
xchg
jns
sbb
dec
aaa
leave
dec
insb
fnclex
xchg
insl
push
ror
ljmp
shl
and
dec
dec
inc
hlt
or
bnd
faddl
dec
jb
sub
insl
dec
mov
insb
aam
bound
out
mov
pop
roll
cmp
mov
pushf
mov
daa
sub
outsb
addr16
pop
push
push
sbb
or
inc
js
lock
enter
dec
mov
xchg
std
in
or
or
adc
insl
inc
das
movsl
jae
mov
out
aam
xor
pop
popf
test
xchg
int3
or
pop
js
pop
lahf
and
xchg
add
cmp
sub
mov
test
push
arpl
shl
mov
pop
aad
inc
mov
mov
into
mov
pop
sbb
out
int3
mov
dec
cmp
xor
jle
icebp
int
mov
inc
push
sbb
add
xchg
sub
push
mov
daa
mov
frstor
lret
mov
inc
int3
lods
push
mov
loope
mov
pop
jae
jg
gs
cld
fcomps
mov
out
clc
mov
mov
mov
fs
pop
or
pop
adc
dec
or
in
repnz
fisubs
scas
cmp
mov
fstpt
insl
lret
fsubl
jg
js
cmp
addr16
add
outsb
jle
adc
adc
sub
and
stos
fadd
stos
pop
add
test
dec
xchg
les
sbb
xchg
adc
jbe
scas
push
out
sub
out
xchg
movsb
xchg
fdivrs
inc
pop
push
push
mov
mov
cmp
lods
repnz
shrl
psubsb
jo
xor
cwtl
adc
dec
cmpsl
scas
xor
subl
jb
mov
arpl
jo
sbb
popf
mov
sub
popa
cli
test
xor
int3
xor
outsb
push
xchg
subl
cltd
push
popa
adc
add
xchg
mov
xchg
inc
dec
jb
sbb
arpl
mov
xchg
mov
jle
inc
stc
ret
stc
pop
dec
cwtl
add
lods
push
inc
hlt
sbb
cltd
mov
mov
andl
or
adc
xor
add
stc
outsb
sbb
mov
add
xchg
js
popf
popa
icebp
pop
jb
lret
fcmove
dec
xchg
push
pop
inc
dec
lret
cmp
lds
mov
inc
pop
pop
aaa
aam
stos
xor
sbb
sub
repnz
outsb
push
jbe
fcmovnu
cli
std
inc
imul
push
inc
jns
mov
rolb
sub
out
mov
repnz
jne
mov
mov
ja
aas
push
clc
cmpsl
cmp
out
clc
jbe
nop
and
mov
sti
lahf
xchg
lret
repnz
call
fcomps
out
add
daa
xchg
out
push
add
pop
xchg
pop
repnz
out
inc
xchg
es
aad
movsl
jns
fdivl
sti
lds
jo
add
adc
ja
push
out
sub
jmp
arpl
and
mov
lcall
and
mov
cmc
je
jne
daa
or
ret
jge
test
xchg
xorl
push
dec
stc
lods
test
jmp
jbe
mov
in
sub
mov
cld
sbb
repnz
jmp
fisubs
sahf
mov
dec
lds
mov
popf
test
sub
adcl
jecxz
and
adc
inc
push
push
xlat
mov
sub
imul
adcb
sbb
ja
mov
xchg
sub
pop
dec
pop
test
pop
enter
mov
lds
cli
pusha
jmp
js
sbb
jno
arpl
xor
push
aam
cmp
mov
jo
imul
movb
loope
sbb
xchg
inc
inc
pop
cli
in
cmp
into
andb
sub
fisubl
jl
dec
sbb
or
outsb
pop
stc
or
repnz
mov
xchg
stos
push
movsb
push
cmp
sub
or
mov
icebp
xor
pusha
sbb
roll
mov
test
ljmp
gs
repz
xchg
cmp
mov
or
and
out
dec
mov
mov
repnz
paddsb
pop
fiaddl
andl
add
test
test
xor
or
xchg
xlat
push
lock
xchg
testb
test
sub
sbb
mov
jnp
push
movsl
stos
jg
imul
adc
cwtl
stos
xchg
movsl
inc
imul
scas
pop
cmp
pop
add
pusha
xlat
test
xchg
mov
or
popf
inc
or
pop
imul
cli
lahf
scas
addl
cli
popf
lods
scas
mov
ret
inc
pushf
or
lods
mov
lods
in
adc
gs
das
dec
xchg
jecxz
fs
icebp
les
push
cltd
pop
xor
and
pop
popf
adcb
fldt
pop
out
cmp
and
test
mov
fwait
jge
ja
xor
les
and
and
loop
shl
and
mov
inc
push
out
lss
sbb
imul
popf
sbb
inc
add
imul
es
mov
lods
cli
enter
fisttps
xor
xchg
rcrb
xchg
mov
int3
mov
xchg
cld
xor
bound
iret
stc
sbb
js
mov
mov
push
aam
push
call
sbb
pop
xchg
cli
jge
xchg
xchg
popf
mov
sbb
flds
cwtl
xor
xchg
jno
cmp
xchg
or
pop
pop
xor
mov
adc
lds
jecxz
jecxz
xchg
push
xchg
stc
sub
xchg
call
xchg
call
sahf
adc
imul
pop
test
mov
fwait
push
jecxz
clc
mov
int3
stc
dec
enter
rcrl
icebp
pop
xchg
xchg
ret
mov
mov
cmp
xor
les
and
cli
and
scas
sub
call
es
repz
dec
test
enter
xchg
xor
mov
xchg
shl
inc
lahf
jecxz
cwtl
inc
jnp
add
push
stc
fmulp
dec
mov
loop
test
jle
aam
addr16
xlat
aad
push
or
pop
rclb
inc
dec
cmp
mov
xchg
mov
setg
xor
clc
clc
loope
sarl
loopne
fadd
xchg
jnp
mov
jp
mov
xlat
push
scas
and
clc
lret
jns
lcall
pop
je
out
rcll
outsl
out
pop
cli
pop
test
pop
scas
incl
add
inc
out
repz
cwtl
pop
cmpb
inc
in
xchg
insl
jns
mov
outsl
roll
adc
mov
push
in
dec
add
dec
mov
sahf
call
jle
iret
lds
and
inc
inc
push
and
adc
xchg
arpl
dec
mov
stos
fsubrl
loop
jge
push
test
or
addr16
mov
mov
roll
les
sarb
hlt
push
xchg
push
test
fdivp
out
sti
push
xlat
pop
mov
mov
pop
lret
mov
mov
jp
iret
loopne
lret
or
mov
push
dec
sbb
push
mov
cmpsl
jb
shll
mov
add
xchg
sbb
movb
dec
mov
xor
add
cmp
stc
pop
jp
cwtl
test
add
sbb
push
sbb
pop
add
stc
dec
cli
lock
or
or
inc
jle
fdivl
cmc
sbbl
sbb
aas
push
shlb
aam
push
test
jae
test
aam
outsb
stos
and
dec
jl
xchg
faddl
add
adc
rcrb
adc
insb
lret
mov
push
xlat
mov
imul
and
in
out
call
loope
aas
ffree
pop
inc
mov
loope
mov
test
xchg
or
mov
push
xlat
sub
mov
fsubs
or
and
das
and
sbb
testb
push
shl
xchg
rcrb
in
jns
push
aaa
dec
mov
lcall
stc
pop
cmp
sbb
sub
jae
leave
add
imul
rclb
jb
pop
dec
add
pop
adc
sub
leave
ds
adc
sbb
xor
xchg
mov
and
xchg
sub
cltd
mov
push
in
subl
sub
lret
xchg
fwait
loop
out
xor
ds
xor
push
ljmp
lock
insl
popf
push
cli
neg
add
hlt
int3
pop
adc
daa
pop
xlat
jbe
outsb
jns
jbe
cltd
out
xchg
mov
jge
mov
dec
leave
xorb
in
cmp
mov
test
jecxz
std
sbb
and
inc
jmp
out
mov
adc
addr16
fcoml
and
cmp
clc
fwait
in
adcb
mov
xor
repz
mov
cltd
adc
adc
jae
mov
dec
out
and
dec
loopne
icebp
adc
cmp
inc
mov
lea
push
ret
sahf
pushl
jecxz
mov
insb
cld
faddl
fiaddl
xlat
xor
or
or
xor
int
insb
sub
ds
jle
dec
aaa
and
aam
adc
loop
lock
outsl
mov
aaa
int
aad
xchg
adc
sub
inc
mov
cmp
jns
add
adc
mov
setne
and
lods
dec
lock
jge
pop
mov
inc
and
rclb
cmpsl
sbb
jns
adc
out
insb
inc
push
xchg
lock
pop
lock
jns
cmp
sub
jae
push
sbb
sbb
daa
xchg
sbb
mov
pusha
mov
in
ljmp
insl
dec
add
mul
imul
pop
xor
in
inc
movsb
xor
lods
sub
inc
sysexit
in
test
mov
in
notl
jb
cli
mov
pop
lods
lahf
mov
fwait
xchg
xchg
inc
inc
cwtl
sub
pop
ret
mov
inc
dec
in
push
xchg
cmp
mov
adc
pop
cli
stos
xchg
icebp
cwtl
mov
mov
inc
push
sbb
sub
mov
js
ljmp
push
fwait
in
movsl
loop
sbb
ret
lods
add
add
out
push
fdivl
push
or
lock
push
inc
ret
and
dec
pop
lret
cmp
add
clc
lret
jge
scas
icebp
mov
cmpsl
in
popa
adc
push
push
inc
mov
xlat
push
xor
scas
es
sub
push
pushf
sbb
fstpt
cwtl
cmp
pop
add
mov
cmpsl
pop
js
xor
out
xorb
cmc
daa
push
push
add
inc
pop
ja
dec
and
sub
rcr
gs
imul
mov
js
sarb
data16
lcall
repz
xchg
loop
cs
push
movl
pop
icebp
inc
xchg
inc
sub
mov
inc
mov
leave
jne
pushf
jge
inc
inc
adc
in
imul
out
push
xchg
cmp
stc
cmpsb
inc
lret
jns
insb
test
les
cmp
ret
fildll
out
jns
fldenv
rclb
inc
aad
mov
pusha
fimuls
aad
cmp
pop
orb
sbb
adc
xchg
adc
rol
in
jecxz
mov
shll
pop
xchg
mov
test
repz
dec
xchg
adc
jmp
sti
shll
into
out
xor
push
dec
lea
jae
jmp
pop
pop
mov
push
dec
cmp
sbb
xchg
and
pop
fwait
ljmp
enter
cld
and
mov
mov
inc
daa
jmp
adc
sub
lret
xor
jecxz
push
fidivs
fs
and
sub
popa
rorb
gs
jbe
ljmp
xchg
sbb
mov
mov
inc
add
ret
inc
push
jge
add
sbb
xorl
addb
sub
xchg
dec
adc
xor
xchg
lock
pop
ret
push
cmp
shr
cld
aam
faddl
adc
push
sbb
loope
mov
mov
dec
movsl
inc
ljmp
adc
pop
dec
mov
in
sbb
xor
sub
out
je
aam
mov
push
push
test
jbe
mov
test
stos
mov
stos
test
push
mov
daa
mov
push
out
mov
ret
mov
sti
or
clc
mov
xorb
push
cmpsl
shlb
ret
rclb
js
sahf
ret
out
or
add
adc
mov
jg
test
hlt
and
and
sub
or
lret
cwtl
pop
add
loop
andb
sbb
mov
cmp
and
stc
jne
inc
jle
xchg
sbb
adc
or
and
cltd
popa
mov
sti
dec
pop
clc
dec
ss
lds
dec
push
rol
sbb
fs
andl
inc
adc
xchg
lcall
mov
xchg
inc
add
mov
std
or
mov
sahf
dec
jb
pop
call
into
mov
jp
jle
mov
adc
aaa
push
popl
sbb
and
outsb
cmpsl
mov
push
aas
mov
stc
cmp
jb
pop
ret
inc
out
ljmp
pop
push
stc
adc
out
xchg
push
je
jmp
int
ja
mov
mov
cltd
stos
xchg
dec
sub
data16
mov
ret
cmp
cmp
dec
stos
idivl
cli
cmp
mov
cmp
add
pop
inc
incl
ficompl
and
shl
pop
aam
jge
stc
call
shll
mov
loopne
pop
cltd
insb
int3
jle
sbbb
xchg
and
lcall
or
push
mov
mov
cmp
lds
imul
xorb
jbe
hlt
stos
xchg
dec
push
push
ss
loopne
jmp
int3
xchg
aad
and
mov
add
inc
dec
fidivl
dec
xchg
lods
mov
negl
push
mov
lret
push
push
sarl
jmp
inc
dec
jno
int
jmp
xor
jnp
dec
movsl
jo
aam
pop
pop
pushf
decb
adc
stos
cmp
jmp
sbb
adc
arpl
shl
push
fnstenv
cmp
fwait
dec
in
push
xchg
adc
pop
scas
mov
jo
out
lds
push
jo
inc
loope
xorb
pop
pop
inc
mov
pop
in
insl
cmp
bound
fldl
and
sahf
and
icebp
int3
push
lret
add
ret
lcall
xchg
cmp
adc
sbb
push
daa
pop
aad
mov
sub
leave
insb
mov
mov
out
fwait
jle
mov
sarl
or
adc
and
mov
jo
push
fsubs
lods
aaa
push
cmpsb
add
and
lock
push
orb
adcb
sbb
xorl
jne
dec
popa
mov
adc
sub
push
sbb
add
inc
subl
cmp
clc
mov
aas
or
repnz
push
or
les
scas
repnz
mov
push
test
inc
pop
push
loop
dec
jae
adc
fs
test
adc
loop
mov
outsb
int3
xchg
dec
cmp
inc
test
out
sub
jns
lret
iret
push
push
xchg
fistl
sbbl
or
popf
stos
or
movsl
push
ror
pop
mov
xchg
fnstsw
cwtl
test
fwait
es
and
mov
out
test
insl
mov
dec
jp
jle
andw
sti
mov
outsl
cmp
cli
xlat
loope
mov
mov
insl
add
aam
pop
pop
jmp
icebp
pop
xor
add
xchg
in
sbb
test
iret
adc
ret
rcl
mov
mov
sti
and
in
inc
shrl
add
gs
sub
push
lahf
mov
mov
orb
repnz
mov
lods
in
push
push
xchg
sbb
aad
sbb
movsl
inc
mov
lea
adc
andl
fdivrs
dec
xor
sub
popa
stos
js
mov
aaa
xor
mov
shlb
test
int3
and
outsl
out
ljmp
and
cmp
cmp
data16
repz
xchg
or
xor
sub
mov
insb
shl
test
addr16
adc
mov
mov
xchg
pusha
frstor
xchg
add
lea
adc
hlt
lods
push
mov
jge
cmp
rorb
inc
ds
xchg
pop
fs
aam
inc
push
in
add
clc
outsb
lock
insb
jb
inc
adc
jl
test
fistpl
sti
cltd
inc
cld
pop
cmp
ljmp
adc
cmpsb
test
cmp
lahf
pop
inc
nop
hlt
insb
mov
cltd
pop
daa
scas
xor
or
adc
sbb
xor
scas
in
add
loope
add
movsb
sbb
test
mov
cmp
push
mov
adc
ds
add
hlt
mov
shlb
mov
mov
xor
cwtl
addr16
jle
dec
inc
insl
inc
orb
es
push
mov
rcrb
inc
mov
push
dec
sbb
call
sahf
sub
sub
mov
jne
mov
jl
fabs
sbb
mov
out
adc
sub
inc
notl
outsl
cmp
call
dec
jmp
sub
cmp
mov
mov
int3
dec
cmpsb
cmc
fisttpl
pop
aas
repz
mov
fistps
add
mov
lds
xchg
repnz
dec
or
cmp
jp
jmp
lods
cmp
or
jmp
dec
cmpsb
inc
push
inc
xchg
clc
mov
fwait
mov
xor
popa
or
cmpsl
pushf
dec
das
subl
mov
sub
jg
sti
fidivs
nop
mov
mov
loop
push
arpl
pop
or
add
fidivl
scas
or
cmpsb
mov
and
or
loopne
cmpl
movl
jl
cltd
lods
pop
rol
mov
pop
push
dec
out
sub
pop
mov
sbb
addr16
dec
loope
xor
sbb
es
sub
insl
mov
xchg
je
iret
cmp
addr16
xchg
out
sbb
xchg
inc
dec
mov
psubb
jle
pushf
test
cmpsb
aaa
push
scas
popl
push
cwtl
xchg
mov
jb
rorl
push
sub
push
add
or
add
mov
adc
sbb
mov
fsts
sbb
xchg
push
out
jb
xor
pop
mov
mov
sbb
int3
sbb
movsb
loopne
fwait
jp
ret
sbbb
xchg
pop
call
push
fisttpl
xor
push
fisubl
add
mov
jp
jbe
lcall
cmpsb
mov
cmp
stc
ljmp
mov
sub
je
je
test
in
cmpsb
jp
adc
dec
mov
shll
lret
hlt
jecxz
dec
sar
jnp
mov
sarl
mov
insl
lret
cmp
jnp
lahf
rorb
adc
adc
sub
xor
data16
mov
dec
or
lds
or
adc
adc
xchg
cmp
fwait
mov
pusha
xchg
dec
cltd
ss
es
jl
stos
cld
push
enter
int
mov
and
scas
sbb
out
mov
inc
mov
lea
sarb
push
and
fcompl
mov
cmc
test
das
jecxz
push
sti
pop
pop
data16
test
sbb
cmp
arpl
iret
ja
dec
push
iret
imul
pop
mov
in
lods
mov
insl
xchg
push
dec
ss
fdivrl
mov
mov
push
adc
sbb
ret
gs
dec
in
les
adc
in
mov
push
movl
mov
inc
sub
mov
nop
orb
cmp
or
push
dec
jae
fcmovbe
imul
cld
test
push
pusha
daa
mov
inc
fisttpll
dec
xchg
mov
mov
pusha
pusha
mov
adc
scas
neg
jnp
lahf
arpl
cli
jno
out
lods
jge
push
xchg
scas
mov
stc
xor
sbb
lods
dec
jb
std
adc
cs
push
cld
and
cld
fwait
jne
dec
and
mov
ret
ret
addr16
cmp
cmpsb
out
hlt
sbb
inc
lret
mov
repz
addb
xor
add
sarb
mov
inc
ret
pusha
test
jno
mov
stc
call
dec
or
mov
and
cld
jns
in
and
ljmp
iret
leave
push
mov
test
xchg
add
loope
inc
aas
ret
push
les
inc
jne
cld
mov
push
jne
lods
stos
hlt
xor
mov
repz
out
add
or
cld
lcall
sub
jmp
rcrb
pop
cmp
xchg
mov
inc
jl
adc
jmp
or
sub
js
dec
sbb
jecxz
push
mov
test
fimuls
aas
les
rorl
jo
fldenv
in
lock
xchg
out
adc
stos
inc
pop
pop
dec
xor
dec
mov
ret
mov
sarb
xchg
fneni(8087
mov
or
test
negl
pop
pop
fs
push
fisttpll
and
jnp
leave
adc
repnz
lret
xor
jmp
aam
sub
lods
sub
insb
loopne
and
sub
popa
in
inc
xchg
outsb
jbe
jp
popa
and
fsubp
je
cmp
sbb
lcall
xlat
inc
mov
mov
out
mov
test
cmc
mov
xor
pushf
xor
xor
sbb
lea
lods
divl
inc
jno
aas
in
aas
xchg
inc
lret
mov
push
stos
xchg
inc
push
push
rcrl
sti
push
pusha
fisubl
lock
pop
xchg
fmull
in
dec
call
lock
les
jne
cmp
pop
dec
call
fxch
xor
mov
out
jmp
aam
add
lcall
xor
arpl
and
jnp
jae
cmp
sbb
out
es
push
fimuls
in
cltd
aaa
imul
dec
sub
sbb
jb
dec
mov
mov
cld
lods
int3
lret
mov
hlt
sub
jl
les
jae
xchg
sbb
pop
ds
cmc
bound
out
cmpsl
push
xchg
lods
push
ret
lea
jmp
clc
es
lods
push
dec
lret
pushf
inc
mov
inc
rclb
jb
cwtl
jg
add
mov
jl
pop
mov
in
jecxz
sub
push
inc
add
addr16
mov
cwtl
jg
sahf
imul
mov
sarl
rolb
pop
dec
fidivs
push
shll
roll
jae
aaa
call
sbb
jp
xor
out
or
movsb
in
hlt
addps
shl
inc
pop
mov
add
mov
imul
xrelease
push
loope
or
mov
mov
pop
lods
mov
adc
xlat
shr
mov
nop
mov
incl
mov
xchg
test
dec
sti
jmp
fnstcw
dec
or
xlat
cmp
aaa
cwtl
loope
and
sti
in
outsb
aam
mov
scas
mov
iret
lea
subl
pextrw
lods
arpl
lea
jb
adc
shrb
jae
bound
xor
or
pop
xor
test
mov
and
jb
sahf
mov
mov
jb
jecxz
out
or
xchg
test
xchg
in
enter
dec
mov
ja
push
or
push
lret
xchg
xor
cmpsl
sub
xorl
or
iret
push
pop
jg
movsb
sbbb
or
je
pop
nop
cwtl
xor
pushf
aas
rcr
sti
std
and
and
cmc
insl
jno
inc
das
xor
dec
orl
jle
and
mov
adcb
insb
cmpb
insl
ds
lcall
push
push
or
dec
xor
cmpsl
sub
xor
fs
outsb
and
add
imulb
pop
leave
les
das
rcll
inc
xchg
fmull
add
mov
aam
push
mov
sarl
in
aad
push
pushf
mov
scas
and
mov
sub
leave
pop
movsb
cmc
test
push
outsl
xor
push
js
xchg
push
cld
arpl
lret
pop
and
in
push
jecxz
inc
and
add
bound
ret
xchg
roll
outsb
sub
jl
pop
ss
mov
jge
cmc
xchg
sbb
xlat
jo
cltd
xchg
xchg
dec
stos
adc
xor
or
and
xchg
jno
pop
fsts
lods
pop
mov
push
repnz
and
cwtl
les
outsb
dec
xor
lahf
push
pop
int
stos
dec
lods
mov
and
ficoms
push
push
ret
jno
xor
decl
cmp
loopne
or
cli
mov
in
push
lds
xor
ja
arpl
xlat
add
out
jg
push
je
mov
cld
fdivrl
gs
cmp
mov
mov
adc
cmp
mov
dec
mov
aam
in
push
aaa
xorl
adc
jnp
dec
fidivs
icebp
sub
mov
shll
add
jg
jl,pt
sbb
xchg
jge
ljmp
pop
ret
xorl
cld
call
fwait
lea
adc
pop
les
mov
test
sub
and
fcmovnbe
xor
pop
imul
add
jmp
jno
push
les
ss
xchg
sub
adc
xchg
mov
or
gs
jns
push
inc
fsts
xor
jae
js
and
sbb
lds
add
repnz
lret
repz
ja
bound
ja
arpl
test
cwtl
dec
std
and
dec
scas
mov
test
sub
mov
out
mov
mov
out
pop
lret
jge
pop
mov
fucomi
dec
test
push
or
pusha
fistps
xchg
add
and
sbb
shl
xchg
pop
stc
scas
into
enter
lods
js
sbb
enter
mov
sbb
sahf
sbb
scas
push
dec
xor
pop
sbb
dec
sub
xchg
and
pusha
stc
js
pop
xchg
pushf
and
call
in
xchg
insb
hlt
insl
sub
adc
sub
sbb
add
mov
push
jb
pop
cs
rcrl
jno
dec
loope
xor
ljmp
mov
mov
jne
xchg
xor
push
outsb
sbb
lahf
add
and
mov
test
pop
mov
inc
or
adc
fisubrs
lods
xchg
push
mov
push
popf
out
and
mov
mov
ss
pusha
lret
outsl
and
cld
cmp
xchg
mov
add
lahf
and
mov
sub
cmp
push
fmulp
not
cmpsb
mov
and
xchg
enter
insl
add
popa
pop
movl
imul
loop
cwtl
stc
aas
add
fisubl
pusha
fs
xchg
jbe
fsubrl
and
jne
lcall
ret
das
add
adc
jle
sub
sbb
adc
test
sti
jb
mov
divl
repz
dec
xor
push
xchg
popa
in
mov
dec
push
call
fildll
addr16
enter
fmul
inc
dec
or
movsl
xor
mov
mov
push
sub
jno
and
mov
dec
push
mov
fsqrt
arpl
popf
arpl
arpl
ds
xor
adc
je
or
xor
pop
adc
rorb
cld
adc
dec
orl
scas
jmp
mov
mov
cmp
imul
in
popa
loope
lea
add
sub
lcall
and
lret
stc
mov
jp
negl
and
cmpsb
or
insl
dec
mov
or
xchg
or
lock
cmp
idivb
iret
lret
sbb
sbbb
ret
popf
sbb
sbb
jo
xorb
lcall
lods
test
add
cmp
inc
shrb
sbb
les
test
jnp
xchg
inc
mov
mov
push
pop
sub
inc
js
sbb
sbb
pop
xchg
js
out
aaa
lock
dec
nop
jne
pushf
mov
movsl
dec
sub
dec
cmpsb
pop
inc
or
xor
mull
jecxz
adc
mov
jae
into
lret
mov
push
sub
add
push
push
pop
push
dec
sub
mov
outsb
lcall
int
mov
jo
repnz
xchg
or
mov
mov
mov
dec
loop
or
ret
xor
xchg
outsl
sbb
push
or
sti
mov
xchg
cltd
aaa
xchg
cmp
mov
inc
into
pop
ds
je
hlt
push
icebp
sbb
adc
lods
in
imul
cwtl
lcall
mov
fbstp
xor
arpl
lods
dec
cmp
xor
insb
pop
ja
sahf
push
addb
sti
dec
rcr
dec
sub
fldenv
stos
aas
repz
into
sbb
jns
dec
scas
mov
pop
je
cld
test
insb
jg
iret
xchg
insl
pop
movsb
div
lret
inc
sbb
xchg
orps
xchg
jns
jge
repnz
jno
mov
pop
jb
out
mov
cmp
mov
inc
dec
orb
in
fistl
mov
lcall
or
roll
out
and
mov
mov
repnz
pop
mov
hlt
das
sahf
mov
mov
jle
lcall
mov
fildl
adc
push
cwtl
mov
call
sub
mov
push
inc
stos
jge
imul
sub
stos
cmp
mov
lds
mov
test
add
test
gs
xor
mov
mov
push
adc
xchg
dec
mov
sbbb
fildll
ds
das
daa
notb
pop
int3
pop
ds
popa
mov
fidivrl
jae
iret
std
mov
lret
or
push
cmp
jae
mov
inc
xchg
cmp
pop
stos
loopne
in
das
mov
mov
test
ret
pop
push
dec
cli
sbbb
dec
push
cmp
dec
cmp
shl
stc
dec
sahf
enter
in
pop
enter
dec
sbb
xchg
ljmp
pop
loop
pop
push
or
rolb
sbb
pop
test
lds
sbb
push
rcrb
add
push
pop
dec
cmpsb
mov
lret
mov
inc
pop
sarb
adc
mov
iret
imul
insl
icebp
and
push
inc
imul
leave
sub
dec
mov
mov
aas
lds
xor
pop
inc
cmp
ja
dec
mov
pop
les
out
sub
cmp
dec
int
inc
sub
lods
add
mov
push
ret
cmp
stc
jne
pop
inc
adc
inc
in
mov
int
ljmp
xor
pushf
sbb
imul
into
add
push
rorb
cmp
dec
call
andl
push
mov
sti
ret
mov
test
pop
adc
outsl
dec
pop
adc
pop
pop
out
ret
fwait
lahf
jb
out
fmul
inc
dec
aad
jmp
cmp
sub
movsb
jns
pop
sub
out
dec
xchg
loope
mov
pop
gs
push
jecxz
jno
and
fstpl
and
mov
lret
inc
or
mov
mulb
std
sub
or
lock
add
cmp
inc
cld
sub
test
dec
xlat
leave
aas
jnp
push
xor
nop
std
xchg
inc
sub
rorb
lret
enter
repz
ja
push
sub
xor
faddp
pop
stos
es
sahf
sub
push
std
jno
inc
cmpsl
cli
in
cmpsl
pushf
imul
xor
sbb
mov
out
imul
or
shrb
add
inc
sub
xacquire
shlb
mov
pop
jl
dec
mov
sub
scas
outsl
dec
out
xchg
pop
inc
xchg
loope
jp
push
jbe
add
dec
cwtl
mov
dec
aam
repnz
xlat
cmp
test
add
push
das
push
rclb
fmuls
gs
push
jmp
inc
popf
test
mov
inc
outsb
nop
dec
shrb
out
mov
push
pop
ror
into
call
or
xor
inc
jmp
insb
mov
cli
push
inc
aaa
rclb
sub
cmpsl
push
test
sub
subl
das
adc
aaa
imul
pop
fcmovnu
and
pop
ljmp
xchg
sarl
xor
mov
jo
ja
adc
aad
mov
mov
addr16
das
jg
mov
shrb
mov
push
pop
dec
inc
mov
cmp
jo
loope
sbb
outsl
push
jns
jge
imul
mov
and
add
lods
xor
jge
or
into
xchg
ss
lea
arpl
scas
or
add
les
aaa
std
nop
addb
loope
addps
lcall
outsl
jg
outsb
xorl
and
ret
sub
mov
nop
xchg
imul
scas
pop
pop
ror
dec
aad
inc
mov
sahf
add
pop
push
jne
sub
xchg
out
sarb
xchg
ljmp
jns
cmp
fnstcw
and
std
or
push
fisubs
mov
fdivs
xchg
addl
add
pop
movsl
cli
daa
iret
cmpsl
lock
and
dec
dec
mov
xlat
cmp
mov
jbe
add
cs
lahf
dec
nop
xor
insl
push
cmp
scas
mov
push
movsb
dec
mov
icebp
mov
cmpsl
jae
arpl
sbb
push
in
popa
aam
fs
mov
les
aaa
pop
js
or
adc
sbb
pop
stos
lds
and
pop
cli
mov
sbb
daa
cmpsl
or
jge
jbe
mov
add
jmp
orb
ds
sub
jbe
dec
fsts
fsubr
cmpsb
jmp
pop
push
shlb
sub
jbe
and
sub
test
lock
and
mov
add
out
cmp
inc
cli
dec
bound
mov
mov
sub
pusha
mov
gs
pop
leave
cmp
or
test
stos
fiaddl
sbb
addr16
ret
faddl
testl
push
push
shrb
mov
sub
mov
sub
dec
pop
and
mov
sbb
ja
in
roll
mulb
add
jle
jbe
xchg
ficompl
push
add
and
loop
add
adc
rclb
pop
adc
mov
pop
or
pop
push
xlat
cs
test
jmp
inc
xchg
fcom
jge
call
movsl
sarb
mov
mov
outsb
ret
test
in
test
ret
mov
aas
int
lods
sbb
dec
adc
push
mov
or
jo
xor
lods
inc
push
in
cmp
dec
jnp
fisttps
cwtl
es
sub
mov
lret
lret
xor
lock
enter
jl
mov
jl
fiadds
cmpsb
sbb
insl
xor
jae
mov
repz
lods
or
push
jb
shll
xor
repnz
mov
jg
push
jle
jmp
xchg
jp
or
in
cmpsb
mov
hlt
xlat
mov
es
hlt
pop
fisubrl
cld
mov
test
shll
pop
xor
icebp
rcrl
xchg
in
ret
and
mov
scas
lods
inc
pop
sub
push
aam
dec
adc
add
ja
repz
xor
mull
loopne
int
sbb
sub
xor
test
test
dec
xor
jne
clc
cmpsl
add
cmp
scas
mov
cmp
jnp
jle
aad
out
je
xchg
popf
mov
pop
jmp
scas
pop
aas
repz
cwtl
push
xchg
stos
jnp
shrb
mov
mov
movsl
repnz
mov
xchg
jb
mov
in
add
push
scas
pop
push
dec
or
mov
out
imul
push
mov
mov
mov
lret
xor
mov
rol
push
outsb
mov
jb
les
clc
or
add
xor
pop
jne
imul
lea
pop
call
jp
fs
and
adc
std
ljmp
adc
sti
cmpsl
sub
push
clc
ffree
insb
jmp
jge
bound
ret
jp
fimull
jp
adc
add
xor
fwait
insl
lods
or
jbe
mov
sub
jle
push
pop
or
mov
lds
inc
push
ret
test
mov
out
out
outsl
std
or
adc
xchg
rcrb
cmp
ret
andb
aad
push
cmp
jno
loopne
popa
sbb
mov
lcall
cs
lds
jnp
inc
pop
fsubl
bound
insl
jnp
inc
in
arpl
cmp
jecxz
outsb
lods
dec
cmp
push
aaa
shl
sbb
jecxz
push
mov
iret
cmp
stos
ja,pn
jl
test
xor
das
jge
cmp
int3
das
dec
test
or
mov
sbb
or
test
mov
sub
scas
out
pushl
mov
adc
or
inc
dec
outsl
stos
mov
sub
cltd
sub
aam
xchg
ds
sbb
cs
aam
orl
sbb
jae
push
cld
cmpsl
sbb
mul
punpckhbw
lcall
jle
fsubr
pop
movsl
iret
mov
mov
xchg
jno
dec
adc
test
loopne
or
push
sbb
sbb
sbb
cli
sbb
add
insl
fs
add
jle
push
shlb
fstpl
lahf
ret
shlb
fidivs
push
inc
adc
mov
mov
push
jne
sub
mov
int
fdivr
insl
scas
in
imul
push
xchg
cli
cmpsl
fwait
pop
iret
inc
add
jb
aas
lods
pop
xchg
loop
adc
inc
js
or
bound
rcrb
mov
xchg
and
ljmp
dec
or
mov
pop
dec
icebp
pop
cwtl
mov
jp
out
push
add
fwait
cwtl
inc
push
push
xchg
cmp
ds
inc
loope
bound
test
pop
imul
les
faddp
xchg
sbb
jmp
arpl
fwait
dec
ja
push
pusha
dec
ja
jne
mov
pop
pop
fwait
in
push
jae
jmp
fnstcw
mov
xchg
shrl
test
dec
xchg
data16
negb
mov
out
daa
xchg
mov
pop
je
sbb
mov
int
cmpsl
lahf
stos
sbb
in
jecxz
insl
inc
dec
push
or
cs
cmc
sbb
xchg
fcomps
cli
aad
mov
lcall
jmp
push
xchg
nop
data16
out
movsb
mov
sub
push
pusha
clc
lret
or
mov
mov
mov
lahf
fildl
mull
and
test
lods
push
adc
jbe
push
adc
adc
dec
fistps
push
inc
mov
sub
ds
sub
pop
push
clc
scas
popf
fidivrl
imul
test
push
dec
sub
pusha
jmp
mov
mov
mov
outsl
imul
xlat
jle
scas
xor
outsl
add
add
mov
jg
dec
push
fst
fwait
scas
fstpt
push
cmp
loop
jmp
jbe
jg
jnp
push
push
adc
cwtl
sub
xchg
and
nop
xor
push
pop
sti
jnp
test
lret
rorb
pop
in
call
adc
lcall
adc
dec
ds
dec
movsl
scas
mov
ja
fisttps
jo
dec
lcallw
dec
add
push
jle
jb
push
pop
push
xor
push
in
sbb
shrb
enter
sub
mov
or
iret
mov
mov
arpl
int3
push
jecxz
adcb
pop
mov
call
cwtl
call
mov
cmpsl
aaa
or
sbb
mov
dec
mov
cmp
cmpsb
inc
int3
push
jne
leave
lock
jnp
dec
out
and
sub
jmp
loop
sub
je
xlat
mov
xor
add
dec
jae
jl
jns
outsb
das
inc
cmp
into
movsb
bnd
jecxz
add
repnz
dec
imul
mov
jno
jb
fisubrs
test
shlb
mov
movsl
jmp
cmpsb
push
icebp
insb
scas
outsl
push
jo
cmp
ret
sub
lcall
out
pop
pop
pop
mov
mov
mov
test
sub
fimull
leave
stos
xlat
jg
push
jns
pop
pop
push
aad
lds
loop
daa
jne
pop
push
inc
jg
cmovp
push
test
xchg
and
in
dec
mov
add
test
push
ss
dec
push
mov
icebp
inc
xchg
push
jnp
fs
add
or
loope
pop
paddsb
sbb
dec
bound
mov
jne
cld
pop
rcrl
jbe
sub
sbb
inc
pusha
popf
sub
mov
testl
or
sub
dec
cmpsb
jne
jmp
dec
test
in
add
test
jbe
dec
mov
pop
cli
shrl
in
pushf
inc
cli
or
push
mov
movsb
les
push
pop
inc
sbb
mov
mov
mov
xor
xor
mov
out
adc
movsl
jb
xchg
add
mov
filds
cmp
jne
or
adc
lods
push
in
mov
aam
fcom
pop
cwtl
jp
jp
popa
lahf
fidivs
shll
ret
push
or
pop
pop
dec
sbb
stos
sub
add
imul
mov
add
push
mov
aam
or
sbb
mov
and
pop
jp
movsb
in
sti
mov
dec
push
fisubl
cltd
inc
and
mov
sub
xor
add
ficoms
inc
jecxz
in
jo
inc
std
xchg
cltd
dec
lods
mov
cmpsb
pop
insl
dec
xor
repnz
shrb
fistl
loope
repnz
data16
insl
push
and
nop
pop
push
std
insb
adc
notl
mov
lods
jno
mov
js
xchg
scas
cwtl
push
out
xchg
test
cmc
es
in
jge
xchg
aad
insb
or
fsubrl
aam
outsl
insb
cmc
lods
test
sarl
fwait
repnz
ret
mov
mov
and
imul
jl
repnz
fdivrl
movsl
cld
mov
sub
jo,pn
cmp
xchg
inc
dec
std
lea
add
inc
mov
inc
push
dec
jp
sbb
jmp
gs
roll
cmp
inc
shll
push
rorl
add
aaa
test
aad
push
jnp
ljmp
stos
mov
mov
push
jg
push
stos
fiaddl
les
out
jle
enter
pop
xor
add
rcll
inc
xchg
loopne
shl
sahf
std
ds
nop
dec
cmp
lock
enter
xchg
data16
out
cmc
inc
cmp
or
jns
pop
fistpl
adc
dec
pop
je
psubd
lea
stos
inc
jnp
xor
out
fs
mov
iret
mul
sub
jns
mov
xor
lods
mov
xchg
jle
mov
sarb
lret
movsb
cmp
enter
or
popa
xchg
shll
pop
in
bound
push
insb
mov
push
push
movsl
roll
and
test
out
idivb
clc
mov
and
outsb
pop
cwtl
dec
lret
xchg
icebp
imul
test
mov
inc
inc
jnp
repnz
lock
lret
sub
or
inc
nop
mov
push
mov
jb
aad
pop
jle
lds
in
adc
mov
dec
jb
repnz
in
push
mov
loop
bndstx
jl
xchg
sarl
cmpsl
sub
pop
dec
cmpl
arpl
mov
aad
aaa
jmp
inc
jns
pop
lcall
pop
and
and
cmp
fidivs
pop
repnz
or
bnd
pop
jmp
sahf
push
call
loope
pop
mull
push
xchg
sbb
push
mov
aam
lds
nop
pop
subb
out
lcall
jbe
in
test
push
data16
add
rolb
movsb
dec
jl
cmp
cld
xor
sbb
test
mov
push
lcall
repnz
sub
or
gs
dec
push
xchg
sbb
nop
pop
push
rcrl
cmp
fwait
rcl
cltd
ss
cmp
imul
clc
sbb
push
jns
fidivrl
pop
mov
wbinvd
xor
and
ret
inc
or
rorb
sbb
aas
push
adc
jns
pop
rcrb
push
add
jg,pn
push
iret
add
push
scas
ss
imull
sub
xchg
add
cld
pop
push
sbb
lahf
sub
imul
xchg
ss
pop
movsb
pop
daa
xchg
lds
shll
in
jg
adc
lock
enter
cli
jno
leave
mov
sub
xchg
inc
inc
in
mov
mov
ret
call
insb
mov
outsl
adc
xchg
sub
jae
mov
and
cmpsb
jbe
cmp
sti
in
loopne
adc
aaa
in
push
dec
das
jg
or
in
in
lods
mov
xchg
mov
addb
jae
ret
icebp
pop
shrd
rolb
or
int
cmp
cmp
out
pop
ds
cmp
loop
or
xchg
xlat
mov
aad
loopne
push
push
bound
mov
rcll
and
xchg
lods
aad
sar
in
aas
sub
pop
dec
mov
inc
xor
sti
leave
icebp
adc
xor
xor
mov
mov
cmp
or
push
mov
sub
iret
shlb
call
fidivl
cld
cmp
fisubrs
leave
or
cmc
jo
mov
dec
sarb
rclb
adc
rolb
scas
daa
jge
aaa
je
sub
data16
sub
scas
push
sbb
jl
push
hlt
int3
clc
add
adc
dec
jne
ja
jno
and
incb
pop
call
incb
enter
int
dec
jl
fucomp
aas
jl
cmp
rcl
fldl
ja
xor
mov
loope
add
push
test
test
inc
loopne
and
jbe
aaa
lcall
push
sbb
push
jns
xchg
dec
cmpsl
mov
jno
pop
scas
pop
push
push
add
inc
dec
insl
add
mov
mov
out
jg
push
jae
inc
mov
xchg
outsb
mov
push
or
sahf
into
sbb
cwtl
cmp
jmp
cli
in
imul
xchg
stc
cli
pusha
fwait
inc
and
cmp
iret
mov
cltd
xchg
xor
xlat
fisubrs
enter
stos
insb
mov
sub
push
push
mov
cmpsl
xchg
sti
mov
data16
lock
sti
sbb
pusha
test
aaa
mov
push
sti
dec
lods
sub
jg
popa
inc
mov
popf
fs
mov
sti
pop
das
mov
mov
rclb
test
in
orl
mov
push
dec
rclb
mull
loope
jmp
xor
jg
fdivl
add
adc
cmp
test
jecxz
cmp
hlt
and
in
je
mov
jmp
sbb
mov
xchg
xor
dec
rclb
sub
jmp
adc
xchg
dec
fsubp
dec
insl
test
shrb
push
fs
adc
mov
pop
out
jb
jo
cmp
adc
dec
nop
push
aas
nop
cld
stos
sti
or
loopne
sub
mov
in
add
loopne
aaa
sahf
jne
adc
push
leave
sbb
jle
and
mul
jns
into
jns
fists
idivb
outsb
add
jns
fdiv
mov
cmp
jmp
adc
rcrb
in
call
fistps
repz
popf
sarb
add
into
pop
and
lahf
and
add
mov
stos
fdivr
xor
and
xchg
pop
xor
rolb
jne
push
mov
mov
lret
jns
jle
jne
mov
bound
dec
fs
jbe
mov
iret
jns
add
scas
jle
mov
in
sub
xor
sub
cmp
sbb
mov
je
outsl
xor
jb
jg
or
aas
pop
dec
bound
aad
imul
mov
scas
sahf
shlb
xor
dec
cld
mov
sbb
iret
dec
fldt
sbb
inc
in
andl
dec
repz
pop
jp
mov
rorb
cmp
jmp
scas
pop
xchg
xchg
in
out
mov
imul
ljmp
icebp
test
enter
mov
push
adc
les
movsl
and
flds
dec
call
mov
ljmp
notb
nop
loop
popf
out
pop
lds
shll
push
dec
dec
mov
sbb
and
fstpl
fcoml
add
das
push
leave
push
mov
cmc
repnz
repnz
xchg
mov
cmp
add
jge
push
pushf
and
jl
adc
sti
jb
pop
stc
pop
push
and
ds
mov
fcomps
ret
add
jae
iret
rclb
ret
push
out
mov
push
ljmp
andb
jo
gs
adc
add
out
into
pop
stos
dec
and
xor
mov
out
mov
shl
ret
cmp
or
dec
incl
daa
pop
jmp
xlat
jns
jo
dec
add
or
call
mov
cmp
mov
sbb
das
or
iret
inc
out
xor
bound
adc
pop
popa
sbb
hlt
js
test
fists
jne
ds
pop
mov
pop
out
mov
dec
sbb
adc
pop
mov
add
insl
or
add
ja
cmpsl
outsb
mov
sbb
insl
fs
movsb
sub
imul
rcll
in
jne
add
xor
cli
mov
cmpsl
push
jp
pop
add
sbb
push
or
movsb
movsb
mov
popf
or
nop
loop
add
cwtl
es
mov
out
xor
sub
xor
adc
xor
push
adc
rol
enter
jg
ret
jecxz
mov
cmp
push
xchg
js
aad
jns
stc
clc
jae
pop
mov
jb
or
enter
je
dec
inc
push
and
shll
or
pop
dec
xchg
push
fiadds
insl
dec
icebp
rcr
test
mov
add
aam
clc
sbb
and
in
aas
mov
fldenv
out
mov
ljmp
push
pop
pop
adc
sbb
sbb
lods
push
lock
adc
mov
dec
fbld
fstp
mov
pop
popf
mov
xor
adc
iret
stos
jne
xchg
int3
jp
pop
sahf
or
mov
aas
add
inc
mov
ret
lcall
push
xchg
fucomp
xor
push
pushf
stos
fidivrs
popf
add
and
adc
jge
or
xor
mov
mov
sbb
loop
or
inc
jl
jl
and
push
push
sti
popf
cmp
or
xchg
cs
mov
cltd
movsl
sbb
pop
dec
inc
sbbl
mov
adc
add
mov
divl
adc
arpl
and
sahf
stc
fildl
in
sarl
sub
insl
dec
sub
incb
xor
loopne
pushf
push
or
into
fidivs
and
pop
cmp
xchg
mov
mov
ret
cltd
es
jecxz
movsb
push
cmpsb
and
mov
scas
popa
aas
pop
jns
inc
and
mov
adc
jg
mov
hlt
jg
xchg
jne
sti
sub
aaa
sub
mov
cmpsl
and
lahf
lahf
pop
inc
lds
js
loopne
aam
out
dec
pushf
aad
xchg
mov
mov
sbb
jp
out
pushf
lret
cmp
dec
repz
out
shlb
push
loope
pop
out
inc
in
and
imul
pop
gs
pop
dec
jb
ret
or
stc
sbb
shlb
xor
mov
das
xor
jbe
pop
imul
cmp
test
mov
jne
sub
dec
and
test
pop
pop
insl
inc
mov
mov
rclb
mov
outsb
mov
sahf
jle
push
jmp
std
mov
iret
stc
scas
lcallw
lods
js
xchg
insl
xchg
rolb
les
test
ret
add
movsb
inc
std
imul
ss
nop
pop
dec
fcoms
das
or
frstor
and
jne
cs
fcmove
push
or
cmp
insl
dec
lock
iret
dec
mov
inc
dec
xchg
dec
sub
inc
or
mov
mov
xorl
movsl
into
nop
and
or
sbb
xor
loopne
inc
popf
adc
adc
add
ss
test
sub
repz
call
xchg
lods
jne
jne
pop
sub
out
sbb
sub
sbb
cmp
out
iret
hlt
dec
rclb
pop
repz
int3
mov
inc
sub
jnp
pop
sub
adc
ffree
sub
inc
mov
fldl
out
cmp
push
jns
and
sbb
xor
sub
out
mov
andl
das
dec
outsl
and
in
cwtl
sub
jle
iret
jo
hlt
mov
fwait
shrl
xchg
es
rol
test
mov
inc
dec
jno
lret
jbe
outsb
jmp
mov
pop
push
jl
cmp
inc
jb
test
inc
sub
sub
jp
daa
xor
fs
or
cmp
add
mov
dec
fs
out
pop
inc
sbb
out
dec
rol
sub
call
xchg
fwait
subl
sti
ja
or
push
mov
sbb
test
popf
pop
sub
xchg
pop
lcall
push
push
mov
mov
cmp
sub
loope
pop
fwait
outsl
push
aad
adc
in
xor
push
xchg
leave
shl
jbe
mov
imul
loope
mov
pop
pop
addr16
jo
jo
xchg
sbb
push
dec
test
adcb
mov
ret
sub
push
test
cmpsl
stc
inc
lods
push
stos
lds
jecxz
push
lods
arpl
xchg
xchg
iret
sub
inc
inc
insl
pushf
jp
je
pop
mov
and
and
xor
jg
arpl
jne
ja
and
mov
xor
mov
pop
xchg
imul
enter
aam
pop
jl
sub
mov
insl
add
jno
fwait
mov
ja
and
or
mov
pop
jns
jae
in
mov
push
addr16
hlt
push
je
dec
loopne
dec
or
icebp
mov
sti
sbb
jbe
imul
dec
dec
pop
popa
jg
divl
andl
jg
jo
cmp
add
dec
or
stc
and
cmp
fimuls
call
adc
jp
push
repz
mov
or
int
xchg
fistpl
in
cmp
aam
aad
xchg
sub
jl
ror
push
lret
mov
aam
fistpll
xchg
sub
sub
inc
sahf
popa
cli
pop
xor
cld
mov
icebp
call
rcll
arpl
jmp
sbb
pop
insb
lret
arpl
cs
std
xchg
test
cs
dec
pop
out
jns
sbb
and
push
mov
dec
ja
aas
sub
daa
dec
leave
cli
push
push
push
sarb
loope
adc
mov
adc
push
xor
push
push
test
pop
mov
xor
push
jno
jge
or
add
mov
dec
fldt
xor
or
pop
mov
and
ret
mov
mov
and
mov
rorb
fildll
pop
into
int3
dec
aas
cmpsl
pop
add
bound
lea
push
sub
inc
cmp
jo
add
push
std
sbb
xchg
loop
jno
sti
ss
das
jns
jle
inc
and
lods
repnz
cld
fnsave
adc
add
push
testb
dec
gs
iret
jle
rolb
cmp
test
and
mov
mov
pop
lods
adc
adc
mov
push
dec
imul
pushf
jo
movsb
or
mov
sti
add
cmp
test
fwait
enter
xchg
repz
mov
sbb
cmp
jl
pop
inc
mov
sbb
and
push
inc
push
jno
mov
adc
inc
pop
cmpsl
pop
sub
dec
cld
arpl
xor
sub
inc
mov
xchg
cli
inc
es
and
pop
std
jne
push
rcr
xor
push
das
and
rol
movsl
aas
ss
sub
rol
call
pop
cltd
je
add
jl
sbb
cmp
into
es
sub
or
inc
sti
and
psraw
insl
dec
jae
push
repz
sub
mulb
mov
mov
data16
faddp
in
inc
adc
jl
js
test
cmc
inc
jge
cltd
rcrb
loopne
add
push
push
mov
aas
jo
or
stos
call
dec
out
insl
mov
mov
dec
sbb
cmp
sbb
sub
je
lea
xchg
or
jg
movsb
gs
sbb
iret
push
push
mov
enter
adc
or
outsl
add
mov
xchg
stos
mov
cmp
dec
mov
frstor
xor
mov
movsl
js
mov
hlt
shll
mov
inc
adc
adc
call
fimuls
jg
add
xchg
out
subb
imul
lret
push
xchg
xlat
adc
push
add
jge
movsw
sub
das
mov
adc
sub
ret
jg
outsb
inc
jp
push
out
aaa
dec
mov
cld
lahf
jno
outsb
pop
je
fidivl
cs
pop
xor
xchg
push
ss
push
in
andb
into
cs
and
jns
loope
lcall
pop
aaa
sub
aam
lds
cmpb
stos
outsl
jmp
add
pop
mov
add
mov
pusha
out
les
mov
lds
jnp
jo
mov
xor
cmp
js
cmc
xchg
mov
lods
sub
mov
sarl
stos
lods
xchg
mov
imul
add
dec
cmp
push
and
jl
jmp
shlb
std
aaa
xchg
push
lahf
aaa
mov
insl
loope
sub
add
aaa
lahf
mov
mov
inc
stc
pop
stos
out
jp
dec
mov
dec
ljmp
repnz
push
nop
xchg
xor
movsl
fs
jae
shll
and
int3
mov
jmp
lea
sbbb
gs
jne
cmp
mov
jb
mov
push
movsb
jmp
dec
inc
rep
or
leave
and
jo
sub
sbb
orl
sahf
cs
xchg
repnz
aad
pushf
push
iret
jbe
call
xchg
mov
sbb
push
pop
or
js
stc
ds
outsb
lock
add
jno
pop
aaa
cmp
mov
dec
mov
in
out
cmpb
mov
lea
inc
sbb
mov
idivb
pop
icebp
xor
rclb
inc
outsl
test
sahf
jmp
fldl
pop
cmpb
mov
inc
pop
pop
adc
push
push
outsl
and
sbb
mov
fs
out
rorl
mov
dec
or
and
adc
fidivrl
ja
and
xor
pop
fcmovne
or
ljmp
mov
out
call
xor
jle
adc
leave
or
idivl
pop
or
stc
xchg
aas
adc
inc
pusha
js
bound
insl
push
rolb
negb
ret
lods
xor
lahf
sbb
mov
pop
xchg
push
ja,pn
mov
mov
enter
or
out
adc
movsb
loope
scas
lahf
out
and
and
movsb
bound
xor
cli
out
push
adc
stc
add
mov
and
loope
mov
push
pop
shlb
push
pop
popf
ret
mov
lret
scas
xchg
out
mov
pop
sbb
xorb
pop
push
and
jnp
jmp
and
cmovl
inc
movsl
xchg
push
cmp
xor
inc
lods
dec
dec
xor
pop
mov
out
dec
sti
cmpsl
mov
cli
push
daa
pop
in
xor
xor
mov
jno
js
rclb
or
fs
cmp
push
mov
sbb
dec
inc
xlat
mov
mov
dec
push
xor
push
push
ja
adc
dec
mov
imul
xchg
rcrl
add
mov
xchg
inc
push
jp
xor
push
fistpl
sbb
into
adc
jae
gs
rclb
call
mov
mov
les
cmp
adcb
testl
test
cmp
ss
bound
mov
mov
sbb
adc
aas
mov
ficoml
das
xchg
pop
mov
xchg
jl
pusha
sbb
imul
or
and
xor
loop
adc
lret
cli
in
jmp
frstor
lods
push
push
pop
or
pop
sub
outsl
adc
cmp
test
das
fstps
push
mov
adc
cmp
mov
outsl
mov
push
sub
rcrb
jecxz
mov
scas
aad
fsubs
xchg
sbb
and
cmp
xor
push
xchg
loop
sub
xchg
nop
mov
cmp
inc
gs
movsl
mov
mov
mov
stc
pop
and
xor
in
imul
add
push
jl
jo
sarb
push
mov
popa
stos
and
dec
mov
ror
jl
gs
inc
xchg
pop
out
mov
mov
mov
sbb
inc
mov
test
in
sbb
fidivrl
cmp
push
ret
pop
shlb
inc
test
int
sbb
xor
loop
inc
jmp
loopne
popf
js
xchg
push
jmp
sbb
addr16
pusha
cmc
push
repnz
jle
pop
sarb
frstor
and
data16
lock
movswl
stos
rcr
out
push
mov
cmp
push
inc
lret
daa
cmp
sbb
sub
dec
leave
push
orl
mov
test
inc
mov
into
jle
xor
int
push
cli
add
mov
pusha
stos
mov
jle
add
cmc
jle,pt
and
imul
adc
xor
sbb
dec
imul
jo
cmpsb
sub
lods
repz
mov
inc
jl
das
xchg
fs
rorb
mov
gs
add
add
int3
push
mov
data16
imul
jns
sub
gs
andl
add
xor
adc
jo
adc
jmp
shr
or
add
pop
push
mov
ret
mov
aad
pop
jmp
inc
sarb
inc
aaa
mov
cli
mov
and
icebp
loopne
loopne
cmc
dec
outsb
test
dec
pop
std
sub
xor
adc
add
mov
pop
add
out
jo
fs
imul
pop
mov
pop
popf
mov
out
sbb
jns
dec
lock
fildl
mov
in
xchg
add
ljmp
lret
aad
shll
movsl
jl
test
xor
out
shlb
lahf
inc
and
enter
xchg
out
pop
mov
mov
mov
into
mov
push
je
das
in
lods
and
mul
pushf
mov
not
test
inc
es
pop
pop
push
mov
push
xlat
ss
jo
lds
jbe
pop
pop
or
int
push
je
pop
jle
gs
rorl
mov
mov
sbb
lds
mov
pop
jnp
pop
push
xchg
aaa
repz
repz
jp
cli
lds
shlb
mov
shll
movsb
or
push
add
inc
mov
mov
adc
dec
ljmp
lret
jmp
mov
cmp
sarb
fwait
xchg
cmpsb
inc
mov
imul
iret
scas
jmp
ja
pop
icebp
inc
shlb
dec
sahf
hlt
shll
aas
mov
cmpsl
cmp
cmp
adc
pop
pop
adc
xlat
xchg
stos
cmp
hlt
add
jb
xchg
and
sub
ss
inc
xor
jns
scas
pop
inc
orl
aaa
icebp
jle
popa
inc
sub
or
ljmp
scas
or
pop
pop
roll
xchg
cli
pop
sahf
nop
in
into
insb
adc
mov
std
cwtl
aad
push
enter
imul
jb
popa
sbb
adc
sbb
lea
ret
xor
dec
pop
xchg
out
jge
sti
dec
ja
loope
clc
and
fsubl
pushf
daa
jns
jmp
bound
cmp
jecxz
xor
mov
mov
clts
iret
jae
fsubr
scas
int3
dec
daa
daa
push
lods
xchg
add
pop
xor
mov
xor
xor
int
push
dec
mov
push
inc
sbb
shrb
xlat
inc
ds
pop
push
mov
outsl
xor
and
pop
filds
popl
sbbb
lahf
xchg
inc
mov
mov
xchg
aad
adc
or
ss
xor
pop
sahf
dec
mov
call
test
jnp
push
sub
cmp
push
xor
pop
fisttps
xchg
rorl
je
sbb
mov
pop
inc
and
sub
sarl
cltd
xchg
ret
adc
sti
sub
cmpsl
add
pop
lcall
popf
ret
push
imull
in
pop
jae
pop
push
loop,pn
rcr
add
sbb
pushf
cmp
aas
popf
lods
sub
add
test
sbbl
pop
pushf
add
dec
pushf
ja
inc
jge
in
mov
or
je
and
fisttpl
int
or
pop
outsb
sub
aad
mov
pushf
mov
scas
cmc
push
test
out
xchg
testb
or
dec
cmpsl
sbb
out
sub
cli
fsubrs
fwait
lahf
jns
jae
adc
fnstcw
cmp
orl
dec
or
sub
fs
lds
icebp
or
add
push
jno
movsb
daa
inc
std
pop
cmp
mov
scas
ja
aad
xor
xchg
push
jge
add
push
xor
xor
nop
out
insb
aaa
scas
orb
inc
ficomps
cmpsb
sbb
pusha
add
cwtl
add
stos
ds
mov
or
out
out
popa
js
mov
mov
jge
push
mov
call
inc
mov
mov
fldt
and
or
adc
ret
xor
mov
rclb
mov
in
or
ret
push
scas
sub
dec
fsubp
out
adc
mov
and
lock
dec
and
pop
and
jg
or
clc
and
xchg
popl
push
aaa
fildl
xchg
les
pop
mov
or
divl
xchg
loop
inc
out
ret
movsb
jbe
inc
adc
in
adc
dec
mov
into
shll
stc
mov
dec
jno
addl
outsb
fldenv
loopne
out
cwtl
fadd
jne
lock
xchg
add
aas
insl
push
mov
mov
pop
mov
fs
mov
push
popa
adc
mov
mov
out
mov
fistpl
xchg
arpl
lods
ss
and
daa
fisubs
xor
mov
mov
inc
pop
push
xchg
adc
jae
leave
dec
push
call
and
leave
hlt
mov
pop
clc
cmp
jmp
xchg
repnz
rcrl
scas
xchg
dec
ljmp
pop
leave
sahf
sbb
mov
push
daa
mov
sarl
stc
and
mov
and
xchg
ja
outsl
mov
popf
sub
outsb
dec
cwtl
mov
or
rcrb
int
mov
sub
iret
sub
or
ljmp
sahf
aad
das
mov
cmp
and
sahf
insb
xchg
or
add
push
arpl
push
and
hlt
sarl
adc
stc
sbb
or
jno
arpl
clc
cld
dec
aam
and
xchg
loope
mov
jns
repnz
push
inc
aam
mov
jg
push
in
xchg
cmp
pop
dec
inc
push
fisttpll
repz
ljmp
inc
push
ficoml
xor
popf
lea
cli
dec
fiaddl
and
lcall
xchg
mov
lds
inc
cwtl
stc
sub
mov
pop
jno
mov
push
fidivl
push
or
ret
stc
sbb
in
je
inc
xchg
ljmp
gs
cmpsb
daa
test
and
fisttpl
xchg
sub
dec
loopne
testl
inc
or
push
lcall
mov
add
cmpsl
jno
lea
dec
fdivrl
lret
push
shlb
sbb
ffree
mov
leave
pop
pop
sub
cmp
mov
cmp
lods
jne
lds
mov
add
clc
aad
sbb
ss
repnz
ss
fnstsw
sbbl
jae
xchg
mov
hlt
add
out
sbb
fbstp
sti
or
test
fsubl
icebp
sbb
pop
cmp
xor
rolb
sub
adc
or
lock
lret
imul
and
dec
scas
mov
inc
lods
mov
in
ds
dec
dec
loopne
sub
insl
mov
inc
mov
xchg
cmpsb
clc
inc
je
fidivs
cmp
xor
jo
out
stos
test
vpsubusw
repz
pop
ja
xor
jne
into
bound
and
adc
xor
inc
mov
add
mov
addb
sbb
cmpsb
mulb
mov
ret
adc
pusha
clc
nop
in
inc
loop
mov
push
mov
mov
imul
stos
mov
pop
popa
sti
xor
xchg
dec
pop
stos
mov
js
jg
popa
pop
cld
jp
mov
and
jns
cmp
sub
orl
xor
pop
iret
adc
out
popf
rcl
mov
xor
add
pushl
lds
dec
adcb
and
inc
cmpsl
out
das
sbb
xchg
adc
pop
sub
lcall
pop
pop
push
jge
gs
xor
hlt
das
inc
push
cmp
testb
mov
xor
mov
xchg
push
int3
stos
shrl
mov
push
xor
dec
in
call
fwait
push
icebp
cmp
insl
fstpl
inc
lahf
mov
adc
or
outsl
lahf
stos
push
out
sti
stos
push
and
andb
stos
adc
inc
fisttps
test
push
jbe
jl
movsl
dec
pushf
shrb
jae
add
cmovne
fistpl
mov
xchg
fisttpl
out
sbb
rclb
sub
add
sbbl
lds
leave
imul
lds
and
sub
pop
les
sbb
sbb
inc
push
or
test
nop
pushf
inc
pop
and
sub
lea
and
fcomps
pop
loop
or
je
mov
sti
cmc
xchg
fs
sti
xlat
jmp
pop
lds
pop
push
fs
in
sbb
pop
mov
repnz
mov
lahf
push
test
or
lret
push
push
and
mov
dec
mov
int
fcmovnbe
cmpsl
js
ss
cmp
loop
daa
icebp
fwait
mov
sti
repnz
movsb
lahf
mov
mov
sbb
js
clc
in
xchg
out
mov
jg
jne
shlb
cmpb
scas
rcrb
repz
pop
and
or
jnp,pn
enter
sub
jl
iret
jmp
xchg
mov
pop
or
sub
inc
nop
mov
sbb
popf
lret
push
sar
xor
in
or
test
add
push
xchg
sub
call
cmp
leave
les
test
xchg
sub
sub
jns
icebp
push
mov
hlt
sub
and
and
or
lahf
cmc
sub
scas
adc
stos
dec
and
into
movsl
popf
out
imul
inc
mov
inc
xor
dec
inc
mov
iret
fadd
mov
adc
out
or
push
popf
xor
push
inc
daa
movsb
les
mov
and
ret
enter
int3
or
mov
push
aaa
push
jne
jecxz
nop
xor
or
aad
sbb
inc
push
dec
lds
movsl
xchg
lcall
sbb
imul
pop
std
inc
jbe
iret
jne
ss
add
bound
fnsave
and
leave
in
cltd
sub
int
jmp
or
les
inc
pop
jg
mov
xor
stc
adc
call
lret
imul
xchg
ret
fs
sub
fdivl
push
pop
fucomp
inc
fadds
ret
pop
xchg
nop
fnstsw
mov
adc
sarl
aas
cmp
cmc
mov
inc
cmpsl
add
xor
dec
test
push
je
sahf
mov
dec
push
adc
jp
in
jmp
pop
cld
les
mov
clc
xchg
subl
dec
repz
pop
push
shr
and
aaa
scas
sbb
xchg
scas
mov
pushf
push
xor
xor
xchg
adc
mulb
xchg
frstor
icebp
fchs
push
repnz
adc
in
or
hlt
push
push
cli
imul
imul
test
imul
cwtl
sbb
xor
loope
in
mov
iret
decb
fwait
xchg
xor
sub
popa
imul
mov
xchg
add
loopne
sbb
mov
add
and
cmp
out
test
mov
jg
sub
mov
ss
outsb
in
daa
xchg
lcall
and
xor
jnp
lret
out
lods
xchg
ficoms
and
outsl
pop
aad
test
pop
lods
add
std
push
pop
iret
xor
lret
and
or
sub
js
or
mov
loopne
mov
data16
inc
in
xor
stos
xchg
dec
push
mov
lret
lahf
cmpb
sub
mov
ret
in
fisttps
mov
imul
push
movsl
jge
dec
call
cmc
sub
jnp
and
insb
inc
sbb
lret
or
add
inc
stos
pop
jbe
mov
push
es
or
jge
into
scas
inc
lahf
cmpsb
lcall
fadd
mov
push
mov
mov
dec
out
xor
fsubrl
in
mov
fwait
or
mov
xchg
pop
push
fwait
outsl
fcoms
mov
and
fisttps
int
mov
add
repz
inc
sbb
pop
cs
inc
ret
jmp
negl
push
sti
jecxz
sbb
pushf
flds
popa
adc
mov
jg
add
xlat
clc
sub
sarl
lret
push
data16
sarl
pusha
ds
xchg
mov
bsr
call
shll
arpl
mov
sub
roll
aad
push
scas
into
aas
mov
mov
inc
mov
mov
inc
inc
adc
jne
dec
pop
push
cmp
jl
and
push
fcmovnbe
mov
mov
aam
fsubr
mov
aas
out
mov
jge
mov
lds
out
or
test
add
mov
pop
sbb
add
push
push
fisubrs
or
xchg
in
in
pop
fstps
jne
repnz
inc
popf
sahf
add
jle
mov
aad
sub
scas
mov
add
push
subb
loop
jmp
test
inc
ret
xor
rolb
shl
add
pop
std
push
dec
cmpb
enter
inc
add
pop
cmp
push
dec
or
ss
rorl
cmp
xor
mov
fsubr
test
push
xchg
mov
xchg
nopl
int
js
movsl
xor
mov
jno
lret
push
sub
mov
insl
inc
xor
inc
and
mov
push
nop
aam
push
jmp
lock
les
cwtl
mull
adc
pop
test
lods
cli
in
dec
jp
pop
mov
unpckhps
dec
fcomps
xor
xor
or
jecxz
hlt
imul
stos
cmp
loopne
jb
sbb
imul
mov
cmp
push
jb
cmpsb
and
daa
je
dec
jle
push
std
inc
imul
cwtl
push
add
add
mov
dec
pop
js
in
ret
icebp
or
pop
gs
mov
data16
lahf
mov
aam
movb
cmp
iret
and
adc
fwait
shrb
icebp
sbbl
jns
insb
and
dec
dec
or
mov
movsl
mov
pushf
push
lea
inc
mov
popa
pop
into
aaa
jmp
xchg
scas
xor
add
fbstp
push
inc
mov
sub
push
sbb
pusha
mov
push
out
push
rcll
jle
mov
adc
lea
adc
shl
and
pop
inc
cwtl
lea
jns
cli
ss
repz
incl
cmp
out
push
pop
out
fstpl
jb
adc
fcomps
push
sbb
xor
sbbl
inc
movsb
xor
loopnew
mov
aas
loope
xchg
push
fcmovnu
pusha
cmp
adcl
cmp
imul
mov
pop
pop
ljmp
pop
inc
daa
outsb
jns
lret
dec
cwtl
jae
bound
and
jmp
fisttps
test
mov
cmpb
pop
dec
gs
and
inc
lods
mov
mov
jo
and
aas
insb
xor
mov
mov
pop
lods
and
test
xchg
loop
pop
inc
and
es
mov
mov
ss
bound
cs
repz
jae
les
test
pop
inc
xor
xor
mov
xchg
push
sub
mov
sub
out
mov
es
loopne
popf
es
add
in
outsl
xchg
push
insb
dec
xchg
scas
adc
mov
adc
mov
mov
jnp
jnp
sti
cs
test
sbb
jne
aad
std
dec
testb
mov
arpl
xor
pop
and
jmp
sbb
rolb
out
dec
jl
pop
mov
and
or
xchg
jle
pushf
or
dec
cmp
lret
aad
and
mov
outsb
sbb
lahf
sub
lcall
push
jno
mov
imul
pop
fsubs
orl
mov
push
lahf
and
movb
sbb
xor
repz
aas
mov
test
mov
js
or
hlt
or
push
in
imull
xchg
arpl
andl
jle
test
inc
sarb
dec
dec
jg
push
pop
scas
aas
dec
sub
xchg
and
fisttpl
subl
mov
and
ljmp
jecxz
cltd
jns
lret
sar
rorb
and
je
mov
cmp
outsb
ja
sbb
mov
mov
mov
dec
mov
mov
xchg
shl
ja
jg
clc
mov
fs
into
addr16
jns
loopne
or
xchg
or
sub
gs
sub
mov
jns
sbb
shr
xchg
out
out
push
out
fildll
test
jp
lds
mov
xchg
push
adc
repnz
out
leave
cld
clc
dec
push
fcom
addr16
sbb
leave
mov
and
dec
rcll
sbb
cmpsb
ficomps
imul
daa
sar
fisttps
mov
outsl
dec
cld
jo
scas
repz
mov
loop
mov
inc
fnstsw
test
inc
cmp
lock
bound
pop
jge
scas
je
aam
repz
mov
cmp
cmpsb
cltd
jle
outsl
sbb
pusha
addb
scas
xor
out
sbb
mov
les
or
int
into
sbb
stc
cmpl
fistpl
inc
sbb
cmp
add
ljmp
adc
xchg
aaa
pop
mov
loopne
cmp
mov
jmp
inc
mov
adc
cltd
stc
pusha
cltd
sbb
insb
int
cmp
push
pop
ds
push
fnsave
addl
sbb
xor
push
mov
or
mov
mov
aad
dec
push
cmp
jge
add
push
test
sahf
test
inc
in
repnz
les
adc
xchg
cmpsl
inc
roll
lret
adc
xor
xchg
mov
jnp
push
push
leave
jb
mov
std
adc
jns
pop
fisttpll
jae
xor
mov
pushf
mov
lcall
orl
mov
mov
xor
cwtl
shlb
sbb
jb
add
popl
roll
push
cltd
dec
nop
je
loopne
fstl
ja
adc
mov
insl
icebp
mov
inc
pop
rorb
movsl
ficompl
cmp
mov
jg
ret
sar
mov
xchg
subb
mov
sbb
into
stos
xchg
xchg
cwtl
movb
add
lret
orb
clc
out
loop
jb
pop
hlt
cli
out
mov
xlat
mov
pop
mov
inc
lret
mov
pop
and
xchg
mov
xchg
les
scas
push
xor
cmp
xor
cltd
inc
jo
jg
dec
jecxz
fdivl
sub
xchg
div
inc
shl
pusha
fwait
sub
jg
test
jns
jecxz
xchg
mov
xchg
insb
add
incl
leave
cmp
add
shrl
fimull
test
test
push
xor
loope
fwait
cmp
ja
push
fsubs
daa
test
hlt
mov
adcb
repz
loop
arpl
lahf
mov
lcall
pop
lahf
pop
pop
js
jnp
in
xor
mov
jp
notb
out
cmpsl
push
out
outsl
fmull
movsb
data16
mov
push
and
adc
fcoms
adc
mov
aaa
xor
push
mov
adc
mov
or
mov
push
lock
mov
dec
jle
ficoml
fs
or
das
xchg
adc
sub
jns
enter
sub
mov
ficompl
in
insb
sbb
mov
inc
data16
mov
jnp
rcr
sysenter
jmp
jne
mov
dec
mov
imul
testl
xchg
xchg
test
mov
xchg
add
insl
pop
ss
call
dec
test
mov
mov
inc
and
xchg
push
inc
cld
mov
sbb
test
jecxz
cmpsl
add
mov
fldt
or
mull
movsl
lret
into
into
mov
cmp
arpl
and
cmp
lock
cmp
jl
arpl
pmaxsw
pop
inc
cmpsb
insb
add
and
pop
fnsave
popf
mov
inc
shll
dec
xchg
lea
in
outsl
push
popw
negl
mov
pop
push
mov
mov
stos
scas
stos
or
push
into
out
ret
add
mov
jb
in
xchg
mov
mov
cmp
sbb
nop
in
add
mov
pusha
mov
aam
iret
adc
inc
mov
mov
xor
cmpb
fstps
iret
mov
mov
xchg
pop
cmp
clc
clc
push
mov
cmpsb
mov
fs
es
insl
xchg
std
xor
adc
sti
daa
pusha
in
daa
ret
jmp
out
xchg
lahf
cltd
in
adcl
cmc
out
inc
inc
mov
lods
dec
pusha
rol
jns
add
adc
mov
pusha
inc
test
mov
shr
insb
inc
inc
inc
sub
mov
xchg
iret
xor
mov
adc
sub
std
inc
dec
divb
jp
inc
cmp
aam
fiaddl
inc
jmp
cltd
loop
jne
cs
into
inc
adc
xchg
xlat
rep
aas
xchg
xchg
ljmp
addr16
mov
jb
addb
sbb
pushf
test
loop
mov
sti
sbb
out
mov
and
xor
fs
jns
dec
push
adc
fnstenv
or
iret
in
mov
add
cmp
push
mov
mov
inc
loop
add
dec
icebp
sub
xlat
and
test
imul
push
xor
iret
mov
cli
lcall
inc
sub
repnz
lds
js
cli
cmp
push
jecxz
add
out
test
ds
adc
out
insl
mov
xor
push
idivb
lahf
repnz
pusha
mov
or
xlat
leave
xor
push
push
fwait
sub
test
test
mov
fmull
cmp
int
rcl
sti
and
adc
sub
cmp
and
lea
xor
stos
clc
imul
ljmp
push
mov
mov
cmp
rclb
clc
sbb
mov
cs
jno
mov
mov
xchg
sbb
fiaddl
add
inc
and
and
lock
nop
int3
imul
jb
sbbl
xchg
loop
cltd
adc
aad
xchg
in
pop
pop
cmpsb
pop
jmp
lods
int3
xchg
mov
aaa
dec
and
add
mov
insb
fcoml
and
test
mov
in
jnp
outsb
inc
test
sbb
cmc
repz
xchg
cwtl
sbb
xor
adc
jle
mov
sbb
push
hlt
xchg
adc
pop
shrb
xchg
adc
mov
mov
and
add
addr16
cmpl
js
scas
test
call
fsub
or
inc
jge
loope
subb
push
lret
test
add
push
in
pop
inc
adc
in
xchg
xor
addr16
or
sbb
test
pushf
xchg
stos
fsubl
push
loopne
popf
cmp
mov
lea
push
ds
stos
and
sbb
std
add
sub
sub
xor
cs
jnp
cmpsb
xchg
out
adc
mov
repz
mov
sahf
mov
mov
dec
push
sbb
push
dec
gs
ds
sub
mov
and
pusha
ds
xor
arpl
jno
or
mov
jbe,pt
sbb
jnp
add
mov
inc
and
mov
pop
push
add
repnz
xchg
aad
cmp
dec
pop
jo
out
popf
jecxz
mov
outsl
cmp
test
popf
clc
jne
or
xchg
xchg
addr16
repnz
fwait
ljmp
ror
fwait
mov
and
lcall
xor
inc
push
insb
jg
aam
or
sbb
movsb
ret
mov
sbbb
xchg
cmp
je
or
ljmp
xchg
bnd
sbb
mov
cmp
xchg
jl
push
push
mov
sub
ss
cmpsl
insl
fstpt
xchg
and
mov
inc
aam
inc
mov
out
mov
into
push
adc
mov
movsl
push
dec
add
sbb
mov
xor
orb
ficoms
loopne
cmp
mov
dec
adc
aad
aaa
pop
cmp
fcomip
mov
xchg
loopne
and
movsl
js
mov
push
std
cmpsl
sbb
inc
cmp
out
stos
push
jae
js
aad
iret
scas
outsb
adc
or
xor
push
aas
xchg
gs
test
popf
dec
pop
addr16
pop
add
insb
push
into
shll
xchg
xlat
cwtl
pop
ret
pop
jb
test
jns
je
jns
xor
repz
idiv
jns
cmp
inc
dec
jae
cmp
cmp
pop
sbb
fptan
jge
push
xor
jge
xchg
xor
sbbl
cltd
dec
cwtl
push
sbb
cmp
sti
adc
enter
int
and
data16
or
addl
icebp
movsl
arpl
lds
pop
mov
lds
pop
pop
rorb
mov
stos
mov
shr
dec
xlat
rorl
leave
stos
clc
fs
mov
sahf
adc
cmp
ljmp
push
aaa
stos
add
shll
test
call
push
push
stos
fs
lds
pop
inc
xor
xor
push
repnz
in
inc
sub
adc
les
in
jl
shrb
out
lcall
aam
sbb
psubusb
incl
xor
pop
or
or
loop
mov
test
mov
jmp
lea
mov
jl
in
dec
push
push
pop
in
push
jecxz
xchg
ds
cmp
adc
push
mov
sbb
mov
bound
cwtl
dec
jmp
jecxz
mov
cmpsl
fdivl
insl
add
xor
je
inc
push
and
mov
hlt
adc
in
lahf
mov
in
ret
fstpl
sbb
pushf
fwait
shll
xchg
sub
mov
fcoms
lahf
ret
sub
pop
inc
inc
pop
push
shl
mov
mov
lods
filds
js
idiv
jb
data16
ret
mov
sbb
sahf
pop
loopne
mov
sbb
data16
int
aad
adc
sbb
jp
mov
push
mov
mov
push
jge
mov
adc
aas
cld
pop
or
inc
sbb
cmp
mov
dec
xchg
push
in
jbe
jno
lret
ljmp
cli
int3
stos
js
mov
add
push
cld
insl
mov
xchg
js
mov
pop
pop
ja
mov
es
dec
mov
xor
test
dec
lock
pop
sub
orl
lret
lods
inc
std
pop
and
sub
sbb
xchg
xchg
adc
jne
ds
shll
mov
and
mov
fwait
mov
mov
cmp
and
sub
dec
xor
mov
adc
mov
or
aas
lahf
mov
fwait
mov
push
out
sbb
mov
sbb
inc
sub
and
add
mov
insl
cwtl
and
int
lds
mov
sbb
stos
or
mov
ss
mov
icebp
fwait
imul
pop
bound
lret
sbb
movsb
mov
fimuls
xchg
sbb
pusha
push
fidivrl
mov
push
or
add
xchg
or
icebp
lds
idivb
sbb
xchg
mov
sub
pop
jno
rcll
push
fs
xor
push
imul
fsubr
pop
and
icebp
ret
sbb
jne
mov
mov
sub
ds
add
dec
es
lea
and
outsl
bound
pushf
cmp
sarb
dec
leave
outsl
out
aas
jnp
add
ret
pop
or
hlt
movsl
mov
dec
cs
icebp
outsl
dec
xchg
stos
lret
pop
sbb
push
add
mov
lret
mov
outsl
sbb
xchg
imul
mov
push
jecxz
inc
mov
mov
inc
int3
mov
xchg
mov
pop
xchg
lahf
in
je
dec
mov
jae
addr16
mov
jmp
adc
adc
addl
cmp
lahf
or
movsb
cmc
dec
iret
jle
pop
xlat
es
sbb
fwait
cli
test
mov
or
mov
jmp
mov
clc
mov
jo
mov
jl
mov
inc
stos
dec
sub
js
and
stos
repz
mov
shr
dec
jecxz
push
test
push
dec
or
bound
iret
dec
test
and
scas
pusha
mov
das
fwait
das
test
mov
hlt
arpl
jne
cmc
push
cmp
add
pop
jb
mov
cwtl
inc
push
nop
stos
call
jg
and
mov
and
mov
fwait
sbb
repz
mov
mov
scas
lods
push
in
sub
lret
cmpsb
jnp
rol
stc
sbb
sbb
lcall
loop
loope
sub
cwtl
push
dec
pop
ret
popa
test
dec
mov
or
dec
push
fs
call
xchg
insb
test
daa
fmull
or
test
test
sbb
xchg
das
mov
cmp
pop
or
fiadds
cmpsb
jmp
or
xchg
xchg
jno
mov
mov
outsl
dec
loopne
and
and
mov
sbb
in
stos
aad
pop
mov
adc
mov
clc
movsb
fiaddl
iret
fwait
xor
mov
or
xor
mov
jb
data16
mov
outsb
sbb
cld
pusha
mov
lods
fimull
or
std
mov
movb
and
inc
sub
clc
sti
xor
lahf
dec
jle
jbe
addr16
push
insb
mov
ja
dec
dec
sub
aad
insb
xlat
mov
daa
fidivrs
in
inc
jge
in
into
lock
ffreep
xlat
incl
xchg
pop
inc
adc
sub
adc
sbb
mov
add
or
mov
stos
das
jle
arpl
push
scas
mov
mov
mov
cli
enter
dec
call
outsb
push
jo
int
mov
repnz
js
loopne
jecxz
lods
ja
sahf
test
mov
sbb
xor
pop
xchg
sahf
and
popf
jo
mov
or
push
mov
cmc
inc
rcrb
sub
ret
push
in
insb
scas
and
mov
cmp
call
pop
stos
mov
movsl
jnp
ja
cmpsb
aaa
mov
in
pop
das
cltd
adc
outsb
arpl
xlat
sbb
repz
lcall
cs
outsl
cli
pop
jmp
push
fs
ja
popa
bound
mov
rolb
test
repnz
les
mov
and
xchg
or
bnd
add
jge
ljmp
or
adc
adc
adc
aam
daa
lcall
xchg
in
pop
jl
sub
pop
fisubl
andl
sahf
sub
dec
stos
push
sub
test
jge
xor
pop
jae
mov
add
test
rcrb
sarb
mov
lcall
in
push
sti
lods
mov
in
jle
and
lds
xor
push
ret
decb
xchg
je
inc
pop
pop
or
loope
push
mov
hlt
outsb
pushf
mov
sbb
in
das
mov
push
mov
ljmp
stos
and
shll
sbb
mov
mov
outsl
xchg
sbb
jmp
push
jge
subl
idivl
jns
sub
out
cmp
dec
addr16
scas
inc
sar
fwait
dec
adc
negb
sar
cmp
xchg
out
pop
add
popa
dec
pop
push
lods
mov
loope
pop
inc
and
cwtl
cwtl
fwait
fcmovb
daa
inc
add
pop
fs
dec
adc
arpl
scas
xchg
and
jae
push
fbstp
pop
push
bound
xchg
cwtl
lock
lret
nop
xor
adc
stos
jp
jl
and
fidivrs
mov
jecxz
loopne
add
lods
add
jno
sarb
stos
cltd
jae
fidivrl
in
xor
xchg
jmp
lahf
xchg
mov
stos
adc
daa
clc
test
sub
mov
and
mov
xchg
mov
in
inc
xchg
ss
mov
and
sahf
xchg
aaa
jo
jne
and
in
adc
je
leave
xor
push
lret
movsb
lods
sub
xor
out
mov
sub
sub
jecxz
inc
adc
popf
xchg
adc
test
add
cmpxchg
lods
adc
adc
iret
sahf
sbb
outsl
js
popa
test
out
cmp
add
pushf
insl
sti
ret
sbb
jne
mov
adc
or
mov
inc
add
xor
mov
add
xor
mov
test
mov
dec
push
push
add
fsub
pop
pop
sub
pop
mov
and
and
les
out
lock
ljmp
xchg
jnp
dec
lea
add
and
pop
sub
insb
sub
out
sbb
lods
icebp
movsl
mov
inc
jmp
in
mov
inc
and
jp
cltd
or
popa
push
sub
out
stos
stc
mov
mov
pop
or
adc
pop
jle
cwtl
lods
bound
jp
lret
mov
into
xchg
dec
jne
fs
into
mov
and
insl
cmp
stos
cmp
cli
ljmp
sbb
xor
test
push
imul
aas
or
je
xchg
xorl
or
dec
jp
mov
loop
sti
enter
pop
cmc
flds
hlt
stc
jae
mov
les
mov
jge
sahf
cmp
mov
test
clc
sub
sub
and
shr
pop
pushf
shr
stos
jl
outsl
imul
add
jmp
lea
or
cmp
add
mov
and
outsl
mov
dec
jb
jne
movsb
fnstsw
jecxz
loopne
pop
xor
sub
test
arpl
mov
addb
loopne
fwait
mov
fnstcw
repz
rcr
jl
repz
pusha
pop
daa
cmp
int3
scas
lahf
je
popf
push
xor
pop
mov
roll
out
sub
or
xor
or
in
mov
push
data16
pop
mov
and
icebp
pop
call
ljmp
mov
cld
mov
pop
lods
inc
daa
mov
push
add
xchg
in
maskmovq
divl
mov
and
aam
xchg
mov
jge
cmp
orb
jmp
adc
and
inc
das
sub
lock
in
mov
sbbl
iret
into
mov
push
popl
cmpsl
push
repz
cli
push
or
xchg
aaa
fldl
icebp
sbb
dec
xorl
push
dec
popf
repnz
cmp
shr
jp
mov
pop
mov
sub
mov
mov
pop
mov
adc
mov
enter
daa
lcall
repnz
fnstsw
push
xor
repz
test
xlat
pop
push
dec
sbb
push
imul
xor
stos
xchg
adc
scas
daa
popf
int3
mov
inc
shr
inc
outsb
stc
add
imul
in
push
or
fcmovnu
inc
pop
dec
mov
jg
sbb
in
out
push
repnz
xchg
sti
jbe
ja
nop
cmp
mov
lcall
imul
adc
pop
xchg
sub
sub
inc
testb
mov
je
sub
sbb
js
or
lock
stc
adc
ret
cmp
xor
in
clc
jns
adc
dec
jl
mov
sahf
pop
enter
cmpsl
sbb
mov
sar
out
mov
jnp
jl
add
xchg
xor
leave
jl
and
in
mov
cmp
dec
enter
ds
das
out
loop
sub
cmp
stc
aad
or
hlt
movnti
sbb
push
and
idivl
fbld
popf
sbb
stc
daa
into
popf
insl
xor
rorl
xor
arpl
mov
push
scas
mov
sbb
jb
andb
fs
ret
or
cli
insb
rcr
sarb
sub
adc
xchg
mov
movsb
das
push
mov
or
sub
test
cwtl
or
dec
xor
mov
mov
sbb
fsts
insl
inc
lcall
pop
adc
loop
cmp
cltd
mov
mov
push
cltd
xchg
jge
clc
cmpsl
inc
stos
mov
xor
lds
pop
add
and
test
mov
ja
test
dec
pop
or
test
xlat
dec
dec
cld
jmp
mov
out
xchg
adc
ss
mov
js
inc
mov
stos
mov
and
outsl
pop
andb
mov
movsb
insl
jo
test
mov
xchg
adc
gs
or
subl
cmp
add
xor
dec
dec
mov
call
clc
add
jo
mov
push
sbb
mov
addb
mov
xor
loopne
dec
push
popa
jae
ret
lcall
and
xchg
sub
icebp
cli
mov
xchg
lea
lahf
sbb
xor
daa
dec
std
xor
mov
dec
jnp
pop
in
scas
cmc
lods
mov
inc
pop
aam
and
xchg
ljmp
ss
xor
outsl
in
xchg
test
lods
in
mov
and
enter
and
pop
daa
adc
repz
fnstcw
and
leave
mov
adc
push
popa
cli
and
jns
cmc
jb
les
scas
xchg
mov
xchg
pop
fisubrl
sbb
pop
sub
imul
icebp
cmc
mov
test
stos
std
cmp
fdivrs
call
push
lret
ret
mov
mov
and
mov
push
xchg
jae
cmp
add
or
mov
mov
lret
sbb
es
xchg
sbb
cmp
in
xchg
and
mov
loop
arpl
push
inc
mov
jo
add
add
pop
loope
xlat
sub
push
xchg
cltd
xchg
adc
xchg
lea
sbb
xor
sub
out
adc
insb
std
or
jg
int
or
push
stos
leave
fistps
pop
loopne
xor
bnd
jp
addr16
in
out
push
xor
add
scas
mov
pop
add
divl
adc
lock
outsl
lret
and
mov
into
out
jne
sbb
orb
adc
cmp
jp
ficoml
inc
sti
aaa
jo
inc
add
rcrl
bound
cld
mov
push
inc
fnsave
data16
ja
cmp
jle
arpl
adc
or
jmp
sbb
mov
mov
dec
push
add
cwtl
sub
adc
rcrb
gs
movsl
mov
fiaddl
mov
mov
pop
xchg
xchg
out
and
jmp
shlb
lea
andl
mov
rcll
sbb
xor
sarl
sub
mov
mov
jno
dec
mov
sub
sub
aam
ja
dec
rol
mov
mov
sbb
sbb
add
jo
jo
jl
and
mov
loope
arpl
lds
jge
jecxz
insb
mov
jecxz
push
jae
push
dec
xchg
bound
push
push
idivl
sub
mov
xor
dec
outsl
mov
je
jecxz
dec
push
push
xor
xchg
in
lcall
sbb
mov
shll
mov
push
adc
loopne
push
dec
xlat
andb
dec
sub
pop
dec
je
fidivrs
loope
into
lcall
inc
jmp
fldenv
xor
inc
gs
test
test
cmp
push
cs
pop
scas
dec
lret
inc
mov
int3
adc
test
cmp
add
insl
dec
shrb
sub
or
and
std
rclb
fimuls
xchg
sub
jns
xor
jge
int
inc
sahf
mov
movsb
mov
aas
fwait
or
xor
add
xor
add
lods
inc
mov
mov
xor
bound
sub
das
adc
fcoms
movsb
mov
js
jg
pop
dec
in
cmpsb
divb
jp
jns
jg
xor
sti
pop
pop
iret
cs
and
pop
pop
aad
gs
data16
test
fidivrs
out
lahf
jmp
shrb
mov
inc
cmp
leave
sbb
lcall
xor
out
sub
lfs
inc
jmp
jb
mov
out
fisubs
pop
in
dec
hlt
fwait
imul
and
pop
xor
cmp
adc
dec
or
pusha
mov
sbb
xor
and
or
jg
cmpsl
hlt
test
dec
shr
insb
ror
iret
mov
pop
mov
cmc
sbb
and
cld
test
loope
nop
mov
sub
lret
ljmp
mov
jmp
addr16
push
ljmp
cmpsl
into
adc
test
inc
pushf
or
icebp
scas
insb
sub
inc
fsubl
in
inc
aas
iret
mov
xchg
sahf
add
fiadds
lahf
mov
scas
movsl
dec
faddl
mov
mov
mov
jae
js
fistpl
gs
ds
adc
clc
test
sbb
adc
out
jno
or
pop
pop
mov
cltd
ret
push
ret
dec
daa
call
scas
shlb
jmp
jmp
repz
sbb
stc
fdivrl
fcmovne
mov
and
addb
mov
mov
xlat
cli
arpl
mov
mov
adc
add
lret
sub
das
sahf
pop
pop
out
rol
loopne
mov
das
adc
push
push
bound
dec
sub
and
cmpsl
mov
js
loop
sbbb
in
lret
inc
xor
mov
sahf
loope
xlat
push
mov
push
mov
movsb
mov
gs
xor
jbe
repz
push
lahf
pop
jo
xchg
fcmovbe
add
adc
jg
ss
movb
jl
inc
mov
aam
mov
stc
push
cmpsb
dec
movsl
push
into
in
sahf
pop
xchg
inc
jb
adc
shrl
cmc
jg
or
push
adc
xchg
mov
jge
xor
loop
mov
js
dec
popa
adc
dec
xlat
iret
mov
stc
sarl
stc
xlat
mov
mov
and
cmp
imul
int3
xchg
pop
dec
adc
push
and
stc
fisttpll
test
xchg
movl
push
mov
out
fbld
push
xchg
orb
jbe
movsl
shrl
fwait
loope
jae
in
xlat
in
jno
aas
push
outsl
and
std
xchg
mov
outsl
test
pusha
push
lods
cmc
mov
loop
in
fidivrs
fadds
push
and
cli
inc
and
xchg
jmp
std
sti
jmp
popf
lods
out
mulb
mov
push
icebp
adc
bound
jns
in
jp
add
ficompl
dec
adc
out
outsb
jg
mov
es
bound
mov
inc
enter
mov
popa
pop
mov
pusha
repnz
filds
fnstcw
pusha
cmp
pop
add
inc
adc
add
dec
mov
mov
push
push
push
jmp
mov
cmp
outsb
imul
clc
and
sbb
xchg
out
jecxz
scas
xor
int
jg
inc
sti
sbb
adc
lds
push
fsts
pushf
stc
repnz
cmp
test
mov
xchg
sub
mov
cmp
aaa
inc
cmp
lock
xchg
lret
or
dec
xor
ljmp
loopne
pop
aas
mov
jo
shl
dec
mov
jb
loopne
xchg
and
insl
jge
xchg
movsl
pushf
pusha
xchg
scas
lret
arpl
adc
mov
inc
push
clc
sub
es
shrl
xchg
push
mov
arpl
jb
nop
pop
mov
sti
jp
pop
xor
scas
push
sbb
mov
in
push
daa
xchg
push
push
lods
xor
ret
fwait
sub
pop
imul
mov
inc
out
outsb
push
push
hlt
loopne
mov
adc
data16
fwait
xor
repnz
mov
cmpsb
addr16
push
xchg
cmp
call
out
filds
into
out
ds
mov
int3
subl
data16
jp
nop
or
ror
js
lret
push
xchg
xorl
arpl
cs
mov
jbe
xchg
mov
add
call
push
jp
ret
in
shrb
cmc
dec
inc
adc
and
enter
dec
call
test
jne
je
call
mov
mov
add
into
sbb
sahf
fstpl
test
rcr
jo
adc
movsb
movl
ss
mov
addr16
loope
fnstsw
int3
test
pop
test
add
inc
loopne
xchg
scas
es
ds
cs
mov
call
lahf
sbb
lret
jmp
js
xchg
mov
dec
mov
imul
xor
out
sbb
sub
lock
push
into
lea
mov
out
dec
inc
sbb
cld
movsb
popf
pop
xchg
ds
addl
jno
imulb
dec
mov
xor
and
jp
pop
xor
mov
insb
in
lock
cmpsb
ret
mov
imul
fisttps
test
jno
fucomp
or
cltd
imul
ja
arpl
ret
fstpt
xchg
mov
xchg
mov
stos
and
sub
pop
rcll
adc
sahf
movb
xor
mov
jle
push
jge
cmpsb
fadds
sbb
push
enter
xor
cmp
cli
dec
add
sbb
xchg
std
imul
mov
xchg
test
aam
inc
jbe
and
repz
fs
int
push
out
xchg
jno
xchg
xchg
nop
sbb
dec
xchg
loopne
movsl
or
std
or
ror
push
mov
bndldx
mov
ja
push
jp
js
aam
incb
pop
hlt
std
insb
ds
pop
pushf
xchg
hlt
hlt
outsl
repz
pop
mov
jg
dec
roll
sbb
fcoms
jns
outsb
dec
loopne
sub
inc
dec
aaa
cli
incb
xchg
sub
dec
fwait
sbbb
in
dec
xorl
stos
cli
aam
sti
xlat
addr16
pop
shl
sbb
push
lahf
pop
cmp
inc
sub
sbb
jo
mov
adc
add
xor
inc
fisubl
hlt
xchg
roll
cmp
jmp
imul
inc
mov
mov
mov
xor
movsl
adc
sub
rolb
cmp
fistpl
loopne
ss
mov
adc
mov
push
cltd
in
jo
pop
int3
std
add
daa
pop
lock
popa
push
dec
sti
lcall
mov
sub
sbb
or
mov
or
sub
decb
pop
push
in
mov
lret
mov
sbb
pop
cwtl
inc
push
out
insl
mov
punpcklbw
aaa
pop
mov
lods
inc
ss
jg
jmp
mov
xchg
pop
inc
pop
pop
mov
loope
fsts
movsb
dec
xor
rcll
fisttpl
jl
xchg
imul
popa
xchg
pop
pop
cmpsb
xchg
inc
dec
and
popf
xchg
idivl
pop
stc
out
inc
testb
mov
sub
out
mov
or
add
pop
push
or
push
mov
call
test
shrl
and
xchg
lods
xor
add
jno
sbb
mov
mov
sbb
pusha
cmpsb
sub
or
or
movsb
stos
fildll
xchg
mov
pop
not
dec
jbe
pusha
or
sbb
fsts
mov
clc
mov
iret
das
scas
push
sbb
adc
into
in
mov
inc
adc
repz
xor
jp
frstor
lods
arpl
lods
sub
inc
sbb
bound
sub
xchg
fstps
jl
xchg
fdivrp
pop
xlat
jmp
and
enter
dec
jno
jo
loopne
mov
sub
imul
fisttpll
insb
popa
loope
movsl
lds
xchg
pop
mov
dec
fnstcw
add
push
inc
gs
push
popa
in
push
and
into
insl
push
pushf
ret
lods
cmpsb
or
mov
jp
inc
jg
push
push
enter
insl
test
or
out
in
cmp
pop
pop
inc
sbb
sbb
xor
push
rcrb
cld
inc
sbb
daa
xchg
nop
sbb
inc
push
fistps
and
repnz
xor
or
fwait
lret
xor
mov
pop
mov
mov
sahf
jmp
push
cmpsb
pop
push
cwtl
subl
jne
sub
loope
mov
pop
sbb
xchg
mov
lret
mov
adc
test
outsl
insl
mov
lcall
inc
sub
roll
pop
push
ja
scas
popl
jle
mov
out
lcall
dec
push
ljmp
cmp
adc
movl
or
push
out
dec
cmp
sub
hlt
inc
push
lods
pxor
cmp
cwtl
inc
inc
jmp
pusha
popa
jp
mov
cmc
sub
cmpsb
enter
mov
ret
fs
cmp
loopne
cmp
lret
call
sbb
and
cmpsb
jecxz
sbb
xchg
push
adc
pop
push
mov
in
adc
lock
jecxz
imul
fidivrl
lea
cmpsl
out
fistps
xchg
or
jb
js
push
ret
xchg
outsl
cmp
lock
lods
push
orb
out
movsb
cltd
sub
dec
scas
ret
cmpsb
adc
scas
andb
ret
imul
shll
and
adcl
mov
fisttpl
mov
push
xchg
repz
fimuls
aam
mov
jle
mov
pop
inc
insl
mov
mov
shrl
cmpsl
test
cmp
icebp
mov
mov
daa
frstor
pop
push
stos
mov
sbb
into
popf
sub
or
jnp
push
mov
loope
int
mov
cmc
mov
cmp
rcl
fucomip
int3
cmp
inc
cmpsl
cmpsb
cmp
aaa
cmp
les
out
insb
pop
cmp
fmuls
sub
mov
dec
fisubl
mov
hlt
adc
push
adc
jae
push
adc
add
mov
shll
call
sub
mov
mov
xchg
lahf
stc
mov
mov
jne
push
push
push
mov
outsb
loop
call
adc
adc
fdiv
jmp
inc
and
mov
mov
fdivrs
mov
push
mov
sbb
test
movsl
js
loopne
fwait
dec
lock
or
dec
sub
shl
push
jne
jle
push
xchg
push
out
cmpsb
arpl
mov
cld
xchg
pop
shl
adc
fldenv
inc
jg
mov
imul
fmuls
adc
pop
xchg
pop
mov
adc
into
add
cld
lret
push
icebp
in
into
cmp
dec
mov
mov
movl
int
ljmp
add
pop
imulb
in
dec
lods
xor
popf
sub
mov
insb
das
mov
xchg
jb
into
inc
cltd
push
ljmp
insb
data16
test
or
fildl
adc
xor
mov
mov
or
hlt
jmp
scas
ja
flds
in
shl
or
rcrb
mov
dec
leave
aaa
pop
or
shlb
ret
outsl
mov
insb
sub
sahf
push
sahf
enter
call
inc
iret
and
inc
loope
pop
jae
pop
pop
pushf
and
or
and
cltd
les
and
leave
mov
mov
sbb
in
shlb
into
ret
sahf
outsl
jnp
pop
sub
jb
xor
mov
jle
repnz
std
arpl
clc
jecxz
fisttps
push
jmp
cmp
mov
leave
jbe
cwtl
ss
stc
add
add
xlat
ds
sbb
jle
mov
and
sarb
imul
lret
adc
insl
and
sub
sti
xchg
push
arpl
test
cmp
xor
push
xchg
xor
push
js
push
subl
jge
loope
lods
pop
nop
insb
jmp
mov
jmp
fs
das
and
dec
outsl
push
and
sbb
xor
mov
dec
insb
xchg
loope
int3
ror
jge
or
jo
cmp
jge
mov
fstps
scas
dec
scas
or
icebp
jae
jne
xchg
jl
jae
mov
mov
sbb
push
jnp
jp
mov
dec
and
and
aad
or
jns
pop
mov
stc
inc
dec
mov
push
fcmovnbe
xchg
mov
call
test
mov
fists
cmpl
add
popa
arpl
loopne
popf
nop
rcrb
cmpsb
dec
rorl
mov
mov
mov
insl
add
fadd
mov
or
dec
fstl
enter
stos
jnp
stc
mov
lcall
fdivr
push
std
das
test
pop
and
gs
mov
push
shlb
cwtl
dec
adcl
movsl
xor
cld
arpl
bound
mov
mov
jl
fimuls
movd
enter
dec
push
in
rclb
inc
cmp
and
or
mov
sbb
cltd
sbb
mov
insl
xchg
jbe
repnz
mov
dec
imul
arpl
push
lret
aam
xor
ds
xchg
push
lods
out
or
mov
lret
push
lods
mov
xchg
ss
outsb
je
and
jne
dec
aam
cmp
sub
mov
jo
dec
xchg
test
in
in
mov
loope
and
mov
inc
testl
or
int
mov
xchg
dec
aaa
jbe
inc
cmp
fxch
mov
lds
movsb
add
fwait
stc
popa
call
mov
fdivp
push
sub
das
xchg
xchg
out
mov
pop
cld
push
push
mov
mov
pop
push
sti
call
push
shll
inc
adc
repnz
sbb
out
insl
cmpl
adc
iret
xchg
dec
repz
adc
out
lods
repnz
inc
out
mov
out
ret
mov
inc
mov
sbb
pop
inc
adcl
pop
xchg
test
mov
jno
clc
jb
mov
dec
jo
inc
stos
and
sbb
add
mov
shl
sbb
ja
add
sbbb
or
adc
ror
test
cs
aas
push
push
xor
jnp
add
cmp
in
sub
pusha
dec
cmpsb
adcl
mov
mov
shll
sahf
sbbb
addl
xchg
in
pop
mov
dec
jne
xchg
imul
mov
nop
aam
add
sbb
loop
icebp
push
mov
repz
adc
pushf
in
pop
mov
pop
adc
or
dec
mov
imul
push
push
js
cmpsl
repnz
add
adc
add
lock
push
leave
mov
adc
or
dec
mov
mov
adc
lcall
add
rclb
or
xor
inc
ja
xchg
lea
fbld
pop
push
pop
lock
and
addl
mov
aaa
mov
mov
sbb
jmp
pop
jne
sar
cli
mov
and
je
mov
mov
push
nop
adc
pop
fiaddl
arpl
and
mov
mov
fyl2xp1
ja
lret
outsl
sub
fmuls
sbb
pop
in
out
jge
les
dec
lret
loopne
sub
fs
sub
loop
dec
push
add
cmpsl
je
aad
push
jnp
push
in
cltd
mov
subl
mov
jnp
pop
enter
push
push
xor
pushf
sub
mov
dec
shrl
xor
push
jne
insb
cmp
jge
test
movsb
push
nop
popa
or
repz
fistpl
aam
xor
iret
mov
pop
stos
add
or
outsb
test
pusha
in
adc
out
mov
xchg
mov
xor
and
sbb
icebp
rorl
mov
adc
mov
add
aas
popa
aad
jecxz
aam
aaa
sub
adc
notl
test
or
hlt
pop
out
xchg
hlt
add
nop
xchg
push
fidivs
test
in
les
int3
jns
cmp
mov
rcl
dec
daa
cmp
pop
cld
or
addr16
dec
adc
cmc
adcl
adc
lahf
xor
add
or
push
jb
adc
scas
rclb
fsubrl
aaa
sbb
in
mov
hlt
sbb
fidivs
cltd
negl
aam
xchg
or
cli
xor
xchg
cmp
sub
in
push
or
xor
or
dec
imul
lds
sub
inc
sbb
rol
sub
icebp
std
lds
push
push
arpl
mov
into
and
lods
ja
jo
mov
mov
repnz
inc
mov
mov
std
cmpsb
rcrl
and
push
mov
sbb
movsb
ljmp
cmp
loope
dec
ss
adc
fs
mov
pop
je
or
call
mov
xchg
nop
cmpsb
ja
js
iret
call
sti
out
imul
pop
mov
dec
cmp
push
jnp
push
adc
jecxz
dec
add
mov
daa
insl
daa
in
call
fistpl
repnz
ficomps
jle
jne
mov
mov
clc
xchg
push
aaa
mov
pushf
loope
loopne
pop
adc
jns
push
sbb
cmp
and
add
mov
and
iret
loopne
das
xchg
in
popf
xchg
sub
call
adc
push
jmp
push
testl
cmp
fists
jnp
push
inc
push
mov
jne,pn
lds
ret
mov
or
and
repz
push
inc
sub
mov
stos
jge
pop
sbbb
aaa
out
or
call
xchg
cmp
scas
out
inc
cmp
push
push
enter
int
in
or
cmp
pop
mov
int
outsl
testb
rcr
mov
daa
push
int
sub
jbe
mov
testl
stc
xchg
int3
les
enter
fwait
mov
push
out
std
jnp
or
xchg
cmc
pop
and
sbb
in
sbb
addl
sarb
adc
lea
jae
ljmp
pop
das
popf
jp
out
add
icebp
xchg
dec
inc
inc
rclb
adc
and
dec
mov
pop
mov
cmpsl
fmuls
jmp
popa
fisttpl
movsl
mov
adc
push
pushf
jo
pusha
lret
mov
in
jo
lret
sub
jne
sbbb
xchg
iret
sub
pop
mov
mov
mov
cmp
scas
jecxz
jnp
add
bound
fsts
xor
mov
xchg
push
jp
mov
jae
xchg
std
or
in
jns
pop
repz
lds
negl
cmp
jp
mov
scas
pop
push
pop
lret
mull
pop
mov
or
je
stos
out
je
add
lahf
stos
cmp
pop
sti
push
aad
pop
mov
mov
aam
xchg
dec
cmpsb
std
iret
push
stos
out
imul
dec
adc
add
pop
sahf
subl
ds
xchg
xlat
jae
add
lret
dec
ret
add
xchg
rclb
pop
cmpsb
push
test
cli
test
imul
idivb
inc
test
aad
dec
lahf
out
push
mov
or
test
cmp
and
out
sbb
test
pushf
loopne
mov
in
insb
or
lds
dec
xchg
dec
mov
push
xor
sbb
dec
cmp
repz
icebp
or
dec
ljmp
inc
and
xchg
arpl
sub
xchg
jp
cwtl
push
jg
or
sbb
push
jo
loop
pop
xchg
mov
nop
in
dec
addr16
and
orb
je
movsb
mov
dec
mov
push
popa
sbb
dec
cmp
pushf
aad
add
pop
mov
shl
lcall
push
sbb
mov
out
inc
enter
pop
ss
dec
jl
mov
mov
lods
int3
jmp
and
loopne
jo
jl
inc
push
imul
sbbb
ja
sbb
cmpl
sub
mov
sub
add
loopne
sbb
cmp
mov
ret
ja
mov
in
lcall
dec
loope
sbb
sahf
or
fyl2xp1
xor
ss
sub
pushl
jne
adc
or
sbb
adc
mov
inc
mov
shr
arpl
fstps
lods
fsubrl
pop
scas
mov
pop
mov
inc
enter
jo
mov
cmp
mov
sarl
cltd
call
fwait
push
xchg
mov
sub
lahf
popa
inc
into
out
sub
fst
push
and
push
push
dec
cltd
imul
fdivrl
xor
push
adc
clc
popf
sub
repz
shll
std
sub
les
sbb
adc
mov
cs
cmp
pop
pop
dec
fldenv
fidivs
cli
addr16
xor
jnp
add
xor
ret
lds
pusha
xchg
sub
pop
bound
cwtl
outsl
sbb
lods
insl
inc
fstpl
xor
pop
push
mov
jo
lods
pop
lock
pop
mov
xchg
pop
rcrb
gs
aam
fwait
sahf
ja
add
ja
mov
mov
sti
roll
dec
loope
fsts
pop
jo
imul
imul
cmp
jne
stos
cmc
jno
test
jg
push
push
mov
hlt
pop
scas
loope
iret
pop
icebp
lock
hlt
sbb
ss
aam
mov
cs
das
in
xor
cmpsb
popf
cld
lods
push
mov
inc
addb
or
and
in
pop
outsl
mov
repnz
cmp
mov
loopne
ficoml
mov
rcr
jecxz
jbe
mov
out
lods
arpl
and
cwtl
or
popf
xchg
enter
cmc
sub
add
in
ja
ss
sti
add
int3
mov
js
push
ja
mov
xchg
test
add
mov
xor
or
fiadds
dec
or
ds
pop
and
mov
cli
pop
lcall
arpl
sbb
push
jge
xchg
adc
enter
jbe
adc
pop
mov
mov
js
js
mov
out
inc
or
cli
xorl
mov
sub
push
xor
xchg
mov
pop
nop
fnstsw
push
push
int
fadds
fdivs
pop
rcr
and
aas
dec
xchg
repz
test
jo
bound
pop
xlat
sub
adc
scas
cmp
xchg
imul
cmp
fldcw
xchg
fnsave
lcall
xorl
cs
stos
xchg
lea
sub
push
jl
xlat
push
pushf
jno
or
stos
scas
xlat
stos
pop
jecxz
sbb
fistpll
mov
test
les
dec
in
pop
cmp
mov
mov
pop
icebp
mov
xor
mov
lret
adc
mov
adc
push
test
test
cmp
test
addl
repz
push
sbb
push
rorl
jbe
mov
hlt
or
mov
jo
clc
sub
icebp
lret
inc
xchg
cmp
cld
add
push
push
int
push
xor
sub
sbb
mov
add
pop
mov
push
fadds
mov
add
jnp
out
scas
sarb
mov
fwait
adc
dec
xchg
xchg
sbb
xchg
jnp
test
adc
jl
adc
idivl
shrb
ficomps
call
cmp
add
in
sbb
push
repnz
sti
gs
fisttps
insb
and
lock
loop
and
mov
pusha
insb
dec
test
jle
add
add
mov
je
jle
add
jns
int3
mov
xchg
fidivs
lods
cmp
sbb
shl
mov
bound
xor
rcr
sbb
inc
fstpl
pop
sbb
fsubs
loope
mov
jp
int3
aad
jmp
and
repnz
sarb
outsl
insb
stc
xor
ficoms
xor
pop
mov
sub
lretw
addr16
inc
movsb
std
ficomps
out
rcl
sbbb
add
cli
lret
lcall
insb
or
iret
bound
imul
jae
insl
lock
xor
int
mov
mov
loopew
push
mov
jp
dec
jns
cltd
mov
push
jbe
mov
les
mov
xchg
js
jecxz
adc
or
dec
lods
call
pop
aas
iret
movsl
daa
dec
pop
lret
xchg
or
or
inc
inc
add
pop
jb
clc
cli
sbbb
movsb
loop
gs
inc
xchg
inc
adc
call
gs
out
fwait
sub
push
jae
dec
lock
sub
rcrb
test
jne
push
adc
outsb
lcall
test
es
dec
fdivs
dec
mov
fwait
jp
inc
mov
inc
and
jge
ret
jnp
or
fcomps
call
test
sbb
or
xchg
jbe
cs
cltd
rcl
adc
fdivrl
and
push
jl
jp
int3
lahf
push
mov
push
adc
adcl
xchg
and
pop
shlb
pop
cwtl
add
mov
enter
adc
loop
mov
mov
pusha
cmc
adc
repz
dec
iret
lcall
popa
je
add
outsb
das
out
and
stos
inc
fdivs
sbb
mov
les
inc
sub
inc
movsb
fs
xchg
inc
sub
scas
addr16
stc
leave
pusha
inc
add
fsubrs
cmp
xor
cmp
pop
dec
das
ret
cld
sub
hlt
pop
gs
inc
jae
lock
mov
jle
and
aaa
fldenv
dec
test
push
es
imul
and
adc
push
pop
hlt
mov
xchg
jecxz
dec
ficomps
or
pop
add
pop
lret
xchg
idiv
loop
adc
cld
mov
mov
das
fcmovnb
inc
imul
negb
out
cmp
dec
push
jp
cmp
loop
stos
or
adc
addr16
jno
rclb
mov
lods
sub
loope
inc
scas
mov
loopne
lea
popa
dec
mov
stos
dec
and
test
lods
shl
fwait
lods
roll
mov
cmp
push
bsf
pusha
xorb
mov
or
popf
pushl
das
inc
rcll
fimull
icebp
push
and
in
jb
lock
sbb
fdivl
adc
lea
dec
call
add
jecxz
shlb
leave
insb
jno
testl
mov
jne
and
mov
dec
and
pop
push
out
mov
and
dec
cli
fcmovu
mov
fildll
stc
inc
repnz
ljmp
mov
movsl
and
hlt
jo
jecxz
bound
or
adcl
and
outsb
inc
mov
jbe
lcall
lret
xchg
add
lahf
sub
add
mulb
sti
filds
pop
dec
mov
inc
cwtl
in
or
shl
idivb
daa
xchg
in
jle
cmp
insl
xchg
ficoms
leave
hlt
fsubl
aad
cmp
sub
repnz
or
jle
add
fsubs
or
and
mov
je
cs
push
inc
xchg
pop
out
xchg
cmp
je
xorl
dec
jge
pop
test
or
call
repz
js
fs
dec
adc
push
adc
pushf
stc
test
xor
pushf
sarl
dec
add
mov
dec
mov
paddusw
outsb
loope
xor
roll
mov
pop
and
lahf
pop
sub
and
push
daa
into
dec
push
inc
lret
pop
mov
jno
int3
cs
ffree
ficompl
or
cli
push
mov
xorl
clc
or
inc
enter
pushl
mov
cmp
dec
or
scas
jg
outsb
popf
pop
dec
shrl
es
adc
jle
push
inc
fistps
negl
xor
dec
sub
add
sub
mov
sbb
push
cmp
filds
out
test
ja
aad
inc
sbb
fstpl
roll
push
fnstcw
leave
pop
push
fcoms
insb
jmp
into
jecxz
cmp
sar
pop
inc
movsb
and
jmp
fs
rorl
push
cmp
adc
inc
pop
iret
xchg
lea
popa
imul
add
out
int
jne
adc
es
jne,pn
or
repnz
scas
and
pop
test
jno
xor
ljmp
mov
dec
mov
dec
test
pop
mov
pop
rcl
iret
in
mov
stc
jmp
repnz
sub
sub
andb
or
or
pop
jecxz
movsb
lret
push
mov
lcall
lods
es
jbe
ljmp
test
repnz
xchg
pop
sbb
push
mov
push
push
mov
test
fsts
pop
dec
cmpsl
push
pushf
mov
push
add
sbb
aad
fs
mov
jge
xor
sub
mov
jle
jne
pop
out
sub
sub
jl
xor
pop
cli
stos
mov
mov
push
lahf
adc
les
outsb
sbb
sub
lods
pop
lods
xor
shll
scas
out
xor
data16
push
push
call
and
and
jnp
dec
sbb
and
icebp
cmp
sbb
jp
fcmovu
and
or
dec
and
ljmp
lahf
mov
lret
push
mov
xchg
sub
xchg
sbb
icebp
fsubrs
dec
call
sub
fists
call
jg
dec
mov
sub
js
lret
push
stos
out
iret
sub
js
add
into
aam
ja
andb
xchg
jno
push
movsl
jp
xchg
addr16
mov
add
mov
dec
inc
inc
loop
int
stc
lret
jg
lods
ret
insl
pop
lahf
fwait
or
adc
pushf
hlt
jl
push
ss
add
jmp
imul
and
out
mov
mov
push
push
ds
xchg
pop
cli
push
push
mov
inc
movsb
test
jecxz
or
xchg
ror
ss
popf
aas
dec
xor
inc
jge
mov
lods
lock
mov
sbb
cmp
outsb
or
and
lea
push
fdivrs
rorb
into
jge
dec
sti
loopne
and
pop
jecxz
mov
mov
xchg
jecxz
sti
ret
xchg
ljmp
jge
jmp
mov
cltd
dec
xchg
jecxz
cmp
jg
or
inc
out
daa
pusha
fwait
pop
shrb
or
jns
fisttpl
and
push
gs
adc
push
test
pop
add
pop
fcmove
jb
mov
xchg
inc
sbb
pop
mov
bound
mov
das
imul
or
push
adcb
ja
xchg
mov
fdivr
ljmp
mov
test
lahf
sbbl
fistps
jo
dec
loop
ds
xchg
sbb
arpl
adc
insl
inc
mov
sub
jge
or
scas
cmp
and
xchg
sbb
insb
shrl
xorb
xchg
jge
sbb
icebp
andl
pop
dec
jmp
cwtl
stc
into
push
loope
adc
jbe,pn
add
ja
cld
hlt
call
mov
mov
adc
fisubrl
jg
add
mov
mov
mov
xchg
imul
cli
stc
xchg
in
dec
stos
jo
fdivr
mov
add
mov
and
mov
jb
inc
test
and
push
cmpsl
pop
add
xchg
sub
sub
cmp
cmp
xchg
out
fistpll
aad
pop
mov
data16
mov
or
jns
jg
iret
xlat
ss
push
sub
icebp
shl
fsubp
aam
xchg
sbb
xor
dec
lods
cmc
lcall
add
stc
lret
repnz
jb
addl
mov
testb
into
jnp
sub
push
push
ffree
test
jno
cmp
lock
repnz
sbb
jecxz
aad
call
or
dec
cmpsb
fnsetpm(287
mov
mov
jnp
jnp
xchg
imul
cmp
pop
fstp
or
insb
xor
fs
xor
cli
movsl
sub
jb
xchg
mov
aad
pop
iret
sbbb
pop
and
out
enter
rorb
cwtl
orl
mov
xchg
gs
gs
bound
push
jmp
sub
cmp
gs
out
cmp
mov
jmp
dec
roll
jge
push
xor
cmp
pop
insb
mov
jmp
sbb
or
or
adcb
popa
pusha
mov
aad
and
adc
cltd
mov
dec
std
outsl
subl
lahf
ret
xchg
insb
insl
xchg
dec
arpl
push
cli
es
js
ja
sub
hlt
std
in
mov
pop
enter
rorl
mov
inc
inc
jae
lcall
je
sti
stos
mov
into
mov
add
mov
cld
inc
iret
xchg
fidivrs
mov
call
daa
xorl
jg
das
scas
dec
int3
imul
mul
pusha
mov
lret
lock
and
jno
xchg
test
mov
xor
shlb
and
mulb
das
popf
loop
jecxz
or
lret
and
mov
adc
pop
dec
scas
xor
rcl
imul
jge
jne
divl
iret
bound
and
mov
fiadds
mov
sub
fistl
pop
fstpl
out
xor
pop
aad
imull
push
jo
inc
adc
aad
test
xchg
repz
leave
mov
xor
sbb
mov
in
jle
or
push
out
add
imul
into
inc
xchg
mov
and
inc
inc
pop
popf
pop
push
push
or
xchg
dec
xchg
adc
out
aam
add
int
sbb
xor
inc
pop
inc
mov
cmpsb
sbb
pop
sahf
clc
in
aas
mov
sub
and
in
lret
xchg
outsl
mov
push
inc
pop
aam
in
bound
mov
ja
imul
mov
adc
pop
jle
out
inc
lods
rorl
sub
push
pop
aam
fildll
dec
jae
ds
jbe
jmp
jo
pop
dec
push
orl
add
mov
push
or
ljmp
stos
mov
mov
lahf
jge
cld
rolb
fwait
or
jg
jnp
xor
mov
add
xchg
mov
xchg
jb
mov
iret
jne
mov
push
jl
jecxz
outsb
aas
and
fidivs
in
add
mov
loopne
fsubl
jmp
push
jecxz,pn
insl
cmp
inc
mov
or
sbb
cmpsl
ret
pop
and
inc
cmovne
xor
std
jl
mov
xchg
pop
or
ja
sbb
mov
push
sahf
aas
fiaddl
push
in
les
cmpsb
rcrb
lret
and
in
adc
ja
repnz
adc
mov
ffreep
daa
stc
push
and
testb
xor
pop
ss
jae
sbb
aam
sbb
sbb
call
incl
ja
sbb
sub
sub
sti
or
fimuls
subb
push
out
loopne
pop
testl
cld
outsb
xchg
or
test
imul
cld
iret
dec
or
std
stos
push
mov
mov
inc
push
mov
lea
or
popa
mov
ret
jge
or
inc
call
jp
aad
stc
sub
mov
aas
cmp
jge
ret
lcall
daa
hlt
dec
add
test
sbbl
test
aas
adc
imul
lods
xchg
loopne
lods
into
cmp
pushf
out
or
sbb
scas
mov
mov
jle
dec
mov
ja
mov
pop
cwtl
lahf
je
jo
andb
xchg
out
dec
cmpl
mov
cmp
jae
sub
inc
test
std
mov
push
sub
sbb
cmp
sarb
dec
adc
cmpsl
hlt
jecxz
mov
xor
mov
clc
outsb
and
es
int3
mov
outsl
das
pop
loop
jb
addl
jge
sub
jp
sub
inc
sub
cld
and
int3
ja
pusha
jns
gs
adc
outsb
pop
fidivrs
cmp
jle
imul
jle
xor
dec
dec
push
lds
xlat
scas
or
adc
jne
sbb
xchg
bound
push
sar
out
mov
int3
test
pushf
mov
jne
stc
sub
mov
inc
cwtl
push
repnz
cs
add
testl
mov
jge
adc
js
test
xor
popa
cmpb
cmp
mov
and
lds
xor
pop
and
pop
xor
sbb
mov
or
fldl
mov
mov
cld
insl
cmpsb
and
jbe
ds
or
out
xchg
pushl
mov
adc
inc
adc
pop
inc
stc
loopne
paddusb
and
sub
jo
mov
loope
cwtl
je
sub
int
push
test
xlat
sbb
sub
fdivr
mov
fst
lea
push
outsb
addr16
lahf
test
outsl
mov
aaa
mov
ds
rol
and
out
repnz
mov
add
lea
cli
rcrb
push
add
popa
and
fisubrs
lods
xchg
jae
inc
sub
jge
and
and
dec
inc
jge
dec
mov
inc
int
push
in
js
les
add
int3
xchg
insb
push
aam
xchg
xchg
rcl
insl
cmc
test
in
hlt
mov
sub
push
jbe
fstpt
sahf
es
nop
shrb
xor
xorb
imulb
or
adc
bound
iret
hlt
or
sub
inc
divb
jge
pop
pop
inc
ss
in
cli
in
jb
gs
out
dec
pop
inc
fisttpll
jnp
inc
lds
bswap
out
imul
loop
mov
pop
imul
mov
cmp
inc
dec
sub
lods
imul
mov
add
xchg
subl
push
lahf
xor
sar
inc
xchg
sbb
cwtl
mov
jno
pop
cmp
or
ljmp
sbb
sbb
std
mov
call
insl
out
mov
icebp
lock
out
mov
jle
add
pop
sub
cmp
mov
sub
lds
cld
add
test
xchg
and
leave
add
testl
sbbl
pop
jp
addb
xor
cs
shl
mov
mov
imul
push
test
push
push
lods
pop
test
cmp
mov
sbb
cmpsl
mov
dec
cmp
xchg
and
dec
out
and
daa
ljmp
mov
leave
aas
lods
push
negl
lods
sti
jp
cmp
movsb
popa
dec
push
cld
jno
mov
clc
lods
and
cmp
in
stos
cld
outsb
pop
or
pushf
push
pusha
inc
outsb
ret
dec
movsb
mov
repnz
aas
repnz
add
push
sbb
repz
mov
pop
xor
inc
mov
adc
or
jle
xchg
js
xchg
mov
fsubrl
rep
cs
aaa
addr16
jo
outsl
mov
int3
jno
or
mov
mov
fwait
sub
and
lcall
adc
sub
xchg
mov
pop
cltd
push
xor
call
test
gs
mov
int3
cmp
jns
cmc
nop
inc
sbb
loopne
mov
adc
cli
and
sub
xor
add
insb
imul
sbb
test
repnz
sub
scas
mov
pop
in
mov
xlat
adc
jb
jp,pn
add
jmp
punpcklbw
stos
xor
jb
aaa
loopne
xchg
sub
addb
ficoms
mov
addb
adc
cwtl
das
push
pop
xchg
pop
ja
and
sub
adc
or
push
pusha
mov
xchg
sub
lret
jb
das
sahf
sbb
pusha
inc
nop
lods
mov
dec
in
shrl
ret
outsb
add
xchg
add
dec
data16
aam
out
inc
subl
add
and
jb
jno
jae
dec
fidivs
dec
lcall
movsb
insl
dec
push
das
lods
jmp
inc
aaa
mov
cltd
and
mov
jecxz
mov
dec
dec
notl
sbb
addr16
addr16
cmp
mov
das
aaa
outsb
test
test
mov
shlb
and
arpl
pmaddwd
dec
testl
mov
inc
sti
mov
loope
lret
mov
xorl
sahf
mov
dec
xlat
lea
xor
andb
and
push
mov
push
inc
decl
xchg
push
mov
mov
xor
out
lods
push
nop
lret
int
rcl
stos
lret
inc
push
fidivs
sbb
mov
inc
pop
movsl
cmp
lcall
test
ja
xchg
imul
mov
int
sub
sub
xchg
outsl
fcmove
sarl
in
pop
and
xchg
jg
push
xchg
cmp
xor
fprem
mov
xchg
cli
imul
iret
inc
data16
fcomps
add
shll
xchg
fwait
cli
in
roll
jae
das
cmpsl
xchg
jbe
pop
cmp
out
xlat
shll
call
into
cmp
mov
cmpsb
mov
pop
push
dec
stos
adc
jnp
cwtl
jae
jp
leave
push
insb
dec
ljmp
jl
pop
jge
sbb
xor
aam
pop
sub
loope
cmp
add
cmp
inc
sbb
mov
xchg
jl
pop
lcall
mov
dec
ljmp
pop
mov
mov
cmp
scas
xor
and
frstor
fisubrl
dec
sub
sub
add
ja
jb
sbb
fsts
xchg
add
adc
aaa
mov
lret
ficompl
sti
out
mov
popf
sub
int3
shrl
or
push
adc
lock
rcr
mov
out
cld
in
sbb
or
movsl
sub
les
fstps
cld
in
in
or
xchg
add
insb
mov
loope
in
fdivl
lods
or
lods
mov
push
in
dec
mov
adc
adc
shll
sbb
or
cmp
mov
add
fstl
xor
cs
inc
mov
stos
jnp
or
stc
jl
xorb
fmuls
sbbb
and
std
push
push
jb
pop
popa
test
nop
mov
popa
adc
popa
inc
daa
in
cmp
test
icebp
enter
imul
sahf
loop
aam
mov
int3
clc
sbb
lahf
repnz
push
loopne
lods
popf
pop
sti
cwtl
adc
daa
addl
push
cmp
call
push
rcr
ds
pop
pop
add
std
cmpsl
pushf
push
cli
jb
cmp
in
cwtl
adc
js
enter
addr16
outsl
hlt
cwtl
xchg
fldl
mov
dec
xchg
out
jo
sub
aas
addr16
int
pop
mov
into
test
pusha
cmovp
hlt
out
lea
cmp
or
data16
sub
in
mov
sub
mov
scas
adc
jnp
mov
add
repnz
push
outsb
comiss
addr16
fsubrl
out
xchg
jb
int3
out
sarb
push
pop
or
mov
push
je
jne
leave
dec
sti
scas
sub
inc
dec
sarl
push
movsb
cli
out
in
pusha
ret
cmpsl
lods
xchg
stos
jo
outsb
cwtl
mov
cld
jmp
fwait
stos
pop
adc
fbstp
ljmp
roll
inc
test
test
push
pop
mov
mov
dec
push
into
fucomp
xchg
push
popa
pop
fildll
and
aas
xor
mov
call
cwtl
xor
mov
add
outsl
mov
outsb
orl
pop
ds
fcomps
das
divb
xlat
addr16
add
inc
lods
cmc
hlt
add
jno
jl
icebp
or
or
mov
xor
insl
cmp
jle
xchg
out
loopne
mov
out
ja
nop
adc
es
aas
xchg
sbb
sbb
mov
sti
push
mov
jno
cmpsb
cmp
xchg
icebp
jo
adc
push
push
stos
insb
jne
iret
mov
mov
dec
pop
pop
dec
pop
adc
mov
in
into
xor
fcomps
xchg
inc
notb
lods
mov
inc
fs
mov
pop
arpl
leave
mov
sbb
mov
jle
icebp
pop
push
imulb
shrl
inc
cs
addl
nop
and
lahf
out
addr16
add
mov
jg
outsb
andl
filds
pop
mov
stc
jo
pop
pop
or
lahf
pop
cmc
imul
sar
hlt
adc
pop
nop
sub
xlat
in
nop
add
xchg
pop
fdiv
aaa
mov
aam
lock
rcll
scas
xor
jns
inc
cmp
ja
sub
popf
out
rolb
aad
out
jmp
lea
shld
orl
test
jmp
mov
adc
pop
jno
sbb
add
cmp
and
jge
and
mov
mov
std
lods
pop
mov
sub
inc
loopne
push
xor
nop
std
push
inc
xlat
cmp
or
sahf
mov
popf
pop
lods
add
lahf
mov
add
imul
jb
and
push
sub
ret
sub
mov
scas
clc
sub
mov
lods
call
add
and
outsl
pop
and
and
testl
in
xchg
jnp
mov
cwtl
fwait
pushf
test
mov
mov
loop
sub
in
mov
stos
sti
int
xor
lret
mov
xor
cli
loopne
sbb
test
lock
enter
or
nop
test
into
mov
mov
push
mov
pop
add
enter
cmp
shrl
cmp
mov
cmp
arpl
mov
mov
cmp
dec
shrl
cmp
inc
cmp
mov
pushf
out
push
lock
mov
insb
stos
out
pop
add
shrb
or
cltd
pop
jecxz
inc
jnp
inc
cwtl
jl
mov
xchg
lcall
and
pop
cmc
sti
dec
aaa
aaa
and
jmp
lret
test
jg
pop
add
cmpsl
insl
push
seta
push
push
lea
or
cmp
jne
mov
stos
loopne
sub
sbb
jl
call
frstor
jmp
call
sahf
dec
in
mov
sub
in
test
adc
sbbl
adc
leave
pop
or
int
enter
loopne
mov
cmp
enter
inc
push
lock
sub
fsubrl
mov
in
cmp
adc
xchg
dec
lds
das
rolb
inc
or
movsb
adc
pop
inc
stos
das
dec
inc
xlat
xor
stc
sub
je
in
dec
pop
push
hlt
pop
sub
xor
imul
dec
cmp
shll
in
mov
inc
xchg
push
mov
jnp
add
fsubrl
scas
repnz
add
xchg
es
icebp
ficomps
fdivr
aaa
mov
inc
daa
in
push
jg
mov
test
or
imulb
sbb
rcr
in
sbbl
popf
das
xlat
negl
aas
cwtl
add
pop
xchg
push
cmpsb
cmpl
int3
into
pop
std
ds
repz
int3
outsb
inc
add
jbe,pn
ja
cs
das
shll
fisttpl
sub
push
push
xchg
inc
cmp
sub
sarb
adc
xor
sub
mov
lea
outsl
xor
scas
rcl
mov
xlat
jo
fistps
aad
mov
or
add
cmp
mov
addr16
popa
push
jmp
mov
sub
or
jns
and
sub
and
mov
add
mov
ss
test
fsubp
mov
adc
sbb
rclb
iret
loop
sbbb
jo
fldenv
sub
xor
jmp
scas
js
mov
jne
imul
push
rcrl
xchg
add
push
pusha
jl
incb
sub
mov
cmp
lods
lock
xchg
add
add
popf
stos
shlb
and
mov
fmull
nop
adc
mov
outsb
mov
and
std
mov
pushf
mov
cs
call
adc
mov
stos
jmp
sbb
push
mov
ss
sub
dec
push
lods
je
pop
mov
xchg
fiaddl
es
sub
mov
andb
mov
fdivs
lods
push
xlat
jmp
pop
repz
jl
scas
out
out
add
sbb
loope
pop
das
aaa
inc
mov
insb
pop
pop
call
arpl
jbe
fimuls
jns
dec
popa
les
pushf
cmp
jl
rolb
pop
clc
rcll
adc
mov
fdivrs
inc
movsb
test
iret
add
insb
jo
decl
lahf
out
pop
sbb
pop
aas
xchg
cld
stos
sub
xchg
pushf
jmp
decb
in
xor
jmp
leave
pushf
mov
int
outsb
shll
push
daa
mov
test
xchg
fimull
and
in
fstpl
aam
bound
test
push
jae
push
pop
fidivl
jp
ficomps
mov
xchg
sbb
xor
daa
sub
jb
js
insl
rcrl
mov
pop
push
dec
inc
lods
cltd
sbb
push
imul
cmpsl
sbb
mov
cmp
stos
jle
fdiv
or
push
shlb
scas
pusha
push
test
push
dec
lcall
ret
int3
repz
aas
mov
movsl
push
mov
push
mov
insl
lahf
fstpt
fstps
out
dec
mov
lods
xchg
aas
in
out
cmp
sarl
jno
aad
daa
inc
push
or
sub
call
sbbb
in
xrelease
nop
adc
shll
add
adc
jo
arpl
mov
fnstcw
sbb
jae
lock
dec
shlb
mov
xchg
lds
enter
ja
fistpll
mov
mov
xlat
cwtl
mov
sub
pop
popa
hlt
scas
repnz
icebp
xchg
add
out
in
scas
jle
or
mov
aaa
mov
mov
lock
lcall
fbld
lret
insl
cltd
inc
mov
insl
xor
aam
lds
rcll
je
jge
dec
sub
sahf
inc
xor
imul
lahf
adc
sbb
ret
or
or
inc
pop
aad
inc
jo
lret
or
sbb
jb
pop
push
rcr
push
xchg
leave
mov
inc
icebp
fs
cmp
sbb
cmp
lcall
dec
test
xor
loope
pop
xor
cmp
out
jo
fs
push
xchg
mov
cltd
pop
bound
pop
dec
movsl
adc
addr16
mov
xchg
jle
lahf
jno
es
mov
nop
call
hlt
dec
addr16
pop
gs
mov
call
int
mov
bound
inc
xchg
lret
fisttpl
inc
fistl
addr16
mov
pusha
stos
aas
mov
stos
punpckldq
xchg
or
xchg
lcall
dec
push
mov
in
mov
icebp
push
add
and
pushf
mov
push
test
ljmp
xchg
adc
xchg
cmp
jae
push
sbb
mov
divb
sbb
aam
in
pop
xor
or
out
sti
push
sti
add
pop
in
fldt
xor
xorl
jl
orl
sbb
cmc
gs
lea
push
icebp
cltd
mov
rcrb
add
push
lahf
fmull
pop
mov
pop
and
shll
sbb
cli
dec
out
xchg
adc
shl
icebp
js
outsl
out
mov
lds
and
fwait
mov
pop
xchg
stos
or
out
stos
rclb
dec
iret
inc
mov
popa
and
ret
stc
dec
cmp
jecxz
lahf
pushf
insl
dec
jnp
xchg
mov
outsb
mov
sar
or
cld
es
mov
leave
hlt
inc
es
xchg
popf
pushf
nop
aas
fmull
stos
mov
or
mov
jb
push
xor
inc
sbb
inc
clc
pop
loop
jne
push
inc
outsb
mov
cmp
testb
outsb
push
lcall
jne
dec
ret
fidivrl
test
les
mov
fsubl
mov
test
popa
call
pop
mov
add
loop
inc
inc
cmp
stos
pop
inc
mov
fs
xor
imulb
cld
add
mov
xchg
cs
and
sub
sbbb
xor
cmp
sub
add
xor
shll
movsl
dec
jp
jmp
sbb
push
test
push
sbb
sbbb
int
aas
pop
loope
mov
jmp
pop
popa
fistps
das
in
dec
divl
xchg
jmp
inc
ret
push
xchg
push
addb
scas
mov
adc
clc
shrb
int
sbb
push
loope
ss
adc
aam
mov
mov
sbb
jmp
icebp
sar
arpl
sub
dec
push
jl
scas
ret
jns
rorb
dec
into
jo
sbb
mov
inc
xchg
das
stc
ja
out
sub
pop
mov
addr16
arpl
fildl
mov
fimuls
and
jmp
sub
cmc
xchg
jo
fidivrs
pop
pop
es
jne
sub
sbb
push
jb
add
add
in
cmp
cmc
cmpsl
sbb
adc
inc
sbb
jbe
mov
inc
mov
ljmp
xor
push
xchg
xchg
mov
xchg
mov
movsl
adcb
sti
dec
lods
push
and
bound
roll
iret
fs
insl
ds
mov
test
adc
into
push
mov
mov
gs
outsb
mov
ss
enter
loop
or
test
mov
inc
in
or
es
in
jp
mov
fcompl
push
lcall
xchg
lods
push
je
shrl
push
stos
dec
push
xor
cmp
xchg
push
mov
dec
mov
std
icebp
adc
mov
pop
insb
std
cmp
and
mov
dec
inc
das
and
jo
lods
xor
aaa
das
or
insl
cli
or
cs
cmp
inc
push
in
mov
ret
jae
gs
lock
sub
push
addb
imul
dec
or
dec
fisubrs
pop
in
ficomps
push
shrl
push
fiadds
lcall
sub
mov
stc
sub
push
mov
mov
out
outsb
aad
fistpl
dec
mov
mov
cs
jmp
ds
xor
cmpb
push
faddl
mov
add
ds
aad
cli
pop
mov
std
jge
or
jl
and
pop
call
cli
fldcw
cmpsb
push
adc
cwtl
cs
pop
adc
nop
jp
jne
jns
cld
ret
sbb
mov
and
fdivrs
repz
push
stc
or
jg
aad
pop
cmp
jp
int3
jne
mov
sbb
xor
cwtl
push
frstor
pushf
dec
out
test
lcall
hlt
xchg
jl
mov
nop
or
sarb
jns
jge
bound
push
lret
mov
daa
gs
stc
xchg
popa
addb
push
mov
lret
testl
fidivl
test
cmp
jno
pop
jo
test
outsl
rep
daa
mov
lods
out
mov
pop
and
jb
mov
imul
xor
addl
jl
mov
and
mov
test
nop
out
xchg
pop
insb
mov
xor
movsl
das
loop
loop
shll
gs
jno
sahf
inc
ret
push
inc
int
leave
xchg
sub
adc
jmp
push
add
jmp
xchg
mov
jno
adc
cmc
aam
pusha
ret
push
cmp
ret
xor
inc
aad
neg
enter
xchg
push
stc
mov
inc
lods
loop
pop
add
ljmp
sbb
push
addr16
dec
inc
xchg
movsl
scas
xchg
mov
dec
xor
shl
xchg
sub
push
leave
inc
cs
loop
xchg
mov
sub
repnz
xor
jge
pop
lret
dec
push
test
mov
loopne
inc
cmp
adc
fsubrs
mov
or
out
cltd
inc
jbe
sbb
inc
aad
or
cmp
adc
jmp
push
inc
or
dec
repnz
adc
out
and
push
bnd
es
icebp
imul
inc
mov
loopne
inc
int3
cmc
and
jb
sub
mov
mov
push
fwait
sbb
inc
and
add
call
mov
fcoms
shrb
and
adc
pop
cmc
mov
mov
sub
fistpll
in
aam
xchg
jecxz,pt
jp
pop
movsl
lods
lret
and
fisubrs
aas
mov
sbb
aaa
mov
insb
in
aad
pop
mov
sub
outsb
mov
mov
test
daa
sbb
ficoml
mov
ret
sub
lea
add
aaa
cmp
add
lcall
sub
aaa
leave
lock
sub
icebp
xchg
mov
movsb
push
pop
dec
xor
gs
mov
ds
xchg
lea
mov
add
push
mov
fldcw
or
rcll
jnp
negb
mov
call
push
mov
mov
dec
mov
and
pop
out
xorb
mov
push
mov
xchg
hlt
push
iret
scas
pop
jmp
sti
loopne
iret
iret
and
jg
mov
clc
adc
xchg
dec
shr
lret
stos
movsl
mov
xlat
cmp
pushf
ja
fldl
mov
push
lahf
sub
inc
imul
pop
inc
lahf
sbb
iret
mov
pop
sbb
dec
bound
add
dec
loope
add
shll
and
and
pop
mov
leave
push
pop
cs
test
xor
test
mov
idivb
int3
sub
mov
inc
mov
ret
dec
stc
popf
addr16
sub
push
loopne
je
inc
add
jle
adc
dec
stos
mov
add
sub
sbb
pushl
lds
lret
xchg
pusha
pop
incl
cwtl
xchg
les
test
or
jbe
xlat
lock
lret
jno
dec
pop
or
cmp
mov
ja
xor
inc
arpl
sbb
enter
or
dec
mov
pop
mov
push
mov
andb
js
cmc
pushf
mov
sti
xor
xchg
dec
push
add
cmpsl
out
dec
xchg
dec
mov
mov
dec
add
lea
xchg
xchg
add
arpl
fidivl
enter
aaa
cmp
lds
jmp
cmp
rcrb
cwtl
cwtl
jae
lahf
or
clc
jl
lcall
popf
jo
out
rcll
repz
pop
loop
clc
ds
test
inc
pop
and
push
sbb
add
cli
mov
xor
pop
lcall
pop
adc
adc
enter
shll
inc
les
jle
leave
push
and
xor
jle
hlt
hlt
fwait
inc
inc
test
add
jp
popl
loope
fcompl
loope
jno
cmpsb
lea
clc
push
lods
aaa
mov
shl
push
xchg
das
aad
std
mov
stos
lds
pop
mov
outsb
cmp
xchg
testl
pop
pop
mov
sub
cltd
cwtl
push
jmp
adc
xor
call
in
adc
shl
in
iret
mov
pushf
cmp
and
lods
mov
notb
push
mov
cltd
rclb
repz
fs
jp
or
in
pop
aaa
xor
jnp
mov
add
mov
sbb
pop
lret
adc
insl
dec
push
cmp
dec
push
iret
pop
mov
outsl
dec
mov
loope
in
mov
sub
scas
push
mov
inc
sbb
mov
push
push
mov
jne
lcall
loop
mov
lret
mov
shlb
imul
jae
fs
adc
inc
mov
mov
cli
cwtl
frstor
jl
add
test
push
pusha
repnz
pop
sub
aas
cmp
pop
lods
jns
jne
les
fmul
shlb
int
sbb
fnstsw
int3
call
pop
mov
ret
sub
inc
and
hlt
test
jecxz
pop
mov
pop
jno
js
fisubl
jge
inc
or
pop
add
cmc
loopne
fsubs
call
push
mov
mov
shll
mov
aad
add
pop
orb
das
fidivrl
push
scas
lods
and
lods
add
xor
jle
gs
jmp
pextrw
and
addl
jle
mov
int
les
cli
inc
popf
and
shr
out
mov
test
fistpll
pop
insl
mov
shll
mov
jno
dec
insl
nop
sarb
lea
test
jne
jecxz
xchg
xchg
inc
lock
push
stos
outsl
ficomps
lods
push
rolb
scas
fldt
in
fisubrl
in
test
sbb
push
jnp
sbb
imul
mov
js
cmc
fdivrs
pop
pop
call
aam
push
ja
inc
jmp
adcl
push
inc
out
js
inc
in
addb
in
gs
cs
cmp
and
ja
sbb
and
inc
popa
lret
scas
jne
pop
mov
mov
mov
int
jg
test
in
mov
jmp
cmp
fsts
jmp
pop
pop
xchg
and
imul
xchg
repz
mov
ja
scas
jmp
jmp
ds
xchg
cs
ret
pop
lea
pop
xchg
and
adc
fwait
and
mov
inc
jp
mov
mov
mov
sub
cmpsl
repnz
mov
xor
cmp
stos
lret
sbb
push
nop
dec
mov
incb
xchg
int3
outsb
call
daa
push
dec
xchg
enter
mov
nop
psrld
mov
vpcmpgtb
fnop
ror
adc
inc
add
jp
sbb
lahf
inc
xchg
cmpsb
aaa
sbb
cmp
imul
add
mov
mov
jmp
and
imul
sub
sbb
push
sub
push
or
ds
pop
sarl
fisttpl
and
insb
outsl
mov
fildll
pop
xorl
add
pop
cmp
jg
test
jbe
inc
cmpsl
je
jns
cmp
xchg
cwtl
dec
or
daa
push
dec
bound
iret
dec
fcmovbe
xor
pop
inc
mov
jl
insl
or
push
cmp
into
cmp
sbb
int3
pop
pop
mov
pop
pusha
movsb
scas
xor
adc
and
scas
and
cltd
pushf
or
fcomps
mov
adc
push
push
jmp
push
add
dec
mov
pop
and
mov
insl
adc
sbb
sbb
inc
jecxz
in
mov
dec
jae
cwtl
ret
test
sub
fmul
mov
sahf
lods
dec
xchg
sbb
add
lock
jge
in
mov
sbb
ret
jo
loop
test
lods
or
movsb
into
mov
je
fildl
iret
push
mov
mov
adc
sub
pop
shl
mov
cli
jmp
xchg
dec
mov
out
popa
test
add
ljmp
fnstcw
test
jmp
add
adc
or
mul
pop
mov
ds
pop
jp
lea
mov
cmpsb
sbbl
xchg
mov
push
cmp
mov
sbb
leave
dec
adc
pop
dec
mov
fdivs
cmp
add
loop
sub
xor
or
mov
rorl
pop
lret
scas
aaa
sub
scas
push
sbb
movsb
add
repz
xchg
sub
sti
test
xlat
daa
test
loope
sbb
cmpsb
int
fwait
xor
addr16
jb
incb
fwait
push
rcl
add
pop
push
dec
inc
in
int
jmp
jecxz
mov
mov
sti
fldcw
arpl
jmp
xor
out
mov
scas
add
push
add
jne
test
sbb
and
lods
sub
xchg
sarl
ds
mov
sub
lahf
sbb
push
add
push
mov
sub
lea
jae
jnp
mov
cmpsl
mov
mov
js
mov
xchg
adc
pop
pop
mov
hlt
out
inc
test
push
jmp
scas
imul
xor
or
imul
cltd
bound
ljmp
mov
in
sahf
mov
sbb
and
mov
pop
lret
fidivrl
sarl
sub
imul
outsl
fbstp
pop
xor
cmpsb
lret
push
dec
inc
add
sbb
xchg
loop
add
pop
mov
push
mov
das
iret
xchg
pushf
imul
jmp
xchg
aaa
nop
sub
ds
lea
mov
mov
xor
add
data16
in
repz
cmp
fs
mov
inc
and
hlt
int
pop
and
lcall
test
loopne
push
push
outsb
sbb
cmpsl
push
gs
data16
ja
fdivr
data16
addl
adc
lea
or
call
push
data16
inc
jmp
in
int3
inc
daa
sahf
aaa
cmp
test
push
push
mov
sub
dec
icebp
hlt
adc
pusha
mov
mov
repz
cmp
xchg
popa
xlat
mov
pop
xor
inc
cltd
mov
imul
iret
out
xchg
scas
pop
ja
mov
pop
mov
xlat
in
jae
shlb
or
inc
or
daa
out
adc
mov
mov
pop
dec
mov
movsl
jp
pushf
mov
xor
pusha
xchg
cmp
fsubr
xchg
cmpsl
mov
pusha
stc
push
shl
cltd
xor
add
or
pop
cmp
sbb
stos
dec
push
push
xor
add
pop
mov
rolb
prefetchnta
nop
push
sub
lret
shl
hlt
lds
cld
push
mov
cwtl
inc
xor
adcl
test
cwtl
insb
sub
pop
ret
cmpsb
xor
mov
dec
addb
mov
pushf
stc
ljmp
inc
cmp
lcall
sti
les
stc
icebp
push
outsl
nop
sub
stos
and
mov
jb
adc
inc
shlb
sub
ja
ljmp
adc
jnp
mov
rorl
mov
aad
cmp
lock
pop
cs
cmp
in
jno
out
cmp
dec
mov
push
jbe
popa
in
lods
inc
lcall
lcall
mov
adc
cmp
and
insb
mov
pop
cmp
dec
dec
and
push
push
nop
push
xchg
mov
repnz
sbb
sti
jae
mov
mov
out
ss
pop
adc
lcall
sbb
dec
sub
scas
mov
mov
push
sbb
or
pop
adc
jp
fisttpll
push
xor
pushf
pop
mov
or
jne
sub
adc
adc
cld
jnp
xchg
clc
jb
shrl
or
lea
fldcw
add
imul
fs
ja
nop
in
mov
jmp
xchg
mov
jb
repz
cli
and
sbb
popl
or
daa
stc
cmpl
ficoms
pop
iret
adc
sahf
pop
les
add
pop
ss
add
sbb
fildll
or
cmpsl
or
and
push
mov
adc
std
gs
or
add
mov
rorb
int
lahf
lds
bound
fisubl
imul
imul
push
inc
or
mov
stc
push
hlt
inc
sub
jmp
ret
jo
pop
add
sbb
push
or
rolb
cmp
ss
inc
je
mov
push
add
lahf
cmc
dec
dec
ret
add
push
lea
push
or
js
out
cmc
movsb
dec
ficoml
daa
cmpsl
mul
movsb
pop
fildl
or
imul
push
xor
mov
sub
jg
iret
fiaddl
xchg
and
cmpsb
rcrb
shrd
lret
sbb
rclb
orb
xor
and
fcomps
mov
in
aaa
jp
loope
jg
pop
add
and
je
xchg
insb
cmp
push
jg
js
push
lock
mov
pop
movsb
test
fisttpll
xlat
push
jb
sbb
ret
mov
jne
dec
mov
nop
das
outsb
cmp
cmc
inc
lds
fdivp
pop
adc
cmp
mov
push
insl
push
cmp
pop
mov
lahf
xchg
inc
jg
sub
pop
jmp
mov
mov
lds
pusha
mov
fldl
cltd
lret
dec
in
xor
in
popf
adc
and
mov
or
imul
sbb
cltd
std
push
clc
push
fwait
mov
sti
xor
xor
mov
sub
pop
aad
out
or
ret
mov
in
dec
xchg
push
mov
stc
sahf
dec
inc
inc
xlat
imull
mov
dec
fstp
cmp
mov
mov
pushf
pop
or
mov
sahf
mov
mov
repnz
jno
jg
cmp
xchg
or
mov
pop
insb
add
call
jl
mov
sbb
dec
ds
aam
mov
lret
pop
add
sub
jmp
cld
sub
rcrb
subb
mov
les
add
mov
cs
inc
jnp
test
outsl
lea
adc
ljmp
sbb
xchg
cmp
lds
dec
push
lcall
lods
ret
mov
lods
cltd
push
sub
aaa
or
insl
add
push
fldcw
sub
push
sar
scas
inc
cmp
leave
mov
adc
add
pusha
dec
fsubrs
std
xchg
sbb
dec
pop
sub
pop
orb
shll
ret
pusha
popf
cmp
das
inc
in
rol
sbb
jnp
push
and
rcrb
dec
bound
scas
insl
test
xchg
ret
fildll
add
xchg
mov
or
dec
push
dec
dec
mov
repnz
xchg
dec
push
imul
add
mov
aam
mov
and
mov
and
cmp
adc
mov
addl
mov
fnstcw
or
enter
inc
push
xor
sbb
mov
cmpsl
mov
rcll
aas
and
mov
scas
push
fnstsw
cmp
pop
in
pop
xchg
sbb
jg
and
mov
xchg
dec
sbb
out
aas
jae
mov
aad
lcall
int
loope
jmp
jg
jbe
mov
add
and
or
out
scas
js
sahf
jge
lret
cmc
ret
push
ret
imul
dec
popf
imul
adc
or
mov
repz
pop
xor
mov
push
jbe
nop
enter
jmp
bound
mov
fcoml
lret
shlb
mov
imul
fs
inc
pop
rolb
mov
pop
jl
data16
popf
lea
push
lret
cmp
dec
jo
bound
sti
enter
mov
hlt
add
negl
sbb
pop
pop
and
mov
push
mov
dec
inc
cmp
in
mov
mov
negl
lds
push
ja
add
pop
adcl
test
inc
or
aaa
sub
inc
dec
add
mov
jno
divb
or
aam
hlt
mov
mov
xor
out
cmpsb
enter
shlb
cmp
xor
mov
add
or
dec
pop
test
ja
ret
add
scas
inc
inc
clc
lods
fiadds
decl
shl
adc
adc
push
dec
in
xor
out
xor
mov
andl
sarl
or
xchg
hlt
cld
sahf
sbb
adc
fs
rcl
push
sub
sbb
repnz
idiv
aad
loop
mov
push
and
fwait
sub
mov
decl
mov
fcomps
pandn
push
push
cmp
sbb
and
js
inc
jbe
shl
cli
pop
roll
push
sbb
fbld
dec
mov
cmc
sub
jp
dec
jb
test
add
mov
in
cmp
rcr
or
lock
lret
push
push
inc
ds
in
or
cld
test
sbb
add
inc
andb
arpl
add
xor
cli
and
sbb
jecxz
jg
push
out
inc
es
fnstsw
imul
inc
mov
rcl
into
mov
addr16
out
inc
lds
push
mov
cmp
jne
adc
repnz
cmp
push
cmp
jno
popf
sahf
in
rep
popa
cmp
jno
sbb
fwait
cmp
mov
push
out
shr
cwtl
cmp
xor
aaa
scas
repnz
xchg
insb
dec
std
sbb
ret
mov
aaa
cmp
push
je
cmp
cmp
fstpl
pop
mov
jl
jbe
out
mov
pop
frstor
ja
cmp
push
lret
jo
lds
and
lea
fldl
or
jecxz
mov
and
loopne
sub
test
outsl
or
xor
jge
jl
mov
pop
adc
mov
sahf
int
pop
dec
lock
mov
and
xchg
adc
rcrl
cmc
mov
test
jl
pop
xor
mov
addl
leave
scas
lods
shrd
cmpsl
dec
dec
add
das
sub
mov
sbb
loopne
hlt
and
in
ja
cmp
ljmp
xchg
scas
and
popa
mov
and
mov
mov
test
cmp
sbbb
jge
aas
cltd
pop
cld
inc
enter
pop
cvtpi2ps
xchg
leave
imul
mov
stos
pushf
in
adc
ljmp
pop
jmp
rorb
xor
adc
es
jno
pop
sub
sbb
lcall
lea
in
aas
mov
out
jnp
lcall
rclb
jne
lock
repz
xor
add
or
movsl
mov
out
repnz
inc
push
push
mov
js
cmpsl
jno
cltd
movsb
sbb
nop
pusha
push
stos
sub
aaa
pop
lock
ret
sub
test
sub
mov
divl
aad
mov
fisubrl
rcr
aas
or
mov
dec
out
pusha
inc
adc
xor
outsb
push
dec
imul
add
mov
rorl
fs
push
scas
sbb
push
cmpsl
mov
jb
shll
out
mov
popf
mov
fidivrl
cs
push
push
addr16
mov
insl
ljmp
insb
mov
sub
hlt
pop
jno
lock
clc
jmp
jg
mov
repnz
in
and
push
or
insl
xchg
adc
test
xor
and
cmp
in
sub
inc
push
dec
stos
stos
or
push
int
sti
mov
cwtl
add
mov
movq
je
andb
sub
mov
aas
and
pop
mov
adc
shl
mov
and
or
out
clc
pop
iret
test
cmp
test
add
cmp
or
and
out
sub
add
cmp
push
jne
fisubl
sbb
lcall
jecxz
ss
cmp
pushf
loop
lret
and
mov
fdivrs
out
and
inc
sub
xchg
insb
or
xorb
pop
cmc
pop
mov
repz
mov
out
adc
daa
fistpl
jge
sbb
sbb
sub
ret
add
jecxz
add
int3
cwtl
iret
and
daa
push
inc
lock
push
jne
das
ljmp
cmp
lods
loop
pusha
and
ret
out
jmp
add
pop
out
pop
pop
les
dec
push
and
adc
test
cld
and
mov
movsb
mov
push
cmpb
outsb
mov
shl
gs
lret
xor
lds
out
pop
mov
push
cld
push
cmpsb
cmp
ficompl
in
add
dec
popa
adc
add
iret
push
inc
cltd
add
scas
add
cmc
test
cli
sbb
ficompl
cmpsl
stc
in
add
mov
iret
dec
cld
push
ror
xchg
es
and
fsts
loop
jp
xchg
loope
inc
out
jno
and
push
pop
pop
daa
int
stc
clc
sub
and
mov
sbb
cmpsb
ret
mov
cmp
or
add
inc
jae
and
popa
out
out
pop
lea
ljmp
scas
loopne
fsubrs
or
jne
jo
xor
movsb
and
aad
mov
leave
cltd
pop
repz
sar
pushf
lcall
jmp
adc
and
jp
or
inc
sub
popf
sti
mov
out
mov
and
adc
pop
lea
adc
ljmp
add
outsb
inc
xor
push
inc
pop
cs
xor
push
out
aam
add
inc
pop
enter
jmp
sahf
dec
mov
adc
ss
pminub
cmp
aad
test
movsl
jne
jae
xor
add
jbe
aas
cmp
ds
xchg
jecxz
sub
pop
cwtl
xchg
and
jmp
mov
mov
mov
push
mov
dec
cmp
and
jmp
daa
jo
addr16
jne
in
lds
dec
or
xchg
lret
sub
pop
sti
pop
adc
mov
pop
push
mov
cmp
xor
adc
push
je
pop
sar
cmc
sbb
test
addr16
aas
lods
cmp
jl
mov
popf
scas
mov
lcall
fstps
xor
pop
cmp
mov
lcall
adc
xchg
lret
mov
mov
lahf
push
lock
loope
into
cmp
xchg
das
push
pusha
jae
aad
popl
and
xlat
push
sbb
mov
lock
adc
mov
lea
rcll
mov
xchg
push
sub
sub
rcrl
mov
das
sbb
cmp
cmp
dec
push
int3
test
hlt
pop
pop
ficompl
repz
fistpl
mov
cmpb
adc
mov
mov
dec
cmp
inc
or
sbb
jne
pop
inc
inc
jmp
push
test
inc
xchg
orl
mov
jmp
dec
mov
in
push
sbb
test
sbb
int
push
stos
arpl
js
xchg
sub
jae
jbe
mov
cmp
push
cs
mov
xor
add
imul
cs
dec
addb
adc
xchg
push
scas
aad
sub
ds
ja
jo
adc
jle
add
push
dec
cmpsb
jl
movsb
xor
cmp
inc
jae
fcomps
dec
adc
iret
mov
cmp
int3
push
imul
in
outsl
movsl
jge
dec
lcall
xchg
das
sub
sbb
or
xchg
rorl
xor
or
pop
cmp
cmp
mov
les
popf
loope
or
icebp
in
dec
sbb
repz
sti
mov
cmp
jo
out
pause
xchg
aad
push
sti
xchg
push
test
daa
bound
mov
or
inc
mov
mov
or
imul
dec
xor
ss
mov
lret
or
xorb
aas
mov
mov
les
inc
insl
lock
cmp
jp
or
lods
cmp
jge
repnz
push
les
mov
push
and
out
adc
test
imul
dec
mov
cmc
sbb
xchg
loop
mov
hlt
xchg
sbb
inc
jne
jmp
pop
inc
xchg
sub
loop
lock
mov
inc
out
and
cwtl
insb
mov
int
mov
xor
xchg
in
sub
lret
insl
pusha
rorl
xchg
mov
imul
fbld
gs
je
mov
mov
add
cmp
mov
add
mov
dec
gs
leave
mov
std
in
divb
imul
pop
jnp
mull
clc
cld
dec
das
adc
pop
aad
mov
das
gs
dec
test
sub
dec
jg
jge
or
int3
scas
and
nop
cmp
sub
jno
neg
cmp
sti
lret
arpl
loop
xor
fwait
lcall
rclb
stc
lea
lret
stos
in
mov
xor
dec
sbb
push
xchg
xchg
int
movsb
test
fwait
in
fsubr
lods
mov
orl
jnp
pushf
fldenv
and
fstl
sbb
push
push
scas
std
into
cmp
add
stos
push
imul
out
lcall
dec
jo
pop
mov
inc
xor
mov
xor
pop
cltd
cmp
cmp
call
adc
jnp
lea
rolb
adc
cli
stos
dec
cli
lahf
adc
pop
cli
xor
clc
mov
xor
and
mov
icebp
add
test
add
leave
stos
jnp
pop
push
leave
iret
shlb
push
fisubrs
mov
jmp
daa
jnp
test
bound
inc
xor
std
cmp
cmp
iret
les
adc
addr16
bound
rol
sahf
fs
lcall
add
and
xor
aad
push
mov
add
jecxz
jbe
xchg
imul
inc
cwtl
mov
mov
push
outsb
xorb
jle
loope
or
cmp
lret
push
mov
xor
mov
xor
jp
mov
nop
out
je
pop
jle
test
call
ds
imul
mov
lods
and
jmp
jmp
lods
mov
in
int
mov
push
loopne
xchg
mov
cmp
or
insb
jmp
out
or
and
pusha
test
cmp
mov
stos
mov
jge
pop
sbb
pop
sti
jbe
mov
aad
dec
test
lock
jp,pt
lret
jb
add
adc
add
or
leave
push
fmuls
les
pop
repz
xchg
insb
adc
and
mov
xchg
lds
popl
cmpsl
sbbl
ret
or
push
push
lret
and
cmp
in
dec
arpl
and
loope
mov
movsb
pop
jg
mov
into
cmp
jb
pop
nop
shl
push
mov
enter
jle,pt
jns
dec
mov
sbb
pop
out
xor
inc
aaa
sub
mov
and
inc
loop
push
jne
lods
cmp
mov
js
cmp
xchg
or
in
adc
imul
mov
les
sbb
sub
cmp
or
fdiv
dec
xchg
sbb
xor
rcrb
jg
addr16
or
push
imul
aam
jb
mov
jno
ret
ja
cld
data16
popa
push
repnz
xchg
add
test
xchg
sbb
sub
add
les
addr16
popa
movsl
xor
dec
mov
pop
mov
ljmp
sub
xor
xor
cmp
hlt
hlt
inc
cs
addr16
test
call
int
aad
mov
ljmp
je
lret
rcrl
in
and
loopne
jns
in
ret
sub
test
pop
data16
xchg
push
lods
pop
or
adc
mov
lods
sarb
cmpsl
cmp
or
pop
test
movsl
cmp
hlt
lcall
popf
test
cmp
pop
in
and
mov
mov
out
fistpll
mov
mov
cmp
sub
cmpsl
imul
movsl
loopne
in
movsb
adc
mov
mov
repnz
lahf
scas
test
out
inc
test
sbb
outsb
and
adc
mov
push
pop
jno
inc
lea
and
cmpsb
xor
jecxz
lds
pop
insl
cs
push
and
pop
push
jnp
scas
out
inc
aad
adc
mov
add
push
adcl
xor
sarl
leave
popf
mov
xrelease
insl
sub
insl
daa
int
mov
push
pop
mov
mov
dec
jg
push
jp
cli
lock
outsl
aaa
in
push
lret
jge
in
aad
cwtl
in
outsb
cmc
sarl
cmpsl
add
dec
inc
xor
mov
sub
jg
shlb
test
icebp
jle
xor
fisttpl
lahf
pop
mov
rorb
mov
std
mov
fistpl
leave
and
or
adc
or
loopne
sahf
and
sub
daa
out
orb
cmp
enter
lea
xor
in
push
rcl
and
rclb
jb
xor
sbb
sub
push
cld
push
pop
sbb
mov
inc
inc
aas
cmpsl
cli
cmpsl
and
pop
pop
test
pop
or
inc
fisttpll
in
mov
aas
xchg
jecxz
mov
mov
adc
ja
push
notl
ljmp
sub
cmp
sbb
repnz
jb
aaa
or
and
test
xchg
ljmp
movsl
pop
push
outsb
mov
xor
es
or
pop
pop
nop
lret
sbb
in
gs
pop
mov
nop
push
adc
insb
mov
test
xchg
xor
lock
cmp
and
andl
roll
dec
jne
in
orb
arpl
gs
iret
mov
addr16
sub
xchg
sub
jae
adc
inc
gs
dec
ljmp
inc
insl
aad
std
cmp
test
into
cmp
sub
insl
in
mov
sahf
inc
pop
fimull
xor
jae
sub
jecxz
and
mov
pushf
test
pushf
sbb
xchg
dec
cmpsb
test
sub
loopne
or
adc
mov
adc
inc
inc
cwtl
pop
and
mov
data16
xchg
fstpl
adc
sub
mov
fcmovne
adc
fnsave
pusha
stc
dec
das
adc
sub
aad
mov
cltd
orl
mov
insb
movsl
sub
pop
ja
dec
sub
and
scas
xchg
push
pop
inc
sub
push
mov
out
cmp
mov
flds
sub
xor
jle
sbb
add
mov
dec
ret
jae
add
mov
je
push
js
fs
cmp
jbe
xchg
into
imul
aad
ret
mov
insl
jo
stos
mov
mov
jns
and
out
push
mov
cmc
sarb
or
aaa
ret
rolb
cmp
adc
fwait
les
popa
mov
cmp
lods
lret
push
stc
sahf
adcb
lret
insl
std
js
sbb
data16
les
popl
and
push
jbe
pop
push
test
pop
sbb
lods
push
push
mov
bound
jecxz
imul
mov
fs
ss
in
rorl
push
jg
out
mov
movsb
push
adcl
addr16
bound
aas
jnp
lds
sub
push
jne
xlat
test
rcrb
in
inc
iret
repnz
jae
pop
cltd
xor
es
pop
mov
inc
mov
push
test
dec
out
inc
pop
daa
sbb
or
mov
das
push
dec
and
or
jle
cld
and
ret
mov
xchg
mov
xchg
pop
pop
xor
push
sahf
je
dec
aas
rcr
mov
mov
jg
push
pop
mov
xor
loopne
scas
pop
jne
mov
mov
and
push
shll
push
frstor
xchg
pushf
mov
lret
mov
xor
scas
and
mov
add
mov
fldt
or
inc
scas
and
pop
jecxz
xchg
mov
int
xchg
daa
push
add
insb
add
in
cwtl
mov
dec
cs
add
hlt
mov
sub
cmpsb
and
inc
movsb
popa
xchg
movsb
rcrl
mov
inc
test
jle
and
inc
into
or
mov
fs
jecxz
add
test
add
fs
xor
cmp
arpl
shlb
int
sbb
adc
adc
jb
push
cmp
xor
mov
rolb
add
ds
cmp
test
notb
pop
arpl
dec
fwait
movsb
mov
test
xchg
jecxz,pn
sbb
ud1
hlt
cld
pop
cltd
cmp
pop
or
adc
fnstcw
popf
xchg
and
ret
xchg
xchg
cmp
cmp
add
jb
add
mov
push
pop
jg
out
xchg
push
bound
pop
je
fwait
mov
aaa
xlat
enter
loopne
mov
inc
aad
cmp
pop
cmpsb
test
add
insb
sub
shll
mov
pusha
std
movsb
lret
mov
or
fnstenv
fisttpll
adc
pop
mov
mov
push
pop
adc
fistl
sbb
adc
dec
pop
mov
insb
lret
ss
sbb
mov
add
dec
imul
lret
shr
dec
pushf
movsb
ss
movl
sbb
rcrb
xchg
add
scas
pop
movsb
insl
xor
into
dec
test
and
jo
orl
fwait
loope
repnz
inc
ficoms
in
xchg
shrl
pop
or
cwtl
test
or
std
xor
pop
movsl
push
fwait
adc
stos
cld
xor
paddsb
or
repz
pop
dec
aaa
sbb
inc
test
ret
xor
pusha
and
inc
push
push
stc
add
es
xor
into
fmulp
scas
inc
mov
mov
cli
pop
lods
mov
lock
mov
pop
push
outsl
jne
dec
and
cmc
adc
pop
repnz
xchg
jge
sub
push
jle
mov
cmp
jg
sbb
inc
out
flds
sub
jae
jo
imul
out
xchg
bound
push
imul
xchg
mov
hlt
push
push
jno
mov
repnz
inc
jg
jg
repz
sbb
ud1
lret
data16
inc
fildl
pop
jbe
jl
mov
scas
mov
dec
mov
pop
dec
idiv
sub
cmp
aad
mov
flds
jge
dec
ljmp
xchg
scas
or
movsb
lea
int
mov
std
imul
pop
aaa
inc
hlt
pop
xchg
push
jmp
loopne
xchg
jbe
hlt
out
mov
push
inc
or
adc
pop
or
and
xchg
std
js
insb
jmp
push
das
cmp
popa
out
shrb
orl
mul
sub
and
jnp
js
dec
xor
enter
insb
mov
pop
sbb
and
test
fdivrs
inc
rcl
fadd
adc
cs
push
lcall
cmp
dec
or
ret
xor
push
inc
sub
add
lock
shlb
sub
test
sbb
mov
and
adc
or
xchg
clc
xchg
ret
pop
ficompl
cs
xchg
lods
es
cld
xchg
test
and
stc
fdivs
mov
dec
sub
mov
adc
data16
loopne
push
lock
lret
mov
js
or
adc
cli
inc
adc
or
inc
xor
dec
mov
and
cs
xchg
into
leave
or
sti
std
in
test
xchg
test
mov
subb
fdivs
pop
fisubs
adc
push
mov
xchg
mov
xor
iret
out
loopne
aaa
jecxz
fiaddl
int3
outsb
insb
push
cli
pop
negb
lods
repnz
setge
in
cmc
cmp
jge
adc
push
outsb
adc
les
aaa
mov
add
add
mov
xor
inc
push
push
pop
or
add
adc
enter
lods
fistps
cwtl
lret
add
movswl
scas
push
or
mov
out
sti
in
mov
adc
insb
fstpt
lock
mov
and
mov
stc
movsb
pop
scas
adc
ret
and
add
cmp
dec
sub
push
push
xchg
push
ss
xor
dec
gs
dec
push
les
daa
dec
stos
insb
sahf
scas
sub
adc
aaa
daa
ss
add
imul
mov
pusha
or
mov
jmp
inc
push
xor
push
dec
leave
cmp
arpl
sahf
scas
dec
enter
cmp
jge
adc
test
cmpsb
sbb
xchg
dec
in
popf
fildl
imul
icebp
dec
gs
jg
mov
and
xchg
mov
aaa
push
in
mov
test
dec
scas
cmpsb
jp
in
stc
sbb
mov
jge
dec
aaa
pop
push
in
pop
mov
in
outsb
js
stos
add
les
add
mov
ret
mov
pop
xor
out
daa
pop
pop
bound
cmp
les
icebp
jmp
popf
mov
cs
sub
jg
call
mov
or
jge
das
loop
or
sub
adc
ds
push
enter
mov
cmpsb
add
arpl
xchg
jge
adc
inc
mov
push
lret
mov
lock
test
ficompl
pop
mov
xchg
inc
aam
xchg
or
scas
ret
stc
ja
push
ja
movsl
push
cmc
jbe
js
xor
cld
ja
sub
into
pop
adc
fs
inc
imul
je
ret
in
mov
push
leave
dec
lds
gs
add
insl
into
dec
in
aad
push
jno
orl
xchg
mov
sahf
jmp
out
push
insb
rorb
jp
push
fiaddl
and
sahf
in
movsb
inc
xchg
add
pop
jb
mov
dec
rorl
dec
scas
mov
push
mov
mov
xchg
iret
shll
mov
xor
push
xor
stc
ja
jg
jbe
loop
inc
aas
and
insb
push
js
je
push
ret
aas
test
mov
inc
movsb
dec
add
cltd
push
xchg
push
lods
or
sbb
xor
mov
std
in
hlt
bound
inc
jp
fwait
sarl
adc
jns
testb
test
inc
pop
push
pop
loop
jae
pushf
pusha
adc
push
jp
stos
int
fstpl
cmp
insb
push
pop
jnp
push
subb
popf
or
sbbb
mov
mov
push
mov
and
mov
sti
pop
sbb
loope
lahf
xor
add
pop
push
mov
adc
push
pop
shrl
add
mov
loope
mov
rcrb
mov
cmp
sbb
mov
sbb
and
add
xlat
jg
jo
mov
das
lds
mov
push
fs
xlat
mov
into
or
cmp
cmp
mov
jbe
pusha
daa
xor
enter
mov
fcoms
xchg
dec
ss
xor
cmpsl
fadds
divl
sbb
mov
test
jge
jno
sub
cmp
xor
bswap
out
lods
cmp
cmpsl
mov
adc
pusha
pop
repnz
pop
push
mov
jns
loop
ljmp
mov
outsl
iret
nop
and
lods
fs
fldcw
cmc
add
lret
xorl
int
push
sub
push
movsb
push
jne
roll
adc
pop
dec
scas
push
mov
cmp
fisubl
mov
sbb
adc
sbb
ds
sub
aam
sbb
sub
inc
lret
pop
shl
and
adc
sub
cmc
jo
dec
xchg
ljmp
push
pop
out
jne
sbb
xchg
test
enter
cmpsb
or
dec
mov
shrb
sbb
adc
jl
and
movsl
test
and
addr16
stos
inc
cmp
push
test
sbb
int3
push
inc
mov
and
mov
pop
test
fadds
int3
lods
imul
xor
orl
incb
and
xchg
mov
mov
enter
sahf
ret
addr16
and
dec
in
repnz
test
cmc
inc
iret
cmpsl
dec
fldt
std
cmp
mov
aaa
rcl
lahf
dec
fsubrs
out
lods
popa
sub
xor
sarl
mov
repz
loop
imul
pushf
mov
ret
or
dec
loop
mov
sbb
adc
icebp
cmp
repz
outsb
push
push
lcall
xlat
xchg
idivl
mov
out
enter
test
xlat
dec
sbb
aas
repnz
jp
dec
jg
cmovnp
outsb
and
movsl
into
cld
shll
inc
mov
cmp
or
cltd
or
push
cmp
push
push
xchg
xchg
mov
lret
ret
xchg
dec
mov
cmpsl
sarb
mov
push
fsubrl
iret
cs
jbe
fwait
insl
loop
movb
mov
movsl
mov
jns
sub
jmp
mov
cmp
repz
add
fs
push
push
addr16
mov
inc
and
lods
jne
lods
sbb
loope
lods
and
pop
mull
push
subl
rclb
mov
into
sti
sarb
dec
xchg
shlb
mov
xchg
sub
xor
push
pop
cmpsb
pop
xor
sbb
xchg
adc
or
sub
in
push
jae
dec
cmp
bound
popf
divb
call
negl
xor
pop
jp
aaa
jg
sbb
mov
inc
adc
xchg
cmp
xor
lahf
dec
in
lret
dec
mov
cmpsl
xor
pop
hlt
out
adc
lahf
xchg
pop
push
ret
fidivrs
cmpsb
lods
sahf
push
add
pusha
movsl
fs
nop
push
rorb
insb
test
cmp
adc
inc
cmp
bound
int3
mov
xchg
adc
jbe
jp
add
add
movsl
sbb
mov
push
xchg
push
xchg
mov
dec
stos
or
aad
clc
dec
push
xorl
cmpsb
lea
mov
fs
mov
lock
jmp
mov
push
sub
test
and
sbb
in
adc
push
mov
test
in
cmp
add
loopne
fs
jbe
cmp
je
jmp
jb
jbe
xchg
insb
out
aaa
dec
ljmp
lahf
lret
lods
nop
fbld
insb
push
bound
ds
cmp
sbb
jnp
in
or
jns
push
xchg
mov
fstpl
test
fwait
or
mov
jp
je
sahf
int3
shll
aaa
jmp
push
xlat
ljmp
sub
es
push
clc
jns
sbbb
or
es
in
inc
add
adc
jecxz
jns
scas
out
mov
lcall
xchg
mov
mov
stc
mov
into
int3
fsubrl
int3
push
imul
xchg
adc
gs
sbb
sub
movsl
push
jg
loop
push
inc
cli
jo
sub
call
push
or
test
mov
mov
mov
push
mov
cmp
or
and
push
lock
icebp
call
xchg
int3
out
xor
add
add
movsb
popf
decl
and
arpl
rcrl
fisttps
in
gs
mov
jecxz
inc
inc
int3
pop
and
pop
xor
push
test
aam
add
mov
iret
pop
add
push
clc
fidivrs
mov
aaa
push
mov
idivl
sub
mov
loopne
jg
nop
inc
lods
xor
popf
sub
hlt
xor
outsl
cmpsl
call
and
iret
pop
cmpsl
aas
fnstcw
or
call
in
and
in
sbb
rcr
insl
imul
scas
outsl
adc
imul
orb
xlat
push
mov
and
inc
aas
xlat
ret
mov
sub
jp
roll
in
rcll
inc
push
push
xchg
push
add
out
and
pop
mov
cmp
mov
sahf
out
fcoml
sbb
jae
orl
or
jae
mov
movsb
lret
mov
push
mov
mov
jle
or
outsb
mov
add
fcmovb
adc
shll
insb
cltd
inc
sbb
fmuls
sbb
pusha
stos
repnz
xor
and
dec
mov
ss
clc
scas
das
mov
push
leave
lods
lods
mov
inc
test
dec
and
cli
lea
shrb
cmp
movsl
or
add
jnp
clc
pop
sub
fstps
xchg
push
push
adc
inc
cmpsb
adc
stc
mov
repnz
aas
xchg
inc
sub
je
push
mov
and
jns
rorl
and
mov
test
push
pop
xchg
cmc
mov
test
pop
and
jbe
stos
negb
jge
jp
inc
in
inc
lret
cmc
aam
mov
test
in
lods
in
mov
push
scas
or
stos
xchg
push
add
sub
lods
lret
mov
repz
push
or
mov
inc
and
out
cmp
or
xor
xor
add
jo
arpl
push
jl
inc
adc
jg
nop
mulb
xchg
fildll
loope
jb
pop
test
ret
push
andb
push
ja
rolb
movb
push
mov
xchg
popa
mov
sti
add
xor
aaa
sub
and
and
adc
inc
faddl
loope
adc
mov
call
push
fwait
sub
jmp
divb
lock
adc
js
std
call
inc
fcoms
test
pop
mov
in
fstpt
aas
std
shlb
ljmp
out
outsl
decb
rorb
leave
and
cwtl
data16
inc
mov
mov
inc
xorl
and
cs
testb
mov
xchg
inc
inc
push
mov
jne
inc
fsts
jo
sahf
adcb
data16
pop
mov
addr16
push
arpl
sub
mul
fnstsw
idivl
dec
int3
sbb
loop
sahf
aam
push
lret
rorl
popa
repnz
iret
or
out
sbb
nop
enter
cmc
in
jl
mov
pop
cmp
inc
les
ret
data16
in
push
arpl
cmpsb
mov
inc
jno
cltd
pop
pusha
dec
sahf
jne
sbb
fcomps
xchg
sub
and
cmp
xchg
inc
adc
pop
jno
push
jb
push
jp
dec
ljmp
cmp
push
ds
pusha
sbb
imul
cwtl
xchg
divb
inc
fisubrl
inc
incl
lcall
out
inc
mov
xor
insl
jp
dec
push
sub
or
jl
sahf
adc
jno
mov
popa
rorb
dec
sbb
or
stos
xchg
mov
shlb
jp
testl
aam
cmp
mov
sub
clc
jmp
jle
pop
test
push
nop
addr16
cmp
out
nop
aaa
adc
cmp
xchg
xor
neg
or
push
test
dec
xchg
aaa
aam
sbb
pop
js
aad
push
jmp
pop
mov
imul
mov
jp
mov
sub
or
lahf
repnz
addr16
notb
sti
and
fcmovbe
sbb
gs
fwait
daa
cli
xchg
inc
mov
add
pop
xchg
mov
jmp
mov
mov
or
fxrstor
mov
test
test
cmp
xchg
packssdw
xor
es
movsl
add
js
mov
cmpsl
cwtl
xor
ss
fnstcw
rclb
pusha
inc
push
add
shrl
les
sub
sub
stos
mov
cwtl
cmpsl
pop
adc
mov
dec
es
add
push
mov
inc
cwtl
dec
fimull
into
sbbl
out
jl
jb
inc
xchg
cmp
push
out
addb
add
outsb
fistpl
dec
jp
scas
add
pop
jnp
push
idivl
xchg
out
push
daa
and
push
mov
cwtl
push
adc
inc
lahf
xchg
neg
daa
mov
push
in
rcrb
fwait
push
ljmp
movl
push
lret
das
mov
xor
xchg
aam
xor
dec
rolb
je
sub
jge
fsubrs
sbb
mov
cmp
lcall
adc
out
jns
in
dec
pop
cmpb
pop
ss
or
mov
mov
sub
inc
sub
lods
xlat
fwait
lea
hlt
jae
and
aaa
repnz
sub
icebp
jl
mov
ficoms
les
xor
clc
in
xorl
addr16
insb
aas
cmp
sbb
insl
arpl
sbb
and
or
notb
shr
and
dec
scas
jp
stos
outsb
mov
jge
mov
stc
push
ljmp
sti
inc
add
enter
clc
pop
in
mov
std
or
rep
sbb
scas
inc
sbb
or
jl
ss
shrb
loopne
mov
das
loop
js
add
push
push
cmpsb
das
hlt
pop
loopne
xchg
xchg
test
test
inc
jl
mov
in
ds
push
pop
cmp
lret
lahf
cmp
pushf
sahf
xchg
daa
pop
lods
cli
xor
aam
fldenv
pop
xlat
mov
jecxz
leave
in
jno
pop
mov
cld
int3
les
call
sbbl
lods
sbb
mov
rcrb
iret
inc
bound
and
jle
andb
add
xlat
ljmp
cmpsb
and
dec
cmp
das
dec
sub
out
cmp
aam
mov
sub
xchg
ja
and
call
xchg
hlt
cmpsl
inc
pop
jb
mov
enter
cwtl
or
lods
xchg
btcl
jp
clc
in
inc
in
aas
jne
popf
mov
inc
sbb
or
or
loope
nop
stos
mov
push
mov
push
sbb
addb
pop
mov
mov
in
lods
lods
call
push
call
sbb
daa
clc
push
xchg
cmc
adc
mov
lds
aas
testl
pop
and
test
sub
mov
mov
add
xchg
push
cmpsl
add
fsubrl
cwtl
in
sbb
cmc
imul
loop
pushf
repz
dec
add
in
popl
mov
mov
xor
int3
pop
sbb
push
add
jns
push
push
jno
js
jnp
push
pop
shr
lret
cmp
add
xchg
test
jle
loop
pushf
pop
loop
gs
fsubl
xchg
addr16
std
js
arpl
adc
adc
sub
insb
push
in
push
lods
data16
push
stos
add
mov
adc
add
cld
or
je
xchg
lahf
sbb
insb
fwait
mov
pop
lock
xor
mov
cmp
dec
mov
cmpsl
jae
push
ficoms
cmp
inc
mov
arpl
cld
ret
pop
pop
dec
rcr
out
ret
adc
das
xor
jg
mov
xchg
add
inc
fcmovnu
mov
cmpsb
jl
jne
cmp
cmp
sub
dec
repz
in
fwait
ror
add
loop
inc
test
cmpsb
pushf
daa
movsb
push
shl
mov
sti
xlat
negb
ljmp
fimull
sti
stc
ds
cmp
std
cmpsb
lds
add
xor
pop
xor
out
or
pop
ret
mov
dec
lret
adc
hlt
cmp
outsl
xorb
jg
aas
filds
es
arpl
xchg
lret
mov
xchg
dec
movsb
fwait
jns
in
decb
mov
test
sti
push
sbb
in
mov
sbb
xchg
mov
scas
ret
mov
test
dec
adc
outsl
xor
popf
testl
fidivl
icebp
test
cmpsl
mov
lods
pop
dec
sub
mov
dec
ja
adc
push
mov
out
lea
popf
cmpsl
in
jmp
jl
cmp
push
cmp
addr16
aad
or
repz
popf
pop
in
mov
cmpsb
popf
mov
pop
inc
xor
stos
mov
cltd
ljmp
xor
sub
rcrl
xchg
leave
cmp
xor
sub
or
mov
xchg
in
shrb
mov
aas
dec
lcall
xchg
inc
ss
cltd
shll
cltd
in
push
rclb
fwait
in
or
push
shlb
imul
cmpsl
inc
cld
jno
xor
in
jnp
clc
push
aas
testl
js
ss
jecxz
dec
xlat
pop
adc
subb
and
and
sub
mov
sbb
inc
lods
sub
xchg
cmp
aad
xor
and
sub
jne
in
arpl
scas
push
dec
add
mov
pop
dec
lods
adc
rcrl
repnz
stos
adc
mov
sbb
inc
pop
mov
dec
push
movsb
add
enter
lret
scas
dec
lcall
movsl
adc
push
cmp
add
nop
lea
pop
pop
pop
jle
insl
popa
imul
test
test
sub
hlt
fiadds
cs
daa
xorb
pusha
and
and
sbb
adc
push
iret
jb
inc
jge
add
in
gs
jno
ljmp
mov
adc
xchg
lock
ret
xchg
mov
andb
bound
add
mov
js
or
jbe
mov
mov
test
fwait
jo
out
bound
adc
push
stos
xorb
lahf
lea
rcl
jno
fs
ds
insl
mov
xor
ja
int3
shll
add
inc
shlb
mov
sub
ficoml
sti
dec
lods
cmp
in
add
loope
sahf
mov
jbe
addb
mov
dec
addl
cmp
cmpsl
divb
cmp
or
xor
js
jl
mov
sti
addr16
add
movsb
xor
sbb
ds
movsb
aad
das
imulb
or
sbb
mov
xor
cmp
add
fdivl
adc
cld
inc
cli
cmc
sub
fs
lods
mov
pop
mov
mov
mov
sub
data16
pushl
test
repnz
jo
jne
mov
ja
fimull
out
aas
jmp
add
jns
or
cld
pushf
jnp
test
mov
pop
daa
sbb
jnp
pop
pop
inc
gs
push
xor
jp
sub
inc
mov
mov
lods
pop
xor
pusha
jns
loopne
cmpsb
mov
mov
xor
push
sbb
lock
sub
pop
mov
jmp
fwait
adcb
push
aas
ret
daa
pop
sub
outsb
scas
mov
and
or
mov
pop
insl
xor
xchg
xor
out
xchg
fdivs
cwtl
cmp
es
adc
mov
sbb
inc
adc
xor
rcrb
movsl
sub
adc
mov
xchg
mov
clc
lods
xor
cmpsb
insl
mov
aas
push
out
leave
jne
xor
adc
daa
in
jnp
aad
aaa
sub
cmp
mov
lods
call
mov
sahf
inc
adc
mov
mov
push
jmp
xchg
pop
xor
add
mov
sub
mov
lret
mov
call
pop
into
sbb
xchg
pop
in
adc
ss
in
test
cmp
je
xor
imul
or
add
repnz
ljmp
cmp
ds
xor
xor
or
jns
in
xchg
xchg
daa
sub
fwait
cmp
xor
dec
or
rep
mov
mov
xor
pop
pop
out
dec
xor
jnp
fidivrs
testb
jbe
adc
xchg
sahf
add
stc
leave
insl
test
in
cmp
push
movsl
or
loopne
xchg
shlb
ret
xchg
xchg
push
xor
inc
orb
xchg
mov
pop
repnz
push
mov
call
mov
jmp
sbb
or
fbld
and
gs
shrl
mov
lds
push
sahf
and
push
in
arpl
das
cmpxchg
testb
xchg
mov
jg
xlat
call
inc
adc
adc
push
call
adc
push
fstpl
pop
stc
xchg
mov
inc
inc
das
arpl
ficoml
add
movsb
mov
adc
loop
loope
push
dec
sbbb
int
add
fistpll
popa
aaa
stc
xchg
sbb
or
loop
stos
push
out
iret
jno
shll
jne
lcall
sbb
xor
or
loope
or
stos
ds
es
cmpsl
cli
jmp
fildl
mov
mov
mov
pusha
cmpsl
or
cmpsl
mov
in
xor
mov
mov
ss
pop
sbb
xchg
stos
sti
mov
inc
aam
iret
shll
aad
ret
das
adc
pushl
mov
nop
sub
push
jno
mov
js
outsl
insl
int
sub
lahf
cli
or
sbb
clc
cmp
mov
inc
inc
sbb
dec
test
or
out
pop
add
xchg
fsubl
fldenv
sbb
cmc
mov
out
mov
jl
fwait
push
push
jp
dec
and
out
hlt
pop
push
xchg
dec
mov
loop
dec
xor
mov
loope
cmp
ljmp
fcoml
ret
jge
and
inc
test
adc
sub
mov
jbe,pn
jne
dec
mov
jecxz
mov
pop
cmp
testb
mov
push
sahf
loop
inc
lret
les
mov
sub
xor
daa
nop
sti
adc
fcmovnu
lahf
jle
jmp
dec
mov
stc
bound
mov
fwait
pushf
mov
push
lds
rorb
ds
sbb
and
adc
fnstsw
sbb
icebp
call
xor
and
fwait
aam
dec
out
icebp
ss
pop
stc
dec
mov
mov
cmp
xchg
pop
inc
or
push
jnp
dec
and
push
pop
rcr
popa
jmp
cmp
shrb
cmp
dec
xchg
testb
ret
dec
cmp
cmp
adc
sbb
and
popa
pop
leave
std
add
lret
ljmp
jbe
enter
add
out
test
jecxz
mov
shlb
adc
int
out
and
cmp
cmp
sbb
mov
mov
inc
das
cmpsb
adc
xchg
mov
popf
add
dec
cmp
sti
or
push
test
sub
rep
int
sbb
cmpsl
int
roll
sub
cltd
loop
pop
imul
mov
in
mov
and
jl
in
sbb
lods
jno
arpl
sbb
shlb
notl
inc
xor
aad
jbe
and
cmp
das
sbb
jo
daa
movsb
nop
adc
lcall
sub
and
push
mov
mov
mov
mov
cwtl
push
in
inc
aas
or
in
bound
andb
add
xlat
in
insb
jno
fsubl
test
fldz
cmp
jo
out
lahf
pop
cmp
lahf
shl
sarl
lods
mov
in
loopne
icebp
popf
pop
mov
jo
mov
inc
shlb
mov
leave
xchg
sub
fwait
dec
push
push
lahf
mov
xor
or
jge
sti
and
data16
cmpsl
mov
cmpsb
or
in
xchg
mov
inc
and
jae
dec
cmp
jbe
pusha
adc
xor
sub
jbe
es
jae
enter
outsb
outsb
xor
and
mov
inc
push
cmp
push
arpl
sub
daa
sbb
inc
rcrl
scas
xchg
aas
sub
sbb
loop
push
daa
inc
inc
xchg
in
adc
inc
add
sbb
insl
mov
inc
daa
or
sub
push
rorl
fwait
in
fstpt
lds
push
push
mov
les
cmp
jle
addr16
dec
ja
mov
loop
lret
cmc
mov
loop
mov
cld
inc
test
aaa
cmpsl
push
jne
or
lret
inc
and
push
pop
bound
xchg
outsb
mov
ja
adcb
sub
std
mulb
insb
inc
lret
or
mov
scas
xchg
jg
push
stos
aad
mov
stc
jns
ljmp
add
inc
in
adc
fwait
mov
mov
dec
cli
in
pop
sbb
sub
pop
sahf
leave
js
mov
jbe
xor
mov
dec
xor
pop
sbb
mov
dec
mov
popf
dec
mov
les
jo
popa
jbe
imul
arpl
push
les
adc
xor
in
fdivl
cltd
pop
cli
jno
sub
mov
out
leave
imul
mov
lahf
jecxz
jmp
aad
inc
sub
sub
pop
shlb
outsb
and
pop
lock
stos
aam
pop
shr
mov
or
mov
xchg
xchg
lcall
sbb
pop
je
sub
add
cmp
mov
mov
add
sbb
cld
mov
xchg
fildl
iret
pop
jne
ljmp
sbb
sbb
xchg
int3
sarl
jle
test
dec
enter
inc
ss
cli
cmp
dec
inc
mov
into
outsb
push
pop
out
jmp
xor
lock
or
test
test
push
lss
and
mov
loopne
cltd
dec
pop
push
or
and
roll
frstor
mov
mov
sbb
repz
cwtl
sub
imul
mov
mov
cmp
cmp
in
sub
xchg
cwtl
dec
movsl
mov
lea
and
rcrl
add
inc
insl
add
cli
pop
cld
jbe
push
jno
popf
cmc
shll
mov
jg
daa
scas
xchg
sbb
xchg
mov
adc
mov
cmp
mov
inc
popa
int3
dec
and
out
mov
push
pushaw
dec
push
pop
push
ds
or
sahf
cwtl
push
and
xor
dec
xchg
adc
movb
cmpsb
push
int3
jb
mov
pusha
jbe
sahf
jl
sub
addr16
adc
jb
ja
push
or
lahf
lahf
xchg
adc
dec
xchg
jne
or
sub
ret
mov
mov
stc
jns
jns
popf
dec
mov
shlb
sbb
fcom
js
ja
mov
or
dec
xchg
popf
dec
or
mov
mov
aas
daa
repz
test
out
imul
dec
push
cmp
and
jb
mov
pop
jle
push
mov
sbb
or
mov
mov
sbb
gs
popa
in
jae
mov
shll
inc
sbb
aad
movsl
jle
daa
pushf
xor
test
xchg
cmp
mul
mov
loope
adc
dec
sti
cli
pop
push
and
frstor
mov
sub
hlt
fucom
mov
insl
add
cmp
sbb
xor
add
orl
int3
xchg
fsubrs
aaa
test
mov
icebp
ljmp
add
push
rclb
mov
dec
xor
xor
xchg
pop
pushf
dec
sahf
jle
js
enter
mov
inc
sbb
jo
sbb
push
add
add
add
repnz
inc
xorl
cmp
sti
es
or
mov
sbb
push
cmp
arpl
inc
orb
xor
pop
mov
mov
dec
mov
xchg
sahf
jns
cwtl
lret
xor
jno
mov
mov
inc
inc
sub
clc
inc
push
popa
jge
pop
sbb
push
fidivrl
lods
fucomi
xchg
hlt
xchg
inc
cmp
jg
and
mov
mov
xchg
sbb
fstl
test
adc
popf
aam
add
xchg
mov
xchg
in
mov
loope
fldcw
xchg
icebp
sub
nop
mov
call
push
mov
in
js
push
pushf
dec
ret
cmpsb
ret
push
ret
enter
mov
push
repnz
push
mov
repz
or
sub
or
xor
fld
pop
dec
mov
mov
daa
xor
scas
jp
into
dec
ja
iret
jb
test
lret
sub
dec
popa
sbb
mov
cmpsb
sbb
push
fs
push
xchg
imul
dec
pop
pop
popa
jle
xchg
mov
outsl
aam
and
lock
xor
pusha
in
or
dec
pusha
adc
add
add
and
mov
daa
dec
and
adc
sbb
inc
sbb
inc
and
inc
and
enter
addr16
ds
loopne
out
andb
mov
pop
adc
mov
push
negb
testb
dec
and
pop
jg
repnz
xor
fisubrs
cmp
repnz
push
scas
mov
pop
add
dec
dec
mov
dec
mov
xor
popa
xchg
clc
stos
push
lahf
pop
fists
lret
xor
lcall
jae
cli
mov
fst
mov
ljmp
xchg
jbe
jnp
sub
inc
sbb
mov
fs
add
stos
sbb
test
cmp
mov
sbb
mov
jecxz
orb
adc
fdivp
ss
mov
xchg
ss
adc
jp
ss
jl
int3
add
cmp
sub
nop
jne
jo
arpl
iret
ds
adc
dec
fstl
xor
daa
add
out
sbb
push
xchg
loop
fldt
add
cmp
cmp
out
repnz
lahf
ret
fists
xor
ljmp
hlt
jae
out
cmpsl
sbb
ds
pushf
enter
pop
and
dec
xchg
cltd
add
repz
adc
or
xor
popf
cmc
into
add
push
in
or
xor
cltd
add
cmp
dec
and
call
cmpsl
mov
test
jg
mov
es
xor
jge
aaa
lret
add
mov
insl
mov
test
dec
inc
cli
pop
xor
sub
data16
dec
imull
inc
cmpps
enter
push
or
enter
inc
rolb
leave
shlb
or
movb
cmpsb
cmpl
mov
xor
popa
lds
testl
xor
xor
fmul
popa
and
cmp
push
mov
push
sub
dec
cmp
jne
pusha
dec
icebp
cmpsb
scas
cmp
and
xchg
in
ss
pop
xchg
inc
leave
sti
dec
mov
nop
jb
mov
outsl
adc
enter
ds
xchg
xchg
fwait
ss
stos
bound
adc
xor
push
xchg
add
adc
mov
lock
mov
in
into
popa
sbb
adc
cwtl
cmc
sbbb
aad
scas
repnz
push
stos
pop
and
sub
adc
sbb
aam
outsb
jne
jne
adc
mov
je
mov
push
ret
push
data16
pop
cmp
cmp
xchg
faddl
xchg
xchg
pop
adc
inc
outsl
mov
pushl
arpl
test
aam
or
mov
push
xchg
and
mov
mov
movsb
pop
jbe
sub
adc
stos
mov
pop
insb
fisubrl
push
xor
clc
daa
fwait
dec
push
jmp
xchg
fistpll
lahf
add
sarb
and
sbb
mov
adc
scas
jle
pop
addb
inc
out
shr
sub
pop
xchg
dec
dec
xchg
leave
push
iret
aas
dec
cs
ret
mov
dec
out
cltd
pop
jmp
test
push
add
iret
sub
into
push
xchg
jns
pop
cmp
mov
fcmovne
rclb
cltd
lods
lahf
mov
push
xlat
inc
mov
mov
xor
adc
aam
push
mov
notl
cwtl
loop
mov
lcall
je
sarl
and
pop
das
dec
ror
dec
lret
push
rcr
xchg
pop
popa
cwtl
pop
mov
mov
push
out
cwtl
lock
inc
jl
inc
inc
sbb
aaa
xchg
adc
aad
pop
add
cwtl
push
add
sub
xchg
xchg
into
sub
pusha
pop
fcmovnb
sub
les
lods
sahf
mov
or
ret
lock
pop
fdivs
sarb
inc
aas
mov
out
jb
std
dec
jge
pop
inc
mov
cmc
jge
or
addr16
fists
xor
cmp
pop
jl
adc
xchg
push
cltd
dec
iret
add
inc
pop
jnp
in
push
and
inc
hlt
push
leave
arpl
push
mov
das
adc
and
test
xorl
outsb
pop
pop
dec
mov
xchg
in
or
in
icebp
cwtl
push
mov
loop
or
jl
aam
insb
sarl
push
enter
mov
lahf
mov
loope
addl
out
es
and
in
pop
cmpsl
dec
sub
leave
cmpsl
mov
xchg
mov
fidivrs
lcall
popf
cwtl
mov
ficompl
add
sub
cs
sub
jmp
mov
cmc
sub
int3
lcall
push
dec
sub
add
add
dec
push
pop
add
call
push
xchg
xor
pop
mov
scas
xchg
test
mov
adc
cmp
pop
sub
or
addr16
fdivrl
cmp
pop
push
or
test
cmpsl
aad
adc
fsubrs
cmpsb
cmp
mov
adc
out
rdtsc
xor
sub
pop
push
mov
mov
fstps
cmp
xor
adc
fadds
or
and
pushl
inc
mov
stos
xchg
std
pusha
xchg
xchg
clc
aaa
hlt
arpl
push
cmpsb
jo
pop
lret
rcr
inc
xchg
xor
rclb
inc
mov
out
cwtl
aad
dec
lock
inc
push
inc
mov
ret
aad
in
test
shll
cli
leave
mov
mov
loope
push
inc
mov
push
add
push
iret
aas
add
je
nop
xchg
pop
movsl
lods
mov
mov
lahf
add
xchg
xchg
push
pop
mov
jmp
xchg
adc
fcomps
and
test
cmp
in
sub
mov
sti
negb
repz
lock
sub
sarb
sub
pop
fmuls
dec
jp
push
popa
fisubrs
je
sub
fcoml
andl
mov
jge
adc
sub
in
call
stc
jge
scas
cmpsb
call
cmp
or
add
out
popa
sti
jne
pop
lahf
roll
call
sub
stc
dec
or
enter
add
jg
subb
or
mov
pop
lahf
pop
sbb
push
push
adc
rorl
nop
add
stos
or
pop
mov
pop
jne
loope
inc
popf
push
cmc
leave
into
jb
or
adc
jmp
mov
das
push
adc
jnp
ret
adc
cmp
xor
mov
test
push
cmpsl
jp
pushf
xor
addb
push
and
addl
jno
cmp
fwait
fs
out
mov
icebp
mov
or
and
lar
sub
stc
sbbb
pop
sti
xchg
cmp
movsl
mov
pusha
and
enter
jl
xchg
cmp
jl
push
pop
xchg
je
xor
loope
enter
imul
pop
xor
push
inc
sub
dec
push
jg
jp
dec
pop
dec
std
test
sbb
adc
daa
fnstsw
fucom
aaa
adc
sar
push
inc
test
insb
sarl
mov
mov
pop
inc
stos
mov
popa
mov
dec
test
into
and
scas
adc
imul
inc
in
sbb
mov
push
pop
int3
popa
and
mov
adcb
scas
pop
scas
sahf
cwtl
std
ror
inc
sbb
mov
mov
add
adc
stos
lods
adc
scas
xchg
add
pop
arpl
jle
inc
loop
cmpsb
lock
jns
repnz
push
jo
push
inc
push
sub
and
faddl
push
xchg
dec
xchg
arpl
add
fistpl
mov
or
cmp
lods
push
orb
pop
jmp
fstpl
je
fucomp
out
loopne
cld
sti
mov
mov
dec
das
fdivs
mov
test
mov
sub
dec
inc
gs
mov
out
or
cs
stos
out
test
push
jnp
repz
sti
push
out
mov
out
pop
hlt
std
dec
inc
daa
adc
mov
jbe
pusha
push
cmp
leave
call
xor
shr
push
mov
mov
gs
adc
lods
push
aad
dec
out
hlt
je
xor
adc
in
jns
in
xor
dec
cli
pop
sub
lahf
pop
mov
lea
cld
fcoml
rcrl
jmp
imul
mov
iret
sbb
cmp
sbb
cmp
xlat
mov
in
insl
jo
je
scas
adc
inc
push
mov
loop
fadds
jp
add
iret
ds
mov
dec
mov
xor
xor
push
pop
pop
mov
mov
mov
out
dec
add
push
push
mov
icebp
push
movsl
push
dec
cmp
pop
push
mov
cmp
in
out
imul
mov
outsl
sahf
aad
lods
insl
jle
je
adc
and
and
mov
test
ret
mov
repnz
xor
pusha
mov
xchg
jge
jns
jbe
out
sti
pop
mov
aam
dec
std
mov
rcrb
enter
iret
outsb
pop
sub
jle
fidivrs
mov
push
mov
add
nop
loopne
pop
sub
push
outsb
jo
mov
and
jns
dec
cmp
mov
fdiv
inc
das
mov
leave
pop
aam
scas
mov
xlat
addr16
sub
mov
imul
push
jae
repz
into
insb
mov
push
fldcw
xchg
and
jg
mov
filds
add
mov
pop
pop
mov
fsubrs
jg
shl
jp
call
pop
xchg
ret
cmpsb
xlat
xor
test
mov
mov
popa
xchg
pop
rcrb
xorl
popl
mov
sub
movsl
dec
punpckhbw
arpl
dec
orl
insl
pushf
negb
std
dec
cltd
shlb
sbb
mov
add
popf
mov
jne
xlat
mull
lods
add
testb
and
sbb
pop
push
jl
aam
ja
scas
adc
mov
jae
hlt
xor
mov
sub
push
pop
test
lret
mov
jns
push
mov
js
pop
xchg
pop
jecxz
xor
into
cld
outsb
inc
fprem
mov
and
jmp
arpl
into
sbb
sbbl
lcall
adc
sar
fistpll
or
or
sbb
adc
xchg
fstpt
cmp
or
push
inc
push
mov
repnz
in
jnp
imul
cmp
lret
sub
mov
xchg
mov
leave
xchg
jae
cmpsl
mov
mov
and
inc
inc
or
sub
push
lret
fcoml
addl
or
int
add
sub
jae
cli
lahf
adc
jns
jbe
mov
sbb
imul
add
mov
mov
xchg
mov
lock
mov
lock
add
push
and
mov
jnp
sbb
lods
iret
mov
neg
aad
popa
sub
dec
pop
jmp
out
mov
pop
dec
dec
and
jmp
movl
or
cmp
arpl
adc
out
repnz
add
movsb
pcmpgtd
scas
xor
push
xor
xchg
sbb
dec
test
xchg
ja
in
dec
mov
mov
dec
push
movsl
mov
push
push
cmpsb
inc
mov
dec
pop
jle
ret
mov
fcomp
or
and
adc
fwait
add
sub
fstpl
pop
sbb
ljmp
mov
stc
into
jbe
stos
mov
mov
add
lret
stc
cmc
push
sbb
jg
sub
sub
xor
sbb
pop
xor
sbb
neg
mov
addr16
and
mov
xor
jl
nop
push
xor
xchg
jb
push
stos
jne,pn
imul
popf
xchg
mov
mov
or
outsl
pusha
flds
repnz
jle
xchg
lcall
jecxz
out
push
jmp
fnstcw
mov
idiv
xchg
xor
push
or
cmpsb
jg
dec
enter
push
in
pop
inc
out
pop
mov
jae
cmc
mov
aam
mov
pop
push
imul
mov
inc
imul
cmp
nop
sbb
aaa
dec
or
cmp
fcoms
add
stos
lods
and
pmulhw
add
es
out
je
data16
mov
inc
xchg
mov
out
dec
cmpsl
pop
shrb
sbb
jno
add
mov
cltd
mov
jl
aaa
lods
je
es
bound
fs
sub
aad
insb
imul
into
rorl
sbb
pusha
jg
mov
or
enter
dec
adc
leave
das
and
ret
adc
les
pop
imul
sbbl
popa
rcrl
add
nop
mov
cmpsb
xor
jl
test
adc
sbb
push
add
jecxz
pushf
push
lahf
scas
leave
sahf
lock
jne
aad
cmp
fsts
push
lcall
aam
and
loope
out
pop
outsb
imul
mov
sbb
mov
inc
int3
addb
sub
in
sbb
scas
mov
add
cmp
icebp
xor
xchg
fcoml
jno
and
and
jae
dec
cmp
loope
adc
lcall
mov
sub
test
rcr
xorl
push
or
mov
scas
sbbb
inc
xlat
fwait
add
push
and
cmp
mov
add
iret
das
or
in
je
mov
fsubrl
daa
insb
sti
test
outsl
std
negl
mov
push
push
pop
jmp
or
shlb
push
sub
pop
pop
mov
out
scas
insl
int
pop
into
jp
fists
jmp
mov
cmp
loopne
mov
mov
sub
lahf
push
or
popf
cld
inc
lret
pop
pop
in
rol
inc
mov
mov
mov
sbb
flds
jg
loop
je
cmp
dec
in
fwait
pop
inc
je
sbb
sub
int
js
sub
push
outsl
cmp
rcrb
or
call
andb
pop
lds
xchg
enter
add
inc
dec
out
movsb
std
adc
repz
insl
push
adc
pushf
movsb
or
inc
loop
mov
and
fists
ret
adc
add
es
pop
sbb
lret
inc
cwtl
cld
fistpll
lock
adc
adc
jecxz
repnz
fdivrl
idivl
jb
xchg
push
sahf
inc
fidivl
cltd
adc
cmp
xor
sub
outsl
daa
sub
ds
mov
add
loopne
fisubs
std
xchg
lods
into
push
cmp
out
int
and
sbb
mov
rcrb
pop
or
pop
bound
jg
xchg
add
jnp
ljmp
ficomps
or
mov
repnz
add
mov
or
and
jnp
sub
ja
out
loope
gs
jmp
mov
pushf
fbstp
xchg
or
pop
mov
in
adc
cmp
and
lods
mov
jno
inc
push
call
inc
iret
push
negb
inc
lea
enter
clc
cs
xor
movsb
cltd
or
pusha
mov
lahf
jp
adc
sub
mov
or
xor
pusha
jle
pusha
dec
cmpsb
or
ror
mov
mov
pop
jle
shl
inc
adc
mov
inc
xchg
xchg
pop
dec
loopne
popf
adc
and
out
ret
rcrb
lret
xlat
es
push
pop
cmp
fdivl
ds
ljmp
in
insl
jmp
xchg
add
movb
fnstcw
movsb
stos
mov
fnsave
repz
iret
out
fdivrs
adc
jle
mov
inc
sahf
lcall
cmp
mov
push
test
sahf
gs
lock
pop
cwtl
and
decl
sub
sbb
aas
jnp
cmpsb
out
bound
xor
test
addr16
sar
mov
test
ss
mov
xor
xor
xorl
add
loopne
ss
jl
sbb
stos
inc
dec
mov
cmc
pop
cltd
jecxz
out
jge
dec
mov
cmp
int
sub
mov
int3
or
pushf
mov
pusha
mov
rcrl
inc
hlt
push
inc
push
rorb
popf
cmc
and
adc
fildl
es
repnz
scas
cwtl
push
cmc
ret
pop
dec
popf
push
bound
cmp
sbb
and
and
mov
loopne
mov
loopne
push
stos
jp
jno
adc
sbb
scas
scas
push
sub
cmp
jbe
adc
push
stos
lahf
xchg
xor
andb
ret
mov
mov
xlat
aad
jl
adcl
subb
inc
mov
in
xor
jae
repz
sub
add
cli
lret
and
xchg
aaa
frstpm(287
dec
movsb
loopne
scas
fwait
jnp
shrb
jne
rorl
xor
inc
pop
mov
mov
shlb
in
xor
jg
ss
rcrl
jne
fwait
sub
lods
cld
mov
pop
push
mov
aaa
fdivrs
mov
sbb
fstps
push
push
inc
cmp
sub
adc
jge
or
mov
dec
push
and
cmp
push
loop
out
shrb
cmp
movsb
loop
mov
into
add
xor
ljmp
lock
dec
lahf
or
je
sbb
cs
jae
insl
mov
push
mov
test
sub
fdivrl
gs
xlat
shll
scas
jns
xchg
fcmovne
dec
jl
cmp
test
lahf
jnp
or
dec
and
int
push
loopne
dec
stc
ss
jg
add
popf
es
adc
lods
xor
mov
aam
bound
jne
nop
push
jae
push
iret
xlat
xchg
dec
fcomps
adc
cmp
movsl
cli
dec
out
jae
dec
shl
cmp
xchg
rorb
push
mov
out
mov
es
mov
and
sbb
mov
enter
dec
push
pop
rcll
mov
cmc
push
lods
orl
push
mov
cmp
popa
es
xchg
sahf
mov
add
mov
pop
mov
pop
pop
or
cwtl
int3
jp
sti
xchg
push
scas
mov
jb
cmpsl
aad
jmp
jmp
add
cmpsb
clc
les
jne
jne
scas
sti
pop
arpl
jne
aas
jmp
jb
jge
xchg
xor
adc
cmc
jne
sub
cmp
jp
sub
dec
adc
mov
xor
xchg
in
fs
inc
pop
jno
mov
arpl
pop
ret
mov
sbb
mov
lret
in
mov
das
inc
pop
xchg
negl
inc
xor
cld
pop
lock
js
out
mov
scas
in
cmp
movsl
cmp
inc
or
xchg
sbb
stos
pop
in
dec
dec
cli
pop
jb
dec
mov
add
xor
jb
push
cmpb
add
gs
push
inc
les
jecxz
pop
sbb
mov
adc
xchg
rclb
pop
into
jb
mov
loop
pop
pusha
popa
out
push
sbb
enter
add
fiaddl
leave
mov
outsb
cltd
jecxz
rorb
mov
mov
fucomp
inc
dec
fsub
ret
cmpsl
inc
fdivs
cli
push
fistl
xor
in
lcall
sbb
nop
popa
mul
xchg
into
pop
addr16
pop
cmp
into
cltd
leave
add
sbb
mov
divl
dec
out
sub
lods
mov
dec
push
mov
dec
inc
xor
scas
cmp
repz
les
xchg
icebp
xlat
daa
sbb
aaa
pop
inc
xor
pop
cmp
dec
daa
mov
cmp
out
add
aam
repnz
jo
mov
negl
jp
push
fbstp
push
mov
jmp
sbb
xchg
sub
pop
jge
in
xor
in
push
cltd
jle
outsb
pop
push
fcmovb
mov
cmp
push
push
leave
shll
pop
cmp
scas
aaa
decl
mov
mov
mov
mov
jne
jne
xlat
push
rol
test
mov
push
clc
mov
lcall
dec
in
std
je
in
dec
inc
pop
push
subb
test
fwait
pop
jg
push
lcall
cmp
add
lds
into
cmp
mov
in
roll
jge
cmp
out
xorl
inc
cmp
jnp
push
jg
inc
jae
pushf
mov
sbbb
fsts
jae
das
mov
pop
leave
push
push
mov
sub
sub
cmc
dec
pop
cmc
push
fidivrs
fbstp
push
pop
insb
or
cmp
imul
and
fwait
inc
push
lods
mov
fmul
gs
mull
dec
mov
jg
movsl
loop
je
imul
mov
pop
into
mov
iret
sbb
aaa
xchg
ja
and
movmskps
data16
aaa
imul
faddl
adc
add
pop
stos
jmp
inc
adc
sbb
sub
jge
adc
inc
lret
jbe
fnsave
mov
mov
jne
das
push
mov
pop
out
jp
inc
push
mov
mov
pop
call
and
push
aaa
jmp
sbb
and
inc
mov
push
icebp
cmpsl
fistpll
or
bound
dec
sbb
iret
lea
shl
out
sub
push
sti
cmpsl
or
sbb
adc
mov
xchg
and
pop
ret
mov
mov
xchg
fmull
popa
cwtl
mov
imul
and
ret
cwtl
sub
inc
cmpsl
xchg
sub
jns
pushf
cmp
cmp
fimull
mov
lds
cmp
pop
push
or
pop
inc
into
pop
fisubrl
push
pop
fsubr
loope
xchg
ret
adc
xchg
insl
filds
push
mov
outsb
cmp
xor
dec
xorl
shrb
not
lcall
outsb
sbb
outsb
int
push
mov
pop
jno
cwtl
bound
push
dec
mov
dec
scas
mov
or
add
pop
lods
fcomip
mov
insl
and
lret
pop
push
mov
test
add
cld
inc
pusha
pop
mov
mov
gs
jmp
popa
pop
xor
dec
mov
dec
jbe
std
xchg
mov
lcall
out
jle
daa
out
push
fisttpll
mov
addr16
rolb
in
inc
push
push
adc
repz
and
ficomps
addr16
cmp
es
or
xchg
push
leave
clc
mov
movsl
push
mov
scas
leave
sti
push
sbb
sub
repnz
cld
push
icebp
lret
fists
in
or
mov
cmc
loop
add
dec
jecxz
mov
mov
aas
push
ret
fiadds
mov
cmpsl
fistl
dec
inc
cmp
cmc
pop
jle
in
cltd
xchg
jo
and
les
xchg
xchg
ror
xchg
push
cmp
and
in
sub
mov
jp
sti
dec
call
pop
popl
lret
cli
movb
fdiv
test
imul
sub
xor
in
shll
inc
mov
arpl
cmp
out
pop
lret
inc
sbb
movsl
cmp
mov
sub
jecxz
mov
fiaddl
clc
lret
push
jns
andl
ljmp
xlat
scas
cmp
movsb
and
loop
jl
mov
outsb
mov
or
sub
loopne
and
sbb
sub
cmp
dec
dec
fistps
pop
daa
xor
jge
pop
jge
push
aad
mov
js
push
movsl
shrb
sbb
fdiv
push
or
inc
mov
orb
xor
push
imull
sbb
jbe
mov
push
ljmp
shll
xchg
in
outsl
jbe
daa
out
add
mov
push
stos
cmc
jns
loope
mov
pop
test
cs
out
mov
repz
out
or
inc
cmp
add
neg
ja
in
cltd
sub
sarb
push
sbb
xchg
mov
aas
daa
inc
adc
psllw
push
push
or
mov
push
cmp
aad
cmp
xor
ljmp
or
inc
sub
stc
adc
pop
inc
mov
or
mov
adc
mov
cltd
pop
jle
sub
jne
out
cmp
ljmp
sti
and
inc
sub
pop
in
inc
dec
xchg
adc
out
sbb
or
jnp
mov
xchg
out
stc
mov
add
lahf
mov
lcall
pop
lret
loope
mov
in
jno
mov
outsl
cld
cmpsb
or
mov
xchg
xlat
scas
mov
pop
stos
jo
xchg
test
imul
aad
ja
ljmp
sahf
out
pop
sub
and
mov
fs
push
xchg
in
leave
mov
neg
inc
mov
lods
insl
adc
lahf
add
cli
sbb
inc
repz
ja
sbb
pop
icebp
test
and
cmp
fbstp
and
and
std
jp
icebp
insb
ja
pop
push
sub
ds
push
stos
jbe
push
ljmp
into
push
adc
je
into
inc
fmul
popf
xchg
pop
sbb
sbb
cld
std
jo
adc
cmpsb
sti
int3
cmp
mov
cwtl
int
scas
js
cmp
mov
pop
xchg
aas
xor
adc
stc
icebp
mov
rcr
dec
lcall
cltd
stos
xor
sub
mov
leave
es
arpl
xor
xchg
lret
adc
divl
jno
je
adc
out
mov
sahf
ljmp
mov
enter
xchg
dec
mov
jp
lds
pop
outsl
push
cmp
and
dec
ret
imul
and
mov
mov
fsubrp
lods
dec
bound
jmp
xor
mov
or
inc
bound
int
push
xchg
repz
ss
mov
ljmp
mov
xor
repnz
movsl
xchg
testb
movsl
xchg
addb
lret
lods
das
inc
push
call
dec
lea
mov
mov
lahf
cmp
daa
loope
in
push
scas
nop
ret
aam
outsl
push
iret
test
adc
test
and
sub
popa
clc
das
and
push
sbb
and
dec
jbe
cmc
or
rcr
push
gs
mov
stos
mov
xchg
lds
cmpsb
sbb
leave
cmp
mov
add
cs
lret
xor
test
leave
add
jg
mov
enter
mov
stos
mov
fs
out
pushf
lahf
lods
mov
call
xchg
cld
or
cli
jg
mov
inc
adcl
test
sub
cmp
inc
lret
mov
rcrb
push
jae
xchg
sub
bound
sahf
jbe
push
mov
lahf
shl
pop
sub
jno
ja
cli
push
xchg
jecxz
addr16
sub
int
into
loope
push
pop
fisttps
insl
fmuls
push
sbb
add
and
mov
jae
mov
add
sarb
inc
mov
cmp
lods
sbbl
mov
jmp
dec
hlt
mov
xor
push
loope
xchg
jne
out
and
decl
add
sub
cmpsb
rcr
ret
pop
inc
mov
adc
lea
jo
lahf
xor
mov
jp
sub
xlat
stos
pop
adc
sub
lock
es
push
mov
xchg
aaa
popf
dec
xor
xor
xchg
sub
push
adc
outsb
push
sbb
pop
out
jmp
into
cmpsl
adc
and
fcoml
inc
or
xor
lock
repz
mov
pop
fwait
push
mov
pushf
das
adc
jo
popa
sbb
dec
push
scas
mov
cmpsb
clc
inc
imull
popa
xor
out
jae
ja
adc
sub
mov
fldcw
data16
add
js
out
jne,pt
push
mov
cwtl
mov
jp
push
push
and
xchg
hlt
bt
addr16
loop
movsb
js
jb
rolb
mov
scas
mov
stos
xchg
sub
mov
pop
lods
jnp
loopne
enter
mov
sbb
jb
push
in
out
pop
lret
imul
popa
sahf
icebp
icebp
mov
enter
sub
mov
icebp
ds
push
iret
rcll
sub
mov
jne
out
sbb
push
jbe
dec
sub
bound
pop
loope
add
mov
mov
pop
decl
leave
aad
adc
xor
mov
push
rcrl
jl
int3
mov
stc
inc
xchg
jae
push
push
cmpsl
imul
mov
movsb
shrb
jmp
sbb
insl
or
sti
add
add
es
mov
mov
sbb
mov
ret
js
xchg
call
mov
iret
je
xor
mov
cltd
call
fildll
push
jbe
pop
in
jle
and
jns
ljmp
int3
fisubl
cmp
add
and
add
ret
daa
lock
xchg
faddl
sbb
popf
fstpl
cmp
ficomps
mov
adc
je
outsl
jnp
push
push
xchg
mov
push
cld
adc
and
stc
pop
mov
ret
iret
mov
or
sub
lret
pop
pushf
in
sbb
ja
bound
insb
or
sub
xchg
lds
jne
jg
xchg
mov
fcmovu
jle
xchg
dec
daa
xlat
mov
mov
add
dec
inc
divl
sub
xor
sub
fsts
lods
sub
dec
pop
inc
sbb
les
repnz
adc
pop
incl
sub
mov
sti
mov
movsb
push
adc
sub
push
loope
lret
subl
mov
leave
paddq
push
jecxz
and
sub
pop
add
jmp
inc
out
stos
mov
les
fiadds
test
call
cmp
mov
push
sub
sub
and
fldz
mov
adc
xchg
xor
inc
pop
insb
test
xchg
xchg
xor
paddq
imul
mull
mov
inc
xchg
movsb
fldenv
add
jne
pop
pusha
int3
push
hlt
in
iret
pop
mov
or
push
das
add
icebp
mov
mov
fcoml
das
out
pop
es
fimull
ret
xchg
xchg
gs
scas
xchg
xor
std
rcll
mov
imul
dec
xchg
fstpt
jecxz
fcoms
in
shrl
sbb
cmp
loopne
lods
lret
xor
and
mov
repz
adcl
cmp
jecxz
stos
cmc
and
and
aam
add
and
mov
fnsave
mov
or
dec
sti
mov
lcall
aaa
xorl
mov
adc
cmpl
dec
cmpsb
ja
inc
push
lock
test
add
in
repz
xorl
mov
adc
pop
inc
cmpsl
push
scas
or
scas
pop
xchg
adcl
sbbl
jle
cltd
std
inc
add
dec
nop
pop
cld
dec
test
stos
ret
faddp
xchg
sbb
js
lods
movsl
cmp
shll
cli
fsts
sub
fnstenv
subl
ja
dec
jle
inc
push
popl
gs
or
loope
inc
cmpsb
sub
jo
jecxz
add
mov
dec
lret
jno
cmp
ret
sbb
mov
das
loopne
or
cld
cmc
jecxz
mov
sahf
sub
jb
ljmp
int
leave
lret
push
mov
cmp
ffree
out
repz
mov
ljmp
inc
jl
fbstp
call
xchg
gs
mov
pop
sbb
mov
stos
dec
jp
jg
push
outsl
cld
es
div
andl
stc
sub
hlt
sahf
int
sarl
dec
mov
fnsave
dec
xor
jbe
idivl
or
cmp
dec
mov
jbe
xchg
js
pusha
or
cmp
inc
adc
pop
xchg
mov
mov
jo
jecxz
pop
pop
adc
sbb
sub
xchg
outsl
fimull
push
jl
mov
pop
movsl
mov
popf
pop
in
xor
out
sahf
inc
popa
mov
push
jmp
pop
push
scas
lods
xchg
dec
loop
out
xor
shll
mov
mov
leave
xlat
jae
stc
arpl
adc
dec
cmp
outsl
xchg
add
sub
add
test
and
insl
scas
sub
add
add
cmpl
adc
sahf
add
jle
dec
imul
push
dec
addb
or
sbb
mov
aad
push
mov
aad
iret
xchg
xor
mov
and
cld
test
imul
fadd
inc
int3
jle
pop
cmp
cs
data16
add
mov
jmp
mov
or
inc
xlat
add
imul
shll
mov
lret
ret
adc
ja
fistps
jne
or
mov
lods
inc
cmp
adc
jle
lods
out
clc
xlat
subl
test
popf
sub
xchg
push
iret
sub
fcmovbe
test
inc
outsl
pop
or
scas
push
out
inc
jbe
xor
adc
push
rcl
jge
leave
mov
pop
lret
cmc
cmp
cmp
loopne
movl
xor
mov
fwait
jae
pop
fmul
mov
in
nop
lahf
push
roll
or
push
lret
jo
popa
mov
pusha
mov
mov
pop
fists
stos
sub
or
sbb
leave
cltd
xchg
adc
dec
and
xchg
dec
fwait
arpl
int3
mov
mov
inc
sub
mov
mov
nop
inc
popf
xchg
pop
inc
repnz
adc
test
fs
movsl
adc
cmp
cmp
jbe
fwait
cmp
int3
sub
test
aaa
jne
inc
pop
mul
xor
cmp
cmp
lock
movsl
push
cmpsb
paddusw
gs
xchg
stos
sarb
stos
aas
xchg
mov
inc
notb
loopne
mov
sub
pop
or
imul
jmp
xchg
or
inc
mov
pop
push
mov
aaa
das
dec
nop
fsubr
mov
jl
cmpsb
and
cmp
cltd
pop
sti
lret
shll
push
fistl
mov
and
dec
loope
mov
xchg
fistl
jnp
sbb
and
add
and
pop
push
in
rclb
adc
add
aaa
mov
push
push
aad
pop
jmp
aam
inc
icebp
out
pop
push
cmpsb
bound
popf
mov
xor
fiaddl
leave
dec
push
loope
add
cmp
inc
add
les
and
mov
outsl
mov
lcall
mov
add
push
xchg
lahf
dec
xor
ja
push
mov
pop
add
add
jb
sbb
ja
jae
fsubs
cmp
cli
sbb
mov
jp
xlat
pop
fadds
shrb
and
shr
pop
mov
lcall
mov
mov
daa
or
dec
aam
in
ljmp
aas
test
mov
aam
es
sub
pop
dec
imul
shlb
push
shlb
dec
or
add
xchg
loopne
xor
cmpsb
outsl
stos
and
je
iret
ret
mov
xor
dec
inc
out
or
ja
in
cld
push
xor
lods
add
push
sbb
sahf
xchg
push
adc
out
dec
sbb
pop
jle
loope
leave
cltd
inc
inc
xchg
adc
jecxz
aaa
pop
pusha
sbb
cld
fstpt
xor
arpl
testl
cmpsb
add
xor
aad
cltd
imulb
cmp
add
sub
js
cmp
and
or
pop
call
adc
lds
mov
fstl
mov
incb
adc
cmp
or
arpl
test
stos
stos
inc
divl
jl
xchg
mov
and
or
shlb
pop
push
jno
cmp
fmull
sbb
mov
fucomi
cmpsl
inc
xchg
sub
lock
xor
lret
adc
adc
or
adc
dec
xchg
lcall
jmp
call
test
jmp
xor
jno
call
into
adc
in
out
loop
insl
and
sub
or
mov
sub
pop
arpl
icebp
scas
inc
imul
jecxz
push
imul
int3
popf
aas
inc
cwtl
jno
pop
out
mov
add
nop
gs
imul
cmc
movsb
xchg
sbb
mov
cli
icebp
cmp
add
pop
lea
jle
pop
cwtl
popa
leave
inc
insl
loop
xlat
imull
idivl
out
jg
popf
xchg
loopne
fmull
mov
push
dec
mov
adc
pop
cmc
lods
dec
pop
mov
mov
pop
gs
and
xor
loop
mov
adc
or
jmp
rcr
jns
out
popf
xlat
pop
pop
inc
cwtl
sarb
repz
mov
dec
dec
push
int3
jo
xchg
jno
inc
stc
push
fildll
or
jmp
mov
stos
clc
lea
cmpb
push
sub
xchg
mov
lods
and
ret
into
outsl
into
xor
sbb
ret
std
push
jg
or
ds
jno
clc
out
orb
int
push
jno
add
inc
add
add
jg
xchg
add
loopne
iret
mov
sti
push
testl
cltd
mov
ljmp
pushf
push
ret
enter
mov
xor
xchg
pushl
jbe
int3
jmp
push
std
adc
cmp
test
push
dec
std
jnp
stos
xor
mov
loopne
xchg
or
mov
lahf
nop
dec
fs
and
idivb
and
push
add
sbb
subps
xchg
pop
aaa
or
rcll
mov
and
pop
inc
movsb
mov
cmp
fcmovu
insb
jns
push
jo,pt
sar
les
out
mov
bound
cmp
xor
test
mov
dec
icebp
cltd
stos
sar
adc
gs
push
out
mov
ficomps
fdivrl
push
pop
push
bound
adc
scas
sbb
gs
pushl
add
orb
icebp
fcomip
fstpl
cmp
jmp
sub
pop
add
jp
shl
lret
fdivp
dec
mov
enter
rolb
int3
gs
stos
call
lcall
push
inc
lret
mov
shrb
xor
cmp
clc
mov
inc
popa
test
addr16
mov
inc
popf
mov
xchg
add
lods
or
xor
leave
pop
push
fdivrs
sbb
add
movl
insl
and
addr16
cmp
out
mov
jecxz
lods
movsl
repnz
dec
arpl
cmp
ljmp
mov
sub
int
es
popa
popf
sub
addb
sahf
xchg
fidivrs
adc
mov
dec
orb
adc
adc
roll
and
jb
xor
shr
out
dec
xchg
mov
push
sub
xchg
fnstcw
int3
pop
cmp
adc
outsb
fwait
xchg
pop
imul
mov
jns
and
dec
aaa
xor
push
cmp
push
jbe
and
sti
bound
sbb
xchg
lret
cs
cmp
insb
js
jb
xor
shll
inc
cmp
popf
pop
dec
stos
insl
pushf
ficomps
inc
jbe
mov
push
xchg
fidivl
lahf
bound
add
push
test
sbb
and
enter
out
pop
sbb
pusha
mov
xor
pusha
add
push
sub
gs
leave
addb
movsb
xor
mov
xchg
dec
mov
mov
sub
les
add
add
sub
mov
repz
xor
imul
jge
cmp
and
jae
sbb
movsl
pop
das
sbb
int
mov
jle
leave
dec
pop
mov
jbe
cmp
iret
sbb
add
add
push
jns
test
test
adc
adc
fisubrs
stos
push
push
sub
inc
scas
cmp
or
mov
jne
cltd
jbe
jmp
fldcw
fdivs
dec
cmp
inc
fldenv
xchg
sub
scas
adc
leave
pop
mov
test
aam
std
jbe
lods
in
and
mov
dec
lds
sti
or
cltd
jnp
fdivs
cs
lcall
xchg
stc
fst
call
cmp
jmp
repnz
sbb
cmp
outsb
or
and
jge
aam
mov
or
sub
cli
pop
add
and
test
push
int3
jnp
arpl
mov
out
daa
mov
lcall
mov
xchg
inc
notl
shrb
shlb
shlb
inc
jmp
mov
insl
incb
cmc
jg
iret
or
jnp
pop
decb
lahf
pop
mov
dec
pusha
int3
gs
pop
sbb
sbb
inc
test
jge
insl
daa
pop
jno
stos
xchg
pop
jno
and
out
sbb
popf
xor
fs
mov
sahf
inc
add
shll
xorb
sub
pop
ror
push
push
rcll
cmp
xchg
xchg
jge
call
adc
push
inc
sahf
ffree
sub
ja
dec
es
mov
dec
sub
xor
adc
cwtl
dec
mov
adc
adc
dec
inc
push
pusha
or
add
mov
in
jno
popa
lcall
adc
lods
cmp
sub
rcl
popf
dec
adcb
outsb
inc
inc
cmp
je
cmpsl
stos
mov
pop
addr16
dec
mov
aas
or
fsubl
push
mov
rcl
sti
les
add
jle
cmc
outsl
lods
rcr
jno
stos
call
shr
cmpsl
xor
ficompl
and
insl
dec
das
daa
int3
jge
pop
fidivrl
loope
lock
jge
push
mov
push
addr16
sahf
incb
cmp
sub
ret
pop
dec
shll
pop
jp
fcmove
cli
mov
push
or
push
dec
dec
aad
pop
mov
scas
js
enter
and
push
cli
mov
lahf
xor
dec
jp
fstps
imul
dec
pop
in
or
je
in
pop
cmp
mov
mov
dec
push
push
cmpb
xor
push
in
out
test
pop
sbb
fiadds
mov
inc
push
sub
scas
adc
loopne
lods
out
dec
jp
adc
pop
and
shrl
cmp
mov
sarl
mov
mov
jp
scas
sbb
stc
rcr
push
add
dec
fsts
lahf
and
test
add
pushf
repnz
punpckhwd
mov
pop
sbb
adc
enter
test
pop
movb
adc
mov
insb
cld
xchg
mov
xor
sbb
pusha
add
subb
mov
inc
int
stos
xchg
dec
add
mov
jb
hlt
outsl
ds
clc
rep
jmp
cmp
ror
xor
mov
es
push
sbbl
xchg
ret
jle
jo
pop
or
imul
mov
push
xor
cmp
adc
mov
pusha
push
jmp
xorb
les
in
push
pop
test
stc
jecxz
mov
lret
ljmp
test
mov
add
cmc
les
jge
add
lods
inc
hlt
dec
xchg
inc
call
xchg
shrb
aam
les
mov
mov
test
adc
sbb
and
cmp
js
xchg
mov
inc
or
cmc
je
jp
sub
in
push
inc
test
xchg
mov
sti
sub
imul
cmp
loopne
gs
adc
mov
lods
pop
repnz
mov
pusha
push
idivl
lahf
mov
sbb
outsl
int
jmp
ljmp
jmp
jl
into
xchg
scas
adc
fdiv
es
testb
outsl
out
push
push
sbb
pop
imul
aad
aam
out
mov
out
movb
sarb
cmp
adc
jl
jecxz
mov
enter
lahf
es
ds
xlat
jp
stos
mov
jg
nop
push
test
in
fistl
cli
and
xchg
add
or
stos
cmp
ret
dec
icebp
js
fnstsw
xchg
mov
mov
dec
mov
arpl
jmp
mov
les
xchg
jns
add
jbe
ja
jbe
mov
rorl
pop
cmpsb
xlat
mov
fidivrs
cmp
fidivs
mov
mov
in
pop
fwait
movsl
jmp
bound
aaa
es
leave
lret
ss
jb
les
ret
loop
mov
cmp
add
lret
cmp
pop
lock
xchg
cltd
fs
popf
mov
sarl
sbb
hlt
push
mov
sbb
jg
mov
push
jmp
jne
lock
or
out
jns
dec
push
scas
xchg
int
test
mov
push
addr16
stos
nop
pop
inc
xchg
or
movsb
idivl
inc
mov
cwtl
fwait
xor
or
inc
xor
sarb
cmp
or
insb
fisubrs
lock
dec
sbb
cmp
jp
xor
mov
js
jb
jnp
or
mov
popf
mov
sub
hlt
inc
sbb
stos
or
rcll
and
cmp
ds
sub
push
mov
cmpsl
fmul
dec
imul
sbb
sbb
xchg
sub
jno
mov
stos
orb
jge
add
mull
cmc
add
xor
gs
mov
fldt
push
xchg
repnz
mov
pop
pusha
sub
mov
ret
lods
shlb
and
jle
imul
xchg
loop
lds
mov
js
cmp
sbb
dec
repnz
adc
xchg
and
test
mov
inc
xlat
inc
add
xor
jle
popa
dec
xchg
ds
pop
inc
jge
mov
sbb
push
mov
int
je
popf
jecxz
js
jnp
stos
xchg
xor
rcrb
cld
push
ljmp
adc
pop
pop
jecxz
adc
sbb
jb
mov
ljmp
mov
ficoms
sub
jbe
imull
lcall
adc
jle
lret
imul
pop
daa
loop
mov
mov
pop
mov
jno
or
cmp
adcl
xor
stos
push
inc
xor
pop
sahf
mov
fwait
rcll
sub
sub
dec
cmp
inc
mov
mov
mov
mov
sbb
jnp
mov
jo
movsl
mov
mov
sbb
daa
ret
push
inc
mov
sbb
cmp
jmp
inc
out
xor
sbb
jae
adc
movsl
or
mov
xchg
cmpsl
cs
push
add
jo
scas
popl
push
stc
xor
loop
in
cmc
add
inc
lds
call
les
orb
imul
sbb
loopne
jbe
sbb
fisttpll
test
iret
push
lock
mov
pop
clc
sarb
in
xor
push
mov
cmp
into
in
cmp
and
xchg
push
cs
pop
dec
pop
jle
pop
hlt
or
sub
push
scas
dec
ds
into
dec
push
cmc
add
in
gs
cmp
and
subb
jp
jbe
add
adc
mov
loop
push
outsl
lret
mov
ret
xchg
xchg
js
xor
gs
jp
cmp
jne
sub
js
imul
pop
xorl
pop
inc
xor
inc
dec
clc
lcall
cmp
and
testb
ss
and
imul
mov
je
pop
adc
push
addl
lahf
sub
or
add
daa
inc
outsl
repnz
lods
gs
pop
test
sub
mov
lret
jns
cmp
mov
sub
pop
and
add
loop
mov
adc
shrb
push
callw
scas
enter
fadds
dec
data16
and
mov
push
adc
push
dec
pop
mov
cmp
push
add
dec
fisubrl
dec
dec
sbb
mov
sbb
mov
fs
dec
mov
es
sbb
jno
ds
and
and
shr
fsts
inc
mov
ss
rcl
aad
getsec
lods
push
xlat
xchg
pop
shll
scas
sahf
mov
and
scas
js
test
cmp
rcrl
adcl
mov
shlb
push
in
pop
shrb
xchg
out
clc
xor
int
adc
push
test
bound
push
add
cld
ret
lret
hlt
and
rcrb
loop
dec
xor
sbb
fimull
imul
mov
dec
in
addr16
pop
sarb
push
faddl
stc
inc
or
and
jle
cld
push
sub
iret
lds
xchg
shlb
fcmovb
mov
xor
icebp
and
test
xor
nop
mov
mov
in
xchg
int
fisubrl
push
or
cmp
arpl
hlt
mov
leave
dec
ret
lock
push
mov
jp
test
pop
jge
cli
daa
push
push
pop
loope
xchg
inc
dec
jne
inc
mov
cmc
test
pop
dec
push
and
adc
xchg
stc
shll
ficoml
mov
dec
repz
js
sub
loope
mov
popa
push
xchg
dec
imul
in
inc
adc
push
scas
xchg
xchg
jno
dec
cmc
sbb
loop
pop
je
jnp
out
mov
out
pop
pop
icebp
mov
jo
and
mov
outsb
push
add
int3
pop
cmp
or
mov
rcl
sub
addr16
repz
aad
inc
inc
popa
mov
mov
adc
lock
and
add
mov
or
imul
test
push
xor
pop
test
fistpll
push
std
xchg
lods
and
movsb
and
sbb
sbb
insb
jnp
jns
mov
insb
rol
mov
int3
out
pop
fistpll
xchg
xlat
jb
mov
cld
cli
loope
dec
inc
jge
mov
cmp
cltd
adc
mov
xchg
test
mov
fimull
pop
xchg
es
push
adc
pop
cmp
xor
and
imul
inc
pop
push
je
pop
pop
insl
push
push
icebp
mov
adc
jmp
mov
jns
mov
add
lret
mov
aam
xlat
adc
lods
ja
je
lret
call
cmpsb
mov
loope
int
notl
lds
lds
in
lcall
imul
push
sub
mov
pop
lret
or
faddl
or
repnz
in
loope
sarb
sub
fwait
mov
out
test
cld
xchg
mov
shl
add
add
cli
into
inc
push
test
repz
push
call
insb
pop
mov
push
mov
dec
cmp
and
stc
push
jnp
mov
cmp
mov
out
inc
add
cmp
or
cmp
mov
or
jle
fistps
mov
insb
cwtl
mov
cmpsl
xlat
and
inc
ss
ret
ljmp
sbb
cmp
xchg
jp
sbb
repnz
inc
test
test
stos
xchg
inc
jns
push
xchg
int3
or
lea
or
or
les
adc
stc
test
out
or
out
out
adc
pop
dec
sub
jg
leave
dec
lret
inc
mov
loopne
std
js
in
add
jg
mov
jmp
into
negl
adc
jne
dec
ficoms
xor
out
arpl
dec
dec
jns
pop
pushf
scas
movsb
jbe
and
sub
add
mov
xchg
sbb
call
sbb
mov
jmp
ja
shl
lods
mov
or
and
pop
pushf
adc
movsl
cli
dec
cmp
ljmp
test
dec
test
adc
push
cmpsb
clc
mov
mov
loope
push
mov
out
nop
arpl
in
inc
sbb
jg
rcrb
inc
out
lahf
jmp
xor
fists
daa
test
pop
call
mov
inc
sub
outsb
cmp
inc
push
xchg
aaa
sub
or
and
je
sub
ficoml
inc
in
out
sbb
adc
ljmp
fcomip
pusha
lock
pop
mov
push
adc
xchg
dec
sub
in
imul
mov
pop
das
fildll
out
cmp
mov
lret
cmc
push
rorl
jns
pop
xlat
mov
stos
pop
out
aam
jno
pop
psubusb
push
xchg
xchg
sub
or
out
add
or
push
enter
fmull
add
cmp
inc
repnz
divb
shlb
scas
sahf
jnp
aad
xor
mov
mov
scas
sub
fs
adc
negb
and
sbb
adc
cld
add
xor
mov
rorb
or
xchg
mov
jns
cld
leave
push
js
jp
add
pop
adc
testl
mov
push
sub
in
mov
lcall
add
sbb
or
mov
pop
inc
dec
xor
loopne
and
or
cmp
and
cmp
fiaddl
in
dec
push
xlat
ljmp
mov
out
mov
leave
jne
int3
lahf
addr16
loopne
in
adc
or
fstps
test
inc
mov
rcll
repnz
lock
xor
jae
push
data16
jno
ljmp
loopne
and
cld
sbb
mov
rcrb
and
add
std
pop
mov
mov
xor
mov
mov
inc
sbb
push
lea
mov
in
push
in
dec
aam
pop
rorl
movsl
aam
dec
xchg
ret
sub
xor
je
fisubrs
and
jbe
jmp
loopne
daa
cmpb
rclb
loop
fstpl
cmc
mov
and
pop
ja
dec
loope
push
adc
into
mov
in
jno
lock
jmp
or
mov
imul
lock
pop
xor
pop
sub
xchg
add
pop
mov
cmp
jmp
inc
cld
inc
adc
cmp
hlt
adc
or
pushf
and
pop
cmp
mov
sub
push
out
adcb
es
shlb
adc
adc
dec
subb
in
dec
adc
push
jle
and
mov
pop
arpl
dec
mov
aad
std
ss
sbb
repnz
addr16
jl
gs
inc
push
shrl
rcrb
aaa
stos
imul
in
sbb
inc
sbb
inc
outsb
icebp
lds
sbb
pop
enter
adc
push
push
iret
or
mov
jmp
push
dec
pop
xchg
cmp
cmp
cmp
add
sub
xor
stos
fsubs
nop
cwtl
mov
ret
push
mov
mov
arpl
mov
in
and
data16
sbb
les
pushf
add
sub
imul
sub
mov
lds
dec
in
jmp
cmp
repz
mul
daa
mov
fldt
lds
lods
inc
jo
ret
icebp
lea
mov
xchg
xor
mov
mov
negb
xchg
mov
sti
stos
loope
pop
cli
stos
stos
pop
mov
imul
sub
add
pop
jmp
dec
push
mov
inc
outsb
popa
imul
ja
sbb
sbb
add
std
add
cmp
scas
sbb
push
jbe
loope
push
xchg
mov
push
push
je
dec
cli
adc
inc
notl
hlt
fdivp
inc
lcall
cmpsb
mov
rolb
imull
fwait
and
push
arpl
push
ret
mov
les
pusha
rcr
or
push
out
cmp
sarb
cltd
insl
jmp
jns
mov
lods
imul
xchg
add
in
mov
loop
imul
fdivl
stos
hlt
imul
and
sbb
clc
jg,pn
mov
test
mov
add
int3
bound
or
in
stc
dec
inc
stc
xchg
pop
cmc
inc
fidivl
in
dec
sbbb
cmp
fstenv
jb
and
push
scas
jnp
xchg
xor
aad
jg
mov
sahf
jo
add
xchg
xor
sub
cld
es
fwait
cmp
push
add
in
loope
and
cmp
sub
mov
or
imul
lods
imul
sbb
ffreep
in
and
mov
jecxz
lods
subb
cld
and
comiss
pop
adc
mov
cmp
gs
mov
sub
push
mov
lods
xor
leave
mov
xchg
xchg
mov
jl
inc
mov
adc
pop
roll
or
mov
fadds
hlt
sub
ret
mov
sarb
cs
stos
fdiv
rorl
ficoms
clc
add
xchg
mov
out
inc
mov
mov
push
and
das
dec
fnstenv
xor
into
jbe
fs
fldl
xlat
sbb
dec
sbb
out
shll
ljmp
mov
push
jmp
push
mov
fidivs
adc
dec
sub
je
mov
mov
outsl
daa
inc
lock
pop
movsl
jno
lret
mov
int3
and
jmp
lods
or
cli
jecxz
notl
nop
adcl
xchg
aad
movsb
xchg
pop
out
dec
jne
pop
push
jb
pop
xor
pushf
ret
fisubrs
sub
add
mov
movsl
mov
mov
lret
jae
mov
fnstcw
jnp
loope
data16
leave
pusha
dec
loope
aas
sub
or
fidivs
and
testl
repz
xor
and
mov
dec
repz
pop
rorb
jmp
jge
inc
push
xchg
jno
mov
dec
xor
popf
push
cmp
fdivs
push
sbb
cmpsl
rclb
adc
xlat
jg
es
and
lock
cmpsl
push
jbe
xlat
insl
push
out
rclb
mov
xlat
in
ret
xchg
iret
rolb
xchg
scas
popf
fadd
or
adc
lahf
push
int3
or
test
mov
rorb
aam
icebp
jl
leave
aas
test
mov
mov
inc
out
xor
mov
jo
pop
aas
int
or
cmp
and
subl
or
les
mov
sbb
xchg
adcb
lods
fisubrl
and
in
movsb
ret
xchg
icebp
lds
dec
cmp
addl
test
popf
daa
mov
es
aas
lods
imul
or
lret
enter
divb
cltd
scas
mov
imul
int
hlt
test
ret
dec
inc
mov
in
stos
jns
inc
adc
sti
push
imul
aaa
test
jo
mov
and
jbe
mov
pop
push
or
cmp
cmp
push
add
lock
icebp
and
or
sub
out
pop
xlat
dec
loop
aad
and
out
sbb
aas
jecxz
inc
jno
dec
dec
fdivl
xchg
dec
ljmp
push
ja
or
inc
lods
cmc
adc
mov
iret
lret
dec
xor
xchg
pop
cmpsb
or
cltd
push
into
cmpsl
xor
js
rcrl
dec
dec
mul
dec
adc
in
testl
rorb
bound
scas
mov
sbb
in
int
adc
mov
dec
xchg
in
or
cmp
shlb
cmpsl
lock
pop
jbe
lcall
xor
inc
pop
mov
divb
dec
adcb
rorl
pop
cwtl
out
mov
jo
or
out
out
push
mov
pop
lcall
dec
stos
mov
jae
xchg
cmp
and
and
rcrb
mov
fidivrl
and
cmpl
popa
push
mov
push
stos
push
rcr
sub
xor
and
mov
fdivs
int
push
scas
je
cmp
sahf
pop
jnp
cmpsl
pop
idiv
dec
mov
stc
sti
pop
mov
ss
aaa
pushf
cmpsb
out
pop
pop
dec
sbb
lods
loop
mov
jnp
xor
dec
push
push
xchg
test
cmpsl
leave
jo
and
imul
frstor
in
sub
aad
xorl
inc
pop
cmp
jb
mov
fsqrt
mov
jae
push
out
sub
mov
ret
movsl
fcmovnbe
mov
sub
mov
test
push
and
xor
mov
inc
sbb
xchg
xlat
leave
jp
divb
je
int3
push
leave
ret
add
ljmp
pop
jno
sti
pop
inc
movsb
or
jl
rolb
outsb
das
ficoml
fsubrp
insb
cmpsl
mov
aad
inc
xchg
inc
mov
aas
mov
shll
dec
sbbl
adc
in
jl
mov
cmc
sbb
mov
decb
add
pusha
aaa
mov
fldl
imul
inc
in
sahf
inc
daa
xchg
or
int3
pop
les
fmull
or
xor
mov
cmp
pushf
orb
cmc
jl
mov
jg
cmp
outsl
lea
mov
cmc
pop
inc
xlat
gs
pop
mov
aam
clc
sbb
ret
push
mov
lds
sahf
pop
addr16
mov
xlat
adc
xchg
xchg
mov
sar
dec
outsl
lds
push
cmp
mov
insb
bnd
int3
mov
aam
push
pop
call
stos
push
mov
xchg
sbb
mov
cli
jmp
xor
sbb
out
jbe
cmpsl
inc
lds
add
adc
faddl
cmp
sub
aaa
cmp
cmp
es
mov
cmp
aam
mov
sub
jp
aad
dec
lods
mov
or
dec
lods
repnz
mov
in
stc
in
or
adc
ja
xchg
dec
in
dec
out
lods
push
xchg
insb
pop
clc
aam
xchg
xor
pop
and
fsubrl
repnz
std
imul
push
test
adc
stos
cltd
jae
movsl
popw
inc
fwait
inc
repz
nop
test
in
call
adc
hlt
mov
vpminsw
imul
adc
xchg
sub
xor
in
insb
pop
bound
inc
out
outsb
idivl
or
les
adc
in
icebp
sub
icebp
dec
hlt
mov
jne
inc
outsl
daa
xor
js
dec
pop
ret
popf
out
mov
adc
movsl
mov
xchg
lods
jmp
push
dec
scas
jecxz
push
bound
xor
jle
jns
jp
and
hlt
das
dec
mov
xchg
mov
jle
xor
lock
idivb
les
imul
cs
adc
rclb
cmp
sbb
pop
sub
std
clc
push
in
sti
and
adc
and
lahf
daa
lret
leave
or
cli
jmp
stos
inc
cs
inc
test
add
movsb
adcl
fsubr
arpl
dec
stc
shll
pop
test
push
pop
sub
xlat
add
in
mov
lahf
test
mov
adc
outsb
cwtl
lods
ds
das
push
push
push
xchg
fsubr
ja,pt
sbb
xor
sbb
insw
shr
jb
mull
push
mov
mov
sub
popf
or
xchg
jb
bound
mov
test
and
dec
cmp
dec
out
int3
leave
fld
jb,pn
gs
or
mov
adc
aam
mov
dec
shll
and
shlb
pushf
push
push
and
push
sub
sub
icebp
adc
mov
push
xor
sub
mov
iret
mov
inc
xor
repz
stc
ljmp
fnsave
cmpsl
imul
fidivl
in
mov
loopne
cmp
js
fsts
mov
pop
jge
mov
pop
faddl
dec
mov
gs
mov
xchg
push
mov
je
test
test
xchg
xor
rolb
pop
cltd
push
sbb
nop
adc
cmp
lret
sbb
push
pop
aad
addr16
mov
cmp
push
lods
leave
pop
repnz
or
dec
mov
xchg
lock
shr
dec
mov
ja
cs
xchg
mov
pop
dec
xor
cwtl
icebp
mov
inc
push
cmp
jmp
mov
xor
rcrl
mov
push
sti
jp
aam
sub
lock
xchg
xor
adc
sbb
cmp
icebp
test
jmp
or
add
cmpsl
pop
sbbl
mov
adc
mov
jb
pop
les
fdivs
test
push
cmp
loopne
xor
sahf
or
int3
je
rcrb
gs
xor
pop
xchg
insb
and
loope
fidivrl
sbb
mov
ss
jl
out
xorb
cmp
jle
stc
mov
mov
jmp
jo
mov
and
mov
sub
sbb
adc
push
and
jae
sub
out
stos
push
out
aad
lds
or
rclb
out
sbb
dec
xor
mov
stc
hlt
mov
cmp
leave
xlat
sbb
loope
adc
add
std
jbe
mov
lods
aas
ret
pop
push
jns
jo
or
add
popf
lds
data16
push
andl
cmp
data16
test
lods
ret
xor
loope
lret
mov
and
xor
pop
addl
lea
mov
mov
rorb
pop
mov
ljmp
mov
sti
cmp
cmp
mov
dec
test
test
xor
and
mov
add
xchg
xor
fldt
fwait
popa
test
or
ds
mov
leave
roll
pop
and
mov
shrl
ret
push
stos
shl
or
ror
cwtl
jne
leave
sahf
jmp
mov
cmp
xorb
and
jl
lock
xor
dec
lret
jae
cwtl
jo
sbb
inc
shlb
xor
outsb
icebp
inc
and
fdivrs
ss
pop
fwait
mov
ja
push
dec
mov
or
gs
lods
sub
xor
inc
outsw
jmp
scas
mov
adc
dec
mov
not
adc
stos
adc
pusha
fldt
sbb
lret
aam
sbb
cmpsl
dec
mov
out
sub
sbb
xchg
inc
cmp
sub
testl
fs
mov
push
or
out
push
push
jae
je
xor
jg
inc
add
inc
or
inc
xor
xchg
fwait
repz
aaa
sbb
cmc
mov
sub
stc
pop
sahf
sahf
and
std
and
int3
push
lds
test
dec
pop
mov
cmpsl
mov
pop
lcall
or
lds
icebp
push
mov
enter
lret
movsb
and
xchg
mov
jbe
stos
cs
jge
ljmp
cmc
sahf
faddl
add
dec
pushf
ljmp
fists
ds
cwtl
mov
or
inc
lods
cli
cli
js
and
sub
pop
nop
and
mov
pop
jle
pushf
mov
ret
xor
cmpsl
rcll
xchg
fcoms
data16
js
stos
outsl
in
sarb
and
push
mov
rorb
jecxz
call
mov
cmp
in
testl
out
pop
adc
repz
jmp
movsl
popf
frstor
fwait
mov
lcall
pushf
inc
inc
leave
xchg
inc
xor
insl
test
mov
ds
or
lods
in
xor
cmpb
xchg
cwtl
inc
mov
aas
imul
les
jb
and
daa
pusha
cmpsl
mov
dec
bound
stos
pop
ffree
nopl
or
leave
test
lods
aam
arpl
push
ret
fs
cld
push
lods
jp
adc
mov
push
and
icebp
icebp
pop
xchg
int
push
sbb
icebp
or
sti
xchg
out
push
dec
inc
pop
mov
das
icebp
jns
repz
sub
sti
pop
cmp
nop
mov
test
scas
rcrl
fldl
mov
stos
gs
mov
xlat
mov
xor
out
and
mov
in
cmp
xor
cld
es
cmc
adc
ljmp
pusha
dec
outsl
inc
shlb
lcall
xchg
xchg
push
adc
pop
adc
nop
out
jecxz
das
mov
add
or
cwtl
dec
jg
lds
cmpsb
rorb
mov
clc
and
das
inc
aam
pop
mov
repnz
xor
inc
rorb
ret
mov
sub
and
pop
mov
sbb
xor
loope
sahf
gs
add
loope
pop
dec
lea
rolb
xchg
or
push
js
call
ss
iret
sub
cld
jno
ret
int
popa
std
pop
pushf
fnstcw
xor
insb
rclb
sbb
push
mov
ljmp
xor
addr16
arpl
adc
add
int
push
mov
ret
jmp
adc
jnp
and
pop
cmp
adc
fs
jns
out
adc
or
incb
pushf
inc
pop
gs
xor
mov
adc
xchg
inc
std
jbe
out
push
and
out
inc
call
lret
mov
xchg
jmp
psubb
pop
lahf
sahf
gs
push
jmp
or
cmpb
pop
pop
sub
xchg
cli
xor
stos
pop
mov
aam
push
out
cld
fisttpll
mov
mov
mov
jb
push
xchg
xchg
jg
cwtl
in
scas
popf
out
xchg
sbb
subl
arpl
cmp
cmpsl
dec
cmpsb
addr16
dec
mov
jp
int3
frstor
pusha
std
decl
gs
imul
ds
addb
in
xchg
ja
xlat
xchg
stc
jp
pop
mov
in
ja
and
push
es
cwtl
imul
pop
jmp
repnz
push
xor
out
cwtl
in
xorl
xor
ss
adc
push
mov
mov
pop
aas
sub
dec
and
aaa
jge
sub
mov
shlb
scas
pop
adc
cld
jb,pt
pop
or
or
fcmovnbe
mov
addr16
stc
sbb
outsl
testl
push
add
or
in
test
sub
sub
fsubp
mov
mov
and
xchg
cmp
movb
jb
leave
rclb
or
mov
push
lods
xor
gs
jae
xor
xchg
add
and
rcr
aad
xor
mov
xchg
xchg
sub
push
ds
adc
repnz
orl
roll
pop
in
push
jmp
mov
mov
arpl
nop
jg
push
imul
xchg
jle
sbbl
jno
add
fs
cmc
push
in
jo
scas
nop
lock
add
jns
jle
mov
mov
test
dec
rcrb
nop
incl
or
push
outsl
je
loop
inc
mov
cli
scas
jns
aam
xor
out
or
cmp
mov
test
in
sbb
adc
mov
rorb
scas
sub
ja
xor
mov
addb
jbe
lahf
push
fistpl
stos
fcmovnu
dec
xchg
gs
pop
test
push
std
or
or
ja
xchg
repnz
sbb
cli
loop
xor
inc
ja
int3
rorb
inc
or
xchg
pop
test
mov
stos
addb
ja
jnp
addr16
adc
add
dec
dec
mov
nop
dec
inc
cmpsb
push
popf
push
inc
mov
shrl
mov
push
jns
xchg
sbb
push
loopne
push
fsubrl
sbb
jle
jne
ds
add
out
arpl
in
cmc
ret
dec
stos
xchg
pushf
loop,pt
loopne
xor
int
jns
popa
sub
adc
dec
pop
dec
stc
arpl
xchg
stc
aam
addr16
rcl
loop
stos
push
xchg
lea
xorb
fwait
add
loopne
mov
jns
push
mov
xor
push
ja
mov
or
adc
adc
mov
push
outsl
jo
outsb
hlt
scas
add
lods
cmp
cld
or
in
daa
mov
dec
mov
bound
stos
in
mov
aaa
lahf
sub
dec
into
push
xorl
pop
mov
inc
adc
aas
lcall
inc
push
adc
mov
xchg
ficoml
shr
or
adc
jne
pop
xchg
daa
call
dec
insl
xlat
cmp
rcrl
mov
adc
sbb
cli
jmp
daa
in
dec
mov
stos
bound
cmpsl
mov
fs
jmp
test
push
xchg
adc
mov
or
in
pop
fildll
mov
mov
push
out
xor
adc
inc
pop
insl
fisubl
xchg
jl
call
xor
gs
mov
push
add
fisubs
cwtl
xor
xchg
outsl
mov
pushf
and
xor
dec
mov
in
fwait
sbb
lret
out
ds
jge
adc
aad
dec
mov
adcb
inc
mov
sbb
cmp
rorb
neg
call
int3
sub
fnsave
and
fcomp
adc
xlat
adc
mov
dec
mov
leave
fistpl
lcall
sbb
dec
xchg
out
psllw
add
jbe
sbb
lahf
out
int
test
jecxz
push
jne
lods
fcoml
push
aad
mov
inc
xchg
pop
in
cli
mulb
mov
mov
mov
lods
mov
sbb
adc
ss
mov
lock
popa
cmp
loope
pop
imul
lret
mov
jne
insb
sbb
pop
push
repnz
repnz
pop
fadds
push
pop
mov
data16
mov
cmp
mov
loopne
pop
or
mov
push
mov
testl
notl
mov
mov
add
dec
inc
pop
ds
xor
inc
dec
data16
dec
outsb
jbe
adc
subl
out
sub
enter
add
add
xchg
test
pop
cld
popa
aad
mov
das
jnp
jle
repz
xor
outsb
out
and
iret
lcall
subb
cmp
or
decb
jecxz
add
jne
out
stos
lods
mov
shll
cltd
cld
ds
xor
and
xor
iret
js
xchg
cmc
jo
push
or
sbb
add
sti
and
xor
in
and
or
pop
dec
push
jmp
imull
sbb
leave
cmpsl
xor
jl
test
scas
xor
or
test
xor
movsb
lcall
ja
pop
jbe
sbb
sbb
adc
popa
ds
bound
cmp
adc
cmp
loop
xchg
xor
out
fsts
leave
daa
dec
jl
das
cmp
iret
lret
pop
cltd
sub
call
pop
sbb
out
jno
fs
in
ljmp
xlat
fsubrl
jb
mov
hlt
lret
sub
hlt
lods
xchg
pop
dec
pop
mov
insb
xchg
mov
or
mov
divl
stos
into
pop
mov
pop
in
mov
fcomps
pop
or
stos
stc
xor
dec
repz
inc
outsl
shll
dec
nop
mov
hlt
fstpt
popf
jl
or
dec
pop
shr
fnsave
push
cltd
xchg
outsl
inc
sub
xor
mov
push
aas
cmp
or
pop
adc
push
lds
and
std
inc
xchg
adc
or
rorl
pop
jbe
repz
lods
xor
repnz
or
push
daa
rcrl
rol
lret
aam
jb
or
enter
scas
ja
push
dec
sbb
mov
mov
outsl
daa
sbb
das
pushf
push
jnp
imull
dec
xchg
mov
stc
adc
cmpl
incl
mov
jmp
mov
scas
sbb
movsb
xchg
sbb
dec
sti
adcb
fldcw
roll
and
mov
outsl
movsl
mov
lret
and
in
pop
pop
push
stc
sbb
sbb
mov
les
sub
stos
add
adc
mov
add
xchg
aas
lcall
xchg
mov
adc
mov
in
push
mov
clc
lret
addr16
movsl
cmp
dec
cltd
jo
or
scas
aam
mov
lea
fstps
sub
das
insb
test
into
testl
add
pop
fidivrs
bound
xor
push
mov
pop
xchg
xor
cmp
jne
adc
adc
xor
xchg
push
pop
cli
fists
jmp
xchg
orl
cmpsb
roll
ljmp
add
insl
rolb
hlt
out
lods
dec
arpl
lcall
test
in
clc
repz
aas
adc
mov
push
cmp
ret
mov
xchg
or
pop
pop
push
dec
test
bound
rcrb
gs
inc
jns
aaa
enter
stc
sbb
shll
jbe
bound
pop
xchg
mov
addr16
xor
or
sbb
popf
testb
ret
dec
dec
and
int3
scas
out
push
lods
cltd
jno
ljmp
jecxz
loop
pop
leave
lahf
iret
mov
lret
cwtl
pop
adc
gs
dec
pop
incb
clc
fsubrl
inc
adc
lea
sub
xor
pop
popa
or
fsts
enter
dec
outsb
dec
sbb
cld
sub
xor
sub
in
aad
jo
xchg
les
cmp
jns
outsl
dec
jnp
and
fildl
ret
and
or
shrl
xchg
sbb
fstps
adc
pop
das
sub
test
rcrl
in
jge
jmp
sub
jnp
jge
inc
mov
jno
daa
addr16
dec
mov
div
sarl
lea
dec
ret
or
lret
or
loop
add
push
outsl
mov
test
das
jmp
jno
fdivrs
movsb
dec
mov
sbb
or
scas
test
or
push
add
and
mov
mov
int
aam
mov
cmpsb
es
pop
ljmp
sbb
jno
outsl
in
mov
stos
enter
mov
insl
cs
fsubl
int
inc
pop
aad
adc
test
jmp
adc
mov
fdivs
std
dec
enter
iret
mov
xchg
sbb
mov
cmpsb
scas
pop
lods
push
pusha
push
ljmp
pop
push
out
mov
push
jnp
hlt
push
jge
and
inc
stos
arpl
adc
and
popf
mov
rcr
into
mov
xor
mov
ljmp
fs
adc
imul
fildll
mov
fwait
andl
inc
dec
sbb
int
pop
or
icebp
lahf
ret
cli
js
sub
cmp
xchg
pop
ret
loope
xor
or
fsubs
in
aam
jns
mov
mov
dec
popa
add
jne
dec
je
fs
movsl
push
pmulhuw
enter
pusha
push
inc
pop
dec
or
jecxz
push
dec
push
shrl
movsb
pop
je
sahf
lahf
and
jmp
sarl
mov
sbbb
jno
jns
xchg
int3
jg
sbb
add
cld
cltd
fcomi
mov
outsb
dec
frstor
neg
ret
and
push
gs
adc
jmp
sbb
jle
orb
pop
int
imul
jns
inc
out
popa
add
out
and
inc
jb
dec
xchg
lret
hlt
fstl
inc
xor
mov
xchg
dec
add
sti
dec
fdivr
sub
loopne
push
mov
fdivl
mov
pop
pop
mov
cmp
adc
sbb
je
lret
mov
jne
test
push
push
decb
xor
pop
loop
aaa
mov
sbb
repz
fwait
push
mov
lds
push
pop
arpl
mov
xor
fidivrs
scas
loopne
mov
lahf
stos
jae
imul
iret
push
roll
xchg
mov
pop
dec
and
rcl
test
imul
imul
inc
or
jecxz
lahf
pop
xchg
mov
ljmp
test
mov
dec
or
adcl
pop
sbbl
dec
out
js
adcl
or
fisubs
sub
mov
cli
xchg
jecxz
rcll
adc
push
out
mov
inc
daa
nop
mov
fwait
xor
xchg
push
mov
xor
out
xchg
xor
mov
iret
divl
jp
imull
sub
leave
test
insl
sahf
adc
shl
pop
inc
call
icebp
mov
xor
inc
punpckhdq
lods
and
adc
lock
mov
mov
lcall
js
pop
test
or
out
add
aam
loopne
pop
sub
jb
in
cmp
into
push
cmp
movq
mov
dec
add
push
mov
sbb
sbb
xchg
dec
pop
mov
sbb
dec
dec
int3
movsb
mov
xchg
cmovno
jmp
jg
packssdw
adc
mov
mov
mov
aad
movsl
xchg
sub
aas
in
jo
xor
loope
jge
and
cmp
jmp
and
xchg
mov
dec
xchg
ficoms
pop
dec
cmp
sbb
mov
sub
cld
cmp
xchg
adc
icebp
fsubr
adcl
ficoms
cmc
push
sub
shr
enter
push
mov
clc
jne
jns
inc
rol
inc
cmc
cmp
push
ds
adc
lret
pusha
out
and
repz
lahf
adc
imull
lds
aam
loop
xor
jl
jp
push
mov
pop
addr16
fucom
ja
push
imul
mov
mov
inc
fsts
sahf
iret
cli
pop
pop
jl
or
mov
pop
sub
sbb
sbbb
mov
add
mov
sub
rcr
arpl
sbb
jl
sub
out
pop
pop
jl
or
ja
sub
stos
pop
dec
imul
push
dec
notb
movsb
or
insb
dec
xchg
arpl
cmc
xor
lds
ftst
push
lcall
and
xchg
or
mov
test
out
in
xchg
popf
lahf
push
xor
jbe
pop
inc
repz
jmp
int
aas
dec
enter
data16
fwait
andb
lret
in
xchg
mov
jne
fcoml
vpsadbw
sub
or
add
nop
dec
pop
xlat
push
jecxz
std
and
sub
das
sub
cmc
adc
or
mov
fcomi
jo
mov
ja
repz
pop
push
and
sub
cli
sti
cmp
shll
stos
and
cmp
sub
xor
lods
scas
inc
sub
xor
loopne
or
jecxz
jno
rclb
iret
fldenv
and
push
or
shufps
in
add
push
xchg
insl
data16
cs
scas
sbb
outsl
aam
mov
pop
push
subb
sbb
cli
jno
xchg
in
or
adc
outsl
sub
xchg
dec
mov
aaa
das
xor
lea
dec
push
jns
sbb
pop
xorb
mov
jns
sbbl
jle
cs
ja
scas
cs
jne
out
push
and
test
push
mov
push
hlt
je
jmp
add
push
inc
sub
loope
inc
push
or
and
lock
call
addr16
lods
test
test
std
je
pop
jno
or
lea
pand
xchg
cld
test
insl
add
and
inc
movsb
mov
ret
sub
ds
inc
mov
inc
sub
cmp
js
dec
add
and
adc
test
pop
mov
xor
add
adc
push
xor
ljmp
leave
lret
lea
xor
aaa
lods
hlt
mov
sbb
mov
or
sub
arpl
sub
adc
cmpb
mov
dec
repz
adc
fimuls
jns
mov
xor
in
rcrb
fdivrl
push
mov
jg
ds
repnz
insl
or
xor
pusha
frstor
lret
into
sbb
aad
mov
fdivr
push
stos
push
repz
mov
aaa
pop
cmp
outsb
ljmp
cld
jnp
dec
cmpsl
into
inc
aad
push
les
inc
lods
push
mov
js
cmp
out
movsl
lods
notb
outsb
in
movl
push
or
repnz
xchg
push
push
loop
and
ja
out
dec
test
cmp
push
jp
jae
cli
mov
das
aas
jne
cs
mov
mov
mov
sub
add
push
or
cld
cs
testl
sbb
in
xor
shll
mov
fstl
and
imul
loope
cmc
lock
cmp
into
pop
jae
push
addr16
ja
pushf
mov
popa
lret
lret
xchg
mov
int
pop
mov
lods
xchg
pusha
das
xor
in
jae
scas
dec
movb
lret
push
data16
jmp
test
insl
mov
int3
iret
nop
stos
cmpsl
lods
mov
daa
cli
mov
call
xor
mov
add
cmp
arpl
push
sub
std
ret
cltd
sub
iret
arpl
into
cltd
inc
jno
aam
nop
add
cmp
ret
sti
leave
test
jg
pusha
leave
xor
xchg
cmp
data16
inc
sbb
lcall
fs
cwtl
mov
and
xor
inc
mov
xor
lahf
call
inc
push
xchg
ss
xor
data16
fidivrs
les
leave
std
arpl
adc
mov
pop
in
inc
imul
jmp
adc
adc
dec
setge
and
int
test
rorl
scas
sbb
sub
shrb
das
adc
scas
test
or
push
orl
test
add
cmp
repz
subl
das
add
cmp
xor
adc
mov
andb
pushf
test
repz
lods
xchg
adc
adc
loopne
popf
call
imul
xor
jge
adc
and
pop
sbb
cmp
xlat
fdivr
loop
in
jbe
or
push
aad
xchg
hlt
lds
xchg
pop
lock
testb
cmpsl
lock
loope
test
lahf
xchg
inc
movsb
fmuls
andl
lds
lahf
daa
mov
scas
xor
iret
inc
aad
repz
cs
iret
rcrb
rorb
fs
lock
scas
rcr
mov
inc
dec
cltd
inc
test
inc
fsubrl
cmp
lods
sti
pop
or
xchg
into
adc
pusha
push
xlat
insl
and
mov
jno
sub
outsl
sub
movsb
fdivrp
stos
pusha
jp
sbb
inc
sahf
xchg
xor
ret
push
sbb
movsl
dec
lcall
imul
mov
lret
or
xchg
psubusw
dec
lea
shlb
ss
loope
and
scas
sub
jo
xor
imul
dec
sbb
adc
push
les
fbstp
pop
push
mov
xor
stos
ffree
rcll
mov
stc
xor
sar
push
es
bsf
lcallw
jge
ja
mov
mov
xor
cmpsb
loop
xchg
test
dec
lods
and
popf
aas
orb
mov
cld
mov
lret
pop
pop
inc
stc
test
rorl
xor
inc
mov
insb
shrl
shlb
divb
sbb
dec
cli
or
cmp
mov
lahf
ss
icebp
mov
pop
mov
cmp
dec
dec
adc
xchg
insb
sub
cmp
rorl
sbb
and
mov
lods
push
xor
mov
push
pop
sbbb
insl
jmp
xlat
outsl
test
lock
in
jbe
add
lods
in
jns
ret
inc
sbb
cmp
out
or
mov
fs
inc
icebp
or
repz
cwtl
push
and
sub
lea
dec
dec
jp
push
cmc
popl
insb
mov
and
jnp
pop
loopne
xchg
and
fldt
ret
dec
cli
adc
push
outsl
es
mov
pop
push
addr16
pusha
mov
mov
icebp
sub
pop
enter
shrl
test
pusha
mov
fistl
clc
andl
jne
mov
aad
dec
scas
jnp
notb
inc
iret
jecxz
test
xor
lds
testb
xchg
dec
xor
and
and
movsb
and
aas
es
inc
xchg
mov
adc
ficoml
shlb
xor
pop
lret
dec
jae
jb
pop
pop
loope
dec
cmpb
mov
clc
out
dec
inc
rcr
stos
lock
mov
jge
int
daa
push
fcompl
lahf
out
in
xchg
add
inc
ds
lods
adc
mov
and
in
test
push
mov
xchg
cmp
es
shld
sbb
jecxz
mov
push
add
pop
mov
jbe
out
push
stos
int3
int3
and
push
or
fimull
push
arpl
jge
hlt
lret
mov
nop
xlat
fldt
mov
das
stos
sub
das
fistpll
xor
xchg
lods
mov
les
int
jmp
jno
sar
adc
into
in
incl
xor
push
cmpsb
in
jb
dec
sbb
gs
gs
and
dec
mov
loope
fsubs
ja
add
lea
push
jp
les
and
push
and
scas
jb
movsb
or
cli
popf
xor
and
sbb
lret
xor
or
lods
inc
scas
hlt
ret
mov
mov
scas
mov
xchg
push
pop
notl
mov
push
or
xchg
loope
shlb
ss
add
pop
dec
sbb
dec
xor
repnz
cmp
lea
xor
inc
adc
fisttpl
adc
mov
iret
daa
mov
dec
pop
outsl
test
cs
jle
jl
test
pop
iret
mov
inc
aam
inc
outsb
mov
pop
jmp
xchg
mov
pop
xchg
movsl
mov
mov
lcall
adc
xchg
mov
outsl
out
mull
xchg
je
mov
fidivrs
jg
loope
jmp
bound
ss
sti
enter
stc
sahf
arpl
scas
sbb
pop
pop
mov
in
lods
daa
pop
jg
xor
sbb
cmc
jg
dec
je
inc
cmpl
into
nop
xchg
shll
or
outsb
cli
ja
jbe
inc
iret
sub
push
lret
xor
sbb
jae
push
and
outsl
and
sbb
in
pop
xchg
adc
pop
dec
mov
in
movsl
sub
mov
mov
test
add
popf
push
in
in
movsl
popf
inc
lahf
add
cmp
jnp
cmpsb
js
dec
mov
arpl
in
outsl
pop
sub
out
fmull
iret
mov
cmp
imul
inc
xor
jmp
lret
lock
push
lea
into
stos
test
fisttps
inc
sbb
mov
sub
orb
nop
fidivl
pop
mov
jl
dec
xchg
addr16
mov
iret
or
or
push
les
faddp
lods
xchg
sub
mov
and
enter
aas
pop
add
outsl
dec
cmp
cwtl
add
xchg
pop
dec
pusha
cmpsb
and
dec
insl
mov
xor
mov
jmp
icebp
add
mov
ds
scas
fldt
cmp
and
push
adc
into
or
cmp
inc
and
incb
clc
outsb
cmp
inc
movsl
mov
add
cwtl
sub
inc
add
jne
enter
call
xor
fistpll
push
adc
shrl
lock
pop
pop
sub
lea
lret
mov
inc
jae
scas
cli
xor
dec
push
adc
rcl
shlb
dec
add
icebp
mov
pop
sar
stos
lods
scas
push
hlt
enter
pop
lods
clc
sbb
fs
cli
lods
inc
shrl
loope
out
adc
xchg
int
mov
int
movl
add
addb
cmpsb
inc
mov
sbb
stc
mull
sub
int3
add
jecxz
lods
cs
pop
inc
xor
filds
xchg
pop
pop
loopne
aaa
or
fidivrl
testb
or
jbe
pop
aaa
daa
xlat
add
fisttpl
push
push
arpl
nop
out
mov
outsl
ror
loopne
in
xchg
mov
ror
leave
fadd
and
fwait
stc
mov
or
adc
out
pop
mov
mov
daa
lret
shlb
lea
push
outsb
dec
es
push
or
xlat
sbb
mov
insb
xchg
jle
ljmp
sub
sbb
mov
das
mov
xor
dec
gs
aam
xlat
push
std
and
push
mov
jb
test
pop
rorl
sub
mov
rsm
sbb
cs
cmp
add
sbb
xor
ja
icebp
jl
pop
add
cmp
inc
and
inc
jno
sahf
jp
cmp
fs
jae
or
cmp
cmc
pop
lock
pop
xor
bound
fidivs
cmc
addl
lret
lcall
rol
add
lret
lea
jnp
cmp
mov
xchg
pop
mov
pop
or
push
ss
adc
fisubrs
add
es
pop
xlat
cld
pop
js
test
faddp
sub
pushf
or
mov
dec
sbb
push
ja
imul
add
and
and
adcl
mov
mov
inc
xchg
adc
jge
lcall
sub
mov
cmp
dec
mov
dec
sarl
inc
gs
push
dec
scas
repz
out
xchg
into
testl
xchg
scas
jae
fsubs
or
pop
out
jecxz
mov
scas
push
cmp
sbb
cmp
insb
inc
and
sub
and
sbb
pop
sbb
cmpsl
insb
jecxz
sub
xchg
adc
jo
mov
dec
into
iret
jle
sarl
pop
cmovae
mov
fdivrp
test
daa
fnstcw
mov
test
adc
jo
adc
inc
clc
bound
arpl
pop
sahf
test
adc
mov
mov
jb
xor
adc
pop
jae
in
pop
outsb
jmp
jmp
inc
xor
adc
mov
xchg
push
mov
xchg
jg
fdivrl
jns
gs
and
jae
aam
adc
mov
sub
jae
sar
fisttps
nop
cmp
hlt
dec
fwait
inc
mov
xchg
sbb
push
or
sahf
aas
adc
out
and
mov
dec
ss
sbb
fcoml
mov
out
inc
sub
pop
sub
and
pushf
add
inc
scas
in
in
push
xchg
sub
fisubl
and
inc
add
pop
pushf
out
addr16
xchg
sub
gs
aam
fwait
xor
inc
xchg
in
inc
movsb
or
sbb
mov
xchg
fdivs
insl
mov
add
xchg
add
lods
stos
outsl
and
imul
dec
push
mov
shll
iret
mov
and
add
xor
xchg
fucom
testl
mov
dec
fnstsw
cmp
int
sbb
out
mov
lds
movsl
push
xchg
fs
in
aas
xbegin
js
lds
add
mov
and
sub
dec
mov
xchg
push
arpl
lock
popl
cmc
int
adc
cmc
or
push
pop
pushf
sbb
and
std
orl
rclb
insl
sub
push
mov
sbb
cmp
popa
or
out
in
inc
sub
push
lret
pop
inc
flds
inc
mov
inc
sahf
inc
jns
cmpsl
fwait
inc
mov
addr16
cmp
test
jecxz
movsb
in
sbb
call
sbb
sub
dec
xchg
clc
in
xor
xor
sbb
in
sub
sbb
xor
test
test
push
in
mov
shlb
popa
cmp
int3
mov
in
adc
pop
lods
outsl
pop
mov
pop
xchg
mov
inc
fisttps
arpl
pop
push
and
cmpl
push
cltd
cmp
inc
jge
cltd
cwtl
pop
lcall
mov
cli
in
js
sub
inc
into
dec
js
aas
cld
dec
jnp
insl
and
rcrl
push
jl
xchg
or
imull
arpl
lock
inc
out
push
mov
cmpsb
fwait
out
mov
repz
or
pop
rcr
adc
sub
sbb
test
push
cmp
xchg
jg
sub
nop
sbb
and
aaa
mov
fdivs
mov
inc
cli
fsubrs
lods
sbb
lret
mov
test
lret
sub
add
inc
sbb
cmp
and
add
and
lcall
jle
mov
inc
fwait
insl
xchg
sbb
loope
add
lods
push
xorl
jge
in
mov
mov
fnsave
mov
mov
pop
mov
fucom
xlat
mov
scas
dec
test
call
push
push
jl
mov
lret
test
adc
addr16
cli
sub
mov
outsl
popa
and
pop
test
loope
inc
setno
lret
loop
cmpsb
adc
jmp
dec
int
sbb
arpl
lock
adc
mov
jbe
adc
cs
mov
std
jb
xor
jbe
mov
gs
pop
bound
lret
jno
addr16
stc
xchg
cltd
lods
lret
pop
add
stos
mov
dec
add
dec
ljmp
mov
popa
pushw
jmp
add
cmp
test
xorl
les
fnstsw
into
fwait
pop
pop
sub
cmp
daa
jg
iret
cld
or
xchg
inc
fsubrs
mov
dec
mov
addr16
inc
fisubs
pop
lds
out
dec
rolb
ss
dec
mov
daa
dec
fisubl
push
push
test
sub
addr16
sbb
scas
xchg
sub
push
jmp
cwtl
aad
int3
fwait
mov
mov
daa
lods
push
ret
or
mov
sti
push
pop
mov
push
inc
addr16
arpl
sub
jo
jg
adc
adc
and
push
inc
in
in
xchg
repnz
and
aas
adc
xor
mov
xor
xorb
out
jecxz
pop
adc
push
inc
pop
xor
mov
mov
mov
pop
out
fs
movsb
cmp
pusha
aas
jmp
inc
dec
mov
pop
and
mov
push
stos
mov
dec
pop
lcall
inc
repnz
in
outsl
call
into
imul
inc
cmp
add
fadds
add
addr16
sahf
stos
mov
inc
aad
mov
in
sbb
cmp
xor
adc
sbb
repz
sti
imul
and
lret
repnz
negb
mov
call
roll
leave
inc
add
enter
fists
or
jae
adc
xchg
out
jmp
xchg
inc
fcomps
loope
jns,pt
push
sub
mov
xchg
leave
add
test
cld
sub
mov
int3
mov
int
aaa
push
adc
inc
outsl
orl
es
cmp
dec
mov
push
jnp
fidivrl
mov
adc
sub
ja
sbb
pop
or
decb
addr16
inc
jg
pop
fisttps
push
jmp
gs
jecxz
sbb
sbb
insl
push
mov
push
and
mov
out
mov
sub
xchg
inc
xchg
loopne
sub
outsb
sub
scas
cld
xlat
sub
ja
gs
sub
fmuls
scas
jmp
dec
adc
jle
outsb
roll
add
cli
fsub
xor
ficomps
sbb
or
clc
add
or
ret
leave
push
mov
enter
hlt
push
fisttpll
loope
push
popf
lock
pusha
or
add
aas
sbb
leave
pop
stos
fwait
std
mov
push
jecxz
loop
or
inc
mov
xchg
jns
es
lcall
fidivrl
repnz
xor
sti
jb
test
insl
shlb
lahf
xlat
inc
and
je
std
xlat
xchg
jns
adc
pushf
xor
mov
int3
or
sub
dec
iret
mov
push
xchg
and
push
sub
hlt
scas
sbb
xor
neg
cmp
inc
aam
icebp
stos
or
mov
loopne
les
dec
sbb
fldt
push
jnp
das
or
sub
sbb
das
mov
xchg
fidivrl
add
cmc
aam
dec
mov
insl
andb
mov
push
dec
aas
jecxz
popa
stos
pop
adc
push
push
pop
int3
pop
xor
cltd
mov
aaa
int
and
sub
rcrl
sbb
dec
lock
out
je
ljmp
dec
aam
andl
mov
inc
loope
cwtl
xchg
test
hlt
add
adc
push
test
js
or
fsubrl
popa
roll
out
or
push
flds
movq
jbe
ficomps
ja
rclb
pop
mov
jl
pop
psubb
mov
add
aas
js
inc
xchg
mov
xor
int
push
and
mov
sub
test
pop
inc
vmovdqu
imul
aaa
inc
push
push
stos
in
add
sub
dec
out
or
rcrb
adc
out
fsubl
dec
rcl
int
sbb
repz
jo
push
out
xor
push
jle
cmpsl
jno
dec
iret
ljmp
int3
xor
cmp
push
in
ja
loope
xchg
mov
int
xchg
jecxz
in
sahf
lret
mov
jle
fsts
cmp
mov
pop
xchg
fadds
arpl
aaa
movsl
imul
out
jbe
faddl
pusha
cltd
cmpsb
push
inc
insb
push
fdivrl
add
sub
dec
add
lret
cld
popf
dec
cmp
push
ret
xchg
in
adc
cmpsb
jmp
or
xor
push
popa
shl
arpl
jne
pop
and
rcrb
pop
gs
je
addr16
sbb
add
test
lds
mov
pushf
out
dec
add
xchg
aaa
js
inc
dec
jp
test
ljmp
push
mov
pop
pop
arpl
cmp
adc
repz
pop
xchg
cld
lds
pop
push
dec
xor
mov
push
ds
mov
mov
cmp
das
aam
adc
xchg
js
pusha
push
movsb
mov
or
mulb
jl
add
cltd
lea
jle
or
mov
aad
insb
dec
ja
stc
or
clc
gs
cmp
stos
dec
jnp
pop
mov
push
sub
out
movsl
repz
xchg
js
orl
daa
add
sbb
movsb
rclb
pop
or
loopne
lock
out
sub
ljmp
inc
push
rorb
jno
shlb
ss
sahf
lods
xor
xlat
dec
je
pop
inc
pop
and
pop
dec
sti
push
scas
jb
sbb
pop
inc
incb
sbb
out
mov
js
movb
inc
cltd
inc
inc
test
cmc
std
sub
lods
cmp
adc
insl
ret
sbb
dec
pushf
sub
inc
xor
cmp
xchg
inc
mov
scas
inc
jmp
jp
ljmp
jecxz
add
lret
add
xchg
or
bound
dec
push
cwtl
sbb
xor
nop
cmp
stos
mov
cmp
add
jne
or
jns
jecxz
shll
scas
arpl
add
bound
xchg
pop
dec
fsubl
xor
jp
repz
hlt
sarb
aas
adc
addr16
ret
push
mov
fs
fwait
mov
mov
pop
add
repz
daa
adc
jne
sbb
mov
aaa
andb
xlat
jge
pop
pushf
aam
dec
daa
fbstp
cmpsb
mov
sti
enter
pop
fistps
sub
rcll
es
jns
mov
cmp
or
in
loopne
jecxz
inc
mov
and
movsl
aas
cs
mov
dec
push
aas
pop
xor
je
mov
push
push
sar
jge
adc
pop
insl
cmp
cmp
fs
mov
sarb
repnz
xchg
jle,pn
mov
lahf
xor
daa
test
imul
std
pushf
cld
cmp
in
or
xchg
cmpsl
add
rcl
xchg
mov
stos
inc
out
or
mov
adc
rol
stc
repnz
push
popa
cmp
pop
fstp
scas
mov
sbb
movsl
sbb
push
es
mov
test
sahf
leave
nop
fcoml
test
out
cs
and
sub
rcrl
movsl
and
inc
js
aaa
mov
pop
cmpsb
aaa
or
xchg
xchg
dec
mov
mov
sub
mov
pop
fildll
pop
and
popa
iret
sbb
push
hlt
push
ret
int
fs
mov
iret
lea
stos
call
or
pop
push
sti
xor
ljmp
dec
mov
mov
xor
lods
enter
adc
xchg
push
mov
mov
add
jmp
and
loope
add
scas
das
cmp
mov
or
test
loopne
or
popa
push
lock
lods
mov
xchg
data16
imul
xor
cli
dec
mov
jmp
mov
cmpsl
xor
mov
popf
xchg
test
add
lret
xor
stos
push
jo
push
pop
cmc
and
ret
loop
dec
int3
aas
movsb
pop
out
fs
xchg
movsb
mov
fnstenv
jnp
sub
sub
js
stos
xor
je
xor
jmp
jae
outsl
stos
dec
ret
mov
or
pusha
lods
loope
inc
or
xor
xchg
frstor
xchg
or
movsl
addb
outsl
cs
sub
dec
cwtl
rcl
adc
in
cwtl
pop
lds
outsl
push
jns
into
arpl
or
stos
xor
cmp
dec
test
cmpsb
lock
sub
sub
into
dec
lods
lret
cmp
shlb
mov
adcl
or
jl
jge
jg
out
arpl
jno
movsb
push
adc
pop
mov
push
cmc
outsb
cmp
mov
bound
xor
jge
jl
test
and
clc
mov
xchg
test
cld
lea
mov
in
sub
rcl
jg
mov
mov
and
popa
int
lods
scas
adc
outsb
sub
hlt
xor
pusha
xchg
repz
sub
jbe
fisubrs
sbb
jle
jo
adc
xor
mov
enter
jl
inc
push
pop
lahf
aad
or
cmp
pusha
mov
int3
shll
lret
dec
hlt
push
jge
and
cs
lcall
jns
jne
sbb
fwait
mov
movsb
add
arpl
and
jb
sbb
jp
inc
outsl
movsl
leave
mov
or
roll
inc
sub
orl
addr16
subl
je
loopne
leave
pop
and
ja
adc
add
push
das
mov
cld
bound
shrl
lds
out
push
cmp
lret
daa
std
mov
sub
divl
cmp
pusha
or
xor
test
inc
sub
inc
and
mov
aas
frstor
xchg
push
pushf
push
cld
jno
ja
sbb
fs
pop
daa
pextrw
sub
test
int3
test
leave
jnp
gs
in
lret
dec
test
scas
and
cltd
bound
std
and
imul
sbb
add
or
das
mov
lods
cltd
stos
js
sbb
or
pushf
push
fs
add
mov
nop
mov
add
scas
dec
out
xchg
movsl
and
sbb
lods
jo
mov
adc
push
stc
inc
outsb
shrd
add
mov
loope
adc
in
mov
jmp
adc
mov
xor
movsl
sub
inc
inc
fcomi
clc
mov
insb
div
mov
hlt
test
lahf
into
jl
jmp
inc
push
aas
rcl
dec
xchg
mov
fdivl
push
xchg
xchg
add
arpl
out
and
popl
and
pop
inc
imul
cmpsb
lret
xchg
les
jno
mov
xor
jbe
push
pushf
inc
test
dec
push
outsl
push
sub
mov
jno
repz
or
xchg
outsl
sti
lods
out
mov
mov
and
xor
mov
mov
loop
repnz
cmc
loopne,pn
aam
fbstp
push
test
ror
push
scas
jbe
lahf
adc
mov
pusha
outsb
adc
pop
push
pop
add
inc
jns
in
xorb
dec
push
push
or
incb
mov
imul
mov
mov
pop
lcall
js
repnz
leave
jp
or
ret
roll
lock
popa
outsl
rol
xchg
in
mov
shll
testl
pop
and
push
dec
sbb
and
dec
sarb
fwait
scas
cmovne
loope
addr16
shl
stos
dec
ja
or
bound
loop
loope
dec
inc
push
mov
rorl
push
pop
dec
repnz
mov
fldcw
pop
sbb
hlt
aaa
data16
jb
xor
das
jno
pop
rorb
cmp
dec
jmp
loopne
ss
les
inc
outsl
sub
aad
addl
imul
fucom
outsl
mov
hlt
test
lock
shr
sbb
adc
mov
mov
cwtl
lret
inc
lret
popl
add
xchg
pop
test
es
loope
jns
fimuls
mov
adc
and
adc
mov
xchg
xor
gs
xchg
mov
ljmp
int
xlat
les
mov
daa
jg
int
hlt
adc
popa
imul
cld
push
xorb
cmc
mov
lods
fidivrl
and
pop
sub
xchg
dec
sub
mov
sbb
std
jbe
mov
push
and
jae
icebp
pop
ja
mov
in
leave
andb
jp
jbe
lods
ret
pop
mov
mov
adc
sbbw
xor
loop
pop
sahf
mov
dec
mov
push
adc
shlb
push
jb
xlat
std
adc
push
add
imul
sbb
fdivr
jp
xchg
data16
outsl
rcl
sbbb
imul
inc
insb
inc
inc
xor
lret
lret
fsubp
dec
xlat
xchg
arpl
fcoms
lret
jle
in
cmp
mov
mov
fisttps
sbb
push
pop
push
les
sub
pop
rcl
jecxz
push
add
sbb
hlt
and
nop
xchg
cmpsb
pop
adcb
push
dec
pusha
lds
lret
iret
icebp
movl
mov
in
add
jp
pop
subl
js
pushf
pop
pop
push
js
mov
sbb
sarb
aas
xchg
shl
cmp
aaa
fcoms
test
ret
sti
adc
fisttpl
je
scas
and
fidivl
jo
dec
xchg
gs
aam
scas
cmp
scas
mov
cmp
js
in
aas
pushf
fwait
repz
sub
jno
hlt
dec
pusha
mov
pop
mov
ds
mov
stos
and
cli
or
inc
cmp
dec
or
call
inc
sbb
sub
inc
and
jnp
scas
ret
shlb
insl
gs
sbb
scas
cmp
dec
scas
aad
outsb
pop
sahf
ljmp
ret
lods
ret
mov
add
jns
cli
xchg
out
jbe
pop
jae
mov
js
out
xor
mov
jle
mov
and
mov
repnz
sub
loopne
pushf
cmpl
fiaddl
jp
jp
lods
and
imul
mov
xor
pop
dec
fcoml
insl
ja
add
aam
dec
repz
mov
or
push
fwait
shld
aas
test
pop
movb
xlat
cli
cmp
or
xchg
dec
mov
insb
cmp
out
lds
mov
es
inc
cld
cmc
fsubs
mov
loopne
sti
test
push
push
negb
inc
pop
in
outsb
lds
into
sbb
sbb
nop
sahf
popa
cli
adc
mov
test
or
jmp
cmp
lock
sti
xchg
dec
nop
and
movsb
inc
sbb
hlt
pop
fidivrl
std
ljmp
cs
mov
lahf
mov
fimull
dec
nop
jmp
pop
dec
int
or
xlat
std
pop
test
aaa
xchg
in
mov
jno
addr16
xchg
inc
movsl
and
adc
pushl
and
mov
repz
jl
mov
mov
jmp
mov
scas
pushf
imul
pop
insl
xchg
cmp
idiv
aaa
std
pop
fcomp
movsl
pop
push
or
mov
es
addl
fisubrs
sub
fcompl
cwtl
sti
vpunpckhdq
sub
dec
test
or
popf
in
cmp
xchg
adc
dec
pop
adc
repnz
movsl
popf
sbb
pop
lcall
test
in
repz
push
adc
jne
inc
or
xlat
xchg
xchg
add
shlb
and
inc
sbb
cld
or
mov
ja
jecxz
adc
mov
or
out
je
sub
je
mov
jle
or
jg
xchg
pushf
roll
jecxz
shrb
pop
mov
xor
push
xor
outsl
inc
or
pusha
aaa
adc
push
pusha
mov
jno
ret
xchg
test
popa
out
aad
add
ficoms
jnp
xor
inc
sbb
and
lret
push
jmp
push
fsubr
and
mov
addr16
arpl
icebp
cmpsl
xlat
pusha
xor
iret
into
in
lea
rorl
pop
dec
push
stos
sub
jp
arpl
mov
mov
test
scas
mov
jp
jbe
stc
mov
shll
xchg
sub
jge
imul
stos
fimull
sub
and
jmp
mov
mov
or
mov
xchg
andb
cmp
and
int3
aad
pusha
jmp
loope
pop
xchg
jns
shll
adc
ds
outsb
xchg
push
dec
dec
add
mov
cmp
sahf
inc
jmp
jnp
pop
sub
movsl
mov
in
xor
cmpl
leave
cmpsl
jo
jne
pop
fidivrs
xchg
fsts
mov
std
cmpsb
scas
or
pop
or
pushl
nop
xchg
xchg
mov
mov
mov
into
pusha
insl
rorl
out
outsl
fisubs
pop
cs
movnti
pop
cltd
ja
stos
aad
mov
pop
das
punpckhbw
jl
arpl
adc
mov
inc
adc
daa
sbb
sbb
dec
in
bound
mov
fcomip
xlat
mov
mov
cli
sub
daa
out
test
mov
xor
xor
cvtpi2ps
mov
aam
adc
call
sub
mov
mov
mov
add
dec
aas
fisttpl
add
fcoms
xchg
jp
add
and
mov
shr
data16
cmc
je
or
and
inc
loopne
imul
repz
aam
and
lcall
ss
stc
in
adc
fwait
xor
dec
inc
lcall
jge
cmpsl
and
out
push
cwtl
gs
cmp
nop
jmp
pop
mov
xchg
mov
inc
push
dec
jmp
xor
mov
mov
sub
call
test
clc
adc
mov
push
js
stos
out
push
xchg
std
clc
jge
out
aam
xacquire
pop
daa
fcomps
gs
push
sbb
in
sbb
add
pop
jns
add
sbb
enter
cmp
dec
mov
and
pop
lds
and
sbbl
jl
cmp
mov
jb
dec
sbb
stos
inc
jl
add
xorb
loope
stc
out
daa
enter
pcmpeqd
push
imul
dec
frstor
mov
mov
lret
cmpl
pop
or
mov
jge
mov
inc
std
push
scas
fdivl
adc
in
mov
movsb
jne
imul
inc
sti
je
jo
mov
jmp
jae
xchg
dec
jge
lock
sbb
or
insb
cmp
adc
or
or
or
push
and
dec
outsb
sbb
add
push
ficoml
lcall
jb
cli
std
hlt
in
out
xchg
sbb
cltd
popf
xchg
je
inc
fmull
enter
or
jg
jmp
add
fdecstp
ror
jae
push
sub
fdivrp
shll
inc
movsb
arpl
roll
mov
jns
cwtl
mov
pop
sub
cmp
xor
inc
insb
lret
lcall
test
mov
pop
cmpsb
cmpsl
ljmp
mov
push
cld
jb
adc
stos
scas
lret
loope
sub
stos
call
xchg
and
xchg
cld
or
inc
out
mov
insl
arpl
std
test
lods
push
stos
stc
mov
push
pop
out
ret
cmp
xor
movl
adc
push
mov
js
addb
into
or
cmp
cmc
clc
lods
xchg
push
xor
sbb
and
lret
pop
ficompl
mov
mov
lcall
pushf
and
popf
test
shrd
and
jnp
mov
in
fists
lret
push
sub
aas
jno
push
cs
pop
in
lods
into
xorl
inc
sbb
fstps
jge
sub
xchg
cltd
xor
fdivrl
jmp
les
or
rolb
dec
test
popf
aaa
adc
mov
imul
in
jl
mov
pop
jne
ja
jmp
ss
arpl
insl
in
stos
fucomip
stos
adc
cli
mov
pop
jge
mov
ss
ret
or
push
push
in
cmp
shll
lcall
sbb
je
fadds
leave
outsb
xchg
mov
adc
inc
ret
xor
mov
dec
popa
add
push
inc
jle
cwtl
cmp
adc
xchg
imull
dec
xor
mov
xchg
repz
sub
sbb
shrl
cwtl
dec
fcmovb
mov
jg
mov
mov
dec
pop
fwait
scas
sbb
shll
idivl
push
lods
dec
mov
movsl
out
push
mov
fs
ficoms
xlat
and
push
fsubrs
cmp
cmpsb
jo
jmp
push
xchg
push
test
mov
ror
lret
xchg
push
fcoml
ds
push
sahf
cli
jbe
or
push
pop
add
mov
xor
test
cs
push
pop
mov
jp
jmp
jecxz
daa
pop
ss
divb
fnstenv
bnd
mov
pop
jg
mov
cmp
call
shlb
dec
push
jae
stc
xchg
test
iret
ljmp
push
xchg
ret
mov
or
iret
jl
sarb
ljmp
jl
cmp
lret
pop
insb
xchg
sbb
jg
adc
dec
adc
popf
push
push
test
adc
adc
mov
addr16
jp
dec
sub
mov
out
jge
xor
mov
mov
and
or
mov
call
movsl
arpl
das
cmc
cmp
insb
cmpsb
jns
mov
jle
mov
aad
push
inc
jmp
xchg
dec
xor
loopne
fwait
lods
pusha
lret
sarb
movsb
and
in
popa
mov
fidivrl
mov
xor
lret
mov
adc
mov
aam
sub
dec
pop
push
rclb
mov
cmp
adc
mov
push
xor
mov
xor
jmp
lcall
jo
pop
popf
pop
pop
jno
push
in
incb
mov
data16
push
bnd
and
sbb
sub
and
mov
lea
pop
sbb
mov
mov
xor
hlt
scas
xchg
inc
jp
jns
jmp
and
jg
testb
mov
je
imul
loop
popf
mov
push
mov
xchg
mov
cmc
dec
mov
adc
sbb
sbb
xor
pop
pop
pop
fisttps
mov
cmp
stos
insb
cmp
lock
xor
stc
into
jae
sarl
inc
subb
push
xlat
dec
xor
or
pop
ss
sti
shrl
adc
xchg
cltd
test
mov
adc
mov
fs
sub
scas
jno
adc
lock
shl
dec
pop
ficomps
aaa
gs
xchg
sub
xchg
mov
scas
sub
xchg
or
jns
rolb
xchg
or
cwtl
mov
or
int
rcll
push
inc
imul
sbb
mov
mov
push
ljmp
pop
inc
pop
mov
stos
lahf
pop
fisttps
negb
in
icebp
or
pusha
adc
in
hlt
out
mov
fistpll
xor
sti
test
mov
pop
outsl
imul
push
sub
punpckhdq
in
out
hlt
jmp
jge
and
dec
or
icebp
cmp
aam
shrb
test
cmpsb
add
inc
jp
repnz
lods
adc
popf
pop
mov
jb
fwait
lea
popa
test
add
lods
pop
mov
inc
mov
pop
imul
pop
pop
fs
cltd
andb
cmp
xor
std
pop
outsl
into
xchg
cmc
dec
pop
add
mov
rcrl
fcomps
lods
lds
daa
mov
push
sahf
adc
inc
push
adc
and
aad
fwait
aad
stos
and
in
pop
cmp
mov
or
mov
incl
adc
movsl
inc
das
je
xor
nop
jp
dec
test
xlat
insl
mov
mov
dec
std
cmpsb
in
push
lods
aad
cld
lea
pop
push
add
loopne
arpl
pop
shll
add
mov
cmp
out
aas
push
xrelease
or
cli
jp
outsl
jae
lods
hlt
or
or
ret
dec
pop
sbb
test
in
pop
inc
inc
mov
leave
mov
fdivrl
cld
mov
addl
in
repnz
jg
jb
sbb
push
test
notl
nop
adc
push
cmpsb
test
es
out
mov
cmpsl
cs
shl
cmc
lods
jp
xchg
pop
lods
ds
and
push
mov
in
pop
xchg
outsb
cmpsb
es
lock
dec
inc
or
icebp
mov
jmp
pop
test
addr16
push
inc
or
mov
push
pop
adc
insb
pop
scas
mov
call
mov
out
and
pop
cli
jecxz
mov
aad
shlb
mov
inc
addb
push
or
mov
or
mov
sbb
sub
loopne
in
mov
add
mov
add
mov
test
icebp
mov
test
sub
cld
stos
mov
inc
cmp
pop
mov
push
mov
xor
push
xlat
jb
scas
test
sar
fcompl
xchg
outsb
dec
shr
and
mov
das
jg
jne
adc
in
push
inc
push
xchg
cs
jmp
mov
xchg
cwtl
js
daa
out
sahf
or
pushf
sbb
scas
and
and
repnz
jg
xor
dec
dec
or
push
test
push
cmpsl
into
add
sub
adc
push
test
and
fprem1
inc
xor
aaa
xchg
ja
sahf
jae
adc
add
ds
mov
inc
xchg
fbld
cmpsl
xor
scas
xchg
cmpsl
aad
xchg
fdivs
jp
repz
stos
adc
andb
sub
or
inc
mov
ds
xor
mov
pop
mov
rorb
inc
dec
mov
fidivrs
ret
cs
inc
mov
cs
mov
cmp
icebp
scas
sti
aaa
mov
dec
mull
popa
lret
adc
in
sub
push
mov
jno
clc
popf
adc
scas
and
and
xlat
in
push
js
xchg
inc
or
pop
js
add
add
lods
movsl
cmp
or
jne
sbb
cmpsb
cmc
gs
std
mov
sbb
mov
inc
push
stos
cmpsl
pop
std
push
push
nop
or
fdivr
outsb
push
imul
jl
cmpsb
daa
into
into
dec
sbb
pop
fadds
mov
fnsave
pop
push
repz
xor
adc
pop
xchg
mov
out
mov
dec
xchg
in
sub
xlat
mov
add
cmp
inc
repz
cmp
and
mov
push
ret
mov
mov
mov
jbe
ret
outsb
arpl
jp
sub
popf
cltd
in
lret
jnp
mov
hlt
push
aas
shrb
mov
sti
inc
pop
lret
cmp
mov
sahf
lock
and
insl
push
push
xchg
out
add
xor
pop
push
rorl
in
mov
in
mov
jge
inc
lods
add
mov
xchg
test
pop
add
fiadds
fstpl
popf
or
inc
insb
test
push
aad
aad
or
or
mov
mov
pop
adc
mov
mov
cmpsl
mov
ret
adc
xchg
push
mov
jb
sub
stos
inc
imul
pop
cmp
ret
jae
lahf
lret
fcomps
mov
mov
cmp
cmp
cmp
repz
aam
out
push
add
sub
adc
scas
das
inc
cmp
mov
pusha
xchg
mov
push
shl
mov
ss
bound
insb
adc
lret
loopne
movsb
pop
cmp
dec
loopne
std
fidivl
and
add
mov
cmpsb
es
and
mov
jne
pop
lret
lahf
fdivrs
jae
inc
inc
jnp
add
jbe
les
xor
adc
mov
jl
xor
mov
popa
imul
shlb
out
pop
fisttps
scas
adc
mov
xor
push
push
sbb
cs
fstpl
xor
push
std
and
lods
mov
mov
mov
jl
shr
test
adc
notb
xor
scas
jmp
daa
lcall
sbb
loope
or
pop
stos
sbb
and
pusha
xchg
shll
xchg
daa
lea
xorl
insl
mov
inc
push
pop
notb
scas
xor
cmp
pop
sub
addr16
mov
mov
in
cmp
rcl
mov
sti
push
rep
jge
ret
jo
mov
or
dec
out
imul
jl
adc
pop
cmp
xor
sub
ja
mov
out
lret
dec
xor
rorl
scas
adc
ss
cmp
repnz
arpl
pop
bnd
and
int
aas
adc
sbb
mov
xchg
orl
jb
inc
in
mov
pop
push
pop
outsb
sbb
or
add
xchg
in
cmp
das
and
mov
icebp
gs
lea
sub
jne
leave
and
xchg
call
fisubl
dec
leave
insb
mov
pop
jle
les
sub
mov
xor
repnz
xor
adc
sbb
iret
faddl
inc
in
daa
in
mov
js
dec
and
cmp
pop
inc
aad
pop
enter
mov
pop
stc
or
iret
insb
jae
cmp
movsb
mov
in
dec
jl
inc
testl
inc
and
in
jmp
lcall
add
loopne
js
xor
je
leave
jo
push
jbe
movsl
adc
fbld
add
xchg
sbb
xchg
sbb
sti
pop
mov
in
or
movsb
aas
into
push
inc
jae
js
xor
dec
dec
ss
fimuls
jl
mov
in
push
loope
jmp
int3
cmp
push
daa
lods
testb
sbb
push
mov
repz
lds
adcl
mov
push
mov
sbb
scas
adc
int
push
imul
push
or
addr16
loop
lods
aas
or
pop
dec
mov
jnp
pop
cmp
pop
jae
adc
pop
mov
jle
cmp
add
rcl
dec
lock
push
adc
popf
js
push
les
fildll
mov
cwtl
out
in
addl
es
pop
ret
ljmp
repnz
mov
test
xchg
and
cli
mov
pushf
cli
aaa
in
adc
imul
movsl
adcl
and
dec
outsl
fsubrl
test
jne
cmp
cltd
lretw
add
push
mov
xchg
and
icebp
adc
test
imul
jbe
fldenv
inc
ja
mov
or
ror
js
jle
inc
scas
sbb
jmp
pop
jae
mov
fs
outsb
ret
pop
cmp
cli
pusha
mov
mov
fldenv
and
sbb
fwait
xchg
pop
push
mov
loop,pt
int3
aam
lock
jle
cmp
xchg
pusha
test
cmpsl
jp
pop
out
jne
mov
in
push
inc
mov
mov
adc
sbb
lret
push
lret
push
movsl
lods
sbb
out
push
es
cmpsb
lods
add
cmp
or
jne
push
xor
pop
inc
faddp
add
lods
inc
aaa
int
xchg
pop
testl
or
cmp
ror
stos
mov
imul
bound
stos
negl
and
aas
rclb
test
in
insl
mov
in
adc
in
sub
test
icebp
ja
push
and
mov
dec
movsl
sub
daa
enter
fists
xchg
data16
mov
fldenv
test
sbb
ret
or
cwtl
mov
add
rcrb
or
iret
dec
mov
fstpt
ret
cmpb
shr
pop
fistps
mov
rolb
pop
dec
inc
cmp
adc
incb
pop
sbb
pusha
add
cmpsb
scas
in
inc
stos
jbe
mov
mov
scas
fstl
lret
repz
data16
pop
xchg
xchg
or
es
add
cmpsb
inc
out
adc
enter
pop
mov
inc
push
adc
lods
xchg
std
cmp
pushw
add
scas
jae
push
mov
xchg
js
adc
scas
dec
test
insl
cs
or
insl
cwtl
adc
or
adc
jmp
jmp
insb
outsl
dec
mov
jmp
add
cmp
es
pushf
push
jae
icebp
or
andb
insl
mov
adc
mov
dec
add
sub
adc
mov
push
cmp
outsl
pushf
inc
adc
xchg
mov
mov
jno
push
sbb
loope
jmp
imul
jno
adc
mov
ss
stc
aaa
pop
pop
je
bound
cmpsb
add
fidivrl
scas
xchg
jge
push
out
iret
lods
xchg
pop
ficompl
pop
or
sub
cmp
mov
iret
es
lcall
mov
cmp
repnz
add
xchg
mov
loopne
jne
into
mov
scas
sub
or
adc
lock
cmovne
sbb
adc
push
push
gs
add
sbb
inc
nop
mov
les
icebp
cltd
lods
jo
push
and
and
adc
sub
fisttps
cmp
jg
pushf
out
sbbb
js
push
shlb
push
add
es
daa
push
push
call
in
inc
pop
and
inc
imul
sbb
out
and
jnp
push
hlt
inc
push
fidivrs
xchg
push
sub
adc
test
shlb
xchg
mov
ljmp
std
daa
dec
mov
fbld
scas
sarl
inc
je
xor
push
movsl
fstpl
enter
shrb
jmp
clc
shl
sbb
les
dec
movsb
and
repz
les
cmp
pop
outsl
in
push
cmp
jp
sbb
mov
fstps
lods
jl
mov
dec
add
add
dec
sti
out
loope
mov
rcr
dec
lock
dec
dec
sub
or
push
mov
insb
test
lock
dec
repz
hlt
jno
sub
out
ret
mulb
outsb
push
xor
lock
sarb
mov
mov
dec
lcall
cwtl
loop
push
cld
in
and
lret
sahf
data16
repz
lcall
pop
aas
mov
test
inc
adc
movsb
add
lods
cwtl
dec
or
inc
xchg
shl
call
int
insb
xlat
subl
xor
push
xchg
int3
ret
mov
pop
andl
mov
outsb
xor
adc
data16
xchg
shr
pop
jmp
idiv
imul
lahf
push
lock
in
ljmp
sbb
stos
psrlq
into
push
mov
mov
jbe
ds
scas
int
ret
adc
fwait
es
xor
cli
inc
jo
leave
cwtl
mov
dec
lret
xchg
mov
stc
jl
inc
movl
sub
mov
mov
test
cmp
jnp
adc
fstps
inc
mov
ret
out
mov
xor
fwait
jg
fwait
and
popf
and
out
mov
sub
les
mov
mov
cmp
cmp
add
mov
push
jmp
pop
rcrl
into
rorb
insb
dec
mov
xchg
mov
push
xor
in
and
mov
pop
cmp
or
lcall
sbb
pop
cli
pop
xchg
adcl
jno
pop
loop
jo
mov
out
out
fiadds
xor
hlt
js
test
fisubs
faddl
repz
xchg
sahf
stos
xor
xor
jecxz
in
inc
mov
jb
cmp
shr
data16
loopne
test
xor
out
pushf
mov
adc
xchg
imul
mov
leave
cmp
cltd
pop
enter
mov
adc
push
sbb
ds
push
lahf
leave
pop
jb
mov
fwait
test
data16
pusha
inc
and
jmp
js
orl
push
jno
daa
fdivl
xchg
and
rcrl
xor
pop
mov
ja
and
xorl
jbe
sbb
and
sub
jae
xor
dec
xor
mov
jno
sub
ss
jo
add
or
ja
sbb
pushf
mov
incl
xchg
pop
in
es
std
roll
pop
int
mov
andb
xchg
clc
lods
xchg
jmp
imul
ret
mov
pop
shr
loope
push
enter
fucomi
lret
test
int3
icebp
rorl
test
add
jp
shll
adc
sub
cwtl
cmp
popf
insb
pop
jns
out
mov
hlt
push
mov
cmpsl
and
jmp
daa
arpl
arpl
fs
and
jbe
imul
lock
or
and
or
adc
mov
cli
sub
sub
jp
cmp
and
fildl
push
xchg
imul
xor
push
scas
loop
add
sbb
or
pop
cltd
in
push
imul
or
movsb
xor
xor
xor
push
jg
ficoms
mov
jmp
fstps
dec
fmull
les
sub
add
scas
lahf
clc
ja
pop
push
cmpsl
xor
sbb
sub
sbbb
fwait
movsb
lods
adc
sbb
pop
ljmp
mov
push
movsb
loope
rcll
lret
lock
ret
pop
jle
pop
push
je
mov
cmpsl
inc
lods
pop
sub
in
notb
mov
mov
call
add
fisubs
jge
xchg
stos
xor
fstps
lods
jg
xlat
ja
adc
ret
ljmp
cmp
and
daa
sub
xorl
jg
mov
js
inc
sub
xor
lcall
popa
xor
fs
les
sbb
nop
out
pop
shl
imul
fstl
add
pusha
xor
js
les
icebp
int
aas
pop
mov
outsb
adc
test
les
inc
push
outsb
lahf
je
jl
dec
pushf
nop
negb
enter
xchg
lret
mov
xchg
or
sbb
adc
aad
fstl
cmp
mov
popa
lods
scas
add
fmulp
inc
movb
lock
jns
adc
sbbb
cli
push
sub
xchg
lcall
lcall
or
mov
mov
or
jnp
mov
ret
mov
inc
bound
mov
add
add
insb
fisubs
xchg
test
sbb
add
in
push
rcll
or
sub
and
or
repnz
mov
jmp
sbbb
xchg
mov
mov
insb
sub
fsubrs
mov
dec
rcll
mov
mov
in
test
fs
gs
out
roll
mov
mov
rorl
std
pop
push
and
sub
mull
es
stc
push
cs
pusha
fistps
fstpl
jg
bound
test
movsl
hlt
sub
jg
loop
or
and
stos
ds
cmp
dec
stos
mov
pop
push
movsl
dec
ja
repz
sti
ds
sub
leave
mov
cmc
test
mov
test
cmpsb
mov
mov
ret
push
movsl
inc
inc
and
dec
cmc
sbb
sub
pop
insl
adc
or
loop,pn
aas
sti
mov
pop
or
sbb
nop
out
cmp
or
adc
movsl
push
adcl
cmp
inc
cmpsb
rorb
fidivs
sub
pop
mov
push
jl
mov
and
into
rclb
sbb
ficoml
je
cmpb
daa
inc
aam
xchg
sar
xor
xchg
icebp
ds
movsl
in
sub
sti
idivb
iret
imul
arpl
add
stos
push
xchg
adc
cmp
mov
inc
xchg
lock
cwtl
jge
lret
jb
xchg
js
adc
xchg
sbb
andl
pushf
iret
sbb
jbe
add
lahf
xor
fidivs
pop
push
cmc
out
out
pop
mov
mov
xchg
rcr
push
jge
adc
call
push
daa
cmp
push
movsb
out
jno
fstpt
mov
inc
insl
mov
xlat
movsb
inc
cmpsb
out
cmpsl
jns
rorl
sbbl
and
jno
pop
jg
sbb
dec
fs
popa
jmp
mov
mov
into
mov
cld
xor
xor
lea
or
test
in
jb
mov
xchg
in
inc
test
test
pop
cmpsb
pop
ljmp
loop
xchg
call
std
push
scas
insb
mov
lds
jb
pop
cmp
pop
das
add
cltd
mov
in
xchg
les
mov
xlat
clc
stos
pop
addl
lahf
dec
mov
push
out
xchg
andb
push
movsb
scas
cmc
xchg
icebp
rcr
mov
push
jns
add
fldl
repz
pop
fadds
jge
mov
dec
enter
stos
jp
inc
andl
aad
and
pushf
cmp
rcll
icebp
ret
cmp
jmp
mov
sti
out
inc
aad
or
push
push
and
jg
cmp
inc
and
mov
adc
outsl
les
and
scas
push
push
push
adc
jmp
les
jo
js
xchg
cmp
shrb
adc
rolb
subb
jae
fucomi
dec
nop
inc
iret
xchg
insl
push
jne
sbbl
push
xchg
pop
jl
out
fs
movsl
fisttps
mov
sar
inc
inc
movsb
clc
and
loope
ret
aaa
repz
pop
popa
inc
movsb
jbe
xor
lcall
sbb
push
sub
js
mov
sbb
and
movsl
or
add
xor
movsb
or
cmc
push
ret
push
xchg
out
sbb
mov
addr16
dec
insl
push
imul
or
in
and
in
fnstsw
mov
add
xor
sub
jnp
add
dec
sahf
xchg
xor
and
dec
mov
jbe
in
ljmp
pavgw
ret
cmp
push
mov
or
cmp
cmp
sub
je
out
cmc
mov
sub
cmpsl
test
inc
lcall
data16
adc
outsb
mov
xor
cmp
cmp
fsts
dec
xor
xchg
and
dec
gs
jecxz
adc
mov
adc
int3
mov
stos
movsl
out
inc
flds
ss
lea
pop
sub
pop
cmpb
iret
pop
cmp
mov
mov
or
mov
push
cmp
lcall
jno
arpl
and
mov
in
pop
mov
pop
clc
repnz
imul
cltd
jle
loope
dec
ds
mov
fstp
mov
add
sub
add
jl
xchg
inc
xchg
lock
jb
addr16
push
xor
xor
jno
stos
and
movsb
fstpl
xor
pop
in
sub
dec
in
test
enter
push
add
pop
sti
outsb
mov
loopne
sar
mov
cmp
inc
sub
pop
adc
inc
fs
xchg
test
icebp
pusha
pop
cwtl
rorb
movsl
lea
jp
xchg
scas
xchg
cmpsl
in
int3
arpl
outsl
or
shll
loope
movb
jp
stos
mov
movsl
push
lock
cmpsb
push
xor
pushf
jno
inc
ret
mov
fidivrs
push
dec
sub
jecxz
outsl
fmuls
pop
or
std
es
push
in
push
pop
and
pusha
xchg
outsl
lret
mov
push
add
fsubr
nop
mov
cmpsb
add
test
sub
add
icebp
inc
lret
inc
pop
xlat
and
outsl
imul
mov
pop
bnd
stc
stos
xchg
and
pusha
lods
sub
int3
adc
push
cld
sub
cld
mov
mov
lret
cmp
mov
jns
sub
dec
cmc
and
or
mov
pop
and
sub
adc
sub
pop
cmp
dec
push
inc
ljmp
cltd
adc
lods
inc
ret
adc
iret
inc
mov
addb
mov
mov
and
pop
shrl
or
jb
js
jle
mov
rep
lret
loop
divl
mov
ljmp
out
add
pop
scas
sub
dec
aas
test
jb
mov
jns
dec
xlat
lcall
push
notl
push
jecxz
adc
xlat
pop
subb
loop
fidivrl
push
add
pop
les
fnstcw
and
add
dec
clc
xchg
cmp
cmp
xchg
pop
mov
pop
push
jnp
imul
mov
scas
mov
push
ret
and
jmp
and
aas
jp
cmp
xchg
pop
jb
add
mov
and
add
lods
stc
sbb
or
arpl
inc
cmp
cli
xchg
jle
sub
cmp
add
in
call
pop
rclb
popf
in
jecxz
add
dec
bound
sub
xchg
ret
jnp
cmp
in
es
rolb
icebp
lods
ficomps
jge
iret
cli
lret
sbb
sbb
add
scas
adc
jge
cwtl
aad
mov
adc
adc
fisubrl
xlat
cwtl
cmp
pop
pop
inc
mull
ljmp
stc
in
lds
loop
into
std
jmp
stc
jnp
out
jle
sbbl
adc
das
jecxz
pop
and
test
insl
xchg
jmp
scas
pop
leave
xchg
int
xor
out
incb
movsb
ljmp
daa
dec
in
add
scas
cltd
call
add
and
js
sahf
xchg
push
or
push
adcb
mov
cmc
xor
call
movsb
les
jmp
mov
ja
cmp
and
arpl
addb
dec
cmp
leave
icebp
ds
jnp
jmp
jnp
push
inc
adc
sbb
shl
loopne
pop
xor
or
daa
cmp
cwtl
inc
les
or
pop
mov
or
mov
mov
adc
xor
imul
je
pop
out
call
inc
out
shl
push
inc
inc
shll
icebp
and
scas
jmp
subl
fildl
jmp
dec
filds
aam
mov
mov
cli
mov
mov
hlt
adc
push
mov
dec
push
popf
lret
dec
xor
sub
std
fcmovnb
test
ret
negl
cmpsl
or
cmp
les
add
ret
pop
inc
fisubs
dec
and
mov
sub
jmp
pusha
inc
xchg
mov
in
aas
mov
pop
fs
int
mov
and
pop
push
mov
dec
inc
inc
mov
nop
fs
and
push
add
out
ljmp
xor
imull
jae
cmc
scas
and
adc
add
and
ljmp
jae
sbb
sbb
jecxz
pop
xor
add
lret
in
repz
int3
or
cwtl
jns
inc
mov
pusha
sub
lock
sti
sub
mov
cltd
or
das
inc
aas
pop
jle
inc
dec
push
jns
jae
xchg
add
pop
adc
loope
fildll
out
inc
neg
cmp
repnz
push
and
dec
mov
adc
dec
cmp
sbb
xchg
ljmp
sbb
lahf
mov
mov
loope
cmpsl
int3
sbb
sbb
jno
cmp
mov
add
xchg
mov
decb
lock
sti
insl
sarl
jnp
dec
cltd
and
cmp
stc
push
or
in
jnp
sarb
mov
jbe
xchg
xchg
cmpsb
cmp
cmpl
mov
cltd
lea
xor
mov
adc
cld
jecxz
jmp
mov
aam
push
aam
mov
xchg
cs
arpl
fsubrl
roll
cltd
fisttpl
adc
or
mov
mov
lock
or
sub
test
fwait
inc
out
insl
ret
push
sbb
popa
push
adc
mov
rcll
iret
incb
jnp
add
sbb
hlt
mov
es
add
mov
out
leave
in
imul
mov
push
xor
hlt
nop
adc
sub
hlt
push
mov
mov
mov
pop
mov
and
sbb
iret
cmp
sarl
and
pusha
mov
aaa
jmp
adc
ret
adc
push
in
sbb
cmp
sub
movsl
xchg
out
or
je
insl
mov
mov
stc
sarb
cmp
add
popa
leave
mov
jb
mov
pop
mov
inc
adc
out
pop
nop
lea
pushf
sub
pop
cmpb
mov
cmp
push
fsubrl
mov
repz
loop
filds
mov
idivb
andl
or
lcall
mov
xchg
in
fcompl
int
cmpsb
mov
std
mov
rcl
dec
jo
rol
and
xor
push
popl
nop
mov
ret
and
scas
clc
ret
orb
fidivrl
push
or
jg
test
lods
jge
int
bound
movsl
aam
inc
jp
pop
test
jmp
inc
call
sbb
inc
cs
popf
loopne
dec
subl
pop
pop
sub
push
outsl
mov
xor
test
jg
sub
add
loopne
aas
xor
and
dec
sub
or
mov
shll
outsl
and
push
and
sarb
imul
pushf
fwait
scas
mov
dec
call
dec
in
inc
mov
sar
aas
xchg
pop
and
jge
subl
sub
repnz
xchg
lcall
cmp
jno
aas
stos
ds
and
push
add
fs
cmc
aam
jns
movl
cs
pop
cmp
mov
xor
cmp
lods
mov
test
fsubrs
sbb
and
cltd
aad
mov
popf
test
inc
push
and
pop
pushf
push
push
rolb
push
aam
fdivl
push
cmp
cmp
push
sbbb
pop
notl
call
scas
aam
cmp
push
les
mov
cwtl
xchg
mov
je
cli
dec
loope
mov
xchg
push
sbb
clc
mov
adc
ds
outsb
cmp
lods
inc
and
xlat
mov
mov
shrb
mov
out
push
dec
dec
pop
mov
inc
bound
sarl
cwtl
jnp
lahf
sub
pusha
jbe
int3
inc
push
cmp
push
pushf
add
insb
incb
imul
fiaddl
push
and
je
push
jp
les
dec
es
jo
pusha
xchg
out
jb
add
stos
push
call
popf
cli
sbb
pop
inc
lods
pop
filds
test
mov
cmp
mov
mov
or
push
push
jecxz
enter
fdivr
gs
pop
add
hlt
or
sub
cmc
test
in
or
je
cli
mov
mov
inc
cltd
sub
mov
sub
pop
sbb
js
lds
mov
and
fstpt
ds
jmp
jg
sarl
push
adc
lea
jmp
pop
or
xchg
push
xor
addl
rorl
test
pop
outsb
lds
aas
je
xorb
or
mov
xchg
push
mov
dec
mov
xor
fwait
push
leave
cmpsb
push
mov
cmp
add
out
les
dec
loop
sahf
lahf
sarb
push
jge
sub
addr16
dec
aad
and
jnp
ds
test
mov
in
mov
stc
push
inc
xor
adc
cmc
and
jp
std
sbb
cmpsb
es
xchg
jle
xor
sbb
sub
or
in
fcomp
or
adc
or
pop
into
or
xor
pop
mov
add
sub
mov
outsb
xor
nop
jg
pop
lret
mov
xchg
and
loope
bound
mov
test
mov
pop
lcall
jb
jg
in
or
cmp
mov
iret
ss
and
aam
stos
out
jmp
cmp
adc
cmpsb
and
xor
data16
fstpl
in
mov
test
rcrl
pop
ss
int3
les
aas
add
shrb
and
pop
and
xor
push
push
jbe
jl
xchg
arpl
and
add
inc
lods
xchg
dec
sbb
ret
sbb
xor
into
push
ja
movsl
lahf
push
pop
sub
push
outsb
sbb
wbinvd
test
daa
sahf
repnz
adc
sbb
in
jmp
lcall
pop
mov
sub
stos
or
xlat
in
mov
inc
out
je
fadd
icebp
inc
fsubl
sub
or
mov
test
inc
ja
mov
push
and
cmc
test
inc
fists
movsb
hlt
nop
fnstenv
sub
das
orl
inc
push
cmp
call
sub
and
ret
jp
push
call
push
inc
and
adc
add
enter
adc
xor
popa
and
mov
jge
dec
pushf
hlt
sub
fcoms
in
or
testl
roll
inc
cmp
cmpsb
pusha
jl
cmp
mov
sub
jb
dec
cmp
xor
mov
fsubs
sti
dec
ss
sbb
les
repnz
inc
imul
clc
mov
jns
std
popa
data16
insb
fistpll
sub
dec
aaa
dec
mov
mov
jle
push
and
jnp
xor
pop
sub
fs
sub
xchg
mov
jle
pop
imull
sbb
mov
push
jge,pn
dec
sbb
dec
es
sub
cmpsl
int
sub
ljmp
fistl
fnstsw
xchg
xchg
leave
xor
cli
cmp
inc
xchg
ss
push
jg
out
test
adc
xor
movsb
pop
aad
pop
aaa
dec
and
shlb
push
pusha
xchg
iret
xor
cmp
and
mov
mov
sub
push
pop
or
xchg
rcrb
push
mov
push
xor
xchg
fmull
into
cmpsb
dec
xor
xchg
in
adc
or
jb
mov
lods
rorb
mov
lahf
std
or
divb
addr16
cmp
aaa
test
adcl
and
jbe
mov
xlat
xchg
xchg
push
inc
popa
sub
rorl
hlt
jmp
sub
cld
mov
int3
xlat
shll
mov
in
pop
sbb
adc
xorb
add
nop
adc
mov
xchg
sub
add
leave
mov
inc
and
dec
dec
fisttpl
pop
loope
lret
js
add
ret
jge
clc
test
int
shl
inc
aad
fdivr
cmpsl
cltd
sbb
and
cmp
pusha
dec
mov
xchg
mov
leave
pop
lds
jg
xor
inc
cmpsl
es
jp
lock
or
pop
ss
sub
push
loope
test
cmp
movl
inc
or
rcl
and
and
push
mov
ret
sahf
mov
mov
pusha
mov
sub
mov
shrl
les
imul
jns
lods
repz
dec
push
inc
ret
ficomps
ret
jg
insb
aad
sti
sub
lcall
or
mov
adc
leave
pop
aas
insl
pop
xchg
dec
in
out
popa
mov
fiadds
xchg
scas
je
push
add
jbe
fistpl
mov
push
and
ja
mov
xchg
mov
jae
js
loop
popf
push
bound
pop
xor
popa
lcall
jp
movsb
mov
cmp
enter
popa
ja
jae
leave
xchg
push
loop
aaa
sbb
popa
repz
sarb
fldl
clc
popf
es
mov
dec
std
lods
push
inc
sbb
sahf
cmp
pusha
cld
mov
xchg
inc
lcall
into
repz
sub
pop
mov
arpl
das
call
nop
fs
jae
lahf
in
dec
in
cwtl
punpckhbw
popa
mov
push
cs
fimuls
and
sahf
je
adc
sub
je
add
sub
sub
jne
push
pop
mov
dec
xchg
movsl
xlat
push
movsb
xchg
cmp
bound
add
mov
pop
cmpsb
dec
fisttps
loope
mov
fdivr
mov
pop
gs
mov
push
pusha
movsb
sub
and
xchg
adc
cwtl
std
dec
mov
data16
fdivl
cmp
rorb
mov
sbb
test
xor
jg
pusha
in
xchg
and
pop
cmp
ljmp
jg
bnd
mov
mov
and
dec
lret
cmp
repz
lea
mov
cmp
fcompl
mov
push
ret
shll
cs
xor
adc
ficoms
pop
into
inc
rclb
fisubrl
push
adc
lahf
xlat
rorb
shrb
or
sub
lret
xor
aam
fs
ja
sahf
push
sub
mov
test
iret
pushf
pusha
add
pop
in
push
ret
mov
aaa
xchg
adc
leave
stos
jae
imul
jns
andl
push
fbstp
cmp
mov
repnz
jb
hlt
mov
enter
add
icebp
test
rorl
sti
inc
inc
cmp
cmp
mov
adc
add
mov
sub
adcb
jecxz
test
xchg
sbb
lret
or
or
aaa
add
iret
es
or
fnstenv
psrlq
cmp
loope
loope
outsl
push
pusha
mov
ja
ja
jecxz
adc
xor
xchg
loopne
push
loop
xor
inc
cmp
xor
mov
testl
mov
pop
sbb
loopne
clc
jo
cmp
pusha
in
insb
jmp
xchg
inc
popa
cltd
pop
xchg
insl
cli
nop
fnstenv
out
or
lods
push
lahf
sub
or
repnz
or
testl
movsl
popa
sub
cmp
dec
int3
sbb
jmp
xchg
int
out
cs
jecxz
dec
xchg
js
and
cmp
popf
xor
jmp
pop
ljmp
mov
rcrb
fwait
pop
pop
insb
sbb
mov
jae
clc
fsubrs
inc
pop
lahf
inc
xor
test
add
outsb
push
add
xor
aaa
sbb
jns
daa
mov
xchg
mov
and
pop
fs
lock
movsl
and
int3
mov
faddl
or
mov
ja
stc
and
mov
mov
inc
adc
xor
leave
fidivs
lea
aam
inc
pop
mov
mov
int
push
ret
dec
push
or
xor
cs
cmp
mov
xchg
rcrl
in
xchg
jmp
popa
xorl
and
ja
fs
adc
xchg
mov
mov
imul
aam
sbb
sbb
lret
xor
outsl
xor
sub
pop
insl
mov
and
inc
cmp
or
mov
mov
sub
ja
icebp
fmull
sub
lret
cltd
xchg
std
popf
pop
mov
xor
push
mov
push
ljmp
mov
sub
outsl
mov
cmp
mov
lret
xor
dec
xor
mov
lahf
xor
test
dec
movsb
mov
add
pop
shll
jbe
mov
pop
adc
sub
int3
pop
xchg
shrb
push
imul
xlat
gs
push
add
jb
jmp
cmp
data16
imul
jne
loopne
xlat
out
and
ljmp
cli
mov
fisttpl
adc
jge
xchg
aaa
jg
pop
sbb
popf
daa
push
daa
mov
dec
loop
sub
sti
dec
shr
das
adc
cmpsb
or
int
pop
icebp
mov
xor
ss
sbb
xor
jae
cmp
add
mov
cmp
mov
lcall
daa
clc
dec
sub
push
stos
lahf
nop
fs
inc
push
and
cmp
jne
xor
ret
adc
dec
pop
inc
mov
mov
xchg
or
mov
cmc
fs
push
stos
xchg
add
mov
pop
inc
cmc
push
addl
pusha
xor
sub
mov
fsubr
and
xchg
xorb
testl
and
mov
xchg
test
mov
aas
stos
xchg
pop
cmp
xlat
int3
mov
aaa
ss
and
add
fcoml
cld
call
insb
fisttpl
cmp
stos
into
ficomps
jge
flds
insb
xor
mov
cmp
mov
insb
js
test
add
cmpsb
cmpsb
xchg
pop
cmpsb
xor
loop
pop
xchg
lcall
ljmp
xchg
fidivl
push
mov
daa
test
mov
adc
and
push
lcall
mov
mov
lret
adc
mov
mov
imul
fbstp
das
dec
jecxz
xchg
outsb
jmp
loop
mov
mov
js
inc
jmp
and
cmc
outsb
add
mov
nop
inc
mov
xor
or
sbb
pop
pushf
add
xchg
pop
or
aad
pop
cmp
mov
les
imul
movsl
icebp
cmp
push
xchg
and
out
xor
lret
and
testb
inc
movsb
hlt
repz
scas
pop
dec
dec
aas
insl
xchg
pop
jp
mov
int
into
mov
scas
es
xchg
sub
mov
xorl
das
inc
inc
test
ljmp
adc
pop
mov
mov
adc
xchg
push
mov
inc
push
xor
frstor
sub
xchg
hlt
mov
movsl
mov
sub
aas
push
notl
lret
sbb
adc
shlb
movsb
pop
push
push
cmp
clc
mov
test
pop
inc
cmp
pop
das
popf
jp
and
imull
fdivs
push
aad
mov
pop
sbb
jno
push
rep
inc
inc
imul
mov
std
mov
mov
daa
sub
ja
xchg
scas
shll
inc
push
jb
or
push
jnp
stos
dec
xor
mov
dec
pop
shr
jno
popa
into
lea
nop
mov
mov
arpl
dec
xchg
arpl
lock
fcmovnb
lock
pop
hlt
jno
pop
and
stc
test
ja
int3
push
xor
push
or
jmp
mov
jne
cmpsb
cmp
fdivs
rcll
flds
fcompl
fdivs
push
mov
dec
and
sbb
lock
xchg
cltd
and
sbb
fucom
push
mov
jl
mov
mov
insl
sbbb
push
dec
frstor
int
icebp
cmp
sbb
outsl
fildl
mov
in
sahf
sbb
xor
add
inc
mov
fisttps
cltd
and
pop
popf
push
mov
mov
cmpsl
add
daa
cmp
dec
dec
ret
gs
sbb
inc
icebp
sbb
adc
push
fldcw
cld
arpl
cwtl
jecxz
xchg
sbb
imul
mov
rcll
cs
dec
push
fstl
add
pop
and
je
inc
adc
test
dec
push
mov
add
mov
ja
rorb
mov
icebp
movsl
dec
dec
pop
pop
and
imul
mov
mov
pop
jg
in
pop
movsl
xor
scas
imul
inc
push
push
shll
aam
pop
or
mov
push
mov
lea
cmp
sub
cli
sbb
mov
pop
inc
or
mov
outsb
arpl
cltd
out
cmpsl
sbb
mov
xor
cmp
dec
cmc
or
fstps
add
mov
or
pop
pushf
xchg
aas
adc
xchg
test
leave
mov
and
adc
inc
fisubrl
lcall
dec
mov
scas
test
fs
lods
popa
sbb
scas
xchg
jmp
lahf
inc
in
imul
adc
jae
in
adc
adc
xor
xchg
data16
ss
aad
cmpsl
push
in
dec
cs
hlt
add
ret
addl
jbe
jecxz
nop
mov
fdivs
sub
xchg
not
loop
cwtl
dec
loope
mov
je
add
jmp
cmp
mov
imul
lahf
das
push
lea
aam
mov
movzwl
movsl
dec
xchg
aad
movsl
and
loopne
out
bound
sub
xor
stos
or
push
repnz
inc
and
pop
xor
shll
in
or
cmc
adc
negb
les
pop
ss
fwait
loopne
pop
cld
pop
dec
sbb
ds
hlt
mov
pushf
cli
pop
sub
dec
clc
adc
loopne
rcll
add
test
fs
out
mov
es
and
ja
gs
dec
xchg
sub
inc
inc
adc
stos
gs
out
test
mov
cld
lods
sbb
jnp
pop
dec
xchg
fs
mov
shlb
int
mov
sbb
je
xlat
or
lret
fs
mov
sbb
adc
mov
xchg
inc
xchg
fstps
mov
jno
and
test
in
pushf
adc
mov
jp
clc
fs
dec
in
arpl
xchg
mov
repz
testl
divl
push
pop
mov
dec
inc
fdivl
ret
ffreep
ds
mov
or
cli
lahf
movsl
ljmp
mov
dec
inc
dec
dec
insb
lahf
ficomps
paddsw
push
imul
cmpsb
adc
or
mov
push
cwtl
dec
or
ror
out
jns
test
fwait
enter
sbb
add
movsb
stc
movsb
in
shlb
pop
sahf
ficompl
dec
xchg
cmp
shll
data16
test
push
xchg
cld
sti
mov
mov
push
rolb
xor
or
cli
in
ret
ds
mov
dec
push
fwait
xlat
or
sub
gs
inc
in
inc
or
out
sbb
out
push
fdivs
sbb
inc
push
inc
xchg
stos
cmpsl
and
insl
pop
cltd
add
ret
jnp
jns
loop
addr16
std
jl
jb
fistps
pop
sbb
sti
int3
inc
in
sbb
mov
push
aam
lods
loope
sbb
mov
push
mov
pop
sub
ljmp
mov
sti
ja
mov
iret
movsl
or
and
ja
mov
stos
sbb
xchg
aaa
pop
fsubl
iret
rcrb
sbb
push
push
ds
sbb
adc
aaa
test
or
push
fdivrs
jp
pop
xchg
mov
out
jnp
push
or
dec
xchg
rcll
adc
push
std
sbbb
fldpi
push
jne
mov
lock
xor
mov
iret
cmc
xchg
mov
mov
ss
add
scas
test
xchg
outsl
hlt
mov
mov
dec
or
hlt
lods
frstor
mov
int3
sbb
mov
mov
lahf
sbb
mov
ljmp
les
mov
std
add
pop
cs
push
rcl
add
sbbb
clc
cld
cli
sub
dec
mov
add
mov
aaa
pop
out
bound
mov
lea
movsl
inc
mov
and
cmp
push
cli
mov
pop
push
insl
dec
into
icebp
jns
das
movsb
cld
xor
mov
out
les
popf
push
cmpsl
mov
pop
cmp
add
sti
cmpsb
lcall
xchg
movsb
popa
imul
mov
gs
loop
cs
xor
insb
cltd
cmpsl
popa
sub
inc
jae
push
jp
fcoml
adc
ret
cmp
jge
cmpsl
movsb
mov
out
push
stc
lds
xorl
cltd
mov
cmp
mov
adc
push
inc
arpl
dec
imul
jmp
movl
mov
or
sahf
shrb
jae
pop
adc
pop
inc
and
imul
or
jns
test
jae
cs
repnz
cmpsl
add
push
or
sbbb
inc
lret
into
popf
out
or
mov
nop
test
stos
xor
sbb
mov
sbb
out
shll
mov
bound
inc
xchg
les
mov
push
in
push
mov
out
sub
lods
push
xor
pop
adc
sub
jno
mov
inc
in
push
xchg
cmpsl
out
lods
xchg
sub
cmpsl
xlat
sbb
fimull
jmp
inc
xchg
inc
pop
movsb
xchg
lahf
pop
nop
jmp
push
scas
popf
imul
inc
inc
cmc
mov
int
pop
mov
nop
jge
iret
ljmp
and
in
cmpsl
repz
and
rcrl
fistpl
jmp
push
out
or
sbb
jae
adc
jno
push
neg
in
in
cmp
loop
cld
pop
iret
lahf
stos
jmp
stos
xor
dec
hlt
adc
mov
cmpsb
sbb
repnz
nop
adc
lfs
aam
jl
sub
enter
add
jo
mov
jl
and
xorl
cltd
call
sbb
fmuls
jnp
sub
mov
inc
loop
adc
aam
stos
stos
movsl
mov
mov
cmp
sbb
scas
xchg
mov
ret
mov
ljmp
sbb
lcall
mov
test
cmpsl
fbld
shrl
adc
daa
mov
sub
out
xor
mov
gs
imul
push
lods
inc
stc
stc
imul
mov
sub
je
cmp
sub
adc
inc
jp
adc
scas
imul
push
jno
inc
in
rorb
mov
jae
lret
sbb
pop
ret
mov
mov
cmpb
and
test
push
ficomps
and
lock
clc
xor
icebp
iret
insb
stos
mov
nop
inc
dec
int
mov
mov
fisubrl
lahf
inc
aaa
jmp
push
int
es
mov
in
push
jle
or
xchg
jnp
add
cmp
sbb
pop
fidivrs
ds
inc
mov
cli
aas
push
shll
shl
cwtl
adc
shl
adc
test
xor
fistps
add
stc
mov
in
inc
movsl
add
inc
shl
xlat
fldt
test
inc
inc
daa
psadbw
mov
cs
ret
jae
lret
and
dec
mov
sbb
std
cld
scas
dec
xlat
sub
mov
mov
fcomip
mov
in
cli
add
xchg
scas
cltd
sub
scas
aam
mov
adc
jo
ficoml
cwtl
sbb
sbb
dec
or
sbb
push
jl
dec
aaa
popa
mov
out
lods
add
cwtl
dec
adc
jl
data16
or
jb
inc
pushf
push
ficoms
sbb
inc
pop
andb
test
adc
adc
xor
mov
dec
test
mov
out
vdivss
test
aas
pusha
daa
adc
ljmp
adc
adc
dec
and
fisttps
mov
jg
sbbl
push
repz
mov
dec
stc
or
call
cmp
inc
fcomi
add
test
fnsave
xchg
sbb
adc
or
popa
push
test
adc
aas
hlt
push
lods
roll
push
lods
mov
iret
xor
pop
ja
ret
xor
insl
and
jae
jp
je
push
mov
insb
stos
ljmp
rcrb
fcompl
inc
and
push
mov
inc
aam
cmp
mov
out
insb
cmp
push
je
mov
mov
pop
pop
aas
pop
inc
mov
adc
lock
fwait
xchg
pop
jbe
cltd
test
xor
cmp
add
sbb
push
iret
inc
mov
or
sbb
pusha
jle
jecxz
pop
jge
jo
cwtl
jb
sbb
aam
shll
push
insb
loope
ljmp
icebp
dec
push
hlt
mov
adc
cs
data16
mov
decb
fldenv
out
sbb
xchg
sub
pop
dec
adc
aam
js
out
adc
xchg
jno
pusha
or
fistl
jmp
dec
js
mov
sti
popl
lret
icebp
je
outsb
lcall
xchg
xchg
lret
ret
insl
scas
sahf
cmpsb
push
inc
fdivrs
push
xchg
cmp
cmp
add
jne
in
mov
sub
inc
cmp
sub
jl
fnstcw
sub
test
fsts
in
nop
mov
orb
push
inc
pushw
mov
stos
jne
sbb
test
cmp
cmpsl
and
pop
sbb
mov
or
jne
cld
jg
mov
xlat
cmp
lock
xchg
idivl
int3
dec
cli
mov
mov
sub
mov
loop
clc
mov
les
mov
stc
cli
dec
xor
or
mov
leave
sbb
std
mov
movsl
mov
outsl
sub
loopne
or
int
jb
mov
xor
addr16
addb
pop
mov
jge
mov
jmp
xor
xor
ret
add
pop
insb
fimuls
js
jmp
ja
pop
push
mov
fs
repz
sub
gs
pop
cs
mov
icebp
je
nop
and
call
mov
js
shr
out
sub
xchg
cmp
sbb
shlb
js
je
popa
cmp
xchg
adc
jno
fstps
jbe
adc
jp
sub
dec
push
cmp
sahf
or
cld
lea
and
aam
flds
test
aad
push
stc
outsb
jbe
cmp
sbb
mov
push
or
sbb
jbe
scas
push
push
out
mov
mov
push
jno
pop
mov
cld
mov
xchg
repz
mov
mov
das
in
adc
pop
inc
dec
xor
bound
xor
es
xchg
inc
mov
dec
test
lea
into
dec
mov
das
add
es
push
push
out
clc
aam
gs
shrb
cmpsl
jbe
ficoms
cmp
dec
mov
mov
rcll
scas
mov
out
addr16
aas
testb
cli
sbb
dec
cltd
popa
test
mov
fldcw
mov
mov
les
mov
mov
int
push
iret
push
or
imul
mov
cli
cmp
jg
push
lret
xchg
jge
stos
jnp
test
imull
mov
sub
ja
xlat
pop
jae
sub
cmp
xchg
mov
rorb
aaa
dec
mov
pusha
or
mov
es
cld
sub
cs
mov
mov
mov
jo
mov
add
xchg
insl
test
dec
gs
dec
rcr
sub
mov
rcll
dec
or
jo
inc
dec
aas
neg
leave
cmpsb
inc
faddl
clc
push
ficomps
movsl
in
and
test
cmc
cmp
sub
iret
loopne
xchg
cmpsb
sub
pop
xchg
inc
mov
cli
and
sarl
pusha
xchg
jmp
mov
xor
mov
popa
sbb
int3
fs
inc
mov
sbb
sbb
sbb
cmp
cmc
loopne
enter
cwtl
mov
mov
sbb
mov
shll
enterw
dec
or
fdivrs
shlb
cmp
cwtl
fwait
xor
stc
fbstp
insl
mov
push
dec
aas
aaa
lret
xchg
testl
sub
xchg
sub
pminsw
insb
outsl
out
rcrb
lods
ficompl
add
shl
cmpsl
shll
movsb
fistl
subl
lods
or
pop
lcall
xlat
fstpl
push
push
jl
dec
mov
les
fs
xchg
sub
sub
xchg
sbb
jge
imul
test
push
lea
cmp
dec
into
pop
adc
mov
and
outsl
adc
enter
pop
rorl
test
data16
mov
jmp
and
add
fnstsw
into
insl
mov
jno
fidivl
nop
out
mov
dec
arpl
rorb
jb
jle
fidivl
add
xor
jmp
inc
xor
mov
aad
into
loop
hlt
jmp
inc
adc
in
stos
xlat
nop
push
and
psubb
sbb
into
pop
mov
pop
sub
mov
mov
mov
jle
add
fisttps
cli
sub
insb
cmp
in
loop
push
mov
mov
adcb
imul
int3
sbbb
divl
clc
aad
or
pop
mov
mov
stos
jnp
cmp
jnp
push
or
dec
push
adc
leave
out
jle
pop
stos
xchg
loope
jnp
adc
daa
cmc
inc
lea
pop
fsts
push
js
inc
add
fisubrs
inc
jp
and
dec
je
xchg
jnp
sub
dec
icebp
jne
call
les
mov
outsl
push
ljmp
scas
add
popf
cmp
out
xchg
movsb
cs
push
adc
les
repz
lcall
lahf
loop
adc
inc
jle
ss
adc
imul
mov
lcall
sbb
sbb
sbb
out
sbb
jp
lds
mov
js
sbb
loopne
jmp
pusha
outsb
inc
xor
sub
add
sbb
sbb
out
push
into
push
sub
movsl
jo
adc
addr16
and
jbe
outsb
jmp
stos
repz
lock
xchg
sub
movsb
frndint
adc
in
pushf
add
popa
pop
test
int3
adc
jno
jmp
icebp
push
sub
mov
adc
insb
scas
lock
notb
mov
jno,pt
xchg
fnstsw
test
and
fucom
jmp
mov
js
fs
mov
push
lds
ficoms
and
jae
mov
push
pop
xchg
sbb
push
aam
cli
push
ret
hlt
push
cmp
sbb
js
xchg
jmp
adc
in
les
fwait
mov
add
loop
scas
jnp
mov
fidivrs
cmp
or
les
je
repnz
push
movsl
jge
sub
jmp
call
adc
ss
xchg
ljmp
xor
repz
dec
js,pn
jne
aas
cld
bound
mov
xchg
or
jg
cld
adc
pop
dec
adc
xchg
sbb
test
repnz
lods
test
clc
cmc
xor
call
mov
pop
jge
out
mov
arpl
das
iret
pop
shlb
pop
add
adc
out
stc
jno
jge
pushf
mov
push
mov
ja
or
adc
es
mov
jge
mov
jb
pop
cmp
sub
nop
jo
xor
sub
or
leave
xchg
dec
or
xor
adc
cmp
sub
cmp
aad
imul
sbb
xchg
loopne
sbb
lea
push
mov
vmovss
adc
nop
jge
and
push
add
jbe
addr16
int
push
fs
mov
jns
cwtl
xorb
cli
push
stos
bsr
out
sub
cmpsl
xor
jo
cmp
fsts
stc
adc
fcoms
mov
les
ret
mov
ljmp
xor
fnstcw
test
stc
pop
ss
or
mov
enter
adc
jmp
push
jbe
dec
pop
repnz
ss
sbb
outsl
and
in
adc
mov
adc
mov
sub
inc
lcall
insb
mov
lcall
sbb
dec
jle
movsl
mov
jne
les
adc
lods
jecxz
shl
ss
or
ljmp
inc
inc
mov
loopne
xlat
fwait
fs
movsl
lret
test
shlb
sbbl
bound
mov
and
xchg
add
dec
outsb
adc
xchg
rcr
jno
call
test
push
mov
stos
out
lahf
pop
call
sbb
lret
or
xchg
int
jp
mov
sbb
push
addr16
popa
jle
es
iret
sub
call
fbstp
popa
xchg
test
push
inc
lock
in
arpl
cmp
dec
or
inc
push
sbb
addr16
jmp
pop
fmulp
push
xchg
in
rorb
inc
rolb
pop
outsl
idivw
push
sbb
and
iret
stos
adc
insb
xchg
pusha
mov
sahf
mov
xchg
jg
loope
icebp
cmp
dec
sarb
sti
ja
lret
cmpsl
into
add
and
xor
int
or
scas
push
gs
pop
jo
fsub
jns
ds
into
test
test
jp
pusha
mov
insl
jo
or
and
mov
adc
ds
sti
jl
sbb
xchg
cmp
push
loopne
dec
mov
ljmp
add
outsl
popf
lret
in
push
cmpsl
ret
add
pop
test
fstpt
sub
and
sbb
sub
or
and
je
mov
pop
pop
out
scas
mov
imul
mov
xchg
test
in
add
ret
outsl
sahf
into
repnz
or
aam
or
lea
mov
hlt
adc
mov
mov
out
add
mov
enter
xor
cld
lods
pop
andl
push
inc
out
inc
and
xchg
fadd
sub
clc
sub
movsl
push
push
sub
dec
into
mov
lea
jmp
xor
inc
mov
cltd
lods
push
push
or
push
jo
scas
ja
divb
lock
popl
cmc
xchg
addr16
fmuls
dec
rorl
rclb
pusha
or
mov
imul
sub
arpl
sti
leave
xor
cmpsb
pop
or
mov
int
fidivrl
inc
jle
xor
or
lret
xlat
mov
gs
incb
sub
sub
jp
mov
pop
pop
add
xchg
stos
mov
mov
jae
mov
in
ss
icebp
std
cmp
push
push
sbb
in
dec
jmp
xchg
out
outsl
push
clc
jecxz
data16
mov
fstl
mov
enter
xchg
mov
mov
pop
cmpb
mov
jnp
cmpsb
and
hlt
call
lods
stos
fildl
and
js
fmull
mov
negl
out
cmp
mov
push
hlt
push
dec
inc
out
mov
in
pop
xor
pop
mov
loope
sbb
arpl
mov
dec
lcall
inc
mov
and
fs
dec
sub
and
outsl
lock
out
mov
and
mov
push
rol
fisttpll
jecxz
xchg
push
pusha
jns
dec
stos
popa
xor
out
addr16
pop
add
cmp
mov
add
and
mov
lock
daa
repnz
repnz
stos
sbb
mov
adc
leave
das
loopne
cs
out
adc
mov
stos
adc
push
cmpsl
or
enter
mov
loope
out
pop
and
fyl2xp1
jno
pop
cmc
sub
ret
popf
scas
pop
out
xchg
cmp
add
or
sbb
ss
mov
dec
adc
add
mov
add
add
or
pop
mov
push
insb
lods
inc
pop
jl
das
and
fidivl
fs
insb
cmpsb
push
pop
jo
cmpsl
inc
loop
gs
mov
jo
insl
fs
push
and
das
sub
xor
inc
pop
push
mov
cmp
addr16
in
adc
xchg
movsl
test
push
sarb
push
clc
push
push
jb
inc
cmc
pop
push
sub
dec
mov
dec
int
insb
ljmp
adc
int3
addb
pop
fiadds
add
ja,pt
or
cmpsl
sbb
cld
fs
xlat
clc
das
fs
int3
xchg
mov
xchg
cli
jle
mov
lea
mov
and
imul
xchg
mov
shl
push
loop
aad
adc
add
lret
int3
pop
aaa
jecxz
sbb
sub
dec
lock
dec
adc
cmovge
cmpsb
xor
xor
inc
inc
xorb
push
xchg
inc
sbb
xor
hlt
cmpsl
imul
sub
js,pt
xchg
imulb
pop
test
sbb
popa
daa
cmp
add
imul
adc
pusha
test
mov
out
push
sub
adc
stc
sbb
es
inc
insb
jno
fidivl
pop
enter
hlt
and
xchg
cvtps2pd
sti
push
aad
loop
out
inc
mov
mov
sub
inc
adc
xchg
ds
addl
test
sti
jb
cmpsb
call
mov
pop
lea
dec
cmp
pop
cmpl
das
or
ret
jmp
not
jg
mov
jmp
push
lods
and
es
ret
mov
cmp
bswap
call
das
popa
and
mov
sbb
imul
xlat
inc
inc
sub
in
movsb
rolb
lds
ror
stc
pop
mov
mov
shrl
add
push
mov
into
push
loop
jne
pop
call
xchg
lods
sbb
scas
inc
push
pop
mov
cmp
in
pop
in
mul
punpckhdq
insb
push
cmpsl
bound
dec
int3
stos
or
xchg
stos
cmp
push
ljmp
int
stos
iretw
pop
stos
cmp
xchg
cmpsb
mov
mov
sbbl
mov
decb
xchg
fs
inc
jno
xchg
enter
imul
sarl
sub
pop
push
xor
and
test
push
dec
inc
xor
mov
sti
jg
jge
sbb
xchg
xor
xchg
cli
mov
jge
mov
cli
jae
aaa
popf
and
test
mov
adc
pop
cmp
push
or
insl
mov
loop
sub
add
or
cmp
clc
sbb
into
sub
mov
lods
shlb
dec
cmpsl
jnp
pusha
lea
sub
mov
push
std
mov
inc
icebp
cld
xor
mov
data16
pop
mov
mov
push
jmp
xchg
xor
add
xor
mov
gs
sbb
mov
std
pop
or
mov
mov
pop
mov
das
icebp
jmp
xchg
cmpsl
sarl
push
gs
mov
imulb
cmpsl
ljmp
insb
xchg
lret
push
lods
cmp
mov
movsb
mov
ficoml
adc
insb
and
imul
movsl
dec
push
and
call
dec
pop
popa
jns
push
pop
jmp
enter
inc
sahf
je
inc
les
cli
loope
aad
lods
push
and
clc
xchg
out
dec
jo
jecxz
and
les
push
fwait
mov
mov
mulb
mov
adc
into
dec
clc
push
out
jecxz
aam
fimuls
ds
std
xchg
and
std
mov
or
call
mov
mov
lcall
and
mov
mov
sahf
mov
sti
imul
imul
addr16
in
mov
xor
cmpb
ror
pushl
mov
call
movsl
or
push
or
pop
add
mov
and
jbe
dec
mov
out
push
adc
mov
arpl
loope
int
cmpsb
mov
inc
inc
call
mov
push
push
out
push
iret
sub
dec
add
test
fsubrl
test
sarb
in
and
test
push
or
std
aad
out
or
test
sub
fwait
mov
mov
andb
ja
movsl
sbb
dec
or
or
mov
xor
mov
rcrb
test
repnz
adcb
mov
sbb
enter
cmpsb
or
fmuls
testl
cmp
fdivrs
push
ss
xor
inc
repnz
imul
mov
jns
sub
fwait
and
out
pop
push
cmpsb
repnz
xchg
mov
push
inc
xor
push
inc
xlat
mov
popa
mov
mov
dec
sub
push
dec
sbb
mov
adc
jns
in
pop
mov
xchg
sbb
test
xchg
test
xchg
stos
mov
mov
mov
icebp
cmpsb
pop
adc
je
mov
inc
test
or
add
cmpsl
push
pop
lahf
cmp
push
gs
hlt
gs
iret
add
cmp
jns
cmpsb
icebp
dec
mov
mov
cmp
mov
xchg
inc
xor
enter
mov
subl
sub
adc
cmpsl
mov
xchg
out
es
xlat
test
mov
fcoms
jae
jg
outsb
shlb
xchg
mov
imul
outsl
xchg
cld
cmp
dec
lret
xor
jecxz
adc
sbb
jp
sti
add
jb
in
nop
push
or
ljmp
fistps
jno
ds
jb
inc
cwtl
xchg
jno
outsl
add
adc
daa
xor
or
dec
lcall
ret
bound
add
lock
and
adc
adc
xchg
popf
imul
js
stc
test
dec
movsb
dec
fsubp
imul
out
cmp
add
aad
fnsaves
pusha
cmp
in
inc
les
dec
lods
in
scas
jp
pop
adc
decb
cmp
pop
movsl
mov
test
xchg
test
xchg
inc
mov
sbb
idivl
fnstsw
jo
and
movsb
mov
ljmp
push
push
stos
sub
mov
cmp
mov
fwait
xchg
xchg
loopne
jo
mov
lods
push
in
dec
lcall
sub
pusha
or
pop
mov
sbb
test
xchg
adc
xchg
mov
pop
mov
jge
sub
sub
ja
add
dec
test
push
jno
inc
fcoml
ljmp
jmp
mov
mov
popf
mov
or
pop
mov
inc
movsl
lock
dec
loop
daa
xor
lea
lret
dec
subl
orb
mov
xor
jo
adc
add
jecxz
pop
in
sub
iret
movsl
je
iret
imul
push
mov
scas
cltd
cmp
or
push
push
or
std
mov
push
cld
mov
push
shlb
rclb
mov
jb
fisttpl
sub
std
adc
ds
pop
clc
inc
repz
stos
lods
or
xchg
sbb
icebp
pusha
pop
enter
adc
or
jns
mov
adc
inc
adc
pop
leave
xchg
mov
fstpl
push
add
pop
mov
and
sbb
jno
mov
xorb
and
sbb
bound
pop
gs
int
jae
aaa
stos
mov
mov
xor
xchg
jg
and
call
and
pop
enter
inc
mov
adc
popf
jne
and
fnstenv
sbb
fildl
sti
jo
clc
in
cmpl
add
sbb
ja
adc
cmp
sbb
or
pop
in
loopne
add
mov
jg
lods
lock
aaa
adc
sub
test
pop
pop
dec
xor
add
add
or
cmp
dec
xchg
adcl
xor
aam
sbb
cmp
scas
ds
sub
cmp
ret
cwtl
pop
xchg
mov
mov
push
test
inc
shll
push
or
mov
out
adc
popf
repz
mov
in
and
aam
out
out
xchg
loope
xor
inc
std
cli
mov
adc
data16
leave
mov
lods
mov
pop
je
and
in
int3
leave
add
sbb
push
sub
xchg
mov
xor
adc
pop
sti
sbb
mov
clc
jg
mov
insl
mov
cld
push
leave
inc
enter
xlat
mov
cltd
pop
mov
ljmp
xor
and
sbb
je
and
es
push
hlt
xor
pop
jno
rclb
cmc
test
fbstp
mov
insb
in
int3
mov
pop
xor
pop
outsb
dec
loop
xchg
mov
adc
data16
push
loope
stos
dec
mov
jb
clc
xor
outsb
fsubr
sub
sbb
loop
shll
push
and
or
ffree
sub
insb
fdiv
mov
inc
sbb
and
mov
loop
outsl
add
inc
jp
test
sbb
sub
insl
mov
loop
int
cmp
pop
cld
cmpsl
fs
pop
sbb
dec
movsb
and
insb
jo
sub
out
mov
pop
popf
add
es
ror
xor
dec
shll
xchg
pop
or
mov
push
mov
push
mov
jne
xor
dec
mov
inc
daa
int3
imul
or
jns
rorb
sub
cltd
movsl
rorb
out
aaa
loop
xor
sbbb
je
dec
enter
pop
aad
jecxz
pop
stos
popa
cmp
into
sub
cmp
sahf
add
test
push
push
pushf
fnstenv
into
dec
in
shl
orl
add
sub
add
lods
daa
add
movsb
pop
ret
mov
sub
psubw
test
arpl
movb
movsl
daa
push
sahf
fsubs
add
pop
pop
dec
mov
or
call
dec
xor
rcr
sbb
push
imul
out
pop
loop
sub
jge
push
fwait
pushf
cmpsl
ret
fldl
push
sbb
les
pop
xchg
pusha
cmp
rol
mov
ja
mov
adc
in
std
jmp
xchg
push
arpl
rclb
dec
mov
pusha
rcrb
mov
das
test
nop
sub
push
push
cmpsl
mov
sub
mov
mov
pushf
mov
lcall
mov
iret
in
pop
shrb
stos
add
in
mov
xchg
sub
lods
lcall
js
nop
or
mov
mov
pop
cmpsb
lods
hlt
das
mov
jno
arpl
fisubl
lds
inc
push
in
adc
addr16
adc
in
or
dec
popa
in
ret
mov
data16
mov
in
ret
dec
pop
pop
mov
xor
jecxz
loop
dec
fstps
sub
dec
xchg
or
mov
push
bound
iret
lret
dec
adc
mov
fstl
adc
icebp
adc
mov
out
sub
lea
dec
rorb
mov
xor
dec
adc
cltd
cld
dec
xor
dec
xchg
hlt
push
push
rorl
cmpsb
call
hlt
adc
and
mov
push
sbb
sub
or
sub
arpl
and
jmp
mov
fcomps
fstl
loope
add
fisubl
pusha
cmp
ret
pop
aad
sbb
loopne
mov
jmp
in
push
jae
jmp
push
repnz
sub
cmpl
fidivrl
fsub
xchg
and
ss
leave
fcoms
imul
add
addl
imul
pop
push
fimull
shll
rol
lahf
push
data16
add
sub
inc
jbe
leave
in
push
pop
out
xchg
xor
jo
or
xchg
lods
inc
xchg
mov
frstor
fiaddl
xchg
insb
jmp
or
jb
enter
xlat
sbb
sarl
dec
pop
mov
pop
in
ss
jae
shl
dec
aam
mov
dec
aad
rol
mov
dec
mov
fmul
repz
aas
and
inc
add
add
xorb
and
scas
mov
faddl
push
aas
inc
sbb
les
mov
in
or
repz
cmp
push
push
out
mov
sti
je
es
leave
lcall
push
sub
adc
add
pop
ret
cmpb
lds
test
mov
adc
cmp
cmpl
data16
adc
je,pt
out
adc
aad
mov
xor
and
and
mov
imul
cmc
shll
lret
dec
and
aas
lret
push
xor
lods
sti
inc
mov
icebp
ljmp
jl
fdivrl
mov
adc
mov
or
add
rorl
mov
arpl
call
jbe
xchg
fucompp
jae
stc
jmp
xchg
or
sbb
add
pushf
sbb
add
push
jo
or
add
les
push
push
sti
xchg
movsl
cmc
mov
xor
bound
ror
or
imul
mov
mov
inc
cwtl
fsubrs
jns
aam
test
add
xchg
lcall
gs
hlt
mov
push
ljmp
lret
cmp
push
or
outsl
dec
or
je
mov
jae
mov
fwait
push
and
fdivl
and
int3
cltd
stos
test
lods
inc
into
rorl
popa
lea
std
jbe
imul
xor
sub
dec
repz
sbb
popa
pop
outsb
sbb
mov
sub
imul
push
loop
mov
push
call
xorl
idivl
ret
push
mov
lods
push
loop
cmp
pop
fwait
sub
adc
xchg
xor
filds
out
xchg
movsl
imul
adc
pushl
mov
or
mov
inc
jo
pop
push
inc
jne
out
fwait
dec
mov
cmp
push
clc
mov
gs
xor
pop
mov
jnp
ret
scas
jle
aaa
daa
out
mov
pop
fcomi
sbb
arpl
loope
pop
sub
sahf
sub
int
es
test
dec
push
loop
fnstenv
and
jo
mov
cmc
rcrb
and
mov
int
jae
xor
adc
mov
cmp
jbe
pop
dec
sbb
xchg
mov
sbb
dec
inc
push
notb
sar
or
sbb
jnp
jmp
aas
gs
jg
push
and
pushf
adc
pop
movl
inc
test
adc
xchg
xchg
pop
xchg
or
jge
mov
xchg
or
sbb
xor
jle
xor
xchg
in
cmp
lds
sbbb
push
xlat
sbb
stos
and
or
cmpsl
iret
rcrl
cmc
notl
sbb
jecxz
sahf
stos
dec
aad
xor
rcll
nop
jnp
hlt
cmp
ret
std
stc
sbb
dec
ss
jl
daa
mov
in
call
dec
sbb
sti
mov
jne
scas
js
sbb
mov
push
jb
mov
and
test
push
cmc
pop
out
mov
push
dec
lret
mov
dec
sub
cmp
push
pushl
icebp
andb
push
scas
jns
mov
inc
rcrb
addr16
fucomip
cmp
push
dec
or
js
jmp
dec
mov
push
idivl
and
sbb
and
jae
outsb
jnp
jmp
bound
pextrw
pushf
movsb
loope
sti
push
or
rcrb
or
hlt
push
sub
inc
jge
lcall
xchg
in
and
mov
mov
dec
jle
xchg
shrb
pop
cmp
jo
jl
add
mov
nop
mov
or
add
popl
mov
clc
jns
in
mov
fidivrl
add
roll
hlt
imul
insb
or
icebp
lahf
popa
push
lret
mov
je
lahf
pop
mov
incb
ds
xchg
das
mov
push
aad
out
cmp
xlat
sbb
loopne
or
push
pop
in
lods
pop
test
test
clc
dec
jl
js
xchg
aad
push
lret
std
add
inc
aaa
shlb
lret
js
out
add
push
push
out
push
push
and
pop
dec
cwtl
andl
stos
nop
push
mov
fisubrl
mov
push
out
ja
push
and
fdivrs
in
gs
add
dec
push
mov
mulb
mov
xchg
jbe
ficoms
js
push
sbb
mov
roll
pop
inc
aaa
jae
idivl
hlt
lret
jno
das
add
sub
testl
je
lds
jecxz
jo
btr
ret
cli
es
in
mov
xchg
jnp
add
cmpsl
jnp
xchg
cmp
clc
and
mov
and
push
icebp
jae
imul
jmp
std
pushf
sbb
or
jb
fists
bound
in
insl
or
mov
mov
popf
push
cld
push
add
pop
popf
adcb
mov
iret
frstor
mov
jge
push
sbb
sub
outsl
ljmp
mov
jp
lods
bound
push
push
or
stc
inc
ds
sahf
mov
cli
cmp
cli
jg
popa
xchg
js
gs
xor
or
xor
inc
ds
push
and
insb
mov
hlt
pop
push
out
test
je,pn
add
mov
fistpll
popa
xchg
iret
cwtl
dec
ret
mov
imul
xchg
rcrl
aam
and
add
mov
mov
xorl
dec
mov
cmp
inc
mov
aaa
push
aam
cmpsb
inc
and
sub
add
or
jne
xchg
xchg
adc
mov
lahf
lahf
xor
add
xchg
xchg
mov
pop
fcmovnbe
add
cmpsb
mov
in
orb
in
adc
pop
fbld
sub
je
fidivrs
dec
enter
push
cli
fistpl
mov
mov
inc
mov
test
and
les
dec
push
mov
sbb
pop
cmp
push
aam
pop
pop
mov
jge
adc
xor
add
in
lahf
rorl
aad
out
imul
pop
push
or
pop
shr
push
sbb
aad
pop
add
sahf
in
push
mov
push
mov
jecxz
arpl
xchg
mov
outsl
xlat
scas
sbbl
add
and
fdivrl
enter
enter
push
daa
fiaddl
adc
incb
dec
adc
outsl
jl
loope
lods
and
movsl
push
or
in
push
jne
fidivrs
push
mov
pop
fidivl
push
cmp
cmp
push
aas
push
dec
aam
int
bound
imul
mov
imul
push
add
add
ljmp
or
notl
xor
jne
push
add
xlat
fmull
adc
ja
and
orb
test
sub
iret
popf
sub
jmp
xchg
das
xor
je
into
sbb
cmp
rclb
in
push
fwait
sahf
mov
push
pop
mov
adc
mov
js
cmp
jo
mov
pop
mov
test
out
or
out
dec
mov
loop
mov
mov
mov
fldl
repnz
ljmp
inc
sahf
ret
jno
xor
repnz
and
je
fstps
adc
mov
mov
cmp
cltd
shll
incb
test
shll
add
adc
ficompl
mov
push
or
cmp
outsl
rorl
add
xchg
out
inc
jne
xor
je
mov
mov
loope
out
imul
imul
fisubrl
popf
sbb
into
scas
stos
xchg
ror
into
out
js
mov
out
pop
sti
ret
clc
xlat
cmpsb
xor
xor
loope
mov
movsl
mov
pop
es
into
jge
cmpsb
shlb
je
ljmp
jb
imul
enter
sbb
or
xchg
shl
mov
pop
shrl
adc
mov
jg
mov
push
xor
pushf
pop
sbb
mov
insb
mov
mov
cmp
jno
cmc
sub
stc
inc
xchg
push
add
lock
incl
je,pt
xor
dec
outsl
xchg
sbb
jae
sbbl
shll
mov
lret
xor
mov
mov
pop
inc
sub
dec
in
dec
mov
jns
pop
sbb
outsl
sti
leave
pop
and
mov
aas
xchg
addr16
or
push
in
gs
outsl
or
aaa
in
outsb
push
xchg
inc
mov
aaa
jecxz
pop
xor
cmpsb
cltd
push
dec
lock
insl
ret
inc
lahf
mov
xlat
adc
lods
notb
xchg
push
mov
adc
aas
popf
ljmp
bound
cmovne
xor
pop
sbbb
sub
or
aas
cmc
pop
mov
fcmovnb
mov
loope
and
enter
sbb
inc
xchg
add
pop
jb
pop
mov
xchg
jbe,pn
adc
test
or
adc
shll
aas
popf
push
push
addr16
jnp
imul
xchg
sbb
loopne
fcomi
sub
push
cmpl
sub
test
outsb
xor
pusha
lds
pop
push
popl
jnp
push
xor
mov
test
fdivl
xor
iret
pop
push
push
jecxz
ret
mov
ja
cmp
in
lds
xchg
mov
test
inc
xchg
xchg
outsl
leave
mov
jb
mov
lcall
bound
mov
aaa
mov
and
jmp
sahf
das
inc
jge
gs
mov
push
push
aad
test
jge
cmp
ss
adc
out
cmp
dec
out
shl
daa
stc
and
sbb
aad
pusha
mov
in
leave
add
mov
popa
call
ja
jp
push
pop
fadd
push
sbb
mov
jle
aas
jo
jno
jge
xchg
insb
push
sbb
pop
push
or
pushf
js
out
or
mov
pop
mov
mov
cmpsb
pop
das
mov
mov
dec
push
pop
es
xor
push
jg
cs
dec
lahf
mov
jge
push
push
push
lds
jmp
cld
in
out
jnp
inc
pop
movsl
jmp
cmp
imul
sti
push
push
repz
jge
mov
mov
sbb
into
repnz
pop
xor
pop
push
sub
pop
mov
aaa
call
lds
imul
xchg
add
xor
dec
add
lahf
sub
add
mov
testl
mov
stos
int3
sbb
aad
lcall
pop
in
movsb
call
push
dec
mov
xor
movaps
adc
mov
jmp
shlb
lock
and
mov
push
sti
int
mov
mov
sti
fwait
ja
fdivp
dec
sbb
pop
aad
sub
mov
push
cmpsb
adc
loop
ret
xor
pop
push
adc
out
cmp
inc
dec
inc
mov
fsubrp
xchg
dec
ja
xchg
adc
mov
ds
push
lock
sbb
bound
sti
jno
fcmovu
add
sub
and
push
lcall
sbb
jg
vmovaps
sub
push
dec
sub
sbb
popf
cld
jne
hlt
cld
sbb
mov
inc
loope
xchg
pop
in
or
popa
adc
push
inc
outsl
cli
adc
add
xor
sub
stos
xor
sbb
addr16
js
mov
lret
cmp
or
cmc
jae
jmp
sub
pop
sarl
xchg
repz
inc
cmpsl
out
push
inc
les
push
mov
pop
mov
test
mov
pop
push
cmp
push
and
jns
shlb
add
jns
inc
inc
out
outsl
rcl
lcall
jnp
bound
mov
and
lahf
inc
mov
jle
add
and
sub
jbe
mov
pusha
sbb
andb
xor
cmpb
aad
push
inc
js
cmp
daa
or
adc
inc
mov
aas
adc
jle
mov
test
sbb
pop
or
inc
jno
pop
test
inc
jp
mov
ret
icebp
sbb
loopne
dec
sub
jle
push
sbb
cli
cmpsb
dec
rol
lock
adc
aam
mov
jno
push
lds
push
bnd
lods
push
stos
std
push
lcall
subl
add
or
mov
fincstp
add
js
and
in
mov
lcall
aaa
in
xchg
and
movsb
add
mov
rcll
lea
jns
sub
aam
inc
movsl
std
jl
jno
or
or
jmp
lret
jmp
sub
mov
xor
sub
mov
sub
int
sbb
out
xchg
sbb
sti
cmp
jnp
sub
sbb
inc
dec
les
sbbb
fcmovbe
or
add
adc
lods
inc
loope
lds
leave
imul
int
sub
shl
fnclex
jno
mov
addb
push
imul
ret
dec
ljmp
ja
fwait
data16
cld
out
cmc
mov
mov
sbb
repnz
inc
sbb
add
fdivl
lds
lods
xchg
fidivl
ret
fs
fs
inc
je
push
cmp
pushf
jbe
inc
jecxz
cld
cmpsb
std
popf
mov
out
out
adc
cs
xor
pop
dec
popa
dec
idivb
repnz
inc
sub
out
lret
filds
outsb
xchg
mov
push
lock
xorb
mov
gs
out
jo
adc
sbbl
adc
xlat
mov
add
setns
imul
dec
loop
xchg
pop
loop
xor
cmc
or
jb
in
mov
mov
pop
pushf
add
jg
in
jmp
dec
aaa
xchg
push
xchg
aad
sub
jne
add
lock
into
out
lea
dec
push
jg
inc
lret
pop
add
test
stos
je
jne
out
sub
dec
test
xor
clc
fidivrl
xchg
cmpsb
into
lahf
jns
ja
or
pop
lahf
mov
lods
loopne
xchg
cmp
inc
lahf
outsl
adc
jbe
adc
aad
sbb
and
fisubl
pop
push
fsubrl
sbb
popl
fs
clc
flds
dec
push
push
in
hlt
inc
out
jnp
call
inc
and
mov
sbb
mov
icebp
addb
xchg
xchg
lahf
shrb
shl
je
xchg
pop
into
push
imul
mov
sub
fmuls
cmp
xor
inc
mov
cmp
inc
jns
sbb
xor
xor
ret
hlt
outsb
sub
mov
mov
push
enter
lcall
xor
or
loop
pop
xlat
icebp
cmp
je
movsb
mov
xchg
mov
adc
push
lods
push
sbb
or
mov
sub
aam
jmp
dec
outsl
cmpsl
fwait
pushf
dec
jb
sbb
leave
jne
pop
pop
mov
pop
jnp
adc
pushf
jg
mov
rolb
lds
iret
adc
jnp
mulb
int
inc
push
xorl
std
lods
or
fdivr
jecxz
sbb
push
pcmpeqb
aas
jns
sbb
xchg
xor
or
xor
popf
sub
xchg
les
inc
scas
add
push
cmp
sbbb
inc
push
pop
test
std
mov
lods
iret
push
ljmp
xor
outsb
push
add
ja
cwtl
pop
or
out
data16
in
test
es
cmpsb
loopne
es
pop
aaa
test
xchg
lods
nop
repnz
pusha
mov
stos
sbb
shrb
ljmp
das
jmp
repz
jns
adc
or
pop
and
in
sub
xchg
lds
fistps
sti
lods
cmpl
cmpsb
mov
mov
jmp
inc
call
xor
mov
sbb
push
inc
aaa
lcall
xchg
mov
scas
aad
cmp
push
cld
push
repnz
or
ret
mov
orb
push
fsubrl
out
and
mov
adc
fstpl
aad
mov
div
mov
pop
sub
mov
imul
mov
in
out
dec
or
add
sbb
fsubs
and
mov
cmp
mov
clc
and
pop
lods
popa
dec
fstpt
arpl
ret
or
sub
aaa
inc
xchg
ja
cwtl
xor
cmp
xor
sbb
nop
rcll
mov
les
xor
out
adc
mov
sub
in
aad
ds
sbb
incb
dec
or
fcompl
mov
lret
ret
add
pusha
in
push
out
lock
or
mov
push
pop
sbbb
bound
adc
insl
aad
xchg
je
leave
dec
lret
push
cwtl
lahf
dec
outsb
add
orb
cltd
mov
aaa
shll
outsb
jo
cmp
adc
cmp
in
jl
scas
aas
lods
adc
mov
scas
or
mov
inc
das
mov
jbe
arpl
inc
lods
cltd
lods
fcmovnu
push
stos
push
cmp
mov
mov
out
clc
lcallw
outsb
loopne
out
aas
mov
outsb
in
mov
fistps
pop
jb
pop
push
pop
adc
fsubrs
mov
scas
mov
pop
les
xlat
stos
fs
mov
negl
cli
jecxz
jg
jmp
pushw
jbe
jne
xchg
aaa
push
push
nop
add
jle
repnz
das
jbe
sub
out
and
std
sub
pop
sbb
inc
jno
pop
test
mov
je
pusha
push
nop
push
pop
pop
shl
push
adc
imul
adc
mov
push
jp
adc
test
xchg
dec
fiadds
popf
fldcw
call
sbb
pusha
fs
pushf
fsubrp
xor
repnz
cmp
stos
ficoms
push
xchg
xchg
pop
cmp
or
xchg
scas
jnp
jae
in
test
adc
push
cmp
mov
cmp
cmp
insl
scas
xchg
pop
mov
jl
imul
lcall
adc
cld
lock
adc
imul
adc
mov
das
pop
aaa
xchg
jl
repnz
addr16
add
xor
mov
jge
cmp
es
out
cmp
and
cmpsb
ret
fsubrs
push
hlt
push
adc
ret
bound
jns
adc
sub
cli
cli
and
loop
xchg
push
push
into
les
cltd
cmp
push
shrl
mov
pop
in
mov
jecxz
jl
dec
in
jno
inc
or
xor
cmpsb
push
jecxz
push
or
ja
out
or
dec
cmpsl
aas
and
aam
xchg
mov
mov
dec
bound
test
aam
movsl
xchg
inc
xchg
sarb
into
lock
xchg
or
pop
pop
mov
fcoms
cmpsb
outsb
test
divb
pop
cld
fnstenv
sub
xor
xor
mov
insb
cltd
imul
in
sbb
in
jnp
test
rorb
lret
inc
pop
imul
sbb
sub
enter
dec
stos
int
mov
loope
mov
sbb
push
pop
cs
jno
push
mov
or
stos
fwait
scas
test
push
out
cli
mov
popf
movsl
aam
je
mov
insl
add
sbb
jg
jle
repz
loope
das
mov
data16
push
rolb
jne
gs
lods
mov
aas
jl
mov
xchg
jecxz
xor
nop
leave
xor
xchg
adc
ja
add
push
pusha
jne
or
addr16
jo
xchg
or
mov
jecxz
mov
mov
scas
push
xlat
pop
outsb
fstpt
sti
mov
xor
sub
lock
or
push
jp
lahf
dec
jge
cwtl
mov
jae
push
cmp
iret
inc
or
fidivs
mov
pop
and
nop
cltd
cmp
xchg
pop
push
cld
sti
mov
or
adc
sub
out
cmp
pop
nop
cs
xor
cmp
inc
jl
pusha
aad
dec
movsl
dec
pop
sti
xor
ret
cmpsl
negl
xchg
sub
ficoml
ja
mov
inc
or
jo
mov
fsub
arpl
or
int
xor
pop
cli
mov
xlat
pop
sbb
or
xor
dec
jnp
add
pop
lea
arpl
outsb
sbb
inc
and
mov
mov
lahf
sbb
and
mov
inc
push
sar
sbb
stos
movsl
ljmp
into
loop
cmpsl
pop
les
mov
test
cmpsl
test
cmp
xor
jmp
push
and
mov
clc
mov
cltd
xchg
mov
out
call
enter
adc
mov
es
pop
sub
xor
dec
and
inc
cmp
inc
or
into
ret
fwait
and
mov
mov
xor
xchg
lret
jb
out
es
pop
and
imul
xchg
outsl
mov
and
adcl
push
xor
push
ja
sub
pop
jecxz
xlat
imul
mov
pop
pop
mov
mov
scas
repnz
js
fmull
sub
dec
lea
inc
mov
bound
notl
mov
out
roll
inc
insb
jecxz
sub
cmp
gs
stos
mov
les
bound
aad
push
arpl
clc
mov
add
mov
stos
push
inc
xor
xor
lea
movsl
dec
xchg
clc
sub
sbb
adc
mov
add
imul
not
push
std
subb
clc
cwtl
inc
pop
gs
in
push
pop
or
in
jg
pop
les
push
push
and
push
mov
daa
add
push
cmp
ljmp
sub
push
sti
mov
lea
daa
mov
jnp
cmp
dec
outsl
int3
inc
mov
sub
push
add
mov
lds
lds
adc
xchg
inc
xchg
test
add
and
xor
int
xchg
push
cmp
stos
insl
shrl
stc
sbb
lods
stc
sti
jb
lods
inc
fmull
and
repnz
ret
add
jl
jb
cwtl
and
aam
xor
xor
xchg
lods
dec
sub
frstor
ja,pt
xor
add
mov
sbb
sbb
mov
int3
arpl
add
mov
ja
mov
mov
push
lcall
imul
xorb
pop
cwtl
sbb
in
xchg
shlb
dec
add
fstpt
mov
xchg
xchg
sar
push
loope
xchg
cmc
adc
rolb
fwait
movsb
je
add
lods
cmp
repnz
pop
ror
movsl
cmpsb
mov
leave
inc
faddl
xorl
testl
adc
xor
orl
sti
mov
xor
push
sbb
dec
push
in
push
mov
jp
mov
popa
add
ret
or
xchg
xchg
lahf
ds
fwait
push
imul
mov
push
cmp
daa
decl
sbb
out
fidivl
pop
rolb
insl
sbb
hlt
xchg
push
jg
jmp
pop
shl
adc
inc
or
insb
push
and
rol
push
push
ljmp
pushf
push
and
jle
jecxz
mov
sub
push
push
mov
push
inc
xchg
jbe
cli
xchg
in
pop
xor
and
sub
in
das
mov
cmp
adc
sbb
aam
push
lods
les
dec
into
adc
std
add
pusha
lods
mov
xor
stc
ljmp
xchg
add
fsubl
ficoms
fucompp
push
sub
insb
adc
pop
mov
xor
rcll
fbld
hlt
push
inc
xchg
push
orl
inc
das
cmpsb
mov
shlb
sub
xchg
pop
je
stos
pop
sbb
mov
cltd
mov
test
loop
stc
xor
jg
inc
shll
inc
int
cmp
ja
jnp
or
aad
mov
mov
xchg
xchg
call
xchg
cmp
cmp
lret
cmc
scas
cmp
scas
adc
loopne
bound
call
pop
mov
int
cmpsb
push
stos
push
scas
dec
xchg
jb
xor
mov
int
pop
mov
jg
dec
scas
jmp
mov
jle
and
add
cld
mov
loope
aad
xor
xlat
add
lods
out
xor
scas
ror
xchg
stos
js
mov
or
fs
mov
stos
fwait
enterw
and
pushf
or
mov
cmp
jle
not
in
popa
adc
xchg
pusha
xchg
pop
inc
xchg
adc
data16
fmuls
out
test
ljmp
inc
adc
pop
addb
and
shrb
cmp
push
or
aam
inc
xor
jne
mov
pop
imul
mov
pop
mov
testb
mov
popa
push
cmp
push
cwtl
and
mov
inc
mov
sub
sti
push
aaa
pop
and
sbb
jecxz
stos
jne
sbb
xchg
mov
fucomip
iret
xor
push
int
sti
lahf
cmp
das
out
push
mov
pusha
mov
ret
mov
in
imul
sub
out
mov
push
js
mov
cs
adc
bound
xor
adc
inc
push
fwait
xchg
stos
dec
push
loopne
jb
ljmp
imul
or
add
pop
sbb
mov
jae
jnp
mov
adc
adc
stos
dec
fcomps
adc
dec
jp
xchg
mov
jle
stc
mov
xchg
push
mov
dec
test
aad
test
and
xchg
ljmp
mov
adc
test
pop
ror
mov
xchg
or
jne
push
xor
lock
adc
stc
inc
sub
arpl
or
aam
int3
push
popa
ret
or
fidivs
jo
or
cmp
pop
data16
mov
shl
jb
mov
add
imul
addr16
call
dec
movsl
inc
mov
shrl
loop
xchg
or
inc
dec
imul
sbb
mov
int
dec
pop
das
cmc
inc
cmp
add
f2xm1
push
mov
add
ret
iret
loope
test
jmp
dec
add
pop
sub
jge
sti
mov
and
pop
jmp
insl
pop
inc
inc
insb
or
mov
sbb
stc
cs
cmp
mov
cmp
pop
sub
iret
sbb
inc
lret
dec
dec
or
outsl
dec
inc
mov
xchg
aaa
arpl
fildl
or
and
or
mov
and
inc
dec
aaa
add
cmp
sbb
cs
scas
rcrb
loopne
push
sahf
aaa
sbb
lcall
push
xor
mov
lods
xchg
ljmp
dec
insb
sbb
loopne
fcomp
push
pop
sahf
lret
notl
sbb
repnz
jne
ret
fbstp
add
cmp
dec
cmp
cltd
and
je
inc
adc
pop
xchg
jbe
jmp
and
mov
jmp
xor
mov
in
xor
mov
scas
adc
pop
push
rclb
jg
push
lret
jnp
xchg
jle
sahf
pop
in
js
mov
adc
cs
pushf
cmpsl
or
sub
stos
jp
lcall
mov
mov
push
adc
in
xchg
ror
icebp
add
ret
scas
jns
imul
repz
test
pusha
sub
sbb
dec
sub
lods
sub
cmc
adc
or
jnp
jo
mov
leave
adc
sub
pop
xor
clc
lea
dec
je
aas
and
mov
pop
push
add
out
jge
sbb
mov
adc
push
push
xchg
sub
mov
mov
xor
push
je
cltd
popf
ret
out
jb
pushf
mov
popa
pop
fimuls
jl
int3
int
xor
mov
mov
xchg
cmp
xchg
loope
mov
gs
aaa
xchg
ds
dec
das
lret
mov
ljmp
outsb
sub
jp
fwait
jle
jae
in
jp
pop
push
xchg
test
mov
and
lret
xor
cmp
enter
rcll
cmp
imul
inc
sub
cli
and
sub
int3
nop
pop
pop
adc
out
lea
rcrb
ret
adc
lgs
xor
inc
xchg
scas
push
repz
mov
nop
adcl
sub
pusha
or
or
mov
inc
pop
lods
ss
ret
push
adc
jo
pop
mov
mov
pop
in
lret
test
cld
fcoms
xor
aam
inc
push
mov
adc
cmpsl
push
nop
xor
fadds
sub
rorl
outsb
scas
or
push
mov
adc
frstpm(287
ljmp
cmp
movsb
cmp
add
adc
mov
sbb
sbb
sub
pop
scas
push
and
cmp
lock
jno
movsl
xchg
pushf
loope
push
jecxz
inc
mov
lods
mov
jnp
lods
inc
test
lock
imul
push
and
fldt
loope,pt
test
mov
test
movsb
xchg
and
jge
pushf
jb
xchg
movsb
lods
fs
mov
lret
scas
ffree
cmp
stos
cmc
fsts
ss
ss
lods
mov
insb
and
sahf
testb
xor
mov
xchg
sarl
scas
sti
ret
fisubrl
xchg
mov
fwait
sub
cmp
sbb
push
or
clc
mov
mov
fwait
aaa
fdivrl
out
pushf
sbb
xchg
aas
mov
xor
pop
lret
pop
movsl
and
sti
sti
loop
jp
mov
push
pop
inc
xchg
add
or
lcall
lahf
xor
pop
sbb
cmpsb
pop
jne
sub
push
or
xor
add
gs
int3
dec
sbb
mov
sub
xor
out
dec
jmp
lods
cmp
mov
mov
shlb
sub
xchg
pop
add
mov
clc
dec
adc
sbb
jns
add
push
pop
dec
insb
roll
stos
xor
cmpsb
jecxz
xlat
lock
xchg
adc
and
stos
out
stos
mull
jnp
ds
adc
dec
push
ret
mov
cmpsl
xchg
mov
ret
insb
push
insb
cmpsl
push
cmp
aad
sub
stos
push
cmpsl
mov
inc
xlat
lods
and
xchg
int
push
fwait
and
xacquire
mov
fbld
jle
add
je
sbbb
xchg
stos
add
mov
out
pop
lcall
loopne
mov
dec
xchg
sarb
cld
jns
xor
iret
ss
sub
leave
xchg
mov
aad
gs
adc
xchg
aas
icebp
push
add
xor
repnz
xchg
xor
lahf
fwait
xor
movsb
test
sub
rcrb
mov
insb
push
pop
loopne
push
nop
pop
jo,pt
mov
jne
sub
jl
xchg
imul
sahf
jp
fnsave
rcrl
cwtl
mov
push
dec
aad
sbb
fistpl
clc
or
mov
out
pop
cwtl
xor
aas
aad
addr16
cld
lods
dec
or
push
cmpsb
sbb
dec
fwait
sub
xor
out
mov
sarb
icebp
sub
and
mov
adc
test
mov
mov
fistl
stos
mov
and
stos
cwtl
push
jno
test
xchg
mov
and
aas
gs
les
stc
or
test
push
add
leave
fnstenv
sub
lret
cwtl
jb
adc
sub
sub
pop
cmpsb
nop
jno
sub
cmp
mov
sbb
cmp
popa
xchg
stos
dec
adc
xchg
dec
push
arpl
xchg
test
aas
lahf
sub
in
cmp
xor
fisttps
test
in
aam
jnp
leave
test
mov
fwait
push
mov
imul
mov
adc
loop
fyl2x
xlat
mov
imul
cmc
pop
add
pushf
stos
int3
fxam
lock
andb
loop
sub
inc
mov
push
jg
mov
fcmovbe
clc
inc
int
out
lcall
xchg
jns
movsl
imul
sub
xchg
sbb
cld
sahf
mov
outsl
imul
xor
aaa
lret
js
xor
jp
xchg
pop
xor
int
mov
stos
loope
adc
xchg
xchg
sub
jmp
cwtl
pop
cmc
inc
jp
outsb
mov
in
sbb
mov
adc
out
push
pusha
ss
sti
hlt
cld
jne
adc
dec
andl
int3
or
icebp
jne
rep
sbb
push
mov
notl
or
and
stos
mov
jmp
repnz
push
and
inc
out
add
and
stos
mov
clc
xchg
mov
cwtl
sub
fimuls
sbb
jge
lds
pop
mov
dec
lahf
or
cmc
orb
mov
add
mov
mov
mov
jp
int
out
insl
imulb
movnti
cmp
inc
ljmp
add
inc
mov
mov
cmp
lahf
stc
pusha
pop
mov
and
xchg
pop
pop
sti
js
lahf
dec
cmp
dec
and
stos
mov
adcl
int
ljmp
sub
push
divb
push
cmpsl
jp
xchg
add
push
add
xchg
cmp
inc
ret
int3
cmp
jbe
arpl
mov
or
cmpb
mov
or
pop
jecxz
inc
mov
ljmp
int3
ret
inc
out
sti
dec
shrl
sub
mov
sub
adcl
divb
cmp
faddl
or
pop
fmuls
cmp
clc
movl
shlb
adc
mov
or
enter
stos
xor
mov
mov
xor
sub
pop
cwtl
sub
shl
jb
out
aas
push
cmc
xor
dec
fdivl
outsb
and
mov
insb
aam
das
cmp
or
cmpsl
cld
adc
cli
sarl
in
in
xor
rol
sbb
xchg
mov
fidivl
sbb
cwtl
xchg
inc
and
mov
and
imul
mov
sar
sub
mov
das
in
es
pop
sub
mov
add
stos
dec
mov
dec
stos
xchg
inc
mov
or
cmp
les
lods
lret
sbb
mov
fidivrl
jecxz
repz
lea
xchg
pop
orl
orl
mov
push
jge
lea
jg
mov
cwtl
jmp
and
and
inc
rorb
xor
mov
nop
mov
aaa
dec
mov
cmp
out
or
inc
and
pop
movsl
push
and
stc
mov
hlt
repnz
fwait
sbb
testl
jne
insb
les
dec
jae
xlat
enter
mov
xchg
push
mov
mov
mov
popa
dec
test
push
dec
xchg
sub
push
jb
mov
jne
negl
inc
mov
popf
mov
data16
inc
push
test
push
xchg
out
xchg
hlt
scas
out
jmp
mov
int
test
and
out
inc
and
imul
add
mov
hlt
cmp
lret
mov
mov
lcall
mov
ja
in
je
pop
test
leave
loop
bound
stos
mov
call
push
jg
ja
mov
push
jecxz
jne
into
outsl
xchg
cmpb
out
xor
daa
jp
stos
es
cmp
push
push
push
pop
sbb
in
mov
mov
cmp
mov
test
out
jne
test
inc
outsb
scas
cli
ret
lahf
xchg
icebp
and
adc
pushf
jb
inc
or
pop
mov
jae
add
and
mov
and
fs
mov
mov
pop
inc
aaa
cwtl
popf
ret
xor
movsl
je
pop
mov
in
mov
aam
xchg
mov
jecxz
and
int3
jns
xchg
mov
mov
pop
mov
insb
sbb
xor
push
aaa
insb
ds
add
xor
push
jmp
mov
add
icebp
dec
inc
jmp
gs
add
and
mov
repnz
jbe
add
lcall
ss
pop
cmpsb
imul
dec
gs
sub
incl
lret
andl
js
and
push
sbb
mov
imul
pop
push
push
lret
movsb
push
adc
inc
cld
stos
jge
cmc
mov
push
jno
ja
aaa
repnz
sub
push
pop
mov
nop
mov
dec
lods
bndldx
cmp
pop
rorb
mov
or
mov
push
into
test
insb
loop
clc
mov
push
flds
mov
or
sub
test
in
sub
or
pop
ja
xor
cmp
pushf
jecxz
sbb
ljmp
lods
loopne
xchg
leave
add
mov
repz
ret
sbb
addr16
or
and
mov
mov
scas
lcall
mov
pop
xor
sbb
xor
jne
xor
cmc
mov
ja
out
sub
sbb
mov
ss
outsb
pop
arpl
xchg
and
aad
adc
outsb
sbb
in
adc
xchg
mov
lock
sbbb
and
sub
sub
repnz
xor
mov
aad
pop
mov
dec
das
rclb
arpl
rcl
jnp
inc
divl
or
mov
xor
repnz
or
xor
pushf
lahf
jmp
add
mov
push
rorb
and
adc
jle
pop
in
xchg
pusha
xchg
outsb
xchg
sub
ja
sub
test
fs
xchg
fisttpll
mov
xchg
mov
pop
inc
pop
cmpsl
jno
lods
into
sbb
das
and
jp
inc
pop
adc
fwait
xor
test
and
mov
mov
js
add
ret
sub
pop
sub
shll
xchg
and
aaa
out
popa
sub
outsb
add
jnp
jns
xor
test
xor
ja
mov
xchg
sbb
rcll
fistpl
mov
jo
iret
add
xor
mov
mov
aas
jno
xchg
outsb
negl
adc
adc
scas
or
cmp
repnz
mov
jno
mov
cmpsb
push
xchg
jne
push
je
inc
mov
lret
add
inc
imul
js
fiaddl
sbb
inc
mov
shrb
pop
mov
mov
dec
inc
pushf
insl
mov
daa
in
dec
mov
push
dec
cmp
or
in
lcall
cmp
inc
adc
imul
sub
cmp
mov
mov
into
lds
fiadds
loopne
pop
sti
jo
jge
lock
loop
push
outsb
in
mov
push
jg
out
lods
mov
sbb
movsb
jbe
test
ss
pushf
mov
jne
inc
jecxz
aad
scas
mov
and
aaa
outsl
cmp
aad
hlt
movsb
ret
mov
nop
mov
addr16
mov
mov
stos
dec
sub
fcoml
or
cwtl
mov
int3
push
leave
add
cmp
mov
lcall
es
out
sti
aaa
push
orl
or
adc
or
push
scas
jmp
cmp
jge
push
jne
adc
rorb
in
jp
adc
pop
sarb
pop
mov
aam
mov
ret
and
adc
les
dec
add
popa
insb
shlb
add
mov
dec
ret
push
aaa
mov
std
inc
sub
pop
bound
adc
sub
jo,pt
cmp
jl
sti
in
push
loopne
and
lret
or
sub
or
mov
jne
popf
addr16
lock
pushf
bound
leave
push
mov
lahf
push
shl
inc
pop
jae
xchg
loop
in
or
fwait
ss
mov
xchg
inc
sub
jle
cmp
pop
cli
fsubl
mov
add
xchg
sub
ret
insl
leave
adc
gs
push
pop
je
jb
xor
push
or
sysexit
pop
js
sahf
push
shlb
rolb
sbb
mov
mov
test
pop
cmp
in
inc
stos
aam
mov
repnz
lret
add
adc
arpl
jno
lret
ret
outsb
push
adc
push
repnz
psrlw
cmp
cmc
cmp
sub
sub
xchg
fstpl
mov
rcll
subl
mov
xchg
xlat
xchg
outsl
inc
jl
xor
inc
add
mov
cmp
add
aam
sbb
data16
nop
movsl
sub
xor
fbstp
jle
xchg
add
and
loop
repnz
jl
inc
add
aaa
fistl
out
mov
or
xor
std
insl
mov
addl
push
xchg
rcrl
adc
jl
mov
mov
pop
cmpsl
jecxz
ljmp
fisubl
mov
dec
imul
jb
and
dec
out
dec
arpl
add
lcall
lea
cmc
jbe
out
push
push
or
insb
es
cmp
cmp
push
push
sub
out
inc
std
dec
shrb
pop
dec
leave
jle
add
scas
loope
sbb
push
and
inc
ret
adc
dec
test
push
mov
inc
jp
xchg
mov
sbb
cmp
push
loope
das
repz
pop
rcrb
dec
lock
popf
or
jge
and
adc
ljmp
cmpl
jmp
enter
fwait
mov
push
mov
ds
or
hlt
jb
push
mov
pop
pop
imul
aas
stos
inc
jbe
dec
out
xlat
loop
ficompl
divb
or
dec
int3
sbb
pop
ds
orb
dec
push
cmp
and
mov
inc
mulb
adc
popl
mov
stos
jecxz
sarl
and
dec
pusha
sbb
popf
imul
push
push
cltd
subb
cli
or
addr16
xor
call
mov
mov
mov
test
bound
xchg
ljmp
fsincos
dec
out
rcll
lahf
jo
mov
js
and
jecxz
jmp
cmp
xor
cmp
out
pushf
fsubrs
inc
iret
fwait
push
mov
xchg
fisubrs
out
es
fisubl
sahf
and
xchg
dec
mov
jmp
sbb
jbe
inc
cmp
aas
scas
rorb
mov
filds
daa
cltd
cmp
xchg
and
mov
xchg
cmp
leave
cmpsb
int3
test
xchg
jbe
and
aas
les
cmp
push
aam
popf
fwait
or
pop
stc
sub
lea
cmpsl
dec
bound
lcall
mov
jmp
adc
mov
adc
jge
sub
add
push
xchg
pop
into
mov
mov
imul
fcmovb
xchg
ret
xor
sub
mov
pusha
scas
add
call
xor
out
dec
xchg
and
add
arpl
test
mov
push
sub
iret
or
cmp
mov
xchg
int3
mov
jne
clc
and
call
sbb
jo
fwait
in
rcll
inc
push
or
sub
stc
or
sub
add
push
es
pop
cmp
cmp
fnsave
ret
adc
jns
testb
rcl
or
sbb
gs
jmp
jbe
adc
gs
movhps
mov
mov
lock
jl
adc
and
lret
loopne
pop
push
test
sbb
pushf
inc
push
shll
imul
xor
rcrl
jle,pt
cld
iret
mov
ret
addr16
jb
clc
arpl
adcl
icebp
jno
rcll
jl
sarb
es
call
fwait
sub
pop
scas
sbb
gs
push
dec
push
or
sbb
sub
into
bound
cmp
jg
icebp
mov
and
mov
mov
jb
ja
mov
nop
adc
jp,pn
jle
jbe
or
xor
testb
and
imull
cmp
xchg
in
or
pop
jecxz
loop
test
nop
xor
mov
cmpsl
and
dec
lret
xor
push
xchg
call
xlat
pop
es
mov
stos
je
jnp
jl
cld
pop
lds
adc
and
je
inc
jne
sub
fdivs
int3
sbb
stc
aad
out
inc
stos
push
and
mov
jae
insb
lahf
clc
jle
and
xchg
into
mov
mov
or
aas
mov
jl
loop
mov
gs
jmp
fsubr
insl
pop
mov
push
adc
lods
inc
mov
pop
inc
shrb
outsb
je
pop
sub
push
xchg
cwtl
ret
loope
lock
cwtl
push
lods
std
fstpt
cmp
pop
or
cmpsb
insl
sub
int3
in
push
dec
ljmp
es
xor
inc
ja
test
and
sti
loope
push
or
aam
lcall
ficompl
outsb
jg
and
xchg
inc
in
xchg
mov
cmpb
lds
and
testl
repnz
cli
in
inc
add
add
mov
mov
stos
adc
lahf
out
sub
sub
js
xchg
lea
call
sub
outsl
js
popf
or
mov
test
adc
jne
dec
mov
and
cmp
inc
xor
sbb
scas
popa
sub
int3
mov
sub
test
repnz
insb
jne
mov
and
jnp
jnp
sub
test
gs
and
movsb
ror
dec
in
push
mov
or
jecxz
jmp
jae
movntq
mov
jge
sarl
mov
xlat
mov
rcr
add
sbb
sbb
notl
push
dec
mov
xor
jl
mov
jge
js
inc
cmp
out
xchg
pop
mov
daa
js
sub
loopne
mov
pop
stos
lcall
call
sar
jecxz
je
cmp
cmp
loope
lods
xchg
jns
sbb
movsl
aam
repz
cmpl
pusha
out
dec
bnd
stos
pusha
mov
sbb
cmp
and
sti
pop
xor
xorl
push
jbe
inc
out
or
aad
and
cmpsl
aad
or
inc
dec
bound
shlb
inc
mov
or
mov
flds
sbb
jge
sbb
les
lret
jge
bound
xchg
mov
inc
xor
fbld
xchg
sbb
push
sbb
pop
sub
daa
inc
jle
pop
clc
or
add
and
lret
lea
add
push
sbb
cmp
lret
out
divl
adc
mov
stos
dec
xor
scas
icebp
mov
and
bound
mov
adc
loopne
xchg
push
rorb
mulb
mov
add
xchg
or
inc
or
shl
lret
and
loop
adc
jb
aaa
xchg
pop
cmpsl
cltd
scas
popa
dec
mov
rcl
outsb
sbb
popf
jne
or
inc
clc
sbbb
sub
push
mov
addr16
movsl
xchg
push
ret
jnp
loop
sub
lods
mov
and
lcall
sbb
cmp
es
insb
pop
stos
dec
adc
leave
rcr
loopne
cmpsb
or
sahf
cmp
ss
das
xchg
mov
cmp
xor
mov
ja
jae
mov
and
jmp
testl
lret
mov
mov
clc
enter
add
dec
insl
cltd
mov
lcall
movsb
push
int
mov
hlt
mov
mov
leave
pop
dec
sub
lds
add
insl
div
sub
fmull
inc
imul
jmp
or
mov
mov
stc
pop
out
ficompl
pop
popa
ss
imul
outsb
fwait
or
sub
mov
jb
imul
movsl
and
add
dec
pop
pop
pushf
or
adc
test
aad
xchg
imulb
cld
inc
insl
pop
pop
xor
lods
fs
mov
mov
data16
jnp
cmpsb
test
adc
repz
fucom
pop
fistps
daa
inc
stos
gs
pop
xor
add
dec
mov
dec
jno
out
ja
push
mov
sbbl
mov
cmp
mov
lahf
test
test
das
insb
lcall
pop
xor
mov
aad
xchg
in
insb
out
adc
out
xchg
outsb
fsub
imul
jmp
lods
ror
call
std
scas
mov
test
insl
aam
push
imul
int3
imul
or
inc
in
and
lret
popf
or
dec
push
cwtl
mov
cmp
je
std
insb
jecxz
sbb
in
shrl
jne
cmc
fwait
mov
mov
sbb
cmp
data16
ret
cmc
ja
dec
notb
roll
mov
iret
sti
out
rcr
xor
or
adc
push
imul
fcmovnbe
sbb
ljmp
test
es
insb
mov
mov
mov
rorl
test
mov
shll
or
mov
jae
cld
test
das
repnz
mov
rcr
shl
fldl
xor
je
les
push
cwtl
ret
das
stc
mov
fisttpll
mov
push
add
movsb
enter
icebp
je
in
scas
mov
lahf
lock
pusha
sub
push
pop
pop
fmull
call
dec
dec
lcall
push
addl
clc
or
sbb
loopne
fcoml
xchg
aam
xchg
leave
jmp
mov
and
and
das
xchg
outsb
cmpb
repz
outsb
jg
imul
stos
aas
xor
sub
sbb
movsb
nop
std
aad
popa
lea
fimuls
mov
fistpll
insl
mov
test
es
into
int3
add
fistps
and
sbb
jne
ret
push
xor
xchg
dec
pop
lock
lret
scas
gs
insb
cld
fcoml
dec
out
rclb
pop
cwtl
sbb
out
and
adc
std
into
aas
jge
popa
jp
sbb
mov
mov
jns
and
inc
adc
scas
cltd
push
daa
sahf
aam
sti
test
add
stos
jge
sbb
shrl
sub
dec
test
aas
leave
xor
lods
fldl
fidivl
loope
outsl
jne
repnz
in
stos
mov
and
fs
and
push
fwait
lcall
dec
int3
fsub
into
roll
push
or
popa
pop
cmp
inc
push
in
jbe
mov
dec
xchg
or
pop
sbb
jno
add
mov
lret
add
cmc
dec
inc
jmp
stos
test
jle
test
xchg
movb
push
testl
popa
cmpsl
fsubrs
mov
inc
mov
sbb
in
add
dec
andb
pop
cmpsl
lds
cmp
sbb
jge
aad
mov
mov
movsl
inc
movsl
sub
and
or
xor
jle
sub
aam
mov
clc
cmp
sbbb
add
inc
jae
mov
stos
pop
push
dec
out
push
rcrb
andl
das
into
add
addb
rol
lret
xlat
cmp
inc
add
lods
sbb
and
mov
fistl
mov
fsubrs
cmp
call
lret
mov
mov
mov
mov
add
dec
fidivs
loope
movsb
rorb
push
mov
std
or
pop
in
xor
inc
fimuls
sahf
push
ficomps
adc
cmp
or
sbbb
and
divb
push
cmp
shlb
pop
fdivrs
jnp
push
jnp
jns
mov
loop
jne
dec
cmpsl
push
adc
jmp
dec
aaa
lea
adc
jbe
xchg
pop
int
pop
adc
jge
pop
jle
jg
ss
jne
in
pop
call
les
or
sbb
pop
and
and
outsl
sub
scas
scas
stos
mov
cltd
xchg
lret
leave
dec
dec
ljmp
inc
imul
test
out
mov
fdivrp
mov
nop
jle
idivl
push
lds
xchg
cmpl
fidivrl
adc
lret
shll
iret
mov
out
sub
outsl
push
repnz
outsb
test
stos
dec
je
pushf
aas
pop
hlt
push
cmpsb
repz
mov
sub
notl
pop
xlat
mov
fldt
lret
aad
or
sbbl
dec
push
call
push
sbb
insl
jp
adc
loope
cmpsl
adc
pop
dec
and
push
ja
add
sub
pop
mov
pop
cmp
jl
shlb
xchg
mov
sbb
stc
dec
ja
ret
insb
mov
jmp
sbb
xor
scas
mov
stc
in
orl
rcr
lods
pushf
xor
mov
adc
xchg
rorl
mov
jecxz
mov
jmp
jnp
push
jl
imul
sub
rolb
insl
and
ret
sbb
mov
or
jns
mov
mov
in
orb
jp
out
dec
jecxz
bound
sbb
mov
sub
push
mov
and
pop
shlw
mov
idivb
and
cmp
movsb
enter
stos
mov
lret
lds
out
or
in
prefetch
or
pop
scas
and
xchg
cli
outsl
stos
jmp
popa
push
push
dec
stos
std
scas
xlat
cmpsl
mov
int
push
out
cmc
mov
pushf
rol
push
mov
lret
dec
popa
fnstenv
fsts
mov
outsb
sbb
and
adcb
sub
adc
sahf
mov
into
ljmp
stos
mov
sbb
xchg
pop
and
sbb
add
dec
adc
loopne
cmc
pop
pop
add
sbb
hlt
pop
test
push
sbb
lock
movsl
jmp
push
push
aaa
cmp
fldcw
pop
inc
cmp
loope
xchg
dec
fbstp
das
sbb
repnz
pop
sbb
aad
ds
fnstsw
mov
test
arpl
mov
pop
mov
sti
xor
pop
dec
sbb
sbb
cmp
adc
ljmp
dec
test
sbb
fdivs
xchg
in
sbb
rcrl
jecxz
into
cmp
or
xchg
out
jns
cmpsb
jle
lahf
or
push
call
sbb
adc
xchg
adc
repz
mov
pop
lret
xchg
mov
bound
cs
xor
mov
lcall
in
or
sub
lods
aaa
sub
or
inc
jp
push
aad
and
mov
mov
cmp
and
test
ss
lcall
shll
mov
inc
sarb
les
jl
inc
ret
pop
rcl
push
sarl
xor
add
add
sbb
cmp
sub
aas
addr16
and
cmpsl
ret
jle
xchg
pop
jge
loopne
in
das
daa
lret
dec
mov
int3
insb
popa
adc
push
aas
loopne
push
or
pop
mov
sub
mov
out
bound
rcll
mov
movsl
lea
insl
push
mov
fisubl
adc
stos
sti
shrb
out
sahf
adc
stos
addr16
mov
inc
xchg
lods
jg
jle
shr
gs
xor
clc
xchg
dec
int3
xorl
aad
aas
in
jae
ret
enter
xchg
dec
xor
mov
daa
or
or
stos
sbb
lcall
add
pop
push
es
movsl
cmc
push
test
dec
xchg
imul
push
pop
cltd
xchg
out
mov
push
test
mov
pusha
xchg
test
jp
xchg
call
leave
insl
mov
out
int3
fidivs
ja
add
xor
push
jge
dec
mov
jbe
mov
neg
daa
addr16
mov
sub
add
mov
adc
clc
mov
imul
idiv
aas
adc
dec
hlt
adcb
mov
imul
mov
fsubrs
movsl
jecxz
lods
ljmp
pop
cwtl
test
mov
negb
inc
int
mov
and
push
cwtl
sbb
jno
in
jg
sbb
inc
push
in
scas
cld
xchg
lods
pop
test
mov
cltd
xchg
push
add
mov
dec
outsl
adc
andl
aaa
jmp
ret
dec
mov
push
divb
adc
adc
jmp
push
mov
inc
sahf
imul
scas
out
cmp
popf
test
in
xchg
and
jg
stc
bound
add
jp
js
inc
pop
pusha
xor
pop
add
cli
andl
mov
mov
push
out
pusha
pop
mov
dec
lds
outsl
jbe
leave
lret
sub
inc
add
and
test
hlt
insl
mov
lcall
mov
cli
dec
popf
mov
mov
xchg
push
mov
pop
jg
out
testl
mov
xchg
cld
mov
jno
jmp
rcl
je
lret
mov
pop
jb
push
fimuls
in
popl
lret
icebp
dec
fsubrs
popa
or
mov
jp
ds
jmp
jmp
dec
dec
adcl
int3
insl
ja
repz
out
mov
mov
jne
sub
nop
ror
dec
push
or
ret
int
mov
das
push
fisubrl
fwait
aaa
repnz
jno
mov
stos
xchg
jae
cmpsl
jle
push
xchg
in
cmpsl
idiv
add
cmpl
inc
inc
jp
jle
test
pop
dec
mov
add
xorl
dec
jne
push
xchg
inc
lret
leave
lret
push
ficomps
xor
mov
pop
test
insl
lods
fdivl
cmpsl
and
mov
test
jno
xor
add
sbb
mov
push
push
popf
pusha
sub
pusha
adc
mov
sarl
sti
dec
sub
push
xchg
xchg
rclb
push
mov
mov
add
imul
imul
xchg
pop
push
pop
push
fistl
in
arpl
iret
pushf
repnz
xchg
dec
mov
sti
or
pop
mov
loope
and
lret
xchg
and
mov
sbb
stc
cli
push
mov
repz
dec
data16
and
in
popa
jb
or
fisttpl
pusha
stc
pop
insb
mov
cmp
lods
insl
pop
in
clc
pop
adc
add
pop
add
in
push
xchg
xchg
dec
push
mov
sbb
xor
xor
xchg
dec
jmp
outsb
add
adc
push
xchg
outsb
sti
inc
inc
out
fnsave
sbb
hlt
mov
pop
insl
in
and
push
inc
mov
call
ljmp
xor
imul
arpl
mov
add
xor
mov
dec
out
insb
pop
pop
cmpsl
lods
dec
push
inc
mov
cmpsl
mov
jne
dec
pop
inc
mov
or
fbstp
aad
std
cmp
cmc
hlt
enter
std
cmp
aas
dec
jae
bound
iret
stos
push
test
push
jecxz
repz
das
cmp
mov
xchg
addr16
cmpb
push
jecxz
int3
into
das
adc
push
xor
aas
adc
test
cmp
mov
mov
pop
iret
dec
adc
popa
into
cs
adc
aaa
sbb
push
xlat
test
das
addl
pop
inc
or
mov
into
test
push
mov
int3
push
icebp
aaa
dec
roll
sub
aaa
mov
sbb
hlt
mov
lcall
mov
call
or
add
cmp
jne
sub
sbb
push
cmp
xor
push
xlat
cmpsl
loope
or
jecxz
stos
test
xchg
push
stc
jl
aaa
and
ljmp
xor
cmp
pushf
sub
test
sub
mov
mov
jo
inc
scas
and
xor
add
add
pushf
fsub
push
and
gs
mov
push
stos
sbb
jne
leave
adc
enter
and
cmpsl
jno
xor
cmp
popa
or
dec
test
icebp
jmp
lcall
mov
cmp
call
stos
repz
arpl
outsb
inc
arpl
fwait
cmp
add
xor
xchg
rcr
iret
mov
cmp
pop
insl
arpl
pop
lret
pushf
bound
or
cmp
jbe
lods
fiaddl
adc
cmpl
add
rcll
pop
scas
add
int3
xor
jmp
xchg
stos
mov
add
dec
inc
mov
cmp
xor
mov
xlat
add
jae
lret
int
aad
out
and
out
pop
adc
icebp
movsl
pop
lret
fmuls
stos
xchg
pop
sti
inc
jecxz
push
das
adc
mov
sub
xchg
loope
mov
sbb
cld
pop
cmp
adc
mov
push
sar
repnz
imul
pop
gs
inc
or
mov
cmpsb
leave
push
and
mov
hlt
repz
xor
pop
pusha
xor
fidivs
sbb
mulps
test
sbb
mov
adc
inc
xchg
jmp
ja
aam
and
add
jo
aas
js
push
mov
out
lock
pop
sahf
shrb
add
mov
icebp
popf
add
push
jle
inc
test
or
outsl
shlb
clc
aad
push
sub
or
shrb
cmp
movsl
movsb
jecxz
pusha
lcall
cs
jecxz
gs
xchg
mov
xlat
cmp
repnz
sbb
inc
mov
sti
push
cli
and
and
sahf
add
nop
xchg
adc
dec
mov
pop
push
and
and
shll
iret
push
xor
cs
mov
cld
mov
ret
call
fdivrl
mov
icebp
rclb
or
push
inc
or
ljmp
sbbb
in
shll
add
out
push
dec
shlb
mov
inc
andb
xor
fldl
adc
xchg
pop
xor
sbb
or
test
xchg
add
cli
cmp
inc
mov
push
and
cwtl
and
inc
or
mov
fimuls
out
dec
adc
outsb
xchg
mov
dec
jle
iret
jmp
dec
mov
hlt
inc
sbb
fistpl
inc
rcll
xor
adc
adc
mov
push
out
push
orl
movsb
push
testl
add
and
sub
sub
pushf
mov
mov
or
test
add
mov
mov
gs
sbb
sbb
mov
ss
test
add
subl
dec
subl
decb
insb
out
movsb
push
cmp
imull
mov
stos
insl
repnz
sbb
in
bound
mov
aam
das
movsb
pop
in
imul
repnz
mov
pusha
int3
mov
adc
mov
adc
aam
repnz
xlat
iretw
lahf
rorl
loop,pn
lds
dec
std
out
cld
lods
push
pop
add
push
dec
add
push
mov
mov
pop
push
jmp
fdivl
ret
mov
cli
leave
cmp
sbb
hlt
popa
out
mov
mov
adc
xor
imul
jg
fwait
mov
aam
ss
mov
out
mov
pop
cltd
lcall
mov
ret
out
sbb
sbb
fstp
inc
cmc
inc
aam
sbb
frndint
jb
loop
dec
add
insb
stos
cmp
mov
leave
push
or
enter
mov
incb
gs
test
ret
rcrl
mov
inc
dec
push
aas
dec
imul
mov
jl
push
push
fistl
add
inc
push
or
or
pushf
pusha
aaa
sbb
mov
ds
xchg
xchg
lret
mov
sahf
addl
push
or
fstpl
dec
inc
js
mov
mov
xchg
arpl
and
pop
repnz
out
sub
inc
push
or
mov
aaa
outsb
mov
bound
mov
inc
stc
mov
jb
les
dec
jmp
flds
mov
add
push
test
add
xor
inc
xchg
xor
push
jbe
stos
hlt
leave
bound
shlb
inc
shll
and
popa
rcrl
dec
dec
mov
imul
insl
scas
mov
loopne
jno
push
xor
inc
fldl
mov
or
sbb
pop
dec
dec
mov
jmp
adc
pop
dec
or
mov
mov
mov
jnp
stc
out
imul
pop
cmp
out
dec
push
push
jbe
mov
mov
sub
into
adc
xchg
cmpsb
pop
cltd
mov
mov
adc
addl
mov
mov
in
lods
pop
in
enter
adc
push
mov
iret
mov
stos
or
js
js
jns
push
xchg
adc
jbe
stos
jg
pop
lret
jp
mov
xchg
call
adc
out
mov
cli
push
out
mov
cmp
scas
and
pop
pop
addl
rcl
imul
cmp
dec
or
in
fldenv
mov
adc
lods
cmp
xor
dec
icebp
sarl
pushf
push
aam
stc
lock
push
leave
cmp
lods
adc
push
xor
inc
and
cmp
js
mov
clc
loopne
jmp
inc
sub
loopne
popf
lahf
movsb
cmc
repnz
xchg
mov
rcr
popa
les
aad
addr16
lds
fsubrp
jecxz
mov
fistps
jb
cmpsl
mov
stos
xchg
cs
inc
ja
sub
shll
rcr
mov
out
repnz
test
lcall
jmp
pop
sub
hlt
mov
repz
pop
and
cmp
xor
cwtl
cmpsb
adc
jecxz
pop
push
imul
jns
aas
fcoms
cmp
cmc
sub
add
shrb
mov
adc
loop
mov
xor
cmp
jnp
movups
inc
push
add
push
and
adc
mov
sbb
mov
movsl
mov
int3
mov
jnp
mov
lret
sub
das
dec
mov
mov
aam
push
inc
pop
dec
inc
mov
out
mov
xchg
call
andl
xlat
sub
add
aam
ss
scas
mov
mov
insb
rcrl
pop
iret
mov
xchg
jmp
jecxz
inc
push
call
inc
movl
add
jge
inc
jg
jno
adc
mov
in
daa
fnstsw
or
jmp
scas
mov
enter
movsl
jle
popf
ja
out
fisubrl
iret
mov
mov
fs
jbe
lods
jno
pushf
icebp
cmp
jle
lea
int3
cwtl
jg
rol
aaa
movsl
sbb
loope
mov
pop
pushf
pop
adcl
xor
aas
ror
test
hlt
add
inc
cmp
pop
jl
mov
into
jbe
scas
shll
stos
into
sti
mov
sbb
mov
mov
sub
add
mov
mov
aaa
dec
push
xchg
sahf
test
aaa
in
in
mov
mov
scas
mov
mov
fmull
stos
ss
mov
mov
xor
add
cmp
mov
mov
cmpb
mov
and
loopne
mov
sub
mov
repz
lret
ja
testb
jae
cmp
fisubl
dec
mov
mov
ret
push
inc
leave
fldl
cli
sbb
inc
mov
sbb
pop
dec
stos
jle
add
adc
mov
adc
lods
cli
xchg
and
aaa
insl
es
push
test
jmp
push
insb
jb
add
scas
xchg
je
mov
enter
int3
pop
loope
adc
add
dec
jnp
push
stos
jge
scas
adc
fidivl
mov
push
or
cwtl
jnp
bound
enter
xchg
aas
xchg
insl
test
push
repnz
lods
imul
mov
scas
stos
dec
in
cmp
lods
xor
jecxz
mov
cwtl
xchg
aas
cli
mov
mov
imul
mov
xchg
imul
in
jns
cmovns
dec
pop
inc
mov
or
testb
mov
clc
xchg
push
addr16
mov
mulb
adc
pop
insb
out
jne
imull
adc
lret
nop
mov
shlb
lods
sti
aaa
sub
rcrl
xchg
addr16
pop
adc
outsb
cmpsl
ss
out
mov
mov
rcll
fildll
test
push
mov
or
xchg
mov
stos
and
insl
jne
into
mov
scas
je
hlt
mov
lahf
test
cmovs
xchg
sbb
xchg
adc
mov
sub
scas
adc
into
jo
adc
int
xchg
icebp
fsubs
jnp
sbb
adcb
insl
lock
mov
movsb
bound
adc
cmpsb
sub
sub
mov
imul
movsl
mov
cmp
cmp
scas
dec
stos
adc
jl
push
sbb
push
insl
repnz
xchg
add
out
push
jmp
mov
les
xchg
and
ret
imul
ljmp
fs
push
dec
rclb
pop
pop
or
mov
mov
hlt
ds
xchg
push
adc
xchg
lods
fcomip
stos
fisubrs
and
dec
cmp
test
int3
pop
mull
jecxz
pop
shlb
jbe
inc
pop
jns
shrb
push
cmp
imul
int
icebp
mov
loope
insl
mov
rcrb
aaa
inc
add
add
js
sbb
pop
cmc
add
mov
jl
std
nop
xchg
cmp
add
jg
sbb
out
cmp
xor
jne
xchg
mov
loop
push
pusha
enter
cmpb
cmp
popaw
jb
lods
subl
jmp
lret
arpl
sti
jno
fldenv
lock
add
mov
js
and
mov
xchg
jge
xor
xchg
sbb
clc
mov
lea
jo
sbbb
daa
dec
enter
fs
xor
pop
fmul
cmp
out
rcl
scas
and
push
pop
mov
mov
stos
fstl
sbb
in
cmpsb
orl
ljmp
or
sub
inc
out
lea
test
mov
sbb
or
pop
sub
push
push
mov
push
pop
and
out
xchg
sub
xchg
fisubrl
sub
cmp
sbb
lods
jbe
xchg
stc
xorb
push
cmp
inc
jne
mov
jnp
cltd
xor
or
sbb
or
push
mov
xchg
xchg
pusha
dec
sbb
in
out
mov
cmc
imul
outsl
imul
aad
push
fwait
cmp
xor
outsb
cmp
push
push
add
or
dec
test
daa
lock
dec
mov
orb
rcr
dec
xor
jno
cmp
divl
mov
arpl
push
insb
xchg
jb
jle
mov
xlat
pop
cmpsb
fwait
pop
dec
andb
jns
inc
dec
push
sub
push
insb
and
fcoms
fcoms
push
pop
out
mov
jg
pop
fisubl
xchg
cwtl
and
xchg
xchg
jae
adc
push
sbb
shrb
cmp
cmp
xchg
xor
and
repz
or
imul
jge
decl
lods
pop
cli
mov
mov
mov
lds
pop
addr16
rclb
add
cmp
jnp
add
inc
ret
js
out
inc
cmp
or
xor
xor
xchg
stc
ds
outsl
repnz
and
out
dec
jmp
loope
out
inc
cmc
mov
add
xchg
jno
add
and
adc
inc
pop
cmp
inc
les
data16
mov
in
or
cmpsb
fisttpll
mov
outsb
jge
and
shrb
adc
fldenv
addr16
test
mov
push
push
cmp
inc
or
aas
lock
outsl
lea
inc
adc
jno
push
mov
mov
hlt
push
xchg
pop
pop
loopne
arpl
cmc
out
and
mov
mov
sub
outsl
sub
jg
inc
push
and
cmp
sub
ds
jle
sbb
fstpt
scas
cmp
sahf
pop
rcl
sahf
ret
int
mov
inc
xor
sbb
mov
fcomps
in
and
in
pusha
jne
loope
sub
xor
jne
adc
je
fidivrl
js
push
dec
imul
arpl
ficomps
add
jg
dec
add
je
inc
jbe
inc
outsb
std
insl
subb
xchg
push
or
mov
and
pop
push
repz
out
xchg
stos
ljmp
movsb
sbb
xchg
pop
mov
cmc
add
xor
in
pop
subps
enter
xor
mov
sub
adc
mov
popl
imul
or
pop
in
dec
js
mov
and
xchg
std
nop
push
pop
rol
pusha
stos
in
or
dec
js
and
dec
ret
fidivs
mov
fdivrs
dec
mov
rcrb
jbe
mov
es
repnz
sbb
lcall
sub
cltd
pop
and
add
aam
std
cmc
adc
dec
inc
addr16
popa
xchg
stc
es
ljmp
push
test
sahf
inc
adc
xor
cmpsb
cmp
in
inc
in
fsubs
and
push
int
int
int
pop
jecxz
dec
jmp
add
push
dec
gs
lcall
sub
jg
lods
mov
push
ret
ret
sbb
outsl
dec
subb
js
sub
add
cmp
mov
cwtl
data16
lahf
inc
insl
add
xchg
mov
dec
or
jp
mov
mov
and
mov
bound
movsb
test
imul
sbb
xor
xor
inc
and
lcall
xor
xchg
icebp
mov
add
ret
sahf
cltd
insl
push
mov
fiadds
fcoml
add
cmp
xchg
inc
jo
bound
call
dec
xor
out
imulb
pop
inc
iret
mov
lea
rcl
mov
cmp
mov
aaa
adc
or
xchg
outsb
pushf
sub
adc
lods
push
call
lods
mov
push
xchg
fcomi
stc
rsqrtps
ljmp
shll
pop
int
jno
lods
cmpsb
mov
stos
xchg
add
fldt
ficoms
or
mov
and
jge
sahf
and
testl
push
or
inc
cli
or
jnp
hlt
mov
xchg
repnz
or
popa
pop
cmp
test
sti
adc
push
mov
add
or
std
xor
adc
lahf
ret
mov
push
xorb
pop
pop
out
jecxz
jl
das
jno
negl
add
fstp
mov
jp
jge
cld
mov
repnz
dec
hlt
jnp
cmp
inc
xor
loopne
and
xlat
or
xorl
jo
pop
dec
sub
cli
mov
repz
xor
lahf
sahf
adc
add
addr16
mov
fwait
enter
cmp
pop
subb
popf
mov
mov
gs
cs
or
les
mov
xor
and
sbb
jecxz
das
leave
cwtl
pop
mov
inc
sub
jmp
mov
cltd
add
push
ror
lahf
sub
pop
or
pusha
fwait
or
xor
push
xor
push
cmpsl
loop
cmp
loopne
xor
adc
stos
xor
sbb
rcll
cwtl
add
ret
sbb
inc
addr16
aam
xor
rolb
dec
pop
jmp
sub
and
call
mov
std
das
pop
xor
in
cs
shlb
incl
lds
xchg
jb
or
fdivl
sarb
sbb
aam
mov
add
clc
mov
lret
xlat
mov
and
cmp
hlt
and
popa
xchg
outsl
jo
lock
in
mov
pop
pop
fisttpll
add
mov
lret
les
add
mov
sbb
and
loopne
or
iret
ljmp
mov
out
xor
shr
and
inc
sbb
rol
gs
insl
push
test
push
repz
add
mov
mov
aas
scas
inc
mov
lods
ret
add
mov
lret
cmpsb
pop
mov
xchg
mov
xchg
shlb
jns
sbb
lock
les
push
insb
stos
xor
cwtl
sbb
std
push
or
push
inc
cld
dec
mov
dec
iret
xchg
push
imul
mov
sub
shll
das
lea
hlt
xchg
jecxz
sbb
pop
gs
xchg
xchg
inc
test
sub
loop
pop
push
loop
push
out
cmpb
sbb
ss
sbb
sub
mov
std
xchg
adc
push
mov
data16
mov
mov
and
push
pushf
lea
outsl
into
insl
jge
jl
mov
movsb
jne
in
jne
mov
sbb
je
xchg
in
les
mov
adcb
sbb
cmc
jns
or
stos
jo
lds
mov
mov
pop
ja
cmp
mov
lret
leave
lds
inc
scas
inc
mov
dec
mov
scas
mov
orb
cs
pop
lret
stc
and
out
je
lea
pushf
xor
fsubrl
mov
mov
cmc
lods
inc
stc
pop
cmp
rcl
cmc
sbb
add
mov
push
repz
mov
filds
loop
out
cmpb
xor
xor
xchg
mov
adc
movsl
xor
push
mov
test
add
insl
outsb
insl
rcr
mov
in
js
mov
inc
sar
das
ljmp
je
jmp
stc
pop
sbb
in
inc
in
and
cmp
movsb
aad
mov
xor
shll
ja
lret
enter
pop
push
lds
jl
mov
mov
mov
dec
push
call
cmp
imul
cmpxchg
fdiv
inc
bound
jno
popa
sbb
mov
mov
ret
jbe
or
jg
xor
sub
or
sbb
add
lods
dec
test
jbe
xchg
pop
push
pop
out
loop
dec
xor
jg
test
lcall
add
nop
add
cmpsl
out
xorl
cmc
movb
jbe
inc
loope
mov
aad
bound
cmp
cltd
add
insl
push
inc
pop
out
fcmovnbe
cld
inc
cmp
scas
adc
cmc
add
js
je
jae
xchg
rcrl
repz
insl
in
xchg
jge
mov
insl
cmp
pop
negl
push
adc
rcrl
es
push
test
cli
and
int
jo
pop
adc
inc
mov
and
aas
jno
gs
jnp
fistl
jecxz
push
iret
push
shlb
subl
ja
pushf
push
or
enter
mov
jbe
pusha
and
xor
adc
fiadds
addb
ret
sbb
outsl
into
mov
movsb
and
rclb
das
gs
or
push
mov
mov
mov
xchg
imul
cmp
xchg
aas
imul
mov
jns
addb
lret
fcoml
inc
inc
sbb
add
mov
pop
mov
lcall
outsl
mov
mov
mov
fwait
movsl
xchg
jbe
dec
incl
insb
mov
inc
mul
mov
mov
pop
pop
xchg
add
mov
push
out
les
mov
dec
fidivrs
loope
jae
lods
scas
and
mov
mov
lds
pop
shll
mov
aaa
repnz
rolb
ror
jns
std
in
cmpl
je
fbstp
mov
xchg
lahf
movd
adc
or
ret
movsb
mov
std
xor
xor
mov
stos
cmp
dec
push
sbb
pop
scas
xchg
push
daa
add
pusha
xor
gs
mov
clc
ja
pop
jo
mov
jno
cmpsb
jb
daa
jo
repz
push
loopne
mov
jne
ret
mov
sbb
iret
xchg
in
lods
mov
sti
mov
mov
nop
or
cs
cmp
sbb
cltd
pop
jnp
push
test
adc
ret
dec
adc
rorb
outsb
push
ljmp
dec
pop
popa
addl
cmpsl
dec
jmp
or
call
cld
fs
inc
lret
loopne
cmc
inc
mov
decl
shrl
pop
iret
dec
out
sahf
ds
lahf
testl
insb
and
jl
push
dec
ss
cmp
mov
lods
in
ds
das
sub
inc
aam
lahf
cmp
repz
lahf
push
call
ja
xorb
in
int
lahf
sti
mov
popa
mov
stos
mov
mov
fidivrl
push
jnp
leave
xorb
mov
jle
mov
xchg
in
lahf
shlb
shlb
jg
mov
push
cmp
mov
pop
sbb
cmp
fsts
lods
dec
mov
inc
xchg
rcrl
push
clc
ss
xor
ret
cmp
pusha
mov
push
out
xlat
shrl
sahf
push
aam
push
subl
xchg
and
in
fstl
add
imul
pop
loopne
xchg
adc
jbe
pop
push
mov
test
es
enter
mov
jbe
pop
leave
sahf
ljmp
jne
adc
movsl
lock
fdivrs
jp
rcrl
sbb
cmp
fisubrl
lods
xchg
push
jge
jnp
cmp
jnp
dec
imulb
push
mov
test
in
imul
pusha
mov
arpl
or
xchg
test
cld
das
pop
jae
sub
pop
es
outsb
push
push
add
cs
imul
xlat
push
loope
mov
or
jns
cmp
fmul
insb
sahf
mov
fwait
jb
or
stc
sub
jecxz
sub
inc
mov
or
das
mov
jl
jae
mov
in
add
mov
clc
lret
and
or
mov
gs
xchg
out
fs
cwtl
push
test
lret
popf
fucom
mov
aas
fiadds
stos
sbb
frstor
int
push
out
mov
enter
inc
lea
mov
xlat
fidivrs
mov
fsub
cmp
jns
mov
hlt
adc
shll
testl
jecxz
in
rcrl
daa
jbe
fwait
dec
stos
xchg
jge
add
dec
push
mov
pop
sbb
icebp
xor
xlat
das
arpl
inc
sbb
lods
hlt
in
push
les
push
insb
mov
mov
int
adc
sub
test
jecxz
dec
jl
std
mov
iret
orl
xchg
ljmp
daa
mov
inc
data16
or
ds
pop
sub
push
icebp
sub
pop
mov
mov
je
sub
sub
addb
sbb
or
mov
push
fisttpl
fstpt
int
and
sub
xchg
push
mov
in
mov
push
add
jge
mov
int3
xchg
dec
rdtsc
mov
out
cmpsb
pusha
andb
adc
hlt
out
notb
xor
test
aad
pop
mov
divl
jbe,pn
pop
scas
adc
scas
xor
dec
ret
fidivs
mov
push
push
jl
inc
insl
int
andb
test
fcompl
repz
jg
hlt
test
ja
arpl
mov
arpl
bound
push
outsl
push
mulb
fstpl
sbb
lock
inc
adc
test
inc
push
xor
fistpll
cld
mov
or
xchg
push
xor
inc
stos
repz
leavew
shl
fdivr
push
mov
jno
addr16
lods
addr16
sub
jbe
loopne
and
adc
or
push
dec
lcall
push
lcall
sbb
inc
mov
dec
lea
push
mov
push
push
fistpll
cmp
add
and
lock
cli
pop
and
jne
jmp
out
xor
mov
or
popa
sahf
pop
loop
hlt
es
rcr
adc
push
test
stc
sbb
mov
mov
js
fstpl
jl
jo
movb
pop
ret
push
js
mov
fdivrl
mov
ret
xor
add
xorl
in
xchg
sbb
movsl
inc
push
test
es
sub
sub
fistl
mov
vsubpd
shl
les
cmp
xlat
xchg
mov
std
mov
imul
mov
imul
sbb
bound
pop
faddl
nop
ja
jbe
fs
clc
jle
movb
cmc
mov
cmpsl
and
sub
push
push
lret
fildll
movsl
add
repnz
inc
pop
sbbb
sub
and
dec
xchg
sbb
push
mov
push
mov
sub
sti
movsl
mov
mov
loope
int3
pop
fld
lods
in
or
or
icebp
int3
das
sub
sbb
in
insl
dec
xchg
in
loop
xor
jnp
jmp
sub
scas
and
and
add
inc
pop
lahf
mov
cmp
dec
rcrb
jb
je
sarb
repz
adc
daa
das
lea
outsl
inc
in
dec
mov
and
push
mov
or
sti
push
movsb
xchg
mov
push
and
add
mov
int3
stc
popa
add
push
fnsave
push
aas
push
fcmovbe
inc
stc
flds
jns
cwtl
sub
cltd
push
xlat
mov
gs
jmp
mov
inc
fstl
movsb
clc
pop
push
xchg
xlat
popa
iret
push
mov
scas
sbb
out
dec
adc
jns
add
mov
inc
les
jmp
ss
decb
scas
xchg
movsl
shrl
mov
push
xor
mov
jne
leave
fcom
mov
fmull
das
xchg
push
pushf
adc
mov
std
add
mov
das
addl
xor
loope
mov
data16
jmp
fsubrs
mov
test
out
and
daa
jmp
cld
fcmove
cmc
adc
push
inc
mov
mov
clc
inc
rcll
addr16
and
sub
xchg
inc
or
adc
imul
hlt
leave
fs
inc
dec
fwait
push
fiaddl
xlat
arpl
adc
scas
mov
xor
mov
shlb
in
push
cmpsl
inc
cmpsb
pop
int
push
loopne
lret
imul
mov
sbb
jne
out
movsl
xor
push
sub
mov
addl
adc
bound
enter
sbb
lods
add
test
js
cmp
fcoms
sbb
mov
js
ljmp
mov
in
xor
xchg
aad
rcll
xor
fdivs
add
fisttpll
lret
mov
dec
pop
jmp
repz
roll
fwait
dec
dec
lret
and
repz
fsubs
add
push
xchg
out
das
in
cmp
and
rcrb
or
scas
lea
test
fsubp
int3
repz
fwait
pop
repnz
jg
pop
int
aaa
sbb
push
adc
out
mov
in
scas
adc
in
lea
pop
jge
cmp
mov
into
mov
xchg
pop
xchg
loopne
dec
mov
jne
repz
sbb
cmp
jmp
addl
into
add
enter
mov
lock
sbb
js
push
xlat
inc
dec
fbstp
adc
popa
imul
xor
xchg
jmp
mov
mov
sub
mov
in
cmpl
xchg
lods
movlps
sarb
dec
sub
add
jbe
xchg
cwtl
call
je
cmp
ss
or
arpl
idivl
scas
ret
sahf
push
pop
outsl
scas
cmp
in
cmp
adc
mov
adcl
dec
cmpl
cmp
ds
inc
repnz
aam
xchg
mov
add
mov
dec
push
je
push
mov
mov
sub
test
push
in
sub
andb
inc
insl
sub
adc
mov
std
lahf
xchg
popa
icebp
add
dec
jg
fsubrs
push
mov
dec
mov
das
cmp
sbb
sub
adc
in
sbb
jle
gs
mov
add
push
arpl
mov
pop
imul
dec
aam
or
rcrl
inc
sub
pop
popa
or
xchg
in
jbe
into
sarb
fwait
ret
sub
xor
int
sbb
fbstp
mov
adc
mov
inc
dec
dec
and
jns
jl
add
add
icebp
sbb
cmpb
call
shl
outsl
xchg
push
arpl
cltd
mov
adc
dec
and
add
das
aas
push
push
cmpb
add
jbe
dec
icebp
pop
sub
sbb
xchg
lahf
test
jnp
and
imul
dec
ficoml
bswap
inc
pusha
push
rcl
cmp
sub
enter
push
cwtl
xor
mov
insl
push
ret
or
mov
jmp
add
lret
and
cmp
rcll
or
ljmp
sbb
pop
push
faddl
out
jnp
jg
add
push
sbbl
xchg
hlt
test
and
in
sbb
pop
clc
fstpl
pop
out
or
xor
add
call
subb
mov
xor
inc
xor
out
push
add
movsl
push
xor
pop
pop
roll
icebp
lcall
push
lock
lods
ljmp
pop
incb
xor
aam
dec
or
sti
push
mov
sbb
xchg
ja
mov
enter
and
mov
and
or
arpl
jle
or
xchg
lock
add
and
out
jmp
add
inc
inc
adc
mov
je
xor
xchg
outsl
fmull
loope
pop
xor
mov
cmp
inc
fs
rcrl
and
cltd
jle
push
mov
adc
inc
inc
push
xchg
dec
icebp
movl
stos
lcall
push
add
push
cwtl
lods
xchg
cmp
sahf
jg
je
out
loope
mov
loop
out
xchg
mov
inc
xor
lds
and
or
iret
into
or
and
or
jnp
shl
mov
mov
xor
push
adc
sbb
cmpsl
lds
and
xchg
daa
test
dec
insl
ljmp
lcall
cwtl
sahf
cmp
das
mov
mov
int3
in
push
mov
test
cmc
sub
mov
mov
test
lret
mov
and
test
or
mov
dec
adcb
jmp
fildl
insl
jge
adc
add
outsb
and
loope
pop
xchg
sub
xor
test
icebp
enter
jbe
es
push
movsb
cmp
lcall
popa
pop
fbstp
sub
sub
add
jmp
or
ds
mov
mov
mov
addr16
bound
or
sub
stos
push
lock
jbe
xchg
sbb
dec
mov
rcrl
test
movsb
icebp
cltd
jb
in
scas
push
mov
pushf
push
sahf
js
push
insl
jmp
jp
push
push
fstpt
inc
fs
inc
jmp
mov
in
xor
or
cmpb
cltd
mov
push
testl
inc
out
jb
lock
adc
xlat
xchg
fimuls
jne
scas
push
js
fimull
ret
insl
lds
notb
mov
inc
jne
sub
mov
imul
ret
jl
imul
aad
and
rcll
dec
cmpsl
mov
pop
and
or
sahf
testb
add
std
cmp
jge
and
int
mov
jnp
roll
xor
or
popa
push
mov
add
popf
add
rcrl
lods
int
es
mov
sar
inc
pop
imul
andl
or
es
inc
pop
mov
inc
lret
pop
adc
movb
pop
mov
mov
jo
mov
leave
test
pop
mov
out
lret
jns
cli
cmpsl
out
pop
sub
imul
push
pusha
push
das
iret
sti
inc
xor
mov
sub
cmpl
rorl
sub
mov
cmp
pop
push
jp
jl
arpl
adc
cmp
fwait
ret
cwtl
lahf
or
rolb
jns
or
pop
mov
mov
push
in
push
fistps
jns
in
ljmp
jmp
push
movzwl
pop
dec
jb
pop
xchg
lahf
xor
and
negl
cmp
jae
and
push
dec
movsb
sub
es
jecxz
fcoms
jo
lret
xor
andb
loope
adc
pusha
mov
inc
fnstenv
aaa
lock
ret
xacquire
insl
int
cmp
ljmp
sti
mov
fbstp
adc
mov
push
or
xchg
add
arpl
xor
shll
sarb
xchg
out
sbb
sub
mov
inc
pop
hlt
pusha
adc
pop
inc
je
cmp
outsl
aad
std
loop
push
fsts
mov
mov
sub
sete
pop
std
or
enter
hlt
call
scas
sbb
cmc
loopne
daa
xor
push
scas
push
lds
test
pop
imul
and
sub
mov
js
js
jecxz
jbe
jae
dec
js
xchg
inc
inc
pop
repz
sub
stos
xor
sbb
mov
push
adc
movsl
stc
mov
cmpsl
jmp
lds
dec
mov
pop
fnsave
fimull
movsb
std
in
jns
and
xchg
repz
movl
adc
xor
bound
roll
xchg
push
push
inc
pop
test
cmp
in
sbb
mov
adc
xchg
in
jne
mov
add
mulb
imul
out
lahf
int
dec
in
xchg
push
aam
mov
jp
or
paddq
repnz
adc
push
stc
inc
sbb
dec
ret
dec
dec
inc
jl
cmp
pop
xchg
sahf
sbb
test
jb
sub
sahf
shll
dec
data16
lret
or
cmpsb
mov
adc
jnp
rcll
and
rorl
mov
mov
ss
push
add
ss
stc
push
sbb
sti
mov
loop
mov
add
mov
jl
mov
dec
in
ja
movsl
jp
xlat
sbb
ja
xchg
rcr
jecxz
jge
or
cmp
pop
sbb
lcall
lret
fisttpll
xor
popa
cld
or
lret
insl
and
push
push
outsl
test
jmp
pop
cmp
out
lds
sbb
cmp
std
sbb
dec
adcb
pop
adc
pop
outsl
cmp
add
orb
xor
jae
mov
cmp
subl
lea
aad
ja
mov
bound
xchg
add
jne
jbe
loop
mov
jae
imul
sbb
rcll
stc
jl
cs
cmp
mov
pop
jge
xchg
dec
jmp
stc
mov
inc
stc
je
mov
clc
leave
sarl
test
pop
push
std
scas
add
sub
aaa
mov
js
enter
push
inc
and
adcl
aaa
pop
dec
outsl
sub
inc
call
dec
inc
pushf
jmp
push
cmpsl
dec
cmc
mov
inc
and
add
ds
frstor
cmp
inc
jp
xchg
jno
sbb
push
fmulp
xchg
mov
cmpsl
xor
and
imul
daa
flds
push
sub
xchg
outsb
out
mov
inc
xchg
decb
lock
js
jns
jae
js
fiadds
fisubl
in
es
push
out
pop
dec
cs
mov
and
inc
lahf
enter
or
sti
andb
popf
push
mov
fildll
mov
ja
cli
sbb
xor
or
insb
lea
insb
or
jmp
cmc
xlat
insl
cmp
pop
cmp
jbe
or
movsb
fistpl
in
fucom
gs
fisubrs
push
mov
scas
jg
xchg
jmp
add
adc
out
lds
jmp
mov
notb
ljmp
scas
add
jmp
or
pop
xchg
stos
ret
fcmovnu
imulb
jle
decb
add
and
cli
int3
jno
arpl
shr
xchg
mov
cwtl
inc
push
mov
lret
and
sub
jo
add
bswap
push
mov
fimuls
int3
lahf
jmp
aad
faddl
cmpsl
aad
sahf
movhlps
or
cld
or
cmpsb
inc
fldcw
out
xchg
subl
and
into
cli
repnz
mov
loop
outsl
push
add
adc
je
jae
sbb
lahf
dec
fwait
mov
dec
xchg
sbb
xor
sti
push
daa
test
loopne
loop
sbb
xchg
in
mov
sub
int
pop
and
ret
and
ljmp
dec
icebp
dec
aas
jnp
icebp
inc
loop
ret
or
mov
stos
pop
adc
xor
push
shl
xor
xchg
int
push
mov
inc
ja
data16
cmpsl
int3
push
scas
cmpsb
insl
cmc
shl
ret
pop
out
sub
push
ljmp
add
dec
mov
push
cmp
data16
pop
push
lea
mov
mov
push
lods
aas
in
adc
jne
or
cmp
cld
xchg
jecxz
repnz
icebp
nop
icebp
dec
sbb
cmp
dec
sub
pusha
nop
push
xor
inc
cmp
pop
add
jbe
mov
ja
dec
mov
or
jmp
mov
mov
ss
out
out
mov
inc
jmp
pop
clc
in
xchg
cmp
mov
pop
cmpl
and
clc
and
fs
lret
or
ja
in
test
inc
enter
pop
pop
push
cli
mov
fwait
movsb
lret
or
push
stos
dec
jecxz
daa
mov
imull
sub
call
pushf
mov
pop
xchg
dec
mov
outsb
pop
int
int3
ret
pop
je
nop
inc
sbb
xchg
dec
and
fwait
xor
add
pop
fst
pop
aam
scas
cld
sub
scas
int
popf
fdivrs
jp
xchg
pop
mov
les
push
xor
lret
xlat
fmuls
mov
stc
and
push
loopne
push
das
lods
sarb
pop
push
test
aas
mov
xor
test
jae
cmc
out
es
ret
jae
mov
movsl
jne
jmp
andl
fxch
mov
xor
xor
cmp
jmp
ror
jnp
lret
pop
arpl
adc
add
mov
cmc
call
in
into
mov
roll
pop
fiadds
mov
cmp
push
insl
ja
fstpl
dec
push
xchg
ds
dec
inc
push
mov
dec
ja
dec
pop
inc
mov
test
or
jecxz
and
cltd
inc
add
inc
adc
daa
test
dec
dec
xchg
inc
ds
sub
add
dec
add
xor
stos
mov
icebp
or
jp
inc
out
mov
pop
sbb
xor
dec
test
xorl
pushf
xchg
orb
hlt
xor
ret
inc
xorl
gs
jne
fldl
stos
sbb
cmpsl
sahf
mov
adc
fists
pop
pop
add
in
ljmp
mov
fwait
stos
fstl
cmc
xchg
adc
in
incb
cwtl
imul
adc
addl
clc
xor
xor
into
sub
lods
push
sub
or
jae
mov
sub
cmp
aas
mov
adc
out
cmc
push
xchg
jmp
xchg
adc
mov
in
cmp
jp
mov
in
pop
fcmovnbe
rorb
xchg
arpl
mov
sub
out
adc
xlat
inc
dec
dec
mov
push
xchg
mov
fs
lahf
dec
shrl
icebp
repnz
sahf
sbb
xchg
fucom
aaa
mov
add
sbb
scas
test
cmp
jge
in
add
je
sub
jmp
dec
roll
test
push
push
in
stos
scas
loope
jns,pt
mov
sub
xlat
and
jecxz
sbb
cli
stos
rcll
aam
or
popf
call
cwtl
negb
cmp
sub
sti
fs
pop
sub
test
jmp
sub
xor
and
std
test
mov
inc
std
in
dec
mov
sbb
lods
push
jp
out
loop
xchg
cmp
iret
aam
mov
xlat
icebp
lcall
pop
ficomps
or
shlb
or
cmp
cmp
popf
gs
add
and
cmpsb
loopne
fsubrs
jno
lret
mov
outsl
and
cs
add
xor
cmp
sub
paddsw
movsl
push
pusha
arpl
scas
and
add
fsubl
shrl
pop
pop
imul
into
stos
int3
ljmp
rol
sbb
jnp
std
mov
fisubl
jmp
popf
jae
push
mov
ficoml
add
mov
dec
fsts
mov
add
in
push
pop
inc
adc
jbe
scas
mov
ljmp
or
push
pand
les
mov
out
and
mov
pop
sbb
sub
iret
inc
int3
cwtl
xor
test
bound
mov
in
rcrb
jmp
xchg
je
popf
dec
cmp
sbb
mov
dec
ret
jge
xchg
gs
sbb
xor
and
rorb
mov
or
mov
dec
inc
mov
clc
insb
or
jnp
int3
pop
iret
fcoms
adc
rcrl
xchg
div
and
xor
push
in
xchg
add
sbb
js
sub
dec
pop
or
adc
adc
data16
jmp
or
pop
shlb
cmp
ss
iret
imul
cli
dec
cs
xchg
addr16
lods
add
int
fcomps
push
xor
clc
mov
dec
adc
popf
sbb
pop
mov
jo
push
int
jno
push
out
pusha
xchg
cmp
test
mov
test
fwait
add
mov
dec
divb
stos
lods
sub
cs
dec
sub
aad
mov
fiadds
out
rcl
cmovp
daa
rolb
cmpsb
inc
jle
sbbb
jnp
mov
call
stos
jne
push
cmp
rcrl
xchg
mov
and
jbe
or
cli
mov
mov
sub
test
mov
in
xchg
dec
cltd
test
or
test
inc
sub
jge
xor
cmp
lods
jg
mov
mov
aad
xchg
inc
int3
mov
fisubs
jge
pminsw
dec
ret
jecxz
gs
add
mov
jae
lds
sub
adc
rcr
dec
sti
int
jp
out
testb
mul
xor
retw
jne
sub
push
dec
xchg
cmp
aad
inc
stc
pop
push
pop
xor
stos
rorl
test
cmpsb
mov
mov
pop
sbb
xchg
pop
fimuls
xchg
fsubs
xor
ficoms
xor
inc
push
pop
sub
add
aaa
inc
sub
sub
jns
aaa
lcall
xchg
lds
andb
xchg
push
xor
dec
mov
mov
out
mov
mov
outsl
iret
mov
rcl
inc
adc
cwtl
sbb
or
ficompl
in
insl
inc
std
or
ret
sbb
pop
and
xor
adc
sbb
enter
inc
mov
pop
shr
cmp
gs
std
xor
xor
mov
faddl
dec
mov
cmc
imul
test
jae
adc
and
add
lahf
mov
sti
fsts
and
aam
stos
adc
loop
sarb
add
jno
clc
shlb
push
call
pop
loop
test
out
and
or
je
xchg
fiadds
fwait
or
adc
out
mov
jp
call
xor
scas
mov
xor
repz
iret
dec
mov
mov
mov
leave
inc
sti
xor
insl
bound
fcoml
rorb
int
dec
inc
int3
jb
push
jmp
lods
inc
xlat
and
jo
je
or
xchg
mov
pushw
jae
pushl
push
sbb
cmpsb
push
das
mov
hlt
lcall
and
outsl
sub
outsb
xchg
and
ret
and
mov
sub
and
sbb
pop
and
test
push
fdiv
outsl
dec
and
and
lods
inc
pop
clc
dec
shl
mov
adc
pushf
data16
movb
adc
xchg
or
push
or
movsl
hlt
pop
imul
lods
jo,pn
push
test
lods
in
push
xchg
fcmovne
pushf
sbbl
mov
push
mov
adc
mov
ficompl
addr16
cmp
lret
in
test
pop
jge
push
les
cmp
fs
sahf
shll
jle
subl
dec
or
adc
jecxz
repz
lea
mov
mov
mov
push
xchg
jne
pop
repnz
nop
mov
add
cmp
add
ret
or
andnps
sub
push
add
sbb
mov
pop
add
ss
add
mov
pop
mov
loope
sbb
ret
std
mov
sbb
nop
dec
inc
das
fsubrl
push
pop
sbb
or
sbb
cmpsl
loopne
cmp
dec
jns
xchg
or
je
jbe
adc
mov
aas
mov
add
pop
xchg
cwtl
jcxz
push
pop
outsb
cmp
and
jnp
mulb
jle
out
imul
sahf
xor
pop
bound
adc
sub
xor
dec
dec
push
push
lret
pop
or
jae
inc
addr16
sub
and
push
mov
jns
adc
jb
pop
sub
adc
mov
inc
inc
stos
repnz
aad
pop
pop
cmp
jno
lret
cmp
push
or
jns
fnsave
cmpsb
repz
mov
stc
cld
lret
aas
nop
mov
dec
inc
popl
and
jecxz
sub
sub
ds
mov
outsl
mov
or
jne
push
fnstcw
jg
aas
pop
fimull
out
js
pop
and
add
push
adc
lcall
orb
fwait
push
insl
rclb
pop
lods
rcrl
mov
data16
push
fnsave
ret
cmc
incb
sbb
std
inc
mov
adc
out
jmp
xor
xor
dec
dec
pop
and
or
insl
mov
mov
out
mov
xor
int
mov
insb
mov
fadd
repz
or
push
push
inc
xor
xchg
xchg
cmp
cmp
jbe
lahf
data16
push
sti
out
add
insl
pmullw
jg
int3
push
cmpsb
cmc
dec
cwtl
cmp
pop
mov
jb
fs
mov
hlt
fucomi
push
sahf
mov
lahf
mov
and
mov
outsl
ljmp
xchg
inc
fisttpl
sub
mov
add
add
xchg
pop
sub
ret
clc
and
aaa
inc
loope
pop
sub
popa
sub
jae
jecxz
mov
mov
mov
xchg
add
push
or
sbb
bound
out
faddl
shll
test
or
lods
std
xchg
outsl
xchg
lods
cmp
jne
add
xchg
rorb
fcomp
push
outsb
scas
add
push
xchg
xorl
lcall
or
jo
xchg
sub
jns
push
mov
and
insb
lock
mov
inc
push
scas
or
js
adc
mov
xchg
dec
sub
add
call
ljmp
pushf
lds
addr16
fidivrl
sbb
dec
push
das
and
xchg
lock
xor
stc
orb
xchg
orb
rclw
push
or
insl
jae
inc
pusha
xor
ret
addl
pop
xchg
cmpsl
xchg
add
jp,pn
mull
test
mov
push
and
test
push
dec
in
inc
imul
pop
cli
inc
jae
pop
push
cmp
cmp
js
mov
repz
inc
adc
addr16
jmp
push
mov
add
pop
les
dec
adc
les
sbb
push
cltd
inc
lcall
pushf
and
fiaddl
lods
cs
icebp
js
sarl
pop
jnp
sub
insl
fwait
lods
xor
jle
sbb
pushl
nop
inc
inc
jbe
shlb
sbb
mov
outsl
mov
out
lock
gs
test
les
mov
xlat
std
frstor
push
inc
mov
out
lcall
icebp
aaa
add
pop
push
mov
pusha
adc
rcll
xor
sti
int
test
ljmp
mov
add
sahf
mov
dec
hlt
jle
add
je
push
pushf
jg
mov
sbb
jl
int3
fwait
mov
cltd
xchg
jb
subl
movsb
test
rcll
mov
jo,pn
pop
adcl
imul
push
jo
mov
into
push
lock
push
inc
or
dec
mov
lcall
mov
test
call
vmaxpd
cmp
or
pop
mov
ret
sub
fcmovu
jne
add
pop
adc
and
out
lock
call
sbb
mov
or
insl
jbe
xor
push
dec
pop
inc
stc
dec
or
cltd
pop
dec
call
pop
pop
popf
icebp
aaa
lcall
arpl
hlt
push
xchg
xchg
rcl
add
xchg
aad
imulb
sbb
or
jbe
push
in
lods
out
and
addr16
inc
xlat
aam
in
adc
mov
into
fiadds
sub
push
sbb
and
xor
push
mov
cmpsb
negb
sarb
push
test
pusha
out
fidivrs
mov
lcall
or
inc
or
push
add
push
lods
add
mull
popa
fisttps
loop
xchg
stc
jo
jne
push
jge
imul
testb
pop
jp
dec
mov
clc
stc
mov
adc
repz
sub
or
inc
jmp
and
movsb
jmp
xchg
sbb
inc
in
and
pop
push
sub
xchg
pop
jl
les
cmp
daa
pushl
popa
push
mov
addl
xchg
jnp
repnz
or
or
add
lret
fnstenv
roll
push
loop
test
rcr
add
jmp
push
cmp
sbb
scas
cltd
lock
inc
stos
popf
arpl
mov
dec
xor
or
loope
arpl
fbstp
jb
cmp
inc
pop
daa
pushf
dec
cmc
repz
dec
dec
ret
iret
leave
and
and
jne
repz
bound
loopne
daa
mov
pop
lcall
pop
fisubl
push
fiaddl
fwait
jne
mov
cmp
sahf
pushf
pop
fmul
mov
loopne
add
and
mov
subb
and
lret
test
cwtl
or
out
push
pop
shll
and
lea
pop
roll
test
clc
into
xchg
fcomps
imulb
stos
scas
popf
mov
fldl
cmpsb
or
add
dec
sbb
lret
int3
push
mov
push
mov
push
lods
pop
adcb
sahf
fistpl
sub
sbb
cmp
aas
sub
push
shll
bnd
mov
push
leave
in
iret
jae
jmp
mov
js
ret
push
in
jmp
mov
pushf
sbb
jecxz
and
mov
in
mov
out
pop
leave
outsb
jb
lds
mov
in
push
xor
popf
je
aaa
ret
jmp
scas
sbb
ds
xor
adc
pop
cmp
mov
cltd
lds
aaa
fwait
in
add
cmc
xlat
popa
mov
xchg
push
mov
adc
sarl
lret
fcoml
insl
adc
jge
jp
fcoms
shll
test
pop
arpl
loop
out
je
mov
inc
movsb
sti
fidivs
push
add
xlat
int3
lods
jmp
fwait
or
dec
jne
dec
cmp
test
ss
push
mov
push
aas
adc
dec
mov
push
andb
clc
in
sbb
xorl
inc
push
push
or
call
into
sti
aad
ret
scas
sbb
fsubrl
ljmp
mov
mov
iret
sub
cmpsb
in
sahf
arpl
dec
xorb
fnstcw
lahf
cmp
lret
dec
rcrl
mov
xlat
xor
mov
jb
daa
mov
in
outsl
insb
adc
jle
push
jmp
push
cmpsb
inc
outsl
push
mov
sahf
mov
lds
push
pop
sbb
loopne
adc
dec
adc
add
fcmovnu
js
aad
idiv
pusha
fcmovne
jnp
ja
mov
mov
dec
ds
mov
repnz
repnz
mov
sub
addl
fstp
pop
xchg
or
fldenv
out
inc
cmp
bound
ret
xlat
bnd
add
push
add
mov
shlb
scas
xor
mov
mov
fimull
sbb
in
movsl
ljmp
xchg
jae
push
imul
or
and
ret
imul
sub
mov
mov
pop
or
test
xchg
sub
sbb
pop
call
out
fsubl
insb
insb
in
ss
xchg
pop
fstpl
dec
sbb
aad
mov
enter
arpl
jecxz
aas
int
adc
pop
repz
mov
loop
aam
mov
mov
jmp
jle
dec
cltd
testb
inc
movhps
mov
repnz
scas
adc
jnp
sbb
stc
subb
xchg
xlat
into
dec
in
stos
push
stc
inc
cwtl
popf
lods
cmpsl
out
negb
add
push
fidivl
iret
mov
shll
out
pop
inc
inc
inc
push
andl
cli
sub
insb
inc
push
xor
adc
fld
cmp
sbb
cltd
push
jne
test
lcall
inc
adc
dec
cmc
fisttps
das
pop
mov
xchg
add
fistpl
jbe
je
xchg
aam
mov
push
and
add
cmpsl
sub
lret
xchg
adc
mov
scas
adc
cmp
push
sbbl
bound
imul
sbb
rclb
cmp
mov
mov
mov
push
arpl
pusha
add
rorl
mov
jl
lcall
mov
cld
pop
pop
add
testb
mov
adc
mov
icebp
inc
outsb
in
bound
ret
mov
xor
test
lock
lret
cmc
loop
leave
test
insl
xchg
stc
xchg
and
pusha
je
loop
ret
fsubrs
push
lea
xchg
ror
rorl
fidivrl
dec
add
pop
push
push
iret
pop
int3
add
xor
inc
push
jl
push
jmp
jno
mov
rcr
cmc
mov
js
mov
hlt
sti
push
rorb
xorl
imull
mov
mov
outsb
mov
daa
xor
dec
cld
push
hlt
std
fcoms
mov
int3
and
add
arpl
add
adc
jp
fiaddl
push
mov
das
in
pusha
mov
mov
mov
adc
pushf
mov
push
out
inc
les
fucomp
jle
enter
clc
cmp
paddw
ret
cmp
loope
and
out
aas
dec
rcl
jno
rol
xor
fs
pop
push
dec
jecxz
addl
sbb
sbb
and
lcall
xchg
xchg
into
enter
adc
cltd
movsb
inc
adc
push
or
add
and
and
stos
pop
sbb
pop
shlb
das
or
cmpsl
mov
mov
fdivl
out
push
xchg
jl
aaa
push
mov
or
test
inc
mov
out
or
jne
and
cltd
stos
in
test
mov
fwait
icebp
ret
pusha
mov
rcr
in
or
xchg
ret
and
in
inc
nop
out
mov
fdivl
xchg
cmp
fsubl
arpl
lods
gs
jnp
notl
mov
push
inc
xor
insl
sbb
sub
arpl
dec
cltd
sub
leave
cmp
or
inc
stos
xchg
loopne
pop
xchg
jne
xchg
inc
add
sbb
fwait
push
popf
gs
repz
sbb
cli
iret
data16
push
lock
in
sub
rcrb
fsubr
or
fcompl
data16
clc
ljmp
add
jg
ret
lret
int3
mov
mov
pop
and
in
aas
jp
sub
jge
cmp
and
mov
xor
mov
push
mov
xor
lret
push
add
insl
push
imul
or
fwait
test
ja
cmp
xor
xor
and
shufps
mov
iret
addr16
mov
jb
pusha
sub
jl
inc
pusha
stos
loope
pop
mov
sub
push
inc
in
push
and
insb
fisubl
mov
dec
ret
test
cwtl
mov
shlb
ret
icebp
out
scas
dec
mov
jnp
mov
orb
out
adc
add
dec
stos
and
cs
ja
or
sbb
jp
pop
imul
out
jb
ficomps
scas
mov
je
imul
ljmp
ret
fisttpll
out
jecxz
fildl
cwtl
xchg
jge
jecxz
popf
cmp
dec
insl
cmp
mov
mov
std
shr
jmp
dec
fidivrl
mov
xchg
fadd
jbe
push
or
inc
cmp
incb
mov
movsl
std
push
or
pop
adc
mov
or
mov
icebp
cmp
out
adc
jmp
gs
sahf
loop
xor
push
out
repz
inc
mov
mov
fs
push
rolb
jecxz
lock
push
dec
jnp
sub
test
movb
push
jbe
jne
aas
mov
dec
bound
imul
jecxz
push
stc
sub
scas
loope
jne
inc
mov
and
dec
ret
mov
pop
push
sub
push
sub
xor
ss
sbb
ret
mov
mov
pop
aaa
or
popa
sahf
popf
xchg
aad
ja
lcall
adc
bound
inc
cmpsb
lock
sub
cmp
cmp
notl
adc
push
in
sub
hlt
stos
in
in
cmp
cmp
jbe
add
addr16
push
or
sbb
mov
dec
jnp
imul
and
es
stos
dec
push
and
mov
cmpb
fs
fldcw
mov
fucomip
pop
adc
daa
dec
sbb
add
and
add
popf
in
jbe,pn
lahf
aam
fimull
dec
repnz
cli
pushf
xor
pushf
loopne
sbb
leave
add
jno
jo
stos
add
cwtl
out
jno
push
jge
xchg
mov
pop
movsb
daa
das
mov
sbb
fcompl
gs
ss
jnp
jnp
popf
mov
push
and
mov
xorl
lods
notb
xchg
or
jne
test
xchg
xor
and
out
dec
cmpsl
lcall
aam
mov
test
push
and
mov
adc
fsubrs
js
imul
jnp
xchg
cmp
test
xchg
xorl
cmpsb
xor
out
mov
add
loope
cmpsb
fnsave
pop
adc
pop
fs
daa
das
cmpsb
rcll
pop
dec
mov
xor
cltd
pusha
mov
enter
ret
shrl
rcr
addr16
stos
fisubs
inc
sbb
incl
or
or
ss
cld
das
push
xor
jg
pop
cmp
sti
in
inc
push
adc
cmp
insl
popf
cmc
ss
pop
inc
or
int
pop
jp
cmp
ja
sti
out
mov
mov
pop
push
stos
test
fucomp
int
or
arpl
jbe
out
mov
sbb
fsts
out
inc
inc
sub
jp
cld
lahf
push
lds
rorl
mov
cmc
in
push
ret
inc
das
add
sub
inc
jg
cld
pop
negl
mov
xchg
mov
out
pop
mov
nop
jg
xchg
sub
les
and
into
and
xchg
inc
or
push
adcb
aam
jno
sahf
adc
xor
sbb
mov
adc
xchg
insb
rcr
sub
mov
mov
sbb
mov
sbb
xchg
xor
push
imul
or
pop
loope
pop
call
cld
fmull
push
fimuls
xchg
dec
cmc
lahf
sbb
xchg
arpl
jge
push
cmp
push
dec
pop
mov
sbb
in
hlt
out
fs
inc
jg
push
push
loopne
or
stos
and
or
fbstp
and
push
and
push
mov
cs
mov
mov
cli
pop
je
scas
inc
cmpsb
fdivr
daa
adc
mov
popa
pop
and
jmp
enter
xor
and
repz
lock
add
pop
fmull
mov
shlb
xchg
mov
sub
roll
inc
and
add
cli
rcrb
dec
sbb
idivb
out
cmovo
xor
push
sbb
lahf
lods
out
xor
inc
insl
sub
sub
fnstcw
sbbl
lock
xchg
mov
bound
mov
sbb
in
push
pop
fisubl
push
push
dec
inc
popa
rcl
jp
adc
mov
jl
mov
call
mov
sub
jae
mov
arpl
lock
jmp
lock
fmull
imul
loop
sbb
flds
outsb
add
dec
pop
lahf
scas
pop
repz
adc
and
sysexit
icebp
jne
mov
fnstcw
xchg
mov
cs
jne
outsb
jp
in
push
adc
adc
cwtd
ljmp
aaa
in
mov
stc
xchg
mov
push
out
stc
sti
cmpsl
cli
rcll
nop
and
cwtl
sahf
lcall
jno
sarb
mov
pop
rorl
in
shrb
mov
mov
or
inc
aad
and
xor
push
lods
stos
mov
mov
mov
xchg
adc
sbb
inc
and
das
add
daa
nop
into
hlt
xor
xchg
mov
add
bound
or
cmp
gs
cmp
inc
arpl
mov
adc
mov
leave
popa
fimuls
mov
push
push
lods
add
jle
jmp
sahf
rorb
stos
jge
xor
das
lret
xchg
clc
stc
loope
pop
loope
cli
outsb
pop
sahf
fbld
dec
xor
gs
enter
pop
lds
fprem
sub
data16
dec
xchg
xchg
mov
pop
push
sahf
pop
xlat
shl
movsl
imulb
xchg
test
push
push
adc
pop
jl
push
shlb
out
in
stos
push
test
aaa
lods
inc
js
out
fnstenv
fmuls
inc
out
and
mov
fadds
xor
mov
enter
push
or
aad
jp
push
ffreep
repnz
sbb
shll
xchg
fcoml
mov
mov
jl
add
cmpsl
gs
es
add
test
mov
outsb
jne
inc
cmp
cmp
iret
out
mov
sahf
mov
repnz
mov
mov
mov
xor
sbb
cmp
mov
sub
das
pop
mov
js
call
mov
mov
add
fsts
push
out
fwait
dec
sub
sub
push
or
adc
shlb
outsb
pop
push
lock
cli
inc
cmp
jae
imul
enter
jnp
fsubrs
les
ss
aad
jp
or
enter
das
sbb
pop
add
outsl
jl
movl
test
pop
push
push
jecxz
stos
inc
outsb
mov
mov
shll
imul
in
cwtl
push
dec
add
pop
stos
fdivrs
rcll
scas
nop
cmpb
sub
sbb
mov
xlat
andl
fldt
jns
mov
add
xor
mov
popf
insl
push
icebp
fbstp
sub
out
mov
mov
add
loopne
negb
and
sbbl
xor
dec
mov
aaa
mov
jg
iret
out
sbb
test
push
jnp
and
or
sub
mov
inc
jmp
inc
jle
movsb
xlat
and
fsubrs
rorb
jl
cmp
mov
testb
jp
loopne
push
das
sub
lahf
xchg
mov
cmp
lcall
xchg
inc
xor
fs
xchg
push
add
out
xchg
mov
hlt
jbe
ret
in
jl
cmp
add
lods
test
xor
ret
outsb
push
sub
pushf
push
push
icebp
sbb
inc
xchg
dec
mov
andb
loopne
xor
imull
dec
sbb
aaa
andb
stc
xor
movsb
subb
mov
inc
xor
sub
mov
cli
or
push
xchg
jle
pusha
or
xchg
inc
out
mov
popa
inc
add
cltd
pop
mov
out
jl
not
arpl
test
push
dec
mov
fmulp
sbb
lods
dec
pop
subb
xor
mov
daa
jne
rorl
fisubrs
in
mov
int
jp
aaa
adc
lods
shlb
inc
add
imul
sbb
adc
clc
mov
push
hlt
mov
xchg
jp
mov
inc
xor
dec
dec
push
pop
xor
xlat
pop
or
imul
pop
jl
nop
out
pusha
scas
mov
push
shll
add
fst
push
mov
inc
jmp
outsb
xchg
cmpsl
adc
cmpb
jns
mov
mov
jle
mov
gs
xchg
adc
pop
jmp
lods
movsb
mov
in
in
push
add
rorl
sub
mov
in
lahf
bound
andb
jnp
call
incl
fisubrl
loopne
movsl
jb
pop
pop
or
push
cli
sti
movsb
pop
enter
pop
loope
jb
in
sub
mov
xchg
sbb
popa
cmpsl
lret
ds
and
loope
test
inc
cmpsb
out
cwtd
inc
in
push
cwtl
adc
ret
fistpll
popa
jne
and
mov
incl
rorb
or
pop
stos
das
in
dec
and
out
ljmp
loope
mov
mov
leave
mov
push
cmpsl
movsl
add
fldcw
jp
repnz
mov
push
push
jp
sbb
imul
lods
fimuls
mov
pop
dec
lock
and
jae
andl
rcrl
add
into
std
test
mov
std
jg
inc
lods
sti
pop
ljmp
and
rorw
pop
ss
clc
out
fstpt
lock
les
and
std
adcl
mov
and
jecxz
andps
xlat
popf
dec
cmp
inc
out
cwtl
cmc
call
in
imul
mov
insb
cmp
insl
cs
pop
aam
sti
add
data16
mov
btc
push
adc
fdivs
shlb
cs
pop
dec
dec
inc
push
inc
adc
insb
lahf
cltd
stos
fmuls
pushf
mov
xor
pushf
pop
xchg
stos
mov
in
ret
imul
pop
jle
add
dec
vpunpcklbw
mov
mov
push
xor
push
sbb
xorl
pop
add
sarb
out
sub
stos
call
dec
adc
inc
loop
adc
test
mov
loope
insb
mov
jl
rol
mov
adc
fisubrl
cwtl
fidivrl
movsl
adc
scas
sub
fs
push
sbb
jae
pop
pop
loopne
mov
or
xchg
cmp
push
test
fstpl
xchg
jne
jg
in
push
aas
cmp
sahf
push
movsl
mov
cltd
out
inc
add
call
push
lret
ljmp
stos
inc
mov
jl
or
rcr
push
jbe
into
punpckhdq
add
mov
adcb
push
lods
dec
lahf
sbb
das
or
js
mov
pop
push
jne
xchg
cmpsl
push
cmp
shlb
sbbb
mov
call
mov
inc
push
pop
leave
mov
cwtl
ds
inc
xchg
inc
cli
dec
mull
inc
test
xor
xor
cmpsb
xchg
xchg
jae
fs
and
loope
out
adcb
cld
fisubl
cmpsl
aas
stc
push
daa
xchg
addl
push
data16
cmc
inc
sub
in
inc
sub
stos
jns
sti
jno
adc
cmp
push
dec
inc
std
fcmovnbe
xor
fistps
test
insb
frstor
add
aaa
js
jno
inc
or
fsub
js
sub
scas
int
dec
cld
outsl
lahf
push
sahf
push
sub
shrb
mov
subl
mov
jecxz
dec
adc
popa
jge
fisubs
outsb
adc
add
sub
and
or
sub
clc
push
sub
sub
fcoms
cwtl
xchg
test
add
jbe
add
cmp
xorb
cld
sub
push
mov
and
gs
jb
pop
mov
pop
pop
je
lret
test
out
inc
test
ss
call
push
ss
or
arpl
jl
das
icebp
mov
popa
sub
adc
es
inc
dec
rcrl
cmovbe
jb
xchg
xchg
das
or
idivb
in
testb
add
pop
insb
lock
or
fst
jb
test
pop
push
sbb
jne
pusha
imull
aad
roll
add
xchg
dec
inc
jbe
pop
xchg
ja
mov
data16
iret
imulb
xchg
sub
mov
sub
pop
lret
inc
fwait
sub
or
cmc
xchg
xchg
jmp
popf
in
aas
data16
jnp
inc
push
cs
fsubl
decb
into
lret
xor
pop
arpl
rorb
jo
mov
mov
sub
ja
movsb
insl
sub
and
in
xor
insb
loopne
adc
push
pusha
mov
and
fstp
js
pop
inc
pusha
xor
mov
pop
or
sbb
xchg
inc
rclb
cmpsl
push
aad
sarb
ja
cld
xchg
leave
sub
and
out
inc
iret
xchg
je
loop
in
inc
pop
adc
movsl
xchg
fisttpll
fists
push
lahf
sbb
mov
jle
and
pop
idiv
or
jecxz
daa
ljmp
lods
shrl
xor
or
push
andl
dec
into
outsb
inc
pop
cmp
in
inc
aad
add
aad
dec
jle
cs
femms
mov
add
out
shl
sub
and
xchg
shrb
in
aam
cs
mov
and
dec
mov
sti
dec
shlb
inc
mov
inc
adc
dec
pslld
gs
sub
dec
mov
or
pop
jg
sarl
je
adc
push
xchg
xchg
movsl
mov
push
or
rcrl
das
or
sarb
jo
andl
jnp
mov
mov
sub
mov
mov
sti
adc
mov
jle
pop
jns
mov
dec
fwait
cmpsl
add
es
mov
aas
jl
dec
lods
dec
adc
clc
sti
pop
sub
fwait
shl
daa
cmp
mov
add
adc
cli
xchg
je
pop
cmp
xchg
dec
pop
inc
jne
sub
xchg
insl
xor
jecxz
mov
popa
fidivl
ds
xor
add
adc
aas
sub
jnp
jb
sub
int3
xchg
dec
mov
mov
adc
je
nop
cld
and
dec
sbb
push
bnd
mov
sbb
jmp
outsb
cmp
lock
das
jns
fiaddl
clc
mov
pop
movsb
mov
mov
dec
inc
add
ja
jae
jp
out
punpckhwd
jo
inc
push
daa
lcall
adc
jmp
dec
jl
and
fstps
leave
fnstsw
inc
jp
mov
test
incl
popf
sbb
mov
push
shlb
sub
fidivrs
bound
cli
rol
cmp
push
std
mov
inc
inc
lods
push
movsl
sbb
push
jl
cwtl
jae
sub
xor
mov
into
mov
mov
pushf
sar
es
lods
iret
push
adc
xlat
out
cmp
daa
iret
push
repz
pop
nop
lret
pushl
test
in
xor
int
jo
mov
dec
les
xor
dec
cli
push
stos
inc
cmp
pop
mov
dec
lea
mov
add
cmp
addr16
cmp
mov
jnp
cmp
jo
loopne
push
cmp
pop
push
ds
pop
add
adc
cmp
xlat
pop
scas
cwtl
pop
mov
fnsave
pusha
fsts
push
cltd
mov
push
adc
ffree
cmc
sub
out
sub
push
notb
mov
stc
xor
cmp
lret
xchg
lret
pop
push
sub
and
cmpsl
pusha
cld
push
inc
push
sub
sbb
dec
ret
je
das
in
in
jns
rcll
push
cmp
xor
popf
mov
ror
jne
sub
aaa
outsb
test
lods
sub
imul
sub
dec
jmp
mov
shll
lds
ret
pop
pop
sbb
fmull
dec
ss
cmp
xchg
jmp
or
push
xor
leave
lods
push
fs
mov
test
repnz
sarl
mov
cmpsl
div
ja
adc
fsubs
das
xchg
inc
mov
cmp
jns
idivb
mov
mov
sbb
xor
and
arpl
jl
xor
aaa
aaa
clc
insl
adc
cmpsb
cmp
data16
mov
jl
cwtl
sub
sbb
push
in
xchg
dec
movsb
mov
xchg
rorl
mov
pop
mov
out
orps
or
push
cli
and
repnz
sbb
scas
and
mov
imul
mov
jmp
and
xchg
ljmp
les
vpaddusb
repnz
xlat
push
divb
jg
mov
enter
mov
or
mov
push
aam
cmc
xchg
mov
mov
xor
mov
jle
pop
repz
sbb
aam
out
in
jae
pop
subl
sub
out
jmp
dec
cwtl
icebp
sbb
mov
rol
push
das
imul
les
cs
cld
and
pusha
cmp
xchg
in
add
xchg
adc
sbb
leave
stc
mov
out
mov
jb
jmp
lcall
mov
xchg
xor
stc
and
mov
xor
leave
inc
xlat
mov
popa
jecxz
jbe
pop
mov
out
cmc
mov
lcall
add
push
pop
or
sbb
cmp
ss
arpl
xchg
or
cmpb
mov
clc
das
mov
fists
push
sbb
hlt
mov
jg
adc
xchg
jo
stc
jg
mov
imul
xchg
fwait
pop
xor
nop
sbb
jp
shl
push
xchg
pop
and
sbb
aaa
lea
shlb
les
xor
mov
push
stos
and
fsincos
xchg
movsb
ljmp
popa
jbe
sti
outsl
adc
je
dec
imul
add
rorb
outsl
in
popf
mov
jns
int3
xorl
jge
imul
cwtl
pop
sbb
jno
pop
out
fstp
fisubrs
lock
add
cli
push
icebp
cwtl
fsubrs
mov
xlat
ja
mov
jne
inc
pop
xor
mov
es
addr16
mov
xor
pop
orl
sub
cmpsb
xchg
fucomip
out
pushl
sub
dec
fcmovnb
add
les
lock
push
add
cld
in
lahf
jp
sbb
adc
jmp
out
daa
scas
pusha
adc
pop
in
aad
loop
xchg
pop
repz
sahf
xor
push
mov
lds
jecxz
sbbb
out
sub
test
jge
dec
push
inc
mov
add
mov
cld
sub
sbb
sub
push
rcr
scas
int3
mull
mov
sbb
jp
push
js
cmpb
xor
cltd
push
xor
adc
nop
sbbw
imul
xchg
ss
push
mov
mov
sub
push
movsl
pop
pusha
pop
repz
mov
pop
mov
add
das
pop
movsb
dec
lds
les
js
push
and
sub
stos
add
mov
cmp
xorl
inc
clc
jae
push
sbb
popa
pushf
pop
xchg
std
int
test
fldt
in
into
xchg
cmp
push
cld
cmp
add
cmpsl
clc
pop
or
sub
mov
popf
popa
and
jb
push
or
imul
cld
jmp
daa
rorb
into
dec
pop
push
xchg
insb
mov
xchg
mov
or
pop
and
insl
fildll
lcall
rcll
xlat
push
push
xor
inc
fildl
mov
cmc
mov
repz
fstl
add
rol
cmp
mov
incb
pop
or
sahf
lea
xchg
add
cld
fmuls
inc
xchg
xor
pop
aad
ja
xor
sub
insl
lea
mov
xor
and
mov
pop
push
insb
sub
divl
pop
outsl
inc
sbb
sbb
decb
rcl
mov
repnz
incl
or
daa
sub
adc
push
les
sbb
out
cmp
nop
fcomps
sbb
mov
call
das
ret
mov
jle
jne
faddl
popa
rorb
and
mov
xchg
fs
ljmp
adc
xchg
enter
aaa
xor
or
ret
pop
stc
and
daa
ja
lret
test
lret
xlat
or
movsl
nop
or
jno
lds
mov
push
mov
in
lcall
mov
gs
xchg
jmp
pop
sub
mov
push
add
push
stc
push
mov
inc
mov
hlt
push
aam
insl
push
adc
popf
mov
inc
insb
into
jb
sbb
rclb
xchg
leave
jl
in
repnz
xor
subl
adc
mov
push
es
addr16
sbb
fbld
dec
cli
cld
mov
ds
insl
idivb
sub
mov
mov
sbb
out
add
out
cmp
push
mov
cmp
mov
sbb
addr16
aas
out
mov
mov
cmp
out
push
daa
inc
lock
sub
xor
outsl
adc
pop
mov
ret
dec
cld
ret
mov
sbb
push
inc
scas
push
pusha
xor
and
mov
dec
xor
or
add
imul
out
jnp
dec
and
shll
adc
cmpsl
lock
test
add
sti
inc
test
cmpsl
nop
ds
cmp
mov
xchg
lret
sub
adc
in
jne
test
lds
xchg
mov
push
cmp
mov
mov
scas
insb
shrl
scas
out
push
aas
push
mov
xor
shrb
jne
es
jnp
pinsrw
cld
mov
lret
or
enter
imul
jne
pop
out
cmpsb
xchg
popa
movsb
outsb
dec
inc
lods
std
test
xchg
std
shl
insl
pop
test
inc
adc
insl
inc
pop
insl
xor
imull
cmp
flds
adc
mov
xor
pusha
sub
dec
xchg
jp
fdivs
push
fisubs
or
enter
leave
push
test
push
pop
pop
push
dec
adc
xchg
adc
sbb
cld
pop
pop
cmpb
push
stos
loop
xchg
xchg
lods
jge
lds
jmp
movsb
and
icebp
fwait
mov
movsl
and
inc
scas
or
leave
sti
cmp
push
cmp
sbb
cltd
mov
jbe
inc
sbb
imul
sti
push
subl
out
xor
dec
lret
xchg
sub
fdivrl
xor
mov
adc
inc
mov
int3
subl
and
out
jns
js
out
jnp
jb
cs
adc
sbb
dec
or
fldt
mov
nop
mov
jno
imul
sub
into
mov
mov
jge
pop
adc
push
mov
cmp
mov
imul
jecxz
leave
ja
outsl
ret
xor
nop
es
leave
int3
stos
stos
lret
cmp
popf
gs
adc
into
or
ds
adc
aad
jl
inc
fs
push
cld
hlt
test
cmp
mov
adc
insl
jb
mov
test
enter
dec
pop
mov
push
loope
shrl
and
rorl
es
insb
mov
mov
and
int3
push
js
icebp
sub
ljmp
shll
cmp
mov
cmp
imulb
xchg
in
popa
icebp
repnz
pop
adc
lds
inc
jecxz
xchg
sbb
mov
dec
inc
sbb
push
push
ja
lret
and
pop
sti
into
or
cwtl
mov
adc
data16
out
push
xor
cmpsl
cmp
ljmp
or
frstor
rolb
and
xchg
loopne
lock
pop
aad
jl
or
into
popf
sub
lcall
xor
xchg
push
xor
ds
sub
pop
aas
and
xor
sub
xchg
and
jle
or
dec
xor
loopne
flds
stos
gs
push
iret
push
repz
push
xchg
push
pop
sub
jle
pop
sub
je
lods
jg
scas
inc
in
mov
test
hlt
cmp
ret
stos
nop
pop
mov
rcl
mov
jle
or
jge
mov
sbb
cld
sub
sbb
cmc
lds
imul
mov
rorl
clc
pop
add
cld
fdivrs
mov
pop
add
push
clc
and
or
pop
call
test
adc
xchg
popf
popa
mov
pop
dec
imul
movsl
rorl
mov
insl
setle
adcl
fidivrl
popa
shlb
and
fiadds
add
push
push
mov
mov
or
les
out
les
push
or
jp
out
ret
fsubs
lret
insl
pop
mov
sub
push
rcrl
or
sar
fimull
mov
ret
loopne
pop
stc
scas
push
pop
in
inc
pop
xchg
pushf
std
ffree
testl
sub
sub
jp
or
cmp
lret
cwtl
push
insl
jne
mov
cld
or
in
and
pop
mov
adc
sbb
daa
hlt
dec
jg
or
std
test
notb
lods
test
in
adc
cmc
mov
ret
out
clc
mov
mov
mov
fisubs
mov
bound
cmp
bnd
daa
adc
sarb
in
movsb
add
sarb
js
push
loopne
mov
xchg
mov
jno
mov
movsb
adc
xchg
scas
push
addb
nop
push
out
pushf
xor
mov
cmpb
stos
jo
or
movb
mov
pop
mov
pop
leave
cli
mov
filds
rcr
add
xchg
pop
or
imul
fcmovbe
mov
push
xor
jl
or
das
inc
pop
push
insl
cwtl
or
mov
mov
clc
adc
movsb
lret
incb
xorl
mov
es
mov
clc
ss
jne
out
or
jle
xchg
cld
enter
dec
les
or
fwait
sub
adc
adc
mov
sbb
ret
test
mov
in
jbe
arpl
mov
mov
and
inc
dec
rcrl
or
test
outsl
hlt
sbb
push
and
out
insl
pop
out
or
scas
rcr
sbb
pop
jp
enter
mov
add
pop
rcll
insl
dec
ret
mov
test
sbb
jecxz
xor
sub
bnd
icebp
and
in
stc
nop
or
fstps
xchg
sub
sti
sub
les
jae
jae
cmp
mov
popf
scas
and
jae
out
mov
out
add
negl
add
jg
mov
aas
dec
outsb
jns
pop
cmc
or
js
or
inc
loopne
in
cwtl
hlt
ret
cwtl
xchg
mov
int3
pop
fwait
jno
dec
mov
call
mov
out
loop
in
xor
cmp
fcomip
inc
jp
rcrl
out
out
cmpsl
xorl
mov
mov
push
push
dec
pushf
dec
mov
arpl
out
aaa
xchg
sbb
pop
lea
hlt
test
rcll
cmp
add
fucomip
sti
ja
sbb
xor
ret
call
inc
rolb
add
loopne
and
inc
fiadds
loope
cmp
inc
dec
test
int3
mov
repnz
or
out
test
aad
or
lods
ficompl
fdivrl
lcall
fnstcw
dec
loop
aaa
or
iret
loop
imul
test
inc
fld
sbb
daa
push
push
rcrb
xchg
out
xchg
cmpsl
jnp
mov
mov
hlt
push
ljmp
out
or
and
adc
pop
sbb
xchg
mov
leave
in
popl
cmp
ss
addr16
arpl
push
data16
cli
in
lretw
icebp
pop
xor
enter
stos
jne
std
mov
pusha
inc
adc
mov
sbb
pop
pusha
pop
mov
cmovp
sbb
sub
xchg
xchg
lcall
sahf
sbb
push
or
lea
shl
jle
aad
ss
pop
and
rolb
iret
adc
mov
adc
mov
and
subb
or
mov
cmp
idiv
ja
cwtl
fwait
or
push
mov
lret
mov
je
or
aaa
in
cwtl
and
or
sub
adc
or
insl
mov
dec
jg
out
addl
and
pushf
jae
pop
mov
jle
int3
push
mov
mov
ja
push
dec
pop
mov
add
fld
loopne
mov
jns
cmp
iret
xor
fmul
les
cmc
out
cltd
push
adc
dec
cmp
dec
addr16
or
xchg
ljmp
mov
in
loop
cmp
inc
fimuls
faddl
jne
xchg
in
dec
jg
mov
jecxz
in
jnp
dec
mov
dec
enter
xor
add
leave
dec
and
jne
or
sub
imul
mov
mov
fidivl
add
mov
pop
adc
sub
int3
aaa
pop
jae
pop
stc
dec
adc
push
pop
or
rcrb
dec
push
stos
inc
subl
push
pop
inc
pop
mov
mov
xchg
push
jmp
subl
mov
outsl
mov
jle
arpl
inc
jbe
ret
lea
es
dec
xrelease
sub
push
roll
pop
sub
sarl
inc
sbb
mov
pop
jmp
cmc
push
jle
int3
fsubr
arpl
aaa
std
fsubl
xor
dec
jg
scas
or
in
and
loopne
pop
pop
fistpll
push
test
pusha
insb
adc
inc
jecxz
mov
sbb
rcrl
xlat
aad
dec
hlt
jae
dec
dec
mov
insl
hlt
je
fucom
adc
lock
into
pop
cmp
sbb
test
pushf
ret
call
and
push
cmc
xor
bnd
sbb
inc
dec
push
jecxz
push
xlat
push
mov
in
cmp
std
sbb
in
mov
cmpsl
fbld
std
mov
and
test
jno
mov
ss
mov
pop
int3
mov
jge
in
sbb
lock
cmc
push
pop
xchg
scas
jg
fisubrs
push
jae
cwtl
shl
arpl
xor
mov
roll
sbb
push
imul
daa
sub
mov
fnstenv
aad
ja
enter
mov
lret
push
call
push
pop
adc
hlt
lods
mov
dec
mov
adc
push
pop
stos
mov
mov
repnz
add
popf
inc
lret
adc
pop
inc
stc
lock
iret
cmp
and
lret
imul
scas
cmp
enter
dec
inc
push
fisubl
add
mov
dec
pop
cmp
dec
aas
arpl
jne
jp
cmp
insl
negb
sub
pushf
into
icebp
cwtl
scas
mov
les
stc
add
test
ret
les
push
daa
cmp
stc
cltd
add
das
jmp
sbb
leave
mov
jbe
adc
mov
push
mov
cmp
iret
xchg
mov
jne
cwtl
popa
mov
call
fcompl
nop
mov
jmp
aad
xor
out
xchg
ja,pt
dec
pop
insb
xchg
sarl
loopne
into
rclb
dec
dec
daa
iret
adc
mov
mov
cld
aas
dec
lds
ljmp
outsl
aaa
xchg
daa
out
xchg
inc
lcall
testb
loopne
jp
mov
xchg
movsb
mov
dec
and
gs
xchg
popa
jne
xor
sti
loop
movsl
xor
loope
xchg
bound
push
jae
lods
cs
cmp
loopne
and
xor
dec
push
leave
jne
pushf
in
mov
sub
push
adcl
aas
mov
cmp
movsb
insb
xchg
dec
jecxz
cmp
dec
mov
xchg
aas
lret
jecxz
out
cmp
inc
mov
xchg
pusha
xchg
sub
sbb
dec
cli
dec
pop
lret
ret
stos
sahf
icebp
adc
stc
push
cmc
outsl
sbb
out
mov
mov
enter
and
incb
mov
pop
lahf
add
adc
push
cmp
push
dec
test
jecxz
push
popa
push
sarl
jl
test
dec
sbb
outsl
cmc
jb
dec
sbb
mov
and
xchg
jno
push
inc
sbb
insb
in
fucomip
fdivr
out
pushf
xor
mov
filds
enter
test
mov
sbb
cmp
dec
lret
adcl
cs
ljmp
xor
notb
gs
and
movsb
les
lods
ds
fwait
aaa
ljmp
xchg
push
ret
rcll
ja
pshufw
jo
shl
dec
mov
in
push
repnz
xchg
mov
hlt
loopne
mov
stc
jo
xchg
xchg
mov
pop
in
rorl
push
push
negl
cmpsl
jno
rcr
mov
sub
dec
imul
pushl
add
mov
inc
xchg
stos
sbb
or
shlb
les
mov
sbb
les
cmp
adc
dec
push
add
inc
popa
cld
and
jle
add
adc
movsb
int
movsl
mov
popa
cmp
cltd
mov
xchg
xor
out
pop
mov
lds
ja
adcb
fs
mov
xchg
push
jne
push
pop
icebp
fwait
test
call
push
jmp
rcrl
push
mov
jle
scas
inc
hlt
les
test
pop
jne
fists
arpl
adc
cmc
insl
movsb
mov
lock
test
and
fnstsw
out
cmp
test
movsl
pusha
xor
repz
ret
cmc
decb
sbb
movsb
shl
jl
fldt
sbb
push
xchg
fldt
imul
incb
pop
jle
dec
pop
pop
pop
movsb
stc
and
int3
mov
dec
lock
dec
test
pop
jbe
out
hlt
xor
aam
push
and
jge
inc
adc
data16
sub
sti
or
stos
add
pop
int
icebp
cmc
fiadds
pop
je
sahf
and
mov
dec
cmp
xchg
jno
loope
cmp
sub
jo
insl
icebp
loopne
lea
outsl
sbbl
stos
dec
push
jecxz
add
jae
adc
adc
ljmp
and
pop
and
lods
lods
sub
pop
stos
sahf
adcl
xchg
xchg
jl
mov
inc
add
clc
addr16
aam
mov
stos
gs
adc
xchg
enter
inc
mov
xlat
xchg
movsl
loop
add
popf
sub
jno,pt
or
insl
fmuls
jns
loop
push
leave
mov
cmpsl
add
cltd
add
jne
and
jo
das
inc
pop
cmc
hlt
lods
inc
popa
and
jge
hlt
or
lcall
jl
pop
xchg
ret
es
push
lret
push
inc
ficomps
imul
sbb
fs
push
and
fnstcw
pop
dec
rcrl
inc
inc
fisubl
mov
test
in
mov
cld
cld
rcrb
xchg
inc
and
cs
cmp
pop
cs
jns
cltd
dec
cmp
xchg
addl
pop
jge
lods
fcomp
cmp
cwtl
sbb
loope
nop
pop
orb
mov
es
js
sub
adc
xchg
xor
cmp
inc
popf
mov
test
clc
mov
mov
lahf
pop
ljmp
andl
push
ljmp
fnsave
xchg
stos
mov
push
push
jnp
add
sbb
jge
sbb
sub
sahf
cmpsl
adc
mov
jp
mov
iret
mov
mov
ljmp
out
pusha
jno
inc
repz
cmp
daa
jno
nopl
mov
push
add
shlb
je
adc
cld
adc
cmp
or
pop
sub
mov
fsubs
js
repnz
cmp
xchg
es
jbe
sbb
cmp
xor
dec
mov
fsts
push
sub
pop
inc
jle
dec
lock
mov
dec
adc
in
push
and
and
xchg
rorb
and
mov
pop
stos
cwtl
ret
sbb
out
ret
push
adc
sbb
and
xor
iret
or
mov
mov
icebp
ret
xor
pusha
jp
imul
and
cmp
lock
gs
mov
hlt
loopne
int
sbb
adc
lods
ret
jae
dec
dec
inc
lret
loopne
out
lahf
fstpt
or
inc
jnp
inc
xchg
sub
in
rolb
inc
xchg
cltd
lds
inc
xchg
sahf
imul
dec
cld
sbb
push
les
jo
mov
inc
mov
or
das
insb
sub
sub
imul
sbb
bound
cli
adc
jno
ror
push
pop
push
fldcw
orl
inc
scas
loopne
push
ljmp
xlat
mov
inc
stos
lahf
push
lock
jb
lcall
or
adcl
aad
pop
mov
xlat
or
andl
loopne
das
xchg
stos
dec
mov
std
out
cltd
addr16
int3
mov
sti
jne
imul
divl
fidivs
push
icebp
mov
sbb
pop
int3
fnstsw
sbb
clc
stos
test
cmp
mov
pop
test
adc
or
xor
in
and
loop
push
fnstcw
sbbl
or
mov
addb
jle
cmp
jmp
fisubs
add
stos
push
and
rclb
adc
mov
mov
xchg
mov
enter
mov
inc
cmp
lea
stc
mov
lods
cmp
test
xor
push
fs
mov
jp
pop
pop
sti
sub
jne
add
dec
out
push
add
movsb
pop
mov
test
jecxz
jle
arpl
mov
sub
ficompl
mov
loop
pushf
push
shlb
hlt
insl
loop
xchg
jl
push
mov
fists
aad
push
adc
pop
push
orb
mov
push
push
dec
push
push
dec
pop
cmp
loopne
jecxz
inc
pop
enter
mov
dec
and
sub
mov
mov
testb
push
gs
xor
xchg
lods
std
cs
test
ret
std
xor
insb
sbb
pop
sub
and
mov
jg
mov
jno
fldl
mull
mov
data16
adc
fmulp
xchg
sahf
les
add
xchg
jecxz
dec
inc
mov
popa
dec
rcrb
xor
cmpsb
shr
or
repz
insb
dec
scas
push
in
test
adc
inc
mov
push
pop
and
pop
pop
mov
mov
in
lods
sbb
mov
sub
xchg
loope
mov
sub
inc
pop
sti
icebp
lret
sti
testl
mov
sbb
sar
xchg
xchg
sarl
xchg
inc
daa
pop
xchg
into
xor
fldl
cmp
adc
cs
addb
dec
jge
jae
test
addr16
dec
ffree
call
data16
cmp
sub
xchg
addl
push
std
loop
xchg
push
test
aad
fincstp
out
in
cmp
cmp
ret
mov
xor
lret
sub
sbb
dec
jae
pop
flds
pop
mov
mov
shrb
dec
rorl
ja
inc
sbb
and
cmpsb
test
mov
push
or
xor
push
xchg
pop
adc
fcoml
adc
adc
popf
das
fwait
mov
mov
repnz
push
pop
lock
loop
clc
mov
clc
xor
push
cmp
xchg
jne
mov
cmpsb
cwtl
dec
sub
je
outsb
push
outsl
inc
push
into
jg
add
sub
test
loopne
cmp
out
xor
enter
pop
cwtl
sbb
sub
cs
ljmp
popa
mov
cltd
leave
lods
jno
cmp
cli
cltd
js
pushf
jmp
popa
push
adc
jle
cmp
out
xor
stos
shlb
fiaddl
repnz
std
cmp
mov
mov
ja
pop
xchg
loopne
dec
lea
insb
ret
pop
xor
scas
fsubs
aam
mov
add
mov
popf
sub
mov
sarl
jns
cmpsl
fcoml
jp
movsb
roll
mov
gs
in
out
icebp
addr16
sub
sub
das
ds
and
negb
cli
out
cmc
mov
push
in
pop
jb
std
dec
jp
outsb
arpl
lahf
cld
pop
or
jmp
inc
or
jmp
jbe
sti
push
pop
nop
imul
xlat
fs
add
push
inc
aam
fcoml
hlt
pop
jle
inc
jmp
xchg
scas
pushf
push
popa
jle
dec
mov
mov
loope
add
cmc
ror
sub
xor
mov
mov
cmp
test
scas
and
mov
pushf
lods
out
dec
sarl
inc
or
inc
cmp
int3
push
mov
inc
hlt
add
int3
xchg
ret
iret
fstps
jmp
mov
xchg
shr
popf
inc
and
xchg
mov
ss
pushf
pop
xor
popa
testl
bound
sub
scas
aam
outsb
roll
ja
cmp
loopne
iret
adcl
jns
inc
stos
clc
push
dec
sbb
mov
mov
jae
mov
or
cld
stos
cmpl
ljmp
xchg
fstps
add
mov
lahf
inc
jmp
pop
sbb
test
insb
and
adc
arpl
movsl
cld
xor
push
sti
cli
rcrl
xchg
pop
pop
loop
movsbl
and
rcr
repz
fstl
ret
clc
addr16
fidivl
shll
sub
mov
out
and
daa
mov
sub
aam
add
clc
mov
nop
pushf
sbb
cmp
sbb
sub
mov
shrb
arpl
ljmp
out
cmp
out
pop
repnz
jmp
xor
loopne
push
mov
pop
out
ret
movsw
je
leave
push
lods
enter
mov
sarb
jno
lds
sbb
gs
mov
mov
das
outsl
cmp
orl
repz
int
mov
out
adc
idivb
sbb
jb
jp
rorl
out
mov
ja
pushf
icebp
mov
divl
add
xor
push
pop
xchg
jmp
cld
in
mov
cmc
cmp
jnp
pop
insl
js
inc
dec
pusha
nopl
xchg
fcompl
daa
cltd
shll
push
arpl
test
mov
mov
movsl
cmc
scas
xchg
add
or
stc
adc
or
and
mov
mov
xchg
or
imul
push
and
lcall
pop
test
push
movsl
and
stos
jo
mov
je
sbb
add
push
insb
pop
adc
arpl
or
sbb
adc
test
push
jg
mov
cmp
sub
fadd
pop
add
xchg
fs
sti
in
inc
js
fadds
lahf
cmp
sub
jnp
or
inc
cmp
adc
inc
fcmovu
pop
popf
xorl
inc
jmp
nop
dec
pop
jae
mov
lea
push
xor
cmp
outsl
xor
cltd
sub
mov
imul
pop
mov
sub
xorb
sbb
rol
int
mull
or
inc
xchg
mov
cmp
add
inc
test
mov
sarb
inc
sub
test
push
outsl
test
rorb
inc
lret
dec
dec
add
dec
data16
fld
sub
arpl
push
addr16
mov
loopne
inc
fwait
cmp
loope
imul
mov
sbb
hlt
arpl
movsl
and
push
cltd
sbb
pop
in
push
or
xorb
pop
sbb
scas
pop
push
rcrb
pop
add
mov
sub
popl
inc
add
mov
ficompl
pop
push
in
rcrb
mov
sarb
popf
jge
adc
mov
leave
stos
push
jo
adc
ljmp
subl
outsb
xor
outsb
inc
rorb
out
sbb
add
in
and
mov
add
cltd
mov
test
sbb
and
adc
cli
push
rep
cmp
inc
movsb
and
shll
aad
jge
jne
sahf
enter
jl
aad
imul
sub
pop
pusha
imulb
mov
dec
loope
dec
jns
shrl
mov
mov
jno
push
inc
push
insl
lcall
aad
fmuls
mov
or
and
movsb
sbb
xchg
rcl
int
mov
das
dec
sub
fcomp
pushf
es
push
sub
mov
bound
dec
pop
out
stc
pushf
push
call
imul
mov
out
adc
in
cmp
add
pop
movsb
ja
lea
adc
cli
jmp
lcall
sahf
or
test
inc
in
mov
ja
inc
scas
dec
cmp
or
fadds
aam
push
iret
movsb
lds
cmp
pop
dec
sar
sub
adc
add
int
loope
xchg
es
mov
dec
insb
pusha
repnz
jle
push
outsb
ret
mov
loopne
jg
in
fstps
jae
xor
fiadds
mov
loope
jp
ljmp
xchg
adc
dec
je
add
pop
repnz
and
aam
push
cmp
insb
sahf
push
mov
lea
adc
adc
arpl
push
cmp
lods
shll
xchg
fidivrl
test
mov
inc
push
jne
push
shrl
fstpt
pop
iret
and
adc
jp
hlt
fistpll
enter
ret
in
mov
dec
aam
mov
flds
pushf
pusha
dec
cltd
and
div
roll
fcomi
inc
nop
jecxz
and
bound
daa
js
test
jnp
mov
mov
jle
xchg
popa
fstp
cmp
test
adc
xlat
shrl
sub
mov
outsb
lret
pop
mov
fldt
bound
in
orb
jl
ljmp
and
arpl
jle
enter
inc
xor
dec
xchg
rorb
call
jbe
mov
jmp
out
jae
jp
sub
popa
jp
aaa
adc
movsl
inc
popf
das
inc
mov
jo
mov
jge
xlat
in
in
jo
into
jmp
bound
jle
mov
clc
data16
jp
pop
cwtl
movsb
cwtl
cmp
sahf
fdivp
sub
cmp
rorb
lret
rcrl
enter
jl
sahf
in
mov
outsb
fcomps
aad
push
xchg
mov
cmp
and
pop
iret
xor
testl
mov
push
neg
stos
stos
push
add
push
rclb
dec
loope
in
mov
bound
cli
cmpsb
lods
xchg
xchg
pop
sahf
mov
dec
notl
and
addr16
addb
lds
xchg
out
pusha
data16
cmp
aaa
and
imul
pop
hlt
fcoml
popf
shl
cli
test
mov
add
dec
movsl
adc
jecxz
jne
and
push
inc
dec
pop
sahf
and
push
aas
and
add
add
repnz
sub
mov
adcl
inc
fmulp
xchg
pop
std
lds
aaa
mov
xabort
es
mov
stos
xlat
lods
xchg
mov
aam
adc
jl
out
add
int3
je
cmp
mov
pop
divl
jle
xlat
xor
incl
fcom
mov
push
mov
rolb
repnz
outsb
ret
fisttpl
inc
inc
sub
je
mov
xchg
mov
or
dec
xlat
cmp
mov
mov
or
fdivrs
and
sbb
mov
sahf
stc
mov
ret
inc
addb
inc
dec
lret
outsb
sub
jmp
mov
xor
fstpt
aaa
subb
xchg
mov
arpl
lock
cwtl
rcll
repz
push
mov
mov
stc
jbe
push
mov
lea
hlt
sti
ret
xor
jnp
loop
xchg
popf
jno
push
insl
add
inc
in
fldcw
dec
lcall
sub
imul
xchg
mov
adc
out
pop
jle
imul
xlat
mov
popf
inc
movsl
ret
jb
lret
iret
push
test
or
xlat
scas
lahf
mov
jge
scas
roll
xlat
adc
mov
call
xchg
add
test
sub
push
xchg
std
fildll
insb
push
popf
jae
jl
cmpsb
fld
sarl
outsl
outsb
lods
bound
xor
pop
mov
or
mov
push
and
or
daa
in
mov
sbb
outsb
xchg
pop
mov
test
loope
insb
sub
enter
inc
cmpsb
out
fs
inc
lcall
icebp
es
lret
xchg
jmpw
ds
inc
out
test
insb
es
cmpsl
aad
int
xchg
nop
gs
stos
int3
ret
bound
outsl
xor
sub
sbb
imul
mov
in
push
ds
xor
or
jo
adc
pop
sbb
cli
push
fwait
inc
and
jl
das
ret
mov
in
cltd
fistl
ja
nop
mov
pop
and
mov
mov
jbe
push
movhps
mov
aaa
cmc
jns
add
inc
xchg
int
idivb
inc
mov
jno
mov
fiadds
push
xchg
sti
call
xorl
sub
jg
addr16
jecxz
ret
xor
add
push
test
push
mov
cli
jl
in
push
shl
out
out
arpl
sbb
dec
addl
or
xchg
rcrb
gs
sub
jae
lret
mov
loop
loopne
jne
aaa
por
mov
jns
fs
cmp
xor
inc
imul
xchg
orb
mov
lret
icebp
insb
sub
cld
sbbb
inc
lret
jle
fst
mov
mov
out
mov
jmp
dec
or
roll
sub
cmpsl
pop
fucom
daa
push
pop
stos
xor
add
sbb
cmpsb
mov
pop
orl
add
cld
or
pop
push
sbb
fldt
mov
add
xchg
int
xchg
pop
push
clc
jo
lods
mov
aas
fidivrs
mov
loopew
cld
cmc
hlt
test
test
test
movsb
xchg
lcall
sbb
movsb
mov
mov
push
or
push
je
js
ret
addr16
out
inc
and
mov
and
inc
inc
shl
dec
add
sti
lds
xchg
repnz
lret
mov
andl
lock
leave
add
jne
xchg
out
hlt
xchg
xchg
and
mov
jae
arpl
lds
mov
and
mov
xchg
cltd
mov
and
out
aaa
mov
pandn
jbe
pop
mov
or
imul
push
shll
popa
lds
xor
mov
test
mov
ds
and
mov
push
sub
nop
scas
xor
mov
push
fldcw
mov
std
jl
xor
mov
push
jne
and
mov
stc
sub
ss
repnz
jmp
or
mov
pop
movsb
out
pop
pop
mov
pusha
stos
jae
outsl
fs
add
and
mov
jne
les
inc
sbb
mov
and
xchg
sub
sbb
ret
loopne
xchg
neg
out
and
es
mov
jmp
std
aam
xchg
cmc
jecxz
shlb
pop
xlat
es
push
test
add
sbb
sbb
ljmp
pop
cltd
pop
inc
push
test
in
xorb
dec
or
gs
xlat
mov
ret
sbb
dec
ret
loopne
mov
lret
into
and
mov
aam
in
out
adc
imul
pop
inc
mov
mov
cli
mov
sbb
mov
imul
aam
mov
xchg
jge
test
add
pop
stos
push
cmpsl
inc
dec
in
mull
add
sbb
out
pop
cmp
fidivrl
sti
jnp
ja
and
inc
into
mov
cs
call
enter
pop
fs
adc
je
aad
xchg
cmp
sbb
lea
jecxz
test
mov
dec
rcrl
mov
test
rcll
push
popa
pop
xlat
push
adc
mov
inc
xor
clc
push
test
jmp
or
lods
ficomps
mov
or
sahf
lcall
lcall
mov
inc
aad
pop
mov
andl
aad
inc
jl
pop
outsl
scas
or
clc
test
or
xor
xchg
push
push
cmpsb
mov
pop
jne
or
mov
stos
in
into
add
test
fisubrl
sub
movsb
mov
repz
sub
movsb
jmp
packssdw
mov
scas
lock
int3
xchg
push
add
xor
in
push
leave
pop
inc
jae
icebp
mov
sbb
insb
gs
xchg
add
clc
fbld
lret
cmp
loopne
push
out
pop
inc
mov
das
adc
jae
outsl
cmp
dec
push
push
xlat
cmp
jae
cld
into
aad
daa
dec
fs
xchg
jge
aad
scas
xchg
aam
js
pop
pop
push
scas
insb
std
frstor
sub
xchg
repnz
adc
xchg
shrb
lret
mov
cli
or
pop
add
sbb
in
shll
inc
cmp
pop
stos
mov
add
call
pop
xor
clc
adc
mov
mov
cmpsb
ss
roll
and
test
mov
cmp
fidivrl
mov
in
jno
aas
jne
gs
xchg
jle
or
dec
push
lret
jo
stc
ja
xor
mov
scas
fistps
popf
dec
into
idivl
cmp
inc
aaa
xlat
imul
dec
lds
ret
dec
iret
cmpsb
andb
push
rcrb
arpl
addb
fwait
sub
jg
jb
mov
add
call
cmp
add
data16
push
rol
mov
rol
inc
scas
lret
push
idivl
push
pop
inc
js
xchg
aaa
inc
adc
movsb
dec
mov
sub
adc
jo
sub
jecxz
adc
clc
cltd
fildl
sub
adc
aam
jne
orl
sahf
loop
adc
push
mov
aam
dec
movsb
sbb
insb
xor
cmp
cmp
sub
mov
sub
pusha
pop
add
add
add
mov
add
mov
fiaddl
inc
lret
fs
aam
mov
add
cwtl
mov
out
xchg
mov
movsl
cli
notl
sub
inc
cld
fs
out
jmp
push
inc
inc
add
in
adcl
pop
stc
fmuls
xchg
xorb
test
cwtl
fcoms
je
enter
and
movsl
pop
fcmovnu
adc
aad
pop
or
insb
add
mov
fcom
roll
jmp
roll
and
lods
dec
je
pushf
test
xor
inc
cld
mov
pusha
cli
jne
cltd
cmp
dec
push
out
pop
jecxz
xor
lock
mov
jecxz
adc
filds
cmp
popf
test
lds
mov
imul
mov
clc
dec
mov
cmp
int
push
mov
or
mov
das
sbb
or
in
daa
out
scas
sbb
mov
gs
aam
insl
pop
pop
cmpsb
bound
mov
xchg
xor
sub
sbb
adcl
inc
add
xor
xor
adc
pop
inc
mov
xchg
jbe
lea
push
fcoml
mov
adc
add
mov
pop
into
cli
loopne
cmp
in
adc
mov
pop
jl
inc
cmpsb
repz
fmull
mov
sbbb
add
inc
dec
dec
loopne
push
movsl
cmpsb
stos
jno
sub
popa
ja
rcll
sti
pusha
lret
das
jbe
add
jb
jo
shlb
jmp
loope
push
or
xor
or
add
sarl
jns
ljmp
in
clc
aas
mov
ficoms
std
lcall
icebp
pop
or
and
out
add
scas
mov
add
aaa
dec
mov
adc
sbb
cli
sub
xor
pop
lock
outsb
test
dec
sbb
je
sub
xlat
fcomps
mov
into
adc
test
sarb
imul
xchg
sahf
icebp
ror
adc
mov
mov
insb
lahf
ret
lds
daa
xor
enter
cmpsl
pop
loope
jmp
mov
outsb
lahf
push
sbb
jne
cmpsl
jno
inc
data16
out
ja
xchg
test
xor
je
dec
cld
mov
loope
rcrl
sub
adc
sub
jbe
jo
mov
scas
adc
jl
or
icebp
fists
jnp
adc
push
mov
mov
fs
sbb
jbe
movsl
pop
rorl
les
je
and
dec
fists
aad
lock
sbb
loopne
mov
clc
js
jp
mov
jbe
fsubrl
data16
mov
leave
popf
dec
jae
cmp
mov
or
mov
and
movsl
add
jnp,pn
mov
ds
inc
sub
outsb
mov
push
pop
dec
push
jae
pushf
jns
inc
dec
clc
push
mov
dec
lock
mov
push
push
shr
dec
or
jno
iret
sub
lds
sbb
adc
jae,pn
test
sbb
sahf
push
jne
lock
outsb
outsl
pop
add
ss
mov
cld
jp
jno
aam
xor
jne
mov
aaa
cmpsb
xchg
adc
xor
mov
push
rclb
lds
movsl
add
or
in
dec
ljmp
imul
js
les
cs
pusha
lret
mov
pop
dec
data16
sub
adc
stc
shll
jne
jg
mov
xlat
mov
adc
pop
jmp
subl
fs
adc
inc
add
xchg
cmp
adc
mov
inc
xlat
jnp
jge
adc
testl
or
mov
fstl
addl
xor
sar
dec
pop
int
movsb
leave
ret
cld
pop
mov
pop
xchg
lret
sbb
jp
adc
jecxz
mov
nop
shll
cli
jg
scas
lahf
call
rorl
in
gs
aam
sub
dec
aas
dec
ja
push
fsubrp
jl
es
mov
dec
movsb
mov
pop
and
vshufps
aam
sarb
dec
pushf
and
adc
imul
xor
out
icebp
add
jg
rclb
fstl
aas
mov
mov
push
push
out
push
out
fisubs
sub
sahf
xor
arpl
and
mov
sbb
mov
test
jns
scas
outsl
add
std
inc
test
push
inc
add
mov
out
mov
int
andl
out
xor
pop
repnz
xchg
lods
push
xchg
gs
lahf
bound
or
shl
sub
cs
fldenv
inc
xchg
shlb
mov
jnp
nop
mov
out
mov
fldl
int
fwait
mov
add
and
or
cmp
movsl
xor
jbe
rcl
xchg
cmpsb
fmulp
call
mov
fstpt
lods
ret
pop
stc
dec
push
jbe
mov
lods
lret
cwtl
cmpsl
in
icebp
pop
pop
xor
clc
and
xchg
jbe
jge
imul
jns
jb
in
stos
nop
pop
add
xor
andl
add
bnd
inc
adc
or
iret
or
in
data16
lods
aad
aam
mov
inc
scas
jnp
fnsave
mov
mov
and
jo
popl
cltd
add
push
lret
enter
sar
cltd
les
sbbl
lcall
xchg
scas
enter
xlat
adc
or
dec
mov
mov
aaa
movsb
xchg
clc
jle
jmp
out
dec
stos
cmpsl
cmp
jns
jb
fmull
sbb
aam
lds
icebp
out
jne
ficomps
call
add
nop
jp
test
sub
mov
repnz
or
aaa
push
incl
add
cmpsl
js
inc
xlat
cmp
and
neg
mov
pop
xchg
inc
cmp
push
lds
rcll
outsb
or
popf
cmc
sbb
adc
bnd
mov
and
cmp
push
sub
sti
insl
mov
push
pusha
push
rclb
sbb
rcrl
add
cmp
mov
gs
and
push
enter
sub
ficoml
jg
lods
insb
jp
outsb
mov
cmpsb
jne
mov
jge
mov
insl
notl
dec
idivb
inc
nop
add
inc
add
mov
inc
xchg
test
xchg
dec
jecxz
inc
out
data16
mov
jp
inc
in
cmp
pop
cld
inc
xor
adc
sahf
mov
and
pop
in
gs
js
addr16
mov
outsl
hlt
fucomi
mov
and
mov
adcb
ss
fs
mov
mov
jmp
aas
push
mov
int3
inc
roll
sub
xor
dec
cmp
mov
loop
push
mov
jp
fsubl
jo
xor
pop
add
mov
dec
or
push
jnp
decl
fists
iret
jecxz
cmpsl
jno
stos
mov
popf
cld
xchg
and
pop
jo
add
test
lret
xchg
clc
shld
dec
out
iret
mov
mov
stos
roll
rorb
outsb
scas
dec
push
add
int3
das
jno
push
sub
mov
jns
bound
add
lea
loopne
sarl
lods
inc
push
test
fdivs
inc
cltd
shll
sbb
jno
xor
in
ror
pop
mov
add
sbb
loopne
lods
xor
jbe
outsb
jecxz
fs
jno
int3
mov
adc
roll
pop
jns
mov
xchg
xchg
pop
movsb
call
ret
xor
dec
scas
push
cmp
add
xchg
lret
jg
repz
xlat
cmp
lret
aas
popa
sub
mov
adc
imul
inc
movsl
adc
xchg
jmp
xchg
adc
stc
xor
ret
rcrl
out
sub
sbb
push
arpl
inc
push
jne
pushf
cli
xor
shrb
in
ret
test
repz
cmp
idiv
ret
imul
in
mov
cmp
dec
lahf
fdivrl
inc
mov
and
subl
loopne
push
out
cs
testl
je
adc
aaa
imull
lods
fistps
mov
mov
int
push
jge
dec
xor
mov
sbb
cmp
popf
data16
mov
out
mov
subl
outsb
frstor
xchg
mov
icebp
mov
out
and
arpl
test
cmp
dec
cmp
lea
mov
push
jbe
push
push
mov
mov
mov
test
and
das
ss
xchg
mov
sbb
rol
mov
sarl
outsl
ja
sbb
push
dec
flds
jne
ret
or
jg
cmp
xor
or
adc
xor
inc
push
sub
sbb
je
je
or
or
cmp
pop
xchg
sti
xchg
jmp
fldl
es
jp
and
xor
jno
cmp
arpl
add
scas
es
aaa
mov
lods
sbb
jo
cmp
pop
rcrl
pop
loope
push
pop
push
and
add
inc
ret
and
test
scas
cmc
sbb
or
in
xchg
mov
sbb
shll
and
sbbb
imul
cmp
dec
stos
mov
and
fdivrp
mul
mov
adcb
dec
dec
mov
divb
sbb
test
ds
cmp
mov
in
push
sbb
cld
push
js
cmp
loopew
mov
mov
js
adc
push
mov
push
out
sahf
cmpsl
leave
test
push
div
xor
cmp
dec
loope
inc
or
pop
push
gs
nop
push
das
in
xor
adc
sbb
in
arpl
daa
loopne
inc
dec
xor
leave
loop
xchg
push
out
arpl
clc
jbe
adc
mov
mov
mov
pop
loop
negl
scas
lret
push
adc
mov
roll
adc
add
adcb
imul
lea
mov
shr
stos
scas
dec
sub
dec
mov
out
add
mov
popa
add
xchg
cld
es
lahf
scas
mov
repnz
and
pop
aad
ror
xchg
outsb
mov
mov
xchg
test
ja
mov
mov
mov
ret
mov
bound
scas
repz
and
mov
jl
lea
push
subb
and
stc
dec
pusha
mov
mov
mov
rolb
jno
mov
test
cmp
mov
in
push
ljmp
int3
xlat
xchg
stos
push
jbe
push
shll
cmp
shlb
jo
test
call
adc
repz
aaa
out
insl
in
mov
sbb
cmp
cmp
dec
push
xor
xchg
popf
stc
mov
es
mov
pop
pop
add
mov
cwtl
ret
ret
mov
mov
sbb
stos
leave
mov
jecxz
mov
inc
mov
popa
push
int3
push
xchg
sbb
testl
pop
cmc
fs
push
xchg
dec
sub
adcl
inc
sub
jns
rolb
daa
adc
pop
dec
fxch
nop
push
imul
or
dec
movsb
cmp
sbb
push
lds
pusha
or
xchg
test
aaa
repz
or
lahf
inc
cmp
ret
mov
fs
mov
ds
jcxz
arpl
ja
ljmp
and
push
add
mov
xor
and
std
pop
leave
mov
out
loope
add
xchg
and
and
push
pop
cwtl
aaa
out
push
pushf
cmp
test
mov
loopne
jo
xchg
push
orl
inc
mov
loope
fscale
mov
or
cld
loop
arpl
xorl
ljmp
scas
test
jg
stc
or
add
fnsave
mov
dec
mov
xor
jmp
xor
dec
and
sti
xchg
inc
lock
or
cmp
je
fsubl
mov
jge
les
movsb
filds
lcall
movsl
add
cmp
xchg
jbe
stos
inc
push
idivl
push
adc
repz
xchg
cmp
mov
pop
push
clc
shrl
int
fdivl
es
outsb
mov
lret
addr16
out
push
aas
out
sbb
sbb
jp
jo
stos
dec
mov
sbb
fadd
sbb
jmp
jno
jmp
push
sub
imul
fists
loop
jnp
push
cmp
iret
std
lds
notl
fldl
iret
push
and
dec
std
adc
xchg
divb
adc
fstps
int
mov
xor
aam
hlt
rolb
fcom
jbe
fstl
push
sbb
outsb
jno
lea
xor
or
and
repz
aad
and
sbb
aas
ficoms
lret
popf
jns
test
arpl
stc
fsubrl
sub
je
sub
call
data16
out
sbb
mov
mov
mov
jl
push
in
dec
cmp
iret
mov
inc
fimuls
mov
xor
jno
dec
add
lock
lret
inc
inc
mov
sub
adc
dec
pop
fildl
icebp
loop
inc
das
cmp
dec
ljmp
adc
aam
add
or
leave
mov
jnp
addl
sarl
add
scas
mov
int
mov
fcom
lret
mov
mov
jo
cs
aam
or
push
pop
pop
shr
aad
divb
pop
nop
push
xchg
outsb
add
ds
cmp
xor
rorl
cmpsl
push
push
fdivl
rcrl
aaa
adc
and
in
sbb
popf
fcmovnb
sub
xor
inc
lahf
and
dec
push
aas
adc
icebp
fmull
sub
push
and
dec
pop
fdiv
lods
xchg
testb
mov
pop
dec
call
out
mov
jl
repz
jne
push
or
loope
icebp
mov
aam
lret
or
rcrl
fnstsw
sub
add
shrl
jmp
inc
mov
push
int
xor
xchg
adc
shrb
das
dec
stc
xor
scas
out
nop
jbe
and
mov
negb
or
or
dec
inc
out
inc
cld
sbb
and
mov
dec
add
cmp
test
jecxz
call
rcll
out
insl
lret
shll
insb
int
sarl
sub
and
shlb
add
pop
sbb
sbb
pop
fdiv
ljmp
std
mov
lds
push
and
push
out
mov
out
imul
xor
ss
mov
cmpsb
subb
adc
jbe
int
pop
daa
dec
mov
lea
add
xchg
add
cmp
sbb
sahf
or
cmp
or
mov
jns
mov
call
add
inc
xchg
xchg
or
xacquire
shl
push
jbe
xchg
test
sub
push
enter
cld
js
adc
adc
xchg
or
adc
daa
nop
jb
pushf
mov
je
leave
mov
std
jns
popf
cmp
lods
jp
rclb
stc
push
ja
jle
lods
fwait
dec
outsl
sti
jecxz
sbb
aas
cmpsb
cmp
ds
jge
pop
fwait
js
mov
xor
pop
daa
icebp
ja
dec
sbb
mov
jge
inc
xchg
sti
adc
cmp
mov
shll
pop
insl
stc
arpl
rcrl
rolb
push
xchg
cwtl
jae
jae
popa
rcll
outsb
mov
and
test
sahf
movsb
mov
test
sbb
ja
dec
mov
jl
dec
faddp
into
mov
dec
mov
pop
sbb
inc
es
pop
aas
add
add
and
scas
sub
mov
dec
out
ret
xlat
lods
icebp
push
sarw
push
daa
dec
fstl
fisttps
inc
scas
adc
insl
iret
outsb
nop
jnp
push
loope
sub
je
movsb
enter
test
mov
and
push
and
add
add
scas
xor
mov
mov
dec
scas
lea
test
cs
and
push
mov
loope
jmp
or
cwtl
xor
sub
jb
dec
pop
das
dec
dec
fstl
out
addl
mov
jno
lahf
sbb
mov
push
jo
pop
lods
loop
ret
in
jle
js
leave
mov
das
mov
jp
js
sub
subb
repz
sbbb
pop
mov
cwtl
in
imul
fldt
jge
dec
xchg
mov
lea
sub
cli
cmp
bound
leave
jmp
pop
lods
mov
shrl
push
test
popl
fisttpll
jg
sub
int3
lea
repz
inc
daa
sbb
jno
mov
mov
and
xchg
pop
sub
lahf
push
ret
cmp
push
std
pop
xchg
jns
add
dec
mov
insl
sbb
xor
mov
jno
cmpsb
sub
push
push
push
and
test
or
dec
jbe
repz
add
inc
sub
jne
out
nop
sub
lahf
shrl
push
or
out
push
dec
insb
lret
test
mov
xchg
mov
lds
push
push
std
xchg
fldcw
jle
add
sub
xchg
arpl
xorb
push
mov
mov
jmp
cltd
mov
enterw
mov
mov
xchg
fbld
xchg
popf
cmp
gs
xor
loop
pushf
add
inc
jmp
data16
inc
or
mov
mov
inc
xor
arpl
int
shlb
ljmp
cmp
pushf
into
dec
test
pop
adc
popf
je
add
sbb
sub
in
push
inc
sbb
pusha
fbld
mov
xor
out
add
lea
enter
cmp
xor
add
mov
xchg
rclb
mov
sub
sub
lahf
xor
or
int
dec
mov
lock
adc
cmp
mov
nop
jnp
and
xor
mov
cmpsb
js
jns
inc
xchg
mov
movsb
cld
std
orl
pop
cmp
mov
jge
cltd
pop
mov
scas
push
push
mov
es
int3
push
in
fs
movsl
fnstsw
lret
push
test
mov
pusha
sbb
jecxz
push
xor
mov
fsin
jge
insb
cld
out
sub
cmc
fsubl
test
xchg
jl
into
push
sbbb
xchg
out
lret
jp
negb
push
mov
jcxz
test
lahf
int
mov
mov
nop
out
mov
scas
mov
jge
lahf
xchg
jmp
cmp
pop
add
cmp
loopne
jecxz
mov
sbb
stos
mov
out
mov
iret
and
mov
xor
lahf
popl
or
das
jmp
int
adc
imul
and
mov
xor
jno
mov
in
add
xchg
repnz
dec
sahf
xchg
cmp
ss
fildll
xchg
sub
xor
cmp
sbb
scas
fsub
push
and
mov
pop
arpl
sarl
ss
or
jae
mov
jno
xchg
mov
xlat
jg
arpl
pushf
aas
orl
jge
in
mov
mov
push
mov
xchg
push
add
add
jno
aas
mov
pushf
cmp
insb
push
inc
jae
jo
sbb
fadds
adc
xchg
les
cltd
push
jecxz
ret
push
ficoml
movl
mov
cli
aam
enter
sbb
hlt
ljmp
popa
inc
sbb
mov
imul
xchg
fcmovu
push
rcll
push
idivl
nop
fcmove
sub
mov
push
xchg
lret
sub
cmp
in
add
xchg
and
punpckldq
mov
js
roll
aad
mov
in
ret
or
mov
call
imul
int3
lock
std
xor
dec
shr
jno
lock
aaa
fisubs
inc
out
xchg
push
or
inc
loop
loopne
fisubs
mov
inc
out
mov
adc
jl
in
xor
xor
lods
dec
pop
mov
dec
mov
outsl
jns
mov
jg
pop
dec
sti
sahf
mov
mov
in
in
data16
popa
jbe
jle
cs
push
addr16
xor
dec
dec
cld
sbbl
xor
call
loop
aaa
mov
mov
es
push
data16
jae
xor
ljmp
lods
pop
loop
loop
cmp
out
inc
push
lds
in
repnz
loopne
lods
lea
push
push
imul
pop
mov
dec
or
cmp
hlt
cltd
pusha
dec
js
inc
xchg
jb
mov
scas
pop
inc
es
scas
leave
jo
je
jns
fcom
or
jbe
and
cmp
shrl
and
dec
pop
int3
stc
sub
pop
popf
and
nop
sahf
adc
loop
sbb
fcoms
xor
imulb
xchg
xor
test
andl
popf
xchg
jecxz
sbb
push
mov
mov
lret
ret
ljmp
les
cmp
add
push
push
cmp
sbb
adc
stc
stos
stc
inc
sub
stos
shlb
mov
in
jge
jno
cmp
cmpsl
scas
cwtl
cmp
sahf
pop
lods
dec
or
adc
push
or
mov
jge
fisubl
or
jge
adc
pusha
pop
aam
pop
repz
test
shrl
out
fdivl
push
lret
xchg
sbb
sti
sbb
rcrl
rsqrtps
or
xchg
pop
in
mov
mov
adc
sub
sbb
dec
mov
and
cmovg
fsubs
mov
jno
sub
loope
ret
push
xlat
int
cld
jp
push
div
daa
mov
inc
push
mov
push
push
sbb
rorl
mov
ror
icebp
mov
mov
dec
and
aad
jmp
popf
bound
rorb
ficompl
cmp
cli
jp
mov
decb
mov
fisttpll
add
inc
xchg
out
out
fidivrs
shrb
test
sbb
mov
les
mov
xchg
mov
cmp
sbbl
pop
lods
jle
dec
scas
jae
sub
ret
outsl
and
lret
xchg
cmp
xchg
mov
pop
xor
test
loop
jb
inc
es
jp
mov
jmp
push
cmp
pop
sbbb
dec
inc
sahf
mov
mov
stos
iret
addr16
movsb
nop
inc
jns
ret
dec
sarl
fdivl
leave
push
loop
xchg
add
mov
mov
push
mov
cmp
sub
idiv
push
adc
xor
or
in
frstor
sub
push
dec
stos
adc
daa
xor
aas
mov
mov
ljmp
arpl
and
mov
cli
sbb
xchg
jae
sbb
in
insb
xor
cwtl
lods
daa
cld
add
lods
mov
cs
fiaddl
shrb
lahf
inc
push
mov
jb
into
cs
pop
lret
subl
cmp
push
rcrb
xchg
mov
rolb
inc
fdivrs
add
repnz
jbe
out
inc
sbb
fdiv
out
mov
jg
loope
mov
test
int
inc
arpl
pop
cli
mov
cmp
out
aad
adc
jl
add
push
sahf
or
add
or
push
jg
scas
or
dec
faddp
addr16
mov
call
xchg
lret
xchg
dec
test
mov
pop
jns
orl
xchg
cwtl
or
cmpsl
sbb
adc
int3
pop
add
push
rorb
notb
and
pop
rcl
je
sti
dec
movsl
stc
les
add
push
das
lds
imul
add
subl
stos
stc
xor
sbb
gs
cs
mov
xor
cli
mov
cmp
dec
sbb
xor
mov
les
cmp
fcoms
dec
pop
inc
mov
jmp
add
fwait
xlat
aas
addr16
push
jg
scas
adc
cmp
xchg
or
pop
push
bound
pop
mov
xchg
mov
repnz
pop
dec
popa
pop
fsub
js
adc
push
adc
jmp
xchg
sub
dec
out
call
insb
or
pushf
stc
stos
lds
fisubl
jle
rclb
mov
xor
rolb
sub
mov
enter
mov
iret
cmp
out
and
pop
jbe
adc
nop
mov
sub
jae
mov
lahf
sar
push
or
scas
imul
cld
into
lcall
xlat
cmpsl
push
inc
xchg
mov
lods
stos
std
out
mov
test
dec
inc
nop
cwtl
repz
mov
sub
xchg
pop
in
out
iret
es
ja
or
jo
imul
fs
int
je
xor
es
xor
je
inc
push
data16
fcmovu
adc
testb
mov
inc
or
loop
push
ds
int
aas
and
enter
insl
push
push
sbb
push
jbe
jmp
dec
mov
icebp
lea
in
sbb
fimull
lock
scas
mov
rcr
or
loop
xlat
repnz
xchg
std
add
fistps
loopne
adc
addr16
sar
cmp
push
out
xor
mov
dec
fadd
addb
lcall
lods
xchg
push
push
xor
mov
jecxz
mov
es
sahf
shll
pop
ja
and
outsl
mov
pushf
fisubrs
mov
repnz
or
cmp
loop
cld
je
mov
xor
jnp
inc
loopne
rolb
sbb
jle
cmpsb
rclb
or
mov
dec
sbb
popaw
jne
adc
outsl
rcpps
inc
mov
jno
pop
mov
jne
xor
push
pop
and
cmp
cwtl
movsl
add
push
push
aad
add
shlb
cmp
sti
inc
icebp
push
fs
inc
cmpsb
test
das
push
xchg
mov
js
sbb
scas
push
mov
and
es
mov
arpl
and
pop
fs
mov
and
cltd
popa
fnstcw
aaa
inc
lret
into
stos
mov
pushf
mov
cmc
mov
mov
push
fmull
adc
ror
bound
mov
iret
aad
mov
enter
add
mov
inc
je
in
adc
fimull
cmp
jns
pushf
insb
pop
les
and
and
pop
in
push
fcompl
sub
push
lret
sub
pop
mov
mov
addl
sub
repz
jge
or
cmp
jne
or
popf
movsb
int
dec
sti
mov
jl
imul
clc
in
outsl
int
mov
xchg
jle
sub
xchg
add
sbb
add
out
xchg
lret
arpl
xor
xchg
add
mov
dec
scas
hlt
cmpsb
mov
dec
mov
sarl
push
rcrl
fwait
es
or
and
mov
lds
out
pop
repz
pop
ja
je
jnp
imul
push
lahf
loop
pop
fdivl
cmpsb
cmp
inc
icebp
popa
data16
push
pop
loopne
es
pop
cmp
jno
sub
js
nop
repz
add
mov
mov
ds
shl
insb
fwait
inc
divb
clc
daa
pop
cmc
loopne,pt
mov
sbb
push
stos
mov
inc
ja
js
jo
adc
int3
or
nop
faddp
out
test
fucomip
ja
add
pop
add
std
push
lods
cmc
adc
mull
sub
mov
inc
fstl
arpl
pusha
xor
cmp
std
arpl
sbb
xchg
pop
data16
mov
inc
imul
ds
xchg
xchg
xchg
sub
je
sbb
xlat
sub
aam
cmp
or
push
adc
jo
lahf
nop
pop
loopne
jg
subb
xchg
mov
sub
sub
aaa
pop
jmp
stos
mov
pop
mov
xorb
stos
pop
xor
leave
dec
test
mov
dec
sbb
sbb
cmp
or
adc
rorl
jg
dec
in
lods
hlt
xor
rcl
pandn
hlt
pusha
or
inc
mov
sub
negb
xchg
lds
in
sbb
packsswb
arpl
notb
fnstenv
js
ja
mov
ljmp
sarl
mov
mov
sbbl
push
mov
dec
cmp
xchg
sub
mov
sarb
sbb
add
rcrb
ds
inc
pop
push
mov
paddsw
popl
jle
inc
movsb
jl
data16
sub
aaa
test
or
jbe
aam
dec
xchg
push
push
push
imul
push
stos
ror
or
pop
pop
mov
or
out
cli
fildl
repnz
sahf
jecxz
aaa
mov
xchg
orl
or
sbbl
sbb
jl
xor
add
ret
sarb
or
nop
test
pop
mov
es
std
inc
sbb
cmpsb
pop
xchg
shlb
inc
cltd
sbb
out
sub
loope
pop
xor
pop
lret
adc
fldenv
loope
test
addr16
pop
daa
es
scas
es
lret
aad
xchg
jp
cmp
lcall
sbb
divl
dec
dec
insl
and
xor
arpl
fmuls
dec
cs
push
pop
into
fisubrl
or
adc
mov
bound
xor
and
addl
push
push
loopne
stos
scas
fcompl
mov
icebp
push
cld
push
mov
cs
mov
daa
cmp
and
mov
mov
sub
add
cltd
ja
aaa
icebp
lret
pushf
mov
bound
rorb
xchg
mov
mov
and
out
sbb
lds
rcll
scas
icebp
aam
push
sbb
sub
jmp
les
in
shl
pop
stc
mov
xor
xchg
mov
and
cmp
mov
and
fs
adc
out
and
inc
bound
xchg
imul
repnz
sub
fcmovnb
or
out
or
lcall
jp
incb
repz
cmp
ss
in
xchg
shll
mov
repz
fbstp
aas
std
mov
xor
rcrl
bound
aad
mov
arpl
mov
mov
and
sbb
pop
jne
xor
fnstcw
sbb
insl
aam
test
cli
je
mov
or
push
imul
fdivrs
dec
xchg
jnp
cmpsl
stos
push
mov
pusha
xchg
dec
and
mov
das
test
mov
dec
xor
inc
xlat
std
sub
fs
pop
loope
fdiv
pushf
cs
stos
adc
in
sub
rcrb
movsb
xor
lds
xor
popf
icebp
push
lret
fcoms
js
and
repz
lret
stc
or
jl
sbb
out
jecxz
ret
sub
jp
mov
inc
pop
imulb
fidivrl
and
push
pop
mov
inc
mov
xchg
dec
mov
inc
jp
push
in
add
stos
xchg
push
int
stos
and
outsb
xchg
jle
lret
cmp
insl
xchg
pop
push
push
mov
sbb
popa
sub
bound
test
repnz
cmp
ficomps
and
rcll
mov
jnp
into
loop
leave
int3
adc
lcall
adc
outsl
popa
insb
aas
mov
inc
repnz
lahf
pop
push
aam
and
sbb
push
pop
mov
pop
jbe
push
bound
repnz
lods
xor
sarl
or
and
insb
mov
jne
push
mov
sahf
xchg
sbb
xor
pusha
mov
iret
and
rclb
add
cmp
lret
imull
mov
sbb
out
jmp
or
arpl
fcoms
into
dec
cmp
gs
icebp
mov
into
call
divl
cmp
test
pop
jl
push
jb
aas
lret
gs
mov
dec
loopne
pop
imul
ret
es
inc
js
push
ret
add
test
mov
lea
out
rcrl
scas
and
mov
hlt
jbe
push
dec
mov
outsl
sbb
jns
xchg
pop
test
outsb
das
sahf
test
hlt
aas
dec
stc
mov
fistpl
mov
ds
ss
jl
or
mov
into
adc
adc
dec
add
test
mov
or
imul
int
sbb
andb
pop
imul
xchg
daa
ss
adc
cmp
outsb
sbb
hlt
pop
addr16
inc
pop
mov
inc
rcll
jo
or
add
inc
data16
jmp
mov
pop
gs
iret
sti
sahf
and
test
pop
int3
xchg
pop
mov
inc
sub
push
jnp
gs
std
add
mov
push
pop
repz
inc
mov
rcrb
push
push
mov
stos
jge
mov
or
pop
sub
xor
mov
mov
insl
mov
sbb
pop
aaa
in
mov
les
push
pushf
xchg
pop
mov
scas
xor
sbb
inc
shlb
pop
jle
push
push
in
loopne
and
push
sbb
sub
cmp
stos
sti
xor
fmull
ficompl
loop
mov
jnp
xor
notl
hlt
dec
sbb
jnp
adc
loope
jp
jb
mov
sti
xchg
out
or
mov
cld
pushfw
rclb
stos
sub
orl
adc
mov
jbe
dec
xchg
sub
mov
lods
mov
out
aam
inc
jp
scas
mov
sub
imul
loopne
dec
push
mov
cmpsl
sub
dec
inc
jb
push
sbb
push
mov
xor
or
jae
sbb
nop
lods
dec
js
lret
scas
jecxz
mov
sub
mov
ret
jecxz
push
adc
and
test
fidivl
test
inc
cmp
mov
mov
pop
subl
cld
mov
mov
jb
mov
stos
pop
sbb
pop
xchg
shlb
mov
addb
aas
pop
hlt
dec
rcrl
push
out
xchg
leave
cmp
shlb
cli
mov
or
push
dec
push
and
lock
pushf
xor
xor
inc
add
push
bound
lahf
sub
mov
dec
fs
dec
pop
mov
loop
inc
jge
pushf
js
nop
inc
fwait
cmp
push
or
test
and
into
fstp
ss
pop
jae
aaa
enter
popa
stos
arpl
pushf
cmp
fldl
es
out
jae
popa
xchg
mov
fidivs
mov
mov
je
lcall
jno
push
push
inc
cmp
push
mov
adc
dec
into
jg
add
fdivrs
scas
mov
pop
dec
sti
dec
dec
mov
add
test
movsb
cltd
dec
movsl
mov
add
cmp
insb
repz
mov
pop
shlb
add
fildl
aad
jg
dec
mov
aaa
cs
sbb
stos
sbb
lock
loop
cmp
adc
in
popf
mov
sub
jp
enter
sbb
addr16
fisttps
or
sbb
cmpb
repz
dec
adc
xchg
dec
loope
adc
cmp
sbb
mov
les
lods
loopne
inc
aam
movd
fisubrs
insl
inc
pop
and
test
insl
imul
cltd
jnp
nop
xchg
rcrl
cmp
mov
stc
cmc
cmpsl
shr
xchg
or
adc
or
adc
push
movsbl
mov
lods
data16
xchg
es
sub
loop
lods
or
push
call
cmpsl
sub
adc
push
dec
iret
loopne
insb
push
jo
mov
repnz
add
sahf
mov
repz
pop
sarl
jo
sub
cmp
mov
or
paddsw
xchg
cmp
cmc
inc
adc
rol
mov
dec
dec
je
sub
fstps
adc
xchg
and
jle
cmp
test
xor
stos
lods
mov
jmp
out
jge
mov
pop
push
lcall
mov
pop
jae
jae
movsb
mov
inc
push
jno
push
shll
fsubrs
pushf
daa
dec
mov
mov
sbb
fldt
sbb
xchg
out
movsb
subb
push
stos
stos
xor
pop
or
int
inc
fwait
out
pop
insl
inc
inc
loope
lds
imul
cmp
lret
push
jno
mov
fisttpll
jecxz
mov
arpl
jns
jns
aad
jmp
dec
push
clc
dec
cmp
xchg
shrl
add
lcall
in
jl
stos
icebp
popa
xchg
sbb
sbb
scas
pop
dec
sbb
and
shlb
ds
icebp
aas
xlat
repnz
push
mov
dec
in
lock
xchg
or
inc
pop
in
push
outsb
cld
xor
xchg
dec
pop
lea
mov
mov
add
add
inc
and
popf
jge
and
imul
sbb
jno
adcb
jo
popf
addb
adc
xor
xor
or
inc
sbb
and
dec
mov
out
and
jno
dec
test
push
sarl
add
sbb
sub
pop
ret
sbb
dec
push
push
pop
cmp
stos
add
fcompl
cmp
shr
xchg
and
push
sbb
xchg
xchg
iret
enter
sahf
jno
ret
shrb
mov
jl
movl
push
add
or
sub
sub
es
fldl
or
jo
pop
sbb
ljmp
mov
in
mov
and
xor
int
fimuls
out
mov
sub
iret
mov
mov
dec
int3
outsb
ficoms
inc
mov
adc
xor
pop
jno
and
xor
inc
scas
mov
fstp
jns
mov
pop
sbb
jl
pusha
sub
jb
mov
stos
mov
sti
dec
add
leave
clc
sub
daa
push
imul
cmpsl
push
dec
pushf
push
adc
xchg
push
xorb
cli
jnp
cld
cld
cmpsb
cmp
mulb
pop
out
adc
fwait
or
stos
jns
push
cmp
xchg
xor
insl
jge
stos
fsubs
repz
mov
xor
outsb
push
addb
add
pusha
pushl
and
xchg
in
jb
aas
pushl
mov
pushf
jmp
fcomps
pop
xchg
inc
shl
stos
xor
js
and
or
popf
in
mov
or
jle
cmp
loop
mov
es
push
mov
pusha
dec
add
jbe
clc
or
fidivs
or
ljmp
les
mov
mov
sbb
fs
adc
adc
xchg
rep
pop
fistps
call
jae
or
int
aaa
inc
push
stc
test
notl
out
mov
outsl
jmp
cmpsl
cmp
in
cmp
pop
int3
outsl
daa
ja
divl
and
cs
jno
push
sbb
mov
lret
test
adc
dec
xorb
outsl
in
cmpl
dec
das
pop
cmp
add
jbe
push
or
mov
out
icebp
test
lods
aam
jmp
cmpsl
insb
lods
std
bound
cmp
or
push
xchg
mov
or
int
out
push
push
jnp
lods
test
jg
inc
jmp
test
add
jecxz
fucom
mov
xor
or
jp
mov
addr16
xchg
dec
aam
mov
dec
rcr
mov
iret
adc
inc
fadds
in
fwait
push
mov
decl
and
xor
lcall
andl
jp
daa
xlat
pusha
sub
mov
scas
daa
inc
jle
fst
cli
mov
jge
insl
out
push
jbe
sbb
cmp
sub
addr16
popa
aad
shlb
adc
into
popl
fdivl
adc
sbb
lahf
imul
xchg
in
add
and
xchg
xchg
iret
or
cld
loope
mov
ja
and
jmp
pop
lret
cmp
test
mov
and
enter
mov
pop
ret
or
jmp
push
pop
mov
xor
dec
sub
roll
jns
inc
js
addr16
inc
pop
test
mov
data16
ret
cltd
jae
push
mov
push
jle
shll
or
filds
jmp
fcoml
insl
adc
stos
jg
jno
pop
testl
pop
inc
jae
repnz
pop
adc
mov
fsts
negb
sbb
cmp
jmp
xchg
in
scas
add
pop
xchg
add
sub
push
or
pop
pop
cmp
adc
add
dec
bnd
mov
cli
add
push
ds
pop
mov
mov
leave
jecxz
test
mov
rorl
data16
mov
mov
jmp
push
lret
mov
les
mov
sub
mov
jl
mov
adc
xchg
lea
das
and
enter
push
aas
sbb
add
and
cwtl
fildl
mov
out
xor
jp
into
popa
test
notb
sub
mov
cmp
jae
add
ljmp
or
add
xor
fwait
test
push
jecxz
or
leave
std
imul
or
xor
xor
dec
mov
push
push
xor
inc
les
jecxz
int3
and
jns
mov
push
out
std
clc
mov
pop
pusha
gs
test
jae
pop
lret
or
inc
out
rorl
add
ret
outsl
dec
ds
cltd
test
cmpb
in
pop
mov
sub
das
sti
ljmp
test
lds
cwtl
jno
push
scas
xchg
mov
xlat
jbe
gs
stos
data16
inc
mov
jmp
xchg
xchg
add
mov
lahf
out
out
inc
loope
data16
and
movsl
data16
add
jp
mov
mov
dec
dec
inc
cli
pop
and
in
pop
icebp
pop
je
jno
std
jmp
inc
and
jnp
push
cwtl
mov
mov
gs
xchg
fadds
stc
fs
test
int
shlb
mov
or
popa
inc
cmpl
aam
sbb
mov
es
cmpsl
push
sbb
push
push
xchg
in
cmp
cwtl
mov
lahf
push
in
mov
xor
adc
shrb
mov
fsts
mov
in
add
mov
lock
or
lods
pop
dec
int3
inc
inc
sub
subl
mov
pop
in
or
test
fiadds
out
arpl
or
loop
inc
cs
aad
adcb
pop
xchg
divl
call
repnz
cwtl
int3
test
cmp
pop
sbb
cmp
fstpt
pop
mov
ficompl
icebp
aaa
aad
or
adc
lcall
dec
or
xchg
dec
pop
mov
dec
cmp
out
lret
xchg
jg
add
xor
out
fnstcw
loope
cld
add
jne
dec
pushf
mov
insb
mov
or
rcr
xlat
faddp
inc
xchg
sub
test
mov
jnp
into
jb
push
jbe
cmpsl
out
add
out
imul
cmpsb
add
test
jbe
in
jns
add
push
or
add
lret
loopne
cmp
add
pop
pop
out
jo
xchg
jns
loop
scas
add
sbb
stc
ffreep
int
loopne
fwait
mov
leave
pop
stc
xor
fucom
xchg
mov
ret
jg
sub
cmp
lea
les
pop
sbb
fdivr
lods
add
negl
sahf
sbb
push
insb
sub
jns
push
ja
jns
sub
xlat
test
sbb
sbb
les
xchg
cmp
aas
in
into
jl
cmp
imul
mov
mov
mov
jae
jbe
mov
popa
scas
or
out
jg
or
push
jle
stos
out
out
pop
sub
pop
clc
mov
dec
adcb
adc
ficoms
cltd
mov
or
in
mov
pop
rep
nop
and
mov
mov
dec
jcxz
mov
das
sub
jo
jno
les
cmp
push
mov
arpl
aam
iret
aas
pop
daa
cmp
add
aam
and
mov
xor
pop
adc
add
fsubrs
xchg
mov
addb
and
loope
arpl
es
inc
sub
fwait
movl
push
test
jp
aad
fdivp
adc
xchg
push
sub
fstpt
push
inc
sbb
and
xlat
mov
mov
or
push
xchg
inc
aam
pop
in
lret
mov
mov
pop
cmp
xchg
pop
popf
inc
and
xor
int
sbb
pop
or
das
out
inc
movsb
stc
xchg
into
subl
inc
pop
sbb
cmc
enter
mov
mov
dec
mov
mov
lahf
fsubrp
jnp
push
pop
test
js
movsb
cmp
xor
jno
jns
ljmp
clc
mov
dec
mov
jns
push
xor
clc
jae
xchg
jp
jg
inc
mul
cmp
pop
or
ljmp
in
xor
popa
movsl
fcmovnbe
and
movsl
loop
fdivrs
int
mov
push
lahf
ds
dec
scas
fmul
mov
push
mov
jmp
pop
jnp
and
jno
sub
mov
shrb
xor
mov
ja
jno
mov
push
jmp
jmp
mov
mov
jle
inc
mov
das
adc
cmp
jge
mov
std
mov
cmp
sub
adc
call
jnp
dec
lds
cmpsl
ror
mov
es
in
cmp
daa
icebp
cmp
add
xor
or
cmpsl
jb
push
sbb
mov
add
fnstcw
hlt
push
mov
sub
jo
pop
or
sbb
push
dec
stos
fwait
mull
mov
mov
jl
adc
sti
xlat
xchg
rcr
jo
jmp
mov
push
imul
fmuls
dec
push
xchg
xchg
in
dec
neg
adc
push
hlt
dec
out
mov
jo
std
push
inc
adcb
insl
lock
out
cld
aam
adc
out
push
mov
and
lret
sti
mov
ficoml
loop
adc
pop
fs
imul
or
orl
inc
add
and
mov
xchg
cmp
shlb
scas
mov
icebp
sub
xchg
lock
push
inc
insb
cmc
cmpsl
cs
arpl
rorl
mov
mov
mov
cmp
loopne
clc
or
jae
xchg
xchg
xor
outsb
add
pop
xor
sub
xchg
dec
sbb
jecxz
or
pop
or
or
push
cmp
mov
sbb
or
pop
xor
je
aad
test
aas
inc
mov
ret
sub
push
aas
inc
cli
push
mov
out
insb
push
xor
jne
bound
pop
jecxz
into
sbbl
cli
mov
sub
jns
addl
pop
orl
xor
nop
rolb
hlt
sub
ffreep
popf
or
jle
aad
ret
pop
cs
adc
sub
cs
push
sbb
mov
addr16
jg
sti
in
aam
xor
pop
inc
jns
aaa
mov
fidivs
mov
mov
jnp
rorb
adc
jno
cld
push
adc
insb
out
mov
sub
insl
repz
int
pop
pop
in
inc
shl
adc
rcl
push
dec
lret
sub
stos
inc
sbb
dec
aaa
movsb
dec
sti
cmp
cmpb
jmp
lahf
mov
int3
dec
sbb
pop
jno
pop
cmp
repz
fidivrl
push
bound
mov
jecxz
cwtl
mov
lret
push
int3
mov
sub
pop
jl
pop
leave
xlat
mov
pop
bound
xchg
jmp
adc
cmp
outsb
inc
addr16
dec
je
outsb
dec
add
sbb
dec
loope
mov
dec
add
outsb
outsl
ss
shlb
loopne
gs
mov
mov
sbb
or
rcrl
inc
add
cmp
lahf
xchg
adc
dec
mov
xor
cltd
mov
stos
pop
lgs
adc
out
sbb
pop
mov
aam
push
test
or
xor
and
mov
adc
xchg
jle
cltd
scas
es
in
cmp
cmp
ljmp
and
sbb
sbb
or
lret
in
fst
imul
mov
stos
insl
arpl
pop
out
mov
in
cwtl
enter
cwtl
call
out
mov
jg
dec
sub
dec
daa
pop
lcall
sub
fsubs
dec
jg
sub
xchg
adc
adc
sti
sbb
cmpl
xchg
popf
add
les
leave
nop
nop
out
movl
xor
mov
or
imul
jo
scas
shll
mov
imul
cwtl
int
fdivrl
fwait
jo
push
sbb
clc
cltd
sub
enter
loop
inc
mov
mov
mov
inc
push
cli
loope
lods
out
js
mov
dec
aas
rclb
xlat
push
stos
add
mov
sbb
push
push
jge
jge
and
fldl
and
sbb
xor
fadds
adc
pop
fstpt
jg
mov
insb
neg
arpl
mov
mov
nop
pop
fbld
negl
add
ljmp
enter
jo
call
rcl
sub
adc
xchg
js
mov
cmp
cmp
jp
xor
mov
jmp
jmp
popf
add
mov
addr16
adc
test
xor
loop
mov
movsb
dec
jne
xor
mulb
inc
cmp
mov
sub
push
add
into
ficomps
lahf
int
adc
mov
paddd
add
xchg
dec
bound
loopne
aaa
adcl
and
mov
daa
jle
nop
stos
ds
rclb
push
setae
jbe
xor
xchg
adcb
inc
adc
dec
push
push
dec
gs
imul
ja
pop
in
cmp
push
sub
popa
idiv
stos
ljmp
sbb
or
jle
mov
mov
repz
fldcw
cmpsb
popa
outsl
icebp
sub
pop
scas
or
and
mov
xchg
cmp
push
mov
inc
cmp
rol
sbb
jle
cmp
mov
jno
lods
sti
iret
out
add
popf
xchg
jecxz
add
int3
xor
sub
or
sahf
mov
ljmp
lret
lret
or
or
pushf
cmpsl
fidivrl
enter
imul
cmp
lea
add
xchg
pop
cmpb
jno
sbb
rcrb
addr16
out
mov
adc
cli
aaa
push
jno
cwtl
and
stos
xor
sub
dec
and
outsl
xchg
pusha
lret
fidivs
dec
das
pop
jle
push
add
aad
inc
test
lcall
loop
fldl
pusha
xchg
pusha
rcrl
mov
push
push
insl
aam
jo
adc
mov
pop
and
add
fst
repnz
test
dec
leave
jmp
sub
test
in
imulb
movsb
popf
enter
int3
mov
fs
push
and
add
subl
pusha
lahf
cmp
push
ss
out
push
movsb
xorl
mov
movsb
jno
daa
mov
sub
push
pop
fildl
neg
sbb
fcoml
loope
imul
xor
addr16
sub
cmp
jmp
sbb
xchg
sub
push
adc
xchg
adc
mulb
fdivrs
repnz
popa
cmp
mov
inc
mov
stos
dec
popf
lret
xor
mov
dec
in
mov
push
rcrb
ss
sti
aad
mov
or
adc
mov
cmp
in
jo
loope
pop
lret
or
sbbl
scas
push
xchg
aad
repnz
jle
mov
out
cmp
std
lds
mov
mov
or
adc
arpl
out
sub
out
cmpsb
aad
sbb
loop
fimull
lret
cmpsl
pop
mov
leave
and
outsb
or
mov
enter
jg
je
jge
jmp
in
cwtl
mov
mov
and
sarb
ror
xchg
push
cmp
mov
pop
fcoml
cmp
jl
push
imul
or
mov
jmp
gs
test
jg
ret
push
and
int3
scas
ret
andb
push
shlb
pop
jp
xchg
cmc
xchg
mov
or
dec
pop
jno
imul
push
add
nop
lods
and
mov
insb
sbb
jnp
and
scas
mov
xchg
addl
push
pop
sarl
pop
movb
sub
mov
sti
xor
or
mov
dec
push
mov
mov
sub
push
arpl
or
fstpl
aas
or
ret
ss
jns
test
adc
out
rclb
mov
lds
loope
int
push
notl
rcrl
sbb
ss
lret
jb
ds
sub
sbb
xchg
xlat
sub
int
fmulp
pop
gs
test
in
sub
or
mov
dec
cmp
stos
adc
jle
call
das
icebp
sahf
cmc
mov
out
leave
cs
pop
repz
fsubrl
pop
lahf
shll
leave
pcmpeqb
jge
fisubs
inc
jle
cmpsb
or
jle
pop
pop
xchg
pop
push
leave
popf
cmpsb
loope
adc
out
xor
lahf
inc
leave
xor
push
repz
xor
adc
jo
dec
std
leave
cmp
xchg
pusha
in
cltd
rorl
lcall
and
lods
push
stos
and
xlat
push
xor
sbb
fmulp
add
cmpsb
cltd
pop
jno
shrb
inc
inc
mov
fcmovnbe
add
hlt
mov
cld
or
rclb
das
cwtl
aas
and
inc
mov
aaa
dec
dec
or
orl
out
mov
push
mov
sbb
jg
adc
dec
xchg
iret
cmp
out
out
jb
sub
push
jl
sbb
out
add
test
push
fsubrp
cmpsl
sub
test
in
mov
lea
or
in
or
aas
xchg
ret
push
popa
push
push
fsubrs
sub
enter
out
push
iret
cmpl
push
scas
dec
xor
jg
add
dec
call
jl
scas
in
test
es
and
lock
ljmp
jle
aad
and
je
push
ss
dec
push
mov
enter
jp
orl
nop
xor
sub
inc
outsl
outsl
into
mov
test
mull
mov
dec
aas
dec
jg
dec
rcrl
in
push
mov
nop
pusha
xor
cmp
in
or
xor
popf
movsb
aas
mov
mov
add
in
lods
sbb
jl
sbbb
ret
into
lret
fnstenv
xchg
inc
stos
mov
rclb
dec
aas
fmull
stos
scas
push
sub
jno
ds
push
fimull
dec
inc
leave
daa
xor
clc
sti
sahf
ret
sbb
lret
fwait
rorl
cmp
cmpsl
lret
loop
mov
mov
pop
mov
rorb
fnstcw
imul
inc
nop
jl
mov
and
push
bound
test
in
jmp
out
mov
mov
fdivrs
rorl
mov
faddl
add
fists
or
or
ds
fstpl
xchg
adc
sbb
xchg
push
je
cmpsl
movsl
inc
inc
in
ja
jno
xchg
xchg
xchg
insb
cld
and
push
repz
test
jge
jmp
add
subl
and
add
push
xchg
push
loope
es
shrb
add
xchg
jmp
push
outsl
pop
fistpll
leave
sbb
inc
sbb
mov
fnstsw
js
and
sub
cmp
outsb
decb
xor
stos
jl,pn
mov
clc
dec
mov
inc
or
lret
jmp
xchg
sub
push
jb
jl
shrl
mov
pop
lock
cmpsb
add
gs
iret
sbb
testl
fs
pop
jp
leave
dec
jle
adc
push
fsubl
cmpsl
cwtl
movsl
js
imul
pop
scas
incl
sti
sub
jae
leave
rcrl
hlt
push
andl
test
movsb
in
imul
push
push
push
mov
out
jae
fisttps
lods
cmp
js
icebp
jbe
lods
nop
scas
add
pop
test
mov
or
mov
jnp
jle
pusha
push
pop
jno
nop
pushf
arpl
jo
les
and
mov
std
int
pop
xor
mov
and
inc
sub
scas
es
add
mov
stos
ss
pop
call
mov
mov
loopne
xchg
mov
pop
ret
sbb
lret
add
xchg
add
dec
cwtl
mov
or
jbe
insl
mov
ret
fists
mov
aaa
enter
xor
sbb
xchg
cld
mov
pop
or
movsb
dec
stos
ljmp
xor
fbld
and
push
outsl
popl
pop
cmpsb
fcoml
ss
mov
decl
test
dec
lcall
mov
test
mov
sub
jmp
adc
pop
out
xchg
lret
xor
pop
test
cmpb
packsswb
int3
dec
fwait
mov
lret
imul
mov
mov
xor
xchg
popf
sbb
fldenv
mov
inc
push
movsb
sahf
sbb
xchg
das
inc
enter
jecxz
ret
cmp
xor
pop
arpl
cs
daa
insl
cmp
push
imul
adc
shl
cltd
and
into
push
jb
pop
aas
jmp
mov
push
shll
fcmovb
testb
out
and
fimull
enter
jb
movsl
loope
insl
inc
jb
jp
and
inc
xor
lods
leave
xabort
dec
ljmp
xlat
idivb
lods
xchg
imul
lock
out
stos
xor
jmp
and
lcall
cmp
mov
mov
xchg
and
loopne
add
sub
fcomps
xor
xor
daa
pop
loop
fwait
jmp
adc
fwait
shlb
roll
dec
jge
xchg
es
loop
cmp
cmp
cmc
je
dec
xor
pop
mov
mov
pushl
icebp
test
inc
cltd
sub
ficoml
sbb
fildl
inc
push
dec
sub
xchg
mov
push
inc
mov
xchg
fsubl
add
es
xor
insl
ja
pop
shlb
push
push
shlb
int3
imul
fucomp
les
movsb
xchg
das
dec
notb
mov
xchg
jg
out
inc
pop
xchg
les
out
jb
testb
ja
xor
test
ljmp
sarb
aam
cmp
adc
and
xchg
test
addr16
xchg
push
pusha
clc
js
adc
xor
scas
xorl
xchg
inc
inc
jmp
cmp
cmp
mov
cmc
mov
in
dec
sub
sub
mov
and
data16
nop
inc
dec
push
cmp
nop
mov
cmp
add
xchg
jb
cmp
add
inc
xchg
adc
pop
sarl
movsl
sbb
shll
push
adcb
mov
push
daa
inc
cmc
jbe
lcall
push
xchg
dec
dec
insb
clc
addr16
stos
sub
popf
xchg
ficoml
inc
movsl
inc
into
popa
stos
and
das
lahf
into
xchg
adc
xor
adc
mov
nop
mov
outsl
and
xchg
mov
into
fnstenv
test
insb
jle
out
dec
sbb
fwait
dec
mov
push
lods
sarl
in
aad
pop
and
pop
xchg
ljmp
loop
out
cli
dec
cmc
add
sub
aaa
jne
xor
call
scas
inc
mov
lock
mov
mov
lds
cmp
mov
mov
bound
andl
dec
cwtl
mov
and
sbb
in
jns
stc
lahf
cmp
pop
rolb
or
daa
add
sbb
pop
sub
ss
cmp
mov
loopne
push
outsb
roll
dec
jns
jo
stos
mov
sarb
jge
mov
fstpt
sub
jle
push
and
jl
cld
shrb
push
cmpsl
lret
cmc
xchg
shl
sbbl
fimuls
add
jle
mov
fs
nop
mov
je
jl
jns
sub
test
sbbb
mov
xor
cmp
shr
js
stc
ficoml
jl
sub
std
cmpl
std
and
and
out
cltd
sbb
clc
jnp
mov
lahf
pop
rcr
subb
lods
sbb
stc
mov
pop
inc
mov
sub
in
adc
cmp
jle
out
jnp
cmpsl
jnp
mov
push
stc
data16
dec
and
jbe
cmpsl
dec
insb
loopne
scas
aad
mov
and
mov
shrl
mov
ljmp
adc
and
movsl
imul
sbb
dec
sbb
and
jmp
and
mov
scas
lds
inc
stos
jo
scas
dec
loopne
sub
push
out
push
scas
imul
add
mov
mov
pop
adc
ror
int
test
jb
adc
pop
mov
int3
cmp
loopne
popl
lods
enter
push
xchg
cmpsl
and
or
xchg
cmp
test
pop
aad
xorb
inc
push
scas
mov
mov
dec
ja
inc
add
cmp
dec
and
outsl
gs
jp
sbb
in
js
mov
ret
xchg
decl
sbb
inc
xor
in
xor
arpl
inc
lock
xchg
loop
jns
mov
negl
jnp
lret
jg
ljmp
mov
dec
mov
js
aaa
xor
es
inc
js
jge,pn
fisubrl
and
mov
out
mov
inc
insb
pop
lret
dec
mov
xchg
dec
jmp
and
xor
cmpsl
stos
shll
push
mov
and
pop
mov
js
aad
add
mov
jp
dec
pop
loopne
xlat
pop
mov
andb
scas
jne
scas
pop
mov
nop
vaddsubpd
sub
out
xchg
sub
gs
es
sbb
or
push
in
loopne
and
fiaddl
xchg
ret
dec
jnp
mov
outsb
sbb
ja
cwtl
ror
jne
xor
sbb
xchg
ss
aas
push
lds
push
insb
ja
test
xchg
mov
and
mov
pop
mov
rcll
sbb
ficomps
xor
arpl
mov
cmpsl
or
cltd
pop
insl
push
sbb
fidivl
movsl
sbb
sub
incb
hlt
scas
je
pop
adc
clc
jae
dec
push
adc
cmp
sub
js
lods
xor
xchg
adc
or
es
push
mov
rcrb
inc
loope
and
nop
add
dec
lret
sbb
cmp
mov
mov
dec
jge
cmc
lcall
jmp
mov
xor
mov
enter
cld
repz
loope
inc
stc
test
adc
push
mov
or
lock
mov
sbb
adc
loope
push
pushf
stc
out
cmp
jae
mov
pushf
mov
push
das
out
inc
jp
pop
sbb
ja
push
xor
or
add
daa
rcll
lock
or
dec
insl
xchg
ljmp
rcr
adc
mov
sbb
xor
fcmove
or
adc
xchg
aad
bnd
mov
jb
push
push
add
and
xchg
mov
push
sbb
adc
mov
loopne
xchg
mov
pop
inc
push
enter
cmp
int
inc
mov
leave
dec
loop
sbb
and
sbb
mov
mov
lods
mov
pop
in
fidivrs
xchg
inc
fdivl
js
pusha
das
fdivrl
popf
jl
cmpsb
stc
arpl
fldcw
mov
inc
jmp
jae
cmp
sub
inc
sbb
jge
in
mov
lret
pop
sub
add
or
shlb
push
lea
sbb
mov
adc
repz
lds
imul
pop
iret
sbb
test
or
xlat
inc
test
push
mov
cld
pop
cld
mov
data16
mov
daa
mov
in
and
std
cmpsl
rcrl
push
loopne
rolb
sub
xor
call
mov
pop
cmp
pop
divl
insb
movsb
cmp
jl
sahf
sub
lea
test
jne
hlt
xor
dec
jmp
mov
jae
mov
pusha
mov
cld
jne
enter
cs
scas
jnp
leave
mov
cmp
jnp
orl
aaa
or
popa
popf
in
jmp
scas
repz
jae
or
jp
mov
mov
mov
call
or
cmp
cld
lods
les
mov
and
repz
in
sbb
sub
mov
dec
mov
push
lret
mov
cmp
rcrl
push
lds
dec
int
out
sub
insl
icebp
cmp
in
sbb
fdivrl
addr16
mov
jno
lock
popf
sar
loope
xor
mov
arpl
daa
mov
mov
in
aad
sub
cmp
xchg
jecxz
sub
call
push
inc
jmp
insb
pop
inc
and
mov
test
cli
hlt
mov
mov
xchg
push
adc
fsubl
inc
push
imulb
in
das
or
out
lahf
push
js
push
mov
pop
xchg
push
jns
push
lcall
pop
pop
jo
cmp
faddl
sub
insl
sbb
test
sahf
aaa
loop
fmuls
and
inc
inc
aam
arpl
mov
mov
xlat
rcl
pusha
int
loope
fdivrp
push
sub
shrl
movsl
icebp
pop
clc
push
xor
faddl
pop
xchg
inc
jo
je
das
sub
inc
or
punpcklbw
mov
shll
jle
mov
push
aam
lahf
jg
push
insl
pop
scas
jno
pop
cmpsl
fdivrl
aaa
lods
out
jb
cmpsb
mov
test
pop
jp
addr16
xor
ss
popf
sbb
cld
lock
lret
dec
sub
or
push
js
pop
pop
shl
adcb
inc
in
mov
sbb
test
pop
das
cmp
loope
push
arpl
movsb
push
pop
mov
fisttps
jb
and
out
and
cmc
in
mov
inc
mov
sbb
adcb
loop
mov
sahf
cmp
in
loop
inc
loop
xchg
addl
and
fnsave
mov
sti
fisubl
out
mov
lock
rcrl
pop
sbb
loop
jp
jp
in
sbb
in
pusha
test
js
fwait
nop
xchg
xchg
aam
repnz
xchg
shrb
pusha
or
imul
pop
outsl
and
adc
mov
xor
mov
lahf
cmc
shlb
movsl
test
mov
popf
ret
mov
xlat
add
dec
jmp
dec
sub
insb
jle
sbb
dec
loopne
fs
lock
testl
adc
insl
iret
movsb
pushf
push
push
std
sub
inc
mov
sub
movsb
ljmp
pusha
into
icebp
aaa
stos
out
cld
mov
push
mov
add
mov
mov
add
xchg
fwait
sbb
je
addl
fildll
inc
fwait
insb
jecxz
mov
ret
sbb
dec
xor
loope
or
fadds
bound
lods
pop
sbb
jmp
sub
push
pop
lret
xchg
jbe
push
scas
les
adc
mov
inc
push
sub
lock
subl
xor
jae
cld
sub
int3
js
into
aad
fs
ret
pop
aaa
mov
or
xor
pop
les
mov
cmp
mov
lret
cmp
pop
jp
cmc
jecxz
or
fdivs
divb
add
fiadds
jo
pop
pop
in
aam
lods
fildl
movsl
orl
xchg
mov
sub
mov
dec
aaa
jo
sbb
test
mov
add
and
cmp
inc
dec
repnz
adc
and
pop
sbb
mov
iret
sub
adc
inc
pop
fimull
push
pop
ds
inc
sti
mov
pusha
adc
int
inc
xor
ja
lods
in
mov
lret
sub
push
add
ret
decl
jne
mov
loop
pop
add
jp
rclb
in
adc
mov
stos
lcall
adc
cmpl
add
loop
sub
adc
push
mov
pop
sub
push
les
decl
fcoms
mov
sbb
sbb
addr16
push
aam
movsl
daa
mov
outsb
lret
or
mov
mov
sbb
dec
idiv
mov
lds
inc
sub
imul
lds
mov
in
aas
outsl
push
pusha
pop
ror
jnp
and
and
andps
and
sbb
push
jl
cmc
add
pop
add
scas
mov
push
mov
cwtl
ja
js
daa
es
inc
xchg
icebp
mov
and
int
repz
in
mov
leave
dec
or
cmpsb
cmp
shlb
sub
lea
push
ret
adc
lock
xchg
pop
push
dec
movsl
daa
sub
icebp
and
inc
dec
mov
dec
cltd
xchg
mov
push
cmpsb
outsl
ss
pop
fidivs
push
fisubs
sub
scas
mov
or
bsf
add
xor
inc
dec
test
pop
sahf
imul
push
fwait
inc
push
and
or
dec
and
adc
ljmp
cmp
fldt
mov
xor
mov
push
jp
xor
push
xlat
sub
mov
mov
into
dec
cmp
and
dec
add
stos
mov
mov
pusha
adc
adc
xor
mov
test
fildl
jle
add
inc
pushf
clc
adc
mov
cmpsb
inc
cmp
sub
xor
addr16
xor
or
sbb
or
andb
out
add
push
cmp
mov
cwtl
cs
pop
std
or
shr
push
adc
xor
or
mov
fistpl
inc
shlb
dec
notl
sbb
xchg
loop
jmp
add
stc
movsb
cwtl
js
enter
sbb
pop
fs
and
sbb
adc
mov
roll
jae
inc
fsubrl
sbb
leave
test
xchg
dec
xchg
pop
xchg
cltd
addr16
mov
shll
and
movsl
and
fwait
iret
mov
out
stos
mov
and
add
lret
inc
mov
mov
rol
icebp
sub
xor
adc
xchg
pushf
cmpsl
pusha
jecxz
loop
gs
sbb
pusha
test
or
loop
and
jb
int3
jg
push
dec
jecxz
enter
cmp
inc
mov
sbb
xor
inc
lcall
pusha
or
xor
gs
push
pop
fcomi
movsl
lcall
lahf
rolb
inc
inc
out
adc
xchg
dec
enter
hlt
loopne
arpl
sbb
cmp
mov
shl
fldl
imul
xlat
fst
mov
les
add
mov
into
cmpsl
mov
xlat
and
or
mov
push
dec
sub
out
dec
cmp
rcll
shlb
add
lock
pusha
jl
add
test
jmp
and
sti
out
and
scas
pusha
imul
mov
mov
cmpb
adc
xor
and
cli
popf
adc
repnz
je
rorl
aaa
loopne
lahf
push
sub
push
pushf
and
outsb
mov
or
call
cmp
imul
pop
in
sbb
adc
mov
data16
cmp
jbe
lret
push
xor
popf
push
mov
jns
enter
shlb
fldcw
leave
fnstenv
rorb
mov
sbb
push
rcll
inc
xchg
jb
add
push
jg
insb
ret
daa
lock
add
xchg
sbb
ffree
mov
lea
mov
clc
cmp
sub
mov
dec
aad
mov
dec
test
int
inc
pop
add
mov
scas
mov
inc
dec
xchg
stc
jge
jns
and
xchg
or
mov
mov
div
adc
shl
or
popa
addr16
fisttps
jle
dec
cmp
icebp
jo
jge
jl
jno
sub
pusha
adc
xchg
mov
push
call
scas
shlb
loopne
scas
mov
adc
or
sub
sbb
xor
xlat
adc
cmpsb
push
repz
into
stos
or
das
hlt
sbb
mov
in
pop
dec
or
add
mov
lock
jmp
shlb
sbb
loopne
mov
pop
xchg
mov
cmc
pop
lock
xor
dec
inc
scas
cs
dec
cmpl
sub
lcall
pop
push
lret
fistps
sahf
jg
into
pop
ret
negb
dec
negl
lret
sbb
cmp
rorb
pop
or
stos
out
jnp
mov
fcompl
jge
hlt
mov
cmp
sbb
lock
pop
or
jp
cmp
mov
enter
ss
push
in
les
jnp
rcll
dec
jo
push
add
scas
xchg
es
xchg
lret
ds
roll
clc
mov
xchg
inc
jae
pop
cwtl
fistl
add
imul
xchg
xor
repz
cwtl
outsl
cmpsb
jmp
imul
pop
es
push
push
xchg
mov
adc
pusha
adc
xchg
push
inc
sbb
pop
in
out
sbb
out
jno
jne
mov
mov
hlt
mov
inc
js
loope
mov
mov
rcrb
sbb
xchg
sbb
inc
es
xor
push
dec
in
inc
arpl
pop
ja
rcrb
push
cmp
inc
sti
pusha
or
adc
jnp
out
xchg
and
add
imul
inc
ss
mov
push
adc
loopne
push
pop
mov
js
shlb
xchg
push
lock
fiaddl
dec
pop
add
cwtl
clc
xchg
or
sub
cmpsl
add
push
mov
sbb
fisubrl
pop
jbe
cltd
mov
add
pop
jp
rcr
dec
out
cld
and
dec
xor
rclb
data16
lock
and
pop
mov
cltd
fstps
sahf
push
dec
stos
ss
mov
cmpsb
in
imul
rclb
pop
popa
adc
push
dec
rcrl
gs
add
push
in
sbb
ss
jb
loope
cmp
xor
jbe
push
sbb
call
adc
imul
mov
sbb
xchg
dec
repz
pop
test
aam
les
aas
cmpsl
out
in
xor
push
gs
pushl
pop
mov
ljmp
pop
leave
call
or
or
inc
jl
pop
push
int3
pop
outsl
gs
push
ret
les
mov
sub
mov
jns
mov
sti
push
or
cld
stos
adc
xchg
pop
pop
mov
or
ror
mov
rolb
add
nop
cltd
xor
xor
inc
jb
es
pop
xor
fnstcw
int
push
push
out
std
cmp
fldt
int
int
pushf
out
shll
adc
or
mov
sbb
scas
in
faddl
hlt
outsl
pop
lods
les
movl
jbe
and
or
push
sub
xor
cmpsb
lret
shl
adc
jp
push
filds
sub
nop
into
clc
jmp
xor
fwait
pop
sti
iret
pop
test
jl
inc
mov
hlt
aam
sub
cmp
enter
cmpsl
jo
pop
push
cmp
adc
cmp
out
push
inc
repnz
stc
out
mov
shld
mov
add
rcll
mov
lock
and
in
test
inc
jb
cmc
les
xor
sbb
ljmp
loopne
pop
je
xlat
jecxz
push
cwtl
sub
sbb
and
lods
pop
pshufw
subl
dec
xor
nop
lock
sub
popf
orl
mov
loopne
xor
insl
sub
cmp
xor
into
lret
jo
mov
mov
mov
jb
dec
xor
dec
inc
pop
dec
jle
cmp
fsqrt
ret
cmpsl
or
mov
pop
out
test
jge
push
cmp
mov
daa
push
sub
jge
shlb
lret
or
pop
ret
repnz
mov
scas
sbb
icebp
inc
pop
cmp
aas
aas
in
movsl
in
mov
mov
insl
out
ljmp
adc
jp
into
lcall
rolb
loope
lret
movsb
add
and
outsl
jnp
xorl
shl
add
ret
xchg
mov
out
xor
push
inc
adc
daa
push
cltd
addl
xchg
dec
mov
pop
inc
push
dec
inc
lahf
addr16
jae
cmp
jp
jo
insl
dec
or
in
adc
fists
shrd
mov
adc
cld
test
pop
jbe
jnp
xchg
mov
sub
add
sahf
pushf
js
lret
mov
loopne
shl
sub
dec
popf
popa
and
xor
iret
les
outsl
pop
divps
sub
loope
jae
lods
sbb
cwtl
or
adc
jne
inc
cmp
jle
das
sub
jmp
xchg
sub
lahf
and
lahf
aad
inc
je
loopne
pop
clc
incb
imul
ret
ret
in
and
adc
rclb
add
mov
ret
jo
jnp
fdivs
jge
or
sbb
sub
test
popf
std
dec
sbb
jge
jne
mov
imul
or
dec
pushf
popf
push
pop
aaa
filds
cmp
mov
or
push
adc
add
lahf
jg
dec
out
jns
dec
mov
in
scas
or
hlt
push
out
push
pop
jge
dec
or
pop
jnp
imul
pop
les
dec
xor
adc
out
xchg
inc
js
cld
loop
imul
jmp
pop
inc
in
xchg
testl
xchg
test
mov
pop
inc
sub
jns
addr16
jno
sti
rcrl
push
sbb
into
lock
adc
add
pop
adc
int3
mov
ret
sbb
test
gs
sub
aaa
jle
hlt
adc
gs
cli
push
mov
fwait
roll
sarl
loop
loope
data16
or
cli
and
xchg
dec
xor
imul
loop
mov
mov
clc
cmp
int
jae
mov
and
and
stc
pop
xchg
pop
sub
jbe
mov
icebp
mov
aaa
or
popa
lret
xchg
or
sbb
rclb
mov
lahf
jp
outsl
xor
push
data16
xchg
push
jle
dec
and
arpl
addl
cwtl
inc
fimuls
bound
pushaw
lahf
adc
jb
sbb
xchg
xchg
aam
add
mov
jecxz
test
push
pop
dec
inc
nop
cli
aad
cmp
mov
repz
adc
inc
jns
push
fidivl
test
mov
inc
rorb
push
inc
aad
inc
outsb
dec
xor
push
xor
adcb
out
std
and
stos
mov
xlat
dec
test
jl
ja
pop
mov
cmp
dec
flds
or
push
sub
out
inc
sarl
lods
xor
push
sbb
jp
stos
fadds
dec
and
stos
outsb
xchg
iret
inc
fistl
pop
push
and
xor
xchg
adc
jp
pop
fnsave
incl
push
in
push
mov
and
outsl
aaa
movsl
int3
dec
sub
pop
cmp
pop
cmp
xchg
push
lahf
jmp
out
sub
push
cmp
mov
cmc
outsb
loopne
rclb
fldt
stos
sahf
jne
js
adc
loop
mov
push
pop
or
xchg
cmpsl
pop
mov
test
outsb
rcrl
test
cmpsl
sub
push
shlb
mov
das
das
xchg
clc
mov
dec
xchg
enter
dec
jae
jae
stos
jnp
les
imul
test
xor
pop
dec
in
lahf
mov
sbb
xchg
mov
imul
and
inc
cwtl
push
jae
addl
xchg
hlt
add
push
cmpsl
subl
mov
stos
loopne
test
orl
and
ret
sub
push
popf
stos
xor
and
sbb
sbb
out
rorl
mov
jmp
insl
loopne
pushf
cmp
andl
mov
popa
aas
stos
imul
mov
decl
fs
add
push
inc
mov
mov
pushf
push
mov
inc
lcall
jnp
jno
insb
xchg
call
cmp
push
and
ds
xchg
jb
sbb
mov
pop
push
add
pusha
inc
push
test
dec
int3
cmp
dec
dec
or
jg
pop
lods
and
and
add
gs
sbb
pop
hlt
pop
push
inc
sub
rclb
adc
add
pop
neg
push
stos
mov
out
mul
inc
dec
test
cmp
in
push
divl
push
insl
push
push
dec
ljmp
js
call
jg
pusha
xchg
cmp
imul
lret
cli
test
sub
inc
mov
pop
daa
xchg
dec
mov
and
inc
mov
repnz
lods
scas
add
and
call
std
outsb
cwtl
out
jg
inc
inc
dec
xchg
pop
loope
shrl
leave
test
mov
or
fbstp
dec
outsl
enter
jo
fists
outsb
mov
and
fadds
fimuls
xchg
shll
mov
cmp
mov
aas
notb
out
addb
xor
aas
rolb
mov
jbe
push
mov
adc
push
mov
outsb
or
inc
aam
xor
jge
xchg
loopne
out
lcall
fwait
fwait
push
icebp
cmpsb
inc
scas
mov
inc
jg
mov
popa
aam
mov
inc
mov
js
xchg
pop
jle
jle
out
jbe
rorb
sbb
mov
inc
push
arpl
gs
imul
nop
inc
hlt
orl
test
add
mov
dec
jbe
lcall
aam
xor
cwtl
in
cmp
push
or
lds
mov
fimull
add
imul
lret
push
inc
jge
test
hlt
fsubp
inc
popa
and
mov
js
test
ljmp
imul
imul
mov
inc
fcoms
mov
popa
xchg
xor
aas
xchg
pop
imul
mov
daa
xrelease
test
lods
ss
add
lret
fisttpl
gs
movb
aaa
adcl
jp
push
vpsubusw
dec
addr16
mov
mov
mov
aaa
mov
pop
jmp
repnz
sbb
js
push
pop
stos
jnp
or
inc
sbb
aaa
pop
aas
xchg
and
or
hlt
into
daa
aam
int
ror
push
push
testb
lods
inc
or
shrl
popf
loopne
subb
call
lock
int
icebp
cs
mov
pop
movsl
adc
mov
push
add
push
andb
mov
pop
mov
mov
lret
mov
and
inc
arpl
mov
inc
hlt
pop
dec
outsb
and
pop
xchg
inc
inc
xor
mov
jae
jle
ljmp
insl
mov
mov
sahf
mov
xchg
cld
cli
bound
rolb
add
mov
adc
push
gs
pop
push
nop
loopne
aam
cwtl
adc
das
xlat
rolb
out
dec
cmovge
pop
pop
imul
xor
lea
out
daa
mov
adc
pop
aad
ret
or
xor
stc
mov
std
pop
shl
cmp
test
movsb
mov
cmp
mov
mov
add
std
lcall
jne
jnp
sbb
out
dec
andb
dec
mov
and
test
mov
test
gs
push
xlat
jbe,pt
dec
inc
dec
jmp
or
ja
sbb
ja
cld
test
mov
sbb
movsbl
push
pop
scas
outsb
xor
decl
dec
mov
inc
jns
jns
out
sbb
aam
or
scas
inc
mov
cwtl
jecxz
inc
lds
shll
leave
add
decl
add
std
in
cwtl
addb
push
xor
cmpsl
xor
push
int
ficoms
push
pop
adc
push
mov
out
jbe
aad
adc
sti
mov
pop
xchg
pushf
sub
push
add
pop
adc
or
jo
lret
inc
test
xor
xchg
jg
jle
dec
xor
daa
mov
hlt
aad
pop
aaa
push
test
push
mov
xor
lods
bound
notb
and
mov
in
inc
sbb
jl
and
or
test
cli
and
ja
mov
or
xor
sub
mov
inc
mov
bound
push
mov
sbb
or
push
loop
mov
mov
push
addr16
popf
je
jp
stos
and
lret
test
testb
inc
cmp
dec
xchg
pop
cwtl
jno
cmp
lret
outsl
push
jmp
fdivr
mov
int
imul
stc
sub
lods
or
sub
add
loopne
pop
xchg
dec
or
std
push
imul
roll
jg
mov
sub
cmp
mov
insb
leave
cmp
stos
pushf
add
repnz
sbb
add
aam
enter
rcrb
aaa
mov
pop
jae
xlat
imul
push
push
sbb
jge
mov
mov
in
jmp
ljmp
addl
jbe
decl
adc
add
adc
sbb
and
jecxz
mov
push
jae
mov
cmc
int
xchg
dec
in
cmpl
mov
call
test
outsl
sahf
sub
inc
sahf
or
push
popa
pop
jmp
shlb
mov
and
fcomp
out
imul
popf
adc
xchg
ljmp
cmp
daa
lea
fs
nop
cmpsb
or
xchg
orb
and
add
bound
mov
and
ret
jae
push
xchg
scas
and
jb
pusha
inc
sbb
addr16
sub
popa
push
sub
fbstp
xchg
push
inc
and
mov
xchg
pop
cwtl
stc
and
sbb
pop
cwtl
insl
mov
shlb
add
fcompl
lret
movd
in
pop
jp
ret
mov
loopne
test
pop
xor
loop
fistps
out
xor
cmp
js,pt
mov
loopne
jnp
add
jmp
fmuls
cmp
jns
ja
mov
cmp
ss
inc
cmpsb
or
dec
lods
sub
popa
pop
daa
and
push
cli
js
aam
hlt
pop
pop
inc
xchg
xchg
or
jecxz
inc
or
dec
aas
or
sub
jbe
xor
pop
xor
xor
movsb
mov
in
add
push
int3
adc
jp
das
xchg
cmp
cmpsl
cmp
mov
stos
sbb
mov
std
ss
test
nop
fs
mov
repnz
inc
daa
lea
sti
mov
in
jmp
ja
jo
in
and
ret
call
cmpsl
push
ja
leave
xchg
lock
jbe
xchg
fwait
lds
mov
imul
movsl
push
ret
dec
pop
adc
push
imul
leave
pop
xchg
jae
mov
sub
mov
jae
mov
icebp
dec
lahf
dec
repz
inc
stc
lods
sbb
rol
cmp
dec
inc
add
xchg
mov
cmpsl
div
test
mov
fidivrs
mov
out
dec
pop
mov
jo
mov
xchg
xorl
pop
jl
test
sbb
cwtl
ljmp
dec
sbb
or
jle
out
push
addr16
add
test
data16
nop
in
scas
decb
jmp
stos
mov
test
in
push
cmp
imul
movaps
sbb
out
cmp
lock
data16
xchg
pop
add
mov
mov
dec
stos
mov
pop
add
iret
stos
btr
sub
in
lock
pushf
int
fcomp
sbb
dec
call
mov
or
fcmovb
pop
mov
sbb
push
mov
enter
or
xchg
lods
jge
mov
repz
lret
pop
cmpsb
gs
sub
outsb
decb
shlb
jo
sub
insl
flds
setnp
add
loopne
xchg
in
insb
sub
popa
repz
sbb
or
cmpsl
add
mov
pop
mov
mov
and
or
sbb
add
xchg
aas
adc
in
and
hlt
dec
loop
jge
cmpsb
int
inc
cmp
push
adc
sub
mov
lea
push
stc
cmp
and
mov
add
pushl
and
jmp
xor
xor
scas
pop
cmpsl
jmp
fisubl
inc
cmc
sarb
mov
adc
aam
aas
jl
into
inc
lds
jl
ret
dec
jmp
adc
mov
movsb
aad
pusha
sub
testb
xor
jbe
fs
push
jecxz
mov
popl
movsb
rorl
int3
sub
inc
lcall
std
lods
rol
or
pop
mov
xor
mov
push
lea
into
mov
mov
jle
add
movsb
pop
jb
subb
xchg
mov
pop
scas
mov
push
outsl
dec
sub
xor
es
movsl
dec
fsub
aad
mov
loopne
mov
jno
popf
add
cmp
push
cmp
out
shll
hlt
stc
mov
add
rcrl
adc
fcompp
test
mov
mov
insb
cmp
sahf
cmp
repz
jecxz
les
loop
fs
es
pushf
aad
push
cmp
sti
or
and
mov
pop
mov
push
lret
mov
pop
inc
aas
adc
sahf
pop
cs
push
ljmp
jle
mov
cld
mov
fisubrs
int
icebp
xchg
scas
stos
fdivs
imul
pop
xchg
push
iret
xchg
pxor
xchg
ret
and
lods
stc
in
lock
sub
je
dec
repnz
cli
mov
bound
mov
das
push
out
ss
mov
xor
or
sbbl
jne
es
lcall
add
ja
inc
addr16
jbe
xor
jb
cmp
xchg
aas
dec
dec
mov
loopne
xor
loop
aam
sbb
mov
dec
ja
js
sub
jmp
out
push
hlt
push
mov
pop
pop
out
rorb
inc
outsb
jne
xchg
in
xchg
in
aaa
test
pop
add
or
int
outsb
or
add
imul
cltd
lds
xor
out
out
bound
fdivl
jp
cbtw
fucomip
dec
movsl
push
cs
gs
mov
icebp
xor
lret
lret
aam
xor
pushf
and
aaa
loop
and
iret
add
jmp
daa
adc
pop
mov
stos
mov
sbb
and
ds
xor
lds
dec
sbb
das
push
push
imul
dec
mov
jg
xchg
movsl
cs
sub
ret
sti
dec
pushf
adc
fwait
out
sahf
je
lret
int3
mov
rcrb
iret
inc
scas
jnp
and
xlat
std
jl
adc
mov
scas
fdivs
mov
push
fmul
jns
xchg
int3
jb
sbb
movsb
cwtl
lahf
lds
dec
mov
stos
and
add
mov
sub
and
xor
cwtl
in
xchg
pop
outsb
out
mov
xor
aaa
rolb
iret
dec
xchg
int3
movsl
sarb
push
divb
push
and
cwtl
cmpsl
pop
dec
jecxz
std
adc
mov
mov
dec
mov
les
sub
or
jnp
or
loopne
dec
js
jl
mov
repz
pop
add
stos
sbb
fcmovu
inc
adc
sbbl
xchg
rcrb
hlt
inc
in
rcrl
xor
pop
pusha
cmpb
xor
orl
xchg
out
inc
ss
add
pop
movsb
es
cld
xor
test
ds
inc
lret
mov
inc
sub
js
xchg
xchg
xor
cltd
cmp
xlat
xchg
dec
dec
cmpsb
sub
scas
jae
imul
aad
bound
mov
imul
in
pop
xlat
popf
pop
ljmp
xchg
jbe
jne
jge
mov
sub
mov
xchg
cmp
sub
pop
ljmp
loopne
mov
rorb
insb
shll
mov
cld
rolb
into
clc
mov
aaa
jnp
in
repz
push
pop
xchg
pop
sbb
out
dec
cmp
xor
push
fdivrs
sub
xchg
xchg
pushf
and
lret
jp
mov
movsl
fwait
outsb
xorl
push
decb
lock
les
pop
xor
mov
jnp
bound
sub
adcb
push
dec
xchg
inc
shlb
fisubl
sub
fnstsw
das
jbe
or
cmp
xor
in
repnz
loopne
cmp
icebp
push
outsb
mov
ljmp
dec
pusha
inc
clc
outsl
cltd
xor
push
test
jecxz
add
subb
xchg
nop
mov
mov
push
pop
popf
hlt
mov
aam
rolb
sahf
andb
out
xchg
cmp
add
mov
mov
fnstcw
sub
cmc
dec
pushf
call
or
gs
pop
mov
popa
dec
xchg
movsb
data16
mov
outsb
jl
and
pop
mov
testb
shlb
repz
insb
or
cmp
jl
xor
add
stos
shlb
aaa
int
xchg
nop
in
jne
adc
scas
sub
mov
sbb
mov
repz
cs
dec
dec
dec
int3
xor
mov
or
lret
int3
cs
rorb
out
mov
mov
callw
pop
sbb
icebp
aad
jnp
lahf
jnp
movsl
in
jg
test
ror
ds
bound
outsb
js
movsb
jbe
cmpsl
loope
cmp
aaa
cmc
cmp
stos
pop
test
lock
or
js
icebp
mov
add
adc
add
pop
movsb
inc
sbb
outsl
imul
fildll
pop
aad
mov
lret
add
dec
lea
jne
ss
aad
bound
in
sbb
jnp
pop
cwtl
lahf
or
add
lods
test
ja
jecxz
je
fdivr
testb
push
or
or
and
lret
or
leave
pop
aad
jl
imul
mov
loope
shll
mov
loopne
dec
push
xor
mov
repz
sbb
repnz
push
inc
jle
adc
inc
xchg
jmp
pop
out
mov
mov
sbb
pushf
addr16
dec
dec
mov
and
cmp
mov
xchg
jl
dec
adc
gs
mov
pop
xorl
fcoml
jmp
sub
jno
and
adc
in
cmp
jle
xchg
fidivs
push
in
popf
mov
mov
int
stos
inc
cmc
or
dec
sub
shlb
or
sbb
pop
cmp
sub
jge
lret
repnz
mov
mov
andl
and
jbe
scas
jns
out
sub
dec
icebp
daa
dec
in
jno
xor
int3
push
pop
das
mov
jecxz
shrl
cmp
xchg
xchg
sarl
and
dec
arpl
pop
bound
or
je
call
jae
andl
jns
jl
inc
imulb
rorb
jns
mov
jmp
and
sarl
adc
ss
sub
adc
fisubrl
fistl
or
inc
jl
ja
dec
cmpsl
cmp
test
dec
jmp
mov
call
mov
xor
mov
dec
clc
push
add
add
or
dec
lds
outsl
imulb
out
push
outsb
lea
xor
jae
cmp
jl
push
adc
push
sub
sahf
into
testb
sti
xor
popf
xchg
in
mov
xchg
push
lea
sbb
or
inc
xchg
xchg
pop
popf
push
xchg
cli
xchg
pop
cmp
movsb
lds
mov
popl
shrl
push
cli
xchg
inc
pusha
gs
adc
cmpsl
pop
sub
imul
sub
cmp
mov
xchg
mov
xchg
cld
mov
lea
or
cmp
out
imul
arpl
bound
clc
shrl
push
xor
test
testb
rcll
xor
les
sarl
sub
pop
dec
addr16
mov
and
xchg
cld
mov
test
xorl
and
cmp
insb
fildl
push
fdivl
cmp
dec
mov
lret
jge
xor
sbbl
lods
mov
sub
or
sub
sub
inc
fisubl
mov
pop
add
daa
jecxz
insl
das
outsb
stos
push
or
dec
fcmovu
out
mov
cwtl
in
pushl
mov
into
cmc
and
push
lods
sti
mov
pusha
cmp
xor
roll
add
lods
js
cltd
push
sbb
mov
sub
mov
sbb
jo
or
pop
mov
lahf
mov
rcr
push
data16
push
out
xchg
imul
stc
dec
pop
arpl
movsb
or
jbe
mov
jecxz
cmpsb
enter
jae
push
sti
lahf
mov
mov
sub
push
aad
sbb
pop
out
cmp
sbb
fldl
jmp
xchg
dec
sti
inc
sbb
xchg
xchg
xlat
fstpt
movsl
rol
add
and
cs
je
mov
nop
pop
xchg
out
pop
mov
push
jbe
dec
lahf
aaa
xchg
loop
adc
cld
outsb
jo
stos
arpl
fstps
mov
fdivrp
xor
cmp
cmc
dec
fbstp
fwait
loopne
jae
movsb
rol
sbb
dec
out
lret
sbbb
mov
add
cmpsb
mov
mov
dec
dec
or
push
icebp
mov
cmpsb
inc
pop
pop
sub
out
xchg
and
out
sbb
dec
daa
js
push
or
fidivs
cwtl
add
jg
or
pminsw
fildl
pop
inc
imul
dec
push
pop
ss
xchg
cmp
scas
repnz
add
fstpt
sub
push
xchg
lret
push
xchg
ja
sub
xor
cmovp
out
divb
inc
and
pop
sarb
jmp
aas
ja
decl
and
cmp
push
mov
shl
xor
or
insl
mov
lret
cltd
leave
sahf
adc
popa
insl
sub
aam
shll
scas
and
rol
leave
enter
test
dec
pop
outsb
iret
dec
jne
mov
push
and
fs
aas
sbb
sbb
stc
mov
push
xchg
pop
das
push
sbb
jmp
pop
pop
adc
js
sbb
mov
xor
jns
pushf
fstl
pop
pusha
or
test
lods
movsl
dec
xor
pop
sarl
xchg
jne
pusha
rcrl
mov
jne
push
in
aas
cwtl
mov
data16
xor
inc
lret
mov
mov
ds
pop
outsb
mov
lcall
cs
adc
nop
sbb
pop
adc
xor
push
mov
or
js
movb
and
cmpsl
sbb
add
mov
sub
sarl
mov
and
xor
push
testl
push
rep
xchg
inc
ss
repz
push
movb
sbb
lods
stos
jo
cmpsb
push
stos
xchg
pusha
pop
inc
xchg
sub
sub
push
sbb
cs
pop
icebp
cmp
and
movsb
or
cmc
push
mov
lock
xchg
mov
hlt
inc
fsubrl
imul
lea
mov
daa
mov
jmp
dec
inc
pop
mov
mov
push
rolb
or
add
sbbb
or
and
lret
inc
cmpsb
mov
insl
add
in
fadd
aas
sysenter
adc
add
xchg
xorl
pop
insb
gs
jmp
insl
jns
ljmp
and
das
mov
lods
or
mov
and
cmpsb
xor
scas
cmp
dec
pusha
clc
adc
sbb
dec
add
daa
mov
jge
mov
jno
pcmpgtw
out
adc
mov
xor
out
loop
mov
das
stos
xchg
xchg
dec
les
sub
and
ja
cmp
mov
xchg
sbb
or
dec
out
mov
pop
push
cltd
test
in
xlat
pop
enter
mov
xor
ss
push
push
or
sub
negl
popf
sbb
sub
shll
sti
out
adc
push
xchg
fdecstp
imul
mov
not
scas
or
xchg
mov
addl
data16
test
mov
iret
sbb
mov
sub
sub
adc
add
movsb
sbb
scas
shrb
mov
and
fcoms
and
cmp
test
cmpsb
sub
mov
jg
push
jnp
add
dec
mov
adc
lds
sub
dec
sub
repnz
mov
es
ret
fimull
repz
sbb
es
pop
xchg
cmp
cltd
and
idiv
add
jmp
mov
dec
jle
fcoms
xor
jns
push
lock
mov
into
std
shll
mov
sbb
sub
aad
mov
js
sub
jecxz
and
aas
int3
imul
pusha
out
data16
jl
mov
sbb
dec
pop
cmp
int
cmp
fistps
jnp
lods
dec
subb
je
cltd
or
jle
push
xor
jo
mov
outsb
or
lods
sti
fnsave
xlat
jno
mov
les
out
cmp
jg
and
cmp
inc
jp
decb
iret
xor
lods
mov
aad
fwait
mov
testb
pop
movsl
test
sub
sti
ds
jl
cmp
jg
or
cltd
mov
cli
aad
addr16
lds
jnp
and
sub
pop
jl
fwait
movsl
sbb
lods
dec
aam
ds
mov
imul
mov
es
shll
fistps
fnstsw
rcl
std
or
cmp
jl
jb
or
stos
mov
jns
outsl
mov
jo
add
xchg
std
popl
jp
dec
sbb
pop
mov
pusha
push
push
repnz
mov
sti
loopne
pushf
pop
lcall
mov
mov
leave
lods
jbe
jmp
pusha
orl
jo
aam
out
cwtl
push
fdivp
jae
loopne
adc
in
movsl
test
dec
fdivs
mov
sbb
test
and
rorb
or
dec
sti
faddl
push
pop
xor
sub
xchg
sbb
pop
lret
inc
in
and
in
add
pop
add
lret
in
movsl
push
ficoms
ss
ss
out
test
xchg
lods
test
dec
out
add
cmpsb
push
fmul
or
pop
jne
and
in
cmc
lcall
in
mov
lods
call
mov
adc
xor
xor
jmp
xor
rolb
mov
inc
lahf
cmp
ss
inc
scas
jae
mov
cld
cmp
xchg
inc
mov
jg
cmp
sub
ja
cmc
and
iret
inc
xor
es
and
pop
lds
scas
or
icebp
es
pop
shl
jne
fcomps
hlt
outsb
dec
jo
imul
jmp
mov
lea
stos
and
inc
in
in
push
mov
cmp
negb
xor
and
adc
fldt
xor
mov
dec
jne
fildl
mov
jne
popa
andb
lahf
cs
pusha
gs
sbb
sub
pop
lcall
shll
cmc
jge
jl
divl
mov
imul
jp
bound
outsb
loope
mul
int
imul
mov
xchg
cltd
repnz
mov
xor
cs
mov
in
in
and
hlt
jo
lds
lahf
fdivrs
mov
mov
jecxz
pushf
inc
xor
lcall
inc
test
cmpsl
enter
add
jbe
jge
sub
repz
cli
and
mov
mov
xchg
sub
mov
daa
sahf
add
mov
test
popf
xor
ja
ja
push
jg
dec
out
pushl
ret
pop
mov
cli
adc
iret
icebp
jg
dec
xchg
pusha
cwtl
ja
fnstsw
mov
leave
jg
jae
repnz
cli
jmp
inc
dec
pushf
imul
stos
js
fimuls
jb
add
popa
mov
jmp
pop
sub
mov
mov
xchg
and
mov
daa
mov
jo
xchg
inc
sti
outsb
adc
push
jecxz
sub
mov
nop
push
mov
pop
movsl
popf
call
cmp
and
mov
xor
scas
sub
fidivrl
jecxz
mov
push
in
popf
xchg
add
jle
inc
aam
push
leave
pop
inc
je
xchg
sti
mov
mov
sub
push
push
mov
fcomps
sub
into
or
lock
mov
xor
mov
ja
sub
sub
or
jo
dec
fwait
int3
sbb
addb
adc
call
add
inc
mov
push
pop
dec
sub
adc
dec
sbbl
push
in
cltd
push
adc
call
sbb
mov
xor
imulb
std
sub
sbb
pop
ficoms
xor
outsb
or
or
mov
aam
scas
mov
xchg
cmpsl
inc
inc
out
inc
push
jg
fwait
test
push
cmp
xor
push
fldt
xchg
in
xchg
inc
ficomps
aam
xor
ljmp
or
dec
aam
add
lock
into
mov
std
test
sarl
lcall
repz
dec
imul
push
sahf
insl
mov
sub
mov
imul
fucomi
ret
lea
cmpsl
stc
sub
outsl
cmp
arpl
and
clc
stc
arpl
stos
inc
rcl
cmp
and
adc
je
and
xchg
clc
mov
mov
rcr
or
cld
cmp
loope
or
sti
dec
mov
insb
ret
push
and
xorl
xchg
sbb
loopne
roll
cmp
inc
and
pop
int
testl
jmp
mov
cmp
mov
iret
in
jns
shll
scas
inc
xor
or
scas
xor
rorb
testl
inc
dec
adc
jg
mov
rclb
loop
xor
sub
andb
push
cmp
pop
xchg
and
sbb
or
pop
lock
gs
add
loopne
sti
push
mov
mov
test
int3
rorb
jnp
xchg
repz
test
scas
scas
xor
outsl
cs
ret
ss
sbb
pop
jp
shlb
mov
push
dec
rorb
or
ret
popf
repz
int3
lds
xchg
call
nop
ds
lds
in
loopne
xchg
sub
enter
adc
ja
popa
xchg
js
in
fstpt
cmp
jmp
pop
and
aas
cwtl
les
jg
mov
and
daa
xchg
adc
sbb
jg
ss
sbb
imul
xchg
out
push
shrl
test
sbb
jnp
stos
mov
addr16
in
cmpsb
cmpl
xchg
or
mov
ljmp
fmull
adc
nop/reserved
mov
inc
insl
inc
inc
cmp
shll
mov
test
call
jp
leave
jb
cs
adc
imul
mov
sbb
or
jp
cltd
out
mov
xchg
inc
insl
lret
divb
pushf
inc
fisttpl
scas
data16
mov
inc
add
jl
fiaddl
mov
movsb
jne
test
mov
inc
mov
lret
in
mov
movsl
cld
aas
out
push
mov
fnstsw
fwait
imul
movsl
or
jmp
je
movsb
jge
sub
pop
mov
push
mov
xchg
cmp
adc
inc
jae
push
and
xchg
pusha
dec
sbb
push
pop
xor
dec
int3
je
push
mov
mov
dec
aaa
push
add
mov
inc
pushf
sbb
lods
ror
adc
pop
bound
xchg
dec
je
das
mov
mov
lcall
fldl
fnsave
jo
push
scas
pop
jne
ficompl
shr
mov
into
xlat
lds
pop
call
cwtl
loopne
fmull
mov
and
fildll
inc
pop
cmp
testb
pop
stos
call
jle
ret
jns
fbstp
mov
sbb
imul
xchg
cwtl
adc
pop
adc
jne
pop
out
lock
shlb
fisubrs
mov
out
mov
loop
aas
push
pop
or
sbb
push
test
hlt
cmc
rol
in
jno
nop
hlt
xchg
sub
xor
inc
stos
jge
jmp
jae
jle
xchg
enter
imul
jno
ljmp
fiaddl
dec
call
and
cmp
enter
bound
and
cli
add
fwait
out
and
sub
fwait
jne
mov
push
fsts
xchg
test
arpl
xor
lahf
cmp
add
js
ds
xor
enter
in
mov
nop
scas
add
psubsw
addr16
push
jl,pn
sbb
pop
je
mov
lahf
mov
inc
idivb
fcompp
test
ss
jo
in
popa
test
pop
shrb
int
loopne
fdiv
in
sub
ljmp
in
add
pusha
mov
and
loop
add
and
xchg
jns
mov
xchg
fnstenv
out
lods
dec
and
xchg
shll
loop
mov
jo
lea
sbb
mov
mov
and
adc
lea
mov
cwtl
lahf
mov
mov
gs
xor
pop
sbb
jbe
sti
mov
jne
in
push
sbb
popf
test
insb
pop
scas
mov
cmp
fstps
mov
cld
push
mov
adc
mov
cmp
ja
in
sbb
xchg
in
ja
xor
repz
loop
testl
push
dec
daa
outsb
jg
das
mov
or
sub
repnz
lret
jno
lret
jg
imul
sarb
dec
sbb
cwtl
sub
cmp
and
stos
addr16
pop
mov
movlps
xchg
clc
xor
aas
inc
repnz
jb
ja
xchg
ret
popf
push
sbb
lock
pop
cmpsb
fmuls
fcoml
cmpb
stos
sub
xchg
lea
mov
sub
xor
add
fs
and
outsb
fistps
dec
idiv
hlt
fildll
mov
or
cmpsb
popf
cmp
daa
rcrl
out
rorb
adc
hlt
negl
and
in
in
cli
add
xchg
xchg
ljmp
xchg
jne
inc
shlb
mov
push
jp
pop
jge
cmp
dec
out
loope
inc
xchg
cmp
jmp
clc
cli
gs
sub
leave
out
add
sub
addb
sbb
mov
add
add
xchg
nop
mov
es
mov
outsb
fldpi
aas
xor
imul
jns
add
pop
jg
inc
arpl
out
pop
idiv
sub
call
and
xor
gs
and
movsl
push
mov
sbb
cmp
out
lahf
dec
fnstcw
push
mov
pop
aaa
loop
pop
inc
std
mov
aam
in
jne
or
cld
mov
in
lret
leave
sub
ret
aas
mov
inc
enter
mov
cmp
sbb
xor
shr
pop
mov
ds
dec
shlb
repnz
push
cmp
xlat
lcall
aad
inc
in
and
mov
aad
fmul
and
inc
inc
lods
das
dec
jo
mov
or
addr16
jmp
loopne
adc
outsb
ret
sbb
add
int
clc
and
add
dec
jecxz
sti
pop
leave
out
push
xchg
inc
mov
sbb
cmp
add
jb
mov
pusha
stos
jno
inc
mov
enter
xchg
adc
inc
xchg
xchg
test
jno
ret
xchg
rorb
xor
ds
mov
mov
mov
inc
xchg
mov
stos
push
pop
dec
and
mov
repnz
or
addb
pop
addr16
push
adc
jno
arpl
aad
bnd
inc
cmp
les
mulb
dec
dec
dec
sbb
leave
loopne
jnp
rorb
xor
adc
push
mov
jl
rdpmc
jo
pop
sbb
cwtl
jp
jae
mov
adc
shrb
dec
mov
xorl
dec
inc
in
mov
xlat
insl
into
nop
jmp
xchg
push
xchg
mov
inc
mov
ds
cwtl
cli
mov
repnz
push
fisttps
cli
int3
ja
daa
xchg
je
adc
jnp
mov
inc
fdivrs
sbb
xchg
popf
lods
dec
insl
mov
aam
data16
lods
fdivl
mov
add
and
cmp
push
roll
cmpl
outsl
xchg
push
imul
test
adc
sub
xchg
dec
mul
adc
or
xchg
repnz
ret
xlat
pop
aad
sbbl
ret
cwtl
je
mov
dec
dec
sbb
cmp
or
ja
dec
out
lahf
lcall
mov
rcl
inc
mov
sub
ja
push
iret
mov
or
xchg
jno
pop
jge
xchg
mov
roll
mov
inc
scas
test
mov
loope
sbb
das
sub
pop
mov
and
popa
jmp
fwait
ret
sbb
add
adc
jl
cld
cmp
adc
add
ds
decl
pop
stos
push
sub
pusha
cli
pop
dec
mov
and
cmp
push
cltd
mov
mov
push
or
sbb
push
jp
xchg
imul
pop
nop
cmpsb
fiaddl
adc
cmp
lock
pmulhuw
cmp
or
fdecstp
add
popf
ja
icebp
add
xor
jge
push
loope
pop
cld
or
rorl
inc
jp
jp
cmp
in
sub
mov
push
lcall
mov
fs
mov
xor
xchg
pop
adc
mov
test
cmp
jbe
add
int
loopne
dec
pop
rcr
mov
jns
pushf
jp
mov
sbb
filds
pop
mov
aam
sbb
gs
out
out
lea
push
das
adcl
nop
stos
cld
and
js
pop
lods
cmp
aad
or
imul
and
mov
and
lret
je
jp
hlt
cld
dec
cltd
inc
loop
testb
sbb
lods
addr16
adc
repnz
push
sbb
and
sbb
repnz
in
lea
mov
subb
cmp
ljmp
fisttpl
mov
cmpsb
and
aaa
ret
xchg
pop
xor
lods
pop
push
out
xor
xor
lcall
xchg
into
push
adc
pop
leave
mov
pop
cmp
cmpsl
sbb
adc
pop
inc
pop
out
loope
mov
push
sbb
into
lret
mov
xchg
pusha
pop
mov
outsl
out
or
xor
sub
ficomps
lea
ja
test
lret
sub
pop
xor
imul
mov
ljmp
daa
arpl
mov
xor
stc
testb
lret
out
xchg
sub
adc
nop
sbbb
inc
sbb
add
or
es
jne
mov
outsb
shrb
das
pop
and
jp
fidivs
xchg
xchg
mov
mov
inc
ja
out
int3
stos
push
xchg
mov
enter
sbb
mov
pusha
das
mov
rcrl
mov
inc
mov
and
adc
fnsave
enter
maskmovq
divl
mov
es
pop
int3
movsl
and
leave
outsb
inc
push
stc
adc
repnz
repnz
repz
sub
adc
aaa
js
outsb
daa
cmp
and
fnstcw
push
aad
cmp
push
cmpsb
jne
mov
xor
mov
mov
add
les
pushf
pop
ret
mov
mov
je
rcr
mov
adc
popa
cmpsb
fwait
out
xchg
hlt
clc
ret
jl
push
xor
icebp
test
and
out
adc
xchg
dec
adc
mov
push
imul
pcmpgtd
das
out
pusha
out
mov
push
aam
mov
iret
mov
cmpsl
stos
ret
mov
sub
sahf
inc
dec
cmp
stos
or
mov
test
add
pop
inc
out
mov
inc
and
out
pop
mov
stos
ret
jg
jbe
das
inc
getsec
xchg
aas
sbb
cmc
sahf
pop
aaa
sbb
mov
sub
cmp
pop
test
mov
std
pushl
xor
fbld
push
repz
das
lcall
popa
rolb
push
jecxz
fcmove
enter
je
push
xchg
xchg
mov
cmp
cmpsb
push
mov
xor
or
pop
je
sub
sarl
pop
fildll
push
sbb
cwtl
pop
bound
and
ja
pop
add
add
inc
adc
mov
adc
xor
cmp
testb
outsl
sbbl
retw
xor
ja
and
xchg
mov
rcrl
xlat
inc
subl
sbb
jne
sti
cld
insl
loope
cmp
hlt
adc
insb
mov
dec
insb
scas
inc
cltd
xor
ret
out
xor
xor
cmpsb
fdiv
rol
xchg
pop
mov
inc
inc
add
out
cwtl
inc
out
sahf
fldcw
jecxz
mov
out
test
cmp
es
sbb
popa
xchg
push
push
hlt
adc
loope
adc
mov
aas
mov
lret
xchg
mov
sub
ljmp
imul
lret
test
adc
cmc
lods
in
lret
cmp
jnp,pn
outsl
jb
push
stos
ret
xlat
fucomi
lcall
mov
ja
xorb
mov
cmp
sub
and
add
in
jo
pop
jecxz
repz
cs
cltd
sub
fsubs
aas
jae
fwait
out
sbb
sbb
inc
je
std
mov
xchg
mov
loope
in
push
mov
inc
mov
push
mov
jns
je
movl
mov
inc
xchg
loope
mov
mov
shll
xor
xchg
loope
scas
add
xchg
mov
sub
push
out
adcl
inc
push
out
mov
leave
or
insl
ss
mov
cmpsb
pushf
stc
sub
push
push
fs
pop
les
stos
dec
rcr
lods
push
in
dec
adc
mov
and
jg
push
pop
or
or
mov
xor
clc
mov
adc
xlat
jb
loop
fists
cwtl
pop
mov
mov
fstl
push
pushf
cli
aas
data16
push
or
loopne
sti
pusha
addl
movsl
push
pop
or
cs
xchg
xchg
std
jmp
jns
pop
pop
lds
xchg
cmpsb
inc
pop
pusha
aas
push
mov
sbb
bound
push
cwtl
repnz
push
in
jno
int3
daa
or
sub
push
daa
lods
jl
jnp
xchg
enter
inc
sub
in
fs
push
das
cmpsb
lcall
xchg
das
jl
cmp
sbb
adc
shll
cmpsl
jp
lahf
xor
aaa
cli
and
incb
fstl
inc
mov
mov
cltd
add
mov
cmp
adc
cmc
loop
pop
ljmp
adc
inc
sub
pop
cwtl
cmp
fcmovb
inc
pop
fnstenv
push
addl
fldl
mov
xchg
fidivrs
movsb
inc
fxch
scas
mov
mov
cmp
cli
mov
mov
jnp
inc
sub
data16
movsl
sbb
xorl
jl
je
inc
fcmovbe
ss
sub
dec
out
push
xor
fimuls
mov
or
imul
lcall
out
push
cli
xor
jg
fs
push
jg
cmp
in
lock
repz
pop
dec
movsl
stos
loop
xor
mov
pop
rcrb
pop
aaa
inc
rdmsr
loop
aad
cli
ja
rclb
sti
xor
shll
pop
iret
pop
and
mov
leave
mov
sub
inc
fwait
loopne
sbb
push
mov
jle
pop
pop
movsl
cmp
repz
arpl
inc
jb
sbbl
mov
les
mov
add
imulb
notb
aaa
cmp
mov
cmc
in
xor
jno
lods
arpl
mov
call
repnz
mov
mov
xchg
pusha
cmc
repz
jns
repnz
mov
pop
xlat
pop
push
push
mov
sahf
sub
in
sbb
pop
cmc
xchg
xchg
dec
or
push
imul
cli
sti
loopne
push
outsb
xor
and
ljmp
mov
pop
cmp
out
je
dec
push
rep
jp
cmp
std
movsb
outsl
out
fcomps
int3
scas
mov
sar
shlb
subb
cmpsb
inc
nop
movsl
pop
cld
fisubrl
cmpsb
lds
hlt
cli
jnp
fs
mov
ret
pushf
fwait
mov
cmp
sbb
fistpll
es
scas
lock
pop
sbb
mov
dec
sbb
xchg
mov
add
pop
push
repz
das
mov
push
pusha
inc
cwtl
xor
xchg
repz
cmp
shl
mov
mov
stos
mov
cmp
push
leave
sbb
dec
lcall
imul
cmpb
fidivrl
stos
cli
or
jne,pn
fsub
jge
movsl
lcall
ficomps
and
clc
lock
mov
in
push
shlb
xchg
lods
sbb
rcl
cwtl
mov
xlat
inc
fwait
mov
loop
mov
mov
mov
loop
jg
dec
negb
mov
and
cli
xor
cmp
lea
mov
pop
xor
adc
sub
repnz
stos
mov
daa
out
loop
addr16
aaa
pusha
test
or
outsb
sbb
lcall
mov
aaa
clc
pusha
lret
jle
or
add
test
sti
cmpsl
enter
nop
das
dec
out
sbb
fidivrs
daa
das
mov
fcomps
movsl
mov
mov
fbstp
inc
fildll
mov
cmp
mov
or
int3
mov
or
jne
aam
in
mov
sbb
repz
hlt
icebp
lods
xchg
mov
cmp
cmp
fst
fsubrs
adc
dec
shrl
sahf
cmp
push
inc
add
cmc
cmpsl
shlb
pop
sub
aaa
in
shlb
dec
int3
imull
ret
je
loopne
cs
sub
jmp
xchg
and
in
js
and
testb
call
mov
adc
rcl
dec
in
scas
cmp
and
cmp
fs
dec
jne
ficoms
sub
mov
sbb
and
mov
sbb
pop
imul
mov
clc
xchg
ret
mov
or
lret
or
ds
dec
pop
int3
cli
adc
push
pop
mov
rorl
out
add
jmp
lods
mov
insl
in
add
jbe
daa
popa
aam
mov
adc
imul
bound
insl
sbb
sbb
mov
gs
loop
lahf
xchg
int
or
lret
sti
nop
jo
adc
xor
clc
sti
add
jle
dec
imul
adc
mov
mov
or
repnz
gs
xor
fdivrl
mov
dec
mov
or
in
nop
test
mov
or
cld
mov
pop
sub
jbe
jle
sbb
pusha
push
or
into
mov
cmp
mov
push
mov
pop
aas
mov
push
mov
cmpsb
cmc
popf
or
jp
jnp
pop
push
test
arpl
cs
mov
push
pushf
or
imulb
pmaxsw
leave
mov
std
out
xor
mov
xlat
jmp
and
fwait
lods
movsb
mov
scas
aam
adc
xchg
dec
xchg
rorb
add
andl
sarl
insb
mov
jns
jnp
cmp
cs
sbb
lahf
test
fisubrs
lcall
sbb
mov
adc
test
lods
jno
jb
jecxz
fs
pop
loopne
popf
aas
jno
jp
or
ljmp
mov
testl
adc
dec
inc
cltd
xor
in
xchg
pop
pop
mov
enter
inc
mov
in
pop
cltd
xchg
xchg
loop
mov
xor
and
ret
pop
aam
push
leave
inc
repz
outsb
orb
pushf
loop
pop
add
testb
sbb
les
rcrl
loop
jo
es
clc
sbb
add
or
push
nop
insl
adc
jg
jns
sbb
pop
icebp
popl
sbb
push
mov
or
out
cmp
jmp
cwtl
xchg
mov
push
aaa
lahf
scas
gs
xchg
xor
inc
pop
jne
and
and
idiv
lret
sub
mov
int
frstor
cmp
repz
out
jecxz
push
out
xchg
dec
inc
cmp
push
test
inc
or
mov
push
movsl
adc
dec
sub
fists
jle
pop
jae
pop
aaa
lret
adcl
lds
jl
push
aam
pop
lahf
sbb
fldenv
add
lods
push
test
push
push
ret
xchg
mov
sub
sub
cmp
lahf
cltd
outsl
jno
stc
sbb
xchg
stc
cld
inc
cld
imul
or
jo
fisubs
shll
adc
cwtl
xchg
int
movsl
in
jnp
test
mov
xchg
fadd
xchg
xchg
out
clc
imul
dec
jo
les
add
out
enter
jp
xchg
sbb
sbb
movb
in
daa
pop
stc
mov
inc
jle
mov
bound
adc
inc
or
hlt
cs
sub
dec
cwtl
nop
outsl
inc
dec
or
addb
mov
jae
adc
gs
pop
and
imul
xchg
add
pop
or
add
adc
fcmovu
pop
ja
push
pop
lods
test
jmp
shll
mov
xor
mov
adc
inc
mov
push
aad
int
out
mov
push
in
mov
daa
or
aad
mov
and
icebp
nop
jae
movsb
mov
mov
pop
lret
and
inc
in
in
push
jge
or
divb
cmpsl
xchg
jno
push
xchg
and
lcall
jb
push
lock
sub
xor
xchg
icebp
mov
sbb
adc
cmc
sti
mov
cmp
push
jne
sbb
repnz
cmp
lcall
fldcw
imull
cs
test
add
mov
dec
add
test
or
into
pop
fsubl
lea
adc
mov
adc
fbstp
xchg
shl
sbb
lret
sub
push
in
pop
mov
add
stc
lds
stos
sbb
jb
in
int3
sbb
mov
jb
and
imul
mov
pop
popa
dec
adc
lods
mov
insl
pop
pop
lret
jmp
xchg
imul
mov
sbb
jmp
xor
sub
push
mov
and
mov
jns
nop
sub
adc
cs
notl
mov
mov
inc
and
push
popf
xor
subb
lods
xchg
mov
clc
fistpl
addr16
push
je
mov
dec
dec
add
mov
mov
adc
and
and
orb
out
dec
inc
xchg
movsl
push
jecxz
mov
mov
mov
enter
les
push
cmp
pushf
dec
scas
shlb
mov
cs
mov
test
push
xchg
testl
sbb
jb
lea
add
or
stos
xor
and
xor
sbb
jge
jne
sub
or
push
push
cs
das
and
dec
jnp
mov
stos
sbb
push
pop
stos
push
mov
rolb
jp
mov
mov
jnp
lret
xor
add
lret
or
or
inc
adc
cld
lock
jae
movsb
clc
add
mov
insb
and
out
add
popa
lods
mov
inc
das
push
adc
push
daa
xchg
dec
ss
sub
out
pushf
aam
mov
push
or
out
aas
je
xor
mov
mov
jae
lcall
xor
mov
xor
xchg
jge
jmp
push
and
mov
aad
mov
and
mov
push
pop
cmp
pop
rcll
insl
jae
pop
sbb
mov
inc
mov
mull
jg
add
pop
xor
push
pop
testb
pop
sub
xchg
mov
xchg
inc
mov
mov
in
loopne
arpl
sub
cmp
ret
stos
cwtl
pop
mov
push
mov
push
sbb
mov
mov
aam
or
dec
adc
ds
cmp
inc
out
fcomps
adc
xor
out
mov
lret
pop
repz
push
pop
xchg
leave
mov
ja
orb
pop
mov
psrlq
icebp
stc
jne
in
daa
sub
mov
das
cmp
sub
lret
add
jns
xchg
cmp
gs
and
cwtl
or
cli
cltd
pop
xlat
jl
cld
out
dec
in
dec
stos
test
mov
sub
pop
ds
or
inc
xchg
push
jns
pop
fdivrl
mov
xor
ficoml
outsb
enter
adc
inc
pop
out
adc
lcall
mov
in
jbe
adc
jmp
out
cmp
cmp
xchg
cs
mov
rcrl
xchg
push
stc
ds
mov
mov
orl
call
mov
push
pop
rcrl
mov
cwtl
and
cld
or
hlt
fs
pusha
mov
ja
popa
add
std
sbb
insb
or
cmp
or
dec
push
and
add
aaa
pushf
in
in
outsl
nop
les
adc
mov
les
mov
xlat
ficoms
xchg
cli
pop
add
jno
sbb
sub
mov
jo
fiaddl
jle
stos
sti
xlat
repz
out
pushf
ds
push
das
xor
out
lahf
push
add
jnp
mov
stc
outsl
push
cmpsl
fistpll
sbb
inc
push
clc
icebp
lods
jecxz
fidivrl
sub
ficomps
arpl
mov
pop
sub
fwait
xchg
movsl
add
ljmp
ficompl
jl
adc
adc
ret
pushf
inc
outsl
scas
xchg
sarl
xchg
and
out
sbb
mov
fimull
jmp
daa
daa
or
and
repnz
push
push
jb
pop
jne
sbb
pusha
sbb
inc
inc
add
xchg
in
mov
flds
dec
shlb
aaa
push
sbb
mov
scas
cmp
add
cmp
rcrl
mov
adc
mov
push
nop
inc
clc
pop
dec
xchg
mov
repz
enter
adc
aaa
dec
pop
int3
jb
popa
jno
pop
push
add
stos
add
lds
pop
and
mov
or
subb
inc
inc
pop
repnz
insb
xchg
outsl
lods
and
aam
sbb
int3
and
rolb
ror
jb
sarb
ds
int3
xchg
inc
xorl
xchg
pusha
mov
sbb
lcall
adcl
cmpsl
ret
jl
inc
mov
test
ds
sbb
ja
inc
in
fdivp
sbb
in
dec
pop
sub
lcall
sbb
push
sub
mov
pop
ret
mov
popl
addb
or
mov
pop
pop
fsts
pop
push
push
shll
mov
and
jns
cmpsl
push
loope
fisttps
rcrl
out
nop
out
inc
and
adc
cmpb
xor
andb
and
inc
daa
cmp
fsubrs
int
mov
xor
push
pop
xchg
loope
mov
mov
out
jl
test
sub
xor
mov
push
sub
clc
stos
pop
aas
lds
outsb
hlt
gs
rclb
xor
aaa
mov
push
iret
ljmp
imul
sbb
movsb
fs
sub
mov
stos
mov
and
sbb
or
jp
sub
mov
pop
mov
and
or
daa
and
cmc
ja
adc
mov
push
xor
pop
pusha
test
clc
cmpsb
fnsave
add
std
repnz
decb
jmp
clc
js
pop
fwait
jle
jp
mov
dec
and
pop
mov
repnz
mov
xor
out
rcll
jnp
sbb
inc
cmp
xchg
mov
insb
popf
cmp
mov
ljmp
mov
xor
inc
dec
inc
mov
int3
out
andl
lods
or
js
push
outsb
test
test
cmp
cmp
ja
cli
sbb
stc
push
jg
fwait
or
jns
les
das
data16
rclb
or
movsl
dec
test
imulb
cwtl
in
or
add
xor
pop
in
enter
shlb
orl
sub
pop
adc
pushf
ror
mov
stos
mov
in
fistpl
notb
add
xchg
movsl
dec
push
cmp
mov
insl
push
daa
ss
pop
fisubrl
decl
mov
push
test
dec
dec
pop
sbb
adc
jge
cmp
pusha
xchg
dec
dec
pop
jge
stos
aam
mov
movsb
lock
dec
dec
outsl
mov
push
ds
xor
or
iret
ficoms
mov
cmpsl
je
cmp
ficoml
movsl
dec
pop
xlat
and
xor
pop
pop
mov
ja
fistl
jecxz
adc
push
adc
imul
xchg
lret
jmp
test
mov
sbb
faddl
shlb
jne
add
add
sub
cmp
jmp
rolb
cmpsl
and
notb
movsb
mov
mov
cmp
stos
jmp
or
push
inc
add
loopne
push
xchg
lahf
es
xor
and
imul
ret
fisubl
fiaddl
push
iret
enter
ljmp
mov
add
pushf
gs
inc
lea
fistl
sub
dec
mov
mov
jo
mov
adc
aaa
mov
imul
and
add
push
std
inc
dec
rclb
adc
ret
adc
xchg
jns
sub
inc
ljmp
jle
and
jl
push
lds
repz
pop
mov
lahf
sub
inc
pop
sbb
adc
das
int3
or
cs
stc
test
rorl
xchg
inc
fwait
lods
ret
mov
dec
stos
in
cwtl
push
imul
adcl
hlt
pop
mov
divl
sbb
xor
mov
je
xor
add
xchg
cwtl
cld
mov
xchg
test
mov
jl
cmp
sti
out
and
out
icebp
jle
adc
jbe
mov
popf
mov
and
mov
fwait
xlat
jne
fldl
cmp
mov
cmp
jo
jl
pop
outsb
xor
adc
int3
mov
xchg
push
sub
stc
adc
into
jg
aaa
out
and
cmc
mov
add
mov
jb
frndint
dec
in
es
cmp
out
iret
test
aas
adc
jbe
push
lods
lods
ret
xor
stos
jne
fstl
fsubrl
mov
lea
dec
mov
sub
push
push
inc
dec
mov
or
sbb
imul
pop
pusha
xchg
adc
dec
rolb
or
hlt
stc
add
adc
loop
rorb
push
xor
mov
adcb
mov
es
add
es
ret
popa
push
mov
lock
cld
sub
push
jae
shl
fidivrs
int
lds
mov
les
popf
ss
lret
jp
push
push
mov
pop
adc
jl
das
xor
repnz
ljmp
xchg
aaa
cmp
mov
pusha
jb
insb
add
push
stos
xchg
pushf
mov
outsb
mov
cmpsl
enter
pop
inc
andl
out
push
jne
pop
jo
xchg
push
dec
aaa
arpl
cmp
mov
data16
mov
cmp
sbb
push
std
mov
pop
out
cmc
xor
pop
int3
popa
dec
jge
in
xor
dec
cmp
dec
enter
push
xor
dec
je
or
test
cwtl
jmp
pop
jae
gs
sub
cmp
push
mov
shlb
mov
rsm
mov
mov
jb
push
jmp
push
sti
pop
loopne
rorl
fildll
mov
ret
in
jo
xor
jecxz
sbb
test
daa
or
jl
out
shr
push
cmp
mov
mov
loop
xor
jle
mov
pusha
or
mov
andb
push
pusha
jg
or
shll
ja
cmp
test
and
sbb
js
pop
sbb
aaa
mov
std
push
ret
aas
xchg
mov
mov
mov
push
movsb
xchg
add
lcall
lcall
setnp
xor
cli
div
cwtl
pusha
sbb
daa
push
or
mov
mov
inc
fists
push
jecxz
xor
inc
roll
or
sub
lock
sbb
enter
inc
repnz
ljmp
xlat
lcall
cltd
add
mov
mov
jg
fdiv
cmp
xchg
pop
ret
mov
pushf
push
lret
sbb
outsl
movsb
push
jne
sahf
mov
mov
adc
movsb
and
mov
insl
cmp
jmp
xchg
lret
es
pop
mov
push
insb
xchg
sub
fwait
lds
orb
arpl
inc
shl
add
lods
push
out
sahf
add
dec
jl
mov
leave
push
mov
ja
adc
xchg
bound
mov
add
push
ret
adc
fstps
ds
ret
xchg
mov
xchg
mov
jb
testl
pop
push
mov
loope
push
dec
mov
inc
iret
or
add
cmpsl
jp
mov
dec
mov
enter
fistl
je
movsb
fadds
aaa
mov
int
pop
xchg
or
push
cmp
or
jb
imul
xchg
popa
pusha
das
jecxz
push
sub
sub
inc
nop
rcrb
sti
mov
dec
test
insl
push
and
sub
add
mov
out
jecxz
add
inc
fidivs
cmc
arpl
mov
and
cmp
ss
loopne
call
jne
pop
cmp
jg
and
mov
ja
in
scas
mov
pop
cmp
and
xchg
aas
adc
psubd
or
dec
xchg
adc
pop
pop
adc
pushf
jge
inc
cld
sub
and
xchg
stc
mov
loop
or
pop
pusha
mov
bound
js
jbe
mov
pop
fldl
cmc
dec
adc
pop
in
daa
jne
decl
pop
xchg
fs
pop
xor
and
jno
cmp
xchg
scas
push
or
mov
mov
pop
add
sub
repnz
icebp
je
repnz
rol
lcall
popa
or
xor
sbb
lods
rorb
cltd
push
xlat
dec
sub
push
icebp
lea
push
mov
nop
xchg
lds
and
lock
mov
out
or
mov
test
xor
sbb
and
shrb
cltd
xchg
ficoml
hlt
arpl
or
les
stos
ret
xchg
fdivrl
ret
das
mov
pop
fisubrs
mov
mov
in
mov
popa
jmp
cmp
popf
and
mov
repnz
fsubs
dec
gs
push
and
icebp
adc
lret
jno
mul
sarb
pop
push
cmp
cs
inc
sbb
push
call
add
test
adc
clc
mov
lock
test
or
jae
out
repnz
inc
adc
mov
dec
rclb
inc
in
or
and
fwait
ret
cltd
loopne
ljmp
xor
sbb
arpl
loop
fbld
sbb
popf
pop
outsl
scas
test
push
pop
lcall
xchg
pop
lock
jmp
cwtl
mov
cs
or
sti
sbb
jae
mov
jb
add
das
push
adc
or
mov
icebp
or
add
addb
mov
adcb
xlat
fs
adc
mov
jmp
fnsave
xchg
stos
jmp
sbb
adc
cwtl
mov
aam
stos
je
data16
add
cmpsb
mov
test
imul
or
and
dec
mov
lahf
lret
je
loopne
movsl
mov
inc
mov
mov
fsts
pop
ljmp
xchg
inc
stc
lret
adc
je
dec
mov
sub
jno
pop
loope
sub
adc
add
jnp
shl
or
and
ljmp
inc
sub
filds
outsl
push
cmp
jns
cs
fnstcw
aaa
add
push
or
lods
dec
outsl
imul
push
inc
xchg
dec
mov
mov
les
gs
push
mov
push
cmp
movsb
popf
mov
cmp
inc
add
mov
mov
mov
mov
pop
jb
and
in
adc
movsb
jbe
push
into
xchg
xchg
cli
mov
and
add
push
add
add
hlt
pop
push
rcl
push
bnd
gs
filds
jae
jmp
cmpl
orb
nop
test
mov
xchg
ret
dec
rcrb
sub
ret
sbb
pop
fwait
push
sahf
inc
icebp
xor
push
cmpsb
repnz
insl
or
inc
push
dec
pop
inc
call
inc
xchg
and
mov
push
stos
enter
aam
mov
mov
popf
mov
je
push
jmp
in
jmp
pextrw
sub
fisubs
xchg
iret
push
mov
fsubs
rcr
pusha
xchg
xchg
dec
inc
addr16
das
dec
push
inc
lea
jecxz
popf
in
fucomip
pop
in
lds
mov
adc
enter
pop
push
pop
movsb
xchg
mov
mov
mov
js
mov
rcr
bound
clc
mov
pop
mov
rorb
mov
adc
popf
or
inc
jne
rcrb
mov
sbbl
lea
dec
gs
sub
jae
stos
cmpsl
stc
push
xchg
mov
ret
xor
in
rclb
lods
out
sub
push
mov
lret
scas
scas
shrl
fstpt
ror
shll
jbe
add
pop
inc
shr
mov
or
push
enter
clc
xchg
or
xchg
in
add
xchg
xor
mov
mov
fmull
fcmovne
std
xchg
cmp
mov
mov
sub
sub
cmpb
repnz
pushl
in
mov
inc
xchg
cmpb
jge
pop
mov
xlat
mov
xor
cld
xchg
cmp
jg
lret
je
push
jp
popf
arpl
push
aas
lock
lods
or
inc
movsl
test
dec
in
mov
push
mulb
repnz
mov
lods
jne
mov
mov
mov
es
jnp
ret
outsl
cmp
test
mov
pop
fcoms
push
rorb
mov
rcl
jb
imul
push
and
push
adc
cmp
xor
cli
mov
fwait
je
sbb
test
jb
push
loop
sub
std
mov
or
add
jge
pop
pop
test
hlt
jbe
xchg
int3
pop
bound
xchg
mov
sahf
arpl
add
or
lret
mov
ret
sti
out
sub
jg
in
mov
addr16
jae
fwait
fs
jne
jecxz
cmp
jmp
inc
xchg
out
inc
rorl
cltd
lods
in
lret
dec
inc
inc
jns
pop
lods
mov
insb
out
scas
xor
sbb
mov
mov
popf
dec
out
sub
cmc
and
enter
nop
loop
sbb
cmp
lds
cmpsb
mov
ret
ffree
cltd
mov
ja
clc
movsl
insb
lret
inc
mov
xchg
inc
fldt
sbb
imul
pop
stc
xchg
scas
cltd
mov
es
mov
or
arpl
pop
cmpsb
sbb
mov
pop
mov
mov
xor
out
push
dec
aam
jne
mov
jnp
shr
imul
lods
xchg
sti
test
pop
mov
add
xchg
dec
ror
dec
mov
je
and
cmp
int3
sahf
in
or
add
pop
fisttps
xor
jbe
dec
int
arpl
cmp
in
fcmovb
mov
rol
push
jmp
out
push
mov
or
mov
daa
and
pusha
frstor
cwtl
leave
cltd
xor
mov
dec
adc
mov
sub
mov
andl
inc
xchg
push
dec
insb
roll
adc
lock
mov
mov
loop
mov
push
sarb
mov
mov
inc
push
or
shll
lock
lock
negb
es
jecxz
mov
or
inc
jne
test
out
mov
jnp
in
mov
mov
jl
mov
mov
inc
jae
sub
mov
sarb
sub
aam
and
test
outsb
inc
lock
mov
dec
cmp
addr16
lea
jl
and
das
sbb
xor
or
sub
lea
pop
int
jbe
xor
orl
xor
call
mov
out
das
fmulp
xchg
iret
sbb
push
xor
push
arpl
mov
add
cmp
jecxz
cmp
jle
jecxz
hlt
aas
sbb
dec
sbb
fistpl
dec
pop
loope
mov
mov
std
call
lods
jbe
gs
xor
sbb
ds
xor
push
inc
pusha
inc
sub
sub
xor
mov
jbe
insl
fstps
sub
push
cmp
cmpsl
cmp
mov
add
add
test
mov
cmp
push
movsl
xchg
in
ss
jle
in
int3
rolb
nop
cmc
cltd
pushf
arpl
test
repnz
insl
jb
dec
jnp
adc
sbb
mov
push
mov
mov
js
jg
jl
mov
popa
pop
pop
xchg
icebp
push
roll
mov
out
out
dec
xchg
xor
test
cwtl
mov
int
out
mov
loopne
mul
int3
inc
loopne
std
sub
jecxz
sbb
sub
lea
or
xchg
inc
mov
lret
insb
pushf
test
aam
push
pop
or
sub
pop
sub
and
loope
mov
or
xor
shl
and
lahf
adc
iret
and
push
int
sub
xchg
popf
outsb
mov
repz
stc
and
and
addb
sbb
or
push
or
fwait
mov
jecxz
sbb
mov
dec
dec
cmp
enter
sarb
push
lahf
add
cmp
sahf
inc
cmp
cmp
out
dec
hlt
sub
das
pop
xchg
jbe
mov
pop
lcall
ja
fs
xor
imul
xchg
mov
shrl
outsl
mov
dec
cmc
sbbb
and
push
adc
cwtl
pop
pop
pop
lahf
aam
lahf
out
test
shrb
addr16
in
dec
jb
xchg
or
fs
mov
push
jg
sub
ret
mov
sbb
movsl
dec
lret
loope
cmp
call
int
cmp
mov
cmc
xor
mov
cld
adc
jne
outsl
sbb
jns
pop
test
xchg
das
and
push
sub
hlt
pop
repnz
xor
or
cld
inc
stos
neg
or
mov
aad
inc
mov
hlt
xchg
cmpsb
inc
push
shlb
iret
jb
cmp
cs
mov
cmc
incb
add
cmc
loopne
xchg
adc
push
jb
in
shrl
mov
add
and
mov
cmp
bound
pop
ret
dec
shll
push
fisttps
xchg
adc
push
out
and
lret
adc
pop
mov
sar
xorl
push
fimuls
dec
loop
pop
xchg
mov
cmp
dec
mov
icebp
out
inc
push
getsec
rcll
dec
clc
addl
xor
cld
dec
jge
out
push
repz
jb
addb
subb
and
call
sub
jb
inc
ficomps
sarl
pop
int
out
add
or
nop
cmp
inc
movsb
jo
push
mov
inc
stc
imul
and
imul
aad
xor
outsb
mov
cmp
cmp
xor
inc
xchg
imul
pop
push
or
pop
xchg
js
std
cmp
incl
mov
mov
addl
rcr
mov
xor
cwtl
xchg
push
fs
bound
pop
loop
inc
mov
xchg
inc
scas
xchg
pop
push
sahf
or
mov
jae
inc
push
fidivrl
int
pop
jmp
push
inc
mov
push
cmp
sub
xlat
adc
jb
pop
aam
test
aam
xor
in
adc
push
andb
outsb
in
dec
in
pushf
pop
out
mov
shrl
divb
int
xchg
push
std
push
xchg
or
sub
fst
fucomp
mov
cs
push
cltd
loop
xchg
adc
addr16
add
add
pop
mov
dec
icebp
fists
dec
dec
lods
call
daa
fcoms
push
pop
cmp
movsb
ss
popf
nop
rclb
rcrb
xchg
out
fsubr
jne
test
xchg
icebp
inc
push
incl
push
add
jno
mov
fildl
push
jno
loop
add
add
cmp
add
shr
jle
int
sbb
and
out
mov
subl
push
xor
sahf
jge,pn
push
pop
mov
bound
lods
xor
aam
lcall
sbb
cmpsb
subb
pop
adc
inc
mov
jnp
mov
or
movsl
add
inc
cltd
test
jae
push
sub
sub
pop
or
or
loopne
adc
lahf
scas
adc
mov
pop
cmp
dec
push
mov
dec
mov
add
mov
sbb
fidivrs
sub
mov
xor
mov
adc
pminsw
or
insl
pop
dec
pusha
adc
arpl
xchg
pop
jnp
xor
push
popa
jae
loopne
pushf
cli
loope
add
bound
aaa
out
das
jnp
iret
add
imul
jmp
cld
lods
bound
inc
mov
pop
lahf
repnz
mov
pop
not
adc
cli
jge
outsb
mov
hlt
rclb
push
pop
adc
mov
mov
arpl
repnz
loope
mov
popf
shr
or
xlat
notl
push
sarl
pushf
das
lret
mov
ja
fadds
pop
int
sbb
shlb
cld
push
mov
es
dec
adc
mov
jecxz
int
push
out
jne
ret
push
mov
xor
js
shlb
dec
cwtl
div
cs
ss
in
hlt
repnz
mov
xorb
shlb
cltd
inc
push
lcall
loope
sbb
pop
push
mov
push
inc
push
test
xchg
ja
into
mov
add
push
clc
push
lods
jnp
cmp
cmp
cwtl
lret
pop
sbb
pop
cmp
mov
cmp
or
push
xchg
cmp
xchg
cmp
cmpsb
inc
or
mov
jnp
addb
pop
mov
jns
jle
adc
pop
jns
cli
jg
push
sub
dec
fbld
sub
scas
jno
pop
xor
and
rep
push
arpl
or
insl
addr16
mov
inc
sti
pop
or
xor
and
dec
xchg
in
sub
push
iret
inc
stos
sub
dec
mov
sub
stc
cs
lcall
push
push
negb
cli
cld
ja
pop
std
jg
mov
ret
mov
decl
xchg
sub
mov
push
aas
sub
pushf
xor
cs
xor
inc
xchg
jne
or
data16
loope
inc
daa
lock
movsb
jmp
and
out
in
mov
mov
pop
inc
repnz
mov
cltd
or
sbb
mov
pop
repnz
stos
dec
gs
xchg
mov
movsb
pop
popl
bts
sarl
lcall
or
push
cmp
imul
and
leave
add
test
nop
in
adc
pop
rcrl
jne
cltd
out
adc
sub
push
sub
push
insb
dec
jle
xor
lea
das
sub
push
lods
lret
sbb
jno
add
mov
cmp
sbb
jo
jl
pop
jae
and
lods
vandnps
dec
push
xor
and
cmp
popf
xlat
push
ds
je
outsb
push
mov
mov
and
cmp
adc
pop
cmpsl
nop
popa
xor
sarb
sub
xchg
jmp
sub
dec
repz
dec
mov
or
out
popa
cmp
fisubrl
loope
popf
jne
pop
push
dec
jo
jg
shrl
out
inc
imul
and
and
cmp
outsb
gs
mov
shll
clc
cmpsl
mov
in
lock
js
push
call
jmp
test
test
incb
daa
jl
push
xor
ljmp
imul
sub
out
adc
or
push
mov
je
add
ret
sti
ss
pop
jo
fimull
stc
xchg
int3
xchg
xchg
push
cmp
mov
loopne
leave
dec
jne
xchg
ja
hlt
pop
pushf
xchg
cmp
inc
sub
and
push
xchg
lahf
cmp
pop
mov
shlb
loopne
imulb
cmp
dec
add
sbb
pop
lcall
lret
xchg
mov
pop
test
xor
sub
imulb
xchg
push
jae
adc
lods
inc
xor
ja
lea
pop
sbb
mov
aas
pop
add
repz
xchg
stos
inc
or
mov
int
test
outsl
add
gs
xchg
xor
cmp
mov
lret
outsl
cltd
decl
test
pushf
cmp
loop
enter
int
out
arpl
fmull
and
inc
push
push
add
out
mov
clc
inc
idiv
gs
pop
xchg
mov
pop
jbe
jno
cmpsl
mov
xlat
pop
push
mov
jbe
cmp
fsubl
scas
out
xchg
out
jmp
push
imulb
inc
jno
stos
push
pop
out
and
daa
mov
lea
outsl
adc
lcall
lahf
call
inc
or
push
movsb
or
xlat
and
and
or
cwtl
data16
call
stos
mov
inc
pop
cwtl
mov
sub
sbb
imul
les
sti
sbb
imul
cltd
jl
stc
mov
sbb
xor
inc
push
loop
mov
sbb
fstpl
aam
adc
aad
scas
mov
xor
inc
xor
jno
mov
jae
add
in
or
xor
mov
ljmp
cmp
sbb
xlat
cmpsl
jae
shlb
xor
lods
dec
jo
pop
repnz
push
test
ds
jmp
jb
mov
and
dec
adc
jae
mov
adc
lret
rcl
movsl
add
push
into
or
add
out
inc
ja
nop
add
pop
mov
pop
add
movb
cmc
pop
ficomps
jp
fsubrs
fadds
loope
ret
insb
mov
scas
call
pmuludq
out
out
movsl
pop
cwtl
xchg
insl
cld
std
jo
ret
or
test
loope
gs
aas
cmp
call
popf
dec
mov
xchg
cmp
std
sbb
xchg
add
inc
mov
pop
loope
loop
add
rorb
jl
dec
aaa
add
lods
cmpsl
pop
mov
push
daa
sbb
out
js
cmp
inc
xchg
out
lods
stc
cmp
jns
aas
into
inc
xor
bound
fdivrs
ret
ret
cmp
inc
out
mov
push
push
pop
dec
movsl
pop
scas
push
push
mov
fcomip
or
ret
loopne
pusha
sarl
jge
lret
add
cld
ds
push
xchg
and
and
xor
fmuls
iret
loope
dec
sub
and
out
sub
repz
repnz
loopne
jno
dec
enter
inc
call
adc
cmp
jg
mov
bound
jecxz
mov
mov
fldcw
xor
cmp
or
xchg
lahf
test
sub
jae
pop
or
pushf
daa
aas
and
inc
jmp
and
or
xchg
mov
jmp
dec
ja
cmp
je,pn
insl
repz
ljmp
xor
into
repnz
jl
and
sbb
in
sub
cmp
add
inc
stc
sti
cmp
fists
repz
pop
add
dec
shrb
dec
aad
inc
fwait
aam
jg
fucom
lea
into
imul
iret
add
xor
setl
stos
ds
in
or
out
call
adc
movsb
jp
mov
fbld
sbb
add
sahf
inc
std
jmp
dec
hlt
inc
adc
ds
mov
mov
cmp
push
pop
lret
jl
notl
mov
xchg
or
mov
add
call
push
mov
pop
xor
in
inc
insb
add
inc
rcrl
add
popf
adc
adc
dec
jns
push
lods
inc
or
push
sbb
mov
and
cltd
lock
inc
mov
add
mov
pop
sub
aam
dec
insl
lcall
pusha
sar
or
push
jle
inc
adc
in
pop
adc
into
js
neg
fdivrp
cmp
bound
into
and
mov
jns
sub
cmp
inc
rorl
movsb
jle
adc
pop
sub
loope
loop
jne
mov
scas
push
cmp
cmp
cld
sbb
adc
leave
push
fnsave
mov
push
adc
stos
aas
add
sub
sub
hlt
push
lds
mov
xlat
xchg
lea
pop
and
pusha
xchg
push
mov
bound
pop
cmp
and
rcl
inc
pusha
repnz
dec
subb
in
pcmpeqb
lds
push
add
into
dec
mov
loop
cmp
cmp
mov
or
jbe
jl
stc
mov
dec
xchg
lods
sub
inc
and
mov
out
cmc
xor
mov
jns
stos
lret
icebp
jecxz
gs
aam
imul
mov
cmp
jmp
insb
enter
ret
push
arpl
mov
xchg
imul
dec
leave
add
xor
fwait
ret
push
popa
pop
jecxz
cmp
cli
or
jne
stos
dec
out
push
xchg
pop
inc
leave
mov
imulb
fimull
pop
mov
lds
jge
inc
mov
in
movsb
push
adc
insl
inc
fdivl
push
mov
pop
andb
mov
cld
imul
cmp
xchg
or
inc
jge
insl
jl
imul
xor
jg
das
out
cmovl
test
xchg
xchg
push
test
loopne
push
inc
fiadds
xor
int
dec
pop
out
cmp
pushf
xorl
and
push
add
test
out
xchg
adc
mov
add
imull
xor
adc
pop
jmp
mov
rolb
and
xor
add
sub
and
test
xor
ljmp
add
xlat
xor
dec
push
cmp
je
inc
ja
dec
cltd
xchg
cmp
and
push
xchg
dec
imul
jo
fwait
pop
in
fmul
inc
cmp
cmpsl
mov
pop
mov
movsl
adc
test
popf
fisubrs
push
and
sbb
fisubl
lods
bound
fidivs
pushf
jnp
adc
js
inc
or
out
negb
pusha
aad
in
stc
xor
sub
cs
sub
mov
into
jae
and
jecxz
shl
nop
mov
jbe
pop
movb
pushf
or
push
lods
mov
xchg
sub
mov
dec
dec
roll
dec
test
inc
stc
push
daa
repnz
loop
test
sbb
push
dec
arpl
cld
test
cmpsl
xor
xchg
fcomi
cltd
cmpsb
push
adc
outsb
in
jg
sub
and
loop
js
adc
movsb
scas
stos
out
outsl
add
xorl
icebp
pop
shrb
mov
notl
int
movsb
sub
lods
ljmp
jge
stc
adc
out
and
icebp
fcmove
push
inc
subb
movsl
decb
das
ss
cs
jmpw
sbb
neg
adc
cmp
cli
mov
inc
rorl
inc
in
mov
mov
mov
and
fsts
sbb
andl
in
std
xor
sbb
ficoms
cmc
inc
or
cmpsb
push
movl
nop
and
repz
test
mov
enter
adc
mov
aas
dec
dec
sarl
lret
ret
ds
pop
lea
adc
push
imul
imul
ljmp
into
or
subb
stos
sub
pop
mov
in
sub
jg
lock
arpl
adc
nop
insb
sub
inc
fists
add
aam
sahf
data16
es
jl
loope
mov
pop
cld
and
add
pop
xchg
dec
adc
fldt
mov
jmp
insb
shlb
mov
jno
test
sti
mov
fbstp
add
cmpsl
in
xlat
mov
sub
repnz
sbb
ljmp
jg
xor
mov
inc
aam
fcompl
je
dec
jl
es
xchg
inc
lcall
je
dec
sbb
fldenv
dec
stos
dec
xor
add
and
pop
sub
cmp
adc
imul
push
lock
test
lret
and
testb
jmp
out
ret
ret
test
mov
mov
xorl
rcrb
lahf
and
or
and
in
mov
dec
and
jg
cwtl
sbb
int3
cmp
and
pusha
sbb
or
gs
xchg
and
lods
gs
pop
push
mov
ss
or
mov
stos
icebp
mov
lea
mov
icebp
push
lahf
dec
inc
mov
ds
iret
loope
or
inc
sbb
dec
xchg
pop
jecxz
pop
sbbb
jnp
inc
xchg
mov
int
and
or
out
pop
mov
xlat
fadd
push
push
adc
rolb
imul
xchg
push
mov
xlat
scas
insl
jns
jg
push
pop
cmp
adc
and
addr16
push
sbb
daa
into
push
sbb
pushf
lods
push
rcrb
cmpl
cmpb
jle
or
sbb
xchg
nop/reserved
inc
hlt
jge
pshufd
push
and
stc
push
inc
cmp
imul
fldt
push
or
xchg
rcr
or
mov
ja
inc
dec
adc
sarb
add
imul
mov
mov
mov
sbb
fisubrs
adc
add
test
iret
outsb
loopne
or
js
sub
fdivrs
bound
cmp
xchg
xchg
xor
or
fcmovb
movsl
jle
call
mov
aad
into
je
cmp
icebp
fidivl
call
and
pusha
fucomp
add
jbe
cmpsb
push
mov
jne
cmc
in
shll
cmp
or
or
imul
out
cld
mov
xchg
dec
mov
adc
cmc
cmp
test
sub
inc
rclb
stos
sub
mov
lcall
push
popf
stos
dec
sbb
imul
fistpll
out
dec
fnstsw
and
loope
jb
lods
push
iret
pushf
inc
fsubrl
orl
lock
jnp
ds
xor
mov
mov
mov
xorl
cmp
fucomi
nop
and
je
cmp
fstpt
outsb
idivb
data16
test
mov
pushf
push
stc
pop
jecxz
test
imul
sahf
ficoml
adc
adc
stc
ret
movlps
mov
loop
cmovg
xlat
and
rcrl
data16
mov
mov
inc
jae
xor
movsb
orb
push
sarl
add
nop
mov
imul
dec
push
sbb
push
jns
lods
loope
cmp
add
push
add
scas
mov
sbb
add
std
out
inc
loopne
cmp
xchg
xor
add
je
mov
in
sbb
xor
xor
ror
sub
mov
mov
inc
orl
xlat
push
movsl
dec
fdivrl
aad
push
loope
fiaddl
aaa
jmp
cmpb
insl
jp
repz
bound
mov
inc
cmc
mov
adcl
xor
jae
test
push
cmp
addr16
cmp
loope
add
and
or
in
loop
arpl
fs
lret
inc
xor
leave
repz
dec
ljmp
out
add
stos
pop
cltd
insl
bnd
jle
adc
popa
cmp
xchg
mov
imul
stos
pop
mov
or
into
jbe
pusha
dec
and
adc
cmc
test
icebp
fstps
lret
fsubrs
or
or
push
hlt
and
adc
cmp
or
or
xorb
js
mov
shll
fwait
and
lock
sahf
xlat
std
shrl
shlb
les
mov
push
js
movsb
dec
lea
shll
push
fbld
shrl
iret
pop
bound
adcb
add
dec
cmpl
ljmp
mul
lret
sahf
aaa
imul
shl
and
dec
ljmp
sbb
push
cmpsb
mov
into
es
dec
adc
dec
fbld
loop
aaa
dec
or
dec
mov
punpcklbw
andb
sbb
push
into
movsl
aad
jno
xor
emms
add
add
outsl
mov
pop
jmp
imul
fwait
outsl
xor
cli
lea
push
and
jge
mov
cmp
xor
pop
call
sub
sarb
push
movsl
enter
and
insl
pushf
jle
int
jae
or
mov
out
and
jp
mov
xlat
loopne
lret
mov
add
dec
push
inc
sub
insl
sub
or
pop
mov
pop
add
sahf
xchg
pop
sbb
push
or
nop
les
inc
call
add
into
inc
ret
out
adc
insl
cmp
pop
mov
scas
sbb
repnz
inc
popf
inc
xchg
test
lcall
or
sti
adc
mov
out
xor
jecxz
inc
aad
mov
popa
sbbl
cmp
cmp
fbld
jns
sub
adc
leave
pop
ret
ljmp
inc
arpl
aam
lock
mov
push
add
cmp
mov
sub
incb
adc
push
jp
rcrb
arpl
decl
in
loop
jle
sbb
and
or
jns
in
xchg
in
push
lahf
loopne
pop
rorb
rcll
loope
nop
jb
pop
int
push
mov
insl
push
nop
aad
inc
xchg
xor
lods
sub
or
mov
jb
loopne
or
inc
je
shr
ffree
or
dec
cmp
xchg
sub
mov
and
aaa
xchg
cmp
gs
push
test
pushf
repz
inc
aad
lcall
push
mov
iret
addl
sub
in
mov
mov
cmp
sbb
lcall
in
mov
inc
fwait
dec
fnstsw
jmp
sarb
mov
jno
call
imul
push
pop
xchg
jmp
lods
xchg
in
pop
gs
pusha
loope
lds
cmpsl
call
add
cmp
adc
jg
add
jle
cmp
and
adc
pusha
mov
cmp
inc
mov
or
xchg
xor
mov
rol
pop
xor
ljmp
push
lret
int
cmp
negb
xor
loopne
flds
add
dec
sbb
call
mov
imul
loop
push
add
xor
mov
stos
loope
les
and
adc
in
ljmp
sarb
mov
pusha
mov
mov
mov
jne
mov
and
int
jno
xor
mov
lock
push
xchg
mov
movsb
int3
sbb
pop
iret
mov
movsl
adc
add
movsb
ds
sbb
lods
es
jl
popf
cmpsl
loopne
pop
js
imul
int
mov
mov
fwait
iret
adc
mov
sti
or
or
cwtl
sub
push
mov
in
pop
cmp
js
and
pop
adc
data16
movsl
add
mov
xor
lret
gs
jb
adcl
add
mov
bound
cmpsb
mov
add
pop
enter
addr16
xor
loop
inc
cmpsl
jecxz
aam
mov
add
sbb
shrl
ret
lcall
das
loope
stos
sub
push
mov
ret
lds
cmpsl
shll
or
or
add
mov
and
dec
inc
push
in
insl
mov
dec
pop
jns
popa
sub
lret
push
cmp
outsb
je
push
mov
push
int
dec
clc
ljmp
dec
mov
fcmovnbe
out
ja
leave
insl
xor
daa
cmp
xor
push
arpl
repz
dec
icebp
mov
xor
mov
sbb
dec
cmp
into
add
ljmp
movsl
xor
pop
push
test
dec
out
imull
sbb
xor
into
pushf
push
push
add
mov
lods
outsl
mov
arpl
cltd
fsubs
jae
cmpsb
mov
mov
sbb
sub
add
aas
or
push
inc
and
fiadds
sbbl
arpl
xchg
cmp
ja
enter
adc
sbb
pop
loopne
popa
cltd
pop
idivb
sbb
aam
data16
dec
mov
mov
jb
fs
mov
bound
cmp
xor
push
ss
popf
fistpll
mov
pushf
leave
add
inc
sub
fmulp
mov
sarb
in
repz
lds
ja
and
sbb
or
pop
cmp
sub
inc
hlt
pop
mov
clflush
mov
loop
mov
mov
dec
mov
imull
push
hlt
push
leave
adc
cwtl
mov
es
popa
jo
lods
in
add
imul
mov
dec
js
cvtpi2ps
cli
test
loopne
loope
pop
xor
lret
adc
inc
roll
subb
mov
shlb
in
push
xor
cld
cmpsl
or
pop
daa
dec
pop
mov
mov
fs
or
mov
enter
cmp
andb
lea
gs
xor
sub
cmpsl
inc
xchg
js
mov
pop
jnp
push
js
adc
loopne
mov
leave
lds
shll
mov
xchg
and
ljmp
sahf
cltd
andl
addr16
cmpl
push
inc
dec
jle
sub
xchg
or
cmpsl
sbb
outsl
scas
cmpsb
and
fs
punpckldq
es
fwait
fwait
out
cmp
and
pop
push
js
and
in
jl
inc
cmc
negl
call
enter
pop
in
andb
lret
cmp
jbe
mov
mov
add
into
movsl
cmp
adc
inc
in
movsl
sub
xchg
push
xlat
cs
push
pop
mov
in
hlt
and
sub
bound
rcll
test
mov
rcll
push
in
jb
push
sbb
insl
dec
add
mov
andl
aaa
push
cmp
jl
mov
and
dec
jge
lret
out
push
or
test
sbbb
das
add
and
jne
orl
std
mov
dec
ljmp
sti
fcomip
push
sbb
rorb
jae
pop
and
push
je
push
mov
gs
mov
fnstsw
sbb
adc
les
sub
xchg
rolb
movd
add
dec
ret
arpl
mov
xor
push
or
lret
mov
sub
fstp
icebp
mov
ror
push
nop
mov
in
dec
mov
jae
sbb
xlat
fisubs
call
and
cmpsl
pop
into
sbbb
dec
dec
pop
jne
cmc
pop
ljmp
ds
je
test
jns
cmpsb
mov
jmp
pop
lret
dec
mov
int3
test
sbb
enter
pop
cli
cmp
fistpl
pop
mov
mov
addb
fadds
or
imul
out
pop
imul
sarb
xor
cmp
push
mov
xchg
lcall
out
shrl
hlt
subl
push
sbb
movsb
xor
stc
fs
jbe
or
dec
jb
fists
jb
and
dec
lea
sbb
jg
sub
xor
into
sub
cmc
cmp
xor
jnp
loope
hlt
push
and
fnsave
cs
pushf
jo
jnp
sub
ret
mov
ja
addr16
jb
jae
mov
and
dec
add
jle
mov
bnd
stos
push
cli
lock
aad
sbb
inc
or
add
jns
aad
sbb
cmc
push
inc
or
shl
dec
vmovss
dec
xchg
push
xchg
adc
adc
inc
out
shrb
pop
jle
fs
fisttpl
add
add
inc
jne
and
fisubrs
add
popf
divb
mov
xor
fldl
push
sbb
js
cltd
and
mov
sti
shl
notb
jae
jge
xor
sbb
xchg
pop
fwait
call
sub
in
aas
into
lds
inc
adc
and
scas
xor
jno
sbb
test
cmpsl
inc
je
fadds
cltd
mov
xlat
jmp
js
clc
in
jg
or
arpl
jg
xor
xor
jnp
aam
inc
nop
adc
jne
cmp
cmp
cmp
sbb
imul
mov
les
or
adc
xchg
push
aad
push
imul
xchg
add
outsb
jb
fwait
add
mov
fistps
sub
roll
jp
fs
mov
pop
movsl
popa
testb
aaa
xlat
push
scas
mov
les
lds
int
jns
dec
dec
aad
fistps
pop
in
popa
sarl
aad
into
nop
lock
fisubrl
pop
ljmp
js
in
mov
jle
stos
lock
std
jp
int3
push
mov
sbb
into
fcoml
pop
orb
cld
fiadds
dec
xchg
hlt
rorb
jmp
lock
out
jl
dec
jnp
and
mov
xor
popa
ret
mov
cmp
clc
cmpsl
jg
movsb
jl
sub
xchg
out
leave
les
inc
bound
cmp
inc
sbb
lcall
adc
bound
lret
or
jno
push
movsl
mov
test
pop
or
jge
mov
mull
sti
aad
movsl
lds
fwait
cmc
or
adc
aas
cmpl
mov
fsts
mov
fistpl
pop
or
add
imul
sbb
xchg
mov
push
mov
xlat
push
loope
test
in
mov
out
cltd
and
fiadds
mov
mov
or
mulb
sbb
fs
inc
lahf
push
psubb
sti
xchg
and
add
insl
dec
push
xor
cmp
nop
push
stos
add
stos
mov
clc
les
push
leave
jb
sahf
xchg
scas
filds
add
test
fnstcw
push
xchg
pop
inc
outsb
call
addl
mov
mov
sub
ljmp
lea
cmp
add
mov
dec
pop
xor
sbb
or
out
mov
inc
int
push
xchg
cmp
test
add
imul
jbe
repz
ja
lock
jo
mov
cs
imul
mov
mov
mov
push
sub
jecxz
aas
fldl
sub
add
jae
adc
sub
mov
int3
std
xor
dec
out
cmp
aam
mov
stos
in
scas
les
xchg
out
mov
dec
mov
test
mov
mov
adc
jmp
jb
mov
das
fisubrs
rol
loope
mov
lret
arpl
sbb
jle
test
dec
nop
mov
pop
xor
adc
in
mov
mov
dec
addr16
mov
cmp
test
es
push
lock
inc
sbb
rcrb
push
js
test
and
adcb
jne
adc
add
xor
call
sbb
movsl
push
ljmp
int
dec
popa
lret
xchg
xor
loopne
mov
fdivs
stc
sub
loopne
jmp
xchg
or
fimull
xchg
loope
dec
add
sbb
rolb
repnz
sub
push
and
jge
movsb
and
out
gs
xlat
xor
es
xchg
cmp
fidivrs
dec
leave
into
fsubs
pop
aaa
sub
inc
ds
sti
sbb
repz
mov
jl
int3
pop
scas
mov
mov
jo
cmp
add
ficoml
lret
dec
xor
sub
fs
sub
flds
push
cmp
outsl
adc
in
sbb
movl
inc
psubb
fstps
lahf
ljmp
bnd
enter
iret
xorb
scas
mov
sub
call
rolb
cmp
int
enter
sbb
mov
adc
nop
cli
inc
xchg
fwait
loope
adc
adc
shlb
mov
sahf
push
sub
jl
sarl
dec
adc
fwait
sub
out
adc
or
push
pop
mov
loop
push
and
mov
ret
sbb
and
mulb
in
adc
aas
push
sub
sti
andl
jns
sub
jg
jge
inc
dec
out
add
push
push
out
iret
adc
pcmpgtw
ret
pop
fadd
inc
arpl
jae
fsubs
mov
jne
push
jbe
push
xchg
cltd
cmp
out
roll
rcll
dec
cltd
add
cmp
aam
jmp
popa
inc
dec
incl
testb
cld
adc
cli
xor
ret
adc
sub
int
or
pop
loop
leave
or
add
pushf
mov
mov
mov
and
loope
lods
adc
push
in
andb
ret
mov
mov
lock
test
mov
xor
mov
sub
jecxz
incb
jns
dec
outsb
stc
xchg
into
ljmp
or
adc
outsl
or
movsb
push
dec
call
popf
test
pop
jl
addb
cmp
call
fdiv
mov
cmpsl
je
add
sub
mull
xor
ss
xlat
cmp
sub
mov
xchg
faddl
test
push
push
ss
push
mov
xor
scas
popf
mov
sbb
jge
imul
roll
movsb
lahf
or
inc
cmp
das
xor
int
inc
scas
jo
inc
das
mov
movsl
shr
lods
cld
mov
sbb
pushf
bnd
mov
xor
sbb
test
rcr
fwait
es
cmp
xor
mov
add
outsl
fildll
rclb
push
xchg
and
cmpsl
mov
lea
sbb
out
inc
pop
mov
imul
outsl
in
and
mov
insb
jl
xor
mov
inc
sub
enter
mov
jbe
insb
ja
xchg
outsb
dec
mov
jne
pop
or
lcall
cld
mov
add
mov
test
int3
lods
in
cmpsb
cwtl
hlt
outsl
pop
lods
pop
stc
mov
test
fs
or
outsb
movsl
leave
imul
and
xchg
fucom
fcomi
ret
xor
mov
lods
mov
aas
mov
je
repnz
mov
dec
cmp
es
div
xchg
scas
sbb
mov
cs
sbb
mulb
and
sbb
call
scas
xchg
out
out
mov
fiadds
fistpl
dec
cs
pop
dec
aas
adc
jecxz
dec
fs
scas
fcom
push
das
dec
jmp
in
and
insl
ss
jne
jb
jo
sbb
mov
cmpsb
adc
outsl
fsubs
push
mov
xor
lock
mov
cmp
dec
aad
lcall
and
pop
int3
iret
std
or
sbbl
fstpt
outsl
shlb
xor
negb
insb
lea
pop
mov
push
and
ret
leave
sub
icebp
outsb
jecxz
cmp
iret
out
aas
dec
jnp
loope
xchg
int3
inc
and
inc
enter
or
sbb
jae
cmpsb
repz
es
and
adc
jae
ret
ds
and
popf
xor
push
iret
dec
mov
movsb
clc
mov
cmp
cltd
xor
push
pushf
and
cmpsb
aas
loope
fidivl
pop
into
push
dec
sbb
sarl
inc
fs
pop
mov
push
jnp
jo
add
gs
sub
movsl
lret
mov
or
xchg
les
xchg
inc
loopne
outsl
pop
push
jnp
mov
in
jg
or
or
fldenv
xchg
orb
test
out
jb
lods
xlat
sub
testl
ljmp
mov
cmp
cmc
andnps
outsl
pop
jp
loopne
ja
icebp
cmp
lret
xchg
movsl
sbb
repnz
mov
mov
in
leave
or
and
mov
sub
inc
xor
xchg
arpl
cmpsl
out
add
add
cmp
adc
ljmp
cmp
lret
das
mov
mov
and
sbb
insl
pushf
imul
dec
cmp
dec
sbb
jecxz
rol
inc
movsb
ret
jb
shl
push
leave
scas
cmp
dec
push
gs
out
gs
cmp
mov
push
loopne
inc
inc
scas
push
sbb
icebp
and
lcall
push
leave
scas
inc
popa
je
into
test
ret
lock
cmpl
xchg
dec
rolb
cltd
mov
in
mov
mov
stos
lods
add
or
out
xchg
ret
es
ljmp
adc
in
pop
add
and
test
mov
xchg
pop
inc
or
cmc
jle
shll
dec
js
repnz
and
ret
inc
pop
sbb
dec
pop
xchg
mov
xor
push
mov
loopne
xor
push
lcall
jmp
mov
jns
mov
sti
outsl
test
jae
test
scas
sbb
add
in
arpl
aas
mov
dec
push
push
bound
mov
push
aad
stos
dec
lock
pusha
lret
repz
pop
test
lods
cmp
jnp
rcl
sub
pop
ret
dec
push
adcl
add
and
pop
aam
js
add
hlt
je
pushf
lcall
push
rolb
fwait
jp
inc
adc
stc
movsl
mov
xor
stc
stc
push
adc
jno
in
and
loope
cwtl
or
sti
mov
dec
jo
andl
jbe
mov
pop
icebp
mov
pop
cmp
push
aas
push
jp
mov
cld
pop
gs
lcall
mov
hlt
add
sar
ljmp
mov
out
and
jmp
ja
and
stos
adc
jb
sub
mov
pop
shr
stc
push
fstps
pop
mov
leave
repz
xlat
xchg
add
mov
mov
movsl
push
stos
pop
mov
inc
imul
loop
jle
aam
in
mov
jno
push
dec
mov
pop
movsl
add
cs
add
adc
dec
xlat
and
negb
xchg
int
stos
push
mov
cmp
push
and
shlb
aas
mov
mov
leave
mov
repz
shlb
mov
sbb
clc
mov
inc
in
daa
lods
into
movb
push
fmuls
inc
adc
jmp
dec
inc
or
mov
shll
mov
inc
sub
or
aam
clc
inc
or
pusha
jmp
lods
inc
leave
dec
jl
fiadds
outsb
push
je
jne
mov
fisubl
adcb
and
adc
aam
sbb
adc
add
arpl
rol
xchg
int3
js
xchg
aas
or
sub
mov
movsl
ror
push
mov
div
test
cmp
xchg
jbe
xchg
sti
dec
mov
and
andl
mov
repz
mov
jge
cld
pop
inc
imul
dec
stc
push
jmp
pop
dec
dec
add
notl
jno
lods
mov
mov
fisttpl
push
inc
add
inc
movsb
sub
push
rcrb
mov
push
sar
cmpsb
jge
shll
cmp
lods
popf
or
shl
stos
fnstenv
xchg
or
xchg
mov
push
aas
mov
mov
out
cmp
xchg
stc
xor
stos
insb
out
sub
mov
arpl
jnp
scas
test
rcrl
fdivrp
cmp
xor
xor
sar
or
sub
cwtl
mov
xor
jecxz
dec
fs
and
mov
lahf
js
lahf
inc
out
scas
stos
sbb
fcompl
test
fstpl
mov
push
pop
mov
push
xor
je
or
sub
test
mov
pop
or
fnstsw
adc
pop
data16
adc
inc
rcrb
test
outsb
dec
xor
shlb
xor
and
movsb
lods
dec
repnz
insb
bound
adc
xor
pop
lahf
xchg
mov
rorb
jns
pop
sbb
mov
sub
dec
or
rolb
mov
xor
sbb
jp
sarl
pop
inc
jno
dec
sbb
mov
sbb
xor
jecxz
adc
push
call
adc
aad
rorl
daa
leave
fs
pop
fwait
mov
sub
lret
ljmp
cmpsl
jge
pop
fucomp
in
push
call
les
enter
push
ds
std
adc
daa
xor
mov
mov
dec
xor
jb
lcall
ljmp
aad
push
xchg
xlat
pushf
and
pop
sar
enter
cli
inc
pushf
push
sbb
scas
cmp
pop
das
or
xchg
mov
loope
ja
adc
sub
jl
pop
and
scas
xor
add
push
mov
outsl
cmpsb
aas
dec
xor
cltd
pop
xchg
mov
or
mov
je
pusha
jne
lea
in
mov
out
fdivs
lret
icebp
push
lea
pushf
cltd
add
cmc
mov
sub
sahf
or
xchg
xchg
jne
arpl
mov
loope
fwait
add
ss
aam
scas
movsb
lds
add
jecxz
pushf
je
mov
pop
cmc
sti
rolb
xchg
adc
es
mov
sub
ret
lcall
loop
mov
cmpl
push
xchg
fwait
mov
pop
gs
dec
jno
je
and
test
test
mov
rol
loope
jae
fcomip
sahf
add
cmc
fwait
dec
out
popa
loope
lahf
pop
pop
inc
mov
ret
mov
sbb
mov
mov
xchg
aas
push
inc
ja
cmpsb
and
jbe
mov
out
aas
add
outsb
xor
cmpsb
aaa
jns
sti
and
cld
repz
cmp
add
or
xor
inc
je
and
cmp
jae
jp
inc
lea
dec
popf
inc
inc
pop
push
pop
or
ds
out
mov
dec
fsubs
popf
nop
and
rcr
add
adc
mov
xlat
mov
stos
cmp
movb
fidivrs
and
cs
mov
mov
std
jl
out
push
xchg
push
pop
cmpsb
mov
fistl
xor
dec
ret
pop
or
nop
rcr
adc
jmp
sub
stos
push
or
movsb
xorl
jge
dec
das
negl
mov
xor
fs
int
into
mov
mov
jge
add
jnp
lds
loop
aad
xor
cmp
xor
cltd
loop
cmp
pop
into
xchg
mov
cmpsl
xchg
iret
inc
mov
jp
mov
mov
adc
dec
insl
sub
out
pop
cli
adcb
outsb
push
jp
sbb
test
adc
repnz
je
jne
das
ss
ljmp
loopne
aas
aaa
rorl
fstpl
sbb
mov
rcll
int
or
loopne
insl
into
rcll
pop
sahf
dec
rolb
xor
loop
mov
fldenv
xor
dec
cmpsb
mov
push
dec
xchg
dec
cmp
sub
fistl
adc
adc
xor
test
mov
mov
mov
pushf
mov
fs
mov
cmpsl
mov
repnz
sub
fisttpl
jp
shl
jl
adc
lea
jmp
test
into
mov
cwtl
test
movsb
insl
add
and
cmp
outsl
mov
fldl
stos
dec
aam
in
pop
sub
mov
add
or
inc
iretw
cmp
lea
xchg
pop
and
pop
subl
pop
dec
sub
jle
inc
and
insl
xchg
xchg
and
pop
stc
in
ds
push
test
xor
xchg
stc
mov
mov
fnstsw
bound
movsl
push
mov
xchg
inc
ds
cmp
inc
dec
sub
mov
add
ss
cmpsb
dec
addr16
test
popl
xor
stos
mov
iret
pop
sub
pop
mov
xor
xor
adc
mov
out
sbb
out
inc
cmp
repnz
mov
sbb
rolb
jno
test
sub
push
out
cmpsl
std
data16
ficomps
cmp
xchg
cmp
das
lea
mov
ret
jecxz,pn
sbb
push
clc
scas
jb
xchg
sub
push
movsl
mov
jo
fsub
aas
negb
scas
inc
mov
add
mov
lock
imul
push
or
pop
mov
pop
gs
aam
xor
rcr
xchg
cltd
pop
gs
loope
adc
shl
xchg
dec
in
jbe
rcrl
xchg
or
test
and
test
aad
cwtl
test
jno
insl
mov
push
fdivrs
scas
cmp
sbb
sbb
jp
incb
sbbb
aas
pop
in
inc
nopl
sub
adc
jmp
fdivrp
or
mov
dec
add
mov
sub
ret
movsl
sub
sub
std
cmpsb
stos
test
pop
mov
out
pusha
cs
and
aam
insl
test
out
stos
jg
mov
adc
in
lods
mov
jbe
das
xchg
xorl
inc
xchg
out
pop
test
inc
sbb
push
aad
jno
in
adc
mov
mov
mov
xchg
mov
subb
jb
jmp
adc
jle
sbb
sbb
cmpsb
fcoml
cmp
or
pop
xchg
mov
mov
mov
mov
push
lret
testb
lods
mov
imul
and
push
test
js
mov
test
filds
xor
cltd
adc
mov
sbb
outsl
movsb
and
and
test
lcall
nop
ficomps
ret
cwtl
ret
idivb
mov
hlt
cmc
gs
lcall
push
loop
push
mov
xchg
mov
xor
cmp
jg
dec
push
fwait
jl
cmc
out
mov
cmp
push
imull
pop
mov
add
push
sub
mov
test
into
pop
and
cltd
cmpb
out
add
sbb
sti
icebp
mov
push
adc
into
sbb
jne
add
cmp
jns
ja
sub
fdivl
lss
inc
rolb
mov
pop
mov
sub
jnp
loope
add
pop
mov
pop
out
insb
fwait
and
mov
subb
lret
in
cld
gs
es
lds
pop
orl
cmp
fst
push
ja
xchg
cmp
cmp
and
in
leave
in
stos
mov
bnd
cltd
dec
hlt
dec
jl
cwtl
cmp
lretw
pop
stc
adc
push
mov
and
or
rolb
cli
adc
mov
mov
dec
and
dec
out
cmpl
popa
push
shr
ja
jmp
scas
or
dec
mov
test
and
loopne
andb
ficomps
imull
mov
stc
fstps
shl
xchg
xor
loop
movsl
movsl
into
pop
aad
ljmp
out
cmp
aad
or
mov
and
and
jmp
jno
mov
inc
push
sbb
pop
inc
fsubrs
dec
popl
push
dec
mov
cmp
movsl
inc
and
inc
mov
pop
cmp
sub
dec
sbb
dec
sub
fwait
and
ror
sub
jae
fstps
insb
cld
cmp
test
pop
sbb
cmpsl
insl
push
or
or
mov
fistpl
nop
mov
push
mov
inc
sbb
push
xor
mov
pop
movsb
and
int
movsl
ja
call
cwtl
cltd
in
push
jp
xor
cmp
loop
mov
repnz
push
imul
dec
rorb
mov
sub
andb
aam
pop
icebp
pushf
sahf
push
mov
je
and
lcall
jge
into
pop
outsl
cmp
outsl
xor
scas
popf
lcall
inc
scas
sbb
outsl
mov
cmp
mov
push
jmp
mov
jg
imul
in
out
cmp
movsb
ret
movsl
push
fdivrs
sbb
mull
mov
iret
mov
adc
into
sbb
jno
pop
lret
adc
arpl
sub
lcall
in
lahf
repz
icebp
mov
adc
dec
orb
mov
sub
adc
test
dec
mov
dec
inc
pushf
flds
and
ds
bound
jns
or
iret
scas
sbb
icebp
pop
xor
daa
xorl
mov
stos
and
pop
lock
and
call
push
cs
sub
data16
dec
xchg
shll
sbb
insl
pushf
sti
xor
and
insl
xchg
pop
fcompl
mov
push
cmp
sub
ret
bnd
jo
mov
in
pushf
test
mov
push
xor
dec
sub
pop
mov
icebp
sbb
mov
call
dec
nop
cmp
or
push
or
sub
mov
rcrb
or
adc
jmp
cmp
popl
pop
push
nop
xchg
and
test
inc
adc
pop
add
push
idivb
sub
mov
aas
into
jge
jg
movsl
mov
stos
test
pop
loope
xchg
daa
insb
mov
jmp
pushf
or
xchg
aad
and
inc
jne
push
add
in
xchg
add
and
xor
and
xchg
loopne
pop
jg
xchg
movsb
mov
jg
xchg
aas
pop
or
icebp
adc
cmp
fsubrl
push
cmpsb
push
xor
lock
cmp
mov
mov
push
fisttpll
jne
ljmp
lret
mov
or
mov
inc
mov
je
xchg
std
jmp
and
mov
mov
es
adc
adc
fldenv
movsb
mov
sbb
jl
lods
mov
lcall
dec
cwtl
xor
adc
inc
inc
hlt
or
scas
daa
jbe
loopne
mov
test
cmp
push
and
sub
jle
imul
out
push
mov
dec
lret
sub
repz
cmp
adc
pop
cmp
push
push
stos
cmc
in
stos
push
aad
psubsw
cwtl
sbb
xchg
lock
imul
dec
push
add
ret
das
mov
mov
inc
xchg
or
xchg
stos
and
lock
hlt
repz
in
fs
jae
push
lahf
mov
notb
cwtl
pop
stos
dec
mov
out
cs
pop
sub
hlt
lea
xor
stos
push
ret
sub
push
pop
inc
lea
shl
loope
lds
mov
adc
ret
loopne
sbb
push
repz
popa
insl
test
jecxz
dec
enter
test
and
mov
adc
out
arpl
push
and
xchg
mov
shl
dec
jg
fisttpll
xorl
cmc
jbe
or
xchg
xor
cmp
mov
inc
mov
scas
cmc
xor
xor
mov
rcl
inc
icebp
push
pop
sarl
imul
cmp
es
arpl
ljmp
stos
cmp
ja
es
jns
jb
hlt
std
push
inc
nop
insl
mov
inc
push
lock
pop
popf
push
pusha
loopne
cmc
enter
leave
inc
std
jo
cmp
add
xor
aas
mov
cmc
ja
mov
dec
xlat
xchg
prefetchwt1
or
add
adcb
cli
ss
mov
jno
sub
mov
cmp
test
dec
shl
xchg
adc
sub
pop
jmp
nop
lods
std
xor
pushf
fdivl
and
dec
insl
data16
adc
push
add
and
jle
shlb
and
xor
pop
cmc
gs
jne
loopne
mov
xchg
pop
ljmp
js
scas
popf
xchg
dec
or
sbb
xchg
push
adc
pop
rcll
adc
adc
push
inc
fmull
movsl
cmc
sarl
lock
in
loope
jnp
int
pop
push
not
mov
sbb
frstor
clc
int3
xor
mov
cmp
mov
test
jne
fbstp
inc
ja
jge
sub
mov
lcall
fnstsw
push
push
dec
test
inc
mov
push
outsl
scas
dec
jbe
and
jne
arpl
push
push
mov
rorl
mov
xchg
addl
addr16
xor
ficoml
mov
adc
ret
dec
hlt
xchg
icebp
mov
mov
jmp
inc
mov
repz
mov
mov
mov
xor
mov
fsubrs
loope
testb
xor
mov
or
cmp
sub
cmc
xor
mov
adc
push
aas
xchg
das
fimull
add
push
popf
sahf
xor
inc
jle
insl
fldt
sub
or
sub
sahf
add
test
rcl
xor
jb
xchg
popl
adc
lret
rcr
popa
or
lea
repz
lods
mov
xchg
inc
pop
mov
or
xor
hlt
lahf
and
lock
adc
adc
fcomip
adc
mov
adc
sub
or
xchg
sub
movsl
sbb
jle
pop
push
and
mov
scas
lods
dec
mov
sarl
mov
outsb
jb
sbb
push
push
sbb
pushf
add
sbb
mov
imul
jne
inc
mov
sbb
sbb
xor
roll
sub
add
mov
xor
add
ret
std
out
shlb
mov
and
jns
adc
pop
lahf
out
jns
arpl
data16
in
insb
sbb
lods
rorb
push
sub
pop
mov
or
mov
lcall
adc
mov
cmp
sahf
mov
sub
scas
lea
inc
fldl
filds
xchg
les
sub
pop
test
mov
mov
daa
cltd
or
mov
jbe
push
mov
fptan
test
or
mov
mov
adc
jnp
and
popf
iret
xchg
test
mov
mov
iret
shrb
sub
mov
jno
xchg
stc
pop
dec
fs
xor
stc
insb
es
sub
mov
jns
adc
mov
add
lds
mov
mov
mov
leave
les
sbb
push
xor
js
sbb
push
pop
dec
push
enter
js
out
inc
jnp
mov
out
outsb
push
aas
loopne
data16
sub
jae
mov
cltd
sub
mov
dec
push
sub
dec
pushf
loop
rcrl
jg
inc
ret
shl
xchg
pop
ss
fnstsw
std
loope
cli
das
mov
loope
push
mov
inc
hlt
test
or
sub
clc
xlat
sub
push
cmpb
out
call
out
jns
xchg
in
enter
adc
lods
je
test
loope
push
mov
nop
fldl
incb
dec
jge
cmp
xchg
dec
mov
xor
adc
push
dec
jno
pop
dec
fs
and
loop
push
in
dec
testb
xor
lock
and
xor
mov
cmpsl
add
pop
inc
pop
notl
enter
push
sub
mov
xchg
sahf
fisubs
mov
sbb
and
pop
push
fadds
push
ja
push
mov
in
cmp
mov
push
lock
xor
add
cmp
in
sbb
mov
xchg
or
pop
dec
dec
dec
lods
add
mov
mov
adc
xor
in
mov
pop
aam
xchg
sbb
pusha
icebp
xor
jl
xor
pop
push
cli
aam
and
inc
inc
jb
pop
lahf
test
jp
xor
push
xor
and
mov
scas
xchg
js
test
add
std
test
das
pop
ret
sbb
sbb
mov
stc
add
adc
push
xchg
push
int3
or
xchg
xchg
or
and
je
sub
xor
adc
add
or
mov
xchg
pushf
repz
das
lock
mov
jecxz
addr16
mov
mov
pusha
jg
mov
data16
andb
push
dec
xchg
fistl
imulb
and
int3
cs
rcl
adc
mov
lret
out
push
fldt
pushf
hlt
and
xchg
iret
push
sbbb
jmp
and
inc
jecxz
sub
out
imul
sub
mov
push
mov
rorb
sti
fsqrt
jns
aad
jbe
fwait
push
add
add
andb
jge
out
sahf
mov
xchg
rcll
hlt
imul
nop
xor
pop
imul
ljmp
xor
test
imul
movsl
notb
loope
push
loopne
icebp
sub
js
mov
cmpsl
cs
psrlw
inc
cs
out
movl
lds
popa
in
push
aad
mov
mov
in
cmp
dec
fstl
mov
popa
or
inc
sbb
sub
pop
pop
and
sahf
es
flds
cltd
imul
mov
pop
jae
xchg
push
jmp
outsb
and
push
xchg
test
les
inc
jnp
or
pop
and
mov
xor
incl
mov
call
jnp
sbb
bound
mov
sub
push
xlat
test
enter
stos
cmp
jae
cltd
add
mov
sub
popa
cmp
movb
shl
ret
ljmp
popa
dec
inc
sahf
mov
xor
ret
out
test
adc
sub
loop
pop
idivl
xchg
out
mov
mov
mov
rdpmc
in
cmp
shll
mov
pop
in
lods
push
jmp
fbld
rcrl
mov
xor
xchg
in
mov
add
sub
syscall
cli
push
loopne
mov
mov
pop
adc
mov
mov
in
xchg
or
das
xor
andb
incb
push
fnstsw
lret
mov
sbb
jmp
xlat
pop
mov
cwtl
xor
insl
mov
rorl
pushf
mov
push
out
xchg
mov
in
in
push
xor
pop
sub
mov
xorb
repz
and
push
sbb
xchg
out
jl,pt
push
std
xchg
test
and
fnstenv
or
push
adc
or
and
xor
mov
mov
mov
mov
cmp
or
push
dec
jl
mov
pop
push
ljmp
lds
inc
sbb
sub
andl
jg
push
push
loopne
push
lock
push
repnz
scas
mov
add
mov
nop
cltd
lret
sahf
xchg
or
insl
cmp
in
or
clc
or
test
lods
inc
sub
sub
fcoms
jno
push
jmp
xchg
iret
xchg
ret
xlat
mov
xchg
scas
decb
int3
mov
push
jle
rcll
mov
test
pop
addl
fisubrs
mov
sbb
mov
sahf
push
orl
mov
push
imul
imul
insb
fdivrp
sahf
ljmp
loopne
popa
sub
pop
jl
or
xor
enter
adc
sub
mov
das
stos
xlat
sbb
push
insb
movsl
adc
lret
push
xorl
and
jmp
sbb
and
push
test
pop
lret
or
sbb
nop
pushf
test
jmp
inc
mov
je
and
mov
or
test
jmp
sbb
imul
into
das
or
sub
cmpb
out
add
add
cmpsb
mov
and
pushf
in
jg
pop
push
imul
popa
fsubrl
orb
cwtl
cmc
outsl
fildll
add
pop
imul
aas
inc
fnstenv
stc
aas
sbb
mov
cwtl
pop
popa
in
loop
pop
aas
cld
hlt
jbe
js
loopne
in
push
jo
stos
icebp
jp
push
fdivr
int
mov
lock
dec
jmp
lods
mov
dec
inc
clc
movsl
stos
popf
imul
int3
jl
enter
add
xchg
xor
add
cmp
or
xchg
sar
addr16
cmc
add
and
lods
lret
mov
mov
push
xlat
sub
xor
into
dec
mov
out
sbb
mov
xor
mov
inc
mov
pop
test
sti
mov
push
and
scas
xor
adc
loop
xor
aaa
jb
jnp
scas
mov
ss
inc
fs
shl
cwtl
dec
mov
or
inc
xlat
in
jne
xchg
adc
test
xor
lret
push
fcomps
pop
mov
adc
inc
pop
out
push
cmp
enter
icebp
ja
xlat
mov
movl
sub
jl
xchg
lcall
stc
cld
imul
aaa
fldenv
negl
dec
lods
nop
push
ljmp
outsl
test
xchg
mov
sarb
notrack
sub
outsb
in
push
loopne
out
add
dec
adc
xchg
mov
aas
mov
mov
xor
scas
ret
cmovle
add
xchg
int3
lahf
mov
mov
dec
adcb
pop
stc
outsl
arpl
jp
xchg
xchg
jae,pt
in
cmp
ljmp
test
push
cmp
das
add
push
sbb
mov
mov
mov
mov
mov
lea
sub
test
sub
mov
mov
clc
push
xchg
scas
cld
xchg
cli
push
inc
xor
add
pop
push
cmpsl
loopne
dec
out
mov
outsl
mov
in
adc
push
pop
cmp
adc
xchg
push
add
aam
dec
xchg
mov
lahf
jl,pn
or
push
pop
xor
call
add
push
cmp
or
enter
cmp
sbb
lret
loopne
stos
lods
jl
outsl
sbb
inc
std
inc
mov
pop
das
jmp
mov
pop
mov
cmpb
ss
sbb
sub
push
stos
mov
xchg
test
lods
xor
pop
clc
test
bound
fcomps
fbstp
jl
ljmp
sbb
mov
push
or
lret
xlat
out
dec
cmp
sbb
pop
mov
fucomi
dec
out
dec
scas
cmpsb
loope
push
jmp
arpl
pop
sti
add
mov
mov
xchg
out
das
jg
mov
lahf
pop
sti
sub
fists
cmc
mov
insb
fisttpll
pop
inc
ret
add
inc
shll
out
sbb
test
aaa
iret
jl
mov
lods
into
mov
mov
sti
repnz
test
mov
das
cmp
subl
sub
inc
add
inc
and
mov
popf
jno
inc
mov
cmpsb
cld
mov
popf
cmc
sbb
testl
jmp
mov
pop
sbbl
pop
cmpsl
icebp
jge
sar
mov
jl
loopne
add
sbb
xor
es
dec
xor
mov
dec
bswap
push
xchg
dec
and
and
and
dec
scas
adc
inc
push
xor
or
cmp
xor
pop
pop
mov
std
gs
or
jae
and
pop
js
pop
testl
pop
or
and
fcoms
adc
repz
xor
pop
aaa
shlb
lods
lcall
pop
fildll
inc
jmp
iret
mov
inc
fidivs
pop
dec
testb
out
popf
scas
sub
jno
xor
dec
or
mov
pushf
mov
aam
add
dec
or
leave
dec
adc
push
mov
jbe
daa
js
pop
aaa
xchg
or
jns
mov
adc
mov
fimull
jge
adc
mov
and
mov
push
dec
inc
pushf
popa
leave
mov
pop
leave
mov
pop
mov
push
loopne
aaa
mov
or
and
fldt
ljmp
sbb
aam
lret
mov
mov
adc
jno
or
jns
fadds
sbb
stos
popa
jg
add
sbb
aas
xchg
cmp
test
loop
sub
fwait
ja
adc
mov
inc
lcall
mov
xchg
int3
mov
scas
std
lods
ret
mov
stos
sub
stc
pop
pop
sbb
dec
mov
mov
scas
icebp
push
xchg
repnz
xor
addr16
movsl
push
fidivrs
fcmove
or
sbb
movsb
xor
fwait
push
push
mov
and
mov
lods
insl
fsts
pusha
inc
add
out
dec
jbe
pop
pop
lahf
pop
mov
les
xor
sbbl
jbe
nop
les
out
add
mov
cwtl
gs
jmp
pop
shl
and
push
xchg
or
adc
pop
clc
int
sbb
sti
adc
mov
dec
mov
add
or
inc
pop
pop
pop
mov
adc
push
ret
cmp
movsb
loopne
add
in
fldenv
pop
and
imul
mov
xchg
test
push
insl
pop
cli
dec
js
jnp
int3
pushf
aad
and
sbb
pop
adc
xchg
es
mov
jnp
es
push
inc
adc
sbb
add
push
xor
push
pop
or
aaa
mov
aaa
fwait
adc
cmpsb
push
ljmp
addl
adc
cltd
jp
scas
addb
bound
add
push
lock
and
std
and
add
and
pushf
pop
inc
lcall
push
in
adc
sub
push
dec
pop
add
stos
mov
mov
cmp
jge
movsl
scas
pop
mov
lahf
xchg
and
and
cld
cmp
jecxz
mov
mov
jecxz
inc
xchg
jo
clc
pop
add
mov
jmp
fstpl
or
or
sbb
cli
es
mov
jmp
popa
inc
out
adc
aad
dec
lret
scas
jbe
jmp
addl
in
jnp
arpl
push
mov
mov
test
inc
add
stos
shlb
std
es
xor
mov
ja
add
imul
push
shll
andb
sti
adc
mov
mov
sarl
cwtl
add
lahf
arpl
popa
add
inc
pop
repz
and
push
scas
mov
mov
add
cld
notb
js
jge
sti
es
mov
adc
mov
dec
addr16
pop
mov
ret
mov
adc
stos
aas
push
aad
dec
int3
or
push
and
and
jae
pop
add
jb
inc
push
cpuid
repz
std
push
test
jge
repnz
inc
xchg
push
pop
ret
das
cmc
lahf
mov
out
lcall
sub
xor
test
stos
inc
mov
shll
fs
mov
daa
xchg
cmp
cmp
clc
test
sahf
popa
fsubrs
add
push
bound
mov
sub
shrb
icebp
mov
jb
xchg
sub
dec
mov
add
fnstsw
xor
xchg
movsb
sub
pop
xchg
jne
insl
mov
pop
dec
xor
sbb
lahf
sbbl
cmp
xchg
mov
test
dec
inc
xor
popa
popf
lcall
pop
and
push
jno
and
xchg
sarb
icebp
or
sbb
sub
call
push
inc
imul
xchg
out
stc
adc
cmpsb
xor
ljmp
sarl
mov
mov
xchg
xor
repnz
fnstsw
sub
mov
pop
jo
mov
xchg
pop
jne
call
pop
push
cmpsl
aad
or
jle
mov
aam
or
jae
xchg
in
push
insl
mov
outsb
in
cltd
out
add
pop
dec
sbb
pop
pushf
or
cli
adc
out
out
testb
mov
jle
les
mov
aaa
fisubrl
and
inc
xchg
bound
je
sbb
jg
pop
xchg
repz
jg
daa
jl
in
nop
cmp
xor
movsb
movsl
jg
out
or
rcrl
sbb
out
notb
scas
popa
mov
fldcw
out
fs
movsb
dec
jmp
std
movsl
gs
fadds
loopne
ss
mov
sbbb
push
dec
jecxz
data16
cwtl
jns
pop
enter
xchg
push
fnstsw
xor
adc
jnp
pusha
in
sub
xor
imul
inc
xor
fsubl
in
jg
mov
outsl
stos
mov
lods
sbb
push
add
sbb
outsl
test
or
gs
sarb
stos
xor
dec
ret
inc
sbb
scas
roll
ja
xor
inc
xor
push
ja
pop
and
pop
shl
ljmp
aad
dec
xor
inc
and
mov
xor
jmp
cld
and
sbb
in
mov
and
mov
pop
push
and
mov
sub
xor
cmp
movnti
insb
inc
xchg
call
inc
dec
roll
sbb
xchg
ficompl
mov
cld
push
stos
stc
add
ds
notb
xchg
leave
hlt
lahf
inc
pop
aad
jb
cmc
add
in
loope
pop
jnp,pn
fsubr
cmp
jnp
sarb
cwtl
out
add
push
push
nop
push
arpl
pop
ds
lahf
push
out
add
lea
push
into
jmp
xchg
and
loope
lods
rorb
test
mov
push
test
enter
add
cmp
clc
jb
pop
in
gs
iret
sub
add
dec
pop
cltd
bound
and
jle
stos
stos
call
into
jbe
or
pop
xor
inc
inc
add
and
push
adc
add
mov
in
xor
nop
imul
fadds
je
fldenv
mov
sbb
hlt
cmpsl
jmp
or
loopne
pop
xor
inc
std
leave
fcmovne
popa
aas
adc
push
xorl
and
mov
mulb
enter
shr
jge
cmc
pop
mov
fnsave
cmpsb
in
mov
ljmp
fdivrs
or
dec
add
jbe
fwait
shll
fsub
outsl
jle
in
pop
out
dec
push
shlb
adc
mov
or
ret
pusha
dec
mov
in
cmp
sbb
xor
out
cmpsl
ret
sbb
pop
fnsave
jecxz
call
push
cmpsb
stos
cmp
arpl
mov
cld
mov
sbb
mov
dec
test
jl
dec
jne
fnstsw
shll
enter
fmuls
sbb
in
push
pop
pop
cwtl
icebp
es
xor
mov
jbe
rol
popa
shll
jnp
push
leave
imul
pop
iret
icebp
fwait
or
inc
and
outsb
or
sar
xor
mov
fcomi
or
push
rcr
movsb
cmp
cmc
push
pop
sbb
xchg
sti
sti
add
jo
lock
jns
jae
jnp
jmp
jl
cmp
add
push
mov
repz
inc
jge
pop
sub
jnp
inc
imul
jl
sbb
mov
dec
rorl
xor
mov
aas
inc
andb
es
pop
and
cmc
and
inc
dec
push
push
addr16
stos
in
jg
sti
nopl
xor
dec
add
arpl
cmc
testb
cwtl
movsb
fsub
push
pop
pop
lock
xchg
out
ret
xchg
cld
clc
xchg
push
add
es
adc
sbb
rcr
and
ss
pop
sub
adc
ficoml
jge
or
jp
out
in
cld
adc
gs
mov
rcrl
rclb
sbb
js
cltd
mov
or
jae
je
cmp
addb
jo
loope
cmc
cmp
lea
pop
mov
imul
leave
inc
test
in
movsb
shll
or
mov
push
cli
dec
addr16
pop
out
jmp
and
or
loope
cmc
push
fcmove
push
fimuls
decb
sub
jo
pop
test
xchg
jb
dec
mov
lds
and
outsb
test
in
sbb
int3
inc
cmp
dec
xchg
scas
iret
xor
js
pushl
xlat
mov
stc
sarl
aas
popf
cld
in
mov
outsl
mov
int
pop
xchg
sub
sbb
jae
insb
push
cwtl
inc
fdivr
dec
xor
mov
stc
add
fmuls
les
fistl
jp
cmovbe
mov
or
sti
dec
jp
sti
pop
aad
fnstcw
in
fstpl
adc
andl
jb
mov
dec
in
pop
int3
pop
pushf
or
fldcw
push
mov
or
jmp
sbb
cmp
jmp
cmp
popf
cmpsl
cld
das
pop
mov
cltd
std
or
sbb
rep
in
sub
cmpsb
bound
movsb
mov
out
je
pop
or
cmpsb
cmp
ret
lea
out
or
adc
xlat
lods
or
xchg
and
mov
sub
sbb
xor
add
fdivl
popa
mov
pushf
aam
dec
cmc
or
rolb
cli
xchg
pop
scas
mov
adcb
adc
mov
gs
lock
test
mov
call
mov
mov
shl
sbb
pop
repnz
mov
xor
sbb
jns
jne
mov
fsts
sbb
sbb
adc
push
and
sbb
mov
ljmp
sbb
dec
in
in
xchg
sub
shl
dec
inc
sub
int3
push
inc
loope
xchg
mov
leave
lret
mov
ficompl
lahf
sbb
loop
out
pop
cmp
fisubl
mov
int
test
cltd
or
mov
enter
cmp
imul
sub
scas
lret
mov
in
xor
inc
xchg
jne
outsb
sbb
stos
pop
cmp
and
sbb
pop
dec
pop
cmc
into
movzbl
mov
in
dec
jo
add
std
data16
mov
add
paddsw
sbb
fwait
movsl
int
jns
test
or
popa
jbe
dec
imul
pushl
xor
out
xchg
dec
dec
xchg
ja
repz
and
and
je
test
jns
mov
or
mov
push
popa
je
cmp
dec
jo
dec
add
mov
in
addl
movups
dec
dec
inc
mov
scas
and
push
ficomps
out
pop
jl
lods
out
popa
xor
fistl
pop
xchg
test
jo
imul
mov
arpl
push
mov
outsl
pop
adc
push
inc
ss
lods
inc
push
add
iret
sub
inc
popa
add
fbld
jns
push
jle
pushf
fimull
sbb
cli
inc
or
mov
test
adc
and
mov
sub
mov
jno
inc
jno
js
pop
nop
call
push
jne
push
ficompl
sbbl
int
pop
aam
ljmp
mov
or
xchg
mov
sbb
movsl
mov
mov
mov
xorb
clc
cmp
test
or
mov
xchg
adc
xchg
fimuls
sbbl
push
pop
push
mov
inc
outsl
fdivl
test
out
add
jae,pn
inc
aad
sbb
and
mov
out
nop
imul
iret
adcb
add
jbe
cmp
pusha
xchg
addr16
loop
and
mov
scas
jecxz
int
iret
and
fistl
dec
rclb
jb
inc
orl
pusha
lret
xor
dec
inc
out
mov
loop
cltd
in
cmp
stos
or
pop
cmpsl
subb
adcb
sub
lods
into
jge
lahf
push
jp
aam
aas
jl
call
mov
pop
or
rcr
repz
adc
lea
clc
call
push
cwtl
and
aad
stc
fisubs
add
push
aas
lock
enter
or
lea
inc
loopne
arpl
sub
jo
andb
test
nop
inc
gs
stc
or
pop
ljmp
sbb
movsb
arpl
cmpsl
enter
dec
and
lahf
ja
dec
mov
and
lret
add
lcall
outsl
loop
push
scas
rcr
jl
scas
pop
inc
loop
lods
insl
sahf
imul
inc
lds
stos
enter
sub
jbe
rclb
pushf
lret
int
gs
push
addb
pop
mov
or
cli
add
and
push
out
imul
jns
xchg
cmpsb
dec
aaa
inc
mulps
mov
dec
pop
sahf
sbb
out
inc
jne
mov
sub
or
inc
imul
mov
sbb
xorb
pop
mov
or
shl
loopne
les
jl
jb
add
pop
daa
lcall
gs
cmp
xor
loop
xlat
aam
xor
cmp
icebp
sub
hlt
jno
in
mov
push
mov
cmc
sar
mov
sbb
add
mov
or
sub
add
loopne
jbe
shrb
mov
xchg
xchg
not
mov
push
pusha
loop
nop
sar
out
xor
push
nop
ret
pop
lods
iret
pop
push
fs
adc
movsl
insl
xor
fdivrp
cmp
lea
ss
bound
stos
insl
daa
out
pop
repz
jns,pt
xchg
cmp
test
mov
fdiv
sbb
roll
rorl
jne
add
inc
push
mov
lcall
lock
inc
daa
arpl
stc
movsl
lea
divl
cmp
mov
pusha
dec
addr16
imul
mov
sbb
cmp
xor
jp
mov
aam
clc
dec
shrl
mov
je
jbe
dec
and
ret
jne
les
daa
mov
mov
in
cmp
rcrb
xchg
repz
stc
pop
frstor
andb
pop
hlt
pop
pop
sbb
cld
xchg
movsb
pop
shlb
js
adc
pop
jae
ret
out
jl
push
mov
test
and
inc
inc
das
push
xchg
imul
or
outsl
jb
addr16
out
jmp
or
movsb
xchg
ljmp
or
icebp
std
xchg
pop
add
in
mov
repz
jb
push
outsl
mov
cld
outsb
enter
imul
dec
sbbl
arpl
sub
xorb
xchg
std
or
lods
mov
push
icebp
sbb
push
mov
inc
nop
gs
cmp
fidivs
xchg
push
aaa
pop
jp
sahf
aad
mov
addb
imul
push
or
mov
push
addr16
mov
enter
xorb
fcoms
div
jge
xchg
out
fldt
jge
outsl
or
fldenv
lods
and
pushl
in
out
xor
push
xor
cmp
rcrl
xchg
mov
loop
mov
fwait
jns
sub
sbbb
test
bound
adc
mov
popf
enter
in
inc
aad
fsubr
lods
sub
mov
push
shrd
cmpsl
xor
lds
dec
loopne
rorb
sbb
jge
sub
push
cltd
adc
mov
xlat
inc
xchg
add
push
add
adc
movsl
iret
sub
inc
jae
cmp
addr16
sbb
aaa
add
icebp
and
push
sbb
loope
movsl
negl
lds
adc
in
dec
dec
adc
sarl
dec
out
jecxz
inc
pop
iret
je
inc
adc
dec
in
aad
ret
aam
sbb
sbb
and
sbb
inc
lahf
cwtl
push
inc
xchg
leave
inc
insl
dec
es
cmp
push
pop
and
js
push
notl
cmp
fldenv
sub
subl
push
cli
and
pop
mov
cmp
jl
mov
sbb
testl
push
paddusw
sbb
mov
dec
mov
and
pop
shrb
aad
out
xchg
outsl
mov
add
test
sti
mov
out
sbb
jecxz
cli
cmc
fstpt
pop
sbb
jbe
lds
inc
scas
imul
push
orl
dec
pop
mov
jnp
push
xor
mov
dec
jecxz
adc
mov
pop
mov
int3
mov
in
mov
js
push
dec
or
bound
or
dec
clc
cld
iret
xchg
xchg
loopne
icebp
xchg
lods
add
ljmp
xchg
std
pop
and
jl
int3
mov
pop
add
int
inc
sbb
test
add
xchg
mov
shll
das
adcl
in
mov
mov
out
shll
inc
xor
fs
cmp
push
sub
xchg
lcall
scas
jge
gs
dec
sub
mov
jmp
mov
sub
dec
dec
sub
push
lret
pop
dec
xchg
aam
push
or
aas
mov
jo
sti
scas
mov
or
push
test
jg
rcr
popa
rcr
sub
push
xchg
lahf
sahf
loopne
add
cmp
add
xchg
cmc
test
add
pop
jp
cmp
sbb
or
int
mov
cmp
aad
push
xor
add
jl
xor
pop
sub
fwait
sub
xchg
cmp
xor
jae
cs
pop
push
sti
in
lods
add
test
imul
jmp
sbb
ds
testl
or
out
mov
outsw
jecxz
lahf
int
cmp
mov
or
aam
inc
and
jne
dec
cmpsb
xchg
ljmp
int3
sbb
into
xchg
sbb
pop
sarl
xchg
mov
lods
cmp
sbb
out
cld
jne
lea
xchg
incb
jmp
test
loope
and
sbb
or
add
aad
ret
inc
fcomp
ja
sub
ret
std
loop
or
sbb
insb
aaa
dec
push
sbb
icebp
mov
and
fmuls
push
iret
mov
and
add
je
push
out
add
dec
xor
mov
pop
cmpsl
imul
xor
test
in
push
sbb
loop
inc
incl
add
dec
inc
popa
sub
jae
pop
div
xchg
incl
pop
xor
xor
mull
loop
xchg
xchg
iret
cli
mov
and
or
jns
sar
cmp
ljmp
adc
in
in
or
inc
fdivs
loop
cmp
pop
xor
inc
mov
paddsb
es
je
je
adc
sti
push
and
shrb
push
aaa
jl,pt
aad
xchg
in
cld
outsl
pushf
adc
cmp
inc
subl
cmp
or
in
popf
sub
and
adc
pop
xor
incl
in
cmp
mov
jo
push
int
gs
mov
ljmp
iret
sbb
addr16
push
js
in
jle
jbe
popa
or
dec
repz
pusha
cmp
xorb
mov
fcmovb
int
pop
xchg
ja
int3
push
mov
mov
jmp
in
pop
gs
ljmp
or
ret
pushf
in
or
cwtl
std
dec
lret
mov
out
mov
aaa
push
dec
jno
add
ret
push
popf
int3
add
mov
add
aaa
push
and
sub
adc
cmp
jo
or
fiadds
mov
push
push
mov
mov
lahf
cwtl
lea
test
or
or
jae
aas
in
inc
sbb
adc
lods
mov
lods
clc
fs
cli
stos
dec
ljmp
aam
bswap
cmc
pop
inc
mov
or
inc
cmpsb
mov
daa
xchg
nop
dec
jle
dec
inc
mov
dec
fistps
ljmp
pop
leave
js
mov
inc
sti
xchg
popa
sub
out
push
mov
test
ret
lds
fimull
mov
js
mov
pushf
cld
rcll
daa
stos
in
mov
xchg
xchg
dec
notb
or
outsl
inc
xchg
sti
popa
or
or
test
adcl
mov
fsubs
fadds
xor
out
fs
cmp
adc
div
sbb
test
pop
jo
pop
add
mov
ret
xor
cmp
xor
out
jbe
insb
int
sbb
call
ja
loopne
loopne
dec
aam
mov
inc
and
mov
or
outsb
fs
das
xchg
outsb
insb
jns
cmpsb
shr
sub
movsb
les
cmp
inc
mov
jmp
dec
fwait
push
jne
dec
mov
imul
test
jnp
cmp
xor
inc
imul
ss
fimull
push
call
add
or
xchg
inc
sub
push
cltd
push
shl
sub
inc
data16
pop
dec
inc
xchg
leave
in
or
or
xor
gs
idiv
shld
and
inc
sub
pop
test
inc
icebp
inc
je
dec
inc
nop
jg
mul
mov
lods
push
insl
dec
movsb
pop
fiadds
jb
cli
stos
push
pop
lahf
push
xchg
inc
scas
and
or
sbb
add
mov
and
ja
nop
jp
pop
movsl
hlt
scas
iret
mov
inc
in
leave
das
and
mov
cmp
dec
sub
and
fdivp
pushf
ret
pop
cmp
cmp
and
sub
adc
pop
mov
pop
vpackuswb
out
jp
xchg
mov
lods
out
push
loop
mov
jnp
stos
cmp
mov
jbe
lods
jg
ret
std
in
nop
repnz
mov
xchg
iret
jl
lret
idiv
mov
and
push
adc
rcrb
movsl
fidivrl
mov
mov
movsl
pusha
imul
enter
cmp
stc
int3
xchg
push
sbb
jmp
sbb
bound
outsl
rclb
lret
jnp
pop
inc
dec
jg
loop
adc
mov
in
sahf
orb
cmpsl
jns
or
outsl
adc
pop
cmp
mov
cmp
movntq
out
mov
aam
jg
int
aaa
mov
sub
arpl
jecxz
test
xor
xor
dec
mov
mov
sahf
sarb
pushf
cmp
into
jnp
cmpsb
push
lahf
imul
das
xchg
xchg
mov
pop
inc
icebp
jecxz
ss
dec
push
jg
rol
enter
in
and
dec
jb
push
push
jge
xchg
nop
andb
xor
insl
cs
aam
xor
cwtl
inc
mov
into
pop
rorb
add
nop
out
mov
add
mov
pusha
mov
pop
out
sbb
sub
or
push
and
das
fsubr
dec
repz
inc
stos
mov
jmp
pop
in
mov
test
sub
and
add
inc
jge
stc
repz
ss
lret
mov
mov
cmp
mov
and
mov
lods
insb
or
add
or
lock
push
std
jae
in
mov
fadds
sbb
cmpsl
push
xchg
imul
out
gs
or
fwait
es
icebp
mov
aaa
or
outsb
popa
pop
lcall
inc
jno
pop
xchg
pop
push
mov
dec
imul
adc
aam
mov
jle
jge
fsubrl
icebp
cltd
sbb
xlat
lock
push
ss
push
pusha
sbbb
ljmp
or
imul
dec
xor
xchg
clc
movsl
adc
jl
pop
mov
adc
and
add
inc
jl
dec
aaa
popf
push
dec
shll
mov
jbe
jb
jbe
xchg
movb
and
push
add
pop
out
sub
xchg
scas
push
outsb
mov
stc
xor
mov
mov
arpl
out
mov
add
jge
cmp
sub
out
push
popa
jns
js
push
std
insl
cmp
push
push
sbb
sbb
pop
xlat
pushf
jns
and
add
pop
push
add
lods
loope
sti
inc
loope
jle
and
or
mov
stos
adc
movsb
mov
in
shl
into
ljmp
cltd
mov
dec
loopne
das
sub
shrl
lods
jnp
dec
mov
pop
add
insl
test
test
popf
int3
push
lock
sahf
mov
mov
outsb
lods
push
aas
and
push
lods
test
xchg
out
lcall
subl
lock
push
or
fs
xor
mov
and
adc
add
in
lock
sbb
lahf
pop
cmc
mov
jae
lret
scas
sub
pop
js
pop
and
leave
inc
ds
mov
mov
pop
js
sub
push
jnp
pop
push
stos
jg
test
outsl
movsb
cmc
adc
lock
push
jl
cmp
cmp
sbb
stos
mov
outsl
jl
je
cmp
push
mov
xlat
mov
xchg
nop
push
pop
jo
xorl
es
fsub
dec
add
or
test
dec
popf
mov
adc
mov
adc
sbb
sbb
int
testl
aad
out
shlb
fld
clc
jl
movsl
xchg
int
adc
cmc
clc
test
or
jg
in
icebp
mov
into
js
pop
lods
mov
xchg
jp
in
add
inc
or
mov
addr16
dec
cmp
scas
add
or
fwait
mov
fimuls
sub
xchg
lock
xchg
jle
frstor
cld
popf
fs
shlb
ficomps
fs
inc
cmp
and
inc
lds
scas
addr16
out
popf
inc
push
rorb
sti
jo
fadd
ljmp
popa
cmp
xchg
lcall
jo
pushl
jo
jecxz
inc
lods
test
sbb
test
xor
xor
sbbb
cwtl
test
aaa
loop
out
leave
ja
xor
test
mulb
cltd
adc
mov
aas
xchg
mov
in
add
ret
out
mov
adcb
jno
jp
outsl
mov
test
lahf
mov
add
loopne
scas
sti
rcrl
xlat
out
xchg
in
add
push
in
in
pop
movsl
movsb
lret
jge
int
rorb
dec
push
cmp
push
cmp
test
clc
fidivrl
jmp
je
adc
push
mov
fstl
shl
mov
push
jo
push
outsb
pop
fucomi
scas
mov
xlat
stos
mov
mov
mov
lret
jmp
adc
pop
fisttps
fnstcw
xchg
jne
xchg
fildll
mov
daa
push
xor
ret
push
cs
jmp
xchg
outsb
lcall
cmpsl
in
jns
fsub
ret
cmpl
fcomi
les
push
std
cmpsl
hlt
pushf
xchg
pop
loop
or
out
jns
mov
pop
insl
test
outsb
pop
push
imulb
xchg
sub
in
pop
or
repnz
aas
clc
mov
mov
xor
add
push
iret
xchg
icebp
jg
adc
adc
std
pop
outsb
cmp
inc
notb
pop
int3
roll
or
outsl
inc
or
fisubl
test
fstpl
jb
ret
pop
rolb
mov
mov
jmp
test
pop
in
mov
int3
push
adcl
sti
inc
imul
cmpsb
dec
xlat
push
les
pop
mov
out
std
ja
lods
lahf
adc
je
dec
adc
pop
inc
icebp
xchg
sbb
dec
inc
fistpl
inc
sub
add
stc
dec
add
cmp
les
ficoml
cltd
xchg
pop
pop
or
and
xor
pop
testl
sahf
ret
scas
jp
pop
mov
xchg
pop
xchg
add
out
push
sti
in
mov
push
xchg
in
add
rep
or
or
in
popa
sbb
ss
rcr
jecxz
push
inc
stos
mov
lcall
sub
outsl
rol
adcb
outsl
push
cmp
scas
adc
add
add
in
imul
push
mov
stos
jo
cmp
and
jecxz
xlat
hlt
pop
pop
ss
dec
dec
jle
das
cmp
aaa
fwait
add
pushf
mov
shl
mov
cmp
outsl
mov
sbb
and
sub
sahf
fcomi
loopne
mov
pop
dec
push
pop
pop
loopne
jno
adc
dec
scas
adc
sub
test
rcrb
dec
call
jle
std
loopne
arpl
lods
adc
lods
inc
aas
cmpsl
addb
xor
sbb
inc
cmp
pop
scas
push
xor
sahf
inc
lret
and
adc
shlb
lock
push
stos
mov
inc
adc
pushf
push
mov
mov
ss
mov
push
pop
push
jne
dec
dec
ja
fidivl
cmp
cmp
cmp
mov
pop
ja
bound
call
les
inc
pop
aas
mov
ror
in
and
mov
or
lcall
xor
push
stc
cld
inc
and
mov
push
mov
add
mov
inc
cli
cli
ljmp
inc
jns
pop
xchg
cmc
sub
and
jne
out
pop
js
adcl
popa
insl
into
roll
sub
cmp
mov
mov
push
popf
sub
add
mov
das
outsb
mov
adc
sbb
ja
insb
xchg
or
cli
push
jge
mov
bound
and
xorl
mov
leave
pop
jae
jl
or
jecxz
lret
fsubrp
xor
inc
xor
mov
daa
loop
cmpsl
cmp
jno
mov
mov
cmp
xchg
fidivrs
test
sbb
jbe
push
push
pop
push
ja
fdiv
inc
add
xlat
inc
dec
adc
adc
inc
sarl
and
add
xchg
sub
bound
dec
jle
jl
cmpsl
cmp
xorl
push
push
xchg
jle
lds
insl
shl
mov
dec
scas
xor
fisttps
fs
cmp
gs
jbe
mov
and
in
out
inc
mov
out
js
ljmp
addr16
adc
aaa
test
mov
fmuls
call
in
fdivl
mov
or
xchg
jbe
popf
jecxz
cmp
gs
xor
les
push
cmp
add
ret
test
shrb
bound
lcall
movsb
insl
cli
loop
push
jbe
xchg
mov
push
sub
cmp
and
xchg
pop
xor
dec
adc
movsb
loopne
adc
lods
pushf
gs
outsb
loopne
dec
fcomps
add
gs
bound
inc
jns
arpl
pop
shrl
sbb
jne
inc
movsb
xchg
jb
cmpsl
dec
mov
mov
jecxz
push
sub
cmp
sub
and
in
mov
adc
inc
test
push
jmp
and
cmc
inc
jne
cmp
out
add
lods
clc
aam
mov
jno
push
es
jnp
mov
add
push
inc
cli
lds
js
xchg
mov
jo
push
push
add
dec
xchg
in
divb
les
call
push
imul
fwait
push
call
jmp
sbb
fwait
lods
pop
mov
subl
je
fs
xor
adc
int
mov
lods
xor
jb
ja
repz
cmp
mov
or
lea
xchg
mov
iret
fsubr
or
push
mov
jae
mov
adc
adcb
test
int
pop
movsb
mov
and
mov
ret
push
push
mov
jp
test
les
test
cmp
into
pop
mov
dec
mov
iret
push
pusha
add
xchg
mov
mov
sbb
aas
pop
cmp
dec
mov
or
sbb
sub
ja
testl
mov
or
outsb
jo
dec
cmpsl
mov
aad
or
xchg
and
leave
inc
sub
mov
xchg
or
jmp
cmc
dec
dec
gs
xchg
xchg
movsb
inc
xor
lcall
push
in
pop
pop
insl
push
or
xchg
cmpsl
mov
aam
test
outsl
gs
ds
mov
pop
aad
and
ss
adc
pop
mov
js
sbb
loope
jnp
jno
andb
mov
cmp
scas
xchg
cmp
inc
inc
out
sub
arpl
pop
lahf
fdivrl
aad
fildl
adc
es
mov
jecxz
mov
ret
push
sub
xor
mov
decb
mov
dec
cwtl
stc
pusha
mov
xchg
lret
gs
adcl
sbb
ja
les
call
pop
sub
rcll
imull
subl
jns
call
nop
lods
sub
into
or
or
lods
movsl
ss
pop
add
outsb
into
daa
addr16
cmp
mov
and
outsl
adc
adc
mov
add
push
jne
cmp
fdivs
sbb
xor
xor
sub
mov
push
repz
dec
cmp
jp
call
pop
pop
daa
mov
jnp
mov
js
mov
dec
mov
test
mov
push
pop
inc
xor
decl
cmpl
jle
gs
imul
fisubs
xchg
xchg
js
clc
add
enter
fidivrs
inc
dec
mov
add
add
sbb
xor
mov
mov
pop
incl
fimull
mov
lea
jg
aam
rcrl
sbb
mov
int3
inc
sbbl
mov
in
inc
add
sub
adcb
test
adc
scas
fistpl
mov
push
add
sub
pop
lods
adc
or
sahf
or
cs
push
and
xchg
dec
or
stc
add
push
inc
ja
dec
stos
jne
hlt
push
mov
cmp
daa
into
and
or
dec
in
push
in
lret
aam
cmp
orl
rorl
or
scas
or
js
test
outsl
negb
cmp
pushf
push
lahf
stos
push
in
sbb
xlat
stc
loop
push
inc
sub
xor
rcrl
jnp
mov
jmp
rol
int3
jge
divl
xchg
das
push
scas
xor
leave
outsb
nop
jecxz
jns
pop
xor
ss
cs
sub
fiaddl
inc
sbb
cmpsb
out
mov
push
add
cwtl
pop
sti
push
or
push
push
cmpsb
lock
daa
dec
sbb
mov
sahf
je
rorl
inc
into
add
inc
and
or
xchg
xchg
mov
jecxz
add
adc
push
and
repz
jp,pn
cmp
leave
cld
sbb
lcall
shrb
clc
lea
fsubrl
and
clc
push
outsb
sub
repz
bound
addr16
jg
aas
and
lods
addb
inc
rorl
mov
and
mov
cmpl
clc
ror
jge
mov
and
js
repnz
addr16
lret
inc
dec
sbb
or
pushf
adc
sbb
inc
rorb
mov
inc
pextrw
mov
cmpsl
rcrb
mov
shll
pop
test
lods
lret
repz
mov
mov
lods
push
pushf
add
lret
lock
ja
jnp
add
out
mov
jb
or
lods
loope
outsl
js
arpl
aaa
sub
jmp
push
test
cwtl
test
dec
pop
and
jp
std
in
adc
fwait
shrl
mov
or
cli
adc
push
out
and
ja
mov
mov
aam
mov
aas
mov
nop
push
push
mov
popf
sbb
fs
insl
inc
ds
out
inc
mov
lods
fistl
nop
gs
jg
jmp
push
movsl
and
sti
out
jg
push
push
lahf
stos
adc
or
and
in
lea
add
lods
out
ja
lret
enter
subb
mov
cmc
mov
gs
lds
insb
decb
je
sbb
shlb
je
cmp
jno
pop
insl
lcall
iret
out
pop
adc
xchg
das
pushf
imul
dec
ret
jae
movsb
movsb
pop
imul
push
xor
ds
enter
es
sbb
mov
pop
pop
dec
mov
mov
shrl
stos
or
add
jp
ds
nop
ret
xchg
sbb
xchg
lds
pop
fwait
popa
clc
cmp
sub
mov
xchg
pusha
stc
xchg
mov
call
mov
push
es
push
ljmp
xchg
add
cmpb
mov
leave
mov
out
into
into
sbb
adc
int
out
cli
and
jbe
adc
push
fsubrs
iret
roll
adc
push
pop
les
jnp
push
mov
mov
jo
inc
or
mov
jbe
fbld
or
mov
int3
mov
jge
mov
ds
pop
mov
ror
jmp
test
lods
repz
popa
into
sbb
outsl
test
jp
xchg
xor
mov
dec
pop
pop
rclb
clc
xor
sldt
push
xlat
xor
loope
aam
xchg
jge
xor
test
xchg
iret
lea
sub
sbb
fwait
mov
das
jo
mov
jns
insl
or
and
pop
jl
jb
add
je
aas
adc
pop
cwtl
jp
pop
ret
sub
push
imul
test
push
pop
scas
insb
or
imul
orb
pop
in
sbb
add
jecxz
dec
adc
lcall
jbe
xor
loope
and
inc
jns
pop
test
xor
mov
rcl
lock
lret
cmp
jne
cwtl
jg
pop
add
fs
inc
push
sub
aas
push
jnp
stc
inc
mov
loope
lea
jb
popa
pop
aad
ja
cltd
sahf
mov
daa
jo
out
in
mov
orl
lret
outsl
fcom
add
sbb
icebp
xor
jbe
outsl
fbstp
sub
xorl
push
imul
jl
insb
add
cli
mov
sub
cmpsb
dec
mov
jbe
dec
ljmp
idiv
int3
cmp
dec
cmp
pop
movsb
pusha
jp
jg
adc
adc
cmp
pushf
mov
add
sahf
aad
ljmp
mov
sub
mov
inc
or
addr16
push
adc
jg
frstor
and
out
sub
and
test
popf
pop
cmc
sub
xchg
es
sbb
jno
mov
insl
dec
call
test
dec
in
mov
xor
pushf
add
xlat
inc
pusha
pushl
push
pop
pop
add
push
jmp
aaa
cmpsl
adc
ja
dec
lds
sbbl
and
mov
cmp
movsb
loope
jb
xchg
xor
push
leave
push
cmp
popa
pop
lock
jae
lods
push
sub
lock
out
xchg
test
les
jns,pn
flds
lds
leave
ja
dec
popf
jl
or
push
jno
or
int3
ret
in
sahf
test
inc
cmp
loopne
mov
out
pop
dec
dec
xchg
call
rcrl
mov
orl
xor
outsb
pop
int
imul
ret
or
dec
mov
lods
fsubr
cmp
call
and
out
sub
push
sub
notl
or
push
xchg
lods
xor
stc
jo
add
fcmovne
inc
jnp
jmp
repnz
jl
movsl
dec
xchg
enter
mov
sub
pop
clc
push
mov
jbe
pop
mov
je
xor
push
xchg
xlat
and
vsqrtsd
rcll
mov
mov
cltd
lahf
outsb
icebp
test
es
ds
stos
popf
addl
leave
data16
sbb
jge
jmp
das
xor
lods
jbe
jae
mov
loop
les
popa
xchg
adc
jo
jno
pop
mov
mov
dec
sahf
ss
hlt
jb
fisubrl
daa
cltd
imul
jl
mov
dec
shll
data16
pop
pushf
adc
pushf
push
pop
cmp
push
mov
aas
lods
dec
ljmp
jns
mov
push
push
int3
pop
je
out
mov
imul
call
int3
sub
and
and
cld
fiaddl
es
jmp
dec
sbb
sahf
pop
loop
pop
nop
in
lods
stos
push
mov
sbb
sub
mov
jecxz
xor
loopne
loopne
xchg
inc
fadds
into
cmp
mov
xorb
push
mov
cmpsl
adcb
inc
xor
pusha
jnp
dec
movsl
jbe
sub
push
addr16
ret
stc
pop
pop
hlt
fisttps
xor
popa
notl
xor
and
mov
inc
sub
sub
les
rcrl
add
jmp
bound
clc
repz
dec
into
add
mov
clts
pop
sbb
in
les
push
cmc
mov
mov
addr16
sbb
jns
cmpsb
mov
jne
pop
fmull
and
mov
lods
aaa
xor
jmp
aaa
adc
jge
push
clc
or
inc
lock
xchg
hlt
ret
push
sbb
call
xchg
dec
adc
cmpsb
rol
mov
sti
gs
cltd
mov
in
jns
sti
les
sbb
adc
mov
cmp
cmp
cli
test
test
xor
lock
jle,pn
sub
sub
jge
or
pusha
cmp
jns
dec
daa
and
dec
jle
or
and
mov
inc
pop
xchg
add
adc
or
mov
stos
mov
dec
loopne
pop
push
aam
inc
pusha
loopne
inc
xchg
push
enter
ficoml
in
push
aad
popf
jge
push
push
int
mov
adc
pop
push
dec
stos
fdivp
insb
std
into
out
xchg
hlt
mov
xchg
mov
sbb
push
adc
fidivl
xor
xchg
outsl
or
inc
cld
stos
addr16
and
pop
fiaddl
jbe
xchg
dec
jecxz
sub
divl
subb
call
test
cmp
xchg
and
loopne
push
mov
sbb
xchg
xchg
leave
jne
mov
or
je
push
test
outsl
dec
mov
or
sub
test
mov
repnz
push
ja
add
pop
mov
mov
jbe
repz
into
smsw
out
popa
je
pop
int3
xchg
xchg
es
mov
cld
inc
jbe
cmp
pop
insb
cmpsl
lea
test
in
mov
sub
rcrb
jp
leave
pop
jl
mov
das
aam
ret
sbb
fsts
jno
push
inc
cs
pop
mov
push
addr16
sbb
mov
or
movsb
jne
xchg
jnp
dec
push
mov
xor
jge
scas
imul
cltd
cmc
push
movsb
outsl
jge
repz
lret
repnz
hlt
loop
icebp
lea
xchg
sbb
pop
cwtl
jnp
popf
aam
repz
fisubrs
push
sub
lcall
inc
push
rorl
stos
stos
mov
daa
ja
adc
push
ja
dec
lcall
and
addr16
int3
xchg
stos
sahf
sbb
push
pop
out
sbbl
in
xor
hlt
andl
cmp
ds
cs
push
pop
jne
lds
sbb
ja
shrb
psubb
je
pushaw
mov
push
adcb
jmp
mov
push
stc
iret
or
rcr
popa
dec
outsb
cmc
call
pop
arpl
mov
cmpsl
mov
repz
jp
sbbb
push
jbe
push
xchg
ds
push
jno
shll
or
pushf
mov
nop
ss
sbb
cli
xor
lcall
loopne
dec
pop
mov
inc
ljmp
jb
imul
fisttpll
xor
mov
imul
filds
pusha
test
mov
cmp
stc
push
cmp
jl
out
pop
cmp
adc
cmp
ret
test
stos
les
jb
dec
and
call
mov
sub
enter
out
sahf
out
fdivl
and
inc
jmp
fstp
or
xor
cltd
mov
cmpsl
add
adc
fistps
das
icebp
add
sti
push
hlt
push
pushf
loopne
aaa
dec
jbe
gs
inc
jae
mov
test
adc
or
fdiv
jl
insb
inc
mov
mov
lods
int
jnp
sahf
mov
add
test
outsb
sbb
xor
enter
adc
cmp
fcompl
divb
test
stc
dec
dec
cld
add
push
jnp
mov
fwait
popf
sahf
lahf
lcall
mov
outsb
sbb
jnp
mov
fbstp
and
mov
cmc
iret
lret
mov
mov
xchg
xor
movsb
idivb
test
pushf
xchg
dec
xorb
orl
pusha
nop
test
aam
xchg
scas
adc
cld
dec
lahf
xchg
adc
test
mov
jb
mov
jo
mov
cmp
or
sbb
inc
dec
icebp
popa
push
ja
test
xchg
mov
mov
sbb
aaa
ss
ja
or
jo
lea
or
mov
loop
cltd
or
sbb
loopne
lods
icebp
jp
push
rorb
pushf
insl
iret
push
pop
xor
out
mov
loop
jmp
ret
xchg
push
or
xor
dec
mov
fdivs
pop
mov
lahf
fidivrs
xchg
lods
ret
addl
int3
jb
xor
jnp
call
in
loope
cmp
and
lds
sbb
push
mov
push
loopne
jecxz
orb
cwtl
sarl
dec
mov
imul
cmp
sub
in
jno
imul
arpl
mov
xchg
js
and
jno
pop
xchg
add
lcall
fcmovu
cmc
mov
mov
xchg
and
adc
sbb
ja
dec
cmp
and
mov
rcrl
pop
mov
sahf
out
lods
xor
xor
push
dec
pop
sub
sub
inc
out
sbb
lret
adc
pop
and
outsl
incb
sahf
xor
faddl
pop
filds
fsts
loope
lds
popa
sub
icebp
sbb
shrb
mov
pop
popf
pop
cmpsb
push
or
imul
mov
lods
cmp
loope
loope
out
fs
ljmp
mov
lret
dec
mov
cmc
popf
out
les
jge
xor
fadd
xchg
int3
stc
jae
and
cli
stc
das
inc
test
xor
inc
cmp
mov
ds
cs
or
mov
insl
adc
pop
xchg
bnd
sub
pop
jbe
dec
push
adc
jle
jns
dec
mov
xor
sub
loopne
pop
leave
sub
add
jb
xor
xchg
and
mov
into
xor
js
mov
push
aas
push
pushf
stc
xchg
jg
pop
loop
outsl
repz
inc
mov
jge
jbe
mov
pop
rorl
inc
loope
in
cmc
and
cmp
pop
stos
xchg
and
mov
rcll
outsb
loop
jno
hlt
lret
dec
sbb
lahf
push
std
add
xor
mov
stos
lcall
cmp
add
cmp
gs
cmc
and
cli
fucomp
pop
outsb
mov
cli
xor
xadd
push
insb
add
dec
and
iret
loope
xlat
sub
xchg
in
sbb
test
aad
mov
sub
add
or
sub
pop
jle
xor
dec
adc
in
xchg
shl
inc
push
xor
in
mov
inc
jbe
xor
jnp
pusha
pop
jg
mov
daa
test
jl
cli
jo
inc
rorl
shrl
jecxz
pop
lret
js
imul
mov
cmp
dec
daa
jl
mov
inc
faddl
stos
lahf
divb
int
popf
push
push
pop
rol
sub
mov
addr16
adc
mov
in
das
xchg
mov
jo
mov
inc
mov
fscale
push
scas
loope
add
xor
ret
push
lcall
fsubrl
mov
scas
loopne
xor
icebp
or
gs
loop
fildl
pop
adc
repnz
sub
jl
iret
jle
stc
ja
cmpsb
pop
aam
jae
xchg
dec
push
mov
xor
xchg
sarl
fs
aas
and
mov
cmp
cli
add
push
int3
push
lcall
mulb
imul
rorl
fnstenv
pop
jge
inc
mov
inc
dec
dec
negl
fldl
fldenv
mov
out
and
arpl
popf
mov
adc
popa
jg
lahf
or
sahf
ffree
fldcw
rcrb
je
pop
clc
mov
cmp
into
pop
test
popf
xor
in
add
lods
mov
lods
pop
nop
jecxz
push
sbb
cmp
cmp
mov
or
mov
inc
fdivs
stos
js
into
cmp
adc
add
js
push
mov
and
jbe
aad
mov
xor
imul
adc
sbb
mov
sub
popf
sub
bnd
test
inc
xchg
out
adc
dec
pop
inc
sub
in
jl
mov
cmp
sub
add
aas
cmpsb
jno
filds
cld
mov
int
inc
stos
insl
imul
jno
cld
iret
ja
adc
pusha
inc
out
into
cs
subb
icebp
and
xor
addr16
nop
xchg
xlat
mov
mov
inc
test
shr
mov
mov
lods
insl
sbb
and
mov
xchg
pop
andb
sbb
sbbb
movl
push
dec
cltd
cmpsl
mov
sub
dec
xchg
mov
jb
test
insl
sub
lods
ret
fdivrl
sbb
test
cmp
adc
jae
xchg
nop
addr16
dec
push
jo
xor
dec
adc
je
mov
cmp
push
out
and
jbe
imul
je
dec
dec
mov
jge
clc
orl
hlt
push
dec
dec
push
jns
lret
xchg
or
lock
add
push
mov
fs
push
sbb
add
and
xchg
mov
jp
xlat
out
pslld
xlat
insb
mov
inc
xor
orl
sbb
add
roll
dec
shlb
loop
mov
pop
sub
sbb
aam
jnp
shrl
jae
add
xlat
cmc
jle
test
cs
rol
in
cmpsb
testb
ds
or
and
jecxz
mov
mov
xchg
in
push
and
dec
xchg
cld
xor
cld
imul
mov
fs
sbb
and
jns
jg
mov
xor
xor
fs
movsl
fnstenv
adc
pop
loope
ud1
es
push
and
xchg
popa
sbb
lahf
lahf
cmc
decl
mov
lods
outsb
inc
xlat
sbb
push
mov
or
jo
gs
cli
popf
das
hlt
sub
inc
add
ret
sarb
inc
lret
mov
pushf
xchg
out
mov
sbb
outsb
roll
mov
rclb
mov
cli
mov
push
push
cmp
mov
lret
imull
popl
pusha
orb
in
outsl
fadds
push
pop
xchg
roll
mov
cmp
xchg
ds
xchg
mov
imul
cmc
movsb
add
and
shrl
xchg
sub
mov
pop
insl
icebp
push
push
push
lods
mov
pop
pop
push
or
add
clc
jb
sahf
jecxz
add
xorb
mov
and
dec
xchg
std
push
bound
sub
mov
movsl
sbb
xchg
pop
mov
pop
adc
adc
loope
push
cld
mov
or
pushf
pushf
pop
sbb
mov
aaa
mov
ds
inc
daa
imul
bound
add
test
enter
stos
cs
xor
push
xor
les
mov
pop
push
negb
ss
cmpsl
push
ret
popf
jne
mov
movsl
incb
push
fsub
sbb
or
pop
jb
mov
cld
dec
inc
daa
xchg
aam
add
lret
clc
outsl
push
push
xchg
mov
dec
add
ret
fidivs
cmp
cmc
sbb
enter
or
mov
cmp
movsb
pop
sub
mov
xchg
loopne
movsb
pop
and
adc
adc
pop
sbb
and
mov
jae
lea
jp
pop
inc
filds
pop
inc
sub
sbb
push
addl
mov
leave
out
das
fldt
daa
testb
lock
lret
mov
popa
xor
and
fisttpll
ljmp
xor
push
or
scas
fsubr
leave
inc
dec
les
sub
fs
mov
ljmp
mov
cs
dec
sahf
out
push
mov
fists
mov
jae
ficoml
mov
into
test
inc
or
push
test
sbb
pop
dec
xchg
jno
sub
lret
pop
sti
imul
popa
adc
daa
and
nop
fs
push
shll
mov
sub
inc
jnp
lods
mov
icebp
test
adcl
dec
mov
adc
add
mov
pop
push
stos
and
cmp
dec
loope
push
dec
jmp
hlt
cs
call
scas
pop
jecxz
xchg
fbstp
insl
push
fisubrl
xor
lds
adc
xor
mov
or
pushf
or
test
push
jecxz
insl
mov
arpl
adc
adc
mov
mov
gs
mov
mov
mov
sbb
add
mov
dec
mov
mov
dec
add
popf
sub
xor
mov
mov
mov
outsl
les
sbb
mov
shll
dec
dec
outsb
adc
gs
mov
sbb
fwait
in
jmp
stos
addr16
addl
cmp
push
push
mov
xchg
push
jg
push
mov
or
cmp
lcall
jle
shl
ja
pop
ds
fistpll
andl
rcll
dec
jge
xchg
xor
xor
ljmp
rorl
test
out
shlb
pop
das
enter
lahf
mov
movsl
xor
ret
aas
mov
mov
popf
adc
arpl
ljmp
popf
arpl
jmp
push
pop
add
scas
icebp
outsl
xchg
pop
bound
push
nop
push
fsubrl
fstpl
cli
and
adc
loopne
lods
inc
or
aad
jne
xchg
cmp
and
aad
repz
jns
mov
dec
jle
adc
jg
mov
andl
ficompl
in
xchg
scas
xor
jmp
inc
and
loope
sub
jl
sub
mov
arpl
lods
push
and
subl
out
test
push
data16
dec
xchg
sub
lret
or
jg
cmp
cmp
sbb
jns
sbb
mov
pop
cmp
and
lea
aad
inc
enter
mov
cmp
push
flds
mov
xchg
testb
inc
adc
outsb
stc
clc
mov
fdivs
push
pop
rcr
lret
push
push
movsl
nop
out
inc
fwait
ljmp
std
push
adc
data16
jecxz
fldl
shrl
aas
and
addr16
stc
rclb
sub
lahf
mov
lcall
jns
cmp
fildll
aam
aas
imul
je
push
jno
cmp
and
shlb
pop
in
xlat
dec
xchg
inc
cmpsb
repnz
or
js
mov
or
mov
pushf
push
pop
pop
in
cmp
jns
pop
xchg
mul
and
sub
xchg
mov
shlb
iret
or
roll
mov
sub
dec
stos
inc
test
xchg
test
xor
jns
mov
enter
subb
inc
jne
mov
cmp
sub
mov
mov
add
cld
lahf
jecxz
push
push
pop
out
je
inc
pop
mov
in
inc
fisttpll
subl
js
jb
movsb
mov
push
adc
mov
cmp
repnz
jle
xchg
or
aam
sub
xor
adc
dec
stc
or
popf
mov
sub
ja,pt
inc
push
or
mov
arpl
dec
pop
in
mov
or
inc
rolb
jae
out
sub
xor
xchg
jne
addr16
clc
gs
add
add
jae
dec
push
push
mov
xchg
sbb
pop
shrb
or
loop
inc
lods
in
cmp
pop
ss
lea
push
push
xchg
notb
xor
add
and
pusha
pop
cmc
jmp
xor
sahf
inc
popa
push
lret
dec
js
sbb
cmp
add
mov
mov
pop
and
or
jnp
mov
loopne
cmpsl
xchg
mov
or
insl
aaa
in
jmp
ljmp
out
fldt
test
jne
jae
mov
gs
xor
fisttpl
inc
ret
stc
fs
std
fdivrl
adc
aad
cld
dec
test
in
mov
aaa
in
push
push
add
push
pop
je
test
push
mov
decb
jbe
clc
sti
push
xor
inc
cmpsl
out
daa
mov
cmpsl
dec
inc
and
ds
push
xor
cltd
xchg
lods
push
mov
aas
mov
cmp
bound
ljmp
cld
push
add
lods
out
or
inc
dec
lods
cmp
cmp
in
push
fisubrs
mull
mov
adc
aas
cwtl
xlat
popa
sbb
imul
mov
xchg
push
mov
call
adc
lea
pop
jg
inc
mov
pop
daa
jno
mov
popf
add
jl
xor
lahf
outsb
imul
fnsave
adc
and
int3
push
or
inc
ja
scas
iret
jl
and
and
dec
xor
shlb
xor
insb
sub
shl
jnp
pop
aad
push
adc
int
pop
cltd
jbe
es
cmp
aaa
sbb
mov
icebp
cwtl
out
xor
mov
xchg
sub
jo
xchg
sbb
mov
imul
icebp
push
jmp
notl
mov
xorl
and
pop
pop
in
jno
fxch
sahf
cld
insb
fcomps
mov
mov
sbb
leave
out
sub
jo
cmp
rcrb
pop
shrb
pop
and
adc
sbb
fistl
out
dec
sbb
shrb
mov
add
aaa
sbb
fistpl
sti
iret
rcll
cmp
lods
pop
in
out
push
mov
dec
out
dec
jle
add
adc
outsl
outsb
mov
ja
sti
adc
fldt
inc
cmpsl
lea
cs
push
adc
add
lea
stos
cmp
cs
idivb
push
lock
cmp
jmp
outsl
push
or
and
xchg
sub
scas
mov
lea
testl
loopne
inc
adc
lahf
xchg
lcall
sahf
out
dec
xor
sub
out
mov
pop
or
push
lret
dec
adc
xchg
test
push
lea
fistpll
jae
sbb
movsl
data16
mov
popf
add
lret
pop
pop
sahf
or
popa
fdivrs
push
dec
mov
inc
ljmp
enter
int
and
mov
popf
rol
and
xchg
scas
out
jns
fmul
hlt
in
sbb
sbb
inc
pop
cmp
xlat
xor
jo
fwait
out
test
fsubp
push
cld
ficoml
sbb
sahf
mov
jno
gs
imul
lahf
cmp
fidivs
es
cmp
int
xchg
stos
outsl
ret
lods
dec
in
and
push
jp
ljmp
jecxz
jne
inc
push
sbb
lods
jmp
lods
adc
sbbl
imulb
cmp
push
inc
inc
push
das
mov
ret
mov
insl
int
jg
ljmp
fstpl
jae
sub
imulb
fidivrs
mov
mov
jmp
mov
decb
in
jg
repnz
dec
add
loope
dec
sub
mov
lock
ficoms
or
aad
in
cmpsb
add
xchg
fistl
mov
pop
insl
push
jb
add
xchg
lret
sbb
push
cmp
insb
rcr
xchg
call
out
inc
out
xchg
fistpl
xchg
dec
mov
lods
daa
push
sti
movsl
addb
pop
adc
sahf
sti
dec
in
jae
or
mov
sarl
xchg
pop
or
inc
pop
sti
or
mov
add
push
jo
mov
cmpsl
jne
test
or
test
ret
mov
xor
or
ja
movl
cmpsb
xchg
insl
jns
repnz
mov
lret
insb
fstpl
inc
sbb
jae
dec
inc
ljmp
stos
adc
push
es
jecxz
dec
xchg
ss
in
push
add
push
sarl
mov
imul
je
in
mov
mov
and
push
fisubrl
inc
loop
mov
adc
sub
jge
add
testb
and
inc
lods
dec
jns
gs
dec
sub
mov
xor
into
cli
and
sbb
mov
lea
fmull
pop
cmp
add
jecxz
lock
mov
test
jbe
pop
popa
pop
mov
mov
xor
push
add
insl
int3
mov
ret
js
ljmp
sbb
test
dec
mov
fbstp
outsl
clc
or
sbb
dec
sub
xchg
xchg
pop
fsubrl
mov
not
aaa
leave
push
jno
sub
ss
addr16
sub
andl
lds
add
xchg
cmp
stos
mov
adc
jmp
loope
fisubrs
out
mov
push
ror
pushf
mov
xchg
out
jl
movsl
fnsave
es
jp
mov
dec
adc
push
sbb
or
xor
cltd
pop
sbb
jecxz
cmp
loope
imul
fs
int
test
sbb
aad
insl
movsl
jns
leave
jp
pop
mov
cmp
scas
xorl
pop
in
inc
dec
call
in
out
lods
ret
stos
divb
loope
cli
jno
repnz
stos
inc
jmp
jge
or
sub
fmull
cmp
shrb
fs
xchg
xchg
lods
aaa
inc
jg
push
lret
sub
jbe
push
shlb
push
out
cmp
mov
daa
or
incb
sbb
mov
std
adc
fs
xor
mov
dec
test
lret
lcall
dec
pusha
add
pop
and
js
push
mov
rolb
loopne
xchg
lds
pop
mov
call
loopne
push
push
pop
pop
mov
test
out
iret
and
mov
test
jle
and
or
add
icebp
lds
and
dec
mov
mov
xchg
mov
ficomps
repnz
scas
movsl
xlat
ret
xchg
imul
movsl
push
push
xlat
ss
xchg
xchg
push
pop
inc
cmp
adc
jne
mov
xor
dec
popf
fmull
repz
pop
mov
cmp
gs
outsl
loope
in
les
ja
jmp
fucom
sarb
lahf
movswl
lcall
aas
or
jge
sbb
int
mov
mov
xchg
int3
jns,pn
inc
mov
mov
nop
out
mov
aam
mov
hlt
in
addl
jmp
dec
lret
bound
mov
and
mov
and
call
movsl
aaa
cmpsl
mov
inc
imul
insl
xchg
mov
pop
adc
mov
or
pop
add
sub
and
sahf
inc
cmp
xor
add
dec
andb
sbb
pop
ljmp
imul
fisttpl
shlb
int3
pusha
imul
cli
xchg
mov
scas
movsl
mov
cwtl
repnz
dec
pop
xchg
push
adc
nop
or
roll
xor
mov
xchg
js
mov
adc
push
push
in
xchg
inc
sarb
mov
loopne
jo
ret
dec
lahf
mov
mov
xor
shlb
dec
lods
pushf
popa
outsl
cmp
int
jbe
icebp
cmp
ljmp
mov
pushf
xchg
aad
je
call
adc
in
sti
in
shlb
push
dec
xchg
std
or
cmc
add
xchg
sbb
mov
sbb
fidivs
jle
add
sbb
cmpsb
int
pop
call
xchg
and
les
mov
shlb
dec
loope
shl
mov
push
sbb
aam
popa
sub
stc
mov
push
fwait
xor
nop
dec
push
jl
fiadds
or
jnp
push
rorb
cmp
push
lea
lock
in
cmp
fsubrl
mov
and
add
ja
push
out
xchg
jne
iret
mov
dec
imul
xchg
push
lcall
je
xor
adc
js
cs
mov
repz
xchg
mov
push
adcb
loop
cmp
jnp
enter
jmp
push
xor
jae
mov
imul
jb
outsl
sbb
pusha
int
or
add
pop
pop
lcall
fwait
lret
xchg
xchg
or
loopne
cmpsl
and
dec
mov
hlt
call
enter
fisubs
jbe
add
das
mov
ljmp
imul
xchg
mov
jnp
scas
popa
xor
push
inc
sbb
ror
enter
add
jns
add
sti
fdivs
les
or
cltd
sahf
mov
or
xchg
fists
push
pop
sbb
addr16
jge
call
mov
push
xchg
dec
je
lods
push
aam
imul
cmc
sub
loopne
sbb
lea
or
call
aad
adc
int
pusha
cmpsb
jb
inc
or
jae
inc
ds
xorb
popa
popa
test
setge
inc
mov
add
das
jmp
insb
subl
rcl
mov
pop
lret
sbb
jecxz
xchg
jle
xor
inc
sub
and
hlt
sbb
adc
insl
mov
frstpm(287
xor
dec
jns
push
inc
mov
arpl
xchg
inc
scas
setl
stc
fucomi
loop
mov
inc
sub
dec
cmpsb
aad
dec
hlt
fldt
mov
or
jg
lcall
or
jae
cmp
pop
adc
lods
lahf
jb
lods
les
andb
leave
stos
lret
stos
pop
in
shll
pop
shrl
xor
and
xor
push
mov
mov
lea
cld
and
or
dec
cmp
daa
stos
sub
mov
push
and
dec
xor
xor
test
pusha
xor
mov
aad
ja
mov
add
popa
mov
div
loop
into
icebp
mov
jle
sbb
or
mov
jb
dec
repnz
mov
jle
mov
in
jb
push
and
pusha
pop
mov
jg
jae
aas
pop
push
xchg
mov
push
pop
jge
enter
and
js
nop
push
push
pop
push
sbb
pop
cli
pop
in
icebp
inc
mov
fildll
jg
lock
sbb
jmp
push
cmp
stos
lret
test
jns
push
loopne
mov
add
addr16
add
sahf
push
or
lock
or
and
loop
div
adc
xor
enter
mov
mov
push
pop
pusha
test
out
addr16
jg
lahf
dec
testl
inc
mov
fsubl
stc
jl
in
mov
push
mov
jp
loope
sbb
inc
and
jo
inc
cltd
cmp
inc
loopne
icebp
stos
sbb
xchg
fmull
aam
mov
leave
add
in
mov
mov
cld
repnz
mov
mov
inc
inc
inc
dec
sub
icebp
jae
jp
cmp
loope
mov
jae
mov
test
mov
data16
mov
jp
filds
mov
or
push
lret
pop
aas
mov
adc
in
cmp
scas
int
stos
out
push
popa
mov
imul
test
or
sbb
lods
into
xor
add
dec
imul
lds
push
cmc
pop
enter
inc
clc
test
icebp
frstor
add
dec
test
sti
in
loopne
shl
sarb
jae
insb
pop
popf
lods
push
lods
pop
lods
stos
fisttpll
ljmp
cmp
dec
xchg
xchg
add
fcoml
sub
fiaddl
jmp
daa
fcomps
jge
aas
inc
push
bound
fcom
cwtl
out
lds
lcall
pop
add
jp
faddl
pop
add
int3
pop
mov
insl
adc
mov
sbb
int3
mov
xchg
gs
jle
loope
movsl
sar
cltd
xchg
xor
adc
in
xor
pop
clc
and
ret
stc
fidivl
or
fdivp
xchg
repz
div
mov
stos
testl
clc
mov
adc
jae
inc
clc
jb
in
test
cmp
mov
inc
adc
fwait
jo
mov
les
pusha
add
aad
cmp
inc
shll
jp
xor
inc
popa
mov
pop
rorb
insb
ljmp
cmpsb
mov
sub
pop
sub
or
aas
mov
pop
mov
lods
in
lret
xor
dec
in
out
lods
cmc
cmpsb
sbb
push
cltd
jb
push
push
xchg
stos
stos
sub
cmpsb
out
mov
ja
mov
dec
repnz
data16
adc
and
iret
inc
pop
lea
stos
cmp
scas
add
repz
push
insb
push
out
fnsave
sub
push
shlb
cmc
pop
mov
aaa
xchg
cmpsl
jecxz
rorl
test
movsb
adc
add
data16
mov
cli
push
dec
sub
mov
inc
cltd
jp
cli
in
push
fidivs
popf
xchg
mov
mov
incb
cmp
xchg
enter
outsl
jno
leave
pop
or
cvttps2pi
jp
push
sub
dec
mov
cld
xchg
call
ret
stos
mov
outsl
mov
or
ret
aad
outsb
das
xchg
clc
mov
push
inc
and
ret
pop
add
inc
push
and
imul
imul
jmp
dec
sub
mov
push
ret
lea
nop
arpl
xchg
pop
insb
testb
jnp
sbb
fimull
pop
push
movsl
in
aad
adc
jns
add
repnz
inc
rorb
push
inc
mov
xor
addb
push
loop
jno
cmp
test
sarb
insl
out
clc
mov
sub
and
pusha
inc
sbb
imul
lock
sarb
cmpsl
inc
in
into
rolb
lods
je
loope
nop
inc
ja
bound
lret
dec
shl
add
clc
cmc
push
dec
mov
cld
repnz
xchg
mov
adc
pushf
sub
out
adc
mov
insb
or
add
cmp
daa
lret
mov
movsl
ljmp
in
cbtw
xor
mulb
fsubrs
test
pop
loop
push
xchg
jg
adc
pop
outsl
movsl
mov
sub
gs
and
and
adc
push
js
pop
dec
xchg
cmpsb
jbe
pop
push
mov
stos
sbb
popf
push
fcmovb
and
mov
out
pop
or
enter
add
imul
enter
insb
sbb
es
push
daa
or
les
imul
or
es
cwtl
subb
roll
arpl
mov
outsl
fimull
ljmp
adc
add
add
jo
or
sbb
sub
fsubrl
ljmp
sub
faddp
dec
xchg
outsl
push
andb
fbstp
dec
add
adcl
add
mov
cmp
sbb
test
sbb
and
test
sbb
sbb
jno
pop
push
sub
fs
push
cmpl
lcall
mov
mov
add
fdivr
and
cld
xchg
sbb
xor
popf
sub
and
mov
loope
stos
stc
icebp
sub
and
mov
adc
loop
jne
pushf
jnp
and
sbb
jnp
pop
jno
inc
mov
dec
add
sbb
mov
insl
test
mov
jmp
dec
dec
in
or
adc
adc
add
cmp
jb
fisubs
test
popf
shlb
xchg
adc
imul
lods
es
sbbb
push
sbb
xchg
shrl
jns
cmp
clc
push
in
idivl
lcall
dec
push
or
jns
mov
sub
addr16
mov
aad
lea
mov
jae
xchg
out
nop
cmp
push
mov
pop
or
ss
cld
das
dec
push
into
aaa
mov
push
cmp
aam
daa
xor
sub
jp
and
test
rorb
jno
ror
dec
inc
hlt
xor
xlat
xor
loop
mov
pusha
xor
lds
mov
pop
shll
adc
fnstcw
xchg
mov
cmp
imul
or
cmp
aad
xchg
insb
sahf
rolb
testb
cmpsl
ja
cs
mov
jg
cli
push
sub
cmp
mov
inc
mov
sbb
dec
mov
icebp
nop
repnz
aaa
dec
sti
test
gs
mov
test
loop
es
int
mov
cmpsb
fcmovnb
or
mov
ds
cmp
in
jae
pop
addr16
fnclex
enter
lcall
xor
scas
repnz
sub
adc
lods
pusha
in
inc
cmp
cmp
in
popa
pusha
adc
adc
fimuls
stos
xchg
mov
push
and
rcrl
call
repz
mov
imul
cmp
or
inc
mov
and
hlt
fistps
mov
jecxz
jbe
or
jge
xchg
inc
addb
sub
mov
flds
test
leave
sub
shll
insl
push
hlt
add
scas
inc
lret
cmc
and
je
les
mov
add
cmc
inc
das
orb
gs
dec
je
fstps
mov
sbb
sub
xchg
orl
std
int3
lret
andl
jne
mov
xchg
std
inc
test
pop
sbb
sub
jne
out
repnz
aas
jae
push
jb
mov
mov
inc
and
sub
ret
mov
aam
mov
or
arpl
repnz
rcrb
ret
mov
xchg
mov
int
daa
push
jmp
roll
gs
insl
mov
xchg
rorb
and
adcb
iret
jb
push
ret
insb
or
into
xchg
lea
xor
add
push
arpl
sbb
cmp
pushf
repnz
jmp
ss
lea
and
push
dec
fwait
outsl
mov
int3
pusha
mov
popf
mov
cmc
add
stos
pop
pop
or
stc
push
dec
jg
aas
test
inc
and
js
jnp
push
out
shr
ror
cmp
fnsave
jae
mov
sub
imul
ja
mov
add
and
inc
pop
lret
test
scas
add
add
mov
xchg
sub
push
mov
mov
lea
mov
jne
xor
repz
lcall
sub
jmp
test
pusha
cmp
adc
loopne
jp
addr16
imul
clc
add
fistps
addb
sub
xchg
xchg
jle
repz
imul
jno
xchg
test
push
mov
push
hlt
mov
dec
or
pop
mov
stos
arpl
or
cmp
mull
lret
daa
mov
add
mov
int3
push
lret
sti
push
cld
xchg
into
lock
mov
in
fs
fwait
jecxz
test
cli
add
mov
js
pop
clc
pop
lcall
jae
xor
icebp
imul
sahf
pop
mov
pop
cltd
aam
cltd
push
fistpll
insl
xor
test
fbstp
or
jmp
popa
movl
sub
mov
adc
and
sub
mov
adc
mov
and
stos
insb
mov
bound
or
in
cmp
adc
lcall
jb
aam
repnz
jle
cs
mov
das
mov
cmp
pop
mov
int
negb
pop
cwtl
ret
add
pop
add
test
inc
ljmp
lahf
mov
cmp
or
mulps
loope
push
rcll
add
js
cld
cmpsb
jns
cmp
jno
dec
or
fxam
or
pop
outsl
fistps
or
xchg
xor
dec
xchg
fdivr
ficomps
insb
orb
jnp
mov
clc
shlb
add
inc
fldenv
jo
mov
es
xor
stos
adc
lods
mov
clc
dec
loope
pop
push
dec
test
cmpsl
arpl
js
mov
orb
int
lods
xchg
sbb
icebp
out
mov
imull
add
xchg
mov
jns
jl
xchg
gs
cmp
inc
das
mov
inc
mov
bound
mov
lds
sbb
or
or
or
adc
cwtl
cltd
clc
xchg
add
lds
push
sbb
xor
das
ja
inc
pop
jo
adcb
ljmp
jmp
loop
lret
jge
cmp
int
mov
jmp
or
shr
inc
xor
mov
ss
mov
xchg
mov
lret
jmp
mov
lret
pop
jae
lea
icebp
rolb
das
int3
stos
pop
and
lret
or
paddusb
push
fwait
sahf
dec
inc
mov
mov
je
inc
sbb
mov
inc
dec
outsl
cwtl
out
push
cmpl
inc
inc
jmp
test
test
test
mov
stos
iret
inc
mov
popf
pop
push
push
mov
push
cli
dec
jl
cmp
es
into
fwait
dec
outsl
xchg
push
aad
insl
test
push
addr16
ret
cmpsl
bound
cmp
adc
cs
aas
mov
jns
movsl
mov
insb
cs
or
jecxz
iret
inc
nop
pushf
pop
aad
jno
testb
cld
sub
mov
xlat
fdivr
jne
pop
aas
les
xchg
cmc
ja
pop
push
mov
jg
jmp
cmp
mov
xchg
jae
std
add
push
jl
out
hlt
mov
jmp
inc
inc
out
mov
push
mov
js
mov
mov
xchg
xlat
ljmp
pop
mov
pop
jle
cli
push
ret
cmp
xchg
push
pushf
ss
jno
xor
sbb
adc
rcll
psllq
insl
sub
outsl
jnp
sbb
mov
or
imul
push
push
sub
jnp
inc
lods
cmp
lcall
inc
or
push
repnz
and
or
cli
mov
neg
pushf
iret
lods
in
aad
pop
sub
fstl
enter
outsl
dec
repz
addr16
mov
in
out
daa
sub
sub
add
mov
ret
xchg
jae
les
mov
dec
loopne
cmp
dec
adc
lret
adc
mull
cmpsl
orl
jg
das
mov
mov
test
popl
mov
add
ret
popf
inc
sbb
lods
cmp
jns
sbb
xor
fdivrs
add
shl
subl
inc
call
mov
dec
mov
ret
lret
in
xchg
or
pop
cmp
cmp
jmp
pop
mov
inc
aam
hlt
adc
mov
xlat
xchg
bound
adc
push
sub
add
jmp
aad
push
imul
and
mov
jnp
out
pusha
fdivrs
aad
in
sbb
xor
xchg
pop
dec
outsb
dec
daa
call
dec
aaa
xorl
pop
test
and
mov
push
mov
loope
mov
cmp
pop
rorl
mov
dec
out
scas
fistpll
adc
and
mov
inc
xlat
xor
xchg
nop
filds
div
fildl
cmp
loopne,pt
sbb
imul
pop
cmp
xor
pop
mov
mov
out
arpl
lods
xchg
or
xchg
filds
addr16
jo
add
adc
cwtl
push
xchg
sar
fistpl
dec
inc
int3
div
and
sbb
xor
hlt
mov
lods
or
inc
gs
cld
loop
cmpsl
jp
mov
aas
mov
test
lods
mov
adc
xchg
jae
fimuls
jns
mov
repnz
fstl
xor
inc
xchg
add
cmp
add
mov
out
outsb
sti
xchg
movsl
adc
imul
adc
cld
mov
sti
frstor
or
shrb
pop
fwait
pop
mov
inc
push
mov
xor
pushf
les
xchg
jns
or
jo
mov
notl
push
movsb
sub
push
dec
in
xor
cmp
orb
xchg
in
std
fimuls
hlt
adc
sbb
loope
fsubr
cmpsb
popf
stos
pop
xchg
out
xchg
jo
cmpsb
frstpm(287
and
mov
lea
jmp
sbb
xor
ret
test
mov
test
movsl
aad
mov
mov
cltd
dec
aam
fnstcw
and
ljmp
psrad
std
fwait
enter
das
jge
cli
jne
and
sub
dec
ret
mov
adc
xchg
mov
repnz
lret
dec
in
jns
add
in
dec
scas
sub
mov
cmp
mov
push
push
jle
adc
xor
add
stc
icebp
mov
aas
mov
test
jbe
push
das
pushw
dec
hlt
jnp
cmpsl
xchg
push
ja
in
mov
jmp
and
insl
stos
pop
sbb
loope
inc
imul
leave
sub
pop
jnp,pn
mov
push
pop
lcall
xor
insl
pop
nopl
sahf
ja
ret
leave
aas
inc
shr
ljmp
repnz
push
fisubrl
mov
pop
mov
cld
cmpsl
jge
movsb
jnp
push
loop
mov
cmpsb
inc
dec
mov
add
push
mov
xchg
out
adc
sahf
outsb
ss
cmp
xchg
rolb
mov
pop
sar
sahf
dec
je
mov
xchg
cmpsb
add
xor
ds
rclb
inc
sarb
out
movsl
test
jle
xchg
test
fstpl
call
and
inc
lds
in
sahf
mov
cmpsb
sub
fistps
xchg
jnp
cld
push
push
sbb
enter
fisttpll
cmpsb
xor
test
jno
and
es
sub
shll
pop
ljmp
clc
push
rep
in
and
dec
sahf
jmp
out
mov
repnz
xchg
repz
pop
push
sbb
adcb
sub
add
lock
dec
fcompl
xor
sti
mov
popa
ret
cmp
repnz
cmpsb
jo
cmp
es
iret
icebp
pop
lds
sbb
sub
mov
or
shll
fwait
cltd
cli
or
aam
and
aas
jns
jo
jle
push
cmpsl
movsl
das
xor
jle
inc
xchg
and
js
cmp
dec
sbb
iret
imul
and
or
adc
add
jmp
call
imull
mov
leave
pusha
or
pusha
das
int
pop
and
xor
or
dec
mov
mov
pop
jno
mov
dec
cld
in
lret
and
outsb
sbb
xor
ss
add
inc
mov
xlat
mov
or
out
inc
jp
aaa
pusha
jb
scas
ljmp
jnp
popa
inc
enter
inc
and
aad
lcall
xor
popa
sub
mov
jmp
dec
adc
out
sub
test
cmp
push
sbb
xchg
jns
xchg
rcll
pop
jne
clc
and
or
fcmovnb
fwait
lock
inc
filds
fpatan
imul
push
inc
sbb
sub
pop
push
xchg
daa
dec
les
lock
and
push
pop
outsb
mov
int
hlt
test
jl
sbb
xchg
lret
xchg
add
dec
in
sbb
stos
mov
fidivl
lods
mov
xchg
jl
int
xchg
cmpsl
mov
and
popf
fisttps
fimull
fbld
jg
stos
and
sub
cli
rorb
jno
ljmp
sub
cmpsb
inc
fwait
std
cmp
xor
push
mov
fwait
xor
out
pop
pop
push
insb
scas
mov
or
sub
cmp
xor
in
movb
mov
adc
arpl
stc
js
jno
sub
xor
sub
pop
dec
repnz
repz
aam
mov
mov
addl
adc
fsts
in
cmp
test
call
dec
pop
inc
adc
in
jmp
out
popf
leave
push
test
in
lcall
adc
rolb
dec
lea
pop
xor
sbbb
dec
mov
mov
es
xor
lods
mov
inc
sbb
popa
jmp
and
rcr
pop
mov
ficoms
rcr
xor
repz
fstpl
cmp
movsl
mov
dec
mulb
clc
push
in
dec
arpl
add
jg
leave
sarl
sub
push
xor
mov
fnstcw
jbe
mov
lcall
loop
jns
cmp
jbe
mov
shll
sub
dec
jle
adcb
xor
push
and
xchg
cmp
int3
je
cmp
mov
inc
xor
rol
cltd
xor
fistps
jmp
pop
jae
pop
sub
mov
cmpsl
shll
call
ljmp
add
push
jmp
mov
and
cmpsb
mov
shll
test
jb
jl
popa
mov
pop
inc
ret
sbb
dec
imul
mov
lea
ljmp
leave
pop
loop
cmp
lods
pop
int3
shr
jno
daa
ret
or
fcom
movsl
xor
es
mov
lahf
lret
jno
pop
xor
ds
fsub
mov
push
adc
dec
mov
jge
cmp
mov
mov
adc
aaa
mov
enter
lods
add
scas
adc
daa
in
cmp
jno
ret
dec
dec
into
jnp
inc
rcrb
and
lret
mov
popf
leave
scas
cli
icebp
clc
in
hlt
xchg
hlt
cltd
xor
shrb
les
adc
xor
xor
cmp
in
xchg
pop
movsb
pop
cmp
daa
pop
mov
dec
fists
and
sub
push
inc
push
test
mov
fwait
outsl
cwtl
fisttpll
sbb
push
mov
adcl
add
sub
xchg
movl
push
mov
jle
push
out
stc
insb
xchg
adc
xchg
cwtl
pop
insl
push
jne
mov
loope
mov
mov
mov
dec
mov
add
dec
or
into
xor
add
adc
pop
jp
push
xchg
xor
push
xchg
inc
cmp
xlat
mov
fdivrl
cmpsl
pop
push
or
xchg
ret
mov
popa
inc
ja
or
in
sub
cltd
push
mov
jne
cmp
shll
jb
das
ret
xchg
cmpsb
in
add
mov
xchg
sub
pusha
pop
xor
mov
in
das
shll
cmp
fmuls
cmc
add
add
push
mov
hlt
mov
mov
or
push
scas
jl
push
mov
lods
clc
in
mov
sti
test
popa
clc
testl
lods
mov
sahf
or
leave
xlat
jbe
mov
dec
mov
testl
mov
cmpsb
sahf
imul
outsb
mov
ret
jae
shll
jmp
pop
mov
and
and
xorb
jno
test
inc
ds
lret
in
mov
xchg
xacquire
es
lret
pushl
jl
scas
sub
jl
clc
loope
lahf
int3
mov
das
jo
push
push
andl
enter
scas
cwtl
lea
dec
movsl
fcoml
inc
je
cmp
jp
out
dec
in
subb
data16
adc
ret
jmp
call
dec
insl
inc
mov
sbb
mov
sbbl
xchg
ljmpw
in
push
jo
add
ja
sbb
dec
xlat
data16
jno
rorl
mov
sub
cmp
pop
pop
add
pusha
cltd
sub
enter
in
nop
jl
xor
dec
cli
jae
shrb
pop
into
or
std
sub
or
dec
stos
dec
pushf
adcb
mov
movsb
jecxz
insb
movsb
sti
lret
xchg
shrl
in
xchg
xor
iret
out
jae
push
fcoml
cmp
pcmpgtw
iret
or
call
lds
xchg
out
mov
push
loopne
mov
xchg
xor
inc
rcrl
dec
jg
cld
add
mov
out
mov
int3
popa
jae
je
push
mov
subl
aaa
insl
inc
scas
mov
ficoms
daa
aas
shll
leave
add
fistps
mov
dec
pop
int3
mov
cmpsb
adc
pop
cli
loop
fisubrl
and
mov
pushf
lock
scas
ljmp
adc
or
addr16
and
jmp
out
jle
shl
aas
call
outsb
fistps
dec
rorb
movsb
lock
es
cwtl
stos
xor
cmp
loopne
xchg
stos
shrl
or
stos
adc
mov
cmp
mov
sbb
mov
mov
ret
xor
lahf
popa
mov
jmp
enter
fcoms
fldl
pop
sub
or
loope
cmp
mov
mov
or
mov
jnp
push
stos
into
insb
xor
mov
and
jne
mov
add
push
cli
xchg
cmp
scas
pop
and
ja
and
fs
xchg
imulb
jmp
inc
dec
scas
out
inc
jecxz
ret
xchg
sbb
xchg
mov
es
in
xchg
addl
movsb
aad
cmp
je
loopne
mov
cld
ss
xchg
jnp
out
lret
test
jl
pop
mov
cmp
jg
xor
stos
pmulhuw
hlt
stos
jne
repnz
popf
rclb
xchg
into
cmpsb
and
incb
pop
hlt
lods
push
jle
sub
or
cmp
mov
jbe
aam
fs
xchg
cmp
and
inc
push
xchg
stos
and
jp
in
and
inc
ret
lret
inc
cmpsl
xor
jle
loop
inc
pop
push
mov
dec
ja
jns
mov
adc
rcrl
call
xchg
test
xchg
mov
pop
cli
pop
xchg
mov
mov
mov
and
lock
or
fidivl
into
mov
mov
xchg
mov
cmp
xchg
jp
xchg
imul
mov
sti
xor
sti
insl
fdivs
xlat
inc
lods
mov
scas
push
push
and
sbb
fsubrs
adc
jp
pop
lahf
pop
std
scas
sbb
lret
xchg
hlt
add
push
pushf
cmp
aaa
inc
jno
cmp
adc
xchg
cmp
std
jae
orl
xchg
cmp
outsb
push
jnp
xchg
in
add
sbb
rorb
mov
jl
test
repnz
jae
sub
inc
mov
dec
iret
or
cmp
add
sub
add
mov
addr16
xchg
les
lret
out
repnz
out
call
fistps
xor
lret
cmp
repz
dec
dec
push
adc
jp
scas
ret
in
xchg
gs
sbb
add
popa
hlt
xor
sub
and
add
push
dec
or
dec
dec
or
icebp
sbb
shl
insb
push
aaa
xchg
ud1
jmp
mov
int
cmp
imul
lea
mov
push
jp
inc
stc
fst
cltd
mov
pop
xchg
mov
daa
pop
cli
mov
mov
mov
int
inc
mov
ror
je
inc
jge
hlt
pop
mov
fwait
or
dec
mov
pop
popa
mov
jnp
sub
mov
xchg
mov
rclb
mov
xchg
sub
rclb
sti
adcb
pushf
mov
xchg
push
movsb
jecxz
mov
inc
mov
adc
cmpsl
fwait
imul
cld
cmc
imul
cmp
into
push
and
movsb
jle
mov
and
sbb
sub
stc
add
and
cmpb
sbb
mov
mov
cmc
cmp
cmc
mov
cld
or
int
loope
xor
cmc
pop
aam
cmp
mov
xchg
push
test
scas
ret
add
ror
dec
mov
iret
ja
cmp
lds
faddl
out
lock
test
sti
pop
mov
cs
xchg
fisttps
sbb
push
jle
jne
or
inc
xchg
push
cmc
bound
jbe
ret
push
mov
push
push
jmp
xlat
add
out
popa
inc
idivl
xchg
fcompp
pop
movsl
sti
lods
mov
mov
mov
or
inc
jg
sub
inc
rolb
sbb
push
cmp
mov
hlt
lds
aad
adc
scas
push
das
jnp
std
sub
cmpsb
inc
jne
inc
movsb
mov
push
adc
fcomp
in
daa
js
inc
cld
repz
icebp
jae
fdiv
jae
cmp
insb
cmp
sbbl
mov
rclb
mov
push
push
cmp
pop
xor
inc
sbb
mov
movsb
arpl
sbbb
fwait
ljmp
cmp
sub
mov
jge
or
ret
push
push
push
jb
inc
in
sbb
pop
test
jo
adc
ficoms
jns
push
popf
sbb
pop
mov
jb
mov
push
add
dec
ljmp
mov
fdivr
data16
repz
sub
stc
test
cmp
mov
fisubl
xor
inc
adc
and
fsubs
jg
stos
lds
or
std
or
loope
mov
add
inc
aaa
or
repnz
sub
xchg
sub
test
cmp
shll
jl
jg
xlat
mov
mov
or
lods
add
hlt
xchg
xchg
es
test
addr16
mov
dec
out
insb
cmc
pop
or
or
cs
sbb
mov
or
adc
and
out
imull
mov
sahf
seto
aam
fucomip
into
push
push
sub
aas
pusha
psrad
mov
out
dec
arpl
in
ljmp
push
andl
pop
jge
dec
adc
mov
test
and
imul
cmpsb
jae
xchg
push
xorb
mov
out
lods
xchg
aaa
push
adc
or
mov
callw
sbb
jl
cmp
jbe
sub
pop
pop
and
adc
jae
pop
and
and
test
mov
jecxz
and
popa
xor
jbe
sbb
xchg
ds
xchg
rcr
imul
adc
loopne
sahf
mov
sti
inc
test
xor
rolb
ds
add
out
pop
push
test
adc
mov
in
mov
pusha
inc
cwtl
pop
mov
pop
mov
out
cmp
mov
or
fcompl
mov
adc
sahf
sar
popf
inc
cmp
mov
adc
or
lret
fadds
fimuls
mov
rcl
mov
add
dec
imul
dec
mov
mov
test
lea
sub
xchg
or
shll
arpl
popf
inc
cli
xlat
test
ds
sbb
popa
stos
jg
lcall
xor
pop
ret
rolb
xor
mov
mov
push
pop
push
and
stos
gs
rcr
cmp
or
aam
dec
icebp
call
sbb
clc
movsb
mov
fistps
sub
adc
sub
ss
repz
neg
sti
faddp
add
stos
and
fwait
jb
push
jno
jb
and
std
xchg
fcmovu
insl
js
imul
lods
fsts
jmp
push
sbb
out
mov
push
mov
sub
xor
and
and
or
insl
jb
orb
das
scas
hlt
outsl
jl
loope
sti
push
out
or
adc
push
mov
mov
lea
adc
jmp
sti
or
adc
fsts
inc
xchg
enter
out
cmp
test
in
xchg
enter
lcall
and
push
in
mov
add
inc
hlt
xchg
jns
pop
dec
jl
cmp
mov
imul
mov
jns
add
lcall
and
sbb
outsb
add
rcr
sbb
jle
mov
mov
imul
or
inc
sub
jb
add
mov
mov
inc
lret
jp
call
dec
lods
pop
mov
jl
adc
dec
fs
adc
push
sub
xor
movsl
pushf
sbb
fwait
push
push
aad
shrl
inc
mov
mov
ljmp
ja
loopne
push
out
jo
xor
mov
inc
xor
pop
xlat
sub
mov
add
aaa
ret
xchg
subb
mov
ja
push
xchg
jbe
jns
loopne
fidivs
stc
lahf
das
fsubs
pop
mov
stos
in
sbb
cmpl
mov
hlt
clc
push
daa
sbb
in
stos
fimull
frstor
xchg
imul
pop
lock
mov
cld
ss
push
mov
mov
out
in
bound
mov
outsb
ret
mov
push
out
cmp
outsb
or
mov
mov
testl
pop
lahf
adcb
jbe
shll
in
js
inc
int
enter
mov
xchg
loop
inc
or
push
out
xor
adc
mov
jl
mov
sub
push
out
xor
aam
push
sub
rorl
mov
call
xchg
rclb
call
adc
iret
dec
ret
decb
stos
mov
pop
add
popa
fmulp
pusha
das
jp
jl
shlb
std
mov
adc
stos
and
push
jne
aam
fs
jo
outsb
xor
imul
dec
sub
jl
notb
or
jl
and
xchg
push
js
popa
repnz
or
sub
add
sti
xchg
jb
adc
mov
jnp
xor
hlt
xchg
mul
dec
fldl
pop
or
and
pusha
mov
adc
ss
xchg
jnp
cwtl
std
and
dec
popa
int3
pop
jmp
xchg
mov
or
stos
jb
cmp
adc
dec
jns
sbb
mov
mov
cmp
hlt
movsb
lret
push
pusha
fwait
pop
push
fdivl
sbb
movsl
inc
jg
arpl
test
nop
push
sti
repnz
add
shlb
pop
fists
add
ss
dec
lcall
mov
iret
mov
mov
cmc
dec
push
in
mov
mov
sbb
adc
xor
inc
mov
push
imul
cmp
lret
out
cwtl
cmp
repnz
iret
push
mov
or
fwait
adc
aad
clc
and
inc
rorb
xchg
and
cmp
mov
repnz
jg
adc
jg
call
cmp
pop
pop
rcrb
dec
addb
fadds
sbb
dec
lods
inc
lahf
push
jno
cmc
cmp
xlat
rcrl
popa
cmpsb
daa
popa
test
gs
aaa
testl
mov
cmp
bound
fnstcw
xchg
pusha
or
mov
and
pop
clc
lods
aas
lea
enter
push
dec
push
push
jmp
jnp
sub
not
mov
scas
xchg
orb
sub
in
in
cmp
and
sub
pop
fbstp
pop
xor
sti
sbb
test
fwait
outsb
xor
push
inc
pop
cld
xor
clc
out
pop
mov
sub
loope
clc
outsl
mov
hlt
mov
xor
retw
ja
xchg
mov
pop
test
sbb
sbb
bound
cmp
in
mov
xor
icebp
bound
insl
test
orb
addr16
dec
scas
add
imul
pop
dec
mov
out
sbb
inc
fsubrl
xchg
test
cmp
out
repz
popf
mov
call
out
cmp
add
loopne,pn
daa
jp
sub
repz
in
push
jl,pn
dec
ljmp
sub
imul
mov
push
stos
mov
add
jle
and
xchg
loopne
shrb
cmpsl
imul
insl
fucom
call
xchg
lahf
in
cmp
or
xor
cld
push
sub
jl
lret
mov
pop
dec
call
xor
push
push
into
dec
inc
js
xlat
shlb
mov
push
aad
in
enter
jo
pop
loop
ja
lds
jl
inc
mov
sub
rorl
dec
dec
mov
mov
xor
dec
fimull
xor
fstpl
mov
mov
dec
push
dec
scas
dec
xchg
in
adc
data16
cmpl
daa
dec
ret
pushf
xor
mov
push
out
pop
jge
shlb
movsl
cld
cli
cmp
inc
cli
in
fcmovne
cs
imul
push
enter
sub
xor
fmull
cmp
test
cmp
mov
jge
add
mov
xor
xor
sbb
mov
fidivl
adc
cmp
out
test
outsl
xchg
std
sub
jge
jb
push
jle
inc
in
pop
in
stc
mov
mov
rorl
sub
xlat
mov
jmp
ds
es
std
insl
xchg
sbbl
int3
xchg
fs
nop
dec
inc
jmp
in
stos
push
enter
fcmovne
or
fmuls
push
out
and
push
pop
mov
test
pop
jns
xor
or
repnz
pushf
mov
xor
xchg
jle
lea
out
stc
and
js
mov
mov
xchg
adc
icebp
mov
sbbb
rolb
xchg
push
adc
enter
jecxz
xor
mov
mov
adc
outsl
mov
lcall
loope
insl
xor
fsub
push
bound
test
loopne
lods
mulb
cwtl
push
fs
loopne
mov
xchg
push
sbb
add
out
mov
outsl
and
dec
mov
cmp
rclb
sub
test
or
adc
mov
jnp
dec
mov
mov
inc
aaa
dec
jecxz
sbbb
stc
add
shlb
sarb
jmp
mov
dec
call
jmp
mov
pop
sub
notb
sub
pop
dec
xlat
aad
pop
xchg
xor
shlb
iret
sti
idivl
cmp
insl
cmp
xchg
pushf
mov
jne
xor
adc
xor
mov
bound
jg
push
add
pop
ret
in
lea
aad
mov
movsb
out
push
int
mov
dec
loope
sarb
push
sbb
loope
mov
mov
pop
pop
cli
mov
std
call
xor
lcall
into
js
bound
js
inc
fistpll
das
jge
jnp
ret
mov
jmp
xchg
lahf
jbe
add
out
daa
cld
faddl
cli
stc
add
into
repnz
test
push
clc
lods
lret
mov
bswap
lcall
xchg
sub
movsb
mov
ds
pop
mov
popl
jo
shrl
inc
bnd
sub
cmpsl
xor
push
push
lahf
push
mov
xor
cmp
xor
jb
loope
sub
xchg
xor
or
pusha
pop
mov
adc
sub
scas
jne
fildl
je
fildll
pop
cmpsb
icebp
mov
pop
push
push
lea
sub
nop
mov
cmp
adc
imul
dec
push
pop
push
lahf
cs
fs
jge
xchg
mov
xor
jp
mov
adc
call
fidivrl
cli
imul
int3
xlat
mov
aaa
jecxz
jp
xchg
andb
pusha
add
lcall
and
jmp
mov
iret
sub
add
mov
xor
cmp
mov
out
sub
ljmp
push
sbb
sub
sbb
adc
aam
pop
sbb
mov
fbstp
ja
roll
cmovno
or
push
aas
fwait
lcall
stos
adc
mov
dec
sgdtl
movsl
mov
sub
sub
and
inc
aas
shl
aaa
cmp
mov
mov
xor
push
cli
jnp
inc
jo
in
aas
mov
jns
int
lea
push
mov
add
dec
gs
popa
mov
push
shrb
fcoms
or
iret
mov
and
je
mov
cli
outsb
add
movsl
pop
cld
xlat
add
fs
imul
sub
push
cld
or
jns
stos
jecxz
mov
icebp
jb
inc
mov
mov
iret
jle
dec
shlb
push
sbb
in
ljmp
loope
fdivp
inc
inc
ljmp
out
mov
xor
pop
sti
js
jb
pop
or
cmp
sub
aad
and
mov
dec
mov
mov
cmp
xor
ss
pop
js
pop
mov
push
sub
shr
fmuls
pop
outsb
outsl
mov
dec
adc
xchg
mov
ljmp
es
std
pop
lcall
inc
push
inc
loopne
mov
outsl
hlt
or
shll
pop
push
mov
test
cwtl
int3
imul
pop
mov
pop
jae
xchg
fs
or
out
cmp
mov
xor
and
sub
pop
adcb
push
pop
sub
cli
sbb
aaa
fldcw
insb
jmp
xchg
test
leave
jmp
iret
movb
jp
and
fsubs
aaa
out
push
cs
xchg
add
push
in
aam
mov
subl
push
sbbl
jecxz
gs
icebp
test
add
dec
decl
in
lret
ret
jnp
push
or
cmovl
cld
jo
js
jp
call
and
inc
mov
push
cmp
xchg
popa
cmp
les
jnp
and
or
pop
hlt
jno
xor
inc
mov
cmc
jns
fistl
shlb
push
shrl
xchg
add
cld
test
push
lret
leave
pop
xor
rorb
pusha
jb
jo
jae
push
mov
push
lods
mov
add
cltd
es
shlb
loope
pop
jbe
xlat
sub
fcomps
or
push
int
push
shlb
mov
mov
in
pop
arpl
fsubrl
add
imul
rcll
mov
fucomip
adcb
ja
dec
bound
fldenv
es
test
loope
sub
add
idivl
inc
ds
dec
arpl
popa
nop
shll
rcl
hlt
mov
lcall
aaa
popf
and
icebp
dec
pop
fcoms
or
cwtl
inc
push
stos
xor
dec
movsb
imul
dec
adc
imul
adcl
sub
fnsave
imul
gs
mov
lahf
cmp
clc
pop
sbb
and
push
or
sbb
push
dec
ja
scas
cmp
xor
jmp
dec
test
pop
push
push
push
int
imul
jbe
push
icebp
jge
test
out
cld
leave
sub
add
pushf
test
mov
pop
xchg
cmp
xchg
and
mov
inc
add
adc
add
mov
lret
stc
aas
xchg
jecxz
adc
sbb
fwait
adc
mov
es
sbbb
or
adc
inc
insb
jge
xlat
ss
pop
xor
push
notl
lahf
aaa
sub
std
push
ret
jo
mov
cmp
push
faddl
or
add
ss
xchg
fiadds
ljmp
dec
aas
jecxz
outsb
jnp
jns
mov
sbb
stc
add
insb
cmpsl
pushf
sbb
mov
push
xchg
arpl
imul
jnp
sbb
js
dec
aaa
push
fdivrl
loopne
mov
outsl
cld
pop
and
xor
pop
xor
dec
cmp
pop
adcl
data16
and
es
cmpl
call
push
popa
cltd
imul
fisubrl
cli
pop
cmp
sbb
sti
mov
cmp
push
jg
pop
lods
or
leave
jle
pop
jb
push
iret
xorb
xchg
fistl
xorb
sbb
mov
jo
mov
push
rcr
mov
sub
fstps
out
les
je
dec
xor
mov
dec
push
aas
mov
js
jo
in
pusha
scas
das
cmp
bound
sbb
pop
shl
fnstsw
dec
push
jle
mov
mov
mov
mulb
mov
xchg
or
pop
inc
adc
inc
hlt
pop
push
xchg
xchg
xor
in
or
in
add
loopne
pop
inc
jo
lcall
lea
cli
cwtl
push
sbb
aas
es
lea
loope
xchg
icebp
call
lret
jle
enter
inc
lds
mov
mov
mov
out
scas
mov
mov
xor
jmp
sahf
adc
xor
xor
out
mov
loopne
xor
xor
std
sar
std
mov
inc
int
sarb
mov
adc
dec
inc
push
pop
pop
pop
mov
out
cmp
push
mov
add
das
inc
enter
or
in
xchg
out
jbe
pop
adc
xchg
out
jl
aas
in
push
movl
jg
loopne
movb
cli
add
clc
dec
sbb
das
repnz
outsb
stos
sbbl
lods
xor
mov
ret
pop
mov
pop
jno
scas
jmp
xlat
into
mov
pop
sub
or
adc
test
ret
push
or
pop
xorb
mov
jp
or
mov
mov
out
inc
jns
pop
xor
andb
daa
ljmp
mov
sub
push
test
jmp
mov
leave
add
pop
cmpsl
cmp
jle
or
fadd
or
in
adcl
xor
jge
in
aas
idivb
cmpsl
inc
popf
push
pop
test
repz
imul
push
cmp
stc
add
adcl
push
adc
dec
jle
je
lcall
ret
gs
icebp
outsl
icebp
pop
int3
jae
xchg
lods
dec
push
call
int3
push
lret
pop
rolb
cmp
cmp
aaa
int
fprem
sbb
mov
mov
lret
je
xor
dec
pusha
pop
mov
push
jl
jl
popa
ret
inc
push
test
hlt
mov
xor
or
stc
pop
in
or
dec
das
sbb
push
inc
lret
aam
shr
cld
jns
comiss
out
xor
adc
jp
push
xor
inc
push
mov
aad
je
cmp
xchg
xchg
mov
stc
push
fisttpll
dec
lcall
movsb
jnp
mov
stos
sbb
mov
sub
jae
stos
pop
icebp
or
loop
lcall
sub
cld
pop
jmp
cwtl
sub
xlat
std
cmp
adc
inc
ret
cmc
mov
inc
test
mov
sbb
shlb
sbb
mov
mov
imul
add
mov
add
jecxz
out
add
fwait
inc
gs
mov
test
push
dec
jge
mov
sbb
and
xchg
test
adc
pop
out
lret
jmp
in
add
lds
popa
sbb
cmp
push
jl
mov
in
out
push
inc
fs
push
and
xor
es
imul
cmp
adc
pusha
push
push
jg
dec
xor
leave
scas
aas
pop
or
add
cmpsb
shlb
pop
sub
arpl
sub
das
shll
out
mov
mov
xchg
mov
pusha
bound
xchg
add
mov
or
xchg
mov
inc
or
outsl
fstpl
scas
ret
and
js
mov
push
and
ja
es
rorl
lcall
mov
dec
mov
add
jmp
mov
fstpl
xor
mov
test
dec
fisubrl
cmpsb
mov
test
pop
and
ret
and
int
insb
fcompl
xor
xchg
mov
imul
sbb
aaa
sbb
jne
fisttps
data16
xchg
xchg
and
push
inc
sub
mov
sub
push
test
test
repz
cmp
push
push
jae
mov
stos
ror
sbb
cmp
mov
fcmovu
push
addl
cs
insb
pop
stos
add
ja
fnstsw
and
inc
xchg
insl
add
imul
push
jno
jno
cmp
adc
push
jecxz
adc
clc
sti
or
leave
sub
dec
inc
mov
mulb
jp
xor
rcrb
or
jge
movsl
push
cmp
and
je
push
hlt
sub
aaa
mov
out
cmp
sub
pop
imul
js
je
cs
sbb
es
call
push
sbb
movsl
aad
loop
aas
test
mov
aas
lock
pop
fistps
mov
out
sub
push
cmp
or
in
sub
xorl
iret
jge
imul
dec
pop
daa
add
mov
icebp
jo
orb
mov
pop
mov
xchg
xchg
mov
xchg
jl
lods
lret
xor
adc
lret
sbb
std
push
das
dec
aad
add
dec
dec
insl
scas
push
xor
orb
cmp
ljmp
cld
test
ljmp
ret
rclb
popf
nop
push
cmpsb
das
add
cmp
loope
jl
nop
das
add
sub
sbb
dec
inc
daa
sbb
cwtl
push
jns
inc
testb
aaa
int
fs
and
lock
cwtl
ljmp
adc
ljmp
xor
add
mov
mov
dec
and
mov
mov
dec
xchg
daa
aad
jne
fildll
mov
dec
and
stc
std
fdivrl
popf
jmp
daa
inc
push
aas
cmpsb
sub
mov
loop
in
shll
xchg
sub
jge
inc
rorb
pop
shlb
rcr
fadd
lock
nop
mov
jno
sti
xchg
call
lds
mov
jmp
mov
js
push
xor
test
and
mov
mov
mov
xor
int
in
sbb
stos
cmpsb
daa
inc
sbb
lods
or
sbb
or
inc
add
pop
mov
rclb
sbb
cwtl
add
sahf
test
mov
out
sbb
mov
mov
fisttpll
pop
shll
pop
mov
iret
ret
mov
insb
push
sbb
push
xor
push
stos
adc
dec
adc
fcmovne
mov
pop
lret
ret
cmp
notl
xchg
inc
xchg
cmpsb
mov
pop
or
loop
xchg
insb
inc
rcll
fbld
or
cmp
shrl
das
push
cmpsb
andl
lret
mov
sub
mov
push
jb,pn
cmpsl
dec
xor
mov
cmc
ja,pt
pop
out
cmp
cmp
leave
dec
xchg
and
inc
and
add
and
shrb
dec
into
cmpl
add
sbb
push
shll
add
or
int
scas
cmc
mov
imul
mov
push
outsl
mov
lret
add
sub
jnp
jp
mov
lods
xchg
adc
dec
adcl
and
push
hlt
outsl
jge,pt
sub
mov
imul
cmp
ljmp
cmp
clc
and
and
not
clc
xlat
fld
stc
sahf
sub
jg
ss
arpl
push
gs
cld
jl
mov
xorb
cmpsl
ret
lods
mul
pop
lret
mov
dec
stc
imul
jnp
mov
sbb
movsb
fstl
pop
xor
ret
dec
stos
cmp
jmp
cmp
add
fst
jne
xchg
lcall
out
dec
daa
xchg
mov
mov
cmpb
xchg
stos
xor
push
iret
loope
scas
cmp
jnp
fs
jne
dec
pop
mov
cltd
testl
ficompl
outsb
jnp
mov
xchg
jne
jnp
lahf
leave
inc
nop
xchg
sub
xchg
loope
shr
icebp
pop
pop
and
xor
jo
cmp
and
fdivrs
flds
jecxz
cld
inc
jb
jnp
decl
add
popa
cmp
jb
mov
lahf
setge
and
hlt
sub
sti
std
xchg
jmp
clc
ret
shll
lret
hlt
xor
inc
shrl
inc
push
add
or
mov
adcb
test
leave
mov
add
mov
out
enter
icebp
add
lret
movsl
and
aad
inc
jl
gs
insb
add
aaa
add
pop
loope
add
fbstp
pop
pop
dec
int3
shr
add
inc
add
push
dec
add
aad
mov
sbb
aas
in
and
pushf
cmp
das
jb
xchg
adc
sbb
sti
popf
pop
leave
or
xor
sbb
cld
mov
dec
sarl
std
cli
push
sbb
dec
jp
mov
and
daa
cmp
in
cmpl
xor
mov
add
aam
or
sub
mov
arpl
sbb
cltd
pop
popa
jl
cmpsl
in
mov
stos
cmpsb
mov
push
vunpcklps
xchg
insb
fbstp
in
sub
adc
and
movsb
sub
mov
and
inc
vpavgw
or
inc
xchg
sbb
mov
adc
ja
mov
xor
lret
mov
mov
cmp
test
inc
jle
mov
scas
arpl
push
loopne
and
sub
inc
js
xchg
xor
pop
jno
dec
ss
imul
les
out
jne
inc
adc
and
xchg
imul
adc
outsb
or
pushf
insb
and
push
push
inc
and
out
fidivrs
lahf
cltd
adc
push
out
cltd
loope
mov
leave
or
cli
and
push
mov
jb
inc
icebp
and
adc
jl
aaa
cli
mov
cmpsl
lahf
bound
jmp
and
push
cmc
addr16
pop
shlb
jns
lds
xor
jp
aam
stos
test
bound
mov
or
mov
add
dec
icebp
sahf
push
ret
outsl
decb
cwtl
mov
cltd
sbb
imul
lret
aaa
xchg
or
xor
jg
or
gs
adc
add
fidivs
popf
or
xchg
or
inc
jmp
cwtl
mov
imul
mov
mov
mov
movsl
cmp
adc
jmp
test
jno
lret
mov
xchg
dec
jne
arpl
mov
outsl
scas
mov
ja
cs
add
push
xor
icebp
jge
cmp
cmp
sbb
mov
inc
daa
cmp
dec
push
sbb
and
addl
sbb
in
punpckldq
cmp
loopne
lret
sbb
mov
mov
xchg
and
sbbl
push
dec
add
mov
mov
in
outsl
sbb
rolb
mov
int
rcll
mov
inc
or
push
push
lods
inc
pop
loopne
pop
lret
les
push
lea
stos
add
shl
insb
js
xchg
xor
lahf
xchg
xor
repz
loope
xorl
sahf
pop
jbe
fwait
dec
pop
sub
jne
jmp
mov
mov
or
or
xchg
mov
push
out
rep
rcll
mov
lret
jae
fld
xchg
mov
ret
out
mov
adc
add
cmpsb
mov
in
call
adc
fwait
popa
mov
mov
ficompl
dec
lea
fs
fsincos
pop
push
dec
clc
je
rcr
pusha
adc
aad
lret
iret
leave
dec
and
jnp
roll
mov
imul
mov
ds
dec
loopne
mov
inc
test
loopne
dec
mov
mov
scas
cmp
pusha
adc
jg
sbb
rorb
dec
test
cmp
mov
xchg
icebp
movsl
fstps
testb
clc
int3
dec
push
xchg
and
sbb
add
stc
cmpsb
push
pop
jo
popa
lods
and
mov
adc
and
add
mov
mov
cmp
scas
or
mov
lods
cmpsb
sbb
mov
int
mov
xor
push
adcl
lcall
cmp
mov
js
cmp
xchg
test
subl
or
jle
aas
jnp
xlat
and
push
mov
addr16
jnp
mov
push
es
dec
pop
repz
cmp
pop
addl
pop
jecxz
jae
out
pop
daa
in
mov
sbb
pop
aad
adc
mov
dec
lret
lds
in
fisttpl
jo
mov
push
sti
mov
rep
pop
add
add
cmpsb
dec
popf
aaa
shll
lcall
add
pop
or
dec
inc
pusha
lds
or
clc
out
pop
sub
push
push
popf
push
shr
jb
mov
and
sbb
jecxz
daa
bound
adc
scas
loop
add
add
cwtl
dec
jae
scas
xchg
loop
pop
fsts
pop
test
mov
mov
icebp
inc
rcrl
dec
jg
add
mov
inc
mov
and
pop
push
popf
outsb
xorb
inc
fsts
cmpsl
std
call
inc
out
cwtl
fxch
test
fwait
call
fs
dec
mov
push
dec
or
sbb
push
fisttpl
cmp
jns
cmpsb
push
inc
ss
or
addl
cltd
movsb
clc
push
push
ficomps
insb
mov
sbb
dec
cmp
or
scas
sub
pop
rcll
in
xchg
push
cs
jb
xchg
push
imul
insl
inc
cmpsl
daa
xchg
pop
mov
loop
outsl
jo,pt
jl
mov
or
jl
or
and
jne
mov
mov
xor
aaa
lds
sbb
adc
jno
pcmpgtw
jmp
aaa
or
jno
stc
and
mov
pop
sti
aam
mov
aaa
pop
pushf
dec
arpl
xchg
cmp
pop
bswap
pushf
inc
dec
insb
xchg
pop
xchg
pop
cmpl
xor
fldt
jb
int
adc
outsl
mov
stos
pop
movsb
dec
or
pusha
lods
sar
jp
mov
cwtl
outsl
and
jg
dec
lods
fadds
xchg
lock
in
mov
inc
pop
outsb
push
inc
jmp
insl
cmpsb
and
add
cmp
xor
sub
inc
adcl
inc
das
xor
push
hlt
repnz
repz
in
mov
push
test
ret
fcomip
pop
sbb
insl
dec
push
call
lret
xor
push
dec
pop
xchg
mov
or
sbb
cmp
xorl
dec
int
clc
std
bound
int
sahf
lods
lret
mov
pop
into
mov
lds
and
in
xor
and
std
lock
pop
xor
or
cmp
out
rolb
adc
or
int3
add
pop
xlat
sarl
push
outsl
imul
pop
incl
adc
mov
mov
push
sub
mov
pop
sub
mov
adc
sbb
add
cmp
adc
pushf
pop
mov
stos
jne
lods
je
scas
push
pop
or
in
push
push
mov
cmc
sub
jp
inc
std
mov
aam
push
add
mov
insb
nop
inc
inc
inc
cmp
fmull
mov
or
daa
js
jo
sub
movsb
and
xchg
aam
je
adc
add
push
ss
sbb
fsubrs
pop
or
xor
dec
in
cmp
stos
out
xchg
movsl
add
inc
jecxz
ja
inc
mov
dec
jg
pop
push
nop
xchg
inc
xor
sbb
ss
in
cltd
push
push
stos
test
jmp
lods
jne
or
cmp
imul
xchg
xchg
andb
fs
clc
mov
btc
sbb
xor
jno,pn
aaa
xorb
dec
mov
int
jl
cmpsl
cmp
dec
std
divl
cmp
mov
cltd
jle
push
loop
sub
cmp
dec
adc
out
gs
sub
ret
pop
sub
bound
mov
das
js
roll
mov
inc
stos
jnp
xor
xor
adc
lea
or
mov
adc
sbb
push
icebp
or
inc
xchg
nop
mov
jb
pop
js
jp
testb
adc
mov
inc
outsb
jg
jns
xchg
jbe
adc
sub
mov
in
pop
js
stos
pop
mov
hlt
out
mov
das
xor
add
sub
fbstp
cwtl
push
xchg
dec
pop
mov
mov
cmp
mov
adc
aam
cmpl
push
sbb
notl
and
xor
ds
scas
pop
pop
loope
jle
mov
cld
sub
inc
stos
out
clc
cmpsl
sub
jmp
xor
or
repnz
inc
push
xchg
sbb
ss
sub
les
add
lock
sub
and
aad
inc
sbb
lahf
push
sbb
add
xor
adc
dec
and
mov
popf
pusha
push
add
in
mov
jl
lock
push
inc
in
cmp
mov
adc
add
jne
dec
xor
idivl
into
test
push
out
and
testb
cmpsb
push
ret
xchg
leave
inc
mov
lret
fisubrs
inc
shll
sbb
outsl
rorl
andb
stos
jne
nop
pop
adc
mov
dec
mov
ret
pop
divl
mov
movsl
ja
pop
push
dec
sahf
lods
aad
xchg
jnp
mov
add
jmp
pop
int3
movsb
sub
aad
fs
sub
arpl
jbe
and
daa
lods
arpl
ds
in
sub
jp
pop
je
sarb
jecxz
in
push
inc
jg
data16
aas
cmp
fnstcw
rclb
lahf
aaa
pushf
adc
seto
lcall
add
dec
xor
or
scas
jns
mov
jg
addr16
xor
subl
cwtl
fmul
hlt
cmp
adc
and
in
cmp
iret
data16
shlb
xchg
sbb
sbb
pop
je
test
pushf
sbb
xchg
mov
jnp
xchg
fsubrl
nop
adc
adcl
pop
fcmove
jbe
xor
lock
je
jecxz
mov
jbe
mov
push
inc
gs
adc
cmpsl
sub
loopne
fisttpl
inc
inc
flds
push
or
lods
dec
jns
imul
movsl
out
and
insb
aad
mov
xor
fs
inc
adc
cmpsl
imul
push
push
ret
push
mov
iret
mov
xor
sub
add
jae
jl
rclb
push
insb
mov
shrb
lret
xchg
cmpsl
dec
adc
pop
cli
cmp
sub
cmpsb
sbb
sbb
sub
sbb
sahf
es
pop
cwtl
adcb
sub
inc
out
stos
imul
xchg
sarl
sar
jne
sbb
in
lods
pop
rcr
cs
mov
pop
dec
xchg
xor
push
in
push
inc
pop
loopne
loope
jle
in
or
push
in
push
ret
enter
or
pop
add
pop
xchg
jmp
ret
adc
jb
fcmovu
int3
lret
and
and
jbe
jns
pop
xor
inc
mov
inc
mov
cmp
adc
or
xor
in
xor
rcr
push
bound
or
or
test
sbb
fisubrl
fs
jbe
bnd
hlt
or
xor
pop
mov
jns
inc
push
xor
mov
scas
sbb
enter
stos
pop
mov
frstor
arpl
aam
pushf
cmp
sub
sub
call
or
add
adc
and
xchg
les
sub
inc
and
test
fildl
shl
das
mov
add
jae
pusha
into
orb
xchg
hlt
or
out
pop
in
lcall
mov
fprem1
xchg
pop
leave
lock
inc
xchg
xchg
or
mov
mov
and
mov
pop
in
out
sub
push
pop
dec
scas
push
pop
sbb
xor
push
xor
pusha
icebp
dec
dec
aad
push
popf
or
orb
push
aam
jge
pop
dec
or
es
xchg
cmp
dec
jl
cmpsl
and
sbb
into
in
dec
ficompl
inc
into
mov
mov
test
mov
das
cmp
push
daa
enter
jle
mov
test
ret
lods
add
push
push
or
pushf
sbb
int3
mov
ficomps
subb
and
and
xchg
pop
leave
mov
sbb
rorl
dec
sub
test
and
jnp
and
lods
enter
and
fs
adc
call
or
push
loope
out
dec
mov
sub
xchg
mov
mov
xchg
mov
cmpsb
adcl
pop
jns
push
repnz
or
sahf
cmpsb
sub
xchg
lock
cltd
or
rcr
mov
fisttpl
out
pop
jnp
xchg
addr16
and
imul
loop
xchg
sbb
dec
fldt
jmp
xchg
stos
icebp
push
stc
sbb
lahf
ljmp
and
sarb
loope
test
es
sub
andb
adc
push
clc
andl
jge
clc
push
insb
inc
in
mov
mov
add
add
dec
into
jl
in
push
fimuls
mov
ss
out
inc
daa
enter
in
mov
jge
pop
ljmp
sbb
out
es
or
js
cmpsl
imulb
dec
popf
ss
mov
pop
mov
pop
pop
and
or
out
inc
lea
scas
pushf
ret
lds
cmp
adc
xchg
in
in
cld
xor
sbb
and
out
xchg
push
shlb
jp
cmp
jae
loop
das
mov
adc
mov
dec
push
in
scas
roll
jg
dec
mov
cmpsb
or
pop
dec
push
sbb
pushf
pop
inc
pop
dec
mov
dec
push
jle
and
cmp
dec
and
sti
icebp
or
mov
push
daa
jle
inc
xchg
ja
imul
mov
xlat
xor
adc
scas
mov
xor
mov
cmc
pushf
aas
outsb
ljmp
push
cli
fwait
sbb
adc
imul
cmp
xor
fdivr
adc
cld
clc
or
mov
inc
lods
sti
xchg
loop
pop
inc
lcall
push
pop
inc
dec
lcall
jmp
mov
xchg
mov
push
sti
inc
push
into
fisubrs
call
js
sbb
and
ds
or
or
in
inc
xchg
lea
mov
inc
sar
push
xchg
dec
lret
xor
scas
stos
cwtl
add
jo
mov
loope
mov
mov
pop
outsb
mov
mov
daa
jnp
sbb
push
cld
sti
jno
jge
adc
les
ja
loope
fstps
fsubrp
jns
push
sbb
adc
stos
dec
mov
mov
sbb
and
dec
dec
je
sub
lret
setg
push
bound
sbb
in
rcll
test
push
sbb
adc
loopne
xchg
and
ljmp
dec
cmpsl
xchg
cmp
or
dec
inc
or
cmpsl
sbb
dec
scas
sub
popa
dec
cmpsb
cmp
lahf
pop
add
mov
xchg
adc
pop
cmp
pop
dec
lock
jl
inc
inc
hlt
mov
cld
les
xor
dec
inc
roll
or
mov
movsb
and
imul
adc
mov
mov
adcb
lock
xor
and
jl
fwait
xor
enter
imul
mov
cs
mov
mov
xchg
movsl
cltd
jbe
inc
fwait
pop
iret
cmp
pop
out
out
sti
pop
mov
jb
lods
jmp
leave
mov
dec
mov
ljmp
fldcw
jno
lret
stc
xorb
ss
adc
movb
cmc
mov
outsb
ret
stos
sbb
cmp
fwait
jno
cmp
in
and
sti
add
lahf
sbb
xor
pop
cmpsb
insl
stos
inc
mov
das
mov
xchg
fsubrs
push
mov
repz
jbe
push
xor
xchg
fdivs
mov
cmp
hlt
mov
mov
sbb
dec
push
ds
cmp
inc
add
jns
lods
adc
pop
aad
or
sbb
call
push
jmp
daa
loopne
dec
lods
int3
mov
or
rclb
mov
ja
cmp
cmp
and
lock
adc
pop
popf
lret
hlt
les
adc
mov
mov
out
int3
mov
sub
ja
loopnew
cmp
dec
data16
sbb
scas
dec
push
leave
ljmp
lods
lret
sti
adc
lcall
das
lods
dec
fwait
and
iret
decl
je
mov
cmp
cmp
adc
push
mov
mov
call
adc
add
es
mov
fisttpll
or
jb
ss
rcll
pop
ljmp
lahf
jmp
imul
into
jbe
sub
std
lock
mov
xorl
sub
mov
lods
push
cli
xor
lods
in
and
leave
push
push
mov
sub
stos
add
jbe
mov
fisttps
and
outsb
loop
sbb
movb
xchg
cmp
outsl
cltd
cmpsl
ja
adc
or
call
loop
test
push
or
jnp
out
xor
jg
dec
shr
push
sbbb
or
movsl
dec
xchg
repnz
mov
sti
getsec
mov
cmp
aas
sub
push
lret
cwtl
xchg
mov
dec
dec
out
out
ret
psubsb
mov
int3
dec
in
mov
xor
inc
or
push
mov
pop
xor
sub
cmp
in
push
mov
xchg
mov
adc
out
mov
pop
push
xlat
inc
test
mov
dec
add
adc
sbb
aad
loope
xchg
insl
xor
lahf
out
mov
aad
int3
or
mov
jno
push
in
jne
fs
inc
in
add
popa
es
mov
mov
mov
or
add
fucomip
pop
leave
push
dec
mov
sbb
inc
test
rorb
ror
add
mov
mov
and
icebp
mov
repnz
mov
mov
xor
call
pop
jg
adc
add
add
test
xchg
mov
push
in
popa
cmpsb
or
fstl
mov
xchg
out
sub
mov
dec
adc
shrb
xor
test
jg
testl
test
es
sub
ret
in
push
shll
imul
les
mov
or
int
int
inc
sbb
ljmp
push
mov
mov
sysexit
fldt
mov
adc
rcrl
into
dec
popl
pop
in
lods
and
addb
inc
push
popf
clc
repz
xchg
mov
xor
fcomps
adc
or
mov
movsb
or
outsb
mov
movsb
sbb
ja
sbb
push
xlat
into
cld
addr16
and
je
jle
rorb
in
loopne
fwait
or
loopne
pop
xchg
mov
int3
push
cmc
jns
mov
mov
lret
adc
or
cli
add
outsl
gs
iret
pop
js
je
mov
mov
push
fmull
fisubl
lods
inc
dec
cmp
ret
inc
popa
add
loopne
shrl
inc
mov
in
mov
lret
lock
xor
xlat
arpl
lods
add
push
je
add
push
push
xchg
mov
out
jns
pop
shr
inc
push
inc
cmp
sub
cwtl
int
sahf
addr16
adc
out
cltd
sbb
pop
cmpl
mov
and
xorb
stos
in
jne
pusha
fmul
in
xchg
mov
mov
sbb
lret
loopne
jl
into
scas
in
and
pop
or
in
jo
jmp
aas
adc
inc
aam
push
jns
lea
nop
mov
push
dec
sbb
jle
js
daa
push
jbe
cmp
or
and
xchg
out
cmp
sbb
inc
and
aaa
pop
out
mov
xchg
adc
scas
inc
mov
pop
xchg
push
mov
pushf
cmp
pop
sub
ss
mov
mov
out
stc
imul
xor
jne
test
pop
ret
mov
xchg
fisubs
push
xor
jge
xor
out
sbb
push
adc
cmp
cmp
inc
or
cs
push
or
std
aam
insl
inc
or
faddl
add
dec
outsb
das
jbe
out
add
sar
mov
imul
lds
dec
cld
pop
or
cmc
and
addr16
movsl
sbb
insb
in
enter
orb
scas
insb
insl
adc
inc
in
and
cmp
mov
mov
xchg
add
sbb
or
nop
dec
shl
sti
js
jb
sub
cs
dec
adc
jae
jmp
push
repnz
xor
mov
dec
sub
add
push
ret
pop
adc
cld
lret
in
jo
mov
xchg
sub
fcos
mov
dec
xchg
aas
cmp
sbb
push
push
stc
test
imul
imul
shr
ss
mov
jl
js
inc
mov
clc
add
shll
pusha
xchg
js
cmpsb
gs
cmpsb
stos
dec
pop
int
mov
roll
or
mov
rclb
out
aad
mov
mov
sub
out
fpatan
lret
sbb
loop
loopne
rcrl
lret
test
mov
xchg
pop
sahf
aad
jmp
bswap
jmp
popa
lods
popf
incl
test
xchg
cld
push
add
aam
jecxz
adc
movsb
nop
lods
dec
inc
cmp
mov
fs
punpcklbw
repz
sahf
or
dec
sub
mov
cltd
lock
cmc
iret
in
pop
mov
pop
iret
cvtpi2ps
inc
fstps
pop
cmp
scas
ja
cmp
xor
and
rcll
jmp
popf
xor
into
cltd
icebp
cmpsl
mov
sub
lock
lock
mov
add
pusha
scas
xchg
add
pop
xchg
nop
and
aad
fs
fsubrp
dec
icebp
and
or
mov
dec
ror
add
mov
daa
jge
jne
shll
mov
cmc
or
push
cmp
rcrb
repnz
jae
arpl
fidivrl
pop
loopne
mov
loopne
jecxz
inc
js
inc
mov
andb
cmp
orb
dec
sbb
push
inc
inc
and
jae
xor
sti
loopne
fistps
inc
cmp
sarl
mov
ljmp
insl
ret
das
popf
fadds
lret
imul
lods
pop
inc
jnp
xchg
inc
push
repnz
mov
push
dec
mov
addl
lsl
mov
push
lea
pop
dec
bound
flds
cmp
inc
aad
js
xor
mov
inc
or
es
pop
cli
xchg
jns
pop
mov
adc
dec
push
into
cli
addr16
jp
fistpl
imul
push
lret
test
inc
int
and
add
adc
push
mov
hlt
clc
push
cmp
pusha
and
push
fwait
lock
js
sbbb
pop
inc
nop
ret
lcall
xor
jl
jl
popf
mov
add
ret
scas
lock
xlat
jge
or
bound
lcall
les
dec
shl
into
xchg
xor
shlb
lods
stc
scas
inc
bound
out
mov
mov
aad
adc
pushf
or
stos
pushf
or
out
jnp
repz
fcmovnb
pop
stc
cs
dec
scas
fcomi
jle
shll
inc
adc
outsl
in
or
push
mov
loope
push
cmpsb
xchg
dec
inc
movsl
loopne
dec
dec
xchg
mov
sti
shrb
cmpsb
sbbb
es
in
mov
rcrb
inc
push
add
out
cmp
or
popa
sbb
movsb
shll
xor
sbb
and
xor
subl
push
cmp
scas
aas
mov
pop
out
xchg
xor
hlt
pusha
adc
and
ficompl
insb
ficompl
add
dec
xchg
push
push
pop
jo
cmpsl
adc
or
nop
test
insl
jo
lds
js
ficoml
sbb
jg
jmp
push
adc
jg
fcomps
sbb
xlat
fcompl
jnp
sahf
mov
cmp
data16
dec
adc
hlt
rcl
in
fnstsw
inc
fdivl
jmp
push
nop
mov
xor
in
push
out
jbe
cmp
push
adc
push
and
mov
jne
add
add
fcmovne
test
js
cmp
cltd
pop
sahf
je
cltd
and
push
int3
fdivs
jae
inc
push
push
push
sar
cmp
adc
test
sahf
rolb
js
popl
fistl
jns
jle
out
out
movsl
test
dec
pop
test
jg
jecxz
cmp
jecxz
and
fmull
icebp
xorb
movsb
mov
add
movsb
fsub
dec
int3
dec
add
mov
inc
mov
lds
les
adc
push
adc
sbb
rorb
fsubrs
icebp
out
cmp
sarl
out
aam
inc
aaa
hlt
xchg
push
mov
movsl
push
xchg
roll
fcomps
xchg
movsb
mov
pop
mov
jmp
aas
nop
sahf
scas
icebp
into
jecxz
xor
mov
loop
push
mov
push
dec
aaa
xchg
fdivrs
repz
scas
mov
sti
call
and
add
loope
jae
cmp
cmp
sub
imul
and
scas
sbb
add
add
ds
jp
mov
ljmp
sbb
repnz
inc
jl
mov
hlt
dec
dec
iret
xor
imull
pop
ljmp
jbe
and
in
or
leave
push
mov
sbb
dec
das
sub
les
jb
dec
xlat
sahf
xchg
stos
add
jb
or
pop
mov
outsl
fbstp
test
scas
adc
fstps
mov
lods
adc
into
in
cmp
sbb
loopne
out
add
jns
push
jmp
aaa
test
rol
or
loop
fisubrl
or
stos
aad
dec
subb
loope
ljmp
out
cmpsb
push
push
lds
pop
sub
inc
fldt
and
aad
fisubrs
repz
push
fcmove
bound
pushf
inc
das
xchg
and
loopne
std
and
jle
cmc
incb
add
mov
popa
pop
test
adc
scas
movsl
stc
mov
pop
mov
jnp
into
cmp
pop
idivl
adc
lcall
movsl
mov
xor
mov
lahf
push
sbb
sub
out
cmpsl
popf
cli
cmp
ret
insb
aad
dec
adc
pop
je
orb
lcall
add
pusha
mov
pop
aaa
shll
xchg
mov
clc
lahf
shrl
outsl
xor
inc
xchg
sub
or
xchg
loop
bound
mov
leave
fmull
cli
setbe
sti
sbb
pop
sub
lea
out
ret
sub
cld
bound
jne
fildll
fldl
jb
sbb
pop
cwtl
or
sbbb
faddp
cmc
notb
mov
movb
inc
in
outsl
or
xchg
and
outsb
xchg
roll
fnstcw
mov
xor
data16
mov
push
xor
xor
sbb
push
push
addb
xor
fwait
dec
aad
add
and
cltd
xchg
dec
inc
xchg
das
fldl2e
stos
xor
into
and
cmp
testl
out
push
push
adc
outsl
out
lret
adc
std
stos
rorl
sub
xchg
mov
pop
nop
scas
xor
mov
or
out
mov
and
mov
pop
xchg
mov
aaa
cmp
inc
mov
jg
popf
mov
jae
call
pop
xor
xor
xor
xchg
add
xchg
mov
sub
xchg
jecxz,pt
mov
sbb
movsb
jmp
sahf
and
mov
add
aas
mov
xchg
stos
daa
cld
sub
mov
jo
popf
daa
das
imulb
rol
aaa
inc
shll
pop
cmpsb
in
sti
push
repz
sub
hlt
push
mov
int3
pop
in
sbb
xchg
mov
insb
fimuls
int
pop
xchg
dec
xchg
stc
cmp
dec
adc
imul
lods
test
mul
or
das
scas
jae
je
ja
int3
mov
daa
xor
mov
xor
and
jecxz
out
push
mov
dec
xchg
adc
jecxz
cmc
cmp
sub
shll
mov
leave
mov
mov
and
aaa
pusha
idiv
dec
cld
fwait
dec
gs
push
lahf
int
sbb
adc
sahf
or
push
sbb
mov
or
jb
jno
cmp
dec
pop
sbb
pusha
add
ret
and
adc
sbb
pop
xchg
jo
shrl
xor
push
mov
jmp
xchg
idivb
dec
fs
out
arpl
mov
adc
xor
aad
inc
mov
lret
mov
mov
aas
sbb
inc
cmp
sbb
sbb
jo
loopne
cmp
mov
add
fucomi
sbb
dec
xchg
add
std
out
xor
push
mov
adcl
sarl
fwait
xor
mov
std
and
aam
mov
push
add
les
nop
push
popf
add
popa
sahf
xor
aaa
push
pop
int
add
mov
test
loopne
insl
push
mov
add
decl
pusha
fucomp
loop
xor
add
jge
mov
mov
inc
imul
out
ret
mov
jl
leave
adc
lahf
sbb
gs
daa
inc
fcmove
popa
jnp
and
cmpsb
push
bound
decb
popa
inc
faddl
in
insl
in
pusha
push
pushf
repz
sub
out
inc
in
pop
ret
mov
pushaw
jo
inc
addr16
aam
mov
lods
dec
xchg
jae
add
ja
enter
cld
push
pop
dec
pop
test
pop
add
out
adc
dec
fisttps
xchg
dec
lock
inc
add
in
pop
mov
sbb
mov
aaa
movsb
xor
and
movl
mov
sbb
cwtl
pop
aaa
add
xlat
lret
cltd
cmp
cmp
out
sbb
ljmp
loop
mov
out
dec
adc
ret
sti
loop
mov
dec
aas
sti
inc
jo
fnstenv
adc
repz
fdivl
and
insb
stos
jbe
pop
pop
jne
push
push
out
or
pop
repnz
je
mov
mov
inc
jp
mov
movzbl
into
jmp
pushf
test
outsl
jne
inc
cmp
mov
sub
dec
addr16
out
xchg
push
jb
test
xchg
test
shr
in
push
mov
aam
adc
dec
std
lock
cmpb
stc
xor
lret
push
inc
push
ret
loope
in
ret
xadd
dec
outsb
jge
xchg
call
add
fistpl
xchg
lahf
push
ret
push
or
xlat
aad
and
rorl
jge
mov
add
scas
adc
push
xor
imul
lcall
in
sub
jnp
pushf
test
inc
lea
fildll
inc
outsb
pop
je
ret
movsb
xchg
stos
or
fbld
and
jecxz
sub
dec
sub
inc
adc
lcall
mov
lea
and
sub
add
ret
cmp
int
sbb
pop
push
mov
xor
mov
cmp
ja
cmpsl
sub
push
cli
xchg
push
jmp
pop
mov
scas
daa
pop
sbb
sub
jne
cltd
movsb
or
inc
xlat
repz
dec
dec
imul
mov
dec
pop
xor
into
push
jp
outsb
cltd
jp
je
jnp
fldcw
lods
sub
cmp
push
sbb
lods
fsubrs
push
sbb
push
xchg
or
jb
daa
xor
add
cld
fdivrp
jne
shl
xlat
push
in
lods
test
jecxz
push
lahf
popa
lods
add
cmpb
popl
mov
adcl
sbb
xorl
sub
in
lret
jmp
lldt
lahf
jmp
and
lock
fsubl
xchg
xchg
mov
xchg
adc
cmpl
jecxz
xor
fcmovb
sbb
mov
je
aad
add
adc
mov
bnd
arpl
mov
lods
push
cli
inc
sub
and
push
push
inc
dec
mov
mov
movsl
adc
insb
mov
or
mov
push
xlat
stc
cmp
dec
jg
or
out
ret
loope
sbb
mov
shlb
call
cmp
mov
jmp
pop
test
xchg
dec
add
int3
shll
mov
fs
pop
arpl
jo
add
sub
xor
leave
jb
or
in
cltd
cmp
aas
lods
or
jl
lahf
in
ficoms
rolb
cmpsb
jl
and
dec
hlt
stos
out
shrb
dec
cmp
jbe
mov
inc
and
fcoms
pop
mov
xchg
mov
in
pop
jno
xchg
outsl
sbb
sub
das
cld
int
movsb
mov
cmc
rcrl
ss
mov
inc
xor
dec
and
repz
dec
xchg
jg
pop
mov
sub
jne
push
ljmp
push
dec
mov
jp
mov
mov
xor
jp
loop
mov
xor
jo
mov
repnz
sub
sbb
add
std
rcrb
insb
jg
lahf
or
decl
data16
sbb
aas
int
sub
xchg
call
imul
pop
lcall
pop
enter
dec
loop
icebp
in
fmuls
inc
push
pop
add
ljmp
xor
fwait
push
fs
add
cwtl
pop
inc
jnp
repnz
mov
xor
mov
mov
sub
pop
xor
call
xor
unpcklps
cli
mov
inc
sub
inc
outsb
mov
pop
jnp
dec
xor
xor
sti
inc
nop
sbb
push
insb
fstpt
push
mov
jmp
fiadds
pop
push
mov
out
roll
inc
sahf
mulb
daa
ficompl
jl
xlat
add
push
std
icebp
fcmovu
les
xchg
ret
out
jle
sbb
adc
add
fmul
jle
sbb
lds
add
jno
std
xor
lcall
dec
shll
fiaddl
and
lods
packsswb
cmpsb
mov
cs
dec
je
sub
jb
test
pop
pop
rol
mov
cmp
push
ja
mov
movaps
adc
cmp
fs
inc
xor
popa
mov
rcll
add
xor
es
mov
add
pop
push
shr
adc
idivb
popf
pop
ljmp
aam
push
mov
rcl
jl
test
aad
xchg
jp
cmpb
rcrb
jb
nop
dec
jno
pop
push
jmp
sub
sarb
std
sbb
pop
cmp
fsts
leave
mov
sbb
faddl
jne
pop
mov
mov
jnp
xchg
daa
outsl
pop
std
lahf
or
inc
into
mov
push
es
cs
pop
cwtl
cmpsl
dec
std
xor
push
jbe
lds
cs
jbe
lret
mov
cmp
sbb
aad
add
test
or
inc
cmp
popa
idivb
mov
scas
pop
out
scas
out
inc
or
stos
call
outsb
test
lret
leave
mov
cwtl
fistpll
lds
adc
sub
stos
xchg
je
lds
test
sbb
cmpsb
movsl
dec
fildl
adc
sbb
test
jns
push
clc
push
lahf
adc
ds
push
cmpsb
ds
fwait
adc
stos
mov
jnp
mov
clc
pop
fildl
inc
scas
dec
aas
int3
repz
cwtl
jne
xor
add
cmp
dec
push
mov
cld
jecxz
or
daa
gs
mov
inc
adc
xchg
mov
ret
es
pop
sarl
xchg
push
add
outsb
xor
pop
loopne
or
loopne
mov
das
and
divl
adc
stos
stc
jb
pop
push
xchg
jo
mov
push
xor
jge
adc
cmc
jp
or
jge
mov
mov
sub
push
aas
push
jb
push
sbb
mov
daa
enter
js
xchg
push
pop
gs
fisubs
fildll
adc
andl
daa
mov
jge
jne
movb
adc
jg
gs
jmp
scas
divb
aaa
aam
dec
dec
dec
cmp
fs
adc
xor
adc
xchg
adc
ret
jb
mov
ret
push
popf
ret
or
ficomps
aas
cmc
or
sbb
mov
pop
divl
push
clc
loope
xchg
jge
mov
add
pop
xchg
dec
sar
popa
adc
inc
cmp
mov
mov
and
push
cmp
dec
out
cmp
pop
mov
jge
int
int3
sbb
mov
jge
int3
sarb
stos
jb
fmulp
rcrb
cmc
inc
lea
ffree
mov
das
in
and
cmp
outsl
fisttpl
or
aad
shrl
arpl
pop
jnp
shlb
inc
cmpsl
popa
bound
sub
or
mov
mov
push
mov
cmp
mov
jne
imul
pop
push
in
fdiv
clc
adc
adc
mov
push
pop
jmp
adc
movsb
int
sbb
mov
stos
inc
push
sub
lds
dec
and
ljmp
dec
aas
movsb
add
xorl
outsb
fsubrl
adc
push
es
rcll
sbb
mov
push
in
adcb
out
nop
xchg
fbld
pushf
xor
or
mov
push
sub
stc
xor
push
sub
sahf
dec
aas
mov
rorl
xor
add
xor
stc
sub
xchg
insb
pop
cmc
scas
lcall
adc
frstor
cmp
xchg
push
adc
testb
mov
std
fdivp
jo
into
cli
fcmovnu
inc
dec
xchg
je
push
sbb
js
cwtl
mov
mov
rorb
cld
fisttpll
je
nop
imul
mov
xor
sahf
xlat
daa
mov
lcall
and
jae
je
imul
sbb
int3
aaa
lds
cmovns
inc
shl
popa
pushf
pop
sub
sbb
adc
bound
and
xchg
insb
ret
cli
lock
push
jo
mov
jno
push
clc
mov
xchg
out
cmp
mov
cmc
nop
mov
mov
lods
mov
mov
xorb
imul
fistpll
pop
cwtl
sbb
cwtl
iret
test
shll
or
push
sub
jecxz
xchg
pop
bnd
or
popf
inc
dec
mov
xchg
add
shrb
sbb
add
sbbl
xchg
adc
fists
cmpsb
cmp
pop
into
in
mov
xor
lret
xor
repnz
and
scas
add
das
mov
gs
popa
jmp
or
inc
dec
fisubl
or
jns
mov
mov
cmp
inc
sarl
stc
xchg
inc
sbb
cwtl
mov
outsl
pop
in
mov
adcl
mov
or
loopne
in
pop
fldt
fs
pop
mov
out
das
add
loop
inc
inc
imul
and
push
cli
ret
push
jge
ds
andl
ss
adc
add
hlt
xor
arpl
xor
mov
mov
dec
mov
mov
scas
cmp
push
scas
cmpsl
aam
xlat
sarl
jne
out
dec
js
int
xor
cmp
scas
xlat
mov
call
aas
pop
and
notl
push
les
cmp
sbb
test
mov
cmpsb
rorl
int
sub
mov
test
pop
add
jmp
sahf
jns
out
dec
iret
aam
mov
and
pop
inc
das
sub
and
mov
fidivs
fwait
ja
shrl
add
test
lods
loopne
cmp
mov
pusha
xor
and
bound
push
pop
mov
stos
test
jno
ret
sub
pop
fcmovnbe
or
repnz
mov
repz
inc
inc
sub
fisttps
je
aam
mov
mov
add
lock
jbe
fnsetpm(287
xor
adc
mov
addr16
xchg
sbb
or
ja
js
push
dec
fucomip
sti
or
test
test
subl
aaa
mov
inc
jge
pushf
dec
aad
dec
xor
and
or
shll
sub
lcall
inc
dec
sub
push
sub
movsl
outsl
pop
pop
or
pop
cmpsl
mov
mov
out
xchg
shl
std
dec
jns
popa
addl
add
mov
bound
push
jb
bound
mov
pop
jo
fdivrl
cmpsb
fdecstp
mov
clc
cmpsl
xchg
mov
xor
inc
add
mov
ret
std
pop
dec
fcom
mov
out
movsl
xchg
out
fcompl
pop
jns
out
adc
cmp
dec
mov
clc
ret
pop
lret
outsb
cmp
and
idivl
repz
test
sub
jp
jmp
ss
shlb
mov
xchg
jns
xlat
idivb
gs
push
dec
xor
test
push
insl
out
jp
jge
divb
push
addr16
subb
pop
das
arpl
push
or
push
adc
mov
movsl
push
jle
mov
jns
cmp
dec
inc
sbb
mov
aaa
dec
fldt
mov
jnp
and
test
mov
cmpsb
pop
xchg
loope
jp
push
add
daa
cmc
addr16
loop
and
adc
insl
out
sahf
ljmp
scas
xchg
pushf
loopne
pop
stos
cmpsb
pop
stc
daa
cmp
into
into
or
dec
push
jle
mov
fistps
insl
push
aas
xorb
cmp
cmp
in
out
xor
test
xchg
add
sub
sub
imul
xchg
add
sbb
stos
mov
popf
into
outsl
and
add
lahf
cmp
jb
in
lcall
add
cld
or
aas
call
push
pop
inc
test
mov
scas
inc
xchg
sahf
sti
mull
shrb
adc
int
out
rcl
arpl
xor
dec
mov
sub
fs
sbb
rorb
fwait
adc
mov
jne
inc
push
mov
lret
xor
notb
cld
mov
jno
push
notl
pop
jmp
fidivs
add
xchg
xchg
mov
aam
mov
icebp
icebp
scas
cmp
push
push
sbb
insb
ljmp
push
lret
xor
ljmp
inc
add
pop
lea
sahf
sbb
sub
popf
negb
mov
test
pop
sarb
inc
rol
pop
xchg
enter
add
sub
jge
push
clc
sub
jg
in
mov
mov
icebp
mov
pop
adc
mov
shll
xor
lock
cmp
push
push
stos
push
daa
xor
or
and
mov
js
data16
loopne
sarb
dec
pop
and
test
je
in
ds
shl
loope
mov
push
jg
data16
pop
sub
push
ficomps
repnz
inc
xchg
push
out
mov
jo
sbb
out
mov
pushf
and
sbb
xchg
lret
out
cltd
ret
mov
adc
fs
out
push
and
mov
sub
xchg
mov
push
jae
xchg
out
and
pop
or
xchg
out
mov
xchg
sbb
pop
pop
and
inc
fisttps
push
dec
push
out
scas
or
call
push
outsl
sbb
add
stc
aam
push
or
loop
jno
push
inc
mov
les
jne
insb
pop
fiaddl
aaa
addr16
aad
push
nop
fisttpl
push
sbb
cli
mov
mov
jno
jmp
xor
xchg
push
leave
add
mov
adc
and
and
jecxz
or
data16
xor
mov
mov
in
lret
fs
jmp
fs
pop
pop
xlat
mov
sarl
mov
fisubl
jne
xor
sbb
sbb
mov
mov
mov
jne
jbe
into
sar
stc
sbb
sub
ficompl
inc
push
xor
jle
push
and
dec
movsl
mov
fstps
sub
in
sbbl
aam
mov
lea
adc
xchg
xor
rclb
inc
pop
adc
jecxz
jns
movsl
xchg
xchg
imul
sub
idivb
iret
jb
test
cwtl
dec
sub
sub
add
fadd
add
aaa
dec
movb
enter
js
inc
jmp
adcb
lret
cmp
and
leave
lahf
mov
icebp
dec
enter
call
or
cmpsb
cmpsl
ljmp
outsl
cltd
mov
xor
mov
lcall
shlb
adc
dec
arpl
mov
shlb
xor
cltd
mov
lret
push
pop
pop
sarl
fsub
dec
sub
das
bound
dec
test
popf
xlat
cli
stc
xor
cltd
mov
push
repz
sub
xlat
sub
fdivs
sbb
xor
mov
sti
ficompl
subl
aaa
mov
pop
dec
sbb
lods
cmp
loop
mov
outsb
aad
inc
adc
push
ret
xchg
mov
adc
jo
push
into
bound
rcr
lea
popa
lea
mov
mov
inc
pop
clc
adc
pop
adc
jp
les
out
iret
into
in
ds
xchg
xor
adc
add
jo
sti
xor
push
divl
out
ds
xor
pop
hlt
cs
xor
repnz
and
movsl
and
addr16
leave
ds
push
mov
rorb
push
lcall
arpl
sarl
js
cmp
hlt
das
cmp
and
scas
lock
mov
lods
popf
jle
cmp
mov
hlt
or
pop
cwtd
or
lret
jns
out
ret
xor
cltd
lcall
jle
enter
or
xor
lret
jno
mov
mov
mov
pushw
scas
idivb
jp
shr
fnstcw
pusha
cmpsl
lock
pop
cmp
sarl
insl
cli
and
pop
dec
mov
sub
mov
test
clc
lcall
sub
pop
mov
arpl
jg
shl
fistps
arpl
add
les
je
xor
fmull
sti
addr16
popa
int3
and
loop
push
jno
imul
or
cmc
and
ja
dec
data16
xchg
adc
insb
dec
cmp
add
fisttpl
push
das
lret
loopne
fwait
mov
and
cmpsb
sub
mov
lcall
shlb
jns
es
addr16
xlat
sub
jne
ja
movsl
jl
lahf
jmp
push
pop
loop
test
aam
int
cmc
scas
and
mov
fsubrs
in
push
xor
add
rorb
es
movsl
mov
out
sahf
dec
divps
fidivs
std
mov
jecxz
mov
data16
dec
lods
cmp
sub
sahf
xchg
adc
scas
pop
mov
sub
pushf
or
bound
jne
mov
cmp
mov
mov
dec
andl
into
incl
faddp
and
inc
xchg
xchg
outsb
sahf
popf
mov
mov
push
bound
pop
add
js
jmp
cmpsb
xchg
orl
aad
mov
sbb
xchg
stc
and
int
push
lds
cwtl
pusha
sbb
movsl
lock
movsl
cld
jg
les
scas
addr16
bound
aam
rorl
mov
mov
lret
mov
and
lahf
fistl
in
push
call
mov
out
sub
out
mov
out
jl
js
mov
mov
or
mov
push
std
mov
add
aad
repz
adc
or
xlat
lods
and
adc
xchg
mov
xchg
in
fsubr
lcall
xchg
adc
out
sub
mov
pop
in
sbb
sub
ret
mov
and
in
jb
cld
jbe
and
loop
sub
aam
pushf
popfw
mov
xor
in
dec
rclb
jge
ret
xlat
shr
mov
std
push
imul
xchg
xchg
jle
jae
mov
dec
lds
sub
idivl
push
or
mov
cwtl
je,pt
pop
cmovge
mov
jmp
popf
ret
dec
mov
mov
or
fwait
insl
ja
jle
xor
sbb
mov
and
push
mov
inc
imul
mov
mov
leave
int
dec
jp
cli
add
jns
fiadds
incb
sbb
addl
adc
mov
into
mov
movsl
dec
sub
loop
ret
sti
jno
and
cld
ss
mov
adc
loopne
stos
js
in
ror
sbb
and
sub
jecxz
movl
flds
push
xchg
pop
arpl
sbb
xchg
add
mov
ret
cmpsb
push
push
sti
cltd
sbb
clc
add
cmp
xchg
push
aas
mov
shll
nop
or
lea
push
enter
sbb
jb
or
js
mov
lods
push
mov
mov
pop
mov
mov
adc
jmp
dec
out
xchg
pop
pop
mov
repnz
mov
test
pop
hlt
pop
ljmp
mov
repz
cmp
cli
jmp
loope
jae
adc
inc
mov
imul
sub
push
jmp
and
iret
stos
pop
lods
sahf
lds
fcoms
leave
insl
nop
shlb
test
fisttps
gs
mov
xor
inc
leave
inc
adc
rclb
lods
lret
dec
sbb
jle
inc
and
rcrb
lahf
mov
es
xchg
jae
sub
dec
lods
mov
mov
cmp
sbb
stc
leave
imul
in
clc
dec
mov
mov
xor
std
xchg
movsb
daa
add
jae,pn
mov
iret
lods
movzbl
in
ret
pushf
mov
xor
mov
inc
lret
jmp
loopne
mov
call
les
sbb
andb
movsl
pop
inc
cwtl
out
xchg
jmp
cltd
mov
movl
xchg
cltd
or
cmpsl
pushf
mov
xchg
mov
pop
in
int3
nop
mov
mov
and
ss
popf
inc
mov
out
xor
hlt
add
lea
loopne
or
cmc
xlat
xchg
xchg
test
push
mov
pop
cmp
jo
jo
xchg
das
jae
roll
cld
movsl
scas
je
test
xor
aas
sub
dec
int
into
rcll
cli
xor
push
mov
lcall
cmp
sbb
or
enter
adc
in
pop
mov
cld
add
scas
aam
or
add
jb,pt
or
xor
jge
push
pop
jp
icebp
xchg
cwtl
je
push
addr16
in
icebp
jae
out
add
push
imul
icebp
push
das
out
out
jnp
mov
fcmove
hlt
cmp
les
sbb
mov
sbb
dec
inc
sub
jmp
scas
adc
icebp
aas
sbb
into
sarb
vmovq
in
mov
nop
adc
push
sbb
fsub
mov
das
fisubrl
loope
sbb
xor
fcomps
sub
mov
lahf
dec
or
cmc
add
sbb
push
jge
adc
arpl
test
push
rorb
jnp
neg
or
xchg
sub
and
xchg
jo
or
movsl
shll
add
jo
hlt
les
lods
lret
jne
inc
inc
push
cli
pop
xor
das
lock
xor
in
test
popa
push
ss
and
push
test
and
add
add
adc
out
fistpl
mov
inc
sbb
imul
nop
into
rcll
lock
sti
cli
cld
ljmp
or
js
test
jl
mov
jp
imul
repnz
pop
sub
shll
les
sbb
adc
cmp
setae
dec
aad
xchg
push
pop
dec
stos
push
in
dec
pop
out
test
jecxz
arpl
adc
cmpsl
xchg
mov
loop
sub
dec
out
js
pop
pusha
aad
or
sub
mov
test
xchg
inc
lret
add
push
sub
jns
or
mov
mov
in
rcl
pop
xor
mov
jmp
adc
aas
push
cmpsb
stos
inc
fucomp
insl
clc
mov
push
ret
push
rolb
imul
leave
out
not
jo
sbb
inc
aaa
out
int
out
rorb
add
cld
cmc
js
clc
cmp
aaa
and
cli
stc
imul
addr16
lret
jnp
scas
roll
fstl
pop
and
xchg
outsl
and
int3
nop
cwtl
jno
outsl
pushf
dec
rcrb
cmp
mov
adc
pop
jmp
or
pop
mov
mov
lods
je
data16
cmpsb
aad
std
pop
sub
stos
data16
pop
cmpsb
gs
cwtl
sbb
daa
popf
add
pop
in
push
repz
cld
clc
mov
xlat
pop
idivl
mov
jp
xchg
push
add
pusha
filds
inc
pusha
fwait
inc
call
filds
add
movsb
add
lcall
pop
clc
xchg
fwait
dec
aam
add
jbe
loopne
inc
lock
pop
dec
xor
shl
in
add
mov
cmp
mov
scas
cmp
or
das
enter
fcmovnu
in
iret
and
andl
imul
ficoml
addb
xor
push
aas
sub
shll
lock
push
out
pop
bound
add
adc
dec
movsb
pushf
call
and
divl
xchg
repz
lea
test
test
mov
mov
inc
jnp
and
adc
xor
dec
mov
jmp
insb
mov
iret
xchg
jge
lods
pop
lahf
add
daa
filds
pop
pusha
add
dec
sub
push
insb
pop
scas
and
push
mov
sbb
outsl
push
loope
mov
fisttpll
add
rdmsr
ljmp
cmpsl
inc
cwtl
fildl
jl
adc
pushf
repz
ds
dec
or
or
xorb
or
and
cs
cwtl
and
jmp
mov
and
push
mov
jb
loop
or
in
pop
in
je
ss
inc
out
push
call
inc
or
test
xor
mov
scas
add
xor
xor
xor
pusha
adc
jae
dec
or
data16
xlat
xor
push
das
cltd
jmp
jno
xchg
add
jno
mov
adc
das
out
mov
xor
jmp
push
adc
push
shl
in
js
mov
andb
xchg
out
es
loope
mov
ds
xchg
jecxz
out
jnp
add
dec
int3
adc
loopne
add
inc
mov
cmp
bound
mov
ret
add
gs
out
aas
inc
dec
ja
push
roll
jns
mov
pop
lock
xlat
leave
jae
cmp
xor
ja
nop
push
and
ds
inc
or
xchg
mov
pop
cmp
movsl
xor
pop
leave
cltd
xor
ljmp
sti
mov
mov
sub
cmp
adc
xchg
lds
mov
rcl
xchg
imul
push
push
jns
mov
xor
call
dec
loop
and
dec
lods
in
dec
mov
cmpsb
xchg
lods
addr16
inc
cltd
mov
popa
or
in
test
or
loop
mov
sbb
loop
dec
pop
push
jl
mov
cltd
push
fcoms
call
and
test
jge
inc
int3
sarb
dec
sub
mov
subl
push
mov
scas
outsb
and
dec
sub
andb
xchg
repz
xchg
mov
flds
in
stc
mov
adc
adc
repz
ret
fdivs
mov
push
loope
into
mov
clc
pop
add
stos
stc
loope
cltd
data16
movsl
stos
dec
mov
shrb
mov
movsl
xchg
jnp
jle
adc
jle
je
and
xor
arpl
fwait
mov
sub
xor
mov
sub
push
pop
ljmp
pop
cmp
lret
jg
jnp
test
adc
loopne
cmp
jge
push
stos
arpl
push
sahf
mov
jge
lret
leave
lock
fldcw
mov
xchg
orb
lcall
and
cmp
cmp
aas
add
cld
ss
push
fcmovnbe
add
xchg
das
inc
andb
fiadds
pop
inc
add
ja
and
enter
and
outsb
xlat
lret
mov
movsb
hlt
mov
outsl
sbb
fcomps
xchg
push
push
pop
jge
scas
imul
int
inc
jnp
mov
or
sbb
mov
popa
push
dec
leave
inc
or
adc
and
addb
iret
enter
jmp
or
push
inc
hlt
push
jbe
xor
mov
mov
pop
testl
test
xchg
adc
call
xchg
xor
inc
loop
cld
jb
or
bound
adc
in
shlb
adc
imul
shlb
rdmsr
push
jae
in
ret
inc
push
fwait
lods
or
int
je
subb
lods
xor
push
cwtl
loop
cld
push
lahf
movsl
loope
shr
mov
imul
outsl
and
in
pop
rorl
push
loop
inc
mov
jge
fistpl
rep
xchg
icebp
add
or
add
xchg
pop
pushf
xchg
daa
sbb
pop
sub
test
pavgb
outsl
adc
scas
aaa
std
iret
and
cmp
inc
xor
insb
popa
rol
inc
mov
and
mov
mov
scas
cmp
ljmp
or
cmpsl
or
cltd
push
pop
imul
mov
dec
hlt
and
mov
ljmp
stos
inc
rcrl
arpl
xchg
pop
add
xchg
inc
push
push
mov
xchg
ja
pop
scas
hlt
jns
jno
or
mov
mov
mov
fwait
inc
test
cld
xchg
test
or
adc
sbb
mov
xchg
in
sub
jns
xor
aad
push
cmp
push
xor
mov
jmp
lret
pop
ljmp
inc
mov
pop
addr16
mov
fdecstp
enter
cmpsl
jbe
je
addb
mov
sub
adc
cmpsl
hlt
addb
xchg
stc
lahf
dec
loopne
imul
pushf
inc
std
addl
cmc
jmp
dec
lods
xor
mov
lret
andl
cmp
cmp
mov
mov
jle
fadd
cmpsb
std
movsl
lcall
cwtl
push
cmpsl
cmpsl
mov
and
aam
or
cmpsl
sub
jns
in
loopne
adc
icebp
jne
orps
mov
sbb
fs
cld
or
jp
xor
jo
cmp
inc
ud1
xchg
xchg
cmp
arpl
inc
pop
rorl
adc
and
data16
inc
mov
rorl
aas
push
fistps
pushf
pop
imul
sbb
out
sub
add
mov
pop
inc
jge
ljmp
sub
stos
add
xchg
add
movsl
test
jns
cmp
loope
popa
mov
shrl
pop
scas
daa
mov
xlat
sbb
lret
pop
add
jmp
in
sub
jmp
fdivrs
xor
jbe
fcomps
shlb
fists
fwait
xlat
pop
jge
leave
sub
clc
loopne
ljmp
sbb
int
scas
push
daa
sub
pop
xor
inc
fwait
outsb
aaa
mov
ljmp
xchg
adc
xor
mov
jge
dec
dec
mov
pop
xchg
and
push
add
push
sbb
aaa
inc
dec
pop
fldl
cmpsl
dec
jnp
adc
pop
je
andb
sbb
imul
and
jl
sbb
lcall
push
sub
clc
aas
subl
stos
aam
cmp
cmc
addr16
mov
leave
rcll
xchg
cltd
xchg
push
dec
dec
or
add
xchg
cld
jnp
mov
movsb
in
leave
lds
pusha
mov
adc
or
xchg
pop
stos
imul
sbb
fcomps
mov
pop
sbb
sbb
push
or
add
test
sti
push
jge
lods
dec
bound
popf
mov
add
sub
in
xor
ror
stos
es
adc
sub
dec
popf
loope
fcoml
xorl
mov
repnz
lods
aam
fwait
pop
aaa
in
xor
dec
aas
daa
fisubl
adc
mov
or
adc
cmp
cs
insb
out
jmp
fst
mov
lcall
adc
arpl
je
sub
test
mov
sbb
dec
in
mov
or
mov
inc
xchg
mov
sub
or
sbb
jl
cmp
dec
aaa
add
cmc
int
ss
dec
dec
lock
add
push
test
aas
mov
insl
jp
cmp
pop
cmp
jne
mov
dec
ret
xor
mov
repnz
cmp
sub
lret
lea
mov
jne
shr
sbb
xchg
jne
fcomps
ret
sbb
aad
fstpl
mov
jmp
add
int
loope
in
test
lret
stos
xor
mull
popa
jg
clc
rclb
add
inc
out
js
and
in
xlat
and
imul
mov
fisubs
sub
mov
sbb
aas
add
popa
ret
adc
jecxz
dec
xchg
xchg
xor
xchg
ret
sub
adc
hlt
fildll
test
popa
adc
mov
mov
shrl
imul
adc
jno
mov
mov
outsl
xchg
add
mov
and
xor
pusha
or
mov
mov
in
add
adc
movsb
popf
paddw
mov
jae
and
addr16
add
clc
call
pop
pop
and
adc
sbb
hlt
and
cmp
repnz
inc
dec
dec
aam
popa
dec
int3
mov
clc
sub
jne
enter
xchg
in
jp
add
xor
xchg
jl
xchg
push
inc
gs
push
mov
jg
inc
xor
mov
sbb
inc
popa
xchg
nop
inc
push
cmc
xor
adc
imulb
pushw
neg
mov
je
cli
sub
push
in
dec
sbb
loope
or
out
dec
js
rorl
and
cmp
call
mov
dec
movups
aad
xchg
jne
aad
add
and
cmc
mov
push
jne
imul
cmc
insb
pop
int3
push
xchg
dec
leave
lea
xchg
sub
dec
or
pop
inc
and
mov
push
sbb
xor
pop
cmpl
push
hlt
int
shlb
sbb
xchg
or
test
mov
gs
add
pop
mov
and
call
pcmpgtb
or
lock
push
data16
enter
push
lods
push
pop
into
jecxz
cmp
flds
pop
arpl
cmpsl
mov
loope
jne
push
or
jmp
clc
lds
in
popf
xchg
into
xor
adc
lret
ret
sub
test
and
and
das
fldcw
jmp
mov
clc
and
push
enter
sub
sub
xor
cs
or
cmpsb
push
sbb
push
xor
aaa
inc
lret
cmp
xor
mov
and
imul
inc
sub
cld
add
mov
jg
insl
test
push
push
aam
lds
fldt
pop
into
mov
or
popf
sub
jno
pop
xor
xorl
mov
repz
rcrl
js
insb
pop
sub
cmc
mov
push
jge
pop
int
inc
rcl
adc
push
pushf
das
add
insb
aas
xor
sbb
fidivl
cmp
xchg
dec
jle
mov
pop
enter
outsl
inc
stc
mov
out
sub
hlt
sub
push
mov
xchg
js
jo
xchg
dec
packuswb
xchg
and
lods
mov
adcb
mov
lret
sbb
cmp
xabort
sbb
push
cmp
mov
aas
fisttps
mov
insl
pop
into
int
icebp
xlat
es
or
pop
push
push
mov
hlt
loop
dec
aam
jb
cmc
adc
aam
lods
adc
pop
cmc
jg
sub
mov
xchg
and
mov
jno
stos
ret
jecxz
mulb
mov
pop
loop
ret
and
and
insb
jg
add
leave
pop
pop
scas
inc
mov
ds
imul
test
or
push
dec
mov
jo
pop
sub
roll
in
lcall
cmp
jae
sub
dec
sbb
ds
dec
sbb
std
ds
xchg
inc
out
scas
push
dec
jns
scas
inc
and
iret
inc
pop
mov
call
or
subb
adc
mov
call
aad
loopne
pop
dec
adc
xlat
sbb
or
fwait
xchg
outsl
into
imul
gs
push
repnz
jecxz
loopne
imul
mov
rcl
cmp
mov
mov
cs
ficoms
fwait
xchg
adc
pop
enter
push
xchg
lret
sub
jae
addb
leave
mov
adc
and
jbe
mov
fwait
imul
ja
add
movsb
pop
popf
sub
inc
pop
lcall
pop
sahf
inc
insl
test
add
or
sub
movsb
sub
insl
push
insb
stos
xchg
nop
das
push
push
insl
int3
push
jns
push
rcrl
leave
outsl
jmp
xchg
mov
clc
xor
or
shrb
pop
sub
lock
fnstenv
xor
and
mov
imul
mov
mov
cltd
xchg
and
mov
stos
loope
daa
add
fidivs
cwtl
aam
in
cmp
sbb
cmp
cmp
push
fwait
push
divb
rcrb
lods
ja
mov
je
push
cmc
adc
ljmp
or
roll
fisttpll
jge
mov
lea
rorl
nop
cmp
sub
filds
xchg
xor
fsubr
mov
shlb
enter
movsb
lock
es
inc
enter
push
pop
loop
iret
jae
sar
mov
mov
add
aaa
sub
add
in
in
jo
xchg
stos
add
xor
cwtl
outsb
movb
rclb
mov
jle
orb
loopne
faddl
insb
jg
stos
sub
or
outsl
dec
and
cmpsb
adc
shll
sti
and
cld
push
cmpsb
mov
aas
push
insb
ljmp
incl
mov
sbbl
scas
lods
push
fs
jno
or
pop
push
pop
xor
and
xchg
fcmovu
aas
xor
call
lcall
loopne
loop
pop
inc
xchg
xchg
loopne
or
or
cltd
xchg
adc
sbb
movsb
bnd
push
lahf
xchg
mov
bound
imul
jns
mov
std
or
rolb
jecxz
mov
inc
push
outsl
or
in
fnstsw
outsb
arpl
dec
out
fidivrs
inc
jp
jmp
push
in
decl
in
iret
stos
mov
sbb
push
mov
mov
sbb
imul
mov
add
pop
lock
adcl
push
sti
cli
mov
dec
mov
lcall
jnp
sub
rcl
jns
outsb
shrb
jle
jl
lds
push
mov
movsb
jno
ds
adc
mov
cmp
out
dec
fidivs
divps
int3
dec
and
pop
xchg
cld
mov
daa
mov
out
je
inc
testl
xchg
out
cmp
fbld
dec
sahf
and
xchg
xlat
fucomip
jp
arpl
push
or
jg
push
iret
scas
fs
add
lahf
add
sbb
addr16
aad
stc
jae
out
andb
stos
into
or
add
jmp
cmp
sbb
pop
or
outsb
scas
cmp
xchg
pusha
or
push
lock
xchg
inc
clc
push
or
adc
lret
mov
inc
jns
xchg
daa
dec
in
add
lds
xchg
dec
xorb
cwtl
cli
dec
scas
insl
mov
mov
je
push
push
es
xor
mov
push
mul
repnz
mov
mov
push
es
into
addl
dec
test
clc
fcoml
lea
push
in
cmp
movsbl
mov
js
xor
fstl
mov
cmp
call
jmp
mov
or
mov
mov
jge
push
enter
jl
add
jge
mov
ret
adc
jmp
fcmovu
and
cmp
cld
mov
jno
or
cltd
gs
xlat
into
pop
shl
jae
leave
dec
imul
loop
scas
inc
push
out
lods
xor
shrb
test
pop
push
popa
adcl
lea
mov
mov
sub
ljmp
mov
sub
lret
lret
jae
lods
fsts
out
out
lcall
repz
xlat
daa
jns
enter
in
or
cmp
cli
xor
jecxz
cmp
mov
cmpsb
jno
mov
pop
cmp
mov
ja
push
sbb
rcr
std
testl
add
adc
pop
add
xchg
cmp
push
mov
test
gs
jmp
testl
push
mov
aad
ss
push
repnz
mov
add
pusha
mov
pop
or
xor
stos
int
sahf
pusha
sub
push
cmp
jns
repz
mov
xchg
decb
loop
mov
hlt
cmp
mull
leave
add
fcmovnu
sbb
jo
or
jg
sbb
cmpsl
adc
add
jp
adc
data16
sub
push
add
es
imul
stos
cld
xchg
mov
sbb
or
js
dec
and
sbb
cli
sub
cli
pop
cmp
or
xor
daa
cmpsb
push
repz
push
push
lcall
and
mov
stos
scas
and
insb
mov
jge
push
and
pop
dec
daa
data16
jno
pop
scas
leave
in
xchg
outsb
outsb
mov
inc
mov
jmp
fmuls
in
into
jge
or
mov
aaa
push
loope
mov
push
int3
icebp
push
aas
cld
sbb
loop
sbb
imul
xchg
out
aas
mov
int
test
jle
cwtl
mov
adc
xchg
and
xchg
or
fsubr
and
and
test
pop
loopne
xchg
int
inc
mov
jge
mov
int
loopne
movl
sub
sbb
test
jg
and
subl
jecxz
pop
movsl
or
or
pusha
outsb
andl
pop
sti
aas
les
cmpl
mov
hlt
lcall
push
mov
jb
cmp
or
inc
mov
mov
pop
inc
adc
sahf
mov
push
mov
mov
or
jbe
cwtl
scas
adc
or
sub
bound
xchg
pop
and
stos
and
in
nop
pop
pop
inc
jns
scas
inc
push
adc
cmp
inc
cld
pop
enter
xchg
dec
jne
mov
sub
adc
and
add
ret
test
jmp
xchg
aas
sub
cmp
sahf
push
fwait
pop
lock
in
and
cmp
stc
into
add
push
xor
jae
test
xchg
jg
cmpl
iret
movsl
imulb
bound
push
jl
les
imul
sbb
in
push
test
cmpsb
js
add
cmpsl
inc
cmp
repnz
out
fstps
mov
mov
and
adc
add
int
shrl
int3
hlt
fsubrs
push
pusha
mov
xor
inc
xchg
mov
addb
les
sub
movsb
cmp
mov
xchg
push
jne
dec
jmp
push
aad
iret
cmp
mov
pop
icebp
popf
dec
out
test
imul
add
cmp
fwait
ljmp
std
into
mov
sbb
inc
enter
lcall
in
arpl
jmp
xchg
arpl
push
sub
push
mov
icebp
cmpsl
dec
out
pop
jne
mov
mov
push
xor
sub
lret
inc
xchg
test
cmpsb
cli
jnp
mov
ja
mov
pop
xchg
fdivrp
cmc
je
sahf
jne
mov
lahf
pop
std
jb
mov
sub
adc
cwtl
adc
je
dec
and
daa
inc
rclb
outsb
clc
clc
mov
movsl
pop
push
ret
arpl
mov
test
push
test
sbb
xor
test
cmpsl
sbb
inc
pushw
in
pushf
fs
loope
push
mov
xchg
jle
ja
out
and
loope
push
xor
outsb
cmpb
fwait
xchg
jmp
adc
out
mov
inc
jl
xchg
dec
mov
aad
dec
jno
dec
stc
mov
sbb
lock
pop
test
dec
testb
push
imul
jmp
xor
dec
sti
daa
xchg
or
dec
add
movsl
jae
sub
push
das
fdivrs
jbe
jl
insb
pop
pop
inc
cmpb
mov
xor
aas
and
mov
mov
es
mov
jne
stos
lds
mov
mov
fcoml
push
sbb
adc
dec
xlat
dec
lds
mov
fstl
popa
inc
jmp
aam
test
icebp
push
insl
or
inc
popf
data16
inc
mov
ficompl
movsl
add
and
mov
loopne
xor
imul
xchg
pop
mov
out
insb
mov
or
nop
xor
lea
push
iret
cmpsl
sbb
scas
outsb
sbb
inc
jb
je
ljmp
mov
test
sahf
push
out
loope
xor
xchg
mov
xchg
mov
or
xor
js
fstl
mov
adc
mov
nop
adc
dec
mov
pop
cmpl
mov
jns
fidivs
adc
push
pusha
jp
repz
mov
lcall
jecxz
cltd
adc
test
jb
mov
xchg
sub
test
imul
out
push
jl
mov
pop
jmp
addr16
repz
shrb
scas
ds
xchg
cli
popf
and
jmp
jecxz
mov
outsb
xor
mov
insb
or
push
scas
jno
xlat
lret
rolb
pop
or
lea
cmp
pusha
mov
in
hlt
call
cs
fcmovne
mov
sbb
jl
xchg
inc
fnstcw
push
in
pop
sbbb
leave
mov
sub
sub
cld
pop
mov
sub
lock
testb
in
into
insb
jnp
push
dec
fwait
inc
cmp
mov
add
movsb
dec
jp
jns
in
lret
mov
jmp
pop
xorb
dec
aaa
test
and
int
mov
and
fwait
mov
sbb
adc
fldenv
inc
aaa
fbstp
std
pop
jg
into
mov
jmp
mov
dec
adc
inc
pop
jg
xchg
mov
mov
mov
xor
cld
cmp
cmp
pop
jo
stc
data16
test
stos
inc
sbb
mov
adc
jno
hlt
sarl
dec
add
push
push
enter
mov
iret
sbb
adc
and
idiv
sub
pop
cmp
test
pop
aad
add
lds
sarl
fcompl
and
orl
cmp
xchg
dec
ja
movsb
xchg
add
popf
outsl
movsb
pusha
mov
dec
push
dec
aam
loope
out
cmp
aam
nop
jae
repz
fcmovnbe
fdivrs
movsb
fidivl
dec
and
pushf
dec
fcoms
jg
loopne
sbb
movsl
aaa
in
mov
mov
xchg
mov
test
cmp
loop
xor
add
mov
pop
jg
je
cltd
test
xchg
mov
mov
mov
in
jmp
js
and
repz
jo
stos
or
loop
repz
fmull
mov
xor
cmp
scas
not
pop
imul
jecxz
mov
je
test
out
or
mov
xchg
add
add
repz
cld
sbb
inc
jae
sbb
sub
mov
dec
mov
and
cmp
push
cmp
mov
test
sub
push
mov
ss
fnstcw
outsl
lahf
sub
and
jne
xchg
jns
inc
cmp
dec
ja
dec
test
imul
inc
inc
pop
inc
lods
stos
mov
jbe
lea
push
aam
cmpsb
lcall
mov
loop
popa
pushf
sti
jae
or
sub
ret
mov
pop
lcall
sbb
scas
pushf
addr16
les
sti
test
out
insb
and
repz
daa
jb
lds
pop
pusha
subl
xchg
jp
xchg
xorl
inc
fcoml
push
ja
cmp
xchg
xchg
xor
mov
fsincos
mov
test
pop
dec
xor
dec
rolb
stos
pop
pop
adc
xchg
imul
ja
xchg
push
add
add
pushf
bound
out
sub
cmp
ljmp
jae
add
push
lretw
sub
cwtl
and
js
repz
pushf
out
cmp
push
fists
repz
std
repnz
loope
test
sbb
movsl
push
imul
push
push
ret
mov
inc
lret
jns
dec
pop
push
stos
push
clc
ror
add
movsb
icebp
stos
sahf
add
jle
fwait
cmp
and
xchg
xchg
addr16
sbb
inc
popa
imul
jl
sub
shrb
into
int3
xlat
push
fstl
faddl
push
xor
js
das
xchg
xor
les
in
out
push
mov
test
mov
and
out
pop
sub
jne
and
or
mov
xchg
sbb
or
stos
mov
insb
movsb
pop
lock
mov
cltd
pop
lea
xor
jl
ljmp
pop
ror
push
adc
out
push
mov
jp
rclb
inc
pop
into
cmp
pushf
movsl
or
mov
insb
popa
add
xor
fldenv
mov
popf
stc
push
cmpsl
and
cs
cmc
xchg
xor
cmc
ljmp
andl
sbb
mov
fsubl
fldenv
mov
sbb
xchg
stc
push
scas
call
ret
lahf
das
icebp
adc
push
add
fadds
je
jo
cmpsl
lds
daa
inc
out
mov
out
add
gs
or
in
mov
movsb
sub
insl
fldpi
push
adc
or
ret
dec
enter
lea
les
imul
dec
push
sbb
jge
clc
adc
push
int3
out
into
push
aas
add
lea
sbb
ss
cmp
stos
jp
shlb
in
into
mov
aas
sbb
pop
add
pop
aas
aaa
pop
sub
lea
mov
push
xchg
adc
inc
jb
mov
inc
sub
add
adcb
sbb
pop
mov
pop
movsl
xchg
inc
fnsave
int3
adc
or
sbb
sbb
xor
cmpsb
cmpsb
xchg
dec
loopne
cmpsl
mov
pop
xor
repnz
mov
push
int3
jge
push
in
mov
mov
lock
pop
jae
or
mov
shll
cs
lods
xor
xchg
into
out
sub
xor
imul
fildl
pop
roll
mov
xor
jne
scas
push
mov
pop
fucom
xor
iret
mov
mov
mov
cld
outsl
out
jo
mov
pop
xor
xchg
mov
mov
or
stos
adc
inc
int
jecxz
and
dec
cmpsl
pushf
and
int
imul
aam
out
data16
lret
sarl
cmpl
loop
loop
fucom
push
loop
add
fadds
xchg
ret
cmp
add
jb
rolb
fsub
fsubrl
out
test
adc
mov
pop
inc
push
js
pop
sbb
jle
sub
jp
mov
jge
xor
and
inc
cld
loop
add
imul
imul
pop
mov
cltd
lds
mov
fdivs
adc
test
stos
xor
adc
add
imulb
outsl
xchg
mov
dec
mov
loopne
sbb
dec
cs
dec
out
adc
lds
push
jo
push
insl
push
push
cltd
inc
inc
cli
imulb
cmp
repnz
mov
mov
imul
jmp
iret
fisttps
fldcw
mov
in
mov
negb
mov
stos
push
xlat
xor
cmp
xchg
and
xor
push
mull
sahf
xlat
fidivrs
jg
inc
adc
ds
pop
mov
in
out
in
mov
test
enter
jbe,pt
cmc
sarl
iret
push
int3
or
adc
cmc
cmp
xchg
mov
inc
fimull
sub
inc
push
stc
mov
dec
pop
mov
mov
dec
fwait
pop
jle
fisubl
mov
push
notb
xchg
cmp
sub
pop
push
sbb
in
cmpsb
push
inc
dec
lahf
add
popa
fsubrl
pop
and
add
adc
stos
adc
test
jmp
stos
inc
and
imulb
stc
cltd
sub
hlt
movsb
sbb
sahf
sub
xchg
orb
ljmp
push
out
pop
jge
ds
iret
call
hlt
es
mov
push
filds
lock
jb
pop
dec
sar
or
xor
xchg
xchg
pop
in
sbb
pop
sbb
rcl
lcall
fstp
mov
pop
lret
call
mov
push
or
int3
add
stos
into
popa
shll
xchg
test
fisubs
or
dec
fstpl
flds
in
jb
in
imul
gs
mov
or
sbb
aad
xlat
test
imul
and
scas
and
pop
scas
push
xchg
gs
js
add
add
add
mov
lcall
shrl
pop
inc
mov
add
imul
mov
sub
out
and
cmpb
jecxz
lock
leave
sub
mov
mov
dec
cld
add
dec
adc
mov
cmp
xchg
dec
fwait
dec
jnp
in
lret
aas
xchg
in
lock
insb
lods
sbb
mov
xlat
adcl
daa
xchg
pop
sbb
jno
ljmp
incb
inc
jge
pop
push
es
int3
outsb
or
popa
mov
fnstsw
sub
les
stc
jl
add
push
jecxz
push
push
shll
or
leave
je
jmp
inc
ljmp
fwait
std
test
out
push
push
fsts
cltd
mov
pop
cmpb
inc
xchg
test
ja
into
xchg
out
jnp
movsb
test
rorb
cld
sub
and
xchg
bound
lahf
lods
sbb
cmc
pop
ljmp
or
sbb
and
imulb
leave
inc
mov
mov
jmp
inc
daa
jp
out
inc
pop
push
outsb
xor
stos
mov
and
cltd
adc
outsl
mov
lods
jge
mov
ficompl
mov
test
cmpb
dec
into
mov
adc
lahf
cmp
repz
cmp
and
dec
scas
cmpsl
sarb
pop
dec
int
pop
ffree
or
pop
and
xor
pop
sbb
stos
and
clc
xor
jne
ret
cmp
mov
xchg
jae
dec
insl
add
dec
or
push
ficomps
sahf
xor
xchg
mov
jge
mov
xor
hlt
lods
dec
popf
and
divb
repnz
push
rorl
mov
mov
xlat
loopne
xchg
push
or
emms
cmpl
in
imul
jns
xor
cmp
jmp
mov
jmp
fidivs
int3
adc
fidivl
rcrb
lahf
loope
sbb
nop
dec
sbb
mov
xchg
fistps
loopne
jnp
and
jecxz
sub
lcall
xchg
xor
sub
lret
push
test
arpl
movsb
test
jecxz
cmpsb
pusha
push
mov
subb
adc
cmp
out
imul
lds
shl
jmp
in
imul
mov
push
adc
ds
scas
and
insl
incb
lock
out
jne
arpl
pushf
mov
lea
pusha
adc
fcmovnb
sahf
outsl
add
pop
mov
xor
aam
mov
in
mov
mov
test
or
sbb
lahf
mov
iret
test
lcall
pop
xor
dec
je
push
xchg
mov
outsl
outsb
in
pop
pop
stc
push
pop
iret
jbe
cmp
mov
es
mov
mov
adc
fdivs
ljmp
je
iret
daa
dec
adc
dec
clc
or
nop
out
mov
lods
pusha
adc
aad
mov
xchg
mov
jns
dec
add
sub
orl
test
xchg
js
sub
pop
xor
decb
jl
mov
insl
mov
mov
addr16
into
xor
cmp
aas
mov
dec
or
cmp
mov
cmp
sahf
iret
dec
sub
add
jo
xchg
outsb
out
dec
les
cs
sahf
cld
roll
test
lahf
fcmovne
movsl
fadds
repnz
stos
push
mov
test
repnz
outsb
out
loope
adc
add
add
popa
and
cwtl
add
loope
call
push
sub
icebp
movsb
lcall
pop
mov
inc
lock
fsubrs
popa
test
shlb
ror
push
je
test
push
mov
inc
sbb
or
insb
daa
sbb
pop
push
arpl
mov
jge
movb
mov
mov
mov
inc
mov
add
data16
cli
in
mov
sbb
push
sti
add
sub
jg
mov
push
cmp
mov
cmpl
sbb
ret
jns
shlb
insb
mov
sbbb
sti
cs
ret
stos
arpl
stc
dec
jmp
repnz
shlb
pusha
imul
cmp
pop
mov
add
pop
cmpsl
int3
imul
decl
enter
aad
cmp
int3
push
fwait
dec
movsb
aad
jae
jp
pushf
jle
stos
jecxz
xchg
das
les
test
cmp
mov
mov
jbe
xchg
loopne
cmp
mov
or
adc
jne
aad
jnp
sbb
adc
idivl
pop
dec
insb
cmp
adc
imul
push
cmp
jle
js
aam
or
xor
push
cmpsl
push
rclb
push
dec
ss
push
in
shrb
cmp
std
xorl
adc
dec
int
inc
mov
or
je
xchg
loope
rorb
adc
push
push
cmpsb
cmp
inc
push
inc
gs
inc
test
or
scas
lds
xchg
loopne
test
cltd
sub
inc
pop
and
in
aaa
jbe
xor
sysenter
jge
fsts
inc
insb
daa
adc
lcall
sbb
je
adc
sbb
ret
ljmp
mov
fiadds
stos
mov
jne
decb
in
inc
cmp
inc
and
movsb
out
pusha
mov
roll
jge
inc
roll
aas
push
shrb
shr
mov
lds
dec
dec
mov
fs
sub
xchg
scas
movq
xor
jle
push
movsl
inc
xor
jae
popa
or
sub
in
push
loop
inc
fldcw
cmpsl
xchg
dec
add
fildl
faddl
push
arpl
inc
stc
mov
jmp
std
cltd
je
push
jge
icebp
insl
or
xchg
outsb
ret
shrl
pop
fisubrl
fcomi
data16
and
rolb
mov
fildll
loope
mov
add
jnp
and
push
sub
xor
rol
pop
sahf
mov
call
and
shll
push
sub
push
sub
xor
jns
or
rorl
insl
call
fisubrs
test
add
push
push
or
jo
adc
inc
cli
leave
aam
in
push
cmpb
dec
cmp
sti
mov
push
ret
ss
dec
add
dec
ljmp
roll
xor
in
lret
fucomip
xchg
orl
das
xchg
jno
int
jg
xor
dec
mov
sti
in
xchg
xchg
imul
daa
loopne
test
into
sub
iret
fdivs
scas
stos
js
je
jnp
gs
lret
mov
adc
insb
cmpsb
shlb
mov
arpl
jnp
add
cmp
mulb
cmp
push
cs
gs
out
insl
xchg
daa
lods
dec
popa
rorb
mov
in
fbld
testb
mov
ret
sub
sub
or
jmp
xchg
mov
sbb
xor
adcb
sbb
ret
or
xchg
shll
mov
mov
lds
addb
mov
inc
xorl
insl
in
dec
decl
xchg
jnp
sub
jmp
xor
dec
mov
xchg
popf
and
xor
andl
push
jbe
or
arpl
xchg
imul
mov
pop
lret
in
sub
sti
jb
xchg
insl
adc
fimull
sub
fildll
push
push
mov
iret
shrl
sbb
inc
mov
inc
xor
push
cmp
inc
cltd
xor
mov
and
cmpsl
fldcw
pop
xchg
mov
xchg
xor
leave
fisttps
mov
andl
adc
movsb
test
movsb
push
push
xchg
stos
pop
sub
loopne
xchg
xchg
mov
push
testb
sub
add
iret
test
xor
mov
push
xchg
mov
clc
xor
loopne
mov
dec
lret
pop
shl
sbb
dec
pop
jo
mov
jae
jnp
xchg
mov
popf
jb
les
hlt
cmc
xchg
loope
push
insb
pop
and
lods
and
in
xor
add
jno
rcrl
mov
shrb
cli
or
push
dec
test
push
cmpsb
pushf
xor
mov
repz
inc
adc
inc
sub
xor
mov
mov
call
cmp
push
dec
sti
dec
dec
ret
pop
aam
dec
xlat
push
pop
roll
out
loop
cmp
ror
data16
mov
into
andl
jbe
push
mov
insb
push
jae
add
aaa
inc
push
dec
xchg
push
shrl
jp
cmp
pushf
dec
cmp
iret
icebp
insl
push
jb
daa
add
xor
inc
inc
mov
push
ds
stos
shlb
testl
mov
icebp
mov
cs
mov
mov
shrl
stc
push
fs
sbb
jbe
and
mov
xchg
data16
and
push
cmpsb
inc
sahf
mov
into
outsl
adc
adc
fs
ret
loope
mov
fsubs
xor
rol
fmull
aam
cwtl
cli
out
cmp
or
minps
xorb
or
cmpsb
in
mov
mov
sarl
pop
push
fstps
adc
jg
xor
roll
pop
add
cmpsl
out
test
psllw
or
cmp
aaa
mov
cmpsb
ja
push
mov
mov
cs
test
stc
out
dec
xor
xlat
fcom
sbb
fisttps
fwait
cmp
pop
mov
lcall
sbb
mov
dec
inc
movsl
outsb
lods
out
cmp
dec
call
and
jb
push
mov
push
push
xor
pusha
out
adc
ret
and
ss
and
insl
adc
call
push
in
xchg
push
cmp
enter
mov
lods
repnz
dec
lcall
cmp
jmp
pop
out
fldt
xor
call
jne
ja
shrb
xchg
outsl
mov
pushf
iret
push
or
shll
cmp
loop
out
cmp
aam
add
jg
push
jo
nop
rorl
sub
adcb
xchg
xchg
mov
mov
outsl
bound
clc
subb
imulb
pushl
push
aas
in
dec
xchg
fsts
loopne
iret
out
adc
and
and
in
add
mov
aas
xchg
sbb
xor
fadds
sub
jae
push
mov
add
jge
mov
rol
sbb
jl
dec
lods
ror
sahf
or
in
adc
mov
dec
push
dec
xor
int
lret
push
push
repnz
cmp
or
js
cmp
js
mov
cmp
in
xchg
icebp
nop
mov
sub
sbb
jnp
pop
gs
mov
scas
ss
jns
mov
xor
test
sarl
loope
inc
adc
aas
xlat
xchg
leave
jle
orb
in
mov
fs
mov
loopne
shl
pop
adc
icebp
sbb
add
jb
jns
adc
in
mov
inc
arpl
dec
scas
jns
xor
clc
push
stos
jnp
popf
mov
shll
aad
adc
xchg
push
scas
pop
mov
into
in
or
sbb
sub
ret
sub
clc
hlt
addb
xor
nop
pop
inc
jbe
mov
sub
sub
bound
dec
jmp
stos
xchg
int3
cmp
xchg
lods
cmp
popa
add
xchg
adc
adc
or
mov
cld
mov
xchg
sbb
insl
push
rol
out
ljmp
cmp
stos
cmpsl
adc
inc
sbb
inc
test
jl
in
sub
xchg
movsl
repnz
mov
xchg
push
and
nop
inc
out
shrl
dec
inc
cmp
gs
and
out
and
pop
jo
cmp
adc
inc
xor
nop
test
xor
mov
fs
dec
lcall
push
adc
cld
push
xchg
and
cmp
jb
xor
xor
mov
mov
dec
push
jns
dec
daa
dec
sahf
dec
cmp
inc
lahf
roll
jb
dec
hlt
call
push
repz
mov
rcrb
imul
into
xchg
mov
jae
pop
xchg
into
push
xor
push
gs
push
sub
aam
je
loop
scas
push
inc
popf
into
mov
fs
push
enter
jns
cmc
test
cmpl
mov
test
mov
sub
dec
ret
cmc
scas
xor
ret
xlat
mov
lods
mov
sub
dec
dec
cld
and
decb
in
movsl
stos
push
int3
je
mov
cwtl
shlb
out
mov
xor
jnp
popf
and
je
movl
xor
pop
dec
scas
inc
in
sbb
pusha
cmpl
out
aaa
shrl
bound
mov
es
push
sub
sahf
mov
stos
shlb
xchg
aad
mov
in
pushf
mov
std
clc
addb
xchg
sub
mov
leave
repz
mov
lahf
test
jae
mov
pop
adc
and
subb
sub
cmp
popa
sahf
ret
push
sub
or
push
add
push
xorb
sbb
inc
jnp
jp
push
cwtl
arpl
fldcw
inc
mov
add
jb
and
loopne
xor
dec
jle
sbb
xchg
cld
inc
sti
sbbb
xchg
mov
cmp
pop
movsl
orb
inc
das
js
sbb
mov
pop
and
and
sbb
inc
mov
ljmp
mov
jle
hlt
in
or
lea
in
sbb
sbb
add
xor
jb
push
call
lcall
stc
cmp
sub
icebp
pop
jnp
pop
lods
ja
jg
xor
pop
outsl
lods
jnp
sti
dec
lahf
out
lcall
pop
dec
lret
lock
mov
sbb
loopne
push
imul
xchg
jg
out
xchg
inc
xchg
aam
addb
loop
mov
movb
shrb
mov
int
out
fs
pop
adc
sarb
leave
and
xor
stos
ret
movsl
xchg
or
aas
sub
scas
xor
sub
in
xchg
dec
sub
fnsave
adc
xchg
mov
inc
sbb
xchg
xlat
lret
xchg
out
cmpb
mov
sub
or
mov
int
arpl
mov
stc
jae
dec
outsl
adc
push
xchg
push
mov
lret
lods
outsl
and
in
sbb
sbb
dec
repz
jno
and
or
inc
sbb
jmp
pop
arpl
cmp
xchg
xchg
mov
sbb
xor
or
xchg
sbb
inc
jns
push
mov
in
out
testl
and
and
cltd
fildll
push
xor
pop
xor
and
mov
pop
cli
aam
lds
shll
mov
mov
or
inc
insl
jne
fiadds
iret
mov
aam
int3
jno
mov
add
lret
rorb
rclb
mov
mov
bound
cs
jo,pt
xchg
movsb
pop
mov
xchg
push
jae
adc
xchg
push
and
sbb
int3
and
or
mov
push
test
in
cld
adc
out
cmp
mov
nop
jo
sbb
dec
cwtl
push
hlt
fiadds
inc
rclb
jo
nop
xchg
jecxz
push
icebp
mov
push
jns
add
fwait
nop
addr16
pop
xor
lock
sbb
push
mov
arpl
xchg
mov
adc
inc
fistps
lods
lret
mov
pop
lods
in
fsts
sbb
mov
inc
mov
fs
aam
cwtl
jmp
call
push
adcb
jl
sub
jo
stos
leave
lds
insb
subb
mov
jnp
gs
xchg
bound
hlt
or
sbb
pop
mov
sub
ret
add
mov
imul
push
pop
mov
dec
jnp
sbb
cld
adc
pop
mov
pop
mov
pop
push
pop
sub
ret
cmc
and
test
sbb
loope
insb
jns
and
xor
into
test
mov
sbb
test
int3
push
jae
fbld
icebp
syscall
and
mov
out
lock
je
adc
sub
shrb
popf
and
adc
xchg
mov
out
loop
repz
sahf
clc
adc
mov
inc
addb
je
mov
shlb
mov
or
adc
or
mov
inc
sahf
out
push
xchg
ficompl
cmp
jne
pop
or
mov
lods
push
sub
xchg
dec
hlt
popf
jnp
add
dec
xchg
iret
jns
call
lea
pushf
pop
hlt
dec
sti
mov
cmc
pop
aaa
loopne
in
addl
into
xor
in
pop
repz
cmovnp
leave
mov
or
ss
and
fnstenv
in
popf
jnp
mov
mov
cmc
pushf
sub
test
sbb
push
ret
xchg
fdivs
dec
pop
push
mov
push
cld
or
std
cld
push
pop
push
subb
xchg
mov
les
xchg
ret
test
into
sub
add
in
jnp
pop
jp
sub
sbb
fnstsw
inc
jae
out
sub
lret
mov
mov
divl
test
adc
mov
add
js
adc
fldl
sub
repz
xlat
int3
mov
xor
push
in
aas
aas
sub
jnp
push
mov
xor
sahf
in
out
stc
shr
imul
leave
cmovne
jne
and
scas
mov
mov
adc
mov
sbb
lods
jbe
fidivrl
out
dec
fistl
push
inc
daa
lods
cmp
test
ret
dec
shll
sbb
cmp
xchg
out
pop
mov
xchg
add
fldcw
loope
dec
jo
mov
jg
scas
iret
sbb
xor
rorb
mov
popf
or
xor
ret
sti
stos
sub
out
sub
out
js
shr
push
int
popa
aad
mov
mov
sahf
pop
sbb
divb
cli
push
or
jno
pop
scas
dec
fwait
sarl
push
mov
cmp
pop
int3
lock
xchg
mov
inc
lds
fisubl
sti
and
ja
dec
pop
xchg
loop
dec
add
scas
lahf
insb
stc
into
das
and
xchg
pop
push
dec
icebp
jbe
enter
imul
cmp
push
xlat
stos
les
inc
outsb
pop
sub
mov
insb
or
add
fwait
ss
es
daa
outsb
add
or
lds
adc
jle
pop
test
aas
pop
mov
test
leave
outsb
cmp
mov
aam
pop
xor
push
or
dec
adc
or
movsl
daa
fdivr
or
push
repz
loop
pop
xlat
mov
jge
es
bound
cltd
mov
imul
xlat
call
mov
inc
add
push
dec
nop
icebp
pop
pop
dec
pop
lock
stc
push
xchg
pop
xchg
pop
add
stc
scas
fsubs
sbbl
mov
dec
int3
push
sub
inc
into
xchg
adcb
es
in
pop
adc
mov
mov
lods
into
xor
xchg
jns
push
jne
mov
fisttpl
rcll
mov
popa
insl
ret
sti
ret
nop
pop
test
mov
lcall
push
push
and
mov
pushf
lret
push
dec
cmp
ret
push
cmp
jne
repnz
mov
ja
inc
lods
loope
mov
outsl
movsb
loopne
sbb
mov
dec
jns
add
adc
jns
in
cmpsb
mov
std
and
in
mov
adc
sub
dec
mov
aas
popf
mov
cmp
call
xor
or
push
pusha
mov
cmpsb
movsb
fistpl
mov
cmc
aaa
xor
pop
jb
xchg
aas
movsl
pop
clc
pushf
adc
out
push
aam
jmp
push
or
aas
js
add
ljmp
addr16
push
sarb
inc
fcomp
adc
test
pop
ret
dec
pop
lods
mov
cli
aaa
jl
faddp
push
popa
popf
mov
imulb
inc
mov
pop
xlat
bnd
adc
repnz
push
aaa
lret
push
repnz
jno
add
add
inc
sub
repnz
test
inc
jae
lods
pusha
sbb
andb
ja
fimull
sbb
clc
sbb
int
push
pop
or
jg
mov
scas
sti
mov
mov
push
jne
and
jmp
inc
sub
icebp
pop
test
clc
cmp
or
jl
ret
cmc
scas
jecxz
add
aam
push
xor
cmp
fdivs
testl
push
mov
mov
xchg
popf
sub
test
pop
aam
and
test
test
dec
test
mov
test
xchg
cmpsb
pop
sub
push
adc
stos
sub
hlt
mov
push
inc
fwait
mov
shll
and
adc
push
mov
in
jg
inc
mov
sbb
or
insb
jge
push
xchg
cs
pop
lret
mov
dec
loope
loope
mov
mov
lsl
in
push
cmp
lock
loopne
int
shrb
add
adc
repnz
mov
sbb
cmpsl
cmp
push
jecxz
or
and
and
xchg
xor
bound
push
fcoms
pop
les
lea
adc
xor
xchg
mov
rolb
test
sub
dec
push
dec
cmc
lods
sub
pop
or
cmp
or
inc
jns
mov
mov
add
mov
outsb
ret
lahf
adcl
adc
scas
and
sub
or
in
mov
mov
btc
scas
mov
adc
dec
pusha
jg
out
mov
int3
add
mov
add
cmp
push
xlat
xor
test
inc
or
in
mov
sbb
popa
gs
xchg
mov
inc
adc
sbb
mov
sub
repz
push
popa
jmp
add
pop
jge
mov
mov
in
pop
movsl
mov
add
sbb
sub
rorb
jne
sub
jle
mov
ja
adc
xor
mov
sub
lret
loopne
xlat
adc
ret
dec
xchg
dec
fcom
jnp
aad
jmp
aad
cmp
or
jg
fistpl
popa
popl
push
decl
push
lods
movsb
test
scas
sub
pop
outsb
ljmp
ret
lret
cmp
es
mov
rorl
mov
imul
ret
pop
xor
scas
xchg
xchg
mov
int3
subl
mov
mov
xchg
pop
adc
push
fisubrs
mov
add
push
in
mov
and
lret
gs
xor
xor
xor
mov
xlat
sar
insb
mov
or
add
gs
cli
mov
les
or
dec
or
push
int
into
cmp
ja
pop
cmpxchg
shrb
push
lods
and
leave
scas
call
int3
lods
mov
daa
xor
fistl
mov
and
dec
add
or
jge
pop
enter
icebp
test
xchg
jp
std
fdivrs
into
mov
in
loopne
jno
xor
mov
xchg
pop
movsb
mov
xchg
inc
cld
pop
sbb
jmp
aad
insl
sarb
add
add
aaa
cmpsb
push
aas
cli
loopne
ss
je
test
push
and
mov
inc
cmp
into
mov
mov
mov
xor
sti
pushf
das
pop
cmp
dec
dec
ss
leavew
lods
jecxz
test
and
sbb
push
mov
push
pop
adc
push
test
sbb
mov
and
push
aad
xor
inc
lahf
or
in
mov
sti
inc
imul
mov
xor
sbb
addr16
push
dec
mov
push
shr
in
bound
cmc
sahf
xlat
add
cmpsb
mov
int
out
jmp
mov
sub
sub
fcoml
inc
adc
jbe
jbe
mov
js
and
xchg
gs
fwait
data16
pmaxsw
dec
rorl
sbb
in
clc
ljmp
mov
daa
jle
icebp
lock
push
clc
cmp
mov
in
adc
in
inc
jnp
push
ss
icebp
lods
xchg
mov
fidivs
test
dec
jae
mov
adc
mov
push
outsb
scas
sbb
mov
inc
subl
or
fimull
dec
mov
pop
outsb
jle
dec
mov
shlb
jmp
ss
inc
pop
inc
das
test
mov
in
pop
inc
and
or
sub
imul
pop
xor
jnp
push
dec
mov
adc
push
ret
and
xchg
aaa
negl
add
addr16
add
in
mov
scas
and
fisttpl
add
sbb
xor
push
sub
and
push
mov
sbb
inc
xchg
sub
clc
xchg
adc
icebp
loop
clc
ds
call
mov
int3
imul
and
xchg
pusha
add
inc
adc
into
jg
pop
or
and
mov
mov
cmpsb
inc
into
std
cmpsb
xor
aad
shl
mov
pushf
push
fwait
repnz
icebp
in
cmp
cmp
dec
or
mov
dec
mov
cmp
xorb
fldt
inc
dec
fnstcw
dec
pop
adc
ret
cmpsb
jne
jl
lcall
xchg
adc
mov
aas
in
iret
jl
int
xchg
imul
aam
and
cld
in
mov
icebp
xchg
sbb
les
jbe
push
mov
sbb
or
xor
xor
mov
scas
inc
xchg
mov
cmp
lock
cmpsb
cmp
and
jbe
lahf
scas
stc
mov
adc
ljmp
push
loopne
je
outsb
aad
xor
in
jb
push
mov
popf
daa
outsb
and
aad
add
lds
imul
std
push
in
pop
push
fs
jmp
out
ss
push
or
addl
push
pop
sub
fs
sbb
xchg
or
and
fwait
pop
xchg
add
mov
ds
je
test
jecxz
or
xor
lcall
lcall
fmull
rclb
push
data16
push
pop
xor
xchg
addr16
jnp
aam
mov
leave
neg
mov
xor
xchg
dec
imul
xchg
insb
ds
negb
sbb
femms
or
xor
or
xor
pop
push
scas
sti
or
adc
xor
add
cmp
jge
cmpsl
hlt
push
scas
pushf
xchg
xchg
mov
xchg
push
mov
outsb
sub
cmp
enter
push
insb
or
inc
inc
sahf
cmp
int
incb
scas
xchg
jns
mov
test
jmp
mull
jge
es
sbb
pushf
adc
add
sbb
sub
popf
add
and
xor
adc
push
lret
or
jge
pop
stos
sbb
adc
imul
fistps
call
cwtl
inc
inc
fwait
insb
mov
jle
mov
test
xchg
sub
mov
les
or
loope
pop
or
cld
sti
jmp
out
cmpsl
sub
jle
inc
shr
sub
mov
lea
adc
push
inc
mov
and
jecxz
shll
clc
xchg
imul
push
mov
jge
mov
mov
fwait
aam
xchg
pop
or
or
cmp
mov
fmul
dec
xchg
stc
outsb
daa
add
jne
inc
push
out
push
mov
aas
xchg
xchg
into
mov
add
pop
xorb
mov
add
push
test
xchg
addl
rolb
pop
add
fadd
push
mov
inc
jne
fstpl
mov
dec
or
push
les
icebp
jg
out
popa
sets
cmp
pushf
push
dec
ss
mov
xchg
sub
cli
adc
ret
lea
fld1
jb
add
adc
push
repnz
cmp
jl
xchg
daa
mov
cmpsl
in
gs
jb
daa
lods
ret
lods
sti
xchg
sub
cmp
xchg
jnp
mulb
xchg
or
mov
rorl
mov
dec
fisubl
cwtl
add
sub
push
sbb
cmp
sti
dec
xchg
and
xchg
mov
mov
movsb
lcall
int3
int
push
ds
and
pop
mov
iret
sbbl
jmp
mov
lret
mov
pop
pusha
scas
inc
sbb
in
inc
cmp
test
xchg
hlt
add
popf
xor
hlt
xor
add
xchg
aaa
adc
xchg
ss
fsubrs
or
test
jmp
pop
in
and
mov
mov
scas
adc
cmpsb
jle
push
test
push
ljmp
adc
pop
aam
push
push
inc
loopne
jecxz
push
roll
fstpt
sbb
adc
ror
out
subb
sbb
adc
sub
insl
enter
divl
sahf
imul
dec
mov
jne
cmp
inc
mov
cwtl
adc
add
call
inc
test
push
popf
insb
jne
leave
shr
jnp
cmp
and
xor
mov
cmp
and
jae
add
mov
jns
orl
pop
xchg
dec
loopne
push
jb
loope
xor
cmp
push
notb
sub
xchg
cmc
ja
mov
pushf
stc
cli
rcr
aaa
in
inc
rep
xchg
mov
jnp
out
into
xor
sbb
and
mov
cmp
lods
stc
pop
mov
insl
ss
add
pusha
sub
dec
add
shlb
mov
cmpsb
out
clc
sahf
pop
lahf
enter
outsl
sub
push
gs
xchg
xor
daa
mov
imul
adc
push
loope
mov
jne
jmp
pop
shll
fildll
test
mov
push
pop
cld
or
mov
mov
mov
or
in
xchg
out
push
cmp
das
pop
bound
clc
mov
lret
bound
and
aaa
push
dec
jp
mov
jge
fldenv
ror
mov
mov
or
stos
popl
dec
pop
push
sub
inc
pop
sbb
sbb
pop
push
cmp
fidivl
shlb
cltd
outsb
xchg
outsb
and
sbb
lds
mov
daa
pop
fcomps
nop
adc
mov
mov
fdivrl
xchg
rcll
jp
sahf
rcrl
mov
hlt
fcmovb
bound
or
hlt
push
outsb
dec
xor
mov
dec
data16
mov
leave
jne
jbe
mov
or
xchg
out
and
inc
cli
hlt
not
sbb
fisubs
imulb
int3
xor
sub
xchg
push
mov
push
sbb
jb
mov
mov
mov
xchg
rcr
push
lahf
sbbl
ljmp
inc
rcrb
cld
dec
mov
adc
push
idivl
xor
cli
lock
push
inc
xlat
sarl
stos
push
rolb
pop
nop
sbb
dec
cwtl
jmp
sti
adc
hlt
shr
mov
lret
add
scas
pop
lods
or
lods
mov
sar
mov
or
xor
mov
out
or
jae
pop
sub
enter
clc
dec
popf
je
mov
mov
push
dec
jno
push
add
js
fisttps
fsubr
jnp
jae
dec
xor
push
insb
mov
sti
mov
cli
jg
rcll
mov
cmp
je
xchg
cmp
ss
xchg
cmp
mov
push
mov
mov
lret
cmc
fcomps
test
xchg
mov
out
adc
sub
lds
inc
push
xor
xlat
mov
into
xchg
aaa
incl
pop
pop
fbstp
mov
cmp
mov
orl
xchg
mov
aad
enter
sbb
mov
xchg
push
cmp
test
push
loopne
out
sbb
pushf
scas
adc
add
xchg
mov
fwait
ret
or
dec
aas
adc
mov
sub
xor
xchg
xchg
dec
mov
popf
push
push
fnstenv
aaa
fidivs
dec
mov
aaa
outsl
mov
inc
push
push
lods
xlat
push
sbb
out
repnz
test
xor
jmp
mov
imul
and
rolb
mov
jl
call
cmp
fdivs
dec
jg
or
mov
jo
or
adc
imul
fwait
mov
shlb
cs
dec
cmpb
xchg
repz
stos
rcrl
jb
xchg
in
lock
jecxz
pminub
jnp
adc
out
les
outsl
cmp
je
sbb
inc
shlb
mov
scas
mov
orl
or
clc
adc
pop
in
inc
icebp
dec
push
adc
in
divl
ss
pop
add
cmp
or
push
cmp
out
sbbl
insb
ror
pop
iret
mov
push
sub
mov
ret
cmp
outsl
out
push
shlb
xor
imul
mov
mov
test
insl
out
xlat
sahf
mov
mov
shlb
mov
adc
lret
pop
xchg
pop
mov
lret
mov
bound
pushf
or
insb
fidivl
lret
in
nop
pop
mov
mov
jb
sti
pop
stc
popf
test
or
mov
add
mov
imul
shll
mov
mov
stos
jns
push
dec
out
mov
mov
mov
bound
mov
fdivrl
test
xor
out
pop
or
mov
call
into
das
sbb
dec
jle
popf
cmp
mov
mov
shl
ja
mov
pop
int
sub
xchg
stos
jg
das
aam
jecxz
aad
jmp
xor
lds
push
mov
xchg
loop
lret
scas
icebp
add
xor
stc
pusha
test
jmp
sbb
and
loop
int3
adc
gs
aam
push
dec
cltd
jecxz
stos
mov
aaa
gs
push
insl
pop
inc
adc
insl
inc
jo
test
aaa
mov
out
dec
pop
outsb
inc
sbb
or
pop
mov
cmpsl
inc
pop
jge
jmp
push
stc
in
notl
jo
and
sbb
and
cmp
in
inc
call
lahf
incb
add
adc
push
mov
fs
mov
int3
in
dec
inc
test
sbb
dec
std
inc
xchg
fs
push
cmpsb
aaa
lahf
lcall
cld
out
inc
fsubr
xor
push
sbb
gs
xchg
xchg
mov
mov
lock
stos
repnz
dec
push
inc
movsb
insl
xchg
adc
mov
sbb
ficomps
into
out
es
pop
fistpl
clc
mov
ss
data16
ljmp
add
adc
jno
mov
sub
sub
lea
leave
pop
jge
mov
in
lods
fwait
xchg
jl
mov
and
inc
js
mov
shrl
outsb
lods
rorl
scas
mov
sub
das
ds
ret
mov
inc
cmp
cmc
or
js
or
or
lsl
adc
test
out
cli
sub
pusha
daa
addr16
shlb
fldcw
jge
mov
ds
je
imul
sbb
push
vaddpd
movsb
xor
jmp
xchg
or
fwait
pop
push
sahf
outsb
in
fucomi
ss
pop
popf
leave
adc
pop
imul
jecxz
daa
mov
xchg
sub
lods
inc
dec
pusha
mov
jl
jae
push
cmp
imul
push
sub
popf
cmp
bound
mov
mov
or
incl
jno
rcrl
mov
inc
jne
adc
nop
dec
jns
cmp
dec
je
cmp
movsb
loop
mov
dec
push
adc
push
jmp
inc
push
jnp
repz
or
adc
nop
inc
enter
fimuls
push
sbb
scas
les
dec
xchg
scas
clc
movsb
adc
sbb
imul
movsl
ljmp
pop
nop
cltd
jne
pop
mov
shl
cmp
xchg
fsubr
sbb
enter
cwtl
jnp
pushf
sbb
inc
xchg
and
and
and
lods
rolb
and
mov
sbb
sbb
xor
imul
and
and
mov
cltd
or
scas
or
dec
push
inc
or
push
rcrl
rorb
add
cmc
das
rorb
int3
pop
pushf
or
push
jg
push
fidivrl
outsb
roll
popl
test
movsl
jne
das
clc
inc
int
dec
aam
push
pop
or
or
ss
push
fdivl
movsb
sti
xchg
cmp
in
sbb
adc
imul
push
mov
out
orb
stos
in
xor
out
xor
inc
mov
test
xor
mov
xor
adc
inc
mov
fildll
jns
iret
jnp
or
mov
push
add
sub
push
ljmp
jge
mov
ds
sub
in
shll
test
fwait
test
movb
jp
popf
popf
cmc
jp
xchg
mov
push
add
jns
jns
and
pushf
ljmp
mov
outsb
pop
push
jg
or
pop
pop
add
xchg
movsb
repnz
pop
fists
fadds
popa
loope
and
fwait
xchg
scas
test
sbb
sub
or
ret
xchg
mov
and
jle
push
fdivl
cwtl
mov
mov
mov
add
es
cmc
dec
les
push
movsb
and
sahf
xor
imul
push
push
mov
out
and
in
pop
nop
out
mov
fbstp
lock
mov
test
test
adc
dec
sti
pop
ret
inc
outsb
xchg
push
leave
iret
push
pop
add
ret
push
mov
xchg
stos
scas
out
jnp
mov
pop
pop
inc
aam
push
lret
femms
rcl
cmpsb
mov
shll
movsb
inc
sbbb
int
adcb
mov
mov
push
test
xlat
enter
jnp
pop
mov
dec
movsb
call
pop
in
das
fstps
or
sbb
lock
cmp
xchg
lock
cltd
sbb
ret
xchg
jle
fisttpl
iret
sbb
xchg
sbb
jmp
ljmp
movsl
mov
jns
loop
sahf
dec
mov
mov
xchg
outsb
xchg
push
fistpll
mov
add
icebp
sub
bound
std
jo
pop
fwait
test
and
mov
repnz
sub
and
push
iret
xor
cmpb
jmp
aad
add
mov
xchg
pop
stc
int
dec
testb
pop
test
mov
add
stos
adc
mov
stos
adc
pop
sbb
push
and
dec
sarb
xchg
jne
ss
pop
scas
fwait
inc
aad
adc
jns
inc
mov
stos
outsb
mov
loop
pop
rorb
push
shrl
mov
pop
pop
mov
movsl
xor
stos
jle
sarl
mov
mov
mov
insb
lret
rorl
mov
cmp
mov
push
mov
lds
fcmovnb
jns
int3
mov
les
mov
adc
es
inc
rcrl
loopne
dec
push
repz
inc
xchg
jns
sub
mov
mov
cmp
or
mov
pusha
xor
xor
scas
aam
nop
push
mov
xor
mov
pushf
aas
sbb
fimuls
nop
nop
pop
movsl
lret
or
mov
lcall
xchg
jp
bound
sahf
leave
mov
cbtw
xlat
jle
mov
enter
xor
loopne
fstpt
jecxz
jl
or
cld
rcll
or
add
paddsb
push
mov
mov
jg
jns
insb
and
sbb
gs
pop
int3
sub
adc
hlt
cmp
pop
andb
inc
es
sub
or
leave
cltd
out
cmpsl
push
pop
iret
xor
je
xchg
arpl
pop
into
and
subb
push
push
or
mov
mov
cmp
mov
aas
movsl
divb
aad
sbbl
out
lds
lods
int
sbb
in
sub
cmp
mov
jmp
push
mov
sbb
mov
ds
jb
rcrl
push
cld
xchg
clc
pop
push
jne
mov
dec
inc
es
adc
cmp
jmp
xor
mov
dec
xor
outsl
xchg
dec
jne
inc
xchg
pop
mov
clc
ss
mov
test
pop
jg
test
cltd
daa
stos
fs
adc
pop
sub
setb
mov
leave
pop
inc
fs
add
std
sbb
dec
xor
sub
sub
dec
or
mov
out
mov
outsb
sub
sbb
roll
out
xchg
sahf
jmp
addl
push
mov
jb
dec
inc
ds
call
pop
test
xchg
add
pop
cmp
out
add
jge
cmpsl
dec
dec
nop
pop
std
pop
negl
jns
push
jns
push
xchg
or
adc
mov
outsb
dec
clc
and
dec
xchg
mov
scas
push
call
js
add
fs
js
and
push
addr16
jae
sbb
and
mov
jmp
jge
mov
in
imul
jle
mov
inc
fisttpll
lea
pop
push
hlt
addb
js
lahf
aaa
jne
xchg
jp
std
inc
ljmp
inc
dec
pop
sbb
out
lahf
inc
fwait
shrb
aam
adcb
sub
and
cmp
int3
push
sbbb
in
cmpsb
mov
jo
or
sub
mov
das
pop
pop
adc
repz
pop
mov
cwtl
push
cmp
sti
sub
in
push
mov
or
sub
mov
shrb
clc
push
lret
inc
pop
jg
in
sbb
mov
cmp
aam
pusha
or
mov
mov
xchg
lock
shl
int3
addr16
or
xlat
xchg
adc
mov
out
into
jle
push
cmp
aam
es
lret
pop
xchg
dec
xchg
adc
sti
and
ljmp
dec
ds
hlt
push
cmp
mov
faddl
rolb
fcompl
xor
adc
sbb
test
sarb
lods
sbb
add
mov
stos
lods
inc
shlb
shlb
mov
add
and
mov
jae
pop
sahf
enter
inc
in
pusha
cmp
mov
inc
hlt
imul
mov
ds
daa
sbb
pop
inc
movsb
outsl
jmp
pop
imul
fs
and
mov
mov
decb
xor
push
repnz
push
adc
iret
test
fwait
lds
pop
or
push
jnp
aam
dec
imul
xor
pusha
cmp
pop
arpl
lods
sbbb
jecxz
and
cld
outsb
mov
loopne
ja
or
stos
repz
lods
ficomps
mov
add
addr16
add
nop
inc
jno
jg
shl
rorl
adc
xor
outsl
inc
lret
das
subl
in
jg
mov
not
or
outsb
jae
pop
mov
cmp
popf
testl
icebp
pusha
push
outsb
or
lods
into
or
fisubrs
pop
pop
mov
mov
sahf
mov
lea
repnz
fs
inc
cmc
ret
push
mov
pop
iret
popf
cmp
or
fstps
adc
add
mov
test
cmp
cmc
push
or
jb
push
cltd
or
inc
icebp
pop
mov
mov
cmpsl
adc
mov
loope
int
pop
and
xor
xorl
in
ret
in
fldl
add
jl
mov
add
or
ror
mov
sbb
outsl
mov
add
xchg
mov
xchg
call
hlt
cmc
xor
pushf
shrb
mov
mov
add
mov
add
cmpsl
mov
sub
idivl
ret
adc
xchg
mov
sbb
into
or
insl
jp
loopne
xor
in
mov
ret
cmp
cmp
aam
rcrl
jmp
add
lock
cmpsl
hlt
add
push
mov
lret
sar
pusha
adc
mov
cli
jmp
js
or
sarb
mov
xor
fiadds
jle
data16
xchg
add
movsl
pop
push
addr16
in
sub
sub
enter
pop
test
mov
imul
stos
sbb
mov
adc
sti
dec
iret
jae
dec
leave
cmp
push
push
push
and
icebp
cmpsl
cltd
fidivrl
and
or
in
cld
in
into
mov
paddw
sub
pop
pop
mov
cli
movl
xor
and
fidivrs
or
mov
or
mov
xor
push
out
mov
sarl
mov
mov
and
inc
mov
test
add
xor
jge
xor
dec
mov
adc
in
jae
inc
mov
or
pop
pop
out
movsb
inc
sbb
mov
xchg
pop
cmpsl
arpl
lahf
fmul
aad
aaa
mov
jmp
aaa
jp
xchg
notb
ficoml
or
icebp
in
inc
in
pushf
aam
push
mov
ja
sarb
outsb
int3
cmpsl
aas
xchg
adc
sbb
or
inc
fdivrl
jae
cli
scas
jmp
push
push
lgs
jbe
cli
das
mov
nop
inc
addr16
cmp
lret
cmp
push
adc
add
jbe
add
stos
ja
fwait
jbe
mov
or
aaa
mov
xor
pop
ja
incb
daa
push
jne
xchg
xchg
ret
dec
fwait
sub
sbb
sarl
cmc
and
loop
mov
and
cmp
fisubs
adc
and
dec
loope
lcall
or
ja
mov
mov
out
push
and
sub
jnp
movsb
scas
dec
xor
outsb
dec
mov
ja
mov
fsubs
popa
pop
popa
cmp
dec
push
lods
out
aam
mov
jp
mov
aam
inc
xchg
lods
lock
pushl
fstpt
add
sbbl
pop
or
stos
inc
adc
pushf
push
into
pop
xchg
outsl
stc
lahf
cmpl
xor
or
rcll
push
cwtl
mov
lods
outsb
lock
mov
stos
mov
mov
mov
jo
push
test
test
and
xor
sahf
call
pop
pop
cmp
std
je
into
ret
xchg
and
mov
mov
gs
mov
xchg
or
lea
fwait
in
sub
andb
aam
mov
push
fwait
in
mov
sub
leave
jnp
adc
mov
imul
ret
dec
cli
mov
aas
out
mov
pop
mov
mov
xor
push
and
xchg
mov
and
mov
and
and
sub
clc
xor
in
aam
mov
sti
aam
push
sub
inc
pop
push
xchg
enter
iret
in
icebp
xor
sub
mov
adc
cmp
mov
int
adc
mov
mov
adc
add
movsl
repz
sub
cmp
imul
outsl
xchg
negb
adc
or
outsl
in
jns
push
repz
sbb
in
mov
xor
or
xchg
adcb
jp
loopne
add
aam
pushf
mov
call
push
xor
or
sbb
jle
xchg
call
inc
pop
pop
pop
in
repnz
ds
mov
int3
loop
fsubrl
pop
loopne
cmpsb
testb
add
orl
cmp
in
cmpsl
mov
inc
fsubl
data16
js
pop
mov
test
or
jp
scas
scas
jp
stos
stos
xor
mulb
cmc
fisubrs
je
leave
loope
popa
mov
xchg
push
stos
push
negb
rcl
inc
jp
mov
or
cld
popa
mov
or
cmpsl
pop
outsb
jmp
pop
mov
pusha
add
xor
scas
stc
add
jo
outsb
lods
mov
addb
adc
sahf
rorl
lds
aas
push
lods
lret
cmp
cs
mov
das
jb
xchg
push
xor
vaddsd
xchg
aaa
flds
cmp
cmpsl
hlt
cmp
cmc
es
enter
cs
insl
outsl
ret
dec
lahf
mov
aas
adc
cmp
jg
fs
ljmp
les
aas
jne
aas
in
or
jle
adc
xchg
sub
or
scas
mov
nop
mov
test
mov
bound
pop
ss
scas
mov
cmp
push
xchg
push
scas
out
test
mov
cmpsl
push
das
mov
loop
push
inc
xor
repz
jne
inc
jbe
dec
cli
das
cli
ret
notl
sahf
pusha
call
add
sti
xchg
lods
push
add
enter
inc
lods
cmp
bound
icebp
out
pop
add
mov
shrb
mov
imul
xor
xchg
mov
hlt
call
dec
pop
mov
jmp
mov
loopne
dec
xor
mov
fwait
xchg
pop
addr16
jnp
data16
test
inc
pop
xchg
daa
and
sbb
cmp
mov
dec
test
xlat
jnp
in
cmp
mov
popf
in
pop
int3
adc
fadd
pushl
cmp
fbstp
out
into
cmp
cmp
orb
push
or
lods
lret
mov
pusha
or
outsb
inc
sbb
call
and
ja
loope
mov
sub
mov
inc
repz
pop
push
pop
es
lods
or
idivl
movsb
cmc
sub
mov
out
into
push
test
dec
in
outsb
popa
xor
dec
adc
pop
xchg
adc
popf
dec
shrb
stc
shr
sub
xor
push
in
cmp
ret
jo
push
fldl
cmp
les
mov
jecxz
adc
pushf
jbe
dec
mov
lahf
push
jae
jae
stos
lock
add
dec
lods
outsb
inc
popf
fnstcw
fidivrl
xor
ja
popl
xchg
scas
add
out
in
faddl
cmp
adc
push
push
shlb
jnp
cld
add
xchg
lret
dec
arpl
shll
inc
jb
out
pushf
cmp
xorl
and
test
or
mov
pop
ljmp
fisttpll
jae
add
fsubs
lret
sub
stc
lock
aad
fcoms
xchg
dec
repnz
pop
dec
sahf
dec
or
inc
xor
movsl
sti
in
iret
or
and
fsubl
ss
sbb
cmc
clc
adc
adc
xor
test
xor
popa
in
xchg
loope
pushf
gs
pop
test
xlat
jle
in
xchg
xlat
loop
arpl
outsb
popa
pusha
xchg
sub
dec
gs
insl
or
xor
fldt
stos
xchg
out
add
jo
dec
aaa
mov
sysenter
out
mov
xor
push
adc
rorl
push
or
pop
imul
mov
fiadds
cmpsl
adc
das
imul
movsl
mov
jbe
das
fucom
dec
test
or
dec
mov
cmp
lcall
pusha
imull
lods
jae
jno
aad
sub
push
mov
mov
mov
cs
cltd
jno
out
in
fwait
mov
ret
mov
bound
cltd
mov
inc
adc
and
push
inc
xchg
pop
sahf
out
mov
cmpsb
dec
loope
mov
les
pop
mov
aam
dec
fcom
push
test
push
icebp
dec
ret
fsubr
mov
xor
cmpsl
es
push
sbb
mov
jmp
lods
cmpsl
push
xchg
pop
pop
push
inc
jno
arpl
adc
xchg
pop
mov
lods
fidivrs
fdivrl
xor
mov
lock
and
push
xchg
lcall
jae
sbb
outsl
insl
pop
flds
mov
xchg
iret
pop
mov
inc
mulb
adc
sti
jmp
stc
aas
mov
or
jmp
xchg
xor
rolb
sub
sbb
daa
sar
jp
sbbl
in
lret
xchg
pop
bound
filds
push
shrl
outsb
mov
add
or
mov
sub
ja
xchg
push
pop
sub
and
out
sbb
arpl
orl
inc
xlat
and
cwtl
jg
sbb
cli
xor
inc
enter
add
aas
mov
adc
ja
in
fcomps
pop
aam
scas
test
roll
adc
fiadds
and
cmp
push
push
lea
mov
push
pop
or
cmp
popa
lret
jmp
cmp
push
test
imul
js
cmp
cmp
push
cmpsb
adc
xchg
mov
aaa
popa
add
enter
adc
jae
add
mov
mov
andb
cmp
icebp
pop
lds
dec
lods
roll
sub
out
or
push
dec
loop
movsb
sarb
in
push
mov
data16
adc
dec
daa
clc
mul
xchg
dec
cwtl
pop
pushf
and
cmpsb
adc
aaa
push
aad
inc
xchg
mov
and
int3
fdivr
cwtl
sbb
bound
test
or
add
lock
and
xchg
mov
rcrb
xchg
jbe
addb
repz
scas
lret
fdiv
outsb
sbb
cmpsb
fdivl
lret
push
pop
or
or
push
and
inc
aad
pop
sbb
lahf
mov
hlt
mov
mov
enter
insb
push
movsl
jns
xchg
cmc
cmpsl
mov
mov
inc
sbb
and
xchg
out
jle
out
cmpsb
popl
dec
push
sub
cmp
add
push
and
pop
leave
sbb
mov
inc
and
jmp
lods
and
inc
mov
ret
pop
and
movsb
fwait
dec
sahf
cld
lea
out
pop
cmc
sub
dec
inc
cmp
xchg
jecxz
mov
push
mov
imul
aam
loopne
nop
rcrl
mov
mov
pop
test
es
mov
int
in
or
mull
loope
in
dec
arpl
inc
repz
popf
mov
pop
mov
add
mov
push
ror
in
loopne
pop
cld
in
cmp
xor
inc
inc
imul
cmp
in
push
sarb
mov
aam
jno
pushf
rorl
and
xor
out
add
cmc
orb
jo
lcall
xchg
and
jb
mov
roll
lcall
jae
or
xor
icebp
jl
test
xchg
push
adc
or
cmpsl
sti
stc
repz
rolb
jbe
das
push
inc
test
bound
sub
dec
xor
dec
movsl
push
mov
or
jp
pop
notb
cmp
lret
lds
sub
mov
add
xchg
jnp
add
cmpsl
aad
repnz
lahf
jl
sti
in
jp
pop
aas
loope
andl
outsb
aam
dec
pop
out
mov
shlb
xchg
jge
cmp
fs
mov
push
into
das
dec
dec
inc
scas
push
ds
mov
or
loope
outsl
push
push
int3
inc
aas
sub
mov
fcomi
lods
call
inc
test
loope
cmp
mov
les
xor
pop
xlat
push
mov
lock
xchg
jae
sub
xorb
add
push
add
push
outsb
das
push
pop
xchg
ljmp
das
mov
dec
test
data16
add
testb
in
fdivrs
xor
sub
push
push
es
shr
insb
or
aad
mov
ret
pop
inc
scas
and
repz
jne
xor
jbe
insb
adc
mov
adcb
cltd
cwtl
ljmp
jge
add
mov
adc
popf
pop
fistpll
pop
cmpsb
xchg
jmp
pop
cltd
xor
xor
sbb
das
movsb
dec
test
cld
filds
and
jb
insb
jp
nop
leave
scas
and
jne
add
inc
mov
sub
jo
dec
in
jo
cmp
es
sub
or
and
xchg
sbb
fs
fstpl
scas
cmc
lahf
faddl
mov
inc
adc
mov
pop
jns
sub
call
aad
rol
push
mov
ret
add
add
daa
les
jp
sub
dec
mov
popf
mov
xchg
fsubrs
sbb
mov
or
arpl
test
xlat
push
loopne
mov
loope
xchg
movsl
shll
mov
scas
xor
lahf
sbb
ud2
stos
and
std
push
aas
fs
sub
mov
mov
lret
cmp
mov
push
mov
rcrb
sbb
fiadds
push
xor
mov
movsb
sub
sub
in
call
jae
cmpsl
fucom
and
jne
fs
jns
js
out
sbb
lods
push
out
aaa
dec
push
shlb
xchg
jne
jo
mov
testl
and
in
xlat
push
je
shll
mov
inc
test
add
lret
subb
push
ss
pop
lds
and
and
cmp
outsb
in
lods
mov
jl
repz
fbstp
ret
inc
rolb
xlat
sbb
jg
sahf
mov
jnp
jle
jno
loope
lcall
icebp
sub
pop
inc
pop
add
xor
jg
inc
sub
mov
lea
jb
leave
mov
mov
mov
adc
inc
scas
jl
cmp
xor
and
outsb
sbb
sti
adc
mov
lds
jns
and
test
imul
pop
mov
add
sub
mov
outsl
cs
or
dec
and
sbb
add
push
xor
mov
push
sbb
sbb
and
jae
or
fwait
scas
ret
mov
cmpsb
add
sbb
push
lret
inc
sahf
dec
rorl
les
jmp
es
cmpsb
sub
and
mov
push
fildl
push
mov
xchg
in
mov
stc
xor
das
xor
aaa
pusha
mov
fwait
pop
adc
dec
fmull
sub
ss
scas
xchg
xchg
test
mov
and
push
add
push
xchg
fcompl
shrb
mov
cmp
in
or
sub
outsl
pushl
movsl
rorl
dec
sti
cmc
pop
addr16
xchg
xchg
mov
mov
jp
mov
jmp
leave
popa
lods
scas
loope
sar
cltd
or
out
mov
mov
xchg
dec
rol
and
pop
sarb
inc
fcos
int3
call
jae
fmuls
ljmp
stos
sbb
pop
enter
js
cmc
push
mov
push
dec
std
push
and
push
int3
divb
push
in
insb
push
scas
movsb
mov
adc
xchg
sbb
movsl
mov
inc
bnd
push
inc
adc
sarl
xchg
or
jmp
insb
out
jne
mov
pop
rolb
scas
rol
out
sub
cltd
shlb
je
jle
loope
dec
pop
push
les
scas
addr16
mov
pop
cld
idivb
dec
inc
jno
mov
push
jp
and
int3
cmp
out
ror
fcoms
loopne
sarl
cmpsl
repz
mov
sub
cwtl
test
in
sub
xor
jnp
mov
aas
addr16
mov
inc
pop
and
sub
into
xchg
fisttpl
out
jmp
lcall
mov
cmpsl
jno
and
dec
add
inc
mov
jo
inc
lods
ror
rcrb
gs
sarl
mov
adc
push
add
jne
stos
xchg
mov
loopne
and
bound
fmull
fnstsw
mov
in
test
test
shll
xchg
je
inc
jmp
ss
lret
enter
stos
cwtl
test
movsb
xor
inc
jge,pn
push
jle
dec
mov
xor
and
sub
push
imul
stos
xlat
and
call
insl
mulb
xor
aam
add
das
jmp
lahf
lea
arpl
idivl
jecxz
stos
repnz
xor
clc
pop
test
mov
scas
sarb
movsb
loop
cmp
outsb
sub
jp
lret
jp
nop
push
cmp
jecxz
cmp
adc
call
aad
dec
pop
inc
sbb
daa
or
sti
jns
mov
jno
insl
add
lahf
adc
iret
mov
aaa
and
dec
cmp
sbb
push
or
imull
lea
mov
push
fs
mov
push
ret
add
add
andl
and
or
hlt
push
sbb
popf
test
repnz
cmp
jge
fcomps
cmpb
xor
sub
and
or
inc
mov
int3
adc
adc
stos
dec
movsb
ret
or
sbb
mov
inc
les
mov
idiv
aad
div
mov
insb
dec
adc
leave
fiaddl
addr16
data16
xor
shlb
xchg
sub
lock
call
fbstp
push
sub
in
fsubr
fimull
add
mov
lock
or
jmp
or
cmpsb
lret
sbb
fcmovu
xor
out
popa
jb
or
int3
mov
out
or
push
clc
xlat
push
rorl
mov
xchg
pop
or
push
aaa
pop
aam
mov
stc
pushf
incl
sub
or
push
cmpsl
into
popa
divl
cli
lock
inc
mov
dec
push
aas
jbe
jbe
cmp
jo
push
and
sub
inc
call
or
mov
lods
dec
test
ret
sbb
dec
outsl
stos
add
add
mov
popa
mov
es
push
ret
clc
ret
sarl
xchg
xor
out
sub
adc
xor
out
clc
js
cmp
mov
and
lahf
push
add
push
and
or
mov
mov
xchg
arpl
imul
mov
ljmp
test
fwait
sub
jnp
fmul
inc
clc
xchg
jge
xchg
idivb
sub
loope
dec
mov
xor
push
nop
adc
fcoml
add
cli
sub
push
loop
shr
or
in
sbb
orl
sahf
xchg
push
lcall
push
push
cmp
es
xor
push
sbb
popf
and
xchg
and
push
mov
mov
fstpl
cmp
into
add
and
sar
lcall
sbb
std
test
rcrb
fisttpl
int3
daa
jmp
fnstcw
loope
pop
sbb
aaa
out
in
pop
loope
aas
lds
jge
push
xor
push
lock
xor
lods
fdivr
in
mov
cs
mov
aad
lret
out
loope
lock
andb
ss
aas
loopne
push
in
mov
aad
jno
dec
adc
pop
lret
xor
jb
shrb
rolb
insb
das
mov
mov
mov
popa
mov
out
sar
shrb
cmc
sbb
pop
jbe
gs
rclb
mov
xchg
pop
aam
xor
inc
lret
pop
fcoms
out
xchg
js
cld
lods
ss
push
push
fmuls
repnz
cli
xchg
rol
jp
ret
dec
sub
cmpsl
mov
lret
inc
cmpsl
xlat
test
add
adc
repz
mov
insb
loop
lret
adc
call
pop
idiv
xchg
jmp
ljmp
repnz
add
divb
cmp
adc
ss
pop
dec
lret
mov
xor
pop
or
xor
cmp
scas
out
and
push
mov
xor
in
jns,pn
andb
push
std
popf
rol
lock
xor
jl
ljmp
iret
bound
and
test
inc
xor
mov
out
aaa
test
push
icebp
into
push
mov
cmpl
cltd
ljmp
into
jb
adc
jns
cld
sbbb
sbbl
lock
mull
push
push
shll
xorb
and
inc
in
out
test
mov
jnp
and
pop
in
aas
sub
shlb
popf
test
cmp
pop
scas
jnp
out
cwtl
je
push
pop
enter
aaa
in
outsl
push
xchg
pop
loope
sub
mov
mov
cmpsb
adc
sub
mov
jne
inc
xor
jmp
daa
xor
mov
jnp
ret
mov
push
and
in
andb
icebp
xchg
ret
pop
stos
notl
push
jno
xchg
xchg
mov
and
mov
pushf
clc
jl
jp
adc
fadd
test
fs
rorl
inc
push
push
xchg
mov
xchg
mov
or
adc
sbb
jecxz
icebp
or
mov
xchg
imul
sub
js
ret
dec
filds
sbb
popa
sub
nop
out
pop
pusha
stos
sub
pusha
sub
cli
mov
cwtl
or
and
in
push
scas
loop
test
ss
xor
and
stc
mov
adc
fwait
jbe
aam
shr
arpl
jne
add
bswap
jecxz
dec
inc
seta
lret
mov
mov
xchg
mov
xchg
inc
or
iret
fnstenv
adc
outsl
push
cli
fidivl
add
out
sub
pusha
imul
jbe
push
pushf
loopne
les
and
inc
je
jecxz
es
insb
sbb
add
dec
cmp
inc
jg
mov
xchg
sti
test
repnz
push
bound
add
lret
push
adc
adc
aaa
or
lock
in
stc
lods
xchg
xor
aad
shl
add
xchg
fstpt
push
xlat
xchg
out
divl
test
dec
aaa
imul
sar
or
and
xor
adcl
dec
push
cmp
aam
outsl
xchg
stos
sbb
cmp
sub
shr
sar
std
push
mov
in
cmp
into
jge
stc
fmull
mov
pop
pop
jecxz
cmc
ficoml
or
sub
into
in
sub
jb
loopne
mov
or
in
mov
das
dec
es
mov
imul
outsb
mov
test
jns
xchg
cld
stos
js
aas
out
stos
js,pn
mov
or
mov
push
js
jo
pop
movsb
mov
push
aas
outsb
xchg
test
std
push
idivb
mov
mov
aad
mov
cs
mov
mov
fdivr
fwait
mov
xchg
push
mov
sbb
idivb
enter
or
jg
loope
mov
rorb
jno
cld
dec
sbb
out
fnsave
pop
cld
ss
pop
out
in
mov
movsb
sub
jge
std
shlb
and
nop
lods
mov
js
rol
fwait
out
lock
mov
xor
dec
or
popa
add
mov
mov
add
xchg
in
loopne
or
add
add
imul
inc
notl
addl
gs
pop
in
nop
in
mov
movl
cwtl
pop
out
mov
ds
divb
jecxz
popa
mov
jg
sbb
stc
cmpsb
repnz
jge
xor
fildll
push
insl
popf
sub
imul
pushf
shrb
cltd
jecxz
loop
idivb
and
out
cld
push
movsl
decl
leave
nop
loopne
movsb
xlat
out
sub
mov
jne
xchg
pop
pushf
pop
push
cmp
xchg
jns
mov
fcom
scas
inc
dec
cwtl
int3
cmpsl
jle
shll
xchg
addr16
and
push
xchg
cltd
jbe
cmc
in
add
test
sub
in
shll
mov
ret
jmp
out
or
push
jmp
xor
xlat
jae
jnp
sub
lret
cld
and
bound
sub
adc
push
dec
and
jle
cmp
pop
divl
pop
sub
ljmp
push
test
and
fwait
mov
jnp
mov
cmpsb
push
and
pop
outsb
push
loope
cs
add
or
sti
idivb
popf
cmpsb
pop
push
movsb
popf
adc
movsl
pop
jns
jl
mov
sarl
cmp
js
mov
jge
test
repnz
out
mov
dec
inc
dec
cli
and
cmp
push
icebp
leave
pop
std
cmpl
pop
lds
jge
fldl
add
scas
addr16
inc
cmc
repnz
and
pop
aam
pop
loop
popf
xchg
lcall
push
dec
push
inc
xchg
into
icebp
lret
test
mov
pop
sub
andl
sbb
mov
sbb
pop
cmp
movsl
xor
je
mov
or
enter
push
xchg
push
aam
mov
xchg
add
xchg
mov
out
xchg
xchg
pop
cmp
add
mov
dec
addb
jo
cld
mov
and
cmp
mov
dec
inc
loop
inc
daa
inc
scas
mov
mov
repnz
dec
add
ds
add
sub
cli
cli
outsb
rcrb
xor
sub
or
mov
popa
lret
jbe
xor
jmp
mov
mov
out
xor
out
arpl
notb
iret
mov
ja
imul
jge
filds
fidivrs
add
ret
ds
mov
sbb
inc
mov
or
push
into
pushf
mov
mov
testl
dec
pop
dec
into
pop
data16
lea
xor
insb
sbb
ret
sub
mov
shll
adc
inc
aam
lock
mov
insl
into
popf
out
xor
stos
pop
cmp
xchg
imul
cmc
fcmovnbe
in
inc
sti
sbb
push
lcall
repnz
add
int3
frstor
fmulp
insb
pop
fwait
es
sbb
adc
xchg
dec
hlt
jnp
add
and
or
lods
dec
xchg
repnz
xchg
add
lahf
mov
addr16
dec
or
xchg
push
js
subl
inc
add
aas
pusha
inc
sbb
mov
jge
fisubrs
je
sub
int3
divb
or
fcomps
and
xchg
stc
subl
xor
xor
out
notb
dec
outsb
shlb
int
dec
stos
out
or
pop
mov
push
arpl
sub
sub
mov
dec
pop
std
sarl
mov
arpl
push
add
fstps
adc
xchg
xor
ljmp
cmc
mov
sbb
dec
stc
fstps
mov
jb
adc
jbe
ss
jmp
ljmp
push
loope
mov
and
push
bound
repz
loope
sbb
sahf
outsl
mov
dec
mov
push
fst
in
mov
je
addl
mov
add
sbb
repz
jnp
movsl
mov
imul
adc
or
pushf
loope
xor
jns
loop
pop
jns
int
pop
test
mov
icebp
fnstenv
into
scas
sbb
enter
add
jbe
push
fisttpl
add
fsts
pop
iret
cld
dec
xorl
mov
cld
orb
sbb
dec
ss
sub
js
dec
xchg
jge
add
sbb
lea
jno
adc
add
cmpsl
fs
sbb
push
dec
cmp
sbb
dec
jge
call
jb
clc
jl
addl
outsl
cmpsb
js
sbb
aaa
xchg
mov
adc
and
lock
sub
add
ja
les
sub
push
mov
aad
mov
and
xor
repz
movsb
insl
into
dec
sbb
and
sub
stos
popl
cmp
xorl
sahf
inc
das
cld
test
sub
or
jmp
cwtl
inc
push
fldenv
push
mov
cs
inc
lret
pop
in
pusha
xor
pop
rclb
loopne
push
jb
jns
add
loope
xor
sbb
lock
add
or
cmpsb
out
push
and
jns
pop
scas
cmp
lret
pusha
stos
dec
cwtl
dec
pop
sub
or
xchg
into
adc
add
test
test
jno
or
sub
adc
push
cmpsl
test
sbb
cwtl
pusha
iret
jg
inc
mov
sbb
cmpsb
sti
out
mov
into
insl
dec
dec
mov
lods
div
cld
xor
ljmp
dec
movsl
stos
outsb
loopne
loope
push
inc
stc
inc
add
pusha
xchg
scas
loope
aam
stos
fchs
cmpsb
pushf
lahf
xchg
test
dec
pop
push
mov
test
jo
and
mov
push
loopne
mov
mov
rep
mov
add
test
jae
out
cmp
sub
arpl
lret
adcl
imul
cli
loope
icebp
stos
test
push
repz
test
scas
mov
sarb
stos
nop
dec
mov
cmp
aas
nop
incb
lods
jle
pop
ret
out
sub
in
out
dec
dec
and
cmpsl
sbb
shlb
int
out
outsb
cmp
jo
inc
add
dec
pop
test
sbb
mov
movsl
mov
inc
sbb
xlat
xor
adc
js
mov
mov
mov
mov
filds
imul
mov
mov
pop
mov
mov
mov
enter
popf
lods
insl
repnz
out
inc
xchg
cmp
adc
aam
xor
push
dec
dec
or
shrb
xor
mov
pop
movsb
fwait
jg
icebp
fisubrl
insb
je
jmp
jbe
daa
jb
pop
xchg
pop
cwtl
adc
mov
pop
unpcklps
into
xchg
mov
pusha
ficompl
dec
xchg
add
add
mov
cmp
jge
bnd
jl
std
xor
out
test
ficomps
dec
and
lock
outsb
inc
and
push
test
fcmovnb
sub
popf
mov
pop
or
jmp
cmp
aam
push
outsb
test
push
stos
or
sarb
cld
andb
pop
push
cmp
out
add
rcr
mov
popf
jecxz
lcall
jmp
adc
jp
or
clc
sbb
inc
mov
mov
mov
push
mov
mull
fs
pushf
ret
loope
xchg
cli
cmp
shl
test
inc
jnp
pop
lret
xchg
lahf
push
clc
std
cmp
les
pop
mov
inc
jl
call
insb
lods
cli
loope
lds
adc
inc
dec
aam
addr16
rcrb
sub
out
into
inc
and
idivl
aad
sbb
jne
into
sbb
shr
jnp
cmp
int
std
clc
adc
mov
mov
push
mov
pop
and
ds
cmp
leave
xor
mov
inc
hlt
lret
bound
inc
mov
cwtl
aam
jle
pusha
push
pop
xor
pushf
mov
jmp
mov
call
inc
xchg
mov
pop
rorb
pusha
rolb
sub
jbe
pop
lahf
ds
inc
mov
fstpl
jp
mov
fnstsw
dec
sbb
jns
sbb
adc
xlat
jg
je
js
push
pop
sub
in
adc
loope
jle
ficoml
push
movsb
mov
xor
mov
movsl
cmp
lock
mov
and
test
iret
sbb
jno
sahf
aad
shrb
add
dec
lock
cs
inc
cmp
jns
stos
imul
or
mov
arpl
dec
inc
xchg
cmp
adc
insb
movsb
adc
ss
stos
stc
xchg
addb
popa
sub
mov
aaa
cmpsl
jmp
aam
mulb
cmpsb
mov
rcrl
pop
lods
loopne
dec
mov
out
call
cltd
dec
xlat
movsb
inc
adc
xor
scas
mov
test
pushl
int3
ljmp
jnp
pop
sub
les
mov
dec
loopne
adc
std
add
iret
addr16
pushf
sahf
add
push
mov
stc
addb
lea
fiadds
pushf
out
jmp
cs
dec
into
ja
lcall
iret
cwtl
movsl
lcall
sub
xchg
js
in
sbb
xchg
pop
add
cs
fsubs
xchg
rolb
xor
in
cmp
popf
sub
cmp
fidivs
jge
in
mov
icebp
jne
sbb
mov
xchg
add
sbb
lock
bound
out
js
js
xchg
lret
mov
loope
mov
in
push
mov
xchg
cmpsb
add
or
rcl
arpl
cwtl
imul
dec
mov
into
inc
out
mov
into
mov
out
jmp
decb
sarl
mov
shrb
sub
stc
mov
scas
mov
cmp
sarb
cmp
sti
lods
sub
shlb
fsubrs
fldcw
not
cmp
and
push
iretw
repz
sub
lods
sarl
cmp
or
mov
fistl
push
mov
adc
dec
dec
xchg
xchg
out
xchg
insb
lahf
dec
jo
fistpll
insb
ret
data16
or
cmpsb
test
or
dec
ret
popa
lahf
outsb
imul
les
loopne
mov
mov
jl
sti
mov
push
mov
mov
arpl
lods
push
insb
mov
lock
jne
pusha
lret
pop
or
cs
push
dec
jns
cmpsl
add
mov
pop
mov
cmc
popa
inc
lahf
mov
pop
dec
dec
popa
call
xorl
push
sbb
jns
lods
dec
push
or
notb
inc
and
popw
push
adc
movsl
cmpsl
cld
push
xchg
cmp
cmp
das
cwtl
aas
fdivrp
cmp
fistl
lods
xchg
jle
xor
and
add
lock
xor
or
sbb
inc
inc
jb
int
je
push
jo
and
outsl
stos
add
imul
faddl
cwtl
test
incb
mov
je
xchg
inc
mov
sbbl
imulb
mov
cmp
and
sub
enter
cmc
xchg
add
shrb
or
popa
adc
jae
fsubs
pop
vmovmskps
lahf
or
int3
mov
jae
push
adc
repz
and
push
adc
jno
mov
jle
es
les
sbb
js
mov
jp
adc
add
mov
mov
mov
lods
or
mov
sbb
mov
push
mov
inc
cmp
mov
jo
cli
div
fildll
mov
dec
lds
mov
mov
jne
jmp
lcall
loop
popf
mov
or
std
dec
int3
xchg
popa
mov
cmp
push
mov
pop
mov
clc
outsl
mov
jl
ret
adc
out
pop
arpl
pop
mov
xchg
ds
or
dec
out
shlb
xor
in
hlt
pop
les
js
lods
loope
enter
pop
xchg
test
pop
push
cmc
cwtl
adc
ret
or
xchg
lea
loope
dec
mov
jmp
dec
dec
cld
mov
sbbb
ret
dec
mov
mov
mov
jl
inc
imul
cmp
andb
jl
mov
cmp
sbb
inc
jle
fsubrs
lcall
mov
xor
and
add
call
test
push
clc
pop
js
fiadds
inc
popf
orb
and
movsl
or
je
and
divb
fldenv
sub
inc
mov
aaa
lea
jecxz
aam
mov
rorb
push
and
popf
cmp
mov
push
stos
jne
dec
outsb
cmpsl
pop
sub
pop
fdiv
in
push
or
fistl
or
jbe
add
outsl
inc
out
xchg
enter
adc
fisubs
add
add
std
adc
push
jp
jecxz
ds
ss
dec
xlat
popa
add
xor
ja
sub
stc
xor
ret
int3
je
dec
imul
mov
iret
pop
mov
out
aaa
cld
cmc
sbb
scas
scas
xchg
or
iret
lret
in
jmp
ret
stos
movsb
sub
fwait
cltd
push
pop
sahf
mov
clc
imul
pop
push
out
stc
ret
adc
cltd
add
pop
arpl
hlt
mov
loopne
xor
mov
dec
mov
jp
push
hlt
ret
cmc
sbbl
or
sarl
pop
mov
shlb
rorl
loopne
lock
dec
push
ja
pop
insb
cs
xchg
jge
jno
xor
jg
xchg
pop
sbb
movsb
fucomip
ret
mov
mov
dec
and
sbb
lret
or
sbb
push
enter
xor
jmp
cmp
mov
nop
movsl
iret
lods
aam
nop
pop
xor
or
icebp
dec
aas
sbb
nop
jl
xchg
mov
loope
cltd
or
adc
scas
xlat
stos
je
pusha
push
xchg
test
pop
scas
fdivl
jb
adc
jne
pop
rclb
insl
stos
scas
push
mov
and
rorb
mov
adc
mov
cmp
push
repz
fists
shll
pushf
mov
add
cmpsl
js
clc
gs
std
xor
adc
and
sahf
push
pop
popa
mov
dec
scas
fstps
fadds
mov
cli
imul
push
mov
nop
push
iret
or
adc
inc
xlat
subl
out
xchg
cs
inc
push
ret
into
xor
dec
das
outsb
fs
in
ficomps
jno
inc
add
rol
stc
mov
cmp
mov
iret
dec
idivl
lea
pop
shl
push
mov
xorb
icebp
es
stc
shr
int
xchg
pusha
sub
rcll
inc
lds
add
ja
mov
mov
fcmovne
pushf
dec
lret
jg
outsb
aam
call
jecxz
mov
xchg
in
sbb
sub
cmc
xchg
imul
lods
add
addr16
sub
lea
pop
std
les
mov
into
push
cmp
and
ss
imul
out
mov
imul
or
fucom
mov
dec
stos
mov
std
rcrl
adc
xchg
les
sbb
cld
or
in
in
add
xor
lret
jge
aad
inc
std
xor
scas
bnd
out
cmpsl
pop
push
sub
div
mov
inc
pop
dec
das
ja
pop
outsb
lods
or
call
mov
sarl
and
add
cwtl
mov
cli
sti
push
or
imul
stos
rcrl
dec
mov
or
mov
mov
dec
rcr
int
loopne
mov
ljmp
dec
cs
pop
sub
das
mov
inc
dec
pop
in
pop
mov
xchg
pop
je
call
subl
ss
xchg
jp
js
inc
out
sbb
sbb
cmp
cmp
sbb
in
sbb
push
mov
pop
sbb
pop
dec
add
rcll
add
ja
aam
mov
lods
jae
add
loopne
or
fcoms
test
push
enter
pusha
imul
hlt
mov
lods
pop
aam
gs
add
shrb
mov
inc
repz
movsb
and
out
and
sar
xchg
mov
iret
xlat
xor
stos
lods
pop
mov
popf
fstps
inc
sbb
sub
ret
push
filds
arpl
xor
test
mov
cli
cmp
test
pop
cld
cmpsb
inc
jo
hlt
cmp
out
and
jno
or
dec
outsl
inc
inc
cwtl
push
rcll
add
hlt
dec
fistl
arpl
test
test
push
je
or
add
mov
pop
jo
push
int
xchg
cmp
push
sahf
lahf
lret
icebp
jge
out
push
pushf
push
sub
clc
or
lea
enter
inc
stos
pop
jns
jecxz
cli
cmp
leave
mull
and
and
cmp
pop
ss
dec
test
jecxz
in
enter
in
ja
adc
outsl
ds
mov
and
test
lock
lods
movsl
xor
inc
addb
popf
cmp
loopne
mov
adc
sbb
jmp
data16
inc
stc
imul
dec
cmc
scas
fs
push
add
sbb
xchg
in
lea
lret
aad
cmc
ss
out
xchg
or
aaa
int3
lods
roll
push
pop
clc
pop
popa
add
jb
push
or
imul
adc
insb
mov
sub
xchg
jecxz
or
movb
sahf
ret
pop
mov
shlb
mov
push
pusha
fsts
sahf
pop
enter
stos
repnz
iret
scas
inc
pop
xor
pop
daa
push
dec
push
pop
lcall
mov
pop
nop
movsb
int3
sbb
mov
sysenter
xchg
insl
cld
shll
divl
jecxz
or
fdivl
cmpsl
sbbl
and
gs
fstpt
adc
jo
stos
js
bound
sub
int3
stos
popf
inc
jmp
pop
jo
fbstp
js
jnp
out
mov
jnp
mov
inc
or
idiv
dec
cltd
imul
fisttpll
roll
sahf
adc
aas
xchg
pop
or
shlb
jo
int
sahf
pop
push
cmpsb
mov
mov
insb
adc
mov
int3
lods
aaa
arpl
gs
insb
cwtl
or
jo
push
dec
pop
xchg
lock
es
fcmove
jp
iret
sub
add
fwait
push
outsl
lahf
scas
mov
leave
jecxz
dec
push
push
jl
sub
fimull
fdivl
or
into
cmp
mov
scas
out
daa
andb
mov
aam
into
mov
gs
repnz
imul
push
cmp
iret
push
push
mov
inc
shlb
sub
add
gs
fidivrs
mov
in
test
pushf
imul
pop
jmp
push
movsb
sub
lea
es
cli
outsb
ja
jo
in
popf
jnp
mov
sbb
inc
aad
stos
mov
or
loope
pop
stos
fisubrl
sahf
cld
and
push
or
bound
push
jns
shll
sbb
adc
inc
add
out
enter
add
push
fidivs
jge
pop
mov
fcmovbe
jns
cmp
insl
lock
shl
addr16
and
xor
jmp
lret
aad
dec
mov
pop
mov
cmp
push
mov
jno
jns
cmp
lods
cmpl
in
sbb
cmp
sub
adcl
popa
shlb
imul
lock
aaa
fwait
call
test
cli
rolb
bound
repnz
movsb
cmp
nop
mov
out
adc
rclb
pop
stos
fldl
outsl
call
fstpt
xchg
scas
ja
aaa
test
arpl
jmp
pop
mov
adc
xchg
cmpsb
fcomi
dec
pushf
hlt
push
dec
imul
xchg
ljmp
mov
in
rcll
rol
sbb
sbb
push
and
or
mov
jnp
lcall
rcll
mov
mov
fbld
movsb
mov
pop
adc
xor
inc
pop
mull
es
jne
and
xchg
sub
cmp
mov
popf
jl
imul
aaa
jo
mov
imul
and
jno
stc
data16
mov
addb
mov
adc
lods
repz
xor
stc
imul
clc
mov
xor
or
jmp
icebp
inc
outsl
into
sti
popa
fcoml
or
daa
shrb
pop
ds
enter
lock
cli
xchg
add
out
xchg
jno
jmp
outsb
scas
push
cmp
mov
loopne
jo
mov
enter
and
adc
in
and
and
xorl
nop
cmp
sti
loopne
cltd
leave
jbe
movsb
mov
icebp
xlat
xlat
and
push
xorb
ds
jbe
jle
inc
mov
pop
cmc
aam
insb
and
movsb
jbe
repnz
or
outsb
jo
xor
xchg
xchg
xchg
sbb
pop
movsb
cld
sti
mov
jle
imul
jb
shlb
push
pop
mov
aas
jl
xchg
rcrl
push
icebp
mov
jmp
das
push
xchg
fmuls
push
iret
inc
test
cld
jae
jae
lea
mov
xchg
popf
add
into
or
jp
sbb
push
out
jno
or
leave
jbe
sbb
leave
xor
popa
out
add
stos
mov
stos
out
adc
xor
jne
lea
fnstsw
in
inc
in
mov
push
sub
movsl
push
lods
dec
inc
sbb
mov
mov
pop
dec
hlt
push
fidivl
mov
pop
enter
sbb
add
test
pop
xchg
pop
fs
cltd
fisttpll
mov
mov
daa
and
int3
sub
add
fildll
mov
jl
push
mov
mov
push
mov
jnp,pt
dec
mov
add
ljmp
jns
loop
out
add
lret
pop
daa
mov
jne
sub
mov
jne
xchg
mov
push
xor
jecxz
lods
cmp
mov
mov
xorl
sbb
mov
or
push
push
insl
out
cltd
mov
andl
xorb
mov
loop
cmp
cmp
cmp
lods
jl
push
dec
or
popa
dec
flds
movl
nop
sbb
xchg
or
bound
jb
fcoms
sahf
sbb
xor
adc
mov
mov
push
repz
fisttpll
pop
out
xor
xchg
sbb
add
inc
shl
jb
jp
rcll
jae
es
dec
out
fwait
pop
sahf
mov
mov
cmp
jp
in
dec
push
and
push
dec
inc
test
cli
loopne
inc
lret
ja
popf
inc
test
roll
iret
jge
sub
aaa
pop
mov
sub
jmp
mov
outsl
out
xchg
mov
pop
aas
call
mov
push
push
notb
push
push
jne
mov
sub
mov
cmpsb
stos
pop
roll
xor
les
add
iret
ss
lahf
into
jp
push
mov
rolb
int3
jae
sti
shl
adc
movsb
jp
das
ja
loopne
push
cmp
jecxz
add
lret
iret
inc
pop
xchg
add
aaa
sub
fwait
sahf
xchg
dec
lods
xchg
mov
jno
cmpsl
das
pop
std
fcoms
xchg
mov
cmp
fistpll
clc
clc
dec
lcall
cld
adc
sub
pop
cli
push
je
and
out
and
jl
add
fildl
xchg
mov
lea
test
and
mulb
inc
pushf
adc
push
dec
push
pop
and
pop
shlb
adc
jecxz
mov
inc
xor
imul
push
xlat
dec
cmp
pushl
arpl
gs
push
imul
call
adc
and
clc
out
xchg
jns
sub
jo
aaa
jne
cmpsb
jbe
fcmovnb
repz
jbe
push
rcll
mov
outsl
scas
addr16
stos
dec
adc
or
inc
and
cltd
inc
movsb
int
pop
pop
mov
sub
dec
adc
adc
mov
arpl
gs
cmp
mov
sub
test
clc
iret
inc
inc
outsb
mov
roll
push
mov
sub
and
sbb
xchg
push
pop
cmpb
xor
push
add
pop
mov
or
pop
daa
mov
loopne
xor
addb
xor
in
aas
xor
out
push
sti
push
hlt
loopne
popa
sub
xor
lea
lods
daa
push
gs
test
std
or
gs
cmpsb
pushf
push
jno
xor
mov
fisubrs
shll
add
nop
cmpsl
in
mov
xor
mov
fistl
mov
inc
sbb
dec
inc
lock
jb
xor
adc
cli
and
jp
sarl
in
icebp
out
xor
in
lock
les
out
repnz
xor
dec
pop
xchg
stos
or
mov
fcompl
cmpsb
and
ss
imul
mov
addl
lahf
inc
sbb
gs
and
mov
je
nop
jle
lods
cmp
outsb
mov
jns
loopne
leave
adc
aas
pusha
fprem1
aas
sbb
nop
and
movsb
mov
pop
inc
xlat
jmp
xchg
jae
dec
lods
iret
repnz
inc
inc
cld
gs
ja
jp
mov
cmpsb
adc
and
inc
xchg
enter
or
mov
ret
daa
insl
insl
rorl
xchg
out
add
fsubrl
sbb
inc
imul
lahf
inc
jl
imul
push
jg,pt
test
out
xchg
dec
subl
or
aas
movsl
test
dec
call
test
jmp
add
mov
or
push
and
gs
scas
repz
and
xchg
sbb
insl
inc
lods
add
fs
ds
push
shrb
outsb
mov
aaa
rcrl
add
and
pop
out
dec
imul
xlat
adc
cmp
gs
jp
or
sub
fidivrl
xchg
jnp
adc
out
movsb
mov
xorb
cmpsl
ljmp
iret
pop
cltd
mov
push
mov
push
out
mov
sahf
pop
add
sbb
cmp
lret
cmp
fwait
mov
js
pusha
xchg
rorl
movsl
leave
mov
test
aam
mov
dec
loopne
add
cmp
sbb
push
int3
jns
stos
sub
inc
jge
int
jge
into
inc
pop
dec
outsl
xchg
jmp
inc
xor
movsb
inc
mov
adc
ljmp
xchg
mov
movsl
sbb
addr16
sbb
mov
or
into
inc
xchg
repz
popf
in
pushf
mov
jbe
scas
stos
bound
dec
jae
adc
scas
cmp
bound
sub
and
out
mov
or
mov
loopne
xlat
out
mov
adc
repnz
mov
xor
xor
mov
xor
add
icebp
lds
fsubl
stos
popf
sbb
pop
sbb
dec
aam
jle
lcall
and
out
sub
add
repz
nop
push
cmp
sub
add
mov
sti
popa
jl
fidivs
leave
ret
cltd
rorl
imul
cmp
jo
shlb
dec
scas
push
lods
push
xchg
addr16
sti
mov
sub
cmp
mov
pusha
mov
scas
push
out
insb
lods
ret
sub
inc
adc
dec
mov
mov
mov
mov
repnz
inc
loope
lcall
xadd
enter
cmp
pop
test
sbb
sbb
pop
push
pop
jno
fldt
imul
aam
inc
mov
add
and
test
inc
stos
int3
ds
addr16
mov
jbe
sbb
push
xor
jns
push
ret
or
push
movsl
mov
addr16
mov
lods
popa
cltd
mov
dec
outsl
lea
jl
leave
sbb
lret
jge
mov
dec
pop
push
insl
mov
std
mov
jmp
in
and
fdivrp
mov
popf
fisubs
mov
jbe
movsl
mov
ss
rcrb
sahf
stos
push
push
pop
test
les
push
fisubs
rcl
inc
mov
jg
and
dec
out
adc
lahf
pop
pop
aam
mov
adc
dec
cmp
sub
xor
bound
imul
mov
pop
mov
idivb
inc
cld
pop
adc
je
adc
push
mov
mov
enter
loope
mov
or
scas
mov
or
leave
daa
lods
pop
lea
xchg
hlt
inc
das
int
inc
popa
xchg
ljmp
in
pop
sub
or
imul
mov
inc
jp
pop
dec
push
add
inc
scas
inc
rorl
imul
enter
rorl
push
ret
stos
jb
xor
push
sub
ja
cmc
loop
dec
sub
or
pop
xor
push
xor
jb
insb
dec
cltd
adc
lret
xchg
lock
pop
js
push
mov
add
test
mov
inc
add
inc
dec
and
mov
nop
or
lock
movsl
xor
mov
fldl
ja
test
test
cltd
push
popf
pop
inc
sub
bound
cmp
jl
ret
out
adc
add
std
arpl
clc
cmpsb
sub
ret
jae
pop
cmpsl
shlb
jno
insl
cmp
jle
sub
fldln2
aad
xchg
cmp
outsl
and
lcall
jmp
lret
pop
dec
and
mov
mov
lahf
adc
pop
mov
push
xchg
jg
mov
inc
mov
xor
lea
mov
mov
std
push
sbb
sub
repz
cmp
jmp
data16
xlat
daa
test
divl
test
jbe
jo
pop
xor
push
aad
or
jnp
xchg
pop
fistpl
hlt
mov
stos
jbe
dec
insl
mov
repnz
scas
popf
vmwrite
test
or
nop
xchg
push
jp
popa
jecxz
lock
icebp
stos
test
loopne
inc
pop
and
push
rclb
xorl
adc
movsl
push
inc
sbb
imul
fs
push
push
fidivs
push
or
addr16
rcl
and
fisttpl
push
dec
push
dec
outsb
inc
sub
inc
or
dec
imul
loope
inc
dec
sahf
and
outsl
sub
mov
shrl
stos
ret
mov
sub
aas
mov
mov
call
outsb
mov
fisttps
notb
js
mov
in
pusha
pop
push
cmp
adc
pop
adc
cs
inc
out
lods
jbe
gs
les
mov
cli
pusha
mov
pop
dec
xchg
mov
lcall
push
fwait
pop
xor
cmp
dec
cmp
aas
adc
inc
and
xor
sbb
hlt
clc
and
adc
in
test
cmp
test
mov
aam
outsl
sbb
pop
add
cmp
sbb
push
sub
or
xor
lods
push
inc
aaa
jne
sub
rcrl
mov
in
outsb
mov
in
sub
iret
mov
push
and
lock
repnz
xor
inc
cmpl
mov
call
in
xor
loopne
leave
push
pop
cmpsl
mov
sbb
das
ret
push
cli
iret
dec
imulb
arpl
xor
sahf
mov
add
sub
mov
xchg
sbb
jp
ficoml
insl
hlt
lea
cld
arpl
mov
mov
and
shrb
cltd
les
mov
push
and
xor
cmc
or
or
push
mov
sbb
cmp
out
and
jl
mov
out
xchg
mov
popa
jbe
xorb
sub
fists
fnstcw
or
cmc
cld
add
add
imul
cmp
xchg
sbb
add
add
pop
push
xor
pop
push
jo
sti
jb
jno
and
in
int
movsb
adc
sahf
sub
add
cld
pop
jno
fdivrs
sbb
data16
test
cld
xchg
jmp
nop
test
scas
push
and
add
cmp
xorb
adc
mov
add
mov
push
decb
pusha
pop
adc
int
js
cmp
push
adc
mov
in
inc
enter
cli
or
pop
hlt
xor
lock
cmc
lret
fucomip
jo
mov
pushf
mov
pop
push
int
hlt
add
ss
sti
xlat
clc
jne
pop
jno
ret
not
mov
xor
pop
dec
lea
popa
push
inc
mov
sub
scas
test
fsubrs
in
mov
push
mov
lods
dec
push
fidivrl
scas
fwait
jne
sbb
xor
bound
neg
leave
push
push
jno
pop
vfmaddsubps
mov
dec
mov
xor
mov
cmc
mov
pop
dec
lret
outsb
sbb
in
repnz
das
adc
add
dec
push
push
or
popa
dec
push
je
pop
addr16
ss
stos
test
xor
pop
es
loopne
dec
mov
sbb
sbb
sahf
lds
out
jg
jmp
lret
mov
sub
pop
int
insb
fs
inc
les
pop
sub
icebp
cmp
pushf
ret
lcall
push
fwait
xlat
fdivr
mov
fistl
jle
dec
xchg
roll
ret
mov
fstpl
mov
or
mov
push
cmp
cmp
and
rol
mov
mov
mov
lock
xchg
xchg
addb
fistpl
mov
jne
xchg
jb
in
test
mov
int
pusha
and
add
ret
or
sub
fildl
mov
mov
sbb
pop
jno
fisubl
and
out
cmp
jl
sbb
rcrb
xchg
inc
dec
popa
jmp
in
and
les
jnp
xor
mov
dec
push
add
mov
aaa
xor
sbb
inc
cmp
jnp
xchg
xchg
jmp
and
cmp
mov
or
add
dec
jne
sbb
outsl
adc
adc
fsubrs
cmp
jo
insl
inc
int3
jl
jg
sbb
insb
daa
stos
or
dec
popa
mov
loopne
stos
mov
int
ret
fcomip
ljmp
stc
imul
sub
push
cltd
loop
adc
subb
adc
mov
xlat
insl
int
push
and
clc
pop
lods
aas
dec
addr16
xlat
pusha
fistpl
and
dec
cmp
rolb
mov
movsb
push
adc
jo
loope
inc
popf
scas
mov
lcall
out
data16
inc
jl
stc
int
ja
outsb
push
mov
bndldx
jbe
out
call
xor
pop
push
xor
inc
nop
cmp
nop
cli
lds
mov
mov
aaa
icebp
lcall
or
roll
sbb
js
xor
xlat
aaa
sahf
ljmp
cs
pushf
dec
in
fistps
out
inc
insb
loopne
out
sub
xor
mov
cmp
and
filds
out
or
inc
cld
std
out
stc
jno
mov
push
mov
jbe
jge
out
xchg
sub
loopne
fbld
movsb
inc
lahf
fistl
push
fnstenv
mov
and
jo
aad
fisubs
movsl
aaa
dec
add
jnp
stc
out
out
cmp
adc
push
nop
inc
addb
js
push
icebp
mov
addr16
mov
jmp
aad
xchg
mov
jnp
out
stc
ficoml
mov
sub
dec
inc
popa
dec
mov
frstor
fwait
test
add
in
and
and
adc
dec
sub
push
mov
xor
jmp
jo
stos
testb
sbb
xor
add
mov
addr16
adc
ret
and
out
adc
lods
dec
mov
cld
jbe
cmpsl
cwtl
dec
add
xlat
push
stos
lock
fiaddl
cmp
or
movzwl
loope
mov
ja
aas
shll
jg
sbb
dec
sub
push
mov
out
ja
adc
xchg
jae
dec
sti
faddp
jns
cli
inc
cmpsl
sarb
mov
jne
int
jae
adcl
sbb
repz
sahf
pop
sbb
sub
adc
jle
pop
cmp
jns
das
inc
adcb
scas
ss
add
loopne
adc
cmp
stos
cld
popl
ret
sarl
add
mov
inc
push
inc
scas
jl
test
lcall
mov
imul
xchg
inc
cmpsl
adc
adc
sub
js
fiaddl
xor
stc
dec
addr16
loope
push
pop
push
jmp
jl
mov
mov
push
inc
mov
aad
jge
mov
inc
sbb
frndint
insb
test
and
jg
xor
add
shrb
push
je
out
out
push
sub
push
addr16
jnp
push
jl
mov
test
sub
pop
leave
ss
test
lock
aaa
cmp
mov
push
add
lods
adc
aad
lods
jge
cmp
mov
popa
inc
fbstp
sti
fcoml
arpl
imul
dec
sub
push
adc
enter
lds
jae
in
mov
inc
add
shlb
xchg
movsl
test
sbb
xor
mov
aas
shl
pop
and
aad
or
cs
nop
inc
jle
lods
adc
mov
fildl
in
fsubp
bound
mov
nopl
mov
sub
stc
out
stc
mov
icebp
pop
push
push
inc
mov
dec
cmp
add
outsl
das
sbb
sbb
fmuls
ret
sbb
xchg
fs
das
fcmove
fisubl
cmpsb
lea
mov
push
out
sbb
pop
pop
and
or
mov
icebp
jno
movsl
mov
push
out
lret
add
adc
inc
scas
dec
jns
mov
mov
cmp
popa
cltd
mov
into
or
sub
adc
sbb
mov
imul
xor
sahf
fnstenv
sub
in
lock
jmp
pop
ss
and
sbb
inc
out
int3
jg
push
cmp
outsl
and
imul
push
dec
fdivs
popfw
mov
push
push
mov
pop
jle
adc
enter
out
pop
inc
or
push
push
xchg
cmpsl
ret
lret
out
sahf
dec
and
dec
xchg
jb
dec
dec
orl
cmpsl
inc
and
cmpsl
fwait
pop
cmp
stos
fistl
inc
sbb
dec
in
scas
dec
mov
cltd
repz
ljmp
cwtl
sbb
adc
fcoms
outsb
xchg
aam
inc
repz
outsb
popa
iret
or
imul
dec
outsb
mov
mov
inc
mov
outsb
mov
jbe
int3
jb
cld
roll
mov
test
mov
sar
mulb
popl
add
xlat
stos
pop
repnz
dec
and
add
add
pop
push
outsl
call
push
push
mov
pushf
lods
cmp
inc
aaa
push
not
sub
inc
mov
out
pushf
adc
adcb
testb
iret
mov
adc
xorl
mov
push
bnd
les
outsb
mov
jo
xchg
or
push
cs
rorb
daa
dec
jo
nop
cmp
jmp
fldl
sbb
jmp
cmp
adc
cltd
pop
adc
pop
popf
sbb
fcomi
call
cmc
add
sbb
fcmove
scas
das
adc
pop
fcmovne
les
scas
mov
cmp
jns
pop
addl
dec
inc
jmp
push
out
mov
mov
roll
xorb
xchg
test
out
ficompl
rcll
call
push
jle
or
popf
stos
leave
mov
jb
push
inc
movsl
inc
inc
mov
pop
fistps
fcmovnu
mov
push
cmc
das
dec
cmp
orb
sub
rorl
inc
jae
insb
or
add
jle
decl
or
push
or
pop
je
aam
repz
mov
jnp
jle
lock
enter
jb
orb
sbb
int
sub
jo
jnp
xchg
rclb
jne
out
pop
push
inc
mov
mov
sub
out
leave
pop
roll
sbb
mov
movsb
fcmove
imul
jecxz
push
cs
pop
xlat
jge
nop
lcall
cs
xlat
dec
push
mov
das
clc
mov
stos
sbb
jmp
mov
in
adc
aad
sub
les
out
and
sbbb
lods
stos
push
adc
lock
call
mov
push
and
daa
adc
sbb
push
hlt
mov
ljmp
jne
sbb
dec
jbe
pop
pop
jge
ss
or
mov
xchg
inc
pop
les
pop
add
stos
ja
rcll
push
ss
mov
or
mov
out
adc
xchg
push
pop
iret
pushf
add
xchg
or
outsb
jl
jmp
outsb
mov
jecxz
shl
pop
jl
imul
repnz
ljmp
push
clc
or
xlat
out
adcl
adc
fwait
inc
test
scas
bound
jp
or
daa
dec
repz
and
stc
inc
scas
and
sbb
lret
cmpsb
sub
cmp
rorb
sub
push
fxch
push
pop
xor
ja
and
fs
pop
sub
or
stos
push
jp
in
mov
push
popf
jmp
idiv
adc
fnstenv
adc
push
aas
fildll
dec
roll
xchg
idivl
out
xor
les
xchg
mov
setns
add
jbe
mov
mov
popf
mov
insl
jg
cmp
dec
dec
xor
scas
insl
jle
jnp
inc
out
cmpsb
jmp
pop
fwait
jl
add
xor
imul
mov
adc
lahf
das
test
push
hlt
enter
add
mov
test
push
mov
and
push
sarb
lods
int3
dec
movsb
leave
mov
out
imul
and
push
jae
in
js
xchg
loope
cmp
cwtl
imulb
jae
cli
ljmp
pop
push
jle
in
ffreep
pop
loop
dec
aaa
xchg
cmpsl
adc
push
xchg
pop
add
push
xchg
aas
lcall
inc
jmp
fdiv
xor
fstpt
jne
leave
dec
pop
sub
gs
notb
mov
xor
fs
push
sbb
icebp
jge
das
pop
xor
xchg
sub
mov
dec
and
push
pop
pop
sub
push
and
or
popa
aad
orb
pop
out
repnz
rcll
dec
push
dec
outsb
aad
and
mov
cli
fcmovu
jmp
test
repz
fdivl
icebp
fwait
sbb
mov
lret
adc
or
pop
sbb
mov
xchg
and
into
mov
mov
test
daa
pop
test
cld
pop
mov
out
mov
mov
and
mov
gs
lcall
shlb
xor
push
xchg
cmpsl
mov
jg
repnz
call
loope
nop
out
movsb
nop
xor
imul
icebp
xchg
xchg
pop
mov
fs
mov
inc
mov
dec
xor
out
xchg
and
cmc
add
push
pop
lcall
aaa
inc
xchg
mov
cmpsl
das
lahf
xchg
jg,pt
in
cmp
push
into
das
in
mov
add
lret
mov
stc
pop
push
and
adc
sbb
fwait
imul
out
sub
and
sbb
push
subb
jo
or
xchg
mov
pop
out
add
mov
arpl
shrb
pop
add
push
imul
push
jbe
mov
std
shrl
sbb
jae
mov
aam
stc
jnp
loop
inc
lret
sub
cltd
pusha
sbb
enter
sahf
fidivrs
inc
aaa
dec
sub
and
mov
push
sbb
push
jne
out
ret
sti
xor
push
pop
lahf
movsl
testl
xorl
jae
out
dec
movsl
adc
push
das
adc
int
jae
lret
int
jbe
js
stos
mov
pop
and
fs
adc
subb
pusha
in
or
ja
cld
add
add
push
dec
pop
inc
jle
jle
ret
imul
dec
nop
rorl
jmp
cmp
gs
mov
jle
pop
lret
inc
out
mov
sbbb
fnsetpm(287
mov
jae
cmp
sub
mov
push
subl
push
xor
mov
fstl
push
xchg
adc
sbb
adc
mov
push
cmp
movaps
sbb
iret
jno
test
out
xchg
pop
adc
ficoms
enter
data16
loopne
bound
add
cmp
fnstenv
fs
lret
flds
cmp
loopne
pop
add
cld
insb
xor
rolb
cmpsl
sbb
mov
dec
jl
mov
pop
mull
sbbl
dec
xchg
jmp
xchg
repnz
icebp
xchg
adc
cmp
add
shll
out
loop
xchg
inc
sbb
inc
decl
lods
into
jmp
addr16
inc
repnz
push
stos
xchg
push
inc
les
push
les
mov
imul
and
sub
mov
ja
loopne
fldt
dec
ds
les
ljmp
xchg
push
test
call
jp
mov
jmp
es
int3
loop
push
push
loop
rcr
cmpsb
add
mov
pop
outsb
mov
aas
mov
push
sub
lcall
cld
xchg
adc
mov
push
repnz
fists
repz
jae
add
stos
jp
les
inc
add
icebp
int
outsb
xchg
test
jo
sbb
mov
setge
movsb
push
push
das
jg
dec
mov
jno
push
push
out
insl
stos
neg
fcomp
mov
insl
rcll
out
mov
cmpsl
jl
xchg
fwait
rolb
jne
jno
xchg
push
hlt
rolb
js
lcall
xor
shll
or
daa
das
test
imul
or
sub
add
outsb
ss
xchg
lds
fisttpll
in
nop
ficompl
fnstsw
lds
mov
stc
daa
push
add
inc
in
rcrl
cmp
sarl
and
inc
jo
xor
sahf
or
adc
stc
jge
aad
bound
cs
push
mov
or
mov
mov
mov
xor
mov
push
dec
pop
or
adc
sub
popa
push
int3
push
bnd
pop
movl
daa
stos
inc
xchg
mov
xor
ficompl
pop
mov
jbe
pop
shlb
inc
or
mov
xchg
shl
mov
test
or
or
hlt
mov
xor
outsl
jnp
or
cmovl
aam
dec
add
xlat
mov
pop
jmp
xor
dec
cld
push
cld
push
test
movl
fistl
push
sub
mov
sahf
dec
cmpsl
xchg
inc
xchg
scas
adc
out
xchg
or
lret
pop
rclb
and
pop
mov
les
jle
dec
dec
push
leave
or
or
push
sub
jge
push
pop
dec
inc
pop
inc
or
sbb
shrb
sub
pop
cld
movsl
clc
stos
adc
pop
nop
fadds
jae
fdivs
mov
loope
and
xor
push
xsha1
cmpsb
mov
cli
jmp
jbe
fidivrl
fs
loopne
rclb
or
jae
mov
xchg
fbld
dec
fstps
inc
out
divb
mov
movl
jnp
sub
mov
mov
add
adc
jl
dec
mov
lea
int3
in
js
fisttpll
fwait
dec
lods
cld
cmp
jle
cmpl
mov
add
scas
loope
push
mov
pop
gs
jl
pushf
stos
xchg
push
cmc
sti
lods
dec
cwtl
mov
jno
aam
jbe
sbb
or
stc
fs
jle
sub
in
and
or
outsl
push
xlat
cmp
mov
lods
dec
mov
movsb
sbb
sub
xchg
je
jo
add
cwtl
dec
js
cmc
repnz
push
fcmovnu
sub
enter
push
pop
mov
lret
adc
push
rorb
ret
sti
incb
cwtl
adc
pop
mov
pop
jbe
mov
aas
popa
arpl
data16
sahf
les
xchg
adc
jecxz
xchg
cwtl
mov
in
inc
jbe
dec
xlat
or
aam
dec
jae
or
icebp
test
xchg
loope
lods
or
das
dec
shlb
and
mov
xor
stos
out
cmc
daa
jge
outsl
imulb
int3
cmp
scas
jecxz
pop
xor
scas
lods
les
std
les
repz
aam
scas
jmp
lea
mov
push
in
mov
push
push
push
rcrl
pop
sub
xlat
loopne
adc
add
sbb
xor
nop
push
aaa
ss
push
outsb
jno
lods
pop
test
and
xor
std
xchg
fwait
dec
mov
inc
cwtl
jno
aad
sub
mov
fistl
les
or
adc
xor
dec
push
push
xor
dec
dec
add
lds
insl
or
sub
cmp
aam
loope
xchg
jmp
and
fdivrs
jle
dec
jmp
jbe
aas
fdiv
into
xchg
dec
mov
sub
mov
iret
rorb
xchg
ret
stos
push
cmp
sub
xor
movsl
cmc
les
les
mov
pop
inc
mov
fimuls
addr16
sbb
sub
push
insb
push
jo
cmovbe
jl
enter
ret
push
int3
repnz
dec
dec
neg
pushf
shll
and
push
insb
pop
or
testl
and
test
ret
jae
adc
in
aad
addr16
xchg
jae
adc
dec
imul
jne
mov
loope
cmpsb
outsl
stos
int3
movsb
mov
aam
ss
pusha
xchg
sti
in
cli
popl
fildll
fwait
jl
xor
jmp
stos
or
in
jmp
add
fstps
mov
dec
aad
in
addl
insl
jne
sbb
jmp
xchg
add
jge
imul
dec
xchg
mov
jne
mov
or
cmp
mov
out
push
dec
adc
shll
dec
jp
xor
mov
ds
je
mov
sahf
mov
push
cmp
divb
mov
fdivs
fcmovu
fst
lock
jbe
in
or
mov
out
icebp
fs
sbb
fcompl
jl
pop
mov
movsl
mov
leave
out
xchg
pop
push
out
xchg
mov
mov
push
lods
aam
je
mov
das
mov
stos
adc
cmp
sbb
loope
pop
aas
lock
sbb
movsb
mov
add
ret
ficompl
inc
mov
cmp
test
fldl
jmp
mov
pop
mov
mov
push
cmpsl
xchg
mov
adc
lret
cld
cmp
subb
outsl
mov
xor
aad
mov
imul
pop
mov
and
xor
inc
subl
mov
imul
pop
sub
mov
mov
mov
pop
pop
sub
or
jno
nop
js
cmpsl
icebp
fs
dec
test
scas
push
imul
inc
icebp
sub
je
cli
int
dec
xchg
inc
xorl
and
clc
mov
mov
lret
or
test
sub
xor
cmpsb
into
or
lret
in
mov
iret
pop
ficompl
sub
loopne
in
cmpsb
mov
adc
rcrl
pop
cmc
pop
ja
mov
lret
inc
cld
leave
sbb
mov
les
mov
xor
lret
daa
or
pop
mov
sub
add
sbb
loop
and
not
call
inc
push
and
test
lret
and
out
mov
std
xor
xchg
mov
sbb
iret
outsl
inc
fistpl
dec
dec
ja
xor
enter
and
aas
push
or
sub
cli
xor
push
int
inc
dec
aaa
cmc
out
adc
cmp
fs
sub
inc
mov
ret
in
addr16
mov
jo
add
jg
popa
lods
jb
xchg
cmpsl
inc
jecxz
and
sub
insb
or
jne
test
inc
pop
loop
pop
cs
into
fsubrl
pop
fs
sti
call
pushf
mov
jge
mov
loope
inc
nop
and
pop
andnps
ret
or
sbb
sahf
lret
shl
mov
sti
pop
jb
mov
jmp
mov
push
xchg
add
dec
mov
lds
dec
nop
scas
xor
and
lods
int
and
icebp
push
cmp
cmpsb
sub
mov
pop
xor
dec
cmp
mov
sbb
in
fdivp
popa
fwait
sbb
mov
mov
inc
jno
jmp
imul
aad
push
sbb
mov
sbb
lods
push
inc
test
jb
sti
mov
mov
push
sbb
mov
xor
jecxz
mov
movb
sub
inc
inc
dec
imul
xchg
inc
int3
rcll
pushf
pop
call
into
es
or
negl
xlat
loope
pop
popa
cmpsb
sub
inc
xor
mov
call
xorb
push
cmp
push
pop
pop
rcrl
gs
pop
ret
xacquire
fldt
jp
ja
or
xchg
into
out
jns
dec
iret
mov
pop
add
inc
pusha
shll
into
mov
dec
call
mov
rol
mov
movsb
mov
and
sbb
out
jp
std
bound
imul
fsubs
ficoml
scas
cwtl
cmp
xchg
jno
push
popf
pusha
aad
jmp
pop
mov
test
sahf
sahf
mul
pop
mov
fwait
nop
mov
inc
repz
xlat
xor
mov
sti
cmp
out
shlb
out
jnp
sti
mov
xor
ja
push
test
addb
mov
jmp
lcall
push
int3
sbb
inc
push
xchg
cmp
sub
jne
sub
fcoms
mov
adc
mov
fwait
push
lea
shlb
jle
cli
rorb
sbb
leave
fsubs
call
movsb
addr16
aaa
cmp
mov
fcmovu
xchg
lods
imul
pop
sbb
loope
mov
jae
push
test
jo
push
mov
pop
sarl
test
orl
xor
sti
add
call
xor
push
and
xchg
xchg
cmpb
pop
xchg
int3
or
sbb
dec
push
dec
push
shlb
xor
mov
xor
jge
pushf
test
lea
add
mov
or
int
jge
xchg
mov
and
mov
fwait
xchg
jns
repz
xchg
scas
ja
mov
std
in
pop
mov
mov
incb
push
mov
cmc
repz
cmp
insl
adc
lcall
cmp
sub
push
subl
push
loop
jne
mov
rorb
adcl
orb
sahf
dec
cmp
fs
inc
push
mov
or
insb
test
cltd
js
ss
js
dec
jmp
sahf
shll
xchg
in
cmpb
dec
mov
iret
rol
lahf
sbb
flds
cmp
sbb
inc
pop
mov
jno
push
dec
fldl
js
xchg
shll
or
cli
jmp
imul
iret
hlt
mov
cmpsb
jnp
scas
jg
repz
cld
mov
jnp
fsubp
test
sbb
mov
pop
and
push
insl
les
xor
cmp
ret
adc
lods
stos
cltd
insl
mov
and
rolb
inc
lds
enter
or
mov
jg
or
es
jge
push
push
add
jp
mov
repz
pop
add
inc
repz
add
push
into
xchg
and
push
imul
cwtl
pop
fcmovb
dec
sub
les
sbb
mov
outsl
push
mov
push
or
mov
cld
in
test
in
pop
call
push
cltd
jno
ja
rol
sub
add
dec
pop
push
pop
jp
fimuls
shl
xchg
and
sbb
test
outsl
cmc
jecxz
xorl
mov
xor
sbb
xchg
mov
mov
mov
sub
xchg
sbb
mov
sbb
sub
fldl
movsb
xchg
ds
push
and
ficoml
adcb
push
cmp
dec
mov
jo
scas
xchg
jnp
push
outsl
pop
gs
repnz
addb
jg
xchg
push
push
gs
or
sbb
xchg
repnz
fwait
mov
repz
mov
int
in
in
scas
cmp
or
inc
mov
mov
adc
xchg
test
test
cli
js
gs
push
out
and
inc
pushf
add
lcall
fs
rclb
ss
mov
dec
leave
xchg
ret
pop
sub
arpl
pusha
cli
jmp
xor
sbb
adc
decb
into
repz
lret
clc
test
pop
xlat
or
xlat
popa
mov
shl
movsb
movsl
sbb
push
in
andb
push
repnz
into
dec
cmpsl
mov
sub
push
sbb
fsubs
push
dec
xchg
subb
outsl
dec
xor
in
aad
or
arpl
mov
adc
jne
jmp
out
scas
lods
in
add
adc
inc
insl
lahf
jns
lea
pusha
fwait
jecxz
movsl
imul
insl
jno
cmp
mov
pusha
aaa
stos
pmaxub
xor
int3
in
stc
gs
cmp
dec
in
pop
pop
imul
scas
gs
mov
and
sbb
xchg
ret
dec
cli
pop
adc
sbbl
mov
mov
jmp
xor
jae
loop
iret
test
push
jmp
and
in
orb
mov
push
jb
gs
shrl
push
or
mov
mov
adc
push
mov
cmc
insl
jl
cmp
pop
hlt
fildl
inc
push
fsubp
or
lods
cs
stos
mov
lea
test
xchg
jmp
jae
jno
xor
divl
dec
out
mov
push
neg
jns
push
hlt
addr16
pop
imul
std
arpl
test
gs
mov
mov
cmp
insb
decl
ss
insl
es
fs
and
sbbl
lret
cmpsl
or
iret
cli
push
mov
jb
jo
sbb
out
fdivs
jno
cmp
jl
out
incl
ds
std
pop
packsswb
mov
pop
adc
mov
fnstsw
and
iret
pushf
dec
mov
xchg
mov
xor
pop
dec
jns
lahf
jne
lods
jae
and
or
ficomps
xor
repnz
js
lods
mov
int
shrl
inc
loope
out
lods
es
fidivrl
mov
mov
or
jnp
fninit
and
jne
inc
xchg
rolb
test
xchg
push
add
scas
push
pop
jo
ss
mov
cld
popa
movsb
ret
mov
hlt
adc
jno
into
push
xorb
cs
lret
mov
ret
movl
stos
xchg
icebp
sub
jge
xor
arpl
mov
push
cmp
sahf
mov
cwtl
cmp
lods
mov
out
xchg
hlt
xor
cmp
imul
mov
or
mov
jb
out
push
push
sahf
testb
loop
dec
mov
ja
fwait
inc
imul
repnz
mov
xchg
jnp
jle
jl
rcl
push
test
jg
inc
push
sub
test
mov
insl
ljmp
adc
bound
mov
cmpsl
cltd
movsl
add
adc
mov
push
pusha
xor
pop
mov
nop
xchg
sub
mov
pop
out
sbb
out
enter
rcrl
adc
mov
rorb
jle
loope
std
lock
sbb
push
adcl
lea
outsl
jg
test
cltd
insb
adc
sti
cli
out
push
cmp
xchg
pop
lret
movsl
and
or
push
hlt
and
push
and
test
outsl
pcmpgtd
mov
pop
mov
lret
stc
and
sar
rolb
and
mov
pop
or
repnz
sbb
push
inc
adc
mov
in
or
lds
inc
loop
cmp
push
add
orb
aas
inc
arpl
testl
fisttpl
aad
xchg
dec
mov
sahf
loope,pn
jnp
or
adc
adc
sub
cmp
push
adc
mov
jbe
xchg
fs
sub
enter
add
testb
push
and
call
jle
mov
mov
int
sub
xchg
xchg
sub
xor
decb
fstpt
xlat
in
lret
ret
data16
or
jecxz
stc
sub
inc
arpl
in
iret
push
imul
sbbb
out
cmp
pop
xor
insl
in
lcall
out
dec
insb
test
dec
out
ficoml
clc
pop
sbb
jae
shrb
or
lds
mov
push
sub
sbb
movsb
loope
nop
test
sbb
dec
mov
push
cli
or
fdiv
and
mov
xchg
in
data16
pop
out
aam
xchg
adc
mov
dec
mov
cmc
lock
jb
addr16
scas
movsl
test
inc
pushf
movl
mov
cmc
cmpsl
cld
stc
push
push
jbe
sub
jo
sbb
out
movsb
std
add
cs
fcoms
add
ds
adc
xor
sub
pusha
jg
xchg
adc
inc
roll
fdivr
xchg
mov
sbb
and
cmpl
pushf
jns
push
fidivrl
adc
push
or
lods
adc
aaa
adc
cld
adc
stc
daa
cmpsb
mov
sbb
adc
push
xor
mov
pop
dec
and
mov
adc
outsb
xor
fcmovnb
pop
mov
xchg
std
add
xchg
lret
sub
rolb
scas
add
clc
jnp
fcoml
outsl
popa
pop
xchg
mov
shrb
ret
ret
mov
jo
sub
sti
and
out
xor
sbb
jp
mov
mov
leave
cmpsb
xchg
xchg
pop
mov
mov
sbbb
or
lret
mov
inc
mov
imul
sub
icebp
and
fs
repz
test
mov
mov
loop
imulb
in
push
add
xlat
mov
lods
repnz
gs
mov
stos
pushf
mov
xor
fcmovne
adc
cmp
outsb
mov
insl
shlb
sbb
sbb
push
testb
push
push
mov
addr16
inc
leave
scas
and
sub
inc
popf
mov
jae
popf
call
mov
mov
xchg
mov
dec
inc
sub
fstpt
mov
jl
mov
lret
stos
jecxz
jge
xor
sub
mov
repz
add
icebp
mov
rcrl
mov
cs
mov
pop
js
pushw
cmpsl
cli
repnz
in
and
mov
data16
scas
jl
mov
sbb
sahf
push
fbld
cmp
push
push
pop
fnstenv
adc
mov
pop
ret
pop
std
bound
add
pop
movsb
sub
mov
and
in
sbb
testl
iret
popf
clc
mov
xor
cmp
scas
xor
mov
fucom
sbb
sub
fiaddl
push
or
test
sti
ret
test
cmp
cltd
gs
sub
in
add
in
out
push
dec
loopne
in
fwait
add
mov
icebp
ljmp
jmp
push
pop
flds
scas
dec
adc
mov
popf
mov
es
xchg
std
cmp
push
out
mov
addr16
in
icebp
and
adc
sub
xlat
loope
cmc
lahf
ror
into
jno
bound
sub
aad
jne
in
in
add
inc
pop
or
sbb
lds
fldt
mov
in
dec
jnp
out
or
loop
pop
test
daa
cli
es
xor
popa
dec
add
push
fadd
ljmp
cmp
sbb
lds
jle
mov
inc
pop
jg
inc
pop
arpl
mov
roll
push
cmc
xorl
fldl
out
stos
lods
fisubrl
xchg
sub
mov
pop
push
call
test
xor
mov
shl
cmp
push
cmpsb
add
mov
mov
sub
cmp
sub
inc
dec
repnz
arpl
adc
daa
cld
ficoml
int
call
sbb
dec
cmp
add
and
mov
adc
pop
push
sbb
lock
and
lahf
scas
lret
adc
jne
pop
mov
lds
mov
rcll
jb
je
sub
and
loopne
cwtl
pushf
push
xor
out
popa
lcall
cmpb
mov
sub
adc
in
mov
fcomi
inc
scas
xchg
xor
inc
jo
dec
cmpsl
push
and
test
nop
cmp
mov
mov
cmpsl
insb
nop
and
cmpsb
xchg
sbb
jb
sti
data16
repz
das
jnp
imul
or
sub
sarb
mov
push
jne
outsl
test
add
mov
xchg
into
fwait
xlat
push
rolb
lcall
add
lahf
mov
inc
and
mov
jb
mov
push
jle
roll
jbe
or
mov
push
loopne
addr16
inc
cmpsl
out
pop
cmpsl
decl
push
cwtl
inc
xchg
fisttpl
popf
mov
mov
or
shlb
xchg
push
push
stc
pop
outsl
pop
adc
in
mov
inc
sbb
push
and
pusha
mov
cld
leave
push
xor
leave
and
sub
dec
or
mov
sbb
mov
notb
rorb
sbb
out
ss
xor
dec
clc
dec
jb
mov
pop
inc
xor
les
sub
mov
mov
jbe
out
mov
push
stc
cwtl
pop
int
out
add
mov
lock
js
pushf
xchg
faddl
push
cmp
pop
lahf
lods
add
in
and
repz
lods
repnz
fst
dec
test
std
imul
outsl
ret
inc
stc
sbb
push
push
sbb
adcb
push
mov
clc
mov
cmp
mov
pop
mov
mov
cmp
add
add
hlt
push
inc
pop
enter
jmp
fisubrs
ds
sub
mov
dec
loope
jp
add
in
sti
xchg
adc
push
mov
xchg
ljmp
movsb
adc
stc
xlat
neg
ljmp
aaa
sbb
sbb
mov
xchg
add
push
sbb
or
mov
or
inc
shrb
pusha
je
mov
mov
sbb
or
in
push
sub
bound
ds
lods
imul
sub
fimuls
ljmp
je
sub
sbb
push
xlat
sar
add
loopne
rorb
aaa
scas
sub
ljmp
ret
xchg
loop
mov
jb
adc
pop
iret
jle
into
xchg
xchg
call
mov
xchg
mov
ret
nop
adc
inc
out
adc
ret
lahf
iret
daa
pop
adc
or
stos
popf
push
jbe
add
in
rcl
or
push
aam
out
loopne
ret
imul
mov
dec
cmp
push
aaa
jecxz
js
jmp
add
cmp
outsb
jg
jmp
aam
pop
add
pop
sbb
dec
hlt
add
movsl
xchg
repz
xor
loop
ljmp
sbb
insl
cld
hlt
je
mov
xchg
xchg
arpl
push
aad
or
and
mov
jp
mov
lret
xchg
push
bound
shrl
cmp
out
mov
dec
out
fbstp
lods
sub
test
shrl
notl
xor
mov
mov
popa
addb
sbb
leave
inc
lds
mov
in
mov
lock
push
shrl
push
pop
cmc
cmpb
je
dec
fisubrl
dec
push
add
push
mov
ss
dec
cmp
push
cmpsb
cmp
push
push
cmp
xchg
aam
js
jl
ret
dec
gs
fdivs
xor
js
fmuls
pop
repnz
imul
int3
daa
mov
jno
shrl
adc
shr
mov
push
stc
dec
ror
and
mov
mov
jnp,pn
xchg
int
sbb
push
pop
pusha
push
cwtl
cmpsl
and
push
les
pop
das
pop
mov
xchg
xlat
movsl
or
inc
iret
pop
movsl
sbb
xchg
pop
jle
call
cmc
inc
incb
mov
push
shll
dec
jae
jecxz
add
mov
inc
mov
push
fcomp
xor
loope
pushl
loope
daa
std
mov
mov
cmpsl
lock
xchg
xchg
ret
cwtl
inc
cli
mov
push
add
jecxz
aas
adc
xchg
jg
jo
mov
pop
mov
jno
es
lahf
xor
inc
aaa
out
jbe
add
jne
sbb
nop
in
in
jmp
sub
mov
pushf
cmp
push
inc
shl
pop
xchg
pop
fistpl
dec
dec
test
push
or
or
mov
jno
xor
mov
je
xor
loop
iret
push
fcomip
ljmp
push
sbb
cmp
xchg
incb
scas
mov
inc
adc
mov
shl
dec
out
in
ss
push
test
repnz
and
mov
outsl
xchg
mov
insb
jp
push
mov
ret
lcall
les
and
sbb
xlat
dec
call
inc
fcoml
push
stos
das
add
xor
scas
subl
in
shl
mov
xchg
in
push
call
ja
jg
mov
sbb
and
cli
mov
push
sbb
shrb
out
jmp
mov
inc
xor
popa
push
int3
jb
cmpsl
decb
hlt
inc
add
ret
pop
sbb
aam
sub
bound
popf
repnz
mov
arpl
mov
mov
add
xor
lret
call
ficompl
cmp
movsb
pop
dec
cmc
daa
lahf
jp
mov
sub
sub
mov
icebp
fimuls
aaa
or
mov
in
cli
aaa
sysexit
jne
rcrl
call
pop
add
lahf
cmc
imul
stc
jnp
ljmp
jle
cwtl
int
enter
xor
fisttps
cmpsb
mov
out
pop
les
mov
call
and
sti
mov
loopne
jno
adc
stos
in
jge
mov
push
inc
stos
mov
test
lea
jmp
pop
popa
in
movsb
push
test
icebp
push
sub
xor
cli
ret
aam
xlat
lods
mov
xor
and
leave
enter
dec
lea
mov
mov
pop
movsl
push
test
das
xchg
mov
lds
jae
and
pop
push
jb
loopne
filds
xor
jae
xchg
sbb
pop
pop
mov
xor
movsl
arpl
pop
aad
stc
test
add
ret
sar
or
repz
xchg
ja
add
mov
mov
jl
cmp
icebp
subb
movsb
or
mov
add
idivb
xchg
repnz
lret
push
pop
xchg
cmpsb
push
push
dec
subl
lret
xor
lret
cmpsb
xchg
xor
test
pop
lea
or
jne
scas
push
sub
daa
int
sbb
out
out
cmp
cmp
xchg
adc
pop
jg
sub
in
push
dec
push
jae
nop
mov
fistpl
insl
inc
test
sub
xchg
lods
inc
add
hlt
insl
fldenv
cli
add
das
jno
imul
jae
repz
mov
jl
push
in
mov
lds
jae
punpckhdq
mov
dec
push
push
cmp
dec
inc
daa
add
or
sbb
out
iret
arpl
pusha
ja
outsl
test
call
dec
mov
out
mov
push
int
mov
outsl
popa
jl
pop
out
in
xor
bnd
xchg
sbb
cld
pushf
fsubl
lahf
out
pop
mov
insl
mov
add
fsubs
pop
inc
leave
mov
mov
push
lods
jp
int
negb
mov
xchg
mov
mov
sub
or
pusha
and
jg
icebp
ss
shl
add
lock
mov
dec
sarl
fcoml
mov
or
mov
pop
ss
data16
das
lret
sti
movsb
pop
sub
and
and
sbb
in
and
out
test
mov
fwait
mov
sbb
xor
fstpl
sub
in
cmp
and
dec
push
sbb
flds
arpl
mov
test
cmp
jne
fstpt
clc
das
mov
stc
imull
mov
pop
xchg
and
inc
clc
or
sub
jnp
fnsave
and
mov
int3
or
xor
dec
push
pushf
xlat
not
dec
dec
in
test
sbb
xor
hlt
push
sahf
jo
xchg
xchg
popa
cmc
pop
insl
sbb
jb
xlat
add
jp
cmp
aam
pusha
mov
and
ja
xor
xor
daa
lds
cmp
xchg
push
sbb
xor
cmp
mov
int
cmp
pop
pop
mov
xchg
jo
push
jbe
xchg
sar
sub
xchg
outsl
add
sti
xchg
sub
and
push
sub
mov
inc
add
pop
mov
sub
jmp
aas
mov
out
out
mov
bound
rcrb
adc
and
sbb
inc
arpl
ss
call
out
std
add
jnp
jge
xchg
adc
and
lock
xchg
out
cmp
repnz
hlt
sahf
sarb
mov
fistpl
jp
lret
jge
jo
rorb
dec
jl
xchg
mov
dec
dec
loop
adc
clc
fcoms
pop
test
lret
cmp
icebp
pop
fistps
insb
stos
pushf
sub
dec
add
loopne
pop
cmp
fwait
loop
xorl
repnz
mov
xchg
mov
imul
into
xor
and
and
stos
repz
sahf
xchg
das
test
dec
sarl
pushl
aaa
ljmp
inc
jno
orb
and
rorb
cli
push
dec
shlb
jl
std
lock
adc
add
lds
xchg
dec
aaa
mov
sub
and
jno
cmc
ficoms
cs
mov
jb
pop
mov
dec
xchg
out
js
adc
movsl
inc
out
add
pop
xchg
lods
movsl
pop
jmp
inc
or
mov
stc
jl
shrl
cmp
out
jge
mov
pop
fdivrs
xlat
add
dec
mov
jle
movsl
mov
test
mov
jns
aas
pop
mov
insl
mov
scas
jmp
add
inc
mov
iret
xchg
or
sbb
lock
xor
rorb
int
push
rcrb
sub
out
pop
xchg
sahf
or
in
aam
adc
addr16
popa
add
paddd
lahf
mov
mov
push
movsb
in
mov
pop
jnp
cld
dec
cli
out
adc
out
fidivl
pop
pushf
fs
jl
mov
adc
jg
mov
popf
jle
add
jp
or
je
cmp
inc
das
roll
or
iret
repnz
lods
pop
fdivs
mov
mov
jbe
push
or
mov
je
adc
stos
pop
and
push
rorl
fs
into
nop
xor
adc
arpl
addb
ja
add
mov
sbb
and
mov
movsl
dec
xchg
iret
add
adc
or
loopne
mov
adc
lahf
cmp
fldenv
fimuls
push
icebp
push
ds
cmp
mov
or
leave
sub
inc
sub
pop
stos
pop
js
pop
cmp
aaa
lahf
mov
mov
lcall
mov
adc
adc
and
mov
mov
sbb
cli
std
rolb
add
jbe
test
push
adc
or
mov
pop
adc
jns
clts
pop
int3
vpmaddwd
xor
inc
add
cmpsb
add
int
enter
jecxz
dec
mov
insl
inc
mov
ss
insb
xchg
pop
mov
test
sbb
mov
loopne
jo
icebp
add
pop
lret
mov
push
or
adc
add
lock
xor
pusha
or
cmp
sar
jl
mov
test
xchg
jbe
and
push
sarb
cmp
xor
scas
jnp
mov
xchg
sub
ljmp
or
das
push
inc
std
lahf
adc
jle
and
push
dec
sbb
inc
cmp
dec
inc
xor
pop
insl
cmp
pop
cmp
mov
jbe
xor
std
or
nop
jo
mov
rcrb
lods
adc
adc
jae
icebp
in
mov
cmc
dec
sub
mov
push
fst
pop
xor
fnstsw
das
popf
xchg
cmp
inc
bound
stc
jecxz
arpl
call
aad
lods
fistl
xor
orl
aam
fwait
lcall
jp
mov
dec
mov
test
test
mov
aam
rcrl
and
mov
aad
jp
lret
sahf
and
aad
subl
sub
pop
mov
fwait
shrl
mov
mov
jecxz
jb
or
ds
dec
sbb
mov
insl
adc
mov
push
dec
xlat
test
das
je
jae
and
push
cmp
addr16
inc
sarl
cmp
dec
cmp
mov
mov
pop
xor
or
inc
mov
out
mov
mov
lods
sbb
popf
and
rcr
test
test
lret
xchg
sbb
scas
ror
or
in
repz
xchg
test
outsl
or
jae
pop
xor
bound
fbld
les
pushl
neg
and
int
sbbb
arpl
push
sub
hlt
repnz
dec
xor
adc
stc
lahf
mov
push
add
cmp
rol
sbbb
sar
mov
popa
lds
sbb
pop
shrl
or
negb
iretw
pop
or
je
cmp
fcmovnu
sub
repz
inc
fmuls
mov
jp
jmp
leave
pop
push
aad
mov
mov
cmc
lods
mov
mov
adc
movsl
sbb
sti
ja
pop
xchg
xchg
jb
or
xchg
test
sub
xchg
sbb
in
ja
jno
and
test
cltd
xchg
mov
lock
cmp
pop
mov
in
push
mov
mov
mov
insb
cmp
outsl
into
jae
test
loope
sbb
push
sub
rcrl
inc
sub
mov
jno
loope
test
into
inc
jp
arpl
push
repz
jne
xor
pop
fildll
ds
jnp
pop
push
push
jg
xchg
je
mov
and
mov
pop
add
das
mov
mov
mov
add
outsb
pusha
mov
insl
sub
bound
cli
and
subb
rcrl
push
mov
and
lahf
jmp
js
movb
arpl
in
rcl
jmp
cmp
or
pop
adc
push
xchg
popa
mov
add
jg
mov
lds
mov
mov
push
or
imul
out
sub
fisttpl
push
loop
data16
mov
stc
push
cltd
push
ret
out
and
sar
pop
jg
ret
and
pop
sub
ja
iret
fsubrs
call
fildll
pop
hlt
cld
xchg
mov
pop
mov
xlat
push
inc
jno
arpl
sub
in
inc
fistl
xchg
lret
mov
mov
dec
out
dec
and
into
mov
das
mov
cmpsb
and
call
pop
ljmp
pop
outsl
test
dec
inc
pushf
pop
test
in
push
cmp
sbb
xor
cwtl
mov
movb
xor
lcall
jnp
sbb
enter
lret
dec
jg
sub
pop
loopne
dec
xchg
pop
in
inc
adc
loopne
sbb
and
or
jb
cmp
push
data16
jns
pop
and
adc
loope
jmp
ss
out
ds
dec
jae
jns
popa
cmp
scas
xchg
cmp
rorb
mov
ficoms
jmp
ss
fsts
add
ret
icebp
xchg
push
pop
imul
loope
and
mov
arpl
mov
test
lock
stos
jp
rorl
mov
mov
push
push
push
mov
scas
push
ljmp
pop
jb
and
insb
stos
and
aaa
cmp
jl
outsl
xchg
out
lea
ret
xlat
packssdw
aas
xor
shll
push
pushw
pop
push
xor
sahf
push
adc
jge
insl
mov
pushw
jp
pop
lods
dec
clc
scas
mov
incb
jne
xor
sbb
cmp
enter
mov
xchg
loopne
clc
xor
push
or
stos
sbb
mov
sub
dec
cmp
and
movsl
push
adc
mov
cltd
sbb
or
stos
insl
imul
shrb
xor
in
xor
fs
arpl
dec
xchg
push
add
clc
mov
lds
pop
aas
je
xor
fcompl
mov
push
adc
add
jmp
pop
mov
push
jmp
scas
add
bound
mov
mov
xchg
pop
push
test
add
mov
inc
lds
insl
push
lock
sbb
xchg
ret
mov
sub
les
mov
jne
adc
mov
fcmovnbe
and
xchg
aad
mov
add
sub
repnz
stc
pop
xor
ljmp
xor
fdivl
push
xchg
repnz
or
mov
scas
out
dec
mov
fcomi
fcomp
add
icebp
es
dec
push
sbb
cmp
mov
xchg
xchg
sbb
movsb
dec
inc
xchg
sbb
dec
out
aad
aam
mov
aaa
adc
xchg
iret
sub
xor
mov
add
ss
iret
mov
icebp
aaa
bnd
std
push
xor
and
leave
mov
mov
inc
adc
out
sub
cmpsb
js
mov
cltd
dec
fwait
lods
add
and
cwtl
pusha
mov
les
cmpsb
xor
sahf
loope
jnp
roll
lret
sub
imul
dec
sub
ljmp
in
push
mov
jmp
mov
popa
mov
dec
arpl
mov
xchg
cs
lock
iret
in
xor
push
and
fimuls
out
fadds
loop
ds
lods
lods
mov
mov
adc
jne
bound
cltd
xchg
psrlw
and
insb
daa
mov
cltd
mov
ficoml
fstpt
push
imul
icebp
sbb
sub
xor
xor
neg
popf
bound
push
xchg
aas
divb
push
mov
or
mov
cmpsb
mov
xchg
xchg
out
test
setbe
cmpsb
shl
fucomip
ret
movsl
loopne
adcb
jns
push
push
push
test
and
sbb
jle
push
xchg
jmp
sub
jecxz
lret
pop
pusha
aaa
sbb
push
sbb
imul
lret
sbb
fwait
scas
pop
push
sbb
and
jns
fwait
outsl
ds
xor
cmc
lock
and
or
shlb
pop
data16
add
popf
xchg
stos
nop
adc
xchg
fst
fs
mov
mov
cmp
call
mov
pop
stos
out
pop
mov
cli
inc
out
repz
dec
pushf
movsl
subl
mov
pop
mov
frstor
adc
jo
cmpsb
divl
fisttpl
jae
fsubs
jb
jb
pop
ficoml
je
xchg
pop
mov
sbb
mov
repnz
dec
add
pop
loope
fcmovnu
mov
fs
stos
mov
loop
insl
fldcw
in
je
lret
sub
mov
and
add
lods
sub
fldcw
sti
scas
gs
pop
fimull
imul
fnstsw
jno
add
ljmp
xchg
xor
fs
mov
outsb
inc
test
jb
sbb
xor
fnstsw
push
dec
adc
ljmp
jle
push
mov
sub
adc
addl
fidivl
mov
iret
xor
mov
mov
sbb
lods
inc
cwtl
decl
pop
int3
mov
das
push
mov
inc
ds
repz
lahf
adc
push
mov
nop
cld
mov
test
rcrl
xor
orl
loopne
in
pop
jle
movsl
cmp
out
fsubr
sub
jbe,pn
or
and
mov
loope
mov
vpmulhuw
adc
xor
adc
mov
sub
sbb
pushf
sbb
jge
bswap
lret
cmovp
mov
and
mov
out
fwait
and
xchg
adc
in
call
fwait
daa
push
cmp
push
sti
lea
jmp
test
stc
and
xor
pusha
fs
add
orl
dec
and
scas
dec
or
xchg
ljmp
jge
mov
jp
hlt
loope
sbb
sbb
xchg
dec
push
enter
mov
lcall
rclw
inc
jnp
xchg
loopne
push
inc
jne
test
push
fists
shlb
mov
lea
scas
jg
sti
jne
jmp
xchg
push
and
loop
or
faddp
mov
mov
lcall
ret
rol
add
fwait
pop
sbb
sbb
cmpsb
and
outsl
mov
roll
dec
adc
mov
jge
shrb
scas
imul
ror
push
mov
sub
fidivrs
mov
cmp
sahf
add
addr16
add
inc
adc
scas
loop
sbb
sbb
cs
mov
sub
xlat
push
ss
enter
mov
rcrb
fmulp
dec
push
mov
addr16
mov
fmuls
stos
add
fimull
mov
mov
js
call
inc
fsubrs
shlb
cmpsb
loope
iret
inc
pop
sub
and
stos
inc
lahf
loop
mov
add
out
je
insl
aam
out
mov
xchg
int3
cmpsb
insl
fldt
cld
mov
ffree
or
cmp
cs
fstps
mov
mov
clc
jno
fimuls
in
adc
xchg
inc
lods
adc
outsl
inc
test
dec
and
shlb
stc
iret
push
cwtl
cltd
jne
inc
push
push
or
push
cmpsl
pop
jne
pop
in
jo
or
xor
jno
adcb
pusha
push
enter
mov
pop
or
sub
pusha
ds
and
out
dec
dec
hlt
mov
ljmp
addr16
mov
mov
clc
or
lock
inc
arpl
push
pop
insl
add
jno
sti
mov
xchg
repnz
push
dec
dec
pop
adc
or
repz
ds
adc
or
mov
pop
outsl
lretw
fs
jne
jnp
or
rorl
insl
cld
mov
xor
mov
dec
jne
or
add
mov
outsb
mov
ret
push
or
mov
out
fldl
call
pop
jo
xchg
imul
dec
adc
int
aam
push
dec
ljmp
sbb
and
mov
cmpl
cmp
sbb
out
mov
or
mov
pop
sbb
push
in
xor
divl
dec
mov
faddl
xchg
sti
aaa
nop
pop
add
cli
in
je
pop
js
push
sbb
jecxz
lret
imul
mov
pop
and
cltd
jnp
sub
cmp
xor
in
loope
xor
loop
xor
sub
std
int3
lds
hlt
dec
fwait
ss
push
out
xchg
mov
repz
sub
xor
cmpsb
std
in
push
imul
jne
pop
imul
fists
jecxz
jp
cmp
fwait
cmp
sub
jne
das
sub
sahf
sub
push
dec
hlt
push
test
push
inc
ret
call
popf
jnp
fadd
fistpll
pop
jbe
fildll
ret
rolb
arpl
fimull
mov
cs
arpl
xchg
cwtl
jno
rorl
fldenv
xor
jns
lret
cltd
int
add
sahf
pop
cmp
cmp
cmp
loopne
in
inc
ret
pop
cmp
sbb
jae
mov
in
jns
jmp
pop
repnz
cs
in
or
paddusb
ja
sub
aaa
inc
mov
inc
cmp
jnp
iret
mov
cmp
lods
xchg
xchg
sbb
adc
push
inc
in
je
add
sbb
mov
or
cmp
sub
mov
mov
jmp
jb
repz
mov
popf
push
push
xor
adc
jns
jnp
je
aas
jle
jle
not
je
ret
jge
pop
dec
dec
push
test
fst
fwait
loopne
pop
jnp
push
dec
subb
xchg
or
jl
ds
mov
out
lods
std
or
jbe
cltd
cld
daa
or
mov
je
in
addr16
stos
bound
add
mov
mov
add
push
loop
cli
int3
pusha
shr
push
and
mov
bound
push
insb
and
nop
fildll
mov
sub
xor
pop
jle
test
dec
adc
aaa
and
iret
call
and
xchg
sbb
sbb
or
add
mov
and
cmp
test
loope
mull
mov
pop
dec
xchg
cmp
mov
push
or
shll
sbb
cmp
clc
cwtl
js
pop
scas
nop
iret
pushf
xor
inc
inc
or
xchg
rcl
jns
mov
push
imul
cli
mov
pop
sbb
xor
mov
jnp
mov
xor
out
mov
sub
sub
mov
sahf
arpl
out
adc
cmp
sub
pop
pop
loop
loopne
pushl
sub
fsubs
in
pushf
std
cmpsb
sbb
bound
ret
jbe
ret
xchg
cmp
xor
std
lods
adc
cld
lods
mov
stos
mov
sarb
jns
cmc
pushf
and
mov
cmp
xchg
in
loop
add
or
pop
lock
clc
push
popa
arpl
in
jb
clc
fisubrl
adc
xor
enter
xor
pop
xor
jbe
stos
js
cld
insb
push
sub
cmp
jb
cmp
clc
movsl
mov
fs
xorb
outsb
mov
in
push
dec
nop
mov
pushf
insb
sbbl
sub
insb
jne
rcrl
insl
jne
iret
leave
popf
sub
pop
xor
lock
push
cmpsl
or
push
push
adc
clc
dec
cmp
ret
push
sahf
jge
cmp
cmc
mov
aaa
mov
arpl
pop
push
xchg
imul
xchg
repnz
sbb
xor
fmull
int3
out
cmp
jg
mov
fistpl
pusha
inc
push
scas
or
cmpsl
mov
jle
jle
outsl
xchg
fldcw
or
add
dec
ljmp
add
or
jno
sbb
mov
imul
pop
sub
popa
and
adc
out
jmp
les
popf
fwait
lock
lods
test
inc
push
add
cmc
or
int
xchg
add
test
and
cld
popa
cltd
fwait
imul
adc
inc
sub
lcall
sub
sub
loop
mov
push
xlat
ret
adc
inc
mov
pop
push
lahf
shr
jo
push
sti
iret
lods
pop
inc
pop
add
jp
fs
mov
adc
lea
sbb
jns
push
xchg
mov
xor
cmp
lock
mov
lods
fs
sti
aaa
lret
in
cmp
lds
das
and
ds
mov
mov
je
clc
jmp
mov
xor
orb
lds
sub
lea
xor
and
mov
and
xchg
adc
cmp
cmp
inc
jmp
sti
adc
mov
fimull
xchg
andb
pop
fs
add
cmp
sub
xchg
fnstcw
jo
and
inc
sbb
dec
fisubs
cmp
pusha
sbb
jae
nop
xlat
sbbl
ds
rolb
aas
popf
jecxz
icebp
cs
inc
or
jle
dec
xchg
xor
xor
jmp
sub
or
pop
fstl
jl
stc
out
fisubrs
pop
or
cmp
test
bound
and
cmp
fisubrl
insb
ljmp
add
sub
and
cs
out
mov
sbb
push
lea
adc
enter
add
fdivrs
cmp
pop
stc
int
clc
lcall
fdivrl
inc
adc
fistpll
xor
lods
adc
inc
loopne
dec
shlb
mov
dec
gs
sbb
pop
fcmovnbe
xlat
cmpb
adc
and
out
cmc
jl
add
rolb
sub
subl
and
push
pushf
push
and
inc
shrb
jmp
pop
push
push
aad
fldcw
adc
sbb
cld
xlat
push
adc
test
sbb
inc
sbb
dec
fst
in
je
scas
cld
fwait
ds
rcll
aad
mov
movsl
mov
jae
pop
dec
test
enter
jp
cmp
mov
test
push
push
fisubrl
mov
ret
in
das
adc
cmp
imul
jl
popa
dec
fldenv
loopne
hlt
jnp
dec
adc
mov
sbb
addr16
pop
enter
and
mov
xchg
hlt
ja
mov
ljmp
push
mov
lods
repz
xchg
jno
pushf
xchg
mov
xchg
pop
ja
pop
or
xor
mov
rcll
icebp
call
arpl
xor
mov
outsb
cwtl
iret
mov
mov
ja
pop
xchg
in
sbb
fisubrs
inc
imul
xchg
mov
jb
nop
jo
xchg
subl
incl
push
insl
lcall
sbb
enter
jnp
jno
lods
inc
filds
xchg
sbb
out
and
cmp
sti
ljmp
xchg
js
js
jecxz
mov
icebp
test
hlt
mov
js
sbb
notb
jg
xor
rsqrtps
stc
stos
jns
bound
loopne
iret
adc
cwtl
mov
or
cmpsb
dec
sbb
pmulhw
imul
sahf
inc
mov
jp
adcl
dec
aam
in
push
out
or
pop
push
and
bound
mov
sbb
sbb
mov
xchg
in
xchg
cmp
push
mov
inc
cmp
inc
and
mov
icebp
lret
jg
dec
ja
pop
popa
add
jb
mov
add
mov
cs
xor
imul
xor
cli
push
call
je
shlb
cld
hlt
into
mov
leave
stc
ds
mov
dec
pop
push
out
xchg
xor
cmp
jns
mov
lcall
imul
mov
inc
int3
pop
and
gs
dec
mov
xchg
cmp
or
loop
syscall
add
inc
inc
test
sbb
jno
lahf
in
sub
mov
pop
xchg
mov
mov
inc
mov
stos
and
jbe
and
fs
xor
aas
or
jecxz
adcl
aam
jge
les
xchg
xchg
stc
cmc
int
xchg
push
dec
out
lea
in
ja
push
movsl
sarl
cmp
xor
pop
push
xor
adc
fidivrs
push
mov
cld
stos
jbe
mov
mov
sub
cltd
adc
iret
stc
cmpsl
dec
jnp
mov
add
ja
jns
mov
jecxz
mov
dec
xchg
imul
adc
das
add
ja
enter
xchg
das
loope
fwait
push
xchg
mov
test
nop
dec
mov
xor
insb
pop
mov
add
out
outsl
mov
lods
les
pop
add
in
push
out
std
movsb
daa
in
jbe
daa
and
fiadds
leave
pushf
adc
jbe
shlb
repnz
sbb
and
push
shll
pop
pushf
and
cmp
rorb
out
iret
and
pop
aam
dec
in
lcall
mov
lcall
xchg
sbb
mov
fsubp
pop
pop
xlat
and
inc
dec
and
add
and
fs
jb
loope
jo
dec
xor
mov
ficoms
jne
sbb
push
push
fidivrl
shll
ljmp
push
popf
imul
xor
pop
lods
jne
mov
leave
leave
xchg
dec
push
adc
mov
or
pop
in
cmp
call
in
shrl
iret
mov
aam
lods
int
xor
das
nop
enter
mov
repnz
les
add
daa
push
loopne
cmp
xchg
dec
shll
divb
sub
inc
scas
cmpsl
push
xorl
add
push
push
push
icebp
sti
jecxz
addr16
mov
lods
jbe
mov
scas
int
pop
adc
fstps
je
add
and
mov
subb
std
hlt
xor
jle
ret
je
out
jo
dec
cmpsl
pop
int3
fistpl
jnp
dec
clc
mov
mov
testl
lods
inc
imul
xor
xor
roll
insb
dec
fistl
mov
mov
mov
xchg
xchg
mov
xchg
icebp
xchg
or
inc
pop
clc
xchg
in
mov
jns
sub
pop
shll
mov
insb
push
dec
out
fdivr
or
sti
xor
push
cmpsb
mov
stos
hlt
mov
imul
lods
outsl
xor
xchg
dec
fdivl
xchg
imul
ret
inc
aas
loop
inc
outsb
int
dec
ret
jle
ss
out
in
adc
jo
and
insb
xchg
es
inc
rcl
andl
adc
or
hlt
sub
mov
pop
xor
pushf
cwtl
popf
xor
dec
int3
mov
movsb
test
cld
or
xor
cmp
push
dec
xchg
adc
mov
pushf
or
xor
jecxz
sbb
and
fsubl
int3
movsb
dec
in
insb
mov
lods
cmc
pop
sub
insb
and
std
add
cltd
into
adc
cmp
mov
push
adc
jbe
sbb
adc
jmp
jge
test
sbb
xchg
mov
cmpsl
rep
movsb
fldt
jb
subl
cli
cmc
jge
mov
push
xchg
aam
icebp
sbb
arpl
pusha
sbb
aam
mov
mov
and
push
xchg
nop
mov
adc
and
div
out
mov
push
or
mov
add
mov
xor
xor
dec
dec
push
mov
cltd
aas
jbe
xchg
sti
das
out
push
sbb
sbb
loop
jmp
adc
mov
pop
jns
push
std
mov
push
push
outsl
cmp
mov
jmp
xor
add
dec
jecxz
jl
mov
xchg
dec
or
lock
xchg
xchg
int
cmp
add
add
ds
xchg
mulb
push
repz
inc
je
lcall
sarl
es
jmp
sbbb
lods
pop
std
inc
ljmp
jns
push
loope
mov
std
pop
aas
jns
jnp
aaa
sbb
and
pop
xorl
repz
mov
mov
sti
sbb
xchg
addb
push
mov
sbb
lret
push
popa
lock
cmpsl
xchg
outsb
in
fisubrs
mov
adc
ljmp
popf
mov
clc
fistpl
dec
iret
xchg
fisubrl
mov
pop
cs
push
push
ss
adc
jp
mov
cs
iret
and
clc
ss
xor
fwait
out
loope
jecxz
insb
cmpb
add
jbe
push
out
rcr
push
stos
andw
sbb
test
cs
push
cmc
rcrl
je
push
outsl
orb
lock
fimull
push
pop
pop
sbbb
in
test
out
jl
les
mov
add
dec
sub
pop
loopne
loope
mov
jmp
test
adc
loopne
and
lds
inc
xor
incl
int3
jmp
sub
cmpsb
jo
add
decb
fdivrs
jp
icebp
repz
dec
icebp
mov
xchg
mov
ss
and
inc
inc
in
jno
insb
jp
shl
jge
imul
jbe
repz
ljmp
daa
sub
loope
push
push
mov
sub
push
inc
mov
stos
add
aad
lcall
sbb
and
arpl
jle
lock
xchg
and
pop
popf
outsl
jne
ret
cld
les
jno
pop
mov
dec
mov
popa
repnz
clc
in
test
pop
adc
cmp
dec
popa
push
push
mov
repnz
xchg
cmp
sbb
jns
arpl
xchg
sub
negl
in
pop
jnp
dec
int3
mov
pop
fmull
sbb
jge
int
nop
add
jno
nop
mull
mov
inc
lcall
insb
test
jl
movb
adc
or
mov
inc
into
mov
fists
out
call
jmp
mov
pop
jo
sub
add
jmp
cltd
dec
int3
xchg
arpl
dec
mov
outsl
cltd
movsb
push
adc
loope
jno
lods
dec
in
mov
lea
cli
add
fbstp
push
dec
add
call
mov
loopne
jl
and
mov
sbb
mov
aam
inc
xor
pop
test
cmpsb
das
mov
sbb
lea
in
int3
push
sbb
mov
and
insl
and
fisubrs
cmpsl
adc
pop
mov
add
pusha
leave
int3
or
cmpsl
rcl
adc
pusha
les
mov
inc
scas
int
test
cmp
and
mov
cmp
push
jnp
push
shll
push
adc
ljmp
in
aad
or
dec
push
pop
or
xlat
xchg
idivb
mov
cmp
aaa
test
mov
push
adc
or
cmpsl
mov
loopne
jbe
adc
pop
stos
stos
mov
ss
or
mov
xor
out
cmp
ret
cmp
pop
jnp
inc
inc
sub
outsl
push
push
in
dec
leave
sub
jecxz
mov
dec
dec
repnz
add
xlat
je
adc
adcl
movl
mov
mov
repnz
fsubr
cmp
jecxz
push
leave
mov
or
cmp
mov
push
mov
push
xorl
mov
in
pop
aaa
outsl
repnz
cmp
mov
ds
rol
mov
out
sub
push
push
dec
push
icebp
popf
pop
adc
iret
mov
scas
xchg
adc
and
jp
stc
cmp
hlt
sub
fldt
mov
push
or
test
push
sbb
cmp
into
sbb
fs
std
push
inc
sarl
loopne
mov
jp
and
push
cmp
mov
addl
lds
mov
popf
nop
mov
scas
jg
mov
push
movsb
ja
lods
repnz
push
add
cmp
lds
adc
xchg
pop
mull
push
and
clc
fidivrs
aas
sbb
ret
js
imulb
dec
iret
aas
out
addl
pop
and
or
push
test
pusha
incb
rclb
icebp
psllw
adc
inc
push
je
cwtl
popa
mov
imul
and
rcrl
jmp
movsl
adc
arpl
mov
jo
in
push
adc
xchg
stos
shll
test
jo
sbbl
fwait
inc
mov
sub
push
sbb
sarl
cmp
loopne
push
popf
int
scas
cltd
and
mov
hlt
mov
nop
pop
mov
shlb
push
bound
clc
sub
inc
ljmp
and
jb
adc
repnz
pop
std
sbb
fs
push
jl
mov
jmp
mov
andl
pushf
add
add
gs
xlat
sbbl
out
xor
xchg
test
mov
pop
data16
std
fldcw
or
xchg
leave
jo
mov
push
dec
fisubl
xor
inc
sbb
mov
and
push
ss
xor
jge
ficomps
pop
pop
xchg
cmp
xchg
adc
insl
dec
mov
sbb
push
test
dec
mov
test
push
adc
outsl
ret
insl
mov
and
in
xor
xchg
add
std
incb
ficomps
push
sub
enter
subb
xchg
stos
sub
repnz
mov
jae
test
shll
pop
lcall
jg
mov
add
ja
test
push
das
sahf
sub
mov
xchg
mov
fidivs
rorb
fs
push
and
jo
scas
lea
cmp
push
sbb
nop
fcompl
shll
and
cmp
mov
pop
in
xchg
mov
cmp
jmpw
dec
add
mov
jg
mov
pop
adc
aaa
push
cmpsl
loopne
dec
mov
jmp
inc
mov
and
jno
imul
in
fmull
aad
das
aas
jecxz
push
push
hlt
fnstcw
pusha
test
xchg
test
xor
outsl
mov
xor
cs
ret
or
cmc
sbb
jno
xchg
xor
out
mov
push
shlb
popa
mov
and
jg
pop
call
push
outsl
repnz
mov
gs
cmp
sub
rol
cld
jnp
cmp
pop
mov
aaa
mov
mov
push
adc
ds
cmpsb
popf
rorb
daa
cmp
lods
mov
push
and
shlb
xchg
sub
into
jle
icebp
shlb
repnz
ret
xlat
xor
add
neg
mov
pop
ds
and
sbb
ret
xor
xchg
lock
jno
sub
into
xor
stos
hlt
mov
inc
dec
lcall
sbb
and
jnp
inc
and
mov
in
lcall
inc
ja
in
fsts
cli
test
jb
and
out
fbstp
cmp
data16
cmp
add
out
lds
ss
jmp
and
add
push
daa
lods
cmp
dec
push
pop
cmp
cltd
sub
aaa
inc
ffree
xor
and
roll
iret
cmpb
xchg
lahf
pop
faddl
pop
push
jp
inc
test
bnd
std
in
jp
fildll
xchg
adc
or
insl
cwtl
jmp
jl
mov
in
xchg
scas
loop
add
fidivrs
sub
sub
jno
repnz
cli
lret
xor
aad
adc
xlat
or
insb
gs
mov
jne
add
fdivrs
pop
adc
mov
les
and
les
sti
adcl
pop
dec
inc
mov
jl
push
lahf
scas
mov
sbb
cli
pop
push
or
cld
sbbl
and
stos
lea
dec
cmc
and
push
fwait
mov
scas
jo
pop
iret
testb
lret
mov
sub
xchg
fs
jno
pop
test
add
ljmp
arpl
cmp
mov
aaa
xchg
inc
ja
or
pop
js
add
out
and
pop
cltd
popf
movsl
cmpsb
movsb
mov
mov
pop
adc
push
mov
addb
outsl
xchg
leave
out
or
ret
jp
jb
dec
ds
js
cli
mov
xchg
out
adc
or
and
aaa
insl
mov
dec
bnd
push
pop
pop
cwtl
lgs
cmp
push
imul
dec
subl
test
mov
aam
pop
inc
sbb
fstps
fmull
into
loop
mov
inc
out
cmp
push
sub
xchg
sub
adc
mov
stc
je
into
fstps
cwtl
and
add
scas
in
xchg
push
div
out
mov
cmp
push
inc
popl
xor
das
xlat
rorl
fsub
cmp
shlb
arpl
cmpsb
shlb
adc
and
ja
repz
into
lret
enter
rcr
or
ljmp
mov
xchg
gs
icebp
sti
fldt
push
dec
addl
xchg
adc
mov
xlat
sub
xor
les
jge
in
pop
int3
ret
jnp
mov
jb
push
add
xchg
adc
mov
pop
and
pop
sti
pop
sub
pop
dec
jl
cmpb
notl
mov
sbb
mov
dec
pop
or
ljmp
dec
mov
dec
mov
ljmp
mov
xor
out
js
push
or
dec
dec
sub
movsl
shl
jg
dec
out
les
lahf
stos
das
xor
loop
lock
leave
dec
andl
push
mov
mov
in
pop
jge
lods
mov
push
add
jnp
mov
cwtl
inc
adcl
jp
or
movsl
inc
add
or
cmp
cli
aad
mov
stc
and
pushw
adc
xchg
test
cmc
gs
cmp
sbbl
pop
dec
adc
jle
lcall
pop
stc
sbb
inc
mov
cmp
mov
xchg
jnp
mov
add
xchg
and
add
adc
movsl
jnp
sahf
mov
sbb
ficomps
mov
push
stc
std
cmp
pop
and
test
adc
jp
jg
mov
ss
stc
arpl
dec
mov
lods
mov
dec
mov
mov
cmovae
inc
stos
std
sbb
xchg
insl
in
pop
stos
xor
inc
ficoml
jecxz
inc
cmp
mov
dec
sti
cmc
push
cwtl
cmp
fs
mov
out
dec
insb
out
rcl
lret
mov
push
xchg
fs
sub
jne
mov
cmp
insl
or
inc
sbb
rcrl
jnp
jbe
jecxz
or
ja
jl
jecxz
insl
test
sar
out
cmp
pop
test
or
jne
add
inc
or
adc
lods
loopne
std
ja
shl
out
ds
ja
cmp
shrb
cmp
fdivs
xchg
adc
xchg
daa
ret
hlt
dec
sub
cmp
xlat
pop
mov
jb
sbb
outsl
inc
or
enter
cmp
aas
loope
cs
adc
or
loop
pop
add
dec
mov
jne
js
jne
mov
sbb
ja
rcr
in
xchg
xor
cmp
clc
in
and
je
xor
mov
lods
xorb
out
jo
push
scas
popa
push
imul
mov
xchg
mov
shrl
cmp
clc
sbb
xorb
mov
outsl
lret
or
cli
inc
in
push
cwtl
clc
xchg
loop
xchg
mov
daa
cmp
xchg
dec
pop
cwtl
jb
mov
popf
fbld
mov
xchg
bound
xor
repnz
aam
int
gs
inc
adc
fistpll
push
lahf
fs
xor
push
notl
pop
add
ja
dec
out
lret
lret
dec
xchg
adc
mov
xchg
out
push
push
adc
ret
dec
lods
mov
fisubrs
outsb
cmc
sti
mov
pop
pop
repz
pusha
mov
and
mov
inc
inc
xchg
bound
xchg
cmp
pop
pop
inc
clc
inc
mov
mov
ja
test
mov
push
lret
cld
rcll
xor
mov
jno
inc
lock
repz
out
dec
arpl
pop
mov
mov
xor
xchg
leave
push
jecxz
add
outsb
and
mov
xchg
rolb
pop
ljmp
jnp
arpl
sbb
repnz
sti
rorl
das
iret
es
push
mov
push
sti
or
into
sub
xor
daa
bound
xor
pushf
pop
jno
pop
jmp
pop
ret
inc
or
test
cmp
rol
sub
mov
rol
sub
fmull
in
and
cmpsl
pushf
push
add
jns
inc
inc
jns
xchg
cmp
lock
mov
out
pop
rcrb
jns
sub
add
jl
pop
lods
push
scas
aaa
test
cmp
and
insl
mov
sahf
fwait
in
pop
add
scas
jmp
pop
cmpsb
push
addl
adcl
cltd
nop
out
or
imul
jbe
xchg
cmpsb
jb
jae
jbe
aad
xorb
enter
jecxz
push
decb
pop
and
ja
pop
insb
xchg
inc
out
xlat
push
jmp
sar
push
jp
mov
shlb
pop
mov
pop
hlt
cmpsl
add
stc
xchg
adc
mov
sahf
pop
lods
mov
outsb
pop
lds
scas
jg
jbe
jns
jmp
add
fstpt
adc
mov
outsl
push
adc
iret
sbb
test
jnp
push
mov
dec
inc
inc
mov
scas
inc
imul
xchg
cmp
jmp
mov
rcr
xlat
add
push
es
adc
fisubrs
sbb
in
mov
xor
stos
lret
cli
scas
fistps
sbb
xor
mov
pop
jne
lahf
adc
mov
andb
jle
adc
and
sarb
out
dec
xor
jge
div
pop
cld
cmp
lods
or
and
inc
push
rcrb
sub
cmp
jne
int
dec
je
clc
in
xor
sti
inc
pop
mov
lcall
xchg
sarb
jecxz
mov
xchg
pop
sub
xlat
mov
inc
hlt
loope
push
icebp
cmp
cmp
and
or
jno
mov
in
jo
sub
xor
xlat
out
leave
adc
push
imul
insl
mov
xchg
push
adc
mov
or
in
push
xlat
jae
js
movsb
in
mov
add
dec
adc
adc
popf
cli
cmc
fistps
aad
cmpsb
pushf
lods
je
arpl
fnstcw
fsubl
inc
xor
jbe
cmp
mov
jae
shl
cmp
cmp
mov
mov
pop
adc
mov
mov
dec
inc
scas
insb
scas
setne
pop
ror
or
loope
push
repnz
mov
adc
out
add
xor
orb
jbe
loop
das
xchg
mov
sbbb
jne
aaa
ret
mov
pop
jecxz
xchg
sbb
fidivs
sbb
cmp
mov
shlb
sbb
orb
and
int3
mov
xor
sahf
push
out
cmc
xchg
loope
add
adc
popl
addb
push
adc
clc
push
sbb
cmpsl
push
mov
leave
add
je
push
pusha
fidivl
adc
push
push
loope
pop
fcompl
fmuls
or
test
cltd
inc
cs
mov
rcl
leave
rorl
stos
inc
imull
sbb
push
ror
lock
out
push
popa
bound
inc
mov
mov
or
dec
mov
jne
or
push
inc
and
aaa
jl
arpl
pop
push
leave
cmp
fwait
jne
mov
pusha
ficoml
jns
mov
push
xchg
mov
ljmp
divb
cmp
pop
js
in
pop
aam
push
std
dec
fbld
ja
test
pop
jo
in
push
subb
lcall
xchg
enter
fstpt
in
test
and
lock
ds
and
imul
test
mov
inc
pop
add
push
insl
out
enter
fsubs
enter
or
imul
sub
test
inc
dec
and
sbb
adc
adc
mov
inc
lock
out
out
lods
loope
xchg
pushl
mov
movsl
xchg
clc
cmp
mov
cs
int
add
mov
mov
dec
sub
dec
mov
cmp
pop
sbb
add
test
push
push
leave
cmpsb
aam
pop
leave
mov
xor
add
inc
xchg
rcrb
jmp
scas
sbb
pushf
dec
xchg
mov
repz
lods
mov
cltd
outsl
hlt
jb
pop
mov
adc
cmp
mov
xchg
addr16
js
leave
loope
stc
in
ret
mov
icebp
cmp
pop
mov
shlb
push
or
shll
loopne
mov
into
jno
cwtl
std
jg
loop
scas
push
out
adc
adc
push
movsl
mov
xor
mov
sahf
loope
stos
pushf
sahf
cli
das
ret
jno
sbb
fmuls
outsb
inc
pop
jno
and
repz
xchg
lock
pop
adc
out
sub
ret
insl
movsl
xor
mov
nop
addl
popf
inc
mov
mov
neg
sub
xchg
sub
aas
inc
pop
ss
mov
mov
mov
sbbb
fidivrl
int3
scas
mov
add
les
js
push
adc
xor
push
and
enter
mov
xchg
mov
add
mov
lock
and
aas
sub
jae,pn
mov
jb
leave
repnz
dec
sub
jp
mov
inc
lds
mov
dec
lret
outsl
and
sahf
shlb
cwtl
sti
push
lods
jnp
icebp
jg
jnp
fs
das
cltd
mov
pop
out
pop
fs
lock
mov
pop
mov
mov
adc
adc
mov
mov
outsl
inc
push
mov
jecxz
jns
imul
push
or
clc
xor
mov
push
xchg
sub
add
dec
test
outsb
pop
popa
lock
xchg
lcall
cwtl
pop
lret
cmp
push
fiaddl
mov
push
test
xchg
test
xchg
data16
pop
pusha
dec
scas
cwtl
inc
add
sub
shrb
inc
out
dec
and
outsl
outsl
mov
push
scas
out
jmp
mov
gs
outsl
adc
decb
xchg
addr16
mov
jbe
lret
or
pop
stos
mov
mov
add
out
mov
pop
jge
fistpll
pushf
lds
mov
xor
cltd
pop
inc
les
fsubr
inc
es
icebp
sbb
push
sbb
pop
inc
out
pop
pop
pop
pop
inc
divb
cmp
lahf
ss
pop
sub
adc
shll
mov
push
cmp
les
push
movsl
arpl
mov
out
xchg
sarb
rcl
out
cmpsb
out
dec
pop
and
mov
lock
sbb
lahf
dec
clc
popa
ss
mov
jmp
cmp
pop
test
push
xlat
xchg
ljmp
pop
xchg
stos
sub
je
lea
xchg
push
pop
dec
out
daa
mov
mov
jle
mov
gs
add
push
fisttpll
mov
imul
or
jl
xor
jmp
add
lods
mov
outsl
mov
lods
pop
mov
sbb
mov
pop
cli
mov
inc
in
dec
and
cld
push
lahf
mov
jae
outsl
int
sbb
fcompp
cmp
negb
jl
mov
ljmp
sti
lcall
inc
push
in
pushf
int
cmpsl
pushf
sbb
lret
aam
sti
lahf
sahf
push
mov
mov
shl
pushl
mov
mov
add
xor
mov
jge
cmp
mov
dec
les
xor
sbb
adc
inc
adc
xor
loopne
mov
xor
aam
dec
sub
pop
nop
cmpsb
pop
fdivrl
das
adc
popf
in
aaa
mov
xor
xor
fnstenv
push
into
shll
in
add
movsl
dec
pop
cli
outsb
mov
rorl
outsb
jmp
inc
xchg
out
setnp
add
push
push
pop
jbe
xchg
lods
int3
dec
cmpsb
pop
xor
movsl
js
mov
es
inc
or
icebp
adc
test
pop
mov
mov
jp
hlt
stc
nop
push
dec
cmp
ljmp
sahf
subl
das
add
ds
xor
add
cltd
scas
movsb
jae
push
vpaddsw
and
xor
push
pop
jl
daa
scas
pop
popf
ljmp
mov
lea
jno
lods
xor
push
sahf
and
int
inc
or
fwait
aam
repz
xor
xchg
xor
xchg
mov
fstps
cmpl
add
push
out
stos
add
js
jno
dec
in
adc
mov
stos
jnp
adc
inc
jle
or
cmp
jns
in
jmp
inc
or
sbb
ss
sub
xor
cmp
mov
mov
fucomip
xor
add
mov
mov
xor
push
or
into
pop
scas
dec
imul
daa
jnp
xchg
sbb
xor
mov
or
jge
lods
pop
pusha
push
std
sbb
inc
fidivrl
lret
jle
jnp
lahf
aas
mov
cmp
mov
xchg
rorl
pop
stc
ficoms
mov
sbb
adc
sahf
pop
orl
adc
out
frstor
fldl
inc
movsb
movsb
das
addb
testl
adc
mov
je,pt
fsubrs
pop
insb
jmp
push
mov
push
fisttps
adc
add
pop
in
dec
sbb
mov
add
adc
cmp
andl
cmpsl
test
pop
stos
jbe
movsl
or
mov
out
mov
je
test
cwtl
stc
ret
ljmp
sub
clc
sbb
fisubl
and
jecxz
sub
push
iret
not
cmp
inc
aas
sarb
push
addr16
dec
gs
push
std
dec
js
fwait
push
call
decl
cmp
test
aad
xlat
inc
pop
xlat
std
mov
cmpsl
imul
pop
mov
add
cmpsl
sbb
jle
adcb
inc
add
dec
push
mov
clc
lcall
stc
adc
cmc
push
xchg
lret
in
mov
cmpsl
inc
sbb
cmpsl
test
jne
mov
insb
pushl
scas
push
call
loope
addr16
out
mov
into
ja
pop
pop
pop
cld
stos
or
inc
icebp
ss
mov
mov
je
inc
sbb
add
push
popf
adc
pop
jp
clc
shl
xchg
pop
adc
mov
loope
dec
or
mov
push
inc
add
ds
ficomps
nop
inc
fadds
pop
inc
pop
mov
ljmp
arpl
imul
push
adc
fdivr
push
jecxz
jmp
pop
push
cmp
cmp
jmp
dec
shrb
popf
mov
dec
ror
pop
enter
add
jne
sub
out
fistpll
cmpsl
cmp
ljmp
mov
sarb
in
mov
or
xor
push
adc
or
push
sbb
or
in
adc
test
outsl
and
test
scas
add
mov
sub
xor
mov
xchg
dec
mov
stos
loopne
mov
xorl
add
jge
call
into
cli
xchg
jae
imul
test
inc
fs
pop
loope
inc
cltd
filds
adcb
ja
int
dec
cltd
insl
and
inc
mov
mov
adc
call
roll
xor
xchg
cmp
ja
cmp
pop
jmp
mov
leave
fsubs
jne
stc
mov
mov
adc
jns
jle
add
sub
mov
rcll
dec
aas
inc
mov
or
add
in
mov
movsb
mov
dec
xchg
aad
or
lock
fisubl
mov
xchg
addb
and
adc
lods
aas
xor
adc
push
pop
inc
sub
hlt
outsb
cmpsb
rorb
hlt
lcall
cmp
hlt
add
shll
dec
enter
fcompl
and
adc
sbb
mov
in
lock
stc
rcll
mov
lods
cmp
dec
push
in
add
sub
nop
loope
das
pop
shll
cld
insl
or
popf
ret
adc
add
push
inc
ja
jo
ss
inc
aam
dec
jg
inc
sbb
jl
mov
jge
and
jmp
add
pop
ja
fnstenv
xchg
jns
sti
adc
mov
sbb
cmp
inc
roll
rcrl
inc
sbbb
sahf
int
ficomps
add
pop
jg
insl
inc
or
cmp
out
aas
ss
lret
cmp
sub
mov
inc
sub
add
daa
and
insb
repz
cs
call
pop
push
stc
push
sub
push
or
fadd
loope
fs
mov
insb
mov
pop
out
dec
push
movsl
xchg
out
or
xchg
insb
aam
add
or
std
push
dec
lods
ficoms
inc
ja
ss
outsl
clc
sarl
xchg
into
sub
packsswb
outsb
rol
xlat
lcall
dec
shll
mov
js
jns
lcall
imul
stc
mov
jb
ljmp
xor
push
and
xor
push
sbb
addr16
clc
nop
inc
rcl
mov
loopne
movsb
and
js
mov
cmp
push
jmp
or
orl
inc
inc
sbb
popa
xor
mov
dec
clc
mov
repz
sbb
push
and
xor
mov
xchg
pop
jne
xchg
out
out
cmp
ror
xor
push
xchg
adcb
add
xchg
pop
addr16
scas
fistpll
jne
mov
popf
mov
flds
adc
sbb
out
mov
out
xor
add
clc
sub
into
xchg
ljmp
and
lcall
adc
push
mov
mov
mov
xchg
add
mov
pop
popa
mov
xchg
mov
hlt
jmp
mov
inc
dec
aam
stos
dec
fwait
xor
jae
pop
or
add
rolb
data16
test
aad
fsubrl
lds
xchg
cmp
ret
js
ja
xor
std
inc
pop
mov
mov
mov
xchg
sub
shlb
into
push
int3
inc
imul
mov
mov
xchg
loopne
das
es
inc
in
inc
ja
lret
mov
lahf
push
cmp
cwtl
xchg
mov
fisubl
sbb
movsb
sub
pop
ds
js
and
sbb
imul
pushf
add
addr16
push
pop
sbb
sub
arpl
enter
or
into
inc
jbe
es
push
push
inc
mov
mov
test
push
subl
mov
inc
push
cmovl
pop
mov
inc
mov
xor
cli
mov
jbe
es
testb
inc
xor
loope
test
hlt
xor
cli
cmp
add
ja
stc
adc
and
or
shlb
cmpsb
enter
sbb
cwtl
push
in
jae
and
clc
mov
sub
fwait
in
std
and
pushf
fistpl
xchg
xor
stos
jmp
and
jae
test
jp
icebp
call
sbb
mov
xor
jns
movsl
iret
aam
lods
cltd
out
shll
pop
or
imul
xor
mov
mov
inc
sbb
jns
lahf
ja
mov
and
and
in
cli
cs
sahf
jbe
popa
lret
fcoms
pop
push
xchg
in
aad
add
pop
jmp
call
in
sbb
mov
push
mov
popa
lss
jmp
and
cwtl
mov
das
inc
xor
and
test
mov
cmp
dec
sub
iret
mov
push
in
mov
cli
adc
cmp
xor
daa
iret
lods
adc
dec
cmpsb
jno
std
daa
or
lea
add
adcb
dec
mov
push
cltd
lods
sub
pop
mov
out
jno
imul
add
leave
push
sbb
movsl
addl
xor
inc
push
out
cmp
mov
dec
dec
lock
cmp
daa
insb
cmpb
mov
jno
mov
loop
lret
xorl
adc
xlat
orl
movsl
clc
lods
xchg
ret
mov
inc
outsb
xor
iret
xor
ret
or
cmc
jne
ja
sub
push
xlat
and
or
adc
push
pushf
mov
mov
insl
pop
test
fsubrl
mov
or
sub
pop
pop
out
inc
arpl
pop
jecxz
xor
push
adc
gs
rcll
dec
andl
sbb
cmc
cli
inc
clc
and
fcmovb
imul
scas
sbb
stos
xchg
rcl
das
xlat
adc
arpl
push
imul
mov
inc
dec
pop
dec
dec
sub
xor
adc
add
out
aaa
leave
dec
test
push
jmp
test
inc
stos
xlat
mov
iret
xchg
jo
or
cmpsb
xlat
mov
aaa
jo
xor
ljmp
mov
repz
sti
pop
pop
mov
jb
pusha
push
stc
outsl
mov
jb
mov
pusha
fdivrl
cmp
std
lcall
mov
push
xchg
movsb
loop
dec
adc
mov
mov
jb
ds
pop
arpl
inc
dec
je
ffreep
fbld
lods
iret
xor
adc
cld
push
adc
push
repz
mov
pop
js
stc
iret
sub
outsl
movsb
push
inc
jecxz
cmp
adc
std
sar
repnz
test
inc
sbb
sub
jo
mov
shl
arpl
ds
divb
inc
or
sbb
sub
pop
ds
jnp
pop
and
xchg
idiv
xchg
repnz
mov
xchg
popa
lahf
mov
mov
mov
flds
xor
psllq
xchg
es
ficoml
clc
jo
add
add
ja
lock
sarl
sbb
or
cs
cmp
lret
adc
fsts
xchg
stos
jno
pop
lcall
dec
sti
or
add
aaa
cmp
popa
loop
adc
lods
addb
test
xor
adc
jb
and
fiadds
jmp
or
insl
loopne
clc
mov
push
mov
pop
xchg
jle
mov
in
push
adc
jbe
dec
in
sub
out
cld
scas
jg
push
test
sub
cmp
rcrb
dec
das
xor
std
add
mov
ret
jle
mov
mov
aaa
jb
iret
lahf
or
shll
xor
ja
jae
js
int3
mov
cmp
mov
pop
push
ljmp
mov
imul
insl
xlat
lahf
lds
dec
mov
jecxz
and
sbb
jo
pushf
push
mov
cmpsl
add
fistl
loope
movsl
insb
pop
xchg
xor
fs
jecxz
adc
rcll
mov
sub
xor
sbb
gs
adc
push
jnp
cmp
pop
iret
cs
and
cmp
mov
out
loope
xlat
inc
sub
movsb
dec
inc
inc
add
repz
aam
movsb
adc
ljmp
je
push
lret
jmp
push
mov
pop
xchg
je
pop
fwait
insl
pushf
mov
mov
pand
outsl
cmpsl
fidivrs
scas
dec
popf
arpl
pop
dec
sbb
scas
pushf
pop
aad
xchg
mov
lods
cmp
dec
sahf
adc
dec
xchg
repnz
sub
andl
jge
std
insl
outsl
mov
inc
mov
jmp
cmc
test
cmp
mov
aaa
xchg
js
cmp
adc
loopne
scas
out
sub
jns
imul
xor
dec
pop
sub
mov
inc
and
sub
mov
xchg
ret
xor
pop
cmp
push
popa
jns
cmp
push
sub
pop
imul
lahf
cmp
imul
int3
cmp
jns
adc
inc
adc
and
int3
ss
dec
xor
mov
mov
xor
mov
arpl
push
dec
or
fcoms
mov
push
mov
in
cltd
xchg
movsb
test
les
lock
fcompl
shl
scas
repz
sbb
ret
testl
jecxz
jne
fcom
sbb
out
push
ja
hlt
xchg
jp
or
ret
dec
push
pop
jns
hlt
imull
xchg
out
mov
push
pop
ja
and
fidivrs
dec
push
jnp
lods
lock
or
jae,pn
dec
xor
cmpsl
int
int3
fsubrp
mov
jnp
std
sti
jecxz
out
mov
ja
imul
and
shrb
fbstp
push
mov
xchg
push
sub
adc
repnz
les
outsb
aad
or
lahf
sub
cmp
cltd
mov
out
jnp
cmp
idivl
mov
test
sub
adc
sbb
jne
filds
loope
mov
js
push
lea
cmp
jle
jge
xchg
mov
xchg
add
xor
and
test
sub
clc
ja
or
inc
jo
pop
and
push
jo
addr16
das
push
jns
sahf
inc
xor
add
add
mov
add
dec
shl
out
and
cmp
inc
rclb
in
adc
enter
sbb
es
inc
fisubrs
enter
daa
dec
add
and
dec
aad
push
pop
sub
push
bound
push
sarb
cvtpi2ps
adc
add
mov
sub
or
xchg
sbb
rcrb
jmp
mov
push
gs
popf
cld
inc
sbb
push
ficomps
xchg
movsl
xlat
xor
xor
cmp
leave
mov
test
scas
loopne
flds
pop
adc
dec
sub
mov
sbb
aas
cmc
icebp
pop
gs
cmp
mov
rcr
outsb
pusha
mov
inc
scas
leave
shr
fidivrs
inc
mov
cmpsl
stc
scas
mov
mov
jns
dec
inc
bound
icebp
arpl
cmp
add
adc
or
clc
nop
nop
pusha
sbb
test
cli
rep
jns
pop
lods
scas
repz
mov
fimull
insb
and
stc
pop
mov
pop
cmp
outsl
push
les
mov
pop
fadd
test
adc
dec
adc
push
cmpsb
xchg
inc
scas
scas
in
stos
cmp
dec
nop
pop
bnd
mov
sbb
rdmsr
nop
cmp
or
push
adc
das
xchg
lea
dec
mov
sbb
mov
and
xchg
mov
mov
in
inc
dec
sub
jnp
push
xchg
lret
adc
test
xor
movb
subb
adc
lods
ljmp
sub
cmp
mov
outsl
cmp
loop
loop
aas
mov
push
lahf
jmp
mov
loop,pt
cmpsl
outsl
out
push
mov
jns
pop
cmp
stc
ret
test
ljmp
ret
xchg
mov
in
dec
push
mov
dec
pop
pop
lods
cmpsb
pop
mov
lods
dec
xchg
jl
fdivl
and
or
imulb
xor
lods
mov
lahf
call
outsl
mov
cli
sahf
xor
jne
mov
mov
add
push
sub
jbe
nop
aam
shr
xchg
mov
js
popa
mov
jmp
addr16
cmpsl
jmp
pop
add
mov
inc
sbb
add
cmp
mov
push
mov
push
mov
lea
fdivr
scas
cmp
arpl
rolb
rcr
cs
and
cltd
ret
icebp
mov
mov
je
xlat
ret
cwtl
lcall
sub
sbbb
adc
stos
push
push
dec
jno
inc
scas
jno
mov
stos
std
fistpl
mov
xor
fcompl
sub
repnz
inc
fsubrs
inc
adc
inc
push
lods
add
pop
aas
icebp
sub
xchg
lods
loop
xor
pop
mov
lds
or
insb
fiaddl
dec
outsl
mov
cwtl
cmpsl
nop
jae
jo
outsl
stos
fisubl
lods
jns
add
push
sbbb
xor
rorb
cmp
cmp
out
sub
xor
loop
jl
out
dec
inc
lahf
lods
xchg
mov
mov
rclb
shlb
pop
or
out
xchg
lret
mov
test
movsb
and
sub
rolb
mov
adc
mov
in
sbb
or
pop
mov
movsl
lahf
in
in
int3
mov
xor
mov
cltd
in
add
push
jl
jl
jge
into
cmp
cmp
into
dec
cmp
adc
cmp
dec
mov
int
xchg
jb
lret
xchg
dec
mov
mov
inc
jo
bts
loop
jno
lods
pop
divl
push
insb
jmp
add
or
pop
push
pop
lods
js
sti
ficompl
mov
sar
mov
shll
es
mov
mov
and
imul
cltd
in
push
add
and
out
jecxz
pop
test
int3
pop
add
lds
adc
aam
js
out
xor
mov
in
sbb
lock
add
adc
addr16
lds
es
sub
jno
jbe
pop
out
ret
out
test
jo
cmp
mov
adc
ljmp
cmpsl
sub
pop
pop
arpl
or
in
lret
sbb
sbb
movsb
mov
push
and
sub
mov
dec
sub
movsb
popa
jbe
push
pop
loopne
test
inc
cmp
ja
sbb
jle
stos
gs
lock
xchg
jmp
fsubs
lret
loopne
sti
add
push
les
movsb
cmp
pusha
loop
mov
inc
push
adc
shll
lods
push
mov
shlb
nop
sbbb
sub
popa
scas
mov
sub
sub
push
andl
scas
xchg
in
das
lahf
stos
popf
es
or
cmp
inc
lds
int3
pop
sbb
mov
push
xchg
cmpl
xchg
pop
xchg
test
cmpsb
ljmp
sbb
sbb
and
fadd
lods
push
in
fcomp
addr16
xor
or
mov
mov
sti
dec
jb
cmp
lret
in
sub
int3
mov
and
inc
mov
aas
jb
cmpsl
roll
lds
clc
fwait
cmp
jg
sub
xor
jae
xor
mov
and
inc
or
loop
int
mov
xchg
lea
sub
pop
xor
push
jns
mov
mov
repnz
in
movsl
lcall
and
push
cmpsl
cmp
cmp
adc
cmp
add
ja
push
cmp
xchg
imul
ljmp
or
jg
insb
adc
mov
mov
add
out
dec
mov
loopne
dec
sahf
xchg
or
out
xchg
test
stos
xchg
roll
mov
in
sub
inc
mov
pop
push
mov
packssdw
push
mov
lods
mov
xchg
pusha
loope
jb
dec
jp
pop
dec
sti
mov
dec
sub
icebp
enter
adcb
adc
mov
cmp
imulb
adc
adc
sbb
pop
pop
mov
pop
stc
or
stc
stos
call
jno
test
dec
les
and
xor
push
and
test
mov
popl
cmp
sbb
iret
sub
cmp
sub
mov
das
aas
mov
dec
stc
pop
rcl
jb
imul
sti
aad
js
ret
jo
loopne
icebp
and
push
test
push
cld
lock
in
loope
neg
sub
xor
mov
test
push
or
xchg
mov
xor
push
testl
and
mov
into
mov
lcall
jg
ret
imul
mov
or
rcl
fisubl
cmpsb
xor
ja
icebp
pusha
push
pushf
iret
rep
pop
inc
dec
je
mov
fadds
adc
xor
stos
ret
dec
sub
jge
pop
orl
mov
push
test
in
and
aad
outsb
sub
inc
push
repz
xor
lds
lods
fsubrs
pop
aad
mov
movsb
sbb
incl
aam
outsl
jge
dec
and
aad
fstps
pop
mov
fisubrs
stos
push
sub
sbb
dec
jl
lods
cs
sti
push
fnstenv
cmp
and
xor
adc
xor
repz
and
sub
xchg
mov
fwait
add
rcl
inc
mov
mov
mov
dec
cmp
adc
dec
rcrb
mov
pop
adc
cld
and
std
imul
loope
and
lea
shrl
ja
mov
dec
inc
sti
cmp
cmp
push
cmp
cmpsb
jp
add
mov
pop
add
inc
loope
lds
jnp
jmp
mov
mov
test
aaa
xor
or
sbb
out
inc
loop
inc
fidivrs
andb
das
pmuludq
scas
push
fldl
mov
sbb
cmp
leave
and
popf
or
push
jmp
jae
inc
aad
stc
imul
mov
pop
jmp
stos
lock
lahf
repnz
xlat
in
inc
cmpsb
orl
cmpl
jg
rorb
loop
mov
cmp
inc
mov
fidivrl
fsubr
pushf
dec
pop
xchg
ss
outsl
ret
es
add
or
dec
cmc
popa
or
mov
and
adc
mov
sub
fisubl
jge
xor
mov
xor
lods
sti
das
dec
or
jns
dec
cld
fwait
enter
and
jb
fdiv
icebp
lods
in
mov
cwtl
dec
fidivrs
aad
dec
mov
lret
dec
or
and
xchg
mov
divb
call
lds
cli
aam
push
lods
pop
fdivs
lds
jns
mov
popf
or
neg
mov
cmp
sub
jecxz,pn
aaa
cmp
mov
test
xor
pop
jle
jnp
sbb
pop
mov
cli
adc
cli
mov
aaa
hlt
lahf
in
in
clc
inc
movsl
adc
sub
ds
mov
adc
shr
hlt
lods
push
stos
sahf
cmpsl
shlb
sub
push
pop
mov
std
push
cmpsb
push
bound
push
jno
prefetch
fmull
push
loop
shr
cmp
rcrl
dec
adc
ret
cmc
jecxz
out
sti
icebp
push
movsl
es
cmpsb
jg
xor
mov
add
mov
xor
ss
imul
cmp
xchg
jns
mov
mov
pop
and
and
sbb
push
push
jno
pop
es
cs
stos
rcrb
mov
mov
inc
sub
pop
inc
push
dec
fnstcw
je
arpl
inc
xchg
inc
pop
dec
lods
or
mov
int3
fidivrl
cmp
ret
xchg
mov
pusha
nop
iret
popf
mov
lcall
clc
inc
push
mov
mov
sar
sbb
dec
mov
or
adc
jo
lods
adcb
mov
fidivl
ljmp
outsl
stos
loope
faddp
inc
aam
xor
cmp
inc
loop
arpl
xchg
mov
das
push
and
or
jg
ret
cmp
pop
ljmp
je
loope
xchg
push
loopne
jge
push
pushf
daa
mov
loop
cmp
js
and
lods
xor
cmc
es
lret
sbb
pop
xchg
nop
int
int
jg
xchg
pushf
adc
cmp
mov
ret
ss
or
pop
xchg
sbb
rcll
les
or
mov
jno
js
lahf
sbb
rcl
dec
std
nop
jae
and
xor
add
xor
insl
mov
mov
or
sub
into
fists
push
jno
ret
jl
adc
cltd
imull
cmpsb
lock
ss
sub
pop
push
cld
jle
dec
pop
jle
pop
jle
mov
jo
rorl
jae
orb
addr16
mov
jnp
shll
jecxz
ret
into
daa
sbb
les
dec
pop
lods
rorl
shll
jmp
xchg
ret
test
mov
jmp
inc
jnp
insl
lea
sahf
pushl
inc
je
jl
lahf
xchg
and
clc
inc
sbb
js
cmpsb
pop
and
ficoml
mov
daa
jg
cwtl
sbb
pop
shlb
in
repz
fnstenv
jae
jbe
hlt
insl
xchg
dec
imulb
add
sub
cmp
xor
add
lret
gs
sub
test
cmp
rcrl
mov
mov
pop
int
in
arpl
in
je
mov
mov
mov
scas
mov
ljmp
in
sub
push
xorb
jp
jmp
daa
and
xchg
sub
fwait
stos
sub
das
jnp
sbb
ss
cmp
xor
inc
int
stos
icebp
inc
cmp
lret
repz
and
jno
push
add
lock
addb
xor
divb
stos
jns
mov
idivb
adcb
pop
mov
sbb
and
lcall
dec
sbb
fdiv
mov
pushf
mov
mov
das
fcoms
or
and
mov
mov
bound
or
xchg
push
icebp
imul
mov
cmpsl
int3
cmp
xchg
add
out
out
sbb
in
stc
sahf
jge
pop
loope
and
ja
in
test
mov
and
mov
pop
fstps
dec
mov
add
inc
daa
test
xchg
imul
cmpsb
xchg
sahf
inc
push
scas
js
mov
push
xchg
pop
xchg
imul
add
jecxz
mov
push
pop
rorb
in
imul
push
sbb
lret
jl
sbbl
dec
imul
jmp
pop
aaa
add
sub
inc
xchg
movsl
push
push
fcmovnb
adc
dec
in
xlat
movsb
cwtl
ss
jns
je
pop
cmpsb
icebp
jbe
dec
inc
ficoml
adc
fnstcw
cmp
cwtl
addl
insl
cmp
sub
int3
cld
dec
add
sub
outsl
cmp
mov
pushf
lahf
test
sbb
mov
push
rdmsr
inc
or
scas
and
add
jg
cmp
dec
outsl
cmpsl
push
imul
nop
add
aad
dec
push
ret
cmp
lods
mov
sub
add
test
sahf
fnstcw
jb
and
add
pop
js
fidivrl
mov
loopne
or
cs
dec
mov
or
js
sbb
dec
popa
cmp
and
xchg
lret
scas
xor
pop
in
pop
in
or
in
xchg
out
xchg
bound
and
cmpsl
fildll
mov
mov
sub
sahf
pop
mov
add
sbb
test
jg
in
movsl
add
cmc
enter
aad
inc
mov
test
cmp
lret
daa
mov
jnp
fstpl
pop
aas
adc
xchg
js
popf
imul
sub
sbb
cmp
shlb
leave
rcrb
icebp
cmp
int3
pop
inc
dec
lods
cmpsl
hlt
jbe
mov
arpl
sbb
ret
sti
scas
repz
push
insl
xor
mov
xlat
inc
mov
out
adc
leave
inc
sbb
outsb
push
sti
xchg
sub
lret
mov
es
or
mov
test
call
lahf
clc
xchg
cld
call
mov
rorl
adc
sub
ja
outsb
lods
inc
ret
sub
ljmp
mov
cmp
and
mov
sub
bound
test
mov
shll
outsb
inc
ret
cli
stos
repnz
mov
push
js
pop
pop
fbstp
xchg
scas
adc
xchg
add
daa
int
xor
shr
mov
fsubs
addr16
cmpsb
cmp
pop
mov
arpl
insb
xor
cwtl
cmpsl
push
xlat
cmp
fadd
stos
leave
call
add
mov
outsl
pop
jne
shlb
in
subl
jmp
mov
fbstp
cmpsl
nop
cmp
mov
mov
and
mov
lahf
std
loope
popa
push
push
xchg
cmp
mov
mov
bnd
repz
ja
add
sub
imul
xchg
repnz
js
fdivrs
stos
adc
lahf
cmpsl
pop
enter
jp
inc
cmp
fs
lret
sub
mov
push
in
repz
mov
adc
mov
pop
pushf
push
mov
add
pop
xlat
cmc
sbb
mov
sub
xor
ficomps
mov
js
addr16
jle
lods
inc
popa
repz
pop
or
push
les
ss
mov
xchg
jo
loope
mov
add
dec
call
ret
inc
and
subl
inc
rcrl
inc
adc
push
sbb
call
lods
cmp
clc
add
out
ds
cwtl
and
stos
push
fnstcw
xchg
pop
test
repnz
cmpb
sbb
sbb
mov
imul
and
inc
inc
cmp
jno
push
out
jo
sbb
sbb
jl
cs
stc
xchg
loopne,pt
popa
jl
xor
sarl
mov
std
mov
rcll
push
nop
jp
sbb
mov
call
xchg
int
pusha
adc
pop
jle
jo
push
adc
inc
rcr
push
or
stos
std
pushf
ffree
out
push
mov
xor
fdivs
push
hlt
mov
jns
cld
adc
int3
mov
pop
mov
fs
aam
sbbl
inc
jo
dec
push
mov
push
rorl
sbb
fsub
idivb
fcompl
mov
std
out
xchg
inc
fcompl
scas
ret
jmp
rclb
cmpsl
or
cmp
ret
cs
sbb
lods
lods
loope
cmp
mov
mov
or
clc
or
xchg
jl
dec
cmp
sub
out
push
jbe
iret
sbb
les
fildl
mov
push
lahf
cmpsl
push
shr
xor
imul
adc
call
icebp
sub
js
addr16
push
mov
ja
cmp
xor
dec
inc
pop
cmp
xor
cltd
repnz
movsb
sahf
xorl
notb
jb
jbe
lahf
xchg
xor
stc
mov
loope
pop
dec
fcomps
sbb
imulb
mov
push
xor
xorl
cmp
dec
rcll
movsl
cltd
scas
into
insl
sbb
test
and
cmpb
push
add
mov
sub
and
sub
das
mov
notb
rcll
pop
pop
jle
jle
aaa
pusha
jecxz
lods
inc
inc
jp
mov
push
lods
xor
data16
and
push
cmp
and
rorl
adc
pop
push
test
pop
dec
inc
push
sete
xor
cli
and
fcmovnb
lea
inc
pusha
outsl
lds
ljmp
xor
sbb
mov
push
and
pop
sti
or
lods
jecxz
push
lret
stos
push
xlat
shl
rol
jbe
lods
aas
xor
outsb
mov
nop
test
mov
mov
in
or
mov
jp
clc
and
jno
xchg
push
jl
and
or
mov
shl
sub
call
xchg
sub
out
popa
test
sbb
jne
stc
enter
addl
fadds
sbb
out
mov
jno
jmp
inc
ja
pop
gs
dec
mov
insl
inc
mov
leave
sbb
popa
mov
xor
cwtl
shlb
push
or
dec
and
insb
push
pusha
xlat
loope
dec
pop
add
cmp
cmc
add
pushf
cmp
xchg
rolb
lods
push
sahf
fs
pushf
mov
out
sbb
arpl
inc
fidivrs
lea
ljmp
fucomp
mov
jmp
dec
add
loopne
xor
push
xchg
xchg
mov
xchg
jbe,pt
or
cmpsb
jecxz
adc
or
lods
in
xlat
mov
jnp
in
arpl
or
jbe
call
movsb
lock
adc
test
mov
ljmp
push
xchg
repnz
push
repz
xor
sbb
enter
test
repz
loop
iret
das
jae
dec
dec
out
rorb
aaa
add
sbb
jo
shrb
repz
jb
cmp
iret
pop
imul
lcall
in
sub
push
push
imul
mov
scas
js
repz
jns
xor
xor
cmp
or
int
in
add
xlat
or
repnz
imul
aad
nop
mov
arpl
enter
adc
or
pushf
sub
adc
jg
sub
mov
cmc
mov
cli
cmp
jae
fs
adc
in
cltd
lahf
adc
mov
sub
mov
xor
negb
fisubs
mov
jp
mov
sarb
fs
je
data16
stc
mov
lahf
xchg
das
cmp
ret
mov
daa
outsb
in
insb
out
xchg
sbb
out
aam
and
push
cmp
out
loope
test
mov
sub
mov
pop
cmp
fs
cmp
cmpsl
dec
aas
inc
sub
out
clc
pop
sub
mov
sti
jge
rorb
mov
mov
repnz
push
mov
add
and
shlb
scas
sbb
rcr
push
sti
idivb
add
scas
adc
mov
jge
push
xchg
sbb
jecxz
dec
adc
inc
jle
sbb
ss
push
mov
mov
pop
es
push
testb
adc
inc
outsb
mov
lret
notb
cwtl
jne
xchg
cltd
subb
sbbb
out
adc
loop
cmp
mov
lock
jns
cmp
iret
mov
cmpsl
dec
or
aad
cmpb
xor
int3
stos
ds
rcll
in
push
in
sbb
xchg
add
cmp
mov
inc
pop
aam
sub
rolb
add
inc
cmpsl
divb
cmp
fs
sbb
sbb
jmp
and
add
push
pop
ss
push
or
in
cwtl
mov
or
lea
sbb
in
cmp
pop
out
xor
jl
xor
fsts
je
adc
jmp
push
movsl
mov
add
and
jle
shlb
mov
push
enter
clc
xor
orl
push
mov
xor
cmp
repnz
or
or
adc
orb
sub
fdivl
mov
cltd
sub
dec
ret
test
mov
or
adc
or
repz
xor
add
into
sub
cmp
int3
andl
sbbb
lahf
pop
xchg
cltd
mov
sbb
cltd
cmpsb
arpl
push
sub
adc
fldl
jmp
lds
test
sbb
and
int3
fcmovbe
jo
fidivrl
imul
lods
clc
dec
int3
mov
movsb
mov
adc
mov
push
popf
hlt
fisubs
call
int
xor
sub
scas
mov
clc
cmpsl
imul
enter
dec
sub
sub
dec
cmp
jbe,pt
jmp
and
mov
mov
push
aam
scas
mov
gs
orl
out
jp
lods
enter
int
cmp
subl
fildll
popf
dec
dec
xchg
insb
gs
cmp
push
cmpsl
filds
dec
loop
movsl
or
out
lock
scas
pop
add
ret
enter
push
xor
xchg
cmp
push
in
clc
mov
sub
dec
mov
rol
xchg
jle
and
arpl
pushf
jp
loopne
std
rolb
in
out
sti
xlat
push
fsubs
test
push
push
pop
sub
mov
andb
mov
cmp
and
into
adc
fadds
ds
pushf
ds
mov
aaa
push
mov
inc
pop
and
movsl
loop
bound
sub
mov
mov
cmp
pusha
stc
mov
xor
jl
insb
push
ljmp
in
mov
movsl
in
push
sbb
scas
mov
addr16
arpl
cli
cmpsl
add
jecxz
bound
addr16
sbb
inc
add
imulb
out
jmp
ret
or
data16
rol
popa
and
dec
inc
mov
out
inc
or
or
movsl
in
out
fdivr
jp
fs
mov
mov
test
outsb
pop
gs
jnp
mov
imul
xchg
push
int
xor
mov
test
pop
adc
fldcw
lret
mov
cld
push
or
ds
cs
pushf
cwtl
shld
jae
aaa
push
adc
test
xchg
jg
outsb
rorb
jmp
dec
cli
hlt
hlt
mov
scas
sarb
mov
pop
in
mov
jecxz
inc
insb
mov
ret
stos
outsb
push
js
mov
mov
bswap
cmp
outsb
fwait
mov
xchg
jb
xor
mov
push
outsb
xchg
and
stos
mov
movzbl
mov
dec
bswap
xor
mov
and
dec
stos
notl
mov
es
movsb
fdivl
mov
cmc
pusha
shrl
cmpsl
pop
xchg
pop
or
xor
mov
jmp
repz
mov
push
shll
ret
jmp
pop
es
sbb
ret
sbb
sub
test
lret
mov
adc
test
pop
pop
pop
outsb
lret
lock
pushf
andb
mov
imul
mov
push
push
pop
icebp
sbb
int
mov
jb
aad
mov
scas
dec
xorb
popa
jbe
roll
pop
push
ret
mov
mov
movsb
cli
xchg
lods
jo
sbb
dec
setg
frstor
and
xchg
and
into
mov
je
add
ret
lds
jecxz
in
or
test
inc
aam
or
xlat
aaa
xor
imulb
lret
jmp
inc
mov
xor
inc
cmpsl
outsb
jnp
inc
into
jae
and
pop
aaa
pop
sar
push
xchg
cmpsl
gs
aas
dec
ljmp
push
cld
xchg
nop
repnz
cmp
test
pop
inc
adc
iret
xor
add
and
cmpsl
xchg
mov
cwtl
jp
inc
jns
jb
jnp
std
mov
sahf
and
sbb
mov
loope
adc
aad
mov
jnp
mov
lahf
xor
push
inc
ss
jmp
gs
loope
in
sub
incl
test
jb
inc
cmpb
pop
loopne
arpl
xchg
shll
push
daa
fistl
lock
mov
addr16
insb
and
jle
aaa
sub
sbb
aaa
sub
pusha
xchg
ret
add
rorl
and
into
sub
pop
test
scas
js
lret
imul
lea
jle
lcall
lods
dec
inc
imul
pop
mov
adc
pushf
nop
inc
loopne
push
push
pop
push
dec
mov
jge
or
cmp
ret
or
pushf
jo
mov
ret
daa
dec
sbb
sub
inc
hlt
dec
mov
and
xchg
push
xchg
inc
test
pop
jle
sbb
loopne
repz
mov
jmp
mov
rolb
mov
jbe
jnp
add
aam
cmp
jecxz
jno
cmpb
fnsave
rcl
xor
lods
xor
pop
pop
lds
push
pop
dec
outsb
mov
and
je
cmpsb
mov
lret
int3
dec
sub
cltd
push
sbbl
mov
jge
dec
xorb
in
jg
or
dec
in
pop
and
in
cli
test
mov
cmp
inc
mov
and
lds
lods
test
scas
mov
int
mov
push
dec
mov
mov
and
sbb
outsb
push
std
test
fldcw
cltd
xchg
jecxz
mov
jecxz
test
and
jo
inc
push
adc
cmpsb
movsl
imul
dec
sub
mov
jecxz
push
adc
or
xchg
or
jb
cmp
jns
add
jns
arpl
cmp
xchg
aad
jnp
addr16
imull
stc
popa
jbe
inc
enter
sub
lods
data16
mov
enter
xchg
jge
xor
pop
jg
fistpl
inc
in
lea
das
mov
add
pop
push
xchg
mov
mov
pushf
jno
sti
in
daa
data16
testl
or
add
sbb
aad
dec
negb
cltd
outsb
sbbl
cmp
std
dec
push
or
push
test
pop
fcomip
jne
loopne
push
cmpsb
and
out
pmullw
cmp
pop
loope
xor
sub
les
adc
not
dec
pop
cs
dec
xchg
mov
data16
fwait
jo
mov
dec
push
fcomi
nop
inc
jbe
mov
insb
cmpsl
add
push
rcr
ds
sarl
cltd
pop
les
and
stc
shrb
sbb
fadd
xor
lods
iret
mov
decl
sti
cmp
inc
jle
sbb
push
dec
pop
stc
orb
data16
int3
flds
inc
xor
into
jg
push
mov
std
pop
fidivl
sub
inc
xchg
arpl
stos
adc
lahf
sub
adc
adc
ficoml
in
mov
jmp
dec
subl
mov
lods
pop
adc
fwait
mov
pusha
mov
mov
pop
push
outsl
fwait
xor
cmp
mov
lret
mov
xor
inc
andl
cmp
mov
andb
jb
add
jge
leave
dec
xor
int
dec
mov
dec
out
pop
out
pop
pushf
cmp
aaa
sbb
xchg
outsb
sarl
xchg
pop
ret
lret
pusha
stos
aad
add
inc
and
dec
jb
repnz
dec
and
cmc
ss
divb
push
cmc
push
adc
jno
add
imulb
test
ljmp
adc
adc
mov
in
ja
fisttps
push
add
aaa
xchg
adc
icebp
and
mov
out
add
cmp
out
mov
pusha
or
jl
or
dec
stos
jnp
adc
sahf
stos
outsb
sbb
mov
repnz
lcall
fdivp
out
gs
lods
jle
filds
and
std
push
mov
pop
push
pop
cmp
mulb
cs
test
jae
ret
nop
js
pop
mov
mov
lods
pusha
mov
push
adc
mov
pop
inc
mov
mov
xor
mov
insl
fxtract
shl
mov
push
add
insb
shrl
add
sbb
scas
inc
ds
sbb
stos
pop
in
xor
sahf
mov
cmp
clc
inc
es
xlat
add
lret
sub
inc
out
out
push
pop
aas
jge
ret
pop
cmp
add
xchg
add
loopne
jmp
insl
mov
dec
mov
or
pop
push
and
das
data16
mov
mov
inc
roll
ss
cmc
movsb
mov
cmp
xchg
add
fidivrs
jbe
dec
and
repnz
repnz
addl
adc
or
sti
xorl
aaa
add
adc
test
pop
imul
mov
xor
inc
inc
dec
cs
add
mov
lock
sbb
sbb
test
push
add
inc
lock
jae
test
mulb
aad
and
int3
xchg
test
loopne
dec
adc
dec
imul
jns
scas
fwait
fwait
popa
popa
ljmp
add
adc
sbb
jp
push
pop
ja
xchg
sbb
repz
push
cmpsb
int3
scas
insl
fwait
jl
scas
mov
jg
add
jo
cmp
aas
pop
insb
ret
andb
jp
in
sahf
and
out
xchg
fs
je
lock
mov
mov
lds
pop
dec
push
imul
mov
ret
fnstcw
and
scas
and
jl
imul
inc
cwtl
mov
sbbl
daa
inc
imul
out
or
cld
xlat
hlt
into
sbb
aaa
ret
pop
std
cmpsl
xor
jbe
and
pushf
dec
fiaddl
adc
out
jnp
or
sbb
sbb
sub
push
repnz
mov
stc
adc
stos
aam
icebp
mov
pop
cmp
vphaddudq
gs
mov
jl
mov
sbb
xchg
loopne
adc
addw
pop
mov
sub
test
dec
ficomps
mov
pop
icebp
mull
shlb
pop
xor
mov
gs
std
mov
xchg
test
int3
dec
popa
mov
arpl
shll
pop
xor
mov
rol
xlat
pop
or
sahf
dec
cmp
scas
add
insl
sbb
cs
loop
out
jmp
jp
adc
mov
aas
jp
scas
into
ret
pop
std
dec
pop
out
jecxz
and
cld
ficomps
or
mov
mov
imul
dec
pusha
daa
testl
or
lret
lea
xchg
hlt
mov
add
adc
inc
or
ljmp
mov
pusha
pushl
lahf
scas
cld
xchg
sub
aaa
mov
mov
mov
lahf
jnp
add
cmp
sti
repnz
or
cli
cmp
lret
enter
push
cld
xor
int3
or
fiadds
fs
cmpb
dec
pop
sbb
mov
pop
call
call
jle
in
int
stc
inc
mov
push
cli
dec
test
dec
cmc
cmpsb
sbb
imul
jecxz
lock
aam
clc
cmp
fisttps
je
add
fistpll
push
int
sti
cmpsl
fildl
mov
sub
je
sbb
and
xor
cmp
lret
mov
or
cld
mov
sub
int
push
add
cmovs
test
and
sbb
mov
add
stos
mov
lds
jp
nop
jne
xor
mov
jo
pop
and
sub
insb
fs
into
mov
jne
mov
cltd
jne
mov
pop
xorl
xchg
xor
in
cmp
mov
add
pusha
mov
xor
std
add
and
xchg
aaa
push
imulb
mov
mov
add
repnz
fildl
aaa
sbb
inc
dec
sbb
ret
push
sbb
sti
mov
divl
sbb
das
sbb
ret
cltd
xorb
in
lock
xor
cwtl
int
jns
add
ret
push
mov
push
xchg
mov
popf
push
insb
xchg
adc
mov
inc
fwait
enter
clc
jecxz
repnz
bound
out
push
jle
pop
jbe
insl
mov
xchg
push
push
xor
stc
and
pop
mov
lret
mov
dec
jnp
xor
in
or
mov
push
xor
cwtl
rcrb
imul
orl
xchg
mov
mov
ret
mov
dec
mov
out
adc
sbb
jb
dec
cltd
or
cmpsb
je
mov
dec
push
shll
xor
stos
shrb
enter
or
jb
cmp
sti
inc
and
fists
dec
push
int3
std
ja
xchg
jle
std
xor
and
and
imul
inc
xor
jmp
xlat
cmp
jmp
cwtl
sbb
hlt
scas
and
mov
daa
fnstcw
xchg
cmp
nop
xor
test
mov
or
das
lret
mov
adc
mov
cld
test
inc
sub
mov
and
and
mov
in
xchg
movsl
scas
mov
push
mov
inc
push
lret
add
fs
jo
loop
inc
sti
je
dec
adc
addb
pop
cs
fistps
mov
or
inc
sbb
sub
out
orl
ret
lods
lcall
ror
sub
dec
add
into
pop
add
enter
lahf
ss
aaa
jb
xor
stc
nop
cmpsl
stos
sub
pop
adc
leave
push
out
pop
pop
popf
in
sbb
sbb
adc
pop
je
dec
adc
in
xchg
scas
jne
mov
call
mov
inc
push
fdivrp
inc
mov
sahf
sbb
imul
push
inc
psrad
mov
popa
mov
call
rorb
iret
jle
sub
movsl
notl
and
jae
arpl
mov
popa
cmp
dec
out
push
jne
jp
out
mov
mov
jo
pop
jo
les
in
cmp
inc
push
adc
dec
and
dec
icebp
iret
dec
inc
lods
mov
cmp
insb
cltd
orl
jecxz
incb
ret
aas
cmp
insl
jecxz
ljmp
sbb
sbbl
out
je
aaa
loop
aam
mov
lock
dec
and
xchg
xor
jp
lods
nop
cltd
gs
movsl
mov
or
sti
test
sub
cmp
mov
fbstp
push
jns
outsb
jp
xlat
shlb
pop
popa
mov
sbb
inc
sbb
xlat
shll
mov
popa
push
addl
pusha
add
sbb
jae
repnz
lods
dec
leave
lcall
mov
in
pop
call
rcrl
sbb
add
repnz
jns
pop
dec
in
jne
es
mov
pop
push
or
mov
xchg
adc
iret
jo
xchg
xor
mov
push
outsl
mulb
test
das
inc
faddl
aas
or
lcall
adc
push
sbb
cltd
push
sub
scas
jbe
add
out
movb
ret
mov
dec
cmpsl
inc
addb
xchg
push
sub
jo
mov
ror
shll
push
xor
jnp
fwait
adc
in
insl
jge
mov
xor
jecxz
stos
inc
lods
inc
bound
sub
xsha256
cmpsb
rcrl
repnz
mov
pop
inc
dec
loop
loop
adc
sbb
jg
pop
mov
push
mov
inc
popf
xor
xor
repnz
repz
in
loop
dec
ljmp
aaa
lahf
sbb
sbb
xchg
dec
in
mov
dec
iret
sti
dec
outsl
xchg
test
sub
xchg
mov
sahf
xor
sub
sti
mov
sbb
sub
insl
sub
mov
xchg
nop
mov
stc
data16
xlat
xchg
jl
lock
xchg
jmp
pop
push
pop
lret
add
ret
mov
mov
push
enter
out
adc
pusha
mov
sub
or
imul
js
inc
lock
dec
mov
call
pop
dec
adc
xchg
xchg
and
xchg
jg
xorl
mov
push
inc
inc
hlt
in
sbb
dec
sub
ljmp
pop
or
jne
mov
mov
lret
pop
fcom
rorb
pop
popf
sbb
test
sbb
mov
adc
pop
sti
in
adc
jne
or
xchg
nop
push
dec
cmpsb
pop
push
call
or
xorl
cli
pop
ds
inc
stos
jne
incb
push
pop
ljmp
pushf
test
pop
inc
dec
mov
push
bound
bnd
jmp
mov
repz
jp
push
nop
cmpsb
int3
in
mov
rorb
sub
jb
call
mov
and
mov
mov
fldenv
mov
insl
jmp
roll
jns
sti
jne
mov
out
dec
and
faddl
cwtl
loope
inc
add
stos
imul
test
scas
ret
lret
pop
enter
xchg
push
pop
pop
pop
pop
loop
in
rolb
jle
mov
cmp
shll
aas
xchg
insl
repnz
psadbw
push
xchg
leave
and
mov
add
jg
push
xlat
imul
lock
arpl
or
in
cmc
xor
dec
fucomp
fld1
loop
loopne
jns
push
dec
push
std
mov
jns
ds
mov
mov
movsb
xor
clc
aam
lods
ret
cltd
push
push
cmp
outsb
push
push
sbbb
rclb
es
aas
ja
outsb
dec
adc
xlat
push
cld
rcrb
iret
iret
add
mov
cmpb
sbbb
dec
ja
mov
pushf
nop
adc
lret
lods
pop
dec
xor
test
dec
leave
test
hlt
fs
push
push
aas
cmpsl
add
mov
aam
stc
xor
stos
xor
sbb
sbb
mov
outsl
mov
scas
ja
stos
test
mov
rclb
mov
pusha
out
dec
jl
sbb
adc
push
inc
and
sbb
test
jle
jb
cmp
leave
pop
dec
fimull
hlt
xchg
xchg
movsb
fildll
xorl
jp
pop
mov
repz
mov
aas
loopne
and
out
sub
stos
sbb
cmpsl
or
add
rol
inc
inc
mov
fcom
das
in
dec
push
dec
mov
dec
xchg
dec
test
xorl
mov
xchg
push
or
dec
sub
hlt
ret
pop
mov
jno
mov
pop
push
mov
icebp
jne
iret
cmp
in
sub
pop
cli
inc
jnp
jnp
dec
shlb
mov
push
cmp
xchg
int
ds
subl
push
push
roll
inc
aam
jmp
pop
sbb
mov
shrl
rol
or
ret
sbbb
fistps
daa
jge
mov
or
mov
or
xchg
cmpsl
sbb
sbb
cmpsb
mov
movsb
or
dec
add
mov
push
push
ljmp
push
fsubp
out
jmp
sbb
jecxz
sub
lret
int3
iret
out
xchg
out
dec
sbb
iret
push
in
xor
iret
xor
mov
sbb
out
fimull
inc
jecxz
sub
adc
mov
addr16
hlt
sub
inc
hlt
inc
push
cmp
test
out
ficompl
popa
and
clc
push
pop
sbb
or
mov
mov
push
lret
pusha
stc
movsb
lea
int3
cs
add
or
mov
popa
mov
mov
pop
loopne
mov
dec
or
xlat
or
mov
test
sbb
push
sbb
int
xlat
ret
mov
add
lret
xor
leave
cmp
aas
bound
je
repnz
lods
das
testl
xchg
mov
xchg
shrl
jmp
popa
cmc
iret
mov
test
jbe
daa
clc
in
decb
pop
hlt
xchg
in
loop
inc
adc
cmpsl
shlb
inc
in
and
jl
adc
neg
sbb
out
outsl
ljmp
or
lcall
adc
sbb
inc
jbe
add
ds
jle
lods
fwait
test
add
jns
inc
ja
jb
insb
icebp
lds
lret
or
inc
out
pop
ret
addl
dec
sbb
inc
std
xchg
sbb
dec
in
and
or
iret
cld
mov
adc
jecxz
cmc
mov
add
scas
push
pop
test
mov
mov
mov
rorb
push
repnz
out
dec
sti
jnp
in
jno
adc
sub
lods
jmp
cmp
fcmovnb
fimuls
shl
inc
fcmovu
aam
roll
pop
pop
lea
mov
push
cwtl
loop
and
adc
pop
mov
pop
xchg
xor
or
popl
cmp
and
outsb
xchg
adc
stc
imul
sti
push
cli
xchg
mov
push
cmp
popl
jne
es
frndint
mov
rol
leave
cmp
jge
cmp
in
into
enter
sbb
mov
inc
aad
ja
aad
xchg
repnz
ficomps
and
push
mov
push
fwait
cmp
sub
mov
dec
add
lods
xchg
sar
sub
inc
sub
sti
rclb
adc
push
add
sbb
int
fwait
popa
fsubrs
les
xchg
loope
xor
mov
mov
andb
adc
mov
test
mov
pop
pop
adc
jg
mov
inc
cwtl
push
cmp
repz
and
inc
mov
sti
stos
fstps
std
popf
stos
mov
jecxz
std
aam
push
adc
inc
xor
fwait
xchg
stc
jo
gs
jmp
jg
push
ss
adc
fdivrl
mov
push
les
sbb
and
cli
adc
pop
cmp
sbb
lock
fs
xchg
xor
jns
notl
inc
xchg
pushf
cmp
xor
sbb
loop
loop
adc
push
out
stos
aam
fwait
pop
aaa
dec
stos
jmp
lock
in
mov
stos
and
fwait
cs
jl
lods
sbb
sub
mov
cmp
outsb
movsb
xchg
sti
and
dec
shr
lods
xchg
test
push
cmp
stc
xor
arpl
mov
pop
je
add
lcall
push
inc
test
das
and
cmp
mov
daa
leave
enter
cltd
out
sbb
mov
sbb
js
insl
fadds
mov
pop
sub
lret
dec
insl
loop
jecxz
xchg
pop
fldcw
lock
shrb
cmp
jbe
inc
cmp
lcall
pop
das
xchg
cmp
inc
adc
xchg
lret
stos
inc
fdivrs
das
jle
js
leave
loopne
lcall
jmp
jno
sbb
shl
cmp
sbb
dec
sub
inc
inc
dec
int3
dec
pop
enter
aad
mov
adc
sub
std
fidivrs
loope
lret
insb
mul
es
push
push
push
sbb
mov
mov
pusha
fstps
pop
mov
mov
repz
cli
or
out
mov
push
test
arpl
into
and
nop
sub
pmaxub
jle
mov
ss
mov
mov
imul
xor
mov
in
jne
add
sub
add
clc
std
mov
mov
mov
add
stos
cli
lret
js
or
dec
adc
sbb
inc
outsl
push
add
push
push
xchg
cmpsl
cmpsb
notl
test
jge
pop
mov
leave
inc
push
and
jecxz
xchg
jge
adc
js
and
adc
scas
cmp
dec
nop
rorb
mov
adc
roll
sti
jo
jg
ja
mov
jbe
pusha
ret
push
adc
mov
pop
daa
pop
aam
xchg
lods
inc
add
mov
adc
sbb
out
mov
cld
mov
add
mov
push
out
dec
xor
imul
ds
orb
int
add
orb
mov
dec
add
jbe
movsl
leave
int
jns
loope
cmp
ffreep
xchg
mov
inc
add
faddl
int3
pop
inc
adc
aam
jo
inc
adc
inc
aaa
faddl
pop
es
std
ret
pop
dec
sub
fbld
cmp
jo
rcrb
jge
js
mov
addr16
cmp
enter
testl
das
add
inc
add
pop
cmp
cltd
inc
inc
sbb
sbb
scas
loope
test
push
bound
sarb
fcomp
mov
mov
mov
pushf
mov
adc
mov
xchg
push
pop
popf
pushf
lea
lock
xchg
push
sub
inc
jno
mov
fwait
jno
mov
push
ficoms
xchg
call
ja
repnz
jne
jp
pop
inc
pop
aam
stc
mov
dec
aad
xchg
in
add
icebp
push
push
stc
shlb
clc
mov
movsb
jo
lds
sub
sti
inc
leave
jno
mov
mov
xor
ret
jp
jnp
push
inc
adc
mov
std
stos
stos
add
mov
ds
push
dec
aam
sbb
push
pop
push
insb
js
sarl
dec
or
pushf
lods
ja
xor
mov
imul
push
xor
clc
mov
mov
rclb
sbb
mov
fisubl
xlat
hlt
sti
das
mov
cmp
jmp
sti
xor
aas
test
fs
cmp
rol
pop
mov
outsb
pop
test
test
fdivp
fnstsw
js
movsb
mov
mov
cwtl
int
lahf
jl
xchg
je
int
jns
test
stc
in
in
jge
mov
and
jmp
mov
hlt
mov
xchg
and
out
sbb
inc
popf
mov
rolb
test
or
xchg
inc
out
icebp
fwait
clc
movsl
insb
xlat
jg
push
xchg
push
lock
xlat
std
jp
sbb
movsl
vcvtsd2ss
sbb
push
sub
inc
aad
pop
add
mov
je
bound
mov
dec
out
sbb
jg
mov
shrl
sub
dec
push
rcl
mov
mov
push
jno
fbld
dec
mov
cld
test
loopne
fstps
jb
jo
aad
iret
cmp
int3
fs
cs
repz
sbb
add
xor
inc
mov
jb
test
mov
pop
push
pop
lds
xor
dec
enter
fwait
stos
ja
sbb
inc
push
inc
mov
cmp
into
xor
sbb
jge
scas
ret
cmc
ljmp
inc
add
aaa
push
push
imul
sbb
inc
inc
and
std
clc
out
and
arpl
fmuls
cmp
je
fidivs
jo
push
inc
stc
jg
jmp
imul
inc
je
add
xorl
bound
stos
or
test
adc
fidivrl
cmp
in
pop
push
mov
lahf
adc
and
dec
cli
sahf
dec
pop
addr16
repnz
stc
mov
xchg
rolb
sbb
adc
mov
sub
in
inc
or
inc
jle,pn
push
or
mov
sbb
dec
mov
inc
or
xor
pop
push
ficoms
cmpsl
or
sbb
mov
pushf
add
push
sbb
cmp
xor
inc
shlb
rorb
adc
xchg
fsubs
mov
mov
mov
inc
out
sub
js
popa
xchg
vpmaddwd
xchg
cld
mull
out
ficoms
xchg
dec
bound
adc
add
pop
add
fsubrs
or
fstpl
incl
mov
aad
mov
icebp
popa
leavew
jecxz
shll
adc
mov
jl
sbb
sub
jle
fistpl
cmp
repz
mov
mov
or
cmp
dec
inc
or
jo
sti
scas
negb
pushf
adc
scas
xchg
inc
adc
cmp
lret
mov
ljmp
xor
lret
push
jmp
ljmp
pop
jb
pop
lahf
lods
jno
clc
pop
sub
subb
shl
test
pminub
cmpsl
add
push
push
addl
jp
je
push
stos
out
cltd
imul
cwtl
sbb
pop
inc
lahf
inc
jle
das
cli
xchg
cmp
inc
mov
push
shrl
push
in
adc
push
sub
mov
xchg
push
and
gs
and
mov
into
xchg
pop
insl
icebp
xchg
dec
jnp
or
push
jb
xchg
pop
scas
inc
inc
ret
or
insl
sbb
lcall
mov
imul
cltd
and
dec
xlat
lds
dec
ds
pop
sub
pusha
inc
push
inc
ljmp
insb
enter
in
sahf
adc
jge
xchg
mov
mov
popa
popf
in
mov
and
out
rclb
adc
fistpl
lahf
rorl
fwait
or
bnd
dec
mov
ja
cmp
shrl
fsts
test
cmp
pop
pusha
into
and
mov
clc
sbb
or
pop
xor
add
xor
sti
mov
sarl
stos
mov
sub
pushl
int3
das
pop
mov
in
dec
sub
leave
ljmp
xchg
ss
or
lods
loopne
mov
add
xlat
inc
dec
icebp
lahf
sbb
testb
or
fimuls
xlat
mov
mov
movsl
or
mov
dec
xchg
inc
ds
cmp
sub
xchg
mov
dec
ficoml
daa
jmp
push
lret
testb
jnp
mov
gs
and
xchg
pop
pop
mov
push
inc
enter
or
pushl
stos
mov
lock
xchg
mov
mov
cwtl
aad
push
outsl
pop
jp
xchg
lods
aas
or
rol
das
subb
xor
mov
sahf
bound
lock
popf
sub
stc
push
push
cmp
arpl
popf
mov
and
push
subb
popa
jmp
push
not
pop
xor
loope
stos
sbb
ret
mov
adc
pop
sahf
jle
ja
pop
les
out
es
mov
lret
stos
dec
stos
ja
pop
sub
andl
pushf
in
lret
cmpl
and
mov
xchg
aam
mov
push
sahf
mov
mov
add
mov
pop
dec
mov
mov
push
push
lods
mov
cmpsb
jp
push
mov
and
adc
jmp
cmpsb
fninit
dec
test
test
adc
pop
scas
mov
dec
test
dec
movsl
into
cmp
out
dec
mov
jecxz
pop
pop
popa
xor
mov
adc
xchg
pop
pop
fld
nop
sub
mov
loopne
pop
int3
test
fwait
jbe
clc
jg
testb
test
xchg
addl
jl
dec
sub
pop
cwtl
test
xchg
pop
icebp
jb
sti
pop
sub
pushf
pusha
in
imul
and
hlt
jno
adc
aas
shlb
loop
repz
mov
dec
scas
repnz
lcall
in
inc
xor
xchg
mov
jbe
ljmp
cltd
or
sbb
dec
add
mov
mov
and
mov
mov
and
or
cmpsl
fcmovnu
shrl
jae
mov
mov
imul
insb
push
jmp
test
test
shrl
mov
out
lods
add
push
adc
cli
xor
mov
jo
mov
aam
lret
mov
adc
clc
jnp
pop
jmp
fs
add
add
popf
int3
loope
or
popf
ret
jae
daa
test
add
dec
in
mov
push
push
ret
cmpsb
fsubrl
bound
push
cmp
clc
ret
or
stos
cmp
gs
jnp
pop
mov
jnp
mov
sarb
fistpll
cmpsl
jp
fwait
dec
mov
xchg
push
emms
jb
rolb
stos
mov
jnp
cld
mov
testl
dec
out
jp
outsl
gs
aas
inc
rcr
pop
jb
pushf
daa
lret
sbb
mov
pop
mov
pop
test
lock
loopne
aas
sub
lods
push
scas
icebp
icebp
sbb
aam
inc
aam
insl
pop
mov
aad
xchg
push
and
lret
daa
jge
adc
adc
cmp
call
popa
push
icebp
hlt
rorb
fidivrs
inc
mov
rorl
popf
cmpsl
pop
fimull
lods
inc
out
je
in
popf
cmp
lds
call
daa
movsb
sbb
xadd
in
cmp
xchg
es
loopne
inc
das
and
jle
xchg
outsw
add
lahf
stos
and
subl
jns
int3
pop
test
das
dec
dec
add
xchg
popa
mov
xor
paddusb
es
loope
subb
jb
add
fisttpl
int
adc
bound
dec
pop
test
sarl
cmova
rcll
aam
mov
jne
cmp
hlt
adc
scas
dec
mov
sti
mov
clc
shlb
movsb
mov
pop
xchg
mov
sbb
mov
xlat
mov
sahf
and
pop
sahf
cs
fadd
mov
adc
mov
jle
insl
jecxz
cli
fistps
test
jmp
insl
daa
sbb
push
mov
push
add
int3
insb
sub
inc
xor
pop
daa
fdivrs
imul
in
sub
sbb
pop
xchg
insl
ret
fnstcw
iret
add
std
mov
out
loop
fwait
rorl
cmpsb
cmp
push
inc
cli
addr16
sub
sub
pop
mov
inc
pop
sti
xor
movsl
mov
movb
and
mov
sbb
or
jmp
orl
push
aad
shlb
and
jmp
movsl
movsl
cmp
into
inc
cli
push
dec
out
aad
outsl
sbb
jbe
xlat
jge
xchg
sbb
cwtl
add
cli
pop
and
sbb
fstl
dec
xor
in
loope
pop
jmp
xchg
jecxz
notl
push
outsb
fdivl
fmuls
push
int3
out
leave
dec
jmp
and
mov
dec
sbb
add
bound
repnz
sbb
orb
mov
lea
cmp
mov
mov
mov
push
iret
call
aas
push
movsb
cmp
push
push
sbb
aaa
inc
in
xchg
ds
lods
push
dec
dec
and
xchg
scas
add
add
sti
cmpsl
and
xor
inc
add
outsl
stos
out
int
mov
out
xorl
lods
sub
imulb
pop
andb
cmp
rcr
cmc
push
stc
lock
and
fnsave
in
mov
mov
xchg
je
cmp
fwait
push
jo
das
loopne
shrl
mov
sbb
inc
add
xor
mov
cltd
cld
jns
jne
lods
jo
xchg
test
aam
adc
std
and
sbb
int
sub
sbb
xchg
insb
lret
mov
xchg
aam
mov
push
mov
dec
andb
aas
jmp
pusha
sbb
fdivrs
dec
inc
std
mov
in
mov
xor
xchg
xorl
push
xchg
in
out
scas
and
in
cmpsb
or
arpl
push
push
roll
js
cvttps2pi
push
rorb
inc
int3
leave
mov
movsb
mov
pop
jb
loope
ret
mov
inc
pop
sbbl
leave
popf
mov
push
xchg
pop
sbb
cld
data16
repnz
clc
lock
push
test
sub
mov
mov
int
or
and
shlb
inc
inc
data16
insb
dec
in
hlt
repz
icebp
fcmove
gs
xor
inc
add
in
or
pop
add
push
or
mov
test
jmp
push
xor
loop
mov
jp
xchg
or
ljmp
test
es
daa
jne
xchg
push
mov
inc
add
mov
sbb
popa
cmp
mov
lods
repnz
push
push
xor
pop
out
sti
pop
fwait
xchg
cmp
fcmovu
ds
mov
sub
std
gs
adc
loopne
insb
test
pop
ss
pop
push
xchg
xchg
push
jge
cld
sbb
mov
cmpsl
jmp
ljmp
cwtl
cmp
sbb
out
mov
xchg
or
nop
aad
fidivrl
lcall
pop
cmpsl
jle
incl
addr16
xchg
in
jae
getsec
jbe
mov
cmpsb
dec
daa
pop
aaa
fmulp
ljmp
pusha
iret
inc
push
outsl
jb
daa
jge
inc
sub
roll
shlb
or
leave
in
or
jo
sbb
jl
loope
push
mov
arpl
xor
mov
movl
mov
aas
dec
push
rcl
jecxz
dec
mov
sub
outsl
mov
and
mov
or
cmp
push
pop
mulb
cmpsb
xor
ror
xor
pop
pop
jnp
adc
out
addb
les
inc
ret
push
test
mov
fsubl
xlat
cmp
add
push
aad
call
je
lcall
testb
mov
test
test
and
adc
xchg
int
jbe
cmc
hlt
and
inc
mov
lahf
lock
adc
jmp
sub
cs
movd
cmpsl
mov
add
mov
test
mov
stos
add
loopne
les
cmp
adc
cmp
cmpl
outsl
jmp
jns
jg
push
cmp
call
jmp
jle
das
mov
mov
js
cmpsl
ja
or
sub
inc
push
adc
leave
mov
mov
out
pop
xchg
mov
sbb
inc
inc
sbb
push
jmp
push
sub
mov
mov
mov
pop
lock
inc
xlat
mov
cltd
dec
bound
add
js
push
pop
push
and
or
cltd
iret
mov
mov
push
jp
dec
sbb
adc
mov
sbb
inc
jae
stc
fisttps
leave
cld
rcrb
and
sbb
fwait
lahf
cmpsl
pop
sahf
sub
movsl
jl
shlb
push
scas
repnz
add
stos
mov
mov
nop
int3
cld
jecxz
jno
push
clc
lret
lahf
and
push
lds
and
pop
push
and
dec
push
lret
es
add
movsl
cs
inc
dec
adc
xor
ror
jle
mov
in
call
ret
test
lret
int
mov
dec
push
pop
xor
scas
repz
add
bound
rcll
lahf
pop
jbe
jae
fldcw
sub
leave
mov
or
in
mov
pop
xor
cmp
insl
scas
mov
jp
mov
neg
or
mov
jg
jl
pop
add
push
cli
icebp
lock
js
push
fmuls
mov
out
das
iret
lea
mov
mov
push
pop
movsb
xchg
pop
testl
stc
test
xor
outsl
mov
inc
ss
jne
mov
push
xchg
int3
inc
das
fs
adc
out
scas
or
and
xchg
cmp
add
jns
xor
outsb
lods
cmp
mov
daa
sbb
dec
or
arpl
mov
imul
adc
repz
fisubs
push
mov
cltd
in
dec
das
icebp
sbb
stos
fwait
outsl
push
and
imull
dec
incb
inc
test
lcall
es
lea
je
dec
xchg
repnz
ret
les
add
dec
in
in
insb
stos
mov
mov
jge
shrl
stos
testb
pop
jns
or
lea
pop
dec
sbb
cld
scas
push
adc
pushf
gs
and
sub
ret
fadds
inc
cmp
add
jo
pop
inc
dec
inc
ja
les
cmpb
mov
mov
xchg
rolb
and
pusha
dec
int
or
fnstenv
adc
push
inc
inc
or
cmp
push
test
xchg
push
daa
sub
mov
jmp
rorl
popf
push
pop
inc
data16
pop
lahf
mov
daa
cmp
xchg
pop
xchg
stc
movsb
rcr
scas
or
ss
dec
mov
lock
sbb
lahf
outsl
pop
test
enter
mov
cmpsb
inc
sbbl
rclb
sub
push
ja
jl
cmpb
mov
inc
dec
mov
aas
mov
add
outsl
lret
xchg
lcall
das
fwait
mov
dec
pop
and
std
ret
and
or
out
out
mov
mov
push
sub
lds
negb
and
jecxz
call
and
jbe
loopne
stc
add
test
outsb
stos
xchg
jbe
push
cmp
fstpt
push
xchg
rcrb
mov
lret
cmp
je
repz
lds
fcomip
ljmp
cwtl
loope
dec
add
loop
cbtw
bound
mov
jns
imul
jecxz
xchg
pop
push
xchg
pop
ret
clc
sub
imul
sub
roll
xor
mov
negl
cmc
inc
jg
rcll
mov
mov
dec
roll
or
adc
sbb
pop
sub
inc
pop
sarl
inc
iret
cmpsb
rclb
stos
cmp
mov
lods
repnz
insl
push
cmp
xchg
sub
mov
clc
lods
fisubrs
out
cmc
push
and
out
outsb
or
xchg
dec
cmp
lods
cwtl
sbb
adc
aad
pop
xor
shll
pop
clc
int3
sahf
mov
test
xlat
out
mov
daa
lock
cmp
in
xor
dec
in
out
sub
mov
cwtl
int3
out
clc
mov
imul
cmpsl
pushf
mov
fistl
adc
imul
gs
addr16
ja
jl
test
mov
push
cmpb
inc
push
sarl
pop
dec
xchg
sub
xor
lea
mov
pop
lret
js
jmp
out
push
popf
cli
mov
out
lock
xchg
adc
pusha
adc
mov
fs
sti
xchg
dec
sub
dec
dec
jb
and
pusha
pop
stos
out
fnstsw
adc
push
push
mov
pop
test
cmp
hlt
pop
mov
jp
movsl
fldcw
mov
dec
daa
xchg
inc
cmp
aas
xor
xor
dec
fisubrl
adc
xchg
xchg
cmp
movb
test
jg
jl
scas
mov
and
or
and
or
sbb
ja
dec
sub
inc
push
out
xchg
sub
cmp
jmp
inc
les
scas
lahf
mov
rorb
clc
nop
mov
adc
fidivrl
adc
mov
icebp
mov
lock
cs
ret
fsubrl
dec
cmp
cli
inc
lods
xchg
jp
rcll
aad
and
rorl
inc
pop
lods
add
pop
cmp
fiadds
std
loope
iret
test
adc
test
sub
dec
or
xchg
cmp
mov
push
cmp
jo
stos
xchg
cmpsb
je
cmpsb
pop
fstps
pop
sbb
xchg
mov
dec
lock
nop
and
sbb
mov
es
sub
dec
repnz
subl
iret
sbb
mov
ljmp
cmp
ds
mov
dec
sti
cmp
sub
ja
into
or
lret
push
and
add
fisttpll
dec
das
js
or
sahf
test
inc
dec
inc
cmp
pop
xor
in
add
mov
inc
ret
insb
into
cmp
mov
dec
push
xchg
fwait
or
mov
stos
and
add
xchg
push
mov
and
fdivs
imul
dec
push
mov
sbb
mov
outsb
ljmp
loopne
test
sarb
into
lahf
cmp
int3
inc
inc
loop
lret
sub
icebp
xchg
sbb
mov
cmp
dec
mov
or
pop
cmc
subl
push
push
ficompl
xor
cmp
icebp
push
fidivrs
inc
leave
adc
mov
aaa
add
cmc
jmp
sbb
sbb
lahf
jb
cmpsl
sbb
sub
mov
lods
test
movsb
push
nop
add
inc
mov
xchg
sbb
andb
or
push
mov
fst
addb
push
insb
push
lea
add
mov
ds
pusha
sbb
jl
fadds
sbb
inc
push
fidivrs
jno
sub
mov
inc
pop
lods
in
test
lahf
outsb
mov
dec
out
push
cmp
or
adc
pop
ja
subl
int
mov
sbb
adc
mov
notb
mov
adc
pusha
dec
repnz
and
sub
jl
mov
jp
sub
inc
rcrb
repnz
or
push
sarl
jb
outsl
lret
ds
mov
push
hlt
cmp
scas
or
jmp
stos
mov
cs
lret
xor
fcompl
fs
popa
mov
pushf
xchg
scas
popa
into
mov
test
sub
inc
sbb
or
and
ja
xor
sbb
xchg
mov
int3
inc
add
aad
cli
adc
ror
xlat
xlat
arpl
out
sbb
push
rclb
push
jp
mov
inc
push
pop
sarl
cmp
jne
cmp
lahf
mov
aaa
clc
js
pop
sbb
cwtl
and
adc
and
ja
test
aas
popa
xchg
mov
pop
jp
popf
jmp
movsb
cltd
ljmp
cmp
jo
cld
mov
into
add
fs
push
add
popa
adc
and
inc
adc
test
sub
push
sub
or
arpl
adc
push
mov
sub
dec
inc
insl
insb
jb
pop
in
loope
xchg
inc
dec
cmc
and
mull
push
popa
std
adc
neg
daa
sub
dec
and
mov
pop
dec
or
xchg
adc
jmp
jle
ret
paddb
aas
dec
aaa
push
je
or
and
pop
push
jae
test
pop
imul
ss
and
mov
lcall
mov
into
sbb
sbbl
loope
or
sbb
into
cltd
jmp
adc
xchg
aaa
aaa
call
add
lock
sub
push
es
lret
andb
out
inc
push
sbb
mov
stos
stos
mov
cmp
pop
into
negl
jg
idivb
xchg
cmpsb
adc
xchg
clc
outsb
loop
jg
push
repz
mov
js
xor
cmc
xor
lods
mov
rcrl
xor
mov
inc
sub
sub
movsl
mov
push
fcmovnbe
enter
jb
mov
or
or
jae
xchg
cmp
stos
cmp
xchg
mov
xor
ss
js
push
stos
jp
mov
test
or
sbb
jnp
inc
pop
ds
ror
ljmp
jo
adc
xor
ljmp
push
or
lds
jmp
pop
outsl
mov
add
and
sbb
jecxz
adc
fisubs
jmp
aas
shll
jl
lret
mov
sub
aam
push
shrl
pop
mov
shrl
movsb
mov
sbbl
jg
sti
movsl
and
xchg
test
inc
pop
lods
ficoml
add
and
inc
xor
stos
mov
ret
xor
rcrl
fnstenv
das
jo
ret
test
push
cs
and
adc
lock
fstpl
out
mov
fistpll
dec
mov
sub
aad
in
mov
dec
lcall
jnp
push
add
jmp
inc
lea
daa
clc
dec
scas
and
sbb
loop
lods
adc
push
sbb
cmp
out
std
inc
outsl
adc
cs
mov
jp
sbb
sti
pushf
pop
or
and
push
mov
test
hlt
in
mov
xor
cltd
adc
mov
int3
xchg
ret
iret
jo
fs
insb
add
aaa
movsl
sahf
mov
inc
jge
dec
cmp
jp
scas
int3
sub
and
or
and
inc
push
xchg
fildll
out
and
aaa
cmp
hlt
xchg
cmp
pop
xor
xchg
xor
mov
cmp
push
mov
jno
outsl
jmp
push
data16
pop
idivb
out
mov
lods
mov
sbb
and
jmp
out
mov
loope
mov
mov
outsb
cmp
inc
inc
jp
xor
mov
sbb
pop
add
cmp
dec
or
loope
stc
cmp
mov
cmpsb
test
outsb
cs
adc
aas
mov
mov
inc
inc
int
repz
xchg
xchg
clc
push
add
ss
test
cmp
idiv
fdivrl
iret
xchg
aaa
or
mov
pop
adc
stos
fld
pop
xor
cmp
jns
push
mov
enter
mov
out
lea
add
lds
sbb
hlt
inc
sub
xchg
add
pop
lret
call
testb
bound
mov
push
arpl
jbe
inc
xchg
imul
sub
sti
xor
enter
cld
or
pop
dec
or
xor
xor
lods
cmc
xchg
std
movsl
jns
pusha
jb
jnp
xor
out
popa
imul
lret
stc
push
iret
fs
xchg
xor
rcrb
xchg
mov
pop
stos
movsl
daa
dec
pusha
mov
sbb
lcall
and
add
and
mov
xchg
add
in
sbb
dec
push
xor
cmc
mov
es
push
mov
mov
sbb
sbb
or
and
aaa
mov
mov
test
leave
stos
movsb
mov
movsb
ss
mov
aam
ds
sub
shll
addr16
out
scas
stos
dec
jmp
lcall
mov
mov
es
jb
test
test
sub
out
jb
cmpsb
adc
into
jge
mov
and
pop
popa
xchg
loop
xor
into
and
in
cltd
mov
stos
mov
mov
xchg
mov
push
test
xchg
sahf
outsl
and
mulb
gs
into
loopne
cmp
sbb
cmp
jge
bound
lods
pop
dec
pop
movsl
push
sub
fsubl
or
fldt
popa
jp
out
xor
popa
mov
outsl
jecxz
or
add
loopne
sub
inc
and
sahf
enter
jnp
mov
push
mov
adcb
in
popf
lret
xlat
cmp
shlb
popl
and
jbe
push
into
and
cli
push
sub
data16
lcall
repnz
sahf
fwait
test
ficomps
pop
ret
pop
mov
add
push
mov
std
imul
mov
jnp
cli
sub
xchg
sub
add
shll
into
das
mov
adc
cmpsl
js
cmp
rolb
and
ja
jl
mov
ss
hlt
pop
shll
cmp
xlat
sahf
rol
mov
in
xchg
pop
mov
xor
pop
js
cmp
pusha
stos
in
cs
cmp
imulb
jae
lock
cmp
mov
lods
fstpl
cmp
adc
and
stos
sbb
ffreep
xchg
sub
loope
pop
jne
adc
ret
lret
jmp
dec
sub
inc
test
inc
cmp
out
sbb
ss
mov
je
jne
roll
inc
mov
jle
dec
add
js
mov
data16
inc
or
subb
push
push
push
subb
add
pop
lea
fdivl
testb
adc
loop
dec
push
lret
adc
bound
leave
lret
add
mov
push
clc
cltd
pop
pop
ss
aaa
lahf
pop
mov
push
aas
cwtl
movsl
cs
insl
movsb
aad
push
cli
jno
pminub
ds
and
push
jge
scas
addl
mov
and
or
sub
jecxz
jb
or
ja
stos
push
cmp
mov
fwait
inc
fstpt
cs
into
movsl
lds
adc
inc
sub
int
xchg
test
lods
pop
cmp
pop
add
sbb
or
mov
cmp
cmpsl
rcr
mov
adc
mov
clc
adc
add
fucomp
jg
push
xor
jno
cmp
lret
hlt
jnp
xor
mov
addb
jo
in
stc
dec
dec
aad
dec
or
mov
jp
adc
pop
push
repz
test
xchg
jno
gs
cmpsb
in
mov
int
scas
sbb
es
push
outsl
mov
arpl
mov
hlt
adcb
jae
jl
clc
jnp
mov
push
and
outsb
and
inc
mov
das
cld
pop
or
jns
pop
add
dec
movsb
jmp
pop
jmp
loop
ret
rol
sahf
add
xor
inc
xchg
les
pusha
sbb
ss
pop
mov
mov
xor
je
lahf
pop
sti
dec
adc
lds
push
adc
sub
jp
dec
jl,pn
mov
ficoms
leave
sub
add
je
cs
jl
xor
adc
sub
fwait
je
sub
shr
pop
xchg
xchg
add
ss
sbb
int
sbb
pop
mov
popa
push
and
out
mov
test
sahf
pop
imul
stos
lods
bound
fimuls
leave
xor
dec
insb
enter
mov
pop
lock
pop
rcll
lods
cltd
push
dec
pop
cmpl
mov
sar
ds
mov
mov
sub
or
mov
jmp
add
mov
or
dec
sbb
stc
lods
mov
adc
fs
outsb
call
lock
cmp
adc
and
shr
out
jecxz
adc
scas
aaa
push
leave
and
inc
cmc
or
push
pop
xor
mov
pop
jnp
imul
ret
xchg
das
sbb
pop
pop
sbb
pop
cmc
negl
jno
loope
xchg
outsb
push
sbb
jno
test
test
inc
out
pop
pop
movsl
aad
xlat
lret
cmp
aas
or
dec
add
jecxz
ja
test
add
std
bound
sahf
or
pop
cli
aam
add
enter
mov
jecxz
adc
mov
jle
or
or
call
arpl
adc
xchg
cld
or
and
mov
mov
in
aam
and
stos
loop
cmp
insl
mov
out
roll
jmp
outsl
and
movsl
ss
sub
inc
imull
outsb
cmc
orl
andl
dec
fisttpll
sarl
enter
mov
or
adc
inc
xchg
pop
jg
dec
lods
shl
sub
sub
jo
inc
adc
dec
neg
inc
aam
fistpl
add
ljmp
or
jnp
ja
insb
and
fldt
popf
and
ljmp
xor
push
xchg
mov
rol
iret
movl
dec
xchg
cld
mov
ja
dec
repnz
outsb
hlt
test
lret
leave
stos
faddl
and
lods
mov
ret
out
or
xor
dec
movsb
out
inc
sub
xor
lods
lahf
sti
fwait
add
outsb
ficompl
dec
jmp
loopne
popf
movsl
xlat
jge
lds
lock
outsl
cmp
xor
bound
push
outsb
adc
test
mov
pop
add
adc
jmp
xchg
xchg
mov
int
lret
int
adc
enter
sahf
hlt
push
mov
mov
mov
aam
les
pop
fldenv
orb
insl
jns
out
cmp
xchg
dec
test
push
bswap
out
mov
xchg
cwtl
fstpl
shr
adc
nop
popf
cmp
gs
push
mov
notl
mull
out
or
lods
lret
adc
xchg
mov
adc
arpl
nop
xor
subb
out
lret
dec
cmp
xlat
and
mov
in
dec
xchg
pop
or
cmpb
and
cmp
aaa
pop
or
movsl
aas
fidivs
add
dec
sub
push
in
test
dec
dec
cld
mov
les
adc
repnz
mov
cmc
add
fs
aaa
dec
add
jle
scas
fdivrs
jmp
inc
test
sbb
sbbb
lods
dec
int
mov
pop
mov
in
jmp
sub
xor
pop
out
fdivl
cmp
aam
pop
adc
add
push
in
xchg
shrb
jmp
pop
fdivrl
in
adcb
repz
mov
out
mov
loopne
lahf
fbstp
gs
incl
adc
xchg
fs
xor
int
sbb
mov
or
gs
add
or
mov
dec
add
call
dec
lret
pop
jae
inc
mov
arpl
or
outsl
pusha
sbb
pop
adc
das
jae
out
rolb
aam
ljmp
roll
cltd
jbe
outsl
stc
xchg
scas
mov
lcall
addb
xor
stc
enter
push
pop
sub
lret
je
fstpl
cli
sub
dec
decb
test
pop
loopne
push
jle
sbb
lods
xchg
ds
iret
lret
dec
xor
mov
mov
call
insl
xor
fidivrs
movsb
fsubs
and
dec
cwtl
xchg
pop
inc
das
xchg
mov
xchg
jns
stos
insb
inc
push
adc
mov
imul
mov
adc
cli
inc
aas
out
lahf
sbb
mov
or
jbe
rcrb
cltd
dec
or
mov
xor
fisttpll
hlt
dec
jmp
xor
sahf
xorb
dec
push
push
jle
es
adc
ljmp
scas
mov
xchg
jmp
fcoml
mov
cmpb
sub
aaa
hlt
aaa
push
in
xchg
xchg
icebp
div
cld
pop
or
movsb
cwtl
pushl
loope
push
jmp
std
pop
push
adc
es
rol
out
das
mov
xor
decl
mov
fsubrp
stos
mov
cmp
in
cwtl
sbb
out
xchg
mov
mov
fs
cmc
addr16
out
and
adcl
out
daa
cmp
jl
xchg
fistl
jl
push
gs
mov
nop
shr
pop
movsb
inc
xchg
into
aad
add
jg
cmp
inc
out
sbb
sub
cmp
sub
lods
in
mov
inc
mov
cmp
cmp
add
and
lea
cmp
inc
outsl
test
cmp
jae
inc
insl
mov
push
mov
pop
xorl
mov
ret
fdivs
stc
pushf
aam
push
add
hlt
add
adcb
xor
cmp
leave
xor
mov
xor
jecxz
fildl
pop
push
xor
mov
mov
xor
xor
cmpsb
leave
jnp
ja
int
pop
xor
pop
arpl
dec
movsl
sub
xchg
loop
in
mov
sbb
pusha
add
fwait
fwait
cld
mov
fiaddl
lahf
leave
lock
fcoms
mov
int
iret
mov
add
push
pop
sub
xchg
sti
inc
add
pop
shlb
jg
std
insb
push
cmp
les
ffreep
jl
xor
cltd
enter
xchg
adc
inc
cmp
mov
scas
aaa
mov
pop
ret
xchg
mov
mul
outsl
cmpsl
lds
and
in
pop
cmp
push
ds
ret
cltd
inc
push
jge
jnp
cld
push
dec
xor
or
mov
dec
xchg
test
inc
xchg
outsb
jnp
and
leave
jne
ljmp
mov
xchg
sarb
mov
cmp
adc
into
push
jle
in
xor
lds
rcll
pop
inc
xor
dec
lcall
cmpsb
outsb
mov
pop
and
xchg
mov
adc
mov
pop
sub
adc
js
scas
cli
test
xchg
scas
add
roll
or
loop
fmuls
mov
mov
in
push
inc
clc
or
sbbl
mov
pop
mull
pop
adc
shrb
movsl
pop
lods
repz
out
jns
jae
xchg
mov
ljmp
xor
mov
xor
lea
enter
add
sub
inc
cli
push
xchg
cmp
inc
insb
jb
jmp
sbb
cmc
ret
xchg
rcll
add
adc
call
rorl
fwait
cltd
jnp
ljmp
lock
mov
das
adc
lret
sub
jmp
nop
fpatan
mov
or
push
fldenv
in
jo
xchg
in
xchg
inc
cltd
dec
int
fwait
pop
lds
adc
and
mov
jle
push
mov
ret
mov
inc
scas
std
sbb
adc
pop
inc
jb
adc
fdiv
cmpsl
or
mov
adc
xchg
stos
test
nop
mov
ret
icebp
adc
test
sti
sub
jae
or
dec
icebp
pop
insb
sub
mov
adc
movsb
mov
push
test
call
inc
xlat
lcall
cmpsl
or
push
or
insl
mov
std
insb
pop
cs
mov
xchg
testl
mov
sub
pushw
add
add
xchg
mov
push
decb
xchg
add
mov
data16
adc
sti
jl
cmc
out
dec
int
dec
xchg
dec
or
lahf
xchg
xchg
test
sbb
loopne
adc
dec
arpl
rol
add
icebp
daa
xchg
pop
lods
aam
mov
call
push
lods
icebp
dec
pop
xor
or
inc
mov
in
test
adc
push
cmp
jmp
fisttps
vsqrtpd
out
and
sti
push
fmuls
int
in
leave
cmp
xchg
rcl
das
sub
sub
xor
mov
cmp
test
lds
mov
outsb
and
sub
mul
mov
hlt
data16
into
cmp
push
sub
push
repz
jmp
add
out
lret
add
push
xor
cmp
push
mov
in
cmpsb
inc
add
icebp
cli
xor
bnd
jo
xchg
jge
push
cmpsb
push
rclb
dec
pop
outsb
hlt
popf
dec
in
aas
xor
adc
int3
int
or
adc
pushf
adc
add
shlb
jp
sarb
lcall
add
mov
inc
aam
imul
mov
mov
loopne
ss
notb
dec
clc
xor
lcall
jo
insl
jle
out
add
aad
lcall
popa
cwtl
xchg
test
fildll
dec
dec
rorb
mov
jp
jle
ljmp
test
int
pop
lock
loope
mov
outsb
push
adc
ss
cmpb
or
jg
xchg
jbe
scas
arpl
push
popa
mov
fwait
push
sbb
imul
movlhps
fs
xor
or
and
mov
movsl
stc
movsl
mov
or
fmuls
push
dec
aas
push
fdivs
iret
sbb
std
pusha
iret
sti
and
out
mov
mov
adcb
stc
rclb
xchg
cmp
mov
fcmovb
orl
fdecstp
mov
inc
mov
xor
jmp
iret
jns
mov
in
sbb
mov
or
adc
xor
pop
xchg
outsb
inc
addl
movsl
iret
cmpsl
adc
mov
sub
hlt
lret
and
out
movl
test
and
enter
pop
sbb
mov
xchg
jo
cli
fsubrp
bound
in
mov
icebp
aad
test
outsb
push
sahf
jnp
ret
jmp
dec
jbe
xchg
ret
scas
fwait
push
push
jne
mov
hlt
je,pt
mov
jno
repz
hlt
lds
insl
loop
inc
mov
xchg
pop
pop
cli
xchg
pop
inc
ud1
ljmp
hlt
dec
xlat
xchg
insb
add
mov
mov
test
mov
std
pop
sti
mov
das
dec
scas
and
sbb
mov
outsl
mov
dec
add
stos
xchg
mov
cmpsb
insl
stc
mov
scas
dec
insl
push
fldl
push
mull
jmp
imul
lret
xchg
test
jnp
xchg
pop
xor
ret
jne
jg
pop
aam
fistl
call
cli
daa
fnstcw
lret
push
cli
mov
dec
xor
mov
cs
cmp
sbb
ljmp
xor
add
inc
int
mov
cmp
out
and
loopne
cmpsb
in
fwait
xor
xchg
sbb
popf
inc
cld
sbb
pusha
mov
xor
lret
pop
push
jns
push
pop
mov
sbb
inc
int
aaa
mov
push
rolb
add
push
and
xor
inc
sbb
sub
add
aas
std
dec
andl
out
push
xor
xchg
int3
xor
mov
sub
jno
sbb
cmp
dec
ljmp
sub
jb
mov
xrelease
test
sbbb
dec
out
dec
push
cli
dec
sahf
xlat
movsl
ja
push
inc
mov
mov
mov
lret
and
mov
leave
mulb
adc
mov
lret
sbb
aam
or
fisttps
push
lds
sbb
rcrl
jg
jo
adc
jo
push
xchg
loopne
jo
jns
add
dec
enter
mov
mov
fsubrs
out
and
sbb
fsubrl
fwait
push
test
sbb
loope
dec
sbb
mov
dec
hlt
adc
in
mulb
iret
pop
and
pushf
or
push
rolb
repnz
push
out
iret
rolb
lea
fdivrl
dec
mov
mov
pop
sub
icebp
sbb
mov
and
lcall
dec
and
xor
xlat
pop
push
mov
mov
gs
jnp
jle
aaa
sbb
nop
xor
cmp
iret
aam
mov
hlt
gs
ss
cmpsb
cmp
sahf
mov
add
mov
and
cltd
icebp
movsl
sahf
mov
mov
dec
jnp
xchg
insl
sbb
in
enter
cmp
mov
mov
add
push
imul
mov
push
mov
pop
jbe
rcrl
mov
cmp
pusha
xor
outsb
xor
orb
mov
sbb
cmc
inc
adc
js
push
sub
inc
fcmovb
inc
out
dec
mulb
int3
arpl
gs
lods
xlat
jmp
sbb
pop
adc
pop
lret
mov
xchg
or
push
mov
addl
push
scas
je
leave
sub
popf
in
les
ss
mov
sbb
orl
inc
ret
je
xchg
test
addr16
cld
sub
cmp
test
pop
mov
mov
out
ret
fidivl
mov
out
stos
sbb
jge
sbb
and
in
sarl
addl
std
les
pushf
mov
sbb
cmp
test
mov
and
pop
jno
daa
jmp
mov
and
in
repz
sbb
sti
add
jp
outsb
ja
and
push
out
jne
cwtl
push
mov
add
pop
insl
dec
sbbb
and
add
or
fs
xchg
sbb
sbb
loope
test
jmp
adc
loop
and
enter
stos
orl
push
aad
jecxz
sbb
xorl
sub
call
les
push
es
and
shrb
xchg
fcmovne
push
xchg
je
add
out
sub
fwait
sti
jge
fadds
xchg
push
inc
cmp
lock
xor
sar
aad
xor
loope
add
int
scas
aaa
push
xchg
mov
mov
jbe
mov
add
shlb
outsl
mov
stos
fcmove
mov
out
mov
xchg
mov
popf
jmp
out
shlb
jecxz
sahf
sub
mov
cmc
stos
insb
in
nop
aam
imul
stos
or
mov
scas
ja
cmp
add
lds
jmp
push
fidivl
push
out
imul
push
cwtl
mov
ljmp
ret
or
push
in
test
jae
fidivrs
es
jmp
jo
sbbb
sahf
fidivs
mov
daa
cld
dec
cmp
dec
jmp
lret
and
loope
pop
pop
mov
adc
push
adc
data16
testl
cmp
cwtl
push
mov
sbb
mov
sahf
int
pusha
xor
adc
pop
clc
adcb
sahf
call
mov
push
stc
mov
dec
in
inc
inc
adc
pop
idivb
mov
int3
add
or
xchg
mov
ds
test
lret
push
idivl
mov
aas
xor
and
data16
test
pop
popa
dec
and
sub
test
push
adc
pop
xlat
imul
jno
movsl
sub
lods
and
jecxz
pop
xchg
mov
jmp
add
inc
stos
or
mov
repz
pusha
inc
mov
cltd
jp
xchg
push
dec
mov
xchg
push
mov
sbb
les
and
jns
cld
xor
mov
mull
mov
mov
loope
cmp
pop
and
jl
stc
sbb
out
stos
add
sub
mov
pop
add
cmp
in
mov
call
shlb
add
adc
nop
cli
sub
outsb
in
cmp
sbb
pop
sub
xor
mov
incb
cmp
push
jb
push
cmp
or
cmp
add
sti
jmp
jno
ffreep
fwait
imul
dec
es
int3
out
pop
and
aaa
pop
imul
ds
mov
daa
jnp
and
cs
aas
jo
loope
addr16
cmpsl
sti
movsb
inc
loopne
mov
or
xor
push
cmp
sub
mov
jge
jns
sub
jge
cmp
loopne
and
and
add
cmp
jp
imul
mov
mov
icebp
jp
ret
mov
or
in
jle
stc
mov
or
adc
mov
arpl
xchg
lret
push
pop
in
add
mov
das
push
pop
mov
mov
sbb
out
mov
out
mov
sbb
imul
jo
cmc
adc
dec
aas
inc
sub
cmp
mov
push
movsb
adc
jb
sti
xchg
lret
dec
add
push
stc
xchg
jle
out
inc
ret
lds
pushf
push
dec
aam
pop
jecxz
movsl
aad
shlb
and
daa
ljmp
dec
push
aad
pop
clc
je
addr16
test
fildll
addr16
rclb
inc
rolb
lods
dec
adc
inc
xchg
push
fcmovbe
aas
inc
or
jge
mov
lret
stos
hlt
and
jmp
in
iret
xchg
mov
mov
ret
mov
xchg
mov
sbb
add
lret
outsb
or
cmpxchg
fldl
adc
add
mov
andl
outsl
add
scas
lcall
fsubs
sub
cwtl
sub
cmpb
mov
stc
aam
or
lret
popa
pop
xchg
inc
inc
xchg
je
mov
and
pcmpgtb
jb
addl
xor
stc
mov
xor
or
or
outsb
xor
xchg
pop
dec
or
or
adc
repz
gs
daa
jae
rcl
inc
outsl
mov
xor
lods
inc
ja
cmp
sub
lea
je
fcoml
ja
rcr
ja
push
ret
mov
adc
pop
sbb
inc
adc
jmp
inc
pop
lods
iret
jbe
fisubrs
dec
lods
loope
fisttpll
scas
pop
iret
fidivrl
repnz
sbb
cwtl
sti
jmp
or
or
lock
mov
adc
lret
mov
lret
xor
pop
cmp
xchg
inc
or
mov
call
lods
mov
jmp
dec
iret
icebp
cmpsl
xchg
push
loope
daa
xor
mov
mov
insl
sub
inc
das
dec
ss
popa
sbb
iret
jle
fildl
pop
xor
fldln2
inc
ds
or
xor
scas
add
imull
iret
pop
repnz
fdiv
lret
push
push
jge
pop
cmp
jne
jp
paddb
lret
xchg
push
xchg
cmp
xor
adc
inc
shlb
jge
outsl
adc
pop
or
jle
add
push
enter
push
or
pop
scas
iret
dec
loopne
dec
pop
xchg
dec
je
int3
in
dec
popf
stos
jbe
aad
xor
les
lahf
popa
sahf
cld
gs
loopne
movsl
negl
fidivrs
dec
test
pop
xchg
adc
mov
xchg
clc
leave
mov
or
je
cmc
pushf
pop
pop
mov
aad
in
mov
cli
pop
push
movsb
addr16
pop
leave
mov
adc
push
cltd
add
out
lahf
inc
xor
int
ja
or
ds
cmp
dec
pop
mov
pop
insl
addl
push
shl
cmpl
or
adc
jecxz
pushf
add
ljmp
lret
lods
xor
std
xor
int
mov
xchg
test
mov
inc
and
jne
push
call
push
into
mov
les
add
jge
xor
push
pop
or
ja
pop
mov
mov
mov
popa
daa
cmp
sbb
and
loop
inc
inc
dec
das
jg
ret
sbb
jmp
add
popf
mov
dec
inc
sbb
sub
jecxz
stos
fcmovnu
xchg
mov
daa
mov
lret
fprem1
pop
lret
mov
in
les
shll
out
repz
fmul
aaa
js
cltd
int
and
jge
loop,pt
fs
outsl
jb
in
dec
xor
shl
jnp
xor
ja
mov
lahf
sbb
cmc
or
add
das
ss
outsl
pushf
cmp
mov
mov
fidivs
xchg
mov
and
rorb
mov
fiaddl
enter
sbb
lcall
and
test
cmovo
cwtl
mov
lds
dec
shr
xchg
mov
push
in
ds
sbb
int3
mov
aas
xchg
mov
jno
outsl
sti
int
pushf
mov
idivl
stos
jmp
jns
xchg
addl
sub
bound
adc
inc
or
dec
ret
jae
std
sbbb
sbb
jecxz
pop
movsl
jns
lahf
mov
xchg
cmpsb
pusha
icebp
es
fildll
xchg
jnp
pushf
pop
int3
cmp
xchg
xor
push
aas
test
inc
lcall
mov
add
add
mov
clc
xor
inc
filds
push
repnz
icebp
add
fs
test
dec
xchg
dec
imul
data16
inc
int3
lret
ret
mov
add
repz
and
shr
inc
inc
xchg
div
and
data16
repz
stc
xor
setnp
sbb
or
mov
mov
cli
inc
cmp
movsl
and
xor
test
mov
orb
push
outsb
xor
stos
lds
pusha
mov
std
mov
inc
jp
outsb
andl
in
jg
cld
sub
xchg
dec
movsl
in
shlb
ds
aam
int3
jbe
cmpsl
daa
xchg
in
rcrl
call
push
test
push
data16
add
dec
jge
mov
and
out
repnz
fstl
mov
cmp
and
hlt
jns
mov
mov
nop
imul
jnp
sub
push
in
push
jle
or
add
int
in
daa
mov
sub
xchg
mov
test
lcall
leave
adc
push
mov
hlt
mov
int3
mov
sub
mov
lret
andl
xorb
test
dec
inc
shrl
lcall
stc
add
loope
aaa
enter
add
dec
jg
dec
mov
fistpll
mov
and
mov
push
add
pop
dec
lds
addb
pusha
call
push
and
andb
jle
in
and
pop
scas
cmp
aas
sbb
cmpsl
les
pop
push
insl
add
in
push
fs
test
in
mov
push
mov
les
mov
push
mov
insb
sbb
sbb
cmp
sbb
lahf
test
das
dec
sub
xor
inc
in
pop
dec
jp
jecxz
shl
xchg
into
inc
out
mov
push
mov
push
or
add
xchg
fldt
shll
scas
negl
cli
and
pop
mov
and
cmp
loop
addr16
jnp
cmp
iret
mov
fcomps
xor
dec
loope
and
rorl
ss
pop
mov
adc
mov
stc
es
repnz
int
or
in
out
cld
mov
adc
cmp
or
sbb
jnp
pushf
lahf
imul
aam
cld
adc
fmull
sar
daa
inc
cwtl
adcl
pushf
sbb
cmp
mov
jb
in
mov
out
inc
jb
push
dec
ret
lret
or
xchg
aad
dec
mov
and
mov
ret
ljmp
das
push
jmp
mov
divb
idivb
mov
ljmp
shl
std
xchg
pop
ja
movsl
out
mov
mov
jmp
jge
mov
mov
popa
inc
xor
xor
cmp
lret
movsl
fs
xor
cmpsl
sbb
sub
out
sub
pusha
ljmp
cmpl
mov
int3
adc
das
in
movups
arpl
test
xchg
sbb
in
out
sti
test
dec
add
faddl
cmpsl
repz
scas
or
mov
mov
push
ja
xor
jno
inc
std
inc
push
lock
and
sbb
mov
lret
clc
jo
cmp
xchg
mov
jp
sbb
pop
out
mov
dec
shlb
in
mov
dec
adc
scas
dec
pop
pop
push
or
stos
sub
push
or
mov
mov
mov
add
sub
out
or
es
test
cmp
push
rcrb
xor
mov
mov
js
or
mov
mov
fldt
mov
stc
xchg
cli
scas
jne
fs
aaa
fsubrs
sub
xor
mov
repnz
cmp
xchg
dec
inc
mov
in
mov
push
push
xchg
sbb
es
sub
ja
or
cmpsl
mov
pop
aaa
pop
ss
mov
inc
pop
dec
ret
cmp
inc
leave
jp
jns
icebp
mov
add
popf
test
xchg
cmpsb
insb
or
ja
and
lods
cmp
jl
mov
cs
leave
je
es
dec
stos
add
sbb
or
dec
and
loop
shlb
daa
mov
mov
mov
cs
decl
push
pop
ret
ljmp
or
shll
leave
inc
daa
scas
sbb
push
cld
cmp
xor
rcrb
out
das
cmc
and
add
movsl
and
jge
out
arpl
xor
lds
push
pusha
adc
push
add
mov
add
dec
jo
popf
ret
inc
xchg
add
sbb
xor
and
mov
popl
out
xor
jmp
jns
bound
xor
mov
pop
sub
and
push
dec
xchg
push
leave
inc
movsl
cmp
leave
inc
jg
jge
lcall
leave
jae
pop
lret
les
adc
iret
int3
mov
imul
and
jns
loopne
out
push
jo
jbe
inc
mov
lds
test
and
orl
inc
push
sbb
xor
inc
std
sub
sbb
dec
mov
add
insl
idivb
mov
dec
ja
iret
movl
lcall
jno
pop
cltd
ror
inc
cmp
mov
jb
push
divb
movsb
lock
add
out
sub
sub
cmp
inc
outsl
dec
xor
mov
sub
jne
pusha
sahf
mov
in
push
lods
cwtl
fsubrl
std
push
xor
adcl
mov
std
inc
sub
xor
cmp
mov
popl
movsb
sbb
out
xchg
mov
inc
cmp
jae
jecxz
pop
outsl
inc
in
std
in
cs
mov
sub
mov
sub
mov
cli
mov
les
sub
jl
sbb
lret
push
ficompl
into
jne
xchg
jns
push
dec
inc
push
mov
jb
pand
mov
mov
inc
jb
shrl
push
dec
addr16
in
xor
pop
stos
divb
add
cmp
pop
test
jne
cmp
call
aas
inc
xor
inc
add
cmp
stc
cltd
leave
sti
jbe
es
xchg
leave
mov
shl
xchg
mov
inc
faddl
loopne
xor
rcrb
inc
test
dec
hlt
jno
mov
adc
dec
xor
test
jle
movsb
shl
mov
imul
repnz
mov
mov
scas
fcmovne
push
mov
int3
sub
push
psraw
mov
mov
xchg
loope
mov
pop
rolb
mov
lcall
lods
call
push
cmc
inc
stc
out
dec
push
adc
loop
sub
mov
addl
dec
cmp
clc
stos
mov
xchg
mov
cmp
mov
xorl
fstp
subl
cmpsl
jp
shll
xchg
jp
mov
xor
pop
sub
mov
mov
lods
mov
es
fwait
sub
dec
jno
xchg
loopne
call
imul
dec
pop
jno
jae
shrb
push
sub
js
das
mov
jecxz
sbb
popa
push
sbb
test
jb
lods
sbb
push
or
jbe
pop
cwtl
jecxz
arpl
pop
mov
mov
popa
xchg
mov
xchg
sbb
mov
pop
push
cmp
cli
addl
int
jns
mov
pop
rcll
sub
inc
scas
call
add
mov
jge
stc
jecxz
loopne
in
test
mov
fistps
push
mov
pop
out
mov
push
dec
stc
adc
cmp
fs
sub
dec
adc
sbb
es
mov
pop
adc
or
out
ss
loope
add
insl
mov
or
iret
and
lret
cs
jne
and
push
inc
std
lods
xchg
sub
mov
or
pop
jns
testl
sub
sub
pop
mov
xor
dec
sahf
int3
fsubrs
mov
scas
xchg
inc
adc
popa
sbb
push
mov
sub
cltd
sbb
xor
or
xchg
bnd
fnstenv
lret
sbb
cmc
lahf
mov
imul
pusha
sti
pop
addr16
push
scas
jmp
mov
dec
push
add
dec
cli
mov
das
or
std
xchg
adc
push
or
xchg
add
dec
mov
xlat
fs
xchg
or
mov
sti
push
shl
inc
mov
adc
test
mov
adc
or
xor
call
pop
and
inc
ret
xchg
mov
in
movsb
mov
xor
pop
fwait
and
xor
cld
pop
sub
push
scas
lea
jnp
bound
mov
lods
pop
fdivl
nop
mov
mov
cmc
and
sbbl
mov
jo
sarb
jbe
clc
sahf
sbb
dec
inc
and
mov
mov
ss
fimull
in
jb,pt
sub
jnp
cmp
dec
xchg
xorb
xchg
mov
sbb
in
cmp
into
mov
push
add
jmp
daa
mov
mov
mov
bound
and
sysexit
or
cmp
jb
jo
sub
in
test
jmp
pushf
cmp
test
sbb
add
faddl
adc
cmpsl
xlat
add
in
push
mov
fs
leave
enter
imul
push
outsb
mov
test
and
add
aam
xor
sbbl
pop
dec
and
mulb
das
fs
sbb
stos
xchg
and
inc
mov
xchg
push
out
rolb
int
lret
popa
leave
mov
in
fisttpll
inc
dec
mov
fsubr
mov
xor
jl
cli
out
mov
jg
xchg
or
rorb
repz
sbb
sbb
jb
ret
arpl
addl
add
testb
pop
daa
add
sarb
sar
int3
sbb
aaa
hlt
test
cmp
dec
sahf
xlat
ja
enter
mov
scas
xchg
push
loope
push
dec
int3
cmc
aas
xor
cltd
lret
lcall
push
pop
rorl
out
int3
dec
dec
adc
ret
loopne
imull
dec
pusha
xchg
sbb
pop
mov
pushf
aad
or
dec
or
dec
jge
loop
fcomip
xchg
inc
push
push
or
xor
mov
push
or
rcrb
inc
insb
icebp
sbb
stos
mov
fwait
aad
leave
test
and
adc
aaa
les
mov
and
stos
ret
pop
xchg
leave
push
or
push
cmp
mov
xor
clc
sbb
mov
sbb
pop
prefetchwt1
sarb
pop
xchg
hlt
jne
fucomip
imull
and
aad
xchg
imul
push
outsb
dec
fstps
dec
push
push
daa
es
mov
lock
add
jmp
xor
xlat
jae
pop
test
test
lock
enter
mov
inc
mov
jmp
shr
jb
int
stos
push
leave
sbb
je
lahf
addb
pop
shrb
pop
dec
in
sti
push
sub
icebp
cltd
cmp
lret
and
icebp
jnp
push
mov
rclb
imul
or
jmp
xchg
mov
and
xor
or
decb
adcl
add
gs
shr
je
and
push
repz
mov
and
cmp
gs
pop
test
pop
sahf
popa
sti
push
adc
scas
dec
push
addr16
push
push
js
gs
pop
test
into
jnp
addr16
lcall
push
mov
sar
sub
loopne
cmp
mov
jae
shrb
popf
jle
clc
outsl
cmc
pop
mov
xchg
mov
cld
cmp
xchg
xor
scas
pop
ret
xor
cmp
and
adc
and
cmpsl
sub
rorl
stos
sub
ljmp
cmpsl
add
scas
mov
inc
sub
jle
and
pop
add
icebp
mov
pop
fcompl
setp
or
mov
cmp
mov
jo
pop
lret
ss
xor
push
hlt
movsb
mov
cmpsb
inc
inc
mov
movsb
gs
mov
cmp
xor
into
in
cmp
pop
cmc
outsb
sbb
jg
incl
lret
cmp
shll
scas
into
xchg
sub
mov
fs
out
jno
dec
hlt
push
pop
shl
andb
push
cmp
inc
repz
push
fnsave
lcall
mov
mov
jg
rcrl
sti
and
ljmp
mov
test
or
push
push
xorb
loope,pn
or
fldt
add
int3
xchg
pop
ljmp
mov
mov
or
leave
lods
jo
ds
ret
sbb
mov
unpckhps
pop
mov
xchg
out
in
jmp
in
or
jge
sbb
mov
pop
jb
js
lods
mov
push
sub
sbb
cwtl
aam
mov
jmp
ja
clc
repz
leave
js
cmpsl
and
dec
ljmp
sbb
jns
dec
lret
rcrb
mov
lods
dec
inc
and
stos
fs
mov
mov
xor
es
inc
ja
pop
lds
inc
scas
in
stc
mov
adc
das
push
or
test
xchg
pop
pop
mov
jnp
and
ja
or
inc
add
adc
bound
lahf
pop
shlb
clc
dec
dec
or
add
fsubl
movq
test
ret
out
hlt
notb
or
pop
inc
jbe
cmpsb
nop
push
in
cmpsb
shl
xor
in
pop
addr16
jmp
addr16
mov
in
cvtps2pd
mov
les
xor
mov
cltd
xor
call
icebp
xor
mov
add
cmp
ds
add
mov
xchg
push
scas
adc
movl
add
xlat
inc
fimull
adc
lcall
ds
and
addr16
inc
pop
cltd
outsb
test
and
mov
mov
gs
cmp
test
jmp
cs
sahf
icebp
loopne
mov
mov
mov
outsb
lea
shr
or
xchg
iret
jmp
sbb
in
sbb
shr
ja
lret
repnz
push
idivb
sbb
xor
cmp
mov
call
mov
sub
sbb
les
inc
lds
pop
shr
nop
imul
pop
orl
stos
mov
test
data16
movsb
and
or
les
aad
loope
lcall
decb
test
mov
fstps
xor
mov
repnz
es
mov
xor
jle
adc
shll
inc
aam
hlt
sub
push
mov
push
mul
or
movsl
imul
mov
daa
push
cpuid
mov
or
xor
divb
adc
faddl
pop
fistps
xchg
xchg
out
sub
rorb
pushl
repnz
adcb
and
cltd
loope
daa
movsb
stos
data16
mov
and
cmpsl
adc
mov
scas
dec
cld
daa
push
adc
imul
cmpsl
push
sub
fldt
xchg
popa
inc
shrb
sub
inc
xchg
fstpt
in
inc
addr16
rorl
and
mov
xorb
sub
mov
mov
fldenv
jl
ds
shrb
or
mov
out
or
cmp
mov
sub
sbb
out
sbbb
sbb
mov
push
mov
or
shll
mov
in
mov
lods
adc
test
pop
lods
mov
push
rol
movsb
lahf
fsubrp
fstpt
jo
lods
sbb
mov
inc
not
rcrl
cmp
sbb
dec
hlt
xchg
ss
popf
add
hlt
cmp
mov
or
dec
repz
mov
aaa
mov
shrl
sahf
in
xchg
pusha
leave
inc
inc
cmpsb
test
movsb
mov
push
xchg
and
ret
cli
fistl
jg
xor
xlat
and
cli
lret
out
xchg
xchg
adc
lcall
aaa
jnp
in
pop
push
repz
pop
ja
stos
into
rclb
lods
xchg
aad
gs
pop
mov
fcomi
mov
testb
sbb
fcompl
pusha
imulb
cli
push
push
test
push
xchg
cli
inc
mov
mov
cmp
sahf
std
lahf
hlt
or
adc
mov
pop
inc
ret
push
push
mov
dec
repz
xor
loopne
push
push
jl
pushf
fistpl
rorl
mov
out
sub
pop
and
lock
shrl
mov
add
mov
shl
adc
sbb
or
adc
cwtl
nop
or
jp
lret
into
dec
test
xchg
or
xor
and
xchg
add
shl
jnp
ljmp
lcall
out
into
xchg
shll
xchg
cmp
mov
bound
pusha
imul
scas
pushf
lods
cld
repnz
clc
stc
test
or
es
js
pop
mov
pop
jae
dec
mov
xor
mov
jmp
mov
push
insb
push
pop
cmp
jmp
cmp
push
sbb
test
jle
imul
repnz
aam
mov
adc
pop
cmp
lock
push
sbb
les
loopne
sbb
jecxz
decb
inc
and
jl
in
sub
xchg
mov
hlt
out
daa
scas
movl
mov
jnp
mov
test
enter
shrl
cmpsl
push
push
fdiv
scas
dec
xor
inc
mov
add
jb
cwtl
cmp
es
test
fiadds
fsubrp
nop
loop
jle
fisubs
test
add
sub
js
mov
subb
cli
inc
imul
jbe
out
movsb
insb
mov
jae
lcall
cmc
out
adc
xlat
arpl
mov
cld
inc
popa
inc
ret
int3
je
push
fwait
sahf
jge
and
ficompl
lret
mov
xchg
shrl
mov
adc
cltd
lods
sbb
pop
lcall
add
add
rcrl
into
ljmp
push
add
xor
leave
jge
popa
lods
cltd
das
mov
imul
and
dec
mov
stos
cmpsb
push
scas
mov
jge
xor
sbb
out
lock
push
dec
and
jne
popf
xchg
mov
stc
adc
rcrl
popa
out
mov
mov
mov
or
push
jbe
dec
ja
xor
mov
gs
std
aas
adc
rcl
clc
mov
sub
shll
adc
and
push
test
scas
cmpsb
sbb
and
pop
pop
dec
scas
into
lds
cltd
stc
mov
movsb
xchg
movsl
dec
dec
lcall
dec
jp
sub
movsl
inc
mov
ret
scas
mov
push
push
and
test
adc
jle
sbb
insb
subl
mov
mov
outsl
jnp
pop
and
jle
mov
inc
push
or
push
imul
shll
or
mov
lcall
dec
out
dec
imul
insl
jmp
pop
sbb
push
stos
repnz
add
dec
cmpb
inc
subl
mov
jecxz
test
jge
mov
inc
in
arpl
jmp
mov
xchg
mov
cmpsb
inc
adc
fcmovu
movsb
push
fdivs
inc
lcall
out
pop
cmpsb
stos
inc
int
test
cmpsl
hlt
mov
daa
ja
ja
jmp
inc
fcomps
sbb
pop
mov
dec
jmp
outsb
cmpsb
cld
dec
mov
add
imul
rorb
pop
outsl
scas
push
inc
pop
and
jl
in
pop
lods
xchg
andb
cld
adc
xchg
pop
xchg
push
pop
jne
mov
mov
sbb
mov
mov
daa
bound
or
mov
lds
mov
pop
jnp
fcompl
dec
push
lods
lea
jnp
cmp
hlt
int
push
add
sti
or
rcrl
pushf
das
clc
arpl
gs
movsl
cmpsl
xchg
out
lret
ret
test
xchg
ja
inc
push
sbb
sti
pop
mov
sbb
shlb
inc
popa
adc
icebp
xor
jmp
xchg
xchg
cmc
or
mov
or
push
mov
subl
mov
push
push
test
arpl
inc
sbb
pop
push
pop
mov
addl
pop
test
negb
je
adc
cmp
outsb
jle
stos
add
movsl
pop
into
ds
shll
lret
and
pop
outsb
into
sar
xchg
dec
sbb
mov
cmpsl
sbb
sbb
popl
cld
cld
push
add
or
sahf
fisubrl
inc
push
lret
xchg
sub
les
jge
aaa
out
aaa
ss
out
cli
cwtl
inc
jmp
in
push
and
dec
nop
mov
sbb
mov
jecxz
cld
xor
hlt
jle
loope
or
lret
inc
insl
cmpsl
xlat
loopne
test
ljmp
pushf
add
and
xchg
push
xor
mov
xchg
mov
xchg
sbb
push
mov
xchg
repz
cmp
or
mov
scas
shll
test
push
in
and
pusha
mov
xorl
lock
xor
out
mov
cmp
or
mov
mov
mov
adc
inc
cmc
or
push
cmpsb
mov
mov
push
arpl
xchg
xor
cld
cmp
push
ja
pop
ljmp
imul
xorl
push
pusha
jae
and
sub
gs
js
scas
imul
jns
hlt
dec
insb
outsb
push
imul
cmp
push
cmp
and
fmull
jne
inc
pop
data16
in
lock
cltd
pushf
pop
cmpsb
cmp
jl
push
insb
inc
push
and
sti
sbb
sahf
xlat
scas
lods
fistl
cwtl
mov
xor
sbb
sbb
cmpsl
call
dec
dec
aas
push
mov
inc
movsl
sbb
icebp
inc
xchg
fcompl
cli
push
daa
mov
add
adc
sarb
pop
or
mov
xor
bnd
push
xchg
xor
dec
push
pop
fnstcw
lret
sub
scas
pop
shll
ja
test
hlt
jp
xchg
sub
cltd
ja
xchg
pop
adc
sti
dec
inc
mov
xchg
jmp
imul
jmp
stos
ja
cwtl
fcoms
daa
inc
cli
push
mov
out
push
add
jbe
test
push
mov
mov
lret
jp
sbb
and
fmuls
sub
aam
and
ljmp
inc
inc
mov
movsl
pop
out
xor
dec
pop
and
cmp
pop
imul
lea
out
int
fwait
push
pop
test
out
inc
push
xor
pop
xchg
insl
inc
push
jmp
add
sub
mov
dec
in
sub
mov
rcll
jno
negl
cld
jp
shll
push
mov
xchg
dec
and
test
push
rcll
mov
iret
push
xor
xchg
dec
fucomi
pop
fstpt
stc
mov
sub
mov
and
mull
push
insb
add
movl
shr
pop
jle
lret
ljmp
dec
outsb
jns
jle
rcll
inc
sub
pop
das
aam
shrl
in
mov
xchg
cmc
mov
pushf
aad
jns
jmp
aad
roll
inc
lret
mov
mov
xor
lock
fcmovu
or
inc
xchg
mov
rcrl
rcl
and
movsl
adcl
mov
inc
imul
dec
adc
insl
fistpl
jno
es
insb
loop
repz
data16
add
fmuls
cld
jmp
ret
in
dec
jge
cs
cld
addr16
pushf
mov
test
ljmp
and
test
adc
stos
inc
jmp
mov
imul
xchg
xor
xor
push
ficoml
dec
adc
pop
aas
dec
loopne
out
outsl
push
out
lea
bound
jo
push
ss
add
inc
dec
stc
jae
sub
jecxz
sub
insb
ja
mov
in
in
sub
sbb
loopne
and
stos
mov
xchg
cmp
clc
hlt
mov
clc
pop
into
cmp
xchg
jnp
and
xchg
jne
adc
movsb
adc
push
pop
sub
outsb
sbb
shl
jae
in
lcall
cmpl
in
and
in
mov
arpl
dec
pop
xchg
pop
jmp
sahf
scas
jg
mov
inc
fcomps
repz
js
xor
ss
pop
shlb
sbb
lret
sub
pop
daa
mov
mov
jecxz
xor
sbb
push
mov
into
pop
movsl
out
sub
aad
and
int3
subl
adc
ja
iret
test
cmp
loope
inc
into
and
push
and
mov
ret
pushf
shll
push
gs
or
lret
aaa
adc
rcll
dec
jle
pusha
out
in
push
arpl
call
add
push
xor
fnstenv
jp
ret
out
fistpl
lea
add
out
ficomps
mov
outsb
and
or
adcl
fsts
dec
test
fs
inc
mov
xor
out
cwtl
test
mov
jle
mov
iret
pop
fidivl
sub
push
fwait
sub
mov
push
cld
adc
sub
mov
push
pop
sub
mov
and
popf
mov
loopne
lret
jle
mov
adc
movsb
push
or
add
push
sub
jae
xchg
push
mul
mov
ficomps
and
dec
dec
enter
hlt
fwait
dec
shrb
loope
sub
sbb
btcl
jb
int
das
test
jo
push
test
cmp
jb
mov
sbb
mov
daa
clc
movsl
cmp
insl
xchg
aaa
pop
cmp
cmp
lock
inc
out
mov
idivb
lock
sbb
sarl
shl
adcb
in
sbb
push
lret
mov
imul
leave
pop
and
pop
fstsw
cmp
add
inc
adc
inc
lahf
dec
sub
pushf
sbb
jmp
mov
or
mov
lea
push
sbb
mov
mov
mov
push
ds
inc
push
jne
jae
push
sbb
stos
mov
scas
call
jns
cmp
dec
xchg
jnp
in
push
pushf
out
push
mov
xor
adc
sbb
int3
inc
jge
insl
xchg
adc
cmp
int
int
out
xor
push
hlt
test
and
xchg
pop
add
in
adc
aaa
push
xchg
daa
test
lock
loope
sub
fnsave
aaa
jg
xchg
orl
out
xor
shlb
inc
xor
nop
lods
test
mov
ljmp
ss
pushf
orl
outsl
js
mov
jns
fidivl
pop
dec
mov
push
or
nop
xchg
out
repz
movsl
test
cmp
rorb
test
adc
cli
sti
iret
or
and
pop
pop
outsl
jge
in
jle
aam
sbb
call
loope
enter
add
mov
stc
loopne
or
stos
push
scas
lret
jmp
jmp
or
mov
xor
lds
lea
or
iret
imul
loope
xor
jg
mov
icebp
sub
loopne
mov
xlat
mov
lret
jge
push
dec
mov
out
pushf
js
mov
arpl
rcrl
movsb
scas
cmpsb
mov
push
jo
out
verw
arpl
out
mov
xor
lahf
out
mov
xchg
xchg
dec
adc
fimull
sbbl
dec
xchg
popa
adc
iret
vhsubps
cmp
xchg
shl
lea
mov
js
add
dec
inc
out
mov
lds
jecxz
xor
pop
int3
dec
fst
cmc
mov
ss
adc
pushf
push
sahf
lods
add
stc
sbb
push
aad
fisttpll
sti
jle
push
nop
xor
adc
icebp
cmpb
fs
jo
sti
push
or
popf
cmp
or
cmpsl
in
js
mov
outsl
scas
popf
sbb
fnsave
add
faddl
fcmovnbe
sbb
sahf
cmc
push
lods
fcompl
sbb
sti
add
push
sbb
pop
xor
sub
les
jmp
xchg
jne
cwtl
jno
mov
mov
jbe
dec
xor
stos
scas
pop
push
adc
cltd
aam
pushf
out
repnz
jo
ljmp
and
pushf
sub
inc
rorl
dec
and
and
sbb
in
push
out
sub
stos
in
stc
mov
ja
repnz
mov
mov
add
xor
nop
inc
es
ss
cld
push
xlat
mov
leave
push
ss
out
fsub
shll
fcoms
mov
sbb
inc
add
adc
lret
stos
push
push
xchg
mov
test
xor
dec
sbb
leave
xchg
or
jno
nop
orl
loope
mov
inc
dec
and
les
insl
fstps
push
adc
dec
jecxz
popa
loop
out
incl
push
mov
cmp
cmp
fdivs
repnz
mov
movsl
shrb
or
cltd
mov
aad
sbb
add
out
xlat
jg
jmp
and
dec
cmp
xchg
mov
adc
push
mov
and
xchg
push
sbb
insb
in
adc
fdivl
sbbl
arpl
inc
adc
mov
stc
stos
mov
sbb
inc
ja
jg
insb
clc
sbb
mov
bswap
mov
mov
push
inc
into
clc
inc
in
leave
and
adc
das
lock
mov
pop
ljmp
pop
jnp
bnd
fs
xor
ljmp
sbb
inc
dec
cli
xchg
sub
xchg
cmp
inc
lods
jno
jl
jne
xorb
addr16
mov
js
xlat
mov
das
pop
push
adc
data16
mov
push
fcom
inc
bnd
lcall
push
push
sti
stos
jle
shrl
aam
push
pop
divl
pop
push
add
or
and
inc
mov
out
out
push
stc
shll
pushf
fs
xchg
fildll
notl
inc
gs
add
mov
mov
inc
xchg
pop
sbb
pop
pop
or
sub
call
pop
jmp
xchg
inc
sbb
andb
cmpsl
bound
or
sbb
popl
cmpb
jecxz
xor
xchg
or
gs
pop
xchg
lea
xchg
std
dec
dec
fidivrs
adc
je
sub
sub
ret
mov
jnp
sahf
cmp
repz
inc
add
adc
pop
sbb
dec
jge
fidivl
notb
dec
dec
and
or
insb
es
stc
fcoms
ljmp
adc
adc
jmp
andl
andl
mov
cmp
mov
or
fs
dec
scas
mov
or
jno
or
jg
int
in
adc
dec
test
adc
out
sti
dec
cli
jg
xchg
mov
jae
lods
cmpsl
into
pop
fbstp
and
and
sahf
jnp
sbb
mov
hlt
call
add
lret
push
cmp
push
and
xor
cmpb
xchg
into
outsl
lahf
push
sbb
cs
imul
stos
movsl
sti
ret
xchg
mov
lods
cmp
push
push
scas
mov
mov
inc
scas
int3
lods
and
lods
and
into
inc
insb
incl
sub
lret
rol
arpl
pushf
testb
aaa
cmp
xchg
xchg
ja
push
push
xchg
into
and
xchg
inc
mov
xorb
push
adcb
shll
pusha
fldl
push
popf
jnp
in
push
test
xchg
ss
and
cld
jg
xor
orl
mov
out
adc
xor
aad
jb
jb
adc
inc
pop
mov
cmpsl
cltd
mov
cmp
xchg
fs
sub
inc
pusha
addr16
mov
push
in
and
xchg
int
bound
cmp
fsub
es
sub
aas
jp
int
fucomp
cli
fmul
popa
movb
adc
cmp
pop
outsw
sbb
inc
scas
pop
mov
mov
outsl
leave
mov
xchg
fildl
jo
add
sbb
push
or
and
and
fldenv
movsb
xchg
mov
mov
pusha
push
nop
insb
or
aas
mov
ss
pop
pop
sbb
adc
imul
out
sub
sub
add
les
inc
mov
lods
out
jp
iret
call
loop
rclb
adc
mov
movsl
sub
and
add
dec
mov
lods
adc
mov
xor
fldcw
addr16
bound
add
arpl
jle
test
xor
repnz
pop
and
xchg
cmp
repnz
mov
xlat
xor
cmpsl
test
adcl
lock
jo
mov
icebp
sbb
stc
dec
add
clc
ss
std
push
les
test
movsl
mov
and
inc
fcompl
mov
sub
popf
xchg
cmpsb
push
movsb
loop
les
fwait
jae
pop
or
insb
test
repnz
xor
push
lret
cli
fsubrl
inc
xchg
mov
repnz
sbb
popa
push
into
mov
add
xor
pop
outsb
jmp
imul
or
pop
rcrb
xchg
popa
into
xor
in
ljmp
loop
fsubrs
fcompl
cmp
and
inc
cld
fldenv
cmp
lcall
cmpb
or
mov
int
inc
test
cmc
push
mov
mov
cmp
xor
hlt
mov
je
cmpsb
clc
xor
sub
xchg
int
mov
xorb
out
arpl
sub
cwtl
sub
incb
and
js
pop
mov
fidivrs
pop
enter
mov
mov
enter
aam
aad
pop
mov
dec
adc
and
xor
fdiv
xchg
push
sti
clc
or
shll
das
out
mov
cld
dec
dec
jg
mov
push
cmp
call
int
push
push
iret
je
or
mov
add
pop
icebp
inc
das
std
inc
sahf
add
cmp
push
repnz
inc
test
mov
mov
mov
fmul
sub
adc
icebp
push
addr16
scas
out
mov
jecxz
cmpsl
xchg
das
loop
pushf
lcall
stc
add
mov
pop
dec
cs
pop
push
jle
fwait
sub
and
stc
push
push
sahf
cmp
dec
and
xchg
enter
dec
push
repz
and
lahf
xlat
sub
lret
jmp
out
xor
adc
add
or
inc
rorb
cmpsb
xchg
cwtl
inc
loop
xor
je
mov
add
xchg
scas
adc
rol
cltd
pushf
add
or
fstps
std
mov
subb
or
rcrl
test
mov
mov
mov
pop
into
push
pop
push
mov
cmpsb
fwait
add
int
cmp
pop
push
jnp
out
xorl
popf
cmp
mov
movsb
scas
jecxz
fnstcw
cs
popa
stos
xlat
lods
pop
lret
icebp
xchg
lret
mov
pop
ss
push
xlat
sub
pop
xchg
hlt
nop
dec
jo
sub
jbe
adc
xchg
loopne
and
push
popa
cmpsb
cwtl
sbb
jge
push
test
fstps
mov
stc
push
mov
testb
sub
push
or
out
lret
dec
jo
xchg
jle
cmp
loopne
lock
and
pop
cmp
lret
pusha
or
inc
lahf
ret
pushf
stos
fdiv
push
insl
adc
stos
pop
fsubrl
or
dec
add
inc
es
lods
ret
sarl
stos
movsl
push
bound
mov
addr16
test
xchg
push
arpl
pop
inc
lahf
ja
pop
push
sbb
sbb
mov
mov
sub
iret
icebp
pop
inc
fists
pusha
out
call
outsb
and
mov
repnz
pushf
loopne
scas
push
pop
enter
jge
into
std
jbe
jecxz
xor
jg
push
daa
stos
adc
jg
int
cs
pop
mov
movsl
aaa
jo
js
fnsave
or
adcb
fcmovne
xchg
stos
cli
inc
sub
xor
xlat
jo
xchg
jae
je
sahf
jg
stos
clc
sbb
je
stc
rcl
repz
push
lcall
pmulhuw
mov
xchg
ret
xchg
loop
jo
mov
repnz
sub
lret
insb
and
and
loope
xor
mov
in
jge
mov
dec
inc
xchg
xchg
push
hlt
jne
sbb
mov
ds
xor
xor
adc
cld
cmpsl
mov
ja
sbb
push
fldenv
cs
mov
push
out
mov
stos
out
es
stc
fisttpl
repz
sub
adc
cmpsb
ds
push
clc
stos
fimuls
cli
fsubrl
shrb
jg
cmpsb
jno
out
jnp
mov
mov
cmp
in
movsl
jno
or
stc
jae
mov
add
out
xchg
rcrb
inc
mov
mov
add
lret
insb
mov
stos
into
mov
pop
add
mov
cmp
aas
out
insl
cmp
dec
pop
ja
fs
repnz
pop
push
mov
mov
or
aas
jmp
outsb
xor
mov
lret
mov
adc
adc
mov
xlat
pop
addr16
dec
jno
cmp
or
rcrb
and
jmp
and
xchg
mov
or
outsb
xor
iret
sarb
cmpl
push
pop
cmp
inc
inc
fsubrl
cmp
pop
popa
mov
sub
mov
xor
inc
inc
ljmp
adc
pop
dec
push
xor
mov
adc
bound
cmp
pop
or
xchg
mov
pop
std
shl
outsl
test
ret
xor
orb
pop
xor
loopne
xlat
add
mov
adc
aaa
inc
xchg
jmp
repnz
popa
mov
pop
xchg
sbb
xchg
ljmp
jnp
or
outsb
add
cmp
xlat
mov
lea
fcompl
cmpsl
cmp
add
pop
mov
outsb
mov
shll
movsl
adcb
pop
xchg
outsl
out
push
aaa
mov
enter
into
pop
xchg
out
jbe
scas
lods
aam
dec
fsubrs
inc
or
mov
mov
push
ljmp
in
out
repnz
sbb
xchg
stos
aaa
push
mov
scas
adc
push
sbb
aas
out
mov
daa
mov
dec
in
dec
xor
mov
dec
and
in
mov
xchg
or
and
shll
shl
pop
mov
inc
decl
sahf
fwait
loopne
mov
xchg
mov
outsb
mov
sbb
mov
dec
jmp
add
jmp
push
pop
mov
pusha
pushl
movsl
mov
mov
xor
and
out
shlb
add
push
sub
inc
test
jge
fsubl
xor
mov
gs
sbb
adc
sub
dec
xor
mov
fwait
jnp
imul
aad
inc
std
scas
fldenv
mov
ret
mov
xchg
fldl
jl
jmp
cmp
movsl
nop
jbe
lea
cmpsl
inc
fcomip
lret
mov
cwtl
es
adc
fucomip
mov
fiaddl
fstpt
inc
or
inc
jb
push
jnp
vpsrld
data16
pop
repnz
lret
fnop
jp
lret
iret
or
add
cmp
mov
movsb
xchg
fistpl
xchg
test
fcomps
aam
shlb
mov
lods
or
xchg
sbb
sarb
dec
mov
gs
in
push
lret
push
sub
shrl
ret
cmp
mov
push
imul
clc
fisttps
aam
clc
dec
mov
movb
fdivrl
add
dec
push
xlat
xchg
in
mov
mov
vmread
rol
into
out
mov
in
adc
sbb
adc
mov
out
vpshlq
push
fimull
out
out
lods
stos
push
nop
inc
mov
jg
adc
daa
add
push
push
push
add
jb
pop
sbb
sub
dec
push
pop
add
cmp
scas
arpl
push
cld
jbe
aam
mov
and
in
inc
xor
in
cmpl
bound
ret
mov
mov
push
xchg
jae
pusha
xlat
stos
aad
xchg
mov
bound
loope
divl
mov
idivb
fidivrl
rclb
pop
stos
sbb
mov
int
movl
mov
out
and
sub
sahf
fisubrs
shr
pop
inc
or
jne
cmp
or
ljmp
xchg
shll
mov
or
or
push
inc
sar
mov
ds
mov
cmp
push
fs
lcall
fwait
push
stos
shlb
lea
jo
addr16
cmp
or
inc
stos
lret
imul
test
test
inc
pop
add
push
decl
jmp
out
sbb
cmp
mov
cmp
xor
push
enter
movsb
adc
add
test
mov
push
mov
xor
mov
rorb
sbb
stos
pop
rcr
adc
xchg
test
scas
or
mov
dec
lahf
adc
idivb
adc
icebp
mov
pop
aad
cmpb
imul
out
shrb
cli
pop
sub
ret
test
sub
cmpsb
das
ror
pop
lahf
mov
cmp
imul
xor
pop
push
or
repnz
rorb
lea
inc
js
movl
and
push
cs
ljmp
fcmove
mov
sub
dec
mov
cmp
push
loope
addr16
rcll
or
mov
or
jbe
cld
and
adc
mov
sub
mov
pop
jle
fwait
xchg
dec
push
adc
cmpsb
test
dec
cmp
cwtl
bound
xchg
js
dec
jecxz
cmp
inc
out
je
dec
or
push
inc
dec
cmc
adc
out
mov
andl
test
push
cmc
cmp
int
int3
push
add
lcall
pop
ja
repz
push
int
lock
cmpsb
jb
add
mov
pop
shrb
jl
out
fs
aam
xor
or
cmp
in
sub
outsl
inc
inc
mov
jne
out
cltd
imul
dec
pushf
mov
sbb
rclb
mulb
mov
jno
adc
je
pusha
nop
jbe
mov
mov
lods
rcll
inc
jp
pop
dec
icebp
enter
jge
sbb
pop
dec
daa
repz
popa
mov
or
and
add
mov
repz
jnp
test
cmp
adc
std
sub
ficoml
xor
mov
int
cmp
int
jb
jnp
xor
pop
lcall
outsb
test
jle
dec
adc
das
shld
into
ljmp
jmp
scas
fsubrl
push
mov
arpl
mov
pop
pushf
rcr
and
or
or
push
testl
add
icebp
pop
test
dec
imul
jge
pop
ret
xor
mov
ret
jl
cs
hlt
and
imul
dec
data16
pop
or
add
jnp
popl
jns
adc
call
and
mov
loopne
cmp
push
adc
in
mov
fldl
cmp
out
push
loopne,pt
int
mov
stos
push
jmp
jo
sbb
cmp
arpl
adc
jl
jae
or
mov
cmpsl
push
sbb
jo
cmpsl
inc
enter
mov
pop
mov
add
das
stos
ss
jge
js
adc
movsb
pop
int
dec
inc
decl
in
out
jne
repz
xchg
fcoms
jns
cmc
rolb
mov
or
bound
cmp
xor
pop
jnp
ja
jne
dec
sub
movsb
mov
call
scas
cmp
dec
fsub
xchg
mov
mov
scas
arpl
jns
in
int
dec
sub
sbb
mov
mov
das
aas
push
cmp
and
xchg
and
ficomps
cmp
push
mov
mov
adc
iret
mov
or
fnstcw
adc
stos
jne
ds
xor
mov
jle
lods
es
fisubrl
ret
adc
dec
test
iret
pushf
xor
sub
mov
lret
mov
popa
cld
mov
mov
cmc
loopne
movsl
adc
addr16
loop
sub
sbb
sbb
pushf
sahf
aad
jecxz
jno
push
jp
fwait
jnp
mov
mov
push
iret
jb
das
sub
shrb
add
mov
jb
cmp
and
mov
aam
aaa
stos
push
orb
add
mov
jae
out
adc
fcoml
xor
jmp
mov
fsubrp
in
pcmpeqd
andb
fisubrs
sbb
cld
neg
stos
les
mov
fidivrs
push
jne
sub
xchg
test
loope
test
leave
mov
adc
ret
and
das
lss
or
int
idivl
imul
and
daa
mov
lcall
or
imul
and
sbb
cmp
in
fwait
and
cmp
test
js
jle
into
test
loopne
cmp
sbb
int
mov
mov
adc
and
test
mov
icebp
gs
out
gs
dec
jecxz
data16
stos
lcall
scas
inc
and
dec
je
pop
jno
xor
test
add
aad
sub
inc
shlb
sub
addr16
loopne
and
pop
hlt
jo
jae
ret
xchg
les
push
mov
xchg
jns
inc
inc
int3
add
and
adc
push
insl
pop
push
mov
jl
pop
out
enter
aaa
mov
pop
or
ret
data16
sub
xchg
out
scas
xchg
sbb
and
ficompl
lea
mov
inc
mov
shrl
push
pop
ds
mov
mov
mov
push
fistpl
add
enter
repz
out
or
ss
xor
sub
pushf
adc
xor
sahf
scas
fsubrp
rcrl
sub
into
and
mov
ret
in
jp
xchg
mov
ja
shll
ljmp
ja
push
pop
outsb
ljmp
lahf
dec
cld
mov
or
imul
cmp
das
xchg
stos
ret
ret
push
aad
xchg
test
loopne
push
lahf
and
pop
popa
cltd
mov
inc
call
add
mov
add
call
fidivrs
jle
mov
bsf
fmull
cmpsl
insb
aaa
js
xlat
out
xchg
lods
pusha
hlt
int3
jp
idivl
and
sbb
fists
call
or
flds
pop
jge
cltd
scas
je
mov
and
cmp
mov
push
cmpsl
xor
in
xchg
mov
in
sub
inc
lods
jo
pop
lds
push
pop
jo
cmpl
pushf
pop
inc
lods
pusha
mov
mov
aas
sti
test
mov
cmpl
push
repnz
push
pop
lret
shlb
ficoml
mov
add
inc
jecxz
fcoms
aaa
sbb
jbe
sub
adc
stc
stos
pop
jb
into
mov
inc
push
fs
mov
cmc
les
sbb
xchg
sti
mov
addr16
push
jns
pushf
in
les
into
clc
pop
cmp
out
jb
fdivrl
addr16
jmp
adc
lea
in
decb
push
jo
bound
test
fstl
rclb
push
mov
mov
int
and
jae
cmp
js
loope
pop
in
pop
pop
pop
mov
adc
lock
jo
call
mov
popf
push
cltd
jecxz
int3
pop
xor
fcompl
js
loop
push
sub
jb
aaa
mov
inc
inc
movsl
insb
mov
sbb
sbb
scas
lea
sbb
je
push
aad
cmp
cs
bound
aas
stos
fs
fbld
pop
int
xlat
sub
out
push
jae
movsl
sti
out
mov
push
sub
cmp
pusha
nop
xchg
lods
cltd
fbld
add
add
jecxz
cs
test
jecxz
mov
aad
fldl
and
fsubrs
sbb
enter
movsb
add
out
lods
push
dec
arpl
ljmp
rcrl
outsl
out
inc
cmp
mov
mov
scas
lds
scas
cmp
sbb
iret
int
ret
xor
gs
push
dec
jbe
adc
out
xchg
jns
fs
fadds
xchg
add
ss
xchg
test
movsb
leave
mov
subb
dec
mov
test
lock
loope
popf
stos
aad
out
jecxz
nop
pop
cmp
push
cld
popa
push
mov
cmpsl
cmpsl
sbb
rolb
outsb
add
add
rorl
mov
fcomps
push
xchg
lret
cmp
add
stos
jmp
xlat
inc
stos
enter
dec
mov
in
mov
add
pop
int3
insb
outsl
aaa
icebp
push
popl
jg
icebp
cwtl
or
push
outsl
pop
sbb
imul
jnp
push
add
mov
adc
lret
mov
test
mov
clc
sub
cs
ja
inc
je
mov
imul
pushl
bound
sub
mov
std
xchg
dec
ds
dec
mov
or
jnp
ret
add
and
push
jp
mov
mov
lods
test
fists
push
sbb
push
mov
mov
sbb
loopne
inc
fiaddl
bound
lret
xor
in
sub
mov
icebp
jo
mov
setbe
clc
push
pop
addb
fwait
jg
sub
mov
jno
mov
stos
sbb
lret
pusha
in
jecxz
xchg
sub
or
jb
mov
mov
int
out
ljmp
popl
jge
pushf
stc
jns
in
call
sarl
lret
dec
mov
ss
fimuls
xchg
adc
mov
push
pushf
jg
fcoms
cmp
xorb
mov
sbb
and
pop
dec
cmp
push
loope
subb
out
xchg
das
mov
adc
and
and
mov
mov
into
xchg
fdivrp
sbb
sub
stos
ja
in
mov
shlb
sub
std
or
loopne
sub
rcrl
ljmp
inc
in
sub
nop
mov
roll
mov
fwait
or
in
fwait
sub
xchg
and
shll
stos
push
push
movsb
pushf
js
fmull
std
aas
pop
dec
dec
jno
xor
xor
imul
push
jecxz
push
das
in
aad
ljmp
test
pusha
cli
adc
sbb
xor
xor
andb
adc
sbb
repnz
mov
dec
mov
mov
aam
loop
jle
mov
imul
out
mov
xchg
jns
adc
jae
sbb
jns
xchg
add
pushf
or
cmpsl
cmpsb
add
push
out
cmpsl
movsl
int3
push
xchg
stos
mov
push
xchg
pop
push
aad
outsb
cli
lock
adc
adc
mov
mov
repnz
repnz
xor
xchg
xchg
push
in
lret
aad
loop
adc
add
sub
les
or
nop
and
lret
dec
xchg
idivl
adc
xchg
or
mov
and
or
inc
ss
sarb
adc
mov
out
push
adc
movsl
sub
xor
test
push
lea
jne
add
idivb
dec
mov
imul
jle
pop
aad
and
test
mov
pop
fwait
add
sub
push
mov
jo
sbb
test
jecxz
das
mov
mov
js
sbb
inc
dec
out
hlt
or
xor
outsb
ljmp
insl
mov
loopne
xchg
push
test
jno
xorb
mov
out
xlat
adc
mov
mov
inc
add
hlt
and
lds
ja
movsl
clc
xor
loopne
dec
push
imul
mov
in
inc
aas
cmpsb
mov
mov
mov
sahf
inc
repz
jl
adc
add
sbb
lcall
aas
jne
iret
js
lret
jl
push
js
push
cs
cmp
push
cmp
adc
xor
imul
sbb
mov
das
dec
fsubrl
xchg
push
lahf
dec
int
pop
sar
push
cld
inc
cmp
enter
int
sbb
mov
sbb
in
or
loope
and
mov
cld
xor
hlt
inc
xchg
fdivs
jp
push
adcb
sbb
enter
jl
xchg
imul
inc
cmp
das
scas
shrb
addr16
adc
cmp
mov
dec
mov
outsb
mov
dec
sti
mov
xlat
pop
cmp
shll
mov
mov
cmp
out
loop
mov
lods
lods
jno
shlb
shr
push
outsl
out
pushf
push
int
stc
cmpsl
test
jl
into
add
cmpsb
adc
push
cmp
sbb
dec
sti
xchg
push
pop
mov
stc
mov
dec
dec
cld
cmp
movl
pop
stos
mov
add
out
pop
pop
movsl
fstl
cmpsl
pop
xchg
call
scas
sub
jmp
fisubl
mov
xlat
inc
sbb
pop
leave
inc
test
js
mov
dec
adc
and
and
xchg
es
call
ljmp
jbe
aam
fiadds
jle
int3
insb
jno
xor
xchg
cmp
test
mov
popf
ret
adc
push
fcoms
inc
outsb
ja
call
jp
arpl
mov
loop
xor
mov
adc
or
mov
mov
fs
cmc
loopne
xor
insl
mov
mov
and
mov
xor
jg
cmp
std
notl
dec
jno
js
cmpsl
lret
aas
cmc
push
out
lret
cs
xchg
xchg
je
movsb
push
loop
lds
cmp
das
ss
ljmp
fcmove
cmp
xlat
pop
sahf
mov
sar
std
mul
les
xor
test
cmpsb
sub
adc
cmc
or
insl
or
sbb
cmpsl
cld
test
pushf
adc
int3
inc
aam
add
cmp
push
sbb
mov
icebp
xor
mov
ss
fwait
mov
mov
or
push
and
xor
ror
test
rol
adc
adc
ja
adc
push
inc
xor
xchg
jnp
rcll
and
mov
mov
cmc
repz
add
pop
test
jb
out
sub
mov
jp
jne
outsb
out
mov
sub
jmp
pop
bound
stos
mov
cmp
data16
ss
int3
mov
in
inc
addr16
jmp
into
ljmp
inc
jbe
dec
imul
hlt
sub
mov
ss
lea
add
cmpsl
ds
and
les
pusha
outsl
fsub
cmp
push
movsl
push
mov
inc
stos
fcmovb
test
fidivl
lret
cmp
mov
pop
ds
xchg
es
iret
adc
arpl
andb
loop
jmp
cmp
ss
subb
cld
icebp
xor
mov
ljmp
mov
sbb
jg
xchg
cmp
stos
ss
lret
xor
cmp
xchg
xchg
cs
mov
and
cwtl
cld
inc
push
jg
imul
mov
rclb
je
cmpsb
mov
pop
repnz
addr16
mov
pushf
mov
mov
data16
cmp
mov
movsb
mov
pop
jae
mov
clc
and
mov
dec
sub
push
inc
leave
pusha
lret
sub
mov
movl
lds
jp
std
scas
fnstenv
cmp
cmc
mov
inc
test
mov
push
imul
or
mov
xlat
jae
lret
into
stc
int3
adc
xchg
dec
jne
fistps
mov
aam
xchg
mov
ret
movsl
jno
out
icebp
mov
push
es
aaa
aaa
aas
xchg
movsl
bound
frstor
test
jo
push
test
lods
push
xchg
insl
push
lock
push
mov
xlat
dec
mov
lods
add
fldl
sub
push
pusha
int
ljmp
lret
push
inc
je
jmp
xchg
fsubrs
test
nop
push
pop
in
xor
scas
test
mov
and
std
pop
jnp
lahf
sahf
call
sar
nop
or
out
mov
call
jo
cmp
leave
sbb
mov
push
rep
stos
js
call
or
out
pop
clc
add
idiv
add
das
push
pop
dec
test
cld
pop
popa
hlt
jno
cmp
sbb
jo
sub
fisttpll
loop
js
inc
ja
mov
add
cltd
cmc
aad
pop
aad
dec
pop
nop
inc
cmp
and
movsb
push
fwait
xchg
lods
loope
or
add
cmp
mov
sbbb
filds
add
adc
cmp
jge
cwtl
xchg
cmc
mov
out
nop
mov
hlt
inc
dec
or
xor
aaa
fst
and
fldl
jo
mov
fiaddl
icebp
clc
lret
inc
inc
sbb
fisttpl
push
adcl
push
xorl
rcll
mov
iret
jno
stc
aam
or
inc
jae
xchg
aad
cmp
inc
loop
test
adc
xchg
out
out
push
cltd
pop
jg
outsb
cltd
nop
aaa
jnp
scas
out
inc
pushf
jmp
mov
sbb
loop
mov
push
mov
jb
mov
xchg
xchg
adc
xor
sahf
stc
repnz
mov
and
mov
mov
cmp
in
push
pop
clc
sub
lock
and
xor
push
fmull
mov
and
outsb
inc
cs
movsb
push
mov
int
sub
insl
lcall
mov
outsl
jp
push
addb
bound
rcrb
ret
cmpsb
ficoml
out
and
out
cmp
test
jns
int
mov
fisubrs
jae
imul
sub
sbb
std
stos
fcompl
xchg
into
mov
dec
dec
shlb
mov
fists
sbb
lret
addr16
sbb
popf
popf
ffreep
mov
aad
stos
cmp
sub
or
pushf
add
iret
cmpsl
mov
jmp
out
js
pop
jecxz
jo
xchg
xor
dec
cmp
and
xchg
clc
inc
fisubrl
outsb
or
sbbl
lret
imul
scas
cmp
push
lcall
and
stos
sub
cwtl
inc
in
mov
mov
mov
mov
daa
shr
pop
adc
adc
lcall
pusha
pushf
jbe
xchg
sbb
enter
shll
ret
cmpsb
mov
add
cmc
sbbl
cli
roll
inc
js
fcom
ljmp
int3
divps
mov
jno
pop
addr16
ror
cmp
mov
sbb
test
and
in
loope
fucom
lret
jae
xchg
rcll
test
mov
mov
adc
cld
mov
cmp
mov
xor
inc
fs
aad
xor
pusha
mov
cmp
xchg
dec
es
and
adc
adc
lcall
fimuls
xor
sti
pop
sub
ljmp
lret
adc
out
rcr
movsb
cmpsl
adc
addr16
jle
and
fwait
inc
aad
fbld
add
fwait
sub
ljmp
int
mov
lods
pop
lds
xchg
xchg
sub
inc
xor
cmp
into
pop
add
arpl
and
xchg
roll
rclb
mov
fldenv
adcb
or
sub
push
jbe
mov
stos
idiv
int3
sbb
dec
std
jae
xor
jge
test
les
test
daa
ficoms
adc
dec
test
addr16
cmp
or
test
jecxz
fxch
jbe
push
push
dec
ret
test
xchg
sub
adc
out
lcall
xchg
scas
add
out
mov
aam
sbb
mov
mov
stos
and
mov
xchg
adc
mov
xchg
mov
mov
popa
test
xor
pop
pop
adc
jno
mov
lds
mov
clc
orb
mov
int
dec
add
dec
jp
ss
mov
mov
mov
push
and
inc
and
repnz
or
enter
xor
mov
mov
xlat
sbb
add
mov
dec
ljmp
or
mov
cmp
sbb
push
dec
adc
inc
hlt
aaa
stc
jecxz
xor
xchg
inc
mov
adc
adc
dec
ds
mov
sahf
imul
das
mov
cmp
clc
fisubrs
mov
mov
xchg
xchg
xor
in
xor
pop
test
pop
jne
xchg
push
and
ljmp
pop
enter
mov
sbb
les
jmp
sbb
cmp
pop
pusha
mov
js
pop
xchg
add
js
cmp
push
test
inc
mov
cmp
or
adc
cwtl
in
sbbl
popf
icebp
inc
fsubs
pop
testl
sbb
mov
sti
inc
incb
loope
jo
jmp
ret
stos
pop
inc
int3
dec
dec
arpl
enter
push
mov
loopne
lds
push
imul
lcall
adc
daa
push
ds
adc
je
pop
lock
add
adc
shr
ret
outsb
mov
popf
mov
movb
adc
ja
pop
popa
sub
popa
loope
fidivrl
popa
push
xchg
in
dec
mov
loope
sbb
and
loopne
loope
jne
mov
dec
cmp
mov
sub
in
bound
fstpl
push
leave
cmc
scas
gs
ds
pop
fildl
pop
pop
cmp
sti
es
lock
cmp
cs
scas
int
ss
scas
lret
jo
pop
imul
pop
gs
mov
add
add
sub
cltd
pop
xor
in
popa
sti
sbb
ds
add
sbb
andl
mov
pop
in
cmp
out
sbb
jl
cmp
ud1
mov
scas
jbe
mov
iret
test
jno
xchg
sbb
push
scas
sbb
shll
cmpsl
push
orb
inc
loope
sbb
faddl
push
lea
jmp
repz
addr16
mov
add
sub
mov
jmp
in
jmp
dec
inc
out
and
add
ds
movsl
mov
cmp
cmp
call
and
push
pop
sbb
lock
add
and
push
mov
sbb
jmp
dec
test
fdivp
push
ret
aad
test
popf
mov
and
in
in
mov
in
jnp
and
pop
outsl
and
sub
ja
jl
scas
daa
jmp
adc
lods
jmp
mov
out
dec
loop
dec
sub
mov
push
pushf
in
clc
jmp
rolb
mov
nop
int
inc
pushf
mov
int3
jo
push
push
sti
shl
imul
mov
jbe
inc
push
andl
pop
hlt
fnstsw
cmp
sahf
jo
mov
cmp
fcoms
xchg
mov
nop
mov
xchg
es
sbb
mov
les
xlat
push
xor
sub
test
dec
add
jmp
or
mov
adc
ficomps
rorl
jg
push
jo
push
sarb
pop
fwait
nop
push
jmp
dec
es
sti
jbe
fwait
and
pop
cmp
cmp
clc
push
dec
pop
call
mov
scas
movsb
ss
xlat
xor
sbbb
and
fwait
and
cmpsl
xor
pop
pop
or
push
adc
push
xchg
icebp
arpl
ret
fs
sub
add
sbb
xlat
lock
in
jno
dec
xchg
pop
adc
fstps
mov
mulb
ljmp
fistps
xor
in
fadds
xchg
in
pop
pop
mov
out
or
bound
pop
mov
mov
fcomps
mov
jbe
pop
aam
adc
mov
inc
mov
pop
or
xor
jno
mov
dec
repnz
cmp
scas
push
sbb
loopne
jmpw
in
lea
out
mov
push
xchg
out
gs
xchg
andl
cld
mov
shrb
mov
test
test
cmp
and
ret
dec
add
in
dec
loopne
mov
dec
fcoms
cmc
push
lahf
shll
xchg
push
imul
xchg
sub
int
testb
mov
jl
xor
cmc
bound
mov
sarb
lret
inc
jns
add
test
sbbb
inc
test
push
ret
fisttps
movsl
push
push
dec
sbb
dec
or
mov
aaa
sti
movsb
into
pop
sahf
insl
sub
and
lret
imul
xchg
and
jbe
scas
and
cld
pop
push
dec
repz
aam
push
push
mov
imul
xchg
sbb
xchg
das
aas
insb
mov
nop
andl
jmp
cwtl
cmp
mov
daa
push
js
mov
mov
pop
pop
mov
dec
std
iret
aaa
cld
iret
xorb
call
cmp
jl
mov
xchg
js
icebp
add
push
lahf
lods
push
mov
pop
xlat
ja
cmp
bound
fcomps
sub
lods
inc
loop
push
xchg
mov
pop
cmp
sub
push
push
push
jl
insb
xor
mov
cmpsb
movsb
mov
fists
sub
xchg
or
sbb
imul
xchg
mov
cld
dec
cmc
pop
jecxz
push
scas
push
lods
cmp
mov
out
push
pushf
jnp
in
or
xchg
sbb
sbb
lods
or
sbb
mov
push
pop
data16
into
push
jmp
data16
out
popa
out
push
data16
call
fsub
lods
add
movsl
adc
inc
xchg
rcrl
jo
dec
jo
mov
icebp
test
lock
dec
insb
js
pop
mov
pusha
cmpsl
push
and
fidivrs
sub
call
push
adc
xor
dec
jb
hlt
loopne
mov
dec
jne
mov
lods
and
xchg
pop
add
mov
shlb
call
add
or
push
data16
lods
loop
movsl
in
rolb
push
stos
sti
pop
push
loop
add
mov
ret
aad
imul
lea
pop
std
sub
loop
pop
lds
mov
push
lcall
sub
aaa
loopne
mov
pop
stos
sbb
mov
or
inc
pop
add
jl
fists
cmp
sub
mov
adc
mov
and
dec
mov
push
mov
pushf
mov
dec
cmc
sbb
jle
in
fsts
in
pop
push
int3
push
add
sbb
mov
inc
mov
jns
mov
mov
jp
mov
ror
pop
xchg
pop
int3
sub
arpl
dec
sbb
lods
mov
add
inc
out
test
adc
mov
mov
enter
divb
xor
and
popa
js
dec
add
or
ret
inc
scas
iret
xor
popa
xchg
dec
pop
xchg
cltd
fmul
cmp
mov
sub
insb
cmp
popf
ret
dec
sbb
sbb
fcomp
cmp
ret
or
arpl
orb
daa
dec
inc
inc
sub
aam
aaa
outsl
or
or
andl
icebp
int
pop
inc
int
xor
icebp
outsl
ss
les
out
iret
jns
push
and
sbb
repnz
rcrl
add
and
xor
daa
cs
pop
andb
or
out
dec
jg
mov
inc
jbe
test
out
and
jmp
loope
mov
enter
lcall
pop
pop
movsb
pop
js
stc
jle
xlat
push
pop
pop
push
or
dec
sbb
push
test
aas
mov
mov
jb
push
iret
mov
inc
repnz
jb
dec
les
push
mov
loopne
nop
inc
sub
popf
in
pop
or
test
cmp
mov
stos
ffree
push
ds
or
mov
sbb
mov
in
or
dec
ds
add
rol
jae
fnstsw
pop
inc
sub
cmp
mov
scas
add
mov
pop
mov
push
aas
inc
setge
sbb
xchg
movsb
test
add
shrl
jnp
ja
rorb
jae
mov
lea
out
movsb
xchg
xchg
ss
lock
mov
pop
jne
mov
rcrb
mov
test
int
stc
shrb
xor
jp
test
mov
add
and
sub
xchg
cwtl
lret
in
or
mov
jge
ret
lret
inc
aad
xchg
mov
inc
popa
jg
mov
push
ret
addr16
xchg
cwtl
add
shlb
mov
cmp
mov
aaa
xchg
test
xor
lret
aaa
mov
cmc
inc
ds
mov
outsb
push
sar
out
loope
call
ret
ljmp
fiaddl
push
aaa
dec
pop
in
in
sub
cmp
ds
sti
jle
imul
fwait
mov
les
decl
mov
insb
mov
sti
mov
jge
ja
add
rol
pop
xlat
fdivrl
xor
sub
out
mov
push
aad
loope
mov
jnp
bound
xor
shlb
jl
insb
out
jg
movsb
dec
faddp
jns
scas
pop
insl
inc
ret
cs
pop
nop
xchg
push
cmp
loope
adc
mov
loop
mov
jecxz
sbb
imul
add
cmp
or
add
iret
sub
jmp
ss
scas
jbe
enter
or
xor
xor
jp
push
mov
ljmp
stos
lock
ror
mov
add
fldt
fs
push
leave
jl
sub
xchg
shlb
xchg
pop
and
fistpl
push
or
jo
sub
lea
mov
sub
int3
adc
jo
dec
mov
xchg
inc
popa
sub
adcl
sbb
nop
nop
idivb
jno
pushl
dec
fcmovne
movsl
cli
leave
adc
sub
mov
pop
mov
pushf
mov
pop
pop
enter
test
pop
mov
js
mov
and
mov
and
xchg
stos
mov
or
mov
and
mov
pusha
push
cmpsb
mov
lret
add
mov
lds
sbb
sbb
xchg
repnz
and
gs
add
cmp
pushf
arpl
dec
xchg
push
mov
or
cmp
mov
pop
jecxz
jmp
mov
fdivr
jno
movsl
aaa
pop
jge
mov
shlb
aas
or
insl
mov
jnp
leave
movsb
mov
push
scas
push
sahf
sahf
push
pop
test
and
fbld
dec
cmpl
mov
mov
scas
mov
cmp
inc
cli
add
pusha
xchg
enter
inc
sub
out
jo
cmp
adc
fistpl
enter
cmp
lahf
sbb
pop
imul
neg
movsb
fisubrs
les
jo
add
inc
add
xor
lods
aas
ja
fwait
mov
in
or
bound
lds
es
ljmp
fldenv
push
cwtl
inc
push
mov
iret
inc
xchg
jl
and
je
and
out
cmpl
push
in
mov
test
mov
leave
dec
das
mov
jecxz
sub
mov
les
aaa
ja
add
test
out
arpl
push
inc
pand
push
dec
jno
add
sub
jns
in
and
dec
mov
jb
call
jae
ret
mov
sub
jp
jbe
jp
add
imul
fdivp
aad
imul
sbb
scas
inc
repz
push
mov
dec
pop
mov
push
inc
jnp
sub
inc
addr16
ret
faddl
push
lods
mov
adc
pushf
cmp
sub
push
push
or
in
adc
enter
xchg
scas
jae
cmp
jmp
insl
fidivrl
or
xor
loopne
mov
dec
daa
xchg
sti
xchg
xor
sbb
imul
mov
ds
rorb
js
aas
mov
push
sub
xchg
mov
pop
out
pop
out
in
xchg
imul
xor
jmp
das
and
ret
mov
bsr
push
xchg
imul
dec
and
pop
ror
gs
dec
and
pop
lods
std
mov
mov
stos
push
mov
das
sbb
fiadds
or
cmp
jb
mov
adc
adc
xchg
repz
icebp
loope
pop
incb
dec
cmp
hlt
or
stc
repz
popf
fs
lret
mov
push
adc
adc
pop
leave
rcrb
insl
jns
and
xchg
rolb
or
xchg
mov
loopne
and
or
xchg
rcrl
iret
jb
push
add
insl
jmp
push
xchg
cmpsb
jns
out
addr16
fmul
mov
pop
gs
insl
lods
mov
xchg
scas
fucom
xor
add
inc
cmpsb
lods
and
dec
out
add
pop
adc
outsl
cmc
es
adc
mov
and
cmp
pop
addb
je
frstor
mov
movsb
or
cltd
es
cmpsb
ret
sbb
js
hlt
xchg
mov
sub
cmp
or
jle
call
pop
xor
add
std
fs
jecxz
jmp
lods
cs
jmp
repnz
xchg
add
cld
icebp
dec
sti
sub
mov
rcl
je
icebp
pop
sbb
daa
inc
jmp
aam
cmpsb
js
jb
repz
test
push
mov
sarl
xorb
or
aas
cmp
dec
fldt
mov
scas
xchg
fstpl
lods
nop
mov
scas
icebp
pop
push
fisttpl
jns
cs
lret
aam
bound
stc
jb
jl
mov
mov
or
sbb
scas
jns
cmp
lret
lret
aad
cwtl
js
mov
testl
scas
lea
push
adc
lcall
aaa
sahf
popf
cmc
xchg
test
mov
in
dec
xorb
xor
aaa
xorb
mov
inc
mov
dec
pushf
mov
and
mov
xchg
sbbb
jg
cmp
mov
pop
out
into
int
jp
jne
xchg
test
ret
es
adc
stos
lret
enter
sbb
add
fwait
imul
mov
out
cmp
mov
sub
insl
mov
xchg
mov
lcall
arpl
call
call
out
push
adc
or
fcompl
cmp
mov
inc
dec
jecxz
cmp
icebp
mov
sbbb
mov
out
adc
call
dec
nop
push
xchg
sti
clc
shrl
subb
and
fiadds
shl
in
roll
adc
addl
or
and
push
dec
sarb
pop
ss
dec
and
mov
cmp
xor
sbbb
inc
pop
loope
or
push
and
fwait
mov
repnz
or
adc
sub
int
sub
insl
push
inc
lcall
and
fsubp
movsb
push
or
ja
cli
lods
cmp
xor
lcall
inc
mov
test
sbb
sbb
nop
mov
cmp
or
int3
inc
sbb
dec
xchg
stc
xor
lahf
fidivrl
xchg
fldl
dec
imul
fidivrl
sub
popf
pop
cmp
cmpsl
int3
mov
jne
push
sbb
dec
push
stos
dec
aaa
repnz
jbe
mov
aas
pop
test
repz
scas
jle
dec
pop
frstor
lret
std
add
in
ret
fnstenv
pop
dec
dec
dec
repnz
incb
std
sbb
lods
sbb
je
clc
ret
nop
in
cmpsb
gs
cs
loop
flds
sbb
or
mov
mov
or
jmp
sub
shrb
out
jle
mov
cmc
rcrl
sbb
mov
push
and
xor
dec
aas
sbb
jg
loop
xchg
fmull
inc
mov
shlb
or
popa
lret
call
jo
into
out
nop
pop
xor
ds
cwtl
dec
lcall
test
inc
adc
lret
rorl
push
testb
cmp
addr16
enter
aaa
leave
jmp
xchg
mov
cmp
dec
xchg
mov
jns
pop
add
push
sub
xorl
dec
jge
das
mov
ljmp
mov
inc
mov
andl
xchg
iret
cltd
dec
adc
stos
and
leave
push
mov
loopne
inc
add
jns
je
push
jmp
sbb
inc
cli
xchg
repz
jmp
push
jb
mov
fstpt
dec
in
insl
pusha
fsubs
fistps
out
ficoml
pop
mov
pop
les
mov
mov
jecxz
nop
loopne
aas
loope
fsubl
lret
mov
jp
lret
inc
cmp
shll
lcall
push
dec
push
lea
addl
pop
mov
dec
outsb
lods
ret
sahf
cmpsl
cs
shll
cmp
fcoml
ret
int
mov
call
out
or
outsl
aaa
add
dec
inc
xchg
mov
push
jl
sbb
cs
scas
xor
mov
aaa
icebp
inc
icebp
aad
xor
sub
jl
inc
inc
inc
xor
cmp
xchg
sbb
call
arpl
aas
push
push
js
jmp
pop
es
cmp
sub
xchg
cmp
test
sub
test
mov
leave
test
in
lds
cld
inc
or
mov
adc
xor
inc
mov
jle
mov
ror
push
adc
mov
sti
xor
leave
cmp
in
pop
mov
sbb
jecxz
adc
fldcw
insb
fwait
and
or
sbb
mov
subl
inc
add
push
decl
jge
pop
dec
dec
mov
cmp
dec
cmp
mov
sbbl
dec
sub
or
adc
push
dec
out
outsl
cmp
push
mov
lret
push
int3
sbb
cs
popa
cpuid
add
repz
cmc
jae
test
out
fwait
push
and
inc
shll
out
mov
cmp
cmpsb
jg
data16
shr
or
repz
xchg
inc
hlt
lods
stc
xchg
comiss
outsb
push
in
outsb
mov
pop
lock
jno
mov
fcomp
imul
fmuls
push
jae
popa
mov
enter
mov
mov
add
mov
and
or
adcl
loopne
inc
adc
pop
mov
rolb
jmp
in
insl
sub
xchg
mov
pop
adc
push
cltd
in
add
xchg
cmpsl
les
int
and
mov
pop
mov
lock
sarl
bound
ss
in
mov
les
jo
jnp
sti
outsb
sahf
cltd
or
movsb
test
enter
push
pop
daa
lret
in
dec
xchg
push
mov
inc
shrb
or
ss
sbb
in
lds
clc
inc
mov
hlt
bound
cli
pop
pop
adc
pushf
pop
xchg
xor
push
es
add
dec
lods
sub
xor
lcall
jecxz
lret
add
add
cmp
sub
sbb
cs
xchg
inc
sahf
repnz
int3
sub
xchg
sbb
ret
mov
pop
ja
cwtl
push
aas
pusha
lret
mov
or
lods
mov
jbe
ja
push
call
dec
cmpsb
mov
scas
push
or
repnz
mov
insb
mov
shlb
mov
inc
incb
je
out
push
clc
dec
in
lret
mov
pop
cwtl
movsb
and
lret
in
add
xchg
call
jbe
push
mov
lea
jle
ds
push
sbb
mov
inc
sti
xchg
arpl
int3
iret
lret
subb
aad
mov
outsl
adc
mov
mov
mov
jmp
or
cmpsb
mov
sub
mov
test
and
sub
int3
xor
js
stc
pop
dec
fsubrs
sub
xchg
negb
shlb
ret
jnp
sub
push
aaa
pop
divl
inc
jbe
lods
notb
mov
lahf
mov
cmp
cmp
sbb
adc
mov
push
cmpsl
cmp
andb
stos
push
je
lcall
mov
add
adc
scas
jns
sbb
mov
jle
clc
rcl
sub
repz
and
pop
out
jl
cmp
test
sub
insl
adcl
fidivrs
push
push
jecxz
mov
mov
sarb
push
leave
test
xor
aas
mov
mov
mov
int3
pop
jmp
jecxz
cli
sub
xchg
aaa
int3
nop
scas
testl
inc
popf
inc
shrb
xor
push
mov
pusha
loopne
or
nop
enter
arpl
jg
shlb
add
stc
je
dec
adc
int3
cli
jne
dec
in
mov
fistps
sub
lock
cmp
pop
or
xor
adc
cmpsb
cmpsb
aaa
movsl
dec
test
je
ret
adc
and
pop
or
sub
xchg
jo
xchg
mov
icebp
mov
mov
mulw
cmp
test
cs
xor
out
nop
sub
popa
sub
xchg
scas
dec
scas
adc
adc
movsl
mov
cld
inc
add
lcall
fwait
popa
pop
or
xchg
jge
mov
mov
outsb
pop
mov
or
inc
jno
cmp
push
in
inc
cmpsb
push
inc
xchg
or
pusha
mov
cmpsl
call
inc
popa
rcrl
dec
ds
xchg
or
fiadds
inc
jp
gs
jg
push
cwtl
mov
jae
inc
cmp
pop
cmp
adc
and
repz
sub
mov
and
push
dec
or
pop
mov
mov
sahf
jno
push
fsubl
push
orl
enter
inc
data16
and
iret
fnstsw
in
push
sub
clc
scas
mov
pop
idivl
shrb
shr
jge
mov
adc
fcomps
push
pop
test
dec
lcall
out
lcall
mov
push
and
mov
test
in
sbb
jp
arpl
sub
mov
sub
sbb
loopne
or
pushf
sbb
push
sbb
repnz
mov
pop
ret
cmc
insl
notb
movsl
pop
aaa
gs
inc
inc
rclb
scas
jmp
fidivrl
cmc
mov
dec
push
mov
stos
mov
dec
sub
aad
mov
xchg
lea
push
lret
dec
sbb
lret
push
sub
mov
call
cmp
bound
in
loope
mov
jo
jecxz
xchg
in
test
fisubl
xor
mul
inc
popf
push
lahf
call
sub
push
jo
jecxz
add
jle
mov
adc
dec
repz
cs
inc
mov
add
sub
scas
es
inc
lret
mov
in
lds
adc
sub
jecxz
decb
xchg
and
test
sbb
sbb
fcmovu
sar
mov
xchg
xor
leave
push
xor
lahf
or
cmpsw
imul
mov
icebp
mov
in
dec
fdivl
addb
cmpsb
repz
mov
pop
mov
rcl
sub
mov
xor
sbb
sub
xor
xor
out
xchg
fcomps
fadd
fistps
dec
sbb
lahf
out
mov
pop
mov
fwait
pop
cmp
icebp
ja
clc
out
cltd
ds
mov
xor
jno
cmpsb
or
dec
shrb
mov
push
push
stos
scas
int
xorb
adc
dec
sub
sahf
inc
add
rcrl
and
inc
fidivl
sub
ficompl
scas
aaa
adc
mov
sub
pop
jge
cmp
ds
jae
repz
add
std
xor
outsl
sahf
mov
lret
push
dec
out
es
dec
aam
rcrl
gs
test
mov
rorb
push
lock
mov
mov
dec
xchg
lock
mov
sub
jp
daa
xchg
js
out
loop
bswap
xor
mov
push
inc
out
jno
daa
mov
fiaddl
push
ds
jecxz
xchg
push
mov
pop
xor
sbb
pop
adc
stos
pushf
cmp
mov
lods
jnp
sbb
in
jge
shlb
hlt
sub
fwait
mov
mov
mov
fwait
movsb
jns
mov
and
sbbl
add
addr16
ret
sbb
jae
je
icebp
cmp
ret
pop
scas
data16
jecxz
push
mov
xchg
andl
mov
mov
mov
test
xchg
mov
add
loope
out
mov
roll
scas
push
push
int
dec
out
out
inc
call
imul
push
outsb
pop
xor
sti
fnstsw
push
xor
cmc
xchg
sbb
fs
mov
xchg
mov
pop
mov
mov
mov
xchg
in
cli
xchg
lds
aas
pushf
jecxz
mov
clc
xor
jecxz
jl
ja
cmpsb
ljmp
shrb
neg
or
int
push
addr16
mov
aaa
pop
aas
push
sbb
test
adc
cmp
or
jbe
jo
or
mov
lcall
insl
push
gs
xor
mov
jg
inc
pop
hlt
xchg
sti
fsubrl
dec
pop
and
cmp
dec
popf
or
les
add
fmuls
dec
sub
mov
mov
in
popw
mov
mov
pop
cmp
cmp
rorl
cmc
jb
lahf
imul
shrb
and
mov
lds
mov
adc
sbb
inc
dec
sub
inc
decb
and
mov
jae
and
cmp
movsb
lea
js
xchg
adc
dec
adc
into
ret
out
jmp
add
dec
es
push
or
dec
lret
dec
pop
pop
push
aaa
xchg
jno
push
js
fmull
testb
out
cld
adc
mov
xchg
ds
and
and
push
lahf
mov
pop
cmp
sub
mov
adc
and
lock
or
bound
add
push
sti
cmpsl
scas
push
aad
adc
arpl
pop
pop
and
mov
mov
push
cli
sub
fimull
sti
push
or
mov
and
push
int3
inc
imull
jo
mov
fcom
jbe
jno
je
loopne
xchg
jb
adc
and
mov
in
aad
push
and
sahf
data16
mov
mov
nop
xchg
not
loopne
cmp
lret
ljmp
cmc
xor
jecxz
mov
push
fstps
inc
hlt
push
mov
add
mov
outsl
je
cmp
and
dec
test
and
add
cltd
int
xor
setbe
addl
out
push
mov
dec
xor
stc
imul
mov
adc
sbb
test
mov
aam
aam
test
and
data16
and
sbb
iret
bound
scas
mov
adc
sub
repz
xchg
cmp
push
int3
nop
dec
push
xlat
jp
in
sub
out
aam
nop
push
add
lds
das
repz
movsb
mov
ds
or
leave
stos
inc
repnz
jbe
mull
popf
or
jle
cmpb
push
sti
push
dec
mov
ja
mov
adc
push
sbb
adc
cmp
mov
adc
in
daa
jecxz
lods
sub
sbb
notl
mov
lahf
adc
movsb
loop
or
pop
xor
pop
pop
jge
in
mov
lret
pop
push
fsubs
dec
push
icebp
flds
nop
cmp
mov
sub
push
insb
cld
mov
and
call
cmp
cli
lret
mov
push
sahf
mov
not
lods
jns
adc
nop
dec
mov
jae
mov
loope
outsb
xchg
dec
ret
sarb
in
fsts
mov
adc
mov
inc
int3
pushf
xchg
dec
mov
imul
fimull
filds
mov
mov
mov
jo
xchg
xchg
mov
mov
mov
xchg
dec
sahf
sarb
adcl
sbb
push
xchg
lds
push
test
pop
aam
cmpb
dec
dec
int
in
xchg
adc
repnz
je
pop
mov
or
std
mov
imul
sub
dec
cs
add
pushf
pusha
jne
xor
lock
pop
lods
jae
lods
push
das
outsl
xor
cmp
add
into
jns
and
pusha
mov
cmc
xor
cmp
sub
stc
loop
movsl
ja
dec
cmp
or
inc
aaa
lods
or
jbe
fs
dec
adc
mov
test
mov
aam
gs
sbb
xchg
mov
dec
jg
in
add
int3
pop
adc
sub
outsl
fwait
lock
sbb
or
outsb
jg
pop
cmp
gs
mov
and
xor
out
mov
imul
stc
xchg
cmpsb
mov
jns
jp
push
pop
pop
js
pop
xor
filds
clc
dec
scas
mov
sti
ret
cmp
ret
push
cmp
xchg
cmp
movsl
add
inc
test
adc
movsb
inc
fwait
mov
aam
js
test
dec
js
dec
add
leave
aaa
jmp
pop
mov
pop
clc
dec
dec
or
jecxz
jl
cmc
fisttpll
iret
sbb
fwait
loop
xor
imul
dec
roll
mov
mov
inc
stos
insb
loop
imul
adc
mov
int3
mov
jmp
out
mov
mov
int3
stc
addr16
or
or
cmc
in
sti
rcr
clc
adc
cmpsb
fs
jl
shlb
icebp
lock
jle
mov
lock
shl
movsb
mov
lods
pop
jp
push
and
mov
cmp
sbb
hlt
js
dec
loope
outsl
mov
cwtl
int
stos
push
sub
dec
xchg
xchg
lret
fisttpll
sbb
shl
out
dec
out
ret
rorl
mov
jnp
xchg
add
mov
jno
lock
inc
dec
icebp
in
mov
pop
rcll
mov
mov
jecxz,pn
fsubp
stc
cmp
push
mov
xor
push
repz
imul
dec
inc
dec
mov
adc
add
test
push
fidivrl
icebp
jae
push
imul
add
ljmp
cmpsb
les
pop
push
rcrl
test
imul
cmp
fistpll
jle
divb
pop
mov
inc
cmp
jge
mov
cmp
push
ds
inc
inc
pop
inc
lcall
or
movsl
xchg
sub
iret
outsl
lock
mov
scas
ret
lcall
cmc
pop
outsb
cmp
aad
xlat
addr16
mov
cmp
bound
test
push
dec
in
orl
adc
xor
aaa
add
sti
or
cmp
jle
add
mov
out
inc
or
mov
inc
mov
mov
add
daa
inc
push
mov
push
inc
sbb
and
daa
mov
repz
inc
dec
cmp
and
push
inc
insb
ret
cmpl
popa
xchg
mov
or
mov
add
xchg
cmpsb
movsl
pop
popl
mov
pop
sti
jnp
mov
push
xchg
loopne
adc
add
push
movsl
dec
mov
mov
hlt
test
and
movsb
dec
into
enter
bswap
int3
adc
je
dec
pop
xchg
js
dec
test
jp
add
mov
mov
aam
xor
push
test
xor
dec
movsl
aam
repz
sub
push
mov
mov
stc
ljmp
jns
cmpsl
sahf
inc
lods
xchg
jno
dec
popa
xor
adc
add
cmp
cmpsl
jns
cmpsb
fistps
stc
ljmp
xor
aaa
or
mov
push
lret
sti
aas
loopne
jecxz
dec
cltd
mov
mov
mov
js
repnz
dec
dec
push
test
add
outsl
imul
xchg
movsb
hlt
leave
xor
ficompl
addl
jge
add
jp
jmp
psadbw
out
cmp
jecxz
in
jbe
xchg
mov
repnz
push
sbb
xlat
stc
testb
xor
data16
fisubl
dec
stc
mov
adcl
mov
in
mov
and
cmp
mov
and
mov
mov
pop
push
xchg
fnstcw
dec
push
test
mov
dec
dec
mov
adc
lods
shrl
je
push
outsl
sar
sub
xchg
inc
or
negl
sbb
jbe
and
push
fucomip
subl
test
adc
mov
pop
dec
dec
add
push
adc
enter
in
dec
jl
iret
mov
cmp
mov
dec
jbe
and
js
hlt
in
fwait
or
arpl
nop
pusha
das
push
jge
push
cli
inc
cwtl
pop
jecxz
cmpsl
add
loopne
mov
xchg
mull
jae
aas
iret
int3
scas
in
xor
leave
and
in
xor
pop
pop
mov
repnz
aam
inc
sbb
sbb
ret
jbe
sub
xor
cs
mov
push
cs
mov
mov
cmpsl
dec
push
ds
dec
mov
out
test
aam
jecxz
sbb
or
leave
cmc
dec
push
xchg
sbb
xor
sarl
and
adc
popf
xchg
inc
jo
push
js
push
insl
inc
fldenv
inc
dec
jae
mov
adc
push
xchg
test
addb
adc
mov
sub
or
xchg
imul
pop
pop
lret
jbe
and
inc
ja
enter
mov
adcb
rcll
dec
std
fldl
fiaddl
push
xchg
push
add
sbb
in
dec
xor
push
fs
in
mov
dec
push
mov
int
cmp
push
sti
jne
ret
push
cmp
icebp
push
repz
dec
or
cmp
cmp
add
xchg
mov
push
dec
jbe
jae
std
cld
ficompl
fadds
popa
sub
mov
push
frstor
movsb
lds
mov
cmp
es
jecxz
push
push
jb
outsl
lcall
jno
xor
addr16
mov
pop
outsb
jl
xchg
cld
pop
lret
sti
and
movsb
fisttps
fsubl
dec
sbb
inc
hlt
daa
in
and
pop
pop
jne
popf
jmp
cmp
sub
aam
jl
outsl
data16
sub
repz
scas
subl
imul
faddl
imul
lahf
leave
loope
mov
cld
pop
out
adc
mov
adc
mov
in
sbb
jmp
dec
inc
in
subb
push
mov
and
pop
pop
xor
jno
lret
aaa
fnstsw
out
aaa
in
es
inc
ret
aas
cli
adc
jne
cltd
sti
inc
fnstsw
jno
add
mov
or
adc
stc
test
cmpsb
push
xor
or
jb
sbb
mov
loope
popf
fistps
cltd
add
pop
adc
dec
shll
mov
stos
add
mov
mov
fistpll
mov
outsb
movsb
popa
nop
movl
faddl
aas
xchg
pop
push
fsubrl
and
pop
popa
jae
dec
mov
push
mov
push
jnp
shrl
xor
out
cmpsb
imul
and
push
add
lods
mov
fldt
in
ds
add
ror
test
add
in
or
les
sub
mov
inc
in
std
add
out
push
out
cmpsl
push
mov
jl
dec
mov
mov
xor
jae
cmp
jns
xchg
jo
in
mov
xorl
lahf
jno
add
das
int
inc
push
jae
mov
mov
push
dec
sbb
into
mov
dec
push
xor
or
add
inc
or
dec
mov
fbstp
lret
jecxz
cs
imull
out
mov
pushf
pop
ds
xlat
jbe
lret
je
xchg
fs
sub
gs
arpl
repz
mov
dec
dec
cmc
fisttpl
xor
push
push
scas
inc
push
cmp
addr16
lahf
ljmp
mov
shr
mov
cmp
aaa
test
jmp
fsts
adc
mov
jnp
pop
sbb
popf
aam
nop
test
cmp
inc
pop
pop
test
inc
int
loop
push
sbbl
in
cmp
les
pop
push
in
out
and
mov
jp
mov
cmc
xor
mov
scas
bound
iret
lods
mov
mov
int3
pop
adc
aaa
push
fnstsw
pop
sti
ljmp
icebp
loope
mov
enter
sbb
jmp
insl
data16
cmp
cmpsl
fidivs
leave
sub
stos
in
loope
mov
sbb
fcoms
out
or
mov
sbb
stos
das
push
sub
aam
jbe
imul
ljmp
mov
adc
pop
push
mov
push
push
aas
pop
adcl
aad
adcb
sbb
sbb
rorl
dec
mov
cld
jns
shrb
outsb
mov
shrb
mov
jb
bound
push
lahf
mov
adc
out
pop
mov
mov
repz
push
aas
lcall
adc
js
xchg
into
jo
lds
out
mov
into
cmp
cs
jne
dec
mull
ret
cmp
into
bound
pop
add
mov
gs
inc
das
mov
add
mov
inc
addr16
les
mov
pop
mov
jnp
out
ret
push
je
fsubl
or
and
stos
adc
xchg
loopne
in
pusha
sub
mov
and
mov
je
add
adc
dec
into
mov
push
mov
scas
bound
aas
jecxz
les
out
arpl
gs
inc
xchg
xor
loope
cmp
dec
mov
push
dec
fcomps
fwait
ja
insl
in
sbb
sub
ret
je
stos
cmpsl
cld
decl
xor
sub
xor
xor
jmp
movsl
sar
add
jp
sub
into
int3
stc
pop
sahf
pop
std
pop
adc
push
enter
int3
mov
ljmp
sub
int
inc
inc
jecxz
stc
mov
test
in
add
out
xor
adc
scas
xor
pop
mov
popa
rcrl
xchg
movsl
cmp
cmp
adc
imul
add
sahf
imul
test
aam
inc
sbb
adc
or
mov
jbe
pop
xchg
popa
out
movsl
loop
icebp
jns
add
pop
mov
popf
mov
adc
divb
adc
pushf
outsb
sbb
test
imul
mov
sub
mov
sbb
hlt
fsubs
pop
xor
xor
pop
cli
fs
xor
jg
add
sub
mov
loope
fidivrl
adc
sub
push
mov
test
clc
ficoms
incl
push
je
fsubr
in
mov
adc
sbbb
sub
and
pusha
dec
loope
or
bound
addl
push
add
lcallw
push
push
pop
sub
mov
xor
jecxz
mov
cmc
mov
popa
or
and
cmp
loope
push
out
inc
das
pop
pop
insb
and
mov
fstpl
add
int3
pop
and
inc
es
jnp
lds
mov
roll
dec
xor
loope
in
fwait
int3
in
and
or
sbb
popa
lahf
mov
aas
jl
mov
test
ret
std
leave
mov
and
imul
push
and
and
inc
mov
in
ret
xchg
into
push
testb
lds
fs
lods
popl
adc
scas
jbe
add
inc
cmp
rclb
sub
xchg
addr16
pop
lea
and
jo
nop
lds
es
cli
adc
sbb
imul
add
sub
mov
cmp
adc
shl
in
inc
and
int3
jge
es
xor
xor
xchg
loopne
shrb
adc
cmp
out
repnz
movsb
and
fildll
jae
fcompl
out
mov
lahf
dec
push
fs
jo
repnz
mov
leave
and
sbb
and
push
enter
arpl
repnz
jmp
rorl
sti
jo
es
in
xor
iret
jge
add
arpl
out
dec
mov
dec
lret
mov
jge
pop
out
aad
jno
outsl
out
mov
push
xchg
aas
pushf
or
mov
xlat
popa
pop
fstpl
sti
mov
daa
or
ret
mov
cld
jecxz
loope
sbb
xchg
pop
mov
fwait
movsb
jl
and
in
pop
xchg
dec
scas
add
mov
mov
xchg
movsb
xchg
aad
sti
cmpsb
and
push
rorb
orl
sub
cmpsb
mov
pop
xchg
movsl
lret
cmp
sbb
lods
out
mov
lock
jns
mov
stc
jnp
fstpt
fisttpl
dec
mov
xchg
xor
jns
nop
fldenv
not
cmpsb
jnp
lcall
and
mov
ss
pop
icebp
xchg
sbb
cmp
mov
lods
orl
mov
xor
out
sub
fmull
fadds
addr16
xchg
in
cwtl
or
jle
lock
dec
jns
fsts
stos
mov
add
inc
test
movsl
xchg
aad
popa
dec
mov
push
shrl
or
in
and
push
shl
pop
leave
and
xchg
cwtl
dec
cmp
or
dec
fsubp
cmp
add
inc
in
or
xchg
stos
ds
cmp
adc
mov
mov
xor
sbb
lahf
das
xor
hlt
icebp
out
test
loop
mov
stos
insl
in
cmc
shlb
aad
shl
ja
aaa
lock
mov
mov
pop
add
imul
mov
daa
in
bound
and
inc
jns
or
dec
sarl
cmp
xchg
jge
sahf
inc
aad
bound
js
sbb
in
jns
jl
mov
sar
test
das
fadd
in
inc
cmc
je
pop
insl
shl
push
sbb
imul
inc
jg
jo
lea
cli
sub
mov
add
or
loopne
daa
or
movsl
inc
mov
repz
out
xchg
dec
mov
push
fsubr
ljmp
sub
xor
clc
xchg
pop
cltd
or
adc
sti
adcl
ja
dec
sub
ja
mov
loop
in
mov
push
and
das
inc
dec
jmp
mov
repnz
or
dec
dec
mov
test
aaa
aad
push
sbbb
inc
lcall
movsl
stc
aaa
nop
cmp
ss
xchg
and
cmc
add
movntq
out
pop
cmc
out
jo
fwait
sti
push
pop
in
inc
ds
xlat
add
pop
push
inc
imul
mov
jmp
pop
scas
mov
or
mov
lds
addr16
mov
mov
mov
cmp
bound
xchg
aad
sbb
cwtl
jg
hlt
xchg
jge
push
pop
and
fsubs
jp
mov
pushf
mov
xchg
nop
mov
xchg
mov
enter
popf
fnstcw
fcmovu
into
dec
mov
enter
les
push
imul
lds
jle
sbb
dec
xchg
ficomps
imul
xchg
jne
and
fdivrl
and
jo
xchg
cwtl
push
in
mov
dec
fbstp
mov
bound
test
fucomi
gs
adc
cmpsl
das
cld
mov
adc
mov
cmp
mov
dec
or
fldt
test
mov
push
mov
into
addl
add
xchg
pop
fcoml
sahf
xchg
mov
les
shll
cli
add
in
jecxz
dec
into
sub
enter
push
push
pop
mov
loopne
inc
outsb
ja
cmp
inc
inc
fsubrs
lock
fstpl
add
jl
jb
call
inc
and
jb
cmpsb
scas
mov
mov
imul
scas
movsl
push
popf
scas
fisubrs
jle
inc
and
mov
mov
scas
leave
mov
dec
mov
jle
inc
out
add
pusha
std
jl
inc
adc
lret
pop
jge
adc
mov
mov
rorl
add
sub
mov
les
gs
mov
lea
pushl
mov
jae
aam
push
fsubrl
lods
xor
adc
and
sub
stc
xchg
adc
jl
cmp
aad
ret
js
and
cli
cmpsb
cmpsl
negb
rorb
dec
mov
mov
xor
test
dec
loope
insb
fistpll
inc
shlb
or
xchg
xchg
jbe
fnstsw
or
or
mov
std
stc
stc
arpl
rclb
into
mov
jecxz
jle
inc
pop
jle
loope
pop
scas
in
pop
or
xor
push
imul
lock
sti
mov
into
es
mov
out
push
xor
lods
inc
enter
push
lcall
mov
mov
jmp
fimull
mov
lcall
mov
lods
push
and
fwait
cmc
dec
shr
cltd
stc
cmp
imul
push
sub
adc
test
mov
pop
add
inc
test
adc
nop
icebp
xchg
xor
repz
mov
adc
sbb
dec
push
stc
sbb
xchg
push
dec
sbb
dec
pop
adc
stos
stos
jl
call
out
add
ja
jae
fincstp
jge
ret
pop
loope
fnstenv
sbb
mov
les
xchg
and
xor
sub
mov
mov
out
movsl
fidivrl
push
dec
or
xor
iret
push
xlat
mov
xchg
or
adc
fidivrs
push
dec
enter
adc
push
cmp
xchg
aas
xchg
arpl
aam
lret
gs
pop
lcall
mov
sbb
inc
cs
sbb
sub
mov
and
xchg
popl
out
bound
push
ret
add
adc
test
dec
js
or
fs
and
sub
arpl
mov
sbb
inc
adc
popa
in
sub
sbb
dec
mov
insl
cmpsl
into
xchg
gs
fucom
or
rolb
lods
mov
outsb
add
xchg
pop
sbb
xor
mov
jg
sbb
mov
call
dec
and
jae
jb
pop
mov
push
push
sub
xchg
outsl
mov
or
and
mov
mov
std
pop
push
cvtpi2ps
sub
lock
call
leave
jns
mov
mov
xchg
pop
cmpsb
mov
fldz
push
and
xor
repz
mov
addb
imul
mov
mov
add
and
pusha
xor
push
mov
xlat
filds
add
arpl
sub
xchg
mov
pop
clc
fsubr
ja,pt
and
sarl
es
outsl
inc
jne
adc
negb
mov
push
cmpsl
sbb
xor
in
ds
mov
enter
mov
mov
nop
shl
pop
stos
push
add
jnp
xor
mov
add
popa
push
mov
dec
shl
scas
or
test
xchg
push
xchg
dec
movsb
cmp
das
movsl
mov
pop
nop
xchg
mov
call
mov
mov
xor
std
jno
pop
fadd
cmc
push
js
lret
inc
cmpb
lret
std
and
testl
pop
lock
gs
out
sub
rorb
test
into
jle
sbb
insl
jg
or
jno
cmc
out
cltd
xchg
sahf
push
in
add
test
pop
cmp
nop
dec
mov
loopne
cmpsl
cli
sbb
xor
repnz
daa
sub
fldt
andb
scas
lds
test
mov
jne
popf
cmp
mov
dec
les
mov
lds
add
rol
loope
das
jnp
addr16
cmp
xor
idivb
sbb
sub
fsts
push
scas
loope
cmc
cmp
ljmp
cmp
lahf
das
cmc
dec
mov
fwait
add
repnz
jecxz
xchg
jo
aas
mov
cli
inc
cli
in
test
stos
inc
call
test
icebp
inc
jns
pusha
jns
pop
fwait
and
imul
movsl
jp
push
int3
inc
xor
jns
mov
and
in
into
loope
push
stos
fidivrs
mov
pop
lahf
out
outsb
sbb
test
jle
fs
aaa
clc
jecxz
push
or
addr16
mov
cwtl
pop
sbb
out
lea
mov
je
and
sbb
je
mov
xchg
mov
xchg
sub
lock
jecxz
mov
mov
jno
push
es
fldl
in
pop
aaa
into
cld
inc
mov
pushf
sbb
push
bound
movsl
test
xlat
aad
mov
sub
mov
packsswb
loope
cmpsb
pusha
xadd
mov
in
and
mov
std
add
mov
or
mov
adc
mov
mov
inc
cmp
pop
ss
das
jl
mov
cwtl
vunpcklps
push
cmp
fistpll
push
cmpsb
lods
fs
int
xchg
stos
pusha
sahf
fs
shr
rclb
or
pop
imul
jg
mov
aad
sub
jnp
ret
jmp
addr16
into
add
int
int3
hlt
xchg
inc
sub
fs
out
aaa
addr16
into
push
add
stos
inc
sbb
jns
jno
test
pusha
imul
int3
lret
cmovl
sub
shlb
stc
or
aas
add
push
shlb
xchg
fidivrl
int
pusha
jno
dec
mov
fs
repnz
shrl
bound
pop
rcrl
dec
lods
cmp
xchg
out
mov
inc
les
add
inc
xchg
jle
in
and
adc
pop
mov
popa
jne
xchg
nop
inc
faddl
mov
jle
nop
push
and
call
test
andb
mov
mov
adc
and
mov
add
out
lods
add
std
imul
inc
mov
or
fwait
xor
add
sub
and
in
dec
ljmp
cltd
mov
int3
cmpsb
ror
cmp
jbe
pop
add
jnp
mov
inc
jle
jge
repz
scas
and
jmp
mov
mov
es
ret
in
jne
aam
icebp
arpl
loope
inc
adc
adc
leave
xor
sbb
jl
in
mov
ret
inc
push
or
in
sub
sti
pop
sahf
or
pushf
mov
pop
sbb
or
pop
fisubrl
mov
insl
mov
jo
pop
mov
push
adc
sarl
in
and
sub
xchg
pop
test
mov
xchg
pop
cmpsl
inc
jmp
xchg
sbb
xor
sti
push
sub
in
sbb
mov
xor
inc
jmp
push
xchg
mov
ljmp
imul
sub
xor
mov
push
sbb
sub
xchg
cwtl
xchg
jno
decl
ds
dec
bnd
and
ret
xchg
jecxz
iret
outsl
xor
in
or
mov
repnz
or
lods
das
adcb
lcall
jne
sbb
mov
xchg
jno
in
loope
mov
cli
xchg
or
sub
adcb
pusha
das
je
adc
insl
daa
pop
sub
cmp
mov
mov
imul
mov
xchg
stc
xor
repz
ja
divl
ret
push
push
pusha
mov
clc
mov
jnp
shl
mov
xchg
mov
and
lret
or
sarb
out
push
jg
adc
jae
xor
cwtl
push
fnstsw
sbb
shlb
sub
popa
push
add
stos
sub
push
push
sbb
test
lods
mov
jne
push
push
lahf
es
nop
pop
fstps
andl
adc
call
pop
push
dec
sbb
sub
or
gs
xor
push
xor
xor
or
xor
shll
pop
mov
push
jp
or
pop
adc
adc
ljmp
lret
popf
adc
orb
mov
and
movsb
aad
in
rclb
or
mov
push
mov
cmp
ficompl
cmp
hlt
scas
lea
ret
imul
in
fcos
mov
inc
insb
test
outsl
inc
fs
outsb
shr
push
out
sbb
push
jae
sub
or
mov
lods
mov
mov
shll
and
dec
sbb
xchg
or
sbb
shrb
fsubrl
loopne
mov
int3
lret
inc
pusha
stos
shl
icebp
inc
push
loope
mov
gs
es
mov
add
idivl
xchg
neg
fldcw
ss
sub
lret
mov
in
jns
dec
leave
sar
je
cmc
dec
sub
test
shll
mov
adc
dec
hlt
xor
mov
sub
sbb
mov
add
cmp
popa
test
repnz
ret
mov
inc
das
cmp
jge
andl
push
fldcw
cmp
dec
or
inc
add
ss
cmpsb
push
pop
clc
sub
insb
or
dec
push
mov
shl
in
mov
roll
leave
shll
gs
out
test
push
enter
dec
mov
or
inc
or
push
call
insb
das
mov
dec
sbb
mov
cmp
aas
in
xchg
inc
repz
ficoms
xchg
jns
in
clc
shrl
testl
outsl
clc
sbb
cmp
pop
test
sbb
mov
clc
push
mov
or
arpl
data16
cmp
or
mov
jge
jns
dec
pop
dec
imul
repz
mov
ss
pop
ljmp
mov
in
cmp
cmp
iret
or
int
push
and
test
jns
pop
and
cmp
aad
xchg
mov
adc
mov
xchg
sub
jg
xor
imul
imul
mov
andl
mov
xor
push
jbe
mov
jg
test
push
cmpsb
jg
hlt
xor
dec
aad
mov
xchg
inc
clc
xchg
sbb
pop
mov
jp
or
jne
add
add
cmp
ret
lods
push
sti
mov
mov
xchg
push
mov
mov
jb
push
negb
pop
inc
mov
pop
xchg
pop
xchg
ret
xchg
cwtl
push
aas
or
dec
mov
adc
add
mov
rcrl
xor
mov
adc
ficoml
stos
popf
popf
xchg
xor
add
js
dec
fucomi
mov
shl
xchg
and
inc
pop
lcall
mov
pop
pop
mov
leave
mov
push
rcrl
notl
push
test
xor
es
jecxz
insb
push
ja
sub
out
jmp
jne
pusha
jecxz
adc
fs
cmp
xchg
popf
cmpsl
imul
cmc
and
idivl
mov
daa
sbb
pop
and
aad
shlb
mov
xchg
adc
push
fists
push
aaa
mov
std
jnp
leave
xchg
das
sbb
dec
into
test
in
gs
int
fnstsw
add
fdivs
loopne
fdivrs
jno
mov
xor
cmp
fcmovu
insb
sbb
jb
cli
pushf
es
add
dec
sbb
mov
inc
pop
adc
adc
pop
repz
call
movsl
ret
xlat
mov
xor
roll
cmp
das
or
mov
subb
adc
nop
sbb
xor
mov
push
subl
les
mov
mov
scas
lods
dec
or
test
imul
pop
inc
daa
out
cwtl
fdivrl
pop
add
sahf
lea
mov
test
ret
lahf
push
jg
push
dec
dec
lds
push
test
and
mov
xor
sbb
cltd
imul
stc
inc
mov
nop
pop
xor
popa
test
cltd
add
mov
xchg
out
xlat
mov
rorb
iret
lock
adc
stc
mov
daa
jno
sti
sub
xchg
push
push
and
adc
mov
sbb
push
ja
int
andl
mov
dec
sbb
les
shrb
push
les
mov
lods
push
or
in
sarb
dec
outsb
movsl
lea
mov
sub
mov
nop
dec
nop
adc
int
xlat
stos
ret
mov
shlb
jg
xchg
push
test
aam
jle
pop
lods
mov
inc
daa
sub
mov
stos
jmp
bound
mov
jns
add
fisttpl
jno
dec
psllq
lods
aam
imul
dec
bound
inc
sbb
das
ret
mov
push
inc
fidivs
ja
movsl
loopne
mov
dec
int
xlat
xor
and
dec
mov
repz
movsb
mov
pop
mov
push
ljmp
mov
push
popa
dec
mov
sub
xchg
add
adc
jl
das
pop
dec
pushf
shll
fwait
dec
sub
inc
mov
xlat
fisubs
data16
fstpl
jl
push
cmp
lods
jns
roll
push
imul
popf
fucompp
pop
mov
stos
popa
outsb
mov
int
cld
std
sbb
outsl
sub
pop
and
inc
repz
sub
or
sti
pop
cs
push
enter
imul
rep
popa
sub
xor
out
aas
shld
repnz
xor
iret
iret
mov
add
mov
jmp
jb
jge
cs
daa
cmp
scas
nopl
fidivrs
int
movsb
iret
dec
pop
insb
dec
xor
inc
sti
pop
incb
lahf
clc
fsts
call
add
fs
int
sbb
dec
dec
xchg
shlb
or
xchg
in
cmp
sbb
jbe
inc
inc
stos
movsb
inc
push
or
or
sti
inc
or
fsubs
jne
cmpsb
outsb
xchg
lock
mov
outsl
addr16
ds
orl
incb
jg
ds
lret
int3
shr
js
aas
test
or
das
testb
xchg
loop
jg
cmp
ss
mov
mov
or
xor
hlt
pop
or
dec
mov
stos
lds
repnz
push
dec
mov
ret
xor
cmpsb
cmp
inc
test
movsl
or
sub
addr16
in
repz
fnstenv
cmp
jnp
xchg
fwait
cli
dec
jl
subl
inc
jns
sub
outsb
and
sbb
cltd
jp
std
ja
dec
xor
lret
cmp
orl
push
adc
fwait
inc
push
sbb
mov
sbb
mov
or
shl
gs
loop
out
dec
in
icebp
push
repz
into
cs
jns
push
aad
js
mov
sbb
inc
punpckhwd
cmp
or
inc
les
popf
mul
lods
mov
pop
cmp
push
pop
push
inc
dec
lret
lds
push
mov
mov
sbb
lods
or
sti
push
jmp
andb
cld
jg
and
repz
fcompl
mov
loopne
dec
loop
cmc
int
aam
daa
add
xor
rorb
int3
hlt
insl
repz
cmc
jns
mov
in
popl
xchg
lret
mov
into
ficompl
fsubr
je
fs
jmp
adc
dec
divl
xor
imul
and
das
sbbl
dec
addr16
mov
or
sbb
adc
out
xor
cmp
sub
iret
cmp
mov
or
leave
mov
push
lret
imul
push
sub
repz
stos
pop
jns
dec
mov
arpl
hlt
popf
data16
add
mov
lahf
or
in
aad
pop
cld
icebp
sbb
scas
and
or
mov
or
subl
pop
int3
cmp
xorl
cmp
mov
pop
into
lahf
ficompl
dec
mov
cmp
dec
xchg
xchg
lds
bound
arpl
inc
inc
in
dec
ss
aas
pop
jge
inc
jnp
sti
popa
lret
imul
ds
fnsave
pop
std
popf
rcrl
add
nop
jmp
and
jae
lahf
jbe
adc
mov
pop
mov
xchg
shrl
or
xchg
gs
inc
add
sub
pop
test
sbb
sub
cs
xor
xor
fnsave
nop
inc
jecxz
pop
stos
xchg
sub
loope
data16
inc
mov
in
add
sub
sbb
mov
iret
xor
and
es
stos
push
stos
out
adc
add
loopne
je
call
push
popl
sbb
pusha
cmp
ljmp
loopne
and
add
mov
rcll
lea
add
sbb
lret
lods
mov
lea
cmc
mov
addb
imul
dec
scas
fcoms
push
lods
push
test
hlt
or
imul
icebp
pop
in
arpl
adc
or
pop
stos
xor
int3
inc
aam
adc
imul
icebp
rcr
dec
das
lret
imul
push
jbe
pop
fwait
je
mov
jno
arpl
adc
mov
pop
mov
cmp
test
sub
dec
insl
and
cmp
sbb
jmp
push
rorl
ret
clc
mov
pop
mov
sub
cmpsl
mov
mov
out
jae
scas
sahf
iret
cmpsb
push
jmp
push
mov
inc
push
scas
cs
sti
or
pop
outsb
sahf
jmp
jno
mov
gs
lods
fisttpll
fsubrs
push
sbb
push
fsubp
cmp
fucomi
mov
push
fisttpl
cmpb
cli
ja
mov
xchg
or
movsb
push
insl
andl
lods
mov
push
pushf
push
and
daa
add
loope
out
dec
mov
arpl
aad
xchg
inc
hlt
lea
sbb
sbb
test
add
icebp
adc
cmp
das
mov
mov
gs
jmp
inc
mov
shrl
dec
adc
push
add
inc
insl
mov
xor
hlt
fdivl
inc
mov
movsb
loop
cltd
mov
sbb
jbe
xor
fsts
fisubs
hlt
adc
sub
jb
lock
aaa
test
or
daa
push
daa
fnstcw
sahf
out
sbb
jge
js
cli
lea
fiadds
mov
inc
or
sub
pop
cmpb
push
or
sub
aam
das
sbb
xor
push
jle
dec
dec
inc
push
xor
sbb
add
add
ret
mov
or
pop
imul
int3
push
jbe
loop
push
inc
nop
cli
pop
lret
xor
jp
sarb
fdivs
cmp
mov
jnp
push
cmc
arpl
mov
mov
xchg
movsl
lods
add
mov
add
sub
movsb
in
insb
and
sbb
cmpsl
jecxz
addr16
push
sub
pop
sbb
in
mov
cmp
ljmp
mov
addr16
jno
mov
fisttpl
mov
jge
xchg
sbb
loope
dec
pop
dec
xorl
push
aaa
addr16
gs
xor
cld
adc
aam
out
xor
jle
mov
out
movaps
pop
loope
mov
lret
or
pop
out
cwtl
loop
jl
jecxz
sbb
adc
mov
adc
lds
add
stos
out
ret
push
loopne
cmp
inc
push
insb
mov
test
dec
popf
mov
popf
iret
or
push
dec
movsl
inc
or
adc
pop
pop
mov
jecxz
jbe
push
xor
push
dec
and
insb
adc
stos
cmp
add
ret
movsl
aam
cltd
mov
scas
sub
xchg
cmp
outsl
adc
mov
sub
ficoml
icebp
test
pop
xchg
jle
sub
test
inc
sbb
pop
xchg
jle
ljmp
adc
inc
cmp
ljmp
mov
cmp
sub
adc
inc
jnp
in
rcrb
xchg
popf
arpl
inc
mov
lds
sbb
or
jp
data16
xor
shll
dec
test
rorb
jb
cwtl
rcll
inc
test
xor
xchg
pop
or
faddl
stc
mov
sub
ja
and
fadds
cltd
mov
jnp
mov
mov
pop
or
ds
ja
int3
xorb
cmp
pop
pop
shll
imul
pop
aam
mov
scas
lock
fnsave
xor
sbb
push
mov
xor
xchg
xor
fucom
xor
cmpsb
mov
and
cwtl
in
inc
popa
pop
data16
jae
enter
and
sbb
out
and
sub
cmp
sub
mov
sbb
dec
mov
push
xor
std
jmp
loopne
mov
scas
fcmovnbe
or
dec
cs
data16
test
sar
jne
cmp
jecxz
leave
mov
sub
adc
dec
es
jmp
pusha
int
ret
xchg
xor
adc
inc
lcall
sbb
jmp
leave
xchg
xor
cmpsb
adc
jno
stos
add
loop
pushf
and
inc
arpl
in
lcall
jns
ss
imul
or
mov
repnz
pop
xlat
rcrl
imul
scas
outsl
sbb
mov
inc
ss
lds
fbstp
sub
mov
mov
out
loope
shll
sbb
cmpsb
aas
push
or
repz
xchg
es
aaa
sti
bound
mov
adc
outsl
roll
ss
pushf
or
inc
fiaddl
sub
add
jb
cwtl
int
cmpsb
fdivrl
andb
mov
in
aam
aam
mov
push
or
cmp
inc
sub
dec
filds
std
pop
test
sbb
push
lcall
lea
andb
xorb
jmp
cmp
sub
dec
popl
out
gs
mov
adc
and
xor
test
sbb
or
adc
xchg
add
mov
push
divb
cltd
adc
outsb
jns
fldt
daa
cmpsb
fadd
in
inc
add
in
adc
inc
mov
push
adc
ja
ret
mov
add
icebp
xchg
repnz
xor
leave
lods
adc
jg
out
pop
fwait
xchg
jne
andl
dec
stos
scas
mov
jns
inc
out
mov
dec
fldt
inc
loop
or
aad
outsl
adc
rol
test
addr16
jp
pushf
add
cmp
daa
cld
xor
mov
mov
mul
cmp
pop
pop
test
pop
xor
lea
sbb
popf
ds
in
addr16
ljmp
cmp
pop
dec
xor
cmp
inc
aam
cmp
jae
hlt
gs
xchg
insl
test
addl
push
add
xchg
jb
mov
inc
jmp
jae
cmp
mov
mov
ss
xor
add
test
rcrb
adc
jmp
daa
xor
xchg
mov
js
and
mov
inc
shlb
mov
inc
xchg
cmpsl
sub
loope
cmp
mov
add
pop
adc
xchg
xchg
dec
outsl
lock
jg
sbb
xor
cmp
mov
push
lea
pop
add
imul
shl
and
pop
mov
das
jl
scas
ss
cld
cmp
mov
lcall
mov
rcl
inc
popf
fidivrs
mov
inc
outsl
and
adc
sbb
das
pop
mov
jge
cmpsl
pusha
fidivrl
icebp
push
rolb
scas
loope
fmull
jmp
std
sbbl
and
mov
imul
mull
repz
and
jge
inc
xchg
ja
dec
scas
movb
or
out
out
mov
push
ljmp
push
ret
lods
fsub
fldt
pushf
jno
or
ss
hlt
push
cmp
mov
cmpb
arpl
sub
lds
dec
jl
pop
std
nop
jge
jle
outsl
adc
popaw
aad
lret
and
popf
aaa
dec
dec
jmp
sbb
mov
mov
sbb
in
xlat
dec
enter
fists
ret
and
popf
lds
xchg
or
mov
dec
iret
and
int3
lcall
fnstsw
insl
push
testb
dec
int3
or
out
inc
xchg
aam
test
in
sub
xor
add
loope
mov
js
mov
push
lret
jae
jmp
in
lea
fndisi(8087
shl
subb
imull
jl
ljmp
stc
and
sub
mov
inc
rcll
sbb
sbb
lods
mov
mov
mov
mov
xchg
jae
add
cli
dec
jbe
jge
lds
loop
push
or
dec
outsb
clc
imul
lds
add
into
jb
leave
fstpt
sti
fcmovnb
ret
mov
xor
xchg
jg
jno
movsl
mov
inc
test
sub
inc
sub
inc
mov
adc
rcrl
sub
addr16
pop
fimuls
push
add
ss
insl
cmp
imul
mov
add
out
out
fsub
stos
mov
mov
cmp
dec
xor
pop
push
or
int3
test
adcb
fincstp
sarl
fimull
xchg
jnp
aam
xchg
out
cmp
mov
jbe
pop
or
mov
or
adc
jp
mov
mov
pop
sub
mov
lret
inc
sub
dec
popf
jo
adc
in
jno
mulb
jge
test
xor
test
sbb
jb
cmc
jg
and
arpl
addl
fs
js
in
stos
shrb
loop
xchg
push
mov
lods
andb
adc
sbb
xor
push
pop
sub
sbb
xchg
fs
xchg
dec
rolb
stc
and
mov
fwait
stc
cmp
adc
mov
scas
fdivrl
add
faddl
and
adc
jnp
arpl
int3
pop
scas
lcall
pop
iret
adc
inc
scas
rorb
pop
ret
jbe
cmp
dec
gs
mov
pop
dec
insb
and
divl
xchg
icebp
cmpsl
inc
out
popf
mov
jns
cld
fistl
loope
mov
or
inc
add
cmp
inc
xor
jbe
loop
pusha
or
lret
out
incl
mov
lahf
mov
stc
ret
add
rcrb
enter
lds
call
loope
outsl
je
in
cmp
pop
pushf
sbb
mov
ret
add
pusha
notrack
arpl
ljmp
insb
dec
adcb
aaa
pop
out
or
in
rcll
out
cltd
and
mov
ret
lahf
cltd
lret
mov
fnstcw
outsb
fs
daa
pop
es
sub
int3
jbe
jle
enter
mov
jmp
sub
xor
push
mov
adc
cmpsb
and
mov
shr
add
xchg
daa
cmovp
sbb
dec
xchg
addr16
sbb
adc
sub
shlb
clc
cmp
and
mov
dec
gs
push
cmp
nop
lret
jl
dec
movsl
ja
cmpsb
push
or
ficoml
push
pop
into
leave
xor
insb
test
mov
movsb
test
movsl
push
repz
sub
sbb
mov
or
push
icebp
dec
add
test
arpl
sti
ja
mov
les
cmp
inc
movsb
push
mov
ficoms
xchg
sub
ds
mov
and
mov
push
jbe
adc
sarb
psadbw
call
hlt
das
cmpsl
push
repz
jno
iret
xlat
lret
adc
cmpsl
inc
pop
pop
mov
pop
lods
loopne
or
add
test
aas
ret
cld
iret
test
sbb
ljmp
or
inc
mov
cmpsl
push
stc
pop
mov
jne
xor
xor
fmul
dec
mov
bound
sub
scas
js
lods
pushf
cmpsb
xor
into
or
mov
xor
xchg
pop
ds
inc
and
test
and
scas
movsb
out
xor
outsl
popf
out
in
adc
fldl
movsl
fldenv
shlb
ss
lock
mov
xor
jns
pop
shrl
add
xor
inc
pop
inc
iret
mov
sub
xor
cltd
sti
cmp
dec
xchg
mov
sub
ljmp
lcall
test
cmpsb
out
jmp
cmp
inc
daa
xor
pusha
or
andb
dec
loop
mov
mov
mov
xor
imul
fisubrl
xchg
mov
stos
xor
cmpsb
and
pop
hlt
and
rclb
push
pop
rcll
lcall
out
cwtl
sub
cli
sub
pop
rcl
xor
xchg
xor
jne
xchg
push
das
pop
sti
jl
mov
mov
cmp
dec
loop
mov
push
aam
ficoml
mov
imul
or
mov
dec
push
scas
les
nop
mov
stos
out
popf
bound
jg
add
lret
mov
stc
pushf
cmp
adc
mov
sahf
das
push
mov
sub
stos
cli
into
pushf
mov
xor
xor
push
movsb
jg
add
mov
test
arpl
shrl
xor
cmpsb
clc
xor
es
test
push
mov
shll
sbb
push
add
and
sub
pushf
sub
sbb
cs
dec
fs
sub
add
push
enter
xor
jo
adc
jb
lock
orb
daa
dec
sbb
aam
ss
cltd
or
cmpsb
push
push
jbe
jg
je
cmp
mov
das
clc
mov
imul
jl
outsl
push
add
data16
dec
push
or
out
rol
cs
lret
sbb
pop
xchg
or
push
shll
inc
adc
dec
aad
mov
inc
leave
and
leave
inc
lock
loope
jbe
adc
cwtl
push
xor
das
test
iret
into
in
std
clc
inc
jge
jno
into
mov
ficoms
sub
mov
and
addl
sahf
pop
push
dec
cmp
cld
addr16
jl
repz
mov
out
push
das
ds
adc
das
loopne
sub
cld
dec
push
adc
gs
loope
aas
cmp
pop
lea
fwait
xchg
pop
lea
mov
int
cltd
repz
fcmovb
enter
push
and
push
pop
cwtl
fcompp
out
jae
in
mov
xchg
sub
fwait
dec
or
lret
mov
mov
repz
adc
ss
popf
lock
and
mov
addb
test
sbb
and
push
out
cmp
dec
sub
cmp
push
push
lcall
lret
xchg
push
jg
mov
push
flds
repnz
pop
sahf
gs
mov
fisttps
adc
enter
dec
jnp
adc
or
shlb
jbe
mov
sub
push
mov
lds
les
push
xchg
rcr
cmp
cmpsl
cmp
fbstp
cwtl
cs
aaa
pop
ss
xchg
add
outsl
push
adc
xor
lock
fstpt
push
jecxz
inc
lret
pusha
xchg
nop
data16
xchg
sti
popf
or
jbe
pop
xchg
lret
add
jno
add
pusha
add
adc
mov
pushf
cmc
xchg
xor
sbb
sub
xchg
ja
add
inc
push
add
xchg
icebp
mov
cmp
ret
jg
int
outsl
push
dec
loop
notb
xchg
sbb
pop
sarl
insl
fistpl
aas
pop
int
mov
rol
cmpsb
pop
int
imul
inc
rcrl
sbb
je
out
sbb
jbe
jno
out
push
mov
js
int3
adc
lods
sbb
push
rclb
xor
mov
push
pop
mov
cwtl
xor
mov
movsl
mov
add
aas
daa
pop
adc
lahf
pop
mov
mov
adc
sbb
adc
sbb
xor
mov
lods
push
xor
inc
jb
jmp
outsl
popf
aad
sub
jge
add
pop
and
adc
push
repnz
xor
push
cmp
xchg
ja
push
pushf
push
out
outsl
jecxz
sbb
scas
push
pop
cmp
jp
aad
xor
pop
lods
inc
sbb
lcall
int3
mov
dec
jbe
inc
jp
out
cmpsl
mov
add
jg
sbb
scas
add
mov
xchg
imul
adc
clc
sbb
bound
shl
adcb
inc
inc
cmpsl
testl
mov
mov
sbb
and
ds
pop
jge
cmp
or
repz
inc
pop
push
push
or
mov
js
movsb
lcall
xchg
sbb
dec
outsb
out
mov
in
aam
push
psllw
inc
push
lods
push
stc
sbb
pop
jno
push
mov
ljmp
lret
pop
pop
test
test
pusha
arpl
in
leave
in
push
js
inc
sbb
mov
testb
sub
fsubp
rcr
mov
mov
lock
xchg
jno
jmp
xchg
es
pop
cli
fwait
ss
xchg
xor
cld
in
fsubrs
cs
icebp
fdivrl
push
pushf
aam
pop
fucomp
enter
int3
pop
fdivrp
in
ja
in
call
enter
out
push
add
in
jmp
mov
mov
push
sub
push
les
lret
fcmovb
jge
adc
xchg
sbb
and
add
mov
dec
sub
dec
xchg
mov
lods
sbb
es
test
mov
icebp
pop
daa
push
lods
xor
inc
push
xchg
sbbb
adc
insl
in
sti
cs
inc
mov
and
inc
movsb
shll
mov
popa
pop
les
subl
rcrb
sbb
orl
fimull
mov
movsb
shll
cmp
fucomp
inc
sbbb
insl
mov
int3
xchg
pop
scas
mov
in
arpl
add
lods
popf
fstl
ljmp
icebp
mov
sbb
sbb
cmp
cmp
addr16
xchg
iret
shrb
dec
pop
adc
inc
ja
mov
sub
mov
pop
insl
adc
xchg
push
xor
jle
mov
xor
aad
cmp
lahf
xor
xor
jnp
sub
dec
rorb
aad
je
mov
fisttps
aaa
ret
mov
push
jno
clc
rolb
sbb
in
and
inc
pop
into
arpl
inc
loope
push
ljmp
mov
stc
jbe
or
jo
int3
xchg
arpl
push
cltd
cmpsb
xor
subb
loop
outsl
pop
or
dec
leave
inc
inc
jne
daa
inc
and
sbb
in
loopne
sbb
test
orl
popl
adc
sbb
addr16
es
gs
mov
sahf
and
cmp
frstor
hlt
xchg
cld
push
mov
shrb
push
add
jmp
or
mov
push
mov
lret
cmp
push
cltd
enter
into
faddp
aam
dec
inc
rorb
jbe
cld
je
mov
icebp
fildll
xchg
sub
test
fwait
mov
dec
add
cmp
fdivrs
jne
and
fcoml
sub
pusha
imul
fmull
adc
out
jno
femms
jge
mov
pop
testb
dec
test
call
addr16
push
mov
mov
es
int3
cmp
in
cli
iret
lcall
insl
push
jecxz
cmp
and
loop
or
cld
lock
insl
mov
mov
inc
insl
mov
fucom
mov
fwait
cmp
cs
addb
fcomps
add
or
sbb
mov
movsl
or
int
outsb
rorl
lds
pop
or
mov
xchg
mov
pop
adc
loopne
pop
int3
jl
ret
cmc
aad
mov
push
hlt
or
mov
mov
shll
xor
pushf
ljmp
lds
pop
push
repnz
mov
push
test
lahf
mov
loope
loopne
xor
dec
jne
loop
inc
jno
cmp
sbb
lods
test
dec
stos
xchg
ss
std
mov
sbb
dec
ss
rcll
sbb
mov
sbb
sub
scas
pusha
jns
fwait
mov
repnz
jecxz
xchg
cmp
shrb
mov
cmp
xchg
enter
femms
add
rol
sub
lds
mov
add
cmp
lahf
cld
fs
shrb
clc
out
fisubs
scas
imul
filds
inc
jne
lds
rol
pop
std
mov
lret
xor
ret
test
jae
sbb
push
mov
or
loopne
jp
out
push
adc
adc
imul
jb
jle
mov
push
sbb
inc
adc
xchg
cmp
ficoms
test
rclb
sub
xchg
sbb
fildl
or
cmc
pop
sti
mov
push
aam
in
mov
test
stos
or
push
shlb
bound
xlat
shrb
lea
jb,pn
outsb
fldl
mov
decb
arpl
rcll
adc
dec
shlb
dec
insl
ja
cli
or
lret
adc
or
add
mov
ljmp
ljmp
pop
mov
ljmp
rolb
daa
cwtl
mov
loope
popf
xchg
scas
mov
sbb
mov
std
decb
mov
stos
cmp
imul
and
sbb
adc
push
push
stos
and
outsb
je
cmpsl
fldl
mov
adc
or
cmp
fdivrs
ja
xchg
mov
cmp
mov
sub
rcrl
icebp
popw
icebp
mov
in
loopne
orb
movsl
pop
xor
inc
or
cld
or
dec
lcall
or
arpl
and
add
and
jae
pusha
aam
and
sbb
xchg
nop
fistl
xchg
pop
mov
mov
jae
in
enter
jmp
movsl
push
xabort
test
stos
outsb
pop
dec
and
mov
or
loopne
scas
aam
jmp
mov
popf
push
cld
ljmp
icebp
push
fmull
jno
inc
in
pushf
push
popa
jl
xchg
ret
xchg
or
cmpsb
mov
sub
mov
dec
and
pmaddwd
outsb
stc
push
inc
adc
mov
jne
adc
mov
and
dec
xchg
aad
fcmovb
pop
push
adc
sub
xor
outsl
aam
mov
int
inc
push
aas
out
repnz
out
loope
sub
dec
xchg
xchg
repz
adc
mov
push
mov
enter
stos
out
mov
repnz
es
rorb
fisubrs
mov
ja
daa
adc
xor
sbb
pop
test
ds
fisubrs
mov
xchg
sarl
mov
rcrl
movsl
mov
xchg
add
adc
mov
mov
repnz
cmpsb
jns
out
mov
outsb
dec
xor
ss
inc
imul
add
add
push
sahf
xor
out
dec
or
mov
inc
inc
repz
jg
loop
xchg
lock
aad
loopne
add
mov
mov
repnz
inc
lret
mov
scas
out
stos
push
rcrl
inc
icebp
mov
lock
mov
add
sbb
iret
push
and
jge
xor
mov
jl
and
jae
inc
sbb
mov
push
dec
out
icebp
dec
jmp
add
and
or
imul
mov
es
mov
fidivl
dec
sub
pop
fwait
inc
jg
test
es
movsl
stos
js
jp
loop
in
adc
xor
inc
cmpsb
pop
out
daa
pop
xchg
cmp
mov
mov
mov
sbb
testl
lods
lret
pop
aaa
mov
jno
in
xchg
movsb
out
jp
daa
ret
xor
in
push
fisubl
shll
mov
inc
xchg
dec
fstl
xchg
adc
subb
mov
dec
jb
xchg
jg
cmpb
inc
inc
rcrb
pop
std
add
inc
jmp
loope
jge
xchg
jne,pt
and
hlt
push
int3
jnp
inc
and
out
mov
add
and
mov
fwait
lods
mov
sahf
inc
or
cmc
rclb
movsl
add
mov
test
cmp
add
in
xorl
cld
cmp
xor
dec
jno
jge
pushf
adc
jb
inc
call
jne
mov
push
add
fsubs
push
fs
lea
mov
pop
cmpsb
xor
mov
movsl
xchg
push
fldl
pop
jae
fmuls
pop
dec
push
fs
sti
or
icebp
cli
and
out
dec
enter
cmpsl
inc
gs
nop
mov
add
mov
inc
mov
movsl
inc
sti
sub
xor
testb
pop
in
sub
jle
xor
orb
and
adc
rclb
je
mov
push
pop
popf
or
inc
or
iret
pop
inc
in
insl
ja
ljmp
mov
fimull
adc
push
pusha
sub
out
es
iret
dec
in
mov
cmpsl
inc
add
sub
enter
xchg
lods
rcrb
std
in
adc
sub
leave
add
push
lods
jp
mov
ss
stos
lock
and
or
mov
in
mov
add
popf
cmp
cmpsl
cmpsb
data16
rcll
jl
fisttpl
cmp
adc
add
dec
bound
aaa
ficompl
mov
aad
shrd
frstor
repz
out
adc
xchg
pop
jle
pop
rcrl
out
int
test
or
and
iret
dec
rorb
lret
out
mov
rcll
cmp
and
dec
in
push
ss
sbb
mov
xchg
lcall
ss
inc
pop
inc
xchg
cltd
out
test
sbb
shlb
mov
push
pushf
out
fisttpll
cmp
jmp
lahf
lock
mov
in
mov
push
jns
ret
bnd
adc
lahf
push
jp
push
fucomip
lods
in
andb
mov
in
std
xor
or
inc
push
mov
notb
dec
adc
xchg
outsl
enter
push
jnp
repz
add
loop
lods
mov
ret
cld
lods
jle
cmpsl
adc
test
xorb
arpl
sbb
cmp
inc
fsubs
popa
xchg
scas
mov
mul
pop
arpl
mov
out
movb
and
jne
imull
xchg
ret
das
mov
cltd
inc
orb
aaa
popa
xor
lret
pop
cltd
mov
push
and
gs
outsl
sub
mov
push
mov
fnstcw
into
push
jg
jno
xchg
loopne
shr
vpmacswd
jne
outsb
inc
mov
in
mov
mov
adc
mov
jg
mov
xor
scas
pop
clc
notl
scas
aam
xor
cmpsb
add
xor
out
xor
adc
lea
xor
subb
jns
mov
stos
pop
jl
or
fistps
je
xchg
adc
adc
add
dec
stos
ret
jl
in
rcr
and
pushf
fstps
outsl
loop
das
lret
movsl
pop
mov
and
xchg
dec
int
sahf
ja
cld
push
mov
adc
fmull
cmp
out
or
fwait
pop
cltd
loop
and
pop
ret
fwait
outsl
aam
enter
sub
dec
cmp
sbb
sti
mov
cs
inc
or
pusha
pop
dec
lcall
mov
int3
or
sbb
mov
popa
aam
and
frstor
sbb
dec
test
lods
mov
in
fistl
or
sub
aad
sbb
push
cmp
fs
mov
pop
fstps
mov
lods
mov
mov
lcall
into
in
out
sbb
gs
test
out
xor
inc
ret
pop
xlat
data16
data16
inc
int
xor
cmpsb
fistpll
leave
sbb
pop
add
cmp
mov
cmp
cmp
out
mov
test
pop
xchg
fadds
or
stc
mov
aad
rolb
adc
scas
mov
or
imul
dec
lods
dec
loop
cmp
xor
in
or
jb
sbb
outsl
add
out
test
ja
mov
gs
push
or
clc
pop
lea
fnstenv
mov
jbe
or
out
outsl
out
pop
adc
dec
fs
pop
jmp
call
or
adc
and
mov
cmp
test
xchg
into
mov
jmp
adc
inc
dec
xchg
sti
movsb
mov
loopne
mov
lcall
mov
arpl
inc
std
pop
pop
jl
push
fs
inc
lret
and
mov
imulb
arpl
loope
xor
imulb
fisubs
imul
dec
dec
push
or
push
pop
fs
mov
lea
sti
out
mov
cmpb
cltd
scas
fcomps
cwtl
ss
dec
inc
mov
sbb
xor
je
loope
push
mov
dec
jp
xchg
stc
std
and
xchg
ss
outsb
stos
cmp
sahf
lea
jecxz
inc
mov
repnz
mov
mov
mov
into
cmp
mov
add
je
daa
lds
cmp
je
mov
dec
into
mov
jmp
ss
je
scas
mov
mov
loopne
cmp
mov
and
in
test
add
sbb
je
popf
sub
dec
add
pop
lahf
cmp
inc
dec
lret
sub
add
test
push
cmpl
fsubr
add
insb
sub
sbb
add
or
fisttps
das
mov
ret
ljmp
mov
push
jnp
adc
stos
sbb
dec
vmwrite
xchg
mov
jmp
pop
loopne
pop
out
cld
fsubrs
sub
jg
flds
jmp
mulb
out
int3
jg
cmp
jnp
jbe
test
xor
call
mov
stos
cmpsl
unpcklps
xor
dec
cs
imul
jnp
scas
sbb
shll
shll
mov
ds
fidivrl
in
adc
ja
xchg
in
sub
inc
stos
clc
sbb
aas
xchg
push
insl
cltd
cli
dec
push
push
jmp
cld
mov
cmp
inc
aaa
inc
in
lcall
sub
ja
imul
out
repz
imul
imul
xchg
jge
cmpsb
and
mov
mov
loopne
push
stc
mov
clc
jmp
pop
movsl
xchg
jae
in
fldt
add
sarb
push
or
cmp
insb
shlb
sub
inc
mov
std
movsl
mov
push
nop
jo
push
and
mov
mov
sti
mov
scas
push
mov
xchg
xor
popa
out
out
lods
fisubs
fisttps
xchg
aas
push
cmp
inc
sub
frstor
aaa
mov
fdivrs
mov
frstor
and
and
sub
js
loopne
cwtl
out
ja
or
icebp
and
popf
sbb
cmp
scas
inc
sahf
add
adc
mov
xchg
aaa
dec
push
dec
inc
shlb
or
call
daa
cmp
dec
xchg
ret
or
xchg
cmp
and
jge
pop
sub
jae
idivl
cmp
repz
jo
addr16
in
xchg
mov
mov
sti
roll
leave
pop
test
pop
push
pop
test
mov
or
pop
in
andb
xchg
in
repz
pop
mov
fdivl
es
movsl
test
cwtl
mov
cmp
inc
ror
xor
xchg
lds
push
bound
dec
test
dec
jg
adcl
shll
in
xor
popa
push
int3
out
or
lods
cs
or
push
cmp
adc
adc
push
rcll
cmpsl
xor
adc
loope
rep
cmp
gs
lret
push
mov
sbb
sub
jo
rclb
repnz
std
adc
lods
pop
scas
inc
and
mov
pop
pop
sahf
sbbb
je
and
lret
loop
xor
cmp
jns
jo
bound
fidivrs
test
cmc
mov
dec
cmc
sarl
push
push
out
mov
aam
lret
sub
cmc
cwtl
outsl
in
and
enter
scas
movsb
jae
and
push
mov
pop
js
dec
jp
sbbb
xor
jecxz
in
pop
in
jmp
push
inc
cltd
xchg
lahf
push
cmp
mov
pusha
dec
adc
xchg
pop
data16
push
shrb
xor
adc
imul
mov
add
sub
cmp
push
inc
xor
xor
addb
into
push
imull
lods
test
push
rorb
loope
jno
shrb
sbb
fnstcw
xor
rolb
test
rcrb
xor
sbb
xor
jo
out
dec
dec
push
movsl
mov
mov
aaa
or
add
jbe
lods
jb
addr16
dec
jo
push
daa
mov
imul
mov
repz
imul
push
jbe
xchg
mov
lods
xchg
hlt
dec
cltd
sbb
stos
in
divl
mov
mov
or
mov
scas
pop
call
jp
xchg
sti
dec
mov
outsl
out
out
mov
jbe
jp
push
inc
or
andb
cli
pop
lods
inc
adc
and
and
std
xchg
insb
stos
shll
xchg
repnz
sahf
outsb
inc
fists
jae
jmp
push
repz
mov
dec
int3
inc
aam
push
jbe
mov
popa
mov
sbb
sub
lds
fmuls
xor
mov
xor
inc
xchg
sub
sahf
adcl
dec
sbb
fisttpll
inc
nop
adc
sbb
or
or
pop
fistpll
das
call
loope
movsl
jns
xor
repnz
dec
in
ret
lea
fdivr
ds
dec
in
pop
pop
pop
cltd
xor
add
inc
fsubrs
shll
sarb
pop
xchg
adc
xchg
fisttpl
cld
pop
and
xlat
mov
loope
push
cmpsl
sub
aad
ja
pop
and
push
push
in
mov
add
popf
dec
ljmp
jge
push
push
iret
es
jbe
jnp
out
movsb
xchg
cld
out
inc
mov
in
xchg
mov
cs
js
loopne
adc
jne
cmp
popf
enter
adc
ljmp
sbb
fcmovbe
push
ljmp
pop
pusha
jg
cld
cld
inc
lods
imul
call
and
das
push
std
xchg
divl
pusha
inc
loopne
loopne
inc
daa
out
xchg
push
ja
outsl
hlt
sub
xlat
adc
adc
sbb
adc
ljmp
das
movsb
ljmp
adc
xchg
adc
sbb
gs
inc
das
js
bound
andb
out
pushf
adc
xchg
test
decb
fwait
idivb
pop
cmp
fistps
sarb
mov
aaa
out
rorl
sarl
popa
dec
mov
iret
es
cmpsb
fstpl
jp
mov
jno
mov
xchg
andb
xor
sub
dec
test
ret
mov
push
jno
lea
add
fisubs
dec
fcmovnu
sub
add
cld
xlat
sarb
dec
adc
out
test
inc
mov
pop
popa
xchg
movsb
sbb
es
lret
mov
xor
int
sahf
mov
inc
aaa
sbb
fcomps
arpl
sbb
nop
ret
push
es
inc
lea
or
stc
mov
cmp
lea
push
js
in
out
cmp
shlb
fsubrl
xchg
into
pop
fimuls
mov
sbb
ljmp
dec
ljmp
mov
cmp
add
push
inc
push
add
leave
mov
pushf
lret
imul
popf
mov
js
loope
or
das
sub
xchg
mov
repz
xor
rcr
or
jmp
dec
sub
push
repnz
mov
jmp
lods
xchg
adc
xorb
jecxz
dec
add
daa
sub
adc
xor
or
call
out
stos
mov
add
int
cld
push
inc
sub
sbb
aaa
icebp
pushf
insb
mov
sti
and
out
inc
fdecstp
xchg
call
and
xor
repnz
ficompl
pushf
ret
ja
push
and
mov
push
sub
fisubrl
pop
pop
loope
jg
mov
sub
mov
dec
int
add
aam
arpl
jb
andb
cmpb
js
sbb
sti
rcrl
iret
lcall
insl
loopne
mov
dec
je
rolb
or
mov
dec
mov
adc
loopne
sbb
repnz
inc
sti
scas
call
bound
insl
scas
xchg
mov
shl
outsb
decl
arpl
sbb
loop
fsubl
mov
cmpsb
adc
sbb
int
dec
addr16
xor
vmovapd
fisttpl
adc
lret
test
pop
mov
cmpsb
lea
xor
adc
pop
mov
in
mov
xchg
mov
mov
cmp
mov
stc
cltd
sub
add
mov
out
aam
test
mov
and
mov
jnp
push
daa
sahf
and
fwait
les
fs
mov
mov
push
push
call
dec
cmp
pop
lret
hlt
mov
repz
xchg
insl
mov
daa
or
mov
push
scas
pop
add
mov
add
imul
test
dec
test
sub
jne
mov
and
mov
or
rclb
pushf
jg
xchg
jecxz
mov
pushl
pushf
push
mov
or
adc
icebp
push
cmp
xchg
or
adc
out
rclb
sbb
stc
aam
xchg
dec
sbb
adcb
add
out
xor
sbb
idivl
hlt
lret
call
push
sbb
xchg
add
push
fists
mov
xor
daa
push
sahf
mov
aaa
mov
push
or
mov
and
fisubs
sahf
or
sub
adc
test
adc
aad
stc
imul
cmc
fbstp
xchg
insb
pop
inc
adc
cmp
mov
stos
lock
outsl
ret
inc
or
pop
jmp
xchg
int3
enter
sub
dec
repz
sbb
andb
leave
scas
test
cmp
adc
push
popa
pusha
add
or
pop
dec
xchg
pop
movsb
dec
lcall
repnz
fs
ljmp
ss
jno
sub
test
pop
in
cmpsb
pop
ret
lds
xchg
xor
push
into
in
je
jl
fcomps
fwait
ja
mov
int
xor
sbb
in
pushw
arpl
filds
mov
sub
pop
adc
sarb
repz
xchg
or
fwait
out
push
pushf
addr16
out
fbld
adc
mov
test
push
lods
movsb
push
sub
push
lcall
adc
ret
mov
pop
inc
addb
push
lods
dec
inc
cwtl
es
cmp
movsl
push
aad
ret
cwtl
mov
test
pop
fs
push
cltd
or
mov
lea
inc
and
xchg
xorb
pop
lea
and
stc
mov
mov
adc
jecxz
and
add
adc
movsl
outsb
shl
mov
sub
enter
sub
mov
and
loopne
xchg
bnd
pop
inc
fisubrs
stos
orb
sbb
xchg
scas
cwtl
adc
adc
leave
sub
test
nop
mov
mov
outsl
push
aam
das
das
out
loope
adc
add
cs
push
adc
pusha
in
es
scas
outsb
push
push
jbe
jp
mov
xchg
cs
push
insl
or
cmp
cmp
test
push
mov
jp
arpl
lds
lods
and
add
jbe
push
adc
es
pusha
sbb
xchg
or
inc
sti
rcrl
mov
sti
sahf
mov
mov
cmp
mov
or
out
xor
cli
dec
pop
out
lods
mov
mov
adc
popf
mov
int
cmc
bound
lret
fnsetpm(287
cmp
mov
insb
and
ror
mov
call
js
or
clc
mov
jb
insb
and
scas
test
daa
inc
outsl
pop
adc
pop
mov
inc
push
sbb
sbb
daa
xor
push
cli
mov
push
scas
sub
pop
lods
xor
mov
push
mov
jle
lret
mov
lahf
pop
sub
lret
jmp
xchg
int
xchg
sbb
inc
cmp
call
add
inc
ljmp
inc
outsl
leave
push
xor
test
mov
sbb
or
jg
pop
mov
push
and
inc
xchg
push
pop
pop
jb
popf
mov
mov
mov
pop
and
xor
pusha
and
mulb
bound
push
pusha
dec
daa
pop
bound
loope
fwait
dec
xor
add
bound
jl
std
fdivrl
loope
xchg
aad
enter
push
stc
pop
add
lods
inc
movsb
dec
mov
les
rolb
adc
lods
pusha
fwait
pop
sub
and
xchg
mov
icebp
movsb
xchg
mov
mov
movsl
mov
or
mov
mov
cwtl
inc
sbb
scas
mov
jbe
jb
fidivrl
cmpsl
sbb
outsl
xor
je
nop
popf
dec
add
mov
nop
mov
sbb
aaa
sub
ljmp
pop
in
loopne
rorb
inc
mov
or
mov
add
xchg
mov
push
add
insl
stos
adc
cld
add
into
jbe
xor
fcomp
jbe
inc
sbb
sub
pop
mov
out
sub
push
pop
into
bound
and
fsubrs
adc
and
pop
fs
fimuls
push
mov
insl
fdivrp
iret
pop
rcll
cltd
aaa
inc
adc
mov
imul
aam
and
jmp
test
sub
lods
adc
mov
mov
mov
xchg
mov
xor
jns
or
pushf
or
movsb
push
jp
lock
fnstenv
mov
lret
xorb
mov
arpl
lret
cwtl
mov
testl
and
subb
inc
mov
xlat
mull
arpl
es
pop
dec
mov
xchg
push
push
or
aad
mov
fwait
scas
mul
gs
mov
je
jns
cmp
test
imul
daa
cmpsb
add
insl
push
push
stos
mov
int3
aaa
fisubl
cmp
push
aad
sub
mov
jae
jno
cmpsl
repnz
jmp
shlb
mov
out
pop
imul
std
push
jo
popa
loope
mov
imul
js
leave
mov
pop
jno
mov
icebp
stos
or
lahf
rol
adc
hlt
sub
pusha
cld
test
hlt
pop
dec
in
imul
call
dec
mov
push
es
sbb
mov
les
jl
add
sbb
xor
das
mov
lods
sub
fnsave
xor
mov
and
cltd
xchg
xor
inc
mov
faddp
push
stos
shl
dec
sbb
mov
mov
jbe
xchg
lret
xchg
push
in
push
xchg
sub
jge
mov
mov
sti
push
jmp
arpl
ljmp
fnstenv
mov
mov
xchg
mov
mov
lea
or
pop
pusha
mov
xchg
inc
sbb
ds
jle
fnsave
andb
enter
jg
mov
scas
xlat
imull
mov
int
in
cmp
inc
push
ss
jb
xchg
fstps
imul
addr16
sbb
insb
int
div
loop
or
xor
imul
mov
xchg
es
and
mov
rcr
inc
jae
xor
mov
or
bound
inc
enter
insl
addr16
call
mov
adc
mov
sbb
jp
ficoms
xchg
jecxz
push
fmuls
out
xor
xor
pop
pop
shlb
xlat
mov
xchg
je
stos
cmp
sbb
mov
hlt
xchg
dec
pop
cltd
sbb
ret
add
pop
adc
fcoml
mov
test
xor
popf
js
repz
inc
pop
cmp
pop
xchg
ja
movsb
mov
out
mov
or
std
mov
ja
push
sbb
push
fwait
insb
lret
test
jb
subl
scas
in
push
scas
ljmp
pop
push
mov
ss
cmpsl
int
les
aad
push
jnp
test
push
data16
jae
adc
ja
xor
cmp
xor
nop
and
add
subl
stos
filds
hlt
call
cmp
notb
and
sbb
outsl
mov
push
or
sub
mov
or
imul
lock
sahf
aam
sub
adc
movsb
int
scas
push
jne
imul
or
sbb
and
shlb
and
shl
clc
pop
in
popa
hlt
and
jge
lret
das
pusha
dec
idiv
xchg
pop
ja
push
clc
loop
cltd
ret
dec
cs
cmp
pusha
mov
sbb
cmc
add
push
pop
and
testl
dec
sbb
mov
or
test
outsb
dec
loop
sub
jns
scas
cltd
cmpb
add
repz
outsb
sub
ss
jl
mov
inc
inc
or
jae
inc
mov
jecxz
lahf
mov
andb
mov
sbb
jno
setae
mov
xchg
or
cltd
movl
push
push
aaa
shll
mov
sub
fs
jo
ljmp
ret
pop
icebp
int
jno
ss
add
test
cli
mov
push
jl
popf
inc
sbb
in
imull
negb
cmp
stos
and
hlt
movsb
ds
cmp
pop
inc
sbb
mov
loop
cmp
inc
mov
inc
xor
loop
adc
sahf
testl
pop
sub
pusha
in
add
sti
cmp
aam
nop
jbe
adc
inc
pop
jnp
adc
out
and
mov
cmpsb
jbe
adc
push
imul
aam
jmp
out
cmp
jo
or
fisubl
fcomps
lahf
insb
lods
int3
outsb
fsubrl
es
fnstsw
cmp
sbb
and
out
daa
mov
rorl
pop
sub
leave
mov
out
dec
jo
mul
push
lock
xor
mov
jg
into
add
mov
das
outsl
xor
movsl
pushf
imul
lret
mov
inc
adc
pop
mov
and
repz
filds
lea
dec
icebp
xchg
lahf
mov
in
popf
push
pop
neg
mov
add
jg
xchg
and
xchg
push
ds
pushl
dec
sbb
sub
mov
fisttps
es
fstps
mov
int
shrb
out
push
stos
cmp
repnz
aaa
ljmp
cmp
cmp
pop
cs
jl
and
add
aam
shll
xchg
push
imull
mov
jb
push
sub
mov
sub
scas
push
add
je
inc
fwait
dec
push
push
push
out
inc
dec
int
mov
cmpb
or
jp
ds
mov
inc
sar
inc
ss
jnp
jno
xchg
cmpsl
mov
das
pop
test
jns
jge
mov
push
xchg
jmp
jnp
loopne
es
mov
cmp
push
push
mov
test
xchg
sbb
mov
in
cli
cmc
adc
pop
les
xchg
jl
pop
sub
xor
pop
mov
xchg
dec
or
mov
jl
lods
push
aas
das
jmp
inc
aam
cwtl
xor
into
jb
push
stos
add
mov
push
movsl
pop
cwtl
sbbl
orl
or
addr16
test
adc
shrb
dec
add
testl
inc
loop
sbbl
or
shl
ljmp
aam
push
pop
mov
fstl
fldt
add
repz
outsl
daa
sarl
fmuls
xor
imul
sbb
inc
imul
jns
cli
pop
cmp
push
out
sub
mov
shlb
xchg
imul
and
mov
xchg
and
mov
inc
shlb
add
mov
mov
xchg
jg
test
mov
scas
xrelease
mov
imul
push
imul
out
cmp
push
jmp
out
out
outsl
push
stc
stos
xor
lret
clc
mov
inc
sbb
sar
pop
push
push
imul
or
in
mov
movsl
pop
jmp
cmc
jp
add
neg
into
daa
lahf
sbb
jo
clc
mov
inc
ljmp
leave
lcall
adc
push
xchg
or
dec
dec
shr
dec
push
push
outsl
adc
lret
fists
mov
movsl
add
pop
mov
xor
xor
xorb
adc
lock
clc
int3
mov
scas
push
jecxz
mov
pop
pop
jno
outsl
stc
xor
cli
jno
sbb
insl
inc
cmpsl
aas
arpl
ljmp
lahf
xlat
pushf
in
shl
jo
xor
adc
jbe
mov
cmpsl
xchg
cmpsb
ficompl
lgs
or
in
lcall
stos
cmp
scas
cltd
jnp
xor
dec
mov
mov
loopne
aaa
and
cs
or
in
gs
ret
adc
sub
adc
pop
xchg
call
inc
push
repz
jns
call
imul
icebp
loope
mov
sbb
inc
fcomps
inc
add
ss
dec
aam
leave
sbb
xchg
jp
icebp
outsl
add
mov
push
add
ret
xor
xor
icebp
sub
shll
adc
fcoml
test
fstpt
push
int3
fwait
sbb
test
fcmovbe
inc
sub
gs
adc
inc
push
xchg
add
shll
or
enter
and
je
ljmp
arpl
mov
ret
mov
xor
rcll
cmpl
stos
sti
mov
shlb
or
xchg
adc
inc
lods
bound
or
cmpsl
mov
or
mov
and
scas
hlt
mov
loope
cmp
data16
popa
sarb
frstor
sub
popa
jp
adc
inc
fs
daa
test
mov
xchg
and
fwait
sbb
fiadds
rcrl
fs
ss
push
fisttpll
fbstp
arpl
add
adc
outsl
add
std
mov
push
out
out
into
mov
in
pop
pop
repnz
push
mov
rolb
add
adc
int3
es
inc
adc
icebp
push
fidivl
sbb
ds
out
ljmp
xlat
inc
mov
adc
mov
into
and
movb
stc
not
fisttps
and
sti
in
fwait
fs
adc
enter
cltd
test
clc
cmp
in
push
scas
inc
insl
ret
mov
cld
xchg
ja
cmp
ret
ss
shl
test
dec
lcall
jae
push
pop
jno
mov
lahf
jp
jbe
xchg
rcrb
cmp
fcoml
cs
jmp
cmp
inc
jecxz
mov
cmp
jnp
test
js
arpl
ja
test
pcmpeqb
es
fsub
xor
adc
jae
mov
inc
lea
jmp
pop
cwtl
inc
mov
mov
lds
mov
shlb
mov
iret
fbstp
aaa
pop
xchg
clc
sub
sub
dec
clc
out
push
pop
outsl
and
loop
mov
jb
mov
and
lret
test
adc
cmp
pop
jnp
js
adc
jg
mov
repnz
popf
push
xchg
stos
cltd
subl
push
loopne
jmp
mov
ret
dec
cld
push
mov
cmp
cmp
and
mov
out
insb
or
cmc
arpl
insb
xor
xchg
outsl
or
lret
cmp
gs
imul
mulb
lea
jo
dec
inc
add
add
xchg
push
outsb
sbb
sbb
clc
inc
loope
add
jnp
inc
and
inc
stos
jecxz
dec
sbb
xchg
jb
cmp
pop
je
fidivrs
xchg
mov
sbb
pop
pop
dec
push
aam
xor
js
mov
mov
test
mov
xchg
mov
sub
sbb
test
nop
xchg
push
les
movsl
je
scas
in
mov
adc
loope
mov
test
mov
mov
or
pop
popf
in
pop
es
ja
xabort
pop
dec
pushf
pop
dec
stos
dec
ja
mov
push
repnz
mov
push
sbb
cmc
mov
dec
test
xlat
push
adc
loopne
or
stos
xchg
in
cs
fstps
inc
jge
push
rcrb
stc
in
pop
insl
jne
fistl
fld1
movsb
cltd
scas
or
sub
adc
mov
xchg
cmp
push
adc
movsl
fisubrl
jae
cmp
lea
gs
daa
push
mov
mov
dec
decb
imul
pop
and
call
in
das
in
push
mov
int3
adc
out
std
jmp
adc
dec
jl
shlb
popf
jae
inc
add
out
push
les
cmp
adc
mov
inc
ret
mov
fwait
or
xchg
inc
arpl
sub
cmp
jge
jmp
testb
xchg
mov
inc
movsl
les
dec
bswap
add
ljmp
xchg
outsl
mov
or
cmpsb
pop
mov
mov
jecxz
ja
cmp
call
mov
rorb
cmp
leave
mov
sub
sub
jae
add
fidivrl
mov
mov
fdivr
into
add
nop
loope
gs
adc
add
lods
or
testb
mov
outsl
push
dec
stos
das
lret
jg
and
xchg
sahf
enter
in
scas
ror
dec
pop
mov
notb
inc
jne
mov
xor
sbb
cmp
push
or
pop
pop
pushf
aas
lahf
mov
mov
pop
xchg
ret
push
cmp
movsl
xchg
mov
lds
rolb
sbb
push
sbb
sub
xchg
pop
cmc
ror
in
popf
mov
imul
loope
jmp
loope
loopnew
ret
push
lret
ret
lcall
imul
shlb
sub
xor
sub
cmpsl
adcb
mov
or
add
lret
mov
xor
or
cmp
testb
adc
push
test
mov
pop
cmp
fisubrs
fisubl
mov
push
sub
imul
or
outsb
out
rcr
in
aad
inc
std
je,pt
jle
fcoms
pusha
popa
out
pop
xchg
roll
int3
testb
rcr
adc
push
inc
mov
adc
fldcw
xchg
sbb
cmp
dec
pop
sub
mov
and
sti
cmp
jmp
xchg
xchg
test
fsubs
xor
fstpl
lahf
repnz
pusha
push
fwait
lret
js
lds
js
mov
and
das
jbe
mov
aas
loop
sbb
dec
mov
inc
xor
push
je
pusha
in
jnp
dec
std
pop
sub
fstpt
add
push
pop
push
push
push
xchg
xchg
insb
jmp
pop
nop
mov
lods
les
or
inc
stos
jo
jge
fcompl
mov
inc
into
jg
lods
test
nop
jge
dec
outsb
jmp
insb
test
adc
cmpsl
inc
mov
sbb
mov
sbb
add
leave
incl
pusha
jb
lcall
shll
add
popf
gs
nop
mov
mov
sub
outsl
xchg
mov
out
jno
int3
arpl
scas
aam
mov
in
lods
popf
mov
jbe
mov
xchg
test
cmp
add
jns
or
lret
cmp
pop
jp
js
iret
in
pusha
sbb
stc
fsub
jae
sti
mov
adc
pop
adc
mov
xchg
add
test
les
orl
adc
subl
movsb
xchg
fndisi(8087
in
jle
push
pop
pop
call
rcl
or
stc
add
fld
aas
jne
pop
dec
mov
sbb
movsb
negl
pop
nop
dec
dec
adc
xchg
xchg
outsb
bnd
mov
pop
jl
call
test
sbb
mull
adc
leave
fsqrt
mov
pop
pop
sub
ret
inc
rcll
into
or
xor
pop
pop
jnp
call
adc
fwait
add
mov
xor
dec
mov
cmp
xchg
aas
orb
inc
pop
xor
mov
jge
mov
es
sub
ja
cmp
lea
testl
je
jno
nop
shlb
lret
jecxz
fistps
fisttpll
test
out
and
pop
push
xchg
outsb
sub
into
pop
int3
mov
in
data16
pop
mov
arpl
mov
stos
pop
shl
mov
inc
repz
fidivl
daa
dec
icebp
cmpsb
inc
cmp
mov
adc
mov
xor
pusha
adc
adc
jno
dec
pop
ja
ja
ficomps
inc
out
test
jle
sti
imulb
dec
push
je
mov
lock
mov
jp
push
int3
xchg
data16
sbb
xor
adc
repz
stc
jmp
scas
xlat
push
adc
pop
jp
mov
loope
adc
xchg
inc
addr16
pop
int
xor
xchg
dec
push
sub
pop
xchg
adc
and
in
dec
lcall
shlb
mov
xchg
jl
je
adc
fisttpll
sbb
mov
gs
xchg
das
mov
sub
idiv
mov
cmp
sub
add
stc
jmp
or
xor
mov
push
cmpsb
sub
icebp
lea
pusha
cltd
rcrl
movsb
fistpll
arpl
inc
addl
mov
sub
sahf
mov
xchg
mov
sub
leave
fxam
orl
xchg
push
inc
fs
and
repnz
stos
jge
sub
pop
aas
enter
xlat
stc
js
jmp
dec
xchg
push
mov
xchg
add
xlat
dec
jne
lods
push
cmp
enter
jb
xrelease
adc
mov
or
xor
mov
cmc
roll
push
xor
idivb
mov
fldl
pop
jp
fldcw
addl
roll
mov
adc
lret
jne
and
cmp
add
sub
sahf
movsl
push
and
int
adc
cwtl
lods
lds
or
gs
inc
dec
lret
and
bound
lds
jecxz
and
insl
add
in
call
jb
out
xchg
and
mov
jns
sub
mov
rcl
imul
insl
push
adc
jbe
jne
cltd
cld
test
jae
sti
cltd
fcomp
xor
out
mov
dec
adc
aaa
fisubrs
cmc
pusha
daa
push
push
jl
call
pop
and
sbb
mov
mov
pop
and
mov
faddl
nop
addb
add
mov
pop
dec
mov
push
cli
mov
sub
lds
in
clc
pop
nop
leave
cld
daa
lret
adc
aaa
push
shl
add
and
mov
mov
js
mov
mov
pop
lret
dec
mov
add
lods
iret
and
jnp
lea
insl
rcrl
scas
data16
call
add
cmp
push
mov
or
adc
xchg
cmc
mov
xlat
xchg
mov
sub
xor
mov
pop
ss
pop
jg
fwait
and
ds
and
rcrb
call
xchg
data16
in
add
xchg
inc
xchg
clc
or
mov
mov
dec
ss
mov
mov
movl
mull
push
inc
scas
mov
int
inc
push
jmp
pop
cmp
inc
sbb
ret
mov
sbb
fxch
sub
mov
pusha
test
and
push
xchg
xor
adc
jnp
sub
pop
or
idiv
iret
dec
adc
mov
aas
out
dec
jnp
xchg
push
cmpsl
fsubrs
push
or
add
mov
mov
mov
ja
dec
add
pushf
jo
add
sarb
adc
dec
and
xor
cs
push
xchg
inc
or
loop
cmpsb
movl
add
add
mov
loopne
push
inc
fwait
stos
gs
xchg
iret
rcl
push
jecxz
cmp
fists
shlb
popf
push
xchg
sub
jmp
cmp
push
add
mull
stc
outsb
mov
jns
mov
iret
loope
xor
jns
enter
movb
out
mov
pop
xor
sbb
dec
lods
enter
mov
in
and
or
pop
and
shlb
jle
push
and
mov
jg
pop
xchg
or
in
pop
mov
cwtl
push
mov
xor
pop
cmp
mov
sti
dec
inc
aas
pushf
popa
sub
mov
inc
leave
mov
adc
mov
adc
jne
insb
inc
mov
pop
jb
ja
mov
ss
arpl
jne
sar
aam
ljmp
cltd
mov
pop
mov
fcmovne
and
lods
pop
xchg
adc
add
loope
stos
dec
dec
adc
sar
push
cwtl
mov
mov
mov
lods
sbbb
cmpsl
ror
in
out
push
xor
mov
sti
xor
dec
jecxz
aam
or
js
loope
cmp
sarb
jne
pop
call
sub
adc
mov
jno
ror
and
rol
cli
push
scas
cltd
jnp
and
ds
rcl
dec
jbe
jbe
xlat
ss
inc
push
jnp
in
xor
push
ljmp
push
mov
jle
adc
mov
pop
sbb
ja
jg
mov
adcl
and
xchg
icebp
hlt
xor
lahf
xor
jp
pop
adc
sbb
pop
je
cmp
xlat
and
and
xchg
imul
add
shlb
int3
das
push
push
jbe
push
mov
inc
push
push
fucompp
mov
jecxz
stos
or
xchg
adc
or
in
addr16
dec
or
pop
int
pop
mov
lods
addr16
dec
mov
nop
pop
imul
jo
shlb
scas
stos
adc
outsl
out
mov
lds
inc
imul
sub
movsl
push
jmp
cmpb
mov
scas
ljmp
xlat
cmpl
push
lret
inc
push
mov
insb
jmp
repz
pop
mov
jmp
ss
out
push
push
dec
jge
sti
inc
xor
xor
test
and
mov
stos
push
mov
scas
lcall
cld
bound
pop
loop
mov
push
xor
mov
movsb
push
fxch
and
sbb
sub
sahf
hlt
or
test
repz
mov
clc
pop
ljmp
aas
jle
aam
iret
popf
sub
mov
mov
dec
add
test
pop
push
xor
xchg
aaa
adc
xchg
push
out
into
mov
les
pushf
mov
and
add
das
cli
repz
pop
scas
addb
aad
push
dec
cmp
cwtl
pop
stc
pusha
mov
inc
or
enter
inc
leave
or
arpl
jno
jmp
dec
lods
popa
enter
arpl
push
enter
test
repz
mov
outsl
jnp
sbb
push
mov
xchg
fcompp
dec
sbb
das
shlb
sbb
leave
xchg
and
nop
das
and
dec
push
push
push
inc
dec
lods
xor
mov
xchg
mov
mov
lods
adc
or
inc
mov
aad
insl
mov
sbb
mov
xchg
adc
sbb
sub
push
outsb
in
ds
leave
ds
mov
jae
in
push
cld
repnz
cld
bnd
inc
loop
sbb
lods
loop
testl
lock
mov
ja
test
mov
dec
sub
xor
insl
push
fiaddl
lods
jle
pop
aad
cwtl
mov
loop
jp
and
cmpsb
pop
or
outsl
mov
sbb
xor
mov
inc
push
test
popf
sbb
push
test
subb
repz
ja
sbb
xor
pop
adc
push
adc
pop
mul
mov
mov
inc
add
hlt
cmpsl
dec
jns
repnz
and
call
add
adc
insb
into
pop
lods
mov
nop
xlat
ret
sti
lcall
xor
xor
mov
adc
jmp
push
enter
out
repz
test
jne
scas
negb
stos
add
xchg
js
cltd
push
lcall
dec
lds
dec
scas
or
sub
push
std
mov
push
mov
xchg
data16
inc
push
adc
flds
add
loop
sbb
cwtl
ret
lods
jne
leave
hlt
mov
pop
cld
cmc
or
stc
xchg
out
and
repz
push
pop
sti
hlt
les
and
pop
sub
push
mov
pmaddwd
jbe
aad
push
shlb
dec
sub
lahf
or
jno
and
lahf
lret
push
mov
cmp
sbb
jl
mov
xchg
jo
imul
fmuls
call
fcmovbe
push
out
aas
cmp
mov
lcall
sbb
add
lods
mov
mov
mov
mov
movsl
xorb
aas
push
jbe
mov
mov
testl
pop
aam
inc
rcll
lods
je
lcall
push
xchg
mov
lahf
movsl
xor
or
dec
xor
test
mov
mov
mov
movsb
sub
enter
in
or
daa
loopne
popf
adc
std
rolb
movsb
adc
hlt
pop
test
scas
lods
mov
rcrb
pusha
out
cmp
rolb
test
stc
jp
jbe
add
shl
jg
jl
xchg
into
call
or
jl
pushf
in
orb
arpl
arpl
test
data16
and
jne
out
xchg
xchg
jb
xchg
cs
inc
pop
mov
lret
pop
jae
mov
mov
push
icebp
fs
mov
ficompl
dec
les
hlt
in
arpl
scas
sub
adc
cmp
jns
cltd
push
mov
or
loop
scas
ret
dec
sbb
jle
add
add
sub
pop
js
shlb
cwtl
lock
scas
dec
popa
scas
pop
sbb
imul
loop
dec
mov
sbb
or
mov
lcall
into
das
test
out
outsl
jo
adc
loop
cmp
add
out
pop
mov
out
mov
fisubl
fs
inc
pop
ret
lcall
ss
hlt
xchg
inc
call
mov
cmp
outsl
icebp
out
and
push
xor
popf
mov
fistps
mov
and
scas
arpl
fistpll
jmp
and
decl
movsb
pop
ret
iret
add
dec
or
pusha
cmp
adcb
add
int3
in
movsb
js
jbe
or
push
das
xchg
scas
and
adc
imul
jne
rorl
pop
fsubrs
push
dec
bound
jge
shl
aam
ret
out
pusha
mov
pop
jnp
sbbl
leave
or
inc
test
sbb
mov
xchg
pop
xchg
lret
sub
hlt
and
ja
mov
and
adc
mov
dec
daa
test
mov
imul
pop
dec
sub
rcll
int
mov
imul
or
scas
mov
xchg
icebp
inc
loope
pop
out
aas
ss
inc
mov
mov
mov
push
add
hlt
lds
sahf
push
sbb
xlat
dec
cmp
fisubs
adcb
jne
fcompl
cwtl
push
pop
inc
xor
xchg
pop
adc
mov
inc
fsubrp
ficoms
push
cltd
adc
adc
cmp
clc
dec
lahf
push
shrl
push
jae
pop
hlt
add
scas
xchg
jl
je
sbb
xchg
fiadds
mov
repz
jbe
lods
roll
jbe
jbe
lock
sub
int3
or
xor
psrad
mov
inc
jmp
jge
loope
mov
xor
data16
jns
lcall
xchg
pop
mov
sub
in
aam
adc
push
cmp
fldt
inc
cmp
loope
fldenv
out
push
pop
inc
lods
sbb
push
enter
es
sbb
xor
add
pop
dec
jle
cmpsb
arpl
xchg
int
aam
sub
sub
lods
or
xor
cli
push
shrl
sbb
jne
sahf
cmp
jl
pop
test
scas
sub
in
insb
mov
add
hlt
insl
addr16
cwtl
out
pop
jo
pop
add
xchg
cli
loop
lcall
enter
jns
incl
clc
xlat
dec
stc
stos
gs
jne
stos
aaa
xlat
repnz
adc
pop
hlt
xchg
loop
lds
inc
add
push
icebp
adcb
sub
into
xor
cmc
dec
push
mov
mov
movsb
in
xchg
loop
bound
pop
pop
cltd
mov
sbb
leave
xchg
in
aas
dec
insb
incb
sbb
xchg
inc
sbb
in
cmc
adc
xchg
push
lds
mov
mov
out
test
pushl
in
pop
lea
sub
sub
aad
cmp
shll
adc
ror
push
jns
loope
outsb
insl
out
adc
jb
lahf
push
xchg
mov
icebp
push
jnp
xor
inc
cmp
fisubrs
daa
mov
adc
fiadds
repnz
mov
and
call
lods
push
sub
xor
adc
daa
sub
fidivl
jmp
add
mov
aas
aam
pop
js
cmp
ja
out
dec
das
testl
inc
jb
inc
out
pop
cmp
inc
mov
sbb
or
xchg
sarb
nopl
dec
aam
fadds
outsl
push
aas
loope
push
cwtl
mov
imul
leave
pop
push
fldcw
into
out
mov
adc
mov
sub
cs
sbb
dec
push
mov
dec
cmp
fxch
push
cmp
lret
push
insl
pop
repnz
sarl
in
fisttps
cltd
shll
add
push
mov
lods
movl
pusha
cmp
cmp
imul
mov
cs
lret
test
xor
pop
mov
or
call
int
arpl
mov
lret
cltd
jno
or
pushf
mov
mov
push
and
int3
daa
lds
lahf
shll
xchg
mov
mov
sbb
inc
loopne
addr16
inc
adc
lock
mov
cli
push
test
mov
insl
xchg
dec
stos
or
insl
iret
mov
mov
fidivrs
shll
stos
stos
inc
pushf
xor
clc
inc
ret
lret
jmp
inc
outsl
jae
xchg
outsl
out
push
adc
pop
push
mov
xor
cmp
sbb
mov
add
mov
or
sbb
adc
shll
adc
imul
jle
mov
xchg
xchg
jle
aaa
mov
fdivl
addr16
call
dec
push
mov
js
loope
cwtl
sbb
sahf
out
stos
or
adc
sub
aad
xor
mov
shrl
test
subl
mov
mov
lahf
push
inc
push
fistpl
scas
pop
xchg
mov
push
xor
xchg
dec
stc
pop
and
jl
mov
iret
push
pushf
pop
fs
je
enter
aam
pop
push
jbe
aam
mov
sub
add
mov
ja
stc
idivl
shrl
xor
pushw
mov
iret
add
popf
sub
ds
mov
sahf
jmp
dec
std
sub
mov
aaa
imul
in
inc
pop
cmpxchg
pop
xor
scas
arpl
test
add
andb
cld
or
push
inc
dec
xchg
cmc
xchg
clc
and
shlb
fs
push
mov
fistps
movsb
arpl
add
fwait
mov
popa
hlt
imul
sbb
push
cmp
bnd
lods
mov
xchg
sahf
dec
stc
add
cli
mov
adc
ret
cmc
ret
leave
or
xor
sub
mov
out
sub
sub
test
iret
pushf
jmp
and
pop
mov
loopne
fdivp
sub
lret
and
orl
fists
repnz
dec
data16
adc
dec
cmp
cmp
aas
push
pop
dec
insl
jge
lock
cmc
fwait
out
imul
pop
movlps
idiv
sbb
sahf
jae
xchg
and
movsl
les
in
push
pop
xcrypt-ofb
cmpsl
stos
jp
sub
add
je
inc
push
insb
mov
shrb
adc
ja
fbstp
test
jmp
nop
inc
call
rolb
je
clc
sahf
and
jno
fldcw
in
int3
in
adc
lock
ljmp
pop
pop
or
mov
jns
loop
ja
int
shll
sub
iret
nop
hlt
jge
mov
pop
mov
xchg
add
enter
push
and
jmp
add
and
mov
jbe
mov
aad
add
pop
stos
xchg
and
ret
popf
pop
xor
rcrl
iret
repz
and
dec
add
into
data16
cmp
das
clc
int
leave
and
dec
push
dec
call
cmpsl
shrb
enter
mov
popf
adc
xor
int
push
mov
and
jb
ja
movsb
jg
cmp
sbb
aam
notb
int3
imul
movsl
jns
gs
or
mov
sub
or
sahf
das
and
loope
mov
add
es
out
jne
lret
gs
fldcw
jbe
testl
das
insb
or
fdivrs
sbb
dec
pop
std
ret
pop
mov
cltd
adc
xor
rolb
lcall
lds
xchg
or
out
out
push
shl
fiadds
mov
out
popf
daa
and
xchg
adc
add
push
inc
cs
in
or
and
jmp
inc
test
jp
es
mulb
mov
sti
xor
out
fisubrl
fimuls
mov
push
inc
inc
add
xor
fsubrl
les
push
cmp
mov
sub
inc
push
in
inc
jnp
ja
in
xor
sbb
lock
inc
jl
push
mov
rcrb
push
insb
sub
ficoml
or
in
daa
cmp
jge
inc
dec
pop
add
sbb
sarl
aam
out
es
in
fistpll
adc
dec
enter
dec
pop
mov
mov
xchg
xchg
stos
sub
sub
pop
imul
add
adc
aaa
in
loope
add
addr16
sbb
leave
xor
shlb
stos
dec
aad
dec
testl
loop
mov
mov
jne
xchg
mov
cmpb
stos
jp
js
sarb
mov
sub
test
out
mov
jge
clc
xor
in
xchg
adc
push
out
rcr
loopne
mov
ss
in
popf
data16
dec
add
popf
push
fchs
xchg
imul
popf
movsb
push
arpl
sbb
jne
iret
std
add
push
cmpsb
mov
push
push
enter
sar
push
and
stc
imul
or
mov
pop
xlat
push
pop
mov
adc
jns
sub
mov
push
inc
inc
into
cmp
ds
sbb
lods
dec
or
mov
push
pop
sub
pushf
pop
cmpsl
imul
lret
dec
xchg
sarl
push
and
out
add
sub
or
lods
rcrb
push
xor
jno
pop
jb
lods
test
rorl
rclb
add
push
pop
mov
add
inc
outsb
scas
fld
sub
fildl
mov
imul
and
jg
xlat
push
pop
cld
sahf
shll
pop
leave
xlat
lahf
xor
stc
ror
ret
imul
in
xchg
dec
and
repnz
and
idivb
fwait
rcl
mov
stos
and
mov
lock
shll
sbb
or
pushf
cmp
adc
mov
bound
arpl
sahf
jmp
pushf
mov
inc
aas
mov
cmpsb
jns
xor
mov
ret
dec
adcb
repnz
xchg
das
xlat
mov
mov
push
pop
sahf
dec
add
inc
fdivrp
outsl
xor
mov
out
mov
pop
enter
nop
mov
lods
adc
xchg
idivb
into
add
or
jo
test
pop
fildl
divb
jnp
mov
shll
sarl
mov
adc
mov
jno
out
and
ds
std
out
orl
aam
adc
mov
push
imul
push
mov
and
cmp
jo
nop
mov
cli
popa
dec
sti
lret
cltd
or
xchg
mov
xchg
inc
popa
mov
sub
xor
pop
in
push
int
adc
test
dec
call
sub
rcll
xchg
test
das
push
in
sub
stos
ja
jecxz
gs
mov
jl
loop
repz
dec
loopne
jbe
aaa
cld
cmp
movsl
lcall
mov
std
xchg
stos
cmpsb
dec
xchg
sbb
xor
pop
pop
push
jbe
gs
dec
cld
pop
mov
das
push
sbb
arpl
in
pushf
rclb
insb
jns
push
sti
aam
sar
xchg
pushf
rclb
mov
sahf
mov
loope
xchg
ret
sub
pop
mov
imul
xchg
imulb
xchg
push
rcrb
push
mulb
stos
sarl
movsl
mov
jle
xchg
push
gs
push
and
out
popf
jmp
xor
aam
ss
pop
mov
stos
mov
out
dec
or
daa
pop
xor
clc
or
mov
mov
and
scas
inc
add
pop
xor
test
or
adc
lock
inc
mov
mov
divl
xchg
push
fists
test
mov
pop
repnz
icebp
mov
es
clc
sbb
ljmp
pusha
adc
xchg
jmp
shr
mov
mov
adc
cmp
cmp
imul
mov
dec
lret
dec
xor
mov
dec
iret
sbb
push
dec
sub
pop
and
cmp
dec
imul
mov
in
adc
imul
scas
lret
sub
pop
pop
mov
lea
jne
loop
pop
pop
inc
int3
fs
xor
jmp
cmp
lea
insb
in
and
fwait
jne
clc
pusha
add
es
push
cs
paddd
test
mov
jecxz
insl
and
lods
test
push
arpl
aad
arpl
adc
arpl
out
adc
adc
pop
mov
fistpl
lret
out
cmp
xlat
test
cli
into
ret
sbb
jmp
mov
js
xchg
jae
insb
and
nop
negl
jo
pusha
fistl
jae
dec
in
testb
adc
pop
fs
pop
lds
stc
dec
cmp
sub
sahf
cmpb
repz
shrl
mov
xchg
xchg
cld
hlt
cmovae
xchg
push
in
daa
mov
mov
aaa
gs
lea
pushf
xchg
mov
iret
fisttpll
pop
adc
mov
mov
subb
adc
pop
dec
push
imul
pop
movsb
mov
fisubl
rol
inc
out
mov
je
sbb
inc
lcall
jg
mov
xchg
mov
xor
rolb
insb
jnp
insb
rolb
dec
outsl
cltd
cmc
icebp
push
push
icebp
jp
pusha
into
jg
push
cli
jae
movsb
mov
jae
hlt
dec
xor
scas
shll
out
repz
or
jbe
cmp
ret
and
fnstenv
out
shll
ljmp
jmp
push
fs
cmpsb
jbe
shll
rcll
loopne
jp
xchg
dec
lret
push
pop
in
add
push
ret
xor
jb
das
xchg
cmpsb
insl
in
mov
push
fisubl
xchg
shrl
xchg
enter
jg
adc
stos
lds
jnp
mov
adcl
inc
jnp
mov
adc
and
in
mov
daa
pop
xchg
cmp
fwait
lea
stos
inc
push
mov
loop
mov
lods
sub
scas
loope
cld
stos
and
and
adc
mov
xchg
adc
cmp
jge
dec
mov
mov
mov
fisttps
xor
pop
adc
push
mov
gs
jle
adcb
cmc
loopne
int3
daa
std
addr16
sarb
jno
mov
mov
lock
pop
mov
sahf
movsl
in
scas
lods
push
cmp
sub
imul
sub
sarb
in
rolb
inc
mov
cmp
xor
xchg
or
ret
or
iret
and
sbb
mov
mov
lds
xlat
cli
cli
cwtl
lret
rcr
or
arpl
jnp
out
imul
add
pop
outsl
mov
dec
lahf
movsl
addr16
je
mov
fdivrs
dec
cmpb
rcrb
dec
push
jae
mov
aas
repz
aad
jp
out
arpl
dec
sbb
or
fsubp
cmp
fisttps
dec
iret
sbb
mov
stos
test
outsb
sub
push
aam
or
les
lea
jecxz
cwtl
mov
jmp
arpl
das
rcrl
mov
cmpsb
or
cmpsb
sarl
cmpsb
loopne
mov
jns
sub
push
jge
xor
aaa
lcall
gs
mov
inc
test
cmp
mov
rcrb
jge
ljmp
je
sub
inc
cmpb
mov
jae
imul
stc
xchg
and
sahf
sbb
mov
dec
cwtl
mov
inc
dec
jmp
insb
push
cli
out
sti
jg
add
inc
xlat
les
test
jl
xchg
or
daa
std
repnz
mov
insb
insb
push
xchg
xchg
mov
push
mov
test
or
aam
or
loopne
std
sahf
iret
popa
shll
sbb
jp
push
adc
sbb
or
rorl
mov
popf
out
sbb
mov
cwtl
adc
test
imul
cmp
jmp
jl
das
or
je
xchg
push
test
dec
rcrl
push
repz
xchg
cmp
les
dec
dec
lods
mov
xor
testl
loope
enter
xor
mov
jg
outsb
jp
sub
jno
call
push
mov
lds
add
and
jmp
push
jecxz
iret
jne
xchg
xlat
jp
and
adc
mov
lret
aaa
outsb
mov
dec
ret
call
or
pushf
adc
call
sahf
shl
sbb
sbb
fcompl
adcl
imul
mov
frndint
mul
stos
test
fdivp
cld
jmp
scas
sbb
pop
mov
or
inc
mov
ja
pop
xchg
mov
call
test
cltd
movsl
ret
jno
int3
sbb
das
mov
shl
rolb
pop
int3
lock
aad
insl
dec
sbb
pop
xor
lds
mov
mov
shll
push
sti
mov
rolb
jns
cmp
aam
sub
add
jp
pop
mov
data16
fs
dec
imul
cmp
mov
lahf
cmpsb
gs
adc
clc
cltd
out
lahf
inc
mov
fidivrl
jl
mov
shlb
out
jmp
xchg
jmp
aas
cs
sbb
xlat
sbb
adc
mov
cs
cmp
xor
mov
fbstp
rep
icebp
pop
cmpsb
sbb
xchg
and
bound
dec
and
addb
xchg
cltd
pminsw
jmp
and
adc
mov
push
icebp
xor
mov
inc
cmp
ds
test
and
pushf
xchg
add
in
lods
fiadds
pop
adc
orb
andb
adc
xor
mov
pop
stc
daa
inc
outsl
in
ja
xchg
xor
or
roll
punpckhwd
aad
sbb
testl
pop
xchg
and
mov
lret
scas
lcall
pop
adc
inc
pop
inc
fs
out
and
jmp
xlat
mov
jge
popa
jl
push
cmp
mov
dec
outsb
jnp
mov
xchg
push
mov
mov
pop
sti
mov
push
lret
jae
pop
outsb
mov
fidivrl
shll
push
and
pop
or
adc
dec
pop
nop
aaa
addr16
mov
fistpll
les
popf
ss
xor
mov
pop
xor
cmp
inc
dec
aas
sti
xchg
sbb
add
dec
push
adcb
and
inc
or
lret
adc
nop
sahf
rcrb
jl
andl
ljmp
mov
cs
push
dec
mov
pop
cld
mov
sbb
pusha
shll
clc
push
push
mov
gs
mov
les
push
inc
lods
jge
add
sub
shl
pop
test
mov
or
into
cmp
cmp
jecxz
pushf
gs
repnz
cld
imul
lret
hlt
xchg
jmp
adc
pop
lock
stos
stc
pop
push
add
pop
call
sub
push
mov
nop
cmc
fldt
data16
rcrb
ja
mov
scas
inc
rolb
cmp
jne
cmovo
jmp
jle
stos
push
inc
cmp
add
cld
xchg
xchg
jl
mov
cmp
and
cli
sbb
fsubrl
cmp
lahf
lea
inc
dec
mov
push
xchg
add
mov
mov
shr
stos
sub
sub
test
addr16
cmp
loope
add
adc
inc
adc
leave
popf
xor
pop
cmp
fs
sbb
out
inc
scas
mov
stos
andb
loop
jg
jecxz
inc
mov
xchg
scas
mov
notb
cmc
dec
pop
push
mov
or
lds
stos
xor
movsl
cmp
mov
and
push
dec
add
jl
or
push
xchg
es
les
clc
mov
push
clc
fs
xchg
cld
jg
and
sub
cmp
out
sbb
sbb
loope
lea
incl
and
mov
rolb
lcall
mov
movsb
mov
insl
sbb
xchg
neg
mov
out
cmpxchg
cmp
call
fcom
cmp
and
int3
add
test
xchg
out
or
pop
and
mov
add
adc
mov
add
mov
out
fidivl
pop
aas
loopne
daa
and
sbb
mov
dec
scas
fwait
inc
ret
loope
aam
mov
mov
dec
cmp
mov
push
imul
push
adc
adc
shrl
inc
cltd
int
jp
insl
jnp
in
mov
cli
inc
add
lcall
mov
lahf
inc
jb
xchg
sub
nop
xor
mov
ss
cs
mov
add
into
test
xor
in
sqrtps
mov
mov
ds
pop
lods
adc
pop
and
sbb
jnp
jge
xlat
mov
push
jbe
mov
xor
movsb
mov
lods
sarb
adc
icebp
testb
fimuls
fs
push
leave
dec
push
inc
or
addr16
pop
das
in
imul
pushf
cltd
enter
out
pop
push
mov
rol
out
std
pushf
jle
xchg
dec
cwtl
fldl
xchg
test
ret
fsubs
ss
jp
jecxz
inc
mov
dec
jae
leave
mov
inc
iret
pop
lahf
data16
std
mov
jecxz
mov
in
pusha
adc
cmpsb
xor
testl
adcl
fwait
push
or
jb
imul
xor
and
lods
jns
dec
scas
add
ror
cmp
mov
add
loopne
fwait
push
leave
insl
and
mov
or
ret
mov
dec
cmpsb
jo
fs
xchg
fdivrl
sub
les
dec
out
cmp
dec
testb
jecxz
cmc
push
pop
xor
xlat
lods
dec
stc
mov
cmp
sbb
push
fistpl
push
imul
sbb
mov
sub
popf
test
cmp
add
out
xchg
daa
xchg
iret
mov
jle
mov
cmp
pop
outsl
sub
es
loopne
pop
jb
enter
add
int3
inc
loop
xor
jne
mov
bound
test
es
int
stos
rcl
aam
loopne
xchg
push
jmp
mov
dec
jp
pop
shlb
cs
int3
icebp
mov
xlat
mov
test
pop
mov
push
adc
jle
and
mov
repnz
sbb
cmpsl
or
pop
jle
xchg
jp
out
lock
popf
adc
inc
jbe
gs
sbb
fistps
popf
add
mov
stos
out
mov
lds
xchg
push
and
inc
pusha
stos
cld
data16
pop
clc
daa
push
xchg
fcomp
sti
mov
xchg
and
mov
into
mov
push
in
jmp
pop
dec
pop
addb
fidivs
xchg
jne
cwtl
sar
cld
xor
aam
jp
xor
pop
lock
popa
xchg
test
mov
push
xchg
int3
int
or
jge
pop
xor
clc
repnz
js
int
scas
mov
test
pop
das
xchg
jg
sbb
push
lret
push
jge
rclb
sbb
pop
dec
call
dec
jmp
popf
add
push
shll
jne
fisttpll
cmp
out
or
jne
push
dec
dec
lea
push
inc
cmp
fbstp
jmp
repnz
scas
aaa
lds
testl
cmp
push
inc
ds
loope
jnp
faddl
xchg
andb
test
iret
sub
mov
imul
xchg
int
jp
cmp
cmpsl
or
notl
fstl
xchg
mov
xlat
xchg
sub
sbb
js
cmp
aaa
add
push
test
xor
add
sub
xchg
addr16
shlb
lret
stos
mov
xchg
adc
movsb
std
adcb
mov
aad
icebp
mov
leave
mov
sub
test
movsb
leave
xchg
inc
loopne
lods
push
cmc
adc
inc
xor
lahf
lret
mov
in
and
int3
shl
flds
xor
cltd
shlb
mov
sbb
aad
add
js
xchg
fwait
inc
sub
cmp
lret
addb
pop
test
sub
fisttpll
sbb
dec
out
lods
jmp
ret
sbb
mov
fisttpl
xchg
pop
mov
jo
push
aad
cmp
sbb
or
sti
popf
push
arpl
stos
jns
sub
sti
push
fbld
pop
add
test
ret
clc
sub
fisubrs
sbb
pop
or
push
mov
push
fidivl
enter
jg
test
dec
add
mov
fwait
push
xor
inc
insl
ja
mov
xor
into
cmp
push
or
fsubrl
mov
idivb
add
mov
or
repz
dec
and
mov
fwait
call
stc
mul
repz
ret
dec
fsubrs
sub
mov
loopne
int3
mov
cmp
mov
dec
xchg
int3
and
aad
mov
jbe
pop
pop
xchg
outsl
cmp
mov
rol
out
in
and
lret
push
movsl
das
jno
mov
pop
and
inc
and
cld
mov
mov
jmp
add
mov
sub
push
mov
int
push
shr
aam
inc
add
frstor
pop
aaa
sti
sub
sbb
jo
bound
aas
out
idivb
xor
testb
adc
and
jmp
dec
and
dec
jo
imul
jge
fs
pop
int
popf
fs
pop
aad
dec
scas
add
push
insb
daa
add
fcmovnb
inc
pop
outsb
clc
pop
rolb
data16
fidivl
cmp
cld
sahf
outsl
cmp
push
push
cmp
adc
xor
lds
jae
and
xchg
out
loope
xor
fs
pop
add
mov
fs
repz
sbb
mov
shll
push
leave
push
out
clc
sub
xchg
lods
inc
cmp
or
jb
out
dec
cmpsl
mov
sub
pusha
pop
cmpsb
dec
push
ljmp
divl
push
lods
xor
mov
and
xor
push
jns
mov
fidivs
adc
movsl
test
hlt
shlb
jle
aam
fidivl
push
jo
sbb
test
cmp
cltd
test
or
xchg
pop
adc
out
xor
movsl
iret
dec
adc
xor
sub
mov
stos
icebp
fcoml
cs
pushf
icebp
clc
arpl
push
dec
movsb
dec
or
and
filds
cmovl
jg
jge
dec
mov
mov
mov
sub
aas
testl
jns
insb
or
shrl
fcmovnb
adc
dec
rorb
adc
add
and
sub
outsl
lock
xacquire
rcrl
repnz
or
adc
jg
and
pop
popf
popl
mov
adc
inc
pop
outsb
orl
inc
push
inc
xor
sub
push
fisubrs
push
imul
mov
andb
mov
insl
pop
sbb
test
sub
jl
mov
xchg
es
adc
sti
pop
js,pn
lret
into
mov
rclb
rcrb
cmc
addl
mov
testl
out
sahf
push
lret
adc
out
mov
out
or
cmp
scas
in
adc
push
push
sub
jbe
test
rcrl
jp
ret
adcb
daa
ja
or
insl
cmpsl
outsb
bswap
addr16
ffreep
fstp
movsl
les
add
jno
xchg
ss
inc
pop
gs
into
xchg
and
repnz
or
cmp
pop
notb
pop
loop
rcll
scas
adc
loope
push
lods
shrl
scas
cld
and
or
mov
call
mov
out
fdivrp
js
leave
jg
cmpsb
mov
aam
push
jle
pop
xorb
fldenv
data16
push
mov
iret
and
scas
out
push
pop
jns
cmp
inc
jle
popf
fimuls
dec
bound
dec
or
les
sub
stos
out
imul
push
pusha
push
gs
imul
imul
sti
aam
leave
cltd
mov
iret
mov
testl
sub
cltd
jle
int
xchg
rcll
dec
arpl
test
mov
mull
sub
jecxz
lea
stc
or
test
add
aaa
and
sbb
pop
pop
cmp
pop
pop
int3
addr16
lock
push
inc
or
mov
sub
incb
std
dec
into
cmpsl
cli
rcr
push
dec
rcrl
mov
fwait
fs
jp
lock
sbbb
add
rcr
dec
mov
mov
aad
jecxz
dec
js
icebp
adc
shufps
pop
lea
movsb
inc
cs
data16
pop
repnz
push
mov
cmpl
pop
cmp
xchg
inc
test
xchg
mov
js
adc
bound
mov
insb
mov
push
lea
add
js
pushf
add
js
mov
rclb
icebp
outsb
and
movsb
and
clc
pop
push
jle
push
cmc
and
add
mov
jnp
pop
loope
dec
testb
dec
sub
inc
xorl
xor
mov
jle
nop
aaa
loopne
push
cli
imul
cmp
insb
mov
add
jecxz
aaa
mov
repz
or
lret
loopne
jno
in
or
test
je
mov
das
fimull
mov
mov
or
mov
fistl
xchg
add
mov
ljmp
fcomps
cmp
lea
fisttpl
sub
insl
arpl
lock
adc
faddp
or
mov
enter
pusha
test
inc
jle
out
push
push
mov
in
adc
xlat
pop
int3
das
or
dec
insb
push
ja
bound
es
insb
fsts
std
jge
scas
int3
push
xor
mov
call
cmpsb
pop
aas
xor
movsb
popf
out
outsl
imul
rcr
pop
dec
push
mov
adc
stos
movsb
jne
adc
mov
lds
je
mov
cs
push
xor
sbb
jle
adc
jo
mov
add
ror
push
add
repnz
mov
sahf
addr16
insb
decb
push
mov
sub
or
sub
stc
cltd
pop
rcl
les
push
bound
push
test
inc
mov
repz
pusha
push
or
sbb
lcall
shrl
stc
xor
shrb
xor
xor
int3
mov
insb
sub
or
pop
cld
outsl
popw
ret
ss
and
pusha
adc
sub
inc
loope
pop
jo
lods
cmpsb
mov
aad
mov
inc
lret
adc
movsb
clc
fistps
xchg
adc
add
push
sahf
xchg
jmp
or
test
push
pop
outsb
repz
dec
jbe
lock
push
xor
enter
roll
xor
add
mov
pop
sbb
ret
push
int3
aaa
stos
vmaxps
movsb
notl
daa
repz
or
shl
inc
out
dec
mov
mov
xor
sbb
push
call
cmpsl
push
cli
or
arpl
stc
popf
sub
cmp
or
mov
int
xchg
imul
xchg
pop
inc
das
int
dec
aaa
inc
jo
pop
push
mov
jbe,pn
loope
xchg
jp
in
ret
std
and
subl
push
out
push
cmc
adc
test
mov
or
xor
xor
mov
adc
icebp
push
fnsave
sbb
or
push
cmp
sub
sbb
sar
xlat
mov
cmp
loope
mov
jo
jns
xchg
fstps
mov
out
ret
xchg
lret
push
xor
imul
cmp
dec
ja
jae
fs
or
pop
adcb
gs
dec
push
mov
mov
push
ret
add
enter
in
fs
mov
inc
jae
std
aam
aas
cmp
ss
dec
mov
ja
mov
inc
leave
cltd
scas
ss
pop
ret
in
pop
in
dec
negl
sub
ja
mov
jb
mov
or
es
jae
sbb
ja
jmp
mov
out
xor
shrl
inc
cmp
add
addl
iret
movsb
mov
imul
fcmovnbe
fldenv
lahf
js
push
fs
out
aaa
pop
push
mov
push
inc
iret
mov
dec
xchg
orb
mov
add
adc
imulb
aaa
loop
sarb
cltd
inc
idiv
outsl
out
add
ss
pop
cmp
jle,pt
fldcw
and
and
inc
outsb
jns
jp
into
pop
imull
es
add
cmp
popl
mov
ss
jae
push
dec
cltd
loopne
pop
dec
fiaddl
scas
adc
inc
test
sbbl
loope
lret
clc
inc
adc
call
ffree
push
out
pop
adc
call
adc
mov
mov
jle
mov
fnstcw
xor
inc
push
add
dec
js
mov
lcall
int
add
jae
daa
cmpsb
lea
mov
inc
mov
ficoms
gs
ss
and
movsl
aad
lcall
push
push
inc
je
mov
into
sbb
fidivrl
cmpsb
dec
loopne
adc
cmp
sbb
adc
xchg
js
jl
or
sti
dec
cs
inc
xchg
pop
mov
popa
xchg
jnp
mov
scas
andb
mov
out
mov
mov
dec
pusha
iret
jae
ficoms
scas
gs
push
testb
xor
jp
daa
test
shlb
mov
dec
and
rcll
pushf
adc
or
loopne
xor
mov
imull
sub
xchg
divl
xchg
sbb
ficompl
rcrl
cmp
cmc
leave
jecxz
shrl
jl
fadds
sub
lock
push
add
xchg
ret
cmpsl
in
fnstenv
push
inc
les
stc
jbe
inc
aad
movsl
movsb
xor
dec
jg
in
fsubrs
jno
neg
aad
mov
jmp
lock
pop
ja,pt
outsl
cmp
fisubs
inc
fldl
rcrl
aam
dec
jbe
les
scas
fwait
aas
lea
xor
cld
lds
mov
push
fcomps
push
dec
leave
dec
or
ss
insb
cmp
dec
or
jp
loope
push
out
ret
or
push
fbstp
mov
test
add
pop
jbe
pop
arpl
adc
int3
xchg
sub
lahf
call
pop
lods
fcompl
call
or
lock
stc
fmuls
push
push
jp
or
cmp
fwait
pop
sbb
and
dec
in
lods
mov
ficomps
xor
fs
cmp
cld
cmpsl
not
stc
jnp
xchg
pop
xchg
cmpsl
jnp
enter
or
mov
or
push
shl
hlt
testl
dec
lcall
fldl
out
je
mov
cld
inc
lcall
insb
cld
hlt
enter
enter
or
mov
mov
out
ret
jae
dec
xchg
or
dec
add
push
xor
sub
xchg
add
inc
shl
into
pop
mov
or
pop
notb
push
fbstp
cld
pop
push
ja
xor
xor
aam
mov
push
fstpt
dec
sbb
pop
mov
ret
lods
stos
outsb
jecxz
sbb
pushf
in
loope
imul
fcmovnu
in
out
sub
sub
add
adc
loope
mov
rcr
shrb
mov
mov
dec
adc
sbb
push
rolb
out
std
jb
mov
xchg
in
push
push
ret
in
add
aad
jecxz
or
outsl
pop
in
in
and
pop
or
ss
jg
movsb
aad
mov
test
popl
adc
mov
or
push
shlb
orb
pop
adc
pop
es
sbb
lea
push
pop
in
movsl
shll
sbb
mov
jecxz
push
sti
xor
sub
cmpsl
unpcklps
movsl
cmp
lock
jge
mov
mov
stc
mov
jo
test
imul
xchg
xor
mov
int3
arpl
aaa
inc
inc
dec
mov
in
int
mov
in
cmp
sub
fwait
add
or
out
jge
inc
aaa
stc
aaa
aaa
aad
pop
cld
jne
fstpt
lock
mov
sub
leave
loop
repnz
mov
xor
ret
repnz
mov
ds
or
ret
pop
mov
pop
out
int
loope
out
lret
enter
adc
cwtl
movsl
aam
pop
pop
jne
roll
lds
jge
js
mov
pop
dec
test
xchg
hlt
and
inc
leave
sbb
xchg
sti
mov
dec
loopne
mov
xor
lret
pop
push
push
lret
pop
pop
jmp
mov
push
aam
mov
mov
mov
and
sub
sub
xor
xor
movsl
or
std
fs
test
pop
fstps
je
cmc
adc
pop
fsubl
push
pop
jmp
mov
jb
adc
cmpsb
pop
ja
and
adc
subl
jnp
scas
jno
pop
and
sbb
cld
mov
pop
daa
shlb
movsl
aas
popf
inc
ret
or
repz
or
add
sbb
cmp
xchg
mov
lods
cltd
mov
sbbb
and
sub
and
xchg
cmp
xchg
popf
jle
xchg
lods
xor
outsb
cmpsl
cmpsb
pushf
pop
jge
cmp
ret
inc
mov
sahf
pop
mov
cld
push
cmp
shl
dec
mov
xchg
inc
cld
push
jge
movsl
clc
sbb
mov
bound
mov
shrb
push
imul
icebp
jp
rcrl
nop
and
hlt
loop
pop
out
mov
les
popa
jle
les
mov
clc
xchg
lahf
les
mov
mov
jmp
sbb
mov
lahf
in
cmpsl
mov
bound
icebp
aas
jp
lmsw
jbe
popa
nop
fisubrs
lds
cmp
jle
sbb
test
jge
sub
push
and
push
or
cmp
and
cmpsl
aas
clc
cmp
push
aas
cmp
sbb
jmp
ds
dec
icebp
inc
enter
pop
mov
loop
das
roll
push
mov
mov
gs
and
out
xchg
jnp
bound
outsb
and
repnz
popf
subl
out
popa
cmpsl
insl
fdivrs
xchg
fadd
sbb
or
inc
cmp
push
sbb
mov
clc
xchg
push
bound
test
push
insb
jo
pop
fsubs
testb
or
js
inc
pop
push
push
int
mov
nop
clc
hlt
test
pop
aad
lods
mov
sub
les
inc
cmp
cmc
fmuls
jle
scas
push
xlat
dec
in
cld
sti
ljmp
loopne
ret
push
imul
adcb
out
sub
mov
mov
or
in
popa
and
lds
popa
lret
loopne
sub
lahf
or
fcomip
fisubs
and
push
js
sahf
pop
mov
in
push
push
mov
add
mov
mov
or
jbe
xchg
aam
inc
or
adc
cmp
fistpll
inc
rcrl
repnz
cmp
rorl
push
xor
cs
loope
or
fimuls
mov
testb
lret
sub
xor
pushf
aam
sub
rorb
xchg
or
add
mov
xchg
in
xor
cmc
fildll
cltd
jmp
daa
lods
or
imul
pop
lods
inc
sbb
cmp
mov
lods
fdivrl
inc
mov
shr
outsl
mov
test
subl
out
insb
cmp
mov
jo
lea
inc
and
lcall
jg
mov
xchg
mov
sub
inc
add
andl
mov
jge
mov
clc
xor
xor
jp
adc
inc
arpl
rorb
bound
jmp
mov
test
clc
jns
out
repnz
fcomps
mov
fs
loop
mov
das
fstl
pop
inc
ljmp
out
test
push
cmc
arpl
dec
mov
or
in
xchg
clc
add
fcomps
sub
xor
sbb
pop
xchg
das
data16
neg
xchg
mov
rcl
jno
repnz
decb
imul
int
xchg
mov
cltd
xchg
ljmp
roll
rorl
iret
pop
jbe
add
lcall
mov
scas
loop
hlt
cs
lret
mov
add
movsl
jae
pop
jge
mov
es
stos
adc
jmp
jge
add
inc
outsl
or
lahf
xor
sub
pushf
fwait
xor
sub
push
pop
dec
jecxz
mov
add
mov
jne
push
xor
loop
lcall
arpl
mov
dec
sub
dec
fildl
lods
and
xchg
sbb
imul
and
shll
mov
push
hlt
test
lahf
pushf
pop
push
xchg
xchg
adc
dec
push
xchg
popf
push
xor
jl
and
xor
cmp
js
jb
add
loopne
data16
pop
dec
xchg
xor
loopne
push
stc
cli
cmp
or
inc
adc
scas
paddusw
nop
int
xchg
mov
sahf
test
or
lret
fisttpl
mov
adc
inc
repz
orb
imul
push
push
sbb
add
mov
ljmp
test
lock
cmp
inc
mov
imul
mov
cli
mov
lcall
jae
icebp
imul
xor
cmp
mov
mov
sbb
mov
adc
scas
dec
jns
mov
jge
sub
lret
jl
fxtract
xchg
sbb
orb
sbb
adc
push
jne,pt
scas
xchg
cld
and
mov
sbb
pop
or
pop
adc
pop
lods
xor
iret
mov
pop
or
insb
cltd
stos
ds
cwtl
test
clc
filds
idiv
rcl
mov
adc
cmpsb
xchg
mov
or
xchg
loop
pop
push
lret
and
aam
push
cwtl
push
mov
lods
insb
sub
mov
mov
mov
out
sahf
push
jns
in
popa
mov
push
out
sbb
lock
sbb
ret
fs
sub
mov
scas
int3
repnz
ret
lahf
scas
pop
mov
pop
mov
pushf
pop
scas
dec
cmp
mov
inc
mov
outsb
test
daa
lds
cmp
or
cmp
and
rolb
out
int3
iret
mov
rclb
ficompl
jb
mov
addr16
pop
mov
cwtl
or
inc
popf
leave
mov
shlb
cltd
jge
mov
sub
sbb
out
das
jg
xchg
adc
mov
test
arpl
xchg
bnd
sub
pop
scas
adc
pop
mov
out
cmp
dec
aaa
dec
fisttpll
mov
lea
xor
mov
xchg
xchg
inc
pop
mov
lods
test
mov
sbb
ljmp
enter
arpl
cmp
outsl
testb
xchg
jecxz
cwtl
js
inc
call
inc
ror
push
push
mov
cmp
test
push
xchg
sub
mov
adc
fidivrl
fists
or
pusha
fcompl
and
mov
pop
dec
mov
jge
bound
lahf
lret
stos
addl
pop
ja
fucomi
mov
xor
mov
adc
or
test
std
pop
push
aad
mov
fcoml
dec
cmp
adc
jg
add
push
xchg
xorb
aam
shlb
sub
hlt
jnp
xlat
jne
jmp
scas
sub
pop
dec
cmp
xor
cmp
lahf
mov
mov
add
lock
xor
repz
rcrl
insb
or
sub
inc
lret
fistl
inc
mov
test
or
das
popf
cmp
or
sub
daa
jle
cmc
or
popa
jmp
mov
ret
dec
subb
jno
stos
adc
fwait
pop
fbstp
adc
scas
add
rclb
pop
fcoml
and
xchg
sub
lcall
sahf
iret
stos
sub
lahf
scas
pop
pop
popf
cmp
mov
pop
addr16
subb
pusha
pop
call
out
push
cmovp
sub
and
mov
mov
cmpsb
sbb
mov
adc
movsl
scas
cmp
jl
idiv
cmpb
inc
imul
jle
xor
test
mov
lcall
loop
fstpt
xchg
jae
push
add
cltd
xor
adc
sub
inc
out
movsb
sahf
out
mov
out
cmp
mov
bound
and
xchg
jge
iret
call
and
jmp
out
scas
sbb
loope
sub
call
or
or
sbb
xchg
sub
fxch
cmp
iret
mov
dec
mov
mul
out
ljmp
adc
aaa
mov
mov
setb
movsb
or
jecxz
push
scas
mov
or
lcall
popf
push
or
mov
mov
add
popf
aad
fstpt
test
dec
into
call
rcrl
int3
adc
and
mov
or
push
repz
and
cwtl
lret
pop
xchg
sub
out
xorl
sahf
xor
xor
inc
ja
sahf
mov
sbb
divb
rcll
push
sahf
lret
movb
movsb
jle
or
or
cmpsb
push
dec
add
adc
stos
iret
dec
fs
iret
clc
inc
cmpsb
int
jns
jg
icebp
mov
iret
aad
aas
outsl
cmp
cmpsl
add
sbbb
cmp
push
es
jmp
aad
lcall
lcall
jo
out
cmp
jnp
into
sub
and
cmp
xor
push
push
jb
enter
popf
pop
jg
mov
mov
xchg
outsl
bound
sti
jne
xor
jecxz
sarl
adc
adc
sub
cwtl
cmpsb
leave
fidivs
adc
pop
daa
mov
rorl
sub
cmp
mov
popa
adcl
xorb
jae
push
ja
mov
mov
mov
lock
ds
add
into
cwtl
or
stc
mov
or
lret
add
shrl
sub
stc
jecxz
jg
xor
mov
pop
mov
outsb
add
movsb
jae
mov
std
test
fwait
sbb
ret
stos
add
fwait
jo
repnz
aas
outsl
mov
push
sub
push
adc
lods
fsub
push
push
inc
cmpsb
int3
aad
daa
ret
pop
jno
mulb
sbb
sub
mov
mov
mov
addl
dec
or
add
repnz
push
clc
test
xor
sbb
inc
cmpsl
add
movb
repz
aaa
fsubrs
adc
jmp
xchg
jnp
bound
sti
sub
xor
jg
sub
xor
dec
cld
pop
mov
test
es
mull
popf
in
int
push
out
test
xor
cmc
push
mov
dec
add
sub
mov
call
cwtl
into
aad
adc
inc
inc
pushf
les
add
sbb
jne
pop
iret
adc
push
and
and
inc
sahf
mov
xchg
popa
sahf
fcoms
fs
mov
insl
outsl
xor
iret
mov
mov
inc
xlat
test
and
pop
in
cmc
adc
inc
aad
shl
sbb
out
xor
loop
mov
enter
pop
inc
mov
cmpsl
mov
jecxz
in
ss
jns
sar
jb
push
inc
push
xor
inc
es
inc
sbb
add
xchg
push
jg
cld
fcompl
and
fnstcw
jg
dec
dec
into
or
inc
outsb
mov
adc
inc
pusha
jmp
mov
mov
sub
jae
fndisi(8087
or
push
or
pop
add
xchg
addb
loopne
xor
xchg
lea
es
mov
inc
and
xor
scas
mov
ljmp
xor
insb
ret
jmp
pop
and
ret
stc
cmpl
addb
mov
sarb
fldt
data16
iret
push
sahf
ds
pop
sbb
loop
sub
mov
negb
loop
ljmp
sar
sub
fcompl
xchg
loop
lea
iret
inc
jbe
mov
push
rclb
test
mov
jle
jb
inc
js
sahf
xchg
cltd
out
push
inc
add
jp
sysret
shrb
push
mov
or
cmpsb
mov
addr16
stc
and
and
imul
out
mov
cmp
fldenvs
pop
enter
pop
push
pop
sub
sbb
inc
stos
xor
add
outsb
cmp
xor
add
call
adcb
inc
xchg
dec
lret
jle
sub
jae
out
loop
fstl
test
stos
xlat
cli
ljmp
xchg
xor
fildl
xor
pop
mov
or
sti
xor
arpl
jp
sbb
shll
push
in
pop
insl
push
gs
jmp
dec
loopne
xchg
ficoml
jle
or
sub
aad
ja
subl
shrl
lcall
push
push
lret
and
hlt
es
jle
xor
inc
mov
stos
cld
add
outsb
ret
dec
mov
jns
fwait
pop
inc
scas
hlt
add
push
scas
clc
cmp
push
imul
cmp
outsb
pop
mov
imul
adc
fisubrs
or
cld
cmp
xchg
pop
inc
lods
ss
bound
fistpl
hlt
cmpsl
scas
adc
out
xchg
leave
adc
fidivl
mov
das
xchg
pop
js
mov
pop
cs
ret
mov
pop
pop
cmp
push
insb
icebp
lods
data16
ret
ffree
js
jecxz
adc
xchg
mov
jecxz
xchg
sahf
mov
into
dec
mov
je
push
cmpsb
psrlq
mov
dec
in
iret
sub
add
lret
lcall
mov
test
push
mov
repz
xor
mov
jp
jmp
fs
jg
outsb
pusha
movsb
sbb
call
in
mov
and
mov
sbb
ja
xchg
xchg
pop
pop
pop
int3
mov
jns
pop
test
and
pop
jp
mov
fs
inc
repnz
lock
xchg
push
inc
push
outsb
dec
leave
push
dec
into
leave
not
sub
lods
repz
or
out
mov
gs
mov
fs
movl
or
push
fwait
pop
das
ficoml
cmpsl
mov
sub
ss
movsb
in
or
pop
negb
mov
jns
ret
xor
sahf
and
loopne
push
push
add
lcall
in
mov
fwait
dec
mov
js
jl
stc
xchg
jle
jno
adc
call
jno
sbb
sub
push
dec
mov
icebp
cmp
inc
enter
push
cltd
in
and
test
mov
jmp
fcmovb
mov
sti
cs
add
cltd
mov
jecxz
push
jecxz
xor
mov
popf
mov
xchg
lcall
adc
and
jg
int3
scas
imulb
push
jg
cmp
arpl
movsb
add
out
xor
add
jmp
int3
mov
stc
xor
int3
outsb
fdivs
xor
adc
aad
inc
and
insl
jnp
fwait
pop
xor
mov
js
mov
add
push
sub
aam
gs
insb
std
cld
loop
push
xchg
mov
mov
mov
test
das
xchg
jl
adc
mov
mov
xchg
xchg
testl
outsb
stos
jge
inc
pop
sarb
andb
xchg
in
bound
and
sti
cmp
jmp
push
and
sbb
leave
cmp
mov
orw
dec
aad
clc
inc
fsubrs
push
es
movsb
xchg
lcall
pushf
push
dec
and
adc
das
xchg
test
pop
mov
mov
and
cmp
pop
fnsave
mov
insb
aas
and
jb
movsb
xor
cmp
xchg
iret
inc
adc
push
add
xchg
cltd
cmp
push
and
xchg
in
test
xor
pop
push
mov
jge
pop
gs
in
cmp
cmp
dec
add
in
and
push
push
push
popa
scas
mov
jp
mov
imul
lds
xor
mov
sti
test
addr16
jp
xor
rcll
mov
lcall
xor
lcall
jl
in
les
movb
jne
jmp
xor
adc
loope
into
dec
imul
pop
stos
subb
jg
xor
test
or
fidivl
xor
xchg
mov
aas
imul
xchg
cmp
add
sbb
push
int3
and
movsl
xor
adc
dec
mov
cmp
add
fstpt
lret
inc
or
lea
mov
jb
sti
arpl
insb
mov
or
ljmp
push
scas
xchg
cld
push
adc
fildl
xor
clc
in
into
gs
es
popf
inc
mov
comiss
ljmp
pop
mov
jmp
adc
loop
mov
mov
dec
fisttps
or
jae
pop
or
cmp
loop
lock
rcll
push
push
cmp
mov
unpcklps
cs
in
stos
mov
jno
jle
lods
nop
dec
lds
popf
int3
sub
and
mov
xchg
xor
push
sub
mov
cmpsb
xorb
inc
pop
ss
fimull
loop
adc
mov
xchg
mov
mov
out
mov
push
push
jno
dec
mov
jecxz
jmp
cmp
mov
stc
outsl
xchg
call
and
or
outsl
insl
adc
mov
into
fsubrs
nop
sahf
outsl
insl
inc
add
jg
repnz
ja
or
lods
mov
dec
pop
lods
insb
mov
and
jno
insb
dec
and
pop
xchg
jnp
sub
lods
cld
xorb
pop
fimull
add
add
push
int
pop
not
jp
dec
pop
dec
jl
jp
xchg
jmp
sbb
jbe
aad
sti
subb
sti
mov
call
shrl
icebp
push
pop
mov
outsl
xchg
sub
or
out
ss
notl
push
into
loope
mov
in
test
popf
nop
xchg
push
jl
mov
sub
pushf
loopne
call
enter
sarl
and
xor
imul
rclw
mov
imul
sub
loop
xlat
mov
inc
mov
call
mov
clc
jg
or
xor
push
arpl
popf
xor
jecxz
pop
mov
stos
stc
jg
icebp
clc
rcl
cmp
les
push
jo
data16
test
int
lods
mov
test
std
sub
cltd
add
add
imul
xor
repz
and
lds
cwtl
das
sub
mulb
fcomi
inc
ret
insl
bswap
clc
xor
xchg
cli
insl
or
pop
fnstenv
mov
in
and
cmp
adc
push
jle
sub
fists
loop
xchg
or
sbb
jo
cltd
in
mov
iret
xchg
push
pop
stos
jns
test
and
out
pushf
jle
adc
jnp
lret
pop
cmp
pop
fwait
mov
leave
popl
testb
shll
xchg
sub
cmp
pushf
int
and
pop
xchg
sub
lahf
pop
jo
es
arpl
cmp
sub
popa
sbb
jnp
cmp
fisttpll
cs
pusha
in
in
movsb
mov
add
aas
push
mov
push
mov
add
dec
sti
pop
add
sub
out
adc
lret
rcrb
scas
pop
pop
in
or
mov
jb
ret
xchg
pop
test
sub
adc
mov
fsubrp
aaa
xor
jns
xchg
movsb
fsubrs
iret
add
xor
imul
lea
inc
add
inc
stos
pop
cld
mov
add
dec
and
push
aad
cmp
imul
jbe
mov
cmc
cmp
cmp
and
and
jmp
aam
lods
cltd
pop
xchg
push
sbb
xchg
lahf
movsb
lcall
add
js
aas
push
push
add
shlb
sbb
sbb
push
inc
add
pop
iret
dec
imull
pop
sbb
push
push
jb
xchg
sub
faddp
dec
lds
icebp
mov
subl
pop
movsl
xor
cs
in
and
aas
outsb
jb
js
repnz
sahf
and
in
jge
loope
fcmovbe
xor
pop
pop
adc
repnz
sbb
mov
fdivrp
sub
es
jnp
mov
mov
in
mov
imul
fdivrl
cli
je
mov
aas
sbb
rorl
ret
inc
int3
sbb
stos
sub
xor
or
fnstcw
xchg
mov
inc
push
push
mov
aas
inc
test
enter
inc
mov
mov
movsb
daa
gs
popa
dec
lret
pop
push
mov
inc
pop
sub
jmp
test
lret
mov
jmp
cmpsl
pop
ret
imul
dec
add
adc
mov
sti
stos
mov
or
bound
xor
push
fildl
xchg
repnz
out
sbb
aad
xchg
or
push
fmul
mov
dec
ss
cmp
inc
inc
sub
icebp
push
loopne
or
or
dec
or
cmp
sbb
mov
mov
inc
fsubr
es
rorb
leave
xor
mov
pop
mov
and
outsl
out
fists
mov
sub
mov
pop
fistpl
lahf
sti
mov
int3
xchg
push
pusha
arpl
and
xchg
pop
jne
push
aad
push
or
clc
outsl
mov
jg
popf
inc
aam
mov
stc
adc
dec
push
rcl
jno
je
jle
popf
ret
pop
mov
jbe
sub
fdivrl
inc
push
scas
or
sahf
cwtl
negb
mov
int
dec
inc
outsl
adc
dec
push
out
inc
cmp
and
lret
ds
imul
jae
test
push
xor
push
push
scas
cmpb
adc
push
sbb
jae
fsts
inc
lock
stos
jae
jae
push
inc
decl
lock
cmp
xchg
or
xchg
in
and
cs
gs
sub
out
push
cmpl
stos
mov
add
pop
mov
gs
push
stc
faddp
fwait
jecxz
rcrb
stc
rcl
outsb
and
cwtl
xchg
sbb
cmpsl
pop
fyl2x
and
les
push
lret
outsb
fstpl
sahf
pop
aaa
cmp
adc
cld
xor
arpl
in
jmp
loopne
push
mov
icebp
cmp
insl
or
adc
cmp
nop
out
roll
push
mov
das
push
mov
jbe
movd
inc
leave
mov
mov
int3
mov
sbb
pop
stos
subl
xchg
lahf
or
jnp
mov
movl
ss
popl
xchg
outsl
cmc
ja
es
pop
inc
jb
std
fs
dec
lock
loop
cltd
add
dec
pushf
sub
lahf
sub
pop
mov
sub
aad
aam
and
jl
or
mov
xorb
inc
js
cmc
fcoml
lds
mov
push
hlt
bound
mov
aaa
gs
shlb
cld
or
lods
adc
test
pop
sub
daa
pop
mov
pop
add
xor
out
sbb
into
cmp
addl
rclb
faddl
shll
loop
repnz
add
sub
jb
rcrb
jnp
ss
cmc
out
lahf
pop
sub
jp
and
int3
xor
jmp
incb
mov
int
aaa
mov
mov
in
ljmp
mov
scas
pop
dec
sub
sbb
inc
shl
and
in
cwtl
mov
sti
mov
insb
enter
lods
cli
xchg
adc
pop
scas
inc
lret
dec
test
push
and
jb
add
xor
outsl
das
cmc
and
std
lea
mov
adc
test
sarb
jmp
negb
dec
in
in
or
fstl
ret
jbe
mov
loope
bound
and
in
in
aas
lods
pop
xchg
fisttpl
aas
cmp
mov
and
mov
leave
inc
and
je
cmpsb
ss
push
cli
xlat
sub
dec
movl
xchg
stc
in
or
mov
mov
cltd
fwait
lods
and
push
sub
leave
or
lock
fsubs
test
cmpsl
loope
jg
test
cmp
jle
mov
ja
dec
pop
std
jg
int3
stos
mov
jmp
push
test
pop
sbb
xor
in
inc
add
rcll
in
cmp
popf
and
pop
xchg
adc
in
push
add
ds
scas
mov
clc
sahf
shll
jg
popa
lea
addr16
out
ljmp
fsubp
cmp
mov
dec
or
ret
dec
jbe
add
jo
loopne
lret
in
and
imul
adc
push
mov
inc
aaa
mov
aas
or
aaa
sti
xchg
iret
in
out
push
xchg
fwait
push
jae
pusha
xchg
mov
mov
std
pop
dec
lret
pop
repz
xchg
pop
mov
dec
mov
cmpsl
xchg
out
dec
pop
pop
std
repnz
lods
stc
sbb
sti
orl
stos
pop
leave
shll
stos
mov
sbb
mov
fs
push
das
add
add
movsl
mov
int3
clc
in
or
adc
fnstenv
stos
push
imul
pop
sbb
test
call
adc
iret
push
repz
dec
in
fiadds
out
mov
movsl
outsl
ljmp
mov
xor
cmp
movhps
pop
adc
sti
sbb
fistpll
clc
adc
dec
jle
jno
js
addl
rcrl
addb
loope
sbb
or
add
aam
ja
xor
outsb
xacquire
iret
inc
mov
xchg
jge
popa
aad
ja
test
sub
test
inc
dec
in
movsb
dec
out
loopne
data16
mov
jle
loope
in
leave
xchg
or
insb
mov
clc
push
scas
popa
sbb
xor
popf
xor
push
cmp
sbb
jmp
in
jo
in
pop
sub
movsl
std
or
test
mov
cmc
shlb
movsb
add
mov
jle
adc
dec
push
in
movsb
clc
mov
jl
stos
notb
in
pop
cwtl
sbb
bound
jg
or
xchg
sbb
hlt
loop
cmpsb
mov
repnz
jle
jb
dec
adc
sbb
jge
lock
iret
movsl
out
jns
in
mov
enter
rorl
jnp
shlb
nop
aad
mov
ret
xor
pop
lods
adc
into
call
test
push
repz
jnp
jno
ret
push
or
int3
fwait
aam
and
and
lret
ds
mov
test
pop
movsl
cld
add
sbb
ret
int3
stos
cmc
movl
dec
push
movsl
jp
xchg
lret
adc
sub
lcall
xchg
push
sbb
scas
mov
dec
mov
push
push
in
dec
adc
loop
mov
out
test
and
or
pop
lret
fwait
insl
pop
inc
adc
xchg
push
dec
adc
or
outsl
lahf
inc
imul
adc
es
ficomps
or
rcrl
fwait
cmp
jbe
jne
cmp
in
mov
push
sbb
cs
data16
lret
xchg
lcall
test
ds
push
int3
adc
xor
nopl
sbb
iret
sahf
cmp
inc
pop
cmp
cmpsl
mov
bound
push
push
adc
cltd
pop
test
mulb
jo
push
or
popl
imul
in
dec
and
adc
test
mov
mov
int3
xchg
pop
mul
mov
ljmp
cltd
pop
xorps
cli
lret
xlat
mov
into
xlat
pusha
loopne
popf
jecxz
jbe
xchg
bound
outsb
nop
adc
std
jg
xor
fstpl
dec
push
sub
jno
faddl
sbb
daa
mov
out
fnsave
mov
add
xor
dec
lds
mov
hlt
js
ss
push
cmc
mov
push
pop
outsl
ss
ret
nop
loope
scas
pop
aas
sbb
mov
out
mov
inc
sbb
push
je
and
test
xor
push
inc
adc
cwtl
pushf
icebp
jnp
rcll
repz
mov
das
out
sbb
jbe
adc
adc
repz
daa
pop
fisttps
inc
lods
lds
imul
movsl
mov
mov
dec
cmp
xchg
in
push
add
pop
aas
pop
push
xchg
dec
xchg
push
mov
or
movsb
sbb
cmp
sbb
mov
inc
out
ja
mov
mov
cli
lahf
testl
out
test
dec
pop
xlat
sbb
cmp
dec
fstpt
cmp
pushf
es
ret
push
lcall
mov
mov
cmpsb
adc
mov
jb
je
insl
loopne
outsl
jle
stc
daa
test
enter
int
into
or
mov
cmpsl
lahf
lods
out
push
out
iret
cmp
dec
ret
daa
inc
adc
lods
xchg
enter
sbb
sub
jo
jmp
sbb
xchg
adc
inc
pop
ljmp
lea
enter
test
sbb
or
cltd
adc
in
cld
inc
js
inc
pusha
rcrb
pop
inc
pusha
cmp
rorl
adc
mov
daa
hlt
pushf
mov
into
or
sbb
lcall
stos
outsb
sub
leave
bound
cmp
fisubs
mov
out
mov
shrb
mov
xchg
pop
movsb
test
inc
add
in
pop
add
out
popf
cmpl
cmpsl
das
xor
idivl
fsubrl
lods
insl
je
add
rcll
call
push
push
imull
mov
sbb
and
cwtl
clc
push
addl
jno
jmp
jge
into
inc
fs
aas
mov
sti
in
inc
lret
jmp
adc
fwait
mov
fadds
push
mov
mov
mov
imul
cmc
xchg
idivl
add
cmc
mov
cwtl
scas
orb
mov
aaa
sub
or
repz
dec
test
in
popf
daa
mov
mov
shlb
pop
jmp
adc
mov
outsb
mov
xchg
in
negb
jnp
mov
inc
repz
add
adc
jp
jl
cmc
gs
sub
inc
jns
mov
movsb
out
fsubr
adc
loope
sub
iret
jecxz
mov
stc
sahf
fnstsw
pop
pop
aad
mov
mov
stos
xor
pop
sub
cmp
gs
dec
jb
filds
dec
mov
call
mov
inc
pop
or
ficomps
mov
push
call
popa
aaa
cmp
std
addr16
into
pop
push
jl
fsts
ret
cmp
les
jno
adc
scas
out
loop
inc
inc
nop
in
loopne
repnz
dec
dec
push
xor
push
std
aaa
pop
sbb
sbb
xchg
dec
xchg
lods
xchg
shll
mov
les
pop
xchg
je
pop
ret
push
lret
xor
test
push
int
jbe
scas
pop
leave
fistps
loopne
je
invd
iret
lret
or
insb
or
and
mov
mov
mov
jg
loopne
mov
sbb
arpl
outsl
add
stos
mov
mov
mov
fdivs
mov
mov
xor
add
jbe
js
arpl
aaa
xor
mov
lods
add
xlat
push
popa
push
mov
xchg
fcoms
je
inc
cli
ror
add
inc
pop
mov
xchg
xchg
aas
mov
cs
into
nop
fcmovnbe
pop
push
js
add
or
idivb
add
inc
lret
pop
sbb
cld
mov
push
filds
cmp
and
mov
ds
filds
jbe
adc
and
adc
inc
cmp
mov
movsb
adc
xor
jmp
scas
fbld
out
pop
mov
pop
mov
lahf
inc
adc
insl
xor
ret
shl
int3
movsb
mov
popf
push
outsl
ljmp
cmpsb
mov
jnp
jne
mov
xchg
or
mov
clc
test
in
icebp
sarb
adc
fs
mov
dec
in
bound
rolb
dec
arpl
xchg
adc
inc
test
cmp
mov
sbb
insb
mov
jae
test
jnp
sbb
inc
iret
mov
add
xlat
nop
je
jno
adc
lret
sub
enter
loopne
daa
xchg
mov
sub
arpl
or
testb
in
shll
repz
cmp
jle
lods
sbb
inc
mov
imul
test
push
mov
cmpsb
cmp
movsb
insb
out
call
mov
add
pop
pop
xor
xchg
in
xlat
push
mov
sbb
out
dec
or
mov
mov
or
xor
add
inc
stos
add
and
sub
scas
xchg
ret
fcmovnu
adc
adc
cltd
inc
popa
lods
mov
dec
sbb
ss
mov
pop
test
xchg
inc
shrl
jle
outsb
mov
adcw
lea
cs
jb
jmp
out
pop
mov
aad
dec
mov
push
pop
jns
mov
js
lea
out
imul
sbb
mov
dec
sti
pop
testb
in
sbb
sub
aam
or
pop
in
nop
cwtl
push
lods
push
mov
fldl
insb
int3
inc
mov
inc
loop
cmp
push
data16
add
lahf
push
bound
fisttpll
push
fadds
into
mov
shlb
leave
daa
fdivs
xor
sbb
cld
adc
jge
mov
xor
addr16
shll
mov
sub
adc
jo
push
movl
sbb
cmp
fnstsw
push
out
mov
cmp
and
and
nop
aad
sahf
lds
pop
xor
lcall
ss
pusha
les
ja
xchg
add
fisttps
nop
orl
xor
out
out
movsl
sub
dec
jle
mov
ja
stc
lds
outsb
out
pop
cmpsl
push
adc
jp
icebp
inc
sahf
fsubrs
lock
in
in
fisttpl
and
pusha
test
mov
cmp
fbld
sbb
or
lods
cld
mov
sbb
or
xchg
fidivrs
aam
jo
or
sub
popf
sbb
pop
push
stos
scas
imul
jo
pop
dec
clc
adc
ret
mov
fwait
dec
xchg
mov
push
adc
js
or
or
cmp
mov
cld
arpl
and
ds
stos
push
sbb
out
jbe
jno
sbb
dec
scas
rclb
imul
pop
sub
push
pop
wrmsr
movsb
sub
jp
pop
cltd
cli
pop
jne
or
jle
in
fucomp
xchg
push
lea
adc
mov
push
pop
fcomip
xor
out
xchg
add
push
xchg
pop
das
xchg
pop
scas
sub
mov
daa
bound
pop
mov
out
mov
lea
dec
cld
out
gs
xor
mov
inc
stc
inc
mov
jno
out
std
mov
or
lret
jbe
cmp
lret
xorb
ficompl
xor
jno
jecxz
sbb
mov
sub
mov
sbb
std
leave
sbb
push
xacquire
ss
testl
fs
stos
jmp
mulb
sarl
or
cwtl
pop
jg
ljmp
sub
jb
mov
iret
mov
lods
ds
add
lods
popf
push
movsl
outsl
mov
lods
pop
int
repz
push
outsl
popa
jo
xchg
sub
outsl
adc
mov
aaa
inc
and
lcall
inc
push
das
es
xchg
aaa
outsl
push
subl
adc
insb
mov
dec
sbb
adcb
outsb
xchg
shlb
lods
fadd
sti
lds
add
xorb
jp
sub
sub
dec
mov
jg
xchg
imul
ret
sub
into
pop
mov
aas
cmp
jns
int3
cmpsl
dec
cmp
mov
and
lods
mov
icebp
dec
push
inc
into
push
pop
test
cli
and
and
inc
dec
cmc
into
xchg
call
stos
jmp
iret
cli
sbb
int
fwait
loope
call
test
inc
xlat
mov
insb
fdivrl
cld
xor
mov
pusha
push
movsb
jecxz
or
and
and
dec
adc
rcr
mov
subl
mov
test
popf
inc
imul
pusha
idiv
cwtl
inc
push
leave
imul
rcll
ret
lahf
lret
mov
mov
mov
xor
in
jl
aam
push
cmp
fnsave
repz
mov
ficoms
test
and
xchg
in
sub
sbb
in
mov
jnp
sbb
popf
pop
jg
xchg
pop
jne
scas
sub
jle
push
adc
int
arpl
jae,pt
pop
inc
lcall
gs
and
and
loop
ffreep
mov
cmp
arpl
test
inc
cmp
or
cmp
lcall
pop
fsts
mov
xor
stc
mov
in
fdivrp
lods
int
sub
cmovns
pop
or
push
out
mov
pop
lret
cmc
int3
pop
lods
hlt
fwait
scas
pop
je
sub
push
insl
and
cmp
ret
jbe
lock
mov
lods
xlat
jns
add
test
push
cmp
ja
int3
out
loope
insb
in
push
int
pop
xor
push
mov
arpl
sbb
pushf
mov
mov
mov
push
and
mov
fwait
add
ja
sub
iret
imul
jl
mov
dec
push
into
mov
and
jg,pn
scas
push
ja
sbbb
mov
sarl
jge
sti
push
testb
mov
fadd
push
in
xchg
hlt
cmp
testl
imul
push
push
push
stc
inc
adc
lret
add
xchg
cmpsb
jmp
lcall
mov
xor
fs
or
and
test
mov
push
cmpsl
clc
lahf
and
inc
mov
add
fwait
int
mov
mov
scas
aaa
pop
icebp
xchg
xchg
jp
aas
and
push
pusha
xchg
in
subb
scas
jge
call
movsb
jae
lcall
sbb
jg
ljmp
sub
xor
call
inc
mov
repnz
push
adc
jns
sub
dec
xor
push
loopne
pop
in
jno
imul
mov
xchg
dec
sti
mov
cld
jae
outsb
mov
pushf
fistl
clc
mov
jae
sbb
and
sub
cmpsl
inc
pop
insl
in
sub
leave
fwait
pop
sbb
or
cmpsl
cmp
daa
movsb
int3
call
and
adc
ss
xor
push
pop
movsl
fnstsw
out
mov
mov
imul
cltd
shrb
dec
lcall
lods
sbb
xor
je
mov
push
and
test
es
dec
jno
xchg
mov
insl
repz
push
mov
jmp
push
mov
jbe
pop
add
outsl
hlt
push
jg
ljmp
xor
aam
jbe
notl
adc
push
cmp
pop
inc
pop
xor
pop
add
gs
sub
es
test
add
lods
or
pop
and
and
pop
je
fstpt
mov
jbe
xor
xor
jae
idivl
leave
test
es
mov
xchg
xchg
cmpsb
jne
adc
xchg
and
pushf
in
movsb
xor
stos
add
cmpsl
int
in
scas
aaa
incl
sub
adc
loope
roll
cmp
rolb
xor
addb
js
test
or
dec
xor
ret
dec
sbb
popa
or
insb
or
add
xorb
lods
sbb
or
and
and
pop
jnp
xor
mov
test
push
and
scas
shrl
sbb
leave
popf
xchg
cmc
inc
addr16
sub
push
test
nop
sbb
xchg
jl
jmp
mov
fdiv
adc
addl
inc
cmpsl
push
test
dec
shr
cs
incb
fs
sub
pusha
lret
loopne
vcomiss
movsl
movsb
and
push
push
data16
xlat
addr16
mov
xchg
inc
mov
xchg
aad
fadds
mov
or
addr16
leave
das
imul
mov
out
pop
cltd
mov
add
dec
loopne
inc
jl
loope
jnp
ja
das
mov
scas
push
jg
mov
pop
xchg
xchg
mov
add
mov
cmpsb
sub
arpl
xchg
les
pusha
jno
xor
or
xchg
mov
fidivrs
sub
out
ret
and
data16
pop
lret
stos
movsl
in
mov
cmpsb
xchg
sbb
popf
in
data16
push
sub
push
das
adc
vmread
icebp
movsb
in
int
push
jb
pushf
lods
call
pop
mulb
fstps
mov
add
dec
mov
ficoms
fldcw
es
inc
mov
aas
pop
testb
mov
mov
mov
jns
movsb
xchg
loopne
inc
enter
sub
lahf
lahf
cmp
cmp
es
cltd
pop
stos
adc
or
pusha
xchg
insb
or
inc
add
push
mov
int3
mov
insb
lea
incl
add
out
push
xchg
push
imul
xor
aas
and
hlt
nop
xor
push
lods
push
xor
sbb
popf
xchg
pop
mov
push
push
ret
fbld
lods
outsl
ljmp
jns
mov
and
push
nop
pop
jge
and
insl
mov
xor
xchg
and
aam
cmp
xchg
sbb
cmp
adc
and
mov
popa
cwtl
mov
movsl
scas
mov
movsb
out
or
add
cld
rcl
mov
mov
insl
outsb
inc
inc
aaa
popf
ret
mov
xchg
std
mov
push
cmp
sbb
leave
pop
push
mov
lods
dec
or
or
sub
add
jmp
inc
jle
or
mov
bnd
insl
jnp
rcl
or
push
mov
mov
fstpt
dec
xchg
lcall
xor
dec
add
jecxz
pusha
sar
scas
lahf
dec
push
push
xor
lods
ret
xchg
push
dec
mov
fimull
pop
and
loope
dec
xor
icebp
mov
pop
ja
bound
rcl
sbb
test
js
dec
pop
enter
loopne
iret
mov
mov
mov
int3
mov
dec
jns
jg
sbb
mov
in
mov
and
bound
dec
pop
cs
imul
aad
xor
add
add
dec
sbb
pop
xchg
in
jb
scas
and
pop
jae
push
rcrl
jae
outsl
cmc
popa
icebp
adc
and
inc
daa
mov
jno
int
mov
mov
push
sub
push
inc
mov
jmp
inc
push
lods
test
push
jmp
inc
cs
je
mov
mov
mov
out
adc
sahf
fwait
in
addb
xchg
push
hlt
neg
mov
je
pop
lret
and
xor
xor
xor
cmpsb
push
fnstsw
mov
mov
add
pop
aaa
xchg
jecxz
mov
loopne
lods
push
enter
xchg
jge
cwtl
cs
popf
mov
jmp
and
pop
sub
jge
mov
sub
push
cli
mov
xor
mov
outsb
arpl
sbb
pop
adc
pop
bound
cli
in
or
sub
shrb
mov
cmpsl
imul
stc
iret
shlb
and
inc
iret
rolb
inc
loopne
xchg
jnp
pop
fldcw
jecxz
sub
sub
jno
test
scas
mov
loopne
in
sub
xor
fistpl
push
mov
jmp
cmp
sbb
imul
push
fs
mov
pop
out
shrl
ror
movsl
fstps
shlb
xchg
out
ja
xchg
inc
int3
mov
sahf
mov
cltd
mov
mov
or
orb
mov
mov
mov
cld
scas
into
je
icebp
inc
adc
fisttpl
sub
sbb
adc
mov
inc
addl
xlat
lods
aas
jb
hlt
jnp
adc
pop
aas
jns
mov
pop
sbb
jle
add
inc
loope
aam
cmp
or
cmpsb
mov
test
sub
jle
jmp
pop
cmp
or
dec
or
inc
add
fwait
or
sub
adc
mov
enter
push
or
js
jmp
jbe
sbb
cmpsb
test
xor
rcrl
hlt
push
or
popf
pop
push
pop
js
push
pop
sbb
pop
cmp
aad
and
mulb
cmp
pushf
xor
pop
jns
xor
movsb
xchg
pop
inc
dec
dec
adc
and
add
push
inc
outsl
cld
pop
adc
jmp
fidivs
add
mov
jae
scas
repz
adc
imulb
hlt
sbb
or
fucomp
dec
insb
mov
mov
lods
jae
jbe
sbb
int3
daa
dec
xchg
xchg
xor
in
mov
mov
jge
cmpsb
js
test
lret
mov
fcoml
cs
inc
push
sbb
dec
stc
adc
lcall
pop
inc
pushf
nop
mov
sbb
xor
aas
in
and
pop
sbb
xchg
xlat
subb
mov
inc
aas
gs
and
fmull
and
fwait
cmp
andl
ret
xchg
mov
sub
xchg
cmc
pusha
sbb
int
ljmp
xor
pop
mov
adc
cmp
sub
sbb
push
add
jg
xor
and
push
popf
pushf
adc
cmp
cld
jmp
bsf
pop
pusha
sahf
pop
xor
add
test
cld
scas
scas
add
insl
mov
cs
mov
dec
and
mov
mov
sbbb
xchg
faddp
adc
sub
push
imul
adc
mov
out
jp
in
or
inc
loopne
inc
ftst
sub
cmp
sbb
fistps
pop
inc
inc
lods
push
int3
out
add
jb
mov
lods
mov
cmp
cli
icebp
mov
jns
inc
mov
push
mov
push
and
lret
test
movsl
mov
inc
in
mov
loope
nop
pop
pop
jecxz
xlat
mov
icebp
push
sbb
int
jmp
xchg
imul
das
xchg
pop
ror
mov
add
pop
xor
outsb
xchg
xor
sub
mov
adc
out
xchg
lods
ds
daa
pop
daa
mov
jnp
dec
cmp
jl
or
mov
inc
imul
sub
jno
movsl
sub
adc
mov
into
mov
mov
mov
mov
cltd
sbb
pop
daa
repnz
and
pop
lcall
cmpsl
or
adc
sub
aaa
out
sub
xchg
fisttps
stos
add
push
movq
cmp
test
mov
lret
pop
jns
push
rcrb
or
aad
popa
mov
test
ljmp
or
sub
loopne
lret
cli
push
push
jno
pop
adc
cmpsl
inc
or
pop
or
and
imul
push
xor
jmp
out
bswap
jnp
mov
or
xor
leave
test
cmp
dec
lret
cmp
mov
xor
insb
aas
inc
stc
sbb
add
aad
pushf
sbb
inc
sbb
and
cmp
lea
divl
mov
inc
out
push
push
push
jno
dec
fs
xchg
pop
mov
out
cmpsl
push
cli
pop
scas
pop
addr16
dec
cwtl
into
icebp
jp
xor
mov
js
and
xlat
jle
cmc
and
xchg
mov
dec
fwait
jmp
pusha
xor
pop
jl
jno
and
fstpt
es
movsl
add
and
addr16
or
pop
mul
inc
xchg
lock
outsb
sub
pushf
je
cmpsl
mov
jo
push
in
cltd
and
jge
mov
or
xorb
int
mov
repz
loopne
mov
test
out
jne
shl
xor
add
dec
add
mul
call
sub
cli
jecxz
or
stc
dec
ljmp
notl
add
push
adc
add
enter
add
jl
shlb
shll
cmp
in
and
sub
movsb
ret
mov
je
scas
add
repnz
ss
les
imull
pop
and
sbb
push
mov
popf
add
jns
inc
lods
repz
and
in
pop
pop
pop
cmpsb
lret
push
pop
fbstp
jmp
pop
ret
jp
push
sbb
dec
inc
sbb
and
jnp
testb
sahf
mov
dec
jge
mov
testb
addb
test
fmul
mov
das
or
and
push
clc
push
xlat
add
dec
and
jg
cli
ljmp
es
xor
dec
into
stos
dec
movlps
add
sub
js
mov
jge
lock
mov
adcb
jle
add
cmp
ljmp
clc
pusha
mov
aaa
mov
push
pop
push
jg
mov
insb
fcomip
push
xorb
push
dec
out
popl
clc
sub
sbb
lret
cmp
imull
movsb
push
jecxz
jne
ljmp
xchg
popa
or
std
in
and
xchg
and
xorb
insb
subb
mov
jg
xchg
scas
push
push
dec
xchg
movsb
test
sbb
adc
inc
jne
mov
mov
test
and
jns
fucomip
mov
sbb
pop
mov
pop
lods
dec
push
lods
popf
xchg
xor
movsb
pop
incb
pop
icebp
sti
or
sub
gs
fisubrs
lods
cmc
lea
ret
fwait
dec
lods
aaa
adc
test
insb
cmp
cmp
sahf
das
ret
icebp
cmpb
sbb
in
adc
push
aam
je
fwait
adc
sbb
out
xchg
mov
push
sub
xor
sahf
fistpl
add
or
xor
iret
adc
push
subl
sti
push
cmpsb
fwait
imulb
lock
mov
mov
mov
stos
inc
rcll
inc
push
inc
shrl
repz
xor
cmp
mov
cmp
cmp
test
dec
dec
and
call
sbb
xchg
jo
mov
popf
cld
and
icebp
adc
sub
mov
cmp
xlat
sti
cmp
scas
jne
adc
addr16
enter
and
les
ljmp
mov
adc
cmp
or
mov
daa
inc
inc
lahf
jb
mov
inc
mov
aam
jae
adc
std
push
into
cmp
sub
xchg
cmpsb
xorb
cmp
mov
fldl
pop
out
sub
add
or
test
mov
xor
fcompl
inc
cs
xor
fwait
xchg
jl
fnstcw
xchg
add
popa
mov
jne
adcl
fstps
ljmp
inc
xor
sti
insb
inc
enter
inc
xor
push
roll
bound
xchg
inc
push
fs
dec
sbb
subb
in
inc
push
push
orl
adc
out
jle
push
cmp
and
lods
cli
adc
dec
das
lea
mov
xor
inc
out
mov
mov
and
pop
cmpsb
pop
hlt
inc
shr
jmp
mov
jbe
sbb
jne
test
cwtl
jmp
insb
push
int
ja
pop
int3
sbb
arpl
or
lock
jp
shl
shr
fwait
sub
xchg
add
in
mov
and
mov
push
and
mov
lretw
daa
fnsave
out
mov
dec
int
mov
mov
jg
sbb
or
xchg
dec
insb
outsl
sbb
add
sub
xchg
push
gs
movsb
ret
ret
mov
cmp
jmp
mov
xchg
rcrl
imul
and
xor
inc
sub
or
jmp
and
push
lods
mov
xchg
scas
push
mov
jne
clc
pop
out
out
push
mov
pop
pop
push
lea
enter
jne
sti
mov
xlat
or
in
inc
and
mov
pop
sbb
loopne
scas
rcr
rcrb
mov
mov
test
in
adc
cmp
scas
arpl
dec
shll
loopne
jns
cmp
mov
fimull
ja
ljmp
lock
cltd
mov
mov
mov
cs
push
pop
mov
rorl
sbb
mov
call
add
in
jo
cmpsl
and
es
dec
jmp
insl
fnstenv
shl
filds
inc
dec
xor
in
cli
out
adc
mov
in
dec
outsl
pop
jno
movaps
dec
aaa
cli
add
cld
pop
or
adc
jnp
rolb
mov
fs
push
cmp
sbb
cmpsb
lock
insb
dec
and
orb
mov
lret
mov
lods
in
ja
pop
popa
rclb
mov
xor
jb,pn
mov
cmp
call
or
or
sbb
add
cmp
jae
je
mov
inc
dec
pop
add
testl
xchg
test
jns
sbb
lss
or
jp
repnz
pop
in
xchg
mov
mov
shll
xchg
dec
add
mov
lds
push
rclb
and
jecxz
adc
mov
test
ficoms
jge
es
aaa
js
jp
jnp
fwait
cmp
cmpb
dec
inc
or
fwait
jl
in
mov
shll
scas
movsl
clc
ds
cltd
mov
outsl
pop
es
or
insl
jne
jbe
shrl
movl
outsl
sub
les
das
pop
test
loopne
xor
xor
loopne
or
pop
and
popa
cwtl
jecxz
mov
bound
mov
and
dec
mov
or
sbb
jb
mov
mov
cld
outsb
dec
sub
xor
test
lcall
dec
jnp
and
cmp
or
insb
and
pushf
add
mov
popa
stc
flds
lret
push
mov
rcll
movsl
push
sbb
int
insl
cmc
gs
hlt
in
or
fwait
movsl
imul
cmc
mull
push
pop
shll
iret
clc
dec
add
dec
inc
xchg
cs
arpl
inc
xor
lret
in
mov
movsb
pusha
lahf
mov
test
movsl
adc
xchg
push
or
xchg
mov
jno
stos
sbb
fs
or
pop
cmpsb
mov
mov
or
cmp
adc
cmp
mov
ds
xchg
inc
add
push
mov
jo
clc
out
fstpt
mov
jo
mov
sub
cmp
pop
pushf
les
push
pop
xor
scas
xchg
movd
aas
icebp
inc
les
jle
mov
mov
mov
cmp
jb
popf
fdivr
pop
mov
repz
stos
ss
andb
pop
add
rcl
and
mov
jl
cld
mov
in
fbstp
icebp
push
and
jbe
and
lret
pusha
jbe
insl
loopne
icebp
call
fadd
nop
push
rorb
xlat
sub
loopne
rol
repz
xor
cs
mov
xchg
cmpsb
test
int
pop
js
int
add
mov
jmp
or
test
pusha
adc
jecxz
pop
lea
shl
mov
or
pop
sub
inc
and
jecxz
xor
scas
mov
sbb
inc
pop
and
imul
sbb
jp
dec
adc
and
or
mov
popa
or
dec
or
sub
andb
and
test
je
test
aaa
outsl
sarb
invd
mov
insl
pop
push
xchg
push
mov
int3
pop
imul
jb
push
fnstcw
std
aaa
pop
jo
add
jl
jle
rcrl
bound
call
push
iret
lahf
pop
or
jecxz
jb
push
pusha
sar
mov
push
inc
sub
xchg
imul
mov
inc
jl
dec
jb,pt
push
roll
rclb
jl
adc
movsb
ss
leave
xchg
jle
sbb
insb
jae
in
sub
pop
sub
mov
scas
cltd
ljmp
pusha
hlt
jne
movsl
cmp
cmpsl
push
mov
push
sbb
push
test
enter
in
xor
call
push
push
and
cmp
lcall
leave
xorb
fcmovbe
sbb
mov
xchg
xchg
xchg
adc
jp
pushf
lcall
cmp
lret
inc
pop
cmp
cs
gs
fcomps
sti
rcrb
cmp
inc
xchg
mov
mov
testl
std
and
aam
cs
pop
xchg
push
mulb
xlat
faddl
lahf
scas
xor
gs
leave
adc
loopne
aam
fimull
mov
repz
cmc
fdiv
inc
int
test
push
ds
add
xchg
fucom
xchg
inc
out
mov
cmp
loopne
out
fsubrp
and
mov
xchg
cltd
add
int
or
pop
dec
ljmp
lods
stc
test
jb
lea
adc
mov
and
sbb
xchg
roll
rcr
sbb
dec
or
push
push
xor
sub
inc
adc
sbb
je
pop
addr16
jb
bound
xor
pop
mov
cmpsl
jp
movsl
xor
imul
cltd
or
outsb
adc
daa
xor
xor
test
in
lret
xchg
mov
inc
test
imul
inc
adc
mov
and
ja
pop
sbb
pop
sbb
aad
out
rorb
and
push
int3
mov
adc
pop
push
jg
daa
lods
and
mov
jmp
sahf
data16
scas
test
xlat
cs
pop
out
pop
bnd
and
insl
push
xchg
pop
jge,pt
or
xor
fstpl
fbstp
adc
fwait
pusha
sbb
arpl
fidivrl
inc
int
in
mov
test
push
nop
xor
cmp
and
or
jb
jmp
mov
pop
push
lret
mov
mov
daa
xor
xchg
push
push
adc
dec
icebp
or
sbb
mov
xchg
cmpsl
ja
out
jnp
rcl
icebp
xcrypt-ofb
cmpsl
das
mov
sbb
fwait
mov
call
sbb
cmp
jae
push
or
outsb
idivb
jl
or
or
cmpsl
sbb
scas
push
addr16
sbb
fmull
mov
lods
cli
dec
rcll
and
bound
in
adc
mov
or
call
shrd
insl
fmul
addr16
inc
cmp
jbe
pusha
cmc
adc
pop
sti
jnp
jb
inc
adc
push
cmp
les
pusha
insb
cmp
and
aad
jns
pop
xor
test
xchg
stos
mov
loope
xchg
call
cwtl
dec
rol
lds
insl
cli
out
inc
clc
cmp
aas
pop
adc
sbbb
fdivs
repnz
dec
sub
jns
xchg
add
xchg
repnz
cmp
push
adc
mov
push
or
sub
push
jle
xor
mov
sbb
cmovns
dec
lcall
push
cmp
pop
in
pop
stos
sub
shll
mov
cmp
pop
pop
lock
jno
aad
addb
fbld
push
dec
mov
mov
mov
dec
mov
xor
rcrb
mov
sub
sahf
movsl
push
iret
pop
js
lea
mov
jae
enter
emms
lret
mov
jns
into
out
into
lret
sub
rclb
out
cmp
enter
lods
add
dec
push
fs
cmovbe
push
dec
filds
xor
sbb
jnp
loop
negb
in
mov
stos
pop
into
push
or
xchg
fidivrl
sub
push
pop
jnp
popa
pop
jb
insb
cli
sahf
sub
lds
int3
xchg
add
add
xchg
or
outsl
mov
in
icebp
lock
fnstenv
jb
mov
and
rcll
fldcw
cmp
or
jge
fisttpll
adc
outsb
imul
inc
fistps
mov
xchg
pop
es
cmp
ret
pushf
mov
jbe
inc
sub
aas
adc
or
push
popf
inc
js
enter
loope
shrb
mov
not
add
xor
dec
cmp
negb
add
add
loopne
inc
imul
into
xor
mov
gs
jb
mov
nop
cmp
imul
cmp
stc
sbb
sub
inc
push
sub
in
jno
dec
fmull
and
jnp
mov
sbb
jg
bound
inc
mov
cld
mulb
mov
and
in
jnp
mov
sub
adc
out
out
adc
adc
cltd
mov
mov
mov
pusha
xchg
repnz
mov
testb
cmp
dec
dec
xchg
dec
gs
dec
inc
cmp
xchg
cmp
push
rcrl
divb
push
fwait
ret
push
xchg
and
or
jg
mov
xor
leave
mov
jge
icebp
mov
rorb
repz
aam
fldenv
pop
adc
loopne,pt
sbb
and
rolb
pop
cmp
jns
sbb
lds
xor
rcrb
enter
stc
push
scas
push
inc
loop
add
clc
out
sbb
shlb
leave
popa
add
movsl
cmp
nop
lds
mov
sub
push
xlat
andb
dec
jb
xchg
int3
fnstsw
inc
ljmp
int
jp
jns
bound
pusha
ret
or
movsb
adc
push
sti
adc
xchg
push
and
push
sbb
imul
jge
daa
fidivl
les
inc
outsl
dec
push
sub
mov
add
imul
das
xor
or
sub
xchg
pop
test
adc
insb
and
mov
sbb
jg
add
adc
loop
jmp
mov
mov
pop
adc
sbb
jbe
int
dec
mov
pusha
pusha
int3
xchg
out
and
mov
jb
cmp
xor
test
sub
pop
add
clc
add
mov
es
shlb
sbb
movsl
movsl
jl
mov
push
outsb
pop
and
cmp
jecxz
sub
sbb
out
dec
cmp
xchg
and
xchg
outsb
push
push
bound
mov
cmpsb
lcall
mov
add
test
mov
cmp
lcall
jno
sbb
movsl
mov
lock
xchg
adc
push
je
into
dec
cltd
mov
cwtl
fs
pop
cmc
xlat
pop
xor
mov
std
jl
out
xchg
xchg
sbb
orb
mov
adc
mov
xchg
jae
add
dec
outsb
lods
movsb
loope
roll
jg
rol
mov
and
cmp
icebp
pushf
cmpl
sbb
xor
stc
xor
mov
clc
adc
push
mov
ds
inc
fbld
daa
insl
push
and
repnz
sarb
dec
xchg
add
ficoml
mov
in
bnd
mov
les
push
mov
test
leavew
in
fdivrl
inc
mov
jne
imull
sub
and
ret
xchg
mov
cwtl
sub
jae
jg
clc
loope
rorl
cmp
test
jns
fldt
mov
fidivs
add
pop
mov
jmp
shl
fbld
cltd
fs
mov
cmp
sbb
call
mov
and
jbe
mov
inc
getsec
sti
ficoml
scas
cmc
xor
fisttpl
sbb
adc
inc
std
or
sarl
fists
sub
insl
inc
fmull
inc
mov
jp
ror
repz
shr
jo
leave
cld
insb
fisubrs
mov
sbb
pop
out
fcomip
lods
imul
mov
pop
cld
loope
fstps
mov
pop
jo
push
std
ret
int
inc
mov
mov
fidivrl
add
mov
dec
cltd
dec
and
mov
dec
hlt
jge
outsl
enter
cmp
push
mov
push
inc
mov
loope
fidivrl
lcall
jl
dec
inc
or
mov
dec
adcb
cmpsb
pop
jno
scas
cwtl
fwait
lea
add
adc
mov
push
dec
adc
push
mov
cmc
inc
xlat
lods
sbb
lret
jno
js
popa
or
inc
pop
xor
fs
arpl
fdivs
pop
cmp
iret
sub
std
rcl
stos
xor
ret
jne
sbb
or
xor
in
in
repnz
dec
xor
push
aad
pusha
js
inc
in
push
push
xchg
insl
aam
stos
lret
call
insb
xchg
call
dec
jg
jecxz
cltd
daa
xchg
pop
add
aad
adc
mov
negl
es
cwtl
mov
out
in
or
xchg
stos
pop
inc
aam
fcomp
inc
push
sbb
cmp
loop
clc
repnz
push
call
fsubrs
jg
scas
les
arpl
add
in
or
pop
mov
in
cmp
rorl
in
mov
rcll
xchg
push
jg
or
cmpsb
mov
dec
jle
popfw
mov
in
jno
xchg
push
mov
xor
push
lret
mul
arpl
cmp
cmp
frstor
mov
or
and
mul
pop
mov
sbb
xchg
mov
clc
jle
lahf
xchg
push
rclb
mov
jl
jne
loopne
lods
bswap
push
filds
sbb
fnsave
xchg
inc
mov
js
in
lea
les
test
push
xchg
cmp
filds
outsb
push
inc
rcr
sbb
mov
xor
ljmp
push
cld
sbb
clc
ja
sub
jno
or
add
ss
and
dec
sub
sub
mov
inc
in
dec
movsl
pop
sbb
stos
flds
cwtl
mov
fistpll
mov
icebp
roll
dec
arpl
rolb
xor
push
mov
pop
add
rolb
or
jle
push
sub
ss
imul
scas
xor
cld
test
and
loop
orb
hlt
inc
ljmp
je
sub
and
movsb
test
inc
jge
and
out
xchg
cmpl
popa
cli
into
arpl
push
ljmp
mov
cltd
test
inc
int
mov
test
imul
add
dec
jbe
pushf
test
push
xor
mov
mov
shlb
in
xor
fistps
data16
lea
shll
leave
pop
out
mov
test
call
add
cmp
aam
add
bsf
mov
lds
pop
imul
inc
xor
mov
jo
sub
call
lahf
dec
jl
sub
mov
addr16
cmp
xchg
or
out
and
or
and
into
pop
mov
sbb
lock
sub
sub
pop
lds
aaa
sub
jb
dec
mov
test
out
out
mov
outsl
jo
cli
test
fwait
or
jmp
mov
push
inc
xchg
stos
jmp
in
sub
pop
mov
insb
rorb
adc
ss
sub
push
cmp
mov
iret
mov
mov
insb
lcall
mov
xlat
dec
xchg
int3
loopne
dec
push
cmpsl
shrl
pop
mov
xorl
sub
cli
push
aas
cmp
inc
outsl
or
popf
pop
push
in
mov
xchg
imul
fs
bound
and
xor
dec
xchg
cmc
das
mov
inc
push
scas
icebp
cld
pop
addr16
mov
adc
fisubl
enter
rcl
frstor
or
cmp
mov
test
imul
sbb
loope
es
data16
sbb
pusha
sar
add
add
mov
sub
or
aad
pop
dec
ljmp
mov
dec
imul
jno
jb
or
das
mov
out
inc
dec
xchg
ret
xor
sbb
es
cmc
lock
mov
pop
fisubs
shr
or
adc
dec
push
shrl
rcr
add
fs
arpl
lock
inc
push
mov
inc
add
adc
cmpsl
mov
je
add
sub
sarb
fiadds
xchg
jle
mov
add
mov
les
pushf
int
xlat
pop
pop
andl
add
call
icebp
mov
mov
ret
sbb
and
mov
aad
cmp
scas
mov
scas
icebp
mov
adc
cmp
bound
cltd
xor
inc
fisubs
pop
sarl
push
lea
fsubl
mov
cltd
pop
cli
xchg
push
xchg
iret
inc
test
sbb
shrl
rcrl
or
subb
mov
push
mov
mov
enter
and
jmp
shrl
rcl
mov
sti
dec
jmp
mov
inc
ret
jnp
sub
xlat
test
mov
subb
pop
xor
pusha
out
mov
or
cmp
lret
lret
in
xor
xor
lret
mov
cmp
subb
sub
jb
push
arpl
arpl
fsts
lods
sbb
or
outsl
inc
or
ret
test
jp
lcall
ljmp
mov
or
jo
sub
out
push
outsb
in
lahf
and
lds
test
jp
sbbb
cmpl
add
and
add
jl
jp
je
jle
lea
aad
outsb
cmp
test
mov
dec
mov
push
je
push
xor
xor
jb
jge
in
mov
pop
enter
ficompl
outsl
sbb
mov
adc
lret
stos
popf
mov
xchg
mov
mov
jg
bound
xor
pop
mov
pop
js
xchg
dec
sbb
mov
aad
dec
push
dec
xlat
out
jmp
inc
jle
inc
push
test
ret
xchg
jl
cmp
addr16
scas
xchg
test
xchg
pop
mov
repnz
loopne
or
int
push
mov
icebp
insb
cmp
in
jo
or
pop
mov
aad
gs
inc
mov
pop
adc
add
cmc
lods
ja
loope
out
push
cmp
lods
dec
pusha
and
je
adc
dec
cmp
aaa
sbb
ljmp
pop
jne
adc
outsl
fdivs
ret
adc
lahf
insl
inc
rcrl
xor
lret
mulb
dec
sub
aas
add
push
xchg
js
jnp
inc
sbb
jae
sub
lret
mov
shrb
enter
fiaddl
sbbb
mov
mov
sbb
adc
inc
cmpb
or
jmp
std
test
fprem1
shr
out
int3
mov
sbbl
bound
pop
and
insl
data16
xchg
mov
xchg
or
scas
cmp
aas
aam
movl
push
mov
loope
ds
ljmp
fmuls
adc
out
mov
shlb
sub
jae
cmp
movsl
cwtl
push
cltd
dec
inc
nop
outsb
jge
test
mov
cmp
ret
or
cs
mov
les
xor
push
xchg
sbb
repz
dec
xchg
adc
mov
filds
ret
adc
jecxz
mov
test
cld
es
jnp
and
data16
and
xor
sub
and
jg
imul
pop
into
mov
enter
jns
outsl
xor
ficoms
ds
xlat
push
or
dec
data16
mov
neg
bound
shr
sahf
jmp
lock
mov
es
xchg
cmp
mov
push
je
fcomi
dec
hlt
fwait
ss
mov
test
dec
pop
and
fwait
lret
or
aas
sbb
mov
insb
jl
mov
push
mov
ljmp
mov
test
cli
mov
or
fldl
jg
in
imul
jo
cmpsb
roll
and
out
or
scas
mov
loop
mov
add
mov
andl
xchg
fdiv
ret
mov
or
repz
mov
movl
inc
jmp
push
sbb
lcall
mov
out
cmpb
adc
mov
jae
mov
imul
int3
aam
fwait
add
lret
add
sub
es
inc
out
test
pop
mov
xchg
clc
mov
stos
rorb
pop
sarl
cmp
test
cwtl
adc
je
xchg
das
ret
fstpt
gs
sahf
aaa
xchg
aaa
scas
mov
jmp
adc
mov
push
int
movsl
out
lock
dec
and
inc
data16
pop
xorl
cmp
neg
mov
rcll
mov
shlb
cmpsb
scas
lcall
dec
mov
and
cmp
or
test
es
cmp
xor
scas
or
sbb
cmc
nop
lret
and
cmc
or
xor
pop
testb
mov
repz
jne
xchg
aam
or
roll
inc
sar
shll
aam
adc
push
stc
mov
stc
nop
inc
sahf
out
jmp
cli
dec
stc
fbstp
sub
adc
jae
xchg
in
in
pop
call
sub
xchg
or
divb
jp
movsb
mov
mov
sarl
cmp
sub
lods
push
lahf
aam
add
sbb
mov
push
sub
icebp
addr16
add
ljmp
mov
push
push
jle
mov
jl
inc
insl
fstpl
aam
call
push
jmp
sub
arpl
lods
dec
xor
jmp
mov
push
mov
mov
ret
adc
mov
mov
sub
arpl
mov
jbe
jle
insl
test
sub
dec
sbbb
sub
outsl
push
adcl
mov
jno
add
test
inc
inc
ret
add
jo
jnp
ljmp
fucom
xchg
pop
and
test
cmp
enter
or
outsl
les
cwtl
nop
cmp
or
or
push
cmpsb
flds
and
ret
fstpl
ljmp
mov
mov
push
popf
rolb
fcmovne
jp
jo
std
pusha
jne
loope
int3
mov
pop
sbb
cmpsb
pslld
mov
jo
dec
sub
xchg
lds
add
pop
repnz
push
push
jmp
sub
sbb
ljmp
test
jbe
test
leave
push
mov
pavgb
and
jbe
adc
xor
inc
add
test
push
mov
dec
mov
xor
inc
es
jmp
dec
push
ljmp
pop
mov
data16
shlb
movsl
add
cmpsb
pop
sahf
xor
fimuls
loope
out
adcb
pop
mov
jae
jmp
call
std
xchg
cmp
sti
mov
pop
aam
cld
arpl
jg
cmpsl
call
inc
mov
das
dec
leave
push
js
testl
pop
push
movsl
mov
xchg
pop
adc
imul
mov
mov
cmp
loopne
adc
cmp
and
xor
xlat
repz
and
loope
xorb
stc
es
ret
push
add
std
decl
jae
and
movsl
cs
pop
or
inc
jae
fiaddl
pop
cmp
orb
icebp
imul
aad
cmp
cli
cmp
add
or
pop
lret
sub
shl
inc
rcr
loope
inc
inc
sbb
sbb
inc
fs
inc
andb
pop
aam
xchg
and
mov
mov
shl
add
jmp
enter
ret
int
jecxz
mov
jecxz
nop
shr
inc
dec
js
fcoml
imul
fsub
lods
daa
int3
ja
push
insl
in
mov
cmc
insl
out
adc
int3
push
cs
sahf
in
add
sub
rcrl
mov
fsub
pop
mov
mov
pop
cmp
pop
out
or
repz
in
cld
push
xor
push
mov
cmpsl
add
fdivrl
sub
add
out
jl
es
adc
sub
xchg
mov
lods
out
mov
adc
pop
loopne
pop
sbb
test
push
sub
cmp
xchg
inc
fs
jecxz
lahf
pop
test
cmc
int3
cmp
fwait
push
add
sub
xor
sub
std
sbb
mov
and
pop
mov
mov
and
pop
ja
and
ja
inc
mov
bound
ljmp
call
ficompl
das
popa
xchg
bound
and
push
push
into
stos
mov
mov
mov
jecxz
or
mov
arpl
xchg
out
mov
and
add
out
rorb
mov
pop
adc
mov
insb
add
test
into
ret
or
mov
mov
jg
cwtl
andl
jne
jnp
sbb
jbe
bound
in
or
or
iret
xchg
cltd
imul
inc
sbb
sbb
test
in
dec
iret
gs
push
call
xlat
mov
out
iret
lods
jge
popa
cmp
rclb
movsb
sbb
xchg
out
cmc
icebp
cmp
jp
sbb
test
pop
adcl
les
out
out
pop
xchg
mov
sub
fs
cmp
inc
xchg
push
xor
mov
push
sbb
mov
cmp
cli
push
mov
dec
imul
cmpsl
pop
sbb
xchg
sub
das
jbe
sub
adc
cmc
add
adc
mov
popa
popf
mov
sti
sub
cmpsl
sarb
clc
fwait
lret
and
js
loope
ret
andb
pushf
cmp
jl
sub
cs
lret
loop
inc
out
ret
adcl
hlt
jle
test
test
push
xor
sub
jge
or
test
incb
pop
pop
xchg
pop
jl
add
sub
notl
cld
out
nop
sub
lcall
adc
popa
outsb
xchg
bound
rcll
adc
inc
lret
cwtl
mov
out
loope
lahf
sub
sub
movl
or
iret
stos
jne
jp
icebp
xor
pop
inc
cltd
in
cmp
mov
sbbb
pop
divl
out
arpl
vpxor
push
or
shrb
std
insl
or
cmp
rclb
icebp
aam
dec
inc
xor
lcall
jo
sub
and
movsl
stos
push
mov
arpl
hlt
push
inc
test
push
enter
movsb
leave
inc
xor
or
fiadds
es
pop
repz
fucom
push
jmp
test
or
adc
push
insl
pop
in
scas
clc
inc
xchg
xor
es
xchg
jp
sbb
addr16
ret
sbb
int3
ds
out
int3
mov
shl
and
leave
pop
into
or
scas
or
call
mov
inc
bndstx
and
push
int
adcl
clc
mov
in
fstps
jmp
push
mov
jb
jae
leave
mov
mov
shlb
sub
test
fsubrp
or
jo
mov
dec
sub
mov
mov
sti
in
bound
dec
and
imul
jecxz
into
inc
call
jle
lods
ljmp
cmpsb
rcl
xchg
jno
jge
popf
inc
fstpl
mov
jl
test
movsl
xlat
xchg
mov
popa
in
and
mov
out
sarb
into
insb
addps
cmpsb
pop
fnsave
fnstsw
push
sahf
pop
xchg
fcoml
jb
scas
cmpsl
pusha
mov
shrb
repz
test
xor
cs
stc
stos
idivl
xor
mov
lcall
pop
mov
ss
jg
int
test
push
imul
mov
dec
ja
push
loopne
mov
cmp
ret
es
sub
push
arpl
xor
lds
ficoms
inc
test
mov
cmp
std
into
shld
inc
js
aas
push
pop
sbb
inc
das
dec
xchg
xchg
adc
cmp
jae
adc
mov
mov
bound
lahf
pop
sub
mov
pcmpgtd
in
add
hlt
cmc
out
adc
jbe
cld
iret
data16
dec
inc
cmp
lret
out
cmp
das
in
push
jns
aam
inc
jnp
gs
lahf
xor
cltd
fucom
mov
xrelease
lock
cmp
inc
aad
scas
divb
mov
lds
pop
jae
mov
mov
mov
add
enter
mov
push
inc
sub
xchg
cmp
inc
push
mov
xor
ja
xchg
dec
pop
xchg
fistpll
push
jmp
xchg
adc
movsl
dec
or
in
sub
cmp
mov
add
clc
pop
or
xchg
je
sarl
leave
fsubr
sbb
xlat
cltd
in
mov
mov
dec
sub
mov
repnz
lods
pop
notl
jae
stc
xor
pop
pop
sbb
in
xor
sbb
sbb
data16
push
repz
cmp
bound
sub
lods
or
inc
sti
sbb
enter
mov
icebp
xor
out
push
and
adc
aad
cld
mov
ljmp
rcrb
fs
ret
mov
mov
ret
les
jbe
dec
adcl
xor
cs
outsb
cmp
dec
popf
aam
int3
adc
or
notb
stos
ss
dec
shll
sbb
jbe
shll
xor
xchg
imul
cmp
rcll
or
sahf
dec
frstor
mov
inc
int3
sbb
sub
lods
in
outsl
dec
sahf
xor
in
adc
clc
inc
mov
call
xchg
mov
xchg
comiss
xor
insb
test
in
pop
mov
test
sub
xchg
cli
jnp
jp,pt
cmp
xlat
mov
dec
aam
mov
movsl
sbb
and
jnp,pn
adc
mov
jne
popf
js
and
stos
sbb
inc
adc
mov
mov
loope
mull
shll
fucomip
int
movl
sbb
mov
sub
sar
cmp
inc
jecxz
fs
arpl
lcall
mov
mov
jae
neg
insl
adcl
and
icebp
inc
mov
jb
fsubrs
es
inc
xchg
push
push
mov
test
sti
popa
nop
and
je
fwait
jg
pop
add
aad
mov
dec
adc
mov
jne
sub
popf
repnz
push
js
mov
shrb
xor
sub
add
fimull
test
xchg
dec
enter
pop
loop
mov
and
pusha
xor
pop
dec
pop
jp
enter
or
fldt
or
jp
xchg
popf
dec
mov
out
stos
and
dec
jbe
lock
push
ds
jb
push
divb
nop
bound
out
xor
test
mov
pushf
loope
enter
mulps
jmp
aad
shrb
repnz
popa
sti
jb
mov
test
pop
scas
cmp
cmp
cld
icebp
jecxz
xchg
fwait
push
mov
xchg
cmpsb
cwtl
ljmp
call
jl
cs
or
mov
mov
lods
insb
inc
lods
mov
mov
rcll
rorl
out
sbb
mov
test
daa
mov
adc
pushf
adc
testl
orb
jecxz
rcrl
sbb
mov
or
xchg
jne
idivb
rcr
lock
enter
cmp
adc
xor
cmp
pop
add
mov
pop
mov
push
push
aaa
movsb
cs
out
bnd
adc
adc
mov
popa
pusha
mov
xlat
pop
dec
loopne
rcl
nop
pop
and
pop
mov
iret
xchg
mov
inc
test
les
cmpsb
pop
xor
jmp
cmp
sbb
pop
mov
jo
in
icebp
shrl
pop
popf
xor
mov
cmp
or
leave
xchg
mov
or
mov
movsl
or
cmp
push
sahf
ds
pop
adc
jb
ret
push
push
inc
sbb
mov
mov
sti
jmp
aas
sub
push
sahf
sub
add
pop
into
dec
ss
or
insl
inc
stc
push
aaa
mov
inc
aad
cmp
imul
mov
mov
pop
or
or
sub
and
push
out
pop
lcall
inc
stos
jl
jo
push
mov
pop
cmp
push
jecxz
mov
adc
jmp
lahf
test
xchg
je
and
push
push
jae
or
movsl
shld
mov
outsl
shl
jo
lds
addr16
push
insl
aad
sahf
clc
loopne
data16
lcall
sub
sub
sbb
mov
std
xchg
loopne
movl
shll
cld
lcall
pop
jecxz
sbb
mov
lahf
aaa
ljmp
xchg
sub
test
movsb
mov
xchg
pop
xchg
test
rol
inc
mov
ja
xchg
push
xchg
popa
ds
mov
inc
add
inc
adc
in
jb
mov
mov
xlat
idivb
jnp
dec
sar
cmpsb
cmp
dec
es
lock
dec
das
mov
cli
sarb
sub
add
psrlw
mov
divb
xchg
inc
add
lds
sbb
and
loop
outsl
pop
push
outsl
scas
push
insl
lods
jecxz
es
lret
xchg
dec
add
jne
cmpsl
mov
fsubrp
or
xchg
out
pusha
sbb
xchg
xor
mov
cmp
nop
les
cmp
xchg
or
addr16
inc
scas
cmp
cwtl
jmp
sti
inc
adc
lock
push
pop
std
sub
cld
orb
in
dec
xor
gs
pop
ret
icebp
aam
inc
data16
or
mov
dec
push
jge
loopne
repnz
jb
cmp
bound
enter
cmc
scas
movsl
leave
lret
ljmp
nop
add
mov
jno
push
push
push
rclb
jne
sbb
cld
push
daa
mov
and
lods
test
sbb
arpl
push
xor
or
popa
push
xchg
test
dec
fwait
das
aad
daa
push
dec
mov
mov
dec
xchg
push
xor
inc
pop
aaa
inc
mov
push
fdivrl
js
sub
aam
mov
pop
jne
cmpb
jg
adc
cmp
std
rcll
lea
sub
cltd
push
jo
pop
pop
clc
icebp
in
in
arpl
adc
inc
xchg
xchg
and
pop
lods
jae
fwait
nop
push
dec
aas
cmp
test
out
and
fadd
jecxz
testl
xor
sub
push
flds
mov
inc
call
jmp
fistps
mov
or
enter
scas
push
jmp
sub
or
test
ss
mov
leave
sbb
xchg
aam
ljmp
adc
xor
xor
inc
xor
xor
or
adc
sti
addb
jnp
inc
pushf
fnstenv
jb
xor
cli
in
sub
shrb
mov
pop
ljmp
fnstenv
fwait
push
ficompl
jp
cmc
out
outsb
lcall
out
lea
fldl
les
mov
mov
mov
jbe
sbb
mov
jae
mov
adc
and
out
or
dec
test
shlb
xchg
adc
pushf
pop
frstor
ljmp
xchg
int
xchg
cmp
movsl
or
or
ljmp
aas
dec
jmp
into
cmc
mov
inc
ss
mov
mov
dec
ds
or
nop
stos
pop
add
mov
les
es
insl
mov
fsubrl
test
sbb
mov
sub
cmp
jp
into
xchg
cmp
sti
push
push
fdivrs
xchg
jb
out
clc
dec
add
or
jl
daa
lea
inc
add
adc
mov
fnstenv
arpl
xchg
setl
movsb
pop
inc
mov
mov
repz
mov
dec
nop
sub
sbb
inc
mov
es
es
orb
mov
sub
inc
daa
and
xchg
mov
subl
rorb
xchg
inc
inc
out
and
mov
int
xchg
sbb
push
stc
sbb
xchg
dec
pusha
iret
adc
subb
cmp
cmpsl
test
mov
or
add
lahf
dec
xchg
sbb
inc
dec
push
cmp
sub
in
negb
xor
add
enter
jecxz
xchg
mov
mov
mov
push
cmpsl
ja
xlat
and
xor
or
hlt
push
ficompl
cmc
out
pop
aam
cmp
fsubrl
testl
inc
imul
fwait
sbb
adc
dec
sub
lock
lods
sbb
pop
mov
scas
sbb
popf
aam
sub
repz
pusha
or
hlt
push
cld
xor
lret
jmp
and
cmp
mov
sbb
push
or
mov
mov
nop
orb
mov
mov
mov
sti
xor
scas
das
sub
loope
or
int
out
mov
push
or
scas
pop
or
sbb
sahf
sub
jne
sub
sub
push
jbe
mov
dec
inc
vcmppd
cmpsl
les
mov
in
jl
loop
notb
nop
int
lret
xor
mov
add
addl
lods
mov
inc
popf
and
popa
mov
xchg
adc
dec
into
mov
inc
add
push
add
ja
mov
stc
sub
jmp
cmpsl
out
mov
jns
xchg
pop
bound
movsb
sub
fidivrs
sbb
mov
push
xchg
mov
js
push
mov
sub
mov
int3
sub
pop
sub
aam
pop
xchg
nop
sti
xchg
inc
orw
xchg
sbb
and
ret
jmp
jo
mov
pop
aam
mov
and
xchg
or
fistps
adc
sti
push
jl
std
xor
je
outsl
sub
ss
shl
js
imul
arpl
int
mov
dec
or
and
inc
aam
or
jmp
and
push
sub
cld
push
movsb
adc
outsb
ds
jle
movsl
or
mov
in
xchg
adc
int3
pop
cmp
ja
mov
mov
cwtl
push
dec
outsl
les
jb
pop
fnsave
test
sbb
stc
loope
xor
and
scas
sub
rcl
inc
lret
imul
ljmp
js
pop
je
push
mov
sbb
lret
stos
mov
xchg
push
in
push
sbb
inc
add
mov
cmp
test
dec
out
cmp
mov
jmp
push
xor
fcoms
inc
mov
leave
mov
lds
jno
testb
fsubrs
daa
xchg
xor
hlt
dec
sbb
push
movsb
sbb
iret
in
push
out
test
dec
xor
icebp
addr16
or
pop
pusha
xchg
call
dec
fcomi
lcall
dec
loope
icebp
xor
push
stos
addr16
add
add
mov
inc
sbb
sbb
jae
sarl
cli
mov
jb
jecxz
mov
cmp
loop
loopne
pusha
lods
jo
push
out
sbb
jns
inc
shll
outsb
adc
add
lock
lock
enter
xchg
dec
int3
xor
dec
xchg
out
push
and
push
test
aam
add
test
xor
movsb
int3
fsubrl
mov
push
lahf
pop
sar
cmpsb
ljmp
loop
jo
notb
pop
iret
add
lcall
out
mov
mov
dec
dec
xor
cld
ror
jge
data16
xlat
pop
pop
sbb
push
push
repz
clc
jo
popa
les
mov
fcoms
sti
pop
sub
adc
divl
shrb
stos
mov
dec
or
mov
inc
inc
ds
cmp
lds
mov
sub
push
loop
jle
ficoml
mov
jmp
rolb
and
leave
jg
lahf
rorl
adc
popf
or
sub
cltd
cmp
ret
ret
in
pop
cmp
outsb
inc
ret
mov
cwtl
sub
loopne
insl
popa
fldenv
add
adc
pop
or
outsb
sbb
cmc
or
insl
daa
sahf
in
fwait
mov
push
dec
int
jne
fs
or
sti
js
aam
pop
mov
out
fmull
xchg
es
jnp
jmp
or
sahf
or
testl
and
push
loope
enter
stos
in
sub
ds
mov
lods
jb
out
shll
dec
inc
dec
inc
jecxz
loop
jns
jg
cmpsl
stc
out
inc
lret
popf
in
or
addb
sarb
push
cmp
cltd
fldenv
fisttpl
pop
mov
cmp
int
xor
arpl
lds
loope
jno
lcall
ret
or
iret
loopne
cmp
push
mov
movsb
inc
mov
cmp
into
int3
in
inc
rcl
subb
nop
roll
scas
push
sub
scas
or
cltd
add
pop
mov
sub
in
sti
gs
into
movsl
cmp
std
daa
push
scas
nop
gs
mov
ja
ret
cmp
dec
push
mov
xchg
out
cltd
lds
cwtl
fxch
fcomps
inc
test
add
mov
scas
clc
or
adc
repz
ds
jecxz
cmp
nop
test
andl
xor
rep
pop
fsubrs
mov
sbb
xor
xor
xor
pop
call
sub
aas
inc
arpl
push
out
adc
cmp
test
jo
test
lret
mov
mov
test
movsl
out
fadd
dec
or
imul
int3
fistpll
les
imul
dec
imul
cmp
inc
mov
xchg
pushf
jecxz
cs
cmpsw
sub
fcomp
inc
xor
xchg
cmp
cmp
fwait
stc
popa
pop
fidivl
dec
push
pop
sub
xchg
cmp
and
adc
jne
ljmp
int3
mov
inc
hlt
sbb
inc
mov
insl
adc
pop
bound
das
inc
xchg
cld
aas
lret
pop
leave
inc
shlb
cld
sbb
mov
pop
add
adc
int
cmp
out
jp
fsts
xor
cltd
rep
std
mov
xchg
xor
shrb
sbb
stos
pop
icebp
data16
xor
fcmove
dec
or
adc
or
leave
test
cld
int3
inc
cmp
insl
gs
mov
loope
mov
scas
scas
loopne
or
mov
push
std
sbb
popa
out
inc
jnp
fistpl
push
mov
clc
roll
cmpsl
stos
dec
mov
jo
ret
jo
jle
mov
push
pop
loop
fwait
test
mov
filds
enter
arpl
add
jbe
mov
sbb
push
cld
sbb
cmp
mov
ds
cltd
add
mov
pop
outsb
jbe
mov
cmp
aad
loope
in
popf
jecxz
cmpsl
pop
pushf
clc
into
cmp
sahf
test
test
mov
test
lock
sarb
sbb
xchg
jb
jae
rcr
jnp
gs
test
mov
mov
pop
fstpl
outsl
xchg
imul
std
popa
in
out
movsb
mov
bnd
xchg
and
arpl
shll
hlt
lea
sbb
cli
ljmp
je
mov
sti
repnz
out
dec
roll
inc
sub
mov
cmp
std
or
test
add
pop
push
cmp
sbb
in
dec
shll
iret
mov
and
xlat
mov
xchg
int
or
dec
cmp
add
xor
cs
lea
and
outsb
fbld
pop
adc
push
push
xchg
ds
and
add
shlb
into
rcrl
lret
jg
lahf
scas
iret
sbb
adc
xchg
mov
pusha
mov
push
insb
testb
sarb
loop
dec
sub
into
fists
and
in
ret
movsl
or
adc
adcb
xchg
or
mov
mov
or
xchg
mov
das
lock
shlb
cli
push
arpl
ret
out
xchg
out
test
cltd
popa
mov
jecxz
in
movsb
cmp
mov
cs
insl
popa
xchg
lea
das
sbb
ret
into
jnp
xor
adcl
das
add
xchg
idivb
xor
adc
mov
adc
lock
mov
scas
cmp
jecxz
fcoms
sub
dec
or
xor
movsl
mov
xor
lock
loop
add
call
sbb
mov
inc
frstor
cwtl
sbb
ljmp
mov
jecxz
add
ret
fdivs
fimull
stos
pop
clc
push
in
and
and
sbb
call
or
pop
fists
xchg
out
push
lods
pop
push
outsb
xchg
cmpsl
push
movsb
lods
lahf
sub
add
pop
add
fisubrl
mov
push
ret
sbb
add
xchg
push
jmp
fimull
movsl
xor
sub
xor
cs
mov
jle
cs
jge
pop
aaa
sub
mov
das
loope
pop
ja
cmp
ja
int3
movsl
scas
mov
movsb
stos
orb
mov
insb
subb
rorb
cmp
ljmp
inc
cmp
jge
out
jg
test
cwtl
iret
cmp
nop
sbb
iret
shrb
xchg
rclb
repz
inc
and
dec
jmp
xor
inc
pop
push
popf
test
xor
pop
mov
mov
sbb
ljmp
mov
test
int
repnz
scas
lahf
rcrb
rcr
adc
jae
aam
mov
mov
stc
pop
ficoml
add
je
daa
enter
sbb
cmp
loopne
stos
pop
xchg
xor
insl
pop
mov
add
push
pop
popa
fnstcw
mov
sahf
ljmp
xchg
xlat
jecxz
fimull
incb
mov
enter
inc
lods
dec
xchg
repz
jg
inc
xor
bound
jae
call
iret
xchg
cmp
push
stos
lock
adc
loopne
iret
jecxz
addr16
pushf
sub
push
inc
sbb
fimull
jmp
ret
ficoml
push
fdivrp
enter
or
ds
call
mov
fcompl
fadd
mov
leave
cmc
jae
sbb
jae
test
rolb
sahf
out
mov
vmovd
push
movsb
jmp
fnstenv
push
mov
pop
jno
xor
and
into
or
dec
data16
and
mov
push
or
mov
xor
mov
mov
sbb
gs
push
sub
fimuls
xchg
lock
arpl
lods
cld
xchg
shl
sub
addr16
jns
loopne
test
and
and
rclb
ret
cmp
push
pop
mov
sub
push
jecxz
cmc
jl
out
loopne
mov
or
scas
mov
pop
loope
mov
stos
ds
xorl
sub
sub
call
sti
adc
cmpsb
jo
lret
mov
cmp
rclb
xchg
insb
sub
inc
mov
push
or
dec
mov
nop
push
pop
xchg
popf
fwait
jo
add
or
int3
js
addb
inc
imul
mov
sbb
out
adc
cld
cmp
adc
arpl
inc
push
or
lret
inc
xor
adcl
movsb
mov
jl
addr16
cmc
popa
push
cmp
sbb
outsb
hlt
aam
imul
or
in
cmp
stc
inc
pushf
adc
bound
push
ds
adc
daa
add
mov
insl
ljmp
mov
and
inc
lcall
fisttpll
dec
xchg
jmp
mov
cmp
das
adc
sbbl
inc
dec
sbbb
inc
xchg
xchg
hlt
sub
xchg
sti
mov
adc
icebp
xor
sbb
xlat
jle
cmp
push
adc
je
add
pop
fimuls
sub
cmc
sbb
cmpsl
dec
insb
insb
sbb
sub
movsl
mov
adc
push
roll
pop
cmp
push
adc
outsb
sbb
imul
stos
mov
imul
stos
inc
sti
mov
ficompl
popf
push
mov
movsb
mov
ficoms
inc
cld
inc
cld
iret
and
std
pop
shl
push
inc
mov
mov
cmp
push
insl
daa
inc
push
pop
jp
mov
fwait
pop
jle
mov
jge
ret
mov
mov
and
clc
lahf
cmp
sti
in
add
test
inc
mov
cmp
lret
xchg
inc
adc
xor
addb
loop
movsb
popa
in
and
js
or
mov
mov
adcb
push
cwtl
jl
bound
notl
and
mov
popl
pop
movsb
aaa
daa
shrl
jnp
cwtl
sub
fs
or
lret
fisubl
fdivl
movsb
xchg
xor
cmp
test
xchg
push
or
sub
dec
mov
fsubr
cmpsb
mov
mov
je
push
rcll
cvtpi2ps
fadds
jge
scas
test
or
ja
pop
sub
mov
xor
pushf
or
movl
dec
pop
dec
sahf
cmp
inc
sbb
pop
pop
and
lods
inc
xorb
test
out
jo
adc
dec
pop
cmpsl
dec
mov
mov
ficoml
jne,pn
adc
dec
inc
inc
repnz
imul
mov
arpl
jecxz
stc
mov
adcb
pop
xchg
fcomps
cmp
jnp
mov
out
inc
xor
sub
int
lahf
xchg
inc
je
hlt
lea
outsl
sti
mov
fdivrp
nop
pop
jle
jns
test
cs
rcrb
cmpb
jbe
sub
scas
adc
outsb
lcall
inc
js
push
mov
int3
adc
and
test
data16
xor
bound
call
jo
test
adc
push
jo
jp
add
jnp
dec
pop
mov
xchg
jmp
dec
mov
xchg
shll
push
pop
push
repnz
push
fmull
adc
cmp
push
lock
mov
in
xchg
xor
mov
fs
adc
xor
adc
push
mov
pop
sbb
sbb
icebp
push
out
xchg
repz
cmp
cmp
pop
cmp
test
inc
push
movsl
add
inc
cwtl
ss
mov
push
popa
push
jns
push
sbb
push
mov
xor
test
ja
std
or
hlt
popf
rcrb
jecxz
ficoml
inc
ret
pop
fwait
movsl
outsb
or
adc
mov
fidivrl
mov
xchg
mov
add
lea
imul
pop
pop
mov
adc
nop
and
dec
clc
sbb
pop
fdivrs
add
out
stc
movsb
mov
push
mov
sbb
add
ret
aaa
adc
fisttps
gs
xchg
mov
mov
xor
or
add
stos
mov
jle
sarl
xchg
repnz
add
ds
cs
mov
xor
lds
in
pop
sbb
cmp
cmpsl
inc
clc
mov
push
mov
out
mov
call
push
add
loop
xor
mov
xchg
xorl
movzbl
pop
sti
stc
test
pop
mov
std
sti
and
cltd
imul
xchg
add
fs
sahf
testb
in
xor
shr
nop
das
mov
daa
pop
repz
mov
xchg
scas
sub
jbe
or
adc
gs
aas
dec
clc
sbb
ds
add
loopne
rolb
sbb
aam
out
repnz
mov
nop
lret
mov
popa
or
xlat
or
outsb
ds
xchg
push
cmpsb
out
orb
lods
adc
pop
fs
js
add
jg
aad
jbe
adc
mov
out
fstpt
dec
inc
enter
inc
sbb
mov
sub
dec
sbb
or
je
xchg
data16
push
or
pop
cmp
fsubrp
or
outsb
cmpsl
push
mov
add
lods
mov
repz
or
adc
in
sub
mov
push
sti
dec
gs
xor
push
div
test
mov
test
mov
push
xor
xlat
shr
sti
loope
ret
cmp
aam
shlb
sti
mov
cmp
xchg
sub
jmp
cld
fcomps
jb
mov
in
adc
xor
xor
dec
dec
pop
das
push
imull
clc
sub
cld
ljmp
push
daa
ja
push
cmpsb
mov
gs
mov
inc
cmp
shrl
daa
nop
jmp
daa
adc
pop
sub
or
mov
push
jge
rcl
out
lock
sbb
js
call
jle
pop
hlt
filds
mov
fimull
mov
sub
and
fidivrl
sti
mov
daa
mov
cmp
insl
inc
jecxz
ret
test
push
rcr
or
add
lret
jbe
aad
in
pop
sbb
sbb
jecxz
fsubs
jb
cmp
fcmovnu
ret
or
pop
sub
test
testb
dec
jno
or
hlt
lret
mov
xchg
dec
dec
enter
sub
pop
add
mov
gs
aaa
pop
jecxz
jne
xchg
pop
add
iret
dec
enter
icebp
int
mov
ret
mov
stos
shll
pavgw
mov
fcompl
xchg
push
adc
xlat
push
adc
aas
lahf
mov
pop
sahf
std
push
jmp
imull
scas
ret
mov
dec
aad
scas
ret
jl
sahf
addr16
stos
pushf
sub
or
sbb
in
mov
loop
lds
fdiv
les
push
sarl
push
jns
push
cwtl
bound
neg
pop
nop
push
and
sub
clc
into
mov
hlt
mov
add
or
aam
add
das
sti
stos
fisubs
mov
push
and
push
bnd
and
rol
es
xchg
mov
aaa
pop
in
adc
xchg
aad
push
pop
out
adc
mov
pop
mov
xor
call
cmp
jns
add
lret
pushf
loopne
popf
inc
cmp
mov
or
out
popf
dec
jmp
xor
das
push
jbe
adc
shrl
jne
je
cs
inc
outsl
fisttps
dec
jnp
xchg
shlb
push
mov
lcall
movl
fbstp
inc
sbb
out
pop
mov
fiadds
inc
inc
lds
clc
les
in
jbe
sbb
nop
pop
xchg
inc
repnz
add
mov
sub
adc
cmpsl
test
das
fldl
aam
dec
loope
cmp
jg
out
xchg
push
cmp
cltd
cmp
pop
imul
adc
je
cli
xchg
cmovo
loope
lea
mov
insb
in
mov
dec
pop
divl
jmp
mov
in
insl
sarb
shlb
sbb
fnstsw
push
mov
addr16
jns
xchg
jge
pushl
or
leave
add
movsl
add
xchg
testb
sub
jns
jmp
push
jb
jne
lock
stc
outsl
pop
imul
aam
mov
mov
ja
xchg
pop
orl
fimull
sbb
jne
dec
push
or
fistpl
and
scas
cmpsb
pop
aas
mov
dec
aas
cld
mov
addl
lret
dec
mov
or
xor
xchg
mov
movsl
sahf
push
inc
mov
jecxz
push
or
leave
lret
mov
imul
xchg
add
lcall
ja
and
jno
push
subl
adc
hlt
addr16
mov
add
push
mov
pop
outsb
fsubl
xor
mov
mov
in
xchg
inc
in
and
iret
xor
sub
or
fdivrl
jmp
pop
push
xor
mov
lret
subl
test
mov
imul
dec
shl
xchg
adc
xor
jns
nop
daa
mov
mov
jo
adc
lods
xchg
mov
arpl
leave
cli
push
jmp
push
lea
imul
idivl
dec
in
sub
mov
dec
insl
lods
sbb
repz
pop
scas
xor
or
ret
rclb
dec
int3
repnz
test
aad
int3
mov
mov
mov
inc
mov
mov
daa
rcrb
inc
sbb
xor
adc
mov
add
xchg
outsb
jle
scas
xchg
arpl
adc
or
xor
mov
scas
mov
out
imul
inc
jecxz
pavgb
mov
adc
adc
data16
dec
jnp
mov
push
xchg
out
bound
repz
xor
or
mov
rolb
sbb
iret
xor
bnd
sahf
lods
lahf
cli
test
sarl
add
adc
btcl
xor
das
enter
dec
adc
lds
aaa
pop
pop
cmp
mov
fsub
mov
adc
dec
sbb
mov
les
push
mov
push
faddl
jle
mov
xchg
les
xchg
fs
xchg
jl
jbe
add
inc
mov
dec
ret
push
ret
clc
push
pop
repz
sbb
out
fwait
repnz
mov
push
leave
das
sbb
data16
int3
dec
shl
lock
arpl
mov
and
sub
fnstenv
lods
outsl
lahf
gs
fldt
jmp
test
cmp
push
xor
lahf
jge
sbb
negb
imul
adc
sbb
and
les
mov
in
shl
jmp
add
sbb
xor
test
xor
loop
mov
or
xchg
in
cmp
test
jae
sub
scas
das
mov
push
push
insb
cld
fs
bound
push
fisubrl
adc
pop
fldl
sti
pop
fcompl
cmpsb
dec
fwait
stos
je
inc
or
out
xchg
mov
cli
push
add
sbb
add
dec
sub
repnz
subb
dec
aaa
bound
mov
inc
imul
sub
test
jne
xchg
push
xor
pop
cmp
aam
out
jg
xchg
mov
out
mov
jp
out
ss
movsb
cltd
jne
xchg
pop
outsb
aaa
and
xor
mov
cli
adc
xor
fnstcw
adc
jno
lea
and
push
mov
dec
xor
dec
insb
lret
out
mov
xor
test
xchg
data16
xchg
imul
aad
push
mov
inc
mov
mov
xor
dec
lcall
sbb
add
in
movsl
mull
mov
bnd
nop
cmp
lods
jne
mov
push
mov
xchg
dec
pop
js
xorl
jnp
std
aas
push
xchg
mov
mov
mov
mov
or
pop
push
mov
es
outsl
enter
or
or
pop
loope
xchg
mov
push
pop
nop
lahf
inc
scas
xchg
mov
cli
aas
pop
xchg
adc
repnz
rolb
jb
inc
and
into
hlt
les
dec
mov
insb
jle
popa
pop
arpl
lahf
imul
shlb
lea
adc
movsb
bound
shl
mov
cmp
xchg
mov
pushf
stc
imul
mov
xchg
push
sahf
shlb
push
mov
ss
fs
mov
cmp
das
pop
xorb
mov
popa
scas
inc
lcall
sbb
imul
iret
jne
lods
cmp
sahf
jl
rclb
cmpsl
icebp
push
popf
cmovge
notb
xlat
push
jp
aaa
ret
jno
adc
stc
std
addl
iret
xor
pop
notl
lret
sbb
adc
or
call
imulb
jecxz
cmp
data16
mov
sarb
dec
mov
fsts
mov
push
aaa
xor
mov
mov
imul
inc
jbe
mov
popf
mov
rorl
mov
mov
inc
flds
jb
push
negl
or
mov
int
xor
in
enter
push
cmpsl
in
mov
mov
pop
repnz
mov
xlat
fs
dec
addb
shll
sti
sub
popf
xchg
add
add
test
jp
jo
push
ficoms
lret
iret
add
test
mov
cmp
outsl
sbb
loop
fbstp
xchg
pushf
shll
xchg
rolb
push
stc
mov
xor
and
jp
lret
decl
sub
sbb
aaa
dec
loopne
mov
jge
or
jne
mov
fistpl
add
sub
push
cld
lahf
sub
sub
and
cs
rorb
sub
fists
xchg
mov
add
in
sub
xor
je
bound
addr16
jge
into
mov
and
dec
pop
xchg
mov
dec
cli
cli
pushf
xor
and
in
mov
or
std
cmp
sbb
sub
fwait
mov
fcompl
cli
fildl
fwait
xorb
xor
pushf
mov
xchg
add
add
pop
push
fnsetpm(287
dec
push
xlat
out
out
add
pop
rol
add
popf
out
xchg
jg
push
or
popf
xchg
nop
push
test
and
lahf
pop
cmp
icebp
xchg
push
and
xor
decl
add
mov
cmpsb
and
out
xor
test
mov
push
dec
ret
push
nop
adcl
in
and
add
mov
jmp
push
daa
pop
imul
lock
adc
dec
lahf
mov
rclb
or
arpl
hlt
dec
inc
cmpsl
rcr
jb
cmc
js
jno
mov
add
jge
dec
mov
xor
xchg
dec
movb
rolb
mov
popf
imul
sub
push
shrl
out
out
push
pcmpeqd
sbb
loop
or
jae
sub
popf
sbb
lock
lock
cmc
jnp
mov
shlb
std
jns
movsl
aas
imul
dec
lcall
push
push
mov
add
test
push
ja
in
loope
cmp
aam
push
nop
lds
cmpsl
imul
movsb
xlat
sub
ss
fstl
xchg
xor
cmp
es
cli
push
sbb
outsl
iret
popa
sahf
and
addr16
sti
aaa
test
lock
sahf
imul
ss
xchg
xor
mov
mov
pop
jno
sbb
addr16
scas
out
push
movl
ja
loop
dec
or
mov
add
or
shl
loopne
sub
xchg
sbb
or
fistps
fidivrs
loopne
out
gs
js
push
jmp
rcr
iret
xchg
imul
xchg
mov
bnd
roll
push
lods
es
addr16
stos
jp
jo
sbb
push
in
lcall
mov
insl
inc
mov
sub
in
xchg
cmp
sbb
mov
dec
jnp
into
inc
in
sub
cli
and
mov
ret
ds
add
jg
dec
data16
xchg
add
pop
sbb
pop
jmp
iret
rcll
js
cwtl
rcrl
pop
sarb
jb
adc
aaa
out
jmp
xchg
pop
daa
rep
sarb
adc
stos
call
mov
mov
scas
adc
inc
adc
push
gs
sub
or
jecxz
push
stos
pop
add
jo
pop
mov
xlat
xchg
push
adc
in
inc
inc
adc
sbb
xor
data16
lods
sti
add
loop
clc
stos
rcrl
mov
jo
pop
xchg
in
mov
xor
ficoml
xor
cli
jns
rorl
jns
aaa
and
jo
out
in
push
xchg
mov
mov
jnp
add
popa
inc
loope
xchg
xor
clc
pop
orb
icebp
testl
sbb
outsl
push
popa
xlat
shrl
test
test
adc
xchg
ss
push
xchg
cli
mov
mov
pop
mov
ljmp
jae
es
push
test
pop
cmp
cmpsl
scas
or
rcll
mov
mov
cmp
mov
testb
cli
or
mov
outsb
cli
pop
mov
pop
outsb
sbb
push
dec
xlat
mov
lea
push
jl
ss
cmpsb
lret
stos
mov
sbb
mov
mov
mov
stos
inc
stos
add
sub
xor
fimull
mov
shlb
push
mov
aad
stos
stos
sbb
mov
test
stc
dec
rcrb
pop
mov
push
and
jp
pusha
sbb
and
push
cmp
sbb
mov
daa
push
movsb
jp
cmpb
sub
or
js
mov
fdivrl
add
lret
insl
xlat
ljmp
mov
cli
adc
jecxz
cmp
loope
xchg
sbb
icebp
add
ss
mov
sahf
add
xchg
pop
add
mov
rcrb
ss
dec
test
loope
mov
into
mov
je
xor
lods
popf
dec
add
inc
and
mov
lret
xor
and
fsubrs
jno
pop
dec
sub
inc
cltd
movsb
adc
jmp
dec
ret
cmp
ss
dec
jp
or
cwtl
test
push
mov
stc
outsl
mov
cmp
adc
sbb
movsb
aaa
outsl
jl
push
jns
imul
mov
cmc
push
or
aad
jmp
cltd
mov
adcl
push
xchg
push
push
insb
pop
mov
lret
lret
les
jne
or
push
or
adcl
stos
pop
test
cs
mov
or
dec
add
in
divl
cmp
sub
shll
daa
sub
and
mov
jmp
insb
test
jne
and
fcomps
addr16
cmp
jmp
sbb
sub
lret
imul
jmp
mov
shll
inc
or
xorb
out
loop
rorb
dec
sbb
in
stos
lret
fisubrs
sbb
or
fisttpll
mov
addr16
jno
push
inc
xchg
insb
and
pushf
push
cmp
pop
xchg
out
popa
sarl
cli
inc
or
and
lea
add
cmp
imul
push
idivb
iret
imul
xor
and
cmp
pop
mov
add
insl
pop
outsl
mov
lea
out
in
in
rcl
mov
cmp
inc
inc
gs
ficoms
push
dec
sbb
cli
stos
lods
xchg
loope
or
add
addr16
nop
xchg
sbb
sub
add
or
enter
inc
aam
cmc
or
or
sub
dec
mov
push
jbe
dec
jmp
inc
fdivs
mov
mov
add
mov
xchg
fiadds
or
sbb
mov
imul
aam
lret
idiv
insl
int3
out
cmp
jle
mov
out
mov
scas
jne
repnz
inc
out
mov
pop
mov
bound
jp
mov
rolw
subl
shl
popa
push
pop
data16
scas
insl
cli
xor
xchg
mov
sub
stos
test
out
jle
sub
sbb
sbb
nop
mov
push
and
sti
xchg
loopne
cs
inc
push
shll
loope
sti
aam
pushf
mov
mov
xchg
stos
cltd
xchg
inc
psubd
lea
jmp
fisttpll
mov
jne
stos
sbb
jne
push
test
add
in
test
xorl
and
arpl
data16
push
test
mov
jecxz
cmp
sub
das
je
adc
pop
out
or
aam
push
or
popa
mov
rorb
sbb
xlat
ds
push
or
mov
repnz
pusha
pop
mov
push
imul
mov
cmp
cmp
sbb
jg
in
dec
pop
loopne
push
cltd
in
imul
inc
xchg
mov
mov
mov
js,pn
insb
or
xor
xchg
in
addr16
bound
push
xor
or
mov
and
dec
repnz
lock
loop
insl
mov
sarl
pop
push
xchg
mov
jecxz
jns
imul
fisttpl
dec
xor
stc
xlat
jbe
jo
imul
xchg
sbb
ss
lahf
popa
or
push
outsl
mov
mov
outsl
out
xor
lcall
sub
aaa
add
insb
mov
cmp
sub
mov
into
xchg
mov
jne
mov
xchg
movsb
sti
push
movsl
cmp
xchg
push
push
and
xchg
ljmp
adcl
mov
aad
and
in
enter
mov
mov
std
insb
aas
mov
test
testb
xchg
inc
sbb
shrb
and
jecxz
or
or
push
insb
sub
xchg
ret
push
shr
mov
mov
mov
adc
push
and
mov
cmpsl
sub
inc
adc
test
nop
in
int
and
xchg
jp
mov
lds
rcrl
cld
pop
inc
nop
push
fmull
sub
bound
dec
pop
mov
mov
and
jo
rcll
or
shll
or
repnz
pop
sbb
push
pop
cmpsl
hlt
cmpsb
repz
jns
movsb
nop
jecxz
insl
xchg
notl
into
dec
pop
or
pop
jo
and
test
adc
sub
inc
cld
inc
mov
sub
jecxz
jne
mov
repnz
data16
adc
mov
add
jmp
test
pushf
jnp
pop
dec
add
sbb
fwait
jl
das
stos
or
jb
and
scas
mov
xchg
inc
clc
mov
add
ljmp
cld
mov
leave
hlt
pop
inc
pop
into
mov
stc
and
sub
fnstsw
loopne
scas
rcll
lret
fldenv
or
repz
movsl
add
sbb
ss
sahf
push
out
or
cmpb
xor
jmp
inc
pop
mov
pusha
sbb
inc
clc
insl
xor
sbb
push
stos
or
jb
sbb
xchg
cmc
push
insl
sahf
mov
mov
ss
jp
mov
adc
mov
popa
lahf
fnstcw
test
or
roll
insb
std
cmp
xchg
xchg
arpl
jae
and
cmp
cmc
xchg
fists
mov
nop
dec
sarl
or
add
mov
xor
out
fs
enter
pop
lods
adc
dec
pushf
sub
dec
cli
lock
cmp
mov
dec
movb
mov
fistpl
mov
outsl
add
push
lcall
sahf
les
in
lahf
das
ds
shrb
mov
xchg
mov
into
pop
test
push
pop
int3
xchg
fisubrs
call
bound
lcall
mov
pop
xchg
in
sub
or
add
lea
dec
xor
push
xchg
cmp
fcomps
xchg
xor
xchg
loope
call
pop
or
test
xchg
call
gs
popf
add
cmp
or
shlb
cmp
push
and
lods
push
mul
test
sbb
add
bound
xchg
mov
mov
and
inc
cmp
shr
lcall
cmp
lea
mov
pop
push
xor
aas
loopne
jmp
addr16
sbb
imul
add
push
xor
or
mov
mov
and
fimuls
adc
fisubs
lsl
lods
and
inc
add
mov
jl
push
add
dec
mov
or
ret
cmp
out
shl
in
das
std
mov
cmp
outsl
movlps
and
adc
faddl
loopne
inc
test
pop
xchg
fwait
mov
jle
lea
mov
fwait
lea
cld
pop
inc
dec
mov
ja
test
or
hlt
dec
xchg
outsl
push
adc
outsl
arpl
adc
mov
in
mov
outsb
or
leave
ss
sub
notl
add
xor
xchg
push
jle
insl
ljmp
jle
arpl
pop
push
stc
jne
push
cmp
lods
cwtl
nop
add
jmp
cmc
and
lods
mov
js
orb
nopl
leave
jge
into
push
mov
mov
or
push
ds
cli
mov
stos
add
or
incl
mov
stos
fsubs
mov
jecxz
xor
or
addr16
into
push
repnz
stos
cmpsb
sub
sub
cmpsl
rclb
sub
cmp
stos
jecxz
outsb
or
inc
insl
fnsave
inc
shlb
in
mov
xorl
mov
mov
addr16
xor
lret
or
sarl
cwtl
sub
push
icebp
bound
lahf
cli
push
xchg
inc
mov
aas
cmp
add
insl
orl
push
pop
out
lret
pop
xor
pop
in
outsb
in
xchg
sbb
movb
addl
mov
cld
sub
cmp
je
mov
adc
popa
xchg
jne
out
rorl
push
jge
add
shll
and
mov
push
inc
jmp
int
cmp
jnp
imul
jne
adc
mov
mov
aaa
lods
pushf
loope
jns
pop
movb
cmp
mov
adcl
dec
mov
imul
pop
jle
cwtl
xor
cs
or
pop
out
cmp
fidivl
or
jle
shlb
dec
or
ss
arpl
stos
mov
test
cmpsb
inc
sbb
mov
pushf
jmp
bound
out
dec
ret
sarl
mov
and
scas
jnp
aas
movsb
adc
mov
sti
adc
outsb
mov
cmpsl
mov
ds
shlb
je
xchg
adc
cwtl
ja
rorl
and
dec
stos
push
das
push
bound
adc
inc
sub
sub
stos
adcb
aad
mov
adc
xchg
repnz
dec
cmpsl
sbb
sub
xlat
or
cmp
xor
or
jae
popa
push
aas
mov
mov
js
into
stc
dec
sbb
sbb
jle
adc
xor
dec
rcrl
cmp
aaa
cmp
jae
mov
je
repz
xchg
dec
scas
cmpsb
fwait
jge
pop
popa
ss
ds
mov
and
mov
or
sub
push
std
add
loop
lods
cmc
das
scas
pop
gs
or
mov
dec
sbb
add
test
pop
dec
mov
fwait
dec
iret
lahf
cs
andb
arpl
mov
int3
icebp
xlat
test
mov
lea
mov
jmp
cmp
push
or
adc
repnz
addr16
ja
mov
fiaddl
movsl
adc
out
xor
test
into
sub
fsubp
clc
cmp
stc
ret
adc
into
in
jp
insb
mov
add
rcrl
imul
dec
mov
jecxz
inc
popa
pop
push
fstpl
pusha
jmp
sahf
movsl
sub
mov
push
mov
mov
out
int
aaa
sub
insl
into
push
xor
cmpsl
scas
sbb
idivl
pop
push
fildll
lahf
adc
add
addr16
jp
mov
in
jbe
fildl
les
add
xchg
inc
js
xor
fldenv
push
outsl
dec
scas
cmp
add
shl
sub
mov
sub
scas
inc
lret
pop
inc
jns
ja
cmpsl
cmpsl
out
jne
or
jmp
test
xchg
gs
sub
es
jecxz
jp
ficoms
push
in
jge
icebp
aas
std
insl
sbb
out
je
jg
aas
inc
mov
dec
add
jecxz
pop
pop
jae
dec
adc
fwait
cmp
test
dec
insb
pop
or
mov
insb
inc
inc
xchg
sub
adc
call
loopne
fcompl
fisttpll
in
cmp
sub
enter
sub
and
push
mov
cmp
negl
outsl
mov
arpl
inc
push
mov
sub
popf
clc
outsb
test
fs
mov
scas
lret
jl
xchg
add
int3
insb
pushf
sbb
insl
sub
jecxz
test
xor
sbb
ret
pop
jl
adc
aad
mov
jno
loopne
xchg
outsl
jno
cmp
pop
sbb
or
mov
gs
shlb
pop
mov
jae
mov
jl
jne
mov
pop
repnz
popa
sar
xchg
ds
icebp
or
xor
mov
out
mov
xchg
iretw
inc
outsb
sbb
jne
adc
dec
mov
pop
mov
loopne
and
push
lods
scas
jno
js
dec
test
loope
sub
lods
sub
lds
ret
in
jb
cli
jp
mov
stos
pop
icebp
push
inc
aam
mov
nop
adc
fists
imul
pop
mov
or
std
mov
out
or
cmp
jno
out
sbb
mov
push
pop
jo
or
xchg
push
in
les
pop
bound
pop
nop
mov
sub
int3
sub
ds
cltd
mov
inc
shrb
lock
sub
ljmp
xchg
aad
pop
pop
lahf
cmpsb
cmp
decb
fmull
aad
popf
mov
cmp
pop
stos
adc
clc
gs
xor
shrl
inc
mov
cmc
idiv
adc
pop
out
dec
xchg
mov
ss
and
lahf
jge
jne
mov
jno
outsb
out
sbb
orb
mov
push
loop
mov
push
sbb
insl
in
in
sub
fs
nop
sub
ss
sub
jnp
cmp
mov
popf
sbb
data16
mov
mov
pushfw
shll
arpl
dec
inc
je,pt
inc
pop
xchg
pop
inc
xchg
sub
insb
and
test
bound
mov
fsubl
dec
mov
ret
testb
rcll
and
mov
cs
enter
cltd
sub
in
in
xchg
fidivl
xor
call
mov
cld
and
mov
xor
xor
testb
push
out
jp
mov
imul
rorb
inc
cmp
lods
in
movsb
hlt
mov
jno
sbb
adc
jbe
hlt
and
mov
ud0
roll
mov
insl
jge
mov
in
fsts
jo
ret
arpl
add
add
jp
cmp
sbb
sub
sbb
push
push
negb
hlt
inc
xlat
jnp
jp
out
popf
jae
xor
cmp
dec
jo
sbbl
mov
add
daa
jp
pop
mov
jo
lods
test
mov
es
mov
aas
fisttpll
scas
movsb
cs
in
xchg
rcrb
fisttps
aam
or
insl
into
xchg
pop
ss
dec
iret
push
jns
iret
imul
and
sbb
xor
add
dec
xchg
or
lock
lret
mov
lahf
sub
out
pop
add
outsb
loopne
and
lcall
or
cltd
jp
mov
out
mov
add
push
jmp
xchg
ljmp
or
lcall
and
flds
dec
and
or
and
sahf
xchg
inc
mov
dec
les
lods
ret
pop
mov
inc
loopne
repz
ficoms
rorl
pop
push
shrl
je
mov
xlat
mov
jge
adc
js
dec
mov
xlat
outsb
and
dec
mov
xchg
addb
push
lock
lcall
cmp
je
fwait
cmp
stos
sbb
xor
xchg
add
ss
mov
sbb
jns
sarb
ds
lods
loopne
cmp
or
lods
aam
loop
leave
outsl
mov
push
mov
lock
lods
cmp
inc
sbb
inc
add
mov
fdivrs
pop
or
jmp
inc
out
inc
cmp
fidivrl
xchg
les
dec
adcb
negb
dec
negb
repnz
cwtl
mov
inc
pusha
mov
mov
cld
cmp
dec
or
sbb
push
inc
and
test
mov
in
jbe
sub
movsb
divb
push
push
mov
fwait
push
and
sub
and
ss
adc
sbb
das
je
xor
cmc
add
shll
jno
insl
fistl
mov
add
ret
dec
push
cmc
add
push
and
test
fsts
mov
test
lret
inc
outsb
sbb
cmp
or
arpl
in
ljmp
xor
ss
xchg
hlt
push
in
jno
js
push
outsb
cmp
cmpsl
loope
xchg
push
pop
fsubr
out
cmp
sbbl
sub
mov
fbstp
addl
je
jecxz
cld
popf
mov
icebp
aad
fcomps
into
inc
dec
rclb
outsl
test
xor
stos
int3
rcrb
stos
xchg
cmp
sbb
aas
cld
or
xchg
and
jl
xor
push
mov
test
push
add
call
cmpl
jg
xchg
add
rolb
xchg
mov
movsl
xchg
daa
add
cs
cmp
lock
nop
inc
jo
or
dec
iret
popf
ret
push
std
testl
notl
test
xor
or
enter
mov
adc
pop
push
loopne
sarb
mov
pusha
leave
adc
xchg
jp
xor
cmpsl
xor
imul
lcall
out
lea
shlb
pop
sbb
int3
mov
mov
fmull
insl
add
jo
repnz
rorl
insl
subl
sub
adc
pusha
pop
cmp
test
loop
nop
das
pavgb
jno
sub
scas
lret
test
mov
mull
pop
mov
int
dec
inc
in
stc
out
in
ja
jae
sub
out
daa
roll
dec
push
sub
orl
repz
cmpsl
repnz
mov
and
mov
cld
in
push
cmpsl
xchg
xchg
loop
sub
insb
mov
repz
mov
sbb
lahf
cltd
dec
les
imul
mov
dec
enter
and
adc
xchg
in
or
fwait
sti
cmp
push
xchg
pop
testb
xor
sahf
push
test
lahf
imul
stos
push
adc
inc
cmp
addr16
dec
scas
adc
xor
popf
enter
stos
loop
jne
inc
sub
mov
sysenter
add
lret
loope
or
mov
inc
fsubr
xchg
ja
lock
mov
fadds
sbb
cmp
sub
xchg
add
fstpt
scas
jmp
jno
sbb
cmpsb
add
in
mov
sbb
dec
jmp
pushf
daa
je
xchg
clc
push
faddl
outsl
or
xchg
lods
pop
push
push
xchg
cmp
sti
jb
in
pop
ror
in
mov
and
aas
and
dec
ljmp
push
dec
sub
pop
test
jp
pop
insb
lahf
dec
add
xchg
xor
addl
or
push
adc
aas
orb
pop
push
shl
inc
lret
enter
dec
dec
pop
adc
xor
ljmp
pop
scas
out
add
ret
hlt
mov
xchg
adc
pop
cmp
sti
pop
out
adc
outsl
popf
shll
cmp
loope
es
dec
mov
das
enter
into
inc
cld
add
jns
movsl
fdivs
mov
and
add
cmc
shll
mov
lret
lahf
fcoml
adc
ret
sbb
adc
lret
popa
inc
hlt
into
push
jge
xchg
mov
adc
add
js
pop
in
fwait
jmp
mov
xchg
outsb
jge
adc
loop
xchg
arpl
xor
cmp
cmp
ds
gs
pop
shlb
test
lods
clc
cltd
cli
inc
push
or
jo
adc
out
mov
fiaddl
push
xlat
iret
outsl
mov
mov
lock
mov
xor
negl
ret
in
imulb
das
and
std
xor
pop
fdivr
repnz
or
pop
in
jge
scas
pop
push
push
xchg
cwtl
in
sub
stos
fistps
nop
pop
cmp
outsb
or
jbe
ret
das
and
sar
fisttpl
add
sti
add
test
mov
aam
loope
sub
or
xlat
enter
xchg
xor
xor
xor
es
das
adc
jae
xchg
mov
arpl
pop
sbb
dec
lods
inc
test
je
pop
jmp
movsl
inc
inc
data16
out
push
cs
in
dec
cmp
lods
ficoml
test
cmp
test
inc
shrb
push
jle
int3
jmp
ds
mov
pusha
dec
frstor
cmp
sub
ret
rol
sbb
repnz
jb
and
xor
xchg
xor
push
push
dec
fimull
fsubrs
pop
xchg
and
inc
pop
lret
and
pop
cmpsb
push
ds
pop
int3
out
cmp
lahf
call
xchg
fdivl
dec
insb
es
gs
mov
notb
jecxz
lods
inc
pop
pop
sub
mov
push
pop
mov
aas
xor
cmp
mov
inc
pop
shrl
mov
sbb
mov
add
subl
pop
xchg
pusha
and
stc
sbb
ficomps
xor
pop
lods
mov
xlat
xchg
mov
fstps
jns
pop
mov
mov
lahf
repnz
mov
xor
push
fisubrs
cmp
inc
sub
fidivrs
das
in
xor
in
mov
test
or
push
push
leave
hlt
inc
xchg
notl
lds
jno
test
gs
jecxz
push
and
pusha
xor
mov
stos
aad
cmp
addr16
popa
das
ja
add
jbe
adc
cs
pop
dec
xor
push
rorl
scas
pop
out
sti
push
enter
mov
or
pop
popa
hlt
add
xchg
push
cmp
cs
outsb
cmp
jns
pop
inc
jb
adc
sti
jle
xchg
adc
clc
or
movsb
sub
add
fwait
in
pop
jle
fldpi
ret
rcpps
sbb
scas
push
dec
loope
pop
lods
rorb
mov
subl
push
imul
test
adc
pop
shrl
xchg
stos
jp
cmpsl
add
mov
dec
gs
outsl
sub
or
and
xor
fildll
in
enter
mov
cmpsb
comiss
mov
inc
xor
stos
xor
leave
lods
push
pop
scas
enter
fidivrl
push
stos
imul
xor
jne
or
jle
fld
xchg
test
or
mov
push
mov
cmpsb
jg
cld
cmpsw
xorb
ret
push
inc
cwtl
xor
mov
xchg
mov
mov
nop
xlat
daa
dec
inc
mov
ljmp
inc
mov
lea
incb
ja
mov
dec
int
mov
nop
cmc
addr16
enter
cmpsb
aam
stos
and
jne
xchg
incb
mov
lea
in
jmp
or
pushf
dec
scas
repnz
rep
pop
push
in
popa
or
int3
add
ret
xchg
mov
sub
jns
cltd
dec
les
ret
xchg
sarb
mov
les
sbb
pop
ret
jbe
mov
add
jae
mov
jl
and
lahf
into
mov
fimull
push
push
sbb
or
enter
ds
ffreep
mov
and
pop
push
or
std
xchg
mov
xlat
jno
add
dec
mov
shl
jge
cmp
mov
roll
aam
testb
sar
pop
cmp
xchg
dec
insl
fwait
push
or
push
ss
sbb
arpl
jg
shrl
adc
int3
and
arpl
out
jge
jae
mov
in
jne
sbb
dec
push
sub
addr16
cmpsb
ljmp
cld
xchg
cmp
cs
push
xchg
pop
sub
fwait
hlt
jl
ljmp
pop
jae
repz
addl
fisttps
lret
jbe
inc
cli
jne
movsl
dec
out
cmp
subl
xchg
scas
rclb
add
repnz
cmpb
jmp
xor
rcr
inc
pop
test
xchg
xchg
in
push
ljmp
cmp
jns
adc
adc
mov
stos
jb
pop
test
push
and
pop
les
cld
sub
xor
cld
push
mov
dec
push
inc
insb
lock
and
pushf
and
inc
inc
nop
addb
out
fadds
adc
lods
mov
add
ret
lea
movsb
outsb
and
cs
mov
xor
sbb
dec
shlb
pop
aaa
and
push
push
cmp
jns
int3
clc
mov
sbb
test
cmpl
aad
add
movsl
pop
pop
ret
add
scas
fistl
mov
loope
and
sub
testb
sarl
sub
pop
loopne
scas
push
cwtl
mov
lret
popa
inc
sub
xor
les
add
add
pop
adc
lods
sub
sub
aas
pop
aaa
jb
mov
stos
es
lahf
cmp
push
mov
add
xor
dec
rolb
mov
paddsw
pop
insb
movsl
sub
xchg
bound
adc
push
push
jae,pn
jns
jnp
lcall
ficoml
pop
and
aad
push
mov
loop
mov
repnz
jp
push
or
outsb
mov
add
jmp
cltd
push
pop
sub
pop
jl
add
jg
in
add
mov
ds
cmp
jbe
jo
test
rcrl
lahf
push
lds
pop
bound
lods
scas
dec
mull
inc
ficoml
dec
push
and
jg
mov
mov
cmpsb
test
sti
xor
xor
sti
xlat
inc
mov
jno
jo
daa
shr
mov
iret
jle
pushl
xchg
imul
rol
add
cmp
out
nop
pushf
jmp
outsl
xor
dec
sarl
stos
sbb
push
or
sub
leave
and
and
xor
nop
mov
push
push
inc
jl
ja
push
fs
dec
aad
xchg
hlt
xchg
gs
jecxz
scas
dec
sbb
outsl
jecxz
ficoms
nop
xor
xchg
repnz
outsl
pop
inc
push
sahf
push
loop
pop
testl
jp
cltd
imul
dec
aad
xchg
jbe
sbb
or
xchg
xchg
filds
outsl
push
cmp
sbb
sub
adc
mov
cmp
mov
sub
test
subb
stos
add
and
das
push
sub
jl
rcr
bound
arpl
jbe
pop
adc
pop
cmpsb
out
iret
jecxz
lods
pop
push
dec
cltd
in
imul
xorl
xchg
pop
jle
movsb
fsts
aam
mov
add
stos
adc
in
inc
pop
xor
stos
sbb
cs
dec
sbb
mov
das
repz
pop
mov
jecxz
sahf
push
sahf
sbb
dec
mov
cmc
xchg
pop
pop
and
add
imul
jbe
sub
or
fxch
cld
std
fwait
inc
jb
enter
sarb
gs
jb
mov
pop
jae
mov
jg
outsl
inc
jmp
movb
dec
and
pop
add
adc
lahf
imul
xchg
jns
enter
dec
lcall
into
out
cmp
ret
rcll
aaa
test
mov
xor
stos
pop
push
iret
je
and
mov
dec
pop
sti
lcall
aam
in
fsub
xchg
je
add
ss
xchg
fwait
in
sarb
dec
fsubrl
insb
inc
lret
imul
sbb
out
enter
loopne
mov
add
and
pushf
fistpll
leave
or
call
fdivl
shll
outsl
or
icebp
sbb
jo
repnz
add
aaa
jmp
shrl
in
dec
mov
and
aas
sbb
lods
test
sbb
addr16
cs
aam
mov
sub
jb
jno
outsb
mov
adc
add
int3
mov
push
inc
test
adcl
xchg
push
loope
inc
adc
mov
sbb
xchg
inc
cwtl
cmp
ret
fldl
or
dec
ficoml
icebp
fldt
stos
jbe
mov
into
xchg
cli
inc
xor
in
pushf
fcoml
jne
mov
sti
adc
or
jecxz
push
jo
cltd
aam
ds
add
pop
test
gs
push
stos
add
jl
lcall
mov
ss
popf
fdivr
movsb
add
lods
or
lods
dec
mov
daa
cli
les
jl
enter
shl
inc
call
add
push
ss
imul
cmp
pop
xor
adc
pop
inc
stos
cs
pop
lods
push
ficoms
jbe
cmp
mov
lcall
push
inc
mov
push
popf
push
movsl
add
pop
lahf
add
test
test
xchg
div
icebp
or
outsl
test
and
sub
lret
insl
repnz
mov
sbb
fs
shl
pop
lret
xchg
es
mov
mov
jge
xor
cltd
push
negl
call
daa
movl
imul
jge
aad
loop
imul
or
es
outsb
dec
leave
push
xchg
pop
loope
mov
pusha
lcall
xchg
jg
stc
jne
insl
jnp
je
cmp
dec
pushf
inc
jl
dec
mov
arpl
ret
push
shrb
incl
pop
out
loope
push
add
pop
repnz
xchg
je
inc
sub
push
dec
cmp
bound
pop
cmc
inc
clc
sahf
xchg
add
mov
imul
fisttpll
lock
mov
lock
daa
in
test
mov
loopne
sub
outsb
popf
movsb
test
addb
push
mov
call
sbb
fs
xlat
dec
insw
and
pop
pop
or
out
mov
lcall
sub
inc
rclb
push
xchg
jnp
addl
addb
xchg
inc
jne
cmp
pop
and
inc
pop
mov
int
cmp
mov
cmp
mov
inc
mov
pop
jg
dec
push
jp
fcoml
push
and
add
outsl
cmp
ror
cltd
rep
jb
daa
popa
pop
adc
cmpsb
in
les
adc
adc
jno
hlt
add
mov
and
out
sti
mov
pushf
or
inc
iret
lods
jno,pt
lea
add
cmp
mov
dec
sub
icebp
pop
mov
shrb
cmp
cli
popa
sbb
aad
sti
scas
mov
mov
sbb
adc
ret
fisttps
adc
mov
lret
stc
pop
jle
xchg
inc
out
push
sub
ljmp
test
cmp
adc
and
push
mov
jo
int
and
xor
outsb
mov
ja
or
xlat
test
test
addb
push
sub
sub
mov
push
shlb
sub
pop
push
dec
mov
mov
push
and
mov
lods
iret
jne
les
pusha
popa
xor
jle
int3
das
pop
inc
insl
mov
inc
and
in
xlat
loope
push
je
mov
jo
gs
lods
pop
lds
jns
sub
push
test
mov
pop
aam
mov
dec
repnz
fistl
outsl
andl
in
popf
cmpsb
push
dec
movsb
xor
nop
shrl
icebp
je
out
shl
push
add
in
xor
mov
xchg
outsl
repz
js
push
dec
int3
in
sbb
fldt
mov
cltd
add
pop
imul
jmp
mov
jns
movsb
lods
push
fsubl
outsb
sahf
jmp
mov
test
mov
daa
jecxz
into
or
scas
lods
cmp
mov
ds
int
sahf
xchg
xchg
roll
insb
add
pushf
aad
mov
out
mov
pop
push
aam
je
inc
mov
push
test
daa
pop
cmp
cli
gs
xchg
mov
and
nop
ror
in
das
xchg
cltd
pop
cld
test
add
xchg
cmpl
cmp
ret
lcall
int
inc
cmp
aad
sbb
dec
int
imul
imul
xor
push
pusha
sbb
arpl
or
std
cmc
and
jmp
inc
mov
les
in
xchg
andb
sbb
out
adc
call
mov
jl
and
fstps
or
data16
lea
imul
test
and
sub
mov
or
stos
add
xor
nop
mov
dec
nop
sti
iret
mov
add
jmp
jnp
les
jp
adcb
into
pop
aad
data16
in
push
push
mov
push
out
add
jecxz
mov
minps
sbb
xchg
or
mov
or
or
fcomip
cmp
inc
dec
stc
mov
shll
fisttps
jb
and
cmp
inc
jle
sahf
shll
icebp
loope
movsb
mov
jns
pop
sbb
cmc
outsl
gs
les
and
rcll
pop
das
xlat
and
loope
icebp
inc
xor
shlb
add
sbb
mov
inc
xchg
inc
push
aas
dec
push
sub
pop
pop
pop
jne
enter
pop
aad
je
outsl
pop
mov
ljmp
dec
cmp
add
sbb
lea
cmp
sbb
pop
add
mov
in
sti
jmp
push
mov
lret
jno
inc
xrelease
call
inc
call
les
cmpsl
and
fs
loopne
bnd
push
ss
jmp
xor
or
xchg
push
inc
lea
data16
adc
mov
into
int3
xlat
dec
cld
jbe
mov
push
lds
dec
jmp
jmp
cmp
jbe
dec
ficompl
daa
add
and
in
xchg
shll
and
push
jnp
cmp
add
jns
mov
cmpsb
fisubs
push
xor
cmp
inc
scas
or
and
xor
stos
call
call
jp
mov
test
sub
sbb
push
out
or
imul
aas
pop
fsubl
rcrb
mov
dec
out
mov
in
std
xorb
and
xchg
or
fwait
pop
mov
or
xchg
and
mov
leave
ds
mov
in
sti
mov
mov
xor
mov
dec
cmp
push
repnz
dec
in
pop
xchg
ret
scas
mov
mov
hlt
or
push
cmpsb
and
add
cmpsl
inc
scas
dec
cwtl
lea
jbe
rol
or
mov
scas
call
leave
dec
inc
jb
sbb
push
xchg
push
in
mov
ljmp
push
jmp
cltd
pop
je
push
in
insb
sbb
stos
xor
sub
pop
xor
push
sti
repnz
daa
mov
dec
adc
push
xchg
clc
and
in
stos
stc
push
xchg
enter
adc
push
or
adc
and
push
mov
and
add
xor
or
jb
dec
add
pushf
mov
or
mov
push
flds
ret
pop
mov
sbb
dec
lock
or
dec
xchg
inc
fisttps
mov
cwtl
fcoml
jg
and
push
outsl
inc
mov
jg
pop
mov
cmp
sbbb
clc
and
pop
push
pop
lret
inc
push
adcb
adc
sub
inc
inc
push
xchg
fisubrl
gs
pop
movsb
add
mov
les
fsubrp
lea
fsubs
or
sub
mov
and
testl
gs
ror
mov
xor
sub
sub
xchg
js
gs
cmp
add
enter
cmp
fcomp
rcl
sti
add
and
sbb
mov
xchg
fwait
cmp
ja
or
les
and
nop
jb
dec
es
cmp
stos
daa
xchg
mov
insb
pusha
push
jl
jnp
push
push
out
mov
jns
test
clc
test
out
clc
sar
pop
jp
cmp
mov
xor
aaa
adc
xor
inc
sub
push
cmp
clc
mov
sbb
movsl
jp
int3
and
fdivr
mov
xchg
jno
fidivs
dec
push
sub
mov
insl
cmp
frstor
stos
subl
pavgw
in
sbb
lret
ss
cs
pop
push
enter
loop
in
popa
cld
push
stos
hlt
sub
add
outsb
push
stos
leave
mov
idivl
sarb
pop
push
in
test
mov
pop
repz
test
mov
inc
push
mov
in
mov
mov
jno
sub
mov
icebp
inc
sbb
adc
sub
pop
push
mov
add
inc
scas
mov
add
push
pop
dec
test
adc
sbb
std
cld
xorl
lret
into
cmc
pop
jo
xchg
sarb
in
out
clc
pop
loopne
push
pusha
ret
dec
std
into
je
fdivrl
lahf
mov
jl
aam
shrb
jmp
and
icebp
or
mov
xor
stc
push
cmpl
jne
pop
inc
insl
ds
out
addr16
add
or
imul
jo
sub
adcb
lahf
cmp
or
mov
in
and
inc
push
sub
mov
pop
aam
movsb
negl
push
inc
xchg
sbb
jns
pop
lods
mov
sub
inc
cs
xor
cmpsb
add
sub
pop
test
les
sbb
les
xor
loop
mov
cmp
outsb
call
jne
pop
inc
inc
xor
inc
pop
mov
push
cmp
mov
sarl
or
mov
scas
push
mov
adc
push
repz
xchg
xchg
add
ret
adc
lds
movsb
dec
nop
bound
xchg
cmpsl
pop
xchg
nop
cld
pop
scas
rorl
add
call
add
int3
je
push
sahf
leave
nop
scas
insl
pushl
stos
xchg
xor
pushf
call
add
jb
setl
sbb
fistps
pop
xchg
lcall
lods
pop
push
arpl
xor
andb
xchg
pop
rclw
inc
mov
xchg
ds
cmp
lods
stos
popa
ja
xchg
and
push
add
pop
popf
sub
xchg
jbe
mov
pop
ss
fdiv
sahf
mov
xchg
clc
sub
lods
pop
pop
add
hlt
ret
inc
mov
add
inc
movsl
xchg
jp
ror
sarl
cmpsb
cwtl
cmp
and
sbb
sub
in
in
lods
stc
adc
mov
ljmp
inc
sub
into
adc
stos
inc
mov
push
repz
xchg
in
xor
cmp
xchg
lock
jne
jle
and
addr16
dec
cmp
jecxz
dec
fsubrp
dec
into
pop
xchg
cmp
mov
shlb
dec
dec
xchg
inc
push
sahf
xor
inc
lea
mov
stos
subl
jecxz
dec
jl
mov
je
xor
loope
or
sti
jno
pusha
je
cli
push
jae
inc
stc
push
out
and
test
dec
rorl
clc
insl
jmp
sub
jmp
in
cmp
mov
mov
call
dec
aam
xchg
popf
repz
mov
scas
in
lret
and
and
cmc
push
addr16
jne
negb
xchg
inc
je
pop
fbld
lea
fidivs
mov
pop
popa
xor
lret
sub
lret
pop
mov
ds
jo
in
imul
enter
or
pop
sub
cmc
mov
and
pop
push
adcb
aam
mov
sub
das
dec
cmpb
dec
mov
jne
aam
and
dec
nop
mov
rcrl
dec
inc
test
inc
and
ret
or
pop
shl
outsb
mul
push
or
push
jge,pn
int
movsb
int
adc
lret
stos
mov
rcrl
jbe
into
sub
and
jmp
push
mov
xor
daa
lock
xchg
dec
iret
int3
push
imul
mov
dec
aam
mov
cmp
dec
sub
sti
cmp
repz
in
mov
jle
push
ljmp
cmp
pop
rcrl
xchg
or
cmp
cmp
dec
xchg
xchg
xor
sub
mov
lret
cmp
outsl
dec
imul
jb
fnstsw
bound
add
lods
mov
jp
pop
shll
aad
sbb
movsb
scas
shrl
std
xchg
das
pop
push
mov
repz
jg
mov
dec
pop
mov
testl
and
shrl
ror
pop
fnsave
lea
jp
adc
stos
test
lret
sbb
sub
sbb
lret
mov
jnp
xor
fdivrs
dec
adc
repnz
aaa
enter
fwait
push
mov
and
dec
mov
mov
shr
jb
inc
lods
pop
faddp
mov
sub
stc
sub
lahf
inc
add
mov
mov
stos
leave
jb
nop
pop
imul
movsl
inc
shrl
jne
and
sbb
sar
mov
mov
push
sub
or
imul
xlat
popf
loop
jns
stos
repz
jb
and
mov
xor
mov
xor
adc
lea
aaa
push
sbb
hlt
rol
adc
cs
xor
pop
xchg
inc
and
push
lcall
pushf
cld
in
lock
lods
sahf
movb
fmull
mov
or
scas
psllq
cmc
pop
arpl
pop
mov
int3
scas
loopne
and
loopne
hlt
mov
pop
das
jmp
dec
daa
ds
lds
cld
lds
adc
jmp
push
add
pop
test
jb
mov
shl
ljmp
or
xor
mov
sub
data16
jne
test
ret
inc
cmpsl
outsl
in
jg
call
mov
mov
mov
lret
inc
sub
adc
daa
xchg
lea
sub
lcall
xor
stos
xchg
fisttps
sub
xorb
sub
in
or
pop
mov
sarl
fnstcw
mov
popa
mov
fsts
push
mov
sbb
cmp
adc
pop
sahf
and
pop
push
push
cmp
and
lea
xchg
sbb
lret
push
inc
dec
aad
lahf
das
pop
dec
sub
mov
cmc
pop
sbb
cs
lret
hlt
out
or
in
push
lods
negl
adc
adc
xchg
nop
rcll
test
dec
jb
sub
dec
in
sarb
scas
andl
xchg
adc
sub
jle
jnp
lods
push
ror
pop
push
sbb
sahf
gs
std
std
rorl
outsl
jbe
inc
mov
dec
out
imul
mov
pop
xchg
mov
les
js
push
popf
lcall
add
or
test
xchg
lea
rcll
data16
fsubrs
cmp
std
inc
sub
inc
adc
frstor
cmpsl
mov
xchg
mov
pushl
cs
ret
pop
cmc
loop
roll
ss
jmp
roll
jl
leave
sti
and
test
aas
stos
int
rcrb
add
xchg
fsubrp
mov
push
sahf
negl
fisubl
aas
dec
push
lea
dec
mov
fnstsw
mov
pop
jle
push
daa
cmp
add
jl
lcall
xor
cmp
sub
mov
rcll
in
adc
lods
hlt
jmp
dec
adc
movsl
push
jae
or
pusha
mov
adc
sbb
sbb
pushf
mov
movl
or
lock
adcb
mov
pusha
loopne
test
mov
or
mov
ret
jnp
ficomps
mov
sub
push
enter
add
add
sahf
add
fcomps
or
ficompl
cmc
fldl
es
add
fs
add
push
cli
push
jns
repnz
test
jbe
fstpl
clc
jnp
pop
fwait
lcall
js
xchg
outsb
push
movsb
out
mov
mov
cmp
cmp
shr
lret
fisubrs
es
iret
adc
pop
jge
inc
mov
mov
mov
notl
jle
lods
mov
out
inc
xlat
lahf
rorl
test
jge
testb
or
jae
xchg
jge
rcrb
xor
dec
inc
mov
jmp
int3
rcrb
ret
sahf
inc
and
ror
mov
xlat
shll
ljmp
int
cwtl
mov
outsl
icebp
jmp
fcomps
sbb
retw
and
dec
mov
dec
dec
jnp
jmp
sbb
or
rcpps
push
jl
je
std
imul
test
lods
dec
sbb
and
dec
dec
loopne
mov
mov
fistps
int3
dec
jge
fcomps
xor
aaa
out
stos
mov
outsl
fadd
and
xchg
or
dec
lock
lret
sar
sti
jecxz
sbb
mov
adc
inc
lcall
xlat
popa
or
movsb
lock
jg
sub
mov
les
push
adc
ds
ss
ds
xor
mov
mov
mov
jae
cmp
mov
jnp
inc
inc
outsb
loop
adcb
ret
xchg
pop
sub
les
std
add
popa
inc
cld
fdivl
cmp
flds
adc
cwtl
stos
jl
or
dec
repnz
adc
mov
aas
adc
fldl
pop
dec
mov
add
addl
data16
lret
push
aaa
or
sub
push
das
repz
mov
lret
sub
out
push
or
jno
xor
and
sub
pop
inc
cli
adcb
add
or
fiaddl
push
loope
cmp
dec
sub
jl
icebp
push
push
and
std
leave
loop
sarb
sub
mov
pushf
pop
pop
xor
cmp
and
adc
mov
movsb
repz
enter
mov
andb
mov
fdiv
das
dec
jge
sub
cmpsl
loope
mov
pop
mov
cmp
pop
xor
imul
lahf
inc
call
or
inc
mov
push
xchg
cli
sub
movsb
and
jp
cmp
add
sbb
paddq
mov
out
js
and
cmp
stos
iret
js
into
scas
pop
int3
mov
xor
jecxz
mov
mov
add
jg
outsl
adc
hlt
jle
dec
sbb
push
enter
inc
xchg
daa
int
cmp
xchg
sub
sbb
mov
and
and
arpl
sahf
test
and
addps
mov
es
or
orl
popa
dec
mov
outsb
mov
mov
mov
mov
lds
incb
fimuls
xchg
mov
repz
pusha
pop
je
mov
add
cltd
jo
xchg
mov
sbb
or
pop
push
xchg
shrb
pop
sarl
lret
push
lret
jo
notb
fwait
orb
in
ret
mov
gs
out
aam
mov
shlb
cmp
in
inc
dec
cmp
cmp
notl
xchg
mov
arpl
int3
dec
jmp
or
stc
add
test
test
jmp
push
inc
imul
fisubrl
gs
sub
dec
jb
pushf
roll
ret
lcall
add
pop
dec
mov
or
inc
stos
lea
and
rcrl
fmul
xchg
pop
push
in
dec
cmpsb
xchg
push
fcom
and
clc
add
adc
jno
or
cmp
rcrl
jo
aas
sub
adc
push
jns
ljmp
adc
push
pop
mov
inc
dec
enter
repz
and
inc
das
mov
stc
add
sbb
mov
dec
arpl
push
stc
ret
repnz
pop
and
mov
mov
mov
rcl
or
jno
push
orl
xchg
push
lcall
mov
lods
add
mov
cmp
test
jecxz
push
sbb
imul
outsb
cmpl
imul
repz
fs
ja
xchg
mov
ficomps
ss
div
inc
mov
xor
sti
fidivs
inc
xchg
ss
mov
out
dec
in
xchg
repnz
sbb
add
mov
push
and
aaa
and
or
jg
adc
inc
jnp
testl
fisttpll
cmpsb
aad
push
sbb
xor
jne
in
mov
imul
les
jp
testl
aas
and
or
adc
pop
sbb
popa
or
xchg
test
ljmp
pop
repnz
pop
loop
clc
pusha
je
or
jnp
pusha
cmp
scas
fisubrl
sti
sahf
sub
in
ret
sbb
sahf
mov
push
pop
pop
mov
popf
ds
mov
in
sbb
dec
mov
xchg
lcall
imul
dec
mov
and
shlb
mov
ficompl
lret
sbb
lea
out
ljmp
xor
aas
ljmp
in
andl
sbb
fidivrs
adc
ss
add
sub
frstor
mov
rcl
or
inc
mov
inc
xchg
mov
into
add
xchg
or
push
lods
push
jbe
cmp
imul
les
or
jg
jbe
and
sub
xor
xchg
mov
cmp
orl
mov
add
jne
cmp
mov
cmp
std
movups
jle
movsl
cmp
test
slwpcb
frstor
in
push
jbe
loope
sub
xor
add
test
cmp
xor
mov
fdivrl
mov
or
jbe
xor
mov
jle
jno
lcall
mov
pop
ja
or
bound
xchg
fwait
idiv
sti
repz
xchg
lds
xor
outsl
mov
push
daa
daa
cmp
or
out
int3
dec
test
jnp
jns
movsl
loopne
and
push
push
xorl
int3
inc
or
and
je
lret
in
sahf
or
jb
mov
das
jbe
lret
dec
cmp
or
pop
int3
lea
or
cld
push
jl
rcrb
and
ljmp
outsb
sub
loop
push
enter
rorl
out
insb
cmpsl
imul
mov
cmp
xlat
or
mov
mov
shrl
fcomps
pop
idiv
mov
sahf
out
aam
pop
addr16
inc
mov
dec
mov
pop
inc
andl
lds
jo
xor
mov
mov
cmp
cmp
imul
mov
pop
sub
lds
and
push
mov
shrl
cmpl
dec
out
bound
and
pop
lds
mov
mov
mov
jmp
fimuls
inc
mov
mov
dec
int3
mov
jp
outsl
mov
not
rcrb
push
cmp
es
push
inc
repnz
ljmp
gs
dec
jl
sbb
les
out
iret
jb
test
mov
mov
jb
addr16
dec
les
add
test
cltd
test
dec
insl
pop
and
stos
js
sar
pop
pop
dec
mov
push
push
mov
sub
mov
push
inc
inc
push
fistpl
jo
std
push
or
or
push
inc
xchg
jbe
xchg
dec
stc
lock
out
pop
out
cmp
sub
sbb
xor
mov
out
addr16
push
imul
mov
push
sti
test
mov
lret
sti
movsb
mov
lahf
leave
in
push
add
adc
insb
in
push
test
inc
inc
push
sub
xor
dec
push
or
fstpt
sub
push
sar
xor
jbe
push
mov
add
stc
push
adc
lret
call
xchg
je
data16
inc
jno
or
iret
jbe
push
mov
or
xor
or
cmp
ret
mov
inc
jmp
cmp
inc
addr16
jae
xchg
lcall
insb
fcom
pop
incl
or
notl
pop
dec
add
xchg
mov
or
sbb
push
and
test
mov
outsl
push
pushf
aad
pushf
ja
sti
or
cmp
movsb
enter
jb
mov
loope
ja
sbb
jg
arpl
iret
inc
or
insl
inc
sbb
and
cmp
cmp
mov
shrb
inc
adc
notl
add
outsl
movb
mov
jbe
in
fisubrs
loop
movsl
xchg
cld
orb
mov
dec
push
push
mov
cmp
mov
test
or
mov
or
dec
adc
mov
push
rep
fsubl
call
outsb
xchg
cmp
jl
jmp
mov
mov
and
fsubrs
adc
aas
inc
jnp
xchg
pushf
mov
sbb
push
outsl
ret
jmp
mov
push
in
add
dec
hlt
mov
cmp
pop
jg,pn
js
push
jmp
pop
lea
pop
pop
pop
mov
das
mov
mov
out
lock
insb
adc
idiv
lea
mov
jns
and
mov
test
sub
out
pusha
stos
jne
xchg
mov
fstps
xchg
cmc
test
mov
jmp
mov
test
fwait
mov
sbb
mov
stos
mov
cmp
std
mov
cmpsb
pop
jae
test
cmc
rcrb
mov
leave
mov
dec
mov
lds
push
repz
fidivl
test
inc
xchg
and
nop
mov
sbb
mov
adc
repz
stos
or
xchg
fs
int3
jnp
lahf
adc
repz
stos
add
push
cltd
mov
insl
lock
pop
cmp
or
mov
xchg
lea
mov
out
punpckldq
outsb
mov
imul
and
pushf
fcompl
mov
fs
and
icebp
pop
cmpsl
adc
inc
repz
sbbb
popa
push
pop
dec
xchg
bound
pop
cmp
std
sbb
push
jae
repz
cmc
or
fldt
and
push
mov
mov
adc
rcrb
adc
jnp
lret
nop
mov
lods
sub
sub
in
insl
cli
xor
popf
lods
mov
mov
sub
hlt
sahf
sbb
inc
pop
aaa
punpckhdq
inc
lea
dec
loopew
xorb
or
popa
gs
xorb
in
leave
sub
mov
pop
add
sbb
cmpb
pusha
fs
mov
aaa
lret
cli
add
mov
loop
lret
stos
fnstsw
cwtl
test
mov
in
fs
pop
loope
ret
sub
dec
div
call
xor
testl
adc
mov
inc
cli
mov
imul
mov
insb
repnz
or
xor
push
mov
push
inc
sbb
loopne
insl
add
jecxz
scas
mov
ret
pop
mov
adc
dec
js
inc
xchg
fwait
mov
pop
test
jbe
ss
imul
inc
inc
sub
lea
mov
std
jl
dec
fisubrs
mov
jl
faddl
pop
or
or
jnp
int3
dec
fdivrs
test
mov
adc
and
aas
pusha
lea
jl
mov
jnp
mov
inc
xchg
sbb
jmp
sbb
or
fwait
pop
pop
mov
push
loope
bound
gs
lods
sti
mov
mov
cmp
ss
cwtl
or
jbe
out
mov
mov
adc
sub
arpl
or
sub
jle
cmp
scas
js
fldl
andb
stos
ljmp
sub
test
mov
into
aaa
push
in
test
mov
std
push
cmpsb
jnp
xchg
or
lret
lea
sti
orl
lods
popf
stos
outsl
and
aad
sahf
mov
inc
or
les
es
sbbl
pop
sub
xor
dec
imul
sub
sti
imul
lcall
cs
inc
fcomps
jno
js
mov
loopne
pop
bound
mov
push
mov
pop
idiv
xchg
iret
xchg
fcom
addr16
sub
and
sbb
movsb
pushf
shl
dec
pop
fs
push
cwtl
sbbl
jno
cwtl
int
and
iret
adc
and
ss
out
lods
aas
shlb
iret
push
data16
adcl
out
mov
jg
add
addr16
pop
jecxz
xchg
xchg
iret
jl
call
sti
jbe
daa
mov
push
in
movsb
cmp
ljmp
call
jmp
cmp
std
dec
int
rcr
mov
pop
dec
jno
cmp
arpl
fsub
and
cmp
adc
lret
push
mov
cs
mov
sbb
sub
jmp
jne
add
adc
stos
pop
sbbb
mov
mov
test
adc
loop
movsl
jp
negl
jb
gs
add
cltd
data16
sub
mov
cmc
cwtl
jno
sub
sub
pusha
lods
mov
xchg
pop
xchg
cmpsl
or
shlb
jbe
shrl
jge
mov
push
ss
xchg
sub
jo
xchg
fmuls
mov
adc
mov
pop
or
out
lahf
ret
fsubr
test
movsl
repnz
loopne
out
popa
push
jno
in
aas
dec
cmp
jo
das
mov
mov
fsts
pushf
cmc
lahf
enter
out
add
adcb
cmp
xchg
pop
shl
popf
xor
sti
xor
dec
mov
sub
lock
xchg
cmpsb
push
bnd
push
push
mov
or
push
daa
sbb
adc
mov
add
or
arpl
dec
fcoms
xchg
mov
xchg
pop
mov
test
jns
test
push
out
jbe
add
xorb
ljmp
dec
push
popa
mov
cltd
xchg
xor
mov
es
jb
inc
bound
adc
test
push
aam
imul
pushf
in
outsb
jae
sbb
sbb
mov
int3
jns
mov
sti
ja
pop
jg
idivb
pushf
ss
std
fdivs
push
shl
or
icebp
cs
imulb
scas
rcr
testl
loop
sub
pop
rcl
lods
test
mov
enter
ja
lds
lea
xchg
mull
pop
sbb
cmp
xchg
ffreep
adc
out
out
movsb
flds
xor
mov
dec
test
pop
mov
push
lds
aam
pop
push
mov
test
jno
xlat
mov
adc
add
xchg
jmp
sbb
mov
jmp
jne
sar
lds
insl
xchg
shr
mov
push
std
ficompl
das
iret
xchg
pop
dec
das
push
es
pop
pop
in
or
xchg
sub
fcompl
fiaddl
jmp
xor
jb
rcll
lret
repz
sahf
xchg
sub
hlt
sub
ljmp
mov
sub
add
stos
aam
out
or
arpl
lods
rcrb
mov
adc
test
lds
sahf
push
out
fmull
adc
shrl
dec
jbe
lods
and
out
aaa
inc
imul
jecxz
xchg
or
mov
mov
pop
or
dec
push
or
push
fs
sahf
jae
das
or
in
pusha
and
dec
cltd
shll
scas
mov
hlt
ds
xlat
mov
jbe
ret
roll
ds
lock
in
cltd
xchg
inc
mov
int
mov
adc
dec
cwtl
cltd
subl
fwait
iret
addr16
xchg
and
shrl
clc
in
daa
and
insb
imull
xor
out
push
repnz
pop
enter
call
adc
mov
fmuls
mov
adc
xchg
loop
push
ss
xchg
fistps
shlb
or
mov
cmp
or
out
adc
test
add
mov
imul
lea
lds
pusha
add
mov
dec
cmpps
hlt
aaa
shrb
movsb
loop
in
in
pushf
js
pop
das
ds
dec
mul
addr16
mov
dec
mov
mov
insl
xor
or
jmp
nop
inc
sbb
pop
xor
test
jae
xor
cwtl
loope
pushf
popf
xlat
ja
popa
sahf
mov
and
cs
test
jbe
gs
adc
mov
inc
sub
pop
xchg
pop
mov
arpl
jae
leave
sub
mov
push
sti
add
cmc
adc
mov
cmp
data16
pop
ss
adcb
hlt
cmp
fwait
adc
bound
mul
jns
push
ljmp
adc
inc
push
or
cmc
push
pop
add
or
pop
in
dec
adc
js
fisubl
pop
jecxz
jae
in
inc
inc
xor
xchg
inc
cli
jno
pop
push
std
mov
das
inc
or
jle
mov
inc
cmp
stos
hlt
out
fucomip
and
xchg
or
mov
in
adc
jmp
or
or
jno
xchg
pop
ror
adc
les
bound
jl
iret
loopne
or
pop
xchg
cmp
dec
adc
aas
jno
sub
movsl
filds
mov
mov
mov
mov
popa
rolb
loope
pusha
insl
pop
ja
sbb
scas
movsb
add
fcos
shlb
fisttps
outsb
fisubrs
gs
lahf
add
cmpsb
shll
pop
rol
mov
repz
xchg
pop
int
mov
jge
nop
hlt
cmc
pop
scas
pop
ret
mov
jbe
sbb
out
gs
lods
ret
repz
push
sarb
aas
mov
inc
jbe
add
daa
sbb
mov
mov
dec
in
mov
cld
aas
mov
push
jae
jge
sarl
and
sub
pop
mov
xchg
cld
pop
add
in
add
jns
cmp
jns
xor
adc
movsb
ja
seto
int
les
ljmp
sub
pop
or
in
shlb
xor
cli
scas
and
dec
cmpsl
mov
xchg
mov
andb
in
frstor
in
mov
arpl
or
cmp
and
xor
mov
pop
in
nop
jbe
pop
xor
ds
das
cmp
cmc
out
fistpl
mov
dec
das
and
pop
fdivrl
lret
pop
pop
jl
or
fucom
mov
cwtl
pusha
sahf
fnstcw
mov
and
pop
jno
pop
in
mov
xchg
mov
rorb
test
mov
fs
int3
sbb
repz
leave
jp
stc
addr16
jecxz
incb
pop
fstp
in
add
std
scas
cli
shll
pushf
fstps
clc
outsl
cmp
mov
inc
mov
lds
sbb
sbb
xor
pop
test
mov
insl
aam
push
scas
cmp
inc
jecxz
add
enter
and
aam
pusha
mov
add
mov
out
add
xchg
and
mov
sub
das
add
pop
jns
cmp
pop
arpl
xlat
cmp
js
xchg
fcomi
sbb
shlb
arpl
cmpsl
lods
pop
loope
push
dec
in
jbe
sbb
push
out
sbb
pop
imul
ficompl
dec
xlat
push
scas
sub
jp
xchg
scas
ja
repnz
jg
inc
addb
repnz
dec
pop
add
js
sub
bt
in
sarl
dec
loope
jne
sub
idivb
xor
sub
cwtl
popa
pop
cltd
out
lock
fst
insb
stc
jno
pop
in
mov
mov
jo
fnstsw
add
sub
cmc
xchg
pop
mov
pop
xchg
pop
aaa
pop
rcrb
inc
dec
and
shl
adc
pop
and
je
mov
inc
xor
iret
sub
mov
ret
inc
test
and
jmp
push
ret
mov
sbb
out
into
dec
xor
cmpsl
and
and
mov
ljmp
or
lods
fcomp
nop
push
fstl
mov
push
jp
andl
push
xor
aam
cltd
cmp
mov
pop
cmp
movsb
lods
test
fiadds
popf
pop
pop
pop
mov
daa
aam
cmpsl
in
test
cmp
push
add
or
or
pushf
xor
andl
js
sbb
fisubrs
or
jmp
mov
imul
je
mov
sbb
sub
stos
dec
pop
in
lds
and
sub
lods
pop
int3
jnp
push
lods
shr
cmp
dec
in
xchg
and
das
clc
movsl
mov
adc
pusha
adc
test
jge
sub
inc
fs
mov
notb
dec
push
pushf
fcmovb
clc
sti
icebp
iret
xorb
icebp
addb
lods
add
jl
or
fwait
sbb
jp
mov
xlat
xchg
scas
out
sbb
movsb
shr
movsl
cwtl
jp
inc
pop
push
cmp
adc
dec
ret
cwtl
inc
xor
lock
jno
and
and
pop
mov
xchg
test
push
and
inc
push
pop
sbb
ja
data16
call
ljmp
push
sbb
in
push
lock
pop
sahf
das
in
rol
mov
popa
pop
movsb
addl
mov
mov
add
xchg
jae
test
pop
call
daa
cmp
orl
dec
cmp
mov
mov
clc
add
and
mov
int3
call
cmp
xadd
daa
add
or
in
insl
push
lods
cltd
cmp
cld
jp
outsl
cmpsl
jl
test
mov
fstl
out
rcrl
and
mov
or
negl
jl
mov
jbe
push
mov
out
inc
jns
or
mov
das
dec
xor
dec
mov
mov
xchg
or
push
jg
pop
xchg
add
test
sub
push
mov
lahf
dec
mov
in
fiadds
dec
push
adc
orb
mov
call
out
mov
in
fdivrs
inc
lahf
icebp
rep
adc
ret
xchg
pop
rcl
jl
sub
jo
movsb
push
and
in
add
sbb
mov
ja
out
aam
sub
jnp
rorl
divb
mov
pop
leave
mov
movsb
out
test
xchg
cli
test
pop
push
lea
mov
sub
and
cmpsl
push
jl
ds
xchg
xchg
xor
or
pop
xor
push
dec
push
jo
jg
mov
mov
adc
repz
jp
or
test
push
mov
xlat
rolb
bound
mov
jne
mov
cmp
pop
or
int
push
sbb
or
sbb
mov
dec
cld
les
cmp
testl
ljmp
push
call
es
dec
loop
jle
aaa
sti
loop
push
add
cmp
imul
pusha
enter
cmp
jb
cwtl
add
xor
sub
bound
sub
iret
loopne
movsl
roll
cld
lret
add
mov
into
in
and
inc
fmul
mov
lret
int3
adc
mov
scas
pop
in
enter
rol
insl
xor
sbb
and
into
mov
mov
mov
lods
jg
pop
jmp
insb
adc
mov
dec
ficomps
loop
cmp
and
sbb
test
std
jbe
xchg
mov
lcall
dec
pop
mov
xchg
cwtl
xchg
cmc
imul
mov
ds
and
cli
jle
xchg
inc
nop
xchg
dec
and
sbb
rorl
adc
add
mov
leave
in
xor
insl
jbe
cld
lods
lret
movsb
std
hlt
pop
sbb
leave
repnz
gs
pop
pusha
add
into
loop
xchg
sub
jb
xchg
es
mov
adc
cli
mov
fisubl
imul
jbe
xorb
fdivl
mov
enter
ja
imul
inc
sbb
sub
pop
jg
cmpsl
daa
or
mov
lea
cmp
inc
mov
mov
fcomi
popa
mov
stos
mov
add
inc
mov
adc
mov
in
adcb
in
mov
jp
xchg
lods
cs
inc
loopne
xor
pop
push
int
ds
rcrl
sarb
clc
mov
sti
lret
cmpb
fadd
jle
fdivrs
aam
cltd
jno
pop
sbb
psrlq
inc
cwtl
call
sbbl
inc
mov
cmp
in
jge
pushf
lret
jo
mov
and
mov
imul
xchg
clc
ds
dec
fistl
mov
or
fiadds
and
movsb
lcall
add
enter
xor
stos
js
stos
js
aaa
cmp
mov
test
pop
mov
or
outsl
lret
xchg
test
outsl
push
mov
movsb
mov
mov
lret
inc
lds
mov
lcall
fdivrs
addl
xor
inc
xchg
adc
cmp
and
data16
int
push
cli
hlt
or
flds
jb
test
push
jmp
jno
aad
arpl
cld
psadbw
mov
popf
xchg
fs
out
inc
adc
sbb
adc
rorb
sbb
xor
dec
ret
scas
push
pop
loop
adc
jle
int3
mov
jmp
xchg
adc
mov
cmpsb
cmpsb
scas
fxch
call
xor
pop
sbbl
pop
int3
hlt
jp
shlb
inc
mov
pop
fcompl
addr16
fs
inc
movsb
aas
aaa
jp
lods
hlt
add
outsb
fldl
cmp
insl
pop
insb
dec
and
xchg
lcall
inc
int
jl
dec
or
pop
and
mov
xchg
outsb
sub
int3
imul
push
test
movl
sub
adc
insb
fcoms
std
push
xor
cmc
inc
jo
lock
jb
pop
sub
movsl
pop
call
dec
je
movsl
lret
mov
je
inc
and
sbb
dec
inc
iret
jo
sub
mov
or
mov
jg
jb
orb
inc
testb
sbb
lret
mov
repz
xor
mov
jmp
jle
add
sub
mov
out
and
out
ja
shrl
insl
not
inc
in
pop
push
adc
cmp
jae
add
cmp
cmpsb
jns
sub
jno
jg
jnp
sbb
faddp
adc
mov
sbb
mov
mov
xor
dec
push
push
jb
mov
pop
cmp
pusha
stos
in
imul
popf
inc
std
push
lea
enter
mov
jmp
pop
jno
test
cmp
inc
cmpsl
mov
inc
ds
sbb
ret
out
xchg
lahf
daa
and
cmp
pop
sub
push
lods
repnz
popf
and
sub
mov
stos
push
or
scas
arpl
xchg
call
and
out
stc
mov
loop
lea
out
les
aas
pop
hlt
jb
mov
ljmp
push
sbb
ss
mov
add
push
mov
frstor
dec
scas
fistpll
sub
les
enter
mov
push
enter
sub
lea
sbb
xchg
scas
scas
insl
mov
sbb
arpl
xchg
scas
decl
imul
inc
adc
jp
pop
subb
mov
ret
ds
dec
stos
mov
cld
inc
cli
push
bound
sub
in
jae
mov
sub
outsb
out
jmp
je
jb
dec
fistps
jb
and
popa
cltd
bound
sbb
loop
or
lds
mov
xor
adc
ret
ds
or
bound
sub
cmpsl
sub
push
daa
out
fmul
rcrb
push
sti
dec
pop
mov
pop
fstl
pop
aas
push
mov
sahf
gs
es
xorl
mov
faddl
jno
in
push
pop
mov
das
sbb
mov
pop
mov
mov
aad
add
les
imul
dec
pop
clc
js
xchg
popf
mov
shrb
or
dec
dec
out
inc
call
ficoms
push
sub
inc
subb
outsl
push
insl
aas
cwtl
dec
adc
sbb
dec
cmp
inc
pop
add
dec
dec
pop
insl
ja
sbb
ret
fstps
les
xchg
test
pop
add
mov
pop
in
cmpsl
adc
dec
aaa
iret
jecxz
je
bound
inc
jge
mov
mov
mov
cmp
xor
out
ja
cmp
scas
or
sub
fs
or
and
fidivrs
inc
hlt
xor
dec
jo
movsl
repz
add
cmpsl
adcb
dec
xorb
aad
repnz
repz
daa
xchg
sub
sub
jecxz
mov
mov
hlt
lock
mov
xchg
js
fimuls
sbb
xchg
lahf
add
sub
pop
pop
sbb
icebp
sbb
push
mov
in
lds
mov
shl
addr16
in
imulb
jo
ss
xchg
ja
mull
add
scas
sub
outsl
dec
cs
test
stos
mov
shlb
dec
push
mov
sub
scas
sbb
hlt
or
nop
and
int3
lods
mov
rol
sti
lahf
push
mov
mov
inc
pusha
icebp
inc
nop
adc
push
mov
inc
fs
xchg
insl
mov
pushf
into
add
xor
addr16
mov
gs
js
jecxz
or
fistps
mov
aas
jnp
stos
sub
js
je
pop
sub
shll
dec
fsubrp
mov
cmp
ljmp
rcll
cmp
addr16
hlt
mov
push
dec
fldlg2
cmp
in
in
js
sub
jbe
lret
dec
mov
lret
add
imul
rcrb
inc
insb
mov
int3
stc
xchg
cltd
je
daa
daa
cmp
aaa
mov
insb
sub
mov
popa
and
aad
dec
sub
mul
rcl
sub
inc
add
xor
imulb
adc
imul
inc
gs
cli
push
push
jp
test
dec
cltd
push
mov
mov
sahf
adc
aad
int3
jae
enter
inc
or
cmp
test
xor
add
fsubl
out
insb
or
inc
fbld
mov
sbb
push
mov
sub
out
lahf
push
cltd
xor
mov
sub
cmp
jp
dec
or
cmpsl
jp
inc
icebp
mov
pop
ret
sar
xlat
sub
push
mov
sbb
mov
test
cmp
mov
js
minps
ret
push
repz
test
loopne
mov
mov
jns
mov
shll
ljmp
cltd
ss
arpl
or
mov
lcall
loopne
movsb
pop
imul
or
jbe
mov
xor
push
sbb
mov
popa
int
mov
lret
or
div
dec
daa
test
imul
pop
out
sbb
clc
mov
inc
jle
add
pop
hlt
and
and
xlat
pop
cmp
lods
xorl
pushf
add
mov
or
sub
aas
mov
mov
movsb
gs
and
les
daa
sub
push
testl
leave
mov
ficoml
sarb
andl
push
inc
clc
gs
mov
xchg
push
cwtl
in
fdivr
pop
test
test
dec
outsb
xor
ss
call
je
and
and
int
adc
lock
push
sub
in
dec
shrl
stc
fstpl
jp
push
movsl
mov
dec
dec
fisubrl
stos
sarl
fistps
das
mov
in
mov
sbb
test
repz
push
aas
outsl
shrb
mov
xchg
dec
mov
into
mov
or
cs
and
cld
shll
mov
testl
dec
mov
cmp
push
out
mov
or
in
push
xchg
std
imull
mov
ss
in
lret
adc
mov
xchg
iret
ss
lds
cltd
fisubs
mov
fildl
push
jno
dec
lea
xlat
push
jp
sub
mov
or
mov
xchg
leave
aad
jb
stc
fdivl
mov
cmpsb
or
dec
loopne
xor
xor
pop
in
pop
out
mov
lcall
out
mov
xchg
cmpb
out
xchg
mov
mov
das
lock
pushl
faddl
dec
push
mov
push
movsb
push
xor
ss
clc
pop
nop
lds
adc
push
sub
or
out
jmp
pushf
aas
fisubl
xchg
mov
pop
sub
cmp
mov
movsb
fimuls
outsl
inc
jbe
test
xchg
pop
push
call
lret
jmp
cli
cs
jns
pop
ja
push
cwtl
sbb
aad
test
mov
loope
cmp
cmp
push
pop
mov
sahf
fistpll
mov
and
mov
and
in
test
cmc
or
imul
lock
mov
xor
inc
lret
fisubl
xchg
loop
nop
movsl
es
pop
lds
adc
mov
or
jle
in
cmp
sbb
mov
stos
aaa
insb
fidivl
xor
sub
fildll
add
mov
nop
mov
cmp
xchg
jnp
jg
push
xlat
xor
sub
or
mov
testb
or
xchg
push
mov
dec
es
xor
xor
dec
js
inc
fnsave
mov
push
imul
fs
cs
or
mov
push
sub
mov
nop
dec
jb
adc
stc
or
push
scas
or
mov
leave
rcr
fimuls
xchg
jle
cld
pushaw
clc
push
loop
inc
movsb
jb
fsubrs
divb
dec
jmp
fidivs
lcall
movsb
inc
push
mov
lret
shl
sar
pop
outsb
cmpsl
xchg
rorb
jbe
jae
push
lds
movsl
jae
xchg
jbe
mov
scas
and
xchg
les
or
cmp
test
mov
jecxz
inc
fists
xchg
rcrl
subb
roll
push
cmovo
pop
pop
push
xor
cwtl
data16
frstor
outsl
mov
test
aad
es
inc
jbe
xor
aaa
sbbl
pop
popf
or
bound
sub
fldt
in
repz
mov
in
icebp
xchg
mov
mov
js
pusha
xor
aad
adc
fcoms
aad
inc
shll
adc
sbb
sub
scas
mov
push
stos
aad
lret
xchg
ret
xchg
and
or
cwtl
lret
push
lret
add
dec
jns
leave
out
add
popa
mov
mov
loope
inc
stc
push
pop
test
divb
jo
and
bound
test
xchg
push
aas
lods
cltd
push
xor
jge
insl
das
dec
repnz
mov
lcall
jo
sub
call
notb
out
jg
fwait
push
sub
movsl
inc
das
bound
cs
jns
sub
xor
ja
lods
lret
test
sub
sar
inc
js
jmp
leave
cmp
cmc
das
loope
inc
lods
addr16
mov
subb
or
das
loop
mov
lahf
and
sbb
les
lret
insl
add
lea
ja
ds
call
sub
iret
ds
jno
and
pop
and
xor
push
insl
fildl
fistl
inc
xor
loope
sahf
pop
inc
mov
push
xchg
and
cmpsl
stos
sbb
xchg
fisttps
js
std
cld
and
lahf
mov
or
and
push
pop
stos
mov
mov
arpl
cmpsb
xchg
shlb
dec
aaa
int
sub
mov
imul
ret
clc
sarb
lret
jae
test
enter
xor
scas
jle
imul
inc
cmp
jp
xchg
cld
dec
mov
jns
out
mov
jg
sti
xchg
mov
jne
sub
loopne
sub
int
insl
xorl
call
call
push
sahf
add
xchg
out
pop
int3
cwtl
mov
dec
pop
std
mov
mov
adc
jns
fcoml
movsl
lahf
sbbl
clc
out
push
mov
popf
xor
and
mov
jno
shlb
scas
push
xor
cmp
shlb
fists
imul
clc
aam
add
pushf
fld
data16
inc
shlb
loopne
outsb
xchg
jae
mov
sub
cmp
repz
out
inc
fadd
int
lahf
jbe
xchg
insb
test
fadd
lret
mov
leave
aaa
gs
or
fistps
sbb
inc
rcr
sti
lahf
pop
test
pop
or
push
call
jl
pop
mov
mov
mov
fisubrs
push
test
xorl
pop
dec
jno
jl
rorl
insb
lds
mov
sti
mov
movsb
jecxz
pushf
fisubl
seta
test
mov
mov
xchg
adc
jecxz
into
shlb
rcrl
mov
leave
cmp
arpl
mov
rol
pop
mov
js
sbb
out
fstps
cmp
push
aam
movsl
mov
test
adc
xor
aam
xor
mov
inc
je
inc
stos
jno
inc
dec
loope
and
xchg
hlt
or
sub
jo
sbb
gs
test
and
mov
lea
lcall
gs
adc
push
sbb
out
and
xor
daa
fsubrs
push
inc
xor
in
jl
sbb
std
aas
andb
cmp
mov
jl
jecxz
pop
inc
cmp
scas
shrl
cs
iret
mov
sub
rolb
push
push
jmp
in
out
ror
dec
cmp
nop
iret
movsb
cwtl
adc
inc
sti
mov
aaa
notl
andl
ja
jbe
fwait
scas
movsb
cmpsl
adc
sbb
push
or
push
jge
bound
imul
pusha
inc
ret
push
jno
int
or
adc
mov
and
lock
jge
shrl
pusha
pop
add
jge
sbb
sbb
lahf
into
pop
push
test
ret
stos
scas
jnp
push
cmp
jmp
stos
or
jne
insb
or
sti
xor
lock
movsl
out
into
pop
jl
jne
je
das
mov
int3
rcr
sbb
pop
xchg
add
pop
mov
push
je
pop
das
jnp
and
and
hlt
adc
cmp
in
pop
push
mov
movsl
mov
test
or
test
sub
into
in
xor
mov
aad
or
roll
xchg
aam
jb
test
mov
xchg
mov
out
popf
fs
popf
inc
in
xor
inc
xor
lcall
jl
in
movb
sar
and
dec
and
pop
dec
add
pop
or
xchg
inc
sub
loop
mov
loopne
ret
arpl
loopne
push
push
mov
mov
in
xor
xchg
push
mov
sbb
jae
loopne
dec
push
dec
and
fdivrl
jo
mov
mov
xchg
mov
cmp
ficoms
pop
mov
inc
out
xor
add
adcl
xor
or
push
sub
outsb
cmp
sub
lcall
adc
adc
cmc
xor
sub
inc
fnstenv
ljmp
xor
jle
xor
je
or
xchg
out
imul
lods
out
or
add
sbb
jecxz
dec
dec
cmc
add
rcll
push
cltd
stos
mov
int
push
mov
roll
fwait
xor
and
int3
fmuls
mov
lods
les
sahf
mov
pop
rcrb
adc
test
lcall
sub
pushf
push
sbb
outsb
xor
clc
shll
jae
out
in
dec
inc
mov
gs
jge
dec
mov
or
in
xor
outsl
popa
pop
cmpsb
repz
jnp
xor
and
mov
ja
dec
sahf
stos
and
mov
dec
stc
or
pop
outsb
push
inc
push
jmp
rcr
rol
sbb
shll
or
dec
push
pop
clc
cmovo
fsts
xchg
push
sub
scas
jns
cwtl
pop
inc
icebp
out
cmp
sub
sbb
jp
jbe
jmp
dec
repnz
jbe
mov
push
inc
insl
out
xchg
daa
pop
mov
lret
mov
enter
xchg
lea
movsl
test
adc
jns
xor
or
enter
std
add
inc
leave
daa
pushf
mov
mov
int3
lods
hlt
nop
popa
mov
addr16
push
xor
xor
xchg
add
jae
xchg
cmp
std
das
fiadds
cmp
xlat
or
jl
movsl
sti
or
mov
mov
mov
ljmp
arpl
daa
js
mov
into
dec
mov
or
adc
sbb
into
in
movsb
push
cli
or
xor
xor
xchg
xchg
xchg
std
je
in
jno
call
in
add
push
and
insb
std
mov
jp
sub
xchg
push
dec
xor
and
or
add
cmp
mov
and
test
ljmp
adc
mov
dec
adc
mov
mov
test
dec
dec
and
xor
mov
ret
cmp
sub
out
jle
inc
cmc
lock
ficoml
jnp
mov
mov
adc
shl
mov
ljmp
les
sub
xor
mov
repz
lods
mov
xchg
mov
in
inc
in
cmpsl
clc
xchg
popf
fcmove
js
inc
je
adc
push
es
add
ud1
ja
in
std
das
push
out
jecxz
in
rcrb
add
and
inc
jbe
xchg
leave
push
xchg
push
dec
mov
adc
inc
xchg
xor
push
test
pop
mov
testl
ret
fucom
xor
int3
icebp
jmp
shrb
push
daa
mov
nop
pop
pop
and
out
sub
cld
and
mov
push
movsl
out
cmpsb
adc
rcrb
adc
or
xor
repz
sbb
insl
push
push
ret
lret
mov
and
rep
popa
mov
jle
pop
push
cmpsl
xor
xor
push
repnz
addb
iret
int
sbbb
lea
sti
orl
jo
repnz
and
or
xchg
scas
loop
pop
es
xchg
jno
adc
cmp
push
jl
shlb
xlat
inc
xchg
dec
out
pop
int3
mov
push
enter
ljmp
mov
movswl
xor
push
outsb
je
ror
outsb
out
sbb
lock
outsb
lret
in
not
or
inc
mov
mov
mov
mov
jg
les
in
imulb
ljmp
leave
push
daa
jae
int
pusha
jmp
push
sub
and
inc
nop
sub
jno
mov
xchg
test
inc
shll
cmp
lds
inc
push
cmc
incb
or
inc
add
xor
adc
stc
jl
add
jmp
or
pop
lods
add
sbb
iret
fstps
lods
push
dec
in
mov
adc
pop
fisubrl
leave
pop
into
in
push
cmpsl
int
loop
and
or
and
jg
stos
popa
mov
out
dec
mov
es
test
lods
lahf
cli
in
loopne
ficomps
add
out
js
mov
pop
mov
dec
jne
adc
xchg
data16
sbb
lret
jecxz
xor
pop
sar
repz
test
mov
std
mov
ficompl
sahf
frstor
add
mov
lret
shl
xchg
pop
stos
push
in
outsb
and
jnp
cmp
fcomps
jg
stos
shlb
dec
stos
cmp
cmp
and
fcmovbe
jno
mov
jb
and
int3
outsl
sbb
xor
dec
nop
lock
or
mov
data16
rcrl
or
xor
xchg
sar
les
imul
fstps
jbe
loopne
loop
fildll
movl
sub
xor
imul
popa
popa
addb
mov
sbb
fucomip
out
cmpsb
incb
in
fisubs
xchg
shrl
lcall
inc
sahf
mov
imul
aaa
jmp
jge
hlt
fmuls
mov
inc
loopne
push
xchg
mov
testl
cmp
addr16
and
add
cmp
loopne
mov
sahf
addr16
xchg
jmp
mov
aad
loope
jb
int3
jp
xorb
fwait
jecxz
mov
imul
mov
sbb
pop
gs
push
or
ret
push
mov
repz
dec
adc
mov
mov
fnstsw
xorb
cltd
repz
arpl
std
mov
sbb
scas
pushf
call
cmp
sub
les
pop
xor
pop
xchg
dec
sub
and
in
and
xor
jp
fstps
nop
mov
push
sbb
icebp
push
jmp
imul
pop
mov
mov
cmovb
sub
inc
lcall
xchg
jecxz
data16
push
add
call
out
lods
imull
arpl
lea
andb
int3
int3
mov
pop
leave
mov
jae
bnd
popa
cmc
jp
pop
data16
xor
mov
ja
leave
mov
mov
sbb
fwait
jnp
movsb
movb
mov
test
ret
call
mov
or
inc
mov
mov
xor
fimuls
xor
lahf
scas
in
inc
xchg
push
xlat
and
xchg
mov
dec
out
mov
ret
lods
dec
mov
dec
add
test
lods
vmulpd
xlat
cmpb
cmpb
cmp
and
and
sbb
imul
fsubs
inc
repz
jge
sbb
inc
cltd
jns
insl
adcb
xor
adc
sbb
adc
mov
popa
roll
mov
add
inc
jl
insb
sbb
fucomip
and
leave
push
inc
cwtl
clc
dec
sub
or
mov
fcmovbe
pushf
std
xchg
in
pop
orb
imul
dec
push
test
push
in
cmpsb
aam
jbe
pop
loope
jg
test
pop
sbb
push
mov
mov
aad
jg
xchg
and
es
fisubs
loop
fcomps
fiaddl
pop
lock
mov
push
pop
xchg
cmpsl
sar
push
inc
push
scas
nop
add
xchg
roll
aam
jb
scas
jno
repz
cli
in
dec
cmp
add
mov
ljmp
inc
pop
dec
mov
sahf
and
loop
adc
shll
rcr
xchg
sub
icebp
add
lcall
shl
shrl
or
and
or
push
inc
int3
out
sbb
mov
push
adcb
arpl
dec
divl
mov
in
push
cmp
sbbb
push
shrb
cmpsl
stos
or
or
fs
push
jecxz
inc
es
sti
orb
lahf
add
stos
cmp
subb
sbb
push
pop
dec
pop
jle
test
mov
addr16
lea
or
fdivrs
xor
js
js
mov
outsl
push
aaa
xchg
les
out
fwait
icebp
push
sub
hlt
das
adc
jbe
dec
pop
jnp
push
add
aad
cmp
push
sarl
ficoml
test
dec
sub
pop
add
sbb
je
sub
pop
cmpsl
sbb
dec
sub
xor
adc
mov
push
mov
stc
hlt
xchg
mov
je
shl
mov
push
jbe
and
mov
add
pop
xor
jo
stos
fldenv
lock
jmp
mov
into
lock
insb
xor
outsl
xorl
adcb
scas
mov
rclb
ret
xchg
sbb
outsl
xchg
aas
int
mov
adc
dec
test
add
mov
jbe
sbb
es
cmpsl
test
xor
outsb
cs
sti
icebp
xchg
add
jge
push
push
or
hlt
jns
jle
es
cmovbe
cwtl
push
mov
sahf
imul
xchg
ret
sub
mov
pop
dec
inc
jg
and
pop
push
inc
xor
xor
ja
mov
or
cmpl
out
dec
loopne
test
push
aaa
push
and
in
aas
xchg
je
add
jb
popa
push
push
cmp
xor
cmpsb
cmpsl
inc
jmp
fiadds
fisttps
mov
xor
jp
or
sahf
cmp
dec
sbb
or
cli
ficomps
xor
sub
insb
sahf
pop
ret
mov
mov
repnz
adc
pop
pusha
inc
in
pop
sbb
pusha
add
decl
dec
dec
imul
test
mov
out
or
fisttpll
pop
xchg
xchg
push
in
dec
jmp
pop
pushf
xchg
jne
in
sarl
pop
xchg
dec
pop
dec
mov
add
mov
mov
aas
lcall
cli
mov
ficomps
jge
mov
shll
imul
mov
sub
pushl
mov
aam
or
dec
cmp
xor
sbb
mov
loopne
adc
mov
repnz
add
jl
js
ret
aad
or
push
pushf
and
or
sbb
inc
cmc
sub
add
cmp
inc
iret
mov
dec
pusha
outsl
add
xlat
addr16
jnp
cmp
inc
inc
mov
push
jae
or
add
les
into
icebp
add
xor
xor
les
mov
mov
sahf
aam
add
xchg
push
imul
jns
cmp
fbld
adc
mov
jno
std
call
loop
dec
sti
jo
js
xchg
push
or
pop
cmp
add
jp
arpl
mov
in
push
xchg
pop
aas
xchg
mov
movsl
mov
cmp
push
pop
dec
imul
inc
xchg
fsubr
sti
xchg
xor
jge
cmp
cld
xor
stos
movsl
das
or
inc
pop
mov
mov
mov
jmp
cmc
shrl
jg
adc
ljmp
push
xchg
fimull
mov
cmc
xor
xchg
lea
mov
fwait
add
add
mov
and
rolb
stc
lds
fwait
cmpsl
push
add
loope
push
jae
mov
pop
scas
dec
fdivl
jle
xchg
lret
add
sbb
pop
adc
lahf
test
push
outsb
and
insb
daa
loope
fimull
jae
gs
lods
and
test
shll
push
lcall
dec
xchg
jmp
test
lret
stos
daa
xchg
mov
cwtl
mov
adc
icebp
div
push
push
dec
inc
dec
jge
ss
push
pop
adc
pushf
xchg
sarl
adc
mov
fstpt
and
jle
stos
ds
inc
ljmp
push
fiaddl
lgs
in
jp
jo
xor
sub
cltd
cmp
push
popa
adcb
sbb
loope
mov
rcrl
test
leave
xchg
adc
mov
jae
pop
sub
jno
je
data16
xchg
mov
lret
int3
pop
fdivrl
push
cld
add
stos
cmp
daa
data16
jg
out
and
xchg
ds
stos
cmp
arpl
or
lea
pop
out
rcr
cltd
bnd
cmc
sbb
push
push
add
in
fistpll
mov
call
sub
test
push
sub
ja
aaa
inc
sub
pop
std
xor
rclb
loopne
mov
xchg
loope
scas
xchg
mov
xor
scas
push
push
sub
loopne
add
pop
insb
jl
into
sub
fnsave
in
ret
inc
dec
iret
sub
mov
jl
xor
cld
leave
jbe
xor
mov
push
add
xchg
es
xor
or
test
cli
xchg
sbb
test
pop
mov
scas
jecxz
or
cmp
cmp
fstp
mov
pop
repnz
lods
sti
fisubs
lea
jmp
xor
push
push
jl
pop
and
arpl
fimull
add
sbb
mov
xchg
and
pop
rclb
mov
sub
outsl
or
and
and
mov
filds
cli
jae
shlb
cmpl
jp
out
push
iret
and
pop
mov
movsb
add
pop
and
and
sbb
or
add
cwtl
push
gs
cs
or
sbb
in
hlt
mov
out
lock
xor
nop
imul
sar
roll
aam
or
iret
test
push
ja
pop
shl
jne
jb
lcall
mov
mov
mov
lock
cmpsl
or
mov
movnti
gs
mov
jo
scas
cltd
and
ja
popa
loope
xor
push
fs
cmc
xchg
jg
stos
adc
dec
mov
xor
mov
cmp
std
fiaddl
mov
test
cltd
cltd
sub
mov
in
andb
cltd
pop
lea
jno
outsl
mov
sbb
dec
and
into
outsl
mulb
xor
push
imul
pop
ds
out
int3
push
mov
cmp
outsb
xor
jmp
movsb
mov
cmpsl
pop
shlb
cmp
enter
enter
aad
jp
in
sbb
xor
sub
bound
push
inc
popa
mov
jle
push
inc
out
pop
dec
pop
and
orl
lahf
out
adc
xchg
push
xor
push
in
add
mov
bound
lock
push
std
lea
mov
push
insb
stos
pop
mov
cmc
stos
jecxz
jbe
bound
and
mov
mov
fwait
dec
std
mov
sbb
add
push
push
mov
or
jg
sbb
lods
mov
repz
dec
cmp
in
ret
mov
popa
push
mov
mov
rolb
das
stos
and
cmp
cmpsl
jbe
cmpb
and
int
rclb
lods
xor
imul
cli
pop
sbbb
push
and
xor
xchg
mov
sbb
mov
iret
mov
ret
cltd
push
add
sub
sub
sub
cmp
int3
pop
mov
popa
into
jmp
push
popa
add
jbe
xchg
pop
bound
xchg
and
shrl
cmpsl
add
adc
mov
test
dec
pop
mov
jnp
dec
movsl
adc
in
add
enter
mov
inc
and
cwtl
jl
icebp
adc
stos
mov
lret
fisubs
push
pop
mov
in
pop
jecxz
xchg
imul
xchg
add
or
loop
popl
jp
sub
ds
lods
push
mov
mov
add
sub
jmp
mov
add
cmp
sbb
cmp
push
cmc
mov
adcl
xchg
fidivrl
sbb
scas
mov
dec
xor
gs
xor
loop
das
out
or
or
out
jl
mov
xchg
out
orb
lock
sub
adc
mov
jge
subb
add
sub
sar
ds
xor
sbb
rcll
mov
clc
dec
fmull
repz
xor
movsb
fsubrl
fs
in
fs
xchg
pop
mov
add
push
lods
push
idivb
inc
cmp
xchg
sahf
cld
lret
ret
test
jo
test
stc
sbb
push
sbb
std
int
xlat
or
je
lds
imul
int3
out
pop
bound
clc
inc
cmpsb
mov
psubsw
repnz
xchg
jo
add
sub
lret
mov
adc
bound
out
cmpsl
mov
scas
stos
sub
movsb
pop
cmp
dec
sbbb
sbb
xor
dec
sbb
pop
pop
fcoml
push
mov
inc
insb
test
out
adcb
scas
xor
mov
cmc
sbb
into
out
es
or
jl
imul
sbb
and
dec
xor
add
cmp
push
test
pop
je
xor
lret
test
les
pop
and
push
mov
xchg
adc
sub
xor
aaa
cmc
mov
stc
xlat
ret
cwtl
aaa
add
inc
push
adcb
pop
xor
stos
fsubp
data16
cmc
icebp
mov
jg
and
dec
pop
and
xchg
outsl
subb
mov
adc
fwait
push
pop
xor
sub
fisubs
mov
stos
push
push
aad
fcomps
sub
stc
or
or
xor
jle
push
mov
jbe
pop
mov
adc
loope
int
movsb
imul
cmp
xorl
icebp
out
cld
loopne
mov
adc
mov
xor
fucomip
incl
xor
int3
sti
or
sbb
pushf
dec
in
jns
fwait
aam
fistpl
mov
fsts
mov
movsl
inc
aad
xor
out
jge
push
add
out
popa
test
jl
pop
mov
xchg
enter
lea
pop
stos
add
sub
push
cwtl
xlat
call
jmp
lods
xchg
test
add
dec
push
adc
popa
std
xchg
cmp
or
jae
mov
enter
out
dec
xor
cmp
sbb
clc
mov
push
sbb
dec
add
jns
xchg
cmp
ds
cmc
sub
fdivs
push
scas
mov
testl
roll
cmp
jp
push
mov
arpl
mov
mov
jp
lods
xor
filds
mov
das
mov
mov
and
mov
mov
aad
sbb
sbb
mov
xchg
xor
sahf
mov
jl
mov
ffreep
sarl
push
adcl
jecxz
mov
inc
jb
cmp
mov
and
rorl
push
jmp
iret
mov
pop
jnp
adc
lods
and
pop
lock
mov
cmp
loop
lods
mov
arpl
rcr
xchg
xor
frstor
sbb
mov
punpcklwd
je
add
fstp
neg
xchg
xlat
call
stc
loop
fildl
push
xchg
popa
out
fsub
data16
xor
add
add
sub
sub
or
mov
cmp
xchg
inc
push
inc
andl
sub
test
in
adc
pop
aaa
cmp
mov
filds
pop
lds
inc
leave
cmp
outsb
mov
fstl
xchg
mov
jmp
ret
lret
loop
jno
mov
repz
outsb
jb
mov
adc
lahf
lods
dec
add
test
jb
testb
mov
sub
pop
aas
xor
push
jle
xchg
mov
push
jg
sahf
out
cs
test
jmp
push
sahf
call
rolb
mov
or
xchg
mov
push
es
add
loop
mov
jbe
push
add
mov
xor
mov
repnz
sub
jns
cld
lahf
mov
cmp
jp
in
cmc
rcll
inc
push
pop
fcmovnu
mov
xor
mov
adc
and
out
mov
inc
dec
xor
inc
cmp
inc
pop
mov
add
lods
mov
and
dec
inc
lret
mov
jmp
inc
arpl
cmp
ret
pop
test
xchg
xchg
mov
and
lret
lret
in
test
xchg
or
stos
stc
mov
dec
cs
loop
pop
push
pop
fldenv
pushf
enter
movsl
sahf
pop
mulb
cmp
sbb
fs
mov
js
push
fucomp
push
jp
pop
ds
pushf
int3
insb
pop
test
dec
in
cmc
adc
mov
insb
dec
insl
vandps
push
std
jo
leave
cld
les
mov
roll
nop
scas
repnz
cmpsb
in
dec
fdivl
sbb
add
inc
outsl
arpl
lods
sahf
and
ja
sub
push
fdiv
push
mov
or
pusha
and
nop
popa
inc
stos
insb
faddp
mov
in
fadd
lret
jmp
sub
mov
cli
adc
mov
xchg
vpmuludq
push
iret
stc
iret
push
mov
xchg
dec
scas
dec
xchg
cwtl
mov
dec
lret
jb
xlat
mov
push
mov
jmp
imul
iret
pop
cmp
or
jbe
push
xor
xchg
out
push
mov
cmp
sbb
inc
ret
jae
scas
jbe
push
out
sub
in
repnz
test
mov
jo
out
int
or
sbb
push
in
push
jl
data16
pushf
imul
lock
dec
dec
nop
sti
daa
xlat
test
add
mov
pop
or
mov
cltd
mov
jo
popf
push
or
aam
pop
dec
cltd
push
loopne
push
ss
sbb
out
inc
fucomp
out
sbb
push
add
sub
pop
or
or
pop
in
add
shrl
cltd
out
iret
loope
mov
ja
mov
mov
mov
jb
ja
push
arpl
push
xor
and
dec
dec
dec
fldl
jbe
mov
scas
and
mov
adc
cmp
mov
adc
jo
lods
mov
xchg
aaa
je
in
push
push
cwtl
or
and
movsb
pop
sbb
loope
inc
jle
sbb
jo,pn
mov
into
fistps
mov
jb
fstpl
test
sbb
int
cld
shll
push
cs
addr16
jge
mov
lods
jae
daa
adc
jmp
add
pusha
gs
cmp
mov
mov
lahf
xchg
loop
call
cmc
mov
mov
dec
iret
insb
dec
sbb
jl
add
stos
inc
data16
stos
jnp
loope
scas
add
int3
lods
inc
dec
push
aas
cmp
shll
jne
les
xor
aad
or
lcall
fiadds
or
inc
imul
adc
lea
add
mov
cmp
xchg
add
cmp
std
nopl
mov
dec
adc
xchg
out
jae
push
iret
mov
sbb
mov
imul
test
pop
cmpsl
je
pusha
cmc
mov
lret
shl
mov
add
pusha
sub
mov
fstpt
xor
jns
mov
adc
xlat
daa
sbb
pop
test
cs
mov
stos
es
mov
lods
fcmovb
inc
data16
fld
enter
mull
lods
dec
test
cs
sti
mov
fmuls
outsb
mov
sbb
ret
xchg
sbbw
xchg
inc
je
out
int3
jb
in
cmp
mov
dec
xor
popf
movsb
push
push
inc
inc
shlb
out
jge
sbb
mov
fcompl
rcll
cltd
js
test
push
add
dec
mov
icebp
les
jge
fs
rcrb
xor
stos
addr16
outsb
add
out
jns
mov
insb
movsb
dec
mov
mov
ds
pop
cmp
and
adc
mov
in
inc
insb
ljmp
lock
jne
ljmp
pop
xchg
jg
sub
jns,pt
push
fwait
gs
xor
adc
adc
xchg
cmp
sub
mov
lret
jnp
push
std
inc
ja
cld
pop
ljmp
cwtl
xor
xchg
add
sbb
sbb
mov
ret
mov
jb
jle
mov
dec
rcrl
xor
push
dec
jmp
dec
mov
pop
stc
shl
mov
mov
hlt
filds
adcb
mov
xchg
pop
cmc
pop
in
lcall
lret
mov
push
jp
or
pop
daa
int3
pusha
mov
push
rcrb
ficomps
sbb
rep
adcb
popf
mov
jb
nop
ss
xlat
jge
js
mov
pop
sub
xor
in
pop
add
sub
mov
fldcw
in
pop
ljmp
and
xor
movsl
mov
rcrl
rcrl
in
mov
or
pop
lcall
dec
or
cli
and
cld
call
int
pop
cmc
jns
mov
arpl
mov
into
add
icebp
push
shrl
mov
mov
mov
mov
je
pushf
and
or
add
cmp
pushf
aam
insl
jp
inc
pop
daa
lods
pop
stos
lret
sub
je
ret
icebp
and
push
sub
pop
cmpsb
popf
aas
pop
dec
leave
mov
ret
loopne
mov
data16
stc
adc
cmc
and
rcrb
stos
mov
jecxz
js
adc
xor
in
out
fsts
jle
fisubrl
fabs
or
sub
inc
xchg
and
xchg
cmp
mov
stos
mov
fisubrl
aam
sbbl
and
dec
cmpsl
incb
mov
cli
pop
adc
adc
jle
mov
test
call
cmp
imul
fxch
mov
pop
fidivrs
pcmpeqw
lods
xor
push
mov
mov
out
aad
lods
fdivrs
les
ds
loopne
jmp
fildll
fst
mov
push
test
jg
imul
mov
pushf
loop
fimuls
mov
in
mov
cltd
cmp
mov
xlat
js
cli
cmp
xlat
int
pop
xor
repnz
push
call
stos
and
xchg
fidivrs
lock
inc
in
dec
repz
stos
sub
mov
or
es
xor
cmpsb
jecxz
xchg
gs
sub
sbb
ja
scas
aam
sub
mov
flds
lahf
inc
aaa
xor
push
jnp
mov
mov
push
adc
pusha
mov
inc
xchg
and
or
fwait
arpl
mov
jns
mov
ljmp
cmpsl
fld
mov
xchg
push
fisubrl
call
fldenv
into
adc
and
push
ds
fimuls
daa
sti
cmc
mov
cmp
icebp
in
cli
stos
pusha
rep
cmpsb
lock
and
xchg
xchg
ljmp
push
stos
xorb
mov
jecxz
mov
movsl
arpl
dec
or
gs
jmp
sbbl
cmpsb
imul
jbe
mov
sbb
sub
dec
pop
movsl
mov
mov
adc
mov
xchg
and
movsl
repnz
cmpsl
leave
dec
lahf
jno
popf
das
push
jmp
hlt
subl
add
loopne
ret
push
mov
cli
push
or
dec
xchg
mov
test
out
push
jge
jae
dec
and
xchg
out
and
jle
adc
lds
sub
sub
xchg
lods
mov
imul
js
cmp
jbe
cltd
mov
mov
inc
sub
call
sub
add
test
inc
mov
jmp
fsubl
xchg
mov
outsl
inc
jmp
leave
adc
push
and
cwtl
cmp
add
les
adc
mov
repz
aam
popf
in
das
pop
sub
mov
test
repnz
out
dec
stc
jno
sub
mov
jmp
add
jle
mov
repz
mov
jns
xchg
push
dec
adc
xchg
lret
push
jb
outsl
xchg
lret
dec
sbb
test
and
jmp
cmp
xchg
pop
sbb
adc
xor
daa
nop
cltd
mull
push
andl
adc
insb
lock
loope
sbbl
je
dec
add
jge
pop
xlat
std
xchg
cmp
mov
call
repnz
lret
pop
out
jmp
clc
adc
mov
fwait
jnp
into
and
jno
addb
stos
jle
mov
cs
xor
jne
sub
push
cmpsl
sbb
dec
inc
jp
call
jae
lea
test
cltd
leave
inc
fdivrl
mov
movsl
mov
mov
inc
iret
sub
add
pop
jle
in
sbb
cmpsl
inc
aas
lock
and
dec
jmp
xchg
push
data16
mov
test
imul
adc
or
push
push
test
test
sub
mov
fs
fistps
xchg
pop
aad
sub
add
aam
loope
test
pop
out
dec
sub
cltd
out
xrelease
outsb
lods
or
xor
daa
inc
mov
mov
mov
sbb
mov
mov
mov
cs
push
ljmp
sbb
mov
adc
push
sub
scas
insb
popf
jo
and
mov
in
aam
frstor
insl
sbb
dec
push
bound
sti
sbb
mov
mov
cmp
xchg
mov
popf
in
lds
es
push
cmp
mov
ja
xor
lods
add
ljmp
adc
xor
dec
xor
adc
push
aam
rclb
inc
repz
call
icebp
movsl
call
test
ljmp
push
sub
mov
gs
fsubl
jo
int3
sub
repnz
roll
dec
pop
iret
xchg
or
scas
jae
fcmovbe
stos
add
adc
lock
cmp
fucom
mov
dec
push
jl
lret
outsl
loopne
icebp
popa
mov
mov
dec
mov
cmc
jp
int
in
getsec
xchg
aaa
cmpsl
adcl
out
mov
dec
add
daa
in
xor
lcall
or
sti
movsl
fsub
loopne
cmp
je
hlt
lahf
aaa
loopne
filds
pop
cmpsb
xchg
and
movsl
negb
inc
bound
pop
adc
cmp
jmp
scas
jle
pushf
repz
rol
icebp
fstpl
pushf
cli
pop
ds
shll
movsb
lcall
xchg
jnp
mov
iret
sti
test
inc
pop
lcall
sub
in
jmp
mov
pop
push
dec
out
lcall
mov
add
pop
lcall
std
sub
inc
sahf
dec
mov
mov
add
test
shl
ret
leave
addr16
add
stc
add
das
mov
jnp
in
pop
mov
sbb
pop
daa
dec
inc
out
aam
jno
das
rorl
add
adc
shrb
fidivrl
iret
imul
mov
adc
inc
nop
jge
push
je
cmp
xchg
inc
sti
stc
je
dec
ret
xchg
push
pusha
in
shll
jle
int
clc
dec
sbb
dec
xchg
push
add
add
dec
negb
loop
fstpt
cbtw
jns
out
or
and
mov
rorb
mov
arpl
int3
adc
int3
pop
push
jg
push
jecxz
pop
out
push
jg
dec
mov
mov
jge
int
jle
por
xorl
loope
adc
jno
js
xchg
xchg
addb
sahf
jmp
xchg
rcll
hlt
inc
in
fwait
xor
inc
xchg
xor
loop
push
lahf
shll
popf
insb
je
fucomip
leave
aaa
fisubrs
and
inc
or
or
and
mov
loop
test
inc
sub
or
fwait
fwait
cwtl
mov
arpl
and
ss
fcmovbe
push
rcrb
repz
decl
leave
or
and
and
cmpb
mov
jno
add
dec
popf
mov
mov
movsb
inc
lret
mov
cmp
lahf
cwtl
inc
lcall
subl
mov
xchg
mov
adc
xchg
cmc
es
xor
mov
imul
jmp
outsb
xor
insl
lock
incl
cmpsb
push
pushf
mov
sbb
mov
sbb
xchg
popf
adc
fsubrl
shl
stos
sbb
loopne
add
insb
imul
dec
pushf
fsubs
scas
add
aam
cmp
mov
push
rorl
or
mov
clc
ret
mov
std
dec
dec
mov
insb
aam
push
dec
push
inc
and
ret
add
mov
scas
xchg
mov
fistps
int3
add
dec
dec
cmpsb
stos
lcall
or
outsb
or
out
iret
mov
dec
push
lahf
sbb
sbb
add
out
or
or
adc
icebp
int3
fwait
inc
fildl
cmovns
push
outsl
bound
xor
iret
mov
xchg
cmp
rcl
scas
imul
or
insl
mov
sbb
sbb
inc
aad
adc
xchg
add
inc
or
lock
je
rorl
adc
sbb
outsl
les
sub
mov
aam
mov
fdivr
push
push
xlat
mov
mov
push
cmp
xchg
mov
xlat
pop
sbb
push
add
dec
add
rcrl
xchg
fsubr
jmp
sahf
gs
and
jl
xor
mov
shl
pop
outsl
or
xchg
rcrb
fcomps
ss
les
mov
stos
imul
push
xchg
cmpsl
int3
aas
std
shrl
cmc
or
mov
fwait
dec
mov
sbb
fdiv
jo
aas
mov
sub
ss
xchg
call
or
mov
scas
inc
mov
sti
and
rclb
mov
pushf
push
cmc
inc
aaa
outsb
dec
mov
pmaxsw
icebp
in
aas
sbb
fisttpll
lcall
pop
xchg
xor
es
test
adc
dec
sub
daa
lods
xor
aad
adcb
fs
ds
cld
into
and
movsl
push
ds
inc
test
pushf
inc
lods
fdiv
enter
and
push
jp
pop
pop
popf
push
aas
mov
es
mov
ror
imul
xor
pusha
popf
outsb
cli
dec
adc
cmp
lea
xor
cmovbe
cmp
add
inc
or
mov
or
dec
mov
fldcw
or
pop
addr16
push
fwait
sbb
daa
cmovne
sub
or
inc
bound
cld
bound
mov
addr16
scas
cmc
xchg
xor
lea
inc
or
mov
sbb
jmp
or
jecxz
loopne
jle
cmc
scas
jg
loop
fsts
mov
mov
xor
ret
popa
add
inc
pop
enter
sub
adc
shr
mov
pop
xchg
aad
or
repz
sbb
fstps
adc
mov
push
scas
jg
pop
cmp
sbb
xchg
test
mov
loop
mov
cmp
movsl
shrb
push
jle
xchg
fldt
dec
lcall
out
jecxz
pop
push
dec
push
pushf
jl
cmp
sub
mov
loopne
sbb
mov
mov
or
jmp
out
nop
mov
mov
sti
andb
lahf
mov
decl
stos
jno
add
cltd
add
lret
mov
out
mov
mov
push
mov
cmp
mov
rcrb
jmp
stos
scas
jle
push
in
mov
out
inc
or
rorb
es
cmpsb
les
pop
test
ss
pop
leave
push
loopne
test
lds
sti
pushf
call
push
inc
inc
mov
xchg
inc
cs
aad
sbb
sti
shrb
out
rcll
aas
jnp
and
or
lret
cmp
jne
test
and
push
mov
add
jge
xorl
loopne
data16
mov
scas
lea
xchg
push
call
or
add
mov
mov
sbb
shll
fsub
into
xchg
sub
shrb
iret
cmc
fwait
andb
sarl
push
subl
aam
add
jmp
loopne
dec
lret
dec
test
pop
mov
in
adc
mov
arpl
xor
sbb
mov
or
sbb
jnp
mov
xor
arpl
iret
xchg
fnstenv
pop
and
inc
push
dec
adc
mov
adc
inc
mov
dec
cmp
cmpsb
inc
xchg
imulb
das
ja
push
imul
aad
stos
js
clc
push
mov
aam
jg
jns
dec
mov
and
loope
cld
dec
clc
adc
xchg
fiadds
addl
or
lods
xor
sub
arpl
xchg
shll
loop
addr16
mov
jbe
or
xchg
push
ret
jne
mov
es
inc
fwait
dec
in
mov
dec
loope
sub
cltd
dec
adc
and
or
stc
repz
int
or
lret
add
popf
popl
rorb
das
aas
lret
mov
push
fdivrs
sbb
xchg
test
or
jecxz
ljmp
test
mov
dec
jbe
cmpsl
mov
and
xor
sub
or
pop
or
and
adc
insb
mov
adc
fdiv
and
iret
loope
pop
in
jnp
insb
fdivs
aam
das
pop
fdivrs
xchg
mov
or
push
mov
jns
ja
sub
scas
and
adc
inc
fwait
mov
jns
pop
dec
push
inc
les
shrb
fbld
stos
fwait
sbb
push
inc
cmp
cli
in
out
mov
push
mov
mov
add
xchg
mov
in
push
mov
lods
sbb
ret
fstpt
or
fstp
and
pop
fwait
inc
inc
scas
add
push
out
xor
fs
imul
jo
sbb
cmp
jne
mov
enter
add
mov
add
shll
aas
aas
ss
mov
in
adc
dec
sbb
mov
mov
jo
je
loope
js
aas
push
bnd
cmc
add
ss
cmpsb
dec
lods
loop
sbb
xchg
sub
mov
pop
push
div
add
arpl
lock
mov
jne
es
es
into
add
les
in
stos
ja
xor
mov
xor
push
jae
xchg
test
jae
into
dec
add
test
pop
lea
fwait
push
push
xlat
and
xchg
push
sub
jno
cmpsb
inc
data16
or
mov
and
xchg
sbb
ss
dec
pop
cmpsl
aad
les
push
pop
mov
ret
mov
leave
fcmovnu
jae
jo
push
sar
icebp
and
cli
sub
jecxz
pop
fsubp
jge
jnp
mov
pop
jo
cmp
ret
ret
push
push
and
movsb
dec
gs
nop
xchg
mov
mov
je
xor
ljmp
scas
shrl
test
xchg
jp
mov
dec
pop
mov
stos
ret
cvtps2pi
andb
sbb
adc
dec
or
aas
insl
orl
aad
inc
jno
xchg
jge
cmp
pop
addr16
sahf
aam
xchg
lahf
mov
or
adc
aad
lds
jne
outsl
daa
sub
pop
or
jp
ret
in
dec
or
ret
sbb
ret
pop
jne
xchg
cmp
movsl
sbb
and
xor
inc
sub
cmp
mov
leave
pop
sub
lea
cmpsl
jge
das
mul
dec
pop
xor
fsubrp
jle
push
adcb
mov
imul
pop
xor
mov
arpl
adc
hlt
xor
cmp
jge,pn
out
mov
pop
xchg
enter
push
jnp
call
mov
es
repz
jne
or
and
dec
ds
xchg
sub
sub
pop
insl
addr16
mov
cmc
mov
push
mov
pop
sti
addr16
or
pop
push
inc
mov
stc
jl
jo
mov
cmp
xchg
cwtl
ljmp
push
ret
movsl
subl
ljmp
or
push
shll
outsl
push
xchg
lea
push
stos
outsl
jl
adc
jae
adc
mov
xor
dec
push
mov
in
mov
les
lahf
jecxz
sbb
mov
mov
jecxz
and
mov
aam
sbb
dec
pop
loop
push
pop
jge
popf
daa
es
jb
mov
ss
sbb
push
cmc
mov
jp
lret
push
pop
xchg
subl
jmp
jge
mov
jne
arpl
jno
jo
imul
nop
mov
ljmp
cs
movb
ret
add
jg
lock
mov
cmp
lods
jnp
lret
or
nopl
dec
hlt
nop
sarl
int3
and
cmc
xor
insb
or
fcmovbe
setnp
int
in
fdiv
shl
in
scas
mov
lahf
cmp
sarl
add
xchg
std
pop
outsl
aaa
cmpb
aad
test
popa
adc
xchg
rclb
call
jmp
inc
out
rcll
jge
pop
pop
leave
inc
pop
insl
adc
inc
mov
mov
jg
dec
imull
xor
stos
pop
sbb
mov
movsl
jmp
and
icebp
and
xchg
cmp
dec
mov
sub
stos
cmp
aam
es
fsubrl
mov
and
xor
push
jl
in
sbb
fdiv
negb
scas
mov
cmp
pop
fidivl
or
pop
mov
inc
jl
ret
pop
lods
xchg
out
out
ss
fistl
or
push
cmp
loopne
pop
sub
sbb
xchg
jge
bound
and
jns
push
sub
sti
jae
jbe
rorl
stc
rcrl
jl
and
jge
and
xor
pusha
mov
dec
and
mov
push
push
cmp
mulb
sti
das
push
pop
call
addr16
cmc
jp
fmuls
aad
fcomp
out
test
fucomip
popf
fwait
testl
aas
push
imul
add
je
xorb
insb
repz
jmp
or
popa
or
dec
icebp
or
aad
mov
jecxz
icebp
adc
leave
sub
add
fistl
sbb
cwtl
inc
pusha
sbb
aad
jns
scas
iret
sbb
call
lea
adc
test
pop
lods
dec
frstor
pop
push
cmc
loope
aaa
out
inc
inc
sbb
mov
xchg
sbb
add
adc
jb
sub
mov
cmp
idivl
or
aam
inc
mov
sub
lock
inc
or
push
shl
dec
pop
mov
popa
dec
adc
inc
adc
mov
push
fwait
ja
or
pop
arpl
mov
je
lret
cmc
in
insb
adc
inc
mov
movsl
or
jbe
add
aaa
lea
das
inc
mov
jecxz
dec
jmp
dec
dec
daa
jb
divl
sbb
cmp
rolb
repnz
xchg
outsl
es
test
pusha
push
out
mov
fstpl
inc
aas
or
out
xor
cmc
jge
jne
js
jbe
test
mov
mov
arpl
xor
es
int
xchg
out
shll
push
aas
xor
sti
leave
insb
xor
stos
movsb
jnp
and
outsb
test
dec
insl
test
cmp
dec
xchg
pop
mov
or
push
out
aaa
mov
mov
cmpsl
or
lret
jae,pt
mov
sub
decl
repnz
mov
out
sub
in
push
push
scas
pushf
push
leave
pusha
call
andl
mov
mov
sub
in
fldl
xchg
shlb
push
mov
and
int
insb
int3
popa
into
shl
insb
aad
icebp
dec
jns
arpl
mov
jae
and
fsubrl
in
sbb
or
aad
test
push
sub
out
shlb
cmc
and
sbb
sbb
mov
out
lea
and
push
xor
scas
xor
mov
lods
or
inc
jnp
in
inc
mov
fidivs
das
nop
pop
stos
leave
insb
call
cmp
lret
or
xlat
sbb
rorb
ss
xlat
jb
push
push
test
cmp
push
outsl
dec
repnz
pushf
mov
xchg
cmc
add
sub
aad
inc
orl
sahf
add
mov
iret
out
fisttps
inc
mov
mov
and
out
loopne
imul
int
adc
icebp
dec
clc
cli
dec
add
dec
push
sub
arpl
mov
mov
sub
dec
jge
pop
loope
sbb
xor
add
inc
insl
enter
sbb
dec
stc
cwtl
test
add
in
mov
leave
jno
lret
xchg
fwait
jmp
lods
lret
jle
xor
loop
insb
inc
scas
xor
cs
subl
xor
dec
or
mov
pop
into
push
xchg
mov
xor
orb
add
adc
jae
mov
ret
faddl
push
jne
sbb
arpl
js
xor
cmp
xor
mov
lahf
add
push
rol
xor
push
mov
gs
mov
loopne
out
xchg
mov
call
or
mov
ret
clc
imul
test
sarl
ss
xor
arpl
sbb
ds
sbb
inc
repnz
scas
cwtl
sub
testl
push
xor
mov
xchg
adc
lahf
shll
jge
jb
push
loopne
sub
sub
jge
out
jo
cli
gs
movsb
xchg
fcmovnbe
adc
cmp
mov
pop
mov
mov
and
mov
or
in
nop
xchg
iret
jbe
lret
pop
fstps
inc
ds
loopne
iret
orl
pop
or
sbb
or
stos
sub
popa
inc
adc
jecxz
imul
mov
mov
dec
adc
mov
rcl
inc
push
aam
jl
mov
les
inc
dec
cmc
test
roll
cmpsw
out
sbb
jp
fistl
fcompl
push
inc
jp
and
sub
ret
in
push
sub
sub
cmp
dec
xchg
or
xchg
jb
and
shll
adc
repz
inc
fisubrl
mov
and
lods
movsl
es
mov
pop
shlb
xlat
cmp
cmp
stos
adc
mov
inc
mov
leave
pop
stos
cltd
jg
addb
decl
jmp
daa
insl
sbb
ret
mov
movsb
mov
xlat
lea
dec
clc
xchg
iret
xchg
sbb
mov
cmc
aaa
insb
loop
mov
push
inc
dec
push
shr
sbb
dec
xchg
lret
fwait
xorb
mov
pop
pop
call
xchg
out
cmp
dec
jg
jecxz
add
and
dec
scas
ror
cmc
sbb
jl
test
and
cwtl
bound
lret
popa
and
add
pop
mov
dec
insb
addl
xlat
jmp
xor
cld
daa
mov
inc
call
mov
add
sub
xchg
push
and
dec
mov
movsb
dec
pop
adc
lahf
bound
decl
add
jo
ss
rclb
leave
aas
xchg
jmp
loop
jmp
and
mov
or
inc
pop
xor
int3
push
sahf
iret
push
jle
sbb
repz
adc
pop
movb
fidivrs
jne
cmp
idiv
out
cmp
mov
inc
iret
jns
ds
dec
ficomps
pop
aaa
gs
int3
jg
sub
mov
rcl
bound
pop
mov
sahf
cmpb
mov
push
xlat
fnstcw
lahf
mov
xchg
or
mov
test
int3
jbe
lret
sub
push
movsb
pop
mov
add
pop
bound
sub
xchg
aas
bound
mov
enter
outsl
lea
movsl
xor
jcxz
push
test
push
scas
out
dec
pop
and
cwtl
lea
jmp
or
and
mov
pop
fldt
push
lret
mov
aaa
mov
lret
cmc
scas
cltd
shrb
adc
ds
in
jo
lret
jo
push
out
lock
je
lock
pop
cmp
xor
mov
iret
enter
mov
add
shrl
adc
inc
pop
mov
mov
js
jp
mov
icebp
or
and
xchg
adc
in
dec
pusha
into
enter
dec
xchg
stos
mov
mov
inc
jmp
sub
out
ja
dec
shll
dec
xor
mov
lods
idivb
inc
and
push
or
xchg
sbb
lret
xchg
rclb
fistps
mov
in
int3
and
gs
mov
sub
ss
cmp
pushf
dec
jmp
push
loop
push
and
hlt
push
cli
inc
cmpsl
das
dec
xor
sub
mov
fwait
pop
cmp
lods
mov
ds
mov
shrb
scas
sbb
aas
sub
out
mov
aas
jne
mov
test
pusha
push
jg
and
mov
out
js
cmp
jae
add
cmpsb
push
ja
leave
call
mov
sub
shll
mov
xlat
imul
cmp
ja
scas
stc
cmp
jmp
shlb
jle
add
or
adc
sbb
rclb
nop
jge
mov
jmp
cmpsb
push
shll
in
mov
mov
push
pop
sbb
cmp
clc
repnz
arpl
das
std
into
and
cmp
adc
xchg
adc
iret
lahf
subb
mov
test
cld
bnd
mov
dec
xlat
dec
jl
lret
aad
in
jecxz
subb
jae
mov
out
push
test
fcom
and
sub
sbb
add
js
sti
xorb
lods
outsb
mov
xor
hlt
mov
mov
sub
shrl
rorb
outsb
call
jmp
or
std
cmp
or
lods
sbb
xor
cmpsl
pop
stos
xchg
fists
cwtl
xchg
mov
pusha
dec
push
jne
addr16
popa
scas
sub
push
push
mov
shr
arpl
gs
xchg
or
and
push
mov
adc
push
push
sarl
cmp
ret
outsl
fidivrl
es
pop
jns
xchg
dec
aas
test
mov
jb
push
aas
fcoms
pop
lret
fldenv
aas
pop
jl
addr16
test
mov
xor
stc
mov
sbb
mov
add
adc
ror
into
das
jg
cmp
scas
aam
mov
xchg
add
jp
test
jmp
add
ja
sbb
add
or
xchg
loopne
out
mov
rolb
jnp
add
dec
dec
aaa
orl
mov
fstpl
xchg
test
push
aas
in
sbb
adc
and
out
ficompl
movsl
push
rcrb
hlt
sub
push
es
xchg
inc
mov
in
mov
mov
stos
adc
out
popa
aam
push
call
repz
lret
add
repz
adc
pop
fcoms
xorl
and
mov
fwait
aas
inc
je
fneni(8087
es
cmpb
int3
or
add
movsl
into
sbb
inc
push
or
xchg
pop
mov
pop
xor
xchg
xor
lods
pop
pop
outsl
fdivs
lods
dec
or
push
cs
pop
push
adc
cmpsb
jae
dec
dec
shlb
or
push
repz
push
hlt
or
aam
sub
and
add
fcmovu
mov
fiadds
mov
sub
mov
clc
jns
sub
jp
mov
inc
mov
es
jbe
xchg
shlb
fsubs
xchg
sub
jge
cmp
outsl
outsb
sbbl
lret
ljmp
outsb
dec
js
xor
stos
and
lret
jg
push
or
jno
mov
mov
jb
and
cli
dec
and
movups
jmp
or
mov
mov
inc
fimull
shl
loope
in
mov
xor
xchg
outsb
leave
jae
je
sub
cmpsl
cmp
lret
add
rcr
mov
push
fucompp
les
pushf
sub
loopne
movsb
movsl
push
imul
lock
and
sbb
scas
loope
aam
or
mov
lods
imul
sub
aaa
add
mov
mov
data16
or
int3
addl
movsl
dec
loope
cmpsb
inc
rorl
mov
and
ja
mov
jmp
in
repz
dec
add
adc
enter
mov
and
cld
mov
out
sub
push
sbb
icebp
mov
inc
inc
fisttpl
and
rclb
addr16
cmp
and
std
cmc
sbb
and
in
in
xor
iret
xchg
xchg
and
add
jns
inc
xchg
or
and
popf
test
mov
incb
hlt
add
loope
ja
sarl
into
pushw
xchg
mov
jmp
mov
int
pop
xor
cwtl
dec
push
jo
mov
sti
push
mov
sub
out
je
rorl
cmp
mov
mov
iret
xchg
xchg
addr16
push
in
arpl
jo
rolb
push
sbb
cwtl
adc
in
out
decb
les
mov
fstps
xchg
mov
sti
std
insb
loop
mov
and
xchg
pavgb
jae
xor
sti
nop
inc
bound
test
jle
fstl
das
pop
or
test
or
cmp
and
insl
sub
cmp
out
xchg
adc
mov
rclb
rol
mov
fwait
push
jno
add
push
lods
lods
in
adc
sub
jmp
mov
xor
xor
xor
mov
shll
pop
pop
repnz
inc
pusha
adc
mov
packssdw
fs
cmp
adc
in
xchg
cmc
imul
jl
jecxz
ret
mov
jle
lahf
dec
jo
ljmp
shlb
sahf
repz
icebp
fstl
aaa
xchg
lea
ja
es
jp
mov
out
xor
jge
popa
inc
mov
in
gs
cmp
je
into
loop
sub
jl
and
mov
and
roll
mov
jno
or
mov
add
mov
xchg
ds
aad
pop
cmp
xchg
ss
cmc
pop
cmp
lock
scas
adc
mov
inc
jnp
push
iret
jmp
outsb
addr16
push
inc
pop
jb
adc
rcr
or
pushf
cld
push
in
rcl
mov
out
pop
inc
mov
mov
jo
inc
fmul
add
or
cmpsb
sbb
int
mov
lret
dec
sbb
lock
mov
mov
repnz
cmpsb
stc
mov
push
out
pop
push
jb
pop
xor
dec
cs
daa
or
xor
les
lcall
pop
inc
inc
mov
insl
daa
push
mov
pop
frstpm(287
scas
dec
jle
insl
push
out
jge
ljmp
mov
jmp
pop
int
cwtl
lock
call
push
inc
subl
pop
and
lods
mov
ja
push
mov
mov
inc
and
fstpt
shl
and
sar
xor
out
jg
pop
xor
cwtl
fdivrl
mov
mov
push
inc
xchg
mov
fs
push
fsubrs
jp,pn
sbb
test
adc
lahf
testb
lods
jae
clc
mov
cs
clc
jge
cmp
jle
fisubl
cmc
pop
neg
test
das
dec
sub
out
pop
cmpsb
dec
dec
jbe
mov
das
fsubs
adc
mov
mov
and
mov
pop
ret
lret
sbb
lea
test
push
add
xchg
and
push
pop
daa
ret
adc
das
insb
add
stc
clc
adcb
cld
enter
dec
cld
stc
push
pop
adc
leave
jbe
mov
aas
sub
cmp
insl
aad
push
xor
xchg
nop
mov
pop
sub
mov
cs
ret
jnp
push
sub
lret
mov
aaa
xor
mov
add
test
repnz
movl
shll
lods
lcall
or
dec
scas
add
cmpsl
mov
jp
imul
fldt
inc
daa
leave
frstor
fimuls
xchg
sub
xor
cmc
xor
push
sub
dec
lret
xchg
push
shr
inc
adc
and
in
push
fistpll
inc
lret
inc
push
push
mov
loopne
mov
dec
push
ret
xor
data16
movsl
ljmp
or
jl
mov
adc
sub
nop
push
fistpl
sbb
sub
xor
lret
out
divl
in
pop
dec
mov
mov
add
push
pop
jo
sub
cmp
cld
outsl
pushf
and
dec
mov
ja
xchg
inc
cmp
xchg
pop
cmc
scas
sbb
mov
mov
das
out
cmpsl
mov
xor
inc
jg
jb
les
jns
lods
bound
pop
push
pushf
test
inc
lods
pop
push
adc
call
or
cmpsb
stc
sub
ja
and
inc
jl
js
xchg
jle
outsl
lds
and
add
out
adc
insl
jl
leave
hlt
fisubrl
pop
mov
or
xchg
jge
xchg
adc
ja
mov
int
outsb
and
iret
pop
ret
fsts
in
fisttpll
outsl
das
jbe
cmc
inc
mov
shrb
and
movsb
push
adc
cltd
push
addb
dec
imul
mov
cmp
idivb
or
adc
jnp
ljmp
cmp
in
dec
gs
sahf
outsl
cmp
or
sbb
mov
loop
xlat
mov
aas
pop
adc
rcrb
adc
data16
or
fstps
xor
pop
or
mov
ds
loopne
jl
push
push
xor
aaa
pop
inc
inc
add
mov
bound
fmull
sbb
in
inc
cmp
adc
xor
shlb
hlt
mov
outsb
stos
lods
lcall
cmp
mov
pop
and
inc
lahf
xor
pushf
movsb
fistpll
pop
cli
dec
mov
fisttpl
nop
mov
loopne
cltd
int
pop
adc
notl
jbe
add
push
in
ljmp
outsl
inc
add
stc
add
rorl
add
lock
rolb
sub
mov
push
mov
cwtl
cs
jecxz
xor
nop
mov
mov
in
loopne
adc
in
inc
or
xchg
mov
gs
fidivl
movsl
dec
pushf
mov
test
movsl
js
or
add
add
fimull
lea
movsl
in
outsb
std
mov
jbe
sub
lea
mov
push
jg
adc
mov
push
adc
sbbl
inc
int3
addr16
mov
lret
sarb
mov
mov
push
cmp
repnz
fmul
jnp
mov
jo
sbbb
mov
inc
xchg
pushaw
push
insb
adc
pop
icebp
cltd
and
lcall
inc
test
sub
cmp
jmp
mov
and
rcrb
frstor
pushf
mov
and
sti
adc
xchg
xor
and
cmp
rcll
push
pop
stc
dec
adc
ret
ja
lahf
add
in
push
sub
sub
shl
int3
jae
dec
notb
inc
sub
outsb
lods
jmp
nop
ja
push
sti
inc
out
xor
loope
xlat
andl
xchg
fsubl
bswap
stc
sub
es
lahf
xor
mov
test
inc
in
inc
and
fs
sbb
jns
jns
xchg
jmp
mov
push
xchg
sahf
addb
fadds
mov
icebp
jecxz
or
mov
mov
in
push
sub
lret
pop
out
sarb
pusha
lret
push
daa
mov
cwtl
push
xchg
mov
call
test
and
in
pop
out
xor
js
movsb
out
xchg
jmp
cmp
js
aam
inc
mov
sub
ja
push
jbe
std
lds
ljmp
arpl
xor
movsb
test
int
je
and
scas
push
fldln2
add
dec
adc
inc
addb
ret
stos
mov
fidivrl
push
jle
and
cmp
ror
and
cwtl
cwtl
xchg
xor
insb
imull
stc
aam
and
pop
push
aam
cmpsl
mov
adc
cmpsb
pop
or
xchg
xchg
dec
insb
repz
jg
mov
adc
sbb
and
inc
dec
sbb
mov
shll
popf
and
pop
mov
push
ss
dec
aad
add
loop
fisttpl
mov
popf
add
inc
movsl
aaa
pop
in
jecxz
dec
fsubl
rcrb
in
or
pop
stos
sub
in
lods
xchg
pop
loopne
clc
btr
xor
jno
adc
in
xchg
add
dec
add
mov
mov
pop
jp
push
cs
sub
out
lds
out
stos
hlt
in
mov
das
je
jbe
insl
cmp
int3
mov
mov
and
ss
xchg
bound
cltd
mov
inc
data16
pushf
fistpll
sbbb
push
push
xor
icebp
xchg
cld
out
pop
clc
lret
int
cmp
mov
addr16
stos
mov
pop
fstp
shrl
addl
fnstenv
aam
xor
lods
add
jns
push
cmp
test
mov
cmp
test
test
fsts
and
sub
in
xchg
emms
outsb
or
cmc
outsl
les
xorb
int
mov
add
pushf
or
xor
adc
stos
ja
decb
gs
dec
shrb
mov
xchg
adc
hlt
mov
mov
int3
enter
pop
in
xlat
cmc
mov
fs
or
lahf
pop
sbb
outsl
testl
cltd
pushf
fiadds
insb
inc
sahf
test
cli
mov
call
outsb
out
pop
leave
fnstsw
sub
dec
stc
fwait
cmp
xchg
xchg
push
adc
push
jge
pusha
shl
mov
ret
push
mov
std
andl
add
cmp
in
sbb
and
popl
cmpsl
inc
stos
in
cltd
sbb
lcall
xchg
pushf
test
mov
xchg
test
push
cli
push
mov
and
mov
mov
loop
mov
in
dec
iret
ret
dec
add
daa
lret
jl
adc
mov
mov
mov
cmp
icebp
xchg
sub
dec
or
shl
cs
in
jo
or
xor
dec
xchg
add
push
int
push
push
stos
insb
inc
ljmp
mov
dec
jmp
mov
repz
aad
inc
fwait
push
adc
test
movsb
in
mull
jns
adc
and
stos
test
andl
add
ds
out
aad
and
mov
jl
mov
sub
push
cmp
inc
xlat
mov
xchg
xlat
int
or
mov
orl
loope
sbb
xor
fwait
xor
loope
xchg
push
xchg
cmp
mov
mov
out
push
iret
cmp
cmp
stos
cs
sbb
ds
xchg
int
je
sub
pop
ljmp
aad
mov
cmpsl
repz
inc
pop
aam
mov
mov
divl
popa
mov
sahf
in
je
aam
jo
sbb
dec
jl
iret
cmp
cmp
loopne
lods
movsl
jne
cmp
adc
push
mov
sbb
cmpsb
rcr
rolb
adc
jne
negb
dec
mul
mov
scas
popf
sbb
addr16
popa
push
cmp
leave
jle
cmp
pop
jae
clc
mov
push
mov
movsl
fisubrs
popa
mov
movsl
xlat
testb
push
or
ljmp
or
rolb
shll
cmp
sti
addr16
outsb
sub
mov
notl
fs
stos
mov
clc
xor
movl
adc
pop
pop
ret
inc
lret
xchg
outsb
xlat
shrb
ja
in
pop
mov
push
jo
ljmp
sbb
push
test
repz
inc
lods
jecxz
inc
mov
xchg
mov
pushf
imul
mov
ret
mov
call
xchg
pop
jno
arpl
xor
out
sbb
dec
pop
xor
test
je
sbb
cmp
xchg
and
ds
imul
lret
jb
mov
fs
das
das
inc
mov
iret
mov
jmp
adc
pop
mov
ja
movsl
fcmovnbe
mov
mov
jbe
cmp
fisttps
sbb
mov
test
in
inc
cmp
jp
stos
dec
or
push
test
mov
ficomps
fdivrl
sbb
repz
cvtps2pi
dec
cmpsl
scas
add
or
xchg
dec
push
inc
flds
fsts
jl
cltd
mov
dec
stc
jns
test
and
data16
xchg
filds
scas
arpl
out
cli
sahf
push
imul
and
insl
mov
or
or
inc
shld
pop
pop
lret
add
add
push
pop
mov
movsl
cmpsl
mov
pop
mov
ret
pop
int
add
cmp
xchg
cld
mov
lahf
inc
idivl
icebp
repz
mov
jg
lods
mov
imul
adc
mov
fwait
ret
mov
mov
pop
mov
lcall
das
jns
sbb
jle
testb
shrb
push
or
push
add
and
inc
cmp
leave
ljmp
cmpsb
fs
lods
jno
sti
sub
or
sbb
pushf
fisubl
out
insl
iret
pop
leave
jno
pusha
into
dec
mov
pop
inc
test
rol
cld
jle
pop
in
icebp
fldt
stc
test
mov
mov
pop
xchg
sub
cmpsb
fstp
test
data16
push
jge
push
popa
adc
add
jno
insl
cmp
sub
std
fisubl
lret
cld
add
stos
ja
or
div
lretw
xchg
enter
pop
orb
bound
mov
push
sbb
inc
mov
cmp
sbb
bound
mul
leave
dec
lret
xchg
imul
dec
mov
ljmp
fldcw
addl
lcall
pushf
push
arpl
sbb
imul
mov
fstl
jg
pusha
inc
lcall
int3
mov
jno
add
ds
or
pop
popa
dec
push
dec
movsl
xor
std
sub
sbb
sub
adc
xor
scas
push
and
mov
xchg
test
clc
js
jg
push
adc
pop
pusha
rclb
lcall
addr16
out
push
lcall
cmpsl
popa
imul
enter
test
out
mov
fdivp
sbb
cmp
loope
xor
xchg
rolb
push
pop
fnstcw
xor
mov
enter
xor
pop
stc
andl
cmpsb
mov
mov
push
call
cmp
shrb
pop
mov
rcll
loop
mov
stos
jns
decl
xchg
leave
imul
test
push
or
mov
nop
lcall
das
loope
mov
push
cltd
cs
lds
xor
call
xor
out
and
aam
mov
add
cwtl
mov
jmp
cmp
lods
mov
or
mov
cltd
in
mov
loope
int
jo
int
cmp
decb
insb
cmp
dec
push
enter
mov
or
inc
int3
mov
add
test
cmp
cmc
or
xchg
and
push
dec
fnstenv
and
adc
mov
les
add
test
mov
sub
into
test
addr16
mov
insl
and
dec
fsubl
sub
sbb
fistpl
out
mov
cmp
push
rcl
pop
inc
xchg
dec
push
adc
jnp
pop
popf
std
iret
pop
push
movsl
popa
stos
testl
test
and
or
or
jno
addr16
stc
stos
call
idivb
lds
mov
xor
dec
lret
dec
frstor
test
std
stos
lock
push
aam
scas
cltd
mov
cmp
ja
inc
xchg
leave
xor
cmp
add
sarb
mov
pop
andl
hlt
mov
aam
popf
add
movsb
cli
test
inc
and
repz
mov
lds
outsl
xor
cmp
int
out
aad
push
out
add
js
testl
ljmp
out
mull
in
cs
sub
jns
pop
pop
push
sub
test
ss
lods
cli
fstl
and
jnp
mov
test
pop
outsl
rcrb
push
jle
int
addl
inc
sahf
jnp
jns
sub
mov
into
andl
ja
cmc
ja
aam
fistps
and
mov
int
adc
add
aaa
bound
cmp
sub
cwtl
in
mov
or
clc
je,pt
dec
xchg
stc
xchg
sub
sbbl
dec
sub
dec
push
addr16
jns
push
adc
stos
pop
nop
cmp
lods
jg
jmp
sti
lahf
stos
ret
cld
push
or
arpl
pushf
cmc
and
jl
fwait
pop
jae
clc
lret
pop
jae
or
aaa
inc
mov
pop
out
cli
jne
sahf
pop
and
push
inc
inc
shlb
in
inc
lods
sbb
cmp
xor
ret
add
mov
addl
jge
loopne
outsb
xchg
out
daa
xorl
icebp
sub
in
out
lods
in
and
add
in
xlat
outsl
xchg
pop
das
sbb
out
lods
adc
or
adc
pushf
sub
movsl
int3
divb
repnz
movsl
dec
ffree
cmpsl
push
sahf
and
rclb
stos
push
sbb
dec
adc
pushf
aaa
push
push
bound
test
sub
in
jns
lret
call
add
decl
adc
jns
adc
cwtl
andb
dec
cmp
lods
es
sbb
inc
add
mov
std
shr
jg
lret
mov
and
inc
and
inc
sbb
push
idivb
xchg
or
cmp
xchg
inc
mov
mov
inc
jle
lahf
or
sahf
mov
and
lret
lret
loop
fcmovnb
pop
cmp
mov
jno
xor
adc
mov
mov
push
cli
dec
pop
sbb
addr16
call
ja
in
popf
jl
rolb
push
adc
xchg
push
mov
mov
int3
pop
ss
cwtl
adc
cmc
mov
imul
loop
mov
lcall
mov
lahf
sub
sbb
ret
lds
in
or
pop
pushf
mov
dec
push
mov
jle
add
push
or
repz
dec
aad
and
pusha
arpl
outsb
shrl
frstor
xchg
and
stos
movsb
outsb
stc
popf
inc
fcmove
popf
movsl
int
xchg
nop
xlat
shrb
xchg
ss
nop
pop
cltd
cmp
fnstenv
in
das
test
outsl
sarb
adc
mov
into
jge
push
mov
sti
cld
std
fstpt
sbb
lea
stos
sbb
fidivs
cmc
rcrl
sbb
adc
int
in
movsl
lods
push
sbb
sti
inc
scas
je
int3
and
loopne
mov
es
sub
ja
lahf
mov
nop
lfs
cltd
fs
mov
sub
pop
cld
mov
sbb
sahf
int3
rol
aaa
and
out
out
lahf
xchg
xor
ss
push
aam
xor
sub
mov
addr16
pop
jno
call
cmp
scas
in
mov
dec
mov
mov
inc
mov
mov
out
and
dec
jl
jno
imull
ljmp
fildl
test
cmp
sbb
push
test
mov
ret
xchg
out
test
js
addr16
or
xor
mov
leave
repz
repz
jecxz
inc
or
mov
outsb
mov
add
and
mov
mov
popf
sbb
test
jb
sahf
xchg
xchg
lods
scas
cmp
movsb
out
push
test
insl
sbb
dec
aam
sbb
repnz
in
out
je
cs
jecxz
sbb
push
ljmp
lret
cli
jns
jo
aam
jg
rol
in
cmpb
notl
mov
jg
test
addr16
and
xor
out
ss
jge
inc
mov
out
jo
inc
scas
int
stos
leave
shll
xor
mov
out
mov
lods
push
mov
movq
cmp
leave
jge
cmc
jbe
cmpsb
mov
test
xchg
sahf
sub
test
dec
fwait
sbb
out
icebp
cmpsl
pusha
addb
jnp
xchg
xchg
loop
mov
or
daa
push
imul
ret
out
pushf
je
sarb
dec
stc
pop
rclb
mov
fisttpl
xchg
and
mov
inc
loop
shl
fs
jae
les
out
mov
xor
sub
sub
adc
out
je
xchg
dec
out
std
mov
mov
pop
sbb
lret
in
pop
jmp
sbb
iret
mov
sbb
add
and
dec
bound
ja
xor
xor
and
lods
add
push
int
in
sbb
bound
push
cmp
shrb
sbb
dec
pop
mov
mov
movsb
cs
ret
jno
mov
div
jne
fsubrl
push
rorl
xchg
mov
add
mov
and
pop
fld
movsb
icebp
roll
aaa
mov
adc
cmp
mov
fiadds
xor
insb
add
xor
fcomi
xchg
cmp
cmp
fldl
daa
pop
into
int
andl
sub
xchg
je
les
inc
lock
adc
shll
ja
fsubrl
lods
mov
cmp
push
es
xorb
je
ret
ljmp
insl
fisttps
ss
sbb
mov
push
out
in
lds
sub
mov
add
mov
dec
cmp
push
aaa
cld
enter
neg
sbb
test
adc
adc
sub
into
fdivp
xchg
pop
ja
jmp
sub
jbe
sub
lds
stos
xor
dec
xchg
mov
cmp
je
mov
mov
sub
cwtl
cmp
int3
lcall
lcall
ja
loope
push
outsb
jle
jge
shl
pushf
xlat
enter
jge
mov
out
mov
fadds
cmp
mov
in
fcmovne
fldt
fimull
add
push
jle
xchg
push
cmp
sar
leave
popf
mov
push
and
push
shrl
pop
mov
fcmovu
lock
pop
ret
xchg
loope
sar
hlt
filds
loop
adc
jo
jp
js
push
jne
ss
pop
lret
mov
leave
sub
pop
or
or
jae
lds
sbb
in
push
push
outsb
sbb
adc
repz
inc
movsl
fneni(8087
jmp
and
xor
aad
loop
cmpb
orb
cs
test
lea
sbb
mov
inc
loope
pop
sub
add
imul
pop
push
jge
sbb
ja
mov
push
lods
mov
out
push
cwtl
int3
push
pop
mov
adc
mov
stos
test
sub
xchg
mov
pushf
xchg
push
jbe
and
icebp
jle
jmp
dec
push
and
ljmp
imul
shll
mov
sub
or
push
das
shlb
or
sbbl
adc
inc
std
enter
adc
sbb
pusha
or
js
push
inc
dec
lret
adc
add
test
and
push
cmpb
dec
push
push
pop
rcll
aad
xchg
and
aas
scas
loope
pop
into
fildl
dec
in
push
mov
fisubl
cmp
and
mov
icebp
iret
mov
jns
arpl
jge
pop
out
sub
aam
sbb
aam
lcall
pcmpgtw
cmp
mov
lahf
xlat
movsl
mov
ds
mov
pop
inc
add
push
fs
outsb
cmp
mov
rcrb
icebp
mov
insb
bound
incb
ret
adc
or
and
inc
or
fnsave
lret
ds
je
aam
cmp
lahf
fdivl
notb
pop
sbb
es
daa
xchg
add
gs
ja
dec
sti
frstor
aad
cli
daa
lds
jnp
scas
in
daa
pop
es
stos
lods
cmpsb
test
lods
mov
dec
aam
dec
mov
es
std
cmp
cmpsb
testb
int3
adc
in
and
pop
sub
mov
dec
mov
icebp
mov
xor
and
leave
loopne
loope
push
inc
popa
jmp
mov
adc
or
cwtl
shlb
lahf
pop
aas
adc
inc
mov
push
mov
pop
jge
push
enter
stos
imul
std
inc
test
addr16
xchg
push
push
dec
fwait
bnd
out
popa
fldcw
dec
fidivrl
lahf
in
jns
int3
jecxz
popa
adc
ja
and
cli
jne
orb
out
sub
or
push
push
push
test
je
sub
test
nop
dec
lret
ret
mov
mov
cmpsb
xor
dec
push
mov
or
adc
cwtl
fsubs
sti
fnsave
push
jb
into
cmp
dec
cli
mov
vmulpd
push
and
cmp
sub
sub
xorl
inc
lods
mov
lods
cli
xorb
movsl
sub
fwait
push
bound
mov
jne
hlt
mov
sub
rclb
adc
movsl
stos
push
fsubr
dec
mov
stos
xchg
sub
jecxz
jno
add
sub
fucomp
fpatan
mov
mov
adc
popa
sub
aam
add
cvtps2pd
call
sbb
fucomip
lods
jnp
std
xor
or
push
subb
mov
mov
enter
rolb
out
xchg
dec
lret
push
call
lock
rcrb
imul
mov
mov
in
jmp
xchg
fwait
sub
sub
popa
xor
pop
popf
movsl
sub
lahf
cmp
mov
das
sub
or
xchg
repnz
popf
sbb
cltd
inc
mov
popa
and
aam
adc
or
incb
rcrl
je
mov
and
rorb
nop
mov
pop
add
in
fdivrl
das
dec
xlat
xor
ja
adc
pop
lret
mov
imul
xor
cmp
xchg
pop
mov
jmp
sbb
jno
aas
cltd
arpl
lret
inc
dec
xchg
fdivrp
int3
jmp
leave
cmp
popa
add
fldenv
pop
in
data16
ret
pop
xchg
sbb
dec
sub
jae
xor
push
in
push
mov
cwtl
xor
in
sub
andb
push
shl
hlt
inc
outsb
dec
push
mov
test
adc
hlt
mov
mov
jge
mov
mov
dec
and
imul
es
call
das
push
sbb
inc
push
lret
pop
mov
out
ja
mov
jae
bound
cmp
xchg
aas
xor
add
fiaddl
loope
testl
dec
jo
mov
add
jmp
leave
hlt
stos
nop
sbb
dec
jo
enter
adc
adc
mov
push
cmp
mov
shlb
dec
jp
and
pop
stos
or
xchg
add
push
xchg
lret
sbb
filds
dec
lcall
daa
lahf
ror
xor
push
insb
sbb
faddl
popf
cmp
lret
adc
out
sub
gs
sub
push
faddp
dec
mov
sbb
adc
int3
lods
test
xor
mov
mov
cmpsb
jmp
ret
and
xor
movsl
mov
fsubrl
ds
jp
inc
dec
sti
push
inc
add
xor
mov
push
adc
movsb
mov
mov
mov
pushf
notl
mov
shlb
pop
jmp
ret
pop
mov
inc
push
std
push
inc
bound
int
sbb
mov
fsubr
fdivs
out
imul
mov
popf
mov
enter
mov
lea
and
jbe
xchg
push
imul
das
add
sub
iret
jne
ret
lret
test
and
stos
cmp
nop
rorl
lahf
push
sbb
jge
test
pop
or
add
and
shrb
jecxz
int
dec
test
inc
lock
pop
in
jmp
test
push
xchg
jle
push
cs
xor
sub
fisubrs
sbb
cmp
xor
adc
xchg
daa
add
and
inc
xchg
jmp
xlat
mov
mov
daa
push
testl
jle
pop
fcomp
dec
fildll
jle
mov
std
cwtl
out
mov
pushf
jmp
lea
fsub
dec
movsl
mov
bound
mov
mov
mov
sti
popf
ret
jmp
mov
es
mov
push
and
jo
sarb
les
call
mov
icebp
test
mov
sbb
inc
add
mov
outsb
loopne
push
add
aad
cmp
sbb
jbe
nop
jge
adc
inc
or
inc
push
jg
push
add
lea
mov
test
mov
ja
clc
xchg
pop
rolb
cmpl
xchg
shlb
mov
pop
aaa
mov
int3
adc
sbb
adc
inc
mov
pop
jno
or
push
dec
jg
movsb
jbe
mov
clc
sub
and
jge
ror
lret
mov
or
test
unpckhps
and
add
or
movsl
movsb
ror
add
insb
les
adc
cmpsl
cli
sub
sbbl
mov
shlb
cmp
cs
popf
cmp
dec
mov
xchg
cmpsb
mov
cmp
enter
dec
bnd
or
jle
ljmp
mov
cld
adc
xchg
test
dec
sbb
pop
icebp
mov
jbe
adc
out
push
in
and
sbb
outsb
mov
cmp
lret
shrb
and
lock
pop
mov
out
add
cmp
dec
inc
push
test
mov
and
dec
je
dec
mov
jecxz
adc
shl
or
aam
mov
mov
fs
and
les
push
pop
leave
jmp
pusha
xchg
lock
jecxz
xor
in
fisubrs
dec
inc
lods
cmp
in
inc
and
lds
es
mov
add
int
adc
lcall
inc
lcall
sahf
sub
int3
subb
jbe
in
std
pop
or
cmpsl
pop
adc
fdivrs
out
fmull
out
jo
jo
sub
mov
leave
lret
add
in
mov
sahf
or
hlt
sarb
std
sub
and
or
es
sbb
ret
push
add
stc
xor
stos
add
add
movsl
andl
hlt
xor
mov
shll
sti
out
fld
sti
push
jecxz
aaa
negl
pop
pop
adc
ljmp
clc
iret
add
mov
sbb
jge
xor
out
cmpsb
and
enter
out
mov
mov
movb
pop
jecxz
and
push
or
mov
mov
jno
sbb
push
testl
mov
data16
cmp
push
cmp
fisttps
push
rcl
aad
inc
mov
out
hlt
aam
out
mov
movsb
stos
call
loop
pop
mov
dec
cmp
jp
sub
stc
push
aad
push
loopne
shrb
push
pop
xor
mov
push
pop
call
pop
and
stos
dec
push
xlat
jns
mov
outsb
cld
mov
inc
js
in
aaa
mov
out
dec
jmp
daa
mov
pusha
mov
nop
xchg
add
lds
loopne
xchg
mov
inc
leave
out
rcll
in
ds
and
jo
xor
shlb
sub
ret
xchg
sahf
rcll
sarb
xchg
fisubrs
lahf
mov
xor
cmpb
test
test
xor
adc
arpl
scas
mov
push
push
dec
and
je
stos
dec
jb
lods
mov
pop
andb
ds
outsl
cli
and
sbb
mov
adc
sub
and
mov
iret
xchg
pop
ffreep
lret
jmp
stc
push
sbb
dec
repz
pusha
lret
int
jo
push
cmpb
fstpl
xor
shlb
cmp
and
adc
cmp
pop
jno
int3
subl
nop
ds
mov
or
inc
sarl
cmpsl
insl
fsts
fmul
adc
push
push
cmpsl
sub
rorb
pusha
rolb
enter
pop
add
inc
xchg
xchg
in
mov
shll
pushf
lret
fistl
cmpsl
out
into
adc
data16
cmp
int3
cmp
mov
dec
add
cli
add
ret
sti
xor
cld
and
mov
sub
mov
cmpsl
mov
adc
mov
and
insl
push
lods
adc
das
sti
das
dec
adc
andl
inc
add
pop
aaa
in
sbb
rol
mov
sub
fwait
push
push
cmp
inc
fs
test
push
scas
leave
mov
sarb
add
pushf
dec
mov
mov
in
aas
add
out
adc
cmpsb
mov
dec
imul
vmread
repz
daa
jp
int
popa
loopne
insl
push
push
pop
lcall
and
fdivr
scas
shr
lds
fldcw
sbb
adcb
aaa
cmp
add
jo
sub
ja
cmp
clc
push
or
rcrb
testb
pop
pop
jae
jle
jb,pt
add
or
push
pop
pushf
cmpl
add
enter
in
test
pop
mov
cmpsb
lret
adcb
mov
notb
and
aad
pusha
test
shrl
aam
xlat
aad
xor
push
cld
cmp
push
xor
add
subl
in
fisubrl
cmp
inc
movsl
in
mov
pop
shlb
outsb
fistl
scas
add
mov
in
inc
cmp
jns
in
cs
and
mov
imul
movsb
add
das
shrl
jo
push
xchg
push
jecxz
scas
lcall
popf
push
das
lds
inc
sbb
imul
in
movsb
icebp
movsl
hlt
sub
dec
or
pop
mov
mov
stc
xor
pop
fwait
sbb
sub
xchg
cmp
aam
adc
fistl
mov
xchg
cmp
roll
push
mov
leave
xchg
leave
bound
popa
dec
daa
mov
imul
lds
push
adc
cmpsl
loop
ja
inc
sub
sbb
and
ljmp
aad
cmpsb
clc
lock
imul
and
adc
mov
fucomp
or
daa
mov
or
lret
and
lds
adc
xchg
and
jb
mov
inc
pop
mov
fisttps
add
repnz
jg
xor
and
mull
mov
leave
mov
arpl
or
ficomps
leave
xor
dec
adc
out
inc
mov
mov
lret
lods
inc
mov
shll
in
in
mov
int
insb
sbb
sahf
mov
mov
pop
and
pop
jae
inc
xchg
mov
roll
jmp
pop
sti
out
pusha
daa
js
or
xor
out
lahf
repnz
inc
fwait
stos
lcall
and
mov
inc
xor
add
pop
imul
jmp
loop
xchg
jno
inc
aad
xchg
iret
add
push
and
cmp
shl
jae
push
jb
jno
cmp
scas
imul
gs
decb
adc
sbb
rcrb
lock
pop
add
loopne
push
pop
xlat
cld
inc
pop
stos
les
xchg
jl
pushf
push
fcomip
inc
cmpsl
xchg
xchg
xor
and
rcrl
jns
aam
lahf
cmpsl
into
pop
lods
pop
sbb
cmc
sbb
enter
sbb
movsb
stc
movsb
shlb
mov
mov
mov
pop
xlat
jne
cmp
lds
xchg
cmp
and
or
xchg
into
cld
clc
adc
rcl
cmc
popa
cld
mov
imul
aad
enter
xor
mov
mov
mov
divl
mov
push
xchg
imul
inc
mov
push
andl
xchg
outsl
adc
clc
movsl
sbb
pop
mov
rolb
mov
popa
popa
mov
sbb
decl
inc
jp
jmp
sti
xchg
xor
push
jmp
outsb
cmp
jbe
loop
dec
xchg
push
sub
and
xchg
int
mov
jnp
mov
sub
jmp
mov
sub
jns
jb
lock
xchg
push
movsl
repz
or
cmp
adc
repz
pop
fsubrl
sbb
incl
mov
ds
cmc
out
popf
push
insl
clc
xchg
nop
aas
xlat
mov
fisttpl
arpl
out
movsb
pop
mov
jb
push
pusha
shlb
std
mov
xchg
sub
ret
sbb
dec
out
test
mov
shr
add
jne
shrl
xchg
insb
into
push
daa
pop
sarl
lea
mov
cmp
aaa
cs
pop
ret
pushl
leave
cli
mov
jo
adc
jns
subb
inc
loope
jbe
mov
popf
xchg
pop
daa
xor
cs
and
arpl
inc
aaa
pop
out
jl
ret
or
adc
daa
aas
cmp
sub
cmp
xchg
out
jne
sbb
data16
and
pop
outsb
rcr
in
mov
dec
push
dec
test
xor
cmp
xor
jecxz
call
sarl
aad
shrl
mov
sbb
scas
jns
gs
add
movsb
and
cld
push
xlat
jecxz
cmp
lcall
mov
xchg
sbb
call
call
mov
repz
jno
imul
pop
outsl
out
ljmp
icebp
mov
adc
int3
stos
daa
aam
mov
push
mov
rolb
cmp
mov
scas
sbb
cmp
xlat
add
lahf
hlt
mov
jl
daa
xor
int
loope
test
es
xchg
test
or
push
push
fcoms
adc
icebp
mov
sbb
gs
push
xor
jl
sub
in
jp
fsubrl
rol
or
pop
int3
insb
lret
mov
adc
mov
push
push
mov
adc
aas
jne
cmpsb
popa
daa
cmp
push
xchg
mov
fistl
cwtl
shl
insb
mov
out
cmp
scas
lahf
addb
mov
shrb
fdivs
in
test
push
sbb
sub
sbb
jae
xor
push
xchg
jne
test
xchg
and
iret
cld
fwait
sbb
iret
into
mov
fcoml
je
cs
push
mov
cmp
lahf
sarb
sbb
lahf
loopne
cmpsl
sbb
mov
add
mov
jl
cltd
in
xchg
mov
sub
rcll
js
pop
mov
sub
inc
popf
push
int
inc
dec
dec
xchg
and
cmc
lcall
lods
fldcw
leave
scas
mov
xchg
fdivrs
xchg
mov
dec
pop
jae
mov
sbb
lea
bound
mov
mov
jae
mov
popa
pop
roll
ljmp
loopne
jl
dec
mov
stos
pop
pop
inc
test
dec
cwtl
adc
lea
popf
pop
sub
mov
add
test
inc
ja
jo
cltd
lcall
sub
cltd
pop
jbe
and
fldt
testb
xor
out
nop
sbb
int3
and
test
xor
xor
jb
mov
shll
aad
jl
lods
inc
push
loopne
push
popa
pop
test
fidivrs
je
imul
xor
pop
inc
push
jl
mov
cmp
pop
push
mov
test
loope
lret
lret
add
xchg
mov
push
pop
cwtl
push
adc
cmpsb
popa
cmpsb
subl
and
rcrl
insl
mov
imul
dec
sti
mov
xchg
stos
push
outsl
or
mov
lods
dec
dec
in
mov
inc
pop
dec
out
cmp
in
dec
xorl
xor
and
addr16
adc
cmc
fldenv
shrb
ja
jb
sub
es
and
fdivrp
mov
ror
stc
sbb
js
fnsave
int
mov
incb
popa
pop
cmp
rcrb
lret
rcrb
mov
fdivp
fisttpl
outsb
cltd
pushf
push
aam
out
insb
cld
popa
stos
dec
push
in
lods
adc
inc
ljmp
add
leave
xchg
repnz
xchg
and
jge
movsb
cmp
out
jg
sub
mov
adc
jno
popf
cmpsl
imul
or
mov
in
fdivrp
mov
sahf
xor
je
pop
jbe
das
sbb
orb
lds
loop
cmpsl
mov
dec
lods
push
rep
int3
xor
ret
rcll
mov
add
hlt
les
test
mov
in
iret
or
sub
loope
xchg
outsb
outsl
adc
mov
into
mov
mov
lock
sub
adc
cld
lods
call
push
lcall
pop
mov
xor
fwait
test
or
inc
lods
mov
enter
inc
ss
dec
xor
push
mov
iret
lret
mov
lods
cmpb
jae
xor
pop
jns
pop
mov
push
cmp
sbb
mov
mov
adc
shl
mov
xchg
xor
cwtl
data16
fucomi
push
and
mov
mov
outsl
and
sbb
mov
fbstp
sbb
and
cmp
and
cmpsl
fistpl
lods
andl
dec
jmp
sbb
in
push
sbb
dec
cwtl
cmpl
push
xor
sub
adcb
movsl
add
mov
cmc
push
incl
sub
fwait
jmp
ds
inc
push
jne
aas
jne
or
into
cmpsb
sti
fcoml
movsl
adc
push
int
pop
sub
mov
lea
insl
imul
std
loopne
dec
std
pop
test
lahf
rcl
xchg
jg
xchg
add
fstpt
push
cld
inc
add
xor
ds
out
adc
sub
dec
sti
int
gs
or
mov
dec
xchg
and
or
push
imul
mov
inc
adc
movsb
push
mov
jecxz
inc
stc
pop
pop
push
mov
sbb
fldl
pop
or
ret
sbb
fistps
mov
insb
xlat
add
addr16
shlb
ret
mov
dec
fnstcw
jnp
xchg
xor
and
repnz
inc
sub
push
xor
lock
out
addb
xor
lcall
mov
jle
xor
mulb
and
dec
ret
jns
xchg
push
sub
cs
ud1
sti
adc
jne
lcall
mov
mov
jbe
out
lods
fsts
roll
mov
in
sbbl
add
sub
in
addb
sbb
and
xchg
and
or
sub
js
dec
mov
stos
inc
push
sub
lods
insb
cmp
ds
outsb
ja
hlt
or
dec
fwait
pop
iret
push
dec
mov
sbb
xchg
inc
ret
adc
flds
xchg
in
jp
xor
test
mov
repz
mov
stc
jmp
std
data16
orl
call
adc
popf
pop
dec
mov
dec
call
arpl
ja
push
and
or
pop
dec
shlb
adc
jg
or
or
sub
or
inc
jl
movsb
outsl
popa
push
cmpsl
and
push
cmpsb
dec
xchg
lds
push
mov
jge
enter
lahf
in
fnstsw
xchg
sahf
adc
ds
scas
inc
or
je
divl
jno
addr16
push
cmpsb
inc
enter
jge
add
cmp
jmp
adc
sahf
ficoms
adc
shll
nop
arpl
jae
cmpb
xchg
scas
ficoml
jno
add
push
sar
ficoml
cwtl
sub
es
push
sub
jle
sbb
mov
ret
push
adc
popa
cmc
add
clc
push
orl
sti
dec
nop
lahf
nop
mov
les
pop
jmp
es
add
iret
mov
add
neg
adc
sarb
adc
sbb
lret
stos
add
or
mov
lods
mov
cmc
push
xor
les
addr16
lea
xchg
pop
or
out
jno
aas
ljmp
inc
mov
cmc
scas
sbb
es
adc
mov
sbb
repz
clc
mov
inc
and
push
pop
shlb
fisubrs
loopne
rorl
pop
and
outsb
ds
lds
test
mov
out
stos
or
sub
mov
mov
xchg
sti
nop
inc
inc
lret
or
add
ds
mov
push
mov
xlat
gs
sbb
mov
fdivs
jge
pop
lcall
dec
mov
je
xchg
sub
aas
or
jl
xchg
or
add
mov
lods
xor
adc
inc
mov
nop
fsubl
out
shll
push
mov
pushf
ffree
in
cld
xchg
xchg
add
movsb
fsts
inc
push
add
mov
and
push
jbe
je
jle
loop
sbb
and
xorl
aas
rcrl
rol
inc
and
das
adcb
adc
leave
jge
pusha
inc
in
push
dec
push
and
push
das
stc
inc
enter
push
fwait
sahf
xchg
sti
jg
jg
jns
cli
or
pop
jl
hlt
xchg
nop
add
bound
mov
stos
fmull
bound
sbb
lret
cli
mov
inc
and
in
jle
inc
inc
ret
inc
jle
mov
and
sti
jbe
idivl
mov
mov
mov
xchg
xchg
fisubrs
out
jno
jno
xor
hlt
sub
mov
lahf
aaa
xorl
lret
mov
mov
dec
dec
or
adc
and
or
fisubl
test
je
mov
icebp
sbb
inc
or
ja
roll
xchg
popf
into
jbe
or
add
pop
jmp
push
adc
mov
cmpsl
dec
mov
cmp
test
cmp
or
sub
push
imul
sbb
jmp
sbb
add
inc
add
sub
mov
notl
jge
stc
cmpsb
fbld
stos
loopne
and
lahf
cmp
stos
scas
test
ljmp
jno
imul
out
push
lea
jg
lock
jecxz
adc
pop
insb
jo
scas
popa
lret
aad
cli
jnp
leave
pushf
repz
mov
mov
push
pop
imul
xor
aaa
ja
cmp
loop
push
adc
and
push
xor
xchg
jmp
aaa
xor
cmp
xchg
xor
cmp
push
gs
stos
dec
push
add
aas
ja
inc
pop
or
jmp
lods
jp
outsb
xor
iret
popa
xchg
add
ss
lods
faddl
daa
or
jl
out
fldcw
add
xlat
insl
in
ljmp
mov
inc
fdivs
xor
add
sbb
add
ja
sub
dec
shll
aas
and
mov
lods
jnp
iret
cmp
push
imul
jne
mov
push
rolb
jl
jp
sub
sbb
in
and
ljmp
dec
daa
cmp
cmp
mov
pop
mov
xchg
jecxz
pop
and
jmp
sbb
inc
ret
push
xor
dec
sbb
cltd
or
stos
popf
ljmp
push
fldt
sbb
gs
and
pop
pop
and
out
add
fisubrs
mov
cmp
fs
and
dec
cwtl
sbb
push
cld
xor
pop
ljmp
stc
imul
test
fs
push
es
fistpl
and
mov
jbe
jg
outsl
jo
add
mov
mov
loope
adc
loop
adc
test
aam
movl
jae
push
cmp
adc
add
pop
repz
inc
xlat
mov
clc
xor
cltd
pushf
loopne
sbb
mov
jg
jo
jns
cmc
mov
lods
arpl
arpl
fbstp
mov
add
fdivrs
shr
or
test
fdivr
push
test
add
jbe
std
dec
shrb
cmp
fwait
push
cmp
stos
aam
loope
loopne
pop
xchg
iret
or
inc
mov
outsl
imul
lcall
adc
sbb
unpcklps
rcll
pop
mov
mov
sub
icebp
fimull
sbb
icebp
lods
jne
jns
ret
sub
bound
adc
cmp
daa
pusha
out
pop
add
lods
xchg
je
mov
fidivs
pop
push
xor
filds
fldenv
xchg
sub
dec
insl
stc
adc
mov
ret
insb
cmp
enter
sbb
je
into
outsb
lock
out
aad
ficoml
repnz
inc
xor
enter
fdivp
jno
sub
mov
inc
xchg
cs
in
aam
mov
jg
add
ret
add
or
sbb
dec
mov
rcrb
mov
sbb
pop
jno
cmp
push
add
xchg
movsl
out
rcrl
popa
out
lock
jle
xchg
cmp
popf
enter
aam
mov
xchg
outsl
pop
mov
aad
sub
cltd
mov
or
mov
lds
ret
cld
mov
cmpsb
je
les
leave
testb
dec
popf
ljmp
out
adc
les
cmp
mov
incb
adc
data16
lds
bound
imul
or
ficoms
jecxz
mov
inc
xchg
movsb
push
pop
loop
ja
xor
cmpsl
test
stos
lea
xchg
je
pop
inc
fisubs
jmp
xor
push
lods
decl
mov
push
ja
sub
mov
mov
sti
lret
clc
cmc
lahf
mov
pop
mov
fnsave
xchg
jbe
pop
movsl
mov
add
mov
dec
and
gs
sbb
iret
push
cmp
dec
jb
dec
or
push
or
scas
cmp
pop
into
xchg
push
or
jecxz
cmpl
dec
and
or
fidivrl
cmp
testb
pop
and
mov
xchg
xchg
nop
xor
ret
xor
cmp
mov
lods
aad
cmp
push
ds
repnz
dec
scas
or
aaa
pop
jne
dec
leave
sub
push
jo
mov
or
je
xchg
je
repz
mov
mov
outsl
mov
adc
xchg
add
std
adc
cld
xchg
ret
outsl
cmpsb
insl
adc
arpl
cmp
pmuludq
or
lcall
cwtl
pusha
jle
lods
aas
jecxz
xchg
loope
mov
jecxz
aaa
mov
add
inc
mov
or
xchg
jo
aaa
xor
mov
sahf
dec
and
fnstenv
les
jecxz
pop
cwtl
inc
pop
add
or
lea
dec
add
dec
jge
fisubrs
xor
icebp
mov
mov
dec
pop
sub
mov
pop
jmp
and
xor
push
mov
jmp
cmp
fstps
aas
dec
stos
mov
xchg
negb
icebp
xorl
jnp
hlt
sbb
repz
rolb
sbb
push
mov
pop
or
pop
iret
ror
sbb
mov
push
mov
aam
xchg
adc
call
sbb
test
shrl
dec
dec
dec
pusha
mov
cmovae
push
sub
cmp
flds
push
fstpl
sti
xchg
testb
aaa
out
pop
mov
xor
mov
xor
push
int
cmpsl
jle
sub
inc
cwtl
mov
rcrl
jl
xlat
and
in
stc
movsb
mov
xor
bound
stc
mov
and
or
cld
or
jmp
jecxz
stc
pop
pop
shr
sub
cmpsl
popa
sbb
xlat
xchg
jo
in
xchg
sarl
stc
or
jb
xchg
dec
pop
cmp
push
cmp
ret
lods
insb
xchg
inc
daa
pop
and
xor
mov
out
dec
push
jmp
or
pop
inc
out
ds
sub
inc
pop
sarl
ljmp
stos
movsl
and
repz
paddd
nop
outsl
cmp
cmp
add
lock
sahf
scas
das
adc
and
mov
sbbl
push
das
dec
xchg
nop
jp,pn
pop
fs
add
loope
sbb
pushf
mov
imul
add
enter
aam
inc
push
inc
mov
push
shlb
movsb
xchg
sbb
mov
hlt
cwtl
add
mov
sub
mov
jns
push
adc
shlb
lock
setns
in
jg
sub
and
mov
or
dec
subb
and
push
pop
cmc
dec
sbb
loop
inc
and
sub
test
xchg
aas
outsl
test
mov
fwait
add
cld
pop
or
fcomps
pop
or
push
ret
sub
aad
inc
mov
cld
xor
sub
rol
cmpsb
adc
pop
inc
mov
dec
mov
divb
push
xchg
ljmp
adc
push
enter
mov
mov
xchg
jno
or
out
mov
add
mov
repz
fldcw
sbbb
push
xchg
daa
mov
fwait
imul
xchg
and
and
add
and
jp
jnp
push
push
int
cmp
sub
mov
dec
mov
pop
inc
outsl
int3
fbld
gs
cmp
jge
imul
ret
and
js
lahf
mov
jbe
jae
xor
inc
ja
ss
xor
xor
or
dec
inc
test
repz
cmp
dec
daa
push
jno
out
imul
outsb
cmp
push
inc
and
and
jl
aaa
icebp
stc
jl
fidivl
aas
pop
dec
ror
mov
aad
dec
inc
out
aam
jae
cmc
lcall
lahf
adc
sbb
lock
aaa
cmp
iret
inc
sbb
xchg
pop
outsl
out
cltd
mov
or
sub
cli
test
push
pop
mov
int3
lds
insl
push
sub
cmp
inc
lahf
icebp
cwtl
in
inc
jp
xor
sbb
mov
adc
push
push
mov
dec
add
fidivl
add
rorb
mov
mov
sbb
mov
or
sti
sub
pusha
cmp
addr16
lea
adc
jecxz
rol
insb
arpl
push
mov
jle
adc
cwtl
jno
inc
sbb
pop
xor
in
negl
ss
fstpt
iret
lds
sub
in
test
lods
or
in
cmp
push
aaa
and
add
testl
xchg
mov
adc
stos
enter
push
mov
jno
icebp
mov
sti
and
mov
dec
imul
in
dec
repz
gs
mov
inc
xor
xor
into
add
arpl
mov
popf
jnp
gs
xor
repnz
jb
rcll
dec
pop
mov
mov
lea
add
ret
lods
ljmp
cmp
jne
pop
cld
pop
fistps
mov
loop
out
ljmp
repz
mov
idivl
mov
push
sub
pop
ret
in
push
pushf
int3
gs
js
mov
and
shr
aam
jbe
xor
mov
shlb
stc
jnp
sbb
and
xor
sub
fstl
das
outsl
xchg
lods
cmc
sbb
xrelease
push
mov
pop
lahf
clc
mov
adc
out
push
push
movsl
add
imul
mov
jmp
adc
shlb
cmc
add
sti
jp
fidivrs
cmp
into
testb
mov
and
fmull
jecxz
addl
scas
out
test
in
pushf
fsts
or
jbe
mov
mov
dec
sarb
rol
arpl
sub
jmp
pop
inc
es
ja
fisttpl
out
cmc
ss
xor
les
add
xchg
out
hlt
or
push
shl
sti
mov
dec
xchg
sub
mov
sub
fs
cmp
dec
pusha
push
and
dec
sti
pop
stos
cld
mov
push
xor
sub
cmp
inc
std
inc
cli
clc
mov
ret
jnp
andl
push
cmp
mov
and
cwtl
cmp
pop
and
and
adc
dec
sub
inc
repnz
or
dec
sbb
sbb
jne
xor
and
jecxz
sub
mov
and
xlat
and
push
int3
daa
pop
or
lret
fisubrl
and
mov
sub
mov
enter
pusha
lret
mov
loope
push
push
mov
adc
shl
mov
xor
inc
dec
add
sbb
push
insl
mov
add
int
dec
ret
sbb
mov
ss
push
movsl
cmp
dec
icebp
pop
movsl
lahf
cld
xchg
outsb
ret
dec
imul
repnz
sarb
ss
std
push
pop
stc
push
std
jo
pop
add
xchg
shll
and
ja
stc
add
int3
dec
sbb
xchg
out
notl
cmp
mov
enter
int3
xor
xchg
mov
jge
push
inc
outsl
lds
lret
or
cmp
jp
in
sahf
in
push
add
mov
filds
or
cld
sahf
lret
das
addr16
sub
f2xm1
dec
or
xlat
fildl
mov
and
pop
repnz
out
ret
lret
jecxz
in
dec
jmp
stc
ret
xchg
inc
loop
ficompl
push
out
jnp
ret
inc
sub
xor
insb
popf
xchg
sti
addr16
mov
or
pusha
xor
ja
pop
pop
dec
add
mov
and
std
repz
int3
xor
adc
stos
ljmp
sub
aad
inc
cltd
int3
fldenv
icebp
mov
push
enter
shrb
pop
bound
sbb
pop
jbe
mov
jl
dec
fwait
pop
dec
scas
sahf
xor
or
cld
cltd
call
mov
stos
lcall
int3
push
mov
sbb
mov
ret
ret
push
jnp
dec
call
add
cmp
outsl
adc
mov
pop
sar
sub
daa
lret
add
leave
ja
bound
idivl
sbb
push
mov
jp
fucomp
mov
test
sub
mov
aad
adc
dec
imul
adc
outsl
mov
lret
jp
pop
and
dec
icebp
imul
andl
jb
lret
rcll
std
nop
mov
dec
out
jne
pushf
mov
mov
fdivrl
sbb
pop
mov
lahf
inc
mov
not
cmpsb
shr
jnp
test
push
pushf
sbb
cmp
mov
jno
push
mov
test
fidivl
ret
icebp
scas
jae
sbb
mov
clc
pop
xchg
pop
push
jecxz
stos
push
push
mov
and
imul
push
lahf
cmpsl
jp
outsl
pop
sub
scas
lds
pop
fcoml
xchg
jp
mov
pop
cld
push
inc
jnp
jg
fsubp
xlat
adc
lock
in
jp
es
enter
popa
jmp
add
jb
push
addr16
mov
sti
jecxz
inc
dec
or
mov
lock
outsl
int
movsb
push
idivl
jbe
arpl
pop
inc
imul
sub
xchg
and
shl
or
mov
pop
leave
dec
and
cmp
bound
push
dec
orb
in
in
and
dec
ljmp
insl
test
adc
dec
mov
mov
sbb
jo
stos
push
insb
sti
lret
and
or
jns
pop
and
mov
mov
rcl
mov
insb
fmuls
add
inc
and
sbb
shr
inc
in
or
dec
testl
add
mov
mov
sub
jns
push
int
mov
pop
push
xor
sub
adc
xchg
push
subb
loope
adc
mov
push
push
jmp
jnp
xchg
mov
lcall
or
rorb
cmp
jo
cmp
subb
push
adc
adc
loop
fsubs
sbb
mov
lods
pop
jge
push
xlat
mov
sbb
cmp
into
cli
dec
rcrb
mov
lcall
adc
jl
and
pop
div
jnp
fcmovnu
mov
test
mov
pop
or
mov
dec
push
les
xor
outsl
pop
push
xchg
sahf
sub
jg
test
or
sub
aas
lds
iret
dec
mov
sub
cmc
push
fisubrs
fdivrl
lcall
pop
mov
or
mov
mov
adc
punpckhbw
mov
repz
dec
lods
das
int3
xor
jle
rorb
vmulpd
inc
icebp
hlt
push
pop
out
push
jp
push
movsl
mov
cmpsl
add
out
cmpl
or
ret
fidivs
mov
bound
mov
lods
sarl
add
fwait
adc
and
repz
mov
in
xchg
cmp
scas
mov
mov
push
jns
mov
xchg
cmp
sar
mov
mov
lock
push
sarl
push
inc
sub
add
push
xorb
dec
mov
xchg
push
xlat
sub
pop
mov
jp
ss
and
pushf
dec
ret
pop
pop
faddl
pop
mov
lods
aas
repz
dec
push
pop
jno
mov
das
pop
inc
jne
loope
mov
mov
movsl
sub
add
arpl
pop
xlat
daa
push
jecxz
fstp
add
pop
xchg
addr16
push
adc
or
xchg
cmp
rorl
xchg
hlt
ljmp
and
sbb
stc
inc
mov
inc
insb
cld
into
mov
push
clc
lods
and
or
pop
ret
mov
scas
xor
jp
jbe
jne
jno
mov
xchg
mov
mov
cwtl
push
and
push
flds
adc
jmp
rcr
xor
xor
mov
jecxz
xor
out
enter
push
mov
push
xchg
andb
xor
lods
sahf
test
es
into
xchg
xchg
leave
inc
mov
and
jae
or
cld
sub
sub
mulps
sbb
cmc
jb
push
shlb
mov
sub
andl
inc
mov
xchg
fists
push
adc
jae
dec
mov
or
cmp
scas
fst
jnp
cmc
xor
sbb
dec
mov
add
and
out
mov
dec
mov
mov
push
test
clc
inc
fldenv
inc
jmp
mov
push
sahf
xchg
mov
or
add
imul
addr16
clc
and
stos
mov
imul
test
cmc
mov
pop
lock
pop
in
dec
push
pop
jne,pn
mov
and
or
daa
insb
and
push
mov
pop
sbb
fidivs
scas
lods
jp
cli
in
dec
in
ficoms
mov
and
stos
test
insl
insl
inc
fsubp
inc
add
mov
add
pop
ds
pop
push
int
inc
in
cmp
push
dec
stos
sahf
pop
imulb
cld
jecxz
fstpt
push
pop
stc
ror
je
inc
std
inc
out
aam
adc
adc
pushf
or
cmp
cmpsl
pop
dec
mov
xor
fidivl
mov
xlat
lahf
pop
and
jl
or
fistpl
jne
aaa
sub
lret
push
adc
adc
push
mov
inc
sub
or
or
push
cmpsl
scas
stos
std
sub
test
inc
dec
incl
insl
fstpl
int3
es
push
jecxz
gs
adc
repz
mov
clc
cs
int
xorl
std
aas
das
fwait
push
dec
mov
cmp
mov
mov
jl
adc
into
int3
pop
jecxz
mov
das
cmpps
add
push
cli
inc
push
lret
sub
add
mov
pop
stos
xchg
cmp
dec
xor
inc
jns
int
and
add
jb
mov
lret
pusha
in
dec
lods
fdivp
add
xorl
sbb
pop
inc
lcall
push
ja
cmpsb
inc
popa
xchg
and
inc
cmp
ret
pop
mov
mov
add
fwait
pop
or
inc
cwtl
pop
ss
inc
das
cmpsb
stc
xchg
mov
mov
cmp
jb
push
out
ds
les
mov
enter
bound
loop
pusha
std
sub
and
push
pop
sbb
or
push
jge
mov
in
outsl
inc
test
lock
repnz
dec
fstl
gs
loop
inc
fs
in
adc
bound
mov
dec
push
ret
mov
add
in
jb
pop
jecxz
and
hlt
sub
jmp
fcoml
ljmp
push
scas
sub
int3
pop
repz
inc
ljmp
rorl
sahf
out
mov
mov
cs
out
daa
into
xorb
pusha
xchg
cmp
loope
cltd
negl
xor
arpl
sub
negl
clc
or
jbe
sub
push
sub
sub
mov
mov
mov
bound
push
fiadds
cmp
ret
cmp
sbb
cmc
jae
loope
xchg
push
in
cli
int3
cltd
jp
in
push
push
ljmp
pushl
and
cmp
add
xor
cmp
dec
aam
cs
fmul
mov
push
pop
aaa
push
leave
xor
mov
and
lods
mov
and
popf
cld
add
jl
outsl
scas
push
rorl
jb
mov
fadds
sub
scas
xor
int3
insl
xchg
mov
dec
or
into
push
mov
jecxz
dec
or
xchg
repz
pushf
testb
mov
loope
add
out
pop
repz
sbb
scas
mov
stos
and
pop
dec
stos
test
insb
lods
andl
sbb
je
loopne
dec
mov
and
add
clc
lret
and
xchg
mov
xor
clc
int3
push
xchg
mov
add
lret
rolb
pop
dec
or
jae
adc
int3
xchg
mov
mov
push
pop
dec
movsl
xor
aam
call
cmp
xchg
xor
and
sub
mov
mov
xchg
mov
pop
jmp
repz
insl
mov
ljmp
fists
push
fistps
cli
sti
mov
push
mov
pop
sbb
pop
fbstp
scas
mov
push
adc
sub
insl
dec
xor
daa
pop
aam
and
adc
pusha
call
daa
adc
cmpsl
je
addb
adcb
lcall
mov
and
std
addb
pop
stos
cmp
sub
popf
into
outsb
lahf
cmp
pop
lock
mov
mov
jle
repnz
sbb
xor
jo
inc
rcrl
mov
xchg
or
xchg
mov
daa
ficoml
ret
jl
mov
fidivrl
out
inc
js
push
fdivr
pop
cmp
ficoms
js
mov
aam
jmp
xchg
jl
xor
inc
popa
ljmp
or
insl
gs
cmp
outsl
cmp
sbb
bound
dec
fwait
sub
test
xorb
fildll
out
in
rorb
orl
les
jns
jne
push
xor
jp
add
sbb
mov
push
inc
loopne
and
fildl
movsl
test
xchg
arpl
mov
mov
mov
sbb
call
and
shr
mov
in
mov
cmp
mov
or
fsubs
or
in
push
stos
xchg
cs
adc
cld
addr16
or
push
aam
add
jecxz
jo
fwait
push
mov
lock
std
push
neg
mov
divl
add
pop
insl
sahf
push
inc
inc
dec
stos
jae
push
out
call
dec
les
pushf
ret
inc
outsl
cld
out
lcall
pushf
sub
das
mov
jno
cld
je
std
dec
fbld
xor
jns
mov
and
or
and
dec
jno
inc
sbb
bound
sbb
dec
or
scas
mov
dec
insb
in
cmp
mov
xchg
or
adc
pop
mov
test
fs
inc
dec
inc
jo
ss
ss
xchg
cltd
lahf
push
xchg
lahf
call
lahf
int
divl
pop
dec
in
stos
out
fists
decb
mov
xchg
push
mov
jmp
aaa
test
fnstsw
insb
je
push
pushf
cmp
repz
cwtl
das
pop
add
cltd
in
test
push
push
std
pop
mov
dec
es
lods
test
cmc
imul
shl
jne
xorl
push
repz
and
js
in
pop
pop
and
dec
test
mov
xchg
movsl
xchg
adc
mov
fisubrl
and
iret
xchg
out
out
push
push
inc
filds
fs
mov
test
int3
jl
cltd
lret
add
call
mov
cmpsl
sbb
andl
sbb
int
mov
xchg
pop
fs
xchg
dec
mov
mov
inc
out
adc
out
cmp
adc
addr16
jne
scas
and
ret
xor
inc
xor
or
popf
call
mov
pushf
mov
outsb
mov
sub
out
sub
test
jb
stc
aam
rcl
cld
insl
push
aaa
out
js
je
jl
mov
fptan
lds
inc
dec
fdivs
into
jne
loop
dec
pop
jmp
mov
dec
lea
pop
xlat
stos
psubsb
pop
add
std
daa
je
jb
dec
mov
or
lea
out
push
pop
jg
mov
inc
loope
cli
popf
dec
scas
dec
scas
push
mov
inc
fsubrs
lahf
arpl
cmpsl
mov
fldl
mov
sub
lock
in
addr16
sarb
sub
sub
push
add
mov
xchg
jle
stc
std
addr16
iret
mov
sbb
or
int3
sub
sub
mov
cwtl
jmp
inc
adc
sahf
xchg
sbb
jecxz
in
std
pop
sub
ds
adc
sti
mov
out
jo
inc
outsb
pusha
xchg
dec
inc
andl
or
sub
dec
ret
sub
testl
dec
out
inc
shl
insl
out
pop
iret
rep
daa
out
nop
add
push
es
cld
pop
into
and
adc
stos
ja
pop
add
mov
out
fneni(8087
adc
jle
dec
inc
push
js
daa
cld
mov
outsl
test
test
add
scas
sbb
daa
pushf
enter
push
sarb
pop
add
jnp
mov
stc
dec
or
test
and
mov
fisubl
xor
xchg
xchg
dec
cwtl
or
pop
ss
pop
inc
ljmp
jge
add
mov
cwtl
pop
aaa
xchg
pop
lahf
dec
addr16
mov
lock
pop
pusha
adc
das
xchg
add
lock
pop
repnz
add
xlat
xor
cmp
test
mov
int
testl
dec
ds
adc
cmp
push
jne
popf
sti
clc
cld
adc
lahf
sub
jle
adc
cmp
stos
std
jno
pop
xchg
dec
mov
iret
and
loopne
push
das
and
mov
push
lcall
ds
jge
jno
aaa
dec
xchg
repz
pop
stos
lods
enter
aas
xor
popa
gs
fadd
mov
sub
sub
push
scas
in
shrb
icebp
int3
xchg
fwait
aam
dec
sbb
lock
and
rclb
test
daa
loopne
bound
jbe
out
in
jecxz
add
sbb
jge
addr16
mov
jbe
sbb
mov
ficoms
dec
movsb
mov
pop
je
pop
das
lods
imul
pop
xchg
loopne
adc
fildl
xor
lretw
mov
pop
sbb
jecxz
cli
pop
adc
popf
cmp
or
dec
mov
int
dec
ret
in
idivb
xor
inc
xor
pop
jmp
aad
and
cwtl
imul
into
negl
mov
xor
adc
and
push
mov
test
fwait
dec
enter
test
aaa
cmpsl
xor
lock
jnp
cmp
lock
jle
out
nop
jb
fcomip
sbb
inc
pop
pop
std
movsl
sub
dec
mov
sbb
pop
ret
xchg
andl
push
jo
in
or
fwait
pusha
adc
adc
push
loope
enter
fidivs
inc
shll
add
inc
jnp
push
outsb
pusha
cmp
xor
mov
xchg
je
hlt
push
pop
sub
or
ret
dec
popf
sub
and
cmp
jge
pop
fmuls
mov
out
adc
cmpl
ficompl
ffree
out
lret
xchg
dec
stc
and
lcall
pop
fwait
in
fldenv
inc
lock
mov
and
test
or
cli
or
fsubrl
aas
lret
xchg
mov
cmp
mov
xchg
inc
push
mov
lret
sbb
mov
mov
subb
jmp
ss
xor
out
cmp
lret
call
pop
jbe
jmp
cmc
pushf
imul
call
out
mov
lods
or
inc
ja
negb
pop
xchg
or
imul
mov
sub
jne
sbb
mov
stc
leave
inc
jmp
mov
pop
mov
js
iret
add
mov
loop
out
jge
xor
fsubs
or
and
mov
pusha
xchg
xchg
sti
mov
mov
sqrtps
in
icebp
ficompl
mov
out
dec
push
cmp
jmp
bound
xchg
call
out
cmp
fisubrl
ss
jle
not
xor
hlt
inc
jg
in
mov
iret
inc
sbb
or
in
lret
rolb
and
and
xor
dec
cmp
fsubl
xor
decl
inc
mov
inc
pop
mov
shll
inc
lods
jl
lahf
ds
call
push
dec
sbbl
xor
xlat
pop
dec
xchg
fs
mov
cmpb
test
jge
into
das
jge
mov
add
add
shl
cmp
adc
in
mov
std
pushf
sub
sbbb
repnz
aas
ret
lea
jb
mov
icebp
jge
inc
rorl
push
pop
mov
mov
and
loopne
loop
data16
mov
xchg
ss
int3
imul
popa
sub
or
push
call
mov
nop
inc
jnp
mov
jl
fnstsw
neg
orb
fcoml
jg
lret
jmp
push
add
or
enter
inc
shrb
add
xlat
push
cmp
shrb
scas
fs
repnz
mov
jmp
xchg
insl
sbb
dec
inc
and
add
mov
jg
jnp
aam
iret
cmp
out
sbb
adcl
divl
cs
jp
or
dec
sbb
xchg
and
pop
mov
add
mov
fwait
xlat
push
out
cmp
jmp
movsb
and
imul
mov
pop
in
push
jns
insb
jne
lcall
or
mov
cltd
push
cmpsl
cs
or
mov
lret
mov
mov
movsl
pop
into
sahf
into
inc
pop
pop
dec
mov
sbb
enter
sub
ret
fsubs
sti
lea
into
mov
push
xchg
xchg
aam
jp
lcall
push
mov
sub
mov
jmp
pushf
not
aas
sahf
bound
sub
mov
out
in
dec
or
negb
mov
mov
enter
packssdw
add
sbb
testl
out
and
jb
and
xor
rorl
mov
out
xchg
rclb
inc
pushf
gs
mov
push
icebp
pop
inc
loop
push
sub
aam
and
or
lods
lahf
dec
imul
scas
scas
cmc
jno
stos
outsb
mov
xchg
adc
insl
sbb
xor
sub
add
das
pop
and
call
mov
pop
lods
mov
xchg
std
inc
out
repnz
inc
xchg
push
mov
cmp
xchg
lahf
out
xchg
sbb
mov
dec
out
test
in
aad
cltd
aaa
pop
lods
adc
repnz
mov
sti
mov
lock
or
movsb
imul
test
loopne
cmpsl
enter
jp
cwtl
jo
lods
pop
aad
push
mov
and
mov
ss
dec
mov
cld
dec
mov
cmp
cmp
call
dec
jb
rol
pop
add
dec
mov
jno
xor
jge
or
stos
orb
xor
sti
shrb
mov
mov
sub
jo
dec
js
fdivr
int3
addb
call
xchg
jo
lods
ss
notb
mov
int
or
loope
pop
sub
push
lods
mov
or
inc
xchg
test
rolb
out
jno
shll
or
data16
dec
rolb
xchg
movsb
das
flds
imul
out
aas
aad
mov
mov
xchg
jo
pshufw
push
inc
inc
jmp
inc
test
push
dec
mov
pop
mov
dec
or
jl
into
mov
xor
mov
fs
sbb
sahf
lock
insb
cmpb
popf
hlt
mov
in
dec
movsb
sbb
fs
jp
out
fbld
adcl
cmp
aad
or
mov
pop
add
nop
popf
fdivl
std
and
lcall
sbb
mov
sbb
jg
push
push
xor
bound
xchg
dec
arpl
cmp
mov
or
out
int3
jne
and
aaa
push
hlt
cmp
es
mov
pop
fdivrp
stc
repnz
xor
and
out
adc
ljmpw
scas
arpl
push
les
cmc
aaa
shl
or
xor
pop
test
and
mov
jno
sbb
rcr
ror
jmp
inc
push
inc
push
push
fs
mov
std
mov
std
data16
sbb
xor
ret
lahf
iret
and
inc
inc
or
dec
adc
rol
nop
data16
inc
aam
add
mov
xor
rcrw
scas
cli
adc
mov
pop
cmp
hlt
and
rorl
aaa
insl
shrb
fwait
pop
out
cmp
push
pop
xor
mov
lahf
mulb
loope
xchg
dec
lahf
add
sbb
rorb
imul
fdivrs
dec
mov
nop
dec
or
shr
push
das
dec
fists
push
fwait
outsl
mov
ja
outsb
push
jns
mov
lcall
fwait
popa
fs
mov
fildll
push
and
cmpsl
cmp
ret
cs
push
pop
or
bt
mov
or
xchg
loope
cmp
inc
and
jnp
jmp
xor
sub
in
aad
sub
jae
ret
out
fcmovu
sub
jl
fs
mov
movsl
js
pop
add
scas
sbb
cmp
js
adcl
les
pop
enter
loop
repz
rcll
icebp
mov
and
lahf
pop
mov
iret
les
lea
fcmovnu
repz
or
sub
pop
loop
rclb
int
mov
sub
mov
mov
out
mov
cmc
mov
std
nop
push
push
pop
xchg
add
in
mov
add
repz
outsl
adc
imul
push
mov
shrl
xchg
add
cmp
inc
sub
icebp
add
into
lahf
push
gs
cld
mov
mov
jle
and
aam
insb
jbe
imul
and
pop
add
dec
jnp
gs
jne
pop
jo
shlb
mov
lret
movb
int3
imul
in
xchg
fdivrs
push
inc
fucom
gs
scas
cli
test
and
sub
mov
jp
shll
mov
jnp
sub
cmp
mov
pop
jo
lahf
test
mov
adc
call
scas
and
fs
mov
pushf
cmp
mov
jl
pop
int3
popa
aam
sbb
inc
mov
xor
sbb
push
xlat
add
cld
sub
sub
dec
pop
mov
and
jl
inc
jb
pop
dec
or
jae
outsb
movsl
int
pop
cld
out
inc
data16
fldenv
das
lret
jecxz
sbb
cmp
stos
pop
movzbl
and
push
mov
lds
cld
or
dec
aad
push
jge
sbb
jge
add
add
jle
pusha
dec
lea
insb
mov
add
cmp
insb
mov
loop
lret
clc
jl
fnstenv
add
push
imul
sub
and
test
push
pop
aaa
xor
adc
sarb
ja
xchg
push
sahf
jecxz
push
in
lods
dec
fsubs
and
cltd
dec
sbb
jo
mov
lret
aaa
lds
int
fdivrs
cmp
stc
push
jmp
ja
mov
push
movsl
jns
pop
jo
push
or
push
ljmp
out
add
out
pop
fstp
jns
ss
out
test
dec
dec
loope
out
fnstenv
jp
imul
pop
dec
repnz
cmc
bound
cltd
or
cmp
pop
and
adc
and
xchg
aaa
xchg
out
lock
xchg
xor
mov
bnd
jmp
mov
ret
lods
and
jae
ret
xchg
lds
mov
subb
or
test
shll
ret
sub
sbb
push
bnd
cmpsl
inc
xorl
cmp
hlt
shll
gs
and
or
jp
cmp
int
pop
mov
pop
and
or
pop
mov
lcall
inc
repz
cmpsb
ret
hlt
das
incl
cwtl
aas
loopne
test
and
pop
rorb
jge
add
push
and
in
movsl
mov
cmp
mov
mov
mov
adc
gs
or
dec
sbb
inc
testl
adc
in
std
push
inc
mov
stos
mov
sbb
loop
jle
pop
imulb
test
aad
push
mov
and
mov
loopne
outsl
repz
sbb
and
jb
popf
push
mov
jnp
scas
inc
stos
push
sbb
pop
jb
test
mov
inc
or
push
jae
mov
xor
mov
adcl
subb
adc
std
loopne
or
pop
mov
into
lcall
frstor
add
call
mov
test
mov
insl
jp
add
xchg
adc
push
push
roll
mov
xchg
push
add
outsl
and
xchg
jle
pop
sti
mov
lods
inc
push
mov
push
sub
insl
mov
test
test
xchg
inc
shr
cmpb
push
movsl
push
sub
adc
xor
stc
jae
out
cwtl
jb
rorb
xor
jecxz
cs
nop
mov
subl
jp
lods
test
cli
pop
leave
addl
sbb
cwtl
xchg
push
xor
ret
in
lods
sbb
inc
mov
jl
pop
adc
mov
jmp
push
inc
aaa
sar
inc
mov
mov
and
push
mov
aad
shlb
cwtl
in
bound
scas
pop
jle
mov
add
punpckldq
jecxz
cmp
jne
xor
add
icebp
repz
into
mov
push
mov
jg
sbb
ror
out
mov
repnz
data16
and
in
aas
movsb
pushf
push
popf
and
mov
cs
pop
mov
sbb
fs
push
xor
movsb
xor
push
lret
addr16
sahf
cltd
cmp
inc
leave
xchg
int3
mov
popa
shlb
lret
push
cltd
sbb
fdivl
jno
mov
js
push
mov
inc
cmpsl
cli
sub
fsubrp
cmp
mov
jmp
movsw
push
dec
lods
lds
std
sahf
rolb
pop
push
mov
fcomip
cs
push
repz
pop
repz
fadd
sbb
mov
or
jae
sbb
test
in
and
fisubl
push
arpl
sbb
and
and
popa
jle
dec
out
push
xor
movsb
mov
xor
mov
pop
inc
xor
jnp
cmp
dec
push
int3
cli
jns
push
outsl
sbb
and
pop
cltd
stos
mov
imul
adc
cmp
mov
mov
insl
dec
add
fsubl
or
ficoms
add
or
stos
jp
mov
mov
icebp
push
loopne
lret
dec
mov
push
jns
lcall
pushf
pop
iret
cmpsb
das
pop
inc
arpl
ljmp
mov
xorb
cmpsb
cltd
push
orb
cmp
push
xchg
add
loope
mov
and
push
loopne
sub
insl
mov
jg
mov
mov
pop
adc
lock
mov
mov
mov
lahf
cld
mov
ljmp
push
mov
sbb
cwtl
jo
and
movsl
loop
daa
lods
in
out
mov
dec
add
push
push
shl
in
sbb
jb
xor
daa
sbb
shll
int
pop
movsb
stc
in
mov
or
stos
addl
pop
addr16
sbb
repnz
push
mov
pop
fimuls
mov
movsl
aaa
loopne
jmp
inc
fiaddl
adcb
addr16
sbb
adc
ss
sub
mov
mov
cmpsl
sbb
iret
and
call
cmp
std
ljmp
sbb
xchg
add
icebp
xchg
ljmp
add
push
mov
cmc
cmpsl
pop
int
add
or
push
sbb
adc
push
push
lcall
pop
or
jl
cs
inc
xor
sarl
adc
pop
xchg
jnp
insb
imul
cmp
xchg
xor
les
stos
push
inc
fildll
push
enter
mov
xor
and
test
stos
mulb
es
jg
cmp
mov
jno,pt
hlt
movsb
leave
mov
xchg
mov
xchg
inc
fisubs
mov
test
cmpsb
das
jnp
cmp
pop
push
pop
leave
loop
jl
stc
jecxz
inc
mov
jecxz
inc
das
popa
mov
pusha
jne
push
dec
pcmpgtb
stos
aam
faddl
xchg
out
mov
add
adc
rolb
xor
jno
adc
cs
lock
insb
cs
stc
mov
xchg
fdivr
push
adcl
scas
xor
addl
cwtl
add
and
pop
jb
inc
mov
pop
push
push
cmp
enter
mov
mov
push
leave
pop
xchg
mov
mov
xor
scas
push
jbe
sub
lds
adc
filds
stos
stos
into
add
add
jg
xlat
lret
adc
mov
mov
push
add
jno
sub
xchg
dec
jae
rclb
lds
orl
cmp
mov
jns
or
pop
daa
inc
mov
pop
stos
inc
push
daa
divl
or
andb
or
es
pop
cmp
sub
mov
and
mov
jne
in
js
mov
or
js
das
test
mov
or
xor
jbe
fcompl
or
rorl
sbb
mov
aaa
mov
xchg
push
add
adc
or
insb
mov
mov
cmp
sub
stos
xorl
pop
push
and
stos
push
pop
inc
aad
sub
push
je
addb
or
fsubl
xchg
and
cli
lods
or
in
fmul
outsb
aaa
leave
xor
xchg
push
addb
sub
mov
add
xchg
rcrl
dec
mov
push
pop
or
cmp
adc
add
sbb
int3
push
fisubrs
insb
hlt
out
or
enter
out
xor
sbb
fstpt
in
cs
xorl
and
sub
in
std
jmp
add
mov
xor
into
sbb
xchg
ja
inc
pop
cmp
scas
lret
pop
out
pop
dec
dec
xchg
clc
mov
pop
jne
test
sub
lds
test
dec
mov
mov
loope
xchg
push
aas
or
pop
jmp
sub
mov
jae
fstl
add
xor
adc
jmp
xor
arpl
pop
std
lods
xlat
dec
loope
push
sbb
jp
jl
mov
into
clc
push
inc
cs
clc
cltd
in
fnstsw
mov
mov
jnp
popf
fwait
clc
xor
sbb
mulb
sbb
sub
xchg
in
sti
add
push
es
ret
lock
dec
idivb
or
add
push
scas
adc
icebp
test
aad
sub
hlt
faddl
dec
mov
repnz
stos
push
mov
xchg
pop
mov
mov
pop
aam
fucom
sbb
and
lods
pcmpgtd
jecxz
xlat
insl
mov
in
push
xor
inc
in
pop
shll
mov
fnstenv
jmp
adc
lods
dec
lock
sub
add
aas
inc
mov
pop
in
loope
xchg
xchg
out
mov
jg
sbb
orb
daa
cmp
in
push
cmpsb
pusha
dec
mov
ljmp
mov
fcoml
aaa
jb
lcall
mov
cmc
nop
out
xchg
sbb
pushf
push
inc
repnz
pop
repz
iret
lret
xor
sbb
pop
mov
mov
xor
pop
call
xor
jae
xchg
adc
mov
nop
loop
repz
inc
push
test
shlb
push
leave
push
jle
pop
push
jb
xor
push
add
mov
int
mov
movsb
call
mov
pushf
mov
lods
cmpb
xchg
jo
jbe
inc
mov
xchg
bound
and
jge
pop
inc
jne
xor
mov
adc
outsl
lcall
pop
test
adc
imul
inc
sub
mov
cmpl
stc
mov
dec
push
stos
clc
addr16
ficoms
fmuls
xor
pushf
adc
outsl
out
adc
shlb
and
incl
fnstcw
xor
ffree
xor
xchg
mov
pop
hlt
dec
cmp
xchg
mov
ja
arpl
pop
rcr
data16
lods
and
mov
cmpsl
shrb
sub
adc
sub
out
adc
xor
lahf
scas
stc
sbb
pop
xor
jae
test
sbb
xor
cmc
xor
jmp
loope
mov
push
scas
mov
jne
int
inc
add
dec
jns
adcb
sub
cmpsb
sbb
repnz
cmp
cltd
jp
in
or
pop
ss
adc
daa
sbb
lds
inc
notl
sbb
int
or
clc
aad
loop
dec
dec
vandnps
inc
mov
test
enter
xor
mov
inc
out
rcl
mov
adc
divb
jl
xchg
mov
sub
add
mov
nop
dec
stos
add
add
jo
sbb
xor
or
scas
lahf
aam
jge
lds
stos
test
clc
std
cwtl
dec
mov
out
mov
ja
mov
mov
or
cmpl
dec
mov
leave
into
call
mov
mov
jg
repz
xor
inc
sti
addr16
adc
inc
cmp
outsb
inc
outsb
mov
pop
shll
enter
cmpsb
das
mov
rorl
addr16
jl
dec
ds
sarb
loop
mulb
pop
sub
cmp
icebp
call
jne
xchg
push
fstpt
lcall
fidivs
jne
sbb
sbb
cli
pop
das
mov
mov
xor
insl
or
test
cltd
xchg
hlt
lea
push
pop
aad
jge
mov
test
sub
jno
mov
sub
mov
dec
push
push
dec
popf
or
rcll
outsl
push
add
mov
in
mov
jns
test
cmp
movsb
mov
scas
pop
in
jae
mov
pusha
ja
lcall
xchg
inc
pop
cld
jnp
pop
sub
adc
iret
pushl
mov
mov
dec
roll
sub
fisttpll
loopne
fsubrp
fimull
or
outsb
aad
dec
or
inc
jns
sub
les
adc
pop
jne
std
sub
lahf
xchg
add
rcl
cwtl
loop
in
pop
fldcw
adc
fidivrs
test
imul
outsl
lcall
cmp
stos
es
cmp
jmp
in
adc
jg
repnz
mov
mov
cmpsl
mov
ret
inc
icebp
mov
mov
das
mov
mov
jbe
jmp
cld
pushf
push
sar
dec
jbe
icebp
decb
pop
iret
aad
addr16
cmp
mov
and
in
jns
shrb
jae
rclb
ljmp
ret
xor
or
sub
ret
pop
out
and
aas
enter
mov
inc
sub
inc
sub
jl
fisttpl
inc
cld
mov
stos
pusha
in
mov
xchg
or
aam
data16
ficomps
mov
inc
push
test
adc
mov
sub
jg
dec
jae
inc
ret
mov
cli
inc
xchg
inc
call
lahf
sub
fdivrl
push
fs
in
out
cwtl
sti
jp
inc
fidivl
in
int
jecxz
add
mov
pop
jne
or
add
mov
dec
loop
jg
sub
mov
test
push
je
xor
pushf
aad
jecxz
lret
adcb
mov
pusha
arpl
jae
adc
xor
fs
mov
mov
test
js
leave
pop
pop
test
cltd
leave
add
jecxz
and
ret
xor
add
inc
xchg
xor
mov
sbb
cli
negl
gs
insl
ljmp
pop
dec
je
into
mov
test
in
jnp
in
pop
inc
inc
cmpsb
cli
sub
xchg
push
cmpsb
fs
inc
add
push
pop
jno
mov
rcll
xor
jae
stos
out
jo
dec
push
loopne
jb
mov
push
lcall
add
ficoms
and
test
outsl
adc
dec
add
je
xchg
push
loopne
movsl
add
pop
rcl
pop
inc
push
fnstcw
test
sbbb
xor
mov
sbb
ds
fnstsw
sub
cs
xchg
fcomp
shrb
adc
ljmp
xor
divb
imul
cmp
sbb
or
filds
inc
jl
push
or
sbb
pop
enter
push
stos
pusha
cmp
or
pop
sub
iret
loopne
mov
lea
notl
cmc
ljmp
adc
sub
pop
jnp
lret
dec
cmp
je
iret
rcrb
ficompl
mov
pusha
or
pop
lock
arpl
xchg
sbb
jp
or
dec
mov
or
mov
mov
aaa
clc
dec
or
sbb
jae,pn
int3
ret
xor
add
lret
and
add
push
rol
sbb
out
out
orb
adc
mov
and
mov
outsb
sub
sub
lods
inc
push
in
icebp
xchg
sub
leave
jp
mov
pop
movsl
or
sbb
insl
add
lds
pop
mov
fisubl
jg
add
cli
sub
fidivrl
or
push
add
into
pop
je
lret
subb
adc
mov
in
ja
dec
jg
mov
xchg
fwait
sub
bound
push
push
lds
sbbl
pop
xor
insb
call
daa
cld
push
inc
adc
dec
mov
jp
imull
inc
cltd
xchg
hlt
test
pop
pushf
xchg
jae
cmpb
jecxz
pop
loopne
nop
mov
cs
mov
pop
cmp
push
mov
dec
sti
sbb
cmp
dec
and
push
xchg
inc
jns
gs
jle
xchg
mov
jne
and
adc
jmp
pop
xor
push
push
dec
cmpsb
adc
and
inc
ret
fnstcw
push
jg
inc
xchg
es
sub
sbb
sbb
push
nop
aas
fistl
lret
adc
sahf
inc
inc
imul
mov
push
push
lods
and
inc
or
add
int
dec
pop
aad
pop
mov
mov
jmp
add
leave
mov
lods
andl
sub
fiaddl
fs
aaa
fidivl
adc
dec
sub
add
lods
jl
cmp
fistps
inc
cmpsl
daa
aas
out
subl
lods
daa
mov
fdivr
cmp
inc
inc
ret
daa
pop
jno
aaa
aam
jnp
sti
mov
std
outsl
hlt
nop
mov
cmpsl
xchg
cmp
jne
test
mov
test
push
pop
jl
add
movsl
add
xor
jle
cmpsb
call
nop
movsl
stos
lods
cltd
inc
mov
addr16
stc
sti
into
jp
jno
stos
dec
loope
sbb
lods
fs
mov
movl
mov
inc
lret
push
jne
call
cmp
or
dec
inc
iret
hlt
nop
das
mov
int3
mov
sahf
and
movsb
lahf
cmpb
sbb
sar
mov
rcrl
data16
movsb
mov
xchg
or
sbb
ret
xchg
stos
imul
jp
enter
aas
mov
jnp
movsb
cmpsb
sbb
cmc
jo
ret
inc
or
fisttpl
js
lahf
pushf
aam
sbb
out
xlat
out
or
cwtl
cmp
or
into
mov
pop
adc
rol
notl
mov
mov
lcall
mov
xlat
xchg
xchg
shll
addr16
pop
dec
jno
ficomps
mov
stos
cmc
add
inc
mov
mov
icebp
sub
push
or
out
mov
testb
and
mov
xchg
fldl
loopne
xor
inc
imul
xchg
cmpl
out
testb
adc
in
mov
addl
jg
jmp
jge
fmull
sarl
sbb
add
and
mov
jmp
dec
push
pop
es
jno
or
loopne
imul
cmc
mov
xlat
xchg
cli
icebp
fidivl
cmp
fisttpl
fdivl
jge
pop
leave
sub
adc
inc
clc
idivb
pop
lcall
inc
nop
cld
neg
into
int
ljmp
xlat
rep
adc
addr16
xor
jnp
push
pusha
push
aad
lahf
dec
divl
pop
xchg
pushf
or
jno
xlat
push
pop
cltd
mov
inc
popa
ljmp
test
call
sbb
pop
mov
jbe
push
je
jb
into
fsts
sbb
lret
xor
pushf
pusha
out
fdivs
loopne
orl
mov
js
imul
xorb
xor
lds
pop
xorl
or
sbb
imul
pusha
jb
int3
je
xor
shr
lahf
cs
int3
je
ret
xor
ljmp
mov
dec
cmp
pop
pop
sahf
sub
mov
xor
int
iret
dec
push
in
dec
das
mov
adc
jl
or
jl
fstl
dec
xor
int3
and
or
and
ret
inc
sbb
jne
push
sub
imul
cmp
xor
ficoms
xorl
in
jg
call
in
aaa
mov
sub
jmp
into
aam
lods
cld
dec
add
je
mov
in
pop
adc
sbb
xchg
mov
stc
pop
jns
mov
mov
pusha
js
jae
and
mov
out
xchg
xchg
negb
mov
cwtl
daa
jge
mov
bnd
xchg
lcall
fwait
jle
jl
push
movb
inc
dec
inc
aas
push
int3
xchg
xor
pop
push
jns
rcr
ss
push
fs
push
pop
test
out
or
cli
arpl
fistl
xchg
xchg
jno
mov
lds
pop
ljmp
fsubl
out
jl
nop
xchg
mov
mov
adc
push
pop
loop
cmpsl
enter
or
fidivl
mov
add
sti
out
push
xchg
xor
lcall
push
xchg
loope
push
pop
and
adc
mov
cmpb
mov
insl
add
jbe
mov
mov
adc
sbb
dec
mov
in
sub
mov
test
adc
jge
xchg
mov
scas
dec
fsub
fs
in
in
mov
fwait
cmp
pop
pop
xchg
adc
repnz
inc
fidivs
fstps
clc
outsb
popf
mov
data16
xor
pop
jns
mov
cwtl
inc
int3
orb
and
dec
test
data16
jg
push
decl
andl
and
mov
adc
sub
sub
dec
rcrl
ficomps
pop
fs
push
jge
rolb
mov
push
scas
xor
outsb
aaa
inc
sbb
or
add
ss
rcl
test
adcb
imul
push
cmp
xchg
or
jg
sub
xchg
lods
cmp
cmp
aas
movsl
lret
leave
mov
jbe
push
jl
sbb
mov
and
push
shlb
mov
and
xorb
or
cli
or
sbb
jb
movsl
push
imul
or
jp
jae
push
xor
xchg
mov
mov
cmp
sub
loopne,pt
xchg
aas
cmc
ja
mov
inc
mov
push
xor
adc
scas
arpl
movsb
push
add
sub
fwait
mov
lret
mov
and
jae
push
outsb
and
mov
push
xor
dec
mov
push
cmc
rorb
push
movsl
jle
push
sbb
lahf
ss
sti
cmpsl
pop
ja
ds
add
xor
sbb
cmp
inc
jae
jp
stos
fisubl
mov
sub
notl
xchg
pop
and
xchg
bound
mov
pop
push
cmp
ljmp
shll
dec
cld
sub
std
add
pusha
arpl
xor
push
mov
jecxz
pusha
enter
mov
dec
xchg
movsl
inc
cs
jge
sahf
ljmp
out
inc
mov
inc
xor
rcr
mov
adc
sub
scas
test
int3
push
int3
xchg
or
and
lods
rcrb
sbb
aam
insl
cmpsb
add
mov
push
push
xor
cld
jns
or
dec
lret
fldt
std
mov
fstps
mov
pop
pop
mov
movsl
es
jmp
sub
mov
mov
cli
out
dec
jp
dec
inc
mov
inc
pop
repnz
ss
jae
andb
hlt
inc
and
loopne
dec
add
xor
test
lret
hlt
or
or
fnstsw
xchg
dec
jne
jecxz
dec
dec
sub
xlat
aaa
loopne
and
rcrl
or
mov
inc
fwait
inc
fistpll
loop
sar
adc
pop
pop
lcall
mov
out
push
lret
xchg
hlt
jecxz
popf
ja
adc
ljmp
stc
mov
jle
or
ds
lock
jle
mov
sub
push
mov
mov
iret
paddusw
lret
ds
pop
pop
hlt
jae
leave
dec
inc
les
aaa
inc
cmpsb
and
add
or
sub
pushf
fbstp
sbb
dec
lds
lock
test
out
outsl
mov
vmovsd
add
mov
fildl
daa
sub
cli
loopne
xchg
pop
lock
fwait
or
insl
jns
mov
jmp
sbb
sbb
add
mov
push
xchg
push
adc
push
in
pop
cmp
daa
call
pop
xor
popa
jae
in
das
xlat
lcall
int
lret
pop
int3
jl
dec
jle
popf
cltd
xchg
and
int
ret
push
xchg
mov
xlat
jo
inc
lret
mov
ficompl
or
mov
jae
ljmp
sbb
mov
leave
insb
dec
stos
mov
shll
aaa
inc
jge
es
int3
fisubrl
add
jp
mov
pop
and
mov
or
push
cmc
add
adc
xchg
fwait
lods
or
mov
loop
pop
clc
cmp
in
sub
lds
ss
xchg
add
ret
jns
leave
and
push
in
adc
sbb
or
fistpl
mov
dec
lods
mov
xor
mov
xchg
scas
scas
push
loop
add
dec
fisubrl
gs
mov
push
outsl
pusha
lods
mov
sbb
mov
push
xchg
dec
pop
and
out
testl
popf
inc
mov
shlb
mov
shlb
fsub
bound
jno
loopne
lret
mov
cs
ds
mov
scas
lahf
dec
js
mov
sbb
xchg
notl
movsb
or
push
ret
loop
or
add
pop
das
jne
xchg
sub
jl
cs
ficompl
lods
push
loopne
adc
les
lock
and
sub
mov
xor
mov
fidivrs
push
nop
fdivrp
pop
ret
pop
add
push
mov
xchg
mov
mov
testb
cmpsb
inc
lret
xchg
cltd
rcrl
adc
fisttpll
bound
add
jbe
or
xor
inc
xchg
pop
inc
cmpsl
mov
sarb
aad
fnstenv
das
add
movsb
sbb
subb
inc
data16
fisttpll
punpcklbw
cs
sub
jns
push
ss
push
jmp
adc
mov
std
add
push
mov
mov
sbb
and
adc
insl
add
cmp
pop
loopne
fsubrs
push
lahf
mov
call
inc
je
mov
sbbb
mov
xchg
sbbb
sub
js
push
and
jmp
popf
mov
xor
xchg
sarb
andl
cmp
xchg
in
cwtl
dec
test
xchg
mov
cmpsb
xor
dec
cmp
hlt
dec
cs
aaa
pop
jge
mov
add
pop
dec
stos
mov
orl
sbb
dec
or
dec
adc
mov
ret
jo
cmp
sub
pop
push
inc
mov
sub
ds
cld
pusha
jle
insl
sub
add
out
aam
and
mov
scas
call
ss
and
ds
ret
fcmovnbe
dec
xor
mov
fwait
sbb
inc
and
in
mov
fimuls
pop
ret
stos
rorb
ja
in
icebp
into
sub
add
shll
adc
pop
xlat
cmp
test
fldt
shrl
mov
pop
mov
add
or
js
dec
or
adc
inc
push
xchg
mov
xchg
fnstenv
pop
scas
idivb
ret
sub
xchg
mov
mov
sbb
test
cmpsl
xchg
dec
sub
je
fs
test
icebp
js
dec
fptan
call
inc
jnp
pop
adc
sub
xchg
add
hlt
popa
pusha
mov
outsb
movsl
inc
pusha
xor
sub
mov
sub
arpl
cmp
cmc
shrb
sbb
cmp
cmp
cwtl
push
jbe
stos
lock
and
push
xchg
push
pusha
jbe
dec
movsl
push
dec
xchg
out
xchg
popl
add
aam
and
add
dec
jb
insb
adc
icebp
ret
int3
jp
outsl
add
in
int
sbb
divl
lea
fcomi
inc
pop
dec
mov
dec
stc
xor
dec
sub
jns
jecxz
int
cmpsb
xchg
jle
xor
jmp
xor
jo
pop
add
add
jle
repz
fwait
addr16
insb
fcomip
xor
imul
xor
fcoml
mov
lcall
je
movsl
mov
pop
je
xchg
inc
xchg
dec
cmp
lds
dec
je
push
xchg
jg
or
pushf
fisubrs
inc
ret
push
out
fisttpll
push
push
mov
mov
dec
iret
mov
xchg
adc
sub
mov
add
push
ffreep
adcl
xor
fmull
mov
inc
inc
lock
xor
js
mov
sahf
dec
inc
ds
call
jo
daa
lret
in
sub
add
imul
mov
in
adc
dec
dec
ret
inc
in
mov
mov
lea
es
std
adc
add
sbb
sti
xchg
pop
jmp
xchg
je
repz
jmp
pusha
scas
mov
mov
pusha
jb
pusha
mov
push
cmpsl
cltd
idivb
mov
xchg
fwait
xchg
fcmovbe
fmul
add
scas
repnz
int
sub
mov
mov
mov
sbb
xchg
outsb
pop
outsb
push
inc
in
test
je
sub
addr16
or
insl
scas
lea
arpl
push
sub
dec
mov
aaa
jns
adc
sub
rcrl
push
push
out
js
inc
jp
cmpsl
cld
jno
sbb
mov
mov
fisubrs
insl
adc
push
cmpsb
lods
push
movl
sub
je
jo
lods
cmpsl
in
push
mulb
js
shlb
dec
mov
gs
mov
xchg
xor
inc
popa
std
mov
or
insl
sti
aaa
sub
sub
stos
pop
inc
and
dec
repnz
cs
mov
xchg
pop
cltd
push
clc
test
add
cwtl
mov
sbb
mov
cmp
stc
add
arpl
enter
push
mov
std
clc
sub
adc
js
js
mov
pop
push
xchg
mov
fsubl
in
sahf
sbb
or
push
aaa
and
repnz
in
ds
cmp
in
push
adc
inc
pop
daa
xlat
rcrl
in
mov
hlt
rcl
cmpsb
out
cmpsb
xor
mov
bound
jl
daa
jmp
aas
and
sub
xlat
testw
lods
mov
orb
dec
push
in
mov
das
push
mov
xor
out
rol
adc
cmp
jo
outsb
rclb
arpl
fistl
xchg
mov
xchg
and
dec
xor
pop
outsb
lret
roll
popf
rolb
insb
icebp
dec
mov
add
insl
idivb
fcompl
imul
fdivs
fisubs
int3
mov
xlat
popa
mov
in
or
scas
es
push
test
ffree
dec
or
and
push
scas
mov
push
xor
fidivrl
lcall
lret
js
cltd
jl
ffreep
mov
stos
and
sub
sbb
pushl
out
push
xor
xchg
insb
mov
mov
jmp
xor
mov
lcall
cwtl
out
xchg
sbb
aad
lea
imul
rorl
xor
cmp
cmp
cwtl
pop
sbb
scas
or
inc
and
sbb
dec
cmc
mov
cltd
add
sub
push
insb
and
adc
xor
add
mov
out
lahf
fsts
or
cmpsb
mov
popa
aaa
fistps
lods
mov
dec
sbb
js
testb
fyl2x
xchg
cmp
push
xchg
int3
inc
in
pop
out
adc
mov
insb
xor
cmpsb
mov
mov
add
push
jmp
es
out
sub
pop
mov
inc
pop
mov
flds
mov
nop
mov
cli
in
or
ret
jmp
pop
movsl
ljmp
std
dec
fsubrs
shrl
scas
je
out
outsb
rolb
lods
adcb
ret
repnz
xchg
sbb
mov
les
je
int3
das
jo
fldenv
ja
xchg
shrb
xor
jmp
and
jmp
lods
xchg
mov
fdiv
imul
pop
rcl
adc
test
or
div
fildll
cmp
push
pop
jo
xor
adc
rcl
ja
jmp
inc
dec
movsb
adc
out
jp
lds
inc
push
pop
fcomi
gs
stc
gs
xor
dec
fsubrs
fwait
jnp
mov
dec
scas
mov
ds
push
stos
std
inc
test
push
xchg
xor
cmp
fcoml
pop
js
popf
add
sbb
xor
call
lea
inc
dec
fsubl
sbbl
cs
lds
cld
arpl
or
addl
xchg
aad
pop
cmp
mov
addr16
aaa
pop
repnz
out
pop
inc
xchg
dec
leave
dec
fsubrp
jg
jnp
push
mov
mov
test
ror
shll
or
int3
inc
xlat
bound
xchg
stos
push
popa
pusha
jmp
xlat
add
test
scas
insb
cld
mov
nop
in
ds
incl
adc
mov
xor
push
xor
loope
xorb
outsl
xchg
sbb
pop
pop
jnp
cmc
jge
xchg
sub
add
out
loope
dec
mov
aaa
hlt
sahf
dec
test
pop
in
xchg
sbb
cwtl
pop
repnz
pop
cmp
cmpsb
jmp
fdivs
inc
sub
sbb
inc
sub
sub
inc
and
iret
lods
xchg
xchg
int
ja
repz
mov
or
fidivs
add
test
xor
pop
insb
retw
jg
mov
enter
iret
bound
adc
ror
and
in
adc
and
sub
mov
dec
insl
xchg
int3
xchg
jne
leave
ja
inc
xor
movsl
movsb
inc
mov
xchg
jns
or
xchg
sub
stos
lcall
in
in
mov
dec
xorl
and
aaa
lret
push
dec
faddp
scas
fucom
loopne
and
or
cmp
scas
sti
mov
cmp
fs
sbb
and
cli
xchg
xor
push
arpl
jmp
pushf
mov
fnstcw
sarb
clc
call
lods
xchg
jnp
popf
inc
pop
rorl
xor
inc
fwait
gs
push
leave
nop
ret
sahf
pop
and
mov
sub
xor
dec
pop
push
popa
inc
cltd
lock
inc
jnp
fnsave
xchg
aaa
test
test
sub
dec
mov
and
aas
add
and
xchg
in
mov
sti
jecxz
std
sbb
mov
shlb
sub
divb
push
jg,pt
pop
fidivs
ja
cmp
movsb
shlb
dec
push
xchg
jmp
das
xchg
incb
jo
jae
in
insl
imul
jge
sub
cwtl
addb
and
pop
cmpsl
addb
lods
inc
cmp
cmp
xchg
pop
mov
stos
dec
pop
dec
jp
xchg
outsb
adc
mov
xchg
pop
mov
pushf
enter
xor
sub
dec
in
dec
adc
inc
fwait
mov
adc
shr
insl
dec
test
sahf
loopne
xor
dec
or
cmp
test
sbb
push
push
ss
iret
aas
mov
shll
test
cmpsl
add
adc
or
cmpsl
mov
xor
sub
loope
and
mov
daa
sbbb
mov
pop
push
arpl
dec
sbb
sub
bound
test
adc
bound
pop
or
mov
shlb
xchg
ret
mov
and
or
sahf
mov
pop
push
mov
fldcw
sub
pop
mov
aaa
psubq
dec
xchg
jo
mov
inc
imul
mov
out
inc
jne
push
shl
lods
inc
xchg
sub
pop
lea
jge
xchg
mov
jnp,pn
mov
xor
push
xor
mov
rorl
adc
mov
cmp
dec
mov
ja
shlb
js
es
sahf
cmp
or
or
add
inc
negl
cmp
mov
lds
aad
push
sub
lahf
test
in
inc
dec
or
push
lret
in
inc
jnp
sub
xchg
jno
cmp
pop
jmp
adc
adc
jno
dec
push
mov
mov
loop
mov
insb
xchg
test
jl
push
push
pop
shrl
lds
mov
fst
add
cli
dec
pop
xchg
mov
mov
fisttpll
daa
dec
lcall
movsl
lret
mov
sub
cs
mov
sbb
mov
mov
jg
dec
push
push
add
sub
xor
xorl
jmp
and
outsl
into
and
les
imul
xor
lods
ss
and
popa
mov
add
fstps
jne
push
and
loopne
sbb
jmp
out
cltd
add
andnps
jmp
pop
dec
jae
ds
pop
jp
cwtl
xchg
stos
jno
cmp
idivl
arpl
mov
popa
bound
js
dec
xor
bound
and
lcall
fnsetpm(287
adc
lea
fdiv
and
sbb
jecxz
data16
hlt
adc
cli
xchg
out
inc
adc
push
rcll
clc
aas
loop
in
pop
sub
xor
test
lds
loope
push
inc
cmp
add
jnp
aad
inc
push
out
lret
mov
ret
push
aas
aam
push
adc
push
dec
and
stc
pop
int3
add
jl
int3
enter
or
lret
jns
cmpsb
xchg
xorb
jmp
adc
xor
dec
in
fadds
mov
and
xor
jnp
mov
shl
aaa
stos
rep
jne
sbb
aam
xchg
outsb
stos
xchg
rolb
cmc
clc
push
fwait
push
inc
inc
xor
inc
mov
adc
pop
jge
sub
rsqrtps
cmp
push
in
xor
push
lds
das
add
cld
xor
sbb
inc
xchg
gs
aaa
das
adc
push
jecxz
ljmp
mov
push
or
xchg
out
data16
jle
dec
lea
fs
push
pop
xor
inc
xor
mov
inc
rorl
cmp
movsb
or
scas
add
movsb
aas
sub
jo
sub
cmp
dec
rcl
sbb
mov
in
push
mov
sahf
imul
push
add
mov
mov
jo
mov
add
shll
sub
lea
fnstcw
ret
in
jae
jp
dec
jne
pop
int
jmp
aas
mov
cmpsl
dec
out
xchg
arpl
xchg
dec
pop
daa
and
cld
adc
std
jae
mov
inc
inc
lock
addr16
in
cmpl
push
mov
movl
ret
xor
mov
pop
push
decb
inc
adc
outsl
aas
adc
mov
push
out
in
xor
lds
out
or
xchg
mulb
sbb
pushl
and
pop
mov
mov
or
int
sahf
stc
lcall
jge
xchg
cmp
sbb
jp
ss
pushf
insb
and
testl
push
out
xchg
imul
mov
subb
frstor
push
cwtl
lea
pop
in
mov
xchg
push
es
cmp
orb
jae
test
cwtl
mov
adc
inc
lods
fbstp
and
rclb
push
or
js
mov
jb
popa
mov
clc
shll
in
adc
lock
mov
test
jecxz
mov
mov
jns
push
pop
mov
arpl
fs
xor
es
xchg
cmc
cmp
pushf
sbb
inc
xor
or
clc
outsl
fmuls
mov
testl
or
mov
adc
dec
inc
shll
jmp
idiv
imul
and
inc
loopne
sub
cmpb
ficoms
push
inc
mov
cmp
dec
mov
inc
aam
dec
mov
shrl
inc
adc
cmpsl
in
mov
xchg
js
inc
jne
ret
ret
sti
mov
sahf
daa
iret
jp
jmp
andl
push
outsb
pushf
pop
cmp
cmc
dec
push
cmp
jnp
sbb
jl
pop
in
lea
jb
sar
sbb
sub
cmpsl
test
sbb
pusha
xchg
cs
stos
jnp
inc
gs
inc
movsb
sarb
stos
xor
dec
fdivr
inc
or
fsubp
rclb
dec
dec
out
pop
mov
mov
add
push
test
aaa
cmpsl
and
mov
mov
lret
enter
test
add
push
mov
xchg
pop
pop
lods
out
jp
popf
popa
mov
mov
jno
pop
xor
jo
sub
xchg
xor
pop
pushf
xor
shrl
mov
subb
cmpsb
xchg
scas
cmp
push
fnstenv
roll
push
popl
fs
cmp
gs
dec
add
or
and
push
test
mov
cmp
mov
das
adc
fnstcw
fcmovnb
in
mov
test
in
jmp
daa
cwtl
sbbl
std
add
in
mov
mov
inc
das
cmp
jno
mov
cmpsb
popa
inc
cs
ljmp
xchg
shl
in
mov
jg
mov
inc
xchg
push
push
int
gs
xchg
push
mov
jnp
push
jmp
sarb
mov
xchg
xchg
stos
xchg
cmp
push
fcompl
lods
imul
inc
pop
scas
xor
cs
xor
and
rorl
pop
mov
jo
inc
inc
ret
sub
xor
and
call
out
leave
dec
in
andb
pop
clc
add
sub
leave
inc
movsb
sub
insb
dec
mov
pop
or
lea
fcomip
aam
cmpsb
or
mov
adc
cmpsb
mov
pop
inc
mov
out
arpl
sub
adc
xchg
lock
pop
inc
push
out
dec
push
cwtl
sub
jo
xchg
mov
sbb
repnz
inc
jp
adc
das
inc
stos
mov
loop
stos
ds
mov
outsb
jp
in
mov
mov
aaa
add
add
dec
cmp
and
sbb
jae
ljmp
push
cmp
fisubrl
jge
subl
and
into
add
loop
lret
push
mov
and
ret
or
pusha
or
jne
jae
xor
shr
inc
sbbb
and
xchg
cmc
cs
sbbb
inc
stos
adc
adc
inc
repz
shlb
push
incl
jno
scas
test
jo
xchg
clc
lock
in
cmpsb
daa
mov
into
sbb
in
xor
cwtl
lret
xchg
jge
jae
pop
mov
out
mov
mov
pop
gs
insl
adc
add
adcb
sub
ljmp
shr
jmp
push
mul
popf
loopne
xor
mov
outsb
loop
movsb
pop
lods
push
sahf
clc
mov
and
pop
dec
mov
mov
inc
fcompl
add
xor
in
ret
add
push
fistpll
jno
lcall
and
mov
stos
movsb
aas
lods
sar
and
mov
int
add
mov
in
aas
lahf
daa
lods
adc
mov
sub
stos
push
mov
inc
nop
fildl
jb
pop
fwait
jge
jno
or
in
sub
xchg
jmp
icebp
add
std
mulb
pop
lahf
mov
push
mov
andb
not
movsb
inc
imul
dec
int
pop
out
out
cld
cli
pop
and
aad
lds
inc
sub
jecxz
add
jne
nop
jge
mov
sbb
jo
notb
mov
sar
xor
push
inc
outsb
cmp
shlb
mov
mov
jmp
xor
jp
mov
push
faddp
sbb
arpl
shr
cmp
lock
xchg
scas
mov
jo
dec
push
sbb
sub
adcl
fwait
pop
insl
mov
pop
outsb
push
orl
sbb
and
add
push
mov
aas
cmp
idivl
popf
jns
add
aas
cli
jmp
dec
adc
cmp
adc
cmp
inc
outsb
push
mov
or
movsb
scas
mov
xchg
add
scas
outsb
adcb
dec
sub
pop
imul
pop
mov
and
imul
mov
testl
xchg
scas
mov
loope
push
push
sarb
jge
pop
cmc
xchg
mov
cmpsb
sbb
addr16
std
stos
jae
or
out
std
and
out
inc
pop
inc
fnstenv
rol
mov
or
das
pusha
mov
xor
xor
xorl
mov
ret
jnp
scas
and
inc
mov
dec
pop
jno
fs
xor
jb
push
jmp
jnp
mov
pop
lock
or
push
test
dec
fiaddl
inc
sahf
shl
out
nop
push
rcll
adc
mov
cmc
dec
stos
push
or
sbb
call
pushf
imul
push
inc
lods
inc
jmp
mov
mov
cwtl
mov
sahf
cmpsb
pop
jno
sub
and
jge
cmp
sub
data16
mov
cli
imul
shr
insl
test
ja
mov
mov
cmp
jne
sub
jnp
aas
mov
and
stos
std
mov
mov
popf
dec
sub
clc
xorl
sub
movsl
mov
pushf
sahf
and
lahf
mov
jns
lret
das
shl
test
shll
dec
and
cmpsl
nop
or
sub
add
mov
out
imul
sbb
mov
mov
xor
add
sub
lds
in
jo
adc
jle
jo
jecxz
and
imul
xchg
test
cmpsl
sbb
dec
aas
mov
cmp
cltd
mov
mov
subl
fisubs
out
push
clc
test
les
inc
imul
mov
loopne
mov
and
ja
sub
adc
cmp
sarb
inc
push
loopne
nop
dec
pop
jg
aad
dec
test
std
ljmp
repz
arpl
stc
ss
cmc
xchg
enter
pushf
imul
call
addr16
xor
fwait
shrb
scas
mov
mov
dec
fimull
push
mov
cld
fstps
jb
stc
iret
push
jae
mov
pop
push
inc
das
cli
clc
add
sub
lahf
dec
jo
xchg
gs
mov
cltd
or
gs
or
lret
leave
mov
add
cld
rorl
xor
fisubl
int3
in
sbb
mov
dec
xchg
ds
mov
cwtl
scas
dec
inc
lcall
adcl
mov
int
push
mov
add
push
in
shlb
sti
or
xor
xor
daa
int
xor
cmp
bound
mov
sbb
and
in
bound
enter
cmp
jo
sarl
test
fdivl
mov
inc
fcoml
mov
orb
das
sbb
xorl
test
stos
adc
dec
daa
stos
push
adc
ljmp
xchg
mov
sub
push
cli
ror
call
push
aad
sbb
adc
mov
call
fadd
fisttpl
pop
mov
inc
mov
mov
dec
adc
add
movsl
movsl
rcrl
dec
jl
dec
push
mov
adc
xor
mov
cs
or
xchg
mov
out
je
and
repnz
dec
mov
pop
sub
or
xchg
cmp
aaa
add
push
sbb
mov
mov
cmpb
ljmp
imull
lret
xor
add
fisubrs
jg
fcoms
bound
jb
adc
das
dec
testl
mov
cwtl
jge
scas
xor
xchg
loop
xchg
fisubl
fadds
cmpsl
ja
inc
pop
repnz
and
test
cmpl
movsb
or
push
iret
iret
jge
or
and
cmpsb
sbb
or
cmc
in
cltd
inc
inc
je
lret
add
mov
cmp
jbe
adc
addl
push
jmp
sbbb
cmp
lea
xchg
popf
repnz
sub
xor
jmp
and
js
adc
shrl
stos
ret
push
fnstcw
lods
xchg
lret
lret
das
push
roll
adc
pop
scas
call
add
push
fucomip
fstpt
cmp
mov
leave
ffree
jg
push
cmp
xchg
movsb
mov
lahf
jo
add
shrl
lahf
pop
xchg
push
xchg
lds
push
loopne
xchg
leave
imul
cmc
and
jnp
jns
mov
push
pusha
dec
in
subb
xchg
imul
aas
clc
loop
jno
cmpsb
nop
clc
bound
fisubrl
inc
xchg
fmuls
mulb
jp
imul
xchg
jnp
test
push
xor
idivl
jae
add
movsb
leave
inc
fnsave
sbb
mov
divb
sti
dec
lret
out
int
mov
sub
adc
nop
inc
lods
cli
scas
xor
clc
fs
sbb
std
rolb
and
lds
adc
ds
popa
mov
sub
mov
sbb
inc
and
mov
sarl
rol
out
sbbb
lcall
lock
jg
xchg
mov
lcall
ds
popa
jns
or
adc
cmp
inc
push
outsl
std
sbb
test
add
sub
test
in
mull
lock
arpl
mov
sub
adc
aaa
lods
add
jb
cld
push
mov
push
test
sub
xchg
popf
aam
mov
rol
repnz
and
jns
je
xchg
and
mov
dec
ret
jno
aas
and
push
fists
sbb
pusha
xchg
in
ljmp
iret
mov
pop
lds
and
jge
pop
movsl
int3
sbb
sbb
imul
jo
and
and
ret
into
or
add
loope
int
adcl
lock
xchg
xor
roll
movl
push
mov
push
fdivl
inc
outsl
inc
popa
movsb
data16
mov
sahf
mov
push
insl
fdivl
or
leave
xchg
int3
notl
mov
or
out
addr16
in
out
movntdq
inc
pop
in
push
jns
push
xchg
insl
in
hlt
rcr
xchg
jbe
arpl
js
test
out
dec
jnp
and
lahf
inc
jb
out
cmc
jne
xchg
dec
mov
xchg
sub
push
lods
outsl
int
sub
ljmp
das
daa
xchg
push
jl
dec
xlat
cltd
enter
in
mov
add
pushf
mov
sub
scas
leave
sbb
imul
fsubrl
dec
int3
lret
add
cmp
std
fisubs
mov
js
inc
fwait
mov
clc
cli
loopne
movsl
stc
push
or
sbb
jbe
cltd
fbstp
mov
test
jnp
jl
cmp
call
es
pop
add
cmp
mov
in
inc
into
dec
enter
int3
adc
inc
sbb
add
loope
je
rorl
or
cmp
mov
mov
adc
jle
int3
mov
cmp
jb
test
sub
fincstp
sbb
jns
sbb
imul
adc
inc
mov
lcall
ljmp
fmull
ret
adc
dec
dec
pusha
lahf
pusha
mov
imul
or
xchg
jne
negl
jmp
pop
mov
leave
cmpl
mov
mov
cmp
std
sbb
cmp
sub
loopne
cmp
mov
xchg
ja
sbb
and
shlb
xor
add
sub
adc
cld
mov
stos
xchg
repz
lods
dec
xchg
aad
jnp
fwait
outsb
out
mov
addl
adc
cmc
sti
fsts
nop
loop
sub
loopne
ljmp
popf
out
pop
int3
cmc
cmpsb
sbb
cmp
pop
sbb
sub
jb
pop
rclb
pop
aas
xor
xchg
fyl2xp1
cld
xchg
lret
cmpsl
pop
xchg
cmp
or
dec
mov
push
hlt
jns
rcrb
loop
inc
cli
ja
mov
pop
push
lret
xchg
dec
push
imul
add
aaa
outsl
pop
pshufw
loopne
jae
das
aaa
or
ss
insb
imul
outsb
ja
je
out
adc
std
pop
mov
lcall
xor
pop
loope
insb
adc
hlt
add
ret
imul
mov
dec
and
imul
cltd
sub
mov
mov
lret
imul
mov
rolb
lret
add
sti
push
inc
inc
jbe
and
add
stos
leave
call
aas
pop
sbb
lods
add
sbb
xchg
aaa
loope
out
xchg
cltd
pop
jae
enter
xlat
hlt
jge
sahf
sub
ficomps
jbe
and
xor
or
ret
popa
mov
push
popa
mov
lahf
ret
lods
inc
dec
and
outsl
xor
pop
and
stos
test
test
xchg
stos
scas
mov
jb
fsubl
jbe
shl
cmp
mov
iret
fcmove
mov
or
cmp
jo
jno
sysret
mov
mov
nop
jbe
pop
in
sbb
shll
adc
aam
mov
add
sub
popa
xchg
in
inc
adc
jmp
sbb
insl
stos
into
outsl
dec
jp
out
enter
push
mov
rol
mov
xor
inc
dec
cmpb
aaa
push
push
pushf
mov
cmp
and
popf
xchg
clc
lods
fcoms
imul
aaa
adc
les
and
hlt
imul
dec
and
adc
das
add
mov
jg
scas
hlt
fsubl
stos
mov
adc
mov
js
xchg
add
xor
cli
jbe
popa
xchg
shll
add
add
lret
push
xchg
push
out
lahf
sub
xor
call
mov
mov
sub
sub
sbb
icebp
or
pop
adc
addr16
das
in
inc
jge
xchg
pop
jl
ror
into
test
std
js
cli
dec
cmpsl
and
insl
aaa
shlb
sub
call
jb
pusha
xlat
jecxz
mov
loopne
pop
push
loop
into
xlat
out
sahf
enter
daa
add
outsl
stc
adc
ffree
lods
pop
popf
test
clc
data16
or
push
stos
cmp
into
mov
fildl
in
icebp
fmull
test
aas
ret
dec
inc
ljmp
mov
xchg
mov
dec
mov
aam
roll
fbld
in
hlt
push
out
adc
outsb
fsubl
aam
cld
and
sbbb
jecxz
imulb
xor
jle
and
and
scas
test
test
jno
je
dec
inc
repnz
adc
fstpl
in
jb
int
faddl
js
sub
mov
xorl
sub
add
fisubrs
outsb
jg
incl
pop
gs
sbb
xchg
insb
cmpsl
jle
mov
pop
mov
or
les
shlb
mov
std
push
dec
arpl
or
pushf
xchg
sub
loop
mov
xor
ret
outsl
and
mov
es
rorb
ja
enter
jbe
cmp
push
mov
cmp
jnp
xchg
mov
es
push
pop
dec
scas
sub
lahf
icebp
ret
jno
cmp
ss
ds
push
push
cmc
inc
jno
mov
jg
std
leave
jmp
sti
pusha
or
stos
add
cld
sub
mov
jnp
cmp
int3
outsb
es
push
lahf
popf
sbb
mov
gs
push
mov
icebp
mov
loopne
sbb
jge
out
add
push
xor
negl
cli
sub
mov
je
adc
mov
sub
add
lock
insb
mov
pop
cld
fwait
daa
les
pop
movsb
loope
in
push
jp
sti
fiadds
test
push
sub
sbb
fsubrs
mov
xchg
sbb
fldcw
inc
imul
inc
and
ret
add
fs
hlt
mov
lods
or
mov
ja
jo
test
je
push
add
arpl
jg
loop
mov
shll
movsb
iret
jge
cmpl
sbb
sbb
stos
lret
adc
xchg
jbe
gs
ds
add
jge
or
daa
sbb
push
pop
cwtl
sub
mov
pop
loop
lods
push
mov
xchg
imul
out
fdivrs
imul
sub
rcll
sub
mov
inc
insl
push
or
lods
mov
call
mov
xor
xchg
out
jl
scas
xor
adc
cmp
std
lods
adc
dec
dec
cmp
cld
pop
xor
or
lahf
daa
mov
pop
dec
dec
adc
mov
jo
pop
jb
sbb
orb
gs
stos
adc
xor
in
in
scas
jmp
ror
bound
cs
pop
adc
sar
mov
mov
shll
roll
mov
out
xchg
in
xchg
sub
aam
aam
aad
adc
adc
cmp
inc
out
jns
inc
mov
test
lret
adc
popa
mov
in
push
push
adc
call
cmp
jmp
shll
enter
notl
sub
pop
js
sub
outsl
mov
mov
push
and
or
mov
xor
imul
lret
scas
jbe
dec
xor
xor
rcl
dec
ficoms
cwtl
hlt
xchg
dec
out
push
push
jge
adc
loope
mov
xor
sbb
mov
jbe
jb
and
test
and
pushf
cmp
mov
pushf
mov
movsl
inc
pop
out
dec
or
jne
mulb
mov
fdivp
jns
adc
and
out
hlt
fadds
and
out
cli
nop
loope
hlt
push
mov
pop
add
int3
test
mov
mov
pop
sbb
andb
into
inc
push
add
or
nop
dec
int3
cmp
push
lret
mov
les
xor
jle
mov
sbb
mov
ja
test
idivb
dec
sbb
pushf
mov
insl
mov
inc
mov
and
adc
sub
repz
mov
push
cld
xlat
push
imul
test
push
fbld
mov
lods
cmc
inc
rolb
push
xchg
push
stos
aas
jns
push
aas
cmp
xor
dec
je
xor
mov
fistpll
jb
cli
pop
inc
inc
repnz
adc
popf
and
sbb
xchg
je
loop
test
sub
aad
aaa
movsb
jge
and
fildll
xor
xchg
pop
aaa
or
faddp
or
mov
jnp
or
mov
js
or
loop
cli
push
xor
subl
mov
rcrl
jb
jnp
mov
loopne
mov
mov
sub
push
cmp
push
repnz
rol
ret
xor
xor
mov
dec
push
xchg
mov
adc
cmc
lret
mov
imul
or
xor
loope
jecxz
sbb
imul
lret
mov
and
mov
shr
jge
ficoms
shrb
out
xchg
clc
inc
mov
fnstenv
dec
out
aaa
mov
sub
add
mov
arpl
scas
mov
loopne
add
mov
and
jo
fisttpll
xchg
and
mov
sub
sbb
std
jo
mov
scas
fwait
das
aam
fs
orl
adc
sub
iret
jg
lahf
test
int
in
aam
mov
rcrl
addb
push
mov
fwait
andl
add
xchg
sub
icebp
mov
dec
inc
push
jg
lds
or
sbb
dec
nop
imull
test
or
inc
mov
cltd
aam
cmp
movsb
fldl
xchg
jp
jae
and
push
jg
sbb
mov
decl
dec
jg
mov
jp
xchg
or
mov
fisubs
inc
pop
mov
in
es
rcll
dec
mov
in
lods
xor
xchg
sub
imul
mov
cmc
sbb
xor
fadds
mov
stos
lahf
cs
inc
aad
jne
xchg
xchg
scas
push
push
mov
aas
mov
mov
sbb
in
mov
sarl
rclb
lret
leave
sti
push
cmp
pop
shll
daa
or
xchg
mov
mov
sbb
pop
in
adc
js
fsubl
add
and
lds
in
jbe
sub
das
movsb
ret
or
xor
push
in
push
inc
shll
test
aas
inc
ret
cld
dec
movsl
movsl
or
xchg
sub
into
mov
jl
adc
loop
std
jle
das
mov
stos
ja
xchg
gs
loop
sub
add
sub
imul
clc
pop
movsb
nop
and
dec
pop
and
mov
push
mov
jp
lock
mov
imul
enter
test
sub
pop
cmp
and
sub
pop
cmc
cmpsb
cmpsl
outsb
pop
sub
mov
add
add
out
adc
adc
call
rcrb
jecxz
lcall
cli
ret
sub
adc
xor
jmp
fcomi
xchg
test
sub
sub
mov
pop
insl
mov
sub
ror
je
pop
rolb
mov
shrb
or
pop
ja
jae
pop
jne
cld
pusha
mov
setge
xchg
lea
lock
inc
mov
xor
and
cmpsl
dec
mov
dec
repz
loope
xor
adc
fsub
jg
adc
movb
push
bound
push
xchg
testl
mov
cli
imul
pop
mov
mov
adc
cmp
or
frstor
dec
mov
jmp
stos
dec
xor
ret
testl
loopne
stc
cmp
insb
mov
fs
mov
jmp
sbb
jecxz
ret
pusha
cmpsl
push
in
mov
repz
xor
in
scas
lret
push
daa
or
jle
lods
sub
adc
pop
cmpsl
mov
push
inc
test
push
fisttpl
push
xor
rcrb
cwtl
cmc
into
cltd
and
ret
das
dec
mov
mov
xchg
mov
pop
mov
subl
adc
cmp
sub
frstor
out
cmp
cmc
mov
jo
mov
rolb
pop
sub
int
lds
cmc
mov
iret
jae,pn
inc
cmp
pop
jbe
movsl
xor
outsb
jmp
insl
pushf
sub
mov
rclb
mov
hlt
and
xchg
push
mov
jns
jmp
and
ffree
adcl
divl
xchg
aam
add
insb
pusha
mov
cmpsl
jns
and
fidivl
mov
push
int
mov
pop
pop
lcall
pop
fs
imull
dec
je
js
mov
dec
adc
enter
aad
or
pop
lcall
push
mov
ds
pop
xchg
and
rcrb
cmp
pop
jge
push
fmull
adc
stos
or
push
out
xchg
mov
cmpsb
jp
jp
sti
hlt
test
add
fcoml
cmpsl
and
imul
in
push
cmp
mov
repz
push
mov
scas
in
in
add
xlat
js
mov
movsb
pop
stc
fwait
dec
inc
xor
jbe
shlb
xchg
mov
cmp
jnp
cmp
lcall
mulb
jno
xchg
testl
inc
pop
mov
push
cmpsb
add
mov
enter
pop
mov
jge
sub
subl
lret
scas
sub
mov
js
repnz
idiv
mov
mov
adc
jmp
aam
inc
add
das
push
repnz
imul
das
hlt
sub
mov
fildll
stos
or
aam
inc
xchg
dec
loope
aad
dec
and
sub
pop
jae
push
jns
add
xor
in
fnstsw
popf
dec
adc
fdiv
fwait
test
call
test
and
xlat
pop
fidivrl
mov
rcrl
rorl
jb
xlat
fcoml
and
rcrb
in
adc
jmp
es
mov
clc
push
sbb
iret
mov
test
cwtl
and
fcoms
mov
clc
stos
dec
adc
inc
jo
xchg
adc
mov
pop
cmpsl
jns
clc
jmp
orl
push
dec
dec
bound
and
pop
mov
sti
ret
sbb
test
lret
mov
add
push
mov
scas
xchg
loope
push
dec
mov
call
xor
and
push
sbb
fistl
fistpll
fwait
popf
leave
decb
insb
fwait
add
pop
sbb
push
mov
leave
pop
fmuls
mov
leave
mov
inc
lahf
and
add
mov
repnz
pop
mov
jns
cmp
nop
mov
pop
sti
xchg
aam
rol
cmc
or
or
xor
test
cmc
andb
cltd
sub
push
sub
mov
pop
cmp
mov
mov
nop
and
sahf
stos
or
sub
das
psubb
xchg
push
andb
lcall
arpl
pop
or
std
aas
fnstcw
pop
jne
pop
call
xchg
sub
push
push
shlb
scas
push
rol
imul
ja
in
popf
inc
inc
sbb
test
mov
aad
sbb
push
xor
cld
in
sub
jno
mov
inc
jbe
pop
mov
adc
imul
add
mov
mov
lds
scas
xchg
int
arpl
loope
das
mov
lock
push
sbb
in
add
nop
leave
sbb
lahf
jge
xor
test
and
sti
sub
sub
mov
dec
pop
push
mov
mov
dec
lods
scas
loopne
das
and
mov
jae
xor
add
inc
imul
arpl
pop
sub
add
lahf
aam
sbb
nop
dec
push
pushf
imul
push
mov
cmpsb
inc
call
dec
js
rclb
mov
add
push
andb
addr16
call
ja
xor
lret
out
lahf
call
dec
aaa
sbb
add
push
inc
push
xchg
push
xchg
repz
imul
push
sti
sub
inc
dec
idiv
pop
fcomi
inc
into
stos
xlat
out
aaa
stos
bound
out
xor
mov
fdivl
imul
push
mov
lds
jmp
mov
inc
pushf
xor
in
fdivrp
fs
dec
jae
or
cmp
pop
jae
cld
addr16
sbb
test
cmc
arpl
scas
and
movsb
push
aas
das
rclb
mov
hlt
jmp
mov
push
jecxz
pop
popa
xorl
and
xor
scas
mov
mov
dec
pop
fcompl
cltd
scas
pop
cmp
sub
sub
dec
sbb
out
mov
pop
test
mov
or
outsb
popa
popf
push
mov
add
jns
mov
repz
cs
push
call
sti
ljmp
cmpsl
jns
or
add
push
scas
and
pusha
out
fwait
aad
insl
ret
insb
add
push
xchg
cmp
sub
int3
shr
jmp
ret
push
jecxz
jae
cmpsb
shld
mov
sub
jmp
mov
scas
sbb
loopne
xor
loopne
movl
lcall
loop
mov
scas
sti
xchg
fs
in
ds
lahf
cld
es
cmp
test
dec
dec
les
mov
fadds
stc
and
xchg
mov
into
mov
lcall
shll
icebp
ffreep
bound
mov
add
push
xchg
jecxz
sti
or
subl
xor
mov
jne
push
sbb
jnp
pushf
push
mov
push
shlb
mov
orl
rclb
xchg
pop
iret
out
es
jne
sbb
xor
adc
int
xchg
loope
hlt
mov
jecxz
hlt
rcrb
adc
and
mov
xor
or
fdivr
lds
xor
nop
jg
sbb
and
in
xchg
cmp
sbb
inc
jne
cli
in
fsubp
stos
shll
push
or
xchg
inc
xchg
fcmovb
test
jp
and
or
cwtl
or
fidivl
xchg
aaa
int
mov
and
push
xor
xchg
outsb
stc
popa
lock
add
sub
jns
mov
sbbl
dec
addb
sub
mov
std
lds
pop
xchg
mov
int
scas
or
adc
push
aaa
cmp
in
in
add
pop
stc
stos
xor
ljmp
aam
push
dec
and
fxch
js
enter
inc
andb
jns
jbe
jae
cli
jo
lret
lods
mov
mov
loopne
and
iret
into
pop
add
push
aad
adc
xchg
inc
stc
fs
cmp
xchg
adcb
jg
or
or
jo
xor
pop
repz
inc
push
jl
mov
mov
cwtl
mov
xor
cmc
rorb
fadds
aaa
mov
rcrl
xchg
jmp
ja
pop
sbb
adc
mov
rclb
add
xchg
jge
and
inc
xchg
mul
jge
and
or
imul
imul
lods
jns
mov
xchg
mov
aad
in
negl
push
jp
mov
xchg
jmp
mov
jge
cmpsb
xchg
fwait
loopne
add
cmp
les
into
inc
mov
or
inc
bound
shrl
inc
sti
sub
push
lahf
cwtl
inc
dec
enter
and
pop
pop
mov
jp
adcb
lods
stc
xchg
sbb
mov
insb
fdivrl
or
inc
addr16
pop
dec
ljmp
pusha
jmp
inc
push
pusha
sbb
stc
and
cmp
lret
push
and
outsb
pop
scas
lahf
push
cmp
adc
adc
mov
xchg
lods
or
or
int
lds
fsubrl
and
ds
lods
push
mov
cld
xor
sub
call
push
lock
jp
mov
pop
dec
lock
dec
icebp
mov
fwait
mov
jp
pop
jl
push
cmp
jle
sub
mov
sbb
rcr
sti
fistpll
cmp
out
dec
inc
call
rcll
sub
mov
dec
inc
popa
mov
and
popa
adc
push
mov
outsb
in
jo
subl
stc
pop
xchg
cmp
jmp
xor
jo
lods
and
repnz
and
and
mov
hlt
pop
jbe
xchg
pop
pop
popl
push
ret
das
pop
fnsave
rcr
add
push
dec
inc
out
pop
jb
adc
arpl
add
mov
pop
js
push
cs
test
sub
addr16
sub
andl
dec
mov
mov
iret
cs
cltd
dec
push
inc
jl
imul
sti
lea
inc
insl
movl
imul
clc
in
ss
mov
decb
stos
into
adc
shlb
push
stc
rorb
je
push
dec
in
or
shl
mov
cld
je
push
adc
inc
mov
mov
loop
aad
xor
lods
cmp
mov
jae
in
fsubr
sbb
sahf
in
fwait
shlb
clc
xchg
leave
add
cli
jns
jns
inc
popf
cmp
pmulhw
stc
mov
xchg
cmp
xor
into
popa
in
lds
push
out
xchg
lea
orl
pop
movsb
mov
std
pop
imul
pop
ret
or
add
addr16
scas
insl
mov
dec
incb
sbb
insl
mov
pop
and
mov
shll
xchg
adc
mov
pop
push
vpsubw
std
cmpsl
mov
xchg
mov
mov
or
aas
fdivrl
add
mov
xchg
std
pusha
sub
push
sbb
mov
loopne
and
movsb
mov
jbe
jbe
mov
lea
dec
jnp
cmpsl
inc
push
dec
mov
pop
test
bound
mov
mov
mov
in
jecxz
or
dec
into
adc
jecxz
xchg
andb
in
dec
push
lret
add
fcoms
adc
mov
repnz
cmp
lret
pop
rcl
aaa
bound
out
jg
push
je
fwait
mov
jp
pop
dec
rep
push
std
out
pop
icebp
mov
jge
inc
imul
mov
stos
sbb
mov
sbb
ss
fildl
dec
negl
jb
jb
xchg
nop
jae
push
sbb
hlt
in
loope
popa
cmp
outsb
mov
clc
and
mov
das
loope
insl
jp
ret
add
pop
fucom
sbb
pop
pop
mov
out
sahf
cmc
dec
pop
add
sti
pop
lret
jp
repnz
in
imul
pop
xchg
xlat
pusha
push
or
xchg
mov
jbe
add
in
sbb
insl
inc
adc
cmp
and
mov
fisubrl
inc
push
sbb
sub
es
inc
mov
cmpsl
pop
xor
cwtl
ret
not
int
in
cltd
loop
xor
and
clc
rclb
outsb
jle
pop
mull
add
lea
fldl
in
arpl
xor
pushf
xlat
flds
mov
loope
ds
hlt
jb
bound
inc
push
cmp
push
lret
andb
or
lcall
inc
inc
xor
enter
pop
lea
cs
sub
sub
mov
cld
mov
cmp
xor
mov
mov
repnz
ljmp
scas
movsl
cmp
mov
push
js
inc
mov
mov
sub
stos
or
shlb
sub
and
subb
mov
orb
jnp
sub
pusha
das
push
mov
dec
adc
ficompl
lock
sbb
loopne
imul
add
shlb
clc
push
pushf
lea
test
mov
aad
inc
sahf
pop
ret
sarl
pop
nop
mov
fisttps
mov
std
mov
in
add
mov
cli
cmc
ljmp
mov
jle
imull
addr16
sbbl
popa
movsb
dec
mov
js
push
call
ret
cmc
leave
mov
ss
adc
add
dec
shlb
std
jae
out
lret
sti
sub
loopne
psubsb
inc
lcall
mov
sub
mov
push
and
ljmp
inc
and
and
adc
fidivs
popa
jecxz
push
subb
adc
jp
in
jl
jg
push
rorl
and
notl
cmpsl
or
inc
loope
daa
sahf
and
cmpsb
jle
xor
or
aas
pop
fcomps
out
mov
or
push
mov
lods
mov
adc
testl
cmp
jo
repz
xor
and
or
jecxz
popa
lret
jecxz
sub
cmp
pop
xchg
dec
jb
xchg
inc
enter
inc
add
in
test
sub
dec
shl
in
push
xchg
aam
sub
jb
inc
inc
mov
add
jle
pop
xchg
subl
pop
imul
mov
mov
xlat
test
xchg
adc
rcll
xchg
dec
aas
jle
add
stos
push
fxch
cwtl
in
test
fadds
inc
dec
mov
push
xchg
jb
pop
imull
and
pop
filds
pop
push
sbb
leave
inc
push
out
lods
inc
sub
mov
add
testl
xchg
fmulp
clc
ds
sub
pop
cmp
fildll
rorl
add
das
std
mov
xchg
cwtl
and
sbb
cmp
lret
xchg
pop
in
or
and
jge
aad
bound
aas
daa
out
loope
xchg
push
outsb
iret
not
out
sahf
shrb
outsl
or
pop
sbb
inc
sbb
data16
xchg
in
inc
push
sub
pop
push
and
or
push
jg
stc
adc
or
pop
mov
jno
xchg
and
add
je
mov
pop
xor
hlt
adc
mov
cmp
and
xchg
enter
sbb
dec
jno
jmp
mov
ljmp
enter
fcom
pop
adc
fcmovb
stos
inc
out
push
aas
in
fisubrs
stos
adc
push
and
ret
imul
sbb
lods
dec
out
hlt
enter
sbb
mov
mov
cwtl
xchg
cmp
scas
jp
ret
xor
repz
out
insl
les
pop
sub
repz
pop
test
dec
inc
push
cwtl
repnz
int3
mov
mov
repnz
push
arpl
pop
pop
into
mov
or
out
xchg
sbb
dec
inc
pop
int3
dec
sub
xchg
imul
popa
pop
push
add
ds
inc
jle
push
nop
sub
sub
inc
ds
pop
xchg
sbb
xchg
mov
dec
insb
pushf
xchg
scas
int
mov
ja
mov
out
sbb
cmpsl
scas
loopne
mov
int3
lea
add
int
mov
sbb
sbb
fldenv
cmp
mov
xor
adc
mov
arpl
clc
pushw
lret
jl
lcall
inc
mov
sahf
pop
lock
scas
xchg
or
xchg
cmp
rcl
in
push
pop
mov
int
adc
mov
and
xchg
and
sbb
xchg
stos
fiaddl
or
shlb
popa
movsb
push
ficomps
sub
jmp
xor
add
in
out
xlat
in
les
and
sub
push
add
iret
sub
adc
aaa
xchg
jno
add
and
and
sbb
jmp
push
lcall
inc
and
or
int
xor
loope
arpl
cmpsl
sar
ja
outsl
pop
iret
cwtl
fdivs
push
imul
mov
int3
outsl
inc
pop
jns
inc
pop
out
enter
mov
test
adc
fadd
mov
xchg
es
mov
or
sti
shll
inc
lcallw
add
aad
jno
xchg
jle
jne
data16
push
out
push
es
popa
loop
lret
int
dec
dec
cltd
dec
enter
pop
int3
test
pop
gs
repz
jmp
aaa
dec
call
in
popa
and
jge
cmp
sbb
and
das
je
push
pusha
cli
xchg
mov
sbb
pop
loopne
cltd
mov
es
sbb
ds
jae
xchg
cmpsb
jmp
xor
int3
fdivl
jp
pusha
sbb
movsbl
jg
mov
dec
int3
sahf
adc
xor
xchg
add
push
xchg
or
xchg
fwait
aaa
sbb
stos
daa
sub
dec
and
pop
and
lahf
or
jbe
fdivl
repz
mov
xor
insb
jbe
scas
movsl
enter
shll
rcll
sbb
xor
add
popa
in
mov
jle
jo
sub
loope
add
add
jbe
pop
add
xchg
insb
popf
into
aad
mov
push
mov
int3
xor
dec
in
mov
xchg
add
cmp
fiadds
mov
icebp
mov
outsb
jp
jae
dec
adc
sub
daa
mov
fiadds
incl
push
out
jno
or
fisubrl
or
movsl
inc
push
stos
mov
pop
xor
dec
loop
fstpt
dec
pusha
jg
jmp
cmp
mov
pop
pop
shrl
adc
das
sbb
daa
push
pop
aas
mov
outsb
xor
int
stc
repz
hlt
sub
and
lret
pop
sbb
cld
jg
insb
inc
dec
mov
movsb
mov
sbb
pusha
subb
xchg
hlt
sbb
xor
or
fs
xor
sarb
fisubl
dec
adc
cli
mov
dec
movsl
loop,pt
filds
sub
fdivrs
iret
mov
scas
lcall
sbb
das
adc
push
cwtl
mov
in
or
xchg
push
adc
and
sub
repnz
in
mov
and
add
fwait
out
jecxz
cmpl
movsb
inc
and
scas
loope
push
mov
mov
pop
pop
push
jl
adc
jmp
in
push
jbe
lea
lds
sbb
cmp
nop
test
nop
xchg
inc
sbb
adc
fstps
das
cwtl
push
pop
pushf
xchg
cmc
and
fbstp
pusha
xor
xchg
dec
or
push
das
cmp
daa
outsb
sbb
and
dec
mov
add
movsb
jbe
mov
jne
test
ret
js
es
jge
jmp
dec
fsubl
jg
dec
xchg
sub
cmp
push
cmp
les
loopne
push
pop
jle
popf
sbb
arpl
sbb
adc
dec
pop
dec
xor
jae
xchg
in
xor
stc
fs
dec
and
lahf
xor
out
jbe
movsl
mov
add
mov
xchg
inc
sbb
mov
jecxz
ss
sub
inc
jb
jmp
xchg
sub
in
cwtl
in
in
and
mov
and
ret
mov
mov
mov
movsb
sbb
jne
rep
push
jmp
je
int3
rcr
or
or
divb
ja
or
cmp
mov
inc
testb
negl
pop
sbb
mov
mov
xchg
jo
sub
sbb
or
push
cmp
pop
aaa
lcall
sbb
and
xor
bound
jp
or
inc
fimull
xchg
mov
dec
mov
and
add
mov
test
push
je
mov
int
das
cmpsl
jns
pop
pcmpgtd
hlt
dec
jno
pop
lock
and
pop
insb
lret
add
test
or
mov
xchg
movsl
lods
dec
mov
movsl
in
push
xor
nop
lock
test
out
xor
dec
cmp
nop
dec
sub
lret
push
sub
aam
and
cmp
sbb
pop
fldenv
inc
mov
mov
sbb
insl
lds
push
and
das
dec
loop
inc
dec
in
xchg
stc
and
movsb
loope
mov
or
leave
stos
dec
dec
scas
stos
sti
or
push
and
in
popa
xchg
outsl
inc
fidivrl
cmpsl
fucomip
xchg
adc
into
icebp
divb
inc
in
aad
sub
scas
pushf
add
repnz
add
sub
movsb
into
mov
jae
jns
fildll
lahf
xor
std
stos
pop
fwait
in
pusha
dec
inc
sub
in
cli
add
push
and
cmp
out
push
cmp
lcall
fdivrl
pushf
and
xor
mov
mov
inc
sub
xchg
push
js
jp
jno
cmc
sub
hlt
loop
rclb
mov
frstor
testb
out
xchg
fistpll
sar
inc
ret
orb
vmovss
hlt
jne
jecxz
cmp
daa
ds
mov
sbb
aam
das
mov
adc
push
jmp
mov
orl
xchg
and
in
cmp
push
call
popl
hlt
sbb
clc
popf
je
inc
push
aas
out
pop
std
add
aam
mov
int3
sub
shrl
aaa
sbb
jl,pn
sub
pop
int3
inc
gs
imul
mov
add
dec
outsb
mov
sub
iret
pop
pop
ss
inc
push
divl
add
lsl
call
movsl
cwtl
jae
in
adc
jbe
push
add
add
or
fadds
fs
popf
pushf
adc
xchg
dec
jbe
mov
xlat
call
inc
or
jno
adc
push
inc
sub
mov
daa
lock
in
into
gs
testl
xor
xlat
and
subl
sahf
jmp
inc
lds
dec
outsl
data16
out
sbb
jmp
rcr
push
pushf
pushf
mov
sbb
cltd
xchg
mov
or
lods
sbb
insl
rcrb
int
and
cmp
jmp
jle
pusha
enter
imul
and
cmp
in
mov
adc
je
jg
sbb
in
or
push
scas
jg
nop
arpl
aas
cmp
add
stos
ljmp
rorl
test
push
std
sub
or
cmpsl
scas
cmpsb
nop
add
jne
and
lods
lea
mov
lret
popf
xor
mov
adc
mov
bound
call
cmpsl
push
jecxz
adc
pop
mov
ret
adc
lahf
dec
mov
mov
outsb
xchg
cmpsl
out
imull
mov
adc
add
xor
and
test
sub
sub
pusha
mov
leave
dec
outsl
pop
out
push
icebp
xchg
push
rcll
iret
rcr
jns
es
test
mov
mov
scas
mov
addr16
jg
adc
loopne
push
jno
fbld
mov
cmp
dec
jae
shlb
xor
daa
fcoml
lock
in
pushf
push
hlt
mov
and
mov
rorl
andb
xchg
std
int
and
sbb
fisubrs
test
addr16
stos
ret
lret
dec
cld
inc
pop
adc
insb
shll
inc
data16
inc
xchg
test
pop
sbb
mov
push
xchg
imul
iret
inc
bound
pop
repz
imul
jge
fdiv
inc
sti
das
inc
mov
lea
lods
mov
sub
fwait
test
or
mov
popf
test
sub
push
sbb
lahf
jno
jp
dec
lret
xchg
xchg
es
insl
and
mov
in
mov
jp
test
push
jecxz
xor
mov
and
inc
pop
vpcmpeqd
into
daa
pop
iret
jecxz
in
add
cltd
mov
dec
jnp
rcr
jae
sti
hlt
dec
andb
aad
pop
jb
inc
mov
xor
xor
mov
repz
xchg
imul
out
lahf
xchg
or
xchg
jbe
out
addr16
dec
fiaddl
aam
adc
fld
lods
repnz
cmp
in
fnstcw
ret
cmp
stos
mov
add
xor
mov
stos
mov
popa
adc
and
cmpsl
movsl
into
arpl
mov
cmpsl
mov
iret
ficompl
fcomps
jae
outsl
inc
sub
push
lcall
mov
jae
js
mov
sub
ret
fmul
notb
scas
jg
jmp
and
fisubl
jnp
mulb
fucom
add
add
jno
xor
or
push
fadds
loope
add
push
stos
mov
stos
xorb
adc
div
and
push
scas
mov
dec
cwtl
popf
push
stc
stc
shll
insb
ds
or
cmp
mov
xlat
jae
jo
xchg
push
std
mov
add
ja
fstp
mov
cmpb
daa
pandn
fcoms
mov
sbb
xchg
mov
push
shlb
data16
adc
add
xor
dec
stos
pop
push
stos
js
and
je
cli
rolb
dec
mov
pop
loope
mov
stos
lods
mov
adc
shrl
scas
mov
add
out
lcall
sbb
xchg
cs
negb
xor
mov
and
push
rcrb
mov
gs
sbb
adc
cmp
mov
cmc
lock
push
fisttps
out
sub
std
push
sbb
sub
gs
cmp
xlat
and
loop
xchg
sub
ret
jg
jnp,pn
iret
in
in
push
pop
push
jecxz
movsb
gs
inc
stos
bnd
and
sub
lods
imul
push
inc
pop
inc
push
xor
cltd
loope
xchg
test
outsb
inc
mov
pushf
push
push
pop
aaa
in
inc
xchg
mov
add
loopne
push
leave
stos
add
fists
mov
daa
loopne
pop
or
jns
xchg
dec
in
push
lds
pop
xchg
xor
cwtl
rclb
push
adc
push
dec
inc
push
or
ss
jbe
inc
hlt
sub
mov
add
loope
cmpsl
ljmp
loopne
pop
push
iret
bound
imul
fnstsw
and
lea
int3
ret
sbb
xor
into
push
lods
sbb
mov
mov
shll
movsl
sbb
aad
xchg
xor
loopne
fs
into
ret
sbb
in
clc
outsb
xor
insl
or
add
push
hlt
cmp
or
enter
jno
rol
pop
imul
sbb
add
and
xchg
insl
push
ja
clc
mov
loopne
mov
pop
sub
test
ds
ljmp
add
jge
push
mov
dec
cltd
std
scas
mov
mov
sbb
add
sub
cmp
push
sbb
lea
cmp
ret
xor
or
sbb
mov
test
inc
in
incb
scas
pop
jl
sub
cmpl
xchg
jmp
sbb
in
jg
aad
lahf
and
pop
push
xchg
cmp
mov
fstps
leave
and
hlt
daa
lahf
notl
rcr
fmull
push
push
jmp
or
sti
fadds
jnp
xchg
pop
cmpl
addr16
sub
xor
adc
mov
mov
dec
cmc
ret
add
dec
lock
pusha
movsl
push
shlb
add
inc
xchg
stos
test
sbb
leave
pop
lcall
mov
add
pop
aaa
fimuls
bound
into
aas
cs
xor
gs
cmp
jmp
fistps
test
test
pop
ret
push
pop
test
xchg
ljmp
xor
sbb
nop
jl
cld
cmp
outsb
and
push
mov
mov
ss
mov
and
test
mov
inc
add
cmp
dec
popf
lds
lahf
sarb
loop
xor
lcall
cmpsl
jo
lcall
popa
movsl
sbb
mov
bound
ds
push
push
dec
sub
inc
aam
test
pop
addr16
jbe
pop
mov
out
loop
xchg
mov
lret
mov
mov
aaa
lcall
jns
ret
xchg
jmp
pop
in
icebp
jle
cli
push
mov
dec
rolb
inc
mov
or
mov
cltd
aaa
jno
out
push
mov
and
or
imul
fisttps
call
and
dec
stc
xchg
das
leave
or
in
and
push
push
int
insb
stc
push
sub
mov
pop
xchg
or
xor
xchg
fdivrs
inc
mov
push
jl
xchg
lock
aad
push
adc
lds
aad
fnstcw
push
adc
xchg
orl
movsl
in
fistpll
cld
jns
cwtl
jns
xchg
cmp
shll
es
cmp
fcomip
and
sub
stc
arpl
mov
aad
loope
inc
mov
mov
out
mov
jbe
out
xchg
pusha
in
call
stos
repz
ds
shll
in
push
scas
adc
int3
lret
lea
xchg
xchg
and
movsb
lods
push
pop
cmc
repz
or
xchg
pushf
or
fs
push
rorl
xor
lahf
cmp
test
movsb
or
add
add
pop
loopne
cmp
aam
scas
mov
push
mov
jae
je
sbb
and
jecxz
shrb
mov
repnz
imul
scas
insl
clc
mov
mov
mov
insb
jmp
jno
imul
test
rcll
and
cmpsb
or
jo
jge
pop
gs
mov
push
lods
loopne
mov
pop
aad
mov
inc
sti
clc
sub
movsl
sbb
push
mov
arpl
aas
insb
jmp
pop
push
les
jno
das
pop
or
push
es
jp
sub
pop
movsb
inc
cmpb
xchg
jae
jne
out
mov
adc
rorl
sub
mov
add
cmp
xor
xor
repnz
jo
mov
inc
cwtl
loope
into
and
mov
fildll
lods
aas
loop
jmp
add
dec
repz
and
sbb
fldt
pop
mov
mov
jl
aad
js
cmpsb
int3
repz
insb
rcrl
xor
mov
outsb
sysexit
xchg
pop
sub
iret
std
andb
lods
cmc
aas
roll
loop
push
stos
andl
or
inc
mov
or
enter
jl
outsb
push
lods
mov
data16
push
mov
shl
mov
mov
lods
shrb
cltd
orb
sub
fs
mov
testb
sbb
std
test
inc
cmp
adc
imul
dec
std
mov
test
mov
loop
int3
and
jb
mov
sub
cmp
divb
mov
jp
shll
adc
add
sbb
add
jl
sub
test
adc
mov
sub
lock
dec
icebp
shlb
push
ja
aad
push
and
mov
jp
cmp
xchg
lods
xchg
imul
fxch
or
dec
mov
or
inc
or
lea
xchg
rclb
mov
jle
rcll
bound
push
dec
mov
das
and
adc
outsl
xchg
add
rcl
es
mov
insb
cmpsb
and
push
repnz
adc
lcall
lcall
mov
and
icebp
xor
xchg
movsl
push
mov
push
int3
lea
int3
aaa
inc
xchg
shll
mov
push
lock
mov
outsb
sub
push
cs
sahf
test
std
and
fmull
pop
pusha
xchg
andl
push
shll
mov
mov
push
push
gs
sti
lods
andl
cld
lea
xchg
mov
jge
loop
hlt
or
std
mov
mov
fsubs
mov
div
jbe
xchg
mov
push
push
and
dec
test
xchg
iret
sahf
pop
addb
jge
out
sti
arpl
orl
sti
aaa
popf
adc
bndstx
lahf
cs
sbb
inc
add
sbb
mov
enter
sbb
pop
xor
adc
add
das
adc
sub
inc
xchg
es
js
push
ss
in
stos
popf
aas
lcall
iret
jg
push
adc
pop
ja
inc
fwait
xor
sahf
cmp
out
push
jg
rcrb
inc
jecxz
or
popa
hlt
inc
out
jo
jecxz
pop
imul
out
cmp
push
jecxz
lods
cmp
lret
fisttps
lcall
jle
mov
add
cmc
add
cmp
xchg
jp
xchg
inc
punpckhbw
lock
ret
xor
call
test
dec
aas
push
mov
sub
lret
mov
in
fdivs
enter
rolb
icebp
pop
out
push
dec
mov
mov
call
out
mov
xor
leave
fimuls
lods
test
add
push
jl
arpl
stos
adc
sub
ficoms
andl
jle
loope
call
repnz
jle
cli
loop
repz
push
rorl
insb
sbb
movq
subb
push
shll
sahf
sbb
pop
xchg
clc
sbb
jno
push
push
inc
xor
inc
jns
and
cmovle
int3
lret
clc
inc
lods
or
fiadds
les
fs
xchg
je
mull
and
negb
loop
test
movsl
jno
fsubrl
scas
xchg
repz
jp
ret
add
xchg
jl
jle
std
ss
inc
test
xchg
push
sbb
sarb
mov
orl
out
sub
rcrl
dec
push
in
mov
inc
push
or
push
imul
xchg
popa
pushl
in
imul
add
mov
adc
jmp
cld
dec
mov
push
dec
shlb
jl
xor
or
mov
ja
cmp
or
or
jl
or
ficoms
pop
stos
pusha
cmpsl
test
mov
xor
divl
xchg
loope
sub
mov
xchg
inc
leave
shll
popa
cmp
jg,pn
sbb
iret
mov
push
cltd
sub
psubq
and
pop
sbb
jne
add
adc
stos
imul
sub
cli
flds
les
xchg
and
add
mov
fs
popa
mov
cmpsb
out
popa
mov
fidivl
jge
xchg
dec
ljmp
shlb
xlat
decb
ficompl
dec
xor
and
add
jl
test
and
cmp
mov
mov
cmp
mov
mov
pop
push
subl
cli
mov
negb
cmp
es
movsb
xor
dec
ss
lahf
xchg
aaa
sbb
arpl
adc
cmp
rclb
jmp
and
jno
sbb
push
jb
lret
inc
mov
dec
insb
push
ss
jnp
jl
repnz
ret
mov
xchg
stc
sub
sbb
xchg
inc
cmp
ja
loope
mov
dec
imul
pushf
ret
adc
jbe
aaa
fdiv
cmp
cmp
fisttpl
or
adc
pop
test
cmpsl
out
cmp
dec
mov
xchg
jmp
adc
dec
or
arpl
repnz
xchg
mov
in
cmp
loope
ss
pop
int3
adc
cmp
in
aaa
xor
mov
mov
push
dec
cltd
mov
xor
loopne
rcrl
add
cmp
repz
adc
ret
jg
cmp
pop
mov
inc
mov
cmp
cmp
imul
clc
sbb
in
shr
aaa
push
repz
repnz
hlt
dec
cmpsb
pop
push
jecxz
int
lods
fwait
or
xor
cmp
inc
push
mov
ret
js
push
sub
leave
pop
pop
imul
rcrl
loop
cmp
loope
add
insb
cmp
push
adc
jne
lcall
mov
popa
mov
dec
xor
or
lock
pop
cmpsl
pop
fs
loopne
sbb
arpl
ss
ljmp
in
pop
sub
pop
cs
mov
loope
or
dec
mov
popl
ret
or
push
jns
xchg
jbe
mov
xor
sub
xor
mov
xor
aaa
enter
popf
pop
mov
mov
and
adc
and
add
shll
adc
pop
test
aaa
popa
cmpsb
fs
xor
jp
movsl
divl
xor
or
lock
xchg
and
shll
lods
dec
mov
test
nop
roll
and
or
scas
sarl
jb
scas
or
lcall
lret
inc
lret
xor
push
xchg
call
sbb
test
rclb
add
out
movsw
stc
scas
ss
das
int
aad
push
mov
fimuls
cltd
loopne
cmpsb
sub
imul
cmc
xchg
mov
xor
cmp
mov
loopne
mov
and
dec
insb
lcall
testb
int
sub
lcall
inc
pop
jne
pop
xchg
add
out
mov
stos
xor
pop
loope
insb
repz
cmpsb
in
in
mov
insl
mov
rcrb
xchg
movsbl
mov
push
dec
and
sarl
mov
mov
sub
mov
mov
cmp
scas
out
fisttpl
xchg
mov
or
adc
scas
and
push
adc
adc
xor
in
test
pop
xchg
pop
pop
jle
cmc
lods
push
sbb
mov
sbb
out
subb
inc
mov
divps
out
push
xchg
sbb
jb
mov
adc
nop
dec
sbbb
out
xchg
jae
daa
dec
xchg
das
cmp
mov
push
pop
jb
sub
ds
sti
xor
mov
fs
and
insb
dec
xchg
subl
in
and
jmp
mov
push
dec
adc
mov
xlat
push
enter
cmp
jmp
xor
adc
fisttpl
push
incl
enter
jecxz
movsb
scas
test
sarb
into
imul
enter
fstpt
xchg
or
fs
leave
insl
mov
inc
outsb
adc
inc
pop
sub
adc
int
xchg
adc
mov
ljmp
push
add
inc
ja
inc
insb
inc
faddl
adc
sbb
mov
popa
push
jo
xor
fmuls
or
xchg
lret
iret
mov
mov
shll
dec
dec
mov
jle
jecxz
sarl
sti
sti
cld
mov
cmpsl
xor
xor
dec
sub
cwtl
nop
rcl
daa
and
push
cmpsb
xor
xchg
addr16
sbb
sbb
int3
pusha
mov
push
fadds
xor
gs
add
movsl
adc
mov
and
frstor
js
cmp
movsl
test
ljmp
push
mov
mov
movsb
push
push
fbstp
rclb
insl
ficompl
xlat
push
dec
out
icebp
loop
cmc
in
and
inc
shll
cli
aas
inc
jb
ficomps
xchg
pushf
enter
movsl
lahf
sbb
pushf
jl
shll
sti
outsb
adc
jno
jno
das
rol
pop
sub
insb
push
xor
mov
call
adc
add
loop
and
mov
stos
and
sub
add
popa
lcall
and
jo
std
pop
jo
cwtl
jb
or
in
adc
push
inc
jae
mov
mov
add
shll
cmp
das
outsb
mov
out
inc
jbe
bound
inc
movsb
aam
adc
adc
mov
add
sahf
cld
fnstenv
fsub
mov
adc
jg
pop
push
js
lret
das
xor
mov
rcrl
adc
add
cmpsb
push
push
inc
repz
sbb
jne
xor
mov
outsl
mov
icebp
jnp
mov
inc
aas
adc
push
dec
sub
repz
push
sub
and
aad
sbb
adc
push
fst
out
or
repz
jb
jne
push
jns
jo
push
inc
adc
jmp
iret
jge
mov
je
subl
jns
or
push
mov
bound
adc
pop
cmpl
mov
leave
shll
push
je
xor
jae
popa
or
popa
addr16
stos
mov
popa
loopne
test
jae
jbe
inc
mov
in
sbb
loop
lea
movsl
cld
mov
dec
in
lods
cmp
lods
xchg
add
int
fldl
lds
cmp
mov
aaa
mov
rorb
out
mov
add
mov
mov
mov
pop
loop
jbe
into
in
popf
cmp
add
loope
pop
imul
add
fistl
jmp
divl
rcl
inc
pop
stos
aad
stos
test
jns
ds
divb
ret
sub
xor
dec
clc
sub
or
hlt
insb
lds
out
xchg
pop
arpl
popa
or
dec
ds
in
dec
out
hlt
sbb
or
test
fdivl
push
mov
sub
cmp
inc
sub
push
mov
pop
out
int
mov
xor
fistpl
add
pop
std
pop
jg
or
fdivs
inc
mov
jmp
jp
sub
in
dec
mov
aam
push
jne
dec
aam
mov
xchg
int3
dec
les
pop
lret
inc
pop
movq
scas
or
cmp
ret
and
pop
xchg
cwtl
lods
push
and
fsubrs
push
cmp
lcall
xchg
addl
mov
movsl
arpl
push
fstl
outsl
testb
out
sahf
fs
mov
arpl
js
xor
mov
std
xlat
ljmp
loopne
sub
daa
dec
cmp
or
jg
mov
nop
addr16
jp
jno
jg
out
and
out
adc
pusha
hlt
sahf
xchg
add
mov
or
cli
mov
int3
fxch
xchg
icebp
dec
mov
cld
lods
movsb
pop
cmovge
push
aaa
jle
insb
fisttpl
mov
inc
cmpb
mov
enter
outsl
jne
sub
sub
orb
cli
stos
cmp
xor
out
stos
clc
or
fiaddl
fstpt
pop
jo
push
lret
pop
mov
jns
jl
lds
adc
fadd
fwait
sub
push
dec
ficompl
inc
mov
mov
faddp
ficoml
and
es
inc
or
push
mov
femms
jge
loopne
fistps
mov
mov
xlat
cmp
orl
mov
out
jle
push
xor
shl
dec
enter
pop
in
jmp
xchg
mov
dec
ja
lahf
mov
in
cmp
add
pushf
push
rcrb
and
pop
popa
sub
mov
test
push
scas
or
sbb
xor
pop
loope
pop
cmp
mov
adc
mov
test
icebp
adc
cmp
adc
sbb
pop
aaa
dec
lods
popa
sub
jp
jns
rcrl
and
mov
cmp
movsb
jae
clc
or
sbb
or
dec
nop
ja
or
or
dec
or
repz
xor
jae
jg
mov
xor
int3
cmp
pop
cmp
in
mov
adc
dec
sub
arpl
and
dec
cmpsb
dec
ds
pop
xchg
lock
jge
jb
clc
mov
lea
hlt
cli
movsb
adc
cmp
cwtl
stos
mov
pop
xchg
mov
outsb
movb
jle
in
inc
dec
xor
mov
scas
pop
sbb
sbb
xchg
xlat
pop
mov
lods
inc
pushf
jno
ja
and
push
jmp
add
popf
sub
sub
add
notl
sub
push
imul
lret
test
mov
daa
and
jecxz
mov
aam
jnp
add
outsb
add
daa
das
mov
fstpl
or
ja
nop
mov
testb
jne
sti
sub
and
mov
pop
imul
ds
xor
jb
dec
cmpl
sub
in
aaa
xchg
or
dec
or
add
outsl
mov
out
popf
cltd
pop
outsl
fistpll
adc
jecxz
les
test
pop
into
out
ja
cmp
dec
jmp
pop
sub
and
insb
test
and
adc
cmc
adc
popa
loop
leave
sti
dec
xor
scas
test
adc
dec
xchg
inc
icebp
push
insl
ret
lret
xchg
sub
inc
xor
into
jnp
test
scas
adc
shrl
dec
out
sub
lods
or
push
cli
push
scas
shll
pop
fsubl
aaa
add
inc
call
xlat
cmpsl
sarl
lret
addr16
mov
add
aaa
aam
push
addr16
sub
out
ret
lcall
mov
aas
sarb
jle
adc
stc
push
testb
fsubrs
push
fidivs
loope
add
cmpb
dec
mov
aaa
push
pushf
repz
jp
cltd
lret
cli
enter
fs
sti
lock
lods
arpl
test
dec
cmc
mov
dec
or
dec
addr16
shr
xlat
aaa
lret
push
movsl
es
mov
pop
add
out
popf
loope
loop
adc
movsb
add
jnp
and
xchg
fwait
repz
push
in
pop
iret
sbb
sbbb
and
or
push
mov
and
xor
dec
push
imul
test
sbb
sub
nop
push
xchg
and
dec
ja
mov
fs
iret
addr16
mov
fistps
dec
xchg
ret
shlb
push
cld
pop
dec
out
std
push
xor
xchg
scas
ret
or
lea
lods
ljmp
dec
insl
jg
cmp
loopne
loope
inc
and
imul
lahf
mov
ficoms
leave
pusha
flds
test
ja
and
push
push
call
add
ss
call
in
sahf
negl
push
andl
movsl
loop
lcall
pop
scas
aad
jg
push
out
ficomps
mov
sub
push
sub
pop
in
dec
sahf
push
fidivrl
inc
or
pop
push
je
les
sub
in
test
bound
sub
arpl
pop
ret
sarl
fwait
jg
jl
pushw
hlt
xchg
push
mov
gs
sti
imul
fldcw
ja
push
adc
or
insb
cs
or
dec
push
jno
cli
mov
out
inc
jb
mov
lock
cs
and
lcall
sub
je
sbb
rol
xor
mov
inc
and
push
mov
and
cmc
movsb
nop
imul
sub
add
or
lahf
push
fidivl
dec
cmpsl
aaa
push
pop
sti
imul
outsl
pop
sti
js
adc
divl
test
cld
and
push
lock
rcl
and
xor
jb
hlt
add
pushf
ret
inc
adc
and
sub
jbe
mov
in
jno
cmc
ror
push
cltd
fs
pushf
sub
les
and
push
jne
jns
mov
out
mov
fcompl
xor
pop
xlat
push
mov
movsl
iret
sbb
cmpsb
js
xor
inc
loop
mov
mov
sbb
xor
shlb
roll
jmp
push
or
pop
push
push
in
outsb
jbe
ss
cmpsl
adc
subb
sub
jnp
push
push
adc
add
test
mov
ja
bound
lea
or
xor
icebp
pop
popf
add
pop
repnz
repz
fldenv
bound
lea
test
cmpb
stc
fnsave
cmp
jo
in
sbb
notl
les
add
aas
nop
aas
repz
int
fcomp
clc
insb
jecxz
in
and
lcall
out
scas
sbb
sub
pop
inc
jnp
sti
jno
adc
fs
outsb
xchg
insb
or
mov
jbe
jns
adc
mov
les
add
xor
daa
in
sbb
movsl
nop
stc
jmp
or
xor
xor
scas
andl
scas
xchg
push
sub
arpl
mov
or
ret
cmp
lret
inc
and
out
mov
or
enter
mov
into
add
lea
push
cltd
test
movq
fisubrl
and
mov
xor
pop
cld
and
mov
mov
aaa
xchg
pop
mov
icebp
lods
subl
in
out
sbb
outsb
repnz
mov
cmpsl
inc
xor
mov
lods
xchg
cmp
insb
pop
popa
pop
inc
add
into
xor
iret
test
sub
xchg
popf
cmp
pop
mov
mov
in
push
mov
jae
rcr
jp
enter
hlt
cmpsb
testb
clc
movsb
imul
jge
sub
out
xor
push
pop
test
pop
cltd
push
mov
add
sbb
rcrl
jo
cli
mov
into
xchg
jle
aam
sbb
stos
pop
pop
test
es
push
xchg
imul
aad
ret
and
sbb
mov
sub
jg
xchg
push
pop
cmp
les
mov
lock
andb
jne
push
int
or
dec
adc
in
add
ljmp
ret
cmpsl
xchg
xchg
mov
sub
mov
rcrl
push
jecxz
lret
mov
mov
cmc
xor
push
sub
push
mov
lods
popf
jecxz
mov
scas
mov
jmp
and
cmp
cmp
pop
add
movsl
outsb
sub
shll
das
out
test
loope
xchg
inc
loopne
sub
inc
mov
jecxz
fsub
cltd
mov
push
loope
out
popa
fdivrl
shr
repnz
rorb
loop
xor
cltd
add
xor
les
xor
fdivs
dec
hlt
mov
xlat
addl
jecxz
sub
roll
add
mov
int
push
negb
fildll
notb
pop
hlt
cmp
cmp
push
cli
lcall
xor
das
daa
sub
js
jge
pop
push
ret
push
lahf
add
xchg
jle
jnp
mov
aaa
dec
and
pop
aaa
stc
jge
std
je
data16
test
mov
imul
scas
pop
pop
pusha
xchg
out
xchg
add
insb
movsb
jae
xchg
femms
fisttpll
jl
or
mov
mov
push
test
dec
loope
fstpl
push
jnp
xchg
mov
inc
or
mov
test
adc
jne
ljmp
stos
je
mov
pusha
push
movsb
jo
out
js
js
into
arpl
imul
jns
dec
or
mov
aam
xchg
cmp
sub
mov
xchg
push
stos
mov
fistps
jg
and
frstpm(287
sar
push
ficompl
sbb
mov
mov
out
xor
xchg
xchg
adc
xor
popa
xchg
subb
pop
lea
jno
lret
aaa
adc
sbb
add
test
jnp
lahf
loop
cld
dec
sbb
mov
jmp
jg
je
push
lods
ljmp
push
dec
jo
dec
ret
push
loop
sbb
ret
lret
dec
add
pop
sub
ror
mov
ss
jo,pt
push
sbb
and
repnz
cld
jb
dec
outsb
xor
das
adc
mov
outsl
mov
stc
dec
mov
pop
movl
mov
js
jbe
mov
cli
icebp
add
inc
cld
cmpw
mov
test
sbbb
jg
jmp
xor
and
cmp
inc
lret
stc
pop
std
dec
cli
jno
and
ja
sahf
inc
daa
adcl
cmp
push
and
aam
in
mov
jle
sub
add
sti
lods
subl
scas
sbb
cwtl
mov
dec
aad
addr16
jp
adc
test
movsb
or
xchg
mov
js
leave
decb
addr16
das
sahf
xchg
je
cs
adc
aas
popf
andl
sub
in
rcr
mov
imul
xchg
stc
sbb
pushf
ret
sub
push
stos
gs
nop
andl
or
arpl
adc
stc
or
ret
fidivs
pop
int3
or
aas
fbld
sbb
lods
mov
mov
push
xor
mov
mov
mov
mov
and
cmc
repnz
test
imul
cmp
xor
std
adc
lods
xlat
outsb
loope
rclb
in
icebp
dec
pop
cmp
mov
movsl
add
pop
inc
lret
sahf
aam
or
stc
aam
mov
push
jae
loop
mov
xchg
clc
mov
mov
jb
fisubs
inc
inc
jnp
push
out
xchg
mov
lret
inc
leave
mov
in
sub
push
xor
dec
jo
inc
xchg
jb
push
and
pop
out
adc
lret
testl
aad
imul
lods
and
mov
jmp
pushf
popf
push
test
xor
or
push
mov
jmp
sub
and
mov
fnstsw
jbe
dec
sub
jp
aaa
and
xchg
cmpsl
scas
rcrb
int
xor
notb
test
mov
das
dec
popa
xlat
and
push
cmp
mov
stos
in
pop
mov
and
gs
xchg
xchg
pushf
std
out
ja
icebp
mov
lea
popf
dec
jp
xadd
aas
inc
jge
sarl
jnp
out
dec
dec
sub
ss
fdivrs
cmp
inc
sub
xchg
push
test
or
mov
jne
sti
pushf
lea
fidivs
loopne
cld
xchg
mov
mov
imul
gs
push
mov
pop
mov
movl
subl
pop
dec
sub
adc
mov
ljmp
mov
popa
jae
ret
mov
iret
out
mov
jle
cwtl
cmovle
adc
lea
add
repnz
xchg
loope
fildl
testb
pop
sahf
xchg
jae
out
test
mov
gs
and
cmpb
fwait
jns
test
mov
mov
push
rorl
jno
push
fists
ljmp
mov
fldl
jb
sbb
daa
cmp
jl
aaa
lret
xor
pop
jns
aam
nop
popf
ss
cmpsl
lea
subl
adc
sbb
movsl
loope
dec
or
push
push
js
data16
int
mov
ret
aas
aad
sbb
test
mov
inc
vmulps
in
add
data16
mov
insl
fs
sbb
lock
xchg
sahf
and
cmp
imul
or
and
push
pop
add
and
test
jle
inc
stc
movsb
mov
add
inc
das
aad
sbb
pop
rolb
iret
out
mov
movsb
jle
mov
imul
adc
mov
rcll
jmp
xchg
xor
lret
loopne
adc
mov
sub
bnd
rorl
mov
push
dec
push
jp
and
cmp
popa
jle
adc
fsts
fiaddl
lea
stc
int
and
addr16
in
push
js
jmp
sahf
jae
lcall
dec
mov
mov
or
cltd
insl
or
pop
fcompl
aaa
int3
insl
pop
jg
cld
jb
push
fdivrl
out
inc
ret
xor
sahf
idivl
adc
lret
xor
cld
rcrb
fmull
adcb
ja
in
fisttpl
add
xchg
sbb
repnz
popf
out
and
push
mov
pop
scas
jb
cmp
or
or
movsl
bound
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
bswap
mov
sub
push
and
mov
pop
push
pushf
hlt
adc
or
inc
icebp
mov
clc
outsb
cld
icebp
jmp
pop
pusha
xchg
pop
xchg
mov
xor
cmp
stc
mov
movsb
pop
imul
into
test
xor
out
mov
imul
xchg
shll
xchg
xchg
pop
test
push
push
cs
or
popa
aas
sbb
xchg
fistpl
lea
pop
xchg
inc
lods
jno
cmc
pop
fsubrp
repnz
and
jp
das
ret
add
insl
mov
fimuls
push
and
cmp
add
sub
cmpsb
mov
mov
or
jb
repnz
inc
aam
adc
sub
fildl
push
mov
sahf
aad
mov
push
insl
and
mov
test
into
inc
adc
mov
sarl
cwtl
adc
in
repnz
adc
and
and
enter
add
sti
sub
cld
add
cmp
push
aaa
sahf
lods
jo
inc
fistpl
or
leave
mov
mov
test
mov
lods
sub
push
movsw
xchg
test
or
fildl
sub
sbb
xchg
rcrb
je
adc
fwait
and
repnz
pusha
rcr
sbb
lods
pop
sbb
mov
push
sbb
push
cltd
rcr
andl
adc
jnp
xor
insl
mov
iret
insl
sub
xchg
sbb
in
rorl
int3
movsl
push
pop
mov
dec
and
ds
push
or
insl
xchg
sbb
sbb
inc
mov
lea
nop
xor
mull
pop
and
dec
pop
pop
punpckhwd
cmp
mov
jg
jle
mov
jae
cmp
insl
ret
fisubl
sbb
mov
push
inc
test
jbe
fildl
xchg
out
gs
sbb
xor
xchg
lret
lods
fs
daa
sub
lods
lcall
mov
dec
pushf
adc
and
mov
mov
iret
mov
pop
ret
sub
jecxz
push
in
into
mov
xchg
add
inc
sub
xlat
sub
inc
aad
out
inc
rorb
jbe,pt
sub
into
lds
xor
cmp
push
xchg
xchg
nop
adcl
bound
sbb
das
xor
sub
aam
lcall
cmp
add
popa
ret
mov
sbb
or
adc
into
jmp
lret
xchg
int
cmp
mov
xchg
arpl
into
dec
xchg
repz
movsl
mov
jp
lea
rcrl
loopne
mov
and
popa
sarl
mov
cmp
aad
arpl
bound
jae
mov
mov
mov
pop
xchg
jns
out
rorb
push
adc
fiaddl
xchg
scas
jo
push
movsl
incl
inc
mov
fiadds
pop
pop
pop
mov
mov
pop
inc
bound
loopne
bound
jp
mov
dec
test
imul
repz
mulb
sbb
inc
fwait
jbe
inc
outsl
sahf
push
jnp
dec
xorl
adc
aad
addr16
scas
sbb
mov
sbb
xchg
ds
or
cmove
movsb
jle
scas
mov
mov
adc
fsubs
icebp
loope
push
dec
sahf
test
es
cli
inc
test
jp
loope
sub
sub
stos
add
les
imul
lcall
cltd
pop
enter
sti
test
into
jle
or
xchg
in
adc
jbe
add
push
xor
out
je
ret
setg
insb
pop
fisubl
arpl
pop
xchg
je
call
mov
imul
or
jl
sub
lea
sbb
mov
xor
movsb
mov
ljmp
cmp
adc
int3
mov
inc
movsl
popa
lret
cli
pop
cmp
lahf
sbbb
push
bnd
sbb
into
mov
je
int3
mov
std
sbb
dec
xor
xchg
repnz
and
in
stc
stos
sbb
or
test
out
lock
addr16
loop
daa
mov
ffree
jne
cmp
cmp
fcomps
inc
jae
pop
push
xor
imul
jnp,pt
lahf
mov
mov
jae
not
sbb
jmp
clc
loope
push
insb
hlt
adc
and
fimull
icebp
hlt
fldl
push
mov
icebp
test
or
nop
and
outsl
imul
pushf
xchg
dec
mov
mov
test
jmp
and
lret
xchg
shlb
cmp
popa
cmc
or
push
or
xor
imul
leave
aam
movsl
ds
xor
cltd
je
idivl
jl
mov
test
aaa
out
mov
lret
out
loop
or
jbe
jbe
insl
rolb
inc
test
shlb
add
lods
addr16
xorps
in
movsb
sub
xor
lcall
bound
cmpsl
shl
lret
jecxz
add
xor
mov
rcrl
aad
inc
jae,pn
xor
andb
lea
cmpsb
mov
dec
mov
mov
sub
jge
adc
pop
sbb
xor
subl
sarl
mov
and
or
insl
add
cmp
mov
jne
fstl
aas
mov
mov
xchg
sti
push
inc
popf
jl
int3
mov
mov
int
hlt
mov
pop
movsbl
pop
inc
out
inc
out
mov
cmc
and
fstp
out
mov
xchg
imul
popf
cmp
repnz
orb
jb
dec
jecxz
sbb
xor
cmpsl
and
sti
xlat
cmp
pop
xor
sbb
pushf
lock
pop
fmulp
xchg
xor
pushf
jmp
setae
lcall
repnz
es
push
mov
push
pushf
imul
lds
or
roll
xchg
mov
xor
and
loop
cmpsb
push
addb
push
xchg
push
mov
dec
mov
sti
push
loope
xchg
ret
imul
push
pop
iret
mov
nop
mov
jle
jns
flds
xchg
and
mov
shlb
das
sub
pop
lcall
mov
nop
lret
jl
pushf
or
lahf
pop
cmpsl
stos
mov
jnp
lock
cs
xorb
lds
xchg
ret
or
fisubs
cmp
jae
xor
cmp
fs
daa
js
popa
stos
lea
jecxz
pop
pop
in
jne
or
sbb
inc
aas
in
psubsw
xor
mov
test
negl
cmpsb
into
popf
cmc
and
aam
cmp
cld
scas
sysret
shll
jbe
or
cmpsb
mov
mov
or
cmp
outsl
lret
sbb
pusha
mov
lea
push
mov
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
mov
mov
mov
repnz
jne
mov
xchg
rol
xchg
sub
add
stos
jmp
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
