and
sub
sub
mov
push
call
add
test
je
fldl
mov
call
fldl
mov
call
push
lea
push
mov
mov
call
mov
test
je
mov
call
mov
test
mov
jne
mov
test
je
cmpb
je
mov
push
call
add
test
jne
fldl
mov
mov
fchs
fldl
sub
fchs
fstpl
fstpl
push
call
add
push
call
add
test
je
mov
push
mov
call
test
je
addl
mov
test
mov
jne
mov
pop
pop
pop
mov
pop
ret
xor
jmp
push
mov
lea
mov
or
lock
dec
je
pop
ret
mov
movl
call
push
call
pop
xor
jmp
push
mov
sub
push
push
xor
push
lea
movl
mov
call
mov
lea
push
push
call
test
mov
js
mov
mov
lea
push
lea
lea
mov
mov
mov
movl
mov
mov
call
test
jne
push
lea
call
lea
push
call
test
pop
mov
jne
mov
pushl
mov
call
mov
mov
push
push
pushl
pushl
pushl
push
pushl
call
test
mov
jne
mov
pushl
mov
push
call
mov
mov
mov
cmp
mov
je
mov
push
call
mov
lea
call
lea
call
lea
call
mov
pop
pop
leave
ret
push
mov
push
push
push
lea
call
mov
test
mov
je
pushl
andl
mov
lea
call
testb
mov
je
pushl
mov
push
pushl
push
call
lea
call
lea
call
pop
leave
ret
push
mov
push
mov
cmpl
jne
cmp
mov
jl
cmp
jg
pushl
lea
push
call
mov
test
pop
pop
mov
je
pop
pop
ret
call
jmp
andl
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
testb
push
jne
movzwl
movzwl
push
add
lea
lea
push
push
call
mov
add
test
je
mov
movl
mov
push
push
lea
push
call
add
movw
mov
mov
pop
pop
pop
pop
ret
mov
sub
je
push
call
mov
add
mov
pop
pop
ret
push
mov
and
push
push
push
push
mov
mov
and
or
jne
xor
push
mov
call
test
jne
mov
push
mov
call
inc
test
jne
pop
pop
xor
pop
mov
pop
ret
mov
pushl
pushl
pushl
push
call
mov
add
test
je
jmp
mov
mov
call
cmp
je
mov
call
mov
mov
mov
push
push
call
mov
push
call
mov
pop
xor
test
setne
push
push
push
pushl
push
call
jmp
push
push
mov
mov
test
push
push
jne
mov
test
jne
pop
pop
pop
pop
ret
pushl
call
mov
lea
movsl
movsl
movsl
jmp
mov
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
push
push
mov
xor
testb
mov
push
mov
movl
mov
mov
jne
lea
push
call
mov
mov
mov
lea
mov
mov
lea
mov
mov
test
je
cmp
je
add
jmp
cmp
mov
je
lea
mov
test
je
mov
mov
mov
cmp
je
mov
add
test
jne
add
cmp
jne
mov
mov
mov
sub
cmp
movl
movl
movl
jb
movl
cmp
je
sub
push
push
push
call
add
test
je
push
push
push
call
add
test
je
mov
cmpl
jne
movl
testb
jne
cmpl
jne
push
mov
mov
call
mov
or
mov
call
test
je
mov
add
cmp
je
mov
mov
sub
cmp
jbe
add
cmp
jne
mov
cmpl
jne
cmpl
jne
mov
adc
inc
add
jl
sbb
jne
cmpl
jne
mov
cmp
jne
mov
add
mov
mov
mov
mov
test
je
lea
push
call
add
test
jne
push
call
add
pop
pop
pop
pop
add
ret
lea
push
mov
lea
mov
mov
movl
mov
mov
movl
call
test
je
jmp
mov
test
jne
test
je
jmp
sub
push
add
push
push
call
add
test
je
sub
cmp
mov
je
lea
nop
push
mov
lea
call
mov
mov
lea
push
mov
push
lea
call
push
push
push
mov
call
add
test
jne
mov
mov
add
add
mov
mov
movl
mov
mov
lea
cmp
jb
cmpl
je
mov
mov
push
push
call
mov
mov
add
cmp
je
cmp
je
push
mov
mov
mov
call
add
mov
mov
mov
jmp
mov
mov
movl
mov
sub
push
call
cmpl
je
mov
mov
mov
lods
sbb
add
mov
lea
mov
mov
jmp
mov
cmp
push
push
je
cmp
je
pop
xor
pop
ret
mov
call
cmpb
jne
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
mov
mov
test
movl
jne
mov
test
je
mov
mov
push
push
push
lea
push
push
call
mov
cmp
jne
mov
test
pop
je
mov
mov
push
call
push
call
add
lea
call
mov
test
je
addl
cmpl
je
mov
test
mov
jne
test
jne
mov
test
mov
jne
test
jne
mov
test
mov
je
lea
push
call
add
test
je
pop
pop
pop
ret
movl
mov
mov
push
call
jmp
push
call
add
pop
pop
pop
ret
push
mov
push
push
push
mov
add
cmp
jg
mov
mov
add
push
mov
lea
mov
push
mov
lea
push
call
add
mov
pop
leave
ret
push
mov
mov
test
mov
push
je
lea
push
call
test
pop
jne
push
call
pop
testb
movl
je
push
call
pop
pop
mov
pop
ret
test
je
jmp
mov
movw
xor
ret
push
mov
cmpl
movl
movl
movl
jne
push
lea
call
mov
test
movl
jne
movl
lea
movl
movl
movl
mov
test
je
mov
call
push
lea
movl
call
push
lea
movl
call
mov
test
pop
je
mov
push
call
ret
mov
mov
mov
cmp
jae
imul
lea
mov
test
mov
mov
je
mov
push
call
xor
ret
push
call
test
je
xor
inc
pop
ret
push
mov
push
mov
push
push
xor
inc
mov
test
jl
cmp
jge
mov
imul
add
mov
cmp
je
mov
add
add
neg
negl
jmp
add
cmpl
jg
test
jl
mov
imul
add
mov
cmp
jne
pop
pop
leave
ret
dec
sub
test
jge
xor
jmp
push
mov
sub
push
push
xor
cmpl
mov
mov
mov
jb
call
mov
cmp
je
mov
push
call
mov
cmp
mov
jne
mov
cmp
je
push
lea
call
mov
lea
push
pushl
pushl
push
call
test
js
mov
cmp
je
mov
mov
lea
push
pushl
push
call
test
js
mov
cmp
je
mov
push
call
mov
xor
inc
lea
call
lea
call
lea
call
mov
pop
pop
leave
ret
push
mov
and
sub
mov
xor
mov
mov
push
mov
push
push
mov
xor
mov
movl
mov
call
push
mov
pop
push
push
push
push
push
push
push
mov
push
lea
push
mov
mov
mov
mov
mov
call
cmp
je
pushl
push
call
cmp
pop
pop
je
mov
mov
push
call
mov
lea
call
mov
pop
mov
pop
pop
xor
call
mov
pop
ret
push
lea
sub
mov
xor
mov
test
push
mov
je
lea
push
xor
mov
mov
mov
push
mov
lea
mov
mov
movl
movl
mov
mov
mov
call
cmpb
je
mov
mov
lea
push
call
lea
mov
mov
mov
mov
cmp
mov
je
lea
mov
lea
call
mov
mov
call
xor
push
push
mov
call
lea
or
inc
add
lea
push
mov
mov
inc
add
mov
adc
add
mov
push
mov
mov
pushl
call
add
testb
jne
testb
jne
xor
cmp
insb
cmc
inc
add
mov
cmp
jne
add
call
pushl
mov
mov
call
mov
mov
call
mov
cmp
jne
push
push
push
lea
push
mov
movl
movl
mov
push
mov
mov
pushl
call
add
testb
jne
testb
jne
pushl
mov
pushl
call
cmpl
je
mov
mov
add
call
lea
call
lea
call
lea
call
testb
je
mov
add
push
call
test
pop
jne
push
call
pop
mov
pop
mov
xor
pop
call
add
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
test
jne
test
mov
je
mov
test
jne
test
mov
je
mov
mov
mov
xor
cmp
jne
cmp
mov
jne
mov
mov
mov
mov
pop
mov
mov
mov
pop
ret
mov
mov
mov
pop
mov
mov
mov
pop
ret
mov
test
je
mov
mov
mov
push
call
mov
mov
test
je
jmp
mov
mov
mov
jmp
cmp
jne
movl
jmp
push
mov
mov
mov
call
pushl
mov
pushl
shr
push
push
mov
call
pop
ret
push
mov
push
push
push
push
mov
test
jne
pushl
mov
pushl
mov
mov
call
test
js
cmp
je
mov
mov
mov
mov
mov
push
push
push
push
call
xor
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
cmpl
je
cmpl
je
push
push
mov
push
mov
push
call
mov
movzbl
push
mov
call
add
test
jne
mov
mov
lea
push
lea
push
mov
call
mov
test
je
movl
mov
push
call
mov
movzbl
push
mov
call
add
cmpl
je
test
jne
mov
cmp
je
cmp
je
cmpb
je
mov
test
jne
mov
mov
mov
push
call
lea
xor
call
xor
lea
call
cmpb
je
mov
test
je
test
jne
mov
mov
push
push
mov
call
lea
xor
call
xor
lea
call
mov
test
jne
pop
pop
pop
pop
add
ret
test
jne
test
je
movl
jmp
test
je
jmp
mov
push
mov
lea
movl
call
mov
test
je
mov
test
jne
test
jne
mov
mov
push
call
lea
call
jmp
add
jne
mov
test
js
mov
cmp
je
push
mov
push
call
add
pop
pop
pop
pop
add
ret
mov
jmp
xor
push
mov
push
call
add
pop
pop
pop
pop
add
ret
push
mov
mov
push
push
mov
mov
mov
push
pushl
call
test
pop
pop
jne
pop
pop
pop
ret
push
mov
sub
push
xor
cmp
mov
je
pushl
mov
mov
lea
push
mov
push
call
lea
push
call
add
jne
lea
call
mov
pop
leave
ret
push
mov
sub
push
mov
push
mov
mov
push
call
test
je
xor
mov
mov
mov
mov
mov
lea
mov
mov
mov
call
test
mov
mov
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
dec
js
mov
mov
mov
mov
neg
sbb
and
push
lea
push
pushl
pushl
pushl
call
test
jne
dec
mov
mov
mov
jns
mov
xor
cmp
jne
mov
cmp
jne
xor
pop
pop
pop
leave
ret
push
mov
call
cmp
jne
mov
call
fmull
pop
ret
push
xor
call
lea
push
mov
call
andl
cmpl
jne
pop
ret
mov
call
pop
ret
push
pushl
mov
mov
mov
call
test
je
xor
inc
pop
ret
mov
pushl
mov
call
test
jne
jmp
push
mov
push
push
movl
movl
movl
call
cmpl
je
lea
push
call
pop
push
lea
xor
mov
call
lea
call
mov
call
lea
call
lea
call
mov
test
movl
pop
jne
pop
ret
andl
andl
pop
ret
push
mov
sub
cmpl
je
mov
mov
push
push
call
mov
mov
sub
mov
push
push
pushl
mov
mov
push
call
test
jle
mov
lea
push
lea
push
add
mov
push
call
push
mov
call
mov
mov
add
push
call
mov
cmp
jg
mov
mov
push
push
call
andl
mov
mov
mov
mov
push
call
mov
mov
mov
push
call
mov
sub
add
lea
mov
push
mov
call
mov
sub
pop
sar
cmp
jne
mov
andl
mov
mov
mov
pop
leave
ret
xor
jmp
push
mov
push
mov
test
push
push
je
mov
mov
mov
cmp
ja
test
jne
lea
push
mov
sub
push
mov
add
push
mov
mov
push
call
test
mov
mov
js
mov
add
pop
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
mov
sub
test
push
mov
je
mov
test
js
mov
mov
push
mov
push
push
push
push
mov
call
test
jg
cmpl
jne
movl
xor
pop
pop
add
ret
movl
movl
xor
push
lea
mov
mov
mov
push
call
sub
mov
mov
mov
mov
push
call
sub
mov
mov
mov
mov
mov
mov
lea
mov
mov
push
mov
push
add
call
mov
lea
push
lea
push
mov
mov
mov
push
call
mov
add
push
mov
push
call
mov
add
mov
add
testl
jne
cmpw
je
testl
jne
mov
mov
mov
push
call
sub
pop
pop
mov
mov
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
cmp
je
mov
test
push
je
mov
cmp
je
mov
add
test
jne
xor
mov
test
jns
mov
test
je
mov
mov
cmp
je
mov
add
test
jne
cmpl
adc
add
mov
mov
pop
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
mov
pop
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
xor
jmp
mov
mov
pop
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
cmpl
je
mov
mov
mov
push
call
mov
mov
xor
mov
pop
ret
int3
int3
int3
int3
push
mov
push
mov
push
push
mov
push
mov
lea
mov
add
cmp
mov
jg
mov
mov
mov
add
mov
in
inc
add
mov
add
mov
cmp
jg
cmp
jge
mov
mov
mov
cmp
jge
mov
pop
sub
pop
sub
pop
mov
mov
mov
pop
pop
ret
mov
jmp
mov
jmp
push
mov
sub
push
xor
cmp
push
movb
je
mov
xor
cmp
sete
mov
mov
pop
pop
leave
ret
mov
movb
movl
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
mov
je
cmp
mov
je
mov
push
lea
call
lea
mov
mov
lea
push
mov
add
push
mov
movl
movl
mov
call
push
pushl
lea
push
push
lea
push
call
add
testb
mov
jne
testb
jne
mov
test
jne
mov
mov
cmp
je
cmp
jne
mov
mov
lea
push
push
push
call
test
jne
cmp
je
mov
mov
push
pushl
pushl
push
call
test
jne
lea
mov
mov
mov
lea
mov
call
mov
push
push
push
pushl
call
test
jne
mov
push
push
pushl
push
call
lea
call
mov
mov
cmp
jne
mov
xor
cmp
sete
mov
mov
cmp
mov
je
mov
call
push
call
pop
lea
mov
call
lea
call
jmp
mov
jmp
add
int3
int3
int3
int3
int3
fldl
mov
fcompl
fnstsw
test
jp
fldl
faddl
fldl
faddl
fcompp
fnstsw
test
jne
fldl
fcompl
fnstsw
test
jp
fldl
faddl
fldl
faddl
fcompp
fnstsw
test
jne
mov
ret
xor
ret
call
test
jl
movsbl
mov
test
je
jmp
mov
ret
push
mov
and
sub
mov
xor
mov
mov
push
push
push
mov
xor
push
mov
lea
mov
mov
call
cmp
je
cmp
movl
movl
movl
mov
jne
mov
mov
lea
push
push
mov
call
test
mov
jne
mov
pushl
mov
mov
out
add
incl
sbb
inc
add
je
and
add
mov
lea
mov
mov
mov
movl
movl
mov
movb
mov
call
mov
cmp
mov
je
lea
push
lea
push
movl
cli
inc
add
add
add
inc
and
add
add
mov
push
call
testb
mov
jne
testb
jne
mov
push
lea
mov
call
inc
add
mov
lea
push
push
call
test
je
cmp
mov
movl
mov
movl
jne
mov
cmp
je
pushl
push
mov
call
test
je
lea
call
lea
call
lea
call
testb
jne
testb
jne
lea
call
mov
pop
mov
pop
pop
xor
call
mov
pop
ret
pushl
mov
lea
mov
call
inc
add
cmp
jne
lea
push
pushl
call
pop
pop
lea
mov
call
jmp
push
mov
and
sub
push
push
xor
cmp
push
mov
je
cmpb
je
mov
mov
push
call
pop
pushl
mov
pushl
lea
mov
call
test
js
lea
call
pushl
lea
pushl
call
test
je
mov
andl
test
mov
mov
je
lea
push
push
push
add
push
call
mov
and
jne
test
mov
jne
pushl
lea
call
test
jne
mov
pushl
mov
push
call
test
jne
pushl
pushl
pushl
call
add
test
je
xor
inc
test
jne
test
mov
je
mov
mov
mov
mov
mov
andl
lea
push
push
movl
mov
call
push
push
push
pushl
pushl
pushl
pushl
pushl
call
add
test
mov
je
movb
test
je
testb
je
mov
add
push
call
test
pop
jne
push
call
pop
cmpb
mov
jne
mov
mov
push
push
call
test
jne
lea
call
lea
call
pushl
call
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
xor
mov
mov
mov
push
mov
push
mov
cmpl
je
inc
add
test
mov
jne
inc
add
jne
lea
push
push
push
mov
call
add
test
je
inc
add
sar
mov
lea
push
xor
lea
lea
push
mov
mov
movl
movl
mov
adc
inc
add
call
pushl
pushl
pushl
call
add
cmp
mov
je
inc
add
push
add
pop
movsb
je
inc
add
lea
push
push
call
test
js
inc
add
testb
jne
inc
add
mov
cwtl
movl
xor
pop
mov
pop
xor
pop
call
leave
ret
push
mov
sub
push
mov
push
xor
mov
mov
cmp
je
mov
push
mov
lea
push
lea
lea
movl
mov
mov
call
mov
test
jne
mov
mov
push
lea
call
mov
lea
push
push
call
test
mov
jne
mov
andl
test
je
mov
lea
push
push
push
call
test
mov
jne
pushl
lea
call
test
jne
mov
mov
mov
lea
mov
call
lea
call
xor
lea
call
mov
pop
pop
pop
leave
ret
push
mov
sub
push
push
push
xor
push
lea
mov
call
lea
push
mov
call
test
mov
js
mov
add
push
mov
call
pushl
mov
pushl
call
test
mov
js
cmpl
je
mov
andl
add
mov
mov
push
mov
call
mov
push
push
call
test
mov
js
mov
mov
mov
lea
mov
lea
push
xor
push
lea
mov
mov
call
test
jne
pushl
lea
call
test
jne
mov
mov
lea
push
pushl
pushl
push
call
test
mov
jne
cmp
mov
mov
jge
pushl
pushl
push
call
test
mov
jne
pushl
pushl
mov
mov
push
call
test
mov
jne
cmpl
jne
mov
mov
add
call
cmp
jne
lea
call
xor
lea
call
pop
mov
pop
pop
leave
ret
mov
lea
xor
movl
call
jmp
mov
cmpl
push
mov
push
mov
push
mov
jge
cmp
je
mov
cmp
jne
movzwl
test
jne
movzwl
test
je
and
test
je
and
mov
lea
xor
call
mov
mov
cmpw
je
pop
pop
pop
ret
mov
and
test
je
and
mov
lea
add
call
jmp
andw
jmp
cmp
jne
push
pushl
call
pop
pop
test
jne
mov
call
jmp
mov
mov
sub
neg
sbb
inc
ret
push
mov
and
push
push
andl
lea
push
mov
push
call
pop
pop
lea
call
mov
test
mov
jne
mov
pop
ret
push
pushl
mov
call
mov
mov
shr
and
push
lea
call
jmp
push
mov
and
push
push
mov
push
push
mov
orl
testl
jne
mov
mov
mov
mov
mov
call
add
mov
mov
mov
test
je
pushl
mov
push
pushl
push
push
call
pop
pop
mov
pop
ret
push
push
pushl
call
jmp
push
mov
push
push
push
mov
push
push
lea
mov
mov
push
push
call
mov
test
je
push
cmp
jne
xor
pop
pop
pop
leave
ret
mov
and
je
mov
push
mov
call
mov
push
lea
push
push
xor
call
mov
mov
jmp
push
mov
test
push
push
mov
push
mov
mov
je
mov
test
jne
mov
test
je
push
push
mov
mov
push
pushl
call
mov
test
jne
pop
pop
xor
pop
pop
ret
push
mov
flds
fcomps
fnstsw
test
jp
mov
pop
ret
push
mov
fldl
faddl
fstpl
fldl
faddl
fstpl
fldl
faddl
fsubrl
fldz
fcom
fnstsw
test
je
fxch
fstpl
fldl
faddl
fsubrl
fcom
fnstsw
test
jnp
fstp
fstpl
pop
ret
fstp
jmp
push
mov
push
xor
push
xor
inc
cmp
mov
mov
mov
mov
je
cmp
je
cmpl
mov
je
cmp
jne
mov
mov
lea
push
push
push
call
xor
inc
mov
mov
test
je
cmp
je
cmpl
je
mov
call
mov
pop
leave
ret
mov
mov
push
push
push
push
call
test
jl
cmp
jle
cmp
je
add
cmp
ja
push
pop
cmp
je
mov
mov
jmp
mov
mov
jmp
push
jmp
xor
jmp
mov
jmp
push
mov
and
sub
push
mov
push
mov
push
push
lea
lea
call
xor
cmp
je
mov
mov
mov
mov
mov
push
push
push
push
call
cmp
je
cmp
je
pop
pop
xor
pop
mov
pop
ret
cmp
je
jmp
mov
cmp
jg
je
sub
jne
ret
push
mov
push
push
push
mov
push
lea
cmpl
mov
jne
lea
mov
test
mov
jne
push
mov
lea
push
call
pop
pushl
lea
mov
call
xor
cmp
jne
mov
mov
cmp
mov
jne
cmp
movl
je
mov
lea
cmpl
jne
mov
call
cmpl
pop
jne
mov
call
lea
call
pop
pop
leave
ret
push
mov
sub
push
push
push
mov
push
pushl
lea
mov
push
mov
call
lea
mov
lea
push
lea
push
push
movl
call
add
push
push
push
lea
call
mov
xor
cmp
ja
lea
call
push
push
push
lea
push
mov
mov
call
cmp
pop
pop
pop
jne
leave
ret
push
mov
sub
andl
push
mov
test
push
je
mov
lea
push
push
push
call
add
test
jne
mov
mov
call
test
je
lea
push
call
test
je
andl
push
xor
lea
mov
mov
push
push
push
call
cmp
je
mov
cmp
jne
movl
mov
lea
push
push
mov
call
cmpw
jne
push
mov
lea
mov
mov
call
mov
mov
call
mov
mov
mov
shr
cmpl
mov
je
cmp
mov
je
andl
mov
cmp
jge
mov
shr
mov
andl
cmpl
mov
jne
movzbl
call
test
je
movl
mov
mov
cmp
jl
lea
xor
call
add
je
pop
pop
leave
ret
mov
mov
mov
lea
push
push
pushl
mov
movb
call
add
cmpb
mov
jne
cmp
je
mov
mov
call
test
jne
cmp
jne
jmp
mov
mov
jmp
sub
mov
mov
mov
lea
push
lea
mov
mov
mov
call
pushl
mov
lea
push
mov
call
jmp
cmp
jne
jmp
pushl
mov
mov
call
mov
test
pop
jne
jmp
cmp
jne
mov
xor
test
jle
mov
lea
push
dec
push
push
call
mov
add
mov
mov
jmp
push
lea
sub
mov
xor
mov
push
push
push
mov
mov
xor
push
mov
lea
mov
call
cmp
je
mov
call
test
jne
push
lea
mov
call
testb
mov
je
mov
lea
push
push
pushl
push
call
mov
cmp
je
lea
push
lea
xor
lea
inc
push
mov
mov
movl
movl
mov
mov
movl
movl
mov
mov
push
call
testb
jne
testb
jne
mov
push
pop
cmp
je
testb
jne
testb
jne
lea
call
mov
lea
call
mov
pop
pop
mov
xor
pop
call
add
leave
ret
xor
inc
jmp
push
mov
push
push
mov
xor
cmp
jne
push
mov
cmp
je
cmp
mov
je
cmp
je
push
lea
mov
call
mov
mov
lea
push
push
call
cmp
je
lea
push
pushl
mov
pushl
pushl
call
add
test
js
mov
mov
xor
lea
call
mov
pop
pop
pop
pop
ret
lea
call
cmp
je
pushl
add
pushl
mov
pushl
push
call
jmp
push
mov
push
push
mov
push
push
xor
lea
mov
call
mov
cmp
mov
je
push
call
cmp
pop
je
mov
mov
mov
mov
xor
inc
andb
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
movl
cmp
je
mov
mov
mov
push
call
lea
call
mov
pop
pop
leave
ret
xor
jmp
push
mov
sub
inc
loope
add
xor
mov
mov
push
push
mov
mov
cmpl
push
mov
mov
mov
jge
andl
testb
mov
jne
andl
lea
push
pushl
mov
push
call
test
jne
mov
sub
jne
cmpl
jne
testb
jne
xor
mov
pop
pop
xor
pop
call
leave
ret
andl
lea
push
pushl
mov
pushl
mov
call
test
jne
testb
je
cmpl
je
jmp
test
je
mov
pushl
add
push
push
call
add
jmp
push
mov
push
mov
testb
jne
mov
mov
push
mov
push
pushl
pushl
call
test
js
orl
pushl
mov
pushl
mov
call
mov
test
js
mov
pop
pop
pop
ret
mov
jmp
push
mov
push
mov
push
mov
test
je
cmpl
je
push
lea
push
mov
call
mov
push
push
call
mov
test
pop
je
pushl
push
call
andl
mov
push
lea
call
mov
mov
lea
push
push
push
call
lea
mov
call
mov
pop
pop
pop
ret
push
mov
push
push
mov
push
lea
add
test
mov
je
mov
push
call
mov
test
je
movzwl
mov
push
pushl
push
call
mov
andl
andw
lea
call
pop
pop
mov
pop
pop
ret
push
push
mov
mov
push
lea
push
call
push
pushl
pushl
pushl
pushl
call
pop
pop
pop
ret
test
je
mov
push
mov
call
test
je
mov
mov
cmp
je
mov
cmpb
jne
mov
mov
call
test
jne
push
mov
test
jne
xor
test
jne
and
jne
mov
pop
ret
mov
mov
and
je
jmp
mov
call
jmp
int3
int3
int3
int3
int3
int3
push
mov
and
sub
push
push
mov
cmp
push
je
cmp
jbe
cmp
jne
mov
mov
lea
push
push
xor
mov
push
movl
mov
mov
call
add
cmp
je
mov
push
mov
mov
call
add
cmp
je
mov
lea
mov
lea
movl
push
push
mov
movl
mov
mov
call
mov
pop
pop
pop
mov
pop
ret
push
call
xor
add
cmp
je
mov
mov
cltd
mov
mov
movl
mov
mov
pop
pop
pop
mov
pop
ret
push
call
xor
add
cmp
je
mov
mov
mov
fldl
mov
fstpl
movl
pop
pop
pop
mov
pop
ret
cmp
je
cmp
jne
push
call
xor
add
cmp
je
mov
pop
pop
movl
pop
mov
pop
ret
push
mov
push
mov
mov
add
mov
je
mov
push
call
mov
mov
mov
mov
mov
add
je
mov
push
push
push
call
mov
lea
call
mov
pop
pop
ret
xor
jmp
push
mov
push
push
mov
cmpb
jne
movb
mov
test
mov
movb
jne
mov
mov
andl
push
inc
push
lea
mov
call
mov
mov
lea
push
push
call
test
js
mov
push
lea
push
mov
call
mov
push
push
call
mov
mov
lea
push
push
call
lea
call
movb
xor
pop
pop
pop
leave
ret
mov
mov
pushl
mov
mov
push
push
call
movsbl
add
and
ret
testb
push
mov
movl
je
push
call
pop
mov
pop
ret
mov
test
je
movw
xor
ret
mov
lea
push
mov
or
lock
dec
pop
je
ret
xor
inc
mov
mov
push
call
xor
jmp
push
mov
sub
mov
push
push
push
xor
mov
mov
cmp
mov
je
lea
call
pushl
lea
call
mov
call
test
je
movl
push
lea
mov
call
lea
push
call
add
add
addb
cmp
mov
push
lea
mov
call
pushl
lea
push
push
call
add
test
jne
mov
push
lea
mov
call
push
push
push
push
pushl
lea
push
xor
call
add
test
jne
call
cmp
mov
je
mov
push
call
cmp
je
mov
pushl
mov
push
call
cmp
je
mov
mov
push
lea
mov
mov
call
pushl
mov
push
lea
push
push
pushl
mov
pushl
push
call
test
jne
mov
push
lea
mov
call
mov
lea
push
push
call
test
jne
pushl
pushl
pushl
call
add
test
jne
mov
mov
mov
mov
lea
mov
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
mov
pop
pop
pop
leave
ret
push
push
mov
push
mov
push
mov
push
mov
mov
cmpl
jge
cmpl
movl
je
testl
je
nop
sub
push
push
push
call
mov
add
test
je
sub
add
add
cmp
jbe
cmpb
jne
sub
push
push
push
movb
call
test
js
testb
jne
lea
mov
jmp
testb
jne
mov
sub
jne
xor
pop
pop
pop
pop
pop
ret
push
call
add
test
je
call
test
mov
je
mov
test
je
jmp
mov
test
je
mov
mov
call
test
jne
orl
cmp
jb
mov
push
push
push
push
call
test
je
cmp
jbe
jmp
xor
jmp
mov
jmp
mov
and
or
jne
mov
ret
push
mov
push
push
pushl
andl
andl
mov
lea
call
mov
test
je
add
mov
call
push
mov
lea
call
mov
test
mov
jne
lea
call
lea
call
mov
leave
ret
mov
push
call
jmp
push
xor
cmp
je
cmp
jne
push
push
call
cmp
pop
je
movl
movl
mov
mov
xor
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
je
pushl
mov
pushl
push
call
test
js
xor
pop
pop
ret
xor
jmp
push
mov
and
sub
push
mov
cmpl
push
push
mov
je
mov
test
jne
xor
pop
pop
pop
mov
pop
ret
push
lea
sub
mov
xor
mov
mov
and
neg
push
push
sbb
inc
mov
lea
push
call
mov
xor
cmp
mov
jne
cmp
jne
testb
jne
mov
cmp
jne
pushl
mov
push
mov
call
cmp
movb
jne
mov
mov
lea
push
mov
call
mov
push
mov
lea
mov
mov
call
lea
push
pushl
lea
mov
mov
mov
push
mov
mov
movl
movl
mov
call
cmp
jne
cmp
jne
mov
mov
cmp
jne
movzbl
push
push
lea
call
testb
je
mov
add
push
call
test
pop
je
lea
call
lea
call
lea
call
mov
pop
xor
pop
call
add
leave
ret
cmp
je
cmp
jne
mov
mov
lea
push
call
cmp
je
jmp
cmp
je
mov
lea
push
call
cmp
je
jmp
movb
jmp
pushl
mov
push
mov
call
test
je
jmp
int3
int3
int3
int3
int3
int3
int3
mov
test
push
push
je
mov
mov
mov
cmp
je
mov
add
test
jne
mov
pop
movl
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
pop
mov
xor
pop
ret
xor
cmp
jg
xor
cmp
jg
xor
cmp
jne
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
call
test
je
xor
ret
xor
inc
ret
push
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
push
mov
test
je
push
mov
cmpw
je
test
jbe
mov
mov
lea
cmpw
je
sub
add
test
jne
push
mov
mov
call
add
test
je
cmpl
jne
test
jbe
mov
mov
nop
cmpw
je
sub
add
test
jne
mov
lea
push
movb
call
test
je
movl
mov
lea
mov
push
lea
mov
mov
push
lea
push
movl
movl
mov
mov
call
mov
test
jne
test
jne
xor
pop
pop
pop
add
ret
mov
lea
mov
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
lea
push
lea
push
lea
push
lea
mov
mov
mov
mov
call
add
test
jne
mov
lea
lea
mov
movl
movl
movl
call
add
push
mov
call
add
test
jne
push
push
call
mov
add
jmp
push
lea
sub
mov
xor
mov
out
inc
add
push
mov
lea
push
mov
mov
mov
mov
cmp
lea
ja
mov
test
jne
mov
mov
cmp
mov
lea
ja
xor
test
jne
mov
test
jne
mov
mov
mov
mov
add
mov
cmp
mov
jb
mov
push
pushl
mov
pushl
call
test
je
test
jbe
mov
mov
lea
push
push
mov
call
mov
sti
adc
call
add
leave
ret
cmp
jae
jmp
push
call
pop
ret
push
mov
sub
mov
xor
mov
mov
andl
push
mov
push
mov
lea
call
mov
test
jne
lea
call
mov
xor
xor
pop
call
leave
ret
andl
push
push
lea
push
lea
lea
push
mov
movl
movl
mov
pop
cmovae
movl
movl
movl
mov
push
call
testb
mov
jne
testb
jne
test
jns
testb
jne
inc
add
push
movsb
call
pop
pop
jmp
push
push
push
push
push
lea
mov
mov
push
push
call
mov
mov
cmp
jne
push
push
lea
mov
mov
push
push
call
mov
cmp
jne
mov
test
mov
jne
test
jne
lea
call
lea
call
lea
call
add
iret
pop
jmp
lea
call
jmp
push
mov
sub
mov
push
push
xor
push
lea
lea
movl
mov
mov
mov
call
mov
cmp
je
push
lea
mov
call
mov
lea
push
push
call
test
js
pushl
mov
push
mov
mov
push
call
lea
mov
call
lea
call
lea
call
pop
mov
pop
leave
ret
push
mov
and
sub
push
mov
push
xor
cmp
push
je
mov
push
lea
lea
movl
mov
mov
mov
call
cmp
je
lea
call
mov
cmp
push
mov
je
mov
push
call
lea
call
mov
test
jne
push
lea
mov
call
lea
push
mov
call
test
jne
mov
push
call
mov
lea
push
call
add
jne
cmpl
je
cmpl
movl
je
lea
push
pushl
mov
push
lea
call
mov
test
jne
cmpl
je
lea
call
mov
lea
call
lea
call
mov
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
push
push
mov
mov
push
push
call
mov
add
xor
test
je
mov
push
push
lea
push
push
push
push
mov
push
push
call
add
test
js
mov
movl
testl
jne
lea
call
mov
push
push
lea
call
test
je
mov
mov
lea
push
push
mov
movl
movl
movl
call
mov
mov
lea
push
push
push
push
call
add
test
je
movb
mov
test
je
mov
add
push
call
add
test
jne
push
call
add
cmpb
jne
mov
mov
mov
push
push
push
call
add
cmp
jne
mov
mov
test
mov
jne
xor
test
js
test
je
mov
mov
mov
push
call
test
js
mov
lea
mov
call
push
call
mov
add
pop
pop
pop
mov
pop
ret
cmpb
jne
cmpl
mov
jne
mov
test
je
and
test
je
pushl
mov
push
mov
call
test
jne
inc
ret
pushl
mov
push
call
neg
sbb
inc
ret
xor
ret
xor
jmp
test
je
mov
test
jne
mov
test
jns
cmpl
je
push
lea
call
mov
neg
sbb
and
je
mov
ret
xor
ret
push
mov
sub
push
mov
push
pushl
mov
pushl
push
push
call
test
js
mov
mov
push
mov
mov
mov
lea
push
push
push
call
mov
push
push
mov
call
test
pop
pop
js
mov
mov
call
mov
mov
mov
push
push
push
call
andl
mov
mov
mov
test
je
mov
mov
mov
call
test
je
mov
cmpl
jne
xor
test
jne
mov
test
je
lea
push
mov
call
test
jne
mov
mov
mov
mov
test
mov
je
mov
push
call
mov
cmpl
jne
cmp
jne
movl
lea
call
mov
mov
mov
mov
lea
push
call
mov
andl
push
mov
lea
mov
call
mov
orl
test
je
mov
lea
push
push
call
test
js
cmpl
jne
movb
mov
mov
call
test
je
mov
mov
cmp
je
lea
call
lea
call
mov
pop
pop
pop
leave
ret
cmp
je
cmp
jne
movl
jmp
cmpl
jne
mov
push
pushl
mov
pushl
push
call
test
je
mov
mov
mov
mov
call
test
je
mov
push
mov
call
jmp
mov
call
cmp
jne
mov
call
test
jne
xor
inc
ret
push
mov
push
push
push
mov
add
mov
mov
push
lea
lea
cmp
je
mov
lea
call
add
cmp
jne
push
push
push
push
mov
call
mov
cmp
mov
jne
mov
mov
test
je
push
call
pop
pop
pop
pop
leave
ret
push
mov
push
push
push
mov
test
mov
je
push
xor
cmp
jne
mov
lea
push
push
mov
call
test
js
cmp
jne
push
call
cmp
pop
je
mov
mov
movl
mov
cmp
je
mov
push
call
mov
push
push
push
call
mov
mov
push
call
mov
pop
pop
pop
leave
ret
mov
push
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
rcrb
add
xor
add
mov
add
adc
and
in
dec
push
adc
xchg
cmp
sbb
cmp
dec
xchg
cmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jmp
push
push
mov
xor
cmp
je
mov
cmp
je
pushl
call
pop
pop
pop
ret
mov
cmp
je
pushl
mov
push
call
pop
jmp
cmp
je
push
lea
pusha
push
call
mov
jnp
add
mov
imul
add
enter
jecxz
add
add
js
add
lea
xlat
mov
scas
add
pop
add
fdivrl
fs
mov
xchg
pop
shrl
je
add
in
jbe
add
add
test
pop
je
ljmp
add
in
add
push
push
push
lea
push
push
lea
push
push
lea
push
push
push
call
cld
pop
add
add
add
aam
mov
loope
add
add
cli
mov
fcoml
call
pop
fld
jge
testl
add
mov
popa
add
cmpsl
mov
pop
add
add
add
add
add
ljmp
jno
mov
add
fdivrp
add
add
mov
int3
lea
pop
popl
push
push
lea
push
push
lea
push
push
lea
push
push
push
push
call
outsl
into
sahf
rcr
pop
in
mov
mov
jae
jl
fadd
jno
add
roll
add
jns
lret
test
add
mov
xlat
add
mov
add
jecxz
pop
in
add
push
add
add
bound
add
add
add
lea
pop
push
push
push
push
push
lea
push
lea
push
push
push
push
push
call
lcall
pop
mov
pop
add
flds
xchg
add
ljmp
add
add
add
rolb
cmpb
stos
add
mov
add
in
mov
add
xchg
add
lea
pop
add
add
xchg
fisubl
add
mov
lea
pop
push
push
push
push
push
call
lock
addr16
jo
add
add
add
clc
mov
test
imul
xchg
add
mov
popl
loopne
xchg
jle
mov
pusha
iret
mov
add
add
push
movsb
arpl
add
add
pop
fnstenv
fwait
mov
scas
imul
add
xchg
add
lret
test
add
mov
mov
lea
pop
call
call
push
lea
push
push
push
push
push
push
push
push
push
call
add
ljmp
jo
mov
add
out
stos
add
mov
std
lds
add
add
fld
mov
stos
iret
mov
hlt
lea
pop
push
push
push
lea
push
lea
push
push
push
push
lea
push
push
call
gs
mov
add
add
nop
add
pop
jno
nop
repnz
outsl
pop
add
push
xor
mov
loope
add
mov
mov
xchg
add
mov
nop
add
add
mov
push
fmulp
flds
add
push
in
int3
nop
faddl
cli
sbbl
lea
pop
call
push
lea
push
call
mov
add
add
mov
add
add
xchg
add
add
add
movl
stos
add
add
sarb
mov
add
add
add
add
imul
rcr
pop
mov
mov
mov
aam
bound
pop
jmp
push
lea
push
call
add
add
stos
add
add
jmp
mov
pop
add
test
cmc
test
ret
sahf
add
add
mov
add
scas
mov
fcomip
mov
test
xchg
data16
into
aam
out
add
adcb
mov
std
mov
lea
pop
ret
mov
push
lea
push
call
popa
shlb
nop
ret
jmp
mov
add
icebp
loop
add
fldl
add
xchg
testb
pop
mov
mov
fadds
jb
add
data16
pop
in
push
push
push
push
push
push
push
push
push
push
call
add
pushf
fcomps
add
add
jne
push
add
add
add
add
mov
xorb
add
push
lds
mov
add
xchg
jnp
add
mov
add
add
jecxz
mov
lea
pop
add
push
push
push
push
push
lea
push
call
add
in
pop
add
sarl
ror
jle
jns
xlat
add
in
lods
mov
scas
jb
popf
addw
fildl
add
add
add
lods
add
out
xchg
out
sti
add
push
stos
add
call
sarl
arpl
pop
add
add
push
lea
push
push
push
push
lea
push
push
lea
push
push
call
in
ret
add
rcl
add
lods
add
add
icebp
stos
add
sbbl
add
pop
cmpsb
add
add
mov
add
clc
test
loop
jne
pop
jb
sarb
add
lea
cwtl
enter
mov
lea
pop
mov
push
push
lea
push
push
push
lea
push
push
push
push
call
flds
add
add
jno
add
hlt
stc
cltd
cmpsl
lea
push
in
stc
movsl
push
add
stos
add
sarl
mov
pusha
add
mov
js
add
out
add
add
nop
add
in
js
xchg
add
test
add
nop
mov
mov
lea
pop
xor
push
push
push
push
lea
push
push
call
xchg
add
add
les
test
cmc
add
add
mov
clc
movsl
add
rcrl
jb
xchg
pop
repnz
add
xlat
add
pop
add
push
push
sub
push
push
pop
add
sub
sub
dec
sub
lea
pop
dec
dec
pop
push
lea
push
call
popa
push
xchg
mov
lods
add
mov
sub
nop
xorl
add
xchg
loope
add
add
test
into
faddl
mov
jne
movb
add
add
fdivr
addr16
in
shr
jecxz
push
insb
add
lods
push
negb
add
pop
pushl
push
push
push
push
push
call
add
xchg
jecxz
lret
testb
fiadds
call
cmpsb
in
filds
add
mov
add
add
add
add
out
shl
add
test
mov
mov
add
jbe
out
mov
jno
add
movb
jno
add
add
pop
addb
movl
cmpsl
fadds
mov
mov
lea
pop
call
push
lea
push
lea
push
push
lea
push
push
push
call
jge
add
pop
cmpsb
jno
push
add
add
add
lahf
add
add
add
iret
aad
add
outsl
add
add
mov
add
mov
mov
mov
add
xchg
add
push
mov
mov
fndisi(8087
loop
add
add
pop
mov
push
lea
push
call
in
out
add
pop
add
mov
mov
cmpsb
add
add
scas
add
add
add
lret
lret
jbe
jecxz
xchg
out
add
add
int3
mov
lods
in
stc
sahf
add
add
enter
rcll
jl
loope
jnp
cltd
push
add
add
add
les
faddp
add
add
push
pop
mov
lea
pop
movl
push
push
push
push
call
add
fistl
add
xchg
add
add
mov
test
iret
js
add
jl
add
push
pop
cmpsb
test
add
mov
add
adc
inc
loopne
push
push
call
shrl
pop
add
push
pop
mov
add
faddl
call
add
out
add
jne
bound
ljmp
add
add
movsb
pop
in
cltd
add
add
add
shrl
scas
add
xchg
popf
mov
lcall
les
push
push
push
push
push
lea
push
call
xchg
lods
test
fyl2xp1
ror
xorb
add
add
icebp
lahf
mov
push
mov
pop
add
rolb
out
add
test
add
pusha
ljmp
jnp
jmp
rolb
flds
add
stos
add
add
pop
jmp
jecxz
add
xchg
add
jae
mov
pusha
sbb
jne
push
push
lea
push
push
push
lea
push
push
push
push
push
call
add
fnstenv
loope
jno
add
pop
leave
nop
add
test
int3
data16
add
cmpsl
pushf
jno
test
addr16
xchg
pop
add
je
cmpsl
arpl
mov
lea
pop
pushl
call
push
lea
push
lea
push
push
push
call
in
add
add
push
icebp
add
add
jne
addr16
add
scas
fwait
in
add
in
pop
xchg
lods
push
in
ffree
movb
fidivl
rcrl
add
add
fcmovu
jns
pop
mov
add
xchg
jmp
mov
add
aam
pop
add
out
add
xchg
push
addb
in
add
mov
add
add
sti
add
pop
pushl
pushl
push
push
push
push
push
push
push
lea
push
push
push
call
lret
lock
lret
js
mov
iret
mov
movsl
testb
loop
fcompl
add
cmc
add
add
add
push
loope
in
add
mov
add
les
jb
in
stc
int
arpl
add
add
add
scas
ret
jae
rolb
add
add
lret
movsl
stos
je
fmull
dec
inc
add
push
push
dec
shl
push
or
inc
add
ror
sub
dec
not
not
pop
shr
shr
pop
push
push
push
push
push
push
lea
push
call
test
aad
add
add
in
pushf
add
loop
mov
mov
popf
mov
push
negl
std
loopne
add
sahf
test
add
add
add
push
add
sahf
iret
add
out
add
fnsave
lods
mov
cwtl
data16
out
add
mov
popa
sbb
pushl
push
push
push
push
push
lea
push
push
push
push
call
fiaddl
add
mov
pop
call
stos
test
loope
lcall
cmpsb
cwtl
add
orl
add
add
mov
add
in
xchg
add
iret
add
mov
lea
pop
call
push
lea
push
lea
push
push
call
add
orl
mov
in
loope
shll
add
add
push
add
xchg
add
add
add
add
add
shrl
repnz
mov
stc
add
add
add
bound
movl
test
add
pop
push
push
push
inc
push
xor
add
lea
sub
xor
pop
lea
sub
not
add
pop
push
lea
push
push
push
push
call
movsb
data16
mov
add
add
push
outsl
add
out
add
mov
shlb
jle
mov
pop
sahf
lods
add
lea
pop
push
push
push
push
call
bound
subb
add
jl
add
xchg
lret
loopne
lock
add
add
outsl
add
pusha
in
mov
outsl
fs
loop
addl
add
testl
mov
push
add
imul
jnp
mov
mov
add
popf
sti
add
mov
js
mov
lea
pop
push
push
lea
push
call
add
add
add
in
out
mov
mov
xchg
xchg
add
imul
call
add
mov
mov
call
fisubs
je
add
add
jno
pop
add
pop
mov
add
xchg
add
pop
call
push
push
lea
push
push
call
pop
clc
add
pop
add
mov
add
clc
mov
xlat
add
xchg
add
test
add
xchg
rcr
hlt
add
rol
lcall
stc
add
aam
bound
add
push
add
jno
cld
lea
pop
mov
push
push
lea
push
push
push
call
add
fistl
add
cwtl
add
arpl
bound
lods
add
addb
pop
loop
int3
in
add
out
mov
xchg
add
add
mov
mov
lea
pop
push
push
push
call
add
add
jmp
add
add
jecxz
add
fs
add
jne
test
mov
fldcw
pop
lds
push
nop
lcall
xchg
int
mov
mov
bound
mov
stos
int
fiaddl
add
push
add
add
pop
push
push
push
push
push
push
push
push
push
push
call
nop
lds
sti
mov
mov
push
add
lods
cmpsl
add
int
mov
ja
xchg
add
add
pop
mov
add
xchg
add
imul
lahf
lds
add
fiadds
mov
js
mov
jae
jbe
ficompl
mov
add
divb
jp
push
cmpsl
mov
lea
pop
mov
push
push
push
lea
push
push
push
push
push
lea
push
push
call
add
mov
repnz
popf
out
add
add
add
addb
js
mov
repnz
test
aad
add
jae
cld
lea
pusha
cmpb
mov
pop
add
je
mov
pop
add
add
push
push
push
push
push
call
add
imul
jo
add
add
sti
out
pusha
jae
ret
lret
repnz
pop
cmc
ljmp
pop
js
add
add
mov
add
add
gs
xchg
imul
xchg
add
test
push
add
add
mov
lea
pop
add
mov
xor
push
push
call
lahf
std
lea
negb
pop
cmc
rcrl
std
jle
mov
fbstp
pop
loopne
pop
incb
lds
mov
xchg
ljmp
mov
jns
mov
xchg
mov
call
mov
push
add
lock
add
andl
in
push
push
push
call
add
repnz
jnp
mov
pop
test
fs
outsl
add
jge
mov
test
xchg
add
outsl
add
push
sbbl
jge
add
add
jae
pop
je
adcb
or
push
mov
xor
push
lea
push
push
call
xorb
add
mov
jnp
add
clc
fchs
mov
stos
add
fiadds
add
mov
add
aad
add
jno
xchg
rcll
test
jns
add
add
sarb
out
aam
pusha
addb
mov
mov
sar
clc
mov
xchg
add
fcmovnbe
lahf
jnp
int3
mov
lea
pop
add
pop
push
add
sub
ror
pop
mov
xor
push
lea
push
push
push
push
call
pop
test
loop
add
ja
mov
add
push
add
cmpb
sahf
bound
add
mov
add
add
add
lcall
add
sahf
mov
gs
lea
pop
push
push
lea
push
push
call
mov
cmc
add
add
jno
pop
jnp
insb
add
xchg
popf
mov
add
add
add
mov
les
pop
lds
push
add
int3
test
add
sarl
mov
cld
lea
pop
mov
push
push
push
push
push
push
push
push
push
lea
push
call
int3
add
push
add
test
add
imul
add
add
fs
loopne
movl
lret
lods
lds
sahf
add
add
add
pushf
add
test
bound
add
mov
add
add
rol
add
ficoml
mov
int3
lea
pop
xor
push
lea
push
push
push
push
lea
push
lea
push
push
push
push
call
js
rcr
mov
iret
pop
pusha
add
mov
add
loope
lahf
pop
adc
pop
add
add
add
add
into
neg
add
rcl
add
jae
add
add
add
popa
jmp
jns
mov
pop
add
push
xor
lea
ror
pop
sub
pop
push
add
pop
rep
push
inc
pop
pop
mov
push
push
push
push
lea
push
call
add
add
add
lahf
scas
xchg
add
jb
add
xchg
stos
add
xchg
mov
mov
enter
testb
pop
out
out
je
fnsave
add
pop
add
mov
mov
lea
pop
add
push
push
push
push
push
call
std
test
mov
xorl
insb
add
add
lret
jbe
sub
into
push
add
in
cld
and
mov
mov
add
add
push
mov
lea
pop
add
push
lea
push
push
push
lea
push
push
push
call
add
pop
rolb
add
les
mov
pop
add
fwait
cmpsb
add
add
pop
les
mov
add
fs
xchg
xchg
loope
push
aad
xchg
fistpl
mov
xlat
pop
add
mov
pusha
sbb
add
push
shr
shl
pop
mov
xor
push
not
rol
pop
mov
xor
push
push
lea
push
push
push
push
call
add
test
add
clc
add
lret
jb
fadds
add
pusha
data16
mov
cld
add
push
lods
addl
mov
add
ret
mov
pop
mov
push
push
push
push
push
lea
push
push
push
push
push
call
add
add
add
mov
add
add
add
add
jle
mov
add
testl
je
mov
rolb
call
push
arpl
lea
pop
xor
push
push
push
push
push
lea
push
push
push
push
push
call
nop
jle
repnz
add
int3
mov
fucom
add
add
add
add
fcomi
add
add
xchg
negb
cld
add
out
add
bound
icebp
test
add
add
add
push
sarb
xchg
mov
add
cmc
add
xchg
push
add
push
imull
add
add
test
mov
lea
pop
add
push
push
push
push
push
lea
push
push
push
push
call
add
popa
les
clc
out
iret
mov
mov
add
add
add
mov
add
stos
add
xchg
mov
out
scas
shrb
add
add
std
fildl
add
push
loop
sti
fstpt
add
add
pop
mov
int3
mov
int
add
add
lds
mov
lea
pop
add
push
shr
pop
add
mov
push
push
push
or
not
add
xor
sub
add
shr
pop
rol
pop
push
sub
inc
sub
pop
pushl
push
push
push
push
push
push
push
push
call
push
data16
mov
out
stc
mov
jecxz
mov
enter
pop
push
push
js
add
add
in
lret
pop
mov
icebp
data16
add
out
mov
scas
ljmp
add
xchg
add
popf
add
mov
out
add
faddl
add
add
add
outsl
mov
int3
lea
pop
call
push
push
push
xor
dec
shl
push
sub
add
lea
rol
add
sub
sub
add
pop
sub
ror
add
shl
pop
push
sub
add
lea
pop
push
push
lea
push
push
call
imul
add
pop
add
jl
push
cld
add
aam
loope
imul
add
mov
add
add
xchg
scas
add
call
bound
lods
addl
xchg
idivl
mov
loope
loope
imul
jnp
fdiv
call
add
idiv
add
mov
lea
pop
push
push
not
shl
pop
call
mov
push
push
lea
push
push
lea
push
call
add
jne
lds
mov
add
add
movl
jnp
cmc
add
leave
add
shll
pop
jae
add
xchg
movb
mov
push
add
add
add
xorb
outsl
pop
jl
mov
movsl
add
cmpsl
fcomps
push
jo
add
in
int
mov
adc
push
push
push
push
call
add
add
scas
in
mov
lahf
pushf
mov
add
add
add
jp
cwtl
les
shlb
add
add
add
aad
cmpsl
add
in
add
lea
in
fucom
lcall
add
mov
ljmp
int3
lea
pop
push
push
push
push
push
lea
push
push
call
fisubl
add
mov
push
mov
faddl
out
xchg
add
jle
pop
mov
jae
jo
add
add
mov
add
movsl
add
add
mov
add
add
lds
popa
bound
add
xchg
add
push
roll
fisubrl
add
aam
bound
pop
mov
push
push
lea
push
push
lea
push
push
call
iret
scas
fs
push
add
xchg
jne
add
xlat
add
les
aam
add
add
idivb
mov
xchg
jmp
add
test
cltd
add
stos
incb
add
out
add
mov
add
mov
add
add
fcoml
add
jb
add
add
xchg
outsl
add
jns
lds
add
into
mov
lea
pop
add
push
push
push
push
push
push
call
add
mov
mov
in
cltd
add
cmpsl
push
add
repnz
add
out
enter
add
pusha
clc
add
xchg
jp
pop
add
add
add
add
add
xchg
lods
add
lret
xchg
add
jne
xchg
sbbb
add
pop
add
push
push
lea
push
push
call
jmp
add
jns
je
fcmovne
add
fstps
mov
lahf
mov
jp
add
xchg
add
jmp
enter
faddl
add
cltd
add
push
movsb
mov
add
scas
pop
add
mov
add
mov
push
xchg
lock
add
push
add
imul
lea
pop
add
mov
push
push
lea
push
push
push
lea
push
push
push
call
add
js
mov
jno
lret
fdivr
add
scas
push
movb
fidivl
jo
mov
mov
push
push
cmpsb
lods
call
add
add
test
mov
lea
pop
xor
push
push
lea
push
push
push
call
pushf
add
hlt
pushf
pop
add
mov
pushf
push
shl
mov
add
fsubr
jno
jne
testb
add
add
push
add
data16
rcr
iret
jno
stos
add
add
lret
mov
add
out
cli
addb
mov
lea
pop
add
push
push
push
lea
push
push
lea
push
push
call
loop
out
xor
rcrl
jmp
add
add
ror
add
add
stc
add
mov
roll
sti
cld
add
jns
jb
mov
repnz
in
into
sti
cmc
add
lds
pop
loop
arpl
in
arpl
add
out
out
test
add
in
mov
push
mov
aam
bound
add
push
push
push
push
push
lea
push
push
call
add
add
out
add
pop
fidivs
jae
mov
aad
add
add
int3
add
add
out
pushf
add
xchg
pushf
in
add
add
hlt
lea
pop
mov
push
push
push
call
add
cmc
add
add
cmc
roll
in
mov
repnz
rolb
jp
add
add
enter
mov
add
pop
add
xchg
lds
jecxz
add
add
xchg
movsl
add
testb
mov
filds
testb
mov
iret
add
add
loope
andb
gs
lea
pop
xor
push
push
push
push
push
call
add
jge
cmpsl
add
mov
add
add
mov
jbe
add
add
lock
rcr
add
mov
mov
pop
add
les
add
add
shl
mov
add
xchg
icebp
add
icebp
mov
lock
stc
add
add
into
xchg
in
mov
mov
add
pop
mov
lea
pop
add
push
xor
add
shl
pop
add
pop
push
sub
pop
mov
xor
push
not
rol
pop
rep
push
lea
push
push
call
fisubrl
add
lods
add
int3
add
add
jae
cwtl
mov
std
add
pusha
loopne
xchg
xchg
in
add
lcall
mov
nop
movsb
stos
push
mov
mul
popl
jnp
add
add
iret
ljmp
movsb
aad
lret
jns
lods
jle
call
jno
stc
add
mov
mov
lea
pop
mov
xor
push
lea
push
call
add
add
shlb
mov
jns
xchg
add
add
add
in
repnz
jo
xorl
fiadds
jo
pop
test
add
jno
add
pop
or
je
mov
push
push
push
push
push
call
xchg
add
add
out
add
add
movsb
pop
add
imul
add
addb
add
add
icebp
add
add
mov
add
add
sarl
pop
stos
jp
add
lds
in
add
add
test
mov
lea
outsl
icebp
gs
add
add
add
add
notl
pop
fiaddl
test
orl
push
lea
push
push
lea
push
call
lds
add
pop
loop
xchg
imul
fcoml
rolb
fnstsw
add
xorb
add
mov
push
jb
add
cmpsl
lods
add
add
out
push
movl
fcomp
mov
aam
bound
pop
add
push
add
pop
mov
push
push
lea
push
push
lea
push
lea
push
push
call
add
push
jne
add
shl
add
add
xchg
push
jp
fstpt
xchg
add
xchg
out
add
add
mov
incb
cld
jns
lcall
add
add
ja
hlt
mov
sbb
adc
push
push
push
lea
push
call
pop
add
add
icebp
push
cmpsb
add
add
lcall
add
add
lret
scas
add
add
mov
idivl
leave
mov
int3
lea
pop
add
push
inc
pop
add
push
xor
pop
add
push
push
lea
push
push
lea
push
push
call
aam
cmpb
add
add
add
push
push
fistpll
lret
add
add
std
add
stos
insb
jl
cmc
xchg
add
fwait
pop
xchg
loop
addl
data16
mov
push
push
push
push
push
push
lea
push
lea
push
push
push
call
add
mov
fcomi
cmpsb
movsl
mov
xchg
fldt
add
lcall
xchg
fwait
js
push
mov
add
fwait
add
scas
jmp
add
into
xchg
out
add
push
push
ljmp
mov
add
add
add
test
jecxz
xchg
pop
xor
push
lea
push
push
push
push
push
lea
push
push
lea
push
call
add
jne
mov
add
cmpsl
arpl
out
out
push
mov
hlt
mov
mov
pop
addb
jno
into
add
repnz
add
mov
lods
fildl
mov
add
rcl
jl
jnp
in
add
je
hlt
stos
mov
add
popf
ja
stc
cld
pusha
add
add
add
add
lods
add
add
aad
add
stos
mov
jns
mov
lea
pop
add
push
dec
shr
pop
add
pop
push
push
push
push
push
call
add
aam
pop
add
fs
std
add
mov
add
xchg
push
test
push
leave
icebp
mov
mov
sti
lods
les
scas
add
cmpsb
add
lea
movsl
out
xchg
lods
fstpt
loope
je
gs
add
add
add
ror
xchg
stos
repnz
adc
rep
push
lea
push
push
push
lea
push
push
push
push
push
call
add
add
add
add
test
push
add
add
add
lcall
jmp
add
in
loope
in
add
add
add
cmc
add
fists
pop
add
pop
push
sti
add
hlt
xlat
add
mov
filds
arpl
mov
push
push
push
push
lea
push
lea
push
push
push
push
lea
push
call
add
add
xchg
add
push
pop
call
test
cmpsl
add
add
add
addr16
movsl
add
add
arpl
scas
pop
mov
add
cwtl
jne
add
data16
xor
push
push
push
call
mov
add
pop
aad
mov
add
testl
push
int
pop
add
add
fadds
jo
mov
push
add
mov
testb
jecxz
add
add
hlt
lea
pop
add
push
sub
pop
or
je
mov
push
push
lea
push
push
push
push
push
push
push
lea
push
call
lock
testl
mov
mov
fsubp
add
mov
lock
add
pop
iret
add
push
sti
add
xchg
add
add
add
add
add
mov
lea
pop
add
add
push
sub
pop
rep
pop
push
push
sub
push
sub
add
sub
ror
add
sub
inc
shl
rol
sub
pop
dec
xor
ror
lea
pop
push
not
shr
sub
pop
pop
push
shr
shr
pop
mov
mov
push
push
lea
push
call
xchg
pop
ret
add
add
add
add
add
filds
xchg
mov
repnz
movl
xchg
add
clc
mov
clc
ret
imul
add
add
call
or
mov
push
sub
pop
jmp
push
push
add
pop
mov
push
dec
inc
sub
pop
add
push
lea
push
push
push
push
lea
push
push
call
xchg
pop
scas
add
cwtl
mov
add
add
lock
add
mov
add
fiadds
arpl
pop
add
mov
shl
add
add
add
add
add
add
add
popa
lcall
out
xchg
into
roll
add
xchg
mov
jns
sahf
add
pop
push
push
inc
pop
push
push
push
sub
pop
push
push
inc
pop
mov
push
pop
pop
push
not
add
pop
pop
pop
push
lea
push
lea
push
lea
push
push
push
call
push
xlat
sahf
mov
scas
add
orl
testl
jmp
add
les
loopne
fnsave
add
bound
repnz
mov
fldl
add
add
addr16
pop
fldl
add
pushf
movl
pop
roll
loopne
test
popa
mov
cltd
lea
les
push
lea
push
push
push
push
push
push
push
lea
push
call
mov
add
add
ja
add
imul
add
add
add
icebp
nop
push
bound
add
mov
aad
mov
mov
add
in
push
iret
jbe
fdivrs
icebp
pop
jo
mov
add
add
test
add
sahf
gs
add
mov
add
mov
lea
pop
leave
ret
push
push
lea
push
push
push
push
push
push
lea
push
push
call
sahf
jmp
ja
add
add
xchg
jge
add
jmp
add
add
add
out
jp
int
add
leave
test
pop
add
add
add
mov
pop
mov
lea
pop
push
mov
push
push
push
push
push
push
call
add
push
add
loope
add
stc
add
mov
mov
add
cli
mov
add
add
cli
mov
add
add
add
add
mov
push
mov
lea
pop
add
push
push
push
push
call
add
add
add
add
add
add
movsl
add
add
add
add
jmp
add
push
add
idivb
fists
add
fs
iret
lahf
into
add
mov
add
std
mov
add
pop
push
out
jle
mov
add
xchg
ret
add
add
pop
push
push
push
push
push
push
call
icebp
test
push
hlt
add
cld
add
out
movsl
add
xchg
add
fwait
testb
jb
add
addb
add
loopne
pop
mov
into
add
add
mov
orb
xchg
rcrb
pop
test
add
add
in
add
pop
push
movl
push
dec
pop
addl
test
je
push
push
push
push
push
lea
push
call
cmp
cwtl
add
mov
add
js
mov
add
xlat
add
add
add
addb
sahf
js
xchg
push
shl
add
test
out
pop
add
in
filds
addr16
add
fsubp
pop
aad
negl
jo
jl
mov
lea
pop
mov
push
sub
sub
inc
add
pop
pop
pop
push
push
call
movl
lret
add
add
repnz
cltd
add
ret
mov
mov
repnz
loope
pushf
add
jmp
add
in
mov
int3
lods
aam
add
add
add
fldt
add
roll
add
stc
imul
ror
sub
lea
pop
pop
push
ror
xor
shr
rol
pop
leave
ret
push
push
push
push
push
lea
push
push
push
push
call
fiaddl
mov
aam
rolb
add
mov
pop
lret
add
add
addr16
mov
pop
je
push
add
jl
push
add
lock
movsb
mov
push
cld
data16
xchg
add
xchg
add
add
jbe
aad
add
fiadds
add
aad
aam
bound
push
push
push
lea
push
push
lea
push
call
fs
int
add
imul
call
test
popa
out
je
add
xchg
cmpsb
mov
in
push
cmpsb
int3
je
cli
mov
iret
push
add
loope
fstpl
mov
lea
pop
mov
push
add
pop
add
push
push
rol
inc
pop
push
push
push
call
add
popf
stc
repnz
mov
add
nop
fildl
add
cmpsl
xchg
add
add
add
fsubs
add
out
test
into
jp
add
movsl
sarb
add
fmulp
add
jno
mov
add
mov
cmc
in
push
add
add
mov
lea
pop
push
push
add
sub
xor
pop
push
testl
push
add
sub
inc
pop
addl
push
push
push
call
xchg
jnp
stc
popf
repnz
iret
jle
pop
jb
roll
cmpsl
int
lods
int
add
test
mov
lods
aam
add
add
push
mov
mov
out
add
add
add
pop
lcall
add
in
jge
fsubr
add
add
add
in
mov
lea
pop
call
mov
push
lea
push
push
push
lea
push
call
mov
push
cli
clc
add
add
jge
add
add
jge
add
add
cld
fcoms
in
add
add
pop
add
aam
lea
movl
jl
loop
int3
lea
pop
pushl
push
push
shl
add
add
not
pop
push
push
lea
push
lea
push
call
mov
mov
xchg
push
add
push
fadds
pop
push
jbe
add
add
arpl
add
icebp
add
add
cli
bound
jne
xchg
add
jmp
cmp
add
add
jb
add
mov
gs
add
ror
icebp
add
add
call
add
fs
lea
pop
call
push
sub
shl
rol
pop
cmpl
jne
push
push
push
push
push
push
call
cmc
jp
addb
pop
loopne
mov
mov
out
in
add
rolb
add
add
jbe
out
add
movsb
add
lds
push
add
xchg
add
fcomps
mov
out
add
pop
add
pop
pusha
add
push
push
add
fiaddl
xchg
fistpll
test
lea
xchg
mov
aam
bound
pop
pop
push
ror
pop
pop
push
push
push
push
push
lea
push
push
call
add
add
add
out
ljmp
add
add
les
add
imul
add
cli
jle
mov
ror
les
add
add
cmpsl
add
mov
fildl
add
add
lret
fsubrl
cmc
mov
add
dec
add
lock
jl
add
xchg
xchg
xchg
sahf
add
add
add
nop
mov
lea
pop
pop
push
rol
rol
lea
pop
pop
leave
push
rol
dec
pop
ret
push
push
push
push
lea
push
call
cli
shrb
pop
shl
jle
scas
add
int3
add
mov
rcll
jns
add
add
add
sti
add
test
icebp
mov
add
fildl
push
mov
add
jmp
jno
xchg
add
je
in
rcr
add
add
mov
lea
pop
mov
push
rol
dec
pop
add
push
push
ror
lea
add
ror
pop
push
push
shr
rol
sub
sub
pop
push
push
push
push
push
call
div
add
pushf
add
add
stc
std
out
iret
out
add
xlat
add
add
mov
test
add
mov
add
jo
add
stos
ret
fcomps
nop
adcl
add
faddl
stos
add
xchg
shll
cmpsl
ja
lds
pop
push
movl
push
push
push
lea
push
lea
push
lea
push
call
mov
mov
in
mov
add
lods
fcmovb
jb
add
pusha
mov
mov
rcrl
push
mov
add
add
add
jbe
in
add
pop
nop
test
aam
push
popl
mov
in
pop
lret
mov
jo
roll
mov
lea
pop
push
push
push
push
push
push
push
push
push
lea
push
call
sti
mov
add
mov
add
int3
cltd
test
add
mov
push
loop
mov
add
push
add
add
add
add
subb
les
mov
add
add
js
mov
lea
pop
call
push
push
push
push
push
push
push
lea
push
push
lea
push
call
add
jge
mov
add
mov
add
mov
add
clc
jae
add
jne
xorl
jne
add
fdivl
add
js
pop
add
add
mov
add
arpl
call
push
lea
push
push
push
push
push
call
xchg
add
scas
add
mov
rcr
mov
jno
add
add
cmpsl
add
add
add
add
int
add
imul
add
test
mov
add
add
mov
mov
xchg
lahf
pusha
push
add
dec
mov
arpl
pop
subl
cmpl
jne
push
shr
pop
pop
push
lea
xor
shl
pop
pop
push
inc
shr
ror
pop
pop
pop
push
lea
push
call
xchg
add
fildl
subl
cltd
xlat
push
addl
loop
add
jne
notb
add
bound
add
add
subb
lea
mov
jno
mov
pop
xchg
mov
js
add
mov
clc
pop
jb
add
shlb
add
cmc
add
xchg
fdivrl
jmp
add
fmull
push
lea
push
push
push
lea
push
push
lea
push
push
push
push
call
add
mov
nop
mov
add
movl
scas
scas
sbbb
aad
popf
add
add
add
add
cmpsb
jno
sahf
add
movb
add
fs
mov
nop
jae
pop
xchg
add
mov
pop
add
outsl
add
add
mov
lea
pop
ret
push
ror
add
sub
pop
push
push
ror
add
pop
mov
push
inc
pop
add
push
push
push
push
lea
push
call
mov
imul
fildl
add
add
pop
jge
add
jle
fdivrs
movb
cli
incb
and
add
add
add
arpl
lcall
push
add
cli
mov
add
aam
bound
push
push
xor
not
dec
pop
push
push
add
ror
pop
push
push
shr
shl
add
pop
push
push
lea
push
push
push
lea
push
push
push
push
push
push
call
fistpll
mov
add
mov
add
fiaddl
jbe
cltd
add
add
add
add
add
outsl
pushf
ffree
add
lods
sahf
mov
xchg
gs
add
mov
mov
add
pop
test
pop
mov
push
rol
pop
lea
push
lea
push
push
push
push
lea
push
push
lea
push
call
add
std
add
fadds
add
mov
in
add
add
faddl
add
sahf
xchg
add
add
mov
add
iret
hlt
jno
pop
push
pop
add
mov
add
add
add
icebp
movsl
lahf
lock
cmpl
add
add
addr16
pop
addl
add
popf
enter
mov
int3
lea
pop
sub
push
push
push
call
add
add
mov
add
fsubrl
add
jns
sarl
add
add
add
pusha
add
add
add
add
mov
lret
add
jo
add
push
add
add
test
loope
add
lcall
jne
shr
push
shlb
mov
add
lea
pop
mov
push
lea
push
lea
push
lea
push
call
clc
enter
add
add
xchg
popa
insb
movsb
cltd
add
push
imul
push
add
add
je
into
rolb
push
addb
add
add
add
add
mov
add
test
nop
out
loop
add
add
add
stos
cwtl
add
xlat
add
lock
jmp
adc
call
push
push
call
js
in
int
mov
add
nop
add
jns
add
mov
add
add
aad
add
add
imul
jbe
add
lret
add
pop
in
movsb
shl
loope
arpl
add
jecxz
add
jne
imulb
cmc
mov
pop
mov
push
push
call
add
faddl
js
add
add
flds
add
fsubrl
addr16
cld
xchg
shll
cwtl
add
add
mov
enter
lods
xchg
add
add
ja
jmp
pushf
addl
add
lods
out
iret
addl
fldl
add
incb
mov
add
add
pop
cmc
fadds
add
add
imul
mov
inc
or
push
call
add
ror
xchg
jno
aad
std
cmc
test
mov
add
cmc
in
add
mov
add
ljmp
add
lods
subb
add
add
loope
cli
mov
icebp
mov
scas
mov
fiaddl
xlat
mov
data16
xchg
add
add
int3
lea
pop
add
mov
push
xor
add
pop
mov
push
sub
pop
cmp
jne
push
push
lea
push
push
call
cmpsl
jp
rolb
add
add
xchg
pop
out
mov
add
add
xchg
fiadds
xchg
xchg
jb
add
jb
scas
mov
mov
lea
pop
cmp
jne
push
push
push
push
push
push
push
call
push
add
stos
add
mov
in
jl
add
add
add
push
add
out
xor
out
add
add
clc
mov
add
pusha
int
mul
cltd
mov
fistpl
cwtl
add
mov
lea
pop
mov
push
push
push
lea
push
lea
push
push
push
lea
push
call
add
add
add
jle
jne
add
add
add
add
add
imul
jo
imul
test
jb
add
add
into
scas
add
add
add
loopne
add
fstpt
aad
mov
add
mov
lea
pop
movl
jmp
push
push
lea
push
push
lea
push
push
push
push
lea
push
lea
push
call
add
mov
mov
add
cmpsb
add
mov
fbstp
mov
jae
jmp
lock
mov
add
outsl
jbe
add
leave
cli
add
enter
scas
movb
add
cli
add
mov
add
test
add
mov
jmp
add
nop
add
mov
lea
pop
mov
push
add
pop
mov
sub
jne
push
push
push
push
push
lea
push
call
mov
push
cwtl
add
jno
add
add
popl
mov
in
js
out
add
add
icebp
jno
add
insb
bound
add
jp
add
popf
jb
out
xchg
mov
lea
pop
mov
push
sub
pop
movl
push
push
push
call
lahf
iret
loope
push
mov
callw
add
add
push
rcl
add
aam
add
jb
mov
add
add
add
mov
fs
aad
xchg
add
pushf
add
add
pushf
add
call
mov
lea
pop
jmp
push
dec
inc
pop
mov
mov
push
push
push
call
popl
add
push
arpl
lret
add
mov
movsl
xchg
int
in
add
add
jo
mov
add
imul
imul
add
mov
in
lods
add
pop
mov
jbe
loop
lea
xchg
add
pop
enter
add
lret
push
add
add
fwait
push
xchg
jns
cmpb
add
into
lret
aam
lahf
lods
add
pop
cmp
jne
mov
push
pop
movl
jmp
push
push
push
push
push
push
lea
push
push
push
lea
push
call
add
mov
iret
lret
test
add
repnz
movsb
scas
fbld
lahf
cli
add
andl
mov
add
add
add
pushf
enter
data16
mov
popa
sub
inc
cld
push
push
push
push
push
lea
push
lea
push
call
add
lret
scas
add
decb
pushf
add
movsb
push
add
mov
xchg
mov
add
jo
shlb
test
movsl
loopne
lds
xchg
test
popf
addl
mov
mov
add
xchg
jae
add
arpl
lods
repnz
mov
in
push
jecxz
mov
jne
add
out
add
lea
pop
cmpw
jne
push
push
call
add
add
pop
js
mov
add
out
arpl
add
insb
aam
add
lret
add
lret
fldenv
add
jo
add
pop
repnz
xchg
add
arpl
cld
add
xchg
push
cli
add
imul
add
add
scas
pop
mov
lea
mov
mov
int3
lea
pop
mov
push
push
lea
push
push
push
call
push
add
add
push
loop
xchg
int3
add
enter
xchg
iret
insb
jns
add
push
push
add
nop
mov
in
fsubrl
jmp
add
mov
jne
pusha
add
add
jne
add
mov
jnp
add
sar
add
add
add
jno
xchg
add
add
mov
add
out
mov
mov
lea
pop
movl
push
push
call
out
into
add
jae
flds
sti
cmpsb
out
fdivr
push
jbe
jae
add
in
push
add
aad
xlat
add
add
lods
add
lds
add
jmp
incb
push
out
mov
lea
pop
jmp
push
sub
rol
inc
sub
pop
pushl
push
sub
pop
pop
push
push
call
jae
enter
add
in
fnstsw
into
fadds
add
nop
xchg
mov
les
mov
add
add
add
addl
mov
filds
arpl
jbe
add
add
add
popf
add
add
outsw
pop
aad
push
arpl
fldl
jmp
add
add
testb
add
mov
add
pop
mov
mov
push
lea
push
push
push
push
push
lea
push
call
add
xchg
jl
pusha
incb
jecxz
into
add
mov
add
add
fwait
xchg
add
mov
arpl
add
add
add
add
jo
add
add
fistl
add
aad
mov
add
jns
add
in
add
mov
add
mov
mov
lea
pop
mov
push
push
dec
shr
push
or
inc
add
inc
sub
sub
inc
rol
rol
pop
add
sub
add
pop
push
inc
add
shl
pop
push
push
push
push
push
push
push
push
call
outsl
pushf
add
add
ja
jne
pop
add
mov
popa
xchg
add
xlat
cwtl
lods
add
push
cli
jae
call
add
shll
jbe
je
sahf
popa
mulb
xchg
add
loope
cld
add
sahf
jp
add
cltd
out
add
cmc
mov
jecxz
xchg
test
add
js
push
pop
xchg
mov
lea
pop
call
cmpl
je
push
push
sub
sub
push
and
add
shl
sub
sub
pop
pop
push
sub
dec
pop
push
push
pop
call
push
lea
push
lea
push
call
mov
push
add
test
add
add
xchg
shlb
repnz
jae
add
rclb
cwtl
mov
add
int3
add
add
std
mov
add
popa
in
adcb
add
sub
xlat
xlat
add
lea
les
add
add
mov
lea
pop
cmpl
je
push
push
shl
push
sub
add
lea
xor
sub
dec
sub
xor
sub
lea
pop
lea
shr
dec
shr
pop
push
pop
push
call
push
push
push
lea
push
push
push
push
call
test
pop
int3
push
lods
add
add
mov
test
les
adc
add
add
repnz
in
add
je
in
add
out
mov
add
xlat
add
add
mov
in
xchg
addb
pop
add
jmp
std
jl
outsl
jmp
add
jae
stc
mov
clc
add
popa
lahf
out
add
popa
sbb
cmpl
je
push
push
add
push
push
pop
add
dec
sub
shl
shr
pop
inc
not
ror
pop
push
push
push
push
lea
push
push
lea
push
lea
push
push
call
filds
add
fidivrs
add
nop
int
cmp
jmp
insb
bound
add
clc
aad
pop
xchg
add
xchg
add
add
rolb
add
add
add
mov
lea
pop
push
push
push
call
pushf
add
test
add
xchg
imull
add
add
fcom
mov
mov
add
add
add
add
push
arpl
add
lcall
xchg
add
xchg
fiadds
les
jecxz
cld
lea
pop
call
push
push
push
push
push
push
push
push
call
mov
add
add
popf
add
mov
sarb
add
shll
ljmp
insb
pop
testb
xchg
add
mov
add
jno
adc
add
add
add
lods
ja
pop
cltd
add
pop
gs
in
cmc
loopne
pushf
add
mov
lea
pop
cmpl
je
push
push
sub
rol
push
or
not
add
lea
xor
sub
pop
dec
pop
push
push
push
lea
push
push
lea
push
push
push
call
ja
push
int
add
jl
filds
add
add
jp
int
std
add
add
into
enter
add
mov
movb
mov
pop
xlat
add
add
add
popf
add
add
mov
xchg
jbe
sti
add
mov
lea
pop
push
push
shr
pop
call
push
rol
pop
cmpl
je
push
push
dec
inc
push
sub
add
shr
add
shr
sub
inc
pop
sub
pop
push
not
rol
inc
pop
push
push
push
push
push
push
push
push
push
push
push
call
movsl
movsb
imul
ljmp
shl
loop
xchg
add
fldt
test
fwait
jbe
add
add
scas
cmpsb
lods
add
popf
add
mov
xchg
test
push
aad
out
mov
icebp
mov
imul
test
pop
call
push
push
push
lea
push
lea
push
push
call
je
shlb
imul
mov
add
mov
roll
pop
outsl
add
cltd
enter
add
add
fdivs
add
add
add
mov
lea
pop
cmpl
je
push
push
rol
push
and
add
not
add
add
sub
xor
inc
pop
not
rol
pop
push
sub
sub
pop
push
push
sub
ror
pop
call
push
push
push
push
push
lea
push
push
push
call
je
mov
aad
lods
push
lock
jmp
ja
insb
in
cltd
in
xchg
push
add
fwait
repnz
cmpsl
add
add
add
add
imul
cli
xchg
add
test
gs
add
pusha
lods
jl
cmpsl
pop
pop
out
aad
aam
scas
scas
jl
add
xlat
jecxz
test
mov
add
mov
lea
pop
cmpl
je
push
push
push
or
not
add
sub
inc
add
shr
sub
inc
rol
inc
lea
pop
lea
pop
push
push
lea
push
push
lea
push
push
push
push
push
push
call
add
jo
mov
add
add
jns
jecxz
addr16
leave
xchg
add
pop
add
cltd
lods
into
add
mov
jae
fisubl
add
movsb
mov
add
add
movsl
add
les
call
push
lea
push
call
pop
add
in
addb
int
add
add
filds
mov
add
xchg
mov
roll
add
add
push
add
pop
lods
push
add
add
fmuls
je
fldt
cmpsl
mov
imul
in
icebp
xchg
js
lret
jae
add
jnp
jge
add
cmpsl
icebp
add
cmpsl
push
mov
lea
pop
cmpl
je
push
push
add
lea
push
push
pop
add
rol
add
rol
sub
xor
lea
pop
shl
ror
pop
push
push
push
push
push
push
lea
push
push
push
push
call
add
int3
add
push
pop
cli
add
sub
add
add
add
push
mov
mov
rclb
rolb
jbe
cmpsb
add
addr16
lret
add
in
std
test
mov
add
add
loop
mov
iret
mov
in
out
cwtl
pop
pushf
mov
gs
ljmp
add
add
fcoml
lea
pop
push
push
push
push
push
call
cmpsl
test
add
aad
add
add
rcrb
mov
je
add
add
xlat
fldl
xchg
testl
add
mov
mov
add
add
push
add
add
cltd
add
out
mov
shlb
add
pop
call
push
push
lea
push
push
lea
push
call
stc
add
loope
add
add
pusha
fiaddl
out
add
xchg
insb
rol
add
movb
jle
add
add
cld
jmp
clc
iret
movsl
add
add
push
mov
lea
add
fists
add
into
add
pop
in
mov
fldt
cwtl
into
iret
mov
arpl
add
pop
cmpl
je
push
push
dec
ror
rol
push
or
not
add
sub
sub
sub
dec
pop
lea
pop
push
push
push
call
add
int
loope
stos
icebp
fs
lods
je
aad
frstor
data16
repnz
ljmp
add
mov
mov
add
add
arpl
add
mov
xchg
add
insb
add
pop
out
jge
ror
stos
out
mov
add
xchg
pushf
add
jp
orl
add
add
scas
push
add
pop
push
call
push
push
push
call
mov
add
add
add
int3
imul
mov
add
add
xchg
add
mov
outsl
add
in
testb
fs
cli
add
lret
filds
pop
bound
add
testb
shlb
fisubs
addb
push
loope
out
lret
in
add
add
addl
flds
mov
lea
pop
cmpl
je
push
push
lea
dec
push
or
inc
add
sub
sub
xor
shr
sub
sub
pop
sub
lea
pop
push
ror
pop
push
push
sub
rol
ror
ror
pop
call
cmpl
je
push
push
not
add
lea
push
or
inc
add
rol
sub
xor
sub
ror
pop
not
pop
push
push
push
push
push
push
push
push
push
call
add
stos
shl
mov
add
add
add
lret
pushf
xchg
jl
leave
add
add
add
out
pop
pushf
add
add
add
add
add
add
add
fldl
scas
pop
incb
push
push
popf
pushf
jp
xchg
add
fiadds
mov
jmp
and
push
push
push
push
push
call
push
add
add
add
add
add
add
loop
add
add
jnp
test
in
test
add
add
clc
jae
ret
add
test
jb
cltd
add
out
hlt
movsl
xchg
add
add
loopne
iret
addl
nop
add
test
pop
call
push
shl
sub
pop
cmpl
je
push
push
lea
push
or
inc
add
inc
xor
add
sub
shr
pop
sub
sub
pop
push
push
call
mov
jle
mov
xchg
push
jnp
test
cld
mov
fsts
in
lods
add
add
mov
lret
addl
je
add
fistl
add
xchg
insb
cmc
out
andl
popf
into
mov
add
add
add
jb
je
xchg
add
addl
lea
pop
push
call
push
push
lea
push
push
push
push
push
call
xchg
pop
icebp
add
popf
fsts
push
xchg
mov
aam
add
lea
pop
jle
mov
pop
testb
call
ficoms
push
xchg
loop
lods
add
pop
cmpl
jne
push
inc
pop
mov
push
lea
add
inc
pop
movl
jmp
push
push
push
lea
push
lea
push
lea
push
push
push
call
add
jmp
add
arpl
xchg
xchg
push
fistl
repnz
add
call
fdivs
jb
jbe
add
aad
fstl
outsl
out
pop
add
add
test
add
xchg
cwtl
test
mov
lea
pop
xor
push
dec
pop
pop
push
lea
dec
sub
pop
pop
push
push
push
push
push
call
jle
cwtl
add
aad
add
mov
add
add
add
add
add
cmpsl
add
out
add
lock
add
fisubrs
add
out
add
add
lock
add
add
add
add
in
pop
push
mov
insb
jmp
fadds
add
jns
push
add
stc
add
mov
lea
pop
pop
push
pop
pop
push
push
lea
push
push
push
push
call
enter
jmp
jl
cmpsl
movsb
mov
add
out
add
cltd
add
cmc
mov
mov
add
bound
add
add
lea
mov
mov
add
leave
pop
add
pop
nop
mov
int3
jae
mov
lea
pop
leave
push
lea
push
push
push
call
push
add
rolb
add
enter
xchg
shll
mov
add
imul
mov
roll
enter
mov
add
mov
add
testb
push
add
lods
xchg
add
mov
lea
pop
ret
push
shl
add
sub
pop
push
push
add
pop
mov
add
push
ror
xor
pop
cmpl
jne
push
push
shr
add
push
push
pop
add
xor
rol
rol
sub
sub
dec
lea
add
pop
add
add
dec
pop
push
pop
pushl
call
push
shr
inc
pop
push
call
push
pop
jmp
cmpl
je
push
inc
inc
add
pop
cmpl
jne
leave
push
sub
inc
lea
not
pop
add
pop
push
push
push
push
push
lea
push
push
call
aad
mov
add
add
add
test
mov
xchg
rolb
add
push
aam
stos
xchg
mov
lcall
mov
popf
add
je
lods
shlb
add
add
out
add
add
rorb
mov
lea
pop
pop
push
rol
lea
add
pop
pop
push
not
xor
sub
shl
pop
pop
push
lea
add
shl
ror
pop
leave
push
lea
push
push
call
add
out
add
add
add
pop
test
add
add
popa
add
add
add
add
xchg
lahf
bound
addr16
lods
in
jl
sti
add
test
int3
lea
pop
add
ret
push
add
pop
jmp
push
push
push
lea
push
call
jge
add
push
lods
int3
iret
jo
mov
push
aam
testb
pop
shl
xlat
push
stos
mov
push
mov
leave
movsl
data16
popf
fstpl
data16
push
in
bound
jne
js
jp
stos
ja
lret
iret
ja
lcall
add
test
lds
popa
int
hlt
lea
pop
cmpl
jne
push
push
rol
sub
push
sub
add
sub
sub
sub
pop
dec
rol
inc
lea
pop
push
sub
shr
pop
pushl
call
push
push
lea
push
push
lea
push
push
call
je
les
jo
jne
add
push
into
incb
add
lock
data16
mov
add
add
mov
mov
add
add
popf
add
addl
clc
add
test
jge
stc
jecxz
add
add
add
test
mov
push
aam
pop
add
sti
add
enter
rorb
pop
push
push
inc
add
xor
pop
call
push
sub
inc
shr
pop
jmp
cmpl
jne
push
shr
dec
pop
mov
mov
push
push
lea
push
call
add
mov
loope
xchg
push
push
mov
loope
fiadds
add
movsl
loope
add
add
add
in
jne
add
add
jae
pop
sbbb
add
or
push
push
push
inc
ror
push
and
add
dec
rol
sub
dec
pop
dec
pop
push
push
push
call
test
add
push
movl
in
lock
mov
add
cli
xchg
add
add
add
fs
xchg
scas
add
cmpsb
add
add
popa
xchg
xchg
lods
lock
repnz
add
stc
mov
fimuls
pop
pushl
push
push
push
lea
push
call
add
pushf
add
mov
shll
cmc
in
popa
in
add
add
add
jo
test
add
add
add
scas
add
fadds
flds
popa
jle
test
add
lret
fldl
add
add
add
lea
pop
call
push
dec
shr
pop
push
push
lea
push
push
push
push
lea
push
push
push
push
push
call
lcall
add
cmc
lods
jb
xlat
add
add
add
loopne
into
arpl
addb
stc
mov
jns
lahf
cmpsl
mov
flds
enter
imul
xchg
rolb
shll
ja
mov
lea
pop
call
push
push
shl
push
push
pop
add
rol
sub
xor
sub
rol
ror
pop
shl
lea
shl
not
pop
push
push
lea
push
call
add
jmp
add
add
pushf
lods
add
cmpsl
int3
mov
add
jo
imulb
insb
shll
stc
test
leave
popf
push
ljmp
lea
add
add
test
add
add
lea
pop
pushl
call
push
push
push
push
push
push
push
call
add
fwait
loopne
add
add
add
cltd
test
roll
stos
xchg
mov
add
ljmp
in
add
sbb
xchg
mov
jbe
mov
filds
add
add
add
push
rolb
add
fs
mov
add
mov
cmpsb
xchg
ret
roll
pusha
jno
add
xchg
call
iret
mov
lea
pop
call
push
push
inc
add
push
and
add
not
inc
sub
inc
pop
shr
rol
inc
pop
push
lea
add
pop
pushl
push
push
push
push
lea
push
push
call
add
nop
fwait
mov
in
js
outsl
jo
add
pushf
push
pop
xchg
add
add
fs
fiaddl
add
add
aad
mov
int
clc
add
test
add
js
add
fldl
faddl
mov
fnsave
add
add
jne
test
int3
lea
pop
call
push
lea
push
push
lea
push
call
addl
add
add
int3
mov
add
add
add
add
scas
nop
add
adcb
add
add
lods
add
popa
add
jbe
add
add
add
pop
call
push
push
push
push
push
push
push
push
call
xchg
add
imul
xchg
add
cld
jbe
add
add
add
add
add
imul
add
lods
add
jmp
push
lods
stos
mov
add
loopne
add
add
add
add
cmc
mov
fld
xchg
add
jp
aad
add
enter
and
pushf
and
ljmp
xor
rcll
into
incl
sub
or
rol
inc
dec
sub
sub
sub
sub
dec
pop
ror
shl
sub
shl
pop
push
push
lea
push
push
lea
push
push
push
push
push
call
int3
add
mov
add
fstl
rcll
ret
pop
add
mov
add
out
add
lahf
jns
ljmp
mov
add
js
je
pushf
add
fnstcw
xlat
cwtl
xchg
filds
shlb
mov
ja
cwtl
add
push
add
mov
cwtl
scas
in
mov
jae
cmc
add
add
pop
pushl
call
push
dec
pop
push
call
push
push
shl
push
and
add
lea
shl
add
sub
shl
pop
add
pop
push
xor
pop
pushl
push
add
pop
call
push
push
push
push
push
push
push
push
call
add
loope
push
lock
add
pop
add
add
add
andb
data16
scas
test
add
xchg
icebp
outsl
movsl
mov
add
jns
fnop
test
std
out
mov
popf
mov
jmp
std
out
add
mov
add
cwtl
cld
stc
mov
add
lret
cld
lea
pop
call
mov
push
push
lea
sub
push
sub
add
not
rol
inc
not
sub
shr
not
sub
pop
shl
sub
pop
push
push
push
call
bound
add
lahf
int
mov
mov
fsubl
add
xchg
add
test
fstpl
add
xchg
cld
out
fwait
pop
cli
xlat
add
mov
add
add
mov
xchg
mov
add
add
iret
mov
mov
nop
test
pop
pushl
call
push
shr
dec
sub
shr
pop
push
push
push
lea
push
push
push
push
push
push
lea
push
push
call
loopne
add
mov
add
int
add
add
mov
addl
mov
out
xchg
jnp
add
add
add
add
add
imul
add
add
into
mov
imul
add
add
add
add
add
add
loope
mov
popf
add
popf
add
std
mov
mov
lea
pop
call
push
push
sub
push
and
add
xor
sub
xor
pop
add
ror
dec
lea
pop
push
shl
pop
pushl
push
add
pop
call
push
push
push
push
call
add
lock
aam
fldl
imul
add
iret
lock
rcrb
jns
xchg
add
push
add
push
hlt
push
add
fwait
adcl
movsb
stos
add
add
les
add
add
pushf
test
add
mov
pop
pusha
popl
hlt
lret
movb
js
mov
les
add
pushl
push
add
sub
pop
call
push
push
shr
xor
sub
push
sub
add
not
rol
lea
sub
xor
pop
rol
ror
pop
push
push
push
push
push
push
push
call
add
push
add
in
into
add
movsl
rcrl
out
scas
lds
mov
add
cmpsl
jno
imul
mov
aam
add
add
xchg
push
add
add
add
pop
pushl
push
push
push
call
fiadds
add
pop
add
add
add
add
incb
pop
jge
xchg
mov
add
add
int3
aam
mov
add
bound
add
mov
add
add
test
cmpsb
test
in
popl
ljmp
call
push
push
ror
add
rol
rol
push
or
not
add
rol
inc
sub
sub
sub
add
xor
pop
sub
shr
lea
pop
push
push
xor
not
rol
shr
push
or
not
add
lea
xor
sub
sub
dec
pop
xor
shl
not
pop
push
sub
pop
call
pop
push
ror
pop
dec
jne
push
add
not
xor
pop
call
jmp
push
shl
add
pop
call
push
push
shr
push
push
pop
add
rol
shl
add
sub
ror
not
pop
lea
shl
shl
pop
push
push
push
lea
push
push
push
push
call
aam
cmc
clc
cltd
add
ja
call
push
add
leave
lahf
insb
xchg
testl
mov
push
movb
faddl
mov
add
popa
mov
sti
test
mov
sbbb
ret
rolb
push
in
into
lret
add
add
lods
popa
add
jb
cld
lea
pop
pushl
push
rol
inc
dec
pop
call
push
push
add
xor
pop
call
push
xor
pop
mov
push
push
push
lea
push
push
push
push
push
call
jno
enter
add
nop
test
mov
add
enter
shl
bound
fnstcw
add
mov
add
pop
sti
gs
test
add
in
repnz
data16
pushf
and
ljmp
cmp
xor
add
ret
or
rol
sub
ror
sub
inc
shl
add
not
pop
add
lea
pop
push
push
push
push
push
push
lea
push
push
push
call
cmpsb
add
jno
push
push
fbstp
outsl
add
mov
lcall
int3
add
add
pop
out
xchg
add
jo
loope
add
ficompl
xlat
add
fstps
add
int3
add
out
add
lea
pop
pushl
push
shr
pop
call
push
push
call
stc
les
movsb
iret
add
xchg
add
insb
add
addr16
add
xchg
pop
arpl
loope
test
enter
pop
xchg
into
add
ja
add
xchg
add
jo
add
popa
cmc
add
add
push
addb
push
add
test
add
add
pop
push
push
push
push
push
push
call
add
add
push
jns
push
in
shr
loop
add
add
leave
out
mov
add
pop
pushf
add
cwtl
push
add
out
add
pusha
stos
add
add
flds
mov
add
mov
popa
ljmp
add
add
hlt
lock
add
add
add
jle
aam
bound
call
push
push
shl
ror
ror
push
or
inc
add
ror
sub
sub
shr
rol
add
pop
xor
rol
pop
push
shr
pop
pushl
push
push
push
push
call
mov
add
add
out
and
lds
add
loop
ror
rcrl
mov
scas
cli
push
addl
add
add
cli
add
mov
les
sbb
add
push
add
add
pop
call
mov
push
push
call
stos
add
cwtl
add
add
std
popf
add
insb
rcl
mov
flds
add
jmp
jo
xchg
divl
loop
add
ljmp
xchg
jle
clc
push
add
add
xchg
mov
lea
pop
lea
push
push
rol
inc
push
push
pop
add
not
ror
sub
shl
pop
sub
shl
add
pop
push
sub
ror
inc
pop
pushl
push
add
shl
inc
add
pop
call
lea
push
push
push
push
lea
push
push
push
lea
push
call
xchg
push
fwait
add
jne
mul
mov
xchg
jl
sarb
add
add
roll
jge
add
add
fsubs
shrb
out
notl
lods
rolb
add
mov
std
add
fwait
aam
fmull
push
lea
push
push
push
push
call
out
out
jae
cmc
std
add
add
pop
jne
add
leave
add
add
mov
add
add
push
fiadds
add
mov
mov
fldt
jno
jno
pop
mov
add
add
add
add
add
xchg
fsubr
add
call
icebp
imul
jae
mov
add
mov
lea
pop
push
push
lea
push
push
call
add
out
add
jno
scas
leave
xchg
popf
int3
rcrb
add
push
pop
insb
sahf
add
into
in
cmpsl
mov
add
pop
pop
add
fstl
push
lret
jecxz
add
jo
add
add
add
add
add
xchg
add
push
test
jle
add
bnd
stos
mov
fldl
add
or
push
push
lea
push
call
test
sti
lods
out
add
pop
test
mov
add
sti
add
pop
add
pop
arpl
push
enter
ljmp
jmp
push
jns
test
add
pushf
xlat
fisubrs
sti
outsl
mov
mov
add
roll
add
add
add
add
add
add
add
fcoms
lea
pop
pushl
push
push
push
sub
add
shr
add
shl
sub
add
lea
inc
pop
sub
sub
pop
push
push
push
push
push
push
push
call
add
xchg
lahf
out
add
roll
lds
jge
add
jp
add
add
add
scas
add
add
lahf
pusha
je
leave
sahf
push
out
aad
cmp
test
test
test
loopne
lret
loopne
sti
cli
jecxz
push
testb
popl
mov
mov
out
loope
add
imul
cld
aam
add
addr16
push
call
push
push
add
add
sub
add
push
push
pop
add
not
sub
sub
shl
pop
rol
pop
push
push
push
call
add
add
pusha
scas
aam
mov
add
add
loopne
repnz
jno
add
add
jb
add
mov
incb
add
mov
add
mov
lea
pop
pushl
call
push
rol
not
pop
push
call
push
push
shl
sub
sub
inc
push
and
add
not
sub
sub
shl
pop
rol
add
add
pop
push
sub
sub
pop
pushl
call
push
sub
inc
pop
call
jmp
push
push
lea
push
push
lea
push
call
push
test
cmpsb
add
hlt
mov
icebp
loopne
lret
add
push
add
add
lds
add
jae
jge
add
add
cltd
icebp
add
stc
cld
stos
pop
jle
movsl
pop
nop
fadd
movsb
cmpl
mov
add
add
add
call
jne
test
js
mov
rorl
pop
pushl
push
shl
sub
pop
mov
push
lea
push
push
push
lea
push
push
push
lea
push
lea
push
push
call
pop
pusha
hlt
loop
add
loop
loope
test
lds
lret
bound
add
rolb
add
lret
cmpsb
testb
jno
mov
sar
mov
call
cmpsl
gs
add
add
pushf
add
push
addr16
jo
add
pop
add
lret
add
add
add
int3
aam
cld
lea
pop
jmp
push
push
dec
ror
shl
push
push
pop
add
add
not
shr
sub
xor
xor
pop
dec
pop
push
xor
pop
pushl
push
push
lea
push
call
add
insb
mov
mov
add
test
out
out
mov
out
jne
add
push
push
add
mov
aad
push
mov
add
mov
lea
pop
call
push
add
rol
sub
pop
push
call
push
push
sub
push
or
inc
add
ror
add
sub
sub
rol
pop
xor
inc
not
pop
push
push
push
push
push
push
lea
push
push
push
push
call
add
mov
adcl
add
add
lret
cld
mulb
cli
add
mov
xlat
aad
add
jp
add
cld
lea
pop
pushl
call
push
not
pop
push
push
push
call
movb
add
add
popf
cld
add
loope
add
add
push
mov
jnp
mov
jne
add
mov
add
add
cltd
add
ror
jns
mov
ljmp
add
jb
jle
test
xchg
add
push
roll
push
jne
add
add
mov
lea
pop
call
push
push
push
push
call
add
into
push
lcall
add
cli
lcall
add
add
into
add
cli
int3
add
pop
stos
add
rolb
jae
mov
add
mov
add
add
imul
add
mov
push
subl
mov
add
mov
jp
lods
mov
lea
pop
leave
push
add
pop
add
push
lea
add
add
sub
pop
pop
push
add
sub
pop
pop
push
lea
rol
inc
add
pop
pop
push
dec
dec
not
pop
pop
push
not
dec
shl
pop
leave
push
rol
pop
add
push
lea
shl
sub
pop
ret
push
shl
rol
pop
leave
push
push
lea
push
push
push
push
lea
push
push
call
xchg
add
cmc
add
cmc
addl
pop
add
push
add
push
mov
div
cld
add
rorb
into
pop
mov
movl
fcmovnbe
push
add
jle
add
pop
ret
push
push
push
push
lea
push
push
push
push
push
push
call
add
add
add
lcall
mov
jbe
mov
pop
add
add
mov
add
pusha
add
add
mov
outsl
lahf
xchg
lcall
cltd
xchg
push
add
test
cmpsl
jns
mull
jle
mov
data16
mov
push
lea
push
lea
push
lea
push
push
push
push
call
out
add
mov
jmp
cmpb
add
cmpsb
add
add
mov
mov
icebp
add
add
add
lods
xchg
add
jnp
out
stc
add
in
fiadds
add
stos
test
cltd
jns
add
fs
hlt
xorl
jae
movsb
push
jne
cld
lea
pop
cmpl
jne
push
add
dec
sub
sub
pop
mov
push
lea
push
push
push
push
lea
push
push
call
out
add
flds
stos
xchg
loope
popl
add
addr16
add
jae
push
add
add
add
ja
add
gs
add
add
pop
jmp
mov
push
lea
not
add
not
pop
and
xor
push
shl
add
pop
xor
push
lea
push
push
push
push
lea
push
lea
push
lea
push
push
call
rcll
mov
jge
popf
add
nop
add
mov
and
mov
add
jnp
add
lcall
mov
xchg
stc
lock
add
add
xorl
test
add
pop
add
xor
push
push
call
pushf
test
add
add
add
add
add
add
cltd
add
add
xchg
add
add
bound
std
mull
add
mov
pop
add
sahf
add
add
clc
loopne
cltd
push
jno
jo
add
call
add
add
pop
dec
sub
push
add
rol
pop
jmp
sub
push
add
shl
lea
pop
pushl
push
lea
push
lea
push
push
lea
push
call
add
mov
add
add
lods
stc
stos
xchg
jne
add
icebp
add
fwait
testb
add
scas
std
mov
pop
add
jecxz
push
push
mov
add
sahf
add
jl
push
leave
add
add
aad
pop
add
popa
scas
add
pop
pop
push
shl
pop
sub
push
add
rol
pop
cmp
jne
mov
push
push
push
push
push
push
call
in
pop
add
addr16
add
sahf
add
cli
lea
add
lods
add
ja
imul
roll
sar
out
add
loop
mov
iret
add
js
add
add
out
hlt
add
stc
add
ja
add
xlat
js
rclb
add
push
add
jp
add
add
lock
loope
add
lret
int3
lea
pop
lea
push
shr
pop
sub
push
push
lea
push
push
push
lea
push
lea
push
call
add
mov
insb
mov
add
pop
testb
xchg
flds
lahf
add
lahf
mov
add
add
call
test
mov
add
mov
jmp
test
aam
bound
mov
push
push
push
push
call
add
mov
test
push
add
loopne
testl
mov
shll
mov
add
lea
jl
add
add
add
addr16
cmpsl
add
lea
pop
shr
push
not
not
lea
pop
add
sub
push
not
pop
pushl
push
rol
dec
lea
pop
pop
shr
push
rol
pop
and
sub
push
lea
push
lea
push
push
call
outsl
ljmp
fldl
add
jne
add
add
mov
scas
rolb
add
add
mov
vphaddubq
add
add
add
add
add
mov
clc
jbe
pushf
add
pop
cmp
jne
push
lea
push
push
lea
push
push
push
call
lret
aam
fldl
fbstp
jl
into
add
aad
add
popl
mov
add
xchg
add
add
popa
ja
mov
aam
sti
incb
add
mov
mov
mov
lea
pop
leave
ret
push
lea
push
lea
push
call
shrb
add
stc
mov
nop
add
add
negl
mov
add
je
add
push
outsl
add
test
sar
mov
lea
pop
push
push
push
call
add
add
mov
stos
sahf
mov
in
mov
mov
ja
je
mov
mov
add
add
jno
mov
add
add
addb
jge
mov
lea
pop
mov
push
lea
push
lea
push
lea
push
push
push
call
add
add
jne
push
pop
add
shll
aam
bound
xchg
loope
jno
insb
mov
add
add
add
enter
mov
add
xchg
add
std
pop
jnp
add
test
mov
add
pop
add
add
add
stos
xor
ret
sarb
add
fimull
pop
add
push
dec
pop
push
push
shl
pop
push
push
sub
not
pop
push
push
sub
pop
push
push
push
sub
dec
pop
mov
push
push
push
push
lea
push
push
push
lea
push
push
call
jp
xchg
cmpsl
out
sahf
lock
add
add
mov
push
cwtl
add
mov
add
in
mov
add
mov
add
data16
add
fldl2t
in
mov
in
add
pop
lea
push
shl
dec
pop
sub
push
sub
inc
pop
mov
shr
push
not
rol
pop
add
push
push
push
call
add
xlat
jno
add
cli
mov
iret
fiadds
call
jns
mov
mov
aad
gs
mov
add
data16
mov
xlat
push
icebp
popa
add
lea
pop
mov
push
lea
push
call
mov
add
push
cwtl
mov
popa
xchg
add
add
add
arpl
add
jb
add
add
xchg
xchg
add
cmpsl
je
mov
scas
add
add
add
hlt
lea
pop
add
push
push
call
add
xchg
add
popf
lods
add
add
mov
pop
add
mov
xchg
lret
add
add
test
add
add
add
lahf
les
add
mov
add
mov
jns
jae
add
loop
les
jnp
add
push
push
push
lea
push
push
push
call
call
xchg
add
jb
int3
add
pop
int3
addr16
int3
mov
add
pop
mov
mov
fildl
push
add
into
add
test
add
add
iret
test
pusha
add
mov
jns
fmull
notb
insb
push
call
add
lret
scas
imul
jbe
cmc
icebp
add
mov
mov
lods
jbe
add
jae
mov
add
add
push
mov
push
push
in
roll
jecxz
push
iret
add
arpl
add
int3
add
mov
lock
lahf
add
pushf
addl
jbe
fstl
movsl
add
pop
mov
push
push
push
push
push
push
push
lea
push
push
call
push
outsl
add
out
jns
arpl
add
add
add
add
scas
add
fldl
test
add
add
add
cmpb
push
add
xchg
add
sti
mov
add
add
nop
mov
lea
pop
and
push
sub
dec
lea
pop
rol
rol
push
lea
push
lea
push
push
push
push
push
call
pop
into
mov
popa
add
sarb
les
add
cwtl
lock
repnz
rolb
jnp
mov
add
enter
ja
push
xchg
jl
push
push
add
xchg
imul
scas
add
push
test
jle
add
mov
add
mov
mov
pop
fildl
add
loopne
popf
add
add
cltd
fildl
mov
lea
pop
xor
push
add
lea
sub
lea
pop
inc
push
lea
pop
cmpb
jne
push
push
push
push
push
lea
push
push
push
push
push
call
add
add
add
mov
test
mov
mov
mov
pop
jle
mov
je
enter
mov
fildl
icebp
sub
cltd
mov
scas
add
mov
lea
pop
add
push
push
push
push
push
push
lea
push
push
lea
push
call
add
jp
enter
lahf
fiaddl
cld
loop
les
nop
add
jo
add
hlt
add
in
je
jnp
jmp
add
add
shll
add
mov
add
aad
lret
mov
add
jno
mov
cmc
andl
xchg
add
add
mov
lea
pop
cmp
je
add
push
lea
push
push
call
insb
add
add
add
lea
push
aam
fildll
imul
mov
add
data16
roll
add
add
mov
lods
mov
jne
movsl
insb
addl
add
int3
jne
add
ljmp
add
add
stos
movsl
mov
add
mov
lea
pop
cmpl
jne
xor
push
push
lea
push
lea
push
lea
push
push
push
push
push
push
call
loopne
fadds
add
mov
out
push
clc
imul
test
fucom
add
mov
mov
xchg
add
int3
roll
push
mov
sahf
add
add
push
add
add
hlt
mov
add
add
arpl
mov
add
mov
add
mov
fwait
mov
lea
pop
pop
push
ror
rol
dec
xor
pop
pop
push
lea
push
lea
push
push
lea
push
push
lea
push
lea
push
push
push
call
add
enter
mov
mov
add
stc
mov
testb
add
outsl
pop
add
add
xchg
add
stc
add
cld
jl
enter
mov
mov
int
and
mov
lea
pop
pop
push
lea
push
push
lea
push
lea
push
push
call
into
mov
mov
mov
push
jecxz
in
push
out
movsb
xchg
add
iret
add
mov
cli
mov
fwait
cmpl
add
shrb
add
add
mov
add
mov
js
pop
mov
lea
pop
pop
push
inc
sub
shr
xor
pop
pop
push
push
push
push
push
lea
push
call
jge
enter
loop
shl
lahf
push
arpl
jns
add
pop
add
imul
push
fistl
int
icebp
movsl
fildl
cmpsb
mov
lret
gs
popa
add
faddl
pop
add
add
push
lea
add
fiadds
jns
add
add
mov
add
add
stc
mov
lea
pop
leave
ret
push
push
push
lea
push
lea
push
call
mov
add
add
stos
mov
add
shl
js
out
jb
xchg
add
jge
add
add
int3
add
add
leave
fwait
mov
add
add
mov
insb
mov
lea
pop
mov
push
lea
not
dec
pop
add
push
push
ror
shl
pop
push
push
shl
inc
shr
rol
pop
add
push
rol
shl
sub
pop
xor
add
push
pop
add
push
sub
xor
not
sub
pop
pop
push
sub
sub
pop
pop
mov
push
lea
push
lea
push
push
push
lea
push
call
pushf
add
add
push
add
shl
add
and
roll
add
add
xchg
xchg
out
push
push
add
add
add
add
add
add
pop
jnp
add
flds
add
mov
lea
pop
push
push
lea
push
push
push
push
lea
push
push
push
call
jne
lods
pusha
xlat
pop
add
les
add
add
add
cmpb
hlt
leave
jl
testl
mov
test
add
imul
add
into
add
out
add
mov
lea
pop
call
xor
push
sub
pop
pop
pop
push
ror
pop
pop
push
lea
push
lea
push
lea
push
push
push
push
lea
push
push
call
outsl
jb
push
movsl
jae
add
cli
pop
add
enter
add
iret
add
lea
in
add
mov
lret
test
push
fwait
popa
add
popf
add
imul
lds
mov
lea
pop
pop
push
rol
add
pop
pop
leave
push
inc
pop
ret
push
push
push
push
push
push
call
imul
mov
add
push
pushfw
fdiv
push
add
add
std
add
lock
mov
add
mov
push
add
mov
movb
add
add
add
mov
dec
mov
mov
add
jl
add
add
pop
add
jnp
addb
add
pop
xlat
jecxz
add
jns
add
hlt
fs
mov
fmull
mov
push
push
push
push
push
lea
push
push
call
pop
add
add
hlt
roll
xchg
in
rorl
add
add
fldl
add
imul
add
shrb
sahf
iret
cmpsl
jp
popa
mov
test
sub
pop
add
mov
lea
pop
add
push
shr
ror
pop
push
push
push
push
push
call
iret
pop
mov
fiadds
mov
add
sahf
mov
lods
xchg
add
lret
test
add
roll
mov
addr16
loop
insb
add
push
xchg
add
add
add
lret
fisubrs
lods
cltd
out
add
stos
ljmp
or
push
push
not
add
xor
pop
push
push
lea
push
push
push
call
add
add
jae
add
add
add
jecxz
gs
loopne
add
stos
rorl
popf
imul
mov
jbe
add
test
addb
lahf
mov
push
mov
lea
pop
mov
push
shl
pop
push
push
push
push
push
push
push
push
call
push
addl
add
lods
imul
add
add
popa
add
add
add
add
jl
ja
add
xchg
mov
add
jmp
popa
sbb
pop
push
rol
pop
lea
push
lea
push
push
push
call
cwtl
out
add
jecxz
jne
jno
jbe
add
in
imul
fdivl
test
pop
bnd
mov
popf
cmpsb
add
out
loop
add
lcall
xchg
rolb
jecxz
add
cmpsl
push
push
flds
nop
out
mov
mov
mov
lea
pop
sub
mov
push
lea
pop
shr
push
push
push
push
push
push
push
push
call
add
add
add
bound
jl
fwait
add
int
xchg
iret
ret
imul
add
icebp
add
add
rcl
loop
add
add
fidivrl
jae
fisttps
mov
stos
mov
push
add
popf
mov
lea
pop
add
mov
push
rol
inc
add
pop
add
push
sub
shr
pop
pushl
push
push
lea
push
lea
push
call
add
cwtl
add
mov
stos
add
add
add
sahf
xchg
notb
rolb
cli
mov
add
loop
jp
add
fidivrs
add
add
imul
lea
pop
popl
push
push
call
mov
in
add
lcall
add
jl
add
push
add
in
std
xchg
add
xchg
leave
scas
add
clc
mov
arpl
pushf
add
add
insb
js
popa
add
add
addb
add
add
add
mov
jnp
mov
lea
pop
mov
add
push
add
not
add
sub
pop
xor
push
push
push
push
lea
push
push
push
push
lea
push
push
call
jmp
cld
add
xchg
aad
bound
pushf
jo
add
ljmp
pop
icebp
mov
add
js
add
testl
mov
lea
pop
lea
push
push
push
push
lea
push
lea
push
push
call
add
addb
repnz
mov
pop
pop
in
in
mov
add
jecxz
sarb
add
pusha
xchg
adcl
add
push
movsl
add
fs
fnstenv
stos
add
icebp
mov
add
lret
jmp
add
pop
add
add
add
add
add
sbb
mov
add
push
push
push
lea
push
push
lea
push
push
push
lea
push
call
in
pop
add
mov
add
mov
add
add
out
cld
add
lret
fdivp
lods
add
xchg
push
jmp
stc
add
add
fiadds
add
fbld
add
add
rolb
ja
mov
add
mov
lea
pop
xor
push
shl
pop
rol
nop
push
rol
sub
sub
inc
pop
nop
push
sub
xor
pop
xor
push
push
push
push
call
movsb
mov
pop
cmpsl
nop
lret
push
ficomps
mov
pop
jmp
add
add
add
call
loopne
add
add
out
nop
test
add
aam
cmpsb
add
fistl
jo
rolb
mov
aam
bound
pop
nop
push
push
lea
push
push
push
push
push
push
lea
push
lea
push
call
add
filds
stos
lahf
popa
add
mov
add
andb
mov
add
insb
sahf
xchg
add
out
mov
fadds
jecxz
mov
add
sti
aad
pushf
xchg
roll
add
add
out
add
lods
je
mov
sti
add
popl
imul
push
andl
stc
addl
aam
cltd
filds
pop
nop
inc
push
push
push
call
mov
icebp
push
push
mov
mov
add
test
add
jmp
out
test
add
xchg
add
mov
mov
add
add
roll
add
add
pop
in
filds
add
add
add
add
add
scas
loopne
add
add
add
add
fcomps
add
add
add
mov
lea
pop
nop
nop
push
shr
ror
pop
cmpb
jne
push
inc
ror
pop
add
nop
push
rol
shl
pop
nop
cmp
je
push
lea
push
lea
push
push
push
push
push
lea
push
push
call
fadds
add
loopne
jbe
test
roll
fadds
mov
jb
add
jae
add
je
push
xchg
in
ret
aad
loope
xchg
add
gs
into
movb
les
push
push
call
add
add
testb
mov
add
leave
fisubs
into
add
add
add
pushf
cld
add
lcall
jmp
cmc
add
int3
lea
pop
nop
inc
push
add
sub
pop
nop
push
lea
push
push
push
push
lea
push
call
pushf
add
add
mov
in
jb
add
je
movsb
fidivrl
add
mov
cld
into
fnstcw
mov
add
add
lahf
jbe
pop
std
add
xchg
add
je
lret
mov
add
jmp
add
addb
lcall
pop
nop
push
dec
dec
pop
cmp
jb
push
dec
ror
sub
pop
xor
push
dec
pop
jmp
mov
push
inc
sub
rol
pop
add
push
add
sub
pop
movzwl
push
lea
sub
lea
pop
mov
add
push
not
shr
pop
mov
push
inc
xor
pop
xor
xor
push
sub
add
sub
add
pop
shl
push
push
call
iret
push
add
add
jle
pop
add
add
xchg
pop
add
les
data16
hlt
iret
je
in
push
cmpsb
add
add
add
xchg
stc
stc
pop
jae
pop
add
cmc
add
add
hlt
lea
fimuls
pop
xor
push
push
lea
push
push
push
push
lea
push
push
lea
push
push
call
jnp
mov
add
add
push
add
pop
add
cmpsl
push
jno
add
jae
add
out
mov
add
jle
push
out
add
push
add
add
jb
pop
scas
out
in
jbe
xlat
add
lret
jne
out
fiaddl
aam
add
nop
add
outsl
fcmovb
add
pop
les
add
add
sahf
jne
add
sub
loope
push
push
push
push
push
push
push
call
mov
outsl
add
mov
repnz
mov
cmpsb
enter
mov
add
nop
push
add
add
add
in
flds
lods
outsl
mov
fmul
mov
add
add
add
add
roll
repnz
jnp
mov
add
mov
add
outsl
xchg
add
mov
in
enter
les
dec
nop
add
inc
out
mov
mov
pop
shl
xor
push
not
dec
sub
not
pop
mov
push
push
push
push
lea
push
push
push
push
push
lea
push
call
mov
popf
pushf
add
add
mov
jmp
divl
fiaddl
add
add
test
shl
jno
mov
add
mov
add
scas
add
popf
add
add
fiaddl
popa
add
pop
add
push
lea
push
lea
push
lea
push
lea
push
push
push
push
call
pushf
fcmovb
add
add
pop
add
ficompl
add
add
add
test
cli
jecxz
pop
fcomip
jns
lahf
mov
add
test
lock
rclb
jnp
add
cmpl
stc
add
ljmp
add
add
cli
addb
mov
mov
lea
pop
pop
push
push
push
call
je
popl
add
cmc
cmpsl
mov
incb
add
in
mov
add
jno
aad
add
mov
test
add
jo
add
jne
xchg
add
pop
add
add
pop
outsl
add
add
mov
neg
shl
out
bound
imul
mov
add
add
pop
pop
pop
push
dec
rol
pop
pop
push
lea
xor
pop
leave
push
inc
add
pop
ret
push
push
not
inc
pop
mov
push
push
push
call
in
jle
addb
mov
mov
add
movsl
int
xchg
ficoml
pop
add
add
add
mov
jnp
add
mov
stc
push
push
fdivs
xlat
add
pushf
mov
lea
pop
push
push
push
push
lea
push
lea
push
push
call
int3
add
add
add
jns
aad
clc
into
xchg
add
fistpl
xchg
add
jge
loopnew
jge
data16
add
icebp
in
mov
pop
add
iret
sahf
add
push
add
ret
out
mov
lea
pop
push
push
shr
sub
pop
push
mov
push
add
add
pop
mov
push
push
push
push
push
push
push
call
out
test
xchg
add
add
mov
clc
fisttps
add
mov
jl
add
add
add
mov
add
push
add
rcl
add
xchg
add
pop
mov
push
sub
pop
test
je
push
push
lea
push
push
push
lea
push
lea
push
push
lea
push
call
cli
add
add
sbb
testl
ret
mov
add
mov
pop
add
sti
in
fs
rolb
add
jo
gs
mov
mov
lea
pop
mov
push
push
push
push
call
add
addr16
add
loop
add
add
add
imul
int
jns
data16
lods
scas
mov
rcrl
fdivs
add
jns
cwtl
add
mov
add
test
data16
std
lea
mov
fldcw
add
add
pop
jno
add
add
movsl
add
fmull
testb
mov
add
push
shl
add
inc
shl
pop
mov
push
lea
push
push
push
push
push
push
push
lea
push
call
clc
test
pop
add
mov
add
clc
repnz
out
les
xchg
xchg
pop
rolb
add
popa
lcall
add
mov
les
dec
or
push
push
push
call
mov
test
add
mov
in
fiadds
shl
hlt
add
stos
add
stos
mov
scas
add
add
xchg
add
mov
shlb
add
pushf
push
addr16
loopne
popa
into
lea
mov
enter
mov
add
out
in
lret
add
cld
out
gs
xchg
int
mov
pop
fildl
add
mov
add
stos
fdiv
mov
lea
pop
mov
push
sub
ror
sub
pop
inc
cmp
je
push
lea
push
call
lods
gs
add
add
call
jecxz
jmp
test
xlat
mov
add
mov
add
mov
add
add
jbe
add
addb
add
out
xchg
clc
fs
mov
mov
lea
pop
test
je
push
lea
push
push
push
push
push
call
cwtl
add
add
mov
cwtl
movsb
scas
xchg
add
mov
cmpsl
nop
faddl
add
add
add
gs
flds
addb
fs
stc
add
pop
mov
xchg
add
mov
testb
imul
add
fwait
imul
push
add
add
mov
lea
pop
mov
push
push
push
call
sbbl
jmp
add
aam
mov
add
addl
push
pop
out
xchg
jb
roll
jb
test
mov
lahf
add
jle
add
lods
mov
std
mov
xlat
add
pop
lahf
pop
mov
lea
pop
inc
cmp
je
push
add
pop
test
jne
xor
push
push
push
push
push
push
call
mov
in
mov
shr
loopne
jns
pop
jae
mov
int
add
out
sub
lods
add
lods
scas
icebp
addb
add
add
push
add
add
arpl
fsubr
xchg
repnz
push
push
pop
jo
push
add
add
lods
aad
push
add
push
add
add
data16
xchg
add
add
imul
pop
pop
push
lea
ror
shr
add
pop
pop
push
pop
pop
pop
push
push
push
lea
push
call
jae
test
in
jle
add
fscale
push
mov
add
push
add
add
pop
addb
fdiv
rcrl
insb
testl
fiadds
ja
stos
add
add
add
add
stos
jns
jae
cmc
imul
add
mov
lea
pop
leave
push
dec
add
pop
ret
push
add
add
xor
pop
mov
push
push
lea
push
call
jle
add
test
in
add
cli
add
je
xchg
fildl
xchg
push
add
sti
in
add
popf
lcall
sti
pusha
xchg
fmull
cld
add
mov
jp
add
pop
call
push
mov
lea
pop
inc
push
lea
push
push
call
pop
xchg
rolb
add
pop
pusha
add
jmp
xchg
stos
mov
aam
add
shrl
add
sti
imul
mov
mov
pop
cmc
mov
add
out
into
insb
add
add
add
cmpsl
jnp
out
mov
test
jns
loopw
in
js
add
add
ficoml
add
mov
jne
pop
add
lea
pop
cmp
jne
push
add
pop
lea
push
push
push
lea
push
lea
push
push
lea
push
push
call
add
fdivr
ja
lahf
add
add
add
rolb
movb
jb
ljmp
add
outsl
add
lahf
ficoml
lret
add
add
lret
add
pushf
lcall
add
movl
add
rcrl
add
mov
addb
add
add
push
add
mov
and
popa
add
add
push
lea
push
call
imul
test
mov
add
fiaddl
pop
add
std
popf
add
sti
add
add
jo
bound
roll
jge
add
out
add
add
lret
xchg
pushf
mov
add
add
jns
test
in
pop
mov
mov
mov
push
loopne
test
add
repnz
int3
les
pop
mov
push
rol
inc
pop
add
push
dec
lea
dec
ror
pop
cmp
jne
mov
push
rol
pop
test
je
push
push
lea
push
push
call
xchg
rolb
in
add
enter
into
mov
add
add
rolb
jo
add
add
std
mov
add
cwtl
fnclex
mov
add
mov
add
add
add
xchg
add
mov
lea
pop
mov
push
ror
pop
add
push
inc
not
dec
shl
pop
cmp
je
jmp
push
lea
push
lea
push
push
lea
push
push
lea
push
push
push
call
add
test
lds
add
add
mov
add
jbe
add
add
jmp
add
add
add
mov
add
jl
mov
lea
pop
xor
pop
push
push
push
lea
push
call
jnp
in
lcall
jecxz
test
mov
int3
lods
jl
loope
pushf
add
lcall
insb
mov
xchg
add
jl
flds
enter
roll
add
test
arpl
jae
cld
push
add
icebp
mov
add
mov
jo
lcall
adc
pop
push
pop
pop
push
lea
push
push
lea
push
push
call
jp
sarl
cmc
addr16
add
pop
add
mov
fincstp
add
stc
mov
addb
jmp
add
mov
push
add
add
cld
ja
aam
ljmp
add
pop
insb
pop
cmpsb
add
mov
jmp
test
push
add
out
add
pop
add
repnz
add
jnp
mov
lea
pop
leave
push
ror
lea
pop
ret
push
lea
push
push
push
push
push
push
push
call
imul
into
add
nop
add
xchg
add
add
jbe
add
mov
bound
int
push
outsl
shll
mov
push
ja
add
out
add
add
add
xlat
out
out
add
push
add
les
inc
lcall
lea
push
push
lea
push
push
call
add
fildl
in
int3
push
add
push
aam
divl
add
add
lods
lahf
jl
mov
fadds
xchg
test
addr16
aad
popf
add
popa
bound
add
cld
movsb
add
pusha
adc
pop
pop
push
not
not
pop
pop
push
push
push
lea
push
push
push
push
call
add
jp
mov
add
mov
hlt
pop
fcoms
cltd
add
add
nop
mov
fsubr
add
aad
push
shl
addr16
push
add
mov
lea
pop
leave
push
push
lea
push
push
lea
push
call
mov
in
xchg
add
jo
pop
add
movsb
les
push
add
xlat
imul
lcall
xchg
jbe
pushf
enter
add
jnp
pop
add
mov
add
add
add
mov
add
add
icebp
add
in
fadds
lret
add
data16
add
loopne
mov
lea
pop
ret
push
rol
shl
sub
add
pop
mov
push
push
push
push
push
lea
push
call
add
pusha
cld
push
add
mov
mov
push
add
jbe
cmc
add
in
add
movsl
popf
add
add
stos
clc
enter
mov
add
add
jmp
add
cld
mov
add
add
xchg
add
loope
add
pop
pop
pop
push
push
push
push
push
lea
push
call
out
loopne
mov
add
mov
mov
mov
test
rcrb
movw
add
sti
add
add
test
cli
mov
mov
addb
pusha
shlb
int
add
aad
addb
int3
push
pop
sar
add
gs
add
mov
add
add
popa
sbb
push
push
push
push
push
push
push
lea
push
call
movsl
mov
mov
pop
jle
test
mov
js
mov
aad
add
add
jbe
je
cmc
add
iret
add
add
pop
sti
lahf
xchg
add
add
push
add
jno
add
cltd
nop
mov
enter
add
rclb
xchg
test
in
bound
imul
pushf
add
pop
pop
push
ror
dec
pop
leave
push
add
add
xor
pop
ret
xchg
shll
xchg
loope
imul
ja
xchg
add
jle
je
jno
je
sub
enter
xor
jne
fidivl
sbb
int3
inc
add
mov
insl
fs
cmc
pop
repz
mov
xchg
sbb
pop
addr16
or
xchg
push
dec
clc
outsb
dec
jg
mov
inc
shlb
mov
push
mov
sarl
adc
nop
and
gs
or
mov
lods
sahf
in
loop
and
subl
xor
mov
mov
in
es
mov
inc
stos
enter
push
jp
xor
cld
jne
movb
subb
pop
insl
cmc
repnz
jg
push
into
xlat
les
mov
jne
fld
aad
adc
aad
mov
xor
mov
adc
add
nop
xchg
mov
pushf
fdivrl
test
icebp
out
cmpsl
inc
adc
popa
fucomp
and
jp
lods
test
call
sub
sbb
xorps
inc
std
or
scas
push
je
adc
gs
test
mov
adc
faddp
stc
push
pushf
daa
loope
push
dec
push
xchg
and
xchg
cli
stc
jg
push
imul
adc
sub
mov
adc
ljmp
mov
jecxz
pop
dec
push
ljmp
push
push
pusha
sub
ja
pop
enter
in
or
jb
lahf
testb
decl
into
mov
xchg
push
out
fucomi
rolb
insl
push
and
mov
fidivrl
mov
push
xchg
mov
popl
sbb
adc
loop
loop
push
and
jmp
xchg
pop
pop
mov
inc
testl
sbb
ss
mov
xchg
mov
mov
movsl
ds
jle
jecxz
rcr
stc
push
or
dec
and
jl
popa
jmp
bnd
das
in
jp
arpl
xchg
xor
mov
out
and
push
cmp
mov
mov
adcb
mov
push
outsb
mov
jbe
add
jmp
mul
iret
cltd
imul
mov
jnp
ss
ret
cmovb
shrb
mov
xchg
or
sub
into
jnp
and
call
xchg
cmp
mov
ss
ds
jp
xor
inc
xchg
cmpsl
pushf
jnp
frstor
mov
shll
inc
jl
push
mov
je
sub
jg
in
or
lcall
cmpsb
mov
out
push
std
les
pop
pop
xchg
mov
jl
inc
mov
cmp
out
cmp
jbe
push
adc
sbb
mov
and
inc
dec
sub
cmpsb
jns
mov
xor
insb
das
jbe
inc
std
mov
push
xchg
nop
jmp
in
mov
shrb
lods
pop
sahf
sbb
imul
scas
sub
pop
jne
add
insl
sub
pusha
popa
inc
pop
or
mov
mov
cli
data16
sub
test
sti
cmpsb
lock
sbb
mov
xchg
dec
pop
lods
test
push
xchg
sbb
stos
mov
test
inc
sbb
add
adc
add
fmul
push
icebp
add
mov
insl
insl
lcall
inc
mov
movsb
mov
sti
stos
xchg
and
test
sub
add
sbb
or
insb
mov
rorb
sbbl
call
test
mov
fwait
repnz
aad
mov
xor
sub
xchg
scas
inc
mov
icebp
icebp
mov
out
mov
dec
push
jno
out
mov
push
ss
push
xchg
fsts
ds
xor
cmc
mov
add
scas
xor
jecxz
or
cmc
dec
call
or
inc
xchg
aad
cli
and
insb
jnp
outsb
aaa
and
and
lods
ja
idivb
not
push
pop
rclb
xchg
jecxz
dec
cs
jbe
test
std
popa
jg
cs
lcall
and
sub
xchg
ficompl
pop
xor
cld
jne
mov
jbe
imul
icebp
add
into
inc
dec
adc
add
repnz
bound
cmc
call
aad
pop
int3
rep
inc
insb
rol
xchg
jecxz
ljmp
xchg
push
xchg
dec
and
mov
pop
mov
cs
or
dec
jle
data16
stos
shrl
je
sub
insl
ret
lds
movsb
xor
aas
add
fcompl
jne
fs
shlb
lcall
and
ret
test
xchg
dec
popa
mov
repz
or
lds
mov
and
repnz
push
pushf
jmp
push
or
aaa
mov
adc
pop
jbe
xor
in
pop
movsl
or
jmp
clc
rcrb
dec
jle
xor
mov
aam
xor
scas
cmp
push
stos
test
push
adc
or
inc
stc
pop
cmp
sub
xchg
pop
leave
repz
mov
cld
xor
loope
xchg
cmp
mov
cmp
add
add
inc
fcomps
xchg
sbb
add
inc
jg
loop
aaa
dec
mov
idiv
aaa
out
pop
sub
xchg
rolb
cs
xchg
and
sbb
mov
pop
mov
pop
mov
jp
mov
xor
rorb
loope
cld
int3
fmul
mov
xchg
lahf
and
repz
addr16
pop
push
in
pop
push
cmp
lds
cld
mov
sahf
jle
xor
data16
cmp
mov
xchg
add
testl
in
xabort
movsl
shr
addr16
bound
and
dec
jo
aas
lcall
sbb
jae
in
jbe
bound
cltd
orl
mov
lret
inc
xchg
movsl
ds
mov
or
enter
jne
push
sub
pop
jg
scas
fcompl
mov
ss
mov
js
test
cmc
icebp
sub
es
std
and
out
adc
and
jbe
inc
jnp
sbb
xor
js
xor
stos
add
rolb
test
test
sub
mov
mov
mov
mov
sub
sbb
les
sub
pop
aaa
in
dec
das
pop
mov
jg
mov
fstps
orb
and
adc
int
lret
pop
and
add
mov
xor
fcomip
icebp
sub
mov
pop
adc
outsl
add
gs
in
xchg
les
adc
pop
push
push
xorb
popa
icebp
pop
fildll
arpl
adc
aad
ficomps
insb
or
cmp
int
and
bnd
rcr
loope
or
out
cli
pop
outsl
push
je
popf
xor
jb
rolb
xor
xchg
pminub
xor
test
subl
mov
cmc
clc
inc
inc
push
cld
push
mov
testl
data16
scas
sbb
dec
pop
mov
test
dec
lcall
xchg
int
lea
xchg
push
push
icebp
addb
test
shl
loopne
cltd
mov
sub
and
cmp
sbb
in
rolb
mov
ficoml
push
jns
fimuls
ret
fidivl
and
pop
dec
adc
add
mov
stos
lret
cltd
cwtl
in
cmp
cmp
aaa
fiaddl
ficoms
jecxz
scas
lcallw
push
lcall
bound
sbb
pop
lds
rcr
push
inc
cmpsb
inc
push
dec
fdivrs
inc
in
ret
nop
mov
inc
jb
cli
jp
in
lret
xchg
push
adc
xchg
adc
loop
stos
adc
xor
mov
and
std
sbb
lods
test
pop
mov
je
or
push
jge
shll
push
xchg
inc
je
pop
je
add
mov
repz
cmp
pop
loop
adc
xchg
int
flds
loop
gs
pop
cmp
test
pop
divl
push
dec
in
test
and
jb
aas
jb
xchg
inc
lret
repz
add
cmpps
fisttpl
inc
fxch
mov
imul
sub
aaa
xchg
stos
mov
xchg
adc
sarl
jno
outsb
jnp
cmpsl
sub
mov
divl
mov
pop
mov
insl
sarb
lods
xchg
movsl
lock
add
jp
sub
stc
mov
inc
mov
ds
and
cmc
dec
jnp
adc
shlb
out
cwtl
mov
xor
lcall
mov
xlat
ljmp
push
negb
add
jl
rclb
lcall
loope
popa
ret
aas
clc
and
jno
and
mov
xchg
js
cmp
out
mov
cltd
ret
data16
push
inc
sub
pusha
or
popf
jno
inc
daa
int
jecxz
insl
ljmp
pop
je
mov
out
jge
xor
mov
inc
ret
mov
dec
jecxz
or
pop
and
and
push
mov
push
pop
ja
loopne
inc
jnp
outsl
push
icebp
xor
out
jb
adc
enter
cmpsl
test
test
xor
stc
jg
test
das
xchg
pusha
mov
cmp
xchg
mov
xchg
in
into
jae
xchg
movsb
fildll
mov
mov
das
dec
outsl
mov
and
mov
adc
or
fwait
jbe
call
ds
xor
xchg
inc
push
mov
cwtl
push
jmp
sti
xor
repz
add
cli
bound
das
pop
clc
mov
imul
int3
int3
mov
fstl
cmp
mov
mov
jns
xchg
jns
xor
sbb
add
cmp
sbb
jns
mov
xchg
jle
add
into
mov
dec
sbb
aam
jnp
and
ret
jecxz
rolb
jae
addr16
daa
inc
scas
mov
stc
aam
movsb
inc
mov
mov
inc
sbb
and
mov
or
jns
cltd
pop
sbb
sbb
push
xchg
fs
dec
dec
and
push
xor
les
movsb
int3
or
hlt
scas
imul
sbb
jle
in
in
jns
xchg
push
aam
sti
test
aaa
mov
aaa
cmp
push
loopne
sbbl
sbb
rorl
mov
repnz
xchg
jae,pn
add
bound
jb
inc
shlb
mov
ss
adc
xchg
cwtl
cmp
mov
sarb
cmpsl
xor
fisubrl
int
cmp
push
test
or
out
jne
fcompl
inc
sub
and
stos
fistps
xchg
jo
mov
sub
cmpsb
inc
inc
jnp
js
fwait
subl
out
imul
das
out
and
scas
add
sbb
jp
ja
jmp
int3
jo
mov
cmpsl
testl
sbb
jne
and
cli
mov
fdivrs
arpl
sbb
int3
mov
lock
and
jne
and
mov
mov
dec
xor
sbb
sub
pop
stc
mov
mov
faddl
pop
jo
imul
mov
pop
repnz
ss
lea
lods
int3
inc
mov
cltd
fwait
imul
not
or
dec
mov
push
mov
jbe
and
pushf
repz
jae
int3
mov
inc
lcall
lods
mov
cmp
sahf
imul
fsts
and
pop
lahf
mov
cmp
mov
enter
mov
cmp
into
push
pop
lret
cmpsl
and
sbb
dec
rorl
leave
push
cmp
xchg
pop
out
adc
xor
mov
or
scas
push
fmuls
repz
sbb
cmp
and
jg
andl
jb
in
push
jno
jns
mov
cld
mov
pop
js
adc
add
mov
shll
repz
lods
lret
cltd
cmp
ret
hlt
incl
ret
test
mov
loopne
pop
cmpsb
lods
push
sti
mov
mov
daa
fidivs
rcrb
jecxz
pushf
jns
xchg
sub
aas
and
cmpsl
lret
loop
mov
insl
inc
notb
outsb
pop
sub
loopne
insl
cmpsl
push
repz
popf
rcll
sarl
shrb
cltd
mov
cli
jmp
shrb
jmp
and
into
imul
ficompl
adc
dec
icebp
mov
ja
jnp
push
xchg
sbb
imul
mov
mov
cmp
lock
jp
cmp
ret
fcoms
xchg
aad
jno
in
xchg
or
adc
sbb
mov
aas
mov
repz
scas
add
insb
pop
jle
mov
popa
push
fisubs
shl
push
or
cmp
add
or
testl
push
sub
pop
mov
in
push
pop
sub
adc
std
mov
add
jg
mov
cmc
jge
mov
jle
xchg
les
rcrb
icebp
fisttpl
dec
fildll
cmp
xchg
sbb
sub
fwait
xchg
lcall
out
sub
rcr
lret
loope
mov
pop
fdivp
adc
push
xor
andl
push
mov
and
xchg
gs
and
das
lea
sbb
pop
push
stos
fsubrl
sbb
leave
maxps
dec
cltd
rol
mov
jno
cwtl
pop
and
aad
inc
fs
test
call
mov
aas
imul
xorl
adc
pop
dec
inc
add
xchg
imul
push
rcl
push
xchg
xlat
or
lret
mov
jge
scas
sti
sub
sbb
dec
loope
xchg
test
sub
ja
in
push
adc
xchg
pop
aas
lret
xor
inc
fnsave
lock
scas
jns
stos
and
fwait
inc
sub
xchg
mov
jmp
sub
push
test
cmp
jmp
sarl
push
jmp
in
mov
bound
push
push
sub
test
xchg
mov
bnd
mov
arpl
cld
test
sub
jbe
in
addr16
mov
mov
scas
xchg
in
mov
add
lea
repz
ret
lcall
push
outsb
mov
mov
inc
jo
leave
sbb
std
jmp
lret
out
in
subb
test
fsubrp
push
stos
ror
mov
cmpsl
sbb
pop
hlt
lret
test
sahf
pop
jbe
pop
push
test
lcall
rcl
mov
cltd
push
sub
adc
gs
sbb
icebp
fwait
mov
xor
push
xchg
cmp
dec
sub
shrb
sar
enter
cmc
or
push
data16
arpl
sub
and
xchg
data16
push
int3
mov
xor
fimuls
je
xchg
in
cwtl
stos
ljmp
mov
out
jg
pop
outsb
mov
ret
adc
cmp
inc
in
sub
mov
dec
mov
stc
fisttpl
push
in
push
in
shl
fistl
dec
fwait
sarb
in
sub
xchg
inc
sti
xchg
and
pop
mov
cld
mov
das
mov
fsts
out
in
mov
fists
lret
stos
mov
xchg
icebp
mov
or
add
cmc
sar
xor
push
cmp
aad
loop
in
push
mov
cmp
out
mov
jno
nop
bound
xor
movsl
push
in
add
sbb
or
imul
les
push
sub
insl
cltd
mov
sub
pop
dec
lds
rcll
leave
mov
cmpb
rcrb
je
or
aad
pushf
and
and
pop
aaa
rcl
je
out
mov
mov
xor
imul
mov
testl
into
mov
ret
lods
xchg
cwtl
fimull
sbb
sbb
repz
fdivs
mov
aas
pop
mov
ret
ljmp
outsl
jge
cmc
mov
jp
test
repz
pop
pop
or
xlat
or
or
inc
add
add
loopne
nop
pop
js
cld
outsb
nop
sub
scas
dec
push
mov
or
inc
dec
and
cmc
push
cmp
loopne
or
inc
int3
ficoms
jl
push
push
cld
mov
jecxz
gs
mov
push
push
sbb
hlt
insl
pop
scas
fldl
out
int
cwtl
ja
mov
inc
inc
outsl
mov
nop
add
bound
imul
lea
pop
fdivr
jge
add
cli
jno
cmpl
add
std
rolb
push
xor
cwtl
mov
pop
movsb
aas
rorb
sbb
inc
or
cmpl
mov
xchg
cmovl
pusha
xor
lcall
sub
xor
clc
jecxz
aaa
std
add
add
fs
xchg
outsl
sub
jge
outsl
and
add
sbb
jbe
imul
aaa
pop
mov
pop
pop
out
pop
push
fldcw
out
xchg
add
or
cwtl
cmp
shrb
pop
filds
jecxz
pop
xchg
inc
push
push
xchg
jbe
xchg
sbb
cld
mov
mov
or
mov
out
loop
sub
ljmp
insb
sbbb
mov
hlt
cmpsb
out
lods
icebp
out
sti
in
lret
imul
inc
dec
mov
sbb
ficompl
sbb
loope
dec
addb
and
fcoms
inc
ds
loope
insb
jle
lahf
repnz
gs
fisubs
xor
cmpsb
aad
mov
rcll
pop
out
xchg
loopne
iret
movsb
sbb
daa
sbb
jno
arpl
pop
pop
in
sbb
leave
push
out
adc
cmc
pop
cmp
dec
jno
push
push
lods
sbb
sub
scas
mov
mov
fstpl
stc
ret
pusha
ja
dec
gs
les
int
xchg
jmp
inc
cmpsl
cmp
pop
sbbl
lret
dec
mov
lock
push
mov
lds
cli
fcoms
fcoml
inc
nop
inc
pop
lret
mov
add
jnp
cmp
jo
pushf
pushf
icebp
mov
dec
js
scas
popa
adc
fists
xchg
insl
test
add
cmp
sbb
adc
movsl
outsl
insl
fisubrl
lahf
inc
jl
mov
mov
mov
add
shlb
addl
inc
fidivrl
movsb
cmpsl
mov
or
jl
cmpsb
pop
gs
xchg
lcall
insb
jmp
cmp
adc
mov
cltd
adc
ficoml
daa
out
movsb
sub
sbb
scas
repz
outsb
scas
push
lcall
or
in
xchg
pushf
fstpt
in
pop
cmp
pop
pop
mov
pop
mov
sbb
dec
repz
mov
xor
dec
subl
add
jae
repnz
mov
jo
int3
sub
lock
push
fsubrl
fbld
jle
shr
xor
sub
sbb
jnp
pop
jmp
jbe
aad
movl
sub
test
xchg
or
cmc
pop
loop
lahf
adc
or
popa
adc
es
arpl
mov
add
fld
test
sti
stc
mov
out
xor
jo
notl
shl
ret
push
hlt
loope
and
icebp
mov
fnstsw
leave
ret
jno
xchg
test
fcoms
ja
jae
sti
les
pop
out
int
jb
jns
les
and
add
mov
adc
xchg
cmp
jbe
push
mov
push
sbb
lcall
lahf
push
add
mov
fcoml
jmp
pop
les
and
jp
hlt
xchg
dec
lea
jg
notl
in
in
inc
fimuls
leave
into
inc
scas
das
jo
fidivl
sbbb
adc
int3
test
not
pop
cmp
in
fidivl
pop
lea
in
repnz
mull
mull
mov
push
test
pop
test
repnz
push
mov
sar
xchg
aam
cmp
sbb
and
push
idivl
jg
clc
ds
fldenv
push
ja
icebp
fimull
aam
adc
mov
stos
pop
movsl
imul
sbb
test
and
iret
sar
inc
and
inc
pop
std
pushf
pop
aad
inc
adc
push
pop
jg
push
cmc
xchg
sbb
dec
shl
hlt
es
cmp
jp
sbb
pop
dec
or
mov
fnsave
repz
dec
inc
sbb
mov
pop
sbb
lahf
stos
mov
stc
pop
push
jecxz
lea
push
dec
or
sbb
sub
cmp
xchg
xchg
and
out
popf
lahf
xlat
int3
scas
cmp
or
pop
cmp
in
cmp
icebp
lret
mov
and
mov
pop
js
jno
ret
roll
cmp
xor
in
xor
pop
cmpsl
adc
add
lods
fs
scas
ror
test
inc
cmpsb
loope
stc
loopne
out
sbb
mov
out
sbb
xchg
pop
xchg
dec
test
movsb
inc
pop
xor
push
adc
out
dec
jl
repz
stos
inc
and
dec
jbe
inc
js
sub
sub
xor
inc
inc
mov
adc
ret
call
ficoms
outsb
mov
inc
adc
fistpl
cmpsb
adcb
lods
repz
jno
lcall
nop
int
fldenv
xchg
dec
adc
dec
xchg
shr
add
cmp
dec
decb
movsl
mov
test
test
push
bound
dec
pop
dec
sti
insl
aas
js
inc
cmp
xor
cmp
mov
cmp
jne
rcl
repz
imul
cmc
push
negb
stos
push
in
push
imul
xchg
lods
loopne
mov
sti
cwtl
adc
jbe
mov
lret
sub
mov
bound
incb
mov
xchg
xchg
adc
mov
lods
hlt
push
test
cmp
cltd
inc
mov
xor
hlt
fimuls
push
mov
adc
cmpsl
scas
mov
mov
das
sbb
aad
xchg
call
pop
loop
ret
sbb
jo
mov
enter
sbb
imull
inc
decb
dec
mov
sbb
add
or
sahf
jg
mov
jb
dec
inc
and
addl
inc
xor
rcrl
arpl
adc
and
arpl
nop
fwait
pop
mov
jge
xor
imul
and
dec
add
loope
loope
or
pushf
hlt
faddp
enter
jns
shll
pop
adc
xchg
add
cmp
aaa
mov
cmp
ds
fiadds
mov
nop
push
mov
roll
fldl
mov
scas
dec
imul
stos
std
jns
sarb
bnd
xor
push
dec
arpl
in
push
arpl
mov
movsb
mov
push
sbb
stc
aam
aas
test
dec
aad
stc
sahf
cwtl
dec
lods
notl
inc
cld
outsl
jae
lock
push
lea
ret
dec
repnz
jecxz
adc
dec
call
loopne
int
int
push
stos
mov
xchg
dec
repnz
mov
popf
test
mov
jae
xorb
setno
mov
and
sbb
out
jl
sbb
jbe
or
mov
xchg
sub
fiaddl
js
ljmp
stos
or
icebp
leave
lds
not
js
add
sub
rcrb
popa
add
cmp
add
pop
shl
bound
mulb
fmul
cs
cmp
clc
xlat
mov
push
das
fwait
inc
push
sub
cltd
dec
outsl
push
inc
out
fs
out
jle
push
push
rcrb
in
cmp
flds
ds
int
loopne
scas
xchg
sub
popa
or
xor
mov
in
cltd
mov
pop
pushl
clc
lock
jmp
mov
lds
mov
jmp
mov
jecxz
frstor
xor
sti
push
arpl
fwait
push
jmp
scas
hlt
into
sti
in
push
mov
jae
jne
and
andb
and
rclb
push
rclb
lods
dec
jne
mov
imul
push
push
adc
test
not
add
sbb
scas
or
std
push
mov
aad
leave
mov
xor
inc
out
jle
xor
lea
push
ret
dec
add
or
mov
jns
and
out
mov
pop
and
rorb
push
repz
rol
and
mov
adc
or
leave
cmp
dec
pop
jo
lahf
mov
in
test
xor
pop
adc
xchg
mov
repz
pop
loope
sbb
push
lock
lcall
xchg
test
dec
sbb
xor
fldlg2
mov
mov
addl
sti
in
jge
xor
sub
ret
cs
out
xor
lods
lds
mov
imul
sbb
in
mov
xor
push
test
in
stos
lret
push
fadds
leave
pop
pop
and
fisubl
neg
and
shll
test
mov
push
and
jo
sbb
sub
jns
mov
pushf
adc
hlt
inc
js
cmp
xor
adc
add
and
sarb
out
mov
rcrb
jae
jae
sbb
mov
push
lret
loop
aaa
add
sbbb
mov
or
je
inc
xchg
aam
test
adc
push
test
out
push
aas
lret
adcl
test
rcr
lea
push
sbb
jb
jl
push
shll
mov
lods
xchg
lds
inc
imul
dec
add
dec
std
pop
aam
adc
das
gs
cmp
pop
inc
rorl
mov
xchg
jg
cltd
push
mov
in
and
sbb
stos
lods
push
xor
inc
adc
iret
in
into
jle
leave
loopne
test
fwait
mov
into
scas
push
mov
lret
rcrb
sti
sahf
or
mov
push
push
add
push
lods
mov
das
cmp
jns
xor
sub
or
cld
testl
repz
movsl
dec
iret
cmp
outsl
xor
xor
pushf
fistpll
inc
add
xchg
int
xorb
mov
inc
iret
mov
inc
push
ret
rcrl
xor
popa
int3
subl
out
mov
xor
bound
dec
jno
push
jne
loop
mov
mov
push
in
outsb
cld
inc
dec
rcl
mov
add
cmc
inc
shll
add
push
mov
xchg
add
push
test
adc
repnz
mov
xchg
xor
mov
mov
pop
fbld
lahf
fs
push
mov
adc
mov
cmp
pop
lret
pop
adc
pop
movsb
lods
sbb
sub
sbbl
fdivrs
sbb
out
mov
mov
dec
jge
js
inc
mov
add
jmp
andb
into
dec
pushf
cmp
jle
mov
out
cmp
jmp
subl
cmp
inc
in
fs
dec
enter
xchg
mov
push
insl
ret
ss
pop
xchg
mov
mov
ss
push
mov
sbb
xlat
popf
push
and
add
clc
outsb
xchg
sub
sub
ljmp
fldt
std
imul
adc
movsb
out
and
fisttpll
in
push
das
mov
cmp
out
adc
push
mov
push
outsl
loop
xor
mov
or
mov
mov
in
mull
mov
or
nop
push
fwait
insl
addr16
pop
mov
mov
mov
cmpsb
rorl
mov
xor
and
inc
and
push
cltd
rcrb
aas
add
js
sub
jnp
inc
ss
rorl
icebp
adc
hlt
in
xor
stc
jb
add
mov
push
adc
fdivrs
out
sbb
jle
push
cmpsl
mov
and
mov
inc
insl
mov
hlt
orb
sub
and
mov
enter
iret
push
cmc
push
xor
out
rorl
icebp
das
jg,pn
mov
xor
scas
ljmp
xchg
inc
scas
divl
and
cmp
call
rorl
dec
mov
jnp
sub
add
cmp
add
inc
rol
pop
inc
mov
pop
inc
cmpsl
cmp
jno
dec
xchg
push
xchg
cmpl
negb
out
or
sub
sub
scas
xchg
pop
sub
mov
sub
js
out
dec
out
jge
outsb
xchg
jge
cmp
data16
imul
in
aam
push
xor
enter
cmp
in
std
pop
push
xchg
adc
inc
cmp
jg
imul
cltd
popa
dec
mov
add
nop
mov
lret
aam
inc
insl
xchg
imul
insb
lods
mov
inc
outsl
cmp
mov
xchg
jl
pop
inc
fists
enter
aas
pop
and
fwait
std
jl
movsl
mov
aaa
cmp
filds
mov
je
mov
jl
das
stos
sub
lahf
or
jp
mov
ficoml
pop
mov
jae
add
das
sub
dec
xlat
scas
sbb
cs
xor
call
roll
cmp
dec
pusha
xchg
negl
or
adc
mov
mov
xchg
fimuls
mov
scas
pop
add
mov
inc
pop
imulb
ss
inc
mov
std
add
cwtl
or
xorb
adc
mov
xchg
push
hlt
incl
push
fistl
mov
stc
nop
arpl
mov
pop
lcall
pop
in
sub
xchg
pop
dec
mov
movsl
stos
mov
sbb
xchg
jmp
cs
push
cmc
scas
dec
cmc
adc
xchg
inc
and
pop
data16
push
stos
adc
inc
cmp
cs
cmp
inc
fimull
mov
mov
mov
cmpsl
pushf
and
mov
jp
ljmp
sti
pushf
iret
pop
enter
sti
fdivl
repnz
jmp
dec
imul
jnp
rcrl
adc
stos
mov
mov
sbb
mov
movsl
cmp
in
loop
mov
dec
lahf
lret
orb
inc
insl
jae
xchg
dec
or
xor
cmpsb
fwait
cltd
outsb
and
test
popa
mov
mov
sbb
scas
fnsetpm(287
inc
jns
lock
lds
sbb
cli
dec
sub
cmp
lods
mov
mov
and
aas
cmc
imul
mov
scas
js
or
mov
xor
scas
push
jns
mov
adc
lahf
sub
fs
jbe
insl
addr16
inc
popf
sub
jg
xorb
and
gs
ja
js
cli
test
lea
stos
in
xor
fwait
les
std
cs
lret
cmp
lahf
pop
push
std
test
mov
push
movsb
jle
cmp
push
pop
mov
push
xchg
inc
popf
mov
push
aam
xchg
jne
aas
jb
cmp
stos
mov
xchg
ficompl
aaa
cmpsb
imul
mov
popa
lahf
ja
ret
imul
dec
mov
mov
xorl
sub
adc
inc
and
lods
aad
pop
xchg
jb
int3
pop
inc
push
or
and
fisubs
mov
stos
pop
loopne
jne
fdivrs
push
add
sbb
cmp
cmp
and
into
and
add
cmp
repz
xchg
icebp
aam
fwait
daa
mov
lods
mov
xchg
adc
pop
xchg
rcr
xchg
sbb
ss
cltd
insl
jge
mov
jmp
dec
lea
data16
int3
inc
imul
inc
cmc
xchg
jg
cmp
sti
inc
fsubrp
fidivrs
loopne
fimull
aaa
jp
movl
subb
fdiv
cltd
insb
xchg
jg
mulb
insb
cmpsb
addr16
bnd
inc
dec
or
push
add
das
dec
adc
pop
enter
mov
dec
clc
mov
adc
push
in
shlb
jecxz
pop
cmc
fnstsw
sbb
iret
cmp
add
and
sbb
rclb
stos
js
mov
sbb
ret
inc
movsl
sbb
cmp
adc
ret
pop
fwait
sbb
scas
in
outsb
es
lock
repnz
sbb
js
dec
push
adc
mov
sub
xor
mov
cmp
lret
push
je
out
mov
test
jo
outsb
inc
movsb
outsl
lcall
sbb
push
mov
or
push
repnz
test
jg
dec
mov
pushf
xor
pop
pop
ret
in
scas
adc
jo
adc
lods
int3
inc
test
icebp
cmp
into
sub
scas
mov
addr16
loope
fisubs
jecxz
pop
fwait
jmp
cmc
repz
inc
push
mov
out
jae
testl
movsl
xchg
jl
sahf
cs
mov
adc
loopne
mov
into
cmpsl
add
dec
sti
cwtl
jge
pop
sarl
sub
xor
inc
lret
adc
test
sbb
push
dec
pushf
sbb
ja
push
scas
jp
pop
outsb
mov
dec
pushf
inc
stos
xchg
mov
pushf
push
into
out
fs
adc
aad
xchg
add
xor
sbb
call
dec
in
mov
mov
test
adc
loope
push
inc
insl
lods
mov
inc
test
daa
push
add
and
ror
jle
adc
imul
negb
jg
jge
mov
push
out
pop
mov
loop
sbbl
jns
test
imul
bound
mov
inc
sub
cld
mov
aaa
into
dec
pushf
sub
mov
xchg
test
jo
xchg
sub
std
and
aam
xchg
sbb
iret
int3
mov
xor
or
loop
push
dec
sbb
jno
push
andl
mov
add
mov
jb
adc
mov
mov
or
jp
mov
les
mov
int
lock
cld
mov
rclb
pop
xchg
xor
test
daa
pop
adc
stos
adc
loop
ffree
arpl
hlt
jne
sub
popf
inc
stos
movsb
je
dec
pop
xchg
sub
faddl
cmp
cli
loopne
sahf
xchg
adc
cmpsl
fistps
cmp
aaa
or
mov
imull
jnp
das
mov
sbb
test
jmp
sub
jge
movsb
add
movsl
cmp
mov
data16
mov
push
lds
jg
pop
pop
and
ja
xor
inc
xchg
mov
or
icebp
dec
cmp
popf
unpckhps
sbb
lock
jnp
movsl
jb
out
jle
and
push
inc
push
pop
addr16
dec
mov
sub
popl
mov
enter
repnz
ss
adc
inc
nop
incb
dec
and
les
jno
jmp
dec
xchg
and
fnsave
inc
and
data16
lods
cmp
sub
lahf
push
lock
jg
sbb
xor
push
pushf
outsb
lods
mov
sbb
ret
ss
push
outsl
sbb
call
jne
lods
inc
mov
fadds
aad
push
repnz
push
popa
out
fs
gs
mov
and
pop
les
mov
call
mov
ss
mov
sub
xchg
loopne
cmc
or
inc
or
fcomps
fisubl
jno
sbb
cmovo
imul
in
xchg
jge
stos
in
int
loope
lahf
mov
cmovb
aas
shll
movsw
mov
or
push
mov
adc
aam
sub
ret
sbb
mov
add
cli
xor
ss
lds
pop
shl
mov
cmp
dec
xor
push
mov
cmpsb
sbb
jb
cli
in
inc
loopne
adc
dec
mov
sbb
jl
out
and
push
mov
aas
add
fwait
xor
test
cmp
lods
lcall
xorl
mov
pop
out
lock
adc
ret
and
out
scas
fmul
ret
stos
rcrb
movsl
cmpsb
out
mov
ror
jg
add
xchg
repnz
shlb
cmp
jg
fwait
cld
inc
sbb
pop
in
in
or
loop
cli
jb
or
lret
jo
inc
jne
xchg
push
jbe
enter
mov
repz
pop
dec
outsb
xor
jg
inc
or
dec
daa
les
push
mov
jnp
mov
jl
mov
inc
pop
cmc
mov
xchg
add
and
pop
inc
popa
cltd
cmp
jns
jae
or
loopne
out
dec
in
shrb
inc
nop
popl
mov
loop
inc
push
call
xchg
mov
lret
out
pop
or
aaa
das
in
sahf
mov
insb
dec
jo
lds
pop
sahf
sub
out
mov
push
jecxz
out
add
pop
and
dec
lods
or
sub
sti
bound
cltd
inc
ret
leave
es
popa
mov
orb
dec
fists
jecxz
nop
pushf
xor
pop
addr16
xlat
inc
pop
out
lods
sub
ret
and
cld
or
sub
lea
ljmp
adc
pushf
adc
in
push
out
dec
sbb
add
cs
dec
push
adc
xchg
jne
test
movsl
negl
sahf
icebp
dec
xor
stc
jge
pop
mov
fidivs
scas
bnd
lret
or
stc
pop
sbb
jp
jecxz
add
mov
push
rcrb
es
mov
jne
test
scas
sub
jge
pop
mov
push
cmc
das
cmp
stc
push
or
fstpl
jns
pop
or
sub
cvtpi2ps
sbb
inc
lea
inc
mov
xor
in
jne
and
test
pop
xor
adc
add
jns
cmp
mov
mov
shlb
gs
jnp
into
mov
push
mov
xorb
lea
cld
je
icebp
loop
xor
sub
dec
dec
pop
fsubrs
mov
out
dec
and
xchg
or
mov
mov
leave
ss
jp
addr16
lret
daa
faddl
lret
xchg
pop
aas
int3
sbbl
xor
push
into
movsb
bound
or
addr16
icebp
mov
add
jl
test
aad
fnstenv
sbb
repz
inc
fucomp
loopne
xchg
jns
xor
out
pop
subl
push
sbb
fsubs
sub
push
or
lcall
jl
mov
cs
sub
cmp
lcall
inc
add
into
push
xchg
call
jne
imull
mov
outsl
jl
lahf
leave
sub
and
mov
cld
xchg
scas
scas
int3
enter
outsb
dec
mov
add
pop
iret
push
lods
fmull
fucomi
shll
lret
lea
mov
jmp
mov
jno
loope
jno
outsb
cmp
jecxz
cmp
bound
mov
iretw
mov
lods
fsubr
andl
sub
cwtl
xchg
in
iret
iret
aaa
je
sub
push
xchg
movsb
xor
inc
xchg
xor
pop
loop
sbb
out
cltd
or
jno
scas
pop
xchg
loope
jbe
leave
scas
cmp
cs
test
shrl
pop
gs
popf
fiaddl
jecxz
into
push
mov
cmpsl
lea
push
cwtl
arpl
mov
stos
mov
inc
lea
pop
xchg
inc
lock
ljmp
cmp
mov
fmulp
decl
push
mov
je
pop
loop
xchg
subl
popf
pop
fsubrl
pusha
stc
rcrl
leave
xchg
mov
cli
pop
and
leave
ret
cmp
add
mov
loopne
mov
adc
cmc
loope
test
dec
cmp
sub
subl
test
sub
ftst
test
add
mov
push
mov
aad
jb
es
push
out
in
or
push
into
jg
cmp
in
xor
addb
fdivrl
addr16
inc
or
daa
jmp
sbb
push
inc
scas
movsb
or
repnz
sub
out
imul
inc
pop
popf
adc
hlt
daa
add
js
int
xchg
subl
push
jae
jmp
in
xchg
addr16
fistpll
clc
pop
sub
jmp
aad
jae
mov
adc
xor
cmc
dec
pop
and
mov
mov
jne
fs
mov
jne
popf
cmpsb
test
outsl
loop
inc
mov
int
xchg
mov
jo
jno
mov
cs
insb
into
std
fucomip
jmp
jne
int
xchg
cs
push
adc
test
sub
and
mov
and
lods
or
loopne
out
lods
fcoml
push
jle
lods
or
push
xlat
pop
sub
jg
lret
xor
stos
je
testb
cmp
mov
dec
adc
int
test
xchg
imul
ret
jg
jb
ret
ficoml
jb
or
adc
sub
sub
sub
divl
jmp
call
movb
inc
test
sub
data16
jecxz
movsb
jns
insl
sbb
dec
loop
aaa
xchg
lock
test
mov
psubsb
sub
or
mov
out
and
imul
inc
fneni(8087
in
psrld
aam
or
repnz
pop
lods
xlat
rcrl
dec
cld
jge
inc
push
or
clc
pop
aam
sub
xchg
in
xchg
push
cmc
pop
movsb
adc
adc
in
push
cmp
mov
fwait
jno
lock
scas
pop
ds
inc
mov
leave
cmp
mov
dec
push
sahf
mov
in
rcl
lcall
pop
out
mov
bound
mov
cmpsb
arpl
pop
mov
lds
cmc
xor
lahf
mov
idivl
push
mov
repz
imul
adc
cld
out
lds
mov
cmp
cmp
ret
loop
add
enter
mov
or
jge
imulb
jne
mov
gs
cmpb
mov
pushf
sub
pop
jae
cli
mov
pop
orb
pop
xchg
add
pop
or
xor
mov
cmpsb
nop
cld
sub
inc
sti
sub
jmp
push
xor
gs
out
ljmp
mov
shl
push
inc
cld
sbb
into
outsb
xchg
adc
es
jge
mov
lods
nop
mov
stos
jbe
mov
repz
insb
subl
xchg
enter
sub
mov
clc
int3
pop
clc
sahf
shll
lcall
mov
adc
cld
xor
int
xchg
pop
outsl
add
pop
repnz
rcrl
xor
mov
jmp
pop
lret
out
sbb
pushf
sub
es
pop
cs
mov
fisubl
and
jnp
popf
iret
out
cmpsb
cld
jp
cmc
lock
mov
pop
mov
jo
dec
sti
and
inc
loopne
mov
and
sbb
ret
xchg
xchg
xor
add
call
adc
fisubl
js
adc
push
pop
dec
sub
lea
iret
mov
add
cmp
dec
xor
push
adc
leave
outsl
or
dec
add
icebp
movsb
xchg
mov
in
adc
test
sub
pop
in
ds
push
aam
popf
test
mov
test
xor
loope
dec
aas
addb
mov
mov
scas
adc
mov
jo
pop
js
loop
push
or
cmp
jo
mov
repz
sub
arpl
mov
add
inc
push
xchg
lret
rclb
inc
inc
fistpl
lret
adc
ljmp
mov
jae
popa
push
and
or
pop
arpl
mov
outsl
cmpsb
js
push
mov
stos
dec
les
sbb
lods
stos
mov
and
repnz
outsb
insb
mov
scas
mov
sub
xchg
fldcw
scas
pop
dec
jecxz
push
mov
mov
push
lods
mov
cmpsb
or
cld
lcall
loopne
dec
push
ja
jnp
sarl
mov
and
dec
adcb
dec
dec
adcb
idivb
stos
lds
sar
or
mov
push
inc
xor
lcall
xor
cmpsl
cwtl
popa
xor
xchg
fsubrp
adc
sbb
in
adc
lods
add
addr16
in
dec
mov
xchg
adc
mov
addr16
out
aad
jno
aad
xchg
jl
xchg
jae
fwait
jns
lret
inc
stc
lcall
xor
ss
fisttpl
xchg
jnp
push
or
xor
add
lret
stc
push
jbe
ds
pop
lcall
js,pt
idiv
xchg
iret
addr16
fucom
mov
and
psrlw
push
mov
cs
jl
mov
lock
pop
into
in
mov
jbe
jo
mov
dec
mov
and
outsl
push
mov
mov
inc
or
outsl
flds
int
pop
mov
out
cmp
jo
pop
les
js
pop
mov
cmp
cmp
dec
fldcw
xchg
int3
filds
fldt
lcall
sub
pushf
xchg
cmp
push
add
fstps
jmp
mov
in
push
test
sub
add
gs
jae
sbb
lahf
push
call
sub
jns
jecxz
or
sahf
lcall
cli
fld
dec
mov
mov
and
bound
call
mov
inc
dec
or
pop
lcall
pop
or
in
aaa
dec
adc
neg
dec
divb
sub
loopne
mov
pop
lret
dec
leave
lahf
fstpt
dec
ret
lods
push
and
jmp
fisttpl
pop
leave
loope
xor
pop
cwtl
xor
sbb
jno
fldcw
cwtl
push
test
ds
jno
mov
les
icebp
inc
push
das
or
add
pop
cmp
xchg
pop
clc
loop
mov
xchg
jp
mov
cmp
push
push
lret
orl
xchg
mov
scas
sub
out
pop
xchg
sarb
inc
inc
cld
scas
dec
icebp
dec
jg
loope
in
into
and
out
and
repz
xor
gs
pusha
cs
icebp
popf
ret
lea
cmp
test
test
xor
adc
mov
fnstsw
arpl
and
xchg
jg
sti
add
mov
mov
icebp
cmp
dec
push
enter
mov
in
scas
pop
movsb
add
mov
lcall
das
pop
push
mov
and
test
jge
jge
jo
insb
push
dec
scas
inc
push
cmpb
in
xchg
jp
imul
mov
jmp
and
or
mov
ds
dec
jmp
xchg
movl
in
lahf
aas
mov
test
stc
mov
xor
xor
pop
inc
fstpl
shl
mov
ffreep
cli
push
enter
mov
je
cs
dec
cmpl
in
xlat
scas
push
ds
clc
cmp
dec
ret
aad
fwait
pop
lds
sbb
push
enter
sbb
sbb
stc
gs
repz
inc
fst
jns
pop
and
pop
jl
shlb
cli
xor
cmp
popf
push
mov
pop
cmp
or
xchg
cli
mov
cmpsl
push
mov
pusha
adcb
iret
insb
das
xchg
mov
jge
or
or
shll
xchg
js
mov
mov
out
jbe
popa
leave
add
jmp
jb
cmp
push
xor
dec
stc
pop
mov
jne
ficoms
cmp
pop
fs
aad
xchg
push
or
adc
mov
pop
inc
scas
jns
popf
outsl
cmpsl
fsubl
sbb
push
out
add
xchg
dec
cli
rorb
gs
int3
ud1
xchg
pop
sub
or
icebp
popf
cld
bswap
jle
aas
xchg
imul
mov
hlt
pop
mov
sub
mov
into
mov
pop
shl
shrl
cli
scas
mov
dec
jne
ja
jns
jbe
inc
inc
repz
mov
xchg
push
mov
out
cli
icebp
push
dec
aas
pcmpgtw
dec
jns
orb
and
out
subb
xchg
sbb
fld
ret
jp
aaa
xor
adc
add
insb
pusha
mov
jbe
cld
test
sahf
or
shrl
add
and
mov
insl
dec
add
xlat
cmp
outsb
inc
std
ds
xrelease
and
push
imull
adc
ljmp
jecxz
stos
icebp
subb
into
ficomps
nop
sti
orb
mov
fnstsw
fdivrs
ds
sti
pushf
dec
insl
outsl
add
fsubs
popf
test
adc
xor
into
ja
mov
leave
rorb
xchg
and
ss
and
es
fists
sub
cmpsl
ret
jg
push
fimull
aam
inc
out
movsb
sub
ss
ljmp
dec
mov
sbb
adc
imul
dec
daa
inc
into
imul
or
add
add
fsts
xor
cmp
mov
das
jb
jp
add
add
das
mov
dec
pop
cmc
ret
mov
adc
jae
and
xor
inc
dec
jmp
pop
in
out
in
jp
and
jmp
adc
insb
sub
sub
popa
jg
test
pop
jb
je
or
movb
adc
ja
mov
push
push
in
jb
mov
imul
mov
mov
fildll
and
xor
mov
inc
sbb
lock
mov
mov
sbb
jmp
sarl
sbb
and
jno
imul
popf
inc
dec
in
pop
push
cmp
inc
fwait
mov
xchg
mov
scas
and
outsb
cltd
sub
in
or
rcll
cld
fimuls
lret
rcl
repnz
mov
cmp
mov
mov
stc
popa
div
inc
cmpsb
rolb
lds
jns
sub
test
hlt
or
and
decb
lock
arpl
test
sti
push
add
pop
out
jne
mov
xor
pop
xor
lods
imul
push
inc
lea
aam
scas
lahf
push
ja
inc
push
shrb
jmp
push
xchg
sbb
aad
pop
cmp
aad
push
push
inc
sub
push
push
sbb
mov
mov
addr16
xor
in
mov
push
out
rorb
insb
push
cwtl
xchg
shl
push
cltd
stos
add
je
cld
lods
aas
xor
data16
aas
dec
cmpsb
arpl
add
mov
daa
and
lods
cld
fcoml
addr16
popf
and
mov
ljmp
inc
loopne
mov
fisttpl
ljmp
rorl
dec
or
rolb
dec
sub
push
cld
fisttpll
mov
and
cmpsl
in
pop
push
push
jge
fadds
adc
sub
mov
sub
and
out
mov
int
inc
popa
pop
push
push
dec
lret
sbb
adc
and
sub
push
dec
loop
sbb
pop
insb
xor
jl
fmul
xor
scas
pushf
push
mov
dec
cmc
ja
sbb
addr16
add
out
cmp
shlb
dec
bound
mull
xchg
sbb
and
in
pop
in
jge
lea
or
out
sbb
lcall
lret
add
stos
int
sarl
push
insb
hlt
ret
dec
mov
mov
mov
insl
jg
xchg
and
add
ljmp
cld
mov
aas
adc
test
fwait
cmp
mov
add
pop
mov
sbb
xchg
add
stc
mov
aam
pushf
xor
inc
jecxz
mov
pop
loopne
test
stos
idivl
cltd
mov
into
adc
fmul
adc
or
cmp
dec
jge
mov
jo
mov
out
sbb
and
test
sub
jae
mov
pop
mov
nop
iret
mov
or
int
xchg
mov
and
inc
dec
je
scas
pop
adc
ret
and
mov
rcrl
in
ljmp
out
inc
jmp
bound
sbb
or
rclb
cmp
xor
sbb
jmp
popf
icebp
push
test
mov
jb
xor
add
mov
out
inc
add
aam
push
sbb
mov
mov
or
dec
xchg
sbb
mov
jmp
mov
or
clc
and
arpl
stc
xlat
adc
xor
ljmp
js,pn
aam
mov
pop
test
mov
adc
das
xchg
out
in
ret
xor
enter
jecxz
sar
or
out
push
dec
imul
xchg
xchg
jae
lcall
in
insl
iret
push
out
addr16
or
push
mov
hlt
aas
cmp
in
in
pop
or
mov
cmp
pop
push
pop
enter
loope
popa
mov
repz
jmp
pop
bswap
push
mov
test
sbb
loop
xchg
mov
pop
lock
sbbl
add
lcall
push
xlat
loop
test
popf
sahf
push
ret
mov
aam
imul
and
popf
or
pusha
mov
xchg
dec
dec
out
decl
push
xchg
xor
fldcw
dec
test
pusha
fwait
out
mov
fisttps
repz
lock
jg
xor
pusha
jae
lods
mov
mulb
loop
jne
sub
xchg
sub
iret
cs
aas
aad
out
xlat
sahf
mov
into
add
mov
pop
dec
fistps
sub
mov
fadds
inc
in
sbb
ljmp
mov
int
sbb
mov
lea
lret
lods
ljmp
out
dec
out
insl
outsl
movsb
into
fsubrs
and
mov
movsl
mov
mov
cs
push
push
adc
pop
insl
dec
mov
addr16
cld
outsb
sub
orb
scas
inc
sbb
leave
pushf
lock
ljmp
ret
jg
push
dec
cli
lcall
inc
mov
mov
lods
sbb
dec
adc
sbb
sub
sbb
jg
outsb
xchg
or
je
jmp
and
add
mov
loopne
adc
sbbb
dec
dec
jle
pusha
xchg
add
stc
mov
adc
sbb
pop
mov
sbb
pop
sub
ffreep
enter
sbb
lods
movsb
andl
dec
mov
or
int3
push
ret
outsl
mov
xchg
mov
sub
mov
pop
jo
into
add
lods
es
shl
ficomps
add
inc
cli
fidivs
jge
sbbb
out
aad
aaa
fildll
mov
insb
or
inc
pop
lcall
loope
fstps
mov
repz
pop
adc
sbb
dec
mov
out
mov
imul
inc
out
repz
mov
mov
push
inc
add
mov
mov
cltd
rcl
or
loop
dec
jns
test
call
mov
adcb
push
ss
adc
sti
cmp
in
gs
loopne
cmp
jp
movsb
add
or
pop
nop
sbb
popf
push
sub
mov
xor
aas
cmc
sub
scas
aad
inc
test
fstl
pop
xor
sbbl
or
cli
cmpsb
stc
pop
into
sahf
push
lods
jecxz
pop
jo
repz
xchg
mov
test
shr
dec
das
cmp
xchg
or
sbb
pop
cmpsl
pop
pop
fcomi
cmpl
mov
inc
lods
adc
ret
les
cld
fdivrl
test
fnstsw
mov
inc
in
push
fwait
sbb
cli
and
mov
rcll
lret
aaa
shr
adc
data16
add
test
xchg
out
add
jle
scas
stc
sub
inc
cld
jecxz
xor
fldenv
pop
and
mov
sti
pop
push
stc
lds
pop
jns
add
xchg
pop
loop
mov
fdivl
int3
or
push
int
rcll
sbb
lret
cmp
jge
jne
mulb
lods
ja
and
and
xchg
push
push
and
push
xchg
add
sahf
dec
lcall
push
cli
not
ret
cli
adc
out
bound
fwait
inc
jmp
in
or
jmp
xchg
adc
jns
inc
hlt
shl
testb
adc
mov
cmp
outsb
sahf
lahf
push
add
xor
fisubrs
cmp
push
dec
popa
mov
push
shll
aam
mov
mov
mov
loope
lret
jp
mov
enter
lahf
inc
mov
jne
jecxz
pop
outsl
scas
lret
lret
mov
push
or
in
inc
cmp
adc
cltd
mov
jnp
decl
cltd
cli
jl
jg
movntps
cld
fidivs
movb
scas
clc
mov
out
fildll
icebp
mov
sbb
lcall
outsl
sub
fdivrs
lahf
lea
mov
add
xchg
cmp
adc
inc
jl
mov
pushf
dec
push
push
and
xchg
mov
xor
test
bound
add
icebp
jg
rcrl
mov
or
adc
jg
adc
lcall
xchg
cmp
mov
adc
popa
dec
xlat
pop
aaa
or
or
enter
pop
fwait
fs
filds
pop
cmp
or
lahf
and
outsb
sbb
fimull
push
shlb
lahf
cli
inc
mov
out
push
testb
out
cmp
das
aas
data16
dec
cld
test
outsl
jo
ljmp
or
jecxz
dec
jp
dec
xor
div
push
jg
push
les
xchg
cli
mov
mov
mov
dec
mov
popf
add
mov
adc
cmp
pop
out
ss
repnz
imul
negb
xlat
in
cmova
sbb
xchg
das
es
outsl
or
or
test
mov
bnd
cmp
ljmp
mov
push
mov
mov
repnz
adc
rcll
sbb
push
cmpsl
insl
pop
or
cmp
sbb
mov
sahf
mov
add
mov
cmpsb
jp
sarb
lea
in
jns
addl
push
push
mov
enter
sbb
cmp
xchg
push
movsl
or
outsl
dec
out
mov
xor
sub
add
adc
cltd
wrmsr
xchg
js
xor
jns
jnp
mov
out
outsl
adc
add
cmpsb
dec
sub
sbb
aad
dec
aad
pop
xchg
js
psrlq
adc
cmpsl
mov
xor
and
repnz
push
sahf
fsubl
movl
lret
rorl
rcl
loop
and
out
mov
imul
xchg
into
or
pop
mov
movsb
int
cmp
ds
lret
inc
mov
lret
and
mov
sub
mov
insb
inc
adc
xlat
sti
fisubrl
icebp
dec
or
fbstp
sahf
orl
out
shl
je
mov
incb
int
arpl
insb
lods
xchg
xlat
sbb
adc
out
enter
repz
test
jbe
in
inc
es
loope
adc
cmp
adc
outsl
jmp
xorl
cmp
or
sub
shr
inc
mov
dec
fcomps
cltd
push
int3
push
je
mov
xor
ljmp
and
push
fimuls
sub
inc
lods
cmp
mov
repz
out
mov
out
orl
xor
cld
jnp
pop
sbb
pop
in
cli
cli
in
cmpsb
adc
cmpsb
or
jle
rorl
iret
mov
mov
fistps
mov
outsl
mov
dec
fsts
arpl
cltd
pop
jb
pop
repnz
int3
mov
sbb
xchg
movsl
dec
sbb
inc
mov
sar
mov
dec
or
xor
push
push
adc
mov
xchg
xor
cmp
stos
cmp
fldt
cli
cmp
sub
imul
prefetcht1
loope
arpl
xlat
add
sub
xor
sbb
jns
sub
data16
fmuls
daa
cmpsb
std
jne
lret
adc
sub
inc
rolb
in
mov
test
lahf
jae
adc
hlt
lods
mov
adc
xchg
jmp
popf
scas
jno
int3
sahf
stos
ljmp
and
jle
xchg
push
adc
cmc
adc
jae
insb
xchg
xchg
clc
outsl
xor
push
int
xor
pusha
imul
stc
fucomi
mov
adc
or
push
inc
jo
bound
mov
adc
sub
arpl
lcall
sbb
or
out
nop
add
into
rcrb
inc
jp
lock
adc
xor
lock
aad
adc
in
xlat
sbb
repz
out
sbb
ficoml
lret
popf
cmp
loopne
push
dec
aas
inc
lds
xchg
mov
es
mov
shl
sbb
mov
jmp
xor
in
push
xor
mov
out
cwtl
mov
das
mov
adcl
xor
mov
shlb
xor
xchg
out
mov
out
push
test
pop
bound
cmp
dec
icebp
inc
add
xlat
inc
add
fstl
aad
jp
mov
outsb
xchg
popf
test
fimuls
fnstsw
test
mov
sub
jno
jge
fbld
addr16
shlb
movsl
mov
inc
xor
dec
push
loop
inc
sub
test
inc
insl
aaa
jns
inc
test
test
jecxz
push
cli
enter
scas
mov
jno
icebp
mov
dec
adc
xor
push
mov
mov
dec
mov
mov
and
int3
out
xor
fisttpl
lock
push
cmp
sbb
push
stc
daa
test
pop
xchg
xor
fxch
int
shl
xchg
scas
mov
adc
mov
not
lods
cmp
jg
push
shll
jp
imul
adc
pushf
fs
sub
mov
sbb
lea
adc
fnstcw
fwait
mov
sub
mov
bound
sarb
xor
dec
lret
mov
lods
in
mov
adc
xor
add
sbb
jno
pop
sarb
pushf
mov
sub
sub
out
mov
xchg
jge
js
adc
sub
cmp
aaa
pop
inc
sub
pusha
adc
sub
pop
pop
jge
inc
pop
hlt
jmp
sub
mov
fwait
push
leave
cltd
addr16
pop
jecxz
out
call
mov
leave
aam
and
aas
push
movsb
ficoml
xchg
mull
scas
mov
imul
xor
jno
push
lret
popa
jb
add
or
cltd
push
adc
iret
fsubrl
movsb
adc
push
xchg
insb
cmp
pushf
stos
push
fistpl
ficoml
add
ja
xchg
cmp
cwtl
adc
popa
notb
mov
mov
sub
int
mov
in
scas
sbb
mov
cmpsl
sbb
adc
outsb
stos
test
lcall
xchg
jecxz
mov
shlb
and
insl
cmpsl
sub
aas
and
push
jbe
outsl
lahf
mov
pop
mov
mov
mov
lret
orl
scas
int
cs
xorl
jae
test
lock
mov
inc
mulb
xor
in
pop
test
adcl
popf
cmp
jg
push
sbb
pop
addr16
sub
inc
hlt
lcall
aad
mov
xchg
add
out
rorb
daa
adc
inc
cmp
fdiv
cmpb
imul
testb
add
fsubl
xor
dec
jecxz
dec
aad
mov
daa
mov
cli
nop
cs
enter
cmp
sti
insb
mov
mov
xchg
es
dec
jae
lret
and
sbb
sub
mov
mov
popf
lock
icebp
push
jl
mov
sbbb
mov
sbb
ret
nop
xor
push
out
and
mov
and
mul
int3
scas
inc
popf
aam
fmul
adc
pusha
push
por
jmp
les
xchg
mov
sbb
inc
fcompl
fidivrl
cli
cli
cmp
push
xchg
lea
lods
jge
mov
cmp
movl
and
mov
sbb
sub
or
cltd
push
xchg
je,pn
push
imul
out
lret
push
das
lea
xlat
aam
dec
pop
iret
roll
mov
jns
cmpsl
dec
xor
jo
stos
aad
dec
push
mov
sbb
or
insl
mov
jg
sub
push
xchg
imul
loope
test
xchg
mov
or
loop
or
cmpsb
pop
pop
stos
ret
inc
xor
push
rorb
pop
in
push
sbb
dec
jo
jp
and
cmp
inc
call
rclb
adc
insb
sbb
xchg
adc
cld
rcll
imull
adc
stos
mov
jnp
jb
add
inc
scas
push
daa
out
mov
xchg
mov
ja
dec
cmp
test
pop
sub
gs
mov
test
push
jbe
mov
test
pop
push
cmpsl
inc
xchg
loop
hlt
sti
pusha
mov
cmc
add
pop
outsb
js
mov
ficompl
add
or
aad
or
popa
outsl
sub
and
lea
shll
shll
ljmp
lea
jns
mov
sub
aad
push
dec
xchg
sub
inc
mov
fadds
cmp
xor
jle
call
or
out
loope
out
fwait
cli
iret
push
jl
pusha
imulb
mov
add
sub
out
jp
xchg
inc
or
pop
sbb
jnp
pop
dec
dec
pop
cli
out
aad
hlt
push
mov
loopne
add
cwtl
bound
push
fldl
ret
pop
lods
mov
sbb
das
insl
rorl
call
or
mov
jo
xchg
cs
jbe,pn
daa
cmc
sbb
jecxz
add
add
mov
pop
sbb
jmp
sbb
adc
mov
aad
dec
push
push
dec
inc
in
je
cld
cmp
inc
lcall
jno
inc
js
xchg
dec
xor
shlb
mov
shrl
ds
adc
jnp
lock
or
pop
aaa
scas
inc
jp
cmp
mov
xchg
ds
and
or
adc
lock
pop
jb
xchg
daa
pop
sahf
mov
cltd
outsl
xchg
ret
inc
pop
sub
dec
or
js
jmp
fnstsw
mov
mov
mov
sub
out
insb
aad
jge
cli
sbb
jae
sub
push
das
cmp
sbb
fistl
hlt
push
sarb
mov
mov
mov
jae
les
xor
sbb
and
out
sbb
jecxz
aas
decl
iret
xchg
adc
into
cs
jnp
push
dec
or
inc
out
sahf
icebp
mov
in
pop
sbb
add
jmp
roll
push
xchg
lea
movsl
push
inc
mov
jne
mov
imul
leave
lock
cmp
aam
in
je
pop
mov
dec
sbb
sar
fxam
sub
fisubs
adc
ret
push
inc
movq
dec
repz
cmc
jg
xor
test
nop
dec
iret
push
adc
add
fnstcw
xchg
js
mov
sub
dec
mov
and
shrb
fwait
push
xor
pop
jb
xchg
push
call
and
leave
add
jg
mov
jnp
and
sbb
imul
ss
sub
scas
sub
addr16
rolb
add
js
mov
sbbl
pop
sbbb
popf
cltd
or
hlt
jnp
push
jecxz
rorl
and
jge
ss
push
add
jg
dec
ret
sarb
lea
cltd
out
mov
push
out
dec
cmpsb
clc
push
aaa
nop/reserved
inc
pop
inc
fcompl
cmp
add
jno
in
les
and
xor
mulb
out
imul
dec
fsubrs
mov
and
adc
and
mov
jge
xchg
incl
or
mov
jnp
fnstsw
dec
inc
xchg
ljmp
push
jnp
lahf
test
jge
sub
mov
pusha
xchg
negb
inc
push
lret
and
mov
movb
jno
xchg
push
sbb
pushf
jmp
jmp
shll
xor
je
lahf
mov
out
ret
mov
fistps
incb
jo
jmp
add
fcmovb
out
sbb
inc
cmp
lods
pusha
out
push
xchg
mov
daa
xor
jecxz
mov
aaa
pop
pop
je
mov
add
pushf
push
arpl
enter
test
xlat
inc
test
pushf
xchg
mov
mov
mov
out
int
sub
imul
scas
jne
cmp
mov
hlt
sbb
cmp
push
popf
dec
sbb
lock
xlat
cs
ficoms
xchg
mov
jae
xchg
stos
inc
or
inc
imul
xchg
out
nop
sahf
push
dec
mov
imul
xchg
std
ret
pushf
jecxz
add
in
popf
lret
adc
mov
daa
and
and
insl
mov
mov
sbb
stc
xlat
mov
subb
adc
stos
push
add
inc
add
rol
inc
ret
mov
cltd
and
hlt
adc
cmpl
fdivrs
mov
sub
ret
sbb
xchg
les
inc
mov
fstps
and
xor
out
adc
aaa
push
out
rep
movsb
aaa
sub
fidivrs
repz
pop
jo
push
cmp
xor
fidivrs
sti
fisubl
sti
mov
mov
xor
xor
jg
pushf
mov
outsl
adc
jmp
jge
shrb
pop
and
push
push
or
jmp
insb
pop
pop
fistpll
mov
jno
aaa
inc
adc
in
push
loop
outsb
adc
fcompl
arpl
or
out
ja,pn
adc
sti
or
inc
repz
insl
jnp
outsl
incb
sbbb
sub
pop
in
pop
testl
scas
jb
leave
sbb
arpl
rcl
mov
ss
adc
push
push
jle
pop
adc
out
jnp
addr16
mov
jns
xor
insb
enter
les
lods
or
adc
pushf
in
movsb
push
jbe
xchg
jp
sub
adc
and
sbb
repnz
lods
ljmp
pop
jne
push
cld
xor
sbb
or
ret
pushl
aas
out
lds
jns
into
lcall
iret
sbb
mov
loope
ret
out
insl
lcall
xchg
cmp
sbb
idivb
std
jne
mov
mov
mov
lret
mov
sub
jbe
in
gs
sbb
mov
pop
jge
mov
fstpl
jno
jbe
sub
bound
call
into
movsb
pop
jns
or
movsl
roll
in
ljmp
inc
push
sbb
mov
imul
repz
lods
outsl
mov
sub
imul
cmp
xchg
nop
loop
add
les
mov
into
imul
pop
cltd
adc
lret
test
test
mov
adc
pushl
rorl
cltd
push
pop
or
stos
jno
mov
out
cmc
js
sub
cmp
les
lock
les
add
jp
sbb
cli
jb
dec
imul
or
or
sar
dec
outsb
in
out
iret
inc
arpl
mov
sub
imul
loope
insl
cmp
pushf
adc
cmpsl
cmp
or
mov
xchg
fcompl
lret
and
adc
call
jge
fistpl
fs
dec
lcall
mov
mov
pop
sbb
push
mov
mov
in
add
cmpsb
cmp
xlat
stc
arpl
inc
sub
aam
hlt
adc
adc
jg
lods
jns
dec
loop
mov
pop
ret
or
je
xor
into
push
mov
xchg
int
rcll
imul
cli
dec
sub
jl
out
add
loop
leave
jge
fdivl
pop
inc
scas
ljmp
sahf
xor
stos
dec
fsubs
and
loope
push
ljmp
dec
pop
mov
add
push
mov
mov
loope
mov
aam
je
loopne
xlat
mov
xchg
test
sub
mov
rorl
rolb
test
rclb
mov
fdivrp
mov
push
imul
in
outsb
dec
scas
inc
jns
adc
push
xor
xchg
adc
bound
sbbl
pop
add
ja
xchg
shlb
dec
adc
push
push
lea
shrb
iret
mov
or
imul
jb
push
imul
or
push
pusha
mov
imul
jne
insb
fmul
or
add
jne
add
neg
outsl
cli
jno
repnz
sbb
jg
sbb
insb
xor
adc
add
push
and
hlt
movsl
stos
mov
push
fiaddl
ror
push
dec
inc
sub
jge
or
outsb
jnp
sahf
lock
popa
les
inc
mov
adc
sbb
fcomps
in
aas
sbb
mov
dec
outsl
jmp
jb
lcall
or
bound
clc
jp
mov
or
adc
ss
icebp
iret
mov
fdivrl
mov
jnp
cmp
enter
fcmovnb
xchg
dec
pxor
cmp
adc
inc
pop
insl
rorl
lret
sti
mov
clc
ds
push
aad
mov
jo
add
and
scas
or
test
lds
mov
sub
pop
push
pop
fwait
repnz
cmp
pop
xchg
mov
sbb
cmp
scas
inc
xchg
dec
sub
mov
in
sub
hlt
pop
shlb
mov
std
push
sbb
jno
ljmp
xchg
push
xchg
fcoms
push
mov
enter
int
mov
lret
sbb
xor
pop
inc
aam
sub
fdivrl
jno
ret
testl
rol
sbb
mov
adc
mov
repnz
jg
push
pushf
aam
test
repnz
pusha
jg
hlt
aam
fmuls
mov
cld
mov
mov
bnd
addl
push
jbe
in
shlb
push
xchg
fdivrs
cmc
or
dec
mov
mov
repz
lahf
daa
movl
add
push
xchg
push
adc
ret
xor
mov
fwait
fwait
scas
sub
and
mov
jmp
and
pop
or
pop
jl
xlat
and
out
push
xor
fistl
aas
push
aaa
ljmp
push
insl
sub
xchg
xorb
jmp
or
xor
mov
bnd
sub
addr16
mov
or
dec
dec
pop
xor
xor
push
ret
movsl
femms
lahf
dec
or
outsl
and
gs
jae
or
or
xorb
sarb
repz
aas
lods
cmpb
xchg
pop
rcl
sbb
dec
rcr
pop
cli
mov
sbbl
xlat
outsb
jmp
dec
insl
push
or
rcr
xor
xchg
out
int
lock
push
dec
and
gs
daa
outsb
js
jnp
dec
jne
shl
sbb
jb
mov
lods
pop
mov
cltd
xchg
and
sbb
push
dec
popf
xchg
xchg
adc
popf
leave
test
sahf
pop
fwait
test
push
mov
pop
fiaddl
or
sub
in
test
jbe
push
lret
into
adc
xchg
xchg
adc
enter
dec
movsl
ljmp
mov
mov
movntq
xor
pop
pop
pop
push
mov
push
data16
bswap
xchg
mov
lds
mov
scas
mov
das
rcl
imul
fidivrl
xorl
jmp
inc
dec
out
stc
push
ss
xor
mov
add
dec
xor
es
repz
gs
mov
stos
adc
xchg
mov
out
xchg
push
fcmovne
xchg
xor
dec
mull
ret
push
lahf
or
cmc
lods
pop
push
sahf
pop
mov
mov
mov
bound
gs
imul
mov
in
imul
stos
xor
lods
fsubl
add
ficoms
jp
jmp
in
fmul
adc
mov
je
in
pop
ja
adc
push
jecxz
or
and
in
icebp
andl
inc
ror
jo
and
mov
rorl
fs
cli
sahf
sub
pop
xchg
loop
fisttps
outsl
scas
arpl
jl
arpl
les
push
push
dec
dec
sbb
cmp
imul
jns
repnz
fldcw
push
or
or
push
push
movsl
xchg
mov
in
bnd
test
dec
inc
jo
stos
cmovge
leave
int
pop
mov
mov
xchg
jns
and
sub
std
int3
pop
nop
inc
pop
rorb
cmp
add
adc
mov
out
push
jge
cmp
test
outsb
push
mov
mov
xor
xor
pop
cmp
jge
adc
push
out
mov
mov
fucom
out
je
nop
and
sbb
pusha
mov
mov
push
push
aam
es
idivb
push
cmp
inc
das
push
test
dec
aad
xlat
aad
cmp
test
test
add
mov
in
icebp
sbb
lret
lcall
movsb
movsl
orl
nop
int3
cmp
loope
xchg
daa
aam
int
lcall
jmp
fistpl
push
ret
cmpl
ds
inc
mov
adc
push
or
test
or
push
ret
pop
idivl
jl
pop
mov
cmp
add
test
push
and
xchg
lahf
into
xlat
push
mov
inc
lret
pop
add
repnz
mov
call
icebp
xchg
xchg
mov
es
add
add
mov
or
stos
mov
and
jge
sahf
dec
pop
repnz
sbb
ret
xor
add
mov
lods
sbb
inc
rorb
add
mov
mov
pop
iret
dec
mov
aad
mov
lods
inc
insb
rorb
test
loopne
test
call
sti
pop
fwait
push
mov
call
ljmp
add
in
push
pop
xor
lret
sub
loopne
push
xor
icebp
popa
repz
jbe
push
push
in
lcall
shlb
cld
mov
jo
inc
movsl
test
sbb
xchg
sub
dec
or
mov
inc
arpl
add
push
enter
or
lcall
insl
inc
lods
add
lahf
in
lods
mov
add
pop
mov
int
stc
fistpll
flds
mov
mov
mov
hlt
cld
lock
std
pop
sub
cld
fstps
outsl
xor
pop
xor
out
cmp
mulb
inc
dec
mov
jo
push
dec
pop
imul
adc
mov
in
dec
pop
mov
mov
sbb
jo
loope
push
js
mov
xchg
cltd
mov
cld
fsubrl
xchg
cmpsb
push
mov
pcmpeqd
xchg
js
mov
pop
mov
sub
adc
jl
xor
leave
loope
lds
xor
sbb
outsb
xor
sti
jmp
pop
mov
add
xchg
shlb
movsb
imul
xchg
into
into
mov
scas
jb
push
daa
imul
hlt
lock
test
push
push
cmpsb
mov
and
ss
enter
adcb
into
or
rcrl
sti
mov
popl
mov
pop
and
ret
cmp
dec
insb
dec
lods
nop
call
fmulp
pop
loope
gs
cmp
out
jecxz
iret
sub
pop
inc
popf
repz
in
lds
imul
inc
ja
lock
jae
nop
xor
inc
test
inc
sub
add
cmp
xchg
adc
imul
inc
outsb
movsb
xor
pop
and
lea
arpl
adc
ret
pushf
sahf
mov
add
mov
push
xchg
mov
call
ret
sbb
xor
pop
xchg
dec
imul
cmp
les
iret
adc
xor
mov
js
xor
adc
ret
sbb
sbb
sub
icebp
add
pop
lret
dec
test
mov
jo
or
push
out
xor
punpckhdq
je
xchg
in
mov
dec
sbb
pushl
xchg
cmp
mov
flds
pop
movsl
scas
negl
xchg
adc
mov
stos
test
xor
stc
shll
xorl
xchg
lret
sti
cld
ja
lret
jle
push
sub
pop
xchg
sub
jnp
jp
stos
sub
movsl
cli
push
sbb
lretw
xor
xchg
clc
jmp
mov
jg
jbe
test
push
mov
lret
xchg
mov
bound
loop
in
sub
cmp
cmpsl
mov
notb
imul
adc
xor
mov
sub
jb
out
mov
add
aaa
into
arpl
add
popf
push
mov
sahf
or
add
pushf
cmpsl
mov
pop
push
loope
and
call
pop
mov
insl
push
pop
outsb
js
xchg
call
insb
clc
movsb
pop
jle
push
inc
lcall
nop
repnz
into
mov
hlt
cmpsl
xchg
jecxz
into
pushf
xchg
test
sub
fwait
dec
cmp
sbb
popa
ljmp
jle
js
push
lret
push
xchg
andb
cwtl
push
mov
mov
fistpll
lods
xchg
add
jle
xor
mov
xor
mov
push
in
push
mov
lahf
dec
stos
int3
movsl
push
add
inc
fsubrs
push
pop
inc
aad
cmp
jle
sbb
mov
outsl
sbb
jnp
insl
lcall
xacquire
xor
ljmp
xchg
xor
adcb
lock
dec
int
sub
xchg
jl
ljmp
mov
daa
test
sarb
adc
lock
lods
xchg
mov
loop
mov
rcrb
adc
loope
mov
sub
xor
insl
adc
stc
into
xor
lea
fcomi
mov
outsb
stos
jno
adc
sub
sbb
push
jb
or
out
sbb
je
push
loop
jl
mov
adc
and
repnz
lahf
ficomps
loope
dec
push
je
adc
mov
in
inc
jnp
mov
mov
ret
and
in
pop
mov
popf
sbb
add
mov
imul
mov
insl
mov
ret
push
pop
and
repnz
outsb
ret
movsl
mov
in
cltd
mov
imul
mov
xor
das
add
adcb
test
push
push
jmp
push
mov
xor
xor
jl
push
pusha
mov
mov
in
mov
in
cltd
das
out
sbb
mov
clc
mov
mov
mov
add
add
fdivrp
incb
jmp
jae
xchg
push
mov
fsts
push
sarl
mov
inc
mov
cld
leave
cmpsl
jnp
adcl
andb
or
mov
je
stos
xchg
nop
cli
push
push
insl
and
push
jae
inc
ds
xor
jo
in
mov
add
and
mov
ds
add
mov
jle
cwtl
xchg
add
jb
loop
adc
sub
jge
icebp
jl
frstor
jp
or
inc
xchg
jg
xchg
cmp
and
imul
dec
jb
adc
in
insl
nop
push
mov
mov
ljmp
add
int
rorb
rolb
push
xchg
arpl
push
fistpl
push
mov
mov
mov
scas
lret
add
rcrb
enter
ror
dec
xlat
xor
je
add
fldcw
mov
inc
xchg
outsb
scas
repz
xor
or
jns
inc
outsb
test
xchg
or
fildll
imul
test
fs
sbb
cmp
pop
mov
xor
lahf
lcall
ror
not
lcall
jmp
sbb
mov
xchg
ret
testl
shlb
fwait
std
mov
addl
call
loop
int
rcll
imul
mov
xchg
ret
sarb
ds
cli
mov
cltd
test
xchg
xor
ja
sub
cmp
sub
icebp
push
lods
push
xchg
imul
shll
sub
int
fsubs
loope
cmp
mov
mov
adc
xchg
in
lea
inc
pop
std
rcrb
jg
mov
cmpsb
pusha
and
icebp
repz
lahf
lds
inc
ret
test
int3
not
cli
xlat
mov
and
cwtl
sub
sub
pop
push
dec
mov
enter
mov
jns
and
add
or
xchg
fmulp
shll
mov
cmc
scas
mov
inc
dec
jecxz
test
scas
mov
add
sub
cwtl
aaa
sub
pop
divl
cs
jge
add
sub
jl
add
mov
cs
sub
clc
divl
cmc
sub
and
popa
add
inc
jge
movsb
test
inc
xchg
ret
xchg
mov
dec
mov
xchg
dec
cmp
sbb
je
lods
aad
stos
push
stos
scas
mov
aad
dec
cmpb
scas
notl
lds
repnz
push
hlt
xlat
je
movl
leave
dec
lret
rcll
test
shll
int
or
and
sbb
call
push
jl
pushf
jge
cmp
xor
aas
sahf
lret
outsb
test
push
nop
push
jge
ja
sbb
add
or
aam
daa
clc
enter
shrl
inc
adc
push
cmovb
push
out
jne
inc
mov
loop
jbe
push
ljmp
push
inc
aas
sbb
aam
out
loopne
push
gs
adc
mov
inc
and
push
jmp
or
add
push
jnp
jp
jecxz
or
and
dec
sub
je
push
sub
int
call
dec
mov
sub
lcall
pop
fstps
mov
inc
jo
ljmp
aam
push
stos
gs
shrl
aas
jg
lcall
insl
xchg
out
enter
adc
mov
cmp
es
lcall
fwait
xchg
aad
pop
add
movsl
cwtl
scas
jge
inc
aam
fdivs
dec
inc
cmp
push
inc
add
icebp
jg
pop
mov
or
jg
sbb
in
inc
les
mov
adc
fsubrl
leave
in
test
and
mov
dec
and
sub
mov
xchg
lret
pop
in
push
xchg
aad
and
scas
popf
aas
jbe
repz
in
leave
cmp
les
sbb
fucomi
mov
leave
lods
add
xadd
stos
xchg
out
sbbb
push
xlat
in
fwait
fwait
and
sbb
add
mov
fsubr
cmpsl
ret
mov
push
jns
xor
sbb
aad
aaa
mov
mov
jmp
jmp
inc
jns
sbb
mov
push
dec
rcrb
xchg
hlt
push
mov
sub
into
test
jnp
sbb
cmpsb
fucomi
andb
aas
push
cmp
xchg
push
nop
cltd
mov
dec
insl
pop
mov
es
xchg
mov
or
jbe
pop
outsl
jl
lods
lret
sub
push
pop
ret
cmp
pop
repz
xchg
sbb
mov
int3
adc
push
fnop
in
jno
rorb
dec
fidivl
jecxz
or
jge
push
mov
pop
fbstp
das
and
dec
add
add
stos
mov
or
lods
and
dec
xchg
sub
and
fs
ljmp
cmp
inc
sbbb
pop
mov
push
aas
stos
xchg
lret
ds
test
iret
cmpsb
es
add
push
push
stc
rorl
pop
xchg
adc
cmp
cmp
std
test
and
out
mov
rol
mov
sub
push
pop
xor
fldl
js
inc
push
dec
push
xchg
mov
divl
mov
pop
mov
rorb
addl
lret
aaa
or
dec
cmpsl
cli
mov
sub
mov
push
daa
addr16
ljmp
aaa
dec
ljmp
jne
out
jge
scas
xchg
adc
lcall
xor
pop
loope
mov
pop
jne
jmp
repnz
cmpsl
std
or
cmp
fimuls
pop
ror
inc
pushf
dec
xchg
out
ljmp
rcrb
mov
add
scas
inc
jge
mov
and
test
fsubl
sub
fstpl
lret
push
dec
mov
mov
popa
out
fcomip
sub
out
adc
aad
sub
dec
cltd
psrlw
js
jg
pop
sub
jo
adc
push
fistps
xor
out
std
xchg
bound
cli
cmp
jbe
rcl
rorl
xor
aas
adc
mov
jl
sti
mov
aas
and
stos
stos
into
inc
push
xchg
loop
adc
and
aad
push
inc
imul
push
pop
push
lret
xchg
push
inc
leave
loop
xlat
loope
sbb
pop
mov
dec
mov
pushf
pop
addb
mov
pop
lods
adc
push
push
roll
jbe
lds
xlat
jle
rcrb
jne
out
sub
dec
sbb
fsubr
lock
xchg
dec
xor
xchg
fistpl
push
pushf
adcb
push
rol
loopne
sub
mov
pop
cmp
and
mov
xor
fdivs
and
jl
push
int
repz
adc
dec
push
mov
add
arpl
dec
test
jge
push
enter
cmp
out
out
jnp
lahf
inc
push
ljmp
mov
lods
mov
cmpsl
pop
fwait
or
cmpsb
aas
ror
xlat
mov
dec
mov
addr16
cltd
ss
sbb
cmpsl
scas
cld
int3
xor
add
enter
pop
dec
add
mov
push
roll
push
aas
jmp
adc
test
or
jle
sbb
mov
ss
or
outsl
pop
out
sub
or
pop
xchg
mov
jmp
dec
push
lods
vpsubsb
push
push
lea
ja
mov
sub
in
les
mov
hlt
lret
sbb
xchg
pop
xchg
xchg
in
loope
push
fdivrl
cld
jp
add
mov
push
sub
or
ss
cmp
xchg
jnp
push
push
mov
mov
fdivs
lcall
nop
pop
mov
xchg
inc
roll
adc
lods
lods
xlat
cld
adc
or
je
lahf
cmpsl
push
sub
cmp
and
xor
loopne
dec
or
scas
fadds
in
fdivrl
or
cld
adc
cli
cmp
mov
stos
dec
fdivrs
out
xchg
mov
mov
aas
mov
sub
mov
es
mov
mov
cwtl
or
xor
mov
jle
popa
test
sub
in
adc
mov
sub
dec
and
sbb
sbb
icebp
inc
mull
mov
arpl
rcrb
in
mov
mov
push
pop
daa
clc
dec
aas
and
jae
jl
flds
push
bound
xor
sbb
or
clc
xchg
in
lods
and
loope
cltd
mov
add
fwait
les
add
mov
adc
into
movsb
jge
stos
ljmp
adc
ret
push
js
jo
stos
lret
test
je
inc
add
mov
arpl
adc
xchg
fildl
sub
loop
ljmp
les
or
xor
cld
add
and
shl
addb
push
jl
insb
mov
xchg
je
sahf
insl
test
cwtl
adc
xor
jp
xchg
stos
das
mov
lret
pop
ror
mov
xor
stos
adc
int
adc
clc
push
mov
in
mov
fnstenv
add
lods
cmpsl
pop
fucomip
xor
mov
xchg
repz
and
xor
scas
push
out
mov
dec
sub
inc
lock
inc
cmpsl
movsl
mov
sub
and
lock
fwait
stos
pop
es
in
dec
fcoml
cld
sub
add
push
jb
pop
adc
lret
sbb
mov
jle
out
pop
add
push
mov
xor
cwtl
push
cmpb
jg
aam
xchg
cli
lret
movsl
inc
sub
xlat
aas
imul
ret
adc
stc
xchg
rcrb
mov
fs
loopne
out
xor
test
mov
cmp
jg
sub
fisubrs
repnz
shr
std
push
fidivs
mov
incl
test
xchg
call
add
mov
or
roll
imul
add
arpl
pop
cmp
jge
ds
mov
out
cmp
lret
popa
mov
fidivrl
imul
mov
jbe
sbb
inc
int
jne
mov
stc
andl
mov
push
cli
jmp
rcr
lret
mov
sbb
sub
nop
mov
sti
fcoms
sahf
sahf
in
or
aad
sub
into
or
fldt
jmp
dec
aaa
fnstenv
repnz
cmpsl
dec
jo
fmull
sbb
sub
stc
or
cmp
stos
in
adc
adc
adc
stos
lret
jle
int
jge
push
test
xchg
in
addr16
inc
cltd
and
mov
aad
leave
ss
add
leave
das
call
push
mov
divb
movsl
push
push
lock
ss
sbb
dec
cmp
mov
and
or
jns
enter
inc
lcall
pop
repnz
cwtl
inc
jns
outsb
sahf
shrb
dec
aas
xor
lock
ficoms
outsb
pop
test
int3
pop
push
not
stos
pusha
scas
js
out
adc
jp
stos
jg
das
mov
clc
adc
arpl
jmp
sbb
jno
add
pop
repz
daa
pop
ja
push
lahf
test
jge
fdivrs
push
adc
movsl
xchg
push
fists
or
pusha
sbb
adc
sbb
sti
out
push
or
fstl
test
fstl
jno
cmp
fcoms
cltd
mov
ljmp
imul
insl
lds
push
mov
imul
lcall
pushf
xor
adc
cmp
pop
cmp
cmp
jg
out
pop
repz
in
mov
cmc
inc
ret
or
xlat
in
mov
mov
stos
insl
cli
arpl
aas
or
outsb
add
add
pop
add
cld
cmpsb
dec
gs
or
add
fisttps
ja
jae
stc
cmp
xchg
cs
ja
mov
test
mov
pop
sbb
jb
or
scas
ja
fdivs
mov
adc
cmp
jo
in
mov
or
hlt
fsubl
mov
movsl
enter
lock
lea
int
leave
jge
ljmp
sbb
adc
sub
aam
push
ficoml
stos
mov
jp
lods
aas
insl
pushf
in
test
subb
adc
and
cmp
popa
or
nop
mov
cmpsb
push
mov
jae
lcall
cmp
mov
imul
mov
sub
ss
mov
and
adc
mov
and
data16
inc
mov
xor
adc
add
in
stos
xor
arpl
xchg
inc
sbb
lret
fcoml
adcb
mov
jne
inc
mov
rclb
xchg
jg
xchg
or
lahf
repz
push
sub
pop
mov
call
xor
bound
sbb
fcmovnu
lcall
test
dec
imul
sti
mov
xchg
sub
dec
ror
add
mov
sbb
xor
int3
or
pop
dec
enter
inc
jge
adcl
sub
ss
xchg
push
popl
jle
mov
outsb
xor
lods
dec
inc
inc
outsl
ret
add
dec
cmp
daa
inc
in
test
call
testb
push
mov
mov
lock
jo
jb
mov
add
add
add
mov
fwait
aad
dec
pop
jmp
sbb
adcl
cmp
add
mov
mov
nop
out
int
push
aad
call
xor
loop
jmp
dec
cmp
mov
push
test
fdivrl
jns
imul
into
arpl
arpl
xchg
and
enter
sub
icebp
cmc
xchg
or
jl
xchg
add
sti
add
mov
mov
cli
mov
mov
cmpb
mov
test
sti
sahf
dec
ret
dec
push
arpl
aas
icebp
iret
out
jo
je
loope
mov
inc
pop
dec
inc
mov
js
jnp
insl
test
repz
les
bound
cmpsb
sub
push
add
gs
jno
into
mov
xor
in
cmp
cld
xlat
xor
in
dec
lret
inc
cltd
push
and
mov
cmp
xchg
xchg
sbb
pusha
add
adc
ljmp
fildl
or
jbe
sbb
dec
aas
ficomps
cwtl
out
into
mov
popa
ljmp
mov
das
sub
aas
idivl
mov
icebp
dec
fs
je
iret
stc
inc
adc
cld
mov
inc
movsb
cltd
pop
pushf
enter
pop
mov
mov
aaa
cwtl
or
add
push
adc
inc
and
ret
dec
jb
push
jbe
lods
in
movsb
cltd
mov
cmp
scas
loop
addr16
xor
adc
out
sbb
and
jecxz
loop
shrl
in
scas
jl
cmp
xor
adc
inc
or
or
cli
je
pusha
lds
test
add
cld
cwtl
jecxz
mov
in
loope
xor
sbb
xor
push
xchg
adc
add
jne
cmpsl
and
shll
jp
mov
fisttpll
dec
mov
jno
int
daa
int
xor
das
imul
outsb
cmp
mov
mov
dec
sub
mov
xchg
div
repnz
scas
mov
loope
inc
fs
jbe
push
and
and
xchg
pop
cmp
cmp
outsb
fsubrs
ss
dec
mov
adc
pop
fs
add
ja
xor
dec
test
or
and
ret
xor
ret
jns
scas
lock
andl
sub
push
insl
pop
subl
cmc
xchg
outsb
rorl
xor
fistl
or
mov
xchg
mov
rcr
daa
mov
sub
cld
loopne
rorb
dec
mov
pop
mov
call
cwtl
add
fadds
fldl
out
pop
or
loope
mov
data16
push
mov
in
dec
mov
xchg
dec
int
test
add
std
push
pop
stos
in
aas
sub
pop
sbb
and
in
fimull
jnp
sbb
pushf
aam
test
dec
jmp
push
jne
jns
aad
jnp
sbb
clc
aaa
jl
test
sub
aad
out
loopne
add
fcoms
adc
testl
fdivrs
or
push
mov
jge
movsl
clc
add
xchg
cltd
or
or
jns
push
cmpsb
jnp
in
push
imul
push
push
mov
pop
sbb
dec
mov
dec
and
fldl
and
mov
mov
aad
add
test
push
popa
out
mov
in
fidivrl
inc
xchg
aaa
pusha
or
in
pop
and
fldt
and
push
pop
push
add
and
ljmp
sbb
mov
sub
hlt
fldl
sbb
adc
and
add
test
pop
sub
xchg
rclb
or
xorl
fninit
xchg
sbb
sbb
mov
data16
and
call
das
dec
and
and
jmp
pop
cltd
lahf
pop
xlat
and
call
js
loopne,pt
sbb
movb
adc
mov
push
ss
xor
rol
jae
mov
jg
push
pop
jg
pop
lods
in
or
cmpsb
adc
mov
lds
xchg
andl
lahf
sbb
xor
popa
fadds
stos
les
and
fwait
dec
filds
cli
gs
jo
ljmp
add
addr16
out
mov
jg
es
adc
pop
in
mov
lods
and
jae
jae
inc
cmp
das
xor
repnz
in
int3
stos
rorl
push
jno
rorb
cmp
pop
mov
mov
inc
es
je
jbe
mov
mov
jb
rorb
pop
lcall
movsl
cmp
fs
imulb
lahf
and
xchg
add
pop
mov
mov
mov
lret
xchg
cmp
out
cmp
nop
jbe
sub
mov
cmp
in
popl
pop
lahf
lds
mov
ljmp
ljmp
scas
into
xlat
mov
dec
pop
sbb
jmp
inc
popl
ja
mov
push
inc
rorl
adc
iret
aas
icebp
mov
fwait
dec
sub
ficoms
js
push
xchg
cmp
ret
lods
cmpsb
mov
or
or
mov
sbb
inc
inc
aas
ret
rolb
out
leave
push
xchg
xorb
leave
mov
in
inc
out
cmp
js
jge
in
xor
mov
lds
jle
xor
idivb
movl
incl
fidivrl
xchg
pushf
inc
inc
sub
or
stos
jecxz
or
cmpsl
lcall
jmp
in
fs
in
sahf
lods
pop
or
pop
lahf
insb
scas
je
sub
jp
test
jae
icebp
or
lahf
mov
inc
sub
fstp
popf
push
push
movsb
lahf
movsl
jle
fiaddl
lret
ds
scas
jns
ret
dec
dec
lcall
and
push
jge
cmp
fcmovnbe
push
cmp
in
mov
mov
cmp
scas
fnstenv
jge
or
jnp
xor
xchg
movsb
push
fimull
push
popa
cs
adc
std
jge
int3
xchg
jmp
lods
dec
push
out
flds
sbb
mov
jb
or
popa
test
les
push
ja
cs
push
push
pop
imul
mov
jno
dec
xor
xor
enter
push
outsb
jae
pop
add
test
fsubl
xchg
jecxz
mov
pop
pop
sub
shll
test
dec
and
into
mov
imul
cmp
mov
inc
in
mov
mov
dec
xor
loope
fimuls
insb
dec
int
adc
das
jmp
movsb
ret
ret
out
mov
jb
and
adc
call
test
push
push
neg
jmp
ret
ds
and
insb
push
lea
jmp
sbb
movsl
inc
push
shlb
pop
outsb
mov
sub
mov
faddl
ljmp
imul
jmp
or
mov
sub
add
rcll
jl
mov
sub
jl
jle
clc
clc
adcl
sbb
incl
pop
xchg
xor
in
test
test
xor
enter
pusha
mov
mov
cmp
je
xchg
dec
es
sahf
xor
das
jne
and
je
or
mov
movsb
mov
hlt
ret
mov
push
add
es
mov
cs
mov
jo
adc
enter
pop
inc
mov
xor
add
push
outsb
add
test
xchg
adc
aam
mov
pushf
dec
loop
loopne
push
and
or
dec
sub
jg
sti
cmp
pusha
push
pop
rol
bsr
iret
sub
jl
and
sahf
js
leave
dec
leave
dec
fiaddl
push
mov
lahf
xchg
mov
addl
add
ret
clc
lods
fcoml
int
sahf
into
pushf
jl
fsts
scas
push
pop
jl
sub
xchg
inc
es
sub
mov
jmp
push
sub
icebp
outsb
out
sbb
push
sbb
int3
sti
jge
call
add
cmp
mov
aaa
out
push
fs
subl
mov
pop
cmp
or
stc
scas
iret
imul
cmpsl
into
ficoml
mov
xorb
stc
mov
popf
cld
das
aam
jb
adc
jmp
enter
test
dec
fildll
mov
int
push
jp
aad
inc
pop
mov
sbb
repnz
in
cli
stos
mov
push
je
mov
mov
shl
js
arpl
inc
pop
aad
and
xor
inc
mov
add
mov
cmp
in
push
add
jb
sbb
xchg
test
adc
outsb
call
sub
or
pop
stos
lcall
insb
call
adc
sbb
mov
imul
inc
insl
inc
test
or
xchg
sub
call
in
pop
insl
cmovne
and
fs
mov
jg
ss
push
nop
lret
dec
mov
pop
add
jmp
pop
insl
mov
dec
fninit
std
imul
aad
lods
add
sti
lods
cmp
sub
mov
sahf
push
jge
pop
pop
or
push
mov
lcall
xchg
out
insl
mov
push
lret
mov
inc
shlb
jge
fidivrl
loopne
inc
mov
cmp
sarl
movl
xor
aad
andl
dec
pop
add
or
mov
lcall
sbbl
pop
mov
lods
xor
insl
lcall
sarb
movsl
ret
mov
stos
insl
and
icebp
and
data16
push
cmp
xchg
cmp
adc
divl
push
outsl
movsb
loope
mov
mov
fadd
nop
int
repz
mov
mov
cwtl
pushf
js
and
inc
aas
xchg
push
jp
scas
shrl
sub
or
outsb
pushf
jp
std
or
int3
fucomip
xor
leave
sar
enter
push
inc
inc
shll
cs
stc
sub
mov
sbb
mov
pop
fsubrs
cltd
inc
inc
mov
imull
cltd
push
mov
jno
inc
mov
or
and
addr16
xchg
push
stos
cmp
mov
xor
leave
cmc
push
cwtl
hlt
mov
jle
pop
mov
dec
pushf
push
push
int
and
inc
and
bound
test
sub
out
mov
ret
mov
icebp
lret
add
sub
out
adc
out
mov
test
aaa
fnsave
jmp
xchg
test
lods
adc
inc
adc
lret
pop
cmp
xchg
adc
outsl
inc
notb
pop
or
in
insb
clc
push
das
movsl
inc
xchg
jbe
rorb
mov
ret
xchg
xchg
adc
arpl
mov
stos
add
loopne
shlb
movb
cmpb
in
push
push
test
aad
mov
cli
sbb
aam
adc
jne
mov
repnz
add
movsb
sti
cmp
mov
fdivl
arpl
cmp
jae
push
pop
push
sbb
push
xor
mov
clc
out
gs
loopne
jo
mov
mov
adc
fdivs
test
jle
add
sbb
cld
mov
jnp
pop
push
jo
xor
pop
fbld
cmpsl
mov
into
push
mov
or
mov
cmp
mov
jb
popa
orl
inc
sahf
sahf
xor
xor
sbb
shlb
add
lea
jl
pop
jb
scas
ljmp
xor
or
mov
pop
mov
pop
xchg
fildll
lahf
loopne
pop
fmull
lds
sub
add
rorb
addr16
jae
sti
je
testb
pop
sub
nop
jecxz
out
mov
xchg
push
cmp
ds
out
xor
loopne
push
jle
jge
push
push
xchg
cmp
sbb
mov
xchg
cmp
idivb
fdivl
fs
xchg
bound
in
mov
jecxz
cmpsb
dec
lcall
imul
popf
dec
cwtl
fdivr
mov
add
adc
jge
cld
dec
cltd
cmpsl
push
inc
xor
popf
pop
fldenv
sbb
ja
sbb
cld
push
cmp
scas
push
fwait
into
jo
jge
cwtl
push
mov
push
mov
add
sahf
idivb
add
aad
out
inc
jns
cwtl
ss
fisubrl
adc
jo
ss
shll
push
pop
pop
arpl
add
cmpsb
leave
mov
pop
das
lahf
stos
jmp
cmp
inc
faddl
bound
fwait
in
data16
push
add
ficompl
push
insl
cmp
cmp
cmp
adc
jg
lock
cwtl
adc
int
add
dec
insl
scas
push
mov
or
lods
dec
and
dec
jl
xchg
insl
xchg
ja
push
icebp
pop
mov
dec
sub
cmp
jmp
jmp
cs
popa
out
inc
xchg
in
fidivl
xlat
mov
mov
mov
aam
popf
test
adc
add
sub
xchg
dec
xchg
scas
in
adc
ret
shlb
insl
dec
cmc
mov
es
cltd
xchg
jae
xchg
addr16
lea
push
iret
pop
mov
mov
dec
inc
imull
rcrb
hlt
mov
push
mov
and
jb
aas
lds
mov
idivl
movsl
push
and
adc
mov
lods
mov
mov
out
mov
mov
push
hlt
sbb
dec
aas
inc
and
out
mov
jle
fistps
psrad
test
push
loopne
cmp
cld
sar
outsb
out
xchg
cltd
dec
cmp
clc
dec
xchg
ret
inc
fildll
stc
pop
loopne
xchg
rcrl
add
xchg
mov
scas
xchg
dec
sbb
stos
pop
push
jecxz
sbb
mov
roll
sbb
lret
sub
xchg
mov
xchg
clc
or
pop
pop
adc
pop
xor
cs
into
jo
sub
xor
cmpsb
sti
jnp
movsb
adcb
or
cmp
idivb
mov
dec
pop
mov
xor
stos
cmc
in
test
adc
frstor
xchg
jne
sub
inc
pop
xor
inc
mov
mov
or
push
dec
dec
mov
movl
pop
sar
cmp
mov
xlat
cmpsb
xor
call
mov
jle
ljmp
iret
fdiv
jno
repnz
lods
jmp
fsubs
popa
pop
shlb
shrl
jle
ds
xchg
xchg
imul
and
and
lahf
inc
in
ret
test
fidivrl
jmp
and
div
push
inc
in
xchg
inc
dec
jle
sub
mov
movsl
subb
cltd
mov
lret
js
cs
or
insb
mov
xor
jns
enter
int
push
push
cmc
test
rcrl
inc
dec
or
lret
movsb
lret
cmp
mov
xchg
sub
jle
sbb
mov
subl
pop
mov
mov
pop
lods
loop
loopne
dec
push
mov
push
jl
insl
shlb
push
jne
outsl
mov
or
call
sbb
test
jecxz
mov
jp
cmpsb
mov
out
push
push
xlat
outsl
adc
mov
sarl
add
aam
scas
arpl
and
inc
fdivrl
jb
inc
je
orl
pushf
pop
addr16
cmpsl
sub
imul
stos
lahf
data16
je
xchg
add
add
xchg
test
cwtl
mov
cmp
sbb
jmp
dec
dec
pop
jns
decb
sub
xchg
pop
clc
jmp
pop
push
mov
imul
cmp
jg
adc
xlat
in
xchg
call
pop
and
clc
dec
fdiv
movsb
test
push
arpl
inc
cmpsl
bound
int
sub
and
les
loope
sub
movsb
xorb
in
adc
pop
lret
hlt
stos
hlt
mov
push
in
push
test
sbbl
int3
sbbl
mov
xchg
push
jno
xor
popa
mov
lcall
mov
push
xor
negb
imul
stos
sar
pop
pop
dec
cwtl
shlb
in
in
xchg
rcrb
mov
loop
mov
incb
sarb
nop
sbb
das
mov
dec
ds
pop
mov
push
lcall
jecxz
push
xor
xor
push
gs
xor
mov
sub
jge
inc
sahf
std
mov
rcl
cmp
xor
notl
int
test
or
dec
lods
mov
xchg
mov
arpl
call
dec
push
loope
fwait
lea
lds
adc
out
sbb
dec
bound
cmp
lods
jnp
jae
in
das
rcrl
fs
jbe
arpl
inc
jbe
lods
fsubrs
cmc
repnz
call
mov
lods
mov
mov
fsubp
adc
icebp
arpl
test
cmp
repnz
loop
jl
pop
mov
jns
xor
fcmovbe
inc
push
and
sbb
cmp
mov
xchg
sarl
repz
daa
mov
adc
fsin
leave
xor
xchg
call
addr16
and
adc
aaa
rorl
adc
lds
pushf
and
repz
push
bound
shr
jmp
sbb
mov
ret
fisubs
and
icebp
and
push
xchg
cmp
fwait
aas
mov
pop
mov
jmp
mov
xlat
pop
cli
sub
int3
mov
shrl
fistl
orl
sub
sbb
inc
xor
out
mov
mov
loopne
movsb
mov
pop
mov
xor
aad
push
jb
stos
adc
add
rcrb
jmp
jecxz
jb
movsb
mov
int3
or
adc
rcl
pop
pop
mov
repz
in
lock
call
sarb
add
repz
movsb
mov
cli
jbe
and
pop
xor
jge
mov
mov
mov
inc
test
adc
pusha
mov
mov
das
pop
mov
xchg
lahf
enter
out
test
cmp
mov
loop
paddsb
inc
jb
sbb
dec
insl
cmp
popa
jae
lahf
push
ljmp
push
pop
cli
add
inc
iret
push
je
mov
rep
mov
xchg
mov
lret
pusha
pusha
xchg
lods
jg
mov
movups
out
mov
popf
es
push
adc
addr16
cmpsl
dec
movsb
sbb
nop
lods
test
and
lret
jp
inc
insl
clc
adc
xlat
push
dec
jnp
dec
hlt
inc
hlt
xlat
pop
push
or
mov
xchg
outsb
lcall
jb
loop
sub
imul
lods
cwtl
dec
xlat
stc
aaa
lret
and
sbb
sbb
jae
jle
sub
mov
scas
jb
outsb
fwait
sbb
cmpsb
cmp
in
fisubrl
out
mov
mov
lds
xorl
outsb
sub
xorb
cmp
shlb
jmp
test
mov
pop
sub
mov
or
cmp
aam
and
jg
movb
test
push
jbe
mov
jns
out
add
shl
xor
inc
pop
pop
std
mov
aad
mov
imul
enter
xor
out
pushf
mov
xor
popa
mov
insl
ds
in
or
jmp
mov
lea
in
jg
and
xlat
data16
int3
cmpsl
out
xor
xchg
pop
inc
jbe
mov
jne
push
xchg
push
xchg
pop
stos
lods
icebp
pop
mov
clc
fs
xchg
mov
mov
outsl
cmp
push
pop
pushf
xchg
mov
cmp
xchg
add
jp
imul
push
in
test
xor
inc
out
mov
jmp
mov
pop
inc
or
inc
cmp
leave
pop
cld
gs
test
mov
into
rclb
sbb
mov
and
pusha
fstl
dec
jb
aam
test
aam
xor
nop
leave
into
mov
loope
mov
cmp
sti
mov
mov
rorl
movsb
mov
push
loope
subb
mov
in
mov
shll
shlb
sti
mov
data16
push
ja
push
jbe
dec
cmpsb
in
mov
test
fadds
inc
sbb
xor
ror
mov
jl
cmp
and
bound
add
cmpsb
pop
dec
xor
cs
push
shrl
cwtl
inc
push
dec
icebp
stc
sbb
shrl
mov
add
pusha
clc
outsl
xchg
in
jns
xchg
dec
daa
xchg
stc
cmp
test
pop
mov
inc
arpl
or
ret
push
sub
faddl
scas
jmp
sbb
sub
jae
sbb
cmp
mov
adc
rcr
xor
inc
mov
je
sbb
xor
repnz
xchg
scas
cmp
int3
ret
cmp
loopne
shlb
in
cs
mov
jb
and
aad
add
mov
xchg
je
sbb
add
cmc
aaa
ret
ds
add
cs
xchg
subl
jbe
mov
xchg
xchg
test
ljmp
add
dec
or
jb
fcom
dec
push
inc
std
fstpt
lret
test
push
imul
subb
pop
xchg
popa
add
fcmovnu
jo
dec
pop
pop
pop
rclb
mov
jns
cmpl
mov
inc
pop
dec
movsb
mov
jns
cmpsb
sbb
stos
or
sarl
dec
xchg
and
cmp
ret
stc
push
fiaddl
in
add
dec
mov
shr
insl
adc
lock
sbb
pop
lcall
sbb
fidivrl
push
cmc
jnp,pt
loope
jmp
mov
aaa
out
xchg
jno
lods
mov
insb
fdivr
and
iret
orb
adc
fwait
ds
imul
test
push
mov
popf
or
sub
aaa
xor
inc
inc
jge
mov
lea
xchg
pop
adc
inc
ret
mov
mov
mov
xchg
cltd
mov
mov
fcomp
enter
adc
ss
imul
xchg
ljmp
sub
aad
mov
jns
pop
mov
cmp
and
xchg
add
sbb
fisubrs
adc
cmp
push
cmp
gs
dec
jo
push
mov
mov
ret
mov
mov
mov
sbb
in
cmpsb
ja
xchg
sbb
subb
imul
gs
xor
cmp
jb
pop
jb
jecxz
mov
sbbb
incb
mov
jecxz
js
jecxz
fidivs
cmp
mov
and
pop
inc
pop
scas
mov
inc
lds
sbb
and
sbb
je
cld
sub
cwtl
jns
push
lods
add
pop
add
cltd
nop
call
mov
push
adc
insl
or
push
push
gs
cli
mov
les
pop
lea
mov
jns
dec
mov
int3
scas
aas
pop
push
add
ds
jo
or
fiaddl
out
mov
leave
xchg
sbb
adc
shl
sub
jge
jp
mov
dec
jmp
jo
and
call
scas
xchg
hlt
push
icebp
shlb
sbb
pop
push
movsl
cmp
cmp
sbb
repz
fists
and
hlt
and
xor
arpl
jne
pop
push
mov
shl
or
cld
jecxz
ret
pop
xchg
xchg
mov
dec
mov
pop
dec
and
clc
fwait
decl
pop
aaa
aam
pop
xor
jge
dec
arpl
jne
push
ss
jge
sti
jl
fs
stos
add
sub
out
sub
sbb
es
push
pop
fmuls
scas
inc
add
lahf
ret
mov
imul
pop
cmp
insb
and
mov
fs
jbe
and
push
jo
dec
icebp
addl
fistpl
lods
push
or
inc
test
mov
or
mov
and
out
push
int
ror
stos
packsswb
mov
cmpsl
add
add
cmp
push
mov
insl
or
push
inc
popf
jno
sbb
adc
aam
jo
jl
xchg
movl
pop
fadds
dec
roll
jnp
in
test
jno
pop
insb
push
jno
cmp
push
lods
nop
mov
mov
pushf
imul
pop
pusha
out
lret
ret
jp
add
add
sub
add
inc
out
xchg
push
adc
out
and
and
repz
xor
nop
adc
shl
push
jmp
mov
adc
out
aaa
push
xlat
fsubl
scas
or
cwtl
dec
test
cmp
out
pop
clc
jp
lret
bound
sarb
inc
sub
testb
fwait
pop
fsubrl
pop
or
into
popf
lret
sbb
outsb
push
push
aaa
int
jo
xor
mov
mov
stc
daa
xchg
cli
push
xchg
ja
jmp
and
push
ds
repz
inc
in
xor
shl
jo
pop
push
in
stc
leave
sti
das
fnstenv
mov
dec
jno
jg
jmp
into
test
aaa
jp
xchg
sub
sub
xchg
iret
jo
xor
popf
in
call
int3
scas
mov
mov
xchg
fisubs
add
or
insl
jg
gs
adc
test
out
psrld
inc
jl
xor
out
je
mov
lods
xchg
pop
fwait
les
mov
aaa
aam
sub
cltd
sbb
popa
jno
adc
inc
sbb
xchg
add
pop
dec
mov
lcall
mov
scas
push
aaa
aaa
ljmp
inc
add
jno
and
push
in
push
arpl
nop
mov
lods
sub
and
lret
sbb
mov
fidivl
pusha
adc
add
je
ret
cwtl
jo
int3
and
adc
inc
dec
and
xchg
push
mov
inc
cli
cwtl
xor
in
test
fmuls
pop
mov
dec
call
push
add
cld
popf
dec
sbb
xchg
xor
roll
and
out
sbb
mov
inc
pushf
inc
test
lret
das
adc
dec
test
or
push
and
and
loopne
ret
add
cmpsl
outsl
scas
hlt
pop
adc
xor
mov
insl
cmc
jle
push
adc
pushf
mov
jne
push
push
outsb
iret
pop
notb
jmp
push
pop
add
inc
std
cmpsl
sbb
or
mov
rcrl
jle
fcomi
ja
cmp
cmp
sub
add
mov
mov
inc
push
sbb
mov
and
cmp
xor
xor
jae
xchg
addl
cmp
loope
push
xchg
sbb
fwait
movsl
cs
into
jbe
cmp
out
int
lea
cmp
push
test
mov
xchg
or
jl
imul
cli
mov
inc
insb
out
loop
arpl
dec
xchg
lret
jl
js
xor
jmp
jo
enter
jb
mov
add
pop
sub
pop
pop
xor
cmpsl
jg
jo
and
jp
pusha
fisubs
dec
imul
inc
sbb
push
call
test
pop
paddusw
loopne
cwtl
call
ret
xchg
cltd
cmp
mov
popa
loope
sarb
cmp
xor
cmc
gs
cmc
xchg
pop
mov
pop
dec
xchg
fneni(8087
mov
popf
dec
xchg
sahf
cmpsl
xchg
xchg
jns
das
xchg
inc
int
aaa
add
inc
in
test
ror
inc
pop
loopne
mov
in
pop
xorl
jo
pushf
popf
mov
ds
data16
mov
scas
popf
cmc
loop
pop
test
inc
js
inc
outsb
sbb
xchg
sub
xchg
mov
movsl
push
push
mov
cmp
jo
call
pop
pop
pop
lret
ds
push
movsb
mov
es
notb
xchg
adc
cwtl
sub
or
enter
test
cmp
lds
fdivl
cmp
adc
pop
xchg
mov
or
mov
int
jecxz
lods
dec
jo
sub
fisubrl
mov
cmpl
mov
mov
lea
scas
push
and
push
cltd
out
lea
pop
aaa
addb
pop
addb
pop
jmp
pop
les
lods
mov
pushw
repz
aas
or
add
ja
mov
dec
add
push
add
js
out
push
les
and
lcall
push
fisubl
lret
cmpsl
inc
jg
or
js
ljmp
icebp
lret
mov
xchg
pop
lahf
cmpsb
adc
sahf
loope
testl
add
mov
sbb
sarl
popa
xor
shld
scas
mov
jecxz
mov
mov
ficoml
je
clc
pop
stc
cmp
sub
mov
cmp
cmp
dec
sub
rol
bound
cwtl
leave
and
push
lret
jp
sbb
js
jnp
int
shlb
movsb
push
sub
xor
cli
inc
ret
add
jp
inc
xor
mov
cmp
lret
hlt
pop
and
xchg
test
jle
neg
add
leave
js
push
pop
mov
push
imul
push
call
sbb
cmp
cmpsl
xor
ret
cmp
jnp
lret
lds
or
inc
outsl
repnz
push
lahf
mov
std
jp
adc
dec
fmuls
or
pop
mov
shrb
data16
cmc
xor
mov
jecxz
mov
pusha
cmp
xlat
inc
adc
hlt
std
icebp
cmpb
push
inc
fs
icebp
add
xor
cmp
inc
notl
xchg
inc
cli
icebp
loope
cltd
in
outsl
shl
loopne
fsts
setnp
xchg
or
icebp
dec
clc
xchg
loopne
js
push
adc
rclb
jno
cmpsl
sbb
mov
jecxz
rorb
dec
sbbl
adc
cmc
add
ret
sbb
pop
xchg
popa
addl
out
in
jb
aam
jb
xchg
push
in
in
movsl
stc
pop
push
popf
mov
jle
or
fists
cmp
sbb
dec
mov
lea
sub
add
fwait
mov
push
jno
mov
iret
xchg
dec
mov
mov
mov
jns
cmp
mov
mov
aas
repz
pop
xlat
mov
pushf
cmp
rcr
sarl
pop
adc
bound
xor
cmp
aad
mov
sub
and
mov
mov
int3
xchg
daa
cmpsb
mov
fmull
add
pop
xor
cmp
sbb
jns
fbld
adc
and
lret
push
cmp
adc
mov
and
mov
repnz
sti
mov
lods
jnp
sub
pop
cmpl
push
dec
pop
sub
pop
dec
fldcw
jns
mov
pop
jb
inc
pop
mov
ficomps
add
jp
pushf
std
or
push
or
in
inc
or
xchg
popa
fdivp
cmp
mov
sub
ljmp
pop
out
cmp
inc
adc
xchg
lret
in
pop
inc
cmpsl
in
inc
push
popa
jle
leave
add
sti
jge
icebp
mov
inc
movsl
lahf
sbb
xchg
movl
jbe
pop
push
ja
mov
ret
adc
xlat
dec
shll
jnp
xchg
ss
es
lahf
and
in
jno
pusha
mov
stos
fcos
pop
push
je
push
jb
push
loopne
pop
pop
pop
in
clc
in
pop
imul
add
pop
out
aad
fisubrs
hlt
jae
adc
pop
orl
jecxz
mov
cs
mov
mov
data16
popa
xchg
mov
mov
push
fsubs
or
test
loope
fstpl
test
push
mov
sbb
outsb
orl
push
mov
shlb
ja
or
lcall
xchg
mov
out
sub
jp
add
cmpsl
mov
mov
test
mov
xor
pop
push
inc
icebp
vpunpcklbw
adc
xor
daa
aas
pop
or
cmp
fcmovbe
xor
lds
jmp
add
ret
sub
and
jae
mov
repz
inc
push
cltd
inc
fsubs
mov
loopne
mov
aas
stos
test
insb
pop
in
jo
fistpl
mov
xchg
jbe
inc
push
ficoms
pop
push
sbb
sahf
pop
mov
ret
arpl
sbb
notl
int3
movb
leave
mov
ja
push
leave
sub
adc
in
dec
repnz
sub
dec
int3
insb
mov
push
mulb
sub
sbb
adc
pop
fsubrs
js
mov
mov
shlb
outsl
ss
jmp
jbe
pop
cld
jo
sbb
sbb
or
mov
iret
push
xchg
mov
mov
inc
pushf
aad
pop
adc
push
and
adc
mov
lahf
push
movsl
xor
ja
jo
pop
jns
add
and
and
push
outsb
jns
lahf
scas
sbb
xlat
jnp
mov
loopne
push
shrb
adc
stos
adc
mov
fs
lods
inc
outsb
lcall
inc
loop
loop
mov
jecxz
or
ds
push
leave
mov
dec
adc
ss
mov
cli
das
lods
sti
bound
aaa
jno
pop
jae
dec
jae
push
or
int
mov
in
pop
or
iret
add
js
xchg
repnz
push
fsubl
inc
push
pushl
jmp
dec
jmp
jns
and
sbb
push
mov
std
mov
sahf
or
ret
testl
shrb
fnsetpm(287
push
ds
lock
dec
cmpsb
jmp
push
ret
andb
mov
lods
icebp
or
pop
dec
fcmovnb
jge
fwait
movsb
mov
loopne
adc
ss
inc
faddl
incb
aad
push
iret
jmp
or
jecxz
les
mov
or
ret
jno
jecxz
mov
sbb
add
and
roll
movb
outsl
dec
and
xchg
dec
stos
push
pop
pop
movsl
ja
jae
fcmovb
mov
test
data16
lds
aas
shll
lret
cmp
xor
js
adc
or
mov
hlt
test
add
and
jns
adc
pop
lahf
pop
pop
cld
aad
mov
insl
dec
sub
add
add
test
cmpsb
outsl
dec
leave
fwait
push
adc
pusha
dec
pop
enter
daa
dec
outsb
fs
repz
leave
jbe
pop
outsl
and
loop
cs
adc
xor
test
daa
subb
lahf
mov
test
sbb
scas
and
inc
mov
fldt
cmovno
adc
or
and
fsub
xor
lods
iret
std
pslld
jnp
fcoml
pop
out
int3
mov
pop
aad
jle
fnstcw
pop
xor
cmp
fmulp
into
into
loopne
mov
lcall
mov
push
js
hlt
int3
cwtl
xchg
jecxz
xchg
mov
mov
mov
push
stc
mov
pop
push
jae
sbb
mov
jecxz
cmp
lret
pop
pushl
xor
pop
inc
mov
pop
push
sub
push
movsl
dec
push
decl
pushf
jg
jns
andl
sub
ret
mov
adc
test
pop
imul
outsl
xchg
mov
add
mov
cmp
xor
sub
mov
jl
cld
int
pop
inc
ss
jae
adc
fwait
or
pop
mov
divb
xor
push
lea
lcall
btr
call
and
pop
mov
sarb
movsb
test
mov
adc
les
ljmp
stos
jne
mov
fisttpll
popa
cmc
push
mov
xor
mov
push
add
pop
mov
mov
es
push
loop
repnz
or
pop
aas
rcll
xlat
stc
sti
fcoms
insb
xlat
loop
dec
pop
pop
adcl
or
loop
lods
or
cmp
push
dec
jae
ja
arpl
jmp
iret
into
mov
push
ljmp
mov
iret
negb
jl
ss
jae
and
jmp
or
adc
mov
mov
mov
push
rol
dec
cs
cmp
jle
loop
int3
dec
test
adc
arpl
rorb
and
test
sahf
xchg
xor
dec
push
fisubl
inc
xor
pushf
mov
adc
adc
jae
lret
lret
call
dec
cs
movsl
jge
xchg
shl
movsl
sbb
inc
movsl
mov
mov
add
mov
push
and
fisubl
scas
mov
mov
xor
lret
addr16
out
sub
cmp
fiadds
mov
cmp
scas
stos
push
shrl
push
mov
outsb
mov
push
out
adc
cmp
ljmp
movsb
inc
jp
call
lock
xor
aaa
mov
dec
and
mov
int
pop
into
out
shll
imul
andl
out
jns
xchg
or
xor
dec
sbb
push
mov
jae
mov
inc
mov
into
cs
add
aad
ficompl
movsl
jg
mov
mov
icebp
mov
nop
daa
xor
and
mov
cltd
xchg
lahf
outsb
or
daa
lock
cmp
push
xchg
hlt
xor
mov
inc
jo
jp
push
daa
mov
rcrl
xor
insb
imulb
cmp
and
cmp
pop
jg
and
sub
add
push
sbb
ret
pop
xlat
dec
jo
xchg
mov
in
or
sbb
imul
fcompl
sbb
xor
xchg
mov
adc
call
mov
jnp
jge
fwait
sbb
sub
data16
pop
out
dec
dec
jl
adc
add
lods
cli
add
mov
xor
ds
popa
cmpsb
mov
push
sbb
arpl
movsl
fstpl
inc
jl
sub
push
jae
xchg
ljmp
dec
pop
lock
outsl
icebp
sbb
pop
nop
in
pop
xchg
xchg
adcb
iret
lods
mov
test
lahf
leave
lods
test
add
je
mov
push
test
in
hlt
pop
std
in
outsl
and
inc
scas
outsl
jg
int3
mov
jae
enter
loope
jnp
mov
adc
jbe
cwtl
and
movsb
fisttpll
outsb
mov
test
pop
dec
adc
lret
sbb
daa
loop
and
and
mov
cmpsb
pop
pop
sbb
pop
lret
inc
movsb
or
movsl
pop
into
add
fldcw
int
movb
jg
fwait
dec
xchg
test
jne
dec
xchg
cwtl
push
cmp
pop
je
dec
cmp
mov
jne
lock
jbe
inc
mov
dec
icebp
sti
or
mov
mov
push
sub
andb
xchg
xorb
adc
repz
push
and
jmp
mov
negl
bound
iret
das
xor
sarl
outsl
pop
ret
adc
inc
test
ja
push
cmpl
aam
add
jae
out
adc
fs
jns
std
or
sarl
loop
sbbb
decl
mov
and
es
in
sub
push
dec
shr
mov
cmp
insb
mov
enter
aaa
scas
mov
jae
outsb
out
pusha
popf
outsb
xorl
test
popa
inc
les
leave
pop
pop
sub
cmp
imul
sbb
test
mov
jecxz
adcb
sbbl
ret
daa
xor
mov
es
xor
cmpsb
cvtps2pd
cmpsb
fucomp
inc
addr16
pop
pop
in
push
bound
ror
xchg
cmc
cmc
mov
aam
xchg
insl
std
sarb
xor
mov
aam
jle
cmp
inc
call
xor
jbe
inc
sbb
xor
nop
xchg
cld
dec
mov
xchg
cmp
jne
mov
or
testl
jle
push
mov
mov
pop
xchg
jnp
stc
xchg
scas
push
mov
and
mov
in
and
add
xchg
add
ja
push
rorb
sti
lea
test
je
add
xchg
mov
in
out
sarb
insl
xor
xor
pop
int
xor
jmp
cmp
xchg
sahf
mov
lahf
in
ljmp
int
sbb
sub
cwtl
inc
sar
jl
mov
call
out
fadd
js
aas
or
mov
ret
stos
pop
jnp
and
push
adc
lret
push
mov
mov
mov
xchg
jne
outsb
mov
iret
inc
adc
sbb
popa
aaa
cmpsl
push
mov
push
push
std
ljmp
fbld
or
and
pop
or
lea
les
dec
or
lcall
xchg
ret
orb
mov
into
es
mov
hlt
scas
or
xchg
mov
or
inc
sbb
js
std
xchg
mov
dec
xchg
inc
cmpsl
cs
xchg
loopne
pop
ja
cmp
jbe
decb
jl
xor
sbb
stc
loop
rclb
sub
dec
dec
mov
dec
sbb
call
dec
xchg
jb
or
mov
pop
jbe
pusha
sbb
mov
mov
mov
jns
jae
sub
shlb
pushf
out
fisttps
imul
sbb
dec
or
mov
pop
jl
in
pop
fwait
jo
sbb
push
xchg
cmp
mov
data16
push
cltd
mov
pop
mov
mov
mov
pop
jns
sub
repz
mov
xchg
hlt
inc
adc
and
jno
jnp
out
mov
mov
mov
bswap
ja
adc
movsb
jno
test
cli
sub
jno
add
inc
lahf
ljmp
nop
in
cmp
es
push
psrlq
in
int3
inc
jg
xor
and
sbb
rcr
sub
flds
shlb
and
mov
ret
dec
sbb
repz
push
jmp
xor
vpmacswd
or
or
inc
arpl
enter
dec
std
and
lods
sub
pop
dec
inc
add
cmp
add
lock
sbb
pushf
sbb
pop
jl
rcll
xor
iret
daa
inc
rcll
in
mov
push
or
and
arpl
in
call
out
add
inc
mov
jmp
insl
lods
push
pop
xchg
dec
ret
lret
sbb
jle
mov
mov
icebp
pop
pop
sbb
push
mov
shlb
dec
pop
filds
mov
inc
inc
ret
push
test
frstor
cmp
add
xchg
lods
and
jns
test
ja
push
cwtl
iret
daa
repnz
in
ret
outsl
mov
cwtl
lcall
pop
out
movsb
mov
dec
pop
or
mov
sbb
push
das
inc
or
das
shll
xchg
aam
add
adc
mov
loope
aad
call
repnz
add
lcall
inc
insb
adc
xchg
mov
rcl
movb
mov
push
pop
in
out
xchg
outsb
ret
aad
dec
xchg
and
loopne
nop
test
push
adc
mov
dec
mov
push
pushf
inc
mov
add
inc
aaa
fistpl
shrl
test
pop
in
and
fcomps
push
rcll
ret
mov
cmpsb
push
and
lcall
insl
xchg
test
inc
sub
test
add
add
sbb
fiadds
pop
leave
cmpsb
sub
fnstsw
inc
cltd
jne
sub
xchg
lds
mov
cmpsl
jp
jo
add
adc
sahf
adc
adc
rolb
adc
int3
insb
enter
stos
inc
stos
decl
pop
pusha
nop
adcb
jns
loopne
testl
jnp
mov
mov
mov
fldl
jo
mov
outsb
pop
pop
xchg
out
xchg
aad
xor
add
jo,pn
pop
clc
sti
xchg
nop
in
rorb
mov
mov
adc
inc
jno
xchg
and
je
sub
cltd
inc
stos
cltd
adc
shlb
jno
xor
mov
imul
lds
pop
int
mov
mov
aaa
jno
shlb
jg
push
pusha
cmpsb
pusha
or
sbb
movsl
dec
cmp
test
inc
sbb
mov
push
test
sbb
dec
addb
pop
push
sbb
and
mov
popa
jb
aad
seto
fimull
lds
movsl
fs
in
out
cmp
inc
imul
jl
lods
jns
or
lea
shrl
outsb
xchg
and
int
pop
insb
lods
mov
pop
mov
lods
fmuls
jb
imul
cmpsl
pop
mov
xor
popa
outsl
test
mov
cmc
out
pushf
sbb
xor
cmpsl
les
fidivl
sahf
gs
sti
cltd
lret
cmp
popf
jl
scas
or
adc
add
or
xchg
push
pop
in
inc
sub
fwait
aas
addl
cs
jb
arpl
test
jns
sbb
test
cs
sub
sbb
or
jle
mov
fldt
aaa
cltd
sbb
sub
jne
adc
mull
xchg
scas
nop
in
cmp
mov
lock
xchg
out
int3
jae
nop
xchg
jb
mov
xor
test
int3
mov
mov
dec
mov
xor
in
mov
cmp
xor
ds
in
fs
rep
mov
sub
test
ds
movsb
mov
loope
shll
mov
fs
int
push
and
mov
sbb
dec
xor
pop
div
adc
mov
ds
adc
jnp
mov
sti
add
pop
daa
and
ror
jbe
add
lahf
ss
popa
mov
mov
insl
cli
jae
lds
cmp
xchg
sub
pop
orl
pop
stc
adc
mov
or
lcall
repz
jne
pop
or
stos
ret
sbb
and
fadds
xor
cltd
inc
je
iret
push
fisttpll
xor
sub
push
dec
cmpsl
subl
xchg
and
jmp
aaa
loope
stc
popf
loopne
adc
inc
sbb
outsl
push
mov
or
leave
jecxz
xchg
test
sbb
and
out
push
in
sbb
xchg
fprem1
cld
fimuls
movsb
sbb
add
popl
pop
adc
pop
xor
leave
add
mov
mov
inc
or
push
in
ja,pn
push
fcmovb
insb
gs
cmp
cmp
repz
jp
sarl
fdivrl
out
outsb
roll
stc
xor
sub
outsl
hlt
js
dec
push
jbe
sbb
js
or
loopne
sub
dec
lcall
xor
dec
addb
stc
data16
sbb
adc
sbb
jne
mov
cmpsb
pop
push
jno
inc
xor
jmp
test
testb
mov
aad
adc
mov
xor
push
shrb
xchg
scas
dec
loop
xchg
leave
addr16
imul
aas
and
pop
cwtl
cwtl
sbb
sti
loop
pop
test
push
push
push
filds
jbe
repnz
imul
sti
push
scas
loop
in
js
ret
insb
sbb
or
out
lahf
ja
or
jno
dec
xchg
dec
cmp
out
dec
or
xor
mov
pop
push
cli
mov
mov
flds
pushf
lods
lcall
pusha
jnp
movsl
fsubrp
inc
inc
push
dec
aas
push
mov
jno
mov
test
xchg
dec
aas
jg
jo
rclb
sub
fcomps
push
imul
cmc
es
lret
sbb
jns
add
aaa
mov
push
and
insb
pshufw
jae
xchg
push
addr16
lock
xor
or
jle
cld
mov
into
mov
push
das
xlat
fnsave
mov
sbb
xchg
fists
pop
and
nop
pop
fnstcw
cltd
jbe
int
jmp
lds
xchg
in
add
fnstcw
xor
into
aas
cmp
xor
mov
mov
popf
rorl
cmpsb
xchg
or
mov
pusha
pusha
adc
pop
push
stos
sub
jp
imul
mov
stos
fsubl
add
in
es
push
pop
ja
dec
outsl
scas
fistpl
cltd
dec
inc
lods
pop
add
mov
movsb
cmp
arpl
fstps
lcall
mov
inc
ret
in
out
test
test
mov
jae
push
jmp
mov
xchg
in
jno
pop
out
and
xlat
lods
add
repnz
sub
mov
inc
nop
adc
jmp
jge
cld
je
out
mov
sbb
adc
leave
sbb
lds
push
insb
mov
int3
mov
xor
imul
push
insb
popf
out
ficoms
notl
in
pop
xor
mov
loop
pop
out
scas
repz
in
adc
bound
and
sahf
lods
dec
stc
xor
jge
imul
xlat
jo
mov
cmpsb
imul
add
pusha
sbb
xchg
add
push
xchg
push
pop
dec
arpl
or
imul
lock
mov
sub
push
loopne
lcall
xor
mov
or
mov
jmp
mov
mov
dec
imul
mov
or
stos
push
cmpsl
dec
pusha
rorb
add
adc
int3
push
cmp
cli
lahf
add
push
repz
mov
dec
xor
mov
lock
jo
aaa
mov
or
fimull
jecxz
pop
fdivs
jg
jnp
mov
sbb
and
push
pop
mov
icebp
ret
outsl
ja
sub
cmc
jae
popf
sar
es
pop
sbb
and
es
xlat
lret
popa
shll
adc
dec
mov
data16
adc
lock
lds
push
or
mov
test
sbb
jnp
inc
add
ljmp
adc
add
insl
aaa
cmpsb
fsts
js
jg
xchg
push
and
test
mov
pop
sti
ret
out
xchg
fists
add
lods
dec
movsl
or
ds
xor
call
lods
jns
xchg
fsubs
cmc
dec
das
rcll
fs
std
cs
stos
xor
cmp
add
not
jg
jle
shl
out
mov
dec
lds
daa
jp
pop
test
add
push
inc
arpl
cmp
dec
xchg
aaa
add
call
or
cmp
mov
fsubrl
out
in
add
lock
add
lcall
imul
jecxz
mov
jecxz
xlat
sbb
xchg
push
out
jle
shlb
xchg
add
xchg
cs
mov
or
xor
lret
sbb
stos
mov
imul
and
mov
push
sub
movsl
adc
mov
push
ds
cltd
dec
dec
daa
pop
sub
das
push
sahf
pop
cmpsl
sbb
fistpll
dec
in
sar
les
add
dec
fwait
lret
bound
test
pop
pop
mov
test
stos
test
mov
xchg
pushf
cli
rcll
or
cmp
xchg
mov
jle
xchg
dec
inc
lcall
pop
ljmp
pusha
aas
ds
test
xchg
add
je
jge
sbb
pushf
and
int3
xor
lret
addr16
in
xchg
outsl
sbb
and
pop
in
shrl
addb
push
bound
sar
push
call
inc
dec
out
out
adc
and
into
in
and
push
inc
xor
jbe
repz
imul
push
test
in
sub
ss
dec
stos
mov
lock
loope
insl
les
jno
jb
add
mov
mov
cwtl
pop
xor
mov
add
sub
dec
hlt
cltd
push
jo
ret
clzero
dec
stc
arpl
jne
insb
and
lds
jnp
jns
cmpsb
rcll
fwait
movsb
or
mov
xor
sub
test
mov
dec
jo
mov
sbb
cs
dec
mov
jge
sbb
rcrb
adc
sub
addl
lcall
or
dec
xchg
mov
sbb
pop
shlb
movsb
aas
jae
test
xlat
jp
mov
arpl
es
cmp
xor
mov
loope
cmp
enter
in
cmp
das
push
xor
or
mov
lahf
outsb
lcall
mov
in
push
mov
sti
movsb
scas
xchg
mov
sub
popf
or
cwtl
inc
mov
insl
out
mulb
loopne
jae
push
sbb
xor
mov
ss
shl
sbb
ljmp
sub
adc
add
mov
subb
jns
lcall
pop
adc
in
es
push
push
jno
loope
fcomp
add
sub
popl
jle
add
jmp
adc
pusha
push
jnp
out
rolb
lods
rorl
ss
icebp
movsb
inc
jo
dec
dec
cmpsb
jge
rolb
fdivrl
repnz
fists
loop
out
mov
jle
xchg
cwtl
xchg
push
xchg
and
push
inc
mov
popa
add
adc
cwtl
icebp
or
mov
push
pop
nop
xchg
mov
cmp
pop
dec
shll
push
gs
repz
cmp
loope
cwtl
push
push
push
sbb
mov
sbb
dec
sbb
cmp
outsl
inc
lods
and
jg
insb
nop
outsl
bound
and
sarl
push
stos
ljmp
sbb
in
mov
lods
nop
jbe
and
std
out
jno
or
popf
push
fdivr
jg
fsubs
int3
loope
frstor
and
enter
iret
adc
push
jns
push
ds
xchg
mov
stos
mov
jl
test
pop
push
xchg
movsl
sub
inc
jne
mov
and
imul
jecxz
inc
aad
mov
pusha
outsb
aas
test
mov
jp
jbe
aaa
mov
xchg
cmp
push
fistpl
push
sub
inc
xchg
les
jp
repnz
adc
mov
inc
shll
mov
fwait
jmp
cmpsl
dec
xlat
adc
add
cmp
repz
push
and
xor
daa
push
xchg
out
icebp
jmp
dec
xor
xchg
rcrl
in
sbb
dec
lret
fsubl
clc
mov
mov
icebp
cmp
push
sbbl
xor
icebp
lods
xlat
insl
idivl
jmp
mov
cmpsl
cmp
in
jno,pt
insb
lock
pop
daa
cmc
dec
jb
popf
inc
sbb
jb
xor
dec
fs
xor
incb
cmp
mov
fcoms
inc
shr
lret
test
and
stos
imul
out
shr
mov
ja
or
sub
pop
ret
and
or
adc
add
add
dec
cs
pop
xchg
leave
outsb
inc
pop
ljmp
adc
xor
pop
movsl
sbb
mov
jg
xor
xor
mov
addb
dec
mov
sub
rorl
arpl
mov
pop
cmpb
cmpsl
enter
xor
outsl
jb
int
mov
pop
push
out
daa
cmp
mov
mov
ja
push
mov
pop
or
adc
inc
pop
out
adc
in
jb
pop
lods
fcoms
ja
push
adc
insb
fsubrp
outsb
test
push
push
mov
lret
je
and
fists
imul
loop
inc
adc
aaa
push
inc
test
stos
mov
adcb
lods
lods
das
lret
test
push
mov
xchg
sub
shr
lcall
pop
mov
adc
jge
shrl
or
add
dec
and
mov
lods
inc
push
test
orl
leave
imul
stos
xor
and
outsl
pop
sbb
ss
stos
int3
dec
xlat
xchg
ja
test
pop
dec
pop
sti
push
rolb
mov
loope
mull
out
jae
sbb
inc
cs
enter
push
sahf
and
dec
in
and
inc
mov
lret
mov
test
xor
jo
and
mov
shll
mov
jae
stos
jle
sub
clc
cmpsl
or
cli
add
das
negl
rol
or
insb
fwait
movsl
jb
push
mov
out
cli
incl
mov
or
cmp
shrb
mov
insb
cmpl
dec
jge
xor
or
adc
jp
int
pop
cmp
ljmp
sbb
dec
sbb
mov
cmp
cmp
xchg
aad
add
repz
int
clc
fdiv
ja
cmp
pusha
mov
mov
push
aaa
inc
pop
sbb
inc
stos
mov
sbb
imul
mov
ret
lods
or
cli
aaa
jnp
call
push
inc
xchg
ret
stos
push
or
sbb
cmc
mov
push
inc
mov
cwtl
insl
lds
pusha
lret
lcall
popa
sub
jle
cltd
push
loope
xchg
cmpsl
mov
sbb
sub
and
shlb
mov
and
mov
and
pop
or
ret
and
lods
mov
popa
and
shlb
das
add
sti
mov
sbb
std
aas
popf
inc
mov
ds
fsubr
ja
pop
mov
out
sub
xor
jmp
or
fs
add
or
cmpsb
jp
fsub
cmpsb
sbb
xchg
jge
pop
pop
add
fsubr
bound
insl
outsl
test
pop
pusha
mov
inc
clc
cld
sub
jmp
shl
mov
mov
jnp
jbe
inc
testb
outsb
pop
out
jp
cmp
or
outsb
xorb
jbe
inc
cwtl
mov
sbb
outsb
cmp
sbb
push
xchg
bound
dec
dec
or
cmp
sub
mov
cmp
inc
push
outsl
add
xchg
cltd
std
ds
jp
iret
mov
imul
test
add
inc
xchg
sub
xchg
fstpt
jp
imul
sarl
into
out
push
pop
pop
xor
mov
mov
add
or
mov
dec
jno
lock
xor
or
das
and
mov
mov
jne
data16
pop
dec
adc
fildl
xor
insl
add
enter
xchg
lret
mov
push
ret
push
sbb
stos
test
lcall
in
sbb
movsl
xor
mov
inc
dec
stos
rolb
xchg
fdivrl
call
jle
adc
and
movsb
inc
inc
pop
iret
in
cltd
xchg
pusha
push
jbe
add
sar
xchg
addr16
repz
in
xor
sub
pop
dec
ss
stos
hlt
and
shl
lret
out
push
outsl
lahf
js
int
loope
lcall
icebp
mov
xor
or
out
mov
pop
cwtl
jge
lock
clc
loope
and
xchg
pushf
mov
sti
hlt
aad
insb
mov
loop
jl
cld
mov
pop
scas
xchg
dec
push
sbb
jbe
jns
xor
inc
mov
pop
xlat
or
xor
lahf
sbb
jb
or
lahf
rcll
pop
cmp
jl
lock
mov
rcr
adc
push
fs
ret
mov
or
lds
xchg
mov
mov
mov
push
scas
pushf
pop
mov
xchg
pop
and
sub
leave
mov
jno
sbb
in
push
xchg
xorb
add
mov
imul
jl
xchg
daa
iret
pushf
mov
xchg
inc
dec
add
xor
fwait
push
rcll
push
iret
add
adcl
leave
xchg
jg
inc
imul
lcall
lea
sbb
ss
xchg
cmpsl
xchg
jp
pusha
sarb
push
xor
jg
pop
mov
inc
ja
sti
jno
sub
notl
loopne
mov
outsb
jmp
pop
sbb
mov
nop
inc
mov
push
cltd
f2xm1
dec
in
hlt
cmc
sti
mov
push
or
fwait
les
pop
push
mov
rclb
jp
pop
mov
ljmp
cli
mov
pop
repnz
push
cmp
inc
xchg
inc
adc
lret
inc
jnp
dec
push
inc
ss
mov
mov
xor
jp
add
adc
xor
or
jbe
or
ja
cmp
mov
xlat
cltd
mov
rcpps
pop
jbe
adc
fstpl
loopne
test
rclb
pop
int3
mov
xchg
roll
mov
lret
xchg
movsl
ret
pushl
pop
aad
jge
pop
mov
xchg
iret
popa
stos
push
cmp
addl
clc
mov
loopne
pshufw
call
mov
ljmp
popf
mov
imul
xlat
lods
pavgb
jo
dec
dec
fidivrl
mov
or
test
xchg
rclb
adcl
les
cmp
scas
movsl
aaa
xchg
xchg
push
stos
mov
mov
mulb
push
xchg
int3
dec
out
cli
cld
xor
ds
jecxz
in
lods
or
jle
lcall
orb
rorb
inc
sbbl
fcoml
std
js
xchg
enter
movsb
push
je
jns
lods
push
jns
xchg
jns
and
lds
jle
add
add
cmp
out
mov
mov
jnp
inc
arpl
xchg
js
pop
xchg
sub
inc
mov
dec
aas
rcr
push
cmc
xchg
adc
mov
mov
mov
test
xchg
repz
mov
cli
or
mov
mov
inc
bound
inc
orb
push
sub
xchg
xchg
jns
add
or
mov
add
push
call
out
inc
les
repz
int3
lods
dec
iret
movsl
push
mov
xor
jo
jle
ret
lret
adc
xchg
mov
push
push
icebp
jl
popf
or
mov
push
adc
shlb
mov
push
and
je
movsl
imul
inc
std
sbb
dec
sbb
push
add
add
or
lcall
mulb
push
movsl
enter
xchg
jl
cmp
popf
loope
adc
mov
add
mov
xchg
fdivrl
sub
fdivrp
xchg
push
rol
in
inc
add
jb
sub
add
in
push
mov
enter
outsl
or
cwtl
xorb
sub
aaa
imul
movsl
and
out
mov
or
clc
clc
test
push
sub
add
push
mov
dec
lcall
push
mov
jbe
inc
xor
fsubr
xchg
call
int3
mov
mov
jne
out
adc
imul
mov
outsb
outsl
movsb
add
xchg
xchg
insb
and
or
sahf
mov
neg
inc
sahf
mov
pop
hlt
mov
push
negb
aas
jns
mov
push
fisubrs
shlb
jge
outsl
xor
addb
ds
movb
jns
ret
push
movsb
or
rcrb
cmpsl
xor
add
push
mov
fs
cmpl
xchg
sub
jns
mov
out
mov
loopne
into
lods
pop
add
in
js
mov
mov
and
test
sub
imul
inc
pop
push
sub
pop
mov
testb
sarl
sbbb
sbb
imul
pusha
dec
in
cmpsb
mov
cmp
cmp
stc
cmpsl
insl
jmp
cmp
loopne
adc
in
loop
repnz
pop
shl
xchg
enter
in
stos
xchg
sub
inc
fsubrs
xchg
dec
ret
jmp
test
lahf
pop
xor
aaa
fwait
sbb
in
icebp
inc
cmc
subl
imull
andl
movsb
push
dec
xor
call
hlt
mov
test
cli
pop
push
fnstcw
div
and
test
jl
cmc
cs
push
pop
pop
cmp
rcll
int3
das
cmp
popa
fdivrp
mov
or
mov
pusha
lods
push
outsb
imul
lahf
mov
mov
add
mov
xchg
lret
sahf
pushf
mov
mov
repz
icebp
int3
out
ficoms
push
in
movsb
hlt
arpl
rclb
in
add
jnp
push
add
clc
lods
subb
cmp
test
in
pop
incl
lock
mov
inc
pop
xor
push
jne
or
push
dec
or
mov
in
push
push
pop
sbb
jl
rol
mov
lock
out
xor
test
clc
es
fucom
dec
mov
out
aaa
fiaddl
insl
dec
sbb
mov
mov
dec
stos
lret
icebp
fs
jmp
adc
pop
add
sub
hlt
push
jmp
je
or
dec
mov
xchg
jae,pt
in
cmc
or
adc
adc
fcoms
loope
das
mov
movups
xor
shlb
and
pop
jns
jl
cmp
std
mov
sub
mov
adc
bound
or
adc
xchg
jle
mov
out
fwait
movntq
test
adc
outsl
xchg
fnsave
push
mov
pop
add
push
adc
jnp
pop
loope
inc
imul
aad
pop
nop
sbb
lahf
ret
repz
popf
push
hlt
or
decl
aam
fisttpll
sti
test
xor
mov
pushf
enter
xchg
int3
adc
testl
and
test
mov
das
jge
push
test
mov
xchg
repz
lret
add
sbb
movsl
jg
aam
xchg
jae
sbb
cmp
je
aad
jecxz
push
int
out
adc
stos
jg
mov
or
sub
outsl
adc
sbb
sub
xchg
push
cwtl
cmp
cwtl
pop
jmp
mov
mov
mov
mov
xor
nop
inc
stc
mov
push
push
sahf
aam
mov
fwait
push
pusha
mov
aaa
int3
mov
jae
imulb
sub
add
dec
gs
shr
dec
adc
nop
push
or
aad
lds
je
sbb
pop
xlat
in
cmc
sbb
adc
aad
pop
xchg
jl
rclb
xorb
adc
rorb
movsl
mov
in
jecxz
xchg
lods
sbb
xor
imul
sbb
mov
filds
xor
push
xchg
dec
pop
in
in
pop
std
call
test
rcrb
push
negb
les
movsl
ds
mov
cmp
jae
lahf
paddw
xchg
incb
je
or
ds
xchg
fwait
stc
lahf
sbb
add
daa
mov
pop
lret
testl
cmc
shrb
sub
xor
sub
cli
cli
cmp
adc
push
and
flds
daa
pop
jecxz
fxch
jmp
or
push
pop
movsb
push
mov
and
jo
sub
xchg
int
jg
aas
push
stc
push
sbb
xchg
mov
rcrb
dec
test
and
imulb
cmpsl
and
dec
push
or
sbb
iret
push
ret
ljmp
cs
jl
push
in
xor
mov
jo
pushf
lds
aad
mov
mov
xchg
or
adc
jmp
xchg
mulb
inc
inc
mov
outsb
popf
dec
or
insl
push
aas
cmp
xor
lods
dec
cmp
mov
xchg
repz
jmp
sub
xchg
ds
mov
push
scas
pop
or
sub
or
movb
and
iret
lahf
outsl
movsb
fldt
jns
jo
adc
mov
cmp
lods
sti
fdivl
imul
mov
divb
pop
movsb
mov
xchg
lahf
push
xchg
mov
rclb
dec
push
cmovb
xchg
or
je
dec
outsb
sub
mov
mov
arpl
or
imul
pop
mov
movl
xchg
sbbb
rcll
mov
sti
xchg
push
xchg
test
mov
push
mov
imul
insl
and
loop
movsl
ficoml
test
add
add
mov
pusha
clc
negl
ret
scas
lds
jo
mov
inc
rclb
jecxz
lahf
sbb
out
sub
and
aaa
js
cwtl
je
push
es
pusha
mov
add
jle
outsl
fstpt
popa
mov
inc
adc
repnz
adc
mov
scas
lods
push
ficoml
je
insb
ficompl
gs
xchg
dec
xchg
rol
xchg
mov
cmp
int3
inc
leave
insb
subl
data16
popa
push
mov
xor
insl
repz
rcl
shll
in
jp
cld
push
aaa
jns
dec
xor
movsl
pop
lds
dec
out
ret
adc
adc
insb
insl
fcomi
push
push
cli
inc
cmpsl
add
push
leave
das
pop
push
out
cmp
das
and
imul
js
sbb
out
adc
add
stc
pop
fidivrs
adc
int3
mov
fs
lret
mov
jnp
repnz
ja
iret
jl
add
mov
push
jo
scas
cmp
lret
out
push
or
mov
sbb
popf
cli
int3
movsl
mov
dec
mov
xchg
sti
and
inc
daa
mov
jecxz
mov
xor
cmp
lds
pop
cmp
inc
mov
xor
mov
lret
jecxz
fidivrs
sbb
jbe
mov
lea
pop
mov
gs
mov
dec
and
push
lret
fs
cmp
pop
cs
loopne
cmc
and
fucom
push
stos
push
lcall
sub
insl
decl
cmpl
dec
sbb
mov
rclb
fs
test
aas
pop
fdivs
and
mov
dec
inc
sbb
outsl
mov
or
inc
mov
cmp
nop
sbb
push
repz
je
stc
mov
jecxz
jecxz
xchg
inc
mov
ljmp
iret
add
ja
test
dec
lea
mov
mov
xor
mov
rcll
int3
pop
add
lods
mov
insl
mov
cmp
rcll
addr16
mov
xchg
jl
mov
push
test
push
stos
pop
aaa
out
inc
xor
cmp
aas
xchg
movsb
jp
jp
scas
mov
fwait
and
pop
or
dec
call
mov
mov
push
pop
fidivrl
dec
movb
jmp
enter
pop
inc
adc
jb
dec
iret
and
jae
out
in
cmpsb
and
lods
fistpll
adc
pop
nop
stos
repz
xchg
xchg
dec
dec
in
loope
cld
push
dec
jae
popa
lldt
fdivrl
das
loop
push
adc
filds
adc
es
stc
pushf
and
jae
jp
test
mov
jbe
outsb
lcall
int3
pop
cmp
mov
push
daa
sbb
popf
clc
les
inc
in
enter
clc
inc
and
dec
jmp
movsb
les
cld
imul
inc
adc
loop
frstor
sar
lret
arpl
rcll
cmp
xor
fistpl
sub
rep
and
lret
das
inc
adc
mov
test
dec
push
sbbb
jae
sbb
pop
sub
cmp
shll
sbb
loope
sbb
roll
mov
pop
sbb
mov
nop
adc
sub
roll
push
sub
es
roll
push
popa
adc
fnstcw
xlat
or
cli
jg
inc
nop
jle
ljmp
pop
jb
outsb
inc
das
xchg
and
cld
out
mov
mov
jo
sub
sbb
lret
clc
pop
inc
les
fsubl
sub
dec
shl
sub
ds
outsl
fwait
insb
aam
xchg
lods
lcall
mov
ret
push
dec
add
xchg
jg
sarl
mov
cltd
inc
mov
sahf
lock
inc
jns
dec
mov
out
fistl
add
mov
fidivs
cmp
xchg
dec
cmp
je
pop
xchg
push
aas
adc
jecxz
inc
sub
add
sbb
rcrl
mov
cmp
imul
pop
arpl
jle
jmp
sub
into
jae
and
mov
orl
pop
xor
inc
pusha
jne
dec
mov
jg
pop
xchg
add
dec
stos
je
nop
sub
das
adc
mov
mov
jg
ss
mov
test
in
repz
pusha
jb
ss
adc
xor
ljmp
add
shll
jmp
pop
cmp
ds
sbb
inc
sub
sahf
mov
sub
repz
mov
cld
out
mov
js
clc
xchg
rclb
jp
add
into
mov
sbb
in
sahf
xor
aas
lret
into
mov
xor
xchg
inc
fwait
aas
jecxz
das
test
push
pusha
bswap
or
out
addr16
inc
ret
xchg
in
mov
fmull
or
xor
in
jns
push
in
xor
in
mov
cs
lods
pop
nop
ret
push
test
out
in
mov
in
xchg
adc
iret
adc
stos
mov
cwtl
cltd
imul
insl
imul
data16
cmpsl
dec
jge
pop
fdivs
xlat
rcll
movsb
sbb
dec
lock
leave
sbb
add
push
out
rclb
iret
mov
clc
jmp
mov
push
adc
lcall
cmpsl
movsb
push
cmp
xorb
scas
mov
push
inc
fstl
mov
fisubs
mov
lahf
jb
adc
fdivr
jae
push
mov
out
hlt
into
fiadds
cmp
jmp
in
jmp
cmp
fnstenv
push
aad
in
addr16
lret
fiaddl
fdiv
jno
mov
fisubrl
pop
inc
int3
fadd
leave
jl
mov
fwait
sbb
stc
xor
jle
hlt
inc
push
pop
test
add
xlat
leave
punpckhdq
mov
lcall
xor
jo
mov
or
decl
repz
inc
movsb
jg
inc
push
test
outsl
dec
pop
cwtl
dec
mov
lcall
in
xor
ljmp
pop
lock
mov
imul
icebp
je
cltd
pop
xchg
xchg
mov
or
sahf
lods
xor
push
sbb
mov
pop
xchg
test
lretw
mov
add
mov
shlb
mov
mov
out
sub
lahf
push
shlb
adc
xor
mov
mov
push
pop
outsb
xchg
rorb
fcomps
jnp
leave
rcr
jmp
lahf
aaa
jns
mov
lds
mov
dec
test
cmp
loopne
in
lds
subl
xchg
out
push
fdivl
mov
pop
pop
pop
xor
fcoml
push
push
add
jbe
pop
mov
mov
cmpsb
mov
aam
xor
mov
cmp
arpl
std
mov
popf
fmull
cltd
cmc
pop
aaa
jae
test
pop
sbb
arpl
pop
mov
mov
sub
push
sub
movsl
dec
sbb
push
iret
hlt
les
inc
mov
push
inc
das
imul
jg
add
or
pop
add
adc
sub
fnsave
cmc
inc
inc
push
lea
sti
mov
push
scas
or
fwait
jg
ss
xchg
jp
adc
ljmp
pushf
cmp
push
pop
xchg
or
imul
hlt
fildll
bnd
jmp
into
dec
call
sub
push
shr
sub
mov
inc
shl
insb
or
pop
outsb
push
into
lods
jge
or
pop
nop
jecxz
jecxz
xchg
dec
xchg
loope
xchg
scas
or
das
mov
loop
mov
jns
or
pop
fadd
movsb
ud2
test
xchg
add
in
rorb
xor
inc
pusha
addr16
sub
loop
bound
adc
xchg
dec
movb
into
xchg
cmp
xor
inc
int3
cmpsl
push
adc
push
mov
push
cli
roll
es
lret
inc
in
mov
sub
test
bound
mov
test
aaa
mov
test
mov
idivb
dec
lods
xor
cmp
popf
or
jmp
out
add
dec
in
cli
or
push
imul
imulb
adc
and
jl
in
aas
fildll
jle
push
jno
xorb
pop
xchg
sub
mov
jl
cmp
mov
test
shll
and
push
cmc
das
std
inc
mov
cmp
int
push
sub
aam
ss
lahf
sub
pushl
cltd
jnp
xchg
stos
mov
and
mov
lock
cli
xorb
adc
fisubs
dec
gs
leave
add
movsb
cli
test
mov
dec
shll
stos
jl
sub
enter
enter
ficoml
aam
dec
out
jo
mov
les
sbb
sub
mov
fisttps
pop
pop
inc
in
adc
insb
hlt
enter
bound
or
cmp
pop
sub
repnz
loop
loop
or
outsb
setb
outsb
ret
mov
mov
idivl
cmp
pop
outsb
out
cmc
push
outsl
or
jnp
icebp
xor
cli
pop
xor
adc
rcrl
mov
pop
pop
sbb
cwtl
lds
jbe
mov
cmpps
inc
dec
mov
mov
mov
dec
xchg
xlat
and
cmpsl
sbb
add
sahf
jo
ljmp
int3
mov
sub
mov
jo
xchg
fimuls
or
mov
xlat
xor
mov
insl
jg
or
xor
sbb
adc
es
orl
dec
sbb
jo
imul
jbe
cs
xlat
in
rcll
or
test
leave
daa
je
out
in
loop
lcall
sub
daa
and
mov
sub
movsb
frstor
add
mov
jnp
or
xchg
out
jne
in
mov
add
jno
js
mov
sub
test
and
cld
mov
pop
mov
cli
inc
outsl
inc
ljmp
sbb
mov
jl
movsb
xchg
test
or
mov
jp
xchg
mov
paddusw
push
aas
cmp
mov
or
pusha
mov
mov
xlat
sub
cld
pusha
xchg
inc
ljmp
mov
out
rolb
push
and
stos
inc
add
jge
in
mov
mov
push
inc
out
add
jecxz
add
not
add
pop
outsl
xchg
in
pop
lret
orl
mov
pop
outsl
jle
or
sbb
test
xchg
hlt
or
push
and
in
cld
ljmp
xorb
ja
and
mov
jmp
jns
es
cwtl
sbb
cmp
inc
mov
in
push
pop
sub
pop
add
mov
pop
loope
rclb
fbstp
add
es
popf
pop
jge
push
lret
addb
jns
and
xchg
outsl
shll
outsb
jbe
call
fisubrs
je
pusha
js
outsl
sbb
xorps
push
imul
rcrb
jae
add
cmp
push
push
inc
sub
pop
mov
lret
ret
dec
rcl
test
es
outsb
push
nop
mov
ljmp
call
or
ljmp
in
in
lods
cs
mov
xchg
cmpsl
sti
sar
adc
sbb
cs
cmc
movsb
pop
jno
cwtl
sub
iret
mov
repz
dec
sbb
mov
mov
test
sahf
adc
mov
xor
xchg
xchg
pop
mov
mov
idivb
clc
sbb
aaa
aaa
mov
sbb
jbe
adc
or
add
sub
pushf
mov
mov
test
dec
rcll
cmc
sub
mov
ret
mov
mov
mov
jmp
jae
and
dec
xor
loop
sub
xlat
push
cmp
push
pushf
pop
popf
subl
pop
out
lods
lahf
and
test
rcll
cmc
cli
outsl
je
es
cli
dec
rcl
mov
decb
mulb
je
mov
mov
into
jle
push
mov
lods
bound
xchg
pop
test
jns
pop
jmp
inc
cs
sbb
sub
scas
cli
xor
call
or
imul
xchg
cltd
mov
repnz
iret
sbb
mov
push
jb
and
xor
jp
cwtl
adc
xchg
sub
ror
or
xchg
mov
push
mov
mov
sbbb
xchg
xchg
inc
pop
test
ja
jecxz
pop
movsl
and
mov
stc
or
stc
pop
push
sbb
jmp
leave
jb
mov
mov
roll
inc
jo
idivl
ds
and
outsb
ja
je
dec
std
sbb
insl
sbb
cmp
int
push
sbb
lahf
ja
movsb
add
dec
dec
out
cmp
jns
or
sbb
and
negl
fiadds
xor
insl
enter
xchg
cmc
jle
xchg
cmpb
mov
pop
dec
add
addr16
mov
stos
jl
divl
or
jb
scas
dec
jp
pop
pop
ss
sbb
push
in
in
out
das
clc
sub
push
cmp
sub
lock
cmp
mov
not
xchg
mov
pop
add
mov
mov
adc
and
xchg
negb
or
push
imul
cwtl
adc
mov
test
lcall
std
jno
js
mov
fisttpl
push
jns
insl
push
mov
sbb
mov
lret
paddb
push
xor
movsb
push
rcr
mov
fnstsw
je
inc
in
or
leave
loop
popf
xor
cmp
jnp
sbb
or
sbb
jne
or
stos
lock
addr16
aas
ja
sti
mov
and
faddl
stc
in
mov
test
push
mov
and
hlt
std
push
mov
ss
ret
mov
xchg
cmp
and
pop
xchg
push
loop
or
aas
mov
cli
movsl
sbb
aas
mov
lahf
in
sbb
push
add
and
adc
cmp
adc
xchg
push
push
push
pop
hlt
arpl
stc
mov
or
lock
mov
stos
sbb
mov
and
cmp
cmpsb
sbb
imul
in
sbb
roll
cli
nop
jp
dec
in
or
xchg
stc
popf
mov
mov
negl
cmp
mov
enter
or
imul
dec
idiv
adc
fisubs
pop
cmp
jle
aaa
in
iret
xchg
aad
or
lds
pop
mov
imul
movlps
repnz
mov
ficompl
ret
cmp
out
sub
push
xchg
sbb
jns
test
xchg
addr16
mov
aam
and
push
roll
leave
invlpg
int
inc
jecxz
je
dec
mov
push
jge
push
aad
movsl
jp
cltd
xor
pop
popf
push
mov
mov
arpl
jmp
jne
movsl
dec
pop
pop
sub
fldt
movsb
inc
mov
icebp
call
mov
add
mov
push
cmp
lods
jne
sub
inc
inc
fdivr
scas
stos
mov
lods
xor
xor
ret
sub
loope
repnz
add
iret
ret
xchg
pop
xchg
cmp
jecxz
xor
xchg
loope
lods
sub
outsb
xchg
out
xchg
cmp
test
fisubl
add
imul
out
ds
call
xchg
in
pop
push
shll
push
xchg
popa
push
mov
repnz
rcll
fucomp
scas
push
out
nop
int3
lret
jg
sub
int3
inc
lcall
jge
lcall
in
jns
stos
hlt
enter
movsb
sarl
sbb
ret
aam
push
push
inc
mov
test
lret
xor
jp
sbb
sbb
popf
jg
mov
inc
test
shll
mov
jmp
lods
mov
jecxz
jge
xchg
mov
sti
and
sbb
repz
cmp
jmp
loop
aaa
and
movsb
imul
add
xchg
inc
sub
js
jmp
push
cmp
and
cmpsb
test
cltd
rcl
mov
das
insb
leave
jbe
xor
stc
inc
push
sub
sbb
xor
xchg
shll
inc
sbb
adc
lock
mov
cmpl
mov
xchg
fcmovnb
movsb
popa
sub
pushl
adc
aam
cmpsb
enter
test
xor
test
sub
adc
pop
pop
mov
inc
inc
ljmp
mov
pushf
rorl
pop
ja
cmp
popf
xchg
sbb
inc
daa
and
shlb
jle
scas
inc
shlb
movsl
out
sahf
pushf
shr
lcall
cmp
lods
mov
imul
loope
aam
pop
and
adc
movsb
mov
xchg
arpl
pop
fmul
bound
or
test
push
mov
stos
lods
xor
cmp
mov
int3
cmpsl
int
cmpsl
test
iret
repnz
stc
pushf
call
and
mov
stos
cltd
shll
xchg
lret
and
rcrb
rorl
or
inc
test
mov
std
cmpsb
lock
nop
repz
sarb
andl
and
mov
adc
adc
int3
outsl
lock
inc
jp
adc
imul
jp
dec
pop
dec
mov
bound
xchg
pop
add
xchg
les
outsl
rorl
je
add
fmuls
xchg
or
sub
lret
data16
or
inc
popa
and
pop
jecxz
inc
and
scas
loop
cld
inc
pop
inc
jo
repz
jbe
orb
fadd
adc
dec
arpl
and
jmp
pop
cmp
xor
push
popf
int3
mov
mov
jl
andb
sbb
mov
push
or
mov
jns
js
stos
push
adc
fidivs
lcall
out
mov
add
cmp
nop
push
inc
hlt
push
movsb
cltd
bound
or
inc
pop
inc
sub
inc
gs
lret
test
repnz
xchg
sub
xchg
adc
rcrb
popa
inc
insl
push
inc
std
shl
or
out
loopne
and
pusha
mov
xchg
mov
ds
add
xchg
push
inc
loopne
loope
call
push
out
lcall
das
arpl
pop
stos
jl
movsb
mov
cmc
jle
jge
mov
mov
sub
test
add
andb
jmp
xchg
in
out
cld
jnp
jno
lods
lock
inc
mov
mov
xchg
sti
cli
shr
mov
push
or
pop
loop
xor
mov
mov
lock
add
aaa
inc
add
jg
and
sbb
sbb
xchg
xchg
jecxz
mov
icebp
jmp
jns
adc
bound
push
fildll
leave
push
and
rcll
dec
xor
push
sub
jno
popa
push
xchg
xor
fs
clc
sbb
test
cmpsl
movaps
jo
adc
inc
xchg
xor
mov
inc
shlb
test
int3
lds
addr16
lret
testl
push
and
dec
and
push
ljmp
xchg
mov
dec
out
cmp
dec
pop
mov
sahf
push
jmp
mov
mov
enter
imul
inc
adc
add
jmp
imul
mov
push
pop
mov
push
push
test
aad
pop
pop
pop
inc
fcoms
jae
cmpsl
enter
push
imull
sub
lahf
mov
dec
cmp
mov
mov
mov
out
iret
push
cld
sbb
adc
sub
inc
sub
mov
pop
xorb
mov
or
add
dec
cmp
inc
das
pop
test
negb
fiaddl
aam
jns
sub
movsb
popf
mov
imul
in
mov
pop
in
mov
mov
int3
push
xchg
adc
addr16
adc
scas
and
xchg
sbb
loop
mov
jmp
mov
xchg
cwtl
jnp
dec
mov
cmc
add
fidivs
leave
lret
push
jp
mov
xchg
sar
jp
cmc
jns
xchg
mov
add
cli
movups
pop
xchg
inc
mov
or
ja
sub
pop
push
adc
inc
nop
pop
lea
adc
cmp
push
jge
mov
popf
ja
pop
les
adc
cld
push
ret
jo
cmp
add
mov
or
cmp
xor
andb
scas
rcll
adc
clc
orb
fdivrs
xchg
pusha
movsl
jb
addr16
push
inc
add
inc
rcll
popf
loope
int
adc
icebp
push
jns
mov
les
popa
stos
movsl
scas
cmp
jo
mov
jle
push
mov
or
jbe
push
jbe
jbe
and
mov
xchg
pop
fldt
in
popa
sahf
pop
sbb
les
bound
inc
fwait
ds
daa
mov
sahf
inc
loope
movsl
push
loope
es
ret
push
pop
and
call
push
int3
adc
dec
pop
jle
mov
icebp
cmp
adc
mov
stos
imulb
mov
xor
mov
test
mov
scas
sub
fsubs
xchg
fldt
or
faddl
inc
push
xchg
not
jecxz
lea
in
push
mov
jge
test
in
push
and
mov
out
nop
cmp
loop
cmp
xchg
sub
loop
add
shlb
test
jecxz
push
in
int
inc
dec
push
rcll
leave
cmc
push
mov
dec
push
mov
or
scas
dec
pop
mov
loop
push
ss
sbb
cmpsl
push
jo
push
sbb
ljmp
nop
pop
pushf
sbb
pop
int3
push
sbb
lods
xchg
push
cltd
or
enter
loopne
scas
lea
cmp
sbb
aas
ret
xor
sbb
addr16
bound
jecxz
mov
neg
xlat
je
push
add
int
mov
fstpl
xor
xchg
inc
push
sub
mov
cmp
stos
pop
aas
jae
dec
mov
dec
rcl
fnstsw
jle
jecxz
sub
call
in
cwtl
and
repnz
jmp
cmp
xchg
pop
data16
or
leave
dec
cmpsl
je
pop
cmp
test
bound
jmp
mul
jne
out
mov
rcrb
ja
mov
cwtl
jno
fiaddl
jns
adc
aad
sbb
xchg
mov
neg
into
and
neg
bound
lret
outsb
mov
and
lock
mov
or
jnp
mov
push
fcoml
loope
imul
stc
out
daa
xlat
mov
add
sub
mov
pop
jo
adc
pop
pop
push
ficoml
xor
pop
jle
push
je
push
pop
jmp
mov
repz
frstpm(287
jo
xchg
push
or
insl
repnz
xchg
inc
adcb
xchg
mov
orl
inc
in
imul
cmc
sbb
test
inc
add
jl
xor
daa
aam
fcompp
inc
mov
dec
jge
xchg
xchg
mov
aaa
lret
sbb
shll
inc
aas
aad
dec
mov
or
mov
dec
fstpt
iret
inc
mov
add
xchg
mov
dec
mov
xchg
pop
or
push
or
push
out
fcoms
wrmsr
inc
pop
cmp
mov
jnp
and
pusha
pop
xchg
push
jae
sub
inc
push
inc
inc
mov
cli
sbb
pop
ja
pushf
sub
aad
push
push
xchg
and
push
pop
fs
loop
xchg
or
fwait
jmp
adc
cwtl
cmp
mov
sub
xchg
into
ljmp
mov
jne
movsl
jbe
pop
jl
cmpsl
pop
and
xchg
movsb
sbb
adc
ret
lcall
pop
jge
loop
add
xor
mov
fcomip
xchg
aad
jo
ss
inc
mov
mov
test
test
and
pop
jb
push
fwait
adc
jb
adc
scas
leave
jg
and
push
ljmp
icebp
adc
or
jnp
aam
lea
lock
sub
and
mov
push
mov
pop
pop
jne
cmp
adc
icebp
movsb
adc
and
add
sbb
cmp
out
test
xchg
and
mov
pop
inc
testb
pop
xchg
aam
xorl
cmpsl
test
jns
mov
jb
fs
jmp
cmp
int
shll
and
mov
adc
outsb
test
enter
dec
sbb
dec
mov
mov
shlb
ret
mov
mov
xchg
sbb
xadd
ja
mov
xchg
push
ret
push
xor
leave
sbb
xchg
ficompl
flds
push
xchg
xchg
and
inc
cmp
cmp
out
shlb
push
dec
add
stc
inc
aas
dec
or
jae
push
sub
mov
pop
test
js
sub
ja
sub
loope
mov
add
fcoml
and
les
insb
ficomps
bound
inc
shlb
les
in
add
outsb
pusha
in
inc
mov
rclb
test
test
jo
nop
loope
std
popa
insl
hlt
popf
out
or
cmp
notl
pop
jbe
std
mov
dec
fsubrs
cmpsb
dec
push
outsb
mov
bound
fildl
fiadds
in
mov
sti
fcmovnu
jmp
lds
out
shl
sahf
insb
push
out
xchg
out
insl
incb
pop
add
sub
rcl
fdivl
loope
sarl
mov
mov
jb
jbe
ss
and
cmc
sbb
sahf
lea
add
mov
jno
les
jge
mov
lods
ret
fildl
pushf
enter
out
ret
insb
test
mov
sbb
gs
mov
jne
lds
ret
xor
xor
mov
shlb
mov
sub
and
orl
push
bound
roll
scas
in
inc
xchg
mov
mov
rorl
mov
outsl
dec
mov
or
inc
sub
sub
lea
popa
mov
div
xorl
jns
mov
rcr
adc
or
cmpl
mov
les
int3
push
mov
lahf
pop
ds
xor
sbb
mov
xchg
jb
or
ret
cli
fisubrs
mov
mov
ss
mov
mov
jl
push
mov
outsb
hlt
push
rolb
and
out
enter
clc
push
adcl
sub
push
test
pop
mov
insb
in
push
mov
in
cmp
mov
pop
std
fcomp
dec
push
sbb
rol
push
ret
xor
pop
push
pusha
push
sub
cmp
mov
mov
mov
daa
insb
jno
lock
in
xor
and
lcall
mov
adcb
out
push
sahf
jbe
lahf
int3
mov
les
negb
sub
xlat
int3
outsb
or
sbb
pop
sub
lret
or
scas
into
stos
movsl
adc
iret
push
sti
pop
shrb
sub
repz
mov
mov
fmull
xor
sti
jnp
push
andb
inc
pushf
dec
shl
mov
dec
xlat
out
pop
insb
lock
ja
jmp
mov
inc
jp
mov
xchg
jge
cs
xor
ljmp
adcb
mov
jg
fmuls
cmp
cmp
inc
pop
ret
test
mov
pop
pushf
les
cltd
jmp
test
cmpsb
imul
pop
fldz
push
insl
jmp
add
in
and
les
cmp
fwait
xor
pop
andb
cwtl
loop
cwtl
enter
out
insl
push
fstps
sbb
jg
jge
ljmp
push
xchg
and
mov
or
mov
cld
outsl
test
pop
dec
call
add
shlb
mov
mov
repz
imul
repnz
and
sbb
mov
jle
inc
ret
je
push
push
mov
cmp
insb
push
or
mov
std
fs
push
das
and
and
add
stos
scas
mov
xchg
xor
jle
fs
add
test
es
inc
cmpl
dec
bound
dec
cltd
fyl2xp1
popa
lds
push
mov
ss
mov
jl
mov
xor
mov
ja
faddl
pop
icebp
sub
ds
and
xlat
int
or
dec
addl
mov
push
setl
outsl
or
insl
cli
inc
fadds
lea
add
inc
pop
dec
lret
cmpsb
mov
push
xor
mov
daa
xor
mov
sub
add
out
jnp
sbb
mov
push
pop
jns
ss
into
add
push
fcomps
dec
sbb
fs
add
icebp
in
cld
stos
pop
and
xchg
add
mov
shrb
cmp
cmpl
sub
mov
movsb
icebp
mov
dec
mov
jb
call
xor
rcr
lods
stc
cmp
addr16
pop
fnstsw
add
or
and
out
iret
aas
mov
sbb
addl
divb
rorl
and
dec
xlat
inc
pop
daa
rcrb
fwait
and
xor
or
inc
fsubp
inc
push
rcl
cmp
mov
add
call
jae
int
call
popf
or
aas
cmpsl
out
js
dec
in
lods
lods
jb
jo
mov
iret
dec
pop
sbb
test
or
cmpsb
pop
xchg
test
in
jg
dec
ljmp
popa
inc
iret
xchg
into
outsl
arpl
shll
test
aaa
pop
call
sub
leave
xchg
rcrl
mov
pop
icebp
stc
push
dec
nop
xorb
pop
repz
in
rcll
jns
sbb
mov
sbb
dec
jmp
or
inc
or
or
adc
sub
ret
into
mov
imul
xor
lock
fsubrs
out
mov
cmp
jo
shr
cmp
inc
sbb
test
lcall
cmp
mov
xchg
std
cltd
lock
mov
push
pop
sub
es
lret
lock
fstps
cmpsb
mov
adc
mov
xchg
and
add
cs
fwait
mov
icebp
popa
pop
mov
cmpsl
rorl
lods
mov
dec
pop
gs
push
pop
into
subl
lret
into
xor
sub
imull
movzwl
fs
push
sbb
add
and
xor
iret
stos
sub
and
inc
jmp
mov
test
xorl
stos
scas
jno
mov
testl
decb
lret
xchg
dec
bound
jmp
push
xchg
addr16
sub
push
adcl
xchg
call
loope
testb
mov
or
aam
aad
jo
inc
mov
dec
and
pop
mov
jl
adc
out
fidivrs
push
loopne
aad
pop
jl
pushf
dec
in
cld
jmp
cmpsb
in
arpl
inc
clc
jnp
fs
pop
test
mov
leave
cs
mov
mov
popa
mov
dec
cmp
sbb
xchg
fs
mov
inc
nop
stos
bnd
ljmp
imul
testb
jno
test
jmp
fld
xchg
ds
test
push
iret
xchg
call
mov
jae
and
sahf
imull
mov
imul
fisttpl
movsb
test
sahf
mov
push
and
adc
xchg
jp
jbe
mov
lds
adc
fnstcw
mov
scas
push
sahf
mov
dec
cmc
push
mov
cmp
shrl
gs
jge
xchg
and
sti
lds
mov
insb
mov
mov
jbe
jbe
xor
mov
fmull
cmp
mov
aaa
and
lret
sbb
add
in
push
imul
int3
sbb
js
dec
addl
jg
adc
push
jp
frstor
cmp
addr16
pop
hlt
scas
mov
jnp
fxtract
add
lcall
jl
xchg
jbe
testb
int
sub
inc
dec
in
mov
inc
push
pop
fistl
lret
sub
cmp
push
test
or
shr
xor
dec
push
inc
rcll
xor
or
mov
jle
ret
adc
into
add
sti
add
aaa
sub
ret
or
dec
stc
aaa
scas
mov
bound
xchg
push
xchg
clc
pop
cmp
or
std
les
and
arpl
mov
pop
rorl
popa
sub
es
sub
sub
cli
bound
jbe
bound
dec
pop
push
imul
cmp
jmp
out
mov
inc
pushf
push
xlat
jle
inc
jbe
or
sub
sbb
test
mov
rcrl
test
inc
ror
lds
cli
ja
push
into
sbb
add
sub
and
mov
aam
jp
in
pmaddwd
lret
inc
inc
jbe
push
loope
or
mov
jno
mov
pop
sbb
mov
imul
sub
aas
lods
push
pushf
xchg
lods
xorb
mov
les
iret
push
lcall
scas
sbb
ja
loopne
jne
or
add
push
test
fwait
xchg
and
outsl
and
loope
fcmovb
rcl
lea
stos
xor
push
sub
bound
insl
dec
xlat
nop
lcall
loopne
ficomps
add
xor
mov
xchg
arpl
sbbl
mull
cld
repnz
in
int3
jmp
rorl
jb
jno
sub
pop
ret
mov
mov
arpl
lahf
mov
sub
push
mov
fdivrl
sub
and
jb
cmpsb
mov
xor
call
pop
imul
mov
sbb
jl
jle
mov
pop
lcall
stc
push
jle
sbb
push
in
inc
std
push
pshufw
add
inc
ljmp
je
cmc
imul
cwtl
fs
rcrl
sbb
out
or
iret
aad
rcrl
stc
push
mov
adc
outsb
xchg
sub
into
outsb
add
rcrl
pushf
pop
pop
xor
ficomps
stc
pop
sahf
sbb
xchg
shlb
test
daa
xor
inc
mov
inc
stc
jbe
daa
mov
movsl
loope
data16
mov
add
or
mov
push
out
mov
mov
lods
mov
arpl
sbb
test
hlt
mov
ljmp
jb
jge
mov
jle
ret
mov
or
mov
or
fidivrs
sbb
xchg
call
add
int
and
jecxz
inc
into
cld
jmp
inc
ds
mov
pop
cli
mov
jle
add
fiaddl
pop
adc
and
dec
mov
rorl
mov
cmp
jno
in
push
enter
or
sbb
pop
push
pop
mov
test
decb
out
add
mov
mov
fildl
xor
addr16
and
stc
dec
or
repnz
stos
rcr
jb
jg
ficoms
pop
xlat
iret
push
xchg
push
ret
jo
xchg
cwtl
xchg
lahf
sar
inc
hlt
or
insl
mov
mov
dec
scas
mov
jg
shll
in
loopne
cmp
xor
pushf
adc
jne
inc
mov
xchg
push
jne
pop
test
fnstenv
sbb
pop
enter
int3
mov
lcall
repnz
nop
aaa
dec
mov
aam
bsr
mov
pop
pop
mov
fnsave
pop
aaa
fisubl
jns
jmp
and
xlat
adc
sub
test
push
in
and
jbe
fistpl
cmpsl
pop
lret
sub
sbb
mov
out
mov
faddl
xor
push
cli
out
push
filds
hlt
or
or
push
mov
adc
out
js
xor
dec
in
out
pop
inc
sub
mov
aas
mov
mov
mov
or
sub
data16
and
jle
pop
imul
andb
inc
cs
and
mov
pop
fisttpl
jge
pushf
push
out
in
aas
sbbl
mov
dec
icebp
in
lods
fdivr
ss
fcoml
fcmove
mov
xchg
shrb
lock
lea
cmp
push
mov
mov
daa
pop
push
imul
jae
mov
inc
fcmovbe
pop
loope
cli
iret
adc
aaa
mov
xor
popf
out
into
or
inc
xchg
insb
lock
mov
icebp
int3
dec
andb
mov
xchg
xlat
cmpsb
mov
fs
pop
xchg
and
dec
gs
inc
pop
mov
fwait
dec
lret
lcall
jge
ret
addr16
pop
dec
sbb
jne
bound
gs
lahf
fisubl
cmp
xor
popl
rol
jle
inc
imulb
adc
fs
xchg
sahf
lea
in
ss
insb
add
lcall
push
repnz
mov
daa
fistl
pop
cltd
sbb
subl
sub
add
fadds
lods
hlt
movsl
and
mov
dec
mov
pop
lock
in
lea
sub
enter
xlat
decl
push
mov
cmp
jge
push
sub
xchg
jp
stos
jo
sbb
or
jmp
adc
rolb
and
jnp
fwait
inc
test
sub
cmp
pop
mov
hlt
jle
int3
les
push
lret
and
adc
mov
add
adc
xlat
mov
xorl
sbb
jge
cmc
fsubl
or
cmc
cmp
jp
xor
shlb
les
mov
push
xchg
leave
fldcw
dec
push
gs
je
sub
out
sbb
jge
cmp
or
in
stc
shrb
in
or
mov
xchg
and
push
xchg
mov
sbb
in
cwtl
popl
mov
sbb
push
mov
push
enter
fwait
cli
xchg
out
movsl
fcmovnu
movsb
dec
mov
xor
inc
scas
subl
xor
call
ja
and
cmp
bound
pop
sbb
mov
xor
xor
icebp
adc
pop
adcl
cs
es
xchg
sub
jg
cmp
icebp
arpl
push
testb
dec
or
repz
push
xchg
mov
sub
shl
push
mov
popl
jbe
outsb
rorl
pop
in
test
ja
jb
sub
in
stc
jmp
xchg
xor
adc
push
or
test
out
xchg
sbb
inc
jge
mov
stc
mov
xor
mov
jns
adc
int3
hlt
mov
sti
punpcklbw
inc
and
popa
sub
or
test
inc
cmp
hlt
js
popf
repnz
out
xor
insb
test
je
mov
cmc
xor
rorb
or
aam
mov
inc
scas
enter
ret
push
adc
es
jne
and
xchg
xchg
mov
repz
pushf
xlat
in
rolb
cmp
in
out
jns
xor
xchg
push
sbb
lea
cmp
iret
add
xchg
push
pushf
cltd
ret
je
mov
adc
xor
lret
push
repz
ds
aaa
push
dec
pop
mov
xchg
or
inc
ret
or
pop
mov
nop
mov
xor
sbb
jns
mov
aad
dec
movsb
das
out
inc
lds
adc
inc
insb
mov
lods
scas
test
test
dec
rclb
jl
mov
sbb
shlb
adc
scas
xchg
inc
mov
gs
ds
daa
out
mov
stos
adc
cmp
dec
jne
call
hlt
jl
inc
popf
inc
xchg
bswap
ret
dec
adc
test
or
ja
stos
stc
aaa
ret
clc
int
pusha
shlb
div
add
xor
roll
sbb
testl
out
in
mov
xor
ret
popa
mov
pushf
lock
jl
mov
xchg
lea
in
out
mov
xchg
shufps
cmp
faddp
mov
dec
test
jne
movsb
cmp
jbe
mov
lret
lret
adc
adc
pusha
push
into
xchg
in
jne
mov
in
fs
jno
sti
in
cwtl
jo
sub
ds
aaa
jbe
mov
adc
push
aas
mov
fdivs
adc
pop
push
les
sub
mov
arpl
cmp
adc
sub
xor
add
lea
je
lret
out
leave
pusha
adc
add
mov
push
int
pop
inc
sub
cli
outsb
clc
je
dec
pop
or
and
cmp
stc
pushf
mov
call
lcall
mov
xchg
lahf
push
fnstcw
dec
sbb
fstpt
jecxz
adc
or
stos
jns
test
jnp
xchg
xor
jg
pop
inc
pop
je
xchg
add
push
cmp
mov
push
mov
sub
adc
js
pop
into
ret
daa
popf
mov
add
mov
add
xchg
xchg
sub
xor
mov
mov
jle
lahf
mov
nop
popa
hlt
arpl
xchg
add
in
stos
fildl
sub
out
mov
cwtl
cmp
loope
imul
rorb
cmp
js
jb
pop
add
adc
insb
shlb
mov
mov
sbb
lods
icebp
or
cld
cltd
popa
and
cld
add
inc
cmc
cmpsl
aaa
stc
mov
xchg
loopne
and
lret
adc
xchg
aam
pusha
mov
push
push
into
out
icebp
jo
add
push
mov
inc
mov
rorl
sub
cs
sub
and
xor
push
xchg
and
std
or
inc
pushf
and
cmp
test
inc
sub
repz
cmpsb
jnp
lret
xchg
push
add
push
lcall
inc
dec
jl
cmp
xchg
adcb
jl
xlat
addb
mov
mov
movb
out
dec
add
cmpb
cmpsb
ret
mov
jmp
add
add
cli
mov
xor
movsb
movsb
int
mov
scas
pop
test
sbb
add
pop
popf
jp
and
jmp
dec
sbb
stos
inc
sub
and
stos
xchg
clc
and
es
ret
add
adc
mov
movsb
test
dec
test
jns
or
addr16
rolb
sarl
cmc
xor
mov
jbe
fdivrp
mov
jb
fidivs
cmpsl
pop
dec
loope
jno
inc
pop
nop
xlat
ret
negb
xchg
adc
mov
mov
sbb
xchg
gs
dec
sti
push
push
shl
dec
jne
lods
fcmovnu
scas
or
xor
bound
test
mov
sub
movsl
nop
or
adc
lcall
dec
imul
jae
arpl
xchg
lcall
jg
pop
or
pop
pop
push
fwait
xlat
movsb
loopne
mov
popf
xor
dec
and
mov
cmp
push
iret
movsb
inc
cmpsb
mov
mov
dec
push
in
mov
adc
dec
push
jmp
xchg
addr16
hlt
or
jb
pop
rorb
sbb
nop
or
jno
insb
mov
adcl
mov
mov
dec
test
lcall
push
push
adc
cs
mov
leave
dec
std
xchg
dec
push
pop
inc
push
not
dec
loop
sbb
dec
mov
in
jno
push
roll
mov
add
ds
fnstsw
minps
push
cli
lods
ds
jle
xchg
out
pusha
unpcklps
sbb
je
iret
aad
add
lock
rorl
int
bound
pop
sub
mov
cmp
enter
iret
sbb
or
std
out
in
adc
in
mov
fistps
test
incl
ljmp
xchg
pop
andl
or
je
loop
mov
movsb
xchg
int3
pushf
rorw
int
hlt
cmp
jb
mov
cmp
jge
xor
rcrl
sbb
dec
stos
das
push
stc
xor
hlt
pop
icebp
fildll
mov
jae
or
and
cmp
outsl
xchg
in
shlb
aas
mov
xchg
sbb
pop
inc
sub
sbb
dec
pop
int3
cltd
and
xor
sbb
xor
fldt
xor
jne
cs
add
mov
pop
cmpps
subb
addl
nop
loop
lea
rcl
jo
sub
mov
or
xor
jbe
xor
xor
data16
push
add
jl
insl
push
mov
add
sub
fs
insb
data16
cltd
pop
bound
in
sbbl
adc
cmp
cmp
in
out
add
fistpl
pop
adc
stos
inc
add
pop
insl
mov
out
iret
pop
push
mov
dec
in
pushf
rcrb
or
adc
cli
mov
lret
mov
andb
dec
jg
jg
or
add
or
mov
or
mov
pop
xor
les
movsl
cmp
push
pause
aas
cs
adc
push
call
or
mov
jns
xchg
inc
jge
outsb
addr16
mov
out
sbb
xchg
push
mov
jmp
js
pop
or
adc
js
pop
fstp
push
sub
sub
dec
and
test
mov
add
sub
std
inc
xchg
xor
popa
xchg
and
mov
cli
addl
pop
or
jmp
mov
adc
adcb
mov
faddl
in
lret
pop
shll
hlt
cmpsb
rol
clc
imul
mov
xchg
rcr
jge
push
ds
xchg
xchg
dec
fidivrs
sub
push
faddl
je
jne
mov
mov
adc
shll
mov
mov
fildl
test
fcmovnb
lcall
mov
pop
sti
or
xchg
pusha
or
jg
movsb
aam
bound
scas
push
insl
in
mov
adc
dec
mov
xor
xor
cmp
js
and
push
push
pop
hlt
jmp
add
dec
test
shll
mov
pop
add
jnp
jecxz
pop
fidivs
in
andb
and
sub
inc
cmp
call
pop
pop
call
clc
inc
stos
push
fildl
pop
lods
mov
and
cli
jl
add
adc
les
in
mov
test
pop
xchg
xlat
xchg
push
mov
cs
fsubs
push
dec
insl
pop
ret
sbb
push
mov
or
xchg
pop
jns
cmp
imul
lret
sarb
cmpsb
btr
mov
daa
cmp
jae
shlb
add
mov
dec
jae
push
sarl
lret
pop
lahf
mov
xchg
adc
les
std
test
imul
ret
pop
fiadds
das
jmp
cltd
outsb
rcr
lods
dec
cmp
mov
jbe
cmpsl
es
pop
push
mov
repnz
sub
xchg
and
fadd
leave
loop
into
lret
shll
fwait
lds
jne
int3
pop
sbb
fstp
sti
cmc
xchg
push
dec
push
iret
fisubrs
dec
sub
mov
cmc
sbb
inc
pusha
xchg
pop
jno,pt
inc
loope
imul
adc
push
fwait
rorb
mov
sti
push
mov
pop
std
pop
out
xchg
cmp
mov
xor
cld
insl
mov
jbe
stos
sbb
repnz
mov
test
mov
mov
pop
stos
dec
sbb
fsubs
out
push
nop
mov
pop
sbb
notb
mov
sbb
xor
loopne
mov
fcoms
pop
sbb
mov
pop
outsb
pushf
mov
adc
push
mov
lods
testl
add
cs
push
addr16
mov
scas
test
push
xchg
and
mov
insb
add
xorl
pop
mov
pop
fwait
repnz
popa
mov
fsubrl
in
roll
lods
jnp
cmpsl
cwtl
pop
inc
mull
add
mov
mov
lods
add
in
dec
xor
jmp
adc
jecxz
mov
dec
xchg
mov
shlb
jmp
and
sub
mov
and
mov
mov
into
outsl
movsl
shufps
mov
inc
push
fisubl
in
inc
data16
out
lret
xchg
mov
mov
aad
loope
cmc
and
out
repnz
pop
lds
mov
testb
xlat
loope
add
mov
cltd
loopne
fprem
push
imul
inc
cld
cmp
cmp
jle
rolb
fstpt
jmp
jge
sbb
or
es
and
cmp
aam
test
or
iret
sub
xor
jmp
adc
and
xchg
popf
lcall
scas
mov
mov
or
adc
and
adc
mov
xlat
dec
mov
lock
adcb
xchg
push
fsubl
lods
and
fsubs
jne
shlb
mov
sti
cmp
stc
dec
pop
fistpl
sbb
mov
sbb
loopne
jle
fcompl
les
out
out
and
jg
cmp
cld
int3
ret
xor
call
das
shlb
fucomp
dec
hlt
sar
scas
add
inc
jb
aad
daa
cli
jge
jle
enter
cmpsl
int
test
shrl
in
sarl
push
or
sahf
lret
cld
cmp
inc
mov
mov
es
popf
adc
sbb
daa
or
or
in
sarl
lahf
add
je
mov
mov
aas
repnz
xlat
add
mov
mov
lret
xlat
adc
or
add
cli
lret
mov
jg
adc
es
xor
es
les
dec
aad
pop
jg
int3
mov
addr16
dec
inc
jg
mov
iretw
sbb
lahf
leave
xchg
fwait
push
add
jnp
imul
pop
cmp
adc
cmpsl
lret
cmp
std
test
cmp
cmpsb
or
push
stc
fidivs
jns
call
push
pop
pop
xchg
cmpsb
ja
lods
repz
aam
cmp
add
call
sbb
pop
push
mov
subb
adc
in
dec
mov
stos
jg
and
dec
outsl
dec
call
out
fistl
xchg
rorl
push
mov
add
cmpsb
iret
xor
jg
int
push
fidivs
mov
mov
ficoml
jno
addl
push
adc
push
mov
ret
lret
inc
cli
cmp
cmp
rcl
pop
sub
repz
shr
imul
stos
mov
stos
xchg
inc
outsl
push
dec
mov
jmp
int3
in
loope
pop
xchg
pop
mov
dec
add
cmpsl
xorl
inc
push
int3
jnp
mov
mov
cltd
lret
and
fiaddl
mov
or
sub
addb
paddw
lret
push
fdivs
or
das
push
lret
mov
movsb
mov
jnp
out
aaa
push
testb
xor
out
sbb
testb
lea
int
pop
outsl
dec
fldenv
push
nop
mov
pop
int
inc
lods
imul
and
add
xor
xchg
xor
in
in
pop
jmp
cmpl
jbe
fstpt
pusha
cld
xchg
pop
es
les
fbld
jl
xchg
das
sub
mov
cld
bound
sbb
add
cwtl
lods
mov
push
mov
push
xchg
out
add
cmp
jl
lret
and
inc
lock
cmp
ss
and
leave
fimull
xchg
mov
shll
addr16
aaa
and
mov
push
test
cmp
daa
pop
stc
aaa
xchg
jmp
lea
out
mov
dec
cmc
rclb
stc
dec
xor
jecxz
pop
loop
arpl
mov
adc
mov
mov
in
dec
mov
call
xchg
dec
lret
cmp
cmp
aas
jp
mov
dec
js
and
xchg
enter
jg
in
lcall
jnp
cld
sub
sahf
xchg
aaa
add
test
divb
mov
aaa
mov
cmpsb
inc
inc
jnp
test
out
and
sub
cltd
push
js
adc
test
cmp
xlat
adc
and
jnp
mov
dec
stc
sbb
xchg
les
inc
sti
imul
test
shll
xchg
out
xor
mov
lods
cli
fidivrl
lcall
sahf
shl
sti
jne
je
stos
jg
shll
js
lock
xorl
gs
push
dec
inc
sbb
pop
inc
pop
jge
xor
sub
mov
jbe
ljmp
mov
mov
xchg
sub
add
lea
in
inc
xor
pop
xor
adc
aaa
xor
fistps
dec
pop
cmpsb
shll
lock
pop
loopne
mov
jge
pop
add
mov
aaa
addl
ss
xor
stc
das
cwtl
inc
js
lcall
and
andl
shll
jp
mov
popa
or
in
jge
hlt
pop
fstl
aad
pop
push
xchg
xor
mull
iret
pop
and
outsb
and
mov
lods
sub
adc
xor
mov
xor
bound
scas
lcall
hlt
test
inc
inc
fldenv
mov
inc
test
mov
xor
js
mov
pop
outsb
add
dec
call
clc
bound
mov
jecxz
lret
hlt
cmp
adc
dec
les
pop
das
cld
mov
popa
sbb
xor
pushf
xor
mov
aam
repz
jl
xchg
dec
inc
repz
fs
es
icebp
push
addr16
pushf
roll
les
in
fstps
imull
add
pop
jbe
stos
test
cmp
into
dec
out
dec
dec
int3
int3
xchg
subb
sbb
fmull
data16
pop
out
xchg
out
push
inc
pop
neg
test
push
sub
into
dec
leave
xor
ret
jmp
repz
lahf
mov
clc
mov
jns
sbb
add
ljmp
mov
jmp
sahf
or
cmp
insb
icebp
leave
mov
push
shlb
mov
inc
mov
cmp
iret
xor
lods
shl
ret
mov
imul
mov
and
inc
fwait
sbb
mov
xchg
and
sbb
and
cltd
pop
add
pop
leave
adc
sarl
imul
ror
lods
pop
popf
mov
jecxz
lods
xchg
lcall
daa
mov
and
cmc
aaa
or
and
inc
inc
and
dec
xchg
lret
cmp
es
pop
sahf
mov
mov
lea
aas
stos
fadd
movsl
cmp
sub
mov
pop
cmp
and
inc
mov
jl
push
cwtl
loopne
fnsave
in
push
int3
pop
in
adc
mov
sub
push
inc
cltd
rcll
adc
inc
lock
cli
js
out
mov
xchg
xor
cmc
adc
jmp
iret
mov
and
pop
mov
cmpsb
inc
xor
xor
jp
fcoml
pop
sub
leave
xor
jo
adc
ret
inc
aad
mov
shrb
aam
sub
sbb
out
mov
insl
fimull
outsl
cmp
add
push
push
addr16
push
or
loop
mov
jmp
mulb
jns
popf
popl
ljmp
lods
push
pop
adc
mov
mov
sbbl
lss
out
lret
inc
xchg
and
mov
mov
bound
push
jbe
or
mov
imul
fiaddl
insb
push
dec
je
sbb
mov
jae
add
xor
mov
and
and
notb
jmp
mov
fsubrl
adc
or
rcrb
stos
cmp
add
loopne
pop
sub
dec
dec
xchg
mov
addr16
push
inc
test
mov
inc
jne
pop
adc
and
push
arpl
insl
lds
in
jmp
or
and
cmp
sbbb
shrl
call
jmp
pop
cmp
repnz
jle
xor
cmp
fistps
mov
cmpsb
call
push
aas
sbb
xchg
fidivrl
cmp
mov
pop
movl
dec
mov
fidivrs
outsl
dec
mov
packuswb
sub
mov
and
out
push
jmp
inc
xor
movsl
lods
cld
lahf
mov
and
pop
push
inc
mov
cld
xlat
filds
push
int
les
inc
mov
loope
jbe
mov
outsl
out
adc
adc
jecxz
and
push
addr16
adc
cmovns
fidivrl
dec
jae
sbb
insb
ljmp
jne
cli
sub
das
pusha
or
dec
icebp
mov
push
fs
pop
mov
lods
insl
mov
xchg
into
sahf
andl
loop
imul
inc
call
and
and
in
cmp
in
arpl
in
adc
jo
mov
pop
adc
xor
and
xchg
adc
mov
daa
and
data16
push
inc
cmp
push
lock
mov
push
adc
push
inc
in
lods
outsl
sbb
ljmp
mov
pmaxsw
dec
inc
inc
popf
cmp
ret
xchg
add
daa
test
xor
push
cmp
adc
push
sbb
adc
insl
int3
pop
xor
jmp
arpl
cmp
into
dec
mov
inc
sbb
xor
aaa
xor
add
cld
xor
mov
lods
in
sub
sahf
add
test
repnz
xor
inc
cmp
push
jg
inc
push
dec
das
sbb
xor
sub
xor
addr16
jge
mov
popa
and
push
jge
sub
popf
fidivs
sarl
popf
leave
xor
lods
inc
das
cmpsl
movsb
int
pop
icebp
iret
mul
jmp
mov
lret
clc
sbb
lahf
push
arpl
ss
shlb
push
test
mov
inc
add
aas
lret
jle
pusha
mull
nop
xchg
mov
dec
xor
xlat
lcall
jo
mov
lock
cli
dec
imul
aaa
sub
jo
sub
test
pop
test
add
leave
jle
jl
addb
icebp
add
adc
inc
inc
sahf
jnp
lahf
push
xchg
movsl
fmul
push
sbb
lret
sahf
das
popf
adcl
lret
lea
cmp
aaa
repnz
add
push
mov
inc
jo
cmp
into
pop
test
pop
mov
adcl
fucomp
and
nop
adc
add
xor
test
and
into
inc
fbstp
lods
mov
push
mov
push
andl
jnp
les
adc
cmc
jecxz
or
in
test
lods
shlb
push
sbb
or
pop
cmp
pop
jg
cmp
and
cmpsb
push
popa
cs
push
jecxz
mov
in
stos
inc
push
xchg
push
in
outsb
mov
test
hlt
push
inc
push
cmp
sub
imul
mov
cmc
jmp
cwtl
or
insl
or
xor
inc
jbe
lcall
sbb
and
pop
jns
sub
mov
test
push
xchg
ficoml
or
jmp
fsubrl
pop
sub
and
inc
fistps
sbb
pushf
sahf
rol
cmpl
pop
mov
mov
rcl
add
bound
jecxz
test
jmp
sub
in
lahf
aas
in
add
mov
daa
mov
lahf
jo
mov
ret
sub
rcll
icebp
pop
sbb
sbb
and
xchg
clc
jg
push
add
adc
xchg
fistl
pop
adc
mov
addr16
sbb
adc
jl
mov
mov
mov
adc
ljmp
sub
imul
sub
mov
cmp
push
add
loopne
movsl
xchg
out
sbb
test
data16
in
xchg
das
pop
scas
lret
pop
or
call
pop
repnz
fadds
sub
push
push
repnz
ret
or
lahf
inc
scas
push
add
lock
popa
xor
dec
incb
sbb
inc
fmulp
stos
xchg
nop
cmpsb
push
inc
mov
add
push
aaa
mov
lcall
imul
push
stos
inc
add
aam
mov
mov
push
aad
or
jns
inc
std
cmp
inc
les
xchg
mov
push
nop
icebp
cld
push
pop
outsb
dec
cmp
fwait
sub
pop
sti
inc
mov
push
pop
push
loop
sbb
dec
loopne
jne
inc
in
fimuls
insl
xchg
in
mov
adc
pushl
cmpsl
xchg
dec
adc
mov
push
fistl
mov
clc
mov
arpl
fstpt
and
dec
lret
fbld
verw
shlb
jl
fldl
add
notl
jge
int
xchg
adc
adc
adc
loopne
idivl
sub
jne
push
sub
pop
ret
xchg
xor
xchg
stc
js
xor
sbb
push
mov
addb
and
and
cli
inc
jns
dec
jne
cmp
aas
sahf
or
fcmovnbe
shl
and
sti
aam
fiadds
add
fucomip
xchg
ljmp
pop
push
loop
sbb
std
rcrl
cmp
inc
sti
js
shlb
inc
roll
mov
nop
and
adc
cmc
sbb
test
mov
pop
gs
or
mov
push
cmp
fistpll
idiv
orl
xchg
add
filds
test
dec
enter
and
rolb
mov
jp
gs
cli
inc
lock
lods
pop
movsb
clc
ficompl
push
subb
sbb
stc
or
fdivr
jle,pn
cmc
jecxz
and
ja
scas
sbb
xlat
push
or
fstps
lret
cmpsb
pop
mov
stos
mov
pop
pushf
xchg
jecxz
add
rorb
adc
sbb
sub
shlb
xchg
fdivs
fisttpll
and
sahf
lahf
out
xchg
adc
cmp
fxch
fs
mov
mov
and
and
lea
pop
mov
jo
dec
out
imul
es
push
out
mov
stos
ret
mov
xor
nop
std
jmp
pop
pop
cmp
movsb
mov
inc
add
or
add
aam
ret
lods
xchg
rol
ds
adc
dec
jb
jmp
pop
insl
add
jbe
and
leave
fisubl
inc
ja
into
and
mov
mov
loop
xchg
push
orb
outsb
test
mov
add
icebp
xchg
xchg
push
sbb
fnsave
inc
icebp
loop
ja
xor
pop
jp
lahf
inc
das
sbb
aaa
cmp
add
xchg
mov
int
mov
cmpsb
bnd
test
pusha
mov
in
loop
mov
fisttps
sub
push
fildl
cli
fists
xor
push
add
sub
add
out
out
mov
sbb
adc
outsl
mov
or
mov
das
xorb
bt
lret
lods
lods
pushf
adc
out
jg
jnp
popf
outsb
stc
dec
lcall
or
or
out
ds
inc
mov
cmc
and
mov
shr
sbb
ret
sub
pop
dec
rcll
dec
popf
mov
addr16
shrb
add
lods
xor
bound
nop
push
jne
cwtl
xchg
push
mov
idiv
jmp
scas
bound
out
shll
sahf
mov
mov
test
pushf
cmpsl
mov
pusha
outsl
push
iret
scas
or
lahf
movsb
fdivl
push
mov
leave
cmp
push
aam
lods
mov
ja
cmp
cs
fists
push
sbb
jno
pop
cltd
mov
push
inc
daa
int
imul
sub
mov
pop
int
divl
inc
sub
xchg
pop
or
jno
fldt
in
mov
addb
xchg
int
pusha
movsb
mov
mov
addb
sti
nop
push
outsb
add
enter
pop
pop
popf
fs
andl
stos
int
sbbb
sti
push
sub
cld
cwtl
cmpsb
pop
sahf
push
mov
push
ja
jecxz
add
fnstcw
aas
test
lds
jbe
cmp
sub
imul
mov
mov
loop,pn
sub
mov
fdivl
fcomps
out
or
mov
jecxz
sbb
scas
pop
es
es
lock
pop
je
mov
xchg
push
nop
stc
out
sahf
js
icebp
popf
scas
pop
jge
cmpsl
push
pop
ljmp
push
icebp
insl
dec
xchg
fcomps
arpl
mov
mov
rorb
mov
lock
pop
pop
sbb
fistpl
mov
das
rclb
dec
fstpl
sahf
mov
mov
push
lcall
nop
xlat
pusha
add
and
cli
repz
outsl
mov
fstpt
dec
stos
sbb
add
ja
out
pusha
loope
orl
popf
adc
push
aas
cli
jns
inc
cwtl
push
lcall
mov
adc
testb
add
fsts
mov
push
sub
ret
test
daa
sub
out
mov
clc
pop
push
imul
sbb
pop
cwtl
adc
les
jmp
popa
xor
lock
and
sbb
call
sbb
adc
cmpb
mov
ficoms
or
jg
movsb
xchg
loopne
add
mov
call
fidivl
mov
orl
divb
stos
js
in
inc
popf
jle
aaa
out
jns
outsb
inc
gs
test
mov
fcomp
shlb
loopne
adcb
mov
cmp
fdivp
sub
js
js
pop
sub
rolb
xor
mov
sbb
cli
arpl
mov
mov
push
decb
mov
in
pop
pop
mov
jns
sahf
repz
lea
xchg
add
adc
xlat
xor
jns
mov
push
xlat
stc
mov
test
jne
sub
insb
and
in
insb
sub
out
cmpsl
mov
jg
sub
lcall
in
sahf
push
mov
mov
add
mov
popf
ss
push
hlt
outsl
mov
cld
and
xor
adc
aam
dec
call
add
pusha
clc
cmp
orb
add
cmp
icebp
cmp
lds
cmpsb
mov
mov
outsb
call
divb
mov
in
mov
je
pop
cwtl
xchg
flds
mull
xchg
inc
push
sbb
dec
push
outsl
ljmp
mov
adc
sbb
rolb
jnp
lea
push
cmp
jg
lret
mov
outsl
xchg
adc
lahf
sub
imulb
je
cmp
and
lcall
out
xchg
sub
insl
mov
in
xchg
mov
mulb
and
bound
testb
dec
jmp
sahf
shlb
sub
jo
das
cmp
mov
int3
out
fstp
mulb
call
inc
xchg
enter
sbb
xchg
inc
and
mov
test
push
jmp
fisttpl
bound
xchg
orl
adc
aam
es
dec
aaa
fmuls
fwait
mov
mov
ret
adc
dec
inc
or
mov
add
sub
pushf
rol
jl
fnstsw
pop
call
push
mov
pop
add
jmp
into
and
add
leave
inc
push
xchg
sbb
jecxz
sub
push
bound
xchg
je
in
sbb
mov
push
jne
scas
pop
scas
enter
push
xor
pushf
inc
and
call
lret
cmp
pop
imul
or
lods
mov
xchg
movsb
cmp
jecxz
jge
ljmp
inc
les
or
add
cmp
push
les
popf
out
fcmovu
sbb
stos
stos
jp
inc
out
pop
and
icebp
sbb
xorl
loope
loop
sbb
jp
jle
pop
mov
test
fcoml
pop
ret
mov
xchg
adc
inc
xchg
push
test
xchg
sub
xor
inc
add
and
sbb
dec
scas
sti
xchg
test
in
mov
jo
and
sbb
mov
and
hlt
add
test
dec
test
leave
inc
rclb
jnp
lds
inc
adc
nop
mov
jg
cs
add
icebp
jecxz
hlt
movsl
addb
dec
mov
xor
out
pop
push
lock
ret
dec
mov
lcall
push
sub
ret
popa
add
cmp
mov
int3
cmp
dec
fdivrl
shll
lret
push
icebp
stc
fmul
jne
xor
outsb
pop
sti
cmpsl
fxam
mov
sub
mov
andl
mov
out
fdivrl
enter
cmp
jbe
dec
or
data16
je
jae
fmuls
pop
dec
cmp
and
sbb
in
enter
hlt
aas
shr
push
dec
jge
jmp
rolb
fdivrs
sub
push
in
push
outsl
jo
dec
xor
cwtl
sbb
inc
int
push
mov
loopne
sarl
or
cmp
add
out
or
insl
jp
dec
jns
arpl
outsl
lds
call
push
paddusw
cmp
add
in
and
or
lock
andl
jle
stos
mov
cmp
lds
into
sub
fnsave
out
into
cmp
hlt
jo
lods
sarb
ror
aas
xor
std
inc
pop
stos
jnp
and
mov
adc
xchg
repz
mov
xchg
push
test
pop
ss
jg
jb,pt
daa
ja
jae
push
loop
cmp
xor
push
jo
ss
cmp
pop
mov
je
mov
lock
mov
or
inc
inc
sbb
push
or
xchg
cmp
aas
lock
and
lcall
cs
repnz
icebp
or
stos
push
mov
sub
adc
leave
adc
dec
sbb
mov
and
movsb
jb
or
in
retw
xchg
sbb
sbb
cmc
mov
jmp
shl
mov
add
mov
cmc
cmpsl
add
inc
out
imul
pushf
hlt
jo
imul
jo
or
mov
ljmp
sti
loop
cmpsl
jnp
xchg
lret
mov
mov
aad
aad
xor
in
lcall
lret
in
and
add
scas
lret
ljmp
es
adc
int
push
js
lds
jno
mov
jns
mov
adc
push
addb
mov
mull
popa
sub
aaa
in
mov
xchg
stos
or
inc
jbe
add
xor
fst
push
lock
inc
enter
xchg
adc
xchg
dec
cmp
xchg
stc
mov
add
nop
movsl
xor
adc
or
sarl
or
jns
outsb
call
sub
dec
outsl
sub
addr16
lods
cs
cmpsl
dec
xchg
adc
mov
push
mov
pop
mov
jae
inc
xchg
aam
mov
push
pusha
fs
ret
ljmp
mov
or
mov
inc
in
or
addr16
dec
sub
mov
mov
fcmovnb
push
xchg
mov
dec
sarl
xor
dec
adc
and
adc
xchg
xor
test
push
scas
int
jecxz
sbb
fisubl
fimull
sbb
hlt
pop
aaa
cs
jns
pop
inc
xchg
mov
or
mov
lcall
add
js
mov
mov
clc
out
arpl
int3
pop
stc
iret
mul
cmp
out
adc
es
and
test
mov
sbb
fildll
pop
roll
incb
call
mov
cmp
out
xor
outsb
adc
fbld
ret
leave
or
frstor
cli
cmc
scas
xchg
push
adc
test
cli
pop
sarb
repz
cmpsl
cmpsb
lahf
rorb
sbb
imul
mov
dec
dec
ret
inc
stc
stc
cli
xchg
insb
push
pop
xor
or
push
or
and
push
xor
xchg
xor
into
cwtl
es
fs
insb
dec
pop
and
repz
ds
sbb
movsb
gs
inc
loope
mov
xchg
add
loopne
mov
andb
scas
ret
push
adc
sbb
imul
cmpsl
test
push
fucomp
pop
cwtl
ds
sbb
pop
pop
push
add
inc
adc
ds
test
leave
ja
push
cmpsl
scas
mov
ffree
push
lds
push
ja
seto
sub
push
ret
sub
mov
lds
loop
jo
fadds
jmp
pop
ret
pushf
mov
or
or
jmp
mov
add
sub
mov
xchg
mov
loop
dec
lods
jp
add
pop
adc
test
inc
mov
sbb
dec
xchg
lcall
and
stos
inc
call
rcrl
fnsave
call
push
sbb
pop
fstl
dec
cmp
cltd
mov
xchg
sbb
inc
cld
pop
lods
and
call
cmp
push
repz
int
add
dec
jg
aaa
rolb
mov
sub
andb
mov
push
rorl
mov
ljmp
cli
push
xchg
pop
cmp
fidivrs
andb
repz
mov
jg
cwtl
das
push
sahf
xor
sbbl
xor
scas
arpl
jecxz
icebp
popf
rclb
mov
roll
push
push
push
data16
mov
mov
lods
pop
rorb
aaa
lea
stos
inc
cltd
cltd
mov
xchg
in
jno
and
aas
cwtl
mov
fstl
xchg
xchg
adc
jns
divb
xchg
adc
xchg
fsubs
jnp
mov
push
test
adc
in
push
add
andl
pcmpeqd
loopne
cmpsb
mov
mov
cmpsl
xchg
mov
mov
mov
mov
pop
out
stc
int
xor
xchg
icebp
pop
dec
push
fwait
pop
test
cmp
jno
jbe
call
add
pop
call
mov
push
sub
negl
inc
ficompl
mov
push
shl
sbb
jae
xor
cmpb
inc
jp
mov
pop
stc
inc
int
je
scas
xchg
inc
jl
add
mov
mov
push
imul
push
out
insb
mov
add
lret
imul
imull
call
test
sbb
lds
ret
jbe
sbb
adc
lods
lods
popa
sub
out
add
mov
dec
sbb
push
lods
pop
sbb
jmp
mov
mov
iret
outsb
das
popa
sbb
mov
xor
inc
push
add
jl
stos
add
and
dec
inc
and
mov
add
out
icebp
and
cmp
in
push
inc
or
mov
divb
js
xchg
je
in
mov
out
loopne
xchg
lcall
notb
and
pop
cmp
jnp
and
adc
xlat
xor
push
pop
sbb
cltd
loopne
mov
popf
and
jle
pop
nop
mov
xchg
or
movsb
push
cmp
cmp
sar
shl
mov
stc
repnz
jnp
mov
stc
rcr
and
or
fs
sub
popa
pop
dec
xor
and
inc
loope
adc
subb
dec
and
mov
sbb
and
stc
pop
shl
adcl
inc
pop
cmp
gs
int
cmp
push
and
test
xchg
mov
inc
sahf
mov
xor
into
imul
pop
pop
rolb
in
inc
pop
sub
in
sti
mov
fs
out
sbb
and
aad
aad
and
mov
pop
or
inc
sub
cwtl
gs
pop
cmp
cmp
jo
jmp
jecxz
sub
xor
hlt
push
adc
iret
aaa
and
testb
cs
sub
pusha
xchg
or
jnp
sbb
mov
cmpsb
push
jns
xchg
push
push
cmp
jo
inc
subb
and
adc
mov
shrl
fdivrl
imul
push
loop
adc
adc
mov
movsl
js
insb
mov
testb
loopne
decb
in
mov
inc
in
into
pop
mov
dec
or
push
xor
roll
lods
xchg
cmp
add
cmp
pop
adc
call
movsb
pop
add
in
mov
rorb
sti
repnz
popf
leave
arpl
pop
sbbb
xor
xor
push
pop
popa
fists
pop
push
dec
mov
sbb
movsb
cmp
cwtl
test
hlt
test
push
jne
loopne
xchg
and
or
aad
fs
scas
push
into
test
fwait
cld
loop
sub
and
pop
les
push
clc
sub
or
adc
adc
imul
adc
jmp
sarb
insb
insl
fs
sub
lea
pop
mov
insl
mov
test
adc
lods
push
adc
subl
loope
cmpsl
pop
mov
push
adc
inc
add
notl
jnp
in
jne
inc
xchg
insb
jne
repnz
mov
mov
xchg
insb
shlb
mov
sahf
daa
mov
jg
mov
sbb
adc
les
mov
aaa
in
outsb
pop
and
popf
mov
dec
imul
and
icebp
ret
mov
mov
fsubrp
out
das
or
insl
ret
les
lcall
mov
fwait
sbb
push
or
pop
cmp
into
xor
pop
sub
cmp
call
push
mov
sub
push
add
mov
lret
shlb
mov
lds
cld
mov
inc
push
mov
loop
leave
imul
loope
cmp
sbb
fdivrs
leave
jne
and
ucomiss
cmp
mov
fdivl
mov
add
pusha
cli
fimuls
adc
inc
outsb
mov
pop
stos
push
lret
cld
sti
mov
cs
sub
add
xchg
aas
cmc
imul
popa
lea
xchg
mov
std
mov
pop
clc
neg
mov
lods
loop
inc
rcrb
dec
fdivrl
scas
cmpsl
inc
jns
dec
add
ljmp
xor
xchg
shlb
mov
loope,pn
mov
push
jge
dec
push
test
pop
cmp
test
das
clc
cli
mov
mov
ljmp
mov
jnp
add
aas
rcl
push
ret
mov
jo
or
dec
stc
icebp
hlt
jne
pop
in
sbb
enter
sub
sub
xlat
loope
push
sub
adc
es
sbb
adc
jno
jns
ljmp
jge
pop
mov
mov
sub
xchg
push
mov
dec
mov
repz
int3
pop
movsl
in
ljmp
ds
inc
add
lret
inc
xor
test
jnp
sbb
jno
xchg
or
insb
mov
xchg
sub
mov
jb
push
add
jl
dec
xor
int
outsl
dec
mov
std
aam
push
enter
push
fwait
scas
pop
imul
movsb
mov
andl
int
aaa
xchg
jnp
adc
push
cmp
nop
push
insl
cli
lds
or
fwait
jmp
push
push
cmp
fbstp
xchg
popf
aam
popfw
dec
mov
pop
dec
sbb
lock
mov
rolb
jp
sahf
dec
pushf
jmp
xchg
inc
ret
lret
daa
push
pop
push
repnz
mov
ret
stos
jne
mov
lret
pop
roll
cmc
or
inc
dec
xor
mov
movsl
movsl
adc
xchg
fnstsw
roll
or
outsb
idiv
mov
stc
sti
mov
popf
cmp
jmp
xor
and
pop
dec
int3
scas
les
imul
in
popf
negl
or
jmp
adc
push
call
adc
in
adc
adc
sbb
sbb
xchg
add
jecxz
push
xor
push
lahf
adc
pop
mov
ljmp
js
jns
pusha
fdivl
clc
lret
xor
add
insb
inc
and
test
daa
scas
sub
int3
pushf
xor
add
pop
cmp
add
nop
add
adc
iret
stos
adc
add
adc
stos
sub
xlat
movl
es
dec
mov
lock
clc
loope
into
outsl
pushf
mov
arpl
cmp
jb
imul
div
fsubrl
sub
mov
cltd
gs
std
pusha
mov
popf
inc
mov
jmp
icebp
adc
xor
add
sbb
cmp
cs
cwtl
or
and
or
push
pop
fnstsw
test
lock
testl
xor
xor
dec
cmp
stos
mov
cmc
out
in
and
ret
mov
movl
hlt
jle
clc
test
or
das
pop
xor
lahf
mov
out
dec
sub
jb
mov
fcoms
jns
cmpsb
mov
jo
sahf
jecxz
mov
pop
ja
pop
pop
cmpsl
xchg
jl
ss
xor
cmp
lret
inc
popa
push
popa
add
dec
push
sbb
xor
test
mov
jmp
stc
mov
mov
jmp
out
aas
cli
loop
cltd
cmp
lahf
incb
lds
cwtl
rcrb
icebp
xchg
into
inc
add
xor
ja
jge
divb
repnz
xchg
call
outsb
add
jnp
pop
pop
mov
popf
cmp
std
xlat
daa
test
push
cmp
sbb
fldt
jo
jle
or
or
or
add
mov
pusha
stos
mov
or
jg
pop
inc
jne
xchg
mov
ds
inc
push
xor
cmpsb
mov
pop
xchg
jp
repnz
scas
mov
mov
jo
xchg
scas
movsb
insb
sbb
inc
test
sahf
add
addr16
sahf
pusha
mov
add
inc
icebp
int3
daa
aaa
loop
ret
out
out
pop
out
jge
rcll
push
es
mov
pop
sbb
test
arpl
rep
xchg
xchg
push
mov
std
cmp
push
add
push
rcll
jnp
mov
push
in
jne
popa
push
adc
push
xor
adc
movsl
repnz
jmp
lods
stc
fstl
test
mov
sub
popf
ficompl
mov
and
or
adc
lds
sub
jne
xor
add
loop
jle
push
xchg
add
pop
test
mov
add
or
pop
dec
arpl
adc
or
add
mov
add
mov
mov
cmpsl
and
mov
into
mov
mov
stc
adc
lock
cld
in
popa
push
aam
xor
push
clc
mov
arpl
cmc
mulb
ret
mov
sarl
cmp
scas
xchg
lahf
dec
cmovnp
shrb
dec
pusha
aaa
lods
mov
mov
xchg
test
imul
jne
push
cld
jmp
pop
pop
outsl
sar
dec
jge
mov
lcall
insl
pop
cwtl
int
jle
pop
xor
popa
add
and
ds
lcall
push
call
push
or
subl
xor
cmp
and
and
mov
ret
loope
cwtl
popa
scas
daa
addl
movsb
jg
mov
in
pop
sub
pop
aaa
xor
jne
inc
xchg
jmp
xlat
sub
es
pop
sbb
cld
cmpsl
out
sbb
ljmp
add
sbb
pop
xchg
xor
data16
adc
and
mov
push
imul
shrl
add
adc
mov
and
inc
movsb
cli
jmp
test
or
or
outsl
mov
pop
aaa
mov
jns
outsb
jno
push
test
and
nop
stos
push
mov
jle
lret
cmp
and
xchg
or
push
enter
pop
mov
int
add
inc
mov
nop
xchg
mov
sbbl
mov
mov
insb
push
test
adc
fldt
loopne
cld
or
outsl
or
or
cmp
sbb
pop
lea
jmp
lock
inc
divl
push
cmpsl
inc
loopne
in
push
cmpsb
jge
pop
out
jle
push
rol
dec
push
lods
mov
xlat
sbb
frstor
dec
xor
in
mov
test
setae
loopne
pop
pop
push
ret
mov
aas
jmp
xor
sbb
pop
je
dec
into
in
mov
dec
sub
cld
ret
ret
mov
testl
xchg
xor
pop
lods
pop
dec
xchg
cld
fimull
fstps
xlat
adc
addr16
leave
jne
aas
adc
repnz
adc
adc
add
clc
push
in
push
int
out
test
iret
sbb
push
in
xchg
leave
mov
jle
mov
lcall
int
add
and
mov
xchg
lods
mov
mov
imul
sub
jo
leave
mov
leave
sub
push
mov
cs
xchg
pop
cmp
mov
dec
mov
mov
push
dec
jge
jns
jge
imul
jmp
hlt
insl
sub
orb
dec
mov
loopne
or
out
mov
cwtl
cmp
and
icebp
lret
push
xor
jb
xor
dec
xchg
xlat
call
jo
xchg
repnz
push
add
jne
cmc
adc
pop
pop
stc
in
mov
xor
xor
aam
cmp
ret
mov
mov
inc
or
repz
and
add
dec
aad
mov
fstpl
pop
jmp
mov
jne
sbb
inc
test
mov
sar
divl
lods
add
or
movsl
sti
mov
pop
xorb
pop
nop
mov
mov
aam
xchg
or
xor
inc
push
pop
or
mov
xlat
stc
push
dec
pop
sbb
lahf
jmp
fiadds
ds
cmp
pop
dec
test
inc
jge
les
lret
mov
mov
cmp
out
fsubl
push
jp
out
lds
sub
sbb
xor
mov
stos
jno
test
mov
jbe
jns
cwtl
jg
push
pop
add
push
cli
lret
jo
pop
test
xchg
jge
dec
lods
leave
dec
lods
es
push
insb
jl
jnp
cmp
cwtl
data16
je,pt
pop
xchg
stos
pop
insl
adc
jmp
sahf
inc
call
mov
daa
push
leave
jnp
xchg
les
cmpl
idiv
lds
test
mov
sub
ja
jge
les
fdivrs
fstpl
jp
insb
mov
das
std
imul
ja
xchg
dec
mov
in
push
mov
gs
das
mov
mov
repnz
xchg
sar
negl
mov
aas
ds
in
xchg
in
fwait
adc
adc
cmp
sahf
jmp
xchg
sarb
shlb
js
int
adc
mov
addr16
fdivp
fsubrp
ficoms
dec
addr16
xor
popa
fldcw
arpl
std
rolb
cmpsb
in
aam
sbb
stos
aaa
dec
add
dec
push
fmul
jecxz
xor
ja
push
push
notl
push
jae
sbb
mov
call
and
and
push
pop
adc
call
jp
popf
int3
int3
fwait
pop
lahf
adc
ficoml
add
lret
ja
ss
mov
inc
inc
mov
pop
and
jmp
xchg
testl
mov
ja
mov
lcall
pusha
mov
mov
fnstcw
cmp
addr16
and
nop
test
fsubrl
xor
mov
jmp
je
inc
decb
adc
push
repz
xchg
mov
xchg
popa
push
outsb
adc
dec
lds
cld
pop
js
int
fistpll
lahf
and
push
lods
in
imul
addr16
cmp
sub
arpl
push
push
bswap
inc
stc
insb
jae
jge
rcll
out
rcl
outsb
rep
shlb
ljmp
jp
in
xchg
das
jo
or
pop
mov
fwait
pop
lret
cmp
movsb
icebp
jp
xlat
out
pop
add
hlt
fwait
push
loope
pcmpeqw
in
das
loope
cmpsb
push
movsl
xchg
idivb
mov
lret
jb
add
ljmp
xor
inc
push
xor
jecxz
out
and
sbb
pushf
in
lea
int
mov
sub
hlt
ficoms
cmp
bound
cmp
popa
xor
and
notl
mov
jcxz
lcall
inc
sbb
nop
mov
add
xchg
cmpsb
sub
xchg
int
jno
and
and
bound
sub
inc
and
mov
push
dec
leave
ljmp
and
int3
jo
cmp
out
mov
adc
insb
jle
mov
icebp
sbbb
mov
pop
lahf
adc
or
test
xchg
lock
iret
movsl
push
fbld
ret
int
add
daa
call
std
jne
mov
incb
lock
mov
pop
dec
dec
sub
loopne
xor
cmpl
mov
int
scas
out
ljmp
mov
sbb
rclb
fldl
xchg
xor
daa
nop
add
sub
popa
xchg
add
adc
dec
lea
subl
push
or
push
lea
int3
push
jl
nop
or
cwtl
and
jno
mov
fs
jg
mov
xor
push
push
pushf
xlat
data16
leave
aas
adc
mov
inc
dec
addr16
scas
xchg
es
inc
stos
daa
mov
ret
ds
mov
ds
sbb
int
cmp
clc
inc
and
add
or
out
push
sub
int3
mov
call
cmp
and
sbb
and
sbb
pop
xchg
repnz
push
add
jmp
cmp
es
sahf
loop
jge
sub
in
xor
cmc
fcoms
push
adc
mov
sbb
mulb
inc
jae
mov
mull
dec
rorb
fnstsw
movsl
iret
mov
push
mov
outsb
cmp
push
js
stos
xchg
or
loopne
cmp
xchg
mov
sbb
dec
bound
andb
push
dec
movsl
xchg
or
js
mov
sahf
mov
lea
shrb
mov
dec
in
sbb
cmp
cmp
movsl
cwtl
xor
dec
jge
decb
stos
js
leave
rcr
int3
movsl
repz
loope
dec
xchg
lcall
dec
push
imul
mov
mov
jns
repz
aam
add
lock
pop
int
imul
lret
ret
lcall
imul
lret
cmpsb
inc
mov
mov
jnp
aas
xchg
inc
mov
jg
addr16
jae
cmp
lods
xor
out
shlb
cmc
cmp
out
clc
in
lcall
fwait
sub
sub
in
adc
adc
fwait
pop
sub
adc
das
mov
sub
sub
fbstp
sub
or
loope
push
pusha
dec
notb
sub
inc
test
jge
mov
std
and
scas
fs
cmp
cltd
mov
mov
outsl
sahf
adc
add
xchg
xchg
cmp
mull
push
xchg
jmp
out
movsl
pop
das
shlb
dec
push
fnstcw
xchg
movsb
sar
fsubrp
repnz
orl
adc
cmp
xor
dec
fstp
cmc
sub
fstpl
data16
enter
bound
mov
gs
cld
js
rcrb
and
fsub
outsl
out
cmp
adc
ds
pop
mov
sbb
loopne
mov
mov
call
pop
mov
inc
push
mov
mov
daa
ljmp
sbb
in
sub
out
cs
hlt
dec
sub
push
or
pop
jle
and
dec
add
repnz
std
dec
je
divb
xor
pop
sub
stos
lea
push
pushl
cmp
imul
sahf
in
stc
cmpsl
aaa
push
ja
xchg
sub
add
pop
xchg
aad
and
fadd
xor
lcall
xor
in
push
pop
xchg
in
ret
pop
mov
nop
fistps
adc
ljmp
jmp
dec
shlb
lahf
arpl
pop
mov
pop
xchg
andl
add
cmpl
scas
adc
bnd
dec
daa
cmp
mov
or
lds
cmp
adc
add
lret
xor
fcmovu
les
lcall
sti
mov
ret
jle
out
cmp
inc
cmp
jmp
mov
inc
lods
sub
sbb
add
js
scas
add
push
xor
idiv
xchg
adc
pusha
ret
push
mov
mov
and
test
pop
repz
icebp
jmp
out
outsl
pop
adc
mov
rorb
inc
and
call
add
addr16
fs
je
shlb
mov
loop
xor
into
andl
adc
sub
cmc
dec
nop
je
pop
and
and
and
xchg
sti
push
js
orb
int3
mov
mov
push
push
xchg
js
out
lahf
dec
icebp
mov
pop
stos
mov
pop
or
aad
jmp
cmp
adc
es
scas
ret
dec
cmp
pop
pop
and
add
imul
mov
mov
imul
fwait
sbbb
jp
test
leave
xchg
sub
out
loopne
aaa
nop
mov
add
call
push
mov
mov
mov
stos
push
inc
les
cmp
mov
jo
aad
cmp
add
mov
icebp
mov
inc
sbb
daa
jbe
jb
push
and
pusha
add
add
fisttpll
mov
add
cmp
mov
int3
outsb
das
ffreep
lret
push
jmp
push
mov
divl
inc
pop
pop
rcl
lods
mov
xor
test
f2xm1
xchg
lret
jg
dec
inc
push
lods
pop
xchg
lcall
sub
sbb
lcall
adcl
xchg
lds
cmp
out
test
dec
insl
das
cmp
hlt
ss
adc
jge
sbb
subb
iret
cmpsl
and
shrb
into
xchg
cli
mov
inc
in
fcoms
imul
outsl
rorb
das
icebp
sahf
mov
int3
jns
adc
scas
mov
adc
push
adc
xchg
test
lret
jecxz
fimuls
mov
shl
shrb
pop
adc
mov
jg
dec
out
lret
fwait
mov
dec
xchg
mov
ret
les
cmc
pop
in
in
jp
inc
test
iret
sbb
imul
lcall
ja
insl
push
jnp
and
xchg
inc
clc
pop
xor
push
dec
sbb
rorl
sahf
mov
sarb
lea
jae
mov
sbb
cltd
or
in
jmp
dec
jne
and
pop
xorl
sbb
push
xchg
mov
sbb
add
test
in
arpl
xchg
leave
push
add
in
dec
push
cmpb
outsl
leave
test
jne
xorl
pop
aad
lea
icebp
in
icebp
int3
adc
sub
mov
pop
imul
adc
jnp
cmp
out
fcompl
lea
dec
iret
adc
sbbb
lret
addb
pop
push
inc
dec
ljmp
and
push
or
test
add
cmc
adc
pop
adc
notl
sub
icebp
mov
push
mov
rcr
bound
lret
adc
addr16
cmp
repnz
cli
popf
mov
rcll
ja
les
adc
mov
xchg
in
mov
push
push
jecxz
ds
ss
sbb
xor
rcrl
push
dec
fsts
mov
jge
fcom
cmc
push
lea
and
mov
bound
mov
test
add
xor
ss
push
ss
fcmovnbe
stos
sub
dec
add
inc
sbb
mov
sbb
sub
inc
imul
jb
push
xorb
hlt
test
cmpsb
add
inc
dec
and
inc
sbb
push
jns
jle
sbb
jo
insl
in
dec
cs
fmul
in
push
dec
out
add
loope
lods
lock
mov
sub
inc
in
fnstsw
fldl
repnz
sbb
out
inc
mov
popa
ret
and
pop
mov
and
add
cmp
pop
pop
or
lcall
adc
sbb
or
mov
aad
lds
pop
cld
xchg
adc
int3
jo
test
leave
mov
inc
ljmp
cmc
fcmovu
push
insl
ret
scas
jle
adc
int3
push
aaa
fists
outsl
jmp
mov
jae
cs
sub
and
push
jmp
inc
push
add
in
mov
mov
lcall
jge
mov
sub
lret
sbbb
and
lea
out
outsb
out
sub
adc
ja
sbb
insb
pop
loope
or
and
and
sub
pop
outsl
subl
mov
negb
sub
xor
xor
push
jmp
jne
movl
and
in
sub
test
or
mov
dec
sarb
leave
icebp
test
pop
ret
outsb
mov
test
inc
das
clc
rcrb
cmpsb
test
fsubrl
push
pop
in
dec
rcll
das
inc
mov
inc
daa
das
pop
clc
test
push
test
test
and
jbe
mov
stos
cmp
sub
xchg
inc
xor
loop
out
cmp
test
mov
lret
xchg
and
aad
add
add
lods
enter
nop
cmpsb
lods
pop
imul
lcall
bound
and
stc
icebp
stos
fmul
pop
xchg
add
ss
test
jge
scas
popa
mov
add
idivb
outsl
jecxz
xor
fidivl
sub
sahf
xchg
movsb
xchg
int
scas
insb
add
fidivs
inc
sub
push
or
push
or
cli
push
mov
sahf
mov
mov
xlat
enter
in
mov
pop
jecxz
pop
xchg
inc
insb
adcb
mov
and
shlb
sub
incb
dec
mov
cs
adc
sti
lcall
sahf
icebp
imul
fdiv
mov
leave
dec
loopne
ss
cmc
xchg
xorb
aaa
sbb
outsb
push
mov
sbb
lea
call
pop
in
push
daa
lret
popf
insb
adc
sti
ja
repz
aaa
pop
and
jb
in
roll
rolb
iret
cmpsb
scas
arpl
out
push
jl
mov
inc
es
push
push
sbb
pop
divl
addr16
ljmp
pop
mov
push
mov
enter
or
and
or
stos
inc
pop
jb
adcb
cmp
pop
or
inc
ljmp
mov
jmp
mov
push
daa
jmp
add
clc
int
and
out
fstl
sub
lret
movsl
jo
push
sbb
fiaddl
pop
or
cmc
mov
les
lods
cmpsb
dec
sbb
dec
jnp
pusha
nop
jg
pop
out
scas
loope
pop
pusha
mov
stos
ret
divl
and
ffree
mov
insb
loopne
sbb
add
xchg
fsubs
add
adc
aaa
push
aad
dec
fistpl
call
shr
ljmp
mov
jnp
call
jbe
jg
jns
adc
je
mul
and
lods
jne
pop
or
dec
sbb
mov
inc
nop
out
jmp
push
pushf
dec
add
dec
push
int3
idivb
xchg
out
sub
adc
or
mov
inc
ret
mov
or
inc
rorb
loope
mov
lods
adc
push
push
push
mov
ss
pop
mov
shl
jbe
push
cmpsl
cmp
enter
bound
mov
icebp
dec
fimull
leave
mov
loop
dec
ret
sahf
popf
mov
cli
xlat
mov
cs
das
inc
loop
mov
push
sbb
sub
xchg
xchg
int
cld
das
sarb
pusha
arpl
jae
and
idivl
out
mov
shlb
sbb
jp
or
mov
or
adc
sbb
sub
xor
clc
push
sub
lret
outsl
lea
cmpsb
pop
dec
fdivs
test
lea
jb
xchg
ja
popa
mov
into
xchg
nop
xor
pop
push
jbe
fstps
sbb
adc
push
mov
lahf
lret
dec
adc
filds
mov
sub
aas
xor
aam
fadd
out
cld
mov
jnp
and
dec
ss
mov
or
add
and
mov
push
sub
imul
inc
cltd
push
das
mov
popa
jmp
xchg
xchg
mov
push
or
cmc
xor
dec
sbb
rcrb
loopne
xor
test
mov
sub
movsb
popa
add
sbb
mov
inc
xchg
inc
stc
add
sbb
aam
mov
jne
and
imulb
jecxz
jno
dec
or
cmpsb
nop
mov
repnz
repnz
jmp
aam
and
mov
jo
and
in
xlat
fucom
ljmp
mov
adc
pop
fldt
ljmp
in
mov
outsb
test
ja
mov
or
stos
pop
or
loopne
push
mov
popf
pusha
or
shlb
lds
cld
into
cmpb
lods
lcall
je
into
das
add
icebp
lods
pop
loope
je
mov
jne
imul
cmp
push
repz
xchg
push
jno
loop
adc
inc
scas
push
movsb
xchg
push
ljmp
sub
fwait
pop
aad
cli
sarb
sbb
jo
jnp
pushl
jbe
int
or
pop
sub
arpl
pop
xchg
sub
inc
insl
lahf
scas
inc
pop
push
jecxz
neg
mov
mulb
rorb
in
lcall
ret
lea
push
popw
dec
incl
sbb
dec
pop
int
rcl
push
cmp
jecxz
adc
and
mov
pop
push
in
iret
cmc
xchg
test
pop
push
sti
sub
into
test
insl
xchg
push
and
fiadds
pusha
shlb
adc
sub
dec
fisubl
mov
pop
iret
mov
sub
jp
or
xchg
or
add
mov
out
outsb
push
repnz
cmp
test
sahf
adc
ds
stc
inc
mov
mov
repz
call
mov
movsl
jnp
cmp
fstps
cmp
inc
in
sti
pop
idivl
ljmp
out
xorl
aam
rorl
cmc
adc
cmp
or
jmp
xor
jle
adc
sub
jae
in
and
xlat
imul
and
push
js
jb
fs
imul
inc
popf
and
mov
sti
mov
jmp
jp
lret
xchg
filds
bound
push
pop
std
adc
jle
mul
dec
mov
cmp
pusha
and
inc
mov
mov
sub
std
movsb
sbb
sbb
xor
test
repnz
arpl
icebp
out
sub
nop
inc
jne
inc
pop
outsl
int3
ror
sar
das
sbb
or
xchg
sbb
das
push
inc
in
mov
push
movsb
das
imul
cmp
das
arpl
stc
sarb
rcl
lods
pop
lea
dec
imul
loope
aas
sbb
fwait
jo
jge
sub
outsb
lods
dec
ljmp
sbb
lock
lock
cld
add
add
lea
mov
jp
and
aam
or
and
popf
clc
aaa
or
cmpsb
mov
xor
cmp
xchg
or
and
syscall
adc
mov
in
mov
std
mov
ffree
jo
xchg
adc
insb
jg
outsl
sub
fsubl
lods
mov
cmc
hlt
sbb
rolb
mov
ret
pop
jp
mov
pop
jno
and
sbb
add
test
or
mov
daa
rcrb
movsl
mov
test
and
lea
xchg
add
arpl
inc
fcmovnu
arpl
cmp
sbb
jno
mov
popf
mov
stos
sub
mov
cld
repz
mov
mov
or
cs
adc
push
in
push
mov
aaa
test
sbb
cs
scas
inc
jo
js
jnp
push
cmp
filds
out
add
and
addl
loop
mov
dec
xor
xlat
imul
xchg
test
dec
and
jne
cmpsb
xor
outsb
push
pop
imul
push
xchg
pop
enter
dec
movsl
xchg
popf
jge
dec
xor
dec
push
dec
xchg
mov
jne
xor
or
pop
fisttpl
mov
out
sub
jo
lea
jnp
mov
loopne
std
mov
jnp
adc
test
or
jge
adc
jp
outsl
mov
icebp
inc
dec
pushf
inc
dec
ss
sbb
test
xchg
sti
aas
cmp
in
xor
cmp
xlat
pop
push
sub
ja
mov
xchg
lret
inc
push
call
dec
jg
shlb
pop
or
ret
ja
adc
mov
pop
outsl
loop
xchg
add
pop
lea
jno
push
test
rorl
stos
add
call
cmpsl
jnp
sub
sub
enter
pop
or
hlt
in
xchg
pop
movzbl
jno
mov
pop
sbb
push
push
lock
sub
pop
lods
sub
loopne
pop
push
dec
mov
out
andl
sub
dec
push
cwtl
je
dec
add
rcrb
xor
bound
es
sub
pop
ret
mov
repnz
out
push
popf
mov
or
xchg
push
sbb
xchg
fidivl
pop
sbb
fmul
hlt
xchg
or
xchg
pusha
dec
aad
fdivrp
mov
pusha
jns
cs
mov
test
insl
int
adc
mov
fadds
and
dec
xlat
loop
push
xor
sub
mov
jp
add
jne
jg
cmpsb
lds
pop
imul
sarb
and
std
and
scas
sahf
in
mov
mov
or
jmp
pop
scas
mov
xor
jne
in
and
adc
and
hlt
inc
sti
and
leave
jg
cmp
ret
dec
js
in
cs
or
loope
imul
add
push
jbe
scas
cltd
xchg
pop
test
std
test
popa
pop
popf
aas
decb
daa
add
xlat
inc
clc
jl
adc
push
mov
mov
sbb
in
jns
and
ret
xor
ss
mov
das
es
or
push
loop
scas
hlt
xchg
xchg
aaa
outsb
cmpl
std
dec
fs
add
fisubrl
bound
xchg
push
inc
mov
cmc
aas
mov
aas
out
es
das
in
pop
pusha
pop
mov
mov
mov
cli
in
cmp
mov
lods
sub
xchg
xchg
popa
pop
cld
mov
sub
jg
xchg
nop
lret
cmp
std
adc
xchg
arpl
or
ficomps
or
inc
push
lds
xchg
or
push
jge
pop
out
lock
mov
cli
int3
and
lret
mov
nop
lahf
dec
mov
xchg
iret
xchg
push
jmp
pop
xchg
dec
or
icebp
push
movl
xor
xor
pop
sbb
or
lock
jmp
jo
pop
xor
fsub
arpl
cwtl
fisttpl
or
sahf
lds
jle
mov
lret
fwait
popa
xchg
jns
lods
daa
inc
imul
mov
lret
or
imul
jne
int3
jbe
fstl
roll
mov
jno
cwtl
dec
inc
dec
xor
adc
mov
arpl
pop
inc
clc
mov
dec
xchg
pop
fwait
jns
lret
xchg
xchg
inc
divl
or
daa
jg
mov
ds
rcll
jmp
ja
data16
and
pop
stc
call
mov
xor
jae
scas
repnz
lret
mov
lahf
insl
mov
stos
xchg
jne
dec
or
jge
in
cmp
dec
mov
dec
add
ja
jo
push
and
aaa
push
inc
push
xor
xor
xor
dec
jae
and
or
jmp
xchg
mov
inc
clc
es
cmp
shll
inc
cmp
cld
pop
xchg
cmpsl
cmp
dec
aam
out
mov
test
call
mov
jmp
aas
adc
push
enter
sub
inc
push
add
add
test
cli
fldenv
pop
xlat
js
mov
scas
xor
xor
mov
sub
addb
std
xor
stos
inc
pop
sbb
test
daa
outsl
push
idiv
mov
mov
inc
sbb
sti
sbb
and
cmp
mov
jg
add
lea
out
clc
dec
push
jg
notb
sbb
int
and
or
loope
or
and
rcrb
sub
pop
jbe
pushl
call
mov
push
in
cltd
aas
xor
sbb
lret
lcall
mov
pop
pop
mov
xchg
pop
clc
dec
dec
jmp
xchg
mov
out
or
or
lds
cmp
cmpsb
in
gs
add
adc
mov
loop
es
mov
lods
jp
push
aaa
pop
xor
push
stos
push
sbb
test
dec
mov
ds
or
fcomi
icebp
cmc
lock
mov
in
push
test
adc
icebp
mov
movsl
cmp
fwait
dec
push
mov
xor
adc
ljmp
and
dec
pop
mov
pusha
xchg
stos
adc
std
icebp
dec
lea
pop
lods
pop
push
fnstsw
xor
jg
or
dec
xlat
and
in
das
xchg
xorb
rclb
popf
jo
adc
jl
pop
and
out
xchg
or
into
pop
jg
out
inc
jp
clc
lock
push
sub
dec
inc
shlb
scas
dec
shlb
jo
test
cmp
push
mov
inc
test
pop
cwtl
pop
mov
repz
stc
inc
jns
sub
loopne
push
fwait
cmp
int3
xchg
pusha
ds
mov
insl
sub
fsts
push
sbb
jg
xchg
gs
or
cmc
pop
dec
dec
cltd
ja
lret
mov
sub
leave
lds
pop
or
lret
push
aaa
insl
sbb
and
jae
push
mulb
xor
inc
sbb
lock
xor
ja
icebp
cmp
pop
ljmp
cmp
addr16
dec
fidivs
pop
xchg
pop
ffreep
loope
sub
popa
adc
sub
fidivs
inc
push
scas
inc
test
in
ffree
push
xchg
icebp
mov
ja
cmp
sbb
push
jae
sub
loopne
lock
inc
sbb
xchg
ret
lods
jbe
and
or
out
fisttpl
dec
sub
movb
mov
cmpsb
test
cli
pushf
pop
inc
cmpsl
testb
and
lock
and
cmp
stc
insb
pop
test
pop
adc
add
and
enter
aaa
inc
jle
push
xor
pop
xchg
stos
lods
push
inc
xchg
mov
mov
jns
inc
sub
sbb
mov
mov
push
xor
push
stos
pop
adc
push
nop
cmpsl
cmp
mov
pop
cmc
cli
cmp
lea
push
fmuls
sbb
dec
test
jno
mov
mov
mov
push
sub
dec
into
adc
pop
cmp
xor
pop
and
test
enter
push
inc
adc
fldl
sub
xchg
lahf
xor
mov
xchg
imul
movsl
and
sub
ret
jmp
jno
pop
lret
sarl
fwait
orb
cmp
xchg
xchg
lea
pusha
std
jae
push
sub
dec
push
fadds
dec
cli
adc
repz
push
dec
ja
gs
sbb
stos
inc
popf
out
ret
in
cltd
cmpl
jecxz
jmp
fucom
outsb
xor
jg
outsb
sub
stc
cmp
mov
das
dec
cmp
xchg
insl
mov
xor
sub
add
jl
pop
and
push
scas
call
jge
jb
ds
xchg
pop
aas
mov
cmp
dec
add
inc
int3
ret
sbb
ljmp
lods
jb
jnp
je
mov
test
and
mov
les
mov
fs
add
mov
out
jge
pusha
and
pushf
push
shll
jp
cmp
and
pop
fisubrl
cmc
mov
pop
jge
push
mov
xchg
xchg
movsb
xor
mov
mov
xor
sub
fnstenv
loop
cmp
mov
jne
fucom
call
jmp
mov
fs
bound
imul
je
inc
push
flds
cs
xchg
orl
pop
es
hlt
lds
repz
sti
fldcw
insl
sub
jnp
mov
or
leave
xor
jne
mov
clc
cmp
jae
add
fiadds
and
repz
push
aam
arpl
test
scas
cmp
popf
sbb
push
lds
cmpsb
inc
dec
dec
arpl
mov
xchg
xchg
lret
lret
xchg
fpatan
xchg
sbb
std
inc
pop
xchg
push
es
jbe
mov
out
addr16
xor
mov
jb
fdivrl
add
sti
je
xchg
add
test
fimull
ss
testl
pop
addr16
rorl
lods
dec
mov
jno
js
aam
cmp
mov
dec
int
push
and
xlat
cwtl
inc
xchg
inc
fsub
test
ficoml
std
dec
fsubr
pop
repnz
xchg
push
gs
fstps
ss
ret
insl
popa
ds
and
sbb
arpl
es
push
arpl
or
mov
stos
cld
adc
bound
push
jne
loope
jae
jg
jnp
repz
rcrl
les
mov
adc
sub
add
in
out
mov
jnp
xchg
pop
popf
push
orl
mov
sub
jnp
pop
pop
xorl
xchg
fcmovnu
mov
repz
aam
cmp
and
ret
and
pop
mov
sbb
rclb
bound
jecxz
pusha
pop
xorl
xchg
mov
xor
movsl
shl
mov
and
jecxz
xchg
sub
jecxz
sub
insl
notb
inc
ror
lods
push
xor
mov
sub
push
sub
addb
lret
lods
fdivl
jle
xchg
cmpl
cmc
xchg
shl
inc
lret
daa
popf
sub
aam
jns
mov
jle
pop
rep
push
imul
test
push
pop
sbb
push
loope
enter
js
push
xchg
cmp
mov
xor
out
pop
div
mov
add
sbb
jl
cmp
ja
mul
xchg
inc
inc
adc
or
fdivs
test
out
mov
stc
loop
mov
lods
jmp
test
push
mov
loope
xor
lret
fadd
fcomps
mov
jmp
inc
ja
mov
sbb
push
rcl
cs
int
xchg
ss
jne
jb
mov
hlt
cmpl
enterw
push
gs
add
popf
xchg
xor
and
clc
xchg
adc
aas
mov
pop
xchg
xchg
xor
inc
push
mov
cmpsl
out
lods
push
jne
pop
imul
adc
add
mov
jnp
add
jno
and
call
aad
shll
je
pushf
test
pop
and
add
pushw
in
dec
jl
sbb
cmp
clc
xor
pusha
jg
insl
cmp
sub
mov
mov
sub
push
mov
call
imul
test
mov
cmpsl
mov
enter
cmp
adc
push
sub
loop
jg
shll
scas
outsl
mov
jnp
popa
jnp
mov
add
push
or
mov
cmpsl
inc
mov
sub
sbb
adc
or
cmp
and
dec
pop
or
movb
xlat
popl
mov
test
add
lods
into
dec
fildl
mov
into
push
add
jo
loopne
cmpsl
and
inc
fwait
xchg
fistpll
push
loopne
fimull
mov
push
lock
popa
nop
adc
test
xor
popf
add
dec
inc
js
xor
imul
andl
push
lds
mull
cmp
dec
scas
out
sbbl
int
jmp
jb
leave
icebp
or
popa
lds
inc
mov
or
mov
add
dec
nop
dec
mov
mov
lock
sub
lcall
jl
xchg
sbb
xlat
sub
cli
sti
orb
mov
push
jp
add
sub
fsubrl
int
xor
lock
fnstsw
xchg
leave
lods
pop
push
ss
pusha
mov
scas
sub
dec
das
push
lahf
cmpsb
mov
scas
mov
in
pop
cmpsb
cli
lret
jns
xchg
adc
das
pop
adc
pop
dec
test
cmpsl
xchg
or
cmp
inc
sub
dec
xchg
jmp
mov
adc
pop
insl
xor
add
testl
xor
into
jmp
jnp
es
inc
mov
add
push
push
mov
and
mov
cmpsb
arpl
sahf
cmpsb
loop
rolb
fst
stc
fisubl
sub
cltd
popa
das
xchg
lahf
jle
push
aaa
sbbl
addr16
movb
cltd
mov
mov
popa
jb
in
sub
mov
loop
sub
pop
jno
sbb
lcall
adc
adc
cmp
dec
shll
test
xor
cmp
xchg
adc
adc
aaa
jae
or
sub
sbb
mov
mov
xorl
mov
aas
std
aam
fwait
mov
or
movsl
in
pop
insl
push
stc
test
or
sbb
xchg
mov
xchg
clc
xor
into
sbb
mov
pop
lods
jnp
push
and
sbb
add
cld
jb
cld
stos
les
sahf
fisubs
mov
inc
mov
push
jbe
pop
rcrb
mov
cmpsb
fidivrl
addb
out
imul
xor
jp
xchg
in
bound
sub
mov
clc
mov
fldenv
push
in
jmp
push
daa
xchg
dec
mov
cmpsl
mov
gs
pushf
xor
jae
popa
jmp
mov
push
out
adc
cmc
outsl
add
mov
pusha
dec
lds
loopne
jp
xorb
xchg
test
add
andb
ficoml
fstpl
and
cmp
mov
push
shr
lock
and
popf
in
add
mov
cmc
mov
ds
push
mov
mov
pop
lcall
cmpsl
test
cmp
xor
fwait
les
push
mov
mov
jle
adc
cwtl
push
in
cmpsl
pop
dec
ljmp
lcall
push
push
mov
sbb
mov
decb
fwait
mov
jecxz
jmp
sub
sbbl
in
out
daa
mov
xor
call
xor
fdivp
mov
inc
sbb
sahf
push
mov
jmp
cld
or
jmp
repnz
cmpsl
and
popfw
lret
pushf
in
adcb
in
xchg
andl
fs
mov
aas
fwait
mov
mov
dec
nop
sbb
mov
xor
add
mov
test
sbb
xor
pop
inc
and
aas
repnz
adc
ljmp
adcb
xchg
fisubrs
lods
or
inc
lret
xchg
jge
jnp
and
lea
in
cmp
mov
test
xchg
sub
imul
fs
je
or
mov
in
xchg
fildl
lds
or
xor
dec
cld
mov
test
gs
in
cmc
cmp
icebp
cltd
add
and
jne
mov
push
scas
addr16
inc
and
outsb
or
sub
out
lret
inc
inc
sub
std
xchg
jno
or
sub
lods
loop
and
and
icebp
push
enter
inc
test
scas
stos
or
shlb
out
in
jb
inc
jnp
lcall
imul
dec
xchg
popa
mov
or
es
shrb
mov
nop
push
inc
daa
repnz
aas
push
add
mov
scas
cltd
and
mov
sub
scas
cltd
push
pushf
jle
xchg
adc
xchg
jnp
out
ja
out
iret
gs
es
push
cmp
mov
sub
inc
jmp
sbb
pusha
push
lahf
ret
in
adc
xchg
or
repnz
std
ss
sbb
nop
mov
mov
repz
js
fisubl
in
xchg
dec
cli
push
add
leave
int
cmp
aaa
lcall
sbb
mov
pop
xchg
aas
jge
movswl
aas
cld
pushf
add
mov
xor
in
sub
push
dec
aas
xor
push
mov
fs
mov
sbb
xor
les
mov
and
shll
fs
lods
repz
sahf
daa
dec
lret
lret
pop
adc
xchg
or
push
push
je
fcompl
into
fwait
loop
pop
repz
lcall
movsb
mov
outsl
jge
jecxz
fs
inc
adc
movsb
jne
cmp
add
cmpsl
mov
test
test
fsubrl
dec
loopne
js
loope
lret
loope
push
insl
add
sbb
insl
cs
push
call
and
aam
sub
mov
shl
xchg
cmpsb
inc
or
pop
mov
cli
stos
sbb
shlb
dec
scas
mov
mov
je
push
xor
repz
scas
cld
enter
or
xor
dec
imul
push
and
repz
loopne
pop
insb
in
jmp
mov
adc
ret
ret
stos
mov
or
add
mov
add
fistps
pop
mov
push
stos
int3
sbbl
fdivl
xor
pushf
loop
in
aad
mov
sbb
xor
sbb
rcl
sub
lret
pop
outsl
outsb
jge
insl
inc
add
or
dec
test
outsb
fdivr
ss
sti
cmpsb
pop
mov
sti
ds
mov
aaa
xor
mov
xor
xlat
imul
push
call
push
jecxz
sub
test
xor
test
mov
jnp
adc
ss
cmpsb
sbb
ret
sbb
fists
mov
out
lods
aad
jmp
mov
pop
sbb
jle
sub
pop
jl
push
xchg
push
das
lret
into
jno
in
mov
xchg
out
popa
or
jge
cld
lock
gs
fadd
sub
lock
sbb
xchg
xor
call
jp
mov
outsb
daa
adc
dec
dec
xchg
dec
shl
sbb
bound
or
jle
imul
test
xchg
inc
jg
mov
push
insb
adc
stos
jle
enter
aad
or
xchg
jmp
mov
sahf
dec
mov
push
aam
add
div
sbb
mov
xchg
mov
xchg
test
ja
push
stc
sbb
adc
out
pop
sbb
pop
push
or
not
push
dec
jge
dec
xchg
pop
cmp
jbe
or
aaa
es
inc
aad
out
aam
push
jb
inc
mov
pop
stc
dec
add
cld
mov
xor
mov
push
pusha
push
movsl
adc
stos
cmp
push
cmpb
mov
in
inc
cmpsl
adc
jae
add
fwait
loop
lock
fistl
mov
aas
sar
xor
mov
xchg
sub
mov
out
negl
or
ret
sbb
mov
repnz
add
in
outsb
movsb
cmp
test
testl
popf
aad
mov
test
cmpsb
rorb
lds
cld
pop
xchg
dec
mov
rorb
pop
jo
xor
mov
and
inc
push
pop
sub
push
mov
ljmp
mov
aas
icebp
sahf
push
pop
roll
sbb
aaa
enter
push
xor
push
push
mov
inc
mov
adc
inc
push
mov
xchg
jbe
mov
xchg
push
mov
std
xor
nop
leave
popf
and
push
iret
add
xor
jnp
jle
jnp
aam
outsb
negb
andl
jg
subl
push
xchg
sbb
mov
repnz
mov
dec
std
xchg
fisubl
test
cmpsb
add
pop
jne
sahf
bound
mov
xchg
mov
jns
sbb
loop
mov
adc
push
imul
scas
push
add
clc
cmpsl
pop
add
or
adc
frstor
jge
js
bound
insb
sbb
mov
in
dec
inc
xor
ror
fucomip
cwtl
jno
xchg
jp
loop
aam
mov
jl
mov
xchg
shlb
adc
cmpsb
les
xor
ficompl
in
mov
sbb
push
mov
adc
das
cmp
mov
ja
sahf
test
mov
cmp
mov
lcall
sbb
rorb
dec
bound
dec
mov
add
push
stos
data16
inc
xchg
push
cltd
subl
repz
and
aaa
push
mov
jb
addr16
add
and
add
sbb
scas
repnz
mov
idivb
lret
lea
shll
pop
les
or
jae
xlat
jo
pop
rcrb
ficoms
std
hlt
jle
fdivl
sahf
mov
lret
ficoms
mov
mov
repnz
shrl
ret
fldcw
mov
call
dec
insb
dec
mov
es
cltd
adc
daa
fldt
sti
jecxz
xorb
repnz
cld
lock
in
push
mov
jnp
shr
xchg
lcall
jmp
loope
mov
sti
xor
sbb
push
or
mov
jecxz
dec
int
pop
rclb
and
dec
lea
stc
jle
add
lret
sti
xlat
or
daa
dec
ja
decl
cltd
dec
les
je
cmp
push
inc
daa
mov
sub
adc
out
enter
rolb
xlat
outsl
cmp
pop
mov
int
sbb
dec
iret
jmp
and
mov
mov
scas
mov
jnp
nop
arpl
scas
dec
xchg
fistl
inc
lock
add
addr16
jno
and
cmp
loop
sbb
outsb
test
push
sbb
or
or
or
aam
pop
dec
mov
shrb
popa
add
clc
and
inc
jge
test
clc
add
cli
imul
movsb
fstpt
mov
daa
jmp
ss
cmp
ljmp
xlat
daa
arpl
in
xlat
dec
jo
inc
inc
in
retw
mov
xchg
pop
js
andb
cmpsl
add
lret
add
lcall
add
sbb
movsl
das
mov
mov
and
xlat
fstp
bound
push
mov
fiaddl
insl
xor
in
insb
pop
push
es
jmp
sub
mov
xchg
fstl
std
maskmovq
imull
jmp
les
push
fistpl
dec
rolb
shlb
pop
lahf
xchg
testb
outsl
stc
ljmp
js
ja
inc
xor
pop
dec
inc
lods
adcb
dec
mov
push
push
xchg
xchg
fiaddl
outsb
out
dec
adc
mov
jecxz
clc
imul
add
mov
dec
cmp
sbb
stc
test
cltd
pop
pop
xchg
or
scas
add
pop
or
pop
pushf
jns
push
mov
cmpsb
orb
mov
fidivs
out
push
cmpl
arpl
inc
sar
jg
hlt
inc
add
int3
stos
adc
js
push
dec
xor
jmp
adc
dec
movsb
inc
cmpsl
stc
pop
fsubr
xor
jne
sub
add
test
push
mov
sbb
stos
jne
mov
xor
outsl
dec
pusha
dec
popf
jmp
mov
sbb
xor
pop
cmp
icebp
xchg
aas
push
fs
jg
ljmp
insl
push
iret
imul
xchg
aam
and
xor
stc
cwtl
fisttpl
mov
js
inc
jae
sbb
in
pusha
and
out
xchg
fcompl
push
push
ret
cmp
in
dec
clc
cmc
dec
movl
push
lock
leave
push
ss
sbb
cltd
popa
jnp
lock
loop
and
imul
xchg
sub
out
movsb
and
sarb
ljmp
push
pop
and
pop
aaa
xor
dec
adc
adc
mov
outsl
pop
mov
cmp
out
stc
sub
cli
adcl
sbb
jo
dec
push
adc
push
fiadds
mov
cmp
leave
call
out
sarb
dec
ljmp
or
imul
jge
ss
cmp
fidivrs
pop
mov
cmp
lret
inc
and
pop
jbe
testb
lock
and
flds
test
lea
xchg
xor
mov
push
sbb
bound
repnz
inc
mov
push
shl
mov
push
shll
out
outsl
leave
dec
jl
lock
cmp
into
popa
iret
sahf
cmpsl
aad
setns
mov
imul
loope
arpl
push
std
lods
cmpb
inc
jno
xchg
vmwrite
in
leave
mov
pop
stos
pop
in
shll
in
stos
cmp
popf
mov
jle
outsb
inc
jge
push
sbbl
enter
jecxz
rcll
cs
add
push
jge,pn
faddl
push
into
mov
dec
hlt
sub
sub
arpl
into
cmc
arpl
clc
repz
inc
mov
jb
fs
add
std
shrl
cmp
pop
add
xorb
dec
push
sbb
push
push
out
pop
ss
test
pusha
jecxz
pop
dec
sbb
sub
jecxz
sahf
cmp
push
mov
and
mov
std
loope
in
rol
push
or
dec
dec
popa
push
roll
outsl
stc
and
xchg
dec
add
mov
inc
sbb
int3
xor
add
pop
lret
push
inc
jnp
lods
pusha
mov
add
mov
call
sahf
aam
xorb
insb
std
dec
sub
out
adc
aad
push
xchg
inc
outsb
movsl
pop
dec
mov
test
lods
pop
mov
fiadds
sub
and
jns
clc
or
lods
sarl
gs
and
xchg
int3
gs
dec
in
out
loope
outsb
or
addr16
out
push
jg
cmc
lock
or
xchg
push
push
mov
xchg
leave
mov
gs
jae
jae
ret
jle
adc
icebp
adc
push
std
and
jnp
or
loope
pop
pop
cld
popf
xchg
fisubl
test
stos
std
cmp
es
mov
mov
imul
push
notl
rolb
call
sarl
xchg
lcall
stos
xchg
dec
out
jno
repnz
xchg
mov
push
fisubs
add
gs
push
sti
lret
movsl
cmp
dec
adc
add
sub
push
roll
repnz
ljmp
addl
daa
dec
sub
mov
push
mov
mov
xchg
add
mov
jecxz
imul
pusha
jae
gs
inc
cwtl
fisubrs
lea
lock
rclb
imul
and
cmpsb
out
test
ja
jle
and
dec
rcrb
icebp
int3
push
stos
mov
push
adc
dec
outsb
lock
pop
pop
aas
jo
pop
add
mov
and
lods
xchg
pop
sbb
dec
les
push
mov
fisttpll
jmp
jne
data16
mov
jmp
cld
lds
jmp
add
xlat
arpl
dec
jbe
cmpb
sbb
cld
shlb
add
add
or
xor
pushf
fucomp
loope
push
mov
loope
xchg
add
jo
lret
sub
out
mov
sub
lret
cmp
test
in
leave
es
cmp
cmp
insl
jne
popa
aad
xchg
and
xor
push
mov
xorb
cmp
push
xlat
pusha
jecxz
sub
push
fwait
mov
test
ret
ja
inc
adc
imul
push
cltd
js
pop
cmp
mov
cld
bound
xchg
ss
mov
xchg
mov
jl
nop
jns
sbbl
loopne
jno
lahf
sbb
and
fildll
jb
loope
pushf
out
jae
push
dec
into
xor
or
enter
push
lret
pop
pop
push
das
sti
mov
adc
or
out
pop
jo
adc
or
fcoml
pop
movsb
xchg
mov
adc
insl
jnp
jp
jns
mov
mov
xchg
loope
add
add
imul
scas
push
cmp
fisubl
call
movb
mov
jge
mov
lahf
cmc
xor
or
push
push
les
jmp
sbb
lods
sbb
sbb
dec
pop
mov
fiadds
outsl
cpuid
and
clc
mov
xchg
aam
icebp
push
jo
mov
mov
fistpll
imul
shrl
ficoms
push
loope
mov
adc
loop
jb
mov
mov
jo
gs
idivb
test
xchg
push
aam
push
jbe
loop
sarb
sbb
or
sbb
sbb
std
push
adc
mov
push
mov
jl
adc
mov
fwait
clts
test
sahf
test
xor
jae
pushf
daa
mov
jp
ret
jbe
das
xor
sbb
movsb
out
lods
les
jl
pop
push
lods
int3
jl
cmpsb
or
rclb
mov
jb
movsb
push
sbb
cwtl
push
orb
dec
std
jg
xor
and
xchg
std
mov
dec
insl
xchg
adc
inc
xchg
out
sbb
push
or
inc
lods
movsl
data16
and
in
pop
push
repz
push
icebp
imul
frstor
mov
enter
out
int3
pop
pop
and
cmp
sbb
xor
ud0
arpl
rolb
cmpl
add
add
push
sbb
je
cltd
jmp
jle
data16
aam
lock
jno
xchg
or
ljmp
lods
mov
and
cmpsb
jg
inc
sbb
dec
mov
fcomi
scas
xor
jbe
in
outsb
push
push
adc
lea
movsb
loopne
xor
push
push
mov
cmp
test
fwait
mov
in
xor
lret
rolb
pop
jno
adc
inc
pop
repz
ljmp
or
mov
bound
mov
jp
mov
dec
sbb
repz
jns
andb
push
gs
xchg
adc
cmp
mov
arpl
mov
or
popa
cld
scas
cmp
and
lahf
adc
jecxz
xchg
lods
add
test
push
movsb
and
pop
rolb
into
fstpt
jne
add
mov
in
jecxz
cltd
pop
xchg
adc
dec
ljmp
std
jle
and
push
cmp
lret
dec
and
fisubrs
cmpsb
push
inc
dec
sbb
sti
das
jo
dec
push
daa
pop
cmc
mov
inc
fldenv
rorl
mov
les
lcall
mov
add
arpl
inc
addl
mov
inc
sahf
sbb
cmpsl
repz
mov
hlt
stc
mov
add
xchg
xor
mov
mov
inc
cmp
add
lahf
push
ss
mov
imul
bswap
imull
fsts
pop
ljmp
mov
push
xor
fadds
aaa
pusha
mov
mov
xchg
insb
mov
enter
jno
dec
lock
jle
cmp
outsb
cld
imul
dec
xor
je
mov
mov
mov
insb
call
ja
faddl
pop
ficomps
addr16
cmp
jmp
shl
in
aaa
jo
push
add
repnz
pop
xchg
mov
or
xor
and
inc
xor
repz
jmp
jmp
inc
pop
movsl
outsb
sbb
pop
in
pop
test
loopne
cmp
mov
iret
mov
jbe
push
mov
fiaddl
xchg
xor
mov
pusha
sarb
inc
adc
js
insb
std
xlat
decl
mov
out
xor
mov
push
xorl
or
jle
dec
rclb
rcl
ds
rcrl
jg
xor
incb
mov
xchg
pop
aaa
push
lret
xlat
cmp
lock
aas
adc
pop
mov
and
mov
incl
ret
push
jmp
insl
dec
and
cmpsb
xchg
dec
mov
lret
fisubl
int3
xlat
sub
testb
pop
sahf
fcom
sub
push
push
sub
aas
and
out
pop
or
and
rorb
pop
cmpsl
test
fs
push
addr16
mov
and
enter
xor
xor
dec
sbb
test
loop
cmpb
push
sbb
or
fucomi
adc
js
and
es
test
rcr
xadd
es
dec
add
mov
sub
mov
dec
into
fimull
loop
adc
sbb
jnp
pusha
dec
jne
dec
lods
or
into
nop
jne
and
push
add
jo
mov
sti
cmp
rorb
mov
jne
mov
pop
shlb
repnz
and
cmc
and
xchg
inc
test
int3
sub
mov
popa
cmpsl
mov
push
es
nop
cli
push
stos
inc
int3
fcmovnu
jae
insl
push
sbb
ja
sbb
or
xchg
dec
push
mov
addr16
jne
or
ret
mov
sbb
scas
inc
xchg
out
movsb
addl
xchg
push
fistps
ja
imul
xor
scas
and
stc
pop
xor
in
in
inc
jns
imul
enter
enter
jae
cmp
jno
frstor
xchg
test
and
and
ss
ret
fistl
leave
popf
into
lret
inc
call
pushf
int
out
cld
or
aad
inc
adc
jns
xor
out
loopne
inc
sbb
cmp
cmp
xor
ljmp
mov
lods
sahf
push
xor
in
pop
cmp
shl
push
inc
pop
and
ficompl
pop
pop
cwtl
sbb
sub
xchg
sub
in
pusha
dec
mov
mov
addr16
shrb
mov
sahf
jg
rcl
js
movsl
or
inc
lea
lret
ds
loopne
xor
xchg
outsb
fnsave
xor
nop
repnz
cs
or
push
xchg
fisubl
fildl
call
cmp
or
idivl
xchg
mov
insb
jae
sub
stos
fadd
mov
dec
pop
shlb
shlb
dec
add
jb
push
dec
andl
pop
jne
leave
cld
scas
sarb
mov
movsb
sub
shlb
adc
jns
repnz
sbb
or
adc
stc
xchg
adc
push
in
ljmp
adc
mov
pop
xchg
insl
mov
push
int3
in
or
and
lods
addb
loop
lods
pop
in
mov
loop
cld
into
lcall
cld
adc
in
in
test
jnp
in
and
inc
dec
in
aam
popf
pusha
test
add
inc
fcmovu
lods
dec
loop
fbld
stos
adc
dec
and
icebp
repz
into
inc
jecxz
mov
sbb
pop
loope
loope
pop
push
mov
mov
inc
xchg
test
xor
fsub
jmp
fisubl
call
or
xor
mov
push
cmp
aaa
push
lea
pop
mov
sbb
inc
ja
inc
jle
clc
adc
adc
adc
lcall
cmpb
icebp
iret
ds
adc
loopne
add
cli
dec
dec
mov
scas
cmp
movsb
jne
xchg
stc
mov
shrl
and
test
nop
xchg
out
in
jne
pushf
bound
mov
push
pushf
stc
imul
sbb
add
outsl
jb
dec
inc
lods
xchg
cltd
xchg
and
imul
push
mov
pop
hlt
fwait
cmp
mov
jns
in
ss
je
fdivrl
mov
mov
sub
pop
pop
pop
pop
pop
adc
mov
fs
out
mov
or
xor
arpl
add
shlb
loopne
push
and
out
add
jmp
cmc
lret
data16
roll
int
cmp
fcoms
jbe
stos
mov
aam
sbb
jmp
jecxz
repnz
scas
shrb
inc
ja
pop
loopne
cmpsl
and
inc
mov
pop
adc
sbb
and
adc
inc
test
or
sbb
or
dec
sbb
sbb
push
or
aam
lds
ljmp
cld
xor
fiaddl
addr16
test
sbb
xor
fwait
shld
jno
mov
add
mov
jg
scas
add
gs
scas
mov
dec
aaa
jns
rol
cmpsl
in
and
cmp
cmpsb
enter
pop
dec
or
in
jns
subb
aaa
pop
daa
sahf
sahf
or
xchg
add
adc
pushf
les
lea
inc
or
cmp
or
mov
add
ret
lods
cmpsl
push
pop
bnd
cs
add
rcll
cmpsb
andl
sub
in
negb
lods
test
cli
xchg
mov
cmp
scas
jo,pt
int3
adc
cli
gs
or
push
sub
mov
dec
in
or
mov
mov
mov
shrl
mov
aaa
add
repz
ja
movsl
push
pop
ja
jl
fistpll
fisubrl
pusha
dec
data16
mov
cmp
pop
push
inc
or
test
stos
cs
aas
inc
lods
insl
ret
fsubs
mov
cmp
sub
dec
loop
xchg
das
mov
jnp
push
xor
push
jmp
xchg
mov
in
mov
bound
cli
shlb
out
push
xchg
jmp
xchg
or
ficompl
in
push
sbb
lock
outsl
xor
repnz
or
xor
jp
inc
pop
incl
add
nop
sbb
ljmp
clc
aad
aam
and
orb
mov
lock
mov
into
mov
fdivs
les
mov
fnstenv
call
dec
xor
mov
stc
out
cltd
mov
in
into
xchg
ds
clc
pop
cwtl
rol
rclb
iret
push
lea
add
dec
mov
sarb
pop
mov
adc
lcall
or
cld
shrl
out
inc
mov
mov
push
sub
cs
jnp
out
lods
daa
jns
mov
mul
xchg
push
push
ds
push
dec
ja
push
jge
jmp
cmp
add
ret
ret
fsubs
insl
shrl
pop
movsl
dec
imul
pushf
adc
jbe
cmp
push
xor
mov
std
in
and
jp
out
push
cmp
lret
jl
popa
mov
sbb
adc
mov
inc
push
fisubrl
rolb
fcomi
out
jbe
pop
add
lret
shlb
xchg
dec
add
ror
pop
cmp
add
inc
sbb
aam
xor
mov
sub
xor
sarb
push
add
mov
shr
into
mov
dec
or
in
adc
or
xchg
add
push
in
lcall
fninit
imul
pop
and
bound
xor
lahf
lods
push
mov
outsl
je
or
or
movsl
sub
mov
and
inc
paddb
xor
aam
mov
into
mov
test
inc
jne
add
xor
test
mov
das
test
outsl
adc
lret
sub
aaa
mov
aam
es
inc
cld
and
test
stos
sahf
lret
ret
test
cmp
stos
mov
clc
pushf
xor
sbb
pusha
dec
sbb
sub
inc
jo
jno
stos
pop
mov
add
das
sbb
add
mov
sahf
aam
adc
mov
pop
pop
adc
sahf
vmwrite
dec
add
xchg
popa
push
cwtl
fdivl
aaa
daa
jno
lret
ret
push
inc
mov
mov
nop
mov
sub
xchg
ja
cmpsl
movsl
out
fimuls
or
push
clc
jge
jnp
xchg
or
jo
repnz
add
outsb
hlt
in
mov
mov
dec
in
or
push
stc
inc
mov
lahf
mov
jb
outsl
jbe
jmp
or
lods
sub
inc
push
add
dec
mov
jp
jecxz
lret
out
loope
iret
jp
jp
or
push
and
in
jecxz
mov
sahf
and
out
mov
add
adc
fs
inc
movsb
and
sub
xchg
ljmp
sahf
add
mov
lea
jb
dec
or
lods
adc
push
inc
popa
insb
add
pusha
arpl
movsb
out
aad
adc
scas
lahf
push
lret
mov
add
jg
or
xlat
inc
and
arpl
cmp
mov
mov
fs
pop
cltd
rorl
jo
sti
jbe
xor
gs
inc
popa
push
cmp
int3
mov
push
sbb
int
pushf
xor
daa
jp
cwtl
pop
inc
xchg
daa
jo
jbe
xchg
mov
dec
rorb
fildl
and
int3
cmp
negl
shlb
pop
mov
insb
lock
inc
les
pop
out
add
cmp
mov
jns
mov
std
xor
mov
jns
or
cwtl
sbb
jnp
stos
mov
popf
add
xchg
and
or
add
mov
sbb
sbb
stos
or
lea
xchg
sbb
add
fistpll
shll
lret
in
adc
xchg
jb
jbe
sub
out
movsl
dec
sbb
lret
clc
scas
sti
fisttpll
iret
pop
or
clc
hlt
xchg
cmp
orl
movsl
rcrb
xchg
out
sub
xor
pop
cltd
hlt
bound
adc
ss
pushf
sub
lcall
dec
divl
jo
and
aas
test
lock
mov
ljmp
pop
sahf
in
fwait
cwtl
sbb
int
call
add
inc
and
adc
push
and
pop
out
lods
aad
fsubrp
fistpll
in
aad
subb
jo
imul
sbb
mov
movsl
repnz
int3
and
into
fs
bound
dec
sub
out
push
jle
loopne
jecxz
in
insl
cmp
cltd
test
rolb
sub
mov
jns
add
sub
mov
cs
shrb
cmp
adc
out
rorb
push
cltd
and
sub
jno
mov
out
mov
stos
or
sub
sub
out
and
aam
sub
cmp
repnz
sahf
rolb
aad
or
popf
sub
jp
jp
xor
mov
pop
es
mov
cmp
xor
dec
andb
xor
mov
int3
jge
inc
loope
push
cmp
mov
sbb
stos
sub
imul
jp
lea
fisttpll
or
shll
add
adc
add
jp
fistpl
scas
scas
dec
sub
push
fcomps
dec
ss
xchg
xor
rcrl
mov
outsb
sarl
insb
jns,pt
sbb
push
daa
push
je
add
mov
addr16
hlt
mov
cmp
jnp
daa
mov
andl
sbb
xor
push
pop
test
jnp
dec
pusha
fs
cld
cs
and
jnp
or
insb
or
inc
dec
mov
sbb
dec
xchg
int
cmp
dec
dec
mov
insl
xor
in
jl
lods
and
shrl
mov
or
sarl
mov
dec
xchg
mov
xchg
loop
aad
or
fsts
or
jbe
dec
incl
mov
test
or
lcall
mov
ja
xlat
jbe
call
dec
cmp
inc
incl
outsb
xchg
cmp
addr16
js
lods
aas
inc
xor
sahf
popf
imul
adc
mov
shlb
mov
fsin
inc
cmp
xor
pop
add
pop
push
scas
jge
xor
addr16
and
test
inc
or
xor
mov
addr16
das
stos
sub
pop
xor
jp
outsl
insl
cmp
dec
fldcw
loop
inc
push
push
flds
fistpl
shl
inc
mov
cli
icebp
in
idiv
xor
jle
insb
jae
jge
scas
stos
or
repnz
insl
inc
iret
push
nop
fcompl
jne
mov
cld
dec
inc
inc
imul
lea
xchg
add
dec
mov
inc
or
into
xchg
movsw
inc
ret
enter
leave
cmp
push
lret
movsb
xchg
or
mov
stc
cltd
test
xchg
sub
pop
stos
sbb
cmpl
mov
ss
mov
cwtl
xlat
fsts
out
movsl
push
outsl
dec
jl
shl
inc
rcrl
iret
add
mov
movsl
jp
stc
aad
add
mov
rcrl
mov
cltd
push
push
cmp
int3
repz
mov
xor
rcll
sub
leave
lds
fistpl
add
outsl
lock
sub
dec
sub
fidivl
mov
or
push
dec
xor
je
jmp
mov
orl
lahf
jmp
inc
pop
push
mov
sbb
shlb
loop
adc
add
fdivl
mov
inc
popf
inc
js
aas
rcrb
sbb
xor
sub
pushf
fisubrl
out
and
iret
dec
inc
mov
cmc
inc
arpl
loopne
popf
mov
movhlps
mov
pop
lods
xor
dec
jne
inc
or
xor
rorl
and
xchg
iret
enter
cli
test
push
lea
out
out
cmpsl
adc
mov
jl
out
xchg
mov
leave
call
pop
pop
adc
lahf
cmp
push
add
mov
subl
mov
cld
jmp
movsb
xlat
inc
jne
mov
arpl
mov
jnp
js
hlt
test
lret
out
mov
sbbl
mov
mov
mov
or
mov
adcl
dec
pop
sti
or
ror
movsb
lods
mov
push
das
cmpsl
movsb
loope
add
hlt
push
inc
pop
das
outsl
outsb
mov
data16
pop
jne
pop
lock
in
or
jge
push
mov
sti
adc
jecxz
push
daa
ficoml
in
outsl
ljmp
aad
ret
and
repnz
jne
pop
mov
cmpsb
fisttpl
jle
pusha
cmp
lea
or
in
daa
aam
sub
or
aad
cld
in
mov
loop
das
adcb
xchg
mov
jecxz
mov
jmp
lock
cwtl
jg
test
mov
jle
call
mov
or
jne
sbb
xlat
jmp
or
pop
repnz
scas
xor
push
cmp
pop
movsb
out
mov
dec
push
fisubrl
mov
fcmove
fistpl
andb
shlb
test
ret
dec
jns
lods
fucom
xchg
xor
mov
mov
pop
scas
shr
lea
iret
mov
int3
xchg
mov
insl
sbb
mov
adc
jge
mov
pop
lcall
jmp
xor
inc
loop
jbe
push
outsb
ljmp
inc
and
loopne
lods
xchg
cmpsb
mov
fildll
push
mov
xor
cmpl
and
mov
push
add
pop
mov
push
test
fidivrs
jg
add
scas
cmp
jl
orb
jo
test
ljmp
sbb
shlb
cltd
mov
jg
gs
pop
mov
es
mov
leave
push
xchg
movntps
jne
add
in
adc
cld
leave
out
lcall
fmul
shrb
adc
roll
lahf
push
push
dec
push
ret
lds
dec
outsl
add
mov
push
dec
cmp
cmp
fildll
andb
or
xlat
lret
pop
sbb
push
xor
mov
add
leave
inc
loopne
xor
mov
adc
ficoml
les
lret
mov
adc
push
pop
aam
cmp
scas
push
mov
fs
inc
repnz
and
jg
or
fildl
loope
push
cmp
jmp
shlb
leave
popa
pop
mov
push
sub
jmp
fs
icebp
inc
cmovne
insb
iret
mov
and
mov
ja
and
ja
iret
xchg
xor
and
sbb
bound
scas
scas
cmp
imul
lahf
ds
es
rcrb
in
xor
mov
inc
mov
cmpsl
mov
xchg
push
jecxz
in
add
divl
jmp
sbb
out
into
cmp
loope
jo
mov
loopne
out
stos
and
outsl
dec
fdivrs
shl
lods
pop
ss
ss
push
mov
lods
xacquire
pop
and
ds
loope
dec
repz
fldenv
mov
lock
jmp
xchg
jb
in
lock
scas
stc
lds
or
or
mov
pop
pop
or
arpl
mov
and
jl
fldt
enter
mov
cmp
filds
xchg
clc
hlt
test
sarb
xor
icebp
sub
pop
int
rorb
xchg
mov
cmp
xor
popf
cld
mov
fadds
inc
fadds
repz
cmpl
arpl
out
insl
lcall
out
aad
repz
cmp
test
lods
pusha
or
mov
mov
inc
fdivrp
popf
int3
lock
dec
mov
lcall
mov
push
fcomi
inc
dec
fsubr
jo
mov
and
lahf
or
or
pop
adc
jno
pushf
leave
lahf
outsb
aad
add
outsb
sarl
loop
in
dec
loop
leave
ljmp
test
out
and
int3
int
inc
add
xchg
jmp
out
adc
inc
rcrl
mov
inc
add
gs
ret
push
push
jo
inc
add
dec
pop
rol
clc
push
add
lods
sahf
push
pop
aad
dec
inc
or
sub
ja
jg
je
mov
movb
shrb
out
loope
pop
pushf
xor
jle
cmp
xor
daa
mov
push
pop
jo
inc
sbb
adc
dec
cs
clc
repnz
sbb
ds
sbb
jns
jae
sti
dec
loopne
call
insl
js
push
in
mulb
ret
sbb
gs
fcmovnbe
xchg
scas
mov
sti
loop
packsswb
mov
outsl
popa
push
jne
rolb
repnz
dec
scas
jnp
push
fst
fwait
mov
stos
push
es
mov
mov
insl
jp
cmc
push
ret
jno
fiadds
call
push
push
pop
pushfw
and
popf
sbb
xchg
out
es
mov
enter
in
das
xchg
gs
or
pop
lds
cmc
cmp
pop
dec
sbb
scas
push
minps
lea
out
xchg
cmp
adc
scas
lods
xor
sar
pop
mov
stos
lods
dec
and
scas
aam
add
or
mov
sbb
sub
xchg
aaa
shlb
mov
cmc
int3
jmp
dec
repz
imul
outsb
pop
pop
add
push
fmuls
xor
scas
dec
xor
cmp
fcoml
test
mov
push
and
adc
mov
mov
inc
inc
jno
xchg
jbe
or
jg
or
xorb
je
pop
mov
mov
and
pop
jp
fs
adc
inc
mov
shr
test
gs
enter
in
mov
adc
push
and
in
sti
sub
or
sub
fldenv
shl
sbb
stos
sub
insb
and
mov
pop
mov
xor
jge
cwtl
pop
cltd
in
inc
sub
xchg
es
popa
stc
xchg
jns
cwtl
lcall
imul
sub
xor
push
sub
cmpsb
int
mov
pop
cli
xchg
dec
mov
pop
jnp
push
sarl
rol
arpl
mov
movsl
fwait
inc
stos
cmp
into
sbb
mov
sub
fistps
fildl
pop
pop
mov
adc
rorl
ljmp
mov
int
mov
addb
les
sbb
pushf
sti
xchg
or
cmp
xchg
jecxz
in
jae
mov
or
dec
cmpsl
pusha
pop
xorb
mov
sbb
loopne
je
add
or
cld
mov
into
and
fiadds
hlt
mov
mov
cmp
push
jnp
ret
pop
and
sub
xor
repnz
xor
or
lock
lods
das
mov
and
fstpt
mov
imul
jp
push
stos
pop
xor
ds
lret
cwtl
push
stc
or
sbb
pop
shll
mov
cmpsl
cwtl
sbb
mov
dec
cld
outsl
popa
inc
shlb
aad
mov
stos
in
jb
in
ljmp
iret
and
mov
jmp
sbb
lods
mov
cltd
inc
pop
adc
add
and
sahf
inc
pop
adc
fmuls
dec
adcl
lcall
push
and
adc
loopne
add
fisttpl
jl
in
jns
mov
out
xor
mov
je
push
mov
sbb
fcmovb
pop
mov
mov
lcall
sub
bound
in
adc
loopne
add
jmp
out
lock
mov
test
lret
movsl
sub
push
shlb
sti
xchg
insl
cmp
jp
mov
inc
pop
outsb
xchg
push
fsincos
jge
push
adc
xor
or
dec
rcrb
gs
cs
sbb
jle
push
jp
cmc
fldl
jge
aad
int
rcl
ret
xor
sbb
clc
mov
mov
mov
shrl
ret
mov
mov
dec
shrl
cmp
lahf
outsl
or
xchg
mov
jg
add
add
in
mov
sbb
adc
lcall
jg
arpl
or
imul
aas
in
push
and
sub
decb
sub
data16
xchg
stc
mov
test
addr16
jns
push
outsb
xchg
sbb
js
pop
ret
imul
pop
dec
cmp
fdivl
mov
or
mov
ss
cmp
add
loope
das
fsubl
ja
insl
lret
outsb
mov
subb
movsb
adc
dec
arpl
add
jne
xor
repz
mov
mov
outsl
mov
xchg
push
pop
xchg
fidivs
lods
inc
xor
xchg
adc
les
xor
in
gs
push
or
rcll
pop
push
push
sbbl
sub
or
push
leave
lahf
cmp
imul
addl
lea
int3
pop
cmp
mov
call
popf
shlb
mov
in
imul
sbb
jecxz
xchg
stos
fisubrs
push
lahf
sbb
inc
push
pushf
push
and
sub
adc
jno
and
xchg
clc
or
xlat
inc
movaps
pop
gs
pop
arpl
es
popf
fwait
cli
mov
mov
stos
and
test
lea
push
sahf
dec
xor
pop
mov
add
jge
cld
xchg
in
jne
jne
inc
scas
testl
ss
sbb
repnz
lret
or
xor
and
xchg
dec
les
sbb
test
or
lds
mov
jmp
adc
sbb
or
in
jge
outsl
pushf
in
or
fnsave
dec
or
cltd
push
es
out
cmpsb
addl
mov
and
or
repz
cwtl
fs
enter
push
in
dec
lret
push
cli
xor
faddl
ret
push
lret
push
sub
icebp
mov
cli
inc
push
pop
cmpsl
jge
push
jl
pop
stc
repnz
jecxz
mov
jb
xor
inc
hlt
shlb
push
into
hlt
pop
insl
lcall
sbb
adc
jnp
adc
mov
jge
icebp
jecxz
sub
adc
mov
das
leave
mov
fsubl
pop
es
mov
jle
xor
sub
gs
lods
aaa
pop
xlat
cmp
mov
arpl
pop
data16
sub
das
addr16
xchg
cmp
xor
xorl
rorb
call
mov
fsubrs
rep
repnz
pop
mov
gs
shl
cmp
and
xor
std
inc
shr
cmovb
movsl
inc
test
sub
outsb
xor
push
and
sbb
adc
add
push
adc
sub
and
repz
notl
ret
cmp
mov
inc
test
ret
xchg
add
lock
lods
test
mov
jnp
movb
mov
xor
lcall
rclb
test
lock
jae
cmp
stos
sub
nop
mov
in
loopne
pusha
cmpl
lds
gs
in
add
mov
and
pop
aam
adc
ret
leave
sbbl
rclb
fadds
lods
push
and
mov
xchg
shr
test
icebp
add
push
sbb
sbb
popf
push
shlb
loopne
mov
dec
xchg
cmp
aad
in
jg
stos
jge
cmp
sbb
sub
enter
pop
push
imul
shll
cltd
and
lock
push
or
lcall
inc
lret
cmp
mov
pop
add
test
bt
test
rclb
cmp
fnstsw
mov
xchg
mov
push
adc
shll
loope
sub
inc
idiv
inc
fisubrs
sahf
leave
jle
cld
inc
arpl
std
aas
pop
mov
lcall
paddusb
es
fcomp
jbe
shlb
ret
xor
mov
and
mov
push
stos
loopne
bound
adc
aas
dec
jmp
jecxz
sbb
aam
test
fimuls
and
sbb
inc
adc
sbb
lods
stos
mov
xor
fdivrl
and
mov
repz
jno
or
push
cmc
std
add
mov
repz
movsb
sbb
dec
jmp
sbb
and
jmp
ret
inc
adc
lret
int3
push
daa
fwait
test
data16
in
pop
adcb
enter
ficoms
aam
data16
insb
sub
mov
mov
xchg
cmp
jle
jb
fnstcw
addb
inc
xchg
outsb
rolb
push
ret
sarb
mov
ds
push
movsb
sahf
inc
sbb
add
add
dec
stos
sbb
dec
imul
int
xor
out
adc
sub
ss
xchg
push
dec
lcall
pop
and
into
test
mov
test
xchg
lcall
lods
mov
xor
test
loopne
or
je
jbe
das
xor
xchg
es
adc
xor
mov
sahf
jecxz
pop
adc
mov
js
xor
cmp
cmc
push
scas
scas
pusha
mov
fcmovbe
daa
movsl
sub
lods
jle
je
xor
jl
stos
pop
xor
inc
mov
cmp
icebp
push
fmul
daa
xlat
in
call
adc
jae
lret
jmp
movsl
inc
add
mov
pop
jnp
pusha
stos
mov
dec
mull
call
xorl
pop
sbb
push
mov
sti
mov
lea
pop
loop
mov
mov
outsl
leave
das
mov
add
repz
ficomps
adc
inc
sbb
das
mov
fsts
or
jp
dec
in
jae
cmc
test
pop
or
push
ficoml
dec
xor
push
mov
push
xor
pop
sti
xchg
add
pop
mov
test
push
rcrb
test
loope
mulb
ret
rcl
xor
jb
iret
ret
scas
cmp
xchg
jg
leave
cmp
xor
popa
adc
movsb
lea
jns
xlat
and
pop
cltd
fdivs
popf
bound
xchg
push
xor
ljmp
cld
jmp
ja
nop
jge
bound
sub
lds
popa
and
clc
jb
in
mov
cld
jns
mov
jne
leave
sbb
lret
jnp
xchg
pop
and
dec
or
cmpsb
add
jb
lea
pop
stos
js
fdiv
jl
divb
sub
mov
and
fwait
jns
arpl
in
inc
sub
popa
aas
js
mov
in
mov
push
fsts
jge
cs
jae
push
inc
xchg
into
xchg
mov
xor
sbb
push
movsb
ret
dec
pop
js
xchg
scas
xchg
dec
in
push
sarl
jp
xchg
push
sbb
mov
daa
sbb
aad
push
roll
sbb
je
pushf
outsl
icebp
scas
cmpsl
outsl
cmpsb
mov
inc
sbb
bound
cmc
fistps
inc
push
cmp
das
loop
cmp
repnz
jbe
stos
inc
or
cmc
jmp
mov
sub
adc
mov
cmp
jecxz
sub
adc
sbb
fs
push
sub
mov
dec
repnz
jo
enter
insl
push
xchg
sbbb
xchg
int
ja
jp
push
ret
sub
movsb
jge
rcrb
aas
and
inc
push
push
jae
fstp
sbb
stc
out
hlt
aad
loope
adc
jae
repz
mov
mov
sbb
xchg
mov
mov
xchg
stos
mov
fdiv
mov
cmp
cmp
imul
aad
dec
fs
cmp
mov
or
cmp
or
out
pop
fnstcw
in
sti
dec
or
int
pop
or
jp,pt
mov
mov
xor
ja
and
adc
ds
jnp
dec
and
xchg
xor
jnp
arpl
insb
mov
jle
fwait
dec
xchg
jbe
xchg
adc
cmp
out
sar
out
andl
sbb
je
dec
mov
mov
xor
bswap
inc
cmp
andl
pop
ja
sbb
jl
inc
outsl
inc
sbb
ljmp
jecxz
hlt
fcoms
inc
and
into
out
stos
pop
mov
xchg
in
or
dec
frstor
sahf
adc
pop
jmp
cmp
mov
push
jno
test
jae
inc
test
jle
arpl
xchg
push
pop
and
pop
enter
mov
jg
loope
popf
mov
pop
push
lret
add
add
cmp
movsl
lods
sbb
xchg
cli
ljmp
adc
cmpsb
dec
insb
push
fs
fdivrs
lods
xor
and
mov
dec
mov
pop
mov
pop
xchg
arpl
daa
push
add
aas
xchg
or
fsubrl
stos
loopne
js
sbb
fwait
and
mov
sbb
jne
js
adc
loope
mov
push
mov
outsl
and
out
inc
aas
hlt
mov
xor
idiv
in
mov
enter
in
sahf
xchg
ret
mov
mov
scas
mov
rcrb
ja
mov
ret
outsb
arpl
ds
xchg
sbb
jb
insl
cmp
data16
inc
int
mov
add
rcll
dec
sub
pop
adc
mov
and
aad
int
icebp
adc
add
xor
sti
mov
jb
dec
das
dec
lds
lock
ret
mov
mov
sub
sbb
and
shr
or
xor
lods
and
sbb
popa
push
ljmp
std
daa
mov
roll
jae
repnz
cmpsb
sahf
push
pop
mov
mov
add
adc
pop
iret
mov
jb
push
adc
jne
jbe
scas
in
xchg
and
iret
adc
adc
inc
shll
int
push
jno
mov
sbb
test
and
in
mov
es
jge
dec
pusha
test
mov
sbb
and
scas
call
adc
xchg
sbb
xchg
imull
push
popf
pop
add
fsubrl
fldl
jp
xchg
jle
xchg
jns
sub
jns
fwait
sub
cmp
inc
xchg
inc
jns
sbbb
sbb
inc
lods
jno
dec
sbb
push
mov
outsl
mov
mov
loope
rorl
jb
ds
dec
insl
cltd
jb
cli
mov
insb
dec
pop
sub
in
push
jbe
pop
fucom
xor
jge
out
mov
inc
sbb
stos
rclb
mov
inc
fnstcw
cli
pop
add
jo
add
push
pusha
xchg
sbb
and
loope
jae
mov
ja
mov
mov
sbb
daa
or
test
les
fimuls
and
dec
or
popa
in
cmp
syscall
jmp
divl
popa
adc
pop
sbb
stc
cs
dec
sub
pop
loop
push
test
std
mov
sbb
push
je
cltd
fs
aaa
outsl
lods
xor
or
xor
fwait
insb
daa
push
bnd
xor
jl
xchg
push
sbb
mov
out
cmpsl
addr16
les
fsubl
fs
and
sub
enter
lret
dec
lret
repnz
vmovq
push
adc
push
pop
pop
pop
outsb
mov
hlt
incl
iret
dec
inc
in
loop
fsub
inc
inc
push
push
xchg
inc
xor
push
jae
adc
mov
test
mov
xchg
pusha
sahf
lods
xchg
or
add
mov
loop
cmp
xchg
adcb
pop
inc
fwait
imul
ja
pop
pop
inc
loop
add
xor
daa
or
pop
xorl
fistl
outsb
aaa
or
aad
std
out
cmpsl
pop
mov
and
in
jmp
mov
insb
pop
xchg
sbb
jne
daa
add
mov
mov
and
mov
mov
xor
or
sbb
and
or
inc
outsl
lea
pop
adc
nop
scas
sbb
cs
pop
mov
loope
jno
sbb
dec
and
pcmpgtw
int3
jge
or
mov
mov
push
dec
pop
dec
dec
mov
and
dec
or
sbb
push
and
add
aaa
jp
pop
adc
pop
adc
adc
into
rol
mov
movsb
cld
and
jo
mov
movsl
pop
fisttpll
sti
push
lea
sub
iret
or
inc
mov
push
lea
sbbb
xor
pop
xchg
push
mov
mov
cltd
xchg
cmp
sub
push
cmp
addr16
or
jmp
in
fbstp
mov
sub
add
push
imul
mov
in
loopne
xchg
or
pop
aam
mov
sarl
aam
outsb
test
dec
mov
mov
ret
outsl
subl
les
clc
dec
cmp
int3
imul
dec
jl
shll
jo
das
dec
je
mov
xor
mov
out
pop
sahf
or
jae
aaa
pop
popf
mov
ret
jg
aad
mov
mov
inc
das
loope
fwait
cmpsl
xchg
data16
and
mov
sub
stos
lea
arpl
pop
iret
jae
sub
fistl
mov
fisttpl
inc
xchg
lret
sbb
lahf
xchg
mov
scas
in
add
jbe
add
cmp
repz
data16
dec
loope
test
pop
add
jne
mov
adc
inc
popa
enter
inc
call
cltd
das
test
or
adc
dec
xor
addb
push
aas
pop
call
or
std
stos
nop
lahf
ss
jecxz
push
cli
push
dec
in
clc
mov
cmp
push
scas
movsb
push
and
mov
xor
testl
cs
in
dec
scas
jecxz
jbe
pop
leave
or
pop
jge
jb
mov
lods
jge
and
pop
sbb
pop
movsb
pushf
push
dec
dec
outsb
pop
jg
test
lods
imul
hlt
iret
call
jg
jle
xchg
mov
rcll
mov
shrl
mov
pop
shrb
clc
outsl
data16
pop
mov
sbb
mov
cmp
js
cmpsl
loopne
outsb
imul
test
ret
inc
mov
in
mov
push
loope
xchg
dec
mov
push
dec
lock
fiaddl
push
cmp
and
mov
cli
shlb
and
daa
repz
dec
out
std
scas
xor
dec
lock
jo
and
out
jae
mov
faddl
or
dec
push
js,pn
test
xor
xor
popa
ja
dec
mov
outsl
xchg
adc
addl
and
cmp
scas
xchg
adc
dec
sbb
rorb
inc
or
adc
test
cmp
repz
adc
xor
rclb
lcall
or
dec
ror
pushl
sarl
ret
cmpb
mov
scas
pop
sar
dec
rcl
lahf
adc
mov
mov
lahf
imul
ret
sbbl
movsl
fdivrs
or
adc
inc
mov
js
call
fwait
leave
sbb
dec
add
fcoms
rcrl
xchg
pop
arpl
pusha
push
sarb
pop
lea
hlt
scas
lahf
mov
xchg
add
sti
jmp
push
ret
jge
mov
sub
addr16
sti
shlb
stc
dec
sbb
mov
xor
and
in
and
pop
sahf
pop
mov
pop
data16
mov
cltd
add
mov
dec
fstl
xor
cs
mov
test
and
sbb
pop
sub
in
aam
or
mov
push
push
xchg
in
push
xchg
movsb
shlb
mov
ss
cli
movsb
lea
jle
jmp
mov
jbe
lcall
cmp
xorb
scas
dec
cmp
ret
int
test
push
dec
pop
sbb
adc
cmp
cli
mov
sahf
push
test
shr
sub
lods
sahf
out
scas
nop
add
into
mov
jmp
add
mov
or
pop
adc
jbe
fisttps
and
data16
inc
lea
decb
inc
pop
loop
or
jno
jge
std
lahf
ljmp
clc
and
je
in
test
scas
jae
test
lea
adc
pop
mov
or
rolb
dec
or
mov
mov
lahf
aas
arpl
mov
ret
lret
mov
test
inc
pop
xor
jmp
pop
enter
jo
and
stos
pop
loopne
popa
cld
pop
mov
call
push
into
mov
jle
mov
jle
and
jp
clc
out
dec
ret
std
and
movsl
dec
sti
iret
push
lret
cmp
stc
add
and
loop
in
xchg
adc
imul
mov
mov
cmp
cmpsl
or
sbb
pop
imul
pop
fbld
aaa
mov
ds
or
enter
pusha
mov
mov
mov
and
stos
push
sub
stos
lcall
sub
mov
xchg
inc
out
into
das
adc
jbe,pn
cmp
clc
xchg
mov
test
jl
adc
lea
mov
loope
push
push
fs
sub
test
pop
out
cmp
rorb
lock
sub
iret
imul
out
dec
dec
ret
cmp
mov
leave
in
stc
inc
arpl
movsb
popf
or
rorl
mov
push
pop
xchg
jae
scas
jmp
loop
dec
jo
aam
fistpl
mov
imul
push
jmp
sub
pop
hlt
shl
push
mov
push
and
test
xchg
cmc
mov
out
adc
addl
fildll
movsl
aam
jmp
xchg
pop
mov
pop
dec
into
shrb
or
jne
lcall
js
xchg
mov
mov
scas
push
or
pushf
mov
mov
and
fs
arpl
call
and
sub
xchg
mov
mov
je,pt
ljmp
xor
popa
in
dec
repz
fidivl
fisubl
lods
cmp
in
sbb
mov
xlat
cwtl
jp
aas
adcl
or
fisttps
hlt
bound
push
out
loope
inc
movsl
jns
xor
push
push
cwtl
movsb
sub
cmp
and
jnp
ret
popa
add
mov
mov
add
inc
sbb
mov
lods
or
imul
xchg
mov
jae
sbb
cmc
out
xchg
sbb
or
lods
or
imul
mov
lea
addr16
std
dec
inc
in
imul
pusha
jns
jle
inc
icebp
cmp
fsubl
std
fcmovb
and
jl
popa
push
pushf
jp
mov
ret
inc
rcrb
into
push
mov
push
in
decb
mov
pop
mov
push
sub
jmp
out
mov
inc
test
es
pop
gs
jns
loop
dec
xor
scas
pop
inc
add
fwait
ja
xchg
lea
jbe
mov
in
mov
in
mul
xchg
test
pop
adc
das
aas
aas
js
mov
dec
insl
add
fyl2xp1
sub
xchg
cli
insl
inc
fidivrs
add
or
xchg
mov
rcll
out
clc
mov
arpl
sub
mov
les
mov
cmp
aad
adc
hlt
mov
jl
add
xchg
add
push
jne
sub
add
mov
test
jmp
lahf
std
and
test
cmpb
jb
cmp
and
sbb
push
cltd
mov
dec
jo
repnz
sbb
outsb
das
mov
int
pop
adc
cli
cmp
pop
push
loope
mov
je
xchg
sbb
mov
gs
imul
andl
and
fimuls
filds
mov
push
out
cli
pop
adc
push
fistpll
cmp
push
cwtl
aaa
mov
inc
push
cmp
cmp
std
in
fsubl
loopne
shl
in
out
icebp
das
scas
mov
lds
cmp
inc
ljmp
xchg
add
xchg
xchg
ret
and
fadd
jl
fildll
stc
ftst
stc
aad
push
sti
inc
inc
enter
data16
or
jo
lods
mov
xor
adc
xor
sarb
aaa
inc
outsb
sti
icebp
or
lods
adc
dec
fnstenv
mov
dec
fsubs
cmp
sbb
stos
pop
addr16
stc
dec
mov
dec
out
pushf
mov
pop
and
inc
ja
jl
ljmp
inc
cmp
sbb
sbb
cs
push
mov
aad
mov
rclb
pop
mov
sbb
insb
ret
pop
dec
xchg
loop
add
imul
sub
xchg
frstor
push
enter
add
jmp
and
aaa
or
in
add
mov
jae
jmp
xor
lahf
je
clc
ret
adc
and
and
pop
out
mov
sbb
sub
dec
sbb
frstor
flds
stos
fdivrs
fisttps
mov
push
xchg
icebp
mov
push
in
stc
add
add
loope
jns
adc
scas
out
int
lods
sbb
nop
aam
dec
inc
mov
addr16
cwtl
and
pop
sbb
icebp
mov
jae
daa
rcrl
jns
sub
lret
sbb
ja
xchg
test
mov
xchg
mov
push
movl
or
pop
nop
insl
int3
mov
sbb
mov
in
push
xchg
pop
inc
dec
bound
lret
xchg
hlt
cmp
movsb
dec
cmp
arpl
and
or
push
repnz
add
dec
clc
xor
jp
inc
shll
gs
aam
dec
clc
mov
mov
mov
fs
cld
add
fsubr
xchg
lcall
inc
or
adc
xor
mov
xlat
xchg
ljmp
mov
add
pop
push
mov
out
xor
jecxz
jne
pushf
jge
sub
sub
test
fs
fsubl
mov
adc
pop
and
lods
rcrl
dec
outsl
mov
into
and
cwtl
stos
dec
clc
fbstp
mov
aaa
arpl
push
lret
xchg
add
cmpb
or
jp
mov
js
push
push
pop
fs
adc
jle
jmp
arpl
jp
jmp
les
xchg
pushf
scas
push
ja
inc
lods
sbbb
inc
adc
mov
lret
cwtl
mov
xor
into
cltd
mov
sbb
sbb
lret
cmp
dec
cmp
mov
repnz
jo
mov
ffreep
das
push
cmp
bound
sbbb
sub
fsub
push
add
mov
jne
push
push
adc
iret
frstor
into
js
sbb
push
inc
pop
stos
sbb
add
cwtl
call
mov
fbstp
repz
dec
mov
out
jne
dec
sbb
jecxz
or
or
pop
test
ja
add
js
repnz
scas
adc
test
add
imul
imul
enter
adc
pop
mov
xor
mov
imul
addr16
rol
enter
pushf
xor
dec
pop
movsb
arpl
push
sub
xor
insb
mov
inc
dec
negl
add
mov
sub
out
or
sub
aaa
insl
sbb
jne
cmp
cmp
nop
jecxz
mov
jnp
dec
mov
jl
mov
dec
mov
lcall
lods
je
push
mov
xchg
and
mov
cmp
shll
sub
out
jno
inc
cmc
aad
xchg
js
sub
aam
jbe
xor
cltd
iret
sbb
mov
adc
rcll
into
in
jl
add
inc
loopne
cmp
dec
ss
xchg
push
ds
movsb
push
popl
rcll
xchg
adc
lock
cwtl
daa
clc
in
jl
jmp
mul
sbb
aad
xchg
jo
push
mov
and
je
sti
xor
mov
add
add
pop
add
sub
xlat
cmp
pushf
sub
xchg
ss
fs
aas
cld
ret
adc
mov
aas
add
dec
stc
jecxz
lods
jl
sbb
and
cmp
mov
in
cltd
ret
cmp
es
mov
xor
mov
push
and
popa
xchg
xor
pop
sti
popf
aad
ds
xor
push
pop
or
xchg
bound
outsl
iret
jmp
inc
ret
sbb
lret
outsl
sti
push
dec
movsb
jmp
mov
in
or
mov
inc
add
ja
fstpl
shll
leave
push
notl
mov
imul
aad
inc
sub
repz
fiadds
push
jb
ror
in
and
loop
add
lock
cmp
ret
push
movsb
push
sbbb
aas
or
dec
sbb
mov
and
fdivl
aas
xor
stos
loop
aaa
jbe
mov
and
push
stc
jnp
push
and
sbb
dec
gs
add
adc
sbb
daa
push
inc
mov
daa
movsb
mov
insb
or
xor
and
incb
and
idivb
mov
cmp
lods
mov
push
xchg
ja
movsl
cltd
cmp
jno
xor
shrb
jecxz
into
lret
push
stc
pop
or
ret
mov
es
lret
add
fsts
jecxz
mov
mov
or
in
mov
pop
mov
add
ja
dec
out
jno
mov
or
popa
repnz
lret
rclb
or
jp
ja
mov
mov
scas
adc
imul
test
jb
inc
fistpl
and
sub
or
inc
test
lahf
in
or
frstor
sbb
or
xchg
xor
test
out
jmp
out
mov
pop
sub
mov
sub
mov
and
mov
dec
mov
cs
mov
sti
dec
es
jbe
rcr
sub
mov
jecxz
mov
dec
daa
out
push
dec
push
imul
mov
cld
jne
dec
or
bound
outsb
push
lcall
stc
xchg
out
pop
sbb
je
test
add
int
pop
shrl
pop
decl
jno
mov
ds
mov
or
into
dec
push
mov
lods
push
int
sub
push
pop
ss
pop
dec
enter
cwtl
adc
sbb
aaa
loope
push
mov
mov
stc
cmc
jecxz
cmp
push
testl
xlat
ret
ljmp
and
push
pop
and
rol
add
inc
mov
cmp
dec
adc
or
jg
mov
push
xor
and
out
int3
inc
dec
mov
das
dec
ds
inc
incb
sub
scas
adc
lret
cmp
push
mov
adc
js
push
xchg
mov
dec
pop
push
repz
insb
dec
cwtd
leave
xchg
in
jae
adc
fcoms
test
xor
int3
mov
jp
popf
sbb
rcr
es
les
lds
cltd
xchg
cld
in
dec
movsl
xor
lds
add
out
dec
or
scas
scas
in
mov
or
iret
jmp
cld
aas
mov
pmulhw
pop
xor
jp
cmpsb
mov
xchg
mov
cmpsb
ss
into
jl
push
mov
or
sahf
pop
push
pop
lcall
stc
pop
popf
inc
jb
and
pop
push
cmpxchg
lods
dec
sbb
insb
mov
hlt
test
into
std
nop
in
push
fadds
sbb
test
ss
scas
cmp
mov
push
bound
lahf
cmp
push
imul
xchg
lods
or
test
out
mov
mov
mov
dec
sub
inc
mov
adc
xor
pop
cmp
test
subl
loope
xor
lods
xor
xor
icebp
pusha
sub
je
dec
popa
mov
jbe
test
xor
xchg
sub
insw
pusha
test
sbb
push
inc
and
dec
and
rcr
cmpl
sbb
xchg
ret
stos
stos
pop
push
popf
mov
in
in
and
jmp
sbb
mov
mov
addr16
pop
xor
push
imul
js
push
jns
mov
nopl
pop
int
cltd
xchg
add
sti
mov
imul
clc
hlt
ss
sub
mov
jge
xchg
mov
dec
xchg
repnz
popa
clc
pop
xor
cld
mov
testb
outsb
cmp
rcrl
insl
add
lahf
fisubrl
pusha
jg
dec
mov
icebp
out
jno
orl
out
xchg
inc
lods
mov
aam
cli
pop
sub
inc
sbb
jle
inc
jge
jmp
int3
daa
filds
dec
imul
pop
push
xchg
fdivr
xor
or
shl
aad
add
fs
cmp
dec
fs
jbe
adcb
lret
out
and
push
jnp
jle
arpl
sub
and
xlat
cmp
jnp
add
jg
jg
cs
push
cltd
pop
aaa
daa
mov
xchg
dec
aam
test
test
call
in
pop
inc
pop
adc
insl
out
dec
xor
mov
xchg
adc
dec
add
mov
and
fnstcw
lods
xchg
cmp
inc
xor
and
add
fidivl
xor
mov
sub
jmp
push
ficoms
jmp
aam
lcall
movsl
pop
pop
xor
lods
adc
pusha
sub
push
icebp
xchg
out
jb
cmc
or
ret
pop
push
xchg
bound
adc
or
shrd
jb
scas
xor
add
jle
movsl
andb
sbb
pop
cmp
mov
jl
outsl
loopne
cs
mov
jns
cltd
push
rcrl
fdivs
cmp
push
jecxz
les
sti
dec
mov
mov
xchg
lret
mov
stc
mov
sti
jmp
scas
xchg
mov
mov
popf
mov
sub
ret
add
mov
pop
mov
ret
add
mov
movsb
adc
cmpsb
adc
xorb
call
call
mov
in
int3
lret
jl
subb
push
icebp
xchg
jmp
push
movb
data16
xor
loope
sti
int
lods
or
mov
loop
mov
popa
xchg
or
movsl
xchg
cmp
mov
clc
mov
mov
sbb
push
mov
mov
ret
imul
inc
sub
jb
fisubs
xchg
inc
out
lahf
adc
adc
sbb
mov
pop
add
mov
clc
push
outsb
clc
mov
jp
sub
sbb
outsl
adc
out
out
pop
popa
mov
lods
dec
out
fsubs
test
inc
imul
in
xchg
int
daa
jno
and
sbb
jmp
mov
dec
mov
push
xor
mov
movsl
mov
add
mov
lods
mov
fistps
dec
sub
mov
xor
mov
dec
lcall
cmp
mov
adc
pop
and
lret
leave
cmpsl
push
sahf
xor
loope
sbb
ret
inc
jae
push
xchg
xchg
lahf
jnp
jle
adc
mov
dec
pop
inc
pop
hlt
pop
mov
mov
imul
jge
dec
pushf
leave
and
and
add
cmp
daa
daa
cmpsb
push
imul
jmp
xchg
fidivrs
movsb
mov
xchg
lea
aad
insl
pop
scas
mov
sbb
jmp
mov
out
and
adc
inc
adc
fnstsw
insb
cmp
push
aaa
dec
xchg
in
mov
mov
leave
adc
push
outsb
scas
das
lods
dec
repz
xor
in
add
aad
cld
push
jp
cmc
mov
out
add
sbb
and
sbb
jbe
sub
mov
mov
fistps
icebp
sarb
ja
loop
imul
loop
hlt
inc
outsl
add
jge
xlat
and
mov
push
or
sbb
aas
shll
outsb
inc
stc
jecxz
or
stc
jmp
xlat
test
sub
insb
or
nop
repz
jmp
xchg
mov
hlt
and
in
mov
roll
std
ja
es
scas
xlat
jne
aad
pop
xlat
bound
ficompl
cmp
ret
sbb
mov
mov
sub
inc
pushf
movsl
jge
lahf
jl
xor
mov
in
out
out
imul
push
cmp
cmp
nop
inc
mov
adc
test
mov
pop
mov
loop
scas
push
mov
push
cld
xor
outsb
inc
adc
mov
sbb
xor
xchg
in
xor
push
or
add
aas
push
fisttpl
cld
loop
xor
push
imul
nop
ss
adc
outsb
js
xchg
or
lret
lahf
aas
test
sbb
push
and
faddl
mov
pop
jne
xchg
arpl
xchg
pop
lahf
subl
push
dec
and
and
sub
dec
pop
xchg
js
add
mov
loop
mov
mov
cmp
shlb
pop
dec
jle
push
cld
sub
jne
xor
std
xor
add
fs
cwtl
pop
sub
decl
adc
inc
hlt
in
mov
jl
or
aaa
rorl
clc
and
stos
sub
sbb
fiaddl
in
popf
test
es
out
aas
out
cmp
cs
mov
testl
dec
pushf
xchg
in
sarl
dec
cmp
xor
int
mov
ret
pop
adc
cld
push
add
xchg
icebp
xchg
and
push
mov
dec
dec
hlt
aas
mov
cs
inc
push
dec
add
sahf
jb
rcll
mov
xorb
and
sub
inc
mov
lea
push
adc
stc
mov
cmp
or
adc
xor
jae
xchg
jge
add
and
icebp
add
flds
je
xor
jge
or
sub
lahf
cmp
xchg
mov
cld
mov
mov
sbb
jb
aaa
cltd
add
jo
and
lods
cmp
and
fdivl
repz
es
vpmaddwd
jb
test
mov
repz
xchg
filds
cmpsl
fdivl
das
fsubr
lcall
aas
fisubs
or
aam
pop
aad
rorb
fstpt
xchg
lock
jmp
xor
ret
adc
cmp
pop
enter
push
fwait
pop
mov
sar
fwait
cwtl
inc
pop
rcrb
test
xor
repnz
and
test
adc
mov
mov
mov
out
lods
into
iret
outsl
inc
pop
ret
test
scas
lcall
sub
cmpl
mov
repz
cmpsb
cmp
mov
pop
test
dec
ja
mov
push
jge
jmp
mov
adc
inc
les
sub
ret
jnp
repz
pop
mov
dec
add
dec
dec
mov
out
add
lahf
add
popf
jnp
idivb
leave
incb
add
add
lret
pop
mov
aad
rcrl
loopne
sbbb
cmp
add
cmpb
popf
dec
cmc
dec
xor
jge
pop
xchg
and
mov
mov
pop
arpl
fstl
inc
lods
push
add
mov
pop
and
test
les
or
roll
shrb
add
jmp
into
add
jo
xor
adc
push
and
sbb
push
jge
in
xor
outsb
lret
mov
mov
xor
test
sub
pop
push
and
leave
mov
outsl
inc
pop
insb
hlt
loop
clc
cld
loope
stos
das
out
mov
dec
mov
adc
mov
loope
push
jb
arpl
stos
pop
pop
mov
das
push
cmp
jge
ljmp
iret
rorb
jae
lods
push
repz
rorl
adc
cmpsb
sarl
repz
mov
inc
xchg
sar
push
adc
insl
push
mov
loop
popa
mov
mov
sarl
in
cmp
test
push
dec
repnz
sub
xlat
add
in
in
sbb
push
cmpsb
xchg
std
test
lods
stc
adc
out
repnz
xchg
out
xor
xchg
mov
jae
stc
aam
inc
xchg
push
dec
int
shll
cwtl
sub
xchg
fcmovb
shll
int
repz
or
outsb
add
dec
pop
mov
or
int3
inc
hlt
or
insb
fldl
pop
push
push
popa
add
repz
cmpsl
inc
ret
decb
shlb
sbb
push
cmp
fwait
xchg
push
pushf
jmp
cmpsl
arpl
or
subb
sub
pusha
insl
mov
loop
insl
push
add
xchg
lret
xor
mov
inc
movsb
outsb
add
lods
addr16
fstpt
or
dec
xor
ss
sub
dec
call
or
cmp
mov
sbb
jg
cld
in
sub
insb
and
lahf
call
dec
repnz
in
mov
std
xor
clc
push
outsl
inc
out
sub
mov
add
je
ljmp
pop
testl
je
inc
adc
es
push
mov
in
es
push
in
pop
imul
sub
test
ret
mov
inc
das
lahf
cmp
and
mov
dec
mov
jl
std
sub
ja
or
xorl
shrl
mov
mov
inc
jecxz
in
mov
add
divb
xchg
ljmp
jne
fcmovb
mov
add
icebp
mov
insb
shr
cld
imul
jl
push
decl
fwait
cmc
sbb
les
push
xchg
xchg
sbb
sub
ss
push
sbb
cmp
xlat
stos
js
lods
xor
aad
clc
icebp
mov
mov
arpl
rcr
fldcw
lcall
mov
std
jb
je
push
mov
aas
cmp
fyl2xp1
lds
inc
cli
lock
repz
cmpl
push
nop
or
or
fbld
cmp
mov
inc
add
jmp
sbb
fwait
cmp
sarb
cmp
or
je
fisubs
scas
cmc
mov
jle
push
xchg
pop
fs
mov
sub
scas
pop
mov
inc
or
mov
outsb
push
dec
rorl
imul
dec
pop
pop
or
jb
ds
arpl
dec
in
lea
push
mov
inc
jecxz
dec
aaa
pushf
std
or
mov
or
les
int
test
loope
inc
sub
popf
mov
sbb
leave
add
adc
and
rclb
movsl
adc
pop
jo
jmp
mov
pop
sbb
ja
fstps
inc
push
pusha
aaa
push
mov
cmpsl
sbb
mov
mov
mov
jno
out
scas
sbb
jo
data16
inc
jnp
out
push
pop
sbb
push
and
pop
std
test
ljmp
sub
xchg
mov
sub
clc
mov
lcall
push
std
mov
lods
aam
push
lea
push
xor
mov
in
sub
stos
jp
push
in
add
sub
mov
movl
cli
sbb
cmpsl
cs
or
jle
imul
mov
adc
subb
sbb
cmpsl
das
in
pop
adc
jge
pop
hlt
pop
mov
aad
xchg
pushf
sbb
mov
pop
jecxz
test
aaa
divb
mov
cwtl
enter
bswap
sub
and
mov
int
pushf
mov
les
push
pop
je
inc
inc
int
cs
cmp
sub
psadbw
push
sbb
cmp
in
ja
xchg
and
ss
sahf
dec
iret
fdivl
sarb
jmp
ds
int3
cs
mov
scas
push
push
idivl
xchg
loopne
sbb
movsl
pusha
lock
mov
sbb
scas
in
mov
dec
mov
andl
ljmp
push
jns
xchg
nop
ds
mov
mov
sub
mov
mov
adc
daa
sbb
cltd
sahf
in
test
lea
cmp
mov
scas
ret
cs
call
incb
xchg
xor
fwait
mov
pop
jns
mov
xchg
dec
sub
int
add
adc
xchg
xchg
pop
pop
js
cmc
das
dec
subl
xchg
inc
aas
test
cs
pop
cs
sub
mov
rclb
loop
jmp
mov
cmp
es
popa
and
cld
ds
in
insb
scas
dec
imul
push
or
push
pushf
das
imul
mov
xchg
jmp
es
and
mov
insb
mov
add
lret
aad
jg
mov
je
add
mov
mov
mov
adc
mov
mov
inc
add
testl
and
fs
mov
rorl
ficompl
jge
dec
cmc
ficoml
xchg
shl
cmovbe
mov
daa
mov
xlat
mov
push
pusha
or
sbb
inc
call
mov
mov
std
in
rcl
ret
in
mov
xchg
xchg
fdivs
pop
jo
mov
sbb
stc
in
inc
out
inc
stc
andb
pop
cltd
je
add
mov
xlat
push
pop
mov
dec
jmp
filds
or
mov
mov
dec
icebp
fstpl
repz
mov
sti
jg
fwait
popf
loopne
add
sar
or
test
push
mov
je
ret
xor
xor
ret
pop
jge
cmp
outsl
shrl
lods
std
idivl
mov
or
sar
imul
or
sbb
dec
xchg
jns
push
xchg
push
mov
mov
lods
pop
xchg
pop
in
mov
lds
cmpl
dec
loope
sub
fisttpll
dec
cmp
ret
sub
mov
adc
in
mov
cltd
and
sbb
mov
mov
ljmp
lret
mov
cmpsb
push
shll
add
cmp
mov
mov
inc
push
sbb
push
mov
sub
xor
mov
inc
or
push
shrl
in
sub
addr16
fwait
in
test
mov
jmp
mov
lcall
ljmp
test
insb
paddusw
sub
arpl
out
xchg
jg
xlat
inc
mov
ret
mov
aam
nop
pop
sti
inc
push
push
test
dec
nop
push
push
mov
orb
jmp
jae
mov
fildll
pop
cmpsl
jns
out
jbe
jns
call
xchg
pop
xlat
fisttpll
lods
push
pop
fwait
push
jle
out
je
mov
mov
insb
rcrl
dec
lcall
adc
inc
lret
xchg
mov
imul
xor
push
mov
inc
or
incl
mov
repnz
dec
sbb
xchg
ljmp
cmp
ja
leave
lret
imul
ja
pop
mov
sub
and
mov
push
xchg
xlat
incb
mov
push
sub
xor
xor
xlat
ret
and
pop
sub
cld
cmp
jp
mov
mov
fwait
mov
jo
dec
cltd
movsb
pop
ja
stos
scas
cmp
lcall
loopne
xor
stos
incl
inc
arpl
pop
sti
adc
and
popa
mov
push
pop
jae
ret
shrl
ret
aam
and
xchg
xchg
popf
out
in
and
enter
std
cmp
arpl
xchg
mov
sub
iret
test
pop
fdivs
xchg
xor
sbb
and
lcall
inc
movsl
xchg
bound
movsl
adc
push
fisttpl
loope
push
jmp
xchg
stos
add
or
push
jmp
daa
das
cwtl
push
mov
mov
push
mov
and
dec
jnp
or
cmpsb
pop
leave
cmp
shl
mov
dec
jne
mov
loop
movsl
ret
inc
and
test
cmp
inc
in
movsl
push
jbe
inc
gs
mov
xchg
pop
cmp
dec
sbb
dec
cs
addr16
mov
mov
mov
mov
int3
je
jne
aas
adc
push
adc
fsubp
out
sti
sbb
movsl
int3
loope
sarl
lods
xor
sbb
or
adc
jecxz
lds
stos
popa
in
dec
inc
push
es
push
aas
push
fidivl
sbb
mov
jo
movsl
cmp
push
arpl
aad
mov
sarb
ja
mov
fwait
xchg
fucomip
fldenv
push
or
mov
mov
out
sbb
rolb
je
cmpsl
mov
push
jge
clc
add
lock
faddl
scas
pushf
mov
pop
mov
dec
dec
jmp
adc
pop
aam
out
fcmovne
out
loope
cmp
sbb
in
lods
int3
repz
dec
jecxz
sub
test
pop
xor
test
subb
or
mov
cmpsl
inc
and
mov
in
lea
inc
cld
xchg
addl
lods
jb
cmp
cmp
jge
negb
addr16
lret
fs
mov
cli
dec
lods
pop
mov
mov
jle
sub
mov
cmp
dec
and
mov
in
aam
test
aaa
cmpsb
inc
test
jecxz
mov
or
adc
jo
xlat
jmp
stos
dec
lcall
pushf
dec
fnstsw
jne
imul
hlt
shl
in
cld
xor
sbb
push
adc
mov
push
jns
out
pop
jbe
xor
js
int
sbb
jns
pusha
xchg
sub
dec
outsb
cli
cli
mov
fwait
jmp
fcmovne
test
test
push
mov
adc
or
mov
lcall
movsb
or
xor
aam
mov
ret
nop
into
into
aad
hlt
cmp
icebp
pushf
or
fsts
clc
jns
add
jae
pop
mov
cld
inc
in
push
or
stc
push
lcall
push
in
jg
cmp
mov
stos
xchg
cmpsl
filds
leave
xchg
lods
in
lea
mov
lret
sarb
or
pop
mov
imul
adc
leave
fucomip
mov
adc
lret
loop
pop
push
aad
sbb
out
scas
jmp
push
push
dec
ret
sti
int
fdivl
push
movsl
mov
loope
lock
sbb
aad
pop
mov
sbb
outsb
mov
sbb
push
mov
aas
shlb
fdivrl
addb
lahf
add
loop
pop
gs
shr
mov
pushf
jbe
xor
out
lea
jg
insl
sbb
sbb
loopne
addl
jmp
pop
xchg
inc
push
fldl
sbb
enter
mov
call
arpl
jecxz
push
sbb
xor
add
pop
jge
sub
loope
iret
insl
cld
lods
nop
jecxz
lds
mov
cmp
cmp
sti
ret
int3
aam
push
stc
btcl
or
sahf
inc
cmp
imul
lcall
sbb
add
and
scas
pushf
dec
ljmp
dec
data16
clc
out
pop
cmp
imul
sbb
mov
test
andb
cmp
sub
or
or
das
fldcw
push
xchg
pusha
std
in
xor
push
cmp
out
xor
sbb
add
cmc
cltd
jo
mov
ret
lret
or
mov
in
cmc
push
dec
xchg
lods
test
sub
xchg
test
loope
push
loopne
aaa
fadds
filds
sahf
adc
fstpt
lcall
sbb
xlat
mov
ror
icebp
outsb
hlt
sub
pop
sub
iret
ljmp
adc
outsl
adc
mov
loope
and
imul
js
popa
and
and
outsb
lds
int3
adc
dec
or
xchg
mov
xchg
lret
leave
sub
jb
stos
out
pop
push
sbb
clc
pop
add
cwtl
pushf
fildll
cltd
dec
pop
mov
out
lret
sbb
das
sbb
push
push
imul
xchg
sbb
push
out
mov
fsubrp
fisttps
push
pop
cmove
cmp
cld
cmpsl
sub
dec
dec
cmp
push
cmc
lods
xor
mov
pop
pushf
mov
cwtl
xchg
inc
push
loope
mov
add
pop
ret
push
lret
jne
cmpsl
adc
mov
leave
cmpsl
inc
sbbl
mov
fucomi
in
push
ret
lea
push
inc
lock
repz
test
jno
push
push
insl
out
push
movl
cmp
pop
cld
jnp
xchg
mov
dec
enter
std
push
pop
xchg
sub
ds
and
stos
dec
adc
stos
xchg
mov
ret
in
and
hlt
outsl
sbb
outsw
lahf
cmpsl
inc
scas
xchg
push
sub
shll
fstps
lret
cmp
ret
lods
mov
dec
pushf
mov
mov
xor
cmpb
xchg
fnstsw
out
mov
xchg
inc
fistps
in
mov
xor
push
push
or
xor
jmp
xor
xchg
movsl
sbb
movsb
inc
mov
dec
je
cmp
jp
inc
push
jp
call
mov
mov
call
sub
nop
cli
adc
mov
xchg
shll
lahf
jmp
lds
jp
and
and
and
mov
insl
or
push
mov
adc
mov
cmpsl
fwait
pop
ljmp
jnp
sub
jne
dec
sbb
inc
outsl
mov
mov
inc
pop
lea
mov
push
pop
ja
out
mov
outsb
int
xchg
jecxz
vmread
mov
cmpsb
dec
inc
addr16
stc
jmp
cmc
mov
add
mov
pop
mov
sub
neg
push
cmp
push
jge
pop
stos
imul
bound
and
inc
jae
imul
or
loope
cwtl
mov
dec
es
loopne
mov
out
mov
dec
sub
adc
xor
aad
loope
add
int3
inc
dec
in
scas
out
sbb
jp
icebp
cmp
cmpsb
add
dec
pop
xchg
xchg
pop
xchg
or
jmp
ja
dec
and
lahf
or
xchg
pop
adc
adc
jne
mov
cmp
cmpsl
ret
lea
inc
rcrl
mov
in
sbb
loopne
inc
cmc
mov
fdivs
xchg
hlt
adc
call
or
xor
and
jmp
push
mov
cwtl
pop
pop
sti
or
adc
jnp
inc
out
lahf
mov
popa
lea
lock
insb
push
rcrl
push
mov
dec
jl
rcr
adc
rep
sub
lret
xchg
das
push
inc
push
aad
repz
push
sub
in
sbb
rcr
clc
insl
push
imul
pop
mov
cmp
cmpsb
mov
out
rcll
inc
nop
or
sub
lahf
mov
push
out
ret
int3
in
js
xchg
ret
adc
jecxz
cmp
fbstp
dec
dec
jnp
ret
inc
and
cmp
dec
fdivrs
and
lcall
cli
movsl
xchg
push
ja
sbb
inc
mov
es
push
pop
in
out
xor
sub
xchg
movsl
sbb
in
into
idiv
inc
call
mov
push
lret
sub
xchg
sub
mull
dec
fwait
mov
aad
rcll
jnp
fidivrl
mov
pop
subl
fcompl
lcall
cmp
xchg
and
popf
imul
cmp
mov
stos
sbb
adc
pushf
das
jb
fwait
sbb
dec
add
inc
mov
push
push
loopne
lcall
fxch
ljmp
das
inc
gs
pop
popa
pop
pop
or
jle
adc
js
cli
mov
std
inc
sub
cld
aaa
jbe
mov
inc
fbstp
push
cmpsb
dec
dec
pop
jbe
aas
adc
sarl
insl
in
gs
aaa
pop
fisubs
push
dec
adc
jp
stos
rcr
outsb
add
mov
lds
jns
and
mov
pop
mov
arpl
ds
idivb
mov
pop
mov
inc
sbb
pop
movsb
and
cmpsb
jecxz
or
mov
std
int
sahf
pushf
cmc
and
dec
pop
test
std
gs
add
fwait
pop
fmull
jne
mov
lahf
xor
xchg
mov
dec
js
xlat
push
inc
dec
lahf
popa
or
les
push
xor
addl
or
xchg
std
inc
push
mov
jmp
incb
pop
iret
dec
add
sub
fwait
mov
scas
pop
icebp
fdiv
cwtl
ljmp
mov
data16
xor
jp
cs
addl
scas
push
testb
cmp
divps
xchg
cmpsb
lods
addb
mov
mov
push
xor
ss
subl
sub
cmpsb
fisubrl
loope
inc
into
iret
cmpsb
jge
mov
fsubrl
push
in
cmc
add
dec
lret
dec
arpl
xor
sbb
loope
pop
inc
fstl
xor
xor
lret
rorl
jp
add
cmp
data16
add
aaa
ljmp
mov
sub
and
inc
gs
iret
pusha
scas
jae
mov
xor
movsb
or
orl
repz
stc
pop
cmc
lds
push
xor
xchg
xor
insl
sbb
push
mov
jle
pop
fsubrl
fstps
adc
sbb
or
mov
in
cli
and
nop
test
shlb
or
jnp
mov
sub
mov
rcrl
pop
xor
dec
inc
aad
lods
sub
ret
orb
test
enter
xchg
adc
and
repnz
scas
cltd
cwtl
lods
pop
adc
jg
adc
mov
cs
mov
xor
repnz
jb
jae
popf
lea
mov
pop
jl
sub
mov
xor
movsb
mov
push
cwtl
adc
pushf
movsb
repnz
mov
xor
push
cmpsl
rol
sub
xchg
idivb
addr16
leave
cmpsb
subl
mov
aam
daa
leave
hlt
and
jecxz
sbb
xor
popa
mov
adc
xor
icebp
and
cmp
fsubrs
int3
out
push
dec
pop
cmpsb
lods
aad
pop
pop
jne
pavgb
sub
xchg
pusha
std
mov
lods
test
adc
cmp
dec
icebp
out
push
jmp
mov
inc
sbb
jae
inc
jns
sbb
pop
jno
push
sbb
jb
push
cmp
stc
fwait
or
pop
xlat
stos
enter
mov
push
mov
jbe
push
ljmp
mov
or
push
sub
and
push
add
add
mov
push
movl
push
dec
out
sub
test
testl
push
mov
dec
rorb
adc
xor
gs
mov
lea
mov
adc
push
arpl
sub
cmp
loop
and
sbb
fdivs
inc
pop
xor
mov
movsb
test
mov
inc
inc
outsb
out
mov
fildl
call
pop
test
mov
dec
cmpsl
lcall
jb
mov
mov
pop
notb
scas
scas
mov
adc
and
out
cltd
call
add
inc
movsb
sar
cwtl
addl
daa
mov
push
push
sub
jp
in
fst
xchg
jno
outsb
push
cmpsb
out
cmc
mov
mov
lcall
out
aaa
jmp
js
push
cmp
dec
fwait
out
scas
js
movsb
sbbb
popa
or
pop
xor
push
mov
scas
and
jbe
or
mov
movsb
add
xor
int
and
pop
xlat
pop
lea
insb
jb
lods
xor
cltd
cli
xor
sar
add
sbb
repnz
not
push
xchg
cwtl
push
push
mov
mov
sub
test
pop
mov
sub
pop
aam
in
inc
in
insb
pop
cwtl
dec
es
inc
bound
fwait
std
mov
jne
xchg
jb
fs
xor
push
fs
int3
push
les
and
ds
push
enter
mov
fildll
xor
andb
xchg
fs
ja
jo
and
sub
sahf
mov
adc
push
mov
cmp
ret
aam
sbb
jbe
inc
lock
js
adc
inc
mov
iret
pop
fs
je
sub
jp
push
cmp
fisubs
ret
pop
popa
stos
inc
out
repz
jbe
jb
xor
sub
cld
push
sub
jno
fisttps
stc
je
pusha
mov
inc
jmp
cmp
lods
sub
in
jecxz
es
nop
pop
pusha
sub
out
mov
push
cmp
inc
mov
lret
mov
adc
mov
lahf
rcrb
lods
push
dec
xchg
pop
stos
add
mov
fdivrl
mov
iret
cmpsl
pushf
mov
stos
pusha
sarb
sysret
iret
add
jno
cmpsl
or
adc
testb
push
xchg
in
cltd
stos
repnz
rorb
ficomps
pop
sub
or
sbb
decb
pop
int3
cmp
cmp
lret
adc
in
movsl
shlb
mov
mulb
lds
jnp
jo
fnstenv
inc
loop
aad
push
jp
lock
jae
jle
pop
shlb
cbtw
lods
ds
test
sbbb
insl
mov
test
or
mov
js
and
outsl
or
loop
jnp
xchg
loopw
mov
pop
in
fwait
outsb
push
cltd
or
or
orl
leave
int3
shrb
mov
fdivrl
mov
mov
mov
mov
mov
xor
fwait
lods
or
mov
mov
cld
lcall
jl
les
sar
jp
and
pop
sub
stos
js
sbb
mov
cld
adc
out
pop
dec
js
pop
jnp
jecxz
rcl
add
int3
inc
inc
mov
and
das
dec
enter
dec
shll
dec
sub
rcpps
cmp
sub
xchg
fiadds
xlat
pop
and
ds
or
cmp
xchg
jo
ret
push
sbb
pop
and
sbb
pop
fwait
xchg
cmp
pop
xchg
ss
jae
pop
sbb
mov
outsl
mov
sub
das
push
inc
mov
popf
dec
pop
rcl
and
in
mov
movsl
mov
dec
push
cmp
push
cli
or
enter
sbb
mov
inc
jne
in
into
cmpsb
fsubrs
es
int3
dec
inc
popa
push
loopne
dec
push
subl
lods
or
and
jecxz
cmp
cli
scas
fmuls
insb
mov
jmp
out
sbb
mov
rol
push
or
gs
add
inc
sbb
aaa
cmp
call
jb
adc
aas
in
mov
mov
mov
sahf
push
jmp
bound
push
decl
fcmove
adc
xchg
and
jg
xlat
ret
mov
out
hlt
sahf
mov
into
out
jmp
int
outsl
mov
inc
mov
jecxz
call
push
mov
lods
fldl
mov
ss
cmpsl
int3
cli
ret
jb
sbb
cmpl
and
repnz
inc
mov
icebp
mov
inc
cwtl
mov
ljmp
mov
imul
movsl
cwtl
faddp
jb
insl
movsl
test
pushf
xchg
xchg
xchg
push
pop
add
cltd
or
repnz
stos
int3
xchg
loope
popf
sbb
dec
cmp
rcrb
gs
push
adc
test
ds
rcr
sbb
adcb
mov
adc
or
shlb
sub
push
hlt
rcr
cmp
fdivp
stc
lods
fnstenv
mov
mov
es
push
push
cmc
roll
repz
mov
xor
push
insb
xchg
lds
xor
aad
fcompl
lret
movsb
out
sbb
push
aad
push
in
and
inc
scas
mov
test
in
in
inc
pop
inc
xor
push
and
xorb
ret
adc
aad
adc
jecxz
sti
loop
lret
loope
adc
fsubrl
adc
leave
or
sbb
dec
jge
dec
outsb
mov
adc
in
push
lahf
pop
add
repz
cmpsb
pushf
data16
mov
and
jp
rorl
es
dec
sub
mov
hlt
pop
fdivrl
push
fldt
xchg
imul
lret
inc
jle
mov
bound
cli
ja
icebp
lods
ret
dec
adc
roll
adc
and
adc
gs
mov
lock
cld
xor
loop
into
jl
adc
xchg
cmp
push
jnp
inc
mov
popa
pop
iret
popf
xchg
cmc
dec
add
inc
popa
jno
stos
xchg
push
out
xchg
imul
mov
icebp
lret
pop
cmc
mov
cmpsb
inc
sub
movsb
push
mov
aad
ds
sti
mov
and
pop
stc
dec
popa
mov
imull
xchg
mov
inc
jns
fwait
lret
cmpsb
push
dec
sahf
test
adc
and
inc
pop
mov
lods
call
and
inc
jnp
mov
xchg
mov
mov
jmp
cmp
call
scas
imul
pop
push
add
pop
mov
adc
xchg
push
cltd
push
shll
inc
cmpsb
lret
cmp
fs
ret
fcmovnu
cmpsb
jae
cmp
push
and
pop
in
jno
pop
idiv
loop
jl
jmp
arpl
xchg
clc
in
mov
pop
mov
popl
push
xchg
inc
add
idivl
loop
insb
push
mov
add
ds
insb
mov
cmp
jp
fildl
ret
push
mov
xchg
push
adc
mov
pop
sbb
and
ret
enter
stos
call
pop
push
and
jb
mov
addr16
adc
push
addr16
addr16
adc
adc
insb
mov
cmp
sbb
push
push
mov
int
jb
lods
mov
fmull
xor
ficoml
and
hlt
inc
cmp
lods
mov
in
sub
scas
imul
sbb
push
xchg
cmpsl
ret
loopne
loop
dec
out
xor
cmp
ret
lock
xchg
cmp
and
test
ret
je
and
add
je
imul
dec
mov
push
push
std
sarl
and
rol
outsl
add
push
mov
loope
mov
inc
in
in
inc
addr16
movsl
cmp
outsb
xchg
dec
out
jnp
xchg
and
sbb
sub
pushf
clc
clc
bound
ret
jmp
jecxz
out
xchg
xor
sti
push
push
test
push
xchg
insl
loope
push
popa
adc
xchg
rcrl
xchg
jnp
les
jge
test
xchg
and
lret
mov
inc
fistps
aad
shrl
xor
sbb
cmp
pop
adc
cmp
enter
subl
adc
cltd
aad
sarb
out
jge
jge
cmp
ja
and
jb
pop
pop
inc
addr16
insl
mov
ficomps
adc
add
or
mov
insb
shll
cmp
add
enter
push
cmp
mov
imul
out
lock
int
xor
iret
es
cli
fdivr
loopne
dec
push
je
and
push
movsb
fidivs
xor
mov
inc
mov
aad
imul
daa
dec
mov
inc
bound
lret
mov
ljmp
sbb
mov
mov
push
aas
fldt
shrb
sahf
lea
out
int
scas
push
popf
pop
aad
mov
dec
dec
lods
adc
cmp
hlt
inc
jae
add
inc
and
xor
aad
push
jo
sbb
fucomi
cmp
and
dec
sbb
xlat
push
push
xor
aaa
cmc
fisttps
in
adc
adc
popf
xor
mov
je
movsl
adc
loope
scas
daa
jae
daa
fs
mov
push
xchg
iret
jmp
pop
jae
cli
paddusw
data16
cld
xchg
rcl
insb
push
mov
xor
imul
dec
daa
push
inc
push
aad
push
jl
dec
gs
mov
pop
xor
imul
xchg
notb
fsubr
nop
imul
jmp
xor
push
aas
loope
testb
insb
xchg
pop
sbb
cmp
jo
daa
xchg
mov
add
adc
in
lock
dec
bsf
or
xor
mov
ljmp
mull
sarb
je
push
mov
sti
cmp
or
int
pop
in
dec
jno
sub
cli
mov
scas
repnz
and
ds
push
iret
bound
js
addb
sti
mov
push
add
adc
outsl
inc
jae
jle
mov
push
or
push
icebp
mov
mov
dec
pop
sti
popf
dec
cmpsl
xor
popa
dec
into
arpl
mov
aad
ficompl
hlt
clc
loopne
mov
and
mov
rcl
cmpsl
loope
fistpll
pop
xchg
fmull
in
cmp
mov
out
jle
mov
cmp
call
inc
sbb
xlat
arpl
jle
outsl
jno
sbb
fs
mov
inc
pop
mov
add
xchg
incb
mov
test
push
and
out
xchg
jo
mov
xor
sub
mov
movsb
mov
lea
pop
mov
ret
mov
outsb
cmpsb
xorb
mov
enter
out
cmpsb
aam
mov
pop
stos
mov
jge
fdivrl
jge
pop
daa
pop
sub
jge
cwtl
ret
jb
js
sahf
dec
add
testb
cmovge
aad
push
jg
je
sub
test
adc
cmpsb
xchg
test
sub
mov
jns
cmpl
cmp
stos
add
int
stos
adc
pop
cld
mov
faddl
mov
outsb
in
and
fimuls
loopne
insb
mov
cmp
shl
mov
mov
and
mov
jl
mov
fdiv
jp
push
or
sahf
sub
sbb
push
test
std
icebp
lretw
inc
fwait
cmp
xchg
aad
dec
xor
lds
lahf
sbb
xor
inc
dec
sbb
jle
xor
loop
lret
jle
push
mov
sub
sbbl
mov
mov
push
inc
hlt
leave
lods
stc
adc
std
in
loop
xor
imul
push
ffree
insb
jp
test
ss
fidivl
cltd
pop
cmp
fmul
push
mov
push
inc
jae
dec
xchg
ljmp
lahf
mov
sub
dec
in
pop
ret
ja
mov
sbb
popa
cmp
bound
cmp
into
and
in
push
rcr
div
fcompl
rcll
divl
dec
pop
mov
inc
push
sub
push
popa
dec
sbb
daa
repnz
mov
sub
push
xchg
mov
data16
xchg
inc
scas
roll
nop
add
xchg
inc
mov
cli
fnsave
xchg
jae
push
pop
out
xorl
cs
adc
out
mov
shl
jb
mov
aad
outsl
fistps
pop
in
int
ljmp
mov
cmp
adc
fiaddl
xchg
cmp
icebp
mov
dec
ret
popl
jne
push
cmp
lret
jecxz
out
les
dec
mov
sub
xchg
fs
xchg
outsb
sbb
xchg
in
lds
xchg
rclb
mov
mov
andb
loope
lods
adc
inc
test
push
fs
and
hlt
imul
gs
fmuls
movsb
mov
push
push
jle
daa
lods
push
imul
mov
out
cmpsb
scas
ja
or
frstor
jmp
pop
das
scas
popa
xchg
jmp
pop
and
sub
mov
outsl
pop
or
xor
sbb
in
clc
aas
fdiv
cmp
out
xor
rorb
mov
add
enter
divb
out
pop
mov
inc
stc
push
test
out
xor
pusha
mov
jne
aad
ret
aas
js
mov
push
cmc
sbbb
ds
sub
push
sar
pop
jae
xor
xchg
add
mov
lcall
sub
xchg
arpl
ret
lcall
fildl
add
out
sbb
arpl
jae
and
les
ljmp
movaps
pop
dec
add
fwait
xor
idivl
xchg
fistps
jae
inc
mov
fcoms
jmp
imul
pop
mov
repz
mov
pop
fcoml
pop
movsl
jnp
in
shrl
shlb
mov
iret
sbbl
bound
push
mov
cmp
test
enter
dec
popf
xchg
lcall
repnz
xchg
push
dec
mov
mov
cmc
and
outsl
in
lret
in
push
lahf
pop
xchg
pop
scas
mov
shrl
movl
adc
pushf
adc
lods
adc
scas
cmp
repnz
mov
out
push
lret
push
iret
loop
sbb
jg
cld
mov
pop
xchg
jno
ja
hlt
nop
or
pop
pop
outsb
push
adc
add
mov
fcompl
and
add
dec
rclb
aaa
pop
add
xchg
jnp
aad
cmpsl
adc
mov
popa
xchg
scas
adc
outsb
ljmp
addr16
jmp
outsl
test
dec
nop
test
sahf
sub
jg
adc
and
mov
les
push
pmovmskb
les
cmc
cltd
xchg
rorl
loopne
out
xor
sub
jne
sti
loopne
nop
dec
xor
mov
adc
mov
and
cmp
lret
sbb
push
mov
dec
xchg
push
bound
mov
out
test
bound
enter
or
call
shrl
imul
outsl
mov
lahf
adc
lahf
bound
cmpsb
fbstp
and
cmp
shll
leave
stc
fldt
dec
jecxz
and
xlat
rcrb
push
push
stc
cwtl
adc
lret
repnz
shl
sti
fcmovne
push
mov
lods
pop
mov
jo
call
ds
pop
arpl
cld
mov
push
cmp
imul
pop
mov
gs
call
aam
add
or
lcall
push
push
sar
dec
lcall
pop
xor
daa
jbe
or
xchg
pop
pop
cmp
xchg
push
mov
loopne
dec
repnz
movb
out
inc
xchg
ljmp
loopne
test
adc
adc
xor
cltd
adc
add
cmp
lcall
lahf
mov
stos
cld
ror
cmp
movsb
fs
shlb
movsb
mov
mov
cwtl
push
pop
icebp
xchg
xchg
stc
xor
out
jmp
aad
jae
mov
hlt
jmp
data16
mov
popa
adc
push
inc
test
and
add
mov
test
adc
cld
or
fs
push
sbb
es
cmp
iret
xchg
loope
add
push
aad
stos
cmpsl
ficomps
popf
arpl
jne
dec
and
shrl
cmp
mov
test
js,pt
sbb
js
les
fwait
lret
dec
cwtl
sbb
xor
mov
mov
adc
js
or
push
loope
xor
pop
xchg
pop
xchg
jno
xor
dec
clc
sbb
inc
lahf
popf
jo
test
fisttpl
lret
add
adc
xor
out
lcall
call
mov
enter
orl
je
xchg
xchg
addr16
out
sub
sub
mov
inc
pop
mov
jae
dec
and
dec
inc
bound
xor
inc
mov
mov
add
ret
mov
loopne
aad
data16
lahf
mov
xchg
mov
cwtl
in
ss
adc
jns
jmp
cmpsb
dec
push
cltd
rolb
fwait
test
aaa
xchg
add
mov
or
insb
mov
test
sbb
mov
or
fwait
add
dec
pop
sbb
mov
cmp
jno
outsb
push
dec
ret
fisubl
push
xchg
pusha
mov
mov
lret
iret
lret
xchg
sub
mov
adc
mov
clc
sub
adcb
sbb
insl
fisubrl
js
dec
test
dec
mov
fs
fsubrp
cmp
call
fnsave
pop
out
shrb
or
mov
mov
push
push
in
jns
sbb
inc
inc
or
lahf
jno
gs
mov
jne
in
movsb
cmp
aas
pushf
pop
pop
xchg
sbb
test
fwait
mov
push
inc
pushf
xchg
jp
add
jg
inc
mov
cwtl
fisubrl
int3
push
xchg
fdivl
cmp
add
jns
add
dec
iret
shr
pusha
out
testb
arpl
std
mov
aaa
inc
inc
hlt
cld
in
loopne
pusha
insl
sub
into
and
dec
xchg
or
loop
sub
and
inc
lock
shll
jecxz
fwait
xchg
fiaddl
fiaddl
mov
push
xchg
lcall
cltd
xlat
pop
mov
mov
imul
mov
push
dec
jge
out
popf
add
sub
neg
and
xor
rcll
dec
fwait
scas
scas
pop
sbb
push
sti
repz
call
aas
xor
popa
jp
les
push
out
sbb
xchg
xchg
sbb
pusha
sub
mov
inc
mov
popa
out
xchg
push
mov
push
mov
in
sbb
inc
shll
mov
jge
in
ficompl
insb
aas
in
pop
mov
popf
fcos
mov
push
pop
adc
cmpsb
mov
mov
add
in
mov
sub
fnstcw
or
dec
xchg
mov
jne
mov
nop
sbb
cld
add
mov
jmp
filds
mov
in
ljmp
mov
xchg
sbb
adc
jge
sub
mov
add
imul
push
enter
and
add
pusha
cmc
add
inc
push
scas
push
out
dec
sbb
jns
inc
mov
sbb
scas
xchg
imul
jae
cli
pop
add
mov
sub
adc
dec
sar
push
aaa
shlb
mov
add
mov
pop
dec
jmp
stc
sub
or
cmp
lahf
scas
movsb
aaa
jno
push
inc
in
push
nop
jmp
and
mov
loope
sti
xchg
mov
loop
sub
jg
pushf
movsl
mov
fidivrs
les
inc
call
add
inc
jmp
lock
jmp
mov
or
scas
mov
dec
ret
loop
pop
push
or
jb
popaw
stos
test
sarb
sbbl
imul
lods
pop
bound
dec
jmp
pop
mov
mov
in
adc
xor
push
sbb
sahf
mov
popf
loop
sub
lea
push
sub
aaa
mov
loopne
push
mov
js
mov
std
jae
movsb
out
adc
sbb
jae
inc
and
or
mov
lds
ds
xor
sub
pop
cmp
stc
cmpsl
or
test
into
jnp
lods
ret
inc
and
sub
dec
stos
icebp
sub
inc
cmpsb
or
or
lcall
je
pop
cmpsl
shrb
xchg
adc
shrb
lods
cmp
loop
arpl
push
cmp
subl
jbe
or
sbb
sub
pop
jmp
sub
jge
fsubrs
cmpsl
cmpsb
rclb
jl
jae
fisubs
ds
sbb
out
sahf
mov
aam
loope
mov
movsb
call
add
iret
shrl
cmpsb
xchg
cmc
fwait
hlt
jb
shrl
mov
mov
or
and
lods
adc
pushf
mov
add
mov
and
sub
in
inc
sbb
cltd
jns
ss
pushf
sbb
inc
in
jle
lock
out
mov
push
xor
imul
jp
popa
mov
jge
cltd
seta
test
out
xchg
and
or
add
pop
push
pusha
movsb
push
les
add
mov
pop
movsl
clc
les
xor
pop
pop
jo
dec
frstor
xchg
dec
scas
test
mov
sub
in
fildll
jmp
psrlq
cmp
daa
mov
ret
out
leave
movsl
mov
pop
xchg
sbb
cmp
or
cmpsl
xchg
add
sbb
push
sbb
add
adc
sti
imull
lds
cmp
std
scas
hlt
add
inc
cmc
add
mov
clc
dec
jp
jmp
les
xor
xor
arpl
cmp
mov
scas
xchg
inc
cmp
rorb
mov
mov
popa
inc
xchg
xchg
cmc
mov
sahf
sti
cwtl
add
sahf
jmp
add
add
addb
pop
mov
sub
insb
and
test
jl
pop
mov
mov
int
insb
mov
sbb
fldl
sub
mov
jmp
stos
mov
in
mov
inc
dec
push
js
in
inc
loope
ret
push
sbb
ret
push
stos
push
or
ficomps
je
xor
out
insb
scas
cld
or
and
xorl
mov
xchg
outsl
pop
nop
pop
cmp
lret
cs
mov
test
lret
sbb
or
cli
test
and
shlb
inc
daa
cmp
pop
dec
or
in
cmc
clc
cs
jno
pop
ljmp
nop
jl
aaa
push
divl
push
xlat
ja
ret
jl
sbb
dec
cmp
or
int3
bound
adc
and
flds
xchg
sub
or
movsb
dec
mov
imul
nop
pop
pushaw
push
outsl
in
pop
mov
mov
in
dec
sub
sub
push
mov
aam
cmpsb
pop
call
hlt
or
xchg
jle
mov
idivb
push
jg
push
lret
int
push
in
shll
in
lahf
rclb
mov
sub
mov
pushf
push
cli
add
into
push
mov
and
test
loop
adc
movsl
in
jo
xor
adc
movl
mov
ror
ret
cltd
enter
jmp
mov
mov
mov
push
xchg
adc
ss
pop
stos
mov
cld
enter
and
push
adc
mov
hlt
daa
pop
mov
sbb
bound
ja
dec
sbb
push
and
inc
dec
or
sahf
mov
les
adc
inc
mov
dec
push
and
and
xlat
cmc
es
adc
xchg
jp
vmovsd
adc
add
aam
xor
push
fbstp
enter
cwtl
sbb
fwait
outsl
out
rclb
and
ja
hlt
loop
sub
pop
cld
adc
cmp
inc
icebp
addb
xchg
clc
add
icebp
mov
scas
or
nop
push
jecxz
inc
xchg
sbb
outsb
and
loop
int
loopne
icebp
or
scas
in
add
das
pop
add
lea
inc
mov
adc
jae
test
push
stos
or
lods
dec
xlat
repnz
inc
push
inc
and
orl
mov
les
popa
popf
add
cltd
int
mov
ss
lods
call
repnz
sub
insl
cli
test
ret
pop
lds
mov
out
enter
dec
test
bound
cmpsl
call
jnp
dec
or
addr16
push
stos
das
inc
pop
add
insb
call
insl
test
pop
inc
testl
sbbl
cmp
sub
inc
add
cli
es
stos
dec
xchg
in
mov
or
xchg
rol
lods
pop
dec
jle
dec
xor
dec
lret
and
insl
pop
pop
stc
int
and
cmp
inc
jg
mov
dec
inc
adc
or
pop
aad
pusha
mov
pop
mov
xchg
scas
in
sbb
jne
cmp
sub
imul
in
outsl
dec
test
test
ficoms
jo
sbb
in
pop
sbb
dec
adc
repnz
push
and
rsqrtps
int3
shlb
or
addr16
xchg
loop
sub
pop
faddl
mov
fcmovb
jns
dec
xlat
inc
mov
lahf
pop
repz
stc
das
notb
mov
sub
push
mov
jnp
dec
xlat
add
push
pop
pop
mov
repnz
lret
popf
das
loopne
popa
cltd
test
loop
icebp
adc
sahf
cmpsb
xchg
fadds
out
test
enter
jl
sahf
mov
cli
dec
out
mov
xchg
push
sub
stc
xchg
mov
push
adc
cwtl
nop
xchg
jbe
call
add
frstor
inc
cli
lcall
shl
mov
add
ficompl
ret
xchg
stos
iret
mov
out
push
sbb
je
xchg
mov
dec
inc
scas
stos
xor
or
in
hlt
jl
cmp
std
mov
sbb
dec
fwait
mov
inc
shrb
cs
sub
sbb
dec
cmc
mov
mov
js
xchg
pop
loope
outsb
push
rorl
and
inc
bound
stos
fcmovb
jl
jne
pop
sub
mov
clc
or
pop
insb
mov
sbb
sbb
sbb
je
cmpsl
test
mov
scas
shlb
dec
push
cmp
adc
scas
and
fldl
gs
push
cmp
adc
popf
inc
mov
xor
pop
and
mov
rol
cmp
push
cs
mov
shrb
push
push
aam
push
xlat
mov
fisubl
mov
lcall
fdivp
mov
mov
pop
jge
lcall
xor
mov
push
test
cmpsb
outsl
cmp
push
push
ss
lods
xor
repnz
leave
dec
ljmp
stos
loope
dec
xchg
jmp
mov
mov
sub
inc
loope
sahf
mov
lahf
ret
fsubrp
ret
lods
mov
outsb
mov
cmpsb
cmp
sub
xlat
dec
mov
mov
fidivrl
xorl
in
shrl
ss
mov
sbb
int
sub
test
orb
sub
jmp
adc
sbb
lods
arpl
js
inc
push
inc
mov
cmp
popa
dec
lods
or
xchg
xchg
jmp
ret
ror
cmp
repnz
jnp
call
inc
cmc
adc
inc
jbe
in
inc
adc
addr16
lahf
mov
jb
adc
testb
push
sarl
mov
sahf
gs
pushf
mov
pop
dec
mov
adc
sub
cmp
pop
or
movsb
out
xor
mov
in
mov
ljmp
xchg
mov
adc
inc
out
test
mov
pusha
sub
sbb
or
mov
fidivrl
ljmp
addr16
push
push
pop
aam
or
aaa
loopne
in
mov
push
mov
mov
jmp
es
ja
daa
sbb
pop
scas
fidivrs
hlt
call
cmp
insl
enter
int3
mov
imul
push
jb
stos
sbb
lahf
leave
and
cmc
xchg
in
xor
rorb
out
mov
scas
dec
add
mov
push
test
bound
test
sub
shll
mov
mov
mov
ljmp
push
adc
mov
sub
in
push
outsb
pop
xor
adc
fiaddl
mov
inc
xor
pop
adc
mov
idiv
movsl
repnz
pop
inc
movsl
push
mov
jecxz
jle
or
daa
movsb
mov
out
rcl
insb
mov
insl
push
pusha
scas
outsb
sbb
sub
test
jnp
jl
daa
insb
inc
inc
and
aas
mov
jle
pop
out
jg
push
pop
mov
mov
and
push
lds
orb
xlat
inc
js
das
scas
xor
xor
pusha
loope
inc
stos
lods
jo
jnp
out
pop
popf
xchg
cmp
xor
gs
js
divl
pop
adc
movsb
push
xor
ucomiss
xchg
mov
fisttpll
adc
cs
or
xchg
pop
sub
movsb
pop
idivl
inc
rorl
push
mov
or
ret
in
mov
in
adc
fwait
jbe
mov
stos
jne
out
in
cmp
lods
inc
dec
push
jns
adc
in
xchg
sub
pop
jp
stc
xchg
test
sbb
cmp
xlat
fwait
out
pusha
lods
scas
sub
or
add
add
lea
and
jmp
push
pop
mov
inc
hlt
mov
mov
adc
xor
jae
mov
cmp
cmp
stos
out
adc
out
push
out
out
mov
js
aad
movsl
inc
mov
pop
or
mov
push
pop
aam
into
rcrl
or
xorl
push
pop
shll
mov
aad
sbbl
mov
into
jne
mov
lods
or
fsubrl
enter
imul
lea
shl
sub
cmp
mov
jle
add
lods
mov
sub
inc
es
inc
dec
jg
or
loope
jno
xchg
and
pop
jecxz
mov
xlat
lods
mov
stc
mov
lods
and
out
insb
inc
bound
adc
std
scas
ja
aam
mov
and
orl
sbb
mov
mov
or
add
orl
dec
clc
in
adcb
rcll
popf
into
dec
jg
pop
aam
fisttpl
iret
jns
xchg
sbb
sbb
fdiv
mov
jo
into
pop
pop
inc
rcll
cmp
push
jmp
arpl
jmp
sbb
sub
push
in
popa
xchg
repz
les
mov
daa
aas
or
dec
mov
loop
xlat
push
cmp
idivb
mov
xchg
cld
mov
jecxz
xor
inc
and
xor
fs
or
rclb
push
popa
inc
or
je
pop
int
xchg
jmp
repz
loop
inc
sbb
les
cmc
hlt
in
mov
scas
add
ss
jge
jnp
pop
adc
rcrl
cmp
cs
out
imul
jne
adc
lcall
push
mov
jecxz
fbstp
incl
jle
loope
testb
push
orl
ret
sbb
mov
jnp
adc
ret
mov
movsb
add
inc
mov
cli
loop
stc
mov
in
xor
jae
cmp
inc
push
mov
add
inc
test
aad
push
lret
xchg
test
sub
insl
and
bound
inc
dec
loop
or
xorb
popf
mov
ret
add
lock
fldenv
dec
push
pushf
repnz
push
sti
lahf
mov
xchg
adc
out
or
sbb
or
das
cmp
sbb
in
add
inc
icebp
sub
popa
popf
xchg
pop
iret
dec
pop
idivl
xchg
ss
mov
jb
jns
inc
cmp
sbb
xchg
enter
pop
sub
mov
test
lods
push
rcr
sbb
dec
andb
push
test
adc
std
imul
addr16
pop
mov
xchg
jp
pop
aaa
jg
int3
lds
out
xchg
test
fs
aam
mov
add
cmp
add
in
in
aad
mov
jnp,pt
push
jo
imul
mov
sbb
fiaddl
and
icebp
adc
sub
bound
mov
fnstenv
mov
clc
das
lea
mov
push
xor
sub
mov
cmp
sahf
xor
push
xchg
sub
mov
sbb
mov
lock
fmull
add
dec
fstps
sbb
ja
out
add
mov
cmp
mov
jb
mov
cmp
lea
sbb
add
in
sub
add
dec
pop
jae
sbb
xor
lahf
ja
adc
pop
push
ljmp
jg
pop
pop
popf
sub
das
test
xor
xchg
xor
mov
jo
push
xlat
cmp
cmp
das
js
dec
push
gs
xor
jp
and
data16
stos
and
loop
and
jecxz
rcrl
xchg
xor
inc
pop
pop
push
cmp
insb
and
fwait
jge
icebp
add
and
cmpsl
jo
testb
or
cmp
stos
adc
xchg
ret
jle
das
lahf
test
xor
mov
push
shll
shll
jge
add
cmpsl
in
gs
mov
pusha
loopne
lods
adc
inc
push
pushl
adc
in
adcl
ret
lea
mov
mov
add
push
cli
ficoml
lar
cmp
dec
pop
lods
xor
shl
je
andb
pop
das
sub
in
repnz
dec
das
sub
dec
shl
mov
sub
xchg
sub
inc
call
aad
mov
sti
loope
ljmp
pop
in
rolb
movsl
ret
lea
xor
cli
sub
lds
out
sarl
and
pop
dec
cs
pop
fistps
xlat
cmp
sti
inc
add
in
notb
js
cli
fisubrl
and
icebp
xchg
xor
mov
sub
sbb
sbb
dec
cmp
ja
jns
jle
or
cmp
in
out
ret
mov
xlat
jno
popw
mov
bound
mov
sub
in
push
sub
mov
jge
inc
orl
or
cmp
out
jne
testb
hlt
fisttpll
add
xchg
sub
nop
popf
cmp
pop
lods
int3
ret
jge
hlt
xchg
les
dec
mov
lahf
inc
addb
cmp
arpl
pop
test
sbb
pusha
fs
xor
dec
mov
andb
das
mov
adc
cmp
pop
in
imul
sub
mov
lret
and
popf
xlat
dec
or
adc
mov
inc
jmp
js
scas
xor
mov
scas
dec
pop
push
les
push
imul
mov
ret
add
adcl
fmul
lods
fisttpll
repz
and
mov
pop
add
cmpsb
mov
mov
cmpsl
sub
xchg
arpl
dec
push
inc
inc
xor
stos
sbb
and
into
lods
xchg
popa
mov
std
mov
xchg
inc
ret
dec
leave
lock
mov
movsb
loop
out
ret
add
lock
sbb
jne
sub
push
pop
cmpl
push
arpl
cltd
inc
mov
cmp
in
pop
jne
push
mov
hlt
call
mov
pause
mov
jno
in
mov
mov
sub
inc
in
fists
xor
add
and
pop
cmpsl
pop
inc
cmp
push
movsl
in
mov
addr16
test
fldenv
adc
pop
adc
bound
jle
lea
adc
aad
inc
lret
loope
add
push
aaa
jo
dec
out
sbb
or
sub
out
mov
cmp
into
imulb
imul
mov
imul
mov
sbb
cwtl
mov
loope
mov
push
inc
add
shl
jbe
pop
mov
push
aaa
mov
inc
inc
jecxz
icebp
pop
popa
add
arpl
scas
inc
ss
frstor
fimuls
fs
dec
pop
cmp
xchg
jnp
and
shlb
jns
pushf
or
sub
xor
xor
pop
mov
lcall
mov
add
scas
add
mov
sbb
xchg
adc
pop
jg
mov
adc
fidivrs
aad
and
data16
sub
jo
aas
fucomi
enter
jg
into
cli
sub
pop
popf
dec
push
lret
adc
ret
add
sbb
xor
sbb
or
or
outsb
jne
stos
and
jmp
mov
out
insb
cmp
out
adc
psubsb
jno
incl
lods
push
icebp
inc
iret
aas
stos
inc
mov
cmp
adcl
jecxz
mov
pop
pop
jo
and
xor
rorl
aad
xor
test
adc
jl
lret
sarl
aas
ljmp
stos
and
ret
inc
cwtl
in
ds
nop
cmpsl
sbb
andb
fdivrl
out
movsb
xor
ss
push
lock
and
add
push
scas
push
xor
xor
xor
mov
add
jle
andb
fwait
jne
ret
cltd
sarl
mov
shll
jae
pop
mov
cld
add
pop
xchg
jnp
je
das
and
popa
sub
inc
cmpsl
das
repz
movsl
jnp
orb
rorb
push
pop
xor
jp
inc
push
cmp
jp
inc
jle
jp
bound
movsb
cs
mov
mov
adc
cmpsb
inc
in
out
out
mov
mov
mov
and
repz
mov
movsl
lods
insl
mov
push
mov
cli
mov
lods
dec
fstpl
push
pop
js
fsubrp
lods
cmp
mov
inc
xor
xchg
js
pop
jno
or
inc
mov
mov
imul
hlt
mov
mov
out
imul
enter
mov
aas
inc
rcll
sarl
push
lret
sbb
xchg
mov
stos
sbbl
push
mull
push
lods
mov
push
ret
loope
test
es
enter
adcl
pop
or
lods
jp
test
cmpsl
sub
