jbe
ljmp
call
push
mov
call
push
mov
call
cmp
jne
push
push
push
lea
push
call
jmp
push
push
lea
push
push
call
mov
push
push
lea
push
call
mov
mov
mov
sub
mov
mov
call
test
jne
mov
mov
push
call
test
jne
push
lea
push
push
call
jmp
cmpl
jne
cmpl
jne
testl
jne
mov
test
jne
test
je
jmp
cmpl
je
jmp
nop
pop
cs
adc
lea
inc
lea
arpl
inc
adc
inc
adc
inc
adc
mov
and
add
adc
lea
lea
out
inc
adc
mov
shrb
inc
adc
nop
inc
adc
nop
inc
adc
xchg
inc
adc
xchg
inc
adc
xchg
inc
adc
xchg
inc
adc
inc
adc
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
add
add
sbb
sbb
sbb
sbb
sbb
sbb
add
sbb
sbb
sbb
pop
push
pop
sbb
sbb
sbb
or
sbb
or
sbb
sbb
or
add
sbb
sbb
sbb
sbb
add
add
sbb
sbb
sbb
sbb
add
sbb
add
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
adc
adc
adc
adc
sbb
sbb
sbb
sbb
push
push
pop
sbb
sbb
sbb
push
mov
push
push
push
mov
test
je
push
push
mov
call
mov
mov
lea
push
push
push
call
mov
test
js
cmpl
je
call
sub
cmp
jbe
pop
mov
pop
pop
leave
ret
mov
call
test
je
mov
jmp
push
mov
push
mov
push
pushl
xor
mov
lea
mov
mov
call
mov
cmp
je
mov
call
push
mov
lea
mov
call
mov
cmp
mov
je
mov
push
call
lea
call
lea
call
mov
pop
pop
pop
ret
push
mov
push
mov
mov
push
inc
push
push
call
test
je
mov
mov
push
lea
push
lea
lea
cmp
je
mov
mov
mov
test
je
mov
mov
test
mov
je
mov
push
call
addl
add
cmp
jne
mov
incl
mov
pop
add
pop
leave
ret
push
mov
cmpl
jne
push
pushl
push
pushl
call
add
mov
mov
mov
mov
pop
ret
push
lea
sub
mov
xor
mov
push
mov
push
mov
push
call
test
je
push
lea
lea
push
mov
xor
mov
mov
push
mov
movl
movl
mov
call
push
pop
cmp
jne
pushl
mov
call
test
pop
jne
push
lea
mov
call
mov
lea
push
push
call
pushl
mov
lea
mov
call
cmp
je
mov
cmp
jne
mov
mov
lea
push
push
add
push
movl
call
add
lea
call
lea
call
testb
je
mov
add
push
call
test
pop
je
pop
mov
pop
xor
xor
pop
call
add
leave
ret
push
mov
mov
mov
lods
sbb
mov
push
lea
cmp
ja
mov
pop
pop
ret
push
add
push
call
pop
pop
jmp
push
mov
mov
mov
push
inc
push
push
call
test
je
mov
mov
shl
lea
test
je
movl
andl
mov
incl
pop
ret
xor
pop
ret
push
xor
cmp
je
cmp
push
mov
jbe
push
xor
mov
cmp
sbb
and
jle
jb
pop
mov
push
call
add
mov
pop
mov
mov
movl
pop
ret
mov
mov
mov
cmp
mov
push
jne
call
add
jmp
push
call
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
call
pop
ret
push
mov
lea
call
mov
test
je
mov
push
call
testb
movl
je
push
call
pop
mov
pop
ret
mov
push
mov
movl
add
rolb
les
or
cmpl
cmpl
cmpl
jge
push
mov
test
je
push
call
test
pop
je
andl
mov
test
pop
jne
mov
mov
push
call
lea
call
lea
call
lea
call
lea
call
lea
pop
jmp
push
mov
and
sub
push
mov
push
push
mov
mov
mov
xor
cmp
mov
jne
mov
push
call
cmp
jne
cmp
je
mov
call
mov
test
je
mov
test
mov
jne
mov
mov
lea
push
pushl
mov
pushl
add
push
push
lea
push
lea
call
lea
push
pushl
mov
pushl
add
push
push
lea
push
lea
call
add
lea
call
cmp
je
mov
cmp
je
cmp
je
cmp
je
cmp
je
lea
mov
cmp
je
cmp
je
cmp
je
call
test
jne
lea
call
test
jne
mov
cmp
je
cmp
je
cmp
je
add
mov
cmp
je
cmp
je
mov
lea
push
pushl
lea
push
push
call
add
test
jne
add
add
test
pop
adc
jnp
add
test
aas
add
sti
mov
mov
je
mov
mov
test
jne
or
mov
mov
cmp
jne
mov
pop
pop
pop
mov
pop
ret
mov
cmp
jne
jmp
cmpl
je
cmpl
je
cmpl
je
push
call
mov
jmp
andl
mov
mov
mov
jmp
push
pushl
push
pop
call
jmp
cmp
je
pushl
mov
call
jmp
mov
mov
test
push
push
je
cmpl
je
pushl
lea
call
xor
pop
pop
ret
push
mov
mov
sub
cmpl
push
mov
jge
push
push
mov
test
mov
je
mov
call
test
jne
and
mov
test
jne
mov
lea
call
mov
lea
add
add
xor
mov
mov
cmp
mov
jne
mov
test
je
mov
pushl
lea
call
mov
cmp
jne
mov
push
mov
mov
mov
call
cmp
pop
je
decl
jne
mov
cmpl
jge
pushl
call
pop
mov
mov
test
pop
pop
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
pushl
call
pop
lea
call
lea
call
lea
call
pop
leave
ret
push
mov
mov
push
mov
call
test
jne
mov
mov
call
neg
sbb
inc
pop
ret
mov
mov
call
mov
mov
mov
call
sub
neg
sbb
inc
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
push
mov
cmp
pop
jne
push
mov
cmp
pop
jne
test
je
mov
cmp
jne
xor
inc
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
mov
xor
mov
push
push
push
xor
push
push
call
cmp
je
mov
lea
push
push
mov
movl
call
test
je
lea
mov
mov
mov
movl
movl
mov
lea
xor
cmp
je
xor
cmp
jne
add
add
jmp
lea
lea
mov
push
lea
mov
movl
call
mov
mov
add
xor
xor
lea
mov
cmp
je
cmp
je
add
add
cmp
jb
jmp
mov
jmp
mov
lea
push
push
call
add
test
jne
mov
lea
push
push
call
test
je
xor
mov
test
jne
test
jne
cmp
je
mov
mov
xor
cmp
je
add
add
cmp
jb
push
call
mov
pop
pop
pop
xor
call
mov
pop
ret
cmp
jae
shl
mov
mov
mov
add
mov
mov
push
push
lea
push
call
mov
add
mov
jmp
mov
jmp
mov
mov
test
mov
mov
je
mov
push
call
xor
ret
int3
int3
int3
int3
int3
int3
mov
test
push
push
je
mov
mov
mov
cmp
je
mov
add
test
jne
mov
pop
movl
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
pop
mov
xor
pop
ret
push
mov
mov
test
push
mov
je
and
jne
pop
pop
ret
mov
jmp
push
mov
movl
movl
cmpl
jne
lea
movl
call
testb
je
push
call
pop
mov
pop
ret
push
lea
push
call
pushl
call
pop
pop
jmp
push
mov
push
mov
mov
cmp
je
cmp
je
push
push
mov
push
push
pushl
call
mov
test
jne
pop
pop
pop
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
movl
add
jmp
mov
test
je
lea
push
push
mov
call
test
je
pushl
mov
mov
call
test
je
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
push
push
call
jmp
xor
jmp
outsb
and
push
push
mov
mov
test
push
je
mov
test
je
cmpl
je
cmpl
je
cmp
mov
mov
jne
pushl
pushl
push
push
call
mov
test
jne
push
call
mov
test
jne
mov
mov
lea
push
push
call
xor
cmp
je
push
lea
mov
call
mov
mov
lea
push
push
call
test
jne
mov
test
je
pushl
mov
mov
push
push
call
lea
mov
call
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
push
push
mov
xor
lea
xor
cmp
push
mov
mov
movl
movl
mov
mov
jg
mov
sub
cmp
jg
cmp
jne
cmp
jne
cmp
jne
mov
test
jne
test
jne
mov
pop
pop
pop
pop
xor
call
add
ret
push
mov
push
mov
mov
cmp
je
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
jmp
mov
cmp
jne
mov
cmp
jne
cwtl
add
clc
mov
jne
mov
movl
xor
pop
pop
ret
push
mov
mov
call
test
jne
mov
mov
call
test
mov
jne
push
mov
test
je
cmpb
jne
mov
mov
call
test
jne
xor
pop
test
jne
mov
mov
mov
pop
jmp
mov
push
call
xor
jmp
add
jmp
mov
jmp
push
mov
sub
andl
push
push
push
lea
call
lea
push
mov
lea
call
mov
test
pop
js
mov
test
je
mov
mov
lea
push
push
call
cmpw
je
cmpb
jne
pushl
andl
mov
lea
call
mov
test
je
mov
push
push
call
mov
lea
call
lea
call
mov
pop
pop
leave
ret
push
mov
lea
call
lea
call
lea
call
lea
call
call
testb
je
push
call
pop
mov
pop
ret
push
mov
cmpl
jne
testb
jne
pushl
mov
pushl
call
pop
ret
push
push
lea
mov
call
testb
je
mov
mov
mov
test
je
cmpl
je
mov
push
call
call
andl
lea
xor
call
pop
pop
jmp
mov
test
jne
mov
test
je
jmp
xor
jmp
push
mov
lea
call
lea
xor
call
lea
xor
call
lea
xor
call
lea
xor
call
xor
pop
ret
push
mov
call
testb
je
push
call
pop
mov
pop
ret
mov
decl
mov
jne
xor
inc
mov
mov
push
call
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
push
push
je
mov
mov
mov
lea
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
pop
mov
xor
pop
ret
mov
add
test
jne
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
cmpl
push
mov
movl
jne
push
push
call
add
test
je
mov
call
test
je
mov
lea
push
push
push
mov
call
mov
test
js
mov
mov
mov
push
push
push
mov
call
mov
mov
mov
mov
push
call
mov
pop
pop
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
movl
movl
movl
movl
movl
push
push
xor
mov
mov
mov
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
and
or
mov
mov
mov
or
lea
mov
mov
mov
mov
add
add
addb
and
add
add
push
add
xchg
add
add
inc
add
mov
add
sbb
add
addb
add
add
add
push
add
mov
add
add
add
add
add
add
or
push
movl
mov
mov
mov
mov
call
mov
mov
movb
mov
mov
movb
mov
mov
mov
mov
mov
mov
inc
or
pop
jo
pop
je
pop
js
pop
jl
sahf
addb
add
sub
popf
adc
and
movl
mov
mov
mov
mov
call
push
mov
mov
movl
call
add
pop
pop
mov
mov
mov
mov
pop
add
ret
int3
int3
push
push
push
push
mov
mov
or
test
je
mov
mov
not
add
and
mov
test
jne
mov
movsbw
movzwl
mov
lea
cmp
jae
movzwl
mov
and
test
je
add
cmp
jb
pop
pop
pop
or
pop
ret
movsbw
movzwl
test
je
nop
cmp
je
movsbw
add
movzwl
test
jne
mov
jmp
sub
pop
pop
pop
sar
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
mov
cmpl
push
push
mov
mov
jne
push
mov
cmp
je
cmp
je
movb
cmpb
jne
mov
cmp
ja
test
ja
cmp
jne
cmpl
jne
push
push
call
pop
mov
pop
pop
pop
xor
xor
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
mov
test
push
push
mov
jg
xor
mov
add
cmpb
mov
jne
cmpl
mov
jne
test
je
testb
jne
movl
mov
push
push
lea
push
push
push
xor
call
mov
test
je
testb
jne
test
je
testb
jne
pop
mov
pop
pop
xor
call
add
ret
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
mov
push
push
mov
push
push
lea
lea
xor
push
mov
mov
movl
movl
mov
mov
call
mov
test
jle
testb
push
mov
mov
jne
cmp
jne
mov
test
jg
cmp
jne
cmp
jg
cmp
jne
test
jle
test
jl
cmp
jge
mov
mov
mov
mov
sub
push
lea
push
push
call
add
cmp
jne
mov
sub
push
lea
push
mov
call
movb
mov
test
jne
test
jne
pop
mov
pop
pop
pop
xor
call
add
ret
push
mov
sub
lds
lds
pop
or
mov
mov
lea
push
push
xor
push
mov
mov
call
cmp
movl
je
lea
lea
push
mov
mov
or
jne
movl
movl
movb
call
mov
mov
lea
lea
call
test
jne
mov
push
lea
call
test
je
test
je
incl
mov
test
mov
jne
mov
test
jne
testb
je
mov
test
je
push
mov
call
mov
test
js
mov
andl
lea
push
push
push
call
cmpl
mov
je
mov
add
incl
lea
push
mov
call
xor
inc
mov
decl
je
mov
mov
push
call
orb
mov
push
call
mov
test
jne
testb
je
mov
add
push
call
test
pop
je
xor
inc
mov
pop
pop
xor
pop
call
leave
ret
movl
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
push
add
push
push
call
test
je
mov
mov
lea
add
lea
cmp
je
push
push
mov
test
je
mov
mov
add
add
cmp
jne
pop
pop
mov
addl
mov
add
ret
push
mov
push
push
mov
push
lea
xor
cmp
jne
cmp
je
mov
mov
call
cmp
je
push
call
mov
push
lea
mov
call
mov
lea
push
push
call
pushl
lea
mov
add
call
mov
cmp
je
mov
add
movb
mov
mov
call
cmp
je
lea
push
lea
call
lea
call
pop
pop
xor
pop
pop
ret
mov
call
jmp
push
mov
and
sub
andl
push
mov
mov
push
lea
push
push
push
call
cmpl
je
mov
mov
call
test
je
mov
and
mov
je
push
push
call
test
pop
pop
jne
mov
mov
xor
test
jne
mov
pop
pop
mov
pop
ret
push
mov
xor
inc
movl
movl
mov
andl
test
push
mov
mov
mov
je
mov
shl
push
push
call
test
pop
pop
mov
je
test
jne
test
jbe
mov
test
je
mov
push
push
push
call
test
js
mov
incl
test
je
xor
mov
mov
mov
pop
pop
ret
push
mov
push
push
call
test
pop
je
push
lea
push
pushl
mov
mov
call
pop
test
je
testl
jne
pushl
mov
push
push
call
leave
ret
xor
jmp
push
mov
push
push
cmpl
push
push
jne
pop
pop
leave
ret
mov
mov
mov
cmp
je
push
push
mov
mov
mov
push
push
mov
call
pushl
lea
push
call
mov
test
pop
pop
mov
jne
mov
mov
test
je
and
mov
lea
call
cmpl
jne
jmp
andl
jmp
mov
mov
test
je
push
lea
mov
test
je
mov
push
push
call
xor
mov
call
pop
xor
ret
mov
pushl
mov
lea
push
add
push
call
add
ret
push
mov
sub
mov
xor
mov
push
push
push
xor
mov
push
mov
call
test
je
mov
testw
jne
cmp
jne
cmp
jne
testw
jne
mov
push
push
call
cmp
pop
pop
push
pushl
mov
push
jne
or
call
mov
pop
pop
xor
xor
pop
call
leave
ret
push
mov
decl
mov
je
pop
ret
movl
call
push
call
pop
xor
jmp
push
mov
lea
mov
or
lock
dec
je
pop
ret
movl
call
push
call
pop
xor
jmp
push
mov
mov
sub
push
xor
cmp
push
je
push
mov
call
cmp
movl
movl
movl
movl
movl
lea
mov
mov
mov
mov
mov
mov
mov
je
mov
mov
mov
cmp
je
cmp
je
mov
xor
mov
call
mov
cmp
je
mov
lea
push
call
mov
cmp
mov
je
push
lea
lea
movl
mov
mov
mov
call
cmp
je
pushl
mov
mov
call
lea
call
lea
call
pop
mov
pop
leave
ret
mov
mov
jmp
mov
push
push
xor
inc
movl
mov
xor
cmp
mov
mov
je
mov
push
call
push
mov
mov
lea
mov
call
add
and
repz
mov
fsts
lea
fstps
mov
mov
mov
mov
mov
mov
mov
mov
call
fld1
mov
mov
mov
lea
mov
mov
mov
mov
lea
orl
orl
fstps
fldz
push
fstps
lea
mov
push
movb
movb
push
lea
mov
call
fldz
push
fstps
push
push
lea
call
fldz
push
fstps
push
push
lea
call
fldz
push
fstps
push
push
lea
call
fldz
push
fstps
push
push
lea
call
fldz
push
fstps
push
push
lea
call
fldz
push
fstps
push
push
lea
call
mov
add
mov
orl
mov
orl
and
or
cmp
movl
movl
movl
mov
mov
movb
pop
jne
mov
mov
mov
cmp
jne
andl
mov
orl
pop
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
push
push
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
push
push
mov
mov
mov
call
add
mov
mov
push
push
push
mov
call
test
je
cmp
je
mov
mov
mov
movsbw
sub
mov
add
add
cmp
jne
mov
flds
pop
fstps
pop
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
ret
push
mov
sub
push
push
mov
lea
mov
mov
call
andl
push
lea
call
lea
push
push
call
pushl
andl
mov
lea
call
mov
test
je
mov
test
je
mov
push
push
call
lea
push
call
mov
mov
call
xor
mov
call
lea
call
lea
call
lea
call
pop
pop
leave
ret
push
mov
cmpl
je
mov
mov
test
je
andl
push
push
mov
lea
call
mov
test
je
pushl
mov
push
push
call
mov
lea
call
mov
pop
pop
ret
mov
test
je
mov
mov
test
je
mov
call
test
jl
movsbl
mov
test
mov
je
mov
push
call
xor
ret
xor
jmp
mov
jmp
push
mov
sub
mov
push
xor
push
mov
lea
mov
call
cmp
jne
mov
mov
push
push
call
lea
call
pop
leave
ret
mov
cmp
je
mov
cmp
je
lea
lea
mov
push
push
call
mov
lea
mov
mov
call
mov
mov
xor
cmp
push
sete
push
push
call
or
inc
add
je
mov
mov
mov
mov
cmp
je
lea
call
jmp
push
mov
and
sub
mov
xor
mov
mov
push
mov
push
push
mov
lea
mov
mov
push
mov
mov
call
mov
mov
call
lea
mov
mov
push
mov
call
mov
mov
call
xor
cmp
mov
jge
mov
cmp
jl
mov
dec
cmpl
mov
jge
mov
cmp
jl
xor
cmp
lea
mov
jg
test
jle
xor
mov
mov
mov
mov
test
mov
jge
or
cmp
jne
push
call
test
pop
je
mov
mov
mov
mov
push
mov
call
test
je
mov
mov
mov
push
mov
call
test
je
mov
mov
mov
mov
andl
mov
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
inc
cmp
mov
jl
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
pop
pop
mov
pop
xor
call
mov
pop
ret
andl
mov
mov
mov
decl
jne
mov
call
push
call
pop
incl
mov
cmp
jle
jmp
push
mov
mov
mov
sub
push
push
call
xor
cmp
jne
add
push
pop
call
cmp
je
mov
cmp
mov
mov
movl
mov
mov
mov
mov
mov
je
mov
mov
mov
mov
pushl
mov
pushl
lea
push
call
mov
mov
mov
mov
movl
mov
mov
mov
call
test
js
mov
push
pop
call
cmp
je
mov
cmp
mov
mov
movl
mov
mov
mov
mov
mov
je
mov
mov
mov
mov
pushl
mov
pushl
lea
push
call
mov
mov
mov
mov
movl
mov
mov
mov
call
pop
pop
leave
ret
xor
jmp
mov
test
jne
cmp
je
test
jne
cmp
je
mov
mov
push
push
call
decl
je
andl
ret
push
call
andl
pop
ret
push
mov
mov
mov
cmp
mov
push
je
cmp
je
cmp
je
andl
lea
push
push
push
call
mov
mov
mov
pop
pop
ret
mov
cmp
jne
mov
cmp
add
xor
jne
test
je
lea
test
mov
je
mov
push
call
xor
jmp
xor
jmp
mov
test
je
mov
rol
xor
ret
xor
ret
push
mov
push
push
xor
push
mov
call
cmp
pop
je
movl
xor
inc
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
cmp
je
pushl
pushl
pushl
push
call
test
push
js
mov
mov
call
xor
pop
pop
pop
ret
xor
jmp
push
mov
and
sub
push
mov
cmpb
push
je
mov
andl
andl
mov
lea
push
lea
push
lea
push
push
call
add
test
js
pushl
mov
pushl
mov
pushl
pushl
call
mov
lea
call
mov
pop
pop
mov
pop
ret
int3
int3
int3
int3
mov
test
mov
push
mov
push
mov
jne
test
jne
mov
cmp
ja
mov
sub
cmp
lea
pop
mov
mov
pop
jb
lea
mov
mov
movw
ret
lea
mov
mov
movw
ret
mov
jmp
push
mov
sub
push
push
mov
mov
xor
push
lea
lea
movl
mov
mov
mov
call
cmp
je
pushl
mov
lea
mov
mov
call
push
lea
call
lea
push
pushl
mov
call
test
js
cmp
mov
mov
jne
push
push
call
mov
mov
push
push
push
pushl
push
call
mov
lea
call
lea
call
lea
call
pop
mov
pop
leave
ret
push
jmp
push
mov
sub
mov
andl
andl
push
push
mov
mov
lea
push
mov
call
mov
call
test
js
mov
mov
test
push
jbe
andl
mov
lea
mov
mov
mov
movl
jmp
addl
mov
mov
andl
mov
mov
mov
lea
add
call
push
pushl
mov
call
test
jne
mov
mov
call
test
jne
mov
test
mov
mov
je
incl
mov
andl
test
mov
je
mov
call
mov
mov
call
cmpl
ja
incl
mov
mov
xor
test
jne
push
push
lea
call
mov
call
test
jne
mov
mov
mov
xor
test
jne
test
je
mov
call
mov
call
mov
test
jne
incl
mov
cmp
jb
mov
mov
mov
incl
test
je
call
xor
pop
pop
pop
leave
ret
mov
jmp
mov
mov
push
call
ret
mov
call
mov
call
ret
movzbl
sub
jne
add
ret
dec
jne
add
ret
mov
and
cmp
movl
jne
push
push
mov
xor
cmp
jne
mov
cmp
jne
push
push
push
lea
mov
mov
push
push
call
mov
cmp
jne
lea
mov
cmp
jne
lea
mov
cmp
jne
lea
mov
cmp
pop
jne
lea
call
lea
call
lea
call
pop
lea
pop
jmp
push
xor
mov
sbb
and
mov
cmp
je
jmp
push
mov
mov
push
push
mov
xor
push
lea
call
cmp
je
mov
cmpl
push
mov
je
cmpl
je
cmpl
jne
mov
push
push
push
call
add
test
jne
mov
jmp
mov
push
push
push
call
add
test
jne
add
push
add
push
push
call
test
je
mov
pop
pop
pop
pop
ret
mov
push
push
push
call
add
test
jne
add
push
add
jmp
xor
jmp
int3
int3
push
push
mov
call
xor
add
cmp
je
mov
mov
movl
mov
lea
mov
mov
mov
mov
and
mov
or
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
pop
ret
xor
pop
ret
push
mov
push
mov
test
jne
and
testb
je
mov
mov
dec
neg
sbb
and
jne
mov
mov
mov
lea
push
push
push
call
mov
leave
ret
xor
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
mov
mov
push
add
push
push
call
test
je
mov
mov
push
lea
lea
cmp
je
push
mov
mov
lea
test
je
mov
mov
mov
test
mov
je
mov
push
mov
call
add
add
cmp
jne
mov
pop
mov
mov
add
mov
pop
pop
lea
pop
ret
push
mov
mov
mov
sub
push
push
push
push
call
mov
lea
mov
call
mov
dec
dec
neg
sbb
lea
inc
call
cmp
jne
movl
movzbl
mov
xor
dec
mov
je
dec
je
sub
mov
add
add
test
mov
je
lea
mov
call
cmp
jne
movl
lea
push
pushl
pushl
pushl
pushl
pushl
call
add
cmpl
mov
je
lea
mov
call
cmp
jne
movl
add
mov
call
cmp
je
cmp
je
cmpl
jne
mov
call
test
jne
mov
call
test
je
pushl
mov
call
pop
test
jl
sub
js
mov
mov
mov
call
cmp
jne
mov
mov
mov
push
add
push
push
push
pushl
movl
pushl
call
add
mov
add
mov
call
cmp
jne
mov
movl
call
test
je
pushl
call
pop
mov
test
jl
xor
cmp
je
cmp
je
cmp
je
mov
cmp
je
mov
cmp
jg
mov
cmp
jg
test
jle
mov
cltd
mov
mov
pushl
mov
pushl
cltd
mov
mov
mov
cltd
push
push
call
pushl
pushl
push
push
call
cmp
jl
pushl
mov
mov
pushl
cltd
push
push
call
pushl
pushl
push
push
call
cmp
jg
mov
test
jle
mov
cltd
mov
mov
pushl
mov
pushl
cltd
mov
mov
mov
cltd
push
push
call
add
pushl
push
push
call
cmp
jl
pushl
mov
mov
pushl
cltd
push
push
call
pushl
pushl
push
push
call
mov
cmp
jg
cmp
jg
cmp
jl
cmp
jg
cmp
jl
mov
mov
pop
mov
pop
pop
leave
ret
cmp
je
cmpl
jne
lea
call
test
jne
andl
jmp
push
push
pushl
pushl
pushl
pushl
call
add
mov
jmp
lea
call
test
je
pushl
lea
call
pop
test
jl
sub
js
mov
jmp
cmp
jne
mov
cmp
jl
cmp
jg
mov
cmp
jl
cmp
jle
jmp
cmp
je
jmp
mov
mov
jmp
mov
mov
jmp
xor
jmp
push
mov
and
sub
push
push
push
mov
or
cmp
jne
pop
pop
pop
mov
pop
ret
push
mov
push
push
test
je
mov
push
call
test
je
mov
push
mov
push
mov
call
test
js
mov
mov
test
push
push
jbe
andl
mov
mov
movl
mov
mov
mov
mov
test
je
mov
mov
cmp
je
lea
mov
test
je
orl
mov
mov
push
pushl
pushl
pushl
mov
call
test
jne
incl
mov
addl
cmp
jb
xor
pop
pop
pop
leave
ret
int3
push
push
push
mov
mov
test
je
and
test
je
mov
xor
mov
lea
mov
cmp
je
mov
test
je
and
mov
mov
jne
mov
test
jne
mov
pop
pop
pop
ret
cmpl
jne
test
je
cmp
je
mov
test
je
push
lea
lea
push
mov
mov
call
cmp
je
push
push
push
push
mov
call
pop
mov
lea
mov
push
add
mov
call
pop
pop
pop
ret
lea
push
add
push
mov
call
movl
pop
pop
pop
ret
push
mov
mov
mov
lea
push
push
call
mov
pop
ret
mov
mov
test
jne
call
mov
mov
xor
ret
push
mov
mov
cmpl
je
push
push
pushl
pushl
call
pop
ret
push
pushl
mov
call
pop
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
push
push
mov
mov
push
xor
mov
lea
push
mov
push
lea
mov
mov
mov
lea
push
lea
push
push
push
xor
movl
mov
movl
call
add
test
je
mov
mov
push
push
push
mov
mov
push
push
lea
push
mov
call
test
mov
je
lea
push
push
push
call
add
test
je
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
push
push
call
test
js
lea
call
mov
mov
mov
mov
test
jne
mov
pop
pop
pop
mov
pop
ret
pushl
push
call
ret
mov
mov
test
je
mov
mov
mov
push
call
xor
ret
mov
cmp
jne
cmp
ja
movzbl
jmp
flds
flds
fucompp
fnstsw
test
jp
xor
inc
ret
xor
ret
mov
sub
neg
sbb
inc
ret
nop
outsb
popa
add
adc
add
adc
adc
adc
adc
adc
adc
adc
add
add
add
add
add
add
or
push
and
add
call
xor
ret
push
mov
sub
push
push
xor
push
lea
lea
movl
movl
mov
mov
call
push
call
cmp
pop
je
mov
mov
mov
mov
movb
mov
cmp
mov
jne
mov
lea
call
mov
lea
call
mov
lea
call
mov
lea
mov
call
mov
lea
push
call
mov
lea
push
push
call
mov
mov
lea
push
push
call
mov
xor
cmp
je
incl
mov
cmp
mov
jne
mov
mov
mov
mov
call
cmp
mov
mov
je
pop
xor
pop
leave
ret
push
push
lea
push
mov
call
cmp
je
push
call
cmp
pop
je
movl
mov
lea
call
mov
mov
push
pushl
push
push
call
mov
mov
push
pushl
push
push
call
mov
mov
push
pushl
push
push
call
mov
call
lea
movl
call
lea
call
jmp
xor
jmp
push
mov
push
mov
call
test
je
mov
push
push
xor
push
mov
lea
mov
call
mov
cmp
je
push
lea
mov
call
mov
lea
push
push
call
cmp
je
push
call
cmp
pop
je
mov
mov
cmp
mov
movl
mov
je
mov
push
call
pushl
lea
push
movl
mov
movl
call
push
call
pop
lea
call
lea
call
pop
pop
xor
leave
ret
xor
jmp
push
mov
push
push
xor
push
lea
mov
mov
call
mov
lea
push
push
call
test
js
pushl
mov
pushl
mov
push
call
test
js
pushl
mov
pushl
mov
push
call
test
js
mov
mov
mov
mov
lea
call
mov
pop
leave
ret
mov
jmp
push
mov
pushl
mov
xor
cmp
setne
add
mov
lea
push
pushl
pushl
push
call
pop
ret
push
mov
test
je
mov
mov
add
test
je
mov
and
cmp
jne
test
je
mov
push
push
push
call
pop
ret
mov
call
jmp
andl
xor
jmp
push
mov
and
sub
push
mov
test
push
je
mov
xor
cmp
je
push
lea
movl
mov
call
mov
lea
push
push
call
test
js
mov
lea
push
push
call
test
js
mov
lea
call
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
push
call
test
js
mov
call
test
js
pushl
call
xor
lea
call
lea
call
mov
pop
pop
mov
pop
ret
mov
jmp
mov
jmp
push
mov
sub
push
mov
mov
push
push
xor
push
lea
lea
movl
mov
mov
mov
call
mov
cmp
je
push
lea
mov
call
mov
lea
push
push
call
test
js
mov
lea
push
call
mov
lea
push
push
call
test
js
mov
mov
add
push
push
call
lea
call
xor
lea
call
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
mov
mov
mov
sub
push
push
mov
test
push
je
mov
test
je
mov
mov
push
push
push
mov
push
mov
call
mov
mov
mov
add
push
push
call
mov
mov
add
test
mov
je
add
mov
test
mov
je
call
mov
mov
mov
test
mov
mov
mov
lea
mov
mov
je
mov
mov
mov
mov
mov
mov
andb
mov
mov
mov
mov
call
mov
mov
call
mov
mov
call
mov
mov
mov
mov
test
je
lea
movl
call
mov
mov
mov
add
push
push
push
call
mov
add
mov
mov
cmp
jge
cmpl
jne
cmp
jge
mov
lea
call
mov
mov
mov
jmp
push
call
mov
add
test
jne
mov
call
mov
cmpl
je
mov
call
mov
push
call
mov
call
mov
call
mov
add
call
mov
mov
mov
lea
lea
cmp
jne
push
push
push
lea
push
call
push
push
add
push
movl
call
add
xor
pop
pop
pop
mov
pop
ret
push
mov
lea
mov
or
lock
dec
je
pop
ret
movl
call
push
call
pop
xor
jmp
push
mov
sub
push
push
mov
neg
sbb
xor
and
cmp
push
mov
mov
mov
mov
jne
mov
push
lea
mov
call
mov
lea
push
mov
push
push
pushl
push
pushl
pushl
push
call
test
js
mov
pushl
mov
push
call
mov
mov
mov
mov
push
call
lea
call
lea
call
pop
pop
mov
pop
leave
ret
mov
push
lea
mov
call
mov
mov
lea
push
push
call
mov
jmp
push
mov
push
mov
call
mov
xor
cmp
jne
cmp
aas
sti
inc
add
cmp
je
mov
std
adc
pusha
xor
push
inc
call
mov
pop
pop
ret
pushl
lea
call
jmp
push
mov
push
push
mov
test
je
mov
test
je
andl
lea
push
push
push
mov
call
mov
add
leave
ret
xor
jmp
push
mov
and
sub
push
mov
push
mov
testb
push
jne
call
mov
andl
mov
mov
mov
mov
mov
call
test
je
add
lea
movsl
movsl
movsl
lea
mov
mov
push
mov
movsl
call
mov
add
mov
add
mov
mov
add
add
mov
add
sub
cmpl
mov
mov
mov
jne
cmpl
jl
mov
pushl
lea
call
mov
mov
andl
andl
mov
testb
mov
mov
jne
mov
testw
jne
mov
andl
mov
push
push
push
pushl
mov
pushl
lea
lea
call
mov
mov
and
jne
lea
mov
andw
test
jne
mov
mov
call
mov
and
or
jne
mov
add
lea
movsl
movsl
movsl
movsl
mov
xor
lea
mov
call
mov
and
xor
or
movl
je
mov
push
push
push
pushl
lea
pushl
mov
push
lea
push
pushl
push
call
mov
test
jne
mov
and
xor
or
je
lea
push
mov
call
push
mov
call
push
call
pop
mov
and
xor
or
jne
test
jne
pushl
mov
pushl
pusha
and
add
ds
rolb
add
jg
inc
sub
add
je
and
and
lea
push
lea
push
pushl
call
pushl
lea
push
lea
push
push
call
inc
add
add
add
add
cmp
je
mov
add
add
mov
cmp
je
mov
add
add
mov
mov
mov
mov
testb
jne
mov
mov
and
xor
or
je
mov
mov
mov
mov
mov
cmp
jne
mov
andl
xor
pop
pop
pop
mov
pop
ret
mov
jmp
mov
mov
call
mov
mov
jmp
push
mov
and
sub
mov
xor
mov
add
add
or
push
mov
mov
push
jne
mov
xor
mov
xor
inc
lea
mov
mov
mov
mov
mov
mov
mov
mov
call
lea
push
lea
movl
movl
mov
sub
inc
add
lea
mov
xor
inc
and
push
hlt
inc
add
mov
mov
movl
movl
mov
call
pop
pop
lea
push
lea
call
testb
jne
testb
jne
mov
mov
lea
push
push
push
mov
mov
mov
call
mov
test
jne
cmp
jne
push
call
cmp
pop
je
mov
mov
add
cmp
mov
movl
mov
mov
je
mov
push
call
xor
mov
lea
mov
push
lea
call
cmp
je
mov
push
call
mov
call
cmp
je
mov
push
call
testb
mov
je
mov
add
push
call
test
pop
je
testb
je
mov
add
push
call
test
pop
je
lea
call
xor
mov
pop
pop
pop
xor
call
mov
pop
ret
push
mov
push
mov
call
cmpl
je
call
test
je
mov
push
mov
call
pop
ret
push
mov
sub
mov
push
push
mov
mov
push
lea
lea
push
mov
movl
add
push
add
ret
je
mov
push
mov
call
mov
cmp
mov
je
pushl
mov
add
mov
call
push
lea
mov
call
mov
mov
lea
push
pushl
push
call
mov
test
jne
push
lea
mov
call
lea
push
push
pushl
add
pushl
mov
push
call
test
jne
cmp
je
pushl
mov
pushl
pushl
pushl
push
call
lea
call
lea
call
lea
call
lea
call
pop
pop
mov
pop
leave
ret
mov
push
pushl
pushl
pushl
push
call
jmp
push
mov
mov
sub
push
xor
cmp
push
je
mov
cmp
je
push
mov
lea
mov
call
mov
cmp
je
mov
lea
push
push
call
cmp
jne
push
lea
mov
call
mov
lea
push
push
call
cmp
je
mov
cmp
je
push
mov
add
mov
call
mov
call
cmp
je
testb
mov
je
cmp
je
cmp
je
lea
call
lea
call
lea
call
pop
pop
leave
ret
cmp
je
jmp
push
mov
sub
push
push
push
mov
call
xor
cmp
je
cmp
je
push
pushl
push
push
lea
push
call
mov
add
push
mov
call
test
ja
test
je
mov
push
call
xor
cmp
jne
movb
mov
cmp
jne
cmp
je
mov
push
mov
call
cmp
jne
mov
cmp
je
cmpb
je
mov
push
mov
lea
mov
call
pushl
lea
push
pushl
mov
movl
movl
movl
call
testb
jne
testb
jne
mov
lea
push
push
mov
movb
call
mov
cmp
jne
lea
call
pop
pop
pop
leave
ret
mov
movl
cmpb
jne
lea
call
cmp
jae
mov
mov
mov
andl
push
mov
lea
call
mov
test
je
mov
push
call
lea
call
addl
inc
cmp
jb
jmp
mov
push
call
jmp
xor
jmp
mov
test
je
mov
and
cmp
jne
ret
mov
jmp
push
mov
sub
push
pushl
mov
pushl
pushl
push
call
test
js
push
push
mov
call
xor
cmp
pop
je
movl
mov
mov
push
lea
mov
mov
call
cmp
je
pushl
mov
lea
mov
call
cmp
je
lea
push
xor
mov
mov
mov
call
mov
pushl
mov
push
call
lea
push
call
add
call
cmp
mov
mov
mov
je
mov
push
lea
mov
call
mov
lea
push
push
push
call
pushl
mov
add
mov
call
mov
cmp
je
mov
push
push
call
mov
cmp
je
push
lea
mov
call
mov
lea
push
push
call
mov
cmp
je
movzwl
mov
push
push
call
lea
call
lea
call
lea
call
mov
lea
call
mov
pop
pop
pop
leave
ret
push
push
call
jmp
push
mov
sub
push
push
mov
push
lea
mov
call
test
je
lea
mov
cmp
je
testb
jne
cmpl
je
mov
mov
mov
add
mov
mov
add
mov
mov
xor
inc
pop
pop
pop
leave
ret
mov
mov
call
cmp
je
cmp
je
cmp
je
xor
jmp
mov
push
mov
call
mov
lea
push
mov
call
push
call
test
pop
pop
je
lea
push
mov
call
mov
mov
add
mov
mov
add
mov
mov
add
mov
lea
mov
movsl
movsl
movsl
jmp
mov
call
test
je
mov
jmp
xor
inc
ret
push
mov
mov
test
push
push
je
cmpl
je
mov
push
pushl
lea
mov
mov
mov
call
mov
lea
push
mov
call
mov
push
push
call
test
pop
js
mov
test
je
mov
mov
push
push
call
test
je
mov
mov
xor
pop
pop
pop
ret
mov
test
jne
push
push
push
mov
or
lea
mov
mov
push
mov
call
movzbl
movb
mov
test
je
mov
shr
test
jbe
xor
mov
test
je
mov
and
lea
mov
mov
call
inc
cmp
jb
lea
xor
mov
call
push
lea
mov
lea
push
push
call
push
push
push
call
lea
push
push
movb
call
add
pop
pop
pop
pop
ret
xor
jmp
push
mov
mov
test
je
mov
jmp
mov
test
jne
mov
test
je
mov
pop
ret
mov
test
je
mov
test
jne
cmp
je
mov
mov
call
test
jne
jmp
xor
jmp
xor
jmp
push
mov
and
sub
push
xor
inc
push
mov
xor
push
mov
mov
mov
mov
mov
lea
push
mov
mov
mov
mov
push
mov
mov
mov
mov
mov
mov
mov
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
test
jne
push
lea
call
test
jne
call
cmp
mov
je
mov
push
mov
call
mov
cmp
mov
jne
push
call
cmp
pop
je
lea
push
lea
push
pushl
lea
push
lea
push
mov
call
mov
cmp
mov
je
mov
push
push
push
call
mov
add
mov
add
fwait
pop
fldcw
add
xlat
add
add
add
add
addr16
add
mov
addr16
scas
jns
into
add
pop
add
insb
xchg
add
push
mov
lret
insb
stos
push
mov
add
push
push
push
push
push
push
push
push
push
push
push
call
jmp
add
xchg
rolb
movb
add
incb
xchg
add
add
mov
jecxz
ja
add
movsb
add
mov
cwtl
push
add
mov
add
add
add
lea
add
mov
test
in
fdivr
lcall
inc
in
push
push
lea
push
push
push
push
push
lea
push
call
lcall
add
xchg
add
fs
pop
add
add
fisubl
add
repnz
jns
mov
mov
xlat
jp
pusha
mov
push
pop
fidivrl
push
hlt
add
repnz
call
add
in
loopne
push
push
lea
push
push
push
push
push
push
push
push
push
call
lock
filds
add
into
push
cli
push
xorl
lock
push
xchg
scas
add
pop
sahf
mov
add
add
add
add
jecxz
in
fcomps
push
push
push
lea
push
push
push
push
push
push
push
call
enter
fwait
lods
pop
mov
add
cltd
popa
out
add
fadds
leave
add
popa
xchg
out
xchg
les
jl
push
add
fcomps
push
push
push
lea
push
push
call
lds
add
in
pop
jo
add
stos
jle
sti
add
popl
adcb
add
cli
add
lods
fs
xchg
popf
loop
mov
enter
mov
add
add
add
push
mov
loope
add
add
testb
fs
add
jl
ja
lea
push
push
push
call
in
add
add
xorl
add
xchg
push
cmpsb
push
add
imul
add
add
add
push
stos
loop
mov
cmpsl
mov
add
add
add
sahf
lahf
pop
jge
mov
cmpsb
faddl
pop
add
jp
sub
pop
call
push
push
push
call
jmp
add
int3
add
jp
jns
mov
add
hlt
mov
popa
loopne
cmpsb
add
enter
jmp
add
add
stos
lds
lret
add
add
xor
lea
push
lea
push
call
xchg
add
add
add
add
mov
add
lods
in
jb
mov
add
test
je
mov
mov
add
push
mov
test
loopne
outsl
mov
add
add
add
add
popa
add
cwtl
add
lcall
cltd
add
push
push
push
push
push
call
jmp
add
test
add
jno
jmp
lods
add
add
out
add
add
pop
mov
add
mov
out
in
in
pop
jmp
push
push
push
push
lea
push
push
push
call
out
mov
add
push
push
loope
mov
loope
add
iret
fadds
fstl
ljmp
add
jb
add
pop
out
imul
jle
mov
test
pop
add
fiaddl
sub
pop
ret
push
lea
push
call
jne
mov
mov
add
int3
mov
add
add
add
add
popl
js
add
loop
add
cmc
add
add
add
lcall
add
add
mov
add
out
into
add
lcall
inc
hlt
push
lea
push
push
push
push
lea
push
push
call
add
add
add
mov
push
add
add
add
in
mov
add
in
loop
sub
pop
mov
add
push
push
push
push
lea
push
lea
push
push
call
lret
add
ret
add
jae
xchg
add
arpl
xlat
ljmp
imul
lds
add
add
jnp
jnp
add
pop
xchg
xchg
add
cld
mov
add
out
jo
add
add
xchg
jmp
add
in
in
lcall
ret
add
add
push
push
push
call
add
int3
add
add
add
cli
pop
add
jl
jecxz
add
testb
stos
cltd
add
cmpsl
xlat
add
lock
gs
add
pop
in
lea
add
add
mov
add
lcall
ret
imul
xor
push
push
not
sub
sub
push
or
not
add
inc
rol
sub
shr
dec
shl
sub
pop
add
rol
pop
push
lea
push
lea
push
push
lea
push
call
jns
add
cld
je
add
pop
imul
push
sbbl
popf
add
add
jl
ljmp
add
je
add
lcall
jne
push
push
push
push
push
lea
push
push
push
push
lea
push
call
add
repnz
add
flds
testl
add
push
loopne
imul
mov
in
addb
cltd
loop
mov
cli
add
js
loop
mov
lahf
jecxz
fildl
cwtl
les
stc
fs
fnsave
add
cmpsb
add
test
pop
aad
addr16
add
lcall
mov
add
mov
push
push
lea
push
push
call
mov
pushf
add
push
add
add
add
aad
mov
lret
popl
add
pushf
lret
add
add
add
add
jno
fcmovne
add
add
leave
add
mov
xchg
loopne
jmp
pop
insb
add
jnp
add
add
in
lock
movl
lea
push
lea
push
push
lea
push
push
push
lea
push
push
lea
push
call
mov
add
add
sbbb
hlt
add
xchg
addb
stc
ja
add
sahf
mov
sub
pop
push
push
lea
push
push
push
lea
push
push
call
add
mov
jmp
add
add
sahf
sbbl
insb
pop
push
std
add
test
add
mov
addr16
add
add
insb
addl
iret
fisubrl
sub
pop
pushl
push
lea
push
push
push
lea
push
push
push
push
push
push
call
in
add
icebp
add
add
in
add
jo
push
xchg
mov
mov
add
add
pop
shll
jl
add
int3
addl
std
jnp
add
addr16
iret
orb
add
add
stos
sahf
mov
add
add
lods
add
lcall
jne
push
push
push
push
call
xchg
add
mov
push
push
fiadds
add
add
out
loopne
faddp
xchg
into
add
add
push
add
imul
int3
out
out
add
add
stos
add
add
pop
xchg
add
jmp
add
xchg
add
lock
lcall
and
jne
push
push
push
lea
push
push
push
push
push
lea
push
call
add
add
mov
xchg
xchg
add
add
clc
mov
mov
hlt
mov
add
add
add
add
add
xchg
mov
add
sub
pop
pushl
push
push
call
mov
mov
movsb
cmpsl
add
add
add
in
mov
add
mov
testl
add
add
icebp
mov
pop
arpl
fadds
rolb
jnp
mov
xchg
jo
lea
add
lcall
sarl
add
push
push
rol
push
sub
add
sub
lea
add
sub
add
pop
not
dec
sub
shl
pop
push
push
push
call
add
add
lods
add
xchg
fisubrl
mov
add
out
arpl
add
mov
jecxz
add
mov
add
mov
lods
imul
sahf
imul
pop
pushl
call
push
push
push
push
push
push
push
push
call
in
hlt
add
add
jecxz
add
add
add
xchg
xchg
add
push
push
add
out
add
add
add
mov
scas
xchg
fsubrs
cmpsl
in
movb
pop
push
push
push
sub
push
or
inc
add
ror
xor
xor
sub
dec
pop
lea
rol
pop
push
push
push
push
lea
push
lea
push
push
call
js
stc
jmp
add
add
mov
add
jle
add
add
into
add
sbbl
scas
lock
mov
add
je
fs
add
add
shl
pop
add
ret
je
xchg
stos
rolb
pop
push
push
push
lea
push
call
add
add
add
add
addl
mov
outsl
shlb
xchg
jbe
mov
imull
mov
add
jns
in
nop
cmpsl
testl
add
bound
xchg
xchg
add
fiaddl
stos
push
add
push
test
lea
jno
lret
add
mov
add
popa
shlb
sub
pop
call
push
push
call
sahf
add
lock
icebp
roll
add
flds
lret
in
add
std
add
repnz
mov
add
add
add
xchg
add
incb
test
leave
add
add
add
lcall
clc
push
push
call
mov
movsl
add
repnz
add
je
add
in
push
out
add
lods
add
fstl
sahf
lcall
in
add
nop
xchg
outsl
imul
add
add
pop
test
mov
add
jmp
lock
jmp
add
incb
xchg
add
jnp
data16
add
in
clc
pop
push
push
push
lea
push
call
jp
add
fnstenv
add
ljmp
lods
jmp
add
mov
lret
jno
lds
add
add
mov
lock
add
mov
push
push
push
lea
push
push
lea
push
call
add
ljmp
add
add
faddl
mov
xchg
movsl
cli
add
mov
cwtl
test
lods
test
add
mov
push
je
add
fadds
sub
pop
add
add
push
push
lea
push
push
push
push
push
push
push
call
js
add
add
add
into
add
in
add
mov
scas
mov
jo
add
cmpsl
arpl
pop
fisubl
cmpsl
add
fadds
add
push
stos
mov
add
in
fcompl
ret
imul
lods
push
mov
inc
sti
push
push
push
lea
push
push
push
push
call
fwait
scas
jo
add
add
add
add
add
fistpll
add
jo
leave
add
add
add
add
add
enter
les
adcl
in
fcomps
xor
pop
jae
push
push
push
push
push
push
push
push
push
call
clc
flds
lea
add
roll
jp
iret
xchg
push
add
add
in
add
mov
sub
pop
xor
push
push
push
call
add
mov
mov
addl
add
scas
add
add
add
add
add
add
stos
add
jecxz
addr16
add
rolb
add
add
mov
sub
pop
add
push
lea
push
push
push
call
push
data16
pop
insb
add
fiaddl
add
pop
mov
rolb
mov
push
push
jmp
add
into
fs
aam
pop
imul
in
add
add
add
add
movsb
mov
cwtl
js
scas
addb
jne
movsb
add
mov
push
cld
add
lcall
jne
push
push
push
push
lea
push
lea
push
lea
push
call
ljmp
jle
add
fadds
add
pop
push
add
add
fwait
pop
rolb
outsl
cltd
cmpsb
gs
mov
cld
add
mulb
mov
jb
add
popa
mov
add
cwtl
add
add
enter
add
inc
or
pop
jae
push
push
call
add
enter
lcall
fwait
sbbb
push
mov
data16
push
pop
mov
lock
test
in
add
add
add
lcall
add
pop
add
ja
add
jle
add
pop
add
arpl
add
ficomps
xchg
push
lcall
add
push
lea
push
call
mov
add
add
push
mov
push
test
add
add
pop
jmp
push
flds
shll
push
add
add
add
xchg
rorl
xchg
mulb
sub
pop
add
push
push
push
push
call
cwtl
cmpsl
add
add
nop
stc
add
ljmp
addb
jb
add
addl
add
add
add
add
notb
jnp
xlat
xchg
add
in
scas
scas
mov
outsl
je
add
add
mov
cmpsb
mov
lcall
popl
lcall
lock
push
push
push
push
push
push
push
call
fildl
add
jl
jns
add
hlt
add
add
add
add
add
fsubrl
push
add
lcall
jns
add
add
fbld
test
add
mov
addl
aad
mov
add
add
add
sub
pop
pop
mov
xor
push
lea
push
push
push
push
push
push
push
call
fwait
add
jae
cwtl
jmp
lret
out
imul
add
repnz
add
cmc
jecxz
icebp
add
add
out
ja
notl
divl
add
pop
add
addb
add
rclb
xchg
add
roll
sub
pop
push
push
push
push
call
add
sarl
test
add
mull
aad
movsb
add
int
lea
add
add
ljmp
sub
pop
mov
xor
push
push
push
push
lea
push
push
call
push
add
leave
fs
je
lods
int
add
add
add
xchg
add
pop
lods
add
add
addr16
ret
add
test
add
add
cwtl
add
sti
fs
add
vpsadbw
jne
mov
ljmp
jge
pop
add
cmc
pop
sub
pop
sub
pop
push
push
lea
push
push
push
push
call
xchg
mov
add
rcll
js
push
lock
add
mov
nop
add
repnz
add
mov
in
jmp
out
pop
fiaddl
add
add
loop
in
call
push
call
stos
popl
pop
mov
jnp
add
roll
aam
add
add
call
movsl
jecxz
rolb
add
jno
add
add
push
nop
add
mov
clc
pop
pop
mov
push
push
push
push
lea
push
push
call
add
add
clc
data16
add
cltd
mov
xchg
add
jmp
add
push
fadds
aad
add
lcall
pop
in
add
push
push
push
push
push
push
push
push
push
lea
push
call
shrl
jnp
pop
frstpm(287
fstl
lods
add
add
add
mov
push
add
add
add
add
pop
mov
pop
outsl
add
mov
xchg
int3
aam
add
fdivr
lcall
ret
imul
lea
push
push
push
call
add
mov
fiaddl
icebp
pop
add
add
sarl
xchg
lret
hlt
jle
jecxz
mov
add
sti
add
fidivrl
mov
ja
xlat
add
mov
push
push
push
push
push
push
push
push
push
push
lea
push
call
add
shlb
popf
jns
imul
pop
clc
add
call
push
out
fiadds
add
test
in
jmp
fldenv
sub
pop
xor
push
push
push
push
push
lea
push
call
add
push
push
lods
add
out
mov
mov
add
add
imul
fbld
jo
in
call
add
push
push
push
lea
push
call
jp
mov
in
jb
stos
fyl2x
add
jle
push
loope
mov
pop
add
add
std
add
test
add
data16
add
fiadds
iret
mov
lock
int3
imulb
add
add
add
jle
outsl
cmpsb
stos
insb
xchg
mov
loope
add
push
and
test
push
push
lea
push
call
jle
movb
loop
ret
add
faddl
add
neg
test
roll
add
addr16
leave
add
add
out
add
data16
insb
in
push
add
add
add
add
add
add
stos
fwait
repnz
push
enter
mov
jmp
sbbl
gs
lcall
adc
push
push
push
push
lea
push
push
lea
push
call
cltd
cmpb
cmc
push
add
test
loop
lcall
in
add
in
mov
fnstsw
lods
mov
repnz
add
popf
jmp
mov
add
lds
mov
outsl
into
ja
add
xor
add
jne
cwtl
fwait
out
mov
sub
pop
add
push
push
lea
push
push
call
add
jno
ficompl
mov
add
in
add
insb
push
add
add
add
fiaddl
add
lea
mov
add
mov
jno
in
lock
mov
xor
push
push
push
push
push
push
push
push
lea
push
call
addb
add
jae
add
add
rolb
xchg
add
add
filds
sahf
add
in
push
shll
xchg
sarl
mov
add
sar
add
in
stos
add
add
mov
roll
add
jne
in
fdivr
lcall
ret
push
push
push
push
push
push
push
push
push
push
call
fstpl
jp
fsubl
addb
add
add
fildll
hlt
cmc
mov
test
add
rcrb
mov
add
add
mov
jmp
lret
jle
out
fdivrp
filds
lcall
fsubrs
addr16
dec
push
xor
add
inc
sub
xor
pop
xor
rol
pop
push
push
push
call
fldl
mov
add
jae
scas
test
add
mov
add
pop
add
jae
add
fsubrp
jle
mov
loop
lods
add
add
out
pop
lret
add
add
add
sub
pop
pushl
call
push
push
call
jmp
add
xchg
jp
add
std
add
cmpsb
add
arpl
add
testb
add
add
add
add
push
add
int
add
mov
add
add
xchg
rcr
mov
push
push
push
sub
add
add
push
or
inc
add
add
not
sub
shr
pop
add
pop
push
push
push
push
push
push
call
add
lea
mov
popf
gs
xchg
flds
jge
clc
cltd
add
xchg
test
sub
pop
push
push
push
push
push
push
push
lea
push
push
push
push
call
add
add
pop
out
repnz
imul
jl
std
add
add
repnz
test
mov
pusha
clc
push
repnz
add
test
pop
add
add
movsl
add
add
pop
push
push
push
push
push
push
push
push
call
mov
movsl
add
mov
lock
rcrb
pop
add
mov
add
lods
add
add
add
testb
stos
push
outsl
icebp
popa
lahf
stos
add
insb
add
add
mov
addl
in
in
lcall
rclb
inc
andl
add
popa
test
push
test
test
mov
add
add
jno
add
movb
nop
fadds
ret
hlt
stos
add
mov
mov
add
pop
add
clc
push
push
push
call
ret
gs
add
pop
int
js
shll
push
add
arpl
movsl
aam
xchg
add
loope
cmpb
add
lcall
push
push
push
lea
push
lea
push
lea
push
lea
push
call
addr16
add
add
loop
xchg
mov
add
cmpsl
scas
mov
mov
add
jge
cltd
popa
add
jl
out
mov
add
ret
andb
pusha
add
nop
mov
jge
add
add
icebp
int3
imull
sub
pop
mov
add
push
lea
push
lea
push
push
push
push
push
call
in
push
enter
add
add
pop
jns
cld
add
into
add
stos
popa
add
add
add
add
addl
add
add
cmpsl
xchg
xchg
add
add
mov
loopne
mov
clc
jns
add
into
je
mov
add
add
add
add
push
lea
push
push
call
lock
add
mov
add
gs
addr16
add
add
dec
mov
push
subl
nop
movsb
incb
jne
fadds
add
fldl2e
add
xchg
add
or
in
hlt
lcall
jae
push
push
push
push
push
push
call
add
fdivl
add
mov
add
data16
cltd
repnz
clc
cwtl
cmc
add
add
xchg
fcmovu
add
arpl
movsl
pop
add
addl
and
push
push
push
push
lea
push
push
push
push
lea
push
call
mov
add
add
add
jmp
idivl
call
ret
cld
mov
xchg
add
pushf
jecxz
xchg
add
add
mov
pop
jp
lcall
mov
add
out
mov
aam
xchg
add
add
add
addb
add
lret
add
push
jl
add
lcall
les
push
call
xchg
stc
lret
add
add
add
pop
add
rol
mov
add
add
adcb
add
pop
xchg
mov
add
lods
mov
add
jne
in
clc
pop
add
push
push
push
push
lea
push
push
lea
push
call
push
clc
jns
jmp
xchg
push
gs
lret
add
popa
ret
movsb
fistps
add
add
jecxz
stos
les
jae
mov
div
orl
filds
in
add
imul
test
add
push
int3
xchg
add
fwait
sub
pop
push
mov
push
push
push
push
push
push
push
lea
push
lea
push
call
leave
std
add
testl
lret
add
movsb
add
arpl
mov
cli
fadds
fnsave
ljmp
sbb
cltd
leave
incb
add
push
push
push
call
add
add
subb
add
mov
sahf
add
jb
lret
xorb
add
add
add
add
in
data16
in
mov
imul
hlt
lcall
les
add
push
xor
add
add
pop
add
push
push
call
lea
int
xchg
add
add
add
mov
jo
add
out
fcompl
mov
mov
xchg
icebp
sub
pop
pop
push
dec
shl
inc
pop
mov
xor
push
lea
push
lea
push
push
push
push
push
lea
push
call
mov
mov
add
jns
popf
jnp
add
pop
scas
lock
loopne
repnz
pop
add
pusha
mov
lcall
movsb
mov
push
push
push
push
push
lea
push
push
lea
push
call
add
std
add
lret
mov
add
add
jmp
add
add
scas
cwtl
jle
imul
add
add
add
cwtl
add
add
arpl
out
sahf
stc
or
in
in
lcall
or
push
push
push
push
lea
push
push
call
pop
cltd
repnz
fisubl
mov
jnp
push
xchg
jb
test
add
in
cwtl
sbb
addr16
hlt
les
jbe
cld
bound
add
arpl
les
add
push
lea
push
push
call
hlt
movsb
add
add
in
ficoms
add
add
mov
add
add
lods
add
add
add
mov
loop
jne
add
add
jno
add
out
gs
jmp
mov
nop
rcl
imul
ja
add
pop
pusha
add
add
sub
pop
or
je
push
rol
ror
pop
mov
push
push
push
lea
push
push
lea
push
push
call
pop
into
push
test
push
add
jnp
stos
clc
bound
add
add
add
pop
mov
xchg
pop
push
add
ja
add
mov
fiadds
pop
fadds
mov
pop
xor
push
push
lea
push
push
push
push
push
push
push
push
call
pop
add
add
mov
add
add
mov
test
cld
add
add
rolb
add
jo
mov
push
add
subl
test
rcrl
add
out
sub
pop
add
push
push
push
call
add
sarl
push
add
scas
add
add
lahf
add
fcompl
xchg
add
loopne
stc
in
push
sub
pop
mov
push
push
push
push
push
lea
push
push
call
add
xchg
pop
bound
pop
add
add
ret
lock
add
add
add
jl
in
fnclex
mov
add
hlt
jge
hlt
xchg
push
ror
movsb
add
add
mov
mov
mov
mov
fistpll
fnstsw
popf
rcl
add
sub
pop
xor
push
push
push
call
adc
add
sti
orl
sarb
popl
lods
add
push
add
add
push
mov
lcall
les
ror
shr
pop
add
add
push
not
sub
inc
pop
push
push
shr
pop
mov
xor
push
push
push
push
push
push
push
push
lea
push
lea
push
call
mov
jns
mov
add
add
js
add
lods
add
pushf
add
push
mov
fistps
pop
add
std
movsl
ret
in
add
add
nop
add
in
fdivr
lcall
lock
push
push
push
push
push
call
test
xchg
xchg
data16
add
add
add
add
add
add
mov
add
add
add
std
mov
jmp
add
fstps
add
add
iret
loope
add
fsubr
out
push
push
add
popl
lcall
movsb
push
push
push
lea
push
lea
push
push
push
push
call
add
in
add
add
add
decb
movsb
push
mov
add
roll
stc
jne
cli
mov
sahf
jge
add
add
movsl
in
repnz
add
add
mov
add
add
hlt
xchg
add
divl
mov
add
js
test
add
loopne
lcall
dec
sub
push
push
shl
pop
or
je
mov
push
push
push
push
lea
push
push
push
lea
push
call
cmpsl
add
add
cli
test
mov
jmp
mov
add
sahf
add
mov
add
in
loopne
add
push
push
push
push
lea
push
call
in
push
add
mov
add
ljmp
lcall
loope
int
subl
push
scas
add
add
xchg
jae
rorl
push
bound
add
test
lcall
movb
add
push
push
push
push
call
add
test
lahf
mov
sahf
add
push
cmp
mov
add
add
add
fidivl
add
mov
push
cmpsb
mov
add
pushf
repnz
add
mov
sub
pop
rep
push
lea
push
push
lea
push
push
push
push
push
call
cmpsl
add
add
fwait
lret
add
add
sti
add
test
call
insb
add
add
scas
clc
cwtl
jecxz
mov
xchg
jne
stos
add
movsb
addl
leave
mov
mov
rcrb
mov
jnp
add
mov
movsl
sub
pop
pop
push
push
add
shl
push
xor
add
sub
sub
sub
rol
pop
sub
pop
push
lea
push
push
push
push
lea
push
lea
push
call
add
mov
jns
xlat
add
push
rcll
add
out
cmpsl
js
jecxz
arpl
add
add
mov
add
push
mov
add
xchg
fs
test
add
add
in
arpl
sub
pop
pop
mov
push
push
lea
push
push
push
push
push
call
mov
jge
add
add
add
add
push
add
add
pop
mov
push
add
lea
inc
add
pop
mov
jmp
push
push
push
push
lea
push
push
lea
push
push
push
call
icebp
add
pushf
add
les
mov
in
add
icebp
add
mov
ja
add
mov
add
add
mov
add
mov
popa
fildl
scas
fstpl
incb
pop
adcl
jo
lds
test
add
shrl
in
fcompl
push
xor
pop
mov
push
sub
inc
pop
add
push
ror
shr
pop
push
push
pop
push
push
lea
push
call
add
call
add
test
mov
pop
mov
add
jecxz
fadds
push
add
fptan
imul
clc
pop
push
push
lea
rol
pop
push
mov
push
push
push
lea
push
push
push
call
add
rcrl
jl
mov
mov
fistps
mov
add
mov
je
xlat
lods
add
add
add
add
add
test
pop
test
mov
add
roll
jmp
repnz
add
sub
pop
pop
pop
push
rol
sub
dec
pop
pop
push
ror
sub
pop
pop
leave
push
lea
ror
pop
ret
push
push
push
push
push
push
push
push
push
push
lea
push
call
mov
cld
fwait
jge
push
jbe
aam
stos
rcr
mov
popf
pusha
add
jle
xchg
add
lods
add
jp
cwtl
mov
add
lret
mov
add
in
push
lea
shl
sub
pop
add
push
push
ror
shl
pop
push
push
rol
dec
ror
sub
pop
push
push
add
dec
pop
push
push
push
push
call
loop
add
add
add
cli
cmpsb
add
add
mov
leave
add
add
add
in
fs
add
add
add
add
mov
addl
push
push
stos
add
jo
sub
pop
movl
push
lea
push
lea
push
push
push
push
call
add
mov
push
test
add
cmpb
iret
js
jle
data16
lock
mov
loope
lret
mov
mov
roll
xchg
icebp
roll
mov
jl
lahf
ret
imul
out
xchg
add
lcall
inc
clc
incl
add
add
sub
aaa
or
push
push
push
call
hlt
jmp
nop
test
fs
popa
jno
jb
pop
add
mov
icebp
lods
mov
leave
add
add
cltd
add
in
add
mov
mov
xchg
aam
add
add
add
adc
test
rolb
add
cmpsl
repnz
add
add
lcall
or
add
ror
pop
pop
push
lea
push
lea
push
push
lea
push
lea
push
lea
push
push
push
push
call
mov
xchg
imul
test
xchg
popa
filds
add
add
cmpsl
add
add
imul
push
add
shl
jns
mov
out
lahf
mov
out
cmpsl
mov
test
mov
add
jae
sub
pop
pop
pop
push
push
call
add
xchg
add
jbe
add
add
add
jb
in
pop
mov
incb
add
add
jns
les
add
in
out
push
add
stos
add
hlt
xchg
call
in
clc
lcall
leave
push
push
push
lea
push
call
loope
xchg
addr16
lahf
add
test
xchg
push
mov
add
add
xchg
add
fldl
mov
leave
jns
mov
add
lods
add
push
call
mov
pop
mov
pop
ret
push
lea
push
lea
push
push
push
push
call
jbe
add
add
push
aam
in
add
add
push
add
add
add
lods
clc
xchg
insb
add
mov
fidivrl
add
add
mov
mov
test
add
fadds
add
pop
add
in
add
fistpl
push
add
aad
flds
jp
fidivrs
add
push
push
push
push
push
push
push
call
jge
call
jle
arpl
add
pusha
into
add
mov
movsl
mov
add
out
add
add
add
xchg
mov
add
add
cltd
add
fidivs
cmpsb
addr16
pop
mov
push
sub
pop
add
push
lea
push
push
call
in
sar
push
mov
add
mov
push
mov
loopne
add
add
sahf
pop
add
xchg
add
add
imul
cmc
cmpsl
je
neg
push
mov
add
sub
pop
push
push
push
xor
sub
dec
pop
push
push
add
pop
push
push
rol
add
rol
pop
testl
push
sub
pop
addl
push
push
call
icebp
je
addb
add
out
leave
add
add
add
mov
add
mov
imul
add
add
rcrb
add
je
pushf
out
lock
scas
mov
push
add
add
add
add
mov
add
add
add
mov
mov
sub
pop
push
call
push
rol
pop
mov
pushl
push
push
lea
push
push
lea
push
call
add
add
loopne
lods
mov
mov
popa
add
add
add
add
fnsave
mov
in
add
cmc
pop
in
in
in
pop
push
push
push
call
mov
filds
imul
icebp
loop
lods
movl
mov
iret
mov
add
fildl
push
cltd
std
insb
add
mov
add
xchg
add
lods
sahf
push
push
lock
fsubl
lcall
add
jo
call
push
lea
push
push
push
push
lea
push
call
loop
add
add
aam
je
add
add
add
add
aam
hlt
enter
add
leave
pop
add
mov
jo
xchg
add
add
mov
add
jb
push
add
add
lcall
jge
add
test
call
hlt
add
not
shr
pop
pop
pop
push
lea
push
push
push
push
push
push
call
add
jnp
scas
pop
aam
add
add
fcmovu
jle
mov
add
mov
rclb
imul
add
add
fisubs
fldenv
add
pushf
pop
fmuls
add
mul
rolb
stos
cmpsb
add
roll
add
lcall
push
push
lea
push
call
jecxz
arpl
in
add
add
jl
xchg
stos
jbe
push
add
add
arpl
ret
mov
add
incb
xchg
add
fwait
jp
add
mov
lcall
push
push
push
lea
push
push
lea
push
push
push
call
mov
scas
repnz
jp
mov
add
add
add
add
add
jecxz
add
mov
stc
mov
push
add
clc
mov
jne
lock
out
mov
mov
mov
out
jns
add
push
in
add
lea
lcall
push
lea
push
call
add
add
add
jle
faddl
sahf
cld
add
mov
je
rol
lock
jp
add
add
push
repnz
add
xchg
popa
add
enter
add
jmp
add
pop
mov
add
add
xchg
sub
pop
ret
push
lea
push
push
call
bnd
int3
add
add
add
pushf
push
add
add
add
add
add
out
lcall
add
cltd
add
add
cltd
add
leave
add
push
push
push
push
push
push
push
push
lea
push
push
call
test
pop
subb
push
add
aam
addl
add
mov
mov
cltd
add
sahf
sub
pop
mov
push
push
push
call
add
push
bound
mov
add
jmp
add
add
cltd
std
icebp
mov
add
std
jecxz
add
scas
add
scas
cli
arpl
add
push
push
ror
lea
pop
push
push
push
push
lea
push
lea
push
push
lea
push
lea
push
push
call
lds
out
add
sar
add
scas
lods
pusha
fs
pop
add
add
lcall
add
add
add
data16
jp
data16
jecxz
add
add
xchg
mov
lcall
push
push
push
push
push
push
push
call
scas
mov
add
add
add
push
add
add
add
add
test
push
cli
lods
add
xchg
mov
add
movsb
scas
enter
lahf
rcr
add
mov
popf
imul
enter
add
add
roll
jmp
in
push
push
ror
sub
dec
pop
movl
push
push
push
push
lea
push
push
push
push
call
into
roll
mov
mov
lcall
jle
jb
scas
mov
mov
add
iret
test
mov
cli
shll
add
add
ror
xchg
outsl
fadds
add
lods
lea
add
add
jb
add
pop
mov
mov
xchg
mov
mov
lock
pop
call
push
rol
lea
pop
push
push
shl
rol
pop
call
push
push
push
push
lea
push
push
push
push
call
add
mov
fdivr
add
push
push
lods
add
int
add
loopne
jecxz
add
lret
add
add
add
add
add
add
mov
pusha
leave
jmp
add
lcall
insl
cld
add
test
call
mov
push
push
push
push
lea
push
call
add
cmpsb
xchg
movsl
add
add
out
ja
add
nop
ljmp
aam
stos
xchg
jo
mov
add
add
pop
add
add
ret
sub
pop
pop
pop
push
push
push
push
call
stos
add
mov
add
add
enter
add
add
in
mov
add
add
lods
lock
mov
add
lods
mov
add
add
add
pop
jge
shll
imul
lcall
push
push
lea
push
push
lea
push
push
push
call
popa
jbe
jo
fstl
add
add
add
addl
add
popl
add
add
add
mov
mov
add
call
add
add
add
hlt
stos
add
in
nop
mov
add
add
in
pop
leave
push
push
push
push
call
add
jnp
xchg
jecxz
cltd
jbe
testb
popa
data16
scas
add
add
fnstcw
into
add
push
pop
push
add
lock
ret
push
push
call
add
cmpsl
fcmovu
add
add
mov
fwait
test
add
xchg
cmpsb
testb
les
add
push
push
push
push
push
push
call
xlat
lock
outsl
int3
mov
mov
fdivr
mov
add
jmpw
push
add
movsl
arpl
jnp
fisubs
int3
add
scas
popf
add
add
jo
add
pop
pop
incb
pop
add
subb
add
pop
std
add
add
add
in
push
lea
push
push
push
lea
push
call
addl
push
ja
int
pop
decb
pop
add
add
push
xchg
cld
add
stos
add
add
jp
jbe
add
bound
jmp
push
mov
je
add
loop
add
lcall
lea
add
add
mov
jge
loope
jbe
add
bound
insb
sub
pop
add
push
push
sub
pop
push
push
xor
pop
push
push
push
push
call
push
mov
add
mov
xchg
loope
movl
out
popf
add
sti
int3
nop
jns
add
add
add
sub
pop
mov
lea
push
inc
add
pop
sub
mov
push
lea
push
push
lea
push
push
push
push
push
push
push
call
add
add
add
add
popf
mov
add
loopne
jbe
scas
add
mov
mov
imul
lods
cwtl
push
add
cmc
add
in
popf
mov
in
stos
add
add
add
xchg
xchg
popa
push
roll
stos
iret
add
add
fildl
jnp
nop
sub
pop
shr
add
push
add
pop
mov
mov
push
sub
pop
add
add
push
push
push
push
push
lea
push
lea
push
push
call
rolb
pop
test
add
add
mov
imul
add
ljmp
aad
hlt
mov
xchg
add
pop
stc
add
enter
mov
lock
xchg
add
lds
int3
mov
out
scas
in
jbe
leave
mov
add
lcall
inc
add
add
clc
add
sub
pop
mov
push
push
push
push
push
push
lea
push
push
push
call
mov
nop
test
mov
lock
xchg
push
add
add
pop
ljmp
add
xchg
add
fwait
xchg
add
add
add
add
add
cmpsl
add
jae
rolb
cld
test
jle
sub
pop
cmp
jne
cmp
jne
push
rol
sub
xor
ror
pop
mov
push
push
push
lea
push
lea
push
push
lea
push
push
push
call
enter
insb
mov
addl
xchg
add
add
add
add
cmpsl
add
cmc
cmpsb
pop
add
add
in
fcompl
add
add
add
sbb
lret
leave
add
pop
jmp
push
push
push
lea
push
call
pushf
mov
data16
test
add
add
add
push
add
push
fiaddl
out
mov
jle
add
pop
add
sub
pop
mov
push
shl
sub
not
dec
pop
mov
sub
jne
push
dec
shr
sub
ror
pop
mov
push
push
push
push
push
lea
push
push
call
addl
aad
shlb
xchg
add
add
loopne
push
add
fs
push
mov
add
add
std
stos
mov
sub
pop
movl
jmp
push
push
lea
push
call
add
sbbb
xchg
xchg
faddl
jmp
add
roll
pusha
add
add
leave
fldenv
add
add
flds
jae
sub
pop
mov
mov
push
sub
shl
sub
pop
cmp
jne
push
push
push
lea
push
push
push
push
lea
push
push
call
jbe
add
add
add
lahf
add
add
add
iret
add
add
ret
call
icebp
ljmp
inc
adc
add
add
add
push
dec
mov
xchg
data16
test
add
rolb
pop
add
xchg
addl
add
testb
int3
jmp
add
iret
loopne
loope
add
add
test
stos
flds
add
scas
lods
add
mov
push
popl
add
in
add
imul
lcall
push
push
push
push
push
push
push
call
cmpsl
add
test
insb
add
lods
push
aad
aam
add
jle
add
add
js
mov
in
lcall
cmpl
jne
push
shr
not
sub
lea
pop
mov
push
push
push
push
push
push
push
lea
push
call
jl
ret
jo
scas
mov
test
frstor
xchg
add
fldl
movb
add
int3
add
pushf
add
test
add
add
test
pop
add
pop
jmp
repnz
add
mov
jmp
in
loopne
lcall
add
ret
add
push
loop
add
mov
mov
out
sub
stos
push
push
push
call
jbe
add
push
add
mov
add
mov
mov
jo
lcall
mov
add
add
cwtl
mov
rolb
mov
mov
add
lcall
pushl
pop
push
push
call
fidivl
add
cld
add
std
leave
pusha
movsb
jo
fdivp
mov
out
out
add
cwtl
add
push
call
clc
pop
mov
mov
push
pop
mov
push
push
inc
rol
push
xor
add
rol
xor
rol
sub
inc
pop
rol
inc
sub
pop
push
push
push
push
push
push
push
call
in
add
add
push
add
enter
jge
add
add
jbe
scas
add
xchg
add
arpl
mov
add
sahf
mov
ret
add
xchg
sub
pop
push
call
push
ror
xor
dec
pop
cmpl
je
push
push
rol
add
push
sub
add
dec
xor
ror
sub
xor
pop
sub
sub
sub
pop
push
push
push
lea
push
push
lea
push
call
add
lods
popl
push
pop
add
add
add
mov
jno
add
jnp
popl
jnp
add
mov
add
movb
add
faddl
add
sub
pop
push
push
push
push
lea
push
lea
push
call
add
outsl
pusha
add
ret
faddl
xchg
iret
push
fs
sbbl
test
add
add
add
mov
test
loopne
cltd
pop
add
fwait
mov
lea
jp
add
add
fcoms
roll
add
add
xlat
fnsave
add
sub
pop
call
cmpl
je
push
push
rol
shr
push
xor
add
sub
ror
lea
sub
inc
shl
pop
inc
pop
push
dec
pop
push
push
push
push
push
lea
push
push
push
push
push
push
call
imull
add
pop
cli
add
popa
lds
add
mov
add
pop
add
add
cli
add
data16
pusha
xchg
lcall
jp
add
ret
int
add
test
out
add
sti
add
arpl
add
mov
push
add
lret
push
outsl
sub
pop
call
push
push
lea
push
push
lea
push
push
call
add
add
xchg
mov
add
add
add
add
mov
mov
cmpsl
jae
mov
add
add
scas
mov
lcall
js
int3
fldz
ret
popl
add
push
push
rol
inc
push
sub
add
add
ror
sub
ror
sub
ror
pop
add
shr
add
pop
push
shl
shr
shr
pop
push
push
ror
xor
pop
call
push
push
push
push
push
push
push
push
call
mov
lret
add
arpl
add
add
gs
cmpsl
mov
add
mov
add
add
add
addb
add
in
cmpsl
out
test
push
mov
lea
scas
adc
out
push
sub
pop
cmpl
je
push
push
dec
push
push
pop
add
inc
sub
lea
ror
sub
pop
ror
lea
lea
pop
push
rol
pop
push
push
push
push
call
add
out
add
add
test
pushf
add
add
sti
add
push
lds
fcmovne
add
sub
pop
call
cmpl
je
push
push
sub
lea
push
push
pop
add
dec
sub
xor
sub
dec
add
shl
pop
ror
pop
push
lea
push
push
push
call
xchg
arpl
pop
push
fcomip
mov
add
loope
add
fildl
xchg
add
push
push
push
add
add
jne
sahf
rcll
repnz
sub
pop
push
call
push
lea
push
push
call
addb
mov
add
mov
rcl
int
add
add
add
sub
add
xlat
add
mov
lcall
cmp
rol
je
push
push
sub
push
sub
add
rol
shl
inc
ror
sub
shr
pop
xor
pop
push
push
push
lea
push
push
push
lea
push
lea
push
push
push
call
arpl
into
roll
add
jmp
test
fwait
pop
add
add
scas
add
add
les
add
in
add
stos
out
jp
mov
add
add
sti
hlt
jne
push
lcall
push
push
call
add
mov
xchg
lea
mov
pusha
cli
loopne
mov
loopne
add
fnstsw
js
push
add
mov
xchg
xlat
lcall
lret
mov
add
jne
jmp
add
add
stos
xchg
add
add
sbb
add
push
sub
pop
cmpl
je
push
push
xor
dec
push
push
pop
add
sub
pop
not
ror
pop
push
push
push
lea
push
push
lea
push
lea
push
call
add
jbe
sti
xlat
incb
add
xchg
add
push
mov
movsb
add
sahf
mov
in
push
call
push
sub
pop
cmpl
je
push
push
add
dec
push
or
inc
add
lea
dec
sub
shl
pop
shr
not
pop
push
inc
dec
pop
push
push
inc
not
pop
call
push
push
call
les
fildll
add
add
insb
add
lock
addl
out
pop
jmp
andb
add
add
vpunpcklwd
xchg
lahf
add
add
add
add
jb
mov
pop
lock
add
fadds
fs
pop
cmpl
je
push
push
ror
sub
push
or
not
add
add
sub
pop
inc
ror
pop
push
lea
push
push
lea
push
lea
push
call
jp
xchg
ja
shrb
out
add
pop
loope
jnp
xchg
add
jle
popl
cwtl
pop
jle
add
add
int3
mov
add
fadds
rcr
add
hlt
frstor
sub
pop
push
push
rol
pop
call
push
shl
lea
pop
cmpl
je
push
push
add
shl
inc
push
xor
add
rol
shl
sub
inc
rol
sub
pop
lea
rol
pop
push
not
pop
push
push
push
call
aad
testl
jno
roll
push
add
add
push
add
add
repnz
lock
imul
fldl
lret
add
lret
sbbl
ret
test
add
push
push
dec
xor
push
and
add
sub
sub
add
ror
inc
pop
xor
pop
push
ror
ror
pop
push
call
push
shr
pop
cmpl
je
push
push
dec
push
xor
add
sub
sub
shr
shl
ror
pop
sub
shl
dec
add
pop
push
push
push
lea
push
lea
push
push
push
push
push
lea
push
call
rcrb
mov
add
cli
add
test
add
cld
add
add
sarb
add
push
jns
pop
nop
test
add
bound
xchg
sub
pop
push
push
not
pop
call
push
pop
cmpl
jne
push
push
call
out
add
xchg
add
add
mov
addb
add
scas
fiadds
add
add
fldt
fcmovu
add
rcl
movsl
add
push
lahf
cmpsb
add
int
fnsave
push
add
mov
test
lcall
inc
adc
add
push
mov
push
push
call
mull
add
mov
add
add
jo
fdivr
add
addr16
loop
std
add
add
stos
shl
clc
pop
add
add
add
add
add
stos
addl
add
std
add
add
add
add
test
add
movb
pop
movl
jmp
push
not
pop
xor
push
push
call
lock
add
cmpsl
add
add
fisubrs
jbe
jb
lods
mov
add
in
int
mov
insb
push
add
mov
add
add
stos
add
add
add
in
clc
lcall
push
push
push
call
add
fdivrl
pop
mov
mov
js
add
in
out
add
add
add
call
fs
add
fmull
add
jmp
add
mov
add
add
add
add
enter
lods
rolb
sub
pop
pop
push
add
pop
pop
push
sub
pop
pop
push
add
rol
pop
leave
ret
push
xor
xor
add
pop
push
push
not
not
pop
mov
push
push
push
lea
push
push
push
push
push
push
call
arpl
jnp
stos
pop
mov
xchg
fs
leave
test
add
add
call
jne
add
add
pusha
add
add
out
add
sub
pop
add
cmpl
jne
push
push
shr
add
rol
push
or
inc
add
inc
lea
sub
dec
lea
pop
add
pop
push
shr
pop
pushl
call
push
sub
add
inc
pop
push
push
push
lea
push
push
push
push
lea
push
push
push
call
jns
test
call
test
mov
push
lds
mov
int3
out
pop
mov
hlt
out
add
icebp
fadds
scas
leave
add
mov
js
xlat
add
mov
in
jmp
out
push
stc
imul
loopne
in
fcompl
rclb
dec
inc
push
push
push
call
imul
push
jge
int
add
add
testb
pop
add
jae
test
addr16
mov
add
pop
out
mov
add
add
add
add
clc
sti
movsl
xchg
shr
mov
add
jle
in
lock
jmp
cmpl
je
push
push
push
push
push
lea
push
push
lea
push
call
jnp
add
jae
add
add
cli
fwait
xchg
sahf
mov
test
subb
add
add
roll
add
add
add
jecxz
xchg
add
idiv
add
in
jne
add
scas
xchg
push
cmpsb
pop
add
ljmp
mov
js
add
sub
pop
cmpl
jne
leave
push
push
push
push
lea
push
push
lea
push
lea
push
push
call
add
add
jle
add
add
ja
jne
add
bound
add
lea
add
sub
pop
add
push
lea
push
push
call
mov
mov
xchg
add
loopne
mov
add
loopne
add
add
test
jbe
add
add
add
xchg
mov
add
add
add
pop
add
ficompl
std
lock
mov
jno
test
lcall
push
push
push
push
lea
push
lea
push
push
push
call
pop
push
fadds
add
add
add
mov
push
add
pusha
hlt
add
pop
sub
fs
xchg
ljmp
add
fdivrl
test
testl
add
pop
mov
push
xorl
add
sub
pop
pop
push
push
push
push
push
push
call
outsl
jmp
jge
lods
add
out
bound
push
fisubrl
add
add
stos
scas
pop
push
test
add
aam
sub
pop
pop
push
push
push
push
push
push
push
push
push
call
mov
jno
add
add
mov
cwtl
add
xchg
test
push
cltd
add
mov
mov
add
leave
mov
lds
out
add
sti
mov
mov
out
data16
fiaddl
add
out
add
les
pusha
pushf
jge
add
aad
sub
pop
pop
push
sub
sub
sub
rol
pop
leave
add
push
push
lea
push
push
push
push
lea
push
call
add
lcall
add
mov
push
aam
mov
rolb
add
mov
hlt
add
pop
sahf
add
add
add
jl
mov
in
add
loopne
add
loop
mov
sub
pop
ret
push
dec
sub
ror
pop
jmp
push
push
push
lea
push
push
lea
push
lea
push
call
imul
fimull
movsb
cmpsl
aad
pusha
fcoms
mov
xchg
in
add
add
sub
pop
cmpl
jne
push
push
shr
rol
push
xor
add
ror
dec
ror
xor
sub
add
sub
dec
pop
inc
shl
pop
push
rol
sub
pop
pushl
push
push
call
mov
pushf
pop
jle
add
add
add
fdivrl
add
jns
fs
add
push
xchg
ret
call
add
loopne
add
xchg
cwtl
add
add
flds
add
add
call
push
push
lea
push
push
push
call
add
int
iret
add
cmc
shrb
add
pop
pop
fcmovu
pushf
jo
ret
xchg
pusha
shll
add
fnstenv
add
lea
mov
add
pop
jp
jne
fwait
out
scas
addl
jmp
push
lea
push
push
push
push
push
push
push
call
mov
lea
add
pop
add
add
mov
stos
mov
cmpsl
flds
pop
mov
aad
jbe
mov
jp
scas
mov
insb
test
addr16
xchg
jnp
out
out
cmc
jmp
stc
movsl
add
add
enter
sub
pop
cmpl
jne
mov
push
add
not
not
pop
mov
jmp
push
add
sub
pop
push
push
push
rol
sub
push
or
inc
add
shl
shr
ror
sub
inc
rol
rol
ror
pop
pop
push
sub
rol
pop
pushl
push
push
lea
push
lea
push
lea
push
call
movb
add
scas
push
add
fwait
out
lods
sarb
lea
add
add
roll
lahf
jnp
loope
add
pop
rolb
popl
in
loopne
add
add
lods
add
add
gs
add
call
add
jb
add
cwtl
add
mov
imul
negl
add
fwait
mov
repnz
xchg
add
call
push
push
push
xor
add
add
add
lea
sub
lea
pop
ror
ror
dec
lea
pop
push
add
shl
pop
pushl
push
add
rol
pop
call
call
push
push
xor
add
inc
push
xor
add
ror
sub
rol
xor
pop
not
xor
pop
push
push
call
idivl
mov
push
pop
scas
add
mov
mov
mul
add
mov
aad
loope
fnstenv
enter
mov
mov
arpl
add
xchg
add
add
mov
ja
in
clc
pop
pushl
push
sub
shr
shl
pop
call
push
sub
rol
pop
call
push
push
dec
push
xor
add
inc
ror
not
sub
shr
lea
dec
shr
pop
sub
pop
push
sub
sub
pop
pushl
push
add
ror
ror
pop
call
push
lea
push
call
lahf
flds
push
mov
lock
add
fadds
call
xchg
push
mov
imul
jns
push
add
cltd
add
push
jle
loopne
mov
lcall
add
les
add
lret
faddl
add
jl
add
mov
add
into
add
mov
in
clc
lcall
shrb
cmc
loopne
push
rol
dec
push
or
inc
add
sub
sub
pop
ror
pop
push
sub
dec
dec
pop
pushl
call
push
push
lea
push
push
push
push
push
call
jnp
subb
stc
jmp
imul
add
shrl
hlt
add
mov
imul
aad
fldl
lcall
shrb
movsb
sahf
mov
shr
ror
ror
rol
push
or
inc
add
shl
sub
sub
shl
not
pop
not
pop
push
push
call
push
arpl
jp
add
int
add
xchg
add
fsubs
add
std
in
pop
mov
add
add
arpl
ja
mov
xchg
lret
mov
jle
cwtl
enter
in
clc
pop
pushl
push
not
pop
call
push
push
call
jp
push
lds
bound
add
add
add
add
les
add
ja
push
add
repnz
mov
out
add
add
stc
jmp
add
cmp
test
icebp
push
add
cltd
jmp
insb
add
scas
mov
out
add
mov
ret
sub
pop
call
push
push
add
push
sub
add
dec
lea
xor
sub
pop
ror
add
pop
push
push
lea
push
push
push
push
push
push
push
call
mov
push
add
add
add
mov
addr16
mov
add
arpl
pop
ficoml
add
cmpb
mov
xchg
out
add
in
test
add
movsl
pop
add
add
sub
pop
pushl
push
lea
push
call
fisubrs
mov
add
add
add
xchg
add
pop
jle
out
add
mov
ficompl
mov
push
mov
xlat
cli
add
pop
scas
roll
mov
cmpsl
loopne
sub
pop
call
push
shr
dec
xor
pop
call
push
push
rol
add
sub
push
and
add
sub
add
rol
sub
lea
pop
sub
shr
lea
pop
push
lea
push
push
push
push
lea
push
push
push
push
call
add
add
add
in
stos
out
sahf
mov
jns
mov
push
mov
pop
add
add
stos
aad
mov
ljmp
add
add
stos
add
addr16
add
mov
lea
pushf
add
add
pop
out
add
jecxz
test
lcall
jne
call
push
lea
push
push
lea
push
push
call
add
push
leave
add
int
xchg
xchg
mov
add
push
add
add
mov
leave
add
add
mov
fisubrs
add
mov
addl
pop
call
push
push
sub
push
or
inc
add
sub
inc
sub
inc
pop
add
inc
add
pop
push
shr
dec
shr
inc
pop
pushl
push
push
push
push
lea
push
push
push
lea
push
call
gs
add
ja
add
push
pop
jecxz
lret
lcall
arpl
out
add
add
fwait
testl
sar
cli
xchg
add
cmc
add
add
jo
add
loop
cld
lret
add
mov
push
loope
pop
add
mov
leave
add
cwtl
fidivrs
pop
ret
add
jb
add
mov
pop
call
push
not
dec
pop
call
push
push
lea
xor
push
or
inc
add
dec
sub
rol
ror
pop
rol
pop
push
push
lea
push
push
push
call
add
test
xorl
add
roll
stos
xchg
insb
pop
mov
cltd
xchg
add
push
pushf
add
cmc
add
cmpsb
jae
cwtl
cltd
faddl
add
add
add
imul
pop
call
sarl
add
mov
jns
in
in
pop
pushl
push
push
push
push
lea
push
call
add
nop
mov
add
out
add
mov
add
mov
xchg
lock
mov
add
add
popa
add
movl
divl
mov
mov
insb
mov
mov
add
add
jge
add
xchg
stc
ficoms
nop
jbe
sub
pop
call
push
push
push
call
int
mov
ljmp
add
add
scas
add
add
scas
add
rolb
test
push
add
add
leave
loopne
ficoms
loope
add
icebp
addb
in
hlt
lcall
pushf
and
call
xchg
xchg
add
push
sub
call
add
xchg
add
aam
jp
out
add
mov
cmc
add
add
add
add
je
add
sub
pop
push
push
push
call
fldl
testb
xchg
fcoms
adcb
jo
cwtl
lahf
add
bound
jo
mov
cltd
mov
mov
popf
mov
gs
add
jle
faddl
add
add
filds
add
add
add
add
add
add
xchg
fiadds
sub
pop
call
push
push
rol
not
ror
shr
push
xor
add
sub
sub
shr
inc
inc
pop
ror
lea
lea
pop
push
add
sub
dec
pop
pushl
push
add
sub
sub
add
pop
call
call
push
push
dec
push
and
add
not
shr
shl
sub
dec
inc
pop
not
dec
shl
add
pop
push
sub
dec
rol
add
pop
pushl
push
push
push
push
push
push
push
lea
push
lea
push
call
add
add
sub
xchg
rcl
jns
cli
jnp
mov
ja
add
movsl
outsl
jne
push
mov
in
sub
pop
call
call
push
push
xor
push
push
pop
add
shr
sub
pop
inc
rol
pop
push
lea
push
call
jns
add
add
mov
add
add
mov
add
add
add
add
loope
add
hlt
add
mov
add
add
lcall
jne
push
lea
push
push
lea
push
call
icebp
nop
add
call
xchg
pop
popf
pop
jae
add
add
shll
mov
mov
lcall
test
add
jb
ret
add
add
lahf
add
jl
mov
aam
add
jae
std
addl
add
sub
pop
call
call
push
lea
push
lea
push
push
push
push
push
push
push
lea
push
call
add
je
add
add
test
jno
repnz
add
testb
add
add
push
mov
sub
pop
lea
push
push
ror
push
and
add
sub
dec
dec
add
sub
shl
add
ror
inc
pop
lea
pop
push
dec
dec
pop
pushl
push
xor
shr
not
pop
call
push
push
call
in
sti
add
out
add
test
out
xchg
add
add
stos
arpl
fnstcw
leave
xchg
imul
add
imul
in
clc
lcall
call
push
push
ror
sub
push
or
not
add
ror
shr
sub
lea
sub
sub
not
shr
pop
inc
sub
add
pop
push
rol
pop
pushl
call
push
lea
push
push
push
push
push
lea
push
push
call
pushf
jno
pop
jbe
add
pop
cmpsb
mov
jmp
jno
rcrl
add
add
pusha
shll
sub
pop
call
mov
push
push
shr
sub
not
push
and
add
shr
sub
pop
sub
add
pop
push
dec
shl
sub
pop
pushl
push
not
ror
rol
shl
pop
call
push
lea
push
lea
push
lea
push
call
test
mov
lock
sahf
stos
mov
stos
mov
out
mov
add
pushf
add
xchg
add
shll
mov
lcall
add
stc
pop
pushl
push
push
lea
push
push
push
call
add
cli
xlat
add
pop
aad
movsb
push
add
add
cmpsb
movb
addb
add
jne
jle
loope
test
add
fcoml
add
add
add
add
add
mov
addr16
imul
in
in
add
mov
lahf
add
jbe
mov
mov
lcall
shrb
and
clc
ror
xor
push
or
inc
add
sub
lea
ror
sub
inc
sub
inc
pop
add
lea
pop
push
pop
pushl
call
push
push
add
push
or
inc
add
lea
sub
inc
dec
lea
sub
pop
inc
xor
pop
push
push
shl
push
sub
add
dec
add
lea
sub
xor
add
pop
lea
pop
push
lea
push
push
call
cmc
loop
add
pop
stc
pop
xorb
pop
imul
add
stos
testb
add
add
add
add
add
movsl
mov
test
lock
rolb
add
add
mov
xchg
loopne
in
cltd
stos
xchg
imul
leave
add
sub
pop
call
push
push
xor
xor
shl
push
xor
add
add
sub
dec
sub
dec
dec
pop
pop
push
sub
inc
ror
shl
pop
pushl
push
pop
call
push
dec
add
lea
pop
mov
push
add
pop
lea
lea
push
push
push
push
lea
push
push
push
push
push
push
call
mov
pusha
add
lret
add
add
fisubl
out
add
push
add
add
add
push
add
add
test
sub
pop
push
push
push
push
call
idivl
lds
add
add
cmpsl
cwtl
popf
stos
fwait
jb
pusha
fmuls
roll
add
js
add
mov
add
add
jp
add
add
leave
add
ret
loopne
testb
add
mov
out
stc
push
add
add
scas
add
lcall
push
push
lea
push
push
push
push
call
aam
data16
mov
shl
add
fsub
push
add
add
std
test
add
cmpsl
mov
rcl
iret
jo
scas
xchg
add
add
lcall
add
mov
push
pop
push
push
push
push
call
mov
add
fidivrl
adcb
out
mov
add
lock
jle
add
mov
add
add
add
add
mov
add
sahf
xorb
out
sub
pop
push
push
add
pop
push
push
push
push
call
out
push
add
add
add
xchg
movsl
mov
add
jmp
add
test
mov
pop
add
popf
rolb
roll
pop
push
pushl
push
sub
add
inc
shr
pop
push
push
add
lea
pop
call
push
push
add
push
sub
add
lea
add
not
sub
pop
xor
pop
push
push
push
call
mov
lcall
out
add
push
stc
popf
add
into
addb
sti
cmpsb
jb
enter
cmc
rcr
jmp
test
mov
add
in
hlt
pop
pushl
call
push
push
push
lea
push
lea
push
call
into
jl
fistps
add
add
add
add
add
add
int
xchg
push
scas
pusha
roll
iret
cmpb
fstl
jae
into
hlt
add
add
jb
add
outsl
enter
movl
call
push
not
pop
mov
push
shl
pop
pop
push
not
add
pop
dec
jne
call
push
push
dec
add
push
sub
add
ror
ror
sub
xor
pop
add
add
xor
inc
pop
push
pop
pushl
push
push
push
lea
push
push
push
call
fldl
add
ret
fildl
js
nop
nop
add
popaw
xlat
add
add
add
lret
jae
add
add
fistpll
add
pop
jbe
fwait
pop
repnz
add
clc
add
add
add
xchg
add
lcall
sbb
add
loopne
cltd
aam
xchg
les
arpl
or
lea
push
push
push
push
call
add
pop
add
mov
stos
pop
xchg
push
xorl
add
add
add
mov
leave
scas
add
add
add
movsb
mov
imul
stos
add
sti
pop
popf
std
test
lcall
fcomps
call
je
stc
push
lea
push
push
push
push
push
call
iret
mov
lcall
clc
add
mov
imul
jne
add
test
add
push
add
ror
jmp
add
add
add
add
pop
lahf
test
mov
icebp
push
jmp
push
in
out
xchg
sarb
push
push
push
push
push
call
jb
loopne
add
pop
add
add
jns
jge
add
add
std
add
add
lods
add
add
jmp
filds
add
add
add
add
lcall
pushf
and
ljmp
out
mov
lcall
cmpsl
sub
push
or
not
add
lea
not
not
sub
add
rol
ror
pop
inc
not
add
pop
push
lea
push
push
push
push
push
push
lea
push
call
add
out
add
mov
add
add
rclb
xchg
lea
fsubp
mov
add
cld
out
in
loopne
lcall
jne
push
lea
ror
pop
call
push
sub
sub
shl
pop
push
push
lea
push
push
push
push
call
fcoml
ja
roll
roll
add
mov
jbe
add
add
add
push
scas
mov
mov
add
add
add
jge
add
mov
xchg
scas
clc
scas
add
mov
shl
jae
xchg
jle
test
jb
movsb
mov
add
push
adcl
add
flds
mov
in
in
pop
call
push
push
add
add
push
xor
add
shl
ror
shr
xor
sub
sub
xor
sub
pop
add
pop
push
lea
push
push
push
push
lea
push
push
call
nop
mov
add
add
jae
add
add
jb
add
add
jmp
push
jno
add
imul
roll
jno
add
aam
add
add
add
jge
add
mov
add
into
mov
leave
rcr
outsl
ret
push
int3
add
push
imul
in
pushl
call
push
push
push
push
push
push
call
incb
hlt
pusha
andb
add
mov
add
addl
add
add
in
in
arpl
ret
add
pop
add
jle
add
in
push
mov
xchg
incb
ljmp
add
rorb
not
shl
pop
lea
push
push
rol
push
sub
add
shr
sub
ror
inc
pop
sub
pop
push
ror
shl
shr
pop
pushl
push
push
push
lea
push
call
jl
add
jle
cmpsb
pop
fadds
insb
insb
lcall
add
nop
shr
mov
sbb
jno
outsl
add
add
sahf
loopne
add
add
add
push
pop
add
add
sub
pop
call
push
lea
push
push
push
push
push
push
push
push
push
call
flds
xchg
outsl
add
nop
mov
add
test
pop
lods
add
fs
fistl
add
mov
shr
add
jge
fcmovu
test
add
push
movb
mov
aad
sub
pop
lea
push
push
not
sub
not
pop
push
push
push
sub
not
add
rol
pop
pushl
push
push
shl
push
push
pop
add
dec
sub
add
pop
shl
not
xor
pop
push
dec
add
pop
push
push
push
push
lea
push
push
lea
push
push
push
push
push
call
fistpll
rcl
xor
into
ljmp
sar
fildl
push
add
add
mov
jne
loopne
add
cmpsb
lds
in
fdivr
lcall
shrb
nop
icebp
in
push
inc
shl
lea
push
xor
add
add
add
add
sub
xor
dec
add
pop
xor
pop
push
shl
sub
add
sub
pop
pushl
push
lea
push
push
push
call
icebp
shl
mov
add
add
push
push
pop
pushf
fwait
mov
ret
add
add
testl
cltd
lds
add
push
add
aad
add
add
icebp
je
sub
pop
call
push
push
push
push
push
push
lea
push
push
call
filds
xchg
add
add
mov
clc
add
jbe
add
cmpsl
scas
add
add
lret
adcl
add
sub
pop
call
push
push
add
not
shr
push
or
inc
add
shl
shl
xor
sub
add
sub
sub
not
pop
ror
sub
add
pop
push
lea
push
push
push
lea
push
push
push
call
add
add
xchg
add
add
call
jb
je
js
xlat
addl
add
add
cmpsb
add
add
cltd
outsl
xchg
add
mov
fsts
faddl
add
fmull
nop
add
add
call
fldenv
addl
clc
loop
sub
pop
pushl
push
shl
pop
call
call
push
xor
pop
jmp
push
push
push
call
add
sub
add
faddl
sti
cltd
add
idivl
push
mov
add
sub
add
add
je
cltd
pop
add
add
add
stos
mov
push
sahf
div
xchg
mov
sub
pop
pushl
push
push
lea
push
push
push
push
push
call
jno
andl
add
xchg
add
cltd
in
jne
in
cld
add
add
outsl
lea
data16
adcb
sti
ljmp
add
add
cltd
popf
stos
pop
mov
add
in
ret
add
push
sub
pop
mov
push
rol
lea
pop
jmp
push
push
sub
sub
ror
push
push
pop
add
rol
dec
add
sub
sub
pop
shl
pop
push
shl
add
lea
not
pop
pushl
push
ror
xor
pop
call
push
push
push
lea
push
lea
push
push
lea
push
push
call
pushf
aam
rol
mov
out
add
add
push
add
add
push
outsl
mov
add
xchg
jmp
add
add
add
mov
gs
add
pop
pop
xchg
jae
clc
pop
add
lcall
add
shrb
pop
lret
xlat
push
rol
xor
dec
add
push
or
inc
add
lea
xor
sub
add
lea
dec
pop
shl
lea
not
pop
push
push
push
push
push
push
push
call
imul
out
sti
add
pop
add
mov
add
hlt
xchg
pop
lahf
in
lods
add
jb
clc
and
jle
xchg
add
add
repnz
mov
mov
xchg
pop
lea
ret
stos
push
cwtl
mov
add
add
sti
fcoms
idivb
add
sub
pop
pushl
push
rol
pop
call
push
push
push
push
lea
push
push
lea
push
push
push
lea
push
call
lea
int
repnz
jbe
jmp
iret
push
pushf
pop
mov
hlt
add
add
js
add
mov
mov
scas
movsb
add
add
cwtl
mov
add
add
call
push
xor
inc
sub
inc
pop
leave
push
lea
push
push
push
push
push
call
ficompl
jne
and
fwait
add
insb
add
fldpi
xchg
mov
pop
add
test
test
movsl
jge
add
jne
in
add
add
mov
andl
add
js
in
call
pop
push
sub
add
pop
pop
pop
push
sub
pop
pop
push
add
rol
pop
leave
add
push
ror
pop
ret
push
ror
pop
leave
ret
push
push
push
call
add
mov
movsb
data16
push
add
cwtl
xchg
into
add
fstpl
stos
add
add
xchg
xchg
push
add
jo
addr16
add
jmp
loopne
add
imul
push
push
push
push
push
lea
push
push
call
jmp
imull
out
nop
movsb
shl
mov
add
add
int
add
nop
add
cmpsb
icebp
fadds
jno
push
mov
lds
jae
add
int
pop
je
mov
add
test
out
add
add
push
jl
pop
fiadds
add
jle
mov
fidivrl
pop
mov
in
in
lcall
in
push
add
rol
pop
cmpl
jne
push
shl
pop
mov
push
lea
push
call
add
add
add
jecxz
idivl
roll
fidivs
mov
add
xchg
xchg
iret
movsb
int3
add
jmp
add
jge
add
sub
pop
jmp
push
push
push
push
push
lea
push
call
js
add
in
fiadds
notb
add
add
in
outsl
add
mov
add
add
clc
add
data16
jl
mov
jb
lcall
add
mov
fldl
add
fs
jbe
nop
lret
add
mov
icebp
loopne
in
call
mov
push
rol
pop
and
push
ror
pop
xor
xor
push
inc
pop
add
push
lea
push
call
pop
fwait
in
mov
xchg
loope
xlat
addr16
flds
je
rcl
mov
add
add
cltd
stos
add
fs
add
pop
jmp
add
test
mov
scas
add
add
add
pusha
mov
cmpsb
clc
mov
add
add
pop
mov
xchg
lcall
dec
call
push
push
push
push
call
mov
add
add
xchg
sahf
add
jecxz
mov
add
cltd
in
mov
addb
mov
movb
add
icebp
pop
add
lods
shlb
mov
iret
add
lcall
sub
push
lea
push
call
int3
out
in
push
pop
add
jne
cmpsl
add
add
xchg
int3
add
rcl
pop
add
add
loop
add
xchg
int
add
std
testl
add
add
add
add
add
loope
mov
add
xchg
add
add
stos
mov
roll
add
jmp
push
push
push
push
push
lea
push
push
push
push
call
stos
add
add
cld
jmp
pushf
jecxz
xlat
cld
les
in
add
pop
cmc
add
mov
rol
pop
add
add
add
add
enter
add
add
add
add
mov
in
fcompl
add
add
push
push
push
push
lea
push
lea
push
lea
push
push
lea
push
push
call
out
push
push
mov
nop
idiv
xchg
mov
mov
cmpl
add
add
push
loope
in
out
add
loopne
mov
fiaddl
mov
js
jecxz
in
fdivr
lcall
xor
shl
sub
pop
pop
push
push
push
call
xchg
add
loopnew
jb
add
pop
add
repnz
add
add
jne
pop
jle
add
add
add
iret
add
add
test
xchg
stos
enter
add
add
add
add
add
jge
in
hlt
lcall
jmp
push
sub
ror
not
pop
cmp
jne
push
pop
mov
lea
push
not
add
add
dec
pop
sub
push
push
push
lea
push
call
add
add
jb
pusha
add
add
cmpsb
jecxz
ret
push
rolb
add
loop
add
mov
scas
lods
jne
mov
add
mov
pop
sub
pop
mov
shr
push
ror
pop
add
push
push
push
push
push
lea
push
call
push
mov
jmp
xchg
movsb
bnd
push
lods
icebp
add
std
lretw
add
out
mov
add
out
add
push
aad
adcb
fdivs
add
add
test
cmpsl
mov
lods
sub
pop
sub
push
pop
pushl
push
shl
dec
pop
pop
shr
push
dec
ror
pop
and
sub
push
push
push
push
push
call
pop
add
add
movsl
add
mov
add
mov
loopne
add
addl
mov
add
add
add
stos
add
mov
addl
in
pop
cmp
jne
push
dec
add
dec
pop
leave
push
add
dec
shr
sub
pop
ret
push
push
shl
add
lea
pop
mov
add
push
push
push
push
push
push
lea
push
push
push
lea
push
call
jb
add
add
repnz
add
add
jnp
add
jge
add
add
add
flds
add
lcall
push
push
lea
push
lea
push
push
push
push
call
add
cmp
fdivr
push
addb
lock
out
mov
mov
mov
mov
jmp
cmpsl
push
add
add
pusha
lock
jp
out
mov
cmc
movsl
add
pop
add
pop
mov
cwtl
js
add
jae
add
bound
add
in
push
push
sub
pop
push
push
push
lea
push
lea
push
call
add
pusha
ja
rcll
pop
mov
add
mov
mov
mov
add
add
lea
cmpsb
sti
add
push
add
add
add
lcall
add
lcall
mov
push
xor
ror
pop
lea
push
push
push
push
lea
push
push
push
push
push
call
jo
add
testb
xchg
pop
push
push
mov
shll
je
loopw
add
jne
jge
nop
insb
add
add
xlat
out
push
add
rorb
lcall
ljmp
jmp
push
add
inc
shl
xor
pop
shr
add
push
push
push
call
mov
stos
fsubrp
imul
xchg
mov
stos
add
add
in
lods
mov
mov
add
popf
xchg
lcall
fsubrs
xchg
insb
sti
mov
add
add
add
shll
fwait
addb
add
fcompl
pop
or
ljmp
notb
faddl
fisttps
pop
mov
push
shr
pop
and
push
dec
add
pop
rol
push
push
lea
push
push
push
push
call
add
leave
fs
push
xchg
cld
add
stc
add
fldl
add
add
xchg
jp
aam
jno
cmc
add
add
add
movb
jnp
add
sub
pop
rol
push
sub
ror
pop
xor
push
rol
lea
pop
inc
push
push
push
push
call
jmp
pop
jecxz
add
repnz
push
mov
testl
test
test
addb
mov
add
test
call
popf
add
add
sub
pop
cmpb
jne
add
push
push
push
push
push
push
push
call
clc
bnd
mov
add
xchg
add
cmpsl
add
mov
add
popa
test
pushf
fimuls
ret
in
add
flds
mov
jns
add
jl
add
push
mov
sub
pop
cmp
je
push
sub
sub
dec
pop
add
push
push
push
push
lea
push
push
push
lea
push
lea
push
push
call
movsl
mov
imul
add
cltd
add
add
andl
push
addb
lret
xchg
pop
hlt
xchg
jo
mov
out
push
shr
stos
aam
lcall
xchg
add
hlt
sub
pop
cmpl
jne
xor
push
sub
add
rol
add
pop
pop
pop
push
rol
rol
pop
pop
pop
push
push
push
lea
push
lea
push
lea
push
lea
push
push
push
call
popf
fs
push
cmc
add
pop
jl
stos
xchg
add
fiaddl
add
mov
add
add
mov
xchg
rolb
mov
add
add
push
jge
shl
add
lahf
add
leave
add
add
add
popf
test
add
mull
mov
in
fdivr
lcall
leave
push
not
pop
ret
push
lea
push
push
push
lea
push
lea
push
push
push
call
outsl
add
add
fstl
hlt
add
add
in
arpl
enter
arpl
add
add
jbe
jno
cli
jnp
xchg
imul
jae
add
add
push
imul
xchg
add
mov
sub
pop
mov
push
rol
add
pop
add
push
push
shr
shr
lea
pop
push
add
push
lea
push
push
push
push
call
pop
push
popa
add
add
cltd
insb
js
in
mov
cwtl
fidivs
lret
add
xchg
addl
fidivs
js
in
push
mov
int
lods
into
cmpsb
add
mov
inc
js
add
add
icebp
add
testb
pop
mov
push
xor
xor
pop
testw
push
push
call
lret
ljmp
fdivrs
add
jp
add
add
fisubrs
pop
mov
add
sahf
add
mov
add
add
add
lret
add
add
add
mov
add
mov
push
add
out
lret
sub
pop
pop
push
ror
add
not
pop
pop
mov
push
lea
pop
push
push
pop
call
push
lea
push
push
push
lea
push
push
push
push
lea
push
lea
push
call
imul
xchg
add
sbbb
add
int3
addr16
je
or
cwtl
fidivrl
nop
test
stc
xchg
add
add
add
arpl
jb
sub
mov
add
test
shll
add
add
je
ret
bound
sub
pop
xor
pop
push
push
lea
push
lea
push
push
push
push
call
mov
jl
fistpl
jno
jge
pushf
add
push
test
add
jp
int3
add
add
leave
add
mov
cltd
in
xchg
add
fs
test
shlb
xchg
imul
xchg
add
sub
pop
pop
pop
push
push
push
push
lea
push
push
push
push
push
call
xchg
out
add
add
lods
add
add
add
add
pushf
lret
test
add
add
lods
xchg
add
popf
lock
cmpb
adcl
test
leave
add
add
add
mov
mov
push
pop
pop
pop
push
not
pop
leave
push
push
push
call
add
add
into
add
mov
loopne
add
out
xchg
add
add
in
ja
mov
addl
loopne
add
arpl
add
movl
ret
add
jno
pop
sub
pop
ret
push
push
push
push
lea
push
push
push
push
call
mov
test
add
add
jp
add
mov
push
pop
lds
push
add
add
add
add
int
hlt
xchg
add
add
add
mov
add
std
xchg
add
cmc
ret
add
imul
ja
cmpsl
jl
mov
add
in
push
lea
push
push
lea
push
lea
push
lea
push
call
in
add
jo
cmpsl
add
mov
add
cmpl
add
loop
jge
xchg
add
clc
loop
sub
pop
add
push
push
lea
pop
push
push
push
push
push
push
push
call
aam
lods
add
add
sahf
mov
push
mov
add
mov
xchg
ja
leave
add
movsb
add
flds
in
mov
add
std
cltd
clc
clc
ficompl
push
fwait
scas
add
addl
push
push
push
push
push
push
call
mov
mov
add
add
add
lods
jo
je
lahf
lret
add
mov
scas
stos
int
mov
mov
je
shll
xchg
add
into
roll
xchg
add
scas
add
mov
add
add
add
push
xchg
stos
insb
xchg
nop
shll
push
xlat
push
in
call
push
push
push
push
push
push
call
pop
add
add
add
out
add
xlat
rclb
lret
mov
add
jbe
add
out
hlt
mov
movsb
add
pop
add
add
sub
pop
push
pop
push
push
push
push
push
push
call
cld
jb
jl
loope
push
arpl
andl
pop
stos
cmpsl
xchg
mov
lods
add
xchg
movsb
add
call
push
push
push
push
push
push
call
test
pop
xchg
ficoms
add
popa
add
mov
add
push
test
pusha
mov
lds
out
test
add
add
mov
add
mov
push
add
in
push
add
je
icebp
rolb
add
les
call
sub
push
push
push
lea
push
call
mov
mov
shrl
stc
fidivl
jne
add
ret
js
fwait
data16
add
mov
mov
add
add
add
int3
test
sti
add
jmp
push
add
add
nop
add
icebp
add
add
jmp
pop
mov
push
push
push
lea
push
push
push
push
push
push
push
call
add
add
push
pop
add
add
jne
add
lret
jne
push
cmc
clc
add
cli
mov
add
lret
iret
cld
addl
adc
fimull
fstps
fimull
ret
pop
add
pushl
push
inc
add
sub
pop
popl
push
add
add
xor
pop
mov
add
push
lea
push
push
push
call
les
add
lds
jns
addr16
shrb
imul
mov
add
add
add
fs
add
add
add
fxch
add
pop
add
xlat
fisubl
sahf
jb
add
les
pop
addb
in
lock
lcall
notb
lea
mov
push
lea
push
push
push
call
add
xchg
push
cwtl
add
jno
add
mov
add
add
fsts
in
pop
popf
add
pop
addb
sub
pop
add
push
add
not
pop
xor
push
push
push
push
push
push
push
lea
push
push
call
fs
pop
xlat
fsubp
loopne
in
mov
jnp
fsub
mov
clc
lock
aad
les
movsl
mov
outsl
add
add
divl
fbld
mov
pop
add
add
enter
add
imul
add
test
rolb
push
push
call
clc
imul
add
push
in
not
xchg
mov
add
add
mov
lret
add
out
push
fiaddl
lds
add
bound
mov
add
faddl
add
nop
push
push
call
add
xchg
add
imul
mov
jbe
jecxz
jnp
add
rolb
test
add
mov
add
clc
lcall
xor
push
push
push
push
push
push
push
lea
push
lea
push
push
call
sti
mov
add
loopne
testb
lea
rolb
jecxz
addl
add
add
mov
test
addl
test
subl
add
mov
insb
hlt
loopne
int
add
jns
add
mov
movsb
xchg
in
loop
pop
xchg
lret
test
sub
pop
nop
push
xor
sub
pop
nop
push
push
push
call
andb
push
add
add
add
stos
popf
addl
push
mov
iret
add
pushf
popl
stos
xchg
add
mov
loope
add
add
imul
arpl
add
lret
std
push
mov
in
hlt
lcall
nop
push
sub
pop
nop
push
lea
push
push
push
push
lea
push
push
push
push
push
call
add
mov
cltd
lret
jno
xchg
add
jp
in
test
leave
cwtl
ret
add
into
test
arpl
add
lcall
cmp
jne
push
push
lea
push
call
push
out
add
addb
mov
fldl
push
scas
add
imul
pushf
mov
jns
ljmp
add
add
iret
scas
xchg
add
fnstsw
scas
mov
fiadds
add
faddl
shr
add
jl
add
pop
add
add
mov
xlat
test
and
add
mulb
sub
pop
add
nop
push
add
inc
pop
nop
push
push
push
call
fwait
hlt
mov
jae
lock
add
outsl
mov
mov
add
iret
add
mov
add
stc
add
pusha
jo
mov
add
fiadds
aad
mov
iret
add
push
push
jmp
mov
add
sub
pop
cmp
je
push
push
push
push
call
add
in
add
push
popl
add
pop
add
add
xchg
lret
enter
add
mov
add
add
xchg
popl
add
push
xorb
add
jae
mov
lahf
jl
in
lock
nop
nop
push
shr
shr
inc
add
pop
inc
push
push
push
push
lea
push
lea
push
push
push
push
push
call
add
push
add
loopne
add
add
push
add
add
add
popf
int3
shlb
test
add
fdivr
lcall
push
dec
xor
pop
nop
push
push
call
pop
mov
cwtl
add
add
add
push
add
mov
loop
add
imul
ljmp
cltd
add
add
movsl
ret
add
jp
clc
mov
pop
ljmp
mov
std
add
cmpsl
int
pop
jecxz
lret
add
xchg
insb
sub
pop
cmp
jb
push
push
push
push
push
call
add
add
movsl
mov
icebp
add
lock
add
mov
push
xchg
lock
popf
ret
add
add
rcrl
mov
push
mov
sub
pop
xor
push
add
sub
lea
sub
pop
jmp
push
lea
pop
mov
push
push
push
push
push
push
push
push
call
xchg
fdivs
add
call
jb
add
subb
pushf
test
mov
add
mov
loopne
add
push
push
push
push
push
push
push
push
call
test
add
popl
add
xor
add
add
ret
add
sahf
jbe
push
ja
jnp
lods
addb
add
xchg
call
add
lock
loopne
ret
addb
roll
lcall
mov
jb
push
push
call
cld
mov
xchg
add
popa
je
mov
mov
sahf
push
pusha
les
rolb
stos
fldl
clc
fdivs
std
push
mov
mov
fiadds
add
xchg
push
add
add
add
popf
xchg
lock
int3
outsl
shrl
jge
in
hlt
lcall
inc
sbb
dec
dec
xor
pop
add
push
shl
pop
mov
push
sub
pop
xor
push
xor
pop
xor
shl
push
shl
pop
xor
push
push
push
push
call
add
mov
mov
and
add
mov
cltd
cmpsb
into
test
xchg
in
add
add
add
add
lock
lcall
loope
push
inc
xor
ror
pop
xor
push
inc
pop
shl
push
not
lea
ror
add
pop
xor
mov
push
push
push
push
call
push
mov
subl
fldl
mov
jmp
int
rcll
xchg
add
xchg
loopne
push
stos
jecxz
pop
popa
mov
jb
jnp
add
add
pusha
add
add
mov
lock
add
push
not
add
pop
pop
push
xor
sub
pop
pop
pop
push
push
push
push
push
lea
push
push
lea
push
push
push
call
pop
mov
add
push
test
add
add
add
fiaddl
add
lcall
add
mov
mov
jge
xchg
add
in
fcomps
push
ror
pop
leave
ret
push
push
lea
push
push
lea
push
lea
push
push
lea
push
lea
push
call
in
mov
leave
lahf
push
mov
add
add
filds
add
je
jno
lods
call
pop
add
cmpsb
repnz
je
out
loop
add
jmp
jbe
mov
add
jo
out
sarb
push
out
push
faddl
lods
add
mov
push
push
push
push
call
test
add
mov
outsl
leave
add
pop
add
add
pop
add
add
jbe
clc
fadds
movl
push
icebp
pop
pop
int
test
faddl
mov
jge
add
add
lds
lcall
add
jmp
in
mov
roll
push
add
sub
pop
mov
push
push
lea
push
lea
push
push
push
lea
push
push
push
push
call
fldl
add
mov
lcall
movl
pushf
mov
xchg
add
popl
lds
clc
pop
into
fcoml
pop
mov
int
jl
jne
mov
mov
out
add
add
mov
fldl
fcomps
push
push
push
push
push
lea
push
push
push
push
call
push
insb
lcall
in
add
add
je
subl
mov
add
add
frstpm(287
add
scas
add
push
sub
pop
push
push
rol
shr
pop
push
push
dec
shl
add
pop
mov
mov
push
shl
pop
mov
test
je
push
lea
push
call
addl
lea
loope
push
add
in
roll
cld
mov
cmpb
mov
je
add
outsl
add
push
add
int3
shll
add
xlat
fldl
jno
test
je
push
rol
pop
mov
push
lea
pop
mov
mov
push
push
lea
push
push
push
push
push
push
call
jmp
lahf
mov
hlt
test
add
add
into
add
add
add
pop
xchg
movsb
gs
in
in
loopne
inc
push
push
call
cld
repnz
rolb
scas
data16
shlb
imul
and
mov
jmp
loope
add
std
addb
mov
sarl
xchg
rolb
mov
clc
lcall
rorb
test
add
test
je
push
push
lea
push
call
add
add
jecxz
jl
jnp
fs
add
push
mov
add
cltd
mov
add
push
mov
loopne
int3
popf
movl
imulb
repnz
inc
push
push
push
lea
push
push
call
add
lahf
add
test
jle
add
mov
add
add
mov
add
mov
jnp
push
add
add
add
jbe
int
mov
pop
mov
push
add
enter
lcall
in
lcall
rorb
test
rorb
cmp
call
jecxz
dec
add
add
add
aad
lcall
cli
lds
push
pusha
add
add
pop
lea
add
add
add
into
pusha
addl
roll
add
add
jl
stos
mov
mov
cmpsl
xchg
mov
pop
xor
push
lea
push
push
push
push
call
test
sbbb
push
add
xchg
add
add
add
jo
add
lds
xchg
out
xchg
addb
mov
jmp
mov
mov
lahf
add
add
aad
rolb
fwait
hlt
xchg
push
jns
fisttps
pop
push
add
shr
pop
pop
push
not
shl
add
sub
pop
pop
push
pop
pop
leave
push
sub
pop
ret
push
push
push
push
lea
push
push
call
add
add
add
pop
sti
movsb
xorl
int3
add
add
xchg
mov
add
mov
add
cltd
out
fiadds
loopne
pop
popa
add
cmc
xchg
sti
mov
push
mov
pop
in
lcall
push
popa
add
mov
call
in
call
mov
push
xor
not
shr
xor
pop
inc
cmp
jne
push
rol
xor
pop
lea
push
push
lea
push
push
push
lea
push
push
lea
push
push
push
call
add
test
jl
add
repnz
pop
xorl
out
into
data16
fiaddl
stos
add
repnz
outsl
add
jecxz
add
popa
add
ret
test
je
push
sub
add
pop
mov
add
push
xor
shr
add
pop
cmp
jne
push
push
push
push
push
call
call
jne
mov
ret
add
jecxz
out
jl
xchg
lret
in
cltd
call
repnz
xchg
arpl
mov
add
rolb
add
rcl
fs
add
mov
push
mov
call
xchg
subl
out
mov
lcall
inc
add
add
push
push
lea
push
push
push
push
push
lea
push
lea
push
push
call
add
filds
add
lret
add
push
cltd
ja
add
add
sbbb
in
cmc
jl
jne
test
stos
mov
mov
add
add
mov
add
out
mov
lcall
callw
lds
pop
pop
add
push
lea
shl
pop
cmp
je
push
push
push
push
push
push
call
int3
lret
jmp
stos
stos
jge
add
popa
mov
stos
xchg
lods
add
idivl
fucomp
in
faddl
add
add
add
add
add
sub
pop
jmp
push
push
call
add
mov
pop
jne
mov
mov
insb
add
jo
out
add
ja
add
add
lcall
mov
jns
mov
lcall
add
mov
xchg
fwait
xchg
add
add
out
fs
clc
pop
xor
pop
push
push
push
push
lea
push
lea
push
lea
push
push
call
sub
add
fcompl
mov
add
mov
add
rolb
jo
aam
sahf
movsl
mov
icebp
add
add
mov
add
add
testb
cmpsl
sub
pop
pop
push
push
push
push
push
push
call
add
out
xchg
aam
jl
add
add
iret
loopne
test
add
add
pop
pushf
add
call
out
int3
add
pop
pop
leave
push
ror
rol
dec
pop
ret
push
lea
push
push
push
push
push
push
call
lahf
add
jmp
test
mov
add
rcrb
pop
test
add
lcall
mov
add
jo
jp
add
add
mov
movsb
add
add
add
push
add
insb
imul
add
roll
pop
je
in
in
lea
push
push
lea
push
push
push
push
push
push
call
add
lahf
cmpsb
add
add
sahf
xchg
xchg
add
xchg
rcll
add
add
imul
mov
imul
aad
fildl
enter
add
mov
jecxz
out
push
add
stos
push
into
cli
add
pushf
icebp
add
add
out
add
mov
lcall
pop
push
push
push
push
push
push
push
push
lea
push
push
call
add
mov
add
out
imul
ret
fildl
jp
add
out
in
pop
in
addr16
add
add
imul
pop
jne
out
xchg
cwtl
jo
add
lea
in
fcomps
pop
push
ror
pop
leave
push
push
push
call
pop
add
js
mov
add
add
enterw
cmpsb
add
jp
add
add
add
add
lock
cld
fildl
or
push
shl
add
add
not
pop
mov
pop
push
lea
push
push
lea
push
push
push
push
call
mov
add
jae
lods
cli
add
add
rcll
add
shr
flds
xchg
aad
fildl
sub
pop
pop
pop
push
lea
shr
pop
pop
push
push
lea
push
push
lea
push
push
lea
push
call
test
add
push
add
add
add
ret
js
jecxz
mov
hlt
add
mov
add
add
add
ffree
hlt
add
push
pushf
scas
addr16
mov
ret
gs
add
pop
mov
mov
test
sti
test
add
pop
test
mov
add
add
sub
pop
leave
push
lea
push
push
push
lea
push
call
jle
add
fcmovne
jecxz
add
cli
call
push
add
pop
add
cwtl
cmpsb
loope
add
fs
mov
imul
mov
add
sub
pop
ret
test
jae
lock
jo
test
jb
lock
jae
jbe
jae
and
jae
test
jae
fs
add
mov
mov
ret
pop
mov
out
ljmp
shrl
jge
inc
outsb
out
mov
sbb
fwait
imul
repnz
cmp
and
stos
lret
in
or
cmovae
gs
lds
mov
insl
ja
xor
ljmp
jo
dec
adc
repnz
arpl
andb
inc
insb
add
push
in
mov
loopne
imul
ret
ret
ds
inc
ror
rdtsc
dec
fdivrs
sbb
lock
scas
xchg
test
lds
push
repnz
in
movsb
ficomps
cmpl
sub
mov
mov
popa
cltd
or
int
and
sub
inc
inc
iret
pop
push
outsb
and
add
xor
lcall
mov
scas
cmc
dec
into
push
cmp
pop
jo
jge
out
aam
gs
xchg
loop
cwtl
jno
xor
dec
sub
out
loopne
pop
aas
pop
data16
ja
mov
push
popf
fdivrs
lea
popa
mov
pusha
imul
fmull
imul
sub
pop
movsb
or
cmp
mov
push
mov
mov
push
xor
stos
jp
push
pusha
push
popf
fcmovu
imul
cli
xchg
pop
lret
mov
aas
sbbb
loope
adc
lea
mov
inc
repnz
mov
mov
enter
leave
repnz
push
lret
push
rcrb
insb
rolb
test
and
pushf
cmp
mov
and
cs
pop
jecxz
jns
fmuls
or
add
imul
dec
mov
pop
inc
subb
test
ljmp
mov
pushf
jno
cmp
stos
push
mov
push
clc
add
sub
adc
sbb
cltd
cli
nop
sbb
mov
mov
fisubl
mov
pop
inc
lahf
or
popf
addl
jecxz
ljmp
pushf
insl
jecxz
xor
fwait
cmp
mov
xor
push
jb
and
ret
xchg
in
insl
xchg
add
add
push
fcomp
and
add
mov
scas
mov
cmp
jae
test
push
push
mov
in
outsb
scas
and
lock
mov
xor
loop
clc
mov
out
test
roll
cmp
or
int3
xchg
sub
push
in
rorl
sub
ja
xor
or
in
test
mov
jae
arpl
mov
shlb
push
fsub
push
unpcklps
mov
in
sbb
fs
filds
xor
push
mov
in
popf
stc
repz
pusha
sbb
inc
int3
jge
lock
xchg
lea
jmp
dec
daa
imul
aad
dec
adc
mov
shl
cmp
std
movsb
or
lock
stos
pop
mov
add
out
repnz
orb
sahf
inc
push
inc
jbe
jnp
js
mov
divl
das
loope
test
sti
sbb
mov
push
xor
mov
ss
or
sub
sub
inc
inc
lods
mov
sub
cmpsb
nop
and
ret
or
jecxz
fcomps
icebp
xchg
pop
and
in
out
mov
lods
adc
dec
repnz
stos
mov
mov
mov
lahf
arpl
ss
lods
mov
xchg
mov
jge
cs
in
pop
cmp
sub
and
xor
aas
enter
loop
push
sbb
mov
lods
cmp
movsl
pop
mov
fwait
pop
push
nopl
into
int3
int
mov
adc
sub
gs
mov
pop
dec
ret
je
aaa
sbb
xor
out
negl
inc
adc
jge
ljmp
hlt
sbb
loop
sub
aaa
pop
pop
mov
pop
inc
ljmp
sbb
stos
or
jb
in
idiv
inc
lret
es
cmpb
stos
or
mov
add
mov
fwait
pop
or
fdivl
or
mov
cmpsb
test
dec
cmp
test
movsl
jp
ret
cmp
aad
aad
ret
cld
mov
out
dec
push
paddsw
push
push
mov
adc
jle
lods
jl
movsl
mov
jbe
insb
jg
xor
mov
leave
sbb
mov
iret
daa
shl
inc
add
and
movsb
mov
push
loop
add
mov
out
addr16
pushf
fwait
mov
ss
sbb
adc
loopne
pop
ffree
fistps
sub
cmp
push
dec
clc
popa
xor
nop
aas
lret
push
xchg
jle
xor
icebp
jl
repz
xchg
leave
js
hlt
out
mov
adc
subb
popf
jo
out
xchg
cwtl
cltd
imul
shrl
and
nop
fsubl
dec
loope
xlat
mov
out
cmpsl
pop
push
add
cmp
es
mov
add
int3
test
adc
lea
mov
pop
lods
scas
fninit
jo
jl
loopne
imul
jmp
sub
and
inc
dec
lcall
mov
ss
sbb
mov
add
cmp
jl
mov
push
out
ret
cltd
cmp
push
repz
add
sbb
and
out
or
fs
mov
js
cmp
mov
jns
ret
mov
xchg
mov
orb
stos
dec
and
fs
in
or
lret
cwtl
insl
rclb
inc
test
xchg
mov
testb
icebp
mov
pushf
lret
mov
mov
sub
cs
arpl
or
je
in
sub
jl
inc
jmp
aam
push
lret
lea
scas
sub
and
dec
jl
and
fldt
ss
mov
push
or
movsl
shrl
inc
xor
xchg
and
dec
adc
xchg
shl
and
lahf
push
rcr
or
jns
dec
outsb
mov
lods
sbb
jmp
mov
and
xchg
cmp
int3
adcb
xor
inc
addb
test
push
sub
or
pop
sbb
and
ret
les
add
mov
inc
or
int
cltd
stos
pusha
xor
loop
stc
or
mov
mov
dec
inc
lds
jae
out
mov
jno
addb
aas
push
xchg
xlat
std
in
mov
fadds
cli
sahf
jecxz
scas
cmc
ficomps
xchg
fcom
fs
fwait
mov
std
push
inc
sub
test
out
mov
mov
pop
cltd
pusha
mov
xchg
fwait
pop
inc
mov
mov
inc
and
int
ffree
and
dec
sub
adc
cwtl
xor
sub
lahf
inc
sub
sbb
int
or
adc
gs
xchg
mov
scas
mov
idivl
movsl
mov
into
adc
mov
repz
mov
leave
push
inc
push
or
jo
or
loope
pop
lea
xor
loop
xchg
outsl
cwtl
pop
out
or
es
inc
das
lcall
bound
out
ljmp
js
stc
mov
int
xchg
pop
out
ficompl
lret
jmp
andb
shrb
push
cmpsl
scas
xchg
dec
test
pop
js
mov
rorl
sbb
push
loope
jl
adc
pop
enter
stc
mov
sub
cld
hlt
xchg
sub
cmp
jo
fcomps
add
in
jge
js
inc
xchg
rclb
ret
ja
inc
cmp
mov
cmp
mov
xchg
movsb
jae
sbb
and
nop
incl
test
aas
mov
inc
testl
dec
ljmp
scas
mov
movsb
xchg
sub
xlat
aam
arpl
loopne
lea
fwait
mov
cmp
es
pop
adc
mov
sti
pop
dec
push
stos
dec
adc
xchg
fldl
sub
or
cmp
jmp
or
jp
cmpsb
sub
stos
adc
mov
sar
imul
sbb
cmp
push
imul
and
stos
ss
or
push
sbb
add
arpl
ret
push
inc
or
lahf
dec
jns
push
iret
jmp
jg
neg
xchg
hlt
sub
cltd
fdivrl
dec
mov
push
xchg
data16
and
bound
adc
cmp
mov
inc
out
adc
insb
xchg
mov
sub
mov
xchg
add
add
mov
gs
sub
subb
scas
inc
adc
pop
mov
adc
fsubrs
inc
inc
orl
test
or
fdiv
mov
cmp
xor
adc
jl
int3
popf
inc
xor
cmp
sbb
xor
mov
lret
sub
xchg
add
adc
loop
push
inc
xlat
pop
mov
adc
fiadds
sub
rcll
xchg
shl
fildl
pop
cs
imul
lcall
cmp
xchg
repz
mov
loope
pop
xor
rep
push
enter
mov
xchg
es
in
sub
test
lock
mov
cli
int3
xlat
mov
icebp
loope
mov
push
mov
outsb
mov
and
fwait
sahf
xor
mov
outsb
imull
xchg
mov
clc
pop
lahf
aas
pop
jnp
jecxz
mov
test
lds
mov
rcrl
cmp
adc
enter
jmp
fs
jmp
push
in
sbb
int
sbb
mov
sarl
ss
sahf
mov
lcall
sbb
adc
in
pmuludq
popf
mov
adc
jle
inc
ss
icebp
cmpsl
call
mov
mov
arpl
lods
add
pop
push
mov
xchg
std
add
mov
inc
sub
loope
inc
lahf
arpl
mov
sti
sub
test
pop
jns
int
testl
out
xlat
or
call
sbb
imul
pop
sub
sahf
push
lods
mov
movsb
sar
es
popa
inc
aad
outsb
sbb
adc
repnz
into
test
pop
lods
loope
add
pop
pop
jno
addl
lock
or
iret
jge
arpl
mov
loop
ja
nop
push
adcl
push
cli
test
push
test
icebp
repz
adc
xor
pop
imul
pop
cmp
mov
add
inc
notl
dec
and
mov
insb
pop
cmpsb
xlat
pop
dec
stc
mov
xchg
and
jecxz
fidivrs
iret
ja
cmc
in
lods
or
repnz
enter
xor
wrmsr
adc
aas
rolb
add
xorl
in
or
sub
xlat
inc
sub
stc
test
es
mov
cwtl
pop
inc
mov
and
leave
rcrb
fidivrs
sbb
pop
sti
xchg
mov
mov
mov
xlat
push
cmc
outsb
inc
push
dec
cld
or
sub
xchg
arpl
push
scas
es
mov
mov
lods
call
rcrb
in
ret
or
xorl
movsl
popf
inc
jne
push
add
mov
and
in
cmp
inc
insb
lcall
sub
faddl
ss
cmp
mov
sbb
pushf
addr16
jno
out
rcrl
pusha
jns
inc
adcl
mov
mov
shll
mov
inc
sub
out
jl
lcall
lret
push
fisubs
pop
inc
xchg
xchg
dec
mov
sti
pop
xchg
jbe
inc
bound
jbe
or
lahf
gs
sbb
push
adc
push
fcomps
mov
mov
ss
int
ljmp
lret
cltd
call
out
jae
pusha
mov
add
jns
mov
dec
pop
int
popa
mov
rdtsc
mov
xchg
push
addr16
pop
pop
es
notl
xor
stc
jne
jno
fwait
cmp
xor
aas
into
mov
push
jae
adc
mov
xlat
sbb
xchg
shll
cmp
xchg
xchg
xchg
adc
popl
mov
add
cmc
pop
pop
data16
push
cmp
inc
dec
stos
lods
jge
sbb
push
and
jle
mov
dec
loope
test
leave
mov
roll
fucomip
push
das
jg
icebp
ljmp
inc
iret
push
stc
sbb
sbb
xchg
xor
pop
adc
imul
testl
xchg
sub
inc
lods
fadds
and
cmpsb
adc
mov
std
pop
adc
xor
or
popf
adcb
and
sub
aas
adc
push
pop
and
aam
jg
jno
and
sti
insl
rcll
sbbb
xchg
dec
and
and
or
stos
mov
imul
adc
mov
mov
inc
and
lret
add
fcmovnbe
add
xor
pop
test
sub
out
or
add
pop
cwtl
cs
in
imul
clc
sub
fisubs
xchg
and
test
mov
push
pop
outsl
sub
sbb
inc
aas
clc
addb
lods
xchg
aaa
jae
int3
lock
cltd
jp
in
push
mov
addb
dec
daa
scas
jle
add
cmp
andb
dec
in
mov
les
or
xchg
pushf
or
movb
add
push
test
fwait
outsb
scas
in
es
mov
pop
dec
xlat
jbe
rcl
mov
jnp
sbb
xorl
fistl
jl
sahf
dec
mov
call
icebp
lret
xor
cmc
lahf
loope
iret
ss
popa
fcomp
stos
outsl
xor
sahf
andl
lock
sub
sbb
fdivs
ficoml
sbb
loopne
cli
sahf
inc
out
xor
loope
ss
loopne
jbe
adc
fcompl
stc
fistl
xchg
es
xchg
adc
sub
pushf
mov
rcll
push
push
fcmovb
inc
or
xchg
mov
mov
push
xor
dec
add
insb
mov
push
fdivrl
jmp
cwtl
mov
xchg
mov
sub
cwtl
or
inc
fstpt
out
stc
shrl
mov
cmpsb
xchg
repnz
rolb
jle
mov
into
ror
xor
push
shll
inc
fbstp
cmp
or
lret
mov
inc
std
in
hlt
outsl
fsub
or
fprem
cmp
hlt
movsb
add
divb
mov
imul
jl
lret
mov
fs
icebp
jp
mov
out
xchg
fdivrl
dec
sub
movsb
in
xchg
sbb
mov
dec
iret
dec
dec
stc
mov
mov
dec
orb
mov
inc
fistpll
loop
nop
sahf
push
jne
rcr
lahf
fmuls
mov
jl
add
pop
pop
es
jno
imul
dec
popa
pop
inc
mov
outsl
sub
push
fiaddl
mov
mov
ja
lcall
fsubs
mov
dec
movsl
mov
jae
dec
dec
sbb
aad
add
jo
fstl
pop
lret
iret
lods
fnstenv
popa
inc
pop
sahf
mov
adc
ss
stos
test
lea
push
fists
lcall
daa
dec
xchg
out
lret
inc
jecxz
adc
loope
and
ret
inc
nop
stc
mov
cmp
ror
mov
add
fcmovb
adc
out
lds
cli
aaa
outsl
jne
cmp
add
test
loope
adc
adcl
add
xchg
add
inc
je
insl
ret
cmp
lahf
push
pop
jb
fidivs
test
pop
out
jmp
jb
and
or
xlat
pop
mov
lret
dec
pop
aam
mov
mov
dec
lahf
mov
popf
adc
add
jnp
data16
cltd
mov
decl
stos
jl
or
pop
mov
pop
loop
nop
int3
stos
repz
add
push
xor
ljmp
pop
or
xor
jge
or
add
mov
xor
mov
sti
sahf
sub
inc
jb
cmc
ljmp
or
adc
aad
xchg
es
and
les
pop
mov
adc
sbb
inc
mov
rol
enter
mov
add
je
xchg
dec
out
pop
mov
adc
imul
and
scas
ljmp
bnd
xchg
add
push
subl
inc
xchg
divl
fcoms
adc
mov
out
out
inc
mov
mov
xchg
pop
mov
cwtl
and
cmpsl
data16
fildl
dec
cmpsl
cmc
cmp
cmp
push
xchg
fildl
mov
leave
push
test
push
mov
std
xor
pusha
cltd
and
push
aas
stos
xor
or
xchg
fnstsw
jge
movsb
sbb
arpl
pop
prefetchnta
mov
lods
dec
push
sub
stc
jp
xor
mov
fidivl
add
outsl
std
jbe
outsl
mov
jmp
push
inc
lock
dec
shll
add
fwait
sub
popf
push
enter
jle
or
std
fisttpll
cwtl
out
push
jno
mov
aam
xor
ljmp
outsl
jae
addr16
fidivrs
inc
or
js
jg
rcl
scas
fwait
and
dec
les
arpl
pusha
sbb
xchg
dec
jmp
jae
test
into
rcrb
outsl
xchg
and
daa
inc
test
in
sbb
clc
inc
pushl
pushf
and
pop
in
stos
fcomip
pop
pop
into
push
mov
adcl
leave
mov
insb
popa
xchg
push
mov
inc
lcall
movb
or
xchg
dec
fnstcw
cmpsb
loopne
xor
iret
push
jbe
xchg
xchg
inc
sub
push
jb
cmpsb
sub
out
fistpll
dec
sbb
mov
xchg
daa
imul
inc
lods
adc
adc
sbb
lret
sarl
int
enter
je
js
xchg
ret
push
sub
xlat
push
lret
std
and
sti
dec
lret
clc
push
sub
push
mov
call
scas
pusha
pop
clc
frstor
add
movsb
out
fs
std
add
out
lcall
pusha
or
sbb
out
movsl
jle
mov
dec
and
out
mov
xchg
dec
inc
ret
scas
xor
loope
int
test
aam
dec
movsl
and
dec
xchg
int
jbe
inc
loope
or
pop
mov
adc
sbb
dec
test
jno
std
push
cmc
inc
sub
cmpsl
fbstp
add
pop
out
adc
repz
stc
mov
cld
jns
mov
cmp
ret
or
cmp
or
cwtl
mov
rolb
hlt
movsl
sub
out
sub
xor
mov
subb
fcoms
xchg
test
decb
sti
lods
lods
sub
add
fldenv
adc
sbb
cld
and
insl
adc
outsl
jle
add
adc
pop
push
dec
sbb
dec
jg
lea
data16
cs
imul
movsb
push
ja
int3
pop
dec
fs
ror
sbb
sahf
ret
sahf
lcall
cmpsb
or
jmp
push
mov
mov
lock
movsl
xchg
dec
repz
jecxz
push
push
jo
shlb
xorb
inc
adc
pop
pop
cltd
lret
mov
pop
mov
lock
scas
loope
mov
cli
and
mov
lods
cwtl
and
jmp
adc
add
aad
fmull
sbb
pop
iret
popf
icebp
sub
stos
pop
mov
xchg
xor
popa
int3
sbb
mov
mov
pop
scas
repnz
push
inc
inc
pop
mov
stc
mov
pop
leave
xor
adc
dec
cmc
lods
mov
cmc
insb
push
sub
gs
and
mov
or
push
mov
stos
ret
mov
xor
ds
jne
and
insb
fldt
inc
fimull
sbb
loop
sub
xor
int
mov
dec
or
pop
or
jno
jae
movsb
pop
out
lods
repz
push
popf
add
pop
push
out
sub
std
inc
cli
pop
pop
movsb
xor
adc
and
aas
stc
jl
mov
ja
mov
test
sbb
jle
sub
adc
xor
mov
test
scas
xchg
jns
push
fsubp
jmp
adc
js
pusha
adcl
shl
aad
adc
pop
add
mov
lock
aam
cmp
outsb
mov
cmc
mov
xorl
mov
fisttpl
fdivrl
shll
jae
or
orb
aam
jns
loope
pop
paddsb
adcl
xchg
jp
hlt
filds
dec
inc
push
dec
movsl
push
jge
leave
icebp
hlt
es
clc
inc
les
mov
mov
cmp
pop
in
jl
jge
sbb
sub
jnp
orl
js
mov
repnz
push
mov
adc
dec
lea
out
pop
in
sub
gs
push
out
fldl
mov
dec
stc
ljmp
pushf
lcall
es
sbb
mov
pop
add
cmpsb
sbb
lahf
mov
mov
cmp
xor
popf
dec
ds
cltd
lret
je
adc
pop
xor
pop
and
out
imul
arpl
sbb
mov
add
out
shll
lock
push
aam
jp
shlb
fdivrs
call
fisubrs
mov
mov
sub
dec
push
pop
dec
je
mov
add
movsb
sahf
add
or
int3
movsl
movsb
inc
add
adc
mov
aas
sahf
adc
xchg
jne
jecxz
sub
adc
push
mov
gs
pop
loope
lcall
mov
dec
mov
pop
rclb
iret
pop
pop
lods
add
add
mov
je
lcall
loope
cmp
data16
pop
add
sbbb
jmp
dec
mov
rcrl
popa
arpl
in
js
xchg
add
mov
fbstp
cmpsb
cmp
mov
popf
out
imul
xchg
hlt
loop
add
loope
repz
call
arpl
roll
cs
std
jmp
das
add
sub
das
push
pop
cmp
mov
pop
pop
scas
cmp
cmp
xor
daa
and
jo
mov
jo
repnz
xor
jecxz
pop
or
xlat
into
pushl
fucomi
jge
cmp
test
dec
pop
xor
gs
jmp
xor
dec
pop
test
jns
lea
test
hlt
test
xlat
ljmp
adc
xor
jno
outsb
lock
sbb
out
sub
shrb
inc
jl
adc
adc
push
lea
mov
jo
xchg
jns
les
and
pop
mov
inc
inc
mov
add
sub
xchg
mov
ja
push
mov
test
jl
out
jp
inc
push
aas
enter
sbb
int3
jnp
enter
jb
fsubs
mov
scas
push
daa
jae
enter
xor
push
lea
adc
jo
jo
pushf
rcll
repz
bound
fisubrs
out
inc
mov
inc
push
xor
idiv
mov
mov
dec
mov
out
les
jnp
pop
mov
dec
push
shrb
mov
adc
mov
xchg
sbb
jns
iret
xchg
insb
js
test
out
adc
or
dec
fwait
mov
sub
or
mov
jbe
je
xlat
pop
mov
lret
in
icebp
lahf
cld
rol
fwait
push
xchg
scas
push
sub
mov
cmpsl
into
mov
cmp
inc
mov
jmp
lcall
xchg
mov
pop
jo
mov
scas
int3
sbb
shll
pop
out
mull
sbb
cmp
ds
jle
rol
pop
lods
lds
pop
loop
mov
add
pop
ja
out
add
xchg
in
aam
dec
sub
test
out
lods
or
outsb
cmpl
dec
ja
aam
ss
fistpll
push
mov
leave
in
inc
mov
fwait
cs
push
cmp
mov
cmpsl
repnz
decb
and
xchg
sub
dec
dec
jle
stos
stc
fcmovnbe
mov
shr
stos
lcall
and
push
sbbb
pop
cltd
out
popf
cld
fwait
mov
pusha
jl
add
fcompl
jge
mov
rorb
and
push
and
daa
inc
xor
pushf
in
jnp
fs
or
stc
std
aad
add
lds
push
add
mov
lds
push
push
inc
bound
push
inc
pop
push
add
pop
lds
loope
mov
push
cli
stc
imull
aad
jg
sbb
mov
push
clc
push
loope
pop
and
jecxz
cmp
sbb
stos
imul
mov
insl
push
inc
push
les
sub
popa
sbb
dec
xchg
out
lret
neg
dec
push
xchg
add
les
push
jns
cmp
or
ret
sbb
inc
je
push
clc
movsl
cmp
sub
xchg
cwtl
sbb
cli
iret
xchg
jge
xchg
pop
or
sub
fisubrl
mov
add
push
mov
mov
xchg
das
jge
pusha
js
cmp
add
shlb
sbb
dec
rclb
cmpsb
push
add
in
shrb
cmp
cmpsb
shrl
mov
push
cmpsb
mov
cwtl
clc
cmp
cmp
xchg
pop
inc
stos
mov
arpl
cmp
add
mov
jl
push
push
ljmp
mov
inc
push
sti
daa
mov
lahf
push
jae
mov
inc
mov
dec
roll
inc
and
xor
mov
sti
shld
jno
rcrb
dec
std
bound
or
fst
fidivl
mov
sub
aas
sub
and
dec
divl
cmp
mov
movsl
jg
push
jle
xor
jb
dec
jnp
dec
inc
mov
int3
mov
sub
inc
push
iret
mov
add
sarb
dec
jle
mov
pop
es
mov
mov
cwtl
addl
dec
push
stos
data16
jge
push
jmp
out
lret
out
pop
mov
mov
jecxz
scas
mov
jbe
out
fadds
mov
jnp
mov
push
test
fnsave
pop
add
pushl
push
and
movsl
xchg
iret
push
mov
cs
clc
sub
pop
loop
addr16
clc
add
sti
nop
push
fiadds
icebp
shll
movsl
mov
lahf
push
push
scas
lds
in
xor
xchg
mov
nop
mov
repnz
jmp
orb
push
popf
mov
push
and
mov
lods
dec
push
inc
je
sbb
outsb
in
jp
push
mov
cmp
call
mov
push
out
mov
adc
call
in
mov
std
cs
jg
push
insl
in
ds
jge
cwtl
pop
repnz
aad
pop
cmp
sub
loope
add
dec
pop
xchg
mov
inc
pop
dec
js
sbb
testb
popa
cmp
fisubrs
xchg
jge
pop
cmc
aaa
sarb
scas
adc
add
pop
lock
orb
or
ds
les
insl
jge
pop
popf
rorb
inc
sbb
fadd
pop
mov
fcmovnbe
jbe
sbb
dec
cmp
stos
sub
xchg
std
cld
rcr
aad
insb
and
inc
insb
pop
and
mov
inc
mov
cmpb
add
out
dec
mov
cld
sub
push
adc
jge
cmp
hlt
or
push
pop
lea
lret
icebp
sbb
mov
in
cmp
xchg
gs
xchg
popf
stos
push
lahf
push
sub
cmp
pop
subb
push
xorl
aam
test
testb
jl,pt
clc
mov
clc
sbb
xor
dec
and
aas
sbb
nop
iret
andl
scas
fsubl
leave
std
loope
mov
mov
xor
sti
outsb
xchg
add
call
pop
nop
in
lret
mov
jnp
pop
mov
int3
loopne
loopne
mov
or
insl
imul
lcall
sbb
hlt
push
mov
mov
add
shrl
push
xchg
enter
fwait
jo
outsb
adc
push
jbe
imull
inc
jb
add
inc
outsb
adc
sbb
outsl
xor
cmp
jno
rorl
sub
or
sahf
cld
cmpsl
jg
leave
out
pop
cmpsb
test
sbb
mov
cltd
imul
sub
sbb
stos
movsb
adc
fnstsw
je
cmp
xchg
cmp
cmp
cmc
pop
inc
icebp
pop
clc
push
int
or
mov
jge
inc
icebp
xchg
jo
pop
pop
cmp
jecxz
lds
lock
adc
xor
flds
pop
mov
rcrb
xchg
sub
mov
cmpsl
stc
outsl
std
cmp
cmp
lret
mov
movsl
adcl
daa
push
or
pop
xchg
cmp
cld
push
push
pop
int
mov
das
cs
and
mov
fdivl
pop
jb
jb
jnp
addr16
ds
mov
lcall
int3
or
push
jno
jg
gs
divl
sbb
jo
stc
jmp
and
es
clc
jne
in
insl
or
fisubrs
dec
test
push
mov
nop
dec
pop
aas
adc
xor
call
or
adc
test
mov
or
cld
mov
inc
pop
fimuls
fiaddl
mov
inc
cmp
push
inc
push
sbb
mov
or
add
scas
and
sbb
and
popa
sbb
into
push
mov
testb
popa
imul
lods
push
push
jg
aas
into
xor
mov
sarb
cmpb
lret
rcll
test
jb
addr16
pushf
sub
setle
repz
sbb
push
and
sub
cmp
shlb
jae
lea
gs
repnz
nop
add
incb
pop
adc
sub
imul
addr16
dec
aad
mulb
inc
pop
push
clc
je
or
jge
int3
xor
push
xchg
fisubl
call
cmc
and
imul
daa
push
push
sbb
or
scas
fisubrs
out
rcll
pushf
adc
sub
adc
push
stc
enter
mov
mov
sub
mov
mov
mov
mov
aaa
cltd
sbb
lods
dec
xlat
push
je
lods
iret
cmpsb
pop
rcll
int
stc
test
pop
push
stc
daa
add
dec
push
imul
cmc
ds
stc
jp
enter
adc
scas
pop
mov
sub
mov
dec
fprem
xor
fisubrs
repnz
scas
mov
sub
adc
inc
pop
cmp
sbb
int
push
jge
mov
and
daa
xchg
cltd
add
aas
sub
xor
loop
test
mov
scas
xchg
or
mov
xor
sub
or
ds
gs
shlb
test
sbb
inc
or
rolb
mov
xchg
xchg
xor
mov
arpl
xor
test
hlt
daa
shrl
inc
mov
test
cmpsb
shrl
jge
mov
add
lcall
in
lods
mov
in
inc
pop
dec
dec
insb
jg
xorb
sbb
outsl
push
addr16
xlat
sbb
pop
addb
adc
je
jmp
incb
scas
icebp
dec
and
adc
bound
shrb
push
adc
mov
jno,pt
loope
push
xor
fsubrs
out
xchg
or
mov
pop
scas
xor
jnp
push
sbb
stos
mov
cmp
in
or
mov
in
mov
mov
in
decl
inc
xor
fwait
or
mov
cmp
or
push
das
sbb
lret
fstpl
sti
fadd
out
add
sub
add
repz
jl
mov
enter
scas
bound
mov
pop
pop
xchg
jg
push
push
ja
sub
test
xor
or
pop
lock
push
rol
int
mov
xlat
test
pop
or
and
retw
repz
idiv
je
cmc
ds
outsb
cmp
test
mov
in
push
repnz
fists
inc
sub
push
add
jno
and
mov
or
daa
pop
loop
shr
cmp
pop
ljmp
jmp
push
mov
xchg
fiaddl
nop
je
ret
adc
pop
pop
cwtl
leave
out
and
pop
stc
ds
shr
shlb
or
popf
pusha
inc
int3
jmp
js
fldt
cmp
rclb
negb
ja
adc
scas
add
repnz
and
pop
popf
std
repnz
les
pop
xchg
lret
xchg
mov
in
xor
clc
mov
scas
out
cmc
inc
sti
lcall
out
sahf
or
jecxz
pop
or
inc
ljmp
pop
outsl
stc
arpl
dec
fs
cmp
pop
mov
fwait
arpl
mov
pop
dec
imul
fnsave
loop
out
lcall
add
pop
imul
mov
pop
pop
inc
fadd
in
and
out
mov
sti
mov
sbb
mov
ss
inc
add
add
lahf
jl
or
or
xor
into
fcmove
arpl
add
push
adc
xchg
dec
rcll
mov
pop
iret
push
clc
outsl
shrb
insl
cwtl
dec
mov
adc
mov
inc
out
sahf
jle
mov
das
loope
andl
pushf
repz
in
xor
xchg
shrb
pusha
mov
rolb
or
test
dec
insl
xor
loope
sbb
sbb
stos
and
sub
push
cltd
mov
push
or
psadbw
sti
arpl
sarl
adcl
stos
xor
arpl
push
sbb
cmp
xor
iret
mov
adc
stos
insl
xor
mov
movsb
loopne
test
popf
jnp
and
scas
bound
mov
fisubrl
out
cs
scas
add
sub
iret
leave
pop
xchg
pop
mov
or
es
push
mov
add
pop
cltd
cmp
bswap
lds
push
add
mov
jmp
aad
mov
inc
push
shlb
inc
lods
cltd
ret
cld
andb
cmp
ja
mov
push
mov
and
sbb
int3
push
pop
sub
xor
xchg
xlat
testl
mov
shrb
int3
out
jnp
scas
adc
ja
aaa
xor
inc
lods
jge
lock
test
and
jmp
or
shr
mov
inc
lahf
cmp
les
mov
repz
mov
or
loope
mov
and
les
adc
dec
jne
push
into
aas
push
out
mov
mov
xchg
negb
dec
xchg
xchg
in
loope
pop
stos
inc
xor
mov
mov
or
sbb
dec
sbb
mov
cmp
sbbb
mov
subb
lahf
ret
sbb
popf
inc
dec
ss
or
repnz
xchg
dec
loopne
je
std
js
and
imul
addl
mov
hlt
mov
pusha
and
ret
jmp
test
stc
out
movsb
cmp
div
pop
or
fs
in
out
mov
clc
push
xor
jl
xchg
or
inc
push
push
add
jbe
das
and
addr16
sbb
loope
test
inc
or
add
fstp
adcb
xchg
xor
outsl
cmpsl
data16
lret
and
scas
dec
xlat
xor
stos
push
jp
inc
std
dec
rcrl
sbb
lock
stos
fiaddl
mov
push
sub
cmp
fists
mov
or
add
popf
cmp
aam
jno
and
dec
mov
and
jnp
push
push
or
scas
dec
loopne
rcll
jg
fadds
sbb
stos
imul
repnz
lcall
xor
push
leave
mov
int3
ljmp
xchg
mov
mov
cmp
inc
jmp
out
dec
xchg
mov
data16
into
es
jg
add
movsl
and
test
xor
mov
jle
mov
in
sbb
fcomp
sub
nop
dec
mov
enter
fbld
into
pop
enter
cmp
jne
test
inc
test
mov
daa
daa
gs
ret
decl
lret
xchg
and
mov
add
push
dec
jae
stos
xchg
add
push
pop
cmp
stos
mov
shl
mov
pop
jl
and
jecxz
add
mov
lea
stc
pop
mov
pop
fstps
jne
pop
push
jl
lret
or
shlb
out
adc
in
jae
mov
xchg
mov
xchg
inc
push
loopne
sbbb
jle
outsb
mov
cmpsl
icebp
add
es
jg
dec
arpl
xor
out
daa
adc
mov
jle
adc
cwtl
outsb
pop
pop
sbb
and
sub
pop
dec
loop
push
dec
sub
cltd
mov
shrl
nop
mov
push
icebp
cwtl
mov
in
enter
cmp
jmp
test
sub
ret
sub
mov
mov
mov
cmc
pop
fbstp
fsubrl
cmp
jo
pop
out
test
push
xchg
les
pop
dec
ret
lcall
jbe
repnz
mov
call
dec
lahf
or
push
push
jle
sub
pop
sbb
divl
mov
cmp
call
push
in
fldl
imul
les
inc
cmpb
cmpsw
add
push
out
leave
out
sub
sbb
sbb
add
and
std
testl
jno
or
sbb
loope
add
out
bound
jne
insl
mov
imul
loopne
fidivrl
aas
cmp
lods
pcmpgtb
fcompl
daa
adc
sub
pop
pop
push
outsl
loope
test
sbb
in
fisttps
sbb
hlt
push
add
and
ret
ret
dec
ss
in
test
sahf
jnp
sti
sbb
jae
pop
cwtl
test
mov
xor
dec
orl
mov
pop
pop
aad
xor
cmp
push
dec
imul
jno
xchg
icebp
aaa
js
adc
jae
add
dec
inc
pop
lcall
imul
mov
mov
cmp
int
xchg
movsl
mov
pop
mov
cmc
ljmp
cwtl
ljmp
into
xorl
or
jbe
enter
imul
popl
sub
xchg
pop
dec
pop
cmpsl
cli
rclb
fmul
aad
jb
sti
cmp
xor
les
push
std
mov
outsb
decb
decb
jns
fisubrs
push
inc
mov
pop
lret
xor
mov
xchg
xorl
leave
mov
sub
cld
cld
pop
outsl
stos
decb
jbe
insb
mov
fisubrl
jle
push
ror
add
or
loop
jmp
les
dec
mov
add
jle
push
or
lret
add
insl
jns
xchg
vpextrw
lds
jo
and
test
dec
sub
push
idiv
cli
test
add
sub
aam
jns
sbb
xor
jb
lahf
lret
fdivrl
push
lds
popl
sbb
adc
and
fs
mov
xchg
enter
adc
push
xchg
xor
jmp
mov
mov
cmp
dec
xorl
push
jmp
cld
fwait
inc
jnp
fldcw
jo
dec
scas
mov
aam
xlat
sub
pop
movsb
loopne
addw
xor
pop
test
mov
pop
daa
scas
ljmp
mov
mov
cld
inc
test
or
inc
mov
out
dec
inc
cmc
jmp
test
ret
and
pop
push
adc
sbbb
jne
je
mov
cld
sub
jno
jp
cmp
sub
mov
sub
xor
mov
imul
or
pop
sub
insl
mov
cmp
and
lcall
inc
mov
clc
xchg
cmpsb
cs
lret
cmp
push
icebp
rcrl
stc
cltd
adc
loope
sub
mov
jp
popa
test
in
inc
test
js
or
add
mov
mov
xor
les
sub
lock
movsl
xchg
pusha
cltd
int3
dec
shlb
sbb
repnz
add
mov
pusha
out
sub
addb
loop
scas
sbb
repnz
jecxz
cltd
xchg
push
pop
dec
xor
rcr
mov
aad
pop
sbb
movsl
and
add
cmp
cld
jg
enter
lock
jnp
jbe
mov
loop
xchg
sub
scas
daa
mov
pop
jo
pop
int
pop
in
std
inc
fstpt
repz
ror
mov
inc
insb
aam
shll
clc
xlat
sbb
das
push
xor
in
sahf
loope
adc
incb
and
stc
jnp
rcrl
xor
in
fstpl
nop
and
das
pushf
and
jecxz
orl
out
and
mov
lret
loope
movsb
loope
or
or
xchg
pop
ret
insl
je
pop
and
loopne
xchg
loopne
adc
andb
fstp
fwait
outsl
cmp
out
sub
lret
mov
add
dec
or
in
dec
add
adc
aad
pop
push
mov
inc
jg
popf
negb
sbb
sbb
sub
xchg
mov
dec
or
push
popa
sub
cmpl
imul
pop
fucomp
pop
mov
jg
cmc
mov
scas
jg
dec
jg
mov
jae
imul
fstl
ds
add
repz
push
out
ss
sbb
pop
xchg
or
imul
lods
xchg
arpl
insb
dec
lret
leave
adc
testb
hlt
pop
dec
popl
dec
lock
mov
sbb
jmp
call
jmp
shl
add
mov
xlat
lcall
loope
aam
add
pop
jl
dec
jb
repnz
ja
imul
xchg
pop
jbe
mov
mov
mov
lock
mov
test
aas
adc
movsl
sarb
sub
push
in
pushf
aam
cwtl
dec
in
push
or
int3
mov
push
cmc
push
stc
data16
scas
faddp
pop
neg
adc
push
mov
test
dec
xor
mov
cltd
mov
sub
insb
jle
jns
mov
xchg
pusha
cmpb
pop
in
mov
mov
pop
imul
pop
bound
leave
imul
sar
push
scas
ss
leave
popf
lcall
mov
inc
fisttpll
loopne
push
out
mov
movsl
or
inc
sub
cli
call
push
sub
cli
mov
mov
jmp
fadd
pop
stos
add
xor
int3
xchg
icebp
and
fldl
mov
lea
in
cli
push
setge
adc
lods
aad
jge
rorb
mov
outsl
sbb
pop
shll
push
push
xchg
add
nop
jp
mov
mov
xor
pop
jns
cltd
stos
mov
sbb
jp
in
insb
aaa
or
mov
jge
add
mov
in
inc
jne
pop
xchg
mov
adc
push
or
mov
cmpb
dec
jmp
sbb
popf
test
popf
pslld
inc
stos
punpckhbw
mov
test
mov
sbb
sbb
iret
mov
dec
ss
aas
faddl
rolb
inc
pop
enter
bound
testl
inc
inc
jg
and
xor
pop
mov
push
jbe
rcll
push
jg
insb
aad
adc
pop
push
aaa
pop
arpl
and
and
inc
test
call
xor
call
xor
int
shll
mov
jmp
push
add
cwtl
call
int3
mov
mov
ret
lahf
cmpsb
inc
out
add
nop
in
mov
jle
dec
adc
out
push
outsb
lock
xor
sub
dec
out
sub
imul
jp
cwtl
pusha
cwtl
fisttpll
add
and
call
arpl
add
pcmpgtd
push
jns
icebp
sbb
jns
hlt
mov
jno
cmpsl
dec
mov
push
or
out
enter
mov
loope
cs
loopne
cmp
and
mov
dec
dec
add
stos
cmp
arpl
repz
hlt
adc
cmp
cmc
mov
rorl
xchg
movsl
jb
adc
push
call
bound
lret
mov
stos
mov
and
dec
mov
pushf
stc
mov
push
push
mov
xchg
inc
std
sbb
push
rcl
add
inc
inc
mov
fmuls
rcll
jge
push
int3
fmul
xchg
sahf
sbb
and
cltd
pop
arpl
mov
in
push
jno
mov
add
inc
aaa
testb
adc
pop
repnz
lret
pop
pop
jle
adc
xlat
add
lcall
pop
fldt
jns
loope
pushf
sbb
mov
jb
adc
mov
aaa
outsb
mov
dec
and
ret
cld
dec
pop
jb
xchg
or
pop
cmpsb
loop
lock
mov
ja
adc
das
or
xchg
cs
mov
mov
jb
add
mov
mov
add
dec
xor
push
jne
addr16
inc
test
insl
mov
sbb
xchg
aad
repnz
and
not
cmp
adc
mov
fcoml
push
std
inc
add
or
and
jl
mov
dec
aas
stc
xor
lret
and
ds
xor
mov
lods
and
mov
mov
fstps
and
mov
sbbl
jg
bsf
inc
test
popf
loop
mov
mov
scas
pop
out
jbe
pop
ds
ljmp
fs
mov
cmp
sbb
or
and
sbbl
hlt
pusha
lea
mov
adc
push
das
popa
pusha
xchg
push
in
icebp
adc
out
push
iret
mov
jecxz
pop
sub
mov
gs
sbb
setp
sub
pusha
mov
scas
mov
das
mov
ljmp
jns
test
pop
mov
mov
mov
std
test
fistpll
pop
sbb
sub
dec
ja
jno
jp
jp
inc
lret
inc
push
test
rcrl
dec
pop
jae
sbb
push
outsl
ljmp
popa
fwait
mov
sbb
repnz
mov
sbb
mov
xor
push
xchg
imul
and
and
aaa
inc
cmp
mov
inc
mov
stos
pop
enter
add
mov
xor
xlat
cwtl
cli
add
dec
test
das
cli
dec
jle
sarb
xchg
sub
insb
adc
push
fsubrl
mull
sub
jae
jp
push
mov
add
lret
test
jns
cmpsl
adc
mov
inc
jnp
je
ret
mov
mov
jb
aaa
xchg
cli
gs
and
movsb
mov
and
lret
xchg
out
imul
insb
cld
jg
push
mov
mov
pop
out
lods
aam
mov
jmp
jne,pt
inc
xor
sbb
jne
clc
pop
test
in
sbbb
xor
sti
aas
or
js
sub
daa
pop
imul
lods
icebp
mov
cmc
inc
or
cli
int3
imul
cmp
fidivl
sub
hlt
xor
ja
loopne
nop
icebp
jmp
xchg
cmpsl
mov
dec
xchg
jmp
xchg
in
and
stos
adc
inc
int
dec
sub
mov
jmp
mov
es
mov
add
xchg
add
fmull
movsb
repnz
loope
inc
push
and
cmpsb
push
movb
ret
gs
mov
or
adc
adc
leave
daa
lods
test
sub
mov
lret
repz
push
jns
mov
cltd
dec
push
cmpsl
sti
push
xchg
xor
add
iret
xorb
movsl
mov
push
adc
and
orb
mov
push
sub
mov
pop
call
or
insb
out
out
push
rclb
xor
fisttps
sbb
lret
pop
icebp
pop
shl
mov
sbb
lea
testl
jmp
ret
inc
cmpb
scas
add
rcr
xchg
mov
xchg
int
pushf
dec
xchg
test
pop
xchg
pop
dec
dec
push
outsb
xlat
fwait
out
shl
loop
shll
outsl
gs
jns
les
xchg
xor
or
test
scas
and
es
pusha
inc
in
dec
pop
rcrb
mov
out
adc
ret
int
push
aas
sbb
lret
out
or
add
sub
or
lods
rcpps
inc
cmp
or
xchg
lahf
stc
pop
dec
cmc
mov
sub
cmp
out
inc
push
add
and
fidivrs
mulb
outsb
xor
pusha
outsl
dec
stc
push
imul
outsb
roll
mov
mov
fcmovnbe
out
shlb
and
mov
mov
insl
stos
adc
movsl
clc
inc
lahf
xor
and
cmc
mov
mov
pop
dec
imul
into
imul
arpl
xlat
cltd
cmp
cld
addr16
popf
mov
pop
insl
push
xor
in
mov
icebp
cltd
xlat
cwtl
ffreep
add
pop
fdivs
push
cmp
lods
add
xchg
divl
in
cltd
xchg
mov
adc
pop
outsb
or
ss
add
fildl
xchg
cli
repnz
fistl
popf
or
sar
xchg
add
mov
movsb
stc
ffreep
inc
mov
jno
sbb
sti
mov
pop
int3
shl
sbb
or
inc
cmp
jb
js
sbb
loopne
xor
push
test
mov
xor
xor
jp
mov
dec
stos
fnstsw
loop
loope
fisubl
arpl
movsb
loopne
jp
cmp
jp
ds
or
adc
in
mov
pop
jmp
push
dec
repz
out
adc
insl
pop
push
mov
fmul
xchg
lret
scas
pop
jb
sub
rcrl
fcmovne
and
call
jo
imulb
adc
aam
push
inc
mov
aam
fs
out
inc
repz
popf
mov
out
test
cmp
bound
jo
mov
adc
sbb
cmp
mov
aas
mov
jmp
jl
popf
sub
and
push
arpl
mov
inc
jp
and
and
test
push
imul
dec
cmp
test
fld
pop
incb
lds
sbb
ror
lods
std
mov
js
mov
mov
stc
call
xchg
or
add
pop
in
lcall
pop
sbb
or
notb
sub
push
data16
push
mov
js
or
cmpsl
push
jecxz
jo
stos
pop
xlat
xchg
or
inc
and
lods
bound
sbb
xchg
mov
in
jge
xchg
lods
stos
sbb
daa
leave
dec
or
mov
jbe
add
adc
push
jmp
sbb
loope
imul
or
jns
push
dec
add
and
mov
pop
adc
cmp
dec
adc
mov
cld
hlt
sbb
sbb
add
clc
inc
sub
mov
out
adc
or
adc
cltd
rolb
xchg
cld
dec
pop
imul
gs
mov
push
jbe
std
das
mov
loope
mov
add
aad
jb
iret
loopne
shlb
mov
add
clc
add
jb
push
sub
inc
rcr
pop
popf
imul
jp
aaa
pop
repz
popa
pop
xlat
inc
mov
add
mov
adc
and
jecxz
xor
mov
push
ss
dec
mov
pop
pop
mov
adc
sbb
mov
sub
fdiv
mov
shll
out
test
mov
push
cmp
call
mov
cmp
add
ret
lret
inc
arpl
repz
vshufps
imul
pop
adc
jmp
adc
repz
repz
mov
mov
push
fmull
or
daa
pop
mov
sub
mov
shll
mov
aas
xor
adc
data16
leave
rolb
inc
in
pop
test
stos
int
in
int
inc
sbb
xchg
inc
jecxz
jbe
dec
pop
aam
lods
iret
jbe
cs
aas
jmp
aas
xchg
mov
jo
loopne
mov
mov
jp
in
xor
bnd
cmpl
out
mov
adc
loop
es
sarl
and
xchg
fcmovb
addr16
ret
mov
or
xchg
jno
mov
xchg
jno
add
aad
bnd
loop
sbb
in
in
adc
aam
push
dec
and
cmp
cmp
cmpsb
inc
imul
mov
shl
mov
mov
fstps
fcoml
mov
xchg
lcall
js,pt
mov
cmp
in
das
push
or
addl
mov
mov
pop
dec
mov
test
jle
pop
xchg
cmpsb
int3
int
cmp
lahf
mov
jno
sbb
or
jecxz
movsb
push
int
outsb
outsl
clc
sbb
test
mov
pop
inc
dec
inc
loopne
stc
fmull
inc
or
adc
dec
sub
push
push
xchg
mov
add
mov
adc
clc
outsb
cmp
mov
sub
xchg
mov
out
ret
clc
ficomps
sub
outsl
push
mov
stc
pop
rcrl
jmp
sti
repnz
cmp
mov
imul
jl
out
insb
in
sub
sub
mov
mov
cwtl
outsb
jg
fcoml
or
or
or
adc
test
jg
pop
fiadds
xchg
int
insl
adc
fwait
xchg
leave
mov
cmc
cmp
jg
or
jne
dec
aas
int3
sbb
or
xchg
out
cmpsb
mov
pop
mov
pop
xlat
xchg
js
push
fwait
and
jmp
ljmp
dec
mov
pusha
scas
in
in
insb
sbb
fbstp
stos
push
nop
aam
das
jnp
cwtl
mov
adc
fwait
ljmp
ljmp
push
aaa
pop
cmpsb
sbb
shl
into
int
cs
ret
frstor
mov
fsubl
jle
or
xchg
mov
and
dec
enter
sbb
xchg
xchg
int3
stos
ret
pop
sbb
mov
cmp
and
ret
mov
int3
push
int3
cwtl
pop
sub
inc
push
in
sti
mov
or
aad
jbe
out
or
das
out
or
repnz
ror
jmp
sub
mov
xchg
les
jmp
and
insb
jl
add
and
pop
xchg
insb
js
push
cmpsl
and
push
fwait
push
inc
andl
push
xchg
xor
cmpsl
sbb
jo
inc
xchg
sub
xlat
icebp
mov
sub
push
or
scas
push
sbb
pop
insb
push
adc
mov
sub
cmpsl
sti
shlb
inc
mov
cmp
jl
orl
scas
and
orb
jbe
and
movsl
or
cwtl
clc
jb
inc
arpl
hlt
mov
xor
or
sar
sbb
jecxz
mov
repnz
sbb
push
jns
jnp
add
sti
inc
cmc
pop
jmp
popa
and
es
not
dec
dec
pop
pop
or
jmp
pushf
push
daa
push
ds
adc
mov
hlt
mov
dec
inc
mov
mov
loope
nop
ficomps
shll
std
xchg
loope
sub
mov
pop
jmp
adc
movsl
jns
xlat
pop
inc
outsb
cmpsb
aas
xor
jnp
jbe
xor
adc
and
adcb
fcoml
sbb
add
sub
inc
pop
test
and
adc
dec
mov
adcb
loopne
outsb
cld
mov
rclb
stos
pop
ret
into
or
push
cmpsb
add
das
jmp
std
shlb
stos
scas
mov
inc
sub
cmp
dec
cmp
cmp
lds
ja
pop
out
movsl
test
daa
in
mov
loope
jmp
stos
dec
adc
rclb
stos
add
and
test
ret
mov
testl
ljmp
mov
imul
enter
dec
jmp
test
xchg
push
arpl
adc
push
adc
lcall
rcrb
std
cmp
iret
lods
mov
out
shrb
sbb
push
ss
sbb
mov
cmpsl
cmp
inc
out
sbb
mov
inc
cld
ret
outsl
inc
adc
in
pop
or
fucomp
popf
in
sub
stos
adc
dec
xor
mov
jbe
or
mov
pop
popa
call
cmc
fists
aad
hlt
pop
bound
sti
clc
xor
gs
add
dec
and
aam
pop
mov
testb
mov
in
add
xorb
dec
andb
cmpsl
fwait
pop
sahf
xchg
pushf
inc
cwtl
xor
lret
pop
std
pop
push
mov
movsl
pop
lods
in
adc
adc
mov
inc
cwtl
cmp
sbb
push
dec
jbe
jae
or
mov
push
pop
jp
lods
xchg
shrl
ds
push
insl
test
fstpt
dec
cmc
es
mov
ret
out
push
in
mov
inc
or
xchg
ficompl
sub
rcll
je
sub
dec
pop
or
mov
push
scas
test
mov
push
jmp
iret
fcmovnbe
addb
sub
mov
insb
cmove
into
mov
adc
mov
in
and
or
xchg
xchg
xor
in
ja
in
jae
adc
or
sub
lahf
adc
inc
imul
sbb
clc
sbb
les
mov
and
dec
inc
xchg
popf
pushf
xchg
out
sub
in
test
movsb
jp
adc
popa
lret
jb
jle
adc
or
out
loope
ficompl
cmp
popf
jge
repnz
ds
cs
mov
add
aam
pop
and
push
clc
enter
xor
sub
loopne
sub
shlb
mov
dec
mov
mov
push
xor
pop
sbb
adc
pop
add
push
jae
outsl
cmp
shl
jge
or
xlat
push
movsl
test
sbb
int3
or
js
stos
stos
xor
roll
push
fmuls
cltd
test
lods
sti
jb
imul
mov
or
xchg
xchg
dec
jb
jge
scas
add
pop
outsb
imul
add
xchg
movsl
dec
andb
in
or
pop
mov
fadds
ret
std
clc
dec
mov
cmp
insl
push
mov
dec
xchg
adc
je
mov
sbb
mov
pusha
jne
sub
fs
jae
in
bound
ret
popa
lods
shrb
lds
in
loopew
pop
in
mov
adc
lods
pop
add
test
cmp
dec
mov
add
stc
mov
xabort
adc
jne
xor
fistps
lods
mov
jp
push
mov
sahf
ficompl
arpl
pop
mov
mov
fs
jo
aas
and
ret
jmp
inc
jg
int3
mov
push
pop
loop
push
rcll
arpl
mov
movsb
movsb
push
sbb
hlt
inc
sar
mov
subb
stos
adc
popf
dec
xor
into
in
adc
inc
movsb
pop
ret
mov
jp
arpl
inc
cmpsb
pop
or
cmc
aad
jbe
xchg
push
xchg
inc
adc
or
stc
jb
enter
movsb
push
mov
xor
and
mov
iret
pop
add
mov
mov
add
popa
cmp
faddl
jbe
xchg
dec
xchg
ds
aad
pop
sahf
ror
sub
shll
sahf
lret
push
inc
jmp
cwtl
aaa
subb
popa
dec
mov
gs
xor
sbb
pop
sbb
call
das
mov
outsl
mov
jo
mov
cld
cmp
loope
xor
sbbl
mov
pop
aad
jge
divl
add
lods
sub
leave
xchg
insb
mulb
std
cmp
jne
jg
dec
sub
ss
or
cs
jo
call
add
mov
cmp
add
mov
pop
push
enter
xor
push
adc
dec
dec
fnstsw
insb
adc
sbb
rcl
ds
push
push
inc
push
aad
call
jne
mov
aas
fwait
ret
je
cli
dec
incl
jl
sub
mov
xchg
and
aam
inc
xor
rorb
sahf
cmp
add
scas
sub
cmp
fisttpl
rdpmc
scas
xor
out
add
pop
xchg
les
lret
ds
cld
cmp
jns
xchg
subb
mov
and
adc
or
repz
sub
jecxz
sbb
fcoml
mov
mov
ret
imul
mov
xlat
bound
ss
mov
inc
je
repnz
ret
mov
xchg
ret
adc
into
cmpb
push
and
gs
outsb
mov
andb
inc
mov
sub
cmp
add
pop
aam
push
ja
sub
aam
sbb
jo
pop
out
xchg
insl
sbb
cmp
sbb
idivl
jmp
xchg
fs
mov
pop
mov
aad
jmp
clc
rcll
in
ret
sbb
mov
mov
fisttpll
mov
mov
inc
leave
rclb
rcrl
xor
inc
add
mov
aad
adc
out
sahf
mov
mov
inc
mov
mov
and
xchg
fs
pop
mov
jmp
mov
and
and
adc
pop
enter
cmp
add
sub
pushf
or
in
mov
and
dec
mov
ja
pop
std
inc
xor
cmp
pushf
adc
and
add
pop
mov
mov
jecxz
in
push
in
push
cwtl
cmp
dec
inc
repnz
adc
fidivs
scas
xchg
lret
adc
lahf
dec
fsubrl
push
mov
fstps
popa
sbb
je
icebp
mov
mov
mov
cmpsl
xchg
mov
xchg
call
push
and
cs
repz
sbb
loop
clc
push
lahf
and
sub
cwtl
aas
mov
cmp
jg
test
fwait
sbb
cwtl
mov
inc
pop
int
gs
shll
push
mov
xchg
adc
repz
cs
lcall
fs
loopne
dec
jb
xor
push
lods
fcomi
cmpsb
sbb
in
adc
int
arpl
addl
stos
sar
add
stos
adc
cltd
mov
mov
jecxz
dec
mov
jo
add
call
out
mov
xchg
inc
test
sub
out
xchg
xlat
repnz
xchg
pop
adc
sub
lret
rcrl
cld
add
repz
dec
pop
inc
or
icebp
jnp
mov
cmpsb
push
aam
ljmp
mov
enter
loop
gs
loop
ret
sub
pop
outsl
inc
mov
loop
inc
or
int3
cwtl
and
xchg
je
xchg
xchg
cmpsb
inc
xor
xchg
add
icebp
add
dec
push
jmp
or
jno
cmp
stos
cmp
insb
mov
jbe
jnp
adc
scas
or
mov
sub
gs
mov
inc
int
pop
and
cltd
add
add
in
addr16
xorl
mov
push
sub
scas
out
lock
dec
rcrb
pop
mov
cmc
pop
pop
into
mov
inc
lods
mov
jb
jne
jb
inc
push
sub
ja
or
mov
frstor
push
pop
clc
addr16
into
mov
mov
ljmp
cmp
push
mov
add
pop
xorb
sbb
inc
xchg
xchg
out
xor
push
mov
or
in
cltd
dec
mov
test
mov
jp
sbb
sub
cs
fs
sub
fmuls
mov
ds
push
adc
mov
sub
xchg
cmpsl
adc
add
jmp
xchg
cmp
jg
hlt
shll
xor
popa
push
lret
jb
mov
test
smsw
mov
in
mov
push
dec
rcrb
js
or
pop
mov
cmp
movsl
or
mov
cmp
fistpll
aad
mov
inc
rorb
push
and
and
jecxz
mov
dec
ret
mov
inc
mov
xor
bound
popa
jge
mov
xchg
push
stos
add
rcrl
jge
add
jo
outsb
jg
xchg
xchg
push
xchg
pop
frstor
ja
ljmp
rcrl
loop
sbb
mov
iret
mov
fcos
and
sub
fdivl
jmp
lea
add
popa
xchg
int
roll
fsts
call
push
and
inc
mov
push
and
adc
ds
mov
js
xor
pushf
ja
push
mov
cmp
into
cmpsb
jnp
mov
push
arpl
sbb
daa
pop
sub
push
icebp
fistps
push
or
xlat
adc
ss
into
sub
cmpsl
ss
jae
ja
shrb
not
inc
sahf
test
jecxz
imull
sbb
and
cmc
mov
iret
mov
cwtl
leave
or
out
and
push
fsubs
inc
les
lret
repnz
and
dec
push
cmp
mov
cmp
scas
shrb
or
test
cltd
push
lods
add
arpl
dec
push
mov
mov
fldt
push
mov
xchg
jecxz
xor
jp
div
fsubrp
ljmp
jle
jnp
imul
shll
pop
sub
fdivr
jmp
fisttpl
pop
sbb
and
dec
loope
xchg
inc
popf
adc
cmp
in
ret
fimull
pop
cwtl
xchg
inc
repz
push
mov
cwtl
pop
movsb
mov
insb
or
rcrl
lods
out
fwait
es
dec
test
imul
mov
xchg
mov
or
pushf
xor
testb
dec
leave
dec
dec
inc
xor
push
pop
xchg
fimull
inc
xchg
pop
int
pop
mov
es
in
testb
sub
ret
stc
loopne
std
mov
add
inc
jl
lea
sub
add
call
sbb
add
sub
test
shl
ja
loopne
pop
pusha
sbb
xor
jno
mov
neg
popf
lds
loopne
in
xor
pusha
lea
cmp
int
push
fs
xchg
sbb
jns
inc
das
inc
adc
mov
nop
cmpl
cmpl
xchg
sbb
leave
adc
cmp
add
push
cmp
les
push
repz
movsl
push
shlb
mull
cltd
adc
mov
mov
rcll
pusha
push
std
mov
xor
sbb
out
movsb
roll
push
adc
jge
dec
negl
and
pusha
in
fs
xchg
scas
mov
outsb
aam
xchg
outsb
xor
sbbl
xor
hlt
pushf
push
shrb
jb
rcll
cmc
or
testl
mov
out
leave
mov
push
arpl
out
movsl
ljmp
in
mov
and
test
sbb
in
loop
rorl
mov
pop
ficomps
sbbb
imul
fstpt
mov
xor
aam
fsubl
ss
cmp
mov
popa
dec
pop
subb
pop
repz
sbb
mov
lds
enter
push
pop
push
add
stos
arpl
or
lahf
sbb
scas
xor
clc
jmp
dec
inc
sbb
mov
dec
and
and
adc
daa
test
out
movsb
fs
push
div
xor
pop
dec
popf
xor
cld
insb
mov
jnp
out
push
fs
cwtl
sbb
stos
lret
and
out
mov
jbe
mov
jg
mov
arpl
clc
fdivp
dec
inc
ret
cmp
repnz
movsl
int
leave
mov
jne
cmp
pop
pop
sub
mov
shlb
test
adc
test
insb
push
sub
shl
ss
dec
xchg
xchg
cld
pop
jp
jmp
or
in
xchg
lret
bound
sarl
dec
dec
inc
xchg
es
aas
movsb
cmc
adc
inc
cli
jg
daa
xor
mov
lods
push
lcall
push
push
sti
jo
adc
hlt
adc
js
pop
and
mov
roll
stos
sbb
fsubl
sarb
or
jle
les
lea
cmp
hlt
gs
add
test
inc
lods
mov
cmp
pop
ja
pusha
inc
mov
mov
jmp
adc
xor
push
dec
jns
ffree
adc
push
fidivs
movsb
or
movsl
pop
aas
and
lret
lret
adc
dec
lahf
imul
mov
mov
mov
iret
repz
aad
imul
outsl
xlat
cmp
std
and
or
adc
adc
std
jp
fwait
rclb
push
daa
and
dec
push
bound
enter
or
sub
fildll
lret
icebp
test
pop
insl
mov
mov
daa
imul
lret
push
dec
fisttps
mov
cwtl
mov
sub
push
fwait
jp
xor
sbb
data16
fdiv
sar
cmpsl
sub
push
jl
in
xchg
data16
lret
dec
push
sbb
enter
adc
jno
mov
mov
repz
call
mov
nop
cmp
mov
pop
popa
jg
or
leave
iret
add
and
adc
ljmp
fisttpl
cmp
out
jbe
push
push
lret
mov
push
and
push
in
or
aaa
insl
loopne
push
adc
add
clc
fisubs
shrb
adc
sub
mov
stc
mov
dec
add
sbb
push
dec
pusha
cld
push
or
or
mov
mov
dec
add
in
popa
inc
out
cmp
pop
imul
sarl
push
or
adc
icebp
in
ss
lcall
jo
jae
dec
imul
cmp
test
dec
or
mov
movsl
push
sub
xchg
jge
jae
xchg
hlt
mov
sbb
pop
mov
mov
pop
mov
xor
inc
ja
inc
mov
push
test
push
sbb
mov
xlat
clc
movsl
add
pop
sbb
xor
adc
nop
cmp
dec
adc
gs
adc
outsl
sub
adc
xor
shll
fwait
mov
movsl
decb
xchg
or
les
imul
mov
and
add
push
loope
mov
xchg
in
ret
adcb
push
adc
in
fwait
cmp
mov
popa
mov
lods
mov
insb
pop
cli
ja
popf
jp
repnz
pop
ss
mov
addr16
push
push
insb
mov
mov
jbe
lret
daa
push
loope
dec
outsb
and
add
faddl
or
fldt
clc
cmpl
sbbl
data16
daa
sahf
push
mov
push
leave
mov
lods
fwait
clc
scas
les
pop
jmp
shlb
xchg
and
add
mov
pushf
add
cs
add
arpl
into
outsl
cs
pusha
xor
out
push
dec
pushw
dec
in
or
pop
sarl
pop
out
inc
jnp
push
lcall
sbb
adc
cli
test
pushf
jmp
ds
mov
or
mov
out
pop
lret
iret
scas
testl
pop
ret
test
adc
sbb
dec
cs
idiv
xor
xor
movsl
mov
xor
cmpsb
mov
or
pop
mov
push
aam
aas
xchg
mov
pop
push
adc
ret
shr
int
fldcw
mov
aad
sbb
cmpsb
xorps
push
loop
fwait
add
jl
or
cmpps
mov
fsubl
sub
pop
insb
xchg
and
popf
cmpsb
jmp
stos
push
mov
neg
test
test
out
in
out
inc
and
push
addr16
popf
xchg
push
jge
jne
jg
pusha
sub
cmp
int
mov
adc
nop
xor
jns
mov
aaa
aad
inc
mull
stos
push
int
addr16
ret
push
out
cmp
sub
mov
fsts
cmp
pushf
inc
or
and
jmp
in
lcall
xchg
scas
cmpsb
adc
in
adc
mov
mov
or
sub
sbb
mov
add
je
adc
adc
es
call
cli
lea
and
xchg
lret
cltd
aad
rclb
jp
in
pop
jecxz
arpl
and
pop
adc
sub
lahf
enter
lea
xor
loopne
stos
mov
cmp
pop
mov
and
mov
dec
mov
lcall
sbb
sbb
jg
mov
ret
std
xchg
call
push
aaa
lret
dec
and
insb
pop
jl
cmp
inc
adc
mov
fidivrl
mov
mov
push
xor
add
push
jge,pn
in
mov
push
pop
xchg
int3
ds
mov
sub
mov
sub
xchg
lret
add
je
mov
sbb
imul
mov
rcrl
movaps
pop
ret
in
and
ss
clc
fdivrp
rcll
and
lcall
mov
dec
cwtl
adcl
stos
out
scas
pop
stos
stos
inc
dec
ljmp
stos
std
lock
cmp
or
mov
inc
pop
dec
lret
push
cli
test
mov
adc
mov
cmp
push
orl
or
lods
das
and
imul
pop
arpl
insl
mov
jne
fisubrl
lret
cld
dec
push
movsb
mov
sub
sbb
mov
dec
rcrb
jae
aam
das
addr16
iret
sub
ja
inc
mov
mov
add
and
pusha
stos
lea
cs
cmp
pop
push
insl
mov
push
adc
cmpsl
stos
cld
xchg
dec
jmp
dec
and
dec
adc
push
stos
xchg
negl
outsl
xor
inc
idivl
int
pop
mov
and
popf
frstor
push
add
out
cs
jl
mov
add
adc
inc
cmc
pop
dec
mov
dec
jo
mov
enter
push
pop
cmp
mov
fldenv
es
bound
pop
cwtl
pop
cli
push
mov
push
insb
addb
xchg
cmp
insb
arpl
pop
jnp
fisubrl
mov
rcrb
add
outsl
sbb
adc
nop
popa
fildll
mov
xorl
scas
shll
test
cltd
and
dec
roll
jae
lret
lock
daa
xchg
xchg
in
sti
and
and
enter
and
pop
push
mov
int
lahf
shlb
das
adc
add
dec
sub
jge
jbe
dec
lret
pusha
push
gs
jmp
pop
je
repnz
inc
push
out
cli
and
xchg
cmp
xchg
mov
adc
dec
movsb
ds
cs
clc
push
sub
jno
and
inc
and
inc
push
lds
xor
sub
mov
sahf
dec
andb
movsb
js
shll
jge
jno
jne
or
repz
adc
sbb
pop
ds
sub
icebp
movsb
mov
mov
addr16
fsubrs
out
fs
lret
sbb
and
lock
jp
and
mov
inc
push
mov
and
or
pop
cmc
mov
in
out
mov
mov
lods
pop
dec
dec
add
outsl
xchg
inc
add
out
loope
mov
mov
mov
pop
dec
cmp
adc
push
and
inc
addr16
mov
punpckldq
repnz
ret
cmpsb
les
push
enter
outsb
xchg
push
cs
xchg
sub
lfs
ss
xor
xchg
mov
sbb
or
pop
inc
call
xor
mov
cwtl
dec
repz
jne
enter
mov
rep
test
fcmove
nop
nop
movsl
sub
mov
inc
cmp
test
loop
inc
jnp
es
mov
int
mov
or
in
dec
jl
cmc
loop
lds
or
inc
adc
mov
fsubr
scas
xor
movsb
jnp
push
movsb
pop
test
mov
dec
sahf
in
xchg
fldt
add
or
stos
sarb
pop
hlt
push
icebp
mov
sarl
ret
xor
std
or
in
fisubl
xorb
es
fsub
paddusw
enter
fwait
pop
cli
xlat
mov
mov
xchg
mov
push
lods
adc
cmp
outsl
stos
and
jnp
mov
dec
cmc
mov
dec
push
push
js
xchg
lods
mov
xchg
jl
add
sub
cwtl
cld
xlat
movsl
cmp
ss
xchg
inc
mov
sbb
pop
jne
mov
cmc
aad
jne
hlt
jb
xchg
cmp
bound
jl
mov
test
xchg
jl
test
sub
jecxz
xor
arpl
sub
mov
pop
pushl
test
subb
mov
cld
xchg
loope
stos
xor
mov
shrl
es
jp
mov
sbb
mov
imul
lahf
xor
xor
ljmp
imul
xchg
addr16
push
jge
ficoml
icebp
sti
dec
js
push
loop
pop
push
aaa
in
cltd
cmpsl
xchg
out
cmp
stc
mov
and
inc
aaa
fsubs
adc
sub
inc
sub
movsl
shlb
mov
dec
adc
mov
jo
cli
mov
cmpl
fs
pushf
shll
mov
mov
jne
mov
fcomip
push
frstor
fimuls
outsb
adc
push
dec
js
bswap
ret
cwtl
inc
nop
mov
out
adc
fsubrl
cli
arpl
fstpl
mov
aaa
mov
jns
sbb
test
dec
push
dec
out
add
adc
xchg
leave
out
test
es
enter
rcl
mov
pop
and
xor
inc
data16
popa
incl
pop
dec
xor
out
fnstenv
xchg
and
arpl
cmp
scas
shlb
sub
adc
ja
dec
pop
subl
das
jp
or
clc
loopne
lds
jge
dec
rcl
iret
dec
sub
loopne
sbb
cmc
push
fcmovnbe
dec
mov
scas
scas
movsl
xor
fwait
or
icebp
mov
cs
lock
in
scas
add
sbb
lds
mov
repnz
scas
cld
xchg
arpl
xor
dec
jno
leave
movmskps
decl
adc
jne
testl
cmpb
icebp
in
inc
not
ret
jp
out
inc
and
add
inc
jl
xchg
add
in
daa
daa
jle
add
sub
dec
bound
push
xor
enter
cmp
call
mov
push
in
or
int
aad
xchg
cmp
mov
xor
dec
push
push
hlt
mov
rolb
mov
mov
xchg
lds
clc
mov
shll
clc
mov
out
xchg
adcl
sub
adc
push
loopne
pop
jns
cltd
aam
sub
clc
xor
rcll
adc
outsl
mov
pop
or
out
rclb
xor
sbb
jo
mov
inc
sub
les
adc
in
lds
inc
jmp
cld
jo
mov
jb
faddl
in
pop
dec
pop
hlt
arpl
push
aad
lods
adc
pop
inc
pop
xrelease
mov
insb
xor
aas
icebp
scas
adc
scas
cmp
lahf
add
jbe
mov
movsl
inc
jnp
xor
dec
adc
sub
mov
dec
lods
jl
cmpsb
xchg
add
sarl
loopne
outsl
mov
cmp
add
cmp
add
sub
subl
mov
jmp
fisttps
insl
lret
sbb
cmp
lock
outsl
jp
fcoms
mov
sbb
out
xchg
mov
xchg
inc
add
sbbb
push
inc
mov
fs
nop
loope
mov
xor
cld
jbe
mov
clc
loope
xor
jge
add
xorb
out
ljmp
sbb
push
xchg
sub
pop
arpl
and
outsb
push
mov
mov
das
xchg
aas
push
adc
stos
inc
and
inc
dec
loop
dec
dec
icebp
in
or
xor
test
cmp
xor
hlt
and
push
in
inc
aam
mov
or
adc
jmp
push
push
outsb
push
or
ficomps
add
inc
mov
adc
cmp
inc
movsl
popf
lret
int
inc
enter
jp
out
adc
bound
sbb
pop
and
mov
pop
andb
and
push
imul
popa
ljmp
and
scas
add
sbb
pop
adcb
enter
add
test
dec
iret
lds
imulb
stc
adc
gs
xor
cmpl
xchg
push
jg,pn
sbb
movsl
fwait
xchg
jecxz
sbb
sub
xchg
fsubrs
lock
dec
jns
arpl
mov
cld
adc
out
push
xchg
inc
mov
in
imul
in
xor
xchg
xor
and
adc
push
sti
rolb
xlat
mov
adc
dec
test
jb
andl
pop
dec
pop
sub
add
fistps
fwait
imul
cmp
addr16
jge
clc
out
jecxz
aaa
jnp
add
iret
out
cmc
push
mov
sbb
imul
add
adc
push
mov
lcall
sbb
xor
xchg
daa
dec
and
sbb
sub
into
and
orl
inc
and
pop
loope
popa
push
loopne
andl
xchg
nop
stc
and
jno
out
lock
cmp
jbe
sub
cmpsl
xchg
mov
hlt
xor
clc
xchg
mov
and
and
mov
pop
jge
cmp
je
les
addl
orb
hlt
std
add
in
sbbb
and
sbb
in
sti
test
in
dec
jge
imul
iret
aas
sbb
dec
imul
sub
or
loopne
mov
xchg
lcall
jp
sti
rorb
aam
rclb
out
outsb
push
jecxz
jg
xchg
adc
mov
std
jnp
mov
ret
add
bound
out
daa
pop
imul
add
pusha
adc
lods
mov
inc
dec
lock
sar
or
push
mov
shll
mov
add
orl
neg
andl
mov
push
out
and
js
enter
packsswb
mov
mov
jb
std
nop
mov
xlat
inc
pop
aaa
jns
jp
jmp
jnp
call
push
push
ret
outsb
xor
stos
mov
or
jae
pop
lcall
movups
lock
mov
mov
sti
aam
sarb
in
push
mov
mov
fisttpl
orl
adc
inc
js
loopne
arpl
jno
mov
jae
sub
imul
fstps
aam
test
mov
inc
and
vmovsd
jg
jne
and
and
enter
dec
jecxz
arpl
pop
sahf
inc
cmpsb
cmc
je
aaa
push
dec
or
fbld
xor
std
fdiv
inc
jne
out
push
hlt
cmp
dec
pop
fiadds
inc
sti
es
daa
mov
js
sti
lods
jmp
loop
dec
mov
cli
dec
mov
fwait
and
xor
and
pusha
push
dec
cmpsb
add
test
clc
popf
xchg
pop
sbb
enter
mov
dec
mov
hlt
sbb
xor
jb
cli
daa
std
xor
push
pop
inc
jp
jle
fwait
push
aas
ds
push
std
mov
fxch
xor
popa
cmp
scas
stos
jl
adc
bound
xor
inc
xchg
inc
out
mov
sub
shl
mov
push
iret
sbb
xchg
xor
call
add
in
dec
fisubs
mov
mov
jge
lret
in
jmp
add
xchg
add
inc
sub
daa
add
add
xchg
jb
or
mov
lds
aam
jns
nop
and
pop
dec
daa
jb
int3
xlat
cmc
or
clc
lods
mov
fs
sub
and
adc
dec
mov
jmp
rorb
fwait
outsb
loopne
pop
js
testl
sbb
int
imul
in
lods
push
loope
mov
enter
out
inc
add
dec
icebp
mov
ret
dec
jne
ficoml
movsb
xchg
addr16
mov
sub
inc
xchg
inc
pop
sti
xchg
std
add
dec
stc
or
mov
subl
fmuls
dec
lods
aas
int3
add
sbb
outsb
hlt
gs
xchg
inc
mov
mov
mov
ret
cli
lds
test
sbb
mov
xor
jp
addr16
mov
sub
lea
jecxz
jecxz
xchg
jl
imul
movsb
je
adc
hlt
loopne
mov
push
jb
jg
sbb
pop
roll
jp
fwait
jns
out
outsb
addl
push
rorl
dec
addr16
pop
jne
subb
js
cmp
icebp
lods
shll
sti
shll
int
dec
int3
sub
and
fnstsw
jl
fucom
add
fisubl
jbe
pop
test
jmp
cmc
mov
mul
inc
cmc
xor
jg
cli
aaa
pop
pop
fwait
imul
dec
and
mov
sub
xchg
push
hlt
in
loop
fnstsw
push
and
cwtl
mov
into
xchg
out
lds
push
and
mov
mov
adc
ficoms
fstps
cwtl
mov
cltd
aad
fwait
sub
adc
add
sub
imul
loope
mov
xlat
fucomp
ss
int
cwtl
mov
shlb
leave
push
or
adc
dec
stc
push
inc
aas
mov
lock
xor
inc
aas
je
aam
adc
aas
sub
mov
in
cmp
push
push
mov
ljmp
xor
jge
jo
outsl
les
cld
arpl
mov
add
pop
inc
push
aaa
add
in
xlat
mov
fidivrs
clc
ljmp
jmp
int3
js
sarb
adc
out
ret
or
mov
divl
mov
icebp
pop
cltd
cmpsb
jp
shl
leave
and
mov
push
pop
mov
loopne
dec
cmpsl
pop
mov
sbb
jle
xchg
jg
push
test
jo
or
out
in
mov
in
cli
pop
or
ds
add
scas
repnz
cwtl
inc
and
movsl
push
mov
cltd
shlb
outsb
into
mov
mov
repz
enter
loopne
fisttpll
mov
int3
and
cltd
rol
cltd
sbb
fnstenv
push
adc
cmp
lret
jno
sub
cmp
cmp
push
lea
in
lods
sub
mov
push
inc
iret
bound
gs
mov
and
mov
cmpsl
xor
lret
or
in
int3
rcrl
mov
sbb
sub
mov
je
pop
inc
outsl
cmc
jle
and
jno
leave
pop
mov
lea
call
sub
leave
cwtl
bound
icebp
pusha
ret
fstl
mov
mov
int
rcrl
ret
imul
adc
das
cltd
jmp
jecxz
sbb
cltd
xor
test
aaa
jno
xor
mov
sub
pop
cmpsb
mov
sbb
push
fistpl
mov
pop
sbb
inc
das
outsl
scas
and
mov
adc
xchg
cmp
imull
xchg
and
mov
and
fists
daa
push
fmull
sub
mov
xchg
loop
push
cmp
inc
xchg
cld
fwait
inc
in
fwait
icebp
jge
sysret
out
push
aad
test
ss
add
aam
sbb
inc
orb
and
out
push
jecxz
cmp
lock
xchg
dec
jg
mov
inc
cmp
xchg
cld
leave
mov
in
xor
outsl
leave
fadds
in
mov
push
cld
and
sub
int
push
cmc
sub
and
fmuls
int
xchg
jo
je
out
and
std
or
pop
imulb
cmpl
mov
lds
push
dec
fistpll
out
mov
inc
fld
addr16
inc
mov
inc
sahf
fstpl
cmp
mov
adc
aam
ret
dec
in
repz
or
pop
cltd
cltd
add
sub
mov
clc
test
mov
add
addr16
inc
idivb
or
mov
push
out
mov
test
mov
gs
pop
inc
loop
pusha
rolb
stos
push
pop
mov
je
add
mov
mov
push
bound
js
stc
xchg
insl
jne
es
mov
dec
jns
pop
into
idivl
movsl
xchg
aaa
mov
test
movsb
xorb
and
fldl
push
mov
jmp
push
lret
cmp
outsl
mov
push
shll
inc
pop
addr16
shl
movsl
ret
mov
fwait
in
jnp
icebp
add
int3
scas
mov
or
in
pop
test
lcall
movsl
ljmp
sbb
xor
mov
sbb
cmp
in
clts
xchg
push
daa
shrb
loop
adc
xchg
into
rcl
push
popf
insb
shll
mov
sbb
test
outsb
mov
pop
sub
out
enter
xchg
and
xor
add
lods
fdivrp
out
cmp
sbb
push
sbb
es
lds
xor
and
ss
fists
lods
sub
xchg
xchg
mov
jmp
push
int3
gs
jle
sbb
inc
cmc
int3
shlb
std
cs
push
cmp
addr16
and
add
lea
loop
scas
je
popa
mov
leave
sub
fdiv
xchg
loopne
scas
loope
roll
dec
pop
pop
inc
mov
push
ror
add
mov
lods
out
aas
xchg
and
add
fisubrs
mov
xlat
pop
fs
jae
or
sub
jbe
notb
or
mov
ret
mov
gs
adc
movsl
jge
push
dec
jle
pop
lcall
leave
pushf
push
push
dec
push
cmp
jmp
inc
inc
mov
fldcw
adc
dec
and
cmp
lahf
cmp
shll
lret
out
insl
mov
cmp
subl
sbb
lods
fsubrs
dec
in
scas
subl
nop
push
jo
outsl
out
ljmp
push
xor
inc
sub
dec
dec
add
adcb
lock
cmpsb
mov
or
scas
mov
add
sub
sbb
stos
popa
adc
add
insl
add
mov
dec
mov
fiadds
jge
sub
mov
xor
ret
gs
fcoms
dec
out
mov
jb
addr16
cmp
sti
or
mov
pop
in
add
push
test
or
popf
andl
fiaddl
mov
pop
imul
push
pop
dec
sbb
popa
dec
mov
jge
in
int3
adc
pop
xlat
xor
in
imul
sahf
mov
jmp
insb
push
inc
xchg
gs
insb
xor
jl
negb
mov
test
cwtl
or
cmpb
mov
ljmp
lods
test
fimuls
scas
cmpsb
dec
xchg
adc
call
ret
jns
sbb
sbb
mov
or
sbb
jb
ret
and
inc
mov
les
shll
inc
push
stc
fistpl
popf
mov
lods
movsb
adc
cwtl
jecxz
in
lods
lock
sbb
ds
test
sbb
pop
outsb
leave
jae
in
pop
jnp
fwait
subl
mov
and
sub
out
mov
adc
in
fistl
scas
insb
cmp
mov
push
xchg
mov
adc
pop
xor
sti
fwait
push
ljmp
xor
jns
or
mov
pushf
xchg
mov
or
jno
and
mov
in
push
sbb
stos
cs
push
mov
test
xor
gs
sub
or
cltd
dec
fisttps
add
pop
out
fucomip
mov
lock
scas
mov
push
sub
pusha
adc
je
mov
out
xor
js
push
jne
jns
dec
cmp
idivb
sbb
movb
icebp
es
and
adc
insb
arpl
cmp
jbe
movsb
xchg
pop
cmpl
lods
dec
or
xchg
cs
xchg
adc
cmp
bound
dec
stos
push
mov
rcr
sub
add
mov
test
int
dec
pop
out
insl
and
inc
fwait
xor
ret
aaa
hlt
loopne
push
or
stos
ljmp
xlat
clc
decb
xor
and
push
test
movsb
stos
test
ss
and
enter
push
cmp
mov
hlt
cmp
mov
add
stc
sahf
sub
xor
les
ja
add
jl
rcrl
stos
sbb
fld
sbb
dec
clc
arpl
push
jl
ljmp
imul
subb
in
sub
stos
imull
lods
push
push
fs
std
mov
mov
addb
or
pop
adc
arpl
add
cltd
sarb
mov
rcll
faddl
les
push
in
pop
cmpsl
mov
cs
adc
xor
js
jmp
sub
xchg
in
push
pop
mov
push
add
nop
mov
pop
xchg
add
mov
add
dec
psllw
mov
cmp
loope
call
jb
cli
in
inc
movsl
incb
push
inc
xchg
aaa
call
sub
dec
cmc
jp
inc
jl
out
jp
mov
push
pop
dec
mov
loop
and
mov
gs
mov
jg
movsb
pop
sub
cmp
cmp
clc
pop
clc
enter
jg
ja
inc
data16
iret
push
aas
fildl
outsb
dec
jbe
adc
add
lea
fucomip
sbb
xchg
out
scas
lret
imul
test
or
out
nop
sahf
mov
mov
stos
jle
sub
pop
stc
iret
fsubl
push
movsb
data16
xor
lods
xor
cmpsl
sbb
ret
pcmpgtw
lods
ss
cli
xchg
insl
cli
in
clc
out
xor
pop
xchg
out
pop
inc
dec
lods
xlat
dec
je
in
xor
xchg
rolb
lret
rorb
inc
xor
cmpsl
mov
mov
pusha
cmp
orl
cltd
push
loope
xlat
xor
ljmp
jo
push
loop
imul
push
mov
fnstenv
cmp
sbb
mov
fcoml
push
aas
sbb
bound
push
aas
sub
rcll
je
sub
jp
pop
adc
punpckhwd
gs
out
add
gs
xchg
call
fdivs
mov
pop
aam
popa
mov
jmp
jo
jne
lods
repnz
cltd
adc
mov
sub
aas
iret
and
cmpsb
push
arpl
in
gs
sbb
pushf
cmpsb
push
stos
xor
insl
xchg
pop
out
jp
data16
sbb
jns
push
fmull
and
sub
pop
adc
pop
add
js
ret
nop
lcall
xor
stos
inc
aad
pop
cli
sbb
imul
fimull
cs
iret
addr16
push
sub
and
fisubrs
pop
lds
cmovle
mov
int3
leave
into
mov
in
lea
or
loopne
inc
outsl
hlt
cwtl
cmpsl
adc
mov
pop
fwait
mov
jle
cli
fwait
xchg
lds
inc
out
flds
mov
or
call
adc
in
push
sub
sub
mov
mov
mov
add
dec
mov
push
xor
sbb
icebp
or
aam
loopne
add
or
outsl
sbbl
dec
inc
dec
push
mov
out
out
rcll
mov
xor
jl
sub
out
xor
inc
mov
mov
mov
aaa
sub
aad
lret
mov
cmp
sub
cmpsb
mov
cmp
mov
ret
lcall
push
mov
or
fidivs
nop
pop
out
jns
push
cmp
add
ljmp
push
ljmp
sahf
ret
mov
pop
lock
outsb
outsl
cmp
lahf
cmpsb
pushf
arpl
std
lahf
jg
int3
adc
outsb
xchg
pushfw
pop
les
shrl
inc
dec
aaa
fs
call
loop
imul
lods
adc
cmp
das
cld
enter
aaa
jno
cmp
daa
imul
inc
lret
jecxz
test
adc
jmp
add
idiv
jbe
jp
js
inc
call
enter
inc
xchg
sbb
cmp
xchg
ds
imul
out
cmp
std
inc
push
es
vstmxcsr
js
xchg
push
add
pop
sbb
out
inc
scas
jnp
aam
cld
daa
jb
push
xchg
das
fsubl
cwtl
mov
mov
les
add
fdivs
push
sub
adc
stc
mov
push
jb
sbb
add
mov
shld
inc
shl
xor
cld
push
les
mov
pop
fstps
shlb
aas
in
push
add
pop
and
jo
mov
adc
pop
xchg
lcall
jecxz
hlt
add
int
push
test
in
pop
dec
aas
inc
repz
cmpsb
jae
and
jbe
mov
mov
outsl
sbb
jbe
add
sub
adc
sbb
sub
imul
push
mov
sub
and
pushf
pop
clc
push
dec
in
in
sub
sti
mov
pop
xchg
pop
daa
fildl
mov
cmovbe
out
mov
out
inc
or
add
loop
dec
fistpll
xchg
sub
pop
pop
jmp
jne
sbb
out
xchg
mov
aas
or
dec
into
add
fidivrl
iret
xchg
mov
jmp
dec
enter
lahf
mov
mov
inc
add
mov
movsb
mov
cld
add
add
clc
pop
dec
hlt
sub
jns
leave
je
insl
movsb
outsl
imul
xor
adcl
inc
sti
scas
test
add
jmp
push
leave
pop
and
add
stc
popf
pop
mov
mov
and
mov
jae
mov
test
sbb
loope
fs
pop
jg
leave
jns
mov
adc
rcrl
and
stc
aaa
adc
loop
inc
into
mov
sahf
xchg
repz
mov
mov
inc
and
lret
mov
ds
pop
pop
push
sarl
push
dec
out
cmc
mov
cltd
enter
push
push
mov
jle
out
cld
push
mov
inc
add
orl
or
adc
cmp
lret
fmull
into
enter
orb
roll
xchg
push
cld
jne
les
shll
jl
test
dec
int
cmp
rorb
stos
mov
jecxz
test
sbb
jae
jl
jo
dec
testb
sub
out
pop
push
stos
movsb
dec
xchg
mov
sbb
mov
adc
data16
cmp
push
push
shll
jecxz
xor
jb
xor
pop
pop
or
jl
mov
or
mov
das
pop
mov
fs
dec
sbb
or
bound
pop
fnsave
cmp
xor
rcrb
in
push
add
add
testl
push
pushf
inc
clc
int3
mov
xor
inc
cmc
mov
jmp
cmpsl
addb
cmp
cmp
subl
mov
jl
mov
test
adc
sbb
lcall
ret
xchg
lods
aam
fsub
mov
movsl
mov
sbb
xchg
pop
fstpt
stos
inc
jp
and
lods
mov
repnz
push
mov
je
cmp
shlb
jae
or
mov
les
lcall
hlt
sub
movsb
and
out
fdivrp
outsb
ficoml
sahf
pop
and
mov
jmp
in
xchg
sub
dec
push
jnp
inc
fmull
loopne
cmp
jae
scas
mov
pushf
cmpsl
or
outsb
ss
stc
loope
movsb
and
sbb
fsubr
xchg
cmp
shl
outsb
mov
in
gs
mov
cmp
pop
jle
xchg
sbb
ss
xchg
cmpsb
jge
cmp
push
mov
mov
cmp
jle
mov
cmpsb
jecxz
push
je
lcall
xchg
cmp
pop
pop
iret
lock
inc
cli
push
mov
adc
stc
into
int
or
push
shlb
fists
js
cmp
xor
pop
mov
and
repnz
cmp
vcomiss
sbb
aad
imul
imul
mov
pop
stos
inc
shlb
dec
scas
xchg
push
sarl
ja
adc
inc
mov
sub
cmp
mov
in
push
loope
xor
push
mov
mov
addr16
lahf
sbb
ret
lds
sbb
mov
test
daa
sbb
push
xchg
mov
js
push
sti
dec
mov
or
add
stos
push
aad
mov
inc
repz
pusha
loope
lock
int
cs
rorl
mov
push
xchg
add
int
movsl
js
and
xchg
cs
or
add
sub
lahf
sbb
mov
rcl
hlt
push
lahf
xor
cmp
push
mov
jns
push
mov
lds
jno
dec
mov
dec
ja
and
sbb
movsb
adc
mov
pop
mov
adc
setl
loopne
fsts
xchg
test
push
xchg
pop
jne
sub
xchg
jbe
push
inc
cmc
addl
in
clc
decb
fdivr
sub
inc
add
inc
dec
pop
ja
out
ds
aam
push
inc
std
test
outsb
pop
mov
pop
mov
mov
jp
lret
pop
lret
rorb
test
push
loope
shll
jb
pop
stc
fsubs
push
sub
and
scas
ret
jmp
addr16
stos
das
testb
test
add
inc
std
cwtl
shr
out
addl
test
lods
mov
xchg
das
test
cmp
test
inc
aam
xchg
in
pop
xchg
pusha
pop
mov
outsl
pop
dec
fdiv
pop
mov
clc
sub
mov
std
imul
mov
lods
sahf
out
inc
mov
popa
lds
mov
stc
adc
lds
dec
les
popf
jno
jp
out
jl
pop
pop
std
mov
aam
pop
pop
ja
lods
push
or
int
and
pop
nop
mov
inc
scas
jmp
mov
or
loope
pop
adc
sub
dec
xchg
mov
xchg
mov
mov
mov
sub
test
mov
cltd
sub
mov
fwait
aam
sbb
insl
inc
jae
cld
fnstenv
pop
xchg
inc
cmp
clc
sbb
or
pushf
mov
in
xorb
repnz
add
addl
mov
in
mov
sbb
mov
xor
xlat
mov
sbb
and
loop
cli
and
mov
or
cmpl
aas
or
popf
inc
shll
int3
push
test
cmp
mov
cld
cmp
sbb
or
adc
mov
lret
mov
das
xor
adc
jne
push
xchg
and
sub
notb
xor
inc
int
push
fwait
sub
enter
fwait
test
mov
pop
jo
xchg
xchg
push
cmp
sbbb
push
cwtl
je
hlt
jmp
sbb
ja
outsb
icebp
loopne
aas
ss
xchg
test
in
lret
adc
fdivl
into
iret
js
mov
pop
insb
xlat
dec
mov
push
fdivrl
mov
popf
and
repz
inc
sbb
testb
pop
and
jne
test
popf
mov
cmp
inc
adc
sahf
push
sbb
jae
jns
cld
add
cmp
inc
push
mov
jmp
in
push
das
jo
in
bound
nop
rcrl
jns
nop
xchg
push
stos
out
lods
jno
mov
jnp
test
cmp
push
or
popa
negw
xorb
mov
sub
lods
inc
xor
mov
cmpsl
movsl
dec
shrb
adcl
pop
push
nop
in
xor
clc
sub
lds
in
cmp
cmp
call
dec
dec
int
adc
mov
scas
xchg
mov
push
sti
pushf
xor
xor
cwtl
cmpsl
xchg
sbb
cmpsl
add
fmuls
cld
or
inc
pop
push
and
and
sub
inc
aad
mov
or
push
ficoml
push
jl
ljmp
adc
xor
ja
push
push
xchg
mul
pop
inc
mov
enter
and
loopne
popf
lret
xor
push
loop
lahf
push
cmp
es
fimuls
int3
mov
loop
ss
mulps
xchg
imul
cmp
push
jbe
xchg
sub
lock
test
push
and
pop
add
jo
or
clc
and
insl
cmp
mov
imul
xchg
lods
out
jge
into
pushf
jle
scas
adc
movsl
xor
jns
mov
rol
out
inc
ja
add
out
mov
jle
lock
fists
push
sbb
aam
pop
push
testb
pop
fmul
int3
loop
mov
aaa
mov
stos
pop
lds
das
mov
daa
loop
ljmp
cmpsb
cmpsl
cmp
iret
mov
mov
jmp
adc
sbb
je
cpuid
pop
pop
add
xchg
fwait
mov
push
call
mov
cmpl
mov
xor
push
fdivrs
mov
xchg
enter
hlt
dec
sub
leave
in
xor
andl
stos
arpl
in
mov
push
or
fwait
ljmp
or
jmp
adc
out
dec
out
xor
xlat
lcall
xlat
movsb
jns
push
nop
add
push
fisttpl
sahf
ficoms
xor
cmp
test
fs
sub
call
iret
inc
jl,pt
push
adc
fdiv
ret
sbb
ljmp
inc
pop
jnp
dec
dec
ljmp
mov
jne
jae
data16
test
out
test
cmp
repnz
subb
mov
lock
dec
les
dec
aaa
int3
inc
and
movsb
sbb
lock
fwait
in
pop
add
add
iret
out
out
inc
push
xor
xor
test
sub
fwait
push
popf
dec
out
dec
push
sti
jae
xchg
and
push
add
xchg
test
movsl
mov
xchg
mov
pop
out
xor
pop
mov
inc
jae
sub
fisubs
aam
and
or
test
adc
lods
sub
rcll
jo
sbb
cmp
mov
fcoml
mov
mov
repnz
in
pop
push
gs
push
push
xchg
xchg
test
adc
pusha
adc
jmp
mov
mov
xchg
lret
addr16
mov
syscall
and
inc
cwtl
mov
addb
enter
mov
ret
sub
add
jne
std
dec
xor
inc
aas
int
or
ss
and
cmpsl
xor
mov
in
data16
lock
loope
and
mov
shll
imul
pop
leave
fidivrl
sbb
mov
mov
cmp
or
cmc
mov
jnp
or
inc
out
inc
xor
mov
add
mov
push
imul
jmp
hlt
sbb
mov
loop
pop
dec
fcoml
out
and
mov
add
ja
dec
push
inc
imul
imul
fbstp
imul
data16
mov
fdivrl
sahf
sbb
gs
jno
hlt
popa
or
int
and
inc
inc
fimull
hlt
pop
insb
or
rcrb
jb
sbb
add
out
cmpsb
stos
popf
xor
cli
idivl
pop
repz
lock
pop
je
push
imul
pop
ret
mov
or
mov
rolb
and
sub
enter
inc
mov
movsb
test
mov
sub
mov
mov
adc
lods
mov
in
jge
das
xchg
aad
test
fldt
xchg
fnstsw
lods
xlat
jle
lea
sub
xor
lods
push
in
cmp
adc
add
jecxz
push
les
xor
or
mov
aas
inc
dec
outsl
jg
ljmp
leave
ret
lds
dec
out
push
repnz
popa
sub
jge
std
mov
dec
cmp
into
xchg
inc
sub
cmpsl
stos
push
inc
movsl
jno
fcmovnu
imul
cmpl
out
aam
lds
lret
add
adc
fmulp
adc
mov
cld
ja
mov
add
pop
sub
sbbl
mov
xchg
pop
sbb
sbb
jns
adc
lea
repz
fsubrl
or
xor
jmp
xlat
shll
or
inc
arpl
add
jp
xor
jmp
test
inc
call
test
dec
inc
imul
imul
push
aam
jbe
xchg
pop
or
mov
sbb
aaa
mov
mov
push
mov
lock
mov
call
xorl
add
mov
lcall
sbb
adc
jle
shrb
movsb
icebp
aaa
dec
sub
sub
and
mov
cs
jb
aas
ds
mov
fdivr
shll
scas
fnstenv
lret
loopne
lret
ret
imul
cwtl
fldt
ja
or
imul
pop
cwtl
cmp
push
cld
cmp
sbb
mov
pop
icebp
sbbw
push
inc
push
sub
movsb
sbb
mov
cwtl
push
xchg
or
loopne
cltd
mov
aaa
aas
icebp
ljmp
andb
or
mov
fwait
stos
xlat
aaa
push
pusha
cmp
jecxz
xor
lods
adc
pushw
repnz
or
xchg
fdivrp
adc
imul
jne
adc
push
out
shlb
in
xchg
sbb
cmp
dec
inc
les
adc
xchg
adc
adc
inc
mov
pop
push
push
data16
dec
jo
testl
adc
adc
outsl
ds
cwtl
pop
sbb
idivb
mov
cmp
dec
sbb
in
xor
mov
imul
scas
cmp
shr
repnz
das
push
stos
ret
loopne
jns
fldcw
ret
xchg
pop
ja
mov
push
jb
mov
and
lods
stos
dec
aas
sub
loopne
cmc
sbb
bound
xor
lock
mov
cmp
xor
popa
cmp
lock
shl
mov
jbe
push
mov
pushf
imul
out
fs
les
sub
sbbl
sub
jle
pop
rolb
cwtl
lods
testl
mov
test
add
test
or
out
add
mov
test
fs
dec
adc
lods
dec
push
dec
out
push
xchg
jp
add
imul
xchg
mov
popf
call
lock
pop
mov
hlt
pop
add
ret
dec
mov
dec
jne
les
andb
loopne
mov
dec
push
pop
jp
sub
push
fiaddl
fidivl
jl
mov
ffreep
sbb
stos
jnp
imul
or
dec
pop
adcl
pop
cmc
std
and
lret
call
in
inc
cmpsl
push
and
sbb
sahf
and
add
cmp
mov
sub
fidivrl
lods
flds
xchg
aaa
push
hlt
vmptrld
adc
and
ljmp
inc
enter
adc
cmpsl
jecxz
add
lcall
inc
nop
lcall
or
fisubl
adc
pop
ret
sbb
adc
ret
ds
pushf
shr
mov
adc
sub
das
add
push
rol
dec
jno
ret
loopne
sub
aaa
or
dec
frstor
add
fs
ja
rcr
xor
out
stc
xor
jns
mov
xor
xchg
cmpsb
mov
ja
mov
xchg
xchg
data16
push
push
bnd
gs
jecxz
jnp
add
ficoml
lods
scas
pop
fcoms
imul
roll
dec
push
popa
jb
imul
cmp
xchg
sub
jo
repz
push
test
out
and
pop
pop
xor
mov
push
dec
aaa
sti
inc
xchg
mov
mov
ja
gs
sbb
lods
ret
rol
pusha
sub
push
or
test
sbb
sub
rcll
lods
push
dec
ret
mov
movsl
sahf
nop
push
js
xlat
insl
aas
or
pop
xor
adc
enter
adcb
mov
add
movsb
in
xor
sbb
sub
ret
or
pop
je
dec
push
jle
xchg
shll
dec
rolb
cld
push
movsb
xchg
add
jg
test
pop
in
int
pop
push
test
and
or
call
jp
jg
in
xchg
mov
cmp
pop
and
mov
nop
mov
subb
pusha
inc
aaa
mov
mov
popf
pop
fistps
shr
mov
pop
out
mov
cmp
jae
out
mov
mov
add
pop
divl
out
nop
inc
mull
fsub
pop
int3
push
daa
mov
mov
xor
dec
jne
imul
cmpsb
jle
scas
sub
and
mov
xor
push
cmp
or
push
xchg
and
adc
lods
out
cwtl
cmp
cmpsl
iret
mov
out
adc
mov
pop
mov
jl
vshufps
pop
nop
leave
mov
mov
or
js
out
inc
inc
fisttpll
rep
mov
sbb
ja
xor
ja
addr16
jg
fs
mov
ds
shl
mov
jg
out
fdivs
das
mov
lret
sub
cmc
mov
rorb
push
repnz
adc
aas
lea
mov
or
xchg
insw
or
je
add
inc
dec
fidivs
mov
loope
or
jo
insl
add
ror
fisubs
test
or
lods
push
push
xchg
test
adc
fcmovb
outsl
scas
sti
or
rorb
cli
jne
sbb
sbb
jae
ret
faddl
imul
pop
mov
call
xor
xchg
or
jns
xchg
mov
outsl
mov
rol
jecxz
loope
sub
ss
cmp
mov
xchg
push
sub
mov
mov
cmp
xor
pop
pop
ret
out
packuswb
or
je
xchg
add
outsl
lods
pop
ljmp
adc
and
mov
das
lods
leave
wbinvd
fs
test
and
mov
arpl
enter
cmp
cmp
push
fwait
push
xchg
les
divb
xor
mov
pop
push
mov
ret
inc
loop
test
mov
mov
xlat
fldcw
pop
aam
mov
sub
jg
fwait
divb
mov
shrb
ror
push
inc
pop
push
lcall
jl
cmpsl
mov
shrb
mov
test
stos
insl
enter
loope
pop
inc
xchg
daa
or
mov
sub
shl
mov
ret
push
or
in
or
negl
cld
and
xchg
addr16
sar
addl
mov
sbb
sub
xchg
insb
mov
into
xchg
jle
in
test
in
xchg
or
cmp
imul
lea
pop
sub
and
fcomps
nop
shl
jg
inc
xor
fstl
add
bound
push
leave
sub
out
pop
out
stc
fsubl
xor
es
daa
out
inc
dec
dec
insl
cmc
push
dec
lret
push
inc
imul
add
cmp
fidivrl
out
push
call
push
ds
jle
adc
mov
cmp
cs
xchg
xchg
and
fdivrs
cmp
lds
mov
mov
cwtl
fdivrl
in
cmc
decl
xor
jno
sahf
and
test
out
pushf
mov
in
sti
mov
mov
lods
int3
mov
sub
sbb
mov
repz
sub
jmp
stos
push
or
mov
fiadds
pushf
xchg
adc
jns
nop
jns
xchg
push
push
mov
lea
cmp
xchg
mov
fs
lods
mov
and
out
mov
pushf
out
cwtl
push
shlb
fcmovu
inc
testl
pop
jb
inc
add
jle
cmpsl
into
pop
insb
and
int3
cltd
xchg
inc
ret
adc
loop
insb
xlat
and
loop
mov
add
pop
iret
imul
add
data16
pop
adc
xor
test
xlat
xlat
iret
outsb
mov
sbb
jecxz
fmull
mov
and
and
fwait
pop
fadd
mov
cs
outsl
mov
sar
sbb
cmp
popa
subl
sub
lods
mov
icebp
subl
sbb
or
push
sarl
aad
fisubrl
inc
add
dec
jb
nop
imul
cltd
inc
dec
pop
dec
cmp
mov
or
push
mov
test
test
sbb
icebp
imul
movsl
mov
xor
push
jl
mov
cmp
in
add
into
xchg
bound
mov
pop
mov
jae
ja
xor
cmp
pop
ss
nop
add
xchg
xchg
push
and
out
enter
xor
es
loope
xchg
xchg
push
mov
fmull
xchg
mov
stos
loopne
jp
xchg
fistps
cmp
dec
shl
arpl
xchg
lret
dec
pusha
inc
or
imul
sub
test
sub
mov
mov
icebp
mov
data16
scas
jle
pop
add
push
xchg
fcomi
decl
nop
lock
test
sbb
sti
ror
pusha
mov
mov
daa
movsl
ret
jl
adc
pop
push
jbe
lahf
push
lock
push
xor
es
inc
jbe
mov
or
dec
add
push
loop
movsb
movsb
push
inc
cmpsl
push
xchg
mov
adc
adc
push
dec
mov
ret
xor
xor
xchg
sub
inc
repnz
nop
clc
inc
ds
hlt
clc
loopne
lcall
sbb
cmp
jecxz
xor
inc
inc
add
xorb
inc
rorl
ficompl
sbb
rcrb
push
inc
xchg
or
arpl
dec
mov
inc
out
or
lods
and
add
push
insb
and
add
or
push
inc
push
fcomps
cld
and
add
add
nop
int3
push
and
push
add
lods
out
stos
cltd
out
fldl
cs
cli
dec
jl
mov
pop
aam
pop
imul
mov
sub
shlb
xchg
rorb
jl,pn
mov
in
test
pop
icebp
fcoml
ds
add
jbe
pxor
dec
dec
cmp
mul
mov
xor
icebp
pop
in
sbb
aas
mov
push
aaa
jae
ficomps
xchg
hlt
xor
jb
xor
adc
inc
sub
push
cli
mov
sbb
or
insb
andb
mov
enter
mov
je
jae
andb
lcall
aaa
arpl
ljmp
pop
sbb
add
js
mov
pushf
testb
xor
jno
call
push
mov
jne
dec
adc
or
or
nop
mov
xor
aam
mov
sarb
out
add
jmp
mov
outsb
inc
mov
adcl
cmpsl
dec
pop
arpl
pop
lahf
inc
mov
dec
xor
dec
stos
lcall
pusha
cwtl
cmp
shll
outsl
pop
outsl
movsl
mov
sbb
jnp
faddl
loopne
push
sbb
mov
xchg
adc
lea
push
cwtl
adc
pop
fsubl
push
shrl
dec
rclb
in
inc
lret
arpl
jo
mov
add
mov
sbb
pop
and
add
adc
jnp
dec
push
imul
xor
imul
loope
mov
adc
and
jne
aaa
jp
jb
leave
mov
setbe
aaa
and
ja
in
mov
arpl
cwtl
loop
mov
mov
xor
jmp
mov
jb
mov
xchg
mov
jp
fimuls
add
xor
out
push
push
out
js
and
jns
enter
or
or
dec
ja
out
pusha
jl
hlt
iret
cmp
loopne
push
loope
lcall
aad
mov
call
add
sbb
addr16
pop
inc
lret
mov
stos
mov
andl
aas
shll
jns
push
and
cmp
push
jge
movsb
imul
repz
cmpsl
in
in
mov
dec
aas
add
or
push
imul
jns
mov
test
mov
push
push
div
lds
dec
test
in
aas
pop
sub
xchg
outsl
xor
jmp
sub
ror
sahf
pop
inc
cmp
xor
icebp
nop
sbb
fs
sar
jnp
mov
mov
mov
adc
fistps
repz
adcb
jo
pop
sti
mov
sbb
push
fisubl
push
add
insl
lods
lahf
inc
sub
mov
xchg
or
mov
sbb
icebp
jno
or
loop
jo
pop
or
xor
add
lret
fadds
subl
roll
sbb
cld
push
jnp
cltd
cld
sbb
push
sub
mov
fsubrl
sub
cwtl
sub
cmp
roll
test
adc
into
mov
jb
add
loop
inc
fsubl
add
leave
int3
test
cmp
in
lahf
fsubr
aam
popa
sub
add
popa
scas
fstps
xchg
adc
inc
jmp
cmp
test
mov
or
dec
xchg
fimull
inc
into
or
in
data16
clc
cs
scas
loop
loop
pusha
push
pop
mov
fbld
out
add
mov
mov
jbe
pop
push
mov
sub
mov
pop
int
jnp
xchg
fidivs
cmp
rorb
push
jno
mov
inc
iret
fnstenv
ret
jle
jmp
push
jno
ret
dec
pop
dec
mov
js
fcmovu
cltd
imul
jl
ficomps
xchg
in
xor
rorl
std
fs
pop
std
pop
xchg
push
inc
xchg
ss
jg
repz
subb
addr16
mov
outsl
xchg
into
cmc
jo
lahf
sub
jno
arpl
adc
loopne
jp
test
adc
mov
ret
push
out
shrb
stos
jp
dec
xor
scas
ss
sahf
or
inc
daa
fiaddl
loopne
mov
fxch
daa
es
sbb
jae
aam
jl
cmp
push
ds
inc
lret
xchg
das
loope
stos
out
push
mov
rcr
sub
stos
jae
lock
call
imul
xor
pushfw
mov
mov
mov
and
jl
mov
pop
inc
xchg
mov
pop
mov
test
js
test
into
xlat
arpl
cmp
in
and
add
ret
mov
ret
leave
xchg
lods
inc
mov
fwait
sub
add
dec
xchg
xchg
pop
dec
rorb
repz
movsb
mov
decb
jns
sti
shl
xor
dec
cmp
add
iret
and
shll
jp
fldt
adc
iret
mov
test
dec
xchg
sub
adc
cmpsb
mov
mov
jmp
cltd
or
and
xchg
in
pop
cmpb
jge
cmp
ficoms
bound
stos
int
jp
enter
xchg
push
or
mov
or
dec
lock
mov
sbb
cs
gs
add
jae
stos
out
and
rolb
les
push
out
aaa
or
and
push
xor
fldt
jno
or
mov
push
inc
cmpsl
inc
cmc
jne
mov
je
sarb
cwtl
xchg
sub
std
and
js
stos
inc
dec
enter
fstpl
or
popf
cmpsl
imul
inc
add
inc
rolb
xor
pop
mov
pop
pop
jno
mov
and
mulb
mov
adc
adc
jnp
push
push
sub
push
in
test
sbb
mov
or
push
repnz
movsl
sub
inc
int3
cmpb
test
adc
inc
add
pusha
mov
and
pop
push
dec
mov
jne
inc
fwait
lea
cli
mov
mov
inc
in
mov
lock
sub
outsl
xchg
xor
out
cmpsb
mov
imul
insl
mov
stos
lcall
ja
sbb
aas
add
lods
hlt
xor
cmpsl
rorb
jne
loope
popf
into
jge
call
and
fs
mov
mov
arpl
sub
imul
arpl
add
mov
icebp
xor
and
scas
rolb
xlat
cmp
xor
and
pop
fnstsw
inc
pop
mov
enter
jno
shll
stc
stos
or
mov
lret
int3
in
jns
repz
mov
or
lret
iret
fnstenv
sahf
pop
inc
jmp
rclb
int
push
pop
je
dec
daa
fildll
jae
push
ret
clc
aam
mov
call
out
push
inc
scas
out
fcomi
lods
sbb
or
imul
std
mov
push
sahf
sub
pop
jle
je
fsubrs
mov
lret
lock
addb
or
or
inc
dec
fwait
mov
mov
xchg
pop
xchg
lea
imul
adc
por
xchg
imul
push
xlat
fsubp
add
add
lea
movsb
push
rcrl
fwait
nop
push
addr16
dec
mov
test
lret
mov
jecxz
ret
ret
mov
sbb
sbb
repnz
into
shrb
mov
mov
inc
pushf
jo
aam
mov
repnz
popf
shll
push
test
test
sbb
clc
mov
mov
aaa
inc
and
gs
jmp
push
jbe
jl
insl
in
pop
fidivrl
and
in
sub
cmc
aaa
ret
imul
add
lea
xchg
adcb
daa
fdivl
xor
dec
js
cmp
addb
outsb
bound
sti
mov
es
dec
ds
fs
and
push
movsl
cmp
push
sbb
jo
imul
leave
xor
mov
dec
pop
mov
add
inc
stos
push
sbb
insb
push
push
mov
cmp
add
and
scas
out
jb
pop
lahf
outsl
xchg
jmp
and
scas
mov
and
movsl
ret
adc
jo
mov
mov
loop
pop
jns
ds
or
aam
mov
ja
adc
lods
jge
in
movsb
cmp
pop
js
sarl
out
mov
ss
adcb
lock
call
pusha
sub
out
fwait
dec
dec
cmpsb
adc
int3
adc
sti
and
lock
pop
and
mov
andb
lds
mov
test
mov
and
jmp
stc
repz
mov
arpl
je
or
push
push
or
movsl
mov
dec
xchg
pop
iret
xor
sub
and
loopne
xchg
das
cltd
add
shl
and
addl
dec
hlt
mov
sub
inc
or
mov
inc
dec
jno
ljmp
jg
repnz
mov
dec
out
xor
lahf
fisubs
mov
ss
repnz
mov
enter
lea
inc
fidivl
sub
imul
sub
xchg
xor
ficoms
push
shll
adc
jecxz
mov
outsl
push
xor
rclb
orb
leave
adc
imul
outsl
shl
pop
pop
pusha
ficoms
pop
orb
mov
loope
push
mov
dec
mov
push
ss
incb
sub
test
imul
and
imull
pop
xchg
push
add
or
push
ret
or
sahf
fwait
mov
ret
fisubrs
xchg
sbb
movsb
shl
in
or
xchg
add
shl
movsb
sbb
aam
aas
xchg
add
sbb
daa
and
inc
or
jl
push
push
pusha
stos
mov
lcall
imul
sbb
jp
jbe
push
push
jmp
cmpsb
loopne
in
in
lods
and
xchg
sarl
xor
mov
mov
pushf
push
jbe
mov
mov
add
mov
adc
sub
movsb
test
sub
cmpsl
sbbb
es
ljmp
rcll
or
call
out
lcall
dec
push
add
add
sbb
loop
out
xor
mov
cs
mov
xchg
out
sarb
cmp
call
ljmp
mul
cmp
data16
sub
cmc
or
mov
in
cmp
imul
popf
sarb
inc
js
shrl
mov
dec
ret
add
lret
xlat
repnz
lods
call
jbe
lock
ja
imul
or
sti
outsb
sbb
in
lock
mov
jne
mov
mov
push
mov
xchg
dec
outsb
push
out
mov
cltd
lret
mov
in
scas
push
jno
push
add
ds
jecxz
scas
daa
fldenv
pop
lahf
and
inc
or
imul
aas
and
lea
in
mov
fcomps
push
int3
xchg
movsl
rorl
dec
fsubl
rep
sahf
inc
sbb
aas
fistpl
mov
jle
aad
xchg
sbb
fcoms
out
fcomip
and
jne
lods
cmp
dec
inc
in
aad
ret
fs
out
jecxz
jmp
std
cs
jno
inc
lahf
sahf
outsl
and
xchg
ja
fcmovne
nop
jmp
pop
cmp
js
incl
shl
fs
mov
mov
add
sub
cmp
dec
out
rcl
call
aas
xchg
jae
xor
xor
std
iret
mov
cmpsb
xor
mov
cld
pushw
jmp
mov
rcrl
pop
or
in
push
sub
dec
gs
popf
cmp
cld
pop
pop
lea
cltd
fwait
je
push
movb
scas
mov
sub
cld
mov
jae
clc
add
mov
push
xchg
jb
out
test
popa
mov
stos
sub
test
test
mov
or
insl
cmpsb
andl
mov
insb
add
jne
movsl
add
cmpsb
addr16
push
lock
xchg
sbbl
xchg
jbe
lods
adc
test
xor
jg
ss
ss
movsl
in
loop
stc
xchg
bound
xchg
cwtl
mov
mov
mov
je
ficomps
mov
fstp
push
out
ja
out
cmp
pushf
sub
lea
inc
mov
testb
or
movsl
je
sbb
push
cmpsl
movl
xor
fistps
mov
jge
lret
mov
lahf
setg
out
lods
and
roll
jno
xlat
repnz
ret
inc
mov
sarl
xchg
push
fcoms
bound
leave
inc
or
scas
mov
test
imul
or
outsl
call
push
add
xor
in
out
test
xlat
addr16
mov
mov
call
repnz
icebp
lods
mov
and
dec
scas
loope
and
mov
mov
das
insb
dec
es
xchg
jg
je
aam
iret
mov
dec
sub
jle
out
and
or
mov
outsb
out
cmp
pop
leave
jl
jae
sub
pop
ret
sub
cli
stc
adc
in
stos
mov
stos
lock
add
xchg
stc
xchg
repnz
add
leave
lds
mov
cmpsb
jnp
mov
imul
mov
and
clc
push
mov
pop
fninit
lea
adc
fbld
sarb
testl
dec
lahf
or
adc
push
cli
adc
jg
subl
pop
call
xchg
addr16
jge
mov
xor
mov
or
pop
jle
pop
imul
jns
xchg
cwtl
xor
mov
xor
inc
mov
cmp
sub
mov
lock
cmp
popf
aaa
stos
pop
inc
add
outsl
fstp
out
outsl
push
push
xor
pop
test
jecxz
enter
mov
and
ja
fidivrl
cmp
lret
js
scas
outsb
test
jns
loope
fsts
das
mov
xor
jb
jecxz
and
mov
mov
push
push
int
mov
jmp
lea
push
lcall
inc
test
pop
push
lret
sbb
test
inc
out
pop
stos
outsl
mov
test
xchg
xor
movsb
mov
mov
adc
push
dec
jmp
cmp
add
enter
dec
ficoms
subb
insb
jno
mov
mov
pop
aad
sbb
cmp
adc
add
add
mov
jno
and
ret
pop
cmp
sbbl
sub
and
push
int
or
jne
into
fs
test
cli
push
out
push
dec
xchg
sbb
pop
dec
je
imul
xchg
cmpl
fnstcw
push
mov
out
in
pop
mov
xchg
pop
pop
out
js
stos
popf
xchg
repnz
pop
test
jbe
fildll
sub
mov
std
xchg
aas
push
pop
movsl
xor
cmc
and
lea
std
ja
mov
xor
scas
movsl
push
sarl
sub
mov
xchg
ljmp
bound
lods
add
in
imul
ljmp
add
inc
imul
aam
out
or
insb
adc
sub
lcall
mov
mov
mov
aam
sti
adc
shll
lea
push
xor
jecxz
cmc
push
xchg
mov
sbbb
mov
mov
xor
sbb
pop
mov
out
call
bound
sbb
subb
cmp
jg
loop
push
dec
dec
jg
in
out
jle
dec
repnz
mov
rcl
fildll
xorb
nop
inc
ja
xchg
jb
mov
jle
mov
dec
sbb
dec
stos
xchg
jne
hlt
dec
notl
shrb
push
std
push
jg
pop
sahf
jbe
push
mov
xor
jmp
mov
push
cmpsb
add
shl
cmp
sbb
xchg
or
pop
sarb
mov
popa
bound
pusha
adc
mov
imull
adc
int
out
mov
and
pop
mov
mov
dec
mov
cwtl
pop
pop
fs
lcall
push
push
loop
repnz
mov
jle
push
out
hlt
sbb
or
cmp
pop
ljmp
in
jnp
cmp
push
push
stos
es
sarb
pop
ljmp
fst
xchg
lea
roll
pop
pop
lds
test
sub
sahf
push
cmp
jge
xor
clc
and
shl
sub
cli
ret
inc
je
icebp
sub
out
push
jge
adc
lds
inc
add
inc
std
popf
adc
sub
out
or
out
jmp
push
ret
cmp
iret
pop
sub
mov
pop
pop
fcoml
test
push
aam
nop
fwait
orl
pop
jmp
shlb
mov
mov
ja
cmp
lahf
push
je
mov
sbb
adcl
push
sub
fwait
setg
and
cs
pop
or
addr16
dec
hlt
cmp
daa
stos
rcr
enter
in
fisubrs
sahf
or
clc
fs
in
adc
jle
loop
push
out
sbb
jg
mov
leave
popf
repz
mov
rolb
repz
scas
lods
jo
mov
add
sbbb
jne
and
ljmp
sti
mov
daa
add
push
xor
xchg
jg
mov
cs
cld
ret
fxch
shrl
push
mov
and
jb
out
push
push
lods
insl
ret
loopne
cltd
mov
inc
add
scas
xor
lea
aaa
call
push
adc
jl
push
dec
pusha
cld
in
push
lret
pop
sub
cmp
scas
xor
mov
add
mov
movsb
movsb
add
nop
nop
cwtl
or
mov
lods
xchg
xor
lret
pop
sbb
movsl
pop
test
pop
sbb
lods
call
repz
into
and
fs
cmp
pop
cli
fldl
inc
pop
jno
out
ret
mov
in
dec
sub
push
push
add
imull
inc
in
or
push
sti
push
std
std
mov
xchg
fimuls
sub
pop
xchg
outsb
or
loop
mov
test
dec
inc
mov
xor
inc
out
inc
mov
push
xchg
pusha
ror
inc
add
adc
push
ret
and
movsb
int3
mov
jl
jne
add
pusha
pop
nopl
cli
and
shlb
ljmp
mov
cmpsl
into
cmpsl
test
pop
jns
popf
jno
sbb
lret
push
mov
loope
repz
lods
dec
push
js
insl
dec
ds
out
and
dec
lock
std
pop
lods
dec
mov
shrb
nop
pop
xchg
mov
xor
loop
adc
dec
push
mov
push
das
lahf
mov
decl
ficoml
sbb
dec
cld
mov
adc
pushf
mov
fidivrs
xchg
stc
enter
cmc
pop
or
rclb
xlat
adc
stos
rolb
cmp
jge
inc
xlat
pop
inc
jmp
mov
aas
sti
dec
in
stos
mov
mov
es
rclb
int
movb
and
clc
roll
in
xchg
dec
or
outsb
mov
and
push
and
xchg
cld
rorb
imul
mov
dec
cltd
inc
or
mov
xor
cmpsl
lods
and
xchg
sti
mulb
gs
xor
sub
in
scas
pop
loop
hlt
fnstcw
je
fs
add
inc
iret
pop
decl
and
lcall
insl
xor
jecxz
or
mov
or
fsubr
jg
push
addr16
movsb
lahf
das
movsb
inc
fstl
arpl
out
mov
mov
jo
cmp
loope
dec
loope
js
jo
shrl
dec
cli
iret
and
movsl
xchg
pop
mov
ror
push
loope
mov
ret
fisttpll
jge
cmc
jno
xlat
jnp
pop
xor
cmp
mov
inc
aad
adc
pop
fisubrs
in
insl
lahf
fxch
cs
in
pop
ret
in
daa
mov
dec
repz
or
in
xchg
pop
hlt
pushf
scas
dec
cmp
mov
shrb
jae
icebp
clc
and
subl
sbb
jo
adcl
inc
fsts
scas
lahf
mov
test
imul
xchg
iret
dec
push
repz
data16
dec
cmp
repnz
fisttpll
pop
insb
sub
test
out
jecxz
or
mov
xor
mov
pop
dec
add
pop
push
movsb
hlt
repz
out
push
mov
push
xchg
mov
cmp
rorl
lods
out
xchg
test
pop
loopne
cmp
cmpb
mov
roll
push
mov
stos
inc
call
ja
fcompl
movsb
add
aam
jnp
mov
stos
push
push
stos
sub
stc
aaa
jmp
push
mov
fnsave
jmp
insl
and
xor
adc
je
fldcw
rcl
cmpsl
dec
dec
push
lret
fs
mov
sub
cmc
pop
shld
repz
shrl
fs
inc
ljmp
pop
in
call
rcrl
mov
mov
std
mov
sbb
sub
sbb
pop
mov
fldl
movsb
and
nop
dec
and
push
ficoml
pop
adcb
cs
inc
or
pop
pop
stos
aaa
outsl
cmp
cmp
xor
aad
jge
push
sub
adc
into
xor
imul
outsl
sub
fiaddl
jmp
shr
inc
repz
out
lret
xchg
jmp
pop
out
icebp
mov
mov
loope
cwtl
or
dec
xlat
cmpb
xor
mov
in
lds
push
imul
adc
push
sbb
inc
shlb
dec
stc
dec
out
pop
jmp
dec
mov
xlat
mov
mov
add
add
xchg
out
or
xor
push
push
insl
into
mov
mov
inc
add
jl
and
scas
jg
gs
push
fists
sub
xlat
and
mov
rorl
adc
loopne
hlt
cmpl
sub
xchg
xor
sbb
aam
add
dec
jbe
xchg
loop
jge
jae
xlat
xor
mov
je
and
pop
add
push
lds
mov
in
enter
sbb
stos
pusha
rclb
stos
mov
or
lods
xor
pop
adc
sbb
cltd
out
mov
push
addb
mov
jmp
lcall
out
int
fs
cmp
sub
es
sub
sub
sub
inc
nop
outsb
in
addr16
add
pop
ret
aas
xchg
add
xor
xor
sbb
adc
jnp
dec
pusha
cld
call
aam
add
movsl
pushf
mov
fisttpll
jb
or
add
jo
outsl
dec
inc
test
dec
cwtl
test
and
mov
and
iret
mov
mov
push
pop
push
mov
push
je
ret
pop
in
std
dec
leave
mov
push
roll
xor
push
jns
pop
rorl
push
out
and
cli
jle
sub
mov
stos
dec
scas
mov
or
xlat
ret
out
mov
xchg
sub
test
test
cld
cmpl
pop
cmc
iret
aam
shrb
pop
pop
popf
and
fdivrp
sbb
sub
and
popa
sti
xchg
in
out
repz
ret
adc
or
test
jecxz
imul
pop
adcb
and
into
mov
push
loope
loop
paddsb
imulb
adc
and
inc
stos
adc
das
sbb
or
add
dec
ret
push
xchg
cld
mov
arpl
das
xchg
xor
lods
pop
int3
xchg
dec
push
ljmp
mov
dec
lahf
xchg
sbb
cltd
jle
and
in
les
jne
push
mov
lahf
std
jge
test
loopne
dec
imul
pop
cmp
sbb
movl
push
cmp
and
mov
xchg
notl
leave
cmp
arpl
cmp
repz
push
pop
push
pop
js
mov
out
fs
fcomps
inc
or
pop
movsl
sldt
mov
sbb
mov
lods
mov
and
enter
mov
cmpsb
ds
or
js
mov
ljmp
pop
xchg
pop
clc
fmuls
push
and
pop
es
in
sub
inc
fisubrl
xchg
pop
pop
jecxz
repz
fcoms
out
mov
aaa
push
adc
cld
xchg
icebp
jecxz
pop
push
cmpsl
inc
out
xor
dec
push
in
pop
jmp
sub
jp
sub
aam
fcomps
les
stos
jle
push
sub
mov
ja
das
cmp
sbb
or
cmp
pushl
aam
in
jmp
int
pop
fcomp
pop
jg
enter
cltd
enter
dec
frstor
dec
dec
dec
jle
jne
jge
mov
arpl
rcr
xchg
cmp
adc
iret
sub
or
sti
add
xchg
loop
mov
ja
mov
cmp
add
popf
lock
mov
cmp
cmp
popf
clc
rcrl
pop
adc
jae
sub
fsts
rcll
xchg
and
mov
xchg
imul
aad
push
repz
mov
sbb
inc
push
jbe
movsl
roll
or
mov
xor
popa
hlt
es
popf
add
push
aas
ja
pop
jne
push
push
mov
pop
jnp
lea
pop
xchg
jg
dec
fstpt
push
sbb
mov
sub
subb
jg
add
xchg
mov
push
jmp
es
outsl
mov
xchg
sub
sahf
popa
repnz
inc
jne
loope
shll
mov
inc
lcall
stos
cmp
mov
jl
and
call
lret
lret
jns
push
sti
cmp
dec
xorb
pop
mov
pusha
adc
lods
inc
popa
sarl
pop
mov
out
movsb
mov
jne
outsl
cltd
push
adc
and
lods
pop
mov
adc
sub
int
jae
repnz
lea
mov
pop
test
dec
mov
inc
lea
fcmovbe
jmp
test
cli
xor
jb,pn
inc
mov
out
lods
and
mov
xchg
out
adc
push
js
or
inc
iret
lds
pop
push
cli
insb
push
fidivrs
in
scas
leave
xchg
inc
mov
push
mov
les
inc
dec
push
push
dec
dec
and
stos
movsl
mov
mov
shlb
push
int3
mov
jne
sbb
lock
mov
push
ljmp
inc
jb
xor
adc
pop
out
fildll
push
sub
or
lret
dec
jl
sbb
stos
jle
pop
or
sbb
pop
or
or
push
or
int
cmp
ds
call
sub
pusha
dec
mov
jg
adc
mov
adc
pop
xchg
outsl
data16
xor
adc
mov
sbb
out
jle
adc
push
sub
ror
xchg
xchg
dec
add
push
xor
sbb
push
xlat
sub
in
addl
mov
xor
cmpsl
lret
xor
mov
push
push
pop
popa
arpl
test
cli
xor
out
pop
pop
mov
mov
mov
xchg
mov
out
lods
ja
mov
mov
or
fldcw
dec
sbb
push
loope
into
data16
cmpsl
sahf
adc
and
mov
jae
mov
mov
movsl
out
insl
data16
dec
sub
in
leave
mov
scas
inc
jg
scas
fwait
std
pop
shll
sub
xchg
arpl
sub
dec
movsl
mov
add
in
fdivrl
add
imul
jae
sbb
ja
inc
dec
in
mov
imull
jb
adc
dec
mov
xor
out
inc
imul
in
sbb
out
cmpsb
ret
xor
pop
cmp
je
pop
pusha
ljmp
subl
repz
and
push
pop
pop
ss
add
add
pop
stos
mov
lret
push
inc
in
rcl
add
adc
das
fnstenv
push
cltd
push
cld
fwait
cmp
test
mov
add
xchg
imul
xchg
sarl
addr16
out
push
xchg
es
xor
ror
bnd
xor
ficoml
mov
xchg
cs
pushf
lods
mov
xor
cmp
pop
ljmp
pop
cmp
movl
loope
leave
lock
fisubrl
mov
out
jle
xor
int3
and
sbb
ret
imul
ret
inc
cmpsl
dec
jmp
lods
cmpsl
ds
mov
in
fwait
popf
jl
mov
into
outsl
imul
push
xor
xor
pop
xor
insb
adc
xchg
roll
mov
in
int3
jae
pop
push
adc
scas
and
test
sub
jbe
jle
rolb
sbb
xor
mov
push
pop
int3
cmp
stos
into
ret
add
fcomps
fcomip
filds
movsb
pop
loopne
pusha
mov
inc
sbb
jo
dec
cli
dec
pop
sbb
loop
jnp
ret
pop
pop
mov
into
outsb
sbb
popa
add
scas
into
dec
rcrb
loopne
movsl
xchg
and
ja
and
mov
or
imul
outsl
mov
fwait
aaa
push
pop
mov
gs
lock
add
xchg
test
add
mov
add
scas
and
arpl
add
mov
push
push
dec
stos
cwtl
aaa
dec
mov
xor
mov
jecxz
dec
add
fcmovbe
push
loop
lea
jae
mov
shrl
rorb
repz
loop
sub
data16
popf
pop
scas
arpl
jne
sub
push
sahf
das
mov
subl
mov
mov
xor
std
lea
push
in
mov
fs
mov
leave
xchg
fcmovnb
scas
mov
xchg
cmp
mov
shll
mov
sbb
push
out
fldenv
es
mov
pop
add
adc
jecxz
aaa
push
dec
ds
cmp
clc
push
and
push
mov
and
pop
push
push
loop
sub
aad
pop
mov
add
add
pop
fidivs
icebp
jo
das
sub
mov
push
dec
jnp
mov
lods
xor
xchg
mov
add
mov
arpl
mov
pop
jae
adc
pop
push
test
outsb
add
dec
pop
daa
xchg
mov
sahf
lods
or
fwait
sub
adc
dec
cltd
shl
mov
in
mov
test
sub
arpl
mov
mov
and
mov
rcrl
xor
cld
ret
ljmp
loope
xchg
and
lods
aad
call
aad
daa
lds
fmuls
jmp
rolb
int
aam
push
mov
out
ss
int3
jns
mov
mov
inc
push
popf
stc
test
jecxz
decl
jne
sbb
ljmp
xlat
shlb
daa
lret
loope
call
gs
xchg
repnz
out
mov
mov
repz
mov
addr16
outsb
std
push
addr16
pushf
mov
bound
xchg
push
xchg
mov
jb
push
dec
jo
push
push
mov
xchg
jo
jecxz
test
mov
cli
mov
pop
and
popf
ja
mov
mov
xorl
aas
jnp
sbb
xorb
rorb
jg
dec
mov
fisttps
lods
out
mov
lods
adc
and
jbe
and
xchg
add
das
rclb
test
fbld
test
mov
or
iret
sub
inc
sbb
ja
stos
add
out
out
sar
jmp
and
or
addr16
and
pop
sub
cmp
in
jp
dec
mov
iret
push
add
and
dec
xchg
stos
stc
jge
es
test
fbld
divl
pop
mov
adc
sbb
mov
sbb
add
mov
lods
sbb
sbb
dec
mov
inc
add
idivl
pop
inc
sti
mov
inc
xchg
jo
jecxz
push
or
pop
cmp
repnz
inc
data16
push
ds
rcll
aaa
adc
mov
add
xchg
mov
pop
bnd
sub
or
and
sbb
mov
adc
inc
inc
sub
outsl
xchg
adc
test
ds
cmp
mov
dec
mov
pop
out
mov
xchg
jb
fmull
mov
jg
jmp
imul
and
mov
xchg
pop
dec
stos
test
insb
pop
mov
add
mov
or
stc
rolb
mov
xchg
fwait
mov
pop
mov
pop
iret
pusha
sbb
jl
fwait
lods
xchg
cmp
out
jne
or
mov
hlt
mov
outsb
jno
gs
mov
lret
jge
jnp
out
ret
cmp
mov
xor
insb
inc
leave
aaa
lds
cmp
mov
jns
icebp
lock
scas
pop
call
lea
ljmp
filds
xchg
jl
xchg
xchg
out
nop
leave
les
sahf
cmp
rcll
xchg
fsubs
inc
xorb
push
dec
gs
xchg
xchg
icebp
xor
xor
xchg
push
jg
fnstcw
dec
out
and
out
pop
enter
pop
mov
inc
testb
xlat
inc
dec
sbb
pop
cmp
pop
ja
popa
data16
fwait
push
and
in
test
jp
sub
sub
pop
dec
ljmp
push
cmp
sti
mov
test
jl
lods
mov
push
fistps
xchg
sbbb
shll
xor
cmp
stos
mov
xchg
lock
testb
cmpsb
sbb
lret
rcrl
test
cltd
cmp
inc
and
cmp
jno
stos
xchg
sti
sub
pop
or
xchg
cmpsb
lcallw
inc
sbb
sahf
mov
stos
mov
jl
pop
mov
mov
mov
dec
dec
xor
xchg
test
ljmp
xchg
int3
push
js
mov
out
fistpll
sbb
stc
imul
ja
or
loope
xchg
loope
xchg
mov
les
into
scas
ds
mov
mov
jg
pop
sbb
adc
add
scas
iret
mov
test
cld
pop
cmpsl
andb
in
cmp
int3
sahf
loop
fcoml
inc
ffree
imul
push
xchg
negb
jne
xor
mov
outsb
dec
repz
mov
popa
pop
cmc
mov
jl
mov
push
movsb
xor
xchg
xchg
dec
xor
stc
sub
mov
cmp
jno
mov
mov
cmpsl
xchg
cltd
mov
jo
ja
and
cltd
leave
inc
dec
aaa
adc
xchg
lahf
loope
jg
popf
in
push
outsb
test
sub
pop
scas
dec
mov
cmp
scas
sub
xchg
clc
mov
xor
aam
mov
pop
mov
repz
xchg
ret
ljmp
push
clc
mov
sahf
mov
stc
mov
sub
popf
ss
imul
jle
or
aas
xchg
int3
sbb
aad
popf
roll
add
mov
and
cltd
xor
pop
inc
mov
mov
imul
inc
xor
dec
dec
les
and
or
hlt
mov
inc
or
sub
ss
test
sbb
lahf
mov
jb
push
inc
or
lret
push
leave
dec
add
mov
sarb
call
mov
mov
pop
mov
jo
sbb
xor
call
mov
jno
test
jge
jmp
scas
insl
jae
aas
xchg
sbb
movsl
lret
inc
adcl
rolb
loope
jns
xor
mov
shll
fldenv
xchg
divb
push
add
dec
shl
stos
sbbl
fs
push
mov
enter
or
aad
jl
insl
cld
and
add
pop
xchg
cmpsl
mov
cmp
jmp
stc
dec
or
cltd
add
in
andl
pop
jmp
in
dec
cli
imul
test
lret
jg
fwait
xchg
cmp
dec
jno
dec
rcll
mov
ja
sti
pop
stc
cltd
sub
lock
sbbb
add
movsl
xor
test
int
fiadds
push
jnp
scas
xchg
or
lods
sbbb
mov
cmp
int
adc
lret
pop
cmp
in
add
cmpsl
mov
sub
rorb
daa
adc
pop
pop
or
fnstcw
dec
andb
fnstcw
pop
jl
lret
leave
loope
or
dec
lods
insl
leave
push
mov
and
outsb
xchg
aam
pop
orl
push
pushl
pop
in
ds
add
inc
stos
lret
mov
pop
sbb
shr
pop
cmpsb
repz
add
in
aaa
jbe
test
or
iret
mov
xor
xchg
inc
fbstp
aad
loop
sbb
sub
mov
jl
sub
dec
push
jae
xchg
outsl
add
sti
cmp
js
popf
adc
pop
sub
lea
sti
cmp
mov
int3
cmpsl
xor
cwtl
jl
jo
jb
ljmp
adc
mov
ffree
push
sub
sti
inc
push
popf
xor
sub
dec
testb
cwtl
pop
out
scas
sub
push
dec
icebp
mov
addl
pop
add
lcall
inc
dec
js
int
aaa
rorb
inc
insb
orl
dec
cli
push
and
pop
mov
push
add
ret
popa
lret
and
inc
add
clc
enter
int
out
adc
and
testb
or
push
add
dec
and
sbb
mov
push
or
mov
jo
das
mov
lret
in
pop
cmp
ror
sub
icebp
dec
jno
sub
sub
ds
and
pusha
mov
leave
inc
nop
push
mov
or
cs
movups
mov
push
sahf
xchg
imul
jo
mov
and
loopne
push
nop
subb
lds
add
mov
dec
jg
imul
pop
mov
popa
adc
push
xor
xchg
push
icebp
xchg
pop
call
pop
mov
sub
test
lods
stc
shrl
test
mov
sbb
andl
xchg
sbb
jbe
popa
jbe
test
or
mov
sbb
xor
xor
imul
pop
cmpsb
push
xor
cmp
sbb
cmpl
sbbb
inc
repnz
sub
fnstenv
inc
subl
inc
push
sbb
imul
insb
pop
jle
rclb
push
cmpl
push
loopne
xchg
ja
shrl
add
sbb
arpl
aas
lds
nop
xor
js
cmp
mov
in
out
adc
hlt
int3
xorl
mov
cs
adc
js
pusha
fstl
popf
clc
jecxz
sub
imul
frstor
inc
mov
ficoml
adc
push
mov
xchg
ljmp
out
xor
inc
and
lods
lods
and
lahf
cmp
ja
out
notb
fstl
movlps
jae
loop
insb
jbe
loopne
lock
and
shlb
mov
jg
cltd
xor
repnz
adc
jl
out
pop
cltd
repnz
outsb
adc
mov
cld
inc
stc
pop
sub
sbb
mov
insl
movsl
data16
scas
sarb
repnz
or
sti
gs
adc
xchg
push
aas
scas
pop
pop
cmp
push
insl
cli
jno
pusha
icebp
jno
pop
lret
cmc
jge
push
ret
or
mov
add
push
ljmp
mov
ljmp
jecxz
dec
cwtl
je
pop
mov
push
jl
pop
dec
pusha
jae
sub
or
pushf
sbb
dec
nop
adc
mov
or
push
shrl
mov
lods
jnp
jo
adc
mov
cwtl
cmp
icebp
leave
cwtl
imul
shl
push
mov
mov
xchg
sub
pusha
mov
lds
in
fcmovu
pop
ds
mov
fisubs
xchg
filds
push
jmp
or
pop
jmp
mov
and
shll
es
lret
lods
repnz
or
xor
xor
jge
xlat
dec
push
adc
jne
cmpsl
sahf
adc
mov
pop
fidivrs
sbb
stc
adc
xor
xchg
pusha
popf
dec
inc
roll
and
adc
push
and
stos
loop
mov
out
sbb
sub
inc
push
shll
aaa
cmpsb
pop
shl
jl
push
mov
pop
or
mov
and
sub
and
sti
cwtl
int
sti
inc
test
ret
movsb
jmp
mov
mov
arpl
lods
cmp
dec
jg
movsb
sarl
loop
shrl
in
fwait
mov
jmp
sub
mov
mov
jae
popf
push
push
fs
pusha
int
repnz
mov
addr16
cwtl
push
sub
dec
inc
daa
and
jne
je
mov
cltd
push
stos
das
mov
out
jp
hlt
sbb
fsubs
mov
mov
jno
add
inc
add
mov
scas
add
jp
ss
call
xchg
outsl
sbb
inc
cmp
out
test
into
jp
cmc
push
xchg
jecxz
decb
lock
sahf
dec
mov
sub
mov
mov
stos
outsb
ret
iret
push
nop
pop
pop
mov
cld
cwtl
lfs
mov
add
mov
or
cmpsb
aad
pop
pop
or
test
lret
push
lret
xor
mov
aaa
jnp
es
cli
sbb
bound
test
aaa
inc
push
lcall
dec
outsl
and
pop
sbb
xchg
movsl
loop
decl
mov
push
outsl
lods
das
pop
and
or
cltd
lock
cmp
enter
mov
push
ror
push
test
sub
push
lods
ss
hlt
xchg
mov
jge
lret
jbe
sbbl
mov
ljmp
stc
sub
cmpsb
dec
push
outsl
out
notl
push
cmpb
ret
fwait
or
mov
stos
fwait
aaa
xchg
push
cmp
cmp
fildl
adc
add
sbb
inc
fstps
andb
popf
insb
ret
jmp
inc
adc
cld
add
xchg
jnp
jmp
cld
inc
or
test
insb
push
xchg
jnp
cwtl
scas
inc
test
dec
mov
pusha
jmp
ret
fwait
nop
leave
xchg
fcoms
sub
out
mov
add
push
xor
test
fs
mov
add
outsb
aas
jae
inc
pop
xchg
nop
jne
or
inc
mov
testl
jg
jne
jle
imul
add
hlt
in
fs
sbb
fwait
out
sub
in
shrb
cli
jle
movsl
pop
jb
mov
jmp
popf
aaa
pop
out
fucomi
sbb
xchg
insl
dec
xchg
add
push
mov
adc
shrl
sbb
mov
mov
pop
push
add
add
stc
cwtl
test
add
mov
push
jb
es
sub
adc
loope
sbb
push
add
inc
fsubrs
popf
lods
int3
xor
inc
pop
push
mov
lods
mov
aam
push
in
jmp
test
mov
or
pop
jg
outsb
out
push
pop
xchg
mov
adcl
jbe
mov
sbb
jne
or
gs
orl
sub
add
push
mov
sbb
movlps
fisubs
or
jno
es
jmp
adc
and
jmp
xlat
nop
testb
cs
jae
and
mov
loope
pop
lds
fdivr
cmpsb
roll
imul
leave
pop
loope
scas
mov
cmovns
sub
and
ljmp
mov
sbb
add
out
arpl
mov
insb
cmc
xlat
in
icebp
in
mov
lret
addr16
cmp
dec
mov
mov
xchg
sub
jne
jo
xor
ret
xor
scas
push
test
js
xchg
lds
cmpsb
lds
aam
in
pop
fidivrl
jmp
sbb
jmp
or
stos
or
or
loop
or
test
enter
bnd
rep
lcall
out
xor
icebp
xor
jo
dec
std
inc
imul
jns
pop
outsl
push
sahf
ret
lcall
fst
cmp
scas
out
push
xor
sub
inc
push
inc
cmp
fs
mov
inc
pop
mov
out
sbb
fdivrl
gs
call
lds
out
testl
mov
jnp
pop
fsubrl
ljmp
ret
inc
nop
xor
add
enter
mov
and
inc
or
fwait
pusha
cmc
adc
cs
sarl
mov
mov
ja
sub
adc
dec
loope
add
xchg
cmp
aaa
ret
xchg
and
mov
hlt
inc
mov
cld
jne
mov
push
xor
adc
push
sub
bound
mov
mov
xchg
je
nopl
xchg
mov
ljmp
jl
fsubl
cmp
jmp
movsl
mov
in
repnz
mull
push
loop
addb
xchg
xchg
xchg
xchg
mov
lret
aam
and
aam
xor
jnp
jge
mul
pop
push
mov
data16
imul
mov
daa
sbb
lds
es
daa
outsb
sbb
dec
dec
adc
cmp
inc
movsb
adc
popa
es
rclb
push
les
out
lcall
divb
stos
add
jp
and
hlt
mov
out
loopne
mov
mov
adc
jno
mov
stos
das
jmp
mov
imul
adc
inc
fwait
movsb
ja
xchg
xor
mov
mov
cld
mov
or
lret
inc
mov
aad
xchg
mov
inc
sub
in
leave
mov
movsb
fidivl
push
xlat
adc
fnsave
push
xchg
or
jmp
jno
imul
int
mov
rcrb
xchg
add
jns
mov
cmp
out
test
sbb
popa
mov
sti
sub
aad
inc
sbb
lahf
lea
in
jne
xchg
addb
and
mov
mov
pop
add
pop
add
mov
fbld
or
sub
mov
cltd
push
cmpsl
mov
xchg
lods
into
cmp
pop
pop
push
dec
mov
dec
xor
out
fwait
in
je
add
jns
nop
outsl
orl
mov
xchg
aaa
subl
in
sub
popa
in
outsb
cmp
or
sbb
lret
subl
sbb
std
xor
jmp
add
add
in
jns
cltd
mov
movsb
or
xor
inc
fisttpll
push
pop
fstpl
sarl
pop
out
inc
adc
xchg
in
xor
shr
add
repnz
inc
push
lds
and
aad
pop
lahf
jmp
jb
adc
cmc
cltd
rorl
movl
sub
gs
pop
sbb
lret
fildll
stos
sub
or
stos
insl
cmp
sub
test
xchg
outsl
pop
xchg
arpl
les
stos
out
scas
hlt
inc
dec
mov
or
xlat
mov
popf
xchg
insb
mov
fists
aaa
cs
test
rorb
aaa
insl
jbe
and
and
sbb
push
pop
lcall
mov
pop
mov
jp
test
sahf
dec
mov
popf
mov
xchg
clc
push
adc
popa
das
lods
shlb
xor
push
lods
jmp
adc
dec
test
rorb
addr16
inc
int
stos
inc
inc
jnp
xchg
dec
das
adc
dec
fsubl
jge
push
fimuls
hlt
scas
enter
jle
push
daa
scas
jl
xchg
push
mov
dec
dec
mov
out
jmp
adc
and
addb
xor
loope
mov
or
negl
mov
loopne
jno
outsl
sbb
or
into
test
dec
mov
pop
jne
mov
add
sbb
cmc
aas
adcb
jle
inc
adc
jne
jle
cmpb
inc
andl
dec
fildll
or
mov
cmp
imul
cmp
popf
mov
call
aaa
and
sbb
or
jle
imul
cmp
cmp
jp
pop
cli
jnp
out
stc
push
je
jbe
test
cltd
les
shr
push
mov
pop
mov
jecxz
adc
loopne
pop
stc
shll
int
pop
push
adc
mov
pop
call
fisubl
or
outsl
jl
fwait
mov
mov
mov
mov
pop
insb
popf
ret
pop
clc
xlat
inc
das
push
jg
sub
xor
fwait
cmp
enter
jo
mov
fsts
xchg
pop
into
xchg
mov
pop
dec
arpl
mov
mov
mull
adc
xor
add
jl
mov
add
lock
jmp
shl
test
pushw
out
mov
and
mov
frstor
push
cmp
dec
roll
std
cmp
sub
jl
cmp
push
pop
pop
push
fistl
orb
jo
insl
jle
push
mov
and
mov
pop
rclb
push
and
jns
movsb
xchg
cltd
pushf
jnp
mov
cmovb
in
lds
pop
popf
test
push
xchg
inc
mov
shrb
push
adc
mov
xor
aam
loop
push
cmp
mov
testl
mov
jg
cwtl
push
sbb
repz
mov
sti
cmp
sbb
add
push
ds
aad
push
xchg
inc
mov
test
add
cld
pop
mov
data16
fnstenv
pop
pop
inc
adc
int
push
loop
mov
pop
mov
hlt
dec
test
and
sub
loope
pusha
ret
stc
cmpsl
pop
mov
hlt
inc
fs
jnp
add
xchg
and
mov
sbb
stc
mov
cmpsb
int
das
in
cmp
xor
int3
add
nop
adc
bnd
outsl
mov
lcall
push
jp
adc
ret
xor
push
lahf
insb
lret
lret
xor
cmpsl
ret
xchg
mov
jns
fidivrl
pop
stc
mov
push
or
scas
mov
pop
and
pushl
or
adc
pop
cmp
icebp
scas
and
movsl
sti
xchg
or
sub
pop
insl
sbb
loop
int3
pop
add
jae
lods
clc
xor
adc
push
int3
or
enter
inc
insl
lock
push
mov
and
out
push
pop
cmpb
icebp
inc
adc
ficoml
mov
imul
data16
frstor
insl
dec
jb
lret
cmp
int
sbb
sub
movsl
test
push
test
dec
pop
mov
and
dec
jbe
or
fistps
lea
add
add
outsl
jb
scas
addr16
sbb
mov
repz
mull
out
pop
cwtl
repz
ret
test
movsb
cmp
data16
jp
push
fildll
test
mov
out
scas
pop
push
and
ret
jecxz
push
cltd
lcall
out
stos
je
arpl
clc
sbb
cmpsb
mov
int3
or
fbstp
cmc
dec
loop,pn
push
outsb
test
out
sbb
je
movsb
es
and
out
or
jb
cmpsl
push
jecxz
orl
scas
xor
and
mov
icebp
jmp
pop
shrl
inc
pop
push
sbb
ficoml
adc
mov
sbb
mov
pop
pop
pop
mov
cmp
xor
mov
pop
ret
or
jb
pop
push
addr16
insb
dec
scas
mov
aas
push
mov
int
mov
insl
inc
adc
lret
sub
daa
ficoms
es
bound
out
jo
popf
dec
inc
sarb
ljmp
pop
fnstcw
jge
dec
in
adc
mov
fbstp
mov
mov
dec
mov
sbb
fwait
pop
mov
aad
mov
mov
jb
mov
shlb
int
dec
mov
aas
call
rol
pop
push
imul
ja
sub
pop
aaa
outsb
test
pop
stos
loopne
pop
bnd
push
lods
push
push
fisttpl
lds
fldcw
pop
jbe
cltd
push
mov
test
mov
inc
outsb
leave
xchg
xchg
leave
add
add
out
jb
cmpsl
ficoml
adc
hlt
pop
xchg
mov
ret
push
mov
push
pushf
push
sbb
or
push
or
sub
rclb
cmp
and
or
imul
cs
cmp
cmp
dec
loop
scas
sbb
xor
pop
mov
aad
scas
mov
cwtl
add
in
shll
push
loop
mov
shl
stos
or
sub
pop
and
mov
adc
insl
or
jl
jb
or
add
fsubrs
test
ret
push
push
cmpsl
mov
stos
mov
or
jno
adc
bound
xor
out
and
lods
sti
movsb
call
loope
xchg
jno
idivb
mov
or
stos
mov
jecxz
pop
push
dec
sbb
xlat
adc
or
fsubl
jmp
jnp
xlat
mov
adc
push
hlt
mov
push
popf
testb
push
imul
xchg
rorb
push
mov
pop
mov
clc
test
jg
mov
sub
xorb
mov
enter
and
jo
fs
pop
std
inc
xchg
xorb
mov
scas
shll
pushf
leave
fisubs
lret
mov
xchg
push
cmp
daa
sub
std
lods
cmp
sub
pop
call
cmpsl
mov
dec
mov
mov
and
roll
test
dec
lea
xchg
mov
shlb
mov
and
mov
inc
mov
rcrl
inc
lret
imulb
les
fstp
pushf
mov
mov
loop
insb
cmp
lcall
nop
mov
inc
sbb
call
js
xchg
adc
aam
push
xchg
test
fdivrs
fcmovu
inc
push
daa
movsl
fcmove
and
movsb
outsl
mov
test
cmp
sti
or
cmc
xor
cmp
pop
mov
in
test
aad
aad
xor
lahf
adc
test
push
and
adc
xor
test
pusha
jns
ret
shl
scas
ret
out
xchg
jo
adcl
jle
imull
pop
movsb
push
xorb
movsl
jecxz
rorl
mov
pusha
mov
dec
xlat
sub
test
loope
fstl
fwait
out
or
add
fisttpll
push
cwtl
pop
int3
push
leave
pop
test
xchg
cld
and
pop
movsl
in
pop
xchg
clc
dec
sbb
push
imul
lock
push
push
mov
sbb
iret
pop
sti
xor
cmpsl
out
mov
cld
mov
rcrb
lret
push
inc
add
fadd
addr16
pop
jno
outsb
jg
jge
pusha
mov
inc
or
dec
addl
ret
or
or
dec
sub
and
inc
fidivl
je
xor
aad
mov
and
es
jo
or
lcall
mov
call
ljmp
in
mov
sti
jp
sbbb
roll
or
xchg
xor
dec
movhps
in
inc
mov
add
cmp
xchg
add
ds
fsubl
lret
mov
fwait
xchg
pop
mov
stc
cmp
inc
lods
add
iret
sbb
or
fsts
arpl
push
dec
scas
mov
push
movb
jp
nop
mov
in
bound
std
xchg
adc
sub
mov
enter
mov
add
aas
cmp
push
fcompl
lcall
loop
fisttps
mov
cmp
insl
call
scas
mov
adc
cmpsb
mov
or
mov
addr16
lea
dec
out
shll
xor
mov
push
inc
insb
sbb
insl
popa
inc
aad
lret
nop
inc
mov
divl
xor
cmp
fcoml
dec
aas
jbe
fdivs
dec
and
inc
sahf
pop
int
push
into
inc
icebp
adc
xchg
int3
mov
push
es
mov
sbb
cs
dec
xor
clc
aas
mov
inc
pop
mov
pop
or
test
fs
in
and
ja
xchg
xchg
mov
ss
imul
mov
xchg
xchg
int3
sub
jp
jbe
mov
jb
popa
into
inc
scas
and
dec
add
jb
arpl
dec
or
std
cmpsl
mov
push
jmp
mov
cmp
mov
mov
test
lea
inc
add
or
add
lcall
dec
cmp
mov
movsl
loopne
and
and
or
cmp
push
push
xor
fwait
xchg
flds
repnz
ret
in
adc
or
aas
jo
cmc
sub
sub
enter
popl
inc
mov
ja
xor
lret
cmp
mov
sub
mov
jge
pop
sub
in
and
mov
mov
sbb
adc
and
testl
call
pushf
dec
addl
adcl
lcall
out
cwtl
mov
jg
inc
push
mov
xchg
jnp
and
test
insl
jbe
inc
repz
xchg
dec
pop
icebp
pop
push
test
dec
imul
mov
or
dec
jge
incl
daa
aam
jle
shll
mov
jp
das
out
lods
aas
jno
repz
and
mov
xor
test
sub
testl
jp
loope
cld
xor
pop
into
imul
and
jge
adc
jecxz
aaa
add
sbb
icebp
out
shrd
pusha
push
aas
ret
and
jl
jle
jnp
imul
mov
sarl
xor
dec
stos
mov
aas
out
xchg
and
int
inc
pop
fcompl
fldt
push
popf
stos
std
pop
addb
mov
pop
add
push
xor
popa
cmc
test
fwait
mov
loopne
jbe
pop
dec
adc
mov
pop
stos
mull
into
mov
add
into
mov
mov
pop
jb
sahf
or
test
in
pop
dec
mov
add
iret
adc
sahf
jne
bnd
or
insl
loopne
mov
jecxz
adc
mov
xorl
push
push
pop
pop
push
xor
pushf
jecxz
inc
xlat
sub
jb
xchg
test
cmp
daa
int
xor
and
mov
call
mov
mov
jle
mov
aaa
test
jecxz
sahf
lret
jnp
mov
and
mov
scas
mov
adc
push
sub
adc
sbb
mov
mov
and
pop
adc
aad
pop
scas
xor
sbb
insl
mov
mov
arpl
hlt
cmp
pusha
loopne
mov
out
cs
test
or
int3
fdiv
insl
pushl
rolb
xchg
mov
cmp
rcll
out
sub
sub
lret
sub
or
es
dec
xchg
outsb
push
idiv
es
xor
sbb
outsl
addr16
sahf
or
loope
xor
test
jmp
xor
push
pushl
mov
repnz
jae
je
js
or
inc
popa
faddp
push
cmp
pop
aad
daa
rcll
ja
rcll
push
xor
mov
or
jl
dec
mov
mulb
fcom
fdivl
or
aaa
inc
out
fists
push
stos
mov
aas
sbb
lods
fmuls
adc
pop
sub
xor
cmpsb
imul
lods
pop
call
dec
mov
inc
ljmp
cltd
insb
push
jmp
adc
bound
sbb
jb
and
fisubl
sbb
dec
in
or
mov
scas
cld
cmp
fstpt
xor
rcrb
push
addl
outsb
inc
sbb
lahf
mov
adc
cs
push
es
push
ljmp
add
mov
in
jno
push
dec
and
rorl
adc
nop
popf
adc
cmpsb
xchg
inc
mov
or
cltd
iret
cmp
sbb
mov
gs
inc
adc
or
daa
shlb
adc
xchg
lret
dec
mov
add
incb
adc
xor
sub
xor
sbb
sbb
ss
das
in
ds
imul
rcr
popa
add
fsubrl
into
or
into
or
cmp
call
sub
addr16
cmp
loope
inc
dec
fsqrt
cltd
sub
mov
add
mov
into
adc
dec
sti
push
jbe
bound
jb
cmp
xor
test
cmpsb
cmp
popa
or
ret
rclb
cld
sbb
test
dec
daa
inc
mov
dec
xchg
jecxz
fs
mov
add
jo
loopne
sub
add
sbb
rolb
and
dec
cmp
fmull
xchg
push
add
xchg
adc
jg
dec
fwait
sbb
xchg
or
mov
sbb
daa
movsb
decl
aam
out
ror
sbbb
jb
icebp
xor
nop
es
out
sbb
fcom
or
mov
xlat
std
aaa
sbb
sahf
jne
and
cmc
add
popa
rcrl
test
jle
push
mov
iret
addr16
mov
jns
sub
insb
cmp
loope
stc
out
dec
push
or
xor
in
dec
out
loop
push
bound
adc
dec
lods
lods
das
mov
out
mov
daa
sub
enter
pop
jnp
xchg
aaa
adc
or
fildll
mov
push
in
cmpl
xchg
fimuls
inc
add
dec
cmp
mov
and
mov
mov
cmp
jmp
pop
sbbb
mov
popa
pop
adc
sbb
ss
push
add
nop
cltd
ljmp
cmp
fdivs
pop
cmp
cmpsl
pop
loope
mov
es
outsl
movsb
into
les
aas
pop
jbe
out
mov
dec
cmc
ret
cmp
leave
inc
rol
sbbl
cmp
int3
lea
cltd
lea
fdivl
dec
inc
add
enter
or
add
sub
dec
pop
push
sbb
rolb
sub
mov
jns
xchg
ss
sbb
or
fadd
iret
mov
cmp
std
lods
or
ret
stc
sarb
add
sbb
mov
divb
cmp
mov
loope
mov
sub
daa
jb
mov
xorl
in
or
test
inc
and
int
popf
stos
stos
or
bound
push
dec
inc
inc
enter
mov
inc
out
sbb
add
xor
sub
ja
outsl
jnp
idivb
mov
iret
sti
rcrl
mov
mov
mov
popf
pop
cld
in
cmp
sbb
or
or
test
fnstsw
testb
xchg
loop
mov
inc
adc
aaa
sbb
aad
and
rcll
call
jl
popa
mov
inc
or
push
mov
in
sub
test
fdivrs
scas
loopne
jge
mov
cmp
inc
mov
sbb
sbb
outsl
sbb
gs
popf
xor
ss
jnp
sti
loop
jp
popa
fwait
aaa
dec
lods
std
shl
int
push
dec
test
mov
xlat
les
ja
decl
and
xchg
repnz
stos
jbe
push
fisttpll
sbb
or
cmp
jge
lahf
or
inc
xor
fldcw
pop
gs
mov
push
add
cli
insb
jbe
mov
push
loop
xchg
pop
push
sub
sbb
cwtl
loop
sub
xchg
idivl
int
xor
xor
and
push
jns
mov
imul
xor
mov
leave
and
pop
aad
jno
xor
push
and
ret
sarb
push
in
mov
xlat
xchg
imul
mov
sub
xchg
popa
lods
sbb
pop
xchg
cmp
mov
int
cmp
jl
add
jns
sarb
out
cmc
inc
out
cmp
adc
or
fcmovne
pop
mov
push
lods
cmp
hlt
mov
outsb
ror
sbb
pop
xlat
mov
jb
loopne
jno
inc
add
pop
mov
push
mov
faddl
insl
imul
or
mov
inc
and
xchg
add
push
and
push
inc
pop
and
clc
bound
fstps
push
sub
sub
mov
or
cs
mov
mov
push
jnp
adc
inc
sub
xor
notb
out
sbb
shll
cmpb
cmp
mov
rcrb
and
inc
fs
imul
mov
daa
mov
ljmp
mov
mov
push
push
movsb
and
sbb
pop
ljmp
rolb
push
int
insl
addr16
inc
and
std
mov
lret
cmc
sub
jp
dec
movsl
test
adc
out
sarl
enter
inc
push
fldpi
cmpsl
dec
mov
or
push
ret
inc
in
cltd
in
icebp
push
inc
sub
addr16
cmp
stc
lret
cltd
jle
mov
pusha
jne
inc
repnz
dec
daa
pusha
push
lods
push
pop
test
push
sub
add
pop
jnp
xorl
xor
add
arpl
mov
sarb
cmp
aas
test
pop
dec
enter
jmp
in
mov
sbb
negb
mov
xchg
fidivs
and
scas
enter
and
mov
inc
xorl
push
or
es
arpl
imul
loope
sub
mul
mov
push
imul
call
pop
push
dec
mov
enter
cmc
js
xorl
xchg
subl
lock
int3
out
jg
out
movsb
shl
dec
call
outsl
sbb
push
gs
pop
stos
ljmp
aam
mov
mov
and
fdivrl
jl
xchg
cmp
mov
xor
scas
push
xchg
cs
mov
sub
push
add
sahf
ret
xor
push
lret
hlt
repnz
scas
jmp
mov
mov
test
out
out
popa
mov
insl
add
mov
xchg
dec
sub
jae
pop
arpl
inc
je
ljmp
inc
mov
push
xchg
std
addr16
in
ja
push
shll
nop
aaa
pusha
dec
or
lcall
and
pop
test
shrl
inc
movsb
stos
pop
popa
lret
dec
cmpsb
lea
jb
xchg
dec
dec
mov
add
das
xor
push
cmp
cmp
repz
jle
inc
sub
sbb
in
rcr
or
std
mov
imul
mov
mov
pushf
mov
loop
testl
mov
inc
jne
jbe
call
cmp
or
cli
loopne
scas
mov
jge
mov
xchg
cmpsl
xor
inc
push
xchg
cli
popa
cmp
js
test
inc
push
sub
fistpll
adc
mov
dec
mov
ret
sahf
sahf
lea
cmp
comiss
test
mov
int
push
inc
jle
testb
repz
xor
or
add
jmp
repnz
add
push
mov
jg
aam
lcall
jne
inc
sbb
repz
rcrb
insl
cmp
add
inc
ret
and
cld
mov
adc
test
cmp
leave
jb
scas
stos
in
cwtl
adc
rorl
mov
rorb
inc
aas
mov
sbb
popf
mov
fwait
xlat
adc
pop
lea
pop
pop
or
in
push
push
xlat
fsubp
adc
outsl
push
fisttps
inc
outsl
fsts
cld
dec
les
dec
imul
add
rol
jg
rcrl
insl
jl
jne
jb
xor
js
arpl
addr16
lock
movsl
xchg
popl
sbb
jne
out
ljmp
jne
mov
movb
pop
int
bound
mov
add
or
loop
repz
sbb
rcrl
ss
jb
push
hlt
xchg
sub
pop
ss
cmovo
loopne
mov
repz
xor
or
xlat
add
or
xchg
xlat
hlt
inc
bound
mov
out
pop
cmp
test
add
sbb
test
add
fisubrl
dec
insl
add
dec
push
pop
loopne
push
data16
jne
or
lret
cmp
pop
jge
mov
ficomps
xchg
xchg
adc
gs
test
mov
test
cltd
or
mov
jns
xor
out
test
loope
out
mov
mov
lods
inc
cmpsl
fldenv
xchg
push
in
aas
mov
lea
popf
stc
outsl
inc
test
xor
pushf
dec
push
mov
mov
fisubrl
sbb
je
inc
clc
cltd
fst
mull
sti
imul
lret
into
inc
jo
outsb
lock
orl
add
jbe
inc
aam
call
sbb
iret
pop
jle
mov
clc
fistpll
or
test
test
repnz
in
int
xlat
mov
aam
fbstp
aaa
hlt
jo
repnz
divl
push
sbb
loope
mov
lock
dec
jae
push
out
shlb
xor
pop
stc
lret
xchg
shrb
or
aad
jnp
in
push
out
or
js
movsb
jp
sbb
loopne
lcall
fstpl
lea
gs
add
scas
adc
jle
mov
inc
ss
cmc
imul
pop
ret
mov
xor
adc
aas
cmpsb
test
mov
addb
sti
sbb
je
mov
into
test
or
xchg
jno
stos
stos
adc
or
push
lcall
cmpsl
sbb
ret
inc
mov
xchg
mov
xchg
ljmp
icebp
sbb
mov
popf
lret
lahf
leave
dec
pop
or
add
dec
pop
insb
jbe
pop
js
jno
stc
sub
or
cmp
jge
xchg
fimuls
fdivrp
fsubrs
pop
xor
pop
fildl
outsl
mov
xchg
add
arpl
mov
mov
insl
and
cmp
int
fistpl
lret
sbb
mov
mov
sub
mov
arpl
subl
mov
outsl
lea
jnp
lock
das
mov
fldt
fstl
icebp
mov
sbb
mov
jns
xor
pcmpeqd
sub
data16
dec
js
testb
lods
jmp
jge
ja
test
ficompl
push
push
dec
popf
pop
imul
push
es
push
jbe
jnp
xor
stos
dec
testl
pop
inc
ljmp
test
in
jl
inc
pop
lods
push
fwait
xchg
repnz
ljmp
xchg
pop
arpl
mov
sbb
cmovg
movsl
mov
pop
idivb
sti
mov
dec
mov
popf
repz
in
push
add
sub
movsl
add
in
mov
icebp
pop
mov
ljmp
mov
mov
shlb
cmp
adc
sbb
fcomip
jne
out
fsubr
dec
push
iret
jmp
lock
inc
shll
lock
xchg
cmc
push
cmp
in
divl
idivb
cli
push
lcall
jg
jb
ljmp
dec
fst
cmpl
mov
dec
push
or
mov
rorb
sub
jge
fbstp
aas
setle
push
sub
dec
adc
xchg
nop
xor
push
or
dec
out
das
int
adc
pop
lods
pop
add
mov
fcomps
lret
lahf
sbb
movsl
fwait
pop
data16
xchg
ret
pop
lcall
push
loopne
jmp
movb
mov
and
xchg
and
adc
add
mov
dec
cmc
mov
xor
out
daa
adc
data16
mov
loopne
movsb
test
inc
insl
jns
push
cwtl
pushf
stc
xchg
mov
mov
sbb
cmc
xchg
and
cmp
add
xchg
das
loopne
push
and
xor
mov
cld
push
loope
test
cmp
xlat
jmp
mov
mov
aaa
cmpsb
jbe
mov
jnp
ret
mov
pop
cmpsb
sbb
pop
cwtl
and
pushf
sub
cmp
test
jae
test
jge
mov
and
in
dec
daa
repz
and
jl
pop
test
add
cmp
fldcw
mov
xchg
inc
out
lock
mov
push
dec
xor
das
scas
ds
or
push
sub
or
test
push
mov
xchg
cmp
repnz
sub
adc
sti
enter
and
mov
xor
push
lea
aam
mov
out
dec
iret
mov
hlt
test
pop
xchg
cwtl
jg
fdivrs
xchg
mov
pusha
pusha
xor
test
in
jbe
inc
jno
add
fisubrl
adc
shl
dec
iret
push
xlat
push
push
jmp
jl
dec
push
into
and
xchg
movsb
fsubr
mov
xor
imul
sti
jne
scas
inc
push
add
mov
lods
cwtl
test
outsb
dec
popf
mov
add
cli
cmpsl
push
jecxz
xchg
sub
sarb
out
xor
out
sub
pop
pusha
stos
mov
mov
dec
outsb
inc
mov
icebp
pop
sbbb
sub
push
jl
xchg
push
jo
stos
push
xor
ljmp
xchg
mov
sbb
incl
rcl
xor
es
aad
lea
sahf
out
jne
aad
int3
into
add
jl
fildll
adc
ds
jge
mov
rcll
cwtl
mov
cmpsl
test
inc
imul
cmp
inc
adc
jecxz
cmpsb
xchg
push
adc
stos
xlat
jmp
or
mov
jl
rolb
in
loope
xor
push
push
add
push
inc
outsb
sbb
daa
push
and
jecxz
notl
cmp
aas
cmpsl
insl
mov
adc
add
inc
imul
lcall
push
loopne
out
mov
jmp
xor
push
cs
shll
js
mov
or
jae
cltd
push
das
lcall
xor
jb
sbb
and
std
push
cmp
jns
in
inc
subl
ljmp
inc
ss
dec
push
xor
pop
lods
incb
xchg
das
sbb
sbb
inc
jae
fnstsw
adc
xchg
insb
test
xor
jecxz
mull
pop
xchg
xor
enter
mov
sub
idivb
hlt
jecxz
mov
loop
jno
add
inc
xchg
add
into
arpl
lods
jecxz
pop
xchg
lret
cltd
pushf
imul
stos
mov
in
or
je
pop
or
xchg
or
cmp
loop
in
xchg
sub
fimull
in
and
les
add
out
push
into
cs
addb
push
int
xchg
xchg
push
jge
and
lods
push
jne
ds
sub
add
addl
mov
sahf
push
jge
push
cmp
fiaddl
dec
nop
leave
push
push
xlat
cmpsl
pop
enter
cli
outsl
mov
sub
aam
inc
mov
inc
dec
fidivs
cmc
test
mov
incl
mov
push
pop
xchg
push
js
call
aam
movsl
inc
bound
into
dec
mov
xchg
stos
or
gs
mov
mov
jl
sub
add
shrl
leave
iret
fldl2e
repz
pop
lods
pop
xchg
add
mov
jge
stc
xor
pop
cmc
and
cmpb
jb
xchg
pop
xchg
jne
push
fucompp
out
hlt
and
insb
andb
ret
mov
or
and
out
rorl
add
data16
test
outsl
fbld
mov
mov
pushf
lock
arpl
js
sbb
mov
fiaddl
dec
sbb
inc
cmp
xchg
cmc
imul
pushf
sti
out
jb
jb
jmp
pop
or
mov
xlat
arpl
fdivl
fdivrp
fists
adc
adc
inc
jnp
mov
inc
jne
sbb
lods
and
push
cld
fidivrl
cmp
add
mov
pop
movsb
sbb
fsts
push
dec
arpl
push
push
add
fxch
mov
push
lcall
xorl
push
lahf
daa
push
dec
lahf
add
sub
rolb
inc
imul
or
sbb
out
divl
js
cmp
ja
mov
or
inc
and
xor
out
jge
lods
mov
hlt
lea
andb
sbb
jmp
movsl
cmp
sub
loope
push
sbb
add
sbb
insb
fxch
out
push
lock
jne
lret
push
xchg
cmpsl
inc
cwtl
cmpsl
adc
stos
pop
mov
and
adc
and
ficomps
or
scas
popa
mov
jge
cli
or
dec
loope
flds
shrl
inc
loope
cld
fs
mov
xchg
and
dec
sub
in
jl
push
sbb
sarl
nop
enter
jnp,pn
lret
sbb
movsl
fwait
push
add
pop
push
sbb
xor
je
sbb
repnz
sbb
out
add
imul
push
inc
inc
adcb
iret
xchg
inc
cmp
pop
in
pop
xor
jae
mov
outsb
mov
mov
insb
or
sub
inc
fwait
hlt
pop
pop
aam
pop
cmp
decl
inc
mov
scas
imull
shll
dec
ret
pop
pop
lea
add
xor
leave
adcl
cli
lea
cmc
sub
mov
xchg
mov
rcll
inc
add
pop
movsb
mov
aad
xchg
aas
mov
in
lods
bnd
loopne
test
adcl
push
repz
data16
sahf
push
cld
outsl
or
inc
int3
enter
mov
ret
add
adc
shll
mov
lds
pop
xor
icebp
popa
jno
repnz
adc
push
xchg
std
sbb
sbb
mov
or
add
and
dec
fwait
outsl
push
and
out
pusha
nop
and
jbe
adc
add
mov
roll
in
add
mov
push
div
insb
or
cmc
inc
pop
inc
push
jmp
in
xchg
outsl
out
rcrb
jns
mov
inc
js
outsb
pop
in
ja
mov
or
fnop
push
imul
mov
jns
and
mov
repz
push
mul
pop
mov
mov
in
mov
sub
pushf
dec
mov
repz
fdivrp
xchg
notl
mov
pop
and
ss
push
frstor
dec
cmp
cld
push
sub
rorl
pop
and
dec
mov
xchg
push
push
decb
call
test
test
adc
adc
rclb
test
cs
or
pop
mov
pusha
shr
sub
or
dec
dec
fldl
roll
mov
cmpsb
aaa
adc
pop
fdivrl
fs
mov
outsb
mov
into
sub
add
pop
pop
shll
adc
daa
mov
movsl
sub
xchg
scas
pop
pop
js
xor
adc
mov
cmp
das
dec
add
jb
cmp
cmp
sti
jns
pop
lea
xchg
movsb
xchg
arpl
add
cltd
cli
scas
jns
scas
insl
or
es
cmp
loop
sarb
fwait
pop
sbb
inc
jg
insl
mov
or
cmp
jae
clc
push
popf
add
xor
nop
rorl
aad
or
fcom
pushf
mov
popa
xor
push
sti
mov
pop
sbb
outsb
imul
and
insl
adc
jb
push
jne
shrb
daa
mov
pop
sbb
add
lea
sub
imul
cmp
out
mov
sub
and
ljmp
pop
mov
out
mov
sub
pop
icebp
inc
inc
or
int3
sahf
jl
add
push
lret
mov
push
xchg
pmulhw
ret
idiv
mov
icebp
push
popa
fdivrl
sbb
inc
mov
mov
lahf
loop
sbb
mov
test
pop
testl
mov
push
test
inc
shlb
bound
and
out
sub
fs
jb
stc
rcrb
pop
mov
pop
jo
movsl
pop
addr16
fcmovb
xchg
adc
push
dec
push
cs
push
cmpsl
push
mov
jns
mov
dec
mov
and
sbb
and
fs
aaa
mov
scas
test
cmp
pop
rorl
xor
mov
inc
push
data16
mov
inc
into
in
jne
dec
xorl
imul
repz
cmp
fwait
push
sbb
xor
push
dec
jge
and
into
loopne
aas
cld
dec
mov
cmpsl
int3
push
push
xchg
clc
ds
sbb
jbe
inc
jge
cmp
mov
and
lcall
negb
aaa
mulb
mov
add
xchg
xchg
js
xchg
dec
into
je
cwtl
jo
pop
das
popa
rorl
or
insl
dec
shrl
shll
xchg
popl
arpl
adc
mov
imul
mov
lcall
mov
repz
xchg
in
pop
test
add
repnz
rcrl
arpl
or
adc
arpl
inc
pop
mov
cs
sbb
pop
mov
pop
sahf
xor
nop
dec
mov
adc
mov
dec
insb
lds
or
outsb
lret
jb
mov
adc
mov
lea
xchg
int
push
jae
arpl
fcomp
push
lcall
sbb
iret
mov
sub
sub
rcrl
xchg
inc
xlat
sub
dec
call
xchg
shll
cwtl
xor
pop
sbb
dec
jmp
andb
jmp
add
lret
iret
mov
mov
add
lods
cmpsb
push
jle
inc
and
adc
push
insb
loop
pop
xor
sbb
and
adc
in
test
inc
sub
outsb
xorb
pusha
sbb
add
sahf
dec
nop
xchg
sbb
scas
cmpl
bound
push
icebp
mov
cmpsl
repz
cmp
lret
inc
push
mov
movsl
out
dec
int3
test
pop
inc
mov
push
xchg
pop
and
mov
pop
clc
or
ss
xor
adc
sbb
mov
add
or
push
mov
inc
fdivrl
es
jecxz
cli
mov
outsb
faddl
sti
inc
xchg
push
lahf
mov
pop
in
cld
shll
pop
add
popf
cmpsb
fildl
pop
ret
push
cmc
mov
mov
sub
lahf
mov
pop
imul
dec
jg
pop
roll
add
mov
dec
or
insl
cmp
push
dec
xor
dec
push
rcrb
stc
sub
out
lcall
add
jge
mov
popa
insb
sahf
sti
rolb
jg
dec
cli
divb
es
movsb
jne
or
pop
and
jl
jecxz
dec
pop
mov
mov
insb
je
testl
lret
dec
jo
sub
sbb
xor
popf
cmp
push
add
aam
imul
push
out
decl
xchg
das
and
out
mov
sbbl
and
andb
sub
cld
push
add
imul
and
inc
and
or
mov
in
xor
sarl
repz
je
sbb
mov
iret
xchg
jae
push
jb
cld
insl
dec
dec
into
or
out
or
jo
mov
loopne
xchg
or
mov
adc
fistpll
call
out
push
xchg
outsb
sbb
or
pop
xor
xor
testl
mov
pop
xchg
mov
lods
add
sti
dec
adc
xlat
pop
imul
jmp
movsl
jno
arpl
in
sbb
inc
and
xchg
pop
mov
inc
mov
mov
jno
or
mov
test
inc
mov
sti
rcll
test
pop
xor
imul
and
test
cmp
leave
jle
fucomi
std
mov
out
add
call
xchg
das
daa
pop
inc
add
xor
jl
lcall
pop
imul
in
mov
psraw
bound
les
lds
out
insb
test
rorl
jb
lret
adcb
add
test
cs
rorl
jno
shll
jo
sahf
mov
dec
jg,pn
push
cmpsb
pop
jae
or
not
enter
test
scas
out
sti
cmp
lahf
mov
mov
loope
inc
xlat
adc
xchg
push
cs
pusha
and
loop
fstps
mov
cmpsl
sbb
ds
int
test
xlat
mov
lods
loop
pop
out
je
icebp
shl
sbb
inc
sub
js
repnz
shlb
pop
mull
out
out
adc
mov
push
mov
dec
movsl
push
adc
inc
lcall
xchg
xchg
mov
sbb
cmp
fisttpll
sub
je
dec
sbb
pop
sbb
pop
jb
xlat
mov
std
pusha
push
testb
loop
xchg
shrl
cmp
fsubs
repz
enter
dec
inc
fdivr
in
add
pop
roll
jl
mov
lret
dec
repnz
pop
in
mov
and
shlb
sbb
scas
jle
mov
sbb
sbb
shrl
in
push
xor
mov
ss
mov
loop
aaa
lret
push
mov
add
test
push
push
sarb
rcrl
bound
add
mov
lds
mov
inc
pop
je
xchg
push
push
mov
test
lods
mov
mov
and
aad
aas
push
xorl
sbb
mov
add
push
cmpsl
mov
into
cltd
push
jle
std
sbb
out
pop
jae
insb
out
stos
xor
fidivrl
cwtl
xchg
mov
scas
lea
aas
push
in
addr16
push
outsb
dec
imul
mov
inc
fwait
arpl
mov
dec
mov
std
sbb
sub
pop
mov
push
cmp
inc
test
jno
cmp
and
add
into
aam
in
lahf
and
lock
add
scas
xlat
or
cwtl
jge
test
push
xor
adc
or
fbld
mov
in
lret
lds
jo
push
pop
sub
adc
sub
into
xor
fnstenv
clc
jl
mov
mov
add
fcompl
add
cmpsl
xchg
test
jmp
fbld
push
pandn
pop
aas
adc
insb
repz
cmpsl
std
lret
out
es
mov
imul
pop
daa
ret
add
notb
cmc
aaa
fstl
cltd
pop
lods
ljmp
cwtl
push
lea
mov
daa
cmp
adc
xor
je
in
mov
add
cltd
sarl
mov
sub
cmp
dec
andl
xor
rcr
insl
xchg
loopne
sub
imul
adc
lods
aaa
sahf
neg
ret
xchg
and
mov
push
scas
xchg
inc
push
cmp
addr16
inc
push
jno
outsb
xchg
pop
pusha
xchg
add
insb
iret
mov
jp
das
jne
aas
fsubrl
jle
sub
and
jnp
cld
les
push
iret
fdivrs
push
mov
mov
adc
mov
dec
filds
sahf
orb
mov
and
cmc
sub
shr
addr16
aam
push
xor
xlat
jae
inc
xchg
inc
jl
jnp
mov
test
mov
mov
ja
idivl
jns
cmpsb
gs
les
icebp
hlt
or
jge
movsb
std
sub
stos
add
insb
or
ret
jns
enter
sbb
shlb
in
mov
push
lods
lds
or
push
shll
adc
daa
out
push
aam
cli
and
in
icebp
addr16
dec
mov
mov
imulb
push
dec
scas
ja
sahf
mov
dec
pushf
lods
mov
mov
pop
in
stc
pusha
and
pop
jbe
sahf
mov
mov
dec
cmp
inc
in
sti
push
adc
into
xor
int
test
push
lds
adc
clc
cmp
inc
sub
testl
rolb
lcall
jae
push
cmpsb
mov
mov
test
or
pop
cmpsl
aam
cmpsb
mov
jb
adc
stos
ret
sbb
mov
push
xchg
adc
or
jge,pn
lods
outsl
sub
cmp
mov
add
add
mov
dec
scas
rorl
jb
cltd
movsb
xor
jge
pop
repz
add
xchg
sub
push
jb
mov
xor
test
jle
pop
fiaddl
dec
aam
adc
push
mov
sbb
inc
cmp
pop
cld
sahf
fisubrs
orl
fnstenv
cmp
jecxz
lods
aad
mov
test
movsb
ds
bound
bound
xchg
push
pop
hlt
pavgb
jecxz
xlat
xchg
xor
lods
fs
insb
stc
imul
gs
and
fs
pop
mov
jp
jmp
inc
or
repnz
repz
dec
dec
and
cli
inc
sti
ljmp
jbe
sbb
sbb
push
push
sub
xchg
sahf
lods
push
or
not
popa
and
rcr
or
enter
and
xor
xchg
jnp
jle
adc
test
add
aaa
sbb
mov
std
cmp
scas
dec
enter
cli
push
push
sbb
je
mov
mov
rcrb
pushf
pusha
loope
cwtl
jnp
aas
jne
mov
xorl
mov
push
sub
fildll
movsb
xor
push
icebp
sbb
mov
and
jmp
jno
push
gs
in
mov
cwtl
mov
ss
ficoml
cmp
pop
jp
adc
xor
mov
push
mov
mov
in
fbld
mov
test
mov
bound
or
test
adc
ret
or
cs
cwtl
mov
leave
mov
sbb
arpl
sub
pop
inc
xchg
std
std
sbb
and
push
lods
cmpb
mov
push
inc
das
sbb
jno
inc
xor
sub
and
out
fstps
loope
in
fiadds
pop
lock
clc
xor
pop
inc
insl
xorb
mov
inc
int
jmp
repz
ljmp
sub
ljmp
loopne
fsubrl
fsubl
xchg
and
ljmp
cmc
xchg
push
push
xchg
sbb
mov
sub
test
adc
in
sti
xchg
call
sti
inc
pavgw
scas
lahf
dec
out
or
sub
and
test
rol
inc
cmp
jl
push
outsl
push
sub
std
pop
mov
cltd
scas
flds
fisubrl
mov
lods
faddl
pushf
sbb
inc
xlat
jne
lds
clc
popf
adc
outsl
out
lret
pop
lds
lahf
sbb
xchg
or
into
imul
pop
xchg
cmp
sti
xlat
es
icebp
lret
stos
pop
or
sbb
mov
push
data16
pop
popa
jle
push
enter
or
hlt
add
xor
in
bound
mov
mov
notb
push
mov
inc
jnp
fsubrl
mov
lea
cli
outsl
fxch
adc
out
aas
pop
subb
in
mulb
cwtl
ss
mov
aam
jae
cmp
push
negl
mov
dec
sub
cmpl
add
mov
data16
xchg
mov
test
adc
in
xchg
mov
je
repnz
jbe
aas
mov
and
and
inc
pop
ret
cli
jmp
xor
sbb
add
mov
shlb
stos
sahf
divb
push
cmpsl
jg
sub
cld
inc
and
cltd
leave
add
imul
lcall
aam
stos
mov
nop
xchg
inc
movsb
daa
cmp
xor
insb
movsb
jne
jecxz
adc
int
enter
ror
or
sub
insl
and
xor
lock
inc
cmc
aas
ja
dec
xor
int
pop
adc
clc
or
sbb
das
popa
pop
loope
mov
sub
pop
rorb
into
je
hlt
lods
push
xchg
sbb
add
outsb
pop
inc
cmc
xor
test
es
add
mov
inc
int
jno
mov
mov
xchg
mov
pop
jecxz
sub
sbb
mov
lcall
pop
repnz
xor
js
and
aam
je
xchg
cmp
fs
or
loopne
jecxz
clc
push
in
out
cld
or
scas
daa
fildl
jbe
jge
xlat
fstp
ja
adcb
jge
fldenv
cmp
xor
cs
addb
lods
mov
and
insb
icebp
inc
add
aas
cwtl
shr
dec
push
rcrl
cmp
pop
enter
mov
loope
rorl
jl
sbbl
ljmp
dec
ret
cwtl
js
sarb
es
pop
fwait
pop
sti
pop
and
mov
fucomi
imulb
bound
mov
xor
sti
and
aad
ret
mov
inc
ds
ljmp
cmp
ds
pop
lds
xor
jb
add
out
pop
xchg
js
or
inc
clc
popf
pop
cmp
add
xchg
mov
outsl
or
clc
xor
movsb
lods
pop
xchg
xor
adc
sub
leave
in
call
incb
cwtl
mov
mov
fsubs
loopne
xor
pop
mov
sbb
add
cpuid
jmp
fwait
inc
mov
push
imul
or
xor
mov
inc
inc
jne
add
mov
addr16
or
pop
xchg
aaa
test
and
test
filds
fldt
outsb
cli
pop
push
dec
pushf
sbb
pop
call
or
jne
jbe
add
xlat
jae
repz
lahf
mov
ficompl
out
movsl
add
in
xlat
cmp
call
inc
dec
shlb
mov
ja
pop
cmp
sub
jmp
rcrb
pushf
ss
jne
dec
and
bnd
mov
add
mov
mov
popa
mov
xlat
fmul
in
jl
add
dec
mov
xor
iret
cltd
into
mov
icebp
xchg
int3
xorb
shl
add
dec
dec
mov
xchg
out
xchg
cmc
dec
ss
call
sub
mov
fisubs
ljmp
sub
dec
orl
fisubrl
jmp
ror
push
fcmovnbe
cmp
and
xchg
or
and
xor
popa
adc
frstor
sbb
or
push
push
pusha
dec
push
gs
ljmp
ret
lds
sbb
mov
dec
outsl
add
clc
jge
stc
or
xchg
or
outsl
ss
mov
das
sub
aaa
in
or
cld
scas
xorb
test
mov
outsb
xchg
mov
repnz
stos
mov
nop
xchg
jge
cmpl
loopne
movsl
shlb
lahf
push
int
xor
inc
pop
lods
xchg
rcrb
loop
pop
shrl
push
lea
test
fs
outsb
push
je
cmc
xor
push
cmp
scas
pop
push
jne
ljmp
add
mov
or
fsubl
push
xchg
insl
xchg
mov
cmp
mov
test
push
aam
mov
stos
mov
pusha
jbe
pop
outsb
dec
cmc
mov
or
icebp
sar
xor
outsb
test
push
pop
mulb
insl
mov
pop
jg
jmp
jge
lret
out
push
xchg
cmp
subl
xchg
xor
cld
pop
sub
lcall
xor
push
test
dec
sbb
or
into
push
push
and
jo
cmp
xchg
jmp
cmp
push
sbb
popa
test
inc
imul
push
rolb
fisttpl
out
icebp
mov
pop
dec
and
ret
stos
mov
pop
mov
dec
add
mov
sbb
mov
ret
xchg
mov
pop
fucom
or
aas
idivl
push
dec
push
es
cmpsl
arpl
or
ja
xchg
push
cmp
inc
sbb
add
sbbb
lods
push
nop
in
pop
or
cmp
js
in
in
xchg
sub
push
xor
pop
and
jbe
and
les
pusha
and
sbb
jmp
pushf
dec
and
or
test
cmpsb
rolb
mov
ret
int
sbb
mov
pop
icebp
ret
in
nop
lock
or
xchg
rcrb
movsb
mov
push
movb
pop
int3
cmp
ja
mov
xlat
jno
push
dec
jge
nop
fisubrs
xchg
lea
push
push
stc
jl
insl
push
shlb
lahf
int
mov
aam
test
repz
and
aas
adc
sahf
push
jmp
mov
sbb
hlt
and
xchg
fisubrl
mov
clc
mov
jne
in
jg
insb
mull
mov
mov
pushf
dec
mov
mov
lods
inc
add
nop
sub
mov
dec
inc
gs
adc
outsl
fdivr
xor
mov
xor
adc
rclb
add
cmc
je
or
inc
mov
mov
mov
inc
mov
out
outsb
sbb
mov
mov
push
cmc
sbb
cmc
pop
jb
and
mov
mov
add
adc
xor
test
pop
enter
mov
mov
sub
push
jnp
jp
xlat
das
xor
mov
push
xlat
mov
mov
lahf
std
imul
and
addr16
lock
jmp
test
cmpsl
in
cmp
push
cmp
ljmp
jnp
xchg
icebp
xchg
scas
daa
jne
fstpt
jge
mov
cmp
sbb
xchg
leave
mov
pop
sbb
mov
xchg
pop
jno
test
lock
lds
js
xlat
mov
outsb
sub
add
insl
fidivs
jno
xchg
mov
xchg
add
jecxz
lea
outsb
fisttps
sahf
or
push
int
cmp
xorb
inc
jne
cld
dec
mov
sub
inc
rcrl
mov
inc
mov
or
test
out
mov
stos
push
xor
jp
lahf
stc
mov
and
aad
fcmove
aaa
jne
adc
ja
mov
movsb
gs
and
adc
daa
or
xchg
lret
cltd
mov
mul
push
daa
pop
push
or
ljmp
add
std
movsl
aaa
pop
iret
xor
xor
ss
mov
popa
adc
xchg
jge
inc
lea
cmp
mov
xlat
test
xchg
jle
push
mov
adc
add
push
jbe
add
stc
loop
imul
gs
adc
ds
mov
pop
inc
and
arpl
arpl
out
pop
arpl
jmp
mov
jg
movsb
mov
lret
push
mov
xchg
loop
pop
mov
mov
jae
mov
fidivrs
add
out
sbb
mov
adc
cmc
adc
inc
std
xor
lock
xchg
adc
sbb
shrl
imul
inc
insb
addr16
arpl
add
sub
mov
test
and
xchg
add
mov
insl
cmp
test
mov
or
orl
bound
lahf
imul
xchg
xchg
popf
sbb
and
add
jmp
xchg
add
test
push
and
dec
pusha
pushf
jge
inc
xchg
pop
pop
and
push
push
fstpl
loop
fwait
clc
loope
cmpsl
addl
cmp
pop
jno
cmp
in
push
shrb
insb
xor
loopne
fldl
push
mov
arpl
xor
imul
xor
sub
out
pop
dec
push
pusha
xor
scas
cmp
cmp
stos
or
cltd
dec
sub
in
mov
mov
out
sbb
mov
adc
sub
or
out
test
loop
sub
add
jne
cmp
pop
push
mov
push
mov
mov
and
jns
adcl
lret
pop
insl
pop
mov
xor
mov
pop
clc
dec
pop
cli
jae
hlt
aam
shlb
adc
mov
lret
dec
xchg
dec
push
cmpsl
cmpsb
or
dec
adc
sub
xlat
fsubrs
or
mov
mov
andb
dec
jo
push
les
fnstsw
jge
xor
mov
adc
iret
jmp
pop
cmp
mov
dec
sub
mov
dec
rorb
xor
icebp
push
and
sbb
fidivl
add
pop
jmp
test
push
mov
lret
xchg
ljmp
es
outsl
or
sub
cs
mov
ds
pop
insl
pop
add
clc
call
ja
cmpsl
jno
call
dec
out
xor
rcrb
scas
mov
hlt
nop
mov
and
cmc
lods
clc
test
inc
shlb
fadds
adc
js
mov
jno
lea
fsubl
xchg
cmp
and
cli
jns
jbe
or
jl
adc
cmp
jmp
mov
movsb
xor
cmp
stos
movl
les
movl
inc
jl
mov
dec
and
test
icebp
lods
std
push
pop
aaa
decl
ja
jns
jge
or
fmul
xor
shlb
adc
vpsubb
or
std
jne
cmpsl
fs
imul
call
shlb
repz
jp
dec
add
xchg
daa
pop
aam
cmp
xor
push
xor
addr16
jmp
lods
pop
daa
dec
sub
push
xor
push
mov
cmpsl
pop
pop
ficompl
add
out
hlt
sub
cmp
rcrb
pop
insb
aas
adc
ds
cmpsl
fildl
addl
jle
in
adc
sbb
movsb
xchg
jl
mov
pop
push
xor
fdiv
mov
lret
lea
mov
sub
or
xor
xor
repnz
xor
jns
sbb
jne
cmpsb
arpl
xor
xor
pop
mov
das
jge
mov
ljmp
push
pop
xor
fdivrl
mov
and
mov
imul
movsb
adc
sub
sbb
inc
vxorpd
nop
subl
sub
aam
or
das
and
outsb
fcmovne
shl
mov
jecxz
mov
loope
ljmp
movsb
lret
xor
xlat
dec
scas
xchg
push
push
xchg
sbb
xor
lock
add
cmp
inc
fstpt
push
pop
mov
pushf
in
aas
push
pushf
repnz
fwait
pop
xchg
sbb
dec
jp
mov
dec
cmp
inc
clc
xor
jnp
rol
push
and
mov
dec
fucomp
push
jge
bound
mov
int3
sarl
pop
mov
push
push
neg
sbb
js
mov
xor
mov
mov
push
push
das
test
dec
pop
pusha
out
daa
sti
jne
cmpl
mov
jnp
iret
inc
into
inc
add
dec
push
outsl
pop
cmp
cwtl
sbb
inc
add
jmp
sbb
push
inc
ja
arpl
adcl
xchg
adc
and
mov
enter
dec
scas
ret
imul
xchg
mov
sbb
in
xor
pop
repnz
jge
arpl
fcoml
clc
cltd
ja
rcrb
and
cwtl
into
adc
nop
cld
xlat
call
jne
xchg
mov
cmp
xchg
or
sub
in
xchg
adc
push
pop
lea
inc
jmp
mov
in
inc
push
stos
test
add
sahf
outsb
dec
adc
or
adc
jno
add
jp
inc
mov
fsubs
and
sbb
sbb
cmpsl
xchg
dec
cli
and
pop
adc
sub
jl
fadds
mov
jne
loop
sbb
sbb
or
insl
push
sub
lcall
and
cmp
jns
sarl
mov
int
test
pusha
sub
dec
stos
jns
dec
dec
push
dec
pop
adc
jbe
pop
xor
sti
lock
sub
pop
ljmp
mov
mov
ret
scas
cmpsl
mov
std
sbb
fisttpll
cmpsb
jle
sub
push
inc
or
sarb
xchg
pop
push
mov
lret
lcall
movsl
out
xor
rorl
das
jae
cwtl
or
lods
mov
jge
in
dec
rclb
fisubrs
cmp
fisubrs
xor
inc
jp
and
cmc
add
lds
dec
lret
mov
mov
jle
xor
fcomi
movsb
mov
jle
and
stos
sahf
cmp
bound
sbb
enter
jle
subl
icebp
push
movsb
aam
mov
fs
inc
mov
sbbl
mov
xchg
into
test
adc
push
cmp
lock
cld
insb
mov
aam
jmp
ss
adc
in
loope
stos
testl
and
out
sbb
mov
outsb
add
push
dec
pushf
mov
sbb
sub
sbb
sub
loop
aad
xchg
lahf
es
cld
hlt
and
jp
xchg
push
jg
jbe
push
orl
pop
jmp
adcl
jmp
mov
adc
xor
inc
mov
cmpsl
les
add
sub
sbb
das
out
xchg
dec
mov
xor
cs
ss
daa
xchg
lret
mov
cli
mov
fimuls
cmp
loopne
jae
aaa
cmp
shlb
aas
ja
scas
aas
sbb
popa
and
push
fucomi
push
adc
shll
mov
lods
or
xchg
push
push
cli
sahf
mov
dec
pushf
pmulhw
and
mov
mov
addr16
jbe
pop
xchg
stos
cmp
les
add
fcompl
aad
pop
dec
lea
add
mov
mov
mov
inc
sbb
and
xorl
xchg
sbb
cwtl
pop
movsb
ja
mov
cmpsb
jmp
lahf
bound
adc
fidivs
imul
icebp
mov
addr16
cmpsb
mov
gs
gs
mov
xlat
roll
cmp
push
jnp
pop
mov
gs
xchg
or
clc
fbstp
popa
fnstcw
jmp
jo
pop
ret
or
ret
cli
push
ret
xchg
pop
outsl
inc
repnz
xchg
push
push
and
xchg
mov
sar
outsb
imul
mov
mov
fs
jge
vminpd
loop
sbb
xchg
jg
pushf
pusha
cwtl
insb
adc
bound
sub
inc
je
mov
add
push
in
mov
cmpsb
cmc
xchg
or
or
mov
or
xor
mov
mov
push
inc
arpl
push
sbb
repnz
xor
repnz
fimull
into
and
ss
rorb
or
add
inc
jl
pop
add
push
fldt
add
lea
xor
lcall
pop
mov
adc
jae
adc
lahf
mov
push
insb
sarb
arpl
sbb
repz
rolb
sti
mov
xor
dec
cmp
lret
xchg
mov
mov
lds
ret
testb
lahf
outsb
xchg
ljmp
push
add
je
into
mov
cli
sar
fsubrp
lret
fisttpll
stos
mov
xor
xchg
pushl
add
jle
push
enter
dec
sbb
jae
rcl
dec
incb
outsb
hlt
dec
scas
imul
dec
aaa
pushf
xchg
mov
inc
lea
cmpsb
pop
push
mov
aaa
bnd
out
mov
add
cmp
pop
ja
stos
ja
or
fistps
and
pop
mov
sub
shll
std
sub
mov
add
fs
popa
sti
addb
mov
mov
loopne
fsubr
mov
shll
sbb
stos
loope
movsb
addr16
mov
mov
leave
or
cmp
lcall
cmpsb
or
pop
add
adc
std
add
addr16
ss
clc
add
lods
jl
dec
xchg
rcrl
cmp
inc
mov
sub
lret
addr16
lock
sbb
mov
cltd
dec
sbb
sarb
cmc
fsub
popf
and
jns
insl
jae
mov
inc
inc
sbb
push
mov
repnz
aam
stos
jne
sahf
pop
jmp
mov
and
fsts
faddl
adc
push
and
inc
loopne
or
adc
push
subl
lret
xchg
xor
xor
lock
insb
and
clc
setnp
mov
sub
mov
mov
arpl
xchg
inc
mov
cmp
and
dec
call
mov
mov
out
add
dec
in
pop
xorl
add
and
cmpsb
jns
xchg
dec
outsl
xor
dec
pop
xchg
mov
inc
daa
inc
xchg
orl
and
pop
mov
mov
out
aas
jmp
out
test
adc
pushf
cmpsb
fstpt
sahf
and
mov
sub
lock
and
cmp
xchg
mov
fdivl
mov
add
imulb
xchg
mov
xorb
ret
imulb
and
test
and
mov
sbb
push
pushf
jns
outsb
adc
iret
inc
out
jge
and
into
jno
cli
xchg
imul
jns
push
xchg
mov
int3
aam
and
dec
out
dec
xor
push
sub
ljmp
dec
rolb
push
mov
and
stos
cmc
insb
jmp
cwtl
test
xchg
test
pop
pop
ret
mov
insl
fs
push
pavgw
pop
cmp
add
jmp
js
add
jb
pop
fcoml
xor
mov
mov
hlt
sahf
pop
jp
and
cmpsb
fdivs
and
mov
sarb
pop
sti
in
rorl
push
into
loope
je
pop
mov
and
ja
push
adc
out
mov
jle
cmpl
xor
icebp
fcmovnbe
dec
sub
dec
repz
shl
jmp
sbb
std
or
jge
sbb
sarb
sub
push
call
cmp
cmpsb
dec
aaa
add
jecxz
jo
xchg
je
test
mov
lock
mov
mov
jl
and
test
stos
add
test
push
mov
pop
mov
fstp
add
js
gs
dec
iret
cmp
cmp
fstpl
and
fisubrl
xor
add
movsl
ljmp
scas
mov
daa
and
add
ret
clc
fsqrt
roll
sub
push
mov
xlat
add
push
and
cmp
pop
cwtl
pushf
bound
push
pop
pop
sbb
mov
push
in
test
mov
push
ret
push
mov
xchg
aam
pushl
pop
out
hlt
stc
outsb
xor
test
aam
mov
mov
mov
mov
or
and
jbe
repnz
mov
popa
icebp
les
leave
int
mov
sar
cmpsl
mov
int
ret
mov
mov
sub
ja
div
mov
xor
jl
or
pop
pushf
cmc
lods
clc
into
gs
jo,pn
pop
aas
and
into
cmp
dec
mov
xchg
xchg
test
jae
jle
push
xchg
dec
ja
in
xor
loopne
cli
por
ret
ret
aaa
dec
cld
call
inc
push
cli
dec
jge
aad
push
outsl
clc
nop
pushf
sub
cmp
dec
sub
mov
mov
fs
pop
dec
dec
fimull
shll
popf
imul
xor
fucomi
pop
inc
sub
pop
jge
lret
hlt
dec
jg
push
std
movsb
lret
stc
sbb
cmp
fucomp
jno
loop
jmp
ret
adc
mov
sbb
adc
mov
mov
imul
xor
mov
lcall
aad
jno
loopne
push
xor
repz
pushf
call
fimuls
sub
mov
or
movl
aam
out
add
add
push
cmp
imul
jg
in
mov
sti
add
imul
aad
cmp
xor
push
adc
pop
lods
push
cmpsl
push
mov
mov
cmp
or
push
or
mov
sbb
ret
and
pop
lahf
push
jl
psadbw
push
lds
sbb
out
push
cmp
push
adc
jmp
aas
imul
lahf
movsb
adc
test
pop
aad
dec
sbb
arpl
cmp
xor
xchg
daa
daa
mov
push
mov
xor
cs
imulb
aad
ds
xor
inc
sahf
xchg
jb
loope
mov
ljmp
lock
xor
icebp
stos
jmp
lods
mov
fisttps
cmpsb
gs
outsl
cltd
mov
hlt
pop
xlat
dec
jnp
dec
push
mov
jecxz
lcall
add
xchg
adc
jmp
inc
scas
bound
push
movsl
cli
aad
imul
sbb
add
sub
call
or
mov
xor
sarb
xchg
in
xlat
mov
rol
xchg
popa
sbb
dec
lock
xchg
mov
mul
mov
leave
or
or
popf
xor
aas
out
cld
pop
add
sbb
iret
push
jge
cltd
push
cld
push
xchg
nop
in
cwtl
mov
mov
add
shlb
popf
rclb
cmp
aad
lea
mov
rcrl
shll
adc
sbb
jo
cmp
imul
push
rorb
aad
jmp
xor
dec
mov
popa
mov
daa
xchg
hlt
jecxz
cmp
outsb
call
stos
jle
and
popa
dec
xchg
add
fdivs
pop
filds
push
pushf
push
insl
inc
mov
js
ja
scas
sub
pop
xchg
inc
pop
add
lahf
add
inc
add
test
sbb
jae
jns
sub
sub
movsl
or
movlps
jp
mov
stc
fcoms
aaa
push
std
int
sub
pushf
dec
mov
enter
xchg
inc
outsl
loop
fbld
jge
stc
imul
cli
lret
cmp
pop
sub
inc
loop
out
lcall
int3
ret
imul
out
in
pop
ret
push
jnp
lret
jmp
nop
xor
cmp
imul
sub
mov
sbb
dec
lahf
or
or
stos
or
sub
addb
lds
test
pop
sbbl
int
add
xchg
lds
push
dec
push
outsb
cmp
rcrl
in
push
or
sub
out
mov
fadds
pop
xchg
push
je
sbb
sbb
push
pop
dec
xchg
dec
fnstsw
sub
loope
imul
jge
cmp
fs
pushf
mov
jmp
fsubl
cmpsl
loope
xor
and
lods
hlt
test
loop
jns
pop
rcrl
jno
ds
push
roll
mov
mov
or
movsb
xchg
jecxz
jge
mov
clc
jmp
std
push
push
flds
call
push
pop
iret
aam
fs
rol
push
mov
mov
cmpsb
add
mov
xchg
inc
add
adc
sbb
sub
test
shlb
gs
rorl
adc
nop
fucomp
pop
xor
jne
lcall
rorb
dec
aam
xor
cltd
aam
xchg
adc
cli
daa
nop
jno
jecxz
in
push
inc
leave
sbb
imul
inc
push
into
xchg
dec
mov
negb
lods
loop
sub
shr
test
pop
jg
and
mov
jbe
and
or
jno
and
movsl
and
pop
push
nop
enter
jecxz
movsl
xchg
scas
mov
jp
aam
ja
fstl
or
das
mov
lds
loop
lds
je
jp
xlat
divl
fisubrl
dec
adcl
sti
push
or
lcall
push
xchg
sarb
fwait
push
mov
and
cmc
dec
cmp
mov
rcrl
xchg
mov
lahf
pop
roll
int
mov
imul
add
rorl
loope
pop
cmp
xchg
add
lods
rorl
inc
pop
pusha
adc
xchg
mov
adc
sbb
enter
mov
test
dec
notb
mov
scas
push
iret
push
test
repz
mov
repnz
pop
loop
sarl
mov
and
in
sub
cwtl
stos
repnz
sbb
out
scas
inc
adc
aam
ljmp
mov
mov
mov
cmpsb
test
sbb
sub
pop
mul
pop
or
mov
adc
and
aaa
push
mov
and
outsl
push
movsb
popf
xor
pop
test
push
movsl
xchg
cltd
jae
scas
aad
mov
jecxz
push
cmp
and
stos
outsl
mov
aaa
gs
jb
sub
push
jmp
mov
lret
dec
jo
jge
dec
adc
sbb
inc
mov
ficoms
outsl
xlat
mov
pop
xchg
xchg
mov
pop
dec
xchg
push
pop
push
mov
push
dec
dec
je
inc
mov
insb
sub
push
mov
sbb
enter
icebp
inc
pop
mov
adc
mov
xor
fsubs
adc
sarl
out
inc
nop
inc
mov
xchg
das
arpl
divl
xor
sub
nop
and
xor
cmp
pusha
cmp
int
adc
mov
dec
jecxz
nop
ljmp
popa
cmpsl
pop
dec
scas
lods
lret
cmp
mov
and
pop
adc
mov
sbb
dec
adc
add
cld
rclb
inc
je
pop
pop
adc
repnz
insl
ret
int
add
push
out
cli
nop
sub
into
fstpl
test
loop
stos
jp
sub
repnz
cmp
adc
imul
xchg
stos
mov
mov
inc
cmpl
sub
daa
mov
popf
loop
cmp
push
mov
cld
pusha
jg
in
lods
test
fcomp
sbb
cmpsl
mov
icebp
enter
cli
shr
es
repnz
jp
stc
mov
scas
into
jg
dec
jmp
nop
xchg
push
ja
mov
into
add
lahf
adc
fidivs
push
cmp
ret
pop
mov
test
add
push
sbb
lods
ds
lcall
mov
in
test
push
xor
and
fwait
sub
pop
dec
out
mov
push
cltd
std
sti
arpl
test
jnp
pop
jnp
jb
aas
mov
das
leave
cltd
or
fstp
cmp
addl
ror
mov
shl
mov
jo
je
rolb
jle
ss
mov
hlt
or
cmp
sarb
shrl
pop
xor
cmp
and
push
add
scas
lea
std
mov
scas
jnp
cmpsl
mov
cld
push
xor
cli
pushf
xor
jmp
shlb
sbb
outsb
ja
ret
jl
js
in
xor
mov
enter
sbb
sbb
insb
add
sub
jae
push
in
leave
dec
add
dec
clc
repnz
jmp
mov
enter
sbbb
pop
and
xchg
mov
fisubrl
cmpsb
jne
mov
push
inc
aaa
pusha
xor
into
cmp
pop
ljmp
xchg
add
mov
add
sahf
push
sbb
test
xchg
mov
jp
xor
sbbl
cld
add
pavgb
mov
lock
and
mov
add
in
sub
add
ret
decl
icebp
arpl
inc
push
subb
idivb
mov
xchg
cs
adc
or
or
imul
and
sub
add
mov
cmp
rcl
lods
lods
out
jmp
enter
lea
pop
icebp
mov
aad
out
lret
cld
and
or
pop
nop
sbb
sub
fdivs
jbe
imul
inc
rcll
push
jb
xor
clc
nop
fimuls
add
jo
sub
inc
push
lcall
inc
xchg
stos
aam
in
xor
loope
addr16
in
rorb
hlt
movsl
shrl
mov
jb
mov
sarl
xchg
insl
mov
mov
lds
dec
xchg
add
daa
mov
fidivl
fistl
inc
add
mov
xor
and
mov
bound
loopnew
fmulp
ljmp
fimull
mov
dec
pusha
cmc
scas
shrl
int
ljmp
mov
call
mov
adc
dec
dec
stc
test
data16
test
sbb
outsl
ret
fisubl
xchg
cli
inc
jl
out
insl
sub
mov
jmp
jbe
test
or
leave
movsb
inc
mov
cpuid
mov
cmp
outsl
xchg
into
cmp
mov
mov
imul
movsl
hlt
mov
out
cmp
ja
popf
dec
daa
xor
daa
insb
ret
xchg
and
mov
push
cmpsl
push
gs
aaa
jl
cmp
sbb
adc
mov
push
in
std
bound
cmpl
mov
dec
cld
in
cs
aaa
push
mov
pop
fnstenv
in
addr16
cmpsl
imul
jle
push
xor
mov
out
pop
mov
pop
ficompl
lods
lods
add
pop
mov
out
shlb
out
mov
cmpsb
sub
inc
cmp
jns
cmp
jb
stc
test
add
roll
xor
out
call
es
mov
mov
jmp
js
dec
loopne
addr16
mov
aas
xchg
and
ds
loop
repnz
add
sbb
mov
dec
push
push
adc
jb
jb
and
or
imul
loopne
push
jmp
out
in
sub
dec
pop
int
adc
es
add
repnz
dec
aas
movsl
push
sbb
popa
dec
mov
push
inc
inc
inc
std
iret
push
cmc
inc
jno
hlt
stos
adc
enter
out
es
adc
jl
scas
push
stos
sub
imulb
addr16
mov
push
add
aas
loop
icebp
sbb
fmulp
inc
rclb
popa
mov
loopne
add
push
in
sub
mov
dec
pop
fxch
loop
aas
mov
pop
and
mov
adc
nop
dec
mov
cmp
and
in
xchg
or
mov
loop
pop
lcall
pop
push
scas
subl
jo
push
popf
cmpsb
xchg
jns
out
xor
rclb
push
mov
fiadds
mov
fmull
bound
loopne
push
pop
pusha
push
outsb
mov
lret
add
push
mov
clc
outsb
negl
push
dec
test
insl
push
lret
mov
loopne
movsl
cmp
mov
sub
ret
addr16
es
pop
cmp
jo
xchg
rcrl
inc
mov
aas
push
xchg
xor
sub
sbb
inc
inc
stos
inc
mov
sub
push
push
push
and
movsb
leave
jg
or
fs
inc
mov
test
nop
cld
loopne
dec
mov
cmp
sbb
dec
mov
fldcw
pop
call
sub
push
jge
gs
ficomps
outsb
incb
mov
mov
xor
lret
jmp
or
lret
dec
int3
pop
test
or
loop
fsubrs
fs
mov
and
pop
dec
out
fisubrs
mov
imul
xchg
jmp
les
inc
repnz
jb
popa
mov
xchg
xchg
bound
or
jo
mov
push
cmpsb
loope
js
out
jmp
stos
xchg
int3
dec
test
imul
pop
or
cli
and
lahf
inc
inc
lcall
xor
ficoms
fbstp
ret
sbb
or
push
lret
int3
push
fistl
in
repz
shl
icebp
add
ja
leave
inc
dec
lcall
cmpl
leave
mov
dec
cmp
inc
jmp
cmp
repz
inc
sbb
pop
das
cltd
sub
push
int
and
jns
sbb
add
or
push
pop
fdivrs
jnp
jne
mov
xchg
leave
ret
pop
xchg
fs
aad
pop
xchg
lock
popf
sbb
pop
int3
cmc
mov
dec
cmp
adc
push
inc
adc
cmpsl
add
inc
dec
mov
clc
or
jmp
shrl
pushf
daa
sub
out
mov
pop
mov
outsb
xor
xor
jp
cmp
movsb
out
push
xchg
pop
jle
sub
movsl
ja
or
repz
insl
das
mov
into
repz
sbb
inc
inc
or
sbb
mov
aas
negl
xchg
mov
sbb
mov
push
jne
aas
jp
and
dec
dec
and
sbb
lds
shll
ret
pop
clc
test
inc
pop
inc
push
adc
jmp
mov
mov
cmp
cmp
clc
stos
ret
jg
loope
xor
mov
jmp
insl
pop
or
add
test
lret
pop
pop
xchg
dec
repz
mov
dec
fnstcw
xchg
mov
test
clc
mov
dec
jmp
push
out
mov
faddl
sbb
enter
out
ret
stos
stc
or
jmp
loop
add
movsb
add
jmp
jbe
repnz
sar
jle
das
test
cmp
add
jns
or
add
sub
pop
xor
xor
mov
aam
pop
pop
sbb
adc
loopne
mov
in
loop
loop
or
push
push
ret
pushf
dec
lret
push
rorl
mov
sbb
loope
mov
push
or
cmp
inc
or
sbb
outsl
pusha
scas
push
rol
aas
dec
dec
ficoml
push
sub
cli
outsb
data16
mov
pop
jmp
add
push
sub
popf
call
cmpsb
mov
or
shrl
cmp
and
pop
xchg
aaa
out
hlt
test
lcall
int
enter
jbe
mov
stc
push
lock
xor
xor
mov
jmp
jae
mov
jecxz
outsb
mov
push
dec
stos
fldenv
loopne
xchg
jle
popa
inc
cli
aad
cmp
jl
fdivl
dec
stos
pop
in
sti
add
gs
adc
je
dec
ljmp
ret
sub
cmpsb
aaa
andl
sub
mov
xchg
jno
mov
fldenv
mov
arpl
or
xchg
gs
lret
mov
and
jb
jbe
inc
mov
push
mov
xlat
cmp
inc
daa
mov
xchg
sar
jmp
push
pop
add
int3
icebp
mov
inc
sbb
gs
rcl
dec
cmp
addl
sub
xlat
inc
mov
xchg
xchg
repz
cs
inc
outsl
mov
andb
jl
scas
insb
les
mov
inc
adc
mov
iret
xchg
fs
in
and
sbb
pop
ret
inc
adc
fisubs
rolb
nop
stos
out
ds
sub
stos
je
jmp
aad
push
adc
jb
push
scas
jge
sub
outsb
loope
xchg
adc
fs
cs
std
fistps
and
jge
push
loop
mov
test
add
lcall
or
call
push
enter
or
std
jno
jmp
mov
in
mov
test
xchg
aad
push
jmp
mul
call
add
xor
or
and
cmp
jecxz
lea
gs
cltd
in
xor
jge
pop
jmp
rorb
mov
inc
pop
push
sbb
pop
rol
jb
imul
jb
xchg
insb
cli
mov
pop
arpl
je
bound
into
sbb
jp
aad
out
xchg
rcll
jge
fwait
js
sti
hlt
sti
adc
pop
leave
stos
lods
add
push
dec
popf
sbb
jns
leave
faddl
push
cmc
sub
idivb
mov
push
ds
adc
dec
cmp
and
and
cmp
je
ljmp
push
or
iret
jno
jns
data16
xor
sbb
rorl
and
stos
adc
mov
inc
ja
push
mov
out
shlb
push
int3
add
ss
nop
xchg
dec
loope
pop
cli
imul
lock
js
jnp
push
xor
push
mov
add
clc
mov
sbb
test
sbb
sub
jecxz
repnz
jl
mull
mov
jnp
outsb
out
inc
in
dec
ja
mov
mov
push
sahf
int3
inc
popa
jp,pn
sbb
out
push
push
cmp
add
push
lods
bound
dec
js
movsb
out
into
test
push
aas
shlb
mov
push
mov
pop
inc
xor
or
ds
imul
cmp
sbb
insl
sbb
fstl
mov
dec
mov
sub
adc
sbb
push
mov
mov
pop
sbb
push
movsl
add
xchg
and
lds
leave
mov
sub
andl
xlat
cmpb
or
in
sbbl
jg
out
mov
xor
pop
gs
jb
inc
inc
adc
stos
cmp
cmc
adc
push
adc
fldcw
xchg
push
mov
dec
cmpb
shlb
jle
inc
daa
mov
divl
imul
mov
neg
xchg
sbb
incb
mov
push
ret
lret
push
into
inc
xor
mov
push
stos
je
or
ja
ficompl
cmp
mov
mov
ficompl
in
mov
push
add
popa
jle
sub
outsb
cmpsl
pop
frstor
inc
repz
psllw
jb
jne
outsb
int3
inc
xchg
or
sbb
stos
or
test
imul
inc
int3
lea
jp
or
cmpl
pop
mov
stc
enter
lds
int
or
lea
aad
aad
adc
movsl
imul
lods
pop
cmp
mov
mov
sub
sbb
xchg
aam
dec
and
adc
xlat
shll
inc
data16
jmp
aas
je
test
pop
sub
lds
in
add
mov
pop
mov
inc
pop
xchg
dec
je
jp
push
ja
lods
jae
mov
sbb
mov
inc
xchg
cmpsl
xor
mov
popf
push
mov
xchg
aas
push
lods
adc
fsts
fidivl
inc
xor
movl
mov
sbb
das
scas
cmpl
mov
ss
and
data16
push
out
jbe
stc
js
movsb
out
pop
outsb
test
sub
mov
sbb
popf
loopne
jae
fnstcw
divb
xor
clc
orl
ljmp
add
inc
cltd
test
pop
inc
popa
sbbb
iret
jle
pop
rcrl
mov
pusha
push
ja
xchg
or
cmpb
inc
fiaddl
fists
in
jge
sbb
lret
xchg
lahf
mov
and
or
xor
test
cld
stc
addr16
fldcw
ss
inc
cmp
pop
clc
add
nop
cmpsl
push
insl
add
jecxz
lods
push
mov
sarl
fadds
pop
jnp
sub
adc
dec
les
xchg
adcl
mov
aam
mov
inc
xlat
push
bound
ljmp
insl
xchg
push
adc
and
jle
mov
jp
lock
mov
adc
inc
mov
jp
cmc
adc
add
sub
hlt
push
mov
shlb
clc
cwtl
loop
and
inc
fstpl
int3
mov
sbb
in
or
sbb
cmpsl
push
jne
cmp
aam
lock
push
dec
fdivr
push
sub
mov
stos
mov
cs
scas
mov
fs
pop
int
xchg
mov
mov
push
jle
mov
push
cmp
std
push
les
or
orl
cltd
out
dec
es
stos
sbb
enter
and
lahf
cmp
xchg
mov
inc
dec
pop
test
xchg
fs
sub
clc
movsb
pop
inc
js
pop
out
js
pop
xchg
add
cli
outsl
jl
mov
scas
jo
sub
std
sbb
out
jno
mov
mov
pop
aad
sti
stc
daa
cld
shlb
fcoms
mov
adc
jmp
fisttpll
jmp
pop
mov
sti
mov
inc
inc
add
dec
es
sarb
popf
mov
aas
pop
fisubl
adc
out
sti
lods
push
fnstcw
cmp
out
pop
cmp
push
les
outsb
or
sti
fmuls
movsb
inc
js
pslld
lret
xchg
pop
lods
frstor
push
mov
pop
out
inc
aad
clc
inc
push
out
sti
xchg
clc
into
xchg
lahf
in
add
fcomps
testl
lods
mov
mov
data16
scas
shrl
mov
sti
xor
mov
and
hlt
mov
lods
insl
adc
add
adc
pop
xchg
ljmp
xchg
inc
inc
shrb
mov
adc
movsb
std
xor
in
shlb
pop
std
test
pop
xchg
dec
adc
pop
das
rcll
aaa
rclb
or
ror
mov
xchg
inc
mov
lcall
fists
mov
lods
mulb
xchg
jno
xlat
data16
sub
or
or
sub
out
mov
dec
inc
pop
stos
imul
ret
xor
xchg
scas
stos
xor
and
sbb
mov
sub
or
movsl
or
or
pop
cmpsl
gs
jns
dec
cmp
inc
cmp
xchg
push
inc
jne
pop
adc
lret
and
dec
pop
or
sub
adcb
mov
inc
xlat
sbb
mov
or
dec
in
cli
push
mov
push
cmp
xchg
adc
sti
aas
xchg
pop
pop
imul
dec
inc
dec
shrb
sbbb
imul
cmp
lods
stos
xor
cmpsl
and
cmp
sti
jmp
or
jp
int
addr16
xchg
popa
xor
in
sub
and
xorb
sbb
stos
sti
cmpsb
aad
mov
jbe
loop
inc
or
std
les
in
stos
xorl
loop
jb
add
loope
cmp
add
pusha
or
dec
dec
mov
push
aaa
add
add
arpl
adc
jmp
flds
mov
out
ja
outsb
add
ret
or
pop
test
les
xchg
imul
push
stos
sub
je
mov
das
adc
push
js
out
cmpsl
nop
sbb
stos
fistpll
subb
pop
idiv
jne
dec
mov
aaa
ret
xor
cmp
out
sub
ds
pop
mov
mov
mov
inc
mov
dec
and
cmpsb
test
out
aaa
mov
or
sub
inc
pop
movsb
dec
popf
movsb
adc
ss
mov
jge
addr16
pop
adc
jle
adcb
ret
mov
inc
scas
push
nop
movsl
daa
add
fcoms
mov
paddusb
mov
out
ljmp
popa
loope
adc
mov
imull
hlt
dec
mov
add
shl
jmp
pusha
lods
cmp
subb
int
xor
lahf
jbe
rcrl
fstpt
jae
repnz
leave
sub
or
jno
cmp
cmp
dec
insb
ficompl
or
mov
ss
and
pop
insl
ja
in
jl
add
mulb
inc
pop
mov
leave
add
adc
es
add
outsl
je
ficomps
ret
add
push
adc
ja
movsl
je
mov
cmpb
dec
addr16
cmp
lock
mov
call
xchg
insb
sub
xor
jne
popf
hlt
mov
leave
mov
jecxz
push
fdivrl
jb
push
nop
adc
mov
je
push
shlb
aam
mov
cli
inc
mov
mov
test
add
jb
pushf
add
fdiv
sub
jne
fwait
and
shr
push
inc
dec
popl
std
cld
data16
xchg
or
shll
push
jbe
aas
pop
stos
pop
pop
mov
mov
or
icebp
adc
fwait
xor
shll
and
push
int
out
es
stos
dec
xchg
cmp
inc
sub
cmpb
adc
jo
sbb
shlb
aam
inc
push
and
outsl
lods
sbb
cmp
repz
bound
test
es
rclb
sub
sahf
lods
pushf
gs
icebp
dec
and
xchg
and
push
daa
fwait
test
movsl
mov
loopne
repnz
push
pop
sub
and
ret
add
cli
sub
or
iret
pop
cltd
mov
repnz
fidivrs
sub
pop
pop
in
dec
mov
mov
mov
xchg
cld
push
repz
outsl
push
test
rol
push
dec
push
into
or
pop
push
mov
hlt
cwtl
pop
mov
xchg
sbb
inc
push
iret
cld
and
js
int3
inc
adc
add
mov
add
jnp
je
pop
jo
adc
xchg
mov
mov
and
ret
push
in
dec
in
cmp
cltd
loop
jle
mov
orl
lret
push
mov
popf
add
mov
imul
aad
les
pop
push
dec
sbb
inc
out
sbb
sbb
in
loop
adc
or
dec
add
lock
sub
test
push
jb
xchg
mov
add
sub
push
imul
out
pop
in
cmpsb
push
insl
inc
jnp
jns
fistpll
hlt
jo
mov
cmc
aad
and
stc
push
cmp
cmpsb
mov
dec
sbb
mov
inc
mov
cltd
mov
mov
out
outsb
inc
or
mov
adcb
jp
inc
push
scas
cmpsb
cmp
and
out
outsb
aaa
lret
push
jo
push
das
xchg
aad
test
fisubrl
sbb
jp
stos
sbb
call
jle
pop
xchg
jmp
imul
push
movsb
in
das
sub
in
mov
dec
lcall
fs
enter
leave
mov
mov
out
in
test
notb
pop
cld
push
pop
sbb
xchg
inc
jg
call
mul
sbb
outsl
xor
sub
arpl
loop
xor
mov
inc
push
loope
insb
imulb
and
test
sbb
pop
out
pop
sub
aaa
out
aam
clc
and
xchg
dec
mov
or
je
xchg
jl
call
shll
cs
testb
and
xor
or
movsl
pop
adc
mov
ret
cwtl
aas
or
xor
subb
push
scas
inc
cld
adc
push
es
xchg
daa
and
mov
cmp
mov
inc
jle
xchg
sub
pop
dec
sub
adc
rclb
loopne
mov
iret
lahf
fstl
adc
out
stc
in
cmp
js
and
hlt
mov
adc
sub
sbb
sbb
popa
roll
int3
add
jnp
aas
pusha
jmp
sbb
ret
jne
sub
data16
fwait
ja
inc
dec
add
jns
inc
dec
jp
out
nop
adc
pop
xor
adc
sbb
pop
rcrl
mov
jns
and
out
lret
xor
jge
lret
lock
push
cmp
xchg
int
or
hlt
mov
push
leave
mov
lods
pop
xor
push
inc
and
fidivl
mov
adc
xchg
mov
cmp
call
pushf
subl
push
sub
push
mov
insl
xchg
pop
cmpsl
sub
xor
or
inc
enter
int
leave
lcall
cmpsl
mov
push
pop
test
popf
rolb
pop
hlt
fldl
sbb
int
add
out
cmpl
ss
rcrb
mov
or
dec
push
push
mov
pusha
jae
movsl
ds
adc
aad
mov
in
cmp
dec
cmpl
stos
loop
jmp
inc
aaa
bndldx
pop
or
jmp
je
adc
in
add
add
pop
sub
daa
jno
jge
mov
in
movsl
pop
scas
cwtl
pop
fimuls
adcw
mov
icebp
sbb
daa
lret
pop
cmp
clc
mov
mov
in
pop
dec
add
nop
pop
lock
repnz
jle
pop
lods
shlb
rcrb
dec
and
pushf
daa
cmpsl
movsb
cmpsb
pop
popa
insl
pop
sub
sub
or
fsubp
outsb
clc
lret
rcr
iret
xlat
shlb
dec
mov
iret
dec
mov
adc
adcl
movsl
out
aaa
jecxz
pop
and
push
ret
pop
cmp
jbe
xchg
aad
inc
cmpsb
jle
in
stos
and
int
test
mov
xchg
inc
ret
pop
or
mov
insl
pop
scas
wbinvd
jns
sub
adc
subl
int3
xor
jne
mov
jno
adc
ret
mov
jg
mov
sub
mov
mov
call
inc
test
push
sub
gs
add
dec
adc
aam
notb
movsb
add
pop
ljmp
fbstp
cmp
sub
popf
in
fucomi
add
clc
xchg
in
xchg
adc
mov
aaa
adc
outsb
inc
mov
sbb
jl
and
test
insb
je
repnz
popf
xchg
ds
cmp
mov
in
cmpsl
inc
mov
faddl
dec
cmp
xchg
adcb
fistpll
mov
aad
out
ss
pop
pushl
or
mov
repnz
xor
push
add
in
notb
es
mov
mov
dec
sub
push
lods
push
push
xlat
lds
es
test
insb
leave
lds
arpl
pop
mov
and
pop
out
jmp
push
icebp
lret
inc
cmp
sbb
or
addr16
daa
xchg
push
xor
mov
xlat
inc
jg
mov
push
mov
add
cld
pop
dec
outsb
inc
arpl
lret
addb
add
push
push
sahf
outsb
sub
pushf
sbb
jecxz
xchg
cmpb
adc
xchg
push
or
mov
add
dec
lret
mov
into
nop
data16
xor
incb
push
dec
mov
pop
int
stos
insl
push
outsb
pop
sub
test
mov
mov
sub
lret
leave
inc
push
faddp
push
pop
je
inc
pop
xchg
pop
adc
stos
rolb
out
jg
incb
pop
enter
inc
jmp
sbb
lret
jecxz
frstor
imul
loopne
pop
push
xor
out
inc
jo
dec
fldenv
lods
shl
dec
fldl
cli
ljmp
lcall
ljmp
jae
xlat
daa
lret
and
rep
sbb
stc
ficompl
sarl
leave
mov
mov
cmpsl
cmc
lcall
repz
fidivrl
xor
popa
in
sahf
mov
and
adc
mov
mov
pop
adc
test
mov
cmp
in
xchg
adc
lods
repz
test
inc
add
leave
inc
stc
jmp
cs
jns
fs
insb
mov
cld
es
adcb
mov
xchg
push
mov
imul
cmp
sub
mov
pop
push
movsl
push
scas
sahf
inc
pop
pop
icebp
or
mov
cmp
ljmp
inc
push
rcll
daa
dec
daa
mov
mov
cwtl
out
push
push
push
scas
cmpsb
dec
xchg
leave
inc
or
push
or
adc
inc
pop
loop
cltd
call
pop
nop
scas
inc
or
dec
xchg
popf
sbb
ljmp
xchg
scas
cmp
or
stc
mov
negl
jb
addr16
dec
and
shll
fstpl
xor
pop
add
scas
jl
and
mov
mov
sbb
pusha
jl
sub
mov
and
jnp
xchg
or
mov
adc
mov
sub
mov
cmp
cs
cwtl
fimuls
cmp
mov
test
iret
andl
mov
push
les
adc
sbb
in
xor
mov
out
mov
and
test
mov
jns
rcrb
and
sbb
xor
outsb
jnp
mov
inc
or
loop
in
movsl
nop
pop
xor
pusha
inc
pop
and
mov
xchg
lods
mov
and
mov
mov
popf
or
repz
ds
lcall
outsb
mov
mov
fbstp
js
xchg
lea
sarb
and
cli
into
adc
lods
stos
xchg
pop
fwait
sbb
les
inc
cwtl
push
cmp
out
scas
push
dec
adc
ficompl
pop
arpl
push
nop
cmpsl
mov
loopne
movb
dec
cmp
ss
dec
sbb
in
stos
les
sar
mov
in
aad
ljmp
call
rcrb
adc
addr16
test
jl
stos
pcmpeqw
jp
push
jle
adc
ss
mov
sbb
loop
mov
pop
pop
inc
jle
addl
mov
imul
pusha
push
add
vandps
movsl
or
sahf
and
add
das
fucomp
testb
pop
aad
bound
out
mov
and
fdivrl
xlat
movsl
add
xchg
push
mov
add
lods
cli
sub
push
push
dec
ljmp
gs
xor
das
push
pop
ja
std
or
aas
adc
mov
add
lcall
mov
pshufw
adc
rolb
jg
xchg
imul
cmpb
dec
add
outsl
mov
mov
adc
es
xor
push
in
push
push
lods
fsqrt
xor
lea
pop
pop
cmp
lcall
adc
fdivrs
inc
popf
arpl
and
hlt
scas
adc
dec
lahf
sbb
imul
inc
rcl
das
insb
adc
aad
sarl
mul
sahf
loop
nop
push
dec
dec
mov
add
ret
rclb
mov
xchg
inc
cmp
inc
push
mov
add
imul
xor
add
lock
mov
test
insb
cmpsl
push
inc
repz
mov
push
andl
popl
push
and
aam
sahf
inc
jne
sub
xor
fdivp
dec
jbe
cmpsb
jp
scas
shlb
cmpsl
and
mov
mov
fsubl
and
mov
inc
inc
and
insb
out
aam
dec
mov
loopne
mov
int
fcomps
enter
cmpsb
cmp
inc
cmpl
inc
mov
leave
adc
test
inc
in
cltd
jno
xor
mov
push
stc
add
fists
dec
mov
daa
mov
iret
and
push
mov
lods
mov
inc
xchg
ljmp
fimuls
daa
dec
lods
sti
or
adc
imul
fsubr
sahf
xchg
test
jae
shl
add
xchg
enter
xchg
ss
mov
test
dec
mov
sub
bound
dec
xchg
jl
clc
in
sbb
add
sahf
stos
add
adc
enter
push
mov
addl
fcmovbe
pop
mov
xor
aas
sbb
scas
setns
mov
sub
in
test
arpl
pushf
jbe
inc
js
ljmp
cwtl
push
sub
and
mov
or
xchg
sbb
int3
cld
pop
ss
neg
leave
or
shll
adc
ret
xor
pushw
push
jno
dec
xchg
pop
sbb
mov
pop
add
sbb
adc
mov
daa
out
push
or
out
and
jge
and
faddl
and
shll
lock
jns
mov
jne
daa
xchg
test
lods
adc
xor
push
movsl
cmp
sbb
fcompl
enter
lods
and
inc
stos
cltd
aas
pop
ja
loop
sub
negl
mov
and
xchg
hlt
dec
mov
cli
clc
fists
sahf
enter
lahf
lahf
and
jbe
shl
test
inc
loope
xor
mov
xchg
setg
jbe
ficomps
adcb
xchg
xchg
js
arpl
out
push
push
mov
adc
push
in
test
daa
mov
sub
fisubl
mov
mov
shrb
and
stos
ret
loopne
outsb
loop
add
test
shrb
pop
popa
dec
pop
push
sbb
daa
mov
movsl
cli
xchg
inc
jns
jae
pop
emms
dec
in
add
push
sbb
dec
mov
mov
mov
or
push
push
adc
pop
arpl
sbb
mov
insl
iret
imul
scas
sahf
insb
ret
cltd
push
sbb
lret
add
mov
test
lods
xchg
xchg
arpl
dec
iret
pop
aas
inc
loop
out
daa
mov
shr
xchg
sub
sub
or
add
push
pop
add
hlt
sub
scas
lea
xchg
movsl
cmp
inc
sbb
jl
out
stos
sub
addl
andb
leave
sbb
loope
nop
dec
pop
cmp
xchg
out
ja
push
xchg
jecxz
inc
mov
pusha
jb
int
cmp
dec
iret
inc
inc
repnz
inc
jge
pop
sti
push
xor
gs
sbb
hlt
movsb
mov
arpl
push
or
jp
dec
enter
jmp
pop
scas
cmp
aas
loop
push
imul
adc
dec
pop
push
mov
and
out
sub
mov
push
mov
mov
cmp
inc
dec
dec
sub
out
decb
sub
mov
aam
jge
dec
pop
inc
pop
cmp
or
movsl
add
pop
jbe
dec
sahf
sub
xor
test
aad
mov
jl
mov
movsb
repnz
in
or
ds
or
andl
jo
shrl
iret
mov
mov
insb
pop
sti
inc
imul
bndldx
xchg
xchg
pushf
shll
pop
push
mov
shll
dec
and
or
jb
mov
pop
push
xor
notb
mov
lahf
test
inc
dec
loop
pop
ret
mov
sarb
mov
pop
shll
sbb
cmc
repnz
adc
adc
fcoms
push
inc
cmp
cmp
jno
inc
jno
cmpl
mov
daa
fildll
ja
and
inc
je
js
dec
xchg
int
or
test
fildll
pop
adc
lahf
mov
aas
or
jne
bound
in
cmp
stos
dec
sub
addr16
pop
jp
loope
pop
clc
add
test
or
or
hlt
shl
test
js
mov
dec
mov
mov
dec
jmp
test
push
lock
or
jbe
adcb
cs
out
jecxz
stos
add
mov
dec
cmp
leave
pop
pop
test
js
and
mov
mov
xchg
mov
test
pop
popf
lcall
sbb
adc
dec
jmpw
out
loope
mov
mov
sub
push
ljmp
fcoml
orb
adc
push
imul
cmp
hlt
sbb
xchg
lds
cld
movsb
lret
or
test
cmp
shll
push
push
mov
adc
in
dec
mov
pop
stc
jge
lret
daa
dec
xchg
jg
mov
iret
dec
mov
adc
xor
pop
js
loope
cwtl
and
pop
adcb
and
leave
lock
js
add
ret
mov
shr
sub
mov
pusha
pop
dec
rclb
outsb
sub
pop
dec
mov
not
data16
add
test
insl
mull
add
iret
mov
into
add
lcall
mov
xor
call
jo
mov
pop
insb
inc
xchg
in
icebp
imul
dec
pop
jecxz
sub
popf
xor
hlt
pop
or
arpl
mov
pop
mov
testb
sub
or
fcompl
in
in
mov
dec
dec
inc
jnp
leave
fdivp
in
cld
lret
mov
or
jp
mov
adc
dec
js
imul
ret
jns
rcr
jns
imul
mov
jnp
sub
xchg
push
mov
mov
je
jnp
cmp
xor
sub
jbe
stos
add
pop
shlb
repz
lahf
dec
hlt
mov
sbb
data16
repnz
cmp
mov
arpl
or
stos
mov
in
sub
push
adc
pop
mov
jecxz
and
stc
add
mov
std
fs
fcmovnu
push
loopne
stos
dec
test
push
xor
lret
jb
data16
cmpsb
sti
xchg
adc
mov
aad
les
insb
rcrb
fwait
je
sub
lret
mov
jle
or
mov
pop
mov
and
jl
or
inc
mov
mov
xchg
jmp
and
pop
rolb
jecxz
jp
xchg
ds
mov
test
popf
out
in
push
andl
inc
xor
in
sub
fnstenv
inc
nop
dec
and
jbe
out
rorb
pop
not
ljmp
in
mov
inc
mov
imul
sub
xlat
stos
mov
ret
scas
pop
mov
xor
adc
or
sbb
hlt
clc
adc
nop
gs
in
out
adc
cld
test
ss
or
mov
sub
sub
push
lea
dec
mov
data16
inc
es
mov
outsl
xchg
hlt
xor
mov
je
or
out
fs
and
lods
xorb
jbe
cwtl
ret
mov
and
aam
pop
jp
mov
cmp
or
xchg
in
dec
nop
add
or
mov
sub
outsl
sar
cmp
add
sub
dec
jbe
mov
dec
ja
adc
ds
inc
inc
les
dec
sub
adc
jge
mov
mov
cmpsb
jge
mov
int
sbb
ja
mov
or
adc
ja
xor
sbb
outsb
fidivl
sbb
inc
xchg
mov
ljmp
adc
mov
jge,pt
and
sbb
jne
lock
stos
jno
inc
enter
fstl
inc
outsl
and
aaa
lretw
push
xorb
std
sbb
jg
in
lds
and
pop
scas
xchg
push
xchg
sub
lahf
cli
jmp
sub
cmp
cs
jae
push
or
push
data16
lds
sub
mov
ljmp
inc
add
imul
scas
les
test
mov
cmp
sub
sub
rcll
imul
ret
scas
sbb
cmp
mov
lea
cmp
mov
mov
fists
xchg
pop
xchg
loope
popa
push
and
es
pusha
fcoml
and
pop
push
jno
sub
push
sub
mov
test
sbb
lock
cmc
out
mov
mov
dec
or
sub
aaa
pop
popf
and
push
js
adc
jne
and
lods
sub
xchg
adc
fcoml
cmpsl
jns
leave
out
pop
dec
adc
add
sub
push
sbb
cld
jne
xor
faddl
sti
or
incb
popa
icebp
or
insl
push
movb
lgs
push
shlb
and
pop
in
js
pop
cli
adc
push
mov
xchg
xchg
push
outsb
hlt
clc
xor
rol
fwait
icebp
inc
mov
lods
test
cltd
cltd
inc
pop
rcl
outsb
mov
scas
les
outsb
std
pop
stos
mov
test
sbb
decb
fwait
int3
test
sbb
sbb
fidivrl
adc
sub
adc
jbe
lock
cld
outsb
in
xlat
jbe
ss
outsb
je
arpl
mov
xchg
jnp
fsts
subl
cmpsl
pop
mov
inc
into
test
xchg
shl
pop
jmp
adc
push
das
test
imul
cs
sbb
push
out
push
inc
ja
ret
mov
loope
inc
xchg
sbb
jp
and
push
push
pop
int
push
xchg
pop
rcl
mov
aas
and
sub
lods
adc
ret
push
xchg
ret
inc
imul
push
jmp
lds
pop
inc
scas
scas
data16
adc
inc
repnz
xchg
in
loopne
fs
bound
fwait
xchg
mov
lock
fsubrl
sub
or
sub
mov
push
jae
and
int
jno
xlat
out
xor
repnz
mov
addr16
xchg
ja
xchg
inc
enter
sbb
out
cmp
mov
int3
jne
int3
pushf
cmp
out
mov
cld
push
sti
lret
cmp
push
pop
repz
push
sub
push
jns
xchg
imull
fs
push
testb
pusha
inc
pop
in
xchg
fistl
inc
sub
adc
pop
sub
ficoms
jle
adc
testb
scas
jle
jp
xchg
xchg
jl
mov
fadd
xlat
cltd
ret
pop
mov
hlt
rolb
hlt
adc
sbb
sub
idivl
mov
sbb
dec
jbe
fldenv
push
stc
and
and
and
sub
push
dec
xor
leave
cwtl
cmpb
cmp
pop
pop
dec
movsb
mov
pop
div
les
loopne
mov
stc
xor
and
push
xchg
lock
fucomip
lcall
lret
push
and
cld
outsb
jp
ja
adc
inc
or
fmull
cmpsb
hlt
test
aaa
out
jle,pt
vpmacsdqh
nop
loopne
popa
enter
and
jmp
sbb
jne
and
sub
fcoms
adc
adc
inc
mov
adcl
or
or
mov
xor
xchg
je
mov
xchg
stc
or
call
adc
in
mov
outsl
dec
popf
adc
stos
mov
adc
xor
add
fidivs
lods
sub
xor
sbb
jb
inc
dec
shlb
cltd
dec
fcoms
dec
add
xchg
data16
push
adcb
incb
repnz
dec
movsl
mov
aad
mov
push
mov
sbb
fimull
cld
leave
push
in
or
test
mov
or
js
jo
shrb
enter
xor
lea
xor
push
xor
cmp
adc
lret
test
mov
gs
aam
add
sbb
and
loop
jbe
jp
mov
fiadds
insb
adc
push
aas
dec
lds
dec
stos
sub
cmc
mov
xorl
movsb
sub
data16
jge
cld
stos
mov
sbb
mov
jns
sub
jp
sbb
cmp
inc
sbb
sbb
fs
inc
push
push
int
push
sub
inc
pop
sarl
sbb
test
push
mov
mov
dec
push
mov
subps
xor
or
lods
mov
dec
mov
pop
xchg
xchg
enter
sub
mov
or
sbb
in
in
movaps
xor
movsb
pop
in
movsl
rcr
fptan
popa
push
xor
jmp
scas
cld
test
out
inc
iret
aaa
push
cltd
pop
and
stos
inc
ficompl
push
or
call
pop
inc
cmc
mov
mov
pop
mov
into
adc
mov
bnd
and
jno
incl
inc
mov
rclb
jle
loopne
hlt
inc
or
mov
sahf
xor
and
mov
in
pop
fisubrl
in
mov
in
mov
push
pusha
adc
push
dec
dec
push
cld
cmp
dec
int
cmpsb
xchg
fnstenv
xlat
int3
xchg
enter
into
sbb
idivl
int3
xchg
or
push
sahf
call
shlb
shrb
sbb
jge
popf
or
insl
dec
nop
sub
loope
dec
pop
inc
sub
mov
icebp
in
insl
sub
pop
std
adc
hlt
push
rcl
sbb
push
pushf
arpl
lret
mov
clc
fildll
les
push
push
sti
mov
mov
or
mov
jge
lods
mov
out
je
fcoms
mov
jge
rol
das
stos
add
cmc
out
stc
add
cmpsb
push
push
insl
stos
add
imul
mov
ret
inc
add
movsb
sbb
mov
lock
stc
mov
jge
mov
lcall
adc
ret
jle
mov
add
loop
xchg
outsl
or
jecxz
xor
out
mov
jns
loope
inc
lods
test
test
stos
push
xor
dec
out
mov
outsb
and
mov
inc
les
add
mov
jno
clc
rorb
js
sbb
aad
xchg
cmp
in
cmc
add
faddl
clc
in
lahf
fisttps
cmp
cs
jle
out
ret
roll
sub
testb
pop
mov
jb
loope
pop
adc
or
sub
jnp
sub
arpl
stc
push
mov
push
cld
xchg
int
pop
mov
mov
iret
sub
cmp
pop
icebp
lret
pop
test
div
and
sti
cmpsl
push
aam
xor
lods
ret
push
add
jl
xor
inc
jns
push
aad
lea
cmp
adc
pop
and
sub
jns
sub
cld
ds
cld
xor
and
cmpsb
loope
push
jmp
movsb
mov
xchg
out
mov
pop
pop
add
test
add
push
cmpsl
cmpsb
scas
shlb
mov
pushf
scas
push
iret
pop
ja
or
mov
test
mov
popa
dec
test
cwtl
fsubrl
sbb
popf
js
pop
lods
mov
mov
and
or
xor
inc
sarl
inc
and
pop
cld
out
xor
and
jle
hlt
sti
cmp
arpl
lahf
ret
ficomps
xor
ret
sub
repnz
add
jo
pop
cmpsb
push
cmp
xchg
mov
mov
lret
add
mov
aad
in
push
ds
xor
shrb
fwait
sbb
and
lods
outsl
xor
pop
add
add
in
push
test
mov
mov
pop
pop
sbb
ljmp
dec
in
popf
jmp
adc
mov
pop
shlb
push
jno
push
sub
jmp
adc
or
sbb
adc
lods
iret
pop
sbb
movsl
cmp
ljmp
mov
sbb
inc
insb
iret
mov
dec
shll
les
out
dec
cmc
roll
jne
push
subl
mov
pop
cmc
lcall
dec
mov
dec
wbinvd
sub
jle
outsb
cld
hlt
jle
ds
mov
repnz
adc
sub
icebp
jg
jno
dec
insl
fsubrl
fisttpl
bnd
jno
cmp
mov
test
mov
mov
dec
pop
in
sbb
popa
adc
cmp
fsubl
mov
push
and
inc
fldl
das
sub
enter
shrb
jle
xor
mov
inc
xchg
fincstp
jae
xchg
sbb
addr16
leave
icebp
and
sbb
jo
std
cmp
jnp
inc
pop
popf
in
or
dec
pop
xor
ljmp
adc
aam
arpl
movsl
push
imul
dec
push
jb
push
bound
lcall
inc
out
jp
mov
pop
xlat
ss
mov
test
mov
loop
xchg
loop
push
jnp
xchg
inc
mov
ss
sbb
loope
mov
movsl
aad
out
mov
add
ret
decl
push
inc
pop
out
sub
push
add
or
sbbb
nop
shll
jno
and
lock
cwtl
scas
cs
sbb
mov
lods
gs
jg
cmc
add
rcr
mov
mov
and
loopne
shr
lods
call
dec
or
shrb
sbb
sbb
add
jo
lcall
push
inc
cmp
adc
lret
jb
ja
pop
mov
dec
pop
xlat
popf
and
push
dec
aam
nop
pushf
cmc
xor
dec
movl
orb
push
xor
xchg
bound
mov
xchg
fdivrs
ret
call
mov
das
bound
mov
jmp
lahf
aad
push
rcrb
movsb
and
push
call
gs
pop
aam
data16
cmp
xor
adc
test
adc
nop
arpl
insl
jl
jae
xor
in
dec
sub
movb
xchg
sub
pop
sub
movsl
data16
push
loop
mov
cmp
mov
leave
inc
insl
mov
in
fcomps
adc
jmp
mov
lea
push
ss
lahf
xchg
mov
in
lret
cltd
idivb
fadds
std
sbb
xchg
sbb
jecxz
lahf
cmpl
arpl
outsb
push
mov
pop
aam
cs
adc
adc
jp
je
mov
jmp
push
inc
sub
mov
outsb
cmp
nop
popf
or
jbe
loop
jae
cli
idivl
or
ja
mov
jb
mov
mov
test
into
push
mov
xchg
icebp
in
repnz
jmp
leave
push
movsl
sbb
cs
sub
pop
stc
mov
enter
loopne
daa
jo
push
and
mov
jae
jnp
roll
xchg
andb
dec
in
pop
fwait
inc
mov
mov
mov
xchg
mov
xchg
aas
jbe
cwtl
inc
pop
cmp
dec
dec
sub
mov
ret
jmp
imul
pop
mov
jnp
pop
daa
leave
adc
and
mov
xchg
jnp
or
push
sarl
push
mov
jns
outsl
andl
xlat
stc
jge,pn
add
or
xor
pop
add
fincstp
lret
adc
divb
adc
adc
or
sub
inc
rcrb
mov
in
mov
ret
stos
push
or
push
mov
sub
out
mov
js
mov
dec
stos
push
sub
mov
sub
inc
mov
and
jle
sub
imul
mov
add
js
adc
je
leave
out
pop
push
popf
fisubrl
cmpsl
jl
lea
and
push
mov
rorl
inc
mov
push
out
or
sbb
sub
xchg
pop
jns
dec
mov
aas
ljmp
dec
cmpsl
cmp
test
mov
jb
push
cmp
stos
or
cmp
push
int
and
shrb
lret
add
cmpsb
push
dec
lods
or
mov
scas
ret
add
mov
test
fadd
pop
push
cltd
xchg
adc
and
andb
dec
pop
adc
dec
cmpsl
jl
ret
test
ret
mov
dec
cmp
pop
push
lods
push
fiadds
nop
sub
push
push
cmp
cmpsl
das
sbb
add
adc
popf
repz
fs
mull
orb
in
ja
lods
jnp
out
push
pop
cs
lret
rol
adcl
int
and
lcall
pop
push
hlt
lock
idivb
and
pop
sub
jnp
and
dec
mov
jo
jbe
shll
adc
mov
sub
jns
xchg
cmp
push
jns
xor
lcall
sub
test
cmp
lock
push
push
pop
push
stos
aaa
cmp
mull
cmp
fiadds
inc
pop
push
mov
inc
stos
inc
loope
ds
pop
pop
fnstsw
inc
hlt
ljmp
mov
es
dec
sbb
inc
adc
jmp
hlt
fisttps
mov
pushf
mov
je
sbb
mov
or
inc
xlat
sub
cmc
or
int
rolb
lds
mov
cmp
jne
and
mov
fstl
xchg
xchg
inc
fisubl
data16
xor
addr16
and
enter
out
cmp
mov
mov
mov
push
add
mov
les
ss
cmp
push
loop
bound
lock
lret
ss
mov
addr16
inc
mov
inc
aas
int
lods
clc
je
push
jle
sti
mov
sub
and
jae
lcall
sbb
or
por
mov
pop
out
inc
hlt
jmp
cmp
fdivr
and
int
loop
sti
je
sub
lea
fiadds
pop
out
mov
inc
push
inc
xchg
jl
pop
lea
sbb
push
loop
fdivrs
lock
mov
xchg
std
movsb
outsb
push
inc
ljmp
jno
into
add
push
jae
mov
pushf
mov
fdivrs
mov
add
jle
sub
inc
test
xchg
and
push
lcall
imull
add
inc
xor
jge
jmp
test
out
leave
jbe
ss
fcomps
out
js
nop
and
dec
xchg
popa
pushf
pop
dec
aas
lahf
in
pop
fucomi
mov
xchg
pop
pop
dec
in
adc
or
scas
adc
loope
push
imul
and
or
push
loope
stos
shlb
xor
cwtl
iret
or
cmp
sti
cmpb
sbb
clc
push
dec
mov
sahf
sub
shl
lock
pop
jmp
cwtl
sarb
adc
nop
outsl
in
fidivrs
add
mov
mov
testb
into
add
fstpl
insb
mov
jl
inc
out
and
add
repnz
dec
mov
mov
insb
dec
aaa
mov
sbb
iret
xchg
jmp
add
outsb
enter
pop
xor
daa
cwtl
jl
push
jg
pop
je
scas
push
xor
pop
add
fdivr
sbb
add
inc
int
mov
and
xor
ss
mov
mul
jp
packsswb
cmp
fisubl
sub
sub
repz
movsb
fadds
jb
xchg
add
xchg
mov
mov
outsb
dec
hlt
es
cmp
aad
and
bound
repnz
stos
int3
not
jle
test
push
push
dec
int
jg
icebp
dec
rorb
das
stos
or
rolb
out
test
mov
push
int3
inc
cld
fisttps
subb
pop
sub
jle
jmp
inc
pop
xlat
or
push
push
jno
fsubrl
data16
adc
cmpsb
push
imul
fucomi
cmp
xchg
es
out
jl
pop
icebp
or
dec
ja
in
shrb
into
enter
cmp
mov
mov
ja
mov
jle
arpl
xchg
cmp
adc
mov
insb
and
cltd
inc
test
jnp
stc
testb
jg
mov
sbb
dec
push
lahf
lock
je
add
mov
sub
inc
xchg
push
ss
ljmp
or
jl
inc
or
sbb
jmp
cli
and
or
jo
and
cmp
out
hlt
mov
jae
add
pop
bswap
cmp
movsl
daa
pop
int
divb
xor
rcrb
in
push
ljmp
lcall
adcb
gs
xchg
lods
shl
pop
daa
mov
cwtl
test
and
test
rcll
cltd
in
jle
xchg
leave
repnz
dec
pop
and
shrb
xor
in
or
xchg
jno
ret
icebp
sbb
popa
xlat
jp
push
sub
mov
mov
rclb
idivl
pop
sbb
dec
jg
mov
cli
fsts
mov
inc
sub
push
jb
subb
or
pop
cli
ss
mov
inc
cmp
pop
mov
sahf
push
jecxz
xor
stos
neg
xchg
stos
imul
ja
mov
sarl
mov
sbb
xorb
and
mov
mov
dec
lahf
int
xlat
inc
cli
sub
or
out
xchg
imul
adc
loop
pop
sub
jg
inc
push
xlat
shrl
push
dec
adc
jb
push
fadds
ds
in
dec
mov
dec
and
adc
or
sub
rcrb
push
insl
cltd
out
insl
mov
test
cmp
pop
pop
dec
aam
mov
cmp
jle
outsb
out
push
push
mov
inc
or
loope
inc
js
dec
test
mov
idiv
inc
xchg
or
js
loope
in
mov
add
jge
mov
daa
adc
lea
inc
jne
jecxz
adc
lret
dec
sar
add
xor
js
jbe
arpl
icebp
pop
adc
cmpsl
cmp
adc
sahf
push
or
sub
adc
cmpsl
movsl
out
mov
test
inc
inc
jns
adc
jle
rcl
dec
pop
fcmovnu
popa
xchg
rorb
fisubl
cmp
in
std
cli
inc
sub
std
lods
insl
xchg
sbb
pusha
leave
cmp
scas
cmc
loope
lcall
call
test
sbb
loopne
xor
imul
cmc
dec
push
add
movsb
std
lock
sub
xchg
pop
xchg
push
cmovle
in
out
scas
lret
xchg
push
mov
iret
enter
sub
popa
xchg
mov
xchg
push
nop
in
test
inc
mov
js
rcl
repz
jae
xor
mov
sbb
fsubrs
sub
jge
adc
leave
sbb
fists
inc
push
sbb
adc
mov
adc
add
jo
jb
jg
mov
xor
stos
pop
movl
mov
inc
in
out
out
shll
mov
pusha
test
mov
pop
fldt
push
or
pop
jb
scas
outsl
sub
aad
ljmp
push
bound
push
fwait
lret
cld
out
dec
and
std
add
xchg
xlat
push
jl
adc
cli
jle
mov
scas
jp
mov
in
fwait
test
xor
fwait
pop
mov
clc
cmpl
push
dec
cmpsb
dec
pop
mov
imul
icebp
imul
mov
sub
subl
dec
fcompl
fidivrl
lret
in
and
mov
test
call
mull
movsl
lcall
cwtl
push
xchg
mov
xchg
cmp
jb
cwtl
cmc
mov
cltd
pop
pop
pop
xor
pop
jg
leave
int3
mov
shl
cld
es
mov
leave
daa
jl
test
mov
xor
ds
xor
shlb
add
xchg
push
ljmp
dec
test
cmp
pop
pop
xor
sar
sbb
repz
imul
xor
mov
cmp
adc
mov
ljmp
repnz
xchg
cli
shlb
jnp
xlat
push
dec
in
xchg
scas
movsb
jno
xor
inc
dec
ss
ret
cld
mov
test
mov
xchg
dec
scas
dec
icebp
adc
popa
pop
mov
je
imul
sti
fistpll
adc
insl
sub
das
je
mov
push
mov
mov
adc
inc
inc
sbb
and
iret
rcrb
loopne
push
mov
in
rcll
outsb
fisttpl
iret
and
dec
jle
hlt
mov
fldl
test
add
mov
mov
pop
sbb
cli
in
fmul
jno
mov
jp
fiadds
lods
jno
leave
add
xorl
push
and
xor
fildl
lods
scas
dec
outsb
imul
shll
adc
jl
sti
xchg
cmpsl
ss
pop
mov
shrl
enter
rcrl
mov
in
scas
sbb
and
fadds
ficomps
push
loopne
mov
pop
mov
lret
xlat
icebp
inc
add
mov
mov
lret
or
sbb
adc
lods
scas
push
ret
jbe
imul
and
and
decl
cmpsb
lea
es
popl
mov
inc
xor
lret
ljmp
push
lret
in
lods
andl
rorl
push
movsl
jne
sbb
sbb
negb
and
sarl
icebp
mov
cwtl
je
push
leave
in
adc
hlt
ss
addr16
inc
fsubl
test
neg
sbb
jb
mov
pop
inc
inc
lcall
inc
and
rorl
push
or
in
sbb
lcall
jb
into
push
cli
or
shr
jmp
cmp
les
adc
sti
das
push
imul
push
int
pop
mov
sbb
mov
cmp
ficompl
add
inc
movsl
test
xchg
aas
push
add
outsb
mov
sarl
rcr
add
jno
pop
or
sub
lcall
bound
xor
inc
mov
mov
adc
clc
cld
in
dec
push
cmp
cwtl
aam
pop
mov
mov
push
mov
or
je
dec
xor
out
in
mov
jae
enter
scas
es
sub
jg
test
lods
sbb
mov
inc
lods
inc
or
or
ss
push
insb
xor
push
mov
xchg
cmpsb
aaa
dec
mov
mov
rol
cmp
std
outsb
inc
mov
inc
sahf
xlat
popa
xchg
sarb
scas
fdiv
inc
les
xchg
mov
in
aas
fisubrl
xchg
mov
mov
lret
jp
pop
sbb
sar
cli
test
push
cmp
ljmp
mov
out
mov
cmpxchg
fwait
cmp
pop
cmovns
cltd
jp
and
sub
inc
mov
or
xlat
xchg
mov
data16
and
repz
inc
push
and
jp
push
and
push
jbe
mov
fs
sahf
ss
les
xchg
pop
mov
in
pop
cli
cmp
loopne
sub
ja
test
cmp
pop
outsb
pushl
clc
enter
aad
xchg
daa
cli
mov
pop
rcrb
sarl
fs
jl
test
mov
add
dec
jno
in
outsb
xlat
incb
inc
sbb
testl
pop
push
shll
jne
jno
push
rcll
mov
bound
insb
mov
scas
call
or
stos
adc
cmp
dec
sarl
adc
sbb
orl
pop
hlt
mov
sub
jo
roll
daa
in
add
test
fisttpl
jp
mov
jmp
mov
mov
pop
inc
fwait
or
loopne
or
ds
sbb
test
cmpsb
lret
lea
decb
roll
lock
pop
fldt
sub
mov
jns,pn
pop
add
xchg
in
dec
sbb
xchg
lret
or
inc
iret
push
dec
dec
and
xor
imul
adc
aaa
pop
sub
mov
add
push
cmpl
mov
mov
das
outsb
mov
loopne
inc
dec
and
xor
add
cs
leave
js
jmp
xchg
outsl
jmp
pop
movsl
cwtl
dec
arpl
loop
jbe
jnp
push
xor
pop
ret
fidivrl
ret
insb
aad
cs
pop
rcll
dec
js
lahf
clc
push
sbb
add
or
mov
int3
lcall
sbb
xchg
nop
push
pop
stos
push
enter
call
pop
gs
cld
clc
stos
dec
mov
or
repz
jb
pop
out
sbb
mov
pop
das
pop
dec
xchg
shl
loope
add
sub
daa
call
repnz
imul
ror
test
div
jb
or
xchg
mov
daa
fistpl
mov
test
dec
les
jp
je
leave
add
in
das
call
sarl
inc
jg
fimull
cmp
imul
pusha
sub
dec
out
pop
mov
fst
in
push
rorb
mov
stc
mov
inc
add
and
rorl
mov
adc
incl
sbb
imul
mov
xor
mov
movsb
fidivrs
cmp
pusha
add
push
stc
dec
dec
testb
inc
iret
jno
sub
sbb
lods
push
mov
jbe
sahf
jp
repnz
cmpb
pop
addr16
lea
mov
iret
test
xchg
inc
sbb
add
jg
test
stc
cld
pop
dec
leave
dec
xor
jo
clc
ret
ljmp
insb
ret
in
mulb
loope
movsb
aad
cmp
cmpsb
xchg
or
je
adc
cltd
xchg
pop
fsub
int
sub
xor
fidivl
inc
rcll
es
jo
sub
mov
or
add
mov
insb
hlt
jg
aaa
movsb
test
outsb
pop
adc
push
mov
cmp
lds
in
cmp
aam
ficoml
into
das
pop
pop
ds
or
repz
imull
icebp
sbb
jmp
out
xor
icebp
sbb
popa
fmull
or
and
aad
das
pushf
add
in
jecxz
test
or
mov
shr
test
data16
push
in
push
inc
sarb
adc
cli
pop
jb,pn
dec
jmpw
insl
loopne
fstpl
push
insb
out
fimull
mov
sub
cmp
jo
xchg
shll
cmp
repz
xor
or
loop
inc
sub
and
les
fsubs
push
push
dec
popa
pushf
scas
adc
pop
out
outsl
aaa
mov
xchg
mov
adc
aas
fisubs
dec
jb
add
inc
mov
xchg
pop
and
dec
hlt
sbb
dec
movsl
dec
aad
fwait
mov
push
loopne
movsl
xchg
dec
lcall
adc
xchg
popf
movsl
std
add
aaa
out
pop
pushf
sbb
pop
push
and
popa
stos
in
pop
mov
sub
push
fdivrs
ljmp
das
insl
mov
out
enter
and
loopne
cmp
add
push
cmp
cmp
add
in
mov
repnz
dec
pop
adc
dec
mov
xor
jge
push
fld
jge
dec
inc
cmp
xchg
ret
dec
inc
aaa
mov
pusha
aas
sbb
dec
mov
sub
and
in
sbb
popf
cli
or
das
sbbl
mov
and
mov
inc
or
jne
fmuls
cmp
mov
enter
ja
push
cltd
cs
mov
cmp
scas
or
push
clc
repz
sbb
orb
xchg
dec
add
loope
in
cmp
xor
loop
lods
lods
jecxz
add
adcb
hlt
insl
xchg
or
outsb
fbld
mov
pop
adc
aam
xlat
lahf
pushf
xor
and
inc
pop
and
das
pop
hlt
repz
addr16
jmp
jg
movsb
pusha
sbb
shrb
lea
outsl
add
xchg
adc
out
shr
lds
mov
xor
in
inc
adc
xchg
pop
inc
and
rol
imul
data16
lock
bound
sbb
dec
lret
int
push
out
fsubrl
clc
mov
out
cld
int3
out
inc
out
fstl
or
scas
pop
sbbl
inc
adc
sub
es
jecxz
enter
gs
inc
xor
hlt
idivl
jl
popa
push
inc
mov
mov
xor
js
shll
mov
aad
jb
mov
repnz
mov
mov
xor
je
push
cmp
xor
fldt
sub
mov
stos
pop
es
daa
add
sbb
ss
jne
xor
or
sbb
xor
stc
push
imul
sub
push
imul
shl
xchg
cmpsl
fcomps
xchg
shlb
mulps
pop
out
andl
call
adc
push
inc
stos
mov
cmp
insb
adc
popf
and
push
xchg
sbb
lock
pusha
mov
lahf
pop
sub
stos
cli
jbe
test
test
aad
insb
mov
dec
sub
pop
mov
xchg
dec
dec
cltd
movsl
rorl
mul
xchg
push
aad
jecxz
ja
dec
jl
push
test
imulb
das
add
je
xorb
adc
and
lret
cmp
jmp
sbb
daa
and
dec
pop
push
xchg
cmpl
call
or
push
loope
push
mov
push
jl
insl
aas
nop
mov
loop
cmpsl
out
or
imul
cmpsb
outsb
mov
lret
fidivl
mov
movsb
push
push
lods
into
cmp
fwait
inc
dec
pushf
jecxz
sbb
movb
or
lcall
ljmp
incb
outsb
inc
jno
dec
std
push
push
jge
sub
fbstp
jg
lcall
iret
inc
pop
das
cmpsb
movsl
xchg
and
pop
push
push
mov
ret
or
sbb
adc
dec
cmpsb
or
jle
mov
add
mov
cltd
enter
call
mov
lret
push
popa
or
dec
xchg
leave
jecxz
mov
jg
stos
test
lcall
inc
lret
xchg
lods
mov
lock
frstor
or
pop
das
rcl
push
loope
pop
adc
push
out
aad
neg
sub
push
stc
and
and
xor
shlb
jle
jmp
shlb
popf
pusha
fs
sbb
mov
push
out
popa
mov
mov
sti
inc
icebp
xchg
dec
lahf
and
loop
xchg
neg
mov
inc
pop
mov
dec
imul
and
lahf
pop
cld
add
push
popa
les
pop
scas
dec
mov
lods
jae
xchg
mov
rcrb
lcall
mov
pop
cltd
jecxz
sbb
xor
xchg
xor
pop
push
sbb
cmpsl
xor
and
xchg
or
mov
pop
mov
or
push
insb
divb
fbld
jns
outsl
pop
dec
mov
aam
popa
loopne
lods
push
push
andl
cwtl
adc
sub
shll
repz
int
pop
fcomi
out
ret
pop
dec
inc
clc
cltd
cmp
cmpsl
loopne
or
arpl
imul
sbb
sarb
scas
lret
lds
pop
ljmp
cmc
scas
cmp
xor
jns
rorb
stc
jle
ficoms
mov
sbb
fcoms
ljmp
pop
sbb
or
hlt
push
outsl
ret
jg
cmp
ret
jp
sbb
pop
loopne
aad
and
test
loopne
cmp
outsb
xlat
aas
js
push
or
cwtl
push
xchg
pop
jecxz
mov
cmpsl
cmp
jno
mov
scas
gs
xor
pushf
into
outsl
mov
mov
cmp
sub
xor
cmpsl
jnp
leave
or
jle
sbb
sub
fs
pop
pop
adc
mov
ja
xchg
fsubs
adc
ds
mov
xchg
jo
jno
in
jae
divb
jb
xchg
and
add
rcr
xchg
shlb
pusha
movsb
xchg
cmp
lods
arpl
lcall
inc
jp
aad
lods
sbb
push
sub
testb
iret
rcr
pop
sarb
pop
push
or
inc
ljmp
dec
shrl
out
inc
loop
es
mov
xor
call
jns
dec
jae
add
lock
jl
fistpll
shrl
clc
inc
imul
mov
mov
or
dec
xchg
outsl
dec
dec
test
cld
sbb
pop
cmp
inc
push
pop
xlat
cmpsl
jg
jle
movsl
mov
push
xor
fcmovnb
push
ret
push
jecxz
sti
xchg
scas
or
out
xchg
in
dec
out
mov
pop
in
daa
adc
and
scas
adc
insl
imul
fcmovbe
dec
and
mov
movl
int
in
mov
xchg
inc
mov
cmp
insl
aaa
adc
neg
sbb
in
xchg
arpl
movsb
and
ljmp
stos
rcll
arpl
int3
cwtl
mov
sub
movsl
cs
shl
repz
sbb
add
cmovle
cmp
loop
outsl
mov
pop
pop
jnp
out
repz
fstp
inc
popl
mov
cmpsl
sub
dec
push
push
ret
or
cmpsl
stos
jbe
xor
sbb
leave
call
test
dec
push
aaa
test
sbb
fldt
jg
lcall
push
loope
inc
std
ljmp
lods
arpl
jmp
iret
repz
jae
jp
cmp
pop
int3
cmp
nop
push
pop
ret
push
fwait
push
mov
inc
sub
testl
enter
push
push
push
scas
or
jle,pn
add
stc
add
push
dec
push
stos
and
lds
scas
jge
pop
jno
into
jb
mov
pop
loopne
es
call
fisubl
mov
lods
jnp
push
jmp
dec
cmp
mov
dec
push
cmp
addr16
push
dec
sbb
push
pop
mov
and
clc
inc
jns
add
xchg
push
sbb
out
pop
out
or
sub
add
out
lods
movb
inc
arpl
sub
out
dec
repnz
pop
testb
lret
out
out
clc
loop
jb
jle
mov
xor
push
mov
fnsave
xlat
mov
int3
pop
and
mov
mov
aam
jmp
mov
sub
in
call
popf
cmpsl
lock
inc
clc
and
xor
push
aaa
lea
and
add
ss
mov
push
pop
fnstcw
mov
adc
mov
ret
add
jne
pop
jo
pop
or
sub
loop
sub
push
out
or
pusha
filds
adc
cmp
xchg
mov
enter
aaa
ret
cwtl
gs
xor
sbb
ror
imul
pop
icebp
daa
pop
adc
mov
xor
stos
inc
pusha
andb
std
xor
jg
add
leave
lea
xchg
cltd
movl
lcall
sti
pop
enter
mov
mov
cwtl
dec
fs
ss
pop
repz
and
movsb
enter
sub
xor
xchg
jo
pop
push
inc
lea
mov
arpl
xchg
pop
je
mov
cmp
cltd
jae
das
or
adc
test
les
xor
std
pushf
sbb
push
inc
ret
or
out
in
popf
or
jb
sub
cmp
aad
stc
inc
mov
jge
mov
aaa
push
arpl
dec
mov
je
dec
inc
in
mov
pop
outsl
sbb
sbb
xchg
push
lret
or
ljmp
cmpsb
mov
mov
lahf
inc
jle
jb
or
fidivrl
jno
pop
jge
pop
xchg
inc
ljmp
cwtl
jae
mov
push
daa
std
and
arpl
ljmp
push
add
sbb
mov
mov
mov
push
pop
into
cld
or
pop
nop
pop
jb
repnz
insl
pop
fisubrs
cmpsb
out
push
cli
sahf
fsubrs
xchg
and
and
das
inc
fwait
jge
pusha
shrb
push
pop
fidivrs
stos
push
stos
inc
push
xor
mov
int
sub
dec
rol
stos
rorb
loop
and
in
push
mov
pop
pop
jmp
xchg
jp
pop
bound
ds
cmpl
data16
dec
push
push
push
in
rcrl
mov
xchg
add
ret
cs
push
xchg
or
adc
addr16
stc
sub
rorl
mov
loop
jg
in
push
subb
pop
cmp
daa
jns
add
xchg
push
call
push
shlb
ror
inc
lods
hlt
jnp
lea
out
inc
xlat
sbb
fsts
out
scas
data16
jg
mov
test
idivl
xchg
subl
ljmp
jle
xchg
scas
cmpsl
test
fsubrl
rclb
call
push
add
mov
popf
add
dec
in
testl
add
test
pop
hlt
adc
adc
mov
push
mov
xchg
and
pushf
bound
repnz
pop
mov
mov
cli
lret
lret
jmp
adcl
les
leave
lea
fdivrl
sub
sub
or
cmp
pushf
shrl
pop
into
out
xor
pop
out
add
in
je
push
xchg
xchg
arpl
mov
inc
push
sti
mov
mov
mov
in
mov
je
jb
pop
mov
les
cmp
iret
adc
out
mov
call
jmp
xor
nop
sub
call
std
mov
lods
sub
jne
loope
cmc
inc
mov
fwait
stc
cmp
cmp
push
sbb
insb
mov
out
or
les
cld
lahf
mov
inc
repz
mov
xchg
cmp
stos
fidivrs
cli
jg,pt
fistl
ret
scas
outsb
cmp
das
fisubl
push
ds
jnp
mov
sub
popf
fsubs
pop
xchg
jne
insb
negb
mov
fildll
push
iret
add
es
dec
int3
test
or
inc
insl
inc
scas
inc
lds
push
lock
adcb
sub
inc
and
cmp
xorl
cli
cmpl
lcall
dec
sub
sub
dec
jae
xor
inc
dec
mov
inc
sbb
adc
or
inc
test
adc
mov
in
add
ja
sub
inc
jge
test
fimull
pop
sub
jb
cmp
mov
arpl
pop
pop
call
rcll
fdivrs
jne
mov
or
or
loope
push
adc
out
sti
sbb
adc
push
lea
repz
push
in
or
out
adc
mov
gs
push
xor
pop
mov
incb
lret
cltd
test
ljmp
dec
sbb
je
push
push
or
add
lds
jbe
inc
fs
pop
call
add
pop
shlb
xchg
cmp
xor
cld
pop
jl
leave
or
scas
jmp
or
leave
test
inc
add
pushf
imulb
movb
loope
mov
lret
outsb
ret
and
pop
dec
jns
js
in
mov
and
enter
cmc
mov
cmp
shrb
lret
sub
jg
fwait
dec
xchg
dec
xchg
imul
inc
xchg
xor
cmp
mov
mov
fidivl
xchg
fdivrl
or
gs
loope
test
ret
sbb
in
call
mov
out
scas
sub
aad
shlb
jl
inc
clc
sbb
sbb
xlat
stc
orl
cmp
adc
int3
mov
mov
jecxz
shl
mov
lods
lods
pusha
sbb
push
mov
inc
cwtl
and
imul
mov
and
push
scas
ret
pop
jae
dec
xor
repnz
jecxz
iret
sahf
mov
push
xor
stos
mov
dec
or
mov
mov
lret
icebp
mov
mov
sbb
outsb
and
pusha
movsl
adcl
cmc
movsl
cmpsb
lock
mov
test
push
dec
xchg
aam
mov
add
and
pusha
jle
sub
out
jg
cmpl
push
rolb
and
xor
inc
lods
fistpl
out
adc
movsb
sbb
mov
scas
xor
ss
cmpsl
nop
cmc
ljmp
shlb
cwtl
scas
fiaddl
and
xor
daa
mov
push
add
mov
add
dec
out
push
xor
and
fdivrl
popf
lret
mov
dec
rcrl
pushf
mov
add
popa
test
sub
gs
and
fstl
inc
sbb
xchg
mov
int
dec
imul
idivl
test
push
stos
mov
stc
xchg
push
mov
ds
mov
and
fiadds
sbb
insl
cld
std
or
sbb
js
push
cmpsl
mov
pusha
and
inc
out
lds
bound
mov
or
cltd
pop
sar
ret
sub
fistps
dec
test
fucomp
daa
ss
add
ret
xor
fdivrl
cmp
pop
cmp
aam
xchg
adc
daa
push
in
sub
mov
stos
repnz
xorl
sbb
fsubl
arpl
jbe
add
adc
pop
sti
inc
sub
in
int3
sahf
push
mov
int
pop
in
aad
lcall
pop
inc
push
imulb
mov
lcall
jl
les
cmc
cs
sbb
xor
xlat
push
adc
jmp
mov
pop
outsl
cmpsb
dec
outsb
repnz
xchg
jbe
sti
fimull
test
xor
push
lds
aam
pop
fmulp
sub
adc
pop
movsl
sub
imul
popf
stos
adc
scas
mov
mov
cmpl
sub
xorl
iret
stc
shll
ret
and
mov
repz
mov
ss
mov
in
push
adc
mov
mov
mov
jl
stos
aaa
adc
mov
js
xchg
hlt
jmp
jl
jns
push
mov
jno
xchg
mov
mov
out
adc
inc
dec
shrb
lret
into
loopne
adc
pop
hlt
scas
mov
mov
adc
mov
add
cmp
sub
mov
or
add
pop
xchg
xchg
testb
cld
mov
jnp
dec
or
push
mov
add
mov
int3
insb
movsb
mov
add
cld
js
jge
decl
enter
lods
dec
pop
mov
push
roll
dec
cwtl
js
pop
jo
lcall
mov
push
rcll
fisubs
mov
inc
imul
paddsb
sbb
test
push
push
push
cmp
fidivs
sarb
lock
pop
and
or
jo
push
jbe
loop,pt
into
scas
or
outsl
lods
cld
xchg
mov
enter
push
mov
push
out
add
mov
iret
inc
les
js
push
je
add
xchg
aas
mov
dec
std
push
pop
push
sub
dec
negl
stos
adc
sub
pop
out
lahf
dec
jecxz
inc
jns
mov
shrb
and
mov
mov
add
mov
jmp
enter
or
pop
popa
pop
nop
xchg
nop
jo
sub
push
test
rcrl
adc
push
adc
enter
scas
jns
sub
dec
fwait
mov
mov
mov
jl
xchg
jle
scas
mov
lods
lds
fld
imul
jp
mov
mov
lret
lahf
sbb
push
xchg
cli
jb
mov
fstps
insl
out
inc
push
in
outsl
aas
shrl
lods
popf
sub
test
sbb
loop
fcmovne
aas
repz
xor
mov
mov
jns
xorb
pusha
ret
pop
mov
adc
js
push
mov
out
mov
push
enter
arpl
mov
aam
mov
and
dec
inc
add
aas
mov
out
int3
ret
push
xor
mov
sub
mov
test
lock
repz
test
xchg
mov
sti
lock
call
fildll
xchg
es
jge
dec
hlt
jl
dec
sti
dec
jle
mov
or
xor
popa
repnz
cmp
mov
and
mov
pop
xor
push
inc
sarb
idiv
or
movsb
xor
inc
hlt
xlat
sbb
cli
push
arpl
into
arpl
movsl
push
ljmp
inc
fcmovnbe
xor
call
mov
fcomip
or
add
push
in
mov
inc
sub
mov
imul
inc
push
nop
gs
movsl
add
mov
jl
fstpl
addb
pop
push
rorb
pushf
jo
and
mov
jb
lock
in
enter
or
inc
xorb
stc
xchg
popa
cmp
out
imul
stc
aad
adcb
cmp
add
lods
sub
nop
jle
cmp
sbb
xchg
jg
push
aaa
push
negb
mov
test
sbbl
js
in
add
ret
push
and
arpl
pop
test
lods
mov
jns
cli
test
push
adc
leave
xor
sbb
xor
std
imul
ja
adc
jl
inc
add
fwait
aas
jge
mov
popf
or
jp
xchg
in
fucomi
mov
lock
shll
stos
sub
iret
xor
mov
push
jl
xchg
iret
cld
out
in
jne
push
xchg
movl
not
pop
sbb
push
or
int
jge
arpl
xor
xor
and
fsts
inc
ja
test
scas
xor
shll
jnp
xchg
pop
mov
mov
bound
sub
inc
or
ljmp
dec
mov
xor
lcall
cmp
sti
pop
sbb
inc
test
loop
adc
inc
or
clc
xor
mov
and
lods
data16
sbb
fimuls
outsl
mov
fildl
and
sub
xchg
les
pop
and
xor
xor
cwtl
sbb
add
jl
mov
in
in
movsl
test
push
aad
mov
sbb
imul
int
call
push
mov
aaa
in
or
fldl
and
ftst
xchg
cmp
fcoml
cmp
enter
sbb
fisttpl
stos
leave
js
popa
daa
cs
fwait
push
roll
lret
jne
xor
repnz
or
fwait
hlt
mov
add
icebp
xor
shr
rorl
inc
inc
push
mov
add
inc
xchg
sbb
xchg
add
lea
out
lret
and
xor
push
or
mov
fstps
adc
sub
push
stos
fmul
inc
cmp
mov
adc
cmp
or
jnp
mov
ja
faddl
out
mov
or
cs
arpl
popf
lahf
push
mov
insl
fwait
jb
cmp
scas
scas
lea
xchg
insl
or
test
mov
jp
in
fsubs
out
loopne
sarl
cmp
aam
imul
adcl
ss
mov
ret
jle
mov
stos
nop
xor
push
pop
mov
in
or
pop
fists
mov
aam
hlt
lock
nop
sub
subl
or
pushf
and
dec
or
iret
push
xor
shll
rcl
insl
insb
out
push
arpl
lods
cld
add
int3
popf
dec
in
stc
adc
lea
pop
sbb
mov
push
bound
sbb
cltd
or
ror
and
mov
jg
mov
pop
cmp
sti
adc
xchg
jecxz
mov
sarb
inc
in
mov
pop
stc
adc
test
arpl
int3
in
cmp
sahf
pusha
test
or
fsubl
or
lret
cmpb
inc
int
cld
pop
shr
mov
imul
loop
and
mov
mov
sti
icebp
mov
xchg
sarl
outsl
xor
xor
pop
jo
sbb
daa
out
dec
lds
dec
mov
mov
jge
cmpb
fimull
adc
loop
dec
orl
or
or
popa
ja
inc
and
movsb
popf
cwtl
mov
mov
sub
je
pusha
pushf
pushf
push
sahf
sub
xlat
push
pusha
xlat
mov
cld
mov
das
mov
xlat
pop
test
in
and
fbstp
mov
cmpsw
pop
sbb
push
cmc
or
imulb
jne
adc
xchg
cmpb
xchg
mov
mov
out
scas
aam
pop
in
adc
iret
sub
cmpsl
movsl
rcrl
sbb
sub
dec
jo
stos
or
incb
xor
push
dec
and
lods
int3
mov
icebp
lahf
cld
shll
fstpl
aaa
mov
cmp
in
movsb
jbe
mov
cmp
xor
xor
lahf
imul
adcl
sahf
mov
outsb
loopne
and
xchg
pop
pop
in
pop
cmpsb
cmp
sub
and
push
repz
mov
mov
stc
pusha
mov
inc
rcrl
cmpl
xor
pushf
movsl
shlb
lea
pop
leave
addr16
mov
lods
mov
or
inc
leave
fldl
adc
loopne
insl
mov
push
cmpl
mov
inc
fisubs
mov
stc
inc
mov
sbb
out
gs
or
aaa
mov
outsl
dec
fldlg2
jbe
sbb
push
jns
push
xchg
insb
inc
icebp
aad
push
pop
test
mov
cwtl
push
sub
sbb
push
xchg
ss
scas
jno
sub
fldcw
mov
pop
mov
bound
push
dec
jae
subb
xor
xchg
lock
sbb
mov
dec
fucom
cmp
outsl
xchg
mov
xchg
push
mov
stc
xor
ret
out
arpl
stc
into
dec
xchg
jp
jge
dec
add
mov
andb
mov
rol
mov
jge
add
xor
xchg
lock
sub
mov
mov
mov
dec
adc
and
in
and
loope
loope
movsl
inc
lock
testl
sub
push
repz
sbb
mov
mov
jnp
sti
popa
clc
mov
out
subl
sub
cmp
leave
mov
jge
js
in
jns
pop
in
mov
cs
jmp
push
fldcw
inc
inc
jmp
cmp
inc
mov
push
loop
out
and
outsl
dec
lret
lahf
sub
shlb
xor
mov
loop
mov
ja
or
sti
pop
mov
mov
adc
movsl
fidivrl
fwait
add
hlt
xchg
adc
or
pop
xchg
or
sub
scas
mov
jg,pt
mov
mov
dec
leave
sub
filds
add
xchg
pushf
xchg
sbb
les
lods
ret
jo
mov
ficompl
icebp
push
inc
mov
movsl
scas
test
inc
in
xor
fs
mov
sbb
and
or
test
negb
ljmp
mov
xor
idivl
or
dec
andl
loopne
xchg
rorb
inc
lea
pop
inc
fs
xchg
xchg
nop
adc
repnz
cmpsl
nop
movsb
jmp
cmp
test
xchg
xor
fwait
xchg
mov
cmp
cmp
cmp
pop
cmp
ficompl
and
pop
mov
jecxz
add
push
or
fimull
xor
sbb
scas
inc
rolb
jmp
fistps
mov
dec
jb
sub
pop
fs
out
push
test
adc
test
push
mov
xchg
jno
pop
fisubs
cmp
cmpsl
push
or
mov
dec
ja
int3
lahf
imul
fildl
xor
cmp
push
hlt
jp
aad
mov
jbe
jbe
push
insb
xor
adc
rorl
ficompl
sub
test
inc
sbb
aas
fs
jae
pop
in
dec
sbb
push
push
fsubr
stos
je
fistpl
cmp
ljmp
shrb
cmp
mov
pop
pop
jmp
inc
leave
dec
xor
fiadds
push
jp
addb
sbb
loopne
loopne
pop
sti
pop
xorl
cmp
std
inc
in
or
and
mov
xchg
and
push
or
ljmp
stc
pop
and
adc
mov
jp
xchg
fcomps
dec
imul
jae
leave
stos
test
idivb
js
mov
and
adc
movsb
mov
sub
mov
xor
fsts
into
jo
and
xlat
inc
movsl
out
paddq
xor
leave
mov
inc
daa
add
xchg
insb
mov
pop
out
sub
lret
out
inc
sub
hlt
enter
jo
out
xor
pop
jge
sarb
xchg
fst
sub
fs
ljmp
dec
das
jbe
inc
push
stos
mov
out
push
mov
jns
aad
pusha
inc
xor
mov
jmp
sarb
dec
pop
repz
add
and
pop
pop
or
push
sub
add
sti
imul
add
jbe
iret
sub
pop
adc
imul
lods
xchg
push
push
jno
les
mov
jns
or
lret
popa
xchg
and
or
jmp
sub
or
movsl
pop
add
jmp
mov
inc
xchg
ljmp
dec
adc
movsl
clc
ljmp
and
into
push
es
xlat
jmp
movsb
nop
movsl
arpl
aaa
xcrypt-ecb
cmpsl
dec
div
inc
cmp
jo
mov
xor
sbb
lret
sbb
in
adc
ja
inc
sbb
cmp
nop
inc
js
imul
pcmpeqb
std
or
hlt
movsl
cmp
dec
add
pcmpgtd
xor
or
in
lahf
mov
inc
imul
aam
pop
jmp
mov
inc
int
or
and
jbe
popf
sub
test
ja
js
shrb
imul
xor
inc
shll
lcall
in
dec
inc
outsb
inc
xor
inc
loope
xor
mov
rcll
add
or
out
stos
mov
fiaddl
xor
cmc
in
aas
cmp
test
and
cmc
pop
inc
push
sub
xchg
pop
in
push
xchg
mov
cwtl
int
adc
sub
or
iret
dec
jecxz
aas
fs
fmuls
dec
dec
orl
inc
mov
add
jo
sar
sub
shll
mov
mov
bound
inc
loope
mov
xor
ss
cmp
sbb
ror
into
enter
sub
in
cmp
xchg
push
stos
sbb
mov
pop
out
clc
outsb
pop
dec
cmpsl
movsl
bound
pop
jb
dec
inc
mov
lods
xor
adc
jns
pop
add
or
push
and
and
in
sysenter
cmpsb
pop
jns
push
or
or
lock
fstpt
std
sbb
loope
lock
dec
rcll
jb
outsb
add
mov
pop
and
mov
fprem1
test
int3
cmp
cmp
bound
mov
inc
push
mov
sbb
dec
inc
ds
into
mov
in
push
imul
and
shl
out
lock
pop
bswap
push
leave
out
mov
fldt
aam
and
pop
adc
push
mull
push
jmp
je
iret
repz
or
mov
int
into
lock
sub
mov
mov
int
pop
mov
icebp
repz
cmp
pop
mov
add
pusha
test
ljmp
sub
xchg
jne
negb
pop
cmp
xchg
sub
leave
cwtl
popf
and
sub
fildl
out
mov
sub
int
adc
testl
popa
inc
mov
daa
sub
lret
mov
in
imul
pop
push
test
jbe
jge
push
xchg
xlat
fisttpl
mov
mov
jae
fldenv
sub
mov
xchg
mov
sub
mov
xor
fldcw
mov
xchg
mov
cmc
call
stos
outsl
imul
je
add
aaa
sub
iret
and
daa
push
add
or
fisubrl
lahf
inc
sbb
jg
xor
sub
adc
and
mov
inc
push
ss
out
push
loopne
test
loop
fisttpll
lods
xor
cs
xchg
push
rcll
lret
sbb
inc
pop
in
inc
mov
mov
gs
std
cmpsb
inc
push
mov
sbb
decl
lahf
jmp
ficompl
call
cmc
insl
out
mov
inc
jge
lret
ret
ds
out
jno
scas
push
ret
inc
mov
push
push
mov
out
xor
or
push
dec
iret
popf
ss
push
mov
scas
jp
mov
bound
mov
gs
adcb
jmp
pop
mov
inc
pushl
cmp
stos
pop
ret
fwait
movswl
lret
insl
in
push
pop
dec
and
pop
pushf
inc
es
inc
test
insl
and
ret
pop
adc
lahf
pop
push
jae
test
fisttps
mov
push
arpl
jp
cmp
cld
mov
dec
xchg
mov
xchg
call
aaa
mov
mov
mov
sub
add
pop
fstps
pop
mov
and
mov
iret
aam
dec
jno
mov
loope
lcall
xchg
mov
mov
adc
jp
outsl
dec
and
adc
push
pushf
je
aas
dec
push
jp
out
cmp
add
jb
test
data16
jmp
push
nop
fsubr
sbb
jne
stos
clc
jne
jecxz
cmpsb
cmpb
mov
inc
xlat
test
inc
xchg
xchg
out
mov
dec
ja
cmc
mov
nop
inc
cmp
jnp
and
jnp
fildll
push
clc
lods
lea
int3
dec
shrl
inc
clc
ret
lahf
clc
sbb
push
sub
jle
cmc
out
jge
cltd
jmp
mov
cwtl
mov
mov
loopne
or
gs
dec
ret
mov
leave
mov
arpl
into
bound
push
mov
cmp
bound
stos
out
loopne
push
add
lock
inc
and
pop
mov
out
mov
imul
pushf
xchg
clc
les
pop
aad
fs
mov
pop
cltd
and
sbb
xor
xchg
pop
or
test
mov
bound
mov
cltd
sbb
loop
lret
and
jp
adc
add
inc
lods
mov
sbb
inc
in
fldt
iret
insl
lods
cltd
movsl
sub
sti
pop
jmp
orb
idivl
ret
push
mov
add
out
test
dec
ret
ret
imul
or
mov
lahf
add
mov
jl
rclb
in
cmp
pop
stos
mov
cmp
fnstenv
dec
add
mov
mov
scas
lock
and
add
xor
mov
mov
and
movsb
lret
xor
les
inc
dec
xor
cmpsl
jmp
cmp
xor
ror
and
mov
mov
movsl
jo
cmp
xchg
divb
inc
int3
lahf
dec
je
lods
cltd
popf
sarl
dec
dec
mov
aam
rcl
popa
ret
dec
jae
iret
insb
les
stos
mov
adc
mov
jmp
pop
insl
sbb
mov
cmc
mov
lahf
push
or
fwait
pop
adc
and
mov
cmp
outsl
push
movl
sub
cmpb
sub
jmp
je
xlat
inc
jb
in
jmp
and
sti
push
or
cmp
push
push
push
cmp
in
loop
aas
cli
in
mov
mov
cltd
or
lcall
cmp
call
jns
and
or
xchg
int
movsb
lcall
jbe
or
movsl
pop
cmp
dec
mov
cmp
rolb
cmp
in
mov
dec
stc
push
sub
adc
sbb
xor
imul
movsb
movsl
inc
je
xchg
adc
inc
cmp
out
ficomps
push
icebp
ret
mov
pop
mov
out
mov
dec
sbb
sahf
test
mov
icebp
push
icebp
adc
lods
push
sub
mov
xchg
mov
dec
repz
pop
loop
daa
pop
mov
inc
inc
lret
sub
in
ret
jp
sbb
fwait
shll
push
es
adc
mov
movsl
in
paddd
arpl
mov
jge
pop
mov
jne
xor
call
jo
dec
lods
jp
aad
push
jge
insb
loope
daa
mov
sbb
mov
in
sub
xchg
leave
rcrl
or
sub
cwtl
lock
xor
or
lcall
xor
or
loop
ds
xor
mov
loope
lds
push
mov
lods
cmp
shr
pop
jl
lds
sbb
addr16
lock
gs
cmp
cmpsl
data16
jno
js
ds
push
ret
popa
mov
dec
dec
or
inc
fs
and
mov
test
lods
pop
push
sub
imul
and
es
sti
mov
sub
adc
jbe
mov
mov
xchg
jo
mov
add
dec
movsb
idivl
cmc
xor
das
out
sbb
xor
pop
pop
lods
pop
lcall
leave
xlat
mov
jns
xchg
cmc
push
xchg
or
es
push
cmp
sarl
xchg
aam
jmp
rorb
push
fldenv
inc
rorb
jecxz
iret
jge
cmp
ret
inc
push
jle
mov
or
in
lock
clc
leave
popa
push
inc
loope
repz
sar
cmp
jne
lret
mov
sbb
pop
std
in
into
icebp
add
in
sub
das
or
clc
mov
stos
lock
mov
pusha
out
int3
pop
imul
loop
add
sub
xor
subl
adc
cmpsb
insb
add
sbbb
dec
movsb
xor
aam
icebp
sub
xchg
lds
adc
mov
xchg
notb
sub
adc
inc
test
in
lock
test
jae
cmp
out
movsb
mov
pushf
mov
mov
cmp
jp
cmp
sahf
inc
lret
push
jns
inc
test
cwtl
jno
popf
out
xchg
jl
je,pt
loope
lret
push
in
dec
repz
xor
cmc
inc
push
mov
adc
aas
jge
subb
add
push
les
je
adcb
subb
pop
adcl
aam
test
mov
dec
jne
dec
lcall
sub
iret
pushf
sub
es
cmpsl
daa
mov
icebp
pop
shr
and
in
outsb
mov
test
sbb
sbb
lea
jle
cmp
cmp
ficoml
hlt
clc
push
cmp
mov
aaa
cli
mov
mov
mov
push
mov
add
push
lahf
mov
adc
inc
xor
enter
jge
sub
addr16
jo
pushf
inc
add
cwtl
stc
cmc
jmp
ret
enter
adc
push
repz
arpl
cmpsb
in
idivl
rorb
stc
imul
mov
sub
cmp
xchg
jmp
xchg
xor
jmp
jns
jmp
sub
xor
adc
xchg
pusha
test
enter
mov
add
stc
mov
cltd
dec
dec
movsb
sub
je
mov
popa
data16
xchg
cmp
es
sub
xchg
aaa
push
jle
mov
shlb
scas
mov
inc
mov
lret
sti
adc
mov
cmpsb
jne
mov
sub
pop
ds
and
aam
xlat
shl
fstpt
inc
das
fisttps
jb
cmp
aas
cmpsb
xor
dec
hlt
push
sub
add
inc
xor
inc
and
mov
js
insb
outsb
sub
dec
lods
mov
mov
xchg
or
cmc
sbb
jnp
lret
xorl
pusha
cwtl
stos
insb
ds
fdivrl
in
push
mov
lods
fldl
pop
insl
icebp
loop
sub
xchg
mov
sub
mov
sub
xor
stc
lret
and
and
adc
sub
and
adc
cli
lods
dec
adc
xor
cmpsb
lret
xchg
push
lea
pop
stos
inc
in
sbb
pusha
mov
mov
jmp
jne
push
inc
icebp
adc
insb
orb
mov
xchg
or
cli
lds
sub
stc
fstl
aas
aas
out
pop
cmp
sub
ret
mov
xchg
repnz
mov
sbb
jge
and
lret
pop
cmp
push
or
cmpl
fs
and
adc
pop
xor
inc
jge
and
jnp
xchg
and
js
mov
test
daa
cli
into
daa
test
loope
jne
dec
or
and
pop
pop
cld
scas
loope
cmp
mov
fiaddl
hlt
jmp
aad
cmp
mov
mov
cmpsl
or
push
mov
ss
dec
jecxz
xor
jo
sbb
in
outsb
int3
lret
cld
cmp
orb
xor
push
or
movsb
and
pop
lret
aad
jecxz
push
iret
loopne
xor
xlat
testl
movsl
mov
mov
lods
imul
mov
sub
es
pop
fidivrs
ljmp
push
mov
sub
xor
jle
xor
xlat
jae
stos
sub
or
aaa
sub
xor
dec
sahf
mov
icebp
leave
cwtl
pop
addr16
cmc
or
nop
or
adc
add
xor
ss
jno
enter
pop
mov
mov
inc
idivb
sbb
jo
insb
mov
dec
subl
cmpsb
clc
jmp
faddl
sbb
sbb
inc
push
adc
aas
test
pop
cmpsl
adc
xchg
call
mov
mov
pop
fldcw
enter
lods
in
add
jo
add
or
cmp
xor
cmpsl
or
bound
sub
xor
aad
test
insb
sub
jo
mov
or
mov
inc
subl
push
xor
push
enter
in
into
lds
cmp
push
adc
das
outsb
mov
mov
mov
cmp
mov
mov
jnp
xchg
mov
pop
shlb
xchg
ret
mov
incb
mov
add
in
out
inc
loope
mov
pop
fld1
inc
or
sbb
pop
lret
ss
xchg
and
xor
call
sub
sbb
jns
push
pushf
adc
pop
jb
cwtl
or
mov
inc
sbb
loop
cltd
movsb
pop
loop
mov
jecxz
mov
dec
dec
jl
jmp
stc
enter
sbbb
xchg
dec
movsb
add
repz
cmp
mov
jmp
mov
cwtl
pop
and
subl
cmp
push
push
dec
sub
neg
hlt
mov
inc
mov
lock
dec
outsb
mov
cmpl
add
das
dec
and
outsb
sbb
gs
xchg
inc
jge
das
pop
imul
lods
jecxz
adc
inc
jecxz
cmc
push
pop
repnz
cmp
stc
shll
ja
mov
test
js
in
and
xchg
mov
push
mov
cli
or
shll
sarl
cmpsb
rcl
daa
xchg
ret
mov
pusha
ret
jns
xorl
inc
scas
jbe
dec
aaa
jne
int3
inc
jbe
sbb
pop
les
push
mov
sbb
sub
cmp
sbb
sub
adc
sub
sub
rcll
shrb
in
rolb
mov
jb
ret
subl
js
add
mov
jns,pt
xlat
pop
mov
mov
mov
fistpll
imul
xchg
or
ds
lods
lcall
pop
push
cmp
cwtl
sahf
fidivrl
lret
lret
inc
mov
xchg
pop
xor
outsl
sbb
sbbb
xor
push
jb
adc
aam
xor
xchg
aad
inc
pop
lock
cli
sbb
mov
leave
jmp
xor
mov
fsubl
push
push
or
nop
mov
movsb
cltd
sub
aam
mov
add
lods
imulb
loop
shlb
mov
jbe
cmpsb
cmpsl
lret
sbb
daa
ljmp
xor
mov
xor
mov
jmp
cmp
arpl
jmp
push
xor
pusha
xchg
mov
lcall
push
adc
sbb
push
adc
dec
xchg
xchg
xor
and
pop
fsubr
xlat
aaa
les
repz
fidivrs
and
xchg
sti
pop
sbb
out
mov
popa
or
xchg
hlt
xor
addr16
xchg
ss
fadd
mov
xor
pop
jle
cmp
ds
ret
xchg
fisubs
cmpsb
sti
adc
mov
loop
into
mov
lcall
rorb
inc
jp
rcl
push
mov
mov
enter
push
test
pushw
mov
mov
movsl
mov
addb
pushf
or
pop
xchg
fimull
inc
sub
dec
adc
xchg
jae
fcoms
test
loope
movsb
cmpb
mov
xchg
insl
inc
adc
mov
imul
mov
jmp
leave
adc
rcrb
xchg
aad
pushf
shrl
and
frstor
mov
cmp
pusha
les
shlb
sub
mov
xchg
pop
sbb
popf
xchg
pushf
pusha
mov
shrb
push
jl
ret
sub
jge
add
jns
test
lcall
leave
nop
ds
fadds
jno
cmp
clc
cmp
adc
sub
add
fdivrs
xchg
xchg
jl
daa
cmpsb
mov
ja
mov
push
mov
adc
mov
ffree
fstpl
std
cmp
aad
dec
dec
push
xchg
insb
js
and
sub
xlat
xor
push
and
movsl
push
xlat
cmp
xchg
loopne
pop
jne
adc
hlt
orb
test
pop
loope
and
push
xchg
out
ss
inc
pop
aaa
xor
stos
dec
jp
shll
sbbb
imul
sub
jmp
arpl
jb
sub
xor
in
insl
xor
loopne
inc
lcall
in
sbb
int3
leave
pop
cmp
dec
or
clc
and
xlat
cmpsl
les
sbb
testb
adcb
mov
lock
cmp
cmc
subl
xor
imul
cmp
out
mov
sbb
lods
cwtl
popf
xor
out
fcomps
fsubs
pop
adc
adc
and
test
jmp
or
scas
xchg
mov
cld
ljmp
ret
scas
mov
adc
mov
inc
aas
ret
jge
arpl
sub
mov
jecxz
jbe
cmc
faddl
cli
xchg
lret
pusha
dec
sbb
or
jle
test
lea
int3
or
xorl
stc
pop
out
cld
mov
pop
addr16
push
lea
repnz
cmc
jae
and
cltd
insb
adc
lds
push
test
sbb
lds
arpl
test
add
mov
xor
dec
and
xchg
mov
mov
xchg
ficoml
mov
xchg
arpl
jnp
stos
jns
push
test
add
push
cmpsb
pop
mov
lret
lock
mov
adc
and
addb
cmp
adc
imul
pop
pop
inc
inc
mov
jno
adc
mov
mov
dec
xchg
bound
jecxz
ret
push
cwtl
fwait
and
ds
dec
movsl
cwtl
dec
or
into
push
add
mov
cwtl
lock
jo
or
sbb
and
sarl
rolb
leave
cli
shrb
adc
pop
jle
in
mov
adc
xchg
pop
call
xor
pop
mov
and
fidivrl
mov
sbb
xor
jns
pushf
mov
ljmp
nop
mov
faddl
pusha
imul
adc
test
cs
xor
je
pop
in
imul
addr16
ds
or
push
rorb
push
pop
ja
mov
xor
ds
mov
pop
mov
xchg
cmpsb
or
xchg
cmpsb
daa
out
mov
xor
rcpps
mov
out
cmp
rol
pop
adc
dec
push
and
out
mov
cmp
adc
adc
jb
inc
aas
call
push
rclb
mov
sahf
adc
outsl
clc
out
mov
in
xor
ficomps
rorl
stos
inc
pop
mov
in
dec
cld
xor
inc
sub
dec
mov
mov
xchg
add
pop
mov
rcl
or
sub
cmp
leave
mov
jae
pop
hlt
adc
lcall
push
or
lret
mov
sbb
push
push
sub
in
cmp
mov
push
je
hlt
adc
push
cmp
data16
cmp
sub
sarb
sbb
testb
es
ret
push
ljmp
aad
dec
sbb
push
insl
into
cmp
or
ljmp
mov
dec
in
pusha
push
imul
insl
int
es
xchg
adcl
bound
mul
in
les
xchg
adc
dec
sbb
mov
pusha
inc
pop
pop
sbb
and
test
xchg
jbe
sbb
rolb
dec
call
pusha
and
push
or
or
xchg
movsl
mov
ss
js
inc
loop
xor
daa
xor
sub
clc
repz
pop
push
push
adc
fucomp
add
mov
loope
aaa
xor
mov
mov
inc
push
aas
xor
inc
xor
sub
push
jno
jbe
repnz
adc
in
mov
rcrb
push
push
jle
scas
cltd
push
test
sbb
pop
add
mov
cli
es
fdivl
inc
mov
orl
pusha
andl
fdivs
sub
or
or
andl
push
icebp
int
mov
push
sbb
inc
fisttpl
xchg
jge
mov
mov
jno
outsb
pop
scas
mov
push
dec
testb
inc
shrb
mov
pop
sub
sarl
into
shrb
sbb
sub
jnp
ss
out
cmp
or
aaa
les
cs
push
lret
fstl
in
fiadds
sbb
pop
jns
add
lret
mov
xchg
mov
mov
jp
rorb
pop
or
movsl
pop
and
loope
add
lea
push
ficoml
add
movsl
daa
inc
jg
repnz
pop
stos
jo
outsl
lea
mov
lods
aad
shrl
sahf
push
mov
in
pop
out
stc
imul
roll
adc
mov
fdivs
notl
mov
lcall
adc
je
mov
inc
jns
ret
fistps
fistpl
dec
daa
sub
fimull
mov
dec
pop
je
imul
stos
gs
xor
pop
and
cli
mov
lret
pushf
or
fwait
pop
push
jo
fnsave
lods
popa
mov
inc
jmp
aas
lock
pushf
xchg
push
push
xlat
cltd
lds
jle
filds
pop
int
nop
ds
outsl
sbb
nop
mov
out
out
js
test
or
sbb
xchg
cmp
stos
adc
jmp
lret
push
aam
popa
adc
adc
adc
fldl
xchg
xchg
aam
lahf
popa
inc
fcomi
mov
bound
rcrb
loopne
pop
push
fisubs
and
push
sbb
mov
je
mul
or
xor
pop
mov
xchg
add
cmp
mov
push
xchg
outsb
push
ss
inc
fs
sbb
daa
in
or
in
scas
incb
xchg
add
mulb
pop
cmc
loope
pushf
sub
sti
inc
push
addb
and
mov
mov
scas
adc
sti
cmpsb
pop
sub
and
out
pop
or
cmp
sarl
adc
add
mov
sti
popf
inc
mov
fisubs
imul
inc
or
or
mov
cld
ja
adcb
push
int3
loop
movsl
inc
mov
pop
daa
test
sbb
push
imul
dec
leave
push
cltd
into
mov
lods
repnz
js
or
fs
pop
fistpl
mov
lock
or
fiadds
dec
fsincos
jns
das
dec
push
imul
inc
pop
ljmp
mov
roll
testl
fistps
jne
sbb
flds
and
sub
fstps
pusha
dec
jecxz
pop
int3
pop
je
andl
loopne
sub
call
cmp
sbb
lods
adc
js
jnp
arpl
cmp
push
lods
mov
leave
pop
ss
out
scas
aad
lret
sbb
lds
add
or
jnp
cmp
adc
scas
dec
adc
inc
cmp
sbbl
std
aad
xchg
push
mov
push
pop
fimull
xor
cmp
out
xchg
push
ret
js
or
cld
mov
and
dec
out
js
hlt
adc
mov
sbb
cmp
test
das
mov
mov
or
push
xor
xor
ja
pshufw
cmc
xchg
les
push
add
push
push
inc
insl
orb
xchg
jbe
mov
mov
inc
cmp
insb
ficoms
lea
pusha
mov
inc
fnsave
hlt
out
adc
adc
test
loop
in
cltd
shll
inc
repz
ja
out
and
aad
lods
repnz
in
lcall
fwait
xchg
mov
sahf
cltd
xor
jns
lods
fisttpll
dec
and
scas
fildl
stos
jg
lahf
iret
aam
cli
scas
pop
add
xorb
into
cmp
jecxz
adc
inc
mov
mov
sub
push
dec
sbb
or
adc
jmp
lods
mov
dec
dec
push
aas
gs
cmp
cltd
sbb
cmc
add
nop
dec
dec
insl
shrl
test
inc
jne
adc
addr16
andb
jb
cmp
cmp
out
xor
pop
cmp
mov
xchg
in
mov
mov
fdivrl
pop
dec
inc
adc
test
out
dec
jmp
cli
orb
rcl
mov
lea
inc
pop
xor
mov
loope
jecxz
dec
sbb
mov
xchg
mov
and
inc
cmpsl
mov
jb
pop
aad
mov
mov
addb
cmpsl
mov
lods
dec
addr16
ljmp
loope
or
pop
push
addl
movlps
lret
xchg
xchg
xor
into
pop
add
push
mov
xlat
repz
stos
stc
rcrl
adc
push
mov
lcall
dec
setno
adc
repnz
pop
loopne
push
dec
push
std
out
push
aam
xor
movsb
or
in
sbb
adc
ljmp
mov
cmpsl
ja
fimuls
xor
std
adc
mov
and
icebp
shlb
inc
mov
push
insb
xor
push
mov
xchg
inc
aaa
xchg
xchg
nop
test
scas
xor
in
data16
ret
sbb
fisubrl
xchg
pop
xchg
or
aam
xor
std
push
adc
sub
push
sti
push
lahf
xchg
mov
leave
divl
jg
inc
adc
inc
sub
pop
push
fs
push
inc
scas
shll
repz
adc
in
loop
pop
add
adc
movsb
sub
arpl
shll
sbb
add
cld
sti
test
jno
add
popa
and
sarb
sbb
fmul
test
adc
repz
jp
mov
out
mov
or
xchg
popa
out
sbb
movsb
dec
mov
outsl
mov
pop
lds
jnp
into
fistl
test
int3
push
sub
lahf
movsl
ficoms
outsl
int
mov
jecxz
push
pusha
pusha
add
jp
leave
cmc
insl
fs
in
add
or
pop
inc
xchg
scas
pop
dec
pop
subl
xor
jg
insb
leave
loopne
sarb
std
mov
scas
shll
test
dec
dec
pusha
and
js
xor
jnp
dec
js
popf
xchg
icebp
out
xchg
nop
xor
fdivp
xchg
pop
movsl
inc
cmp
add
pusha
lock
cmp
pop
mov
je
sub
fdivrs
pop
test
jg
in
scas
sub
inc
xchg
mov
sahf
add
sbb
xchg
xor
loop
mov
push
lods
imul
pop
mov
lods
adc
and
jg
jno
inc
daa
mov
xchg
pop
jp
adc
lds
fsubr
xor
jbe
and
das
adc
xchg
test
repz
cld
mov
out
stos
imul
cmp
cmp
fbstp
xchg
cmpsb
pop
dec
xor
xchg
pop
subb
sbb
call
dec
loop
adcl
xor
test
mov
pop
inc
lret
outsl
inc
test
cmp
fwait
dec
ljmp
decb
xchg
adc
dec
les
lods
iret
pop
test
imul
lahf
or
fstps
lock
fimuls
or
in
lret
arpl
fstp
repnz
inc
ss
aas
fs
and
lods
pusha
nop
int3
loop
cli
add
dec
push
sbb
scas
and
int
cmp
or
movl
cmp
dec
pop
popf
inc
xchg
popf
cmc
mov
fcmovne
movsl
fdivr
stc
loope
rorl
pop
push
xchg
jns
mov
inc
shll
jo
andb
push
sub
dec
sbb
push
xor
and
cmp
test
aam
sbb
adc
push
loop
into
les
mov
add
pushf
icebp
pop
int
lahf
popa
cmp
inc
mov
mov
push
cmp
jbe
inc
lret
insl
sti
xchg
imul
insb
jg
bound
pushf
ds
push
jl
dec
jmp
arpl
dec
adc
sub
jbe
mov
pop
sbb
dec
add
mov
addr16
adc
adc
sub
fstpl
cwtl
mov
add
mov
xor
cmp
jb
mov
lret
ret
scas
cmp
bound
insb
mov
mov
movsb
push
cmp
push
sahf
xchg
arpl
pop
jo
xchg
mov
testl
push
lock
adc
bound
aaa
add
mov
arpl
jb
mov
sub
pop
shrb
jecxz
clc
js
rcrl
sbb
out
jno
aaa
push
pushf
jae
mov
sbb
insb
fdiv
push
adc
push
ja
je
in
or
fldenv
pop
inc
pop
int3
sahf
cwtl
xor
jp
inc
push
or
in
sub
lcall
js
test
mov
pop
push
pop
push
sarb
jno
add
popa
pop
outsl
or
jg
push
insb
adc
loope
jle
rolb
xchg
cmc
out
lahf
outsl
test
idivb
mov
pop
hlt
adc
cwtl
push
jmp
ret
push
out
xchg
push
cmp
inc
dec
lahf
clc
testl
sub
daa
mov
jle
xor
cwtl
test
cwtl
outsl
xchg
and
mov
ljmp
loope
lret
jp
jmp
das
outsl
test
mov
jo
add
add
or
mov
aaa
loop
popf
mov
imul
or
das
add
mov
loopne
jecxz
ficomps
hlt
cmp
xchg
dec
jnp
jns
mov
mov
in
mov
fldcw
iret
loop
shrl
fdivs
push
cmp
push
cmp
sbb
outsl
or
stos
sub
mov
mov
add
fisttpll
rcr
mulb
jbe
push
inc
dec
std
out
cmpsb
mov
loop
ja
mov
dec
jno,pt
jbe
push
jnp
mov
call
jb
mov
mov
adc
dec
push
popa
jp
lock
xchg
icebp
jbe
out
cmp
idivl
and
out
adc
lock
shll
adc
rdpmc
or
sub
mov
or
ja
mov
call
int3
jecxz
loop
ret
int
call
add
mov
fidivrl
sbbb
incl
xchg
loop
jp
fs
xchg
inc
mov
mov
sub
dec
adc
nop
xor
cmp
mov
xchg
lcall
fldt
rcrb
js
fxch
add
and
sahf
aam
sahf
sub
pslld
dec
insb
mov
je
mov
add
orl
pop
fdiv
sub
jp
sub
sahf
lahf
test
and
mov
jno
aam
add
repz
in
mov
jle
nop
test
shl
sbb
jecxz
xor
pop
leave
push
test
lock
rcrb
or
lods
sbb
mov
jp
mov
sbb
loopne
stos
mov
stos
add
jmp
mov
or
push
jp
sarb
ss
in
mov
outsb
gs
test
mov
out
cmpl
aaa
push
jns,pn
pop
dec
js
push
gs
hlt
outsb
mov
mov
inc
lret
data16
repz
lcall
mov
faddl
mov
mov
cld
test
test
mov
iret
fnsave
mov
mov
movsl
movl
cmp
cmc
mov
insl
rcll
into
add
ljmp
sbbb
jle
ret
push
or
and
jmp
aaa
sub
mov
in
xchg
push
xchg
xchg
sub
mov
pop
mov
iret
inc
pop
ds
xabort
fildll
cwtl
jae
mov
lods
sub
rorb
or
dec
movsl
lods
cltd
sub
fcomip
lds
adc
push
loope
jnp
out
sub
mulb
sub
js
xchg
xor
mov
xchg
push
dec
inc
fistps
insl
push
call
push
sbb
and
repz
push
cmp
daa
ret
push
pusha
loop
xchg
cmp
mov
cli
cld
lret
lds
mov
loope
lret
leave
rorl
int
es
gs
rcl
adc
stos
jne
fbld
loope
lahf
pushf
push
sbb
imul
cld
cmc
xchg
adc
dec
popf
gs
push
sti
repnz
or
mov
xor
mov
and
sti
stos
in
leave
movb
push
loop
in
inc
add
push
mov
adc
addr16
enter
and
movsb
ffreep
push
int
jl
xor
ljmp
jge
jge
jle
pushl
mov
dec
js
int3
pop
fwait
rcll
mov
sbb
or
xchg
inc
fildll
dec
iret
in
out
xor
test
pop
popf
xor
and
dec
push
and
aaa
inc
xchg
shrb
jg
sub
push
dec
sub
inc
jbe
lcall
outsl
pop
call
jle
inc
and
shlb
into
and
jmp
sti
mov
mov
jno
add
mov
jne
repnz
mov
enter
or
jnp
out
xchg
shr
fistl
mov
sub
mov
in
decl
dec
lea
stos
sbb
push
sbb
test
out
xchg
cmp
push
cmp
adcl
sbb
push
divl
test
mov
pop
cmp
adc
mov
dec
cli
in
ljmp
xchg
fisubrl
stc
stos
mov
pop
scas
push
xchg
mov
mov
cmpsb
pop
mov
push
int3
cwtl
movsl
mov
mov
push
iret
xchg
jns
je
ss
inc
scas
add
mov
lds
dec
inc
sti
inc
out
mov
jo
xchg
pop
cmpsl
and
mov
mov
inc
mov
push
fmul
push
idivb
fbld
stos
rcrb
in
push
stos
and
fcom
push
cld
scas
add
fwait
fwait
cmpsb
inc
push
or
mov
imul
orl
test
jmp
pop
xchg
mov
test
nop
stc
push
fwait
cs
idivl
in
add
cmp
mov
orb
cmp
jp
jge
das
pusha
mov
xor
add
call
scas
cltd
lcall
mov
pop
call
dec
pop
ljmp
dec
nop
cmp
int
jmp
jb
mov
fisttps
jno
add
sub
int
sub
dec
gs
lock
jne
mov
cmp
xchg
sub
or
lret
xchg
arpl
push
cmpsl
es
mov
in
xchg
paddusb
mov
xor
lcall
lahf
inc
xor
jl
pop
xchg
dec
fwait
push
push
or
int3
or
in
inc
out
nop
repz
mov
lret
sub
mov
pop
mov
int
and
jecxz
aaa
out
ljmp
dec
out
loop,pn
jno
inc
xor
cmp
xor
cmp
or
cmp
pop
sbb
jg
push
jb
das
sarl
js
push
lock
push
aas
sbb
dec
icebp
xor
fwait
sar
aam
and
or
cltd
jo
push
pop
or
xor
xlat
push
push
pop
jbe
std
add
mov
sbb
xchg
aaa
sahf
setp
test
pushf
mov
ljmp
fldcw
jo
int
push
jo
shl
mov
xor
rorl
cmpsb
lret
mov
pop
or
add
sti
dec
mov
cmpsl
jp
xor
iret
jp
push
dec
fsts
adc
pop
dec
lock
lret
popf
cli
xchg
push
aam
dec
lds
cld
or
pop
adc
xchg
movsl
and
mov
jge
and
add
nop
ret
inc
sti
or
cmp
stos
psubd
iret
sub
bound
loop
stos
cmp
fdivs
ljmp
pushf
or
jg
xchg
cmp
push
jl
xor
ljmp
sub
popf
je
enter
test
cmpsb
or
fidivs
gs
movsb
popf
loope
pop
and
jmp
push
mov
mov
sti
push
scas
bound
into
jecxz
ds
cmc
xor
in
add
das
or
cmc
adc
dec
cmp
cmp
ss
movsl
push
adc
add
call
mov
jb
ret
mov
ljmp
mov
sbb
mov
xor
jmp
cmp
pushf
push
jne
mov
pop
or
ss
or
inc
movsb
loope
sbb
mov
daa
add
movsl
add
mov
call
dec
sub
add
push
icebp
cli
pushf
sbb
ja
sahf
leave
rclb
dec
cmp
arpl
xlat
lods
not
and
pop
mov
ja
jl
adc
pop
sbb
and
xchg
xlat
add
or
pop
andb
jnp
cmpsl
or
pop
inc
add
push
andl
xchg
std
outsl
mov
popa
in
xchg
pop
in
stc
pop
int
xchg
and
cmp
hlt
or
pop
xchg
lods
int3
out
fwait
mov
xchg
cltd
sub
ds
ss
rcrb
outsb
dec
mov
xchg
mov
imul
cmp
popf
nop
xor
stos
or
fdivrl
mov
mov
adc
test
or
mov
sub
lods
cmp
mov
mov
cmp
rorl
lret
aas
jp
mov
sti
pusha
inc
lea
jmp
dec
popa
xchg
and
jp
mov
or
out
std
sti
jb
pop
and
testl
inc
cld
cld
rcrl
lret
pop
jbe
lds
negl
mov
stos
es
mov
loopne
fstpl
test
sub
daa
repz
fiaddl
and
mov
nop
mov
cwtl
hlt
rcll
nop
int3
imul
add
mov
shrb
stos
lods
divl
pop
sbb
push
xor
out
test
and
push
cmpsl
in
mov
sbb
mov
inc
or
rolb
dec
adcb
and
in
push
repnz
fldt
sub
xlat
pop
dec
mov
je
jb
test
and
mov
xchg
push
fstps
incb
dec
mov
sub
ret
sbb
loop
scas
jmp
jno
or
mov
mov
pop
dec
dec
aas
push
bound
fwait
imul
dec
mov
mov
jge
inc
cmp
imul
push
adc
xchg
mov
fnstcw
sbbl
fcmove
mov
enter
flds
xchg
bound
push
pop
decl
insl
ret
mov
xchg
inc
divb
cmp
inc
orb
into
iret
loopne
xor
outsl
adc
je
sti
push
sahf
xchg
sub
xchg
push
dec
jmp
inc
mov
dec
xchg
inc
stos
lahf
lock
mov
xor
cltd
imul
push
cmp
dec
pusha
leave
mov
fcompl
sub
jmp
cs
mov
call
mov
or
mov
pusha
pop
or
or
repnz
les
subb
mov
or
mov
sub
divb
xchg
aaa
cli
inc
mov
cmp
repnz
jb
jbe
mov
fwait
mulb
or
add
cmp
cmp
aam
ret
pop
outsl
xchg
push
mov
mov
mov
movsl
test
das
sbb
ficoml
mov
mov
mov
addr16
loop
gs
addr16
lods
pop
and
hlt
mov
out
cld
xchg
xchg
cmp
and
cmp
cld
ja
in
int3
xchg
xor
xchg
dec
dec
sub
stc
les
fimuls
scas
es
xor
shl
jb,pn
mov
mov
mov
imul
arpl
mov
lods
dec
cs
jl
sbb
cld
sbb
xchg
addr16
xchg
mov
xor
push
mov
nop
mov
out
jbe
lahf
mov
pop
lea
pop
cmp
inc
mov
xchg
fildll
jnp
mov
loopne
and
rolb
fstl
cltd
xor
lcall
divl
or
or
jbe
sbb
aas
xlat
js
std
or
imul
xchg
imul
push
xchg
pop
mov
mov
pminub
pushf
and
xchg
das
movsb
out
test
or
out
inc
adc
aaa
or
insl
mov
push
mov
gs
test
fimuls
jb
push
sbb
sbb
scas
xor
imul
into
imul
test
adcb
mov
inc
lahf
pop
push
ret
xchg
adc
lods
es
inc
push
xchg
ficomps
lock
xor
ss
icebp
aad
xchg
nop
pusha
test
in
divb
icebp
jo
outsl
scas
pop
cmp
mov
cmp
add
divb
and
stos
mov
cmp
adc
mov
fnstenv
int
adc
push
andb
shlb
leave
adc
mov
sbb
add
dec
mov
pop
jns
pop
mov
in
add
sub
das
sti
or
mov
adc
xchg
jb
es
jne
movsl
adc
out
repnz
pop
inc
stc
mov
sbb
inc
sub
pop
push
fstps
jecxz
daa
sub
das
push
iret
sbb
sahf
jne
call
xchg
faddp
or
jbe
in
push
nop
std
rcll
jmp
jp
mov
lret
jmp
xchg
popl
sbb
cltd
fisubs
cmp
imul
xchg
cmp
inc
cmc
pop
aad
mov
jae
arpl
cli
lods
nop
mov
sahf
dec
das
jmp
xlat
cmpsl
push
push
mov
dec
mov
push
xor
push
lret
dec
xchg
add
shll
mov
leave
cltd
inc
insb
jecxz
sbb
enter
aam
out
push
push
push
sub
or
ds
cmpsb
push
fmulp
aas
lahf
jb
add
and
xchg
xor
scas
stc
dec
stos
not
dec
ljmp
push
repz
mov
sub
pop
fsubs
mov
sbb
and
inc
ds
call
fisttpl
aas
sbb
test
or
xchg
xor
int
out
fstpt
add
fbstp
xchg
mov
rcrb
xchg
sahf
fstpt
add
out
or
mov
mov
xchg
xchg
jp
pop
jae
sbb
movsl
dec
gs
sbb
sahf
fdivs
adc
lcall
lahf
jbe
sbb
add
notb
mov
lods
scas
inc
xchg
mov
push
js
repnz
sbb
cmp
inc
sbb
push
jno
mov
subl
imul
scas
addl
lret
xchg
insb
orl
loop
std
xchg
shr
mov
and
push
pop
dec
xor
pushf
xor
xchg
mov
adc
lcall
imul
leave
pop
xchg
mov
cwtl
xor
iret
add
sub
dec
test
scas
xchg
or
xor
xor
lea
xchg
pushf
dec
adcb
and
cmp
aas
repnz
lcall
xlat
xchg
dec
lahf
add
notb
cmp
add
incl
fstp
call
sub
cwtl
test
iret
xchg
sub
jg
dec
aam
mov
loopne
stos
xor
incl
pusha
pop
sub
std
add
mov
xchg
cwtl
ds
cmp
jmp
inc
or
in
shrb
sbb
loopne
inc
sub
push
mov
pusha
xchg
test
lret
lods
bound
mov
add
jecxz
or
dec
jbe
and
jbe,pn
insl
pop
pop
dec
jne
pop
lds
mov
xor
cmp
sbb
fcoms
clc
leave
jns
push
nop
push
mov
mov
das
and
adc
pop
push
test
subb
cmc
pop
roll
mov
ja
shl
aam
sbb
in
pop
add
nop
call
or
popf
jmp
stc
push
mov
nop
mov
pop
inc
aaa
not
mov
fcoml
cmp
dec
divl
jecxz
ss
lret
in
shlb
xchg
inc
imul
jbe
mov
popa
push
fsubrs
jno
push
jae
fwait
pop
loopne
jnp
iret
mov
mov
sbb
adc
sub
in
pop
sbb
sub
inc
dec
shrb
mov
jmp
and
aam
lea
inc
subl
cwtl
out
iret
sbb
jno
mov
cmp
add
push
cmp
fs
filds
cmc
or
pop
adc
xchg
repz
fldt
lods
lret
mov
movsb
clc
mov
out
jns
ljmp
xorb
inc
xor
xchg
div
push
and
addb
sub
push
jecxz
adc
push
fiadds
push
outsb
push
sub
pop
movl
inc
xchg
mov
cld
mov
or
stos
jb
dec
push
push
xor
stc
jp
negb
or
pop
insb
and
std
and
jge
sub
test
jp
clc
dec
mov
pop
shr
xchg
mov
ret
cwtl
jle
pop
xchg
push
inc
push
push
lock
and
inc
adc
popa
xchg
xor
inc
icebp
sub
pop
and
scas
iret
sub
and
lods
ret
jmp
mov
inc
test
and
inc
repnz
and
gs
inc
jle
in
js
xchg
cwtl
sbb
cmp
xchg
mov
pop
jg
pop
mul
mov
and
insl
or
xor
adc
cmc
mov
jns
lea
xor
das
int3
xchg
adc
add
aaa
imul
mov
popa
jecxz
or
mov
jbe
jmp
mov
jl
mov
addr16
ja
xchg
pop
pusha
int
outsb
jb
mov
adc
loopne
pusha
les
lods
xor
loope
xchg
mov
movsb
ror
mov
mov
xlat
jns
xor
mov
bound
in
push
out
xchg
imul
mov
nop
push
fbstp
lahf
xchg
jp
add
xor
in
loope
fmull
in
adc
outsl
inc
sbb
adcb
enter
addb
adc
dec
sbb
bound
fiadds
fdivrs
jle
lcall
push
scas
out
fwait
mov
pusha
pop
call
push
mov
and
aas
mov
push
dec
dec
pop
shlb
jae
pushf
mov
jo
shrb
fnstcw
sub
ret
push
sti
inc
int3
xlat
jbe
lods
shlb
pop
aas
imul
out
jnp
inc
imul
push
das
lahf
mov
scas
xchg
xrelease
addb
push
inc
jmp
lcall
jge
or
jns
inc
or
xor
out
icebp
push
rorl
ficoml
sahf
mov
cmove
or
jmp
mov
cmp
leave
jecxz
mov
or
fcompl
or
pop
jle
in
sbb
repz
in
pop
insb
repnz
lds
xor
or
clc
lods
hlt
in
or
repnz
movsl
imul
sub
imul
test
dec
xchg
stos
xchg
fwait
daa
js
fsubrl
xchg
pop
push
mov
adc
push
loope
xchg
test
push
mov
js
ret
gs
test
jge
gs
push
scas
mov
js
and
das
rolb
cmp
push
mov
je
mov
jmp
xor
out
and
or
mov
mov
pop
inc
add
cmp
aam
sbb
push
pusha
stos
popa
loopne
push
pushf
lods
xchg
hlt
sti
inc
sahf
std
pop
scas
lcall
pop
test
cmp
ret
mov
push
pop
and
add
mov
inc
xor
cmpsl
add
sub
sbb
inc
pop
inc
mov
cmp
push
pop
out
arpl
icebp
imul
jecxz
insl
mov
jno
jb
pop
inc
jp
stos
or
push
sub
bound
xor
push
push
cmpb
cs
js
push
push
repz
addl
mov
and
jno
mov
pop
rclb
jl
call
ret
mov
jae
xchg
in
mov
sbb
jb
lods
dec
sbb
insb
pop
sbb
les
mov
pop
lds
dec
sbbb
aad
repnz
cs
mov
data16
mov
daa
cli
shlb
aad
cmc
out
mov
les
sub
push
sbb
lods
sub
mov
mov
daa
mov
arpl
div
int
mov
dec
es
sbb
mov
int
mov
sti
xchg
dec
sbb
clc
and
pushf
push
pop
in
cli
sbb
inc
ljmp
das
and
jne
aad
cmp
in
repz
gs
or
jmp
orl
push
xor
fucomp
jmp
pop
cs
lret
pop
mov
xchg
negl
mov
mov
sub
ret
add
pop
and
sahf
push
int3
adc
arpl
je
mov
cwtl
push
imulb
rcrl
orl
push
inc
mull
repnz
mov
cmp
sub
in
lret
mov
sahf
mov
ja
dec
fcom
scas
mov
fidivrl
flds
sbbb
popf
ja
lock
aas
sti
outsl
in
cli
lds
inc
lcall
roll
shr
inc
fsubl
loope
scas
mov
outsl
repz
cltd
inc
out
or
mov
test
lcall
push
xchg
xor
mov
adc
or
xchg
loopne
jbe
rcll
mov
ret
push
cmp
mov
push
outsb
in
sbb
rolb
cld
dec
push
stos
and
lahf
jns
xor
xchg
out
cwtl
rorb
hlt
xchg
sbb
lcall
mov
movzbl
push
mov
pusha
pop
mov
jp
jno
jl
das
imul
stc
inc
cmpsl
add
jmp
xchg
xchg
shrb
mulb
push
adc
shlb
mov
add
mov
pop
mov
stc
adc
sarb
mov
je
int
rclb
xor
and
mov
fstpt
jo
adc
sub
in
mov
pop
cwtl
clc
xchg
pop
pop
aaa
cmp
mov
jg
pop
loopne
add
test
inc
adc
sbb
adc
loop
adc
into
in
fstps
jcxz
and
iret
out
xor
or
and
dec
mov
jnp
lods
mov
pop
jnp
mov
cmp
lods
mov
adc
and
mov
addr16
mov
fmull
daa
jle
out
sub
mov
lahf
xor
lea
popa
sti
sbb
cmp
cmpsb
sbb
es
sbb
imul
mov
add
int
push
inc
xchg
push
mov
inc
xor
stos
popa
or
mov
and
dec
rcr
movsl
lcall
add
adc
mov
test
imul
pop
mov
ficompl
jnp
pop
adc
xchg
div
jns
sbb
pop
jge
lods
mov
pusha
xchg
cmovae
cltd
jne
mov
push
inc
addr16
inc
sub
add
daa
sbb
mov
loopne
jbe
imul
aam
rcl
lods
and
xchg
fwait
scas
sbb
mov
lret
inc
sahf
sub
jbe
sbb
loope
inc
or
rorb
pop
mull
xchg
add
add
cmovns
popf
dec
lahf
mov
add
mov
xor
and
cmc
or
pusha
scas
cli
inc
in
mov
dec
xlat
pop
xor
fcomip
ret
iret
sub
cmp
and
adc
sub
adc
adc
adc
sbb
fidivrs
and
lods
push
fdivrl
sbb
bound
sbb
inc
adc
icebp
cmpsb
setae
mov
lret
adc
mov
jmp
xchg
xchg
testl
and
xchg
call
fistps
pop
cmp
pop
loope
ss
outsl
popa
jl
test
adc
dec
fisttpl
out
push
test
mov
jmp
insb
and
cltd
pop
adc
testb
jne
dec
jle
fcoml
test
test
cmp
addr16
add
imul
mov
sbb
lods
outsl
mov
push
xor
pop
dec
out
sar
shl
dec
outsb
mov
dec
adc
adc
out
adc
insb
sahf
adc
mov
mov
sti
pop
imul
cld
jno
repnz
dec
jp
and
dec
lods
jmp
fsubr
cmp
ret
jmp
push
xor
dec
imul
stos
or
mov
or
in
inc
fistpl
dec
fdivr
xchg
in
mov
mov
sbb
js
dec
test
ret
jns
or
cmp
dec
mov
push
pop
add
in
gs
sbb
pushaw
xor
mov
push
shr
out
scas
push
fcmovnu
mov
dec
dec
decl
repnz
cmpsl
addl
mov
xchg
mov
jg
fs
mov
outsl
pop
jae
and
pop
and
mov
jb
popf
push
push
mov
adc
testb
and
loopne
leave
scas
ss
xchg
pop
mov
push
inc
lods
shr
inc
mov
xor
ds
loope
movb
js
lea
pop
jle
scas
arpl
std
mov
xchg
mov
pop
cltd
jg
in
adc
fldcw
sbb
and
dec
dec
in
cld
test
inc
sub
int3
lods
mov
pop
sub
xor
test
loop
cmp
imulb
flds
aam
push
fiadds
loope
in
cld
xchg
mov
nop
scas
push
out
leave
fdivp
sub
mov
pop
cmpsb
stc
jecxz
xchg
or
mov
shll
fistpl
adcb
fbld
aad
push
mov
cmc
lahf
adc
cmp
pop
inc
push
jg
dec
mov
std
xor
cmp
andl
testl
xchg
inc
push
push
call
cld
nop
pop
pop
push
std
ja
ret
rolb
andb
dec
mov
jns
ja
fistpll
outsl
cltd
stc
pop
stos
out
loope
addr16
dec
ljmp
sbb
xchg
mov
cmpsl
sbb
or
aas
adc
out
fildl
lcall
ss
imul
out
leave
mov
jle
cmpsl
pop
adc
adc
bound
stos
jo
xchg
test
xchg
inc
js
push
in
add
push
in
je
addr16
inc
push
mov
ficomps
and
cmpsl
repnz
lods
push
out
test
testl
cmp
hlt
xchg
jle
arpl
in
mov
repnz
pop
mov
or
mov
shrl
pushf
fidivrl
pop
inc
jmp
fcomps
ficoml
xor
jmp
inc
mov
lahf
xlat
mov
test
adc
inc
hlt
stos
mov
clc
push
cmp
les
jb
movsb
sbb
xchg
cmp
pop
call
addr16
sbb
gs
lret
dec
sbb
jne
adc
xor
xchg
dec
xor
hlt
test
push
dec
jg
insl
sti
ja
imul
mov
test
mov
loope
mov
insl
jae
cltd
jbe
xchg
lahf
daa
dec
ss
pushf
dec
movd
dec
popa
loopne
pop
inc
mov
scas
mov
mov
mov
leave
dec
addr16
pop
mov
faddp
pop
sbb
inc
xor
sbb
jnp
sub
or
push
lret
dec
ja
add
xor
fdivp
xchg
test
ds
sub
cltd
ret
imul
mov
stos
shrb
xor
dec
xor
add
out
lock
mov
dec
mov
into
inc
adcb
inc
push
xchg
inc
sbb
jnp
lahf
repnz
lock
sub
out
mov
add
negl
insl
pop
insb
mov
imul
jmp
push
repz
ds
xlat
sbb
rclb
jb
cmpsb
push
repnz
test
and
je
imul
mov
sbb
pop
lock
or
ror
adc
mov
lea
inc
stos
ds
sahf
push
mov
pop
movsb
pushf
mov
sbb
adc
aad
xor
sbbb
sbb
xor
pop
xchg
xlat
rcll
jmp
xchg
push
andb
int3
mov
add
inc
sar
adc
popa
into
mov
shlb
repz
aaa
xor
push
and
and
shll
cwtl
inc
push
lret
jge
add
popw
cmpsb
int3
pop
or
sub
dec
repz
fsubr
out
lcall
addl
lock
mov
cmp
pusha
cmpl
xor
sahf
xlat
insb
movsl
mov
jne
sbb
std
scas
cmp
negb
mov
in
stos
cld
data16
movsb
dec
leave
ljmp
or
adc
inc
pop
ja
mov
in
xchg
movsb
popa
cmc
adc
inc
js
push
lds
sub
cld
into
sbb
pusha
arpl
test
mov
cs
cmp
xor
leave
lods
in
ds
pop
hlt
jo
jp
outsb
adc
jl
cltd
inc
push
sub
xchg
test
lahf
scas
pushf
pop
out
outsb
jmp
les
imul
fwait
mov
cmpb
xchg
lret
sbb
and
testl
sbb
xor
pop
adc
dec
cmp
sub
inc
push
arpl
inc
pop
jmp
cmp
stos
push
mov
sub
cmp
icebp
xor
lds
cltd
lcall
sbb
nop
dec
lahf
jne
adc
push
shlb
outsb
dec
push
add
mov
lock
mov
pop
add
cmp
int3
and
xchg
dec
mov
test
mov
adc
xchg
mov
mov
hlt
mov
in
lret
push
mov
adc
scas
in
lcall
adc
fsub
dec
cmp
pop
mov
adc
arpl
je
scas
jg
or
das
inc
icebp
out
test
jno
ret
xchg
jecxz
dec
dec
sub
fcmove
push
or
cmpsl
inc
sbb
mov
loope
out
push
push
in
cs
push
xor
jns
fidivrl
and
roll
sbb
sub
rcll
cli
xor
jecxz
pop
in
push
fcoml
rcr
jbe
sub
inc
incl
cmp
cmpsb
loopne
dec
cmp
jnp
out
cmp
into
pop
popa
jno
lret
enter
mov
arpl
pop
or
or
add
pusha
jl
mov
test
push
loope
mov
pop
rcrb
leave
idivl
sahf
inc
add
xchg
cwtl
int3
add
pop
out
cs
outsl
in
adc
mov
insb
cmpsb
sahf
aaa
scas
test
dec
jle
mov
arpl
jl
iret
or
addr16
push
mov
mov
hlt
insb
je
inc
gs
mov
dec
insl
out
pop
adc
les
loope
pop
std
pop
gs
lahf
sbb
shlb
lea
sti
test
call
test
mov
add
adc
lods
aam
ficomps
sbb
loop
mov
loope
push
addr16
xchg
in
stc
or
lret
rol
stos
adc
mov
cmp
dec
cmp
xchg
lods
jmp
push
pushf
cmpsb
ja
test
aas
je
push
movsb
inc
xchg
stos
push
xor
mov
mov
pop
sub
hlt
sti
push
xchg
add
sarb
sbb
in
xchg
gs
shlb
jge
xor
bound
mov
insb
mov
and
sbb
int3
iret
out
mov
xchg
fmul
bsf
xlat
jb
int
adc
out
mov
bound
push
out
popa
fcmove
imul
jmp
xchg
hlt
repnz
negl
pop
scas
jb
and
pop
cmp
adcb
stc
fsubrl
dec
clc
xor
scas
dec
jmp
jo
adc
xchg
fsubs
in
jmp
xchg
std
test
outsl
rcrb
mulb
jne
sbb
stos
insb
rcrl
push
cmp
test
mov
mov
fstl
icebp
mov
jmp
sub
and
imul
sub
or
mov
xchg
sub
test
cs
daa
test
movl
icebp
xchg
adc
pushf
sbb
xor
imul
add
mov
lods
xor
mov
inc
adcl
xchg
xchg
sti
loope
repnz
fists
cli
leave
mov
pop
fnstsw
mull
pop
push
int
inc
push
xchg
cmpsb
out
mov
leave
xchg
loopne,pt
jno
jbe
addr16
jecxz
out
cmp
dec
icebp
cmc
xchg
test
jne
arpl
int
loopne
addr16
dec
jno
gs
mov
cmpb
mov
pop
pop
movsb
xor
sub
rolb
dec
in
mov
lds
push
xchg
mov
lret
cld
push
add
dec
pop
mov
push
add
fcompl
out
and
xor
mov
add
imul
cmp
andb
push
movsl
push
or
cltd
mov
pop
fptan
into
sahf
mov
jl
lret
incb
jo
add
inc
add
rol
cmp
sub
cmp
mov
xchg
pushf
leave
cmp
roll
shl
or
in
test
xchg
lar
aam
jmp
lock
fs
lock
loopne
in
aad
xchg
xor
bound
in
cld
cli
js
jnp
lahf
jnp
ss
pop
ret
insb
lock
adc
outsl
int
jge
lcall
fwait
fstpt
daa
cltd
pop
in
xor
cmpb
cmp
push
xchg
push
out
xchg
and
fldcw
repz
mov
xlat
pushf
pusha
fs
addl
pushf
cltd
xchg
outsl
dec
mov
cmp
stos
xlat
mov
adc
lock
mov
and
ja
sbb
mov
fistpl
popf
jle
adc
cmp
adc
cmp
pop
shll
fists
push
testl
sbb
rep
ja
jnp
rorb
push
xchg
pop
inc
mov
cmc
cmp
bound
lds
dec
and
inc
inc
lea
not
ficomps
jae
ljmp
ja
sub
mov
and
andb
cltd
cli
imul
movsl
jl
stos
jb
mov
loope
dec
or
jne
lcall
lret
test
stos
pop
aaa
adc
icebp
jbe
push
jns
nop
arpl
in
pop
sub
sub
dec
pop
je
or
xchg
lea
mov
std
leave
cld
fwait
add
dec
jae
mov
dec
mov
cs
dec
cmp
pop
addb
fimull
add
pusha
int3
inc
outsl
adc
fdivrp
jo
cmp
aaa
daa
sub
add
mov
sti
jle
mov
test
xchg
clc
adc
notl
lds
data16
popf
ljmp
jno
stos
movsl
jae
fisubrl
dec
lods
roll
movsl
rcrl
std
or
hlt
into
pop
sbb
push
push
sub
fidivrs
out
repnz
and
mov
into
cmp
add
in
jo
add
aas
or
dec
or
mov
outsb
je
push
dec
movsb
pop
sub
mov
cmp
pop
insb
xchg
outsb
inc
mov
clc
lret
push
das
insb
adc
mov
lock
hlt
cs
fwait
xorb
lea
and
and
sub
pusha
jg
xchg
idiv
lds
xchg
sbb
movsl
jae
push
pop
addr16
iret
and
mov
iret
pop
inc
cld
pop
or
lods
mov
adc
rep
push
imul
or
cli
jge
or
sub
call
pushf
mov
dec
frstor
inc
std
test
mov
push
cs
insl
ret
push
or
lods
cmpsl
loop
adcb
enter
into
sub
aad
push
pop
jnp
dec
jge
pop
adc
push
sbb
adc
cld
pushf
cvtps2pd
sbb
addr16
insl
mov
push
push
cmp
iret
rclb
dec
inc
sub
mov
xchg
out
xchg
daa
cmp
subb
push
aad
adc
sbb
into
cmpsb
xor
xchg
rorl
dec
rolb
imul
lock
and
fisttps
int
and
mov
adcl
int
dec
inc
out
out
out
xchg
arpl
jb
cld
adc
jae
lahf
in
cli
test
and
and
xchg
xchg
dec
lret
orl
mov
dec
jmp
xor
es
jmp
xor
lods
lahf
or
es
call
outsl
xchg
xchg
mov
test
out
sbb
btc
xor
xor
imul
sti
mov
jle
iret
pop
xchg
call
mov
scas
jnp
inc
dec
adc
aam
cmc
inc
adc
pop
mov
jno
xchg
daa
lret
push
or
ud0
mov
and
pop
jbe
mov
mov
daa
rorb
or
icebp
jecxz
push
pop
or
mov
push
movsb
xor
mov
mov
xchg
xchg
loopne
ret
je
cs
pop
adc
gs
aas
mov
lahf
inc
lods
cs
jbe
fsubs
jp
notb
or
sbb
sub
shll
icebp
loop
push
mov
movsb
mov
jno
mov
add
adc
sti
insl
stc
test
sbb
and
dec
mov
dec
jnp
cmp
mov
dec
data16
pop
test
cmc
cmc
dec
sub
movsb
jmp
pop
scas
adc
pop
xor
test
lods
test
lret
test
dec
xchg
mov
dec
cmpsb
pop
xchg
dec
es
jo
cld
leave
subl
push
cld
loopne
shl
adc
imulb
mov
mov
loope
sub
iret
fs
jp
sahf
int
xchg
call
jecxz
ret
xor
sbb
mov
jb
cmp
addb
mov
push
cmpsb
dec
sarl
insl
push
pop
rcl
pop
mov
notb
sahf
sbb
sbb
pop
mov
push
adc
or
or
ds
sti
std
decl
push
lret
sbb
imul
dec
and
cmp
inc
test
mov
mov
fmul
hlt
mov
std
pusha
jmp
dec
inc
int
lcall
iret
xchg
xchg
mov
mov
movsl
cmp
lods
lret
xchg
scas
mov
pushf
std
jno
cwtl
cmp
das
mov
mov
sub
fbld
es
mov
or
inc
dec
fldt
xchg
out
ret
jle
jno
loopne
mov
rcrb
addr16
inc
in
test
gs
mov
mov
dec
test
daa
xchg
jl
pop
insb
cwtl
xchg
ret
sbb
or
mov
and
inc
cmpps
sbb
ss
add
popf
sbb
cmp
inc
int3
dec
ljmp
mov
nop
jnp
adcl
in
inc
test
fsubrp
addr16
bound
push
bound
cmpsb
enter
popf
loop
jbe
test
fucomi
xorl
loopne
shl
or
inc
jl
xchg
adc
out
jmp
cmpsl
inc
les
cmp
cmpsb
fwait
andb
inc
data16
in
movq
sbb
andl
and
push
loop
sbb
push
jne
jae
cmp
sarl
jo
or
test
js
lock
mov
bound
fldl
adcb
insb
xor
mov
out
add
pop
jae
lds
lahf
and
ss
mov
scas
fst
enter
xor
add
sti
mov
std
inc
inc
add
into
mulb
and
xchg
and
popl
loopne
out
pop
into
jg
pop
jecxz
dec
sub
adc
add
jbe
mov
test
and
es
shll
inc
mov
push
mov
imul
outsb
fdiv
pusha
imul
mov
xchg
xor
dec
rorb
test
sti
jae
mov
add
adc
mov
data16
jg
cltd
enter
lea
xor
pop
rorb
push
roll
lret
dec
jle
lock
adc
jae
test
cwtl
pop
mov
ja
ja
stc
dec
loopne
sub
xchg
xchg
jecxz
loopne
cmc
mov
lds
lret
pop
jnp
jl
clc
call
cmpsl
sbb
inc
mov
dec
int
jg
mov
mov
enter
insl
dec
je
sarb
add
add
add
call
inc
scas
enter
xor
decb
dec
pop
movsb
mov
xchg
nop
or
mov
mov
xchg
insl
bound
loop
fisttps
sti
mov
fcomp
cltd
pop
outsb
cmp
pop
jge
cwtl
cwtl
ret
push
test
xor
cmp
xchg
mov
pop
fstpl
or
mov
add
jbe
add
int
nop
roll
vmovhps
sub
jno
inc
test
xor
es
fwait
jne
js
mov
push
shlb
mov
cwtl
cmp
mov
xchg
pusha
movsb
xor
mov
mov
fbld
int3
cmpsl
cmpsl
adc
mov
scas
push
shlb
xchg
int
mov
or
mov
jbe
or
xchg
xor
mov
sarb
add
loopne
aaa
in
arpl
repnz
sbb
cmp
add
arpl
add
pop
xchg
cmp
mov
mov
fwait
push
out
jg
push
or
jo
cmp
mov
into
cmc
icebp
stos
mov
mov
jo
cld
outsb
ja
nop
or
daa
aaa
push
jmp
adc
test
notl
inc
or
inc
out
mov
out
out
je
lahf
pop
jle
into
cwtl
jmp
repnz
pop
jbe
push
lcall
mov
call
mov
lods
popa
repz
sub
mov
sbb
mov
add
fnstenv
repnz
fistpl
imul
xlat
inc
cmpsl
mov
xchg
enter
aam
aad
test
in
push
inc
push
arpl
add
test
push
aaa
mov
cmp
add
dec
fldl
je
xchg
enter
adc
sub
push
fsts
sbbb
push
idiv
clc
jp
pushf
dec
imul
sub
testb
js
lea
push
jp
xor
push
xchg
mov
adc
cmp
loope
xor
je
push
shll
fwait
clc
push
cwtl
and
pop
cs
adc
loope
jnp
sbb
sahf
insl
jmp
subb
dec
das
decl
andb
test
cmp
mov
mov
sbb
mov
push
lret
xlat
mov
lods
in
adc
inc
test
pushf
testl
mov
xchg
shll
daa
jg
dec
cmc
aas
int3
cmp
gs
stos
cmp
lahf
sub
inc
sahf
push
inc
jmp
jmp
mov
sbb
xchg
lods
mov
daa
sti
mov
scas
fsin
mov
imul
inc
push
mov
in
mov
mov
jb
enter
push
test
or
rolb
and
inc
push
ljmp
push
adc
inc
pop
lock
aad
lods
hlt
pop
mov
or
sbb
pop
stos
sub
push
mov
shr
add
rolb
push
imul
xchg
mov
ss
or
xor
arpl
jb
and
mov
cmp
sbb
inc
iret
inc
mov
pop
movsl
sbb
cs
xchg
lret
jno
bts
aaa
mov
movsl
ljmp
push
push
xchg
inc
push
xchg
inc
fwait
mov
fildll
shl
outsb
cmp
dec
cld
xor
mov
push
cmpsb
popa
mov
push
out
inc
scas
cmp
sub
xchg
jae
mov
mov
mov
dec
lret
jb
sub
dec
add
mov
repnz
test
adc
jl
rorl
push
sbb
fists
aad
mov
lock
adc
mov
mov
js
push
push
or
mov
push
out
push
mov
cld
lea
sbb
ret
xor
pop
ficomps
pop
add
shll
adc
mov
inc
aam
in
cmpsl
xor
dec
mov
jnp
inc
ret
or
or
rorb
push
jge
xchg
nop
addr16
mov
sbbl
pop
jle
jnp
cmpsb
icebp
mov
frstor
sbb
push
pusha
sbb
mov
insl
iret
pop
jle
sbb
imul
mov
fsubr
imul
xorb
xor
std
sbb
cmpsl
mov
int
outsb
pop
mov
cmp
jge
inc
test
pop
push
inc
das
pop
push
imul
mov
cmp
ljmp
icebp
jmp
inc
rol
ljmp
jb
adc
sarb
or
scas
mov
xchg
stos
hlt
out
and
movsl
mov
sbb
pusha
cmc
dec
shl
push
test
sub
ja
testl
pop
inc
mov
pop
or
pop
xchg
xor
jle
push
mov
and
mov
neg
add
cld
daa
imul
aam
lds
or
leave
and
push
xchg
test
sahf
jno
sub
cmc
mov
mov
mov
sub
dec
fwait
loopne
aam
rclb
sbb
fisubrs
add
icebp
stos
scas
ljmp
xchg
sbb
adc
push
out
xchg
pop
je
push
je
lea
mov
jae
out
or
adc
mov
lods
mov
les
mov
or
lret
pop
xchg
mov
or
int3
shl
and
mov
adc
icebp
mov
outsb
jmp
outsl
out
pop
std
rorb
mov
sahf
lods
nop
punpcklbw
std
in
push
dec
push
sub
sbb
xor
xor
lcall
pop
sbb
cmc
icebp
mov
dec
lcall
and
inc
fadd
fistps
xchg
sarl
inc
popf
lds
fucom
jo
sub
mov
jno
pop
mov
out
xchg
sub
xchg
arpl
push
gs
ss
or
inc
dec
jle
cltd
clc
divl
inc
dec
ljmp
xor
push
add
sbb
pop
leave
lods
out
in
testl
sahf
stos
lock
jae
data16
pop
xor
xchg
xchg
scas
lods
push
mov
in
lds
push
push
lods
jp
jle
xorl
or
addb
jp
dec
inc
scas
push
xor
pop
jle
cli
popf
outsl
jo
jl
sbb
loop
cmp
adc
mov
and
inc
notb
in
repnz
incl
daa
jo
pop
mov
jle
movsl
gs
xchg
mov
dec
jmp
sub
in
or
adc
and
stos
aad
iret
sub
xor
out
xchg
jecxz
mov
mov
scas
pop
or
hlt
clc
dec
pop
or
pop
pushf
popf
jnp
sub
out
cmp
fdivs
mov
scas
push
ret
dec
fwait
jns
mov
mov
xchg
pusha
sbb
pop
ret
ja
es
mov
adc
mov
mov
loopne
add
movsl
pop
aaa
push
dec
inc
insl
sbb
addb
add
ljmp
pop
adc
pop
or
into
dec
push
lret
cmc
cmp
pop
inc
inc
je
repz
pop
rcll
subl
addr16
scas
stc
sti
or
xlat
mov
inc
dec
jbe
rorl
cmpsb
adc
inc
insb
push
adc
daa
ja
lods
roll
mov
mov
test
pushf
mov
sub
into
iret
in
adc
dec
orl
data16
aas
and
jge
test
xchg
jb
cmp
jae
fsubrp
pop
push
add
cld
pushf
loopne
je
push
push
add
shrb
xchg
inc
int
xchg
jno
inc
lods
add
call
and
insl
mov
aam
jne
ret
jle
inc
outsl
jns
cmp
scas
dec
dec
repnz
cmpsl
rorl
pop
inc
mov
and
cwtl
jl
xor
jo
or
mov
dec
data16
loop
stc
mov
int3
push
and
sub
xor
push
gs
sbb
addl
out
cmp
loop
test
lods
enter
cs
pop
jb
mov
vmread
sbb
xor
lcall
jmp
add
addr16
xchg
lret
loop
fistl
adc
data16
movsl
mov
dec
jno
jmp
add
pop
addr16
movsb
ds
xchg
adc
movsl
sub
popa
sbb
loop
xchg
sub
mov
jmp
ljmp
lahf
or
int
jl
jmp
mov
mov
cmpl
sbb
push
leave
ret
sub
or
jmp
dec
mov
std
cmp
push
add
mov
push
jmp
xor
ljmp
sub
cmp
movsl
xor
lcall
cmp
int
xorl
cwtl
lret
movsl
pop
jp
ficomps
in
mov
mov
xchg
mov
call
and
addb
popf
mov
mov
insl
sti
test
inc
pop
ja
or
or
jmp
and
or
lods
mov
cmp
jno
xchg
mov
cwtl
mov
sbb
test
sbb
sbb
and
jbe
inc
mov
cs
lret
sub
mov
rcrl
loopne
addb
push
sub
lock
daa
push
push
scas
or
call
call
jmp
add
addr16
shl
mov
lret
pop
jbe
pop
insb
pushf
inc
out
pop
mov
lcall
jmp
pop
add
movsl
out
mov
sub
dec
pop
xor
mov
movsl
gs
loop
sti
mov
push
bound
rolb
pop
cmp
call
jb
push
push
lcall
and
test
mov
or
aas
aaa
pop
cld
inc
in
ret
lahf
es
jbe
addr16
dec
cmpsb
add
jmp
sub
push
or
jne
sahf
fs
pop
mov
and
cmp
sbb
mov
cmp
idivb
int
stos
pop
jg
outsl
sahf
lahf
jle
add
cs
cli
xchg
cltd
inc
pusha
xor
leave
arpl
outsb
adc
mov
outsl
test
push
icebp
fisubrs
jg
orb
repnz
and
add
clc
aas
mov
mov
outsl
or
xchg
add
iret
mov
scas
dec
ret
roll
shrl
sti
pop
les
sub
inc
inc
enter
sub
cli
jecxz
mul
jne
loope
pop
es
dec
jmp
cmpl
stos
push
lods
fimuls
ds
sti
lock
add
dec
xorl
mov
es
pop
pushf
stos
pop
or
xchg
pop
aad
out
fnstsw
mov
dec
mov
adc
bnd
jo
pop
fwait
jl
pop
xchg
shrl
sbb
cwtl
inc
dec
std
enter
outsl
pushf
aad
dec
and
dec
xor
test
sub
pop
or
dec
jae
pop
jo
pushf
adc
sti
jge
ret
dec
inc
push
add
cmc
lods
cmp
imul
inc
mov
xchg
hlt
pop
vpsubw
fstpt
loopne
roll
je
and
js
xchg
inc
adc
fdivrl
insb
mov
xor
pop
stos
adc
shrl
imulb
pop
arpl
jno
push
ja
cwtl
mov
sar
cmp
push
aam
popf
mov
mov
sub
cmp
pop
xchg
xor
das
mov
push
adc
into
hlt
cmp
je
sub
imull
inc
cmp
xor
push
movsl
or
push
fninit
aas
pop
jge
out
std
push
lock
clc
insl
or
jmp
jg
push
adc
ja
xchg
aad
test
movsl
and
sbb
stos
shrb
push
in
inc
pop
scas
mov
mov
fwait
je
pop
das
idivb
cmp
rorl
add
fdivrs
sub
jnp
decb
pop
in
js
insl
data16
sub
lods
hlt
xchg
jb
lods
mov
fadds
cmp
popa
repz
mov
jne
bound
add
mov
cmp
ss
mov
lock
rorl
mov
mov
cmp
sub
mov
repz
mov
mov
test
lea
adc
pop
sbb
pop
cmp
xor
jae
sub
not
vaddsubps
mov
insl
punpckhdq
addr16
fdivrs
add
insb
sbb
mov
subl
test
and
loopne
cmp
out
sahf
testl
into
test
shlb
or
sbb
push
sbb
jae
mov
adc
mov
sbb
and
pop
adc
es
lods
xlat
imul
daa
push
mov
mov
dec
out
leave
pop
mov
adc
fwait
mov
fcmovnbe
fwait
dec
negl
cmp
pop
mov
or
enter
or
lock
dec
sbb
mov
sbb
mov
cmc
fcoml
sbb
insb
fistps
popf
cmp
dec
push
sahf
insl
cmp
jnp
cmpsl
push
sub
push
dec
jmp
sub
ss
nop
adc
int
popa
jg
push
mov
repz
xchg
sti
ss
ljmp
stc
data16
aad
je
imul
pop
jbe
addl
arpl
push
xlat
movsl
or
jb,pt
pop
pushf
cmpsb
sub
jg
fisubs
cmpsl
out
add
xchg
mov
fs
sbb
jmp
je
and
mov
movsl
ja
jg
sub
testb
call
test
fisttpll
insb
jo
test
dec
out
seta
cmpsl
push
hlt
notb
mov
sti
sub
push
sub
popa
int
mov
insb
mov
in
cld
xchg
sub
xor
xor
dec
xchg
frstor
pop
outsl
pop
dec
dec
xchg
fcmovnu
scas
pop
lods
or
js
cmpsl
xchg
ret
pop
iret
xor
enter
cmp
cltd
push
out
sub
pop
rcll
push
lcall
add
sbb
and
out
stos
xchg
mov
add
lds
cld
sbb
adc
inc
lret
or
dec
xor
aam
movsb
jo
js
add
les
jmp
pop
int3
pop
test
ljmp
gs
popl
mov
mov
jl
gs
icebp
push
mov
inc
aam
xor
add
xor
push
pushf
sub
arpl
gs
icebp
dec
jmp
std
sbb
inc
nop
jecxz
sub
sub
outsl
leave
daa
cwtl
movsb
bound
sbb
add
repnz
dec
scas
jp
xor
xorb
inc
push
aaa
pop
dec
jb
dec
test
ja
sbb
adc
ja
imul
inc
mov
test
or
pop
movsl
xchg
dec
push
cltd
xor
pop
orl
push
jae
int
fdivs
enter
push
imul
dec
xchg
cltd
adc
ret
or
leave
push
mov
adc
into
lahf
pop
arpl
movsb
push
stc
mov
jp
lret
into
in
int3
popf
loopne
adc
shlb
lahf
int
dec
adc
loope
mov
dec
out
xor
jae
jp
cmp
ds
addr16
push
outsb
jo
fst
mov
das
add
mov
pop
dec
in
and
sbb
mov
fcmovbe
jo
hlt
aad
test
push
stos
or
decl
inc
xchg
repnz
mov
ljmp
in
adc
xchg
sbb
dec
lret
jmp
fsubrs
shll
enter
xor
mov
pop
mov
lds
les
lds
les
stc
adc
notb
or
sub
and
mov
cmp
pop
test
push
mov
movsb
xchg
rcrl
cld
std
test
cmp
push
mov
mov
jnp
js
lea
jb
pusha
stos
inc
xor
xchg
xlat
shrd
mov
xchg
add
push
pusha
add
test
ss
or
adc
js
in
pop
data16
adc
jo
loopne
jb
icebp
pop
lods
jne
rclb
jecxz
add
jmp
loope
outsl
cli
inc
inc
js
mov
lahf
pop
and
push
cmp
pop
mov
inc
add
xchg
scas
add
movsl
pop
test
sub
xchg
ret
inc
mulb
insl
shlb
pop
ja
inc
or
dec
sbb
inc
repnz
cmp
xchg
xor
push
roll
mov
loope
cmp
leave
push
add
xor
jbe
adc
outsb
mov
popa
cmp
mov
add
mov
int3
mov
mov
pop
pop
jns
jmp
int3
jno
mov
shlb
test
xor
mov
insb
pop
ds
dec
cli
sub
int3
ss
cmpl
push
lock
scas
sbb
mov
ds
jle
cltd
jl
test
and
cmp
sbb
lds
scas
mov
fists
xor
push
shl
lcall
ret
mov
mov
lcall
mov
jg
mov
add
adc
filds
fs
pop
dec
jne
jo
sbb
in
int3
mov
mov
ja
jp
or
outsl
mov
ret
les
cmp
sbb
ret
jle
sets
loop
shrb
repnz
and
push
test
stos
jge
sub
rcr
mov
pop
jb
loope
pop
in
out
push
in
push
cltd
xchg
jbe
cmpsl
xchg
dec
pop
pop
pushf
bound
adc
aaa
fdivs
or
push
sbbb
pop
mov
icebp
pop
xlat
lock
sbb
mov
inc
sub
xor
hlt
mov
sub
pop
mov
enter
sub
mov
mov
sub
je
pop
or
les
clc
xor
fdiv
lret
and
dec
ret
jp
cmp
idiv
xlat
fdivl
mov
aas
mov
cltd
ret
cli
fdivs
ret
scas
ficompl
fcompl
or
mov
scas
inc
in
rclb
and
sahf
mov
cmp
sub
xchg
loopne
pop
ss
repz
test
xchg
mov
xlat
repnz
xchg
fldz
sarl
ss
repz
int3
mov
shrd
cwtl
cmpb
fildll
mov
push
out
ds
in
xor
faddl
push
mov
cli
xor
sub
fwait
ss
mov
mov
hlt
int
pop
add
testb
in
push
sub
enter
sti
adc
cli
xchg
imul
and
addl
mov
shr
filds
jae
add
or
inc
movsb
cmpl
mov
jb
shrl
das
mul
enter
mov
loope
sbbl
mov
call
jo
out
sahf
xor
addb
in
lret
adc
bswap
adc
cwtl
movsl
js
das
imul
jae
pop
movb
int
jno
adc
push
mov
sub
hlt
es
sub
loop
int
sbb
xchg
popa
leave
outsb
jbe
push
inc
cmc
inc
xchg
