sbb
cmp
pushl
setne
call
add
cmpb
je
jmp
pushl
push
call
pop
pop
jmp
push
mov
push
push
andl
push
mov
lea
mov
lea
push
call
mov
push
push
mov
call
test
jle
push
mov
xor
mov
mov
add
push
mov
call
add
test
jg
inc
cmp
jl
pop
mov
pop
leave
ret
mov
add
push
call
test
je
mov
add
jmp
fld1
xor
mov
mov
mov
mov
mov
mov
mov
mov
movl
movl
mov
mov
push
pop
mov
mov
movl
fsts
flds
mov
fstps
mov
movb
fstps
movb
mov
mov
mov
mov
mov
mov
mov
ret
push
mov
push
push
push
mov
xor
lea
mov
mov
call
mov
mov
call
cmp
jne
lea
call
pop
pop
mov
pop
pop
ret
push
mov
lea
mov
push
call
test
je
mov
test
je
pushl
pushl
call
pop
ret
mov
push
pushl
mov
mov
call
pop
ret
push
mov
push
lea
push
mov
call
test
je
pop
pop
ret
andl
mov
push
mov
call
xor
jmp
push
mov
push
mov
test
je
add
add
jne
mov
test
je
andl
push
mov
lea
call
mov
mov
push
push
push
call
mov
mov
call
lea
mov
call
pop
xor
pop
pop
pop
ret
push
mov
sub
andl
push
push
lea
mov
call
mov
lea
push
push
call
mov
andl
push
lea
mov
movl
mov
call
mov
neg
sbb
and
lea
add
call
mov
pop
leave
ret
mov
lea
push
mov
or
lock
dec
pop
je
mov
ret
xor
inc
mov
mov
push
call
xor
jmp
push
mov
cmp
jne
xor
inc
pop
ret
push
mov
push
mov
andl
push
push
mov
mov
cmp
jne
mov
mov
push
call
test
pop
je
mov
mov
push
call
test
pop
je
mov
mov
push
call
test
pop
je
mov
call
test
jne
lea
add
call
test
jne
mov
lea
lea
call
test
je
lea
lea
call
test
je
flds
flds
fucompp
fnstsw
test
jp
flds
flds
fucompp
fnstsw
test
jp
flds
flds
fucompp
fnstsw
test
jp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
test
ja
mov
pop
pop
pop
pop
ret
push
jmp
push
pushl
mov
call
lea
mov
call
pop
ret
push
mov
push
mov
andl
push
mov
lea
call
mov
mov
push
call
push
lea
call
pop
leave
ret
push
mov
lea
stos
filds
push
add
call
lea
xor
call
xor
pop
ret
push
mov
push
mov
mov
push
call
test
je
mov
test
je
cmpl
jne
xor
cmpl
push
sete
mov
mov
test
je
cmpl
je
mov
push
push
call
mov
mov
mov
push
push
call
test
js
mov
xor
call
add
mov
test
pop
jne
pop
mov
pop
ret
mov
jmp
push
mov
call
test
je
mov
test
je
mov
pop
jmp
movzbl
mov
shr
mov
movzbl
mov
and
mov
pop
ret
push
xor
cmp
mov
mov
mov
mov
movl
add
push
adc
mov
add
add
sbb
pushl
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
orl
orl
mov
pop
ret
push
mov
push
mov
xor
push
inc
lea
mov
call
test
jne
mov
movzwl
cmp
je
cmp
je
cmp
je
mov
shr
and
cmp
ja
cmp
jb
lea
push
push
call
inc
add
pushl
push
push
call
cmp
je
pop
pop
pop
ret
push
pop
lea
mov
call
test
jne
lea
push
push
call
mov
call
test
je
push
pushl
pushl
push
call
jmp
lea
cmp
jbe
jmp
push
pop
lea
mov
call
test
jne
lea
push
push
call
cmpw
je
cmpw
je
pushl
mov
pushl
push
call
jmp
push
pushl
pushl
push
call
jmp
push
mov
sub
push
mov
mov
push
push
mov
mov
push
call
xor
xor
inc
mov
mov
call
test
mov
mov
je
pushl
mov
pushl
mov
pushl
call
test
js
mov
test
je
lea
test
je
push
mov
call
mov
mov
mov
call
mov
mov
xor
lea
call
mov
test
jne
cmpw
jne
mov
lea
push
pushl
call
test
jne
mov
test
jne
mov
mov
shl
mov
xor
shr
inc
and
cmp
mov
je
cmp
je
adc
inc
add
adc
add
test
jmp
add
shr
add
shr
add
ret
add
enter
test
jne
cmp
jne
test
jne
mov
pop
pop
pop
leave
ret
pushl
pushl
pushl
push
call
mov
jmp
mov
jmp
call
mov
lea
call
mov
push
pop
push
pop
call
xor
cmp
je
and
cmp
mov
mov
jne
cmp
je
xor
cmpl
jne
inc
xor
lea
push
pushl
lea
push
pushl
push
push
push
call
mov
cmpl
je
pushl
lea
push
push
lea
call
mov
add
test
jne
cmp
je
lea
push
pushl
mov
call
pushl
lea
push
push
push
call
testb
mov
jne
test
jne
mov
andl
lea
call
mov
jmp
xor
dec
cmp
ja
push
xor
jmp
push
pop
call
cmp
je
xor
inc
mov
mov
mov
mov
mov
movl
movl
mov
mov
mov
movl
pop
ret
push
pop
call
cmp
je
mov
mov
mov
mov
mov
xor
movl
inc
mov
lea
movl
mov
mov
mov
mov
call
mov
mov
pop
ret
push
pop
call
cmp
je
mov
mov
mov
movl
movl
movl
pop
ret
push
pop
call
cmp
je
xor
mov
mov
mov
inc
mov
mov
movl
mov
movl
mov
pop
ret
push
pop
call
cmp
je
mov
mov
mov
movl
xor
movl
inc
mov
mov
mov
mov
movl
mov
pop
ret
push
pop
call
cmp
je
mov
lea
mov
mov
mov
movl
movl
movl
call
jmp
push
outsb
mov
add
add
ret
je
mov
pop
jmp
push
pop
call
cmp
je
mov
pop
jmp
xor
pop
ret
mov
clc
add
cs
add
decl
add
dec
clc
add
cmc
clc
add
testl
adc
mov
adc
add
dec
mov
adc
pushl
mov
call
pop
pop
ret
push
mov
push
movw
call
test
je
mov
dec
dec
movl
je
dec
je
dec
dec
je
dec
dec
je
xor
leave
ret
mov
lea
push
push
call
test
js
cmpl
jne
jmp
mov
lea
push
push
call
jmp
mov
test
je
mov
call
test
je
push
call
pop
ret
xor
ret
testb
push
mov
movl
je
push
call
pop
mov
pop
ret
mov
decl
mov
jne
xor
inc
mov
mov
push
call
xor
ret
push
mov
sub
mov
mov
add
mov
mov
mov
mov
mov
mov
push
push
mov
mov
mov
mov
push
pushl
lea
lea
movsl
movsl
lea
lea
movsl
call
mov
cmp
pop
je
mov
andl
sub
mov
lea
push
pushl
mov
call
mov
neg
sbb
inc
testb
jne
testb
jne
test
jne
mov
cmp
jne
xor
inc
pop
pop
pop
leave
ret
incl
lea
lea
movsl
movsl
lea
lea
movsl
call
test
je
jmp
push
mov
push
push
mov
mov
mov
push
inc
push
push
call
test
je
mov
push
mov
imul
push
lea
lea
cmp
je
mov
mov
mov
test
je
mov
andl
push
movl
movl
call
mov
addl
add
cmp
jne
mov
incl
mov
pop
lea
pop
pop
leave
ret
push
mov
push
push
push
mov
mov
push
mov
lea
lea
push
lea
mov
mov
call
mov
neg
sbb
and
je
cmp
jne
push
lea
mov
call
mov
push
mov
call
pop
pop
leave
ret
push
pop
ret
xor
push
mov
mov
test
je
mov
cmp
je
add
jmp
add
cmp
jb
xor
pop
ret
xor
inc
jmp
mov
push
mov
push
lea
call
mov
neg
sbb
and
mov
jne
test
je
andl
xor
pop
ret
push
mov
sub
mov
xor
mov
test
mov
je
mov
lea
mov
mov
lahf
mov
add
fisttpl
inc
movsb
mov
mov
mov
movl
movl
mov
call
mov
mov
push
call
mov
cmp
pop
pop
jne
mov
testb
jne
testb
jne
mov
lea
call
mov
pop
pop
mov
xor
call
leave
ret
mov
push
lea
push
push
call
cmp
jne
push
call
cmp
pop
je
mov
mov
mov
mov
mov
cmp
mov
je
mov
mov
push
lea
push
push
call
mov
jmp
xor
jmp
mov
mov
push
add
call
test
je
mov
add
call
xor
ret
int3
int3
sub
push
mov
test
push
push
je
mov
add
push
call
mov
mov
xor
cmp
je
mov
mov
cmp
jle
mov
mov
mov
mov
mov
mov
push
push
mov
push
mov
push
mov
push
push
push
push
call
test
js
cmpw
jne
mov
add
add
cmp
mov
jl
movw
pop
pop
xor
pop
add
ret
mov
push
mov
lea
movl
movl
call
mov
test
je
mov
mov
mov
lea
call
mov
test
je
mov
lea
call
lea
call
jmp
push
mov
add
call
mov
test
je
jmp
push
mov
push
pushl
mov
pushl
pushl
pushl
pushl
pushl
push
pushl
call
pop
pop
ret
push
mov
push
mov
push
push
mov
movl
lea
movl
add
mov
mov
in
repz
xor
mov
push
push
movl
mov
movl
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movb
mov
mov
lea
mov
mov
push
mov
call
mov
test
jne
cmpl
jne
mov
pop
pop
pop
pop
ret
push
push
call
test
pop
je
pushl
pushl
pushl
call
mov
test
je
mov
push
call
mov
mov
pop
ret
xor
jmp
int3
push
lea
sub
mov
xor
mov
push
xor
cmp
push
je
xor
mov
pop
xor
pop
call
add
leave
ret
cmp
jne
testb
jne
push
call
test
jne
mov
mov
mov
mov
cmp
je
cmp
mov
jne
testb
je
cmp
jne
call
test
je
mov
lea
call
mov
push
mov
lea
mov
mov
call
lea
push
lea
mov
movl
movl
mov
mov
call
mov
cmp
je
testb
jne
push
mov
lea
mov
call
mov
cmp
je
mov
push
push
call
lea
call
mov
push
mov
lea
mov
call
cmp
je
push
lea
lea
call
mov
mov
mov
cmp
mov
je
mov
mov
lea
push
pushl
push
call
cmp
jne
cmpl
jne
mov
mov
lea
push
pushl
push
call
cmp
je
mov
pushl
mov
push
call
pushl
mov
lea
mov
call
cmp
je
pushl
mov
lea
mov
call
mov
mov
lea
push
push
call
mov
push
lea
jns
inc
add
call
mov
mov
lea
jnp
inc
add
jne
mov
pushl
pushl
jmp
xor
add
shlb
and
les
and
xor
cmp
mov
jne
pushl
mov
lea
call
mov
pushl
mov
push
call
lea
call
lea
stc
rolb
lea
call
mov
push
mov
lea
mov
call
mov
push
lea
lea
movl
mov
mov
mov
call
mov
push
mov
lea
mov
call
mov
cmp
je
pushl
call
mov
mov
push
call
test
js
cmp
je
mov
call
lea
call
lea
call
lea
call
lea
call
pushl
pushl
call
pop
pop
lea
call
lea
call
lea
call
jmp
mov
jmp
push
mov
push
mov
cmpl
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
mov
push
call
xor
mov
mov
pop
pop
ret
pushl
mov
add
push
call
xor
ret
push
mov
test
je
push
push
push
xor
call
cmp
pop
je
mov
mov
movl
movl
mov
mov
movl
mov
movl
mov
cmp
je
pushl
mov
push
call
pushl
mov
push
call
mov
mov
push
call
xor
pop
pop
pop
ret
xor
jmp
push
mov
push
push
push
mov
mov
push
mov
mov
lea
push
lea
lea
mov
call
test
je
push
mov
test
mov
jne
pop
pop
pop
leave
ret
push
mov
push
mov
mov
lea
push
pushl
push
call
test
js
cmpl
jne
xor
leave
ret
xor
inc
leave
ret
push
mov
push
andl
push
mov
mov
push
mov
cmp
jge
cmp
jge
push
mov
cmp
jg
cmpl
pop
jle
mov
pop
pop
leave
ret
mov
pushl
mov
push
call
mov
jmp
push
mov
push
push
push
push
xor
push
lea
mov
call
mov
mov
lea
push
push
call
push
lea
mov
call
mov
lea
push
push
pushl
pushl
call
mov
add
cmp
je
pushl
mov
pushl
mov
pushl
push
push
call
mov
lea
call
lea
call
mov
pop
pop
leave
ret
push
mov
sub
push
mov
push
push
pushl
mov
push
lea
call
test
je
test
je
mov
push
call
mov
push
mov
call
mov
mov
call
test
jne
andl
andl
lea
mov
mov
lea
mov
mov
mov
mov
cmp
jae
incl
mov
mov
lea
call
mov
mov
push
push
push
call
mov
jmp
lea
call
mov
mov
pop
pop
mov
pop
leave
ret
push
lea
sub
mov
xor
mov
push
xor
cmp
je
cmp
push
mov
je
push
push
mov
lea
mov
pop
mov
mov
lea
lea
push
pushl
mov
lea
mov
mov
mov
lea
mov
mov
push
mov
mov
mov
mov
mov
mov
call
mov
lea
push
pushl
mov
push
call
push
push
pushl
call
cmp
je
lea
push
mov
pushl
mov
call
cmp
jne
testb
jne
testb
jne
testb
je
mov
add
push
call
test
pop
je
pop
lea
mov
test
je
andl
mov
pop
mov
xor
pop
call
add
leave
ret
testb
je
jmp
lea
push
mov
pushl
mov
call
jmp
mov
add
call
jmp
lea
jmp
push
mov
sub
push
mov
test
je
lea
call
inc
add
test
lods
cmp
andl
push
push
push
lea
call
mov
mov
add
lea
mov
call
test
je
pushl
xor
mov
lea
mov
call
cmp
je
cmp
je
add
cmp
jne
mov
push
mov
call
lea
call
lea
call
mov
pop
pop
pop
leave
ret
lea
call
xor
jmp
pushl
mov
inc
add
mov
call
mov
test
je
push
lea
call
lea
xor
push
mov
mov
push
call
cmp
jne
mov
push
mov
call
lea
call
xor
jmp
push
mov
cmpl
jne
push
mov
test
je
mov
push
mov
test
jne
xor
pop
pop
pop
ret
cmpl
je
test
je
mov
test
je
testb
jne
test
je
testb
jne
andl
push
lea
mov
test
jne
xor
pop
ret
mov
mov
push
push
call
xor
mov
call
jmp
mov
jmp
mov
andl
xor
ret
mov
mov
test
push
push
push
jne
xor
pop
pop
pop
ret
push
mov
sub
add
enter
mov
mov
andl
andw
push
mov
push
mov
push
mov
mov
lea
mov
mov
mov
mov
movl
movl
mov
test
je
mov
cmp
je
mov
push
mov
call
test
jne
test
je
call
mov
test
je
test
mov
add
cmpl
jne
mov
mov
mov
test
jne
mov
add
mov
test
jne
mov
mov
test
jne
mov
lea
push
mov
pushl
add
pushl
push
pushl
add
xor
or
xor
add
cmp
ja
cmp
je
mov
cmp
je
mov
mov
mov
cmp
je
mov
mov
test
jne
or
mov
mov
cmp
jne
testb
jne
testb
jne
mov
mov
pop
pop
xor
pop
call
leave
ret
test
je
push
push
call
jmp
cmpl
je
jmp
mov
add
push
call
test
pop
jne
jmp
cmp
je
jle
cmp
jle
cmp
jle
cmp
jg
cmp
mov
mov
xor
jmp
xor
mov
lea
cmpl
je
inc
cmp
jae
jmp
mov
inc
test
jne
mov
call
test
js
lea
mov
mov
mov
mov
xor
cmp
mov
movl
movl
mov
mov
je
mov
mov
add
mov
addl
sub
jne
movl
mov
cmp
mov
je
cmp
jg
pushl
lea
call
mov
cmpw
mov
je
inc
inc
cmpw
jne
sub
sar
push
call
mov
pop
mov
mov
xor
cmp
mov
jne
pushl
pushl
call
pop
pop
jmp
mov
mov
push
call
cmp
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
mov
jne
jmp
cmp
je
jle
cmp
jle
add
cmp
ja
mov
cmpl
mov
mov
xor
jmp
mov
inc
test
jne
mov
call
test
js
mov
test
je
andl
mov
mov
cmpl
je
xor
pushl
lea
call
inc
add
call
mov
call
mov
mov
incl
test
mov
je
jmp
cmp
jne
xor
inc
mov
call
mov
andl
movl
jmp
sub
jne
movl
jmp
int3
mov
mov
mov
cmp
je
add
cmp
jne
xor
ret
mov
ret
jmp
push
mov
sub
push
push
mov
xor
cmp
je
call
cmp
je
push
mov
push
call
cmp
pop
je
push
mov
call
pop
mov
call
push
mov
mov
call
cmp
pop
je
mov
mov
movl
mov
mov
push
call
lea
mov
cmp
mov
je
mov
push
call
cmp
je
pushl
mov
call
cmp
je
pushl
call
pop
mov
lea
call
mov
pop
pop
pop
leave
ret
push
pushl
call
pop
pop
jmp
xor
jmp
mov
jmp
push
mov
and
sub
mov
xor
mov
mov
push
push
push
mov
mov
xor
cmp
mov
mov
jne
push
call
mov
test
jne
cmp
jne
mov
cmp
je
push
lea
call
mov
lea
push
push
call
add
jne
cmp
je
mov
mov
lea
push
pushl
call
cmp
mov
mov
je
lea
push
push
call
cmp
je
mov
lea
push
push
call
mov
lea
push
push
call
cmp
je
pushl
mov
pushl
pushl
push
call
test
jne
cmp
je
lea
push
mov
movb
call
xor
test
je
mov
lea
mov
mov
add
lea
push
mov
movl
movl
mov
mov
push
call
cmp
je
mov
cmp
je
mov
lea
push
push
call
mov
push
push
call
pushl
pushl
call
pop
pop
xor
lea
call
mov
pop
mov
pop
pop
xor
call
mov
pop
ret
mov
push
call
jmp
mov
jmp
push
mov
sub
mov
xor
mov
push
push
mov
xor
cmp
je
cmp
jne
cmp
push
je
lea
mov
mov
mov
movl
lea
mov
test
je
mov
cmp
jge
mov
mov
mov
mov
call
test
js
mov
mov
mov
mov
add
mov
add
incl
addl
lea
jmp
movb
movb
movb
movb
movb
movb
movb
movb
call
movzwl
mov
mov
lea
call
mov
movzwl
mov
mov
mov
mov
mov
shr
mov
mov
mov
mov
mov
lea
push
mov
mov
shr
push
pop
mov
mov
mov
call
test
pop
js
mov
mov
mov
mov
push
call
test
pop
js
mov
andl
push
mov
lea
call
inc
add
mov
push
call
test
js
andl
mov
movl
mov
test
je
mov
cmp
jge
mov
mov
mov
cmpb
je
mov
mov
push
pushl
mov
push
push
call
test
jne
mov
mov
call
test
jne
incl
addl
jmp
lea
call
mov
lea
mov
mov
push
call
xor
mov
mov
call
lea
call
lea
push
call
lea
mov
pushl
push
call
mov
pop
mov
pop
xor
pop
call
leave
ret
push
mov
mov
mov
mov
sub
push
xor
cmp
je
cmp
je
mov
call
test
je
cmp
je
mov
andl
lea
push
push
lea
push
movl
movl
movl
call
mov
pop
leave
ret
push
mov
sub
push
mov
mov
test
je
flds
flds
fucompp
fnstsw
test
jp
pop
leave
ret
int3
int3
push
mov
test
je
cmpb
je
push
xor
mov
push
push
call
add
test
je
add
cmp
jb
pop
mov
pop
ret
mov
pop
pop
ret
mov
pop
ret
push
xor
cmp
je
mov
cmpl
push
mov
push
lea
jge
testb
je
testl
jne
lea
mov
cmp
mov
jne
lea
mov
cmp
mov
jne
xor
mov
call
andl
pop
mov
pop
pop
ret
cmpl
jne
jmp
mov
push
call
jmp
cmp
je
jmp
push
mov
push
push
mov
mov
mov
push
inc
push
push
call
test
je
mov
push
mov
imul
push
lea
lea
cmp
je
mov
mov
mov
test
je
mov
add
lea
mov
andl
push
call
mov
mov
add
add
cmp
mov
jne
mov
incl
mov
pop
lea
pop
pop
leave
ret
push
mov
push
mov
mov
mov
push
lea
lea
andl
push
call
lea
lea
andl
push
call
mov
mov
mov
mov
mov
mov
mov
push
mov
pop
add
lea
rep
mov
lea
lea
andl
push
call
pop
fldl
pop
fstpl
mov
pop
ret
mov
mov
test
jl
mov
mov
cmp
jge
xor
inc
ret
xor
jmp
push
mov
push
push
mov
lea
neg
sbb
and
mov
je
mov
push
call
pushl
lea
mov
push
call
lea
call
pop
leave
ret
mov
test
je
push
xor
call
mov
push
add
call
xor
pop
ret
mov
test
je
push
xor
call
mov
push
add
call
xor
pop
ret
push
mov
push
push
push
mov
test
push
je
mov
mov
andl
lea
push
push
call
push
pop
cmp
jge
push
pop
cmp
je
cmpl
jge
xor
lea
call
mov
pop
pop
pop
leave
ret
jmp
push
mov
push
call
mov
pop
ret
push
mov
test
je
push
mov
cmpl
je
mov
mov
push
call
mov
mov
xor
pop
pop
ret
push
call
pop
test
je
movl
movl
movl
andl
test
mov
je
mov
push
call
jmp
xor
jmp
push
mov
push
mov
push
mov
movzwl
push
xor
test
ja
cmp
jne
lea
test
je
mov
mov
mov
push
call
lea
test
je
andl
mov
mov
mov
mov
incw
pop
pop
xor
pop
pop
ret
lea
mov
mov
mov
cmp
ja
je
movzwl
inc
cmp
jae
addl
jmp
sub
shl
push
lea
push
lea
push
call
add
jmp
push
mov
mov
test
jne
xor
push
pushl
lea
pushl
mov
push
call
mov
mov
xor
inc
pop
ret
mov
call
jmp
push
mov
push
mov
andl
push
push
pushl
lea
call
test
js
pushl
mov
pushl
call
test
js
mov
push
mov
call
test
mov
je
mov
push
call
mov
pop
pop
leave
ret
push
mov
sub
andl
push
mov
mov
push
push
movl
mov
call
mov
test
pop
mov
jne
mov
test
je
push
mov
lea
call
mov
test
je
pushl
mov
pushl
push
call
test
mov
jne
movl
pushl
call
pop
lea
call
mov
pop
pop
leave
ret
push
mov
sub
mov
xor
mov
mov
mov
mov
push
mov
mov
call
test
je
push
mov
test
je
mov
push
lea
mov
mov
jbe
inc
add
xor
push
mov
movl
movl
mov
mov
push
call
jmp
inc
add
dec
cwtl
push
pushl
mov
mov
push
call
cmp
jne
mov
cmp
mov
je
mov
push
call
cmp
je
mov
mov
push
pushl
push
push
call
push
lea
mov
mov
call
mov
mov
lea
push
push
push
call
or
mov
push
pushl
mov
pushl
call
mov
or
mov
push
push
call
mov
or
cmp
je
push
lea
mov
call
mov
lea
push
pushl
push
call
lea
or
call
test
js
lea
call
lea
call
testb
je
mov
add
push
call
test
pop
je
mov
pop
pop
mov
xor
pop
call
leave
ret
push
lea
call
mov
lea
push
push
call
cmp
jne
jmp
mov
mov
lea
lea
cmp
push
je
mov
mov
cmp
jne
sub
sub
sar
pop
ret
add
cmp
jne
or
jmp
push
xor
mov
xor
push
mov
inc
cmp
mov
mov
mov
mov
mov
mov
mov
mov
jne
mov
mov
mov
cmpl
jge
test
jne
xor
pushl
mov
push
mov
call
pop
mov
pop
ret
push
mov
and
push
mov
mov
push
mov
orl
lea
push
call
orl
lea
push
call
andl
andl
testb
jne
pop
pop
mov
pop
ret
mov
push
pushl
mov
mov
call
pop
ret
push
mov
push
xor
cmp
mov
jne
push
push
call
cmp
pop
je
movl
mov
movl
mov
movl
mov
cmp
je
mov
push
call
mov
push
pushl
push
call
mov
mov
push
call
mov
pop
pop
pop
ret
xor
jmp
int3
int3
int3
push
push
mov
mov
movsbw
movzwl
cmp
jbe
add
cmp
ja
test
je
jmp
lea
mov
movsbw
movzwl
cmp
jbe
add
cmp
ja
add
sub
jne
pop
mov
pop
ret
cmp
jb
jmp
movzwl
cmp
jae
cmp
je
jmp
push
push
mov
push
lea
mov
push
call
test
je
lea
mov
push
push
call
mov
test
je
decl
jne
mov
movl
call
push
call
pop
andl
pop
pop
pop
ret
add
pushl
call
andl
pop
jmp
push
mov
push
push
push
push
mov
call
mov
test
mov
jne
test
jne
mov
test
jne
mov
test
mov
je
mov
test
mov
je
lea
push
mov
call
test
pop
jne
pushl
call
pop
push
call
pop
lea
call
lea
call
lea
call
pushl
call
mov
test
pop
jne
pop
pop
pop
leave
ret
test
je
jmp
lea
call
jmp
push
mov
sub
push
push
mov
mov
mov
mov
cmpl
jne
pop
pop
leave
ret
push
mov
decl
mov
je
pop
ret
movl
movl
mov
test
mov
push
je
lea
push
call
pop
test
jne
push
call
pop
push
call
pop
xor
pop
jmp
mov
test
je
testb
push
je
mov
mov
mov
test
je
cmpl
jne
cmpl
jne
mov
add
add
mov
push
mov
call
jmp
xor
jmp
xor
jmp
pushl
mov
call
test
je
cmpl
push
mov
jne
mov
push
mov
call
mov
test
pop
je
mov
ret
xor
jmp
push
mov
push
push
pushl
mov
push
call
test
je
mov
push
pop
mov
movsbw
dec
mov
inc
inc
inc
test
jne
mov
push
add
push
call
test
jne
xor
test
jne
pop
xor
pop
ret
mov
mov
mov
call
cmp
jne
mov
jmp
mov
test
jle
jmp
push
mov
sub
mov
xor
mov
mov
push
push
push
pop
cmp
mov
jge
andl
test
lea
mov
mov
movl
movl
mov
add
inc
add
add
call
test
js
cmpl
jne
test
je
andl
push
lea
call
mov
lea
push
push
call
mov
test
jne
lea
call
testb
jne
testb
jne
xor
mov
pop
xor
pop
call
leave
ret
xor
jmp
push
mov
pushl
add
call
xor
pop
ret
push
mov
sub
andl
push
mov
push
lea
add
mov
push
lea
mov
mov
movl
mov
call
mov
test
js
mov
pushl
mov
push
call
mov
test
js
andl
mov
mov
lea
add
push
lea
mov
movl
mov
call
mov
test
js
mov
mov
push
pushl
mov
push
call
mov
and
neg
sbb
and
pop
pop
pop
leave
ret
mov
push
mov
add
push
call
xor
pop
ret
push
call
xor
cmp
pop
je
mov
mov
mov
andb
push
xor
inc
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
test
pop
lea
je
lea
orl
movl
add
mov
lds
ret
xor
ret
push
lea
sub
mov
xor
mov
sbb
inc
add
push
mov
andl
test
push
mov
lea
push
mov
movl
movl
mov
movb
je
mov
lea
push
push
call
mov
test
je
mov
sub
je
dec
jne
lea
lea
lea
movl
call
test
jne
mov
jmp
testb
je
mov
add
push
call
test
pop
je
xor
mov
stc
out
add
das
fwait
xor
add
leave
ret
testb
je
jmp
lea
call
xor
inc
jmp
push
mov
sub
push
mov
cmpl
push
push
je
mov
cmp
je
push
lea
pop
lea
rep
mov
cmp
jle
cmpl
jg
mov
mov
add
push
cmp
lea
pop
jb
lea
rep
push
lea
call
lea
push
lea
push
mov
call
pop
pop
xor
pop
pop
pop
leave
ret
mov
jmp
lea
rep
jmp
pushl
lea
call
jmp
push
mov
lea
mov
push
call
mov
pop
jmp
push
mov
call
testb
je
push
call
pop
mov
pop
ret
push
mov
mov
test
movl
je
push
call
pop
andl
mov
test
je
mov
push
call
lea
call
movl
pop
ret
push
mov
sub
mov
xor
mov
push
mov
mov
cmp
push
je
cmp
je
xor
mov
pop
xor
pop
call
leave
ret
push
mov
pushl
mov
xor
cmp
setne
add
mov
lea
push
pushl
pushl
push
call
pop
ret
push
mov
mov
sub
test
push
mov
push
push
je
andl
mov
mov
call
test
je
andl
mov
mov
shr
and
mov
mov
mov
call
mov
mov
testw
jne
andl
mov
andl
call
test
je
movl
mov
test
mov
mov
je
andl
mov
jmp
mov
test
je
mov
push
mov
call
test
je
cmpl
mov
movl
je
mov
add
lea
movsl
movsl
movsl
movsl
xor
lea
call
add
pushl
lea
call
mov
xor
push
push
push
pushl
mov
pushl
mov
mov
mov
lea
lea
movl
call
pushl
mov
pushl
call
mov
testb
je
orw
mov
test
je
lea
lea
movsl
movsl
movsl
movsl
mov
mov
add
test
jle
andw
mov
mov
push
pushl
lea
push
pushl
push
push
lea
push
pushl
push
call
mov
lea
push
lea
push
lea
push
pushl
mov
call
mov
add
cmpl
je
cmpl
jne
mov
mov
mov
push
add
push
mov
call
mov
mov
test
jne
cmp
je
mov
sub
mov
mov
mov
mov
mov
mov
mov
testb
jne
cmpl
je
push
push
pushl
push
call
add
cmp
je
mov
pop
pop
pop
leave
ret
push
mov
push
cmpl
je
mov
test
push
jne
mov
call
mov
add
mov
test
mov
je
mov
push
jmp
lea
push
call
mov
test
je
cmp
jne
mov
add
mov
test
mov
je
mov
push
call
xor
leave
ret
andl
jmp
push
call
test
jne
jmp
push
mov
sub
andl
push
mov
push
push
mov
push
mov
add
mov
call
mov
test
jne
xor
push
lea
lea
movl
mov
mov
mov
call
cmp
jne
lea
call
lea
call
pop
pop
xor
pop
leave
ret
mov
lea
push
push
call
mov
test
jne
pushl
lea
mov
push
call
mov
mov
lea
push
push
call
test
jne
pushl
lea
mov
push
call
mov
mov
lea
push
push
call
test
jne
pushl
lea
mov
push
call
mov
mov
lea
push
push
call
test
jne
pushl
lea
mov
push
call
xchg
int3
inc
add
lea
push
push
call
test
jne
pushl
lea
mov
push
call
mov
mov
lea
push
push
call
test
jne
pushl
lea
mov
push
call
mov
mov
lea
push
push
call
test
jne
pushl
lea
mov
push
call
jmp
mov
pushl
mov
push
call
jmp
push
mov
push
push
lea
cmpl
jne
mov
call
lea
call
pop
leave
ret
mov
pushl
pushl
call
neg
pop
sbb
pop
inc
ret
push
mov
push
push
mov
push
push
mov
push
xor
xor
test
je
mov
testb
je
add
add
mov
test
jne
mov
mov
mov
pop
pop
mov
pop
leave
ret
mov
test
je
lea
push
lea
push
mov
push
call
add
add
jmp
push
mov
push
movzbl
fldz
andl
fsts
push
fstps
mov
mov
push
mov
shl
add
cmp
jb
pop
pop
leave
ret
mov
mov
mov
test
push
je
mov
mov
call
cmpl
jne
movl
xor
pop
ret
mov
decl
mov
je
ret
xor
inc
mov
mov
push
call
xor
jmp
mov
mov
test
je
xor
cmp
setne
mov
xor
ret
push
mov
push
mov
test
push
je
pop
leave
ret
push
mov
sub
cmpl
je
push
mov
push
push
add
mov
lea
call
lea
lea
call
mov
mov
push
call
test
jne
mov
lea
push
push
call
test
js
mov
lea
push
push
call
test
js
mov
mov
imul
imul
push
mov
mov
pop
mov
mov
mov
lea
mov
call
neg
pop
sbb
pop
inc
pop
leave
ret
xor
xor
jmp
push
lea
sub
mov
xor
mov
mov
push
mov
andl
push
push
mov
jmp
mov
mov
movl
pushl
mov
mov
mov
mov
push
push
mov
call
test
js
mov
test
mov
jne
mov
movzbl
mov
movl
dec
jne
mov
movl
xor
mov
pop
pop
xor
pop
call
add
ja
inc
add
int3
int3
int3
int3
sub
mov
xor
mov
mov
mov
mov
push
mov
push
mov
push
mov
cmp
push
mov
mov
mov
movw
ja
test
je
mov
mov
lea
lea
mov
mov
push
mov
mov
mov
push
movl
movl
movl
movb
call
mov
cmp
je
cmp
jne
mov
mov
mov
mov
sub
mov
mov
mov
sub
sub
cmp
jbe
cmp
jne
add
test
jne
mov
mov
mov
lea
push
lea
push
push
push
mov
mov
call
test
js
cmpl
je
cmp
je
mov
test
jne
test
jne
xor
mov
pop
pop
pop
pop
xor
call
add
ret
cmp
je
mov
test
jne
test
je
jmp
mov
push
mov
call
add
test
jne
jmp
mov
add
call
jmp
push
mov
push
push
push
mov
andl
cmpl
jbe
mov
mov
mov
mov
mov
sub
cmp
mov
jae
cmpl
lea
je
andl
lea
push
pushl
mov
pushl
neg
sbb
add
push
pushl
and
push
call
test
jne
mov
add
add
sub
mov
mov
cmp
ja
mov
mov
cmpl
ja
xor
pop
pop
pop
pop
ret
mov
jmp
into
out
inc
add
test
je
jmp
push
mov
mov
mov
mov
lea
push
pushl
pushl
push
call
test
js
cmpl
je
pop
ret
push
mov
sub
mov
xor
mov
cmpl
mov
push
push
mov
mov
jl
jg
cmpl
jbe
movb
lea
push
call
mov
test
je
mov
push
mov
push
mov
xor
call
push
push
push
push
mov
call
mov
mov
push
call
cmpb
je
pushl
mov
pushl
lea
push
push
movl
movl
movl
call
testb
mov
jne
testb
jne
mov
test
jne
andl
mov
lea
push
push
call
test
jne
xor
cmp
jne
mov
test
je
mov
push
call
lea
call
xor
pop
mov
pop
xor
pop
call
leave
ret
lea
push
lea
push
mov
mov
push
fiaddl
inc
lods
movl
movl
movb
call
test
jne
lea
push
call
test
je
pushl
pushl
call
pop
pop
jmp
mov
mov
push
push
push
call
xor
cmp
je
push
push
mov
mov
push
call
mov
orl
mov
lea
mov
movl
mov
mov
mov
mov
mov
pop
pop
ret
xor
pop
ret
push
lea
sub
mov
xor
mov
push
mov
push
push
xor
cmp
jne
mov
cmp
lea
mov
mov
mov
movl
movl
mov
mov
jne
mov
cmp
je
testb
jne
testb
jne
mov
pop
pop
xor
xor
pop
call
add
xrelease
mov
push
xor
cmp
push
mov
mov
jne
cmp
je
cmp
je
cmp
jne
push
pushl
mov
push
pushl
call
pop
pop
pop
pop
ret
cmp
jne
cmpb
jne
jmp
cmp
je
cmp
jne
jmp
push
mov
push
mov
lea
push
call
push
push
lea
call
pop
xor
pop
ret
push
mov
push
mov
lea
push
call
push
push
lea
call
pop
xor
pop
ret
push
mov
sub
push
xor
cmp
je
push
push
pushl
mov
lea
mov
call
mov
push
pushl
xor
lea
inc
push
movl
movl
mov
mov
push
call
testb
jne
testb
jne
mov
push
pop
push
pushl
lea
push
movl
mov
mov
mov
push
call
testb
jne
testb
jne
mov
push
pushl
adc
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
cmpsb
xor
call
test
jne
inc
cmp
jl
xor
pop
pop
leave
ret
push
mov
sub
mov
xor
mov
mov
push
mov
push
lea
xor
push
mov
mov
push
in
add
lods
movl
movl
mov
call
mov
or
lea
call
neg
sbb
and
add
cmp
je
mov
mov
sub
cmp
jbe
sub
push
push
push
push
lea
push
push
lea
push
call
mov
test
add
fiaddl
xchg
add
jb
add
out
rclb
cltd
add
sub
pop
popl
push
push
call
mov
lock
jbe
pusha
add
std
leave
add
jp
add
stos
add
outsl
les
add
je
insb
add
addl
add
jno
mov
push
add
xchg
add
add
add
jecxz
mov
jp
add
add
jb
sub
pop
push
push
push
lea
push
push
push
push
push
call
loop
stc
mov
add
push
add
jae
jno
sub
add
add
add
mov
add
pushf
mov
add
imul
pusha
add
add
jge
in
in
push
push
push
push
push
push
push
push
call
idiv
jns
out
nop
cld
add
jns
add
repnz
mov
insb
jno
ret
movsl
xchg
out
clc
fdivrs
add
add
popa
jae
lods
mov
add
ja
out
jmp
jp
mov
add
fldl
cli
mov
add
cli
add
sub
pop
push
push
push
push
push
call
push
add
add
pusha
add
je
push
int
mov
add
add
xlat
xchg
add
add
add
add
mov
add
fists
add
lock
call
push
push
lea
push
push
push
push
push
call
add
out
add
fildl
add
add
jge
fwait
push
push
jle
add
faddl
add
add
push
add
rorb
jae
mov
add
fstpt
nop
add
sub
pop
call
jmp
push
push
push
call
icebp
push
add
add
add
imulb
jb
add
pushf
cmpb
mov
pop
add
pop
js
push
add
push
push
imul
pop
insb
add
mov
fstpl
test
pop
ret
mov
push
push
lea
push
lea
push
push
push
push
lea
push
push
push
call
push
pop
jae
out
loop
mov
push
cld
stos
add
test
lock
leave
test
fs
addb
lahf
lods
push
out
add
xchg
pusha
add
add
add
fists
mov
push
push
push
push
push
push
call
add
addb
add
in
lods
jno
xchg
push
add
mov
stos
jp
shll
mov
addl
add
add
add
add
jnp
push
sti
add
lcall
add
push
push
push
push
push
lea
push
lea
push
push
push
call
int
add
add
add
add
add
add
in
xorb
add
add
add
add
add
mov
push
mov
add
add
enter
sarl
fxch
shlb
push
sub
pop
add
add
push
lea
push
push
call
sbb
shr
bound
add
fistl
jbe
gs
lret
pop
aam
out
add
add
test
jmp
pop
addb
lcall
fs
outsl
rcrl
test
xchg
pop
nop
xchg
add
add
icebp
push
cmpsl
add
scas
mov
push
add
sahf
add
out
arpl
add
sub
pop
mov
push
push
push
push
push
push
call
add
mov
push
call
lahf
imul
incb
cld
ja
add
pop
popf
add
add
add
data16
mov
mov
add
mov
std
add
popf
add
js
add
add
add
movsl
gs
mov
std
fs
gs
lods
add
add
sub
pop
xor
push
lea
push
push
push
push
push
lea
push
push
push
push
call
add
mov
call
idiv
add
mov
out
add
jno
aam
lret
add
scas
fildl
lods
mov
popf
add
xchg
add
mov
mov
fiaddl
mov
push
add
xchg
sub
pop
add
push
push
sub
not
push
and
add
sub
sub
sub
pop
sub
add
pop
push
push
push
lea
push
push
push
push
call
add
sbbl
cld
push
mov
fsubrl
rorl
data16
fsubl
add
nop
sbb
rcrl
add
lret
pop
mov
add
push
in
pop
add
and
popf
pop
add
add
mov
mov
pop
pushl
call
push
push
push
push
push
lea
push
push
lea
push
push
push
call
pop
mov
add
out
add
add
add
movl
cmpsl
sarl
push
add
push
outsl
jo
movsl
rcl
add
add
mov
mov
mov
rolb
mov
add
add
clc
add
mov
sub
pop
mov
push
push
push
push
push
lea
push
push
push
call
pop
call
xchg
pop
add
insb
rclb
call
testb
iret
add
jnp
mov
push
cli
add
out
mov
add
pop
add
add
add
add
add
add
in
loopne
movl
lea
push
push
lea
push
push
push
push
push
push
call
jbe
subl
lret
add
jns
scas
add
pop
add
jo
stc
push
rcl
data16
clc
add
bound
pop
lret
sbb
add
push
cwtl
xchg
mov
jnp
add
popa
mov
sub
pop
push
push
push
call
mov
addb
add
add
ror
leave
pop
add
fbld
mov
popa
add
mov
add
add
add
push
add
cltd
add
add
add
nop
add
jbe
xchg
add
test
shll
js
add
add
add
jne
push
push
push
push
push
call
mov
add
add
pushf
int3
add
pushf
xchg
cli
add
lods
je
lret
mov
add
push
mov
cld
mov
add
in
add
add
add
mov
fiaddl
add
mov
pop
pop
mov
pop
mov
in
in
pop
pushl
call
push
push
lea
push
push
push
push
push
push
call
add
add
add
rolb
pop
insb
lock
cmpsl
popf
add
add
faddl
outsl
iret
std
add
imul
lcall
lock
rolb
add
repnz
fdivrl
movsb
pop
mov
subl
mov
add
movsb
add
mov
pushl
push
lea
push
push
push
lea
push
push
call
popa
roll
jp
popa
add
lret
add
jno
mov
mov
cltd
add
iret
hlt
add
fistl
add
add
add
stos
popl
add
mov
cwtl
xchg
add
mov
mov
add
in
orw
pop
pushl
push
push
push
push
lea
push
call
sarb
mov
push
lret
add
add
add
scas
aad
xchg
add
add
fstpl
aam
in
add
add
xchg
in
out
xchg
pop
add
lcall
dec
aas
add
push
push
sub
inc
push
push
pop
add
lea
add
sub
shl
not
not
inc
pop
add
pop
push
push
call
add
add
std
icebp
std
pop
in
call
add
add
gs
xchg
add
test
add
loope
xorb
add
add
movsl
lea
mov
mov
ljmp
out
shrb
add
scas
add
mov
in
mov
sub
pop
pushl
push
push
call
add
stos
add
jecxz
test
add
add
xchg
popl
add
scas
jbe
sub
mov
arpl
fs
add
mov
add
gs
add
add
push
out
mov
add
ret
add
add
add
xchg
mov
scas
mov
add
ror
sub
pop
call
push
push
lea
push
push
push
push
push
push
push
push
call
fadds
out
add
mov
addb
sti
mov
jecxz
push
add
pop
leave
add
push
test
add
movsl
shll
arpl
add
add
mov
add
add
add
add
jmp
movl
pop
cmc
add
sub
pop
push
push
push
inc
add
xor
push
xor
add
add
sub
sub
sub
sub
pop
ror
not
add
pop
push
lea
push
call
mov
incb
cmpsb
out
ret
into
mov
arpl
push
out
jae
shrl
jae
xchg
add
add
jne
pop
js
fmuls
clc
pop
push
push
push
push
push
push
push
push
push
push
call
aad
mov
add
mov
add
filds
add
add
jne
add
enter
notb
mov
scas
add
filds
push
out
cmpsl
xchg
add
add
add
add
sbbl
jl
add
test
add
subl
add
add
pop
push
in
fcompl
add
rclb
stc
loop
cmp
and
xchg
lea
push
push
push
call
add
fistpl
add
mov
pop
xchg
mov
add
imul
add
add
add
mov
ja
jbe
add
ret
add
sub
pop
mov
push
push
push
call
add
add
add
pop
add
pushf
fwait
add
push
add
into
add
stos
mov
add
jns
add
stc
add
add
cwtl
call
add
add
add
cltd
jb
cmp
loopne
stos
je
mov
xchg
mov
testl
lahf
movsl
aas
fcoml
shr
pop
add
add
pusha
out
pushf
mov
aad
add
fwait
mov
int3
mov
mov
add
jae
add
cld
jne
add
lret
loope
add
mov
add
add
add
add
mov
add
push
jp
add
add
add
jmp
push
push
push
lea
push
push
push
call
mov
add
mov
add
add
add
mov
mov
hlt
jb
jno
add
ret
into
out
movsb
imul
add
sub
pop
mov
push
push
push
push
push
push
push
call
add
add
idivb
add
add
add
sahf
lahf
add
add
shlb
add
hlt
add
int3
cld
fs
add
mov
add
add
popf
add
in
imul
insb
mov
sub
pop
add
push
push
lea
push
push
push
lea
push
push
lea
push
push
call
add
ret
gs
stc
mov
xchg
add
add
out
jbe
imul
add
cmc
pop
xchg
add
scas
lahf
add
add
fdivr
lcall
ret
add
add
push
push
lea
push
push
push
push
call
add
cwtl
mov
jo
fstpl
push
add
int3
lret
xchg
mov
xlat
testb
add
cmp
jbe
stos
dec
add
mov
push
add
out
add
xchg
jge
add
xchg
aad
popf
fidivrs
shll
add
sbbl
mov
add
ret
add
add
mov
push
push
push
push
push
call
test
movsb
add
add
in
cmpsb
roll
add
add
ficoml
mov
add
mul
xchg
aad
faddl
mov
loope
add
mov
add
mov
bound
sub
pop
mov
push
push
push
push
push
call
push
jbe
mov
sahf
out
loop
in
pusha
in
repnz
stc
add
add
push
mov
add
add
addb
sub
pop
xor
push
push
push
push
push
lea
push
push
push
lea
push
lea
push
call
in
lahf
cli
lea
fadd
add
push
fistl
add
mov
jno
mov
fdivrs
add
mov
imul
push
stc
add
mov
pushf
mov
scas
lds
mov
sub
pop
add
push
push
lea
push
lea
push
call
flds
call
mov
cli
rcll
jmp
mov
rolb
repnz
cli
add
add
stos
loop
push
sahf
add
popa
cld
notb
les
pusha
xchg
add
mov
movb
outsl
add
sub
pop
add
push
push
lea
push
push
push
push
call
ljmp
xchg
add
mov
test
add
lret
sahf
xchg
add
pushf
ret
imul
shl
jp
ficomps
fadd
add
mov
cld
testl
sub
pop
push
push
push
call
push
fwait
roll
ja
mov
add
mov
add
jmp
pop
add
add
add
out
test
add
fiadds
mov
add
push
cmpsb
add
xchg
imul
inc
or
lods
mov
push
push
push
push
push
lea
push
push
push
call
aam
add
lcall
add
add
add
popf
add
push
mov
rcll
lods
push
jns
add
cmpsl
mov
add
xchg
icebp
lock
add
loopne
add
jp
jmp
mov
add
popf
add
add
aad
lods
jbe
add
mov
lcall
and
lea
push
push
lea
push
call
add
add
in
test
add
data16
add
add
test
add
add
add
add
add
jle
pop
fidivrs
add
add
lock
scas
add
movl
jmp
call
lods
add
jl
addr16
jns
add
js
mov
in
lock
add
push
lea
push
push
lea
push
lea
push
push
push
push
call
shlb
mov
repnz
addr16
fdivl
add
add
push
enter
fiadds
add
add
in
loopne
lcall
lock
push
push
push
push
push
call
push
xchg
repnz
xchg
aam
lods
lods
bound
add
incb
add
add
rcll
add
mov
xchg
mov
ret
mov
jle
add
add
data16
fadds
jecxz
mov
push
ljmp
mov
add
pop
push
push
push
lea
push
lea
push
call
jno
add
jle
jl
add
push
add
jl
lret
fwait
mov
pushf
aam
lods
icebp
test
js
scas
add
add
add
lahf
mov
lret
add
add
add
fdiv
in
ja
pop
in
add
fistl
pop
mov
add
fldenv
in
in
lcall
dec
add
icebp
lret
lods
mov
lea
push
push
push
push
push
push
push
call
sahf
add
fadd
mov
add
sti
cltd
add
add
add
add
outsl
xchg
add
mov
add
mov
roll
lcall
push
push
call
add
mov
add
ret
rol
add
into
int3
mov
add
movsb
add
add
pop
insb
xchg
add
data16
into
jl
add
mov
add
test
add
rolb
sub
pop
mov
xor
push
lea
push
push
push
push
lea
push
push
lea
push
call
cld
cmpsb
mov
add
loop
movsl
add
add
add
add
in
add
into
mov
mov
jno
add
xchg
sti
imul
enter
call
add
add
xchg
add
leave
add
jmp
loop
mov
add
add
mov
jp
ret
push
add
in
clc
lcall
push
lea
push
push
call
add
cmpsl
add
push
add
add
add
fwait
rcr
lds
jb
test
add
or
add
cwtl
out
add
add
rep
push
push
push
push
push
push
push
lea
push
push
lea
push
call
xlat
add
fcoms
mov
fiaddl
pop
mov
fwait
mov
add
add
std
add
loopne
add
xchg
iret
int3
add
add
mov
test
scas
mov
repnz
nop
add
bound
add
js
in
fdivr
lcall
push
push
push
lea
push
push
lea
push
push
push
lea
push
call
add
insb
mov
add
addr16
mov
xchg
jbe
jl
ja
bound
stos
add
mov
add
mov
out
add
repnz
add
stc
add
js
jae
popl
sub
pop
mov
push
push
push
lea
push
push
push
lea
push
push
call
xlat
ja
jnp
add
mov
fisttpll
stos
add
add
sti
add
add
fistps
mov
jne
jno
jae
add
add
add
fildl
cli
add
add
scas
mov
add
fs
add
loopne
rol
sub
pop
add
push
lea
push
push
push
call
add
add
add
mov
jecxz
add
add
add
into
add
fwait
add
xchg
add
sub
pop
add
push
push
lea
push
call
add
loop
mov
out
add
mov
jnp
xchg
add
int3
fcmovb
data16
mov
aad
xchg
shl
add
add
pushf
add
fxam
add
sub
pop
add
mov
xor
push
push
push
lea
push
push
lea
push
lea
push
push
push
call
enter
add
les
bound
add
clc
stos
add
mov
mov
out
pop
add
xchg
mov
sarl
popa
add
add
lret
xchg
add
loop
sub
pop
mov
push
push
push
push
lea
push
push
push
push
push
push
push
call
pop
sahf
roll
push
push
add
pop
add
add
imul
add
fiaddl
add
ljmp
add
in
loop
push
add
sub
add
rol
xchg
add
add
mov
add
sahf
add
add
add
lcall
adc
push
push
lea
push
call
roll
scas
add
add
mov
add
add
add
rcrb
loop
fcmovnb
flds
cmpsl
mov
fldl
mov
flds
sub
pop
add
push
ror
pop
mov
push
push
lea
push
push
push
lea
push
lea
push
push
lea
push
push
call
scas
repnz
leave
int
jnp
addr16
movsb
out
out
jle
lret
add
jp
lcall
lods
add
cli
mov
add
sub
pop
xor
push
push
push
push
push
lea
push
push
lea
push
push
call
les
iret
test
push
lds
mov
add
add
push
popf
add
push
add
sti
add
test
mov
pushf
pop
mov
add
out
add
add
cltd
mov
lcall
les
lea
push
push
push
lea
push
call
sahf
add
mov
add
data16
ja
arpl
rcr
testl
mov
enter
add
add
iret
add
add
xlat
mov
jno
out
xchg
add
add
mov
in
jae
push
add
add
sub
pop
add
push
xor
dec
sub
pop
add
mov
push
push
push
sub
add
sub
sub
inc
shl
sub
pop
xor
pop
push
push
push
push
lea
push
call
gs
add
push
push
add
add
push
cld
mov
add
test
mov
test
add
xchg
add
repnz
jo
add
add
add
add
lcall
jne
push
push
push
lea
push
push
lea
push
push
call
outsl
push
rclb
lcall
add
xchg
aad
add
add
add
add
add
repnz
add
insb
add
lret
popa
pop
sub
pop
call
push
push
push
ror
not
push
and
add
sub
sub
xor
pop
lea
add
add
lea
pop
push
lea
push
push
push
push
call
test
popf
fs
add
add
mov
jbe
add
push
add
pop
mov
xchg
xchg
add
add
rolb
mov
add
add
scas
add
mov
out
stos
sub
pop
push
push
add
sub
shr
pop
push
call
push
lea
push
lea
push
push
push
push
push
push
push
call
jne
add
roll
test
popa
int3
add
mov
add
push
add
add
movsl
add
test
add
mov
add
add
out
loopne
ljmp
add
pusha
ret
add
add
lcall
clc
push
push
call
add
clc
cmpsb
add
add
push
add
out
add
add
add
bound
js
aam
movsl
cwtl
pop
je
add
add
add
out
add
scas
add
add
pop
fadds
pop
add
in
les
test
jno
imul
add
shlb
lcall
push
push
push
push
push
push
lea
push
push
push
push
call
add
mov
call
add
pusha
jmp
mov
mov
cld
lods
mov
add
movsb
pusha
jecxz
mov
mov
add
ljmp
mov
movl
hlt
push
lea
push
push
push
push
push
push
push
push
call
outsl
lods
mov
add
add
test
int
add
add
data16
add
mov
mov
jns
loopne
add
arpl
mov
jl
add
add
xchg
jno
stos
fwait
add
xchg
add
add
cmpl
pop
add
add
f2xm1
les
fnstcw
mov
in
fcompl
pop
in
push
shl
pop
add
push
push
lea
push
push
push
push
call
jno
add
pusha
cmc
add
add
cmc
add
les
jmp
push
icebp
add
add
rcll
cmc
cmpb
xchg
lahf
in
cltd
scas
add
add
push
push
push
push
push
lea
push
push
push
push
push
call
add
xchg
je
sub
stc
add
add
lret
jo
pop
add
arpl
push
add
add
faddl
add
add
add
jae
xor
push
pop
add
push
push
push
push
lea
push
lea
push
push
push
call
add
mov
add
js
fimuls
push
add
and
cmpsl
xchg
add
add
mov
add
add
add
add
pop
out
call
loope
add
xchg
mov
loope
push
add
add
aam
mov
push
sub
pop
push
mov
xor
push
push
push
call
add
fiadds
clc
add
ja
push
mov
lahf
push
jb
push
add
mov
pop
add
mov
jp
in
ja
add
nop
enter
lahf
xchg
popa
add
lcall
add
add
cld
pop
scas
add
mov
sub
pop
add
push
shl
pop
pop
mov
push
push
push
push
lea
push
call
add
pop
mov
fstp
je
flds
push
pop
add
add
fildl
add
add
jp
cwtl
int
fcmovne
enter
add
jmp
sub
pop
xor
push
push
call
scas
xchg
add
add
lret
mov
add
jns
lods
add
rcrl
xchg
outsl
in
push
push
add
add
add
jb
fcoml
add
xchg
into
add
cmc
jle
add
xchg
add
xchg
push
add
add
xchg
add
add
add
les
add
push
lea
push
push
push
push
push
push
push
push
push
call
outsl
add
jl
add
mov
test
mov
mov
pop
jb
cmpsl
push
add
add
add
lods
fistpll
fidivrl
add
xchg
js
scas
hlt
repnz
add
in
add
sti
pop
pop
mov
add
out
movb
jp
add
loopne
fs
pop
add
add
enter
mov
jge
hlt
jo
sub
pop
rep
mov
xor
push
push
push
lea
push
push
push
lea
push
lea
push
call
cmc
add
out
add
mov
fldl
je
jle
add
jp
pop
mov
jne
ljmp
mov
in
loopne
or
je
push
lea
xor
pop
mov
push
push
lea
push
push
push
push
lea
push
lea
push
push
push
push
call
std
pop
add
add
jae
add
add
out
mov
add
add
add
in
jl
out
mov
mov
mov
pop
push
stos
xchg
pop
add
add
add
add
add
js
pop
js
fldl
add
loopne
add
add
add
lock
pop
push
mov
sub
pop
xor
push
push
push
push
push
call
add
pop
add
add
push
shl
add
add
movsb
lods
lods
cmc
mov
data16
add
leave
mov
add
push
pop
test
add
xchg
jae
repnz
add
fsubrl
roll
fildl
js
add
enter
lcall
les
xor
pop
mov
push
push
push
push
call
add
mov
movsl
mov
mov
add
add
sahf
fcomps
add
iret
test
stos
add
add
push
add
stos
scas
sub
pop
xor
push
push
push
push
lea
push
push
lea
push
push
push
call
mov
int3
jno
add
add
add
add
add
insb
fwait
add
add
mov
popf
mov
add
gs
fadds
jecxz
add
add
pop
push
negb
sahf
iret
jne
add
add
popf
nop
sub
pop
add
push
inc
rol
rol
shr
pop
add
push
ror
ror
add
pop
add
push
push
push
push
lea
push
lea
push
push
push
push
push
call
push
scas
add
in
fidivl
add
jnp
data16
xchg
add
movsl
test
add
add
add
shrb
cld
mov
loop
add
push
lods
imul
outsl
pop
mov
insb
test
test
mov
jmp
add
push
xchg
add
clc
add
add
add
jns
pop
add
sub
pop
push
mov
xor
push
push
push
push
push
push
call
fisubrl
add
mull
xchg
add
jb
rcr
add
add
push
icebp
mov
add
add
lcall
lock
push
lea
push
push
push
push
push
lea
push
push
push
call
jl
add
mov
jno
push
add
nop
add
add
pusha
push
xchg
add
jecxz
add
jbe
add
add
add
in
add
int
out
cmc
jmp
add
jnp
test
js
add
jmp
in
fcomps
push
push
push
push
push
lea
push
push
push
lea
push
push
call
test
push
outsl
in
jle
mov
lcall
add
add
add
addr16
ja
arpl
add
push
cwtl
jmp
add
mov
add
lcall
add
add
mov
int
add
lcall
lcall
loope
in
fcomps
movsb
push
shl
rol
pop
mov
push
push
push
push
push
lea
push
push
lea
push
push
call
push
add
pusha
add
int
jne
add
icebp
mov
mov
shlb
add
cltd
add
fadds
add
rorl
add
add
fldl
add
add
add
add
add
cmpsl
push
testb
popa
lds
fs
add
in
hlt
add
lcall
or
push
push
push
push
call
add
loopne
pop
push
push
cmc
add
icebp
data16
xchg
mov
pusha
add
push
add
fstl
stc
add
jp
push
jb
shlb
add
stc
sbbb
mov
jnp
gs
add
in
lock
add
push
xor
add
sub
add
pop
or
je
push
shl
pop
mov
add
push
push
lea
push
push
push
push
call
mov
les
into
popa
popf
movl
imul
div
nop
shrl
mov
jl
pusha
out
add
mov
in
call
add
push
shl
pop
rep
pop
push
push
inc
shl
rol
sub
push
or
not
add
sub
shl
ror
not
pop
sub
pop
push
add
add
sub
pop
pop
push
push
push
push
push
push
push
call
popl
mov
mov
push
add
add
ja
cwtl
insb
incb
add
rolb
mov
mov
fmul
add
les
add
push
xchg
pop
sub
pop
mov
push
xor
rol
inc
dec
pop
mov
mov
push
shr
rol
lea
pop
jmp
push
lea
push
lea
push
push
push
lea
push
push
lea
push
lea
push
lea
push
call
add
data16
test
roll
mov
add
add
add
mov
into
add
add
addr16
lcall
add
xchg
add
loope
add
andl
in
fdivr
lcall
mov
push
push
push
push
push
push
lea
push
call
add
jnp
test
add
scas
jo
push
nop
into
jnp
add
insb
add
add
add
xchg
loopne
js
add
pop
int
rcr
sub
pop
add
push
inc
sub
add
dec
pop
push
push
lea
push
push
push
call
add
rcll
lds
jle
add
les
add
aam
clc
insb
imul
pop
mov
add
in
lock
lcall
push
add
sub
shl
pop
push
push
push
lea
push
push
push
push
push
lea
push
push
call
mov
add
mov
jmp
ficomps
xchg
testb
add
pop
xchg
pop
jns
ljmp
loope
add
out
jb
add
pop
cli
add
add
add
add
lcall
mov
push
push
push
push
lea
push
push
call
stos
add
andb
test
stc
jnp
add
into
je
in
sarl
add
sahf
hlt
push
mov
add
add
jo
pop
add
addb
jmp
insb
filds
lcall
push
add
lea
inc
sub
pop
pop
push
push
push
call
test
fldl
mov
mov
add
test
add
fstl
add
add
rolb
add
jbe
shrb
stc
add
js
add
add
mov
nop
add
add
in
hlt
lcall
push
push
push
push
push
push
lea
push
push
push
lea
push
call
mov
jnp
repnz
popa
into
fstps
add
add
mov
add
enter
xchg
cmpsb
add
add
lds
lahf
fiadds
xchg
add
lcall
leave
push
lea
push
push
push
call
add
add
addl
out
scas
shrl
enter
loopne
add
stos
mov
add
add
jp
mov
mov
add
addl
fs
mov
add
bound
imul
add
out
mov
scas
imul
add
lock
lcall
or
push
push
lea
push
lea
push
lea
push
push
call
add
jmp
add
add
outsl
popl
add
mov
xchg
add
add
add
idivb
mov
jecxz
stos
clc
add
add
int
add
adc
orb
call
out
rolb
add
sub
pop
push
mov
push
push
call
shll
add
fcomip
add
add
add
xchg
shl
bound
add
enter
add
jge
xchg
cli
pop
add
scas
add
sub
pop
add
push
shl
lea
ror
pop
push
push
push
call
add
les
nop
mov
add
add
jmp
push
cld
mov
mov
in
addl
add
pusha
add
add
lods
clc
add
add
cmpsl
je
aad
mov
fildl
add
fiadds
add
add
jp
add
mov
add
add
add
sub
pop
push
push
push
push
push
push
push
call
testb
call
add
xchg
cwtl
mov
aam
add
add
mov
add
stc
add
mov
lahf
add
ret
lock
out
addl
test
mov
lcall
addr16
pop
push
push
lea
push
push
push
push
push
lea
push
push
push
call
mov
add
lock
add
cltd
add
add
add
stos
lock
stos
mov
gs
mov
add
sti
ljmp
pop
add
in
fdivr
lcall
inc
cld
add
add
addl
push
push
lea
push
lea
push
call
mov
add
add
add
add
jmp
add
push
add
add
xorl
movsl
adc
lds
outsl
mov
mov
push
add
cmpsl
pop
jns
mov
add
add
lcall
rorb
push
add
mov
push
lea
push
lea
push
push
call
add
mov
add
sbbl
mov
jbe
pop
xlat
add
jmp
jae
mov
mov
add
lahf
mov
mov
push
xchg
jmp
pop
xchg
pop
push
ret
mov
sub
pop
pop
push
lea
push
push
push
push
push
push
lea
push
push
push
call
mov
pusha
xchg
jp
cli
fidivrs
add
cmpsl
mov
int3
testl
add
test
add
jno
fs
add
je
lods
push
jle
add
add
jbe
add
add
mov
add
add
imul
out
lock
faddl
xchg
add
fs
test
mov
add
pop
push
pop
pop
push
xor
pop
leave
push
rol
pop
ret
push
sub
shl
ror
add
pop
push
mov
push
add
rol
add
pop
add
push
lea
push
push
call
lret
jl
add
add
add
push
jle
mov
add
add
lahf
movb
stc
sub
pop
push
push
push
push
lea
push
push
push
lea
push
push
call
jnp
out
hlt
add
ret
addb
lods
add
outsl
add
xorl
insb
add
lcall
xchg
fadds
add
lcall
push
inc
rol
pop
push
push
push
shr
pop
testl
push
xor
pop
addl
push
push
lea
push
push
push
push
push
lea
push
push
call
add
mov
hlt
add
add
add
mov
cmpsb
mov
xchg
lods
out
in
mov
leave
mov
roll
rolb
add
mov
popf
pop
jbe
aam
pop
stc
pop
add
lods
mov
xchg
lcall
add
pop
call
push
push
call
push
add
add
lods
push
sahf
aad
hlt
add
push
add
sahf
cltd
xorb
cwtl
stc
add
jle
lods
lcall
add
add
lahf
add
mov
push
jbe
loope
mov
test
mov
movsb
loop
cmpsl
xchg
aam
in
add
jmp
imul
clc
pop
mov
push
push
push
push
call
add
add
bound
js
flds
rol
add
mov
lods
aad
add
addr16
idiv
scas
lret
bound
push
shrb
ljmp
sarb
lcall
jne
push
push
shr
lea
dec
pop
push
push
push
push
lea
push
push
push
lea
push
push
push
call
arpl
scas
add
test
mov
mov
add
shl
arpl
outsl
add
mov
arpl
jmp
sub
pop
call
push
push
lea
push
lea
push
call
add
xchg
stos
add
int3
add
push
add
pop
add
add
add
add
add
popa
push
add
hlt
aad
add
jge
add
test
std
call
test
adc
mov
sub
dec
push
call
in
pop
mov
add
mov
add
int
jb
into
add
mov
mov
xchg
add
loopne
jae
mov
test
xchg
add
pushf
lods
mov
xchg
pop
add
add
pop
nop
xchg
mov
movsl
add
rcl
call
pop
push
push
lea
push
push
push
push
push
call
pop
leave
enter
xchg
add
mov
rolb
xlat
add
add
add
cmpsl
add
pop
add
xchg
jmp
add
hlt
jae
pop
jl
add
cltd
pop
scas
add
push
fidivl
add
push
shr
pop
pop
pop
push
pop
leave
push
dec
dec
pop
ret
push
push
lea
push
push
push
lea
push
push
push
lea
push
push
push
call
imul
scas
iret
jge
push
pop
fidivl
add
add
fs
mov
fnstcw
xchg
loopne
mov
fsubrl
add
stc
mov
stos
enter
into
add
jmp
addl
jo
add
mov
add
add
imul
lcall
in
push
push
push
push
push
call
add
add
lcall
mov
lret
add
xchg
aam
push
add
add
ljmp
add
lcall
cld
push
sub
pop
push
push
sub
add
pop
push
push
push
push
push
call
add
add
hlt
add
add
mov
out
into
cli
add
je
jp
push
push
add
add
add
jecxz
in
lock
push
push
push
call
xchg
add
iret
pushf
mov
filds
add
movsl
push
add
add
add
add
mov
add
popf
fs
add
sub
pop
push
push
push
push
push
push
push
push
lea
push
call
add
cwtl
add
add
xchg
pusha
add
add
fwait
add
add
hlt
add
add
add
repnz
mov
jns
lods
roll
pusha
outsl
rcr
add
popf
popa
add
inc
cld
or
add
push
push
lea
push
push
push
lea
push
lea
push
push
push
lea
push
push
call
add
add
add
adc
add
add
icebp
aam
add
lods
add
int
divl
lea
mov
arpl
fdivs
je
add
add
stos
add
jecxz
add
scas
lea
jnp
push
cwtl
add
add
bound
loopne
add
sub
pop
call
push
push
push
push
push
push
push
call
in
fs
mov
add
add
test
add
add
jnp
add
js
add
lods
arpl
stc
add
add
add
mov
mov
stos
mov
les
lods
mov
mov
in
push
push
xor
xor
pop
call
push
sub
shr
pop
subl
push
add
xor
pop
cmpl
jne
pop
push
push
push
lea
push
push
lea
push
push
push
push
call
in
cltd
fwait
add
add
mov
jne
add
add
add
push
scas
popf
push
test
out
add
in
fs
add
add
jb
jbe
push
add
fdivp
push
add
add
add
add
add
xchg
add
xchg
lcall
push
lea
push
push
push
lea
push
push
lea
push
push
push
push
call
rcrl
add
insb
add
mov
add
lock
jmp
les
add
add
scas
jmp
add
add
int
add
add
pop
add
pop
mov
nop
add
pop
add
out
add
cld
cltd
test
add
lcall
pop
push
not
pop
leave
ret
push
lea
push
push
call
add
jmp
mov
add
add
mov
mov
add
fwait
add
push
add
mov
add
test
add
add
imul
xchg
add
pop
push
push
sub
pop
mov
push
push
call
xchg
add
arpl
fildll
lahf
add
add
enter
add
repnz
jb
cmpsl
hlt
jmp
jecxz
jns
add
add
xchg
call
add
movsb
add
rcl
push
notl
add
int3
arpl
add
shlb
mov
mov
popf
into
rolb
lcall
cld
push
push
push
lea
push
lea
push
lea
push
call
mov
xchg
call
mov
add
add
fs
add
pop
rolb
shr
repnz
pop
jle
jp
roll
arpl
push
in
enter
mov
jns
add
call
lea
push
push
push
push
push
push
call
aam
add
cmpsb
add
add
add
std
movsb
add
mov
add
fdiv
add
add
xchg
add
lret
add
cld
add
les
int3
lods
push
jmp
out
cli
add
cwtl
loope
sti
fs
icebp
add
add
pop
push
push
push
push
lea
push
or
not
add
add
sub
add
sub
ror
pop
shl
pop
push
push
push
push
push
push
push
call
call
jecxz
bound
xlat
add
fldl
mov
add
add
add
push
add
movb
add
mov
pusha
into
add
add
add
mov
cmpb
add
aad
nop
push
add
add
add
nop
enter
add
in
pushl
push
pop
call
push
push
push
push
push
lea
push
push
push
call
movsb
mov
div
mov
lods
mov
cld
xchg
jp
add
in
ja
lds
jmp
add
add
add
lods
out
add
add
mov
add
xchg
add
add
add
push
add
add
add
add
xchg
add
add
shrb
out
mov
cmpb
add
sub
rol
rol
sub
sub
lea
pop
ror
pop
push
shr
ror
pop
pushl
push
push
push
push
call
xchg
iret
add
add
popa
lods
mov
add
add
push
add
enter
xlat
loop
lret
incb
lcall
ret
aaa
add
call
push
lea
push
lea
push
push
push
push
push
lea
push
push
push
call
lock
stc
cld
add
add
xchg
add
gs
add
mov
jns
aam
test
mov
popa
add
aam
les
lcall
inc
or
inc
cmp
push
push
call
add
into
ficomps
add
add
add
push
add
je
fcom
lahf
in
sub
xchg
insb
add
push
push
fwait
add
xchg
add
hlt
mov
hlt
pop
sub
push
inc
ror
pop
mov
push
push
push
push
lea
push
push
call
aam
mov
add
add
loope
popf
test
clc
movb
cwtl
pop
pop
pop
test
jmp
add
add
lea
xor
sarb
add
jae
fprem
scas
icebp
push
add
add
add
add
add
mov
roll
lcall
call
test
rorb
adc
leave
jno
sbb
lea
push
lea
push
call
add
mov
testb
pop
jge
jmp
add
iret
xchg
mov
mov
add
add
add
mov
lcall
inc
or
inc
cld
push
lea
sub
shr
dec
pop
mov
push
not
pop
add
push
lea
push
push
push
push
push
call
add
add
iret
add
mov
xchg
shr
cli
mov
mov
xchg
clc
add
mov
add
stc
mov
cltd
jb
add
add
add
add
pop
add
mov
push
xor
pop
mov
cmp
jne
push
lea
push
lea
push
lea
push
push
push
push
push
call
in
add
jl
jp
sahf
jo
add
addb
ja
cltd
rolb
mov
add
mov
bound
jnp
add
add
incb
lcall
cwtl
fadds
add
jne
push
push
push
push
push
push
push
push
call
add
cmpsl
add
test
add
mov
sti
pop
add
faddl
mov
rolb
stos
xchg
mov
mov
add
mov
add
xchg
add
in
add
add
add
jle
push
addr16
pop
movsb
mov
mov
xchg
xchg
jl
add
sub
pop
mov
push
push
lea
push
push
call
add
jb
add
add
clc
add
mov
add
pushf
add
loope
roll
out
add
test
in
add
mov
fadds
jo
add
add
lock
movl
jmp
push
pop
mov
mov
push
shr
pop
sub
jne
mov
push
pop
movl
jmp
push
ror
pop
mov
mov
push
push
lea
push
push
push
push
lea
push
call
pop
add
mov
flds
loopnew
mov
cld
add
add
aad
push
push
jle
add
add
pop
cmp
jne
push
push
push
push
push
push
push
call
fidivrs
popa
jp
add
jge
lahf
add
add
lahf
push
mov
add
add
addr16
add
add
std
add
ret
add
je
add
add
lods
leave
rcl
sub
pop
mov
movl
push
push
push
push
call
add
add
mov
jge
in
add
cwtl
lock
add
rolb
add
pop
add
imul
push
add
xchg
add
add
add
jmp
imul
mov
in
lock
jmp
push
push
push
push
push
push
push
call
fiaddl
sahf
jo
cmpsl
aad
add
pushf
cli
add
add
jecxz
nop
xchg
add
jle
add
sahf
jnp
aad
ret
add
mov
cld
cli
sub
pop
mov
push
push
push
push
lea
push
push
lea
push
call
cmpsb
cli
jecxz
jbe
out
stos
xchg
jmp
add
push
out
add
add
push
cwtl
mov
pop
add
rcrl
jl
push
push
stos
add
jb
xchg
add
mov
add
fildl
push
pusha
mov
std
add
add
lods
jae
fldenv
pop
cmpw
jne
push
push
call
test
xlat
add
mov
mov
stc
jbe
add
push
push
mov
mov
add
add
test
mov
add
loop
scas
push
add
pop
jnp
mov
lea
add
xchg
add
add
lcall
inc
adc
add
lea
pop
jmp
push
dec
pop
pushl
push
push
push
push
lea
push
push
push
lea
push
push
push
call
shlb
arpl
stc
into
fiadds
add
add
sti
popa
add
jmp
icebp
xchg
movsb
add
repnz
add
add
mov
add
mov
add
rclb
add
add
pop
add
add
sub
pop
pop
push
dec
xor
sub
pop
mov
mov
push
shr
pop
mov
push
push
add
push
sub
add
ror
add
add
sub
rol
shr
lea
pop
pop
push
add
pop
push
push
push
push
push
push
call
movsl
add
pop
add
je
pop
test
add
loope
add
add
jb
loope
add
cld
mov
add
in
add
mov
add
cmc
add
lcall
mov
add
push
add
pop
cmpl
je
push
push
rol
shl
sub
push
and
add
not
sub
rol
sub
shl
shr
xor
add
pop
sub
pop
push
push
lea
push
push
push
call
icebp
add
push
add
scas
push
mov
xchg
aam
lods
mov
loope
into
jmp
add
loope
fs
mov
jo
rcrl
add
fxch
add
cwtl
add
add
mov
push
lods
add
mov
sub
pop
push
push
lea
push
lea
push
push
push
push
lea
push
lea
push
push
lea
push
call
add
mov
jmp
add
test
jle
mov
xchg
add
add
add
test
mov
jno
rolb
add
add
lahf
popf
add
add
add
lahf
add
fldl
mov
add
add
fiaddl
jb
into
ljmp
out
push
mov
andl
xchg
inc
das
add
push
lea
push
lea
push
push
push
lea
push
push
push
call
add
js
add
mov
add
mov
mov
loopne
pop
jae
test
add
mov
stc
push
add
add
add
jne
mov
add
add
add
xlat
add
adcl
loopne
cmpl
je
push
push
add
push
xor
add
dec
rol
not
sub
not
lea
shl
pop
rol
pop
push
sub
dec
pop
push
push
inc
add
pop
call
push
push
call
add
push
add
add
add
into
mov
mov
scas
lret
jle
add
lcall
in
out
cmpsl
add
ror
add
fcomip
jmp
popf
mov
add
cmp
or
int3
je
push
push
shr
add
not
push
or
not
add
ror
not
sub
sub
add
inc
dec
pop
shr
rol
pop
push
xor
sub
pop
push
push
push
push
lea
push
push
push
push
push
call
mov
add
jecxz
jbe
add
add
loop
imul
mov
add
in
in
pop
add
mov
test
bound
fidivl
add
nop
mov
push
add
not
pop
mov
add
add
mov
mov
call
push
add
add
inc
inc
pop
cmpl
je
push
push
add
push
sub
add
sub
add
add
sub
lea
shl
pop
pop
push
lea
push
call
cli
add
add
add
add
add
add
popa
pop
bound
jne
add
fiadds
add
jo
add
rolb
sahf
not
rcrb
scas
jmp
mov
add
xchg
fldenv
test
cmc
hlt
add
push
push
push
push
push
push
push
push
call
mov
push
ljmp
enter
rcll
add
mov
js
aad
add
movsb
xchg
iret
add
sub
pop
call
cmpl
je
push
push
shr
inc
push
push
pop
add
shl
lea
sub
add
pop
shl
sub
pop
push
push
push
call
test
add
add
data16
add
clc
add
cld
add
mov
jnp
cltd
jle
filds
mov
pop
movsl
divb
loopne
lods
add
js
add
add
add
cwtl
xorl
jbe
popa
jnp
out
add
sub
pop
push
push
dec
pop
call
cmpl
je
push
push
shr
push
sub
add
not
sub
shr
dec
inc
pop
ror
pop
push
shl
sub
xor
pop
push
push
not
pop
call
push
lea
ror
pop
cmpl
je
push
push
lea
xor
shl
lea
push
push
pop
add
shr
rol
sub
add
sub
shl
sub
pop
xor
not
shl
pop
push
push
push
push
call
add
add
add
add
mov
jle
add
add
add
pop
add
lock
push
push
push
push
push
lea
push
push
push
push
push
push
call
call
fcomip
add
add
mov
mov
test
add
mov
add
cld
jns
add
add
jnp
iret
add
sub
pop
call
push
not
add
not
pop
cmpl
je
push
push
sub
push
sub
add
rol
rol
add
ror
sub
not
pop
inc
pop
push
push
lea
push
lea
push
push
push
push
push
call
testb
add
jne
add
sahf
fcmovu
xchg
fwait
cltd
mov
test
cwtl
mov
lahf
add
lahf
add
loopne
mov
rol
add
jge
add
repnz
into
mov
in
loopne
lcall
push
push
call
add
stos
add
in
add
add
jge
add
addl
pop
mov
add
jbe
add
pop
add
add
add
xchg
mov
add
push
clc
enter
cli
add
add
aam
add
jge
cltd
push
adc
cld
les
sub
pop
call
push
add
lea
inc
add
pop
cmpl
je
push
push
add
dec
lea
rol
push
or
not
add
ror
sub
sub
add
pop
sub
pop
push
push
push
push
lea
push
push
push
call
ja
js
mov
add
mov
add
add
push
cmpsl
add
mov
push
add
xlat
scas
add
add
fists
add
jmp
mov
lcall
push
shl
shl
shl
pop
call
cmpl
jne
push
push
call
jnp
add
outsl
aam
pop
xchg
add
and
test
add
pop
stos
ljmp
movl
add
pop
pop
mov
test
mov
lret
add
out
fiaddl
add
xchg
pop
add
add
add
add
mov
lcall
inc
adc
add
add
add
cld
xchg
ffree
pop
jmp
push
shl
add
pop
xor
pop
push
push
lea
push
push
push
push
lea
push
push
call
mov
movsb
pop
add
mov
add
mov
popa
xchg
insb
insb
cltd
add
add
add
add
add
mov
outsl
out
out
add
imul
add
pop
jnp
add
add
add
scas
xchg
in
add
add
jnp
pop
jge
add
mov
js
sub
pop
pop
push
pop
pop
push
lea
push
push
push
call
mov
add
clc
add
mov
add
mov
jle
cli
ficomps
in
lahf
add
lods
add
add
scas
add
sti
scas
add
push
lea
push
lea
push
push
push
call
imul
mov
add
jmp
add
mov
mov
mov
add
add
pusha
lods
test
jbe
loopne
add
add
loopw
mov
ror
add
add
in
in
pop
leave
push
push
push
push
push
push
lea
push
lea
push
call
stos
test
add
add
pusha
mov
xchg
cmpsb
mov
hlt
mov
gs
insb
pushf
xchg
jmp
movsb
mov
mov
xchg
mov
xchg
mov
jmp
lret
add
arpl
rolb
out
mov
out
sub
pop
ret
push
push
push
lea
push
push
push
lea
push
call
add
test
push
add
mov
add
add
fcmovbe
xchg
pop
push
add
add
lea
mov
in
test
in
cmc
cmc
add
add
add
pop
filds
in
push
lea
push
call
add
mov
fistpll
imul
add
add
fcmovnu
pusha
add
jl
ljmp
mov
lock
scas
add
jb
loope
jae
int3
sar
jl
add
pop
xchg
add
push
lret
in
add
mov
cld
bound
add
push
in
clc
lcall
in
push
push
call
js
add
jmp
sbbb
add
add
add
xchg
add
data16
mov
mov
jl
clc
add
add
movw
mov
add
lret
add
pop
mov
add
fnstsw
mov
add
mov
mov
pop
cmpl
jne
push
push
shr
sub
ror
sub
push
sub
add
ror
rol
ror
sub
sub
xor
rol
sub
pop
inc
sub
pop
push
add
ror
pop
pushl
push
push
push
push
push
push
push
push
push
push
call
add
nop
add
xchg
mov
add
int3
mov
add
cld
add
lcall
cli
xchg
repnz
fildl
fistpll
pop
out
add
fdivr
lcall
int
add
push
lea
pop
push
push
rol
xor
pop
call
jmp
push
not
pop
cmpl
jne
mov
push
lea
push
push
lea
push
push
lea
push
call
add
fnstenv
mov
pop
xchg
add
add
add
stos
push
push
add
add
roll
jp
push
add
lahf
mov
fmul
jne
clc
test
mov
lahf
movb
add
nop
jmp
add
mov
in
add
mov
add
jnp
pop
add
sub
pop
call
ret
push
rol
sub
inc
pop
jmp
push
inc
rol
pop
cmpl
jne
push
push
lea
xor
add
push
xor
add
xor
sub
sub
pop
sub
inc
rol
pop
push
xor
not
dec
pop
pushl
call
push
sub
inc
pop
push
push
push
push
push
lea
push
push
push
lea
push
push
call
flds
idiv
add
add
lahf
add
add
cmpsl
add
add
addb
fiaddl
lret
mov
mov
lea
movsb
movsb
add
call
push
jo
mov
add
add
add
add
rolb
add
pushf
cli
mov
cmpsl
mov
add
mov
jecxz
testl
lcall
shr
jp
add
push
push
push
lea
push
push
call
mov
mov
add
mov
add
lret
add
call
test
add
add
mov
pop
mov
add
lahf
add
mov
add
push
into
mov
shll
leave
repnz
add
xchg
fdivrs
rol
sub
pop
cmpl
je
cmpl
jne
push
push
push
lea
push
push
call
add
jl
out
js
icebp
add
out
jo
add
clc
imul
push
fdivl
add
add
imul
add
add
nop
insb
mov
aam
add
pop
add
add
add
push
xor
xor
lea
pop
mov
push
push
push
push
push
push
call
in
add
sbbl
add
fcmovbe
je
add
movsb
jmp
pop
mov
cmc
add
mov
mov
fiadds
add
add
ret
add
lock
add
add
add
mov
mov
add
jbe
add
push
push
inc
inc
inc
push
or
not
add
sub
add
sub
dec
xor
not
pop
xor
not
pop
push
add
dec
pop
pushl
call
push
not
shl
sub
pop
call
push
push
sub
push
sub
add
add
dec
rol
add
sub
inc
ror
ror
add
pop
add
lea
pop
push
shr
pop
pushl
push
shr
sub
inc
pop
call
call
push
push
shl
add
push
or
not
add
xor
add
sub
not
dec
dec
pop
shr
add
rol
pop
push
push
lea
push
push
push
push
push
push
call
mov
add
add
outsl
fsubl
fcompl
push
mov
cmc
flds
add
add
add
iret
cmpsb
add
xchg
add
xchg
cld
sub
pop
pushl
push
sub
pop
call
call
push
push
dec
dec
push
or
not
add
ror
sub
xor
shr
xor
pop
rol
sub
lea
pop
push
ror
ror
ror
sub
pop
pushl
push
inc
add
shr
pop
call
push
add
pop
call
push
push
sub
push
or
not
add
shl
dec
xor
sub
pop
rol
dec
add
not
pop
push
xor
shl
add
pop
pushl
push
not
inc
pop
call
push
push
lea
push
push
push
push
lea
push
lea
push
lea
push
call
add
je
add
add
add
testl
cmc
mov
out
xlat
pop
add
add
mov
mov
sub
pop
call
push
push
xor
shl
shl
push
or
inc
add
not
shl
sub
pop
shr
pop
push
push
push
push
lea
push
push
push
lea
push
call
cmpsb
add
mov
subl
pop
jge
movsb
add
mov
loope
test
fiadds
jbe
pop
add
cltd
pop
data16
add
add
push
nop
add
enter
scas
add
loopne
mov
js
mov
add
cmc
jns
sub
pop
pushl
push
add
pop
call
push
push
push
push
lea
push
push
lea
push
call
add
mov
pop
popa
add
add
add
sahf
aad
out
gs
add
ljmp
add
add
add
test
fs
popa
lret
cmpsb
scas
test
add
add
add
jo
fcmovu
add
lcall
shrb
or
pop
push
shr
xor
push
push
pop
add
shl
sub
dec
sub
sub
pop
add
pop
push
push
lea
push
push
push
push
push
lea
push
lea
push
push
call
xchg
in
add
mov
scas
add
add
add
add
roll
lods
mov
mov
cwtl
mov
push
add
add
mov
add
jne
add
mov
add
pop
bnd
out
push
add
mov
add
jne
push
dec
pop
call
push
add
pop
call
push
push
not
push
sub
add
lea
inc
sub
xor
pop
shr
pop
push
push
push
push
call
add
push
test
scas
add
addr16
mov
scas
cltd
popf
shll
pop
jb
add
mov
aad
fsubrl
xchg
sbbb
add
fdivrp
pushf
mov
aam
add
jne
push
not
shl
shr
pop
call
call
push
push
add
add
not
push
sub
add
add
sub
sub
pop
xor
pop
push
xor
not
inc
pop
pushl
call
push
add
pop
call
push
push
add
ror
ror
xor
push
and
add
sub
inc
sub
ror
not
ror
pop
inc
sub
xor
pop
push
push
push
push
call
cmc
jle
add
push
add
in
push
add
add
in
lds
pop
jp
add
add
add
add
rcll
add
pop
mov
mov
adc
test
mov
and
test
mov
mov
lds
add
jae
sub
pop
pushl
call
push
lea
push
lea
push
push
push
push
push
call
mov
add
jno
repnz
movsb
and
pop
xchg
aad
add
add
add
add
mov
add
subl
add
push
loope
add
add
outsl
xchg
add
add
int3
add
add
mov
cld
popa
in
mov
in
in
lea
push
push
push
call
add
out
add
outsl
add
in
add
add
fisubl
mov
add
add
nop
push
add
aam
add
test
add
ja
add
add
add
out
xchg
add
in
hlt
lcall
push
push
lea
push
call
add
sti
into
lods
add
scas
scas
mov
add
add
mov
mov
fwait
and
add
sahf
add
iret
rclb
add
add
add
add
add
add
cmpsl
aam
add
cltd
sub
pop
call
push
push
sub
sub
push
and
add
shr
add
add
sub
shl
not
dec
inc
pop
add
dec
sub
pop
push
push
push
push
call
add
mov
mov
add
add
in
add
mov
add
mov
sahf
movsl
add
mov
jmp
lahf
sahf
add
jno
xchg
add
xchg
xchg
cmc
add
add
jb
add
add
jne
call
push
push
call
add
add
pop
add
lock
add
add
jae
mov
arpl
mov
mov
ljmp
test
sti
jae
xlat
jno
add
ljmp
in
clc
pop
call
push
push
shl
not
push
sub
add
shl
inc
sub
rol
inc
sub
pop
dec
sub
sub
pop
push
push
call
add
add
std
popl
add
push
add
add
xchg
sbb
in
popf
lret
roll
pop
mov
fwait
out
mov
push
mov
mov
insb
pop
xchg
test
lcall
jne
call
push
lea
push
push
lea
push
lea
push
push
push
push
push
push
call
add
add
add
test
dec
aam
pop
add
add
fistps
push
add
mov
push
add
cli
add
mov
jno
mov
add
out
add
push
out
add
pop
xchg
add
mov
add
in
fdivr
lcall
shrb
dec
stos
push
sub
push
xor
add
ror
xor
not
sub
dec
sub
xor
pop
lea
inc
pop
push
push
lea
push
push
call
add
add
mov
jns
insb
pushf
add
add
cmpsl
add
add
mov
scas
pop
popf
sahf
icebp
add
mov
lock
lcall
jne
call
push
sub
xor
pop
call
push
push
shl
lea
dec
push
sub
add
ror
shr
rol
sub
sub
pop
sub
pop
push
add
lea
pop
pushl
push
push
push
push
lea
push
push
call
cltd
add
xchg
xchg
add
stos
sti
insb
add
jb
add
add
lods
frstor
test
add
insb
add
add
lea
jno
add
add
add
push
add
int3
add
add
jne
pop
mov
call
push
push
shl
push
or
not
add
rol
sub
sub
sub
shl
dec
pop
lea
add
pop
push
push
not
shl
shr
push
xor
add
ror
sub
pop
rol
pop
push
push
call
add
mov
mov
jns
fs
add
mov
lock
add
bound
add
pop
in
add
mov
add
test
insb
cli
mov
lcall
rclb
dec
sub
pop
pop
push
lea
push
push
call
call
mov
add
add
add
add
clc
add
mov
testb
sahf
leave
add
std
add
popf
jae
add
jmp
repnz
cmc
add
lcall
jne
call
push
pop
mov
int
push
sub
sub
inc
pop
lea
push
push
sub
push
xor
add
shl
xor
sub
add
shr
shl
pop
sub
lea
pop
push
push
push
push
lea
push
lea
push
push
push
lea
push
lea
push
call
mov
cld
jmp
mov
add
popa
ret
add
scas
add
add
lret
jo
repnz
add
jmp
mov
imul
push
xchg
outsl
push
jbe
add
lcall
jne
push
pop
call
push
push
push
lea
push
push
lea
push
call
add
pop
jmp
mov
jne
cltd
roll
add
data16
testl
cmpsl
add
add
push
arpl
stos
scas
aam
mov
fimuls
cmpsb
add
add
stos
add
test
addl
test
add
add
mov
xchg
mov
add
loop
sub
pop
push
push
shl
pop
call
push
push
sub
push
push
pop
add
shr
dec
sub
not
pop
pop
push
dec
rol
xor
pop
pushl
push
push
push
push
push
push
push
call
add
call
test
add
lods
mov
add
mov
testl
add
jp
push
aam
fcompl
scas
rolb
add
bound
jb
in
fisubrl
add
ret
mov
fstps
in
in
lcall
dec
adc
inc
out
add
add
xor
pop
call
push
lea
push
push
call
add
add
add
add
into
add
add
add
add
xchg
add
add
lds
pop
js
add
popf
add
test
add
iret
add
in
popa
add
add
add
add
lret
add
add
mov
jo
lret
rcrb
add
inc
cld
push
push
lea
push
push
lea
push
lea
push
push
push
call
add
jge
mov
add
mov
add
add
pop
mov
add
mov
repnz
xchg
add
xchg
add
add
add
scas
mov
add
add
push
mov
add
hlt
loope
mov
push
push
sub
pop
lea
push
push
dec
sub
ror
push
or
not
add
add
add
sub
inc
ror
pop
dec
add
sub
inc
pop
push
rol
pop
pushl
call
push
not
inc
shr
shl
pop
lea
push
shr
ror
shl
pop
push
push
push
push
push
push
push
push
call
add
add
add
add
lcall
stc
jp
add
js
call
mov
mov
not
mov
mov
jle
in
in
push
push
lea
sub
xor
add
pop
push
push
shr
pop
pushl
push
push
dec
xor
push
xor
add
sub
sub
not
pop
pop
push
push
push
push
lea
push
push
push
push
call
std
add
stc
int
int3
add
data16
xchg
roll
add
nop
add
add
test
add
lahf
add
add
add
add
shll
xlat
add
add
fwait
loop
pop
add
out
lods
add
lods
add
push
push
nop
shll
add
rolb
jle
jge
in
loopne
lcall
push
not
lea
add
pop
call
push
push
xor
xor
inc
push
push
pop
add
xor
rol
add
xor
sub
sub
pop
add
add
pop
push
push
push
push
push
lea
push
call
loope
push
push
add
xchg
bound
add
lea
xchg
jmp
add
pop
jp
cmpsl
add
rcrl
shll
add
add
add
stc
sub
pop
pushl
push
lea
push
push
lea
push
call
std
int3
add
add
push
push
jae
add
add
add
add
ret
flds
push
add
add
add
pushf
adcb
add
xchg
incb
fcomi
roll
add
jo
add
xchg
add
scas
add
sub
pop
call
push
push
push
call
jns
add
jle
mov
xchg
arpl
lock
jnp
mov
push
xchg
jge
aam
fildll
imul
add
add
jl
add
sbb
ljmp
add
call
jbe
add
mov
push
push
pop
call
push
push
not
not
dec
add
push
or
inc
add
sub
inc
sub
rol
pop
add
rol
dec
pop
push
rol
dec
pop
pushl
call
push
push
call
lcall
sub
xchg
cmpsb
jge
add
add
jecxz
pop
add
jp
mov
in
xlat
add
jne
mov
mov
out
je
add
lods
add
fisubl
arpl
pop
call
push
lea
push
call
nop
mov
mov
les
push
scas
scas
add
mov
pop
add
movb
stos
jge
jnp
std
add
leave
arpl
call
add
xchg
add
lea
fcmovu
fs
sahf
add
push
add
pop
pushl
mov
push
dec
sub
not
pop
jmp
push
push
not
dec
inc
push
and
add
ror
sub
add
sub
shl
shr
rol
pop
xor
not
shl
pop
push
push
lea
push
push
push
lea
push
push
lea
push
call
je
aad
pop
lock
lcall
iret
add
add
int
add
add
xor
add
add
add
lea
lcall
jne
push
dec
inc
inc
pop
call
push
push
push
lea
push
push
lea
push
push
push
push
call
add
test
cltd
add
push
add
xlat
add
je
repnz
push
fidivrl
roll
pop
rolb
mov
repnz
sub
pop
push
push
push
push
push
push
push
push
push
call
mov
jnp
add
add
mov
xorb
add
leave
add
add
add
mov
add
lahf
std
add
mov
add
lret
add
xchg
add
scas
mov
in
loopne
call
push
push
xor
rol
sub
push
xor
add
shl
shl
sub
sub
shr
pop
inc
inc
pop
push
shr
add
dec
add
pop
pushl
call
push
lea
pop
push
call
push
push
push
push
call
cmpsb
js
add
add
xchg
add
add
add
add
add
fildl
cwtl
lds
add
mov
sahf
mov
add
cltd
add
add
add
mov
out
add
add
add
add
in
lock
leave
add
push
shr
xor
add
pop
pop
push
push
push
push
push
push
push
call
add
add
jo
add
push
mov
mov
mov
mov
add
mov
aad
lahf
lea
in
pop
push
push
push
lea
push
lea
push
call
add
fidivs
lcall
add
add
add
add
test
sub
pop
pop
push
add
dec
sub
add
pop
xor
push
lea
shl
pop
inc
push
add
inc
pop
ret
leave
push
dec
pop
ret
push
push
push
push
push
push
push
lea
push
call
popa
movsb
lahf
movsl
test
add
mov
popf
jo
add
add
pop
add
add
pop
mov
neg
enter
mov
lock
jae
mov
xlat
pusha
add
pop
fxch
mov
pop
push
push
inc
pop
mov
push
push
call
add
aad
into
mov
mov
imul
add
jo
out
addb
add
add
xchg
add
add
push
mov
add
mov
add
add
jb
cmp
testb
fiaddl
mov
mov
pop
test
jae
std
shr
mov
xchg
loop
mov
mov
push
lcall
jge
add
test
add
push
push
push
push
push
push
lea
push
push
push
call
ficompl
movl
aam
jl
add
add
add
add
add
loope
mov
insb
add
movsb
sti
add
stos
xchg
add
lcall
inc
and
jmp
push
rol
lea
sub
pop
mov
push
pop
and
xor
push
rol
add
pop
xor
push
pop
add
push
inc
shl
rol
pop
xor
push
add
sub
pop
dec
push
lea
push
push
call
cwtl
add
movl
add
push
push
add
xchg
je
lock
sahf
push
in
jnp
in
add
testb
add
add
iret
add
mov
pushf
test
jl
add
add
roll
add
add
fnsave
add
jmp
push
rol
pop
jmp
sub
push
push
lea
push
call
movsb
add
orb
int
aad
addl
add
add
add
add
loope
pop
add
cli
pop
shlb
lret
flds
loop
in
in
test
mov
add
fiaddl
add
filds
lret
hlt
pop
pushl
push
add
dec
lea
inc
pop
pop
push
push
lea
push
push
push
push
call
les
les
add
mov
mov
pushf
mov
add
imul
add
in
mov
js
mov
sub
pop
sub
cmp
jne
push
push
lea
push
push
push
push
call
add
add
push
mov
pop
push
roll
xorl
outsl
leave
test
add
ljmp
add
std
add
out
add
cld
scas
add
add
movsl
lcall
add
jp
xchg
add
lcall
enter
pop
lea
push
xor
xor
pop
sub
push
push
push
call
add
icebp
mov
add
add
add
add
add
add
int3
enter
add
enter
add
out
push
add
fstl
movsl
jle
mov
insb
int3
jecxz
movsl
out
je
add
or
shrl
fcomps
jmp
rol
pop
sub
push
lea
push
push
lea
push
push
push
lea
push
push
push
lea
push
call
add
add
imul
add
stc
mulb
add
fmuls
leave
add
jno
mov
add
test
add
stos
add
sti
xchg
xchg
iret
add
mov
pushf
add
movsb
xchg
xorl
add
jae
mov
add
sub
pop
pushl
push
push
push
push
push
call
pop
int3
popa
add
stc
movsl
test
add
pusha
movsb
sahf
ljmp
fcmovnbe
aam
mov
test
add
add
lcall
push
dec
dec
pop
shr
push
add
pop
and
push
xor
pop
sub
push
sub
ror
pop
cmp
jne
leave
push
sub
xor
pop
ret
push
push
push
lea
push
push
push
push
call
jb
cld
xchg
mov
add
cwtl
add
add
add
ja
xchg
add
fldt
mov
add
pop
jecxz
insb
xchg
je
add
hlt
shll
test
in
call
mov
push
push
lea
push
lea
push
push
call
add
jb
fnsave
rolb
add
add
jl
add
xchg
add
pop
imul
mov
add
movl
repnz
add
std
add
sar
mov
fwait
add
rorb
insb
mov
in
in
pop
add
push
shl
ror
shl
pop
push
push
shr
pop
push
push
push
call
stos
add
jecxz
test
add
add
outsl
mov
mov
fstl
lahf
rclb
push
pusha
add
cld
mov
movl
test
jle
out
movsl
fdivs
add
jle
mov
in
add
addl
cmpsb
jge
add
add
push
push
push
push
push
push
push
push
call
add
jae
add
pop
xchg
pop
pushf
test
xchg
rolb
add
stc
add
add
add
add
idiv
add
js
roll
test
mov
add
lock
mov
xchg
push
movl
add
mov
les
lahf
mov
add
add
add
arpl
lcall
push
lea
push
push
call
loopne
test
icebp
jecxz
rcl
add
out
in
pop
add
imul
clc
add
fwait
jns
insb
add
mov
add
add
les
out
shrl
pop
adcb
push
add
add
add
jae
add
lds
rolb
lcall
pop
or
jae
cmp
call
add
fcmovnu
add
add
lret
push
xchg
int
add
add
movsl
add
add
pop
add
add
stos
lds
cmc
addr16
add
xchg
push
mov
arpl
add
aad
enter
add
fcmovb
xchg
lods
lahf
loopne
add
sarb
rolb
add
add
lcall
ljmp
push
lea
push
lea
push
lea
push
call
lahf
mov
fnstenv
int3
mov
mov
add
add
popf
cwtl
mov
iret
sub
add
add
mov
add
popa
addr16
mov
add
xchg
add
add
add
addl
mov
add
fists
iret
xchg
sub
pop
shr
add
push
push
push
call
arpl
add
add
out
lods
imul
add
in
add
popa
mov
mov
add
add
loope
push
pop
loope
add
pop
lcall
nop
jge
out
push
add
add
lret
out
je
add
fwait
addb
add
pop
or
ret
rcr
pop
mov
add
push
inc
pop
xor
push
lea
push
push
push
lea
push
push
push
push
call
out
xchg
lods
lods
xchg
insb
add
add
add
add
rcr
add
xchg
aad
std
push
add
ljmp
jmp
add
xchg
add
lahf
mov
add
add
add
in
jbe
cwtl
sahf
addb
xchg
add
jns
aam
dec
ficoms
add
fistl
loopne
lcall
xlat
push
push
lea
push
lea
push
lea
push
push
push
push
push
push
call
add
out
mov
pop
mov
js
add
mov
loope
mov
xlat
cli
add
add
add
in
in
add
lcall
loopne
push
lea
push
call
push
cltd
jae
add
pop
add
imul
push
out
mov
mov
repnz
lcall
add
add
pop
jmp
xchg
test
add
fldt
add
xlat
jbe
add
leave
add
clc
pop
rol
push
ror
pop
rol
push
shr
pop
xor
push
sub
add
pop
inc
push
sub
pop
cmpb
jne
add
push
sub
add
pop
cmp
je
add
push
push
push
call
push
enter
add
add
add
arpl
in
mov
jae
add
data16
sbbl
push
lret
sub
pop
cmpl
jne
push
ror
xor
shl
pop
xor
pop
push
push
push
call
shlb
add
popa
xchg
cli
andl
add
add
mov
add
lock
add
nop
jns
xchg
add
mov
fs
lds
lcall
pop
push
push
lea
push
push
push
push
push
push
lea
push
call
push
add
mov
push
mov
pusha
jp
jl
enter
add
add
imul
add
mov
xlat
flds
add
add
arpl
xchg
add
add
xchg
add
fdivr
lcall
push
push
push
push
push
call
stc
xchg
mov
add
scas
movb
loope
add
pop
stc
roll
pop
jge
lcall
cld
xchg
pop
xchg
mov
add
mov
xchg
add
add
shll
add
add
sti
xchg
in
pop
add
add
enter
sub
pop
pop
push
push
push
push
push
push
call
push
cmpsb
andl
add
mov
add
add
add
add
jno
imull
add
push
add
add
add
add
pop
mov
out
mov
nop
add
add
sub
pop
leave
push
inc
add
inc
pop
ret
mov
push
shr
add
pop
add
push
ror
lea
sub
pop
mov
push
pop
movzbl
push
push
push
push
lea
push
push
push
push
call
filds
add
add
mov
add
add
jns
sti
mov
out
add
shrl
lea
pop
pop
cmc
lcall
add
push
pop
push
add
add
rcrb
loopne
lcall
push
add
lea
shl
pop
call
xor
push
push
lea
push
lea
push
push
call
mov
add
xlat
add
fwait
popa
test
in
rolb
add
fs
add
add
add
mov
pop
add
push
shr
pop
pop
push
dec
sub
pop
pop
pop
push
push
push
call
xchg
out
add
mov
add
add
cmpsl
add
loope
rcrl
add
bound
add
jmp
add
xchg
icebp
pop
jle
mov
in
mov
jmp
cmpsl
stc
add
push
pop
leave
push
xor
sub
pop
ret
push
push
lea
push
lea
push
lea
push
push
call
add
add
ljmp
xchg
cld
push
mov
mov
std
xchg
mov
test
mov
add
add
jmp
fcmovb
cld
scas
stc
mov
enter
mov
fisttps
pop
popf
stc
fisttps
add
cltd
icebp
xchg
pusha
jo
add
fiadds
mov
scas
add
mov
push
shl
lea
pop
mov
add
push
push
push
push
push
push
call
fistpll
jo
add
add
sahf
in
add
add
pop
add
mov
jle
out
push
stc
lret
add
jns
xlat
loope
add
sahf
add
add
ljmp
addb
xchg
hlt
jo
sub
pop
push
push
sub
shr
add
pop
push
push
inc
sub
pop
push
push
inc
pop
push
push
lea
add
pop
mov
push
push
push
push
call
add
add
add
hlt
pusha
insb
mov
add
add
mov
leave
add
stos
jmp
lods
mov
jae
add
sub
pop
pop
push
add
pop
lea
push
push
lea
push
call
add
push
lahf
add
mov
int3
add
popa
add
add
imul
movsb
repnz
add
add
lcall
ljmp
or
push
push
push
push
push
push
push
call
add
fdivs
add
shl
add
add
add
add
shr
pop
mov
mov
sarb
add
mov
add
cwtl
add
cmpsb
add
movsb
arpl
pushf
mov
sub
pop
shr
push
xor
lea
xor
pop
add
push
push
push
lea
push
lea
push
lea
push
push
call
imulb
mov
add
mov
arpl
imull
test
add
add
pop
add
ja
shll
mov
add
in
in
mov
push
push
call
add
iret
ja
pushf
add
pusha
mov
add
cmpsb
mov
add
roll
xchg
mov
mov
jb
push
add
add
add
xchg
sub
pop
add
push
not
add
shl
not
pop
pushl
push
shr
xor
sub
rol
pop
popl
mov
push
xor
rol
pop
add
push
shl
sub
shr
pop
xor
lea
push
push
lea
push
push
push
push
call
stos
xchg
icebp
hlt
xlat
pop
call
mov
add
popa
add
jne
add
rorb
insb
add
cltd
popf
lret
sub
pop
mov
push
push
push
call
pop
add
movsl
arpl
add
cwtl
add
pop
jne
jnp
jo
add
shll
add
jb
imul
jne
rcrb
aam
mov
pop
test
rclb
hlt
pop
add
push
inc
inc
pop
xor
push
not
sub
pop
rol
push
push
push
push
push
push
push
lea
push
push
lea
push
call
in
add
jnp
stos
neg
fmul
jb
add
cli
add
add
into
mov
fldl
je
add
bound
add
push
push
jle
xchg
add
fldl
repnz
add
add
add
in
add
test
mulb
imul
nop
nop
push
push
push
call
add
movsl
js
push
mov
out
add
jae
popf
add
test
cwtl
add
add
outsl
cltd
mov
loope
icebp
add
xchg
jb
add
in
jno
test
xchg
cltd
insb
add
add
cwtl
sub
pop
xor
push
dec
inc
pop
nop
push
shr
rol
not
pop
nop
push
push
push
lea
push
push
push
lea
push
lea
push
push
lea
push
call
add
mov
add
xchg
push
rcr
add
rolb
mov
lods
lcall
lods
add
add
bound
add
mov
add
mov
loope
sahf
sti
add
xchg
add
add
add
lcall
nop
push
push
lea
push
push
push
push
push
lea
push
push
lea
push
call
scas
cmpsb
add
add
out
add
add
pop
roll
add
add
insb
hlt
lret
add
add
data16
add
call
add
add
xchg
pop
jecxz
jnp
add
insb
mov
add
shll
pusha
nop
add
add
xchg
add
mov
add
jo
sub
pop
nop
push
lea
push
lea
push
call
out
pushf
in
js
idivl
imul
out
mul
mov
int3
xchg
lock
xchg
add
add
add
add
add
add
xchg
add
add
mov
add
repnz
out
sub
pop
cmpb
jne
add
push
dec
dec
lea
pop
nop
push
push
push
push
push
push
push
push
push
call
cmc
add
mov
pop
jo
add
ret
mov
jle
sahf
mov
mov
xchg
stc
lret
mov
mov
jnp
add
add
jb
push
add
push
aad
popa
ficoms
jl
jb
add
test
jo
lahf
rolb
add
add
rol
xchg
stc
jecxz
mov
jne
sub
pop
nop
push
push
push
push
lea
push
call
add
add
hlt
xlat
push
pop
mov
mov
rcrb
add
push
filds
add
add
add
int
loope
cmc
roll
ficoms
loop
add
lcall
inc
or
test
push
add
pop
nop
inc
push
xor
sub
pop
nop
push
shl
shl
add
pop
nop
push
add
pop
cmp
jb
push
push
lea
push
lea
push
push
push
call
jmp
add
imul
add
jp
lahf
into
clc
in
int
jae
xor
cmpsb
add
mov
mov
mov
push
pop
outsl
add
pop
add
in
call
xor
push
inc
ror
pop
jmp
push
shl
add
pop
mov
push
shl
rol
inc
pop
add
movzwl
push
lea
push
push
lea
push
push
lea
push
call
xchg
in
push
jmp
add
inc
add
jno
out
add
add
mov
lods
add
ficoms
xchg
push
movsl
add
jp
out
pop
jb
pop
add
mov
add
aam
add
add
inc
sbb
push
push
push
call
mov
mov
hlt
test
mov
add
add
push
add
add
loopne
nop
fidivrl
push
add
jns
add
add
add
add
add
outsl
add
leave
scas
add
stos
add
lcall
rorl
leave
push
lea
push
push
push
push
push
lea
push
push
push
call
cld
add
jo
add
mov
shlb
nop
pop
pop
in
fstpl
push
mov
add
add
add
add
fwait
jmp
mov
test
pop
xor
push
lea
push
push
push
push
call
lock
add
rcll
xchg
add
add
add
mov
ret
pop
add
xchg
test
fiaddl
add
push
mov
mov
sub
pop
shl
xor
push
lea
push
lea
push
push
push
call
add
mov
iret
add
add
pop
add
fs
add
cltd
cmc
test
add
push
lahf
add
loop
add
push
add
xlat
data16
jns
fiaddl
add
add
pop
lods
add
mov
xchg
sub
pop
shl
xor
push
sub
dec
rol
lea
pop
shl
xor
push
lea
inc
dec
pop
mov
push
push
lea
push
lea
push
call
add
ja
add
mov
hlt
imul
push
scas
pop
jae
pop
add
jp
ljmp
add
mov
pop
mov
shll
add
mov
add
add
add
xchg
mov
add
fcmovnbe
test
add
sub
pop
add
push
lea
push
lea
push
push
lea
push
push
push
push
call
add
pop
add
add
xchg
fs
add
add
fldl
mov
mov
movl
add
add
jbe
add
add
jmp
sub
pop
pop
push
xor
pop
pop
push
push
push
lea
push
lea
push
push
push
push
lea
push
push
call
enter
add
add
aam
jmp
pusha
scas
add
aad
gs
incb
xchg
lahf
in
xchg
test
mov
imul
add
add
ljmp
push
add
out
add
ret
in
fdivr
lcall
push
push
push
push
call
add
addl
out
test
add
add
out
cwtl
add
add
mov
cwtl
lods
add
cwtl
mov
add
icebp
add
cmpl
repnz
pop
ret
push
push
push
call
fildl
add
add
loope
add
jae
mov
lret
mulb
in
add
loop
mov
dec
mov
loop
shrl
fmul
xchg
fadds
sub
pop
push
mov
push
push
lea
push
call
push
imul
fdivl
lods
add
fadds
test
add
mov
cld
add
fstpl
add
add
fimull
pusha
add
add
mov
add
mov
add
add
mov
xchg
ret
add
sar
lret
sub
pop
push
push
push
push
lea
push
lea
push
push
push
lea
push
push
push
call
addl
std
add
add
mov
movsb
jo
xchg
add
add
add
andl
divb
mov
sahf
pop
sub
pop
push
push
push
push
push
push
push
push
push
call
out
or
add
add
idivb
xchg
push
add
pop
add
add
add
out
add
pop
aad
cmpsb
xchg
movsl
leave
pusha
cmpsl
add
add
loop
mov
pop
stos
fistpll
jge
add
add
rcll
add
movl
mov
pop
push
mov
push
sub
inc
pop
mov
push
push
push
push
push
call
xchg
jb
add
add
pusha
idivb
push
fildl
push
add
add
out
add
fdivrl
add
add
add
dec
sti
add
imul
flds
les
mov
add
lods
mov
cltd
cwtl
add
add
push
mov
add
hlt
sub
pop
mov
push
push
push
push
call
scas
pop
loopne
fadd
push
jp
loopne
add
mov
add
testl
imul
leave
add
enter
in
lock
test
je
push
push
call
out
cld
add
add
add
xchg
xchg
fistpll
fiadds
nop
into
add
push
add
scas
popf
mov
add
addb
fcomp
add
add
imul
mov
xchg
add
add
mov
add
push
add
sub
pop
mov
push
push
push
push
push
lea
push
lea
push
push
lea
push
push
call
add
add
jmp
rcrl
add
jns
mov
shll
cmpsl
rol
jmp
push
push
jo
pusha
test
add
mov
add
add
xorb
add
scas
addl
pop
test
je
mov
push
push
push
push
lea
push
call
jp
add
add
add
roll
add
add
jnp
pop
push
lret
add
insb
test
add
jne
add
rclb
add
add
add
shlb
filds
lcall
dec
or
pop
push
shl
pop
inc
cmp
je
push
push
push
call
fldt
push
jae
lret
mov
lret
add
add
arpl
loopne
ret
push
je
aam
add
mov
add
mov
test
mov
cmpsl
push
add
add
add
outsl
add
add
fs
add
pop
push
sub
pop
test
je
push
lea
push
push
lea
push
push
lea
push
push
lea
push
lea
push
call
mov
lock
add
add
add
add
sub
addb
faddl
push
cmpsb
add
mov
std
fidivl
rolb
add
add
add
in
mov
add
add
stc
movl
fldl
pop
add
add
mov
push
shr
not
not
pop
inc
cmp
je
push
rol
shl
pop
test
jne
push
not
xor
dec
sub
pop
xor
pop
push
push
lea
push
push
push
call
jmp
add
lods
add
rolb
notb
add
add
push
add
add
mov
out
add
add
in
mov
add
in
add
push
add
movsl
pop
imul
add
out
add
add
test
in
in
lcall
push
rol
pop
pop
pop
push
inc
pop
leave
push
lea
push
push
push
push
lea
push
call
fdivrp
add
insb
add
add
aad
jbe
jecxz
jne
mov
push
out
add
add
add
add
add
in
in
nop
pop
sub
pop
ret
push
sub
pop
mov
push
rol
pop
inc
push
sub
inc
rol
lea
pop
cmp
jne
push
push
lea
push
push
push
call
mov
push
add
add
add
stos
add
add
rcr
push
add
add
add
add
out
popl
add
enter
jo
add
popa
add
pop
lea
push
xor
pop
mov
push
lea
push
lea
push
push
push
call
ret
add
add
jae
int3
movsl
cltd
add
cwtl
sahf
stos
pop
jb
pop
add
insb
add
cld
in
xlat
lods
test
clc
test
mov
add
lea
add
in
mov
iret
leave
add
cmpsb
add
gs
mov
mov
add
add
incb
addb
add
mov
sub
pop
test
je
push
xor
pop
mov
push
sub
pop
add
push
push
push
lea
push
push
push
push
call
addl
add
ja
push
mov
mov
mov
pushf
test
loopne
add
out
add
movb
cld
push
mov
in
cmp
jne
push
inc
shr
pop
mov
push
push
push
lea
push
push
push
lea
push
push
push
call
int3
data16
jmp
xchg
push
add
mov
popa
add
add
mov
cltd
add
rolb
mulb
add
xchg
test
pop
int
mov
xchg
xchg
test
jmp
jmp
add
xchg
out
mov
xchg
add
add
fidivrs
jbe
int3
sub
pop
test
je
mov
push
push
push
push
lea
push
push
call
pop
add
add
add
nop
lahf
mov
add
test
jns
add
add
in
mov
cmc
test
add
pop
out
add
jnp
push
add
hlt
hlt
fcom
les
jl
add
add
shll
sub
pop
add
push
pop
cmp
je
push
lea
push
push
lea
push
lea
push
lea
push
push
lea
push
push
call
test
add
rcll
add
roll
add
insb
sti
add
xchg
call
pusha
jmp
fcomps
lret
jns
add
nop
jns
sub
pop
jmp
push
not
rol
xor
pop
xor
push
add
add
pop
pop
push
push
push
push
push
push
push
push
push
lea
push
call
out
leave
push
lcall
scas
fildl
push
add
add
mov
popf
xchg
add
imul
cltd
add
add
into
jo
int
add
bound
add
add
xchg
add
add
shrb
popa
fmuls
sub
pop
pop
push
lea
push
push
push
push
push
call
cltd
xchg
fsubr
xchg
fwait
aam
cltd
xchg
ljmp
ficoms
jecxz
push
fs
push
push
mov
rcrb
add
mov
in
pop
mov
add
add
out
add
pop
mov
fildl
lcall
push
push
call
jbe
fwait
movsl
add
loopew
add
pushf
add
out
rolb
lods
mov
js
fiadds
rcrb
addb
add
popf
imul
jbe
cltd
sarl
add
cmpsl
add
add
add
add
out
fidivrs
add
add
jl
rolb
add
shr
add
lcall
push
sub
xor
pop
leave
push
push
lea
push
push
lea
push
push
lea
push
push
push
push
call
insb
rolb
stos
add
testl
enter
mov
xchg
mov
cltd
add
cwtl
add
out
loop
cmc
fldl
pop
add
add
enter
mull
add
mov
add
cmc
cmpsb
fmulp
add
outsl
enter
add
fcomps
or
push
push
push
lea
push
push
push
call
add
push
std
mov
ja
add
leave
add
add
in
add
pushf
add
cmpsl
mov
lcall
inc
call
add
pop
pop
push
lea
push
push
call
repnz
clc
test
mov
les
add
add
mov
add
add
popa
xlat
addb
add
int3
roll
add
hlt
lcall
push
push
lea
push
lea
push
lea
push
push
push
push
push
push
call
out
into
cli
hlt
add
add
in
pop
jb
pop
out
mov
aad
shrl
fcoms
jns
mov
pop
pop
push
lea
push
push
push
push
call
fisubs
add
cltd
add
pop
out
hlt
enter
add
add
in
add
lahf
sahf
add
arpl
add
arpl
flds
mov
shlb
cltd
add
leave
push
push
call
add
lahf
add
lcall
pop
add
lods
fldl
mov
push
add
rcrb
scas
add
nop
add
loop
mov
mov
pusha
add
add
ret
pusha
jmp
loopne
faddl
lcall
or
push
push
call
nop
roll
bound
call
leave
pop
push
mov
jno
mov
add
add
add
mov
jmp
pusha
jbe
lea
mov
mov
jno
add
add
push
out
add
mov
stos
add
notb
test
add
lcall
push
lea
push
push
lea
push
push
lea
push
lea
push
push
lea
push
lea
push
call
cmpsb
jne
mov
push
clc
adcb
cld
mov
lods
aad
add
jge
add
add
fwait
mov
cwtl
test
push
add
add
loop
fiadds
stc
sub
pop
pop
push
lea
push
push
lea
push
call
int3
add
add
mov
push
add
add
out
mov
add
jno
rolb
add
add
cli
jecxz
push
mov
mov
pop
lods
add
add
add
add
add
add
add
add
bound
add
mov
add
lcall
push
add
shl
ror
shr
pop
pop
push
rol
add
add
dec
pop
pop
leave
push
lea
push
push
push
push
push
lea
push
lea
push
lea
push
push
call
pop
rcr
fwait
mov
out
add
add
test
add
mov
add
icebp
add
mov
scas
test
roll
mov
cmc
add
jns
lods
clc
add
imul
add
add
pop
ret
lret
sbb
mov
scas
lret
fnstsw
scas
cmpsl
xchg
mov
scas
add
mov
mov
scas
dec
pop
sub
cmpl
clc
mov
push
xor
sahf
cli
dec
cmp
in
in
movsl
mov
inc
nop
sbb
jnp
mov
xchg
sti
mov
adc
ljmp
mov
dec
mov
push
xchg
into
xchg
into
orw
stos
dec
int
jnp
scas
cmp
sub
sti
sub
mov
test
outsb
push
jb
xor
movsb
adc
movsb
xlat
mov
cmp
mov
jle
dec
das
add
xchg
push
jno
cmpsb
push
mov
mov
movsb
addr16
cmc
jns
movsb
pop
pop
jmp
add
mov
mov
fidivs
sarw
out
push
sti
pop
loopne
movsl
xchg
mov
inc
jecxz
int
imul
rorl
mov
and
fwait
aaa
add
inc
add
mov
push
mov
sarl
cmpsb
sbb
insl
loop
push
pop
shll
cmc
repnz
xchg
pop
ss
enter
mov
xor
fidivs
nop
mov
mov
pop
fsubrl
pop
xor
mov
jmp
mov
xchg
cmpsb
sbb
dec
pop
iret
cwtl
test
sbb
out
leave
jno
popa
sub
push
adc
lahf
sbb
fwait
and
mov
xor
int
lock
ds
push
rorb
add
ror
cmp
xor
jp
outsb
add
iret
and
ret
and
sbb
jmp
pop
jns
dec
clc
imul
push
adc
cwtl
fsubrs
aaa
insb
and
scas
je
pop
popf
xchg
pop
sbb
call
jbe
dec
inc
mov
cli
roll
xchg
jmp
fldt
and
imul
and
mov
push
mov
jp
imul
cmp
and
pop
scas
push
mov
mov
subl
adc
mov
and
sub
jg
inc
lods
push
jne
arpl
sub
int3
dec
popa
add
femms
mov
gs
stos
out
jle
sub
fwait
mov
fistpl
mov
test
fwait
iret
mov
and
les
xchg
lret
or
pop
andb
or
add
aaa
lods
add
roll
and
or
xchg
xchg
xor
jge
popa
cmp
fidivl
clc
sub
fwait
add
mov
stc
pop
jle
inc
test
sub
jnp
cmp
xor
test
or
jb
add
mov
icebp
cld
test
aaa
and
push
fxch
add
jbe
sub
test
add
mov
out
mov
fists
xchg
sbb
push
lock
cmp
mov
test
shll
ss
inc
mov
out
leave
out
lock
repnz
push
xchg
lea
imul
jne
add
lcall
push
test
mov
daa
sbb
xchg
fbld
xchg
cs
gs
cmpl
mov
fcmovbe
test
mov
fs
in
ja
push
dec
or
pop
fwait
testl
lock
insb
sub
icebp
or
lret
outsb
xchg
sub
xchg
dec
into
pop
pop
imul
pop
mov
daa
ret
mov
sub
negb
mov
dec
cmpsb
sub
test
das
or
pop
femms
inc
or
inc
inc
lea
xor
xchg
jbe
notl
sbb
pusha
push
negl
lock
jl
mov
nop
dec
xor
jl
jmp
add
test
mov
add
aad
mov
test
shrb
push
adc
jno
push
xchg
mov
dec
shll
mov
xor
jno
fiaddl
sbb
mov
testb
stos
aad
jnp
xchg
das
and
clc
imul
in
push
negb
out
fxch
fsubl
add
xor
dec
shrb
addr16
int3
mov
xchg
sbb
roll
jo,pn
jmp
enter
push
push
jae
mov
mov
xchg
mov
fcmovbe
lret
jnp
dec
lahf
pop
sahf
pop
mov
aam
mov
ljmp
push
idivb
div
adc
jae
lods
inc
cmpsl
jb
fyl2xp1
lods
lods
fxch
mov
jns
jo
fnstsw
and
jae
js
bound
cwtl
es
push
push
arpl
cld
mov
push
ss
inc
data16
leave
mov
ffreep
sbb
mov
pop
pop
mov
lock
sbb
xor
cs
in
or
push
mov
adc
fcompl
je
pop
stos
test
inc
int
nop
mov
push
popf
pop
fcmovnbe
lea
mov
fldl
ds
fs
clc
inc
enter
popa
in
shrb
mov
enter
and
dec
pusha
or
or
jp
cmpsl
sub
jle
fsubrs
push
imul
stos
lcall
les
xor
daa
xlat
insb
jnp
orb
add
and
cmp
cltd
inc
pop
sbb
je
aaa
lods
push
mov
testl
cmp
xchg
nop
cmpsb
add
aas
dec
mov
pop
ds
fstl
test
lret
xor
and
jle
jge
pop
addl
push
add
inc
test
xchg
inc
adc
mov
shr
and
add
test
je
push
in
mov
cmpsb
xor
or
jp
push
in
xchg
iret
pushf
test
pop
adc
enter
add
dec
fisttps
or
movsl
sbb
ss
jb
pop
add
or
and
stos
inc
xlat
mov
pop
mov
je
mov
lock
xor
dec
sbb
mov
dec
into
xchg
push
repnz
pop
xorl
xchg
flds
add
rolb
mov
mov
mov
movsl
sbb
repnz
outsb
jl
sarl
mov
dec
icebp
jmp
iret
outsl
jmp
dec
mov
lods
repz
cmp
dec
stos
imul
ja
ljmp
mov
shlb
shrb
xchg
testb
ret
push
xchg
inc
jge
orl
fidivl
dec
push
jbe
idivb
cmpsl
xchg
idivl
mov
dec
sti
pusha
push
mov
mov
ja
icebp
dec
and
dec
repz
xchg
pop
enter
adc
cli
negl
outsl
mov
loope
loopne
sub
out
add
mov
jecxz
sub
jmp
mov
xorb
mov
jo
jnp
cwtl
enter
test
jns
mull
inc
jne
cld
lods
outsl
loopne
pop
aas
cmp
test
fcoms
data16
les
popa
add
insl
or
mov
dec
add
jo
mov
add
movsl
call
fisubs
xor
clc
dec
loope
cld
rcr
pop
cmp
inc
gs
and
jge
and
out
dec
out
outsb
xorl
movsb
cld
mov
inc
leave
aam
lock
adc
mov
movnti
pop
add
lds
and
jnp
std
frstpm(287
popa
dec
push
fwait
push
int
add
jbe
lods
mov
pop
pop
insl
dec
imul
call
insb
les
sbb
jge
sub
daa
ds
enter
adc
inc
arpl
cmp
add
jne
and
jp
mov
sbb
sbb
and
sti
mov
ret
mov
int3
or
scas
test
das
sbb
sbb
mov
and
les
pop
jbe
mov
insl
add
pop
cmp
jmp
mov
cli
jne
jecxz
shrb
stos
mov
shrl
shlb
rcr
rcr
imul
mov
mov
pop
orl
adc
mov
cli
daa
lds
call
daa
cmp
pop
js
mov
in
jmp
fs
and
fs
test
in
mov
bswap
scas
dec
sbb
jp
or
xlat
shrl
xor
in
cmp
mov
jo
pop
shr
pop
and
sbb
out
roll
inc
dec
sub
inc
xor
int
sub
lock
sub
pop
lods
hlt
add
and
xor
sub
out
inc
jnp
jno
mov
enter
imul
fstps
repz
mov
stc
cmp
lock
inc
repnz
enter
aaa
xor
cmp
aam
push
popf
or
jnp
xor
out
ret
call
lds
mov
lods
das
arpl
aaa
xchg
xchg
and
jecxz
mov
ficompl
imul
mov
nop
pop
and
mov
pop
aam
jg
adc
outsl
or
xchg
lock
pop
rcll
inc
pusha
jae
adc
sti
mov
mov
pop
xchg
jle
loope
pop
xchg
js
xchg
aad
push
mov
mov
cwtl
out
popf
std
test
insl
sbb
jmp
dec
sahf
insb
pop
ret
cmc
notl
fcoms
ljmp
addr16
pop
inc
cwtl
add
stos
cmp
sahf
or
jge
sarl
mov
repz
ret
addb
enter
cltd
aaa
enter
xor
mov
cli
mov
add
bound
xchg
mov
jbe
jmp
mov
pop
cmp
xchg
xlat
in
roll
push
xchg
adc
pop
push
and
and
pop
dec
sbb
scas
mov
fs
and
rclb
push
in
into
mov
std
mov
xchg
aas
pop
push
jae
xor
cld
cmp
sub
negl
push
sahf
xlat
es
rcl
xor
push
imul
or
sbb
dec
add
xchg
lods
mov
push
call
mov
xor
mov
ljmp
and
jb
mov
cmc
scas
icebp
cmp
mov
pop
adc
fcmovb
in
or
sbb
mov
test
loop
sub
dec
loope
sub
xchg
push
scas
mov
popa
xchg
int
xor
fnstenv
and
pop
ljmp
scas
mov
nop
pop
pop
push
in
pop
sbb
sbb
sbb
mov
add
or
xchg
pop
mov
mov
add
sbb
jo
pop
int
mov
mov
test
push
in
inc
in
or
scas
pop
and
fisubl
pop
fs
mov
iret
dec
sbb
mov
stc
int
mov
aas
mov
jmp
fs
push
stos
jp
add
jne
fs
bound
addr16
insb
ret
xchg
mull
pop
les
insb
pop
incl
notb
sbb
xlat
mov
fprem1
ja
sub
leave
pop
xchg
scas
jge
sub
stos
push
push
xorl
pushf
into
es
das
pop
scas
add
pop
flds
cli
movsb
lret
out
loopne
scas
or
stc
repnz
nop
jne
mov
outsb
jne
lock
mov
cmp
out
in
fsubrp
sbb
stc
jmp
sbb
pop
sbb
or
sti
jecxz
jb
xor
dec
inc
outsb
sti
mov
fdiv
jp
outsb
rclb
or
adc
pop
in
nop
inc
mov
xor
aas
xchg
mov
lods
cmp
int3
sti
les
aam
pop
fldenv
or
pop
daa
add
lea
pop
pop
mov
inc
or
pop
insb
mov
jl
loop
push
aaa
out
adcl
jmp
lock
sti
ds
jg
loopne
shlb
sti
das
push
mov
pop
daa
es
xchg
jp
xor
fisttps
insl
push
dec
pop
add
dec
pop
inc
out
sbb
mov
push
or
mov
pop
push
ja
outsl
mov
push
fcomp
fisttpll
jno
add
test
mov
ljmp
mov
or
xchg
arpl
mov
jnp
sbb
sub
popa
pop
sbb
daa
mov
cmp
jge
push
add
test
or
mov
gs
sarl
inc
rcll
cmpsb
sub
add
addb
inc
rorl
or
push
push
loop
dec
pop
inc
gs
jmp
inc
adc
push
out
shll
xchg
inc
dec
or
je
orb
adc
sub
inc
xorb
fs
mov
xchg
cs
push
adc
xchg
add
push
fs
dec
mov
ss
sbb
mov
sbb
jg
jnp
mov
sub
repnz
inc
xchg
mov
push
xor
ret
jmp
jae
jne
adc
shlb
cwtl
pop
clc
sbb
mov
jecxz
jl
out
sbb
sahf
cmpsb
push
adc
pop
jg
pop
ja
cld
inc
jle
fiaddl
andb
jae
mov
mov
jbe
cmp
shr
mov
dec
sub
cmp
fnstsw
jnp
mov
push
push
xor
es
test
test
push
and
xchg
cmc
cmpsl
ja
cmpsb
insb
addr16
pop
loope
mov
adc
cmp
jl
jp
mov
cmp
int
ja
jo
dec
pop
test
icebp
mov
fsubrl
adc
jl
pop
int
mov
cmc
nop
shlb
lods
movsl
popa
mov
or
jne
lds
xor
ret
xlat
pop
pushf
cmp
pop
mov
or
or
cmp
adc
stos
cld
lds
sbb
xchg
clc
xor
xchg
arpl
leave
pop
and
adc
adc
addr16
or
scas
mov
icebp
push
fwait
pop
or
sahf
enter
mov
int
adc
in
dec
adc
nop
xchg
jae
loop
mov
jno
inc
pop
mov
add
and
cmpsl
sbb
ret
or
hlt
xchg
pop
mov
fsubrl
loop
cmc
pop
loop
mov
mov
aas
push
or
data16
movsl
clc
add
mov
push
xchg
sbb
jns
or
xor
mov
das
mov
mov
pop
sub
pop
push
pop
aas
ljmp
stc
push
push
sbb
pushf
lods
arpl
call
bound
dec
loopne
jl
call
data16
adc
ret
xor
icebp
mov
test
adc
jne
popa
fldt
jnp
test
pop
push
xchg
arpl
lret
or
stc
or
mov
sbb
adc
sets
xchg
mov
push
add
mov
or
mov
mov
imul
inc
xor
add
mov
add
ja
jmp
mov
push
popa
cmpsl
test
lock
inc
loope
sar
add
loope
sti
xor
mov
idivb
data16
pmuludq
lods
stos
das
add
xlat
push
lea
icebp
pop
js
roll
pop
pop
inc
subl
jl
xchg
jns
cmp
add
stc
adc
movsl
xor
mov
inc
orl
mov
outsb
mov
push
test
cld
loopne
sbb
mov
or
sub
hlt
inc
add
cmp
mov
cwtl
leave
cwtl
push
call
popf
dec
sub
rcl
mov
outsb
call
mov
pop
gs
movsb
fsubs
jle
jno
insl
clc
adc
fisttpll
stos
push
iret
adc
mov
lret
mov
pop
jecxz
scas
pop
or
xor
mov
sti
mov
ficoms
enter
xchg
lcall
lcall
xor
cmpb
ljmp
push
dec
mov
daa
mov
push
sub
hlt
xorl
fcompl
push
jge
add
cld
push
fdivrp
addl
dec
mov
pop
inc
stos
cmp
push
out
idiv
out
es
clc
jne
inc
fwait
and
out
xor
outsl
push
sti
adc
adc
push
adc
mov
nop
movsl
xchg
xchg
xchg
jo
push
ljmp
in
mov
jp
ficomps
call
ss
sub
pop
clc
cwtl
in
jns,pt
mov
xchg
dec
decl
sbb
pop
lods
ja
scas
rol
sbb
jnp
mov
push
pop
aam
xchg
mov
jecxz
in
add
push
imul
add
push
sbb
xor
mov
xor
xor
out
int3
rcl
add
out
jnp
sub
stc
jnp
dec
fs
adc
cld
and
xchg
shr
pop
inc
or
fcompl
push
pop
lock
je
jmp
out
xchg
lds
test
into
int3
and
dec
fldl
movsl
xlat
mov
mov
pop
adc
lock
out
sub
into
lcall
pop
push
or
lahf
xlat
pop
inc
sub
mov
inc
push
les
insl
adc
popf
das
in
movsb
bound
add
adc
inc
stos
inc
lods
aam
loopne
addl
subl
in
pop
pop
sbb
leave
pop
xor
mov
rcrb
daa
adc
lahf
inc
dec
loope
mov
xchg
pop
sti
mov
call
mov
push
jo
xchg
inc
jno
mov
ret
mov
fildll
testl
lcall
cmpsw
inc
push
hlt
mov
negb
inc
xlat
cmp
mov
sahf
jns
loopew
push
cmp
lcall
mov
test
push
cmp
adc
mov
imul
fidivrs
test
or
sub
decb
inc
xor
addb
cmc
aad
ja
and
cmp
dec
int3
out
sub
sub
mov
jae
js
inc
jp
mov
mov
push
mov
lds
scas
ss
repz
in
into
push
or
out
or
or
aad
sub
test
leave
adc
nop
or
ret
in
sbb
fldcw
pop
xor
test
test
gs
outsb
cmp
sub
jne
ds
into
mov
cmp
repz
in
and
xchg
repz
sbb
cmp
push
stc
ja
leave
adc
sub
fscale
leave
mov
push
adc
jp
adc
mov
jne
push
push
inc
roll
and
mov
rolb
icebp
call
adc
jnp
mov
jne
xchg
cmpsl
push
test
pop
pop
sbb
std
add
cmp
jae
ds
dec
mov
es
test
ja
dec
sbb
insl
mov
add
stos
mov
arpl
stos
mov
cltd
cltd
adc
xor
dec
insl
pusha
jne
mov
mov
add
mov
xchg
mov
push
in
inc
push
inc
dec
pop
inc
jmp
std
lods
hlt
loop
out
leave
mov
fmull
dec
cmpsb
ret
push
sub
jae
scas
mov
enter
cs
xchg
inc
dec
add
lret
ljmp
pop
adc
pop
cmp
or
cs
jmp
stc
es
sbb
jg
addr16
fldt
insl
dec
notl
out
imul
xor
leave
inc
mov
pop
fldenv
lods
ja
jae
xchg
xchg
xchg
pop
adc
mov
into
out
cltd
out
pusha
shll
stc
and
mov
out
xchg
aam
cli
inc
dec
jl
dec
jg
add
xchg
sub
filds
xchg
xor
das
xchg
loope
cmp
add
dec
cmc
cld
data16
push
pop
and
sub
cmp
dec
xchg
or
mov
jmp
add
sub
frstor
leave
lret
add
ljmp
dec
divb
iret
call
lret
adc
mov
cmp
and
bound
xchg
xlat
push
pop
fists
xchg
stc
xchg
jae
out
cmc
jge
push
jno
fldenv
cld
mov
pushf
in
bound
ret
inc
sub
and
mov
fiadds
and
mov
push
dec
pop
psraw
aam
sub
je
fisttpl
pop
and
addb
fsubrp
stos
cmc
scas
jnp
sar
arpl
mov
inc
pop
daa
cwtl
sarb
mov
data16
mov
mov
scas
lods
mov
ss
lock
cld
mov
add
inc
aad
movsb
xor
pop
pushf
cmp
lds
pop
mov
stos
xchg
test
divb
movsl
mov
shl
fcomps
sub
and
inc
jb
sysenter
sbb
xchg
sbb
stc
andl
in
cwtl
push
push
sub
ss
imul
in
xchg
jo
icebp
jne
inc
mov
enter
scas
and
sub
push
testl
sbb
mov
sbb
movsl
andl
cmpsb
pop
repnz
lret
add
sahf
adc
insb
push
xorb
xor
enter
into
push
shlb
lcall
jns
mov
or
jb
fcoms
push
adc
jp
test
pop
xchg
jecxz
sbb
mov
pop
dec
dec
add
and
movhps
rorb
insb
xchg
or
push
ret
subl
push
xchg
test
sub
dec
lret
push
sbb
cmp
imul
test
into
xor
xor
mov
mov
mov
mov
or
inc
xlat
stc
nop
std
aam
loopne
or
rcrb
xchg
dec
sbb
mov
adc
xchg
sub
fnstenv
xor
fimull
pop
pop
push
mov
xor
sub
adc
shrb
mov
repz
shl
cld
cli
popa
or
arpl
enter
test
inc
or
lret
dec
jbe
inc
push
dec
sti
adc
mov
mov
jmp
insl
mov
jo
mov
xchg
daa
sti
dec
mov
call
jno
movsl
jnp
and
iret
sub
add
shll
movsb
cli
mov
xlat
out
ds
enter
xchg
xor
push
arpl
ljmp
cwtl
inc
ja
jb
rcrb
dec
cs
inc
sbb
sbb
in
sub
shrl
dec
inc
xchg
or
cmp
xorb
jmp
rcll
inc
push
pop
pushf
callw
and
cmp
lahf
push
push
jno
push
int3
lahf
scas
ret
adc
jns
loope
or
jg
push
xchg
sub
adc
mov
and
inc
ss
jnp
inc
in
mov
jmp
stos
pop
jl
in
pushf
and
adc
pushf
jne
sub
pop
imul
sub
test
jae
in
xchg
in
pushf
fcompl
inc
add
sahf
leave
mov
testb
inc
popa
scas
lret
mov
xchg
popf
ret
lea
cltd
jnp
push
jl
std
inc
and
lods
pusha
pop
loopne
cwtl
arpl
ficomps
repnz
inc
push
enter
shl
mov
push
leave
es
in
movsb
xchg
fsubs
cmp
loop
and
pop
leave
int3
mov
adc
rorb
fstpt
or
inc
dec
cmp
es
scas
ja
pop
int
push
xchg
pop
jo
cld
outsb
popf
scas
inc
test
mov
push
and
fcoms
xor
rep
sbb
mov
ds
lret
xchg
pushw
mov
mov
fldcw
mov
aad
imul
test
test
leave
jmp
icebp
push
xchg
push
mov
mov
xor
int3
adc
stos
and
add
out
sub
fldl
inc
pusha
sub
out
outsb
push
dec
or
inc
or
mov
mov
fiaddl
repnz
stos
movl
sub
xchg
cwtl
lds
and
or
mov
or
in
les
inc
xchg
bound
adc
loop
inc
xor
pop
xchg
nop
xor
out
mov
aaa
mov
fimull
adc
das
mov
mov
pop
xchg
dec
pushf
fstpt
ljmp
pushf
test
stc
xor
jle
mov
sbb
test
je
pop
bnd
dec
sub
and
or
sarb
add
shll
mov
cmc
xchg
imul
and
push
sbb
inc
mov
out
jo
xchg
jns
js
and
xchg
pusha
add
sub
cmpsb
cmpsb
outsl
adc
enter
adc
push
mov
mov
pop
lock
mov
movsb
xor
dec
and
jb
mov
and
imull
sbb
add
jno
jne
test
popf
push
pop
jecxz
imul
pop
mov
mov
test
sbb
cld
arpl
xchg
pop
push
mov
inc
js
push
cmpsb
les
ljmp
mov
ret
fsubrl
cli
adcl
lea
leave
out
pop
lahf
xor
cmp
adc
inc
mov
jecxz
xlat
pop
shr
pop
mov
stos
dec
adc
enter
mov
jae
adcl
icebp
xchg
fdivrl
mov
jb
and
jl
ret
in
mov
add
das
aaa
or
aas
mov
test
lahf
bound
xor
push
inc
xchg
cmp
jp
pop
lret
jp
cmp
mov
mov
mov
rcl
dec
loope
jmp
clc
mov
dec
add
xlat
jge
aas
ret
adc
add
mov
mov
inc
xor
xchg
out
enter
scas
xchg
imul
dec
fyl2xp1
lcall
mov
int
push
dec
push
fbstp
fistl
jmp
mov
pusha
adc
jb
adc
sub
inc
pop
aas
aam
jl
inc
xor
in
add
push
sti
sbb
movsb
adc
mov
aad
loop
fstpl
dec
popa
arpl
pop
cmp
bound
jp
outsl
fists
data16
add
dec
cwtl
sti
daa
aam
filds
out
in
or
sahf
xchg
cmp
jno
sti
dec
ret
xchg
xchg
ficomps
movsb
push
pop
or
stos
mov
fs
aad
cmp
inc
in
sub
jbe
pop
jmp
add
pop
mov
sub
fcoms
push
fldcw
mov
pop
scas
or
fnstsw
jge
imul
dec
test
or
imul
cmp
dec
shl
insl
mov
imul
sahf
loope
mov
cs
or
frstor
jge
mov
mov
pop
push
fsubl
test
dec
or
insl
adc
pop
adc
dec
nop
sti
fwait
icebp
je
xorb
shrd
jge
sbb
push
je
mov
inc
test
mov
mov
or
testl
mov
mov
lds
push
mov
inc
imul
mov
mov
mov
sub
scas
arpl
popa
or
jae
rorl
mov
and
dec
adc
mov
xchg
test
sub
jp
sti
dec
cmp
clc
sbb
adc
insb
jnp
std
arpl
add
inc
adc
or
xor
dec
inc
fs
push
jecxz
or
and
stos
shrl
adc
ljmp
aad
mov
mov
mov
inc
dec
pop
sti
cmc
dec
inc
dec
test
rcrl
inc
mov
testl
jo
push
cmp
clc
and
sub
jmp
mov
cmp
push
pop
ret
adc
fcmovu
lods
lret
adc
sbb
test
cmpl
stos
imul
aas
xchg
mov
mov
jno
mov
pusha
push
in
sub
ja
outsb
pop
orb
aaa
fiaddl
negl
cmpsl
stos
aad
das
sbb
push
sbb
xchg
adc
adc
lret
cmp
mov
orb
hlt
mov
ss
or
add
test
ljmp
mov
jecxz
or
xor
addl
xchg
ficoms
and
ljmp
stos
jno
fildll
insl
inc
out
or
gs
dec
rcrl
out
add
xor
out
jle
out
js
mull
out
pushf
mov
fdiv
inc
lea
loopne
push
jge
sbb
mov
movsb
mov
xchg
xor
gs
xor
ljmp
rcpps
fsubl
push
stc
jb
inc
add
jns
mov
push
lods
sbb
sahf
dec
pop
icebp
testl
fldcw
aas
iret
sub
in
cmp
enter
lahf
lock
mov
pop
lret
cmpsl
addr16
sbb
sub
aas
hlt
mov
imul
push
aam
adc
add
lahf
sbb
push
jmp
sub
jp
js
pusha
add
sub
cmp
ja
inc
fwait
pop
jle
loope
jle
jno
xchg
inc
divl
jl
jae
cmp
cmovne
popf
lds
mov
in
jb
out
cmpxchg
pop
sbb
push
add
mov
mov
js
xor
aad
je
sbb
leave
mov
adc
adc
roll
cld
lock
and
int3
sub
jb
test
faddl
arpl
loop
movsb
jge
sti
sbb
lds
dec
push
mov
in
call
icebp
sahf
fdivrp
mov
scas
arpl
inc
sub
mov
lds
cmp
lcall
daa
dec
fdivs
add
iret
arpl
fs
les
bsr
and
mov
out
cmpsb
dec
pop
mov
mov
xor
and
adc
jns
pop
lret
gs
es
les
pop
cmp
inc
outsl
adc
xor
cmp
mov
or
out
movsb
addr16
mov
in
imulb
shll
nop
inc
pop
shll
sbb
movsb
lods
xor
cmp
pop
mov
xchg
or
shl
lret
fstp
inc
cwtl
push
push
jno
jno
lahf
push
push
or
fldt
std
loope
jge
popf
add
outsb
fiaddl
subl
popf
imul
scas
add
add
lock
decb
mov
popa
in
mov
out
cmp
xchg
negl
mov
sbb
out
sahf
int
arpl
mov
push
bound
ret
mov
mov
mov
dec
enter
shlb
mov
push
ljmp
push
pushf
loope
dec
xchg
mov
mov
inc
jbe
jnp
dec
lcall
jg
dec
movsb
inc
jb
push
loop
add
pop
sti
sbb
cli
stos
subb
lcall
pushf
shll
ror
popf
ja
push
xchg
lds
push
push
sbb
xchg
pop
pop
les
xchg
push
aam
xchg
xor
jmp
popf
cwtl
clc
inc
std
xchg
adc
mov
adc
mov
jle
or
int
daa
adc
cmp
jecxz
mov
mov
inc
lahf
pop
shr
dec
arpl
imul
test
jne
negl
repnz
into
imul
dec
test
or
adc
add
mov
sub
inc
je
add
je
push
shl
call
add
inc
xor
jb
mov
enter
mov
and
das
lret
lea
sub
add
jl
pusha
adc
jge
jno
inc
fimull
push
outsl
int
in
dec
or
xchg
dec
int3
in
ret
loopne
out
xchg
push
jg
jbe
xor
pushf
lods
and
push
push
mov
das
sahf
push
repnz
mov
adc
mov
adc
mov
out
sub
adc
inc
sub
mulb
mov
test
int3
js
xor
pop
lock
je
xor
mov
ret
clc
cmp
nop
std
jp
inc
and
sarb
inc
enter
jbe
ret
outsl
pop
scas
cmp
daa
sbb
fs
push
mov
hlt
scas
mov
xor
cmc
mov
icebp
push
jle
xchg
pop
fiaddl
lret
mov
enter
adc
xchg
mov
mov
sbb
sbb
es
add
insl
out
ret
or
add
imul
mov
ljmp
mov
inc
jl
stos
dec
testb
mov
cmc
xchg
push
into
int
or
cmpsb
cmp
out
jnp
jg
es
sti
clc
push
into
lds
cwtl
adc
xchg
dec
repnz
out
add
mov
fisttps
mov
xchg
mov
mov
jns
addr16
mov
cltd
and
and
mov
mul
cmp
mov
xchg
mov
cmp
mov
jb
bound
out
icebp
mov
loop
ficoml
pushw
fstpl
ficoms
pop
push
mov
shl
push
inc
fildl
sub
pop
das
imul
mov
cld
xlat
mov
dec
ljmp
adc
ljmp
jecxz
cmp
lds
xchg
xor
xchg
shll
ljmp
lock
shrl
xor
enter
sbb
insb
rcll
popa
sti
les
pop
loopne
mov
jecxz
jmp
xor
fwait
imul
or
stos
fs
gs
cmc
pop
ja
cmp
call
loope
push
psrad
mov
xor
push
xor
je
xor
les
cmp
test
dec
mov
fistl
div
mov
sbb
push
nop
push
or
out
sbb
xchg
sub
sbb
and
sbb
test
sti
cmp
lahf
cmpb
inc
xlat
leave
hlt
pop
cmp
cmp
adc
call
pop
pop
adc
adc
test
fldenv
imul
mov
paddb
and
adc
icebp
test
lahf
jo
adc
mov
mov
test
mov
push
mov
cmp
fucomip
stos
push
pop
push
aad
sbb
jno
lds
mov
iret
or
dec
pop
mov
inc
xlat
insl
pop
fisubrl
jno
or
mov
xchg
mov
pop
pop
adc
add
scas
and
sub
adc
dec
push
jge
adc
popf
shlb
cmp
fwait
push
push
cmp
push
mov
nop
cmp
fs
in
out
popl
mov
sub
lock
cld
fsubs
fdivr
clc
les
shll
sbbl
jb
int3
inc
jae
or
lea
sbb
sbb
stc
sbb
sub
je
bound
lock
addr16
in
xor
add
pop
clc
jbe
cmp
inc
popa
and
ss
and
sub
outsl
aad
sbb
subb
aam
movsb
and
ficomps
xchg
cmp
ds
stos
loope
aam
xor
sbb
dec
lods
jno
push
pushf
mov
mov
lock
in
out
xchg
cmp
pop
sbb
test
rclb
adc
and
rclb
test
popa
out
mov
loope
loope
sti
mov
xchg
and
add
sub
addr16
xchg
int3
mov
xor
or
out
dec
inc
xor
repnz
jl
fidivrl
insl
test
aas
mov
jbe
pop
mov
push
loopne
jbe
xchg
cmpl
and
mov
div
sbbl
push
in
cmp
hlt
and
sti
out
cwtl
sub
xor
js
cmp
popf
mov
sti
ret
lret
test
xor
inc
icebp
sub
jne
pop
mov
dec
outsb
add
add
test
cmp
and
and
cltd
out
lds
or
out
xlat
push
add
fidivrs
aam
icebp
sti
in
mov
sub
dec
bound
ljmp
dec
push
test
or
sarl
imul
pop
pop
jnp
jb
sub
and
sbb
mov
fidivs
rorb
stc
mov
shlb
fnstenv
dec
inc
xchg
mov
ret
adc
int3
repnz
cpuid
aam
xchg
popf
or
ret
data16
rcll
cmp
arpl
aas
stos
ret
arpl
in
loopne
sar
and
add
add
sbb
ja
popa
push
aaa
pop
outsl
add
test
sbb
sbb
sbb
pop
inc
mov
imul
enter
cmp
jo
out
aaa
clc
inc
int
jge
mov
enter
pop
sbb
dec
cltd
push
cld
int3
call
push
hlt
dec
repz
lods
jmp
test
mov
lahf
inc
mov
mov
mov
scas
adc
dec
sub
das
lcall
loopne
jmp
lcall
push
add
add
xchg
movsb
lock
fsts
aad
or
sarb
mov
not
psubb
std
repz
loopne
out
daa
pop
sbb
mov
pushf
jge
pop
or
push
inc
loope
lcall
dec
jp
adc
mov
xchg
cmp
daa
xorb
push
fsubrs
popa
sahf
push
fidivl
sbbb
sub
xor
test
jecxz
mov
pop
cmpsl
insb
sub
cmp
lret
dec
xor
ss
jmp
push
mov
cmp
or
xchg
bnd
repz
test
jns
mov
ret
cmp
push
out
dec
cmp
dec
jecxz
repnz
pop
xlat
jnp
dec
sti
cli
shrl
iret
adc
lahf
and
loopne
fildl
push
mov
push
push
push
ret
xchg
and
mov
mov
fcoml
pop
and
adc
mov
mov
pusha
mov
cmpb
mov
sahf
imul
cmp
pusha
and
add
dec
cmp
insb
or
rorl
dec
pop
jno
mov
cli
xor
inc
sbb
in
fs
pop
xchg
cmp
sbb
or
mov
xchg
dec
popa
in
lock
sbbl
adc
mov
movsb
mov
xor
testl
mov
incb
and
sti
inc
push
push
or
add
fadd
pusha
fdivr
push
cmovns
cmc
push
ljmp
lret
test
in
mov
cmp
adc
push
aam
cmpsl
push
xor
outsb
les
fs
shlb
mov
inc
mov
aaa
inc
inc
lods
mov
scas
mov
ljmp
rorb
push
xchg
test
mov
pushf
lds
in
adc
out
test
negb
add
aaa
cmp
push
arpl
das
sti
jns
push
fldenv
jle
and
adc
in
cmp
call
add
ja
movsl
dec
jp
flds
xor
sbb
dec
push
fldl
subb
cmpsl
mov
int3
into
aad
jg
add
cmpsl
std
or
ljmp
les
scas
das
clc
inc
das
push
aas
imul
lahf
jb
jns,pt
icebp
jge
push
ret
or
subb
mov
fld
pop
out
pop
sti
rol
or
pop
mov
mov
popf
popa
fists
ret
shll
and
clc
add
xor
xchg
in
inc
lcall
pop
pop
dec
lahf
mov
push
std
xor
mov
mov
and
sti
stos
and
mov
iret
inc
jmp
out
out
insl
xor
out
test
dec
out
fsubs
inc
fnstenv
stos
in
sub
cmpsl
mov
je
mov
lcall
xor
push
jns
dec
mov
pop
mov
addr16
jno
dec
jp
ret
dec
fisubl
js
mov
repz
jmp
mov
or
clc
lcall
push
xchg
xchg
insl
cmp
jne
leave
adc
imul
jb
or
mov
call
ret
andps
mov
scas
ret
lret
add
jg
shl
shlb
push
inc
shrl
int3
inc
aad
je
or
xchg
add
push
sub
push
mov
fbld
rcr
negl
fnstcw
lds
je
stos
and
jns
fists
inc
icebp
inc
test
mov
dec
fidivs
mov
jne
testl
jbe
addr16
test
sbb
call
and
call
scas
jb,pn
aaa
mov
fnstsw
test
fidivl
xor
mov
add
mov
cmp
fimuls
fimull
fs
aas
push
pop
jge
nop
fbstp
jmp
pop
test
mov
jmp
notb
imul
xchg
push
out
push
cli
ret
jae
xchg
dec
cs
push
sarb
out
jne
xchg
div
mov
mov
in
xlat
test
ja
xchg
cltd
adcb
dec
xchg
sbb
in
out
mov
or
adc
js
sub
cmp
sti
dec
push
out
sub
adc
mov
adc
ret
dec
xorl
and
mov
fidivl
xchg
sbb
mov
jecxz
mov
inc
lods
cmp
xor
loope
fbld
aad
popf
add
mov
mov
in
dec
sub
push
in
loope
sub
mov
insl
test
cmp
xchg
inc
push
mov
dec
in
nop
or
adc
mov
sub
sub
inc
jne
scas
ds
mov
nop
vmread
lods
lret
loope
pop
mov
add
jbe
hlt
aam
jae
xchg
pop
or
in
outsl
je
int
cmp
in
cmpsb
or
ljmp
mulb
xchg
mov
fldlg2
inc
sarb
add
cs
cli
repz
inc
sarb
add
fwait
xor
mov
loope
mov
fdivp
adc
cmp
out
das
xchg
movsb
cmp
rorl
xchg
or
icebp
ja
xchg
inc
push
and
cld
pop
mov
into
pop
cmp
pop
sbb
imul
mov
sub
and
add
push
inc
lcall
loope
sub
or
mov
mov
sti
jno
int3
xchg
stos
dec
scas
test
popf
mov
mov
xor
xor
push
movsl
xchg
stos
cmc
pop
sbb
shrb
jp
stc
decb
xchg
add
add
cmpl
sbb
lea
inc
adc
test
jne
hlt
sbb
mov
add
addl
mov
add
cmp
cmp
xchg
push
popa
jecxz
hlt
jp
lock
and
test
add
jl
and
aas
cmpsb
jo
hlt
stc
cmp
pop
or
test
jno
aaa
sbb
and
cmp
or
aam
stos
rcll
es
ret
mov
cmpsl
lods
pop
int
daa
push
into
xor
jns
mov
subl
call
xor
sbb
cmp
dec
add
add
or
push
fnstcw
xchg
push
add
mov
jmp
and
push
mov
sub
push
out
or
mov
nop
out
ljmp
pop
lea
fcomi
pop
idivb
mov
mov
or
fstps
and
js
xchg
loop
adc
es
dec
sub
mov
notb
cmp
dec
enter
jmp
aaa
and
mov
cwtl
leave
pop
pop
pop
dec
into
loope
outsl
push
xchg
data16
sub
int3
ds
rcll
sbb
mov
test
cld
inc
movsb
cmp
inc
test
sub
loop
mov
xchg
mov
jecxz
mov
fucomp
add
cmpsl
es
mov
cld
and
out
xchg
dec
int3
xchg
stos
ja
mov
nop
cmpb
fsubrl
push
loope
sbb
insb
test
sub
xor
into
std
lret
pop
icebp
mov
jne
das
stos
sti
sub
xor
mov
jmp
jp
insl
xor
das
mov
scas
jmp
mov
jo
mov
pop
push
fs
or
pop
out
add
mov
ffree
mov
js
sbb
or
out
adc
xor
cmpsb
push
aaa
lock
nop
icebp
mov
xchg
sbb
xor
mov
test
xchg
pop
push
clc
lock
mov
push
lods
repz
jle
cmp
push
lahf
sbb
mov
jbe
mov
dec
cmp
cmc
sahf
pop
andb
adc
sbb
arpl
fcmovnbe
pop
mov
mov
jle
jge
and
pop
push
mov
jp
mov
inc
stc
mov
mov
cmp
lock
scas
ret
xor
pop
or
popf
inc
loopne
sub
mov
repnz
enter
rorb
mov
out
sub
sahf
test
push
push
mov
das
ss
sbb
addr16
cmp
stos
aam
mov
ret
or
cmp
xchg
sbb
mov
sbb
cmp
adc
jle
icebp
sub
ja
stc
mov
sbb
mov
repnz
out
int3
dec
js,pn
or
movsl
sahf
idiv
mov
pop
sbb
cmp
popf
xchg
cli
add
cmp
mov
inc
fsubrl
mov
cld
test
mov
lret
shrb
sbb
into
std
add
jl
mov
in
inc
pusha
insb
pushf
mov
arpl
jge
fisttpll
add
insb
ss
jno
jae
ss
pushf
pop
lods
adc
lcall
mov
jmp
shrl
or
movsl
filds
dec
push
rcll
decl
jecxz
cmp
mov
mov
adc
adc
sti
and
pop
je
mov
xor
outsl
cs
pop
loopne
scas
xlat
push
sbb
rorl
sbb
adcb
push
in
push
cmpb
and
pop
les
push
popa
clc
iret
popf
adc
insb
adc
inc
fisubrl
xchg
adc
cmpsl
jmp
stc
dec
xchg
push
lods
ficompl
out
or
jge
xchg
cmp
xor
adc
cltd
call
push
adc
xor
loope
int
rcl
leave
inc
sbb
sarb
jbe
cwtl
jl
ds
imul
lea
xchg
xchg
push
mov
jge
mov
jmp
into
push
adc
pop
mov
mov
mov
adc
jne
cmp
mov
add
dec
jne
dec
mov
enter
ficomps
and
outsb
lds
xlat
sbb
push
scas
mov
in
fcoml
pop
pushf
jnp
das
cmpsl
add
mov
sub
xchg
fisttpll
and
insb
dec
mov
dec
popl
fwait
imul
pop
jo
push
or
lcall
dec
out
add
sbb
test
stos
shl
mov
sti
jmp
jo
mov
sub
lock
xchg
xchg
sub
inc
or
cmpsl
mov
aaa
data16
inc
push
in
adc
je
jb
and
sbb
pop
cmp
push
aaa
add
add
jb
pop
push
dec
je
scas
rorl
mov
lea
js
xlat
jl
xchg
pusha
xchg
ret
jbe
sub
and
mov
dec
in
fstpl
lock
out
addl
cmpsl
jl
cmpsl
fistpll
add
jne
pop
rorl
ret
adc
jg
mov
in
jne
mov
sub
jb
subb
lods
es
leave
pop
add
loopne
clc
ss
mov
or
pop
ret
dec
ja
sub
bound
mov
xchg
inc
insb
je
addb
push
sbb
pop
jae
cltd
std
insb
mov
clc
je
xchg
gs
insl
dec
ret
ret
mov
jno
stos
inc
add
push
icebp
sbb
sub
xchg
xchg
es
mov
in
cmpsl
mov
jmp
jo
or
adc
cmp
mov
sub
xor
adc
sub
cltd
fstl
mov
aaa
shll
xor
push
les
push
sub
cli
and
pop
inc
sbb
repnz
xor
int
cmc
dec
cmc
repz
sbb
xor
icebp
push
adc
cwtl
fists
scas
mov
frstor
cmpsb
sbb
xlat
mov
mov
or
xchg
mov
jp
insl
mov
push
dec
mov
mov
push
daa
mov
sti
push
data16
lret
les
andl
push
in
popf
cmp
mov
scas
repnz
lcall
xor
das
inc
lahf
in
push
lahf
data16
pop
jbe
mov
xor
ret
mov
jb
lods
std
cs
and
and
out
loopne
stos
mov
dec
fstpl
out
scas
or
add
std
xchg
add
inc
daa
test
mov
and
out
clc
sahf
shl
xchg
sub
jmp
pop
pop
in
adc
sbb
dec
mov
out
jns
nop
aad
sbb
and
add
sti
daa
mov
outsb
in
push
push
mov
jle
jo
xchg
mov
xor
add
push
mov
bound
jae
add
or
cmp
jo
sbb
fildll
fcomip
jnp
jmp
lahf
cmp
stc
mov
push
sarl
in
pushf
cmp
cld
dec
imul
mov
fcomps
insl
int3
out
lret
setno
cmp
sbb
mov
xor
stos
lock
add
inc
ja
pop
dec
and
pop
mov
fldcw
sbb
sbb
insl
rolw
mov
mov
jmp
mov
adc
aaa
outsl
mov
sub
shll
jns
mov
repnz
loop
xchg
fistpl
mov
lcall
dec
sahf
inc
imul
mov
adc
xor
jmp
test
inc
sub
aad
push
insl
add
cmp
jp
je
ja
or
adc
sub
sbb
idivb
sub
test
push
mov
mov
scas
adc
xor
subps
jle
xchg
in
call
or
sub
scas
xchg
mov
xchg
aaa
lcall
out
xchg
lods
xchg
sub
lock
jmp
adc
jl
stos
adcl
sub
add
iretw
test
insl
fsubrl
fildll
out
test
xchg
and
cmp
flds
xchg
out
mov
movsl
xchg
cmp
es
mov
jne
insl
andb
ss
jo
cltd
pop
pop
add
cmp
test
mov
lret
imul
mov
inc
cs
adc
lret
cmc
and
and
mov
ret
fldt
xchg
ja
xlat
add
aam
roll
cmp
push
shlb
push
insb
mov
cmpsl
arpl
adc
or
outsl
mov
ss
push
js
ljmp
lcall
mov
arpl
sbb
mov
in
fcomps
test
and
js
nop
xchg
mov
add
dec
mov
in
mov
imul
movsb
mov
and
lret
pop
pushf
push
jno
sbb
push
cmpsb
lock
cmp
add
add
xchg
mov
decl
sub
or
lock
and
pop
mov
or
test
cltd
rcll
inc
push
test
dec
jb
test
mov
arpl
xor
mov
ds
inc
xchg
pop
push
icebp
mov
aam
pusha
cmp
pop
cld
push
cmp
cwtl
arpl
mov
lret
dec
test
jle
adc
mov
ss
inc
jno
mov
popf
lret
xor
sahf
pop
jl
repz
cltd
out
sub
dec
sbb
mov
push
hlt
push
std
lret
shrl
loop
cli
leave
jb
scas
cmc
pop
cli
add
nop
dec
sbb
fisubrl
jp
into
or
repz
push
ds
rorl
jmp
in
das
adc
nop
push
xor
mov
sahf
lcall
mov
orb
or
and
dec
jnp
addb
sahf
sbb
out
adc
or
jp
mov
cmpsb
push
mov
push
jno
test
pop
out
cld
xor
aaa
rcl
or
aas
out
dec
sub
das
and
arpl
in
cmp
cmpsb
pop
mov
pop
mov
hlt
outsb
and
out
inc
sub
inc
into
and
push
sub
ret
jns
test
mov
shrb
das
fisubrl
jnp
push
hlt
push
leave
mov
into
jnp
inc
out
adc
outsl
clc
sub
mov
mov
or
cli
rcr
add
subl
sti
mov
jb
insl
push
fstpt
cmp
xchg
nop
ljmp
pop
testb
mov
iret
fists
cmpsl
mov
and
push
and
mov
sub
aaa
jnp
pop
fnstenv
add
adc
es
movsl
sar
cltd
xchg
leave
adc
xchg
data16
test
adc
or
or
psrlw
rcrb
daa
push
xchg
add
and
rcrb
push
mov
mov
fsubrp
dec
ret
pop
pushl
pushl
inc
xchg
fbstp
xor
xchg
push
or
fildll
dec
cld
stc
movsb
dec
jae
lret
outsl
and
pop
je
cmpsb
and
out
jecxz
dec
je
js
cmp
in
sub
jnp
jb
inc
data16
sub
lods
pop
jp
pop
lret
dec
stos
int3
imull
push
inc
addl
repnz
out
add
pop
mov
push
xchg
scas
mov
xchg
sub
dec
scas
dec
cld
rolb
call
negb
sbbl
subl
xchg
pop
adc
lcall
pop
mov
ss
clc
and
inc
or
ret
scas
push
xchg
in
in
pop
in
sbb
aaa
or
sub
aad
fucom
or
sub
jmp
subb
cmp
push
pop
pop
sub
mov
shlb
dec
jecxz
cmp
shrb
ss
mov
pop
mov
xor
pop
push
cmp
int
int3
outsb
mov
addl
fnstcw
xchg
cmc
scas
aas
ljmp
sarl
xchg
jnp
dec
repz
data16
or
add
hlt
fists
cmpsl
test
push
imul
daa
scas
push
pop
pop
orl
cmp
cld
out
ss
imull
dec
jmp
in
sbb
int3
dec
inc
rcl
jmp
les
test
out
sub
cmp
xchg
cs
or
sub
xor
leave
test
lcall
or
scas
jg
sbb
mov
inc
outsb
imul
insl
push
xchg
pop
mov
out
dec
mov
add
and
ret
cmp
pop
insl
cwtl
and
sahf
add
sub
jmp
outsl
push
mov
adc
js
stc
inc
sbb
xorb
stc
jmp
jecxz
rcr
sub
push
sbb
push
aaa
daa
sahf
and
movl
inc
xchg
xchg
enter
inc
push
insl
mov
cli
jg
push
dec
and
fstpt
hlt
jmp
out
add
and
mov
popf
cmc
fmull
insl
adc
adc
sub
pop
stc
mov
dec
insb
jae
es
or
sbb
adc
lcall
adc
xor
mov
pop
push
xchg
adc
loop
push
xchg
jmp
sub
jbe
add
mov
cs
jge
jno
ret
mov
std
je
push
push
cltd
jl
and
jge
cltd
mov
mov
adc
adc
outsl
xor
pop
jne
mov
test
pop
push
arpl
jnp
movsl
xor
adc
jmp
enter
and
fstpl
in
xor
out
mul
test
xchg
test
imul
sbb
cmovne
sbb
push
test
cmp
mov
pusha
aaa
mov
push
and
andl
cmp
lds
pop
or
pop
mov
and
pusha
enter
ret
inc
jge
mov
sub
cli
cmpsl
out
lea
dec
test
daa
xor
les
ret
inc
repz
xor
pop
aas
pushl
sbb
inc
cld
enter
ja
xchg
cmp
jle
xchg
xchg
add
xchg
jbe
fcmovne
aad
mov
dec
loopne
push
scas
inc
aam
cli
lock
lods
mov
sbb
push
mov
fld
mov
jnp
lret
fwait
xor
loope
lcall
mov
pop
std
andb
xchg
or
adc
mov
pop
jo
mov
inc
and
dec
ds
fwait
jmp
leave
stc
mov
mov
adc
xor
data16
add
inc
cwtl
std
fldenv
popf
lret
imul
mov
cmp
mov
shlb
insl
pusha
lea
out
shll
sbb
aaa
inc
pop
rep
shlb
stos
inc
loop,pt
cmp
and
roll
xchg
or
mov
or
push
ja
imul
leave
cmp
test
jns
inc
pop
inc
dec
or
iret
insb
imul
ret
mov
jecxz
mov
test
call
dec
xor
ret
push
jl
je
xchg
dec
ja
inc
insb
mov
js
pop
movsb
pop
repz
mov
add
or
xor
sbbl
add
enter
and
dec
mov
push
xchg
push
cmpsl
ret
lock
movsl
insl
ret
push
sarl
test
xchg
mov
stos
jbe
or
inc
icebp
fimull
fcmovbe
lahf
cli
sub
push
xor
mov
or
test
add
or
jnp
and
stos
scas
sub
sbb
popf
dec
pop
mov
dec
add
js
jmp
testl
mov
lahf
ds
and
repz
in
jecxz
ret
sbb
adc
mov
cmp
insb
jge
push
dec
add
xchg
fsubs
mov
imul
push
pop
push
mov
in
push
cmp
cmp
sub
imul
iret
mull
adc
add
and
shr
lock
mov
inc
inc
adc
push
inc
jmp
and
mov
jg
mov
inc
push
cmp
gs
inc
shlb
popf
add
jle
mov
xchg
mov
test
and
fwait
iret
lcall
inc
ljmp
or
in
stos
ds
test
stos
jmp
add
scas
and
aaa
loopne
in
imul
jno
movsb
xor
bound
mov
mov
jecxz
or
aas
lds
out
outsl
push
add
or
bound
out
aam
ds
shrl
and
ret
andl
stos
add
ret
fists
sti
push
inc
adc
jl
icebp
outsb
jbe
push
jg
jp
aaa
sbb
fwait
pop
roll
xor
jecxz
rorb
cmp
aam
in
outsl
xchg
imul
fisubrl
lret
cs
dec
aas
in
or
inc
stos
pop
scas
sbb
stc
out
fcoml
cmp
pop
fstpt
lea
push
mov
mov
mov
and
leave
inc
mov
pop
mov
cmc
mov
test
or
adc
mov
mov
fwait
dec
lods
add
or
dec
fimull
mov
movsb
jg
jmp
add
mov
pop
fld
and
and
pushf
dec
xchg
fwait
int
adc
mov
cli
dec
mov
sbb
pop
sub
fldenv
mov
neg
das
xor
push
aad
push
je
dec
pop
xor
sub
scas
xchg
shrb
jae
stos
pop
je
adc
lds
int
pop
mov
arpl
mov
mov
and
in
popf
popa
mov
lods
push
insb
sti
scas
jbe
in
jg
jmp
sbb
cmpsl
rcr
fcomp
sub
fildl
sub
daa
jbe
mov
fiadds
pop
sub
jle
push
add
stos
add
mov
xor
cmp
xchg
xchg
inc
cmc
int3
push
lcall
sbb
pop
mov
cmp
or
fldt
stc
mov
push
mov
sbb
xor
cmp
adc
dec
lret
mov
neg
cwtl
repnz
lret
addb
mov
lock
std
out
bound
add
mov
movsb
or
test
dec
les
mov
fdivrs
les
pop
orb
cmp
iret
stos
jecxz
inc
fadds
mov
xchg
mov
lock
xchg
lret
inc
jle
mov
lods
mov
shll
or
cmpl
jg
outsb
dec
inc
in
imul
or
mov
dec
dec
jecxz
and
fisubrs
jnp
cmp
imul
dec
mov
push
stos
test
cwtl
mov
imul
dec
pushf
ljmp
mov
fnstsw
ret
pop
jge
adc
pushf
es
mov
sti
rorl
ja
mov
lea
xchg
movsl
pop
cmc
popf
icebp
jp
roll
cmp
sti
insb
and
outsb
jns
and
dec
ret
sarl
cmp
out
lret
fisttpll
xor
test
jne
jnp
adcb
icebp
pusha
inc
into
fnstsw
cltd
nop
push
and
shrb
cmp
out
bnd
xchg
cmp
sub
cmpsb
jns
xlat
push
jns
and
pop
xor
popa
or
sbb
scas
xchg
push
xlat
add
mov
lret
scas
int3
das
lds
xchg
mov
add
xlat
pushf
push
xlat
imul
testl
addr16
mov
add
mov
pusha
pop
iret
pop
daa
les
shrl
add
cmp
das
or
jg
xor
mov
mov
mov
mov
incb
jno
xor
cmc
mov
xchg
lret
test
scas
and
loopne
sub
mov
int3
pminsw
andl
scas
sbb
and
cli
mov
xchg
in
int
inc
test
xchg
outsl
push
xchg
push
pop
ss
cmp
test
das
xor
jo
dec
imul
push
mov
mov
scas
test
std
and
aas
mov
add
xor
in
jno
popa
and
jns
cmpl
mov
test
das
je
rclb
xor
cmp
xchg
sahf
xorl
fwait
adc
les
into
pop
shll
aad
cmp
mov
xor
xor
aam
mov
mov
push
add
sbb
pop
or
pusha
inc
addr16
sahf
pop
mov
andb
push
and
out
cs
popa
sbb
incl
fs
loopne
cmp
lret
and
sbb
out
enter
cmp
dec
rorl
mull
out
push
sbb
ret
mov
jne
push
lahf
hlt
sub
sub
mov
lcall
inc
gs
inc
dec
mov
popa
insb
xchg
push
pusha
add
cmp
es
jbe
cmp
push
shll
jae
cmp
pop
mov
xchg
jnp
in
in
gs
loop
pop
add
mov
in
inc
cmc
mov
xor
jge
or
xor
ljmp
xchg
mov
mov
stc
repnz
sub
fildll
xchg
jbe
inc
cmp
mov
je
mov
dec
imul
dec
subl
pop
popf
insl
icebp
dec
cmpsb
pusha
out
int
rclb
hlt
adc
imul
inc
add
xor
mov
adc
call
mov
fs
add
dec
pop
or
push
lds
jl
ret
lret
mov
mov
dec
fcmovnb
loope
and
inc
xchg
add
push
clc
mov
shr
push
je
xchg
popa
mov
shrl
and
lods
or
fisubrs
insb
jae
sub
mov
dec
test
imul
mov
mov
mov
outsl
repnz
es
push
cwtl
xor
cwtl
mov
rcl
push
and
jle
mov
pop
lret
les
add
cli
sbb
dec
or
cmc
inc
sbb
pop
push
jb
xlat
mov
mov
lret
arpl
push
and
jns
cld
dec
cmpsb
test
pop
cmpsb
mov
pusha
stos
jns
insb
xchg
pop
lock
jnp
mov
rol
and
rcrb
sarl
inc
xor
adc
shlb
insb
shlb
into
int
pop
repz
lds
loop
mov
cmc
subb
or
adc
pop
shll
icebp
push
nop
mov
loope
pop
jle
cmp
mov
inc
cmp
dec
dec
ficompl
enter
mov
and
jp
cmpl
pop
add
vmread
mov
leave
enter
lret
xchg
inc
das
add
mov
cli
test
repz
loope
ja
icebp
adc
ljmp
fcoml
xchg
push
and
mov
lock
dec
ror
std
loop
roll
push
ret
scas
sbb
inc
adc
push
sub
or
and
rcrb
loop
push
and
dec
stc
inc
int3
jnp
mov
aad
imul
mov
movsl
je
lods
lahf
mov
jae
loopne
sub
push
adc
rcll
add
inc
xlat
gs
and
adc
cmp
in
dec
pop
sbb
inc
mov
jae
cmpsb
xchg
icebp
arpl
insb
cmp
out
mov
insb
and
mov
pop
pop
or
ficoms
sub
scas
mov
addb
dec
fsubrs
ja
ret
in
popa
push
sub
push
test
cmc
inc
test
fcmovne
pop
jo
imull
ds
dec
into
jl
push
lret
sahf
call
int
rorb
lret
xchg
cld
push
jmp
sub
mov
mov
cmp
jp
push
push
dec
daa
or
int3
dec
or
cmpsb
psubb
mov
cmp
sub
mov
mov
lock
movsb
out
sbb
dec
aad
iret
clc
xor
orl
dec
push
imul
sarb
xchg
gs
ja
mov
mov
pushf
sarl
call
xor
subl
mov
lcall
xlat
adc
clc
out
jno
repnz
bound
das
testb
in
xchg
fldenv
mov
pop
je
scas
bound
scas
mov
int3
dec
pusha
dec
aas
rcrb
out
ret
push
xchg
insb
and
icebp
pop
incl
aas
mov
shl
loop
adc
or
or
pop
popa
sahf
inc
repnz
movsl
add
mov
enter
ds
lcall
or
cmp
inc
jbe
cs
scas
nop
jae
inc
sub
icebp
test
dec
mov
push
push
mov
fiaddl
cs
adc
test
push
jae
pushl
pop
jns
outsb
or
loopne
or
int3
jnp
in
fsubrl
mov
sbb
imul
aad
sub
push
es
pop
xchg
bound
arpl
xchg
negb
fisttpll
mov
aas
xlat
xlat
mov
xor
mov
jae
dec
loop
test
sub
inc
pop
sbb
xchg
inc
stos
sbbb
cltd
sub
dec
call
in
push
or
arpl
push
adcl
fcmovb
cmc
aad
cs
test
cs
pop
jp
hlt
jae
pop
dec
cld
xchg
adc
sbb
subl
push
out
int
dec
andl
arpl
cmpsb
fistps
fdivrl
mov
mov
pop
jp
ret
mov
inc
xlat
pop
rorl
aas
addr16
pop
cmpsl
negb
mov
ljmp
sbb
imul
sti
sbb
mov
mov
aad
loope
mov
test
cs
xchg
sahf
lds
hlt
enter
cwtl
or
ja
cld
push
mov
movsbl
aad
dec
push
sub
sbbb
in
mov
cmp
pop
cmp
pop
pusha
dec
icebp
xchg
push
jmp
inc
stos
lods
popf
aas
adc
fidivrs
nop
or
fsubs
pop
push
test
cmp
jge
sbb
jnp
jmp
ljmp
push
rorl
pop
push
adc
scas
in
bound
out
adc
in
out
bswap
loope
cmp
cmp
notb
hlt
jae
pusha
sub
andb
adc
push
rcll
mov
ja
mov
fstpl
outsl
imul
repz
sbb
out
mov
pusha
jo
and
cmp
sub
mov
push
and
pusha
outsl
xchg
cli
add
ficoms
add
push
loopne
pop
daa
adc
int
pop
adc
out
pop
stos
cmpsb
mov
mov
cli
addr16
dec
sub
sbb
cwtl
dec
xchg
or
jo
aas
dec
or
mov
cs
fcmovnb
daa
stos
pop
outsl
sub
daa
fiadds
push
inc
and
pop
adc
and
negl
ret
mov
jp
sbb
inc
pop
cmp
sub
sbb
lods
orl
ret
rol
stos
lds
mov
xor
push
jne
into
stos
mov
fstpt
jle
jl
test
in
fsubl
aas
iret
int
dec
fidivrl
leave
mov
adc
incl
andb
mov
jbe
mov
ja
inc
dec
shrb
inc
inc
mov
mov
shl
test
inc
fstpl
lods
lcall
les
mov
jle
lock
xchg
fdivrl
cli
pusha
aad
lcall
scas
test
xor
jcxz
out
movsl
in
aam
push
out
and
fwait
loopne
es
call
adcb
and
mov
cld
inc
pop
mov
lods
cmpsl
pop
out
adc
cmpb
lcall
and
enter
shr
dec
addl
xor
jp
mov
cmpsb
xor
inc
push
pop
sahf
dec
loopne
lahf
inc
inc
sbb
cmpl
lcall
push
pushf
outsl
pop
aad
testl
mov
jecxz
dec
out
imul
mov
adc
jmp
pop
das
out
movsl
nop
xchg
test
call
loopne
jne
dec
mov
mull
sub
mov
sbb
or
imul
push
mov
fstpl
stos
jmp
inc
mov
push
adc
mov
sub
out
fldenv
sbb
mov
idivb
dec
cmp
es
xchg
cmpsl
xor
fsubrs
inc
scas
sbb
movsb
pop
mov
sti
push
push
jmp
mov
ret
insl
jg
mov
push
hlt
push
adc
nop
outsl
mov
addb
sbb
mov
push
inc
push
dec
inc
inc
ds
leave
sub
stos
fsubs
push
add
and
mov
nop
jle
mov
push
sub
xor
inc
jb
cltd
imul
js
push
pop
jp
int3
mov
jne
fs
fwait
je
fnstenv
mov
fnsave
mov
stos
xor
imul
mov
xchg
cltd
cmp
mov
outsl
dec
adc
adc
cmp
ljmp
hlt
outsb
aad
cltd
inc
adc
cmp
shll
in
ds
rorb
add
jne
xchg
xor
xor
repz
mov
cmp
push
cld
mov
out
mov
mov
dec
ja
rcl
or
xchg
jbe
dec
or
cs
jns
push
mov
xchg
push
mov
jbe
lock
addr16
test
scas
lret
negl
and
and
or
sub
rcr
aas
cwtl
mov
sahf
inc
inc
cmc
sub
pop
cmpsl
fninit
sub
repz
inc
fdivrl
push
lcall
xor
mov
ficoms
lret
stc
mov
xchg
adc
into
push
mov
ficomps
inc
rclb
jnp
in
mov
pop
push
or
ret
mov
xor
sar
mov
cmovs
ss
aaa
sub
sti
mov
cld
cmp
sbb
inc
cmp
and
cmp
jecxz
outsl
test
add
test
lcall
roll
fwait
mov
cltd
mov
loope
jno
stc
out
jle
mov
mov
push
rcr
das
call
into
pop
mov
xor
out
mov
pop
hlt
ds
ficomps
call
mov
xlat
dec
mov
pop
cmpsl
pop
test
push
ret
loopne
ds
dec
fildll
mov
jge
sahf
cmp
addr16
das
and
lret
sbb
addr16
sub
mov
stos
mov
mov
out
add
mov
out
je
inc
push
gs
pop
addr16
mov
mov
jle
jae
pop
imul
jo
fstpl
jg
pop
bound
xor
mov
rorl
mov
fcomps
jo
adc
xor
cltd
mov
pop
nop
push
aam
in
test
inc
cmpsb
and
jg
lcall
xor
mov
divl
je
cld
sub
pop
add
mov
cli
fwait
sbb
enter
cmp
insb
xchg
pop
out
pop
jge
ror
pop
inc
dec
test
sbb
fs
aas
je
xor
dec
dec
scas
cld
or
adc
mov
int
lret
sub
xchg
jb
roll
cmpsl
pop
movsl
mov
sub
lcall
sub
jnp
xchg
dec
stos
outsb
popa
andl
ret
xchg
and
insb
call
adc
lods
dec
daa
lahf
je
push
xor
adc
hlt
ja
add
aad
sbb
sbb
adc
xor
movsb
mov
aaa
cmpsl
in
pop
popa
xor
push
cld
movsb
or
sub
and
int3
out
nop
sarb
dec
popf
daa
outsb
push
cli
xor
hlt
pop
sub
mov
mov
and
stc
int
loop
testl
out
fdivr
movsl
pop
push
mov
mov
mov
mov
stos
jecxz
jmp
sbb
jmp
ret
shrb
cld
xor
mov
into
fwait
ja
mov
sbb
cmp
xchg
rcr
clc
scas
pop
jnp
lahf
int3
mov
xchg
jae
cltd
dec
inc
adcb
jge
mov
rcll
bound
fadds
dec
or
sub
in
adc
cmp
cltd
mov
jne
insl
adc
cs
and
sbb
cmpsb
movsb
faddl
outsl
test
or
and
lahf
bound
lea
repnz
dec
ret
sbb
and
pop
js
iret
or
mov
xor
mov
aas
pop
or
mov
mov
cmp
cmp
mov
aad
jae
insl
ret
ja
test
ja
ljmp
aad
jno
or
test
bnd
scas
xchg
out
data16
in
ja
bound
cmp
mov
jge
cmp
pop
cs
jne
sbb
mov
xor
or
push
cmc
sub
jl
stos
adc
out
jp
dec
shr
scas
repz
mov
dec
sbb
pop
xor
movsl
xor
fdiv
ds
aaa
addr16
mov
xchg
mov
ja
mov
xor
add
data16
push
fstl
fdivs
enter
push
in
leave
cmpsb
mov
lahf
and
lods
xor
add
enter
aad
dec
sti
test
cmp
pushf
push
ljmp
notl
sub
pop
xor
adc
dec
notb
insb
lahf
jo
jb
flds
int
je
adc
xor
shrb
and
xchg
pop
xlat
stos
stos
dec
cwtl
dec
inc
and
add
mov
xor
imull
leave
adc
pop
cmp
movd
ret
sbb
int
pop
lret
cmp
movsl
out
mov
cmp
ds
repnz
ds
add
jg
sub
insb
sbb
repnz
addl
std
les
xchg
or
push
adc
add
push
pusha
pusha
arpl
or
outsl
into
in
jecxz
testb
fstp
cmp
xor
mov
iret
push
push
pop
jne
push
xchg
adc
push
ljmp
stos
xchg
cmp
dec
push
pop
adc
insl
or
xchg
pop
or
aaa
dec
loopne
mov
xor
and
pop
pushf
sbbl
or
int
xlat
fwait
lods
xchg
ret
push
mov
in
scas
mov
pop
mov
xchg
les
sbb
and
sub
iret
lret
rcll
and
pop
push
cmp
inc
outsl
push
mov
xchg
imul
sub
pop
lahf
negl
or
lods
cmp
aam
idivb
xchg
shll
cld
stc
pusha
cmp
jnp
bound
jnp
add
repnz
xchg
xor
pushf
hlt
mov
jbe
dec
sub
dec
or
cmp
or
psrad
dec
mov
pop
imul
test
cs
pop
ror
mov
mov
pop
xor
js
addr16
or
lds
leave
loop
inc
fiadds
inc
jo
movsl
sti
push
inc
xchg
add
imul
xor
orl
fs
shrb
push
and
cmp
inc
and
push
xor
push
stos
enter
sbb
ret
sahf
xchg
and
or
push
xchg
insb
loopne
sub
leave
fdiv
dec
jo
inc
aam
and
inc
jbe
imul
inc
xchg
add
add
xchg
sbb
xor
xchg
mov
negl
insb
pop
sbb
mov
inc
xlat
mov
cmp
add
jg
test
and
push
mov
and
imul
ret
fmuls
mov
mov
and
jl
dec
jl
xorb
or
jbe
test
ret
push
mov
mov
hlt
adc
push
jecxz
adc
lea
orl
or
sbb
push
fsub
mov
jnp
jno
jb
inc
mov
enter
popf
adc
lock
jno
mov
xchg
ds
int3
cmp
mov
mov
cmp
out
insb
cmpl
mov
int3
pop
nop
ficomps
xchg
jmp
jno
dec
out
sub
iret
int3
pop
sub
rep
jp
or
xlat
imul
mov
sahf
or
xor
inc
mov
xor
stos
add
icebp
fs
dec
push
jns
jp
pop
rorl
es
addr16
jbe
leave
push
into
rcll
decb
lods
fnstcw
jmp
ret
adc
inc
sbb
clc
mov
shlb
inc
repz
xor
nop
andl
fiadds
sbb
pop
and
loopne
inc
dec
dec
fcoml
cli
testl
mov
adc
std
std
push
lret
mov
sar
inc
fs
icebp
data16
mov
inc
mov
xchg
xchg
pop
iret
jg
add
dec
and
mov
push
movsb
lret
sbb
xchg
sbb
add
loop
inc
xor
loope
jno
mov
add
ss
dec
js
in
sti
add
mov
enter
xchg
out
loope
cwtl
orb
inc
lods
adc
enter
movsb
jne
negl
jnp
mov
rorl
daa
and
pop
and
or
and
cltd
test
xor
outsb
ja
xchg
mov
shlb
jp
scas
xor
fwait
test
aas
das
cmp
inc
inc
test
xchg
jae
das
sbb
sbb
mov
inc
mov
ret
mov
jle
xor
jle
daa
popf
fs
or
cmc
sbb
int3
or
jnp
jle
lcall
jno
in
lahf
or
cmpsl
inc
jle
enter
cmp
fcmovne
and
inc
jb
jl
mov
fimull
inc
cwtl
les
inc
and
pop
add
jnp
repz
add
pop
or
add
in
gs
add
in
shl
dec
fdivrs
xchg
cmp
sub
push
dec
repz
pop
out
mov
pop
sbb
xchg
dec
sub
xlat
aaa
mov
adc
stos
lret
push
pop
sub
mov
jo
mov
ret
sbb
jae
adc
lea
jg
movsb
xchg
add
ret
loope
pop
insl
pushw
pop
mov
in
dec
pop
je
cli
sti
mov
push
gs
inc
mov
lahf
dec
pushf
jle
mov
xchg
into
sbb
adc
icebp
jbe
push
jbe
push
into
lcall
hlt
mov
inc
xor
loope
xchg
testl
inc
dec
dec
xchg
xlat
in
cmp
push
out
sarl
in
js
jmp
mov
fsubr
faddp
xor
sub
int3
cltd
push
mov
xor
cwtl
xor
jns
rcll
push
xor
fdivrs
ss
mov
adc
xor
jl
mov
sub
in
in
mov
ljmp
or
xchg
lret
repz
mov
shrb
sbbb
ret
in
pop
je
push
addr16
xor
add
add
push
sub
pop
in
nop
or
test
push
and
rorl
adc
sbb
aad
out
sub
enter
hlt
int
inc
ret
jmp
xchg
pusha
int3
xchg
and
mov
addb
pop
cmpsb
call
test
xor
adc
sti
cltd
stc
sub
mov
sub
dec
arpl
push
xchg
das
pop
jecxz
pop
push
popf
ja
shr
and
jnp
dec
movsl
jae
xchg
inc
pop
sbb
mov
cld
pushfw
push
xchg
jo
or
push
jno
arpl
xchg
add
cmp
sbb
mov
repz
pop
lahf
int
mov
leave
push
stos
test
xor
push
push
sub
mov
fstps
pop
popa
and
pop
dec
out
xchg
lret
xchg
shrl
and
pusha
and
mov
jge
xor
xlat
std
sahf
icebp
mov
mov
jb
rcrl
cmp
rorb
mov
aaa
sub
ja
dec
mov
xchg
or
repnz
push
imul
pushl
cs
or
jne
orl
imul
inc
inc
cmpsl
xor
mov
sub
mov
andl
fidivl
jg
insl
syscall
adc
gs
pop
int
xor
dec
enter
mov
xchg
aaa
out
fbld
out
in
mov
stos
push
jmp
out
or
xchg
mov
mov
popf
cmpsb
jnp
fsubrl
mov
mov
sti
mov
loop
mov
sbb
pop
imul
mov
cli
test
lea
arpl
and
mov
mov
les
jg
dec
stc
mov
or
and
jo
loopne
jp
or
xchg
cld
adc
flds
fdiv
js
jne
mov
cmc
flds
cmp
xor
mov
insl
mov
add
inc
mov
nop
add
ror
mov
sub
out
fcomps
push
mov
jne
fs
sbb
jl
jne
call
fistl
mov
hlt
pop
aad
mov
or
inc
popf
and
mov
push
dec
mov
cwtl
pop
mov
cmp
push
rcr
and
daa
jge
popf
xchg
icebp
std
push
push
inc
inc
mov
mov
nop
lods
cld
repnz
add
pop
insb
xchg
mov
pop
pop
stos
sahf
jge
sbb
mov
mov
pop
and
add
cmc
cmp
in
roll
xchg
movsb
js
nop
push
adc
orl
add
jle
leave
aad
lahf
stos
adc
inc
repnz
pop
stos
fdivrl
aad
scas
and
notl
andl
mov
jl
icebp
test
sub
cli
lret
mov
test
out
lret
jp
mov
sbb
loopne
loope
sbb
xor
inc
int
aam
pop
cmpsl
ja
and
fbstp
inc
hlt
sbb
movsb
xor
loope
stos
subb
in
cld
add
mov
in
jecxz
mov
jl
out
jl
jb
inc
je
repz
add
ljmp
sub
xchg
fcoml
fs
iret
loope
je
pop
push
jo
sarl
outsl
jecxz
or
lcall
xchg
mov
xor
pop
sub
sarl
stc
movsb
xlat
jb
aas
adc
mull
cs
scas
and
pop
sarb
inc
sbb
incl
xlat
sahf
cmp
push
mov
mov
stos
or
sbb
or
mov
mov
popa
rcrl
pop
jo
and
sub
add
loopnew
cmp
js
sahf
mov
cmp
sbb
lods
std
dec
inc
push
mov
enter
push
push
and
xor
mov
ret
repz
jb
add
popf
push
enter
pop
pop
neg
xor
das
xor
icebp
test
pop
pop
cli
icebp
mov
cli
and
sub
lock
sbb
mov
sbb
aad
inc
shrl
sub
xor
or
aam
incb
shlb
in
aad
es
sbb
xchg
jae
jl
jg
repz
ret
ret
jbe
ja
dec
out
aaa
mov
jl
mov
outsb
cmp
aam
ljmp
int
mov
pop
ds
ds
mov
pop
cmp
xchg
pop
pop
fcmovnbe
call
nop
adc
and
inc
mov
aam
inc
loopne
cmpsb
icebp
lcall
outsb
lea
hlt
xor
xlat
sbb
and
inc
mov
mov
daa
dec
mov
adc
xor
xor
xchg
adc
call
in
xor
add
rorl
notl
cs
shrl
and
loope
stos
sbb
adc
jge
mov
lods
dec
sub
jne
jg
xor
adc
es
push
pop
icebp
in
loop
or
test
jbe
xor
out
adc
fnstcw
dec
jmp
shl
cmp
and
add
jecxz
movsb
test
sub
dec
scas
ja
divl
mov
cmc
pop
jmp
cmpsl
pop
dec
test
addr16
lret
mov
test
aam
adc
mov
mov
mov
xchg
and
mov
mov
fs
cmp
scas
adc
es
mov
jl
ret
stos
lret
mov
outsl
xchg
pop
loope
cwtl
cmpsb
ljmp
adc
jge
pop
sbb
jb
jle
mov
and
sbb
fldcw
imull
fcoml
ficoml
cmp
pop
and
out
fimull
das
roll
mov
inc
cld
cmc
gs
dec
or
aam
add
movsb
data16
jno
shrb
add
or
cmc
icebp
shll
add
aaa
fdivs
xchg
iret
ds
adc
mov
jmp
add
gs
pop
mov
fstpl
push
mov
in
hlt
xchg
nop
lods
inc
mov
jg
jmp
lcall
subl
inc
gs
mov
and
sbb
sub
push
sbb
daa
cmp
orl
mov
jne
test
inc
cmpsb
cmp
mov
scas
xor
sbb
cmpsl
xchg
fwait
push
ss
xor
mov
or
inc
sbb
test
insl
ss
xor
negl
and
arpl
out
es
aas
icebp
dec
push
sbb
add
push
add
mov
iret
push
cs
adc
push
or
lahf
jge
mov
loope
lea
xchg
test
pop
aad
ja
fldt
mov
cmpsl
dec
mov
test
jp
in
mov
insb
or
lret
add
mov
bound
cmp
cli
rcl
pop
imulb
test
js
out
fcmovnu
jl
mov
es
or
ds
sub
sahf
mov
into
int
int3
in
out
ret
jo
sub
out
mov
inc
insl
loope
sub
pop
push
popf
xchg
testb
push
push
mov
cwtl
add
adc
xor
push
rolb
jno
cmp
sbb
pop
out
mov
fsub
cmp
xor
inc
and
aad
fsubrs
or
or
loopne
and
dec
lock
push
std
inc
scas
pop
mov
in
loopne
inc
mov
je
aam
inc
lcall
nop
test
xchg
push
cmp
xor
addr16
xor
or
sbb
ljmp
sub
mov
mov
js
cmovg
xor
mov
test
nop
out
jp
repnz
xor
lds
inc
xchg
xor
or
adc
fsubrp
adc
pop
jmp
fnsave
push
or
mov
or
roll
mov
fmuls
xchg
iret
sub
cld
inc
xor
adc
or
add
pop
adc
sub
mov
push
call
inc
xchg
sub
sub
mov
aam
gs
sub
bound
jl
sbb
fldcw
add
aaa
mov
and
add
xchg
mov
in
rcrl
inc
sbb
push
cli
stos
sti
push
loopne
enter
rcrb
pop
xor
pop
repnz
stos
cmc
mov
insl
sqrtps
mov
mov
mov
xor
test
dec
mov
jl
loopne
or
in
test
mov
ljmp
inc
stos
mov
jmp
test
push
add
push
loopne
jae
dec
clc
mov
sbb
xchg
sub
cltd
add
lahf
test
out
movsb
pop
xchg
push
sub
repz
arpl
cmp
rcrl
xor
sahf
bound
out
dec
or
rolb
das
mov
mov
xchg
fcom
cmp
mov
add
stc
fs
inc
cmp
lds
xchg
and
cltd
les
repnz
push
imul
js
mov
mov
clc
push
inc
loope
jmp
jmp
aas
mov
xchg
sbb
inc
sub
jp
hlt
mov
jns
sub
xor
jb
movsl
out
aad
xor
pop
fists
mov
adc
jecxz
xchg
push
movsl
dec
adc
roll
testb
push
lds
mov
inc
jp
mov
loop
jb
lock
xor
and
imull
aam
push
ds
sete
cmp
outsb
stos
mov
mov
or
push
mov
add
cmp
nop
pop
inc
movsb
add
xor
aaa
ret
stos
adc
dec
cs
loop
cmp
data16
je
int
sub
cmpsl
cmp
push
pop
adc
and
mov
pop
daa
mov
push
push
movsl
clc
sub
cmpsb
stos
xor
jne
shlb
daa
sti
test
rcl
pop
cmp
jbe
and
adcl
sbb
hlt
pop
add
add
iret
or
jns
sbb
aam
xor
insb
data16
adc
jl
popf
and
pop
xchg
ret
pop
es
repnz
sbb
insb
push
cmp
cmp
inc
cmp
pop
jle
lret
jmp
push
es
lods
push
adc
lock
jmp
dec
mov
in
push
mov
xor
inc
and
and
xor
imul
fimull
sub
test
cld
or
test
ljmp
mov
pop
fidivrl
and
jne
enter
outsb
and
aam
pop
inc
and
jecxz
cli
daa
test
inc
or
cmc
mov
pop
add
sarb
gs
jecxz
imul
mov
mov
out
jmp
int
test
pop
pushf
pop
out
nop
lahf
imulb
pop
pop
outsb
test
add
sbb
inc
sbb
test
punpcklwd
dec
insl
jle
aas
daa
adc
subb
and
add
xor
mov
push
sub
sbb
lahf
roll
xor
fwait
out
push
sub
int
and
dec
cmp
xchg
and
shll
fadd
xchg
sub
mov
loope
ficomps
and
jns
hlt
repz
xchg
xor
adcl
pop
cvtps2pd
repz
xlat
fadd
mov
out
cwtl
jns
xor
imul
inc
or
dec
dec
mov
cmp
xor
inc
sarb
in
inc
push
sub
or
and
fiadds
mov
and
xor
inc
push
inc
movsb
cmp
mov
sarl
sub
jg
sbbb
mov
push
push
into
push
fs
in
mov
cltd
sub
in
xchg
enter
xor
dec
hlt
aam
testl
pop
dec
lods
fsubr
or
into
sbb
jl
cmp
dec
xor
push
test
mov
int
jae
and
shll
push
ds
jb
mov
pop
add
dec
sbb
sbb
iret
mov
cmp
std
lea
sar
xchg
movsl
cmp
push
lcall
into
loope
loope
jbe
sub
adc
jle
cld
insl
jns
mov
out
dec
rcrb
bound
adc
xchg
push
mov
adc
fsub
fst
shl
roll
mov
xor
popa
aam
dec
insb
add
inc
movsb
mov
out
inc
inc
dec
scas
pop
push
fldcw
not
adc
fldcw
nop
or
pop
arpl
jmp
xor
mov
sbb
or
daa
and
mov
xlat
rclb
mov
std
fldt
xor
aad
mov
fwait
gs
and
cltd
lret
movsl
sbb
adc
mov
mov
js
dec
testl
jo
jno
mov
sbb
insl
adc
add
push
add
push
aas
jno
sub
pop
xchg
push
pop
in
dec
jge
jno
push
push
lods
fmull
xor
repz
jnp
mov
push
pop
movsl
bound
push
jno
xchg
fnstcw
dec
sbb
nop
fsubl
and
addl
fwait
sbb
loopne
cmp
lahf
cs
sbb
mov
push
js
add
pop
ficompl
adc
pop
cmp
arpl
mov
push
scas
adcb
xrelease
cmp
mov
sbb
adc
cmpb
shrb
jmp
xor
pop
ja
or
je
or
aaa
mov
xor
jl
mov
mov
xchg
rcll
shrl
call
adc
mov
xchg
mov
cmp
adc
push
and
dec
mov
les
sahf
vmaxps
cmovs
lock
ss
nop
pop
jp
shl
in
data16
xor
fidivl
cmovge
dec
in
das
cmc
aas
je
jno
lds
rcl
loope
mov
adc
pop
and
mov
xchg
fs
cmp
stc
pop
lcall
jns
pushf
push
insb
inc
mov
test
sbb
inc
push
mov
fldenv
fistps
call
repnz
mov
lret
test
push
pop
dec
pop
and
pop
leave
jne
cmp
mov
dec
rolb
in
shrl
xchg
push
roll
jb
jne
lcall
lret
cmp
ljmp
mov
pushf
jmp
push
push
adc
into
fs
adc
push
push
fcoms
and
jle
mov
push
jge
cmpsl
mov
sahf
jo
mov
jnp
xchg
mov
lahf
sahf
push
lock
inc
add
adc
ljmp
lahf
and
data16
push
dec
es
aas
and
dec
push
add
nop
mov
pop
fisttpll
ret
fimuls
or
mov
push
mov
into
das
jo
stos
push
shlb
sbb
cs
sti
sbb
lea
push
add
xchg
inc
jae
add
xchg
mov
das
push
add
ror
and
add
subb
inc
inc
mov
or
mov
jno
jmp
jl
ret
rol
stos
mov
and
jecxz
pop
dec
loope
outsl
arpl
jle
lods
ja
mov
outsb
fucomip
cmp
outsl
in
mov
xor
pop
inc
add
mov
jbe
pusha
sbb
fdivrl
dec
and
pop
hlt
lea
push
push
mov
lret
xchg
pop
mov
mov
adc
adc
mov
test
iret
sub
dec
out
xlat
inc
mov
and
dec
lea
cmpsb
std
add
div
mov
aad
movsb
jl
inc
pop
icebp
pop
ss
jge
push
repnz
xor
sbb
dec
dec
mov
inc
out
rcl
leave
subb
stc
jp
mov
sub
dec
daa
xlat
inc
adc
or
insl
sub
pop
push
mov
mov
lret
cmp
adc
shl
pop
data16
lea
outsl
nop
adc
xor
nop
add
iret
sbb
sbb
sbb
push
inc
roll
fmulp
faddl
pop
xor
lret
mov
shlb
jbe
mov
mov
adc
push
sahf
popf
xchg
clc
outsb
adc
ja
adc
xorl
xor
adc
loope
sub
cmp
lds
inc
push
ljmp
scas
repnz
in
sub
xchg
fcomps
sbb
lds
xchg
lods
add
pop
dec
movsl
jl
sbb
or
cmp
jo
xchg
inc
lods
mov
js
ret
int3
sbb
adc
sub
insl
pop
or
in
test
fdivr
fimuls
and
mov
repz
int
or
sub
add
push
je
in
ret
xor
mov
frstor
call
addl
jmp
mov
sbb
mov
cltd
xchg
mov
stos
subl
stc
jne
popa
cli
cmp
mov
imul
jne
lret
mov
jne
loop
in
lea
or
aam
pop
mov
ja
popf
fisttpl
jae
and
repnz
cltd
int
filds
cmp
hlt
out
jp
divb
dec
mov
and
imul
dec
pop
lds
mov
das
ja
add
outsb
pop
sbb
jne
pop
mov
jl
inc
push
popf
mov
shll
lock
icebp
and
push
mov
pop
push
jo
adc
push
fsub
push
inc
inc
cli
mov
dec
test
in
jg
adc
sahf
lahf
test
idivl
aad
dec
lods
mov
jbe
inc
pop
lret
cmp
jno
iret
fcomps
jne
sbb
lods
add
mov
js
cld
mov
hlt
dec
lock
push
and
lock
mov
mov
cmpsb
outsb
call
icebp
in
xchg
and
andb
sbb
loopne
mov
or
inc
adc
inc
mov
fsubrl
and
add
mov
dec
loop
or
jmp
sbb
je
xor
scas
mov
in
hlt
rolb
push
xchg
or
jle
xchg
test
sub
adc
xchg
adc
mov
sub
mov
cmp
mov
pusha
mov
and
dec
in
pushf
or
lock
incb
pop
xor
das
sbb
xor
push
sub
mov
adcl
push
out
ljmp
lret
inc
mov
mov
inc
lods
dec
mov
js
xor
enter
popa
test
push
fs
add
leave
cmpsl
icebp
addb
add
push
mov
mov
lcall
bt
cltd
leave
es
int
mov
inc
cmpsb
add
imul
popa
les
fwait
or
push
ret
and
imul
mov
jl
fbstp
pand
add
fstpl
mov
aaa
pop
sub
or
xor
or
mov
sti
mov
fndisi(8087
lea
jge
jmp
sahf
push
out
or
cmpsb
repz
jb
mov
xor
xor
cmp
pop
bound
or
mov
test
ret
icebp
mov
xchg
sbb
enter
ret
push
sbb
and
out
out
or
dec
testb
ficompl
push
sbb
add
aas
insl
jo
jmp
cmp
insb
mov
mov
in
loope
sbb
lods
test
in
ljmp
fisttps
mov
inc
call
jnp
jne
enter
or
imull
adc
mov
lcall
and
mov
fcoml
adc
mov
inc
xchg
mov
inc
in
outsl
lock
adc
sub
lret
insl
outsb
insl
aad
ss
stos
inc
sub
icebp
and
adc
push
mov
lret
sub
repz
out
or
push
fsubs
ja
cmp
decb
xchg
pop
sbb
and
xlat
push
sbb
or
sub
xor
add
pushf
and
sub
xadd
mov
dec
mov
cs
lds
fstp
or
fildll
std
mov
roll
fwait
jecxz
lret
xor
fmuls
pop
ja
xchg
sub
mov
out
or
adc
cmpsl
bound
adc
dec
add
sarb
push
nop
push
leave
aas
loop
add
scas
ljmp
push
mov
xchg
stc
mov
cmpsb
dec
sub
cmp
nop
push
movsl
cmp
mov
sub
inc
cmp
daa
sti
addr16
idivb
pop
aas
cmp
cmp
and
cmpsl
xor
dec
add
repnz
testl
aas
mov
cmc
call
and
lods
or
mov
cmp
push
lea
and
fdiv
xchg
out
ja
outsb
repnz
stos
orl
xchg
test
fsub
adc
pop
add
jmp
sbb
lods
arpl
and
aad
lahf
es
or
out
add
loopne
jno
das
das
in
add
sbb
arpl
sar
cmp
aad
sub
or
iret
cmp
testb
push
call
popf
int
or
mov
xchg
insb
pop
mov
push
mov
xor
popa
mov
sub
jl
jg
pop
adc
daa
jnp
xchg
std
cld
dec
mov
lods
dec
lock
and
leave
pop
js
pop
pop
fistpll
adc
sub
test
mov
jmp
out
or
cmp
cmp
aas
dec
ret
push
mov
in
movsb
test
pop
mov
inc
sbb
scas
fcmovnb
push
in
imul
ljmp
dec
repz
daa
mov
jbe
and
sbb
jmp
out
xchg
jle
xor
imul
push
cmp
int
loope
sub
inc
fisubs
lahf
xor
push
sub
lock
fld
je
pop
lods
mov
sti
testl
das
js
aas
das
jne
test
push
adc
mov
int
mov
and
data16
les
fmuls
aad
mov
insb
repnz
push
insl
xchg
push
xor
stos
stos
lds
jmp
std
outsb
leave
rcll
jp
push
cmp
adc
insb
sbb
jb
jbe
or
dec
fmull
xor
out
cwtl
sbb
jg
dec
shrb
mov
dec
xor
mov
adc
sahf
push
out
cmp
xchg
xor
fucomp
adc
adc
cmc
outsl
jbe
std
inc
jns
sbb
sub
pop
test
fwait
sbb
adc
xor
cmp
jmp
test
and
out
or
sbb
jmp
mov
in
mov
add
sub
jp,pn
inc
xchg
dec
into
fcompl
lahf
sbb
into
jg
mov
std
lods
in
lock
sbb
xor
and
jns
push
jmp
pop
out
mov
jge
int
enter
lcall
xchg
jg
and
test
pop
je
adc
lahf
aam
or
in
dec
xchg
loope
jb
iret
jns
inc
mov
add
test
fimull
xchg
in
mov
movsb
andl
sbb
sub
mov
inc
iret
and
lods
adc
outsb
adc
pop
mov
lea
sbb
test
add
pusha
rorb
push
pop
inc
and
rol
arpl
in
iret
xor
fldcw
fmuls
test
pop
repnz
xchg
push
aas
mov
cmp
ret
rclb
xlat
insl
jo
in
sahf
lods
add
shll
shl
iret
mov
addb
out
mov
xor
xchg
inc
jp
adc
fisttpll
sub
gs
out
pop
xor
lcall
or
sti
fidivrs
adc
ret
fnstcw
fisttpl
jg
pop
cwtl
loope
lret
ljmp
mov
mov
daa
xchg
fs
adc
mov
lods
lahf
and
das
mull
or
dec
sarb
pop
add
jmp
scas
or
lods
es
and
add
mov
push
pop
sbb
in
sbb
mov
pop
cmp
fiaddl
mov
jo
insl
jle
clc
aaa
negl
out
push
imul
dec
jg
cmp
leave
and
mov
inc
std
enter
adc
arpl
jp
pop
out
mov
inc
or
cmp
dec
cmp
leave
sub
enter
insl
mov
xor
pop
shlb
and
jb
sub
xorb
adc
dec
pop
pop
popa
sub
fbstp
into
roll
pop
and
incb
movsb
xor
jnp
pop
mov
add
jmp
and
push
dec
in
into
and
pushf
push
aad
inc
add
andb
daa
sbb
rcrl
adc
mov
inc
push
cld
outsl
test
cld
mov
lods
jbe
or
stc
sbb
clc
push
pushf
clc
sbb
push
loopne
repz
sbb
hlt
nop
test
pushf
push
or
fcoml
lock
pop
and
repnz
jge
cwtl
lahf
fmull
pop
xchg
std
jmp
mov
fdivrl
jne
push
xchg
fldl
aas
adc
sar
sar
jge
test
cmpsb
stc
imul
jns
lock
add
andb
cmp
cmp
inc
mov
popf
shlb
xor
je
xor
sub
push
lods
fidivrl
dec
xchg
imul
or
aaa
loop
test
inc
xor
insl
popa
sub
jbe
scas
inc
push
mov
outsb
notb
mov
lods
test
stos
scas
daa
fists
mov
push
ret
or
cmp
sub
cltd
dec
add
in
mov
cmp
pop
data16
and
and
dec
je
test
int
jae
push
jg
sub
sub
jno
cmp
jb
sbb
sub
emms
dec
int
sbb
imul
mov
push
fimull
cmp
mov
and
add
push
sahf
mov
and
sbb
inc
push
mov
inc
jp
clc
pop
sar
and
mov
and
and
fsubr
mov
mov
mov
mov
add
xor
mov
mov
jbe
scas
clc
dec
sbb
fucomip
leave
daa
pusha
inc
jg
sbb
or
xorl
xchg
mov
fsubr
mov
lods
mov
jns
lcall
mov
xchg
ss
lea
push
or
mov
pusha
dec
ds
loope
iret
lds
inc
jg
and
daa
cmp
fcos
in
push
dec
push
push
push
cmp
add
pop
pop
stos
or
inc
xlat
mov
out
lahf
testl
push
mov
mov
stc
insl
fmulp
cmp
push
in
jbe
pop
lea
jmp
ja
and
aad
icebp
mov
jnp
lods
pop
xor
enter
fdiv
add
aas
lahf
jecxz
sbb
jno
lods
in
xor
jno
hlt
sti
add
popa
into
inc
inc
mov
mov
mov
mov
es
aam
stc
pop
adc
popf
sbb
pop
inc
mov
movl
ret
repz
popa
jne
add
lea
xor
push
popf
sub
and
leave
cmp
sbb
fisttps
mov
jae
pop
xchg
xchg
sub
push
les
jae
sti
lahf
data16
xor
lahf
pop
pop
pop
gs
pop
push
arpl
cmp
les
bound
lret
aad
jne
fwait
pop
xor
lss
and
push
rcrl
lea
mov
imul
in
in
comiss
das
pusha
adc
movsl
jnp
mov
mov
mov
int3
mov
xorb
sub
push
fcoml
and
je
xor
push
cmp
jo
and
xor
mov
cmp
cmp
sahf
and
in
mov
cwtl
sub
js
and
add
xor
movsb
inc
cmp
test
ljmp
jo
movsb
or
aad
xchg
pop
or
dec
pop
ret
xchg
sar
adc
cli
clc
mov
cmp
jne
adc
xlat
movsb
sbb
in
or
dec
insb
inc
ljmp
lea
stos
mov
inc
xchg
mov
mov
dec
addr16
movsl
xor
insb
add
adc
fstl
lret
jl
xor
mov
add
mov
and
ss
inc
pop
mov
movsl
in
sub
enter
mov
mov
pushf
ljmp
or
add
add
clc
stos
mov
movsb
cwtl
or
vphaddwd
paddb
mov
lret
jmp
adc
lods
adc
icebp
jmp
lock
pop
push
clc
neg
cmp
int3
in
insl
cwtl
arpl
cmp
dec
call
out
imul
xchg
addr16
mov
mov
loope
ja
pop
xor
mov
inc
xchg
lock
ss
cmp
cmp
sbb
add
mov
jle
inc
mov
fdivrp
pop
xor
inc
in
add
cmc
fsubr
addl
cltd
xor
mov
xorb
jo
ljmp
ret
les
cltd
in
negb
clc
loopne
fbld
add
pop
repnz
or
or
push
adc
ret
ffreep
cld
popf
shlb
xor
daa
lahf
pop
xor
mov
aaa
lret
add
aad
and
mov
mov
into
test
mov
in
stc
adc
sub
in
mov
das
pop
mov
test
jo
push
sub
add
sahf
adc
push
popf
jnp
or
outsb
test
mov
fidivrl
xchg
push
sub
add
ja
push
sub
jno
mov
mov
cmpsb
call
and
xor
jb
jbe
movsb
mov
ret
pop
mov
jo
adc
cltd
lcall
cli
adc
inc
fstps
repz
sub
imull
stos
les
jecxz
sarb
callw
sub
mov
fnsave
add
cmp
rcll
jb
push
xlat
sbb
mov
movd
mov
add
xacquire
popa
inc
push
add
jnp
sbb
or
in
xor
fldl
test
push
in
mov
push
scas
cmc
jl
and
xchg
xchg
pop
jae
jg
adc
insb
imull
add
sbb
inc
lods
pop
jbe
dec
sub
mov
xor
xchg
scas
inc
jnp
movl
pop
js
mov
push
js
jb
pop
push
sbb
push
out
push
add
add
xchg
or
push
inc
lret
pop
jne
test
push
jp
enter
bound
pop
loop
inc
sbb
in
push
call
or
add
or
fisttpll
pop
mov
and
fdivr
popa
popa
jae
xor
movsb
nop
fwait
mov
std
or
cmc
arpl
ss
mov
or
out
sbb
call
aaa
sbb
cmp
inc
cltd
rorb
add
fs
addb
inc
jmp
inc
lods
cmp
xlat
shll
sti
rcr
rcll
push
in
and
popf
or
sub
sbb
and
push
lock
sbb
in
in
and
pop
mov
pop
rcr
jbe
out
cs
cwtl
in
pop
or
dec
dec
mov
add
icebp
jmp
mov
jge
aaa
sub
inc
aaa
lret
adc
and
push
cld
faddl
mov
dec
pop
repz
ret
mov
add
add
pop
mov
lea
dec
adc
xchg
jb
jge
sbb
mov
stos
subb
add
push
dec
in
inc
mov
adc
push
jp
js,pt
js
cwtl
loopne
mov
loop
cmpsl
inc
lods
mov
jmp
mov
pop
enter
or
outsl
repnz
push
push
dec
lods
and
jnp
in
adc
hlt
scas
inc
jne
imul
loope
mov
insb
xchg
inc
test
sub
int
mov
cmp
adc
adc
or
jae
jae
nop
imul
push
mov
fstpl
ds
mov
xor
xchg
jge
bound
push
cmp
dec
jb
inc
iret
aas
sub
mov
pop
adc
fidivrs
push
sub
ret
xor
mov
sbb
jbe
push
lods
loopne
dec
fwait
enter
out
xchg
aas
movsb
mov
je
mov
or
outsl
mov
pop
iret
ss
jmp
in
push
adcl
pop
jno
sbbl
lea
nop
jae
cmp
xchg
mov
xor
and
dec
jb
stos
in
dec
in
test
inc
adc
push
sub
daa
les
mov
and
mov
lret
and
adc
stos
mov
cmp
lods
xchg
mov
inc
pop
adc
stc
xor
pop
dec
fisubs
xor
movl
or
aad
hlt
loope
mov
in
inc
sbb
lahf
dec
mov
fistpl
pop
push
int
add
sub
jecxz
jnp
enter
and
dec
pop
fnsetpm(287
int3
jmp
lods
out
mov
pushf
mov
out
dec
adcl
lock
stos
sub
xor
mov
xor
ss
jle
and
dec
fs
cmpl
xchg
sub
test
fwait
mov
push
addl
push
shlb
mov
pop
xor
sub
push
fnstcw
lds
cmc
dec
mov
sbb
pop
xor
cs
sbb
push
leave
cmpsl
xchg
insl
or
add
mov
int3
shl
pop
inc
cmp
rcll
mov
push
cmpb
and
mov
sub
mov
in
cmp
gs
mov
fisttpl
jle
push
xchg
adc
pop
insl
mov
lret
sbb
inc
mov
pop
inc
dec
mov
mov
mov
sbb
or
popf
mov
xlat
ljmp
jo
inc
jl
aaa
sahf
addl
dec
dec
inc
or
in
xchg
test
push
mov
or
sar
aam
test
or
fnstcw
or
popf
insl
inc
inc
push
lea
stc
add
xor
aas
push
inc
negl
push
mov
int
pop
movsl
lret
cmp
dec
cmp
xchg
push
xor
xor
sub
push
push
mov
stos
repnz
mov
ficompl
mov
jl
pop
xor
push
popf
in
dec
stos
or
and
sahf
cwtl
gs
sbb
es
inc
xchg
je
in
xchg
push
idiv
pop
fdivr
jne
mov
push
mov
push
mov
mov
repz
cwtl
dec
xor
mov
push
test
push
inc
repnz
push
push
inc
ss
loop
fadds
dec
leave
test
dec
and
mov
out
cmpsl
sbb
mov
add
movsl
xchg
sub
addr16
cld
xchg
inc
icebp
and
mov
jecxz
aas
push
popa
insb
pop
mov
test
loopne
cli
inc
mov
jmp
imul
into
inc
je
jae
mov
jns
xor
xchg
jb
addl
sbb
dec
push
nop
sbb
les
in
adc
xchg
mov
stos
les
std
loope
rorl
xchg
jae
or
adc
inc
shrd
int3
xorb
adc
call
xchg
lock
shrl
fsts
clc
jl
jp
adc
and
jecxz
adc
xor
testl
mov
pop
pop
push
jae
xchg
rcrl
mov
xchg
movsb
cmp
pop
add
jb
xadd
inc
shrb
cmp
xor
scas
push
mov
xchg
jae
inc
sub
jmp
fs
outsl
iret
call
loope
add
leave
repz
pop
add
pop
jecxz
lret
mov
jle
sbb
fsubs
sbb
add
adc
jbe
or
fisubrl
mov
dec
adc
in
jmp
out
add
jle
xchg
push
push
jmp
push
adc
lret
fdivp
nop
cmpsb
lock
xor
js
inc
cmp
push
xchg
fwait
mov
xchg
sbb
inc
jp
lret
test
movsb
insl
mov
das
sub
call
aas
shl
jo
lahf
stc
mov
and
fsubl
pop
cmp
mov
in
cmp
sub
aaa
stos
ja
dec
fldenv
adc
mov
push
cmp
mov
das
inc
mov
gs
mov
and
pop
push
inc
jno
subl
xchg
jne
movsb
xchg
jno
int3
cs
movsb
cmp
sbb
lret
mov
push
bound
and
lods
aaa
lock
gs
push
lock
mov
mov
cwtl
fcompl
xchg
inc
add
add
inc
dec
mov
lret
in
jg
push
or
sbb
push
orl
test
push
adc
jb
into
mov
mov
mov
pushf
das
rcrl
sub
insl
test
cmp
call
ja
fimuls
pushf
fst
push
jne
subl
test
jle
push
daa
mov
in
push
mov
ja
stos
sbb
mov
loope
push
push
imul
mov
sti
mov
les
outsb
cmc
add
std
je
push
mov
popf
xchg
sub
pop
and
pop
inc
bound
xchg
xor
pusha
push
push
daa
aad
clc
fildll
in
mov
stos
popf
hlt
aas
and
sbb
cmp
bound
jb
inc
jg
xchg
int3
mov
or
and
fnstsw
sbb
cmpsb
adc
cmp
out
andb
stos
cmp
inc
lock
scas
mov
jnp
nop
inc
cmp
sbb
pop
sbb
add
jo
fwait
or
mov
dec
pop
xor
cmp
cwtl
mov
jmp
pop
fmul
sbb
sbb
xchg
outsb
pop
icebp
mov
sbb
fs
inc
jecxz
cltd
mov
mov
sub
lods
mov
stc
in
jno
push
in
mov
je
scas
xchg
xor
mov
js
lods
and
data16
icebp
sub
lcall
fiadds
dec
jne
adc
and
push
mov
decl
jbe
xorb
xchg
inc
mov
fsubp
cli
or
lock
andb
mov
sub
inc
dec
shll
shll
ja
and
mov
aam
outsl
inc
test
mov
cmpb
mov
xchg
leave
lahf
inc
insb
test
outsb
scas
test
mov
and
xchg
mov
xchg
xchg
insl
test
out
inc
jmp
ljmp
out
stos
ss
incb
dec
decw
sbb
daa
add
testb
fwait
cld
jle
lods
push
pop
push
mov
inc
xor
pop
sbb
mov
es
shlb
jbe
inc
mov
ja
daa
lds
popf
scas
arpl
sub
movsb
dec
repz
scas
push
ss
mov
mov
jns
in
aaa
clc
adc
ret
push
push
inc
aam
xchg
pushf
pusha
pop
aad
outsb
lea
xchg
sub
bound
jo
mov
aaa
cmpsl
mov
mov
mov
push
sbb
cmp
pushw
fdivrs
mov
subl
xchg
fidivl
cmp
xchg
cmp
lods
mov
cmpsl
pop
mov
cli
sbb
xchg
stos
dec
and
and
in
sbbb
dec
scas
and
add
jmp
incl
ljmp
sahf
jle
inc
rcl
js
pushf
sti
mov
test
negb
pop
jg
mov
stc
dec
mov
mov
clc
popf
mov
aam
fcoms
adc
jne
inc
sbb
icebp
aam
cmp
xchg
lcall
add
pop
outsl
adc
jbe
pusha
insb
or
sub
inc
ljmp
pop
push
lret
test
and
pushf
dec
push
xlat
fistps
aam
ret
sub
inc
mov
aam
je
in
test
leave
jl
roll
lret
or
loop
mov
test
pop
je
jns
in
jnp
cli
xchg
push
jecxz
int3
scas
push
xor
pop
xor
mov
cmp
push
or
mov
xchg
aas
addr16
addr16
add
inc
test
loope
cmp
pop
jns
stos
push
mov
movsb
cmp
mov
mov
xchg
repz
jle
lret
stc
divl
movsb
mov
mov
mov
and
popf
js
mov
mov
jne
sub
pop
cwtl
cltd
xchg
shl
gs
mov
sbb
cli
inc
cmp
adc
ds
addb
sbb
lods
mov
jle
inc
lods
dec
mov
jmp
xlat
jl
cmc
mov
dec
push
out
mov
imul
stos
lock
sbb
jno
jmp
mov
fidivrs
lea
sub
xlat
dec
xor
pop
loopne
push
int3
int
jecxz
jmp
sub
or
dec
and
push
sti
jl
jl
enter
jge
popf
movsb
fists
int
mov
fmul
add
inc
shrl
ja
sub
sbb
hlt
pop
shl
ds
mov
ret
xchg
mov
push
push
cli
rclb
adc
popf
pushf
retw
nop
mov
cld
pop
jb
jbe
mov
inc
pop
testb
ds
sub
jae
xorb
imul
arpl
fisttpll
imul
cld
repnz
imul
out
ret
or
push
cwtl
add
aam
lods
rcrl
sub
lcall
mov
jno,pt
push
cmp
cmp
add
xchg
add
sub
mov
test
cmp
mov
cmp
clc
mov
add
test
sbb
cs
cs
push
fildll
lods
xchg
add
lret
and
mov
imul
lret
movsb
push
sbb
cmp
sahf
in
cltd
add
in
cwtl
push
lret
cmpsb
jno
dec
adc
test
jle
mov
mov
cs
push
and
push
out
mov
insb
xor
or
test
movsb
cld
aas
fnstenv
clc
sarl
scas
inc
lcall
push
dec
popa
popf
call
jbe
loop
mov
pop
fwait
or
or
data16
dec
negb
push
hlt
fists
sub
nop
data16
imul
xor
lock
push
inc
push
fdivl
cmp
xlat
insl
cs
ja
out
dec
and
xor
das
inc
add
outsb
mov
pop
push
cmpsl
and
mov
stc
mov
jne
sbb
pop
lret
out
jmp
cmp
std
push
inc
fucom
sbb
lock
aad
ja
push
jl
or
jg
dec
and
ljmp
in
icebp
enter
jl
loopne,pn
imul
push
clc
dec
je
push
mov
in
push
mov
cmp
jl
bound
ss
rolb
out
jge
ss
and
setbe
les
mov
sub
cmp
sbb
adc
into
mov
jns
add
orb
cmp
and
mov
out
pop
and
pop
push
lahf
stos
in
jmp
mov
and
cmp
roll
out
repz
dec
xor
jg
dec
sbb
pushf
pop
repnz
xor
pop
sbb
mov
mov
inc
popf
cld
jecxz
out
lock
cmpsb
fs
jg
popf
mov
push
inc
and
sbb
inc
sub
mov
shl
in
mov
and
lock
inc
cmpb
mov
jmp
cmp
loopne,pt
les
aad
ret
sub
fimuls
push
cmp
push
cld
mov
rclb
cld
cmpsl
xor
mov
pop
in
mov
test
add
push
add
lret
ret
push
lods
notl
mov
ja
mov
xchg
fwait
daa
mov
push
adc
jo
into
rol
adc
dec
mov
xor
add
ficomps
jne
adc
loop
jo
xchg
cli
push
repz
sub
push
jbe
push
cmp
movsb
les
mov
push
and
loopne
subl
mov
lret
mov
loope
jmp
jnp
push
cld
dec
fbstp
cmpsb
in
les
cltd
jnp
jmp
mov
dec
sub
inc
cmp
dec
add
xchg
test
mov
lret
popa
subb
scas
adc
inc
pop
pusha
iret
inc
cs
bound
cwtl
int
dec
call
cltd
mov
pop
and
clc
mov
test
adc
add
lods
out
out
cld
sub
gs
sti
je
jmp
push
cmc
adc
movsb
outsb
pop
scas
jnp
lock
mov
or
dec
out
mov
and
lcall
divb
in
push
cmp
or
jnp
insl
push
popa
or
loop
cmp
out
mov
adc
xchg
pop
std
pop
shll
ret
mov
nop
pop
leave
dec
pop
jae
adc
shrb
or
orl
test
stos
outsl
pop
iret
clc
ss
pop
popa
pusha
sbb
jae
mov
xchg
inc
mov
lock
negl
popf
ljmp
mov
jle
sarl
sti
pop
jmp
jge
psrld
add
aas
fimull
xor
pop
inc
cmc
pop
loope
and
addr16
imul
sbb
cmp
lock
scas
xor
xor
ret
out
out
icebp
dec
inc
cli
stos
fistpl
fisubrl
mov
or
and
mov
push
fwait
leave
cmpsb
clc
jg
or
fs
pop
dec
adc
xor
sub
ret
leave
lahf
cmpl
notl
into
nop
aaa
mov
popa
xor
jnp
jg
jb
pop
sub
lahf
mov
rorb
pop
push
jne
mov
repz
dec
daa
int3
es
xchg
xor
js
jmp
sub
cltd
lods
pop
push
xor
mov
cs
int3
adc
push
in
inc
adc
inc
push
ret
movsb
daa
movq
pop
add
jecxz
pop
insb
sbb
shll
pop
jnp
xchg
push
xchg
mov
dec
pushf
inc
xchg
shll
or
add
push
jmp
int
je
xchg
push
rcll
sub
sbb
mov
mov
jge
cmp
insl
xor
add
mov
jo
test
adc
ret
mov
jmp
sahf
cmp
cmp
ss
push
adc
cmpsb
fiadds
outsb
xchg
je
cmpsb
mov
inc
sbb
cmp
mov
bound
adc
and
stos
or
cmc
rolb
out
fidivl
out
adc
scas
mov
cmpsb
and
rolb
xchg
dec
aad
mov
sti
inc
popa
and
sub
mov
mov
fstpt
pop
fnstcw
mov
adcb
jae
nop
les
cmpsl
cmpb
adc
insb
and
sub
les
add
out
mov
pop
xor
push
inc
cmp
das
push
or
pop
fwait
xlat
ds
aas
cmp
loopne
test
cli
dec
cli
xor
popa
xlat
inc
test
data16
dec
scas
sub
push
out
mov
jb
xchg
imul
push
test
dec
rcl
mov
int3
fwait
cltd
xor
push
insb
jne
mov
lods
out
insl
inc
mov
cli
les
cmpsl
pop
xchg
or
cmpsl
icebp
jle
fstps
jmp
xor
roll
movsl
lcall
mulb
or
pop
add
xchg
and
or
jb
mov
jle
inc
fsts
mov
es
xchg
push
mov
pop
push
jle
pop
cltd
inc
mov
sar
mov
mov
xor
scas
aas
sarb
push
inc
ret
jo
sbb
scas
mov
js
xor
pop
and
roll
add
mov
lcall
ds
lods
mov
cmpsl
xor
or
sbb
addr16
int3
xchg
neg
adc
out
mov
ret
mov
stos
and
jb
or
pop
push
xchg
hlt
mov
outsb
cwtl
jge
push
mov
adc
fcomi
pop
rcrb
test
pop
adcb
and
cmpsb
xlat
in
pop
hlt
pop
std
lock
jno
mov
xor
bound
inc
xorb
xchg
jo
mov
gs
push
jnp
js
adc
cmp
int3
pop
fsubp
out
push
stos
fistl
addl
fcoml
mov
divb
mov
mov
cmp
jbe
mov
rcl
mov
push
cmp
and
fdivs
cmp
in
adc
lret
loopne
cmpsb
std
pop
and
cmc
and
loopne
cmpsl
mov
lcall
push
leave
jle
aad
sub
push
lds
xor
mov
cmp
jbe
cltd
jns
stos
jmp
or
lret
inc
xor
daa
adc
int3
push
pop
add
or
imul
cmove
pop
push
mov
int
pushf
xor
jbe
add
dec
cli
mov
pushf
decb
rclb
in
ret
imul
repnz
int3
repz
subl
or
mov
mov
xchg
cmp
xchg
xor
sti
aad
or
stos
lahf
push
cmp
mov
sbb
xor
mov
aam
in
jmp
int
ret
mov
jae
jne
sub
ret
daa
and
movsl
ss
lret
adc
ja
sti
cmp
cmp
sub
cmp
int3
lods
outsl
mov
pop
repnz
or
jle
xchg
pusha
dec
jbe
shl
insl
dec
inc
lock
adc
push
sub
stos
aas
pop
into
mov
adc
sbb
ss
cmp
mov
rolb
mov
and
les
and
enter
mov
sbb
adc
sti
adc
xchg
jbe
mov
jbe
cmp
cltd
inc
sbb
les
not
test
test
and
add
in
mov
fsubr
pop
mov
pop
inc
ret
mov
mov
adc
out
popa
in
pop
xor
pop
sub
shrl
xchg
movsb
xor
jge
push
data16
cltd
test
cwtl
lods
aad
add
mov
mov
push
mov
mov
pop
frstor
inc
inc
push
sbb
movsb
rcrb
cwtl
cltd
xor
ficompl
jne
test
pushl
ljmp
pop
cmp
jo
stos
sub
mov
mov
sahf
xlat
and
xchg
sub
mov
xchg
add
pop
nop
xchg
aas
imul
mov
jo
or
pop
les
adc
aaa
mov
lds
jb
mov
mov
daa
insl
sbbb
jmp
mov
sbb
cld
xchg
xchg
xchg
mov
inc
outsb
icebp
adc
mov
lods
jmp
dec
jge
jno
dec
add
sbb
mov
icebp
xor
adc
mov
cld
add
mov
sahf
ret
std
fisttpl
dec
jnp
cmc
lock
add
cmc
in
fndisi(8087
fdivrl
daa
decb
xor
adc
call
mov
ficoms
cmp
push
cmpsl
cmp
outsl
mov
sub
inc
add
lds
xor
rcll
test
sub
rorb
mov
adc
out
ret
stos
popf
lds
push
call
mov
sbb
xchg
pop
xor
mov
add
add
jns
mov
add
js
fnstenv
shr
mov
pop
outsb
outsl
roll
add
xchg
mov
out
fstpl
mov
call
or
mov
inc
cld
mov
dec
imul
or
cmp
lods
int
sub
xor
push
mov
xchg
les
lahf
pop
imul
lods
gs
je
cmp
cmp
movsb
mov
xor
addr16
inc
cmc
adc
sbb
adc
mov
xchg
rcl
int3
jo,pt
dec
ljmp
jecxz
fisubs
int3
sub
adc
adc
test
fs
mov
push
clc
xor
cmp
dec
ja
sbb
add
inc
cmp
mov
fstps
sub
js
ret
mov
push
push
dec
jmp
jb
out
sahf
stc
xor
mov
and
push
or
cwtl
ret
or
xor
pop
add
out
and
out
xor
mov
imul
pop
push
ljmp
or
pop
xor
push
loopne
idivl
xor
pop
aaa
enter
pop
mov
dec
popa
xchg
movsb
insl
ror
lahf
sbb
cmpsl
rcr
daa
or
mov
in
sbb
jb
fnstenv
mov
push
pushf
inc
dec
sbb
lods
popf
xchg
push
mov
xor
aam
cmp
subl
mov
mov
add
jns
std
jmp
mov
mov
sub
pop
xchg
into
ja
loopne
adc
rorb
in
imul
int3
fbld
mov
clc
pop
loopne
jnp
mov
into
pop
pop
inc
negl
xchg
dec
cmp
icebp
mov
jl
jl
out
pop
add
cld
test
cmp
or
mov
or
mov
loopne
ds
scas
and
xor
stos
mov
xchg
pushf
dec
jbe
lods
adcb
das
and
dec
in
insl
repz
mov
dec
loop
mov
sbb
loope
xchg
notb
adc
cli
lret
gs
ljmp
lock
dec
repnz
cmp
scas
cmp
pop
nop
xchg
movsl
inc
pop
in
add
adc
adc
aad
lcall
mov
negb
adc
xchg
jo
dec
out
mov
xchg
aaa
jp
xchg
int
push
mov
aaa
xchg
pushf
jb
repz
and
xor
sbb
or
ret
cli
jb
or
and
ficompl
insb
mov
jge
and
lret
mov
fdivs
lea
push
fimull
iret
push
test
cmp
push
push
fmul
insl
adc
mov
xor
fadds
movsl
xchg
cmovns
or
imul
mov
xor
cmpps
inc
cmp
or
leave
das
fadd
dec
in
add
add
call
pop
pop
loop
pop
jl
repz
in
ljmp
adc
sbb
add
int
mov
push
popf
mov
aaa
xor
mov
and
sti
pop
mov
stos
push
cmp
jg
cs
mov
sbb
mov
dec
cmp
int3
rcrb
cmp
aam
push
in
and
ljmp
cld
push
std
inc
lcall
inc
dec
jnp
inc
idivb
push
gs
popf
outsb
jg
cmp
sub
inc
or
push
xchg
sbb
aad
push
daa
scas
insl
das
lods
xor
test
cmpsl
icebp
cld
repnz
adcl
add
dec
mov
lds
and
pop
test
sbb
out
cli
mov
movsl
pop
shlb
xor
stos
mov
fcoms
fucom
jle
sti
lods
cmp
sub
cmpb
xlat
cwtl
fldenv
and
add
test
in
das
cmpsl
jp
cmp
inc
pop
mov
or
fwait
mov
mov
push
movsl
jns
sbb
mov
mov
into
aaa
xchg
and
pop
cwtl
mov
xlat
jle
xor
xchg
insb
int
aam
push
jecxz
pop
dec
ret
xchg
fdivs
push
shr
jno
pop
fisubs
movsb
imul
fildl
mov
lods
out
inc
mov
imul
fidivs
cli
xor
pushf
mov
popa
cli
xor
and
test
dec
mov
movsl
bound
jle
or
push
lret
add
test
push
dec
mov
hlt
mov
repz
mov
das
dec
xor
inc
pop
jo
sahf
pusha
imul
jp
in
jl
and
inc
add
lahf
ja
or
jmp
push
push
inc
and
stos
fwait
push
mov
cmp
notb
cs
divl
cs
aad
pop
sbb
xor
cmp
test
cmpsl
arpl
mov
test
push
fwait
push
jnp
ret
pop
cmpsl
push
aam
sahf
sbb
mov
nop
ja
jmp
pop
aas
aad
xchg
adc
test
into
add
cmp
xchg
and
fs
shrb
push
enterw
sbb
or
in
aaa
lret
mov
cmp
call
leave
popf
arpl
jns
sub
and
out
inc
inc
ret
push
cmp
rorb
mov
jno
adc
jge
mov
movsb
in
adc
push
sti
ficoml
insl
lods
rclb
stc
call
fisubl
jbe
or
daa
lea
sub
fiadds
cmovb
mov
inc
jle
push
outsl
in
sbb
fisttpll
shll
lret
imul
sub
testb
inc
aaa
outsl
aad
cmpsb
sbb
adcl
sbb
pop
aas
popf
rcrb
loopne
dec
aad
scas
nop
sub
and
or
xor
mov
aaa
push
aad
jae
rolb
pusha
aam
xlat
mov
cs
dec
pop
fsubs
lcall
mov
js
lret
outsl
rcl
insb
stos
cmp
test
in
dec
inc
add
inc
je
jno
and
mov
inc
cmp
jl
xchg
insb
cmc
aas
or
push
rorb
fistpll
add
and
mov
jnp
lods
push
or
testl
add
sub
fistpll
insl
mov
lock
push
mov
addr16
push
outsb
xchg
cmp
mov
lods
nop
je
jmp
sbb
xchg
out
je
inc
cmp
and
cld
push
inc
loope
and
dec
dec
push
cmp
sub
aad
jge
loopne
push
test
fimuls
call
jbe
movsb
mov
pop
ret
ja
push
es
xor
add
rcll
insb
fchs
dec
outsl
fcompl
rcrl
orb
jnp
xchg
xchg
push
pusha
outsb
mov
jae
inc
enter
pop
or
adc
mov
cltd
xor
adc
xchg
sub
leave
xlat
mov
cmovno
jecxz
push
into
mov
jge
mov
xchg
loop
adc
or
mov
ret
out
push
test
out
leave
xchg
pop
scas
xor
ror
gs
sbb
jno
sub
pop
call
inc
inc
jl
sbb
or
or
xor
sahf
and
sbb
pop
in
mov
inc
loop
xchg
stos
test
mov
and
jb
dec
in
leave
push
in
loope
push
aaa
sbb
out
sbb
fwait
pop
adc
pushl
dec
mov
pop
xor
dec
mov
sbb
mov
cmp
out
xor
ss
stos
mov
pop
inc
inc
mov
inc
fdivrl
das
mov
stos
into
mov
mov
pop
push
ljmp
pushf
in
shrb
test
test
push
aad
mov
pop
fmul
mov
cs
movsl
aad
mov
add
sbb
hlt
inc
subb
xlat
dec
mov
aas
xor
scas
jecxz
cli
xor
push
scas
das
sbb
fldl
fucomip
test
inc
jns
es
hlt
insb
mov
stos
adc
jno
fdivp
adc
rcrb
fnstsw
push
arpl
pushf
mov
iret
mov
mov
mov
dec
shl
mov
inc
out
test
add
ss
ret
ret
xor
inc
fisubrs
fwait
or
scas
das
stc
sub
icebp
pop
ljmp
push
xchg
xor
dec
mov
mov
xorl
pop
cmpsb
adc
dec
xor
iret
xlat
repz
mov
shl
add
mov
mov
push
push
adc
shlb
rclb
or
xor
cltd
xchg
imul
xchg
dec
mov
out
lea
cmpsl
jp
movsb
dec
notl
or
cmp
jl
gs
aaa
and
adc
pop
shl
push
nop
inc
pop
push
sbb
jge
gs
bound
aad
jns
and
aaa
mov
fdivrp
or
and
test
aaa
pop
mov
into
xor
xor
dec
orb
repnz
mov
cmp
movsl
cli
ds
insl
jmp
cmpsl
jb
data16
add
pop
mov
fcmovnu
mov
pop
cmc
sahf
adc
push
mov
cli
loopne
and
scas
push
jge
icebp
je
lea
aad
lods
roll
leave
in
push
sarb
gs
and
adc
ret
mov
sti
sub
adc
adc
repz
stc
push
mov
ret
cmc
subl
mov
call
jo
outsb
push
sarb
cmp
js
mov
mov
dec
jne
pop
xchg
outsb
mov
pop
push
imul
stc
and
out
sbb
and
mov
fdivrs
xchg
testl
fs
mov
lock
dec
sti
mov
cld
pop
lods
mov
and
sub
adc
lret
jo
mov
fs
or
loop
or
inc
lret
pop
fwait
jne
mov
jge
push
in
or
dec
cmc
popa
and
jmp
push
test
jnp
lock
sahf
test
lock
dec
fs
mov
inc
ja
or
std
jbe
dec
pop
mov
daa
push
rorb
inc
idiv
mov
aas
sahf
int
inc
fxch
ss
in
dec
jno
mov
aas
loopne
test
mov
sub
dec
mov
dec
mov
add
lds
jbe
insb
sbb
mov
xlat
jae
ficomps
push
dec
shll
xor
xchg
adc
pop
ja
sub
je
mov
mov
lcall
add
push
mov
mov
lock
enter
jle
jb
aaa
mov
or
pop
xchg
or
push
imul
loopne
push
add
ret
cltd
cmp
inc
fwait
mov
xchg
adc
xchg
filds
sub
mov
outsb
aaa
outsl
out
push
mov
and
xchg
sub
rorb
lods
jne
mov
sbb
push
add
and
in
pop
push
and
push
sub
cltd
jbe
sub
jmp
xor
mov
lods
cmp
outsl
dec
lea
mov
lcall
sub
stos
mov
loop
adc
push
fcomps
jnp
jo
loop
enter
xorb
mov
jo
test
pop
out
cli
arpl
or
das
enter
push
inc
shr
push
aas
scas
mov
mov
lods
repnz
cmp
fimuls
imul
mov
repnz
negl
icebp
sti
pop
es
fisttpll
aad
push
shrl
aas
mov
pop
sbb
loop
aaa
lock
nopl
nop
push
dec
out
jg
lock
in
bnd
test
fdivl
test
jnp
mov
mov
arpl
sbb
mov
or
sub
sbb
sub
cwtl
push
cmp
inc
mov
lods
push
repnz
add
ret
repz
inc
mov
cltd
jnp
lea
ja
fcoml
repnz
aas
ret
stc
fistps
aad
cwtl
ret
xor
mov
roll
ficomps
pop
rcrb
out
adc
outsl
jno
or
ss
insb
adc
test
test
shl
test
or
or
pop
les
sbb
and
fwait
inc
sub
pop
jp
push
stc
ss
fldt
cmp
xchg
adc
loope
add
inc
repz
add
rcpps
lahf
loopne
in
je
sbb
cmp
adc
xor
push
or
fistpll
aam
adcl
loop
mov
iret
mov
and
jns
mov
sbb
add
jl
cmp
adc
ja
xchg
into
mov
cmp
shr
aad
aad
leave
dec
arpl
stos
mov
inc
jle
adc
mov
cmp
push
mov
and
inc
pop
dec
rorb
iret
leave
ja
inc
je
int
in
mov
push
and
mov
xchg
das
dec
stos
cmc
push
shrb
shrl
or
hlt
inc
mov
ds
and
cmp
dec
inc
jp
call
sub
pop
inc
xor
fisubs
or
sti
pop
push
repnz
pop
jno
add
notb
mov
test
and
in
xlat
aad
cmpsl
sub
in
stc
jbe
into
dec
sbb
das
in
roll
dec
mov
and
xchg
insb
mov
loope
call
sbb
fldenv
mov
cwtl
xchg
cmp
sahf
xor
int
outsl
in
jp
pop
sbb
daa
repz
pop
mov
mov
sbb
sub
or
clc
dec
in
sbb
pop
es
lret
mov
dec
mov
mov
fdivrs
gs
leave
aaa
faddp
sbb
push
jae
fwait
jge
dec
movsb
pop
pop
lds
ffree
dec
push
imul
clc
jp
pop
mov
scas
cwtl
jne
sub
ret
jp
mov
fidivl
adc
inc
or
jb
adc
adc
add
mov
ja
in
and
mov
sbb
das
push
xor
mov
mov
js
stos
inc
sbb
orb
cmp
pop
mov
arpl
adc
adc
mov
mov
les
nop
out
mov
mov
pushf
out
mov
jl
mov
jno
mov
pop
jl
mov
cli
mov
imul
cmp
int
add
mov
mov
adc
je
popa
jnp
dec
outsb
sub
dec
js
lds
aad
xchg
jecxz
mov
sbb
mov
test
ret
es
ja
adc
jge
mov
xchg
ss
push
lds
pop
sub
xor
fldenv
add
ljmp
dec
mov
mov
scas
xor
add
lea
andb
jge
sti
sbb
xchg
testl
lcall
out
sub
cmc
mov
enter
sub
add
xor
xchg
dec
lcall
cmpsl
dec
lock
orl
inc
pop
dec
popa
gs
xchg
out
faddl
aas
insb
mov
outsl
data16
sub
std
fnstsw
in
mov
lret
mov
pushf
mov
sub
or
pop
je
mov
mov
pop
cmp
ja
shlb
cmp
cmp
xor
push
push
mov
cld
jmp
push
int
cwtl
fimull
sub
mov
inc
jbe
mov
sbb
clc
out
mov
cmp
hlt
pop
push
pavgb
mov
xchg
lret
into
fstps
or
inc
imul
jg
adc
cmc
imul
jmp
push
frstor
sti
mov
rcrl
out
call
std
push
rorl
sub
iret
test
int
xor
sub
imul
sub
test
fldt
lea
jg
jo
popf
sub
stos
or
repnz
cmp
sub
sub
inc
cmovo
jno
pop
fcmovne
sbb
xor
orl
inc
jge
push
pop
pop
fistps
add
mov
jb
pop
aam
int3
sub
xor
mov
sub
ljmp
int
adc
stos
repnz
jmp
pop
push
mov
repz
adc
xor
je
push
out
jno
cmp
jns
inc
ja
pop
js
mov
adc
nop
mov
jnp
push
xchg
jp
add
pop
or
xchg
in
movb
and
or
imul
test
sti
xor
add
pop
clc
mov
call
gs
cmc
pushf
jg
xchg
xorl
test
sub
push
scas
xor
or
xchg
mov
rorb
fucomip
dec
jae
mov
mov
dec
mov
mov
js
xor
sub
leave
clc
xor
fldcw
aas
mov
sahf
testb
repz
sahf
mov
pop
fisubs
pop
push
stos
cmp
xchg
aas
jne
cmp
movsb
xchg
fsubs
and
dec
aaa
push
mov
push
push
add
sbb
xchg
ljmp
dec
adc
loope
dec
push
stos
pop
pop
mov
bound
xchg
inc
popa
mov
outsb
mov
fmulp
fmulp
cmp
mov
inc
cmp
test
xchg
vprotd
and
and
and
mov
insl
ja
fists
inc
test
jbe
inc
fcomp
lret
cmp
pop
sub
or
cmp
jnp
sti
data16
lahf
xchg
ljmp
cmp
sbb
or
cmp
lock
arpl
aaa
flds
mov
arpl
mov
adc
pop
ss
fsubrs
das
aas
fwait
mov
jbe
mov
push
popa
xchg
roll
repz
fimull
aam
mov
sub
xor
je
sub
lock
outsl
test
repz
jmp
mov
dec
pop
push
dec
sub
mov
outsb
mov
pop
ret
ljmp
popa
push
jnp
sbb
fsubl
push
jecxz
xchg
adcl
inc
hlt
jmp
sahf
xorb
jnp
push
mov
pop
pop
pop
imul
add
enter
mov
leave
fstps
cmp
pop
sbb
ja
jl
inc
push
mov
pop
jbe
fdivl
push
push
fdivs
xchg
sub
fadds
inc
push
js
sbb
fsubrl
imul
sahf
jle
negl
bnd
ljmp
ss
push
adc
lcall
sarb
js
fdiv
jmp
mov
es
fdivrl
sub
push
ficompl
lods
in
add
je
mov
xchg
mov
pushf
xchg
inc
cltd
lods
adc
sub
repnz
pop
push
mov
cmc
jno
sub
mov
dec
test
vdivss
jo
and
pop
xor
inc
sarl
dec
xor
xchg
xchg
dec
es
stos
es
dec
or
mov
push
mov
movsb
xchg
mov
lds
jl
orl
cld
std
xor
pop
xor
push
cmpsl
lods
push
xchg
jge
inc
push
out
push
out
xchg
ficoms
pop
pop
xor
inc
jl
call
mov
arpl
cwtl
cwtl
mov
adc
enter
mov
fs
push
int
adc
iret
movl
sub
xor
inc
cmp
jmp
and
aas
cmp
nop
xor
xchg
xchg
ds
stc
and
push
or
dec
inc
test
in
shll
sub
mov
or
dec
adc
mov
xchg
cltd
fistpll
or
mov
mov
sub
push
add
mov
aam
xchg
leave
sub
ss
lock
adc
push
leave
push
clc
mov
and
scas
dec
pop
les
mov
push
std
ret
int3
std
and
mov
push
adc
adc
pop
push
jp
push
test
or
xor
jecxz
cs
mov
ds
testb
cwtl
cs
mov
fucomi
leave
fstp
inc
fsubl
mov
and
addb
add
lds
mov
adc
mov
push
lret
mov
leave
cs
jns
dec
jo
sub
fisttpll
pop
dec
dec
jge
cmpsl
je
xor
loope
adc
xor
add
fldcw
mov
xor
lcall
mov
lret
xorb
fistpl
fldenv
mov
or
xchg
notl
sub
loopne
inc
daa
jp
enter
lock
mov
xor
fdiv
in
fisubs
xchg
adc
cmp
negb
mov
repnz
lock
cmp
lds
fwait
and
arpl
inc
stc
cwtl
es
rclb
push
or
add
loopne
pop
adcl
push
shrl
call
mov
xchg
mov
hlt
and
pop
mov
mov
cmp
daa
dec
lock
gs
inc
xchg
dec
sbb
addr16
fstps
dec
mov
test
int
add
fwait
cmp
loop
jmp
lret
fmull
push
int3
pop
adc
push
sahf
xchg
cltd
sbb
hlt
dec
mov
pop
das
add
inc
and
imul
fs
jno
incw
gs
movsb
icebp
sub
js
addr16
xchg
inc
or
push
sub
jno
mov
xor
push
pop
outsl
adc
enter
adc
inc
xor
mov
pop
dec
add
adc
xor
jne
and
mov
push
repnz
fcomps
inc
fdivrp
push
sbb
leave
out
inc
movsl
aam
jbe
mov
or
sub
sub
dec
cli
scas
jae
or
outsb
push
jle
stos
xlat
test
jne
and
shl
imul
leave
push
jne
inc
insl
xor
stos
jb
dec
mov
outsb
mov
push
push
scas
insb
mov
mov
mov
cld
cli
mov
negb
loope
lea
cli
push
popa
jae
mov
aad
sbb
mov
testb
adc
xchg
inc
mov
push
xchg
fsubrl
dec
lcall
mov
xchg
lcall
sbb
mov
inc
in
jb
fstps
inc
pop
jnp
out
insl
test
movsb
lcall
inc
sbb
inc
or
jg
mov
out
sub
rclb
mov
nop
xchg
call
mull
or
and
rclb
inc
mov
adc
mov
jnp
mov
aaa
push
sub
icebp
push
fdivrp
or
cmpsl
arpl
cld
xor
mov
clc
mov
test
ljmp
lods
in
repnz
enter
and
and
lock
scas
mov
xor
mov
cltd
enter
shll
js
sbb
ss
sub
pop
inc
jmp
leave
scas
mov
and
jns
or
and
jnp
mov
mov
cmp
push
cmp
and
jne
rclb
test
mov
sti
inc
dec
in
add
enter
fcmovnbe
pop
jle
cmp
mov
and
stos
push
sub
cmpsl
lahf
or
cmp
push
mov
dec
in
xorl
scas
sar
inc
fldenv
shl
add
pop
pop
push
cld
test
and
jge
test
cmpl
pop
pop
lods
pop
lods
repnz
dec
xchg
lods
shl
xrelease
movsb
leave
mov
in
inc
faddl
mov
jmp
lea
notb
jne
js
data16
or
mov
sbb
ss
cmp
fbstp
pushf
sub
into
mov
dec
cli
dec
cmpsb
ror
shlb
fbstp
jp
loope
mov
sbb
cmp
cltd
fstpt
outsb
cmc
jmp
mov
leave
lcall
sbb
call
jp
add
push
sbb
mov
js
outsl
adc
mov
cmp
mov
dec
xchg
fldenv
xchg
cmp
stc
icebp
mov
loopne
int3
filds
repnz
in
add
out
fisttps
pop
lcall
jmp
lahf
outsb
xchg
pop
pushf
sarb
jmp
shlb
cmp
pop
dec
add
outsl
xchg
js
xchg
sub
fwait
vrcpss
sub
shll
jp
pushl
mov
pop
stc
rcll
and
mov
fmuls
xor
mov
xor
lds
pop
bound
or
inc
test
lea
mov
xchg
cmp
test
inc
inc
dec
cld
icebp
mov
iret
push
jno
cli
dec
mov
add
aas
mov
fistpl
shlb
inc
test
out
add
lock
data16
outsl
add
jae
mov
push
repnz
out
sub
inc
mov
clc
xchg
xchg
out
jecxz
std
adc
xor
lret
rolb
fnstenv
jge
pop
adc
gs
mov
lds
fmul
sbb
insb
inc
dec
push
arpl
xchg
push
lds
jge
xor
mov
cs
jp
push
push
inc
jecxz
jl
inc
push
mov
les
mov
out
mov
jl
mov
insl
repz
stc
inc
sbb
mov
jge
mov
aam
popfw
cmpsl
xor
push
mov
mov
cmp
dec
sub
mov
mov
mov
dec
in
cmp
inc
or
popa
stos
or
xchg
movsb
cmp
leave
test
jae
cmpl
nop
andb
dec
add
add
cmp
arpl
jb,pt
fwait
add
stos
and
inc
inc
dec
mov
mov
inc
inc
test
and
adc
insb
push
in
std
sub
and
cmp
adc
jne
jmp
aad
movb
clc
int
fsubrl
in
xchg
imul
xchg
aam
xchg
ret
stc
movsb
mov
and
imul
and
mov
inc
popa
mov
push
pop
lods
push
mov
mov
mov
or
jle
pop
repnz
stc
mov
dec
or
inc
xor
push
test
pandn
cmc
inc
sub
lahf
cld
dec
fstpl
cmp
aam
inc
jp
or
sbb
insl
pop
pusha
jns
xchg
push
jae
and
cmovno
sub
mov
movsl
lods
mov
icebp
jge
push
add
pop
negb
aad
loop
mov
adc
jno
push
adc
ficoml
sbb
hlt
push
insl
cltd
pop
pop
mov
shll
or
test
add
aam
sub
mov
out
scas
xchg
nop
mov
iret
popf
mov
out
clc
cli
mov
loopne
mov
aas
adc
xchg
xchg
arpl
ret
mov
cmp
cmpb
push
roll
cmp
out
bound
dec
cmpsl
sub
jp
jle
and
dec
insb
into
xor
fistpl
xchg
nop
sarb
add
mov
jecxz
jbe
lret
push
mov
xchg
das
iret
jg
mov
xchg
mov
out
mov
mov
lods
popf
sahf
ja
xorl
mov
enter
movsb
jle
daa
and
rolb
sub
das
daa
jmp
mov
adc
adc
cmp
call
push
lret
jne
in
sbb
pop
mov
mull
cltd
xorl
test
rdtsc
mov
xchg
pop
repnz
xor
cwtl
cmc
addr16
sub
in
ret
mov
enter
jmp
dec
sti
pop
imul
outsb
pop
mov
fsts
adc
and
ds
mov
repz
dec
in
mov
fbstp
mov
mov
cmp
mov
pop
xchg
dec
push
xor
inc
ljmp
loope
cmp
ficoms
stos
fxch
xchg
outsl
inc
shll
int
xchg
mov
jnp
fldenv
or
mov
and
mov
push
dec
hlt
push
jbe
mov
pop
xor
xchg
icebp
sbb
je
xchg
cmpsl
push
fdivrl
mov
jecxz
mov
cmp
add
hlt
or
jbe
mov
lock
lock
cmp
adc
test
sbb
push
faddl
mov
push
jns
das
jae
mov
jne
out
std
sti
clc
inc
pop
in
cmp
xor
jns
dec
pop
fdivs
mov
and
addb
stos
mov
mov
pop
test
adc
jg
or
aas
daa
mov
sbb
es
sub
fsubs
cmp
inc
out
jle
push
inc
data16
scas
adc
cli
push
xchg
push
and
into
inc
nop
movsl
loope
int3
mov
mov
aam
fstl
push
sbb
cs
js
cmp
outsb
jno
in
and
lcall
cmp
outsb
sub
mov
rol
mov
inc
mov
cmp
pop
xor
std
scas
repz
outsb
jmp
or
pop
fyl2x
adc
xchg
lret
mov
imul
add
xor
mov
loopne
out
jge
add
add
aad
and
ret
lret
xor
adc
in
lods
sub
movsl
pop
and
sub
mov
mov
mov
daa
add
sbb
mov
lods
xor
xchg
jle
jp
pop
push
loop
sub
lea
insb
ficompl
lods
call
sub
pusha
subl
mov
adc
pushf
js
cmpsb
jne
pop
insb
pop
loop
inc
cmp
cs
dec
ror
pushf
in
pop
sub
inc
mov
hlt
cmp
movsb
cmpsb
pushf
xor
mov
mov
call
xor
add
cmp
push
int3
movsl
jno
repz
addr16
jge
xchg
inc
and
jae
ret
inc
sbb
jne
pop
and
jmp
xor
fistl
fiaddl
mov
push
push
push
mov
xor
movsb
xchg
add
icebp
jle
pop
cmp
mov
xlat
cmpb
inc
daa
cli
inc
adc
xchg
call
inc
xchg
push
mov
xchg
das
sti
gs
gs
inc
rol
into
mov
dec
xchg
insl
and
mov
push
cmp
cltd
add
sarb
add
and
add
sub
pop
ror
js
shll
cmp
sbb
sarb
push
pop
insl
cmp
jne
xor
cmp
xchg
push
cmp
pop
or
or
aaa
inc
mov
sbbb
inc
push
cmp
cwtl
push
daa
jp
test
push
pop
xor
sbb
outsl
pop
scas
inc
cli
cmp
daa
jmp
outsl
pop
es
mov
enter
inc
sub
jnp
scas
sbb
sbb
cld
loope
xor
stos
dec
push
dec
xchg
mov
mov
ljmp
das
push
xchg
cmp
leave
fldenv
out
aad
jge
dec
sbb
ja
lods
popf
mov
mov
in
aam
sub
data16
sbb
adc
roll
sar
loopne
out
rorb
fcomip
mov
inc
stos
xchg
inc
aas
mov
sbb
bound
addl
jmp
add
test
leave
mov
dec
sti
insb
scas
sub
roll
jno
push
int
loope
sub
pop
rcrb
sub
fwait
in
iret
mov
dec
jg
sbb
ja
stos
push
test
mov
mov
into
and
pop
mov
mov
xor
lahf
cmp
shlb
out
xor
inc
shlb
or
dec
iret
mov
mov
pop
mov
in
dec
xchg
and
xor
cmp
movsb
iret
repz
cmp
popf
push
sub
and
ror
out
mov
add
sbb
or
inc
shlb
mov
outsl
dec
popf
insl
inc
pop
pop
mov
dec
out
or
cmp
je
mov
add
add
lock
pop
shr
push
cmp
and
pop
enter
mov
sbbb
bound
cmpsl
sbb
sarb
jmp
and
call
outsb
out
or
cld
iret
imul
out
test
jecxz
or
cmpsl
pop
mov
sbb
pop
xchg
popa
std
xor
mov
sbb
push
mov
and
negl
movsb
or
loope
dec
jge
fdivl
dec
mul
scas
test
mov
adc
pop
sbbl
stos
in
and
push
and
xchg
aad
in
test
movsl
cltd
xor
dec
jbe
mov
add
xchg
fistpll
dec
mov
rcrb
lock
pop
cltd
inc
xor
xchg
mov
gs
sub
cltd
sub
sub
in
pop
aas
xchg
sub
cmp
mov
shlb
add
imul
cmp
arpl
insb
push
addb
pop
inc
pop
or
cmpsl
push
sti
lods
cmp
sub
push
sub
mov
sbb
mov
aam
xchg
out
mov
pushw
push
inc
sbb
hlt
and
jge
and
icebp
dec
xor
test
ja
daa
push
add
cli
iret
rcrl
aas
dec
lods
cmp
stos
xchg
repnz
xchg
sub
scas
pop
ss
inc
adc
push
icebp
subl
jnp
jae
jne
mov
push
sbb
xchg
and
mov
xchg
sbb
mov
jmp
or
orl
xchg
push
stc
xor
mov
xor
and
jle
int3
sbb
sti
leave
push
ja
pop
nop
aas
cmc
xchg
out
sub
jmp
decl
das
push
clc
push
dec
lret
jge
xchg
inc
icebp
js
mul
add
leave
cmp
sbb
and
lock
popf
cmp
ds
lock
in
push
push
xor
and
jle
aaa
add
lret
subl
or
out
test
push
iret
sub
pop
popa
pop
notl
inc
hlt
ss
xorl
pop
sarb
test
xchg
mov
lcall
shl
fimuls
sbb
and
mov
push
jmp
xor
les
jecxz
jo
les
icebp
outsl
pop
push
xor
push
subl
out
mov
inc
adc
mov
push
dec
gs
jo
outsl
fwait
pop
xchg
inc
loopne
call
call
cld
ret
hlt
inc
pop
push
mov
pop
jns
int3
dec
mov
push
arpl
inc
imul
mov
loopne
inc
sub
push
ret
leave
mov
mov
and
stos
mov
pusha
std
jmp
xchg
adc
adc
mov
mov
in
aad
xchg
mov
jmp
loope
daa
cs
mov
or
stos
gs
inc
in
clc
mov
push
gs
fimull
xor
aas
lea
jb
xchg
popf
adc
mov
orl
popa
mov
sub
call
sbb
xchg
hlt
pop
loop
and
inc
icebp
and
xchg
jo
jo
lods
imul
test
repz
lods
xchg
xchg
lods
pop
pop
ss
int3
push
or
mov
dec
call
cmp
scas
mov
js
sbb
jp
rcl
xchg
mov
das
mov
ds
and
mov
cwtl
pop
mulb
jo
jo
mov
gs
and
rcrl
cmpsl
pop
dec
gs
enter
rorl
inc
xchg
ja
cmp
cmp
stc
jne
das
or
outsl
fisttpll
ret
adc
pop
sti
insl
mov
loop
xor
or
pop
mov
popa
test
jmp
adcb
adcl
incb
in
fwait
adc
push
cmp
pushl
leave
cmpsl
add
push
test
mov
add
fimull
jne
das
sbb
inc
cmpsb
jbe
sti
ljmp
adc
loop
cmp
sbbl
cwtl
dec
jge
dec
aam
mov
mov
call
sub
lar
lock
shlb
lea
jmp
pop
push
push
push
loope
rcll
sub
add
inc
jno
mov
lahf
cld
sub
cld
push
aad
adc
push
pop
dec
in
ljmp
fldl
dec
xor
push
cli
xor
adc
mov
sahf
lds
dec
cmc
fdivrl
adc
push
daa
aaa
lahf
jno
cmp
add
dec
mov
cmpb
push
xor
lcall
push
inc
dec
and
in
popa
push
cmp
mull
pusha
xor
addb
inc
cmp
and
jge
inc
movsl
jmp
cmp
repz
aad
insl
in
int3
jge
dec
imull
stos
das
lahf
das
out
pushf
repz
aam
lcall
lret
xchg
sbb
cs
insb
dec
mov
jmp
jge
dec
xor
or
push
rcrl
pushf
adc
adc
pop
call
subb
sbb
mov
and
xlat
lret
pop
and
sahf
lcall
hlt
xchg
outsb
sahf
inc
shl
push
in
mov
adc
mull
sub
mov
push
cltd
pop
aam
lret
shufps
outsl
mov
xchg
xor
stc
nop
mov
int3
cmp
mov
nop
mov
mov
sub
xlat
movsb
adc
outsb
imul
or
or
and
inc
jl
popa
inc
mov
push
dec
xchg
movsl
aas
loope
xor
pop
insl
stos
les
mov
inc
dec
or
shrl
jmp
scas
xor
ljmp
mov
mov
mov
shrb
rcll
into
lret
pushf
jb
lret
pop
xchg
repnz
add
lahf
in
dec
add
mov
mov
jnp
push
and
mov
pop
cmpsb
insb
mov
das
rorb
inc
mov
xor
lods
mov
lret
neg
cmp
inc
inc
icebp
bound
movsl
jp
mov
xor
loope
cwtl
std
cs
push
int3
jl
cmp
dec
cltd
das
xlat
dec
add
std
ret
imul
loopne
mov
xchg
mov
aad
cmp
sub
ss
mov
push
int3
shrb
mov
inc
cmp
imul
xchg
and
add
inc
aam
jmp
decl
push
mov
push
gs
xor
push
cmp
jg
jmp
pop
pop
jge
xchg
scas
mov
jecxz
add
push
fld
xchg
iretw
rol
test
and
mov
lods
sub
fmull
enter
aam
push
loop
xor
pop
cmp
cwtl
adc
ja
jge
bound
add
pop
cmp
add
int3
jne
jb
xchg
fisttps
jl
cld
movl
dec
ja
pop
mov
stos
add
mov
mov
mov
push
mov
cltd
adc
and
and
inc
jo
in
lea
mov
xchg
cmp
test
inc
and
into
inc
dec
pop
scas
test
es
or
adc
jl
adc
push
aad
test
add
imul
sbb
outsb
repnz
adc
hlt
cld
cltd
mov
movsb
outsb
xchg
sub
hlt
or
ljmp
out
negl
sub
push
int
dec
xchg
test
out
cwtl
cmpb
leave
push
je
outsl
cmp
sbb
pop
enter
inc
add
stc
or
loope
inc
cwtl
sbb
mov
fwait
sti
sbb
xlat
fistps
mov
xor
or
adc
push
fadds
movsl
push
xor
jnp
add
mov
mov
or
fildll
shll
dec
mov
jne
cmp
lret
mov
mov
pop
imul
xor
and
or
in
sahf
push
shrl
add
xor
xor
push
cmpsl
daa
fs
mov
jno
or
stos
or
cmp
out
mov
mov
mov
or
aas
cmc
pop
jns
inc
inc
xor
sub
jmp
cli
sbb
cmp
stos
lods
js
or
add
lock
dec
jp
push
jnp
mov
shrb
test
insb
and
adc
jae
fisttps
sar
leave
ss
dec
mov
sub
ret
sub
std
arpl
fcomps
rolb
xchg
dec
sbb
mov
shlb
mov
sahf
cltd
es
dec
lds
andl
enter
aaa
jo
lret
fstpt
in
or
and
out
sub
xchg
arpl
in
test
aaa
hlt
in
aaa
and
pushf
jp
jge
loope
aad
xchg
inc
or
pop
jae
jp
add
add
inc
stos
data16
mov
sti
pop
or
sub
add
fsubr
mov
in
in
imul
les
fstl
movb
nop
inc
sarb
fldcw
dec
mov
jnp
rolb
test
sub
jecxz
std
push
push
int
fcomps
ret
divl
mov
sbb
push
leave
fisttps
inc
inc
mov
adc
jp
pop
lahf
clc
iret
xor
cmp
repnz
movsl
iret
pop
in
mov
adc
sbb
imul
pop
jl
outsl
loope
adc
and
or
insl
xchg
repnz
fiadds
sub
ljmp
pop
movsb
jecxz
or
sbb
pushf
fldenv
and
cmp
iret
jg
or
insb
push
inc
sbb
bsr
sub
pop
dec
push
pop
xor
inc
scas
lea
mov
inc
fs
into
repnz
pop
sbb
and
mov
or
cmpsl
nop
outsl
das
xor
jae
adc
cmpsl
in
orl
xor
pop
jmp
lds
stos
pop
pop
push
out
inc
add
mov
divb
js
mov
out
mov
aas
xor
mov
aam
cmc
fs
jns
js
inc
rcrb
outsb
popa
mov
dec
sub
sbb
push
data16
clc
xlat
test
lds
sub
push
orl
ds
je
inc
xchg
sahf
cltd
xchg
stos
out
loope
or
scas
inc
test
mov
inc
adc
inc
pop
imul
dec
push
add
ffree
cs
cmpsl
loope
and
mov
push
mov
sub
and
cmp
aad
sub
jecxz
cmp
sbb
pop
hlt
pop
clc
push
add
insb
insl
or
es
repnz
pop
into
ljmp
mov
int3
mov
mov
daa
repz
leave
stos
xchg
adc
sti
xor
ds
xor
arpl
and
or
iret
cmc
std
jne
outsb
xor
lds
jg
filds
sbb
ret
push
pop
loopne
xlat
adc
push
repnz
xchg
pop
mov
mov
out
xor
jl
cwtl
sub
sbb
add
adc
mov
sti
lea
xor
sbb
popf
lods
dec
ss
orl
repz
les
jp
sbb
mov
or
mov
push
xor
cmp
movsl
push
pop
sub
lock
adc
pushw
adc
aam
and
ja
sub
push
ds
jle
aas
lds
fstl
jbe
les
pop
dec
dec
jo
xchg
dec
mov
ret
mov
aas
pop
jo
mov
mov
sbb
push
out
jne
shlb
shrl
jl
hlt
mov
scas
dec
leave
fdiv
test
add
jne
inc
inc
ljmp
jmp
mov
daa
or
mov
or
sub
xchg
das
push
sbb
and
pop
adc
out
idivb
pop
clc
adc
pusha
cmp
pop
xchg
and
mov
dec
jne
lret
ss
cltd
cmp
cmp
cld
mov
or
jb
cli
dec
dec
out
cmp
dec
sbb
sbbl
cmpsb
cmp
or
rclb
movsl
movsb
dec
in
pop
add
test
loop
mov
mov
xor
cld
mov
cmc
or
dec
xchg
mov
xor
lods
adc
fsubp
xor
push
pop
ja
xchg
inc
jae
mov
test
lcall
popa
dec
pop
rcrb
or
idiv
adc
mov
push
mov
pop
and
outsb
add
inc
lahf
fsubrl
mov
pop
xchg
dec
fwait
xchg
mov
movsb
dec
stc
shll
icebp
cmp
xchg
sbb
add
xchg
stos
stc
fs
xchg
fidivl
sbb
ret
pop
iret
push
xchg
mov
outsl
scas
fistpl
nop
scas
mov
cli
lods
pop
cld
mov
int3
push
mov
inc
and
lock
in
push
stos
das
shlb
shlb
xchg
pop
fbstp
insb
sbb
xor
mov
mov
xlat
dec
xor
jmp
and
add
lcall
adc
sbb
rcrb
popl
popf
jmp
mov
pop
dec
mov
xlat
push
dec
rcrl
add
or
sahf
stos
and
js
imul
pop
push
lods
ljmp
rclb
xchg
movsl
hlt
sbb
mov
enter
sbb
add
pusha
test
push
lods
dec
loope
add
xchg
outsl
lds
add
xor
loop
jmp
mov
sbb
mov
imul
sbb
test
cmp
mov
cli
outsb
std
cmp
idiv
lret
arpl
sub
lret
in
rcr
add
ffreep
mov
push
cmp
dec
inc
leave
in
pop
sub
cmp
fs
and
std
mov
stc
or
jae
dec
aam
mov
xchg
sub
adc
fsub
xchg
imul
sti
es
lret
add
icebp
jg
lods
fs
loope
popf
out
outsl
push
test
in
pop
ret
xchg
daa
mov
mov
adc
lret
pop
mov
adc
aam
aam
cmp
sub
xchg
fisubs
mov
push
scas
imul
test
cwtl
decl
lret
sbb
lret
xchg
push
stc
push
pusha
pop
or
les
loop
mov
push
cmp
cmp
pop
dec
inc
xor
and
test
les
xor
mov
inc
push
push
cmp
and
xchg
call
enter
add
sub
pushf
fwait
dec
pushl
push
adc
sub
xchg
push
xor
and
xchg
jle
xor
es
sbb
lods
hlt
xchg
push
test
xchg
add
mov
add
and
xchg
cvtps2pd
enter
ja
lahf
outsl
daa
cld
das
or
or
call
sbb
or
sbb
pop
gs
icebp
jns
es
fisubl
jmp
orl
add
cs
cmpsb
aad
xor
jmp
jns
pop
gs
loopne
xor
add
add
push
ror
lcall
jns
outsl
mov
mov
andb
cmpsl
aaa
cltd
or
call
add
jae
push
xor
push
add
lret
pushf
cmp
xchg
fisttps
rcl
dec
std
push
lods
adc
sub
sarb
mov
jae
scas
pop
xor
add
and
loopne
stos
sahf
push
pop
fdivp
xchg
jecxz
aas
dec
push
lds
add
xchg
fmuls
sub
adc
jae
or
jbe
call
insl
filds
cmp
rorl
leave
std
sbb
pop
fs
jp
aad
arpl
cltd
sub
popf
push
stc
scas
scas
pop
and
ficoml
imul
fdivl
and
mov
pusha
movsb
adc
jnp
mov
lods
in
mov
add
sub
ret
decb
les
push
arpl
xchg
rolb
cli
pop
push
sbb
div
inc
xchg
aas
pop
dec
xchg
fsubs
cmp
lcall
sbbl
cli
rclb
sub
cs
iret
cmp
in
jb
ret
mov
jg
mov
sub
rorb
fwait
sbb
in
lods
mov
das
dec
fsubl
fisttps
mov
lods
dec
ss
insb
xor
jle
andb
mov
jecxz
mov
and
data16
inc
bswap
fnstenv
aaa
ss
mov
push
cmp
xor
jge
dec
xorb
ret
cmp
xchg
icebp
inc
and
enter
xor
mov
mov
inc
call
mov
in
pop
repnz
iret
xchg
cmp
jae
add
push
add
push
loop
xchg
out
push
cmp
inc
add
das
rolb
pop
push
dec
mov
xchg
add
enter
inc
int
sub
push
mov
cmpsl
loop
clc
jno
pop
jno
mov
push
cmc
xchg
dec
int3
lds
lds
mov
js
fimuls
dec
mov
mov
fs
test
testb
inc
jecxz
ucomiss
insl
imul
mov
imul
add
and
sbb
cmp
push
mov
pushf
xlat
jmp
aam
jne
xchg
ljmp
ds
cmp
movsl
aaa
xchg
jo
repz
call
in
cld
xlat
jmp
sub
test
sbb
jmp
push
inc
shll
lcall
loop
mov
out
inc
lods
cmp
and
cmp
push
adcl
sub
add
daa
mov
pop
jne
outsl
dec
fldt
push
std
sub
dec
mov
je
ja
sti
subb
outsb
xor
mov
xchg
mov
js
aaa
sub
ljmp
mov
jb
mov
call
push
and
push
xor
xor
mov
adc
pop
out
call
add
lahf
xor
jne
iret
inc
fisttpl
xorb
pop
add
xchg
jnp
mov
inc
cwtl
fistpl
and
inc
xor
out
pop
pushf
sahf
or
shrb
aaa
push
mov
test
nop
xor
popf
xchg
push
push
icebp
jmp
fisttps
les
push
push
jle
or
inc
daa
mov
inc
leave
ja
out
mov
fidivl
int3
fcomps
mov
fsubs
sub
rorb
mov
push
pushf
xchg
in
inc
pushf
sbb
test
daa
cld
jge
clc
pop
xchg
pop
xchg
aad
je
imul
call
jp
sbbb
and
mov
mov
mov
mov
pop
mov
test
mov
pushf
or
mov
mov
inc
cmp
fwait
and
loope
mov
dec
fstp
and
inc
push
lods
and
mov
je
inc
ret
pop
int3
sbb
adc
pop
mov
sti
sarl
xchg
push
mov
pop
pop
push
inc
sub
outsb
lret
cmc
rcl
lods
sbb
roll
add
in
mov
push
pop
push
into
inc
jge
stos
leave
and
scas
push
scas
push
sbb
mov
inc
push
pop
and
aad
aad
jle
popa
pop
loope
lcall
enter
inc
loop
jo
fwait
pop
lea
fucomp
mov
dec
lock
push
insl
pusha
test
sub
cmpsb
out
push
jo
fimull
xchg
insl
stos
shll
push
jmp
sti
nop
test
push
cwtl
test
shll
nop
imul
aas
or
add
inc
rorb
popl
jp
inc
xchg
sbb
in
pop
loopne
xchg
xchg
push
mov
int3
movsb
sti
jg
pop
jns
and
adc
cld
dec
ss
xchg
fnstcw
mov
rclb
sub
aas
xchg
cmpsl
xchg
stc
inc
insl
or
cmc
out
xchg
push
outsb
mov
test
popf
lahf
imul
lret
fidivrs
setno
sbbl
sub
scas
ss
push
or
push
dec
lock
push
sbb
and
loopne
aas
cwtl
sahf
fwait
aas
pop
xor
lea
dec
iret
jle
fimull
mov
sahf
addl
push
or
int3
movsl
ds
repz
loop
pop
les
std
adc
cmp
cld
or
arpl
sub
jbe
bound
nop
xorl
xor
sub
iret
sub
xchg
ds
bound
mov
out
scas
mov
adc
xchg
and
mov
stc
aad
fnsave
sub
lcall
pop
addr16
sbb
mov
and
out
dec
iret
xchg
fstpl
mov
add
push
mov
jl
mov
cmpxchg
lods
das
inc
icebp
cmp
mov
inc
xor
jl
push
mov
out
in
insb
popa
push
rcrb
push
push
add
ret
xchg
mov
test
and
xlat
xchg
or
pop
lods
push
mov
rorb
push
and
movl
xor
add
or
loope
into
dec
in
aaa
shlb
jp
ret
outsl
xchg
xchg
cld
push
inc
movsl
lods
sub
stc
repnz
push
xor
or
fdivs
cltd
iret
hlt
mov
xor
adc
and
jns
jge
fildll
jne
les
sub
and
movsl
mov
and
and
jl
cmp
out
dec
adc
xchg
clc
popf
cwtl
push
icebp
cmp
cmc
aam
cmp
mov
rcll
cmc
xchg
lock
fisttpl
rclb
pop
inc
popa
inc
imul
lods
mov
or
fidivl
pop
imul
inc
sub
in
iret
xor
jne
xor
ret
mov
jg
idivl
sub
imul
ja
lcall
movsl
cmp
cld
fistl
loopne
orb
mov
fcoml
ds
cwtl
or
into
jns
aad
movl
rcll
inc
lds
fdivrs
mov
dec
sbb
jmp
out
and
out
adc
scas
mov
jle
adc
cmp
cmp
stos
xor
lcall
sahf
and
int3
push
xchg
repnz
das
cmp
add
bound
mov
into
jecxz
fnstsw
bound
jge
andl
mov
xlat
push
push
aaa
mov
cmp
mov
add
cmp
sahf
dec
inc
jne
lret
out
push
mov
jnp
jmp
push
rep
shll
mov
and
or
and
push
jge
mov
outsb
imul
int
xor
enter
add
test
sub
or
mov
xchg
pop
cmp
loop
icebp
out
stc
aaa
adc
out
and
xchg
fadds
iret
add
ficoml
push
pop
xor
push
sub
mov
stos
test
mov
outsl
mov
scas
out
or
rep
pop
adc
or
cwtl
icebp
jbe
cmpsl
jg
xor
or
jns
jnp
cmpb
fcomip
out
mov
jle
jne
mov
dec
icebp
fadds
sarb
add
push
out
cmp
lret
jp
or
pop
enter
xchg
or
test
out
and
imul
pmaddwd
pusha
xor
std
dec
outsl
mov
cli
in
adc
je
mov
pop
adc
xchg
repz
std
fsubrs
jmp
icebp
mov
add
sub
push
cmpsl
sbb
in
pop
push
adc
mov
stos
ss
pop
clc
data16
mov
xor
insl
das
push
add
int3
mov
inc
and
push
in
add
movsl
sub
addr16
inc
jnp
fistl
or
mov
mov
movsb
mov
ds
into
imulb
mov
aam
mov
rorl
push
icebp
lret
mov
fs
ud0
fs
xor
push
pop
scas
jecxz
iret
int
pop
mov
js
and
imul
inc
fsubrs
xchg
icebp
arpl
add
xor
push
xlat
fbld
sub
movsb
addr16
je
inc
imul
mov
mov
out
cld
test
xor
mov
imul
insl
mov
xchg
inc
or
cmp
xlat
dec
insl
std
jg
popa
lea
fidivrs
sbb
rolb
mov
lret
mov
mov
hlt
jl
aas
and
add
jne
jnp
fdivl
jns
pop
push
adc
rol
mov
insw
cmc
and
sub
test
lret
cmpsb
les
aad
fidivs
movl
push
iret
xchg
pop
enter
fildll
jp
mov
movsl
mov
sbb
pop
sub
xchg
movsl
mov
sbb
cltd
add
inc
in
push
mov
lods
dec
xor
jb
addr16
xor
pop
loopne
fs
iret
push
sub
out
mov
movsb
ja,pt
push
stc
cwtl
dec
jmp
in
daa
inc
out
xor
push
imul
sti
push
icebp
dec
xchg
xor
sub
shr
push
lock
push
in
sbb
out
inc
push
mov
dec
sub
das
dec
jg
cmpsb
cmp
fsubs
mov
je
mov
nop
pop
jns
push
mov
dec
mov
xor
mov
inc
and
mov
ret
insl
flds
mov
pop
jnp
sbbb
xor
cmpsb
mov
dec
push
pop
aam
dec
sub
fimull
scas
sbbl
aad
cld
add
fbld
int3
or
loope
mov
inc
fiaddl
cmp
stos
test
stos
shr
movsl
push
aaa
in
std
fstpl
inc
mov
sbb
jns
out
xor
fisubrs
mov
jb
scas
sbb
sbb
mov
mov
mov
mov
mov
popa
lahf
movsl
es
aam
pop
sub
inc
sbbb
pop
and
and
sub
xor
mov
xchg
dec
nop
pop
cmp
push
repz
push
shll
dec
jns
pop
sbb
xchg
pop
cmpsl
adc
lea
ss
insl
cli
addl
inc
testl
scas
fisubl
dec
push
jo
jl
xchg
sti
xor
cmc
or
pop
in
pop
push
mov
imul
push
out
cmp
jbe
inc
imul
rcll
orl
in
xlat
in
pusha
add
push
mov
cmp
mov
cmp
stos
dec
jnp
and
lods
mov
add
ja
cs
mov
inc
aas
xchg
rcl
mov
jp
inc
mov
jl
repnz
cmp
add
and
test
and
ds
mov
lret
mov
xchg
lods
in
or
and
stos
and
pop
mov
ret
sbb
add
and
dec
push
xor
insb
sbb
xchg
mov
jecxz
out
xchg
inc
pop
xor
xlat
mov
idivl
stc
ds
cmp
add
inc
inc
mov
mov
aaa
andb
in
adc
mov
lahf
xchg
aad
pushf
mov
mov
sbb
mov
mov
cwtl
add
xor
sbb
and
pop
ss
fmull
dec
dec
aam
pop
and
and
jp
mov
xor
inc
cmp
loope
pop
xor
mov
orl
pop
push
scas
hlt
call
jo
rorl
push
dec
shlb
scas
push
adc
push
cmp
inc
test
clc
mov
add
dec
fadd
shlb
test
add
xchg
inc
jle
je
in
cli
jge
popa
pop
cmpsl
sarl
lds
adc
pop
ret
sub
jmp
add
test
das
push
xchg
aam
push
mov
push
mov
mov
pop
les
mov
cmp
pop
inc
out
je
adc
les
jle
mov
sahf
mov
bnd
and
pop
aam
hlt
imull
pop
mov
arpl
dec
ret
jp
mov
mov
sti
push
mov
dec
pop
jnp
aam
inc
cmpsl
mov
lcall
imul
idivl
push
add
stos
mov
mov
pop
stos
sub
jns
aam
into
push
push
sub
movsb
jns
add
cmpps
xor
push
scas
aad
mov
in
jns
lret
lcall
cmp
xorl
aam
xlat
stos
mov
sbb
stc
popa
out
rcll
pop
js
mov
test
ja
push
outsl
add
in
bound
imul
pop
push
pusha
jne
mov
mov
je
out
xor
in
sbb
pop
mov
bound
das
aas
ja
jge
sbb
pop
cld
in
cmpsl
or
test
adc
loop
mov
adc
imul
and
ja
fadds
iret
mov
mov
jb
jae
mov
mov
add
cltd
loop
popa
mov
mov
data16
fwait
push
dec
pop
std
ljmp
lock
inc
lods
fstl
clc
or
int3
push
in
mov
sub
xor
sub
cmp
ret
loopne
mov
inc
in
add
sbb
xchg
xchg
loop
pushf
or
test
test
popf
inc
ss
lods
cmc
lahf
xor
out
dec
arpl
sbb
mov
mov
push
aaa
hlt
push
imull
dec
or
fistps
and
pop
mov
sbb
jbe
push
test
fnstcw
jmp
xchg
cmp
push
bound
push
pop
xchg
mov
and
jle
pop
int
and
inc
mov
rcll
jmp
call
push
cmp
sahf
cs
dec
xchg
addl
call
ror
and
xor
pop
pop
into
iret
call
mov
subb
push
scas
adc
dec
dec
fistpl
add
mov
stos
iret
stos
xlat
out
lods
sbbb
xor
das
adc
mov
add
sub
imul
push
xchg
test
sahf
mov
sub
cltd
jb
pop
inc
or
push
sbb
loop
fwait
push
xchg
and
sbb
ficompl
xor
loop
dec
mov
in
pop
out
call
or
sbb
fistps
shrb
sub
popa
jmp
mov
inc
jecxz
icebp
cmpsb
sub
imul
nop
mov
jno
sub
or
xor
popf
mov
pop
cmp
ja
std
or
addr16
jns
shrb
push
and
xchg
cmp
push
adc
aam
sub
mov
iret
out
in
sarb
cmovp
pop
jmp
popa
inc
ret
mov
lahf
xchg
push
jl
mov
xchg
cmp
sub
mov
decl
int3
test
xor
xchg
in
lods
lcall
repnz
cmp
sub
push
or
jae
xchg
repz
jp
fildll
js
mov
pop
inc
mov
ret
rcrl
outsb
ss
or
popf
loopne
add
insb
inc
cmpsb
in
idivl
and
sbb
mov
sbb
aas
pop
sbb
in
dec
adc
sbb
shrb
push
rcrb
pop
add
mov
push
cltd
cmp
push
xor
pop
xchg
inc
stos
jns
rol
mov
das
popa
cmpsb
dec
rorb
mov
and
mov
mov
and
xchg
xchg
push
lcall
add
xchg
sbbl
mov
mov
bound
mov
ja
mov
inc
lahf
lret
xor
movsl
repz
push
mov
cltd
mov
aas
xchg
rcr
mov
pop
jo
inc
inc
xor
pop
enter
sub
dec
popa
push
rolb
mov
sbb
push
shll
sub
imul
fldenv
int
roll
xlat
je
loop
inc
cmpsl
push
mov
mull
add
rcl
das
imul
sbb
jne
dec
movsl
inc
xchg
cmp
rcr
adc
xor
and
cmp
pop
aas
jbe
addb
sahf
xlat
pop
sti
mov
mov
movsb
push
jp
jl
lahf
mov
lock
fwait
stos
inc
inc
clc
fsubp
stos
sub
sub
lret
sbb
mov
std
xchg
or
pop
fcompl
xchg
sub
push
scas
out
push
and
cmp
movsb
push
dec
cmp
mov
or
dec
lock
inc
sahf
xor
jmp
inc
jno
loope
jo
cmp
add
int
xchg
inc
xchg
idiv
xchg
cwtl
sub
lods
outsb
addb
add
daa
inc
or
cmp
and
in
ficomps
cmp
pop
push
fdivl
sbb
push
out
sbb
lods
les
inc
add
das
iret
xchg
test
imul
xchg
mov
mov
mov
fucompp
mov
push
xchg
add
push
mov
push
cmp
push
pop
push
idivb
jecxz
sahf
in
int3
lock
jg
push
push
mov
ds
cmp
test
mov
mov
dec
adc
popa
je
loop
daa
xor
pop
mov
push
add
xor
jns
bound
lret
cmp
sub
or
das
dec
in
pusha
insb
push
mov
bound
xchg
mov
cmpb
imul
push
pop
aam
fldt
aas
repnz
imul
fwait
jne
arpl
sbb
sbb
lea
ds
clc
sub
mov
cs
xchg
loop
mov
test
xlat
jnp
sbb
fwait
adc
and
xchg
movsb
rorl
out
and
test
adc
dec
add
adc
xchg
mov
inc
in
movsb
jne
outsb
pop
mov
int3
xlat
flds
xchg
movsl
pop
lods
out
pop
sahf
les
fninit
inc
test
mov
adc
jnp
xchg
test
adc
cvtps2pi
das
add
fistpll
push
mov
sbb
and
out
lods
in
xchg
out
mov
and
jle
mov
sbb
sub
fs
cmp
mov
dec
shr
add
fisubs
push
pop
sub
data16
jb
aad
jbe
arpl
inc
leave
jecxz
lcall
sub
ret
jno
push
sahf
mov
xchg
pop
mov
rcl
nop
fs
lret
imul
xor
in
push
rcl
nop
loop
cmp
xchg
repnz
test
dec
pop
and
xlat
scas
jns
leave
sbb
sti
fwait
mov
test
mov
adc
rcrb
xchg
dec
pop
push
adc
inc
into
cs
out
call
and
jl
pop
jecxz
mov
mov
hlt
negl
mov
nop
scas
stos
inc
cmpsb
add
cmp
or
adc
add
lea
or
shlb
dec
mov
cmc
ljmp
mov
mov
add
pop
popa
pop
loopne
pop
add
push
dec
cmc
mov
sub
mov
cwtl
and
scas
push
insb
sti
sti
cltd
push
pop
in
mov
pop
in
dec
mov
add
dec
movl
jne
icebp
cltd
adc
jnp
jo
inc
sbb
add
add
insb
inc
jmp
aad
fisubrs
jge
sti
sbb
add
mov
orl
aas
or
mov
mov
clc
xchg
ficoms
out
out
or
adc
and
enter
imul
jle
arpl
out
out
jmp
sbb
sub
jl
movsl
or
jecxz
mov
in
or
jns
pop
mov
and
xchg
fsts
gs
or
imulb
cmp
mov
insl
sbb
daa
and
ds
pop
push
sahf
xchg
ds
loopne
popf
xchg
popl
cwtl
fucomp
call
shrl
push
fs
arpl
mov
sbbb
jge
arpl
int3
adc
cmc
adc
sbb
js
dec
adc
les
adc
sub
mov
dec
sub
shll
sbb
push
gs
pop
push
and
fildl
mov
xor
fsubs
cmpsl
insl
mov
cmp
or
xchg
xor
testl
sub
pushf
xchg
lret
push
add
cltd
pop
mov
loopne
rorb
and
mov
cmp
sbb
ds
push
flds
xchg
nop
cmc
push
fisubl
sahf
ljmp
std
xchg
gs
insl
fsubrl
pop
lcall
xor
shlb
adc
push
int
js
pop
stc
push
push
jbe
or
xchg
cmp
xchg
ss
mov
lret
mov
decl
ret
dec
in
cmp
sarl
scas
pop
aam
dec
adc
xchg
inc
into
sbb
stos
popf
cmp
daa
cld
scas
cmpsl
xchg
nop
cli
add
sbb
push
mov
lods
ja
pop
mov
xor
mov
push
pop
or
push
mov
sbb
mov
sub
jb
cli
pop
lea
fsubrl
dec
in
fdivrs
js
aas
push
ret
xor
xchg
and
push
out
dec
sub
ror
fldt
sbbb
icebp
ds
mov
push
fnstenv
enter
mov
inc
outsl
or
cmp
pop
cmpsb
mov
aas
xchg
ret
call
and
sahf
ret
xor
insb
mov
sbb
mov
mov
fwait
adc
mov
sub
repz
pop
cmpsb
imul
stc
dec
subb
mov
rorl
pop
ljmp
and
jbe
in
subps
push
popf
fwait
mov
cltd
cmpsb
fdivr
mov
sub
mov
push
jge
in
ret
mov
add
daa
xor
add
or
xchg
push
out
xchg
add
ds
out
pop
inc
aas
nop
xchg
or
test
xchg
pop
or
lods
fwait
fstpt
cmp
adc
lahf
xchg
jnp
mov
nop
mov
scas
sbb
out
test
mov
out
jb
int3
mov
ret
cmp
pop
mov
and
imul
mov
inc
out
ja
arpl
leave
pop
sub
push
cmp
push
imul
jmp
in
cmp
daa
stc
shlb
and
push
outsl
mov
in
xor
out
pushf
nop
outsb
gs
xchg
inc
mov
jo
pop
cli
lcall
dec
mov
outsl
dec
aaa
inc
add
dec
adc
scas
xchg
in
add
rorl
and
js
push
inc
cwtl
sbb
ljmp
aad
mov
mov
in
cmpsl
stc
xor
into
mov
pop
insl
jbe
clc
jg
sbb
stos
cmpb
xor
dec
aam
push
mov
mov
movsl
pop
es
out
mull
hlt
dec
lahf
jecxz
imul
cld
jecxz,pn
aad
sahf
pop
js
xchg
fadds
inc
pop
mov
ret
movsb
ficoms
sbb
dec
push
sarl
popf
push
cwtl
push
nop
and
xor
push
inc
leave
fidivl
pop
mov
sub
shrd
pop
lds
movsl
jmp
dec
outsl
pop
loop
mov
sbb
dec
ds
outsb
fisubrl
aaa
xchg
mov
bswap
iret
in
pop
aas
lods
dec
orb
lea
pop
loopne
and
mov
loopne
clc
outsb
or
data16
fidivrl
insl
test
clc
mov
loop
add
or
stc
jmp
xchg
xor
push
test
push
inc
push
mov
repnz
sub
pop
inc
xchg
add
pusha
rcll
imul
xor
cmp
js
push
scas
jno
push
enter
adc
lret
lds
js
test
inc
pop
imul
cmpb
mov
mov
roll
addr16
mov
stos
xor
aam
loope
jno
pusha
aam
cmp
mov
or
lea
test
adc
push
sbb
jb
enter
jne
xchg
int
mov
jno
clc
sbb
rcl
add
xor
sub
fsts
jmp
ret
jle
in
and
call
dec
push
sbb
push
cwtl
push
pop
push
sarl
fidivl
mov
pop
fsubrs
aam
cmp
cmp
fldl
test
hlt
dec
pop
sbb
sbb
push
mov
das
xchg
xchg
ss
xchg
mov
jmp
lods
jmp
push
sbb
gs
adc
mov
dec
dec
xor
js
sbb
mov
sub
dec
xor
in
mov
jb
pusha
cld
cmp
cmp
inc
or
bound
lcall
cld
je
adc
inc
mov
push
dec
push
or
out
fbstp
cmp
or
adc
push
xorb
xchg
pusha
sbb
lahf
cmpsl
mov
iret
fiaddl
sub
and
test
cld
dec
lcall
dec
fisttpl
loope
in
mov
jmp
pop
jmp
cld
inc
push
add
mov
stc
cs
mov
sti
addr16
insl
out
leave
in
das
ds
ret
in
jns
mull
outsb
test
fs
mov
rorl
js
and
das
mov
bound
mov
aam
push
test
and
mov
adc
xchg
mov
sub
sbb
fldt
inc
cmp
filds
xor
cmp
inc
pop
ret
rolb
xchg
mov
lret
push
pop
mov
scas
dec
stos
addr16
idivl
lahf
fidivrs
add
cmpsb
fsubrl
jl
sbb
aas
push
aas
inc
adc
sti
rorl
imul
js
mov
mov
mov
adc
test
and
fcomps
sbb
sti
sub
int3
repnz
xchg
xor
aaa
lret
testb
les
icebp
dec
pop
jne
jne
inc
jae
cmp
pop
cmp
push
push
and
adc
xchg
mov
sbb
fucom
mov
movsl
cmpsb
sbb
cs
cmc
mov
rol
jecxz
lea
xchg
dec
jl
mov
or
shrl
sbb
pop
cmp
adc
jnp
jecxz
rcr
es
movsl
int
imul
lret
sub
std
jmp
fdivs
fdivr
rolb
popf
jge
mov
std
sub
jae
cmpsb
icebp
fists
testb
mov
jbe
sti
or
stc
imul
sbb
xchg
shrb
mov
cld
movsl
jbe
xchg
or
pop
mov
and
movsl
xor
mov
pop
mov
or
pushf
sahf
dec
sub
jo
aam
clc
clc
xor
inc
pop
in
sub
lret
xor
inc
cltd
lret
or
xor
mov
pusha
and
cmp
push
push
push
movsl
adc
push
push
sti
mov
sub
push
mov
mov
adc
add
inc
mov
jmp
xor
mov
mov
std
push
or
push
cs
fnstenv
aaa
das
iret
out
lds
leave
jbe
ret
pusha
cld
push
aad
xor
mov
pop
adcl
pusha
adc
lret
loopne
sbb
xor
cmp
cmp
ljmp
insb
daa
jnp
xor
scas
shlb
dec
mov
gs
scas
pop
outsb
shll
mov
pop
and
xor
outsb
rclb
popa
and
xchg
jo
sar
inc
fmuls
int3
out
movsl
out
out
push
jne
jmp
fdivrs
mov
cwtl
cs
or
gs
cltd
mov
push
rcr
outsl
stos
ficompl
mov
and
inc
movsb
cmp
push
ficoms
jmp
mov
xlat
sarb
push
push
std
fisttpl
cmpsl
out
fcomip
pop
stos
adc
xor
insl
out
loope
in
clc
push
lds
pop
daa
dec
xchg
dec
xchg
out
mov
cmp
ss
pop
rcr
sbb
pop
and
andl
stos
cs
dec
daa
je
sub
mov
ret
shll
dec
fdivrl
sub
or
out
adc
mov
mov
loop
ret
orl
cmp
in
dec
popa
dec
cmp
jmp
addr16
pusha
sub
insb
lret
ret
pop
sub
je
lret
cli
xor
xchg
rol
push
in
xchg
pop
mov
adc
sbb
call
xlat
mov
aaa
dec
test
sbb
xchg
out
dec
xchg
adc
cmp
mov
lcall
aad
cmp
inc
xor
addr16
mov
shll
push
xchg
scas
mov
sbb
mov
shll
int
mov
in
push
mov
es
xor
sar
test
ret
test
mov
cmp
out
aas
fdivrl
jb
pop
mov
sbb
loop
stos
adc
ljmp
js
and
push
rcrb
out
rolb
sub
int3
push
imul
mov
push
xchg
jae
in
addr16
xor
xor
das
rclb
fwait
into
fwait
lret
bound
std
imul
leave
fcmove
movsb
sbb
scas
push
mov
inc
xor
mov
int
data16
dec
inc
lret
arpl
and
jg
mov
adc
xchg
push
pop
cld
sub
cmp
cmp
call
repz
pusha
lret
repnz
test
outsl
inc
sub
xor
add
stos
mov
add
stc
cwtl
lods
pop
mov
push
in
xchg
test
pop
sub
daa
out
sbb
icebp
xor
lcall
mov
les
loopne
repnz
test
or
lods
pop
fsubrs
mov
je
std
xchg
test
es
mov
push
xor
addb
push
inc
das
pop
ret
cmp
lret
xor
faddp
rcrl
pop
cmp
andl
xor
aam
sbb
lds
push
and
and
sahf
inc
mov
sub
cmp
arpl
faddl
lea
addb
in
xchg
or
sahf
add
cmp
or
mov
in
cmp
lahf
add
lahf
fs
xor
xor
dec
pusha
xchg
fwait
insb
imul
mov
ficoml
dec
stos
or
stos
mov
push
mov
xchg
sub
leave
leave
lods
addb
stos
icebp
xchg
cmp
es
loopne
imul
loop
test
xlat
add
fcomps
repz
insl
push
cmpsb
mov
cld
test
bound
cmp
in
adc
push
insl
add
testb
push
xchg
shll
push
ss
dec
shlb
loopne
pop
pop
ret
out
out
or
stos
push
xchg
out
push
or
add
imul
dec
sbb
add
cwtl
push
aam
cs
testl
cld
pop
pop
inc
bound
lods
xor
sub
sub
sub
sub
stc
dec
iret
mov
inc
cmp
ss
je
insb
lcall
add
mov
jmp
push
xlat
lcall
je
jbe
jle
in
and
je
jle
cmpsl
je
int3
inc
jp
mov
inc
cmp
adc
or
mov
adc
xor
sub
adc
addr16
pop
xor
jmp
sbb
dec
push
mov
mov
adc
cmp
mov
enter
push
out
push
popa
movsb
lods
leave
mov
cmpsl
dec
es
rcl
inc
leave
mov
xor
jo
sbbl
outsl
jmp
adc
stc
mov
xchg
push
adc
jo
sub
aaa
cmc
mov
dec
stos
std
push
pop
push
cwtl
lods
add
push
clc
sub
push
mov
inc
iret
outsl
push
insl
push
add
notl
shll
data16
push
sub
notl
cmpsb
mov
xchg
dec
jns
xor
ret
cmp
and
mov
inc
inc
in
mov
mov
aas
xchg
adc
movsb
xchg
test
adc
aas
mov
or
xor
faddl
inc
lret
clc
jbe
sti
sbb
sub
sub
push
inc
sahf
test
pop
test
int3
icebp
xchg
mov
aas
scas
pop
shll
gs
insb
scas
pop
mov
jbe
jge
inc
dec
popa
mov
adc
aad
jp
pop
mov
push
hlt
mull
aad
push
mov
and
push
jg
xor
sbb
mov
dec
fidivl
and
dec
add
lods
and
clc
iret
add
mov
pop
mov
test
mov
mov
jle
test
mov
cmp
lock
jp
out
push
lcall
mov
cs
mov
cmp
xchg
and
adc
pop
imul
mov
aaa
out
or
ret
inc
cmp
cli
sub
and
repz
jno
sbb
pusha
push
and
sahf
push
jnp
ds
fsubs
mov
adc
mov
mov
fcmovb
insb
inc
inc
xchg
xor
cmpsl
pop
mov
es
dec
pop
sub
pop
mov
int3
mov
lret
xor
inc
inc
and
popa
mov
aam
inc
dec
bnd
mov
push
in
jnp
pop
or
jecxz
jmp
aam
and
pusha
jl
inc
stos
js
sbb
push
arpl
stc
jbe
aaa
mov
jge
and
rcl
fimull
outsb
dec
loope
insb
movsl
clc
ljmp
ret
fs
inc
out
sbb
loope
inc
sti
insb
loope
lcall
mov
cwtl
mov
and
xor
mov
pop
push
jb
or
fsub
roll
xor
sbbl
imul
sbb
mov
jno
jge
addr16
cld
mov
and
dec
data16
jbe
sbb
fmull
test
out
out
dec
jne
adc
dec
and
pop
pop
in
sahf
rcll
scas
orb
inc
or
fdivrs
aam
mov
lret
int3
loopne
cmp
add
push
push
mov
inc
popf
sbb
ja
fldl
mov
bound
mov
bound
xchg
vpmaxsw
ss
cld
sub
sbb
jo
sub
stos
jnp
mov
call
mov
mov
push
or
jns
and
cmpsb
pop
xlat
and
loop
cmpsb
xlat
ljmp
inc
sub
and
pop
lcall
lahf
mov
clc
scas
inc
andb
jne
scas
jl
shrb
dec
inc
in
or
out
cmp
stos
imul
lahf
dec
mov
into
push
out
mov
xor
mov
and
nop
pop
fdivr
fists
bound
sub
sub
stos
mov
fisubs
imul
out
and
dec
loope
into
stos
divl
sub
or
adc
adc
dec
sub
jecxz
adc
lea
jge
xchg
fidivl
aad
push
xchg
je
add
hlt
adcb
cli
cmp
in
out
rorl
out
vmread
and
push
ja
daa
movsb
lods
mov
test
sub
xchg
mov
test
aas
ret
jo
cli
mov
dec
in
sub
push
push
and
xchg
jl
push
lock
mov
pop
push
cmp
ljmp
push
sbbl
out
adc
fldcw
xchg
mov
mov
aad
xchg
out
lock
pushf
lret
in
mov
out
int3
jno
test
push
js
jle
add
inc
fld
or
iret
lods
lods
inc
mov
push
sub
mov
pop
out
push
push
jle
mov
inc
shlb
push
or
mov
dec
dec
sub
cmp
lea
insl
sbb
repz
and
fadds
push
xor
pushf
sbb
ds
cmpsb
and
aam
mov
cmp
cli
mov
in
dec
xor
popa
and
cmp
out
or
push
or
fstps
mov
mov
test
fwait
cli
and
sub
test
xchg
lahf
leave
mov
lahf
add
imul
push
movsl
arpl
ret
adc
xor
out
sbb
cmp
mulb
std
subl
adc
inc
jb
sbb
xchg
cmp
sbb
lea
fcoms
xor
dec
frstor
pop
test
sub
scas
scas
imul
xor
fiadds
mov
add
xor
push
fcomip
in
xchg
inc
jp
add
mov
dec
xor
mov
and
pop
xchg
xchg
inc
in
and
cmp
sti
cltd
adc
repz
popf
outsl
mov
test
push
jg
std
pop
sbb
xor
lock
lods
mov
hlt
sub
adc
fs
mov
out
into
int3
xchg
xor
pop
test
pop
adc
fwait
inc
and
and
lock
rcll
add
push
addb
dec
clc
scas
cltd
lock
push
xchg
inc
cwtl
push
sysret
addr16
mov
scas
and
cli
out
dec
mov
pop
xchg
test
in
push
mov
fldl
lock
movsb
sub
pusha
fwait
xchg
stos
pusha
rcrl
int3
ret
inc
sbb
ret
xchg
sbb
call
call
les
jmp
aaa
fisubl
jmp
or
ret
push
loope
mov
int3
push
cmp
hlt
or
test
pop
lret
fstpl
inc
jnp
jecxz
adc
dec
push
mov
in
or
pop
push
enter
stos
push
add
mov
dec
gs
or
sbb
jno
dec
mov
jo
mov
addr16
add
inc
shl
mov
sbb
into
push
fadds
jne
cmp
inc
or
pop
mov
stc
push
sub
lea
in
add
les
out
sbb
sub
enter
leave
scas
out
imul
leave
add
popf
ret
pusha
and
std
lock
insl
cmp
fistpll
movsl
push
inc
or
pop
pop
inc
pop
add
mov
lds
add
cwtl
outsb
adc
pop
adc
xlat
cmp
addr16
mov
aas
andl
scas
lea
xchg
cmp
nop
in
add
pop
mov
sub
test
adc
lds
cmpsb
call
adc
movsb
insl
sub
int
pop
and
sarl
add
dec
arpl
shrb
adc
mov
ja
xchg
push
inc
clc
subl
mov
cmp
xor
lea
loope
dec
pop
in
js
jae
push
aam
aas
inc
mov
mov
mov
jecxz
ja
out
ret
je
sbb
sti
lock
pop
or
pop
push
and
imul
aad
mov
into
adcl
out
mov
and
loop
sub
inc
adc
xorb
push
fistpll
mov
inc
xchg
xchg
jmp
jecxz
mov
xchg
push
lret
cmp
push
push
test
outsl
lret
add
faddp
idiv
cmp
dec
push
cli
js
push
imul
insb
stos
or
sub
decb
imul
sti
mov
insb
xchg
insb
lock
sbb
test
ficoms
popa
push
jmp
gs
adc
push
sbb
add
arpl
not
lds
gs
push
lock
imul
inc
into
inc
hlt
add
xor
sbb
insl
lea
pop
cmp
test
ja
adc
fisubrl
dec
push
xor
in
push
fs
xchg
imul
pop
in
sub
dec
paddq
jmp
pop
adc
push
sbb
aad
jmp
push
and
aam
fcoml
je
insb
and
push
dec
das
jns
lea
fiaddl
hlt
rcll
test
fwait
mov
inc
xchg
addb
add
int3
stos
clc
jp
scas
add
nop
lods
sbb
mov
cwtl
push
mov
mov
rcl
stos
push
dec
imul
mov
stos
sub
call
and
jp
xchg
mov
jno
inc
xlat
sub
lods
xchg
sbb
cmc
mov
adcl
sub
push
lahf
xchg
mov
sub
xchg
or
mov
bound
sbbb
mov
pop
mov
adc
push
add
push
or
and
xchg
in
xor
stos
cmc
aad
mov
adc
cmp
leave
insl
inc
lret
dec
pop
mov
add
loope
sti
cmc
je
dec
mov
push
pushf
jo
fmull
and
fdivr
divl
out
push
ret
push
xor
int3
xchg
addr16
push
jl
pop
repz
outsl
in
adc
or
aad
mov
aaa
iretw
stc
push
in
pop
mov
push
cmpsb
jge
out
mov
jecxz
push
dec
xchg
jmp
mov
sub
sub
mov
inc
aas
dec
pop
dec
push
loop
push
add
stos
and
out
inc
aam
aaa
pusha
sub
and
imulb
leave
out
inc
mulb
into
add
cltd
insb
enter
and
inc
sub
lock
stos
pop
js
lods
adc
dec
xchg
pop
ds
pop
push
enter
mov
push
sahf
cmc
lea
mov
sbb
lea
mov
movsl
pop
xchg
dec
repnz
mov
aam
orb
sbb
fidivrl
lret
leave
imul
fisubrs
mov
mov
ss
outsb
inc
into
stos
test
mov
mov
dec
fnstenv
sbb
jl
sbb
fs
add
cmp
das
je
sbb
xlat
popf
jge
pop
xor
push
adc
es
popa
popf
or
push
out
xchg
inc
xchg
test
inc
adc
imul
xor
push
int3
addr16
or
push
sub
cmpb
pop
jae
mov
sub
mov
mov
pop
push
sbbb
xor
mov
clc
lahf
std
jl
stc
xchg
stc
mov
push
outsl
mov
sub
push
mov
cmp
stos
js
lcall
pop
jg
xchg
pop
loop,pt
fwait
aas
lahf
ficomps
aad
dec
out
aad
mov
add
call
xor
sub
aas
js
pop
dec
loop
pop
push
fcmovu
jge
push
aad
mov
and
ffreep
stc
mov
aam
sarb
mov
xor
sub
add
mov
mov
cmp
lods
mov
lock
cmpsl
ror
arpl
popf
xchg
mov
jnp
sub
outsl
inc
loope
sti
jge
push
addr16
mov
xor
imul
add
lds
or
leave
inc
mov
dec
push
in
loope
inc
std
mov
pop
pushf
test
iret
mov
add
jbe
cmp
lods
push
xor
repnz
mov
mov
inc
xor
mov
ja
inc
xchg
push
dec
ret
inc
cmc
push
sti
fnsave
sbb
loop
and
clc
dec
push
jg
movd
imul
sub
arpl
add
outsl
xchg
dec
in
sbb
loopne
xchg
fld
mov
mov
and
imul
jns
pop
rcrb
sub
std
popa
dec
aaa
xor
test
inc
or
add
aam
or
in
loopne
ret
mov
inc
jl
mov
push
out
adc
sahf
pop
dec
loop
sub
add
push
lret
jne
mov
sbb
cmpsl
add
xlat
mov
xchg
dec
in
in
pop
add
fimull
inc
mov
cmp
dec
jb
into
add
adc
loopne
jmp
jo
cwtl
adc
pop
xchg
data16
dec
lock
outsb
mov
or
aam
movsb
jnp
ret
pop
sub
and
notb
loope
xchg
test
dec
lock
xor
xor
sbb
sti
pusha
sub
ljmp
hlt
dec
fwait
mov
pop
mov
fadds
inc
scas
rep
push
les
sub
inc
xchg
outsl
xor
es
into
mov
cltd
and
mov
push
jp
out
sbb
cmpsb
out
int3
or
insl
mov
ljmp
cld
out
jb
adc
mov
sub
mov
xchg
outsb
pop
adc
adc
ret
imul
fisubrs
add
xchg
rorb
imull
sub
add
mov
ret
movsl
mov
cmp
cltd
call
cmovno
xchg
scas
inc
stos
xlat
sbb
arpl
inc
or
test
mov
mov
and
dec
xor
xor
xchg
icebp
repnz
adc
sbb
and
in
sbb
divl
xor
aaa
xchg
add
and
jmp
rcrb
das
xor
xor
add
lock
imull
sub
lea
jnp
or
icebp
fwait
std
mov
push
arpl
xor
or
iret
cs
and
dec
hlt
cmp
roll
jle
mov
pop
loope
subl
fistpll
sbbl
out
add
ja
ret
adc
xchg
jno
adc
orb
inc
xor
xchg
clc
add
add
jns
add
mov
sar
mov
ds
lea
sub
fucomip
aam
cmp
mov
mov
pushl
rorl
nopl
jnp
mov
xor
inc
jp
push
cmc
push
fcoml
pop
bound
mov
mov
test
out
xor
sbb
mov
or
add
pusha
inc
jns
or
cld
iret
das
inc
lods
sbb
ja
mov
and
mov
es
test
cmpb
mov
push
inc
call
out
enter
cmp
or
popa
cwtl
and
dec
int3
andl
inc
mov
cmc
mov
pop
int3
adc
repz
popa
jge
mov
mov
dec
pop
scas
mov
ret
jge
xor
jbe
push
dec
jl
mov
dec
or
mov
inc
dec
popa
repz
mov
in
lahf
imul
shrb
jge
add
movsl
jae
lock
incb
and
xchg
adc
clc
dec
jne
jle
fildl
repz
icebp
and
xchg
fldcw
shrl
outsb
cmc
mov
aam
mov
lods
jnp
adc
xorb
dec
pop
sahf
cmp
shrb
inc
das
xlat
shll
out
push
les
mov
imul
xchg
aaa
jae
mov
adc
aaa
cmp
adc
mov
fsub
cmc
and
xor
inc
add
inc
mov
in
mov
fbstp
les
xor
into
and
cmpl
and
pop
rclb
stos
por
pusha
xor
and
jae
sub
mov
js
jmp
push
add
popf
leave
jae
dec
inc
aas
jnp
sbb
and
jge
pop
jmp
mov
insl
sti
loopne
jae
lret
or
cmpsl
scas
leave
mov
sub
mov
adc
rcl
fwait
and
sbb
sbb
aaa
lods
xor
jg
sbb
or
adc
imul
int
fidivrs
loop
notl
xchg
push
push
shlb
enter
call
cli
scas
mov
pop
pop
divb
push
xchg
ljmp
push
push
outsb
xor
push
scas
js
out
pop
icebp
cmc
test
mov
nop
cmp
dec
cmc
lods
jno
dec
adc
stos
push
es
jmp
cmpsl
mov
test
mov
cmp
call
sub
insb
and
cmpsl
pushf
sbb
rclb
jecxz
mov
dec
popa
outsl
insb
repnz
lahf
jne
fldl
dec
and
ret
xlat
es
enter
stos
ds
add
inc
push
ljmp
mov
into
cmc
cmp
xchg
xchg
icebp
das
imul
mov
test
enter
dec
xchg
pop
mov
pusha
pop
sub
push
loop
mov
add
push
push
movsl
sub
inc
aad
popa
imul
and
js
add
and
mov
ljmp
add
inc
add
mov
pop
mov
inc
cltd
pushf
scas
and
ja
or
adc
hlt
sub
aam
ffree
cmp
mov
mov
adc
gs
sub
mov
stos
jmp
push
mov
jne
out
sub
lea
pop
into
loop
xchg
dec
jecxz
pop
jne
aaa
sbb
in
hlt
dec
dec
ljmp
mov
dec
out
jl
adcl
sub
pop
sub
pop
mov
mov
mov
cmpsb
xchg
arpl
faddl
xchg
inc
jno
in
enter
rorl
sti
fs
dec
cmp
js
xor
arpl
arpl
ret
add
cld
mov
aas
push
mov
mov
xor
xchg
mov
cmp
add
jno
stos
push
sub
sbb
cmp
or
out
sub
cli
sti
mov
sbb
inc
sbb
dec
icebp
lahf
dec
es
xchg
jns
lret
fdivr
jb
xchg
aad
in
sbb
movsl
push
cmp
lret
xchg
cmpsb
inc
dec
fildl
neg
lods
pushf
cmpsl
dec
fadds
dec
shlb
out
sub
mov
mov
out
sub
es
ds
add
scas
in
imul
cmp
repnz
cmpsl
xchg
lock
mov
push
xor
jge
pop
fabs
xor
lcall
mov
inc
pop
aas
sub
xchg
xchg
mul
and
mov
cs
jle
call
mov
int3
push
mov
outsl
lds
xchg
mov
je
fwait
sub
and
jns
sub
fisubs
add
adc
push
mov
shr
cwtl
outsl
pop
test
adc
mov
mov
fimull
sti
dec
stos
into
xchg
push
and
xor
cmp
std
inc
push
push
hlt
mov
sub
xchg
lcall
pop
ret
ret
clc
bound
dec
lds
hlt
call
xor
add
mov
lret
sub
sub
cmovs
js
jle
push
jmp
jne
ret
loope
jle
dec
push
mov
loopne
xchg
mov
sbb
stc
mov
call
and
mov
cmp
dec
ss
clc
enter
pop
xchg
addr16
gs
fwait
cmp
inc
sub
aam
push
jo
push
cli
bound
jmp
sbb
jne
add
push
pop
inc
xchg
cld
add
cs
sbb
cmp
mov
xor
lds
dec
pop
mov
rcrl
or
cltd
add
push
int3
mov
sbb
mov
xor
and
outsl
mov
test
jns
xchg
sbb
outsl
push
push
sarb
xor
xor
test
fsts
pop
or
jbe
in
mov
jecxz
lret
cwtl
sarl
mov
mov
inc
adcb
dec
dec
clc
and
push
and
fwait
adc
jg
je
in
or
shlb
and
pop
adc
dec
aas
cmp
push
sahf
mov
test
push
scas
inc
mov
leave
pop
lock
imul
and
cmp
shl
insb
aaa
sbb
add
push
dec
mov
add
filds
jb
rep
lods
cmp
xchg
scas
stc
push
or
sbb
inc
inc
jecxz
inc
sbb
andb
insl
cltd
adc
ret
cltd
es
push
test
clc
sarl
jp
xchg
lea
xor
pop
filds
inc
mov
mov
xor
add
pop
cld
xchg
mov
pop
enter
icebp
sahf
outsl
inc
std
inc
scas
fists
or
out
into
mov
add
inc
sub
mov
push
fsub
push
outsl
cmp
and
imul
dec
sbb
jae
sub
in
in
inc
pop
xchg
repz
dec
out
cmp
insb
daa
cmp
call
loop
cli
out
push
adc
and
outsb
cmp
sbb
fisubrl
mov
lahf
inc
pop
in
jns
push
cmp
sub
fdiv
mov
aam
dec
xor
sub
cmc
sbb
lret
push
xchg
nop
add
push
adc
cmp
jg
and
jne
js
cs
inc
movsl
jne
daa
popa
sahf
inc
or
xlat
sti
mov
pop
cwtl
stc
xchg
test
add
mov
daa
cmpsl
stos
mov
subl
sub
sub
ljmp
test
add
add
mov
pop
push
gs
pop
clc
imull
xlat
push
mov
push
jo
mov
xchg
bound
mov
inc
addr16
adc
inc
push
lods
xchg
xchg
insl
add
xor
sti
dec
push
adc
push
xor
inc
js
push
js
xchg
imul
pop
nop
or
notb
mov
adc
repz
and
mov
sub
subl
fs
mov
add
dec
lahf
pusha
xchg
or
xor
jmp
inc
dec
stos
dec
arpl
fmull
les
cmc
addr16
sub
ds
mov
popa
add
push
or
fcmovnb
rcrb
int
or
aad
in
aam
adc
mov
aaa
loopne
cltd
stos
xchg
or
inc
and
sti
jb
lret
xchg
stos
mov
pop
xchg
bound
pop
pusha
outsl
and
aaa
xchg
idivl
lds
xor
mov
icebp
pop
pop
xor
insb
jge
loope
sub
sbb
outsl
dec
notl
fcomp
mov
mov
adc
push
pop
sub
sub
inc
aas
mov
into
pushf
in
xor
xor
mov
test
dec
xchg
adc
scas
fiadds
cli
push
imul
push
cs
sub
cltd
ret
mov
push
sahf
adc
fistps
lret
popf
or
gs
lret
sbb
pop
mov
add
inc
add
test
cmpl
ret
pop
jno
mov
and
add
inc
aad
push
jne
fsts
gs
cmp
cs
xor
push
pushl
push
fcoml
pop
xchg
ja
mov
xchg
xchg
xor
stos
dec
sbb
ljmp
mov
dec
jg
adc
ftst
push
add
rcrl
out
push
jno
adcb
pop
rclb
outsl
sbb
xchg
fdivrs
push
mov
and
or
and
cmp
sub
rolb
inc
xor
scas
neg
ret
jb
lea
fwait
cmp
std
cmp
push
jmp
add
std
and
xor
sub
push
aaa
in
sahf
cs
mul
mov
clc
xor
pushf
cld
mov
push
or
test
dec
sbb
shlb
out
jo
and
mov
out
mov
pop
mov
sub
dec
mov
pop
stc
and
imul
mov
xor
in
lret
clc
xchg
mov
stos
fisttpl
mov
pushf
pop
scas
hlt
push
je
test
push
jl
adc
pop
inc
and
mov
pop
pushf
push
push
sub
cmp
sub
sti
addr16
xor
subb
xchg
mov
mov
stos
std
pop
cmp
lds
mov
fadd
mov
cld
movsb
mov
lcall
sub
psrlq
push
ja
shlb
fidivrs
xchg
out
ficoms
out
sbb
call
mov
inc
push
roll
in
lods
js
xchg
hlt
pushf
stos
aas
xorl
stc
popf
loop
xchg
sub
das
adc
pop
ret
inc
sbb
call
mov
jmp
inc
xor
hlt
push
push
cmpsl
dec
xor
sub
cmpsl
enter
cmp
lea
dec
add
add
jmp
cmp
sbbl
imul
cs
pusha
aam
sub
lcall
in
rorl
mov
and
cmpsl
fwait
inc
cltd
repnz
pop
fnstcw
out
dec
addl
imul
jne
inc
dec
fnstcw
xchg
and
and
daa
sahf
add
andb
and
add
add
dec
stc
lret
cli
adc
rorb
pushf
stc
lahf
xchg
repz
lret
imul
inc
cltd
pop
push
shrl
inc
movsb
jno
arpl
sbbb
repz
lods
cmpsl
dec
mov
fdivrl
mov
dec
xchg
dec
mov
adc
std
ja
lock
cmp
dec
std
xor
icebp
push
mov
lea
push
mov
sub
adc
jecxz
and
mov
xchg
jae
mov
jae
sbb
mov
leave
mov
bound
nop
adc
xchg
xchg
mov
adc
lcall
outsl
inc
ljmp
inc
add
adc
dec
cmpsb
imul
repz
or
jb
jp
inc
jno
lea
sbb
mov
rcl
rcll
out
pop
fists
subb
push
jg
or
xchg
pop
mov
xor
ja
aad
mul
cwtl
xchg
sbb
ror
dec
adcl
jg
repz
add
and
loop
out
xchg
sbb
pop
insl
push
fdivrl
dec
lods
or
sti
mov
fisubrl
push
cmp
out
movsb
mov
outsl
and
mov
addb
jl
inc
inc
adc
les
cmpsl
jmp
lock
mov
dec
jns
mov
sub
test
insl
in
xor
faddl
movsb
cmpsl
mov
jo
arpl
je
cmpsl
and
xchg
add
xor
cmpb
movsl
jg
fistl
iret
idivb
das
mov
mov
shlb
pop
decb
jg
mov
mov
insl
pop
test
imul
cmp
adc
jnp
and
ja
or
lods
movsl
xchg
aam
jg
test
int
push
jg
inc
rep
loop
cmpsl
or
push
or
pop
push
iret
mov
jbe
gs
and
test
dec
add
sub
push
test
cmp
pop
mov
cmp
cwtl
aam
inc
jns
clc
xor
cmpsl
scas
push
add
xchg
lds
push
inc
dec
insb
cltd
repz
pop
xchg
movsb
lcall
mov
lret
stos
mulb
cmpsb
das
push
push
leave
lock
fs
imul
cmp
sti
test
or
push
movsl
hlt
cmp
jl
pop
pop
or
xchg
notl
pop
adc
dec
imul
clc
push
xor
mov
fdivs
mov
jae
push
sub
mov
stos
aas
jae
inc
lahf
xchg
cmpsb
lods
adc
push
jp
subl
inc
jmp
inc
scas
add
inc
inc
cwtl
or
lcall
pop
xor
icebp
or
mov
push
hlt
sbb
das
fs
sub
jl
pushf
in
fcmovnu
push
js
in
ret
cmp
fwait
into
pop
and
call
jne
outsl
mov
clc
inc
in
sbb
mov
mov
shrl
inc
xchg
popf
dec
jle
xchg
pop
add
aad
ficomps
mov
pushf
daa
cld
daa
std
xchg
dec
pop
cld
sahf
bound
adc
mov
push
xchg
fistpl
outsb
cmpsl
sbb
add
repnz
or
and
cmc
jns
xlat
sahf
or
nop
sbbb
and
jle
jae
lods
jg
stos
inc
daa
sbb
inc
mov
add
popa
adc
cmp
inc
sub
mov
and
roll
imul
add
dec
ret
fstpt
lds
call
sub
test
xchg
js
or
dec
addr16
test
push
imul
aam
imul
mov
cmp
jb
push
add
mov
movsb
ret
mov
icebp
inc
test
into
add
mov
aad
pop
sbb
fwait
pop
push
cs
inc
scas
cs
pop
dec
inc
fsts
cmp
inc
aaa
ljmp
andl
cmp
leave
pop
sub
dec
rclb
ja
arpl
sti
arpl
mov
movsl
lret
das
insl
push
fcmovne
push
cmc
gs
cmpsl
aaa
cmpsb
fildl
movsb
repz
aam
fcomp
js
dec
ss
cli
repz
call
sbb
movsb
jg
cld
xor
mov
loop
jno
xchg
addr16
sub
xchg
lcall
jbe
cmp
xchg
pushf
sbbl
xlat
stos
loop
mov
or
mov
dec
mov
movsl
les
adc
or
mov
push
pop
pop
nop
mov
fmull
orl
in
sub
imul
aaa
push
ret
test
inc
mov
mov
adc
test
in
and
mov
mov
fxch
imul
fldcw
push
push
push
fsubs
add
pop
add
data16
iret
pop
pop
jp
cmp
dec
stc
cmp
clc
push
mov
xchg
insb
pop
outsb
roll
das
je
clc
icebp
sub
les
std
add
es
movsl
mov
add
inc
out
mov
jbe
inc
insb
or
xor
mov
cwtl
lahf
add
lods
inc
lret
or
mov
int3
add
push
add
dec
mov
jbe
stos
lret
and
fucomi
test
bound
pop
xchg
lea
cvtpi2ps
push
imul
jl
movsb
call
mov
xchg
test
push
inc
inc
sbb
push
les
ror
aaa
lea
imul
xchg
ljmp
imul
xor
loop
std
add
push
hlt
test
xchg
mov
pop
mov
xlat
call
jbe
jp
shll
sub
adc
imul
mov
add
data16
inc
inc
dec
adc
xchg
add
adc
enter
loopne
into
jno
je
es
inc
imul
addb
pop
filds
mov
jbe
inc
mov
pop
ret
push
inc
sti
cwtl
jp
out
cmp
nop
mov
arpl
outsl
pop
scas
loop
and
pop
out
xor
pop
mov
aas
push
inc
mov
ljmp
jle
in
rcrb
out
xor
subl
add
adc
fstpl
cmpsl
mov
faddl
or
std
sarb
out
enter
push
popa
xor
aas
push
js
cmp
cmpsb
lods
push
std
cmp
xor
mov
mul
push
pop
das
mov
repnz
movsl
arpl
nop
and
jmp
dec
rcll
popa
push
subl
stos
mov
dec
movsb
ss
xor
scas
sbb
aaa
inc
imul
dec
in
inc
addr16
and
lods
insb
test
xchg
cmp
mov
fisubrl
test
add
adc
ret
jg
push
cmpsb
aam
icebp
int
mov
push
adc
mov
es
jbe
cmpsb
jno
scas
xchg
in
jmp
push
push
out
and
out
movsl
outsb
mov
mov
xor
les
scas
mov
cmpsl
flds
shrl
lahf
mov
nop
inc
xchg
xlat
inc
sbb
cmp
scas
cmp
and
jge
data16
in
jge
xchg
xor
xchg
cwtl
adc
adc
jg
inc
sub
ret
adc
inc
test
mov
ljmp
jecxz
add
rorb
into
fstl
jle
std
pop
mov
flds
in
mov
add
addb
iret
push
test
push
loope
inc
pop
lods
cmpsb
fs
ficoms
mov
mov
roll
pop
stos
xchg
mov
jb
pop
imul
xchg
jl
add
into
aas
xchg
dec
cltd
bound
push
popa
and
lcall
mov
imul
pop
lret
xchg
add
cmp
adc
dec
mov
sub
ljmp
push
xchg
cwtl
fcom
fcmovne
xchg
jnp
into
movnti
jge
add
jmp
ret
mov
popf
mov
je
mov
call
or
inc
and
in
dec
mov
sub
jns
fwait
add
add
jb
mov
sub
test
ja
das
sbb
out
or
arpl
mov
jb
arpl
add
insb
cmp
pop
xor
xchg
shrb
insl
dec
js
mov
lret
notb
hlt
add
xchg
push
test
xor
mov
mov
ja
xchg
push
dec
sbb
lahf
mov
xor
sbb
pusha
addl
imul
push
cmp
popf
inc
xor
mov
and
pop
and
or
out
adc
pop
imul
sub
test
push
and
jge
movsl
xchg
data16
gs
mov
in
imul
fldt
lds
cmc
mov
adc
push
inc
dec
mov
cltd
hlt
lret
cmp
in
or
push
ret
out
clc
mov
test
mov
xchg
dec
fiaddl
fs
dec
push
mov
daa
jns
dec
in
sub
roll
iret
mov
sahf
adc
imul
arpl
jle
cltd
sub
inc
sarb
aas
xchg
mov
xor
xchg
cld
jp
mov
push
fucom
cs
nop
out
adc
dec
add
dec
jmp
jo
add
add
push
sub
out
xchg
cwtl
imul
xor
or
cmc
push
lfs
push
mov
test
add
lret
cmp
inc
iret
jbe
ds
push
aas
daa
or
test
roll
jmp
ja
jno
sub
inc
sbb
js
in
int3
push
push
mov
lahf
es
adc
pop
test
hlt
mov
fistpll
imul
jp
xor
les
dec
mov
test
xor
cmpsb
cmp
xor
sub
push
data16
mov
mov
iret
hlt
lds
roll
xchg
adcl
push
inc
dec
repz
ds
xchg
and
stos
xor
insl
xchg
adc
call
outsl
mov
enter
push
mov
dec
cmp
dec
dec
jns
fstl
push
into
push
mov
insl
dec
adc
loopne
push
cmp
dec
sbb
mov
sub
xchg
sbb
xor
out
sub
or
sbb
lds
inc
sub
cwtl
es
mov
orl
in
js
mov
cmpsb
xchg
js
pop
xchg
repz
jns
jae
scas
dec
add
loopne
lret
jmp
sub
movsl
dec
movsb
sub
imul
and
bound
mov
dec
sar
das
fiaddl
fisubrl
cmp
cmc
icebp
cmc
push
aam
and
push
arpl
test
imul
mov
lret
xor
sbb
mov
stos
inc
jmp
ror
jno
jae
lret
lds
ficomps
cwtl
sbb
pop
daa
fimuls
dec
cmpsl
aad
xor
push
jo
or
jno
lahf
lods
jae
jns
cmc
xchg
sbb
xor
lea
cmpsb
in
sbb
sti
data16
movsb
js
inc
xchg
cltd
dec
lods
es
pop
mov
cmpsb
in
clc
mov
setne
inc
lods
mov
mov
jno
push
sub
inc
adc
adc
ja
mov
aam
sbb
mov
inc
repnz
mov
xchg
je
faddl
mov
inc
add
jns
sub
inc
inc
push
push
push
xor
inc
dec
les
add
lods
cmp
or
push
xchg
mov
jno
mov
mov
pop
hlt
dec
sahf
adc
mov
leave
jns
in
sbb
popf
mov
test
mov
xchg
fcompl
push
jb
pop
cmpsb
imul
xchg
sbb
adc
popa
xchg
pushf
sub
nop
xor
xor
popa
cmp
shl
mov
add
lret
insl
push
and
xchg
loopne
adc
rcrl
inc
push
cltd
test
in
adc
or
notl
sbb
sub
ljmp
mov
bound
jmp
cmc
loope
fisubs
jecxz
rcrb
leave
and
sbbb
imul
popa
int
testb
faddp
lods
mov
inc
push
gs
dec
testb
rcr
cmp
jnp
dec
adc
lock
inc
or
xor
loope
and
test
xchg
data16
adc
aad
loop
popf
sbb
jb
stos
scas
mov
bound
xor
lahf
aas
inc
aad
cltd
push
mov
fistpl
xchg
inc
std
xor
std
mov
add
xorb
cmp
pop
stc
inc
insl
xor
ljmp
popf
cmp
sub
cmp
and
lcall
xlat
jmp
cmpsb
xor
sarb
into
pop
insl
stos
push
lret
jmp
test
push
mov
icebp
outsb
adc
lcall
les
jns
stos
jae
add
sub
fisttpl
ror
xchg
mov
call
addr16
mov
adc
mov
test
lret
push
cmp
push
shrb
insb
inc
jb
insb
inc
push
dec
push
pop
add
rclb
push
cmp
fwait
stc
and
imul
bnd
cwtl
aas
pop
cmp
inc
out
sbb
rcr
xchg
mov
cwtl
icebp
fsubs
mov
movl
sub
jne
pop
stos
test
stc
or
push
loop
lods
pusha
fdivrs
mov
fadds
aam
add
xor
rcll
imul
loope
ret
rol
jnp
sub
xchg
add
mov
iret
cld
jp
stc
mov
iret
fstl
mov
jecxz
add
je
sbb
pusha
mov
add
lcall
lret
inc
adc
inc
jbe
cmp
js
jne
mov
loopne
in
out
xchg
test
and
hlt
lcall
push
inc
or
inc
jmp
mov
scas
cli
mov
adc
jle
and
mov
xchg
out
ja
daa
cld
mov
pop
push
out
inc
xchg
jge
push
ja
outsb
jge
mov
lea
movsl
push
js
inc
add
push
dec
jg
lods
pop
xchg
into
push
inc
dec
mov
xchg
dec
cmp
stos
cs
fmulp
movsb
insl
test
xchg
lds
fisttps
sub
sub
adc
or
and
sti
adc
scas
out
ror
enter
sub
sahf
outsb
shr
push
inc
mov
push
xorb
insb
dec
push
xor
xor
testb
mov
adc
scas
pop
insl
sbb
lea
xor
pop
out
lret
or
out
test
jo
xchg
test
movsl
pop
stc
and
sbb
mov
xor
popa
mov
ljmp
ret
aas
add
and
test
dec
add
stc
sbb
add
cmp
into
daa
add
repnz
dec
sub
inc
fnsave
xchg
push
out
xchg
push
cmp
sti
fdivs
jmp
leave
jno
aam
mov
mov
cld
repz
mov
sbb
test
xchg
je
pusha
jmp
mov
or
lods
mov
call
cmp
or
or
out
push
mov
fcoms
imull
cmp
dec
sahf
cmc
stos
stos
into
dec
arpl
sbbb
pop
mov
into
pop
test
mov
rclb
int3
sbb
push
jbe
ret
sbb
mov
xchg
clc
in
mov
cmpsl
out
xchg
aam
scas
add
testb
xorl
lds
pop
lods
xchg
subb
pop
dec
push
ss
test
insb
add
push
sahf
lock
in
push
sbb
cmp
mov
repz
test
lds
fdiv
push
mov
sahf
icebp
and
jbe
and
cmc
jo
nop
test
popa
jle
int
testl
shl
sar
rorl
in
pop
repz
cmp
xchg
xchg
pusha
jae
loop
adc
lret
fsubr
es
fistl
nop
fdivl
adc
and
addb
ljmp
mov
push
add
out
xor
out
cltd
int
hlt
add
xchg
mov
arpl
dec
mov
mov
jno
add
mov
mov
sub
cmpsb
int
insb
push
cmp
push
arpl
fs
adc
pop
rcl
lret
or
inc
iret
bound
xchg
xorb
clc
sbb
inc
ds
xor
enter
rorl
fidivrs
in
nop
popa
adc
ljmp
jae
add
sbb
scas
popf
jno
and
popf
outsb
insb
mov
into
jle
cli
jmp
jle
out
pop
adc
shl
add
outsb
adc
or
xchg
popf
imul
jnp
and
and
arpl
add
mov
shll
xor
dec
mov
mov
cmp
or
inc
xchg
inc
jmp
inc
rcr
cmp
xchg
scas
mov
adcl
sbb
in
jp
lahf
push
xchg
sub
sub
mov
mov
pop
aas
pusha
dec
dec
or
ja
mov
shl
cmc
cmpsl
pop
out
icebp
nop
push
inc
xchg
cmp
jne
fbld
pop
pusha
mov
adc
call
repnz
push
fs
adc
jns
lret
cltd
adc
out
ret
add
in
push
mov
mov
mov
cmp
sub
in
sbb
or
pop
sub
xlat
and
sbb
int
mov
es
cmp
inc
sbb
mov
mov
addr16
inc
call
iret
shr
mov
push
cmp
jle
mov
mov
mov
shr
adc
mov
lahf
insl
frstor
popf
mov
cmp
mov
or
push
xchg
or
jge
xor
inc
out
mov
pop
scas
and
add
mov
out
cmp
das
mov
sarl
dec
in
pop
cmp
lahf
int
mov
popa
scas
pop
out
cli
and
xor
sti
inc
decb
outsb
sub
adc
sub
enter
mov
mov
mov
inc
jle
sbb
cmp
int
ja
pop
xor
out
mov
and
or
mov
mov
mov
insl
mov
mov
mov
cli
xchg
orb
sub
in
jl
push
mov
mov
push
repz
sub
cmp
scas
inc
sub
and
xchg
ja
lock
dec
push
pusha
sbb
popf
lahf
test
insb
ja
clc
and
jo
loope
add
sbb
cmc
mov
mov
test
cld
mov
dec
inc
aaa
popf
cmp
push
cmc
mov
push
jl
xchg
xchg
repnz
or
xchg
pusha
fwait
addl
das
dec
ss
or
pop
in
addb
mov
or
dec
xorb
mov
repnz
mov
push
cmc
jno
subb
lods
mov
sub
add
and
aaa
pusha
sahf
scas
xchg
sub
ds
mov
dec
dec
and
fdivrl
mov
jb
xchg
iret
ds
mov
cmpsb
xor
cs
aaa
stos
test
xchg
movsl
mov
adc
popa
fwait
call
pop
or
loop
hlt
mov
shrb
sub
aas
insl
mov
cmp
cmp
sbb
fcomi
pushf
mov
sahf
xor
sbb
xor
fnstcw
pop
pop
iret
movsb
mov
inc
js
shlb
adc
test
es
fwait
lods
xchg
jge
fdiv
ret
in
push
sub
xor
xchg
popa
rol
mov
ja
in
andl
add
fsubs
and
test
pop
adc
ret
jbe
pop
mov
adc
lods
std
xor
je
pop
mov
cmc
into
psrld
das
popa
jecxz
divps
sub
jge
leave
leave
xor
fwait
test
icebp
push
nop
jle
jle
std
mov
addr16
or
call
push
stos
ret
popa
and
cmp
pusha
lret
mov
ret
dec
daa
jb
int3
insl
lcall
iret
mov
cltd
lret
and
mov
push
cmp
ljmp
cwtl
inc
insb
jne
dec
add
jmp
shl
push
xchg
data16
out
cmpsl
and
insl
jb
mov
lock
dec
xor
and
adc
adc
jmp
sub
cltd
pop
mov
pushf
jp
push
outsl
stos
dec
out
push
mov
repnz
lahf
dec
push
xchg
and
lret
test
movsb
xchg
push
data16
pushl
mov
fwait
mov
out
jne
sub
cs
outsl
or
cld
sub
je
push
pushl
lds
jne
sbb
outsl
popa
mov
mov
lock
cld
xchg
mov
in
loopne
fcmovnu
adc
xor
adcb
jmp
cmp
ss
pop
test
push
inc
lret
fwait
cmpsb
insl
mulb
or
xor
ss
nop
xlat
push
push
pop
adc
and
lahf
xchg
sub
inc
inc
xor
inc
mov
adc
push
cmpl
or
es
dec
push
out
rorl
je
inc
fstpl
jp
jge
sub
xchg
or
cmp
hlt
nop
leave
sahf
in
shll
lcall
jno
mov
movsl
cld
in
enter
cmp
sbb
mov
mov
mov
in
scas
daa
inc
testl
leave
pop
push
add
cli
mov
movsb
pop
gs
mov
pop
jecxz
aaa
popf
mov
mov
or
inc
cld
sbb
out
push
or
adc
decb
bt
pop
jno
fsubl
fs
mov
cli
jo
mov
aad
js
cmp
push
mov
pop
jmp
mov
int
xlat
outsl
pop
jecxz
sub
push
icebp
cmp
rorb
int
mov
xor
add
out
aam
pop
fs
nop
cs
mov
inc
fwait
mulb
cli
dec
mov
adc
push
test
adc
jmp
into
or
pop
lret
dec
bound
mov
in
cmpsl
in
sahf
dec
cmp
pop
cmovg
leave
mov
pop
mov
add
je
shr
jmp
and
inc
inc
aas
jbe
fld1
aaa
repz
push
cmp
sbb
imul
enter
bound
pop
jno
jle
jl
lret
push
add
and
pop
sarl
mov
and
int3
ds
outsb
push
aaa
lods
and
out
hlt
push
inc
adc
jbe
aam
mov
or
loope
arpl
ret
repnz
movsb
pop
cwtl
outsl
mov
hlt
cmp
mov
cmp
xchg
mov
or
in
and
jge
cmp
adc
or
inc
adc
sub
stos
pop
inc
inc
jl
and
pusha
adc
scas
insl
xor
adcl
adcl
jnp
mov
cmc
std
in
repnz
adc
imulb
pop
pop
daa
mov
or
into
push
and
pop
and
div
sbb
xchg
sti
push
arpl
insb
std
enter
sub
jp
and
mov
ds
ja
cmp
push
loope
mov
clc
outsb
xchg
push
or
mov
cmp
inc
push
add
int
xor
xlat
mov
repnz
jl
inc
fildll
or
pop
test
mov
in
mov
ret
sub
repnz
xchg
adc
jg
loop
mov
das
sbb
mull
jp
or
add
jns
cmp
sub
xchg
insl
call
ret
aam
sbb
dec
mov
push
pop
mov
imul
pop
jno
add
lahf
adc
subl
ss
insb
dec
cmp
and
and
adc
mov
hlt
imul
mov
mov
push
push
sub
xor
inc
inc
add
jg
mov
outsb
xchg
mov
mov
ret
mov
pop
mov
fildl
ja
testl
and
out
push
or
rcrl
dec
dec
cmp
rcrb
xor
insl
mov
mov
cmpsl
divl
ljmp
stc
push
push
xor
cmc
jp
xor
stc
cmp
sbb
add
pop
incb
and
aad
and
xchg
shrl
mov
pop
xchg
data16
out
mov
je
pop
cmp
pop
ffreep
cmp
jecxz
adc
jecxz
stc
aad
insb
lahf
mov
pop
mov
cmp
cmp
pop
jnp
sbb
std
bound
jl
inc
rol
repz
jns
jb
jbe
roll
push
daa
and
imul
dec
popf
call
mov
jbe
mov
dec
inc
insl
mov
mov
adc
xor
dec
xchg
into
not
lahf
ja
jl
dec
outsb
xchg
push
pop
cmp
xchg
or
inc
inc
or
sub
adc
inc
jmp
dec
out
cmpsb
fwait
push
fsubl
sub
cmc
inc
mov
testb
jo
and
inc
push
and
std
adc
dec
in
xor
add
or
xor
mov
or
pop
test
pushl
mov
sub
push
repz
mov
xchg
mov
insb
call
bound
or
jae
cmp
pop
dec
imul
dec
lock
push
popa
test
xorl
and
xorb
shr
jp
pop
aam
addr16
cwtl
loopne
dec
int3
add
xor
sti
lock
push
adc
jmp
sub
daa
adc
xlat
aas
add
or
or
dec
in
jmp
dec
ja
pop
ds
cmp
or
insl
dec
sbb
in
daa
add
outsb
lahf
mov
hlt
shl
fsubrs
or
mov
decl
xchg
mov
and
push
cmp
dec
jl
xchg
xor
inc
or
mov
mov
adcl
cs
decl
icebp
add
mov
dec
lcall
jmp
add
and
cmp
add
div
jne
jp
lcall
cmp
and
test
or
data16
push
push
negl
fdivr
mov
ret
clc
pop
int
jno
outsl
push
jmp
add
cld
dec
out
pop
push
filds
mov
jp
xor
add
arpl
push
xchg
xor
insl
jecxz
adc
bound
cmpsb
popl
sbb
andb
aad
mov
mov
xor
push
push
subb
inc
sbb
pop
js
icebp
fnsave
pushf
and
push
or
sbb
mov
mov
aaa
jb
das
xor
fisttpll
into
pop
and
dec
repz
jno
int3
fsts
call
pop
xchg
pop
mov
pop
and
dec
int
jo
adc
xchg
imul
xor
push
sbb
aad
push
mov
cwtl
xor
sahf
loopne
mov
addb
popf
arpl
cmp
or
ss
xchg
add
sbb
and
pop
dec
inc
scas
fldenv
push
jge
sbb
adc
repz
mov
lret
dec
sbb
sub
or
adc
sub
ja
sbb
cld
nop
mov
push
or
lahf
xchg
es
movsl
sub
push
add
xor
jge
mov
xchg
bound
out
cmp
mov
out
pop
sub
popf
into
sbb
add
es
cltd
inc
je
jbe
cmpb
or
or
rcrl
cmp
sbb
pop
add
test
stos
ret
cmp
insl
test
xor
push
sbb
jp
cmpsb
pop
lds
xchg
popa
sbb
xchg
ret
in
xlat
adcb
push
es
das
scas
xchg
ja
std
ret
sbbl
popa
add
in
jo
xor
repz
jge
jle
dec
xchg
test
jecxz
mov
ret
test
js
xchg
fs
filds
lods
addl
fbstp
mull
fcmove
aam
adcb
fldcw
pop
mov
dec
lcall
ficoml
and
fwait
test
mov
or
lock
cmc
stos
cmpsl
add
jmp
movsb
mov
orb
pop
icebp
popf
inc
pop
push
cmpsb
test
in
dec
pop
out
dec
adc
or
rcll
lock
dec
mov
incl
test
in
xchg
jl
mov
sbb
push
fcoml
cmp
js
fwait
jo
enter
sub
pusha
push
lods
jb
orl
jle
xor
notl
jae,pn
cmpsb
mov
std
and
sbb
lea
arpl
sbb
jns
push
inc
and
mov
lret
dec
insl
movl
xchg
mov
in
leave
cmpsl
push
or
add
jle
inc
jp
dec
mov
dec
inc
and
lret
dec
sbb
mov
mov
sub
add
dec
sbb
std
fstpt
repnz
push
dec
sub
mov
cmp
sub
add
or
incl
adc
dec
pop
ss
je
inc
cmp
in
lahf
inc
jg
test
fistl
je
into
scas
adc
jne
std
fnsave
push
or
or
pop
lahf
xchg
jecxz
adc
sbb
mov
aas
xorb
dec
jbe
out
repz
scas
sub
xchg
or
mov
fsubrs
loop
mov
sbbl
mov
scas
in
maskmovq
imull
sub
cmp
add
xchg
mov
daa
jge
jne
jns
icebp
divl
out
cmp
push
call
int3
loope
rcr
bnd
hlt
lahf
pop
outsl
xchg
addl
out
and
int3
push
xchg
mov
mov
test
add
inc
mov
mov
lods
js
loope
sbb
pop
and
xchg
cli
or
jo
add
ljmp
imul
push
insb
pop
fisttps
push
add
mov
and
mov
mov
lret
shll
scas
int3
dec
pop
loopne
loope
div
dec
sbb
pop
mov
nop
mov
pusha
repz
lea
jl
fisttps
in
jp
xchg
lea
repnz
dec
mov
mov
cmp
sbb
sbb
jp
jl
fsubp
in
inc
or
sbb
ret
xchg
movq
outsl
mov
loopne
mov
mov
pushf
leave
out
push
mov
push
sti
dec
add
push
cmp
jno
sbb
jmp
loopne
and
mov
push
xor
mov
or
enter
scas
in
fwait
or
out
cmpsb
outsl
outsb
mov
ret
mov
lods
in
rol
jle
mov
push
pusha
rorl
fdivrl
jg
pop
int
sub
pop
and
clc
push
xchg
cli
or
and
add
sbb
cltd
ret
ja
pop
inc
inc
mov
shl
push
dec
cmp
cs
xchg
push
add
js
pop
insl
je
int3
ret
pushf
std
adc
int3
push
push
adcl
in
ss
pop
adc
xor
into
in
mov
jmp
jmp
cmp
pusha
jns
imul
ret
cmpsb
lret
ret
shlb
outsl
pusha
mov
cmpsl
ror
dec
cmp
xchg
pop
fdivrl
out
into
xchg
sbb
mov
cmp
pushf
shll
dec
fadd
loop
inc
push
and
sbb
and
fldenv
and
cmpsl
cmp
aas
jge
shll
pop
sub
cmp
stos
push
dec
inc
dec
jmp
shrl
andb
stc
leave
roll
cmp
in
push
cmpsl
jp
daa
rolb
sub
sub
daa
cmp
mov
or
iret
sbb
sbb
xchg
sub
sbb
cmp
vsubsd
popa
outsb
xchg
or
lret
sub
cli
aad
jbe
rcl
mov
sbb
cmpsb
ds
pop
and
mov
nop
inc
outsb
repnz
mov
push
test
cld
not
and
fsubl
rcll
out
cmp
dec
xorb
push
cwtl
push
out
aam
test
enter
cmp
jae
es
or
jmp
rcl
out
push
es
testb
cmc
fisubrl
pop
sub
pop
cmp
and
dec
jnp
std
cli
xor
push
andl
jle
popa
xchg
adc
pop
jae
add
movsb
lock
dec
pop
xchg
mov
cmp
out
mov
cltd
dec
aaa
jne
sub
fistl
out
je
ja
xchg
inc
xchg
adc
test
outsb
icebp
cmp
gs
cwtl
jnp
adc
pop
decb
cli
loop
pop
mov
repz
cmpsl
cmp
sbb
fstpl
stc
sub
sub
jle
les
xchg
das
push
pop
loope
into
push
sbb
std
and
out
adc
jnp
jae
jae
or
aam
fidivrs
jge
inc
jl
fcoml
out
add
repz
insb
dec
add
cmpsl
cli
pop
rorl
fs
or
ret
arpl
jp
push
stos
por
sbb
mov
mov
and
push
std
pop
lea
pop
jno
loop
ja
sbb
fcoml
pop
cltd
ljmp
mov
repnz
sbb
mov
inc
inc
jo
call
ljmp
cwtl
test
roll
insb
popf
mov
cmpsb
pusha
pop
js
xor
pop
sahf
or
sbb
scas
sub
mov
addl
repnz
xchg
and
les
mov
loope
push
dec
in
push
pop
sbb
loope
and
xorb
sahf
lods
mov
dec
jno,pt
mov
scas
mov
movsl
call
add
xchg
xor
jne
js
push
mov
and
jns
outsl
sub
sub
jecxz
xor
or
repz
ds
jmp
add
push
in
stos
ret
ret
inc
fistl
or
cmp
rcll
push
jle
jmp
pop
iret
or
fistps
jecxz
sarl
pusha
loope
mov
pop
lock
or
dec
ljmp
and
push
fmulp
je
movsl
mov
and
aas
and
or
ret
mov
ficomps
add
add
cmpsb
movsl
jno
cli
imul
cmc
and
jae
stc
cmp
or
xchg
push
out
inc
dec
xchg
dec
lret
movsl
xchg
imul
sub
adc
jmp
roll
fimull
sti
inc
imul
dec
sbb
push
mov
inc
or
or
sarb
add
outsb
pop
subl
mov
out
popf
scas
cmc
jae
pop
cmp
insl
xor
and
adc
das
aaa
cmc
call
jo
negb
mov
ds
sub
movsb
jecxz
push
insl
or
jp
test
jae
fwait
or
xlat
inc
fdiv
cltd
pop
out
dec
imul
hlt
ss
sahf
jo
mov
pop
lods
std
cs
cmpsb
lock
es
cmp
clc
iret
pop
push
lea
xchg
repz
repnz
into
fnstenv
mov
add
stos
loop
inc
xchg
popf
pop
inc
mov
imul
inc
pop
or
cmp
xorb
sahf
inc
or
out
sub
or
inc
cmp
ds
jecxz
fcomip
pushf
or
jmp
cmpsl
jnp
lods
out
test
mov
jae
enter
call
out
ljmp
push
ret
pushf
dec
or
xor
xor
vminps
push
inc
inc
enter
subb
pop
lcall
push
mov
loop
mov
and
xchg
rcl
jp
or
or
roll
bound
lods
rcrl
loopne
push
sahf
std
push
push
mov
mov
movsb
jecxz
sub
mov
ljmp
or
testl
loopne
jns
push
movsl
mov
stc
rcr
or
or
xor
dec
push
outsl
test
adc
gs
adc
aaa
pop
lret
and
xchg
cmp
jns
and
arpl
insl
faddl
dec
roll
inc
inc
push
repz
mov
repz
xor
inc
sahf
mov
sub
pop
sub
popa
icebp
inc
cmp
cmp
cmp
cltd
mov
sbb
mov
std
jns
in
loopne
in
outsb
xchg
hlt
test
mov
or
adc
xchg
pop
jae
xlat
lret
jae
add
or
fidivrs
lret
movsl
lods
inc
rclb
sub
fdivl
es
or
in
sbb
xlat
push
adc
lea
ja
inc
dec
ret
inc
adc
mov
jmp
jnp
xor
sbb
xchg
in
cmp
mov
fisttpl
mov
jo
fnsave
and
mov
mov
stos
pusha
push
aas
repnz
subb
sbb
ficompl
inc
sub
add
adc
or
cs
outsl
cmc
jp
push
data16
jno
sub
sbb
rclb
mov
mov
pop
fwait
xor
fnstcw
stos
adc
mov
rcl
push
leave
push
inc
cmp
xchg
jmp
cmp
xchg
fldl
bound
es
movsl
aaa
dec
stos
or
and
sar
xor
notl
adcl
test
jae
cmp
test
cmc
push
mov
dec
mov
inc
dec
fdivl
ret
leave
push
dec
cmp
jg
dec
push
mov
mov
insl
add
adc
sbb
sub
xor
push
push
jbe
shrl
cmpb
mov
and
ret
xor
jg
adc
mov
jnp
enter
xor
mov
sbb
and
outsb
insl
jb
lods
cmp
xchg
jns
jne
and
cmp
push
jg
iret
and
daa
jo
cmp
and
arpl
cmpsb
mov
mov
xchg
sarb
lret
sahf
inc
repz
pop
xchg
xor
je
test
loope
mov
lods
adc
add
dec
repz
cwtl
mov
dec
ja
pcmpgtd
test
jo
cmpsb
nop
push
fs
inc
out
jp
push
in
push
loope
or
mov
popf
iret
scas
cmp
arpl
inc
inc
int
pop
lea
push
lods
xlat
ja
popa
ret
inc
cmpsl
pop
or
stos
or
leave
push
or
jle
xor
adc
dec
daa
xchg
xchg
mov
cwtl
fisttpll
push
sbb
lret
xor
mov
aas
xor
sub
repnz
mov
dec
daa
xchg
test
test
mov
dec
mov
mov
pop
mov
xchg
xchg
cli
daa
or
dec
mov
div
xor
push
fwait
adc
subl
xor
sub
outsl
jo
adc
repnz
xor
pop
les
cmpl
mov
andb
adc
fstl
es
adc
pop
mov
insl
fbstp
ffreep
xchg
clc
ret
mov
and
sbb
lods
fwait
popw
js
dec
loop
mov
and
in
iret
inc
or
push
aam
lcall
aad
adc
mov
push
mov
push
pop
ds
dec
sbb
ss
adc
mov
data16
sbb
mov
sar
lods
out
nop
jae
dec
arpl
mov
jle
sbb
or
pop
inc
push
dec
xor
lretw
mov
pop
ftst
movsb
daa
jl
or
sbb
pop
adc
scas
mov
fcoms
or
shll
jns
cmp
mov
stos
jmp
and
dec
lcall
or
pop
sub
and
stc
mov
outsl
std
mov
dec
repz
in
jbe
imul
cmp
inc
jp
fndisi(8087
aaa
stos
inc
jecxz
adc
pusha
icebp
xor
stc
sub
adc
das
nop
icebp
jne
xor
mov
loopne
test
xchg
mov
pop
inc
insb
cmp
ds
and
dec
pop
scas
push
xor
in
jbe
sti
pop
imul
sub
jl
aas
pop
jb
insl
pop
cltd
xlat
aaa
bound
adc
mov
push
mov
rcrl
stos
fildl
xor
lret
cmc
add
sbb
xor
sarl
fiadds
push
aaa
imul
jnp,pt
xchg
test
dec
dec
movsl
test
lods
hlt
bound
loope
lcall
cs
sbb
test
cmp
inc
push
mov
mov
sub
push
jb
call
clc
fbstp
mov
cmpsl
imul
in
cmp
dec
hlt
inc
nop
fcomps
sbb
sub
dec
rolb
in
inc
dec
mov
add
xor
outsb
test
cmp
mov
popa
mov
sbb
dec
sbb
adc
jnp
cmp
dec
jb
ljmp
adc
pop
xorb
mov
push
hlt
xor
dec
into
out
push
das
cmp
adc
mov
ss
lock
jae
loop
rorl
fs
jmp
enter
push
int3
jb
outsb
sbb
iret
xchg
push
add
iret
cmp
dec
loop
xor
stc
js
or
outsl
xchg
cmp
xchg
adc
cmp
xor
xchg
mov
xchg
sub
stos
or
sbb
mov
addr16
or
pop
inc
mov
fnstenv
mov
add
add
jp
mov
lret
mov
dec
mov
adc
inc
cmp
ds
je
dec
loopne
cs
scas
inc
lods
sub
arpl
js
int3
dec
outsl
ja
adc
push
bound
dec
mov
cli
in
or
push
jne
lods
pop
jmp
bound
ss
sbb
sbb
fiadds
pop
test
adc
les
inc
sub
mov
inc
fadds
movsl
outsl
xor
mov
push
inc
jmp
in
jnp
xchg
push
fiaddl
sub
fs
out
daa
sbb
insl
mov
pop
fdivrl
xlat
jne
adc
mov
das
push
mov
cli
lcall
cli
addr16
sub
xor
repnz
mov
xchg
push
ret
or
mov
inc
fldcw
jg
lea
xchg
outsb
sbb
adc
stos
lds
popl
rcr
pop
dec
ja
xchg
add
jp
sub
lcall
sub
xchg
adc
sbbb
scas
mull
aam
or
popa
insb
nop
sbb
test
testl
sbb
xchg
xorl
lret
jecxz
or
dec
cwtl
jle
iret
add
gs
int
and
ret
jno
sub
xchg
call
add
inc
inc
out
cmp
mov
iret
mov
notl
xor
dec
fimuls
inc
mov
ljmp
ds
decl
push
xor
fwait
xchg
inc
fdivrs
adc
inc
outsb
jnp
lcall
das
xchg
mov
in
add
inc
divb
dec
mov
lds
bound
rcll
jns
fdivrl
cmp
in
push
std
cmpsl
js
jns
dec
jmp
mov
imulb
push
enter
int3
cmc
arpl
dec
sub
lret
jl
jbe
pop
and
andl
mov
mov
ja
aam
xor
push
cmp
or
fwait
and
leave
repnz
push
repnz
dec
fisubrs
pop
sub
mov
aad
in
stos
mov
and
push
add
loopne
jl
mov
mov
shr
pop
jbe
sub
jae
mov
mov
faddp
ljmp
pop
xorb
or
fstl
pushf
add
sbb
lret
mov
insb
sub
pushl
lods
xor
dec
out
rclb
jae
out
inc
popa
sub
jbe
pop
or
jns
mov
cmp
add
fs
adcl
mov
dec
ja
lret
add
dec
outsb
out
add
xchg
aaa
cli
in
inc
push
lods
mov
push
cmp
push
inc
hlt
push
out
es
aad
fidivrs
xchg
or
and
sub
sub
fiaddl
inc
dec
dec
test
xchg
rcrb
jg
pop
cli
and
jb,pt
orl
mov
lret
shll
cmp
jno
pusha
mov
shlb
cmc
dec
je
inc
dec
clc
gs
xor
inc
lret
add
idivl
sbbb
insl
in
sub
pop
scas
push
pop
fs
repz
mov
cltd
mov
enter
mov
push
and
add
inc
pcmpgtb
dec
out
jg
and
and
inc
std
mov
call
sahf
xor
jmp
mov
and
fidivs
mov
add
lahf
out
mov
cmp
adc
and
add
jo
xchg
sbb
and
and
and
or
mov
lcall
mov
and
js
in
xchg
ja
push
xor
adc
in
jb
aas
jge
mov
in
sub
cmp
jnp
fisttpl
shll
cwtl
and
inc
or
out
fimull
mov
and
out
cmp
mov
or
dec
pushf
shll
push
and
push
cmpsl
dec
pop
fs
xchg
xorl
out
pop
add
xor
jnp
clc
js
enter
nop
xor
idivl
mov
mov
sbb
xchg
into
lea
sahf
lret
ret
pop
jns
sbb
sti
cld
scas
inc
cmp
or
inc
push
outsb
add
push
dec
ljmp
les
aad
in
push
add
mov
jne
jo
xor
nop
scas
aam
popa
insl
test
rcr
xor
loopne
repz
call
ret
lea
ds
in
and
pop
rorl
mov
mov
pop
and
pop
in
cmp
jae
jge
push
mov
test
adcl
imul
iret
add
in
or
loope
sub
clc
daa
sub
push
pop
fcmovnbe
out
pxor
mov
mov
jb
push
lds
or
orps
adc
jle
cmc
jmp
rol
aaa
out
cmp
sbb
lcall
and
jge
ss
xchg
push
cmp
inc
or
mov
test
push
cli
loope
or
ds
mov
lcall
add
mov
pop
aas
jb
lcall
cli
lods
popa
xchg
cmp
mov
mov
mov
cmp
mov
jno
bnd
adc
push
dec
ret
loopne
fnstenv
jl
pop
mov
rcrb
jb
sub
push
jnp
mov
sub
imul
dec
cmp
pop
add
push
add
adc
sti
jno
inc
insl
into
divl
fwait
fs
ljmp
adc
icebp
pop
xor
sahf
xchg
pop
mov
je
cmpsb
inc
lds
xchg
sub
pushf
xchg
dec
inc
cs
sbb
add
stos
data16
daa
mov
dec
xor
cmp
jecxz
xlat
add
lock
stos
adc
mov
add
lods
enter
dec
mov
test
mov
fs
ss
shrb
jl
xchg
out
or
mov
jmp
cs
cld
mov
mov
push
sbb
or
pop
orb
inc
pusha
push
inc
in
das
jb
sahf
jbe
cld
ficompl
pop
imul
mov
sarl
cltd
scas
sbb
fstpl
out
sarb
push
cmp
insb
adc
ret
orb
and
jns
adc
mov
fisttpl
lea
out
insb
subl
scas
insl
xor
outsb
test
push
or
xchg
outsb
mov
ja
je
dec
repz
cmpsb
and
and
dec
jns
mov
loopne
test
mov
pop
mov
mov
andl
inc
xor
pop
pop
add
mov
xorb
xchg
popl
jmp
or
hlt
adc
shrd
fcompl
idivb
jae
outsb
sbb
loope
mov
popl
or
es
mov
jl
xchg
sbb
sub
push
adc
les
mov
xchg
icebp
fwait
jl
out
test
push
xor
js
jbe
in
lods
sbb
popa
cmc
jno
or
jecxz
or
push
add
jmp
fildll
mov
rol
in
jno
push
xor
adc
cs
mov
cmp
cmp
adc
aad
sarb
adc
gs
adc
jmp
sub
adcl
push
lock
or
cmp
inc
int
xchg
in
xorb
inc
xor
ja
push
jo
loopne
arpl
dec
dec
jo
ja
pop
nop
jo
push
arpl
ja
sbb
mov
mov
dec
and
xor
lods
mull
imul
leave
aam
cmpb
cs
mov
fidivrs
jecxz
out
or
pop
and
bound
push
jg
filds
cmc
subb
insl
adc
pop
mov
add
or
mov
push
and
fs
sub
sbb
mov
jp
popf
sbb
sub
pop
or
jno
in
push
dec
loope
int3
and
sub
test
test
insl
sub
jb,pt
jl
mov
leave
pushl
lahf
movsl
and
and
scas
sahf
mov
and
and
scas
add
popl
imul
dec
cmp
dec
pop
push
dec
mov
mov
jne
fdiv
outsl
loopne
sbb
ret
aas
xchg
xlat
jb
out
int3
mov
idivb
and
movsl
sub
xchg
mov
jns
pop
pop
fsubs
dec
and
in
aam
jle
sbb
ss
dec
fucomp
mov
sahf
xchg
lcall
lds
sahf
pop
xor
xchg
popf
cmpb
mov
jl
icebp
adc
jbe
jb
mov
mov
test
mov
js
push
in
int3
sbb
jecxz
xor
aam
sbb
jnp
inc
and
mov
cmp
jne
repnz
bnd
dec
out
push
adc
pop
out
push
adc
cmp
loop
mov
cwtl
iret
jg
or
mov
lret
sti
add
push
add
mov
les
clc
pop
clc
pop
cmp
outsb
orl
out
push
push
out
outsb
push
mov
mov
or
addl
in
pop
dec
imul
mov
mov
or
or
sub
xor
sub
push
xchg
ds
push
cli
iret
mov
inc
addr16
adc
test
jnp
jbe
xor
test
jmp
and
int
test
loope
and
enter
int3
mov
push
cmp
pusha
out
inc
lret
mov
add
lods
mov
shl
or
shll
dec
jle
test
mull
loope
nop
pop
inc
mov
push
gs
incl
cmc
sub
lret
jmp
imul
jno
push
imul
mov
inc
push
aam
adc
shll
lds
push
mov
fwait
call
ljmp
xchg
and
cmc
xor
rol
xchg
dec
push
je
xchg
and
fisubs
sub
mov
mov
mov
mov
mov
in
cmc
adc
push
mov
add
cmpsl
clc
sub
sti
jle
inc
mov
je
shr
pop
mov
jmp
lret
adc
cmp
mov
mov
dec
lods
pusha
loopne
ljmp
mov
mov
inc
repz
in
xchg
push
cmp
rorb
hlt
mov
test
dec
push
sti
adc
pushf
cwtl
and
jp
xchg
lahf
lods
es
enter
mov
shrb
xor
jbe
fnstenv
sub
scas
inc
shl
inc
int3
adc
pop
fnstenv
mov
inc
inc
pop
gs
inc
mov
cmpsl
jb
pop
xorl
or
imul
and
mov
sub
pop
sahf
xchg
cmp
push
iret
sub
ret
out
int
fwait
pop
sbb
je
push
popf
cmp
cmp
mov
push
mov
jb
shrl
dec
insb
outsb
sbb
or
inc
inc
pop
cmp
test
out
scas
out
and
jecxz
subb
stos
xor
xlat
mov
shll
pop
mov
xor
and
add
js
or
fildl
pushf
cwtl
js
mov
mov
sar
fwait
push
adc
mov
fidivrl
pop
pop
cmc
out
int3
mov
mov
cmp
loopne
dec
orl
lcall
mov
stc
add
enter
mov
loop
imul
in
sti
icebp
xchg
cs
in
test
ja
push
xchg
bound
pop
sar
inc
xchg
rcl
push
xchg
adc
sub
inc
add
mov
sub
adc
rorb
add
xchg
mov
fistps
adc
int3
mov
lods
dec
leave
fcoms
hlt
jae
xor
xchg
xlat
push
jecxz
xor
mov
push
pop
cmpsl
test
jp
jo
in
jecxz
aad
lds
test
cmp
xchg
mov
decb
call
aad
rorl
mov
mov
sub
mov
sub
shl
dec
mov
pop
jb
test
mov
fs
jae
pushl
cmc
je
insb
inc
inc
pusha
fnstcw
push
sahf
iret
mov
fstpt
ljmp
adc
sbb
adc
data16
icebp
inc
and
mov
mov
sbb
repz
sbb
sbbl
orl
jmp
mov
lds
dec
xchg
icebp
sub
add
bound
cmp
popf
dec
ror
test
stos
mov
cwtl
dec
sbb
mov
inc
enter
and
clc
sbbb
rcrb
push
push
stc
aaa
mov
or
sub
adc
lret
hlt
mov
aaa
lds
dec
cli
arpl
sbb
sbb
bound
es
sub
sbb
insb
xchg
mov
data16
mov
imul
imul
movsb
pushf
scas
mov
push
shl
outsl
imul
fisubrl
hlt
cmpsl
aas
fimuls
cs
mov
jne
adc
pop
shll
iret
add
fs
mov
xor
mov
dec
mov
inc
adc
cmpsb
xchg
into
bound
cmp
or
jp
lock
inc
jbe
jp
adc
xor
xor
mov
notl
shll
cli
repnz
xor
scas
clc
jg
and
sbbb
adc
cmp
and
dec
out
bound
cmpsl
fcompp
pop
lods
sub
jo
jp
ret
sbb
jo
jecxz
add
lock
adcb
add
in
xor
or
adc
inc
push
cld
mov
test
dec
dec
test
movlhps
cld
cld
cmpsl
xorl
mov
fcoml
xchg
sub
xchg
add
push
clc
cmp
jmp
mov
cs
add
daa
push
dec
xchg
mov
push
cmp
mov
cwtl
into
dec
cmp
jmp
jnp
sbb
push
jnp
cli
lret
flds
cmp
decl
aad
push
inc
jbe
loope
lret
orb
jle
xor
lahf
stos
mov
xchg
inc
enter
add
repnz
jecxz
daa
mov
repz
and
hlt
pop
outsb
inc
pop
mov
xchg
sti
lock
int3
add
or
push
stc
cltd
push
adc
mov
mov
mov
ret
insb
push
icebp
mov
push
or
pop
out
adc
fildll
fdivs
inc
cli
push
mov
ljmp
mov
jmp
adc
mov
lahf
call
mov
inc
sub
into
pop
cmp
stos
dec
popa
dec
xchg
popf
xor
and
test
xor
jg
mov
sbb
xchg
sbb
ffreep
aam
adcl
push
sbb
pop
sarl
dec
jnp
or
ret
mov
add
lods
cmp
xor
sbb
inc
mov
jae
popa
es
sub
adc
mov
and
scas
mov
xor
adc
mov
cwtl
push
ret
dec
data16
out
lea
js
fs
mov
push
add
add
fidivrl
xor
pop
andb
sbb
lahf
sub
psadbw
ds
jle
mov
add
test
test
imul
stc
cmp
pop
pop
push
insl
test
test
pop
jnp
sbb
xor
das
jle
mov
push
jg
scas
sbb
or
xchg
xchg
imul
mov
mov
cmpsl
inc
push
jne
fidivs
movsl
sbb
cmp
out
popf
mov
jl
repz
popf
jno
rcrb
sub
dec
mov
fisubs
adcl
lods
js
enter
xchg
push
sub
sub
lcall
xchg
sarl
dec
cs
sub
jae
pop
scas
jp
mov
push
and
cmpsl
int
das
test
inc
divb
jecxz
xchg
cs
fdivrs
das
xlat
sbb
xchg
xor
sbb
jge
iret
adc
or
inc
sub
popa
ja
pop
test
add
mov
push
xchg
pop
add
mov
repnz
cmp
stos
leave
xor
mov
stc
push
mov
cmp
iret
push
mov
call
inc
test
xor
movups
dec
lea
pop
inc
ja
js
aas
mov
lock
pop
push
mov
cmp
rcll
adc
outsb
lods
mov
push
add
pop
sahf
cltd
dec
rcl
pop
in
inc
je
sub
call
sti
fildl
inc
stos
xchg
and
aad
scas
jle
dec
out
cmp
popl
gs
xchg
insb
mov
out
add
movsb
daa
in
sub
sub
pushl
sbb
add
inc
loopne
mov
dec
mov
je
xor
faddl
inc
in
pop
jne
and
and
addr16
push
fistpl
into
mov
fnstcw
gs
addr16
jmp
loop
xchg
imul
cs
push
int
pop
jae
loop
loopne
jae
mov
pushf
in
pop
inc
push
shlb
bound
jle
pop
xchg
jmp
fistps
cmpl
mov
filds
push
sbb
ja
adc
push
adc
pop
xchg
or
int3
sti
push
and
and
xlat
inc
or
test
push
cmp
sbb
lahf
xor
sti
mov
jp
pop
mov
rcll
cmp
add
cltd
sarb
mov
mov
cs
mov
sahf
xlat
mov
sbbl
and
xchg
xchg
js
mov
jo
je
xchg
test
dec
mov
ret
xorb
test
and
xor
and
fninit
stc
jnp
jbe
int
jnp
and
popf
fwait
or
dec
cltd
scas
mov
stc
fcoms
shrl
out
push
out
nop
lods
ficoms
mov
lret
pop
insb
pop
sti
and
lds
mov
int
rcll
fcomps
fcomps
push
roll
jp
jle
jns
scas
in
andb
jle
add
fildl
dec
out
cmp
sbb
scas
popf
inc
inc
or
clc
xor
jmp
push
ljmp
andb
int3
addr16
div
iret
mov
push
mov
dec
lods
es
mov
sbb
mov
pop
push
jp
mov
sbb
mov
and
icebp
jbe
int
jmp
fadd
test
bound
push
test
inc
out
mov
sbb
mov
cmp
inc
into
xor
ret
fs
xchg
and
sahf
aaa
leave
or
cmpsl
push
xchg
pop
or
data16
or
repz
push
sti
sub
add
or
xchg
sbb
mov
xchg
mov
test
add
in
cmc
cltd
inc
loopne
cs
aad
add
shrl
push
pop
mov
mov
mov
jge
or
and
mov
xor
aaa
add
test
xor
or
rcr
shll
jl
mov
arpl
sbb
inc
nop
mull
jb
orl
xchg
in
mov
mov
outsl
out
pop
pop
add
repnz
pop
pop
or
cld
mov
adc
push
xor
sub
cwtl
sub
fsubl
or
sbbb
mov
cmp
fsub
aam
ds
push
iret
xor
aas
xor
dec
mov
jne
mov
in
pop
idivl
mov
mov
mov
add
adcb
xchg
jne
and
lock
jecxz
sbb
cmp
popa
ret
loop
pop
inc
fists
add
hlt
push
inc
lods
xor
or
sbb
mov
pushl
das
cmp
in
in
movsb
pop
hlt
sar
aas
pop
xorb
mov
scas
pop
jo
add
dec
pusha
imulb
push
xchg
addr16
cmp
sahf
cltd
stos
or
jle
inc
insb
xchg
mov
sbbl
add
xlat
mov
test
sub
xchg
lret
test
xlat
ficoml
xchg
rorl
cmp
jo
stos
and
ret
daa
pushf
js
arpl
mov
lods
loope
push
sub
dec
out
lods
add
pop
mov
das
mov
cmp
ret
into
inc
xor
cwtl
pushl
cmc
mov
stc
ror
lahf
sbb
xor
add
xlat
mov
icebp
inc
test
mov
xchg
ficomps
inc
jmp
xchg
push
mov
imul
add
jecxz
jne
arpl
adc
inc
jb
mov
pop
aaa
aaa
out
fcomp
sbb
lret
rorl
mov
js
sub
out
test
add
or
cmovnp
cli
xchg
xchg
and
popf
mov
inc
xbegin
sub
iret
jl
fnstsw
push
iret
and
xor
and
pop
xor
std
daa
and
lahf
push
dec
fs
clc
inc
lret
cli
xor
mov
aam
push
lock
into
sub
cmp
fisttps
inc
adc
and
hlt
cwtl
fs
aaa
push
mov
hlt
jnp
iret
add
jp
pop
push
mov
or
push
sub
sbb
sarl
std
inc
adc
scas
mov
pop
and
call
out
jae
sub
shlb
out
test
jg
loop
bound
fmulp
mov
mov
sub
test
push
sub
lcall
aam
xchg
and
rclb
adc
mov
testb
arpl
xchg
pop
call
lds
aas
cmp
pop
pushf
xchg
cs
and
push
add
jle
xchg
ja
mov
mov
add
clc
push
or
shlb
sahf
xlat
scas
cmc
iret
push
jo
jmp
sbb
sub
imul
mov
lret
sti
mov
mov
lock
mov
test
insl
push
adc
cmp
jmp
mov
cmc
lea
cmp
mov
mov
fcom
aaa
incl
mov
mov
mov
sti
sub
cmp
nop
xchg
pop
xlat
out
push
fbstp
or
pushf
sub
cmc
mov
test
lods
xchg
aaa
sub
insb
je
mov
pop
std
loopne
sti
push
sbb
stc
push
js
shlb
je
xchg
lods
bound
aad
jge
xchg
sub
sbb
sbb
cmp
call
or
pushf
mov
lds
scas
nop
jge
add
pop
xchg
sub
mov
sbb
or
lods
inc
sbb
out
dec
xor
stc
dec
xor
loop
add
mov
jmp
pop
imul
cmp
mov
movb
idivl
or
clc
cmp
or
pusha
std
mov
pop
movsl
ss
push
repnz
rcrl
fbstp
pop
insb
add
pop
inc
mov
clc
out
push
ljmp
sti
data16
nop
ljmp
idivb
insb
pop
loopne
or
mov
cld
cmp
xchg
gs
xor
push
test
and
sub
xor
lods
imul
cmc
aas
lret
into
sbb
mov
imul
push
sbb
mov
cmpsl
pusha
mov
jo
addr16
mul
jbe
lea
rcr
inc
repnz
test
int3
nop
push
rcrl
jae
xchg
mov
jbe
inc
imul
or
stc
push
jae
mov
push
xlat
testb
mov
push
mov
insb
pop
divb
lods
movsl
cmc
push
repnz
in
sarl
mov
sbb
or
push
cmp
pop
repz
xchg
or
mov
movsw
mov
shrb
sub
inc
fwait
xor
mov
cmp
push
or
mov
or
mov
or
in
xchg
push
aas
shrl
dec
xchg
push
sbb
popf
shlb
fwait
jmp
mov
lea
push
inc
and
pop
es
nop
pop
sub
das
xlat
xor
rcrb
add
mov
and
xor
sbb
in
dec
bound
mov
cltd
test
iret
jmp
mov
movsb
push
out
or
jge
int3
cmp
inc
scas
rorb
aas
push
daa
fwait
scas
out
ja
loope
mov
insb
cltd
mov
xchg
mov
or
frstpm(287
lods
mov
js
outsb
dec
jae
rcrb
or
jle
mov
and
mov
in
cltd
sub
inc
xchg
mov
mov
enter
cwtl
scas
js
xor
sub
pop
out
push
lock
sub
cs
xchg
into
aad
out
movsb
dec
sbbb
cs
roll
out
in
adc
xchg
xchg
dec
pop
mov
test
adc
mov
xor
mov
jmp
mov
outsl
es
ljmp
mov
int3
xlat
xor
jge
in
dec
inc
imul
enter
orb
push
mov
adc
push
lock
test
fstps
xchg
sbb
ljmp
or
outsl
ret
mov
leave
sub
movsb
dec
xchg
adc
and
aam
bound
push
mov
test
dec
fisubrl
sub
adc
xchg
movb
shl
stc
loope
in
js
cmpsb
sbb
subl
in
jecxz
mov
jae
nop
rcll
and
insl
sbb
mov
jmp
jmp
fstl
or
mov
jle
cmpsl
pop
mov
sub
ds
push
cwtl
lea
and
hlt
subb
dec
lds
bt
data16
cmp
in
testb
pop
in
outsl
jbe
pop
lahf
cmpsb
testb
test
mov
ficoms
leave
push
adc
jno
inc
push
jecxz
dec
or
inc
cld
out
gs
cmp
jnp
out
adc
repz
cmp
mov
sub
or
pusha
jl
lods
and
js
sub
shll
call
mov
mov
add
fisttpll
cmc
and
mov
pushf
jge
aad
roll
sbb
leave
mov
out
mov
loope
das
adc
aad
frstor
psubq
repnz
jle
lcall
pop
cld
cltd
jecxz
shll
mov
sub
xor
mov
lret
cmp
mov
test
lods
imul
aad
hlt
data16
jle
lock
push
arpl
or
dec
push
lds
ret
or
iret
ret
dec
call
jae
pop
js
or
fdiv
inc
out
rorb
rorl
bound
cmp
outsb
iret
dec
mov
or
test
push
push
test
xchg
repz
jae
pop
clc
loop
mov
or
mov
pop
aam
sbb
mov
dec
loope
in
ficoms
pop
frstor
idiv
pop
prefetch
pop
pusha
sub
popf
pop
repz
scas
add
sbb
ret
int
fdivrl
jae
push
cmp
cmpsl
int
inc
mov
add
push
cmpsl
ror
das
add
imul
inc
add
out
or
aam
iret
in
xor
pop
fiadds
imul
rol
das
xchg
jae
mov
pop
mov
jecxz
mov
lret
imul
addr16
mov
ss
les
xor
or
sub
cld
or
pop
hlt
push
fstpl
scas
sub
inc
adc
mov
shll
jb
push
and
inc
ds
pop
or
mov
jne
lret
adc
leave
push
push
rcll
in
lock
add
xchg
xchg
sub
cmp
mov
push
in
mov
fsubs
arpl
push
jg
sbb
scas
or
pop
rclb
lea
fidivrs
test
and
je
sbb
adc
and
mov
repz
sbb
cmc
xchg
or
adc
jl
cltd
ss
dec
pop
pop
sub
lea
jne
fldcw
mov
imul
sub
add
push
fimuls
js
fxch
ret
movsb
push
mov
mov
add
pusha
inc
out
imul
inc
cmp
xor
mov
or
inc
stos
mov
sbb
jae
mov
test
std
mov
stos
inc
jns
fstpt
test
cmpsl
push
lods
insb
int3
mov
jg
adc
mov
push
mov
xchg
jo
mov
pop
inc
add
addr16
outsb
ret
les
sbb
jle
cmp
arpl
arpl
leave
pop
setbe
rcl
xlat
mov
clc
or
adc
pop
jle
iret
mov
mov
sub
xor
sbb
cmp
jo
shrl
push
push
iret
pop
cld
out
inc
pop
inc
sub
iret
jb
mov
xor
push
jle
sbb
pop
adc
and
mov
xor
cs
or
push
addb
lahf
sbb
movsb
sub
cmp
sbb
dec
inc
pop
mov
mov
shrl
ja
mov
outsl
jno
dec
or
inc
xbegin
mov
xor
dec
iret
lock
es
test
cmp
dec
xor
pusha
addr16
hlt
neg
adc
mov
sub
sbb
fcompl
lds
cmp
fs
lds
xchg
rclb
test
lret
dec
mov
fisttpl
and
ljmp
xlat
dec
arpl
fiaddl
loope
mov
sub
jecxz
push
jle
bound
xchg
lock
or
mov
out
inc
sub
cmp
stos
vdivsd
fwait
jge
mov
fsubl
jge
sub
mov
dec
subb
arpl
mov
je
and
xchg
mov
imull
xlat
adc
mov
adc
dec
xor
pop
sbb
insb
push
cwtl
stos
test
movsl
or
lods
pop
in
std
std
xor
mov
dec
aas
out
repz
adc
sub
jmp
into
fimuls
shrb
cltd
cmp
add
inc
cmp
lods
sub
lock
cmpl
jnp
fsts
jae
sub
xor
adc
lret
add
pushf
mov
out
lahf
jne
stos
fs
pop
mov
iret
mov
and
daa
cmc
mov
mov
fldt
push
add
jb
sahf
movsl
xchg
jne
vpavgb
fidivrl
xchg
sub
or
mov
cmp
inc
pop
mov
repnz
jl
pop
mov
sti
and
dec
xchg
mov
dec
into
mov
ja
sbb
lcall
lret
mov
jmp
test
mov
sub
push
push
aam
jmp
push
popa
fbld
js
cmp
mov
xchg
das
jmp
das
pop
ficoml
cmc
popa
aam
mov
jbe
inc
push
adc
or
jecxz
fstl
xchg
inc
add
loop
jns
push
popf
hlt
popl
ret
push
aaa
mov
mov
jg
mov
scas
das
push
jb
mov
imul
adc
in
daa
xor
pop
dec
push
dec
push
xchg
test
mov
iret
or
cmp
out
je
test
inc
and
iret
sahf
dec
push
and
xchg
mov
div
cmc
cli
sarb
jmp
pop
test
repz
xchg
jne
mov
roll
cmp
dec
fstpl
push
aas
pop
jbe
or
fcomps
mov
lods
call
hlt
and
lods
fstl
xor
xor
js
mov
adc
lods
lret
in
and
pusha
pushf
cltd
movsb
cmpsl
xchg
test
mov
jecxz
mov
adc
sbb
pop
push
inc
push
jge
lret
lcall
std
and
jecxz
xchg
pop
mov
push
pop
cli
or
cmc
shr
xchg
insl
clc
shrl
jns
xor
mov
add
push
add
sub
adc
push
jns
ror
sub
xorb
outsl
cmc
mov
push
hlt
xor
xchg
fnsave
mov
xor
dec
jae
stos
push
enter
pusha
mov
jmp
mov
in
mov
movsb
xor
movsl
out
mul
fstps
adc
inc
popf
into
loope
mov
inc
cmc
dec
cmpsl
outsb
mov
push
stos
mov
mov
or
test
inc
sbb
sub
sbb
sub
aaa
repz
in
test
and
test
push
js
pop
or
cwtl
shlb
in
mov
mov
out
ljmp
shll
adc
dec
inc
inc
adc
dec
gs
sbb
dec
cli
stc
mov
test
in
ss
aam
jle
sbb
iret
stos
mov
std
lea
pop
nop
es
jge
dec
orl
pop
cmc
movsl
xor
nop
pop
cli
mov
sbb
insl
xchg
jle
ss
push
ss
adc
orl
pop
daa
inc
xor
sub
and
pop
sarb
cmp
loope
sbb
pushf
jns
sti
mov
aad
out
fs
pop
inc
fcoms
push
inc
lcall
jle
lret
ror
dec
mov
bound
jle
les
push
es
ror
mov
add
adc
sub
js
mov
and
clc
xor
imul
fidivrl
outsl
cli
bound
xchg
mov
stc
cmp
sub
xor
sub
dec
cmp
inc
aas
aas
pop
loop
mov
ljmp
xchg
cmp
mov
lds
ss
insb
lds
adc
pop
repz
and
std
je
and
sti
add
jmp
sbb
pop
fimuls
jmp
test
scas
outsb
je
call
icebp
divb
mov
ret
call
dec
xor
out
inc
mov
sub
cwtl
mov
inc
lock
mov
icebp
out
in
lcall
xlat
or
xorl
repz
pusha
jl
enter
fsubrl
adc
mov
add
sub
inc
sti
scas
insb
jle
clc
int
jl
push
lcall
rcll
pusha
mov
icebp
add
aam
mov
sub
ror
dec
mov
cmp
ror
mov
push
jbe
mov
push
push
int3
pop
fwait
in
rolb
out
in
pop
cli
xchg
mov
std
mov
push
je
mov
add
cmp
pop
inc
xchg
push
xlat
aaa
xchg
shll
cld
push
jp
leave
and
jge
push
lock
pop
inc
xor
lock
dec
mov
loopne
test
das
pop
cmp
mov
mov
pop
fisttpl
inc
lds
js
fnstenv
xchg
jl
shll
dec
mov
fstl
stos
sub
mov
sub
mov
fnstenv
mov
push
push
jae
in
jbe
jno
mov
cmp
cmp
in
mov
mov
cmp
int3
sub
jb
cmpsl
jae
div
insb
mov
fistpll
repz
das
stos
in
outsl
cmpsb
inc
push
push
mov
aaa
mov
leave
out
inc
cmp
test
pop
mov
jmp
inc
test
push
ficoml
int
out
frstor
in
mov
push
mov
mov
test
cmpsb
xor
mov
xchg
add
sti
or
imul
jecxz
sti
aam
and
std
mov
mov
aas
mov
push
and
lret
cmp
test
and
add
pop
dec
push
fbld
mov
pop
fscale
addr16
std
sub
std
insb
mov
out
data16
sbb
mov
enter
cmp
xchg
mov
insl
ficomps
bound
andl
xchg
dec
aad
add
and
xor
jle
push
sbb
pushf
push
jg
push
fldl
adc
mov
dec
inc
xchg
mov
adc
insb
mov
loopne
dec
mov
das
cli
add
cs
sub
and
or
fsubl
hlt
popf
call
mov
pop
push
lret
xchg
cmp
pop
pushf
push
negl
lock
cmp
dec
and
push
add
pop
lret
fnstsw
daa
movsb
pop
lds
mov
mov
out
adc
push
rol
jno
loop
xchg
jbe
cmp
mov
icebp
dec
and
mov
dec
xchg
orb
mov
movsl
jmp
push
jge
stos
mov
mov
out
jbe
jno
jno
loop
push
sarl
cwtl
scas
das
lds
cmpsb
cmp
inc
popf
add
jo
sub
stos
cmp
jo
jle
fdivl
std
mov
and
int
pop
lahf
jmp
mov
std
xchg
out
into
mov
jecxz
inc
jle
scas
xor
fucomi
and
enter
cli
fmulp
mov
mov
out
stos
insl
xor
aam
outsl
jns
je
pop
fists
les
inc
ljmp
inc
inc
aad
cmp
xchg
and
frstor
sbb
mov
ret
push
xchg
xchg
addr16
adc
popa
push
xchg
sub
pop
sbb
mov
aam
xchg
dec
mov
dec
mov
imul
or
push
mov
movsl
mov
je
les
cmp
mov
inc
dec
ja
push
jmp
int
push
push
fidivl
adc
movsl
sub
lods
data16
cmp
data16
add
ret
loope
cmp
into
pushl
xor
adc
inc
mov
fucomi
ret
clc
xor
add
shrb
pop
bound
push
mov
shll
mov
arpl
add
pop
xchg
adc
sbb
xchg
add
cmp
out
lahf
xchg
and
hlt
mov
sbb
add
push
inc
shlb
in
mov
mov
push
ud0
dec
popf
mov
sbbb
sbb
or
je
push
cmp
imul
xchg
or
sarb
jae
cmpsb
adc
daa
pusha
mov
xchg
push
or
push
or
loopne
loopne
or
pusha
pop
lock
int
aas
ss
aas
cs
adc
movsb
fbld
jo
cmp
mov
andl
or
fs
dec
sbb
cmpsb
add
add
jb
inc
ret
mov
subl
js
jae
scas
ss
cmp
loop
xchg
mov
and
or
dec
loop
xor
mov
pop
xor
pop
sbbb
xor
lret
cmp
out
cld
jg
sbb
jecxz
or
xorb
inc
jae
ja
mov
fstps
and
mov
pop
jns
js
es
cmpsb
dec
cmp
rorl
xlat
inc
jnp
sbb
jge
mov
xor
sbb
nop
ljmp
cmpsl
fisttpl
pusha
jle
push
or
xor
mov
divb
aas
mov
test
cwtl
outsb
dec
push
mov
mov
push
stos
daa
ret
pushf
xor
mov
rcl
popf
sbbb
mov
cmp
jae
cmp
xor
add
lret
lret
fdivl
jmp
xlat
ret
sub
push
mov
adc
push
mov
dec
mov
stc
sbb
stos
clc
and
lods
fs
test
jno
xchg
mov
lods
mov
insb
jb
jle
inc
jo
and
or
out
stos
cmp
add
push
cmc
lcall
pop
add
ja
fidivl
mov
popa
inc
gs
sbb
add
push
cld
movsb
jp
dec
iret
cs
cmpsb
cmp
pusha
shll
adc
insl
int3
out
loopne
adc
cmp
jp
cmpsb
push
sub
mov
and
outsb
and
movsl
mov
xor
jb
or
outsl
sarb
or
mov
push
data16
ret
aam
adc
sub
mov
or
lahf
mov
pop
cld
jmp
and
mov
dec
or
aad
mov
testl
sahf
imul
int
cmp
out
jnp
popf
push
inc
int3
sbb
fistl
and
and
sub
mov
icebp
adc
test
cmp
sub
clc
sub
xchg
iret
in
or
mov
adc
jae,pt
jno
ret
insb
out
nop
push
cmp
cmp
dec
sarl
aaa
in
push
add
test
and
dec
in
inc
cli
test
inc
arpl
or
lret
dec
mov
lret
fmul
mov
rcrl
fdivs
fistps
pop
repnz
dec
addr16
out
stos
sbb
jbe
pop
xchg
lcall
insb
das
xor
add
icebp
cmp
cmpsb
jo
mov
and
add
dec
cmp
pop
arpl
out
imul
dec
cmp
or
loop
aam
out
ror
mov
leave
cmpsb
sbb
cltd
stos
out
xor
and
nop
dec
mov
rcll
cli
jg
mov
je
popa
mov
dec
negl
inc
repnz
hlt
fcmovnu
jl
jge
flds
ss
add
cmp
pop
pusha
add
popa
bound
inc
add
mov
sub
cs
sahf
sbb
jns
inc
sbb
inc
data16
mov
push
ret
rcr
js
roll
cld
bound
mov
jbe
push
dec
xor
arpl
fmull
mov
shll
push
or
cmp
clc
xchg
loop
dec
roll
xor
cmp
clc
test
das
xor
dec
adc
int
add
imul
fs
xchg
add
loope
sub
jno
nop
xchg
cmpsb
call
stc
mov
in
enter
and
sbb
inc
sbb
pop
jg
cmpsb
ljmp
mov
jg
push
sub
pusha
jle
insb
lcall
cmpb
xchg
jl
scas
int
aaa
sub
cld
cmp
jge
lret
adc
mov
mov
lret
jb
lods
test
inc
add
adc
in
add
push
lods
and
ja
fsubrl
inc
insl
cmp
jecxz
pop
ret
xor
divb
push
mov
das
pop
xlat
xor
out
pop
xor
add
cmp
dec
pusha
test
call
sub
cmp
dec
fcomps
jb
pop
jae
in
fldt
sbb
sub
dec
aam
int
fldcw
jmp
ljmp
adc
sbb
daa
adc
fbstp
xchg
outsl
out
xor
push
lcall
xlat
incb
jl
add
in
in
sbb
popl
mov
stos
fmuls
mov
cmpl
clc
in
pushf
and
in
pop
mov
sub
jle
in
test
pop
out
mov
push
add
stc
and
and
sub
cmp
dec
push
fiaddl
outsl
cmp
mov
stc
roll
sti
in
push
insb
into
mov
shlb
jmp
cmp
adc
cmp
xor
testl
inc
xor
mov
sbb
mov
scas
dec
fiadds
sbb
xchg
push
sbb
out
cmp
outsl
push
pop
jno
sarl
hlt
stos
push
in
loopne
and
add
leave
imul
iret
xor
xor
repnz
bound
stc
cmp
rclb
add
cmp
aam
inc
dec
pop
outsl
adc
int3
icebp
mov
mov
shl
push
mov
pusha
fnstsw
jge
ljmp
cmp
lea
in
xchg
scas
jmp
jl
insl
cld
js
clc
inc
loope
jecxz
gs
pop
sbb
mov
xor
cmp
jbe
xchg
mov
roll
icebp
and
add
loopne
fs
inc
arpl
or
test
mov
push
hlt
xor
pop
jg
inc
mov
out
loope
out
imull
cmp
clc
cmpsb
jbe
int3
and
loopne
pop
pop
call
sub
cmp
dec
cmp
mov
rolb
add
adc
and
lcall
pop
jp
push
jne
pop
jno
int
sub
insl
arpl
test
xchg
movsb
rclb
push
mov
xor
xchg
sti
push
xor
pop
movsl
pop
sub
mov
daa
popa
xlat
mov
mov
pop
dec
inc
scas
in
ss
cmpsl
dec
scas
gs
call
or
neg
mov
out
dec
shrb
push
es
out
jns
popa
mov
dec
xlat
test
dec
ud0
mov
sbb
cmp
jmp
fldl2e
ret
pop
adc
mov
push
das
je
push
add
stc
add
fimull
jecxz
fcoms
loop
inc
jl
sbb
stc
xchg
js
dec
inc
jo
push
jne
imul
sbb
add
ja
inc
popa
dec
mov
lahf
ja
pusha
aam
aam
jno
lret
push
lock
in
dec
dec
loop
call
dec
jno
enter
dec
and
push
dec
jge
sub
cmpsb
inc
add
push
popa
stc
rcrl
cld
aad
bound
sbb
cs
xchg
mov
in
mov
fs
jecxz
sbb
add
mov
push
cmp
fwait
dec
inc
stos
pop
mov
mov
fcom
movsb
adc
or
adc
repz
jmp
ja
psubusb
or
adc
mov
jbe
push
jno
fmulp
inc
fdiv
pop
jle
jno
jmp
outsl
sbb
aad
insl
xchg
pop
mov
ss
lret
je
and
daa
scas
shl
repnz
aaa
push
rorl
mov
or
xchg
pop
aas
outsl
mov
clc
enter
hlt
in
nop
stos
mov
adc
fstp
xchg
popf
rclw
dec
jl
or
xchg
push
stos
xchg
jle
push
repz
icebp
aaa
sub
ja
rorb
sbb
aad
addr16
ret
les
sbb
in
mov
sub
dec
pushf
bound
sub
outsl
mov
dec
clc
sahf
pop
mov
andl
jae
push
inc
sti
pop
clc
les
mov
shll
rep
mov
xchg
jo
jg
mov
jmp
xchg
iret
mov
jg
cmpb
push
mov
bound
lods
lret
xchg
iret
aam
jo
mov
xchg
fnsave
sbb
ljmp
fcomps
sbb
adc
pop
fwait
sbb
stos
jp
movl
push
cmp
sub
clc
imul
push
xchg
fwait
addb
mov
aam
inc
inc
movsl
fs
jae
mov
inc
push
mov
or
cmp
pop
sar
sti
pop
lods
fbstp
fstl
inc
xchg
les
xor
mov
cwtl
pop
push
mov
mov
cmpl
pusha
push
or
loope
xchg
pushf
jp
mov
lods
mov
ficoml
shrb
fiaddl
and
dec
sbb
mov
sub
lahf
int3
pushf
mov
mov
xchg
scas
and
cmpsb
add
dec
popf
addl
rclb
xchg
mov
pop
push
rcrl
dec
fldl
aad
mov
push
imul
clc
cmp
adc
arpl
in
cwtl
test
and
cmpsb
mov
mov
or
mov
ds
lahf
cmpsl
retw
clc
ret
cmpb
stos
loop
in
pop
xor
sti
mov
cld
pushf
sbb
pushf
ja
push
adc
xchg
imul
ret
and
cmp
sahf
loopne
movsb
and
xchg
cs
jge
dec
mov
cmp
lret
mov
sbb
mov
outsb
push
sbb
fsubrs
lret
insb
call
aaa
xchg
cs
outsl
mov
outsb
or
bnd
hlt
test
daa
in
in
stos
pop
movsb
add
icebp
jb
lods
xchg
js
dec
and
into
test
and
lret
push
xor
repnz
nop
dec
inc
pushf
pop
xchg
rorb
mov
lods
lods
pop
mov
stos
jae
push
in
cmpsb
sub
mov
mov
call
mov
add
stos
lret
and
mov
imul
mov
add
pop
sbb
loop
cmp
hlt
mov
bound
nop
sub
iret
xchg
outsb
lcall
outsb
sti
nop
cmpsb
push
push
sub
cmc
addr16
mov
test
sbb
push
xchg
jecxz
fidivs
icebp
lods
xor
dec
or
aas
cmc
test
inc
scas
mov
mov
mov
or
in
xchg
inc
jnp
stos
cmp
inc
adc
gs
shrl
nop
pushf
pop
add
push
int3
inc
into
ja
jl
inc
push
jb
push
mov
sub
and
stc
lcall
roll
test
fcoml
inc
xor
push
inc
stc
sbb
mov
add
fisttpl
dec
test
xorps
sub
ret
mov
out
test
andl
pop
loop
idivl
inc
clc
arpl
cmp
cli
std
out
scas
icebp
notl
xchg
in
sahf
lods
jl
inc
pop
stc
xor
nop
dec
or
jb
int
pop
add
fstpl
insb
push
fmull
dec
mov
cmp
mov
test
int
insl
jmp
fildll
popa
or
dec
sahf
jg
cmp
out
loopne
fsubl
out
inc
mov
and
fwait
rcr
jg
lods
or
pop
or
lods
insb
je
inc
pop
jecxz
js
aas
aam
outsl
movsb
jp
sti
dec
mov
sub
adc
adc
and
or
orl
xchg
jb
bound
xor
int
ror
out
jns
in
leave
jge
adc
lret
outsb
dec
adc
js
push
push
hlt
mov
out
int3
fistps
pop
or
pusha
and
adc
add
dec
int3
cmc
push
sub
stc
notb
out
add
inc
addr16
lret
pop
jns
fs
sarb
cmpb
pop
pop
enter
ss
stos
and
sub
cmp
lea
shlb
push
adc
xlat
mov
or
subl
movsb
push
pop
stos
cmpsl
xlat
and
push
lock
loopne
stos
pop
imul
push
movups
mov
movl
bound
or
push
sahf
ret
leave
dec
mov
push
jmp
cmp
iret
arpl
sub
pop
push
cld
mov
xor
movsb
rclb
inc
and
cmpsl
movsb
jns
push
cmpsl
dec
lcall
cli
jnp
jmp
les
enter
jmp
mov
pop
cmc
fldt
add
mov
cmp
out
push
je
movsb
pop
add
iret
cltd
xor
or
push
sti
pop
mov
lret
push
push
cwtl
jae
mov
insl
clc
add
sbb
test
pop
xchg
ret
pop
xchg
fwait
imul
cs
ret
push
dec
xchg
dec
push
push
movsl
dec
stc
adc
stos
add
mulb
cmp
enter
sbbw
jne
jnp
sbb
ds
dec
dec
and
xor
je
test
pop
jb
loopne
mov
dec
and
push
pop
vunpckhps
or
fldt
xor
dec
inc
out
loopne
ja
push
outsl
sub
cmp
int3
dec
out
shlb
mov
xchg
iret
xor
pop
and
icebp
inc
jmp
sbb
idivl
enter
or
xor
ss
adc
testl
int
or
sub
ret
push
add
mov
or
ret
mov
cwtl
jp
lods
cmp
ficompl
lods
xchg
call
pop
mov
sub
fsubrl
out
mov
push
stos
loopne
clc
push
rcl
adc
mov
inc
xchg
int3
jne
fs
fsts
mov
mov
mov
push
cmp
pop
sub
in
rcrb
add
adc
push
xor
daa
mov
mov
movsb
test
and
mov
out
and
jbe
lret
and
pop
or
push
mov
lahf
xchg
xchg
and
fadd
lret
push
pop
mov
repz
push
cmp
aaa
mull
scas
mov
lea
out
js
loope
push
test
pop
or
negb
push
pushf
add
aaa
popf
out
dec
lds
dec
subl
pop
mov
int
lods
sub
xchg
test
popf
ljmp
addr16
das
or
cmp
sbb
inc
scas
xor
and
cmp
test
in
mov
mov
movsl
int
dec
jecxz
xchg
xor
in
adc
mov
mov
cmp
push
shlb
push
aam
pop
lcall
lcall
aam
and
mov
push
sti
stc
push
xchg
xor
lea
mov
mov
fisubrs
lea
mov
imul
cmp
cltd
fildl
pop
shl
mov
xor
sbb
pop
sub
bound
mov
nop
inc
dec
cltd
cld
or
push
mov
xor
or
add
jns
nop
push
pushf
or
fsubs
xlat
pushl
dec
or
pop
mov
decl
mov
or
add
mov
mov
or
ret
and
js
cmp
xchg
pusha
or
int
fsts
popa
ret
dec
cld
xchg
lods
add
fcomps
add
push
data16
adc
test
call
cld
ficompl
push
dec
mov
imul
dec
dec
push
leave
divl
jbe
jno
xchg
jo
pushf
xlat
movsb
ficoml
inc
sbb
adc
dec
push
je
ret
cmpsl
xor
mov
sbbl
adc
lahf
inc
outsl
adc
mov
addl
jno
cld
out
in
pusha
std
lret
sarl
xchg
dec
in
ljmp
or
cwtl
jl
xor
sbb
cmpsb
lds
aad
pop
pop
imul
loopne
nop
push
cmp
pop
mov
adc
aam
xchg
cmpsb
sub
pushf
sbb
pop
mov
out
push
rolb
subl
pop
sub
dec
adc
mov
lods
cmc
mov
add
xchg
lods
cmpsl
mov
pop
jo
cmpxchg
cmp
sub
xchg
pop
in
mov
into
cli
sub
xchg
in
inc
push
jge
pop
dec
xor
cmp
jb
dec
jbe
inc
fdivrl
and
push
into
ds
and
jecxz
ds
rol
out
xchg
pop
gs
mov
dec
das
cmp
sbb
push
fildll
shrl
loope
add
mov
xchg
sub
sub
into
negb
mov
add
and
inc
shll
mov
cwtl
jmp
test
loop
mov
loop
cwtl
out
iret
pop
imul
outsb
xchg
rorb
clc
mov
dec
icebp
mov
out
adc
sbb
mov
jecxz
adc
pop
imul
lcall
outsl
js
mul
loope
cmp
mov
inc
iret
cmpsb
add
jle
dec
es
xor
popf
imul
dec
ficompl
fdivrl
das
xchg
in
fiadds
popf
push
mov
pop
mov
aas
xchg
enter
xor
xchg
adc
lods
jnp
inc
jne
js
pop
add
jecxz
icebp
rcrb
mov
add
fs
cmp
lds
test
sahf
fdivrl
iret
out
jae
sub
inc
and
xchg
loop
std
aad
popf
lcall
imul
or
test
addl
inc
loop
mov
xchg
sbb
inc
jnp
stc
push
xor
outsl
pop
sub
push
sub
xchg
adc
mov
mov
sti
mov
dec
cli
enter
jno
aad
clc
cs
dec
or
jo
out
dec
ljmp
cmp
inc
xchg
sbb
and
push
cmp
add
pop
mov
push
lods
iret
pop
push
add
test
frstor
mov
sbb
mov
lret
js
mov
sahf
mov
sbb
jb
loop
xchg
sbb
mov
cmp
popa
fstl
pusha
sbb
dec
call
jg
and
leave
add
mov
jmp
sub
dec
fwait
stos
in
pop
inc
mov
mov
pop
js
cmpsb
push
clc
or
ud0
call
in
out
push
jne
dec
jnp
dec
cmp
test
sub
bnd
sbbl
mov
xchg
mov
mov
or
pop
cli
mov
and
inc
dec
jae
pop
enter
mov
iret
mov
test
pop
mov
out
out
sub
fstpt
orl
out
bound
jecxz
pop
mov
test
xchg
or
out
subl
jo
sub
stos
push
ds
inc
dec
sbb
cmp
jae
mov
xchg
pusha
jp
and
cmp
adc
jno
test
sub
mov
push
scas
js
imul
sub
ret
pop
fs
roll
int
jg
fbstp
cwtl
push
jmp
stc
stos
mov
iret
popa
test
lahf
mov
mov
mov
in
pop
push
xor
repz
mov
int3
lcall
aaa
stos
push
adc
sub
add
loop
and
jb
fldenv
add
pop
sub
loop
push
fwait
cmp
js
add
sarl
je
inc
fadds
sub
pop
cmp
inc
xlat
jge
xor
scas
mov
or
push
add
mov
xchg
push
and
push
pop
dec
mov
test
sbb
imul
out
lds
add
ret
pop
test
sbb
xlat
mov
in
fisttps
push
jecxz
add
add
lcall
lret
adcl
push
fidivl
xor
outsb
imul
scas
ficomps
std
pop
mov
or
mov
dec
dec
mov
in
inc
icebp
mov
and
lods
mov
jo
pop
scas
addr16
adc
xchg
sub
mov
ja
lock
push
jno
dec
mov
adc
cmpl
fcmove
scas
hlt
dec
xchg
cmp
adc
clc
and
add
mov
sbb
push
pop
lods
js
xor
push
sbb
mov
cmpl
jmp
in
xchg
mov
xor
mov
pop
je
out
adc
arpl
out
and
mov
adc
movsl
xor
xor
xor
imul
arpl
aaa
push
mov
jne
sub
into
lods
or
xor
lds
pop
pusha
push
out
adc
leave
push
enter
mov
das
sub
ret
mov
cwtl
dec
push
mov
push
js
insb
dec
add
fsubrp
lods
scas
imul
lahf
push
outsb
mov
jno
addl
popf
inc
mov
scas
mov
ror
adc
clc
jae
push
je
stos
pop
test
xchg
cmp
add
and
adc
adc
js
adc
or
sbb
mov
push
push
sub
pop
pop
outsl
inc
xchg
stc
add
or
mov
nop
jb
and
popa
cld
fisubrl
emms
stos
mov
push
pop
mov
subb
adc
xchg
daa
test
dec
cmp
popa
mul
shll
rcll
push
xchg
add
ds
jno
cmp
sub
inc
filds
sub
dec
xchg
fstpl
rcll
pushf
test
cli
pusha
rcll
mov
mov
xchg
cli
dec
fdivrs
or
popa
gs
insl
stos
push
gs
stos
stos
cmp
jecxz
sti
data16
add
or
sub
popa
adc
and
fcmovnb
pusha
fcompl
jno
or
arpl
xor
sti
out
lds
dec
clc
mov
jne
mov
xchg
shl
cmp
add
in
out
dec
ficoms
jle
push
ss
xchg
dec
repnz
test
inc
aad
adc
inc
pusha
fcoms
mov
std
cwtl
mov
cmpsl
pop
iret
scas
rep
xchg
sub
add
sub
mov
mov
sbb
popf
lahf
cmp
lock
xor
or
popf
inc
popf
and
pushw
outsl
or
add
adc
cli
xor
pop
je
mov
dec
out
or
stos
cli
ljmp
je
pop
dec
bound
stos
pop
sbb
add
push
fistl
fs
mov
jecxz
cmpsb
cld
push
push
mov
and
mov
scas
stos
mov
xchg
push
sbb
sub
cmp
dec
test
and
loop
xchg
cmp
js
pop
push
dec
sbb
dec
lahf
aas
lret
xorb
fnstcw
push
push
insl
mov
or
mov
sub
hlt
test
imul
push
fildl
sub
jmp
test
mov
mov
adc
aad
stos
sbb
lret
scas
rcrb
xchg
rcr
mov
ja
sbb
mov
mov
jnp
ficoms
popa
out
out
ret
dec
rolb
mov
sub
lods
jbe
fstps
repnz
jg
sub
mov
jns
adc
sbbl
mov
mov
pop
lret
mov
xchg
xor
imull
jns
jno
inc
fiadds
jb,pt
jns
mov
pusha
inc
mov
adc
adc
push
shll
inc
inc
comiss
dec
mov
aaa
pop
es
adc
call
pop
fcom
gs
push
pop
out
mov
push
shll
mov
push
xorb
or
add
ficomps
jp
loop
push
cwtl
jns
and
int3
aam
mov
fistpll
jnp
push
adc
sub
xchg
sub
cmp
xchg
dec
mulb
add
mov
sub
rol
mov
pop
jp
andl
stc
in
in
leave
and
mov
xor
fisubl
pop
movsl
xchg
aad
daa
into
int
mov
xchg
jecxz
pop
mov
das
out
negl
add
testb
dec
fdivr
fildl
testb
sub
in
xor
xor
imul
cmc
pop
mov
mov
out
jae
nop
cmp
std
daa
jo
mov
mov
pop
xor
pop
sub
mov
add
dec
lock
out
outsl
jge
in
sub
mov
xchg
mov
iret
sbb
cld
dec
call
lods
mov
add
push
cmp
adc
push
xchg
mov
adc
and
aad
int
movl
adc
das
inc
call
ret
push
std
mov
adc
aaa
adc
test
cmp
lret
lret
in
mov
add
xchg
sbb
mov
cmp
orl
or
jge
scas
dec
xor
aam
add
push
or
loope
movsl
insb
subl
adc
sar
dec
pop
xor
mov
add
push
jl
jmp
lahf
lods
jmp
in
add
pop
sbb
sbb
push
and
mov
ja
sbb
sbb
cmpsb
jmp
cwtl
rcrb
lea
cld
adc
sub
lods
and
jb
xor
jnp
cwtl
adc
and
xchg
mov
addr16
sbb
fwait
inc
ds
les
xor
out
stos
mov
cs
insl
xchg
out
out
push
dec
mov
pop
or
rcrb
cmpsl
fbld
jle
cltd
hlt
jnp
andl
sub
xor
pop
out
xor
in
lea
in
hlt
mov
xchg
ret
mov
sbb
mov
test
mov
jl
enter
out
jmp
or
lods
fidivrl
imul
cltd
sbb
sbb
mov
cmp
mov
cs
push
xor
inc
pop
mov
push
pop
mov
mov
sbb
jbe
pop
jge
push
push
sahf
int3
fidivs
cwtl
pop
cmp
data16
ret
addr16
lret
xorl
test
js
cmpsl
dec
lret
fsts
addr16
mov
mov
in
arpl
mov
dec
jb
dec
fwait
jecxz
pop
xor
pop
shrl
cmc
mov
fsub
cwtl
iret
repnz
sub
movsl
fbstp
or
sbb
mov
mov
outsb
xor
xchg
js
adc
or
cltd
sub
in
mov
in
imul
lret
cwtl
test
test
sti
lcall
cmp
cmp
ja
bound
testl
or
inc
cmp
push
test
jge
push
insb
jmp
int
pop
sub
clc
push
lock
stc
mov
bound
sbb
mov
cmpsb
pop
add
push
mov
mov
dec
dec
cmp
adc
fldt
sti
es
jmp
xchg
add
sbb
nop
loopne
xchg
or
sub
shrb
mov
xor
ljmp
rcll
cmp
jmp
and
pop
sbb
jmp
rorb
dec
aas
cmp
leave
xchg
outsb
decb
cld
inc
sub
mov
inc
mov
hlt
cwtl
mov
inc
cmpsb
fs
adc
dec
sbb
loope
sahf
xor
xor
cmp
xchg
mov
pop
pop
pop
mulb
jne
inc
bound
pushf
cld
xchg
sahf
adc
shll
dec
mov
lods
inc
addr16
xor
pop
decl
imul
xchg
adc
dec
fisttpll
inc
or
mov
aas
push
mov
xchg
jp
mov
and
addr16
movl
in
loope
adc
mov
xor
sub
sarl
int
dec
aaa
cwtl
and
or
inc
mov
mov
sahf
dec
in
pop
inc
adc
popf
icebp
push
leave
popa
mov
xchg
ds
push
or
xchg
xchg
mov
lret
dec
and
in
mov
xor
out
fsub
mov
push
xchg
inc
out
sbb
shr
and
push
iret
add
or
sbb
cmp
jb
xor
outsl
cmp
imulb
lahf
fnstenv
and
icebp
aam
mov
enter
cmp
aaa
sbb
sbb
shll
pop
mov
mov
xor
push
jl
lods
sbb
lods
dec
cmp
or
out
or
mov
rcrl
sbb
xchg
jmp
mov
jne
int3
cs
test
mov
sub
sti
sbb
mov
repnz
gs
mov
mov
addb
scas
fbstp
adc
pop
sahf
jo
add
lcall
imul
pop
int
push
mov
insb
popa
and
mov
xchg
or
push
ljmp
lret
jo
fwait
dec
cmp
arpl
and
shrb
xor
jnp
stos
add
adc
add
push
loopne
jecxz
mov
and
mov
add
pop
dec
add
insb
ljmp
arpl
in
sahf
addr16
jns
es
adc
dec
sub
cmp
mov
fldenv
add
fimull
dec
jae
and
inc
jge
cld
fists
cs
mov
sub
jb
push
mov
ds
fcomi
mov
pop
pop
and
and
jo
mov
adc
and
mov
loop
jno
dec
lret
mov
inc
roll
bound
adc
add
sarb
imul
push
pop
fisttps
js
mov
push
dec
cli
sub
rcrb
shr
lods
xor
movsb
mull
outsb
inc
js
sbb
rcl
add
push
or
mov
ds
test
mov
test
lods
test
and
pop
fsub
rorl
aad
icebp
dec
lods
adc
xor
and
lret
in
xor
in
adc
adc
mov
or
ja
loope
mov
jmp
pop
add
loop
jno
cmp
fwait
cs
add
mov
xor
mov
orl
repz
sbb
mov
xor
sbb
in
pop
sub
mov
enter
fnstcw
mov
lods
shlb
pop
jb
push
mov
push
and
mov
repnz
push
popf
repz
xchg
ds
out
loope
mov
mov
push
popf
mov
add
xchg
mov
and
mov
push
jge
xchg
insl
test
push
jno
xor
xchg
in
popf
ret
mov
inc
out
outsl
adc
fs
out
pop
cmc
cld
pop
adc
leave
outsb
cs
mov
movsl
add
sarl
loope
outsb
mov
lock
push
add
movsl
sub
idivl
pop
and
dec
aam
push
push
insb
xorl
and
leave
mov
add
dec
mov
fiaddl
fwait
loope
mov
xor
add
in
pop
sbb
jmp
subl
cvttps2pi
push
cmpsl
outsb
dec
pop
add
fists
mov
in
das
scas
scas
arpl
jg
xchg
mov
jno
jne
mov
mov
movsl
sub
fisubrl
ds
push
sahf
scas
pop
aaa
addl
jle
and
mov
clc
hlt
shlb
xor
pop
shlb
out
push
inc
jne
push
xor
insl
aad
cmp
int3
inc
push
outsl
xor
inc
cld
shl
gs
nop
js
bound
cmp
lret
sbb
movsl
lods
mov
cmpsl
jg
sbb
adc
pop
cmp
cbtw
mov
push
movl
inc
dec
imul
dec
loope
pop
repz
xlat
mov
mov
or
xor
jb
and
repz
pop
jl
cmpl
and
shl
int3
ja
mov
add
loopne
fstps
mov
xchg
adc
fs
mov
fistpll
out
inc
lret
jno
dec
xor
or
fldenv
lret
les
push
je
and
jbe
mov
out
sub
movsl
mov
pop
mov
xchg
test
push
cmp
xchg
mov
xchg
push
hlt
es
lds
mov
das
andl
movsl
sub
mov
fnstcw
addb
icebp
jle
push
cmc
mov
or
fbld
or
aas
std
dec
call
pusha
push
fiaddl
jo
subl
ljmp
ja
push
xor
into
inc
jg
sbb
cmpsl
shlb
fs
dec
xor
stos
push
aaa
dec
rcrb
je
icebp
pop
cmpsb
js
iret
daa
addr16
add
fcmovb
fistps
out
add
mov
je
testl
mov
orl
jecxz
pop
lret
aad
pxor
xchg
in
mov
or
stos
lahf
fadds
xor
out
lret
mov
mov
adcb
sbb
pop
inc
push
mov
sbb
repz
jnp
xor
lcall
xor
es
sbb
outsl
js
jp
cltd
mov
fistpl
jo
xor
adc
mov
mov
push
mov
xchg
pop
adcl
pop
arpl
pop
sub
cwtl
cmc
jmp
mov
xchg
xchg
and
jle
stos
sbb
cld
jne
or
popa
jmp
mov
fs
mov
fcomp
mov
fisttpll
andl
mov
jp
mov
xchg
mov
ret
or
inc
dec
fwait
or
cmp
addr16
mov
cli
add
pop
movsl
fstps
add
lods
adc
fcoms
in
mov
imul
jg
pushf
cmc
dec
cmp
std
mov
jle
xchg
dec
daa
cli
sub
push
adc
sbb
ljmp
mov
sub
rorb
lea
shrl
sbb
xchg
mov
add
fistps
sbb
fidivrs
pop
nop
xor
cmp
xchg
inc
cmp
mov
pop
pusha
aas
adc
sahf
sbbl
cwtl
mov
in
popfw
cmp
xchg
addr16
popf
lea
jae
jbe
and
rclb
xchg
sbb
jo
pop
loopne
mov
and
clc
mov
dec
fcmove
jmp
test
imul
dec
das
fdiv
lret
in
js
fadds
ret
xor
push
xchg
cmp
cmp
lds
sbb
in
aam
fsubl
pop
and
cmp
mov
loop
jns
push
int3
aas
xchg
out
int3
jl
mov
mov
mov
sbb
aas
lahf
fldcw
xchg
sub
cmc
cli
mov
icebp
adc
cwtl
sub
adc
xlat
in
cmp
or
fsts
out
in
sbb
addb
adc
mov
cmp
or
fisubrl
mov
inc
lds
rcrb
fs
mov
movsb
and
sbb
jecxz
add
push
push
xorb
dec
scas
mov
call
jg
and
negb
daa
jnp
lea
adcl
test
xchg
loop
push
or
xchg
iret
shrl
aad
ret
lcall
int
sbb
sbb
add
mov
mov
pop
mov
mov
cwtl
push
loop
mov
xor
jne
test
cmpsb
adc
xorl
ljmp
push
lock
lods
mov
aad
rcr
push
dec
push
test
pop
sahf
sbb
sub
cmpsl
jne
movsl
aam
xlat
or
push
inc
insl
out
in
into
jge
push
xchg
ret
jne
repz
fs
cmc
out
or
mov
mov
sub
test
fcmovnbe
lea
int
std
adc
jne
cmp
mov
daa
std
repz
jno
ret
sub
aas
add
imul
adcl
and
aam
pop
cmpsb
nop
and
and
pop
mov
cltd
cs
dec
sahf
cltd
es
out
jle
loop
arpl
scas
shlb
xchg
ret
arpl
je
and
enter
scas
and
imul
test
cmp
push
or
outsb
or
shl
add
test
xchg
jne
jae
add
cmp
pop
adc
sub
cmpsb
pop
fwait
jo
jbe
pop
fsubp
arpl
ror
push
pop
iret
jae
push
andl
pushf
rcl
adc
shl
ljmp
outsl
ja
ljmp
mov
jle
push
jl
mov
and
lahf
dec
or
mov
dec
cwtl
fimuls
inc
inc
dec
lock
sti
xchg
fwait
cwtl
fdivl
inc
loopne
dec
fstpt
mov
clts
pop
mov
jecxz
xchg
mov
loopne
jmp
mov
es
shll
cs
shrb
sbb
negb
xchg
repnz
lds
mov
cmp
add
ja
xchg
filds
jo
and
sbb
and
rcl
aam
or
sub
sub
and
leave
cmp
js
dec
or
cmp
and
jmp
sbb
xor
inc
ret
inc
pop
out
mov
inc
jg
sub
pusha
aam
fs
adc
xor
inc
cmp
mov
std
xor
clc
and
sbb
cs
int
push
jne
movsl
data16
push
push
rcrb
stc
cmp
jmp
or
jecxz
sbb
add
mov
int3
mov
push
push
rol
daa
xchg
cmp
loop
shll
push
inc
andb
dec
lcall
imul
andl
das
xor
rorb
inc
loop
jmp
sbb
fcmovnu
shlb
cltd
enter
push
movsb
jno
add
pop
loope
mov
cmp
jnp
sub
decl
adc
movl
lds
daa
pop
dec
outsl
stos
fs
dec
xchg
call
jge
iret
jecxz
and
scas
les
stc
sub
and
clc
imul
xor
icebp
cmp
imul
mov
cld
push
sbb
jmp
sub
xchg
stos
gs
push
addr16
xor
out
stos
lret
adc
stc
adc
and
jb
xor
pop
mov
fdivr
push
mov
jb
jo
xchg
popa
mov
push
sub
adc
xchg
cmp
xor
jae
sbb
das
test
stos
repz
imul
lods
xor
inc
mov
movsb
lods
mov
xchg
sbb
mov
pop
push
shrb
xlat
roll
jae
push
movsb
sub
out
popa
dec
push
pop
or
and
jnp
jg
jmp
xchg
movsl
cmpsl
xchg
xchg
cmp
stc
call
pusha
clc
mov
pop
mov
inc
out
mov
cmc
movsb
iret
xchg
stos
push
xor
shrl
in
mov
adc
jae
xchg
inc
mov
movsl
and
in
jb
cwtl
pop
int3
pusha
cmp
jb
push
mov
adc
lods
fistpl
fildll
pop
pop
sbb
mov
sbb
dec
in
pop
cmp
mov
mov
sbb
mov
lea
test
imul
ficoml
mov
outsb
imul
dec
pop
fimull
sbb
andl
sbbb
stos
nop
outsl
and
cmpsl
or
or
push
sbb
cmp
jge
in
fsubrs
sbb
adc
in
add
les
stc
js
mov
sti
sub
negl
dec
sub
xchg
mov
jae
imul
loop
xchg
and
sub
outsb
stc
dec
je
loop
stos
mov
in
mov
sahf
push
mov
xchg
sahf
clc
outsl
ja
dec
sub
xor
imul
inc
sti
aaa
mov
sbb
adc
imul
fwait
inc
es
outsb
imul
add
xchg
cmpsb
inc
sti
or
adc
push
in
push
psrlq
sbb
stos
dec
mov
jae
fdivrp
leave
inc
dec
loope
lcall
dec
bound
sbb
sbb
dec
aam
xor
jge
cs
cli
aas
jle
push
mov
mov
cmc
mov
repz
ljmp
inc
mov
xor
ds
lods
leave
ja
das
int3
dec
lods
outsb
xchg
adc
xchg
fwait
ljmp
xor
aad
stos
inc
add
ja
mov
negl
gs
je
outsl
daa
pop
push
or
dec
xor
leave
dec
test
pusha
scas
stc
rcrb
test
dec
ficompl
and
fsts
and
push
div
cmp
daa
daa
pop
or
sbb
mov
push
push
add
jle
cltd
or
jno
pop
daa
xchg
ja
inc
mov
pop
stos
lret
pop
jle
push
xchg
inc
jmp
std
xchg
push
loope
pop
add
pop
std
jg
adcb
lods
and
jmp
movsl
mov
insb
and
or
xchg
cmp
sub
jmp
jmp
es
inc
cmp
out
jg
adc
add
push
ja
push
ljmp
jbe
cwtl
test
mov
pop
mov
es
dec
dec
add
iret
stos
sbb
inc
jmp
or
inc
fmull
mov
in
scas
adc
lret
clc
stc
jl
popa
daa
adc
int3
jp
dec
sti
xor
icebp
iret
sbb
cld
je
sbb
or
enter
inc
in
pop
jb
jge
sbb
popa
mov
outsb
xchg
sub
roll
inc
mov
xor
icebp
stc
dec
add
xchg
outsb
bound
in
inc
aad
das
push
jg
fisubs
dec
sar
xor
lods
cmp
rcrb
mov
xchg
push
lock
lods
das
pushf
xor
pop
dec
push
cmp
pop
push
hlt
sahf
ja
or
shrl
add
pop
into
fs
scas
test
jmp
cmc
out
add
pop
and
jle
bound
xor
in
dec
or
aad
pop
stos
xor
mov
and
out
push
add
loop
fwait
mov
push
pusha
rclb
xor
inc
aas
push
cld
sub
nop
push
test
outsl
sub
popa
nop
ss
jo
nop
punpcklwd
dec
inc
lea
out
jp
cmp
cmp
data16
test
and
std
fidivs
iret
push
sbb
fisttps
mov
les
pop
ret
add
imul
pop
popf
xchg
jo
ret
cs
mov
cld
xor
push
jecxz
push
or
push
cmpsb
aad
rcrb
or
in
in
adc
jmp
sbb
push
cli
ljmp
pop
mov
jl
add
push
scas
sti
sub
jae
in
mov
std
xor
pushf
jb
jno
scas
adc
js
fnstsw
jno
in
fiadds
mov
les
pop
aaa
lds
jmp
rorb
cmp
repnz
out
daa
ret
popa
jns
pop
lea
daa
in
push
and
cwtl
es
sbb
mov
fdivl
and
adc
addr16
int
mov
push
and
inc
pop
out
mov
and
les
mov
rcrb
ret
out
cmp
insl
sbb
or
mov
and
sub
daa
push
popa
pop
int3
pop
insb
fidivl
push
sub
in
rcr
xchg
js
in
test
out
rorb
data16
inc
addr16
mov
call
fs
dec
push
push
xor
mov
mul
mov
ljmp
fnstcw
jge
movsb
test
aam
pop
xchg
cld
out
cmp
add
mov
stc
xchg
sub
cmp
test
push
in
outsl
cmpl
cli
add
cmpb
pop
in
inc
addl
fisubrl
lock
xor
leave
pop
ret
mov
add
dec
dec
xchg
add
in
xchg
cmp
cli
movsb
mov
mov
mov
aaa
xchg
push
adc
dec
xchg
and
xchg
sbb
mov
or
add
xchg
repnz
adc
xchg
sub
fisubrs
divb
sbb
faddl
icebp
stc
push
pop
data16
cmp
lods
aaa
push
dec
xchg
jnp
push
stc
or
lock
xchg
jne
jecxz
js
mov
jb
lock
cmpsl
stc
cs
scas
test
inc
push
and
popf
mov
out
xchg
je
sti
jl
pop
subl
sbb
pop
sub
stos
jle
cmpsl
adc
out
mov
push
xlat
pop
push
das
aad
sbb
insl
sbb
fidivl
es
js
pushf
jae
xchg
push
add
push
pop
lahf
int3
dec
loop
call
or
arpl
daa
ljmp
inc
fidivrl
or
ss
es
inc
ds
mov
jg
mov
sbb
xchg
xchg
enter
sub
sub
call
ja
sub
clc
lret
in
mov
iret
stos
mov
aad
lret
int
inc
test
clc
dec
sbb
pusha
cmp
jmp
mov
and
icebp
cmp
cltd
mov
shrb
movsl
stos
fcoml
rcr
scas
jo
test
adcl
daa
outsl
xchg
and
dec
sub
mov
pop
out
notb
fsubrp
lods
cmpsb
in
xlat
inc
aas
cli
andl
clc
mov
xor
std
add
add
mov
test
cmp
mov
xchg
pusha
mov
lcall
in
sbb
adc
adc
aam
and
cmpsl
add
mov
inc
jg
sub
xorl
and
jae
fisubrl
dec
mov
jnp
mov
faddl
mov
fdivs
jno
out
int3
push
pop
inc
xchg
ja
bound
flds
faddl
xlat
inc
or
shrl
add
and
shl
or
loopne
inc
popl
fisttpl
inc
aam
mov
bound
inc
or
gs
xor
daa
jno
add
push
push
pop
inc
mov
mov
sahf
addr16
and
adcl
xor
adc
sbb
lea
shrl
mov
rcrb
mov
jg
sbb
mov
push
mov
lret
sbb
cmovne
lahf
dec
leave
mov
xchg
mov
fs
jae
hlt
rcll
xchg
adc
sub
lcall
lods
aas
jecxz
insl
ret
jae
enter
or
sbb
inc
or
bound
pop
inc
cmp
adc
fidivrl
inc
mov
lock
mov
mov
jge
mov
mov
ret
or
aad
jecxz
in
insl
mov
mov
mov
dec
inc
shrl
fsubp
xchg
add
jge
cmc
out
aad
xchg
loop
orb
add
fwait
xor
popl
ljmp
shr
xor
and
arpl
mov
mov
inc
loopne
aas
out
push
add
mov
mov
bound
imul
or
push
push
lret
cwtl
dec
xchg
xchg
adcb
inc
in
and
jl
out
mov
mov
repnz
sbb
cmp
jo
out
sbb
xchg
mov
mov
shlb
outsb
data16
cli
pop
inc
shrb
push
lods
in
in
cmp
add
popa
lods
lods
add
push
inc
sub
jg
inc
inc
cmp
push
sbb
mov
daa
gs
adc
imul
call
repz
iret
sarb
mov
mov
clc
inc
or
aad
mov
pushf
les
pop
and
mov
rcll
ljmp
mov
ror
clc
cmpsl
xchg
sub
enter
jge
add
jb
sub
lcall
addb
repz
bound
mov
dec
fdivr
cmp
xor
ret
inc
add
scas
pop
push
sub
push
stos
jae
xor
mov
dec
xor
xor
je
xor
jne
add
push
mov
jmp
testl
outsb
pop
mov
call
add
dec
dec
jp
insl
dec
pop
xchg
or
sbb
imul
sbb
out
addr16
iret
jne
cmp
sub
rorb
pop
pushf
repz
mov
es
rorl
clc
push
cmp
arpl
ret
or
add
cmp
pushf
jns
mov
adc
rol
or
es
pop
data16
ret
mov
cld
out
sahf
xchg
cwtl
insl
cmpsl
icebp
daa
inc
lret
mov
test
ds
add
movsl
pop
jl
scas
fnstsw
in
jge
mov
adc
cmp
push
addr16
add
mov
mov
mov
imul
jmp
adc
repnz
or
mov
lods
xor
ret
and
dec
jle
mov
lcall
fstps
fwait
adc
lret
insb
xchg
jl
or
xchg
xor
fimuls
cwtl
xchg
xorb
cltd
popa
dec
xchg
lcall
loope
or
dec
sbb
shlb
xchg
jbe
dec
or
push
ret
mov
mov
adc
dec
bound
pop
push
jnp
mov
mov
out
rclb
push
movb
jnp
sbb
cmp
mov
inc
cmc
or
jle
rcrl
inc
out
shl
fldenv
test
mov
and
rolb
jbe
push
jecxz
sbb
fimull
shlb
mov
xor
lcall
ds
mov
inc
inc
dec
repz
insl
mov
cmc
jo
xor
jmp
cs
or
mov
lret
xchg
icebp
lock
push
cmp
das
and
and
cli
mov
fimull
mov
aad
mov
repz
jbe
inc
test
inc
jae
push
out
clc
jae
or
mov
std
call
sbb
jmp
xor
adc
std
inc
mov
dec
clc
push
mov
leave
push
mov
sbb
popaw
dec
add
mov
cli
mov
ja
sub
ret
test
dec
popa
sub
pop
mov
inc
repz
stos
mov
std
push
inc
inc
dec
addb
cmp
sldt
fmull
aad
dec
orl
fsubrs
adc
pushf
out
lret
inc
sbbb
popa
mov
imull
inc
dec
divl
pop
adc
js
or
pushf
ja
xor
ficomps
push
mov
pop
xor
mov
cmp
idivl
add
outsb
test
dec
loop
roll
xchg
pop
fmuls
dec
fistps
incl
xor
inc
cmp
je
fcmovnb
dec
sbb
into
loope
adc
push
bound
and
mov
popf
sbb
gs
in
sub
xchg
aaa
xchg
xor
daa
repz
in
mov
mov
lds
mov
insl
sbb
outsl
mov
test
add
jae
or
js
add
inc
test
call
xor
repnz
inc
push
stos
xor
test
outsb
mov
fsubl
cli
or
mov
lcall
call
out
test
out
inc
mov
cltd
push
pop
add
dec
mov
les
add
into
ja
dec
mov
ret
fnsave
push
enter
stc
js
in
xor
shll
add
sub
loopne
jo
jmp
adc
adc
add
xchg
mov
das
out
cltd
shl
xor
loop
sbb
mov
sarb
mov
fdivl
andb
jnp
fisttpll
mov
mov
add
testl
push
xchg
sbb
sbb
sbb
sbb
arpl
add
inc
pushf
jp
sbb
dec
sbb
mov
and
or
sub
int3
dec
lods
shlb
inc
mov
lcall
sbb
add
and
mov
mov
xchg
dec
nop
xor
out
fs
mov
pop
aas
ret
outsl
gs
push
mov
stos
jbe
fdivs
xchg
aaa
ja
into
lds
cmp
sbb
inc
call
cmp
mov
mov
andl
popf
fistpl
mov
je
inc
add
daa
xchg
or
cmp
fcmovnb
add
push
out
inc
mov
or
and
iret
les
lea
ljmp
jl
pop
mov
adc
fidivrs
in
or
out
shlb
imul
les
icebp
icebp
push
sti
int3
aam
rcl
pop
popf
push
out
add
outsl
xchg
mov
ja
adc
add
hlt
shll
push
mov
lea
out
xor
std
mov
loope
mov
add
jae
shrl
mul
test
inc
sub
scas
dec
push
inc
or
clc
add
cmp
lahf
movl
test
jl
cmp
push
in
adc
cmc
sbb
dec
gs
mov
jle
fdivl
bound
inc
add
push
jns
rorl
clc
dec
and
lret
mov
sti
scas
add
dec
lcall
jno
mov
fdivrp
dec
push
andl
fst
cmp
or
jnp
lods
mov
sub
scas
test
xchg
scas
dec
jl
ret
rep
inc
test
pop
xor
ja
lods
xor
daa
mov
mov
mov
jge
sub
mov
sub
gs
ficompl
inc
adc
push
nopl
mov
fnsave
and
mov
inc
inc
cmp
and
mov
hlt
sub
arpl
mov
or
addr16
sbb
aaa
fs
stos
fstpt
or
fidivrl
inc
push
or
gs
push
mov
loope
repnz
lcall
jp
sbb
ss
int3
hlt
in
out
js
sub
pop
jle
mov
push
ret
adc
rcl
cmp
popf
test
scas
or
cli
dec
pop
shl
jbe
push
insb
push
lahf
adc
add
mov
sub
movsb
jae
lods
adc
xor
sbb
pop
sbb
cmp
inc
mov
ds
pusha
fadd
mov
mov
push
fistl
fimull
js
addr16
lods
mov
jno
xchg
mov
push
loop
mov
lret
imul
sub
loope
or
or
pop
inc
outsb
imul
jmp
pop
push
rcl
ficoml
mov
sbb
lret
sbbl
int3
push
stos
sbb
add
mov
imul
test
pop
call
lahf
cltd
adc
dec
xchg
ja
push
add
aad
jnp
mov
or
adc
aam
and
sahf
cltd
add
lahf
and
into
or
xchg
push
es
roll
je
fisubs
jmp
roll
dec
jbe
or
cmp
adc
sbb
loop
dec
imul
mov
dec
sbb
inc
inc
cmp
sbbb
sbb
inc
push
push
gs
pop
pop
dec
call
in
xchg
nop
cmpl
ds
fdivs
sbb
stos
lret
sar
sub
sub
mov
cltd
out
das
fcmove
or
push
ljmp
push
jl
inc
and
xor
pop
enter
outsb
jg
add
xchg
add
clc
pop
hlt
aaa
mov
outsl
and
int3
fistps
loop
cltd
je
sbb
cmp
mov
pop
mov
rclb
jge
ret
xchg
xchg
push
int3
pop
cmp
aad
js
mov
sahf
add
sarb
dec
pop
fists
lock
push
loopne
sti
mov
int
jp
add
mov
pop
faddl
loopne
addr16
push
mov
adc
fcmovb
cwtl
pop
and
xor
inc
iret
mov
scas
imulb
nop
rorl
cmpl
fnsave
push
pop
sub
mov
jp
call
int3
aas
rcrl
inc
mov
sbb
fs
adc
imul
mov
std
lret
mov
lods
data16
xor
jno
adc
loop
rdtsc
ljmp
std
jmp
and
out
rcrl
mov
cltd
js
pop
mov
inc
test
stos
push
or
xor
fnstsw
sbbl
inc
int
sbb
loopne
enter
mov
decb
adc
add
sbb
sub
imul
mov
lcall
sub
rcll
pop
mov
cmp
stc
jbe
lds
sub
xlat
in
rcll
xor
test
popa
xor
arpl
xor
out
fmull
add
jne
nop
push
mov
out
fnsave
scas
enter
ljmp
shrb
xchg
pop
out
in
pop
mov
add
xchg
mov
subb
test
outsl
ja
js
mov
and
test
fs
ror
mov
outsl
xor
and
fadds
rolb
sub
inc
xor
xchg
mov
pop
and
sub
jb
fnstenv
cltd
lods
jg
lock
loop
sub
iret
adc
jbe
je
cmc
xchg
jns
test
jne
dec
mov
jmp
js
mov
cwtl
std
mov
mov
xchg
xchg
cmp
xor
mov
adc
inc
fsubrp
leave
lcall
push
add
mov
inc
pop
inc
out
movl
mov
cmp
lcall
inc
lods
shrb
roll
loope
add
inc
imul
jecxz
mov
jae
movsl
xchg
jecxz
jns
or
scas
fsubrl
inc
movsl
jmp
dec
push
sahf
cmp
int
fistl
addb
cwtl
into
sarb
jnp
push
popf
testb
pop
adc
mov
inc
sti
lret
outsb
push
cld
in
xchg
push
add
int3
cmp
sub
mov
out
in
inc
out
jmp
sti
scas
ja
test
cmp
mov
inc
push
mov
jbe
fildll
loopne
fsubrs
idivl
js
xchg
addb
jge
mov
test
in
mov
into
push
xchg
mov
xchg
cmp
mov
push
xor
jo
test
add
scas
xorl
jmp
xchg
dec
mov
fbstp
in
push
ret
inc
lahf
adc
lods
mov
lods
pop
xor
mov
fwait
hlt
roll
aaa
loop
and
jnp
push
xchg
aad
fldt
add
mov
xchg
or
sub
stos
js
sbb
jo
mov
adc
roll
cmp
scas
mov
fwait
add
cmp
cmp
adc
adc
insl
pop
out
lret
insl
add
pop
inc
and
xchg
imulb
sbb
fcompl
movsl
push
xor
and
pop
movsl
loopne
into
mov
push
pop
adc
xor
lahf
mov
inc
and
mov
cli
ja
xor
mov
les
and
das
push
loop
inc
cmp
dec
push
loopne
rcrl
jle
sbb
pop
xorl
inc
jle
xor
sub
jb
dec
sub
into
adc
jl
dec
jno
adc
lds
ljmp
add
mov
cli
fidivl
mov
insl
mov
pop
inc
out
mov
int3
add
push
xchg
pop
shlb
xor
sar
cmp
popf
fstpt
sbb
sbb
lret
out
fs
fisttps
pop
aas
cwtl
jp
and
sub
push
movl
ror
outsb
into
push
in
sbb
shr
or
xchg
outsl
push
inc
dec
xchg
adc
xor
mov
hlt
std
outsl
or
je
and
mov
ret
cmp
pop
fisubrl
fwait
jno
dec
mov
mov
dec
shr
pusha
mov
xchg
fistpl
or
lods
and
dec
cmp
lods
int3
out
push
jb
inc
inc
insl
xor
movsl
add
das
loopne
fwait
xlat
out
daa
cmpsb
inc
ljmp
push
jl
or
xor
push
insl
aam
adc
repnz
movl
push
sbb
sbb
sbb
decb
leave
call
inc
aas
sbb
inc
sub
mov
in
adc
fcmovnbe
mov
popa
inc
rcr
les
test
xor
aaa
cmpsb
jecxz
pusha
jb
jl
imul
pushf
pop
jecxz
icebp
dec
loop
inc
mov
cli
clc
negl
aaa
dec
aam
data16
inc
por
test
sti
xor
sub
push
sub
scas
adc
bound
test
in
iret
mov
je
sbbl
int3
lods
sbb
and
ret
push
leave
leave
jo
push
mov
movb
and
xor
negb
lea
movsl
sbb
sbb
addr16
mov
imul
loop
movsl
mov
cmc
xor
mov
mov
in
mov
cmp
into
inc
lods
add
nop
cld
insl
cld
mov
movsl
outsb
sbb
push
or
ret
mov
test
add
sbb
xchg
or
clc
mov
bound
xchg
xchg
aaa
pop
test
mov
mov
sarb
divb
cld
dec
cmp
bound
dec
stc
mov
int
xchg
mov
inc
push
jecxz
leave
push
popf
xor
sahf
js
pushf
dec
xchg
fcomi
inc
mov
out
xor
dec
pop
xchg
loopne
cmpsl
mov
mov
loope
xchg
xor
adc
into
cs
fmulp
mov
repz
lock
or
mov
mov
outsb
xor
ss
call
inc
loop
mov
sbb
sbb
ror
movsb
or
jl
repz
xchg
inc
pop
or
adc
pop
sub
or
push
js,pt
push
test
dec
push
xchg
adc
jecxz
jmp
push
filds
lea
insl
or
mul
sti
jno
add
into
jo
bound
sti
cli
pop
pop
mov
mov
jb
cmc
arpl
stc
and
ret
mov
mov
das
sub
test
push
push
inc
scas
mov
test
sub
loopne
call
ljmp
mov
jae
mov
fbld
mov
addr16
mov
xchg
adc
push
adc
push
jae
mov
loope
mov
lahf
push
bound
push
inc
xorl
mov
sbb
adc
nop
ja
dec
gs
xlat
xchg
movsl
cmpsl
lret
mov
je
push
lea
loopne
jg
scas
cli
sub
insb
testb
test
mov
xchg
and
xchg
insb
sbb
in
dec
or
repz
push
mov
es
out
data16
jmp
adc
outsb
iret
mov
das
pop
pop
rol
pop
sub
fisttpl
js
add
and
outsl
lods
dec
and
jge
cmp
cmpb
xor
cld
in
add
jns
push
sub
lahf
cmp
out
add
or
movaps
insb
mov
mov
jo,pn
dec
lods
pop
xchg
jecxz
mov
sub
insl
fadd
fbld
hlt
shll
arpl
adc
addl
ss
jl
mov
xor
int3
add
call
cmp
inc
nop/reserved
repz
aad
aas
sahf
inc
pop
ja
jle
and
arpl
add
dec
pop
inc
inc
mov
mov
mov
jle
js
stos
aam
push
jecxz
pop
mov
hlt
pop
push
aad
sub
add
lods
dec
mov
clc
ret
clc
adc
lock
repnz
aam
xchg
add
xor
lret
mov
lds
rorl
or
roll
jbe
hlt
inc
pushf
jmp
in
sbb
pusha
fs
stos
dec
les
mov
xchg
jbe
inc
ja
xchg
cmc
lods
jmp
fildl
jmp
jmp
push
dec
ds
out
jnp,pt
vmovapd
mov
adc
add
in
pop
mov
scas
adc
xchg
pop
ja
mov
outsb
mov
xor
push
in
ja
add
push
subl
inc
inc
loopne
lods
or
add
inc
rcrb
notl
jne
aas
cld
test
mov
imul
sub
xor
pop
test
jb
push
push
xlat
add
flds
jbe
dec
inc
mov
push
int
mov
inc
lds
adc
arpl
xchg
mov
jne
test
fldcw
cmp
aaa
ret
pop
lret
dec
mov
jb
enter
out
push
cmp
rcl
cmp
inc
fdivrs
lret
push
mov
push
out
push
aaa
aam
mov
fwait
jo
cmp
fcom
inc
push
pusha
sbb
repnz
fwait
insl
or
adc
and
shr
scas
add
or
pop
mov
cmpsl
test
cmpsl
xor
dec
ljmp
jle
mov
les
mov
pop
js
frstor
dec
mov
enter
rcr
std
out
stos
imul
shll
lret
call
jle
dec
mov
dec
psllw
pop
pop
push
or
scas
loope
xchg
cmp
outsb
jg
pop
int3
test
test
cmc
daa
outsl
int3
inc
cmpsb
movsl
int
mov
push
jbe
dec
int3
mov
test
mov
sti
xchg
sub
jne
xchg
sub
sti
outsb
pop
sub
push
mov
mov
push
leave
cmpsb
cltd
scas
es
pop
add
pop
scas
mov
cmp
pushf
out
push
mov
dec
sub
rcr
rcr
std
push
andl
mov
loop
in
fnstenv
pop
shll
jbe
inc
sbb
and
add
call
cmc
subb
dec
aad
jnp
xchg
lahf
cwtl
fbld
pop
rolb
hlt
shl
fs
hlt
sub
subb
aam
lock
in
daa
scas
and
hlt
pop
pop
jl
cmp
cmpsl
adc
aas
inc
push
xchg
or
jae
cmp
add
cltd
jno
mov
jg
mov
dec
out
pop
ret
add
jmp
out
mov
adc
outsl
mul
pop
inc
aas
je
xchg
ljmp
icebp
pop
sarb
xchg
popa
repnz
xchg
mov
push
fmuls
mov
push
cmp
push
cmp
aam
mov
xor
popf
jmp
or
adc
push
push
sub
inc
daa
xor
fcmovb
xlat
push
xor
pusha
aaa
rcr
mov
jbe
pop
out
into
lods
mov
out
test
rolb
shlb
cmp
daa
adc
mov
lret
add
mov
das
mov
jo
shll
and
xchg
mov
fldcw
cmp
cmp
outsl
mov
out
sbb
ds
fcmovnu
cwtl
sub
in
pop
fsubl
push
mov
push
push
insb
mov
rclb
mov
push
inc
mov
testb
mov
adc
mov
pop
jle
lock
push
leave
cmp
ss
test
push
dec
xchg
mov
xchg
bound
jae
push
int
lock
pop
addb
pop
jecxz
dec
call
inc
dec
or
sti
inc
imul
mov
push
inc
in
dec
add
aas
push
cli
pop
shlb
inc
inc
rol
popf
add
mov
cmpsb
enter
inc
loope
jge
call
lret
roll
sbb
mov
cmp
shrb
ret
xchg
push
sbb
or
das
push
push
cmpsb
add
cmp
mov
sbb
lea
mov
lahf
fimull
pusha
movb
rcll
add
sbb
cmp
incl
mov
mov
xchg
jmp
inc
call
shrb
push
cmp
push
mov
loop
es
insl
pop
jmp
jnp
or
int3
int3
and
cmp
ss
fyl2x
adc
xor
negl
jge
fwait
dec
mov
xor
xor
icebp
pop
push
cmpsl
shll
enter
lock
add
sub
sub
xchg
es
popf
scas
fiaddl
jecxz
aad
push
mov
fsubl
int
pushf
insb
and
adc
dec
or
lcall
lret
push
cmp
adc
shlb
popa
push
in
dec
dec
sbb
cs
mov
shlb
lahf
sbb
in
imul
das
mov
arpl
adc
adc
jae
imul
mov
cmpsb
cmp
mov
jnp
clc
and
pop
test
mov
rcll
and
pop
push
and
mov
dec
fcmovu
inc
mov
push
jg
setbe
arpl
jno,pn
sub
scas
mov
popa
loope
inc
dec
pop
mov
mov
rclb
js
in
xor
pop
push
enter
push
lret
adc
int3
inc
ret
sbb
sbb
jle
test
insl
dec
sub
dec
stos
push
jo
jle
inc
mov
dec
mov
mov
sub
lea
test
bound
js
adc
mov
push
jno
dec
leave
push
enter
int3
mov
xor
out
into
inc
jg
loop
imul
cli
js
into
lahf
lods
enter
ret
sub
jle
pop
mov
scas
sbb
adcb
sahf
or
sarb
popa
aad
movsb
xor
sub
fs
xchg
cmp
ret
mov
test
pop
push
nop
xchg
ficompl
adc
adcl
aad
imul
adc
clc
cmpsl
imul
mov
les
add
lea
icebp
and
sbb
loopne
adc
fwait
inc
in
testl
adc
aam
test
lea
jae
call
pop
sub
mov
xchg
push
or
add
xorb
adc
jge
test
notb
dec
and
add
add
sahf
fcmovbe
sbb
dec
inc
push
mov
lods
popf
fwait
xor
pushf
push
adc
push
cwtl
bound
subb
mov
or
mov
or
xchg
icebp
mov
jmp
adc
in
jae
lret
lahf
mov
lea
mov
xor
fwait
mov
push
mov
in
dec
testb
lods
pop
push
repz
push
repz
mov
mov
call
add
js
jmp
daa
ret
stc
xor
dec
lods
xchg
push
ja
pop
jle
subb
mov
and
lcall
cmp
fimull
mov
or
xlat
sub
mov
out
push
int3
adc
rcl
test
add
push
adc
shr
cmp
xor
rorb
jcxz
pop
pop
cmpsl
shll
scas
in
mov
and
mov
xor
js
jae
jecxz
aam
dec
push
cmp
mov
or
mov
out
and
insl
imul
arpl
ss
sahf
and
pop
push
pusha
xor
xchg
sti
imul
mov
subl
outsb
inc
aas
sub
pop
andl
push
adc
fwait
orb
jno
sbb
cmpsb
daa
imul
shlb
in
in
ljmp
pop
pop
adc
push
lahf
nop
inc
fcomp
in
mov
xchg
jno
stc
cmp
aam
and
mov
jmp
adc
cmp
push
dec
add
lods
push
inc
dec
lret
pop
lods
stos
incb
psllw
mov
inc
xchg
icebp
repnz
adc
push
or
mov
lahf
lret
data16
jns
ja
popf
and
dec
or
inc
dec
int
aad
xchg
pop
out
in
push
call
jo
imul
lahf
pusha
jb
push
das
movsl
insl
insb
dec
pushf
addb
or
sahf
outsb
shlb
gs
sbb
sub
xchg
cltd
popf
lret
popa
cmpsl
es
imul
mov
imul
mov
add
jle
mov
sub
aaa
sub
pop
int
push
ja
shrb
insl
jbe
push
movsl
or
jl
dec
cmc
sbb
cmp
fs
and
cmpl
iret
push
sbb
dec
cwtl
adcl
jge
jne
cmp
adc
aad
xor
lea
xchg
jge
mov
push
enter
dec
outsb
stos
mov
dec
jnp
aaa
mov
es
mov
fistl
icebp
and
pop
sbb
and
cmp
xor
sbb
inc
add
mov
shlb
xchg
nopl
gs
fldenv
add
movsl
pop
cmp
and
xchg
jle
cmp
lahf
pop
addr16
aas
or
adc
mov
mov
xor
cltd
mov
dec
scas
movsb
ljmp
xchg
scas
jae
pop
mov
pushf
cld
dec
inc
mov
in
test
pop
cltd
fld
je
loope
xor
jmp
inc
pop
xchg
or
push
pop
dec
das
inc
mov
mov
and
mov
jno
pop
push
xchg
dec
sub
outsb
inc
push
inc
xchg
repz
into
movl
outsl
mov
cmp
test
mov
bound
ret
or
adc
xor
sbb
sbb
jl
popa
sbb
sbb
stos
notl
pop
cmpsl
in
insl
popl
sbb
or
sub
add
pop
xchg
jl
mov
pop
mov
leave
mov
arpl
fidivrs
in
fiaddl
inc
xor
sub
gs
and
mov
pop
xor
mov
pusha
test
and
rol
outsl
add
outsb
dec
js
lret
mov
sub
dec
or
xchg
hlt
icebp
jno
mov
scas
sarb
mull
inc
cmpsb
loop
mov
push
lea
fisttps
outsw
outsl
pop
jnp
fildl
stos
adc
stos
out
fcomps
sbb
jmp
in
push
idivl
pop
imul
lret
xchg
pusha
imul
jbe
pop
fadds
subl
mov
rcrl
das
jae
imul
inc
icebp
push
xchg
mov
insl
stos
rol
popa
xchg
stos
cld
lcall
or
fwait
add
ret
outsl
and
out
mov
ss
cli
xorb
or
cmpsl
ja
cmp
pop
inc
push
xchg
jecxz
mov
cwtl
jo
mov
test
push
and
out
adc
lahf
jns
cmp
jb
popf
lret
ja
rclb
add
add
mov
cmp
je
fidivrl
icebp
push
cltd
xchg
cmpsb
mov
es
cmp
jmp
xorl
and
ljmp
mov
jns
mov
incb
mov
and
push
repz
xor
arpl
repnz
popf
mov
insb
pop
and
mov
sbb
or
test
mov
mov
pop
loopne
daa
mov
sbb
call
pop
daa
dec
inc
movsl
sbb
outsb
in
mov
cmp
push
add
fs
jnp
mov
scas
insl
popf
movb
cltd
cmp
xor
fisubrs
mov
in
or
cmp
mov
lods
ds
icebp
jle
inc
lahf
jno
mov
adc
push
xchg
mov
inc
dec
xchg
sub
xor
lret
xchg
cmpb
cmc
cmp
push
mov
sarl
repnz
mov
imul
add
inc
dec
leave
les
aam
jb
or
jne
adcl
aas
iret
adc
push
les
and
aaa
lret
addb
popf
es
loope
add
dec
adc
add
xor
pushf
bound
sbb
popf
ret
or
jns
movsl
lahf
fnstsw
outsb
popf
ljmp
out
rcrb
cwtl
insl
sarl
ds
test
pop
icebp
dec
sub
stc
pop
xchg
adc
adc
rolb
jl
inc
sub
mov
sbb
mov
sti
mov
in
cmp
shrl
xchg
cmp
nop
testb
mov
pop
mov
clc
repz
mov
sbb
loopne
push
loop
inc
repnz
pop
ss
icebp
lcall
pop
fwait
xor
inc
aas
outsb
dec
sub
dec
aaa
sti
sbb
test
jbe
neg
lcall
mov
inc
sub
cmc
insb
cpuid
lea
std
push
mov
mov
sti
push
sub
inc
jbe
sbb
sub
xor
ja
jecxz
mov
adc
mov
adc
dec
pop
cmp
mov
add
pop
sbb
or
sbb
add
mov
sbb
es
inc
in
outsl
mov
lahf
jmp
or
popa
jp
loope
in
stos
xchg
test
lret
test
dec
add
ds
insb
or
fstpl
outsl
lds
push
jmp
scas
clc
cwtl
sbb
out
pusha
push
je
sub
lret
xchg
jmp
mov
jo
inc
sbb
mov
mov
movsb
out
dec
fs
mov
or
incl
fld
inc
dec
pop
push
mov
mov
ljmp
xor
push
pop
cmp
add
aas
jl
loope
jmp
iret
stos
repnz
aas
mov
loope
add
sbb
jns
xor
jl
mov
or
adc
lret
cmp
jb
outsb
push
sbb
lods
insl
shrl
push
mov
push
pop
std
ds
cmp
rcrb
shl
mov
mov
ficomps
sti
adcl
mov
and
dec
imul
test
xchg
push
arpl
repz
adc
out
xchg
jnp
mov
insb
jns
imul
push
dec
jbe
daa
xlat
xor
daa
lea
inc
cmpsl
aaa
mull
add
fsts
xor
cmp
inc
shll
mov
or
ljmp
xchg
std
cltd
pop
xchg
sub
jb
mov
jp
push
pop
outsb
testl
gs
mov
jo
addr16
inc
fcmovb
jecxz
xchg
jbe
shrl
mov
rorb
mov
shll
ljmp
shrl
push
cld
mov
jp
jecxz
jge
test
xchg
and
add
xchg
mov
andl
sub
xchg
xchg
xchg
in
imul
ljmp
cmpl
mov
pop
es
dec
dec
or
lcall
cmp
lds
popl
mov
mov
inc
jecxz
jmp
cwtl
jno
movsb
inc
add
pop
cmp
addr16
push
out
add
dec
sub
loop
cmpsl
cmp
jp
pop
enter
and
cmpsl
dec
and
or
jle
inc
fnstsw
loop
cld
inc
or
ret
xchg
in
jl
cltd
xchg
addl
or
ror
shlb
rorl
push
push
int3
fs
into
dec
or
jae
push
adc
push
pop
sub
test
sti
jnp
setl
push
dec
addr16
mov
jmp
or
xorb
sbb
inc
in
cmpl
mov
insb
dec
pop
in
outsb
int3
in
pop
rolb
mov
fcoms
inc
jae
xor
mov
sbb
mov
je
lret
fidivrs
cltd
in
add
ljmp
ret
cmp
jb
test
dec
addr16
pop
decl
xchg
in
mov
inc
inc
cmp
pop
in
mov
test
and
cwtl
aaa
ja
in
mov
in
xor
pop
inc
push
cwtl
mov
mov
mov
and
mov
lahf
cmp
add
stos
loope
repnz
dec
cmpl
mov
dec
popa
xor
aaa
and
into
addl
dec
push
stos
add
sub
adc
fwait
jne
mov
sbb
inc
adc
popa
andl
adc
outsb
mulb
ss
rcrb
out
push
imul
push
in
fxch
xchg
jae
mov
jo
fs
xchg
repnz
daa
adc
mov
dec
ds
daa
fdivrp
pop
jl
adc
cwtl
push
add
lea
idivb
inc
or
in
cli
pop
notl
or
inc
adc
xchg
faddl
lea
sub
inc
dec
adc
adc
mov
addr16
cld
repz
or
or
orb
mov
pop
pop
in
in
jmp
cmp
jmp
mov
mov
scas
push
jnp
push
bound
dec
pop
jne
out
test
push
aaa
or
shll
adc
push
add
push
xor
mov
out
xchg
mov
dec
inc
mov
test
cmp
mov
push
clc
lahf
nop
sbb
mov
pop
xor
mov
bound
fldcw
mov
movsb
and
jmp
lods
pop
jns
mov
jge
cmp
jecxz
pusha
or
mov
stos
dec
pop
cmp
aas
xor
fnstcw
rclb
sub
jb
test
sub
cmp
push
mov
inc
jl
pop
sub
sub
hlt
sbb
and
int
push
pop
pop
mov
fdivl
mov
into
xchg
lcall
or
movd
jnp
loop
inc
xor
inc
insl
cmc
daa
jle
lods
bound
mov
enter
mov
fcmovne
inc
jno
push
fidivrs
bound
mov
das
dec
movsl
int
push
mov
out
ss
les
or
lcall
fisttpll
adc
sahf
incl
rorl
dec
ficomps
jp
mov
pop
xor
loope
sarb
add
sbb
mov
mov
xchg
sub
jmp
int
ds
jnp
stc
xor
push
mov
lods
pop
int
mov
pusha
les
or
sarl
inc
jle
lock
fbld
fs
xor
int
sti
jo
clc
call
rol
dec
push
in
adc
ss
mov
insb
add
adc
repz
push
sarl
jle
add
mov
lret
lods
int3
pop
jmp
sbb
and
and
mov
and
jnp
mov
mov
stos
sbb
jns
jno
pushf
adc
nop
stos
jns
xchg
rclb
pop
push
mov
sub
imul
cmp
push
scas
cltd
stos
mov
push
jne
insl
mov
mov
imul
push
xchg
data16
jnp
shll
dec
xchg
jb
inc
leave
incl
push
xchg
xchg
jp
div
daa
fisubrs
sub
xor
data16
push
rcrl
push
lock
mov
sub
or
leave
lret
push
movsl
testb
pop
jno
sti
jmp
mov
pop
add
push
sbb
push
hlt
data16
sbb
clc
xlat
repnz
push
mov
loope
and
test
scas
xchg
adc
jle
dec
decb
mov
adc
fdivl
daa
push
jg
mov
add
xor
xchg
int
jge
lcall
push
in
nop
push
cmp
pop
xchg
dec
in
jg
pop
sbbl
adc
pusha
shrl
cmp
jge
xchg
dec
mov
pop
add
adcl
and
jae
adc
ljmp
pushf
std
and
jmp
add
sub
dec
mov
jp
dec
cld
fbstp
ds
lds
ret
lret
scas
lcall
xor
cmp
sahf
lods
cmpsb
std
dec
mov
inc
movsl
std
jmp
lcall
xchg
movsl
mov
nop
jbe
fbld
das
xchg
int
mov
xor
dec
aam
popa
repnz
fmul
stos
push
xorl
addl
and
shrl
and
push
dec
and
sub
test
das
dec
clc
aad
lret
test
jne
sub
xlat
adc
data16
fadd
pop
rclb
dec
sub
xchg
mov
lcall
push
imul
adc
jo
js
xor
cwtl
insl
jne
lods
and
outsb
mov
call
loopne
pop
fisubrs
jne
fistpll
push
insb
fxch
ds
xchg
jns
cwtl
into
outsb
xchg
xor
push
js
fs
xor
xchg
push
lock
movsl
adc
pusha
or
sub
jb
imul
mov
push
arpl
sbbl
mov
dec
mov
fs
mov
ja
push
lods
jl
xchg
clc
testb
shll
pop
cmp
or
xlat
jle
dec
stos
in
insb
sbb
or
or
repnz
and
add
dec
lcall
push
repnz
jmp
sub
cli
es
xchg
fadd
aaa
out
push
mov
pop
scas
imul
popf
cmp
xchg
test
mov
lds
adcl
lahf
pop
push
das
lret
mov
test
inc
mov
adc
mov
jb
notl
jle
inc
push
fildll
in
push
mov
dec
sbb
incl
fldcw
rcrb
scas
das
jmp
fs
or
xlat
aaa
fwait
insb
mov
divb
or
add
loope
lods
dec
adc
shlb
or
roll
imul
arpl
and
sbb
repnz
sbb
xor
sarl
mov
xlat
inc
push
fidivrs
out
xchg
data16
sbb
jno
push
push
pop
loop
sbb
push
das
ja
jmp
repz
std
push
sbb
mov
insl
fs
mov
push
mov
cmp
movl
push
fimull
xchg
out
mov
sub
sbb
call
mov
sti
xor
dec
in
fisttpll
pop
cmpsl
sub
sub
fsubs
movsb
jge
mov
push
dec
push
cmpsb
les
int3
push
lods
sbb
jb
xchg
std
cmpsl
pop
lock
jo
pop
adc
test
xor
call
and
rorb
lods
xchg
inc
outsl
jae
sahf
pop
and
mov
fs
push
or
inc
cs
inc
int3
dec
xchg
dec
into
jecxz
iret
pop
adc
js
push
ficompl
jecxz
xchg
cltd
test
and
and
mov
mov
scas
shll
or
pusha
ret
or
push
mov
jle
add
mov
jmp
push
or
xlat
adc
pop
andb
fdivrs
fs
jo
shl
out
or
xchg
mov
cmp
daa
fmuls
dec
mov
xor
mov
push
je
test
stos
cli
dec
sbb
xor
mov
add
and
adc
fistpll
pop
cmp
lds
popa
mov
jge
popf
das
sbb
jp
jb
inc
inc
xchg
jno
sti
sahf
stos
je
inc
jne
inc
push
js
fstpl
adc
adc
dec
ret
xor
movsl
xchg
mov
pop
push
imul
push
push
pusha
imul
cli
jmp
jmp
aas
or
leave
xchg
stos
daa
lret
pop
inc
xchg
xlat
or
inc
fdivl
int
iret
add
mov
xor
fsts
data16
das
mov
and
pop
ret
scas
cmp
xor
js
gs
adc
jmp
ljmp
or
pop
sar
subb
or
movsl
adc
loopne
and
in
jmp
adc
ficompl
repz
jnp
xchg
lods
je
push
test
in
out
nop
cmp
std
lret
lret
cmp
ficompl
push
std
mov
inc
mov
dec
fidivrs
adc
jbe
push
hlt
ja
cltd
mov
insl
pushf
and
jmp
lock
push
xor
push
testb
xchg
adc
sarl
loopne
ss
into
gs
jae
push
inc
inc
popf
xchg
loopne
push
pop
xchg
aaa
movsl
push
aaa
sub
outsl
fmull
daa
in
inc
cld
and
xchg
das
out
into
sarb
xchg
test
cwtl
repz
fs
mov
sti
lret
ds
mov
sbb
push
jbe
sbb
and
xor
sbb
pop
mov
decb
fisubl
imull
repnz
mov
xchg
lret
cmp
inc
leave
ret
mov
jae
fs
mov
mov
xchg
pop
inc
fsubrl
ret
inc
push
aad
out
pop
outsl
addr16
cmpsb
mov
push
xchg
lea
dec
push
xor
or
fisubrl
lahf
cwtl
mov
mov
popl
leave
jmp
pop
pop
pop
cmp
mov
sarb
ljmp
mov
stos
adc
hlt
lret
cli
cli
push
mov
pusha
cmc
mov
decb
inc
adc
dec
sbb
aam
jb
adc
xor
daa
jnp
cmpsb
rolb
mov
enter
fcoml
mov
hlt
hlt
push
stos
cltd
sub
mov
pop
jmp
inc
adc
test
mov
push
test
dec
shlb
daa
fsubrs
cld
pop
sbb
stos
mov
push
shlb
insb
inc
xchg
inc
mov
out
jne
adc
mov
into
cmpxchg
je
mov
movsb
pop
fisubs
aaa
sub
jmp
xchg
ret
aad
data16
add
icebp
mov
std
adc
adc
xor
arpl
outsb
cmpsl
add
mov
push
xor
stc
and
sarb
test
jmp
mov
sbb
cmpsl
popf
sub
stos
das
aaa
push
cmp
nop
sbb
jl
and
sbb
lock
mov
stos
mov
and
or
stc
sub
sarl
sub
pop
and
mov
fcomi
mov
loopne
mov
popa
mov
sahf
shl
push
xchg
in
fs
jl
scas
cmpsl
mov
xchg
push
int
or
or
loop
pop
scas
sbb
mov
popa
movsb
mov
aad
cmp
pop
pop
stc
cld
js
rcrb
imul
jnp
scas
cmpsb
mov
push
cli
mov
jp
sti
cltd
div
lret
mov
pop
jmp
xchg
add
cmp
add
loope
ret
fwait
jne
add
aas
fwait
dec
jle
or
sbb
add
sub
pop
shlb
and
push
ljmp
adc
push
cmp
inc
and
fcompl
sub
mov
and
insl
mov
popa
inc
jne
outsb
stos
clc
xor
leave
pop
sub
sub
or
cmp
and
lea
add
jbe
and
in
nop
or
mov
sbb
dec
pop
outsl
and
loopne
push
mov
enter
jns
jb
push
jno
mov
les
dec
mov
pop
imul
cmp
adc
in
push
pop
loopne
mov
push
arpl
lahf
mov
lea
mov
mov
rcrb
mov
push
pusha
xor
and
sahf
sub
jecxz
mov
push
mov
enter
jns
xlat
enter
inc
inc
xor
insl
loope
fisttpll
sub
dec
push
pop
jl
xchg
add
mov
dec
stc
or
or
sahf
mov
aad
int
jl
push
sub
outsb
sti
sbb
movsb
jmp
mov
pop
push
aas
adc
popf
push
std
fidivl
daa
cltd
scas
daa
sub
idivl
dec
adc
shll
in
cmp
mov
cmp
lea
dec
pop
and
test
clc
jmp
out
jbe
pop
jecxz
push
sbb
jae
push
out
mov
in
dec
inc
inc
cld
jp
xchg
rorb
insl
adc
mov
adc
sub
and
jns
shrl
or
int3
push
adc
or
xor
push
adc
sbb
ret
dec
addr16
andl
dec
jge
push
jae
and
in
mov
lods
xchg
push
call
into
adc
xlat
das
push
dec
or
data16
aas
subb
out
stc
or
xchg
mov
sub
movsl
mov
int3
inc
daa
or
cs
mov
pop
inc
jae
outsb
sbb
add
das
cmpsb
pop
insb
push
lea
test
pop
xor
test
out
or
xor
sub
adc
fmull
std
mov
mov
mov
dec
ret
mov
adc
movsb
xor
push
mov
cmp
lods
pop
into
test
xchg
sbb
les
test
jle
mov
sbb
add
cwtl
out
cld
sbb
inc
xor
gs
hlt
pop
ljmp
xchg
in
dec
std
add
and
sbb
shlb
cmpsb
jns
jns
push
jbe
into
pop
addb
cmpsl
inc
sub
xor
cmpsb
mov
jo
jmp
clc
out
add
xor
out
sub
mov
addr16
cmpsb
imull
mov
push
lcall
sbb
mov
inc
xchg
or
lea
pop
xor
mov
add
or
xchg
adc
mov
call
and
and
stc
xchg
loop
popa
dec
and
mov
scas
popf
movsl
dec
add
lretw
enter
jmp
adc
add
push
adc
test
test
fstps
cmc
lea
mov
aas
xchg
dec
sbb
ret
jnp
push
add
outsb
into
pusha
adc
pop
out
and
xchg
mov
sub
imul
or
cmp
xor
aaa
fwait
inc
sti
push
ret
stos
add
add
inc
sahf
sub
fwait
push
rcl
test
xchg
loope
sbb
push
aad
call
mov
pop
dec
xchg
leave
scas
js
or
adc
inc
loopne
jae
iret
mov
sarl
xor
mov
outsl
dec
das
dec
int3
lret
cltd
mov
out
mov
mov
mov
pop
jp
fstl
and
lret
jnp
xchg
and
loopne
dec
pop
movsl
js
lods
pop
leave
add
dec
dec
sti
arpl
adc
sbb
prefetchw
jne
clc
and
push
outsb
mov
fmull
push
repnz
mov
xchg
xchg
and
popa
jbe
nop
js
cmp
cmpsb
or
loopne
rcrl
dec
mov
out
dec
push
and
push
out
adc
loopne
xchg
jae
mov
mov
aam
mov
insb
idivb
sub
pusha
adc
mov
shl
inc
mov
out
mov
incl
sarb
in
adc
pop
outsl
insb
sub
xor
or
sub
inc
dec
loope
xor
shlb
popf
pop
xchg
stc
jl
push
jbe
fbld
gs
inc
out
xorl
and
push
cmp
xchg
int3
sbb
sbb
fisttps
pusha
jb
cwtl
adc
jb
stos
cld
mov
adc
outsb
lret
rcll
rclb
loop
jb
mov
ja
mov
jnp
xchg
popf
inc
or
inc
mov
sub
call
push
xchg
stc
data16
xchg
cwtl
orb
fisttpl
and
test
repnz
out
and
xor
jmp
xor
fisttpl
bound
imul
adc
push
sbbl
addr16
pop
int
insl
jecxz
das
mov
sub
mov
lods
cmc
jno
inc
push
daa
push
inc
or
lea
dec
cmc
pop
inc
punpcklbw
ds
test
cmp
push
mov
outsl
add
push
inc
pop
cmp
dec
lods
mov
cwtl
push
xchg
xor
pop
inc
inc
sub
and
out
inc
cmp
cs
jge
and
xor
sbb
xchg
and
insl
arpl
sbb
es
fisubrs
push
jle
stos
mov
aam
int
cmp
lcall
inc
scas
cmp
shlb
sub
roll
push
jecxz
pusha
std
sbb
lea
call
retw
aam
leave
dec
shrl
lea
cmp
mov
icebp
ds
fistpll
aas
dec
fstps
adc
ret
jne
subl
int3
loope
mov
cmp
sbb
cld
adc
sub
fnsave
xchg
xor
xchg
cmp
fadds
aas
sbb
hlt
aad
js
pop
or
cmpsb
loopne
sbb
enter
lret
push
stc
rolb
and
sarl
and
jg
movsl
scas
test
fildll
int3
add
xchg
xor
enter
jnp
mov
and
pusha
inc
cli
cmpl
dec
imul
shlb
xchg
dec
lods
sbb
inc
stos
jg
mov
and
cmc
fbstp
push
sahf
aad
inc
push
and
out
scas
xor
dec
mov
mov
cmp
cmp
jb
sbb
xchg
cmc
jp
push
loope
in
xchg
mov
or
or
adc
pop
sub
int
xchg
mov
fsub
movsb
mov
push
fimuls
jle
lretw
xor
insb
or
insb
sub
inc
mov
loopne
test
js
sub
xor
mov
sub
jge
jne
xchg
rclb
sub
mov
mov
and
cmpsl
add
outsb
dec
add
jbe
push
adc
mov
jb
push
cmp
pop
push
fs
sub
mov
mov
dec
lods
cmpsb
jg
xchg
push
mov
mov
xor
pop
loopne
pop
or
stc
jl
andb
mov
out
daa
addr16
dec
jg
adc
out
pop
dec
push
sarb
mov
outsl
mov
push
xchg
pusha
loop
dec
mov
jo
push
mov
fnstenv
pop
jns
pop
pop
jg
setno
insl
rclb
pop
xchg
insb
imul
and
sub
dec
mov
push
inc
insl
sub
xchg
neg
xlat
inc
pop
aam
shl
popa
lcall
jb
mov
test
push
lock
out
and
repnz
mov
cs
pop
fwait
mov
mov
push
xchg
in
inc
fdiv
out
leave
jmp
sbb
ficoms
xor
cmp
pop
inc
xor
xchg
xchg
call
adc
add
push
xor
jg
mov
adc
push
mov
lret
inc
dec
gs
dec
and
mov
mov
push
arpl
mov
or
and
pop
testb
loope
push
push
xor
dec
mull
xor
idivl
xchg
cmp
clc
mov
cmc
adc
mov
push
or
mov
mov
jb
cwtl
dec
dec
popa
out
mov
aad
mov
xchg
aaa
hlt
scas
mov
add
xchg
leave
xchg
roll
mov
mov
dec
movsl
add
cmp
lahf
sti
xchg
xor
cmpsl
fisubl
mov
xor
sarl
in
mov
cmp
and
mov
mov
sarl
jmp
mov
mov
out
rclb
mov
lret
inc
fldl
inc
xlat
mov
hlt
inc
xchg
cs
inc
pop
leave
adc
fwait
loop
mov
fistpll
push
inc
test
aas
inc
pop
shll
stos
loop
push
push
repz
jb
sbb
mov
enter
jl
adc
and
lcall
test
cmp
mov
xchg
dec
add
scas
aaa
adc
pop
dec
sbb
and
or
inc
add
jp
shr
fadds
notb
cmpb
in
xor
adc
xchg
sbb
ret
testb
rclb
lahf
cmc
push
adc
sbb
mov
fdivr
andl
pop
movsb
push
push
aas
cli
mov
jg
bound
xchg
mov
daa
scas
pop
mov
mov
insl
cmpl
add
adc
imul
test
imul
add
and
mov
pop
jmp
cli
imul
inc
inc
xchg
pop
pushf
repz
xchg
xor
scas
jnp
mov
popl
jg
dec
adc
scas
and
pop
sub
push
sub
or
lahf
es
fwait
mov
or
adc
in
pop
dec
pop
repnz
mov
pop
push
inc
sarl
ss
in
hlt
sbb
xor
ret
jmp
stos
int
mov
or
jp
fldl2e
rcl
cmp
jp
cwtl
dec
inc
fistpl
mov
fwait
mov
mov
sbb
and
and
jg
add
jbe
aam
pop
aad
push
sub
imul
inc
jp
and
xchg
and
mov
je
test
js
xchg
lahf
test
add
and
fisubrl
dec
pop
stos
icebp
mov
push
nop
and
sub
mov
dec
push
stos
insl
lret
out
mov
add
or
xlat
jp
or
pusha
add
xchg
mov
repnz
out
fldcw
push
inc
mov
push
add
icebp
xor
mov
xchg
repnz
imul
cmpsl
repz
pop
stos
jp
ja
int3
xorb
decl
lahf
fcoms
jmp
push
dec
outsb
push
sbbb
rorb
cltd
sbb
xchg
dec
xchg
cltd
jno
xor
push
pop
stos
push
push
lret
rcll
or
cmp
mov
sub
sbb
les
test
pop
inc
loopne
and
stos
xor
mov
sub
fsts
repnz
mov
sbbb
arpl
add
fwait
cmp
into
fwait
not
xchg
mov
sbb
mov
in
test
or
mov
loopne
push
mov
test
leave
rolb
push
cld
mov
jg
jno
imul
cmc
sub
sub
addr16
in
loope
popa
dec
mov
xor
data16
js
pop
and
pop
jg
mov
and
out
dec
fisubrs
shll
jl
outsb
xor
mov
mov
cli
hlt
in
xor
insl
push
xor
inc
xor
imul
sahf
icebp
push
or
mov
xchg
sbb
add
add
pop
push
mov
mov
pop
mov
shll
xor
adc
stc
fwait
push
mov
loope
push
call
pop
popf
enter
stos
cltd
jp
movsb
or
je
sti
testb
dec
xor
cmp
xchg
popa
pushf
push
subl
cli
aam
add
scas
sbb
xchg
push
cmpsl
cmc
aam
adc
aas
mov
call
inc
xchg
jno
xchg
mov
in
sti
and
jo
nop
outsl
jle
popa
shlb
sahf
add
lods
das
sub
push
mov
dec
jo
into
and
xchg
push
je
outsb
or
into
ret
jecxz
add
lret
mov
xchg
int3
mov
xchg
mov
adc
xor
call
jle
clc
in
pop
outsl
scas
adc
mov
or
scas
les
mov
int
jb
scas
scas
mov
cmpsb
imul
cmp
cmc
sub
pop
in
insb
inc
add
sar
insl
sahf
sub
add
pusha
mov
scas
fimuls
cld
cmp
movsb
and
mov
in
mov
test
loop
aad
inc
cmpsb
dec
insl
dec
out
in
dec
arpl
and
cmp
mov
loop
mov
bsr
inc
or
jge
lret
jo
lret
mov
popf
pop
push
das
popf
ljmp
jle
sbb
and
push
xchg
xchg
pop
fdivrp
cmc
in
adc
lods
jp
mov
xchg
cli
je
mov
or
push
stos
and
sub
je
cs
into
cmp
jge
or
jg
es
inc
adc
icebp
insb
sbb
xor
mov
mov
pop
mov
xchg
out
lahf
mov
inc
pop
jg
mov
rorb
or
mov
mov
jo
dec
enter
lret
hlt
fs
popf
or
push
sbb
movsl
pop
xchg
or
push
das
pop
cmp
sub
orl
popf
mov
push
ja
mov
loopne
add
mov
mov
inc
je
dec
sub
push
and
mov
les
cmpsb
mov
ljmp
js
repz
jle
pushf
mov
inc
mov
rcrb
lcall
xorl
cmp
and
add
and
lods
fadds
mov
push
flds
in
xchg
dec
or
add
int3
adc
fsubrs
iret
mov
cltd
test
imul
nop
jl
in
pop
repz
lods
or
cmc
xchg
push
sub
mov
push
and
mov
leave
inc
cmp
addr16
mov
pop
sbb
and
stos
lea
sbb
loopne
push
jl
cmp
outsl
mov
add
or
jge
subb
lods
dec
xchg
pop
push
inc
imul
sbb
or
cmpsb
imul
cmp
fnstsw
adc
jecxz
mov
push
mov
cmp
dec
icebp
xor
popa
jbe
stos
stc
mov
and
xchg
push
adc
outsb
mov
push
adc
jbe
or
push
sub
scas
and
xchg
lock
stos
xchg
xchg
sbb
loopne
and
loope
xchg
iret
scas
fwait
mov
leave
mov
lret
js
jl
cmp
push
scas
mov
lret
cmp
pusha
pop
and
sbb
cli
fwait
sbbl
sbb
xor
sbb
mov
sbb
faddl
aam
push
rcll
fcmovnbe
push
ds
pop
arpl
dec
pop
mov
add
add
mov
mov
cmpsl
in
push
jmp
sub
jle
stc
pop
sbb
or
jg
clc
cmp
repz
xlat
int
sbb
jg
imulb
decl
jl
rorb
insl
pusha
push
mov
dec
push
mov
and
lcall
push
push
mov
inc
pop
daa
in
or
lahf
aas
pop
insw
int
xchg
inc
jne
call
lock
xchg
xchg
lods
jl
jae
leave
or
sbb
sbb
in
xchg
inc
filds
mov
xor
or
test
cmp
mov
cs
xor
outsb
dec
push
adc
leave
cmp
xlat
rclb
ror
rolb
cmp
inc
daa
sbb
cltd
pop
pop
sbb
push
imull
stos
ficomps
xchg
jp
lret
inc
es
fs
jnp
es
jecxz
jg
aad
xchg
mov
push
in
pop
lods
adc
add
stc
sahf
pop
sub
and
stos
mov
cmp
insb
cli
mov
pop
cmp
popl
xchg
add
cmc
dec
mov
popa
in
cmp
cltd
and
les
cmp
loopne
mov
adc
jb
mov
jle
cwtl
psrad
hlt
adc
pop
mov
pop
push
movsl
add
inc
push
call
lcall
mov
mov
dec
out
aam
loop
push
cmp
ret
jno
out
mov
push
sub
mov
lret
pop
aam
push
aad
mov
sbb
jle
pop
popa
dec
push
ljmp
imul
sbb
inc
ret
dec
lcall
subl
mov
add
shr
ss
lods
ds
sbb
insl
fs
mov
in
inc
inc
xor
popa
mov
adc
mov
and
sbb
das
pop
aaa
nop
rorb
sti
dec
fsubrs
mov
adc
adc
lea
fwait
cmp
into
scas
push
test
cmp
fcoml
jmp
sbb
push
ret
sti
inc
loopne
pop
xchg
adc
test
cmp
inc
pop
clc
shlb
jg
mov
xor
arpl
push
pop
or
add
xor
xor
pushf
inc
pushf
mov
in
jne
mov
or
cs
pop
clc
fmuls
cmp
and
pop
repnz
xchg
or
in
lahf
int
mov
bound
stos
sbb
data16
mov
add
pop
mov
cltd
mov
pop
sar
jge
popa
and
loope
frstor
out
push
mov
mov
cwtl
fwait
inc
cmp
mov
pop
les
adc
mov
fsubs
jnp
mov
push
popf
pop
iret
jecxz
aad
mov
cwtl
ficomps
xor
imul
xchg
dec
jns
jg
dec
in
fdivs
or
sbb
fdivs
aas
jecxz
mov
daa
mov
js
and
cmp
stos
das
xorl
sub
iret
xor
aaa
sbb
enter
fsub
ret
call
not
aad
shll
addb
add
pop
mov
cli
push
sub
in
shll
add
leave
jecxz
push
jl
or
add
jb
dec
or
pop
pop
xchg
orl
movsl
pop
add
sbb
push
pop
cwtl
push
loop
dec
int3
aas
cmp
pop
lock
xor
dec
sahf
jb
scas
pop
jp
xor
jne
aas
pop
cmp
mov
data16
cwtl
or
adc
arpl
stc
mov
jg
mov
iret
ret
and
or
outsl
stos
fs
push
mov
shl
mov
sar
or
popa
lock
out
scas
add
lret
cmp
mov
flds
inc
in
jo
rcr
add
jmp
enter
mov
xchg
and
scas
sbb
insb
sub
ljmp
test
inc
rol
pop
cmpl
sub
xchg
inc
jo
ljmp
fisubs
dec
cmpsl
pop
xor
jo
pop
dec
push
xchg
jns
jge
dec
ja
push
movsb
push
add
and
repnz
dec
push
gs
jmp
mov
mov
adc
mov
cli
jns
insl
sub
and
xorps
or
dec
test
push
sub
jmp
mov
pop
add
sbb
jno
inc
xchg
sbb
push
mov
or
push
daa
loopne
mov
cmp
pop
jle
shr
clc
push
andb
sti
inc
in
test
pop
push
pop
mov
mov
adc
mov
sbb
rolb
xchg
sub
push
aas
stos
inc
or
mov
mov
testb
pushf
pop
call
sti
jno
mov
ret
inc
mov
push
add
addr16
xchg
iret
xor
xchg
xchg
negl
test
andl
lret
and
insl
adc
adc
xchg
test
jp
xor
out
cmpsb
sub
js
in
fcom
sub
stc
ss
push
ret
in
xchg
mov
cld
jb
push
sbb
inc
mov
inc
bnd
jp
and
cli
add
xor
dec
cmp
adc
mov
pop
cmp
sbb
xor
loope
imul
mov
hlt
lds
jecxz
outsl
shl
mov
mov
cmp
cmp
cmp
fwait
cwtl
mov
or
push
imul
cmp
mov
push
imul
add
push
and
or
sbb
or
icebp
jb
popf
nop
sbb
mov
leave
mov
adc
xor
icebp
add
pop
enter
push
jp,pt
mov
int3
or
mov
or
rcll
pushf
xchg
mov
fs
add
xchg
outsb
data16
xor
insl
arpl
test
pop
enter
rcll
dec
pop
mov
out
addr16
jbe
and
push
cmp
movsl
mov
fstpt
imul
lea
cmp
cmp
int3
mov
stos
mov
stc
pop
aad
clc
and
lods
push
push
inc
xchg
add
les
sbb
lock
push
lcall
add
jge
outsl
enter
je
les
mov
mov
mov
fnsave
out
dec
fdivs
cmc
stos
adc
jns
jae
inc
lds
pop
mov
jae
int3
lahf
push
push
mov
scas
mov
and
aam
cmpl
or
push
lea
fists
mov
lret
jmp
out
fucomip
mov
push
lcall
nop
rcl
hlt
pop
inc
aaa
xlat
leave
icebp
ret
mov
js
add
sbb
fdivrl
mov
das
scas
mov
jmp
gs
dec
push
aas
inc
push
or
dec
or
mov
and
adc
dec
repnz
movsl
cmp
js
sbb
adc
imul
aam
lds
mov
add
mov
and
xchg
sar
pop
std
jecxz
dec
sub
jle
xor
sahf
loope
movsb
js
lods
shl
mov
iret
pop
add
mov
dec
push
decl
ds
test
sbb
idivl
sub
pop
or
repz
cmp
jbe
push
pop
in
or
xchg
ds
imul
popf
in
or
decb
add
dec
add
and
dec
aad
sub
fsubs
je
movsl
mov
ret
nopl
pop
or
inc
dec
pop
add
push
enter
xor
pop
xor
cmp
loope
jmp
in
and
inc
fsubrs
mov
mov
jnp
sub
mov
icebp
stos
fs
inc
sub
ret
jo
into
add
dec
data16
lcall
mov
mov
daa
dec
mov
push
or
insb
out
clc
add
mov
int
js
xchg
ss
add
push
popa
pop
bt
sub
fisubrs
shll
cmp
sbb
pavgb
fadds
xchg
push
xor
pop
iret
sub
daa
cltd
clc
cld
and
mov
fadd
sub
jb
lcall
cmp
jnp
je
fwait
icebp
inc
rol
sub
mov
xchg
pusha
mov
mov
ljmp
add
adc
lock
mov
or
mov
mov
push
les
lods
or
pop
xchg
inc
and
xor
mov
cmpsl
repz
arpl
sbb
xor
fidivrl
add
dec
in
add
shlb
mov
inc
dec
mov
push
sub
ljmp
cld
scas
mov
pop
test
dec
es
inc
inc
mov
add
or
lods
shl
jbe
leave
xor
clc
cmc
xchg
inc
mov
hlt
push
cmp
leave
push
sub
mov
cmp
and
xchg
pop
jg
ret
xor
jl
out
stos
or
push
mov
xor
popa
cmpsb
inc
cmpsb
call
jecxz
jmp
push
pop
es
in
scas
loop
stos
cld
sbb
pop
out
xchg
adc
inc
sbbl
out
mov
int
jne
das
ss
mov
jmp
adc
sbb
aam
mov
or
hlt
add
push
lods
gs
xchg
fiadds
inc
das
mov
sarl
sub
ja
mov
in
nop
mov
frstor
call
dec
fidivrs
mov
cmc
idiv
cwtl
fadds
push
addb
int
in
clc
stos
cmpsb
out
sti
sub
test
stos
loop
adc
popa
rcrb
sahf
xlat
jge
jp
push
jl
cmp
loope
jb
dec
popf
sbb
cli
cltd
in
stc
xor
dec
jae
out
xchg
popa
cltd
sbb
cli
push
jle
arpl
movhps
xlat
hlt
inc
jp
inc
push
loope
out
in
outsb
mov
sahf
out
lahf
push
jb
adc
icebp
mov
or
rclb
daa
fnstenv
icebp
icebp
or
jmp
ss
xor
aad
popa
pop
shrl
pop
ret
jl
mov
or
outsl
add
aam
sbbl
and
aam
xlat
int3
dec
mov
in
cmp
lcall
add
dec
or
insb
scas
hlt
sbb
imul
pop
pop
loopne
fcmove
mov
or
and
push
leave
adc
mov
and
imul
out
fs
rcr
xchg
ja
jg
outsl
or
cmp
js
sub
aad
jle
pop
das
repz
xor
pushf
mov
xlat
out
jp
or
adc
cmp
lock
add
js
xchg
adc
and
pop
ret
sbb
adc
mov
inc
daa
inc
add
std
fldcw
fisttpl
dec
jno
sti
xchg
xor
cmpsb
sbb
inc
insl
push
mov
add
adc
ja
popa
dec
sti
xor
js
movsl
pop
icebp
bound
mov
test
add
popf
mov
inc
icebp
lods
push
mov
mov
add
or
mov
ljmp
cmp
into
sbb
sub
cmpsb
lcall
rcr
push
push
insb
pop
pop
das
push
repnz
outsb
ffree
mov
mov
sub
js
cmpsl
enter
inc
xlat
cmc
icebp
mov
bnd
lods
lret
add
cmpsb
shrl
dec
lds
inc
test
push
inc
lods
test
add
in
iret
adc
inc
add
push
jg
xchg
insb
in
cs
sub
mov
loop
xchg
sbb
pop
sub
ss
clc
pop
sti
test
movsl
cmp
outsl
dec
das
inc
pop
js
shrb
jmp
dec
mov
sbb
int
jb
adc
sbb
data16
test
lret
lret
notb
pop
push
mov
mov
pop
popa
das
pop
fcompl
fldl
popf
test
pop
cs
pop
rcrb
flds
cld
je
mov
loopne
push
shr
jge
test
sahf
cmp
sub
or
ljmp
jns
inc
sarb
daa
ret
xlat
aad
outsb
fadd
mov
arpl
push
xchg
idivb
stos
or
mov
dec
add
jno
sarl
dec
pop
mov
jle
sbb
cmc
xchg
add
movsl
mov
dec
iret
push
test
rcrb
roll
inc
loope
test
jmp
notb
mov
pop
fidivl
push
pop
or
shll
push
jmp
dec
out
xlat
rcll
sti
push
and
xor
bound
adc
movsl
out
scas
jnp
test
adc
mov
and
xchg
push
sbb
pop
sbb
sbb
icebp
fidivrs
dec
mov
clc
daa
sbb
adc
lods
out
pop
shl
aad
sbb
add
movsl
repz
lcall
pop
jp
dec
and
stc
mov
mov
mov
in
out
pop
ja
mov
sbb
enter
js
repz
push
aaa
cld
insl
cli
lea
aad
inc
pop
enter
loope
call
push
cmp
neg
mov
out
cmc
push
ret
outsb
inc
aas
movsl
scas
test
add
dec
cld
hlt
into
ljmp
fdiv
dec
enter
xor
loop
pusha
mov
jae
arpl
vorps
add
loopne
cmp
pop
mov
jp
pop
loopne
add
loopne
roll
pop
in
repnz
push
mov
je
in
push
fs
dec
in
mov
push
mov
push
out
xlat
andb
xchg
fsubs
mov
shll
aam
out
sbb
cld
inc
sbb
mov
xlat
gs
jnp
mov
xchg
jg
fwait
mov
imul
inc
pop
fsub
cli
pop
jnp
pusha
sbb
nop
out
sub
shrb
call
imull
xchg
xor
jecxz
cmc
repz
jno
xor
mov
enter
jb
pop
xlat
cltd
cli
or
mov
enter
push
les
cwtl
scas
cmpsb
pop
adc
jb
mov
ljmp
adc
loop
fidivrl
ss
jecxz
icebp
stos
sub
dec
pop
aam
rcr
push
adc
cmp
adc
insb
movsl
adc
and
jae
fsubl
fadds
add
jle
sub
push
dec
inc
or
dec
jg
inc
dec
repnz
cmp
ffreep
insb
ds
pop
sub
in
lahf
js
cmp
sub
clc
repz
loopne
lds
push
dec
orb
into
loop
out
pop
mov
arpl
test
fstpl
clc
mov
or
sti
pusha
pop
aam
bound
aas
sbb
aam
pusha
sub
mov
addr16
pop
and
test
subb
jno
add
push
or
in
stos
add
mov
sarb
mov
push
outsl
pusha
sbb
mov
out
push
pop
and
cmp
rclb
incl
jnp
xchg
lcall
pop
adc
mov
repnz
or
xchg
fsubrs
xchg
roll
jae
dec
push
iret
adcb
popa
xor
je
aas
cmp
sub
aaa
push
ret
pop
mov
in
xchg
cwtl
or
cmc
jno
sub
arpl
popa
shr
js
add
jbe
pop
aas
nop
dec
jns
sbb
in
lcall
gs
adc
shrb
nop
sub
pop
mov
mov
sarb
push
cmc
into
sub
adc
jbe
lods
shrl
pop
out
add
cmp
cmp
test
fstpl
jp
and
mov
or
jae
mov
int
clc
cmpsl
sub
cmp
mov
cmp
cltd
inc
jno
aam
test
out
arpl
mulb
shrb
mov
cwtl
cmpsb
das
rolb
sarb
daa
xlat
adc
xor
xchg
lret
sub
out
xor
and
cld
sbb
dec
mov
jno
test
cld
xor
test
cmp
test
sub
xchg
in
mov
pop
jmp
xchg
cmp
xor
ret
mov
fcomip
jecxz
insb
sbb
in
xchg
sbb
lcall
pop
adc
inc
pop
push
cmpsb
arpl
xchg
jg
arpl
xorl
cmp
rolb
jle
jge
scas
mov
jbe
fstpt
cwtl
jecxz
adc
cli
and
or
pop
jle
ljmp
xlat
out
pop
or
jle
repz
add
push
insl
mov
cmp
out
ja
out
jno
adc
jp
fs
jmp
cmp
pop
dec
mov
push
mov
jbe
or
mov
dec
pop
add
sahf
pop
mov
xchg
out
jecxz
dec
and
ss
adc
dec
cmp
cmp
fstpt
dec
mov
jae
mov
mov
cmc
les
fldt
rcll
es
add
mov
dec
xor
out
sbb
mov
inc
bound
mov
idivb
movsl
fnstenv
xor
fidivl
lcall
int3
call
cli
xor
mov
cmc
cmp
inc
push
outsl
xchg
fnstenv
stos
dec
sub
enter
icebp
dec
cmp
int3
xor
dec
mov
push
jg
imul
mov
push
je
jne
adc
add
xlat
ja
addr16
jecxz
ficomps
push
out
adc
inc
xchg
les
or
dec
cwtl
sbbb
dec
filds
sbbl
in
push
incl
test
mov
pop
jp
mov
aas
fcoms
test
dec
or
sbb
int
mov
push
xor
push
aaa
test
or
inc
pop
addb
jb
outsl
cs
movb
jns
pop
fwait
mov
pop
push
pop
stc
movsb
filds
rolb
cmp
rcrb
orl
cmp
mov
pop
stos
popf
inc
cli
adc
mov
mov
adc
fimuls
fwait
inc
cmp
fwait
js
pop
insl
adc
dec
jp
jne
mov
lods
cmc
addr16
xchg
sbb
fsts
rol
in
rcrl
sbb
pop
mov
sub
add
add
pop
jb
aas
ljmp
adc
aas
jmp
jns
xor
lret
add
sbb
push
sahf
pop
out
jae
pop
movsl
ljmp
xchg
cli
enter
test
inc
xor
pop
div
jo
pop
and
mov
mov
insb
add
dec
and
mov
nop
mov
mov
fists
fsubrl
cmp
nop
xchg
mov
cmp
in
jmp
and
push
in
stc
xchg
mov
pop
shl
lock
pop
adc
cmp
push
mov
rcll
lret
sti
mov
sbb
push
neg
mov
sbb
xor
xchg
in
cmpsl
fstpl
mov
test
mov
in
testb
lret
test
xor
push
lcall
insl
mov
daa
dec
clc
mov
and
pushf
pop
sbb
xor
mov
pop
stc
adc
sbb
sub
aaa
mov
cld
jg
xor
test
cmp
or
push
inc
and
mov
lds
rcr
fucomi
hlt
push
jno
aas
loopne
or
aad
lret
jno
sbbl
in
je
pop
mov
jecxz
test
insl
adc
test
xchg
xor
sbb
sbb
dec
xchg
mov
test
add
cwtl
jbe
es
xor
mov
jno
loopne
repnz
ret
scas
push
jl
push
int
sbb
sar
inc
push
adc
addr16
rolb
aas
dec
lds
in
aad
mov
daa
sub
test
mov
push
je
ret
jge
adc
jo
aas
sub
pop
mov
inc
lods
clc
arpl
push
xchg
test
fadd
push
cmp
clc
cmpsb
dec
push
mov
stos
add
pop
daa
fcomp
xor
push
stc
popa
sahf
xor
add
mov
adc
lea
repz
outsb
out
mov
aam
xchg
insb
pop
push
mov
out
scas
add
inc
mov
and
mov
pop
outsl
hlt
orb
jbe
popf
sub
fildl
mov
mov
sbb
cmpsb
stos
dec
pop
jg
push
xor
push
test
pop
std
add
pop
and
addr16
aam
fwait
in
lods
nop
pop
or
aad
xchg
leave
lahf
jb
imul
mov
xchg
adc
repz
xchg
mov
data16
mov
fnsave
repnz
cmpsb
rolb
mov
movsb
mov
leave
jmp
lock
fs
pop
sti
xchg
fimull
out
mov
lret
in
xchg
vmwrite
and
loop
jp
rolb
mov
aaa
xchg
sbb
pop
in
loop
int3
mov
in
xor
fimuls
call
outsl
cmc
cmpsb
xor
cmp
fdivs
xchg
test
test
or
xchg
sub
xchg
dec
sbb
xchg
sbb
insl
rsm
lods
xchg
push
orb
pop
insl
sub
out
call
bound
pop
loop
pop
pop
mov
inc
push
ja
ja
adc
adc
push
sbb
dec
aas
xchg
pop
mov
mov
push
mov
ja
add
cmc
fstps
data16
pop
scas
pop
push
cmp
add
fimuls
xor
lea
aam
sub
or
xchg
filds
cmp
and
adc
mov
or
inc
and
hlt
cmp
aaa
fcoms
push
cld
or
jecxz
cmp
sbb
mov
aas
adc
loopne
icebp
mov
mov
in
mov
push
mov
xchg
into
lcall
push
jecxz
cli
loope
xor
frstor
aad
and
shlb
jl
mov
hlt
arpl
pop
incb
in
and
cmp
imul
and
fnstenv
repnz
sbb
mov
mov
xor
cmp
mov
arpl
es
rcr
and
mov
das
push
frstor
lret
and
fmull
jne
scas
cmpb
sub
and
add
sub
adc
scas
or
insb
lods
imul
pop
push
bound
fdivrp
out
add
mov
push
aam
mov
aad
xchg
cmpsl
std
jbe
mov
ds
inc
push
dec
sbb
mov
sub
xchg
ret
push
jg
jg
jl
mov
sahf
dec
les
imul
mov
aam
jb
pop
cmc
mov
clc
push
cmp
notl
sbb
mov
mov
jns
sarb
arpl
sbb
inc
mov
jg
cli
push
cli
fiaddl
cmp
scas
outsl
out
adc
dec
inc
and
ljmp
popf
xchg
iret
sub
movsb
xchg
xchg
fsubp
cmc
out
iret
dec
mov
jg
sbb
add
inc
pop
mov
test
sbb
adc
mov
aas
enter
imul
dec
negb
pop
push
xor
or
push
fnstsw
adcl
add
lea
out
test
pop
push
mov
sub
fsub
adc
ret
inc
sbb
pop
insl
add
arpl
out
mov
inc
leave
mov
outsb
xchg
sbb
push
jne
dec
jbe
js
mov
add
sub
dec
push
mov
ror
dec
shll
insb
lret
xor
es
fsubs
lret
leave
out
test
insb
jne
dec
movsl
push
nop
and
add
pop
shll
sub
xor
sbb
scas
imul
outsb
hlt
mov
js
dec
ss
mov
sbb
push
xor
xchg
lock
in
mov
xor
sub
sub
gs
cli
push
subl
imul
pop
xor
sub
sub
shr
xor
test
pop
xchg
and
repz
cmp
sbb
or
jae
pop
mov
xchg
xchg
inc
icebp
sbb
mov
pop
xchg
roll
pop
in
or
andb
sbb
jge
jg
sbb
shlb
and
cmp
dec
js
adc
xchg
mov
clc
mov
arpl
sbb
push
xor
add
movl
mov
adc
ja
adc
inc
mov
test
outsl
fdivrl
into
xchg
xchg
inc
mov
hlt
ss
xchg
and
sbbl
jae
lret
imul
push
faddp
push
lret
add
hlt
mov
lret
fisttpl
jne
jno
mov
fists
sti
sub
cwtl
orb
mov
push
shll
adc
hlt
mov
lret
pop
in
clc
mov
loop
jle
add
sti
or
mov
scas
push
mov
cwtl
lahf
or
cmpsb
pop
jp
mov
or
or
sbb
or
xchg
jae
jle
sti
add
out
lds
pushf
out
dec
mov
idivb
jg
js
test
dec
sbb
pop
pop
mov
les
xor
sbb
ljmp
cmp
sbb
mov
int3
push
in
push
loop
cld
lret
dec
jg
mov
mov
push
cmpl
or
push
adc
iret
adc
xchg
jle
inc
stc
ja
daa
into
aas
xor
push
ja
in
sub
or
js
pop
mov
xchg
loop
jno
inc
outsl
dec
loope
cmp
push
leave
aam
into
mov
test
lcall
roll
xor
cld
push
or
out
fiadds
shlb
popa
push
ret
or
js
inc
pop
and
mov
mov
jge
jp
test
pop
jg
in
gs
cmp
ss
push
scas
stc
insl
xchg
in
sbb
xor
aad
gs
mov
xor
adc
jle
dec
pop
xchg
icebp
jmp
popa
push
pop
popf
jecxz
data16
mov
in
or
insb
lds
test
xor
fbld
cli
xchg
scas
jecxz
or
dec
mov
mov
idivb
xchg
in
imul
pop
mov
add
dec
into
push
sub
insl
sbb
and
add
lods
cmp
fbstp
idiv
mov
sbb
mov
or
outsl
pop
sub
and
push
stc
inc
mov
mov
ret
insl
ljmp
rorl
pop
int
insb
push
push
xchg
adc
mov
cmp
sub
lods
test
ja
enter
incb
scas
dec
mov
fnsave
inc
dec
inc
cmpsb
pop
xor
cmp
cmp
ss
pop
push
fs
xchg
aam
cmp
push
sub
clc
cmpsb
adc
push
out
push
popf
xchg
adc
loope
xor
addr16
and
adcb
sarl
dec
aam
inc
sbb
pop
fstpl
pop
aas
xchg
out
mov
and
cltd
jg
out
sbb
dec
sbb
jno
add
adc
ja
sti
ja
and
in
lcall
loop,pt
jo
inc
arpl
xchg
jg
stc
movl
fstl
cs
imul
ret
in
sahf
pushf
push
xchg
and
frstor
xor
out
bound
js
inc
add
aam
mov
orb
in
jb
mov
lock
rol
xchg
out
pop
add
jmp
cld
sbb
mov
and
jno
mov
insl
movsl
mov
sbb
pop
xchg
sbb
fcompl
mov
or
rclb
add
or
mov
aad
stos
pop
addr16
testl
stos
in
repz
jns
enter
add
cmpsl
clc
mov
cli
push
shlb
stc
and
mov
mov
adc
cli
cmpsl
mov
fwait
push
shlb
and
loope
adc
jl
adc
js
in
mov
xchg
sub
jle
sarb
pop
loopne
arpl
xchg
rorb
test
cmp
dec
pop
push
mov
or
cld
and
pop
clc
xor
pop
sarb
sbb
mov
pusha
jmp
cmp
es
push
notl
fcmovb
cmp
rolb
negl
roll
lret
fsubs
push
jno
pop
xor
mov
mov
je
pop
mov
mov
cmc
aas
dec
sub
imul
pop
jp
adc
xor
fdivr
lods
and
fs
and
mov
and
fiadds
ficomps
mov
cmp
mov
aam
in
sbb
arpl
fidivrl
out
movsb
movsb
jne
sarb
sub
jb
in
insl
mov
cmc
rclb
jno
mov
ucomiss
xchg
xor
loop
ljmp
je
inc
lret
add
dec
ret
push
adc
decl
pop
cld
mov
or
dec
inc
inc
xchg
sbb
dec
ret
xorl
adc
dec
loope
add
inc
push
es
pop
movsl
xlat
cmp
cmp
push
pop
inc
pop
aam
in
sarl
lahf
mov
mov
cmp
push
sub
or
sub
fs
add
mov
aaa
data16
jno
rcl
jge
add
imul
mov
or
pop
leave
push
push
lea
scas
lcall
cmpsl
inc
jmp
ja
in
clc
xchg
mov
xchg
iret
and
or
adc
aad
leave
xchg
push
and
push
sub
adc
std
ret
mov
mov
cmp
test
and
push
mov
inc
xchg
ja
lfs
sbb
ficomps
sti
jnp
and
out
mov
lcall
mov
adc
sub
cmp
fisttpl
andb
dec
dec
rcl
std
adc
clc
jg
jne
mov
xchg
jno
lret
xlat
jge
and
xor
cmp
ds
xchg
mov
ljmp
dec
and
sub
insb
cs
loope
insb
inc
pop
jecxz
xchg
dec
test
adc
aam
adc
cmp
je
enter
dec
es
enter
xor
ret
fcoms
shlb
test
mov
xchg
mov
mov
dec
ss
ret
loopne
inc
test
loop
push
fnstsw
xor
dec
dec
outsl
fmul
add
shr
lock
push
jecxz
and
mov
out
rcr
inc
shlb
daa
scas
or
lahf
jae
cmp
mov
es
out
fldcw
adc
push
and
xor
lods
fs
mov
stc
mov
ret
mov
inc
cltd
movsb
lahf
scas
outsb
aam
jp
mov
inc
lds
mov
lds
insb
aas
rol
test
fs
iret
cmp
push
mov
push
sub
mov
mov
cltd
mov
bound
cmp
test
cld
add
sub
loopne
xor
inc
jbe
mov
outsl
jo
xchg
jp
ljmp
xchg
arpl
dec
add
xor
mov
xor
filds
xchg
shrb
adc
icebp
fsubl
ljmp
mov
xchg
aam
int3
sub
bound
push
or
lods
lds
idivl
inc
rclb
push
es
cli
mov
mov
mov
xchg
fsubr
ds
rorb
imul
insl
pusha
faddl
mov
xchg
lods
les
or
mov
push
push
dec
ret
cld
push
inc
cmp
daa
push
cmp
outsb
push
jecxz
sub
loope
mov
sbb
les
lcall
addr16
aaa
pop
and
fimull
cmp
adc
clc
mov
xchg
sti
aam
sub
aaa
in
or
pop
enter
push
mov
jae
mov
pop
jbe
xor
in
loop
push
in
ja
fwait
push
dec
ds
addl
sbb
and
xchg
jbe
inc
ljmp
xchg
jns
mov
sbbl
pop
cmp
mov
pop
aam
lea
cli
and
dec
inc
jae
push
mov
sub
sbbl
sbb
repnz
pop
popa
nop
test
mov
jle
inc
lea
outsb
fcomps
jns
or
xchg
adc
cmp
xchg
out
int3
xchg
insl
mov
xor
jns
mov
test
and
jo
int
je
icebp
rclb
cmp
lods
repz
pop
int
xchg
pop
inc
in
sub
cmp
pop
sub
orb
stos
push
mov
fimull
adc
mov
push
lods
iret
xor
jb
js
xchg
cwtl
movsb
call
js
or
fildl
sub
insb
jnp
pushf
scas
lret
xor
mov
addb
lea
pop
fidivrl
or
sub
pop
and
xor
in
pop
call
in
jae
dec
xor
ss
or
fisubrs
xor
adc
sti
lds
dec
cwtl
pop
test
shr
pop
aas
jne
pop
into
scas
cmp
shll
fwait
nop
jo
pop
cmp
popf
stos
or
insb
scas
lahf
loop,pt
test
cli
xchg
sbbb
leave
in
xchg
fwait
sub
or
roll
nop
xlat
adc
xchg
xchg
lahf
pop
pop
jb
push
jle
lret
lret
mov
inc
sbb
pop
hlt
adc
lods
xor
jl
sub
sbb
es
imul
loope
ret
stos
xchg
shlb
and
loopne
shl
ljmp
testl
scas
in
or
add
adc
mov
mov
stc
es
dec
je
aas
int
fdiv
es
push
mov
gs
mov
mov
arpl
mov
ret
outsb
in
fwait
push
jl
shlb
or
movnti
fstpt
out
inc
loope
or
imul
repnz
cmp
icebp
leave
pop
incb
xor
mov
adc
pop
jne
cltd
sub
inc
xor
test
push
cmc
movsb
je
or
add
push
jae
dec
sahf
or
cld
pop
inc
rclb
cmpsb
ret
push
mov
jp
aad
stc
mov
out
mov
negb
iret
cmp
and
lcall
mov
mov
popf
pop
cli
cmpsb
dec
xchg
into
ljmp
imul
popf
xor
mov
push
mov
and
out
orb
or
and
enter
xchg
push
imul
pop
inc
testb
imul
fs
scas
dec
adc
outsl
inc
mov
cltd
enter
loopne
inc
test
inc
and
push
lahf
daa
mov
xchg
mov
fbstp
scas
mov
lods
movsl
outsb
sub
mov
add
mov
pop
jae
and
xlat
test
lods
dec
cli
faddl
sub
adc
add
jmp
scas
xchg
cmpsl
xchg
sarb
scas
adc
movsl
push
call
mov
push
ss
xlat
sub
cmc
sbb
test
bound
fisubrl
xchg
cld
arpl
out
mov
outsb
mull
xor
inc
push
call
push
push
aaa
sub
xchg
loope
lock
pop
scas
repnz
into
fs
imul
jl
das
sbb
adc
xor
cmpsl
jbe
inc
pop
cli
or
jmp
and
cmp
xor
int3
cmp
data16
pop
icebp
bound
pop
aaa
mov
jnp
lahf
pop
adc
dec
mov
xlat
mov
sub
cs
lods
push
fistpl
xchg
mov
cmpb
lret
sub
ret
jbe
mov
out
sbb
mov
jl
stc
cmp
add
jle
insb
out
bound
push
mov
out
cmpsl
nop
push
mov
add
push
mov
mov
aas
lret
adc
fsubrs
cwtl
xorl
pop
sbb
push
jmp
adc
into
lock
sbb
cmpsl
filds
pop
mov
aam
add
addr16
pmuludq
adcl
clc
xchg
lods
add
sahf
loope
cmp
movsl
dec
scas
sahf
int3
enter
daa
into
rclb
add
push
xor
xor
mov
lret
push
cmp
cmp
cwtl
add
push
jecxz
sub
dec
jle
fstps
xchg
jle
xchg
faddp
pop
popf
outsl
or
push
mov
test
test
aaa
add
gs
lds
dec
fnsave
lock
xchg
es
movsb
std
inc
pusha
jp
iret
leave
cmc
inc
xchg
or
or
ja
fs
arpl
test
lcall
xor
mov
sbb
stc
lock
cmp
mov
sbb
or
movsl
pop
dec
mov
das
test
cld
and
inc
loopne
in
gs
sub
xchg
call
test
sub
rcrl
or
push
mov
and
cmp
inc
sub
out
sub
mov
je
test
sbb
ret
inc
pop
xchg
pop
adc
dec
popf
lret
xor
cmp
hlt
adc
cmp
xchg
push
xor
adc
pop
repz
mov
jne
sarb
sbb
jle
shlb
shl
xor
aaa
pop
fsubs
jmp
into
sbb
mov
scas
push
and
add
mov
mov
pop
or
sahf
sbb
shll
in
pop
inc
mov
das
inc
arpl
mov
mov
call
stc
movsl
xor
aam
mov
out
adc
repnz
pop
sti
or
lds
pushf
adc
mov
xchg
scas
ss
and
jecxz
mov
imul
rcll
mov
sti
dec
sub
mov
adc
out
xchg
test
outsb
inc
cmp
imul
jecxz
or
mov
push
and
cmp
cli
out
jnp
push
jb
icebp
inc
add
pop
push
and
je
mov
cmp
imul
or
jecxz
push
les
cmp
add
mov
push
mov
pop
fsubl
adc
jle
jge
add
sbb
ds
cld
push
out
xchg
aad
leave
lahf
xchg
mov
cli
lret
clc
loop
jp
xchg
call
in
push
jnp
mov
shlb
rcl
pop
test
pmulhw
cmp
adc
rcrl
xchg
div
sbb
and
les
push
cmpl
fisttpl
das
int3
xchg
je
cmp
popf
push
mov
xchg
in
out
out
mul
lock
sbb
push
loope
shr
push
scas
pushf
adc
push
cli
mov
mov
inc
lock
scas
pop
mov
js
sub
sahf
or
lods
mov
mov
movsl
ffree
fnstsw
pop
xchg
mov
sbb
sbb
rorl
dec
fwait
push
push
xor
push
cmc
mov
add
into
stc
popf
int3
call
pop
jb
call
or
cs
data16
mov
cmp
daa
jmp
or
sarl
out
in
je
repz
lcall
xor
mov
inc
ficompl
add
push
mov
fs
out
pop
fidivrs
addl
cmp
xor
jecxz
xchg
add
cwtl
rcrb
pop
shl
lret
iret
ret
fcoms
and
out
pusha
ffree
xchg
add
push
js
lcall
pop
dec
sbb
cmp
mov
push
js
xor
fnstenv
cmp
clc
and
xchg
les
call
pop
shrl
sbb
mov
pushf
mov
addl
cmc
jno
repnz
pop
cmp
rol
ljmp
sbb
js
adc
add
ds
popf
mov
xchg
outsb
add
es
int3
inc
adc
add
xchg
adc
out
in
out
xchg
stc
jp
cmp
ss
je
sub
repz
jp
or
clc
jg
out
rolb
push
ret
and
fildl
xchg
mov
sub
pop
mov
ds
lahf
xorl
and
sub
inc
pop
and
fiaddl
sub
sbb
lcall
xor
daa
jnp
mov
or
sarl
rol
dec
push
sbb
add
dec
xor
clc
or
dec
mov
test
loopne
mov
sti
push
sbbl
mov
jmp
shll
cwtl
or
mov
xchg
repz
sbb
int3
pop
sbb
bound
pop
mov
push
add
pop
js
fsubl
sahf
add
mov
push
cmp
jns
inc
iret
mov
jle
sbb
imul
pusha
decb
fs
test
mov
sbb
push
test
fwait
push
es
mov
andb
jne
testb
and
push
push
jmp
arpl
xor
in
repz
sub
mov
inc
add
xor
jmp
adc
mov
mov
data16
sti
sbb
lea
jmp
push
sti
dec
adc
push
lret
ds
inc
test
jnp
push
pop
sbb
fisttps
rcll
cmp
inc
ret
push
inc
bound
fs
cmp
outsb
pop
mov
ljmp
push
stc
adc
add
scas
fwait
gs
mov
mov
clc
std
lods
pavgw
and
inc
insb
push
push
sub
or
popf
xchg
sub
and
cld
scas
aas
sbb
fwait
loope
pop
jl
lahf
int3
je
addl
mull
cmp
mov
shlb
cmp
inc
insb
outsl
mov
stos
dec
and
and
ret
leave
movsb
or
sub
test
push
pushl
pop
jo
shl
negb
add
imul
xor
out
daa
dec
lds
sti
push
sub
adc
rcrb
xor
sbb
sub
js
sbb
jmp
test
jo
dec
push
test
add
mov
mov
stos
outsb
leave
sub
mov
push
int3
inc
addl
sbb
sbb
dec
inc
enter
add
sbb
mov
orb
xchg
dec
mov
or
cmp
clc
xchg
inc
fisubl
add
mov
fdivrs
sbb
in
nop
jecxz
jecxz
lds
pop
mov
and
imul
inc
mov
pop
cld
test
negl
into
test
sarb
cmp
gs
mov
mov
sub
push
adc
sub
call
sbb
add
imul
jo
and
clc
cmp
shrb
push
nop
out
pop
scas
pop
mov
sti
adcb
not
sahf
push
test
xchg
out
cmp
aad
add
stc
xchg
pslld
jb
xlat
add
and
mov
ret
imul
xlat
movsl
into
dec
add
mov
sbbl
mov
daa
jmp
sbb
or
adc
sub
negb
jmp
mov
mov
cmp
int3
mov
jns
add
lret
cld
pop
pop
push
xor
inc
xchg
sbb
sub
dec
and
inc
cmp
dec
loope
push
xchg
jbe
jnp
add
js
mull
cmp
xlat
es
add
sub
adc
in
stos
mov
adcb
adc
xchg
and
mov
sti
or
xor
cmp
in
sub
jo
mov
xor
sbb
push
inc
fistps
aaa
mov
mov
push
scas
push
push
scas
ret
xchg
jo
jne
adc
push
and
pop
ret
nop
xchg
mov
inc
jge
inc
movb
pop
aas
sub
je
or
mov
sub
outsl
push
out
fwait
mov
shrl
pop
fildll
mov
cwtl
sub
inc
jg
sbb
arpl
xchg
test
into
mov
notl
stos
add
jle
inc
xchg
testl
xlat
mov
cmp
mov
daa
aaa
cli
push
loop
sub
and
aas
lcall
int3
dec
xor
repnz
jb
mov
rclb
lock
test
sbb
xor
push
mov
es
and
inc
xor
sahf
es
mov
lcall
jo
push
pop
pop
mov
pop
mov
fwait
and
sub
sbb
mull
in
in
lods
mov
jp
or
in
sbb
fisubrs
mov
iret
sbb
mov
xor
push
pop
lcall
push
mov
dec
sub
inc
fwait
loop
or
xchg
inc
mov
out
ds
or
xchg
mov
sbb
in
mov
cmp
outsb
xor
sbb
stos
and
mov
repnz
movsb
mov
dec
mov
mov
ret
add
loop
test
inc
jp
sbb
pop
mov
bnd
fdivr
imul
mov
push
sub
adc
mov
dec
orl
repz
fidivs
ret
sub
mov
mov
mov
rcr
push
sbb
mov
ds
inc
jecxz
push
push
fdivl
mov
jmp
negb
icebp
shlb
jo
lcall
or
jecxz
dec
enter
push
shl
jge
into
bound
lock
adc
or
pop
ss
jbe
sbb
nop
or
xor
mov
mov
shll
cmpb
mov
push
dec
inc
add
add
fcoml
dec
pop
aam
movsb
fmuls
ffree
sub
cmpsl
push
mov
pop
sbb
mov
xor
add
mov
mov
dec
jbe
out
sbb
rcrl
jnp
sub
iret
roll
adc
loope
and
fsubr
incl
ja
dec
sbb
cs
popa
pop
mov
fdivr
je
out
ds
pushf
inc
add
inc
xchg
jle
xlat
rcrl
mov
and
push
cld
cmp
xor
mov
out
xor
sub
jl
push
dec
cltd
push
mov
or
push
push
and
mov
movsb
sbb
in
mov
or
fwait
js
push
arpl
pop
jg
shll
adc
inc
test
sub
loop
icebp
adc
or
out
dec
divl
mov
inc
jne
or
aaa
mov
outsl
lods
adc
xor
loope
bound
negl
push
nop
jno
push
and
xor
iret
fmull
movsb
shrb
mov
adc
test
dec
ds
rcr
add
out
sub
xlat
ror
add
pusha
xor
jecxz
test
fstpt
jbe
or
js
iret
icebp
je
cmp
sbb
aaa
ret
and
push
mov
loopne
mov
adc
fisubl
inc
clc
push
xor
cmp
mov
xor
sbb
jp
call
sahf
mov
xchg
add
dec
loopw
xchg
sbb
fwait
adc
nop
dec
mov
fucomi
leave
lcall
or
rcr
test
gs
fmull
sub
in
mov
call
mov
pop
test
aaa
inc
mov
rorl
cld
mov
sbb
pop
fcmovne
cli
cli
xor
mov
inc
xor
mov
clc
jle
gs
cmpsb
sub
mov
sahf
test
sbb
xchg
inc
popa
dec
xchg
ficompl
sub
mov
fiadds
pop
push
or
loope
js
in
mov
adc
mov
orb
cltd
int3
mov
dec
push
dec
aad
lret
dec
push
aam
xchg
add
cmp
inc
loope
mov
xlat
mov
cmpsl
out
sub
xlat
cmp
cld
mov
dec
data16
nop
pcmpgtw
popf
add
mov
out
aam
mov
addr16
jmp
cmpsl
rcr
mov
xlat
and
nop
popa
in
and
insl
sti
fdiv
cmovg
loop
in
pop
loopne
jmp
lods
or
aam
incl
dec
enter
and
mov
in
decb
jne
lods
sbb
repnz
lods
fwait
sub
sbb
fs
mov
push
cmp
mov
sbb
cmp
aaa
xchg
cmp
sub
faddl
push
adc
stos
sub
mulb
lcall
push
in
std
mov
mov
xlat
outsb
ret
jbe
pushf
or
divl
jge
mov
jo
mov
sub
push
lret
loopne
push
inc
jb
fwait
and
mov
ljmp
cwtl
and
loope
das
xor
add
add
repnz
xor
mov
sub
cli
ret
push
ljmp
jnp
sub
ret
push
lds
out
pop
mov
mov
das
mov
push
mov
imul
loope
xchg
inc
dec
inc
rcrl
mov
lea
lds
inc
ja
test
push
dec
mov
jns
add
cmp
jae
and
repnz
fwait
inc
mov
and
aaa
mov
mov
pusha
repz
cmp
sub
lods
fists
aad
lcall
cli
inc
jge
jae
outsb
add
in
cmp
or
push
rclb
or
sarl
cmpsb
daa
cli
mov
and
stos
mov
cmpsl
rcrl
or
cmp
or
sbb
adc
push
sarl
ret
xor
in
movsb
movsb
aad
xchg
mov
loop
and
lcall
sub
xchg
test
pop
std
aaa
fwait
aas
into
stos
lcall
sub
xlat
jecxz
pop
jmp
sub
lock
out
movb
inc
ret
out
enter
idivb
dec
std
in
aaa
lods
inc
mov
inc
mov
or
jle
pop
cmp
pop
adc
mov
fidivs
shr
ljmp
push
cmp
ljmp
sarb
xchg
cwtl
leave
mov
into
jmp
sti
dec
or
arpl
xchg
ret
add
daa
mov
xchg
cwtl
imul
add
shrl
rcpps
pop
push
pcmpgtw
jp
imul
cmpsb
pushl
cmpsl
push
rcll
imul
pop
xchg
push
cmp
lea
cwtl
sub
in
adc
andb
jmp
clc
in
mov
cmp
adc
ds
ret
data16
pusha
popa
call
nop
daa
cmp
idivb
movsl
ret
aad
jo
xchg
xor
adc
or
ljmp
or
pop
xor
inc
or
mov
push
adc
inc
sti
pop
xor
arpl
fwait
es
jbe
xor
inc
push
repnz
mov
mov
xchg
push
pushf
ja
jmp
mov
xchg
lods
xchg
test
sbb
ja
xor
mov
mov
insb
pushf
jb
gs
pop
ljmp
dec
pop
sti
inc
shll
mov
mov
sbb
inc
dec
adc
in
cli
sub
pushf
jnp
inc
movsl
jo
iret
jbe
adc
addb
mov
pop
and
push
lret
ret
icebp
sub
pop
jae
sub
push
scas
jmp
dec
gs
xchg
push
test
dec
and
imul
loop
stc
mov
loop
add
mov
stos
popf
add
into
aad
or
pop
in
lock
aad
dec
out
mov
push
mov
mov
mov
push
jae
mov
nop
in
loop
orl
mov
fistl
les
movsl
cmp
pop
xor
mov
in
inc
push
fisttpll
imul
call
adc
push
sbb
int3
mov
aas
xor
bound
pop
fimull
sbb
sbbl
pop
push
out
int3
popf
test
add
add
pop
sub
in
mov
divl
in
add
lods
push
pop
dec
insl
insl
xor
lahf
popf
mov
mov
pop
std
data16
fisubs
xlat
sub
cmpsl
shrb
mov
cs
test
scas
movsb
shl
xchg
jae
adc
orl
repnz
and
popf
mov
add
pop
sbb
mov
add
es
dec
sti
mov
leave
sbb
xor
or
shll
stos
cltd
sub
sub
in
fwait
dec
out
and
cmc
incb
pushf
and
adc
bound
sub
imul
dec
dec
jg
adc
mov
add
jmp
hlt
cs
xor
mov
mov
and
lcall
push
mov
dec
idivl
fcoml
call
jae
xchg
mov
cwtl
mov
iret
in
push
mov
sub
sti
fcoms
or
mov
into
dec
repnz
push
dec
insl
jb
xchg
cmp
insb
sbb
push
hlt
orb
mov
inc
xchg
fidivl
mov
lahf
adc
xor
push
jns
popa
adc
mov
insl
cmp
adc
stos
add
inc
ljmp
xor
aas
pop
movsl
rol
add
fcoml
push
mov
add
mov
call
sbb
add
cmp
test
mull
xchg
nop
pop
mov
jnp
mov
sub
jg
dec
push
in
pop
sub
out
lahf
bound
ljmp
mov
into
inc
xchg
aam
mov
xor
out
cmc
add
mov
and
fistps
jae
dec
mov
cmp
cmp
into
jbe
movsb
ljmp
add
jp
lret
das
adc
in
inc
sbb
call
mov
inc
inc
inc
repnz
je
push
mov
les
repnz
sti
ret
adc
fmul
add
fistl
xchg
xor
mov
jno
lock
xchg
and
sbb
lahf
adc
mov
cltd
lods
out
subb
mov
pop
jo
inc
add
mov
jae
cmp
sahf
pop
mov
xlat
cmp
nop
call
adc
hlt
sahf
add
outsl
add
aaa
or
pushf
in
movsl
add
cmp
insb
add
push
adc
jnp
mov
add
int3
div
leave
add
inc
mov
cmp
lock
pop
lahf
cmp
or
push
jae
xor
lock
dec
jb
sahf
push
jmp
lcall
in
jne
pop
fs
orb
xchg
pushf
mov
iret
and
rcll
jnp
int3
dec
lahf
and
xchg
dec
ret
pop
xlat
clc
push
in
lcall
sbb
roll
mov
push
cltd
mov
push
test
sub
ret
jns,pt
out
movsb
xor
jmp
push
or
jno
stc
call
lahf
imul
or
pop
cmp
push
lea
and
outsb
cld
pop
pop
mov
daa
out
inc
sub
pop
add
repnz
jecxz
aad
ret
aad
les
lods
mov
cli
xor
fistpl
pop
mov
in
inc
add
or
mov
adc
repz
mov
ljmp
in
out
lea
rolb
mov
adc
and
insl
pop
pop
mov
adc
push
jmp
test
inc
test
insb
aas
pushfw
push
jo
adc
mov
jne
adc
and
sub
sbb
push
inc
insb
jmp
adc
xchg
mov
aas
out
and
or
and
add
in
pop
mov
mov
jbe
fiaddl
mov
les
mov
cmp
inc
popl
outsb
test
fsubrl
mov
cwtl
jbe
and
repnz
popf
fadds
dec
sahf
insb
ret
inc
arpl
mov
mov
lds
scas
inc
daa
int
inc
mov
or
cmp
sub
mul
dec
lea
xor
icebp
addl
or
cmp
dec
lret
aaa
or
adc
or
xchg
cs
jno
shr
adc
push
xor
in
aad
xchg
call
int3
clc
sub
fnstsw
or
mov
in
mov
or
push
push
jb
les
add
xor
pop
jmp
adc
mov
jmp
enter
pop
adc
sbb
dec
fwait
ret
out
and
cmp
add
jnp
test
and
out
jmp
cld
fwait
mov
sub
cmp
mov
mov
ret
adc
outsb
push
les
sbb
in
and
out
bound
popa
mov
inc
jne
enter
jns
and
aad
sti
into
mov
in
pop
mov
imul
sbb
jae
add
cltd
jmp
mov
jns
test
jnp
sbb
adc
popa
lods
and
scas
fisttpll
add
pop
sub
scas
mov
inc
pop
imul
shr
mov
arpl
xchg
sar
les
enter
xchg
pop
popf
in
ds
sub
ljmp
jecxz
in
iret
test
icebp
sbb
nop
xchg
outsl
shll
xchg
arpl
movsl
sbb
cmp
inc
xchg
pop
jns
fldt
movsb
icebp
test
mov
sub
ljmp
popa
inc
fisubrl
insl
jp
into
sarl
fs
jge
adc
movl
bound
iret
add
popf
xchg
xchg
pop
sub
inc
cmpsb
xor
xor
loope
mov
push
push
data16
pop
sub
dec
fistpll
popf
stc
lods
sti
cmp
ret
xor
aas
dec
ja
sbb
add
test
lret
push
pop
and
mov
or
push
jb
lret
cmpsl
jmp
sub
aad
xchg
bound
std
mov
cmc
adcl
mov
ror
mov
and
in
loopne
test
dec
pop
gs
fildll
lret
mov
fxch
pop
jb
test
push
add
pop
and
pop
lds
std
mov
dec
dec
xlat
decl
vmovss
arpl
mov
inc
sti
out
ret
cmpsl
outsl
push
movsb
jl
cmc
sbb
rol
outsl
xorb
dec
jge
fistpl
xor
stos
mov
add
insb
scas
dec
inc
mov
mov
in
sbb
dec
jmp
loope
out
inc
ret
sbb
pop
add
inc
pop
fdivrp
mov
xor
mov
call
mov
inc
vmload
xchg
dec
mov
adc
mov
or
movsl
ret
and
es
mov
inc
add
mov
push
leave
mov
rol
movsl
sub
pop
dec
push
mov
outsb
xchg
iret
js
pusha
jo
test
stos
dec
sub
nop
in
mov
js
enter
sbb
add
clc
out
and
add
adc
mov
xor
cltd
xor
jne
jge
adc
xor
inc
dec
lods
xlat
stos
cmp
xchg
xor
push
jo
xchg
into
pop
add
adc
or
lds
push
mov
scas
sbb
sbb
inc
inc
stos
cmp
pop
push
add
ljmp
popf
cmp
mov
fcompl
clc
dec
inc
outsb
cld
pop
cmpsb
add
gs
xor
push
jecxz
sbb
in
mov
dec
clc
mov
insb
xchg
and
lock
cld
out
das
mov
mov
cld
insl
cmp
fsubrp
and
idivl
es
mov
pusha
xor
stos
add
addl
xchg
stc
js
jmp
cmp
or
cli
xchg
roll
lods
call
inc
fs
cld
mov
cmpsb
xchg
and
and
jno
movsl
into
or
cmp
test
repz
jbe
in
sahf
adc
adc
loopne
insl
lods
lahf
cmp
je
out
sarb
xor
in
xchg
repz
imul
jmp
or
push
mov
fdivrs
bound
mov
cli
fnstcw
fstl
orb
dec
ja
scas
ret
movsl
lock
add
cmp
lret
lods
cltd
sub
cli
enter
ja
fbstp
pushf
cmp
fstps
add
pop
fs
dec
ja
nop
in
mov
shll
xor
jb
lea
and
mov
and
jp
sub
mov
mov
adc
insb
cli
mov
cwtl
xlat
rol
and
mov
aam
pop
aas
loop
xlat
xor
pop
xchg
aad
in
jmp
adc
loopne
jno
aam
rcl
loop
inc
add
js
mov
sbb
aas
and
leave
push
lahf
inc
call
mov
enter
push
jmp
lret
fstps
dec
pop
push
dec
lret
sbb
lock
scas
stos
cli
mov
das
daa
xchg
ror
xchg
addr16
xor
popf
adc
xchg
inc
imul
sub
pushf
add
mov
imul
adc
out
cmp
movsl
pop
pop
jmp
dec
scas
cmp
mov
mov
inc
jecxz
jl
and
sbb
movsl
and
jl
fs
fnsave
inc
and
loop
pop
rep
test
nop
dec
aad
sahf
in
ja
cmpsb
jle
jecxz
jns
outsl
mov
jmp
jg
test
or
inc
pop
cltd
aam
sbb
in
dec
xchg
cmpl
jne
scas
or
cmc
mov
icebp
ret
dec
mov
adc
hlt
aam
jns
lods
add
mov
nop
cmc
cmp
cli
pop
das
and
jle
or
push
mov
daa
pop
xchg
insl
cli
in
inc
adc
xchg
cld
mov
add
xchg
push
lds
cs
push
add
imul
in
mov
inc
mov
jns
movsb
jnp
push
xchg
mov
loopne
xor
daa
mov
clc
xchg
imul
shrb
add
cltd
and
pop
xchg
pop
shll
mov
loope
mov
adc
in
inc
in
mov
mov
fldl
lds
inc
or
add
mov
sbb
push
pop
nop
std
idivb
xchg
imull
or
xchg
lds
loope
inc
sbb
je
push
test
xorl
push
mov
xchg
ljmp
sub
jo
cwtl
ficompl
xorl
pushf
fiadds
mov
xor
fwait
incl
mov
lock
aad
and
fwait
mov
pop
mov
pushf
pop
movsl
jnp
push
mov
popa
push
mov
jnp
lods
mov
insb
fstpt
dec
or
mov
push
and
shl
jge
sbb
jmp
pushf
dec
roll
sbb
test
cwtl
sub
jp
fwait
outsb
je
aas
add
rcl
std
jle
push
test
or
xchg
adcl
cmpsb
sub
xchg
mov
lea
fisttps
mov
mov
fiadds
popf
mov
push
push
jle
cmp
jge
push
xor
test
cmpsl
int
addr16
push
outsb
repnz
pop
dec
sub
cmpsl
pop
pop
cmpsl
mov
in
pop
xchg
cmpsb
gs
dec
pop
loopne
cs
pop
jl
shrl
adc
test
flds
xchg
xor
jecxz
push
xor
insl
mov
arpl
cltd
fldenv
loopne
and
andl
mov
in
adc
iret
imul
scas
mov
mov
popa
scas
data16
fsubrl
imul
hlt
adcb
mov
add
sub
loopne,pt
fxtract
jb
cmp
mov
push
mov
gs
in
mov
cmpsl
bswap
push
mov
jne
stos
mov
mov
xor
aam
daa
data16
testb
adc
adc
add
mov
mov
mov
adc
jecxz
push
bound
in
sbb
jno
dec
dec
in
call
pop
push
repnz
jle
sar
cltd
add
xchg
scas
decl
popa
lea
punpckhwd
gs
aam
xorl
ror
push
fldcw
in
and
rcrl
orb
or
sub
dec
pop
into
fcom
mov
shl
add
in
adc
jle
subl
cmp
pop
mov
xchg
and
adc
fildll
outsl
in
movb
xchg
sbbb
xchg
sbb
xchg
inc
inc
jno
add
mov
fwait
stos
adcb
cmp
je
mov
les
adc
cmpsl
jmp
jns
add
test
cmp
test
jmp
dec
sub
cs
in
or
bound
pop
jo
ss
cwtl
movsb
scas
inc
test
mov
pop
in
int3
push
inc
in
daa
mov
xlat
mov
push
mov
les
sbb
inc
push
and
cs
cmp
or
inc
xor
fcoml
es
lret
push
scas
lcall
push
int
ja
ljmp
inc
pmullw
arpl
into
jb
mov
rcrl
aad
pusha
pop
shlb
cmp
pop
jnp
mov
cmc
shl
jp
push
shrb
aad
push
cld
fmuls
xor
mov
mov
mov
clc
xchg
dec
mov
dec
push
xchg
bound
or
lods
dec
inc
pushf
imul
rorl
ret
movsb
sahf
call
iret
sti
inc
dec
sbb
push
or
adc
shll
ds
aam
stc
fsts
mov
test
cmc
mov
out
adc
add
mov
jl
loopne
cltd
ja
in
sbb
pop
fwait
lahf
mov
addr16
sbb
icebp
push
jg
loop
aad
mov
xchg
dec
xor
pop
insb
mov
dec
js
fnstcw
mov
xorb
fwait
mov
mov
andb
fldenv
negl
pop
or
and
ss
sbb
lcall
in
int
mov
cmp
inc
mov
add
loop
gs
nop
cmp
out
pop
mov
mov
roll
add
ljmp
ja
fisubl
clc
jl
out
fcomi
xchg
pop
pop
fisttpl
sbb
push
jb
ja
leave
cmp
js
push
jmp
jne,pn
std
cmpsb
sub
notb
dec
cli
xchg
dec
adc
stos
out
adc
ds
std
jmp
inc
dec
rolb
icebp
sbb
jno
mov
jge
outsb
rdpmc
in
mov
jbe
loopne
stos
fadd
xor
inc
fstpl
ljmp
aad
pushf
and
mov
scas
adc
mov
lds
imull
xchg
push
inc
pop
pop
mov
in
dec
popa
inc
inc
movsb
lret
add
jecxz
xchg
pop
pusha
mov
jl
xor
cmp
ds
daa
sub
and
lock
shrb
mov
jmp
stc
push
out
push
mov
jmp
imul
test
mov
inc
dec
fistl
ja
lods
cmp
daa
jmp
mov
pop
sbb
pusha
cmp
insl
lcall
into
enter
xor
or
fnsave
xorb
fwait
cmp
push
mov
rcr
fwait
mov
stos
cli
test
mov
inc
fbld
fcoml
adc
xor
out
cmp
les
cmp
lods
fisttpll
pusha
pop
mov
dec
repnz
popf
jle
shrb
test
cld
pop
fcomip
pop
push
int3
repnz
pop
cmp
js
xor
pop
into
ja
xor
fwait
inc
mov
jecxz
or
lea
test
addb
cltd
cld
push
push
fistps
push
rclb
sbb
pop
mov
ja
push
mov
insl
aas
rolb
lods
jnp
inc
mov
cmpsl
js
pop
arpl
sarl
and
es
xchg
and
or
mov
lea
in
inc
mov
sub
cli
adc
and
ds
sub
cmp
push
sub
ficoml
imul
pop
das
cmp
dec
dec
int3
dec
jb
pop
ja
inc
sbb
mov
and
pop
sbb
in
mov
in
call
dec
xor
or
lcall
bound
lods
fldt
mov
pop
jno
sbb
push
out
lock
xchg
bnd
jmp
xchg
cmpsl
out
sti
mov
iret
and
pop
mov
rclb
clc
adc
ljmp
sub
je
mov
imul
or
mov
idiv
and
lock
push
push
orb
int
outsb
adc
xlat
xor
mov
xchg
dec
out
adc
ss
or
sahf
push
out
mov
inc
inc
cli
push
xchg
jns
jmp
and
cld
mov
out
xchg
repz
push
test
shrb
mov
cmp
mov
insl
pop
add
adc
test
out
xchg
enter
pop
mov
out
jmp
mov
ja
sub
fistpll
test
shrl
rol
aam
gs
xchg
xchg
lds
fsubrs
jge
pop
pop
imul
in
mov
stos
and
aad
mov
mov
mov
ret
mov
push
jg
push
icebp
jne
push
fwait
mov
xchg
popa
cltd
aad
fcmovb
icebp
int3
and
fsts
mov
stc
push
fisubrl
popa
xchg
cmp
cmp
push
cmp
cli
and
in
sbbl
cld
xor
inc
inc
lods
out
test
loop
cmp
or
sti
cmp
pop
add
ret
mov
scas
loop
jp
mov
mov
adc
and
outsl
dec
push
lods
sarb
jae
pusha
jp
in
mov
push
adc
mov
xchg
daa
push
icebp
xor
cmc
js
or
mov
dec
test
popf
aad
aaa
lret
not
sub
and
nop
jae
fwait
sub
mov
mov
xchg
mov
and
ficomps
xchg
mov
loope
fadds
jo
mov
adc
adc
ja
fadds
sub
push
and
sbb
xchg
rcrl
add
jne
xchg
pop
pop
cwtl
mov
out
adc
popa
mov
loop
hlt
and
ja
mov
and
fisubl
pusha
push
mov
movsb
je
in
ss
push
icebp
les
cmp
mov
imul
xchg
xchg
or
in
jns
sti
outsl
int3
push
pop
lret
mov
enter
or
mov
sbb
push
test
sbb
xor
dec
push
ljmp
xchg
add
sub
xchg
notb
dec
and
dec
and
sbb
pop
inc
sbb
mov
push
push
inc
lret
jmp
ret
std
sti
jbe
mov
sub
and
push
push
xor
stc
push
pushf
sbb
inc
cmp
insb
mov
mov
dec
dec
mov
lret
adc
fadd
imull
cltd
lret
cs
push
mov
mov
mov
nop
adc
pop
mov
mov
fcomps
dec
clc
cmp
mov
test
mov
or
ret
or
pop
ja
in
leave
pop
outsb
xor
jecxz
add
mov
arpl
xchg
aaa
push
xlat
xchg
rclb
mov
imul
pushf
hlt
and
out
lods
std
adc
loope
or
loope
inc
cwtl
cli
adc
addr16
movsl
sti
inc
adc
pushf
jge
faddl
sub
daa
xlat
pop
andl
add
je
dec
enter
mov
add
pop
xchg
or
cltd
shld
in
in
mov
jno
xor
ljmp
in
and
adc
sub
out
xchg
pop
shrl
and
xchg
sbb
loope
test
stos
arpl
pop
mov
and
sub
jb
cmp
sbb
sub
cmc
mov
scas
out
push
or
andb
xor
fmulp
sbb
mov
jbe
sbb
lds
add
outsb
sub
sub
subl
mov
xor
test
lret
jecxz
jnp
adc
jno
sbb
push
adc
pop
or
repnz
fistl
test
xchg
fbld
popa
cwtl
add
rcrl
xor
stc
lret
sub
xchg
mov
inc
daa
scas
sbb
jecxz
inc
or
repnz
in
rorb
push
pusha
push
int3
jecxz
fidivrl
and
in
cmc
cmp
insb
xchg
imul
popa
addr16
add
cmp
push
dec
jl
aaa
or
out
inc
xlat
lock
xor
sub
cld
call
cmp
push
arpl
mov
clc
loope
pusha
stc
fistl
lock
rcrl
mov
jmp
cmp
inc
cs
ret
push
jns
jle
int
insl
inc
lock
pop
ljmp
dec
enter
jns
jb
mov
lock
push
jl
das
inc
add
pop
das
inc
push
jp
les
xor
mov
xor
dec
jnp
ss
jmp
call
push
push
push
and
jae
scas
and
inc
adc
cmp
daa
outsl
in
test
add
xchg
push
and
sti
stos
idivb
es
mov
xor
and
mov
test
add
dec
ss
int3
out
mov
inc
xor
dec
mov
sbb
dec
sbb
inc
mov
sar
aas
out
and
lahf
out
sub
pop
pop
push
and
icebp
js
ja
or
mov
int3
outsb
shr
adc
cld
mov
jo
jo
cmpl
jg
daa
je
pop
adc
cld
data16
cltd
mov
dec
push
fwait
gs
test
inc
sub
cmpsb
mov
icebp
push
rcl
dec
insb
gs
addr16
adc
dec
insb
decb
xor
xchg
rcrb
and
out
cmp
push
xchg
xchg
aam
mov
jnp
in
xchg
sarl
cli
mov
mov
test
into
bnd
jmp
cmp
jne,pn
addr16
addr16
cmc
shl
add
lock
mov
push
xor
adc
pop
mov
and
inc
xor
xchg
sub
shrb
js
cmc
stos
lea
aas
shlb
scas
mov
loop
sub
in
dec
js
inc
ds
aad
pop
fisubrl
mov
or
mov
in
xor
xor
dec
jbe
pop
jns
adc
mov
xlat
repz
sub
sbb
and
fidivrl
std
rcrb
shll
addr16
popf
inc
push
repz
icebp
jbe
lahf
jle
jns
jecxz
cs
aas
pop
daa
mov
cmpsl
mov
cmp
in
inc
fwait
enter
inc
inc
jae
stos
mov
pop
inc
adc
aad
mov
iret
push
arpl
mov
jge
lcall
add
cmpl
mov
jecxz
subb
xor
das
int3
mov
movsb
add
mov
jecxz
xor
pop
lcall
inc
fwait
scas
cmp
leave
lds
insl
les
jge
in
xor
inc
leave
dec
cmp
scas
push
inc
inc
mov
xchg
addr16
lds
pop
cltd
mov
ret
neg
xchg
mov
pop
out
ljmp
push
out
push
ficompl
xor
mov
movsb
jp,pn
adc
fs
lock
pop
jnp
in
movsb
aaa
or
cmp
cli
insb
jle
or
mov
pushf
push
adc
mov
pop
leave
scas
js
pop
scas
xor
cwtl
int3
lds
test
xorl
outsb
mov
popa
fimull
out
dec
cmpb
lret
das
in
inc
adc
jne
sbb
cmpsb
jge
xor
jmp
mov
mov
test
sbb
dec
imul
xor
mov
repz
push
shll
pop
nop
vpmovwb
nop
hlt
adc
mov
xchg
dec
lock
xchg
out
xchg
push
cld
xor
push
imulb
cmc
scas
add
mov
out
stos
ret
xchg
xor
in
fwait
mov
call
pop
test
inc
inc
cmc
mov
icebp
jle
daa
dec
xchg
push
es
mov
sbb
jl
dec
dec
aam
shr
icebp
in
fisttps
mov
ja
sub
jmp
cmpsl
dec
lds
sub
pop
ljmp
cmpsb
push
jno
pop
in
mov
idivl
adc
push
in
pop
pop
add
movsl
orl
ss
fwait
mov
and
inc
icebp
ficompl
jne
iret
pop
mov
jo
lea
test
cli
lds
add
and
imul
dec
daa
add
in
cmp
mov
repnz
and
jp
and
pop
adc
popa
pop
mov
test
js
jl
push
or
mov
fwait
adc
cmpsl
mov
rorl
xchg
fstl
das
cltd
addl
or
fxch
adc
sub
mov
mov
and
add
jo
mov
and
pop
bound
hlt
push
jg
lods
and
dec
leave
in
lahf
mov
iret
and
test
xor
ret
mov
ds
cs
aaa
and
outsb
lcall
push
ds
mov
scas
jbe
orl
pop
lods
dec
outsb
jbe
pminsw
insb
repnz
enter
dec
scas
xchg
cmp
cli
mov
sbb
add
add
or
and
push
sbb
shrl
cwtl
jg
jb
push
push
jge
and
test
fidivrl
xor
inc
inc
ss
fisubrs
mov
sarl
lret
andl
in
out
jecxz
imul
shrb
add
sahf
movb
iret
call
xchg
js
test
inc
out
sbb
inc
popf
pop
das
icebp
push
fsubrs
repz
cli
fcmovnb
push
inc
addr16
addr16
dec
imul
jae
test
cmp
iret
inc
flds
icebp
cld
sub
sahf
cmp
aas
loop
jne
jo
xchg
adc
fsts
test
lahf
push
lods
js
inc
jecxz
mov
xchg
or
int3
popf
pushf
scas
lret
test
sbb
mov
jmp
incb
jb
xchg
xchg
shl
push
fisttps
into
insl
in
out
fyl2xp1
data16
lahf
push
xchg
arpl
inc
adc
adc
xor
mov
mov
mov
imul
lea
mov
rcl
cmpsl
jbe
jmp
pop
es
ret
stc
xor
sub
sahf
out
or
aaa
fistpl
in
mov
lahf
hlt
sahf
push
push
push
sbb
pop
and
cld
dec
pop
mov
jb
cmp
sbb
push
lock
and
insb
jbe
and
iret
mov
movsl
insb
or
fsubr
inc
add
insl
lret
aas
clc
shlb
mov
cwtl
notb
rcll
mov
jno
mov
out
xor
das
mov
mov
cmp
push
inc
adc
imul
sbb
sti
shrb
jl
or
sbb
dec
popa
js
js
loope
ss
jbe
insb
sub
fwait
scas
call
dec
jne
mov
int3
cwtl
mov
fwait
mov
sub
pop
js
ljmp
push
addr16
mov
scas
cwtl
outsl
jecxz
adc
into
wbinvd
sti
pop
cmpsb
sysexit
xor
fstps
lock
in
xchg
jmp
add
xchg
punpckhdq
mov
fs
sbb
movb
sbb
pop
fmull
mov
sti
xlat
sbb
mov
outsl
call
adc
push
loope
mov
cli
dec
test
ret
and
lods
or
pop
daa
ficompl
push
lahf
inc
fsts
iret
inc
mov
cltd
or
ds
and
inc
fstpt
into
out
dec
lea
lds
jno
popa
mov
inc
out
push
cli
lods
scas
xor
sbb
jecxz
pop
les
in
out
scas
jae
adc
push
repnz
rcl
cmp
outsl
push
sbbb
mov
icebp
leave
adc
js
faddl
sub
mov
mov
dec
cltd
xor
inc
and
jb
test
and
lahf
fstl
repz
test
jbe
daa
xchg
clc
xor
in
dec
mov
cmpsl
cs
push
ds
test
les
mov
aaa
lahf
push
sti
dec
insl
mov
and
lock
lret
mov
hlt
mov
push
in
daa
jne
xor
mov
cld
dec
lock
repnz
outsb
into
pusha
pop
push
jnp
mov
xor
push
rorb
in
mov
outsb
pop
sub
loop
addr16
aas
loope
dec
mov
mov
ljmp
dec
sub
popa
pop
outsl
ljmp
add
or
ret
ror
sti
adc
scas
insb
lds
cli
ret
rcll
out
xor
scas
adc
movsb
xchg
add
jae
dec
popf
or
dec
mov
xchg
mov
insb
jmp
mov
or
dec
and
cld
neg
adcb
pop
add
xchg
mov
push
xchg
les
pop
mov
mov
daa
xchg
mov
and
jnp
mov
arpl
int
imul
dec
in
inc
lods
lret
ja
sahf
xorl
mov
outsl
into
pop
sbb
pop
int
imul
jae
dec
pusha
jmp
or
jecxz
inc
movsl
and
jb
jle
dec
or
sub
pop
bound
icebp
sarl
stos
mov
jp
sub
adc
fdivl
ret
in
addr16
outsb
repz
add
cmp
mov
outsl
ror
sub
xchg
mov
je
xchg
ds
lret
icebp
sub
xchg
lahf
in
js
mov
addr16
dec
scas
test
cmpl
andl
add
in
and
cltd
xchg
js
and
mov
mov
imul
xchg
shll
aam
rcrl
shrl
pop
xlat
mov
push
cmc
sbb
fmuls
adc
aaa
cli
lcall
add
sahf
shlb
sub
data16
jo
cs
sub
cmp
mov
or
sarb
mov
scas
pop
dec
cwtl
inc
cmp
lds
xchg
pop
jmpw
in
test
jnp
out
scas
cltd
mov
jg
repnz
das
pop
push
outsb
nop
and
pop
cs
loope
sbb
lea
jecxz,pn
stos
sub
repnz
add
cmpsb
jg
es
add
jo
pushf
std
cwtl
xchg
jns
or
filds
lods
aas
mov
les
inc
ds
lods
lods
out
xor
or
and
lahf
jbe
cltd
sub
faddp
ret
cltd
cmpnleps
in
cwtl
push
filds
and
insb
test
imul
sub
mov
adc
sub
sbb
gs
shlb
jge
mov
inc
mov
fdivrl
jmp
pop
add
inc
sub
lods
or
pushf
mov
mov
xchg
mov
sti
psrad
push
pushf
orl
cmp
fmull
jbe
jg
mov
scas
outsb
scas
jno
sub
subb
test
mov
stos
xor
dec
incb
leave
pop
movsl
dec
out
sbb
mov
stc
cmp
inc
xor
or
into
or
ror
das
inc
adc
cmp
sti
cmc
push
lock
in
js
xor
stos
arpl
cs
push
jns
sbb
sarl
addr16
ja
sbb
mov
adc
cmp
xchg
les
sbb
inc
sbb
popf
cmp
mov
add
shlb
xchg
ret
sbb
mov
add
imul
cld
jge
jge
rol
mov
adc
std
push
mov
pusha
cmp
jg
notb
daa
push
out
inc
sbb
pop
ret
shll
andl
mov
out
fmull
push
xchg
inc
jnp
popl
xchg
and
cmp
fmulp
cld
sub
scas
mov
outsl
sbb
jmp
and
rcr
mov
pop
ja
popf
lcall
sbb
push
movsb
jp
and
sub
nop
jle
mov
xor
enter
or
xchg
orb
inc
xor
std
jo
pushf
stc
test
rorw
mov
jmp
or
inc
pop
cmp
sub
and
and
xchg
stc
aas
arpl
rcr
sbb
loopne
out
lahf
lcall
fs
clc
stos
mov
out
out
mov
rcr
and
out
inc
push
mov
fnsave
lock
inc
inc
ss
xor
jb
or
mov
stos
lods
mull
lds
sahf
fnstcw
test
and
insb
and
loope
jecxz
addr16
sub
fwait
push
xchg
out
mov
pop
xchg
stos
loope
arpl
rcr
mov
and
xor
orl
std
adc
cwtl
pop
sub
in
cmc
xor
sub
roll
es
out
out
out
xchg
cwtl
and
test
hlt
pop
push
shll
pop
ss
rorl
cmp
lods
rcll
jnp
stos
mov
add
out
pop
sub
jo,pn
ljmp
adc
fstl
cmp
inc
mov
push
aaa
pop
test
jnp
adc
mov
test
jb
stc
ret
test
popa
popa
pop
int3
out
sbb
inc
adc
mov
sub
fdiv
enter
stc
stos
rorl
sbb
ret
mov
push
jl
sbbl
xlat
sbb
orb
stc
movsb
mov
ficompl
stc
and
mov
sar
jmp
and
dec
mov
fimuls
add
ret
jmp
icebp
ss
movsl
mov
jge
aaa
filds
mov
jno
std
adc
call
xchg
lods
clc
pushf
dec
loopne
flds
sbb
ljmp
mov
cmc
sub
or
dec
repz
mov
cltd
or
stos
or
adc
pop
push
mov
mov
mov
rcl
jge
subb
out
js
lahf
out
pop
notl
adcl
inc
jl
cltd
cmp
popa
add
dec
mov
pop
jmp
or
jbe
stos
loopne
jbe
mov
in
mov
mov
dec
cmpsl
and
je
add
xor
xor
pusha
push
andl
cwtl
xor
fucomip
iret
or
jb
adc
fmulp
in
and
popw
xor
or
shrb
xor
nop
xor
xchg
jg
out
lea
out
inc
cmpsb
sbb
pop
fsubl
imul
imul
arpl
mov
add
hlt
ret
sbb
out
mov
or
mov
cmp
rcl
test
in
imul
mov
fs
mov
repz
in
aad
sbb
in
cld
jno
xchg
mov
jbe
orb
and
sti
mov
loop
sub
push
out
in
push
mov
jbe
popl
mov
ret
testl
cmp
jg
mov
lret
inc
mov
into
push
and
jle
lods
add
adc
xlat
popf
fldcw
inc
mov
icebp
ret
aaa
and
mov
addr16
cs
mov
je
fcmovnu
push
incb
loop
xchg
addl
jg
insb
pop
adc
and
ljmp
mov
mov
mov
out
mov
dec
adc
repz
xchg
dec
or
fwait
shr
es
jo
loop
das
test
cli
ja
adc
pop
pusha
cltd
notl
icebp
and
sarb
orb
test
cwtl
mov
xor
cltd
jle
lret
test
inc
popa
test
and
frstor
int3
mov
mov
sbb
xchg
insl
je
push
xchg
xor
sti
cmp
pop
imul
or
mov
notl
rcll
fstpl
addb
movsl
scas
stos
outsl
int3
sub
mov
fsubrs
out
loop
mov
sbb
cmpb
mov
dec
aam
mov
scas
adc
cld
add
cld
xlat
jecxz
shrl
push
lods
test
and
icebp
sbb
xchg
imull
cmpsb
and
mov
xchg
add
les
es
lock
mov
add
into
dec
mov
rcll
in
push
push
jo
mov
jge
cmp
dec
lcall
aaa
jmp
mov
call
pop
inc
jnp
sub
shll
imul
inc
ljmp
push
shll
dec
fdivrp
cltd
jns
sbb
int3
popf
int
lock
int3
cltd
inc
lcall
pop
mov
push
cmpb
mov
xchg
jne
repz
loopne
test
popf
imul
decb
dec
fwait
movsl
aaa
add
aas
roll
add
jl
cmpsb
adc
outsb
sbb
cltd
out
mov
jae
cmpsl
jne
ss
inc
bnd
pop
dec
sbb
clc
push
insb
or
lods
rclb
xchg
mov
cmpsb
pop
das
pushl
into
pushl
cwtl
out
mov
and
sub
sub
mov
out
out
int
push
xor
cmc
lea
and
sub
add
jmp
xor
int
mov
dec
sti
mov
idivb
rorl
sbb
cmp
xor
dec
xor
push
sbb
push
dec
add
xchg
mov
xor
enter
add
dec
xchg
ret
fmul
and
pop
orb
jp
jnp
lods
into
les
jbe
sahf
lods
out
xor
mov
sub
push
lcall
xchg
enter
ds
add
rcrb
lods
subb
push
mov
popa
in
rorl
jo
lock
ficoms
testb
add
mov
jnp
or
dec
ljmp
das
sbb
mov
pop
in
pop
mulb
mov
das
cs
adc
dec
jp
inc
sbb
inc
ror
jae
inc
ss
jge
ss
inc
pop
sbbl
ja
bound
loope
ret
mov
fldt
aaa
inc
test
cmpsb
pop
iret
jmp
adc
imul
in
push
xor
enter
popa
cli
cmpl
scas
imul
sub
mulb
cltd
scas
add
xchg
popl
in
mov
sar
add
jg
ret
insb
or
mov
jno
and
lret
inc
push
stos
sarb
hlt
popf
xorl
fimuls
jge
pop
mov
stos
aaa
xchg
pop
icebp
add
pop
jp
dec
pop
jmp
push
outsl
jbe
aad
fldt
or
or
jecxz
mov
data16
jb
sahf
xchg
lret
pushf
jae
push
mov
out
pop
out
cmp
aaa
cli
inc
movsl
adc
outsl
sbb
sbb
pop
and
adc
lahf
dec
ror
fisubrs
mov
pop
cmp
mov
xchg
jne
int
out
push
pusha
lock
sbb
dec
sub
mov
hlt
mov
repz
xor
mov
sbb
ljmp
mov
sbb
test
xor
in
add
pop
test
imul
rcr
push
loope
xchg
fstps
adc
xchg
mov
inc
scas
lods
les
ljmp
mov
ljmp
enter
rorb
mov
jo
sarb
mov
js
cli
test
aad
sbb
mov
aam
xor
scas
push
mov
push
and
sub
test
shrl
js
mov
dec
mov
sbbb
inc
rorb
rol
push
and
imul
inc
and
adc
outsl
pusha
stos
jb
out
xchg
cmpsb
xchg
stos
mov
stc
push
or
pop
inc
inc
push
dec
jnp
mov
and
rcll
jmp
lods
sub
inc
dec
cmc
xchg
mov
clc
mov
pop
mov
stos
cld
pushf
rcl
fsts
pop
popf
nop
out
mov
fucom
pop
outsl
cld
mov
test
and
pop
dec
aas
mov
mov
jne
lock
rcrl
fdivr
loopne
jp
cmpsl
rorl
das
xchg
mov
outsl
pop
insb
inc
sub
es
cld
aad
jmp
outsl
out
push
sub
mov
inc
mov
inc
pop
jne
mov
xchg
xadd
inc
xchg
or
cmp
mov
mov
sbb
jbe
lock
sti
scas
lds
mov
push
mov
sarb
int3
and
std
cltd
rcll
mov
aad
out
fistps
hlt
jmp
test
or
cli
cmc
sahf
sub
inc
and
dec
ljmp
mov
in
sub
xchg
jge
test
ja
mov
jmp
divl
pop
loope
pop
push
stos
pop
pop
jo
push
jno
xchg
jns
aaa
nop
mov
inc
adc
bound
fsubs
imul
sahf
dec
lret
push
xor
adc
pop
test
and
ror
sub
sbb
das
sub
loopne
jge
mov
fprem
jb
sbbl
fisttps
jp
lods
lcall
mov
in
cmpsl
xor
pop
sub
mov
sbb
add
cs
aas
xchg
push
ret
inc
in
daa
in
gs
inc
iret
ret
repnz
in
or
add
mov
in
inc
lock
cltd
fld
xchg
scas
fwait
lcall
cwtl
bound
loopne
sti
in
enter
sbb
sbb
jno
mov
add
rcl
je
xchg
jp
adcb
dec
xchg
xchg
sbb
aaa
pop
push
leave
mov
pop
cmp
mov
lock
adc
std
and
cmp
pop
mov
stos
dec
pop
inc
jp
adc
inc
ja
and
adc
sub
mov
push
sbb
adc
in
dec
xor
movsl
push
out
adc
ficomps
or
loopne
popf
cwtl
sbb
sub
add
insb
sub
mov
repz
mov
and
jns
xchg
lret
and
stos
mov
sbb
leave
xchg
es
or
xchg
je
sbb
push
into
jge
mov
bound
sub
sub
mov
adc
dec
shlb
inc
xchg
cs
mov
or
outsb
fndisi(8087
xorb
push
flds
mov
dec
aaa
mov
jnp
mov
call
dec
push
mov
call
pop
test
in
call
je
lret
and
push
push
arpl
stos
shrl
sbb
clc
in
daa
hlt
xchg
fstps
test
mov
push
xor
mov
push
jl
mov
lds
fimuls
sbb
fsubrs
xor
mov
cmp
xchg
push
mov
mov
cmpsl
jns
leave
sub
xchg
fdivrs
mov
or
in
xchg
add
movb
sbb
jno
filds
xor
dec
mov
pop
pop
mov
loope
cmp
mov
andl
mov
hlt
jno
and
fcoms
iret
insl
out
imul
enter
les
or
imul
es
out
push
dec
mov
scas
adc
outsb
inc
pop
enter
fbld
inc
cli
ja
fidivl
pop
sub
xchg
add
daa
xor
jge
pop
popf
sbb
adc
dec
dec
or
enter
and
lea
in
inc
mov
int
add
sti
mov
push
stc
sbb
pop
sub
add
pop
loop
out
jecxz
adcl
mov
das
fs
mov
test
cmp
mov
cmpsl
push
dec
jb
hlt
leave
cli
mov
dec
loopne
jl
jns
jb
and
out
andb
xlat
jbe
pop
add
xor
xchg
aas
pop
cmp
pop
scas
jbe
das
in
xchg
sub
mov
fs
jp
cs
pop
pop
repnz
mov
xchg
jae
mov
in
into
addr16
push
xchg
es
xchg
push
insb
fsubs
mov
sbb
cmp
xlat
jmp
push
dec
pushl
mov
mov
int3
out
pop
or
xchg
xor
insl
cmp
cmp
clc
out
mov
daa
push
add
negb
xor
xor
out
cmc
int3
sbb
fwait
jns
ja
dec
cmp
push
inc
out
cmpxchg
pop
mov
inc
xchg
dec
jmp
xchg
leave
pop
cli
add
sbb
push
push
int
jbe
cs
lods
das
pop
xorb
xchg
mov
push
decl
cmp
addr16
rorl
stos
insb
imul
imul
cmp
movsb
add
cmp
dec
and
lret
xor
push
and
push
mov
dec
cltd
das
outsl
imul
mov
adc
outsb
shrl
imul
sahf
rorb
aaa
pushf
dec
loopne
ret
xor
jge
push
int
push
jg
jg
mov
pop
xchg
out
clc
mov
pop
add
jb
adc
aas
ja
xchg
jbe
mov
call
out
and
sub
lcall
pop
insl
and
aas
push
mov
les
mov
push
clc
cmp
lret
daa
outsb
cld
in
xchg
xor
call
mov
enter
int3
mov
jae
mov
stos
ljmp
stos
adcl
fs
jno
lods
iret
ja
cli
mov
pop
addr16
fisttps
adc
sbb
dec
xchg
lds
add
dec
or
or
cmp
cmpsb
jb
testl
push
jmp
fists
jno
shr
fstpl
mov
jae
scas
inc
cmp
adc
fldcw
or
push
cmp
stos
xchg
scas
mov
pop
jns
int
or
pop
fbld
leave
fucom
inc
dec
cmpb
scas
xor
xchg
cmp
mov
aaa
lods
out
sbb
push
faddp
les
lods
sbb
inc
inc
push
mov
gs
jb
dec
sbbl
js
xor
int3
stos
jae
lods
dec
lcall
inc
adc
sbb
pop
and
data16
mov
and
or
rcl
test
sub
das
das
iret
scas
shll
jae
data16
mov
inc
adcb
pushf
inc
sbbl
xor
adc
xchg
sti
subb
loop
lret
lcall
sub
mov
sarb
loopne
adc
or
and
lcall
mov
jnp
and
aaa
imul
push
ljmp
test
fwait
jnp
jg
mov
aas
add
je
dec
gs
adc
cmpsb
pop
js
mov
stos
jg
jge
sbb
leave
xchg
scas
lock
sbb
ds
sbbl
sub
dec
clc
mov
sbb
sbb
adc
out
cmp
add
ljmp
or
jns
cltd
xor
repz
mov
sub
sbb
insl
xor
pop
dec
test
aam
inc
mov
in
insl
cmp
lcall
jae
adcl
push
pop
pop
std
or
mov
sub
fs
push
and
fistl
insb
fstpl
inc
lcall
leave
lods
adc
add
fcomip
xor
dec
mov
enter
pop
or
pop
mov
cmpsl
inc
xchg
js
inc
stos
mov
fists
sbb
pusha
dec
mov
in
push
ret
fistpll
clc
stos
fiadds
add
pusha
cmpsb
clc
cltd
loopne
adc
pop
fstps
push
test
dec
repz
sub
inc
push
inc
pushf
out
mov
push
jbe
push
adc
out
addl
mov
cmpsl
push
adc
xor
cltd
add
push
and
mov
imulb
in
bound
shl
xor
sbb
repnz
cmp
lods
dec
inc
iret
adc
or
push
stc
and
pcmpeqd
push
sarb
arpl
or
pop
dec
cmp
jg
push
dec
repz
push
loope
push
pop
imul
mov
mov
divb
sbb
add
jb
push
or
jg
enter
and
pusha
xchg
int
mov
test
std
mov
outsb
cld
xor
int
loop
sub
pop
pushf
loop
mov
push
jbe
push
insl
push
arpl
mov
ret
int3
pushf
jns
and
movsb
jo
mov
cmp
pop
xor
fnsave
orb
mov
lahf
lret
movsb
mov
dec
push
fwait
and
movsl
jp
sbb
mov
push
sbb
push
ds
rcr
push
rolb
jp
jmp
inc
and
xchg
shlb
sbb
or
lods
jb
mulb
das
fdivs
jecxz
xor
jo
mov
mov
leave
inc
pushf
push
xor
roll
fildll
sub
or
popa
dec
cmpsb
push
or
in
mov
jmp
loope
sub
test
cmpsb
jae
jp
movsb
iret
xchg
jl
adc
or
dec
es
hlt
mov
aad
sahf
xchg
xlat
push
pushf
hlt
dec
mov
outsb
fcomp
sub
jecxz
cs
pop
cmp
xor
cmpsb
adc
inc
add
sub
or
sbb
jp
daa
add
shll
dec
push
ljmp
lods
inc
xchg
movsb
mov
inc
mov
mov
cmp
call
sahf
mov
sbb
iret
insb
cmp
in
cld
mov
inc
outsl
pop
push
inc
mov
mov
idivb
movsb
rorl
cmp
xchg
inc
nop
lret
mov
xchg
xor
dec
sub
in
es
ss
push
or
pop
dec
jl
add
or
or
fistl
or
sub
push
repnz
jp
adc
fisttps
enter
bound
jmp
cmp
pop
pop
dec
testb
pop
inc
push
cmp
rclb
and
adc
cs
xor
jmp
push
mov
push
push
scas
sti
fwait
jmp
sbb
imul
push
scas
sub
mov
sbb
push
xor
mov
inc
stos
je
push
insl
les
popf
enter
das
mov
and
dec
pop
dec
and
sub
cli
addr16
and
bound
roll
das
or
divb
mov
in
and
scas
orb
cmp
mov
pushf
cmc
leave
mov
and
add
jp
and
scas
test
jno
add
cvtdq2ps
xor
push
xor
push
jmp
push
popa
add
mov
xor
dec
idivb
xchg
xor
test
ds
add
popl
jecxz
lret
mov
or
fnclex
daa
sbb
inc
sub
sbb
sbb
cmpsl
push
out
adc
mov
fidivl
fs
add
pop
lret
xchg
dec
shl
xchg
jg
hlt
imul
std
aas
in
pop
loope
jae
aaa
enter
push
push
enter
test
pop
imul
jnp
sti
push
mov
insb
or
add
fidivrs
movsb
jo
loop
push
xor
std
or
je
cmpsl
scas
add
rcll
jo
mov
mov
mov
clc
cmc
jg
divl
xor
mov
mov
xchg
xchg
and
xchg
sti
cli
scas
ret
cmpsl
push
jle
sbb
stc
cmp
and
inc
faddl
xor
mov
xchg
cmp
push
jmp
cltd
outsl
lahf
xchg
loopne
cwtl
sbb
lahf
frstor
mov
ret
sub
mov
cmp
inc
cmp
inc
test
incb
pop
fimuls
pop
jno
push
daa
popa
out
cmp
xchg
push
sarb
pusha
dec
mul
arpl
push
mov
pop
icebp
cmp
xchg
pop
pop
es
mov
ljmp
xor
pop
loopne
or
sub
mov
fs
in
cmp
dec
mov
popa
xchg
pop
inc
fnstcw
nop
push
int3
roll
jnp
push
mov
mov
lea
imul
add
jb
data16
or
inc
pop
iret
xor
pusha
pop
out
mov
sub
adc
dec
inc
mov
cmpsl
es
adc
adc
and
sbb
cmp
stos
or
into
pop
in
out
sub
movsb
sbb
popa
mov
out
mov
jns
les
jne
cmp
add
push
pusha
jae
jecxz
xor
cmp
call
scas
push
cmpsl
or
movb
js
xchg
outsw
push
dec
pusha
push
stos
push
lcall
xchg
push
lods
pop
mov
sub
popf
dec
sbb
pop
arpl
mov
int3
jns
mov
in
jp
mov
ret
mov
mov
mov
or
fistps
arpl
pop
mov
pushf
fistpl
hlt
xor
and
ljmp
mov
xchg
fcmovnu
adc
loopne
sbb
add
jmp
mov
sbb
sbbb
jl
rclb
enter
push
xlat
push
mov
or
cs
leave
stos
mov
sbb
pop
in
fistpl
xchg
lods
add
fmul
imul
je
sbb
xchg
mov
pop
cmp
pop
cmp
icebp
shr
jg
pop
lret
cmpsb
nop
dec
clc
cmp
jnp
fildl
mov
orb
popf
add
jnp
pop
rcrl
or
iret
xchg
pusha
add
jnp
dec
sub
mov
cs
jns
mov
jg
ljmp
cmp
ret
ret
sub
jns
mov
or
int
jb
sub
fwait
inc
mov
push
push
pop
mov
or
push
push
mov
add
mov
xor
loopne
mov
xchg
sub
cmpsl
pop
xchg
sub
mov
packsswb
jp
mov
das
xchg
push
out
adc
mov
push
cmp
int
movsl
sub
xchg
int
das
add
dec
je
fprem
fidivrl
mov
mov
and
sub
cli
hlt
out
enter
mov
inc
sarb
cltd
pop
mov
stc
fcomi
rolb
mov
mov
cmp
cmp
leave
and
cwtl
loopne
jp
lds
pop
mov
in
rolb
xchg
push
aas
cmp
fisubrl
jae
add
mov
stos
inc
lret
and
jb
mov
pop
sbb
add
lahf
out
cmp
pop
repnz
push
loope
xchg
mov
pop
ficomps
dec
sbb
popl
iret
je
xor
out
js
or
cld
mov
push
dec
iret
mov
xchg
pop
out
lea
push
je
pop
xor
out
push
inc
push
or
iret
inc
aad
jbe
cmp
pop
mov
push
pop
jl
fsubs
stos
rolb
insl
pop
and
mov
xor
mov
sbb
push
mov
lds
imul
cmp
pop
daa
sbb
jne
jp
mov
fisubrl
mov
inc
addr16
mov
rcl
adc
add
outsl
cli
sahf
pop
sbb
or
repz
add
movl
inc
mov
insb
hlt
outsl
mov
cli
ds
inc
insb
sub
adc
or
ror
push
and
push
lods
fists
aad
mov
or
gs
cmp
dec
loop
test
movsb
add
xchg
in
in
jae
addr16
in
fimuls
test
cmp
aaa
cmp
jns
pushf
fcomps
push
sub
jne
mov
jmp
and
push
xchg
xor
ret
or
lock
stc
popa
mov
imul
cmp
lds
adc
inc
and
pop
add
and
add
xor
xchg
push
pop
xchg
fwait
lahf
lock
fwait
sbb
pop
mov
pop
push
add
push
sub
jecxz
in
dec
loope
shlb
aaa
sbb
xchg
iret
xchg
sub
adc
push
arpl
mov
outsb
inc
dec
cli
movsb
sti
pusha
mov
fbld
jbe
pop
sub
mov
mov
xchg
test
jl
stos
sahf
ret
or
dec
call
jecxz
cmp
mov
divb
adc
es
sub
push
cli
mov
sub
push
daa
cmpsl
or
push
iret
xchg
jno
fstpt
cmp
mov
outsb
adc
sarb
jp
pushw
enter
popf
and
and
push
mov
repz
mov
mov
int
push
lahf
imul
mov
int
sbb
adc
sti
inc
scas
lock
mov
fdivrl
mov
clc
js
test
fnstcw
mov
and
iret
adc
std
dec
push
mov
pop
gs
push
mov
sub
sub
nop
in
adc
pop
insb
push
shll
out
push
bound
and
push
int3
push
xor
dec
cltd
lods
jb
inc
fcomi
or
loop
or
enter
call
cmc
lret
jp
les
aaa
sub
into
call
mov
and
add
aaa
xor
mov
mov
xor
das
scas
mov
flds
push
test
mov
andb
faddp
dec
mov
and
in
jns
fcoml
icebp
add
mov
xor
in
and
imul
jle
or
cmp
scas
inc
fcmovnu
xchg
into
dec
xchg
fwait
push
andb
mov
jb
add
pop
insl
in
imul
fadd
mov
jnp
inc
adc
aad
mov
sarb
pshufw
mov
xchg
inc
cmp
jne
lcall
gs
out
mov
lock
repz
sub
fstpt
cmpsl
cmc
pop
movsl
push
dec
icebp
sbb
push
jmp
mov
arpl
xchg
and
imul
push
jae
lret
add
loop
sahf
adc
fcomps
mov
lds
adc
jge
adc
pusha
lods
cmp
sub
dec
pop
sbb
fdivp
cmp
sysret
ficoml
dec
cmpsl
clc
adc
push
push
imul
xlat
mov
ds
mov
sbb
ds
lods
dec
out
sbb
movsl
rol
pop
cmp
pusha
adc
mov
in
cld
in
fwait
add
mov
inc
nop
xchg
lahf
aam
jp
fnstenv
jnp
gs
mov
push
out
jecxz
stos
mov
xor
out
push
pop
lea
sahf
fs
ror
inc
lret
ret
mov
sub
push
adc
fucomip
repz
mov
lds
sbb
push
push
cmc
iret
mov
loop
mov
test
ret
nop
sbb
push
adc
push
das
out
cltd
sub
push
xor
and
inc
aas
das
fdivr
ds
add
addr16
jge
jg
cmp
pop
xchg
lcall
hlt
out
adc
das
lods
in
jb
mov
pop
lds
xor
lahf
mov
add
cwtl
and
or
pop
shrl
stc
out
add
jbe
test
or
push
cmpsb
mov
inc
out
nop
imul
jg
idivb
mov
sub
aad
sbb
sub
adc
pushf
cmp
icebp
in
push
xor
adc
xchg
jno
daa
andb
xchg
mov
scas
ret
push
aas
dec
gs
in
dec
fs
sbb
or
add
test
je
mov
sahf
lret
out
cwtl
out
jl
pop
sub
mov
add
lods
in
mov
shlb
sub
jno
jbe
shl
loope
dec
stos
pop
stos
std
gs
jmp
addl
imul
scas
cmpsb
dec
cmp
inc
fwait
sbb
fwait
push
jns
fnstcw
pop
test
ret
push
sbb
mov
or
and
jge
adc
xchg
mov
arpl
je
arpl
cld
and
repz
aas
xor
enter
and
iret
scas
icebp
sub
xor
fisubl
add
xchg
outsb
out
jp
mov
aaa
scas
mov
lock
das
push
sar
xchg
icebp
ret
loope
dec
cli
push
mov
test
cmp
push
sub
in
test
lods
test
push
cmp
pop
test
or
pop
std
inc
aas
mov
push
lods
add
fsubs
xchg
popl
push
loope
push
ja
aaa
or
test
lea
fdivp
jnp
cmp
pop
enter
ds
leave
jl
pop
xchg
sbb
pop
popf
stos
shlb
pop
frstor
les
xorw
sahf
popa
jnp
mov
sub
inc
repz
lret
test
push
out
addb
xchg
lcall
sbb
int3
mov
xchg
mov
dec
popf
rcll
lcall
push
enter
push
mov
stc
jne
push
outsl
jecxz
pop
push
adc
xor
add
insl
dec
aam
xchg
nop
fwait
mov
pop
fcmovbe
int3
pop
sbb
fwait
mov
int3
rclb
mov
lret
mov
sahf
inc
mov
jecxz
in
std
out
les
mov
lods
imul
shll
scas
push
xor
xchg
add
stos
jb
js
jg
aas
imul
sahf
push
ret
mov
test
stos
inc
test
popa
movsl
jecxz
add
jmp
pop
dec
cmpb
notb
mov
cmp
mov
popa
test
jo
mov
icebp
mov
mov
mov
add
cmp
lods
enter
sarb
xor
dec
add
sub
mov
sub
lds
pop
adc
mov
xor
je
mov
inc
cli
mov
ds
ror
aad
call
inc
xor
xchg
insb
mov
cltd
fmull
cli
cmp
lahf
inc
jnp
rorl
pop
ds
imul
mov
and
fs
stos
cmpsw
fcmove
lea
mov
dec
add
lcall
pop
arpl
mov
iret
cmc
out
xchg
lea
loope
or
int
movb
popa
mov
hlt
mov
cld
icebp
fists
lock
xor
push
mov
ror
insb
add
in
iret
insl
mov
das
inc
sahf
adc
and
stos
cmp
repnz
mov
aam
int3
movsb
movsb
scas
mov
aad
sub
lods
cmp
mov
pop
call
jns
pop
inc
push
adc
jbe
push
loopne
pop
insb
adc
jbe
xchg
add
mov
pop
imul
push
mov
xor
in
mov
inc
mov
stc
repz
int3
xor
es
mov
hlt
jg
xlat
lret
or
scas
dec
jl
arpl
sub
add
cmp
in
int3
dec
mov
js
out
call
jmp
imul
das
mov
push
imul
sbb
dec
adc
inc
das
cmp
leave
sahf
mov
idivb
je
fldcw
mov
mov
cmpsl
and
dec
inc
pop
and
jae
hlt
adcl
outsb
adc
jle
aas
pop
fimuls
negl
daa
mov
and
sbb
cli
incb
aaa
int3
inc
mov
cmp
xchg
mov
pop
stc
ljmp
xor
and
jae
aam
mov
mov
pop
mov
sub
jb
lods
lods
xor
fs
repz
mov
xchg
in
mov
cmp
cs
clc
dec
sub
es
ljmp
add
out
mov
test
sbb
popf
sub
push
ret
sbb
arpl
clc
sbb
or
pusha
ss
dec
lahf
imul
xor
mov
sub
outsl
jmp
mov
testb
insb
adc
push
push
adc
adc
mov
in
jns
imul
sub
mov
mov
rclb
push
cmp
outsb
adc
adc
push
arpl
or
add
xor
pop
sbb
mov
fndisi(8087
aad
cmp
pop
pushf
jge
les
dec
or
xchg
mov
aaa
cld
out
and
or
push
push
adc
dec
mov
mov
dec
jl
ljmp
and
sbb
inc
sarb
or
pop
cs
push
pushf
push
pop
imul
popa
or
ds
mov
ret
jne
dec
test
lods
pushf
rcrb
sub
repz
pop
or
aaa
in
dec
xor
jae
xchg
cmp
shl
add
xor
cmc
imull
and
movsb
sub
mov
mov
xchg
pop
adc
loop
xchg
pop
pcmpeqd
scas
inc
cmpsl
lcall
inc
int
push
sbb
stc
push
movsb
add
lds
ret
mov
or
dec
jnp
out
push
push
and
mov
cld
das
nop
or
aaa
lretw
adcl
mov
adc
sbb
outsb
ret
cmc
pop
adc
pop
mov
mov
and
mov
lock
mov
add
daa
fsubl
test
fwait
ja
aas
lods
pop
dec
int3
or
call
sbbl
jge
sbb
inc
cmp
sbb
push
lcall
cmp
inc
xchg
int3
push
ja
lods
and
neg
xor
repnz
inc
lret
fistl
sbb
mov
fidivs
mov
inc
cwtl
dec
push
outsb
nop
or
mov
inc
xchg
aam
pop
dec
add
out
unpckhps
dec
sub
xor
std
mov
sbb
jp
add
sbb
push
sahf
fisubs
push
popl
jns
add
je
out
mov
adc
inc
andl
mov
adc
insl
test
adc
sti
sub
dec
mov
xlat
add
das
or
rolb
repz
jecxz
mov
dec
inc
or
leave
sbb
popf
mov
leave
hlt
adc
mov
test
push
imul
xchg
cmpsl
test
mov
jae
sub
dec
cmp
inc
in
sub
mov
daa
addr16
sahf
mov
pop
jmp
fsubs
adcl
in
fmul
cmp
sbb
cmp
push
cmpsl
mov
das
jge
shl
pop
push
cmp
inc
in
add
pusha
ss
inc
pop
jb
mov
mov
pop
cmp
or
mov
pop
pop
fmuls
mov
push
dec
icebp
lods
inc
mov
stos
test
leave
or
mov
mov
mov
shr
jnp
or
dec
cmp
rclb
mov
scas
lea
pop
ja
mov
addl
repnz
mov
and
aas
idivb
lahf
mov
sahf
or
adc
das
mov
xchg
movsl
clc
test
loope
add
push
nop
ds
mov
or
push
loopne
pushl
xchg
mov
sbb
out
mov
xor
xor
cwtl
push
pop
jae
and
mov
jnp
cmpsb
add
ja
jns
and
pushf
cmova
movq
jo
cli
sub
mov
jle
inc
test
lds
adc
or
cmp
push
test
lods
or
jecxz
jns
in
xor
push
or
cmp
push
mov
and
out
clc
test
cmp
inc
rolb
push
std
gs
xchg
mov
sbb
xchg
push
push
xchg
movsb
mov
gs
pop
xchg
pop
jg
outsl
push
inc
shrb
push
adc
adc
fdivs
out
cmp
lock
xor
out
lds
ja
push
mov
push
mov
mov
mov
mov
lcall
xchg
pop
stc
push
cmpsl
mov
jb
jns
jne
js
rcll
push
test
scas
bound
push
xor
pop
xor
fiadds
test
sbb
addr16
add
cwtl
int3
xchg
icebp
pop
dec
dec
jae
add
loop
outsb
inc
aaa
rcrl
sbb
inc
out
mov
xor
or
aas
outsb
cmp
mov
and
clc
cli
mov
jecxz
int
or
dec
shl
divb
sub
push
movsb
into
sub
jg
cwtl
scas
add
push
outsl
push
cmp
mov
lock
cmpsb
inc
int3
mov
cmpsl
and
inc
popf
xor
aaa
hlt
pusha
scas
add
shll
decb
adcl
lret
mov
arpl
adc
cmp
mov
pop
mov
inc
mov
xlat
scas
fiadds
mov
mov
inc
stos
sbbb
push
outsl
fisubrl
sbb
pusha
shll
out
mov
push
lock
cmp
add
mov
imul
mov
inc
pop
xor
icebp
or
dec
and
fadds
cwtl
xor
sub
lods
rolb
push
lret
inc
lret
in
jp
jmp
bound
vmovlps
mov
bound
enter
lret
mov
push
gs
xchg
ret
pop
xor
hlt
dec
push
push
aas
mov
inc
adc
aad
sti
fldcw
mov
xor
out
sub
add
iret
je
push
popl
xor
cs
jno
stos
pop
pusha
nop
mov
xchg
rcll
dec
pop
cltd
sbb
fmull
sbb
std
cmp
jb
ja
and
out
sub
jbe
pop
xor
fsubr
push
out
jo
rorb
sub
loopne
in
ret
addb
inc
sub
fsubrp
rcrb
es
push
xchg
inc
mov
adc
out
xor
mov
inc
hlt
in
pop
andl
push
stos
icebp
cmovs
push
and
int3
frstor
dec
scas
pop
cli
ja
xor
mov
pop
or
adc
push
out
inc
mov
fwait
pop
addr16
std
fadds
mov
fidivrs
xchg
pop
nop
out
and
ret
inc
mov
lahf
mov
cmp
xlat
aad
dec
ficoms
inc
xchg
flds
and
stos
sub
and
in
pusha
add
lret
sub
flds
add
ret
dec
jo
sti
jecxz
add
jge
or
icebp
test
lods
mov
pop
cltd
loopne
and
hlt
jmp
sub
sti
pop
inc
pushf
xchg
xor
ja
lods
out
ljmp
sbb
sarb
pop
je
in
sarl
fnstsw
fcmovnu
imul
jo
jp
push
cmp
xchg
mov
popf
sbb
xchg
imull
out
out
inc
cwtl
cmp
popf
sub
push
pop
movsl
sarb
sahf
nop
dec
xor
scas
lahf
mov
xor
mov
jno
inc
test
xor
rorl
add
cmp
push
add
adc
mov
sar
leave
js
inc
out
pop
push
mov
and
int
add
cmp
push
mov
les
pop
adc
push
adc
clc
sbb
test
stos
mov
mov
pop
mov
shlb
out
sub
jns
aad
aas
popa
and
pop
xor
outsb
jns
xor
jp
or
out
inc
adc
test
and
ret
addb
rorl
stos
jmp
dec
xchg
icebp
sahf
shrl
sarb
mov
lods
dec
xchg
aaa
repnz
adc
cmp
xor
xchg
cs
lds
repz
sahf
lods
ret
mov
popa
stos
out
and
mov
sar
mov
fs
js
lods
pushf
mov
aad
sbb
xchg
and
cmp
jge
add
clc
bound
cmp
int3
cltd
adc
mov
mov
push
ds
xchg
aad
dec
stc
jmp
dec
lea
aas
add
push
pop
jge
lret
fsubrs
jmp
cmp
cmp
adc
mov
repnz
into
fbld
ds
ljmp
les
and
mov
xchg
stos
sub
dec
out
add
imul
sbb
sbb
ja
insb
sub
scas
xor
popa
insl
aas
sbb
jbe
loope
mov
push
fidivrl
inc
stc
dec
scas
lods
sub
gs
sub
ss
ja
mov
pop
jl
iret
sarl
xchg
test
sbb
mov
sti
push
data16
xchg
addl
jo
popa
add
rcr
dec
scas
sarl
divb
into
in
out
gs
jmp
cwtl
or
insl
repnz
cmpsl
lock
push
push
jb
xchg
xlat
xor
je
scas
mov
sub
jb
fs
imul
or
mov
arpl
ret
xchg
push
shr
mov
pop
ret
mov
shrb
js
bound
faddl
xchg
movsl
push
mov
jne
shll
outsl
outsb
push
cli
mov
cltd
les
mov
xchg
xchg
ret
insb
ja
cmp
mov
ret
jecxz
les
xor
ret
mov
sbb
mov
add
ljmp
xor
or
add
xchg
pop
mov
popa
pop
ja
xor
ss
fldt
fisttpl
push
inc
outsl
jmp
xor
shlb
sub
out
mov
scas
adc
les
sbb
test
or
mov
movsb
cmp
add
out
lahf
cmp
add
dec
jb
xchg
rclb
sub
mov
pusha
jne
inc
push
std
mov
aad
call
lret
sub
and
xor
push
dec
int3
push
mov
xchg
decb
cs
lods
adc
and
push
nop
push
les
stos
enter
pop
dec
out
mov
jnp
sub
xchg
ficoml
mov
mov
pop
and
and
sbb
or
adc
xchg
mov
lret
mov
sbb
add
pop
inc
xchg
out
orb
lret
mov
loopne
xchg
mov
les
and
rclb
jbe
ljmp
loope
loopne
mov
add
inc
je
pop
inc
push
jp
dec
leave
or
add
sbb
stos
pop
loop
sub
rcrb
testb
sub
scas
clc
jb
les
add
addb
rcll
les
add
addr16
jbe
jb
adc
or
insb
addr16
sti
cs
inc
add
pop
jecxz
sbb
and
inc
push
call
mov
mov
adc
outsb
addr16
or
lds
lcall
pop
ds
into
mov
add
add
xchg
scas
mov
imul
cmpsb
jne
icebp
inc
mov
cli
outsb
ret
and
jg
scas
and
and
out
push
out
je
cmc
inc
out
xlat
arpl
mov
sub
cmc
xlat
aas
mov
dec
iret
add
lods
aas
mov
shlb
js
sbb
cwtl
sar
pop
add
jecxz
std
add
outsb
jge
gs
dec
jmp
xchg
mov
je
icebp
mov
jns
mov
aam
xchg
js
jae
lods
shll
jg
std
and
dec
hlt
adc
ss
das
aad
mov
jns
popa
jg
or
lods
pop
sub
inc
jae
lcall
dec
aaa
cmp
adc
adc
inc
ljmp
ret
out
es
sub
xor
sub
pop
or
sbb
push
pop
cld
mov
jb
stos
das
dec
inc
faddp
push
lods
dec
sbb
xchg
cmp
xchg
mov
xor
movq
mov
xor
pop
or
xor
fsts
push
add
lret
stos
mov
in
add
xchg
jmp
push
stos
test
sub
xor
imul
cld
push
adc
jge
push
lods
mov
jmp
sub
js
xchg
jle
cli
or
mov
cwtl
inc
lock
test
divl
mov
push
xlat
cmp
je
jae
fwait
push
push
mov
icebp
das
data16
cmp
rcll
mov
inc
stos
cmp
or
push
and
leave
sub
xchg
stos
data16
dec
scas
mov
lea
sbb
xchg
sbb
fcmovbe
push
xlat
add
add
sub
pop
in
xor
mov
out
jno
dec
adc
or
dec
dec
dec
bnd
outsb
or
in
cmp
mov
jo
clc
in
sub
xchg
in
and
test
test
test
jb
mov
adcb
cs
pop
roll
mov
add
pop
leave
jecxz
push
repnz
sbb
xchg
jno
xchg
aaa
repz
out
stc
cli
inc
mov
pop
js
jbe
push
add
cmc
push
out
into
and
ret
and
pop
push
and
jbe
add
subb
stos
scas
inc
xchg
loope,pn
mov
push
xchg
adc
aas
mov
mov
fistpll
sub
inc
scas
or
mov
stos
dec
insb
xchg
sbb
jecxz
cld
clc
pop
leave
push
pop
fmuls
or
mov
data16
lret
mov
int
mov
xchg
sub
das
cs
inc
mov
loop
cmpsl
call
lea
pop
dec
push
or
sbb
imul
jmp
jge
xor
inc
dec
or
idivl
addl
cltd
xor
mov
ret
ret
jb
sbb
push
jp
scas
movsb
jns
mov
fstpt
mov
sarl
push
push
xor
ret
fwait
repnz
repz
adc
and
rcrl
clc
in
aaa
mov
sbb
in
adc
je
sahf
xor
insl
fsts
or
in
mov
loope
mov
mov
lea
mov
mov
out
sbb
scas
ja
icebp
xchg
je
add
push
sub
fstpt
dec
nop
cmp
out
or
sbb
push
sahf
jns
jne
inc
cmpb
xchg
gs
cmp
inc
sub
stos
ret
xchg
cltd
div
mov
pop
push
out
aam
ret
nop
or
dec
scas
or
mov
jl
scas
iret
popf
adc
jno
test
cmp
insb
inc
xor
mov
cmp
pop
cmp
push
and
notb
inc
addr16
pop
xchg
pop
fcoml
mov
aaa
mov
dec
daa
inc
adc
xor
lods
ret
out
push
push
pushf
and
xchg
cmc
xchg
adc
pushf
cmc
add
cmpsl
inc
inc
or
cli
ret
test
inc
jo
andl
cmpsl
int
cmp
pop
sahf
gs
cmp
and
sub
jns
arpl
clc
lahf
fidivrl
inc
pop
cmp
outsb
mov
es
push
in
insl
xor
bound
popa
pop
dec
push
test
stos
leave
adc
fs
mov
ret
lret
xchg
adc
fidivrs
inc
dec
sub
lods
push
ljmp
adcb
aaa
add
add
add
sub
addr16
cmpsb
fistps
push
push
in
icebp
nop
aam
jge
popa
and
xchg
sub
pop
dec
mov
cbtw
jp
movb
pop
push
pop
mov
data16
cmp
sbbl
js
xchg
xchg
inc
add
in
xor
aaa
sbb
ja
mov
ret
insb
sbb
xor
test
fwait
jns
sbb
sbb
mov
fwait
jae
add
push
add
cmovs
les
push
or
js
mov
mov
fs
stos
std
test
shll
repz
cmp
sub
xor
mov
xor
das
pop
inc
mov
add
int
jmp
fsubl
lods
lcall
shrl
orb
pusha
lea
imul
pop
adc
dec
xchg
pushf
add
mov
popl
and
out
mov
mov
aas
jmp
in
adc
or
inc
mov
lcall
and
lods
pop
mov
test
imul
mov
or
call
addr16
aaa
cmpsb
cmpsl
pop
cmp
out
and
mov
and
xor
add
scas
xchg
mov
divl
iret
pop
mov
dec
cltd
sbb
cli
stos
push
js
mov
jbe
mov
pop
jg
adc
sbb
xor
mov
mov
adc
or
loop
pop
or
mov
jno
dec
aaa
lret
dec
mov
or
rcrw
jo
sbb
sbb
shrl
xchg
mov
adc
pop
and
cmp
pop
and
fsubr
loope
xor
outsb
movsl
mov
xor
cmp
mov
std
push
test
mov
dec
out
xor
insl
data16
mov
jmp
xchg
aad
pusha
out
call
out
inc
je
push
xchg
push
mov
jle
lcall
cmpsl
lea
xorb
test
or
pushf
test
cmp
mov
push
test
xor
push
and
push
mov
sarl
in
push
dec
push
and
inc
xor
imul
cmc
adc
pop
test
cmp
orb
xchg
adc
xor
scas
mov
sbb
nop
inc
mov
adc
pusha
jns
sbb
sti
and
mov
and
testb
ss
sbb
aam
add
stos
aam
xchg
clc
loop
sub
push
adc
jbe
enter
push
mov
cmp
push
ja
or
loope
mov
mov
dec
cwtl
aaa
mov
or
ds
push
sub
in
mov
sub
pop
sbb
lods
stos
fnstsw
or
and
rcrb
cmp
andl
int3
mov
jmp
mov
xchg
lods
pushf
mov
sub
fisubrs
ss
mov
xchg
lods
orb
xchg
es
daa
adc
xor
sub
sbb
jno
stc
and
les
dec
in
dec
pop
nop
cs
inc
xchg
popa
adc
stos
push
clc
dec
imul
or
popf
fs
xchg
insl
dec
fistpll
popa
gs
scas
out
mulb
mov
rol
sbb
dec
or
ja
movl
sbb
repz
bound
mov
loopne
lret
ret
negl
rcrb
out
add
xor
push
add
add
bound
inc
popw
xchg
popa
movb
and
jbe
xchg
add
cmp
cmp
mov
sub
pop
push
mov
mov
mov
lret
xchg
aam
cmp
xchg
insb
rorl
dec
xor
lods
cli
enter
inc
inc
fcom
mov
repnz
jno
xchg
bnd
jnp
icebp
cmc
loopne
out
lods
mov
pop
sbb
xor
std
xchg
mov
adc
jbe
sbb
jg
inc
xchg
out
repnz
in
lea
or
dec
mov
add
sbbb
lods
add
bound
in
int
scas
mov
movsl
sahf
jns
test
call
test
mov
in
push
sarl
lea
add
cs
popa
push
daa
notb
addr16
jno
movsl
shll
mov
in
push
nop
cmc
outsl
mov
loop
lea
pop
jbe
xor
lods
inc
xlat
test
and
cli
push
mov
into
fiaddl
mov
cmp
dec
adc
aaa
and
stos
sub
jmp
adc
add
push
mov
and
xchg
jmp
inc
cmp
cmp
xor
mov
jb
outsl
xchg
jno
sbb
push
adc
daa
jg
andb
ficompl
sahf
pop
push
jg
out
hlt
cltd
repnz
and
cmpsb
pop
outsl
cmpsl
pop
rcll
test
fs
out
inc
dec
les
pop
clc
sub
xchg
dec
cmp
lea
ret
xchg
inc
jl
mov
push
pop
jo
loopne
adc
push
adc
sarb
into
fistpl
mov
out
imul
dec
sub
push
xor
loope
xchg
je
xor
iret
pop
and
push
arpl
lcall
scas
mov
ds
mov
jo
pushf
hlt
fldcw
lods
mov
dec
int3
dec
inc
hlt
mov
and
and
and
mov
or
rorl
inc
pop
adc
and
and
fcompl
stc
lock
cmp
std
push
fildll
arpl
mov
daa
pushf
mov
mov
dec
add
idivb
sbb
int3
imul
outsl
imul
inc
and
addr16
sub
pop
pop
int
scas
ja
popl
lret
sarb
jbe
repnz
je
sbb
iret
mov
dec
adc
les
sbb
xchg
rorb
pop
and
leave
add
movb
outsb
xchg
inc
inc
jmp
out
shl
fisttpl
sti
lcall
lret
fsubrl
je
cmpsb
rcrl
push
cwtl
cld
mov
imul
sbb
mov
cmp
and
sbb
repnz
popa
lock
push
dec
loop
arpl
sub
xsha256
cmpsb
adc
ja
xor
dec
orl
fwait
push
jno
mov
pop
out
fsubl
sub
js
and
icebp
xchg
or
xor
jmp
ret
and
mov
inc
cmp
ret
dec
push
push
mov
mov
sbb
xor
ljmp
cmpps
cs
push
shlb
or
sbb
gs
jl
sbb
test
xchg
jnp
testb
jl
jae
pop
enter
in
in
inc
clc
xchg
adc
jp
adc
sbb
jecxz
xor
push
aad
pop
sti
mov
outsl
pushf
add
xor
cld
dec
pop
mov
or
and
shlb
dec
adc
cwtl
cld
cwtl
mov
lods
das
jnp
add
inc
cld
sbb
mov
out
enter
fwait
cmp
hlt
pop
lds
lret
push
fidivrl
mov
xchg
dec
xchg
jno
cltd
and
imul
push
test
scas
pop
add
sbb
jl
fwait
jmp
xor
mov
and
jo
imul
adc
cmp
push
xor
leave
mov
pop
mov
dec
cwtl
cmp
and
cmp
cmp
in
pop
dec
stos
xor
jp
xor
cli
insl
push
testb
enter
fnstenv
push
cmpsl
pop
lds
pop
div
insl
popf
add
sbb
cwtl
sub
jmp
push
xchg
cmpb
xor
mov
in
mov
add
cwtl
and
push
shr
sbb
out
mov
cmp
jg
je
mov
inc
lcall
sub
movsb
inc
je
loopne
lret
int3
xor
rcl
iret
in
mov
subl
loopne
popa
popf
inc
filds
sbb
inc
pop
xor
rclb
loopne
push
jnp
fcoml
sbb
imul
or
adc
jl
inc
pop
xor
adc
pop
jmp
imul
sbb
xchg
iret
mov
add
sbb
or
xchg
dec
push
mov
xchg
in
mov
stos
ss
fsts
popa
imul
scas
enter
cmpb
mov
mov
ficoml
pop
hlt
out
and
push
xor
icebp
lret
jae
sub
fisttpl
mov
push
pop
insb
adc
dec
int
and
push
pop
jne
icebp
jg
xor
enter
cmp
mov
and
dec
data16
sub
and
iret
sub
cmp
push
arpl
pop
imul
loopne
aas
negb
std
xchg
mov
arpl
xor
sbb
push
scas
sbb
cltd
das
lods
test
scas
fistpll
addr16
inc
into
lahf
jecxz
lds
data16
nop
pop
leave
test
mov
jg
mov
in
nop
mov
ljmp
fists
cmp
shl
lods
fs
or
movsb
sbb
pop
fmul
mov
movsl
loop
mov
ds
mov
mov
push
sbb
out
fnstenv
dec
lahf
lods
fsubs
js
mov
jno
xchg
adc
test
or
xchg
jbe
fmul
fldenv
mulb
mov
push
xor
mov
and
ljmp
rcll
fnstsw
sbb
in
movl
popf
test
xchg
loopne
add
das
adc
loopne
or
mov
gs
push
jecxz
jmp
mov
leave
adc
imul
fbld
jb
int3
cmp
sbb
imul
jno
mov
pop
xchg
nop
dec
push
mov
xchg
test
aam
fidivs
sahf
lcall
sbb
mov
inc
sbb
xor
xlat
cmp
bnd
lods
dec
add
add
adc
fwait
arpl
or
pop
jmp
out
hlt
ret
jle
test
jmp
sbb
repnz
cltd
push
je
aad
adc
xorl
add
insb
loop
call
sub
cs
xchg
into
jae
fistpll
add
dec
add
pop
lcall
ret
dec
jbe
cs
push
dec
clc
or
push
push
out
adc
xchg
movsb
lret
pop
dec
xchg
aam
mov
ficoml
lcall
xchg
mov
popa
cmp
and
dec
inc
inc
fwait
orb
mov
xor
out
pushf
push
imul
jp
setg
xchg
inc
adc
sbb
leave
pop
pusha
shl
pushf
adc
xchg
in
or
mov
mov
mov
jnp
jae
inc
cmc
mov
or
jns
sahf
out
imul
and
cwtl
cmpsb
or
add
dec
lods
nop
xchg
enter
mov
pop
jmp
push
in
jp
lea
dec
push
mov
std
pusha
fwait
ret
clc
mov
push
sti
jae
sub
xor
inc
call
daa
sarl
sbb
adcl
add
cmpsb
scas
pop
in
and
repnz
fs
fistpl
sbb
jmp
frstor
mov
or
call
aas
cmp
mov
xchg
mov
sbb
test
xor
js
push
mov
and
loopne
and
add
xchg
push
loope
inc
and
clc
or
cli
and
mov
movsb
scas
pop
ffreep
cmp
pusha
pop
mov
cmp
inc
ret
push
jge
mov
xchg
ret
adc
xchg
das
xchg
xchg
and
add
jo
mov
sub
cmc
mov
idiv
jmp
hlt
shll
push
and
cmp
out
push
loope
leave
lock
or
pop
adc
push
dec
in
push
in
lahf
jns
fistps
cmc
or
fsubrs
xchg
les
and
cmp
push
inc
outsb
inc
and
mov
lods
jl
mov
jl
hlt
add
pusha
mov
sbb
mov
adc
pop
mov
mov
add
xchg
cmp
push
sub
xchg
scas
rclb
leave
aad
inc
addps
xchg
pop
fiadds
cli
cmpl
das
dec
xchg
sbb
push
mov
arpl
fmull
sub
int3
push
scas
pop
xchg
mov
popf
add
sti
mov
or
or
lea
mov
movsl
insb
clc
arpl
push
mov
loop
jbe
jl
mov
daa
cmp
and
adc
lahf
sbb
in
push
lods
std
std
scas
daa
sbb
jl
std
repnz
stc
jno
scas
andps
in
sbb
jg
mov
add
dec
cmpsb
jns
push
fisttpl
enter
xor
pop
mov
loop
test
mov
jne
and
mov
into
fmuls
and
mov
mov
stos
xor
sub
jbe
jno
orl
jle
inc
dec
push
jae
out
inc
stos
inc
clc
cmp
nop
js
xor
pop
and
clc
movsb
jmp
cmp
or
pop
xchg
out
aaa
push
mov
jmp
repnz
lea
ljmp
inc
push
pusha
fcompp
or
mov
aad
pop
daa
jne
mov
xchg
xor
stc
data16
xchg
icebp
shll
rolb
mov
adc
inc
dec
lret
out
dec
inc
les
movsb
sbb
push
xchg
pop
lcall
je
jno
xchg
pop
pop
mov
mov
mov
adc
push
leave
dec
pop
push
imul
mov
mov
out
add
inc
mov
adc
or
bound
mov
cmp
dec
lods
push
andl
push
aam
outsb
sub
mov
aam
dec
enter
aad
mov
jb
inc
adc
aam
jne
add
and
and
lea
les
mov
ds
mov
jb
lods
in
call
and
cltd
outsb
add
adc
mov
addr16
inc
jge
mov
xchg
clc
lahf
jmp
scas
cwtl
mov
aaa
inc
arpl
push
push
mov
orb
dec
icebp
imul
push
and
sti
add
and
fcompl
clc
aad
cmc
add
and
fs
push
ljmp
gs
call
xor
aam
pop
push
xor
jge
push
pop
or
mov
sub
rorb
mov
sahf
ret
cltd
mov
xchg
cli
mov
inc
incl
xor
jge
int
pop
inc
adc
push
and
pop
add
pop
cmpsl
fisubrl
fidivl
xchg
mov
dec
mov
movsl
lea
dec
mov
dec
std
xor
inc
insb
in
mov
sti
dec
lea
cs
jg
sbbb
mull
sub
cld
pusha
lds
std
js
loopne
dec
push
mov
dec
pop
in
clc
pop
push
mov
adc
je
ja
fdivs
test
divb
and
mov
outsb
pop
sub
jecxz
adc
aam
adc
jle
xchg
out
stos
mov
loop
mov
lock
pushf
xor
add
mov
xchg
test
sti
into
test
clc
xchg
scas
in
bound
cmp
adc
mov
sbb
push
bound
cmp
fildll
fisubrl
push
test
jb
xchg
sbb
mov
jbe
xor
mov
es
sub
data16
sub
fs
jb
std
adc
adc
xor
loope
pusha
out
pop
ljmp
fidivl
xor
or
push
or
inc
bound
lods
test
sub
jbe
out
outsl
and
imul
sahf
pop
jg
xchg
lods
or
rcll
jg
popf
jmp
sbb
or
call
mov
push
inc
jge
fimuls
dec
push
add
xchg
call
mov
jne
ljmp
lock
orl
push
or
jmp
mull
dec
jle
or
hlt
popa
pop
stc
xor
nop
xchg
mov
sub
push
fsubs
push
andl
shrl
inc
jecxz
sub
fidivrl
sub
mov
negb
pop
repz
and
lods
mov
loopne
mov
roll
mov
ja
repz
les
lock
cmp
rcrl
popf
adc
cmpb
mov
lcall
gs
sbb
aad
pop
ret
aas
or
add
inc
and
push
push
stc
rcll
fcom
imul
enter
into
push
xchg
and
lods
and
ret
adc
jbe
out
jno
adc
repnz
inc
lock
shll
jb
and
adc
add
mov
dec
sar
mov
pop
jnp
push
mov
sbb
rclb
fwait
mov
cmpsb
imul
push
imul
pop
sbbb
daa
push
pop
mov
lret
out
int
fistps
test
sbb
add
lea
insb
push
add
rcl
sbb
cmpsl
xor
ljmp
sbb
shrb
xor
nop
lret
fsubr
mov
and
fs
in
fcompl
leave
xchg
mov
subl
and
cmp
inc
test
ljmp
xchg
inc
out
pop
les
sub
loop
cmp
xorb
mov
pop
outsl
dec
divb
push
icebp
add
push
scas
pop
jge
clc
and
cmp
mov
scas
xchg
std
shl
jp
inc
mov
in
mov
in
pop
pop
in
add
sarb
jo
cltd
pop
sbb
fisubrs
pop
xchg
aaa
mov
fsubp
stc
fldenv
xchg
adc
testl
push
mov
sahf
xor
clc
ds
das
imul
push
repnz
aad
sub
dec
push
dec
out
sub
push
adc
fdivp
sbb
sbbb
sbb
shrl
imul
adc
test
movsb
mov
inc
fbld
or
push
dec
push
jmp
popa
adc
ficoms
xchg
notb
cli
xor
cld
or
sbb
js
ret
jmp
mov
iret
dec
int3
sbb
lcall
sub
les
lods
mov
mov
shll
imul
aaa
dec
jno
mov
dec
xchg
jnp
cmp
jp
repnz
int3
mov
jne
jge
jl
pop
or
outsb
xchg
or
test
push
imul
imul
mov
test
lret
test
shlb
mov
add
xchg
lea
fsubrs
push
jecxz
ficoms
fcoml
adc
adc
lret
mov
sarb
roll
shrl
stc
cwtl
and
fsts
jne
dec
mov
mov
inc
mov
movsb
cmp
lret
xchg
ja
jge
jae
push
dec
lret
rcrl
movsl
mov
pop
and
in
sbb
fisubs
dec
cld
pop
ja
push
cwtl
fcom
lea
sbb
sahf
mov
cmp
mov
add
mov
cwtl
or
stos
inc
ss
fildl
roll
mov
loopne
gs
int
or
add
lods
mov
adc
jo
loop
or
vaddsubpd
mov
addl
xchg
or
loop
push
data16
mov
jp
mov
jmp
mov
mov
scas
mov
xchg
cmp
or
or
int3
sub
imul
pop
and
inc
lret
aam
inc
pop
leave
cwtl
int
inc
ret
sub
inc
jae
sarb
in
jno
hlt
dec
test
popf
push
adc
xor
mov
mov
cmp
popf
push
cwtl
fbstp
cs
in
push
mov
sub
mov
jg
pusha
in
or
inc
pop
das
dec
shll
dec
fildll
dec
out
ljmp
jbe
jno
jle
add
loop
lea
sub
jmp
add
arpl
jb
fistpl
test
dec
imul
or
or
cmp
inc
call
ds
sub
dec
mov
xor
and
lahf
fimuls
call
dec
xchg
cltd
loopne
jno
mov
pop
add
cmp
push
aam
ret
popf
cli
pop
and
xor
loope
inc
dec
cmp
movsl
push
push
push
shrb
mov
mov
mov
xchg
jle
sbb
add
xchg
add
and
mov
push
push
dec
add
sub
mov
pop
add
mov
push
jge
mov
pop
and
adc
sub
and
test
clc
out
add
jp
int
sahf
outsb
xchg
fnstcw
scas
xor
sti
mov
scas
pop
scas
mov
stos
out
cmp
push
orb
stos
cs
loopne
add
jbe
mov
mov
sub
sub
xor
mov
in
xor
aad
lahf
pop
mov
sub
cmp
nop
shll
push
mov
or
cld
sbb
xor
sarb
dec
dec
mov
pop
dec
add
xchg
imulb
outsl
pusha
fs
jmp
movl
and
es
inc
ss
sub
movsb
loope
xchg
shll
dec
fwait
sub
call
andl
adc
pushf
jmp
cli
outsb
shll
inc
fmul
fimuls
jno
sub
rcrb
cmc
in
into
xor
sbb
ret
mov
loop
inc
daa
mov
arpl
dec
js
mov
fadd
cmp
add
repz
addb
rol
lahf
roll
mov
cld
scas
mov
divl
push
add
adc
and
cmp
xchg
sahf
addr16
jbe
into
dec
leave
mov
icebp
pusha
mov
ss
lods
dec
das
and
ret
mov
pop
mov
bound
add
das
xchg
or
aad
add
push
icebp
inc
int3
insl
out
mov
jge,pt
sub
cmp
pop
sub
cmpsb
fstl
nop
das
daa
jg
repnz
arpl
and
fsubs
jae
jns
mov
pop
pop
call
adc
mov
jle
xor
dec
adc
aas
mov
push
dec
and
inc
jno
mov
in
mov
cmc
test
shll
ret
mov
jo
test
mov
loop
xchg
shlb
add
lret
nop
or
decb
call
and
mov
into
scas
nopl
inc
xchg
daa
and
mov
add
jecxz
dec
mov
jecxz
xlat
not
sub
sbb
adc
mov
ret
loop
pop
add
out
aaa
xor
mov
ljmp
push
or
scas
mov
dec
scas
leave
dec
or
sahf
cmp
adc
pop
sub
lret
mov
movsb
pop
sbb
add
jmpw
and
jmp
aas
and
sbb
sub
lret
mov
dec
je
sti
push
dec
mov
lret
xchg
movsl
imul
sbb
hlt
out
push
std
adc
out
mov
out
loop
xchg
loopne
test
mov
enter
in
xor
fwait
sbb
std
cwtl
inc
jae
pop
and
loopne
fisubl
ljmp
pop
shlb
mov
adc
jecxz
mov
je
push
jle
add
jno
adc
xor
xchg
dec
lock
hlt
mov
or
inc
fdiv
inc
test
test
mov
jmp
jecxz
clc
enter
cmp
xor
pop
stos
push
mov
pop
sub
or
jge
dec
xchg
movsb
jo
push
repz
popf
xchg
or
push
mov
dec
and
outsl
jnp
or
push
je
ds
cwtl
jo,pt
outsl
sahf
es
pop
test
adc
pop
test
adc
inc
out
inc
aas
pusha
push
or
add
push
je
stos
lahf
mov
jmp
imul
icebp
pushf
lea
out
add
stos
dec
andb
mov
imul
sti
ds
in
adc
jl
jno
repnz
sbb
hlt
leave
jnp
neg
or
mov
push
bswap
adc
adc
adc
cwtl
mov
push
add
cwtl
xor
lahf
or
pushf
lods
mov
xchg
pop
or
outsl
ja
push
adc
mull
inc
sbb
add
mov
sbb
ss
pop
mov
jnp
out
call
scas
push
xchg
sub
ss
inc
sbbl
jo
je
add
lret
xchg
fcomps
sub
addb
movb
outsb
mov
adc
lret
cli
push
cmp
movsb
dec
or
fcomps
jbe
popf
push
out
add
int
pop
mov
jo
daa
lahf
and
xor
jne
into
scas
test
jbe
sub
adc
jecxz
int
sub
imul
mov
idivl
xchg
inc
inc
push
les
dec
ljmp
sbb
cmp
ds
push
xlat
mov
js
jae
jge
xor
or
sbb
inc
test
rclb
adc
or
arpl
sbb
ljmp
mov
ret
fwait
into
or
std
push
movsb
cltd
push
lret
mov
xor
lea
xchg
pop
fidivrs
adc
subl
sub
push
jbe
incb
mov
pop
xchg
mov
rcll
pushl
push
movsl
call
es
imul
fdivrs
or
rcrb
cltd
fistps
inc
mov
push
jnp
loop
lahf
push
push
fistpl
lea
jne
data16
mov
fadds
pop
sub
and
adc
push
push
jbe
xchg
movsl
or
hlt
call
add
out
jmp
jp
fnstcw
icebp
scas
imul
into
lret
fcomps
pop
roll
into
push
xor
jo
push
jb
push
push
rorb
inc
aaa
jne
imul
sbb
add
les
adc
xchg
aas
sbb
lods
mov
iret
enter
mov
jb
lods
dec
jl
mov
xchg
xor
hlt
push
fadd
leave
adc
add
dec
xchg
jb
jmp
stos
ss
lea
aam
sahf
in
cli
pop
push
pop
adc
cmp
xchg
cmp
pop
ret
clc
jg
push
inc
inc
je
in
nop
cmp
pushf
pop
test
sbbl
lock
dec
jmp
fs
sub
mov
hlt
sbb
dec
movsb
cs
add
or
ret
jno
sti
int3
mov
cmp
ja
xchg
cwtl
loop
stc
movsb
ret
xor
cld
outsb
adc
jmp
add
stos
inc
push
push
imul
and
mov
and
es
mov
sub
ret
cmc
mov
test
jb
dec
and
out
push
fsubs
mov
ss
in
xor
aam
nop
xor
ds
xchg
cmp
shll
jbe
fsubp
test
fs
mov
loope
cltd
mov
lret
cmpb
or
cltd
adc
mov
push
fsubrs
add
sbb
jmp
js
add
sub
popa
lock
lods
mov
andl
push
add
repz
fwait
dec
in
jo
outsl
call
andl
sub
push
jne
jns
imul
pop
adc
dec
sahf
adc
sahf
mov
lret
xor
jle
andl
cmpsl
xchg
mov
push
mov
sub
pop
fcomi
rcrb
movb
mov
in
aas
das
std
dec
mov
xchg
sub
lock
iret
mov
into
pop
mov
mov
les
imul
inc
mov
hlt
and
pop
adc
mov
pushf
out
push
adc
pop
lahf
int3
xchg
push
or
jbe
mov
push
and
and
test
sub
cmp
js
loop
leave
xchg
mov
inc
sbb
iret
add
lea
fisttpll
incl
mov
divb
subl
dec
jl
and
fwait
push
aaa
pop
mov
pop
and
addr16
mov
adc
xor
rclb
insb
cltd
lcall
xor
and
pop
add
sarb
leave
push
xor
jo
push
mov
insb
dec
sub
pop
push
push
push
and
lahf
mov
sti
je
mov
add
out
and
mov
aam
mov
shrb
mov
imul
add
lds
pop
stos
stos
mov
cmpsl
mov
test
lock
adc
pop
cmp
mov
gs
sbb
rol
mov
and
sti
aam
data16
jle
sub
aas
cmp
pop
and
es
or
mov
addb
inc
push
aam
pop
outsb
nop
xor
insl
test
nop
icebp
addb
bnd
jns
aad
and
xor
out
rol
or
aas
sub
push
fstpl
mov
fists
xor
pop
stc
sti
mov
shll
lea
cmc
cmp
push
fidivrs
jns
mov
add
xor
mov
ret
popa
or
jp
enter
xchg
adc
out
jle
fstps
mov
jecxz
jle
sbb
test
sub
sbb
push
adc
out
fwait
xchg
adc
or
sbb
hlt
jmp
or
sbb
and
xchg
clc
jae
call
cmpsb
imull
inc
ljmp
fdivrl
ja
stc
sar
das
in
jge
xor
int3
dec
fists
cltd
adc
fadd
jmp
arpl
mov
rcll
xchg
xlat
xor
scas
gs
pop
fwait
xrelease
js
pop
std
sub
insb
xchg
lea
jg
loope
lods
scas
pushf
shrb
inc
mov
data16
and
cmpsl
inc
addr16
cs
sub
stc
xlat
push
mov
in
fstp
or
cmp
icebp
adc
or
lods
fmuls
flds
stc
pop
rcrl
mov
jo
and
sub
push
stos
dec
icebp
jb
imul
aas
je
inc
push
in
stos
sahf
xchg
ss
out
ds
add
loop
mov
push
push
rcrb
sub
cmp
nop
fdivrs
jns
and
lret
ljmp
push
pop
adc
push
cmp
data16
int3
push
or
pop
push
dec
in
jnp
popf
push
push
out
fidivrs
fildl
inc
test
movsl
jmp
hlt
aam
popa
mov
ss
aaa
mov
lods
push
popa
punpckhwd
outsl
cwtl
jge
je
adc
xchg
mov
imul
les
add
sub
out
sub
out
stos
leave
pop
loop
xchg
xor
fcmovbe
jecxz
ja
sbb
or
xchg
cmpsl
imulb
xor
out
les
out
sbb
arpl
insl
xchg
andl
loope
xchg
dec
and
aad
jae
imul
fwait
xchg
cs
adc
mov
lret
fisubrs
inc
xor
mov
lahf
inc
jne
mov
clc
pop
outsl
adcl
mov
xchg
jbe
and
pop
and
loopne
adc
fsubp
es
arpl
test
ret
xor
insb
loop
cmc
ja
xchg
and
mov
mulb
inc
or
hlt
hlt
mov
in
jo
dec
gs
cltd
cmp
add
imul
or
ljmp
sub
mov
ret
cltd
pop
push
lahf
mov
out
sbb
cmp
dec
in
lock
and
sti
and
repnz
inc
add
or
imul
jge
loope
xchg
xchg
xchg
dec
leave
lret
and
mov
mov
jg
xor
push
mov
mul
cld
dec
cmc
in
mov
or
clc
fsubp
mov
out
adc
bound
inc
cli
fistpll
loop
mov
in
mov
add
test
ret
xchg
dec
ret
mov
sbb
xlat
test
cmpsl
xor
inc
pushf
ffreep
lcall
shlb
js
xor
jle
arpl
iret
sub
sub
cmp
mov
out
js
and
adc
arpl
jo
gs
pop
mov
or
fistpl
push
cmp
push
inc
fsub
pop
adc
stos
or
popa
mov
and
scas
ds
ficoms
daa
pop
add
xor
push
shl
fimuls
pop
jmp
inc
lcall
or
and
movsb
insb
mov
xchg
mov
xchg
adc
scas
out
push
cli
sub
loop
push
pop
je
ss
push
adc
xor
dec
repz
insb
jo
in
cmp
push
int3
lea
fucom
sbb
mov
mov
std
scas
pop
xchg
fcmove
cmp
inc
mov
imul
xlat
pop
mov
jne
in
popf
sti
int3
mov
cmpsl
orb
mov
imul
and
sub
push
jg
sub
cmc
fmuls
fadds
mov
push
cmp
jp
jmp
fisubs
outsb
jae
sbb
call
xor
inc
lahf
adc
mov
test
dec
lea
loopne
leave
inc
mov
inc
enter
test
pop
arpl
sarb
cwtl
ds
push
pop
cmp
popf
psubsb
mov
fldenv
ret
aas
dec
sub
pop
dec
dec
pop
jmp
add
hlt
rclb
pop
imul
add
sub
mov
jne
pushf
das
or
mov
mov
mov
cld
sub
pushf
and
fildll
aam
mov
int3
and
inc
xor
mov
or
or
jnp
icebp
dec
sbbb
orl
jne
push
push
jae
je
aam
lea
dec
dec
pop
das
out
push
cmc
sbb
dec
mov
aam
ret
leave
xchg
mov
push
push
mov
push
xchg
lods
jo
in
inc
xchg
inc
sbb
aas
popf
add
add
sbb
jmp
cmp
mov
sub
dec
js
push
pop
sbb
sarl
addb
daa
ljmp
add
divl
out
xchg
das
xchg
das
mov
push
popa
mov
adc
sub
ljmp
leave
test
push
out
dec
pop
jmp
pop
cmp
jmp
fldl
fwait
lds
inc
adc
dec
jmp
pusha
in
in
dec
xorb
repz
push
insb
inc
repnz
hlt
hlt
push
mov
pop
jecxz
add
sahf
push
push
xchg
push
or
mov
cmp
sahf
loope
mov
or
fs
xchg
aam
inc
cwtl
test
push
frstor
ds
stos
into
push
testl
mov
outsl
adc
shll
push
mov
xor
lock
je
addr16
adc
movsl
or
test
push
fldt
test
mov
inc
or
repnz
fsubrl
xor
jo
and
adc
clc
inc
cli
jge
push
imul
jno
jmp
and
out
pop
pop
jmp
lahf
pop
cmp
cmp
andb
jae
mov
add
lock
sti
lcall
cs
movsb
push
mov
in
jb
iret
lret
cmp
fldenv
jp
adc
stos
adc
xor
jmp
cmp
clc
xor
ljmp
inc
pop
int3
add
imul
cmp
xchg
mov
jp
cmp
mov
sub
clc
xchg
les
out
add
xchg
imulb
cmp
pop
push
inc
sub
sti
mov
sbb
lods
mov
inc
lret
inc
jge
mov
test
xchg
cmp
or
add
push
fstps
mov
std
std
jo
sub
mov
loope
jbe
out
aam
lods
jge
sub
stos
cld
cmp
dec
loope
shll
insb
pushf
test
stos
cmp
pop
dec
pop
test
or
std
mov
leave
repz
scas
cmpb
lcall
ficoms
mov
in
lret
mov
hlt
cwtl
pusha
add
hlt
lret
scas
adcb
sahf
mov
leave
mov
je
jge
loope
lahf
loop
or
ljmp
test
fnstenv
ds
mov
sti
mov
ret
movsb
inc
imul
push
inc
ret
enter
cmp
xlat
mov
mov
and
push
data16
int3
jae
pop
mov
das
jns
pop
and
fistps
push
enter
shlb
push
pop
aam
aas
cmpsb
in
mov
adc
mov
stos
push
popf
add
mov
push
adc
dec
enter
fisubrl
in
data16
xchg
cmp
mov
int3
in
rclb
dec
ds
shlb
sub
and
push
dec
cld
aam
xchg
pop
mov
xlat
ljmp
xlat
rclb
jno
or
xchg
dec
mov
aaa
xor
stos
and
jecxz
push
jnp
add
push
lea
cmp
lds
sbb
lds
adc
leave
mov
jns
xchg
cmpsb
dec
mov
mov
jecxz
mov
pop
daa
test
mov
or
jns
sti
jl
xchg
mov
stos
dec
leave
fsubrs
mov
fs
xor
ficoms
ret
insl
add
sbb
or
jl
xchg
dec
xchg
mov
sub
mov
xlat
rorb
aaa
mov
inc
mov
adcl
cmpl
lret
loope
not
or
aas
cli
cld
cld
insl
jo
pop
or
mov
mov
dec
icebp
lods
lods
xchg
sbb
je
inc
mov
lahf
cmp
xor
cmp
hlt
mov
mov
pop
cmp
mov
push
es
divb
pop
sbb
jg
mov
xor
sahf
hlt
pop
mov
push
add
shlb
es
mov
mov
scas
sbb
popa
out
nop
insl
cld
cmpsb
push
pop
adc
xor
xlat
rcr
xor
mov
mov
ret
divb
pop
cmpsl
sbb
jo
ffree
dec
ds
add
cwtl
ja
jb
or
stos
or
pop
push
add
pop
xlat
jo
or
inc
jmp
xchg
sbb
repz
ffree
push
inc
stos
sbb
jge
test
mov
xchg
popf
lret
jg
nop
loopne
popf
movsl
mov
or
jmp
dec
iret
jbe
push
inc
add
aas
pushf
imul
and
mov
cltd
js
push
loop
jecxz
adc
and
push
cs
sub
inc
push
adc
je
inc
push
and
sti
dec
inc
ss
lods
jo
shrl
cmp
fwait
outsl
pop
popa
scas
sub
mov
dec
xor
xor
ret
es
sub
push
ljmp
daa
shl
ja
fcomip
movsb
inc
sub
jns
or
cmp
test
loop
in
mov
mov
dec
jo
repnz
imul
rcl
jg
jecxz
jnp
test
std
insb
dec
sub
lret
test
mov
icebp
shrb
jp
inc
outsl
js
sub
ds
mov
mov
insl
das
dec
inc
mov
dec
rcrb
popf
jmp
pop
mov
in
or
ljmp
adc
mov
fimull
les
mov
mov
ljmp
inc
jb
or
into
data16
or
fidivl
push
push
and
push
pushl
shrl
cld
test
int3
lret
stos
mov
mov
xchg
pop
xor
outsl
popf
mov
mov
and
outsb
and
jne
push
cmp
adc
xchg
push
lds
xchg
mov
jge
mov
ja
je
pop
cwtl
popa
aas
push
dec
leave
sbb
es
cmp
test
das
pop
mov
mov
cli
mov
incl
mov
inc
imul
insl
jnp
and
fwait
xor
iret
push
shll
scas
inc
inc
lds
lods
and
pop
jns
jns
mov
and
and
lcall
pop
jo
cwtl
test
test
scas
lds
xchg
icebp
jb
ret
mov
test
sbb
into
mov
mov
xor
adc
out
xchg
or
cmp
ljmp
test
cmpsb
test
sbb
aas
punpckhwd
cmpsl
xor
adc
jl
cmp
or
jnp
xlat
xchg
cli
sub
fstl
sbb
and
dec
out
mov
adc
jp
jns
cmp
pop
stos
xor
rcr
push
sarl
push
jne
movsb
pop
sbb
push
movsb
pop
cmpsl
sub
push
into
leave
fiaddl
dec
inc
sub
mov
pop
out
mov
mov
mov
xchg
add
jp
mov
scas
mov
sub
pop
inc
sarb
inc
add
mov
push
pop
pusha
xor
adc
mov
sub
mov
mov
inc
leave
push
mul
push
in
mov
cmp
popf
scas
outsb
xchg
sbb
cmp
vmaxps
mov
shrl
pop
test
pop
xchg
xchg
loop
mov
mov
xchg
pop
mov
inc
cmp
cmp
movsl
adc
enter
ror
mov
stos
popa
and
push
jle
sbb
inc
inc
jb
cltd
or
int
mov
xchg
imul
notb
cmp
or
cmp
jno
cmp
inc
or
add
insl
addr16
andb
jae
add
and
fstl
push
cmp
fs
xor
lods
leave
fwait
fwait
subl
in
mov
lods
lods
xor
dec
aam
and
in
js
jb
or
xor
pop
jecxz
push
cmc
shlb
mov
mov
movsb
or
adc
and
dec
mov
and
xor
cmp
clc
push
and
int
into
rolb
inc
sar
ja
inc
cs
push
xor
cmpsl
test
sub
test
and
imul
sub
out
jae
and
xlat
lods
cmp
push
test
or
imul
jne
jo
movsb
add
sahf
mov
testb
sbb
and
mov
inc
lahf
inc
pop
push
sbb
mov
orb
dec
xchg
cmp
das
xor
xor
jmp
jl
mov
inc
push
fwait
mov
addr16
and
sahf
push
lds
jns
stos
mov
leave
push
cwtl
sahf
jno
mov
scas
fucomp
iret
das
xchg
cs
sub
and
hlt
sub
cli
add
cmp
dec
mov
sub
dec
mov
cmc
xchg
popa
pushf
in
lret
std
pop
mov
mov
mov
leave
push
enter
mov
pop
sbb
leave
out
lretw
xor
pop
xor
mov
in
repz
in
rep
jp
leave
cltd
cltd
or
pop
sbb
add
push
lods
jmp
pop
mov
mov
jae
jp
scas
jne
lcall
mov
out
inc
mov
xor
sub
lea
cmc
js
sub
cmpsl
dec
arpl
shll
pop
xor
sti
fnstcw
fcom
stc
in
xor
cwtl
incl
repnz
sti
xor
cld
mov
xor
cmpsl
adc
clc
jmp
sti
and
in
mov
out
dec
lds
lock
out
popa
shl
jns
push
mov
ret
nop
ss
cmp
mov
jae
imul
stos
int
inc
mov
sub
gs
push
dec
lcall
inc
push
fildl
mov
out
pop
xor
lret
dec
cmp
lcall
std
xchg
iret
or
push
sahf
cli
sbb
push
mov
xor
adc
dec
imul
pop
ret
addr16
sub
cmpsb
adc
add
jbe
mov
jp
dec
mov
arpl
movsb
xor
imul
sbbb
fisubrs
xchg
leave
aad
jae
xchg
xchg
scas
cmp
aad
jle
insb
adc
cltd
xor
test
cwtl
mov
pusha
jbe
or
sbb
sub
imul
test
inc
shrb
out
aaa
or
mov
test
fimull
rcrb
mov
sbb
stc
dec
int
outsb
push
inc
out
lret
inc
cmp
cltd
les
inc
imul
imull
add
adc
gs
mov
jg
mov
sbb
mov
int3
cmp
es
es
insl
lret
imul
and
cmp
push
mov
int3
lea
xchg
std
insl
les
jb
mov
xor
pop
rorb
imul
jl
nop
iret
or
in
call
jg
sti
dec
jg
lods
insl
sbbb
mov
int3
cmpsb
pop
sbbb
ss
xchg
mov
add
add
mov
cmp
daa
loope
xchg
in
pusha
mov
xchg
sub
inc
leave
push
bound
test
add
xchg
push
adcb
mov
xorb
sahf
jnp
cmp
aad
pop
push
fdivr
mov
ja
fmulp
inc
mov
xchg
sbbl
mov
push
mov
mov
ss
test
les
pushf
inc
and
lods
lret
scas
add
adcb
cmc
push
arpl
test
adc
sbb
jb
lods
data16
das
dec
jne
lea
pop
data16
push
push
ret
jecxz
loope
mov
sbb
jl
xchg
pop
lods
jmp
mov
lea
das
jae
adc
inc
sbb
push
mov
cs
jbe
xor
or
xchg
loope
pop
push
ds
cmc
pushf
fisttpl
inc
iret
loope
fstpt
fldenv
clc
dec
into
inc
xchg
jae
mov
sbb
mov
lods
ret
or
sbb
jmp
pop
pop
orb
hlt
xchg
adc
pop
mov
mov
mov
xor
inc
jg
mov
test
movsl
adc
in
jo
lods
js
test
cmp
and
sbb
test
mov
lea
cmp
test
idivb
cltd
mov
mov
sub
adc
out
pop
inc
repnz
ljmp
aaa
sub
jle
mov
mov
imul
add
dec
adc
lock
lahf
dec
mov
ret
popa
jg
push
dec
mov
lret
loop
fmul
inc
repz
in
jo
out
outsb
mov
sahf
xchg
repz
loop
inc
pop
cmp
stos
jnp
jl
sub
pushf
inc
into
or
push
lret
xor
sbb
mov
adc
sbb
cmp
mov
and
jb
inc
ret
pop
xor
and
fadd
and
loop
aam
in
and
leave
loope
push
pop
xor
cmp
dec
jecxz
add
pop
imul
mov
mov
sti
in
int3
gs
cmp
in
out
or
xchg
dec
insl
mov
or
pushf
sub
fidivl
push
mov
xchg
mov
mov
push
mov
mov
fstp
lods
loop
xchg
in
rclb
in
cmp
mov
mov
or
mov
xchg
aas
subb
mov
pop
aaa
in
shlb
add
mov
repz
pop
xchg
popf
mov
pop
add
mov
mul
jecxz
inc
cmpb
push
mov
adc
adc
imul
sub
and
jo
les
mov
or
outsl
add
push
jecxz
jbe
pop
pusha
out
aaa
fidivs
add
and
xor
mov
or
stos
or
in
lds
outsl
imul
outsb
mov
fists
and
roll
cmp
mov
xchg
xor
pop
daa
cmp
aad
arpl
xor
jg
mov
inc
outsl
mov
jo
je
push
and
xor
inc
mov
mov
sub
xlat
icebp
idivl
pushf
mov
or
dec
out
mov
mov
mov
les
int
cmp
ucomiss
aaa
js
adc
cmp
negl
jns
pop
nop
cmc
cmp
cwtl
test
out
jl
clc
xor
xor
inc
aas
fcoms
xchg
lds
pop
std
push
mov
lahf
jle
jbe
mov
pusha
sub
and
popa
xor
or
mov
jne
out
push
xor
xchg
mov
stos
in
jp
iret
stos
jmp
cld
out
test
fxch
pop
or
sarl
pusha
jle
outsl
adc
les
mov
in
lods
mov
int
add
pop
insl
fwait
inc
xchg
les
cli
dec
ss
lock
add
cmpsb
jb
inc
fdivrs
testl
mov
arpl
sbb
mov
pop
lret
orl
xlat
sbb
cmc
stos
jo
orb
mov
daa
movsb
mov
fildl
std
cmp
add
dec
int3
push
mov
aaa
adc
or
inc
fldcw
lret
daa
out
mov
add
mov
xlat
movsb
cmpl
jmp
imul
push
pop
repz
pop
push
push
cwtl
jecxz
inc
pop
out
and
sarl
xor
addb
ret
fsubrl
sbb
xchg
mov
clc
or
mov
pop
push
jecxz
stos
xchg
imul
push
iret
data16
xor
push
aam
sbb
int
dec
lahf
loop
dec
xchg
aam
sahf
mov
fldenv
iret
adc
push
push
dec
mov
jo
movsb
inc
xchg
das
xchg
or
dec
sbb
loopne
pop
andl
outsl
test
pusha
mov
mov
xchg
shrb
fnsave
adc
sub
test
xchg
dec
cmc
lcall
aad
jbe
ljmp
and
mov
adc
lret
out
fcomps
cli
jp
test
adc
shll
xor
stos
or
movsl
mov
roll
je
loopne
pop
push
add
cmp
push
add
es
hlt
adc
pop
cmp
outsl
pop
mov
mov
stos
popf
cmpsl
adc
pop
push
es
lret
lods
mov
lods
lret
cmp
test
in
mov
lret
xchg
add
in
cmp
test
dec
push
test
roll
stos
shrb
pop
pop
push
ds
loopne
cwtl
or
or
pop
fwait
dec
xchg
out
repnz
mov
sub
aaa
loopne
popf
inc
mov
in
scas
mov
fcoml
mov
xchg
pusha
sbb
add
and
pop
clc
jae
xchg
in
sbb
outsl
in
sbbl
in
mov
or
dec
pop
ss
mov
jl
sbb
xchg
push
jns
xor
sbb
jnp
fwait
ja,pn
jmp
and
ljmp
insb
lcall
inc
pop
pop
jno
jecxz
adc
imul
mov
mov
scas
arpl
subb
fwait
adcb
daa
xor
mov
cmp
jl
jnp
aam
outsb
pop
aas
mov
mov
test
adc
aas
shlb
test
mov
mov
xchg
xor
inc
and
xchg
adc
push
pop
faddl
icebp
cmpsl
sub
or
adc
fdivr
fsubp
mov
xor
and
out
insb
sub
inc
mov
jle
mov
dec
lret
mov
jns
into
jp
ja
lret
lods
popl
mov
cmp
loop
push
fisttpll
jle
mov
clc
mov
bound
mov
fsubs
jg
mov
dec
fs
and
scas
movsl
mov
jmp
imul
lock
and
push
lahf
int3
jne
insb
jae
fisubl
cld
cmpsb
or
mov
js
pop
and
xor
lcall
jnp
jge
in
mov
lahf
sbb
jne
aam
aad
mov
stos
das
jne
mov
mov
stos
sbb
andb
sbb
fs
jg
mov
outsl
xor
xor
outsb
cltd
push
outsb
xor
ljmp
stos
cmp
add
test
sahf
inc
adc
out
mov
cli
sbb
jb
in
inc
lcall
insb
je
and
mov
add
mov
mov
xor
and
mov
sbb
out
lea
nop
sbb
orb
pop
stc
sub
adc
aam
and
into
xor
test
jl
xor
adc
jl
pop
test
cmp
inc
out
imul
mov
mov
repz
inc
imul
xor
xor
jne
cmpsl
pusha
xchg
fstpt
adc
fsubrs
add
gs
xchg
mov
and
dec
xchg
xchg
push
sahf
lret
or
clc
jnp
ret
mov
in
imul
jmp
in
clc
mov
add
leave
rcrb
leave
movsb
jbe
je
fwait
and
inc
dec
mov
mov
iret
xchg
add
aam
mov
inc
dec
test
xor
dec
lock
fimuls
test
nop
shll
movsb
adc
and
mov
lock
mov
loop
jbe
sub
loopne
dec
cmp
call
push
push
fnstcw
arpl
das
xchg
cwtl
jne
negl
xchg
mov
xchg
xor
ds
loop
mov
mov
push
dec
jnp
mov
sub
push
or
scas
mov
cmpsb
sub
dec
xor
shrb
mov
shll
sub
negl
in
mov
dec
sbb
sbb
push
lcall
jg
stos
pop
in
sub
lret
out
lret
icebp
out
xchg
adc
jbe
xchg
je
mov
add
sar
dec
add
mov
cli
push
nop
add
punpcklwd
aad
outsb
movd
xchg
bound
in
dec
dec
pop
xchg
lods
lcall
pop
cmp
pop
rcrl
jo
cmp
jno
stc
nop
pop
call
int3
je
or
sbb
pop
outsb
outsb
xor
shrb
jo
aad
sarb
xchg
dec
pop
lods
cld
int
loop
sbb
stc
mov
outsl
add
fmull
movsl
pop
xchg
and
cli
iret
and
pop
leave
add
dec
sub
notb
pushl
dec
xchg
repz
sub
sub
mov
addr16
js
pop
pop
negb
jnp
cmpsb
xlat
push
sbb
inc
push
mov
lods
jmp
shlb
iret
sub
fwait
mov
data16
mov
push
push
jecxz
jb
push
xchg
inc
into
stos
xor
dec
jle
sar
fnsave
dec
mov
test
enter
imul
fidivl
mov
add
dec
xchg
push
sub
dec
les
addb
das
fnstsw
push
adc
sbb
jne
mov
xor
xlat
and
fnsave
mov
sbb
rorl
call
fsubp
xlat
mov
sarb
scas
cmp
xor
and
fstp
fldl
mov
push
sub
xchg
jmp
in
jae
fisttpl
insb
inc
mov
lods
push
mov
xor
push
xlat
xchg
or
lods
mov
movsl
scas
jg
and
scas
xchg
dec
jae
aam
cmp
inc
sbb
call
mov
mov
mov
pop
dec
rorb
icebp
mov
int
mov
xchg
cmp
or
inc
push
rclb
nop
cmpsl
cmpsb
fs
mov
pop
jp
insl
out
scas
xchg
faddl
jbe
loope
and
ja
aad
fs
dec
sbb
sub
sbb
in
inc
pop
rcll
leave
and
xor
inc
cmc
push
pop
xchg
xchg
cwtl
jmp
dec
popf
xchg
pop
loope
sub
and
outsb
cmc
imul
mov
lock
pop
jecxz
and
add
stos
dec
pop
popa
add
sahf
mov
pop
stos
add
sbb
sahf
nop
mov
cmpl
adc
fstps
inc
iret
mov
mul
mov
mov
lret
icebp
test
dec
mov
sbb
sbb
xorb
arpl
jge
loop
shrb
sti
aas
pop
adc
movsl
pop
mov
stc
loope
cmpsl
ftst
mov
daa
test
or
divb
fcoms
pop
test
pop
add
outsl
mov
push
cmp
test
and
xchg
inc
jle
scas
cltd
ljmp
out
insl
rcll
dec
cmp
add
fsubrs
lahf
imulb
push
cmpb
jge
fiadds
ret
fimuls
test
xchg
int3
or
pop
out
leave
adc
mov
je
loope
add
popa
scas
fnstsw
inc
and
test
jo
push
push
sub
aas
sub
mov
flds
shrb
das
pop
iret
and
roll
dec
pop
xchg
lods
cmp
andb
out
int3
ret
jl
jmp
sub
cwtl
nop
loop
adc
sti
xor
push
inc
add
insl
cltd
push
jge
sarb
dec
inc
lds
addr16
add
adc
es
lds
call
mov
test
daa
and
icebp
xor
sbb
mov
sahf
enter
mov
cmp
lods
test
jl
mov
or
ds
add
rolb
pop
rclb
inc
xlat
out
sub
iret
clc
push
mov
test
out
inc
dec
rep
repz
cmpsl
cmp
das
negl
test
mov
adc
lret
mov
rol
cwtl
pop
push
lock
lcall
xchg
cmp
and
and
xchg
push
movsb
ss
icebp
test
inc
fwait
pop
push
loop
mov
and
rcrb
test
shlw
sub
lcall
sti
cs
repz
mov
pop
pop
inc
dec
mov
std
xchg
arpl
push
mov
cli
clc
fsubrp
pop
cs
xor
xor
iret
add
mov
sar
daa
ljmp
mov
adc
fwait
xor
cmp
popa
mov
sbb
loope
int3
sub
hlt
cmp
add
xchg
push
aaa
test
dec
frstor
jmp
inc
rolb
shrb
in
mov
mov
push
mov
and
sarb
dec
mov
std
sti
xor
nop
sbb
sub
pop
or
leave
xchg
inc
cmp
xchg
mov
xchg
dec
aas
inc
daa
les
mov
lret
xchg
pop
push
mov
outsb
lret
negl
aad
insb
fsubrs
les
addb
cwtl
in
cmp
xchg
jl
add
xchg
addr16
xor
dec
jo
loope
insb
rcrl
mov
pop
xchg
push
cli
cmp
aas
inc
jne
mov
mov
out
shlb
pop
fsubrl
mov
ljmp
ja
sub
test
mov
and
pop
push
jl
ds
into
sub
dec
xor
jle
push
movsl
imul
mov
xchg
shlb
jns
scas
or
in
movsb
sub
xchg
fidivrl
dec
mov
stos
inc
nop
lcall
enter
inc
sub
inc
movb
data16
call
xor
push
or
pop
js
dec
mov
fimuls
lock
cmp
sbb
xor
into
xchg
fmull
jnp
iret
ret
ja
sub
mov
dec
sub
sbb
mov
dec
cmpsl
lds
stos
jle
and
adc
mov
mov
inc
dec
dec
add
lahf
gs
jmp
push
loop
pop
sub
leave
jle
sub
add
lret
push
add
dec
push
rcrb
cmpl
fucomip
cmpsl
sub
sub
xchg
push
inc
test
mov
jo
pushf
mov
outsl
or
push
and
mov
cmp
lock
dec
orb
and
and
push
stc
and
test
dec
jg
loop
insl
fstpl
push
push
es
sub
mov
mov
jp
adcl
xchg
test
push
or
es
mov
or
mov
xchg
mov
jns
dec
adc
dec
and
and
mov
push
dec
js
lret
mov
pop
mov
jmp
mov
lret
mov
xchg
fs
orb
pop
sbb
addb
in
sbb
ja
mov
dec
daa
add
in
movsl
sti
in
cmp
mov
add
sti
into
cwtl
cmp
cmp
repz
in
xor
dec
outsl
imul
shll
sti
dec
and
and
outsb
loopne
cld
mov
shrl
and
in
ficompl
fistpll
outsb
jge
cmp
push
jo
movsl
enter
iret
mov
add
xor
ret
xor
imul
data16
notl
xchg
ret
cli
je,pn
stos
leave
xchg
push
inc
and
mov
out
mov
add
pushf
ret
cld
cmpsb
mov
cli
jg
sub
int3
scas
xchg
jmp
das
cmpsb
repz
mov
pushf
mov
loopne
or
lods
inc
scas
sbb
pop
and
outsl
mul
push
cmp
cmp
mov
daa
jne
test
pop
fisttps
ljmp
push
xor
mov
loopne
sub
nop
in
ljmp
aam
ljmp
dec
cmp
sbb
adc
paddw
mov
cld
and
push
lock
sub
enter
stc
gs
xchg
jmp
and
shr
cmp
std
xchg
dec
ds
sub
pusha
test
aaa
mov
int3
test
mov
cmpl
lock
adc
sbb
test
movsl
subb
dec
xchg
mov
jo
movsl
inc
mov
xor
and
data16
jbe
ss
out
adc
xchg
mov
add
lock
in
insl
sbbb
popa
sbbl
adc
call
jge
lods
loopne
outsl
jne
push
jp
sub
out
add
adc
mov
leave
adc
stos
stos
cmc
jg
and
nop
mov
in
cmp
pop
mov
shrb
jg
cld
mov
mov
lock
repz
pushl
call
sbb
test
add
repnz
test
or
shrl
lock
mov
xor
aad
daa
xchg
adc
pop
adc
popa
inc
mov
sbb
sub
push
loope
dec
add
adc
shlb
push
dec
lea
addr16
push
cmpsb
scas
cmpsl
mov
mov
adcb
rcrb
ds
lret
setns
leave
mov
les
insl
jl
jg
and
jno
ja
or
push
push
cmp
sbb
inc
or
scas
dec
or
push
dec
jg
cmp
xchg
in
addl
lock
pop
lock
das
xor
push
cmp
dec
scas
jg
cltd
jg
pop
xchg
jb
shrb
mov
dec
or
push
fdivrp
push
cmp
adc
loope
aam
mov
dec
and
sbb
rcr
sub
loop
jge
jnp
push
test
add
pop
rcll
sbb
adc
jp
loopne
and
aas
adc
mov
xchg
xchg
test
lea
push
xchg
lds
lock
imul
insl
add
je
pushl
ret
xorl
cwtl
cmp
rcl
push
sbb
pop
hlt
adc
add
push
cmp
dec
pop
orl
sub
fmull
fsts
repz
adc
bound
cs
aaa
pop
pop
push
sub
pop
mov
dec
daa
idivb
sub
loop
push
mov
jp
cmp
pop
lcall
pop
jmp
ss
adc
mov
pusha
xlat
and
mov
push
jo
je
fistps
xchg
pushf
fstl
pop
sub
xor
and
je
scas
out
adc
hlt
lret
xchg
sbb
or
dec
popf
lahf
aas
cmpsb
rolb
or
sbb
jo
mov
pop
and
add
mov
sbb
jb
mov
mov
sbb
loope
lock
or
push
ret
add
sub
and
mov
jmp
in
adc
cmp
and
adc
pop
fdivrl
dec
xchg
ja
cld
mov
in
mov
adc
xchg
jno
data16
xchg
mov
loop
xor
sar
inc
push
je
fmuls
inc
rep
jne
push
lock
call
xor
fwait
lret
fdivs
nop
jp
lret
leave
js
jne
jns
inc
xor
add
nopl
loop
pop
dec
sahf
jnp
pop
insb
sbb
add
sbb
cli
sub
addl
push
rcrb
adc
add
or
xor
xchg
jp
loopne
adc
jl
call
or
mov
stos
cli
cmp
test
pop
ljmp
cmp
add
pop
ja
adc
js
lcall
xor
int
inc
jl
lcall
je
scas
fcmovnu
cmpsl
or
cmpsl
dec
int3
inc
idivb
lods
fdivl
fistpl
call
push
push
xchg
push
adc
add
mov
lea
pop
in
jg
insl
jmp
sarb
mov
dec
inc
aas
ds
leave
iret
iret
test
push
mov
outsl
cmp
pop
push
xchg
bound
cmp
mov
int
jns
cli
loope
movsb
push
ficompl
