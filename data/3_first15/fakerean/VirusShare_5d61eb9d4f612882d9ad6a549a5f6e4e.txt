add
add
jne
cmpl
jne
mov
lea
mov
call
mov
andl
mov
mov
mov
push
call
test
pop
je
push
pushl
mov
call
mov
mov
mov
mov
mov
mov
mov
movl
mov
mov
movl
mov
push
mov
call
push
call
incl
pop
pop
pop
leave
ret
push
mov
push
lea
push
mov
call
test
je
pop
pop
ret
andl
mov
call
push
call
pop
xor
jmp
mov
test
je
push
call
pop
mov
test
je
mov
push
call
andl
mov
test
je
mov
push
call
andl
mov
test
je
cmpl
jge
call
add
jmp
push
lea
sub
mov
xor
mov
mov
test
push
mov
je
mov
mov
push
push
lea
push
xor
lea
push
mov
mov
movl
movl
mov
mov
mov
push
call
cmp
je
push
lea
push
mov
call
mov
imul
testb
je
mov
add
push
call
test
pop
je
pop
pop
mov
mov
xor
pop
call
add
leave
ret
push
mov
and
sub
push
push
push
mov
testb
je
pop
pop
pop
mov
pop
ret
mov
mov
mov
mov
mov
xor
inc
lea
call
lea
push
lea
push
push
mov
call
mov
pushl
neg
call
mov
pushl
mov
add
neg
call
mov
add
cmpl
jne
pushl
mov
mov
push
call
test
jne
xor
push
push
mov
mov
push
call
jmp
push
mov
and
sub
push
push
lea
mov
call
mov
cmp
jl
mov
add
cmp
mov
jg
mov
mov
cmp
jl
mov
lea
cmp
jg
mov
xor
cmp
mov
mov
jne
mov
cmp
jne
mov
push
push
mov
mov
mov
mov
mov
call
pop
pop
mov
pop
ret
push
mov
push
mov
andl
push
mov
lea
call
mov
mov
push
call
push
lea
call
pop
leave
ret
push
mov
sub
add
enter
mov
mov
push
push
push
mov
mov
mov
call
test
je
mov
xor
push
mov
lea
mov
call
mov
mov
push
call
mov
mov
push
mov
call
cmp
je
mov
cmp
lea
mov
mov
movl
movl
mov
mov
jne
mov
mov
push
lea
push
push
call
cmp
jne
cmp
jne
cmp
je
mov
call
test
jne
pushl
mov
pushl
mov
pushl
call
testb
mov
jne
testb
jne
lea
call
mov
mov
pop
pop
xor
pop
call
leave
ret
mov
add
push
call
test
pop
jne
push
call
pop
jmp
mov
mov
mov
mov
push
lea
mov
call
lea
push
mov
call
test
pop
js
pushl
mov
pushl
call
mov
lea
mov
call
cmp
jne
jmp
xor
jmp
cmp
jne
mov
lea
mov
mov
call
pushl
mov
mov
xor
cmp
sete
push
push
call
aaa
sub
decl
decl
test
mov
adc
lahf
cmp
jne
mov
push
push
push
mov
call
pushl
pushl
call
pop
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
push
mov
push
push
mov
mov
test
mov
je
jmp
lea
mov
cmp
je
test
push
jne
mov
mov
call
test
je
mov
push
push
call
mov
mov
test
je
test
mov
je
cmp
je
cmp
je
test
jne
mov
cmpl
mov
lea
mov
je
lea
push
mov
mov
push
push
push
lea
push
add
push
call
add
mov
xor
mov
mov
mov
mov
mov
lea
push
push
push
push
lea
push
lea
push
lea
movl
call
add
test
jne
add
cmpl
je
mov
mov
lea
push
push
push
push
lea
call
add
test
jne
mov
cmp
je
cmp
je
xor
mov
mov
mov
jmp
addl
mov
mov
mov
mov
add
movzbl
add
movzbl
lea
push
lea
call
add
add
mov
movzbl
lea
push
lea
call
mov
mov
xor
mov
mov
mov
mov
lea
push
mov
push
push
push
push
lea
push
lea
push
lea
push
mov
call
add
test
jne
mov
add
cmp
jl
mov
mov
cmp
je
cmp
je
cmp
je
mov
mov
mov
push
call
cmpl
je
mov
cmpl
je
cmp
mov
mov
jne
mov
pop
pop
pop
pop
add
ret
mov
lea
mov
test
jne
or
mov
mov
cmp
jne
pop
mov
pop
pop
pop
add
ret
push
mov
sub
andl
push
mov
push
lea
push
lea
push
mov
push
call
mov
cmp
je
cmp
je
cmp
je
cmp
je
pop
pop
leave
ret
mov
cmpl
mov
jge
push
mov
call
mov
lea
push
lea
push
lea
push
lea
push
add
push
lea
movl
call
add
jmp
lea
push
pushl
lea
call
test
pop
pop
je
mov
cmpb
jne
mov
mov
mov
mov
jmp
push
mov
mov
call
pop
jmp
mov
cmpl
jge
testb
je
pushl
pushl
call
ret
push
pushl
mov
call
mov
orl
cmpb
pop
jne
jmp
mov
test
je
mov
mov
mov
xor
ret
mov
mov
mov
add
test
mov
je
test
je
xor
ret
test
je
mov
push
push
call
jmp
push
mov
mov
call
mov
mov
add
cmp
ja
jmp
flds
fstps
mov
pop
ret
mov
mov
jmp
nop
iret
cmpsb
add
adc
cmpsb
add
adc
cmpsb
add
adc
cmpsb
add
adc
cmp
xchg
mov
cmp
lods
mov
cmp
mov
mov
in
sub
andl
push
mov
push
lea
add
push
movl
movl
call
mov
push
call
test
je
andl
lea
push
push
call
testb
pop
pop
je
mov
add
push
call
test
pop
je
pop
xor
pop
leave
ret
mov
cmp
je
push
pushl
call
mov
ret
mov
add
mov
mov
mov
mov
jmp
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
push
je
cmp
je
cmp
je
cmp
je
cmp
je
xor
mov
mov
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
lea
test
je
mov
mov
push
call
mov
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
add
adc
jne
mov
test
je
lea
jmp
mov
cmp
jne
mov
cmp
add
mov
cmp
jne
mov
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
jmp
mov
decl
mov
je
ret
xor
inc
mov
mov
push
call
xor
jmp
push
mov
mov
call
mov
mov
test
je
add
mov
cmpl
jne
push
mov
mov
mov
mov
mov
pop
mov
mov
mov
xor
inc
pop
ret
int3
mov
lea
mov
lock
inc
ret
mov
ret
mov
orl
mov
ret
push
mov
push
test
push
jne
mov
mov
push
push
push
call
test
mov
mov
mov
js
mov
test
je
mov
mov
mov
pop
leave
ret
mov
test
je
mov
mov
cmp
je
addl
mov
mov
test
jne
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
sub
add
mov
mov
test
je
mov
mov
mov
mov
andl
xor
jmp
push
mov
push
push
push
mov
test
je
mov
test
je
mov
mov
mov
cmpl
je
push
mov
mov
lea
push
lea
push
push
movl
movl
call
add
mov
pop
xor
inc
pop
leave
ret
push
mov
push
xor
cmp
mov
jne
push
push
call
cmp
pop
je
movl
movl
movl
movl
movl
mov
xor
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
je
mov
push
call
mov
push
pushl
push
call
mov
mov
push
call
mov
pop
pop
pop
ret
xor
jmp
push
mov
test
je
mov
push
call
mov
test
mov
jne
cmpl
jbe
xor
mov
mov
push
call
inc
cmp
jb
cmpl
ja
pop
ret
xor
mov
mov
incl
call
inc
cmp
jae
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
xor
test
push
je
mov
mov
mov
mov
mov
test
jne
add
lea
xor
test
je
mov
test
jle
mov
test
jle
mov
add
mov
imul
cltd
idiv
mov
sub
mov
mov
mov
test
jg
test
je
orb
add
add
push
mov
mov
call
mov
test
jne
pop
pop
mov
pop
pop
pop
ret
mov
test
je
mov
push
push
call
mov
jmp
push
mov
mov
cmp
push
push
je
mov
cmp
je
mov
pushl
pushl
pushl
pushl
pushl
pushl
call
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
call
add
mov
pop
pop
pop
ret
push
mov
sub
push
mov
cmpb
jne
push
push
call
xor
inc
test
pop
jne
mov
test
je
mov
lea
push
push
push
call
test
js
cmpb
je
xor
pop
pop
leave
ret
mov
call
test
je
pushl
mov
push
call
jmp
push
mov
push
lea
push
call
andl
push
lea
call
lea
push
push
call
mov
test
je
andl
test
movl
mov
je
mov
mov
mov
mov
mov
pushl
mov
push
push
call
testb
jne
testb
jne
lea
call
pop
jmp
push
mov
push
mov
mov
lea
push
pushl
push
call
test
js
cmpl
je
xor
inc
leave
ret
mov
mov
push
lea
push
push
push
mov
call
and
neg
sbb
not
and
pop
leave
ret
xor
leave
ret
push
mov
movl
movl
cmpl
je
lea
push
call
pop
testb
je
push
call
pop
mov
pop
ret
push
push
mov
movzbl
flds
movzwl
fldl
fmul
fxch
shr
push
movzbl
and
lea
mov
shr
lea
shl
call
sub
fmull
call
sub
mov
and
add
pop
sar
pop
xor
pop
ret
push
mov
mov
call
add
pop
ret
push
mov
sub
push
push
pushl
xor
mov
lea
mov
call
mov
cmp
mov
je
lea
push
push
push
add
push
call
mov
and
jne
cmp
jne
pushl
lea
call
mov
cmp
je
mov
push
push
pushl
lea
push
call
mov
cmp
mov
je
mov
cmp
je
lea
add
mov
push
pushl
push
push
pushl
pushl
pushl
push
push
call
test
jne
test
je
add
add
mov
push
push
call
xor
lea
call
lea
call
lea
call
mov
pop
pop
pop
leave
ret
xor
jmp
mov
jmp
xor
jmp
push
mov
push
test
je
mov
andl
lea
push
push
push
call
mov
test
je
mov
mov
mov
test
jle
push
push
push
push
pop
mov
mov
mov
mov
test
je
incl
mov
test
jne
andl
decl
je
dec
mov
jne
pop
pop
pop
mov
push
call
leave
ret
add
jmp
push
call
push
call
pop
pop
jmp
push
cmpl
je
test
je
mov
test
lea
jne
mov
test
jns
push
mov
call
cmpl
jne
xor
test
jne
mov
mov
call
call
lea
push
push
call
call
lea
repz
add
push
push
push
call
add
pop
ret
mov
jmp
push
mov
push
push
xor
cmp
je
cmp
jle
push
push
push
mov
lea
push
push
push
call
mov
mov
mov
add
and
jne
test
jne
pushl
lea
call
test
jne
mov
test
mov
je
mov
mov
lea
push
call
mov
lea
push
pushl
push
call
test
jne
lea
push
mov
call
pushl
push
call
test
pop
pop
jne
lea
push
mov
call
pushl
push
call
test
pop
pop
jne
mov
lea
call
mov
mov
xor
lea
call
pop
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
test
je
cmpb
je
push
push
mov
movsbl
cmp
jle
mov
cmp
lea
jne
mov
test
jne
test
je
mov
cmp
jbe
mov
and
mov
movb
mov
mov
mov
add
cmpb
jne
xchg
cmp
sub
cmp
ja
movzbl
jmp
mov
push
push
push
or
mov
call
jmp
mov
sub
cmpl
jg
mov
sub
jmp
push
push
push
push
call
test
jne
or
inc
add
add
or
mov
call
jmp
mov
sahf
into
cmp
mov
cmp
mov
mov
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
mov
push
push
mov
pushl
lea
mov
mov
call
cmpl
je
mov
lea
jl
inc
add
testb
je
push
call
test
pop
mov
je
mov
cmp
je
cmp
je
movb
mov
mov
cmp
je
cmp
je
movl
mov
mov
push
add
push
lea
push
call
mov
test
mov
je
mov
add
call
test
je
mov
add
cmp
add
or
push
mov
add
call
mov
test
pop
je
mov
test
jne
mov
call
mov
test
mov
jne
mov
test
jne
mov
call
test
jne
mov
test
jne
lea
call
mov
movl
mov
movl
movl
mov
movl
mov
movl
mov
movl
movb
mov
movl
mov
mov
mov
movl
mov
movl
movl
mov
mov
xor
inc
cmp
je
cmp
je
mov
mov
movl
movl
mov
lea
push
mov
mov
call
cmpl
jne
mov
mov
cmp
mov
jne
mov
mov
mov
orw
cmpb
jne
mov
lea
call
mov
pop
pop
pop
ret
cmpb
je
mov
jmp
mov
push
call
mov
test
je
cmpb
jne
mov
mov
mov
mov
jmp
mov
orl
mov
mov
mov
mov
mov
jmp
mov
movl
movl
mov
movl
mov
movl
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
cmp
je
cmp
je
cmp
je
cmp
jne
mov
cmp
jne
mov
cmp
add
push
or
adc
jne
mov
test
je
lea
test
je
mov
mov
push
call
mov
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
add
mov
mov
xor
pop
ret
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
lea
jmp
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
add
jne
xor
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
cmp
je
mov
test
push
mov
push
je
mov
cmp
je
mov
add
test
jne
mov
movl
mov
test
jns
push
push
push
call
pop
pop
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
movl
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
add
push
call
mov
mov
xor
jmp
push
mov
push
mov
push
pushl
pushl
call
add
test
push
push
pushl
jl
call
add
test
jg
push
push
pushl
call
add
test
mov
jge
pop
pop
ret
call
add
test
jl
push
push
pushl
call
add
test
jl
mov
jmp
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
push
push
push
mov
test
mov
jne
test
jne
xor
cmp
setne
cmp
mov
jb
mov
shr
imul
add
cmp
movl
jbe
lea
imul
add
cmp
mov
ja
mov
mov
mov
mov
mov
push
push
push
call
mov
mov
mov
add
test
je
cmp
jg
add
shr
mov
mov
mov
mov
mov
sub
add
add
test
jg
mov
add
imul
add
lea
mov
mov
mov
cmp
ja
mov
cmpl
jne
mov
test
mov
jne
test
jne
test
jg
jne
cmpl
mov
movl
jne
mov
mov
mov
mov
mov
add
mov
add
cmp
jbe
jmp
imul
lea
add
cmp
jae
mov
sub
mov
mov
mov
cmp
jbe
mov
mov
mov
mov
mov
push
push
push
call
add
test
jle
mov
test
je
cmp
mov
mov
jg
mov
shr
mov
mov
mov
mov
sub
add
add
test
jg
mov
mov
sub
sub
cmp
mov
ja
mov
add
add
cmp
mov
jb
pop
pop
pop
pop
add
ret
mov
push
push
push
call
mov
add
jmp
cmp
ja
mov
lea
cmpl
jne
mov
test
mov
jne
test
jne
test
jl
jne
test
movl
jne
mov
mov
mov
mov
sub
mov
sub
cmp
ja
mov
jmp
mov
push
push
push
call
mov
add
jmp
test
je
push
push
call
mov
add
jmp
cmp
ja
test
je
cmp
mov
mov
jg
mov
shr
jmp
lea
mov
mov
mov
mov
mov
mov
sub
add
add
test
jg
mov
mov
add
movl
sub
jmp
test
je
push
push
call
mov
add
jmp
mov
mov
imul
add
cmpl
je
mov
mov
mov
sub
sub
cmp
mov
jge
test
jle
mov
sub
cmpl
jg
shr
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
add
mov
mov
sub
test
jg
mov
mov
sub
sub
sub
cmp
jl
test
jg
cmp
jle
mov
mov
push
push
mov
xor
div
push
push
push
call
add
cmp
jle
mov
sub
mov
mov
xor
div
mov
jmp
mov
mov
mov
mov
jmp
mov
mov
mov
mov
mov
add
movl
sub
jmp
mov
jmp
mov
mov
jmp
mov
jmp
mov
jmp
lea
cmp
jae
mov
mov
sub
mov
mov
lea
cmp
jbe
mov
mov
mov
mov
mov
push
push
push
call
add
test
jle
mov
test
je
cmp
mov
mov
jg
mov
shr
mov
mov
mov
mov
sub
add
add
test
jg
mov
mov
sub
sub
cmp
mov
ja
mov
add
add
cmp
mov
jb
pop
pop
pop
pop
add
ret
mov
mov
mov
mov
jmp
mov
shr
imul
lea
mov
add
mov
push
add
push
mov
push
call
mov
mov
lea
push
push
sub
push
call
mov
mov
mov
sub
push
sub
push
push
call
add
mov
jmp
mov
mov
mov
mov
jmp
mov
jmp
mov
mov
push
sub
push
call
mov
mov
add
jmp
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
mov
mov
jne
test
jne
ret
test
je
push
push
call
add
ret
mov
ret
or
ret
push
mov
sub
mov
xor
mov
push
push
mov
push
mov
xor
push
call
test
je
mov
push
lea
mov
call
push
lea
push
mov
call
mov
mov
cmp
je
lea
lea
push
mov
mov
movl
movl
mov
adc
inc
add
push
call
mov
test
js
lea
push
push
call
pop
pop
testb
je
mov
add
push
call
test
pop
je
mov
cmp
je
mov
push
call
mov
pop
mov
pop
xor
pop
call
leave
ret
testb
je
jmp
push
mov
push
push
mov
mov
call
test
js
mov
xor
cmp
je
cmp
je
mov
cmp
mov
lea
push
inc
add
pop
leave
ret
mov
cmp
mov
lea
ja
lea
jmp
push
mov
sub
push
mov
test
je
mov
mov
andl
andl
push
lea
lea
movl
mov
call
mov
test
je
mov
push
pushl
push
call
mov
lea
call
mov
pop
leave
ret
push
mov
sub
push
xor
push
lea
mov
call
lea
push
push
call
test
pop
pop
js
push
push
lea
lea
mov
movl
movl
mov
mov
mov
call
mov
cmp
mov
je
mov
lea
push
push
push
call
test
pop
jne
pushl
lea
call
mov
pushl
mov
push
call
mov
mov
mov
mov
mov
mov
lea
mov
mov
call
lea
call
lea
call
add
pop
leave
ret
push
mov
sub
mov
xor
mov
mov
mov
mov
mov
mov
push
mov
lea
xor
push
lea
mov
mov
movl
movl
mov
data16
dec
out
add
test
js
mov
cmpl
push
mov
jge
push
lea
mov
mov
call
push
lea
call
lea
push
lea
push
call
test
pop
pop
jne
pushl
mov
pushl
call
pop
pop
mov
mov
mov
push
call
test
jne
mov
push
mov
call
lea
push
lea
push
pushl
call
add
test
jne
pushl
mov
pushl
pushl
call
pushl
mov
call
pop
lea
call
lea
call
testb
jne
testb
jne
mov
pop
mov
pop
xor
pop
call
leave
ret
mov
add
call
jmp
push
mov
call
testb
je
push
call
pop
mov
pop
ret
push
mov
mov
mov
and
dec
je
dec
dec
je
movzbl
and
cmp
je
mov
call
test
je
push
push
call
test
pop
je
movl
mov
test
je
mov
call
mov
movl
xor
inc
pop
pop
ret
xor
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
push
push
je
mov
mov
mov
lea
cmp
je
mov
add
test
jne
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
pop
mov
xor
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
movl
movl
xor
mov
mov
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
insl
or
adc
insb
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
mov
ret
push
mov
lea
mov
push
call
test
je
cmpl
je
pushl
lea
mov
push
call
testb
jne
push
lea
push
mov
call
pop
pop
ret
mov
test
je
mov
mov
mov
mov
push
call
xor
ret
push
mov
and
push
mov
push
xor
movl
mov
call
pushl
mov
pushl
mov
pushl
mov
pushl
xor
push
pushl
cmp
pushl
sete
mov
mov
mov
mov
mov
push
push
call
pop
mov
pop
mov
pop
ret
testb
push
mov
movl
je
push
call
pop
mov
pop
ret
push
mov
call
testb
je
push
call
pop
mov
pop
ret
push
push
mov
mov
test
movl
movl
movl
movl
movl
jne
lea
call
lea
call
lea
mov
test
mov
jne
test
jne
mov
test
mov
je
lea
push
call
test
pop
jne
push
call
pop
pop
pop
ret
mov
cmpl
je
andl
xor
ret
push
mov
push
mov
cmpl
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
mov
je
add
push
call
xor
mov
mov
mov
pop
pop
ret
push
push
push
mov
call
test
pop
je
mov
movl
andl
andl
add
test
je
mov
mov
test
je
pushl
mov
push
push
call
mov
test
js
mov
pop
pop
ret
xor
jmp
push
mov
push
push
push
xor
cmp
mov
mov
jne
push
mov
push
lea
call
pushl
lea
push
push
call
add
cmp
pop
je
pushl
pushl
call
cmp
pop
pop
jne
mov
mov
mov
lea
mov
lea
call
lea
call
pop
leave
ret
push
call
pop
push
lea
call
jmp
push
lea
sub
mov
xor
mov
push
push
mov
mov
xor
mov
cmp
push
jne
mov
add
je
cmp
movl
jne
mov
mov
lea
push
pushl
lea
mov
mov
movl
movl
mov
mov
mov
push
call
cmp
mov
je
mov
lea
push
call
mov
lea
call
mov
cmp
jne
testb
je
mov
add
push
call
test
pop
je
xor
inc
lea
call
mov
mov
pop
pop
xor
pop
call
add
leave
ret
mov
call
mov
mov
mov
mov
mov
mov
add
call
push
pushl
call
pushl
mov
push
pushl
mov
call
mov
mov
mov
push
push
call
mov
test
jne
xor
cmp
jne
mov
testb
je
mov
mov
mov
mov
cmp
jne
add
mov
push
push
call
test
jne
testb
movl
je
mov
add
push
call
test
pop
jne
jmp
call
cmp
je
mov
pushl
mov
push
call
test
pop
pop
js
mov
lea
mov
call
jmp
add
or
test
jmp
push
mov
push
push
push
xor
push
lea
mov
call
lea
push
push
push
call
add
test
js
pushl
mov
lea
push
push
call
mov
mov
add
lea
push
push
call
mov
cmp
jne
push
pushl
mov
call
pop
pop
mov
lea
call
add
pop
leave
ret
push
mov
mov
sub
push
push
push
mov
xor
mov
cmp
je
cmp
je
mov
orb
lea
mov
mov
call
push
mov
call
mov
andl
pop
lea
push
mov
lea
call
andl
push
lea
call
mov
lea
push
pushl
pushl
pushl
push
call
test
js
pushl
pushl
call
andl
test
pop
pop
je
push
lea
mov
call
mov
lea
push
pushl
pushl
push
call
test
js
push
call
test
pop
je
pushl
mov
pushl
mov
mov
push
push
call
test
mov
je
mov
push
call
cmpl
je
mov
mov
lea
push
push
call
pushl
pushl
pushl
call
add
test
je
mov
mov
mov
mov
lea
mov
call
lea
call
lea
call
lea
call
pushl
call
pop
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
xor
mov
push
mov
cmpl
jne
push
push
mov
push
lea
lea
mov
push
push
call
test
je
cmp
jae
push
lea
lea
call
pop
pop
mov
xor
pop
call
leave
ret
push
add
push
call
jmp
push
mov
mov
call
add
push
pushl
call
xor
pop
ret
push
mov
push
push
push
mov
push
mov
mov
push
mov
imul
lea
push
add
pushl
push
call
mov
lea
push
pushl
push
call
cmpl
jl
cmpl
jg
mov
lea
push
pushl
push
call
test
mov
jne
mov
flds
mov
fstps
mov
mov
test
pop
pop
mov
pop
je
cmp
je
fldz
fcomps
fnstsw
test
jp
xor
inc
leave
ret
mov
jmp
xor
leave
ret
push
mov
push
push
mov
push
push
xor
cmp
mov
je
inc
add
push
push
push
add
push
call
and
jne
inc
add
test
cld
lea
call
mov
cmp
je
inc
add
push
push
call
mov
mov
push
call
mov
pop
pop
leave
ret
mov
mov
push
push
push
call
mov
xor
cmp
je
push
push
mov
call
mov
orl
mov
movl
mov
pop
ret
sub
push
push
push
push
mov
mov
mov
mov
mov
sub
lea
mov
mov
mov
mov
sub
sub
add
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
shl
mov
mov
mov
movl
mov
shl
sub
mov
mov
sub
mov
nop
cmp
jae
movzbl
add
mov
shl
add
add
mov
add
movzbl
shl
mov
add
add
mov
and
mov
mov
shr
movzbl
movzbl
shr
sub
test
je
lea
test
je
shr
and
mov
jne
cmp
jb
mov
mov
and
mov
mov
shr
movzbl
movzbl
shr
sub
test
je
shr
and
cmp
mov
jb
mov
mov
mov
shl
sub
sub
and
mov
mov
add
mov
mov
sub
shr
cmp
ja
mov
sub
movzbl
add
add
mov
mov
add
add
mov
movzbl
add
add
sub
cmp
mov
ja
test
je
mov
add
add
cmp
mov
ja
mov
jmp
test
jne
mov
mov
mov
mov
shl
shr
sub
and
add
mov
mov
mov
shr
movzbl
movzbl
shr
sub
test
jne
add
shr
mov
cmp
jae
cmp
jae
mov
jmp
mov
movzbl
add
add
mov
mov
movzbl
shl
add
mov
shl
add
add
add
jmp
cmp
jb
mov
mov
shl
sub
and
add
shr
sub
jmp
mov
mov
add
jmp
mov
sub
cmp
mov
ja
mov
add
mov
mov
mov
test
jne
mov
sub
mov
add
mov
cmp
jb
cmp
jbe
lea
mov
mul
shr
add
jmp
lea
movzbl
add
add
mov
movzbl
add
add
mov
movzbl
add
add
sub
sub
mov
jne
test
je
mov
add
add
cmp
mov
jbe
mov
mov
add
mov
jmp
mov
lea
test
jne
mov
movzwl
mov
shl
mov
sub
and
add
mov
mov
shr
movzbl
movzbl
shr
sub
test
mov
jne
jmp
mov
movzbl
add
mov
mov
shl
add
add
cmp
jae
jmp
cmp
jb
sub
mov
add
mov
cmp
jae
sub
mov
add
add
subl
mov
jne
mov
sub
jmp
test
je
mov
movl
mov
mov
shr
sub
add
add
add
sub
mov
mov
shl
lea
sub
sub
and
mov
mov
lea
mov
mov
sub
add
add
mov
mov
mov
mov
pop
pop
pop
mov
pop
add
ret
sub
add
mov
sub
add
cmp
jb
mov
jmp
mov
add
mov
movzbl
mov
shl
add
add
jmp
sub
jmp
lea
mov
add
add
subl
mov
jne
mov
sub
jmp
push
mov
sub
andl
push
mov
push
mov
push
push
lea
push
lea
push
pushl
call
add
test
je
mov
andl
lea
push
movl
movl
mov
push
call
test
js
mov
mov
lea
call
testb
mov
jne
testb
jne
mov
test
jne
mov
pop
pop
leave
ret
push
mov
push
push
mov
lea
lea
mov
push
call
test
je
mov
test
je
push
pushl
call
xor
pop
pop
pop
ret
cmpb
je
pushl
mov
pushl
mov
push
call
test
jne
jmp
push
mov
push
push
mov
mov
test
je
cmpb
push
mov
je
mov
push
mov
call
test
je
andl
push
lea
call
mov
lea
push
push
call
pushl
andl
mov
lea
call
push
pushl
pushl
call
lea
call
lea
call
xor
pop
pop
leave
ret
push
mov
mov
cmpl
push
push
push
mov
jge
testb
mov
jne
test
jne
testb
jne
mov
xor
cmp
je
testb
jne
mov
cmp
mov
jne
mov
andl
test
je
mov
push
call
mov
andl
test
je
mov
push
call
cmpl
jne
testb
jne
testb
jne
test
jne
andl
cmpl
mov
mov
je
testb
je
testw
je
lea
call
lea
cmpl
je
mov
cmpl
jge
lea
test
je
lea
pushl
mov
mov
lea
add
push
push
call
xor
mov
call
push
mov
call
cmpl
je
push
lea
call
cmpl
jne
mov
test
je
lea
test
je
lea
pushl
mov
push
push
push
call
lea
xor
call
lea
xor
call
xor
pop
pop
pop
pop
ret
mov
mov
jmp
xor
jmp
push
mov
push
push
mov
push
mov
test
je
mov
push
mov
push
lea
lea
cmp
je
mov
mov
test
je
decl
jne
mov
movl
call
pushl
call
pop
add
cmp
jne
push
push
push
push
mov
call
mov
cmp
jne
push
call
pop
pop
pop
mov
add
call
pop
leave
ret
push
mov
sub
mov
xor
mov
push
mov
movzwl
cmp
push
mov
jle
sub
je
dec
je
dec
je
dec
jne
pushl
push
call
xor
mov
pop
xor
pop
call
leave
ret
pushl
mov
call
jmp
mov
test
jle
mov
test
jle
mov
mov
ret
andl
andl
ret
mov
cmp
je
cmp
je
cmp
je
xor
ret
xor
inc
ret
push
mov
push
push
push
xor
push
lea
mov
call
mov
lea
push
push
call
pushl
mov
add
mov
call
mov
cmp
je
push
mov
cmp
je
pushl
mov
push
push
push
push
call
add
lea
call
lea
call
mov
pop
pop
leave
ret
push
push
mov
mov
test
je
mov
push
call
mov
andl
test
je
mov
push
call
push
push
call
mov
call
push
mov
call
mov
push
push
call
pushl
mov
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
push
push
mov
push
call
xor
add
cmp
mov
je
mov
mov
movl
movl
mov
mov
cmp
mov
je
add
push
call
add
cmp
je
mov
mov
movl
mov
cmp
mov
je
add
push
call
add
cmp
je
mov
mov
movl
mov
cmp
mov
je
add
pop
pop
pop
xor
pop
ret
pop
pop
pop
mov
pop
ret
xor
jmp
xor
jmp
mov
test
je
mov
mov
incl
xor
ret
mov
sub
je
dec
jne
mov
ret
xor
jmp
mov
jmp
mov
mov
mov
mov
ret
push
mov
push
mov
push
push
lea
call
mov
lea
call
mov
lea
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
test
mov
je
pushl
lea
mov
call
pushl
lea
mov
push
inc
add
add
adc
pop
mov
call
inc
add
call
pop
mov
pop
pop
pop
pop
ret
push
mov
lea
call
lea
call
testb
movl
je
push
call
pop
mov
pop
ret
push
push
mov
mov
push
lea
lea
jmp
mov
mov
call
test
jne
add
cmp
jne
or
pop
pop
pop
ret
mov
sub
sub
sar
jmp
pushl
mov
call
add
pushl
xor
jmp
push
pushl
xor
inc
call
xor
inc
ret
push
lea
sub
mov
xor
mov
mov
test
je
push
mov
call
test
mov
je
mov
push
call
mov
test
je
andl
test
jne
push
xor
xor
inc
cmp
jne
cmp
jne
mov
mov
call
mov
mov
cmp
mov
je
test
je
andl
cmp
je
call
mov
lea
call
mov
test
jne
lea
call
inc
add
add
jne
mov
pushl
call
pop
pop
mov
mov
mov
lea
call
inc
add
pop
mov
xor
call
add
leave
ret
cmp
jne
and
je
andl
adc
jp
inc
add
rorb
pop
mov
test
xor
mov
lea
push
push
call
test
js
mov
call
cmp
jne
testb
jne
testb
jne
testb
jne
testb
je
jmp
mov
push
call
jmp
push
mov
push
mov
test
je
push
mov
test
je
andl
push
lea
call
mov
lea
push
push
call
test
js
mov
lea
call
mov
pop
leave
ret
xor
leave
ret
xor
jmp
xor
jmp
push
mov
push
push
push
push
push
mov
xor
cmp
je
cmp
je
mov
mov
push
lea
push
push
call
mov
mov
lea
push
call
mov
lea
cmp
je
call
mov
push
call
lea
mov
mov
dec
jns
mov
mov
push
push
push
push
call
lea
mov
lea
push
lea
push
push
movl
call
add
lea
xor
call
lea
xor
call
lea
xor
call
andl
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
push
push
push
xor
lea
movzbl
push
lea
call
cmpl
jne
add
add
cmp
jle
xor
mov
lea
lea
movzbl
lea
push
lea
call
mov
call
cmp
je
cmp
jne
mov
call
test
mov
jg
lea
mov
mov
add
add
cmp
jle
movb
pop
pop
pop
pop
add
ret
lea
jmp
xor
jmp
push
mov
sub
push
mov
push
push
mov
mov
mov
xor
cmp
mov
mov
je
cmp
je
cmp
jne
mov
cmp
je
mov
mov
mov
cmpl
jne
cmp
je
cmp
je
mov
mov
andl
push
call
test
je
test
je
push
push
call
mov
test
je
test
je
movzbl
push
push
push
lea
push
lea
push
lea
call
movzbl
add
push
push
push
lea
push
lea
push
lea
call
movzbl
add
push
push
push
lea
push
lea
push
lea
call
add
lea
push
mov
push
pushl
pushl
lea
push
push
mov
call
fld1
add
push
push
push
fstps
lea
flds
lea
fstps
push
lea
call
mov
movzbl
push
push
push
lea
push
lea
push
lea
call
movzbl
add
push
push
push
lea
push
lea
push
lea
call
add
lea
insl
sub
test
outsb
cmp
cmp
je
cmp
je
cmp
je
lea
mov
cmp
je
cmp
je
cmp
je
cmp
je
lea
mov
cmp
je
cmp
je
cmp
je
cmp
je
movzbl
push
push
push
lea
push
lea
push
lea
call
mov
add
lea
push
push
pushl
lea
pushl
lea
push
lea
push
call
mov
add
test
jne
lea
push
mov
pushl
lea
pushl
lea
push
push
lea
push
call
movzbl
push
push
push
lea
push
lea
push
lea
add
mov
dec
add
push
push
push
lea
push
lea
push
lea
call
add
flds
push
push
push
lea
fstps
flds
lea
fstps
push
lea
call
fld1
mov
add
push
push
push
fstps
lea
flds
lea
fstps
push
lea
call
mov
lea
add
cmpl
je
lea
push
mov
pushl
lea
pushl
push
push
lea
push
call
add
movzbl
push
push
push
lea
push
lea
push
lea
call
movzbl
add
push
push
push
lea
push
lea
push
lea
call
add
add
cmp
jne
mov
mov
mov
pop
pop
pop
leave
ret
push
push
pushl
call
jmp
test
je
call
jmp
mov
mov
jmp
push
mov
push
mov
sub
jne
leave
ret
dec
dec
je
dec
je
dec
je
add
push
jne
call
fstps
testb
flds
fstps
fldz
jne
testb
jne
fstp
leave
ret
mov
cmp
jg
je
sub
jne
ret
sub
je
dec
je
sub
jne
mov
mov
ret
dec
je
dec
jne
mov
andl
mov
jmp
push
mov
sub
mov
xor
mov
push
push
push
mov
push
mov
call
test
je
xor
cmp
je
orb
lea
mov
mov
movl
movl
mov
mov
lea
push
mov
call
test
je
push
call
test
je
cmpl
jne
cmpw
jne
mov
push
push
push
lea
call
test
je
mov
movw
jmp
orb
cmpl
je
lea
push
push
pop
mov
call
testb
jne
testb
jne
xor
inc
mov
pop
pop
xor
pop
call
leave
ret
mov
cmp
je
push
mov
call
add
add
add
clc
ss
cmp
jne
jmp
cmp
jne
movl
jmp
mov
add
call
jmp
push
mov
and
mov
sub
push
push
mov
xor
push
mov
mov
mov
xor
mov
mov
inc
test
jne
push
lea
push
call
test
je
andb
cmpl
je
cmpl
mov
je
or
mov
mov
push
mov
call
test
pop
je
movb
movb
movb
movb
andl
movl
mov
mov
test
mov
je
push
mov
mov
call
test
jne
and
and
test
je
andb
cmpl
je
cmpl
jne
mov
call
push
call
pop
push
lea
call
cmpl
mov
jne
mov
cmp
je
cmp
je
mov
add
call
lea
call
mov
test
jne
push
lea
push
call
test
je
andb
cmpl
mov
je
mov
cmp
jne
mov
cmp
jne
or
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
pop
ret
test
jne
push
push
pop
mov
call
test
je
pushl
push
call
test
jne
jmp
cmpw
mov
je
jmp
push
lea
push
call
test
jne
jmp
cmp
jne
cmpw
je
jmp
cmp
mov
mov
jne
mov
jmp
push
mov
push
andl
push
push
mov
push
mov
lea
call
mov
pushl
add
call
mov
test
js
mov
mov
mov
push
call
lea
call
pop
mov
pop
leave
ret
cmpl
je
mov
push
mov
call
test
jne
pushl
mov
mov
call
cmp
je
mov
push
push
push
mov
call
ret
push
mov
cmpl
je
cmpl
jne
xor
pop
ret
testb
jne
testb
je
jmp
int3
int3
int3
int3
int3
push
push
mov
test
mov
je
push
mov
push
xor
lea
cmpl
jne
cmp
je
mov
mov
test
jne
pop
pop
pop
mov
pop
ret
mov
mov
push
push
call
add
test
jne
cmp
jne
test
mov
je
mov
mov
push
call
push
call
add
mov
xor
jmp
mov
jmp
mov
test
je
mov
push
push
call
test
js
pushl
mov
pushl
mov
push
call
test
js
mov
mov
push
pushl
mov
pushl
push
call
mov
and
neg
sbb
and
pop
ret
push
mov
test
je
test
je
lea
mov
push
push
push
call
test
je
lea
mov
push
push
push
call
test
je
lea
mov
push
push
push
call
test
je
lea
mov
push
push
push
call
test
je
lea
mov
push
push
push
call
test
je
lea
mov
push
push
push
call
test
je
lea
mov
push
push
push
call
movb
xor
pop
ret
xor
jmp
xor
jmp
xor
jmp
xor
jmp
xor
jmp
mov
test
push
push
je
lea
xchg
xor
push
push
pushl
call
mov
cmp
jne
mov
pop
pop
ret
mov
call
test
jne
pushl
mov
push
call
mov
call
test
jne
pushl
mov
push
call
xor
jmp
xor
jmp
mov
mov
push
inc
push
push
call
test
je
mov
mov
incl
lea
ret
xor
ret
push
mov
push
mov
push
mov
test
jbe
push
add
andl
lea
push
mov
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
push
push
pushl
xor
push
inc
call
pop
pop
pop
leave
ret
incl
add
cmp
jb
jmp
push
mov
push
push
push
push
mov
push
mov
xor
cmp
je
cmp
je
inc
add
mov
call
mov
lea
push
push
call
push
lea
mov
call
mov
lea
add
mov
push
push
call
pushl
mov
lea
mov
call
mov
cmp
mov
je
inc
add
call
lea
call
lea
call
cmp
jne
inc
add
pop
leave
ret
push
mov
push
push
push
mov
xor
push
lea
mov
mov
call
lea
push
mov
mov
call
mov
mov
and
pop
jne
mov
mov
mov
push
pushl
pushl
call
cmp
jne
mov
mov
push
push
push
call
mov
lea
call
pop
mov
pop
pop
pop
ret
push
mov
sub
push
push
mov
mov
sub
je
andl
andl
lea
push
lea
lea
movl
movl
mov
call
testl
jne
mov
mov
push
push
lea
push
push
call
mov
mov
mov
push
pushl
pushl
push
pushl
push
call
add
mov
movl
mov
mov
pop
lea
call
mov
pop
pop
leave
ret
push
mov
test
je
push
push
mov
test
jl
mov
cmpb
jne
andl
mov
pop
mov
movb
xor
pop
pop
ret
lea
movl
call
lea
call
lea
call
lea
call
lea
call
lea
jmp
mov
xor
test
je
mov
test
je
add
movzbl
rol
xor
mov
test
jne
ret
mov
push
push
mov
movl
and
nop
or
add
or
add
or
add
lea
xor
add
test
inc
js
shlb
adc
pop
mov
mov
push
call
lea
add
movl
sbb
str
add
and
mov
str
add
sbb
mov
add
call
lea
call
lea
call
lea
call
mov
test
mov
jne
test
jne
mov
test
mov
je
lea
push
call
test
pop
jne
push
call
pop
pop
pop
ret
push
mov
sub
push
mov
mov
mov
push
mov
mov
mov
shr
push
mov
and
mov
mov
mov
jne
mov
mov
cmpl
je
mov
push
push
call
test
je
mov
call
movl
lea
movl
movl
movb
movb
call
mov
orb
mov
mov
mov
mov
mov
mov
cmpl
jne
movl
movl
cmpl
je
mov
andl
push
mov
lea
call
mov
test
je
mov
call
test
jne
lea
call
xor
cmp
jne
mov
push
mov
push
xor
lea
call
cmpl
mov
mov
mov
mov
je
mov
cmp
mov
jne
pushl
andl
pushl
mov
lea
push
call
lea
push
call
mov
andl
lea
push
push
pushl
lea
pushl
pushl
push
lea
push
push
call
lea
push
call
mov
lea
mov
mov
call
add
mov
cmp
je
test
je
mov
call
mov
test
mov
je
mov
cmp
je
inc
mov
mov
push
pushl
pushl
push
call
cmpl
je
mov
mov
lea
push
push
push
mov
mov
call
cmpl
jne
mov
mov
mov
mov
lea
xor
push
and
push
or
mov
push
je
call
lea
push
call
lea
call
pop
pop
xor
pop
leave
ret
push
call
pop
mov
jmp
andl
push
call
test
je
andl
jmp
pushl
lea
pushl
push
call
lea
push
call
mov
jmp
push
mov
sub
call
test
je
push
push
push
xor
push
lea
mov
mov
call
lea
mov
call
pushl
lea
call
mov
cmp
mov
je
mov
lea
push
push
push
lea
push
push
call
lea
call
cmp
jne
mov
cmp
je
cmp
je
push
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
lea
call
mov
cmp
mov
je
mov
push
push
pushl
push
call
pushl
call
call
lea
call
add
call
pop
pop
pop
xor
leave
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
push
push
mov
mov
and
push
xor
or
cmp
lea
mov
mov
mov
jne
mov
mov
lea
lea
lea
cmp
jne
test
jne
mov
mov
imul
lea
lea
cmp
jne
test
jne
cmp
je
testl
je
lea
cmp
jne
pop
pop
pop
mov
pop
ret
test
push
je
mov
lea
movsbw
cmp
jne
sub
add
add
test
jne
xor
pop
ret
movsbw
movzwl
movzwl
sub
pop
ret
push
mov
push
push
mov
push
mov
cmp
je
push
pop
cmp
je
andl
test
je
push
call
pop
push
lea
call
cmpl
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
cmpl
push
mov
jne
test
je
incl
mov
test
mov
pop
pop
je
jmp
push
mov
sub
push
mov
push
xor
cmp
mov
je
push
pushl
lea
call
mov
cmp
pop
mov
je
mov
lea
push
push
push
call
test
js
cmp
mov
je
mov
test
mov
push
push
call
mov
enter
cwtl
jle
pop
mov
pushf
add
add
addl
mov
add
int3
mov
push
mov
scas
sti
in
je
mov
jbe
ljmp
xchg
add
cli
fcmovbe
fcom
cmpsb
pop
pop
pop
add
in
add
push
push
push
lea
push
call
movsb
ja
pop
add
aam
pusha
add
pusha
fldl
rclb
add
add
mov
add
out
mov
add
mov
add
sarl
push
cmpsb
jp
add
roll
xchg
add
add
push
add
add
add
out
fldl
xlat
test
add
jne
mov
lea
pop
popl
push
push
push
lea
push
push
push
lea
push
push
push
call
mov
cltd
int
add
add
jno
stos
cli
bound
add
mov
loop
add
sarl
ja
mov
pop
add
fbld
scas
out
add
jle
mov
mov
add
lret
mov
add
in
push
mov
loope
cld
lea
pop
push
push
push
push
lea
push
lea
push
call
test
jecxz
in
jmp
add
fwait
lods
add
add
lea
mov
mov
add
mov
ret
add
in
xchg
call
out
leave
test
add
lock
add
aam
lcall
out
lock
add
add
bound
pop
push
push
push
call
add
add
mov
je
sar
add
scas
std
add
xchg
test
lret
jno
js
data16
stos
ja
add
pop
fisttpl
add
mov
add
push
xchg
test
add
add
add
cmpsl
in
jo
add
lods
add
add
rolb
lods
cmpsl
cwtl
lahf
add
add
mov
sbbl
lea
pop
push
call
push
push
lea
push
push
lea
push
push
push
lea
push
call
jecxz
push
out
add
add
in
add
andb
add
add
add
ficomps
loopne
add
cld
popf
add
add
push
roll
add
add
add
mov
mov
imul
call
push
push
push
push
lea
push
push
push
push
call
sti
lret
fwait
call
cmc
jmp
jno
lret
add
jle
add
add
lahf
divb
pop
add
sahf
pop
iret
add
cli
add
add
add
out
add
add
xchg
and
add
jns
add
push
push
push
push
push
push
lea
push
push
push
push
call
mov
add
push
iret
add
add
ret
jnp
loope
add
nop
cwtl
add
add
jecxz
test
mov
add
cmpsl
add
mov
les
cmc
add
add
add
add
flds
sbb
jnp
add
not
fdivs
push
add
add
add
jae
add
add
sub
addb
add
je
cmp
mov
mov
push
push
push
push
call
mov
add
out
iret
add
clc
loop
into
cwtl
fwait
xchg
add
jno
add
add
add
cld
add
cli
add
add
add
mov
add
fs
mov
pusha
add
lahf
pop
filds
mov
mov
incb
add
mov
jmp
orl
ret
mov
push
lea
push
push
call
add
add
std
loope
hlt
add
add
add
insb
add
in
scas
rolb
mov
add
add
mov
mov
lret
fcmovnb
add
shl
je
add
add
add
mov
lea
pop
mov
push
push
push
push
call
lcall
js
mov
jle
lea
add
pusha
add
push
leave
mov
mov
mov
movsl
or
pop
sbb
out
add
out
fcompl
push
lret
mov
pop
imul
out
push
add
xchg
out
add
cld
lea
pop
add
push
lea
push
call
mov
fisttpl
add
push
mov
add
pop
add
jp
add
loope
out
testb
icebp
add
add
push
jle
mov
add
rcrb
jne
mov
add
movl
push
add
popl
add
add
lahf
add
add
jo
mov
lea
pop
add
add
push
push
push
lea
push
push
push
push
call
add
in
add
add
add
mov
add
add
add
mov
add
xchg
xchg
mov
add
jl
jl
add
outsl
add
mov
add
out
add
scas
aam
cltd
movb
pushf
add
jmp
lds
add
add
mov
mov
lea
pop
mov
push
push
lea
push
push
lea
push
push
push
call
lea
xchg
fiaddl
push
add
mov
push
fs
add
add
push
add
mov
mov
add
add
jnp
add
xchg
add
out
sarb
add
add
loop
add
bound
out
add
cmpsb
add
add
push
add
scas
jge
add
lods
clc
gs
add
jo
cwtl
push
mov
pusha
sbb
sbb
push
push
push
push
push
lea
push
lea
push
call
add
arpl
add
stc
fidivrs
mov
mov
cld
xlat
hlt
add
mov
mov
pop
cwtl
ja
jp
xchg
ljmp
add
push
popa
je
xchg
scas
movsl
add
add
add
mov
rorb
lea
pop
add
push
push
xor
ror
push
and
add
xor
sub
rol
ror
pop
shr
pop
push
push
push
push
lea
push
push
push
call
test
add
pop
iret
add
add
imul
add
add
out
scas
add
push
pushf
stos
ret
movsl
push
xchg
std
add
shlb
hlt
lea
pop
pushl
call
push
push
push
push
push
call
pop
add
push
add
lret
idiv
add
add
mov
xchg
add
add
in
stos
add
jne
imul
in
in
mov
add
cli
mov
popf
mov
add
mov
jno
aad
mov
lea
pop
mov
movl
push
push
push
push
call
pop
pushf
testb
add
add
add
xchg
mov
pop
add
rcll
mov
add
addr16
add
movl
lret
add
shll
add
mov
aad
add
cmpsl
out
test
add
push
add
arpl
pop
lea
push
lea
push
push
call
mov
outsl
add
mov
mov
xlat
mov
gs
ret
fnstcw
pushf
fucom
fadds
add
add
lods
ja
xchg
add
add
fs
push
mov
add
add
add
jle
lahf
jmp
or
push
push
lea
push
lea
push
lea
push
push
push
push
push
lea
push
lea
push
call
add
add
stc
pusha
xlat
insb
fxch
rcl
xchg
add
jnp
cmpsl
add
out
lds
add
je
push
out
add
add
mov
leave
lds
jge
pusha
cmc
mov
lea
pop
pushl
push
lea
push
push
call
test
push
add
cli
add
lret
scas
lret
add
int
add
add
add
fcom
rcrl
imull
mov
add
lcall
add
test
popf
add
aad
lcall
int
add
add
lcall
pushl
push
lea
push
push
push
call
add
stos
in
mov
push
in
jb
fisubs
fdiv
add
imul
add
icebp
test
rolb
movsl
mov
std
jecxz
pop
add
add
addl
push
cmpsl
movsb
repnz
jl
test
add
add
mov
mov
cltd
mov
xchg
xlat
mov
out
in
aad
add
mov
data16
popf
xor
add
adc
lret
push
push
push
push
push
push
lea
push
call
add
cli
iret
in
loope
jo
add
sti
add
add
out
mov
mov
pusha
jl
jle
fldl
loopne
dec
add
add
test
add
add
add
add
add
add
out
fnstsw
jge
jae
movsl
arpl
add
out
xchg
jl
add
lea
pop
pushl
push
push
push
push
push
push
push
call
add
sti
std
jno
add
add
rorl
in
add
mov
loopne
scas
arpl
add
add
add
cmpsl
add
cli
shrl
and
pop
cmpsb
outsl
movb
add
int3
fxtract
xchg
add
lods
lods
add
std
add
add
add
jle
add
movsb
mov
add
popf
add
pop
xchg
popf
lock
lea
pop
pushl
push
push
lea
push
call
add
pop
xchg
add
add
cltd
cmpsl
pop
add
add
scas
mov
cmp
rorb
mov
loope
mov
shlb
aam
add
bound
call
push
push
shr
add
ror
add
push
push
pop
add
lea
lea
ror
sub
shl
xor
pop
add
xor
pop
push
push
push
push
push
call
add
add
loope
pop
add
test
add
add
mov
std
les
add
out
bound
fiaddl
add
mov
lea
mov
lea
add
addl
mov
hlt
add
jbe
jl
add
mov
lea
pop
pushl
push
push
lea
push
lea
push
push
push
lea
push
call
jnp
add
cmpsl
add
sahf
sarl
cmpsl
add
movsb
mov
insb
pusha
add
shr
add
add
mov
add
mov
lea
pop
call
push
lea
push
call
xlat
out
jb
add
enter
add
add
jmp
add
pop
test
loope
add
lds
fldcw
add
jae
jl
mov
jnp
lea
add
fldl
xchg
scas
mov
add
add
add
pop
push
push
push
sub
push
or
not
add
add
sub
xor
not
ror
pop
dec
sub
inc
pop
push
lea
push
call
add
add
add
shlb
add
push
mov
fwait
imul
mov
jbe
xchg
add
add
ja
fiaddl
pop
cwtl
icebp
jecxz
xchg
add
add
mov
add
loope
lahf
xchg
lods
add
lea
pop
push
push
push
push
lea
push
call
out
xchg
stos
mov
mov
imul
mov
add
add
cmc
add
lahf
jle
add
mov
push
lods
xchg
add
mov
lock
pop
clc
ret
mov
add
add
mov
std
add
pusha
push
mov
mov
mov
lea
pop
push
push
push
lea
push
lea
push
push
push
push
push
push
call
mov
add
add
add
add
xchg
pop
add
mov
ja
add
add
mov
add
add
fsubs
cld
lea
pop
call
mov
push
push
push
push
push
push
push
call
add
xchg
add
outsl
add
scas
clc
add
lds
arpl
add
pop
pop
add
jns
adcl
jno
in
add
add
cmc
lock
add
roll
add
mov
add
lock
lcall
jecxz
in
out
add
pop
push
push
push
push
lea
push
lea
push
push
lea
push
call
add
testl
cld
addl
mov
add
add
pop
add
jecxz
add
add
mov
mov
mov
rolb
add
mov
jnp
mov
je
mov
add
jbe
ret
add
addl
fisubs
data16
push
push
push
call
push
fistps
shr
add
and
int
roll
icebp
nop
icebp
pop
call
add
push
add
add
xchg
ja
hlt
rclb
add
addr16
jle
gs
ljmp
addb
movl
iret
jb
mov
into
int3
xlat
clc
add
mov
push
cwtl
add
push
add
jmp
mov
lea
pop
mov
add
push
push
push
push
push
push
push
push
call
loope
add
push
add
into
jns
cltd
cmpsb
add
ja
xchg
add
jbe
movsb
add
add
add
add
xchg
add
mov
add
add
push
add
add
repnz
add
add
mov
lea
pop
add
push
push
lea
push
push
push
push
push
push
lea
push
lea
push
call
add
add
popl
call
call
mov
add
add
rolb
roll
add
add
add
xchg
ja
in
add
push
jmp
sti
into
test
into
push
aad
out
xchg
loope
test
jo
ja
je
fs
jecxz
mov
mov
insb
out
andl
lahf
jge
add
pop
mov
pusha
sub
ret
rcll
add
pop
jae
push
push
push
call
in
icebp
add
jns
sti
mov
add
fimull
movsl
jae
stos
icebp
add
fs
add
xchg
mov
xchg
pop
movsb
in
add
add
mov
test
test
mov
lea
pop
add
push
push
push
push
call
push
faddl
loope
icebp
pop
pusha
jnp
add
pop
mov
add
insb
mov
push
clc
add
fiadds
jge
add
add
xlat
add
pusha
shr
stc
jbe
add
cld
lea
pop
push
mov
push
push
lea
push
push
push
push
push
call
je
in
add
ror
add
add
sarl
out
test
testb
jae
push
cmpsb
add
add
add
mov
stc
jo
add
mov
add
add
in
add
fiaddl
add
mov
rolb
pop
push
add
push
imul
hlt
add
add
sbb
add
push
push
lea
push
call
clc
loopne
add
repnz
pusha
call
add
lcall
scas
fiadds
add
add
mov
jge
rolb
add
pop
add
add
jno
mov
push
shlb
add
mov
lea
pop
add
push
push
push
push
push
push
lea
push
push
lea
push
push
call
add
addr16
pop
fildll
add
pop
xlat
add
add
add
aam
xchg
mov
mov
xchg
add
stc
hlt
add
pop
xlat
add
sarl
mov
lea
pop
add
pop
push
push
push
push
lea
push
lea
push
push
push
call
ja
add
add
mov
xchg
push
add
mov
add
xchg
pushf
cmpsb
add
aad
int3
movb
push
mov
add
add
add
add
je
push
add
int3
aad
sahf
add
and
dec
add
icebp
test
push
push
lea
push
call
sahf
add
pop
jae
push
add
test
mov
mov
xchg
mov
repnz
add
test
mov
push
mov
iret
scas
fidivrs
add
mov
xchg
repnz
push
call
add
sar
add
add
jne
popf
mov
ljmp
add
or
push
push
push
call
add
cld
add
jl
add
sti
add
add
push
lret
outsl
jo
xchg
push
mov
js
in
mov
push
enter
jle
cltd
loop
fmuls
add
push
in
cmpsb
mov
lea
pop
mov
push
push
push
lea
push
call
add
add
leave
mov
testl
addl
add
cmpsl
repnz
cmpsl
popa
add
add
sarl
jmp
add
add
leave
add
pop
add
cmpb
pop
xor
push
push
lea
push
lea
push
call
cmc
test
outsl
mov
test
add
add
add
mov
add
add
add
add
addr16
push
xchg
add
pop
pop
arpl
add
mov
lea
pop
add
push
push
push
push
lea
push
push
call
add
in
cltd
pop
add
call
sti
add
push
push
add
data16
add
xchg
out
mov
jae
roll
add
add
add
fstpt
aad
add
pop
sub
pop
push
push
call
xchg
add
enter
addl
add
movb
lret
mov
int
mov
add
xchg
add
out
mov
add
pop
rep
pop
push
push
push
lea
push
call
push
in
pop
mov
jle
add
sahf
add
popf
aam
mov
add
pop
add
out
push
lock
add
xchg
add
cld
ljmp
fucomp
add
add
mov
mov
lea
pop
mov
push
push
push
push
push
push
call
insb
jmp
add
add
add
fnstenv
add
push
test
jae
add
add
add
add
add
push
rolb
js
pop
add
mov
pushf
add
mov
sbb
pop
in
lea
push
lea
push
push
lea
push
push
push
lea
push
lea
push
call
les
loop
add
push
addl
out
rolb
ret
mov
js
cmpsb
jmp
fistl
add
movsl
pop
jecxz
in
mov
lea
add
mov
lea
pop
add
push
lea
push
push
push
push
push
call
push
mov
mov
test
add
mov
lds
add
rcll
add
stos
lods
enter
test
add
popa
fcmovnbe
mov
fisubl
mov
add
add
imul
add
mov
add
mov
shl
mov
lea
pop
add
push
push
push
call
add
add
add
fstps
int
mov
iret
add
imul
cmpsl
cwtl
mov
shrl
add
mov
add
mov
add
jno
add
add
std
icebp
filds
lret
out
jecxz
sti
add
sti
repnz
lea
pop
mov
push
push
push
push
push
lea
push
call
add
mov
loopne
add
xchg
call
add
add
imul
stos
jne
add
ja
hlt
add
add
imul
loop
imul
push
aad
add
clc
movsl
fldt
pop
mov
jnp
aad
mov
lea
pop
xor
push
push
lea
push
push
push
push
call
pop
stos
std
push
pop
add
jbe
test
push
jle
add
out
add
jno
pop
jecxz
add
mov
into
out
fs
roll
add
mov
in
out
add
push
add
addl
add
call
mov
in
add
add
pop
add
aad
arpl
int3
add
lcall
lea
pop
add
push
push
call
add
add
add
lret
enter
in
mov
pop
add
mov
add
mov
lods
add
aam
add
leave
add
jb
add
add
testl
add
mov
popl
add
ret
gs
addl
add
testl
mov
sti
mov
add
jge
bnd
or
push
and
test
push
push
lea
push
call
add
add
add
push
pop
mov
add
add
cmpsl
jne
add
pop
add
jl
add
outsl
int3
jo
pop
add
jecxz
add
xchg
mov
mov
insb
movsl
add
addb
popf
mov
lcall
lds
leave
fildl
mov
xchg
mov
jp
imul
mov
or
adc
push
push
push
lea
push
call
add
add
sti
add
mov
jne
add
xchg
push
test
pusha
add
mov
pop
mov
stos
push
add
mov
xchg
jmp
jmp
add
add
movsl
add
pusha
imul
add
add
mov
lea
pop
add
push
push
push
lea
push
push
call
stc
push
pop
add
add
mov
mov
out
nop
mov
addb
iret
add
add
out
cmpb
mov
pop
push
js
jge
add
mov
add
mov
lea
pop
mov
xor
push
push
lea
push
lea
push
push
call
addr16
add
movsb
pop
movb
mov
out
je
lods
mov
cmpl
add
pushf
xlat
add
add
add
scas
mov
pop
add
fs
add
push
js
push
mov
iret
xchg
out
ret
mov
mov
lea
pop
add
push
push
lea
push
push
lea
push
lea
push
call
mov
mov
add
lods
insb
add
add
jmp
add
mov
add
out
push
lcall
fs
test
nop
fiadds
push
enter
add
add
fdivp
add
jns
jae
sbbl
add
add
outsl
add
cli
fisttpl
pop
add
push
push
push
push
call
cmpsb
add
xchg
les
leave
hlt
xchg
add
mov
jle
cli
leave
add
in
add
cmpsb
cltd
xchg
add
push
fiaddl
xchg
add
jbe
in
leave
add
mov
add
mov
add
pop
pop
pop
stc
insb
cmc
movsb
pop
rorl
adc
fsubrs
adc
push
or
inc
add
add
rol
sub
sub
dec
sub
pop
not
pop
push
not
shl
sub
pop
pushl
call
push
lea
push
lea
push
push
push
push
lea
push
push
push
call
repnz
std
mov
jae
add
into
add
js
sti
mov
movb
add
push
mov
pop
add
ret
clc
out
add
mov
add
add
add
mov
mov
hlt
add
filds
add
jb
divl
jge
in
popa
mov
lea
pop
push
push
push
ror
push
and
add
not
sub
dec
inc
pop
xor
pop
push
xor
lea
pop
push
push
push
push
lea
push
lea
push
lea
push
push
push
call
add
add
mov
out
lahf
jmp
pop
loope
add
outsl
out
add
mov
ljmp
movsb
add
xchg
test
add
add
ret
add
mov
pop
lahf
jecxz
out
enter
testb
add
stos
cld
enter
mov
lea
pop
call
mov
push
dec
shl
add
dec
pop
push
push
push
push
push
push
push
call
in
rcr
add
add
xchg
add
push
test
mov
add
add
xchg
lock
popf
mov
jl
les
popa
add
mov
xchg
shlb
in
mov
add
add
xchg
add
fadds
mov
xchg
add
out
xchg
pusha
sbb
push
push
push
push
push
push
push
push
push
push
call
sar
andl
add
xchg
add
jle
add
push
add
add
add
add
sti
nop
xchg
add
pop
stos
scas
add
popa
push
pop
add
lret
add
pop
imul
add
cwtl
add
pop
pop
mov
cmc
bound
fldl
add
out
jmp
int3
mov
jp
hlt
lea
pop
mov
add
push
push
call
mov
call
stos
mov
pushf
add
jge
data16
add
orl
add
mov
add
add
in
add
add
add
add
hlt
lea
pop
add
push
shr
lea
pop
add
mov
xor
push
push
lea
push
push
push
push
push
call
add
jge
add
jge
add
roll
add
mov
push
mov
lock
add
add
add
lea
add
popa
add
add
les
test
lcall
pop
add
push
lea
push
lea
push
push
lea
push
push
push
lea
push
push
push
call
push
test
mov
add
js
scas
rolb
add
add
add
add
add
add
add
mov
add
in
hlt
xchg
lea
pop
push
push
inc
lea
sub
shr
pop
mov
push
push
push
push
call
add
add
mov
pop
jge
mov
lret
add
mov
mov
mov
cmc
sti
leave
fwait
movsb
add
add
test
stos
fwait
mov
pop
add
mov
add
mov
cmc
pop
xchg
jae
test
lahf
push
jp
cmc
add
shll
add
data16
xor
push
push
lea
push
push
push
push
call
addr16
add
jbe
arpl
jecxz
jae
jno
add
add
mov
jmp
add
add
jno
add
pop
cmc
push
mov
in
inc
add
add
mov
aad
fidivl
pop
mov
add
lea
pop
add
push
push
lea
push
push
push
push
push
push
push
push
call
add
jae
xchg
add
add
add
test
movsb
into
mov
aam
add
jmp
add
fld
add
fildl
stos
cli
sahf
loopne
jecxz
aam
add
add
icebp
mov
lea
pop
add
push
add
add
sub
shl
pop
pop
push
push
call
add
add
les
nop
jns
stos
mov
add
int
in
push
push
add
test
add
add
add
xchg
add
ret
fnsave
loop
mov
mov
lea
pop
mov
push
push
push
lea
push
push
lea
push
push
push
push
call
add
add
sbbb
add
loope
lcall
add
subl
jle
jl
lods
add
add
add
enter
add
in
hlt
into
loope
mov
sti
add
add
cltd
test
add
add
ljmp
add
mov
lea
pop
xor
push
lea
push
push
lea
push
push
push
push
push
lea
push
lea
push
call
add
sti
pop
stos
add
add
add
jo
add
imull
add
cli
mov
in
add
add
xchg
pop
pushf
add
mov
fwait
jle
push
xchg
add
int
mov
lods
add
cltd
rorl
pop
add
push
shl
shl
pop
rep
mov
xor
push
inc
sub
lea
pop
or
je
push
push
lea
push
push
push
call
sbbl
add
lcall
bound
xchg
add
add
xchg
mov
push
scas
cltd
fsubrl
mov
add
push
pop
imul
add
std
out
pop
loop
push
sub
sti
add
add
lds
ljmp
lret
mov
add
add
pop
mov
xor
push
push
push
push
push
push
push
lea
push
push
call
test
popf
jo
repnz
sahf
xchg
add
jae
add
add
push
jecxz
mov
fwait
add
add
xlat
fadds
push
add
out
mov
add
in
rolb
xlat
aad
stos
push
add
into
pusha
sbbb
lea
pop
mov
push
push
push
lea
push
push
lea
push
lea
push
lea
push
call
add
add
out
add
scas
mov
lret
addl
popf
add
add
push
fwait
add
add
aad
cltd
jle
fs
jno
add
je
int3
push
add
pusha
mov
cmc
push
mov
push
mov
roll
hlt
pop
add
push
idiv
push
add
in
in
add
pop
xchg
lea
outsl
in
test
push
iret
jge
add
add
int3
lea
pop
xor
push
push
call
movsl
add
cwtl
pop
push
mov
add
scas
fiaddl
add
jnp
stc
pusha
mov
ja
loope
rcl
jb
fs
add
std
addr16
add
jno
xchg
add
mov
jp
roll
add
addr16
add
jmp
rcll
imul
testl
add
iret
out
mov
pop
into
aam
add
lea
pop
add
push
push
push
push
push
push
lea
push
push
lea
push
call
lahf
mov
add
fstpl
add
int
lock
add
test
rolb
add
mov
mov
add
out
mov
mov
cmc
add
add
cmpsl
add
add
xchg
xchg
cltd
into
ffree
pusha
mov
add
stc
cli
add
je
frstor
add
iret
add
add
pop
add
add
push
push
push
lea
push
push
push
push
lea
push
push
call
insb
add
out
xchg
mov
add
add
add
mov
add
icebp
out
mov
lahf
mov
add
in
add
lahf
loopne
add
int
add
add
mov
add
sahf
add
add
arpl
add
mov
clc
add
push
mov
jne
add
add
pusha
and
push
push
lea
push
push
push
call
add
add
cmpsl
movsb
add
filds
pop
add
jmp
add
mov
nop
add
enter
cli
pushf
lret
mov
fiadds
xchg
add
int3
addr16
mov
add
mov
add
xchg
add
js
add
hlt
mov
add
push
addl
rcl
js
jb
push
lods
popa
add
leave
jno
mov
add
out
les
mov
lea
pop
mov
xor
push
lea
xor
pop
add
push
lea
xor
pop
pop
push
push
push
push
lea
push
push
call
cmpsb
add
pop
outsl
add
jmp
enter
pop
add
push
test
aad
add
nop
fwait
loope
add
push
add
out
lds
pusha
add
xchg
add
add
scas
jle
ret
add
popfw
add
add
add
movb
mov
cld
lea
pop
rep
mov
push
push
push
push
lea
push
push
lea
push
push
push
push
call
rolb
out
enter
call
in
mov
movsl
add
add
cmpsb
imul
add
add
jp
lret
bound
add
add
add
imul
cwtl
insb
rolb
scas
add
add
popf
add
je
add
add
add
add
cld
push
add
add
add
add
rcrl
les
or
push
push
call
hlt
mov
add
sahf
add
add
fiadds
jns
mov
add
push
add
jl
add
roll
icebp
popf
rcrb
add
add
push
lds
add
jp
xchg
pop
add
push
lea
push
push
push
lea
push
push
call
add
test
push
mov
add
add
add
hlt
push
jnp
rorb
mov
push
aad
add
xchg
add
add
add
push
outsl
jp
xchg
rolb
mov
lea
pop
or
je
push
push
lea
push
push
call
add
add
add
mov
repnz
pushf
pop
push
cli
add
cmpsb
add
add
insb
add
cmpsl
mov
add
pop
cmc
arpl
ret
xchg
cld
frstor
add
js
mov
add
mov
lea
pop
mov
push
push
push
push
push
call
rcl
int3
add
add
push
cld
mov
std
add
add
add
add
roll
imul
add
add
add
popa
test
jo
in
mov
sbb
add
sarb
test
xchg
add
mov
pushf
add
pop
add
push
shl
not
ror
pop
add
rep
push
lea
push
lea
push
lea
push
push
lea
push
push
call
scas
cwtl
add
add
test
add
add
aad
jge
movsb
addl
add
decb
add
add
stc
ja
add
clc
add
xchg
fwait
add
ret
add
cltd
icebp
add
add
add
mov
sbb
pop
push
push
add
add
push
xor
add
ror
sub
shr
xor
not
pop
shr
ror
shl
shl
pop
push
push
push
push
push
push
lea
push
lea
push
push
push
call
add
add
mov
add
pop
jns
add
add
mov
addl
push
mov
add
xchg
add
lock
jl
mov
lea
pop
pop
push
push
push
lea
push
lea
push
lea
push
push
push
call
add
mov
loopne
xchg
cwtl
add
pop
aam
leave
add
mov
add
add
add
stc
add
mov
add
jecxz
sub
xlat
add
pop
mov
cltd
add
stc
jecxz
add
js
add
lods
repnz
add
cmc
xlat
xchg
pushf
add
lds
bound
pop
mov
mov
push
push
lea
push
push
push
lea
push
push
call
sti
cmc
add
jge
add
call
jo
sahf
mov
add
vpmullw
mov
fnstsw
mov
add
testb
cmpsb
xchg
sahf
add
or
sarb
in
jl
clc
mov
jns
push
gs
fldl
add
sbb
mov
push
push
push
push
lea
push
push
push
lea
push
call
add
add
add
add
push
add
pop
shrl
lods
fwait
rcl
xchg
add
add
mov
outsl
imul
add
stos
add
je
add
add
add
mov
add
mov
lea
pop
jmp
push
shr
inc
pop
push
mov
push
lea
push
push
push
push
push
push
push
push
call
jnp
add
pop
add
sti
mov
filds
mov
movl
push
enter
add
test
push
fidivl
mov
mov
add
lock
cwtl
add
stc
jmp
jmp
hlt
lea
pop
add
push
push
lea
push
lea
push
push
call
stos
sbb
out
pop
mov
add
test
cli
enter
loop
push
mov
out
add
add
push
fs
je
roll
pushf
data16
cwtl
xchg
in
jnp
movsb
cltd
fbld
add
mov
add
fldl
jge
add
add
lea
pop
push
push
push
push
push
lea
push
push
call
add
add
pop
flds
jmp
add
loop
add
imul
test
adc
roll
mov
pop
add
mov
lea
pop
push
push
push
add
rol
pop
push
push
push
lea
push
push
call
bound
popl
roll
mov
shrb
sar
hlt
add
popl
add
add
jmp
int
mov
add
add
lds
loopne
add
js
jl
xchg
pop
sti
addr16
jnp
mov
je
adc
inc
cld
push
xor
pop
pop
push
ror
sub
inc
pop
pop
pop
push
dec
pop
pop
push
xor
sub
pop
leave
ret
push
push
push
lea
push
push
call
cli
xchg
jl
add
add
pop
jl
sti
add
addb
add
mov
add
xchg
cmpl
add
xchg
test
add
xorb
test
xchg
pop
mov
data16
aam
stos
cmc
loop
imul
adc
push
push
push
push
lea
push
push
push
push
push
call
js
add
add
add
add
fidivs
cmc
add
lcall
fcmovne
jle
add
lds
mov
add
push
lahf
add
add
add
rcr
xchg
add
mov
add
ljmp
fiadds
pop
add
loope
pushf
add
cli
add
add
cmpsb
mov
cmpsb
imul
xchg
mov
mov
lea
pop
mov
add
push
push
push
push
push
push
call
xchg
pop
add
in
lcall
mov
mov
add
outsl
pusha
mov
add
sbb
add
add
aam
rolb
addr16
add
mov
add
cmpsl
roll
mov
add
add
lods
test
mov
lea
pop
push
push
push
lea
push
push
push
call
cld
loopne
xchg
pop
mov
fsts
mov
mov
add
add
loope
rclb
add
pop
push
lcall
pop
pop
js
lds
push
in
add
icebp
mov
add
cmpsl
push
mov
push
jb
xchg
add
adc
push
push
push
push
push
push
lea
push
call
add
cld
popf
push
jbe
fdivrp
mov
add
add
mov
add
ja
test
out
add
mov
push
mov
cld
mov
stos
mov
add
mov
lea
pop
push
push
not
inc
not
pop
movl
push
lea
push
push
push
push
lea
push
push
push
push
call
loopne
popf
add
popa
add
xchg
add
mov
add
add
pop
fwait
ret
mov
add
add
mov
lahf
cmc
add
add
add
add
shlb
sahf
int3
mov
lods
add
enter
add
push
js
into
add
shlb
bound
addl
push
push
lea
push
push
push
lea
push
push
call
pop
pop
add
add
xchg
add
roll
mov
loop
jecxz
fs
je
mov
ja
push
add
mov
sahf
mov
add
sar
mov
movb
rcrl
sti
in
mov
push
add
add
subb
aam
bound
test
je
mov
push
pop
pop
pop
push
lea
push
push
push
push
lea
push
push
push
call
xchg
add
add
lods
add
fcoms
fisubrl
add
test
pop
testb
sti
add
xchg
pushf
popa
add
cmpsb
fildl
popa
add
std
aam
roll
add
iret
movsb
add
sti
add
insb
add
cmpsb
push
fimuls
mov
lea
pop
pop
push
push
push
push
lea
push
lea
push
push
push
push
push
call
mov
gs
xchg
add
bound
stos
testl
sti
add
add
add
stos
add
add
mov
jle
imul
add
sub
leave
push
ror
lea
add
pop
ret
push
lea
push
push
lea
push
lea
push
call
add
add
jbe
mov
add
add
cwtl
add
shll
pop
movsl
push
cmpsl
imul
pop
add
xchg
mov
push
mov
aad
movsl
stos
add
add
mov
add
mov
cld
out
scas
add
pop
addl
leave
add
mov
lret
rolb
add
addb
add
add
fdivr
mov
hlt
lea
pop
push
push
lea
push
push
lea
push
push
call
mov
pop
bound
shr
mov
imul
add
add
mov
test
lret
add
add
mov
sti
cmpl
clc
add
mov
jo
jmp
add
mov
mov
mov
add
add
mov
lea
pop
mov
push
push
push
call
testb
cltd
stos
mov
arpl
jb
jl
xlat
into
mov
ja
int3
mov
push
add
pusha
xchg
mov
mov
add
cmc
xchg
je
add
lea
fwait
mov
mov
jb
out
hlt
popa
testb
xchg
add
cli
add
or
add
push
push
push
push
push
push
lea
push
push
push
call
add
add
gs
scas
add
rolb
add
add
lods
ja
out
add
nop
adcb
popf
mov
lahf
aam
add
push
pushf
mov
add
in
mov
mov
add
mov
add
data16
push
push
push
inc
sub
pop
push
push
lea
push
lea
push
push
push
push
push
lea
push
push
call
add
push
mov
add
add
icebp
pop
push
clc
popa
jnp
add
filds
mov
out
add
push
out
add
add
jo
add
push
mov
mov
lret
push
add
mov
shll
mov
lea
pop
push
testl
push
shl
add
pop
addl
push
add
sub
ror
pop
push
push
shr
xor
pop
call
push
add
rol
pop
mov
push
dec
add
add
sub
pop
pushl
push
inc
add
sub
pop
push
push
push
push
lea
push
push
push
call
add
add
add
vpunpcklbw
push
roll
mov
pop
cmpsl
aam
fldl
jns
pop
lock
scas
add
aad
int
test
fdivl
add
lea
pop
push
call
push
push
call
push
lret
add
add
roll
add
jl
xchg
mov
add
add
int
jge
rcl
ror
add
add
iret
add
mov
xchg
add
add
loopne
mov
add
lret
add
add
xchg
add
add
or
jge
add
test
lcall
inc
lea
pop
pop
push
push
push
push
lea
push
lea
push
push
push
push
call
mov
add
add
testl
add
add
leave
add
add
add
flds
add
add
add
mov
mov
addr16
mov
lea
pop
pop
push
push
lea
push
push
push
lea
push
push
push
push
push
call
add
add
add
rolb
pusha
out
add
cwtl
cld
add
loopne
mov
rol
fiaddl
add
lahf
add
movsb
add
add
add
add
add
pusha
jl
out
mov
imul
leave
mov
jnp
add
add
add
mov
lds
fidivl
push
cltd
rolb
and
icebp
xchg
mov
lea
pop
pop
push
lea
push
lea
push
push
push
push
push
lea
push
call
add
in
add
add
push
add
add
add
add
jl
push
ftst
roll
cld
add
scas
add
add
loope
jp
add
push
lods
rolb
push
mov
mov
lea
pop
leave
push
push
lea
push
push
push
lea
push
call
shl
add
ja
jb
jecxz
orb
add
xchg
mov
add
mov
pusha
add
pop
add
mov
mov
lods
push
add
add
add
leave
add
add
idivb
add
fildl
xchg
xchg
pop
scas
sti
push
add
cwtl
data16
mov
add
pusha
sbb
add
push
push
lea
push
push
lea
push
push
push
push
call
add
test
push
pop
add
add
out
push
push
mov
add
xchg
add
data16
pop
add
add
push
jne
add
pushf
add
cld
nop
add
add
jecxz
mov
mov
mov
add
mov
out
add
andb
add
mov
lea
pop
mov
push
ror
add
pop
add
push
push
push
push
push
lea
push
call
movsl
add
imul
loopne
add
loopne
add
out
lea
bound
shl
shll
mov
add
push
movsb
add
in
out
jecxz
cmpsb
movsb
add
mov
add
mov
xchg
xchg
add
add
rclb
fidivrl
lods
add
mov
lea
pop
push
push
push
push
push
push
push
push
call
add
xchg
jno
jae
add
clc
add
lock
hlt
int3
cld
lret
fwait
add
add
data16
pop
jbe
add
add
sti
push
add
add
lcall
push
push
push
lea
push
push
call
xlat
add
add
outsl
pop
enter
xchg
je
imull
jo
loope
movsb
add
mov
iret
mov
add
xchg
test
add
add
add
mov
scas
add
popl
ljmp
iret
xchg
add
pop
push
push
push
push
lea
push
push
push
push
push
call
add
jmp
pop
push
add
add
push
add
add
add
push
jmp
jbe
mulb
add
out
add
notl
jae
add
in
add
mov
js
add
add
test
testb
add
add
push
fimull
data16
inc
cld
add
add
fcmovnb
ret
cltd
add
pop
call
push
pop
push
push
sub
sub
pop
call
push
lea
inc
pop
subl
push
push
push
push
call
xchg
add
mov
mov
jmp
pop
out
cli
jne
aam
loop
leave
jle
xlat
addb
mov
pop
add
popa
add
call
lret
mov
notl
lret
lods
jecxz
sahf
add
pop
add
add
ja
in
xchg
movsl
out
pushf
je
test
mov
lea
pop
cmpl
jne
push
inc
not
pop
pop
pop
push
lea
push
push
push
call
pop
pop
add
add
push
add
add
xchg
mov
mov
push
popa
xlat
outsl
mov
repnz
add
add
in
clc
jns
push
mov
lea
pop
pop
push
shl
pop
pop
push
dec
xor
add
pop
leave
push
sub
add
ror
sub
pop
ret
push
shr
pop
push
push
lea
pop
mov
add
push
lea
push
lea
push
push
push
push
call
test
std
add
push
add
add
add
push
rcl
in
test
mov
lods
shrl
xchg
mov
add
xchg
aam
in
add
add
xchg
add
movsb
pop
add
pop
push
push
lea
push
push
lea
push
push
push
push
push
call
pop
mov
in
imul
add
push
lods
mov
add
add
add
mov
lds
popa
mov
mov
ja
add
xchg
add
leave
repnz
out
shlb
mov
add
xchg
add
xchg
addl
sahf
cmc
add
add
add
roll
add
mov
and
push
add
xor
pop
push
push
xor
pop
push
mov
push
rol
add
pop
lea
sub
push
lea
push
push
lea
push
push
lea
push
lea
push
push
lea
push
push
call
jl
pop
lods
movsl
push
add
add
test
add
add
add
mov
rcrl
popa
push
xchg
add
rolb
add
fildl
int
xchg
pop
add
add
int
cmp
add
bound
jnp
add
push
rolb
push
scas
pop
movl
pusha
sub
add
lea
push
push
push
push
push
push
push
call
aam
push
add
push
pop
xorl
add
add
add
add
pop
stos
addl
lcall
add
add
add
mov
add
cmc
int
mov
lock
mov
les
call
popa
pop
add
push
not
sub
ror
pop
mov
push
lea
push
call
add
add
imul
add
jne
stc
xchg
add
aam
jp
add
mov
mov
add
arpl
xchg
add
pop
jmp
gs
movsb
xchg
add
out
mov
mov
add
mov
icebp
add
movsl
jecxz
cmpsl
add
arpl
add
mov
add
mov
stos
into
add
mov
lea
pop
mov
push
push
lea
push
push
call
nop
add
add
cmc
add
ljmp
mov
hlt
lods
in
add
loop
test
add
test
add
out
add
std
add
roll
add
add
jbe
mov
lea
pop
add
push
push
push
call
add
hlt
in
jbe
add
jecxz
andl
ret
add
push
add
add
jns
js
push
add
add
jne
jbe
add
push
add
add
sarb
xlat
add
test
add
add
mov
lea
pop
add
push
shl
pop
mov
mov
push
shr
xor
pop
cmp
jne
push
push
push
push
lea
push
push
lea
push
push
call
pop
jle
rcrb
mov
rorl
add
add
add
lds
add
add
lds
fwait
ret
add
jns
mov
lea
pop
cmp
jne
push
sub
shl
pop
mov
push
push
push
push
push
push
push
call
add
add
add
leave
bound
add
out
lcall
add
nop
mov
movb
add
in
push
arpl
mov
addr16
les
arpl
push
add
and
jae
mov
add
je
push
add
rcl
scas
ja
jne
fld1
mov
add
lea
pop
movl
jmp
push
push
lea
push
lea
push
lea
push
push
push
push
push
call
add
out
mov
movsl
add
fwait
mov
add
add
mov
add
in
add
add
lods
push
xchg
add
mov
xchg
sahf
mov
out
out
mov
mov
arpl
std
add
mov
xchg
add
push
lods
xchg
add
cmc
pop
add
add
pop
mov
push
not
pop
mov
push
add
shl
inc
pop
sub
jne
push
inc
not
pop
mov
push
push
lea
push
lea
push
lea
push
call
roll
add
add
add
add
imul
add
jbe
aam
push
add
add
roll
add
into
jb
mov
add
scas
fidivs
add
add
incb
push
fwait
loope
xchg
jne
repnz
mov
lea
pop
movl
jmp
push
push
lea
push
lea
push
push
push
push
push
call
loopne
add
jp
fiaddl
lods
add
xchg
mov
add
stc
mov
add
lock
scas
pop
lea
add
adcl
and
inc
cld
push
push
push
call
add
lcall
int
lods
pop
int3
add
fisubrl
push
add
lock
add
add
lods
add
add
mov
movl
push
arpl
mov
push
push
push
push
push
push
push
lea
push
push
push
call
add
add
arpl
add
add
fadds
add
in
add
addr16
scas
add
cld
xchg
lret
add
push
mov
ficompl
push
pop
add
add
into
add
add
mov
add
mov
add
add
stc
add
pop
cmp
jne
push
not
inc
inc
pop
mov
push
add
sub
pop
movl
push
push
push
push
push
push
push
lea
push
push
push
call
xchg
push
icebp
ljmp
lock
add
aam
mov
add
add
fdivrl
push
cltd
stc
lcall
mov
pusha
pop
add
mov
add
add
add
jle
add
fidivrl
ljmp
pop
jmp
push
lea
push
push
push
lea
push
push
push
push
push
push
call
xlat
jns
jo
in
add
addl
lds
in
stos
fstpl
rorl
int
jb
add
add
out
xchg
add
add
ja
lds
loope
jbe
add
jbe
in
add
ja
add
add
add
add
lods
mov
call
add
into
mov
lea
pop
mov
cmpw
jne
push
lea
push
push
lea
push
lea
push
push
push
call
movsl
jmp
arpl
mov
cltd
add
push
add
shrb
cmpsb
add
hlt
add
stos
add
add
add
add
add
add
jmp
mov
add
mov
movsl
cld
stos
int3
clc
add
pushf
mov
je
js
add
fmull
inc
adc
push
push
call
movb
mov
jnp
outsl
js
add
imul
out
fadds
movl
hlt
push
mov
push
add
cmc
add
stc
mov
into
pop
subb
fidivs
add
add
imul
push
lahf
jnp
scas
in
stos
mov
mov
adc
add
lea
pop
jmp
push
push
push
push
push
lea
push
call
cmpsb
add
add
arpl
push
fcmovb
addr16
pop
add
andb
add
add
mov
aam
add
cwtl
mov
jl
add
roll
pusha
data16
mov
lea
pop
pushl
push
lea
push
push
push
push
push
push
call
pusha
add
add
add
lock
lods
mov
cwtl
add
add
add
xchg
mov
jae
fisubl
jae
add
jb
add
jbe
popf
fdivrl
ror
add
add
test
mov
int3
lea
pop
pop
mov
push
add
not
sub
not
pop
mov
push
push
lea
push
lea
push
push
push
push
lea
push
push
lea
push
call
pusha
jmp
fadds
add
add
push
std
adcb
push
hlt
add
sahf
mov
xchg
add
repnz
imul
scas
add
add
add
add
in
add
mov
add
imul
repnz
add
mov
lea
pop
mov
push
push
rol
add
add
push
sub
add
lea
dec
sub
ror
pop
sub
pop
push
add
shr
sub
pop
push
push
lea
push
push
push
push
push
call
cmpsl
add
xchg
mov
icebp
les
mov
add
add
roll
fiaddl
incb
movsb
dec
outsl
add
add
iret
pop
jae
lret
scas
mov
add
imul
aad
movsl
pop
rcr
add
add
add
icebp
add
pop
call
push
shl
pop
cmpl
je
push
push
add
sub
rol
push
sub
add
dec
sub
pop
lea
dec
rol
pop
push
push
push
push
push
push
push
push
lea
push
call
add
add
testb
add
mov
in
mov
xlat
add
jmp
std
add
pop
xchg
pop
add
mov
pop
add
add
in
add
std
add
bound
pop
outsl
repnz
insb
cmpsb
add
hlt
add
scas
jle
lret
add
add
cmpsb
add
lea
imul
pop
push
push
push
push
push
push
push
push
push
push
push
call
add
jne
add
jno
jne
add
popf
add
add
push
pushf
fwait
into
add
add
add
sti
in
xchg
pop
xchg
jl
jle
rcr
movsb
xlat
add
movl
push
mov
add
pop
cmpsl
xchg
add
pop
call
push
ror
sub
rol
pop
cmpl
je
push
push
sub
dec
push
and
add
lea
inc
sub
add
shl
pop
add
sub
pop
push
lea
push
push
push
push
lea
push
call
std
jb
ja
xchg
in
mov
cmc
mov
add
add
add
lcall
pop
stos
add
add
add
mov
fidivrs
int
add
fildl
pop
pop
add
notb
jns
fistpl
add
add
filds
add
stc
add
movl
mov
lea
pop
push
call
push
push
push
push
push
push
call
push
push
add
insb
mov
xchg
add
mov
cld
add
imul
rolb
in
add
shr
rcr
adcl
in
iret
mov
lea
pop
cmpl
je
push
push
lea
dec
push
sub
add
sub
dec
lea
dec
pop
pop
push
add
pop
push
push
push
lea
push
call
add
push
cltd
xchg
add
add
add
add
popa
add
jbe
pop
xchg
xchg
lret
add
add
rcrb
ja
mov
hlt
add
andl
bound
call
push
lea
sub
not
pop
cmpl
je
push
push
shl
push
and
add
dec
xor
sub
ror
xor
sub
pop
sub
pop
push
push
push
push
lea
push
call
add
jmp
testb
jnp
cmpb
jmp
add
add
xlat
add
add
push
add
add
pop
add
popf
imul
add
add
add
mov
sti
icebp
subb
aam
xorl
fmull
push
shl
sub
ror
sub
pop
call
cmpl
je
push
push
xor
lea
sub
push
push
pop
add
ror
sub
ror
pop
dec
pop
push
push
push
push
call
add
add
fnstsw
xchg
jb
push
add
push
push
add
nop
mov
pop
add
xchg
cwtl
cmpsb
js
add
push
icebp
add
add
push
add
mov
cld
add
add
add
add
add
lea
pop
push
push
push
push
push
push
lea
push
push
push
push
call
out
lea
ja
fiadds
mov
mov
fs
add
scas
add
add
scas
sahf
loope
std
lret
add
add
stos
cld
call
pop
push
lret
add
mov
add
add
sarb
ja
add
mov
add
icebp
mov
add
js
add
jno
add
aam
bound
call
push
rol
add
shl
add
pop
cmpl
je
push
push
lea
shl
sub
shl
push
or
inc
add
shl
shr
xor
sub
shr
add
not
dec
pop
inc
pop
push
push
push
push
push
push
push
lea
push
push
call
add
add
jle
out
fs
add
add
jl
mov
add
pop
add
fmuls
sbb
xchg
add
add
push
add
add
mov
push
pushf
cld
test
fbstp
cmc
add
lea
pop
push
push
lea
push
lea
push
push
lea
push
call
add
fidivs
stc
add
pop
lds
add
jns
movsl
fldenv
add
cmpsl
pop
loopne
add
add
enter
add
add
mov
add
mov
leave
lcall
mov
lea
pop
call
push
sub
lea
pop
cmpl
je
push
push
shr
rol
dec
push
xor
add
inc
sub
shl
sub
shr
add
add
sub
pop
dec
lea
pop
push
xor
add
pop
push
push
shr
not
xor
pop
call
cmpl
je
push
push
shl
xor
sub
rol
push
xor
add
shr
sub
lea
pop
dec
xor
pop
push
push
push
push
lea
push
push
push
lea
push
push
call
clc
jge
jbe
hlt
add
loop
add
fwait
out
add
pop
cmpsl
add
xlat
add
pop
add
jno
push
pop
add
imul
jb
xchg
ja
push
int
in
lds
enter
xchg
add
cld
lea
pop
push
push
push
push
push
push
push
lea
push
call
xchg
mov
push
add
add
fcomps
popl
in
sarl
jl
add
jmp
add
xchg
xchg
add
lcall
push
movsb
add
loope
rcll
addr16
mov
jle
int3
lea
pop
call
push
add
not
lea
pop
cmpl
je
push
push
shr
sub
not
push
and
add
xor
xor
xor
sub
dec
add
sub
pop
sub
lea
pop
push
xor
add
pop
push
call
push
push
push
lea
push
lea
push
push
call
jl
mov
imul
ljmp
fwait
add
add
add
mov
jns
add
add
in
test
pushf
jo
add
mov
cltd
add
mov
lea
pop
cmpl
je
push
push
add
push
or
inc
add
sub
xor
shl
pop
pop
push
push
lea
push
push
push
lea
push
push
call
mov
in
xchg
cltd
filds
test
repnz
ror
add
add
repnz
xchg
jp
shl
add
jecxz
pop
lret
add
add
add
add
add
add
gs
add
push
cmc
out
add
add
add
mov
mov
fsubrs
mov
add
xchg
push
jl
jo
mov
add
mov
lea
pop
push
call
push
lea
pop
cmpl
je
push
push
push
xor
add
not
sub
inc
pop
shl
dec
sub
pop
push
push
push
push
push
lea
push
push
lea
push
call
jle
add
lock
add
add
add
gs
jbe
add
sti
add
out
mov
add
adc
ret
arpl
jae
popa
in
subl
add
add
in
add
jo
mov
sarb
add
push
add
movsb
call
loope
mov
rol
fmull
pop
push
push
push
lea
push
push
lea
push
call
lea
mov
aad
jbe
outsl
add
add
add
test
add
cwtl
add
fiadds
add
add
int3
lcall
call
fadds
add
mov
ret
add
pop
add
cld
add
mov
lea
pop
call
cmpl
je
push
push
not
push
push
pop
add
add
lea
sub
sub
add
add
pop
dec
add
pop
push
push
lea
push
push
lea
push
call
add
mov
aam
add
lahf
mov
push
add
mov
in
gs
add
add
mov
fistpll
int
std
shll
xchg
leave
pop
lret
loop
aam
bound
push
push
lea
push
push
call
xchg
add
add
nop
add
fldcw
add
rolb
add
add
add
cmc
cmpsb
add
lea
add
add
enter
lods
add
enter
add
add
pop
add
pop
push
roll
jge
add
cmp
add
mov
add
mov
mov
lea
pop
call
cmpl
jne
push
lea
push
push
push
push
call
add
jns
loop
xchg
gs
add
in
push
lahf
add
add
add
add
pushf
mov
mov
cmpsl
mov
add
test
add
add
add
scas
mov
fs
aam
push
mov
lea
pop
mov
movl
push
ror
sub
pop
jmp
push
shr
add
pop
xor
push
dec
inc
shl
pop
pop
push
push
push
lea
push
lea
push
call
add
je
add
sahf
add
std
mov
add
and
add
add
push
pop
popf
negb
add
testb
mov
mov
add
add
mov
lea
pop
pop
push
dec
pop
pop
pop
push
sub
pop
leave
ret
push
push
push
push
push
lea
push
lea
push
call
mov
mov
add
jo
pushfw
out
pop
mov
add
pop
movsl
lock
addb
add
cld
push
in
into
xchg
add
push
ret
add
add
jns
add
add
les
push
push
lea
push
push
lea
push
push
push
call
push
add
into
shl
add
add
add
popa
add
orl
add
jl
push
cwtl
add
mov
pop
mov
cmpsl
push
add
add
add
mov
add
xchg
xchg
add
loope
add
add
cld
lea
pop
mov
add
push
push
push
call
add
loope
add
push
in
lea
add
test
ret
add
test
jge
cmpsb
add
mov
fildl
add
in
mov
add
mov
fsubs
jnp
add
aad
add
mov
lea
pop
cmpl
jne
push
push
sub
not
add
push
or
not
add
not
add
inc
sub
inc
rol
lea
pop
not
xor
pop
push
pop
pushl
push
push
push
push
lea
push
push
call
outsl
jl
add
add
aam
scas
jle
int
add
add
lahf
add
add
lods
repnz
add
mov
mov
out
test
add
xchg
mov
add
nop
push
jne
nop
add
mov
add
cwtl
add
pop
call
push
lea
push
push
push
push
call
orb
add
fcomps
jo
jno
add
add
flds
gs
nop
int
mov
jnp
add
add
add
jge
call
lods
mov
in
enter
push
add
jbe
xorl
add
testb
jmp
add
add
out
add
fadds
add
test
add
pop
add
mov
lea
pop
push
push
lea
push
lea
push
push
push
lea
push
call
js
mov
fwait
xchg
cltd
movsb
add
enter
mov
lock
scas
mov
mov
mov
stc
add
add
insb
xchg
add
add
lahf
push
ret
popf
popf
add
data16
shr
adc
add
push
shr
shr
ror
lea
pop
cmpl
je
cmpl
jne
push
push
lea
push
push
push
lea
push
push
push
push
push
call
mull
fwait
add
call
push
add
add
mov
ljmp
add
lea
push
xchg
add
test
lea
lahf
push
add
call
popf
sbbl
add
add
add
push
cli
push
fs
js
add
lea
pop
leave
push
pop
add
pop
push
push
push
push
lea
push
lea
push
push
call
pop
in
scas
repnz
mov
jbe
popa
add
add
add
ficoms
xchg
mov
add
js
cli
mov
pop
in
add
mov
fadds
lret
lods
incb
add
push
rolb
lret
jno
cmpsb
lods
mov
add
cwtl
pop
add
lret
add
xchg
test
popa
sbb
pop
push
push
push
push
push
push
push
call
js
pushf
add
fucomi
add
jb
add
out
mov
mov
add
rolb
xchg
out
xlat
jle
add
sahf
rorb
add
mov
cld
lea
pop
pop
push
sub
not
pop
pop
leave
push
lea
push
push
push
push
call
repnz
movsl
mov
out
add
add
cltd
lret
mov
loope
scas
xchg
imul
mov
gs
stos
add
add
mov
cmc
add
xchg
fcoms
add
add
jl
jp
test
out
fmull
les
push
sub
not
pop
jmp
push
dec
xor
inc
pop
cmpl
jne
push
push
dec
shl
sub
lea
push
sub
add
rol
sub
sub
dec
sub
lea
pop
sub
add
pop
push
lea
push
push
lea
push
push
push
push
push
call
mov
outsl
add
lods
push
add
into
pop
aam
xchg
popf
add
icebp
add
add
xchg
lea
test
xchg
jecxz
popa
add
add
xchg
adcl
add
jno
add
add
add
in
ja
mov
add
add
add
popa
add
pop
pop
add
pusha
and
jne
call
push
push
push
push
lea
push
push
push
lea
push
push
call
add
jmp
addr16
aad
iret
add
add
test
add
repnz
imul
add
push
movl
out
pop
cmc
push
rolb
add
loop
nop
add
jmp
imul
add
pop
push
push
lea
push
lea
push
push
call
mov
xchg
lret
stc
test
push
fbstp
shr
add
ret
add
jecxz
in
add
add
add
ljmp
add
add
add
jnp
add
add
add
add
out
add
add
stos
add
xchg
add
jo
add
add
roll
out
add
add
add
pop
call
push
push
lea
push
lea
push
call
add
pushf
mov
add
push
mov
cmpsb
imull
add
loop
mov
add
xchg
add
xchg
add
aam
rcll
in
add
xchg
add
add
fwait
add
jmp
fadds
ljmp
jge
call
add
add
lds
rcr
mov
add
pop
jmp
cmpl
jne
push
lea
xor
pop
mov
mov
push
sub
add
pop
push
push
push
push
xor
add
lea
not
rol
sub
dec
add
inc
pop
sub
shr
rol
inc
pop
push
rol
add
pop
pushl
call
push
push
shr
ror
xor
push
push
pop
add
sub
sub
pop
add
ror
pop
push
inc
pop
pushl
call
push
rol
dec
sub
xor
pop
call
push
push
push
or
not
add
shl
shl
sub
add
ror
pop
rol
xor
sub
sub
pop
push
push
lea
push
lea
push
push
call
add
fimuls
add
mov
add
out
add
cwtl
xchg
lods
add
add
add
push
pop
add
add
add
mov
stos
bound
stos
mov
jnp
out
movb
cld
lea
pop
pushl
push
dec
add
pop
call
push
shl
pop
call
push
push
rol
sub
push
or
inc
add
lea
sub
add
add
sub
ror
shl
lea
shl
pop
lea
pop
push
push
lea
push
call
add
je
add
mov
in
add
add
stc
add
out
in
cmpsl
mov
imul
imul
add
out
add
int3
add
add
mov
xchg
out
push
add
movsl
mov
push
add
int
add
add
fwait
mov
cmc
pop
add
add
mov
xchg
icebp
lcall
pushl
push
lea
push
push
push
push
call
hlt
movsl
out
std
jl
jno
add
icebp
mov
in
sahf
add
lds
clc
mov
out
add
loopne
data16
pop
je
fs
test
pusha
add
leave
xchg
mov
test
add
add
cltd
add
xchg
xchg
add
add
add
icebp
mov
fadds
roll
loope
imul
hlt
lea
pop
call
call
push
push
rol
lea
push
or
inc
add
shr
sub
xor
pop
rol
lea
pop
push
push
lea
push
lea
push
push
push
lea
push
push
push
push
call
hlt
in
mov
mov
add
add
out
sti
mov
scas
add
add
loope
mov
pop
sahf
add
add
ficomps
add
add
add
add
ljmp
icebp
jecxz
lret
add
fldt
imul
lods
add
hlt
lea
pop
pushl
call
push
push
push
call
mov
cli
add
pop
add
movsl
add
jmp
ficompl
mov
add
stos
sahf
xchg
add
jecxz
pop
je
push
add
mov
add
add
stos
pop
pop
mov
ret
add
lods
mov
test
mov
add
add
pop
call
push
push
add
push
or
inc
add
inc
rol
sub
sub
xor
shl
rol
pop
pop
push
push
push
push
push
push
push
call
cli
fadds
jmp
push
xchg
movsb
add
add
xchg
jl
add
add
jo
pop
mov
add
imul
xchg
jbe
add
jle
add
add
pop
add
mov
loopne
mov
mov
in
xchg
pop
push
out
add
fnsave
add
add
pop
add
add
add
add
sbb
pushl
push
lea
xor
pop
call
call
push
push
lea
push
xor
add
lea
sub
sub
rol
lea
shr
ror
pop
lea
pop
push
not
add
sub
not
pop
pushl
push
push
lea
push
lea
push
call
add
cwtl
add
add
test
in
mov
cmpsb
in
mov
mov
cmpsb
testb
cmpsb
out
add
fs
add
add
push
nop
xchg
je
mov
popf
loopne
jns
jecxz
add
add
out
add
lds
stos
mov
lea
pop
call
call
push
not
pop
call
push
dec
rol
rol
ror
pop
lea
push
push
ror
ror
push
sub
add
sub
add
sub
ror
xor
inc
pop
not
pop
push
shr
sub
rol
add
pop
pushl
push
push
push
lea
push
push
push
call
add
popa
frstor
loop
scas
mov
push
add
jb
add
fadds
outsl
int
xchg
add
push
clc
add
add
add
mov
add
out
push
add
mov
fmull
xor
add
or
lea
push
push
push
call
lcall
jo
fildl
pop
add
rcl
mov
push
add
add
add
add
movsl
addl
into
add
rolb
test
push
cmpl
cmpsb
mov
lea
pop
push
call
push
push
add
add
sub
push
push
pop
add
add
inc
add
dec
sub
xor
not
pop
add
pop
push
push
push
push
push
push
push
call
sahf
scas
mov
ja
mov
add
repnz
outsl
loop
add
add
loopne
add
movsl
insb
out
jns
flds
add
test
hlt
jmp
add
mov
fstp
jno
pushf
add
add
mov
add
pop
not
cmpsl
add
add
loope
mov
loopne
add
ja
add
add
jle
enter
addr16
pushl
push
sub
pop
call
call
push
push
lea
push
lea
push
push
lea
push
lea
push
push
call
add
add
add
mov
lret
add
add
incb
add
shll
outsl
add
js
mov
jo
mov
aam
in
pusha
add
movl
mov
push
test
jnp
push
add
in
add
rol
xchg
add
ljmp
jmp
add
add
jmp
mov
addr16
lea
pop
mov
push
push
shl
push
push
pop
add
lea
rol
sub
dec
add
pop
sub
dec
inc
pop
push
lea
push
lea
push
push
lea
push
push
lea
push
lea
push
lea
push
lea
push
call
jge
flds
enter
lcall
add
add
lcall
add
mov
add
xchg
div
movsl
add
cmc
jge
pop
push
int
lret
je
in
test
mov
movsb
add
imul
add
in
add
movl
add
add
add
sub
jne
push
push
lea
push
push
call
add
in
lock
mov
add
gs
imul
add
in
add
add
shlb
movsb
int
add
lahf
lea
add
add
add
out
popf
mov
imul
add
nop
mov
jae
push
mov
add
add
add
add
ja
xchg
movsb
hlt
add
fisubs
mov
lea
pop
call
push
push
sub
lea
pop
pushl
push
push
push
call
push
xlat
in
les
push
mov
add
add
add
cld
fs
add
add
mov
add
aam
add
add
jo
push
mov
jne
add
add
jmp
add
pusha
add
loop
add
add
xchg
add
out
add
add
fwait
cltd
in
cltd
pop
add
add
push
stos
ret
add
testl
mov
lea
pop
call
push
push
add
push
and
add
sub
sub
shl
pop
xor
shl
pop
push
push
push
push
push
push
push
call
loop
add
add
gs
lret
mov
pushf
add
sahf
add
in
gs
add
add
stc
add
jnp
ficoml
pop
ja
data16
add
add
ljmp
add
add
mov
lea
pop
pushl
push
not
sub
pop
call
push
push
push
or
not
add
xor
add
sub
add
pop
inc
pop
push
push
not
sub
push
sub
add
not
sub
shr
lea
dec
dec
pop
xor
rol
pop
push
push
lea
push
push
push
push
push
push
lea
push
push
call
into
add
pop
add
add
fldt
xchg
add
push
movl
sahf
filds
add
add
mov
add
js
jbe
xchg
add
add
pop
scas
add
testl
arpl
pop
call
push
push
shr
add
add
push
sub
add
shr
sub
xor
ror
ror
pop
xor
pop
push
xor
pop
pushl
push
push
push
push
call
mov
popa
lcall
mov
mov
jae
xchg
xchg
add
add
pop
add
push
add
mov
jne
add
cli
iret
pop
add
mov
lea
pop
call
mov
push
push
push
push
push
lea
push
call
xchg
cmc
pop
add
mov
add
add
add
add
add
add
cmpb
stos
add
aad
add
add
add
enter
addr16
add
add
add
add
aam
add
add
add
push
sar
int3
xchg
lret
add
mov
mov
pusha
sbb
pushf
and
decl
call
leave
jl
dec
xor
leave
inc
pop
push
push
push
push
call
leave
add
iret
add
repnz
add
add
add
pop
jbe
mov
frstor
add
add
fwait
add
add
shll
mov
les
add
repnz
add
add
add
rolb
jns
push
jne
mov
std
push
add
popl
add
add
pop
jge
loope
xchg
add
fs
mov
lea
pop
push
push
push
push
push
push
push
push
push
push
call
xchg
add
jbe
add
test
add
add
add
jo
cwtl
repnz
in
add
add
add
add
out
add
mov
add
add
add
add
add
add
add
pop
scas
test
add
mov
in
mov
add
mov
je
add
test
add
lcall
push
push
sub
pop
push
push
shl
dec
dec
shr
pop
push
push
push
shr
add
sub
pop
push
push
push
push
lea
push
push
lea
push
push
push
push
lea
push
call
mov
and
loope
mov
add
repnz
add
fsub
jns
pop
add
add
into
add
cwtl
xchg
rolb
add
xchg
stc
mov
jle
jle
hlt
add
popa
add
mov
lea
pop
push
push
push
push
push
push
push
push
push
push
lea
push
call
je
jmp
cmpb
add
mov
mov
popa
xchg
addb
add
jns
imul
add
int
jno
imul
add
xchg
add
add
pop
add
push
jp
mov
add
xchg
mov
out
addb
add
movsb
filds
ja
add
out
add
mov
jbe
cld
lea
pop
pushl
push
push
sub
pop
call
push
push
dec
push
or
inc
add
sub
sub
pop
rol
shl
pop
push
push
lea
push
push
push
call
add
mov
add
add
add
add
aad
add
sar
faddl
movsb
push
nop
imul
movsl
mov
pop
add
rcr
add
hlt
push
add
jns
in
add
add
jmp
add
pusha
mov
push
jl
mov
cld
aam
xchg
add
mov
jo
iret
push
add
shl
scas
mov
lea
pop
pushl
call
push
push
push
lea
push
push
push
push
push
call
std
add
mov
fildl
mov
into
fiaddl
mov
arpl
add
sarb
movsl
mov
add
mov
out
add
movsl
cltd
jmp
push
jmp
pusha
xchg
add
pop
call
push
xor
add
dec
add
pop
mov
pop
push
lea
add
add
rol
pop
dec
jne
push
sub
rol
pop
jmp
call
push
push
shl
push
sub
add
rol
sub
sub
add
pop
sub
pop
push
inc
xor
lea
pop
pushl
push
push
push
push
call
int3
outsl
add
push
clc
add
add
add
add
add
jecxz
js
add
ljmp
out
sti
add
add
mov
lea
pop
call
push
push
lea
push
push
call
imul
xchg
cli
lcall
add
add
in
pop
jno
fldl
mov
enter
add
add
jo
fildl
add
popf
add
add
mov
mov
jecxz
in
test
jl
mov
jnp
rolb
add
add
in
add
add
add
add
fsts
add
adc
call
fdivs
fistps
sarb
push
push
call
fiaddl
add
mov
xor
aad
scas
lret
fs
add
sti
add
je
imul
lock
test
je
mov
jle
add
into
add
lret
add
roll
ret
ja
icebp
push
push
add
add
arpl
jmp
mov
std
mov
lea
pop
lea
push
push
sub
push
sub
add
add
sub
xor
xor
not
dec
pop
ror
shl
pop
push
add
pop
pushl
call
push
push
push
lea
push
push
lea
push
lea
push
push
push
push
call
andb
out
add
xlat
fdivp
add
fiadds
lock
jno
add
lea
add
add
jo
testb
clc
push
add
lods
add
cli
xchg
fiaddl
add
into
cmpsl
add
add
nop
jmp
add
pop
push
push
inc
shr
pop
call
push
push
shr
shl
lea
push
sub
add
add
lea
xor
sub
sub
lea
shr
dec
pop
add
pop
push
push
push
push
lea
push
call
add
push
add
add
mov
repnz
fists
add
xchg
mov
in
jge
in
add
mov
clc
add
movsb
je
movl
add
pop
pushl
push
push
push
lea
push
push
lea
push
push
push
push
push
call
cltd
pop
roll
in
movsl
add
pop
xchg
add
fbld
mov
icebp
loope
sahf
add
add
add
fmuls
jmp
rcrb
add
fmull
fadds
add
mov
mov
push
mov
mov
push
add
lea
pop
call
push
shr
shl
pop
call
push
lea
push
push
push
push
lea
push
call
mov
xchg
push
add
xchg
xchg
cli
stos
add
leave
shl
mov
enter
lret
add
mov
add
in
add
add
add
add
add
in
add
add
int3
lea
pop
mov
push
push
call
add
sti
add
add
lret
loopne
mov
add
mov
rolb
pop
push
cld
pop
add
add
ja
add
add
out
add
add
mov
add
add
pop
lea
push
push
ror
not
shr
push
push
pop
add
inc
sub
xor
ror
lea
pop
lea
add
pop
push
lea
lea
pop
pushl
push
shr
lea
pop
call
push
add
pop
lea
push
push
push
push
push
push
call
lret
into
lods
add
movsb
mov
mov
loopne
lcall
mov
xchg
mov
mov
fcoms
push
add
add
jns
ja
jmp
jb
add
test
add
addl
pop
add
cwtl
jb
jne
sahf
xchg
add
add
nop
add
mov
lea
pop
push
push
push
sub
inc
pop
push
pushl
push
push
xor
ror
shl
push
or
not
add
not
ror
lea
sub
sub
add
shr
pop
sub
not
shl
pop
push
push
lea
push
push
push
push
push
push
call
leave
sti
add
loop
fisubl
add
iret
xchg
mov
out
add
jge
mov
add
mov
add
fcompl
add
add
lahf
add
jecxz
add
fcompl
push
add
add
mov
cld
lea
pop
push
push
lea
push
call
clc
push
add
test
mov
mov
add
ja
iret
gs
ja
fldl
push
add
add
clc
jns
add
mov
in
sahf
imul
mov
pusha
aam
cmpsl
add
add
add
cltd
scas
lret
mov
lea
pop
call
push
push
xor
ror
add
not
push
sub
add
add
sub
sub
rol
inc
pop
sub
inc
pop
push
xor
pop
pushl
call
push
push
lea
push
call
add
mov
push
mov
jbe
add
add
add
nop
nop
jecxz
lea
movsb
add
incb
xchg
sti
pop
ret
add
idivb
fiadds
pop
add
rcrb
test
add
add
mov
lea
pop
push
push
add
pop
call
push
push
sub
shr
xor
sub
push
or
not
add
add
sub
not
sub
sub
pop
lea
xor
shl
dec
pop
push
lea
push
push
push
push
push
push
push
push
lea
push
call
mov
add
add
clc
loopne
roll
popf
in
add
jmp
add
scas
fiaddl
add
int3
add
roll
add
add
push
add
mov
add
mov
cld
jb
out
add
jle
cli
xchg
test
add
add
mov
xchg
int
add
push
lret
les
pop
pushl
push
push
push
push
push
push
call
add
cwtl
add
add
out
std
add
add
add
data16
lahf
pop
jns
mov
jmp
mov
mov
test
stc
xchg
add
mov
cli
aad
mov
push
add
add
fprem1
addl
imul
mov
add
loop
hlt
lea
pop
call
call
push
push
push
lea
push
push
push
push
push
push
lea
push
call
sahf
jae
add
cld
mov
cmpsl
add
add
roll
add
xchg
add
add
jne
pop
js
xchg
add
std
add
add
add
add
pop
iret
roll
aad
push
add
fisttpl
jnp
push
aam
push
scas
mov
movsb
push
add
add
addl
add
xchg
xchg
add
pop
jmp
pushl
push
push
push
push
call
aad
in
push
add
pop
add
mov
push
add
add
insb
call
add
test
push
push
add
js
jmp
add
mov
jns
add
mov
mov
mov
sti
flds
addr16
out
fs
mov
mov
lea
pop
mov
jmp
push
push
ror
add
add
push
and
add
ror
dec
ror
sub
xor
pop
inc
dec
pop
push
push
push
lea
push
push
lea
push
push
call
push
push
mov
add
add
add
jmp
add
mov
add
add
stc
lds
testb
jo
add
stc
fadds
mov
jns
rolb
fadds
xchg
add
mov
add
add
addr16
pushl
push
dec
xor
xor
pop
call
push
pop
push
call
push
push
sub
dec
push
and
add
inc
sub
sub
inc
pop
lea
pop
push
push
push
lea
push
lea
push
push
call
add
add
scas
add
cmpsl
add
add
addb
add
push
xchg
faddl
in
pop
leave
add
push
mov
ror
pop
add
cltd
mov
add
lock
add
mov
add
repnz
add
ret
mov
lea
pop
pushl
push
shr
add
shr
add
pop
call
push
not
add
not
shr
pop
push
push
lea
push
lea
push
push
call
movsl
mov
sahf
arpl
ja
roll
add
pushf
add
leave
push
jp
add
add
pop
push
jne
mov
add
movsl
add
add
mov
add
mov
add
cmpsl
gs
mov
add
movsb
popl
lds
add
mov
lea
pop
call
push
ror
pop
leave
add
push
push
push
push
lea
push
call
add
mov
add
add
push
mov
xchg
addl
lcall
jle
add
bound
push
jbe
js
mov
mov
mov
add
lea
pop
pop
pop
push
shl
add
inc
pop
pop
push
lea
push
push
push
push
push
push
push
lea
push
lea
push
call
add
add
jl
in
pop
lock
pop
ljmp
jmp
add
leave
add
add
add
lock
mov
jns
mov
add
addb
lret
data16
insb
leave
add
cltd
aad
pop
outsl
add
pop
pop
leave
push
sub
pop
add
push
push
lea
push
push
push
lea
push
lea
push
push
call
add
mov
sahf
faddl
add
jmp
push
lds
test
add
fucomi
ret
mov
add
out
sahf
nop
pop
xchg
pop
test
je
pop
test
icebp
mov
add
out
iret
add
loopne
add
into
add
movl
xchg
enter
add
imul
add
pop
ret
push
add
rol
pop
leave
push
push
lea
push
push
push
lea
push
call
clc
add
arpl
mov
add
fdivl
in
test
add
jge
mov
add
in
add
fs
lock
gs
xchg
add
xchg
xchg
sarb
add
pop
mov
mov
lea
pop
ret
push
sub
pop
push
push
not
add
add
pop
mov
push
not
ror
add
pop
cmpl
jne
push
pop
mov
push
push
push
push
push
call
test
mov
xchg
mov
addb
je
cmc
hlt
add
add
icebp
ja
push
push
jmp
movl
movsl
pop
add
out
stos
test
mov
add
mov
pop
add
add
jnp
loop
add
add
aad
shlb
add
add
add
cltd
mov
mov
lea
pop
jmp
push
lea
push
lea
push
push
lea
push
call
jmp
mov
lret
lret
enter
mov
pop
fwait
add
jo
sub
xchg
enter
fldenv
add
jo
add
push
movb
add
push
add
xchg
mov
outsl
movsb
add
fwait
add
xchg
addb
fmull
js
add
lea
pop
mov
push
add
pop
and
xor
push
not
shr
xor
pop
xor
push
sub
pop
add
push
add
sub
dec
not
pop
xor
push
not
inc
pop
dec
sub
push
not
lea
lea
shr
pop
jmp
push
shl
dec
pop
sub
push
not
not
sub
pop
pushl
push
push
push
push
lea
push
push
push
push
call
add
add
push
call
add
add
mov
add
add
imul
push
pushf
jmp
out
add
add
xchg
add
mov
add
lret
add
add
mov
in
jmp
mov
lea
pop
pop
sub
push
pop
cmp
jne
mov
push
not
lea
pop
lea
push
sub
pop
sub
mov
push
rol
sub
shr
pop
shr
push
inc
sub
pop
add
sub
push
push
push
push
lea
push
push
lea
push
push
call
pop
js
cltd
movsl
jl
push
add
add
shr
rolb
lock
jl
xchg
push
out
add
push
add
push
scas
add
add
add
repnz
mov
xlat
add
jbe
loope
into
add
add
lods
scas
push
test
jp
testb
mov
sti
xchg
add
add
pop
into
lods
add
jmp
cmpsl
sahf
in
add
leave
imul
pop
lea
fmuls
pop
pushl
pop
push
sub
pop
shr
push
shl
pop
and
sub
push
lea
push
push
lea
push
push
lea
push
push
push
push
call
add
mov
out
mov
add
add
add
pop
lret
scas
add
stc
add
add
rcrl
flds
cmpsl
pop
enter
add
add
in
mov
add
mov
lea
pop
cmp
jne
push
push
push
push
lea
push
call
mov
scas
in
add
jne
imul
aam
movb
mov
in
rolb
lods
aam
add
loop
add
in
movsl
pop
fiadds
add
jae
mov
fildl
jecxz
insb
bound
lea
pop
leave
push
add
pop
ret
push
push
push
push
lea
push
lea
push
call
gs
xchg
add
mov
loopne
add
data16
andb
add
add
add
add
mov
add
loope
loop
cwtl
add
je
add
mov
jno
stc
iret
pop
leave
add
add
add
add
add
jae
add
pop
push
mov
push
push
push
push
call
incb
fistps
push
add
bound
ja
js
add
in
xchg
add
je
add
add
mov
mov
mov
add
lea
pop
add
push
rol
not
pop
push
push
lea
push
lea
push
lea
push
push
push
lea
push
push
push
call
add
testl
mov
mull
pusha
add
mov
mov
roll
add
ja
add
lock
enter
data16
ja
lret
add
add
push
add
add
add
pop
push
push
add
pop
push
push
push
push
lea
push
push
push
call
out
ja
add
xchg
xchg
cli
add
rcll
bound
mov
jmp
popl
jbe
pop
add
mov
add
stc
add
mov
imull
add
xchg
mov
lea
pop
push
push
not
add
pop
push
push
dec
shr
not
pop
mov
push
push
push
lea
push
push
push
push
call
rcl
add
mov
add
add
lods
pop
add
add
mov
loop
mov
add
fcmovb
mov
mov
int3
out
add
std
add
push
aam
imul
iret
imul
test
in
mov
jl
push
enter
mov
lcall
fnstcw
lods
mov
lea
pop
lea
sub
push
push
push
lea
push
push
push
push
push
push
push
call
add
jae
popl
ret
add
movb
test
add
test
rolb
fwait
add
imul
push
add
outsl
out
add
loop
pop
mov
add
mov
mov
mov
add
pop
mov
push
push
push
push
push
call
push
lret
popl
lods
cltd
test
loop
fst
loopne
cwtl
ljmp
add
xchg
je
push
out
push
add
stos
loope
xchg
add
in
ret
add
add
add
iret
jae
mov
add
add
add
jbe
out
push
add
add
add
popl
mov
imul
lea
pop
shr
push
push
push
call
cld
add
jno
add
fxch
jmp
popa
add
mov
add
shrl
add
push
pop
jo
enter
into
out
in
outsl
add
pusha
iret
add
add
mov
xchg
pop
fidivs
jle
mov
lea
pop
add
push
push
push
lea
push
push
push
push
call
mov
add
test
aam
add
add
cwtl
add
add
stc
add
add
add
fucomip
filds
scas
add
mov
into
add
adcl
mov
add
mov
lea
pop
mov
push
sub
shl
sub
pop
add
push
lea
not
pop
mov
add
push
push
lea
push
push
push
push
push
call
add
loop
jae
xchg
movl
pop
add
add
add
xchg
add
rolb
lods
test
xchg
mov
add
add
add
push
mov
add
add
add
push
jmp
add
js
loop
popf
std
add
imull
pop
jl
arpl
mov
fwait
add
sbb
xor
push
lea
push
call
shl
data16
add
cmpsb
imul
idiv
add
sahf
mov
mov
add
mov
add
xchg
pop
add
jge
fldenv
fbld
add
add
call
xchg
icebp
jge
ja
outsl
out
add
addr16
stos
mov
mov
add
add
push
int3
lea
pop
mov
and
push
rol
pop
rol
rol
push
xor
not
pop
xor
push
add
pop
inc
push
sub
pop
cmpb
jne
push
not
shr
not
pop
add
cmp
je
push
sub
pop
add
push
push
push
lea
push
call
add
iret
add
out
clc
add
add
add
call
add
xchg
mov
add
add
add
add
shl
mov
add
jns
cmc
xchg
mov
lea
pop
cmpl
jne
push
push
push
push
lea
push
push
lea
push
call
fadds
add
fildl
pop
add
add
lock
ljmp
jno
je
andl
mov
repnz
add
add
jle
add
imul
add
rolb
xchg
aad
rolb
in
add
out
cld
pop
jmp
push
add
add
add
hlt
lea
pop
xor
push
sub
pop
pop
push
push
push
push
lea
push
push
push
call
jo
mov
mov
test
pop
add
add
pushf
jne
out
imul
add
add
add
mov
push
add
add
add
jge
in
arpl
scas
add
add
add
mov
pop
imul
add
pop
pop
push
push
push
push
push
call
jmp
cli
aad
mov
test
jo
pushf
fucomip
std
push
cmc
mov
add
mov
je
push
cmc
mov
jae
xchg
mov
mov
rolb
pushf
add
push
add
adc
pop
push
pop
pop
pop
push
shl
not
lea
dec
pop
leave
ret
push
pop
mov
push
lea
push
call
add
add
std
sbbb
jae
je
arpl
je
shrl
add
clc
add
hlt
add
iret
add
add
sahf
add
lock
cmpsb
xlat
push
mov
mov
add
push
cwtl
sahf
add
mov
mov
lea
pop
add
push
shl
inc
not
pop
push
push
add
dec
pop
push
push
not
sub
inc
dec
pop
add
push
xor
pop
mov
push
not
xor
pop
cmpw
push
add
sub
rol
pop
pop
push
push
push
push
lea
push
push
push
push
push
push
call
ljmp
roll
add
testl
nop
rolb
hlt
in
lahf
addr16
push
roll
add
in
push
add
add
xlat
test
js
int3
ljmp
add
add
add
and
push
fnstcw
add
test
add
icebp
add
fmull
push
add
inc
pop
mov
push
push
push
lea
push
push
push
lea
push
push
push
push
call
les
add
icebp
out
mov
add
add
mov
jecxz
jb
clc
sbbl
jle
arpl
add
aad
xchg
add
mov
mov
add
push
xchg
add
add
add
xchg
jo
icebp
add
mov
int3
lea
pop
call
push
push
push
push
push
call
add
clc
rcrl
add
add
lds
int
stos
ret
lods
add
add
add
pop
mov
ja
cmpsl
insb
add
lds
fwait
mov
int
les
ffree
imul
jno
add
enter
repnz
mov
lea
pop
xor
pop
push
push
call
out
clc
arpl
stc
add
arpl
pop
add
add
add
add
add
add
fiaddl
mov
clc
mov
jns
add
leave
add
mov
add
xlat
mov
add
add
push
shr
test
add
xchg
shrl
mov
add
mov
insb
int3
add
add
pop
pop
pop
push
pop
pop
push
dec
dec
pop
pop
push
xor
add
not
pop
leave
push
sub
dec
pop
ret
push
xor
rol
pop
push
push
lea
push
call
mov
addb
add
faddl
into
icebp
add
add
mov
pop
out
add
push
add
leave
shr
xchg
scas
add
cld
shlb
jbe
ja
add
sahf
stc
mov
add
add
arpl
pop
mov
add
push
push
lea
push
push
lea
push
push
push
push
call
cmpsl
in
cld
roll
mov
push
xchg
fldl
movl
aam
pop
add
xchg
add
testl
add
add
out
fwait
add
add
andl
mov
add
add
mov
loopne
xchg
fadds
mov
mov
lea
pop
push
push
lea
push
lea
push
push
push
call
add
add
xchg
add
cmpl
fldt
add
push
push
jne
mov
stos
lds
add
add
add
popf
add
sti
out
mov
add
add
add
mov
jmp
add
mov
hlt
lea
pop
push
push
ror
pop
push
push
push
push
push
lea
push
lea
push
push
push
lea
push
push
lea
push
call
jbe
flds
cmpsb
rclb
not
arpl
fadds
jae
add
fadds
xchg
mov
scas
leave
add
cmc
add
fadd
add
add
mov
add
add
mov
jns
xchg
add
rolb
mov
lea
pop
mov
push
add
not
rol
dec
pop
push
pop
push
push
push
lea
push
push
push
push
push
push
call
add
icebp
cli
xorl
add
les
pop
xchg
jo
les
add
add
add
js
add
mov
flds
fcmovu
out
imul
subl
add
add
add
mov
mov
add
jns
push
add
pop
lea
sub
push
push
call
aam
add
add
add
add
scas
add
bound
roll
add
les
mov
add
add
push
add
loopne
pop
add
add
outsl
push
add
add
pop
test
fs
popf
movsl
mov
push
ficomps
jns
idivl
hlt
lea
pop
mov
push
add
shl
add
pop
shr
push
push
lea
push
push
call
add
add
popl
add
pushf
out
add
cld
push
nop
icebp
push
jno
loope
mov
hlt
add
add
mov
xchg
add
movsl
cmpb
jo
add
mov
lea
pop
add
push
push
push
lea
push
lea
push
push
lea
push
push
push
push
call
rcr
mov
nop
js
add
xchg
add
mov
add
pusha
nop
add
mov
js
lods
aad
add
pop
add
add
fists
mov
add
mov
gs
jno
add
scas
mov
add
add
jp
add
add
imul
mov
add
mov
lea
pop
mov
add
push
not
shr
xor
pop
pushl
push
add
lea
ror
pop
popl
push
rol
add
pop
mov
push
pop
add
xor
push
xor
add
pop
lea
mov
push
push
push
push
push
call
add
mov
add
add
add
icebp
ljmp
jno
sahf
loop
add
mov
mov
add
pop
iret
add
roll
pop
cmpsl
add
add
mov
outsl
add
aam
bound
add
push
rol
sub
xor
pop
xor
push
lea
push
lea
push
push
push
push
call
add
clc
add
arpl
add
add
add
cmpsb
add
cmpsb
mov
mov
repnz
fdivs
add
add
flds
add
lret
lea
pop
rol
push
lea
push
call
mov
add
push
add
add
bnd
add
mov
push
jo
popf
jle
add
ja
imul
out
add
shl
jbe
add
add
pop
neg
add
add
clc
add
stos
mov
mov
add
add
cbtw
push
add
lea
pop
nop
nop
push
pop
xor
nop
push
push
push
lea
push
push
push
lea
push
call
ficomps
jge
ljmp
outsl
add
cwtl
add
cld
scas
lret
xchg
lods
add
in
add
pop
ljmp
add
nop
add
je
add
mov
xchg
fistpl
pop
imull
pushf
xlat
add
lret
add
add
cld
jno
jle
mov
lea
pop
nop
inc
push
push
call
movsb
icebp
jp
mov
jp
xchg
xchg
in
sti
add
add
add
xchg
add
add
add
add
mov
cwtl
add
add
fs
add
js
out
mov
lea
pop
nop
nop
push
inc
pop
cmpb
jne
add
push
push
push
push
push
push
push
call
add
add
stos
pop
mov
pop
faddl
add
mov
add
pusha
mov
jmp
add
xchg
add
lds
mov
pushf
int3
add
add
mov
mov
mov
test
fmull
push
inc
pop
nop
push
push
push
push
push
push
push
push
call
adc
mov
movsb
xorl
add
fdivl
add
add
push
in
sti
add
add
add
add
mov
add
pop
push
add
leave
push
add
out
cltd
jne
js
add
loopne
add
data16
aad
fsubrs
add
shll
in
add
cltd
cmpsl
push
pop
pop
add
lea
pop
cmp
je
push
push
lea
push
lea
push
lea
push
push
call
cmpsl
add
in
add
les
les
loope
stos
jo
pop
je
add
faddl
push
pop
mov
mov
add
scas
add
imul
push
push
add
add
loop
add
xor
movl
test
add
pop
nop
push
rol
shr
pop
nop
push
push
push
lea
push
push
push
push
lea
push
call
iret
mov
roll
add
xchg
fdivrs
push
add
pop
lock
add
rcr
mov
jno
lret
add
xlat
xchg
gs
fsub
mov
mov
lea
pop
inc
push
rol
lea
pop
nop
nop
push
lea
push
push
push
lea
push
push
push
lea
push
lea
push
push
call
add
call
stos
xchg
add
add
hlt
sahf
fldl
xchg
add
add
jb
movsl
in
test
add
add
xchg
cmpsl
andl
lock
fiadds
cmc
jle
movsl
imul
add
int3
add
add
add
jns
mov
lea
pop
cmp
jb
push
sub
pop
xor
push
lea
push
push
call
mov
rolb
pushf
out
push
sti
mov
push
mov
mov
out
fistpl
pop
addr16
lds
lods
movl
scas
add
loop
sti
add
add
nop
add
add
mov
add
mov
jmp
jmp
mov
add
lods
jb
enter
mov
lea
pop
jmp
push
lea
push
push
call
mov
jl
jge
pushf
push
out
mov
add
pop
ficompl
push
ret
add
andb
notl
add
add
add
add
add
imulb
add
add
in
xlat
mov
add
jo
add
add
je
scas
add
hlt
add
add
std
add
add
mov
lcall
lea
pop
mov
add
push
ror
pop
movzwl
push
add
pop
mov
push
add
sub
shl
pop
add
push
ror
shr
pop
mov
push
sub
dec
pop
xor
xor
push
push
push
call
mov
mov
add
lods
mov
cmpsl
int3
mov
gs
add
add
scas
xchg
add
test
addl
out
jle
mov
lahf
stos
pushf
push
jle
add
cld
push
add
add
add
add
add
test
add
movl
cli
aam
bound
shl
push
dec
inc
pop
xor
push
push
push
push
push
push
call
add
add
scas
test
mov
push
mov
push
stc
loop
xchg
add
xchg
jb
mov
int
mov
test
mov
add
add
xchg
mov
add
add
mov
stos
cltd
add
insb
mov
mov
add
fdivrs
xchg
ljmp
loope
mov
lea
pop
shl
push
push
lea
push
call
rolb
addl
shl
add
add
add
aad
push
add
mov
push
lcall
mov
mov
enter
xchg
push
add
add
pop
push
pop
add
cmc
add
movl
stos
add
mov
mov
jbe
mov
push
mov
pop
iret
add
push
fcoms
mov
lea
pop
xor
push
push
push
lea
push
push
lea
push
push
push
call
add
add
add
pop
add
add
repnz
push
add
add
mov
sbbl
add
add
add
out
int3
push
add
xchg
filds
add
les
lds
add
pop
push
in
mov
add
fmull
loope
xor
push
push
push
push
push
push
push
push
call
aad
xchg
lret
add
lods
add
incb
pusha
mov
jnp
jnp
loopne
fadds
add
lods
add
add
add
jno
add
add
add
add
pop
mov
roll
add
les
pop
add
jle
mov
sti
std
jp
out
add
add
push
add
imul
mov
add
out
add
and
rcll
in
push
push
push
push
call
mov
add
push
aam
pop
add
jp
add
add
test
jmp
int3
add
add
xchg
stc
jne
push
les
add
add
pusha
xchg
add
xchg
iret
pushf
mov
jns
add
popl
pop
sti
jae
lds
nop
imul
rcrb
add
fwait
lods
add
mov
cmpsl
add
add
rolb
imul
mov
movsb
mov
lea
pop
add
push
push
push
push
push
push
push
call
xchg
xchg
out
repnz
into
add
add
je
add
push
add
xchg
push
add
outsl
add
addr16
push
js
pop
subl
incb
scas
mov
add
add
bound
add
lods
jmp
add
lea
pop
pop
pop
push
lea
push
call
div
addr16
xchg
movl
aam
int
jp
pop
popa
add
push
roll
add
cwtl
push
add
add
ljmp
cmp
mov
out
add
out
mov
les
pop
push
push
push
push
lea
push
push
push
push
lea
push
push
call
leave
jmp
lcall
mov
lods
add
cli
into
jo
popa
pop
in
icebp
add
mov
xchg
mov
add
xchg
mov
add
leave
pop
add
add
mov
movsb
add
jmp
add
add
mov
lea
pop
leave
push
push
call
movb
ret
mov
add
cmpsl
add
loop
mov
xchg
add
mov
cltd
jb
mov
xchg
sbbl
call
int
add
test
add
jo
lea
call
cli
in
js
arpl
cmc
data16
xchg
test
add
fdivp
addl
add
pop
ret
push
push
lea
push
lea
push
lea
push
push
lea
push
lea
push
push
push
push
call
add
jbe
jbe
add
add
add
fdivrp
add
jo
adcb
add
test
stos
fs
cltd
test
cmc
data16
flds
mov
push
in
rcr
out
jns
add
movb
gs
add
mov
mov
lea
pop
mov
push
push
push
push
push
lea
push
call
cmpsb
lods
mov
sbbl
add
ret
add
imul
add
mov
pop
add
add
add
jne
fcmovnb
jecxz
add
mov
lret
pop
pop
add
pop
lret
testb
add
add
gs
ret
add
aam
pop
xchg
fstpl
push
cmpsl
add
orb
loope
aam
bound
pop
push
push
add
add
pop
push
push
sub
pop
push
push
push
push
lea
push
push
push
push
push
push
lea
push
call
cltd
movsb
add
repnz
cmpsb
shll
cmpsb
test
add
add
popa
add
data16
add
cli
mov
pushf
fnstenv
testl
loopne
cli
bound
add
decb
add
pop
add
add
pop
mov
xchg
xlat
fs
mov
mov
lea
pop
push
push
push
push
push
lea
push
push
push
call
mov
add
mov
jge
lds
add
add
scas
lcall
mov
popl
add
popl
filds
lea
add
lds
lea
pop
mov
mov
push
lea
push
push
lea
push
lea
push
push
lea
push
call
cli
push
mov
xchg
jl
cmpsl
jo
xchg
add
add
fadds
add
jp
int3
add
mov
mov
add
pop
int3
pusha
mov
filds
add
add
mov
xchg
add
lds
add
add
scas
add
mov
lods
add
in
add
mov
jb
add
jle
pushf
test
shr
cmc
add
add
add
pop
mov
push
shr
pop
test
je
push
xor
rol
lea
pop
mov
push
shr
add
dec
pop
test
je
push
sub
sub
add
add
pop
mov
push
add
add
pop
mov
push
push
call
add
mov
in
shrb
add
data16
iret
mov
add
mov
pop
addl
add
pop
popl
mov
jp
movl
add
in
jnp
add
add
add
add
add
add
lcall
repnz
add
add
cld
lds
fcoml
fcmovu
stos
add
add
add
or
pop
push
sub
pop
inc
cmp
je
push
rol
dec
pop
test
je
push
push
push
push
push
push
push
push
push
push
call
fildl
add
mov
int
out
add
mov
add
out
add
add
insb
add
add
push
xlat
addl
add
add
stos
add
add
add
shl
mov
lea
pop
mov
push
push
push
lea
push
lea
push
call
add
pop
add
out
test
add
in
jmp
xchg
leave
add
in
add
add
xchg
imul
int3
cli
addb
add
add
rolb
add
push
add
mov
loopne
add
rol
enter
shll
roll
mov
fadds
mov
fistpll
cmpsl
mov
lea
pop
inc
cmp
je
push
inc
pop
test
jne
push
lea
pop
xor
push
push
push
call
add
xchg
mov
mov
into
mov
ficomps
mov
add
fstpt
rolb
mov
xchg
sub
add
add
add
add
add
int3
lea
pop
pop
push
lea
sub
pop
pop
push
push
push
lea
push
push
push
call
push
jb
jno
test
add
add
data16
add
jae
add
add
pop
add
lret
mov
add
add
jbe
cld
rcr
push
sarl
add
pop
add
add
arpl
lea
pop
pop
pop
push
lea
push
push
push
lea
push
push
push
push
push
call
mov
scas
add
add
jp
call
jecxz
xchg
pop
in
add
pushf
mov
test
add
mov
mov
add
into
pop
shrb
sahf
xchg
fcoml
add
add
add
mov
enter
add
add
mov
lea
pop
leave
ret
push
shl
add
shr
pop
mov
push
push
push
push
push
call
mov
scas
jns
cmpsl
mov
cltd
add
xchg
loop
movsb
clc
cli
nop
add
in
add
push
mov
aad
lret
iret
fnstenv
jnp
addr16
shl
push
push
stc
lods
outsl
add
jle
add
add
add
loop
mov
lea
pop
inc
cmp
jne
push
ror
rol
sub
pop
lea
push
pop
mov
push
push
push
lea
push
push
push
push
lea
push
push
call
push
push
insb
add
jns
add
push
mov
xchg
add
push
lahf
mov
mov
xchg
add
add
add
imul
xlat
add
imul
pushf
add
mov
add
add
into
fidivrl
mov
add
sti
add
mov
lea
pop
test
je
push
add
rol
shr
inc
pop
mov
push
push
lea
push
push
call
pop
data16
roll
popa
push
arpl
add
pop
add
jle
add
cmc
add
mov
pushf
add
cmc
ret
nop
mov
jnp
addb
xchg
xlat
push
add
add
add
lods
fldl
add
add
add
add
add
mov
sarb
xchg
stos
sahf
mov
jo
add
scas
xchg
rcr
out
mov
lea
pop
add
push
push
lea
push
push
push
call
fldl
add
add
mov
pop
add
cli
add
push
add
fldl
add
push
add
cmc
ljmp
imul
mov
data16
cmp
jne
mov
push
lea
pop
test
je
push
xor
add
shl
pop
mov
push
push
push
lea
push
push
push
call
add
add
jmp
roll
pop
add
clc
add
shll
push
icebp
add
add
push
notb
add
add
add
mov
cmc
add
scas
add
add
in
loope
mov
add
decb
pop
add
push
shr
pop
cmp
je
push
lea
push
push
push
lea
push
call
xchg
sti
je
mov
add
mov
add
add
pusha
add
data16
sti
in
cmpsl
rcrl
stos
add
add
jae
add
jno
add
imul
add
stc
ret
out
testl
jl
xchg
add
int3
out
mov
add
add
pop
jmp
xor
push
add
xor
not
inc
pop
pop
push
not
shr
pop
pop
push
shr
shr
inc
inc
pop
pop
push
lea
push
push
push
call
pushf
rcr
mov
add
sbbl
add
add
test
stos
lock
aad
add
add
lock
xchg
stos
add
add
mov
cmpsl
add
xchg
jp
add
out
popa
jnp
xchg
lea
push
add
add
pop
pop
leave
push
inc
shl
dec
xor
pop
ret
lea
push
push
lea
push
push
call
pop
lds
mov
js
loopne
les
add
add
add
hlt
decb
les
fs
imull
out
test
xlat
add
xchg
xlat
mov
mov
les
push
push
lea
push
push
push
push
push
push
push
call
scas
pop
insb
xor
add
add
mov
add
add
in
jne
add
add
add
int3
outsl
jns
cli
add
xchg
jmp
lods
push
add
mov
mov
repnz
add
push
popa
and
pop
pop
push
rol
pop
pop
leave
push
add
pop
ret
push
sub
shr
pop
mov
push
pop
pop
pop
push
not
not
pop
pop
push
add
sub
add
shl
pop
pop
leave
push
lea
pop
ret
test
push
test
jae
test
jb
shlb
push
xchg
fdivs
and
jae
test
jae
add
jb
and
push
jbe
cmp
in
push
ljmp
cmp
loope
xor
push
and
arpl
and
stc
lock
adc
enter
inc
aam
jbe
and
mov
std
dec
int
rorl
xchg
mov
xchg
aad
pop
add
inc
adc
movsb
or
stos
clc
jne
cs
cs
fldl
mov
call
and
or
and
mov
daa
pop
sub
divl
cmpsb
jmp
inc
cmp
mov
push
loopne
sub
nopl
cld
rolb
push
xchg
lahf
push
mov
and
cmp
lock
xor
fstp
push
add
popf
mov
sub
sbb
arpl
xor
mov
inc
mov
and
addb
sbb
imul
sub
fidivrl
jle
fldl
cld
loope
popf
mov
sub
dec
sbb
push
xchg
or
lock
mov
dec
ja,pn
repz
mov
test
and
rol
sbbb
xchg
fistl
ja
xor
daa
xchg
mov
cld
jae
scas
pop
fs
pop
sub
fmuls
test
mov
std
lcall
addb
push
lea
daa
shll
ret
pop
dec
dec
push
pop
mov
push
inc
popf
in
xchg
jecxz
fs
and
jbe
scas
ds
cmp
and
xchg
mov
pop
je
call
sub
xchg
popf
aaa
insl
pop
xor
faddl
jle
popf
push
xlat
dec
xchg
inc
rcl
pop
push
sbb
sub
dec
xchg
outsb
dec
leave
cmpsb
std
mov
subb
mov
repz
mov
adc
es
dec
pop
jge
xchg
cmp
push
sub
test
adc
push
or
pop
fldl
push
rcl
stos
ja
sti
loop
bound
aam
push
lahf
rclb
lret
pop
push
mov
cli
outsb
je
fsubs
repz
fcmovbe
dec
insb
out
xor
xchg
mov
ret
mov
fdivrl
js
push
lret
dec
push
loope
cmc
jl
std
cli
and
mov
adc
push
cmp
shll
mov
lods
mov
mov
fidivrs
xchg
je
inc
push
ret
lds
cwtl
jp
movsb
push
sub
mov
cltd
cmp
xorl
lea
adc
push
fld
xchg
test
in
push
lods
xlat
mov
iret
jg
xchg
cmp
testb
jle
sub
das
jnp
mov
lret
fstl
fbstp
xchg
jnp
and
loope
fadds
dec
mov
or
push
jno
rcr
shlb
sti
loop
cmpsl
or
mov
sub
cs
cmpsb
pop
add
pop
pop
in
inc
xchg
je
add
pop
cmpsb
push
pop
hlt
jb
popf
xchg
stc
test
jl
mov
push
sub
fwait
mov
jnp
sbb
dec
mov
xchg
call
push
push
or
mov
lods
adc
gs
xchg
lret
pop
xorl
fsts
push
adc
pop
jb
loope
sub
icebp
inc
dec
sub
jae
clc
outsb
adc
cli
pop
mov
sub
mov
inc
xchg
iret
jae
into
push
hlt
jno
sbbl
xchg
cmp
dec
xchg
lods
xchg
inc
fwait
aad
mov
mov
outsl
ljmp
mov
mov
jb
mov
mov
mov
dec
or
fs
sub
into
loop
xchg
push
and
nop
cmpsl
leave
push
dec
enter
mov
scas
imull
pusha
and
sbb
dec
jno
xlat
imul
es
sbb
jecxz
ljmp
push
jle
scas
divl
push
jle
int3
icebp
lcall
fwait
cmp
mov
insl
sub
hlt
aas
add
xchg
lcall
sbb
repz
aas
fadds
fldenv
sub
adc
dec
dec
insl
aad
inc
or
sub
stc
fimull
dec
pop
mov
pop
sub
sub
leave
sahf
jg
push
cmp
inc
cltd
xor
mov
cld
xchg
ss
mov
xor
push
les
pop
push
cld
jl
jno
xlat
mov
insb
adc
out
pop
push
pop
fadd
pushf
cmc
out
fsubrp
or
cmp
and
out
jmp
popf
xchg
push
fdivl
mov
mov
cmp
ss
ret
jl
cmpsb
repnz
push
insl
adc
cmp
and
xor
pop
push
cld
sbb
jge
sub
cmp
jmp
rolb
sub
ds
jno
fwait
dec
jns
in
cld
mov
pop
movsb
jge
out
sbb
sbb
in
into
lds
cld
jae
add
loop
jl
icebp
pusha
mov
lret
sub
insl
and
daa
loop
mov
and
negl
inc
jecxz
add
mov
xchg
xor
pop
mov
xchg
sbb
xchg
psubw
enter
push
cmp
stos
mov
sarl
mov
inc
fldt
into
std
divl
xorl
mov
icebp
pop
mov
mov
and
mov
loop
mov
mov
lahf
gs
add
xor
xchg
out
subl
imul
rol
jmp
insb
fidivl
lret
movsb
fs
add
xor
push
int3
js
subb
dec
sub
jecxz
in
push
icebp
data16
pop
adc
stos
stos
push
sbb
aaa
je
out
sbb
add
cli
pop
lret
sbb
std
pop
loope
xor
mov
xlat
sbb
xor
ljmp
cltd
cmp
adc
add
xchg
aaa
inc
add
repz
sahf
int3
cmp
out
movsb
fsubs
das
jb
xchg
push
dec
pop
add
mov
aam
int3
xchg
cmp
imul
lods
sti
frstor
jmp
ja
loopne
lcall
mov
mov
lret
in
add
test
push
push
fwait
jae
add
sub
cmpsl
sub
fs
xchg
pop
mov
ret
dec
popf
pop
loopne
out
sub
mov
shlb
adc
ficoml
lahf
mov
addr16
repnz
loopne
orb
sbb
idiv
pop
inc
lahf
xchg
fildl
jo
jo
pop
mov
and
sub
jbe
add
fildl
xchg
or
shrb
pop
inc
and
stos
jmp
push
fstl
shll
xchg
xor
push
dec
out
out
add
jl
int
push
add
pop
cmpsb
out
popf
daa
gs
test
imul
negb
xor
bound
lahf
pop
loop
add
loopne
mov
jo
push
roll
mov
aas
mov
add
repz
cmpsl
mov
xchg
js
mov
xchg
in
aad
lret
pop
mov
dec
lods
mov
outsb
and
mov
xchg
sahf
fsincos
lds
popa
pop
or
xchg
cmpsb
sub
add
sbb
mov
sti
xchg
push
fbstp
daa
fdivrl
jno
mov
and
mov
mov
into
push
or
jp
xchg
lds
icebp
push
mov
sbb
roll
in
or
and
jp
inc
mov
cwtl
dec
pop
out
insl
mov
cmpsb
push
and
adc
pop
daa
fs
jp
enter
popl
pop
daa
icebp
cwtl
and
mov
cmp
sbb
mov
and
pop
sbb
sub
mov
mov
inc
mov
aam
es
push
or
das
pop
mov
mov
mov
and
mov
test
fcompl
adcl
cmp
fldcw
sbb
inc
aaa
testl
movsl
ret
xchg
stos
xor
cmp
pushf
sub
cmp
lret
push
mov
and
mov
cmp
es
xchg
fdivrp
es
adc
adc
rcr
mov
xlat
sub
stc
repnz
es
xchg
xchg
cmp
cmp
fs
or
xchg
imul
in
inc
subl
mov
pop
fsubl
inc
mov
aam
pop
add
jp
xchg
adc
shrl
sub
sub
cmp
xlat
insl
loope
xor
call
sti
popa
negl
xchg
arpl
cmp
dec
pavgb
rcr
shrb
push
pop
push
int3
shr
jg
fnsave
mov
inc
mov
hlt
gs
mov
and
in
ss
and
std
sahf
aad
jl
addr16
test
cmp
adc
mov
popf
pop
hlt
push
outsl
push
adc
jne
test
mov
mov
stos
or
insl
js
jle
cmp
repz
mov
adc
enter
push
fistpll
sub
es
push
insb
lahf
insl
in
inc
xor
inc
fstpt
jg
pushf
dec
or
inc
ja
mov
pushf
pop
popa
mov
mov
sub
dec
stos
pop
fsubrs
roll
sbb
and
mov
movsb
and
jb
gs
in
sbb
fisttpll
mov
adc
cmc
bound
dec
dec
sub
insb
cmc
or
pop
sub
stc
mov
or
mov
loop
mov
fidivrl
inc
std
scas
aam
mov
orb
sub
mov
mov
fld1
mov
idivb
pusha
in
popf
lock
push
sbb
lds
cmp
and
xchg
insl
add
mov
das
push
xchg
xor
add
mul
dec
stos
in
inc
add
jg
or
mov
push
cmp
dec
sbb
mov
shlb
xchg
cmpsb
add
adc
mov
add
sbb
loope
or
incl
cld
xchg
and
dec
pusha
mov
rorl
dec
mov
nop
push
sarl
fisubrs
adc
adc
lds
sahf
inc
mov
add
idivb
mov
xor
jne
mov
add
hlt
xchg
stc
sub
adc
shrl
xor
jae
mov
push
call
jmp
and
cmp
rolb
lahf
dec
mov
push
pop
pop
inc
mov
and
mov
and
sub
xchg
movsl
andl
xor
sahf
jnp
sub
fld
lret
push
fs
mov
gs
push
add
ror
jmp
xchg
aaa
ja
fidivrl
les
pop
mov
pop
sahf
pop
lret
cmp
pop
out
movsl
rcrb
xchg
jmp
enter
cmp
clc
mov
es
dec
js
mov
lods
cltd
bound
shrl
sbb
adc
out
pop
or
mov
or
mov
xor
sub
shl
mov
loope
lds
pop
pop
xor
icebp
fisubrs
pop
mov
add
andb
mov
outsl
push
sub
mov
xchg
shlb
icebp
fsubrl
dec
sbb
int
outsb
add
xor
test
or
fildll
cmpsl
arpl
jmp
dec
std
inc
mov
dec
test
test
sbb
iret
das
mov
call
pextrw
inc
add
or
dec
ljmp
xchg
int3
sbb
sti
mov
stc
xchg
in
or
loope
sahf
aam
lret
icebp
repnz
mov
xchg
add
clc
aaa
mov
xchg
std
out
lods
xor
mov
and
divl
imul
cltd
and
xor
test
dec
xchg
jge
test
dec
mov
push
cmc
dec
dec
pusha
sub
sbb
and
xlat
fwait
hlt
insl
ror
cwtl
pusha
pop
mov
jg
mov
rcrb
mov
inc
aam
mov
pop
pop
rol
mov
dec
add
cmpsb
movzwl
gs
pop
and
and
add
mov
mov
or
pop
and
in
push
fidivrl
push
ficompl
fstpt
mov
inc
lret
fbld
movsb
lret
mov
mov
lods
imull
jecxz
mov
test
jno
fwait
enter
int3
cmc
insl
cmc
pop
jb
adc
cmp
jb
mov
mov
mov
sub
xor
repz
fidivl
in
pushf
mov
jnp
and
clc
sahf
mov
addr16
lods
push
aam
mov
test
jne
adc
out
mov
inc
stos
popa
ret
sti
mov
add
mov
aad
pop
sub
jno,pn
popf
cmpl
pop
push
jecxz
jne
mov
push
fidivl
mov
pop
mov
pop
or
push
or
ss
xchg
mov
adc
into
add
or
fsts
out
mov
or
push
push
and
in
adc
test
pushf
shlb
dec
mov
sbb
mov
mov
adc
xor
mov
mov
push
daa
mov
jo
bound
dec
pop
data16
and
cmpsb
sbb
push
jmp
ret
sahf
idivl
hlt
add
rorb
mov
jne
loopne
xor
es
insb
mov
imul
or
jp,pn
pop
and
outsb
xor
xchg
add
pop
sbb
out
stc
pop
scas
mov
enter
repz
in
sbb
clc
into
xor
mov
jp
out
or
stc
in
push
popa
inc
jns
scas
shll
int
mov
pushf
adc
inc
pop
or
icebp
cmp
in
mov
adc
popa
pop
sbb
jnp
imul
xor
add
push
or
sarb
outsb
cs
inc
fmull
sbb
subb
push
and
sbb
xor
pushf
pop
fisubrs
ja
out
or
pushf
ja
dec
xlat
fcomi
scas
sub
dec
cld
or
sbb
hlt
sbb
sub
pop
shrl
insl
mov
lock
mov
xchg
jg
mov
sbb
add
xor
mov
cs
cmp
mov
outsl
shll
mov
iret
mov
dec
std
out
mov
mov
ret
add
mov
loopne
pusha
cmc
ja
pushf
cmp
jo,pt
popa
mov
icebp
popa
cmp
and
push
rclb
cmp
lock
js
mov
repnz
mov
cli
add
sarl
push
xchg
sti
push
fdivrl
fistpl
scas
pusha
xchg
fxch
hlt
cmpsl
xchg
test
mov
inc
dec
push
mov
les
mov
ja
pop
xlat
fisubs
xchg
rcr
ror
orb
push
ljmp
sub
aam
cmc
dec
mov
cmc
cmpsl
inc
xchg
jnp
je
addl
fwait
pop
add
or
jno
cli
push
fsub
adc
cmpsl
gs
insl
xchg
rcl
add
add
lret
icebp
mov
mov
xchg
leave
mov
mov
mov
cmp
out
adc
sahf
add
movl
xor
xchg
js
xchg
fs
cmpsb
nop
lds
lcall
jo
pop
shlb
outsb
sub
xchg
mov
and
mov
pextrw
or
imul
cmp
sub
bound
sub
push
outsb
pop
in
popa
test
lcall
pop
push
cmp
xchg
frndint
cmp
mov
cmp
ret
mov
je
lods
clc
push
dec
test
add
xor
in
sub
es
push
inc
pusha
xchg
ss
mov
arpl
leave
pop
xchg
popa
mov
cli
cmp
and
pop
fisubs
aam
mov
out
mov
adc
jb
mov
orl
std
xor
loope
int
add
mov
push
cltd
arpl
psubusw
in
in
push
repnz
push
adc
in
mul
or
push
iret
lods
sub
test
cmpsl
outsl
adc
or
outsl
imul
hlt
cli
or
mov
jge
dec
jl
mov
add
jmp
sbb
jno
sub
mov
loope
lcall
js
pop
jns
fisttpl
lock
clc
cmpsl
clc
pop
push
es
push
or
or
lock
loopne
out
sub
fldt
mov
lea
dec
xchg
mov
cmp
rcr
js
push
fwait
rol
roll
cmpsb
mov
fwait
pop
in
jbe
gs
jmp
icebp
xlat
xchg
sub
mov
movsb
fdivl
sti
and
test
push
inc
jbe
ficomps
pusha
test
pop
dec
rep
imul
outsb
mov
or
xchg
data16
and
outsl
adcl
arpl
roll
test
inc
lods
mov
mov
fwait
inc
mov
je
jmp
scas
sub
pop
pop
test
xor
stc
and
pusha
push
xchg
jno
lods
pop
pop
mov
fbld
pop
fisttpll
xchg
mov
pop
movsb
mov
cmp
jnp
dec
cltd
out
xor
std
jnp
into
sti
push
jmp
sahf
or
fistpl
and
decl
or
js
add
sbb
shlb
or
mov
data16
fdivs
pop
push
or
sbb
jb
popa
fisttpll
push
loop
das
outsb
flds
movsl
dec
ss
enter
sub
inc
or
aaa
ret
xchg
in
pop
loope
in
pop
and
ja
xchg
div
xchg
or
jle
mov
enter
out
insb
out
or
dec
out
sti
fld
push
jp
in
adc
aad
sti
or
push
cmp
mov
cmp
pop
dec
cltd
loopne
pop
dec
push
into
pop
lahf
fidivrs
imul
cmc
ret
jmp
clc
or
cmp
aam
push
sbb
jl
sbb
push
sub
xor
or
in
push
sahf
aas
mov
out
test
xlat
lcall
lea
lcall
sub
add
adc
idivb
xchg
js
pop
jnp
push
cmp
lar
inc
push
and
mov
inc
mov
or
sti
loope
mov
iret
js
sub
xchg
fildl
xchg
add
scas
in
and
lods
pop
push
and
inc
mov
sbb
rcll
in
loope
jbe
push
movsl
notl
arpl
in
or
in
fs
sub
dec
pop
hlt
and
mov
dec
mov
popa
jmp
xchg
mov
rcr
jb
pop
mov
fcompl
std
cli
cld
adc
dec
aaa
lret
jbe
add
xchg
mov
stos
mov
adc
sub
negl
cmpb
xor
xchg
rcrl
jb
sub
pop
daa
mov
arpl
ret
and
dec
clc
mov
lcall
jbe
xchg
stos
sub
sub
xchg
and
scas
xor
adc
rcll
jbe
xor
push
xor
xor
jp
sbb
lods
in
rolb
loop
pop
lahf
jb
push
iret
pop
lahf
arpl
adc
enter
subb
add
push
sub
dec
push
repz
xchg
sub
sbb
sbb
sub
das
add
imul
mov
mov
mov
push
mov
inc
insl
mov
adc
cs
jae
fdivs
divl
int
sbb
shrl
cmpsl
lret
and
mov
push
push
loope
rcrl
sub
jl
mov
push
xchg
xchg
dec
mov
add
movsl
lret
mov
mov
mov
ljmp
test
lds
clc
jp
pop
xchg
loopne
test
fistps
cs
xchg
jns
rclb
lds
cmp
sbb
xchg
jecxz
test
pop
inc
adc
enter
adc
push
push
mov
cmc
pop
jmp
or
inc
adc
nop
cmp
cltd
outsb
xchg
pop
or
mov
addr16
out
inc
sub
nop
adc
jge
add
jge
push
test
adc
push
out
cltd
gs
scas
popa
mov
sar
shl
cltd
jmp
cmp
jp
cli
rcrl
jl
cltd
out
adcl
cs
add
lret
add
psubw
mov
jl
jle
jne
pop
pop
or
add
pop
pop
and
loope
jae
sub
pop
xchg
fmulp
xchg
fwait
call
mov
cmpsl
jae
jg
orb
lret
pushl
mov
adc
jno
mov
pop
cmp
mov
sbb
aad
xchg
lock
cs
sub
pop
insl
incb
shrb
mov
dec
mov
adc
test
outsl
inc
or
nop
aam
jmp
pop
out
mov
push
ljmp
sahf
jg
mov
push
shlb
popa
pushf
adc
mov
out
imul
push
mov
add
jnp
xchg
push
outsb
aad
mov
pop
cmp
mov
out
ljmp
out
test
inc
xchg
pop
mov
in
lods
lahf
imul
sbb
pop
imul
inc
sbb
sub
sbb
lcall
outsl
jg
es
mov
xchg
sahf
shlb
loopne
add
jecxz
leave
pop
mov
push
rcl
hlt
mov
fsubs
pop
jle
mov
fs
pop
int
movsb
nop
insb
xor
ret
test
add
rorb
scas
inc
pushf
adc
inc
cli
xor
addr16
leave
add
test
cmp
outsl
jns
sub
add
arpl
adc
mov
bound
adc
inc
cmpsb
dec
cmc
sbb
insl
call
cmc
jo
into
fwait
dec
cmpsl
mov
adc
loop
loopne
mov
popa
add
xchg
sbb
stc
jg
pop
xor
pop
insl
push
lea
dec
es
jmp
imul
xchg
add
push
fwait
mov
inc
xor
mov
pop
xchg
loope
adc
test
in
adc
ret
cld
faddp
xlat
add
pop
and
lahf
mov
notb
push
push
movb
aam
fstpl
test
lock
stos
cmp
scas
inc
popf
mov
dec
mov
sbb
lock
inc
push
mov
inc
rcl
mov
les
adc
adcl
adc
mov
and
pop
jns
insb
pop
test
fbld
mov
inc
bound
testb
cld
insb
pop
pop
por
movsb
daa
movsb
add
jl
pop
adc
aam
dec
mov
repz
and
sub
push
scas
imul
rclb
cwtl
fistl
add
loopne
fisubs
jns
push
cmp
push
popa
dec
and
fdiv
add
mov
mov
lock
fs
xor
shll
loope
out
and
mov
scas
inc
or
inc
loope
iret
cmpsl
rolb
inc
arpl
ffree
out
push
insl
xlat
xchg
ret
mov
les
add
mov
mov
loope
adc
fcmovbe
js
pop
pop
roll
mov
push
push
andl
add
cmp
jmp
int3
mov
jne
or
out
cltd
shrb
push
inc
dec
imulb
jecxz
push
test
push
out
dec
insl
lcall
hlt
mov
js
jp
adc
xor
push
mov
ja
jmp
cli
mov
push
in
pop
sbb
mov
addr16
mov
cmp
sub
inc
and
loope
mov
outsl
lcall
repnz
fs
outsl
aaa
ljmp
ret
mov
imul
das
addl
scas
les
xor
mov
adc
add
xchg
jl
out
adc
outsl
jecxz
shlb
jmp
xor
xchg
mov
scas
sbb
loopne
xorb
jbe
jle
xor
dec
aam
dec
push
inc
sub
stos
fildl
int
insb
xchg
xchg
jp
xchg
or
repz
andl
in
mov
add
lret
int3
faddl
cmp
mov
arpl
cld
mov
or
push
lea
repnz
call
arpl
xor
adc
popa
adc
mov
lock
leave
les
sahf
xchg
jns
in
outsb
jne
cmc
idiv
cltd
decl
cmovp
idivl
repnz
jmp
pop
or
cs
fdivrs
insl
push
xor
mov
pop
pop
adc
cltd
mov
inc
test
fisttps
out
add
loopne
out
push
mull
xlat
out
pop
or
loopne
daa
cmpsl
xchg
add
adc
mov
fwait
lret
movsb
stos
inc
adc
mov
test
ljmp
arpl
cmc
jo
inc
xlat
leave
daa
add
mov
mov
stos
das
pop
ja
mov
and
pusha
ljmp
inc
orl
ljmp
daa
xor
into
dec
xor
bound
lret
popa
jmp
enter
cli
mov
pop
push
fs
rcl
mov
js
mov
mov
sbb
imul
sbb
popf
fxch
scas
jnp
push
push
dec
inc
insl
push
outsb
or
in
jge
ss
fdivs
dec
bound
jbe
xchg
cmc
dec
call
into
or
ss
aad
push
cwtl
and
or
jb
std
ljmp
aas
fmull
cmc
ret
mov
imul
sti
mov
lret
adc
outsl
bound
adc
sbb
mov
fs
in
mov
push
inc
pop
test
lock
and
xchg
or
hlt
gs
loopne
push
cld
and
scas
push
fdiv
dec
je
sub
mov
ja
bound
mov
in
mov
std
cmpsb
jp
mov
jne
scas
and
inc
popa
mov
pop
cmp
inc
lcall
ds
inc
push
pop
and
mov
dec
push
mov
dec
xchg
fstps
jns
js
shl
lods
test
mov
cld
gs
ret
imul
adc
sub
jae
sub
mov
je
repnz
shll
mov
mov
daa
rcrb
iret
pop
dec
cmp
or
out
mov
mov
popf
lock
push
stc
loopne
call
xor
or
sub
mov
xor
mov
and
sub
mov
mull
movl
es
mov
dec
push
bound
xchg
das
jne
dec
xchg
in
inc
pushf
sub
ret
and
add
mov
add
inc
jne
fwait
shlb
or
js
sub
mov
mov
pop
xchg
fwait
push
mov
loopne
push
mov
mov
lcall
xchg
test
mov
xor
outsl
shll
inc
cmpsl
test
in
int3
jg
bound
out
sahf
jge
sbb
pop
rorl
movsl
dec
pop
push
or
push
test
ds
rcll
jl
sub
mov
movsl
adc
and
nop
cmpsl
pushl
fnstsw
nop
mov
pushf
addb
scas
push
xchg
imul
jne
lock
arpl
cltd
jbe
sub
pop
jge
in
adc
cmp
mov
rorb
stos
inc
xor
inc
call
fstps
mov
cmpl
xor
fbstp
pop
push
fcmovnb
and
lods
std
in
cltd
clc
mov
mov
pop
add
or
xlat
addr16
dec
stos
dec
jnp
popf
repnz
mov
stos
push
mov
pop
cmpsl
push
mov
pop
pop
outsl
aas
enter
cltd
lcall
cld
or
fs
outsb
adc
sbb
sbb
hlt
mov
sub
loope
cmp
jne
test
pop
movsl
jp
or
out
adc
mov
cmp
into
movsl
sub
fsubrl
mov
cmp
rcr
lret
lret
push
ds
icebp
mov
push
rcrb
jle
lock
fdivs
mov
cmp
mov
or
fwait
or
lahf
fnsave
push
add
bound
inc
xchg
popf
lds
into
sbb
ss
pop
mov
jl
jno
movsl
fildl
push
cld
pop
mov
pushf
push
std
dec
sbb
push
addr16
mov
fnstenv
lock
jge
lahf
mov
dec
inc
insl
in
mov
push
je
mov
test
call
push
mov
arpl
fnsave
popa
pop
pop
cmpsl
fmul
arpl
outsb
jb
pop
pop
enter
fldt
sbbb
cmc
lea
ret
nop
cmpsb
and
xor
dec
test
insb
out
or
sbb
shrl
dec
and
xor
mov
mov
push
sbb
mov
cmp
push
mov
and
lret
cwtl
lahf
sbb
lock
cmp
jmp
in
jg
aam
push
sub
mov
insl
cmc
sbb
std
mov
std
xchg
mov
fnsave
loopne
lcall
pop
mov
test
mov
std
xorl
cmp
mov
aad
mov
arpl
mov
loopne
jmp
push
push
stos
inc
mov
dec
stc
or
outsl
sub
aam
jb
repnz
push
xor
lods
inc
aaa
sub
and
cmpsl
push
bound
dec
scas
push
hlt
or
dec
pop
jne
xor
xor
add
sbb
clc
in
ja
jne
lods
aad
loope
repz
lods
sub
add
clc
adc
mov
sbb
adc
js
pop
popf
push
pop
int3
dec
and
inc
push
xchg
fisubl
jb
add
xor
int
dec
add
pop
xor
mov
cmp
push
repnz
cmp
xchg
add
jmp
push
dec
push
and
int3
mov
inc
shrb
and
test
pop
pop
repnz
addl
jnp
xor
xchg
faddl
mov
loopne
xchg
push
ficoms
fcmovbe
aam
icebp
mov
aas
push
aas
nop
mov
loopne
jl
scas
adc
lds
mov
lret
int
mov
mov
stos
xchg
pop
fwait
sbb
or
or
repz
jecxz
imul
or
add
ret
push
mull
decb
inc
xor
lahf
inc
je
sbb
xor
xchg
push
movsb
mov
jge
in
into
fwait
mov
push
stos
clc
pop
js
xorl
test
sub
xchg
xchg
mov
sub
idivb
test
and
stos
test
or
add
clc
and
mov
shrl
shl
lds
push
jno
ret
lea
mov
jno
or
dec
cmp
and
test
fmuls
in
data16
int
dec
jmp
lcall
sbb
cmp
sbb
negl
rclb
adc
in
pop
fists
ret
mov
jge
cld
ficoml
push
inc
roll
ficompl
loope
imul
cmp
adc
inc
mov
jbe
push
cmp
lret
jne
imul
lcall
scas
inc
rcrl
ss
scas
mov
in
into
jecxz
loope
out
add
mov
dec
test
sub
cmp
push
and
inc
cmp
out
imul
jb
pop
icebp
push
sahf
cmp
push
popa
cmp
add
mov
stos
pusha
push
cmp
clc
lock
bound
mov
adcl
pop
fs
mov
mov
orb
push
outsb
adc
mov
adc
mov
jle
pop
cmp
ljmp
aad
inc
data16
jns
scas
push
adc
mov
add
clc
out
jmp
or
jp
inc
lcall
inc
adcb
icebp
ljmp
dec
xchg
dec
sbb
std
loopne
xchg
fldenv
mov
sub
xchg
lahf
lret
popa
and
cs
push
cmp
outsl
adc
dec
dec
cmp
lods
sbb
mov
in
add
ficomps
cli
ljmp
outsb
inc
outsb
sarb
sub
xchg
xor
enter
clc
ret
pushf
inc
jmp
imul
sbb
pop
push
sarb
push
pop
fcmovnbe
out
sub
cltd
aad
stos
scas
pop
loop
fdivrl
loop
into
or
movsl
fimull
and
add
lods
dec
pop
mov
insb
imul
jbe
shll
push
cmp
mov
jbe
or
push
add
add
ljmp
pop
and
shlb
subl
dec
dec
mov
sub
mov
pop
ss
aas
mov
mov
and
movsl
push
ja
fsubrl
aas
xchg
out
out
or
iret
inc
dec
repnz
adc
add
mov
adc
in
mov
add
xor
dec
mov
xor
out
cmp
popa
push
cs
sub
data16
xchg
mov
adc
sbb
mov
jp
std
mov
jnp
das
push
sti
sbb
cltd
sti
mov
xchg
cli
pop
xorl
jl
sub
mov
jecxz
pop
daa
and
stc
mov
adc
js
mov
jnp
sub
repnz
push
iret
faddp
fisttps
jb
stos
sahf
cli
leave
es
lcall
or
xor
xchg
xor
loope
popf
popl
dec
cmp
mov
xchg
xor
test
push
stos
sub
lret
jbe
mov
xor
int
or
stos
mov
adcl
jmp
loope
movsl
jmp
jo
fimuls
std
push
push
movb
mov
add
iret
xor
dec
mov
shrb
shlb
cli
push
pop
dec
pop
pop
rclb
mov
mov
inc
jbe
jge
cmpb
mov
stc
pushf
and
je
add
cmp
data16
mov
and
js
pop
lods
pop
pop
mov
ljmp
inc
push
dec
xchg
idivl
lods
pop
sbb
imul
cld
and
lods
or
dec
xchg
cmp
inc
inc
es
imul
pop
repz
mov
dec
pop
call
into
out
in
xor
pop
cmpsl
ror
and
mov
insl
mov
loope
les
xor
inc
inc
gs
ss
pop
xchg
call
loop
cli
mov
jl
dec
imul
push
stc
jecxz
inc
repz
inc
sbb
inc
sub
sbb
inc
mov
sahf
movb
gs
and
mov
cwtl
outsb
test
dec
aas
and
mov
xchg
outsl
xchg
push
pop
gs
cmp
xchg
fstp
jg
or
or
std
test
pop
cmp
div
mov
jl
fstpt
or
aas
jp
std
js
outsb
fildll
call
call
jl
lahf
daa
je
in
adc
mov
leave
filds
mov
cwtl
sub
test
mov
pop
negl
cmp
mov
inc
inc
or
int3
add
bswap
iret
fmulp
mov
lea
mov
in
dec
push
pop
mov
mov
aad
in
jl
push
xchg
shlb
enter
dec
mov
scas
fsubp
xchg
xchg
jle
jl
sbb
and
jne
out
leave
popf
stos
popf
sahf
das
bound
cs
lret
or
repnz
cmpsl
xchg
idivb
dec
cmc
mov
sub
inc
icebp
fdivl
aad
adc
inc
xor
cld
mov
pop
bound
fldl
pop
jne
jnp
test
mov
push
mov
or
xor
cli
out
in
mov
aad
js
mov
mov
test
sub
fwait
mov
sub
fsubrl
int3
ss
repz
xchg
adc
frstor
pop
adc
sub
incl
xlat
xchg
pop
and
pop
mov
push
icebp
ss
icebp
dec
mov
dec
shll
jne
xor
dec
je
cmpsb
xor
mov
cmpsb
movsl
fsubrp
loopne
jmp
xchg
push
mov
out
test
andb
test
fs
adc
xchg
jecxz,pn
aas
test
jns
push
dec
dec
mov
jnp
inc
sub
mov
inc
mov
icebp
dec
adc
cmp
js
push
or
jmp
sub
lock
enter
sub
dec
mov
adc
and
mov
ja
negl
flds
mov
mov
aas
xor
mov
jne
loopne
out
out
xchg
add
mov
mov
popa
out
dec
sbb
dec
mov
js
in
sbb
push
rorl
sbb
inc
les
sub
mov
sahf
dec
stc
jne
mov
jae
push
add
mov
lods
fs
dec
ret
popl
jae
jge
repz
push
aam
add
mov
ss
dec
cmp
out
adc
inc
xor
mov
xor
sarl
icebp
loope
add
dec
aad
xor
sub
cli
aas
mov
xor
out
cltd
inc
mov
cmp
pusha
fldenv
je
pop
jg
std
jae
lods
pop
push
popf
xchg
rorb
and
stos
cmpl
test
jno
sbb
mov
and
icebp
push
pop
jecxz
cli
addr16
lds
xor
and
mov
jb
xchg
mov
and
jl
sub
popa
imul
test
pop
jp
dec
mov
stos
adc
mov
in
cmpb
jns
cld
pop
xchg
adc
es
cmp
or
mov
mov
pusha
sbb
in
fmul
jl
lret
jb
jl
jae
cmpsb
insl
pop
pop
stc
rolb
lods
mov
and
xchg
mov
or
in
mov
in
cmp
lahf
sub
or
lcall
and
daa
and
dec
xchg
sub
cmp
jge
popa
add
loope
inc
or
ss
iret
fldcw
test
add
cmc
adc
or
pop
inc
fdivs
std
repnz
jge
push
dec
and
or
jecxz
insl
call
test
and
data16
fs
sbb
add
aaa
idivb
clc
pushf
add
imul
pop
scas
add
pop
jge
hlt
int
in
jnp
mov
pop
sbb
cmpsb
jo
mov
sbb
lods
loop
cmp
or
xor
sbb
push
sub
xchg
and
fisttps
xchg
scas
dec
popf
mov
cmp
inc
dec
loopne
movl
ja
inc
test
into
das
add
cmpl
je
or
cmpsb
les
adc
or
cmp
inc
add
inc
sub
jae
scas
rcrl
cmpsb
fisubs
les
cmp
inc
jae
cs
mov
scas
mov
cmc
sub
adcl
aas
test
pop
push
sbb
nop
dec
rcr
or
aad
dec
nop
xorl
icebp
cltd
ja
add
dec
pop
jp
fildl
aad
xor
mov
sub
loop
std
adc
popf
sub
shlb
mov
mov
jns
mov
pushf
dec
pop
das
mov
xor
cmp
ret
inc
shlb
fcoml
int3
sub
xchg
cmp
xor
sbb
pushf
push
add
xchg
pop
negl
psubd
ret
les
mov
stos
shr
int
sbb
adc
mov
cld
or
jne
dec
sub
stos
or
mov
xchg
cli
mov
es
lret
mov
leave
xchg
xchg
or
fists
sub
hlt
into
int3
sbb
jl
fdivr
sbb
cld
mov
outsb
mov
inc
idivb
rcl
pop
xchg
cmp
mov
mov
xor
jge
lock
dec
pop
push
lcall
mov
xchg
add
xor
and
cmp
push
insl
sbb
bound
jbe
pop
mov
fistpl
mov
pop
mov
pop
sub
xchg
ret
out
xor
mov
lcall
popf
sbbl
ss
mov
push
adc
jg
lret
push
push
popa
push
sbb
sub
fimull
scas
stos
out
ds
leave
pop
sub
fdiv
scas
ss
xchg
insb
mov
arpl
adc
lods
sub
sbb
jns
and
sbb
mov
pop
add
push
sub
addr16
fcomps
inc
sahf
xchg
es
and
jmp
push
adc
movsb
mov
mov
int
pop
dec
or
ret
sbb
repz
dec
ja
arpl
jecxz
dec
fsubp
dec
shlb
sahf
repnz
or
inc
subb
jl
fldt
sbb
out
pop
outsl
inc
jg
adc
cltd
sti
cltd
ret
fldt
sbb
add
out
dec
and
cltd
pop
fcoms
ss
loop
fxch
ja
daa
sub
in
arpl
popf
push
xchg
subb
add
xlat
xchg
dec
sub
cwtl
adc
adc
out
sti
add
sub
call
and
gs
push
stc
inc
cmp
scas
pop
dec
mov
je
sbb
scas
jg
mov
cltd
mov
sub
lock
pop
sti
cld
sbb
clc
fwait
sub
ficomps
xor
cmpsb
adc
jno
out
cmp
jecxz
inc
inc
shrb
push
xlat
or
mov
pop
and
mov
cmpsl
pop
data16
cmc
inc
in
das
pop
sub
add
nop
sub
cli
xchg
xchg
and
push
jl
jge
sub
ds
and
push
pop
dec
scas
cmp
test
pop
lea
sub
fistps
and
inc
std
sbb
movl
jb
shrb
hlt
addr16
adc
push
fcoml
aad
cld
fwait
and
cwtl
dec
jle
cld
pop
and
xchg
push
aaa
or
iret
and
inc
mull
lods
lods
dec
and
ja
dec
or
sbb
jae
cld
sbb
in
mov
push
pop
dec
jae
add
js
loopne
cmpsb
cli
sub
ja
xchg
imul
popa
cmc
insl
mov
cmp
jb
and
into
mov
jbe
enter
out
mov
adc
out
mov
std
rcr
inc
in
push
cmp
repnz
pop
sbb
std
cmc
iret
sub
push
fisubs
loopne
enter
ss
pop
in
jg
and
sub
mov
jbe
cmp
or
repnz
shlb
mov
in
jmp
mov
stos
or
pop
lret
jge
mov
push
test
adc
pop
dec
pop
mov
push
cmpsl
sbb
lock
bound
mov
and
and
mov
test
jge
scas
or
fstl
pop
jge
push
les
pushf
add
aas
inc
call
leave
scas
xchg
dec
pop
mov
into
leave
test
push
xor
loopne
pop
push
push
xor
xchg
outsl
dec
leave
sub
cmp
notb
push
daa
stos
in
mov
xchg
shl
mov
mov
sub
test
divl
pop
or
dec
addr16
lret
mov
ds
fld
inc
fmull
adc
in
daa
sub
pop
std
sub
cltd
cmpsl
xor
aas
js
mov
push
add
xor
sbb
arpl
cmpsb
pop
inc
fidivrs
jno
jg
jge
lock
dec
xor
loopne
int
sahf
and
and
pop
push
insb
imul
dec
xchg
pop
popf
das
jb
sub
cli
push
cltd
sub
loopne
pop
or
and
mov
test
push
pop
xchg
movsb
into
cmpsb
pop
sub
adc
cs
std
shlb
dec
cmp
imul
fucomp
lahf
fstpt
cmp
stos
xchg
adc
rorl
cmpsl
sarl
pop
cwtl
adc
aad
jg
shlb
aas
and
jmp
push
pop
in
out
pop
jp
xor
cmp
fnstenv
sbb
in
dec
rcrl
pop
push
adc
out
jno
add
xchg
lock
rolb
ljmp
cmp
dec
shrl
negl
mov
push
xchg
andb
int3
mul
add
adc
or
paddsw
ds
jg
add
adc
sub
pop
sbb
push
or
push
xchg
xchg
push
in
sbb
xor
inc
xor
lahf
fists
xchg
mov
ljmp
mov
mov
inc
sbb
fnsave
fistpl
add
cwtl
xorb
push
pop
adc
das
mov
jne
lcall
sbb
push
adc
pop
dec
cmp
add
or
daa
lea
dec
cwtl
aam
cmp
sub
jg
fcmovnbe
dec
pop
int3
and
cmp
sub
inc
les
add
ret
push
arpl
decl
or
mov
jle
js
mov
aas
arpl
pop
call
nop
stc
repnz
add
es
daa
pushf
mov
pusha
fidivs
adc
cs
lds
push
push
push
nop
addr16
sbb
pop
mov
das
mov
xchg
and
cmp
subl
insb
mov
pop
js
jno
loope
outsb
insb
push
in
sub
inc
imul
movsb
pop
jl
out
and
fiaddl
loop
ret
pop
jo
sub
and
gs
add
cmp
and
mov
aam
in
gs
mov
outsb
xchg
rcrb
sti
popa
inc
imul
pop
lcall
push
mov
gs
jecxz
ss
mov
jle
xlat
in
scas
mov
sbbb
dec
jns
xchg
in
bound
mov
push
mov
jmp
outsb
push
push
push
mov
xorb
sub
out
fdivrs
das
cld
mov
xor
xchg
sti
popa
clc
adc
insb
add
mov
fdivr
out
and
jmp
enter
in
in
out
test
ret
mov
fsts
xchg
xchg
sbb
jmp
cmp
xchg
mov
rcll
aam
sbb
pop
int3
imul
sub
std
mov
mov
aad
pop
je
call
or
sbb
mov
xlat
push
xchg
jmp
mov
cmp
stos
pop
test
jp
repz
and
fdivrp
ljmp
add
mov
lcall
aas
or
test
aad
fisubl
loopne,pn
out
lds
xchg
loop
push
xor
fimuls
jb
xor
fistpll
je
inc
xchg
push
leave
push
lahf
and
orb
popa
mov
out
cmp
rorl
sbb
mov
adc
sub
addr16
movsb
xchg
nop
sub
jb
push
fwait
pop
jmp
xor
xchg
aad
in
push
outsb
jae
lods
jmp
and
aam
inc
int
inc
adc
cltd
mov
mov
xchg
rcrb
mov
sub
fwait
stos
pop
or
cmpb
and
mov
clc
mov
push
jg
notl
push
mov
cmp
icebp
sub
out
frndint
es
rcl
flds
cli
in
add
mov
inc
inc
mov
fcmove
cmp
popa
add
pushf
stos
idivb
out
and
and
jbe
mov
stos
inc
insl
sub
mov
mov
in
das
add
lcall
cli
push
nop
pushf
inc
dec
aas
shl
pusha
pop
dec
dec
lret
sbb
leave
repz
add
hlt
repz
aad
jns
cmp
adc
sbb
push
roll
ljmp
pusha
pop
call
fmull
stc
jne
push
ss
daa
sbb
pop
lods
pop
lret
rolb
push
add
ds
inc
scas
xchg
cmp
fwait
jecxz,pt
jl
sub
and
dec
cltd
push
mov
mov
out
imul
sub
inc
xor
or
dec
in
xchg
imul
push
in
mov
fmull
jmp
es
sti
scas
jecxz
jecxz
repnz
adc
or
aam
pop
dec
sub
lret
in
clc
lahf
jmp
xlat
enter
mov
sbb
push
sti
inc
daa
clc
mov
pop
arpl
dec
sar
and
sahf
lret
loope
mov
add
cmp
sub
movsb
push
push
or
insb
jns
xor
imull
dec
or
movsb
pop
iret
repz
sti
jno
nop
push
test
sbb
jne
xchg
out
mov
cwtl
xchg
xchg
gs
inc
cmp
add
cli
mov
daa
pminsw
sbb
scas
imul
iret
int
cwtl
outsb
mov
int
dec
mov
adcb
xchg
int
inc
icebp
and
jb
mov
out
push
lahf
pop
and
sti
and
mov
mov
andb
loop
jno
and
sbb
ds
repnz
xchg
mov
mov
pushf
adc
lcall
or
jae
shlb
in
js
mov
lret
xchg
dec
loop
or
push
push
mov
dec
sbb
adc
mov
stos
repz
std
cwtl
repnz
jns
dec
add
test
add
mov
and
sub
das
sbb
lods
mov
adc
mull
push
fmull
cld
imul
cltd
fstl
outsl
inc
jns
lods
pushl
outsb
and
adc
xchg
daa
es
mov
adcl
pop
jae
ja
loop
xchg
jmp
mov
adc
pusha
jle
ss
cmpsl
mov
xor
dec
sbb
lcall
sub
sub
and
cmp
pop
mov
jo
push
ss
or
cld
std
shrl
add
popa
dec
mov
sub
in
xor
add
and
mov
std
mov
and
outsl
cmp
inc
cmpl
bound
or
outsl
sbb
insl
stc
stc
and
rcl
xchg
lods
test
and
call
sbb
pushf
sub
or
mov
aam
mov
xchg
inc
or
or
push
cmp
mov
addr16
and
dec
sahf
outsl
hlt
shr
inc
mov
std
pop
adc
repnz
add
repnz
fwait
daa
jne
mov
jmp
in
loope
aam
pop
divl
fwait
jnp
or
aam
in
mov
mov
popa
imul
ss
inc
mov
stos
pushl
push
xchg
lods
ja
jmp
shll
pop
push
adc
mov
lds
subl
and
cmp
or
daa
jecxz
xchg
cmp
bound
ljmp
push
add
in
lea
and
and
adc
add
cmp
loop
mov
pop
jns
and
test
xchg
mov
aas
sbb
shlb
sub
jno
adc
pmaddwd
es
xchg
cld
sbb
ret
ds
dec
cli
fisubs
ror
rcll
dec
xchg
outsb
popa
je
and
push
stc
xorl
loop
aad
in
inc
cmpsb
fcomi
push
mov
movsl
stc
xchg
fimuls
int
jp
sbb
inc
loop
int
push
add
adc
pushf
or
test
mov
out
push
aaa
pop
stc
test
pop
cltd
andl
cmp
cmp
mov
shl
sarb
lea
jbe
mov
je
add
push
loope
push
lret
mov
mov
mov
aaa
cmp
movsb
addr16
stc
inc
inc
xor
jecxz
dec
mov
loope
xchg
xor
adc
mov
scas
mov
dec
sbb
mov
push
das
leave
add
or
cmp
push
push
inc
or
scas
pop
in
arpl
popf
xor
mov
int3
sbb
inc
lods
xlat
add
cmp
jg
or
xchg
inc
test
rorb
jbe
jg
bound
sbb
scas
mov
insb
add
cmp
shll
dec
mov
cmpsb
les
das
aas
out
pusha
xchg
adc
in
or
mov
inc
mov
fidivl
fcmovnu
fcompl
jecxz
aam
xor
and
stos
pop
rcr
leave
mov
push
sub
fwait
nop
adc
dec
aas
mov
mov
add
cwtl
push
add
xor
adc
xlat
xchg
popa
pop
xchg
and
sahf
or
inc
test
cwtl
into
out
incb
cltd
mov
mov
shll
movsl
icebp
cmp
xor
movl
push
addps
stos
push
addb
jno
inc
popa
inc
or
pop
leave
movsl
into
lock
add
xor
outsl
pushf
xchg
lds
lret
adc
cmpb
or
xor
popa
sti
cmpl
leave
aad
pop
jb
ja
pop
add
mov
fcmove
int
sti
popa
fisubl
jne
mov
movsl
adc
xchg
sbb
mov
lock
and
mov
pop
mov
std
xchg
leave
jge
popa
mov
xchg
rclb
mov
cmp
rcrl
or
outsb
dec
push
jne
popa
or
inc
and
les
jae
pop
mov
mov
cmc
dec
adc
hlt
loop
pushf
int3
jb
test
pop
fidivl
mov
ret
mov
pusha
repnz
push
dec
outsb
sbb
sub
gs
scas
addr16
stos
inc
push
jl
add
loop
mov
sbb
mov
pop
pop
dec
in
movsl
call
cmp
lock
dec
scas
mov
or
pop
adc
popw
pop
adc
lock
add
push
mov
fcmovnbe
in
pop
sbb
inc
sub
mov
das
cmp
mov
nop
insl
mov
divb
pop
jg
sub
cs
lods
or
xchg
pop
cmp
mov
xchg
push
mov
cmp
sti
lret
pop
shr
inc
movsb
jmp
adc
pop
lods
cmpsl
movsl
pop
inc
mov
or
xchg
xor
fsubr
dec
pop
adc
mov
insl
push
mov
imul
mov
cmpsb
loope
ret
inc
bnd
movsl
add
xchg
sub
cli
popa
fwait
stos
pusha
mov
dec
pop
call
stos
aaa
xor
sahf
ja
jecxz
inc
filds
ss
sub
sub
daa
push
push
aaa
ljmp
cmpl
add
out
sub
or
and
andl
adc
mov
clc
sbb
gs
mov
pop
xor
adcb
xchg
jecxz
pop
mov
mov
popa
test
ljmp
pop
jp
adc
jno
pop
les
rep
test
aam
aas
int
fwait
jno
outsl
shll
xchg
cmp
hlt
jge
iret
xchg
push
out
lret
xchg
mul
incb
aam
shrl
mov
pop
xchg
add
inc
adc
sbb
popa
testb
or
sbbb
pop
pop
pushf
cvttps2pi
ds
aam
hlt
dec
lea
bound
pusha
xor
out
xor
cmp
test
shr
rorl
cltd
lcall
stos
inc
emms
testb
xlat
in
ja
stos
mov
sbb
icebp
loop
mov
pop
rclb
push
adc
aam
add
mov
arpl
pop
cmc
pop
adc
repnz
inc
shll
cmp
movsb
push
mov
cs
xchg
inc
ljmp
sbb
fs
jecxz
ja
pop
sbb
push
dec
dec
nop
nop
adc
add
jns
cld
xor
addr16
gs
out
jns
sub
icebp
jmp
mov
shl
adc
test
mov
pop
jecxz
push
xchg
pop
imul
dec
out
lret
mov
jl
inc
inc
xchg
lret
jmp
xchg
mov
mov
mov
xacquire
cli
pop
adc
mov
mov
outsl
or
or
add
enter
adc
cmp
iret
in
into
mov
inc
jge
cli
push
aad
mov
sbb
mov
and
enter
or
jns
pop
pop
mov
jmp
sbb
pop
loope
aam
push
shlb
jg
jae
movsb
mov
mov
repz
imul
out
lret
nopl
pop
cli
cwtl
fsts
fdecstp
cmp
fs
pop
leave
into
std
mov
mov
test
movsb
push
subb
push
ret
shlb
cmp
jmp
inc
adc
roll
add
push
and
cmp
push
add
sbb
mov
cmp
pop
lock
pop
cmpsl
dec
lods
fsubl
cmp
dec
nop
jmp
sub
jo
pusha
inc
mov
jns
pop
push
imul
aam
lock
leave
fucomi
push
mov
sub
loopne
imul
xlat
cmp
fcmovnb
lock
mov
and
jecxz
jbe
xor
mov
out
lcall
sbb
cmpb
jecxz
test
xchg
lret
in
sub
insb
xchg
or
in
adc
sbb
sbb
clc
imul
loope
push
js
inc
jg
or
xor
imul
loop
cmp
stos
mov
add
xor
xchg
ja
in
fbld
pop
sub
push
dec
imul
push
inc
jbe
lcall
adc
je
das
cmp
hlt
dec
les
mov
xchg
std
push
adc
mov
pop
pop
mov
cmp
movsl
scas
jo
mov
filds
in
aaa
ds
mov
pop
ret
jl
jmp
out
mov
cld
pop
popa
arpl
xor
jge
mov
xchg
pop
push
ja
out
jno
aas
imul
cmc
out
icebp
sub
mov
loopne
and
adc
sub
push
pushf
mov
add
fistl
scas
sub
cltd
cmp
push
mov
lret
rclb
insl
sbb
cltd
sbb
pop
mov
jp
ret
jns
xchg
ret
cwtl
cmc
enter
mov
jle
pop
pop
mov
fwait
cmp
sbb
jae
add
mov
sbb
bound
mov
sub
xchg
mov
std
in
sbb
inc
sub
jp
into
stc
adc
jno
or
out
add
dec
inc
fdivr
filds
dec
data16
fdivs
sar
sub
mov
pop
sub
push
ja
insb
xchg
lods
fwait
movsl
outsb
and
idivb
lods
iret
popf
arpl
test
aam
sub
mov
sbb
cmp
or
mov
cmpsb
push
cwtl
and
jae
lahf
pop
pop
cltd
cltd
cmp
push
push
sarl
fwait
addr16
imul
in
or
add
fprem
inc
mov
mov
insl
call
dec
mov
pop
call
sbb
jb
cmp
cmp
push
dec
shl
movsl
out
fstps
dec
push
lods
pop
test
inc
mov
cmp
mov
lahf
adc
cwtl
push
mov
daa
addr16
mov
xor
inc
enter
movsl
pusha
int
mov
clc
inc
mov
inc
outsb
cmpsb
fistps
rcll
or
enter
inc
jmp
mov
cltd
fsubrl
faddp
push
pop
out
clc
loope
fistl
data16
add
stos
cmp
div
pop
repz
inc
je
mov
push
hlt
sub
imul
dec
inc
fisttpl
sahf
je
add
xchg
cmc
je
clc
lods
cmp
call
insl
xchg
test
std
mov
sahf
inc
or
movsl
jbe
shlb
mov
xor
xor
lea
stc
cmp
aam
jbe
arpl
xor
sub
mov
pop
scas
inc
mov
leave
push
pop
sub
out
adc
xchg
xchg
adc
sbb
dec
mov
rorl
addb
in
xor
or
mov
pop
pop
in
xor
cmpl
push
lods
xor
pushf
sbb
jns
pop
mov
jle
pop
daa
xchg
adc
xchg
mov
push
sub
pushf
rolb
rorl
xchg
enter
mov
mov
sbb
xchg
in
data16
into
add
adc
imul
mov
sti
jecxz
aaa
aas
cmpsb
xor
das
cmp
mov
mov
outsb
lret
into
sbb
sbb
add
stos
inc
int
dec
gs
mov
xchg
push
loopne
xchg
out
sahf
cwtl
pop
push
add
std
lods
cli
ret
popa
jne
negb
or
xor
out
popa
in
stos
ret
mov
fstl
cmp
sbb
sbb
jmp
lahf
lods
cmp
xor
pop
xchg
popa
add
sbb
out
mov
fucom
dec
outsb
shl
pop
arpl
cmc
mov
xor
pop
dec
inc
or
movsl
xchg
mov
leave
into
push
clc
dec
scas
xor
push
add
dec
lcall
sub
jg
call
add
cmpsb
dec
pop
movsb
gs
adc
jl
cmovo
push
xlat
cwtl
shl
mov
xchg
dec
push
cltd
adc
push
inc
sub
pop
loope
xchg
jo
loopne
push
adc
and
idivb
sarb
ja
push
stc
das
aam
inc
jge
and
cmpb
push
lea
mov
repz
sub
sub
loop
push
add
mov
shlb
ljmp
ret
shl
fimull
jmp
adc
outsl
xor
sbb
mov
and
sub
leave
outsb
mov
adc
push
notl
sub
adc
loop
mov
in
pop
cmpsl
mov
mov
and
arpl
push
jbe
xor
data16
mov
icebp
mov
repz
outsl
jb
les
mov
or
cmpsl
shrb
fisubl
sub
jo
mov
loop
loopne
ljmp
fstps
or
fidivl
xlat
insl
push
sub
fiadds
pushf
push
mov
std
test
cmp
push
xor
rorl
inc
mov
dec
inc
sbb
mov
outsl
lret
fmuls
add
mov
mov
mov
cmp
in
movsb
lods
xchg
push
in
lret
xchg
scas
fwait
or
pop
sbb
mov
dec
dec
aaa
loope
xor
ret
in
data16
es
shll
xchg
mov
adc
ret
lock
paddusw
jmp
lahf
cmpsl
dec
xor
pushf
dec
mov
inc
mov
xchg
xor
daa
add
sti
insb
xorl
idivb
inc
adc
je
loop
jne
imul
cmpsl
pop
adc
mov
lea
inc
add
xchg
or
xchg
dec
imul
and
jno
jp
push
stos
jne
ljmp
or
mov
imul
add
xor
or
push
mov
jb
in
sbb
ret
mov
jmp
sti
int
enter
jae
mov
daa
cmp
scas
cmp
and
push
icebp
mov
or
call
mov
mov
cmpsb
in
add
cli
xor
sbb
xchg
adc
sub
xor
mov
repz
jl
repnz
sub
adc
lds
ret
addb
or
test
pop
out
lcall
sbb
int
push
test
loope
mov
mov
inc
ljmp
push
inc
into
roll
push
icebp
out
imul
mov
or
push
cmc
subb
and
call
ret
cmp
xchg
push
jmp
shrl
lcall
sahf
add
int
add
pop
mov
cmc
cmp
mov
loopne
vmovntpd
icebp
in
test
movsb
pop
lods
ljmp
add
jo
add
xchg
sub
pop
fimull
mov
push
je
cmp
lret
in
ss
jl
dec
sahf
xor
shl
pop
mov
push
mov
inc
add
xchg
xchg
jg
push
stos
scas
mov
aaa
adc
bsf
dec
pop
sub
in
xchg
cmp
movsl
lds
idivb
fisubs
or
in
dec
sub
or
xchg
xchg
iret
xchg
cmp
pop
movsb
jne
sbb
outsb
adc
rcl
xchg
xchg
dec
mov
xor
lock
jns
xchg
sti
test
and
add
cmpsb
cltd
out
sbb
fisttpl
dec
mov
jp
or
inc
dec
into
mov
mov
lret
insl
mov
fs
jmp
add
mov
sub
xchg
daa
add
and
xor
sbb
dec
dec
arpl
add
xchg
std
mov
fnstenv
xorl
ljmp
pop
jl
jnp
out
shl
imull
adc
sbb
subb
lret
pop
push
mov
push
movsl
lods
sub
nop
add
push
rclb
pop
inc
arpl
call
mov
push
jge
divl
pusha
and
insb
outsb
inc
rcrl
jg
jbe
lea
fistpll
xor
pop
fstl
std
or
mov
lods
test
push
cmp
dec
lock
lea
xorb
cmp
mov
mov
aas
pop
or
xor
mov
test
mov
xchg
rcrb
hlt
inc
pop
sarl
loope
in
in
loopne
pusha
xchg
leave
pop
adcl
xor
flds
xchg
mull
jge
mov
fsubr
lahf
aaa
outsl
dec
lods
adc
jl
or
fmuls
arpl
dec
nop
push
out
jecxz
in
mov
push
imul
sub
and
cs
fdivs
loope
loopne
aam
jmp
imulb
mov
inc
pop
les
gs
lock
mov
mov
inc
xlat
adc
jl
ftst
stos
push
mov
mov
mov
fsub
imul
add
out
repz
ljmp
in
loope
cmp
imul
xor
push
aad
leave
insb
inc
sub
repz
sub
out
les
sbb
push
push
fnsave
pop
inc
lods
lods
inc
hlt
pop
dec
lahf
mov
jl
mov
popa
sbb
dec
sahf
jns
aaa
das
pop
jne
xor
jno
dec
cs
outsb
mov
call
icebp
push
sub
sub
ficomps
lahf
aad
add
enter
lret
fnstcw
fldl
push
pop
or
imul
xchg
push
jbe
jno
xchg
mov
push
cli
idivl
or
es
sarb
xlat
jnp,pt
hlt
adc
mov
out
outsl
jnp
dec
mov
hlt
aaa
les
jo
pop
cmpsb
subl
push
jge
cmp
lret
dec
andb
ret
jge
pop
sbb
loope
fcomps
jmp
pop
adc
adc
adc
push
push
ljmp
fiaddl
repz
mov
outsb
jle
jge
inc
mov
arpl
idivb
cmpsl
sub
adc
xchg
stc
fnstsw
fcoms
outsb
leave
xchg
push
sub
inc
stos
inc
xchg
sub
push
sub
jnp
push
cld
popa
cli
cmpsb
aad
cmp
adc
aam
dec
aas
ret
and
mov
outsl
or
jl
dec
scas
cmp
jae
jbe
or
rcll
aam
pop
subb
mov
cmp
or
sbb
aaa
jb
pop
cs
jbe
lods
adc
push
enter
fsts
out
mov
ret
fadd
psubsw
arpl
pop
cs
lahf
mov
aaa
adc
jecxz
mov
lock
lcall
cmp
mov
jp
dec
mov
cli
and
aas
fmull
cmpsb
into
arpl
lret
rolb
mov
xchg
vpsrld
cmc
in
xchg
dec
lcall
imul
call
mov
jo
sub
jno
xlat
daa
inc
pop
mov
out
ret
adc
pop
pop
jbe
xor
loop
inc
cltd
test
lods
lods
jle
push
jne
inc
jno
or
push
scas
bound
fldenv
xchg
inc
push
xchg
jg
and
aaa
popa
out
jns
xor
mov
and
pop
sti
ds
pusha
xlat
ss
pop
push
jns
into
sbb
mov
ds
stos
fs
mov
mov
out
in
ret
mov
outsl
or
int3
jbe
jg
mov
xchg
push
pop
popa
push
in
push
adcb
popf
sbb
stos
xchg
jmp
mov
dec
inc
or
arpl
ficomps
imull
leave
inc
sbb
mov
shrb
pop
xor
movsl
or
xor
mov
enter
and
jno
adc
lcall
cli
ret
mov
mov
xchg
xlat
clc
shl
andb
xchg
lahf
cmpsb
xor
add
movsl
xchg
stos
mov
out
enter
out
shlb
das
repnz
movsb
or
pusha
xchg
clc
lahf
pop
enter
inc
xorl
ja
push
sub
outsb
mov
push
adc
repz
ret
push
stos
push
mov
dec
push
call
mov
add
pushf
ja
and
sbb
mov
pop
sahf
ss
bound
fs
xchg
and
shll
aas
and
leave
jl
imul
mov
or
sti
jae
xchg
subl
mov
mov
cmp
push
jmp
in
outsl
pop
imul
pop
imul
cmp
movb
jge
jo
insl
fsubrp
adc
sbb
negb
es
mov
nop
sub
push
or
push
mov
and
adc
add
jbe
mov
inc
das
inc
movsl
lods
stos
dec
int3
repz
sti
push
jecxz
int3
ja
roll
loop
or
sti
fildl
test
pop
mov
push
push
adcl
jno
push
mov
xor
mov
push
loop
adcl
xchg
out
jle
mov
repz
xchg
leave
into
lock
add
add
cmp
and
adc
xchg
push
into
fdivl
cmc
jle
imul
lret
jg
xor
insl
es
add
push
repnz
sbb
sbb
or
orb
cmc
les
xchg
or
arpl
xchg
loop
add
add
pop
into
pop
sbb
lock
and
in
jbe
aad
xchg
or
sbb
cmpsb
xchg
and
sti
jg
push
add
adc
enter
push
insl
mov
pop
add
push
cli
idivb
lock
pop
dec
mov
sub
adc
sub
xlat
sbb
lret
imul
push
cltd
cmp
inc
push
jge
popf
sbb
jl
mov
test
lods
pop
mov
sbb
repz
fstpl
addr16
fs
or
push
nop
mov
shll
mov
xor
rcl
cmpsb
das
mov
daa
mov
imul
sub
sbb
int
loop
sahf
emms
ljmp
sub
xor
and
and
push
push
cmp
lcall
mov
adc
lods
repz
dec
cs
stos
or
mov
pop
sti
ficomps
dec
push
cmp
mov
adc
ret
lds
int3
scas
mov
cmp
and
out
xchg
cmp
and
sbb
jg
fs
inc
push
sub
addr16
mov
mov
inc
ficompl
movl
jne
sti
jbe
addr16
das
test
pop
cs
jle
gs
pop
pop
cltd
pop
push
mov
out
fiaddl
lods
nop
mov
das
ror
popa
dec
or
test
frstor
mov
pushf
in
add
fisttps
inc
rclb
pop
ss
dec
lret
jmp
arpl
loop
xchg
insb
out
cmpsb
movsl
jns
mov
xchg
test
inc
push
movsb
cltd
jp
and
fwait
pop
push
or
shrl
mov
cmpsb
jp
xchg
and
stc
aas
shll
arpl
push
push
sbb
cmp
mov
mov
lahf
pop
sbb
mov
sbb
outsl
jo
in
pop
leave
mov
push
mov
out
jle
add
mov
aas
sub
push
jmp
sti
mov
mov
jle
lret
push
cmpb
fdivr
or
sub
cld
lds
es
and
sbb
adc
stos
inc
loope
adc
fstpl
xchg
add
cmc
mov
push
fistps
lods
fwait
clc
dec
sub
cltd
xlat
cltd
push
pusha
inc
add
sbb
test
or
jb
lcall
cmp
lahf
and
adc
es
les
mov
pop
jle
xchg
iret
jecxz
or
cmp
xchg
imul
xchg
cmp
icebp
loopne
xchg
adc
and
das
xchg
adc
loop
std
xchg
or
jmp
scas
mov
es
push
popa
int3
push
mov
callw
addr16
scas
sub
sti
xchg
xorb
mov
inc
jge
xorl
or
les
clc
jmp
mov
mov
mov
jmp
xchg
inc
jae
pop
inc
xor
jmp
push
jp
xchg
mov
clc
sbb
mov
mov
mov
hlt
stc
orl
in
loopne
lcall
cmp
int
test
leave
ljmp
int
stos
shrl
jecxz
xchg
stos
das
mov
xchg
mov
adc
add
je
push
js
shrl
repz
in
shrl
sbb
popf
cmp
and
and
repnz
ror
out
aam
mov
mov
pop
fisubrl
fcomps
cmpsb
scas
adc
aaa
push
shrb
popa
dec
loopne
mov
mov
sbb
roll
mov
lea
mov
adc
add
shll
or
aam
hlt
aas
mov
into
int
in
insl
mov
and
and
pop
enter
lock
movsb
outsb
dec
int3
fists
in
and
filds
add
push
pop
fs
dec
xchg
jge
jle
ss
cmp
inc
mov
ja
out
pop
icebp
loopne
arpl
insb
repnz
and
push
stc
xor
add
sbb
inc
enter
jbe
adc
mov
loopne
out
out
movsl
mov
and
and
icebp
es
roll
aad
adc
pop
sub
ds
inc
adc
sub
push
out
arpl
outsl
or
pop
into
xchg
inc
pop
ja
stos
add
mov
jne
or
mov
inc
fdivl
lds
mov
sarl
xor
lods
iret
repnz
fs
call
pop
test
je
shlb
mov
js
pop
cmp
inc
ds
repz
out
sbb
inc
sub
loop
jb
mov
lahf
adc
scas
push
sbb
add
dec
pusha
pop
test
int3
xchg
dec
mov
pop
pop
dec
push
pop
aam
gs
outsl
lock
pop
cld
jp
cs
adc
leave
mov
cld
push
push
mov
nop
jbe
mov
xchg
outsl
decb
cli
jae
dec
test
or
or
fcoms
add
pop
lods
mov
mov
insl
mov
shlb
push
out
f2xm1
mov
add
jo
data16
fsts
push
push
cs
xchg
int3
xchg
mov
mov
cmpsb
stc
dec
stos
xchg
pusha
fsubp
pop
negb
mov
mov
aad
mov
insl
bound
icebp
int3
in
and
pop
imul
pop
push
andb
js
xchg
inc
mov
lret
ljmp
rcrb
pushf
out
je
inc
fisubs
cmpsb
mov
push
outsl
pop
push
jg
sub
jmp
and
faddp
xor
mov
mov
xchg
or
add
test
mov
mov
mov
mov
xor
lahf
popf
adcb
pop
adc
or
adc
aas
xchg
rolb
xor
loop
mov
imul
push
xor
add
shl
lahf
push
xchg
cltd
pop
push
dec
cmpsl
add
mov
adc
in
fbld
mov
dec
or
out
es
jmp
xor
jne
jo
ret
scas
les
data16
sub
call
out
mov
mov
aam
xor
pop
stos
jl
lcall
sarb
inc
jns
rorb
jge
or
loopne
adc
es
xchg
imul
leave
out
jmp
or
dec
lcall
stos
inc
loope
out
movsl
ret
cmpsl
xchg
pop
outsb
test
add
mov
dec
imul
mov
fs
hlt
inc
in
js
out
lret
add
ds
int3
fcompl
jp
aaa
loopne
aaa
push
mov
orb
mov
mov
mov
push
jnp
test
adc
and
stos
sbb
inc
jmp
das
inc
mov
je
enter
fisttpl
ds
les
insb
push
inc
loope
sub
fs
add
jp
sbb
les
lods
packsswb
test
lea
xlat
xchg
sahf
filds
mov
fldt
lcall
and
xor
lods
hlt
std
jo
fs
adcb
pop
mov
int3
mov
adc
push
loop
insl
aad
icebp
test
push
inc
lahf
int3
dec
out
add
shr
cmp
jno
mov
and
cmp
mov
mov
mov
mov
pop
sbb
xor
pop
or
into
mov
mov
mov
repnz
rcrl
loope
jp
mov
fwait
das
cld
xchg
mov
mov
sbb
dec
nop
rolb
jnp
popf
cltd
popl
or
pop
push
cwtl
sbb
xor
mov
jg
and
xchg
push
pop
adcl
lret
push
insl
imulb
repnz
mov
add
cmp
jle
xor
inc
pop
sbbb
movb
jge
cli
sbb
fmulp
xor
sbb
add
call
in
mov
fistpll
call
sbb
xor
pop
aam
xchg
int
incb
mov
outsl
jno
sti
or
push
xor
push
cli
stc
jbe
xor
aaa
mov
sbb
repnz
das
mov
movb
xchg
adc
sub
push
xor
mov
xchg
push
stos
pop
pop
sbbl
lods
mov
fmuls
ror
test
aam
test
stos
adc
cmp
xchg
loopne
dec
loop
loope
sbb
int
xchg
and
in
lods
gs
in
les
jmp
or
adc
nop
cmp
xor
adc
add
and
pusha
inc
mov
pop
jp
imul
fmul
xor
mov
xor
jle
adc
mov
bound
or
jno
pop
je
fwait
xor
faddl
pusha
xchg
sbb
pop
add
jl
add
jno
movsl
out
push
lahf
pop
sub
adc
xor
or
out
rorb
mov
adc
lahf
push
mov
adc
or
pop
mov
xchg
lret
iret
adc
xor
mov
in
test
aam
inc
jmp
das
aaa
outsb
jno
call
pushf
pop
mov
mov
test
ja
jno
inc
popa
ret
push
add
mov
lock
mov
lds
pop
jmp
jecxz
jnp
adc
outsb
out
je
cmc
and
lahf
jne
mov
je
adc
add
out
push
mov
push
sbb
mov
xchg
mov
push
mov
cli
cwtl
add
sti
dec
gs
push
mov
iret
xchg
jo
lods
out
sub
jp
sbb
sub
shll
add
sarb
mov
dec
push
lret
push
push
fcomps
add
xor
sbb
push
into
das
popa
ds
aaa
cmp
ljmp
dec
sbb
add
idivl
sarl
mov
repz
mov
bound
ds
add
nop
mov
and
or
push
mov
and
mov
jmp
adc
push
fistpll
mov
push
pop
push
subps
pop
lds
es
cltd
sbb
fiaddl
push
je
adc
sub
inc
rcr
or
sbb
dec
fnstenv
sub
ret
xor
insl
pop
inc
mov
scas
mov
mov
movsl
cmpsl
or
orb
push
aas
cmp
lret
enter
mov
hlt
pop
jae
xlat
push
fs
mov
fisubrs
data16
test
addb
incb
fwait
jmp
xor
cld
imul
add
shrl
outsl
xchg
pop
mov
test
in
rolb
push
ljmp
xor
add
or
rcll
adc
mov
xor
or
testb
in
pushf
push
push
pushf
cs
mov
dec
adc
cld
adc
ss
mov
scas
subl
jle
and
dec
pop
insl
fs
mov
movsb
sub
lret
or
inc
jmp
sub
je
and
mov
adc
sbb
jge
xor
cmpl
lret
jl
push
xchg
adc
stos
js
ret
mov
inc
popa
fimuls
and
push
mov
push
bound
scas
addr16
mov
mov
fisubs
cmpsb
popf
das
test
cmp
mov
outsl
lcall
pop
cmc
std
add
and
imul
push
mov
dec
sbb
loope
sti
push
inc
loop
pop
fs
jl
push
jmp
stos
jb
sbb
sti
inc
mov
rorb
fnstcw
push
out
out
pop
imul
add
jb
dec
and
adc
cltd
je
lods
xchg
aam
out
mov
and
outsl
lods
mov
push
stos
jnp
push
daa
mov
dec
fimuls
nop
lods
stos
mov
notb
movsl
call
stos
popl
popa
adc
pushf
push
jle
lods
pushf
inc
or
inc
js
fnstenv
adc
cmc
rcrb
into
popf
pop
xor
ja
mov
bound
jno
aaa
nop
idivl
sbb
adc
stos
test
push
pusha
push
sbb
out
adc
outsb
jl
dec
repnz
mov
or
xchg
xor
movsl
cmp
loop
leave
enter
fldenv
ds
cmp
mov
icebp
ds
jbe
out
adc
stos
cmp
mov
popa
jecxz
jmp
movsb
jbe
jmp
stc
std
mov
mov
es
adc
fcmovu
jecxz
pushf
cmp
shr
stc
fnstenv
inc
sarl
enter
pop
je
cltd
or
mov
cwtl
test
aam
aam
mov
add
daa
mov
pop
subb
cmc
xlat
add
and
inc
aaa
nop
push
or
push
push
sub
arpl
mov
adc
jne
and
jne
addl
in
adc
lock
cmp
rcrb
dec
sub
popf
pop
in
and
cmpsl
pop
push
push
mov
pusha
repz
and
xchg
mov
sbb
fisttpl
js
add
jo
in
dec
push
adc
inc
mov
stos
sarl
xchg
loop
rcll
bound
adc
lods
pop
cmpsl
jbe
roll
push
jle
icebp
loop
imul
dec
mov
insl
repz
push
enter
xor
sbb
and
movsb
in
aad
ret
aas
xchg
mov
xchg
dec
and
repnz
xchg
aam
pop
mov
stos
fs
add
jae
cwtl
mov
sub
cs
clc
sub
sti
aas
pop
mov
adc
xor
push
mov
fisubrs
inc
stos
addr16
daa
jbe
ss
jmp
inc
dec
aas
icebp
dec
jecxz
adcb
ficomps
shll
neg
pop
stc
pushf
mov
and
mov
sub
inc
in
cmp
ja
mov
out
popa
fldt
das
mov
xchg
out
pop
shll
mov
sub
mov
fldl
notl
push
lods
pop
lods
mov
cld
lcall
sar
and
fcmovu
push
xchg
ret
test
and
pop
jg
shll
jecxz
push
cmp
mov
jg
xor
bound
imul
pop
adc
mov
lods
sbb
inc
dec
adc
jge
push
cmp
mov
mov
fadd
inc
arpl
lock
xor
pop
xchg
subl
ds
sub
xchg
rolb
mov
add
movsl
and
cs
les
pushl
xchg
pop
test
adc
dec
stc
aaa
push
or
int
pushf
arpl
les
pop
rcll
cltd
nop
cmp
adc
aam
les
inc
mov
or
mov
adc
dec
mov
dec
aaa
add
loop
push
xchg
mov
in
gs
push
and
shr
xchg
dec
out
leave
sbb
jae
mov
sbb
scas
xchg
pop
fsub
sbb
adc
inc
sti
or
sbb
paddw
mov
jb
xchg
mov
mov
and
arpl
push
push
fbld
data16
push
lret
xor
ljmp
adc
fsubr
lock
push
jp
mov
add
adc
cmpsb
jg
fcomps
in
push
mov
dec
out
mov
fldl
cmp
cwtl
jl
or
mov
call
mov
xlat
xor
andb
push
test
pusha
stc
dec
add
mov
and
lds
mov
lahf
test
movsl
cmp
push
out
dec
xor
adc
rcrl
stos
cltd
popf
push
lahf
push
fcmovnbe
pop
jp
push
jo
notl
mov
sahf
push
or
mov
sbb
push
push
in
inc
mov
movq
arpl
enter
xlat
outsl
cs
in
in
and
mov
pop
sahf
and
sbb
aaa
pushf
in
mov
and
sbb
dec
setle
lds
adc
and
mov
push
adc
repz
pop
mov
cli
xor
xchg
xchg
inc
shrb
int
inc
addr16
ret
negl
addb
jbe
mov
sbb
xorl
sub
ss
fsubs
push
adc
lods
mov
inc
pop
ds
inc
pop
shr
daa
test
mov
mov
cmpsb
inc
mov
cwtl
or
adcb
dec
pusha
xchg
ss
jp
mov
sbb
cmc
lea
push
pop
cmpsl
xchg
outsb
out
rcll
insb
sbb
or
mov
pop
das
mov
add
mov
arpl
pop
adc
pop
pop
fcmovne
fst
mov
pop
les
cmc
add
jnp
xchg
not
pop
roll
sbb
sub
test
and
sbb
rcrl
xchg
jbe
insl
je
jp
inc
stos
mov
pop
aam
dec
repnz
mov
scas
cmp
lahf
dec
setp
stc
cwtl
xor
push
out
jecxz
out
aam
aam
aaa
fistpl
mov
sbb
cmp
ret
mov
sbb
mov
arpl
out
fs
into
movsb
sbb
inc
jl
scas
stos
and
xchg
push
and
push
leave
cs
imul
movsl
lods
push
adc
daa
fisttpll
push
pusha
jbe
xchg
out
movsl
pop
fsubs
cmp
xor
repz
inc
cmc
inc
mov
inc
fdivl
and
fdivr
inc
ja
scas
icebp
cld
mov
cwtl
loop
xor
cmpsb
pop
call
adc
xor
add
push
inc
add
imul
rclb
xor
xchg
and
push
inc
mov
mov
mov
and
in
mov
pop
pusha
inc
jno
jne
inc
je
dec
jae
movsb
lret
fdiv
mov
addr16
add
add
std
cmpl
xlat
fbld
cld
cwtl
push
or
and
mov
js
ret
xor
bnd
mov
cmpsb
xchg
shll
out
leave
ljmp
fcmovnbe
stc
fisttpll
cmp
jbe
aas
inc
adc
lahf
ja
scas
dec
mov
lcall
lahf
int
jbe
mov
fsubs
int
and
in
out
or
sub
xchg
jmp
movsb
addr16
ret
add
cmp
fwait
mov
lds
jae
loop
sub
sub
mov
add
ret
jns
pop
test
xchg
jle
insb
mov
lahf
dec
int3
out
inc
xor
sbb
out
imul
imul
lds
inc
or
mov
push
outsb
push
fldl
shlb
sti
mov
movsb
xchg
lret
cmp
mov
out
jmp
push
imul
push
cmp
jo
jecxz
mov
add
pop
or
jne
in
inc
jno
lcall
pop
inc
imul
push
jle
adc
and
sbb
stos
mov
insb
push
mov
mov
mov
cmp
stos
bound
addr16
pop
gs
in
imul
rol
ret
cmp
xor
outsb
sub
sub
idivb
sbb
iret
cmp
out
nop
addr16
push
push
repz
dec
ret
sbb
cli
push
fcmovb
mov
gs
repnz
stos
mov
imul
outsb
adc
dec
loope
fsubrl
cmpl
fnstcw
rclb
cmp
push
pop
and
call
ja
pop
jno
push
cmp
cmp
dec
mov
mov
pop
add
cmp
pop
daa
add
scas
stos
js
ss
sbb
out
adc
fcom
into
addr16
ret
or
decl
pop
aad
fisubrl
mov
xchg
repnz
mov
ljmp
sahf
jne
jbe
inc
mov
cmp
sbb
jbe
leavew
inc
jns
xchg
sbb
movsb
lds
xor
movl
bound
sub
mov
sahf
out
xchg
es
mov
mov
jns
push
daa
jnp
cld
pop
lcall
loopne
ret
xor
xchg
fistpll
mov
cltd
in
xor
push
aad
mov
fisubrs
or
adc
or
mov
out
mov
loop
loop
sub
mull
or
lea
adc
shrl
sbb
scas
jo
icebp
or
mov
xor
cld
bound
jns
jo
sbb
int
cmp
sub
mov
in
add
or
imul
jb
gs
dec
xor
sbb
imull
add
push
aad
stos
lock
aaa
shrb
scas
andb
nop
xchg
or
jp
xchg
pop
mov
test
pop
pop
push
sbbb
test
xchg
pop
mov
nop
xchg
mov
rcr
sub
mov
push
adc
push
insb
mov
sbb
ds
and
stos
mov
andb
push
divl
test
imull
push
lsl
adc
mov
sbb
pop
inc
std
dec
and
sahf
and
xor
repnz
jge
adc
inc
test
mov
xchg
inc
hlt
pop
mov
fwait
scas
sbb
jle
sbb
jg
scas
cmp
push
adc
add
repnz
repz
jmp
jo
sub
dec
and
cmp
jnp
ss
jle
inc
pop
dec
jno
xchg
cwtl
aaa
or
push
aam
mov
add
mov
push
popa
pop
fs
or
decl
mov
mov
icebp
cwtl
sub
ljmp
aad
mov
enter
inc
dec
or
sub
pop
and
data16
add
addr16
les
or
jp
daa
xor
pop
adc
mov
cmp
jne
lret
incb
fbld
lods
sbb
enter
xchg
sbb
add
mov
xchg
pop
sub
mov
insl
push
xorb
sahf
out
xor
inc
ljmp
testl
pop
je
pop
sbb
push
repz
cmpsb
mov
ds
mov
int3
mov
sbb
pop
mov
jo
clc
cmp
mov
inc
xchg
pop
jmp
cmp
cmp
dec
or
pop
pop
mov
pusha
mull
enter
dec
inc
adc
cltd
cmp
inc
mov
fdivl
mov
filds
or
mov
leave
rorb
es
sub
mov
shrb
xlat
pop
cmpsb
and
imul
push
inc
or
mov
adc
stos
inc
mov
ljmp
and
adc
adc
push
jno
rcrl
push
and
xor
sub
testb
inc
jg
ds
xor
sub
aas
add
cmp
cmp
subl
outsb
or
jp
cld
movsb
mov
mov
add
inc
test
mov
push
out
imul
pusha
lods
in
sub
push
mov
ss
push
and
sbb
jge
xchg
outsb
mov
je
mov
fisubl
mulps
testb
push
mov
ffreep
xchg
push
shl
cs
cmp
pop
repnz
mov
mov
xchg
cmp
pop
daa
jg
push
in
pusha
push
movsl
cmp
daa
leave
xlat
pop
mov
inc
repz
mov
mov
jmp
in
xchg
xor
lock
and
sarl
sbb
xchg
faddl
call
lea
outsl
push
loope
mov
mov
mov
aaa
repnz
mov
lock
dec
push
imul
xor
ds
divl
and
xchg
pop
je
ret
fbstp
sub
pop
mov
clc
stc
dec
lret
shufps
add
mov
pusha
scas
outsl
pushf
inc
xchg
add
fbstp
adc
lret
popf
aaa
push
xchg
rcll
loope
push
cmp
xchg
aas
daa
shl
lock
loop
popa
mov
in
rol
and
xchg
shlb
jle
femms
imul
movsl
outsl
out
sub
xor
cmc
mov
outsl
sbb
mov
dec
add
hlt
or
test
imul
dec
or
fcoml
jge
mov
je
mov
out
mov
cltd
push
xchg
cmp
outsl
adcl
or
push
js
shl
jo
mov
mov
mov
xor
fmuls
or
lods
xchg
movsb
cmp
mov
pop
xchg
js
movsl
adc
movsb
jle
push
push
mov
cmpsl
ja
loop
movsb
aad
xchg
push
aaa
dec
fnstsw
pushf
jg
xor
sub
pushf
lret
mov
or
mov
dec
inc
pop
insb
gs
pop
mov
inc
cs
es
sbb
icebp
popf
movsl
mov
jmp
push
cmp
js
aam
cmc
push
test
jg
pop
adc
lret
xor
xchg
scas
dec
cmp
mov
jno
mov
rcll
filds
aaa
sub
mov
pop
stos
insb
cs
addr16
xchg
clc
outsb
sub
stos
add
movntq
into
mov
mov
sbb
and
inc
out
xchg
lcall
pop
shl
adc
push
ja
adcb
xlat
xchg
fsubs
push
inc
xchg
mov
pop
dec
xor
test
movsb
imul
add
cwtl
test
aaa
xor
cmp
int
xor
fiaddl
inc
hlt
xchg
or
shrl
in
pusha
cmpsl
adc
js
mov
call
out
stos
test
dec
mov
sub
fwait
xchg
ja
and
insw
call
mov
dec
out
sti
faddp
pop
sar
arpl
push
aas
jns
and
movb
mov
pcmpeqb
xchg
sub
mov
je
dec
or
jb
mov
lea
in
iret
addr16
call
fildll
and
shlb
xor
pop
push
cmp
popa
out
sarb
daa
arpl
test
ljmp
xchg
cmp
int
subl
mov
jne
fwait
xor
push
sub
ljmp
outsl
push
hlt
push
test
subb
mov
out
scas
mov
jge
loope
sbb
lock
inc
es
inc
sub
push
sub
leave
repz
nop
adc
and
or
xor
enter
or
ja
lock
push
mov
lds
mov
rolb
hlt
andl
push
lods
fs
out
mov
inc
ret
test
das
adcb
cmp
aad
pop
insb
leave
call
repnz
inc
je
pushf
mov
sub
inc
loop
aad
or
pop
xor
jmp
pop
imull
or
adc
mov
std
es
cmp
inc
ret
dec
cmp
lret
mov
jae
xor
fwait
outsb
int3
cmp
in
ss
out
inc
dec
popa
ret
mov
mov
lea
xchg
add
mov
notb
sahf
lret
cli
push
lods
les
in
iret
sbb
div
rorl
pop
clc
cmp
sub
ds
inc
test
cli
aam
mov
mov
imul
lret
pop
pop
inc
cmpsb
test
push
mov
cmpsl
popa
loope
into
js
testb
xchg
lock
pusha
jo
pop
add
add
pop
loope
jb
inc
mov
pop
dec
sub
xchg
mov
push
cmp
push
sahf
scas
scas
cltd
mov
loop
add
fs
and
in
mov
xchg
mov
std
mov
xor
mov
test
jmp
mov
icebp
jmp
fnstcw
lds
jecxz
outsl
movsb
ljmp
es
sti
cmp
xor
lock
mov
mov
dec
idivl
and
shlb
xchg
push
jae
jb
push
jbe
in
test
and
movl
xlat
mov
fistps
mov
fucomp
in
lea
sub
les
push
sub
loopne
loopne
movsb
xor
scas
jecxz
loop
and
loop
mov
data16
stc
jns
fdivr
hlt
subb
repnz
pop
les
ret
lea
popl
sub
jb
jo
in
sti
ss
pop
loope
jae
xor
jo
ret
jnp
in
arpl
rorl
ret
insb
or
cwtl
jb
dec
aaa
sub
shrb
pusha
mov
mov
imul
xchg
lret
enter
xlat
cmp
mov
and
mov
sbb
pop
pushf
adc
sbb
scas
xchg
sbb
jnp
xor
pop
pop
ds
out
add
pop
push
sarb
cltd
sbb
adc
aad
in
jmp
or
out
adc
jae
or
add
dec
div
jmp
add
xchg
and
xchg
jecxz
sar
iret
cmp
push
addb
push
mov
sub
adc
rclb
leave
lahf
and
adc
outsb
call
addb
fsubrs
pop
aam
cmp
in
adc
inc
sbb
pop
adc
mov
imul
cmc
outsb
rolb
fsubrp
ficoms
ret
cld
jl
cld
mov
inc
lds
mov
fbstp
stos
imul
inc
in
or
lret
inc
xchg
rorl
je
test
cmc
mov
xchg
repz
out
arpl
dec
pop
js
mov
sbb
xchg
inc
sub
sbb
jbe
xor
outsl
inc
and
adc
dec
scas
loop
xor
push
into
mov
cmp
popa
mov
ds
fcmovne
cmp
mov
into
fs
std
mov
inc
lods
das
push
cltd
cmpsl
shrl
inc
push
adc
jnp
sub
jb
imul
inc
bound
sahf
popa
mov
addr16
mov
les
sub
dec
push
cmp
lcall
dec
repnz
or
jo
popf
cmpsl
add
mov
movsl
push
insl
imul
sbb
sbb
fs
xor
or
negl
cld
pusha
push
dec
xchg
xchg
jb
xchg
dec
cmc
int3
pop
sbb
mov
lcall
xchg
pop
push
pop
adc
jae
aam
cmp
pop
mov
pop
jmp
mov
popf
leave
outsb
lds
pop
out
or
mov
int
je
loop
cwtl
lcall
cmp
and
push
dec
jne
cltd
aaa
lea
or
cmpsl
pop
jmp
add
out
cwtl
jmp
push
lods
jae
idivl
les
dec
xor
addr16
addr16
and
xor
cmpsb
outsb
jns
ret
movsb
push
cmp
int
or
out
scas
shl
test
push
xor
jp
je
jl
out
std
gs
cmp
mov
push
into
push
pop
push
xrstors
ja
mov
jp,pn
pop
push
shll
dec
outsl
ret
push
nop
lret
out
push
leave
and
or
jecxz
insb
dec
push
jb
push
dec
push
repnz
jae
push
dec
flds
and
mov
divb
sbb
aas
jo
xor
addb
adc
xor
dec
xchg
or
hlt
sub
push
jmp
lock
or
add
pop
xlat
push
xor
sbb
inc
jno
out
popf
inc
leave
outsl
ret
pop
sbb
and
sbb
adc
dec
dec
call
inc
ss
or
mov
ljmp
add
mov
ljmp
int
loop
fstl
sub
or
insl
popl
mov
ja
cmc
in
shrb
push
nop
cmp
cmpsb
cs
adc
dec
push
jne
sbb
mov
das
lods
cmp
mov
rcrb
cld
test
mov
inc
ret
mov
jle
and
xchg
pop
rcrl
js
sub
and
inc
dec
pop
jl
or
cltd
sbb
adcl
jp
sbbb
lahf
jne
ljmp
in
aas
sbb
loope
inc
test
mov
test
jmp
sub
mov
mov
jmp
xchg
dec
add
movsb
add
cmp
and
movsl
mov
fwait
xor
xor
out
jnp
hlt
and
imul
and
sahf
pop
mov
jno
mov
add
xchg
xchg
test
stos
push
adc
adc
sub
into
sbbl
sub
insl
cmpsl
fwait
push
jp
xor
dec
ss
mov
or
movsl
out
iret
inc
pop
scas
shrb
xchg
dec
je
dec
pop
pop
fs
out
inc
movsl
in
xchg
idiv
inc
jp
das
xchg
movsb
push
fildl
inc
mov
mov
jae
js
jbe
hlt
lods
fiaddl
icebp
mov
scas
adc
mov
jb
jmp
jne
inc
pusha
icebp
shlb
mov
add
aaa
xor
cmp
mov
fadd
out
stos
sbb
les
test
cwtl
es
or
mov
inc
or
repz
jae
push
jge
pop
mov
movsl
adc
adc
or
xorl
sbb
push
notl
xor
mov
js
mov
mov
jns
push
adc
rcl
lock
movsl
lret
test
imul
cwtl
sbb
jne
xchg
aas
nop
inc
push
mov
mov
test
je
mov
inc
and
mov
stos
cmp
lock
add
or
sarl
movsl
stos
mov
adc
or
cmp
insb
rep
sahf
andl
mov
xor
call
pop
sub
addl
xor
add
das
les
push
rcrl
in
iret
fisttpll
lahf
das
cmpsb
in
xor
lods
nop
pop
test
sbbb
xchg
sub
inc
add
or
jno
and
xorb
lods
hlt
inc
std
cli
dec
xchg
leave
push
jnp
cmpb
sbb
sbb
test
lods
and
hlt
cmpb
cltd
jo
aad
jae
lods
das
inc
out
jb
jo
ffree
pop
cmp
inc
sti
aaa
test
cmpsl
mov
add
sbb
jge
dec
push
xor
lock
repnz
mov
shrb
mov
stos
mov
mov
sbb
mov
jle
cmp
jb
pusha
test
mov
jecxz
and
push
and
inc
push
orl
negb
sub
add
sub
jg
dec
push
dec
add
lds
mov
cmpsl
or
addr16
add
sbb
in
fsts
xchg
push
lea
cmpsl
add
sbb
subl
cmpsb
mov
aas
mov
lcall
add
lea
lahf
mov
rorl
std
popa
cmpsb
iret
jecxz
das
inc
dec
push
mov
pushf
add
hlt
iret
ja
mov
sti
lret
leave
adc
jae
and
sbb
imul
mov
scas
cmp
inc
and
mov
lret
imul
jle
lods
adc
ljmp
jne
dec
cmc
int
stos
jns
jae
mov
ljmp
inc
adc
sub
sub
mov
jle
and
popl
arpl
jnp
addr16
rcrl
xchg
push
shr
inc
aam
cli
js
xor
sub
rcrl
dec
stos
push
xchg
xchg
sbb
mov
push
dec
or
dec
pusha
mov
out
push
xlat
test
ss
lahf
jnp
mov
dec
inc
push
jns
fwait
pushf
lret
pushf
shll
jge
and
ljmp
rolb
jo
cmp
inc
rcrl
imul
ret
push
push
mov
orl
xchg
xor
rorl
jno
or
sbb
mov
ss
jg
jg
dec
insb
divl
push
sbb
into
lret
ret
dec
fmul
cmp
sbb
std
jae
and
push
shlb
fwait
mov
repnz
mov
adc
jno
mov
jle
lea
jg
std
and
loop
jb
iret
or
popa
fildl
mov
lods
jmp
pop
sbb
sub
clc
xor
mov
inc
add
outsl
mov
out
popa
out
lcall
daa
fstl
xor
push
adc
pop
mov
imul
mov
sub
fstpl
xchg
push
scas
push
or
popl
push
mov
shrl
xorl
cltd
mov
fisubrs
movsb
stos
test
xchg
mov
movups
mov
nop
inc
ljmp
mov
cmp
cmp
out
adc
jbe
adc
adc
push
movsl
or
xor
push
enter
popa
or
xor
mov
mov
push
push
or
ret
jl
push
fs
adc
out
ret
mov
scas
mov
cli
sub
mov
out
push
jbe
cmpsl
sbb
xlat
rcr
push
cmpsb
adcl
adc
push
cwtl
jge
rorl
dec
es
cmpsl
push
ljmp
rorb
cmpsb
push
pop
xchg
das
mov
jl
xor
jmp
mov
mov
repz
ja
adc
lods
movsb
outsb
imul
mov
xchg
jge
push
cmp
lcall
mov
rorb
sahf
dec
aaa
sub
scas
adc
sahf
xor
iret
dec
stos
jle
nop
mov
fsubrs
add
push
mov
outsl
cmpb
test
rorl
repnz
and
scas
xor
ret
xor
mov
xchg
and
xor
pop
push
jae
jns
inc
xchg
adc
pop
int
xor
mov
mov
jmp
cmp
stos
push
push
out
mov
andb
fwait
cmp
xchg
cltd
and
xor
push
cmp
ljmp
inc
dec
mov
mov
mov
repz
push
iret
mov
movsb
fimull
xchg
mov
adc
pusha
lahf
mov
jl
fcmovbe
mov
jne
stos
flds
xlat
insb
test
das
outsl
xor
rcrl
or
gs
subl
and
int3
jg
sahf
xchg
loop
adcb
inc
pop
mov
jno
dec
out
fldl
dec
pop
sub
test
scas
mov
pop
push
cmpb
dec
stc
imul
push
xrstor
daa
cmp
lods
stos
sbb
jge
test
stos
push
or
xchg
jo
jmp
fstpt
mov
pop
out
jb
outsl
arpl
lret
xor
mov
adc
ljmp
pusha
xchg
daa
out
sub
sbb
test
inc
cli
test
out
outsb
or
inc
push
mov
int
cwtl
pop
sub
jmp
pusha
in
bound
aas
shlb
cmpsl
addb
js
jmp
sub
and
adc
orl
shrb
out
lret
and
cmp
push
mov
ret
add
xchg
test
stos
sti
xchg
mov
xchg
movsl
mov
inc
shrb
adc
and
lea
add
mov
pushf
jne
pop
and
fucomip
fmuls
pushf
mov
out
jne
sub
icebp
push
shlb
jmp
insb
mov
mov
movsb
out
cmp
cli
imul
push
ret
call
sbb
mulb
cltd
into
xor
aad
inc
and
or
test
cltd
pusha
aaa
mov
add
flds
cmpsl
or
je,pt
pop
in
int
cmp
jno
test
addr16
mov
cmp
dec
adc
fisubrl
mov
push
cmp
xchg
mov
and
mov
mov
add
jp
aaa
mov
es
mov
sbb
rclb
add
push
lea
int3
cmp
inc
in
cmp
adc
out
jl
mov
outsb
mov
mov
bound
inc
xchg
test
lods
lret
mov
mov
lea
cmp
sub
jno
pmullw
sub
jno
inc
hlt
enter
pop
dec
std
addb
pop
inc
push
cli
push
data16
inc
sbb
dec
jae
inc
and
jne
subb
in
pop
mov
pop
mov
lahf
test
test
addb
push
inc
mov
adc
sub
mov
xor
sbb
dec
enter
xor
stc
ljmp
imull
jo
mov
in
and
sbb
xchg
lcall
adc
popf
lods
out
inc
adc
cs
jno
mov
mov
and
pop
xchg
daa
ret
jae
inc
loop
sub
fadds
scas
and
add
in
dec
pop
in
pop
mov
jecxz
mov
js
sub
int3
mov
hlt
mov
addr16
cmpsl
sbb
mov
out
push
inc
roll
jge
hlt
cmpl
cld
add
in
in
sbb
es
jo
xor
sub
das
sbb
mulb
punpcklwd
jne
xchg
push
outsl
pop
hlt
cmp
xor
enter
mov
lods
jp
ss
sub
call
xchg
test
sub
mov
xchg
cmp
ljmp
into
sub
jnp
fnstcw
xchg
xchg
fsubl
xchg
adc
dec
mov
rorl
cmpl
pop
addl
dec
xchg
xchg
addr16
xchg
adc
mov
xor
ljmp
adc
loope
xchg
cltd
pop
ss
lret
jecxz
test
jne
and
pop
pop
enter
mov
xor
mov
pop
or
and
out
lods
pop
jge
test
jmp
or
mov
andb
jl
arpl
pop
lds
sub
jmp
cmp
daa
lret
decl
jge
jo
mov
cli
sbb
cmpsb
icebp
shr
mov
sbb
push
jbe
mov
cwtl
pusha
sub
movsb
add
pop
aam
xchg
loop
sbb
sub
nop
sub
mov
mov
pop
xchg
add
push
pusha
aam
push
xchg
add
test
aaa
push
sbb
adc
jle
iret
sub
sbb
int3
mov
test
jge
jg
pop
adc
push
leave
cs
jne
pop
or
lock
xlat
mov
push
mov
inc
push
jge
cmp
test
mov
cltd
sbbl
mov
lds
mov
insb
mov
cmp
pusha
test
sbb
mov
add
mov
lret
testb
js
cwtl
int
cwtl
js
popf
aam
shr
add
outsb
repz
imul
cltd
jle
mov
test
das
sbb
xor
jbe
jae
push
xchg
sbbb
adc
fcomip
jle
pusha
ja
clc
fs
or
cmp
neg
loop
mov
and
stc
lea
fwait
pop
push
push
in
push
in
cltd
pop
xchg
rol
mov
push
scas
pop
popa
or
pushf
jns
test
das
cwtl
push
clc
rolb
imul
fiadds
push
sbb
or
push
in
dec
into
cmp
pop
inc
loop
cld
mov
imul
xchg
lcall
add
ror
gs
xchg
pushf
leave
fnsave
in
into
mov
movsb
cmp
inc
fldenv
add
pop
aas
adc
int
call
dec
shl
mov
addr16
bnd
cs
mov
scas
mov
xchg
je
cmp
stc
loop
iret
fsts
jo
je
mov
mull
popa
dec
push
or
adc
xor
dec
mov
shll
adc
or
shlb
ja
ss
sbb
repz
mov
and
rorb
pop
loope
xor
jmp
aad
pusha
mov
imul
dec
das
sbbb
jg
dec
add
mov
jnp
cld
and
pop
aas
add
push
mov
ret
push
add
gs
rep
lods
mov
in
cwtl
pop
mov
lock
sbb
adc
movsl
loop
sbb
movsb
addl
mov
add
jbe
jne
jecxz
mov
adc
sbb
fistl
pcmpgtb
adc
fwait
add
icebp
xor
gs
aas
outsl
outsb
inc
dec
out
adc
xchg
dec
into
push
movsb
mov
scas
std
xor
dec
stc
sbb
and
cmpsl
dec
cmp
jg
fidivl
into
jge
pop
push
mov
das
xor
iret
pop
pop
cmp
addb
mov
stos
inc
test
push
mov
jne
adc
daa
push
lret
sub
adc
mov
adc
rorl
pop
or
and
ret
sub
mov
pop
dec
rorl
pusha
mov
loop
cmp
xchg
std
out
ds
sbbb
sub
xor
adc
inc
outsl
push
cli
push
xor
out
xor
mov
and
add
sub
pop
push
int
inc
test
sahf
aaa
sbb
pop
fs
xchg
popf
dec
es
test
aaa
in
sub
das
js
cmp
iret
jns
faddp
inc
dec
pop
pop
pop
mov
pushf
push
and
mov
push
repnz
cmpsb
sbb
cmp
sarl
test
into
and
dec
ljmp
into
jns
lret
or
popf
cltd
add
pop
xor
stc
lret
pop
outsl
xchg
clc
out
pop
push
xchg
add
dec
fcmovne
mov
jg
insb
lds
aad
pop
fnstenv
shl
jl
lcall
imul
add
leave
sahf
or
mov
push
xor
cld
xor
pop
rcll
or
add
and
test
mov
and
testl
inc
test
xor
rorl
jp
lods
cs
cmpsb
roll
push
sub
adc
dec
das
sbb
rcrl
and
inc
shl
movsb
scas
loope
jge
fs
or
inc
enter
pop
je
mov
daa
insb
std
cmp
repnz
push
stos
mov
test
leave
movsl
and
loope
mov
mov
cmp
loope
and
xor
sahf
stc
and
popf
enter
iret
xchg
cmp
ret
test
add
sub
dec
jle
shrl
push
out
popf
or
mulb
std
popf
insb
ret
mov
sub
mov
xlat
call
mov
cmp
shlb
shlb
add
mov
lods
pop
push
pop
sti
dec
lock
dec
or
push
loop
cltd
sbb
sub
push
cmp
call
aad
stos
xorb
mov
popf
sbb
outsb
outsb
inc
gs
sbb
xlat
xchg
inc
dec
cs
push
repnz
dec
lods
xorb
or
cmp
bnd
lods
lock
inc
xor
push
lcall
mov
or
fwait
das
and
or
daa
sbb
roll
sbb
sub
cmpb
sbb
cmp
xchg
lcall
mov
pop
xchg
sahf
dec
int3
jp
out
pop
movsb
shll
idivb
stos
inc
mov
scas
mov
addl
push
in
ret
scas
mov
dec
das
jecxz
ret
out
push
mov
sbb
sub
dec
xchg
mov
out
push
fistpl
sbb
subb
iret
addl
or
insl
mov
jl
adc
in
and
mov
dec
add
addr16
aam
xor
inc
rcrb
mov
pushf
mov
mull
outsl
repnz
fcompl
fcmove
add
test
jle
dec
addr16
lret
push
mov
sbb
in
pop
dec
mov
fisubl
sub
jmp
mov
mov
lods
sbb
data16
movsb
push
and
repnz
loop
xor
pushf
repnz
test
sar
and
jno
leave
stos
xchg
adc
jnp
push
pop
ret
jmp
int
gs
es
mov
xor
in
pop
sub
mov
push
and
out
push
jmp
cmpb
dec
push
xchg
add
add
ret
pop
jecxz
cmovle
pusha
inc
xchg
out
dec
push
iret
or
or
sti
popf
mov
lods
mov
inc
in
mov
rcl
pop
pop
test
mov
fcmovu
fisttpl
cmc
pop
fnsave
mov
iret
sbb
popf
push
or
es
stos
test
lods
inc
mov
daa
loopne
rorl
je
lret
and
daa
shrl
jl
icebp
jb
out
jmp
or
aad
jle
and
out
add
mov
cwtl
sbb
inc
js
out
add
insl
mov
loopne
sbb
enter
push
lock
xor
into
cmc
loope
and
dec
jb
fnstenv
lea
pop
cltd
and
out
loope
push
lock
aam
pushf
mov
adc
mov
int
jne
xor
loopne
ljmp
mov
sbb
loope
cmp
iret
mov
mov
in
cmp
aad
jecxz
inc
es
or
jmp
xor
fnstcw
decb
or
mov
inc
jl
bound
in
ds
xor
sub
cmc
lahf
cli
aad
aas
jp
add
aaa
and
mov
jns
jp
pop
mov
rcrl
lcall
aas
mov
add
mov
pushl
dec
inc
cld
sbb
push
and
insb
sbb
cld
shr
xchg
mov
xor
imul
push
and
jp
xor
dec
push
sbb
mov
lock
test
test
jge
mov
aas
out
out
push
aas
cmp
rcll
sbb
sbb
sub
jge
into
sub
mov
es
mov
fs
mov
fidivrl
cmp
sarb
aad
cwtl
in
scas
mov
jge
xchg
nop
xchg
push
out
icebp
mov
push
sub
jno
test
scas
mov
test
cli
add
xchg
sbb
sub
mov
xchg
inc
sub
adc
test
push
adc
movl
stos
mull
jnp
pop
mov
hlt
icebp
test
sbb
push
jno
or
or
lea
xchg
je
outsl
push
and
mov
xchg
dec
into
cmp
jb
ds
xchg
mov
fs
mov
add
jle
dec
inc
ret
push
clc
pop
std
add
mov
out
sub
rcrb
fxam
mov
ja
lret
fsts
and
xchg
out
sbb
mov
jno
pop
inc
or
mov
mov
inc
testl
pushf
ss
rclb
mov
rcrl
jmp
push
dec
sahf
inc
pop
pusha
lret
and
lahf
sub
cmp
mov
jmp
push
mov
fsubl
std
stos
pop
jmp
idivl
cmp
repz
ret
push
mov
jl
dec
xchg
fdivs
and
pop
out
ret
inc
pusha
cli
and
sbb
pop
fwait
xchg
fcmovnb
hlt
push
jge
adc
out
add
mov
or
dec
dec
iret
sbb
mov
test
int3
and
cmp
adc
out
jb
add
aam
or
pushl
push
xchg
mov
fisubrl
in
or
sub
sbb
push
cmp
push
jmp
or
cmp
sbb
stos
sub
sbb
mov
stos
cmp
push
pusha
xor
ret
sbb
and
adc
jp
jne
mov
dec
imull
lods
daa
push
in
hlt
fidivs
idivl
mov
lods
ret
push
sub
ja
inc
std
idivb
loope
mov
bound
sarb
sahf
lods
ja
aam
data16
ret
mov
sbb
jo
mov
scas
cwtl
or
out
sbb
push
jl
leave
ret
ret
mov
mov
xor
in
mov
int
xor
sbb
fsubrl
gs
dec
insb
ss
cmp
loopne
sub
push
dec
lds
out
xchg
jne
shll
das
dec
mov
xchg
jmp
sbb
adc
sbb
inc
push
std
pop
xchg
lcall
loope
jl
lret
out
subl
lods
xor
ret
call
insl
mov
sbb
mov
mov
jnp
out
mov
mov
outsl
daa
loopne
dec
hlt
in
aas
jg
cmp
xchg
jo
test
cmp
in
push
push
stos
fbld
out
test
bound
sbb
sbb
lods
cmp
test
lret
push
xchg
cmpsl
add
ja
test
les
jp
mov
testl
cmp
push
sbb
inc
inc
out
mov
xchg
test
adc
or
enter
inc
pop
mov
fisubrl
lcall
cmp
mov
xchg
adc
cltd
mull
pop
adc
mov
add
shl
push
out
pop
call
inc
mov
int
push
ficompl
loopne
lahf
or
xor
or
mov
xor
sub
leave
jl
rcll
shlb
movsb
inc
cmp
xchg
mov
sub
pop
les
scas
std
imul
out
mov
das
mov
lcall
lods
ret
push
inc
sbb
dec
xor
lret
loopne
dec
sub
stc
jle
ficoms
sbb
or
lock
pushf
and
pop
add
cld
inc
add
mov
adc
cwtl
add
jge
sti
sbb
jns
pop
jo
jg
aam
xchg
lret
sbb
jno
and
fnsave
mov
divb
hlt
ja
push
fisttps
add
test
jne
lock
xor
dec
popa
adc
outsl
jle,pt
ljmp
aas
xchg
ljmp
add
add
inc
xchg
pop
or
add
stos
mov
push
movl
mov
pop
gs
ja
movsl
pushf
out
loopne
sub
rcrb
add
mov
and
mov
fs
clc
lret
int3
fstp
aad
ficompl
cli
sbb
jle
or
fsubrl
test
mov
icebp
popf
lea
xchg
es
pop
jns
mov
loopne
cmp
div
inc
inc
pushf
fstpl
repz
pop
jnp
or
xchg
aam
cmc
les
mov
push
in
test
pop
jae
fiadds
popf
packsswb
icebp
int3
sub
int
push
pop
mov
push
mov
pop
popf
cmpsl
mov
and
sub
fimuls
mov
pushf
sahf
lcall
mov
fwait
imul
mov
dec
cmp
inc
mov
xchg
cltd
test
push
ljmp
lret
jnp
add
sti
mov
fdivl
ss
cmp
cmp
xchg
das
stos
pop
add
sub
jo
or
adc
dec
iret
and
dec
xorl
push
insl
xlat
ljmp
sub
xchg
lahf
xchg
test
mov
push
xchg
jg
sub
orl
subl
repnz
sbb
cmpl
push
mov
mov
jmp
mov
shrb
mov
cmpsl
pusha
std
cmpsb
test
push
mov
push
out
fiaddl
mov
push
cmp
std
add
divb
cmp
dec
and
fstpl
lds
pop
adc
mov
dec
pop
xor
xchg
mov
mov
ds
int
mov
push
mov
dec
cli
push
dec
fwait
jbe
out
daa
sbb
inc
fdivr
mov
lahf
cmp
push
sbbl
in
and
xorl
jns
jp
lods
xor
jae
es
cmpsl
sub
jg
xlat
repnz
enter
cmp
push
les
xchg
dec
cmpsb
lds
pop
movsl
lahf
bound
xor
dec
lock
fwait
clc
mov
sbb
loope
push
mov
bound
stc
sbb
inc
push
outsb
add
cmp
xlat
push
out
inc
lret
aad
pop
shrl
aaa
mov
jmp
loope
mov
lea
aas
aaa
call
cwtl
inc
ljmp
push
repz
sti
stos
mov
xchg
int3
movsl
adc
xchg
xchg
movb
cmp
jmp
imul
int
mov
mov
loope
mov
pop
cmpb
out
sbb
in
and
subl
push
es
push
xor
xor
push
popf
test
add
jge
fisubrs
ja
push
mov
nop
mov
lretw
rcrl
sub
inc
mov
xor
xchg
mov
or
adcl
ds
pop
adc
or
jo
inc
xchg
mov
aam
aaa
jno
sbb
adc
outsb
das
repnz
sbbl
rcrb
pop
and
mov
icebp
cmp
xchg
xchg
push
fmull
fildl
add
jne
aad
ss
mov
adcb
pop
jbe
into
pop
lret
jp
adc
rcr
inc
mov
dec
pop
mov
bnd
into
je
mov
dec
mov
mov
mov
mov
inc
orb
fsts
mov
cli
xor
cwtl
aam
enter
pop
mov
sub
mov
mov
scas
dec
add
outsl
xchg
mov
xor
jne
aaa
and
xchg
adc
or
mov
and
sarl
loopne
bound
mov
jb
jge
cs
cltd
jle
aam
jb
mov
stos
and
jbe
hlt
ret
stc
es
mov
cmp
cmpsl
or
addr16
movsb
jp
xor
dec
push
dec
push
push
cmp
aas
addr16
mov
adc
shrb
jo
and
push
in
jecxz
subl
cmc
push
outsb
ret
mov
in
xchg
xor
sub
add
popa
into
mov
sbb
dec
push
jb
nopl
sub
repz
mov
jnp
movsb
pop
adc
or
fidivrs
dec
out
js
and
jne
inc
test
jp
or
orl
in
xchg
jle
sbb
sbb
adc
sbb
data16
pmullw
pushf
lds
add
cmp
mov
cmp
cmpsb
lods
inc
and
cmp
fcmovnu
jge
push
jmp
mov
add
out
xor
cmp
repz
lods
xchg
mov
rcrl
and
xor
out
das
inc
jle
xor
aas
sub
shl
dec
insb
stos
movsl
mov
loope
int3
cmc
push
pop
mov
inc
pop
and
ljmpw
xchg
imul
jnp
je
ljmp
ficompl
adc
sti
loope
mov
fisttps
sbb
mov
jl
dec
sbb
push
push
test
and
stos
pop
mov
xchg
hlt
sub
jp
pop
pushw
jle
popa
in
stos
in
iret
testb
inc
aad
xchg
cmc
adc
pop
lret
and
je
xor
add
jnp
add
loopne
pop
mov
and
push
sub
test
fbstp
cmc
pop
and
sbb
fildl
clc
aas
push
filds
jge
xchg
adc
xor
stos
jb
lock
ss
xchg
pop
xor
ss
push
add
popf
out
stos
sti
mov
mov
pop
push
movsl
or
add
sub
mov
inc
jg
test
adc
mov
cli
jecxz
mov
jmp
in
mov
add
cmovae
loopne
xor
pop
or
test
cmp
mov
sbbl
pop
bound
lock
pop
ret
xlat
out
ljmp
lea
jo
pop
mov
lods
ret
cmpsl
movsl
imul
das
push
mov
gs
mov
pop
dec
or
lret
insb
sahf
imul
pop
popf
inc
xlat
fstpt
jbe
mov
aas
hlt
fisubrl
jbe
scas
sub
aaa
lea
les
mov
xchg
mov
pop
pop
ret
lock
mov
lods
inc
ljmp
fs
mov
push
mov
sbb
add
filds
mov
xor
inc
sbb
shr
subb
pusha
cmc
jne
lods
mov
push
jg
push
cmc
mov
cli
inc
mov
jle
cmp
insl
push
scas
mov
mov
adc
outsb
xchg
negb
or
scas
mov
xor
mov
mov
dec
mov
loopne
mov
push
push
pop
adc
ret
inc
jbe
sbb
in
lods
mov
and
popf
call
js
jns
insb
mov
fistl
mov
mov
in
stos
call
cld
popl
and
out
push
sub
and
repz
xchg
hlt
xor
repnz
adc
les
dec
push
mov
jns
lret
jne
dec
mov
test
xor
je
jmp
jecxz
fmul
mov
jmp
sbb
cwtl
pop
xor
je
maskmovq
notl
and
addb
mov
adc
sbb
out
pop
int3
push
shrl
sub
and
loopne
loope
xor
push
push
mov
iret
push
in
and
pop
sbb
pop
xor
jg
ss
inc
push
xchg
pop
js
pop
cmp
adc
cmp
rclb
xorl
and
cmpsb
pushf
in
push
mov
xchg
xlat
lds
cmpsb
xchg
int
les
sbb
cmovb
xchg
das
cmp
jo
inc
fists
inc
imul
lods
push
iret
scas
fstl
cltd
imul
inc
mov
cwtl
push
mov
dec
push
ror
fdivl
icebp
stc
cmpsl
cld
lds
cmp
int
inc
or
ljmp
mov
pushf
arpl
pop
pop
fwait
adc
mov
xor
mov
movsb
sahf
lret
aam
movsl
mov
cmpsl
and
mov
adc
js
pop
xor
fucomp
fdivrl
or
fwait
imul
add
in
hlt
mov
outsb
mov
adc
xor
cwtl
push
mov
mov
jb
fstpl
mov
stos
push
cmc
fwait
jmp
mov
enter
push
xor
lcall
pusha
push
ret
in
loop
dec
mov
cmp
js
xchg
pop
xchg
cmc
mov
sbb
inc
std
cmp
add
sti
call
inc
pop
dec
loope
loopne
out
std
aaa
dec
inc
push
pop
outsb
test
jmp
pop
inc
mov
pop
adc
pop
and
mov
movl
push
jl
hlt
popf
pop
adc
jp
adc
adc
push
jg
sbb
jb
push
inc
nop
xchg
add
xchg
in
test
pushf
mov
mov
adc
add
shrl
mov
repz
mov
nop
call
inc
frstor
mov
shrl
testb
pop
sbb
cmc
iret
not
aaa
jbe
ret
aam
or
movsb
push
and
addr16
or
adc
mov
leave
hlt
int
test
xchg
cwtl
cmp
addb
xchg
mov
adcb
loop
add
and
dec
mov
mov
test
and
dec
mov
jo
or
push
xor
in
into
push
pop
dec
cmpsl
sub
add
mov
in
repnz
xor
xchg
inc
icebp
push
adc
adc
push
test
jo
jmp
in
adc
jo
fdivl
inc
jae
pop
ret
mov
add
jnp
sbb
jae
loopne
imulb
dec
cmp
leave
sbb
sub
dec
aam
lock
pop
das
adc
stos
andb
fdivr
lods
fnstsw
sbb
frstor
cmpsl
movzwl
sub
pop
xchg
in
imul
xchg
scas
push
stos
sub
sahf
movsb
lcall
sti
sarl
js
test
jecxz
repnz
add
cmp
xchg
test
ljmp
lahf
rolb
lds
test
sub
adc
iret
lods
out
cmp
inc
push
pop
movsb
vsqrtss
dec
xchg
cmp
xchg
mov
sbb
xchg
sbb
movsb
ror
and
sbb
adc
push
enter
ss
rcr
lea
and
pusha
addb
cltd
cmp
add
mov
enter
jo
cltd
sub
inc
sub
jo
in
xor
cmp
push
sarl
int3
lods
mov
sbb
mov
dec
xchg
mov
sbb
fsubl
lock
cmp
inc
and
dec
test
flds
sub
sub
loop
fnsave
hlt
sbb
int3
xor
cltd
pop
mov
and
lods
and
sub
rorl
orb
xor
rclb
mov
cmp
add
outsb
ret
scas
mov
cld
int3
sub
imul
pop
movzwl
mov
jg
ss
cmpsb
bound
cmp
dec
jmp
fmull
sbb
fistps
lahf
jl
xchg
aad
insl
adc
movsb
inc
clc
and
inc
cmpsb
add
scas
jb
xchg
pop
add
adc
fisttps
in
scas
cltd
push
inc
pop
cmp
mov
inc
add
cmc
nop
dec
ret
mov
mov
sysenter
jno
xchg
fnstsw
leave
dec
sbb
testl
lcall
lock
leave
clc
fldt
inc
dec
and
mov
dec
leave
scas
dec
lret
out
cli
mov
xchg
cmpsb
mov
out
mov
and
out
aam
fsubrs
xorl
add
cmp
pushf
xor
mov
jmp
int
cld
fnstsw
inc
jns
mov
sub
mov
mov
fstps
pop
addr16
inc
es
mov
sub
ret
dec
test
inc
js
cld
repz
mov
decl
pop
adc
push
xor
jne
pushf
push
bound
adc
popf
mov
ja
dec
nop
sbb
or
nop
mov
testl
inc
cmpsb
add
push
fwait
out
inc
imul
pushf
pop
nopl
bound
or
and
adc
inc
mov
jnp
pop
cmp
and
pushf
jp
pop
dec
mov
cmp
jle
or
int
aas
mov
int
xchg
jb
mov
lds
jmp
cmp
in
cmpsl
arpl
dec
jbe
lret
mov
xchg
and
mov
std
stc
inc
movsl
push
pop
imull
mov
mov
or
call
ja
inc
xchg
mov
mov
and
lahf
cmp
adc
jmp
repz
les
mov
stos
aaa
iret
addb
mov
push
enter
shlb
stos
das
in
fistpl
stc
cwtl
ss
jb
push
in
xchg
xor
icebp
dec
fcomip
add
sub
imul
jl
out
adc
nop
call
mov
mov
and
fimull
lds
fnstsw
push
xlat
call
daa
add
shrl
aaa
xchg
fldenv
sbb
mov
sub
frstor
and
sti
jb
out
and
add
outsl
xchg
lods
push
push
loopne
cs
in
mov
sbb
jns
rep
addr16
lret
mov
popa
test
xor
add
stc
and
dec
and
sbb
lret
sub
lock
in
xor
push
push
push
andl
and
inc
pushf
inc
cs
hlt
mov
nopl
pop
stos
add
sbb
push
mov
push
dec
aad
call
push
fldl
aam
dec
jp
xlat
pop
push
mov
sbb
rorl
shrb
push
dec
into
add
adc
clc
adc
dec
cmpsl
mov
and
xchg
aad
addr16
aaa
pop
xchg
fcom
xchg
push
and
push
fsubrs
nop
sbb
push
mov
xor
mov
mov
out
cmp
jnp
xor
popa
nop
je
pop
scas
shll
xlat
inc
imul
in
pusha
dec
adcl
fwait
ret
je
shrb
or
lds
sbb
xchg
outsb
dec
ljmp
movq
cmpsb
das
fwait
dec
push
call
mov
imul
cmpl
fstps
lret
in
inc
ret
lods
add
push
sti
std
cmp
scas
mov
dec
sbb
loop
xacquire
sub
xor
ret
loope
test
call
sbb
dec
mov
cs
ja
nop
push
xchg
cmp
frstor
xchg
mov
loope
mov
loopne
pop
mov
jne
pop
adcl
jge
mov
popf
jge
and
cmpsb
daa
dec
loopne
xchg
ret
loope,pt
out
rcrl
ret
sbbl
mov
cltd
and
imul
xchg
sahf
scas
rcll
outsb
sub
push
ja
das
push
xchg
mov
push
xor
outsl
mov
xor
ret
add
mov
xor
cmp
pushf
jbe
lret
mov
jno
stc
lds
push
cmpsb
dec
cli
inc
add
pop
jge
push
pusha
es
call
in
or
cld
lods
add
dec
mov
add
lret
lcall
movsb
pop
mov
fcmovu
gs
repz
inc
inc
imul
call
sub
fidivs
adc
push
xor
and
push
shlb
decb
sbb
jecxz
fwait
pushl
dec
out
push
stos
es
iret
lcall
sub
loope
in
out
movsl
sahf
push
inc
xchg
sub
dec
fidivrl
xchg
pop
add
scas
hlt
das
jge
xchg
cltd
or
cmp
cli
pushf
xor
push
pop
mov
mov
and
stos
dec
lret
cmp
mov
push
popa
insb
in
xchg
mov
mov
mov
cmp
mov
rcl
icebp
test
push
cmpsb
iret
cmp
ss
scas
jae
push
inc
xchg
leave
cs
int
dec
loope
mov
add
movsb
loopne
add
mov
pop
dec
xchg
std
pop
loopne
mov
add
jno
add
xor
and
and
push
mov
les
loope
mov
mov
leave
out
loopne
fdivs
sbb
arpl
and
ss
and
add
mov
sub
rorl
mov
les
mov
pop
push
movsb
xchg
rcll
xchg
xchg
sarl
pop
sahf
pop
push
dec
xor
fcmovu
fildl
jge
xchg
or
stc
jecxz
mov
mov
arpl
negb
fcmovnu
sbb
mov
mov
arpl
mov
push
or
adc
insb
insb
and
les
pop
push
ficoms
sub
clc
out
jle
jmp
xchg
outsb
mov
mov
sub
in
inc
sub
or
mov
push
xor
leave
aad
pop
push
movsb
xchg
adc
outsb
and
pop
sbb
ret
sbb
add
cli
and
xchg
lret
mov
or
and
imul
jno
sub
mov
jbe
xchg
add
or
repnz
lret
sbb
fidivs
ljmp
cmp
push
xchg
and
mov
sbb
nop
mov
aaa
out
repnz
pop
cld
lods
clc
adc
fcoms
adc
pop
and
movsb
xchg
in
xor
mov
cltd
stc
cltd
inc
cmpsl
mov
outsb
or
adc
mov
mov
pop
je
pushf
adc
in
je
pop
lods
cli
xchg
jb
mov
cld
pop
rorb
fildl
xor
mov
jmp
or
movsl
pushf
test
adc
mov
hlt
fstps
int3
lahf
outsl
dec
or
adc
jp
pop
mov
dec
mov
mov
cmp
push
jle
cmp
xchg
das
ss
cmpsl
mov
outsl
mov
mov
push
pop
cmc
cltd
sub
sbb
outsb
add
arpl
sbb
mov
lea
jb
adc
adc
sti
and
mov
pop
mov
and
pop
in
sub
fimuls
shrl
inc
mov
add
xor
adc
jmp
test
lods
and
or
inc
fimuls
mov
loope
jge
push
cld
cmp
iret
movsl
push
xchg
pop
pop
pop
cmp
cmp
or
adc
push
out
lcall
sub
dec
jnp
xchg
jo
lahf
aaa
inc
mov
fistpl
js
cmp
jbe
scas
lcall
lret
xchg
loop
mov
scas
sbb
jno
pop
push
fdivs
outsl
sbb
inc
in
mov
pop
rorl
subb
xchg
jg
jle
and
icebp
clc
xchg
sbb
gs
into
jp
push
addb
cmp
movsb
xor
scas
ja
js
jl
cmp
add
movsb
arpl
cmpsb
testb
pop
std
dec
pop
push
stos
sets
nop
aad
rcr
sub
scas
add
dec
ret
shrl
imul
pop
ljmp
xchg
inc
cmp
std
add
cmp
mov
jno
les
jmp
test
adc
dec
mov
notl
pusha
add
leave
sub
sti
call
pop
jle
dec
aas
mov
rorl
mov
pop
sbb
test
sub
mov
fldt
mov
arpl
scas
mov
outsl
in
xchg
inc
movsl
mov
add
pop
xchg
fisubl
jp
lods
mov
xor
vaddss
pop
add
cmp
add
mov
sbb
xchg
xor
mov
xchg
int3
rcrb
inc
jl
int3
int3
lods
scas
movsl
ja
and
fcompl
pushf
icebp
or
ret
es
adc
mov
movsb
dec
std
outsl
jo
sub
sbb
pop
rorl
cmp
loop
push
mov
add
sbb
test
sub
add
sub
out
sti
sbb
mov
inc
out
je
scas
mov
mov
cmp
stos
aaa
push
and
psubsw
jbe
cld
cmc
push
test
je
insb
aaa
push
lcall
in
scas
rcrl
loopne
mov
cmp
jp
repz
outsb
orb
shrl
push
ret
fidivs
std
and
or
or
dec
sbb
pushf
ja
into
xchg
dec
add
and
ds
and
stc
aas
sub
rcll
push
sbb
xchg
jne
cld
imulb
sbb
out
data16
adc
ret
fwait
jb
arpl
lret
sti
sbb
pusha
add
xchg
inc
rorb
adc
mov
adc
movsb
inc
xor
mov
cmp
stos
jb
mov
pop
outsb
lret
xchg
xor
hlt
jmp
sar
sarb
mov
leave
inc
imul
mov
out
daa
inc
imul
icebp
sbb
sbb
sub
mov
jns
outsb
pushf
fnstsw
mov
enter
push
test
icebp
mov
push
xchg
pop
iret
call
in
jmp
inc
pop
pop
or
icebp
push
inc
xlat
lahf
aaa
and
addps
out
and
and
sub
data16
divl
mov
jo
popf
push
inc
push
jp
cmp
aas
inc
cli
xor
shlb
mov
sbb
lea
daa
popa
inc
mov
ljmp
or
and
mov
push
cld
jge
out
outsb
or
aad
rcll
shr
add
mov
std
stos
pop
popf
scas
jo
and
fcmove
push
mov
sbb
ljmp
jecxz
or
incb
lods
mov
xlat
std
rclb
mov
out
xchg
jns
rol
inc
adc
jge
and
cmp
jg
mov
test
stos
push
clts
mov
push
sbbb
stos
fnsave
jmp
mov
pop
rcr
jb
pusha
dec
inc
sbb
ror
sbb
cld
lock
or
hlt
mov
bound
fmull
aaa
and
push
jle
std
mov
mov
jb
sbb
decb
dec
fisubrl
mov
fldl
jo
js
jno
out
lea
repnz
push
mov
lret
fbld
das
mov
inc
xchg
imul
out
dec
dec
dec
push
xchg
insl
dec
xchg
push
xchg
lds
mov
xchg
scas
and
push
and
movsb
pop
fst
pop
jmp
out
xchg
daa
sahf
aad
dec
test
xor
or
pushf
test
fisttpll
dec
push
xor
mov
test
testl
dec
aam
test
insl
int
cmpb
enter
popf
pusha
xchg
sbbb
cmc
jecxz
pop
jne
mov
or
or
mov
add
hlt
int
sbb
xchg
xor
pop
scas
push
aad
dec
mov
xchg
arpl
stos
arpl
dec
push
pop
inc
lds
jmp
cmp
int
ds
push
arpl
fwait
or
dec
leave
jmp
mov
fadds
jb
mov
lods
push
mov
sbb
ficoml
std
icebp
scas
lea
aam
cmp
div
call
xchg
cs
add
inc
or
inc
or
inc
mov
fisttpl
testl
xlat
xor
das
cmp
loop
out
sar
xor
imul
mov
mov
pusha
mov
xchg
jae
pop
daa
jne
je
outsl
fsubrs
push
stc
jle
mov
nop
pop
lcall
repz
cmp
mov
fwait
sbb
rol
test
loop
lret
jl
fidivs
inc
mov
jecxz
adc
xlat
push
cwtl
inc
add
loop
and
enter
mov
pop
iret
or
cld
cmp
aas
cli
sar
mov
add
pop
inc
jnp
and
js
sbbb
cmp
mov
shlb
call
mov
adc
imul
inc
mov
cmp
sub
xchg
push
fistps
shlb
lods
cli
push
loopne
ja
jecxz
mov
xchg
shrb
cmc
aam
lods
jge
icebp
fnstcw
push
adc
enter
push
shlb
cmpsb
je
decl
mov
out
addr16
xchg
add
push
lcall
mov
sbb
push
add
xchg
cmpsb
repz
jl
or
fidivl
sbbl
cs
orb
adc
sub
adc
js
stos
mov
push
pop
cwtl
add
or
xchg
mov
testb
or
xchg
inc
in
adc
pop
scas
xchg
aam
push
test
loop
sbb
add
test
fdivs
jle
xchg
lock
sbb
inc
mov
int3
outsl
cmc
leave
pop
in
lret
nop
xchg
jg
jl
lret
lock
mov
dec
xor
les
push
xchg
cwtl
fmull
add
jns
or
mov
push
mov
js
add
test
bound
push
mov
sbb
ljmp
inc
std
imul
add
xor
movsb
in
add
dec
daa
pop
jbe
pop
test
fcmovu
or
sarb
jnp
xor
cwtl
mov
pmullw
aad
inc
cmpsl
inc
push
loop
cmp
or
repz
ds
cmp
xchg
addr16
jl
jno
cmpsb
push
test
jecxz
es
out
add
mov
pushf
push
mov
lahf
mov
pop
scas
in
hlt
into
pop
mov
movl
xchg
in
outsl
mov
jo
fwait
in
or
cwtl
inc
push
loop
nop
mov
cmpl
adc
sahf
mov
xchg
out
sbbb
push
sub
add
push
lods
pop
repnz
outsb
cmp
movsb
jg
jp
stc
dec
xchg
out
cmpsb
mov
movsl
stos
stos
shlb
inc
gs
sahf
js
push
stos
in
cmp
lea
push
dec
test
cmp
xor
cmpsl
push
adc
lods
mov
jbe
test
andl
mov
lret
xchg
popf
sub
mov
jbe
shrb
arpl
pop
push
out
inc
xor
stos
insl
add
lahf
fs
xchg
addr16
mov
scas
mov
adc
cli
fisubl
je
mov
inc
ja
lock
mov
mov
rorb
cmp
das
les
xor
mov
stc
push
pop
xchg
sbb
aas
mov
xchg
lea
pop
or
imul
jecxz
mov
dec
add
cld
jne
stos
pop
xchg
std
icebp
sti
lret
lahf
and
jmp
add
jl
push
aas
outsl
in
fistl
outsb
lods
jb
int
aam
xor
push
cs
mov
mov
cmp
aas
popaw
and
mov
push
bound
push
or
stos
bswap
hlt
aaa
mov
imul
sub
add
movsl
jmp
jle
test
adc
xchg
fmul
mov
cmp
jg
andl
in
imul
stos
loop
cmc
jo
mov
orb
mov
jge
arpl
jecxz
cmp
addr16
clc
pop
out
xchg
push
mov
xlat
cmp
stc
mov
adc
xchg
outsb
mov
mov
mov
lods
test
in
add
lock
lret
sub
lahf
xchg
mov
notb
mov
sti
add
sub
ljmp
mov
push
xchg
popf
and
mov
pop
ret
int3
imul
lcall
aad
out
insb
xchg
mov
add
sub
mov
mov
les
xchg
cmpsb
les
test
sbb
inc
mov
lods
inc
inc
push
ret
mov
push
mov
mov
sbb
cmovnp
or
pop
or
xchg
jmp
mov
lahf
popa
mov
in
push
movsb
leave
imul
in
mov
popa
in
mov
mov
jl
dec
hlt
and
xchg
sahf
xor
jns
or
sub
push
mov
lds
xor
loopne
in
push
out
test
in
push
icebp
dec
add
mov
movsl
or
sbb
add
sub
repnz
sbb
or
xchg
add
dec
cld
sub
in
scas
out
dec
dec
popa
push
ret
lea
push
rcrb
pop
mov
jmp
pop
or
cmp
lock
in
push
dec
mov
out
int
dec
repnz
iret
repnz
adc
sbb
mov
inc
std
jo
addr16
repnz
dec
js
push
ds
xor
dec
xchg
jne
push
stos
sub
cmc
insb
dec
cmpsb
jo
push
stos
fwait
hlt
shl
std
cltd
and
ret
negb
adc
rorl
into
sub
scas
movsb
in
push
fsubl
scas
add
cmp
mov
movsb
mov
xor
orps
jge
shr
scas
mov
insl
xchg
push
mov
cmovae
push
adc
inc
inc
jg
lock
fucomip
jns
sahf
iret
fucomi
or
add
fidivrs
std
adc
jb
fwait
cmpsl
es
xlat
popf
mov
jmp
stos
adc
push
mov
add
aad
xchg
out
fldl
cli
or
test
push
xchg
lods
or
mov
sub
js
push
rcrb
sub
mov
sub
addl
aas
push
inc
lods
out
sbb
sub
cmp
fistl
inc
hlt
or
push
sbb
mov
ret
fcmovu
lret
and
lahf
int3
mov
add
mov
xchg
roll
ja
rcl
cmp
fdecstp
push
pushl
jmp
add
cmc
daa
sbb
shll
dec
mov
hlt
insl
and
fisttps
push
mov
xchg
add
pop
insl
adcb
mov
mov
mov
lahf
add
jg
dec
mov
mov
jecxz
mov
jp
dec
or
fistpll
dec
arpl
fmulp
cmp
cmp
imul
pop
mov
aam
push
dec
mov
sub
mov
jae
push
cmc
sbbl
sbb
mov
sub
lods
loopne
mov
sub
into
hlt
jl
xor
xchg
fwait
pop
dec
pop
inc
je
stc
stos
ret
dec
hlt
movsl
sub
adc
xor
stc
cmp
inc
or
fidivrl
mov
lcall
adc
jmp
sbb
in
sti
cmp
jge
adc
pop
push
mov
xor
jecxz
mov
int3
mov
push
xor
jmp
test
rorb
out
cmp
inc
in
fldcw
test
iret
mov
sti
push
test
cli
inc
or
in
int3
jns
mov
sbb
mov
les
lds
sub
pop
sbb
dec
stos
or
push
add
add
fildll
push
pop
xlat
test
and
cmp
cmp
mov
mov
jns
loope
xorl
pop
sub
ret
in
pop
pop
movsb
cmp
nop
jo
xor
into
aad
aad
fisubl
mov
add
jle
lods
lcall
push
xchg
push
mov
lcall
jb
pop
lea
or
cs
lret
xchg
sub
add
out
aaa
enter
xchg
mov
dec
std
pop
and
jmp
lahf
ret
mov
add
loopne
fistpl
cwtl
and
neg
popw
test
movsb
dec
lea
pop
fdivrl
push
jg
outsb
push
add
xor
mov
je
roll
ss
xor
cmp
mov
in
icebp
jl
dec
pop
push
out
int
jmp
mov
call
lea
xchg
mov
lcall
cmp
inc
sbb
or
or
mov
mov
mov
xor
xchg
out
ja
jns
jp
cmpsl
cmp
scas
ficomps
test
outsl
dec
xor
addr16
push
loope
push
mov
inc
mov
int3
sbb
push
mov
stc
neg
mov
inc
test
aaa
rcl
cmc
xchg
pop
jnp
outsl
pop
out
sub
pop
and
dec
mov
fcomi
lods
test
cmp
inc
adc
xchg
aas
popa
mov
cmp
enter
in
sbb
out
jb
and
xor
pop
push
lods
pop
or
jae
daa
xchg
push
stos
ret
or
in
ds
stos
pop
mov
adc
aas
xlat
shrb
cli
out
movsb
xlat
xchg
lahf
xor
mov
adc
add
fwait
sub
lea
dec
outsb
mov
stos
pop
in
addr16
cmp
loop
jle
push
js
add
push
ja
and
or
sub
mov
dec
addl
leave
mov
push
pop
dec
and
inc
cmpb
pop
pop
stc
mov
int
insl
icebp
call
in
push
sub
xchg
xor
icebp
xchg
or
mov
lods
dec
or
mov
and
dec
loopne
js
push
pop
mov
fbstp
or
or
inc
and
test
iret
mov
adc
mov
shrb
arpl
mov
pop
ret
sbb
push
pop
addr16
sbb
scas
fisubrs
mov
inc
fisttps
push
arpl
cs
leave
dec
push
jb
sub
int
sub
xor
dec
pop
xchg
pop
sti
lcall
cwtl
test
jb
cmp
add
inc
jle
pop
mov
in
jb
dec
adc
adc
jae
lea
out
jns
loopne
xchg
mov
add
movsb
or
mov
cmp
push
cmc
dec
jle
cmp
sbb
movsl
aad
inc
adc
xchg
add
mov
jp
aam
insb
and
jge
fsubrl
outsb
lahf
mov
xor
iret
sbb
enter
lock
ljmp
lahf
xchg
sar
dec
int
fimuls
cli
lcall
push
pop
adc
lds
sti
dec
xchg
ficoml
inc
inc
aad
sub
mov
push
ja
add
adc
pop
aaa
push
xchg
repz
or
jl
sub
jecxz
pop
out
add
mov
dec
popa
jp
mov
xchg
pop
aam
pop
mull
pop
mov
insb
cmpsb
push
xchg
mov
rorl
sub
sbb
fwait
fwait
mov
push
cld
pop
out
ret
lock
push
mov
ss
and
repnz
and
add
mov
dec
mov
cmpb
jo
fwait
xchg
stos
adc
pusha
and
not
inc
lea
shrb
lcall
push
sbb
insl
sar
and
sbb
sbb
mov
in
dec
popa
cmp
popa
out
fisubrs
nop
xchg
sub
sbb
out
clc
mov
scas
mov
and
icebp
mov
es
scas
xchg
and
mov
ja
add
pop
push
pop
dec
iret
lcall
cmc
gs
dec
sub
stc
adc
fisubrs
cltd
or
pavgb
leave
mov
lea
cmpsb
es
push
js
mov
nop
jge
inc
insb
cmp
movsb
jne
inc
gs
rorl
inc
scas
adc
and
jmp
inc
call
fnstenv
lret
pusha
jp
shrb
jb
mov
outsb
push
jnp
mov
xor
cmp
or
aam
lret
pop
dec
fistl
sbb
mov
xchg
aad
jp
ja
mov
enter
sahf
sub
lea
je
cli
push
lods
adc
lods
popf
pop
push
test
xchg
sbb
imul
stos
xchg
cmp
fistpll
stos
aad
lcall
aaa
or
ret
jno
out
repz
test
push
repz
aaa
inc
rorb
sub
repnz
fwait
xor
repnz
lods
pop
fists
cmp
push
pop
cltd
das
arpl
and
in
imul
push
dec
mov
cmp
add
sbb
push
adc
pop
pop
mov
rcrl
jae
lds
adc
cmp
fldenv
dec
mov
push
stos
sbb
sbb
in
push
pop
cmp
sarl
cs
out
or
push
pop
pushf
mov
and
mov
fs
cmp
jae
add
or
out
lods
push
lahf
fldt
push
scas
and
jnp
data16
xchg
out
jp
loop
push
add
cmc
out
outsb
test
not
lods
js
dec
lahf
arpl
popf
pop
sbb
jmp
push
xchg
xchg
ret
sub
sbb
mov
or
insb
cmp
lods
sahf
out
jae
icebp
call
dec
ds
inc
jp
es
add
popa
cmp
loop
movsb
movsb
push
aad
ret
inc
pusha
xchg
add
adc
je
push
nop
rclb
outsl
sub
bound
fstl
xor
fnstcw
ljmp
push
dec
push
cmp
sbb
sub
mull
push
adc
repnz
sbb
add
sbb
jnp
loopne
sbb
aaa
dec
fiaddl
pop
call
lahf
lret
add
mov
and
inc
or
adc
xorb
notb
pop
jnp
nop
pop
pop
pop
test
ret
push
mov
push
cwtl
mov
add
xor
out
and
outsb
pop
mov
sub
jecxz
or
and
xchg
xchg
out
sub
test
xor
out
ss
mov
mov
xchg
lret
aam
mov
bound
inc
mov
orl
movsl
jo
imul
outsb
push
cmc
loop
jo
or
ja
fmuls
sbb
adc
pop
lds
adc
pop
arpl
mov
fldt
pop
scas
ret
inc
fwait
jl
lea
stos
mov
jg
fistpll
cltd
aam
xchg
scas
cmpsb
jbe
lahf
or
stos
lds
add
or
push
fcmovne
cmp
cld
subb
cwtl
mov
jmp
into
rcl
lahf
jnp
xor
mov
fld1
cltd
xchg
lcall
mov
adc
fsts
pushf
aam
fidivrl
loopne
aad
xchg
clc
xor
push
push
loope
inc
ljmp
int3
and
daa
enter
in
lds
and
mov
dec
sub
dec
notl
inc
mov
sub
leave
push
std
ret
lret
sub
fisttpl
into
es
xor
xor
inc
pop
pop
test
xchg
mov
js
xchg
or
xchg
inc
sub
push
cmp
out
cmp
cmc
jns
jbe
js
icebp
or
sub
xchg
pop
xor
cmpsb
add
aad
pushf
sbb
stc
mov
aad
sbb
add
cmpl
jno
data16
push
or
shrl
jg
cmc
pop
pop
gs
adc
inc
mov
scas
xchg
or
lea
fmull
mov
jns
dec
aam
mov
adc
jl
test
xlat
jp
xchg
dec
mov
aaa
xor
xchg
insl
pop
sub
test
push
repz
jge
dec
jl
shlb
aad
pusha
mov
push
mov
xchg
or
cmc
scas
and
pop
aas
mov
fldt
dec
inc
aaa
xor
sub
xor
stos
ljmp
fildl
imul
in
out
xchg
push
dec
loopne
pop
test
movsl
mov
les
inc
mov
xchg
push
pop
sarb
aas
in
cmc
inc
jmp
inc
pop
in
jbe
loop
lahf
mov
ss
ja
add
es
push
dec
and
adc
pop
mov
lds
fsubs
mov
ja
imul
xchg
push
pop
or
movsl
sbb
jno
cmp
fxam
shrl
das
jae
cmp
pop
push
and
jno
cs
inc
mov
xor
fisttpll
popf
sub
lds
push
outsl
stc
addr16
sbb
mov
cwtl
rol
mov
jl
xor
int3
jb,pt
jp
pop
or
idivb
rcrl
cmp
xor
adcb
mov
or
pop
adc
pop
mov
addr16
fadds
call
mov
dec
xor
fcoml
pop
mov
inc
sti
push
jo
sub
testl
and
mov
sub
dec
popa
aaa
mov
jp
xchg
lret
push
jbe
icebp
pop
jo
test
imul
clc
mov
xchg
and
jecxz
add
cmp
dec
pop
inc
movlps
push
jp
sub
pop
and
and
lods
movsb
xchg
sbb
in
insl
lea
mov
cmp
mov
add
mov
pop
xor
lcall
mov
add
mov
stos
aas
pop
ja
int
outsb
icebp
xchg
push
mov
dec
test
push
cmp
pop
push
push
or
negl
adcl
daa
dec
dec
not
inc
inc
lcall
jl
adc
pop
inc
push
cmp
xchg
cltd
push
lahf
mov
jae
inc
lods
adc
and
sub
lea
test
or
pushf
push
and
sub
xchg
outsb
cmpsb
mov
sbb
adc
sub
xor
mov
cmp
push
push
mov
ret
repz
out
loope
syscall
push
cmp
sbb
popf
scas
mov
popl
ljmp
mov
cmpsb
xchg
shlb
cmp
or
out
ljmp
movsb
in
cmp
sbb
xor
push
in
mov
insb
xor
push
cld
pop
jns
fcmovb
int
and
sub
movsl
fdiv
push
repnz
pop
push
sti
ja
insl
mov
inc
mov
jno
push
add
stos
sbb
xor
bnd
pop
jmp
loop
mov
dec
in
mov
fldt
xchg
cmp
mov
dec
fmul
push
sbb
fwait
or
imul
imul
cld
dec
push
xor
pop
xchg
adc
add
jbe
lds
loop
jbe
pop
mov
dec
leave
fistpl
xor
inc
outsl
in
dec
out
in
pop
and
jne
repnz
or
fstpl
mov
or
mov
jle
rol
shl
cmc
or
sub
xchg
cli
add
xor
shrb
lcallw
pop
popf
pop
andl
loope
sbb
arpl
xor
mov
push
push
cmpsl
xchg
xorl
pop
xchg
mov
jo
add
xchg
cmp
jne
in
cwtl
cmp
hlt
sbb
stos
mov
mov
inc
sti
je
fnstcw
adc
ret
jge
hlt
cmp
aaa
xor
iret
mov
inc
jmp
dec
xchg
jae
xor
lock
jb
jg
push
and
sahf
mov
mov
mov
dec
mov
jo
push
mov
xchg
dec
rcll
cmp
aad
out
push
inc
sbb
xor
and
ret
and
sti
mov
xchg
int3
pop
push
stc
scas
dec
dec
adc
jge
outsb
mov
sub
in
into
aad
xor
push
lret
inc
fsub
rclb
lret
imul
sbb
sub
push
cmp
jno
lcall
fcomip
negb
cmpsl
fimuls
insb
out
lret
mov
inc
shlb
rol
lcall
and
adc
in
sub
rolb
xchg
aaa
andl
inc
push
push
push
fdivrl
fisubrs
push
add
test
xchg
pop
in
push
or
jb
andb
sbb
or
xor
sub
xlat
jle
cmp
adc
stos
sbb
in
sub
faddp
int3
cmp
loopne
fidivrs
mov
add
and
jnp
push
lahf
mov
pop
mov
stos
pop
lds
pusha
fdivrp
mov
loop
add
stc
inc
repnz
movsl
insl
add
fiaddl
std
push
xchg
shrl
je
pop
mov
popf
cmpsb
sbb
popa
push
rol
fildll
into
add
inc
roll
dec
cmp
push
pop
inc
xlat
pop
ss
sub
inc
je
and
cld
loopne
adc
sbb
xor
jae
aas
dec
jp
mov
pop
add
test
out
dec
mov
lea
mov
lock
inc
loop
cmp
popf
les
insl
push
dec
add
into
scas
jecxz
insl
je
mov
lods
daa
sar
mov
adc
xchg
stos
aaa
lods
stos
fwait
cwtl
les
xchg
test
pop
mov
xor
call
into
and
insl
cmp
ss
push
lods
push
loop
outsl
rcll
movsl
into
inc
jns
fsubrl
mov
icebp
jo
or
mov
std
out
sub
or
add
aas
nop
incb
jecxz
jns
std
enter
jle
fwait
mov
rclb
shrl
xor
outsb
adcl
cs
aad
std
lret
sahf
repnz
iret
mov
xchg
nop
jnp
or
stos
jg
mov
idiv
mov
mov
push
sub
push
push
xor
mov
int3
call
shll
jp
sbb
into
mov
or
daa
movsb
call
ja
sub
aas
push
mov
and
outsb
sub
jae
mov
or
test
xchg
and
mov
je
pop
fildl
push
mov
dec
daa
ss
and
and
fimull
and
std
dec
mov
jb
sbb
call
push
popa
mov
imul
mov
data16
xchg
into
lock
imul
push
out
cmp
cltd
jb
jb
xlat
mul
das
xor
pop
xchg
mov
and
mov
fdivl
xchg
and
xchg
rol
sahf
push
into
add
inc
mov
dec
out
xor
or
mov
mov
repnz
add
es
ljmp
movsb
xor
jecxz
stos
mov
mov
lods
fsubrs
scas
into
fistpll
aas
or
stos
outsb
sbb
es
aad
loopne
aad
push
pop
lods
mov
adc
mov
xor
push
xchg
cmpsb
ljmp
add
ljmp
add
adc
pop
pop
repz
xchg
mov
push
scas
adc
movsl
je
bound
jne
xchg
cwtl
insb
lret
bound
das
pop
ljmp
test
or
mov
mov
adc
std
out
inc
mov
sbb
push
loopne
ret
pushf
pop
lret
ds
mov
in
cli
rclb
ret
cli
add
je
mov
bound
out
addr16
sbb
pop
or
sbb
mov
jo
push
inc
in
in
or
adc
xchg
cmpl
je
mov
shll
rclb
test
ljmp
je
cld
fmull
cmp
outsl
cwtl
data16
lret
sub
adc
dec
push
cli
in
mov
stos
jecxz
icebp
test
mov
inc
lret
mov
adc
jne
mov
lret
ljmp
jnp
imul
and
fmull
mov
rcrl
dec
out
arpl
cmp
jmp
scas
push
mov
cmp
xchg
jle
sti
or
fwait
lock
stos
or
fidivrs
stos
push
cmp
dec
jno
outsl
push
add
lds
dec
pop
jmp
cmp
xor
push
rclb
xchg
call
movsb
idivl
pop
in
int3
fs
cmp
pop
xchg
jne
cld
mov
adc
mov
stos
jl
scas
hlt
push
xlat
out
inc
mov
mov
neg
out
mov
mov
cli
sub
test
lea
cmp
loope
add
jl
push
loope
xchg
xchg
es
jmp
push
dec
pop
cld
incb
arpl
pop
adc
lods
xor
push
test
insb
in
cld
add
jmp
xorb
mov
jg
mov
mov
mov
jno
push
and
out
gs
data16
inc
repz
fmuls
inc
push
mov
out
movsl
cld
sbb
hlt
jns
ss
mov
xor
bound
jmp
ljmp
dec
push
cmp
int
pop
xor
ror
popa
adc
mov
iret
cmpsb
cmc
mov
cld
outsl
popf
enter
aam
dec
and
movsb
das
xor
inc
fdivrs
or
mov
push
sbb
cmpsb
js
mov
daa
and
jl
push
mov
stos
sbb
fnstenv
sbb
flds
jl
ss
mov
push
testb
sbb
iret
sbb
rorb
fstps
fcomps
push
xchg
sbb
aad
inc
jo
pushf
sub
data16
pop
daa
xchg
je
dec
movsl
inc
xchg
dec
mov
das
jae
pop
fidivs
push
inc
adc
pop
test
xlat
fcoml
push
cmp
and
or
push
mov
push
in
bound
pop
add
mov
xchg
in
mov
fbld
ds
in
enter
loope
xor
xchg
in
mov
test
and
pop
int
cmpsb
arpl
enter
je
subl
cmpsb
or
lret
adc
add
stos
xor
xlat
filds
sbb
mov
rcrb
das
sub
sub
enter
pop
and
cmp
jl
sbb
and
testl
ljmp
xchg
mov
xchg
idivl
outsb
sti
xchg
ss
xchg
push
scas
sub
sub
scas
pop
sbb
pop
dec
cmp
sbb
shrl
outsb
pop
mov
arpl
addr16
lea
xchg
push
mov
cmp
xchg
loope
mov
call
mov
stos
sub
pop
mov
divl
jmp
jb
dec
movl
mov
inc
ja
lods
lods
dec
cmp
mov
outsb
sub
adcl
xchg
das
iret
adc
jl
lahf
test
imul
inc
fsubrl
dec
int3
enter
pop
lds
add
dec
mov
stos
in
sub
stos
ds
jl
imul
imul
ror
mov
cltd
lret
dec
pop
and
lock
adc
sub
lds
push
stos
mov
popa
fimull
cltd
jne
faddp
loope
test
pop
jg
xor
mov
adc
sahf
push
sbb
xchg
jne
mov
nop
add
mov
push
adc
mov
lea
mov
jg
popa
mov
jp
mov
mov
pushf
mov
js
cld
push
xchg
mov
inc
mov
pop
or
push
jp
test
mov
stos
push
pop
and
sbb
pushf
out
ret
stos
mov
inc
dec
mov
mov
testb
ljmp
jnp
jl
jnp
xchg
pop
and
in
and
inc
les
mov
and
dec
sahf
xlat
push
in
sub
or
cs
pushf
push
or
inc
mov
ret
jae
pop
out
mov
nop
cli
in
mov
mov
push
ds
add
loopne
loop
out
jmp
arpl
jno
cmp
js
mov
push
push
xchg
or
pop
inc
cmp
jecxz
inc
inc
push
xor
stos
add
or
adc
cmpsb
sbb
out
inc
sub
popf
adc
loopne
push
xchg
fmulp
xchg
stos
pop
scas
mov
sbb
outsb
push
or
mov
or
lretw
mov
add
pusha
pop
in
lea
lods
fildll
add
xor
adc
insl
mov
addr16
out
setp
cwtl
push
lret
xchg
sub
mov
pop
add
outsl
add
imul
mov
cli
outsl
sub
mov
sub
lahf
nop
filds
push
pop
jb
push
push
pop
jo
andl
les
push
insb
mov
mov
out
xchg
in
inc
dec
push
and
call
hlt
jbe
lahf
lods
jbe
inc
mov
dec
mov
mov
xor
mov
jg
sbb
sub
mov
inc
pop
pushf
cmp
xlat
popa
cltd
push
scas
insl
xchg
xlat
inc
or
add
aam
xchg
arpl
push
xchg
and
test
mov
sub
adcl
xchg
out
in
jbe
imul
xchg
arpl
movsb
iret
push
dec
xchg
into
icebp
hlt
mov
push
cmp
jge
imul
das
mov
testl
test
push
xchg
es
aam
mov
sub
or
xchg
xlat
sbb
gs
and
adc
push
lcall
iret
adc
test
sbb
ret
loop
add
repz
or
sbb
bound
mov
lock
loopne
jecxz
test
iret
and
pop
jg
dec
test
in
push
xor
ljmp
sahf
sbb
in
addr16
cmp
jae
loopne
call
lock
cmpsl
aaa
xchg
into
sti
inc
mov
mov
adc
js
adc
gs
lea
dec
stos
arpl
popa
jb
arpl
dec
stos
int3
cmp
cmp
xchg
lods
cld
push
mov
xor
bound
inc
addr16
test
push
xchg
test
add
int3
jbe
inc
fmul
push
insb
stos
sub
pop
xchg
pop
xor
xor
int3
incb
lea
cmp
mov
pop
scas
clc
leave
int3
adc
xor
inc
xlat
cs
jp
lret
pop
mov
jno
cmc
popf
gs
inc
dec
jne
pop
aas
cwtl
jl
ljmp
imul
sub
push
or
push
mov
inc
fiaddl
or
ds
jno
add
jecxz
neg
jmp
sub
out
and
das
jo
mov
enter
hlt
mov
or
xchg
add
daa
xor
sbb
cltd
sbbb
mov
xor
mov
pop
in
pop
in
scas
loop
add
ljmp
lret
je
in
add
xchg
dec
sti
sub
pusha
rorb
cmp
pop
pop
aam
ret
int
jo
mov
lock
ficoms
push
push
sub
shr
test
mov
pop
fisubrl
sahf
mov
mov
les
shll
mov
xor
daa
rcl
rcrl
out
xchg
mov
popf
in
fsubr
stos
pop
mov
aas
jae
aam
lahf
push
or
jmp
lret
or
mov
xor
cmpsb
out
jnp
cli
outsb
divl
jp
test
cmp
mov
int
jmp
inc
push
pop
xchg
jmp
scas
pop
jb
rclb
mov
mov
mov
arpl
ja
nop
sub
dec
inc
insl
inc
call
fistpl
xchg
and
sub
lds
into
adc
addl
in
cmp
pop
add
orb
xchg
mov
andl
mov
mov
cmc
pop
cmp
pop
sbb
pop
mov
push
aaa
inc
pop
mov
test
xchg
or
fwait
or
add
inc
and
pop
jnp
in
push
mov
mov
out
jns
sbb
sbb
add
hlt
jmp
adc
xchg
sbb
cltd
scas
ficoms
fadds
ret
xchg
aas
xor
sub
aam
addr16
jns
add
mov
mov
inc
push
cmp
stos
pop
out
dec
test
and
mov
test
lret
scas
fldcw
out
cmp
inc
dec
shl
mov
hlt
mov
adc
inc
stos
sub
jg
stc
das
jno
jle
jae
int
mov
inc
ret
ss
test
inc
pop
push
lahf
push
pop
cmp
fstl
add
and
add
popf
dec
loopne
orb
jp
leave
xlat
push
jmp
mov
dec
or
or
mov
dec
subb
xor
in
mov
lret
jmp
mov
mov
mov
cltd
icebp
imul
imul
loop
push
in
add
pop
shl
fists
jnp
je
cmp
das
repnz
push
sub
repz
jne
adc
push
scas
fdivr
mov
jae
push
mov
adc
sbb
pop
push
pusha
xor
cmp
rolb
bound
xchg
sbb
fnstenv
jp
dec
lds
jo
pusha
or
movsb
or
fs
insb
imulb
fstpl
xor
test
ljmp
cmp
jecxz
mov
mov
dec
mov
adc
rcrb
fcmovnu
xor
adc
adc
pop
sbb
pushf
pop
pop
xchg
mov
pop
int
mov
xor
xor
cmp
stc
push
bound
or
jbe
cmc
bound
test
inc
push
and
fdivrs
dec
outsb
in
push
sbb
push
imul
into
cltd
jo
call
scas
mov
fdivrl
stos
push
cmp
adc
push
inc
lds
out
andl
fisubl
test
xlat
lods
sbb
and
pop
cmc
ret
lea
and
in
cmp
mov
push
daa
cmp
and
pop
mov
lea
gs
imul
dec
pop
fists
mov
fdivrs
push
insl
out
into
daa
dec
mov
push
aam
sti
mov
mov
bndldx
inc
push
in
stc
jp
repz
fiaddl
lea
sarl
inc
adc
pop
subb
adc
movl
xor
out
ss
pop
push
push
push
fstpl
or
pop
xchg
mov
ficomps
inc
cltd
stos
into
fdivrl
or
in
ret
sub
cmp
sahf
in
lock
adc
add
push
addr16
mov
jnp
mov
sti
dec
pushl
jle
mov
ret
nopl
out
mov
scas
mov
jmp
jno
sub
jg
inc
pop
daa
pop
mov
ja
sub
addr16
pop
fmuls
leave
xchg
out
ret
lret
shrl
jle
lret
pop
push
xchg
and
lds
clc
pusha
rcll
sub
xchg
roll
jge
xchg
inc
ficompl
lcall
cld
mov
into
jmp
leave
sti
mov
rep
dec
add
dec
dec
cld
pop
xor
or
adc
shrl
sub
sti
mov
pop
cmpsl
push
or
sub
enter
and
cld
adc
xor
sbb
inc
rorb
adc
cmp
inc
repnz
xlat
fcmovb
aaa
push
ss
or
rcrb
dec
out
lahf
sbb
loopne
push
mov
push
push
iret
test
push
popf
and
mov
mov
xchg
aaa
add
repz
jb
xor
out
dec
hlt
jns
jno
out
adc
shrb
mov
call
nop
out
inc
dec
sub
pop
aam
mov
mov
rcrl
push
lret
paddb
cmp
xlat
jns
sbb
add
mov
or
shll
and
fsubs
mov
jl
mov
inc
pop
jno
xchg
ret
mov
in
jge
pop
jg
testb
bound
fisubs
fnsave
fnstsw
mov
flds
mov
sbb
mov
adcl
mov
pop
fimull
mov
decl
xchg
mov
xchg
outsl
adc
ss
cmp
xor
jo
and
outsl
lods
cmp
call
dec
jns
out
test
inc
inc
push
xchg
lods
sbb
cmp
and
mov
in
sub
lahf
insb
lock
shll
fcomps
xor
sbb
ror
dec
xchg
mov
les
xor
sahf
stos
add
inc
add
and
ror
ljmp
pop
cmc
lock
or
ret
add
ja
add
mov
or
cld
jb
dec
in
les
cmpsl
cmp
test
lds
lea
loopne
xchg
lea
mov
jo
adc
fldl2t
roll
scas
out
sbb
aas
xchg
mov
push
lods
sbb
push
out
mov
aaa
mov
sub
and
imul
mov
pop
mov
adc
pushf
add
popa
cmp
push
arpl
fbstp
mov
lods
inc
ret
daa
and
mov
std
fdivs
cmp
cwtl
sub
pop
sbb
adc
sub
lahf
cmp
mov
add
add
lock
mov
cltd
fstpt
fucomi
imul
xor
xchg
mov
inc
cltd
pop
mov
xchg
cmc
dec
je
arpl
sub
shl
xor
es
sbb
sbb
iret
mov
lcall
sahf
orl
xchg
pop
mov
and
add
mov
in
cmp
mov
sbb
push
dec
mov
js
pushf
bnd
jecxz
daa
and
xchg
adc
addr16
fstps
xchg
jg
ja
xlat
outsl
jecxz
jb
test
jne
mov
mov
mov
in
push
sub
push
jge
jg
in
dec
jle
adc
mov
leave
pop
mov
fdivl
jmp
add
popa
xor
aad
mov
sti
daa
adc
cld
scas
repnz
jo
inc
cmpsl
sub
or
xorb
pop
mov
push
rcll
in
add
pop
out
add
pop
test
or
loope
popa
xchg
dec
stc
sbb
or
adc
xor
inc
push
jmp
push
inc
mov
cwtl
shlb
mov
mov
cmp
mov
jge
iret
and
in
jo
mov
or
jnp
pop
xor
mov
repz
pop
jno
dec
push
sbb
jg
pop
inc
inc
adc
cmp
in
jno
stos
inc
stc
rcrl
jns
dec
pop
mov
fiadds
rclb
mov
fadds
je
push
xlat
dec
mov
mov
jb
enter
test
jge
repz
pop
pop
pop
nop
sub
cmp
xchg
inc
cmpsb
fs
inc
mov
pushf
pop
jg
inc
out
push
or
xchg
pusha
inc
pop
mov
push
es
iret
xchg
dec
xorl
sbb
fwait
sub
adc
test
push
and
or
jb
jb
ljmp
rcr
jno
adc
adc
push
cmpsl
in
dec
mov
mov
daa
mov
imul
jo
mov
test
fisttpll
fstp
cmp
pop
push
cmp
in
jb
ja
out
lock
repnz
fincstp
and
adc
sbb
pop
mov
mov
push
pusha
sub
ret
cwtl
pop
push
inc
ljmp
adc
sbb
hlt
das
and
es
aad
or
dec
add
and
cmp
jmp
nop
negb
push
cmp
test
dec
jle
xlat
adc
pop
lea
scas
ljmp
sar
push
pop
in
jae
xor
movb
mov
cld
mov
adc
cmp
imul
cmp
sub
stc
push
xchg
stc
dec
jae
mov
push
lds
fdivrl
sbb
mov
push
cmp
adc
into
mov
inc
int3
imul
xor
cmp
cs
xchg
xor
push
push
cli
test
cli
pop
dec
loop
inc
ljmp
xchg
ret
cmpsb
outsl
sub
mov
repz
mov
adc
lds
mov
mov
lods
pushf
fstpt
cmp
mov
js
int3
pop
imull
pop
adc
or
rcll
std
lret
aaa
add
shl
ret
fnstcw
adc
adc
lods
cwtl
dec
pop
or
dec
outsb
out
insb
pushf
jo
fs
xor
push
mov
mov
stos
push
pop
cltd
leave
push
aaa
inc
mov
cmc
xchg
fs
pop
adc
adc
sub
jae
loope
fmull
jg
popl
lret
ret
mov
inc
jmp
sbb
int
imul
mov
push
stc
cli
mov
mov
push
icebp
mov
in
mov
movsb
mov
sub
insb
std
std
in
jno
nop
nop
dec
sar
cs
dec
or
int3
xchg
and
test
sti
mov
je
andb
ljmp
sub
ss
in
push
loop
mov
push
add
in
loop
subb
dec
ljmp
sahf
ss
fdivs
xchg
or
or
and
int3
mov
lock
aas
je
in
imul
andl
push
ret
xchg
jb
pop
scas
fcmovu
roll
xor
sub
divb
xor
or
mov
divb
lret
pop
adc
movsl
lcall
fincstp
call
out
jp
aaa
cmpsl
rcrl
adc
negb
mov
shlb
popa
je
loopne
add
or
mov
ret
daa
push
xor
or
insb
enter
arpl
gs
outsb
fisubrl
dec
fists
push
mov
inc
push
mov
cmp
mov
and
pop
mov
ja
adc
cltd
or
rcrb
sbb
xor
gs
clc
adc
adc
push
mov
imul
jle
arpl
subb
ret
cs
jno
cld
mov
and
pop
pop
and
add
enter
gs
cmpsb
call
mov
and
inc
sub
sbb
fcompl
out
in
or
cmpsl
xlat
mov
cld
ljmp
xlat
and
leave
lahf
orl
test
inc
stc
orl
icebp
dec
je
mov
bound
dec
sbb
stos
aas
leave
aam
je
pop
pop
push
or
pop
dec
dec
cmpl
fwait
mov
fiaddl
lds
push
cs
insl
daa
pop
ljmp
jle
gs
inc
dec
add
mov
and
lret
pop
aas
enter
js
mov
inc
lods
sub
arpl
ss
das
setp
ja
into
sbb
or
push
push
imul
sub
mov
loope
sub
inc
pop
fwait
je
adc
mov
lret
insb
flds
mov
mov
sahf
out
stos
sub
dec
movb
jno
nop
sahf
shll
lcall
daa
lds
jle
push
gs
jecxz
cmp
and
shll
aas
hlt
jle
and
fcoms
fnstcw
std
in
push
nop
or
xchg
add
mov
add
push
mov
test
inc
movsl
and
push
push
jle
popf
pop
or
and
ret
mov
ja
dec
and
xchg
sbb
push
push
inc
popf
push
mov
out
jmp
mov
or
and
cmp
jae
cmp
stc
arpl
pop
xor
std
xchg
xchg
adc
pushf
adc
aam
fsubl
mov
xchg
pop
ja
push
add
popa
arpl
mov
rol
xchg
sub
push
icebp
out
jno
es
arpl
es
add
pop
stos
adc
ret
push
or
ja
testl
repz
or
mov
clc
mov
in
push
push
pop
mov
lret
or
loope
daa
mov
mov
sub
les
and
sub
jmp
popa
and
call
in
cmp
les
adc
add
adc
sub
xchg
into
cmp
sub
mov
add
or
test
repnz
les
push
pushf
jbe
aas
push
mov
mov
popa
aas
mov
lea
in
insl
jo
and
movsb
fidivl
mov
dec
and
xchg
cmpsb
sarb
sti
pop
in
xor
pop
xlat
add
test
outsb
dec
inc
pop
mov
jle
lds
repnz
js
xchg
jmp
outsl
bnd
fs
fs
and
sub
inc
mov
mov
cmp
pop
fadds
add
mov
sub
inc
adc
dec
adc
sbb
ja
inc
loop
lock
adc
xchg
mov
xlat
out
cwtl
fnstsw
cld
mov
cmp
mov
mov
or
lds
data16
inc
add
lock
inc
mov
mov
insl
lea
addr16
ret
and
lret
or
xor
out
inc
xchg
dec
mov
pop
cmp
pop
adc
push
xchg
cmpb
xor
int3
dec
add
mov
lds
ret
test
bound
subb
es
popa
sub
clc
adc
push
jnp
das
jl
pop
push
adc
rorb
pop
jg
lods
mov
cli
shlb
jge
xchg
sarb
scas
negb
sahf
mov
lea
xchg
mov
jne
mov
lahf
call
mov
shlb
push
pusha
xor
sarl
fistpl
cmp
mov
mov
add
test
in
call
pop
into
inc
lea
add
push
pushf
and
xchg
inc
sbb
dec
dec
in
sbb
mov
fnstenv
mov
pop
stos
mov
shrl
jae
mov
pop
popa
xorb
lcall
xor
out
flds
les
cmp
shrb
sub
xchg
jmp
pop
sub
sbb
fcomps
fcmovne
mov
add
pop
jp
ficoml
hlt
dec
nop
sub
sub
sbb
inc
lret
mov
insb
jmp
jge
out
int3
data16
mov
lods
mov
mov
jns
adc
das
loop
jge
or
inc
add
ja
je
xor
pop
mov
dec
inc
inc
pop
lret
rcl
xchg
clc
mov
cli
rorl
push
jmp
in
dec
lret
cmp
jne
les
and
loop
jmp
inc
pop
arpl
ljmp
xchg
cmp
mov
out
pop
subb
iret
sub
and
dec
int
js
mov
out
mov
mov
or
xchg
cmp
push
fistpl
loop
repz
push
mov
add
divb
into
and
rorl
cs
pushf
mov
push
xor
adc
loopne
roll
lods
mov
cwtl
pop
sub
mov
adc
jg
clc
fldt
shr
xchg
push
ds
pop
cs
sbb
adc
lods
icebp
in
sbb
push
out
pop
or
sbb
sub
loope
aaa
incl
add
repnz
cmp
dec
rol
xchg
mov
icebp
daa
add
pusha
mov
sbb
clc
fstl
leave
aad
out
fcomps
push
movsl
xor
sub
push
shll
into
jle
push
pop
cmp
jne
dec
push
or
jle
iret
xor
rcrl
jg
andb
test
pop
jo
add
cmp
shl
in
jecxz
stos
sar
out
int
les
xor
mov
js
mov
push
dec
dec
inc
int
je
fcoml
inc
mov
or
push
dec
xor
not
push
xor
cmp
inc
lock
jae
xchg
cmpsb
fildll
push
cltd
mov
or
add
shrb
push
pop
xor
and
jnp
pop
mov
dec
pop
xchg
pop
xchg
mov
jmp
push
mov
push
xchg
jle
pop
cmpsl
dec
xchg
or
imul
mov
call
cli
pop
insb
xor
adc
pop
add
mov
push
notrack
sub
jmp
gs
rcrb
sahf
mov
mov
sbb
gs
mov
mov
icebp
aaa
xor
sbb
mov
add
inc
imul
sub
xor
jecxz
loopne
add
not
xchg
push
push
lods
in
xchg
sti
sub
pop
lods
sar
mov
xor
nop
out
or
add
jp
mov
push
insl
lahf
push
idivb
jno
int3
or
popf
ret
cld
adc
cmpsl
jge
mov
push
and
scas
pop
mov
sbb
rcrl
fistpll
jnp
ljmp
push
adcb
or
mov
lret
mov
sub
pop
les
pop
in
mov
dec
cmp
lret
jg
std
push
cmpsl
sub
addb
push
mov
cmp
mov
xchg
aas
cs
test
and
and
ret
ret
int
lea
lret
jbe
outsl
xchg
hlt
mov
or
mov
xchg
cmp
imul
std
push
cmp
mov
mov
fisubrl
sahf
fists
adc
es
rolb
std
cmpsl
push
pop
or
cs
pop
je
cmc
setnp
inc
mov
dec
mov
xchg
cmc
jmp
lods
jg
lea
in
sbb
jle
movb
add
push
rorl
icebp
bound
mov
je
and
cmp
orb
xor
and
lret
iret
shll
lods
dec
repnz
mov
mov
pop
xchg
dec
cmp
mov
pop
push
or
sahf
mov
mov
outsb
mov
xchg
pop
pop
ret
out
jae
dec
inc
jg
xchg
mov
push
ret
sub
gs
cmp
lds
outsb
pop
iret
push
sti
or
pushf
lea
mov
cmpsb
stos
in
push
gs
cltd
pop
inc
mov
mov
inc
inc
jo
xor
add
sti
jg
les
clc
xchg
push
pusha
pop
out
dec
jmp
lahf
out
rcr
adc
cmp
shrl
data16
sysexit
fbstp
test
jns
cmp
add
and
dec
jg
adc
dec
mov
jecxz
push
mov
cwtl
fildll
xor
sahf
jbe
mov
sarb
into
daa
nop
aam
inc
sbbl
mov
cmp
fistps
or
mov
movsb
adc
mov
repnz
mov
daa
mov
jne
aam
test
pushf
mov
push
testb
les
mov
sti
hlt
cld
or
or
movswl
pop
push
lock
adc
cmp
jno
fldcw
cwtl
mov
xchg
fists
int
sbb
repnz
mov
cmp
stos
out
dec
sbb
addl
or
lret
fwait
sbb
pop
imul
lcall
jns
pop
int
lods
inc
out
dec
outsl
lcall
pop
inc
adc
pop
in
scas
roll
dec
push
and
inc
xor
subl
hlt
dec
xor
mov
pop
bound
fldt
xor
cmpsb
mov
cltd
dec
mov
rcrl
cli
aad
add
mov
inc
ret
xor
loop
and
pop
and
or
jnp
inc
xchg
push
fwait
push
orb
pop
jl
shl
or
mov
dec
jno
or
jb
lea
aad
jp
test
es
mull
icebp
repnz
add
sbb
mov
mov
hlt
sub
mov
adc
adc
push
clc
adc
sbb
jb
jnp
add
movsl
pop
dec
mov
and
out
outsb
push
cmpsb
in
loopne
imul
cs
cltd
loop
and
mov
enter
into
push
mov
sbb
imul
xchg
aas
shll
or
repnz
sbb
pop
ret
or
add
sbb
fwait
rol
je
xchg
xor
cmp
cmp
push
cmp
outsl
cmp
in
orl
xchg
add
mov
les
movsl
add
test
pop
dec
in
sbb
inc
pushf
or
pusha
addr16
jne
out
mov
mov
and
mov
adc
mov
push
mov
je
xchg
jnp
stos
jp
sbb
push
pop
je
cmp
aad
xchg
cmpsl
xchg
push
jns
nop
sub
loopne,pt
cmc
sub
aaa
mov
dec
mov
xlat
lods
mov
enter
das
push
shlb
ljmp
stc
rcrl
cmpsb
call
inc
dec
adc
sub
jle
imul
int3
sahf
sbbb
stc
es
fwait
loope
pop
xchg
bound
and
shlb
iret
into
cmp
pushf
call
xchg
in
ss
mov
addr16
sbb
dec
mov
dec
push
lcall
int
bswap
popf
addr16
in
inc
push
pop
cmpsl
mov
mov
lock
loop
push
subl
cli
daa
es
cmp
sub
adc
pop
stc
xor
movsl
negl
dec
repz
pop
add
mov
and
sub
or
int3
iret
dec
enter
inc
sub
jg
aaa
rcrb
jmp
xor
mov
fstl
enter
bound
mov
aad
adc
xorb
adcl
mov
cltd
ljmp
rol
movsb
scas
mov
mov
inc
add
aad
pop
xchg
pop
das
mov
mov
pop
xor
push
mov
repz
arpl
add
repz
add
shl
jns
dec
xchg
add
pop
int3
scas
sbb
xchg
xor
nop
es
fcomps
jne
xchg
in
pop
lds
rcrl
loop
add
pusha
mov
xchg
testl
or
jp
mov
adc
dec
sbb
sti
lret
test
dec
sti
xchg
push
cmp
sub
xlat
or
mulb
push
stc
data16
imul
imul
aad
mov
cltd
sbb
push
inc
ja
push
imul
aad
mov
shlb
pusha
mov
pop
and
imul
jns
add
test
mov
mov
and
dec
mov
xchg
dec
fisubrs
push
les
push
xchg
jg
int
and
jl
xor
inc
push
jb
stos
mov
adc
add
rcll
sbb
aam
rolb
inc
xchg
cltd
jb
arpl
in
cmp
and
or
popf
lcall
jae
cmpsl
mov
mov
iret
and
push
xchg
add
imul
dec
push
or
outsl
jno
xchg
xor
negl
xchg
pushf
pop
outsb
lea
dec
das
dec
lock
in
jne
nop
xchg
jecxz
xchg
jbe
test
ret
lods
sahf
xor
push
pop
adc
pop
mov
test
xchg
fucomp
mov
sbb
inc
imul
jmp
mov
lods
push
mov
push
xor
push
std
adc
int
mov
shl
push
pusha
push
push
imul
or
test
clc
dec
mov
pop
and
inc
or
adc
mov
add
xchg
push
mov
cli
dec
adc
ds
xchg
dec
or
pop
lret
mov
jbe
es
sbb
or
in
bound
inc
jae
aas
jae
mov
in
inc
inc
push
cmp
mov
inc
dec
aam
push
xlat
icebp
sbb
add
and
notb
dec
inc
nop
mov
cmp
inc
dec
pop
cmpb
add
pop
pop
lahf
jnp
push
lret
xchg
mov
fsts
lahf
bound
pop
es
into
frstor
sarl
or
xchg
cltd
loop
mov
in
inc
sbb
out
xchg
popa
cmpsb
cwtl
xchg
or
js
add
leave
movsb
mov
pop
inc
pop
xor
mov
xchg
mov
inc
sbb
inc
dec
and
xchg
jb
das
jecxz
mov
and
jnp
mov
add
mov
icebp
push
enter
iret
push
lods
imul
lea
mov
push
mov
ja
mov
ud2
mov
lods
mov
pop
sub
dec
xchg
lahf
pusha
add
incl
push
jae
xor
cltd
xchg
ds
inc
inc
push
adc
sbb
push
ds
int3
outsl
jmp
fwait
sbb
jno
data16
mov
pusha
pop
jns
mov
movsb
xchg
leave
cli
cmp
std
in
cmpsb
pop
ja
nop
mov
adc
ss
add
cmp
dec
jns
lret
push
jne
call
mov
xor
push
push
out
push
std
inc
adc
lock
lods
or
imul
cmp
ret
pop
leave
es
clc
ficomps
xchg
fsubrs
mov
test
and
add
movsb
in
subl
adc
jmp
pusha
mov
test
ret
add
bound
sub
add
fldenv
imul
mov
mov
out
pop
addr16
js
cmp
popa
les
jge
loop
jge
es
add
lret
movl
icebp
lods
ss
mov
mov
cmpb
mov
gs
push
sub
jbe
jl
arpl
pop
pusha
in
lea
call
cmp
fcoms
xchg
dec
in
lret
shlb
mov
cli
cli
mov
jnp
inc
jp
jle
push
les
ret
arpl
push
sahf
cmp
clc
rcl
fists
and
lcall
jnp
and
or
and
pinsrw
fwait
dec
andb
dec
mov
cmp
xchg
nop
mov
jno
lds
cmp
add
stc
stc
out
aam
test
push
repz
pop
xchg
sub
and
dec
das
xor
test
data16
cmpsl
dec
and
mov
lock
mov
jecxz
jnp
fildll
unpcklps
cmp
push
pop
test
mov
sub
jecxz
test
lea
jae
lods
out
scas
pushf
dec
fbstp
mov
sbb
sbbl
and
inc
les
rcr
pop
rcrl
mov
cmpsb
scas
push
test
cwtl
lret
imul
scas
mov
jl
sarb
sub
pop
fidivs
xor
inc
sub
and
mov
adc
aas
imul
and
add
mov
push
dec
xchg
xchg
shlb
or
icebp
lea
adc
lahf
test
cs
jg
in
in
or
popa
aas
sbb
stc
nop
insl
xchg
shll
mov
fsubrl
scas
add
mov
mov
sbb
sub
mov
cs
fucomi
xor
or
adc
stos
mov
mov
test
and
fistl
cmpl
sub
xchg
popf
insl
jae
pop
in
daa
push
or
adc
push
leave
rolb
sub
js
test
jge
int
ret
popf
dec
ds
push
inc
add
adc
pop
movsl
and
mov
jbe
pop
xlat
das
jge
and
rcrb
fildl
loop
pushf
dec
cmp
mov
mov
out
les
mov
mov
lea
and
jne
fcmovnbe
xlat
sbb
adc
and
adcl
lock
stc
dec
dec
mov
adc
sbb
inc
call
fimull
ror
mov
fs
in
xchg
jno
sub
outsl
lods
int3
add
filds
xchg
or
pop
sub
pusha
adc
jno
sub
lods
outsl
cmp
aad
int
xchg
loop
mov
or
cmp
lea
or
push
addr16
jle
dec
or
popa
mov
leave
je
out
jo
sub
int3
lahf
mov
clc
mov
xchg
pop
ja
lret
sti
sub
dec
push
adc
push
sub
test
mov
cs
sub
cld
xorb
shlb
out
jb
testb
popa
sub
addr16
fcoml
sbb
popf
ffreep
lcall
jg
out
shll
jnp
or
xor
xchg
in
sbb
ja
mov
lret
adc
inc
int3
mov
in
fildl
test
push
add
aas
cmp
je
sub
mov
mov
jmp
push
inc
xor
test
adc
jl
stos
sahf
cld
and
js
mov
imul
fistl
mov
pop
push
mov
clts
iret
fdivl
cmc
inc
sahf
jns
in
into
inc
and
sub
popf
hlt
cmpsb
inc
mov
xchg
jp
out
pop
and
push
sub
int3
pop
into
gs
addr16
jae
xchg
sub
cli
into
rcl
les
cltd
enter
mov
xchg
test
mov
pushf
bound
sub
test
lea
fdivrs
fs
pop
pop
adc
jo
xor
idivb
sub
push
sub
in
xchg
popa
mov
sbb
pop
mov
nop
pusha
imul
ja
loope
inc
test
int3
cmp
pop
std
mov
das
sbb
jmp
imul
and
adc
popf
repz
xchg
out
xchg
mov
cltd
pop
dec
cmp
sub
xchg
fisttpl
mov
pusha
cwtl
pusha
lds
sbb
std
aad
in
mov
bound
cmpsb
lds
xchg
inc
xchg
into
sub
lret
cmp
push
fld
pop
xchg
xchg
sbb
cmc
ret
and
gs
jl
cmp
mov
sbb
push
insl
cmp
sti
dec
lods
xchg
mov
push
pop
xchg
jp
sahf
adc
mov
sub
add
imul
push
push
lahf
mov
lahf
pusha
repz
lock
add
xor
sbbb
rcr
jl
xchg
push
or
cmpsb
xchg
jns
outsb
out
ret
insb
adc
xchg
scas
mov
loopne
dec
outsl
push
daa
xor
sbb
cwtl
loopne
test
ss
int3
iret
add
loop
mov
aam
push
ja
cmp
mov
push
ds
push
mov
mov
out
rcll
cs
fsqrt
stos
rorb
nop
fistps
lahf
lds
je
rorl
hlt
inc
pushf
ret
loope
movsl
les
orb
jl
cmpsb
push
in
je
data16
cmp
pop
fisttpl
xchg
out
ds
imul
mov
shl
mov
je
jg
or
push
or
mov
jmp
adc
mov
bound
jp
bnd
aam
cwtl
cmpsb
sbb
inc
push
adc
add
fcomip
insb
aas
imull
je
sbb
xor
dec
sub
mov
nop
jae
loope
or
lods
test
xchg
xor
dec
je
jg
into
ds
pop
stc
push
orb
test
jg
dec
je
pop
aas
mov
xchg
push
je
push
arpl
jno
loope
aaa
inc
stos
dec
idivl
mov
pop
rorl
inc
or
xchg
mov
pop
jl
inc
sbb
lods
adc
movl
and
addl
xchg
and
in
int3
adc
fistpll
int3
mov
clc
sub
dec
adc
insb
fstps
mov
sbb
pop
mov
cmp
jl
imul
mov
xchg
dec
sti
out
ficompl
pop
inc
in
repz
arpl
push
cmp
pop
cmp
or
cmp
push
pop
fcmovne
lret
pop
add
jmp
cs
jg
sbb
cwtl
insl
jmp
inc
mov
test
cmp
mov
addb
enter
inc
sbb
jne
cmp
jle
mov
sbb
and
rcrb
je
shll
ficomps
aam
pusha
mov
cmp
and
dec
ds
mov
cltd
dec
add
out
call
pop
pop
add
aas
or
inc
jg
xor
push
sbbb
in
mov
loop
fisttps
shl
pushf
xor
lods
into
xor
repz
aas
xchg
mov
pop
adc
jbe
in
jg
lds
jge
inc
out
push
divl
sarl
cmp
push
shl
in
push
jo
ljmp
enter
int
rcrl
int
in
bsf
mov
arpl
sub
out
fisttpll
into
loopne
int3
push
xchg
jge
and
insb
xor
insl
stos
loop
push
mov
add
lret
ret
femms
sub
adc
jne
push
sbb
xchg
sub
mov
aas
jp
data16
sarb
cli
imul
inc
mov
pop
xlat
bound
add
sbb
xchg
jbe
mov
or
fucomi
pushf
pop
mov
scas
xchg
push
sti
stos
shr
ss
mov
in
push
sbb
inc
fwait
ja
aaa
mov
pop
add
out
pop
outsb
addb
jno
testb
push
out
xor
mov
jmp
ss
inc
jecxz
add
bound
adcb
and
clc
cmp
xlat
lods
lret
xchg
out
int3
inc
inc
cmp
addr16
sub
xchg
or
or
sbb
cmp
mov
imul
outsl
mov
enter
add
lock
adc
lods
sahf
mov
push
jmp
mov
cltd
mov
data16
loopne
aaa
pop
cld
sbb
cli
lret
lret
hlt
pop
fisubrl
mov
mov
out
je
xchg
subb
adc
sbbl
push
ja
frstor
cmp
xor
imul
lret
fsub
jbe
jle
mov
lea
inc
and
cmpsb
cltd
jns
aas
push
or
fmull
pop
lret
js
gs
gs
and
jg
sub
sbb
out
cmp
flds
add
jno
pop
fstpt
inc
cs
orl
cmpsl
or
in
notl
ficomps
mov
mov
push
not
or
addl
and
mov
loop
movsl
hlt
test
xchg
cmp
or
je
mov
adc
cwtl
sbb
stos
test
cmp
les
addl
mov
lret
cmp
sub
dec
in
loope
andb
cmp
and
iret
insl
js
roll
mov
dec
bound
sub
dec
jbe
jg
push
mov
clc
shll
pop
push
add
fmuls
repz
adc
in
std
nop
mov
dec
jmp
adc
push
pushw
in
mov
popa
add
shl
xchg
out
xchg
cmp
cmpsl
mov
mov
xchg
xchg
pop
inc
sbb
xor
or
xchg
and
mov
add
mov
movsb
mov
cmp
call
enter
mov
ljmp
icebp
imul
cmpsl
dec
inc
loopne
clc
dec
add
dec
sub
xlat
lret
sbb
pushf
flds
jno
iret
and
sub
jmp
mov
insb
aas
add
rcrl
mov
sub
sbb
sbb
pop
sbb
pusha
in
jo
dec
fcomp
aas
push
and
push
ljmp
mov
mov
shll
adc
outsl
mov
inc
repnz
and
mov
cmp
fwait
icebp
aaa
adc
pop
addr16
adc
adc
xchg
bound
out
in
stos
std
ret
daa
stc
push
lds
clc
into
dec
and
xchg
add
and
jmp
outsb
cld
fwait
aam
test
push
xchg
or
popf
inc
stc
push
insl
push
das
sbb
pushf
pop
and
sub
or
xchg
outsb
inc
icebp
in
inc
icebp
jg
std
pop
loope
incl
mov
mov
das
mov
addr16
add
sbb
out
mov
rclb
xor
and
ss
mov
push
cmpsl
insl
cmp
insb
or
nop
movsb
imul
or
pop
sbb
fisubs
jle
push
jno
sub
pop
jbe
rolb
xchg
jbe
loop
icebp
fs
ds
xchg
cmpsl
dec
cmpsl
jecxz
lods
outsb
ljmp
xor
dec
cmp
outsb
lods
in
ss
jmp
jnp
push
and
mov
fiaddl
sbb
xlat
add
mov
addr16
fistl
dec
fwait
sbb
les
movsl
mov
lods
sub
cli
mov
pop
orl
sarb
js
jecxz
pop
push
scas
sub
decb
stc
js
xlat
add
push
jp
sub
mov
and
jo
and
imul
jo
negl
cmc
je
pusha
xchg
sahf
into
or
or
xor
test
cmpsb
out
sub
xchg
fnstcw
out
ret
lea
fiaddl
cmc
fmuls
jb
scas
rcll
pop
add
daa
pop
sbb
je
ss
mov
popa
aaa
out
or
jecxz
sahf
cmp
adc
add
dec
arpl
or
imul
dec
inc
lret
inc
dec
xchg
test
jae
dec
imul
shr
mov
mov
lods
xchg
cmp
lret
mov
push
lcall
cmp
mov
sti
pusha
out
faddl
insb
mov
mov
pop
out
mov
into
xor
or
dec
ret
jno
adc
stos
lret
cld
mov
push
mov
test
pop
repz
lret
dec
adc
fnstsw
jno
adc
sbb
jae
push
mov
mov
mov
sti
cmpsb
mov
cmc
cmpb
sbb
pusha
rcl
and
cmpl
mov
mov
loop
adc
mov
rorb
push
push
pop
mov
aaa
mov
mov
lahf
loope
jmp
add
dec
out
int
fdivrs
push
inc
sbb
shll
enter
test
mov
inc
jo
in
cmpb
cltd
mov
push
aaa
ja
mov
dec
add
xchg
jecxz
push
xrelease
test
test
movsl
and
adc
sbb
mov
stos
or
clc
mov
jno
mov
sbb
lret
fmul
aaa
cmp
lcall
inc
dec
mov
cmp
lock
mov
push
cmp
dec
push
popa
fmull
xchg
adc
dec
fiadds
stc
mov
out
test
mov
out
jb
mov
repz
jbe
mov
cmp
aaa
mov
push
js
pusha
out
fcmovne
xor
sub
push
pop
je
test
dec
imul
sub
pusha
cmc
cltd
jnp
mov
fstl
inc
mov
pop
and
sub
out
shrb
pop
adc
sbb
and
inc
push
in
adc
das
movsb
roll
cld
dec
mov
push
into
fwait
adc
inc
hlt
jmp
sub
push
adc
pop
push
mov
adc
addr16
and
sbbb
mov
cmp
movsb
xchg
leave
adc
scas
jl
push
loopne
stos
push
loop
cmp
cld
and
andb
icebp
cmp
mov
outsb
dec
mov
push
lcall
call
push
xchg
sub
sarb
ret
mov
sub
out
cmp
enter
sub
sbb
mov
lret
cltd
xchg
lods
fists
xchg
or
jb
adc
cmp
mov
mov
mov
test
cli
mov
data16
pop
ret
pop
testl
stos
scas
mov
push
aaa
fstpl
mov
test
mov
jecxz
clc
mov
test
cs
mov
imul
push
lock
vmwrite
out
dec
ss
popf
inc
mov
jae
ja
lods
push
sub
inc
adc
ret
insb
loopne
stc
in
mov
cmpsb
movsl
or
gs
and
sub
sub
jecxz
xor
mov
dec
mov
loope
fsubp
or
je
adc
fistl
add
mov
cmpsb
popa
ljmp
and
fstpl
jb
les
test
les
jp
push
jg
inc
jmp
pop
fsubrs
mov
sti
mov
aaa
loop
push
mov
xchg
lret
je
and
or
or
jmp
push
test
adc
bound
sub
or
sub
jno
jecxz
cmp
jle
push
cld
push
dec
sub
fs
scas
xchg
ret
dec
sub
jns
rorb
shlb
push
lds
mov
cmp
movsb
subl
sub
pusha
rolb
add
cmpsb
add
sbb
lds
out
out
rclb
pop
mov
push
mov
xchg
adc
pusha
cmp
and
sti
inc
push
sub
mov
mov
add
scas
xchg
xor
ljmp
or
dec
jmp
jle
xchg
sbb
stos
pop
sarb
outsl
fbstp
movsb
push
and
jle
xlat
pop
leave
fldl
mov
xor
and
xor
fwait
je
mov
adc
imul
ja
xchg
sbb
aas
or
and
sbb
push
cmp
dec
adc
mov
fistl
dec
test
sub
mov
aaa
sub
mov
sti
mov
jo
in
insb
xor
dec
fistps
sub
pop
cwtl
aad
std
dec
xor
call
mov
ss
aad
aaa
in
xor
pop
les
jne
push
cs
lods
outsb
int
sub
mov
cmp
call
std
testl
ss
sti
hlt
mov
or
xchg
mov
fisttps
int3
hlt
lahf
je
cmp
mov
and
ds
stos
fmuls
or
push
adc
lea
imul
fs
aas
sti
outsl
ret
pop
cltd
and
sbb
in
inc
movsl
mov
popf
and
pop
sbb
outsl
or
cli
fsubl
adc
dec
sub
mov
enter
ds
add
push
frstor
lret
adc
mov
outsl
cli
out
aas
ja
inc
faddl
lahf
push
xchg
add
add
jecxz
fwait
sbb
or
xor
addr16
sbb
fimuls
cmp
lods
mov
rorb
xchg
sbb
out
mov
imul
mov
xchg
inc
loopne
and
shll
jg
je
notb
or
cmpl
pop
nop
jg
decl
jp
mov
stos
cwtl
mov
mov
or
int
popa
xlat
add
adc
inc
test
cwtl
add
out
mov
cmp
pop
test
adc
test
add
push
xchg
cmp
push
repnz
imul
addr16
lock
jp
inc
adc
stos
mov
cmp
aad
push
pop
add
xchg
sub
int
ficoml
dec
xor
sub
adc
ror
xor
push
test
push
push
jno
push
inc
sahf
std
imull
pop
mov
movsl
lock
push
pop
orb
lods
lds
push
dec
mov
dec
outsb
scas
jne
loopne
test
jp
mov
or
and
gs
adc
shlb
push
out
xchg
pop
push
mov
or
insl
adc
jg
lcall
in
mov
dec
mov
pop
jo
adc
mov
mov
nop
inc
mov
adc
fs
cmp
xlat
push
xor
mov
jecxz
scas
imul
dec
add
test
xor
fistpl
jb
addl
arpl
and
mov
addr16
jp
jg
adc
jge
inc
imul
and
mov
loope
out
adc
aas
mov
jp
testl
mov
test
xchg
dec
jmp
mov
hlt
out
mov
aam
sbb
add
adc
and
xchg
aam
cmp
outsb
mov
lret
inc
inc
test
or
mov
cmp
js
and
inc
ljmp
dec
inc
and
dec
insl
ds
shrl
jne
xor
hlt
dec
in
shl
push
addr16
dec
in
sbb
flds
mov
lret
xchg
addb
sub
push
or
ret
test
cmc
out
cmp
imul
testb
lret
lods
and
gs
jl
sar
jns
test
and
adc
xor
sub
cmp
cmp
jp
mulb
imul
loopne
inc
in
imulb
xor
aaa
cmp
sub
jns
jge
mov
in
adc
fsubr
lfs
xchg
and
les
fsubrl
outsl
mov
mov
dec
mov
pop
jp
xlat
repnz
aad
sub
inc
push
mov
ja
or
jmp
and
aam
arpl
arpl
xor
mov
add
loope
fadds
and
iret
dec
out
sbb
ja
loope
jne
out
xchg
cld
push
ret
cli
pop
cmp
mov
adc
mov
lods
or
sub
lret
clc
lock
push
int
and
imul
daa
dec
push
dec
xchg
test
aaa
push
test
mov
push
inc
imul
call
xlat
les
cld
out
leave
jecxz
int3
xchg
or
popl
insl
lea
sbb
fldt
cltd
int
cli
sbbl
or
aaa
mov
pop
nop
xor
mov
pop
push
hlt
cli
or
bound
or
lods
jno
jo
in
dec
mov
out
xchg
mov
push
and
fwait
jbe
and
jmp
or
inc
inc
pop
xchg
xor
nop
lret
xchg
adc
jne
movsb
add
lcall
adc
sbb
mov
in
xor
lahf
je
subl
push
inc
jae
mov
in
movsl
pop
sub
and
cmpsb
rcrb
inc
scas
rcrl
sti
cmp
sub
in
xchg
outsb
xchg
test
push
imul
inc
or
imul
outsb
in
out
add
mov
cmpsl
sahf
mov
pushf
sti
add
mov
pop
call
add
repz
sti
fmuls
shll
mov
ret
dec
adc
icebp
xchg
push
les
cmp
fcomip
jge
pop
ds
cmp
out
leave
sbb
jmp
mov
into
pop
cmp
xor
pop
xchg
sub
xor
and
push
or
repnz
ds
aas
mov
iret
jge
roll
mov
test
mov
dec
dec
pop
shrl
movsb
jb
xchg
jg
or
aas
or
fcoml
mov
push
into
inc
cmp
and
enter
imul
loopne
dec
sahf
sti
out
std
enter
jmp
in
or
sub
or
movsl
mov
test
insl
dec
cld
jmp
cmovo
dec
outsl
xchg
les
cmpsl
pop
or
inc
or
nop
or
mov
out
push
int3
pop
push
or
test
lea
cmp
add
fs
or
dec
ljmp
dec
cs
xor
out
jne
std
popf
rcr
sahf
dec
adc
fsubr
inc
sub
xor
dec
jno
mov
sarl
test
mov
repz
and
mov
mov
push
gs
dec
sbb
cmp
inc
fisubrs
cmc
outsl
mov
int3
lret
inc
shl
push
add
daa
jns
add
xor
jmp
or
fisttpl
cmp
pusha
out
add
ret
sub
adc
jbe
jecxz
add
jecxz
adc
inc
pop
rol
jne
ss
pushl
std
xor
lret
xchg
xchg
and
scas
or
loopne
test
imul
outsl
call
aaa
pop
ficoml
mov
in
mov
test
cmp
xchg
fimull
mov
cmp
jnp
pusha
dec
xor
rcrb
xchg
ret
mov
aad
jecxz
iret
xor
mov
cmp
mull
mov
in
movsl
jle
add
outsb
dec
xlat
jns
and
mov
lds
jnp
sbbb
out
mov
fnstsw
mov
insl
mov
jb
sub
and
add
mov
addl
jb
mov
mov
adc
and
fmull
jmp
sub
int3
xor
sbb
mov
pop
xor
push
pop
lahf
ret
lret
test
stos
mov
stos
xchg
into
sahf
add
jecxz
add
bnd
xchg
ss
insl
movsl
push
fmuls
nop
and
adc
aaa
fisttps
jg
daa
xor
jle
mov
sbb
pop
test
subl
sub
insb
xchg
test
jb
or
xchg
sub
push
cmc
repnz
push
inc
pop
push
imul
pop
jno
inc
hlt
mov
cwtl
and
xchg
pop
mov
dec
fs
nop
and
push
cld
xchg
fimull
cmpsb
insl
sbbl
jns
data16
stos
sub
adc
dec
xor
leave
insl
or
outsl
roll
outsb
pop
ja
bound
pusha
sbb
push
inc
inc
jns
mov
mov
mulb
mulb
pop
pop
xchg
jle
jmp
ja
fstps
mov
add
mov
loop
std
cmc
das
adc
int
jnp
add
pop
ret
cmp
pop
loop
xchg
movsb
mov
jge
mov
xchg
sub
dec
fs
add
fidivl
mov
mov
dec
rcrb
push
popa
pop
sbbl
mov
dec
loope
adc
lock
xorl
popa
das
dec
sbb
push
shrb
xchg
pop
decl
movsb
mov
dec
jl
test
cmp
in
cmpsl
mov
jmp
outsl
enter
pop
adc
data16
repz
mov
and
fstl
nop
stos
cmc
rorl
roll
pop
sbb
repnz
jnp
andb
dec
cmp
or
or
pop
pop
adc
rcl
xchg
ror
scas
xchg
push
jge
int3
call
push
mov
rorl
sub
test
loope
sbb
sub
enter
movsb
lock
imul
rorl
cmp
cmpb
repnz
call
iret
retw
and
lret
jbe
es
imulb
nop
xorb
or
push
mov
bsf
or
imul
pop
dec
cld
mov
push
mov
cmpsl
mov
pop
push
cli
les
scas
xor
dec
push
or
sub
imul
cmp
sub
inc
loop
cmpsb
iret
inc
cltd
adc
jnp
out
jl
ljmp
shl
subl
dec
dec
add
or
dec
pop
jmp
cmp
fnstenv
push
pop
out
iret
adc
mov
pop
jmp
fsubs
les
add
jbe
sbb
clc
call
out
jnp
cli
xlat
fwait
loope
enter
invd
jmp
int
outsb
cmp
xor
add
jnp
jne
lcall
lea
aaa
mov
dec
pop
loop
cs
mov
add
hlt
push
data16
movsb
ss
lcall
and
jno
cmpsb
pushf
cs
rcl
jle
mov
out
fstps
imul
repz
cmpsb
jecxz
insl
dec
lcall
mov
dec
dec
push
dec
popf
outsl
inc
xchg
hlt
nop
xchg
ret
add
rorl
mov
mov
dec
sbb
xlat
addr16
repnz
cmp
xchg
iret
aaa
dec
pop
mov
loop
and
inc
push
ja
sbb
cmpsl
fdiv
mov
lock
xchg
xchg
repz
femms
iret
inc
movsb
fdivl
xchg
sub
sub
jno
adc
and
fildll
mov
add
data16
add
mov
jl
xor
sti
pop
jbe
shll
mov
sbb
cmp
pushf
mov
sbb
sbb
pop
pop
fildll
xor
sbb
sbb
and
pop
mov
jecxz
rcrl
test
mov
scas
mov
jecxz
sbb
loopne
pop
dec
stos
xchg
popa
cld
xchg
incl
add
lds
imul
jecxz
nop
gs
mov
cltd
insl
sahf
mov
dec
les
lea
push
ret
jno
xchg
inc
jns
lock
shl
or
push
pop
xor
xchg
cmpl
dec
fsubrs
inc
cmp
imul
ds
mov
cmp
iret
mov
mov
mov
cmp
jno
gs
or
test
insl
jno
or
push
mov
stc
inc
shrl
fistpl
popa
pop
jp
ror
sub
js
mov
test
sub
push
dec
mov
pop
dec
cmovge
jnp
js
shlb
dec
loope
imul
and
fs
push
and
int
xlat
xchg
in
mov
pop
jo
or
cmp
call
fwait
mov
aas
adc
jp
out
push
out
out
out
dec
fwait
shll
hlt
mov
jl
mov
mov
mov
or
lods
xchg
je
mov
sub
add
pop
push
mov
loop
xor
addb
mov
mov
sbb
jo
imul
jecxz
out
cwtl
movb
sti
mov
sahf
lods
movsl
sahf
and
jne
inc
cmpsl
sub
add
adc
sub
xor
arpl
fldl
pop
std
out
gs
xor
dec
cmp
pcmpgtb
andl
pop
orl
dec
push
imul
test
mov
dec
mov
mov
and
dec
ds
sub
int
push
popa
leave
icebp
insl
pop
fisubrl
xor
mov
movl
mov
mov
xchg
inc
mov
stos
cs
adc
and
and
mov
addr16
push
mov
cmp
es
mov
movsb
sti
mov
loope
lcall
hlt
vpavgw
pop
or
inc
mov
dec
xchg
mov
xor
mov
mov
sub
movsb
not
in
sub
scas
cmpsl
std
lahf
inc
stos
xchg
mov
jecxz
xlat
lret
inc
enter
adc
mov
cwtl
mov
push
push
pop
test
fmul
andl
adc
mov
inc
cwtl
stos
jmp
out
adc
jl
faddp
and
xchg
inc
aam
mov
jmp
sbb
ja
jno
adc
jp
jb
push
jecxz
sti
sbb
subl
fisubrs
shl
cmp
or
aad
bound
mov
xlat
movsl
mov
pop
ss
int
or
adc
out
out
jae
sahf
or
leave
xor
fdivrl
cs
mov
xor
xchg
mov
addr16
adc
inc
scas
int3
and
lock
popf
and
shrl
icebp
push
inc
push
flds
clc
mov
fcmovb
ud0
ljmp
dec
adc
aaa
incl
adc
mov
mov
mov
jge
iret
scas
fldt
fdivl
bound
cmpsl
or
mov
mov
outsl
call
dec
mov
xchg
rolb
xor
imul
push
adc
les
jnp
push
jl
das
aam
mov
xchg
int3
call
pop
outsb
pop
test
outsb
icebp
dec
inc
inc
call
jle
or
cs
mov
repnz
dec
cmp
insl
xor
sbb
cmp
xchg
jge
mov
and
mov
pop
loopne
dec
in
xchg
push
adc
or
xchg
cmp
call
testb
cli
lret
sbb
lea
cmpb
mov
sahf
jecxz
hlt
xchg
or
mov
cmc
or
pop
cwtl
push
mov
xor
icebp
pop
jne
fldl
sbb
sbb
and
dec
inc
cmp
xchg
xor
cmp
addb
push
cmpsb
popf
mov
imul
adc
pop
sbb
insl
push
iret
lds
dec
sbb
ret
mov
mov
ss
cmp
xor
mov
pop
add
out
pop
lret
and
stos
js
mov
in
stos
stos
adc
adc
jl,pt
mov
js
sbbb
out
repz
cli
ja
imul
xor
mov
jbe
jae
ds
add
addb
xchg
leave
xor
pop
mov
sub
iret
fiadds
or
mov
rcll
cmp
jl
ficomps
pushf
dec
outsb
sub
inc
fwait
or
sbb
adc
movl
and
adc
sbb
inc
jne
sub
into
jmp
test
xlat
xor
idivl
loop
test
adc
inc
lock
call
and
fisttps
pop
out
dec
decl
mov
xchg
mov
push
add
xor
mov
mov
out
addb
xor
or
aas
sbb
dec
mov
das
pop
pop
lahf
jbe
stc
xor
or
sarb
push
lcall
cmp
loope
das
mov
fwait
and
ficoml
cmpsl
jge
jo
cmc
test
dec
iret
xchg
icebp
and
cmp
jp
push
fwait
inc
addb
jo
ja
popf
adc
xchg
inc
jge
lods
rcrl
push
jns
pop
xlat
push
jae
mov
lahf
and
sub
adcl
cwtl
les
jo
mov
xor
adc
pop
notb
mov
icebp
jo
je
outsl
pop
lods
inc
fcoms
mov
aaa
fldt
repnz
and
mov
cli
xchg
mov
adc
dec
ds
daa
ss
shll
pop
jmp
lea
scas
mov
sub
inc
dec
mov
adc
xor
nop
andl
and
enter
lcall
inc
in
stc
jnp
jns
xchg
movsl
dec
dec
ljmp
jecxz
dec
adc
mov
mov
sahf
cmp
mov
cmpsb
aam
arpl
pusha
scas
test
mov
xchg
inc
pop
inc
cmc
lret
push
adc
aad
sbb
bound
out
add
fcomps
pop
sub
jb
shufps
lds
mov
int
mov
call
pop
emms
dec
dec
outsb
icebp
push
clc
sarb
stos
adc
out
mov
shlb
ja
cmp
out
ds
stos
cmp
push
sbb
mov
lahf
outsb
jp
sti
hlt
add
sbb
sub
call
jl
add
xchg
in
fimuls
xchg
mov
and
loop
sub
je
dec
leave
sub
pop
and
std
mov
pop
mov
and
adc
xlat
push
add
mulb
jmp
dec
xchg
mov
jns
xorl
mov
push
mov
pusha
dec
jp
aas
push
mov
dec
lods
les
dec
ljmp
jmp
shl
out
pop
add
popa
in
lahf
fwait
cwtl
add
aad
pop
push
sub
or
mov
ljmp
lcall
sbbb
and
mov
dec
sbb
insb
xor
pushf
out
push
push
or
xor
pop
jb
sub
dec
jg
flds
and
rcrl
xchg
shr
pusha
cwtl
mov
mov
mov
lcall
push
sbb
cmp
stos
fcom
test
jmp
mov
sbb
add
mov
mov
ljmp
cmpsl
int
mov
rep
xchg
xor
repz
loop
lods
xchg
in
or
xor
scas
dec
add
ret
sbb
arpl
sbb
int
mov
jmp
movsb
out
push
repz
xor
push
xor
pop
mov
sbb
pusha
xor
jle
and
jnp
mov
xor
call
xor
xchg
mov
inc
shlb
mov
mov
mov
sub
loope
pop
dec
pusha
jecxz
hlt
dec
dec
test
out
stos
push
xor
xor
lahf
lock
adc
test
ret
dec
sub
stos
and
jmp
and
pop
cmp
into
scas
xchg
sub
xor
popf
leave
mov
or
jg
add
lods
call
dec
sbb
rclb
or
sbb
push
push
jnp
pop
in
sub
inc
in
xchg
mov
test
bound
imul
and
mov
dec
pop
in
mov
xor
outsb
or
and
cwtl
mov
mov
dec
rol
push
xchg
push
cmpsl
out
fwait
or
push
pop
pusha
ljmp
shr
mull
xchg
je
mov
mov
mov
push
adc
enter
mov
stos
fiaddl
lock
clc
xchg
sahf
je
pop
clc
fnstcw
jne
cmp
lea
ret
sbb
mov
test
xchg
sarl
jmp
leave
push
cwtl
out
into
jo
stos
cmp
jbe
push
mov
inc
test
out
into
xchg
and
test
pop
lods
push
xor
jge
notb
push
mov
push
add
xchg
in
fistpll
test
push
addr16
lret
mov
ja
mov
and
xlat
pusha
inc
inc
pop
ret
es
out
sub
mov
js
jbe
pushl
jl
and
arpl
xor
add
adc
pushf
add
adc
mov
sub
insb
dec
adc
add
push
popa
cld
out
dec
andl
xlat
sbb
std
dec
call
ret
rcl
sti
mov
test
ret
mov
stc
sbb
xchg
lods
movsb
mov
adc
test
mov
lcall
inc
orb
hlt
rorl
mov
negl
jg
scas
cmp
xor
wbinvd
mov
mov
mov
push
loopne
in
out
gs
xchg
out
mov
and
cmp
mov
xor
sar
jne
sub
or
out
xor
adc
adc
add
jo
pushf
push
xor
fadd
stos
fs
jne
add
daa
dec
and
ss
jb
lret
fwait
pop
adc
aaa
dec
inc
lret
aam
mov
inc
popa
add
scas
and
lock
jnp
add
jns
xor
sub
daa
fs
mov
movsl
pop
fxch
fldt
inc
lret
cmpsb
lret
push
lods
bnd
lds
rolb
add
push
pop
dec
addl
mov
push
bnd
mov
xor
pop
gs
xchg
addr16
sub
out
add
pop
xor
xor
mov
mov
fcmove
call
sub
insl
xchg
cs
dec
jae
xor
add
fidivrl
adc
xor
ja
mov
inc
arpl
lcall
subb
adc
add
andb
stos
ficomps
js,pn
cmpsb
aaa
jg
sbb
pop
lds
or
and
leave
lds
xchg
divb
sbb
dec
fistps
push
xorb
imul
or
enter
push
push
das
in
mov
stos
mov
cs
adc
repz
pop
xchg
movsb
mov
xchg
nop
cs
icebp
push
js
pushf
jp
xchg
cmp
int
stc
pop
in
push
xchg
cmp
xchg
js
imull
and
imul
test
xor
push
pop
stos
mov
xlat
jg
icebp
aam
inc
loope
lsl
cmp
mov
dec
and
aad
das
inc
sbb
cltd
sbbb
je
xchg
hlt
mov
jb
test
mov
ficomps
cmp
mov
ja
fs
arpl
mov
mov
mov
scas
cmp
sub
ffree
lds
add
call
mov
xchg
sub
les
scas
ficoms
je
fimuls
ds
add
inc
mov
adc
lcall
adc
mov
jmp
decb
pop
fistps
sbb
minps
rolb
out
movl
mov
sub
lds
sub
pop
ret
inc
insb
push
cmp
fsubrs
dec
lcall
imul
push
cmp
xor
out
test
insb
mov
xchg
cmpsl
sbb
frstor
rcll
js
push
dec
out
lcall
xor
sub
mov
sub
add
and
in
stc
sbb
test
push
push
fcomps
sbb
mov
js
xchg
cmp
aam
in
mov
jl
lods
int3
adc
pop
fidivrl
sub
mov
addr16
shlb
cli
cmp
or
icebp
sbb
sbb
frstor
xchg
test
out
iret
dec
pop
rcrb
mov
cmp
test
daa
repnz
aas
dec
mov
sub
adc
jecxz
cmp
jecxz
rolb
insb
push
addr16
in
mov
cmp
push
mov
iret
fs
sahf
lds
pop
scas
in
test
insl
or
cs
iret
mov
lds
mov
popa
pop
jae
ja
cmp
inc
sbb
xchg
add
add
mov
push
dec
loope
imul
jbe
icebp
shrb
jo
cltd
or
mov
das
fcmovnb
and
inc
lcall
dec
pushf
stos
pop
outsl
xor
stos
xor
mov
les
dec
inc
cld
mov
mov
sbb
cmp
lock
mov
sub
xor
jne
lods
ficomps
stos
loope
mov
inc
in
fdivl
jg
std
push
je
sbb
xor
jno
jg
push
js
dec
xchg
iret
shll
adc
xlat
pop
mov
test
push
cltd
pop
ret
insb
decb
outsb
fnstcw
bound
mov
inc
les
std
sbb
pop
mov
sbb
call
lcall
clc
jecxz
dec
cltd
jo
aas
dec
lret
fistpll
insl
out
xchg
cmp
jae
mov
cld
push
jae
es
jbe
cmpb
mov
xor
push
fcomi
clc
inc
ficoml
fbld
xchg
jecxz
js
out
cmp
jns
push
aas
loopne
inc
add
pusha
sbb
mov
inc
testl
push
jmp
mov
pop
inc
xor
fwait
mov
dec
add
jle
es
push
add
and
pushf
push
xchg
call
movsl
mov
ss
adc
fsubrs
pusha
xchg
push
jae
movsb
fidivs
imul
ss
cmp
imul
notl
in
mov
fcomp
add
cli
cmp
inc
jl
add
jg
mov
fs
scas
xchg
pop
pop
addr16
adc
int
ds
inc
enter
xchg
or
inc
mul
push
cmp
mov
out
call
in
push
std
mov
std
scas
mov
lret
inc
icebp
call
xor
jnp
test
add
inc
ret
icebp
inc
dec
movsb
push
jbe
lds
in
aaa
icebp
lahf
xor
jnp
cli
or
jae
jl
stos
pop
inc
mov
xorl
mov
repnz
xor
mov
dec
test
or
sub
shll
pop
out
push
cli
jns
ljmp
jo
dec
rcll
in
pop
push
cmp
stos
jo
shrl
xchg
and
pop
imul
test
or
jns
mov
jmp
shll
leave
dec
adc
dec
cmp
mov
inc
cld
jl
jmp
imul
loope
cmp
sbb
mov
je
popf
fisubl
mov
xor
or
add
lods
movsl
ljmp
and
test
push
ss
mov
jp
mov
mov
out
and
push
jg
out
mov
cmovl
or
loop
lret
rorl
jge
mov
pop
fistpl
out
cmp
jnp
test
push
aad
xchg
mov
das
insb
shlb
add
cmp
dec
pushf
aaa
jg
dec
adc
add
insl
sahf
mov
sbb
dec
cmc
fnstenv
sub
inc
xchg
xlat
popf
in
shll
ret
fists
xchg
inc
out
push
xor
out
xchg
icebp
cltd
xchg
add
sbb
pop
fnstcw
xchg
rcr
ror
orl
dec
sbb
cltd
or
fs
inc
pushf
rclb
out
ja
jne
fsubrs
or
ds
mov
sub
popf
sbb
lods
test
dec
addr16
outsb
dec
insl
cmp
and
sub
xchg
rep
mov
cmpsl
lret
add
or
shl
cs
jbe
or
les
and
pusha
test
inc
pop
mov
cmp
xchg
sbb
pop
rcrb
insb
xchg
cmpsb
aaa
in
mov
sbb
push
push
loope
fildll
mov
cld
jg
cmp
pusha
fists
add
jns
mov
cmp
adc
jg
test
adc
clc
or
sub
repnz
dec
xchg
aad
shlb
xchg
pop
mov
outsl
jecxz
adc
cli
mov
mov
xor
pop
fidivrs
inc
outsb
pop
dec
jbe
sub
jge
push
inc
outsb
insl
je
ficomps
xchg
xchg
or
jo
mov
push
xchg
lret
xchg
jge
aas
jp
push
xchg
rcl
ret
add
adc
push
loope
nop
sub
mov
sub
xchg
shrb
imul
lret
mov
or
mov
mov
test
fildl
btr
sub
gs
pop
shrl
or
pop
cmc
push
cmp
mov
sbb
push
xchg
std
cltd
or
push
gs
lock
rcll
insb
jo
mov
jnp
push
mov
scas
sbb
jno
popa
fstl
in
fldt
aam
jae
and
call
adc
lcall
bound
mov
inc
jae
jecxz
test
out
adc
xchg
push
jnp
inc
int
divl
or
lret
addr16
rol
mov
mov
not
adc
in
push
mov
dec
and
ljmp
pusha
mov
xchg
mov
ds
outsb
movb
pusha
add
push
divb
add
jno
jge
mov
ret
and
imulb
push
add
ss
mov
mov
stc
pop
cmpsb
pop
pop
in
ja
push
rcll
lods
jg
in
inc
jns
mov
push
leave
test
out
xchg
aaa
xor
testb
xchg
sub
pop
subb
mov
xchg
mov
lods
popa
add
mov
jae
dec
push
xor
fwait
jle
sbb
inc
out
or
sbbb
and
pop
out
test
xchg
add
mov
enter
popl
xchg
sahf
cmc
xor
lret
and
andl
dec
jge
iret
cmp
mov
pop
ja
mov
pop
mov
dec
and
out
jg
push
jo
rcrl
mov
sub
mov
jnp
xor
mov
push
fs
jmp
negl
jge
insb
lea
push
daa
sbb
and
rorb
data16
dec
jge
cmp
mov
add
push
inc
adc
lcall
push
pop
call
orb
jae
inc
jecxz
int
nop
push
cmp
sbb
imull
cmp
push
xor
mov
sub
push
fs
imull
pop
imul
mov
stc
push
xor
roll
sub
push
fnstenv
pop
pushf
cmpsl
mov
cs
pusha
mov
inc
push
popf
ja
fnstcw
or
arpl
ficoml
add
jge
adc
mov
in
shl
xor
mov
and
divl
cmpb
fisubs
scas
dec
mov
jo
int
insb
adc
push
pop
jmp
data16
std
mov
cld
mov
push
test
jg
addl
fs
jge
outsb
pop
lods
sub
popa
mov
add
pusha
cmp
mov
scas
cmp
or
add
xor
adc
in
ror
xchg
ficompl
lret
test
adc
pop
ret
xor
movsb
int3
lret
jb
ret
push
jmp
icebp
fsts
inc
jne
call
sub
daa
adc
out
inc
inc
push
cmp
rcrl
xor
hlt
loop
push
mov
push
adc
lcall
pop
rcll
add
sub
lock
ds
aas
adc
and
mov
fwait
xchg
adc
pusha
sbb
fs
sub
jp
les
pusha
test
jnp
pop
enter
sbb
iret
cmp
add
sahf
leave
fxch
cwtl
dec
mov
scas
loop
mov
adc
pusha
xchg
jle
jle
in
adc
mov
loop
lock
mov
dec
cld
xchg
xchg
testb
adc
xor
push
call
fs
shlb
or
dec
dec
and
call
scas
fwait
and
inc
nop
clc
xchg
lods
pop
xor
xchg
mov
adc
jbe
bound
push
xchg
jecxz
mov
cmpsl
adc
push
fwait
xchg
shlb
aad
imul
sbb
mov
jae
xor
xor
and
add
hlt
shrb
mov
mov
and
and
loop
les
lcall
xor
fisubl
test
jnp
lcall
ss
xor
int
negb
push
xor
push
pop
fdivrl
pusha
repz
mov
out
ret
shll
xchg
orl
mov
lods
add
mov
push
adc
and
xlat
addr16
gs
xchg
pop
mov
sub
sub
mov
cmpsl
xlat
jmp
cs
xchg
cmp
sbb
outsl
int
sub
fildl
or
inc
jg
int3
repnz
dec
add
or
mov
jo
mov
sbb
inc
push
test
aam
ds
sbb
mov
inc
sbb
mov
pop
inc
sub
or
scas
je
in
dec
jl
mov
cmp
push
nop
je
jno
inc
rcrb
pushf
mov
dec
pop
int3
dec
jge
inc
xor
inc
adc
stos
xchg
adc
jne
push
mov
out
pop
out
add
cltd
mov
or
cmp
xor
shlb
ss
icebp
dec
and
fnstsw
lods
out
jb
cmp
sub
pusha
lods
sahf
andb
das
cmp
scas
js
jo
jge
cwtl
xor
popf
stc
incb
push
fsubs
adc
pop
movsb
cmpsb
movsb
adc
test
xchg
sbb
xor
pop
xlat
scas
pop
mov
cmp
mov
xor
test
imul
xchg
sub
ljmp
push
mov
and
dec
and
js
mov
mov
push
clc
cmp
jle
xchg
cmp
inc
push
cmp
arpl
xchg
outsb
add
iret
push
xchg
mov
jne
leave
cmpsb
xor
push
mov
cmp
sub
stc
stos
std
add
mov
xorl
shrl
stos
arpl
sbb
outsl
sbb
scas
gs
jmp
xchg
mov
xchg
arpl
stos
mov
stc
sbb
cmp
mov
int3
cwtl
out
ja
lret
push
sub
jbe
mov
idivb
jmp
shl
or
sub
jno
aam
xchg
dec
popf
and
cmp
imul
imul
and
sub
mov
mov
pop
sub
pop
jp
sti
inc
std
and
push
dec
xor
int
adc
clc
xor
stos
xchg
cwtl
stos
xor
jg
repz
pop
pop
insb
and
lret
pop
xor
movsb
mov
push
ss
test
cltd
push
sahf
mov
mov
and
les
inc
pusha
push
hlt
mov
aam
out
fxam
arpl
sub
xor
xchg
lret
and
movsb
ja
int
mov
jl
fisubrs
mov
cs
iret
push
add
xchg
mov
nop
xchg
sub
les
scas
ret
mov
push
push
xor
into
pop
ret
cmp
loope
insl
sbb
dec
int
ds
inc
mov
jmp
mov
les
std
jle
xchg
std
push
inc
xchg
and
out
jle
sbb
jns
std
mov
leave
mov
js
cmp
inc
and
lahf
fmull
aam
lods
adc
adc
stos
mov
jecxz
call
aam
or
push
and
dec
les
std
rorl
cmpsb
dec
test
addr16
and
and
pop
pop
fmull
mov
adc
cmp
xchg
xor
jmp
call
in
mov
jge
inc
sub
lcall
addb
xchg
clc
lcall
cmpsl
ret
sbb
movsl
inc
pop
adc
aas
test
imul
fldt
sbb
or
xorl
nop
stc
cmpsl
push
pop
aad
or
fbld
jg
jb
mov
dec
out
int3
lock
loop
call
push
adc
cmpsw
jp
mov
int3
fwait
test
pop
or
push
nop
dec
jp
sub
cmp
bound
sti
mov
stos
and
mov
out
adc
pop
ljmp
inc
xor
jb
sbb
mov
in
test
bound
sub
mov
xchg
shrb
mov
push
jecxz
xor
dec
insl
and
mov
mov
scas
and
fmul
stc
jo
shll
xor
das
out
sbb
and
hlt
blsic
cmova
ret
add
lods
xchg
js
pop
adc
pop
cmpsb
jecxz
repz
cmc
push
cmp
xlat
pop
pop
jecxz
in
scas
stos
mov
pushf
push
ret
adc
lahf
and
inc
out
shlb
and
dec
clc
sbb
nop
mov
sbb
nop
divb
cltd
sbb
scas
lret
in
add
rorl
cmovns
imul
dec
scas
cmpsb
es
fildl
xchg
inc
inc
mov
push
mov
dec
xor
mov
xchg
add
mov
xor
bound
xor
and
cmc
dec
sarb
dec
xor
rcl
cmpb
push
test
scas
cld
fld
push
xor
loop
push
adcb
cmp
sub
dec
mov
pop
stos
fisubrl
insl
loop
mov
int
cmc
daa
vprotd
add
mov
push
push
jbe
jno
ja
pushf
sub
xor
sub
je
pop
fcom
jmp
enter
sbb
aam
insb
hlt
add
lea
mov
ljmp
push
mov
addl
int3
cld
jns
xor
in
ret
movsbl
or
inc
ret
pushf
adc
jecxz
mov
mov
int
push
outsb
arpl
pop
cmp
sbb
add
mov
push
outsb
cld
fisubrs
mov
and
mov
je
das
add
gs
mov
fdivs
mov
scas
mov
sbb
or
dec
clc
or
hlt
mov
call
pop
fdivl
popa
std
adc
mov
iret
aam
call
inc
sub
and
cwtl
dec
push
push
mov
dec
mov
out
in
imul
inc
pop
mov
into
push
pop
inc
mov
push
icebp
inc
inc
jg
mov
sub
test
sahf
or
js
or
fstpl
shll
sbbl
das
sbb
jb
aaa
sub
dec
repnz
mov
cmpsl
iret
mov
stc
xchg
push
mov
cmp
xchg
sub
jecxz
ror
lods
les
test
loopne
sbb
xchg
cwtl
test
dec
jge
loope
imul
cli
js
push
jmp
add
or
lahf
popf
push
mov
out
push
mov
loop
clc
nop
in
aam
in
xchg
push
jp
mov
incb
inc
in
movb
pop
xor
push
add
test
roll
sub
sub
movsl
fsub
xor
fisttps
add
leave
xor
fwait
daa
mov
xchg
xor
jmp
mov
ret
montmul
cmpsb
or
fwait
inc
pushl
mov
icebp
inc
int3
enter
push
lcall
adc
call
inc
mov
pop
add
notb
push
outsb
lea
aas
push
ficomps
and
int3
out
fdivrl
and
les
repz
arpl
jnp
lds
ja
aas
dec
in
imul
sahf
xor
xor
xorb
xor
push
mov
loop
and
js
push
cmp
mov
cmp
in
sbb
inc
add
sub
movsb
lret
push
nop
add
inc
xor
pusha
jns
add
jecxz
iret
lods
mov
or
xlat
cmpsl
pushf
and
cmp
jl
scas
addr16
in
adc
push
push
pushf
push
fwait
outsb
lock
jno
icebp
push
rcl
ret
or
lahf
repnz
and
out
add
lods
sti
push
shll
shlb
pop
mov
add
pop
outsl
je
sbb
sbb
hlt
and
fnstenv
pop
lahf
pop
adc
lea
aad
sbb
movsl
ret
outsb
pop
jnp
jne
and
push
nop
std
ds
sub
sbbl
andl
push
or
inc
sub
scas
sbb
pop
fbstp
mov
aad
inc
push
pop
mov
xor
pusha
xchg
xor
lret
dec
out
sti
sbb
sbb
or
cltd
push
or
mov
addr16
ret
fcomps
test
pop
pop
cltd
xor
shll
mov
pop
andl
ret
mulb
jg
xor
testb
inc
notb
sub
daa
lds
or
pop
iret
cmp
into
mov
xor
test
xor
jne
iret
aam
add
fscale
cmpsb
ret
lods
lahf
sub
hlt
mov
cwtl
arpl
mov
add
add
adc
cmp
adc
dec
idiv
test
xor
xor
xchg
jmp
adc
lret
mov
std
stc
fs
adc
inc
cmp
mov
repz
fimuls
mov
fcmovb
mov
popf
xor
and
cmp
jle
test
jns
inc
scas
stc
gs
pop
out
xchg
xchg
adc
mov
push
mov
pop
add
into
lods
loop
push
and
mov
mov
jge
fwait
aad
inc
mov
int
and
mov
shl
dec
scas
jns
push
add
xchg
mov
xchg
int3
sbb
add
daa
or
in
pushf
xchg
ljmp
jne
sahf
gs
cmpl
sarb
lret
lahf
loopne
dec
push
cmpsl
jp
dec
xchg
xchg
pop
in
inc
lcall
aad
mov
clc
insl
sub
mov
inc
sbb
inc
test
aas
fsubs
mov
lahf
stos
lahf
or
test
lods
add
clc
push
int3
cmp
sbb
pop
repnz
fwait
lds
pop
adc
hlt
rcr
push
ds
add
push
pop
adc
in
les
cmp
sti
addl
pop
in
xor
xor
mov
insl
gs
dec
mov
sbb
js
lret
cmpb
out
and
pop
cld
ljmp
mov
rcl
and
adc
dec
inc
bound
jno
shl
out
sbb
xchg
jecxz
cmpsl
ret
mov
sbb
lahf
or
inc
pop
xlat
mov
jb
mov
daa
repz
pushf
pushf
sub
addr16
lods
in
inc
jl
mov
call
push
sub
jbe
and
xchg
mov
in
test
pushf
cltd
add
xor
clc
mov
pop
into
jmp
imul
rclb
mov
sahf
xor
lock
pop
lret
ljmp
fstl
and
test
or
out
mov
mov
jbe
cmp
mov
imul
aas
push
pusha
fildl
sub
sbb
popa
iret
fcmovu
test
stos
cmpsl
stos
and
fcoml
outsl
aam
xor
inc
je
pop
dec
pop
js
aam
stc
jb
lods
xor
aaa
mov
int3
daa
call
out
ss
int
sub
push
daa
sbb
adc
and
and
loope
ss
rol
test
mov
push
sbb
sub
mov
shlb
add
pop
jmp
xor
inc
insb
xchg
and
add
enter
jns
push
and
xor
ja
fbstp
loop
pop
xor
pop
sbb
out
mov
dec
dec
jecxz
out
dec
adc
and
dec
ret
add
inc
cmp
mov
imul
enter
xlat
shll
out
mov
clc
inc
jmp
or
shll
std
and
jne
mov
ficomps
lds
jne
test
mov
les
ds
jbe
xor
cmpsb
and
sahf
cwtl
mov
jg
xchg
pop
pushf
mov
adc
aam
cmp
call
mov
cwtl
dec
sti
mov
lea
lcall
and
sub
jecxz
rcll
insb
out
add
mov
pop
stc
cli
inc
es
jle
xchg
cltd
lahf
ror
dec
xor
hlt
mov
mov
push
sti
cltd
not
into
iret
dec
mov
mov
jnp
jae
cmp
cltd
lret
gs
bound
adc
xor
nop
test
push
sub
lods
mov
mov
mov
lds
mov
pop
sbb
add
pop
lods
in
and
test
mov
pusha
pop
stos
pop
shlb
mov
sub
push
push
out
lods
inc
popf
roll
pop
cmp
mov
gs
mov
mov
fs
dec
dec
aas
sub
sub
xor
pop
lea
pop
xchg
cmp
push
cmpsl
cmpsl
sbb
gs
dec
sub
sub
xchg
cwtl
push
outsl
shrb
push
jne
or
or
repnz
popa
dec
pop
sti
or
imul
add
mov
mov
cltd
cs
dec
es
xor
and
cwtl
pop
in
dec
and
cld
cmpsl
pop
repnz
pop
rcl
cli
push
fstpt
fistpll
mov
or
jmp
push
imul
add
cli
jmp
scas
push
lret
jbe
adc
in
popf
or
add
push
inc
icebp
push
test
xchg
jo
pop
xchg
test
mov
scas
mov
fcomps
mov
push
in
push
mov
mov
pop
and
push
lcall
cmp
loopne
hlt
push
and
int3
cli
les
andb
iret
cmpsb
subb
cmc
test
dec
cmpsl
cli
jecxz
call
push
dec
cli
mov
outsb
hlt
es
mov
cli
push
dec
aam
xchg
pop
jo
pop
and
cltd
mov
inc
or
js
push
loopne
mov
fst
xchg
push
dec
pop
jnp
mov
js
cld
inc
repz
ja
adc
add
daa
cli
mov
fstpl
aad
loopne
enter
dec
int
mov
sub
jnp
frstor
and
cwtl
sbb
js
cwtl
lret
addl
scas
cmc
mov
or
cmp
outsb
jle
div
mov
mov
sbb
icebp
jbe
dec
sbb
adc
cld
xchg
xor
sbb
fnclex
mov
xor
aaa
add
xchg
jno
mov
comiss
test
std
fwait
cmpl
popa
mov
mov
mov
pop
jb
xor
aad
xchg
ljmp
jmp
sahf
xor
sti
test
fs
outsb
pop
adc
xor
sub
push
inc
pop
sbb
sbb
jo
fimull
sbb
mov
xchg
repz
nop
and
push
hlt
cmp
pop
mov
outsb
pushf
sub
int3
repz
push
pop
repnz
sti
or
mov
jmp
movsb
ret
mov
pop
adc
lock
mov
xchg
repnz
out
sahf
fdivs
mov
jbe
jne,pn
sbb
test
push
shll
sahf
fbld
sbb
dec
cmp
in
or
jmp
dec
test
cmc
mov
add
fnstsw
push
inc
xchg
in
dec
iret
and
mov
xor
nop
inc
xchg
pop
inc
fmuls
into
or
adc
xorl
lods
xor
mov
imul
scas
inc
cwtl
pop
mov
mov
inc
push
imul
aam
adc
jne
dec
dec
push
push
pop
xchg
xor
mov
push
mov
xor
imul
jmp
mov
inc
jae
out
aam
sbb
lret
fs
push
fs
enter
add
cs
adc
bound
int3
mov
cmc
ret
hlt
sbb
pusha
xchg
jno
or
movsl
jae
bound
mov
and
cs
es
mov
div
jle
icebp
cli
and
jno
add
jns
neg
mov
lods
jp,pn
mov
call
push
or
scas
int3
lcall
sbb
mov
outsl
cltd
into
shrb
lret
push
test
sbb
lret
notl
pop
andb
add
popf
out
fsub
out
repz
and
pusha
and
mov
dec
inc
lret
pop
cmp
pop
sbb
sub
es
dec
icebp
inc
inc
insl
push
lods
and
jmp
das
dec
mov
dec
ret
lods
push
push
sbb
xchg
push
jge
jnp
in
push
sbb
flds
cli
ljmp
clc
inc
xlat
stos
ror
xchg
mov
sbb
xor
rorl
or
push
sti
xor
stc
std
pop
lods
mov
adc
insl
jp
movb
jle
mov
imulb
lea
test
sbb
cmp
mov
xor
insl
sbb
adc
repz
mov
push
xchg
mov
fsubrp
sarb
push
cmpl
fisubs
add
loopne
mov
dec
outsb
sar
pusha
jle
pop
add
test
add
test
sbb
push
repz
push
mov
add
popf
mov
xor
cmpb
fistl
ljmp
push
pop
jb
into
rcl
popf
rolb
daa
mov
aam
inc
or
into
pop
or
fldt
xor
int3
mov
mov
add
dec
xchg
cmp
lret
in
test
adc
xor
or
dec
std
mov
ret
mov
dec
pop
sahf
cltd
sub
ja
lahf
mov
xchg
dec
fcom
xor
dec
pop
ja
cmpsl
dec
pop
outsl
mov
shl
rorb
mov
xchg
mov
cltd
inc
push
mov
gs
pop
cmp
jo
xor
movsb
dec
popa
jmp
dec
inc
pop
jns
push
shr
sbb
push
fs
and
stos
mov
lret
ret
dec
dec
nop
sbb
or
scas
or
sti
inc
cli
in
out
xchg
cmpsl
sub
mov
js
lcall
mov
rorb
dec
adc
aaa
cmp
xor
push
ljmp
mov
sbb
leave
jg
dec
popf
pop
pop
mov
and
loop
and
pop
jp
push
outsb
push
xor
jp
inc
addb
mov
push
mov
jns
ret
icebp
cmpsl
xlat
lods
jle
es
sub
or
in
or
xchg
xor
out
jmp
jo
and
stc
sbb
lret
cmpb
sub
pop
mov
sbb
mov
rcll
imul
add
shlb
mov
popa
sub
jo
ss
lret
jp
sti
ret
pop
cmpsl
roll
loope
out
shll
lea
icebp
insl
dec
int3
add
pop
xor
push
add
out
ss
sbb
and
add
pop
data16
rclb
or
xchg
aam
sbb
or
jo
lods
in
jno
out
mov
popa
xchg
cmp
mov
mov
push
aas
cmc
dec
xchg
cmp
or
xchg
inc
cmp
push
push
cli
pop
add
inc
push
pop
popl
je
xchg
lea
dec
gs
inc
shrb
iret
mov
cmp
mov
pop
push
fcoml
lods
mov
jmp
push
push
inc
jae
cld
or
sti
cmc
js
dec
out
or
jne
jg
mov
insb
test
iret
or
fcoms
jb
imul
dec
xlat
jns
jo
mov
xchg
data16
jae
mov
or
cmpl
bnd
cmp
cmc
jmp
mov
adcl
add
ficoml
adcb
int
shr
outsl
add
jg
ja
sbb
es
out
cli
cmp
cmp
push
xor
cmpsb
xchg
cmp
or
mov
insl
xor
push
scas
xor
cmp
dec
out
inc
pop
or
js
cmp
int3
sbb
addr16
jo
sti
movsl
jecxz
pop
jno
popa
aas
int
ss
xor
call
jg
out
mov
add
ret
xor
mov
test
mov
inc
sti
xor
loopne
mov
add
mov
stos
int
jnp
mov
sbb
sbb
ds
inc
insb
pop
jns
mov
cmpsb
cmp
inc
scas
fldl
adc
fildll
mov
movsb
je
push
shrb
fcoml
jmp
push
add
pop
xor
dec
repz
jne
or
push
adc
lahf
inc
mov
sub
lods
dec
sbb
mov
and
out
std
mov
aam
les
push
mov
lds
popa
pop
fldl
xor
push
adc
sbb
rorl
or
jb
inc
cwtl
pop
mov
cmpsb
sti
outsb
mov
or
orl
cmc
inc
xor
sub
nop
xchg
jmp
sub
clc
or
jbe
je
out
mov
pop
imul
or
aam
mov
dec
or
ljmp
cmp
fnstcw
rclb
in
clc
std
jno
push
ljmp
pop
pop
js
pop
test
pop
repz
mov
sbbb
ret
add
push
popa
mov
pop
inc
fdivs
add
fcompl
dec
dec
popf
test
aam
xchg
cld
xchg
push
pop
cli
inc
cmpsl
xor
cli
cmp
enter
out
sbb
push
mov
push
push
jo
loope
clc
cmc
and
cmpb
ja
lret
test
ret
cmp
cmp
push
and
jmp
push
imulb
das
call
aam
pop
pushf
std
cmp
das
jmp
call
dec
pop
xchg
jle
int
shrb
ret
mull
inc
adc
popf
outsl
cmc
jmp
lcall
sahf
hlt
cmpsb
xchg
lcall
int
push
inc
mov
dec
jb
fs
dec
mov
out
es
jecxz
mov
fs
repnz
add
cmpsb
sti
xchg
or
fmull
sub
xchg
cwtl
xchg
mov
mov
scas
cmp
sbb
orb
xor
shll
mov
faddl
sarb
insl
icebp
sub
pop
and
fisubrl
add
stos
adc
repz
iret
and
rcr
lret
lods
mov
pop
loope
mov
out
dec
and
mov
add
lret
sub
adc
pop
iret
repnz
xor
or
cmp
fdivrl
clc
sahf
fistpl
and
popl
inc
lret
jge
dec
jp
mov
stos
cld
mov
mov
aaa
dec
test
jl
inc
mov
rcrl
xchg
mov
ret
loope
insl
aas
cmp
mov
dec
dec
xchg
mov
dec
nop
jl
movsb
addr16
popa
push
xchg
mov
xor
roll
xor
jo
and
jne
int
ret
inc
push
lcall
data16
pusha
shll
ds
bound
sbb
movsb
push
test
das
std
sbb
cld
sub
sub
sub
lock
pop
mov
push
sbb
mov
es
int3
dec
movsb
xchg
mov
cltd
jno
std
mov
icebp
call
lds
push
push
push
push
je
ret
imul
cltd
leave
lods
push
jns
push
add
jecxz
mov
xchg
repnz
jl
cmp
into
lods
pop
imul
lea
test
adcl
fsubs
insb
cmp
inc
fs
or
xor
aad
out
outsb
xchg
mov
call
jns
add
jg
dec
shlb
adc
scas
lcall
test
push
bound
mov
leave
sub
sub
movsl
jmp
in
dec
cs
fildl
add
ret
inc
arpl
lret
sub
addr16
enter
popl
cs
int
sub
out
mov
pusha
movsl
adc
movsb
mov
mov
push
stos
repz
lret
cmpsl
sbb
outsb
into
mov
jb
arpl
sbb
in
mov
or
dec
into
cmp
jbe
fwait
mov
sub
notl
cmc
nop
scas
sub
bound
dec
inc
mov
or
das
insb
xor
sub
jne
out
leave
in
sbb
nop
stos
sub
cmc
hlt
pop
into
pusha
pop
xor
int3
xchg
cmc
cmp
in
out
in
mov
push
mov
jmp
scas
xchg
inc
inc
leave
push
loop
add
mov
loope
ljmp
daa
hlt
adc
cmp
xchg
pop
sti
push
xorb
push
mov
xchg
xchg
imul
shrb
leave
sub
popf
addr16
addr16
inc
gs
daa
imul
mov
std
or
xchg
leave
and
sbb
sbb
loope
lock
popa
dec
fisubs
pop
dec
popa
sub
add
mov
mov
dec
mov
cmpsl
cmpsl
imul
adc
add
dec
sub
push
cmc
mov
xchg
shll
and
das
xchg
in
sahf
pushl
arpl
rcrb
xor
movsl
out
sub
inc
adc
std
stos
insb
cmp
cmp
in
xor
cs
sub
sub
adcb
aas
dec
mov
cltd
pop
pop
push
rcrl
mov
mov
adc
and
push
testb
ljmp
pop
jbe
dec
leave
fs
mov
lock
lods
inc
sbb
subb
mov
jle
add
rclb
add
mov
mov
dec
mov
xor
sar
push
mov
dec
jecxz
xchg
xor
mov
ljmp
xor
aam
fcoms
hlt
adcb
in
repz
daa
lahf
add
jb
fucom
jbe
ljmp
pop
popf
and
call
arpl
loope
mov
arpl
push
outsb
lds
sub
adc
cli
lods
stc
sbbb
mov
adc
es
lahf
jno
jecxz
aaa
xchg
les
jbe
xor
dec
icebp
jecxz
fsubs
xor
pop
dec
es
mov
jge
lds
ss
testb
or
add
push
ret
dec
push
inc
icebp
cmp
rolb
fmul
loopne
mov
xor
fdivrs
adc
push
xor
push
push
rorl
mov
popf
leave
lret
in
insl
jmp
sbb
adc
int3
push
lcall
arpl
das
push
loope
xchg
pop
push
or
pop
das
cli
adcl
or
and
out
pop
xchg
or
rcrl
inc
stos
sti
push
add
popa
ret
or
lcall
jecxz
push
mov
mov
mov
fstpt
xor
pop
scas
xor
push
scas
lcall
stos
fwait
xor
jae
xlat
cmp
push
outsb
mov
clc
cmp
jnp
xchg
mov
adc
fldenv
sbb
aad
loopne
pop
pop
add
pop
adc
jmp
aad
lods
in
into
mov
cmpsl
repz
pop
aaa
jg
int3
sbb
adc
xchg
pop
pop
push
xchg
in
xchg
cwtl
mov
inc
andl
and
dec
and
sub
jle
stc
out
xchg
gs
or
lret
arpl
dec
mov
pop
jno
xor
movsb
pop
sbb
xorb
xor
xor
scas
and
in
fcoml
mov
or
fiadds
inc
mov
pop
data16
push
in
es
xor
and
es
sub
jae
push
or
sub
int
and
mov
jmp
lea
inc
push
add
aaa
loope
inc
mov
mov
mov
pop
dec
movsl
inc
sub
mov
sti
xchg
bnd
mov
outsb
xchg
push
inc
or
sub
loop
test
call
inc
pop
xor
xor
pushf
imul
repz
lods
loope
push
dec
cmp
xchg
ljmp
or
ja
lahf
lret
xchg
test
sub
test
sub
push
push
fstpt
sbb
loope
out
jmp
cmp
lahf
pusha
bound
add
inc
push
daa
js
xchg
mov
mov
movsl
jle
cs
xor
dec
roll
cli
movsb
clc
add
loope
test
add
adc
sbb
pop
jae
push
adc
inc
xor
or
pop
inc
xlat
lahf
es
inc
cmp
push
mov
xchg
mov
mov
cmpsb
fldcw
push
lea
xorb
and
inc
dec
jmp
fwait
scas
pusha
pop
fnsave
or
rclb
add
shlb
imul
daa
cld
outsb
jecxz
enter
jge
aaa
sbb
push
sub
iret
out
mov
ret
daa
mov
sbb
in
outsl
push
jl
jns
std
addr16
sub
add
shll
repnz
push
gs
mov
sub
and
pop
out
outsl
in
mov
aaa
sub
pusha
xchg
cmpsl
stos
ret
cmp
mov
sub
out
pop
or
test
call
add
mov
fiaddl
in
mov
mov
sbb
aad
cwtl
js
decb
sbb
imul
dec
decl
rcll
aam
jp
push
popf
mov
pop
jb
cmc
inc
push
or
lcall
mov
cmp
dec
sub
out
push
push
jo
das
mov
mov
repz
out
xor
xor
scas
dec
lds
xchg
xorb
push
mov
vpaddd
sti
mov
add
in
push
or
clc
aad
jo
sbb
push
add
mov
clc
xchg
cld
mov
jecxz
repnz
sti
fwait
mov
out
cltd
sub
mov
mov
pop
pop
sti
mov
add
jne
xchg
xorb
cmp
aam
das
js
mov
roll
mov
pop
mov
push
enter
add
dec
adc
iret
xlat
lods
shrb
andl
mov
push
or
lea
rol
inc
clc
outsl
mov
mov
in
or
call
movsb
jno
sub
xchg
nop
jge
cmp
adc
and
push
xlat
ret
sbbl
jmp
mov
rolb
add
push
pop
add
xchg
xor
ss
dec
cmp
sub
pop
add
movsb
inc
into
inc
sub
lcall
lds
fnstenv
lock
hlt
xchg
mov
sbb
subl
inc
mov
popa
sub
insl
and
push
inc
add
xlat
push
adc
es
dec
in
mov
out
iret
aas
loope
add
push
xchg
fwait
std
add
data16
adc
rcrb
xor
fmulp
push
adc
rcll
sahf
dec
xor
xchg
jp
and
iret
push
insb
loope
mov
push
shlb
imul
enter
mov
nop
outsl
ja
out
aam
lahf
push
cmp
cmpsl
jns
mov
cmp
mov
or
negb
lods
out
aam
out
jmp
mov
mov
jl
sbb
xchg
sub
std
insl
push
and
into
xchg
pop
sti
adc
lcall
sbb
lret
push
aas
and
mov
stc
pop
push
int3
lock
inc
pusha
imul
dec
cmp
and
stos
mov
jecxz
scas
stos
jg
jmp
es
pop
pop
ss
inc
and
inc
lds
out
loope
lret
daa
das
push
clc
test
mov
mov
loopne
jnp
jno
jne
add
sub
dec
pop
stos
mov
ret
jmp
dec
xor
dec
mov
cld
leave
xor
bswap
lods
cmp
cmc
push
pushfw
mov
std
and
dec
mov
xchg
add
xor
jae
jecxz
fs
stos
cmp
aam
xchg
mov
cmp
fisubl
dec
mov
push
dec
test
jg
adc
inc
pop
mov
xor
fldl
push
enter
fdivrs
mov
in
cmpsb
dec
data16
imul
arpl
sub
xchg
fcmove
jecxz
xchg
and
in
adc
xor
xchg
dec
push
shlb
adcl
push
daa
mov
cmp
imul
cmpsl
inc
or
loope
rcrb
decl
test
shr
popf
dec
and
xor
faddl
insb
lods
mov
add
xor
inc
xlat
lahf
ror
dec
daa
cli
cmp
xchg
lds
push
popa
adc
roll
cmp
das
or
test
pop
mov
jle
les
xchg
fidivrl
ficoms
in
jne
xchg
xchg
add
scas
lret
mov
cld
outsl
loop
loope
mov
fdivrs
inc
fnstenv
mov
sarl
addr16
jmp
jp
cmp
sub
bound
cltd
cwtl
jp
test
and
lods
jb
pop
fistl
ja
loope
push
and
add
pop
jp
xcrypt-ofb
cmpsl
sub
push
cld
inc
or
pop
jne
lods
mov
pop
insb
sbb
fwait
xor
out
and
in
push
cmp
xchg
jmp
clc
adc
pop
sub
or
lock
out
mov
xchg
sub
push
or
pop
repz
in
or
cmp
aaa
sti
inc
adc
mov
sbb
cmpsb
cmc
mov
icebp
insl
pop
jmp
shlb
cmp
xchg
movsb
mov
mov
scas
je
sbb
aaa
sbb
or
mov
xor
or
movsl
dec
ljmp
pop
push
mov
sub
or
or
jae
xor
mov
add
sarl
cmp
les
cs
in
and
subl
jecxz
push
dec
sub
cmp
dec
jns
jo
fs
bound
inc
pop
ljmpw
mov
ss
pop
inc
or
mov
and
les
mul
roll
pop
stc
inc
lcall
hlt
jle
xor
neg
cmc
jno
dec
sbb
mov
xchg
inc
movsl
mov
adc
mov
sbb
jb
or
dec
aas
into
or
jecxz
addr16
push
cs
call
xor
aaa
les
iret
dec
mov
adc
inc
add
mov
sbb
aas
pusha
ljmp
pop
repnz
dec
cmp
lods
pop
fxch
pop
cmp
loope
fnstenv
pop
outsb
mov
mov
movsb
xor
sbbb
xchg
ret
xlat
mov
mov
push
mov
in
lods
ja
test
cld
push
xchg
data16
outsl
sahf
push
lods
std
add
inc
in
dec
push
xchg
dec
subb
sahf
push
mov
jg
test
lahf
rorb
enter
into
add
mov
jno
inc
or
and
mov
xchg
out
int
push
sbb
movsl
lret
into
and
jg
sbb
fdivrs
mov
dec
dec
and
sub
insb
fdivl
add
xor
out
adc
push
mov
in
xor
pop
outsb
jge
xchg
fwait
mov
and
fiaddl
rclb
loopne
and
pusha
lods
and
mov
jmp
loope
repnz
test
mov
xchg
jmp
and
fistpl
lret
add
lret
pop
pop
int
push
mov
xchg
popa
pop
mov
mov
dec
in
pop
hlt
xor
pop
sbb
arpl
stos
xchg
nop
bound
stos
pop
cmp
mov
sub
jo
es
mov
dec
and
in
mov
jns
pushf
test
test
pop
jecxz
repnz
fcmove
jl
push
add
movsl
jno
inc
nop
arpl
mov
into
xchg
jne
push
popf
xor
pop
jmp
pop
mov
mov
mov
sub
mov
clc
nop
xor
add
test
sbb
mov
aaa
cmp
push
in
and
sbb
dec
movsb
mov
xorb
iret
insb
sbb
sub
ret
dec
out
push
or
jge
xor
test
push
incb
xchg
dec
cld
shl
bound
push
imul
cmp
cmp
test
cmp
sbb
and
int
xchg
pusha
jl
push
xor
aas
or
jne
imul
dec
nop
rolb
leave
popf
fdivrs
mov
cltd
sbb
dec
or
adc
cmpl
aaa
xchg
idivb
mov
cwtl
mov
xor
dec
or
lods
mov
sub
push
and
loope
fistl
mov
test
jns
outsl
shll
das
andl
inc
fcmovne
jne
ss
rolb
mov
lahf
ret
push
imul
pop
mov
cs
pusha
mov
out
sub
xor
or
pop
mov
xchg
popf
mov
das
sbb
inc
pop
mov
xor
jge
cld
out
insb
rcll
dec
in
sbb
movsl
mov
scas
out
inc
push
clc
in
cs
sub
sbb
icebp
sub
adc
enter
lods
je
xchg
push
js
pop
pop
cmp
in
sbb
fisubs
add
movsb
js
aam
js
sbbl
stos
ret
mov
push
bound
sbb
jbe
sub
cmp
ret
repnz
or
jecxz
ja
or
jle
sti
inc
clc
jb
jecxz
add
stos
nop
pop
sbbl
mov
sbb
fbstp
push
push
hlt
into
arpl
fcomps
repz
out
or
loop,pn
xchg
and
dec
inc
enter
jb
mov
cmc
pop
lret
inc
xchg
je
adc
xchg
imul
jg
test
popf
mov
std
sbb
xor
pusha
cmpsb
enter
inc
popa
lret
out
jge
xchg
in
jg
mov
fnstcw
mov
push
pop
sbb
out
add
jg
pushf
pop
add
mov
mov
loopne
in
aas
repz
adc
mov
mov
or
lea
fldt
int
into
pop
loop
pushf
ret
and
adc
sub
pusha
jl
add
rcrb
fnstenv
jg
stos
imul
mov
les
cmp
or
mov
sbb
push
es
adcl
xor
addr16
pushf
add
pop
jecxz
negl
cmp
sbb
aad
pushf
out
mov
cmp
mov
ret
xchg
push
xor
es
mov
daa
adc
cmp
mov
mov
jmp
scas
push
ret
or
clc
push
aaa
sub
push
xchg
jmp
push
inc
mov
xchg
fwait
pop
adc
adc
repz
mov
cmp
add
push
pop
imull
in
mov
mov
into
and
jbe
inc
inc
mov
xor
adc
lock
bound
push
in
mov
cs
bound
nop
lock
outsb
sarb
pop
push
mov
ror
cmp
out
vdivpd
inc
test
push
cmp
mov
insl
push
fcoml
test
into
les
pop
add
shlb
rorb
sbb
push
cmc
push
ss
fmul
dec
mov
dec
mov
xor
push
imul
out
pop
outsl
das
movsb
mov
dec
jg
out
cli
outsb
add
fwait
movsb
lcall
sub
or
lock
mov
lret
sub
out
test
inc
push
mov
sbb
scas
lahf
call
inc
fcomps
icebp
imul
aad
loopne
inc
repz
enter
cli
loop
pop
sbb
add
sbb
ja
ljmp
fwait
push
fnstenv
push
lret
addl
aam
fbld
xchg
icebp
int3
push
pop
inc
lret
cli
repz
inc
fs
cmp
xchg
addr16
fucomip
mov
nop
add
cmpsl
jmp
int3
mov
jae
dec
cmp
jnp
inc
hlt
inc
repz
shr
xlat
xor
sbb
lods
mov
out
shrl
jp
cli
scas
into
inc
js
push
push
sub
cli
cmp
push
cmpsb
es
pop
mov
mov
inc
sbb
inc
add
mov
fsubr
inc
dec
cmc
rcll
daa
sbb
mov
lahf
xlat
cmp
xchg
adc
gs
jp
add
dec
or
scas
outsb
mov
test
imul
popa
stos
addr16
ljmp
insb
in
sbb
les
xlat
data16
sub
ljmp
pop
push
push
insb
lods
push
outsb
test
adcb
addr16
aad
mov
ja
pusha
rcll
jecxz
and
xchg
rol
out
test
sbb
ret
xchg
pop
or
xchg
stos
push
stc
push
pop
loop
ret
jmp
add
sti
pop
outsl
ss
cmc
add
jnp
mov
xor
pop
iret
push
mov
rorl
pop
out
or
adc
addb
mov
fs
xchg
xor
lds
ja
xlat
les
inc
outsl
sub
mov
push
sbb
gs
jl
into
dec
lcall
mov
push
scas
sbb
xor
repz
adc
sub
or
addb
out
xor
mov
cld
or
fstps
scas
lock
imul
sbb
xchg
xor
mov
ficoms
xlat
mov
rcll
mov
xchg
xchg
ja
sub
adc
stos
push
dec
repz
mov
mov
adc
push
ret
fnsave
mov
mov
push
mov
pop
sub
pop
rorb
dec
hlt
adc
sub
adc
js
pop
xchg
and
imul
cmp
add
out
dec
pop
jecxz
push
das
fisubs
pop
es
imul
aam
ret
or
or
jb
pop
push
mov
pop
stc
loopne
hlt
cwtl
in
cmp
xorb
movsl
add
jmp
pop
inc
dec
xlat
lock
in
pop
pop
pop
pop
xchg
sahf
pop
cmpsl
xor
or
inc
out
mov
dec
cmpsb
mov
push
les
dec
pop
loope
fdivrs
lods
scas
mov
adc
inc
rep
cld
pop
hlt
mov
push
mov
xor
stc
dec
daa
test
test
aam
mov
movl
push
test
mov
out
mov
icebp
jo
ja
sbb
cmp
adc
lret
enter
xchg
inc
xchg
or
fbld
push
pop
mov
xor
cmp
lods
leave
jne
xchg
cmp
fwait
ja
loope
pusha
jmp
mov
es
scas
divb
jp
outsb
lods
sbb
push
inc
jb
xchg
sbb
jb
mov
test
inc
scas
stos
and
sbb
pop
enter
pusha
mov
call
cmp
inc
test
push
push
cmpsl
cli
mov
mov
adc
dec
pop
jae
jmp
mov
test
mov
mov
pop
cld
and
mov
inc
jbe
add
jl
insl
ds
mov
push
sbb
xchg
xor
mov
mov
push
and
rol
loope
pop
sti
xchg
pushf
xlat
inc
icebp
jg
mov
test
xor
out
push
jecxz
inc
inc
sbb
stos
xchg
js
pushf
jl
bound
and
add
pushf
cmp
ret
cmpsb
aas
cld
adc
push
xor
sbb
or
xor
loope
imul
or
inc
mov
fs
mov
adc
or
inc
fildl
test
xchg
fisubrs
or
cwtl
clc
push
aad
xor
pop
mov
jns
pop
popa
ss
ss
pop
out
adc
imul
pop
enter
or
enter
imul
jnp
and
mov
daa
xchg
push
mov
pusha
test
mov
jb
cmpsl
mov
shrl
or
ljmp
ret
inc
xchg
stc
sub
fisttpll
mov
add
out
adc
sub
push
ss
movsb
pop
popf
cmp
mov
jnp
push
xchg
add
fistpl
mov
outsb
mov
ja
roll
sbb
popf
pop
sti
xor
movsb
jno
sub
in
divb
loope
adcb
int
pop
dec
pop
inc
into
mov
orb
pop
aaa
push
sub
mov
adc
out
test
xchg
pop
imul
nop
lret
in
push
mov
lcall
dec
mov
push
dec
outsl
mov
fisubs
or
ret
out
popa
or
and
in
repnz
sub
dec
lahf
andb
add
stos
cli
into
push
push
repz
ds
push
xchg
mov
filds
in
std
test
pop
outsl
mov
insl
ljmp
dec
pop
in
sbb
mov
add
pcmpgtb
inc
divl
imul
mov
cltd
dec
and
jne
cmpsb
aaa
rorb
sub
dec
lods
in
or
cmp
cmpb
jp
and
push
or
pop
cmp
add
outsl
aas
ficoms
negb
pop
test
fstps
jl
inc
test
lods
push
sub
insl
lret
mov
lods
mov
inc
push
jae
movsb
insl
dec
jns
cli
jo
les
das
push
mov
test
imul
test
xchg
outsb
sub
les
out
adc
aas
call
fsubrl
xchg
push
scas
jne
popf
imul
add
shl
mov
mov
pusha
mov
fs
ja
adc
dec
adc
xor
fisubs
cmp
pop
orl
shrb
aas
mov
enter
pusha
mov
jo
mov
rclb
ja
and
mov
sahf
loopne
jno
sbbb
adc
jp
pop
mov
dec
leave
aaa
les
jb
pop
pusha
adc
movb
aas
testl
pop
jae
jmp
repz
adc
push
fldt
repnz
aas
pop
shlb
xchg
xor
jecxz
inc
insl
adc
aaa
leave
ja
jo
fstps
js
fisubl
and
andl
out
imul
dec
pop
mov
mov
pop
clc
xchg
hlt
push
cmp
mov
dec
mov
daa
dec
push
sub
fisttpl
cmp
add
cmp
test
into
jne
push
mov
sub
inc
xchg
pushf
adc
pop
fcmovnu
sti
sub
hlt
stos
mov
pop
xchg
not
gs
popa
loope
push
mov
test
push
lods
out
call
mov
jb
aas
push
repz
out
xchg
fldl
pushf
pushf
movsb
push
int3
sti
lret
pop
test
xor
aam
rol
je
pop
rol
ljmp
inc
adc
sub
pop
sbb
fsts
loopne
es
imul
popa
aas
jno
ds
push
fnstsw
mov
push
adc
sub
sbb
pop
dec
pop
add
sub
fwait
cmp
lcall
pushf
push
jg
pop
lret
fisttpl
xchg
mov
mov
ja
and
sti
int
cs
mov
testl
lret
gs
scas
cmp
cmp
or
rcr
stos
cld
pusha
fcmovu
push
stos
pop
pusha
loopne
or
adc
shlb
inc
fwait
or
lea
arpl
cmpsb
jbe
or
xor
inc
xchg
and
cltd
push
ss
xchg
ss
add
ljmp
pop
jle
out
ja
xchg
adc
pop
dec
out
push
xor
adc
cli
mov
pop
pop
lcall
pop
int
std
xor
mov
mov
cld
cmpsb
xor
fstpl
imul
aad
push
push
mov
xor
repz
or
lret
adc
sbb
or
jno
xor
lock
push
mov
sbb
mov
es
mov
pop
xchg
and
pop
adc
mov
pushf
push
sbb
adc
scas
shlb
gs
jae
shrl
orl
std
outsb
incl
add
add
int3
pop
aam
dec
mov
push
idivl
int
enter
pop
aam
stc
cmpsl
les
insb
test
std
dec
xchg
cmp
mov
enter
pop
aaa
sbbl
xchg
nop
mov
push
pop
rclb
rol
xor
cmp
and
mov
pop
pop
and
push
mov
cltd
rclb
pop
adc
lret
test
sahf
int
dec
lds
add
mov
inc
imul
push
sub
mov
mov
push
mov
int3
xor
push
movsb
xchg
stos
arpl
roll
dec
ret
cmp
testb
dec
ja
imul
inc
addr16
cli
lcall
dec
ret
add
rclb
in
aam
ljmp
mov
fdivrs
mov
inc
stc
push
ja
je
sbb
sbb
sbb
icebp
push
in
xchg
dec
cmp
mov
sbb
add
sti
and
mov
icebp
xchg
loopne
jmp
shl
in
repz
loope
test
loop
cld
sbb
jle
aad
or
popa
push
add
hlt
js
cmc
jo
idiv
popf
js
pop
sub
mov
in
cltd
mov
xor
js
pusha
jg
mov
xor
dec
fs
jg
andl
inc
ds
xchg
pop
xor
adc
or
sbb
ds
xchg
inc
mov
call
adc
mov
sahf
bound
lahf
insl
test
dec
out
adc
cs
addr16
mov
pop
sbb
sti
mov
xchg
insb
fdivs
imul
rcll
push
lahf
pop
adc
mov
int3
xchg
jg
jb
std
push
fxch
inc
or
dec
lahf
pop
ljmp
or
jecxz
into
add
and
shll
inc
cmpl
insl
mov
in
add
jle
stc
into
test
out
ss
sub
pop
pop
inc
dec
repz
call
lods
fdivrp
jnp
jmp
add
test
xchg
inc
xor
outsl
into
jmp
std
aad
in
sub
fs
dec
mov
and
sub
movsb
push
mov
inc
in
add
fwait
shlb
fs
stos
enter
pop
out
into
out
mov
out
sbb
pushf
add
mov
mov
and
negl
sub
fdivl
cmpsl
xchg
lea
mov
adc
cmpb
loop
loope
jne
fs
push
into
lds
adc
xor
ss
scas
fpatan
shr
out
sub
cwtl
test
jp
sub
pop
loopne
jo
jae
pop
mov
loopne
or
jbe
cmp
cmp
mov
pop
insl
jo
out
adc
or
aam
push
iret
flds
pop
and
gs
popa
add
cmp
subb
xchg
incb
bound
xor
leave
xchg
pushf
pop
push
push
les
lea
mov
cmp
push
pfnacc
jb
add
imul
mov
stos
in
lods
fisubrs
xchg
sub
mov
push
ds
xchg
inc
scas
jb
cmpl
popf
lcall
in
cmp
cmp
imul
lods
clc
rolb
xlat
xor
push
popf
xchg
aad
sbbl
mov
shrl
mov
adc
mov
popl
fisubrl
int
fnstenv
mov
jo
add
aam
mov
push
jo
cmp
outsb
sub
out
jmp
aam
fdivr
loopne
xchg
ljmp
in
dec
stos
dec
hlt
push
mov
mov
add
jmp
pop
adc
out
pop
push
pop
dec
and
ss
cwtl
movsl
xchg
iret
das
pop
add
arpl
cmp
out
mov
jle
and
adc
sbb
mov
insl
mov
sets
sub
into
pop
xchg
sti
inc
out
jno
pop
xchg
movsb
cmp
andl
cmpb
cltd
fimuls
pushf
fistpll
jo
sti
inc
ret
scas
sbb
movsb
jge
jecxz
sbb
cmp
mov
xor
push
imull
mov
xchg
ja
or
popa
jbe
cwtl
mov
jl
aam
jge
push
lods
cmp
push
dec
inc
inc
out
cltd
mov
cli
or
xor
stos
adc
arpl
popa
fs
fisttps
mov
push
dec
sub
repnz
aas
loopne
add
fnstenv
lods
and
test
add
and
lret
ror
jne
add
cltd
and
xchg
push
pop
in
js
test
scas
hlt
mov
dec
enter
mov
aad
mov
ljmp
or
lds
fistps
xor
pop
ja
or
push
mov
fcoms
dec
popf
dec
dec
inc
mov
dec
push
xlat
mov
imul
cmpsl
call
xchg
mov
sbb
xlat
adc
mov
sar
dec
je
cmp
sub
scas
add
lods
dec
adc
add
inc
dec
cmc
mov
dec
adc
mov
add
fs
adc
mov
mov
dec
xor
shl
dec
inc
cmp
cmpsb
sti
lret
adc
jne
mov
jmp
sbb
std
js
jbe
push
int3
imul
mov
repnz
call
cmpsl
inc
mov
inc
push
lock
add
mov
cmp
roll
or
movsb
push
test
sub
pop
dec
cwtl
ficoml
xor
mov
aas
sahf
pop
mov
icebp
cmp
mov
test
jp
sbb
mov
jg
jp
dec
jge
popf
xchg
pop
xchg
mov
mov
add
and
and
push
movsb
repz
and
call
out
lret
aam
jns
jne
pop
or
icebp
pusha
pop
fs
bound
aam
pop
push
jle
jecxz
or
push
xchg
pop
cli
lret
ljmp
push
popf
add
pop
jl
arpl
lret
inc
out
jmp
mov
xor
cmp
jmp
push
jmp
std
xor
movsb
clc
shrb
or
lahf
xor
push
xchg
lret
sbb
out
daa
push
and
icebp
call
or
popa
mov
fisubrs
in
add
mov
mov
shlb
xchg
ret
adc
movsb
lret
cwtl
mov
dec
aaa
leave
mov
fs
push
sub
repz
pop
jle
iret
xchg
in
and
inc
inc
in
jo
bound
test
jae
iret
stos
bnd
pop
aas
xchg
mov
mov
call
push
jne
cmpsb
call
xchg
fisttps
daa
pop
push
jb
push
mov
sbb
cmp
cmc
addr16
jmp
pop
adc
aaa
insl
mov
pushf
sbb
push
shl
ja
lret
jg
jmp
insl
mov
sti
mov
mov
int
push
push
push
lods
xchg
lea
mov
pop
loop
inc
cld
push
and
mov
mov
adc
dec
xchg
andb
fstps
adc
inc
dec
jle
popf
enter
test
pusha
stc
sbb
inc
pushf
orb
rclb
repz
xor
push
cmp
gs
rcll
sub
aaa
sub
dec
cmc
aas
inc
pop
pop
insb
rcll
add
or
loopne
stos
jne
pop
and
sbb
leave
dec
fdivrp
lods
std
mov
movsb
dec
mov
inc
pop
pop
sbb
data16
xchg
repz
imul
mov
mov
hlt
das
iret
inc
xchg
inc
add
inc
sbb
jno
jge
rcrl
ljmp
aas
jnp
inc
rcrl
push
cmp
data16
jp
mov
out
jnp
das
fadds
outsb
std
scas
lret
and
inc
pushf
pcmpgtb
jge
les
test
push
lahf
mov
adc
pop
ljmp
test
mov
test
testl
movsb
fnstcw
lcall
cmpsb
int3
lock
mov
jb
fcoms
xor
inc
dec
pop
dec
or
aam
xchg
jle
test
xchg
fistl
xor
xchg
mov
sub
mov
pop
push
mov
adc
mov
lods
mov
adc
aaa
push
pop
adc
scas
scas
pop
fldenv
fucomi
int3
sti
cmp
sti
push
pop
jns
fsubl
inc
sub
push
or
lds
fisubrl
xor
mov
cmp
push
sbb
enter
or
vmwrite
push
nop
stos
push
xchg
outsb
or
orb
pop
mov
sti
fwait
jp
push
or
xor
inc
mov
nop
and
mov
mov
mov
mov
mov
xchg
outsb
enter
cs
push
sbb
mov
xorb
add
scas
mov
adc
adc
dec
xor
push
pop
push
xchg
sahf
decb
push
jecxz
shrl
repz
inc
scas
inc
cmp
das
call
pushf
test
outsb
inc
xchg
es
bound
pop
inc
pushaw
add
dec
sbb
pop
xchg
mov
cs
pop
filds
mov
and
or
jecxz
mov
aam
stc
call
xor
mov
add
sbb
xchg
out
push
lret
inc
jae
pop
inc
insb
std
and
dec
addb
push
xchg
sarb
fcmovnbe
push
mov
hlt
dec
adc
inc
sub
iret
icebp
lods
xchg
imul
fsubp
pop
data16
enter
test
sbb
push
or
push
inc
adc
loop
std
in
adc
fwait
xchg
cs
sti
popf
pop
dec
dec
mov
notl
in
pop
and
push
pop
mov
iret
pushf
dec
arpl
int
dec
mov
fwait
xor
sub
shl
mov
movsl
jmp
inc
lret
jae
aad
cmp
dec
lds
lods
loop
out
das
xor
cmp
or
rclb
jo
scas
adc
xor
das
clc
fwait
jle
lea
test
sbb
sahf
adc
xchg
cmp
ret
push
push
cmc
push
cmpsl
sti
nop
cltd
cmpl
push
inc
sub
aam
sub
fs
shlb
jle
and
add
repnz
jnp
call
pop
push
cli
dec
and
or
xor
jmp
lds
adc
cmp
test
rcl
sarb
or
cs
push
sub
pop
mov
lea
sbb
mov
loope
ret
div
jno
mov
add
pop
lret
pop
mov
cmp
fistl
dec
or
cwtl
dec
sbb
int3
push
ss
movsl
mov
idivb
add
negb
mov
push
insb
jne
cmp
mov
ds
or
lods
mov
push
push
and
or
xor
shlb
cmp
imul
push
pushf
test
dec
mov
adc
mov
push
xchg
dec
xchg
push
sub
repnz
xchg
daa
cwtl
das
xor
sub
sub
scas
es
mov
pop
add
jge
cltd
pop
into
mov
scas
jp
push
mov
cmc
add
int3
int
mov
adc
loopne
and
out
rorb
repz
dec
bound
and
or
cwtl
jno
mov
pushf
add
and
daa
roll
mov
pop
iret
xchg
sti
enter
mov
sub
inc
dec
or
xlat
test
pop
and
repnz
data16
inc
mov
xchg
add
pop
mov
jl
sub
push
test
ljmp
mov
jae
nop
rcrb
aaa
pop
mov
push
stos
jl
outsl
dec
sub
mov
outsl
cmp
cs
xchg
je
int3
jg
bound
loop
lahf
adc
ret
test
xchg
and
add
pop
sub
mov
cwtl
push
mov
daa
sub
pop
jns
pmullw
push
mov
jmp
adc
add
xchg
mov
cld
jge
sahf
inc
mov
and
or
jne
mov
xlat
inc
in
jecxz
cmc
xor
scas
mov
lods
mov
out
cmp
cmp
fxch
jnp
or
jno
jmp
mov
das
sbb
mov
sbb
adc
movsb
sbb
mov
dec
stc
call
lds
out
xchg
cld
xor
les
xchg
sti
rolb
xchg
inc
cmc
or
and
sbb
push
pop
inc
imul
push
push
pop
mov
mov
xor
in
and
or
add
mov
shrl
jno
rcrl
aam
mov
movsl
loopne
jle
ljmp
rorl
adc
lret
jbe
mov
add
pushf
fdivp
inc
mov
xchg
gs
xor
push
lret
mov
out
push
sarl
fstps
in
inc
mov
ucomiss
mov
mov
push
mov
or
pop
test
addr16
xor
scas
stos
dec
pop
rol
hlt
enter
jbe
cmp
pop
dec
fistps
shrl
mov
stc
cmp
mov
xor
push
stos
repz
jl
mov
add
icebp
idivb
cmp
cs
push
lret
stc
loop
mov
pop
loop
xchg
fistps
leave
add
icebp
ret
jge
adcb
addr16
sbb
cli
out
inc
jecxz
scas
lret
mov
ds
loope
jns
and
lret
movsb
decl
lret
jge
out
cli
movsl
fwait
pop
js
ja
cld
out
jp
stc
outsl
xchg
mov
dec
test
pop
and
mov
jg
divl
cmpsl
cmp
scas
stos
std
hlt
rorl
mov
sbbl
mov
pop
adc
ja
aaa
ficomps
add
adc
movsb
xor
push
int3
out
xchg
mov
and
in
pop
inc
push
js
gs
adc
and
dec
arpl
mov
dec
dec
les
int
fstl
push
fwait
cwtl
outsl
ds
cmp
js,pt
cmp
subb
mov
test
insl
out
xchg
aad
stos
hlt
repz
fs
out
adc
in
xchg
mov
push
stc
in
rolb
cmc
cltd
mov
push
inc
lods
mov
rcr
sarb
lahf
lahf
mov
inc
idivl
out
mov
movsl
pushf
aaa
movsb
xor
ds
lods
dec
mov
adc
and
sub
mov
fsubl
push
adc
jl
vpmaxub
cmp
fsts
pushf
xor
add
and
adc
ret
ret
hlt
cmpsl
lds
jp
jno
ljmp
adc
dec
or
mov
inc
mov
adc
inc
xchg
cmp
lods
add
jp
subl
pusha
stos
aam
jae
cmc
aas
sbb
cwtl
inc
push
outsl
xchg
xlat
call
add
mov
popf
add
repnz
les
pop
dec
lcall
or
pop
xchg
mov
jo
xor
sbb
mov
pop
mov
xchg
scas
mov
xor
lods
mov
ret
jae
mov
inc
cmp
jl
pop
mov
out
fcompl
xchg
faddl
mov
mov
mov
incl
pop
into
int
mov
out
lods
and
fsubrs
scas
lea
mov
stc
lcall
mov
fs
stos
shrb
push
movsb
outsb
sbb
xchg
or
aas
and
mov
orl
insb
rcr
icebp
das
mov
nop
fxch
sti
xchg
add
push
add
lahf
sub
push
and
imul
int
ret
xchg
test
lahf
idivl
flds
cmpsb
dec
insb
sbb
mov
imul
bound
out
bound
pop
pushf
dec
mov
aaa
fdivrs
xor
xor
test
adc
into
pop
pop
xchg
push
in
xchg
cmp
outsb
jne
in
dec
dec
sbb
mov
in
sbb
and
inc
add
lret
push
push
cmc
adc
pop
mov
inc
rcrb
movsl
cld
jae
loope
dec
mov
jle
and
mov
mov
sbb
cmpsl
fstps
mov
ds
xchg
enter
push
stc
jae
in
jmp
jmp
stos
loop
and
dec
jno
jnp,pn
mov
mov
imul
pop
insl
cmpsb
les
mov
rolb
mov
jecxz
ret
fstpl
sbb
cmc
faddl
fs
xchg
mov
in
repz
cmp
mov
outsb
loop
call
in
lahf
adc
ret
ret
xchg
shlb
cmp
mov
sbb
cs
push
push
add
fstl
mov
push
xor
jmp
insl
adc
dec
loopne
enter
adc
repnz
adc
cmpsb
xchg
cmc
stc
sbb
das
imul
add
mov
in
fnstenv
adc
stos
enter
scas
jae
xor
in
mov
or
sub
mov
mov
addr16
mov
jb
xchg
pop
pop
pop
sub
shr
lds
iret
test
aas
sub
frstor
frstor
nop
cmp
mov
ret
les
cmpsb
cmp
scas
mov
lock
inc
xlat
add
shll
mov
jo
sbb
mov
sahf
jl
stos
hlt
jmp
adc
mov
lahf
je
push
mov
lock
pop
jb
xchg
adcl
pop
jnp
push
int3
bound
xlat
lods
popa
popf
icebp
mov
jo
adc
int3
dec
pop
lods
adc
lret
adc
inc
cmpsb
add
test
cli
rcr
into
cwtl
dec
testb
fwait
data16
cmc
xor
jecxz
inc
jo
movsb
ljmp
mov
jg
cmpsl
adc
inc
ds
icebp
mov
leave
notl
xlat
push
test
adc
xor
mov
jp
ds
adc
repnz
repz
sub
mov
popa
fidivrs
sahf
inc
mov
in
outsb
sbb
lods
fidivrl
das
subl
cwtl
xchg
enter
les
cmp
in
and
sbb
xchg
inc
push
push
sbb
mov
lods
jo
mov
les
rcr
pop
mov
mov
xchg
lahf
in
adc
lods
shl
inc
push
test
cmp
jl
and
jmp
shl
sbb
or
add
push
dec
sub
push
lcall
shll
repnz
and
jle
inc
xchg
daa
aas
sahf
in
adc
add
icebp
push
and
cmp
fwait
xor
push
mov
decl
in
push
in
cmp
stos
dec
cmp
xchg
shl
test
cmpsl
or
mov
push
and
add
push
xor
mov
sbb
add
xor
outsb
cmc
pop
dec
inc
int
mov
sub
popa
mov
mov
xchg
cmp
mov
repnz
cmpsl
lret
dec
inc
mov
xor
cmc
mov
ja
xor
testl
pop
repz
fmul
jg
outsl
pop
cwtl
mov
enter
xor
test
out
mov
call
dec
cli
popa
sbb
daa
mov
xor
inc
mov
cmp
test
pop
pushf
stos
test
sarl
pop
push
adc
push
clc
loopne
mov
icebp
mov
xchg
out
popa
je
gs
ret
lahf
stc
nop
in
std
repz
sti
insb
cmp
orb
pop
iret
push
cmp
xor
out
jmp
shrl
jp
xorb
dec
test
in
rcl
imul
scas
inc
xor
jl
cltd
loope
push
xor
and
int
cmp
scas
stos
pusha
pop
shrb
mov
add
inc
popa
scas
out
das
pop
sbb
popf
stos
jb
mov
mov
jne
cmp
psubd
es
mov
dec
sub
mov
sub
lret
ret
mov
pop
push
xlat
jmp
outsb
mov
xlat
adc
and
call
dec
sbb
lret
add
and
out
jns
fsubl
or
add
adc
jbe
xor
add
sub
shrl
loopne
mov
rcrl
push
pop
mov
xchg
xor
or
sahf
or
notl
int3
insb
mov
cld
ficompl
in
adc
call
xor
sbb
and
mov
dec
jmp
xor
xchg
add
aam
test
enter
sbb
push
in
jmp
cmp
sbb
outsb
xlat
gs
leave
pop
dec
adc
dec
mov
mov
pop
pop
data16
sub
fnstsw
mov
mov
cs
daa
je
pop
fsts
adc
push
sbbb
push
mov
add
cmp
in
sub
jb
ret
push
les
dec
imul
mov
cli
mov
imul
jge
cmp
jg
or
roll
xchg
mov
push
cld
stos
sub
insl
mov
cwtl
in
or
jecxz
in
insb
push
push
dec
movsb
adc
xchg
push
movsb
imul
mov
adc
xor
inc
movsb
sbb
mov
jp
mov
arpl
mov
jnp
mov
sub
ret
mov
sbb
push
push
cwtl
pushf
push
adc
jge
imul
out
inc
andb
and
test
push
lock
dec
dec
in
mov
and
iret
jne
push
pop
scas
xlat
push
es
dec
cmp
dec
jecxz
ficomps
lret
rcrl
mov
inc
out
cmc
mov
addr16
add
xchg
loop
jb
add
les
jo
loop
imul
xor
daa
fimuls
scas
adc
jne
andb
push
sbb
fwait
ja
pop
push
mov
mov
inc
popa
push
es
xor
mov
and
fldenv
ja
fldl
pop
cmp
jg
push
dec
adc
mov
cmp
add
mov
dec
call
movsl
std
jge
or
push
cli
sbb
lcall
push
shll
hlt
sub
jl
std
psubsw
push
dec
in
jg
iret
mov
in
or
push
jns
clc
jae
push
push
inc
rcrl
js
push
xlat
scas
es
ret
aad
cmp
fsubl
mov
ret
sbb
inc
insl
fwait
out
call
dec
xlat
dec
cmp
scas
and
xchg
imul
cmpsl
and
push
out
adc
xchg
clc
jne
idiv
in
inc
push
inc
fs
jmp
outsb
add
rclb
mov
and
inc
push
and
sub
lahf
pop
ret
cmp
push
mov
xlat
cmpsl
mov
hlt
andl
je
mov
les
dec
mov
nop
ret
in
push
mov
jecxz
adc
hlt
ffreep
sbb
test
push
sub
pop
mov
lahf
jno
jno
shll
test
push
enter
xor
add
cmp
jmp
dec
ret
dec
pop
fsts
fs
cwtl
jmp
mov
jg
inc
fisttps
int
cld
xor
mov
and
inc
shlb
cmpsl
imul
dec
repz
push
dec
adc
test
mov
mov
push
ds
push
mov
negl
idiv
jnp
sub
test
stos
xor
fmull
adc
fimull
mov
xor
xor
inc
aam
in
xchg
stc
add
push
adc
xchg
dec
outsb
imul
or
sti
or
imul
and
lods
pushf
mov
filds
das
cmp
xchg
cs
in
in
jmp
fistps
inc
imull
pop
jb
add
inc
int3
inc
outsb
inc
push
or
cmp
fimull
stos
outsl
fstp
shlb
xchg
lea
xor
pop
movd
add
fs
jne
loop
in
inc
jno
adc
mov
mov
sahf
push
scas
xlat
mov
xor
pusha
sub
adc
aas
xchg
insb
dec
mov
and
pmuludq
mov
lret
enter
cld
xchg
dec
push
popf
inc
mov
dec
jno
and
sbbl
std
aas
mov
add
xor
mov
faddl
pop
pop
sub
cmc
push
fildll
mov
adc
in
lock
sub
ret
sub
mov
mov
push
jmp
popa
int
or
mov
into
and
mov
es
mov
dec
mov
xchg
jbe
lods
or
inc
mov
cmc
add
xchg
mov
notb
push
inc
repnz
add
loop
xor
leave
andb
popa
sahf
stc
int
and
rcrb
out
sub
push
mov
lods
add
pop
mov
stos
flds
push
add
jge
or
jo
cwtl
je
dec
pop
sbb
dec
jo
add
cmp
loop
pop
mov
mov
push
scas
push
xor
add
cmp
mov
cmpsl
adc
lds
push
sbb
sub
hlt
adc
adc
or
repz
jne
pop
sbb
dec
lret
push
fldt
xor
notl
push
cmp
fld
push
mov
fwait
pusha
mov
push
cmp
adc
inc
sbb
xchg
test
inc
adc
xlat
fs
mov
sub
out
jb
call
les
dec
hlt
inc
add
mul
fwait
and
dec
mov
into
in
fwait
push
or
mov
gs
mov
lret
dec
mov
shll
out
int
fsubp
xor
push
jnp
ret
push
les
imul
sub
lret
imull
add
fcom
mov
or
popa
cmp
dec
popl
xchg
add
dec
fists
sahf
push
in
in
mov
jne
addr16
pusha
lods
les
add
sbb
ds
test
inc
push
idiv
push
imul
lds
lods
cs
out
pop
decb
mov
dec
push
add
repz
stos
mov
sbb
xor
cmp
loope
sub
inc
mov
out
cld
pop
xor
enter
ret
pop
and
loope
sbb
xor
xchg
ror
mov
pop
aas
sbb
repz
xlat
aad
push
fwait
mov
or
jge
dec
rolb
lea
pop
pop
clc
ss
hlt
shll
push
ljmp
adc
rcr
pop
jl
mov
inc
mov
dec
cmp
sbb
sbb
mov
jne
jns
stc
jp
push
aaa
and
lds
add
mov
cmc
jge
sbb
xchg
mov
push
cltd
enter
es
and
sbb
shl
in
or
lds
inc
cmp
in
enter
fidivl
dec
mov
or
mov
nop
mov
mov
add
xor
mov
and
mov
enter
xchg
sbb
iret
xchg
out
and
fimuls
fadd
mov
add
cmp
stos
mov
push
not
sbb
icebp
mov
push
cmpsb
call
loop
pop
inc
les
xchg
je
adc
sub
imul
mov
subb
mov
push
jns
out
cmp
jl
fs
jb
jle
data16
dec
push
xor
or
mov
cld
mov
testl
and
inc
push
jg
inc
mov
loop
mov
cmp
mov
mov
dec
pop
xor
xchg
gs
fwait
lea
add
add
enter
dec
mov
insb
pusha
lea
inc
xor
fistps
sbb
insl
faddp
stos
notb
fsubrs
pop
adc
insb
enter
popa
lods
mov
xlat
mov
sub
jg
lock
pop
mov
sub
mov
cs
mov
movsb
mov
pop
jl
xor
mov
sub
xchg
pop
inc
movsl
rorb
imul
das
frstor
sbb
in
mov
loop
cmp
mov
jle
or
out
loopne
add
cmc
fisttps
xchg
xchg
int
loope
dec
push
cltd
push
mov
jmp
repz
mov
out
ss
es
or
mov
call
or
add
pop
jnp
fstpt
or
and
xchg
sti
mov
std
xor
test
test
scas
test
movsb
test
jge
dec
pop
in
fwait
je
cmp
jl
das
jns
rclb
add
and
add
lds
add
aas
pop
xor
stos
ljmp
push
pop
cmp
sbb
in
cltd
mov
rorb
movsl
or
js
fs
push
add
or
sub
mov
inc
mov
lods
pop
jmp
push
dec
mov
ret
lahf
ds
xchg
push
js
imul
outsl
cli
ret
mov
cmc
pop
sbb
call
int3
popf
or
popa
dec
in
mov
jne
mov
jo
mov
pop
xchg
pop
mov
adc
and
loop
mov
mov
orl
mov
push
sbb
cmp
jno
jno
mov
pop
pop
jge,pt
stos
aaa
std
pop
xor
movsl
adc
icebp
dec
and
pusha
mov
cmp
dec
mov
pop
mov
shll
lods
daa
sbb
jle
or
neg
in
inc
jge
push
test
xor
push
mov
push
sub
sub
xchg
cmp
sub
jp
jno
sarl
mov
rorb
ljmp
push
fs
jecxz
enter
mov
and
jb
and
add
cld
push
movsl
xchg
lds
fwait
mov
mov
lods
adc
adc
mov
in
js
clc
xor
in
outsl
dec
pop
outsb
sbb
sbb
icebp
dec
sbb
flds
xor
mov
pop
cltd
xor
mov
inc
nop
push
mov
pop
scas
xchg
xor
cmp
mov
bound
jae
sub
pop
fbstp
sub
sbb
push
ljmp
jecxz
mov
fmuls
fisubrs
ds
dec
outsl
push
js
push
mov
or
push
xchg
addr16
add
aad
xchg
js
mov
mov
movsb
shr
jl
rorl
and
dec
sub
sub
push
push
dec
adc
lock
dec
cmpsl
popa
jmp
add
outsb
pop
inc
sub
add
mov
jp
cld
lret
pop
inc
xchg
test
cmpsl
mov
cmpsl
cmc
xchg
or
adc
sbb
out
sub
loopne
scas
icebp
orl
cs
xchg
shll
nop
cmp
mov
xor
dec
int3
pop
sti
or
testl
into
jecxz
lock
or
xchg
or
dec
jl
xchg
daa
sub
cmp
movb
hlt
push
push
test
aas
sbb
jmp
mov
pop
roll
nop
lcall
adc
xchg
push
jb
ret
inc
push
jp
mov
cmpsl
mov
mov
mov
ret
fsubs
or
inc
jae
aad
dec
add
sti
and
add
pop
add
jp
sbb
js
inc
ret
cwtl
cmp
push
fs
inc
call
js
stos
xor
fwait
cltd
scas
mov
adc
and
nop
movsb
inc
flds
inc
mov
push
aas
mov
ficoml
aaa
cli
dec
mov
pusha
jno
cld
push
shlb
imul
sbb
sub
adc
aaa
jmp
push
fisubs
loopne
xchg
dec
mov
andb
mov
dec
mov
mov
cmp
dec
test
mov
stos
mov
add
jne
in
daa
movsl
cmp
bound
mov
mov
adc
jp
pop
and
fisubrs
imul
into
fsubrs
gs
mov
cmpsb
and
ja
outsl
stos
es
jg
jb
ljmp
sbb
sub
xchg
dec
fisubrl
ret
or
addr16
cmpb
inc
xor
pop
pop
out
loop
ficoms
mov
xchg
sbb
mov
pop
cmp
pop
arpl
lods
fs
sbb
repz
bound
adc
inc
ss
or
imul
iret
rorl
add
shr
test
imul
daa
adc
xchg
or
jge
rcrb
pop
scas
xchg
bnd
push
xchg
mov
cmp
mov
es
pop
out
int
sub
fidivl
lea
int
jns
push
xor
rolb
or
jne
in
cltd
test
scas
cmp
incb
fs
push
lcall
repz
mov
adc
mov
clc
and
jae
lds
test
ja
mov
sub
xor
push
out
mov
flds
sub
addr16
dec
mull
xchg
mov
in
dec
add
dec
cltd
ficomps
popf
mov
std
stos
sub
push
stos
add
lds
xchg
sahf
push
mov
jno
mov
ret
mov
lds
sbb
mov
jb
inc
out
rcl
xchg
xor
add
mov
mov
pop
shr
cmp
cmpsb
push
in
push
mov
adc
push
out
jne
orb
test
mov
out
iret
out
mov
jne
leave
push
push
test
je
jno
popf
lcall
loop
in
pop
or
add
xor
mov
andb
inc
and
sbbl
popa
jb
test
inc
loop
or
lcall
scas
inc
mov
scas
jmp
outsl
pop
mov
outsb
in
xchg
dec
enter
jns
xor
sahf
sub
mov
test
in
lods
loopne
ficoms
mov
and
jno
jbe
jne
mov
cmc
inc
jl
jmp
shlb
pop
mov
lcall
sti
sbbb
loopne
movsb
mov
ror
ja
rcrl
or
cmpsb
pop
test
mov
loop
xchg
or
addr16
out
js
in
rcll
sbb
and
push
lods
mov
imul
clc
xchg
test
movsl
mov
out
cmp
cmp
pop
adcb
test
add
add
fwait
aaa
fstl
sbb
cld
push
shl
ja
insl
sub
int
idivl
or
jge
in
xchg
out
pop
leave
insl
jns
push
pop
inc
and
xchg
cmp
fbld
dec
inc
mov
fisttps
mov
mov
adc
testb
ja
mov
pop
xchg
data16
pushf
fwait
test
adcl
mov
xchg
outsl
movsl
testb
rorl
jp
dec
or
movsb
adc
xchg
xchg
push
iret
xor
fsubrs
nop
cmp
repz
in
imul
enter
into
mov
arpl
sub
cmp
or
addr16
daa
data16
sti
lahf
imul
inc
nop
mov
imul
ret
cs
xchg
and
insl
lock
xor
lahf
cwtl
pusha
or
pushf
addr16
dec
push
or
js
sub
lods
and
sub
ficoml
popf
mov
adcl
out
in
mov
imul
xchg
or
pop
cmpsb
push
stos
hlt
int
mov
inc
call
loop
daa
nop
push
adc
xchg
mov
adc
pushf
cmp
mov
ror
rcl
sbb
or
add
mov
inc
push
push
push
adc
pusha
lea
stos
outsb
adc
lret
sbb
sbb
mov
ds
dec
or
adc
stos
jmpw
test
out
jge
call
inc
leave
ret
lods
mov
mov
dec
in
mov
dec
adc
out
lcall
das
jb
cmp
cmp
arpl
ss
push
sahf
push
lods
dec
push
mov
mov
jmp
repz
setnp
push
rol
jg
add
pop
xchg
cwtl
mov
jne
imul
cmpsb
and
jnp
movsb
cmp
outsb
jp
jecxz
std
das
nop
repnz
ds
stos
loop
inc
icebp
add
lret
rclb
push
sbb
inc
in
mov
flds
jge
aaa
pop
push
mov
mov
enter
pop
mov
xchg
out
movsb
leave
push
jge
jae
cmp
mulb
add
jmp
sti
stc
mov
cs
sub
xor
push
repz
aam
lret
leave
pop
xchg
cmp
xor
test
mov
and
filds
lods
pop
and
fiadds
shl
notb
les
push
ficoml
into
inc
push
push
jp
lea
push
gs
insl
out
into
mov
das
push
add
ss
jg
aaa
addr16
xor
mov
jnp
roll
mov
imul
movsb
xor
aas
clc
mov
mov
jnp
clc
sbb
xchg
int
inc
add
xor
inc
out
in
or
aad
ficomps
fs
jecxz
inc
cmpsb
std
pop
flds
jbe
mull
mov
jne
jp
sub
inc
cli
mov
pop
jle
sub
mov
rcll
fidivl
push
jb
xchg
sub
shrl
dec
adc
mov
das
push
pop
aas
and
insl
repz
dec
rcll
outsb
pop
mov
in
pop
and
lcall
cwtl
enter
jge
roll
add
sbb
int3
or
cmp
adc
in
sub
pop
lock
push
push
cmp
xor
cmp
pop
pop
adc
divl
cli
mov
mov
jge
test
jb
mov
addr16
movsl
pusha
sub
daa
xor
and
sub
adc
xchg
push
rcl
in
fisubl
repz
mov
daa
dec
mul
sub
inc
and
stc
lods
mov
lods
push
ja
xchg
cmovno
mov
mov
pop
cwtl
add
cmpsb
mov
sarl
push
sbb
push
jp
fs
pop
cmp
pop
test
mov
inc
out
mov
and
jp
cli
mov
loopne
xchg
mov
sti
xchg
data16
adc
pop
bnd
imul
loope
imul
inc
sub
push
sbb
push
aad
or
rcrl
repz
call
mov
jb
dec
dec
fiaddl
xor
cli
sbb
stos
leave
jmp
jb
dec
sub
call
scas
pop
pop
mov
in
fldcw
je
cmp
rolb
mov
pop
daa
mov
cs
fstl
add
out
xchg
aam
out
jno
pop
stc
inc
inc
les
jp
imul
rorl
jg
and
sub
mov
sbb
mov
xchg
mov
push
fnstcw
scas
into
add
lods
adc
daa
jl
outsb
test
xor
and
push
lods
push
rorl
in
lods
ret
mov
outsb
adc
cmp
fidivrs
nop
gs
sub
dec
dec
loopne
mov
movsb
mov
mov
and
cmpsl
jg
and
jge
les
add
and
out
and
lret
js
repz
mov
insb
mov
fisttpll
xor
rclb
imul
or
fldt
out
mov
xchg
cld
lods
aaa
mov
mov
aam
gs
xchg
pop
stos
push
mov
rol
rolb
test
mov
sbb
icebp
xchg
repnz
push
cmp
in
stos
pusha
xor
mov
imul
dec
aaa
pop
ja
addr16
inc
stos
xchg
in
xorb
or
out
jp,pn
sarb
or
daa
xchg
and
inc
or
cmp
mov
sub
sub
sahf
adc
scas
xor
sbb
sbb
xchg
in
ret
out
jl
jecxz
repz
sub
mov
out
mov
in
int3
addl
xchg
xor
lret
xor
lods
pop
insl
insb
mov
ret
mov
sbb
aaa
push
addb
xor
mov
fists
and
out
pusha
filds
mov
loope
jp
repz
adc
scas
adc
push
pushf
test
ficoms
add
push
xchg
into
sbb
cmpsb
in
mov
fiaddl
jecxz
push
jp
jmp
js
and
js
or
or
sbb
xor
sbb
push
lret
jnp
lods
dec
in
push
pop
inc
mov
cmp
and
dec
jae
mov
push
jb
lret
sti
pop
xchg
aam
leave
subb
pop
sub
xor
test
jg
cmp
insb
xor
sti
jne
call
rcl
subb
popf
mov
cmpsl
ret
imul
fdivrs
dec
lock
repnz
sbb
pop
push
mov
cmp
mov
pop
std
xchg
pushf
andl
dec
inc
bound
jno
arpl
jns
sbb
icebp
hlt
loop
adc
cmp
add
outsl
call
or
xor
pop
enter
push
fadds
div
outsb
mov
dec
and
loope
jge
bound
outsb
pop
add
sub
aam
xchg
leave
mov
push
cwtl
jp
dec
gs
pop
jle
jg
pop
mov
test
mov
xchg
sbb
out
shll
icebp
loope
loopne
mov
outsl
out
shll
mov
sub
mov
xchg
inc
loop
mov
andb
pop
cmpsb
ss
push
jp
adc
inc
jb
movsb
pop
mov
inc
mov
ss
push
jle
dec
pusha
mov
rorb
imul
sbb
ljmp
lahf
xchg
aaa
xor
rcll
cmc
ror
arpl
jl
add
xor
or
and
pusha
adc
sub
scas
mov
rcrl
lods
addr16
lods
sub
jno
das
cmp
daa
jl
lock
fists
lahf
cld
fwait
mov
out
sbb
sub
sahf
imull
adc
rclb
dec
sti
mov
adc
mov
xchg
mov
lcall
lods
idivb
ret
bound
mov
je
jge
ret
mov
sub
inc
lods
scas
or
pop
shrl
scas
aad
mov
push
cld
xchg
jb
inc
lea
sbb
fmul
divb
mov
xlat
push
push
xchg
cs
dec
aaa
out
dec
cmp
sub
or
adc
mov
pusha
mov
xor
movsb
cltd
hlt
mov
push
call
insl
sbb
hlt
scas
shrl
ss
notl
test
test
mov
cs
xor
imul
inc
pop
fsubr
sti
movsb
es
mov
or
nop
adc
fildl
cld
inc
in
cli
inc
xchg
lret
jae
mov
mov
cmp
ljmp
lea
aad
sahf
pop
test
xchg
jnp
dec
js
aad
popf
push
sub
add
sbb
push
ret
jp
push
cli
insl
fst
add
pop
jo
out
xchg
sub
fbld
push
adc
pop
je
add
repz
fcomps
pop
jns
out
mov
ljmp
mov
mov
jle
cld
cmp
inc
inc
push
and
popf
mov
adc
aas
mov
fistpll
leave
sahf
push
ret
mov
loopne
jp
add
jecxz
pushf
popa
mov
inc
xor
ss
jo
pop
lock
cmp
dec
adc
ret
fs
pushf
push
cmc
pusha
jno
cmp
mov
cwtl
stos
cmc
dec
loope
mov
lock
pop
repnz
cmpsb
adc
inc
out
inc
jl
dec
in
fbstp
jmp
pop
mov
addr16
and
lds
xchg
imul
inc
pop
jg
hlt
roll
ds
lods
xlat
inc
fstpl
test
sti
mov
sub
add
sub
push
xchg
ficompl
and
ds
jne
imull
inc
jg
mov
and
adcb
xchg
pop
push
leave
push
std
andb
ret
mov
mov
xlat
ljmp
fistpl
fimull
fidivrl
test
push
lea
orb
lds
inc
icebp
and
mov
push
and
inc
push
adc
aad
loopne
in
dec
mov
or
mov
test
sbb
dec
ret
xor
dec
fsubl
add
stc
das
pop
popa
xchg
jmp
loopne
pop
mov
ror
decb
insb
out
dec
js
push
adc
mov
pop
inc
pop
xor
sbb
cmc
xchg
cltd
lods
repz
cmp
arpl
mov
test
mov
cmp
mov
in
cwtl
imul
nop
cmp
mov
in
enter
sbb
out
aaa
pusha
dec
pop
mov
lock
add
xor
int
inc
cli
inc
leave
or
cmp
rcrb
sti
mov
lcall
xchg
call
pop
ss
sub
xchg
test
test
adc
pop
pop
les
out
mov
cli
scas
das
lods
inc
mov
scas
adc
pop
sbb
les
invd
adc
mov
dec
scas
cmp
mov
xchg
push
mov
or
pop
sbb
addb
leave
call
push
int
fs
mov
outsb
jno,pn
jae
sbb
xor
sub
mov
movl
out
cmp
mov
push
xchg
mov
aam
pop
or
es
dec
jae
and
xor
dec
rcrl
dec
mov
mov
dec
adc
outsl
mov
jns
jge
out
js
pop
jne
mov
aaa
mov
pop
mov
pop
pop
xor
in
add
lods
xchg
lcall
or
adc
mov
xor
cwtl
xchg
call
jae
jbe
movsb
jge
stos
clc
pop
sub
insl
lcall
pop
cmp
jmp
data16
pop
fsubrl
fsts
das
test
test
or
shll
inc
xor
loopne
pop
aas
pop
mov
cwtl
jns
inc
mov
divb
les
add
adc
pop
repz
call
jle
sbb
fistl
sti
enter
add
xor
jae
push
adc
scas
sbbl
adc
inc
addr16
test
and
and
es
sbb
adc
pop
mov
sub
faddp
stos
mov
and
inc
xor
int
or
fists
outsl
int
mov
std
das
ljmp
pop
mov
gs
add
and
lds
jb
lods
dec
and
or
cltd
rcrl
lea
pop
sub
stc
sbb
or
adc
inc
int3
add
pop
push
xor
shl
es
jge
lahf
in
or
out
mov
aad
stos
xchg
dec
xchg
xchg
subb
ja
cld
outsb
nop
add
pusha
pop
scas
out
popf
fsts
std
xchg
shr
jle
enter
pop
arpl
push
repnz
mov
jns
shll
fnstenv
lds
fs
mov
xor
fcompl
dec
inc
stc
or
call
or
sub
push
push
sahf
ds
cmp
out
push
push
pushf
loope
shl
mov
jl
pop
pop
xchg
cmp
jbe
dec
movsl
push
hlt
out
std
fdivl
cwtl
and
dec
xchg
lahf
bound
ljmp
daa
testl
cmp
and
cmp
and
push
mov
sub
scas
stos
mov
pop
lcall
jge
fmull
push
repnz
and
popa
test
cmpsb
push
test
xor
sarb
fdivl
push
add
out
pushf
mov
data16
inc
lea
push
addr16
ret
pop
popf
lret
int3
ret
push
pop
pop
in
movsb
jae
mov
xchg
cmp
in
jae
jno
inc
sbb
in
ja
jbe
ss
mov
dec
cmp
cmc
jo
pop
scas
fsubs
fisubrs
dec
inc
xor
test
loopne
jg
add
fldt
loope
xor
lcall
pop
xchg
or
rcrb
mov
lret
gs
mov
dec
aaa
mov
jge
cld
xor
pushf
jmp
lock
mov
test
insl
adcl
xchg
mov
add
inc
jnp
shll
cmp
xchg
nop
mov
stc
pushf
xor
int
or
dec
dec
jmp
cmc
mov
aas
sahf
cwtl
mov
popa
out
cld
cmpsb
call
aas
add
jno
and
jl
jl
lahf
or
imul
les
pusha
pushf
pop
outsb
es
int
mov
in
mull
cmp
sti
sti
add
add
es
into
out
inc
inc
push
test
xchg
shlb
in
mov
setge
aad
jl
aas
cmc
lret
push
addr16
dec
mov
jbe
mov
xchg
cld
jb
push
stos
xlat
mov
int3
in
sub
cmpsl
xor
sub
ja
push
and
sbb
scas
xor
jp
syscall
cmpsl
outsl
pop
jae
lods
xchg
or
movsb
mov
std
sbb
push
lock
sbb
icebp
popa
std
xlat
outsl
shlb
rcrl
push
pop
adc
fdivr
xchg
adc
dec
mov
sub
add
in
sub
sbb
lcall
jg
movsl
pop
es
xchg
push
dec
mov
mov
xor
jns
cmpsb
mov
pop
cmp
aam
ss
pop
push
sub
push
mov
mov
xchg
or
dec
ss
clc
cmpsl
adc
test
jno
add
mov
fprem1
in
addr16
xor
jne
inc
cs
jmp
dec
imul
out
testb
and
add
aad
inc
aam
inc
adc
std
xor
adc
and
movsl
je
les
pop
pop
dec
xchg
mov
adc
jecxz
and
test
mov
and
ja
fwait
cmp
push
cmc
inc
mov
xor
xchg
sub
sub
mov
repnz
jge
add
mov
inc
jo
cmp
push
pop
les
enter
cmp
mov
nop
push
loop
test
outsb
pusha
push
sbb
jno
inc
mov
jno
sbb
or
jns
fbld
push
pop
pop
pushf
jge
or
sbb
mov
inc
push
xchg
cltd
scas
call
xorb
leave
icebp
ds
jl
cli
pop
mov
ret
mov
sbb
jne
lods
repnz
jl
aad
out
xchg
daa
cwtl
ret
adc
idiv
jg
pop
ljmp
int
fs
insb
lods
inc
test
jae
addr16
xchg
or
jecxz
inc
gs
cmp
or
ds
xor
fcmovnbe
scas
cmpsb
adc
mov
mov
out
push
cltd
mov
aam
scas
inc
out
test
lock
adc
data16
jnp
sbb
mov
insl
cmpsb
pop
out
inc
xor
int3
jle
lods
jno
dec
fadd
ss
xchg
cmpb
enter
sbb
dec
xor
out
pop
or
imul
push
inc
sbb
mov
mov
lret
repnz
and
lret
xchg
mov
or
js
pop
mov
lret
pop
movsl
sbb
mov
sub
out
addr16
lcall
add
push
ret
jbe
and
xchg
jns
aaa
subl
push
cmpsb
mov
pushf
dec
outsl
sub
lret
sub
push
and
orl
add
pop
stos
pop
insb
push
sub
in
lods
test
pop
cli
shll
cmpsl
hlt
xchg
adc
mov
decl
add
jo
xor
in
ja
les
insb
add
cld
out
mov
repz
pop
mov
clc
scas
mov
test
and
sbb
jmp
inc
orl
lods
ja
pusha
clc
das
int
adc
mov
pop
xor
sub
xchg
inc
jne
cwtl
push
in
loop
test
cmpsl
sub
ljmp
sbb
add
out
test
aad
out
add
arpl
sub
push
clc
subl
fisubs
scas
mov
mov
test
decb
jae
lods
stos
sub
push
dec
cld
aas
push
or
aaa
fsubrs
loop
xchg
sbb
pop
sti
into
in
jle
fistpll
stos
test
xchg
xchg
cmp
leave
pusha
iret
test
pop
mov
inc
clc
xor
mov
push
xchg
pop
ret
jge
scas
push
ret
xchg
inc
in
fadds
jns
rcrl
push
push
int3
lret
daa
adc
xchg
cld
and
pop
jnp
pop
loop
outsb
ret
push
or
xchg
xchg
shll
jb
mov
xchg
lret
mov
jns
inc
add
cmpl
push
cmp
inc
out
mov
sbb
xchg
loope
mov
cs
psllq
mov
pop
add
mov
lahf
inc
jp
sbb
cmpsb
nop
gs
and
fisubs
lcall
xchg
sub
jle
ss
jmp
ret
jbe
and
movsl
enter
stos
lock
xor
dec
sbb
or
xor
imul
lock
cltd
stos
clc
pop
fsubl
xchg
rcrl
popf
add
cwtl
fstpt
xchg
js
insb
dec
push
lret
and
mov
testb
shlb
sbb
leave
xor
jne
push
lret
insl
int
inc
jns
jge
adc
sub
lret
or
gs
mov
mov
popf
or
adc
scas
adc
add
xor
scas
xor
xchg
push
and
pop
fistpl
cltd
imul
cmp
pushf
fwait
test
fnstcw
xor
jge
adc
jmp
mov
fldenv
pop
je
push
or
or
cmp
imulb
ja
or
inc
xchg
dec
dec
scas
dec
daa
out
inc
mov
dec
fs
add
lret
and
ss
pop
push
mov
dec
lea
imul
data16
loope
xor
pop
dec
adcl
mov
cmp
add
out
mov
cld
ja
sahf
andb
xchg
adc
inc
push
fsubl
lret
adc
paddb
sub
popf
ljmp
sbb
lock
sub
xor
xor
arpl
mov
stos
ds
int
cmp
stos
pop
sbb
dec
je
sbb
push
in
in
jmp
sub
int3
mov
cmp
mov
push
ret
xor
fadds
shll
sbb
or
lds
sub
lret
push
das
imul
push
clc
js
xor
ljmp
repnz
sbb
inc
cld
jne
shll
pop
mov
ljmp
adc
sahf
fisttpl
stos
add
ds
sbb
add
es
les
adc
mov
inc
jg
sbb
sarb
sub
jge
mov
scas
fcoms
sti
ljmp
push
mov
pop
adc
test
pop
add
xchg
and
and
sti
test
roll
cmpb
stos
add
das
xor
adc
xor
shl
and
sub
daa
fsubrs
sbb
push
aaa
cld
dec
mov
mov
push
pop
xor
xchg
sti
sti
mov
inc
jns
mov
bound
mov
data16
xchg
sbb
cmc
jno
ds
lret
movsb
shll
cld
xchg
jnp
dec
dec
and
cmp
mov
mov
decl
repz
jne
movsb
enter
push
mov
cmc
fwait
or
sbb
imul
sar
les
or
loop
mov
push
in
inc
int
pop
mov
mov
or
dec
mov
nop
push
push
sbb
jb
rcrb
and
cltd
sbb
jne
mov
sbbl
cmpsl
sbb
loop
xchg
xor
sbb
inc
insl
xchg
mov
push
jl
loop
loope
add
dec
xchg
arpl
sbb
bound
subb
filds
mov
jne
sahf
out
mov
or
pop
xchg
shlb
add
cmp
xor
mov
sub
push
mov
xchg
and
inc
in
jl
push
jno
aaa
xchg
addr16
mov
sahf
mov
pop
sub
sbb
add
ret
nop
hlt
gs
mov
sbb
es
push
inc
movsb
mov
mov
dec
adc
fistps
imul
imull
mov
rolb
inc
jns
lods
bnd
andb
test
into
scas
ss
push
hlt
int
hlt
ret
cmp
push
pop
push
fcmovnu
pop
jae
cltd
jne
cmp
mov
movl
mov
pop
fidivrl
inc
arpl
out
add
inc
pusha
add
int
dec
dec
cmpsb
jp
xorb
stc
sbbl
sub
xchg
sub
sub
rorl
xor
leave
scas
xor
jns
mull
mov
xchg
ss
lods
push
je
mov
outsb
in
xor
mov
ret
mov
decb
xor
in
idivb
arpl
les
xor
es
jae
mov
push
jo
lock
outsb
inc
addl
or
jnp
push
fwait
push
lea
ljmp
cld
negl
stos
ficoms
inc
out
push
sbb
push
movsl
pop
popf
cmp
mov
repz
jecxz
cmp
push
das
adc
xchg
or
loopne
in
push
mov
xchg
add
clc
data16
sub
pushf
cmp
out
mov
pop
cmp
jo
inc
into
in
sbb
cmpsl
std
ret
jecxz
gs
mov
cs
mov
sub
ljmp
std
jg
sub
outsb
mov
pop
push
dec
sti
dec
push
mov
mov
stos
lret
ljmp
cwtl
imul
or
mov
rcll
icebp
popf
dec
ret
xor
and
inc
inc
pop
test
jns
or
push
mov
jle
mov
pop
in
stc
cmp
fwait
lahf
scas
jmp
out
mov
ficomps
mov
xchg
cmp
dec
pop
sbb
add
popf
enter
pop
gs
push
rol
cwtl
push
or
jg
pop
xor
pop
xchg
add
dec
nop
mov
pop
enter
mov
sub
sbb
adc
negl
in
sbb
cmpsb
cmp
fwait
push
cmc
sub
mov
xchg
push
insb
shr
mov
inc
sub
icebp
movsb
sbb
mov
jecxz
lock
call
les
mov
out
mov
cld
aam
pusha
lea
xchg
jmp
dec
push
test
fadds
orl
inc
push
inc
xchg
movl
fistpl
push
push
adc
roll
mov
xchg
movsl
mov
stos
loope
or
pop
fists
out
rcrl
sbb
jae
xor
mov
sub
stos
push
jmp
cmp
mov
dec
inc
fcmovnb
shl
xchg
std
push
cmpsl
mov
imull
sti
stos
daa
xlat
outsl
and
cmpsl
imul
scas
movsl
scas
adc
ret
sub
mov
sub
std
inc
jmp
or
rol
dec
mov
in
pop
adc
mov
dec
jbe
loop
lds
hlt
je
mov
sbb
mov
mov
push
stos
cmp
push
jecxz
in
iret
xchg
push
dec
es
scas
jae
xor
ss
inc
add
sbbb
pop
and
and
push
test
rorl
fbstp
and
dec
lods
jno
pusha
or
push
add
and
add
sub
push
or
mov
xor
sti
xchg
dec
test
orb
pop
es
shl
cmpsl
fldl
mov
insb
sub
sub
cmp
add
or
ret
add
je
ret
and
aam
add
imul
xorb
sub
jmp
fs
cmp
loop
mov
cmpsb
or
mov
mov
push
add
xor
xchg
int
idivl
push
lock
enter
mov
mov
xchg
ret
sti
cmpb
not
xchg
in
and
cmp
stc
push
call
pop
sar
out
arpl
xchg
jne
stos
jle
ja
jp
pushf
popa
jecxz
mov
mov
mov
xor
mov
hlt
xor
shll
mov
call
dec
xchg
jne
icebp
or
mov
or
pcmpgtd
sub
and
pop
push
out
imul
scas
and
push
push
bound
sub
jae
sbb
mov
jg
pop
or
push
pop
mov
js
adc
jg
cmpsl
add
sub
movsl
dec
cld
int
icebp
loope
mov
or
stc
xor
sbb
ret
stos
test
or
inc
lods
inc
push
js
cmp
mov
sti
fs
sahf
sar
mov
stos
ljmp
movsl
aam
out
fndisi(8087
xchg
push
xlat
mov
adc
xor
loop
pop
and
mov
pop
cmp
testb
pop
sbb
ja
inc
hlt
xchg
in
imul
mov
jne
mov
scas
repz
out
pop
push
cmp
jns
ss
jbe
sub
sbb
mov
rcr
movsb
lahf
push
pop
pop
inc
mov
cmp
mov
ret
and
adc
icebp
add
mov
cltd
mov
cmp
cmp
movsb
loopne
sub
or
pop
jl
add
js
cld
mov
push
adc
loope
shrl
ss
and
sub
xchg
pop
call
jg
movsb
js
inc
ret
sbb
arpl
mov
fnstsw
xchg
rclb
pop
or
popa
pop
lcall
jp
repz
adc
movsb
pushf
xor
and
jge
mov
or
das
mov
lcall
sbb
dec
xchg
cltd
movsl
cli
iret
sub
imul
inc
inc
mov
je
xchg
pop
mov
stos
addl
mov
jecxz
scas
pop
addl
push
repnz
jle
lods
sbb
jge
mov
fstpt
mov
jge
fdivs
sarl
adc
mov
xchg
push
cltd
inc
xlat
jae
in
out
xchg
lock
sub
fsubrp
mov
xchg
out
pop
pop
repz
dec
adcb
pop
ficoms
cmp
xchg
hlt
insl
roll
pushf
and
sbb
pop
faddl
lods
rorb
jecxz
or
xchg
iret
call
xchg
aad
pop
push
xchg
ja
sub
movsl
addl
subl
add
and
dec
xchg
dec
mov
cmpsl
jnp
push
inc
mov
push
dec
jnp
pop
sub
imul
cmp
int
push
call
jbe
pop
mov
in
xchg
sbb
cltd
mov
push
jmp
sub
mov
xor
fmulp
daa
add
adc
das
into
repnz
pop
or
sbb
ret
leave
inc
and
mov
arpl
inc
mov
sbb
ljmp
xchg
mov
out
xor
cwtl
daa
xchg
jo
scas
mov
stos
mov
sarb
pushf
stos
sbb
popa
enter
pop
adc
fsubl
add
test
aaa
add
and
dec
pop
and
mov
jle
test
inc
cpuid
inc
int3
fwait
in
cbtw
jmp
mov
inc
sbb
xor
popf
mull
jp
fcomps
pushf
and
shl
ss
loopne
or
cmp
imul
fmul
mov
pop
dec
dec
cmp
xchg
pop
push
gs
mov
cmpsl
xchg
in
lods
xor
dec
aad
inc
sarb
cmpsl
insl
lret
mov
jb
loope
pushf
sbbl
and
insb
mov
fisubrs
daa
ljmp
jbe
mov
mov
aas
cmp
cmp
pop
dec
mov
xchg
leave
ret
cmp
mov
adc
subb
outsl
and
xor
sub
add
jne
xchg
out
push
or
inc
lcall
scas
cs
mov
shr
adc
and
inc
sbb
ds
add
inc
popa
loop
scas
cmp
out
dec
xor
aas
and
addb
push
push
mov
xor
adc
rcrb
xor
les
rolb
sbb
mov
adc
mov
shrb
repnz
into
data16
dec
into
lds
out
in
adc
mov
sub
clc
fsubl
cmc
stc
xchg
repnz
inc
adc
in
aad
pop
push
rcll
add
adc
add
cs
ret
xchg
dec
add
push
cli
test
movsl
lea
repnz
mov
jo
push
xor
fisubrl
andl
or
mov
fisubrl
push
adc
cmpsb
stos
sub
fimuls
movsl
jne
addb
inc
cmp
fbstp
orb
mov
gs
push
mov
cld
xchg
jno
data16
popf
pop
and
aaa
xchg
and
cmpsl
mov
jb
imul
push
add
pusha
sbb
pop
xor
hlt
xchg
mov
sub
pop
cmp
sti
add
in
or
jecxz
pop
ss
popa
icebp
or
mov
sbb
in
sahf
ja
add
movsw
or
push
sbb
mov
shlb
jl
out
in
loopne
lahf
aaa
aad
xor
scas
dec
rep
out
pop
out
xor
in
pop
push
dec
hlt
mov
mov
scas
in
repz
push
in
xchg
mov
pop
dec
das
bound
sub
or
xor
daa
mov
push
pop
int3
sub
jmp
and
push
cmp
lret
das
add
int
loope
fs
jb
incb
stos
imul
mov
cmp
mov
shr
jl
push
in
in
js
push
jp
pop
lret
xchg
leave
test
scas
sub
or
ret
mov
cmp
out
mov
je
je
ja
and
jns
xor
fsubrl
inc
int
cmp
and
repz
fcmovnu
cmp
sbb
mov
repz
lea
ja
and
fdivp
fucomip
das
je
mov
mov
je
iret
sarl
ss
pop
arpl
push
into
xor
pop
dec
pop
xchg
pop
test
xor
std
or
sub
jmp
mov
js
cmp
pop
repnz
xor
pop
cld
jae
sbb
pushw
jb
mov
imul
leave
addr16
dec
mov
loope
lcall
adc
pop
jl
in
shrb
dec
scas
dec
pushf
movsb
mov
sub
sub
aad
repnz
push
pop
add
insl
xlat
bound
sub
test
in
lcall
aad
lods
es
jns
std
xor
lods
mov
or
dec
xchg
jecxz,pt
int
push
push
add
or
sub
or
cs
xchg
add
bound
sub
mov
icebp
jnp
hlt
out
mov
notb
dec
fnstcw
frstor
xor
out
inc
and
push
rorl
mov
adc
stos
bound
add
push
repnz
mov
cmc
psubd
push
lods
pop
in
outsb
dec
jp
sbb
xor
stc
cmpsb
dec
shl
arpl
mov
push
sbb
repnz
mov
popa
mov
fwait
movlhps
add
mov
fcoms
idiv
mov
and
jns
sbb
and
sbbl
cmp
sar
adc
add
sahf
inc
test
repnz
fpatan
mov
fnstenv
jmp
outsb
outsb
pop
inc
jp
lods
fsubl
je
inc
loope
js
outsb
cmpsb
int3
mov
add
cmp
jl
jmp
xchg
popa
mov
lcall
mov
iret
lds
dec
jno
jle
pushf
mov
sub
stos
or
jnp
shrl
sub
fiaddl
pop
shrl
test
lock
aas
pop
cmc
push
or
dec
push
stc
rorb
sub
bnd
add
sbb
pop
call
nop
sub
xchg
lahf
lock
and
sarb
mov
jno
rorl
imul
jno
add
pop
ret
test
jb
int3
lds
mov
or
xchg
iret
mov
xchg
insl
pop
jl
outsl
sub
ss
adc
cwtl
insb
in
test
or
inc
lock
stos
ljmp
push
jbe
mov
mov
mov
xchg
xlat
mov
cmp
cmpsb
insl
add
or
jle
fadds
lret
add
add
ljmp
push
pop
cmp
int
cmp
sbb
sti
fwait
jg
adc
test
in
push
or
lea
sbb
ljmp
jp
dec
and
pop
popa
jo
ljmp
mov
sub
popl
mov
jle
xchg
out
arpl
xor
push
test
fstl
jl
popa
cmc
and
mov
sbb
and
inc
enter
inc
push
fisttpll
or
scas
push
jbe
pop
lds
xor
pop
and
push
lcall
inc
pop
out
hlt
mov
dec
or
nop
lea
mov
cmp
push
xor
and
movsb
or
fwait
mov
or
push
sub
leave
out
into
cwtl
inc
mov
sub
frstor
cld
or
push
xor
adc
in
inc
mov
adc
pop
sub
ret
or
xchg
push
adc
stos
jmp
cmp
push
mov
in
cld
push
hlt
lods
jle
sub
repz
cmp
faddl
cmc
pop
sub
pop
mov
mov
fnsave
data16
imul
pop
addr16
and
push
adc
mov
test
add
sub
cmp
push
loope
mov
pop
fmull
pop
mov
test
dec
in
adc
pop
sbb
xchg
push
popa
add
repnz
xor
into
imul
fdivs
sbb
push
dec
inc
fsubrl
insb
mov
sbb
cld
pop
xchg
gs
dec
or
ss
add
fwait
xchg
add
das
hlt
ret
sti
pop
pop
mov
cmpsl
arpl
push
jnp
pop
add
orl
aas
nop
imul
mov
aaa
scas
xor
ret
sub
pusha
ljmp
mov
leave
std
mov
into
popf
xchg
mov
jg
lret
lcall
imul
int
jp
bound
fwait
jle
and
out
xor
movsb
orb
mov
mov
jno
dec
sub
add
mov
ljmp
out
push
cmp
jbe
aad
and
das
lods
dec
mov
cmp
aaa
nop
mov
insl
add
sbb
mov
jno
push
jne
xor
or
sbb
negl
rcll
insb
sub
adc
inc
sub
cmp
in
push
push
push
xchg
or
pop
dec
loop
inc
pop
push
xchg
adc
nop
adc
mov
mov
xchg
pop
push
ret
cmp
jmp
cmp
mov
inc
shl
sar
cmp
arpl
mov
inc
mov
cmp
icebp
mov
dec
aam
fidivs
call
dec
call
dec
iret
adc
add
lea
mov
cmp
lock
enter
mov
mov
pop
sar
xor
push
mov
pushf
imul
jl
js
cs
mov
mov
insb
mov
lahf
cmc
xor
inc
and
xchg
mov
push
jl
dec
bound
sbbb
push
xor
add
in
out
cmp
out
stc
mov
mov
movsb
addr16
aad
sub
adc
in
outsl
mov
loope
ds
repz
xor
or
jne
inc
add
ds
sbb
das
cmc
mov
mov
jno
push
lock
mov
hlt
fstps
lret
adc
lock
mov
popa
movsb
in
repz
mov
pusha
in
shr
insb
es
shll
in
dec
push
pop
and
jg
cltd
jns
movsb
loopne,pt
rolb
cmp
out
push
mov
or
pop
inc
lret
cmpsl
mull
fsubr
imul
adc
mov
test
int
push
or
mov
xor
push
orl
dec
push
add
mov
push
cwtl
fcoml
xchg
pop
pop
add
mov
mov
sar
mov
aad
bound
lods
dec
push
jecxz
daa
mov
arpl
pusha
pop
add
cld
gs
fstps
xchg
jge
leave
shl
mov
push
test
testb
pop
aas
or
mov
icebp
jns
pop
in
mov
movsb
xchg
jo
lea
ljmp
inc
nop
aam
aad
jmp
pop
and
mov
aas
adc
push
scas
mov
sub
dec
sbb
and
out
mov
jmp
enter
jne
mov
out
aad
sbb
movsl
push
repz
jbe
fsubrs
cmp
and
cs
jge,pt
jne
dec
test
push
loope
add
pop
lods
leave
inc
data16
xchg
lret
imul
das
imul
mov
das
mov
lea
add
outsl
iret
fdiv
push
into
test
mov
addr16
clc
in
pop
and
pushl
pushf
cmpsl
jge
mov
jne
mov
inc
incl
push
insb
mov
jne
cli
fs
inc
mov
or
pop
sub
decl
and
ret
xor
mov
adc
cmp
inc
in
lods
add
cmc
pop
in
xchg
pop
hlt
xchg
in
sub
or
or
mov
call
lret
sbb
insl
lods
js
aas
mov
jae
mov
repnz
inc
pop
into
mov
or
pop
pop
out
subl
sub
lahf
cmp
js
lock
or
int3
mov
vsqrtss
and
or
xchg
mov
or
not
lahf
inc
scas
xor
pop
es
pop
jle
sbb
inc
dec
lods
mov
fs
mov
insl
dec
push
mov
mov
lds
testb
mov
arpl
scas
popf
test
loop
movb
lock
pop
mov
mov
mov
jns
pop
stc
xchg
lods
arpl
pop
outsb
mulb
out
nop
in
adc
test
ds
and
sub
pop
test
cwtl
inc
mov
dec
mov
push
or
movsb
jg
mov
mov
xchg
xor
mov
xor
xchg
cmp
insb
int
ret
imulb
mov
xchg
nop
bound
mov
mov
sbb
and
ja
data16
xchg
push
inc
hlt
and
lret
pop
imul
sahf
arpl
rol
sahf
add
pop
js
sbbl
inc
inc
mov
dec
rclb
jl
inc
es
ja
fcmovne
mov
xchg
push
jne
sbb
call
lods
sub
sbb
mov
push
jl
fnstsw
mov
arpl
dec
push
lods
cmpsb
rolb
out
xchg
push
clc
outsl
lcall
xor
push
fsubl
fcoml
nop
out
push
imul
outsb
jno
lods
insb
stc
dec
lods
sahf
dec
inc
and
mov
shlb
cld
mov
xchg
inc
pop
pop
push
dec
imul
lahf
mov
add
sub
cs
stos
pop
aas
cltd
sbb
sub
mov
lods
dec
or
xchg
out
hlt
xor
xor
scas
ja
and
adc
jmp
adc
or
in
divb
mov
into
sub
aaa
dec
lods
fildl
ss
cmpsl
cmp
movsl
in
test
pop
pop
xchg
pop
pop
xlat
sub
push
test
movsl
fxch
mov
or
iret
popa
jl
test
stos
mov
lret
mov
cmpw
and
mov
sbb
inc
sub
pusha
jle
leave
or
out
clc
mov
stos
sub
insb
stos
pop
aad
movsl
lods
ret
lret
pushf
cld
fcompl
sub
mov
mov
pop
pop
shlb
mov
js
or
inc
aaa
fs
outsl
push
jae
inc
dec
cld
inc
xchg
dec
shll
push
stc
inc
xchg
orb
aaa
xchg
lock
xchg
mov
int
push
jbe
push
lods
mov
adc
fs
lea
lods
dec
mov
lea
mov
lea
jae
sbb
sbb
cmpsl
mov
push
xchg
or
or
jl
out
jg
dec
cmpsb
outsb
jnp
frstor
push
jecxz
jg
mull
xor
push
mul
test
lea
mov
pusha
jmp
xchg
jmp
inc
addr16
push
outsb
gs
das
inc
out
pop
or
lahf
lret
ss
or
mov
add
lock
mov
int3
sbb
mov
aaa
pusha
movsl
dec
loope
pop
addr16
pop
jno
pop
inc
push
mov
cs
mov
mov
pop
gs
push
push
in
stos
fs
xor
pop
mov
fcomps
addr16
bound
popa
bound
clc
sub
push
jmp
iret
or
lods
pop
out
push
fdivs
loope
pop
into
add
or
ret
insb
dec
outsl
cmp
sub
ret
and
dec
pop
xchg
add
lock
pop
xor
outsb
loope
outsl
push
repnz
fstpt
and
out
icebp
mov
xchg
and
mov
adc
bound
adc
and
sbb
jge
xchg
repnz
sub
push
cmpsb
fcomi
and
pushf
mov
popa
dec
stc
mov
sbb
pop
loop
or
jns
mov
rorl
pop
mov
ja
repz
cmp
dec
dec
push
sbb
adc
push
jo
rcl
sbb
fsin
andl
mov
loop
je
addr16
sbb
stos
arpl
jo
into
push
push
mov
daa
pop
xchg
fs
xchg
pop
stos
fs
loopne
iret
shlb
pop
push
out
adc
mov
xorb
mov
push
cmp
lret
leave
test
jg
imul
sbb
dec
mov
cwtl
imul
aas
outsb
jmp
add
popa
jne
gs
jge
jmp
inc
ds
sti
sbb
test
inc
into
ret
scas
pusha
fisttpll
xchg
loope
add
mov
sbb
out
mov
xor
imul
sub
jno
js
jl
movsb
into
xor
dec
mov
mov
jb
jnp
je
pusha
insl
lret
outsl
xor
stc
xor
lret
push
pop
je
cmpsl
mov
test
insb
repz
cmpsb
jmp
and
and
mov
pusha
inc
ljmp
shlb
xor
mov
or
arpl
icebp
int3
mov
jge
leave
jns
sbb
lret
aaa
mov
ficompl
fdivs
xlat
stos
or
push
inc
outsl
popf
pop
in
cmp
mov
pop
xchg
movsb
fimuls
lea
sbb
daa
push
push
ljmp
insl
aad
pushf
jae
inc
push
sti
jo
ror
mov
dec
xchg
aam
and
imul
or
mov
movsb
and
pop
dec
xor
testb
ficompl
push
push
iret
inc
insl
shlb
int3
push
imul
outsb
sti
add
cwtl
jbe
addr16
adc
adc
inc
enter
mov
aad
out
mov
lock
adc
dec
cli
adc
cmpsl
subb
cmc
lea
test
xchg
lods
ffreep
aas
ljmp
cmpsl
mov
inc
ret
or
mov
fcoml
push
add
dec
and
data16
xor
das
inc
ret
shrl
inc
jb
stc
or
dec
test
data16
repnz
lahf
std
loopne
lods
inc
dec
imul
mov
cs
cmp
outsb
push
dec
pop
jp
or
inc
inc
nop
inc
xchg
std
es
sub
or
hlt
or
test
cld
sub
sti
mov
push
fisttpll
push
into
fs
pop
sbb
das
cmp
or
add
outsb
out
xor
inc
adc
stos
bound
mov
iret
inc
cld
or
loopne
mov
adc
stos
add
lods
jb
pop
lcall
ret
lahf
mov
fidivrs
xchg
test
daa
loop
repz
popa
lcall
or
jg
push
mov
xchg
lea
push
push
mov
jp
fisubrs
mov
cltd
out
ss
rcrb
jne
dec
sub
ffreep
loop
je
ret
mov
aaa
pop
mov
fdivl
mov
pop
ljmp
jge
negl
lea
push
jno
jg
fnsave
push
xchg
nop
dec
dec
xchg
dec
roll
lds
cmp
xorb
pop
arpl
pop
aad
repz
and
scas
xor
imul
pop
sub
cmp
mov
add
popa
lcall
or
hlt
rorl
mov
repz
lods
insb
shrb
cmp
push
mov
out
xchg
add
sub
rolb
out
push
xchg
scas
adc
je
dec
xchg
insb
sub
pop
int3
shl
dec
mov
lock
mov
fstpt
cmp
xor
push
enter
mov
imul
pop
pop
push
leave
lds
hlt
std
out
and
mov
push
pause
aaa
hlt
mov
xchg
aas
pop
movsl
test
or
jecxz
add
add
xlat
das
cmp
pusha
mov
popa
and
cwtl
ljmp
sub
cmp
int3
nop
and
dec
vucomisd
and
pop
sub
aad
ds
mov
out
and
push
dec
and
pop
adcl
mov
sbb
mov
adc
clc
mov
push
fdivp
add
and
and
aaa
in
xchg
xchg
dec
shll
cltd
lods
nop
mov
flds
xor
xor
lahf
cmpsl
ret
or
repz
dec
cmpsb
in
add
int
addl
fadds
lret
push
rcl
xchg
mov
mov
call
jmp
fisubrl
cmp
pop
xchg
or
mov
xlat
fcmovu
test
imul
lea
dec
neg
in
inc
sub
mov
scas
insl
mov
mov
add
sbb
dec
adc
fldenv
and
sbb
jo
repz
addr16
push
mov
lods
cmpsb
mov
mov
adc
pop
cmpsl
sbb
sub
lods
pop
outsl
inc
push
mov
dec
stc
scas
cli
out
xchg
and
sub
insl
dec
cmc
jge
popa
mov
lds
rcr
aad
and
push
ret
mov
mov
push
int3
jbe
loop
hlt
xchg
xchg
push
mov
dec
lret
mov
mov
xchg
xor
jp
cmpb
inc
daa
lds
pushf
icebp
mov
cmpb
in
sahf
and
mov
adc
push
ret
adc
fistps
inc
lret
push
add
call
test
in
push
ja
adc
mov
in
movsb
loopne
pop
stos
mov
sub
inc
cmpsl
enter
mov
mov
push
sub
xchg
jl
loopne
loopne
xchg
xchg
jecxz
jmp
pop
adcl
mov
mov
lods
sub
fisubrl
push
adc
fmull
int3
movsl
xchg
push
daa
jne
cltd
out
data16
xlat
mov
outsl
out
xchg
or
shlb
xor
adcl
fcompl
push
mov
cmp
sbb
fldenv
data16
push
pop
push
xor
jmp
jl
neg
pop
fisttpll
movsb
out
xor
movsb
dec
not
call
push
cmp
stos
bound
test
cmp
lea
mov
cmp
cmpsb
cld
jp
pop
mov
jecxz
push
mov
cwtl
and
dec
push
cmp
xchg
mov
sub
mov
in
inc
bound
mov
xchg
aad
mov
and
and
mov
mov
mov
out
jl
xor
pop
cld
cmp
stos
sbb
adc
enter
push
pop
lods
addr16
insb
leave
test
jo
data16
hlt
or
jg
sub
adc
lea
mov
mov
push
movsb
pop
xchg
xchg
and
es
cmp
or
cmpsl
sbb
fs
mov
aaa
mov
in
cmp
mov
or
scas
jns
test
pop
mov
loope
mov
lods
insb
cmp
sbb
rorb
sbb
mov
mov
stos
sti
and
dec
imul
xchg
leave
out
in
jae
pop
cmp
dec
push
inc
push
arpl
adc
mov
fnstenv
enter
mov
es
cmp
push
arpl
int
push
cmp
push
push
cmp
or
xchg
pop
pop
mov
or
repnz
call
in
inc
mov
ret
push
jg
test
add
jae
stos
xchg
adc
xchg
dec
mov
pop
ds
and
dec
ljmp
or
sub
mov
jo
outsl
mov
enter
loop
mov
rcrb
push
cltd
sbb
arpl
rcll
out
sbb
cwtl
loopne
cmp
inc
lahf
or
in
dec
xchg
jmp
pop
hlt
push
jge
mov
fwait
and
push
dec
iret
mov
push
movsb
or
cmpsl
leave
adc
scas
test
adc
xor
data16
jmp
enter
pusha
mov
sbb
shlb
repnz
cmp
std
je
fs
sub
popa
ret
int3
jmp
mov
pop
aad
or
xor
inc
jg
insl
cltd
cmc
mov
xchg
shrl
or
rorb
fwait
cwtl
jnp
or
adc
pushf
mov
clc
inc
ss
loop
popf
hlt
mov
jbe
ror
pop
sub
pushf
popf
mov
rclb
insl
push
call
mov
or
jge
ret
loope
xor
sbb
bound
inc
xor
inc
mov
mov
adc
mov
mov
cmp
adc
push
xlat
in
ljmp
push
fdivp
inc
outsl
mov
clc
cmp
mov
xor
mov
jns
jecxz
sti
inc
out
movsl
pop
mov
sbb
fsubs
aam
ficoms
add
mov
mov
enter
aam
lods
xchg
push
sub
adc
dec
mov
push
loope
and
and
jne
sahf
push
je
mov
loope
subb
fwait
scas
stos
sub
clc
mov
sub
cmp
jg
pop
bound
lock
mov
xchg
add
addr16
jbe
jns
outsl
xchg
jns
push
dec
and
dec
mov
test
bound
push
mov
pop
jmp
shll
in
pop
inc
repz
add
jl
xchg
cmp
sbb
cmp
fsubp
shll
out
orl
cmpsb
adc
push
and
daa
mov
movsb
leave
jecxz
or
inc
ret
mov
ds
push
fcompl
out
std
repnz
and
les
je
out
cmp
xchg
push
ret
sub
pop
push
sbb
jp
mov
push
outsl
fwait
scas
pop
or
fiaddl
pop
cmpsl
push
cmp
xor
adc
xor
sbb
fs
pop
sbb
sahf
outsl
sub
adc
sub
dec
and
into
cmp
dec
and
imul
push
push
add
sub
add
pop
call
push
adc
xchg
push
cmp
mov
paddsw
mov
adc
pop
popf
movsl
xchg
cmp
aaa
and
enter
xchg
add
test
jb
cli
inc
xor
lret
and
jno
and
sub
xor
loope
repnz
push
dec
int3
cmp
inc
cmp
or
cmp
dec
mov
dec
lret
inc
add
cmp
fcmovnb
lods
out
lret
pop
dec
out
outsl
cmc
test
cld
push
inc
xchg
dec
ret
or
leave
mov
aaa
aad
test
add
sbb
fbld
sti
ja
lret
mov
por
rorb
adc
xlat
fistps
faddl
frstor
or
jno
pop
iret
imul
stos
or
adc
mov
ret
cld
inc
jge
outsl
shl
in
push
cmp
pop
sub
jmp
in
lods
movsl
stos
inc
jae
icebp
in
insb
mov
inc
add
cwtl
clc
ja
sbb
fcmove
and
mov
add
inc
jae
sbb
jb
adc
jecxz
xchg
adc
insl
cmp
test
pop
aaa
pop
mov
daa
sbbb
jmp
or
shl
push
das
fsts
xchg
popa
loopne
cmp
cmp
xor
push
insb
fsubs
sbb
lret
fcmovnu
hlt
out
xchg
repz
xchg
jmp
jne
jnp
insl
xor
andb
rcr
sahf
xchg
add
xchg
jnp
ss
adc
inc
popa
int
inc
push
jmp
push
add
adc
or
xchg
push
movsb
mov
loope
inc
push
xchg
call
rorb
xchg
test
sbb
mov
loopne
iret
mov
mov
jecxz
divps
or
lret
adc
push
sarb
jge
xor
mov
testb
cmp
cltd
cmpsb
dec
mov
cmpsb
jno
mov
pop
mov
mov
mov
insl
stos
dec
push
ljmp
daa
int
cmp
int3
or
mov
gs
lods
xchg
jb
and
ja
fs
and
inc
jno
or
or
jno
data16
push
pushf
push
xor
cmp
pop
mov
pop
gs
mov
sbb
test
xor
fistpl
or
cwtl
repz
jmp
push
or
pushf
pop
dec
dec
enter
sti
pop
mov
push
mov
rcl
or
sbb
mov
scas
fldenv
scas
push
sub
inc
ljmp
mov
sbb
jg
jbe
ret
cmp
and
mov
mov
lret
pop
fiaddl
mov
cmpsl
ds
cmp
or
add
sbb
and
cmp
adcl
push
fildll
icebp
xor
aad
lret
jp
mov
iret
orl
inc
add
fisubrl
pop
cmp
adc
push
lds
push
mov
pusha
insl
and
loopne
add
jg
push
leave
enter
pop
mov
std
jecxz
jecxz
movsb
int
fimuls
lock
ret
pop
shr
sbb
inc
imul
push
outsb
cmpl
push
sarl
xchg
lds
add
out
mov
fsubrp
pop
xlat
mov
outsb
xchg
cmpsl
out
sbbl
insl
push
ja
repz
sahf
push
rorb
jle
xor
scas
aad
push
cld
adc
sbb
mov
inc
jo
adc
dec
aam
mov
pusha
stos
jbe
mov
jns
int
mov
loope
movsl
jno
std
mov
out
arpl
jne
or
rcrl
outsl
or
xchg
mov
enter
ficoml
ljmp
jno
mov
out
jns
push
add
jmp
and
sbb
popa
fisubrl
mov
sbb
insb
adc
leave
sarb
iret
sbb
dec
mov
sbb
in
rclb
adc
lds
pop
pop
ficompl
sub
je
outsl
fwait
mov
mov
shrb
mov
mov
pop
xchg
mov
aam
aaa
in
pop
hlt
push
push
bound
jmp
cwtl
and
fnop
les
pop
lcall
push
xchg
pop
push
pop
sub
ret
sbb
or
rorb
and
gs
mov
jl
lods
fs
ret
cmp
pop
sarb
pushf
ficoms
pop
mov
jnp,pt
cmp
sti
add
inc
xchg
es
es
testb
sbb
into
out
pop
inc
xor
add
movsl
ss
sahf
mov
sbb
xor
cli
cmp
push
icebp
rclb
mov
add
cmp
sbb
sub
int
pop
ja
fcompl
inc
mov
rcll
scas
sahf
jmp
cli
imul
cwtl
mov
and
pusha
push
je
repz
lcall
aad
popf
jb
movsb
jb
jl
and
mov
jne
aaa
daa
cmp
pushf
push
sub
enter
push
mov
sbb
int
xchg
jp
inc
mov
adc
mov
sbb
ret
xsha1
cmpsb
mov
cmp
inc
or
mov
and
add
lods
push
pop
ret
lcall
insl
fistps
cvttps2pi
inc
adc
idiv
movb
mov
cwtl
and
sub
push
in
push
add
push
mov
cld
enter
push
sti
add
xor
jne
jle
jb
inc
cmp
frstor
mov
into
and
fbld
aaa
icebp
scas
cmp
jnp
push
aaa
push
ljmp
push
mov
ret
repz
sahf
ljmp
cmpsb
sbb
std
hlt
and
outsl
stc
scas
fnstsw
or
out
sbb
sub
mov
fdiv
fsubr
mov
in
push
mov
sub
push
or
leave
sub
mov
es
push
fs
mov
or
stos
stos
loope
test
sbb
incl
fdiv
loopne
sbbb
faddp
mov
mov
or
out
push
xor
push
xchg
mov
dec
pop
and
lret
flds
in
sub
or
xchg
jle
icebp
out
call
fmuls
stos
jp
mov
in
xchg
dec
push
jbe
notl
mov
daa
rol
outsl
inc
js
xchg
push
cmpsl
jae
outsb
mov
movsl
or
sbb
sbb
and
mov
nop
icebp
inc
sar
push
xchg
sub
jbe
repnz
fdivrs
into
jns
imul
cli
movsl
mov
and
inc
xchg
push
out
fwait
adc
and
fwait
add
or
cmp
es
js
sbb
loope
xor
cmp
insl
fwait
and
jp
add
dec
jno
cwtl
iret
clc
add
mov
mov
xchg
aad
dec
inc
cmp
push
loopne
out
test
aam
add
adc
mov
jbe
mov
cmpsb
mov
mov
sub
and
jbe
stos
jb
mov
cmp
sub
ss
jb
inc
adc
push
push
jae
aas
iret
jb
push
mov
pop
fnstsw
hlt
jle
push
cmpsl
nop
and
bnd
hlt
cmp
lahf
imulb
rorb
add
enter
xchg
pop
xchg
shlb
mov
and
and
test
lock
into
cs
in
push
ja
in
xor
sahf
mov
repnz
popa
fwait
dec
lock
inc
aad
frstor
push
push
mov
inc
mov
cli
cmp
adc
mov
paddb
pop
dec
fadds
aad
add
scas
jle
fsub
jle
or
push
shll
loope
push
je
jnp
in
aas
in
add
xchg
call
data16
cs
mov
mov
dec
scas
jae
inc
in
insb
fsubs
fnstenv
sub
xchg
jb
xor
cltd
fsts
add
imul
subb
mov
cmp
adc
test
insb
and
stos
arpl
push
call
hlt
out
cli
les
push
repnz
jge
xor
add
lret
lds
loop,pt
stos
push
dec
sub
xor
pop
xchg
dec
mov
jp
pushf
push
xor
jg
pop
fs
movsl
enter
lea
into
mov
xchg
ss
test
cmp
ffreep
xchg
mov
dec
mov
xchg
arpl
arpl
and
mov
ljmp
xor
outsb
pop
jp
ljmp
iret
std
and
adc
mov
and
mov
pop
dec
cmp
bound
cmp
cmp
push
hlt
jne
and
push
shl
lds
cmp
popa
test
or
pop
sbb
rol
add
test
ret
sbb
lret
cmp
mov
cmpsl
or
or
outsb
xchg
adc
sub
cmp
or
mov
lret
push
imul
dec
stos
les
stos
push
rorb
push
repz
and
mov
mov
cs
addr16
dec
jnp
in
jo
rcl
fcompl
lea
pop
push
mov
sub
dec
lock
fcom
mov
jnp
mov
jo
hlt
fwait
add
xchg
xchg
sbb
mov
mov
out
xor
push
xchg
js
addl
mov
ja
test
out
fstpl
xor
pushf
in
pop
shlb
jg
push
bound
out
xor
xor
shrb
xchg
lret
pop
pushf
jnp
add
mov
jg
xlat
popa
pop
fldl
sub
fwait
push
inc
pop
and
daa
stos
dec
insb
aad
pop
fnstsw
and
adc
pop
fiaddl
push
jmp
dec
lret
mov
mov
insl
popf
in
outsl
xchg
or
jnp
je
mov
inc
xor
je
jl
cli
ja
mov
sbb
cmp
mov
in
pushf
scas
dec
pop
aas
mov
mov
daa
and
adc
adc
inc
scas
adc
or
test
scas
fs
or
adc
rcll
scas
mov
mov
ds
cmc
shll
pop
aad
pop
insb
test
jae
add
and
dec
mov
adc
loop
jecxz
movsl
jae
cmp
addr16
out
lret
or
icebp
dec
push
pop
sbb
pop
xor
cli
jle
mov
roll
sbb
xchg
sub
mov
inc
loop
aam
push
adcb
sbb
incb
loop
mov
add
sbb
cltd
or
adc
in
inc
xchg
adc
out
add
cmc
pop
sub
sti
adc
sbb
cmp
xchg
pop
addr16
pop
les
pop
push
push
fninit
dec
xchg
lret
out
xchg
sbb
adc
and
ret
mov
adc
xchg
rcll
jmp
ffree
imul
adc
mov
jbe
in
and
sbb
inc
pushf
mov
jae
hlt
cwtl
cmpsl
fs
nop
loope
aaa
xor
push
cwtl
inc
cmpsl
ret
fistl
inc
push
xchg
lret
adc
pop
leave
fstps
mov
pushl
test
cwtl
push
adc
xor
leave
pop
test
scas
out
sbb
pushf
sbb
popa
dec
adcb
push
or
sub
jns
or
les
xchg
and
test
pushf
cmp
dec
cmp
dec
ja
mov
sub
loope
sbb
mov
outsl
xor
movsl
dec
xor
sub
lret
pop
cmpb
mov
dec
sbb
es
jg
data16
jle
jne
and
loop
and
ja
ret
fidivrs
jl
imul
mov
mulb
int
fwait
ret
aaa
and
push
fcomp
fcomi
xor
cmovge
or
mov
cli
push
mov
jle
sbb
xchg
adc
jns
xchg
jmp
mov
add
sub
lret
mov
adc
loopne
lcall
mov
mov
cwtl
and
les
lret
adc
pusha
push
push
int3
sub
cmc
loop
and
dec
mov
int3
mov
xchg
dec
lds
xchg
ret
ja
rclb
loop
clc
jbe
imulb
xchg
andb
sub
pusha
sbb
enter
lods
dec
and
rcl
xchg
lods
test
pop
xchg
pop
push
and
push
sbb
xor
pop
and
pop
mov
test
icebp
imull
xchg
jae
adc
test
cmpps
aas
jbe
call
adc
jl
shll
sbb
cmpsl
jbe
and
sbb
xor
fucomi
stos
and
imul
divl
lcall
xchg
dec
xchg
mov
ret
inc
rorl
aas
sub
and
sub
call
mov
pop
jno
adc
xchg
push
push
mov
ret
icebp
lods
in
insl
push
ret
mov
fists
and
mov
out
rorl
out
mov
loopne
inc
lods
mov
pushf
es
xchg
fildl
shlb
add
adc
sub
push
aas
xor
cmpsb
out
pop
xor
imul
and
lret
loop
mov
ret
inc
or
jmp
jg
shrb
xchg
popf
inc
aad
mov
dec
fistpl
loop
cmp
jp
mov
icebp
adc
sarl
adcb
push
pop
loop
negb
popf
push
stos
mov
jb
mov
push
inc
pop
lret
sahf
cmpsb
jmp
xchg
jb
mov
cmp
ret
sub
dec
shlb
sub
inc
cmp
imul
lea
adc
mov
xchg
xorb
dec
out
andl
dec
sbb
cwtl
add
cmp
in
inc
dec
imul
mov
ffreep
jge
fwait
sub
cmp
push
scas
dec
dec
dec
js
add
or
out
pop
dec
adc
daa
cwtl
adc
xor
stc
jb
lcall
push
dec
lea
icebp
pop
popa
push
aam
mov
sbb
push
in
nop
dec
ret
pop
or
pop
orb
arpl
mov
in
push
test
push
idiv
aaa
aas
sbb
fadd
xor
std
pop
stc
call
es
enter
in
push
out
cmp
cmp
lcall
aam
pop
adc
test
shl
or
gs
popf
fwait
adc
ret
ds
xor
pop
dec
and
mov
stos
scas
ss
test
ss
adc
cmp
call
cmpsb
sbbl
dec
fwait
sbb
jbe
mov
arpl
dec
lret
adc
push
mov
aam
fldt
mov
mov
iret
or
sub
adc
xchg
cmpsb
les
cmc
aam
call
mov
or
add
lock
pop
xor
jne
sbb
lahf
add
shlb
iret
jmp
notl
into
push
pusha
fisubrl
jbe
stos
leave
mov
imul
xchg
xor
lods
push
jle
dec
sahf
pusha
and
add
and
push
shr
sbb
fidivrl
pop
shl
cs
sbb
push
icebp
add
shll
lock
mov
repz
sub
adc
stc
test
loop
fbld
hlt
inc
jmp
cld
jge
push
in
mov
daa
inc
mov
cwtl
adc
orb
sbb
jl
rorl
dec
xor
or
rdmsr
movsb
push
lahf
inc
frstor
mov
leave
jnp
add
loop
jg
mov
loopne
xor
call
push
xor
je
adc
das
loop
clc
sub
repnz
out
mov
xor
mov
xor
fcmovu
in
pop
shlb
sbb
out
fistps
std
shll
or
dec
mov
popa
inc
fisttps
mov
inc
xor
inc
and
or
pop
cmp
daa
pcmpeqb
shll
xchg
or
loope
test
dec
mov
adc
pop
inc
rcrb
stos
adc
add
test
pushf
jge
cltd
pop
push
jae
cli
sbb
xchg
pop
cmp
mov
or
clc
sbb
xor
enter
mov
das
lret
stos
bound
push
jp
in
fldcw
jnp
mov
mov
mov
mov
jl
fistpl
scas
je
sub
shr
pop
pop
stos
xor
ss
outsb
adc
loope
stc
and
xchg
or
pop
insb
int
pop
push
jns
outsl
sbb
test
jl
loopne
into
divl
add
add
push
ret
fmull
lock
in
add
cli
test
out
sbb
pusha
imul
mov
fucom
mov
orl
movsl
ret
fucom
dec
shrl
jo
int
cli
repz
repz
mov
int
fsts
mov
cli
dec
push
push
xor
out
aad
and
inc
cmp
dec
and
mov
xchg
pop
lea
aas
mov
fs
dec
jg
pusha
jmp
fstl
dec
push
ret
jns
or
scas
or
ljmp
daa
stos
xchg
mov
mov
out
or
push
clc
clc
movsb
push
rclb
pusha
enter
adcl
cs
xor
les
adc
pop
addb
jmp
and
popf
push
dec
insb
mov
pop
cmp
nop
sub
and
jnp
std
cmpsb
movsb
sub
push
out
das
mov
test
sti
loopne
inc
aaa
xor
repz
pop
test
mov
sbb
or
mov
out
sub
or
push
sti
lret
add
push
in
xor
inc
push
cmpsl
lea
mov
es
aas
clc
sbb
xor
icebp
mov
pop
ja
push
inc
sbb
or
lcall
adc
push
mov
dec
cmp
scas
pop
cmp
adc
imul
ja
pop
jp
push
jl
dec
mov
inc
lahf
sbb
out
ret
fsubp
repnz
das
jae
mov
cld
adc
mov
push
jp
or
cmpsl
lahf
jbe
xor
cmp
movsl
out
cmp
ss
mov
insl
mov
push
or
xchg
xor
scas
call
jbe
addr16
xor
cmp
dec
mov
cmc
jb
outsl
movsb
and
dec
xchg
mov
movsl
call
pushf
adc
jge
daa
pop
jmp
and
dec
sub
lea
or
sub
lret
mov
add
or
mov
testl
sbb
hlt
cltd
fsubrs
js
xor
add
adc
les
dec
add
jl
sbb
mov
pop
sbb
sub
dec
lcall
push
adc
fistpl
adc
ja
stos
cmpsl
sti
cs
dec
lahf
push
sbb
jbe
andb
jecxz
sbb
sub
lds
daa
push
ud2
sub
pop
mov
test
sub
mov
pushf
popf
not
bound
insl
int
popf
das
inc
sti
adc
pop
ss
cs
mov
out
popa
mov
outsb
adc
pop
or
sarl
ret
pop
nop
pop
mull
mov
pop
pop
or
add
push
lods
add
inc
vphaddudq
fistps
movsb
movsl
lods
cld
adc
mov
test
sub
out
jno
mov
pop
lret
scas
shrl
or
in
in
sahf
inc
mov
lods
mov
pop
adc
aaa
nop
dec
mov
testb
cmp
inc
lret
or
addr16
stos
imul
mov
pop
sbb
xor
mov
sub
sub
jo
cmp
pop
xlat
sbb
inc
xchg
pop
hlt
les
jmp
sar
sbb
insb
sbb
addr16
cmp
mov
inc
xor
inc
dec
xchg
test
outsb
mov
push
je
enter
xchg
jle
jecxz
push
lahf
push
xchg
out
sub
mov
dec
push
jnp
inc
jb
jge
or
cmp
dec
ds
movsl
aaa
xor
das
fxam
repnz
pusha
adc
jp
in
push
fnsave
mov
mov
inc
icebp
mov
and
bound
js
les
out
push
popa
ret
les
push
push
sub
mov
inc
nop
dec
fidivrs
mov
pop
and
add
mov
adc
dec
nop
and
jbe
inc
je
pop
mov
jle
imul
cltd
mov
movsb
leave
fcoml
testl
xor
push
mov
pop
push
fwait
repz
xor
jl
fildll
mov
push
xchg
cwtl
pusha
and
mov
pop
cmpsb
iret
lcall
cmp
in
xchg
dec
aas
test
push
andl
repz
and
mov
inc
sahf
dec
decl
int3
lret
or
xor
dec
or
add
aam
repnz
out
jnp
push
mov
xor
push
andnps
adc
adc
es
out
rolb
mov
jmp
xchg
lret
sub
loop
push
fwait
std
add
shr
imul
rorb
mov
movsl
cs
in
push
dec
mov
int
sub
and
negl
mov
ljmp
aam
jg
mov
jns
ja
xchg
jl
mov
insl
dec
add
out
fdivrs
jbe
out
push
leave
sub
mov
popa
sbbl
mov
dec
xorl
lock
inc
ret
cmp
jmp
add
pop
pop
pop
mov
fidivs
mov
int
outsb
mov
xchg
cltd
xchg
mov
rorl
enter
test
mov
cli
sti
lds
in
mov
lret
adc
lods
push
imul
and
lea
aaa
call
jbe
cwtl
sahf
lahf
xorl
push
inc
je
push
mov
add
fidivl
push
pop
subl
ljmp
enter
lods
aas
fcomps
call
inc
ljmp
pusha
lret
ds
out
jge
inc
test
ljmp
jl
sub
dec
inc
fadd
lahf
outsl
push
addr16
mov
inc
rclb
pop
xor
push
add
cmpsl
xor
repnz
add
xchg
jbe
or
push
xchg
repnz
shll
push
imul
repnz
xchg
or
out
ret
iret
mov
jbe
test
pop
jb
jnp
test
neg
dec
mov
jmp
jp
lds
fwait
sbb
repnz
movsl
int3
and
loopne
out
enter
inc
xorb
insb
mov
loop
inc
lea
xchg
popf
shlb
fnsave
inc
push
cmp
out
mov
fisubrs
ja
pop
push
jnp
test
mov
aaa
jp
xor
insb
xchg
out
cmpl
dec
mov
add
hlt
sbb
inc
pop
mov
pop
sub
xor
sub
movsb
mov
cmp
movsl
outsb
cli
inc
mov
fcmove
out
or
pop
xchg
pusha
mov
inc
mov
cmp
mov
dec
movsb
rcl
pop
fadd
adc
mov
int
bound
and
mov
pusha
orb
adc
popf
aas
subb
push
out
test
xchg
es
adc
mov
adc
lods
mov
aaa
pop
loope
pop
or
jns
mov
in
sub
mov
jle
aad
jg
sub
inc
add
mov
dec
nop
stos
hlt
jle
mov
sti
call
and
outsb
mov
mov
sbb
push
stc
xchg
jno
pop
insl
lahf
push
fst
pop
ljmp
ret
pop
mov
arpl
in
dec
imul
and
xchg
dec
sbb
dec
mov
sahf
pop
push
lret
add
in
lret
fistpl
dec
je
bnd
decl
inc
mov
dec
cmc
div
and
push
or
movsb
add
mov
or
jl
aad
out
xor
dec
icebp
aam
imul
pusha
xor
sbb
inc
cmc
lret
push
jp
rorl
jmp
movsb
in
mov
lods
hlt
pop
dec
sub
xor
cmp
mov
mov
fisubs
jbe
dec
pop
cmp
dec
lahf
aaa
pop
inc
cwtl
mov
dec
mov
and
bound
cltd
dec
xor
dec
daa
ret
fcompl
push
notl
mov
inc
mov
push
push
mov
ja
jo
adc
jb
lock
push
mov
cmpsb
or
mov
sbb
inc
or
repnz
add
sahf
fmull
mov
push
cmp
out
mov
nop
in
bound
adc
cmc
icebp
inc
std
mov
addr16
mov
lret
sub
dec
inc
mov
inc
sub
push
fwait
sub
loopne
and
push
mov
mov
jne
jmp
adc
xchg
ret
mov
mov
jb
mov
leave
jg
mov
jns
push
adc
test
xchg
test
adc
leave
nop
xchg
in
sub
or
jns
jno
imul
push
lods
mov
mov
mov
dec
inc
bound
fidivrl
adc
movb
movsl
or
dec
ret
jge
nop
loop
outsl
and
loopne
pop
mov
enter
dec
idivb
cmc
pop
jnp
stc
daa
xchg
jmp
jl
fs
jge
pop
test
pusha
sbb
xchg
icebp
jecxz
arpl
cmp
xchg
fstpl
inc
popf
stc
int
mov
imul
fsub
stc
icebp
xor
xor
out
movsl
aas
fs
xchg
push
ss
in
mov
adc
cmp
negb
scas
out
or
in
insl
cmpsb
in
jmp
in
loope
xor
lods
add
inc
pop
inc
aam
jno
cli
and
jo
pop
and
adc
xchg
cmp
out
push
cli
sbb
mov
lret
lcall
dec
xor
iret
addl
xchg
or
push
cli
icebp
mov
adc
cmp
push
cmpsl
mov
call
hlt
inc
sbb
hlt
push
iret
pop
loopne
dec
cltd
stos
mov
mov
adc
call
adcl
mul
stos
cs
fnstcw
push
aaa
dec
neg
nop
testl
sti
pop
xchg
dec
or
dec
nop
test
inc
rorl
lret
and
gs
in
lahf
pusha
in
sub
sub
mov
push
sbb
int
out
jnp
rclb
inc
jp
data16
out
aaa
pop
pop
lea
in
fdivrl
aad
cmpsb
aaa
neg
orl
clc
mov
mov
popa
loopne
dec
icebp
scas
outsl
push
pop
jp
fcomp
push
xor
pop
jmp
xchg
lcall
mov
cmp
out
addl
mov
lcall
lods
xchg
push
sub
cmpsl
ja
das
lea
add
add
cmp
push
enter
inc
pop
fldenv
cmp
mov
test
cs
outsb
popa
jnp
aad
std
les
cmp
and
jl
push
push
sar
mov
loopne
or
add
jmp
dec
push
xchg
cmp
lcall
leave
outsl
and
xor
mov
aad
out
push
inc
notb
pop
xchg
mov
jp
add
ret
push
add
add
jmp
mov
in
out
divl
aaa
sti
repnz
lea
stc
xor
mov
inc
subl
movsl
xor
ret
fistl
movl
add
ficompl
mov
push
cs
lcall
jge
jnp
jg
js
and
jp
sub
jecxz
int3
add
and
ja
inc
add
mov
ficoms
loop
jns
ror
inc
push
jae
ret
out
push
dec
repz
lods
xchg
sub
mov
adc
mov
int3
pop
xchg
mov
push
push
sub
out
dec
add
shrb
mov
xor
int3
dec
lods
cwtl
cli
mov
movsb
push
sub
pusha
out
push
push
lock
ds
push
std
dec
iret
adc
mov
ljmp
mov
ds
sub
imul
mov
inc
mov
and
in
mov
push
sbb
dec
fucom
js
roll
push
ds
enter
aam
cwtl
loop
fs
lret
push
xchg
ja,pn
out
iret
mov
sub
pop
arpl
pop
mov
shll
stos
or
icebp
stos
jne
mov
and
mov
sbb
jl
repnz
mov
stc
orb
xor
jnp
fld1
aad
sti
jbe
int3
mov
pop
xchg
push
imul
dec
add
inc
add
dec
decl
int
test
push
outsb
dec
jmp
jecxz
pop
and
out
lret
mov
fisttpl
test
xchg
mov
add
dec
test
mov
push
xchg
dec
andl
push
dec
add
movb
pop
in
je
mov
mov
je
int3
pop
jbe
testb
sub
dec
lret
cmpsl
fs
fwait
insl
inc
leave
jns
xor
pop
push
mov
mov
mov
dec
data16
loopne
fstp
ja
lock
inc
lods
call
das
xor
push
es
lock
cltd
roll
mov
aas
push
lret
ljmp
cmc
inc
push
jp
cmc
jbe
xchg
notl
mov
add
mov
iret
repz
xor
sub
scas
lods
mov
push
or
inc
addr16
jle
jo
sub
aad
insl
mov
hlt
insb
dec
mov
push
mov
loop
mov
sahf
cld
subl
enter
mov
cmp
pop
rorb
mull
mov
loope
mov
repz
les
pusha
pop
inc
sbb
inc
adc
out
data16
leave
or
pop
es
call
jecxz
sarb
in
in
push
dec
jno
mov
jbe
or
insb
adc
xchg
ljmp
test
stos
dec
jb
lods
in
push
add
fwait
mov
jl
cmp
out
sbb
jecxz
adc
dec
into
mov
jecxz
fs
inc
subb
push
shrl
xchg
jae
pusha
xchg
jl
mov
imul
loope
push
or
and
hlt
lahf
add
dec
xchg
nop
roll
xchg
jg
roll
pop
mov
ss
std
shlb
fildl
mov
mov
cmpsl
out
push
insb
pop
xchg
std
inc
or
push
adc
and
test
cmp
idivl
add
xchg
insl
dec
hlt
cmp
and
cld
sbb
mov
fs
inc
xlat
daa
outsb
out
xchg
or
xor
out
popa
addb
pop
fwait
in
mov
mov
jns
pop
loope
cmp
pop
les
clc
dec
outsb
cwtl
xlat
movsl
or
lods
mov
ss
movsb
mov
mov
sbb
cmp
imulb
adc
push
das
