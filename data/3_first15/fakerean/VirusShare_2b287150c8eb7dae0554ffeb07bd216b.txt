push
push
call
andl
push
push
call
pop
pop
movl
jmp
xor
inc
ret
mov
movl
xor
inc
call
ret
push
mov
push
mov
push
mov
push
xor
mov
sub
jmp
mov
mov
and
jns
dec
or
inc
cmp
jne
cmpl
jle
add
mov
and
xor
jmp
test
jne
cmp
jle
or
add
mov
sub
mov
addl
imul
roll
inc
cmpl
jb
mov
xor
pop
inc
pop
leave
ret
push
mov
push
andl
jmp
mov
inc
mov
mov
cmp
jae
mov
add
mov
add
mov
mov
jmp
leave
ret
push
mov
sub
push
push
push
call
push
call
mov
cmpl
jge
push
call
mov
mov
push
push
call
cmp
jne
movl
jmp
mov
xor
mov
push
pushl
mov
call
pop
pop
cmp
je
lea
jmp
call
test
je
push
push
push
call
mov
mov
xor
mov
div
mov
mov
xor
push
pop
div
mov
mov
shl
mov
xor
push
pop
div
push
pop
sub
mov
shr
or
mov
mov
sub
mov
push
mov
neg
sbb
and
push
pushl
call
mov
push
pushl
pushl
call
add
push
call
push
call
mov
mov
push
call
pop
leave
ret
int3
int3
repz
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
neg
jmp
push
push
push
push
push
cld
cmpsl
aad
jecxz
xorb
mov
mov
ret
repz
jb
xor
dec
stos
lret
mov
cmpb
xchg
decb
rcrb
insb
or
iret
and
mov
lods
data16
in
push
bound
ret
xchg
push
lret
sbb
pop
and
push
mov
mov
xchg
sub
mov
scas
mov
test
mov
cmpsl
lahf
cs
jp
test
stos
clc
jns
sub
and
popa
pop
cli
in
ja
xchg
je
sub
pusha
jns
xor
pop
out
outsl
dec
test
push
fwait
stos
lods
pop
cmpsb
and
mov
cltd
jb
rol
pop
cmc
jecxz
xchg
stc
mov
xlat
ret
pop
js
dec
bound
sbb
lahf
mov
push
pop
dec
pop
daa
pop
mov
xchg
loopne
mov
pusha
mov
pop
lock
push
jns
fidivs
fdivl
jle
int3
stc
dec
cmc
adc
push
inc
pop
aam
and
cmp
sub
pop
pop
push
rorb
cmpsb
adcb
xor
cmpsb
push
dec
mov
sbb
sub
lds
and
aaa
scas
add
nop
popa
push
orb
inc
js
cli
iret
xchg
push
push
push
les
sbb
test
sbb
ljmp
sbb
pop
or
mov
cld
pcmpgtw
mov
xchg
fs
push
xor
mov
popf
push
cmp
xor
mov
jmp
mov
xlat
adc
mov
add
icebp
fwait
les
inc
jns
ret
cmp
jg
and
add
into
pushf
loop
dec
mov
xorl
loopne
mov
das
es
xor
xor
mov
or
xchg
jg
aam
mov
xchg
adc
mov
add
inc
mov
dec
adc
insl
outsb
in
push
stc
jl
jl
mov
mov
mov
and
test
nop
enter
addb
popf
pop
clc
add
ficomps
mov
inc
insl
jno
into
ret
fisttpll
cmc
inc
sbb
ret
cmc
inc
aad
push
test
or
vpackssdw
clc
xor
mov
pop
push
cmp
jns
data16
lock
cmp
sub
test
fisubs
push
fwait
aas
xchg
call
movsb
or
xor
mov
xchg
movsl
dec
lods
aas
dec
mov
cwtl
inc
sub
lea
test
fwait
mov
sbb
cmp
insl
adc
sahf
xorl
ret
sbb
cli
aas
cmp
cmp
fs
lcall
loopne
std
sub
and
mov
fistl
xchg
xchg
cmp
sub
cmp
xchg
xor
fsubl
mov
shr
and
cs
inc
xor
push
leave
lcall
iret
inc
loope
incb
cmp
cmp
out
mov
clc
inc
inc
mov
dec
hlt
stc
gs
push
roll
jo
gs
adc
mov
pop
sub
add
iret
iret
dec
push
inc
xor
je
test
ds
ret
mov
and
sbb
rcll
aas
sub
stos
mov
add
out
dec
mov
add
or
pusha
mov
ror
leave
adc
lods
sbb
icebp
cmp
add
jb
mov
mov
mov
out
and
lock
add
ja
rcrb
and
lret
cmp
push
adc
xchg
dec
rcll
lea
sub
xor
cmp
das
and
in
call
imul
mov
jo
or
and
jecxz
or
dec
out
das
cmp
roll
inc
in
fiadds
add
lods
shrb
cmpsb
fmull
xchg
pop
scas
pop
cld
pop
push
mov
mov
sbbl
push
xor
leave
push
jae
xchg
mov
cwtl
mov
lock
fnstsw
ds
dec
push
push
and
xchg
add
cmpsl
dec
sub
lcall
clc
jp
sbb
sbb
jne
and
push
sahf
pop
je
cs
out
mov
or
dec
push
bnd
mov
aad
adc
and
mov
xor
push
xor
mov
in
cmp
pop
pop
int3
pop
ds
out
jg
rcl
and
fsubr
push
outsb
stc
cld
push
loop
sbb
ficomps
or
out
inc
roll
or
xchg
cwtl
outsl
iret
add
mov
imul
and
insl
push
xchg
aaa
add
dec
cmp
mov
mov
dec
jg
push
or
into
dec
xor
inc
pop
test
pop
shl
xchg
adcb
aad
andl
cmp
test
xor
xchg
inc
xchg
outsl
in
lret
mov
cli
sub
enter
repnz
les
test
lods
push
aam
lea
fisttpl
pushl
pusha
sub
push
lods
iret
cltd
outsl
mov
cmp
test
sbb
dec
call
cmp
jge
adc
push
mov
adcl
cmp
jno
lds
lahf
aam
mov
cmp
sub
add
fisubl
sbb
dec
add
divl
adcb
pop
fs
mov
mov
faddl
popa
mov
mov
pushf
ret
pop
cli
cmpsb
int
mov
mov
push
fsubrl
inc
mov
add
or
mov
mov
sahf
adc
jle
xor
push
idivl
adc
test
insl
dec
xor
stos
das
movb
inc
xor
mov
or
xchg
addr16
mov
adc
ret
movsl
sub
mov
mov
mov
rcl
loopne
aaa
push
in
ds
adc
xchg
mov
mov
sahf
mov
add
jecxz
lea
xchg
popf
in
sbb
push
in
sbb
rclb
inc
ficoms
fsubr
dec
loope
movsb
test
add
pop
sbb
pushf
pop
mov
in
nop
icebp
daa
adc
jo
ficompl
pop
arpl
xor
xor
push
pushf
iret
mov
mov
insb
sbb
imul
and
lock
jne
jl
and
dec
add
jg
iret
jl
dec
dec
pop
pop
sbb
dec
push
push
nop
jbe
test
fisubs
jno
flds
movsl
dec
inc
cmp
jecxz
and
add
dec
int
test
outsb
out
cs
jbe
bound
lret
mov
adc
cmpb
jmp
bnd
mov
lea
fstpt
sbbl
dec
xchg
popa
cmc
hlt
rorb
int
jmp
shrb
dec
sbb
push
rcrl
xlat
scas
lcall
dec
cmp
push
mov
fildll
mov
jle
cmp
mov
mov
sbb
push
data16
scas
add
cmp
imul
in
inc
divb
pshufw
pop
rolb
popl
out
cmp
xlat
and
test
loopne
aaa
ljmp
dec
lea
fimuls
inc
stos
or
fucomip
ja
and
or
stos
inc
push
and
fldcw
addr16
out
mov
jno
pop
mov
aas
xor
les
ror
mov
mov
jnp
pushf
mov
sub
push
and
xor
call
sbb
xchg
cli
push
fsubl
mov
fs
push
and
test
stos
into
cli
outsl
popa
jmp
fimuls
push
fneni(8087
and
dec
int
push
pop
push
lcall
lret
pop
push
sub
loop
xor
les
mov
data16
adc
inc
xor
test
pop
adc
mov
cmc
dec
mov
das
movsl
sbb
mov
cmp
xor
dec
je
popf
mov
or
sub
sbb
adc
jle
ljmp
lods
sbb
aad
mov
into
pop
es
cmpsl
or
dec
out
movsl
std
clc
arpl
fcoms
add
stos
jb
cs
push
inc
push
xchg
cmc
ja
jnp
mov
movsb
push
lret
lds
shl
test
popa
jmp
xchg
xor
sbb
inc
or
or
shrl
hlt
ja
or
xorl
dec
jmp
mov
cmp
cmp
dec
sarb
push
filds
mov
add
xor
add
adc
sub
rorb
cmp
stos
std
popf
xor
outsl
sahf
mov
xor
ja
cmpsb
js
mov
mov
mov
push
cmp
ds
pop
sub
jne
sbb
xlat
push
adc
cld
adc
jge
adc
mov
ja
mov
push
das
notb
loop
aas
xchg
jg
icebp
pusha
fcmovne
out
push
xor
imul
add
popa
into
outsl
lret
pushf
fsubrl
popa
push
xchg
aas
sub
mov
pop
rolb
test
in
adc
je
and
jb
popa
mov
mov
and
sbb
jo
jmpw
imul
repz
mov
outsb
addb
inc
sbb
ljmp
cmpl
clc
adc
sub
lods
push
pop
mov
call
fldt
add
dec
add
and
cmp
or
stos
repz
sbb
xchg
fsubrl
push
fnstcw
inc
push
sub
ror
stc
outsb
cs
psrlw
ret
out
cmpb
pop
jae
fcmovb
lds
jo
loop
loope
fmull
testl
cmpsb
insb
or
lret
jp
loop
push
push
or
add
arpl
outsb
jbe
jns
testb
push
push
nop
mov
daa
xchg
out
mov
add
ljmp
lds
daa
jmp
lods
in
scas
add
scas
fcomps
xchg
xchg
xchg
jns
ror
mov
add
mov
mov
dec
sub
loope
jb
mov
sub
and
bound
push
fisubl
jo
outsl
cmp
jp
sbb
shr
pusha
outsb
and
rcll
insb
jle
jae
inc
enter
lods
mov
push
inc
adc
lret
mov
subl
and
arpl
loopne
cltd
jae
jmp
sbb
fdivl
int
jb
cmp
jae
jnp
scas
mov
or
adc
pusha
cmp
jp
sti
push
andl
pusha
dec
call
xchg
std
fstpt
pop
push
iret
cld
mov
test
pop
xchg
gs
gs
mov
sub
fnsave
rclb
pop
adc
repnz
and
popa
es
push
in
mov
outsl
mov
sub
stos
xor
lock
mov
or
xlat
pop
rorl
aam
add
enter
shl
insb
xchg
call
mov
outsl
xchg
mov
fcos
mov
lret
out
xchg
inc
out
pop
into
jbe
xchg
jae
das
adc
pusha
adc
insb
mov
fs
xor
nop
jae
mov
gs
jo
pop
push
xchg
ffreep
mov
aad
pop
je
inc
adc
ds
stc
loope
mov
rorb
add
clc
sub
and
incl
insb
jl
pop
lock
dec
mov
out
xchg
xchg
popa
mov
out
xor
jbe
mov
inc
xchg
xchg
sbb
fnstcw
or
sub
pop
lds
push
sub
mov
mov
cs
lret
or
mov
push
out
in
pop
aam
ja
adc
adcl
ja
xchg
aaa
mov
adc
dec
mov
jl
lods
mov
jge
int
add
in
mov
movsb
dec
fbld
divl
cmc
mov
cmpsb
adc
rorl
lods
addl
daa
jmp
pusha
cs
sahf
ds
out
ja
inc
mov
adc
in
and
fwait
mov
mov
js
push
mov
aam
cli
mov
sti
fistpl
mov
ret
lock
lods
jg
mov
lahf
sahf
sub
fs
xchg
test
push
jae
xchg
cmc
testb
inc
movsl
cmpsb
or
add
mulb
scas
std
inc
idivl
cld
and
mov
in
ss
sbb
xchg
dec
add
or
xchg
mov
mov
mov
daa
jle
stos
jnp
int3
adc
jb
dec
mov
out
cmp
push
xchg
stos
fimuls
or
mov
je
ret
sbb
lock
andb
fnstsw
adc
adc
in
adc
movsb
xchg
add
sub
xchg
xchg
pusha
inc
mov
rcrl
data16
xchg
adc
data16
push
scas
mov
and
fisttpl
outsb
in
les
scas
fld
out
inc
pop
stc
or
or
popf
jg
out
sub
sbbl
lahf
hlt
xor
aam
or
add
addb
and
cmpsl
mov
lret
gs
mov
ja
xchg
aam
cmp
xchg
push
and
mov
daa
sbb
mov
test
shrl
pop
sbb
jp
cld
js
addb
xchg
cmp
aam
push
rcrb
les
fwait
test
outsb
lret
inc
enter
sahf
call
adc
adc
popf
pop
push
mov
jle
leave
sub
iret
xchg
sub
je
cmpsb
call
add
or
jp
imul
push
push
lcall
shlb
jge
aaa
shll
in
sub
cld
jbe
ss
jge
push
sub
ja
xor
aas
inc
mov
loop
pop
ja
fcompl
fmull
in
fdivl
bound
ss
jecxz
repnz
lds
aam
dec
aaa
push
inc
mov
mulb
mov
dec
pushf
jl
sub
movsb
push
fwait
adcl
jne
jno
push
push
pop
in
mov
ljmp
fisttpl
inc
in
xor
push
nop
neg
insl
xchg
and
pop
test
sub
lds
xchg
ljmp
mov
pop
pop
pop
jb
aad
js
mov
xor
imul
jecxz
adc
sbb
mov
dec
fimuls
mov
sbb
stos
push
jns
push
movsl
pop
repnz
call
movsl
into
dec
xchg
cmc
leave
push
stc
and
es
push
decl
in
pop
lods
cmp
loope
sbb
hlt
xor
and
and
call
jecxz
mov
cmp
adc
sbb
adc
imul
jne
jne
cs
xchg
inc
js
jecxz
mov
push
arpl
sub
inc
sti
jp
lahf
bound
mov
clc
fcoml
xor
pop
mov
iret
cmp
in
push
mov
dec
dec
jp
jae
sahf
pusha
adcb
rclb
jmp
fisubrl
dec
fadds
mov
arpl
scas
test
xchg
push
inc
jg
jle
lret
jnp
xchg
fstl
insl
mov
fbstp
das
ds
cmc
dec
xchg
dec
loope
push
push
sbb
iret
nop
pushf
xor
jbe
loop
inc
rorl
call
call
repnz
fmull
jbe
sti
jmp
test
notb
lret
rcll
mov
inc
stc
mov
push
or
xchg
loop
add
mov
mov
pop
xchg
insb
mov
push
addr16
xor
mul
ret
mov
stos
sub
and
loopne
cmp
js
add
dec
es
imul
jmp
in
push
push
rcrb
xlat
and
mov
jno
xchg
inc
sub
adc
cs
pop
test
insl
mov
pop
pop
mov
lock
push
mov
adc
jb
mov
add
lock
xchg
add
push
add
xor
xor
push
ret
and
ficoml
jge
mov
mov
xchg
sahf
add
cld
push
jno
hlt
or
lret
nop
divl
out
cld
add
xor
xlat
call
mov
pop
std
sub
jo
hlt
inc
cmpsb
stos
mov
scas
test
jp
pusha
movb
push
imull
inc
nop
push
mov
pop
outsb
push
mov
cltd
mov
pop
jnp
adc
pop
inc
mov
movsb
cmpsl
mov
aad
lsl
movsb
test
jo
in
push
data16
addr16
mov
rcrb
rcrb
or
std
jg
int3
daa
jecxz
decl
pop
xor
add
fcom
cld
mov
les
ds
sbb
inc
mov
add
and
ret
stc
jg
fimull
sub
aam
orb
pop
mov
orl
xchg
ja
dec
adc
and
dec
loop
xor
mov
lcall
int3
pop
sbb
out
loopne
leave
mov
arpl
sbb
cmp
or
push
cmc
dec
call
or
mov
dec
sbb
orb
mov
mov
sbb
sub
ja
js
jg
cmpsl
imul
jmp
cmpsb
or
mov
dec
popa
ucomiss
xlat
ret
sbb
sti
int3
pop
nop
xor
dec
sti
jns
stos
or
mov
xor
jl
mov
push
js
popa
pop
sarb
ret
xchg
popf
mov
arpl
cmpsl
cld
mov
jnp
arpl
in
pop
movsb
mov
repz
loope
jg
or
es
incl
fsubl
cmp
shll
int3
add
xchg
std
dec
les
imul
xchg
mov
mov
mov
int3
mov
add
test
lods
hlt
jmp
rclb
rorl
scas
cmp
mov
mov
lret
xchg
arpl
fbld
sub
cwtl
sub
aaa
mov
jg
push
mov
js
ja
adc
cmp
jg
sub
rcrl
sbb
pop
push
sbb
mov
cmp
add
adc
stc
mov
cmp
mov
aas
jl
and
pop
xchg
cmp
aam
mov
mov
mov
mov
repnz
dec
pop
pop
mov
push
jae
cltd
aaa
xchg
push
mov
insb
loop
popfw
idivb
call
daa
push
mov
push
fldenv
jo
mov
sbb
mov
addb
pop
xchg
dec
in
ljmp
mov
fwait
sub
fs
sbb
clc
cmp
mov
fwait
ds
in
jbe
add
mov
test
add
sbb
lods
xchg
sti
ljmp
jo
mov
jge
cmpsb
jle
imul
cmp
xchg
imul
sar
nop
mov
lcall
lods
fs
mov
jg
pop
int3
fs
xchg
clc
mov
push
pushf
mov
hlt
mov
dec
int3
clc
fldenv
ljmp
cmpl
jmp
push
and
cld
mov
pop
mov
adc
insl
imul
push
dec
fbld
lea
pop
insb
mov
pushf
mov
lods
jae
clc
and
xchg
jns
xor
lock
mov
lods
aad
or
and
lahf
xor
es
sbb
and
mov
xor
in
pop
jmp
pop
nop
jg
mov
pop
pop
out
inc
sbb
push
dec
mov
mov
jb
into
push
pop
popf
addr16
dec
inc
sub
cwtl
aas
inc
and
or
shl
mov
dec
push
jne
dec
sub
pop
pop
insl
ja
fimuls
xchg
in
cwtl
xlat
add
push
xorb
pop
idiv
popl
cltd
jbe
in
jecxz
inc
xor
lret
add
pusha
or
xor
xlat
add
roll
cwtl
xor
popa
sbb
xchg
push
sub
ret
mov
pushf
mov
ret
or
mov
out
and
lret
mov
mov
mov
roll
inc
push
inc
lods
mov
popa
aad
xchg
mov
push
into
pop
in
sahf
jno
add
adc
rcl
cmp
aaa
dec
mov
pop
push
scas
imul
add
push
stos
push
dec
and
xor
xchg
lret
pop
mov
mov
data16
pop
inc
xor
iret
stos
pop
fcomps
clc
pop
pop
adc
add
enter
pushf
inc
and
jae
inc
push
lods
cmpsb
ret
testb
shlb
fucomp
lea
andb
xchg
mov
out
jge
adc
dec
cmp
mov
pusha
mov
pop
push
std
jns
inc
adc
mov
or
sbb
cmp
mov
data16
mov
js
pop
cmp
xchg
cmpsb
divl
fs
jne
push
inc
ljmp
loop
xchg
xchg
insb
jg
jno
enter
cmp
or
nop
jns
movsl
dec
bound
pusha
dec
loop
and
sbb
push
adc
xrelease
dec
int3
adc
mov
xchg
ljmp
mov
xchg
lds
scas
jl
out
ss
ret
or
imul
ds
cmpsl
sbb
and
inc
or
jae
mov
pop
push
cmp
and
pop
fs
lods
icebp
jns
jnp
jne
cmc
pop
dec
xchg
and
or
sub
test
mov
imul
push
mov
inc
dec
ja
xchg
ljmp
dec
mov
aas
bndstx
and
xchg
stos
addr16
xchg
in
dec
ror
mov
and
cwtl
mov
inc
dec
jne
popf
xchg
adc
add
inc
mov
test
jb
cmpsb
pop
stc
lods
cli
xchg
negb
insl
dec
mov
xlat
loopne
add
in
outsl
flds
mov
fisttpll
fldl
or
xchg
push
add
jge
mov
mov
cmovns
imul
out
ror
push
in
pop
inc
xor
cmp
loope
aas
pusha
dec
cmp
pushf
js
pop
inc
std
adc
aas
xor
pop
popf
movsb
cld
loop
in
xor
ficoms
add
xor
call
jb
and
push
dec
jnp
fsubr
adc
jae
ficoml
adc
addr16
or
jmp
insl
jle
idivl
jae
sub
push
sbb
xor
mov
pop
push
mov
aas
push
orb
rcll
xchg
loop
std
filds
add
out
jb
shlb
mov
imul
inc
cmpsb
movsb
filds
ss
loop
icebp
push
dec
mov
mov
push
rclb
jo
lds
and
sti
call
icebp
pop
xchg
mov
cmp
xchg
mov
test
mov
mov
and
fs
lock
sub
aas
xlat
cmpsl
mov
sbb
inc
adc
cmp
aaa
sbb
jg
pop
bound
jl
or
sti
mov
mov
shrb
mov
push
sub
or
cmc
test
aas
adc
repnz
scas
mov
das
pop
lret
inc
pop
outsb
sbb
mov
inc
lods
sub
shrl
ret
mov
push
fdiv
leave
add
pop
jge
xor
push
daa
push
mov
mov
sbb
adc
xor
fmull
roll
xchg
sub
sub
jns
call
repz
add
loope
test
fisttps
and
or
hlt
jns
imul
movsb
ds
insb
ljmp
loop
jns
js
and
xor
lods
or
cmpsb
pop
mov
jns
xor
and
stos
pop
test
xchg
cmp
ljmp
popf
push
insb
pop
fldt
push
lea
in
mov
pusha
jp
mov
dec
dec
lret
imul
xchg
stos
and
ljmp
jmp
scas
shll
mov
sub
cmp
or
out
dec
repz
cmc
lcall
mov
and
je
pop
rclb
inc
adc
mov
testl
out
jo
stc
fistps
sbbl
sbb
mov
mov
sbb
sbb
in
mov
sbb
daa
mov
repz
mov
add
add
out
lock
xchg
movsb
arpl
iret
mov
pop
xchg
mov
or
mov
lahf
jo
jne
je
jno
xor
cmp
pop
mov
cmp
rcr
xor
mov
jge
xchg
pop
mov
je
sub
sub
adcl
test
stos
dec
cmpsl
fdivs
mov
insb
mov
inc
sub
jae
mov
pop
fimull
cmpsb
ret
mov
dec
cmpsb
mov
mov
out
outsl
aad
out
cmpsl
push
mov
push
adc
pop
iret
push
fdivs
jmp
mov
in
and
xchg
push
lcall
imul
out
jo
shl
pop
dec
jae
fildll
dec
add
sti
jnp
cltd
jne
test
outsb
and
scas
mov
xor
popa
cmpsl
data16
cmp
push
outsb
movb
adc
push
lret
xchg
add
mov
cmp
and
push
add
fisubrs
movswl
cmp
stc
mov
rcll
jb
push
lahf
xor
ja
les
pop
leave
in
fisubs
test
mov
shlb
cmp
pop
arpl
ret
inc
push
movsl
cltd
push
add
sbb
jnp
scas
cmpsl
inc
insb
in
cli
push
aaa
mov
popl
jge
push
add
popf
pop
mov
adc
stos
cmpsl
lret
lds
inc
hlt
add
sbb
stos
push
cwtl
jae
pminsw
sub
aas
imul
and
add
repnz
jmp
fidivrl
dec
out
adcb
sti
cmp
adc
and
mov
cmp
cs
jge
pop
sahf
xor
insb
fcoml
fwait
lret
or
mov
popf
ljmp
add
dec
jnp
xchg
mov
insb
adc
lret
es
xchg
fnstsw
rcrl
stc
or
cmc
xchg
mov
jle
add
jnp
mov
outsl
pusha
push
fs
jne
xor
into
add
jbe
xor
pop
leave
push
movsl
data16
ss
ss
jmp
jp
mov
jg
jmp
iret
arpl
dec
mov
jl
lahf
test
testl
inc
repnz
rolb
mov
fs
add
fwait
test
cli
mov
add
and
xor
negl
cli
je
xchg
jns
or
pop
nop
push
and
xor
inc
sbb
cmp
xorl
push
cmp
xchg
push
xchg
mov
add
mov
cmpb
xchg
xor
dec
dec
jno
ss
push
jl
or
stos
sub
push
or
test
dec
dec
mov
add
pop
popl
sbb
sub
sahf
xchg
aam
ret
or
cwtl
test
arpl
leave
inc
in
mov
loop
sub
das
push
mov
lcall
lret
and
push
subb
aam
mov
daa
dec
leave
mov
adc
jo
std
aaa
adc
pop
or
test
fnsave
mov
push
cld
jb
jmp
add
inc
xor
pusha
nop
pop
dec
xor
xchg
popa
and
cmp
mov
lea
shl
ret
xchg
xchg
sub
dec
and
pop
mov
xor
in
dec
adc
sub
mov
and
jns
push
popf
movsl
mov
ja
in
and
push
add
mov
loopne
fnstcw
andl
fstpt
inc
add
es
or
adc
imul
or
xchg
and
push
xchg
rcrb
lock
fstpt
out
sbb
mov
frstor
arpl
enter
andl
push
mov
adc
push
cwtl
push
pop
mov
mov
sbb
push
addb
xor
cmpsl
in
cli
jae
inc
ja
xchg
mov
fidivs
loopne
xlat
push
jo
aaa
test
sbb
dec
icebp
sbbl
xlat
and
mov
clc
sbb
into
lods
sub
sub
push
cwtl
jl
frstor
and
pop
int
clc
int3
inc
dec
mov
dec
push
inc
lds
mov
popa
test
in
insb
insb
sub
xorb
cld
pop
outsl
inc
push
inc
mov
out
mov
sbb
sub
hlt
mov
cld
or
mov
jge
mov
lods
imull
adcb
mov
add
loopne
or
outsl
nop
dec
mov
xchg
xchg
and
popa
jbe
xlat
sbb
loope
and
pop
mov
jmp
es
mov
pushf
daa
sub
ja
popf
out
cltd
sarb
xchg
mov
inc
dec
mov
testl
and
mov
cmp
cmc
sbb
stc
pop
cwtl
mov
sub
mov
daa
or
lods
sahf
lods
iret
cmpsb
sub
rcl
cld
insb
hlt
pop
enter
or
imul
xchg
rorb
lods
clc
xchg
insb
ret
ljmp
xor
or
out
cmpsl
mov
out
mov
add
mov
sub
jo
ljmp
pop
adc
sub
sarb
push
js
mov
pop
xlat
movl
and
ret
mov
mov
fadds
pop
out
jo
mov
repnz
sub
mov
add
or
das
gs
or
dec
and
test
andb
ds
es
sub
xchg
rcrb
mov
mov
pop
add
add
sub
fwait
jo
hlt
in
sub
loop
xor
dec
lahf
xor
add
cmpb
push
mov
xchg
pop
je
and
push
inc
outsb
stos
hlt
pusha
in
push
fwait
mov
pop
or
mov
adc
out
and
and
cld
cmp
stos
pop
inc
sbb
test
adc
cmp
out
cmpsl
stos
jle
flds
cwtl
jb
out
lods
push
mov
pushf
icebp
dec
jge
pop
icebp
mov
std
inc
ret
imul
xlat
mov
mov
dec
push
rcrl
xchg
cmc
and
jp
add
sbb
lock
stc
mov
iret
mov
sub
add
clc
and
dec
sbb
mov
movsl
mov
addr16
fldl
sub
push
mov
add
adcl
jb
jae
push
add
es
sbb
add
and
cltd
xchg
std
dec
sbb
xchg
mov
or
push
cmp
mov
shlb
inc
js
pop
imul
jmp
xor
popa
adc
mov
dec
sub
or
stos
mov
btc
call
mov
notb
push
dec
mov
mov
aad
dec
mov
pop
add
jp
jle
js
into
dec
insb
pop
inc
push
add
mov
mov
ja
movsb
popf
shll
test
arpl
push
ljmp
dec
jno
xor
sbb
pop
inc
sbb
pop
dec
add
jb
mov
jne
push
jne
and
mov
test
cmp
clc
jne
sbb
bswap
hlt
add
xchg
lcall
inc
jae
jge
sub
xor
dec
icebp
jle
fcompl
xchg
or
adc
pop
insb
popf
xor
addb
mov
adc
out
mov
push
loopne
pop
dec
mov
mov
insb
push
gs
or
shlb
movsl
or
push
xchg
out
shlb
mov
lods
arpl
f2xm1
or
dec
and
adc
mov
inc
lods
mov
test
orl
fistps
cwtl
popa
lods
jns
push
dec
push
repnz
test
fsubrs
and
or
outsl
push
pusha
lock
add
cltd
pop
subb
sub
or
jmp
and
imul
call
xchg
fidivrs
repnz
add
ljmp
repz
clc
or
repnz
adc
das
inc
insl
xchg
jbe
pop
cmpsb
add
out
sub
and
mov
inc
clc
sarl
dec
loop
mov
loopne
fwait
jb
inc
hlt
loopne
nop
les
push
imul
xchg
popf
ret
clc
pusha
test
dec
adc
sti
mov
push
cld
insb
xor
hlt
lret
mov
outsl
add
pop
adc
add
jl
inc
inc
daa
sbbl
cmp
std
jne
out
mov
fs
int
clc
fwait
mov
pop
lods
pusha
sbbl
pop
or
sbb
hlt
nop
rolb
or
jno
push
add
in
nop
dec
sub
mov
ss
xchg
rcr
nop
cs
xor
adc
inc
inc
rclb
lods
sub
push
sub
sbb
test
xchg
jle
mov
push
sbb
jl
mov
mov
push
xchg
dec
mov
inc
or
pushw
pop
push
mov
lret
sub
test
inc
iret
into
imul
jmp
test
sub
lods
pop
imul
test
into
ret
mov
mov
pop
or
dec
jne
inc
jle
dec
in
sub
xchg
or
cmpsb
jge
add
sbb
fcompl
mov
jle
xor
xchg
jl
mov
jecxz
cmp
arpl
stos
rclb
lcall
sbb
gs
es
sbb
xor
jnp
into
lret
mov
in
out
out
daa
push
repz
adc
out
loop
lock
cmp
adc
inc
roll
jecxz
into
add
sahf
lea
ljmp
enter
es
rcll
mov
lock
push
adc
clc
inc
and
movsl
aam
ds
push
pop
jge
and
mov
adc
cltd
cmp
sbb
jecxz
rcrl
jns
cmp
add
xor
jo
scas
in
sub
loopne
fimuls
ret
push
dec
daa
in
inc
pusha
ret
fcomi
cmp
clc
xchg
je
lock
cmp
mov
cltd
push
or
inc
add
push
mov
aam
jle
or
cmp
dec
lods
push
adc
sbb
cmp
push
bound
sbb
outsb
or
add
jae
ljmp
and
xor
out
loop
lret
and
sbbb
jbe
adc
adc
dec
mov
xchg
notb
dec
ds
cmp
mov
aam
mov
dec
mov
aaa
push
nop
jge
ja
dec
ficomps
mov
test
pop
sti
in
pop
mov
push
and
push
cmpsl
cmpsl
or
rorl
cli
jbe
xchg
mov
sarl
pop
mov
int3
in
fdivl
in
rorb
mov
dec
loope
push
fcmovnbe
add
fdivl
add
outsb
mov
jae
popa
pop
dec
add
pop
mov
mov
movups
test
dec
rcrb
inc
sub
dec
jl
mov
mov
push
sub
push
xlat
jne
cmp
inc
dec
inc
cmc
shl
dec
sbb
leave
ficomps
dec
mov
lahf
pop
jle
lds
cmpsl
add
xor
jns
push
roll
xchg
outsb
mov
jae
add
pushl
sub
inc
pusha
jne
sub
sarb
push
loopne
push
stos
jle
loope
mov
cli
xor
cwtl
sbb
xchg
xchg
decl
ret
and
sbb
repz
jnp
and
mov
arpl
addr16
fs
add
and
mov
cmpsl
sub
movsb
mov
xor
fsubrs
xchg
mov
adc
data16
mov
adc
repz
test
mov
test
enter
xor
int3
adc
sub
xor
cmp
arpl
gs
aas
xor
mov
xchg
jnp
mov
cli
mov
adc
dec
push
mov
sub
push
test
add
and
xor
push
insb
push
testl
mov
pop
movb
scas
or
sti
mov
outsl
dec
std
jle
repz
inc
scas
mov
sbb
out
or
shll
pop
cmp
je
mov
loope
and
gs
inc
xor
inc
cmpsl
icebp
push
mov
inc
lds
iret
fistl
shrl
or
fimuls
mov
movsb
mov
or
gs
adc
cmp
xchg
add
out
test
sub
xchg
mov
xchg
jns
xchg
xchg
es
aad
std
test
cltd
sbb
cmc
leave
movsb
pop
jg
sbb
faddl
mov
dec
pop
jmp
lcall
test
adc
cmpsl
dec
outsb
dec
inc
loop
jge
pop
insb
pop
push
hlt
leave
add
das
out
xor
rclb
mov
shlb
push
sbb
lods
push
fwait
loope
pop
pushf
sahf
cmpsb
hlt
push
xchg
iret
leave
jecxz
inc
bound
ret
cmpsb
lret
adc
ret
xor
cmp
adc
mov
adc
cmpxchg
mov
fimull
and
fwait
and
fstp
ljmp
cmp
mov
xchg
jns
sbb
sarb
mov
jg
insb
xchg
push
call
dec
mov
add
jb
sub
sbb
xor
roll
daa
imul
jg,pn
mov
jae
cmp
stos
scas
fcmovu
ja
inc
aam
lahf
mov
enter
sub
sub
cmc
pop
sub
in
lods
jne
hlt
repnz
inc
cmp
ret
icebp
cli
or
push
mov
popa
fmulp
or
insl
sub
inc
aam
adcb
mov
add
push
loop
jecxz
cmp
leave
dec
outsl
jne
cmc
pop
jg
ret
push
ljmp
popf
hlt
cmp
shll
push
push
cmpsb
lods
sbbl
movsl
sbb
call
push
lds
add
insb
mov
sbb
dec
lock
pushf
cmc
jg
cmp
add
mov
int3
aaa
lds
loope
movsl
sub
pop
lods
push
loopne
adc
jnp
mov
sbb
test
xchg
int3
cli
mov
decb
mov
jno
cwtl
lock
xchg
xor
stos
stos
leave
arpl
xchg
stos
out
int
mov
scas
add
mov
jg
mov
xor
and
mov
xor
movsb
xorl
sarb
loopne
addl
outsb
mov
inc
pushl
cwtl
fisttpll
popf
sub
mov
push
divl
lahf
rolb
test
jno
pushl
lods
xor
out
jecxz
jp
movsl
cld
jns
out
pop
jne
mov
lods
scas
mov
btcl
jns
pop
pop
pop
nop
loop
xchg
hlt
adc
lock
loop
mov
and
jle
xchg
jl
or
xchg
repz
call
push
sbb
jno
mov
xor
aas
adc
sbb
push
arpl
aam
pop
inc
out
arpl
cmpb
adc
jp
and
jmp
xchg
lock
cmp
lahf
stc
mov
sahf
add
jecxz
add
ljmp
push
xor
mov
pop
aad
dec
call
jno
nop
mov
ret
pop
fisubl
repnz
insb
xchg
sti
adc
sbb
test
sub
cwtl
adcb
outsb
insl
fiaddl
mov
mov
jns
out
jl
mov
and
popf
sarl
jno
imul
stos
dec
flds
mov
mov
in
sbb
jne
mov
ror
js
mov
mov
adc
push
addr16
push
xchg
mov
std
mov
pop
add
and
xchg
and
dec
xor
jns
leave
add
mov
leave
aad
jae
or
mov
cwtl
mov
das
out
jmp
test
and
bound
dec
xchg
sbbl
mov
ljmp
mov
lahf
cmc
test
cwtl
inc
test
faddp
lahf
cld
cs
adc
les
jb
or
insl
das
ret
aad
mov
lret
pop
sub
push
in
mov
mov
mov
jge
add
add
bound
cltd
shll
sub
adc
nop
jge
fwait
mov
add
jecxz
mov
jbe
adc
or
mov
gs
rcll
xchg
mov
stos
cvtps2pd
aaa
xor
cmpsl
jmp
pop
mov
loope
cmpsb
cmp
adcb
jo
jg
push
mov
mov
into
mov
lods
lret
pop
mov
mov
pop
pop
imul
mov
adc
xor
mov
jp
adc
nop
sub
adc
repnz
jecxz
hlt
scas
xor
movl
adc
in
arpl
pop
popa
jmp
jo
xor
cmp
xchg
pop
add
and
or
lahf
jle
sbb
push
enter
in
cmp
xor
ljmp
addr16
xchg
sub
sub
cmc
dec
mov
add
leave
enter
inc
sbb
fcoms
mov
daa
mov
adc
push
fistpll
sarl
adc
mov
in
je
push
inc
adc
dec
jecxz
adc
mov
int3
mov
add
cwtl
jns
xor
lret
test
adc
filds
xchg
in
in
js
cmp
fldt
sbbl
std
push
push
pop
push
lock
arpl
cs
aaa
cmp
push
dec
mov
and
les
xchg
jmp
mov
jo
lock
add
mov
loop
or
cmp
ljmp
into
mov
outsl
cmp
sub
aad
inc
push
outsb
flds
pushf
aas
je
lret
popa
in
mov
dec
mov
xor
js
and
test
mov
mov
xchg
js
jo
test
inc
fnstenv
aas
and
imull
out
cmp
push
rcrl
stos
ret
add
cmp
pop
es
test
clc
loopne
rcll
sbb
ret
idiv
mov
in
ljmp
lret
pusha
stc
test
bound
xor
cmp
rcr
cmp
mov
mov
xlat
push
jne
andl
jbe
dec
xchg
pusha
mov
inc
mov
adc
cmp
xchg
cmp
jecxz
cmpsl
outsb
decb
ss
xchg
add
fwait
mov
jl
mov
in
arpl
cwtl
dec
gs
das
in
mov
orl
jg
jae
inc
sbb
jae
mov
int3
jo
cmp
inc
fildl
add
add
adc
mov
inc
out
enter
xlat
xorb
sbb
push
inc
insl
adc
jb
sub
mov
cmp
pop
cmpl
loope
cwtl
loop
outsb
adc
xor
add
lds
popf
test
mov
inc
fidivrl
and
pop
ja
enter
and
enter
lcall
mov
xchg
push
push
in
xlat
jle
cmp
sbb
mov
cli
or
aaa
adc
jns
adc
inc
lahf
or
inc
out
pop
imul
add
in
outsb
jle
andl
push
andl
dec
push
mov
popa
mov
fldenv
mov
xor
pop
cli
or
and
ds
and
lret
sub
sub
and
push
scas
subl
inc
fwait
mov
mov
inc
jbe
mov
mov
rclb
mov
jp
ret
jbe
mov
fisubrl
mov
jns
push
lahf
cmp
push
jnp
adc
mov
lahf
mov
sbb
jp
jl
add
jl
out
inc
jl
adc
or
cmp
movsb
arpl
daa
sub
push
out
insl
in
jns
fistl
xor
lret
xor
jno
lds
mov
gs
out
dec
jbe
inc
pushf
hlt
inc
xchg
out
sbb
in
push
adc
add
inc
mov
shrl
sbb
cmp
inc
cmp
ja
xor
aas
test
mov
pusha
pop
enter
bound
movl
inc
rcr
jns
out
or
fsubrs
subl
jmp
sahf
rcr
add
xchg
aas
stos
mov
movq
lods
and
sbb
loop
popf
cld
mov
adc
imul
cmp
inc
pop
jne
cwtl
and
mov
xor
outsb
dec
stc
jmp
pmuludq
dec
out
cs
shl
repnz
jecxz
push
or
sub
sbb
gs
jp
fsub
pushf
das
dec
jnp
out
es
repnz
push
aad
inc
dec
mov
and
mov
mov
adc
xchg
orb
jecxz
ret
loop
inc
sbb
jae
jle
pushf
popf
add
add
ret
jp
xorl
mov
sub
mov
xchg
jnp
movsb
push
or
sbb
mov
stos
enter
clc
push
lea
ja
add
or
es
mov
shlb
stos
xchg
je
lret
add
popf
push
mov
push
inc
sti
jbe
xchg
out
inc
dec
jns
loopne
sub
xchg
imul
sbbl
icebp
movsb
inc
imul
loop
and
cltd
test
xchg
imul
inc
pop
push
pop
jmp
in
xor
std
jmp
fcomip
movb
jp
add
cmpsb
inc
mov
bswap
xor
jl
inc
lahf
cltd
mov
push
xchg
stc
and
xor
adc
test
int
sub
es
mov
dec
fs
dec
testb
push
push
dec
push
mov
jge
push
outsl
push
mov
iret
loop
or
mov
fists
add
jmp
clc
mov
repnz
add
jns
xchg
jbe
cli
mov
mov
cmp
clc
roll
mov
cli
adc
cmc
testl
test
popf
cltd
aad
push
mov
fwait
ret
push
fstpt
inc
sub
sbb
mov
or
dec
or
inc
fisttps
sub
or
ret
sbb
mov
iret
dec
jne
mov
or
scas
in
adc
cmp
std
jmp
pop
push
cmp
int3
loopne
jle
cmp
pop
mov
xlat
mov
iret
dec
fcoms
xchg
dec
push
subl
jae
jnp
shll
pop
or
fdivr
mov
pop
fwait
stc
mov
mov
xchg
mov
sti
jnp
pop
adc
cmpl
push
orb
dec
pop
cwtl
icebp
lret
or
lds
inc
stos
loop
das
outsl
push
rclb
int
jne
fisubrl
fsincos
sub
mov
stc
mov
imul
dec
mov
sti
mov
sti
xor
and
mov
int
jae
js
std
dec
es
rcrb
mov
xlat
mov
xchg
jno
add
mov
xor
push
sub
scas
stc
lods
add
sbb
jne
push
outsb
push
inc
jle
push
outsl
jb
das
sbb
mov
scas
popa
inc
adc
add
loop
rcrl
sahf
ss
mov
loope
push
dec
xchg
dec
xchg
dec
mov
inc
sar
jb
dec
dec
jne
test
iret
xchg
inc
into
cltd
orl
jne
es
sub
insb
sbb
shlb
out
inc
push
cmp
sarb
pop
pop
mov
xchg
sub
mov
les
cmp
mov
imul
ror
aam
outsl
popa
dec
out
in
subb
ficoml
jecxz
aam
imul
mov
cmp
rcrl
jbe
insb
push
clc
std
mov
cmpsb
daa
push
in
jge
mov
sbb
and
hlt
or
stos
mov
pusha
fcmovnu
fldenv
loope
add
aad
or
popf
cltd
clc
mov
sbb
push
loopne
repz
push
sbb
out
dec
cltd
xchg
imul
push
sub
cli
test
xchg
inc
mov
in
pop
inc
pop
stos
pop
imul
mov
pusha
adc
mov
adc
sbb
cmp
decb
adc
mov
cmp
dec
out
xor
ret
aad
push
dec
enter
rcl
lods
dec
shl
daa
cmp
jns
mov
xor
imul
fsub
lods
mov
xor
fwait
sarb
jo
fcmovbe
repz
add
jecxz
xor
call
daa
lea
movsb
in
xchg
pop
dec
inc
pop
xor
xor
xchg
inc
push
mov
mov
add
adc
lock
jno
jecxz
stos
dec
pop
popf
clc
je
in
fimull
mov
cmp
add
push
into
xor
pop
and
jbe,pn
pushf
fiadds
sahf
lcall
test
push
mov
mov
je
add
and
xor
mov
jge
test
outsl
dec
dec
stc
aas
cs
scas
cltd
and
mov
arpl
mov
adc
addr16
repnz
stos
mov
cmp
cmpb
dec
add
push
adcl
sbb
pop
jecxz
adc
dec
std
fdivrs
pop
push
jne
cmp
sbb
lds
and
sub
mov
xor
inc
orl
lret
dec
inc
data16
sbb
rclb
add
pushf
test
out
stos
cmp
and
jle
sub
ljmp
push
and
lret
loopne
xor
filds
and
jl
push
pop
cmp
stos
jb
in
mov
mov
fbld
pop
testb
sbb
pop
jecxz
out
and
daa
cmp
jbe
std
ss
sbb
rolb
cmp
stos
sbb
push
stc
inc
add
and
mov
out
adc
mov
mov
adc
pushf
push
mov
cltd
stc
inc
pop
dec
inc
cs
xor
or
fwait
push
jmp
fdivrs
addr16
push
lret
ffree
aam
mov
xchg
pop
pushf
mov
fldt
ret
das
mov
cmc
jmp
xchg
dec
and
jle
sti
push
fstps
mov
pop
adc
adc
ficomps
leave
inc
add
inc
repz
sub
pop
inc
or
imul
add
push
dec
movsb
pop
xchg
sub
mov
daa
mov
fcomi
daa
nop
dec
sti
arpl
addl
xor
stc
fsubl
addr16
imul
jnp
jnp
add
or
icebp
xchg
mov
push
int
loopne
out
inc
fs
mov
mov
mov
xlat
dec
lea
sub
jb
lret
in
jecxz
mov
pop
aas
stc
jo
add
pop
jo
push
jns
sar
mov
mov
movsb
and
xor
cmp
enter
dec
jnp
sbb
insl
cmc
sahf
in
in
xchg
push
test
out
sbb
jo
add
mov
xlat
sub
push
lcall
jae
leave
popf
mov
or
inc
mov
xorl
das
fisubrl
mov
pop
test
mov
test
jle
add
xchg
mov
xchg
sti
popa
inc
mov
cwtl
sbb
imul
test
push
dec
dec
mov
fiadds
arpl
fimull
gs
or
mov
mov
mov
pop
xchg
inc
test
push
scas
out
inc
stos
or
test
jg
cltd
into
or
rorl
or
addr16
xor
mov
sbb
pushf
pop
or
inc
add
out
lahf
loopne
mov
push
xor
sbb
sbb
stos
xor
in
and
inc
imul
mov
xor
inc
shlb
xchg
pop
mov
insl
inc
lock
push
push
aad
mov
or
jne
inc
mov
and
pusha
in
and
and
or
lods
insb
sbb
mov
pop
jg
pop
inc
dec
lea
decl
pop
std
add
outsb
hlt
lret
outsl
in
nop
or
mov
push
sub
or
fisubl
divb
aad
push
mov
jne
sarb
dec
mov
repz
mov
or
xlat
jge
fcoml
insl
jg
jmp
dec
or
pop
mov
sub
loopne
mov
adc
cmpsb
pop
xchg
repz
bound
cmp
loopne
lret
bnd
or
push
mov
sub
cmp
or
and
and
xlat
lret
lds
xor
adc
dec
and
xor
pop
xor
jns
test
mov
xor
ljmp
cwtl
mov
fisttpll
dec
in
mov
test
fs
jne
lret
inc
mov
jp
out
dec
mov
je
add
xchg
inc
in
daa
mov
add
shrl
pop
adc
cmp
repz
fs
mov
into
out
in
dec
mov
sub
pop
into
cmpsb
cmp
xchg
sub
push
std
mov
addr16
test
add
xchg
out
or
inc
sub
xchg
rolb
mov
mov
aaa
pop
jle
xorb
sti
add
dec
xchg
lahf
enter
cli
loope
lock
mov
leave
shrb
push
jnp
das
dec
add
cmp
shl
pop
sbb
aaa
les
dec
mov
icebp
pavgb
loope
in
test
lret
movsb
test
push
lods
sub
inc
out
or
xchg
outsl
xor
cmc
imull
stc
inc
mov
mov
fidivrl
push
mov
nop
lds
stc
movsb
sub
sub
cs
push
test
or
push
pop
into
jmp
pop
or
stos
int
cltd
or
mov
jmp
xor
dec
sub
or
mov
mov
out
jle
and
dec
fwait
add
shl
add
mov
xlat
xor
imul
sahf
fwait
lahf
out
add
jge
mov
xor
faddl
in
inc
cmp
jno
or
sbb
push
mov
mov
cwtl
les
sub
add
stos
enter
rol
arpl
int3
sub
jge
rcll
jmp
cmp
iret
cmp
xor
aas
inc
mov
xchg
xchg
rclb
or
sub
xor
jp
lahf
les
mov
sub
mov
pop
or
adc
jmp
decl
mov
sbb
stc
inc
and
outsb
std
sbb
dec
or
xor
ret
jb
jno
dec
lods
ret
fs
loope
mov
daa
loopne
inc
pop
sub
bound
loop
repnz
pop
mov
push
lods
xor
insl
push
test
and
dec
mov
and
push
or
mov
cmp
jl
insl
outsb
loopne
xor
pop
out
lret
icebp
cmc
das
faddp
and
test
nop
ficoms
das
mov
das
mov
orb
pop
add
popa
outsl
daa
insb
arpl
xor
xor
dec
rcll
mov
push
xchg
pop
out
jmp
sbb
sbb
call
lahf
les
mov
ljmp
mov
mov
out
in
cmc
xchg
or
addl
lret
lahf
sbb
mov
sub
les
mov
dec
pushf
inc
jne
in
mov
or
andb
test
adc
nop
mov
mov
sub
push
push
out
xchg
repnz
sub
stc
or
pop
mov
dec
xlat
xchg
jne
pop
js
xchg
ja
gs
mov
xchg
test
or
mov
clc
cmp
and
sarl
in
dec
jns
cld
inc
out
sub
mov
prefetcht1
fcompl
mov
nop
pop
lahf
popf
xorb
mov
loope
test
xor
add
sbb
mov
add
lahf
xor
aas
sub
popf
loop
addl
adc
lea
dec
push
dec
push
inc
cltd
push
mov
push
jo
les
fisttpl
jge
cmpl
popf
jne
push
inc
or
aam
int
ficompl
push
push
jae
push
pop
scas
mov
xchg
jo
sahf
insl
sbb
je
iret
and
loop
push
lret
xchg
enter
fnstenv
sub
jae
push
cld
pop
pop
cltd
enter
sbb
rcrb
mov
mov
sub
mov
xchg
lahf
test
gs
je
xlat
push
mov
hlt
jae
fstps
scas
sti
cwtl
mov
jle
adcl
xor
fisubs
rclb
or
fmull
mov
xor
dec
stc
call
ret
dec
in
outsl
xor
sbb
mov
push
cmpsb
and
shrb
jp
mov
push
pop
shrb
jp
mov
and
jle
sbb
pop
cmpsl
or
in
dec
mov
jbe
fidivl
mov
fwait
push
add
out
scas
stos
xchg
das
xorl
repz
jecxz
lds
ljmp
or
mov
push
jne
add
sbb
add
jo
gs
inc
ret
push
shufps
xor
ss
push
data16
jecxz
test
mov
mov
adc
lcall
pop
test
mov
lods
adc
and
xor
cwtl
jae
leave
inc
lret
outsl
cwtl
inc
dec
push
popa
pop
pop
insb
xlat
mov
ja
sbb
mov
xchg
nop
push
and
in
jb
mov
adc
add
ljmp
call
and
add
cmp
clc
ss
cmpsb
daa
inc
adcb
shl
test
mov
adc
sub
mov
mov
mov
cli
push
inc
mov
mov
in
outsb
pop
jecxz
repnz
or
cli
mov
enter
jge
adc
mov
sbb
mov
insb
sahf
aas
jns
xlat
addb
lcall
std
xchg
hlt
pop
lods
jmp
fistps
xor
mov
mov
cld
xchg
and
xor
cmp
sub
or
sub
mov
jp
pop
cmp
cld
dec
and
jb
pop
xor
push
or
cmp
scas
cmp
imulb
jb
xor
pop
inc
sbb
out
pop
and
sub
icebp
inc
adc
cwtl
ljmp
pushf
enter
xlat
aad
inc
jg
mov
or
inc
cmpsb
sbb
movsl
sti
int
cltd
or
sub
lods
testb
leave
xchg
fcoms
push
jo
mov
sbb
pop
push
pop
cltd
push
pop
mov
adc
jl
push
sbb
mov
sub
cmp
sub
mov
aad
jmp
xor
cli
int
jg
jnp
fisubs
jecxz
add
jns
mov
mov
mov
in
cs
repz
cmp
dec
xor
mov
mov
xor
cwtl
aam
lea
xorl
lea
loopne
int3
pop
mov
icebp
flds
sahf
mov
xor
push
rclb
rcll
sub
lock
pusha
jns
lods
xrelease
cmp
mov
mov
js
sub
mov
push
xor
pop
sub
cmp
xchg
push
lcall
cmc
fisubl
xchg
pop
outsl
sbb
jp
mov
or
daa
cmpsl
jecxz
test
sbb
loop
cmpsl
mov
cmpsl
add
mov
std
push
fwait
lods
push
cmp
sub
xchg
mov
cmpsb
pusha
jle
enter
out
in
pop
rorl
mov
mov
fs
lods
movsl
sbb
rorb
jne
sub
mov
in
or
andl
lods
push
push
lock
or
mov
inc
stos
sarl
scas
sar
leave
outsb
jle
out
push
ja
jno
and
cmp
mov
jno
dec
jl
cmp
pop
fwait
das
out
insl
xchg
fidivl
mov
ret
inc
cmp
pop
or
stos
ffreep
and
js
outsl
das
push
outsl
cmp
repnz
pop
aam
mov
push
fwait
xchg
ds
idivb
lahf
xor
push
jecxz
out
pusha
aam
inc
jge
mov
fbld
test
push
mov
fstl
pop
push
out
dec
mov
adc
aas
les
jp
movsl
and
push
sbb
clc
inc
add
xchg
adc
popa
jae
lock
lods
xor
mov
orb
mov
xchg
out
lret
add
jno
sub
xor
cltd
jo
sbb
and
inc
fisubs
jmp
dec
in
mov
xor
inc
or
push
popl
pusha
outsb
jle
les
mov
mov
jg
add
loope
sub
mov
and
adc
div
push
and
popa
cli
xor
or
jns
dec
dec
outsb
icebp
in
js
lock
inc
jo
or
mov
mov
es
push
sbb
sbb
aaa
ds
mov
ds
fwait
ret
cmp
mov
pop
inc
or
in
adc
and
sbb
adc
xor
jae
xor
mov
lds
es
popf
mov
pop
cmp
push
cld
pop
inc
mov
gs
pop
es
sbb
jle
fwait
enter
in
outsb
frndint
div
jae
push
jbe
push
test
jbe
out
movsl
xor
mov
sbb
int3
push
fidivrs
pushf
mov
dec
pop
inc
pusha
flds
je
mov
mov
mov
mov
iret
mov
out
sbb
mov
and
inc
mov
icebp
sbb
loop
inc
pop
mov
sbb
dec
dec
aad
push
pop
push
cmpsb
arpl
cld
lcall
test
repz
ja
rcrb
xchg
and
lock
icebp
lcall
sub
jae
imull
sub
mov
inc
xor
xchg
imul
sbb
jae
xor
mov
xchg
loopne
xchg
xchg
or
xlat
lods
cmp
sahf
cld
cltd
stos
and
sbb
pop
loope
subl
xor
sbb
jae
rcll
ficoml
test
pop
push
aad
sbb
push
mov
insl
data16
imul
fstpt
call
jmp
xchg
dec
mov
int
scas
mov
lock
mov
inc
insl
ret
mov
aaa
rcl
add
es
les
cmpsb
repz
mov
add
stc
xchg
xchg
pop
mov
mov
ret
daa
cs
jmp
ds
cmpsl
mov
fwait
dec
imul
ret
cli
or
or
ljmp
xchg
sub
sbb
dec
ficompl
dec
sub
cli
adc
xchg
sub
and
fisubrs
pop
iret
inc
repnz
fimuls
sbb
or
lret
into
je
pop
pop
or
int3
ds
lds
les
lcall
xor
stc
loope
stc
popf
inc
das
sub
lods
add
mov
cmpsl
mov
mov
push
ds
adc
pop
adc
aaa
pop
leave
and
cs
outsl
and
in
cmp
mulb
cmp
aad
fwait
sbb
jbe
cmp
rcrl
jle
nop
xor
aaa
cmp
incb
adc
jp
ret
stc
imul
dec
jb
ret
bound
cld
movsb
aaa
enter
clc
imul
setg
in
pushl
fisubs
jmp
pop
xchg
sbb
and
xlat
jbe
xor
pop
add
jno
sub
pop
mov
add
jp
popf
std
and
dec
shll
aaa
sub
dec
into
jb
out
lret
jb
dec
push
repnz
addl
test
mov
pushl
and
in
xchg
out
jbe
pop
xchg
adc
add
pop
jecxz
inc
xchg
repnz
fidivl
cmpsb
dec
faddl
out
cmp
cmc
into
jp
insb
popl
cmpsb
scas
ret
dec
pop
insl
mov
test
push
jp
pushf
add
push
fsubl
sub
into
xor
xor
pop
or
push
or
jnp
pop
lret
out
repnz
in
mov
pop
pop
rcr
mov
repz
ret
orl
fs
jge
jge
je
loop
inc
es
ljmp
lahf
add
push
pushf
push
jo
xor
xor
sbb
inc
popa
jno
pop
aad
mov
inc
mov
push
inc
rcrl
and
jmp
sbb
incl
mov
shlb
iret
bound
jl
scas
and
inc
sarb
or
sbb
fcomip
out
xor
ret
jp
jae
ja
and
cmp
mov
sti
js
xor
sti
mov
sarl
cmp
push
xchg
pop
adc
daa
cmpsl
pop
mov
jp
pushf
cmp
xchg
pop
dec
mov
cmpsl
jb
rep
mov
dec
fadd
les
lock
int
or
jl
out
push
aad
negl
push
sahf
lahf
jmp
insl
movsl
push
xlat
and
sbb
stos
subl
cmpsb
icebp
loop
push
or
fldcw
ja
daa
mov
or
mov
or
mov
adc
inc
js
ss
cmc
ja
aam
mov
jnp
or
jae
in
aaa
popa
mov
gs
aas
fistpll
mov
dec
sub
stos
pop
or
scas
inc
or
or
xchg
loopne
ljmp
xchg
insb
sub
adc
cmpsb
bound
subl
push
lock
test
or
fs
fcmovnu
and
adc
fadds
loop
jp
jns
fildl
je
sub
cs
adc
mov
int3
les
aaa
arpl
cmpsl
xlat
cmpsl
fstl
flds
sub
movsb
jmp
in
data16
aad
in
fs
arpl
out
dec
cmp
sbb
inc
ret
mov
pop
add
sbbb
lods
gs
sbb
stos
test
mov
and
xchg
and
shrb
push
cmp
test
sub
sahf
dec
xchg
cmp
bnd
test
icebp
fwait
pop
and
push
cltd
dec
insl
and
loopne
not
and
icebp
push
jae
or
lds
mov
iret
jno
repz
bound
mov
imul
test
jge
pop
push
bound
cmp
jae
cmp
xor
and
lret
test
and
pop
mov
repnz
inc
cmc
call
andb
mul
or
jb
cmp
or
cltd
sub
mov
sub
pop
adc
and
pop
out
xchg
xchg
jae
dec
rcrl
add
sbb
dec
adc
pop
fwait
out
jo
nop
out
stos
dec
push
dec
push
scas
mov
shll
out
addr16
adc
gs
movsl
fisttps
popa
cli
cmp
rcrl
cmpsl
xchg
fs
cli
adc
cmc
cmp
dec
imul
sub
pop
xor
xor
andl
add
arpl
sahf
lret
test
xor
mov
into
jecxz
notl
pop
add
call
add
pop
xchg
xor
sub
and
imul
or
iret
dec
addl
add
jecxz
xchg
sub
jge
std
pop
loop
cltd
lret
or
les
fsubrs
ljmp
mov
jmp
insb
mov
pop
dec
stos
addr16
adc
fwait
sar
popf
mov
and
aaa
testb
or
mov
imul
aas
aad
sti
mov
addb
pusha
add
stos
enter
xor
inc
dec
lret
jl
adc
jge
fwait
into
ret
push
mov
rolb
test
iret
nop
pop
sub
sbb
decl
mov
dec
ja
pop
popf
aas
push
loopne
adc
xlat
xor
in
cmp
pop
ljmp
dec
mov
mov
push
pop
mov
pop
mov
pop
ret
mov
mov
add
test
je
push
push
repnz
das
out
daa
popa
sbb
ficompl
xor
add
cmp
sub
aaa
aas
mov
mov
adc
jmp
or
and
repz
and
outsl
loopne
fildl
dec
out
ret
pop
jp
mov
test
push
inc
movsb
xor
cmp
pop
jne
fs
fstpt
bound
popf
push
and
mov
mov
out
cmp
loopne
and
filds
pop
in
sub
inc
add
es
lods
sub
or
test
aas
cmp
iret
mov
sbb
xchg
jge
dec
push
cmp
fdivrl
test
jle
xor
dec
sbb
xchg
fldt
dec
das
divl
push
sbb
in
into
push
push
mov
sbb
shll
mov
xchg
mov
add
pop
adc
lcall
mov
sti
cmpsb
pop
sbb
mov
arpl
xbegin
add
xchg
dec
jae
sub
xchg
jl
add
mov
adc
mov
mov
xchg
add
movl
mov
cmp
popaw
out
decl
and
mov
loop
aad
push
test
cmc
std
loopne
jp
cmp
mov
dec
xchg
and
push
adc
ss
xlat
adc
popa
repz
xchg
dec
je
adc
or
repnz
popa
mov
repz
mov
inc
fnstenv
bound
das
es
xor
lahf
ja
or
push
mov
push
lods
in
enter
ds
push
shlb
xor
pop
and
mov
lret
out
mov
iret
out
das
stc
outsl
mov
dec
mov
inc
fisubrl
adc
cmpl
leave
adc
inc
dec
popf
mov
add
push
gs
nop
jg
pop
movb
pop
adcb
out
pop
jg
aas
jmp
dec
inc
sbb
pop
insl
ljmp
arpl
outsl
cs
call
fisubrl
cmp
dec
insl
fisubs
sbb
inc
xchg
fs
jns
cmp
push
leave
jg
xchg
orb
push
or
aas
lock
dec
lea
sub
pop
insl
je
sub
sub
mov
mov
inc
stos
jge
push
sbb
les
push
mov
lret
xor
negl
cmp
jp
std
mov
and
mov
adc
test
rcll
sbb
addb
movsl
mov
mov
addb
test
sarb
stos
push
mov
gs
mov
shrl
fidivrs
pop
ror
fdivrs
push
or
int3
push
movsl
cmp
jae
jecxz
or
jbe
scas
inc
sbb
outsl
popa
ds
fnstsw
or
lret
lods
pop
out
jle
stos
xchg
xchg
push
or
lea
sbb
arpl
jno
mov
and
ret
popa
mov
push
scas
xor
fsubr
dec
scas
fldl
fimull
fsubl
imul
fs
push
push
or
pop
lods
aad
test
enter
add
jp
lds
jo
gs
cld
mov
rcll
andl
pop
clc
jns
fcoms
scas
cmp
mov
inc
out
push
mov
lods
mov
stos
jno
out
daa
pop
faddl
addr16
fst
cmp
or
sub
and
jb
add
cmp
mov
sarl
mov
pushf
icebp
lret
push
dec
mov
cmpsb
fwait
jge
dec
shlb
sbb
cmp
aam
je
sub
inc
aam
mov
xchg
mov
ret
fistpl
pop
shr
jl
jecxz
sbb
arpl
push
sub
jne
ds
shr
sub
xchg
test
mov
mov
outsb
rorl
xor
repz
add
mov
jno
inc
stc
mov
push
mov
jnp
lret
addl
dec
inc
mov
pop
ss
or
sbb
repnz
sbb
cmp
xchg
xchg
xchg
out
cld
mov
test
sub
mov
xchg
push
out
dec
mov
outsl
or
dec
push
cmp
xchg
sub
mov
xor
out
mov
sbb
movsb
mov
leave
sbb
outsl
mov
test
aad
add
int
fdivrp
mov
pop
mov
in
cmpsb
in
ja
sub
cld
mov
cwtd
add
sti
push
sti
sbb
xchg
stc
call
stos
or
ret
movsl
insb
xor
mov
cld
movq
lock
jp
fisttpll
fs
daa
dec
mov
gs
sbb
leave
xchg
andl
xchg
mov
stc
icebp
cmp
sahf
pop
movsl
icebp
testb
jnp
or
lds
or
cltd
cmp
pop
movsb
aaa
dec
sbb
add
stc
in
cltd
sbb
ficompl
pop
shr
add
fld
and
jl
sbb
fstl
and
aas
sti
xor
xchg
repz
xchg
iret
mov
and
ds
mov
cli
dec
scas
lret
scas
dec
xor
xor
lds
jge
jp
je
xorl
mov
mov
lea
sbb
push
pop
mov
dec
adc
mov
mov
pusha
sub
pop
ljmp
dec
arpl
es
pop
into
rol
add
jns
and
add
inc
xchg
pop
add
inc
repnz
adc
sub
and
test
sub
mov
sbb
push
mov
cmp
sar
pop
mov
loopne
iret
jb
mov
jno
in
imul
lods
pop
mov
pop
mov
cld
add
out
dec
jge
dec
shll
mov
imul
orb
xor
sub
adc
mov
inc
int3
mov
sarb
dec
aad
jbe
and
vpbroadcastq
mov
sub
in
adc
arpl
add
mov
jno
arpl
insb
out
mov
jb
mov
arpl
scas
out
imull
or
outsl
stc
lret
dec
or
fsts
xchg
pushf
fsubl
pushf
or
dec
sub
in
pop
or
jg
dec
ret
mov
or
shll
shlb
jb
inc
mov
jmp
sub
fdivrl
pushf
mov
aaa
mov
xchg
inc
pop
sub
imul
lods
inc
ljmp
xchg
push
insb
xor
out
in
xchg
add
inc
repz
shll
enter
mov
inc
mov
mov
mov
cltd
js
sbb
xchg
adc
test
or
out
xchg
mov
xchg
arpl
push
push
out
les
ret
add
mov
xlat
adcl
mov
xchg
or
and
adc
or
dec
lock
mov
adcb
sbb
mov
popf
cmpsb
imul
xchg
xchg
jo
dec
adc
lea
mov
cmp
enter
outsb
hlt
sbb
mov
imul
cmp
dec
mov
jo
adc
inc
pop
int
or
mov
pop
jg
in
mov
outsb
sbb
xchg
cs
jg
lock
cmc
pop
push
repz
jb
lret
mov
xor
lret
inc
int3
ds
fabs
and
or
sbb
fstl
xchg
and
imul
pop
les
mov
pop
arpl
lret
vprotb
popa
xchg
gs
jle
insb
leave
jbe
mov
and
cld
pop
sub
repz
mov
lahf
outsl
mov
fwait
add
aad
ja
jo
sbb
mov
mov
leave
adc
std
fs
push
jp
xlat
cmp
or
jmp
cmpsl
xchg
pop
divl
sbb
mov
jno
and
sbb
mov
mov
mov
fldt
mov
jge
inc
test
xchg
push
jmp
insb
bound
xchg
or
movsl
xchg
sti
imul
push
clc
add
mov
pop
add
lock
mov
pop
mov
orb
leave
mov
and
sbb
cmp
adc
ret
imul
push
std
mov
andl
in
xchg
negl
cli
mov
mov
cmc
sub
lds
xor
enter
sti
shll
and
or
mov
mov
push
push
dec
xor
daa
lahf
sbb
xor
xchg
je
add
mov
mov
or
push
add
xchg
inc
sbb
mov
loop
sbb
mov
aad
sahf
push
mov
xor
iret
jae
and
sti
test
or
jmp
or
xchg
cmp
popf
mov
addr16
push
movsb
ja
add
xor
into
pop
ja
jp
mov
rcrb
cmp
int
movsl
push
out
movsb
in
push
jno
js
and
outsb
cmp
nop
aaa
push
testb
imul
xchg
repz
jmp
xor
mov
cmp
addr16
jmp
xchg
pop
mov
mov
mov
cli
sub
cmp
sar
mov
mov
and
mov
xor
popa
int3
sbb
xor
xchg
jecxz
and
lea
pop
mov
push
mov
call
lock
shl
movsb
inc
loope
mov
lahf
xlat
jg
test
lods
inc
jmp
pop
and
jp
aaa
out
mov
pop
jne
gs
push
pushf
dec
jmp
push
sub
push
inc
gs
fcomps
add
out
call
xchg
xor
iret
negl
mov
sti
inc
mov
sbb
pop
dec
cld
sahf
cmp
icebp
mov
dec
aaa
out
sub
ljmp
aad
sahf
dec
inc
fs
add
repz
jl
push
pop
mov
sub
imul
dec
mov
inc
jnp
mov
or
xorl
movsl
ds
sub
inc
push
push
jnp
sbb
das
in
push
stos
mov
cli
bnd
imul
test
push
mov
pop
inc
mov
dec
mov
pop
test
cwtl
add
xchg
shrl
sbb
mov
lret
int3
in
loop
pop
add
and
call
mov
fwait
in
lds
int3
dec
call
leave
pushf
loope
add
adc
mov
sub
enter
ljmp
pushf
shl
mov
push
addr16
jecxz
add
filds
clc
jl
adc
lcall
ds
data16
adc
jbe
in
adcb
dec
flds
scas
and
pusha
add
inc
fstpl
int
inc
addr16
pop
fwait
adc
orl
push
jnp
lds
ja
shlb
push
sbb
hlt
notb
iret
jo
cld
into
jno
insl
stos
or
outsb
adc
out
lcall
je
add
cmpsb
mov
adc
out
loop
xor
mov
shl
push
or
cmp
fildl
out
rcr
inc
sub
and
add
cmp
ja
enter
dec
mov
cwtl
bound
lcall
xor
mov
stos
nop
push
out
pop
mov
inc
fwait
das
std
jle
or
inc
mov
adc
sbb
pop
mov
in
orl
mov
mov
inc
push
or
je
inc
inc
std
dec
aad
cmp
scas
add
jle
push
push
inc
fnstsw
mov
jg
lret
daa
call
sub
push
arpl
jmp
add
ja
xchg
adc
lock
adc
inc
movsb
nop
jno
xor
and
fnsetpm(287
movsl
mov
cmpsl
outsb
enter
jg,pt
mov
and
pop
repnz
lahf
das
in
jg
rcrl
sub
add
add
mov
rcrl
aas
cmp
loop
bound
pop
jne
cmpsl
push
leave
push
imul
rcll
adc
dec
xchg
inc
int
add
dec
sbb
rorl
add
in
xchg
xchg
ret
xchg
int3
sbb
cs
and
rcr
adc
fs
sub
or
mov
jnp
stos
std
in
je
scas
fistl
incl
fwait
insb
pop
rorb
loopne
jg
xor
add
and
inc
nop
mov
mov
js
cmp
fs
and
std
jne
cmp
pop
cmp
push
pop
pop
adc
fldenv
mov
ja
fdivrl
or
push
pop
mov
inc
arpl
add
rorl
xchg
cmp
xchg
popa
in
les
push
rorl
xlat
in
iret
aas
orl
les
add
xchg
adc
adc
lea
add
xor
jg
sbb
and
and
add
xchg
orb
outsb
mov
pop
mov
xlat
cmpsl
push
xorl
adc
inc
cmp
pop
jg
wrmsr
xchg
sbb
jg
daa
push
and
movsl
cmpl
push
pop
sub
addr16
loop
or
repz
roll
setne
jmp
movsb
or
insl
lret
push
hlt
cmpsb
shll
adc
aam
into
mov
outsb
sbb
leave
pop
shlb
daa
nop
cmc
mov
js
xchg
adc
and
mov
cld
popf
or
rorb
xchg
rcrl
adc
lods
repz
mov
jl
lcall
ljmp
lret
enter
xor
test
faddl
jge
cmpsl
es
cmp
add
mov
sbb
dec
dec
dec
aad
inc
lods
mov
jno
btsl
xchg
mov
cmpsl
jbe
or
mov
je
js
es
pminsw
imul
mov
movsb
dec
jmp
sti
stc
xchg
lret
sbbb
jge
sbb
sti
lods
testb
aaa
jb
and
mov
sub
notb
jnp
xchg
mov
outsl
push
popa
in
imul
pop
cwtl
ljmp
add
sub
ss
cmpsl
lcall
jae
pusha
sub
je
push
xchg
aas
fdivrs
jbe
xchg
and
sub
mov
xchg
jbe
lock
int
into
clc
pop
push
shll
jno
push
push
cmp
add
mov
imul
cli
jge
les
sbb
mov
movsl
jae
sub
push
add
mov
pushf
xchg
add
push
gs
mov
lods
pop
enter
outsb
loop
jge
pop
sub
xor
mov
or
pop
stos
rclb
push
lds
lret
add
mov
mov
jo
xorb
fcomip
fmulp
pop
mov
jno
in
jl
xlat
adc
dec
pop
or
loopne
lods
pop
stos
in
repnz
arpl
mov
jmp
inc
lea
or
dec
pop
cmpsl
jno
adc
pusha
jge
test
test
add
and
mov
in
movsl
repz
inc
lods
xchg
xor
adc
and
and
fiaddl
jo
test
movsb
mov
sub
mov
sub
push
mov
outsb
lret
lds
cmpsl
fmul
stos
push
dec
xor
and
mov
cwtl
push
repz
repz
hlt
fisubl
call
sbb
jmp
fists
dec
into
push
inc
add
jg
cmp
add
fimuls
cmp
rclb
ror
in
add
mov
mov
lret
xchg
dec
mov
int
aam
jmp
add
cmp
std
mov
inc
cmp
mov
cmp
inc
mov
mov
stc
out
xor
dec
repnz
test
jo
push
or
jge
cltd
mov
push
les
xor
jne
bound
add
mull
inc
cmp
mov
dec
lret
rcrb
or
add
push
mov
add
adc
xchg
cmpsl
icebp
sarl
ljmp
nop
mov
daa
pop
sbbb
stos
ss
lods
mov
rclb
push
pusha
repz
jnp
fs
in
clc
outsb
les
add
jnp
push
das
mov
pop
push
in
adc
mov
adc
ja
mov
repnz
pushf
jp
imul
add
daa
stc
sub
push
add
rorl
aaa
testb
aaa
inc
add
in
jb
jge
dec
scas
ret
sbb
xchg
icebp
jb
inc
movsl
mov
fisttpl
pop
je
aas
cmc
mov
push
cmp
fiadds
mov
cmpsl
mov
aad
mov
and
sbb
fwait
dec
dec
and
loope
lock
arpl
push
xchg
jl
cli
clc
push
push
arpl
loopne
cmp
lahf
mov
sbb
scas
mov
fucomip
shl
pop
dec
cmp
cmp
scas
jle
les
adc
push
insl
pop
push
push
dec
push
jp
fadds
xchg
cmp
adc
je
lods
jmp
ss
or
jmp
scas
xchg
es
or
xchg
or
dec
mov
lock
test
and
add
out
cli
test
andb
mov
leave
stos
cltd
sbb
add
mov
insl
xchg
inc
adc
addr16
aas
aaa
stos
lahf
mov
out
inc
rcrb
mov
movsb
outsb
fidivrs
sub
lret
mov
or
or
sbb
jg
int
stc
mov
lret
cli
aas
faddl
adcl
adc
popf
pop
pop
jne
sarb
adc
sub
iret
addr16
aas
aam
mov
push
xchg
rcll
or
icebp
sub
add
lcall
cwtl
fidivrs
fisubs
shlb
lahf
test
loope
popa
mov
inc
xchg
insl
rcrb
les
mov
faddp
push
mov
out
sbb
or
rcll
pop
and
lahf
shll
mov
imul
adc
sbb
test
mov
push
stos
pop
pop
call
push
lods
flds
mov
pop
ljmp
stos
into
jge
inc
test
negl
adc
dec
clc
jge
jmp
daa
jb
dec
imul
pop
int3
es
or
mov
inc
in
repz
lcall
dec
es
movb
adc
mov
fmulp
mov
jo
and
out
jno
clc
xchg
stc
jmp
icebp
movsb
push
js
xlat
pusha
push
or
cmc
loop
gs
cmpb
and
pop
fldt
daa
incl
fwait
xchg
mov
pop
imul
test
push
fstpl
sub
repz
aas
jne
mov
jl
mov
dec
dec
sbb
pop
sub
fcoms
sbb
lahf
icebp
je
push
push
inc
pop
mov
jmp
jmp
sub
adcb
cmp
sub
sahf
sub
dec
repz
test
and
jbe
push
loop
out
adc
inc
pop
and
popa
add
inc
adc
xchg
movsb
cmp
inc
xor
push
test
dec
and
xchg
mov
fldl
push
cld
xor
je
mov
test
aas
popa
ret
and
sbb
mov
pusha
test
stos
push
sub
adc
cmp
fwait
out
scas
in
cmp
lret
add
addr16
aad
add
cmp
sub
out
cmpl
adc
add
push
cmp
rcrl
cs
test
push
scas
mov
das
dec
dec
fs
xchg
repnz
cmpsl
jmp
test
xchg
jecxz
movsb
and
test
and
pushf
jmp
mov
inc
mov
xchg
xor
mov
insb
xchg
cwtl
lds
loope
xchg
cmp
inc
adc
dec
push
or
ljmp
in
fstpl
test
pop
das
xchg
sbb
int3
cmp
cmc
inc
lcall
scas
dec
add
repnz
push
leave
jle
lcall
sub
push
cmpsl
aas
test
fistps
cmp
and
push
jge
lea
cltd
ljmp
loopne
in
mov
push
push
xor
ret
inc
push
sub
mov
sarl
fistl
push
subb
data16
popl
in
fnstcw
stc
pop
push
pop
cs
add
xor
out
in
dec
sub
jmp
jns
mov
or
cmpsb
mov
mov
lods
mov
xchg
imul
call
mov
lret
pop
inc
cmc
hlt
add
add
daa
in
mov
inc
stc
jecxz
mov
inc
mov
fistl
mov
pop
mov
paddsw
inc
jbe
push
xchg
xchg
cmpsb
repz
scas
mov
int3
jge
ljmp
pushf
mov
test
and
or
mov
into
cmc
mov
jns,pt
pushf
sub
dec
loopne
push
cmp
ret
aam
sbb
xor
push
lods
not
bound
cwtl
lcall
add
adc
xchg
out
aam
in
lock
xchg
stos
cli
insb
pusha
movsl
je
sbb
aad
adc
icebp
sub
int
std
add
fnsave
arpl
cld
cmp
in
jns
dec
call
jmp
fimuls
cld
inc
scas
ficomps
push
jnp
xchg
lahf
push
int
push
lock
lret
sbb
xlat
mov
filds
cld
ds
fsts
iret
push
dec
mov
ljmp
pop
cmp
push
pop
jle
xchg
and
pop
fcmovb
jae
pop
cmpsb
cmc
aaa
mov
mov
jl
loopne
cmp
mov
jp
adc
sbb
arpl
shrl
fdivl
sub
inc
leave
jle
sbb
cld
lahf
nop
into
jp
js
dec
and
repnz
jno
xchg
das
mov
dec
sbb
stos
out
fsubl
out
ljmp
mov
or
sbb
and
inc
push
ja
test
rcl
lea
mov
scas
mov
cmp
rclb
cmc
pop
sbb
dec
ljmp
and
jl
sbb
cmpsb
jge
mov
push
pop
xchg
int
mov
xchg
push
sub
jne
cli
push
insl
mov
movsb
mov
push
xor
and
jae
out
pop
std
xchg
jmp
inc
mov
rol
mov
cmp
push
cli
aam
out
sub
test
lds
sub
sub
inc
xchg
jnp
and
arpl
xchg
in
ret
aad
lock
xchg
pop
aam
clc
cmp
in
aaa
popf
clc
fsubs
ret
cs
call
test
mov
rcrl
jmp
jb
jmp
pop
negl
xor
daa
jp
sbb
lea
inc
movsb
pusha
xlat
aad
int3
sub
in
scas
inc
xor
call
cmp
shrb
lds
adc
fldcw
add
dec
shlb
adc
fdiv
mov
enter
pop
imul
add
lret
or
dec
call
cmp
pop
jno
mov
imul
into
cmp
xor
ss
adc
jae
ror
fldenv
add
pop
sti
add
push
cmpsb
aad
cmp
inc
push
sub
push
mov
shr
sbb
aas
mov
pushf
lock
or
popa
daa
or
sbb
enter
fcmovb
adc
mov
les
inc
jb
js,pn
and
xchg
sub
arpl
jecxz
jp
and
push
and
fidivl
sbb
jp
sbb
fxch
push
ss
daa
popa
fwait
and
xchg
dec
jmp
shll
xor
lds
shrl
adc
inc
mov
dec
fidivs
xchg
aam
mov
into
mov
add
daa
outsl
push
mov
sbb
and
lcall
lods
mov
xchg
icebp
cmp
js
inc
repnz
sub
int3
test
test
dec
fst
btc
lret
fistpll
pop
je
stos
xchg
ljmp
ljmp
rcr
cmp
movsl
cld
loopne
in
and
sub
mov
sub
in
add
xor
sub
loop
daa
nop
xchg
lcall
jo
sbb
inc
cli
rorb
lds
in
in
adc
int
repz
fcmovbe
sti
cli
js
mov
or
cmp
and
ljmp
sbb
enter
xchg
pop
je
add
in
adc
scas
call
or
outsl
adc
fiadds
adc
movhps
sbb
xchg
sbbl
or
out
jbe
cli
lods
andl
add
stos
insl
mov
pop
std
dec
loop
adc
sub
adc
xor
jle
jp
leave
out
cmc
repz
dec
adc
mov
bound
sarb
call
imulb
popa
cmp
sub
pop
jp
mov
in
inc
add
push
sbb
stc
xchg
movsl
arpl
aad
ljmp
push
fsubrs
lret
sbb
xchg
lcall
stc
or
jg
xor
add
neg
inc
cltd
in
or
in
xchg
dec
or
fistpll
out
cli
stos
xchg
jle
and
fldcw
add
ret
cmpsb
aaa
pop
push
cmpsl
sbb
push
enter
into
push
stos
pop
lea
pusha
jmp
cmp
sub
xchg
lcall
jge
xorb
test
fisttps
sbb
daa
mov
mov
and
inc
sbb
add
add
sahf
add
cmp
mov
sub
sahf
ja
sbb
popf
fiaddl
and
popa
pop
lods
sub
sbb
jcxz
jno
test
lahf
jg
push
stc
push
jg
cmp
xor
testl
mov
jnp
cmp
icebp
iret
addr16
int3
add
adc
in
sub
hlt
sti
popa
lds
push
adc
leave
xor
push
mov
lahf
xor
mov
fisttps
call
jp
out
pop
mov
push
add
fwait
or
ficoml
mov
jmp
add
cmp
mov
jmp
ja
jae
repnz
pop
dec
push
mov
push
lods
das
dec
test
stc
loope
sbb
mov
push
pop
cmp
sbb
push
aas
cmp
push
sti
nop
jns
repnz
push
cmp
out
sub
scas
stos
ja
xor
add
mov
jne
addr16
imul
out
rolb
cmpsb
adc
push
fdivs
int
cmp
and
mov
lahf
cmpsb
push
test
push
mov
mov
movsl
rcll
stc
pop
mov
idiv
mov
jo
push
fbld
fdivr
push
pop
sbb
mov
mov
ss
lcall
shrb
out
sbb
sbb
pop
andb
and
and
movsl
aas
jecxz
mov
pop
aaa
cwtl
mov
lods
mov
hlt
iret
push
or
ljmp
xor
and
push
lahf
adc
mov
fwait
inc
aad
sbb
jp
push
stos
pop
jg
sbb
jge
cmpsl
test
dec
jno
push
mov
js
scas
or
push
xchg
pop
jne
ds
jl
jno
movzbl
repnz
lds
or
adc
int3
gs
aaa
ret
and
call
daa
mov
pop
jecxz
call
sti
mov
adc
xor
mov
ss
sbb
xchg
sbb
mov
call
cmp
add
adc
out
add
in
fnstsw
gs
add
sti
mov
xor
jle
ret
adc
mov
cmpsb
mov
push
rorb
add
out
xchg
fists
aad
push
and
mov
cmp
and
sahf
pop
mov
adc
clc
dec
movsl
cmp
inc
and
push
jp
data16
and
pop
dec
mov
mov
mov
lret
lds
mov
test
sbb
pop
movsb
popl
cmp
jnp
sarb
sub
mov
add
jo
push
xchg
add
daa
shlb
test
sbb
xor
addl
fwait
call
and
enter
inc
inc
push
hlt
and
lds
xchg
or
mov
jle
sahf
mov
inc
sub
lret
sbb
pusha
das
cmp
cmp
movsl
mov
les
outsl
dec
xor
xbegin
dec
adc
fisttpll
lcall
pop
das
imull
and
jnp
inc
stc
negl
sbb
mov
imul
push
nop
daa
fistps
mov
jmp
cmovbe
cmp
cmp
repnz
iret
jbe
in
or
int
aaa
jo
and
data16
mov
cmp
xchg
jmp
pop
and
pop
mov
cld
out
push
inc
jnp
out
sbb
ret
xchg
jle
dec
mov
out
aas
sub
repz
ret
push
mov
cwtl
xchg
pop
push
sti
xor
negl
insl
sub
mov
es
pop
jno
leave
sbb
mov
mov
outsb
mov
out
sbb
dec
jb
push
jl
cmpsl
mov
jno
pop
mov
xchg
xor
mov
push
lret
jnp
xor
mov
subl
xchg
push
popf
and
mov
iret
out
sbb
mov
fbstp
pusha
push
inc
sub
jmp
test
and
popa
sbb
mov
rclb
shl
push
lods
aaa
add
aas
cmp
insb
inc
in
rclb
and
sub
out
dec
add
leave
jmp
dec
mul
jno
test
xchg
out
repz
or
je
and
mov
jge
push
push
add
in
jl
mov
xchg
mulb
enter
adc
mov
loope
je
ljmp
pop
test
inc
mov
dec
adc
jns
mov
sub
mov
adcl
das
pop
addl
add
mov
pop
sub
sbb
xlat
push
imul
mov
sbb
iret
xchg
icebp
mov
divb
in
ja
xchg
fistpll
int3
adcl
inc
cmc
xlat
ret
repz
push
jge
sub
push
in
std
adc
jne
xlat
xor
rcrl
enter
sti
fcmovbe
jecxz
or
ss
ret
xchg
xor
popf
aaa
or
mov
sbb
inc
mov
loop
cld
dec
jge
or
xchg
inc
fwait
mov
addr16
arpl
sbbb
sbb
mov
aad
mov
mov
int
xchg
fstpt
xor
movsb
stos
sub
shr
inc
jecxz
arpl
mov
xchg
shl
adc
xchg
in
insb
mov
lcall
mov
cmpl
in
cmc
and
push
insl
xchg
stc
or
adc
jl
sub
ss
pushf
in
xchg
pop
dec
jle
add
sub
lret
adc
sbb
fsts
inc
adc
mov
add
fldcw
pop
xor
decl
or
add
xchg
inc
mov
iret
in
mov
inc
mov
stos
out
inc
dec
stos
xchg
inc
push
mov
out
xchg
ret
xchg
lods
and
nop
lods
mov
jne
movzwl
jno
mov
push
jo
scas
stos
jns
mov
in
dec
mov
mov
jg
stc
jns
stos
addr16
inc
mov
pop
lods
rol
int3
xchg
pop
sahf
add
xchg
sub
dec
xchg
cmp
xor
push
pop
outsb
mov
pop
cmp
fs
loopne
adc
outsl
int
pop
add
jae
sti
push
push
lods
dec
add
dec
lret
movsl
andl
or
ljmp
cld
dec
jp
les
sahf
push
mov
xor
iret
out
mov
cmp
sub
divb
pop
pop
jmp
in
scas
incl
ja
xor
mov
xchg
mov
loope
jnp
xor
xchg
je
cmp
into
test
and
lock
pop
jg
leave
mov
lahf
dec
sahf
arpl
jmp
sub
add
jne
fstps
pushf
or
cmpl
mov
mov
inc
push
aaa
out
inc
xor
xlat
sbb
dec
push
inc
subb
mov
orl
les
or
nop
or
jnp
mov
repnz
sahf
bound
out
movsb
xor
rol
inc
roll
mov
faddl
sub
add
jae
mov
lahf
cmpsb
test
inc
sbb
xor
xchg
mov
outsl
idiv
inc
sub
mov
fidivrs
and
cmp
sbb
adc
movsl
subl
pop
sbb
out
in
mov
fwait
lret
xchg
push
cmp
adc
push
out
add
xchg
fbld
test
fcoml
adc
mov
adc
push
dec
rolb
popf
repnz
ret
cs
pushl
stos
sbb
jmp
bound
in
mov
xchg
dec
jb
push
mov
stc
negl
xchg
or
cli
xchg
mov
ret
dec
outsb
div
pusha
sbb
loope
fstps
and
xchg
mov
scas
mov
mov
clc
dec
clc
or
int3
pop
lock
mov
xchg
ljmp
xorl
adc
xchg
aad
shrb
ljmp
mov
add
mov
test
xchg
outsl
or
sub
mov
cmp
push
je
iret
pusha
mov
imul
mov
test
mov
fsubrl
addr16
inc
and
and
outsb
adc
cmp
push
rol
push
jge
aaa
je
movsl
or
fnstsw
stos
arpl
imul
inc
mov
mov
mov
add
ja
add
push
jecxz
jns
incb
xchg
mov
and
sub
sarl
vaddsubpd
jnp
in
mov
dec
sbb
lcall
std
lcall
pop
inc
mov
in
pop
pushf
inc
mov
sub
mov
push
imull
std
addr16
cmp
sti
out
loopne
and
pop
sub
xchg
bound
sub
sbb
jl
std
adc
adc
mov
sbb
cmc
add
pop
pushf
dec
test
xlat
adc
cmp
add
xchg
inc
scas
xor
sub
push
fbstp
mov
icebp
movsb
lods
mov
rcrl
sub
es
mov
mov
jg
out
jo
add
jae
test
mov
adc
mov
test
test
inc
leave
or
std
adc
js
data16
push
xchg
jbe
sbb
lods
and
push
or
mov
in
or
sub
jne
xchg
inc
insb
jecxz
dec
dec
xchg
addr16
in
xchg
stos
xchg
pop
pop
sti
cmp
xlat
dec
dec
es
adcl
clc
and
jb
jbe
outsb
push
add
in
lea
push
dec
out
lret
ja
or
mov
sub
sti
aad
loop
hlt
das
in
das
cmp
test
outsb
or
mov
je
cmc
jno
aaa
test
enter
and
mov
adc
ret
jb
scas
dec
pop
fdivs
popf
fisttps
push
repnz
mov
push
and
and
jmp
int
aam
fdivs
mov
push
nop
or
sbb
dec
dec
andl
jecxz
mov
sbb
je
in
nop
push
xchg
call
fdivl
or
mov
mov
mov
sub
pushf
fisubrl
mov
shl
push
fisubrl
lds
pop
sbbb
and
lcall
popa
sbb
data16
jp
and
and
push
push
sub
int3
cmc
clc
lock
xchg
mov
pop
xor
cld
jp
mov
loop
and
push
sub
repz
clc
mov
sarb
and
loop
jecxz
outsl
outsl
adc
dec
shlb
icebp
cmp
leave
popa
push
add
popa
mov
push
mov
idivb
cli
sub
scas
imul
call
mov
popa
in
xorb
xchg
sub
rcrb
and
add
adc
jae
jge
in
push
jae
jmp
imul
dec
xchg
frstor
or
ficoml
roll
fsubrs
pop
popa
jnp
inc
popf
jge
ds
ljmp
lret
js
arpl
push
mov
mov
xlat
jge
ja
push
xlat
xor
dec
shl
popa
ljmp
dec
xchg
mov
out
enter
sarl
mov
outsl
xor
pushf
test
cld
pop
pop
stos
mov
clc
imul
cs
ret
adc
addl
stos
lret
inc
fbld
cmc
pop
push
lock
push
inc
adcl
popf
pop
mov
jmp
add
xchg
aam
icebp
mov
and
aaa
testl
inc
ret
adc
fwait
lcall
fcmovnu
sub
dec
insl
fldt
xchg
jo
fsubrl
sub
jp
outsl
loop
dec
add
sbb
scas
leave
loop
in
xchg
pop
arpl
push
aad
into
mov
sbb
sub
add
js
or
push
imul
adc
pop
push
cmp
push
jmp
lahf
insb
stos
dec
jecxz
mov
arpl
mov
icebp
popf
jecxz
gs
pop
sbb
nop
dec
repnz
pushf
fiadds
rorb
in
lret
pop
shl
cmp
scas
push
fcomps
pop
les
xor
and
arpl
arpl
cmpsb
mov
int
xor
data16
jmp
xor
inc
out
adc
sti
push
shll
pop
sahf
in
cltd
adc
and
rorl
aam
std
xchg
sub
pushf
jno
mov
ljmp
cwtl
inc
outsl
iret
sbb
fstps
xor
mov
or
push
add
cmpsl
dec
jnp
add
mov
and
stos
dec
cmp
incb
stos
jge
fwait
or
lods
mov
gs
cmp
jo
jno
xor
hlt
iret
arpl
into
sbb
or
in
push
jmp
das
dec
xor
pop
adc
bound
add
jl
mov
call
daa
outsb
mov
hlt
push
fisubl
jae
jmp
jl
mov
leave
pop
mov
cmp
ror
pop
pop
mov
or
sbb
xor
shll
nop
lret
pop
and
adc
mov
xchg
xchg
cmp
cmp
ljmp
or
out
mov
and
roll
aaa
xor
fs
cmp
inc
mov
xchg
xchg
gs
int3
xchg
pop
scas
mov
mov
gs
lret
jae
jae
sub
pop
xchg
stc
pop
lods
shl
jp
in
dec
inc
das
pop
out
xor
xor
sub
xor
popf
stos
cli
shl
push
add
lahf
cmp
jp
mov
loope
sub
sub
filds
das
ret
inc
hlt
das
pop
fnsave
lret
mov
bound
jecxz
mov
jne
in
fistl
into
lods
xchg
mov
cmp
sub
mov
sbb
push
xor
xor
sub
outsb
and
xchg
mov
hlt
std
xor
and
bound
es
aam
mov
pop
and
es
push
idivl
test
das
xlat
cmpsl
cmp
inc
roll
lea
sbb
movsb
adc
stos
sbb
out
cld
fwait
dec
jg
clc
sub
fisubrl
clc
pop
scas
add
btr
scas
xchg
and
daa
push
or
dec
dec
es
je
std
ss
lock
and
sbb
ja
stos
into
das
add
popf
lods
loope
into
mov
stos
dec
imul
ds
fwait
mov
sahf
cmpb
or
cltd
add
mov
popa
sub
adc
jbe
adc
shrl
or
cmp
pop
fxtract
push
push
xlat
mov
popf
pop
int3
adc
dec
mov
mov
cmp
clc
and
hlt
ja
push
fsts
gs
dec
fs
xlat
lret
pop
mov
xor
mov
scas
loope
add
insb
cmp
xchg
lahf
cmp
adc
cwtl
movsb
lcall
sub
mov
flds
xchg
shll
cmp
lock
cmp
sub
cmc
scas
aad
add
push
inc
lret
xor
mov
xchg
xchg
mov
inc
jmp
dec
add
inc
sub
mov
subb
xor
shrl
mov
mov
mov
or
into
cmp
lds
xchg
jmp
roll
pop
sub
lods
gs
dec
mov
pop
or
jns
insl
stos
xchg
inc
inc
fstpl
sbb
cwtl
fmuls
dec
loop
pop
xchg
inc
add
jg
jmp
hlt
fstl
pop
incl
dec
mov
add
mov
mov
aad
and
fidivrs
imul
adc
nop
lods
sbb
adc
mov
and
imul
xchg
movsl
jo
sbb
test
dec
test
jl
push
jmp
or
inc
out
icebp
jg
repnz
mov
add
les
cmpsb
cltd
je
xchg
fwait
mov
push
out
xor
push
mov
inc
ds
test
aas
je
rolb
cmovno
dec
xchg
mov
into
add
xchg
jo
sub
rcl
or
fidivs
fisubrl
pusha
rolb
push
mov
sahf
popa
daa
rorb
pop
xchg
inc
enter
dec
ljmp
add
and
insl
fldcw
popa
ss
ss
adc
cmpsl
insb
mov
inc
loop
push
clc
rcrb
mov
into
nop
xor
leave
scas
repz
popf
cs
push
in
sti
je
je
lds
cmp
mov
jno
pop
and
in
dec
jmp
fwait
xchg
in
repz
push
mov
xor
fs
mov
ss
push
add
jo
ss
cmp
inc
sub
push
idiv
jle
mov
pop
imul
xor
imul
dec
ljmp
imul
mov
push
mov
nop
shrb
mov
mov
cmp
roll
sbbl
lret
mov
mov
mov
enter
cmp
mov
or
push
sti
mov
cmc
or
pop
mov
popf
out
lds
ss
and
mov
les
outsl
jl
scas
lahf
and
inc
repnz
inc
cmc
jle
mov
stos
xchg
mov
and
pop
in
mov
mov
mov
aas
in
push
mov
or
push
add
repnz
sbb
lds
out
mulb
aaa
loopne
push
icebp
sub
push
fisttpll
add
sbb
pop
lcall
push
lcall
imul
mov
xchg
sti
jbe
aad
ljmp
fdivrl
inc
xchg
xchg
mov
arpl
push
and
hlt
add
jmp
push
xchg
or
jbe
rcl
mov
daa
push
mov
xor
cltd
and
pushf
push
jne
push
jae
jl
push
int3
or
pusha
jp
and
mov
mulb
ss
or
push
pop
add
jb
bound
mov
or
bound
ljmp
je
sbbl
mov
cmp
shlb
call
mov
scas
mov
mov
mov
jmp
pop
clc
mov
sbb
jo
cld
xlat
das
es
xchg
pop
push
dec
in
into
xor
leave
negb
cld
inc
push
ljmp
lret
or
or
dec
push
cmp
pop
icebp
mov
sbb
jb
add
ficompl
jecxz
push
jb
in
data16
cld
mov
xlat
popf
pop
jl
jnp
fsubrl
mov
movsb
adc
shlb
stos
cmc
movsl
inc
inc
cwtl
push
addr16
pop
ss
xor
sub
lea
popa
push
pop
filds
rorb
and
jle
rol
push
mov
or
fistl
outsb
jle
or
push
aad
cmp
cmp
roll
ror
xor
mov
ret
add
leave
mov
aaa
or
out
test
clc
pop
dec
or
cs
adc
and
pop
xlat
icebp
adc
rclb
or
mov
xchg
fldenv
dec
sbb
and
dec
stc
or
xor
xchg
xchg
repnz
bound
ljmp
dec
dec
jge
pop
push
adc
mov
ljmp
es
gs
jle
outsl
and
dec
ffree
mov
mov
pop
stc
hlt
test
dec
int
in
add
test
scas
cmc
adcl
loop
mov
xchg
dec
jge
stos
inc
jo
aad
fmulp
xchg
xchg
fstpt
or
mov
movsb
lock
aad
ds
inc
shl
add
lds
sbb
pushf
sbbb
lret
xchg
insl
sub
and
in
and
cmp
data16
jb
js
push
push
xchg
push
enter
repnz
pop
scas
add
pop
lods
mov
lahf
test
or
or
or
out
adcl
mov
push
popa
add
fldenv
mov
push
mov
sbb
neg
sbb
adc
mov
push
test
xchg
or
sbb
push
cmp
ja
ret
sarb
imulb
std
and
and
into
xorb
call
lahf
dec
gs
push
inc
divl
lea
inc
iret
arpl
pop
pushf
fwait
inc
cmp
repz
mov
ret
pop
test
aad
iret
sbb
mov
mov
mov
inc
xchg
in
xchg
leave
jg
cli
pop
js
inc
ss
or
add
sbb
cmp
lock
xlat
pop
inc
cmp
sbbb
dec
faddl
in
fxtract
add
mov
cmc
xor
lahf
mov
cmc
insb
stos
fstp
out
notb
xchg
aaa
jmp
out
cld
cmp
les
rol
ds
inc
cmp
lods
bound
jge
in
xchg
and
dec
aam
outsb
test
jg
mov
push
cmpsb
mov
flds
push
mov
shrl
mov
popa
outsb
jae
xor
adc
xor
push
in
mov
cltd
mov
pop
mov
xchg
icebp
stos
test
pop
jl
jnp
mov
jne
xor
and
adc
mov
mov
cmc
adc
movsl
je
scas
push
xor
push
mov
fisubrs
dec
out
outsb
sub
xor
call
insl
int
or
gs
push
hlt
mov
shrl
stc
pop
pusha
push
dec
lahf
addr16
out
call
mov
mov
push
pop
and
inc
mov
outsl
lods
push
stc
lea
and
inc
mov
xchg
sub
inc
mov
lret
push
mov
fstpl
aam
andb
push
int
ret
mov
pop
ja
pusha
aad
jb
fdivrp
cmc
cmc
fisttpll
push
mov
movsl
ljmp
jp
fsubrs
cltd
xor
pop
jns
push
movsb
enter
test
adc
mov
adc
in
inc
outsb
fimull
aad
mov
cli
aam
inc
leave
int3
adc
dec
shl
testb
gs
jnp
mov
das
sti
fxch
sti
fsts
or
jl
dec
imul
mov
jns
lret
xlat
mov
lods
ffreep
push
mov
add
xor
subb
push
test
mov
jns
lock
fwait
cmp
dec
jle
pop
in
fbstp
add
fwait
xor
adc
out
pop
cmp
insl
add
aam
jno
sub
sti
dec
push
pop
scas
sbb
test
cmp
push
cmpsl
mov
cmc
cmp
xchg
xor
add
in
pop
dec
inc
xor
mov
inc
testb
outsb
or
mov
hlt
xor
insb
or
sbb
jle
rcrb
loope
nop
and
dec
push
int3
xor
into
dec
or
push
mov
dec
and
test
or
aad
roll
cmc
lahf
pop
xlat
je
imul
movsl
mov
stc
movsb
in
push
push
pop
adc
iret
xorb
test
xchg
lods
inc
xor
or
inc
or
loope
test
stc
pop
mov
mov
fs
popf
rcrb
jle
adc
imul
fcomps
repz
pop
xchg
jae
mov
outsb
out
call
mov
mov
mov
insb
sbb
lods
mov
push
and
movsb
xlat
jne
repnz
or
sarl
add
arpl
inc
fildll
in
pop
xchg
push
shlb
add
hlt
fbld
ret
and
int3
mov
dec
pop
daa
cmp
ret
in
fldenv
xorb
clc
dec
mov
arpl
mov
in
orb
insb
outsl
xchg
sbb
or
sub
inc
scas
or
shll
jge
fs
stos
push
mov
mov
mov
cmp
pop
aad
movsl
xor
es
lods
ja
sub
ret
cmpsb
and
cli
push
int3
and
bound
mov
setno
xor
xchg
negb
xor
push
adc
xchg
pop
xchg
fs
sbb
lahf
push
aas
test
in
push
cmpsl
enter
fnstcw
lret
pause
jbe
adc
ffreep
fwait
or
roll
jae
stc
sbb
cmpsb
in
or
mov
xchg
xlat
es
pop
call
jbe
ret
push
lret
jmp
push
clc
jae
mov
mov
leave
or
cwtl
shrl
aas
lods
push
test
sti
je
jle
mov
popf
mov
div
dec
adc
lock
adc
push
cwtl
rolb
sbb
lahf
or
jb
push
in
mov
adc
mov
loop
int3
rorl
lret
stos
inc
imul
loopne
fdiv
lret
xlat
lret
leave
cmp
fs
inc
ja
xlat
insl
fs
sbb
sub
dec
inc
inc
lret
sahf
sti
sti
lea
rorb
mov
mov
cmpb
mov
cld
adc
lea
mov
loopne
call
cli
or
inc
data16
or
mov
mov
nop
rcll
repz
inc
cmp
cmc
scas
popa
bound
add
mov
repnz
jge
mov
mov
test
loopne
add
xchg
add
jle
xor
aam
inc
and
push
addl
jp
adc
adc
mov
cwtl
hlt
xchg
add
int
mov
popa
pop
and
loope
enter
jbe
push
pusha
outsb
pop
bound
jo
adc
lcall
in
sub
test
dec
lock
and
add
mov
pop
jno
xchg
push
in
sahf
pusha
aad
add
int3
leave
sbb
daa
lock
or
int
aas
cmpsb
int
push
jle
dec
rorb
push
ficomps
ss
cli
and
and
add
std
and
test
icebp
dec
dec
inc
cmp
xor
icebp
fldl
lret
ss
filds
mov
sbb
push
mov
mov
dec
push
and
insb
out
mov
dec
or
lods
decl
aas
jbe
fsubs
sbbb
add
loopne
les
mov
dec
add
cmp
and
mov
dec
lods
cltd
cltd
enter
aas
loope
sub
iret
add
inc
out
in
xor
jae
push
fwait
mov
cmp
jle
cld
pop
sub
cmp
and
xchg
test
fsts
inc
loop
xchg
pusha
icebp
call
in
jge
bound
cwtl
jl
mov
cmp
mov
cmp
mov
pop
dec
sub
adc
cli
jnp
xor
xchg
mov
mov
push
push
ficompl
mov
imul
mov
lahf
dec
inc
xchg
cltd
fcompl
mov
mov
adc
loop
cmp
ljmp
std
sub
orb
icebp
push
jb
inc
aas
in
inc
xlat
mov
pop
in
sbb
xchg
push
dec
addl
lods
mov
leave
rorl
bound
or
mulb
xchg
sub
ss
es
addb
inc
sub
insl
shrb
cmp
dec
daa
test
into
mov
jb
mov
mov
lods
sbb
mov
addr16
shll
add
dec
dec
jecxz
jge
adc
mov
das
sarl
mov
ljmp
adc
sbb
add
or
sbb
fistpll
inc
and
aaa
sub
jbe
mov
and
cmpb
push
imul
cmp
bound
out
dec
mov
ljmp
mov
cmpl
push
mov
push
pop
push
mov
sbb
lahf
fsubl
mov
scas
lret
jg
mov
xor
jns
repnz
inc
scas
jbe
loopne
fnstcw
dec
adc
push
cmp
pop
sub
sub
sub
push
jo
mov
pop
push
ja
push
jecxz
pop
xlat
or
and
lods
addr16
mov
loope
fsubs
push
out
push
pop
adc
lret
mov
jbe
mov
mov
inc
and
sti
adc
xchg
stos
cld
rcll
and
and
mov
mov
shlb
shll
mull
testb
push
outsb
in
in
test
lea
cmp
inc
xlat
lret
test
xor
test
xchg
or
or
dec
stos
inc
shrl
sbb
mov
daa
addl
add
pop
inc
mov
push
cmpsb
repz
sbb
dec
mov
xchg
enter
das
or
pop
fnstsw
out
sub
or
daa
xor
pop
jb
popf
mov
pusha
mov
cmp
lahf
in
cmp
xor
push
inc
push
loope
cmp
sbb
cmp
popa
clc
pfrsqrt
les
ds
dec
dec
jmp
in
sub
fdiv
sbb
adc
repnz
ret
push
jle
adc
gs
bound
jae
pop
lret
xor
adc
mov
scas
xchg
sbb
and
and
adcb
test
mov
jmp
aaa
dec
psadbw
or
sub
loop
cmp
pop
and
hlt
xchg
ret
add
xchg
js
dec
mov
fsubrl
pop
into
push
cld
lahf
sub
push
out
scas
insl
rorb
dec
adc
icebp
scas
cmc
lods
mov
in
lds
icebp
div
mov
and
rclb
in
cmp
mov
xor
pop
sub
pusha
or
pushf
jno
pop
and
cmp
cmp
sub
xor
in
mov
arpl
fwait
cmpsl
adc
and
js
repz
cld
push
push
in
push
in
cmp
push
pop
shl
push
adc
loope
imul
fisubrs
mov
outsl
xchg
xchg
lea
pop
mov
sahf
push
push
nop
outsl
clc
sbb
xchg
dec
dec
sahf
sbb
ljmp
icebp
push
mov
fisubrs
push
hlt
cld
sarb
sbb
add
inc
leave
sub
xor
sahf
or
rolb
repz
sti
jl
in
outsb
aas
out
pop
add
in
scas
adc
push
inc
pop
mov
cld
bound
add
enter
jecxz
sub
pop
add
ja
gs
clc
push
cmp
jae
jae
mov
xchg
addl
pop
xchg
xor
pop
movsl
test
xchg
test
aaa
inc
fidivrl
push
jp
xlat
jmp
cld
popl
sti
test
adc
ljmp
mov
outsl
mov
xchg
jns
iret
shrl
scas
inc
addr16
xor
stos
xor
jae
sub
push
xchg
stos
lcall
and
mov
jno
sar
lds
push
lret
adc
call
test
jbe
mov
cs
add
outsl
aad
pusha
in
lcall
push
jne
pop
and
out
mov
jb
loopne
into
lret
cmp
popa
xchg
xchg
cld
xor
lea
cltd
sbb
bound
rcr
and
lahf
loopne
aad
mov
fcmovnbe
js
sub
jns
mov
mov
xchg
dec
imul
or
loopne
push
and
shll
inc
popa
stos
pop
out
mov
and
inc
daa
mov
rcrl
xchg
adc
and
js
pusha
or
mov
adc
test
sbb
dec
mov
and
lods
and
inc
sub
add
jb
lds
dec
push
mov
icebp
flds
ss
mov
adc
mov
push
test
mov
int
daa
mov
adc
push
jmp
sbb
hlt
jmp
test
icebp
out
fwait
xor
xor
outsb
mov
loope
add
jnp
sbb
cltd
insl
jmp
push
in
hlt
mov
mov
or
add
int
aas
inc
jp
lea
xor
je
ds
push
pop
icebp
loopne
or
pop
rolb
inc
fistps
jecxz
arpl
cmpsl
mov
nop
enter
jecxz
push
cltd
pop
iret
cmp
add
ljmp
sbb
sub
add
and
stos
jbe
add
in
inc
mov
lret
jo
faddl
sub
test
mov
mov
push
in
mov
add
jecxz
push
and
mov
lds
sbb
in
rorb
outsl
stc
fildll
adc
fwait
imul
cli
popa
fs
and
jecxz
gs
mov
mov
inc
inc
adc
mov
scas
nop
stos
sub
test
xchg
push
iret
jmp
insb
mov
in
sbbb
ljmp
pop
cli
jge
fisttpll
adc
pop
subb
dec
jp
push
mov
fcomip
and
das
movsb
pop
test
xor
jno
or
push
xchg
loope
adc
insb
rorl
sub
fbld
jge
dec
inc
or
mov
pop
push
les
dec
in
loop
lock
mov
inc
jb
int
pop
out
mov
jp
push
sub
mov
popf
sbb
push
pop
rorb
mov
jne
lret
loope
or
sbb
cmp
mov
fildll
lea
in
cs
xchg
sti
jne
js
xor
cmpl
mov
jae
cmpsb
lahf
fyl2x
sbb
mov
inc
sti
push
fnstsw
and
out
loope
fwait
inc
repz
sbb
jmp
out
test
mov
xlat
scas
dec
xchg
inc
lock
enter
in
xchg
icebp
and
stc
jl
mov
add
test
add
mov
jb
nop
ljmp
xor
test
xchg
xchg
push
rorl
dec
push
and
push
mov
js
sbb
pop
sbb
pop
xchg
pushf
push
int3
jbe
aam
or
rclb
icebp
or
neg
aad
into
sbb
push
daa
push
cmp
mov
rcrl
das
rorb
add
pop
loop
mov
mov
inc
push
mov
xchg
lret
data16
aaa
mov
lods
loopne
adc
mov
add
ret
inc
stos
mov
sub
bound
push
cmp
mov
mov
xor
cmpb
sbb
loopne
addr16
nop
movsb
out
test
loop
or
inc
mov
out
xchg
cmpsl
clc
xlat
mov
in
int
xchg
sbb
sahf
out
sbb
jno
loopne
push
vmwrite
repnz
sar
ss
arpl
inc
pop
icebp
aas
imul
lock
mov
push
cmc
or
sub
lcall
add
stc
ljmp
xor
pop
pop
mov
dec
divl
mov
cmp
xchg
adc
pop
jp
shll
mov
test
cmpl
sbb
mov
fisttpll
xchg
ret
push
push
cs
sub
xchg
adc
jno
pop
push
cli
pop
arpl
inc
leave
dec
call
imull
ret
insb
inc
lds
fwait
add
xorl
mov
inc
sar
in
add
enter
and
fwait
lahf
dec
imul
imul
les
cmc
je
pop
jo
in
xor
fisttpll
mov
data16
dec
stos
movsb
adc
mov
pusha
fcmovnb
push
fildl
orb
pop
movsb
shl
push
ret
push
inc
out
sbb
je
mov
inc
mov
rcrb
pushf
push
add
cmc
stos
data16
sbb
les
mov
add
repnz
pop
mov
jecxz
dec
mov
pop
sub
xor
adc
loop
and
sub
orl
shr
por
das
mov
jle
jbe
and
clc
adc
add
pushf
cld
in
clc
push
loop
test
mov
aam
inc
into
popa
mov
movsb
jb
in
popf
xchg
mov
in
add
mov
call
scas
lret
mov
cmp
aas
aaa
mov
xchg
xchg
inc
test
loop
pop
int3
mov
mov
stos
add
jecxz
xchg
ss
jg
jmp
imul
inc
mov
or
out
or
popa
fwait
enter
xchg
and
inc
xchg
lcall
lret
out
push
loopne
arpl
sahf
scas
cmp
adc
xor
sahf
mov
jo
and
sbb
pushf
push
push
es
dec
sti
or
pop
sbb
mov
dec
dec
fnstcw
clc
sub
jl
xchg
xchg
cmp
mov
and
jb
pop
push
push
idivl
ffree
fs
repnz
roll
xchg
mov
mov
pop
leave
mov
out
sub
mov
out
mov
fidivrl
imul
mov
daa
xor
aaa
xor
int3
aad
adc
iret
mov
and
jge
paddd
repz
pop
dec
add
imul
aad
mov
mov
jmp
cmpl
push
in
mov
test
cmp
shll
and
loop
lea
mov
mov
or
shl
pop
into
cld
mov
pop
dec
xor
into
jns
add
sub
lahf
repnz
das
xor
cmp
xlat
aam
inc
mov
push
aaa
xchg
cmp
dec
aas
push
adc
mov
jecxz
insl
mov
lods
repz
fnstcw
add
sub
mov
pop
xlat
mov
rcrb
push
mov
rcrl
adc
add
xchg
mov
fcomps
mov
loope
aad
and
pop
inc
and
nop
or
sub
push
call
gs
in
ret
ds
popa
imul
and
cmp
xchg
leave
mov
lods
lcall
stos
xor
jg
insb
movsl
cmp
cmp
lret
insl
xchg
xlat
lahf
mov
xor
lret
or
xchg
jmp
jp
adc
xchg
mov
arpl
push
sbb
lods
and
sub
mov
clc
icebp
cli
jae
cmp
mov
sbb
add
xchg
mov
push
insl
std
cmpsb
mov
repz
rorb
push
cmp
pushf
int3
adc
add
imul
es
test
idivb
test
loopne
pop
pop
or
outsl
test
mov
add
cld
cld
sub
leave
mov
mov
ds
pop
jge
and
pop
xorl
mov
icebp
mov
adc
and
push
punpckhdq
push
xor
xchg
scas
in
mov
in
push
adc
lcall
add
xchg
ficoml
sti
fwait
push
aas
inc
cmp
or
pushl
sarb
das
or
movsb
jp
ss
aaa
in
cltd
cmp
je
js
lods
insb
jg
inc
push
aad
aam
out
xor
or
hlt
ds
mov
jg
dec
rcl
jmp
push
xlat
jno
xchg
aad
movsl
jno
data16
add
fcomi
xor
sbb
xchg
push
inc
mov
and
aaa
cmp
xchg
add
je
mov
push
ret
mov
frstor
inc
or
dec
cltd
push
cmp
ffree
stc
out
cmpsb
inc
sub
lret
in
xchg
imul
or
jno
jge
mov
lret
shufps
out
mov
cmp
fbld
rep
int3
or
mov
add
bound
pop
cmp
daa
xchg
loope
mov
loope
sbb
cmp
inc
push
cwtl
mov
or
add
mov
xchg
ret
xchg
gs
idiv
es
xor
pop
mov
dec
movsl
jnp
push
fwait
aam
mov
adc
mov
aaa
xor
jle
repz
aam
inc
jecxz
sar
push
mov
jge
jl
sub
pop
xor
mov
cmp
pop
test
xchg
mov
int
and
enter
or
testl
dec
rcrb
mov
jnp
js
inc
or
mov
pop
aaa
test
inc
iret
add
sub
sbb
mov
push
aaa
mov
arpl
xchg
lret
mov
out
push
jno
les
add
or
or
subl
ret
xchg
push
and
incb
ljmp
shrb
sub
xor
mov
inc
and
imul
sbb
and
lahf
dec
ret
sub
fiadds
daa
cmp
dec
sbb
in
das
inc
stc
daa
xor
addr16
dec
pop
mov
sbb
loopne
mov
ret
and
jg
fdivrs
push
in
cmc
call
inc
dec
dec
mov
pop
stc
cli
mov
fcmovnu
pop
sub
mov
out
cmp
add
pop
mov
jl
pop
dec
dec
call
mov
jne
jno
xchg
leave
add
push
mov
mov
mov
iret
cmpb
push
jl
cli
push
adc
or
sbb
add
jg
jns
movb
adc
ljmp
iret
inc
movsb
js
shl
lds
sahf
aaa
js
push
iret
cmpsl
fstpt
xchg
cltd
es
lahf
rcll
pop
or
leave
aas
ja
jmp
sub
add
pop
cmp
dec
aas
cmp
xchg
das
jo
add
or
xor
loop
inc
dec
adc
jae
pop
xchg
push
sti
mov
sub
aaa
fldt
fsubl
jl
mov
icebp
daa
das
and
xchg
pop
push
ror
cmp
dec
pop
mov
clc
jno
into
xchg
mov
test
icebp
sbb
pop
jmp
push
jns
dec
dec
mov
sbb
adc
dec
les
mov
pop
adc
mov
inc
mov
movsl
mov
shrl
pop
or
add
mov
scas
fnsave
flds
adc
mov
jmp
mov
rorb
nop
inc
sub
sub
bound
scas
cmpl
adcb
outsb
cmp
mov
or
pop
test
stos
cmpsb
leave
les
push
jl
lock
sbb
les
xlat
sbb
jnp
and
fildl
and
mov
call
push
xchg
lahf
inc
dec
or
cmpb
cli
sbb
xlat
lds
push
aaa
movl
sub
rolb
imul
ret
scas
fucomip
add
in
adc
mov
cmp
and
adc
inc
cmp
dec
dec
rcll
push
jo
mov
or
scas
mov
dec
jo
lcall
jmp
lock
ret
mov
mov
and
mov
scas
sbb
dec
push
jle
sbb
jp
xor
xchg
push
das
out
in
or
cmpsb
inc
pop
xchg
inc
into
cmp
aas
push
mov
xchg
pop
stc
adc
mov
nop
call
in
pop
jp
inc
jnp
sbb
out
into
or
in
push
stos
cmp
push
std
add
inc
movsb
outsb
sub
iret
add
add
fildll
cmc
mov
jle
mov
bound
adc
lods
pop
adc
cmp
mov
sti
dec
iret
or
call
or
dec
pop
movsb
iret
out
or
mov
cli
adcl
and
mov
divl
xor
push
shrl
ret
xchg
mov
aas
mov
sub
jle
call
gs
xchg
jne
decb
lahf
mov
xchg
inc
popf
cmp
add
shll
sbb
jl
push
and
jns
clc
iret
out
test
xchg
aaa
mov
cmp
iret
mov
cmc
sub
je
aaa
inc
sub
scas
int3
lret
fildl
stos
fucomp
xchg
js
lret
dec
leave
mov
sub
xor
shrl
loopne
sbb
xorb
fildll
xor
in
das
jmp
and
ljmp
ret
jg
bound
inc
decb
lret
jne
data16
enter
jne
push
mov
cltd
jle
pop
imul
push
lods
pop
inc
ret
cmc
repz
inc
ffreep
lock
mov
scas
insl
jbe
shll
rolb
in
movsl
mov
sub
popa
ja
jge
and
fisubrs
mov
jge
push
loopne
mov
addr16
cwtl
adc
inc
sub
out
cli
scas
out
pop
or
fs
jb
adc
roll
outsb
xchg
dec
ss
mov
xor
jl
notb
adc
cwtl
xchg
in
push
cmp
insb
inc
jae
sar
into
cmc
xor
sbb
push
daa
shrb
and
add
lret
push
pop
jno
pop
cwtl
fucomp
push
mov
adc
aas
cmc
push
hlt
dec
std
je
movsl
dec
jle
dec
cmp
push
mov
fcom
mov
push
sbb
fcoml
xchg
mov
cmp
addr16
insb
rorl
imul
xor
mov
jle
jns
enter
aas
andb
fsubrs
and
daa
movsb
lds
repz
stc
aas
shlb
shll
es
pop
ret
hlt
int
cwtl
popa
je
jmp
pop
jmp
dec
movsl
aas
push
outsb
adc
arpl
aas
jne
sbb
shrl
cmp
fadds
lahf
cwtl
lea
test
cmp
or
sarl
dec
xchg
fnstcw
cli
pop
mov
add
cltd
cltd
inc
pushw
inc
mov
xor
pop
out
sbb
rolb
xchg
mov
xchg
lcall
and
enter
imul
fcomi
loopne
popa
stos
int3
jge
sub
pop
je
cmc
clc
scas
pop
sub
jns
cli
ret
adc
pop
or
cmc
cwtl
je
adc
mov
mov
cmp
out
adc
lods
jg
sub
or
mov
cmp
push
jmp
stos
mov
lods
ret
jnp
out
lods
arpl
popf
jmp
dec
mov
adc
lea
xchg
fcoml
sbb
or
push
xchg
jnp
xchg
dec
pushl
fs
pop
in
xchg
inc
mov
lds
out
pop
push
jno
mov
mov
xor
push
loope
xchg
mov
lahf
insl
imul
add
dec
cmp
dec
mov
sub
bound
ljmp
lock
pusha
arpl
dec
cmp
sbb
decl
xor
push
rcll
pop
ret
pop
test
inc
adc
cmp
aad
adc
xchg
and
mov
and
out
push
filds
mov
lods
adc
pop
ss
jg
lea
xor
jno
pop
call
or
cmpb
mov
and
xchg
mov
das
cmpsl
and
xor
jnp
mov
and
add
xchg
fnstsw
aam
int3
pusha
fcoml
xlat
aaa
mov
xor
pop
cs
test
mov
or
xchg
push
pop
sbb
rcl
das
stos
ja
pop
test
repz
mov
movsl
cmp
shlb
push
mov
orb
xchg
mov
mov
pop
ret
fcmove
xor
pop
ja
and
insb
stos
inc
mov
daa
cli
xchg
sub
xor
mov
scas
test
push
lds
jne
xchg
pop
and
inc
fs
fidivrs
bound
sub
mov
das
cs
mov
lods
sub
jb
jl
dec
ror
adc
aas
test
ljmp
push
add
inc
sub
and
jle
out
cs
mov
insb
scas
dec
std
rolb
xlat
push
sbb
loope
jge
mov
jno
xor
jl
add
int3
movsl
out
ret
insb
pop
cwtl
xchg
mov
adc
sbb
sub
aas
xchg
ljmp
sbb
stos
mov
xchg
pop
add
cld
xchg
aas
dec
or
cs
and
push
jnp
mov
xchg
je
inc
cmp
or
jecxz
test
mov
das
sbb
clc
out
icebp
jg
or
scas
add
pop
dec
stos
and
sub
inc
in
sbb
jae
mov
cld
mov
adc
lea
lock
xchg
sbb
inc
ja
test
xor
pop
cmpsb
inc
xlat
je
sbb
xlat
dec
maxps
ret
mov
in
shll
cltd
icebp
sub
je
repnz
jne
ret
in
dec
in
sub
fistps
lods
add
lock
lcall
stos
xchg
inc
pop
mov
cli
pop
mov
xor
iret
push
push
cld
cmpsb
inc
inc
adc
lods
les
stos
inc
ss
movsb
pop
jns
cmp
fisttpll
in
bound
jmp
xchg
mov
mov
das
fcmove
sbb
ficomps
inc
pop
mov
cmp
cmp
aaa
fcomp
add
rcll
add
arpl
cld
add
mov
push
mov
adc
dec
cwtl
fwait
insl
push
leave
repnz
or
push
lret
fucomp
mov
clc
inc
in
push
cmpsb
int
sbbl
sbb
scas
push
inc
outsl
lock
add
sub
mov
call
or
in
cmpsl
add
sub
jmp
sahf
xchg
inc
std
sahf
pop
pop
inc
push
inc
or
std
or
inc
repnz
inc
outsb
stos
and
faddl
xor
xchg
add
or
into
xor
cmp
out
cmpsb
jp
sahf
sbb
std
dec
lea
jle
repnz
gs
rsqrtps
sarl
or
popf
insl
sti
jo
add
mov
cmpsl
stos
stc
insl
add
adc
mov
stc
push
bnd
loop
pop
out
pop
cld
lods
mov
and
sub
daa
lret
lret
mov
out
test
repz
inc
dec
mov
sbb
push
dec
pop
jns
movsl
mov
in
pop
inc
cmpsl
imul
iret
pop
rcrl
jo
gs
inc
nop
xor
dec
jns
fstps
call
cmp
fstpl
pop
jecxz
lret
dec
dec
out
insb
xor
jne
ljmp
lret
lock
and
sub
sbb
div
and
mov
movb
cmp
push
enter
xchg
test
push
pop
sub
clc
cltd
fs
clc
dec
dec
iret
push
loop
fmul
sbb
mov
adc
sub
aas
xchg
rcrl
mov
pop
pop
cwtl
ds
pop
push
out
jne
sti
sbb
xchg
add
jmp
lret
pavgw
inc
mov
and
mov
daa
cltd
leave
xor
test
xorl
xchg
aaa
and
cltd
mov
popf
inc
cld
insb
pop
jbe
nop
add
loopne
daa
mov
adc
add
or
or
pop
jmp
or
push
push
or
test
mov
mov
scas
and
iret
fcmovnb
adc
cmpl
sub
pop
pop
cmp
daa
insl
sbb
mov
push
out
inc
and
dec
and
mov
xchg
shr
pop
fcmove
xchg
sub
jge
sti
xchg
insb
int
and
insl
popa
push
xchg
fisubl
jo
outsl
mov
loope
fimuls
jle
sbb
and
insb
add
mov
cld
inc
add
cltd
adc
mov
cmp
fstps
dec
jl
jnp
cwtl
scas
or
dec
aam
aad
add
sarb
and
and
mov
test
hlt
xor
and
popf
jl
add
xchg
jns
inc
inc
jp
sahf
test
fcomps
lcall
jl
addl
mov
push
clc
push
mov
mov
fwait
or
push
insl
popa
dec
xchg
dec
enter
lcall
cmp
mov
mov
outsb
inc
leavew
push
xor
push
fbstp
hlt
dec
negb
stos
imul
jns
sarb
add
loop
pop
xor
data16
lcall
adc
jl
popl
cmpl
sub
nop
pop
mov
dec
jb
mov
adc
push
xchg
add
imul
out
push
mov
cli
idivb
repz
test
test
push
mov
inc
and
push
adc
mov
ljmp
cmpsl
in
jo
add
stos
sbb
in
lea
inc
dec
mov
aad
xor
ret
mov
cmp
mov
fldcw
std
xchg
shlb
cs
pop
pop
int3
in
sub
imul
adc
xor
outsb
std
lds
pusha
pushw
push
inc
mov
and
inc
sbb
lds
xchg
fstpt
sbb
test
sbb
enter
jmp
inc
mov
mov
and
jge
insl
lret
sti
push
or
jmp
xor
ja
mov
xchg
movsl
sub
mov
sti
cltd
inc
sub
and
push
pop
inc
pusha
bound
push
push
sbb
dec
in
pop
lea
outsl
repz
enter
ds
sarb
enter
test
stos
mov
movl
inc
sbb
decb
ror
cmp
int3
out
fsts
decl
pop
iret
pop
mulb
std
mov
lea
push
push
movsb
leave
cmp
mov
call
adc
pop
mov
cmpsb
or
lock
push
inc
or
dec
ds
out
cli
out
stos
jge
inc
or
outsl
mov
inc
adc
daa
add
mov
mov
cltd
inc
xor
push
or
nop
stos
ficomps
stos
pop
dec
jl
hlt
dec
test
outsb
mov
inc
pusha
hlt
mov
cmp
lret
mov
iret
and
inc
inc
lock
mov
addr16
insb
arpl
cmpsb
or
and
dec
dec
dec
sub
subl
cmp
pop
jle
jne
xchg
push
int
das
dec
rclb
xor
lcall
jle
fldl2e
push
stos
std
sub
and
mov
ds
ret
or
outsb
jae
sub
negl
gs
xchg
fiaddl
pop
push
insb
hlt
inc
out
test
push
test
or
ljmp
in
dec
pop
xchg
orb
push
popa
and
or
cmp
imul
imulb
fbld
inc
out
fmull
cmc
js
mov
sbb
dec
fnstcw
push
sub
call
dec
out
scas
movsl
mov
sub
ljmp
lock
mov
xchg
ret
scas
sbb
jnp
popa
and
fisttpl
enter
lods
dec
sarl
mov
hlt
push
and
jecxz
and
cmpl
fs
stos
std
cmc
mov
test
and
test
addb
pop
pop
cmp
or
daa
scas
mov
dec
mov
in
stos
aas
push
adc
fistl
cld
mov
shlb
inc
push
xchg
inc
mov
into
dec
les
cmp
or
dec
test
or
mov
daa
add
pop
pop
xchg
jb
das
in
in
inc
incl
or
mov
iret
or
insb
fstl
leave
mov
sub
push
xor
cltd
jmp
cld
xor
popa
push
mov
push
or
lock
mov
ds
mov
or
movsb
fwait
or
imul
mov
dec
das
pop
jnp
cli
push
dec
les
xchg
mov
sbbl
gs
xor
xor
call
push
sbb
mov
inc
in
pop
push
ret
or
jbe
push
jns
push
add
leave
jo
and
bound
mov
mov
inc
sbb
inc
or
sahf
inc
pop
xchg
fstl
xchg
or
add
popf
xor
mov
cwtl
es
arpl
push
or
lods
mov
sub
fiaddl
pop
pop
jns
sbbb
sbb
rcrl
hlt
mov
adc
mov
xor
ret
xchg
ljmp
cli
and
movzbl
xchg
or
dec
inc
loopne
xor
mov
dec
mulb
and
sbb
xor
cld
ljmp
mov
sub
and
and
int3
movsl
cmpsb
and
mov
push
fildl
int
sbbb
lret
mov
mov
jnp
out
dec
movsb
mov
inc
out
mov
icebp
pop
in
aam
andb
jns
pop
jns
inc
aam
mov
jge
mov
ss
cmp
mov
cld
fisttpll
sub
pop
mov
mov
fdivs
xor
inc
pop
dec
hlt
shr
cmp
xchg
cwtl
dec
sbb
in
es
into
in
fcomps
xchg
cmpsl
leave
mov
cmp
jmp
inc
jno
movsb
ret
push
ljmp
nop
xchg
cs
loopne
popa
rorb
ss
xor
stc
daa
push
sub
dec
mov
ret
fiadds
pop
pop
test
and
inc
hlt
push
dec
cmovbe
sub
aas
dec
jbe
dec
or
dec
xchg
pop
jne
adc
dec
xor
xchg
in
test
ret
xchg
mov
push
cmpsl
test
int3
dec
sar
int3
imul
popa
sbb
ljmp
jecxz
sar
inc
sbb
in
xchg
fisttps
mov
adcl
or
pop
xor
xlat
mov
or
scas
mov
imul
repnz
add
sub
xchg
inc
mov
add
xchg
xor
clc
or
xchg
pop
push
fdivrs
pushf
dec
rcrl
sar
lds
mov
sub
cmp
add
cwtl
repz
mov
sub
sub
out
sbb
jnp
shll
add
inc
sbb
rolb
mov
scas
shll
adc
and
pop
xor
pop
push
adc
push
jmp
sarl
sub
xchg
sub
int3
push
sub
jnp
ljmp
sbb
mov
gs
mov
mov
jb
daa
adc
sbb
xchg
cmpsl
scas
loope
pop
mov
mov
ljmp
pushf
shl
push
divl
inc
push
pop
sub
cmc
push
sub
dec
cmp
sub
inc
jp
add
mov
adc
push
pop
pop
int3
mov
inc
je,pt
icebp
in
xchg
or
test
ds
lods
xchg
inc
mov
mov
iret
pop
xchg
idivl
inc
cwtl
cmpsl
push
mov
in
push
in
and
aas
insl
mov
xor
and
test
std
ret
js
xor
cmc
jno
inc
call
mov
loop
pusha
lcall
cmpsb
push
ret
and
sbbb
and
rcll
or
jo
mov
invd
testl
mov
test
out
in
or
fdivr
pop
std
idivb
adc
scas
inc
xor
jbe
or
sub
in
jl
pop
add
mov
push
cmp
cmp
inc
ffreep
jbe
cmp
xlat
insb
push
adc
loop
xchg
pop
inc
dec
aam
cli
lahf
mov
std
cmpsb
or
pop
outsl
mov
into
add
clc
inc
fnstenv
stos
xchg
test
mov
push
fadds
jb
into
lods
lds
pop
fs
sbb
adc
add
lods
lahf
mov
jmp
xchg
jo
pminub
xchg
or
or
jecxz
push
es
add
out
shll
lret
inc
jns
adc
imul
mov
xchg
in
push
inc
lahf
mov
test
jl
in
out
addr16
and
ret
cmp
push
rep
pop
outsb
jg
push
nop
fisttps
pusha
add
cs
out
out
mov
leave
cmp
mov
add
jno
ja
mov
jb
sahf
call
outsb
cmp
stos
aas
rolb
dec
xor
jge
iret
jp
pop
or
xor
xor
mov
dec
pop
mov
xchg
add
inc
clc
or
aad
cli
das
sbb
in
jecxz
insl
cmpsb
aas
xor
daa
dec
dec
or
das
mov
mov
xor
mov
imul
jmp
arpl
hlt
jl
sahf
pop
xchg
adc
mov
xor
push
subl
addr16
cltd
mov
hlt
ja
in
cmp
stc
movsb
pop
mov
gs
aas
xchg
adc
das
rolb
push
fisubrl
push
outsb
mov
or
loope
push
jo
dec
sub
sbb
dec
pop
mov
pop
das
out
inc
clc
xlat
mov
mov
dec
pop
out
mov
or
in
test
adc
outsb
sbb
std
push
jns
push
mov
outsl
cld
das
pop
pop
stos
pop
cs
ss
jmp
cmpsb
scas
pusha
les
faddp
pop
jge
ljmp
mov
mov
jae
dec
mov
pop
push
dec
push
leave
jg
jbe
jp
xchg
push
lods
dec
stc
cmp
jb
sub
loope
adc
out
mov
es
mov
rol
and
insl
in
jge
and
mov
xchg
les
cmp
pop
and
push
lock
add
adc
popa
aam
notb
inc
add
xor
lock
mov
hlt
add
add
sub
xchg
movsb
sarb
push
push
clc
adc
mov
and
lea
push
push
pop
mov
xor
loopne
push
cmp
das
insb
js
imul
mov
into
addr16
xor
sahf
adc
negb
or
or
xor
je
push
dec
mov
mov
xchg
popf
dec
movsl
pop
and
sub
sahf
test
jb
lahf
mov
ds
xchg
adc
int
push
mov
pop
pop
adc
out
sub
inc
adc
cltd
jmp
push
arpl
int3
pop
mov
jno
pop
cmp
ret
mov
mov
cmp
sub
xor
add
call
std
push
out
mov
mov
test
xchg
pop
in
jo
sub
data16
imul
lahf
das
sbb
pop
jo
mov
test
cwtl
cmpsl
or
out
cmp
fbld
call
test
mov
adc
mov
pop
cmp
mov
or
frstor
loopne
and
in
cmp
lock
mov
push
out
adc
sub
orl
mov
push
imul
or
lds
and
stc
mov
iret
nop
sub
add
push
and
nop
fcoml
cmp
push
push
hlt
cmp
testl
xor
pop
fcompl
lcall
in
repnz
xchg
aam
ret
aam
loop
mov
lock
inc
rcrb
adc
jmp
push
mov
enter
ret
jo
dec
xchg
cltd
xor
push
cmpsb
mov
sbb
mov
add
dec
jne
call
andb
clc
jb
dec
inc
add
gs
inc
lcall
pop
mov
xor
fisubrs
mov
sbb
fsubrs
imul
ss
lods
stos
sbb
test
push
insl
fists
jge
jp
out
jecxz
in
lret
popf
jns
xlat
fidivrs
push
cmp
sbbb
jg
push
push
rolb
sub
insl
lret
ljmp
out
pop
in
lods
push
jo
xor
pop
push
push
mov
nop
scas
insl
fsubs
mov
aad
and
jp
mov
lcall
cmc
in
sahf
sbb
or
sub
dec
push
insl
out
dec
dec
mov
loope
sbbb
ja
je
mov
adcb
or
add
lahf
sti
push
mov
jb
mov
pushf
jge
lds
stos
scas
outsl
out
cli
jle
and
xchg
adc
lahf
push
jns
loopne
cmp
inc
daa
clc
int3
loop
add
in
mov
and
arpl
push
insb
sub
popa
mull
add
or
fmuls
sub
into
les
mov
imul
ret
pop
mov
jl
pop
jmp
pop
ret
imul
xor
push
mov
or
lods
dec
les
fdivl
xchg
jge
ret
shl
aas
inc
jmp
addr16
cmpsl
adc
and
adc
inc
lret
mov
punpcklbw
shl
ret
loope
mov
mov
dec
fimuls
int3
insl
xchg
int3
cmpsl
pop
push
or
out
int
orb
mov
sub
sub
std
popa
fadds
lahf
and
cmp
inc
or
in
cmp
repz
mov
mov
mov
ffreep
data16
push
shl
popa
shl
sub
arpl
div
ljmp
sbb
notb
lock
fistl
sbb
pop
xchg
and
or
xor
jle
adc
sbb
fwait
rorb
adcl
idiv
insb
cwtl
les
jno
xor
sarl
dec
aas
jbe
gs
push
filds
push
call
mov
in
cmp
mov
and
cmp
outsb
lock
xor
enter
in
or
jno
or
sub
fwait
das
sbbl
stc
mov
mov
sbb
cmp
and
jl
mov
cmpsb
rolb
and
jmp
das
adc
test
jbe
scas
mov
arpl
cltd
repnz
sbbl
stos
jo
jge
aad
ja
loope
push
pop
mov
and
pop
adcl
pop
jno
mov
shl
jnp
mov
adc
orl
repz
jbe
repnz
mov
rorl
lods
push
push
xchg
xor
call
fs
fnstsw
popa
fbstp
and
mov
faddp
bound
cmp
mov
outsb
push
bound
imull
sub
outsl
mov
dec
popa
sbb
fdivrs
aam
pushf
mov
loopne
add
mov
jno
or
repnz
mov
popa
cld
push
or
inc
dec
shll
mov
fwait
inc
shlb
arpl
jb
pop
pop
xor
sbb
dec
pop
cs
or
loopne
pop
push
sbb
sbb
or
mov
sub
aam
mov
outsb
cld
int3
pop
ljmp
test
andl
xchg
jmp
and
aas
je
loopne
dec
shlb
push
insl
mov
inc
fst
cmp
das
lock
into
scas
repz
inc
jb
ret
or
mov
pop
add
test
test
pop
sub
jae
and
lret
jbe
jae
vpmullw
fdivr
sbb
aas
adc
insb
add
ljmp
scas
pop
push
mov
cmpsl
jge
fcmove
or
les
and
nop
mov
sbb
ds
jne
fcomps
fistpll
lods
sub
xchg
or
inc
cmpb
sbb
mov
jnp
dec
in
daa
lock
leave
mov
aad
test
hlt
dec
jnp
mov
movsb
cli
dec
sarl
add
cmp
sbb
jno
call
test
std
mov
inc
dec
mov
loopne
scas
enter
xchg
lea
lods
push
sbb
push
lods
adc
lea
pop
lret
call
loope
push
sub
or
mov
inc
pop
fists
mov
xlat
push
mov
jge
push
sti
adc
pop
call
aam
xor
pop
push
inc
jo
addr16
outsl
sub
push
push
cmp
les
cmpsl
iret
adc
mov
inc
sbb
and
fsubrl
jecxz
insl
testl
arpl
daa
pop
pop
push
mov
pushf
push
inc
and
xchg
xor
daa
jbe
pop
notb
lahf
lret
mov
test
mov
jg
jne
dec
pushf
xchg
xor
dec
aas
shr
ss
cltd
lret
std
fnstenv
xor
sahf
xor
add
bound
lds
arpl
in
inc
push
mov
les
jne
add
dec
sbb
and
mov
inc
xchg
mov
repz
ficoml
jne
clc
mov
push
nop
in
movsb
xchg
inc
mov
stc
pop
add
mov
dec
xor
sbb
pop
add
nop
jg
pop
out
xchg
mov
mov
cmc
and
xchg
xchg
jg
cmp
in
push
add
jmp
insb
mov
ss
pop
cmp
je
ret
int
orw
aam
jae
sahf
jle
out
cmc
xchg
mov
mov
cmp
pop
lahf
in
ficoms
adc
addb
testl
jp
xor
sub
lea
xchg
push
movsl
lds
leave
pop
lods
insl
add
cmp
mov
push
sub
dec
loopne
outsl
dec
lea
imul
cmp
and
jns
sbb
xor
adc
sti
jmp
test
aaa
inc
cmc
sub
loope
mov
stos
or
and
mov
add
roll
mov
sub
imul
mov
or
in
and
fs
cmp
push
pop
loop
mov
ret
mov
push
xor
shr
jp
jo
add
pop
jns
fldpi
test
insl
sti
outsl
fwait
mov
and
jecxz
push
adc
push
sub
add
je
inc
cmc
sahf
cmpsb
in
mov
pop
ret
mov
movsl
imul
pop
push
inc
pushl
stc
fistpll
stos
sbb
call
mov
sbb
and
push
popa
xlat
mov
mov
jae
add
ret
jns
xchg
mov
lret
dec
gs
pop
dec
xchg
icebp
cmc
push
xchg
adc
in
inc
test
mov
aaa
jecxz
lret
test
jl
lock
lahf
nop
in
inc
inc
xchg
in
fsts
js
and
lcall
cltd
sub
add
movsb
das
xchg
aas
or
out
fsubrs
and
xor
mov
xchg
add
adc
inc
push
clc
xor
sbb
rcrb
jno
or
xchg
xlat
loopne
pop
in
test
loopne
test
add
in
aaa
add
stos
cmc
mov
sbbl
loop
fcmovbe
ret
push
jmp
pop
sub
mov
mov
daa
cmp
fcmovnb
jne
leave
xor
shlb
pop
test
in
gs
or
gs
popa
mov
stos
lahf
ja
xchg
jo
cltd
in
or
mov
sub
or
mov
mov
pop
jg
or
in
cmp
push
adc
sub
scas
pop
jecxz
push
sbb
jnp
dec
or
decb
xorb
xor
in
mov
mov
in
xchg
mov
add
jge
daa
out
leave
push
mov
dec
fistpl
fists
xor
push
dec
test
lcall
leave
xor
dec
lret
rcll
insb
cmp
or
aam
mov
and
lret
add
cmp
leave
and
cmp
jle
xor
shrl
popf
xchg
adc
dec
je
pushl
jno
idivb
or
scas
xlat
mov
sbb
adc
insb
xor
outsl
js
mov
push
enter
jns
mov
cmpsb
lods
std
adc
std
adc
pop
insb
pop
sub
fstpt
loopne
push
lret
mov
push
adc
adc
shl
inc
fwait
es
or
lock
aad
pop
addl
shlb
pop
ss
fwait
scas
push
loope
sbb
pop
sbb
xchg
sub
pop
mov
mov
mov
cmc
jge
cmp
and
mov
jle
jns
mov
aam
sbbl
adc
sub
jl
xchg
push
mov
push
test
fincstp
ss
adc
xor
fcomps
pop
int3
dec
jp
mov
cltd
mov
jecxz
jmp
dec
repnz
mov
and
xlat
xchg
fldcw
mov
push
fwait
cld
or
aam
push
pop
dec
fdivs
or
pop
adc
and
jmp
and
inc
push
aas
push
adc
add
dec
aas
push
mov
dec
jbe
xor
xchg
cmp
cmp
push
aas
jns
fmulp
dec
clc
rcll
mov
sub
jno
jb
inc
rcl
sbb
inc
add
push
xlat
pop
sti
insb
dec
icebp
mov
add
and
lea
in
ret
push
dec
jbe
leave
push
and
ds
in
sub
pop
sub
mov
hlt
ds
sub
adc
mov
inc
inc
bound
push
sub
rorl
shr
push
clc
ficomps
ret
adc
aaa
aaa
mull
jge
push
enter
cmpsl
jmp
xor
in
mov
pop
sub
movsb
jecxz
push
outsb
es
cmp
cmp
sub
and
lret
sub
mov
shrl
movsl
ljmp
lret
test
mov
xor
popa
mov
adc
imul
mov
ficoms
test
test
adc
xor
push
dec
les
orl
in
sarl
aam
cmp
stc
inc
test
or
mov
mov
lcall
mov
sbb
xor
cmc
cmp
pop
lea
stos
aaa
inc
data16
fildl
xor
cmp
jge
insb
xchg
scas
mov
push
shl
iret
ret
pop
lods
test
leave
xchg
fcmovu
push
stos
les
jg
insl
pop
pusha
jecxz
push
sub
pop
mov
aad
mov
mov
or
push
imull
enter
push
loope
jge
push
fdivrs
mov
dec
inc
mov
nop
lahf
push
adc
pop
das
adc
inc
fxch
inc
pop
push
push
lds
sub
cmp
mov
xchg
idivb
dec
inc
nop
pusha
mov
daa
mov
push
push
inc
pop
pop
dec
filds
mov
push
popf
imul
adc
sbb
pop
pusha
fsubrl
and
mov
pop
and
fcoms
je
cmp
mov
mov
jo
out
dec
cltd
mov
dec
rcl
shlb
push
data16
hlt
loop
adc
mov
xor
cmp
add
push
sub
rcll
flds
mov
fwait
sbb
ss
dec
ret
or
bound
data16
sub
mov
xchg
inc
mov
mov
mov
and
nop
or
sbb
mov
pop
idivb
les
xor
lock
add
lods
lret
aas
popa
adc
fcomp
dec
inc
xor
int3
les
sbb
and
nop
movl
addr16
jnp
in
cmpsb
mov
fistps
xchg
mov
push
outsb
test
imul
dec
subl
mov
cmp
ss
out
cmp
loope
push
ret
mul
xchg
xchg
fwait
jmp
sqrtps
hlt
fcoms
xchg
iret
mov
fdivs
ret
shlb
or
loop
jecxz
outsb
out
in
je
pop
xchg
xor
aas
cmp
stos
dec
jl
pop
jns
fmuls
aaa
out
adc
in
lods
cmp
fstl
lret
jmp
outsb
jae
paddw
add
nop
out
adc
mov
aad
push
mov
sarb
std
stc
pop
les
scas
mov
filds
ret
mov
sbb
sub
les
add
iret
aam
call
lret
clc
adc
sub
add
adc
jecxz
jmp
add
xor
push
arpl
lret
cld
pop
and
bound
pop
and
out
push
mov
push
addr16
jmp
je
lock
xor
jg
dec
pop
popa
andb
mov
adc
scas
lret
ljmp
scas
std
shrl
and
add
jmp
mov
popf
ret
xor
jns
add
faddl
ljmp
leave
jbe
sbb
and
add
aas
int
mov
sub
pop
icebp
pop
dec
inc
pop
jp
xlat
mov
or
pop
arpl
jnp
push
cmp
mov
mov
dec
insb
inc
jbe
push
inc
sbb
xor
or
leave
cmc
aam
pop
dec
jb
lods
sub
and
popl
xchg
fs
mov
mov
jg
shlb
mov
jle
pusha
aas
test
push
and
cltd
mov
mov
lcall
mov
or
xlat
jmp
jnp
pop
aad
cmp
lock
push
xor
arpl
mov
faddp
pop
or
repnz
inc
fwait
addl
les
sbb
aam
add
push
fdivl
mov
in
mov
add
sbbb
dec
fcomps
dec
xchg
sar
inc
dec
arpl
dec
scas
js
pop
cmp
test
xchg
xor
ficompl
lods
sub
notl
sti
imul
nop
push
adc
cmp
xchg
shll
mov
lods
jo
stc
stos
hlt
and
repz
lods
jb
inc
or
pop
pop
out
aad
sbb
add
jle
je
cmp
xchg
cmp
call
sbb
cld
aaa
fs
push
mov
roll
xor
out
popf
js
xchg
leave
xor
orb
imul
push
adc
addr16
cmp
pop
push
add
push
mov
lahf
out
ja
sbb
xchg
lahf
pop
data16
inc
dec
and
adc
mov
xor
fwait
inc
xorb
fidivs
dec
xlat
pop
xor
iret
arpl
add
rolb
push
xor
bound
test
loop
ficompl
push
in
daa
xor
mov
mull
icebp
leave
jecxz
add
fs
or
push
lea
dec
insb
test
cmp
push
scas
jge
mov
dec
add
fbld
cmp
push
movsl
xchg
and
into
add
fsub
push
push
and
fwait
sbb
inc
mov
insb
fsubrs
jo
shr
out
jge
lods
add
inc
in
cwtl
cmp
jb
int
jge
add
rcrb
test
iret
or
lds
cmpsl
fnstcw
xchg
andl
ror
pop
xor
cmp
sbb
or
dec
dec
fsubs
icebp
push
xor
cmp
mov
xchg
in
push
fbld
jecxz
xchg
adc
sbb
addr16
ret
adc
push
sarl
or
pushf
cmp
and
dec
jo
out
jnp
popa
arpl
outsl
xchg
mov
andl
inc
and
adc
cwtl
mov
mov
sub
push
add
push
jno
mov
vpsrld
nop
mov
leave
fsubrl
scas
mov
and
pop
mov
inc
scas
inc
jne
mov
pop
adcl
fiaddl
jb
insl
xor
mov
jl
mov
out
enter
cmp
inc
and
nop
int3
sub
mov
sbbb
dec
and
dec
out
out
mov
and
hlt
clc
sbb
xor
or
mov
adc
nop
dec
stos
es
jae
xor
xchg
cmpsl
mov
mov
push
add
shr
and
mov
sbb
orb
mov
add
or
in
into
adc
pinsrw
jg
rorl
cwtl
cmpsl
sti
push
add
xor
mov
ficoml
mov
or
dec
scas
loop
outsl
sbb
or
adc
xchg
push
cmpl
dec
mov
into
push
loope
mov
sahf
adc
loop
jae
loopne
mov
adc
dec
cmpsl
cmpsl
push
sbb
sbb
cmp
cli
cmp
nop
cld
mov
xchg
xor
adc
popw
out
sub
pushf
jle
push
mov
inc
rcll
lods
cmp
cli
or
cmp
jb
mov
mov
aaa
push
dec
xchg
sti
ljmp
jle
push
scas
mov
scas
cs
fs
xor
mov
out
sbb
ficoml
push
cmpsl
dec
pop
lea
lahf
pop
jp
testb
sbb
sub
call
cmc
call
mov
jmp
inc
cmp
ss
rorb
mov
jae
enter
push
xchg
mov
mov
fwait
mov
jbe
inc
imul
fistps
orl
lods
sub
ret
push
je
push
jmp
test
jae
adc
push
inc
cmp
adc
nop
dec
scas
bound
enter
adc
sarb
add
ds
cmp
adc
test
test
out
jg
and
imul
inc
inc
mov
inc
das
mov
adc
mov
test
lods
imul
inc
fchs
testl
popa
aam
loop
pop
fildl
push
sahf
xchg
dec
mov
mov
mov
mov
add
dec
mov
hlt
pop
pop
add
mov
imul
mov
add
add
or
lea
orb
lret
pop
int
out
push
inc
pop
adc
sub
pop
inc
imulb
mov
mov
xor
scas
cmp
mov
mov
es
mov
mov
cmpsl
or
cmp
loopne
lea
faddl
mov
ljmp
xchg
add
rol
ss
incl
mov
xor
arpl
ja
xor
sbb
push
ljmp
fimuls
sbb
mov
clc
loop
cli
jl
cmpsb
out
jbe
insl
iret
add
cmp
inc
xchg
sub
in
mov
shll
nop
lret
cmp
pop
dec
inc
fstl
push
mov
ljmp
sub
pop
add
jmp
pop
fiaddl
pop
cmp
inc
jnp
xchg
inc
sbb
popa
jg
popa
xor
daa
movsl
lret
in
outsl
mov
out
push
test
out
sarl
mov
pop
mov
pop
mov
rcr
mov
jl
sahf
dec
movsb
pop
mov
xchg
outsl
lret
or
loopne
or
insb
cli
lahf
push
cli
daa
aaa
dec
andb
lcall
inc
scas
push
stos
in
add
xor
aad
in
and
test
sti
lods
cmpsl
fisubl
push
outsl
mov
test
xchg
ret
pop
call
mulb
outsb
ret
mov
ret
mov
das
jecxz
push
scas
mov
fstpt
xchg
mov
push
jle
out
in
shr
mov
jle
xchg
mov
xor
fbld
rol
mov
inc
xchg
stc
insb
add
fildll
popa
nop
add
dec
sbb
addr16
stc
gs
scas
movsl
mov
pop
xchg
or
aam
rclb
negb
je
cwtl
mov
sarl
cmp
inc
call
dec
cmp
mov
sbb
dec
mov
ficoms
outsl
repz
mov
add
out
int3
mov
out
mov
jbe
or
scas
or
pop
push
cli
xchg
sub
stos
aam
mov
adc
add
inc
ret
dec
xor
daa
jo
xchg
loopne
cli
jg,pt
addr16
gs
push
xchg
xchg
sbb
pop
sbb
jge
test
add
inc
lcall
xchg
adc
loope
in
jns
out
inc
data16
pop
mov
or
pop
mov
xchg
loopne
inc
mov
jp
push
xchg
clc
xchg
subl
push
add
add
mov
jp
sub
cmp
mov
lds
mov
dec
outsb
aas
jle
jbe
sub
lock
cmpsb
adc
int3
add
jb
movsb
in
fstpt
jecxz
and
ss
out
xchg
xor
cmp
lahf
sbbl
out
pushf
pusha
mov
adc
sbb
pop
fcmovb
mov
or
xor
clc
loopne
repnz
cmp
ret
push
xor
jae
xchg
sub
clc
sti
je
push
ficomps
and
jne
je
cmp
cmpsb
mov
jnp
loopne
jne
out
jge
loop
sbb
mov
or
aas
xor
in
mov
call
ljmp
mov
xchg
std
int3
sti
lret
pop
and
cmp
pop
inc
xchg
adc
pop
std
fs
mov
add
mov
in
fs
or
dec
xor
cmp
or
pop
jg
je
fisttps
adc
or
inc
mov
sbb
pop
mov
popa
lret
inc
add
jp
dec
loope
jmp
sub
mov
pop
in
inc
add
mov
jg
dec
lret
test
mov
out
push
cld
jae
fmul
mov
ds
call
call
xchg
inc
mov
pop
cwtl
ds
lret
divl
pop
aad
inc
scas
mov
pop
xor
adc
movsl
jno
movsl
inc
xor
push
add
pusha
cmp
inc
jp
adc
xor
bound
pmuludq
mov
or
or
fnstcw
mov
into
add
sbb
out
adc
fisubs
loopne
inc
xorl
sbb
jecxz
fcomps
pop
jbe
cmp
push
arpl
xchg
push
repz
adc
dec
add
pop
repz
out
leave
jno
aas
mov
setge
rcl
xchg
inc
mov
jg
fistl
repnz
es
rcl
js
dec
push
and
lock
mov
xchg
inc
sbb
mov
pop
sbb
ja
jno
in
shll
or
pusha
lret
mov
leave
xor
mov
test
imulb
test
push
stc
xchg
pop
out
sahf
dec
out
lcall
inc
stos
add
xchg
jb
das
xchg
andb
lods
sbb
in
sbb
jns
push
loop
shl
and
out
mov
xorb
out
iret
sbb
mov
repnz
xor
jns
xchg
jmp
inc
sahf
lea
movsb
int3
xchg
push
movsb
push
sbb
jns
out
mov
inc
icebp
cltd
add
repnz
in
push
ficomps
adc
push
je
fldl
out
inc
mov
mov
cmp
mov
hlt
shrb
pop
cmp
es
sub
dec
repnz
int3
out
push
inc
leave
jo
sahf
xchg
sbb
push
add
dec
inc
jb
mov
leave
aad
jnp
sub
push
lods
dec
xchg
flds
lds
push
add
or
mov
jp
aaa
bound
cmp
sbb
adc
add
push
loopne
push
sbb
aaa
mov
push
mov
repnz
inc
xor
sbb
mov
push
xchg
insl
insb
in
cs
or
pop
xlat
aam
daa
mov
lret
xchg
mov
push
mov
mov
iret
shrl
cmp
adc
dec
loop
xchg
fdivs
test
push
mov
cld
pushf
lret
es
adc
pop
mov
or
fdivp
add
xchg
xlat
xlat
insl
ljmp
stos
xchg
pushf
sbb
adc
mov
mov
sahf
sar
retw
shlb
in
inc
cmpsb
shrl
icebp
adc
xlat
fnstcw
mov
sbb
mov
cs
mov
ret
cmc
ret
je
xchg
insb
mov
xor
xchg
cmp
fstpl
jle
cld
aad
xchg
lcall
adc
adc
out
and
add
dec
stos
ljmp
inc
push
fcoms
int
pop
frstor
fnstenv
cmpsl
out
adc
sbb
dec
lock
in
pop
push
jle
sbb
jge
jecxz
mov
outsl
negb
mov
fnstsw
out
xchg
movsl
shrl
js
in
lret
arpl
addr16
mov
sbb
mov
push
js
mov
xchg
add
movsb
into
mov
dec
jo
shl
mov
out
sbb
shll
dec
movsl
mov
adc
fisttpl
outsb
sub
insb
and
sti
add
stc
imul
testb
sbb
and
jmp
push
push
arpl
repz
iret
sub
idivl
mov
pop
ljmp
shlb
mov
add
mov
lock
push
pushf
test
out
cld
aaa
in
sar
cli
jne
add
sub
inc
in
inc
aaa
imul
push
sub
push
add
lcall
fs
cmp
dec
aad
push
lods
lahf
int
inc
insb
cld
les
mov
ja
cmp
mov
ficoms
mov
jbe
into
push
push
xor
inc
into
fwait
inc
xchg
in
mov
xchg
in
lret
outsl
out
add
or
xlat
cli
stos
je
out
add
add
cltd
cmpb
dec
mov
ret
cmp
fadds
mov
leave
or
or
or
js
inc
repz
lahf
out
fadds
add
jno
popf
sbb
pusha
mov
enter
fiadds
test
pop
nop
imul
or
sub
add
insb
pop
sbb
filds
nop
and
or
lods
mov
nop
idivb
add
mov
in
jne
inc
jmp
cmp
je
push
iret
in
aad
enter
int
nop
gs
push
pop
inc
sbb
inc
imul
adc
lcall
jmp
add
fwait
adc
mov
std
mov
lea
sbbl
loopne
push
stos
cmp
pop
inc
js
jp
subl
pusha
pop
in
lahf
sbb
sub
inc
lret
and
mov
outsb
jecxz
mov
sub
xor
mov
notl
sbb
lahf
js
loope
lock
imul
sub
sub
dec
mov
out
loope
push
sahf
or
and
xor
notl
and
aad
sub
mov
and
mov
push
and
sbb
pop
rcll
dec
lret
int
and
adc
dec
mov
adc
push
aad
dec
frstor
mov
mov
rcrl
loope
dec
addr16
dec
loop
inc
mov
in
push
in
cmc
add
push
fimuls
test
push
sbb
fisubl
sub
cmp
lahf
mov
sbb
ror
ss
sti
data16
push
sti
xchg
aam
pop
sarb
cmc
mov
mov
push
sbb
mov
pop
fsubs
fisttps
cmc
sar
cmp
fldl
xlat
xor
aaa
jl
adc
push
pop
adc
outsl
pop
sbb
or
sarl
enter
shlb
mov
fiaddl
cs
xchg
repz
out
fisttpll
je
xor
rolb
into
incb
leave
aad
aaa
cmp
lods
fisttpl
mov
es
aaa
cmpsb
mov
and
fldenv
popf
lcall
mov
push
dec
adc
imul
push
lret
mov
jmp
mov
xchg
jbe
imul
into
leave
add
rcll
inc
or
add
jmp
dec
lds
push
mov
inc
insb
mov
xchg
jl
or
cmpsb
push
cwtl
xchg
xchg
mov
imulb
pop
or
aam
iret
jmp
push
jns
pop
outsl
hlt
sbb
push
in
jb
stc
mov
jbe
push
mov
sub
in
adc
orl
jmp
clc
scas
xor
sbb
add
pop
sub
daa
cs
jmp
jle
mov
das
inc
pushf
sub
nop
imulb
push
dec
jne
icebp
jg
pop
mov
jecxz
or
jg
test
pop
jge
xchg
jb
test
or
cmpsl
sahf
call
cmp
int3
jo
or
shll
ret
dec
sub
push
push
int3
and
pushf
fdivrl
cmp
cmp
sbb
lahf
lds
rcll
and
orb
xchg
xor
scas
xchg
arpl
in
mov
sub
hlt
mov
sahf
loopw
into
movsl
lcall
mov
xor
mov
push
out
mov
add
test
fisttpll
ret
out
shrb
cmp
sub
adc
mov
sub
mov
fst
xchg
mov
or
int
movsl
fmul
inc
ss
adc
shlb
jmp
pop
ret
pop
fdivl
push
iret
push
cmp
stos
or
xchg
dec
pop
pop
push
sbb
leave
mov
mov
sbb
jnp
mov
lods
xor
xchg
aad
cmpsb
mov
sti
mov
xor
lahf
adc
mov
call
xlat
dec
push
out
js
clc
inc
adc
scas
and
gs
data16
stc
jnp
sbb
cmpsl
stos
and
add
shlb
dec
fdivrp
jnp
in
push
mov
sub
xchg
mov
out
fisttpl
jae
push
and
bound
clc
idivl
dec
jae
xchg
je
das
pushf
jecxz
inc
cmpsb
push
lahf
lea
xchg
xchg
arpl
mov
or
loop
cmpsb
sub
xor
inc
in
mov
andb
mov
test
fs
cmp
hlt
cwtl
or
lcall
inc
mov
mov
test
push
jle
jmp
lahf
mov
fldl
movhps
pop
and
ljmp
xchg
movl
outsl
lock
or
ds
jp
mov
mov
xchg
in
nop
aad
mov
cld
loop
fidivrl
pop
arpl
sti
and
fldcw
aaa
aad
adc
push
pop
mov
lahf
int3
popa
insb
hlt
mov
fs
fldenv
in
mov
ret
sub
adc
push
je
int
popa
or
mov
out
xor
mov
inc
mov
pop
jo
stos
sbb
mov
in
out
sub
add
and
movb
mov
mov
jns
imul
adc
pop
sbb
fcomps
or
cmp
mov
xchg
movsl
xor
lock
pop
lock
sub
mov
mov
mov
xchg
push
mov
adc
jmp
dec
out
mov
or
imul
adc
push
jbe
or
xchg
rcrb
jecxz
out
jmp
roll
xchg
les
jbe
add
cltd
mov
or
lds
rorb
xchg
sbb
stos
test
je
cmp
add
mov
cmpsb
sub
mov
lcall
in
and
inc
lds
sbb
mov
ss
imull
xchg
je
mov
push
push
jecxz
pop
cmp
scas
aas
sbbb
adc
push
push
cmp
add
adc
mov
out
and
stos
sarb
ljmp
js
xchg
mov
xchg
bound
push
ljmp
orb
pusha
out
pop
pop
push
mov
pop
sbb
fistpll
pop
jbe
and
push
lds
dec
imul
sbb
int3
pop
jecxz
daa
add
into
ret
push
mov
dec
out
and
cmc
lret
test
gs
xor
xor
push
pop
call
in
inc
pop
test
scas
bound
mov
stos
sub
jb
cmpsl
xchg
loopne
mov
mov
xor
pop
call
xorb
jnp
int
clc
ds
dec
mov
adc
lret
xchg
test
jmp
and
xor
or
xor
movsl
test
jge
xor
mov
push
xchg
pop
sarb
jg
arpl
mov
push
loop
mov
jns
push
pop
int3
add
xor
outsl
add
ficompl
mov
cwtl
cmp
jle
jmp
scas
sub
lret
fcmovnb
fdivl
nop
dec
inc
sti
in
lret
mov
adc
fisttpll
sbb
pop
lds
mov
sbb
or
mov
xor
mov
sbb
jnp
mov
ljmp
sub
call
fisttps
leave
or
lret
scas
dec
mov
stc
ja
jge
xor
sub
inc
push
inc
jg
dec
mov
cmpsb
adc
int3
sbb
add
mov
adc
and
xor
ljmp
xchg
iret
pop
fisttpll
cmpsb
out
adc
sub
add
negb
idivb
int3
mov
insl
pop
jbe
stos
cltd
mov
add
fcoms
mov
in
daa
pop
jg
jb
xchg
xor
jg
cli
cltd
xor
imul
ds
jnp
pop
and
xchg
jnp
fistpll
xchg
cmc
pop
lock
mov
pop
mov
jge
lods
js
hlt
or
mov
repz
sub
clc
push
sub
ret
sub
ret
test
ja
adc
dec
inc
push
sbb
test
ret
and
cld
mov
leave
imul
pop
dec
loope
in
fcmovu
sbb
mov
mov
lock
add
outsb
pop
inc
adc
and
push
jae
lods
testl
cmp
in
sbb
mov
sbb
sbb
orl
loop
mov
pop
sbb
imul
mov
sbb
sub
es
push
push
test
mov
sub
push
and
cli
push
fidivl
jae
test
sbb
pop
mov
xchg
adc
in
cmp
fadd
add
jnp
sub
imul
pop
imul
adc
pushf
xchg
or
push
clc
sbb
pop
cwtl
test
pushf
movlps
push
rcrb
add
jbe
faddl
lret
sbbl
fidivrl
addr16
or
add
pop
mov
cmp
mov
loop
aad
add
xor
inc
cmc
jmp
in
push
test
loope
jmp
lahf
dec
or
scas
lret
lcall
lcall
jae
lods
test
ss
mov
cmp
in
cmc
rolb
xor
cmp
out
leave
out
outsl
or
xor
inc
movsb
inc
sub
outsb
or
shrl
fnsave
nop
cmpsl
es
adc
fimull
dec
insl
popf
xor
and
scas
pop
pop
loop
sub
test
push
and
iret
hlt
cmp
mov
es
cmp
subb
push
leave
push
js
in
stc
std
aas
cmp
inc
mov
fidivrs
mov
xor
or
and
inc
adc
call
push
xchg
cmp
shr
xchg
mov
jmp
xchg
jne
jl
adc
mul
and
hlt
inc
pop
and
push
sti
icebp
push
mov
imul
add
out
ja
out
scas
xchg
test
dec
adc
dec
inc
xor
mov
push
or
fwait
sub
mov
ja
mov
fiadds
sbb
cmp
andb
push
jo
dec
xor
cmpsb
xor
mov
pop
daa
fcoml
jg
in
or
add
mov
dec
sbb
push
popa
inc
jo
aad
mov
sbb
bound
sub
push
sub
repnz
dec
mov
xchg
in
xor
mov
repnz
jecxz
pop
into
call
jae
mov
mov
and
cmp
into
pusha
ljmp
mov
cli
sbb
or
jge
inc
sub
jno
mov
sti
jno
and
addl
ret
mov
lret
andb
movsb
adc
dec
and
daa
xor
adc
dec
xchg
mov
jmp
jmp
add
lods
adc
xchg
addr16
daa
into
fdivrl
push
std
add
imull
mov
test
cmc
inc
and
pop
cmp
xchg
push
jb
test
pop
mov
xor
mov
inc
movsl
out
repz
pop
addb
ljmp
movsb
sub
popa
jbe
test
mov
dec
fs
adc
push
inc
adc
in
and
dec
push
or
imul
or
or
and
loope
lds
add
add
insl
or
es
test
pop
inc
jb
arpl
hlt
mov
mov
ficomps
mov
cmp
dec
in
loope
push
add
xor
ss
das
inc
or
xlat
data16
mov
out
adc
sarb
adc
jb
ds
mov
and
jae
fstpt
sbbl
push
push
add
xor
or
clc
cwtl
call
xor
rcrb
push
and
stos
add
adc
mov
mov
pop
dec
adc
in
push
ficoml
xor
dec
cltd
mov
inc
add
outsl
mov
pop
add
sbb
lock
pop
jns
testl
or
fdiv
jg
mov
repnz
mov
aad
or
test
sbb
popf
xor
aas
mov
cmp
repnz
dec
hlt
sbb
mov
cmp
adc
adc
adc
dec
jp
or
xchg
lcall
daa
push
push
mov
cmpsb
jg
mov
fisttpl
sub
call
test
lds
mov
sub
or
sub
in
mov
dec
mov
repz
cmp
cmp
xchg
mov
data16
cmc
dec
or
inc
in
xor
sahf
lods
aad
cltd
mov
movsl
shl
add
sub
mov
mov
outsl
mov
jle
imul
pop
cmpsl
inc
xchg
mov
mov
and
jg
pusha
ret
outsb
sarb
mov
loope
push
repz
int3
cmp
hlt
jae
dec
data16
xchg
mov
push
pop
mov
icebp
stos
cmp
push
pop
push
jb
push
popa
std
in
das
mov
into
enter
jno
push
insl
jge
divb
enter
pop
xchg
or
fsubl
push
mov
rolb
xor
aaa
lret
xchg
scas
mov
cmpsb
data16
ficomps
js
inc
or
push
xor
add
insb
and
outsb
in
in
jb
sar
aam
lods
mov
push
pop
mov
test
adc
sbbb
inc
xchg
out
xchg
mov
int
in
push
test
je
jne
icebp
aas
rolb
not
inc
xor
adc
and
negb
rcrl
xor
vmwrite
repnz
jo
in
outsl
aad
xchg
jbe
cltd
nop
jmp
sub
imul
outsb
test
xor
sbb
add
scas
cmc
add
xchg
fwait
movsl
pop
pop
pop
dec
jne
fsubs
mov
mov
incl
in
cmp
push
cltd
pop
sahf
or
add
pop
mov
movsl
and
xor
sub
dec
mov
push
cmp
nop
movb
testb
mov
inc
stc
dec
push
jno
mov
sub
aaa
push
mov
sub
loopne
stos
pushf
sbb
sahf
je
roll
and
orb
ret
sbbb
std
add
mov
out
scas
push
imul
lret
jmp
and
jo
xchg
xchg
mov
lods
cmp
loopne
test
adc
mov
fistl
xor
jp
ljmp
ret
mov
outsl
or
ret
adc
mov
std
mov
inc
push
and
subb
mov
add
sbb
nop
jbe
test
pop
mov
testl
ljmp
ret
pusha
loope
mov
test
test
in
pop
jno
dec
jge
ss
or
out
ja
loope
push
jae
lret
lds
lcall
inc
jl
stc
addl
and
jnp
insb
jle
push
lea
jb
imul
lahf
call
cli
fcmovnu
inc
cmpsb
mov
loop
pop
imul
insl
dec
fnstenv
inc
mov
insl
mov
and
sub
cmp
icebp
push
jno
cli
add
or
mov
push
int3
cmc
mov
mov
push
cmpsl
sub
fldenv
mov
inc
lcall
jp
daa
push
push
clc
or
inc
popa
lods
jle
dec
sarl
sahf
ja
rcrb
sub
rorb
out
int3
or
jmp
or
push
mov
hlt
sub
loop
out
mov
add
jp
mov
sub
sub
bound
repz
es
add
adc
sub
pop
shrl
jecxz
and
or
mov
pop
dec
stos
dec
in
mov
xor
gs
or
adc
inc
test
test
inc
fwait
and
dec
gs
push
mov
cmpb
or
mov
sarb
mov
pop
mov
fidivrs
ja
repnz
ret
mov
fwait
mov
push
xchg
sub
cmpb
jg
ror
fdivs
or
adc
push
sub
andb
cmp
mov
out
adc
cmp
mov
es
fnstcw
and
dec
or
mov
mov
scas
outsl
int3
pusha
ljmp
sbb
stos
mov
bnd
xchg
fstps
and
inc
shll
mov
int
imul
push
iret
mov
sbb
test
shlb
jne
ret
jno
mov
andl
xor
jb
inc
jae
push
xchg
mov
lret
and
sub
pop
xor
fwait
mov
xlat
jle
push
inc
insb
pop
jbe
push
add
jnp
in
sahf
std
pop
aad
fisubl
push
lahf
les
inc
cmpsl
repnz
in
jno
mov
lahf
cmp
or
les
stos
rcrl
test
ja
or
mov
jge
lods
xchg
dec
push
mov
fs
pop
xchg
imul
add
dec
lock
or
sahf
sub
sti
jl
lret
mov
cli
mov
aas
negl
dec
inc
mov
shrb
push
ficoml
cmpsl
or
out
ret
mov
sub
insb
fcomi
add
mov
faddl
outsl
pop
adcl
add
ret
rol
xchg
cmpsl
cmp
jno
jnp
cmp
mov
negl
leave
jmp
xchg
jle
jg
out
dec
movsb
lret
fsubrl
sub
je
and
mov
push
pop
incl
sbb
add
loopne
ss
stos
gs
add
mov
jb
xchg
fcomp
clc
push
push
xchg
dec
in
mov
ficomps
sarl
gs
aam
mull
lcall
aam
das
imul
mov
xor
sbb
mov
out
fcoml
pop
daa
test
les
add
pushf
mov
jns
push
jns
sbb
ret
sahf
and
push
icebp
jb
loop
in
add
xor
or
xchg
xor
stos
data16
and
pop
jmp
cmpsb
repnz
mov
xchg
leave
dec
xchg
sbb
mov
push
mov
and
js
inc
inc
subl
les
xchg
mov
rolb
jecxz
sbb
lods
in
xchg
movl
in
jl
adc
mov
pop
inc
inc
or
stos
sub
stos
pop
mov
or
ss
movsl
gs
gs
mov
jne
stc
fcmovnbe
int3
push
mov
inc
mov
sub
int3
or
dec
mov
mov
call
sahf
mov
lret
jle
sbb
or
xlat
xlat
rolb
add
inc
imul
mov
xchg
push
in
xor
cmp
call
push
xor
mov
fiadds
jnp
inc
insl
push
and
movsl
loope
or
in
mov
imul
popa
int
xor
and
inc
sbb
sub
js
bound
mov
jnp
jp
lods
in
pop
shlb
sbb
aas
setb
and
add
ror
roll
sarb
push
es
add
pop
pop
sbb
sub
gs
dec
in
xchg
fldt
add
lods
sahf
cli
aam
dec
jl
cmp
xor
xor
mov
jnp
aaa
fxam
rolb
call
fs
ret
jns
cld
shll
jecxz
test
mov
mov
cltd
push
sbb
in
jle
nop
inc
xchg
push
jg
and
xchg
or
adc
icebp
xor
mov
outsl
mov
cld
pushf
xchg
mov
lret
mov
sub
dec
add
jl
andb
mov
inc
xor
push
inc
xchg
mov
lret
aas
pop
inc
inc
mov
rcll
sub
pusha
hlt
int
int
cmp
cmpsl
add
aaa
and
adc
or
xchg
cmp
push
ss
lods
clc
scas
mov
imul
jb
xor
stc
inc
setae
xlat
enter
leave
bnd
fwait
jle
ja,pt
cmpsb
outsb
mov
push
inc
mov
lds
call
out
cmp
add
in
fisubs
jns
arpl
movsl
loopne
jg
dec
jge
jmp
fnstcw
or
roll
jge
push
xchg
xchg
xchg
mov
and
sarl
pop
dec
mov
mov
push
xor
push
push
push
adc
dec
cmpsb
stos
add
jg
in
sbb
in
in
lods
into
push
in
cmpb
mov
xchg
dec
dec
arpl
loope
adc
mov
fdivrp
xchg
mov
sbb
push
mov
push
nop
xor
inc
movaps
pop
cmp
pop
add
push
shll
and
mov
lret
inc
into
mov
pushl
loopne
add
and
push
inc
mov
out
das
add
ljmp
sbb
inc
mov
push
in
jo
xor
push
inc
jae
pop
je
les
jmp
lcall
pushf
test
jp
stos
mov
mov
in
test
inc
xchg
ret
jmp
add
xor
pop
lret
out
push
stc
mov
dec
sbb
jb
cltd
add
es
xchg
fsubr
insl
dec
ja
popa
and
out
sbb
fstl
xor
ret
cmpb
imul
out
and
sub
in
push
xor
test
lods
icebp
outsl
inc
cmc
shll
ja
xchg
bound
xlat
imul
loopne
repz
gs
mov
jle
loopne
mov
nop
sub
mov
les
or
sti
shrb
sahf
fs
dec
mov
push
fstpt
jns
mov
dec
pop
cmp
pusha
test
jle
test
lea
insb
lea
cmp
andw
in
ret
movsb
sbb
out
cmc
mov
mov
pop
push
add
shll
dec
ja
out
adc
mov
lahf
mov
xor
call
pop
pop
shrb
push
movsl
inc
adc
mov
fiaddl
lret
sti
das
stos
inc
add
cmp
fimuls
lcall
sub
mov
sub
clc
jo
push
sub
pop
std
fsubr
jge
sbb
inc
mov
repz
fstps
in
xor
mov
lds
sub
pop
popf
fnsave
lea
mov
jecxz
xlat
aam
pop
dec
jae
sahf
es
fsubr
int
ficoml
scas
inc
or
sbb
imul
bound
out
jecxz
icebp
lcall
shrl
in
lret
and
or
out
and
dec
bswap
js
adcb
or
out
das
inc
in
mov
inc
inc
aas
cmp
test
lods
push
xor
aad
jecxz
lcall
call
mov
push
clc
in
test
push
mov
mov
test
xlat
dec
pop
les
or
outsb
testl
xchg
push
cmpsb
or
aas
fbld
ss
mov
call
xchg
jae
shll
pop
and
add
jne
add
stos
or
mov
xor
jle
lahf
dec
cmpsl
dec
dec
cmc
sub
inc
mov
add
push
cmpb
mov
push
outsb
jmp
and
daa
or
mov
push
or
adc
pusha
or
jns
cmc
inc
sub
mov
add
sahf
aam
iret
lods
imul
test
test
jecxz
push
adc
fstpl
cmpsb
xchg
cmp
pop
in
fs
iret
std
insl
mov
imul
call
xchg
xor
in
push
shrb
inc
loope
jb
scas
sbb
mov
add
daa
lock
sahf
push
fwait
jae
ljmp
xchg
mov
or
push
jp
insb
mov
imul
or
out
cmpsl
jbe
xlat
stos
pop
imul
cmp
mov
lcall
mov
aas
in
frstor
jbe
and
cmp
fwait
gs
add
out
out
and
sbb
mov
dec
mov
fldt
cmp
dec
fimull
jne
sub
lods
call
sub
jecxz
fiaddl
add
sub
out
mov
mov
pop
out
xchg
pop
lcall
jg
mov
inc
sar
mov
fbld
cmp
cmp
mov
cmpb
aad
mov
imul
daa
insb
jae
sbb
jns
xchg
jecxz
and
andl
js
pop
pop
and
jp
frstor
mov
xor
adc
mov
fsubl
inc
cmpsb
or
mov
ljmp
cwtl
in
lods
cli
sub
pop
ret
lahf
insl
std
cmp
xchg
bound
loop
aaa
jl
mov
in
les
adc
xor
pop
pop
add
rclb
lds
mov
cltd
sub
push
outsb
xchg
out
sar
dec
sti
call
xchg
stc
call
sbb
push
push
in
out
addr16
xor
js
outsl
jb
out
cltd
test
pop
fcoml
in
xchg
xchg
dec
fsubr
mov
cmpxchg8b
pop
ds
mov
jp
pushf
or
repz
mov
add
mov
xchg
insl
and
mov
add
aas
cmp
imul
mov
mov
out
pushf
jp
xchg
jo
mov
mov
or
mov
inc
pop
mov
out
outsb
out
xchg
iret
dec
sbb
scas
js
cli
xlat
xor
inc
add
inc
in
rcll
adc
cltd
and
mov
xchg
out
pop
xor
xor
movsbl
jbe
add
rolb
popa
in
repnz
add
jle
icebp
cmp
push
frstor
shll
or
gs
add
cld
push
lods
mov
push
jg
mov
pop
in
test
nop
daa
mov
sub
leave
addr16
dec
mov
stos
sub
mov
mov
imul
and
xor
aas
or
repnz
sbb
std
fadds
aam
js
mov
mov
add
cmp
jns
hlt
daa
push
pop
lcall
sbb
scas
or
in
add
cmp
fdivrl
cwtl
std
test
out
aam
push
decb
fcoml
push
push
rolb
icebp
test
imul
loop
gs
hlt
pop
incb
mov
inc
cmp
or
add
cmp
jo
and
jo
negb
cs
addb
pop
inc
xchg
pop
movsb
mov
cmp
icebp
repz
and
xchg
in
xor
addr16
cmovp
adcb
lods
jmp
cmp
push
rcrb
mov
popf
cmp
cwtl
push
lds
das
sub
xchg
dec
xchg
mov
pop
inc
xor
xchg
add
jp
pushl
gs
push
loopne
flds
and
popf
in
mov
xor
imul
xor
xor
or
xor
insb
insb
cmp
movsl
and
cmp
jo
mov
imul
pop
pop
jl
pop
jmp
pop
jp
test
in
and
lods
test
inc
mov
stos
push
jl
int3
and
mov
cmp
sub
mov
call
xor
cmp
adc
inc
into
mov
pop
cmc
test
and
cltd
or
inc
cmp
xor
jnp
js
pop
and
orl
xor
mov
jecxz
add
or
fwait
repnz
out
dec
les
cmp
mov
pop
into
or
inc
mov
lds
mov
mov
cmp
jle
xchg
mov
call
ret
or
mov
cmp
xchg
xor
in
jnp
cmp
in
loop
dec
pushl
bound
mov
inc
nop
add
dec
cli
xchg
and
fistps
fists
imul
cmp
scas
mov
inc
das
pop
ljmp
ror
mov
es
notb
sbb
daa
repnz
sbb
test
cmpsl
outsb
loopne
rcr
xchg
push
mov
add
fdivrs
push
dec
cli
dec
push
pop
adc
sbb
lret
or
add
sub
pop
jecxz
dec
lock
inc
js
shll
out
popf
or
cld
and
hlt
clc
or
adc
mov
mov
lods
sub
fcmove
out
add
pop
push
mov
aad
out
call
and
jle
sub
and
xor
add
aam
cmp
mov
or
jmp
xor
add
cld
mov
sub
jo
stos
add
or
push
jb
or
rol
add
mov
jmp
fadd
pusha
mov
call
stc
jg
das
dec
out
mov
popa
xchg
adc
pusha
fists
jle
xchg
dec
mov
dec
sub
pop
push
jp
cmp
incl
insb
mov
fxch
and
inc
xchg
je
sub
int
mov
cmpsb
lcall
add
movsl
outsb
nop
dec
xor
jns
mov
mov
shrl
mov
mov
js
dec
adc
pop
into
or
out
in
mov
lret
mov
sbb
sbb
jge
inc
push
loope
adc
xchg
dec
ret
push
rcl
jecxz
gs
sbb
fs
push
cmp
jno
and
cvtpi2ps
jnp
daa
clc
jbe
scas
add
lret
imul
mov
idivl
into
aad
xor
or
imul
arpl
aaa
in
inc
fistpll
sub
shll
cld
jg
pop
xchg
enter
movb
push
clc
fucomp
mov
xchg
rorl
sahf
mov
fidivs
out
sbb
out
cmp
sbb
movsl
pop
dec
sub
add
mov
inc
xchg
xor
pushf
push
pop
mov
sar
pushf
mull
insb
pop
jb
inc
xchg
jae
iret
popf
cli
rclb
int3
notb
inc
pop
lds
fcomp
adc
inc
add
lahf
mov
pushl
shrl
mov
cld
mov
insb
mov
xchg
test
rclb
push
xlat
popa
fsubrl
outsl
mov
add
mov
cmp
xor
mov
repnz
daa
int
ret
and
jecxz
cmpsb
in
inc
sbb
mov
inc
outsb
push
pop
cmp
das
mov
aad
add
cmp
imul
xchg
mov
rorl
shlb
insb
sub
imul
popf
dec
sbb
xchg
movsb
mov
in
clc
sub
scas
insb
sub
add
push
push
cmp
lods
mov
cmp
ror
fcmovne
push
test
mov
adc
or
xchg
push
and
ds
movsl
xchg
pop
add
dec
adc
sbb
aad
lods
inc
adc
or
insb
cli
and
inc
test
jno
lods
enter
adc
cli
leave
push
sbb
mov
mov
jo
cmp
and
jg
xor
inc
jb
stos
mov
sbb
clc
mov
xor
icebp
xor
mov
mov
xor
stos
in
add
shlb
cmpsl
inc
repnz
mov
pop
icebp
inc
or
xlat
dec
jle
pop
add
cli
sub
mov
repz
flds
sbb
pop
push
mov
sbb
dec
int
xchg
xor
dec
xchg
or
sub
mov
repz
outsl
lods
pushl
jnp
stc
popf
fldt
push
jae
enter
xor
ljmp
push
xchg
aam
iret
add
mov
insb
daa
or
negb
pop
and
gs
xchg
mov
push
adc
adcl
outsb
shl
lret
pusha
sbb
adc
add
lock
add
add
pushf
add
jg
insb
imul
leave
or
subl
and
or
lds
jnp
sub
mov
inc
push
cltd
xor
pushf
mov
in
xor
mov
xchg
clc
jo
xlat
xor
mov
pop
pop
pop
cmp
fwait
hlt
hlt
jns
jne
mov
xchg
aaa
int3
hlt
lea
xchg
mov
jns
adc
add
or
aam
sbb
stos
or
pop
push
loop
xorb
mov
mov
jbe
cmp
add
scas
xlat
mov
sub
mov
cmpsb
ficoml
xlat
test
fmulp
icebp
cmp
stos
jmp
adc
pop
leave
dec
in
dec
push
xlat
das
push
xchg
lret
xchg
std
push
jns
out
push
loope
clc
add
fxtract
repz
xor
fcompl
movsl
leave
or
mov
cmp
sub
sar
push
stc
sbb
test
insl
jmp
jno
pusha
cli
xor
sbb
ret
pushf
insl
xchg
and
fcompl
cmp
jbe
push
or
sbb
adcb
ret
fstpl
std
in
repnz
mov
mov
addr16
push
mov
mov
test
xor
add
loopne
sub
lock
ret
push
aaa
and
shlb
negl
insb
dec
push
sbb
and
daa
negl
loopne
movaps
sbb
lret
mov
pop
jge
pushf
mov
cmc
xchg
imul
dec
xor
cli
daa
lcall
je
mov
mov
xchg
imul
and
push
sub
pop
es
push
add
pop
and
leave
js
xchg
mov
mov
ret
loopne
in
insl
sub
mov
int
nop
test
test
mov
cwtl
in
cltd
dec
int
jg
lcall
add
mov
frstpm(287
fucom
jbe
mov
in
pushf
pop
push
movsb
and
or
xchg
addl
aas
test
in
sarl
sub
sbb
dec
mov
cmp
dec
push
int3
push
shrb
sbb
test
mov
aas
stos
int3
fld
push
and
shrl
cmp
mov
xchg
inc
mov
sti
inc
and
test
sbb
je
ror
loopne
mov
imul
adc
int
gs
les
rcll
mov
pusha
xor
push
sbb
arpl
pop
jmp
lods
lods
adc
jle
jmp
popa
sub
mov
fistpll
in
je
and
mov
push
ljmp
mov
xchg
cmp
sub
dec
test
push
add
bound
das
popa
ds
inc
cmp
and
roll
cmpsb
or
mov
sbb
movsl
imul
adc
aaa
mov
pop
das
dec
dec
mov
mov
lds
sbb
dec
lret
mov
loop
cmp
xchg
loopne
xchg
loope
movsl
cmpsl
nop
dec
push
push
or
pusha
pop
mov
xor
sbb
and
cld
lds
shll
scas
or
imul
and
jge
popa
dec
out
mov
orl
and
cmp
iret
dec
scas
out
pop
mov
jns
mov
data16
and
dec
mov
mov
dec
test
scas
outsl
shll
lcall
lahf
inc
xor
mov
std
sub
rcr
lret
andb
lahf
lds
inc
cmpb
xchg
cmp
lods
enter
sbb
or
xchg
or
adc
stos
xchg
and
xorl
fldl
mov
or
out
ss
aas
je
jae
data16
pop
in
jns
ljmp
ljmp
mov
aas
sbb
cwtl
jnp
mov
adc
sbb
xchg
dec
lret
icebp
push
jp
sub
sub
push
movsb
jecxz
pop
imul
outsl
in
aad
in
mov
jno
push
pop
push
pop
aad
inc
scas
mov
jo
mov
fs
loopne
bound
add
cmp
or
jl
leave
test
xor
push
sbb
movsb
mov
inc
daa
or
ret
loopne
loope
push
mov
and
pop
pop
lahf
subb
int
sbb
andb
popf
testb
cmp
mov
ret
or
adc
pop
sbb
cli
jno
mov
inc
mov
dec
fistpl
pop
movsb
mov
hlt
out
push
and
pop
mov
hlt
and
inc
call
enter
sub
xchg
loop
xchg
lahf
lods
test
mov
outsl
bnd
clc
add
cmpsb
xchg
adc
pop
ficomps
mov
adc
and
adc
aaa
cmp
mov
sbb
mov
mov
ja
sub
inc
mov
jne
ss
jo
mov
mov
push
lods
aad
jo
xchg
push
dec
iret
or
cmp
sbb
enter
jmp
enter
scas
cmp
insl
inc
testl
mov
cmp
inc
xchg
mov
ljmp
xor
or
xor
cmpsl
jo
mov
cmp
movsbl
movhlps
nop
or
insb
leave
adc
pop
adc
js
add
gs
push
icebp
je
out
push
ss
lahf
mov
sti
pop
and
ja
mov
inc
cmpsb
cli
adc
pop
pusha
divl
jnp
imul
cmpsb
push
dec
mov
or
ljmp
rorl
dec
add
jne
add
ds
push
movsb
clc
pop
pusha
cmc
enter
sub
ret
out
mov
cmp
sub
movb
orl
mov
les
push
mov
push
push
jnp
xchg
sub
push
mov
outsb
mov
inc
mov
in
and
mov
inc
rcr
out
leave
aad
sti
sub
dec
or
add
cmpsl
shlb
mov
out
stos
or
mov
push
push
call
aam
lret
pop
push
in
das
lods
inc
pop
das
cwtl
mov
ret
and
pop
inc
adc
stc
adc
mov
gs
js
jg
sub
imul
jecxz
xchg
es
mov
inc
add
scas
or
les
stos
stos
sub
std
sbb
lret
roll
ficoml
in
in
ljmp
cmpsb
out
pop
js
jmp
shll
int
jno
into
push
scas
std
aam
sub
mov
or
into
nop
jp
imul
sbb
xchg
js
aas
xor
sti
and
ljmp
or
mov
mov
and
add
pop
xlat
pushf
in
push
int3
push
das
xchg
mov
repz
sub
mov
out
popa
cmp
inc
push
out
pop
test
andl
jne
or
adc
in
xchg
std
outsl
xchg
pop
stos
mov
push
sub
dec
xor
loope
mov
push
add
in
leave
sbb
mov
xchg
mov
push
divl
les
mov
mov
push
or
pop
ficomps
repnz
cmp
aas
lock
lea
ljmp
sbb
gs
mov
push
inc
sti
push
inc
xor
xchg
inc
or
xlat
shlb
jb
sub
push
frstor
test
jp
pusha
ret
scas
popf
cmpsl
iret
mov
jp
dec
dec
clc
mov
sub
jne
mov
in
btl
in
push
mov
lret
mov
push
inc
sbb
or
in
mov
adc
popf
sbb
imul
hlt
roll
sub
cli
mov
xlat
pop
das
push
sbb
aaa
sub
mov
mov
push
movsb
cmpsl
out
daa
xor
daa
cmp
mov
aas
mov
sbb
fbld
sub
insl
xchg
pop
cltd
mov
pop
xor
shll
rolb
std
lock
jne
cmp
cltd
add
push
dec
and
xchg
movsl
jl
shll
inc
or
leave
and
outsl
inc
xchg
mov
ret
pop
out
dec
sbb
mov
mov
push
je
scas
inc
add
sub
in
add
cmp
mov
push
jb
in
add
iret
push
int3
test
push
add
or
sbb
outsb
mov
xor
jbe
in
pop
sbb
inc
insl
mov
fistps
scas
scas
xor
ds
mov
push
std
push
and
int
pop
jl
xchg
jle
mov
out
jno
lahf
jg
fstpt
xchg
push
push
rep
fpatan
je
mov
pop
mov
ret
sub
ficomps
imul
push
fwait
repnz
sbb
cmp
pop
push
repz
in
sub
sbb
cmp
lods
sbb
sti
lods
sub
jns
bound
xchg
lods
jns
xor
imul
rcll
imul
cwtl
lret
loope
xorl
sub
push
popf
nop
je
aam
add
lea
dec
cmp
lahf
stc
add
mov
sub
inc
imul
xchg
popf
mov
and
fs
mov
xchg
fidivs
ret
jle
idivb
jge
lret
add
lret
jl
shl
call
push
rcr
lods
xchg
cmpsb
mov
pushf
mov
loop
movsb
rorl
push
fldz
dec
inc
sub
shrl
and
loop
lods
cmp
loope
es
dec
cli
adc
lea
or
pop
mov
ja
jp
lret
sahf
test
pop
subb
push
sub
dec
adc
shr
lcall
or
dec
jle
dec
cmp
into
push
ret
fistps
dec
icebp
xchg
loop
outsl
adc
jb
cmpb
bound
lahf
push
mov
xchg
sub
or
jo
mov
cwtl
int3
ret
dec
mov
ss
adc
loope
jb
mov
pop
xchg
cmp
or
jnp
ljmp
std
jns
test
adc
pop
sti
out
pop
out
add
xor
js
xchg
out
cmpsb
je
or
bound
shlb
shl
add
mov
mov
adc
test
enter
sbbb
scas
adc
mov
push
cld
or
in
rorb
xchg
shlb
lods
jecxz
fstps
add
scas
das
fildll
jb
xor
dec
cmp
repz
cmovno
call
cli
xchg
mov
scas
xor
test
xchg
adc
push
mov
push
insb
jne
or
leave
shrl
dec
stos
imul
ret
mov
mov
and
clc
or
xchg
in
movsl
leave
or
sub
dec
addr16
sahf
ds
cld
cmp
sbb
xor
xchg
xlat
dec
jo
out
repnz
mov
jno
lea
in
out
and
push
push
ljmp
out
repz
mov
out
outsl
dec
dec
stos
or
jmp
inc
jne
mov
mov
js
das
sbb
subb
insl
loopne
cmp
pop
jnp
hlt
cwtl
or
ret
cmp
push
addr16
jae
mov
lret
icebp
incb
es
xchg
sub
test
mov
scas
mov
sbb
es
sbb
cmp
jne
leave
les
cld
jecxz
lock
jns
stc
xchg
add
mov
jl
dec
xchg
mov
sbb
test
mov
sub
arpl
add
in
cmp
xor
leave
push
add
ja
stos
pop
jb
sbb
push
pop
xlat
push
mov
fucom
sahf
adc
jno
push
repz
clc
and
daa
mov
push
jbe
push
xchg
sub
lahf
testl
test
imul
shrb
les
jmp
mov
xor
adcb
lahf
push
sbb
push
add
add
mov
adc
imul
dec
adc
or
pop
add
mov
xchg
imul
or
mov
inc
test
xor
movsb
enter
jmp
pop
iret
jmp
xor
or
lcall
jg
ja
jae
lods
and
adc
jbe
insl
cli
adc
pusha
ret
lods
sub
cmp
sti
mov
xchg
xor
pop
movntq
and
dec
or
cmpsl
dec
inc
cmp
sub
fdivrl
or
add
orl
into
xchg
dec
insl
loop
mov
aas
jmp
mov
mov
enter
sarl
dec
mov
pop
push
dec
jg
pop
jl
inc
std
xchg
les
xchg
stos
stos
daa
inc
test
pop
js
popf
aad
aas
clc
adc
js
jge
cmp
xor
cld
pop
ss
add
popf
cmpsl
mov
xor
hlt
daa
scas
xchg
and
bound
or
shlb
movsl
mov
out
xor
movsb
pop
jns
mov
andb
fsts
dec
imul
jne
sub
iret
sarl
and
mov
test
push
jo
insl
mov
dec
pop
mov
add
mov
cmp
orl
int
mov
in
add
stos
xor
lret
ss
xchg
inc
testb
out
mov
inc
xchg
sub
lahf
je
or
mov
cmp
add
pop
sbb
into
cli
pushl
xchg
or
mov
dec
testb
push
mov
nop
add
xor
outsb
or
aad
repnz
mov
loopne
jbe
mov
mov
mov
enter
cltd
idivl
push
shrb
fcomi
rcl
cmpsb
xor
sahf
nop
pop
stos
outsb
mov
rclb
mov
xchg
pop
addl
mov
stc
mov
pushf
pop
imul
frstor
dec
in
sti
mov
hlt
lret
jns
dec
mov
xor
pop
rcrb
mov
out
and
bound
sub
fs
inc
hlt
dec
jmp
pop
or
gs
lods
push
xchg
call
loope
pop
dec
cmc
ds
sbb
mov
cmc
mov
push
dec
jno
cmp
mov
popf
inc
add
nop
out
ret
sti
daa
scas
push
mov
movsl
leave
mov
pop
imul
movsb
fstpt
in
dec
fwait
scas
dec
xchg
jecxz
cs
and
sub
jb
push
sub
jecxz
in
add
sub
out
bound
inc
lahf
mov
fidivrs
adc
or
popa
add
add
test
loop
adc
mov
xor
popl
daa
pop
fiaddl
fisttpll
dec
mov
test
js
inc
call
outsb
movsl
in
stc
fists
jecxz
imul
out
sbb
add
inc
adc
and
outsl
in
loope
cmp
filds
jle
popf
mov
add
scas
not
adc
mov
xchg
dec
jecxz
movsl
pop
push
sbb
push
insb
jae
adc
xchg
inc
out
inc
inc
inc
mov
jbe
or
fstpt
jno
dec
xor
scas
xor
cmp
mov
sbb
add
sbb
jle
rclb
frstor
push
push
push
jle
ss
and
fldl
out
xchg
sbb
xchg
fidivs
lret
add
scas
and
fdivrs
dec
repnz
out
fidivs
movsb
jnp
cmp
push
clc
dec
pop
hlt
sub
mov
aas
xchg
jle
xor
xor
jmp
add
dec
push
repz
sub
aas
jnp
adc
stc
adc
jmp
jno
and
movsb
push
mov
mov
adc
fsubs
sub
inc
inc
pop
bound
arpl
aaa
lds
lods
mov
std
xchg
ja
push
add
xchg
mov
icebp
xchg
dec
in
mov
pop
xchg
ret
xor
ja
lds
push
jo
loop
hlt
repz
aaa
sarl
jne
test
mov
push
cwtl
dec
mull
jecxz
shrl
add
mov
shrl
pop
mov
flds
adc
pop
jb
add
pushf
add
sbb
in
je
dec
mov
out
add
dec
sub
mov
stc
fdivrs
push
sti
fiadds
jae
mov
mov
dec
sub
repz
jmp
aas
shll
imulb
fistps
mov
cmp
jecxz
inc
or
xchg
xor
out
sub
xor
lock
shlb
lcall
cmp
adc
cmp
ja
or
inc
mov
movsl
test
js
sub
rol
pop
push
aam
sub
jecxz
pop
dec
test
idivb
xor
lock
fsubrs
cmp
or
mov
bound
xchg
xor
inc
and
push
xchg
pop
fsubr
mov
test
icebp
int3
jbe
pop
js
and
test
sub
cmp
data16
or
lea
bnd
jae
sbb
or
lock
cmpsl
xorb
dec
dec
push
inc
int3
and
sbb
loope
push
push
and
imul
in
fidivl
pop
cmp
les
pop
or
mov
mov
fdiv
inc
in
dec
dec
mov
xor
lret
inc
rcl
pop
inc
mov
mov
dec
pop
in
imul
mov
jge
mov
sahf
xchg
mov
ss
push
into
add
xor
ljmp
push
push
and
xlat
dec
pop
jo
lods
or
daa
mov
insl
pop
mov
dec
adc
clc
cld
sti
cwtl
sbb
lods
push
addr16
dec
outsb
or
mov
lret
and
push
mov
in
add
push
or
jbe
scas
int3
in
push
int
aam
push
jecxz
mov
mov
hlt
fistl
sbb
daa
xchg
lea
ret
adc
mov
sub
scas
movsl
jl
mov
cmp
adc
sbb
sbb
and
jbe
mov
cmp
pop
push
jae
jns
push
push
arpl
cwtl
das
xor
decb
push
mov
jae
cmp
nop
inc
push
aas
xchg
enter
jno
stos
adc
daa
outsl
out
cmp
scas
cld
cld
push
xchg
pop
out
mov
sub
pop
insl
icebp
faddl
test
cmc
inc
cmpl
pop
mov
movsb
mov
jae
xchg
sbb
inc
lea
sub
mov
icebp
leave
mov
dec
into
leave
pop
mov
movsb
xor
push
inc
sahf
jno
mov
sbb
pop
lcall
pop
mov
adc
jo
mov
sbb
inc
fldl
aam
sbb
iret
ja
or
mov
xchg
cs
scas
lods
not
jne
xchg
add
mov
gs
mov
pop
add
orl
das
inc
js
cmp
outsb
and
lret
lock
or
movswl
jg
and
xchg
into
rcrl
clc
sub
ja
lock
mov
xor
sbb
mov
pop
xchg
loop
and
adc
jbe
push
std
xor
outsb
stc
mov
dec
popa
push
iret
shrb
insl
std
test
and
repnz
mov
cmp
inc
aaa
push
sti
ficoms
cmpsb
sbb
xor
mov
movups
test
sti
fstpt
inc
and
mov
hlt
cmp
stos
imul
inc
data16
pop
and
scas
xor
mov
gs
mov
pop
dec
pusha
rolb
lods
out
and
lcall
sbb
xor
fs
push
stos
dec
inc
out
insl
mov
cmpw
jnp
fs
test
insb
xor
jae
scas
mov
or
jg
sbb
mov
push
sub
orl
int
pop
jecxz
enter
push
cld
mov
stc
cmp
sbb
jae
cltd
adc
loope
mov
lods
loopne
inc
cld
add
mov
mov
imul
dec
jb
jnp
pushf
loopne
aas
cltd
icebp
mov
gs
jle
inc
push
xchg
insl
andl
mov
hlt
push
pusha
popa
xchg
add
pusha
inc
sub
ja
pop
lea
or
jo
in
test
es
movsl
pop
fistpll
mov
pop
mov
or
jmp
mov
mov
cltd
cs
or
or
xchg
sti
mov
adc
popa
mov
mov
int3
mov
ret
ret
pushf
sbb
dec
inc
popf
mov
mov
imul
push
repnz
jae
daa
xchg
dec
push
mov
test
mov
mull
fisttps
sbb
jb
and
add
and
jae
xchg
popf
cli
loop
andl
jle
xor
cmpsl
ja
mov
push
sub
movsl
movsb
jge
sub
das
leave
add
push
std
in
adc
mov
push
cmp
insb
push
and
cmpsb
push
into
lret
in
mov
push
xchg
es
insb
and
cmc
sub
mov
lds
out
xchg
sub
mov
pop
jno
movsl
repnz
add
int
testl
test
fisttps
stc
push
je
sti
sub
dec
pop
out
jecxz
mov
add
mov
sbb
sbb
push
cmpl
bound
cld
fstpt
lods
lret
cltd
icebp
and
sub
bound
stos
ds
test
mov
inc
cmp
dec
pop
push
jl
mov
push
scas
in
jne
call
and
add
fs
push
xchg
sub
dec
lahf
xor
cmpl
jl
add
pop
insl
subb
daa
stc
and
xchg
fistps
iret
fsts
icebp
arpl
inc
iret
out
out
add
jne
inc
repz
push
rclb
cs
or
jp
addr16
loop
pushf
jb
fildll
inc
js
stc
lds
mov
jne
fistl
or
pop
dec
and
xor
push
ret
fsubp
aas
ror
sub
stos
inc
sti
jl
test
xchg
lahf
mov
mov
insl
frstor
addr16
jnp
fyl2xp1
cwtl
aad
out
jecxz
repnz
es
push
addr16
mov
jle
inc
ja
mov
rorb
dec
fistps
out
cli
int3
in
xchg
mov
dec
or
xchg
pop
push
call
mov
int3
pusha
cmpsb
xor
dec
je
movl
or
out
loop
stos
int3
sbb
jmp
cmp
cmp
xorb
mov
mov
cmpsl
push
xchg
dec
sbb
xchg
mov
mov
jo
leave
out
mov
movsl
and
int3
rcll
cmp
jo
cmp
push
inc
fcomps
fistpl
inc
cld
mov
inc
jg
pushf
sub
inc
lret
lds
aas
aaa
inc
mov
lahf
push
ret
das
mov
ret
pop
dec
repnz
and
push
inc
push
cmp
inc
lahf
loope
call
sahf
xchg
mov
jnp
cwtl
and
xorb
std
frstor
pop
inc
out
add
push
mov
mov
mov
adc
xlat
adc
in
jecxz
ljmp
xor
lea
ds
mov
out
imul
add
mov
and
xchg
stc
push
sub
push
lock
insl
lret
movsb
aad
jmp
pop
data16
cmc
addr16
outsl
je
xor
add
jnp
or
imulb
mov
ret
bound
push
ljmp
popf
cmpb
push
pop
ss
addr16
popa
pop
jbe
sbb
inc
mov
shl
pop
inc
jle
push
or
repz
pop
and
aaa
xor
mov
xchg
cmpl
xor
sti
ja
movsl
adc
mov
adc
popaw
or
dec
mov
fs
ret
imul
fisubrs
les
pop
andb
cld
lea
xchg
jbe
imul
fwait
pop
add
icebp
mov
xor
pop
push
out
add
test
mov
fnstcw
loopne
push
jmp
xchg
xchg
mov
mov
mov
mov
mov
fldt
shl
cli
bound
add
inc
xchg
pop
test
nop
hlt
cwtl
and
mov
cmpb
cmp
and
cli
rcrl
push
lea
xchg
cmpsl
or
fwait
mov
sbbb
jnp
pop
movsl
adc
je
test
enter
imulb
shlb
or
mov
jno
jmp
mov
in
cld
inc
in
jp
mov
pop
call
shlb
ret
push
clc
mov
jp
insl
shrl
push
jb
icebp
fisubl
rcll
enter
rclb
aam
pop
dec
fs
sbb
mov
push
flds
mov
jo
jecxz
jbe
xchg
clc
sbb
rcrb
or
lcall
cmp
mov
hlt
and
push
mov
andb
ljmp
jp
push
jmp
nop
push
dec
fidivrs
iret
into
xchg
dec
rolb
inc
or
mov
in
imul
jge
sti
hlt
in
mov
aam
ljmp
mov
dec
jp
pop
ficomps
mov
mov
mov
xchg
pop
or
push
mov
pop
aaa
mov
cmp
mov
ja
lahf
push
sbb
jecxz
and
inc
mov
sub
and
xlat
pusha
pop
push
inc
outsb
jno
pop
pop
inc
jb
aas
or
lahf
arpl
sahf
addr16
insb
mov
vpmacsswd
nop
xchg
dec
sub
arpl
push
ret
mov
xor
repz
sbb
mov
mov
adc
sub
or
hlt
adc
sbb
fucomip
les
sub
stos
sbb
nop
stos
mov
rorb
stos
fprem
or
fmull
or
mov
scas
push
inc
adc
sbbl
ja
pop
lcall
dec
cld
cwtl
or
push
ss
xchg
sub
test
lods
xchg
mov
cltd
sbb
outsl
pop
dec
je
lcall
push
lea
mov
fwait
movb
lcall
incl
xor
mov
in
test
rcrl
pop
pop
add
jo
xor
sbb
int3
pop
stc
popf
movsb
ljmp
arpl
ja
xor
lods
adc
lods
push
cmp
xchg
addr16
jb
xor
int
mov
pop
enter
faddl
pop
test
jp
test
scas
sub
cmp
jb
ret
and
mov
mov
cmp
out
pop
push
pop
subb
sbb
inc
sbb
inc
loope
mov
lds
hlt
mov
icebp
xchg
push
gs
out
push
leave
rcl
addl
mov
cwtl
xor
lcall
add
adc
jmp
and
pop
repnz
iret
mov
push
out
out
pop
nop
test
out
push
fimuls
nop
push
fwait
push
xor
fwait
and
lret
std
pusha
pop
jmp
mov
sub
sbb
addr16
push
outsb
es
ljmp
loop
inc
and
lahf
sti
cmpsb
lahf
jnp
prefetchnta
cwtl
jno
inc
sub
aas
or
add
push
and
add
push
sub
xor
dec
subb
testb
push
clc
loop
push
paddb
pop
add
pop
pop
xchg
mov
fdivs
inc
and
lds
pop
mov
int
mov
iret
mov
insb
adc
iret
cmp
shrl
imul
gs
mov
lret
movl
and
lds
pop
xor
sahf
jecxz
xchg
dec
in
in
test
inc
hlt
xchg
or
and
dec
mov
sub
jnp
imul
ljmp
loopne
xchg
scas
fadds
enter
xor
in
sahf
xor
push
dec
push
xchg
out
sbb
fstpl
iret
mov
ja
xchg
and
cmp
faddp
into
and
cmpsb
xlat
loope
dec
aad
iret
les
add
xchg
loopne
or
lret
daa
pushl
jb
sub
jne
jle
lret
xor
sbb
incb
test
imul
sbb
pop
hlt
fbstp
shll
push
incb
add
daa
fwait
lcall
dec
cmpsl
sahf
push
inc
scas
adc
das
adc
push
jnp
sub
cmp
call
stos
insb
jmp
lock
loopne
mov
loop
out
in
out
cmp
mov
dec
and
mov
jo
fbld
or
js
adc
imul
add
stc
andb
std
outsl
leave
je
lds
fsubl
mov
mov
push
out
negl
jle
pop
lods
mov
mov
jbe
cmp
mov
lcall
and
stos
sahf
cmpsb
add
pop
mov
test
test
pop
in
xchg
in
popf
xor
scas
inc
pop
jnp
xchg
sub
lahf
popf
adc
adc
rcll
mov
mov
lea
or
mov
iret
jp
fs
clc
psubw
jne
mov
xchg
jp
fwait
jne
leave
gs
fisubrs
add
push
inc
mov
pop
pop
icebp
out
xchg
push
je
dec
xlat
mov
test
fisubrl
pop
or
test
pop
shlb
test
pop
xlat
or
sbb
dec
imul
xchg
test
mov
movsl
out
adc
popa
add
bts
lahf
call
fnstcw
sub
sar
out
es
iret
lock
sbbb
popf
sub
mov
mov
push
pop
inc
stos
in
push
pop
pop
add
mov
mov
je
xchg
xchg
or
add
int3
fists
sahf
in
ja
pushf
mov
mov
dec
xor
shlb
push
add
pop
es
cmp
test
jns
push
sbb
dec
inc
inc
test
mov
aam
inc
pop
xchg
dec
shl
mov
sbb
or
stc
sbb
add
lds
cmp
int
adc
jb
jns
or
jne
loopne
into
iret
jae
pop
aaa
push
push
movsb
iret
push
and
repz
xor
sarl
mov
int
popa
cmp
ds
xchg
fdivl
fwait
cmp
sbb
addr16
or
sub
cwtl
xchg
inc
sbb
push
dec
xchg
repnz
mov
cs
inc
mov
dec
dec
sbb
cmp
cmpsb
mov
fsubp
push
mov
stos
sbb
cmp
inc
int
pop
aaa
pop
mov
sbb
mov
pop
mov
pop
push
push
push
dec
xor
insl
xor
inc
xchg
cld
dec
shll
out
mov
mov
fdiv
pop
bound
and
push
jmp
repz
sbb
mov
ljmp
cmc
ljmp
and
cmpsb
xor
mov
and
mov
add
inc
ds
add
js
pop
dec
ss
push
outsl
jecxz
sub
daa
jo
mov
adc
adc
cld
into
mov
mov
sbb
sub
bound
test
xor
aaa
mov
popf
pop
test
pop
int3
imul
mov
and
adc
mov
push
cmovle
lea
sub
rcl
push
fsts
mov
push
xchg
cmpsb
aas
cli
repnz
xchg
cmp
sbb
sbb
daa
push
outsl
aaa
push
sbb
push
add
cmp
out
mov
mov
ja
cwtl
jns
add
pop
mov
aad
aad
mov
mov
and
fdivrs
jae
and
xor
sbbl
clc
sub
lods
int3
cltd
imul
fwait
xchg
cmp
fs
lret
aam
fcomps
xchg
bound
mov
mov
xchg
sahf
call
and
dec
or
xchg
xchg
jns
enter
or
ret
dec
movsb
test
iret
lahf
cli
loope
cmp
notb
jecxz
test
xchg
jne
into
or
cmp
adc
ret
popl
call
push
jb
mov
mov
inc
arpl
lahf
leave
mov
incl
popa
into
mov
push
ret
repz
arpl
inc
outsl
int
enter
fs
or
mov
subb
shr
les
stc
subb
inc
or
scas
jo
outsb
shrb
jns
mov
stc
pop
mov
inc
orl
insb
xor
pop
or
ror
or
in
pop
subb
fdivs
mov
add
adc
int
pop
iret
xchg
xor
add
lret
jns
jge
fdivr
adc
out
jns
push
lea
add
add
pop
movsl
leave
fstps
pop
mov
adc
jne
push
out
dec
out
in
lods
rcrb
aaa
popa
int
cs
mov
inc
jmp
pop
ret
xchg
sbb
movb
and
xchg
out
repz
addl
xchg
dec
fxch
mov
inc
or
cld
pop
arpl
push
das
scas
jge
push
push
ret
jmp
in
push
cwtl
push
pop
and
into
rcll
jge
scas
pop
cwtl
dec
push
xor
fistl
mov
out
ffreep
and
mov
lret
inc
incl
fistl
popf
fwait
xchg
dec
jo
xchg
cmp
mov
data16
push
cmpsb
sbb
pop
sub
push
and
out
add
mov
stos
mov
jne
xchg
ret
repnz
push
insb
xor
cld
add
mov
dec
je
mov
dec
push
mov
aaa
cmp
sbb
jno
movsl
push
push
push
popa
add
xor
cmpb
mov
cmp
mov
in
icebp
adc
cmpsl
fwait
out
jp
pop
fldcw
test
add
lods
pusha
call
push
mov
pop
push
iret
int
adc
fsubs
mov
push
imul
call
xchg
hlt
movsl
mov
push
push
jnp
jb
outsl
hlt
xor
sti
lods
add
cltd
popf
loop
ja
out
loopne
push
scas
ja
mov
mov
imul
mov
mov
in
jo
imul
movsl
push
mov
scas
repz
mov
sbb
push
mov
dec
aad
rorl
mov
arpl
out
insb
cmpsb
pop
fisubrl
movsl
mov
sub
push
sarl
xchg
ljmp
stc
xor
pop
mov
outsl
cmpsl
imulb
mov
mov
push
xorl
ret
js
pop
inc
leave
sub
int
pop
mov
out
leave
fidivrl
or
mov
xor
scas
jp
aas
sub
xlat
enter
jo
pop
cmp
or
data16
repz
jnp
push
repnz
outsl
shl
ficoml
lret
pop
mov
ret
jmp
adc
mov
push
sahf
mov
pop
xor
jnp
daa
xchg
mov
flds
push
repz
xchg
inc
or
xchg
mov
jmp
ds
jb
jmp
orb
ss
jecxz
jnp
and
sahf
scas
fs
nop
stos
push
mov
mov
outsl
push
mov
mov
lcall
shlb
xor
inc
jmp
cmp
ja
cmpsl
xchg
filds
adc
into
fisubrl
pusha
inc
sbb
imul
mov
test
jo
mov
xchg
jns,pn
sahf
into
lods
adc
in
adc
jno
imul
mov
loope
movsl
aam
mov
inc
scas
bound
dec
lret
pop
xor
pop
outsb
repnz
out
jbe
in
in
adc
push
mov
outsb
addl
arpl
ret
psllq
mov
sahf
jnp
adc
push
push
sub
mov
movl
sbb
pop
add
dec
add
and
lret
or
sbb
fwait
bound
aad
cmp
or
mov
and
lahf
sarl
repz
cli
outsl
das
pop
xchg
xchg
sarb
inc
xor
cmpsb
insl
mov
pop
dec
int3
test
insb
cmpsl
mov
pop
xor
rcr
mov
ljmp
jns
dec
pop
jle
addr16
clc
cmpsb
or
movsb
or
fimuls
mov
mov
into
dec
jo
cmp
fiaddl
and
or
and
inc
pusha
inc
orb
aam
aad
jb
jne
mov
stos
inc
cmp
jecxz
and
aad
lcall
mov
cs
pop
and
mov
fildll
push
lods
addb
or
mov
in
pop
cmp
dec
in
sub
int3
sub
arpl
rol
pop
aaa
sbb
jnp
test
sub
lret
or
dec
lret
dec
pushf
pop
fidivrl
cmp
into
lret
mov
cmp
push
dec
mov
adc
adc
jnp
xchg
daa
stos
aam
js
cmpsl
jle
lea
ficoml
mov
sarb
mov
or
pop
pop
rclb
scas
fs
fldt
mov
cmp
pop
inc
adc
mov
sub
test
rcl
repnz
out
mov
push
mov
inc
icebp
push
inc
into
arpl
push
out
add
std
pop
negb
push
int
sub
lock
popf
mov
sarb
out
clc
les
jle
test
cmpb
sbb
sahf
cmp
fs
ljmp
sbb
jno
add
push
pop
pop
pop
cmp
mov
sub
dec
test
sbb
and
cmc
jmp
cmc
adc
imul
sub
pop
fwait
mov
mov
dec
ja
addr16
xor
jb
in
sti
and
push
lds
sbb
push
xor
jmp
lret
fmuls
xor
and
xlat
das
roll
negb
test
call
mov
and
data16
push
loop
sbb
jns
xchg
pop
cli
mov
jns
data16
outsl
fidivs
outsb
mov
cwtl
aam
or
sar
and
mov
and
popf
mov
cltd
addl
ljmp
jle
mov
mov
fnstcw
movsb
imul
adc
lods
lahf
cmp
sbb
push
lods
imul
int
test
and
addl
pop
or
dec
or
cmpb
in
push
fs
cmp
shl
popf
pushl
out
out
lods
jae
push
adc
push
mov
cmp
idivl
jne
jns
orb
insl
inc
push
mov
in
in
rorl
inc
aad
stc
or
dec
loope
xlat
jmp
push
js
lea
enter
mov
inc
cmc
mov
mov
scas
pop
jmp
in
or
fs
sub
mov
pop
add
popl
pop
outsb
inc
lods
mov
lea
xchg
cmp
incb
fnsave
jbe
jmp
jbe
xchg
push
popf
push
inc
nop
test
xchg
xchg
insl
clc
ror
nop
dec
testb
pushf
inc
jp
daa
ljmp
jle
jmp
jb
cmp
pop
sarl
jae
scas
adc
pop
adc
push
out
inc
js
js
lock
mov
nop
mov
mov
sub
sbb
push
and
insl
or
push
dec
xor
sbb
mov
or
jbe
rorb
push
sub
pop
dec
cmc
mov
pop
cltd
and
jnp
push
pop
mov
ret
push
push
ret
imul
in
or
ret
rcrl
icebp
mov
adc
cltd
icebp
daa
push
pop
outsb
lock
iret
add
and
cmp
add
jb
pop
mov
dec
ret
pop
pop
idivl
lret
ret
jb
ret
push
mov
pop
mov
add
imul
mov
adc
or
cmp
mov
ljmp
scas
test
jl
pop
mov
adc
adc
ss
adc
inc
mov
mov
xor
mov
int
shll
pop
popa
dec
test
dec
add
lahf
out
dec
add
in
daa
fldl
push
mov
sub
jb
or
aad
hlt
push
dec
xchg
mov
adc
jb
sub
and
fidivl
sbb
lcall
pop
pusha
popa
xchg
mov
mov
jle
jo
mov
mull
pop
push
fisubrl
sahf
push
pop
mov
mov
cmp
into
sbb
fbstp
dec
out
int3
add
push
movsl
and
mov
jne
inc
jnp
test
xchg
sti
imul
ja
fs
test
in
gs
xor
sbb
cmpsb
repnz
xchg
adc
shrl
mov
cmp
sub
mov
and
andb
sbb
adc
loop
scas
add
xchg
sbb
push
ljmp
push
mov
stos
popf
mov
xchg
jb
dec
adc
imul
pop
lea
sub
and
xor
loopne
and
stos
ss
push
pop
int3
jle
movsl
xlat
mov
pop
or
xchg
iret
mov
jo
leave
int3
inc
cmp
xor
mov
rcrl
shll
push
hlt
loope
pop
dec
and
mov
dec
aaa
sbb
cmp
xlat
das
jmp
pusha
xchg
jae
rorb
stc
popa
movsl
push
jecxz
inc
jnp
add
pop
cltd
les
nop
test
flds
ret
imulb
or
shlb
push
inc
dec
fldl
ficomps
mov
enter
sti
pusha
int
adc
repz
pop
call
jnp
hlt
xorb
movsl
aam
mov
bound
xchg
mov
inc
sub
mov
sbb
cli
rorb
xchg
xchg
adc
push
mov
xchg
loope
hlt
icebp
cmp
pusha
dec
clc
lds
push
movb
add
int3
sahf
sbb
mov
inc
jl
or
mov
ljmp
test
in
dec
out
cmpsl
int3
das
sbb
scas
gs
adc
jl
pop
out
push
pushw
std
push
jg
lret
sub
dec
and
imul
mov
mov
cmp
jae
mov
je
jge
ds
sub
aam
lcall
add
push
pop
out
je
jae
movsb
xor
fwait
jnp
adc
lea
add
pop
dec
orps
cmpsb
test
jo
adc
cltd
pushf
push
test
addr16
jae
aam
aas
fmull
pop
xchg
and
clc
outsl
repz
inc
mov
inc
pop
mov
push
jmp
out
xchg
mov
xchg
std
aam
or
add
push
mov
lcall
orl
gs
xchg
mov
andl
push
pop
idiv
push
mov
jno
loopne
add
and
pop
ret
lret
icebp
test
inc
sbb
scas
mov
mov
movsb
lods
insb
jne
scas
popa
push
xchg
es
pop
push
xor
mov
push
ret
push
fnstcw
cmc
or
repz
into
add
xchg
mov
inc
cli
lcall
add
pop
mov
lods
sbb
add
pushf
pop
rcll
and
fcmovnbe
leave
xchg
pop
mov
insl
jge
and
mov
push
sbb
mov
lods
add
inc
orl
shll
lea
test
adc
push
out
andb
xchg
cmp
cli
in
lds
add
mov
orl
mov
in
ret
shl
xchg
mov
fwait
xlat
mov
mov
stc
mov
xlat
push
lods
in
mov
pop
jge
inc
sbb
mov
mov
adc
enter
xchg
dec
in
lahf
add
inc
dec
lods
mov
test
dec
repnz
pop
out
es
sti
testl
and
xchg
std
mov
repnz
ds
sbb
adc
or
adc
shlb
xchg
ljmp
xchg
pop
rcr
jmp
ljmp
push
fnstsw
rorl
sub
jae
jl
je
dec
mov
int
mov
push
hlt
ja
add
or
adc
sbb
push
loop
lcall
cwtl
sbb
ficoml
jnp
mov
sahf
insl
sarb
bound
mov
stos
mov
push
outsl
xchg
or
or
inc
aas
stos
imul
imul
pusha
and
add
loope
mov
push
cmpsb
mov
in
shll
adc
testb
imul
aam
ss
fimuls
cmpsb
xor
mov
int
xor
jnp
dec
push
cli
inc
sub
in
cmp
inc
sub
aad
mov
mov
adc
and
mov
loope
out
pop
leave
movsl
pop
outsb
jnp
sbbl
outsb
bound
dec
outsl
out
das
arpl
pop
push
ss
jmp
add
cmp
loop
sub
cs
in
dec
push
loopne
lds
dec
outsb
or
add
jae
jmp
cmp
or
fadd
out
and
sub
cli
xlat
cmp
xor
mov
out
scas
fmul
mov
cmp
les
xor
mov
sbb
cmp
scas
fisubrs
jne
test
sbbb
jmp
scas
movsb
jnp
jmp
mov
jmp
in
sub
mov
xor
idivb
add
push
xchg
out
and
cmp
and
add
ss
fs
pop
push
leave
sbb
shlb
ljmp
cmp
ljmp
test
mov
mov
mov
pop
pop
push
mov
cmp
push
inc
imul
sbb
pop
out
sbb
mov
push
lahf
cmc
dec
and
ret
and
scas
cmc
jmp
daa
lods
lods
sbb
in
aas
loope
test
fldenv
cmpsb
ja
pop
sbb
push
int3
ds
pop
xlat
ljmp
jb
jmp
inc
cmp
dec
sub
enter
push
lahf
inc
negb
pushf
sahf
mov
cmpsl
insb
xorl
stos
ret
lods
dec
adc
add
das
test
outsb
fdivp
push
mov
dec
mull
jg
lcall
test
add
add
fsubrs
and
xchg
repnz
outsb
adc
cltd
inc
mov
test
cmp
dec
insb
push
out
xchg
push
cmc
dec
dec
shll
lea
xchg
scas
addb
and
pop
sub
cwtl
or
add
lds
push
repnz
sahf
lcall
cmp
jl
movsl
jo
fcmovnbe
ds
sbb
jge
adc
dec
xchg
mov
repz
mov
push
lcall
fs
add
sbb
lret
test
mov
in
push
test
mov
push
xor
and
adc
add
and
mov
pop
data16
out
std
pop
jne
jno
aaa
incl
xor
sub
sub
pop
jge
stc
jne
out
insl
inc
jl
pop
inc
ljmp
xor
fsubs
push
in
ret
fwait
cld
mov
sahf
pop
paddq
shll
jbe
sub
mov
or
mov
addb
or
push
out
scas
cmp
cwtl
loop
mov
mov
lret
lret
aaa
cli
add
fstpl
mov
sbb
les
push
sub
jae
jb
test
fistl
cwtl
aam
dec
loop
add
outsb
arpl
pop
dec
cwtl
push
jge
and
mov
push
add
imul
sbb
ds
fisubl
mov
mov
sub
hlt
mov
or
fwait
in
mov
mov
sub
xchg
or
pop
jae
rsqrtps
jae
mov
inc
daa
dec
arpl
add
call
add
dec
ljmp
or
and
rclb
in
out
aaa
movsb
and
mov
mov
mov
out
psadbw
xlat
lret
pop
jno
int
ret
jp,pt
sbb
hlt
inc
bound
in
in
testl
and
aas
or
and
cwtl
xchg
aas
add
push
in
and
cmpsb
mov
pushf
mov
fnstsw
jae
pop
call
lcall
fcmovnbe
pop
add
push
test
mov
notb
jp
loop
fcmovnu
aad
sub
mulb
dec
jb
lahf
lds
sbb
das
pop
popa
cmp
xchg
pop
mov
push
imul
cmp
adc
cs
loopne
dec
rorb
das
in
data16
and
cld
mov
xor
push
push
ljmp
push
ds
cmp
mov
cmp
cmc
add
pop
cmpl
sbb
xchg
inc
inc
ja
imul
stos
adc
sub
jb
mov
outsl
xchg
mov
in
inc
xchg
and
mov
int3
lock
lcall
sbb
in
jne
push
sbb
sub
xor
out
lods
pop
mov
xchg
mov
jmp
xor
js
lcall
aam
pop
cmpsb
adc
int3
pop
jge
btcl
or
ljmp
cmp
mov
insl
push
mov
or
xchg
jne
sub
les
stc
mov
jecxz
int
xlat
fnstcw
jle
add
ljmp
and
hlt
bound
adc
fwait
sbb
sub
adc
fdivs
mov
cmc
cmp
mov
icebp
mov
mov
and
mov
sbb
pop
ret
aaa
repnz
inc
je
xor
push
popf
mov
push
pushf
push
mov
stos
mov
push
xor
movsb
out
xchg
das
sub
or
sbb
sub
hlt
fcmovnb
lock
cmp
int3
das
inc
jae
mov
out
xor
sbb
in
xor
dec
repnz
imul
mov
jne
in
lods
dec
and
fldenv
adc
aas
cltd
arpl
lock
clc
lods
sahf
adc
into
mov
sub
push
negb
sub
scas
stc
ja
add
pop
ja
inc
aad
jo
inc
or
xchg
inc
xor
dec
xchg
xor
xchg
lods
xor
or
enter
mov
out
dec
mov
test
add
shrl
ret
aad
push
add
cmp
push
ds
xor
lds
cmp
pop
mov
jle
lods
fcompl
push
rcrb
scas
cmpsl
bound
test
sbb
add
js
dec
fisttpll
sub
mov
les
cmp
clc
cvtps2pd
dec
cltd
inc
and
enter
repnz
addr16
push
repz
jle
mov
push
lds
push
adc
mov
xchg
jnp
daa
out
gs
lods
pop
add
faddl
rcl
gs
lret
sbb
mov
iret
jb
sbb
shl
jle
lds
jb
or
push
repz
and
rcrl
fcmovnbe
jg
repz
fisubs
xchg
scas
addr16
ljmp
adc
jb
inc
jp
fistpl
xchg
daa
repnz
pop
lret
das
cmp
mov
add
adc
cmc
movsl
lods
pop
xor
or
dec
and
pop
pop
out
lods
mov
fwait
xor
xchg
mov
sbb
mov
dec
or
notb
add
xchg
mov
push
xchg
lahf
and
mov
ljmp
dec
dec
mov
sub
std
ljmp
stos
add
out
clc
push
sbb
xor
push
dec
or
out
shrb
jecxz
or
jp
inc
jnp
addb
xor
pop
loop
push
insb
dec
outsb
xchg
cmc
subb
adc
in
dec
push
cmp
push
dec
dec
mov
cmpsb
imul
push
ljmp
lods
inc
xchg
gs
mov
je
xor
lcall
pop
mov
imul
or
mov
pop
cmpsb
sbb
test
add
mov
adc
psrld
cmp
fs
sub
orl
sbb
int
cs
sub
add
xor
cmp
mov
jb
das
xchg
data16
adcl
push
inc
sbb
sub
subl
or
add
cmp
jg
mov
cwtl
push
and
pop
jp
imul
stc
jp
jmp
test
adc
pusha
mov
mov
int3
fisubrs
test
pop
xchg
mov
add
add
fadd
jp
adcl
test
mov
idivl
test
sti
xchg
mov
loop
mov
lcall
clc
jb
movsl
xor
add
lods
or
jg
xor
adc
out
push
dec
in
mov
repz
xchg
std
arpl
cmp
xchg
loop
push
jae
sbb
push
push
dec
test
out
cli
imul
adc
jae
addr16
lcall
adc
mov
stos
push
call
cmpl
dec
rcrb
cmp
inc
adc
cmp
fs
jp
inc
repz
lock
mov
int3
popf
nop
mov
jno
adc
lods
popa
jp
arpl
jne
dec
push
ja
test
ss
sub
xchg
xor
adc
mov
or
es
cwtl
add
xor
jge
jecxz
jle
jne
fldt
mov
push
inc
hlt
lret
arpl
jle
insb
fisubrl
mov
cmp
jb
in
ret
cmpsl
ret
pop
lret
cmpsb
aas
or
jb
mov
enter
fildll
nop
das
adc
inc
fcoml
fcompl
dec
mov
mov
cmp
in
dec
iret
xchg
mov
lock
out
push
pop
cmpsl
sti
into
or
enter
or
mov
aam
xor
dec
lret
xor
cwtl
mov
push
fistl
das
xchg
mov
cs
loopne
or
mov
push
lea
loop
pop
dec
pop
push
shll
pop
sbb
mov
cmpsb
xor
cmp
inc
bound
and
insb
cmpsb
fidivrs
les
xor
jge
mov
pop
stos
inc
aam
mov
in
stos
mov
subb
ljmp
lods
mov
enter
dec
idivw
jl
imul
add
in
mov
in
add
cmpsb
dec
stc
push
push
fdivs
sarl
scas
scas
push
or
push
push
dec
sub
in
jo
pop
lea
sub
mov
sahf
cld
cmp
emms
sbb
and
xchg
movsl
sbb
iret
clc
frstor
or
mov
inc
cmp
xchg
stc
add
xchg
inc
pop
test
pop
or
xchg
sbb
push
sti
jmp
fldl
fmuls
fbld
adc
mov
movsb
clc
out
ficomps
cmp
ficoms
add
mov
jb
mov
cmp
int
and
jne
mov
das
es
into
jmp
jno
popf
jne
adc
call
cmp
iret
adc
outsb
cmp
xchg
sub
movsb
in
jle
lret
gs
inc
sub
fdivs
ljmp
negb
jno
enter
xchg
xor
stc
pop
je
aas
cwtl
mov
fs
insl
andl
or
ljmp
xchg
dec
out
sub
cli
clc
mov
xchg
sub
fsts
pop
dec
mov
adc
xor
inc
pushf
cmp
mov
pop
jmp
call
push
xchg
daa
ss
push
mov
xchg
movsb
fists
mov
cmpl
and
in
inc
sbb
add
loopne
jg
int3
ss
out
aad
xchg
pop
push
cld
data16
imul
push
xor
mov
sbb
scas
test
or
xchg
fadds
mov
adc
shl
cmp
sub
mov
push
adc
inc
mov
pop
mov
mov
or
cmc
mov
enter
cmp
and
xchg
pop
jl
rcl
pop
or
sar
cmp
mov
aad
inc
pop
mov
cmp
iret
lret
popw
mov
imul
out
rcr
ss
je
push
jge
or
into
cmc
mov
add
jmp
pop
sbb
push
cld
test
pop
aaa
jp
xor
sti
sarb
pop
lret
pop
stc
dec
or
sbb
and
pop
add
mov
pop
fldt
inc
jmp
xchg
jo
and
pop
insb
mov
insl
mov
test
int3
int
cmp
xor
xor
xchg
cmp
lods
mov
pop
lahf
sbb
sahf
fisubrl
nop
hlt
enter
mov
pop
pop
inc
daa
and
shrb
push
int
lret
aas
add
xchg
sar
cld
ljmp
lods
pop
daa
test
and
xchg
or
mov
dec
add
imul
and
inc
push
mov
es
add
je
pop
inc
orl
jne
dec
call
xchg
xchg
clc
add
pop
add
sbb
mov
out
push
in
xchg
fldt
sahf
and
lea
and
jbe
push
dec
xchg
in
push
push
repz
popa
jo
scas
into
cli
rcrb
sbb
push
gs
std
mov
inc
in
das
fwait
mov
pop
daa
subb
pop
mov
adc
or
xchg
add
test
stc
mov
rorl
mov
cs
or
cltd
in
sti
outsl
cmp
mov
dec
loopne
stos
dec
repnz
notl
daa
sbb
jno
jl
cmpl
sahf
imul
pop
pushf
fwait
rorb
sub
loop
push
jae
sub
xchg
jl
sub
out
rorl
lods
push
das
imul
ja
je
push
mov
dec
out
jmp
lret
aas
mov
xchg
and
fnstenv
arpl
je
mov
jle
aam
leave
mov
hlt
je
jns
out
les
sbbb
sub
icebp
jecxz
mov
repz
sbb
lahf
add
lcall
shrb
inc
xchg
jns
pusha
push
popa
sahf
push
mov
ret
pop
movsl
hlt
cld
nop
push
jnp
sub
jecxz
out
fwait
or
push
push
in
push
ljmp
inc
mov
ja
inc
fdivrp
cmp
imul
cli
lock
push
fiadds
or
into
scas
aaa
mov
jmp
add
pop
jge
mov
sarb
pop
mov
mov
or
rorl
fistpl
inc
cld
mov
scas
pop
movntq
dec
shrl
loope
stos
xor
push
cwtl
push
popf
mov
or
stc
das
push
insb
lods
sar
cmpsl
pop
test
add
mov
stos
ja
dec
incl
xorl
adc
lods
pop
int3
rcll
mov
add
xchg
or
jge
ficompl
inc
inc
daa
xor
xchg
adc
imull
inc
in
inc
in
xchg
loop
andb
scas
clc
push
jecxz
inc
popf
adc
cmp
movsl
jg
mov
jnp
jae
mov
mov
push
adc
cmp
xor
int
dec
xor
push
lods
pop
sti
lods
test
lds
lret
stos
test
xchg
mov
call
or
cmpsb
fdivs
pop
mov
into
or
sbb
jns
enter
shl
mov
sbb
jl
fwait
cli
xor
icebp
call
arpl
sti
mov
lock
bound
mov
scas
or
jns
icebp
dec
adc
cltd
cmpsl
mov
aam
fidivs
jg
aam
sarb
je
jge
sbb
xlat
outsl
mov
cs
out
test
push
jns
xor
push
sub
pop
pop
mov
jo
out
nop
idivb
pop
and
xchg
scas
adc
pop
dec
push
out
fildl
shrl
js
pop
jp
mov
cmc
inc
pop
xor
jb
xchg
push
dec
popf
in
movsl
subl
iret
lret
mov
pop
mov
out
cltd
mov
arpl
jl
shrb
push
sbb
fsubs
adc
std
jae
fisttpl
xor
and
cwtl
pop
mov
lcall
lahf
jo
jg
int
mov
in
xor
fs
imulb
pop
mov
xor
jg
js
cmp
inc
jno
push
cmpsb
icebp
hlt
ret
test
and
push
insl
shl
jno
xor
jbe
je
adc
mov
lcall
sbb
jns
fldt
mov
push
in
cwtl
loope
or
icebp
ret
fisubrl
and
ljmp
aam
sub
aas
pushf
hlt
jb
inc
outsl
sub
push
lds
adc
sahf
sub
pop
ss
inc
add
pop
mov
sub
push
imul
out
aam
pop
mov
push
sub
fldenv
push
mov
andl
xchg
lods
xlat
adc
bound
xchg
jae
push
or
dec
and
push
sbb
aaa
sbb
push
loop
xchg
jmp
loope
push
fsubl
push
xor
lock
add
jg
pop
sbb
dec
sub
test
jp
popf
adc
sub
xchg
jb
push
or
xchg
fistpl
ds
mov
outsl
lcall
or
xchg
and
hlt
fbld
inc
lock
jbe
jo
out
add
loopne
movsl
and
mov
push
and
mov
cmp
in
repnz
insl
cmp
jmp
daa
push
push
test
rcr
pushf
cmpl
loope
lahf
sub
ljmp
cmp
push
xlat
fnstsw
cmpsl
clc
mov
in
js
or
push
js
hlt
leave
int
xchg
stc
test
fistl
jno
dec
idivb
call
es
popf
add
sub
mov
add
xchg
jecxz
and
mov
mov
dec
outsb
hlt
sub
subb
xchg
add
sbb
negl
scas
imul
pop
je
mov
xor
lods
adc
aad
push
inc
lcall
shl
repnz
dec
xchg
aad
mov
adc
std
mov
mov
repz
mov
out
call
xor
out
int
insb
repz
out
push
xor
push
mov
xchg
leave
add
sahf
stc
pusha
frstor
stc
push
push
inc
pop
pop
jo
jbe
popf
sub
fdivr
pop
jmp
pop
pop
cmpb
xor
ret
lcall
ret
lret
mov
cwtl
push
or
jecxz
outsb
push
dec
push
fdiv
test
fstps
mov
pusha
shll
push
cmpsl
aas
les
and
es
stc
pop
repz
jo
and
or
test
mov
testl
sbb
push
jp
inc
add
dec
fbld
ret
pop
lds
jle
rcll
xor
ss
pop
ja
and
ret
mov
xchg
fdivrs
in
sub
adc
pop
jne
adc
mov
pusha
arpl
loope
sub
inc
lea
pop
or
jl
sbb
xchg
mov
mov
xchg
mov
pop
jne
cmp
sub
add
fcmovnb
arpl
jnp
xchg
stc
jle
ror
jg
mov
cwtl
jp
addr16
jmp
jmp
inc
and
in
lods
popf
in
inc
adc
xchg
push
xchg
stc
insb
stos
fcmovnbe
test
mov
or
sbb
pop
loop
sub
xorb
push
out
mov
std
or
and
and
je
jl
enter
sbb
leave
shrb
jmp
jnp
mov
cmp
or
imul
enter
xchg
jle
outsl
inc
sbb
insl
cmp
aad
dec
sahf
daa
fidivs
fsubr
ljmp
cmpsl
outsl
stos
out
adc
adc
and
jp
add
jl
mov
jge
and
mov
test
xchg
fisubs
jecxz
xlat
cmp
mov
int
jl
in
xchg
xor
cld
jne
inc
mov
or
xchg
inc
cmc
inc
jo
fisttpl
inc
stos
adc
ret
into
push
test
lahf
aas
cmpsb
cmp
sti
lds
sub
mov
mov
dec
and
lea
push
test
mov
lret
jecxz
aam
jno
stc
in
push
mov
sub
sahf
fstpl
jmp
out
adc
mov
pop
and
rorb
sbb
mov
mov
mov
pop
sub
xchg
mov
push
xchg
sbb
stos
mov
mov
mov
add
loopne
call
mov
mov
adc
pop
stc
inc
cmc
mov
push
mov
pop
add
push
inc
mov
lahf
shrl
testb
loop
arpl
cmc
sti
into
cmpsb
inc
out
mov
daa
push
xorl
or
loop
and
mov
lods
mov
pop
xor
push
or
xlat
cmp
fcoms
add
cli
add
ljmp
pop
loopne
insb
dec
pop
push
movsb
xor
int
bound
sub
cmp
mov
pop
xlat
std
xor
fwait
push
push
mov
aad
andl
push
in
addb
xor
inc
push
sbb
cmp
jns
int3
test
jecxz
or
dec
fisubs
jge
or
mov
in
sub
gs
push
and
mov
sbb
fsubl
adc
imul
push
imulb
std
mov
fdivrs
movsb
outsl
mov
push
andl
push
scas
xchg
in
cltd
adc
mov
jmp
movsl
xchg
fdivr
and
cltd
and
add
jbe
dec
shr
or
dec
pushl
int3
out
paddb
jle
or
pop
sbb
sbb
cwtl
jecxz
mov
popf
call
call
sbb
loope
xchg
aam
bound
cmpsb
xor
xchg
cld
pop
mov
fstps
lea
sub
push
mov
xadd
clc
roll
or
jo
dec
jno
or
pop
mov
loopne
jle
loop
push
jo
sbb
push
cmpsl
cmp
xor
cmp
ret
test
adc
fisttps
insl
cmpsb
xchg
rcll
pop
test
mov
xchg
sub
loopne
add
mov
cmp
enter
ret
mov
call
jnp
add
mov
adc
jno
rcr
jp
fcomps
xchg
out
cltd
cli
inc
mov
cs
adc
push
cmp
dec
lods
lods
andl
loope
aad
out
sbb
jo
ljmp
xor
in
out
movsl
xchg
dec
js
mov
stos
and
sti
popa
stc
pop
mov
rorl
scas
xor
add
xchg
aaa
es
arpl
adc
lahf
jno
roll
adc
sub
pop
rcll
adcl
mov
cmp
mov
outsl
ds
iret
jle
fnstcw
call
sub
inc
lret
mov
mov
fisttpl
stc
xchg
out
ficomps
scas
xchg
pop
subb
outsl
lahf
pushf
mov
xchg
pop
dec
dec
fists
test
or
inc
add
or
and
mov
or
stos
pusha
mov
sub
push
inc
lea
mov
mov
in
jecxz
sub
cmp
mov
je
aad
mov
cltd
aad
cmpsb
rorl
mov
or
cs
bound
imul
and
test
mov
in
jnp
inc
mov
mov
loope
stc
xor
decb
push
fnstsw
dec
jecxz
clc
das
mov
pop
jo
adc
add
mov
aaa
test
lcall
dec
cwtl
push
pop
push
mov
xor
in
inc
mov
add
cmpsl
pop
repnz
xchg
and
mov
cmc
inc
lcall
pushf
mov
frstor
sbb
fmuls
pmuludq
sub
mov
mov
inc
xor
les
xor
dec
sti
adc
inc
cwtl
fs
fidivs
inc
mov
xchg
and
mov
ret
fninit
outsl
rclb
xchg
push
imul
cmpsb
pmuludq
push
mov
adc
add
out
mov
testb
cmp
leave
dec
loope
cmp
mov
adc
jae
in
movsl
repnz
pop
jno
add
dec
lret
das
icebp
scas
xchg
mov
sub
test
adc
imull
or
icebp
pop
rolb
insb
xchg
xor
xor
push
xor
add
shrb
xor
pop
jno
xor
inc
pop
das
sarb
lret
dec
sar
add
or
jnp
adc
into
jecxz
ljmp
mov
mov
pop
out
decb
jne
arpl
sub
xchg
sbb
mov
jbe
gs
push
adc
push
push
push
cld
xchg
mov
add
int3
mov
in
in
dec
imul
mov
cmp
push
shrb
mov
leave
out
xlat
scas
enter
cli
or
shl
lods
testb
mov
sub
add
out
gs
lea
mov
jp
inc
sbb
jg
rcrl
fnsave
pop
or
insl
xor
negb
sub
sahf
incb
mov
xlat
mov
jae
xorb
jmp
xor
push
cld
sub
mov
and
insb
mov
xchg
addl
mov
adc
out
or
dec
std
sub
enter
in
inc
loop
les
clc
adc
jecxz
lea
and
rorl
nop
push
pop
fsubrl
pop
imul
lret
and
iret
mov
jno
cmpsb
arpl
mov
loop
imul
mov
pop
ret
fdivrs
ret
and
mov
dec
or
data16
adc
lds
jno
movsl
adc
inc
pusha
imul
rcrb
int
xchg
add
out
pop
je
ret
testb
push
adcb
movsb
js
jge
jno
xchg
das
cmpsb
loop
cmp
imul
add
sti
jbe
mov
test
cmp
js
pop
dec
in
cs
and
add
inc
adc
jo
mov
or
insb
divl
inc
bound
inc
xor
cli
add
fsubl
push
stc
adc
pop
movsl
iret
inc
sub
testb
pushf
jp
subb
loop
lock
mov
lock
push
adc
jge
sbb
call
push
sub
nop
cmpl
shlb
les
out
xchg
mov
inc
pop
fs
clc
dec
cmpsb
mov
out
adc
xchg
popa
jo
insl
cwtl
push
lret
mov
mov
jg
mov
jbe
dec
repnz
aam
mov
adc
imul
adc
add
orb
mov
xchg
in
xchg
shrl
jne
scas
ret
jae
in
and
xchg
cli
jbe
and
lods
xlat
pop
int3
hlt
jmp
pop
adc
and
xor
in
imul
jle
ret
je
pop
dec
mov
out
lds
pushf
jo
inc
mov
and
lahf
out
mov
mov
jns
cwtl
add
shrb
and
xor
in
das
mov
cwtl
js
push
adc
mov
loop
pop
mov
test
jns
or
out
daa
mov
sbb
pop
loope
add
bnd
pop
jnp
mov
lea
or
sbb
popf
jecxz
shrb
stc
or
out
pop
cs
mov
dec
mov
dec
loop
pusha
mul
inc
not
and
xchg
fdivs
testb
jno
nop
fnstenv
and
or
add
aas
int3
adc
ret
lods
inc
shll
popf
add
test
lret
rclb
mov
adc
std
xchg
pop
cs
jnp
or
scas
dec
push
fucom
fdivl
mov
jbe
jmp
in
add
cmp
mov
jl
dec
arpl
mov
mov
fwait
inc
cmp
lret
fnsave
mov
cli
in
imul
or
add
mov
mov
scas
sub
les
xor
mov
and
out
sbb
pop
in
jge
cmpsl
push
ja
push
ja
fistl
jmp
dec
cmp
xor
mov
and
mov
push
cmp
xor
xchg
sbb
sub
adc
push
aam
out
jmp
dec
mov
repnz
mov
and
in
ja
dec
push
jmp
ret
ret
xor
lods
stos
or
idivb
je
stc
adc
mov
arpl
pushl
test
out
out
cmp
sub
out
push
pop
imul
xor
insl
push
lea
pop
stos
aas
sub
xchg
add
push
jle
addr16
inc
pop
daa
roll
cwtl
std
aas
and
jae
dec
cmp
cmp
push
mov
push
jp
add
push
repnz
cmp
fs
adcl
push
cmp
ja
pop
jp
rcl
inc
lods
mull
cmp
xor
mov
jae
pop
pop
shll
stc
leave
add
int3
jecxz
inc
ja
dec
xor
cli
or
addr16
pop
cld
int3
push
mov
mov
jecxz
cmp
add
xor
outsb
sbb
push
outsl
cmp
repnz
dec
xchg
pop
adcb
cli
ss
enter
setg
jae
cmpsl
xor
int
mov
icebp
mov
adc
add
sbb
cmp
enter
sahf
cltd
repnz
dec
cmp
xchg
or
ss
adc
mov
movsl
mov
mov
gs
mov
push
and
les
dec
pushf
cmp
sub
push
mov
sbb
sub
call
test
or
mov
int3
hlt
test
div
or
shlb
jmp
dec
push
cmp
mov
adc
roll
mov
push
mov
fs
arpl
and
jne
mov
xchg
xor
cltd
xor
xchg
jno
stos
shrb
xchg
mov
adc
cs
shlb
pop
mov
imul
push
pop
mov
push
push
scas
in
xchg
dec
stos
insl
jne
sub
mov
shl
xor
iret
or
mov
add
mov
out
cli
out
push
cwtl
lods
test
out
cmp
and
jb
inc
outsl
xchg
jae
mov
adc
das
jmp
pushf
mov
hlt
adc
pop
nop
fucomi
xchg
cmpsb
cmp
or
adc
sub
xor
pop
dec
iret
or
mov
cmp
stos
push
pushf
cmc
pusha
mov
or
cltd
lahf
js
pop
int3
incl
jne
fldln2
loopne
stos
mov
ret
stos
xchg
pop
lock
mov
xchg
popf
jmp
and
nop
sbb
je
xor
imul
pop
dec
fldcw
pushf
or
test
lock
jo
call
or
addr16
sarb
jo
jge
dec
mov
cmp
push
in
sbb
pop
jecxz
movsl
dec
icebp
add
shlb
stc
shlb
out
mov
data16
mov
xor
adc
js
fsubs
xor
std
les
add
repnz
les
mov
jecxz
push
mov
mov
leave
fucomp
fbld
mov
mov
xchg
jne
outsb
ror
fcomip
js
mov
lahf
xchg
jl
cld
icebp
shrb
jg
add
stos
xor
sub
or
sbb
mov
lret
test
mov
pop
sub
addr16
jle
mov
xchg
js,pt
minps
or
xchg
jmp
shlb
sub
or
mov
imulb
sbb
cmp
dec
dec
xor
ds
pop
pusha
push
sbb
adc
xor
scas
dec
mov
fs
in
mov
push
out
mov
insb
out
scas
and
gs
mov
enter
and
pop
xchg
lret
jo
stos
pop
inc
sarb
iret
arpl
imul
xchg
pop
into
rcr
pop
popf
push
inc
mov
push
ds
sub
fdivl
inc
mov
lahf
cld
push
push
mov
daa
incl
loopne
xor
sub
adc
ja
xlat
pop
in
xchg
mov
mov
inc
push
and
push
inc
subb
jns
and
sub
test
out
cmp
pop
push
imul
mov
or
inc
test
insb
push
jmp
fistpl
in
mov
scas
stos
pop
stos
add
sub
cmpsl
and
out
mov
jl
fsubr
in
fisubrs
loope
push
out
fmuls
aaa
std
or
test
lods
cltd
je
push
in
cmpsl
ss
in
pushw
cli
cld
jnp
and
sub
addr16
sbb
jl
pop
inc
out
data16
push
mov
pop
add
test
movsl
scas
adc
scas
movsl
sub
fidivrl
or
lods
loopne
xor
xor
jae
pusha
pop
fwait
ja
xor
cs
pop
addr16
and
pop
xchg
sub
or
mov
data16
push
sti
jno
cmp
mov
mov
hlt
adc
jle
fisubs
movsb
test
xchg
add
into
mov
mov
xchg
aam
sub
gs
jp
inc
inc
rcr
or
push
mov
inc
sbb
sbb
lods
jecxz
movsl
in
out
lods
je
or
and
faddl
addr16
jbe
movsb
push
icebp
dec
test
mov
sbb
inc
sbb
mov
or
sub
or
and
ret
push
jnp
jno
shrl
orb
push
insb
cwtl
jmp
rcll
jge
or
stos
sbb
ret
insb
ljmp
out
es
push
mov
ret
cmp
xchg
lea
stos
mov
add
adc
jg
dec
popa
orl
jle
rcr
jmp
sub
lea
dec
jge
pop
or
loopne
ror
jecxz
add
scas
inc
jecxz
mov
mov
mov
push
out
inc
sub
xchg
mov
and
push
mov
xor
test
in
cmp
and
push
or
loop
jbe
cmc
adc
in
out
mov
inc
xchg
xchg
push
inc
nop
scas
xchg
dec
sti
imul
stc
or
or
push
mov
mov
xchg
in
jle
mov
in
lds
ja
inc
movsl
xor
out
jb
inc
in
test
cmp
pop
data16
je
aas
push
mov
aaa
js
sbb
add
stos
xchg
jae
repnz
andl
daa
js
add
xchg
adcl
push
out
and
mov
push
repnz
or
movsl
and
adc
mov
jbe
lods
dec
repnz
mov
pop
imul
loopne
and
arpl
lret
push
clc
xchg
mov
jp
sbb
cmp
jno
jnp
xchg
mov
hlt
push
jp
idiv
ret
dec
out
sbbb
mov
js
dec
lods
pop
pushl
or
into
mov
push
nop
gs
sub
clc
cwtl
mov
xlat
dec
aaa
push
adc
pop
fildl
jne
sub
aaa
push
and
mov
dec
mov
mov
jmp
fisubs
loope
icebp
push
pop
pop
push
jmp
xchg
mov
call
lock
fcoms
insl
fs
das
jl
nop
pusha
call
out
add
dec
addr16
int
jecxz
inc
lds
dec
sbb
ret
dec
pop
ljmp
xor
into
cs
and
mov
insb
jge
scas
shr
lea
orl
out
xchg
cmpsb
push
pop
adc
loope
fs
and
push
or
and
jmp
es
bound
jns
mov
movsl
mov
call
jno
addl
dec
push
sbb
xorb
insb
gs
aas
repz
fstps
mov
jnp
hlt
ljmp
pop
add
imul
mov
mov
bound
mov
inc
dec
into
leave
negl
shlb
inc
pop
inc
sub
repnz
jp
dec
and
inc
roll
jno
cmp
dec
fstpt
push
ds
pop
mov
mov
xchg
xor
xor
sbb
adc
cmpsl
push
ljmp
cmpl
add
lds
repz
xorb
sarl
test
jmp
add
jl
sbb
mov
pop
cltd
mov
into
dec
adc
out
fadds
push
out
pop
leave
cmpsl
pop
or
mov
inc
xchg
ja
lcall
mov
fbld
sbb
inc
mov
inc
int3
popa
mov
stos
cmp
mul
leave
ja
cld
imul
mov
jmp
xchg
divl
add
xor
imul
cmp
ret
lea
add
or
push
or
rcll
cmc
negb
pop
dec
inc
cmpsl
mov
sub
movsl
addb
push
sub
pushf
jae
cli
rorb
pop
inc
ret
jb
mov
cmpsb
int3
push
cli
mov
dec
loope
adc
movsl
cmp
sub
jbe
push
insl
ds
add
add
loop
lea
xchg
pop
adc
cli
xor
jmp
sarb
test
test
int
and
xchg
or
sbb
fsubrp
in
xor
pop
enter
insl
loop
dec
insl
pop
mov
push
ss
loop
rcrl
loopne
mov
cld
jg
sbb
lock
sbbb
sbb
xor
jae
push
out
mov
cmp
xor
xchg
fwait
into
jp
fs
flds
xor
sbb
xchg
and
andl
sbb
sub
addb
fptan
outsb
jnp
scas
adc
jae
fwait
nop
xchg
jl
popa
repz
push
adc
mov
dec
mov
daa
xorb
mov
call
push
dec
mov
loop
mov
xchg
imul
lock
and
cmp
jnp
outsl
aam
add
outsl
mov
adc
repz
adc
fadd
push
push
data16
adc
dec
mov
sbb
adc
sti
or
sbb
or
xchg
sbbl
inc
mov
icebp
mul
stos
leave
out
out
fwait
int3
lods
adc
cli
in
loop
cmp
pop
fnstcw
inc
add
mov
sti
fs
rorl
sub
pop
nop
in
jg
adc
xor
shll
inc
adc
sub
push
cltd
pop
adc
mov
mov
pop
adc
call
cli
in
sub
ljmp
push
mov
in
add
jg
sbb
rcrb
xchg
lcall
movsb
pop
nop
sbb
aas
mov
push
add
cld
cmpsl
mov
test
pop
test
and
ret
sub
incl
xlat
push
lea
stos
imul
xchg
and
mov
notb
sub
cmc
pusha
ja
mov
loop
sbb
mov
lds
and
mov
loopne
aas
cwtl
xchg
fsts
loop
daa
sti
push
shrb
fildl
imul
ja
jne
std
loopne
cmp
cmp
adc
xchg
inc
pusha
mov
dec
adcb
sub
xor
or
adc
adc
xchg
bound
cld
xchg
push
mov
ret
mov
mov
xchg
ror
mov
gs
add
pusha
mov
mov
test
jo
icebp
fcomp
push
lcall
mov
jmp
lret
arpl
adc
lea
out
adc
push
and
sub
lods
xchg
ret
shll
lahf
into
cmpsl
in
loop
sub
xor
in
push
insb
fcoms
pop
and
out
xchg
adc
pop
xor
ficoms
mov
aas
mov
out
cmp
mov
scas
popf
jns
mov
inc
fsubs
out
sub
sbb
and
subl
jle
imull
das
cmp
and
pop
shl
roll
sbbb
popa
mov
ret
lret
pop
icebp
push
arpl
inc
mov
stc
aam
jmp
sub
es
cmp
xchg
xor
lds
dec
inc
clc
aam
dec
cmp
movb
xchg
push
mov
inc
xchg
pop
xchg
out
call
loop
shl
mov
adc
xor
out
xchg
roll
jb
fwait
dec
mov
xchg
or
fstl
lock
std
cmp
mov
mov
ror
adc
mov
jns
xchg
sahf
clc
add
lea
xor
test
xchg
sub
jge
cmp
insb
xor
dec
sbbb
je
adc
or
mov
and
pop
mov
dec
es
inc
nop
pop
mov
add
hlt
dec
sti
pusha
ficompl
pop
mov
xorb
push
ljmp
push
call
sub
dec
sub
sub
out
dec
or
lret
cmp
mov
mov
mov
mov
mov
add
hlt
daa
fildll
ds
test
cmp
xor
lahf
in
mov
scas
lods
movsl
xchg
push
jb
aam
jg
das
push
adc
pop
dec
jb
or
lcall
test
adc
and
and
or
push
ss
and
loopne
stc
pop
add
mov
mov
pushf
mov
pop
fbstp
js
push
std
sti
mov
ja
mov
shlb
insl
fldt
jmp
and
push
add
ror
jo
pop
pop
inc
pop
leave
loopne
je
jp
and
stos
push
mov
push
lods
ds
xor
cmpsb
mov
cmp
sbbb
dec
pop
out
add
lea
cltd
mov
mov
push
fisttpll
sbb
shll
inc
push
stos
lock
xchg
insb
jns
pop
inc
dec
push
mov
lock
add
or
adcb
pop
and
insb
inc
pop
lock
pop
pushf
xchg
insl
xlat
pop
jno
insb
add
insb
jmp
push
in
std
or
popa
sbb
stos
lahf
xlat
stos
push
cmp
mov
enter
push
sahf
ret
dec
adc
mov
mov
add
pushf
fldcw
pop
pop
sti
or
lods
inc
add
rolb
push
sbb
test
out
pop
sti
mov
frstpm(287
push
pushf
insb
dec
mov
lods
push
cmc
das
ds
jl
adc
add
mov
lret
jb
jne
xchg
jecxz
outsb
test
sub
mov
jnp
fmuls
cmp
sbb
mov
insl
add
lea
inc
lahf
lds
pop
and
mov
ds
jp
int3
arpl
repnz
jle
sub
xor
sub
add
shlb
cmc
loope
mov
xchg
call
and
mov
fwait
or
hlt
inc
pop
mov
cltd
push
outsb
pushf
adc
pop
xchg
adc
jne
jae
cli
das
cmp
jecxz
ds
jo
movaps
dec
mov
push
outsb
jnp
jo
out
sub
xchg
sub
ja
cmp
inc
jnp
fcoms
into
inc
ret
mov
mov
imul
dec
xor
inc
add
lret
jg
jb
movsb
popa
dec
pushf
and
pop
and
fsubs
clc
or
adc
sarl
leave
stos
xchg
inc
push
adcb
jmp
pusha
push
orb
loop
stos
lea
add
inc
popa
scas
dec
stc
rclb
inc
cmpsw
jg
or
lret
les
outsb
cli
dec
inc
xor
fwait
mov
es
clc
lds
lahf
rclb
mov
jo
loopne
add
push
shll
mov
in
mov
dec
adc
pop
movsb
pop
xor
pushf
xorl
loop
jmp
cmpsl
or
sbb
and
shlb
push
fistpl
in
adc
and
pop
pop
testl
jle
stos
xchg
pop
push
xchg
lret
xlat
pop
add
divl
mov
inc
dec
into
adcl
lret
mov
ret
popf
std
pushl
test
xchg
ja
in
fidivrs
adc
mov
add
mov
adc
sarl
cmp
cmovbe
cmp
dec
sbb
ds
xchg
cmp
sub
xchg
jg
sbb
les
xor
jns
addr16
fstp
or
or
mov
dec
into
mov
jmp
pop
mov
idiv
js
subl
add
add
mov
repz
arpl
inc
cmp
and
pop
aaa
add
loope
mov
repnz
push
fwait
ljmp
pop
sbb
inc
pop
repnz
add
mov
push
stos
mov
add
movl
les
pushf
or
xor
sti
imul
mov
dec
test
movsb
lock
jno
lret
sbb
xchg
pop
inc
ret
mov
inc
ret
xor
in
inc
out
mov
mov
cmp
stos
pop
fldenv
rcrl
mov
insb
push
and
jmp
mov
cld
loope
jo
jae
outsl
pop
dec
adc
mov
into
test
lea
arpl
in
dec
in
in
nop
mov
or
mov
cmp
inc
test
pop
mov
stos
aam
xor
cld
and
push
repz
jmp
mov
jae
adc
aam
adc
pop
inc
fists
pop
je
push
enter
sti
xchg
push
sub
cmp
inc
scas
adc
mov
inc
and
mov
mov
mov
in
xor
cwtl
push
or
inc
ljmp
clc
ds
rorl
and
sbb
xor
insl
hlt
movsb
rolb
mov
das
iret
xchg
sbb
subb
jno
das
bound
jg
adc
xor
jno,pt
inc
cmp
add
imul
sbb
syscall
cmp
push
outsb
jle
inc
popa
imul
push
cmp
stc
icebp
pop
pop
mov
in
mov
rcl
pop
movsl
xchg
loop
push
arpl
int
rcrb
pop
xor
out
jecxz
test
sbb
xchg
pushf
mov
jg
dec
inc
je
mov
sub
jb
pop
lods
mov
inc
or
adc
sbbl
mov
pop
cmp
clc
icebp
jbe
ljmp
insb
push
sub
movups
out
outsl
sub
xchg
idivl
push
inc
pop
pop
stc
adc
int
sub
sbb
popa
sarl
mov
lds
jbe
dec
xor
sub
subb
pop
and
push
ljmp
movsb
pushf
or
scas
cs
out
mov
push
jmp
shr
cmp
fsubs
push
adc
les
adc
inc
xchg
dec
imul
and
mov
repnz
lcall
mov
popa
fldcw
imul
xlat
arpl
jmp
pop
shlb
sub
sub
loopne
stos
ds
jmp
jg
xchg
jae
cmp
inc
sub
ret
xor
xor
cmp
xchg
bound
loop
arpl
das
xor
dec
out
and
aas
mov
addr16
andb
icebp
out
push
cld
je
std
mov
inc
cld
mov
xor
jae
push
iret
ret
dec
fcoml
loope
jge
mov
cmp
addr16
je
imul
addr16
rorl
push
js
test
adc
arpl
movsl
sbb
repz
cmpsb
clc
push
push
or
dec
sbb
add
dec
aas
xchg
gs
cmc
pusha
out
repnz
lcall
cmc
nop
fildll
loopne
and
jnp
ja
out
jl
xchg
outsl
adc
jmp
int
mov
adc
mov
and
pop
jae
sbbl
dec
inc
inc
adc
mov
lret
cmp
sub
sbb
faddp
xchg
dec
or
add
cmpsb
enter
ds
mov
push
popa
lret
cmpsl
loopne
push
movb
and
pusha
jns
dec
mov
cmp
pop
jl
in
lds
jl
ds
push
cmpsl
mov
inc
out
je
sbb
cld
test
xchg
lret
jbe
imul
inc
jne
es
or
fsubrl
test
or
sub
xor
or
rorb
mov
dec
adc
mulb
std
inc
add
cmp
sti
push
sarb
pop
mov
mov
inc
push
mov
repz
inc
pop
leave
repnz
mov
cmp
and
pusha
mov
into
and
pop
js
out
scas
inc
in
repnz
jl
addl
add
cmpsb
cmp
leave
mov
clc
mov
ret
inc
xchg
dec
dec
lock
stos
fildl
pusha
repnz
icebp
sub
insb
or
pop
cld
je
mov
sub
sbb
cmpsb
cmc
ss
dec
add
cltd
icebp
adc
push
mov
js
mov
add
or
sbb
fwait
jg
cmp
dec
repnz
add
xor
sbb
xchg
xrelease
xor
mov
jle
dec
test
paddw
stos
cmpsl
jmp
mov
out
icebp
push
ljmp
test
negl
les
mov
mov
mov
cmpsl
or
and
jle
enter
add
adc
movsl
movl
cmp
scas
jb
mov
push
mov
adc
dec
xor
fidivl
lret
push
mov
test
out
or
mov
loope
or
lods
hlt
add
inc
outsb
mov
mov
js
jb
dec
aas
cs
lea
cmp
push
stos
jb
in
xchg
mov
aad
cs
rdtsc
movsl
cmp
sbb
pushf
int3
daa
imul
inc
nop
test
adc
aaa
enter
pop
daa
xchg
add
inc
jbe
hlt
push
cmpsb
icebp
insb
mov
into
adc
leave
push
les
or
pop
sbb
fwait
mov
xor
in
hlt
add
add
lcall
cmp
push
enter
shl
or
test
pop
std
call
xchg
adc
jb
ja
in
popf
cmp
in
ret
push
sbb
push
cmpb
mov
dec
std
jmp
inc
or
cmpsb
rcrl
jae
jmp
or
out
cmp
out
call
cmp
and
push
push
inc
adc
fs
jns
sub
out
cwtl
push
xor
fimuls
fdivrl
call
lock
in
inc
cli
xor
leave
dec
push
shlb
dec
pushf
add
mov
add
lret
jecxz
inc
and
ret
repnz
mov
xchg
jo
rol
sub
mov
mull
xchg
lock
shlb
or
xor
fs
jg
add
cltd
ror
push
es
xor
inc
fldenv
insb
shr
cmp
mov
pusha
sbb
lods
dec
xchg
jbe
out
in
jnp
lods
andb
fwait
repz
int3
popf
xorb
inc
out
xor
movsl
mov
push
addb
add
fwait
dec
jae
ds
jge
mov
pop
into
push
jle
xor
rep
in
and
rolb
push
or
or
push
pop
dec
and
xor
lcall
xor
fwait
mulb
xchg
xchg
orb
divl
jle
push
fsub
jo
jo
mov
push
lock
loopne
mov
cmp
out
dec
test
dec
cmp
movups
jbe
cmp
mov
xchg
or
sub
ljmp
idivl
add
scas
adc
cmc
push
rcrb
pop
test
add
loope
sbb
inc
imul
out
push
sbb
popf
nop
subl
leave
std
jae
mov
mov
outsl
mov
push
out
neg
loope
dec
mov
xchg
and
js
sub
movsl
sub
or
sbb
pop
in
mov
loopne
faddl
lret
aam
or
fstpt
cld
les
push
cmovb
fsubrs
jg
jae
dec
out
and
cltd
jecxz
sbb
xlat
jae
and
xchg
xor
mov
lds
mov
push
out
rorl
dec
daa
js
pusha
pop
lcall
xchg
ret
xchg
lods
mov
cmp
xchg
mov
repnz
pop
push
fidivrl
pop
jnp
lret
test
int
das
mov
sbbl
push
sub
mov
mov
xor
cmp
in
enter
adc
loop
test
cld
outsb
push
pop
nop
push
mov
mov
cmp
xchg
and
xchg
pop
lods
mov
repz
inc
push
xor
jge
mov
cli
mov
sub
mov
push
sar
arpl
popa
out
pushf
fnstcw
lock
sub
fdivr
sahf
popf
jg
mov
and
rorl
cmp
hlt
cmpb
jno
mov
test
inc
lahf
sarb
imul
jae
cltd
ret
insl
xor
std
cld
mov
lahf
leave
lds
or
bound
sub
int3
cmp
push
rclb
testb
pop
repnz
cmp
cmc
outsl
pop
pop
pop
mov
aad
fyl2xp1
fadds
jle
push
or
mov
sbb
inc
insl
das
aad
fbld
sbbl
inc
add
dec
xchg
xor
sub
lock
sbb
rclb
push
sbb
js
loope
cli
mov
mov
mov
loope
sub
dec
add
js
sbb
adc
aam
xchg
imul
push
adc
dec
fucomp
mov
dec
or
push
xchg
or
scas
jns
icebp
dec
sar
lcall
adc
lods
mov
cwtl
out
lods
test
dec
inc
push
lret
addb
sub
lahf
out
adc
jno
mov
popa
out
cmp
stos
push
rcl
adc
or
int3
mov
jmp
scas
mov
pop
jmp
xor
inc
jl
xor
out
aam
nop
cmp
dec
mov
cmp
sub
fnsave
mov
jmp
jo
fistl
cli
mov
in
incl
out
mov
or
mov
rcll
mov
push
push
cwtl
dec
clc
sub
movsl
sti
adc
add
clc
orl
or
cmp
inc
rolb
pop
push
mov
les
repnz
dec
sub
arpl
es
add
mov
sarb
adc
test
pushf
jno
loopne
in
ljmp
int
push
inc
dec
negb
call
pop
je
sub
add
pop
ja
xlat
repnz
and
cltd
mov
inc
pop
xchg
ret
jbe
fidivrl
test
bound
ljmp
fidivrs
mov
fnstcw
adc
aaa
xor
push
cwtl
ret
nop
adc
mov
or
pop
mov
adc
fldt
xchg
clc
sti
testl
fildl
xor
rolb
mov
gs
fs
pushf
push
cmpl
xor
pusha
or
cmc
mov
in
aad
repnz
sar
mov
stc
mov
cmp
imul
push
lods
in
icebp
in
outsl
adc
adc
clc
dec
add
inc
ss
cmc
mov
sub
out
sub
xchg
mov
cmc
movsb
cs
push
ljmp
xchg
mov
push
jle
fmulp
psubusb
xor
push
mov
adc
dec
mov
fsubrs
popf
jae
adc
sarl
cmpb
addl
fs
aaa
or
mov
mov
or
jo
xlat
scas
sub
out
lret
fiaddl
cs
iret
add
and
and
out
push
shrb
aaa
or
outsb
mov
lods
mov
push
test
pop
jmp
nop
jns
jnp
cmp
sub
add
int
les
push
and
sub
fists
xor
jp
xor
sub
cltd
int
insb
cmp
das
sbb
repz
mov
sbb
xchg
std
mov
lret
enter
mov
repz
sti
xor
adc
loopne
imul
movl
imul
ja
sub
leave
mov
pusha
inc
add
icebp
dec
cld
dec
add
shl
inc
ret
pop
push
jbe
decb
rcl
jno
aaa
push
add
mov
bound
popf
mov
add
pusha
or
mov
repnz
insb
pop
scas
rcll
fcoml
jne
lea
pop
addr16
xchg
dec
adc
xor
mov
cs
mov
and
orb
out
or
lret
fcoml
stos
jmp
xchg
fiaddl
xchg
aas
push
push
adc
ljmp
mov
mov
inc
mov
push
or
ja
push
mov
lea
js
stos
dec
pusha
dec
add
push
scas
mov
xor
fdivs
push
pop
sub
or
dec
mov
push
and
lods
push
pop
cmpl
cmp
test
xchg
int
outsb
insb
jne
hlt
adc
dec
insl
fwait
sub
sbbb
movsw
adc
jbe
cltd
pop
jnp
add
cmp
out
sub
mov
push
inc
mov
jns
xor
mov
mov
cmc
loop
mov
inc
pusha
ficoml
ljmp
adc
sti
test
jbe
push
pusha
out
sub
loopne
sub
fnstcw
pop
and
mov
pop
and
fsubp
cmp
rcll
dec
pop
outsl
rcl
push
push
movsl
jg
pop
xchg
add
sub
cmpsb
in
add
mov
xchg
bound
sbb
loope
push
mov
cmp
inc
jl
add
add
push
xchg
shl
mov
jo
and
out
pop
frndint
in
scas
jbe
loop
dec
pop
push
test
mov
jg
shlb
pop
ljmp
xlat
sbb
movsb
les
xor
in
or
and
outsb
call
mov
push
and
sbb
mov
sbbb
je
rcr
in
negl
push
push
mov
adc
loop
testl
lock
sub
lds
je
jl
shrl
in
add
repnz
rolb
aam
fdivl
lea
add
xlat
es
mov
outsb
mov
outsl
mov
dec
mov
imul
pop
jbe
push
js
jns
cmp
jl
push
sahf
out
bound
xor
adc
jl
test
adc
cmp
or
xor
subb
out
mov
adc
or
iret
xchg
mov
leave
xor
xchg
mov
adc
xor
push
mov
lds
imul
arpl
mov
lret
popa
mov
out
lahf
les
out
out
into
jns
add
out
sub
mov
je
push
inc
cwtl
cmp
dec
sub
addr16
addr16
add
dec
pushf
cmp
imul
jl
orl
push
mov
fldcw
in
stc
push
fwait
pop
pop
psubq
pop
sub
mov
insl
in
xchg
mov
flds
in
int
clc
jns
adc
out
lret
and
ret
cmp
pop
add
add
jl
mov
mov
and
jno
in
mov
insl
mov
xor
jmp
dec
shrl
mov
push
cmc
cmp
push
push
enter
inc
mov
inc
inc
insb
stc
ss
rclb
jg
ljmp
js
and
sub
out
push
in
inc
add
jae
gs
xor
in
lahf
aad
push
jae
popa
xchg
push
mov
jae
mov
jns
add
mov
dec
loopne
dec
dec
xor
push
inc
inc
xor
sub
push
iret
mov
frstor
cs
clc
xchg
imul
test
jle
dec
xchg
inc
cli
jne
incl
inc
and
add
cs
jg
and
in
xor
pop
imul
movsb
and
decl
or
adc
flds
scas
mov
test
mov
push
mov
mov
adc
pop
leave
xchg
insb
out
and
inc
mov
dec
inc
sbb
mov
fcomps
adc
sbb
ret
jnp
push
xlat
repz
sub
imul
lock
cmp
add
pmuludq
sub
push
and
repz
adc
push
adc
sbb
and
sbb
test
xor
adc
inc
and
or
mov
loop
push
repnz
call
sbb
in
xchg
xchg
cmp
out
push
xchg
push
xchg
outsb
bound
mov
pop
mov
ss
inc
insl
xor
xor
mov
cmp
mov
lcall
jl
xchg
jmp
lahf
scas
mov
movsb
sahf
add
rcl
fcomip
xchg
cmpsl
lcall
cmp
cmp
xorl
cmp
mov
test
xor
jmp
adc
outsb
out
icebp
stc
inc
xchg
mov
dec
xor
in
and
ljmp
insb
mov
je
rclb
mov
inc
testl
fdivl
pop
sub
fstps
outsb
test
nop
lret
sbb
clc
mov
fucomip
arpl
aad
out
mov
mov
arpl
jne
push
mov
cwtl
daa
outsb
dec
movsl
cwtl
das
sub
jle
sbb
inc
xchg
cmp
je
out
movsb
mov
push
rclb
loop
push
adc
mov
sub
fdivrs
push
xchg
inc
and
mov
push
cmp
enter
jns
mov
ret
adc
lcall
xor
scas
cld
xor
lret
mov
lahf
cmp
fwait
cmp
nop
out
xor
xchg
ret
push
fwait
add
arpl
mov
and
daa
xor
sbb
push
cmp
nop
call
mov
ret
pusha
lcall
sub
sub
stos
jl
out
jae
dec
add
popf
xchg
call
lret
cmp
lret
in
je
sahf
out
adc
icebp
xchg
pop
lcall
lret
xchg
les
inc
dec
cs
mov
xchg
inc
add
jmp
sub
mov
mov
mov
mov
xor
std
add
mov
push
or
in
inc
add
ljmp
add
inc
dec
or
jl
fwait
adc
stos
into
mov
in
adc
outsb
fsts
mov
lods
cmpb
fisttpll
add
out
jo
mov
out
mov
push
imul
cmp
jnp
out
pushf
aad
nop
mov
roll
daa
divl
pop
aam
mov
mov
test
js
repz
ds
es
pop
adc
xchg
dec
pmaddwd
xor
xchg
orb
and
add
mov
std
mov
add
and
iret
push
testl
out
insl
stos
sbb
lods
pop
mov
testl
movb
test
or
mov
and
sbb
ljmp
push
xchg
imul
fiaddl
stc
test
xor
sbb
test
push
jb
jle
shll
jb
cmp
icebp
fs
add
addr16
int3
cmp
add
test
mov
adc
adc
stc
clc
push
sahf
push
dec
add
lahf
cmovg
jp
pop
mov
sub
or
and
inc
push
push
mov
xchg
xorb
mov
dec
lret
aaa
bound
push
xchg
fcmovnbe
rclb
dec
adc
or
mov
rol
adc
pop
hlt
mov
push
mov
leave
mov
in
rclb
lret
repz
out
jae
das
xor
jecxz
mov
adc
lcall
ds
adc
xor
pop
inc
decb
stos
movsb
clc
cmpsl
cltd
mov
lock
add
jne
mov
sahf
mov
and
mov
cmp
or
lret
dec
bnd
push
cmp
mov
xorl
adc
push
or
into
iret
mov
sbb
lods
and
fidivs
arpl
add
inc
xchg
jae
adc
fdivl
jnp
fwait
push
out
sub
out
xor
dec
lret
test
rcrb
je
enter
and
mov
push
movsl
push
push
das
repz
rcll
ss
scas
imull
xor
aam
jl
adc
jb
push
dec
je,pt
aas
fisubs
movsb
pop
pop
push
fstpt
ret
jne
sbb
jl
pop
xor
fimuls
mov
ljmp
xchg
hlt
inc
add
sub
mull
dec
hlt
inc
insb
adc
lahf
shll
sbb
jmp
rolb
sbb
lret
mov
mov
xor
push
mov
neg
jne
pop
cmc
fldcw
fnstsw
xor
sub
int
ljmp
cmp
mov
adc
je
lahf
cmp
xchg
das
xor
sub
inc
jmp
inc
lcall
jo
icebp
ljmp
mov
aad
data16
pop
and
stc
xor
add
add
test
dec
insl
pushl
cmp
call
sti
sbbl
cld
sub
int
add
popf
mov
arpl
add
sbb
pop
pop
cmp
sub
sub
mov
fisttps
repnz
jns
fs
arpl
jle
and
test
pop
stos
dec
xchg
jge
add
bound
lahf
bound
mov
clc
insl
subl
xor
inc
jno
shr
xchg
aas
fsts
sbb
lcall
sbb
repnz
mov
xchg
xchg
pusha
jo
and
and
int
sub
inc
repnz
loope
mov
lahf
and
es
adc
mov
pusha
mov
xchg
sbb
aam
xor
repz
pop
es
pushf
lcall
repnz
xor
ret
sub
in
mov
jle
mov
cld
pop
sbb
ja
xchg
push
adc
or
sub
adc
mov
es
pop
sub
lahf
cmpps
mov
and
in
push
pop
std
mov
push
mov
or
push
sahf
fucom
aam
cs
cmp
bound
cmpsb
cmc
jne
adc
pop
push
imul
movsb
movsl
inc
xchg
lock
orb
popf
test
cld
icebp
push
mov
mov
iret
inc
and
or
xor
cltd
decl
fistps
adc
in
mov
sub
xchg
psubq
into
sarb
jne
dec
dec
and
pop
das
in
imul
cs
xchg
mov
and
dec
js
sbb
push
lahf
dec
push
shl
clc
xchg
fmulp
mov
arpl
nop
adc
in
outsb
pusha
dec
cwtl
push
adc
cltd
xor
arpl
pusha
sbb
mov
dec
lret
mov
iret
xchg
arpl
enter
jmp
adc
and
test
nop
jl
fimuls
sub
insl
or
xchg
inc
popf
cmp
xchg
cmp
sub
push
jg
jns
aas
mov
sbb
leave
stc
in
and
cmp
dec
fs
stc
or
inc
iret
pusha
cmpsl
je
push
popa
outsb
mov
nop
loope
adc
fs
push
psadbw
icebp
mov
sub
cli
adc
mov
pop
andl
gs
push
icebp
leave
fimull
daa
icebp
inc
xchg
adc
imul
ljmp
addb
cmp
pop
es
pop
dec
and
and
xor
fstps
push
lock
popa
mov
iret
addr16
rcll
add
mov
dec
fsubs
or
mov
lock
jg
into
adc
enter
xchg
mov
nop
mov
push
push
lock
movsb
stc
mov
loop
jp
adc
out
jbe
push
xchg
imulb
sub
jmp
xchg
inc
lret
xchg
aam
shr
dec
sahf
loopne
test
mov
pop
test
xor
dec
inc
lods
sbb
int3
sbb
xchg
mov
mov
mov
lret
nop
repnz
or
test
pop
or
ret
or
adc
jae
mov
cmp
test
lret
addr16
jne
push
mov
lock
daa
add
incl
fs
lods
cmc
out
add
addr16
rcrl
cltd
mov
xchg
loopne
iret
fnstcw
push
notb
mov
stos
inc
lods
es
pusha
dec
addr16
jo
push
add
pop
leave
cld
xchg
mov
popf
imul
cmp
inc
ljmp
sub
dec
mov
sbb
test
adc
push
pop
or
dec
cmp
testl
out
fdivl
in
jge
adc
pop
cli
scas
out
daa
mov
xor
scas
mov
pop
or
jns
aad
pop
cmp
sbb
in
sub
or
jle
sbb
inc
mov
jae
pushf
rclb
dec
add
dec
std
cs
xchg
adc
pop
and
or
push
jp
adc
jb
call
jnp
je
stos
inc
ret
and
jmp
arpl
mov
cmp
add
lds
insl
rol
adc
outsb
inc
hlt
adc
or
int
sub
sahf
add
test
push
lods
mov
cmp
enter
add
pop
jnp
mov
lret
outsl
test
and
lds
ret
dec
sub
sbb
sarb
mov
and
in
sub
push
dec
or
iret
shlb
mov
addb
jbe
rcr
and
lret
jbe
dec
and
add
repnz
dec
add
sbb
mov
lds
clc
fdivrp
jno
movsb
xchg
push
sbb
xor
call
xchg
sub
pushf
jbe
inc
sub
xor
dec
sbb
inc
imul
lods
pop
outsl
inc
jae
out
sbb
popl
pop
ficomps
out
sbb
pop
lahf
outsl
aaa
sub
push
loop
das
push
sarl
mov
leave
and
push
dec
pop
daa
or
sarb
and
lea
pop
fildll
adc
inc
not
ds
scas
dec
or
sbb
mov
mov
into
dec
sub
sbb
pop
xchg
inc
add
movsl
dec
mov
inc
fwait
sbb
jae
and
repnz
cmp
mov
sbb
fistps
mov
daa
dec
push
lcall
mov
out
popa
xor
adcb
insb
movsb
dec
sbb
cmc
add
mov
cmp
push
repz
xor
roll
xchg
mov
mov
fcmove
lret
pop
push
cmpb
addr16
shlb
icebp
pop
mov
sbb
sti
push
mov
loope
scas
test
fisttpl
and
pop
or
cltd
clc
cmp
mov
icebp
pop
xchg
lock
shr
fwait
out
xor
fisttpl
pop
pop
loop
xlat
mov
add
push
and
ret
ljmp
flds
ja
cmp
out
outsl
imul
out
pop
pop
mov
add
mov
mov
add
fsubr
icebp
pop
sub
call
das
pop
data16
jae
and
pop
adc
je
aas
push
and
fisubrs
daa
mov
inc
fstpl
mov
pop
and
sbb
aaa
pop
roll
incl
add
sti
adc
or
jnp
loope
aaa
inc
ficompl
lock
shlb
and
icebp
mov
shlb
jne
gs
fisttpl
test
adc
mov
or
fsubrs
adc
adc
pop
in
jg
push
jnp
mov
xor
cmp
push
sub
inc
movsb
sahf
insb
and
fildl
data16
fidivrs
ss
cs
insl
xchg
aam
aas
mov
ss
scas
lock
cltd
push
cmpsl
icebp
roll
fistps
mov
sbb
icebp
pop
and
push
std
pop
lret
les
test
pop
jmp
pushf
das
filds
pop
shr
pop
test
sbb
mov
xchg
dec
push
push
ss
pop
mov
mov
arpl
push
enter
ds
scas
mov
insl
int
fildl
insl
fisttps
mov
sbb
fstps
xor
stc
lds
lea
ret
daa
sbb
lds
ss
inc
adc
fmul
frstor
mov
cmc
mov
scas
daa
lds
rol
rorb
mov
or
cltd
and
aad
add
adc
add
push
cmp
pop
inc
or
mov
inc
push
int
pushf
mov
xchg
fldl
dec
add
pop
das
dec
ss
pushf
movsl
sbb
push
and
jae
pop
negl
dec
lcall
test
sbb
sbb
sub
ret
dec
xchg
movl
outsb
rclb
add
inc
jne
gs
mov
and
adc
lcall
jge
adc
jae
aad
inc
cld
adc
push
scas
xchg
sbb
xchg
mov
sbb
mov
lahf
popf
popa
std
mov
dec
test
insb
call
shl
loope
xlat
xchg
mov
bound
call
insb
xor
mov
fs
jg
into
add
ja
and
xor
cmpsl
mov
push
inc
icebp
nop
mov
sub
jo
and
sbb
mov
mov
adcb
mov
pop
loopne
xor
cmp
aas
adc
mov
cmp
filds
insb
mov
sbb
dec
adcl
jmp
mov
sub
or
fcomps
mov
int
dec
xor
and
mov
int3
jo
jl
jb
xlat
roll
or
inc
lock
and
push
xor
add
enter
ret
inc
mov
cmp
mov
sub
cld
shll
pop
ja
imul
outsb
iret
sub
out
std
cmp
ss
gs
mov
xchg
adc
insb
ds
mov
push
test
adc
fwait
in
aad
xor
roll
sti
push
popf
dec
jae
inc
fiadds
fisttpll
fwait
mov
cmp
jb
push
cmpsl
cmp
xor
cmp
adc
mov
add
xchg
mov
bnd
ljmp
mov
xor
fdivrl
or
inc
mov
cmp
jnp
sub
jns
push
aam
mov
push
or
icebp
push
pop
icebp
sub
jmp
nop
jo
mov
cmpsb
mov
int3
jno
xor
xchg
mov
lods
cli
sub
out
fldt
movsb
pop
sub
stc
lret
iret
jns
inc
imul
lock
mov
jo
scas
adc
adc
shrl
adc
xor
push
mov
ss
mov
xor
test
push
cmp
push
dec
or
iret
loopne
int
out
or
fisttps
stc
fsubrl
dec
call
cmc
fdivrl
nop
jge
mov
nop
ficomps
jg
push
fs
adc
inc
cmp
mov
imul
push
mov
rcl
push
xor
cmp
lcall
sahf
loope
pop
hlt
popf
mov
add
jo
int
sarb
cmpsl
subb
xor
mov
movups
fisttpl
dec
xchg
or
jb
ficoms
mov
and
int3
test
insb
and
test
push
jo
lret
es
xor
dec
ljmp
fstpl
mov
xchg
xor
add
ljmp
pop
ret
data16
fs
frstor
cmp
inc
in
mov
jno
lods
subb
mov
cltd
ljmp
mov
jge
clc
dec
xor
or
mov
in
mov
mov
mov
in
mov
and
sbb
xchg
fsubl
popf
pop
pop
dec
adc
adc
adc
mov
xor
sub
dec
mov
inc
jo
sub
icebp
leave
cmp
mov
pop
movsl
aas
sbb
push
jl
xor
and
mov
or
out
mov
testl
mov
or
bnd
mov
adc
aad
pop
shlb
mov
cs
shrl
inc
es
test
jp
iret
jns
sub
arpl
and
sbb
test
int
imul
ljmp
je
loop,pn
icebp
or
mov
shlb
leave
leave
movsl
cli
mov
mov
push
in
into
mov
push
jg
imul
out
mov
aam
xchg
pop
dec
pop
sbb
push
outsl
sbbb
inc
shll
mov
mov
adc
adc
mulb
lock
push
movsl
mov
jbe
push
sti
dec
out
add
mov
or
movsb
mov
sub
push
addr16
in
mov
sbbb
test
jp
sbb
jmp
dec
mov
inc
mov
lret
cmpsl
leave
aam
lahf
push
je
mov
lods
jno
aas
call
adc
cmp
ljmp
sahf
sub
into
ljmp
inc
rolb
mov
loop
test
mov
jmp
ss
imul
push
sub
sbb
mov
and
xlat
cmp
jle
cmpl
loope
lcall
cltd
rol
ret
jo
movb
fwait
or
push
fs
adc
pushf
adc
push
xchg
ljmp
adc
inc
leave
jecxz
fwait
loopne
subb
test
mov
pushf
or
push
sarl
aas
and
in
mov
push
mov
jae
rcll
mov
mov
jmp
jge
sbb
dec
pusha
mov
xchg
add
daa
adc
inc
dec
js
xor
in
es
cmp
mov
xor
and
leave
popf
inc
lret
jle
mov
cmp
test
xchg
push
inc
lock
adc
and
xor
hlt
push
enter
sbb
xchg
les
into
push
pop
rorl
aas
rorb
mov
shrl
jecxz
jecxz
xor
sub
movsb
pop
dec
mov
xlat
lea
shr
adc
ljmp
scas
fnstsw
cmp
sahf
sub
xchg
cmp
ret
in
and
xor
repnz
jle
icebp
jne
mov
and
sbb
pop
cmp
dec
sub
out
out
cmp
jg
iret
imull
jno
inc
stos
xchg
test
test
mov
stos
mov
jbe
mov
ss
jbe
test
jae
push
inc
xchg
xor
xor
cmp
pushf
cmp
dec
repz
push
xchg
popf
fidivs
pop
lea
xchg
push
pop
gs
sbb
and
sub
dec
testb
xor
mov
test
push
cltd
cmpsl
and
jg
ret
popa
push
xlat
std
and
mov
mov
xchg
push
pop
and
imul
xchg
imulb
mov
cmp
pop
cwtl
hlt
lds
in
mov
add
cwtl
xor
mov
jo
insb
mov
adc
js
int3
jae
and
xor
out
rorl
stos
push
inc
dec
lret
inc
pusha
add
add
test
std
cmp
push
stc
cmp
and
add
or
adc
bound
out
aaa
stc
popf
lds
fmuls
mov
aam
lock
adc
flds
lret
cltd
and
adc
fistpll
add
lea
jo
mov
insb
call
iret
nop
xchg
notb
adc
imul
pop
pop
add
sub
mov
scas
xor
loope
cmp
adc
mov
fldcw
xchg
ret
jae
pop
cmpsl
sbb
mov
xchg
jns
mov
imul
xlat
mov
insl
fildl
ficompl
sbb
mov
jge
adc
mov
lcall
in
mov
jg
adc
flds
xchg
outsb
adc
or
jbe
xchg
mov
into
and
insl
lds
xchg
xor
je
mov
mov
inc
sahf
insl
sub
push
icebp
fcoms
int3
mov
fs
dec
in
lock
mov
cmpsl
cmp
push
or
and
push
push
jnp
jp
pop
cmpsl
add
xchg
dec
filds
and
add
not
inc
les
mov
sub
dec
mov
test
rcrb
or
mov
data16
lcall
push
nop
fistpl
pusha
mov
or
lea
aam
out
test
insb
inc
sbb
loop
movsl
jg
stc
jnp
push
add
pop
idivb
push
daa
jl
test
das
pop
aas
inc
movsl
cmpsl
mov
test
iret
adcb
cltd
push
mov
cmp
push
lret
outsl
pop
enter
rclb
mov
sbb
mov
mov
sbb
pop
sbb
push
ret
aam
add
sysret
call
sbb
icebp
xor
push
daa
ds
adc
ds
cltd
inc
loope
stc
aad
movsl
jns
adc
mov
jge
jae
or
fwait
or
sbb
or
notl
mov
cmp
lret
dec
add
mov
push
inc
or
push
xchg
cmp
insl
mov
das
sub
ds
call
clc
jo
cmp
adc
mov
mov
mov
orb
push
loope
pop
inc
in
pushf
rcrb
ret
sbb
ret
pop
adc
cmp
jbe
aaa
jg
sbb
cmp
repnz
xor
sti
push
add
push
imul
out
insb
push
icebp
ja
call
into
jae
icebp
xchg
roll
in
pop
xlat
scas
push
int
addl
out
out
adc
inc
es
xchg
stos
pop
inc
fwait
arpl
jmp
pop
mov
inc
adc
stos
jge
test
into
or
push
adc
faddl
sub
aaa
sub
fistpl
push
jg
jo
push
pop
add
loope
push
inc
push
lods
mov
jne
cltd
divb
lcall
lar
in
out
and
add
inc
pop
movsb
mov
arpl
in
cli
push
cld
mov
es
inc
xor
lods
bound
insb
pop
aad
ja
xchg
mov
out
mov
pushf
sub
gs
rolb
mov
mov
mov
incl
xor
sub
lcall
outsl
arpl
aas
jg
imul
ss
pop
mov
out
icebp
in
ret
loopne
js
sbb
ja
pop
sarl
pusha
inc
xchg
xor
mov
lahf
sbb
outsb
loopne
dec
cmp
negb
imul
inc
leave
enter
fcoml
mov
dec
mov
out
xor
icebp
xorb
or
dec
sub
xchg
pusha
pop
mov
sub
xchg
xor
pop
xchg
cltd
pop
jle
pop
adc
push
dec
stos
add
dec
stos
sbb
in
dec
push
aam
call
notl
push
adc
jg
mov
add
mov
shl
mov
int3
pusha
enter
mov
aas
mov
pop
xor
mov
mov
je
dec
add
jle
arpl
mov
scas
push
shll
xchg
in
add
mov
scas
call
das
xchg
mov
and
out
pop
mov
gs
call
imul
adc
dec
push
lods
popa
in
xchg
sbb
and
repnz
inc
mov
testb
cmp
mov
loope
arpl
xchg
sub
test
sbb
jmp
dec
das
sub
sahf
fstps
push
and
pushf
stos
cli
pop
mov
pushf
push
fldt
lea
or
lahf
or
mov
cs
sbb
xchg
xchg
adc
inc
mov
xchg
mov
sbb
test
pop
or
jl
pushf
xor
fs
push
shr
fbstp
push
inc
adc
mov
cmc
iret
pop
fidivs
loope
adc
stos
push
xlat
xchg
dec
cs
or
out
mov
push
sbb
sub
xor
jo
fwait
nop
jecxz
arpl
push
sbb
lods
pop
imul
stc
frstor
mov
push
xchg
iret
jbe
inc
inc
fisubl
sbb
andb
mov
cmp
loope
pop
aam
xor
int3
imul
pop
cwtl
cmc
push
inc
movsb
dec
mov
movsl
out
outsb
scas
jmp
cmp
clc
outsl
xchg
jne
stos
imul
push
push
subb
jg
hlt
jle
jl
mov
daa
jmp
or
popa
fdivl
inc
fbld
arpl
xchg
lret
cmp
and
setnp
pop
out
lret
xchg
fwait
cld
xlat
jno
push
sub
and
sub
clc
pop
jg
lahf
fldt
ss
inc
sub
test
outsl
mov
movsl
cmpl
pop
loopne
out
outsb
and
pop
call
sbb
test
je
insl
sub
sar
inc
sbb
sub
hlt
mov
jo
xchg
shl
cmp
movsl
add
adc
test
ret
movsb
mov
cmp
mov
mov
adcb
push
sti
mov
cmp
je
push
in
fsubl
xchg
adc
addl
cmpsl
lods
sbb
outsl
pop
cltd
xor
icebp
ficoml
aaa
aaa
pop
sbb
lods
mov
pop
lret
jle
test
dec
pop
mov
jge
in
mov
push
mov
scas
aas
out
mov
or
inc
roll
ficoml
mov
add
iret
pop
xchg
mov
aad
aas
lods
add
mov
adc
sub
inc
cmp
aam
push
push
data16
pop
cmp
sbb
jo,pt
push
xlat
mov
push
test
hlt
adc
add
lret
sub
cmp
dec
pop
out
sarb
push
imul
inc
repnz
icebp
arpl
pop
dec
mov
hlt
xor
lahf
push
je
insb
rcrl
inc
iret
xor
loopne
ljmp
dec
scas
sbbl
and
mov
cs
dec
xchg
and
mov
aam
or
into
pop
mov
hlt
push
or
inc
push
cmpsl
pusha
dec
adc
xchg
push
xchg
push
bound
mov
mov
fs
push
mov
push
mov
std
or
adc
or
sti
stos
cmp
xor
push
add
leave
adc
push
sahf
int
pop
jmp
icebp
aad
pop
adc
mov
mov
movsb
pop
sar
mov
lahf
mov
fstl
lock
push
lock
add
sub
dec
or
test
push
jno
es
mov
xchg
insb
sbb
dec
sub
mov
scas
push
mov
cmp
xlat
sbb
push
inc
pop
hlt
insb
ja
inc
ss
dec
pop
popf
sbb
and
xlat
and
movsl
cwtl
or
mov
xor
mov
loope
dec
xlat
cli
mov
out
aaa
lock
xor
pop
dec
push
add
lret
imul
loope
cltd
mov
xchg
dec
push
cli
rcll
ret
pop
out
ds
jl
pshufw
inc
outsl
push
lods
push
cltd
sub
test
jecxz
inc
hlt
nop
test
lcall
clc
pop
xchg
pop
pop
sub
xor
dec
stos
push
lds
in
dec
test
arpl
cmp
daa
fs
sbb
lods
dec
mov
repnz
in
int3
xor
leave
xor
aam
adcb
mov
xchg
das
lret
xchg
inc
call
jmp
push
and
lcall
nop
cld
fwait
jbe
scas
push
xchg
mov
and
popf
std
aad
subw
or
add
ret
rcr
mov
mov
outsl
inc
popa
pop
sahf
jle
es
sahf
inc
inc
pushf
jae
jno
adc
adc
aas
cmp
and
or
or
pusha
repz
in
lea
sbb
lea
clc
adc
scas
add
xor
jmp
pop
cld
stos
bound
cltd
lret
or
lcall
sub
loope
or
shrl
cmc
fistpll
adc
mov
lahf
aaa
sbb
sub
gs
daa
adc
xor
test
or
in
inc
pop
sbb
jge
mov
mov
cmp
push
mov
into
inc
xor
sub
mov
mov
fldl
push
loope
push
or
pushf
popa
and
or
add
push
cmpl
stos
into
mov
insl
fadds
push
dec
decl
addb
arpl
loope
sbb
nop
jp
test
adc
jne
and
mov
sbb
aam
mov
xchg
cmp
ret
adc
sub
mov
push
and
sbb
cmp
mov
rclb
call
jo
inc
fsubrl
pop
push
sub
fdivs
jo
test
ds
and
add
popa
fmull
dec
cld
jns
in
sbb
lea
dec
testb
mov
js
sub
leave
ljmp
push
push
jmp
repz
mov
push
mov
xchg
sbb
wrmsr
pop
and
xchg
cmp
test
test
push
ljmp
and
pusha
fnstsw
inc
clc
fistpll
scas
loope
sbb
inc
imul
aad
add
xchg
push
cmp
sbbb
ffreep
in
outsb
dec
jp
xor
cs
or
scas
push
jecxz
cmp
aad
push
push
sub
sub
iret
arpl
repnz
enter
xor
ss
adc
pop
test
mov
mov
mov
nop
push
inc
nop
lea
sub
xchg
lret
sub
roll
scas
push
sbb
lods
push
orb
inc
fdivrl
jecxz
mov
cmp
ss
xchg
or
fnstcw
clc
sbb
call
inc
repnz
sbb
sub
push
mov
loopne
push
push
xor
ret
pop
les
pop
jno
sbb
in
stc
add
loope
pop
bound
ja
mov
mov
icebp
mov
stc
sarl
inc
cmc
in
inc
jnp
mov
loope
nop
aaa
cmp
mov
ljmp
lcall
jnp
adc
mov
frstor
jb
rolb
aad
dec
push
sahf
mov
cmp
daa
jg
imul
fcmovb
or
sub
fmull
bound
mov
out
jbe
repnz
shrl
sbb
inc
sub
test
fisubrl
push
push
lock
movsb
xchg
mov
mov
mov
mov
dec
or
fstps
mov
nop
pushf
ret
inc
xchg
pop
add
push
mov
add
in
je
test
pop
ss
add
jnp
push
xlat
mov
mov
mov
mov
mov
in
rolb
nop
hlt
cmp
loop
push
sub
mov
insb
jmp
xchg
addr16
push
mov
dec
jmp
push
cltd
jecxz
jecxz
movswl
mov
mov
bound
adc
xor
add
jg
and
mov
fwait
in
adc
sbbb
shrl
aad
inc
push
or
sbb
mov
xchg
dec
adc
push
mov
stc
lock
jl
loopne
enter
aas
cld
adc
lds
call
xchg
repnz
sbb
add
int3
cmp
rclb
js
mov
push
adc
nop
sub
call
clc
push
lods
xorl
mov
std
stc
cs
and
add
sbb
insb
inc
or
cmpsb
andl
xor
add
in
cmp
mov
popa
or
sub
push
mov
and
out
sbb
shll
xchg
cld
cmc
sub
pop
cli
and
or
jg
outsb
bound
lods
shl
mov
push
add
mov
mov
loopne
or
or
jle
mov
or
in
mov
das
dec
sbb
cmp
das
jno
push
inc
shl
daa
xchg
rcrb
ret
xchg
xor
jmp
and
aaa
mov
mov
popf
ljmp
imul
jnp
sbb
adc
in
dec
gs
xor
pop
pop
rclb
pop
je
mov
mov
xchg
outsl
mov
test
gs
lods
xchg
int3
aad
ljmp
icebp
iret
jge
out
mov
lea
pop
lret
xor
add
jae
pop
sub
sbb
mov
add
loop
push
jecxz
hlt
pop
popa
sbb
push
std
sbbl
shrl
das
sbb
cmp
jno
daa
sbb
out
scas
mov
jbe
jo
xchg
fdiv
sbb
aam
xor
push
pop
push
dec
stos
out
mov
hlt
pop
push
mov
adc
rorb
inc
fmul
jmpw
fmul
sbb
and
cmpsl
or
in
add
fstpt
loope
ss
rclb
scas
icebp
fwait
or
jno
enter
aam
mov
lods
bound
adc
stos
stos
or
shrb
in
sar
outsb
sbb
arpl
sub
mov
sub
in
testl
pushf
sti
shlb
push
mov
lret
cmpsl
stos
mov
pop
push
mov
sbbb
xor
rcrl
sbb
into
sti
xor
pop
aam
xlat
imul
jmp
sub
pop
push
loopne
sbb
js
xchg
push
es
push
out
sbb
push
fmul
push
cmp
fisttpll
insb
sub
fsubr
lret
arpl
inc
mov
jae
gs
xor
dec
push
rcll
inc
cwtl
xlat
push
aad
push
push
jmp
dec
ror
lret
test
addr16
hlt
in
dec
add
xchg
add
mov
adc
ret
inc
mov
mov
movsl
lret
dec
icebp
adc
dec
dec
xlat
xor
xlat
hlt
insl
insb
dec
arpl
push
mov
inc
mov
movsb
cmpsl
imul
dec
data16
movsb
jbe
xor
sahf
or
mov
cmp
insb
xor
jl
xchg
lock
loope
dec
fwait
aam
xor
aam
sti
fcomi
cmpsb
sbb
dec
xchg
stc
popf
add
ljmp
or
push
in
xchg
popf
mov
into
sub
push
mov
xlat
or
fstpl
shlb
in
sbb
mov
in
cltd
ds
in
mov
popa
pop
lods
sbb
add
sarb
push
dec
jo,pt
out
push
inc
shll
ljmp
xchg
mov
and
xchg
or
das
mov
sbb
dec
or
enter
inc
into
mov
mov
xor
or
insl
lds
idivb
push
xchg
and
cmp
mov
mov
cmp
ror
mov
push
mov
outsb
fs
lahf
ds
mov
dec
sbb
mov
push
mov
negb
jge
out
mov
pcmpgtb
jb
js
int
orb
or
xor
jbe
in
inc
push
pop
push
mov
pop
xor
addr16
lcall
add
jmp
ljmp
ljmp
je
or
int3
mov
pusha
xchg
jp
lods
cmp
js
or
sarl
stos
fidivs
jb
sub
sbb
and
push
lock
idivb
push
pop
mov
and
xor
gs
fwait
mov
sub
nop
jno
xor
xor
inc
cli
movsl
leave
pop
in
sbb
lea
xor
aad
pushf
iret
into
fldcw
js
iret
and
mov
adc
adc
pop
stos
fstpt
mov
std
add
or
cmp
dec
inc
lds
xchg
cmp
rcr
test
and
es
lret
mov
cmpsl
jb
imul
scas
jae
scas
subb
jo
ljmp
sbb
jbe
iret
negb
mov
mov
cmp
insl
xchg
fs
sbb
mov
or
pusha
adc
movsl
icebp
mov
fistpll
sti
ja
fisubrl
cld
in
jno
lret
and
gs
and
repz
cmpsl
std
popa
sub
add
cmpsl
pop
pop
test
inc
out
in
sti
mov
xor
test
xchg
adc
mov
popf
jp
sbb
aad
cld
fsts
lcall
ret
mov
inc
cmp
hlt
and
xor
pop
or
push
rcrb
xor
repz
sarl
sti
popf
mov
stc
mov
ss
mov
scas
inc
xchg
push
jno
mov
xor
cli
jecxz
xor
jp
fcoml
enter
adc
inc
sub
outsb
fldl2e
xor
test
push
popf
pop
inc
subb
push
add
mov
mov
mov
pop
xor
inc
dec
cli
dec
push
testb
test
cmp
pop
mov
push
pop
outsb
out
and
push
movsb
push
inc
in
testl
mov
data16
shl
iret
mov
mov
fsubrl
jns
cmp
outsb
lret
xor
je
inc
movsb
xchg
orl
mov
mov
sahf
das
mov
dec
or
push
sbb
jbe
mov
jl
dec
push
mov
mov
out
sbb
xchg
pop
jnp
mov
cwtl
push
popl
adc
ljmp
sub
mov
sbb
mov
adc
xchg
adc
dec
and
test
add
cli
dec
jl
sub
push
les
paddb
jae
and
mov
adc
scas
negb
cmp
push
pop
test
mov
sub
rolb
mov
jle
adc
push
inc
out
scas
cs
cli
jge
mov
push
xorl
pop
xchg
repnz
jl
inc
push
dec
out
test
imul
into
in
and
push
idivl
mov
imul
cld
mov
add
loop
and
icebp
pop
mov
sbb
sub
popf
fcoml
out
mov
addr16
lods
mov
add
bt
and
iret
movsl
pop
mov
shlb
mov
mov
mov
push
xchg
and
stos
scas
scas
scas
addr16
sbb
add
inc
int
addr16
shr
sbb
cmp
inc
sar
mov
push
and
jmp
mov
stos
shr
loop
inc
cmp
divl
sub
mov
jb
mov
and
cmpsb
popf
push
or
adc
in
jbe
int3
not
jle
ja
leave
inc
push
push
outsb
addr16
or
mov
jle
xchg
dec
cmpsl
sbb
iret
mov
pop
bt
sub
adcl
outsl
cmpsl
jne
test
aaa
outsl
in
dec
xchg
xchg
andb
cmpsb
repnz
push
jo
sbb
inc
stc
ljmp
xchg
int3
jnp
ds
fsubl
ss
addr16
sub
loop
fucom
or
mov
dec
inc
scas
jbe
scas
fsts
aam
clc
pop
ficomps
cltd
adc
rolb
stos
or
jge
push
rol
icebp
out
mov
jo
pop
jb
mov
jmp
nop
jbe
std
or
mov
clc
jge
push
pop
or
cmpsb
jge
mov
inc
mov
jle
into
mov
lret
push
mov
xchg
fwait
and
lock
cltd
inc
push
sub
clc
or
data16
das
mov
jmp
sub
push
push
xchg
int
jg
pop
insb
jecxz
sbb
and
mov
pushw
or
outsb
add
and
fs
repnz
pop
test
call
xor
mov
fstp
test
sbb
mov
aaa
mulb
add
mov
and
aam
jno
mov
mov
sub
xchg
push
or
gs
in
dec
push
roll
lods
les
jno
sti
add
das
out
mov
test
adc
fwait
imul
loope
divb
adc
or
rorb
pushf
in
sub
xchg
cltd
jb
adc
push
ss
inc
fs
call
out
movsl
jae
fidivs
das
int3
inc
roll
jp
rorl
jmp
dec
sbb
jbe
add
jae
aad
in
push
inc
popa
call
add
je
mov
or
stos
xchg
leave
pop
cld
adc
icebp
push
xchg
pop
jg
cld
xchg
test
out
lods
out
sub
nop
sahf
lea
lret
or
rcl
or
mov
cmp
xor
cmp
or
sub
pop
mov
outsl
push
adc
jg
outsl
cmp
mov
jl
cmpb
push
in
xchg
push
bound
inc
repz
cmpsl
mov
int
lea
lcall
jnp
mov
sahf
dec
xchg
sbb
cli
jl
jp
imul
cmc
fbld
pop
fimuls
or
dec
mov
dec
repz
hlt
add
rcrb
mov
push
ret
in
test
or
movsl
aaa
push
add
lcall
push
cwtl
into
ljmp
mov
outsl
xchg
mov
das
iret
psubusw
hlt
jbe
sub
clc
iret
insl
iret
ret
pop
push
mov
in
jle
xchg
icebp
and
ja
push
es
fwait
dec
int3
stc
xchg
call
cmp
call
jmp
pop
add
sbb
fsts
add
cmp
sbb
rclb
mov
aam
push
adc
jg
fisttps
adc
out
sub
in
icebp
ljmp
test
inc
push
cmp
sub
pusha
sarl
fcmovbe
jge
imul
lock
inc
aaa
call
rorl
or
ss
stos
add
sbb
sar
inc
sub
cmp
push
push
cmp
les
sbb
repnz
popa
inc
jle
mov
in
movsl
lea
cld
push
in
out
jge
stos
mov
pop
rorb
subb
in
xor
shrb
sti
pop
out
inc
inc
inc
ret
in
mov
adc
ds
sti
or
icebp
ret
add
insl
xor
gs
adc
imul
xchg
icebp
mov
cmp
jge
sbb
push
imul
sub
mov
push
int
cmp
push
mov
scas
aam
mov
das
out
adc
loop
jb
inc
sub
loopne
push
rcl
inc
xlat
mov
xchg
js
js
lds
hlt
adc
push
inc
xchg
test
cwtl
out
shlb
jmp
push
lea
cmp
mov
or
cmp
sbb
pop
jne
lret
gs
popf
adc
and
imul
enter
idiv
pop
cmp
inc
pop
mov
sbb
xchg
movsl
sub
sub
aas
imul
icebp
lret
mov
enter
pop
scas
sbb
in
add
subb
arpl
push
add
add
sbb
and
jb
mov
mov
push
out
pop
xchg
lar
push
mov
clc
mov
or
rolb
add
dec
mov
push
pop
or
sub
push
repnz
dec
fsubr
and
adc
xchg
das
add
bound
mov
mov
xchg
lods
rcr
cs
jb
jb
inc
icebp
push
stc
int
mov
push
or
je
cmp
clc
insb
je
push
cmc
pop
xchg
leave
mov
test
mov
cmp
cmp
shlb
dec
pop
neg
rcll
adcb
mov
push
icebp
cmp
cmp
loopne
inc
hlt
add
mov
mov
lods
jae
push
and
jne
adc
in
or
jl
dec
iret
xchg
hlt
xchg
dec
xor
cmp
dec
push
add
inc
imulb
test
add
dec
cltd
jp
sbb
xlat
xchg
jns
popa
add
andb
out
jmp
cwtl
adc
cli
inc
movsb
nop
pop
jo
lock
dec
mov
ss
in
or
aam
cli
pop
call
cld
add
mov
adc
scas
mov
mov
push
pop
xchg
lods
mov
xor
mov
test
repnz
fldt
jbe
sbb
and
das
inc
andb
insb
imul
mov
je
outsl
dec
mov
add
lods
cwtl
jmp
cmp
pop
leave
inc
pushf
mov
push
xchg
xchg
add
jnp
adc
pusha
xor
in
push
xorl
push
mov
dec
ret
int3
xor
mov
mov
movsb
add
repz
pushf
push
popl
imul
fcomps
add
fisubrl
pop
and
popf
aad
addr16
pop
out
sti
pop
mov
xor
mov
pop
dec
repz
fnstcw
or
jle
mov
sbb
xchg
das
pop
xchg
or
jg
fnsave
in
adc
dec
or
sbb
mov
es
dec
inc
pop
scas
in
adc
fsubl
popf
add
inc
or
das
mov
jge
lcall
xchg
data16
adc
mov
jmp
movsl
mov
mull
jne
repnz
popf
push
xchg
jb
mov
sbb
mov
loopne
mov
int3
cmpsl
sub
jmp
in
fisubs
dec
pop
dec
dec
jmp
xchg
push
add
rcll
add
jmp
add
sbb
mov
mov
call
xchg
or
add
push
les
jl
or
push
pop
pop
mov
xchg
xor
pop
sub
movsl
jnp
jb
in
insb
data16
or
lahf
insb
mov
negb
shlb
mov
jns
imul
cmp
ret
cmp
cmp
xor
pop
mov
and
pop
and
lods
shr
cli
mov
iret
scas
xchg
add
in
add
xor
adc
cltd
jbe
sub
xchg
mov
lret
imul
pop
and
cmp
cmc
mov
mov
je
mov
pop
ja
fsubrs
mov
and
mov
sub
pop
mov
std
stos
sti
imul
mov
test
movsb
loope
jle
imul
push
jg
cmp
fmuls
adc
mov
movsl
adc
sub
dec
shrl
imul
pop
imul
loop
mov
test
scas
push
pop
fs
xor
inc
jle
and
scas
arpl
jecxz
inc
pop
stos
subb
xlat
and
xor
inc
pop
leave
pop
or
mov
dec
mov
pop
inc
pop
ret
imul
pop
jns
comiss
in
out
subl
sbb
pop
call
rcrb
add
lret
push
inc
fidivrl
std
fiadds
sub
rol
je
sub
xchg
add
fistps
orl
sub
hlt
hlt
pop
fwait
mov
inc
fs
push
sub
sbb
jns
test
sub
push
ret
loopne
adc
fsubs
mov
mov
adc
dec
push
dec
outsb
or
lds
push
clc
test
jne
mov
rcrl
sbb
popf
hlt
data16
in
insb
sbb
mov
inc
sub
decb
sti
add
stos
in
movsl
outsb
daa
iret
dec
lds
jnp
scas
movsb
out
inc
dec
lds
repnz
ret
xor
jmp
scas
add
sub
fiaddl
jb
mov
std
dec
out
inc
or
mov
inc
or
dec
mov
loope
push
movsl
xchg
popa
xor
fsubl
cmpb
test
jp
ret
mov
sbb
jo
or
sub
addr16
dec
mov
push
mov
cwtl
shlb
rep
mov
mov
int3
pop
mov
mov
and
mov
jle
icebp
out
mov
or
pop
adcb
lret
nop
dec
ds
cmp
popa
jg
movsl
adc
push
notl
cmc
mov
xor
es
aam
fsub
dec
adc
inc
lret
cli
fistps
int
jl
lret
and
dec
sbb
dec
pop
jae
int3
orb
push
push
or
movsl
mov
test
shll
aas
sub
sub
push
lahf
gs
xor
adc
fcom
jns
pop
xor
and
lret
xor
or
fwait
imul
iret
cmp
inc
loopne
out
dec
repz
add
push
fdivrs
pop
fdivrl
lds
adc
lret
or
sbb
lea
movsl
es
sbb
scas
cmc
jg
push
popa
fwait
sub
outsl
sbb
ljmp
ret
xor
ss
inc
insl
stos
ljmp
push
cmp
dec
pop
in
xchg
mov
and
ljmp
iret
stos
cmp
jnp
loop
mov
hlt
sarb
push
stos
add
push
sbb
andl
pop
push
movsb
fnstsw
jo
ljmp
mov
loop
adc
and
push
lods
clc
cmpsl
cltd
push
or
xor
out
sub
push
xor
jp
fildll
imull
and
lahf
mov
in
xchg
fwait
in
sub
dec
call
xchg
pop
jmp
gs
pop
test
popa
cmp
stc
mov
les
jb
stc
or
inc
mov
mov
xchg
stc
mov
and
mov
movsl
dec
inc
repnz
adc
mov
cmc
jl
outsb
mov
cli
sub
mov
jl
loopne
push
inc
push
sti
lret
ja
push
adc
push
jecxz
cmpsl
mov
push
mov
add
sbb
push
subl
int3
aaa
lcall
fs
hlt
mov
mov
xor
insb
push
xchg
or
ss
repz
out
pop
out
inc
shrl
jle
lret
insb
mov
xchg
movsl
repnz
add
call
enter
xchg
lret
adc
dec
mov
rol
fmul
mov
aaa
adc
fstps
adc
mov
sub
mov
xchg
lahf
incl
es
test
sbb
outsl
adc
xchg
and
mov
repz
cmp
cmp
js
test
pop
fwait
pop
imul
jb
dec
adc
mov
hlt
rcl
imul
push
into
fistpll
sub
dec
scas
pop
xor
push
es
cmp
inc
ret
imul
mov
in
iret
mov
pop
lods
repnz
cmpsl
ja
add
cmp
cmp
fnstsw
xchg
imul
les
rolb
adc
pop
and
jns
aad
xchg
cmp
mov
in
add
dec
cmp
call
xor
out
adc
packuswb
jecxz
aas
test
mov
inc
mov
or
mov
add
xor
lcall
push
imul
push
xor
mov
mov
sub
cmp
shl
push
and
clc
ljmp
stos
sub
lcall
dec
jno
icebp
pop
push
roll
push
mov
into
test
subb
xor
xchg
adc
outsb
ja
jl
xlat
dec
xchg
outsl
push
sbb
fdivp
gs
in
sar
mov
repz
test
xchg
adc
mov
cltd
pop
push
mov
rcrb
out
sbb
xlat
sar
jge
xor
popa
scas
mov
mov
sbb
jno
es
imul
insl
push
pop
jmp
loop
pusha
ja
cwtl
pushf
push
stc
mov
les
dec
out
loope
int3
incl
adc
dec
cli
jbe
lds
mov
adc
mov
dec
leave
jbe
xchg
xor
xor
cmc
pop
repnz
repz
std
lahf
mov
cmp
or
push
js
je
movsl
mov
mov
ds
iret
scas
jb
sub
cmp
insb
pop
js
adc
xchg
sub
mov
adc
sarl
dec
in
inc
loope
out
jg
pusha
int
dec
shl
stos
mov
roll
pop
xchg
pop
mov
aaa
in
int
xor
mov
popf
push
nop
cmp
lret
adc
stc
inc
gs
jns
xor
es
insl
jecxz
xchg
push
out
mov
xor
cmpsb
in
pop
std
and
fs
jne
fsubrl
pusha
sub
aam
insl
dec
je
mov
mov
inc
inc
sub
xor
loopne
mov
mov
lahf
lds
ja
insl
sbb
fs
mov
fisttpl
imul
loop
push
outsl
jl
mov
out
pop
jp
pop
or
mov
loop
mov
scas
and
pop
outsb
loop
out
insb
fwait
mov
or
cmpsl
data16
xor
mov
sbb
dec
push
jno
pop
inc
fldl
jno
shlb
sbb
pushf
enter
cli
jae
xlat
xchg
faddl
and
ret
xchg
sub
imul
pop
push
sbb
std
fdivrs
loopne
lret
and
cld
jo
jns
fnstcw
test
mov
mov
mov
test
sbb
mov
mov
xchg
jae
aam
push
dec
sbb
xchg
pop
jmp
adc
fcomip
stos
pxor
jbe
or
int
ds
ret
bound
mov
xchg
jmp
rol
adc
ret
lods
add
mov
inc
in
jg
into
scas
xchg
shll
mov
xor
sub
mov
fsubp
rcl
adc
rorl
jnp
mov
ficoml
jns
dec
lods
sbb
packssdw
add
div
test
adc
rorb
add
ret
push
mov
imul
popf
test
in
ret
int
cmpsb
int3
bound
repz
pop
pop
les
jl
dec
xchg
sahf
shr
fwait
rcll
inc
push
mov
cmp
imul
lock
cmp
leave
cmc
inc
fs
mov
sub
mov
add
jge
mov
in
push
adc
sub
sbb
push
int3
rorb
dec
sbb
neg
jb
cltd
stc
jge
sub
insb
inc
sbb
push
inc
pop
dec
push
iret
fmul
pusha
jae
jge
js
mov
push
bound
test
stos
add
mov
filds
push
popf
clc
fcomi
data16
mov
iret
mov
xchg
xchg
lahf
in
push
jo
ficoml
mov
test
filds
cltd
dec
push
inc
dec
sbb
add
pop
adcl
pop
jb
shlb
xorb
hlt
cmp
pop
mov
bound
jbe
enter
popf
pop
movsb
cmp
int
ret
mov
arpl
rcr
filds
mov
and
ja
lret
or
aad
out
cmp
push
mov
test
popf
or
mov
mov
out
pop
mov
lret
mov
roll
push
or
sbb
inc
mov
or
pop
xor
subl
jne
call
ljmp
dec
cmp
adc
push
cs
jnp
das
xchg
xchg
aad
fs
sbb
nop
push
cmpsl
fcompl
xchg
rorb
or
mov
mov
mov
subb
fcomi
adc
add
je
or
jmp
addl
sbb
or
xchg
adc
or
mov
dec
xchg
mov
into
push
jno
cmpsl
packsswb
adc
mov
sbb
xchg
mov
stos
imul
xchg
test
cmc
movsb
cmpsl
setle
adcb
add
cli
mov
jle
fildl
jg
mov
or
int3
loopne
sbb
xchg
cmpsb
sub
xchg
shrb
jp
adc
cs
int3
dec
leave
mov
je
dec
xchg
jp
jnp
or
cs
fcoml
lahf
insb
mov
push
sub
cld
fidivl
iret
bound
ss
cmc
negb
mov
dec
adc
mov
shll
js
ret
pop
ret
std
dec
in
out
push
pop
mov
xlat
fwait
js
loope
mov
lahf
in
mov
mov
les
into
ljmp
inc
mov
lretw
push
jmp
xor
or
jl
adc
xchg
loopne
enter
fidivl
mov
mov
insl
mov
mov
inc
sbb
fsubr
loope
mov
gs
insl
jecxz
cmp
daa
addr16
cmpsb
jno
std
push
add
inc
subb
mov
cmp
in
or
stos
jmp
push
jnp
push
rol
fs
add
pop
and
jmp
mov
scas
mov
cli
out
sub
leave
push
lret
and
repz
jmp
icebp
and
dec
iret
leave
adc
push
mov
test
push
shlb
fstpt
mov
inc
jne
pop
in
fadd
pop
mov
shlb
imul
ret
sbb
push
sbb
or
inc
mov
fimuls
push
cli
and
dec
sub
leave
es
inc
outsb
jp
or
fldenv
pop
sub
out
push
ds
ret
fimuls
loopne
cmc
mov
cmc
pop
das
xor
adc
sub
cmp
data16
sub
jae
jno
or
shrb
les
xor
mov
jnp
gs
push
repz
mov
or
mov
pushf
ljmp
in
fmull
add
ror
es
scas
jne
sub
add
xchg
ficoml
idivb
inc
hlt
movsb
jmp
out
roll
cmp
les
mov
jmp
sub
icebp
daa
je
sub
xchg
or
push
mov
mov
negb
jo
and
or
pop
test
push
leave
shl
cs
sub
mov
mov
sub
sub
aas
jnp
cmpl
ret
fldcw
xchg
lahf
scas
out
inc
xchg
mov
sbb
fidivrs
push
shrl
lea
cmp
in
int3
arpl
xlat
out
mov
xor
mov
cltd
bound
push
push
lahf
lcall
xchg
jg
sbb
xor
les
adc
inc
jo
dec
addr16
or
dec
sbb
movb
sbb
fidivs
aad
cmpsl
lods
pop
data16
lods
mov
sbb
lret
mov
mov
mov
mov
xor
add
call
out
int
es
sub
cmp
push
test
and
push
push
push
pop
lds
addb
mov
rclb
sbb
xor
rcl
cmp
les
fwait
into
sub
mov
add
mov
scas
and
cld
mov
cmp
sbb
movb
out
ret
movsl
out
loop
xor
push
sbb
sub
out
mov
pop
lcall
inc
xchg
adc
sub
adc
xlat
sub
stos
sub
cmpsl
pushf
out
push
outsb
cmp
add
int
sub
jg
call
arpl
aas
or
cmp
xor
lret
cmp
scas
xchg
pop
xchg
in
mov
in
dec
fsts
and
xchg
lahf
mov
inc
pop
loop
push
sbb
clc
sub
fidivrs
scas
dec
incl
push
jns
pushf
rorl
pop
mov
xor
pop
mov
ret
xor
push
push
aad
push
push
sbb
xor
lock
pop
out
stos
lods
fildll
dec
sub
mov
inc
jae
sbb
jne
jnp
in
sbbb
pop
xor
mov
adc
or
and
xchg
or
mov
jnp
mov
inc
mov
fisttps
sbb
sbb
jge
std
sbb
adc
int
shr
push
push
xchg
lds
cmpsl
sar
call
cld
mov
push
sub
mov
adc
xchg
ret
lods
xor
repz
or
dec
xchg
mov
int3
loop
cld
jl
sbb
mov
daa
das
mov
lcall
fildl
sub
add
adc
jb
das
ss
xchg
sub
aas
xlat
imul
inc
loope
es
lods
sub
in
fistps
rorl
popf
jae
mul
rorl
cmc
ljmp
insl
push
push
mov
fwait
subb
mov
rorl
dec
cs
dec
nop
imul
fldl2t
jbe
shll
xorl
or
stos
push
fdivr
jbe
out
xor
mov
out
jmp
mov
out
pushf
xor
cmp
testl
push
sti
xchg
add
imul
adc
addb
mov
pop
push
inc
dec
xchg
xchg
out
mov
inc
xchg
mov
out
mov
xchg
in
negl
or
fnstsw
xor
ss
cmpsb
test
add
inc
push
adc
adc
mov
scas
dec
ret
push
dec
jge
mov
imul
cmc
mov
orl
or
or
and
iret
jge
fcomp
xor
sub
jle
mov
rcrb
pop
clc
loope
fmul
test
or
mov
sub
sbb
test
call
xor
ja
xor
add
leave
cld
dec
movsl
push
jb
in
pop
mov
stos
sub
xor
mov
mov
and
push
jbe
xor
rcrl
enter
jns
mov
jbe
call
icebp
orb
jns
into
mov
mov
cmpsb
shr
xchg
and
fmul
xchg
cmp
mov
pop
cmp
stos
fiadds
call
xchg
xchg
in
xchg
pop
inc
addr16
lods
add
sbb
addr16
sbbl
sub
mov
xchg
test
sbb
out
out
xchg
xchg
outsl
icebp
lahf
inc
mov
pushf
outsl
je
rcr
mov
dec
fstp
or
enter
sbb
js
fs
outsb
les
mov
jg
je
popa
scas
arpl
loope
mov
sahf
lods
xor
out
push
popa
inc
lock
xlat
jmp
hlt
push
mov
jb
icebp
inc
jl
icebp
mov
loop
int
pop
sbb
in
mov
jecxz
repnz
stos
rclb
lea
std
add
arpl
mov
icebp
mov
dec
jg
pusha
xor
xchg
push
aad
sub
jge
leave
jmp
clc
xchg
mov
xorl
sub
mov
jnp
xor
mov
int3
cmpsl
and
stos
mov
mov
hlt
xchg
ret
dec
fisttps
mov
out
and
xor
notb
pop
movsl
xlat
hlt
pop
adc
in
clc
inc
addr16
or
dec
mov
xor
rorl
cld
les
sbb
in
popa
pop
add
mov
orb
mov
push
push
jns
adc
dec
rol
sbb
jne
les
aas
insl
sbb
sub
push
xor
dec
mov
aam
xchg
push
add
push
stos
in
sub
or
lea
scas
xchg
inc
xchg
rclb
and
pushf
dec
movsl
cld
test
jmp
adc
leave
inc
aas
pop
cmp
jo
cmp
mov
daa
mov
stc
sahf
pop
enter
js
mov
popf
inc
ret
lods
or
sub
ror
repnz
dec
cmp
sbb
outsb
stos
in
adc
jle
inc
fwait
dec
sbb
mov
sub
pushf
insl
add
pop
repz
xchg
or
std
cmpl
lock
mov
sub
jp
push
sub
ja
jmp
mov
sub
inc
cmp
loopne
pop
aam
dec
jne
cs
jmp
or
pop
repnz
jno
cmp
add
sbb
push
pop
cmp
and
scas
xchg
mov
sub
mov
jne
in
test
leave
sahf
xchg
push
aas
popa
arpl
fs
push
mull
pusha
ds
out
xchg
add
cmp
repnz
cmp
subb
sbb
inc
or
imul
fcompl
mov
sti
loope
mov
das
lcall
xchg
lret
fstl
mov
out
dec
and
outsb
popa
out
repz
jecxz
dec
lea
push
mov
scas
stos
test
imul
loop
or
loopne
jmp
mov
movsb
push
outsl
add
pop
xlat
ss
sub
xchg
jae
daa
rol
inc
xchg
aaa
ja
fcomps
xchg
push
mov
xchg
fs
xchg
sub
outsb
sub
scas
or
and
xorl
xchg
inc
push
popf
pop
and
push
rcr
mov
mov
and
sub
sbb
inc
and
aad
add
or
jo
repnz
dec
outsl
shrb
inc
mov
imul
and
pop
add
stos
es
shrl
es
loop
add
dec
mov
mov
aad
mov
rcrl
out
pop
mov
pop
ffree
sub
dec
into
loop
mov
pop
pop
mov
push
enter
adc
incl
mov
outsl
lds
ret
insb
jle
out
repnz
add
data16
cmp
pop
dec
xchg
mov
in
stc
cmp
lret
and
leave
or
lds
shufps
test
int3
mov
or
pop
mov
mov
jae
lea
sbb
sub
mov
in
xor
test
fidivl
clc
lds
cmpsl
int
push
jne
add
imull
push
addl
mov
mull
mov
sti
inc
push
adc
clc
jno
outsl
jne
sbb
add
inc
dec
xchg
data16
add
popa
mov
stc
cltd
orb
sbb
push
outsb
xchg
mov
inc
repnz
lods
pusha
push
adc
stos
add
pop
scas
dec
mov
scas
repz
movsb
sti
int3
push
sbb
bound
xchg
or
leave
and
add
pop
sbb
insl
out
aas
sub
pop
and
notl
mov
mov
mov
sub
adc
rclb
dec
aaa
filds
sub
pop
push
das
sub
and
mov
or
adc
or
or
cmp
lods
inc
cmpsb
aam
jne
rcrl
sub
adc
dec
pop
cmp
adc
jge
imull
ja
or
pop
cmp
pop
add
sbb
xchg
popa
mov
lds
sbb
xor
addb
pop
test
pop
aas
push
mov
aam
loope
cmp
adcl
cmp
cltd
adc
cld
lock
insb
pop
inc
xchg
dec
pop
mov
rep
les
sub
pop
imul
xor
in
ss
push
enter
jmp
adc
jb
enter
inc
lds
nop
fistpll
or
aaa
cwtl
cmp
inc
rorl
sar
push
push
out
push
sub
jnp
cmp
pusha
dec
pop
gs
inc
sbb
push
aad
movsb
lcall
xor
pop
aas
bound
lods
cli
loopne
ret
or
cmp
xor
dec
jb
xchg
mov
std
or
add
pop
adc
push
cmp
pop
cwtl
data16
dec
pushf
aad
push
jno
mov
push
pop
aaa
adc
xor
xchg
push
sti
xchg
cmp
mov
in
sbb
inc
leave
sbb
aad
das
sbb
leave
push
jp
jle
out
jp
xchg
std
in
sub
arpl
fisubs
sarl
mov
std
imul
loop
std
jbe
adc
loop
scas
pop
pop
popf
mov
inc
add
ret
and
imul
adc
mov
xor
dec
add
fcmovbe
or
rcr
cmp
and
dec
jb
push
ret
into
jecxz
cltd
lds
insb
pop
push
aam
mov
inc
xchg
push
adc
jg
out
subb
in
jb
xlat
andb
insb
aaa
lret
add
stos
popa
sub
adc
jp
outsl
int
inc
fistps
mov
push
push
je
jecxz
and
xorb
add
ljmp
std
icebp
and
mov
push
sub
push
mov
sub
es
btc
xchg
add
or
jl
int
jl
xchg
js
sub
test
jecxz
movsl
mov
inc
pop
jb
jns
inc
data16
dec
test
sub
or
sub
test
lcall
mov
ret
aas
sbbl
dec
xor
ret
pop
loopne
pushf
rcll
js
mulb
jne
xor
cltd
arpl
rorb
mov
in
aam
dec
les
pop
shlb
test
iret
loope
fldt
scas
imul
mov
shlb
and
clc
and
dec
inc
inc
cmp
jae
pop
data16
mulb
dec
lds
sti
sbb
pop
push
adc
jb
dec
jp
bound
mov
sti
addr16
scas
pop
insb
stos
repnz
shlb
fwait
cmp
int3
fdivs
cmpsl
scas
jae
mov
mov
xor
cmp
sbb
mov
push
in
lods
mov
cmp
push
xor
push
mov
cli
adc
aas
std
cmp
pusha
sub
xor
stc
sbb
fsubrl
insl
out
andb
sbb
add
xchg
das
xchg
or
inc
or
xchg
jo
sbb
movsb
add
jb
and
pop
rcll
xchg
mov
ja
push
or
outsb
lahf
test
es
pop
pop
pop
mov
inc
mov
pop
dec
jno
repnz
mov
pop
jecxz
push
mov
sub
in
imul
aas
daa
outsl
push
jns
mov
push
push
lods
inc
pop
popf
mov
xor
cmp
movsl
jecxz
sbb
pop
aad
xor
push
outsb
and
imul
cs
xchg
pop
cmp
hlt
clc
sub
call
dec
jae
sub
xchg
mov
mov
cld
fstl
cltd
aas
popa
andb
arpl
out
out
pop
loop
jns
pop
cmp
jb
adc
lcall
inc
sbbb
jns
jg
mov
sub
lahf
outsl
pop
inc
lods
cmp
cmp
or
fmull
ljmp
lret
bnd
push
das
sub
inc
pop
lret
or
sbb
pop
xlat
pop
orl
pop
incl
outsl
in
xor
cmp
or
scas
mov
mov
insl
jb
inc
mov
dec
push
sar
add
sti
jge
pop
arpl
out
arpl
and
mov
dec
loopne
jns
sbb
xchg
add
xor
pop
fldenv
subb
les
inc
pop
fldenv
add
push
arpl
jns
in
ss
aam
jae
lock
dec
pop
shrb
xor
add
pop
lds
xor
dec
xlat
push
adc
jae
shll
xchg
xor
xchg
and
aam
jecxz
insl
test
xlat
insl
stos
loope
lds
movsl
jmp
push
rolb
aam
adc
mov
or
call
push
xchg
int
mov
popf
aam
fldenv
faddl
lret
sbb
std
out
sub
repz
cmpl
leave
xchg
cs
dec
adc
adc
outsb
cli
rorb
cltd
int3
test
push
mov
sub
xor
clc
xor
repz
push
movl
jae
dec
aad
ja
push
movsb
mov
add
sub
cwtl
mov
flds
xor
fyl2x
hlt
cmpsb
push
test
push
repz
dec
lahf
xchg
cltd
aaa
jbe
in
jno
jge
fldl
xor
js
add
pusha
sbbl
in
jle
and
xchg
cmp
add
or
dec
jne
ljmp
dec
lcall
mov
dec
out
and
lock
into
cmpsl
pop
sub
das
pushf
inc
xchg
imul
xchg
xlat
xor
mov
cmpsb
sub
adc
sahf
rorl
out
ss
loopne
das
pminsw
or
sub
pop
push
push
jns
sbb
js
sti
xchg
add
lods
popa
jns
ret
jmp
mov
call
jmp
jo
mov
adc
std
fiadds
push
ficoms
mov
push
sbb
addb
add
cmp
loopne
mov
loopne
in
nop
cmp
jae
mov
jno
jbe
xchg
pop
into
inc
cmpsb
pop
jnp
loope
pop
lret
lcall
dec
lods
arpl
jmp
cmp
pop
pop
cmp
stos
call
dec
ret
pop
callw
cmpsb
inc
movsb
push
fidivrs
cltd
lret
xor
cmp
movsl
mov
mov
mov
aam
sub
les
icebp
pop
in
sub
xchg
imul
cmp
lods
shll
xchg
insl
cmp
dec
add
in
cmpsb
mov
movsl
fldl
int
ds
xor
dec
lock
pop
pusha
aam
push
push
fdivl
movsb
shll
cmp
cmp
outsl
xor
xor
adc
imul
sbb
cld
lock
xor
add
sub
mov
in
add
sub
fucom
sub
xor
cli
xchg
jnp
xchg
lea
xchg
mov
add
ficoml
dec
loope
into
or
dec
pop
bound
inc
inc
andl
and
std
ret
out
sub
stos
jmp
push
xchg
addl
mov
or
shrb
movl
mov
pop
shr
or
cmpl
std
xor
pop
js
std
or
and
out
cmp
clc
sbb
mov
pushf
je
adcl
mov
out
sahf
fistpll
call
stos
dec
nop
mov
push
push
negb
pop
mov
dec
add
mov
jge
mov
jns
cmpsb
xchg
nop
lods
repz
cwtl
mov
es
in
popf
lods
pop
sbb
lahf
ljmp
mov
out
sbb
jo
dec
or
jns
cmp
into
test
pop
icebp
and
sub
inc
mov
jno
inc
cli
sub
and
jne
leave
inc
hlt
negl
lea
xor
out
call
mov
mov
in
or
mov
pop
call
adc
inc
xor
les
push
xor
pop
ljmp
loope
ret
mov
cli
xchg
test
arpl
cmpb
bound
cmp
lea
aas
sub
jbe
xor
mov
lea
jne
jnp
shrl
les
sbb
mov
daa
xchg
fdivrl
jmp
mov
lcall
insl
mov
inc
ficoml
lcall
xchg
mov
add
repnz
ss
push
mov
add
xchg
fldenv
repz
mov
jns
jg
out
cltd
mov
inc
mov
lock
pop
sub
inc
fwait
sbb
shrl
cli
lods
pop
iret
inc
mov
lea
andb
or
mov
cmpl
roll
arpl
popf
pop
adc
hlt
cwtl
ret
add
pop
pushf
ret
pop
jecxz
mov
sbb
xorb
in
push
cmp
lahf
cltd
std
cmpsb
mov
sbb
push
nop
shr
push
lret
push
push
sub
jns
jl
les
mov
and
sub
pop
lahf
popf
rolb
clc
lret
xor
je
dec
adcl
sub
inc
cmp
jno
add
cmp
orb
notb
sub
mov
or
dec
bound
dec
cltd
sub
mov
stos
mov
daa
dec
and
imul
fsubrp
cmpsb
fdivrp
aas
outsl
or
mov
push
cmp
push
jl,pt
test
outsl
cmp
push
mov
xchg
push
loopne
aam
dec
and
mov
xor
cld
lcall
dec
lret
lret
imul
movntq
pusha
fabs
test
inc
fwait
in
add
mov
cmp
loop
lock
inc
pop
inc
iret
jo
mull
dec
fcoms
and
mov
outsb
hlt
mov
push
adc
mov
subb
xlat
adc
lods
push
lds
out
xchg
fmul
into
pop
rolb
lcall
xchg
jb
in
add
test
mov
jecxz
and
test
dec
jbe
dec
pop
adc
flds
or
jg
cmp
add
scas
int
push
rol
adc
ja
xor
enter
or
dec
cs
mov
fsubrp
movsb
mov
iret
cmc
int3
mov
sahf
ljmp
gs
push
adc
fwait
dec
cmp
ffree
sbb
enter
mov
cmpsb
shrl
adc
pop
xor
add
sti
out
insb
xor
xchg
sub
std
mov
mov
in
insl
jl
cmp
dec
jo
rclb
jne
sbb
clc
push
lcall
lret
fwait
insl
xor
jg
xchg
fwait
jae
mov
imul
jmp
cmp
pop
inc
xor
add
xchg
jae
iret
mov
or
mov
and
jbe
mov
in
or
add
fimuls
xchg
mov
icebp
push
out
ss
jp
pop
push
out
push
jge
xchg
and
push
ficoml
inc
jb
fisubrl
ret
gs
inc
stos
sub
lret
shl
or
or
lods
js
loope
sub
push
inc
subl
in
pop
push
fsub
sbb
shr
in
or
jbe
dec
pop
sub
ljmp
mov
cmpsb
sbb
dec
aaa
scas
mov
pop
das
xchg
fsubs
xchg
aam
dec
jne
mov
xchg
test
mov
mov
in
lcall
pop
cs
fcmovnb
pop
movsb
mov
bound
pop
jle
scas
call
mov
push
add
push
xor
mov
test
sbb
mov
xchg
pop
inc
push
xchg
xchg
sarb
cltd
mov
repz
push
cmp
mov
mov
dec
push
xlat
test
push
mov
dec
jl
outsl
cltd
jecxz
je
repnz
jb
ja
shrb
pop
sbb
jge
lret
jno
xchg
dec
or
push
les
jbe
lea
fidivs
repnz
sub
add
lods
and
and
ljmp
lret
fistl
dec
adcb
mov
push
and
jge
xor
mov
or
lret
mov
stc
sbb
lret
jb
shl
lcall
inc
mov
dec
cmp
mov
and
adc
inc
jl
rcrl
inc
cmpsl
sbb
mov
or
fcomps
adc
insb
int
cmc
test
sbb
push
stc
cmp
stos
xchg
mov
and
call
ljmp
lods
int
jl
xor
cmpb
push
pop
cmp
aam
add
push
or
into
fcmovnb
sahf
push
xchg
negl
pushf
add
loopne
fnstenv
mull
xor
mov
pop
and
jae
in
xchg
push
pusha
sti
mov
mov
cmp
cmp
xor
sbb
popa
frstor
push
sub
sbb
dec
xor
out
mov
pop
jp
add
pushf
mov
add
std
jae
sbb
cmp
xor
shll
or
inc
mov
add
add
xor
in
aas
cmovb
gs
fbld
cmp
mov
test
sti
in
mov
mov
add
sbb
inc
jb
pop
push
dec
adc
lock
push
cmp
dec
push
cld
mov
xor
xchg
lahf
sbb
sbb
inc
mov
insl
xlat
push
push
iret
rcll
mov
enter
in
xor
loop
or
lods
in
push
inc
repz
lock
ljmp
shrb
std
std
iret
and
mov
push
add
rclb
test
fildl
mov
jae
arpl
loope
or
outsb
outsb
das
adc
jnp
inc
mov
or
notb
mov
jge
xor
in
inc
cmc
int3
and
nop
inc
pop
into
sbb
dec
sbb
shrl
push
call
pushf
cli
push
outsb
popf
dec
xchg
adc
shr
mov
lods
in
mov
add
mov
repnz
and
mov
inc
add
in
cld
xor
sub
push
rdtsc
repz
in
outsl
cmp
or
negb
mov
lret
clc
call
jl
outsl
je
jge
ja
add
std
jmp
jmp
push
push
cli
sbb
sbb
outsl
or
jnp
adc
pop
fistps
clc
mov
bound
scas
ja
mov
push
aas
sub
leave
std
int
push
popa
lea
popa
cmp
cmpsb
and
mov
lret
icebp
test
dec
push
fnsetpm(287
push
push
insb
cs
cmp
mov
jge
cmp
sbb
mov
cmpsb
loopne
pop
cmp
push
pop
jmp
dec
mov
data16
push
out
in
jnp
mov
jmp
imul
scas
xlat
and
loop
insb
daa
push
leave
xchg
adc
addr16
shrb
movsb
notb
sarl
push
roll
adc
push
int
push
and
cmc
lea
rolb
movsb
lret
loopne
fstps
rol
arpl
mov
and
fidivrl
sub
inc
in
pop
mov
cmp
xor
cmp
test
push
xlat
lds
mov
nop
xor
jg
jecxz,pt
or
inc
lcall
push
loope
push
sub
mov
jne
or
mov
jns
insl
shl
mov
push
icebp
js
sahf
outsl
or
in
andps
cmp
xor
pop
stos
jmp
dec
mov
shlb
cmpl
sar
lcall
push
sbbb
sub
outsb
lea
aad
ljmp
sub
stos
cmpl
pop
pop
ja
adc
sbb
jecxz
and
nop
call
jmp
fscale
scas
lds
loop
loopne
or
jnp
leave
arpl
fldenv
adc
inc
decb
sbb
je
aas
call
pop
adc
repz
xchg
lahf
add
inc
xchg
or
movsb
dec
jmp
jo
adc
xchg
popf
loope
jns
jp
add
imul
xchg
add
cmp
mov
add
sarb
jp
pop
movb
inc
in
daa
push
add
adc
mov
xchg
sub
or
aas
cmpl
das
mov
dec
test
mov
jecxz
push
out
imul
mov
in
adc
cwtl
sub
popa
xor
test
mov
in
push
inc
dec
jae
pusha
cwtl
fs
jns
and
lods
or
cmpsl
lcall
mov
shlb
movsl
ss
out
lods
stc
out
jns
mov
sub
in
jno
mov
fimuls
cmp
inc
lea
pop
mov
aaa
and
sbb
lret
test
xor
cld
lea
add
js
sahf
xchg
ret
jns
and
pop
decl
les
jle
pop
cmp
movsl
sub
aad
add
jge
lcall
aaa
cmp
rcrl
rcl
and
dec
xor
div
mov
ror
fwait
add
push
sub
mov
inc
dec
testb
pop
xchg
clc
cmc
sbb
les
ja
pop
into
jmp
sbb
push
inc
cmp
sti
mov
in
gs
add
cmpsb
push
cld
inc
int
dec
cmp
aad
sub
push
cmp
mov
mov
test
sub
add
lock
popf
movsl
and
lods
sbb
sbb
push
call
mov
stc
mov
inc
fldt
push
xor
xchg
jb
adc
in
cmpsl
aam
sbb
sbb
adc
outsl
fldenv
int3
dec
jge
icebp
and
pop
shlb
xchg
into
stos
mov
out
adc
out
dec
sub
aad
add
jecxz
scas
mov
adc
push
push
mov
imul
subl
pop
femms
xchg
jmp
into
jno
nop
fadds
aam
notb
mov
add
mov
shll
adc
mov
jecxz
xor
and
cltd
aas
dec
inc
sub
das
mov
arpl
xor
test
jle
in
inc
stos
cli
call
sub
jne
or
test
sbb
icebp
inc
jp
gs
cmc
sub
jecxz
sbb
dec
jecxz
ret
hlt
sub
subl
adc
es
into
mulb
cld
push
sti
aaa
fst
idivl
pop
decl
lcall
adc
push
ret
shl
std
jle
stos
and
dec
shlb
xor
push
mov
sbb
pop
sti
lahf
adc
aam
mov
cli
cmp
jae
jmp
adc
mov
in
in
mov
lods
push
sti
enter
out
cld
mov
adc
ret
fimull
sbb
sbb
rcll
mov
jne
jae
outsb
loop
xchg
jecxz
jmp
leave
mov
sti
push
fidivs
aad
in
sahf
mov
xor
sub
enter
sub
call
ret
andl
dec
imul
jb
andb
cmp
jmp
lods
aad
mov
ds
aaa
mov
popa
mov
loopne
cmpsb
jmp
ud1
mov
inc
insl
adc
aaa
mov
add
movq
stos
mov
test
xor
mov
lea
notb
fstpl
sub
jmp
pop
adc
scas
fs
push
aad
das
sub
cmp
cld
pop
and
out
sbb
iret
loopne
fisubl
fldl
shll
imul
push
and
xchg
aam
fildll
out
push
xchg
add
sub
nop
ds
clc
jb
or
movsl
dec
fucomip
sub
into
sbb
push
mov
mov
adc
mov
and
mov
in
fnstenv
aad
icebp
into
das
or
adc
adc
hlt
loop
cmp
mov
movsl
push
lds
scas
mov
pop
pop
pop
and
mov
cs
and
les
lea
pop
adc
push
and
xchg
xchg
inc
cmp
movsw
aas
mov
cmpl
or
pop
inc
or
push
or
arpl
push
mov
fsubl
add
cmpl
cs
dec
sti
lock
xor
sub
hlt
lcall
inc
push
and
xchg
and
jb
xchg
sbb
movsb
out
push
adc
out
inc
mov
xor
rcrb
mov
jmp
adc
add
insl
sub
js
loop
xchg
adc
decl
jp
cmc
sbb
mov
and
das
xchg
xor
jmp
mov
iret
push
and
cmc
sub
jp
jae
inc
movsb
stos
sbb
gs
adc
dec
inc
aas
sub
pop
sahf
movsl
pushf
cmp
mov
cmpsb
loopne
and
adc
fld
incl
mov
cmp
xchg
repz
xchg
mov
jmp
in
call
jnp
pop
icebp
push
ret
mov
mov
dec
jmp
cli
in
sub
sbb
outsl
adc
rclb
push
stc
xchg
test
xchg
fwait
and
fidivs
pop
sbb
push
push
inc
imul
push
faddl
mov
mov
int
das
sbb
gs
data16
adc
test
loop
aad
negl
xchg
lds
pop
mov
ja
rcrb
into
enter
sbb
fcoms
jp
mov
xor
fcmovbe
mov
and
push
ret
scas
jge
jle
push
movsb
xor
je
add
test
pop
cmp
movsb
inc
ljmp
dec
loopne
mov
push
mov
es
mov
xlat
cwtl
xchg
sub
push
stc
in
lcall
pop
int
add
and
mov
mov
mov
shl
jbe
fisttpl
ret
or
and
std
cmpl
out
push
sub
rcll
fidivrl
jle
or
repnz
gs
mov
repz
imul
sbb
or
into
aaa
dec
sub
insb
pop
icebp
sbb
sub
inc
cmp
outsl
xlat
jg
xchg
sbb
lea
loop
add
xchg
inc
mov
xchg
cwtl
and
shl
adc
lret
sub
lret
or
ret
jnp
or
loop
xor
sbb
sub
dec
aaa
or
ret
pop
cmpb
test
daa
cmp
dec
mov
cmc
fisubl
jl
mov
sub
out
pmullw
out
mov
insb
inc
mov
out
mov
sub
hlt
and
dec
lcall
pop
mov
add
jp
fdivrs
in
shrl
ljmp
orl
ret
andl
adc
cmpsb
sub
adcb
push
ljmp
xchg
mov
push
adc
test
lock
inc
dec
mov
jns
mov
sbb
jnp
xor
cmp
cmp
jmp
sbb
dec
cld
adc
loop
mov
ficoms
push
push
push
in
xchg
adc
add
stos
lds
inc
je
shrl
loope
add
bound
pop
xchg
mov
aaa
mov
js
test
xchg
push
or
aad
add
data16
pusha
inc
popa
fldt
mov
jne
stos
add
mov
pop
mulb
mov
add
ret
mov
loope
cmp
js
fmuls
or
xlat
mov
outsb
dec
sbb
jo
mov
sbb
xchg
testl
das
xchg
dec
sub
jae
inc
pop
mov
test
inc
es
iret
sub
ss
add
enter
xor
jge
jg
mov
push
out
leave
mov
ljmp
push
sbbl
mov
and
inc
ret
mov
cmp
sbb
enter
mov
leave
xor
xor
jle
mov
inc
nop
adc
pusha
add
sar
jge
out
pushf
mov
mov
cld
imulb
imul
mov
push
add
mov
pop
push
repnz
jmp
fcoms
mov
push
test
mov
mov
mov
push
test
out
jne
mov
icebp
fsts
xor
cmc
mov
sbb
je
jbe
int3
add
lods
jmp
pushf
xchg
cmpb
daa
in
add
test
mov
popf
and
daa
dec
sbb
sub
mov
mov
mov
xor
sti
jbe
cwtl
cmp
or
jecxz
sbb
jmp
sbb
mov
into
mov
cli
xor
call
scas
test
adc
and
mov
inc
or
inc
mov
mov
lret
imul
pusha
pop
or
in
mov
xchg
test
mov
jmp
pop
int3
adc
fstl
sub
adcb
vpcomud
pushf
sbb
xor
cmp
jb
push
rcll
push
push
cltd
add
ret
clc
and
jge
inc
push
out
sbb
sub
rcrl
dec
sub
movsb
fwait
xchg
push
dec
loope
shll
and
mov
pushf
sbb
jecxz
xlat
jnp
sbb
jns
les
enter
cmp
scas
into
in
fcoml
aaa
sahf
rclb
cmp
stc
pop
adc
sbbb
adcl
dec
add
mov
cmp
dec
pop
xchg
and
lods
cwtl
fisubrl
add
xor
ja
jmp
mov
fucomp
lds
js
shl
loop
rolb
adc
das
cmp
loop
jns
jne
insb
jo
push
in
sub
sbb
mov
lds
scas
int
das
xchg
inc
repnz
mulb
sbb
push
rcrl
pusha
mov
sub
mov
mov
rcrl
and
push
aas
inc
xchg
mov
jp
pop
mov
xchg
iret
and
push
sbb
adc
adc
sbb
mov
js
dec
scas
xchg
inc
mov
test
pop
sbb
adc
or
aad
inc
mov
push
ds
xor
xchg
mov
hlt
ljmp
fdivs
shrl
push
push
jbe
push
outsb
xor
mov
pop
fld
add
mov
or
lret
sti
ja
push
incb
ja
notb
ss
xor
sub
push
lock
mov
adc
adc
xchg
jae
je
add
dec
push
icebp
lret
jmp
inc
or
cmpsb
mov
or
cmp
jno
popf
jo
pop
cmp
fildl
out
cmp
push
nop
or
fucomi
clc
aad
rcrl
inc
dec
pop
pop
push
std
fisubs
addr16
adc
insb
sub
lock
shll
cltd
jmp
cmp
shl
or
adc
in
sti
out
mov
test
cli
mov
xchg
and
lock
fimuls
sbb
jo
aas
push
loop
push
loopne
lret
or
sbbl
push
fisubrl
mov
sar
popf
daa
les
aas
jmp
lret
lods
fistps
xchg
movsb
cmp
movsb
lods
mov
outsb
sbb
lods
push
pop
jo
rclb
test
pusha
ss
in
sbb
adc
ja
ds
or
cmpb
into
pusha
rcl
sahf
sub
mov
adc
jns
cmpsb
idiv
inc
outsb
pop
cmp
cmp
sbb
dec
fisubrs
sub
scas
and
cmp
push
pop
and
out
add
pop
push
scas
cmc
inc
inc
pusha
loope
jp
cmp
ja
push
sysexit
mov
jae
mov
xchg
pop
shll
or
cmp
and
sub
add
dec
jnp
leave
mov
leave
ja
cs
pop
das
xchg
mov
cmp
fisttpl
out
dec
push
mov
out
fs
inc
fmull
sub
inc
xchg
jge
imull
sahf
out
ds
mov
mov
int3
or
enter
add
movd
ror
lcall
fsubs
adc
out
sbb
sub
or
dec
push
xor
mov
inc
xchg
pop
inc
hlt
cmp
fs
shr
sbb
cmpsl
xchg
cld
xchg
jmp
mov
sbbb
mov
inc
cmp
repnz
jle
mov
imul
fwait
mov
arpl
xchg
xchg
jno
jnp
mov
ja
pop
pop
icebp
call
negl
mov
jnp
fmull
imul
xchg
mov
jp
jb
gs
movsl
dec
dec
jns
fwait
in
dec
and
and
inc
sbb
or
pop
aam
outsb
mov
movsl
pop
mov
xchg
mov
sub
addr16
es
mov
cwtl
iret
pop
xchg
lea
adc
pop
pop
pop
pop
rorl
pop
dec
pop
fiadds
mov
mov
push
aam
nop
cmpsl
jge
and
adc
mov
sbb
sti
and
ss
outsb
ja
out
add
cmpsb
nop
push
in
lret
fcomps
mov
shr
ret
scas
in
dec
xchg
adc
sub
cmp
xor
push
cwtl
pop
dec
xchg
scas
jg
xchg
popl
mov
jg
popa
cs
add
jle
int3
push
in
dec
rorl
mov
jecxz
or
or
mov
sbb
out
ds
push
fistps
xchg
inc
and
cs
dec
xchg
inc
cmpl
inc
data16
jmp
mov
push
mov
jae
xor
mov
outsb
aad
jns
lcall
adc
loopne
rorb
insb
testb
fidivrl
xchg
push
adc
mov
aas
aas
lcall
jecxz
sbb
inc
xchg
fnsave
push
stc
dec
pop
cmp
incl
or
mov
jg
pop
or
aas
push
dec
cs
mov
adc
xor
cwtl
cmpsb
xchg
sbb
pop
add
into
inc
dec
pop
scas
push
jle
sarl
sbb
or
imul
icebp
mov
adc
push
mov
inc
sbb
shll
loopne
cmpsb
lret
ss
mov
shrl
or
mov
pop
mov
xchg
out
ds
outsl
ss
out
into
dec
mov
mov
ljmp
push
rcl
dec
lea
fcomp
lea
pop
and
cmp
test
push
stc
cld
ret
addr16
faddp
cltd
mov
lret
rorb
mov
movsb
in
xchg
sub
cmp
data16
xchg
loopne
and
adc
leave
jecxz
movsl
shrb
outsb
or
test
add
aaa
loope
adc
or
test
sub
idivl
cmc
mov
iret
lods
std
bound
into
pop
sti
nop
fcompl
insl
push
mov
xor
lods
gs
mov
pop
mov
mov
jb
add
cwtl
dec
in
andl
ss
movsl
testl
data16
js
clc
fbld
pusha
pushl
out
jno
sub
inc
dec
adc
popf
pop
mov
xorl
mov
sub
pop
sbb
mov
pop
stos
fyl2x
and
push
mov
fmull
jp
ljmp
scas
js
push
mov
rol
dec
scas
and
scas
add
insl
jle
cli
test
ja
repnz
aaa
mov
popf
pop
inc
shlb
cmp
mov
rcll
xchg
inc
cmp
push
xchg
push
fistpl
sbb
push
and
rcl
jecxz
int3
lret
mov
js
push
loop,pt
sbb
push
arpl
inc
aad
lods
mov
pop
jo
pop
shll
movsb
or
adc
aad
add
xlat
xchg
arpl
loop
pop
gs
dec
rorb
mov
and
gs
cmp
jbe
ret
roll
push
push
lea
sub
shlb
adc
fcompp
mov
mov
jbe
xchg
stc
pop
xchg
and
inc
sub
sub
jno
push
cmp
cld
out
cltd
ja
xchg
fs
xor
adc
xchg
test
jns
cltd
xchg
cli
sub
shll
loopne
cmpsl
xor
imul
into
add
mov
sbb
push
or
into
push
js
pop
lret
jns
push
cmpsb
pop
ja
loope
inc
jl
jns
into
pop
imul
int3
popa
movsb
test
pop
cmp
sbb
pop
sti
popf
inc
mov
mov
mov
cmp
jo
xlat
adc
lods
push
cmpsb
jo
paddw
inc
das
and
lods
jg
js
adc
xchg
dec
mov
lret
jecxz
gs
dec
pop
mov
mov
pop
mov
aaa
sbbb
stos
xchg
and
aaa
jae
add
sbb
rcr
dec
mov
xchg
sub
repnz
adc
mov
adc
xchg
fnstenv
fisttpll
and
or
lock
in
test
lahf
mov
xchg
and
push
mov
test
sbb
gs
mov
jecxz
dec
test
cmp
add
addr16
mov
add
sahf
adc
jae
push
dec
cmp
out
js
sub
sub
mov
imul
and
adc
adc
sahf
jge
sahf
and
scas
pop
lret
sbb
sub
mov
bound
lret
xorl
icebp
push
push
lret
cwtl
jmp
in
sti
mov
xchg
push
push
fs
add
fwait
sub
or
adc
ror
push
lret
and
repnz
mov
push
fsub
sbb
pop
xor
ljmp
push
push
push
mov
decl
push
cmpsl
cli
adc
test
jle
scas
mov
pop
outsl
fcmovb
xchg
mov
insl
imul
cmpsl
into
jge
aaa
jl
jp
or
std
repnz
xchg
stos
and
and
xor
adc
xchg
loop
stos
divb
cmp
inc
es
nop
aad
scas
sub
scas
in
or
jns
insl
fisubs
adc
xor
ret
cld
xor
dec
xchg
movsb
push
arpl
cmpsl
push
dec
repz
fucomip
cltd
sar
test
push
lahf
push
ss
shlb
out
add
xor
scas
mov
add
xchg
sbb
pop
mov
lea
ljmp
sub
cmp
pop
fistpll
mov
sbb
shll
push
adc
or
mov
add
inc
xor
js
cs
adc
inc
xor
push
pushf
adc
xlat
mov
push
iret
sub
std
add
scas
jg
out
push
int3
dec
cmpsl
popa
or
xchg
sub
into
out
data16
adc
mov
outsb
movsb
xchg
out
cld
mov
into
cmpsb
or
mov
or
fldenv
and
test
iret
insl
lods
fidivrs
mov
nop
arpl
fs
sahf
xchg
fwait
push
push
fisttps
test
out
in
ds
pop
movsl
cmp
cwtl
leave
int
sarl
mov
pop
sub
pop
jle
dec
lods
in
sub
xchg
cs
sahf
adc
mov
loop
loope
std
shl
add
pusha
mov
jo
inc
aaa
cmc
push
lret
mov
test
cwtl
icebp
sbb
stc
sbb
sub
sbb
xor
pop
fstpl
or
stc
dec
fidivrl
push
sbb
adcb
push
aas
adc
js
jne
lods
xchg
or
sbb
jmp
sti
cmc
dec
cmc
cmp
fists
fcom
adc
insb
push
or
fcoms
mov
mov
xchg
inc
xor
push
leave
sub
pop
inc
lret
stos
xor
repnz
lods
popf
pop
lcall
fistl
or
mov
addl
add
test
push
loopne
xchg
mov
das
lods
daa
aaa
and
inc
push
sub
lods
ds
xchg
lret
popl
add
mov
pop
mov
sub
jmp
cmpsl
call
inc
sbb
adc
jl
lret
or
loopne
ljmp
or
xchg
imul
data16
jmp
fistps
sbb
inc
ror
in
lea
nop
xchg
movsb
inc
popf
adc
mov
fidivrs
jb
xor
adc
mov
and
loop
or
xchg
adc
xlat
xorb
ffreep
dec
xchg
call
cwtl
pop
aas
out
jno
sahf
insl
push
mov
or
adc
loop
into
insl
dec
ja
and
sub
dec
lods
jnp
xor
enter
fs
mov
shr
addr16
sub
mov
push
jle
fcmovnb
in
popf
sub
stos
inc
jbe
hlt
add
mov
leave
push
mov
pushf
loop
xchg
icebp
ret
adc
or
nop
lret
lock
popa
mov
sub
loope
movsl
fs
sub
mov
jmp
mov
mov
or
leave
add
fdivrs
xor
loop
sub
inc
and
int3
pop
add
and
push
lret
inc
pushaw
add
rolb
bound
inc
adc
aas
outsb
mov
sub
out
lret
adc
je
or
test
mov
fiaddl
fucomi
xchg
mov
mov
push
sub
rolb
sbb
pop
std
pop
xchg
fnstcw
mov
pop
rclb
orb
add
test
dec
lahf
jle
std
cmpb
xorl
push
pusha
pop
fwait
sti
lcall
cmp
mov
movsl
xor
nop
xor
insb
mov
mov
xchg
add
jb
mov
jecxz
xor
and
adc
pop
std
repnz
les
test
or
add
mov
add
sbb
and
mov
setb
lcall
fisubrs
sbb
lods
mov
jecxz
jns
xchg
and
movsl
sub
pop
mov
ss
data16
push
into
scas
xchg
andnps
outsb
lods
mov
cmpsl
sub
push
imul
push
push
out
test
sahf
stos
pop
pop
mov
sbb
inc
dec
lahf
fcomi
mov
fsubl
xor
sub
lcall
fsubr
lret
xchg
repnz
mov
push
mov
xchg
pop
dec
imul
dec
addr16
roll
sti
xchg
popf
xchg
and
jb
or
add
dec
add
addr16
scas
or
stos
pop
idiv
push
add
xchg
out
repz
hlt
leave
je
dec
pushf
in
aad
cmp
inc
cmp
pop
imul
dec
jg
pop
mov
mov
add
mov
xor
xchg
mov
adc
fs
add
inc
scas
in
insl
repz
sub
das
sbb
mov
mov
es
dec
jo
out
sti
je
jl
es
adc
imul
or
mov
gs
aam
lret
gs
stc
ss
in
jb
insl
pop
bound
call
stos
xlat
and
ss
add
dec
inc
dec
loopne
inc
out
jp
adc
xlat
call
std
jo
jecxz
adcl
imull
push
test
clc
jp
aad
pop
jmp
dec
cmpl
add
and
and
and
scas
das
arpl
frstor
es
add
popa
inc
les
scas
and
mov
call
jecxz
fucomi
insb
mov
jo
push
pop
xchg
aas
stc
test
rcrb
xor
push
jecxz
cmpsb
and
clc
mov
icebp
aam
mov
daa
sub
push
mov
add
lds
push
lcall
xlat
iret
push
or
xor
leave
mov
mov
and
and
fnstcw
lods
enter
cwtl
scas
fsubrl
inc
out
sub
fsts
daa
or
push
jne
add
cld
clc
loop
aad
push
add
jp
pop
cmpsl
sahf
testl
rorl
and
cmpsb
cwtl
pop
in
fsubrs
nop
xchg
jns
aam
add
loope
xchg
sub
dec
dec
ja
jg
mov
jo
ret
cmp
fldt
push
adc
shrl
subl
inc
mov
daa
je
mov
pop
mov
jae
int3
xor
jecxz
loope
insb
not
cmp
cmpsl
push
sub
push
mov
fwait
mov
inc
bnd
orb
inc
ja
cmp
xchg
xor
ss
adc
test
mov
mov
inc
push
cmp
mov
jnp
jmp
gs
pop
jnp
and
mov
aad
nop
jge
sarb
xor
test
mov
je
xor
push
les
je
sub
jmp
pop
push
push
stos
mov
jnp
xor
jo
lock
rcrl
cmp
add
in
int3
xchg
pop
push
aad
pop
mov
cmpsb
loope
hlt
mov
jecxz
cmp
jnp
sub
adc
in
loope
inc
and
add
cmp
dec
push
int3
cmp
stos
sbb
mov
mov
loop
jb
or
clc
xor
stc
outsl
pop
jle
and
xlat
jo
sub
add
cs
pop
jmp
in
mov
enter
ror
popf
aaa
scas
loop
pusha
out
xchg
mov
mov
inc
or
insb
mov
rol
inc
lock
xor
ret
push
add
fs
rcrl
xchg
push
add
jae
adc
xor
jns
test
out
icebp
shlb
sbb
out
rorb
icebp
outsl
jp
test
popf
and
in
mov
mov
popf
mov
int
out
mov
cltd
push
enter
popa
stos
sbb
imul
inc
sbb
inc
ljmp
outsb
das
andb
rcll
pusha
mov
leave
push
and
int3
cmp
or
adc
nop
cmpb
sub
fs
jae
sbb
pop
mov
xor
cmp
andl
inc
cmpsb
insb
mov
push
xor
mov
in
xor
in
subb
cmp
and
loop
mov
cltd
push
dec
xchg
cmp
adc
dec
pop
sbb
mov
sbb
sub
popa
jno,pt
aam
daa
or
cmovae
adc
mov
ds
lret
xor
shr
and
fstpt
pop
inc
rorb
dec
jae
fwait
xor
xchg
sbb
mov
pusha
xchg
sbb
pop
push
inc
jl
fists
iret
xlat
mov
jg
faddp
dec
shl
enter
testb
ficoms
shr
out
incl
aam
cmpsb
push
adc
jle
push
cmc
mov
popa
pop
cli
cmpb
jecxz
addr16
aad
icebp
pushf
push
xchg
sahf
pop
adc
rorl
or
jo
pop
mov
and
ret
mov
mov
int
push
popf
fsubrs
icebp
adc
xchg
jb
jl
scas
stc
jmp
lock
scas
or
and
or
xor
fiadds
negb
add
loope
cli
pop
shrb
xchg
cwtl
pop
pop
push
iret
inc
ljmp
dec
inc
aaa
es
push
lret
shl
xchg
sub
pop
cmpsl
dec
mov
mov
lods
pop
xchg
faddp
mov
xchg
lret
or
repz
rol
pop
jnp
xchg
cwtl
xor
fmulp
adc
xchg
out
insl
jbe
adc
sbb
xlat
sbb
mov
push
pop
shrb
data16
pop
icebp
testb
push
dec
div
dec
xorl
cmc
jnp
mov
leave
mov
pop
mov
pushf
addr16
adc
repz
mov
pop
pop
or
mov
sub
arpl
jmp
mov
hlt
jmp
mov
mov
mov
or
or
sbb
push
aaa
xchg
out
scas
insb
mov
pop
mov
rclb
dec
rorl
sub
lahf
jnp
jge
mov
stos
cmp
xor
xor
cmp
push
scas
in
and
or
and
js
sub
inc
bound
aas
imul
mov
cmpsl
xchg
jecxz
or
std
ss
dec
repnz
push
and
rcll
mov
pop
dec
jb
les
test
cli
bound
sub
stc
imul
jp
test
sbb
in
and
and
lcall
jbe
and
or
dec
cmp
xchg
mov
jl
repnz
pop
mov
outsb
push
lea
addb
addb
mov
lcall
and
xchg
and
in
imul
and
mov
adc
sahf
add
and
push
loope
push
mov
mov
push
bound
xor
sub
mov
mov
jno
sub
cmp
jmp
cmpsl
cmp
dec
int3
mov
stos
pop
jle
in
aas
push
sbb
lcall
jae
out
scas
cmpsl
xchg
sahf
cwtl
cmpb
les
hlt
call
dec
mov
xchg
inc
sbb
repz
ret
out
subl
cmp
sbb
jno
add
mov
or
mov
push
inc
hlt
dec
cmp
lahf
sbbb
push
rolb
cs
bound
push
dec
cmp
dec
or
mov
scas
pushf
cltd
cmpsl
add
mov
lds
daa
push
lock
mov
jg
xchg
jecxz
out
xchg
imul
dec
rclb
subb
mov
cwtl
cmpsb
rorl
jbe
lock
les
xchg
bound
mov
inc
mov
jns
popf
mov
out
cmp
fwait
out
sbb
mov
jle
or
cmp
addr16
jne
scas
ret
in
in
vmovhps
icebp
loope
gs
stos
divb
inc
mov
and
jle
pop
xchg
mov
std
adc
pop
fisttpl
sarb
lret
push
dec
imul
loope
cli
cwtl
push
add
fisubs
ss
call
pop
mov
adcb
xlat
add
adc
cmc
cwtl
rorl
stos
sbb
call
xor
inc
xor
adcl
push
stc
dec
sbb
sub
push
cld
inc
pusha
icebp
sarb
mov
jns
pop
mov
jmp
inc
add
data16
mov
mov
or
mov
push
xor
lret
jbe
mov
sbb
dec
mov
push
fldenv
or
cmp
stc
adc
js
or
addb
jmp
incb
adc
dec
pop
dec
ljmpw
pop
mov
lea
pop
or
inc
xor
dec
mov
call
in
out
testl
jnp
loopne
add
icebp
jo
insl
xchg
and
adc
imul
repz
aam
ja
mov
inc
ffreep
add
xchg
setne
xchg
xchg
sbb
jbe
es
xchg
xor
in
jl
out
sub
push
add
lret
jne
push
lret
ficomps
mull
and
and
hlt
leave
inc
stos
les
in
fnsave
xchg
sbb
sub
test
fiadds
or
sbb
sub
stos
mov
xchg
jmp
lock
add
out
cmpsb
cli
mov
mov
insl
jp
sti
jno
vunpcklps
adc
pop
cmp
cmpb
enter
push
mov
std
jecxz
mov
pusha
cli
mov
icebp
shrl
iret
xchg
ret
popa
ds
aaa
icebp
mov
cli
mov
pop
imul
nop
push
xchg
aaa
jb
scas
incb
outsl
ret
lock
and
leave
test
push
insb
lods
and
fisttpl
sbb
ds
test
xchg
frstor
jnp
sar
cmp
pusha
jo
fstl
fbld
push
jno
das
add
inc
icebp
mov
clc
das
pusha
cs
ret
pop
inc
mov
out
jg
xchg
mov
add
ss
pop
push
cwtl
loop
mov
inc
mov
cltd
cli
fldcw
js
daa
dec
mov
xchg
xchg
stos
push
jae
dec
inc
lret
sub
mov
scas
sub
adc
sub
nop
xchg
fisubrs
call
jb
pop
clc
cld
xchg
jo
push
pop
xor
xchg
movzbl
xchg
subl
or
mov
dec
jo
mov
sub
push
scas
leave
imul
pop
lods
into
loope
and
daa
aad
and
das
int3
lahf
icebp
jp
adc
xchg
push
out
mov
aad
add
dec
popa
shll
adc
adc
aad
inc
mov
dec
insb
jne
daa
xchg
addr16
add
int3
jo
or
push
pop
xor
aaa
aaa
adc
and
data16
push
lods
std
gs
lods
mov
mov
jne
fsub
add
pop
pushf
cli
jno
push
sbb
or
mov
and
aad
fsubl
or
xchg
dec
movsb
imul
pop
icebp
or
fisttpl
mov
in
out
mov
lahf
jge
lock
jle,pn
add
fstl
call
dec
mov
lds
pushl
and
not
ljmp
sbb
mul
pop
push
dec
pop
adcl
mov
stos
pop
push
je
adc
fucomp
mov
les
mov
shlb
pop
sbb
mov
adc
dec
xchg
or
add
sub
ljmp
push
rcr
shll
fcmovne
xor
fists
mov
imul
dec
sbb
push
dec
mov
push
ljmp
xchg
mov
or
xchg
imul
sahf
sbb
lea
daa
iret
outsl
jle
fsubl
dec
pop
sbb
lret
loop
cmpsl
loopne
jbe
fldenv
repnz
leave
xchg
add
sti
insl
add
cmp
imul
call
sbb
pushf
pop
jecxz
mov
and
mov
shll
push
rcr
xchg
jecxz
sbb
in
cld
call
sub
or
cmp
ljmp
adc
add
push
outsl
add
into
mov
lods
dec
adc
or
or
pop
inc
cs
xchg
inc
jle
adc
js
dec
loop
or
enter
jo
cmpsl
fistl
cmp
or
mov
fucomp
adcl
jmp
in
lods
sbb
rorb
xchg
out
icebp
repz
popf
hlt
adc
sti
add
lcall
stos
dec
and
mov
enter
jl
pop
push
lret
xchg
scas
mov
cmp
jne
push
inc
adc
or
insb
push
in
mov
leave
popf
xchg
mov
jno
lcall
push
jb
cmc
mov
jno
iret
dec
in
lahf
idivl
test
lret
dec
xor
rcrl
ds
mov
mov
lahf
xchg
xchg
xor
imul
lock
mov
das
inc
and
dec
mov
insb
int3
adc
cltd
sahf
std
or
lods
mov
dec
push
pop
xchg
call
xchg
je
add
lcall
and
addb
mov
lea
dec
and
inc
out
jno
fistps
sub
arpl
cmp
inc
jae
jo
xchg
hlt
xor
push
int
dec
outsb
jb
xchg
insb
test
dec
mov
push
push
push
dec
adc
sbb
push
dec
mov
loopne
fildl
daa
sub
mov
jbe
popa
sbb
mov
xor
lahf
jno
fdivrs
ret
stc
js
pop
addr16
adc
mov
shlb
cwtl
addr16
cltd
pop
sahf
mov
ret
xor
fdivl
push
mov
lods
orb
fwait
pushl
add
orl
test
rolb
sarl
sub
shrl
in
icebp
pusha
cmpps
fisubrl
insl
cld
into
jns
mov
mov
sar
enter
sahf
lods
fistl
punpcklbw
jne
pop
push
std
adc
add
or
mov
push
clc
sub
pop
mov
decb
std
inc
cld
sub
ds
popa
out
stc
push
sub
inc
shrl
adc
add
mull
mov
fisttpll
pop
test
sahf
mov
cmp
rcrl
loop
adc
cltd
fbld
jbe
adc
adc
xor
ficoms
fiaddl
les
jnp
and
fdivrp
lock
lds
dec
mov
fwait
xor
xor
sbb
cmpsb
loop
xchg
test
or
adc
push
leave
lret
test
leave
jg
in
mov
mov
jb
or
adc
call
mov
subl
fisttpl
lahf
or
faddl
scas
subps
cld
flds
xchg
jo
mov
xor
loop
aad
sub
pop
imul
int3
sahf
test
in
stos
out
fadd
cli
loop
movsl
mov
pop
lea
outsb
add
gs
iret
or
mov
mov
mov
js
mov
mov
gs
mov
icebp
or
adc
sub
stos
mov
adc
mov
pop
jbe
add
or
adc
or
or
push
push
push
dec
inc
aas
ret
sti
push
outsl
adc
cmp
fidivl
popf
or
pop
out
popfw
imul
daa
cmp
movsb
mov
mov
cmpsl
xor
lret
add
cltd
negb
add
rcrl
fsubr
or
jno
and
or
in
rclb
mov
je
loope
notb
std
and
mov
in
insl
jl
fmul
push
rorl
push
or
pusha
mov
cmp
dec
icebp
jge
xchg
pop
adc
daa
mov
mov
cmc
inc
inc
scas
cs
pop
adc
in
lods
call
dec
imul
test
xchg
jmp
sub
pop
mov
rclb
sti
sub
incb
sub
lods
cmpsl
es
cmpsb
cmpsl
add
adc
jne
mov
sub
cmpsb
mov
or
jmp
adc
inc
stc
fsubs
es
xchg
movsl
hlt
in
gs
jl
outsb
loop
lcall
jnp
jle
sarl
std
cmp
adc
sarl
rclb
inc
les
push
dec
decb
outsl
jnp
hlt
cmp
and
pop
imul
add
xor
add
loopne
cmp
add
push
jecxz
sbb
inc
mov
daa
sbb
and
lcall
xchg
dec
mov
inc
jle
cmp
repz
mov
aaa
loope,pn
out
push
push
jne
mov
xchg
jne
aas
mov
in
insl
iret
aaa
mov
addb
dec
fsubrs
inc
mov
xor
mov
jp
mov
push
dec
xchg
dec
nop
jp
cltd
cmpb
in
push
lds
arpl
jle
xchg
xor
fiadds
shll
movsb
mov
xor
insl
mov
sahf
pop
arpl
rclb
jp
pop
or
mov
cmp
cmp
cwtl
lea
pusha
sbb
cmc
shrb
mov
mov
push
add
cmp
mov
jns
cmp
call
in
and
arpl
xchg
cld
out
pop
sti
jl
push
lret
add
stos
cmp
adc
cli
sbb
adc
mov
ljmp
into
outsl
lods
lret
test
cmp
inc
rcr
mulb
jnp
decb
scas
push
in
bound
push
inc
aas
adc
pusha
fsubl
inc
mov
jecxz
sbb
lods
cli
fisubl
insb
and
push
test
mov
stc
sub
in
call
and
push
push
or
and
xchg
xor
jns
ret
xchg
jp
sub
scas
inc
xor
sub
cmp
pop
jmp
push
pop
imul
shlb
jecxz
xchg
stos
jl
aas
pop
xor
add
lret
inc
pop
dec
cmpb
jno
cmp
clc
pop
ja
lret
inc
adc
add
mov
mov
adc
addr16
aam
adc
adc
pop
imul
rol
push
mov
xor
cmp
lret
pop
push
scas
xchg
mov
subb
rolb
outsl
sbb
cli
push
jo
loop
adc
gs
add
push
xlat
hlt
xchg
inc
cs
push
in
add
sbb
inc
int3
lfs
mov
jb
insb
jp
dec
xor
popf
or
shll
cmp
jp
adc
add
lret
cmp
mov
mov
xchg
sub
pop
out
ljmp
adc
inc
cmpl
xchg
mov
inc
icebp
push
mov
mov
repz
inc
loopne
pushf
push
or
jp
mov
and
and
sahf
fisubrl
in
ss
add
xchg
pop
and
add
push
std
xchg
dec
xchg
sub
outsb
pop
xchg
xchg
mov
gs
scas
sbb
sub
mov
or
jecxz
jmp
pusha
sbb
inc
sbb
add
ds
sub
iret
lahf
cs
jne
loopne
lea
arpl
test
inc
es
push
mov
test
lock
out
into
dec
push
pop
mov
cmp
pop
mov
pop
leave
ret
clc
jnp
out
dec
pop
mulb
std
jb
lret
std
jle
mov
into
push
aam
std
jecxz
fucomi
cmp
xor
sti
cltd
cld
loope
xchg
ret
adc
call
and
out
shr
mov
js
adc
dec
cld
cmpsl
rorl
ss
aad
sti
and
sub
fwait
jo
lods
mov
mov
cmp
cs
clc
mov
sarl
ret
cvtpi2ps
int3
cli
outsl
mov
in
adc
xchg
xchg
mov
sti
push
add
mov
xchg
fimull
xchg
pop
sti
fldenv
out
or
sbb
outsl
xor
ja
cmp
idiv
or
bound
xchg
cmp
ret
test
jp
mov
jae
rcl
lea
mov
dec
stc
jb
insl
loop
aad
in
aad
xchg
cmp
cli
xchg
lret
leave
adc
jb
push
je
jg
dec
push
mov
sub
frstor
sbb
mov
pop
adc
pop
jp
mov
out
or
jns
mov
add
jmp
jmp
adc
neg
cmc
xor
aas
test
push
filds
adc
and
lret
mov
pushf
xchg
and
sub
dec
cli
dec
fisubrl
adc
fdivr
data16
aaa
in
xchg
ds
or
jmp
pop
mov
clc
loop
std
lods
mov
test
ret
adc
out
test
dec
mov
jecxz
sbbl
outsb
inc
xchg
gs
push
call
mov
cmp
inc
add
cs
mov
or
out
cmc
mov
test
cmp
shrb
sar
cmc
mov
inc
jl
adc
or
dec
inc
stos
adc
jo
cli
in
loopne
adc
mov
xchg
ficoms
inc
fstpl
pop
popa
push
pop
popf
jae
popf
movsl
xchg
mov
addr16
icebp
or
xor
popf
pop
cmpsb
cmpsl
mov
sbbl
mov
inc
add
fdivr
loop
mov
push
insl
rorb
lret
sub
sbb
dec
push
lss
int
cmpsl
xchg
shrb
clc
push
lds
or
mov
or
and
add
lcall
cmp
xchg
push
fwait
sub
dec
mov
scas
fsubr
cwtl
xor
addr16
push
call
or
mov
inc
and
inc
pop
push
push
sahf
or
inc
lret
pop
xchg
incl
jb
int
inc
dec
xchg
add
in
sbb
adc
inc
push
ret
loop
cltd
xor
shll
sti
lret
sbb
jno
sub
repnz
or
inc
push
cmp
je
dec
fnsave
xlat
js
or
test
shr
dec
cmc
call
addl
mov
adc
popa
pop
fidivs
test
mov
dec
popa
int3
out
cmp
sub
xchg
shlb
inc
test
sub
xchg
test
mov
ds
shlb
mov
popl
and
sahf
adc
or
mov
mov
pop
add
rcll
or
push
test
scas
push
repz
popf
daa
jno
jne
pop
fistpl
lahf
cltd
add
repz
mov
pushf
pop
adc
xor
xchg
push
orb
mov
and
in
push
les
inc
repz
fisttpl
fcoms
push
ja
ficoml
sub
mov
stos
lds
aaa
jmp
test
shll
add
in
add
xchg
jbe
or
icebp
lcall
lods
sub
dec
cs
xchg
stos
and
xchg
bound
movsb
mov
movsb
lods
inc
int
dec
mov
sub
fimull
push
jmp
imul
adc
add
jmp
jecxz
inc
sub
xor
shl
movsb
movb
cmpsl
out
xchg
js
sar
sbb
lods
adc
mov
inc
fistpll
xchg
clc
push
out
aas
je
sbb
notb
outsl
adc
push
lods
repnz
aas
sub
scas
cmp
rolb
adc
addr16
imul
iret
aas
sub
enter
dec
xchg
xchg
repnz
push
xchg
dec
ss
dec
out
into
rcll
into
ret
insb
daa
xor
push
mov
sub
jmp
dec
xor
inc
mov
out
push
pop
sbb
pop
cmpl
clc
jne
insb
test
sbb
mov
lock
lea
inc
js
jge
loope
adc
aas
je
xor
xor
in
add
nop
fdivrl
jne
pop
int3
or
int
and
or
icebp
movsb
cs
sub
mov
pusha
pop
sbb
outsl
sub
xlat
icebp
lcall
icebp
shrl
ds
out
sub
mov
cld
inc
adc
inc
mov
lds
push
sbb
mov
dec
fbstp
fst
add
hlt
xchg
dec
add
and
stc
cmp
je
dec
push
xor
jns
cmp
fistpl
popa
gs
inc
aaa
and
ror
or
mov
mov
sbb
xchg
arpl
and
mov
les
pop
pop
mov
stos
fimuls
or
xchg
mov
inc
push
cmc
jno
sbbb
arpl
fisttpl
mov
or
and
jl
das
es
out
cmp
inc
jle
push
sbb
iret
adc
int
or
mov
mov
std
mov
adc
mov
push
xor
and
and
pop
push
lods
fnstenv
inc
push
inc
fldcw
sub
pushf
jnp
mov
sbb
mov
push
stc
and
inc
mov
fistpll
pop
adc
lock
jbe
xchg
sbb
mov
pop
cmp
loopne
or
outsb
sbb
jb
pusha
mov
push
mov
les
dec
aam
nop
pop
jl
gs
loopne
jae
xor
pop
addb
out
jns
pop
les
and
push
arpl
add
shrb
fstl
mov
push
cs
mov
std
mov
push
orl
cmp
aas
push
adc
decb
jns
scas
iret
add
pop
dec
mov
lahf
dec
test
test
sub
adc
mov
lock
popa
dec
mov
dec
sub
mov
mov
pop
in
add
fidivl
cmp
imul
cmp
mov
clc
mov
clc
aas
mov
into
dec
jle
or
je
lret
lock
push
cli
imul
pop
jno
or
adc
sub
mov
and
dec
shll
and
inc
fwait
shl
test
or
imul
fs
jae
add
pop
decb
pop
mov
add
adc
inc
scas
das
pop
dec
jb
ss
sbb
mov
adc
sub
mov
test
pop
int
lods
rcll
jge
mov
fisubs
imulb
getsec
repz
iret
ret
jnp
sub
lret
cltd
insb
fsubrl
mov
rorl
mov
scas
pop
out
mov
out
push
cs
adc
sbb
lahf
or
das
sub
jmp
pop
jo
inc
roll
jecxz
xchg
xor
stos
aad
mov
pop
rcrl
push
pop
aad
xchg
cmp
sbb
dec
aad
icebp
ljmp
pop
loope
fsubrs
loope
jle
cmp
mov
es
out
mov
and
jnp
mov
mov
pop
and
lahf
out
sub
test
fmulp
sti
xchg
out
aaa
cwtl
pop
cmpl
add
mov
jg
mull
adcb
cld
inc
in
inc
adc
sub
dec
or
sub
sbb
je
dec
aaa
mov
arpl
dec
pop
jno
adc
stc
fildl
icebp
inc
push
and
adc
pop
or
cld
cmpsb
push
in
xor
out
iret
scas
push
jge
inc
testl
shll
xor
mov
xchg
ljmp
shll
dec
xor
push
scas
dec
mov
aas
pop
outsb
add
fs
sub
add
cs
adc
pop
xor
aas
mov
iret
fs
sub
sbbb
iret
sub
addl
je
mov
sti
adc
xchg
fnstcw
cmp
sub
out
add
jbe
mov
adc
mov
cmp
jnp
mov
cmova
aam
dec
jmp
test
pop
lods
lods
dec
push
push
dec
mov
pop
push
lds
inc
push
ds
xchg
in
xchg
pop
ljmp
popa
inc
adc
mov
fcmovb
lea
das
aad
sbb
jne
dec
cli
outsl
dec
in
adc
add
mov
pop
pop
out
mov
repnz
ficoml
jb
cmp
mov
dec
cs
stos
mov
fdiv
imul
xlat
daa
ror
rcrb
test
adc
xchg
cmpsb
jbe
jecxz
mov
jp
add
pop
mov
out
and
jmp
push
mov
addr16
or
popa
and
push
clc
sub
insb
adc
cwtl
rcrb
scas
pop
xchg
repz
lahf
inc
mov
sbb
loop
inc
push
push
mov
push
popa
or
adc
fildll
mov
pop
xchg
xacquire
dec
cmpsl
shlb
sbb
jno
pop
fdivrl
add
test
ja
push
inc
rcll
add
add
enter
mov
rol
repnz
lds
pop
xorb
fdivl
and
or
adc
shr
popa
into
cmp
les
jle
dec
jl
loope
pop
or
test
gs
push
ret
loope
mov
or
enter
mov
repnz
cmp
and
cmpsb
mov
in
repz
adc
push
mov
cwtl
and
sbb
xchg
insl
cmpsl
lret
cmp
cmpsl
outsb
mov
sub
ret
mov
mov
or
dec
sub
lea
inc
adc
add
ss
adc
and
sti
scas
sub
inc
sti
add
cmc
mov
das
xchg
inc
and
outsb
jns
push
lret
ret
js
push
mov
jno
in
dec
jle
xchg
pop
mov
xchg
ss
mov
in
ja
lcall
popf
dec
mov
mov
nop
pop
push
and
xchg
jb
or
faddl
jne
adc
fcoms
ret
sub
test
sbb
mov
aaa
jecxz
cld
mov
jle
xchg
lods
inc
sbbl
and
xchg
ror
scas
arpl
ljmp
mov
push
in
std
adc
lret
fildll
cmp
push
stos
or
shlb
push
jns
arpl
test
repnz
sbb
xor
jg
sbb
stos
es
sarb
in
mov
xor
mov
mov
lea
inc
cmp
das
push
pusha
pop
cmp
jo
mov
cmp
out
jmp
std
sub
ret
jbe
leave
test
repnz
adc
pop
andl
xorb
sti
insb
stos
arpl
das
stos
aam
inc
cmp
pushf
cwtl
outsl
stos
cmp
loopne
inc
lret
cwtl
or
ja
test
sub
ds
int3
mov
xchg
loop
std
daa
mov
mov
aam
push
aad
adc
pop
ret
rcrb
mov
div
mov
sbb
push
test
cmpsb
pushf
aad
and
add
jno
mov
push
add
ljmp
fs
push
and
mov
fwait
jge
fs
pop
xor
or
cwtl
add
pushf
xchg
sahf
sbb
loopne
and
sub
aam
pop
stc
pop
pop
mov
insl
add
movsb
pop
lea
sti
and
inc
jg
test
jg
mov
inc
mov
fwait
int3
into
adc
ret
iret
popa
sub
arpl
cwtl
movsb
lock
ja
inc
test
test
scas
xor
push
sti
icebp
fs
in
cmpsb
sahf
xchg
mov
mov
pop
roll
adc
idivl
clc
iret
jae
cmp
lds
jg
inc
mov
sbb
mov
mov
repnz
push
stos
movsl
hlt
sarb
or
and
out
test
pop
jne
jb
sbb
sbb
shll
xchg
sti
adc
push
int
sub
jae
cli
push
jl
sbb
mov
pop
mov
insl
sub
popf
cmp
lahf
mov
addr16
ret
popa
pop
or
mov
jns
icebp
scas
lock
pop
xor
loope
mov
cld
dec
jae
pushf
or
xchg
pop
iret
rcll
add
ret
add
pop
jnp
cld
je
cmp
and
jno
cmpsl
repz
cwtl
repz
hlt
std
xchg
add
lods
subb
pop
call
xchg
sbb
xchg
mov
jge
insl
adc
sti
arpl
icebp
mov
mull
das
lcall
cmc
lea
xor
inc
stos
iret
addr16
sub
std
xor
sbb
insl
out
and
adc
in
fistpl
cmpsb
cmpl
xchg
xor
mov
es
mov
sahf
nop
imul
sbb
cli
shlb
test
mov
pop
cmp
aad
dec
jno
les
add
call
push
mov
mov
testl
subb
lea
insl
cmp
popa
shrl
nop
ljmp
jns
jecxz
xchg
dec
hlt
in
test
sub
hlt
int
insb
pop
pop
xor
fmull
add
pop
lock
in
pusha
ja
sbb
fisttpl
stc
or
mov
into
xchg
arpl
sbb
mov
sbb
lods
mov
les
and
js
add
fwait
mov
add
dec
jne
scas
aas
and
loope
mov
ds
xor
xor
mov
popa
push
loope
mov
jb
notl
xor
or
fnstenv
sbb
mov
rcll
fucom
pop
mov
fisttpll
lods
loopne
cmp
mov
cmpb
add
fdivr
outsb
push
cltd
out
addr16
int
in
outsl
fistpl
sarb
xor
mov
push
xchg
js
mov
xchg
add
or
push
leave
sahf
pushf
enter
enter
adc
cmp
daa
pop
sub
test
adc
mov
dec
ljmp
rcr
adc
cmpsl
into
xchg
sar
cmp
push
xchg
imul
lds
fs
idivl
pop
xchg
or
lahf
dec
and
icebp
pushl
or
xchg
lahf
rclb
xor
call
cltd
mov
sbb
outsl
push
mov
inc
or
mov
cmp
adc
clc
sarl
push
dec
shrl
test
pop
daa
dec
dec
subl
call
dec
and
pop
push
pop
cs
push
inc
push
and
pusha
sahf
iret
lret
sub
mov
mov
pop
jno
test
shl
pop
inc
mov
cmpsl
test
cltd
jno
lods
add
es
jae
mov
es
xlat
push
inc
iret
aad
mov
push
xor
dec
sbb
ss
jns
out
outsb
ss
mov
dec
adc
pusha
test
daa
out
or
inc
push
inc
ret
adc
imul
cmc
mov
mov
mov
popa
test
mov
pop
cmp
stc
jl
inc
shll
adc
in
scas
inc
ljmp
push
dec
inc
insb
stos
or
pop
mov
pusha
mov
nop
sub
fistps
push
jg
and
cmp
inc
push
jmp
scas
cmp
mov
mov
xchg
mov
sub
out
addr16
dec
je
outsl
mov
pop
push
mov
dec
fwait
jecxz
adc
inc
loopne
outsl
outsb
hlt
or
pop
stos
xor
and
xor
cmp
das
xchg
dec
push
sbb
bound
mov
adc
push
test
push
aam
jb
mov
lds
aad
xchg
out
inc
push
or
pop
push
hlt
sbb
or
fs
push
add
mov
xchg
add
adc
mov
ret
pop
cmpsb
xor
inc
mov
out
push
aam
popf
subl
mov
xor
dec
and
test
mov
imulb
loop
jp
jns
out
sbb
mov
jb
sbb
imul
in
mov
call
dec
sahf
mov
dec
mov
xchg
cld
jno
push
adc
out
cmp
xchg
sub
insb
push
jnp
lret
mov
xchg
adc
cltd
cld
jns
in
out
xor
and
ret
sbb
xchg
push
push
jae
dec
je
inc
repz
or
int
mov
and
cmp
xor
imul
dec
sbb
aas
mov
es
cmc
aaa
lea
dec
sub
and
rolb
insb
jle
fdiv
cmpb
pop
ss
addb
jae
cmp
lock
pop
xor
xor
data16
es
sbb
enter
mov
cmp
and
out
pusha
es
dec
rcl
mov
out
lret
std
push
jecxz
out
push
in
fstpl
add
mov
mov
data16
dec
dec
pop
cmp
inc
iret
push
scas
push
or
fs
sub
hlt
lret
add
cmp
xor
lret
sahf
adc
xchg
sub
xor
icebp
out
insl
lret
sub
lret
pop
lds
jbe
scas
lods
insl
inc
pop
pop
lcall
in
adc
xor
mov
in
mov
pop
mov
mov
mov
add
and
mov
sbb
fsubp
ss
pop
cmp
nop
add
fisubrl
or
dec
rorl
cmp
push
cmc
dec
xchg
mov
xchg
adc
and
in
adc
xchg
mov
jl
enter
test
xchg
mov
add
in
adc
mov
and
andb
enter
xlat
xchg
xchg
mov
and
je
xor
shrb
lcall
bound
sahf
in
mov
cmc
mov
jne
ret
mov
ja
push
movsl
jecxz
bound
mov
imul
jge
jae
sti
mov
ja
movb
xchg
pop
pop
arpl
push
mov
xchg
mull
fxch
fdiv
sub
or
xchg
popf
xchg
shrl
mov
cld
mov
sub
je
inc
push
es
popfw
jge
arpl
push
jae
mov
mov
sbb
sbb
addr16
jbe
add
or
cmp
sub
dec
mov
adc
in
mov
in
fldt
mov
das
adc
cmp
xor
mov
out
fcomip
push
or
dec
inc
mov
mov
xchg
lahf
sarb
into
xchg
or
adc
pop
jp
lock
test
dec
outsl
adc
mov
mov
adc
ja
push
pusha
je
add
mov
imul
sub
cli
and
lcall
push
xor
test
pushf
aaa
mov
push
outsl
sub
pop
mov
fistpl
push
xchg
ficompl
xchg
xlat
das
mov
inc
leave
dec
repz
out
test
inc
fisttps
mov
push
add
adc
add
sarb
popf
jg
inc
in
add
aas
mov
fnsave
dec
xchg
repz
mov
cmp
cmp
xlat
lods
sub
sahf
pop
jle
pop
inc
pop
rorl
std
inc
test
jmp
daa
daa
aam
push
pop
repz
fnstcw
push
movsb
xchg
jle
cmp
popa
jmp
pop
sub
jmp
mov
andl
xlat
jnp
or
cmp
cmp
jb
jno
in
outsb
dec
out
push
inc
fidivrl
enter
clc
clc
ds
push
or
shl
jl
repnz
adc
ja
int
sti
push
fwait
mov
sbb
bound
cmpb
mov
mov
adc
jno
cmp
jge
outsl
test
test
and
dec
repz
scas
mov
sbbb
dec
xchg
inc
movsb
inc
xor
cmpsl
and
push
repnz
jecxz
lahf
cmpsl
mov
mov
frstor
int
test
xor
aas
fadd
inc
mov
jmp
call
cmp
in
adc
and
shrl
in
and
push
inc
mov
xor
inc
mov
mov
in
aaa
xlat
push
pop
add
or
pop
pop
loopne
push
pop
out
insl
imul
mov
and
xchg
add
jmp
xchg
ss
in
ja
push
jae
pop
mov
bound
dec
sarl
or
ret
das
sbb
out
inc
inc
sub
movsl
aaa
jecxz
jl
jle
adc
dec
in
mov
jo
rclb
cmp
dec
mov
jge
pop
outsl
sub
xor
push
mov
mov
mov
sti
decl
loope
cmp
jge
and
push
jmp
cmp
adc
je
or
xchg
cli
andb
fdiv
fistpl
xorb
mov
or
call
adcb
stos
pop
rolb
mov
rolb
fcompl
out
pop
push
das
mov
mov
push
stos
sbb
out
cmpsl
pop
cmp
jns
inc
mov
and
adc
aas
lds
push
pop
repz
pushf
xchg
adc
adc
adc
leave
or
movsb
and
cld
bnd
addl
out
lret
lcall
out
inc
daa
mov
sub
xchg
push
repz
add
mov
mov
cmp
mov
inc
mov
mov
lods
lds
sti
cwtl
mov
adc
sbb
xchg
stc
push
push
add
jmp
lods
ret
inc
mov
imul
lret
cld
lret
xor
imul
pop
push
push
jmp
scas
rcl
lods
mov
jge
mov
jb
pop
loop
stc
mov
push
xor
pop
jnp
dec
push
inc
ret
pop
cmpsb
lods
xchg
xchg
sub
in
imull
incl
pop
mov
push
push
jl
xorl
outsl
in
xchg
pop
or
jg
cmp
sbb
and
ret
xchg
pop
aad
cmpsl
aas
push
imul
push
cmp
fwait
mov
cmc
out
pop
sbb
adc
loop
dec
xor
orb
je
adc
rorl
jp
icebp
add
mov
jbe
mov
insb
pop
xor
out
bound
into
add
fsts
pop
or
stc
outsl
lcall
jg
lds
outsb
int
push
popl
mov
jno
mov
xchg
xchg
cmpsl
add
cltd
and
inc
mov
dec
pop
xor
and
jmp
pop
push
xor
daa
fcompl
dec
iret
pop
push
inc
xchg
mov
sbb
dec
and
mov
xchg
mov
outsl
in
int3
aam
xlat
lret
repz
pop
cwtl
mov
pop
mov
out
adc
mov
cmovle
jae
cs
push
out
insl
call
add
and
add
adc
test
dec
lods
jge
xor
stc
lret
add
aam
fsubrs
add
jmp
push
dec
mov
push
in
mov
pop
sti
sub
push
mov
nop
out
or
aad
xchg
es
into
and
pop
mov
out
push
cltd
out
out
imul
push
adc
add
pop
jnp
movsb
dec
xchg
jecxz
in
in
xchg
lea
loop
hlt
mov
scas
xchg
and
sar
iret
imul
cmpl
mov
xchg
sub
jbe
test
xlat
mov
jae
das
inc
lods
and
imul
imul
enter
aaa
ret
pop
js
lods
sbb
adcl
cli
sbb
mov
and
xor
mov
dec
fs
ljmp
scas
jge
mov
sbb
mov
es
xchg
add
popa
push
ror
pop
push
pop
ret
loope
xchg
mov
arpl
ficompl
cmp
push
rcl
jne
sub
fstp
cld
std
aad
dec
cmp
adc
cmp
and
sub
cs
mov
loope
cmp
inc
fdivs
lods
push
xor
xchg
cmp
cmp
adc
ror
cmpsb
and
fstps
fcoml
cmp
outsb
pop
cmp
cs
mov
cmpsb
mov
in
cli
push
bound
xor
ret
inc
xor
and
sub
xchg
mov
out
stc
mov
jl
dec
push
loop
dec
sub
loope
or
ficoms
fisttpll
lock
and
jo
dec
fwait
insl
push
pop
std
xchg
aam
out
aaa
imul
jl
lods
jle
addr16
push
sub
dec
rolb
loope
sub
movsl
shl
andb
test
rcrl
mov
sub
pop
fwait
xchg
rorb
or
iret
pop
pushf
stos
and
outsl
dec
fdivrs
arpl
pop
or
inc
pushf
imul
test
jne
mov
jmp
xchg
lock
jge
fistl
fwait
loopne
in
or
cmp
or
pop
push
sarl
and
push
lahf
or
lcall
and
cmc
test
enter
xchg
ss
out
fsubrs
mov
repnz
inc
test
imul
pop
popa
inc
pop
in
mov
inc
cmp
repz
das
test
mov
cmp
sub
xchg
hlt
adc
cltd
int
bound
add
icebp
les
inc
fdivl
in
pop
xchg
jbe
data16
setb
or
movsb
arpl
mov
jge
pop
push
mov
clc
lahf
adc
rcll
jbe
mov
pop
adc
loope
mov
jecxz
test
xchg
jnp
pop
test
mov
xchg
pop
rclb
mov
jnp
scas
repz
inc
popa
cld
add
mov
mov
push
inc
mov
inc
cmp
inc
cltd
lcall
int
fldcw
push
sbb
movsl
lock
sbb
jns
stc
inc
jne
or
xor
or
cmp
jle
pop
nop
inc
or
loop
mov
fnstenv
daa
push
loope
mov
sbbl
adc
and
or
xchg
cwtl
movsb
outsb
push
inc
cmp
mov
bound
jle
popa
push
negb
sbb
cld
out
sbb
pusha
mov
nop
mov
into
xchg
imul
mov
stos
sbb
cmp
lds
xor
jl
add
xchg
lods
xor
out
jae
push
cmpsb
fisubl
jne
sbb
cmp
lock
jo
push
out
or
lods
rcr
mov
push
lds
cld
or
cli
jno
sub
sbb
fmuls
push
pop
hlt
and
imul
cmpsl
xchg
sub
loop
xchg
jbe
push
sbb
mov
sarl
sarl
stos
rorl
push
push
sub
dec
adc
jecxz
inc
and
aaa
push
faddl
mov
aad
out
push
fiaddl
loopne
sub
movsb
daa
enter
jle
daa
mov
mov
lret
int3
jp
imul
fstl
fstl
add
nop
ljmp
cwtl
and
mov
movsl
cmp
mov
sub
pushf
ret
lret
cmp
fwait
rcll
sub
testl
dec
lods
pop
leave
sbb
incb
icebp
movsb
jae
shl
dec
les
incb
xor
ds
xlat
into
adc
in
fwait
sbbl
jp
js
lea
or
cmc
xor
loope
push
jne
leave
rcl
mov
pop
fisubs
cmp
dec
sub
or
fisttpll
movsl
aaa
jge
ret
pop
stos
aas
mov
mov
dec
and
pusha
movsb
adc
arpl
and
mov
lea
mov
fwait
rclb
in
pop
shlb
dec
mov
sbb
lods
add
arpl
iret
fsub
call
push
mov
pop
cmp
mov
jne
rcll
std
mov
in
aam
pop
lret
aad
add
jp
jo
pop
sbb
mov
xchg
cmp
mov
arpl
ja
push
ljmp
mov
ret
jns
or
mov
outsb
inc
xchg
roll
mov
cmp
cmp
fbstp
jno
xchg
roll
int
out
ds
or
imul
shlb
dec
inc
loop
enter
and
jne
jecxz
sti
adc
jl
loopne
sub
fidivrl
adc
testb
add
xor
jecxz
imul
xlat
mov
xor
xor
add
push
in
push
sub
lods
rolb
cltd
sub
cmp
in
imul
or
inc
out
push
popf
lods
fnstcw
cmp
mov
sbb
cld
sti
imul
es
pusha
sbb
outsl
adc
icebp
dec
pop
cmp
jns
sarl
fsubrs
pop
sbbl
inc
mov
lock
jle
pop
dec
enter
cmpsb
idivl
xchg
out
out
ret
xor
xorb
dec
mov
leave
mov
inc
sbb
and
iret
loope
lahf
insb
jecxz
daa
sub
loope
mov
test
rolb
mov
sbb
fldenv
jp
xchg
adc
aas
and
pop
int
jb
std
je
jae
stc
jmp
adc
jo
mov
scas
inc
sub
add
popf
loope
jle
lods
div
sbb
sarb
cmp
pop
aam
sub
sbb
or
repz
jae
adc
adc
gs
stos
popf
aam
pop
in
xchg
sbb
inc
lret
jns
in
insl
push
cmp
test
mov
loop
cld
fdivrs
xchg
in
push
inc
push
sub
mov
movb
int
cmc
and
add
sub
jns
dec
pushf
stos
adc
lods
mov
outsl
outsb
sub
les
aad
xchg
and
das
add
dec
jae
movsb
jns
xor
ss
loope
rorl
shlb
cmp
inc
loopne
mov
xchg
mov
stos
fcmovne
xor
dec
int
add
add
iret
jl
dec
dec
dec
push
sti
fwait
and
mov
shlb
sub
push
mov
ret
pop
mov
and
or
lds
ret
pop
inc
jbe
arpl
je
and
sahf
ljmp
aas
repnz
mov
cmpsb
mov
sti
out
mov
dec
lcall
arpl
mov
sub
xor
sti
add
aas
cli
push
sub
dec
ret
adc
dec
mov
push
mull
imul
dec
fbstp
mov
lds
mov
jecxz
dec
les
xchg
dec
xchg
xor
sub
mulb
ror
ret
cmp
pop
sbb
icebp
cmpsb
xor
repnz
mov
in
es
push
fwait
cmp
sbb
mov
push
add
cld
or
sbb
lahf
ja
add
jl
testb
ja
in
sbb
sub
inc
fcoms
movsl
jge
out
data16
dec
inc
fnstsw
pop
sbbl
inc
and
fbstp
dec
mov
mov
add
imul
nop
in
das
fs
out
adc
inc
or
lods
pop
pop
nop
cs
pop
movb
mov
adc
pop
pop
pop
sti
cltd
sub
sbb
or
inc
in
repz
lcall
rcr
shll
nop
mov
loopne
jl
sub
mov
sub
testb
ljmp
jl
sub
movsl
jo
sub
sub
sbb
and
test
popa
das
imul
pusha
fs
rolb
cmpsb
lea
push
mov
in
push
inc
hlt
jg
sahf
cmpl
inc
dec
lods
push
lret
xchg
pop
dec
ss
mov
pop
jnp
mov
dec
fnstcw
push
out
mov
clc
ror
push
fcomps
push
add
pushf
fimuls
adc
int3
ja
jbe
inc
addb
imul
xchg
in
sbb
xor
cmpsl
sbb
push
in
jns
dec
xor
push
mov
mov
ljmp
and
pop
adc
jb
and
stos
xchg
stos
pop
movsl
movsl
add
jo
pusha
inc
test
mov
cmp
mov
stc
lret
jp
flds
shll
mov
push
aad
dec
inc
pop
jp
push
in
inc
sahf
inc
dec
sub
mov
scas
push
adc
ljmp
xchg
mov
into
xchg
inc
mov
andl
int3
xor
das
lods
lahf
ljmp
in
arpl
fistl
pop
xlat
add
dec
mov
cmp
out
and
scas
fwait
ret
out
loope
lds
int3
dec
or
jnp
mov
mov
or
add
das
mov
aas
aaa
call
xchg
xchg
cmp
push
ss
aaa
push
sbb
pop
adc
hlt
faddl
mov
mov
loop
or
arpl
add
adc
leave
mov
inc
mov
jo
add
jl
pusha
testl
lods
xchg
daa
sbb
aad
adcb
call
jg
mov
daa
cwtl
xchg
mov
mov
push
test
xchg
roll
lret
add
or
push
aad
cs
ljmp
xor
cmp
mov
aad
in
and
pop
sbb
or
sahf
pop
cli
and
xchg
dec
dec
mov
cmpl
mov
pop
pop
fnstenv
mov
push
push
insb
test
rorl
cltd
jbe
dec
sub
popa
jge
cs
sbbl
loop
pop
test
div
push
jge
insb
sbb
movsb
push
repnz
cli
jb
mov
hlt
fdivrs
mov
ja
stos
stos
fisttps
fwait
das
insl
ds
addr16
sbbb
and
xchg
mov
push
repnz
test
mov
fbstp
ss
lret
xlat
gs
in
pushf
mov
xchg
repz
mov
out
les
lock
inc
insb
sbb
mov
mov
pop
imul
lock
fdiv
mov
inc
in
pop
xchg
and
call
mov
jb
les
cmp
divl
sbb
sbb
inc
inc
lret
jecxz
mov
aam
push
sub
mov
mov
add
xchg
mov
and
dec
aaa
test
cmp
jne,pn
sbb
mov
push
dec
cltd
mov
stos
movsb
subl
mov
lock
sbb
mov
adc
imul
sub
and
inc
outsl
push
scas
sbb
insb
imul
add
jecxz
ss
cmove
sbb
xchg
daa
push
mov
push
icebp
xlat
cmc
int3
add
push
sbb
jae
mov
add
mov
out
test
outsl
push
dec
lods
jmp
lods
testb
fidivs
and
and
cmp
pop
aam
lock
dec
add
scas
pop
cmpsl
jns
mov
mov
lock
into
rol
mov
dec
pop
xor
sbb
out
loope
adc
cmp
js
mov
ret
mov
stos
push
jl
cmpsb
cmpb
or
dec
xor
inc
lahf
cmp
pop
or
fbstp
cmc
and
fsts
jo
or
popf
push
fidivrs
and
jp
bound
test
in
test
sti
cmc
jns
testb
xor
push
cmpb
mov
ds
xchg
je
mov
pop
sbb
mov
aas
pop
add
out
psubsb
into
in
xor
cmpsb
add
xlat
stos
and
inc
in
add
popa
mov
out
iret
out
loope
fld
mov
pop
push
pop
test
pop
cmp
xchg
push
roll
mov
xor
loop
add
or
push
mull
int3
add
push
inc
mov
frstor
aas
mov
int
jl
sbb
and
pop
mov
pop
mov
nop
mov
mov
push
cmp
cs
push
mov
xor
sahf
push
mov
movsl
jbe
std
jae
pop
push
pop
loope
add
imul
mov
mov
in
bound
inc
sbb
cwtl
mov
jp
pusha
out
aaa
jo
cmpsl
sbb
jnp
pop
shlb
or
push
adc
jmp
roll
leave
movsl
iret
test
cltd
into
push
mov
std
sti
sahf
mov
stc
call
sahf
cmp
mov
in
xchg
fbstp
inc
cld
aaa
mov
xor
adc
or
nop
sub
cmp
popa
add
dec
xchg
lret
into
jg
inc
push
mov
sbbl
pop
jb
loope
adc
outsl
out
jp
and
jg
out
icebp
xchg
idivb
inc
jne
mov
xchg
test
out
jle
push
aam
mov
jb
add
es
scas
sbb
pushf
mov
out
movsl
mov
or
test
adc
in
adc
das
imul
sbb
or
dec
aas
push
dec
pop
xor
jl
rcl
inc
sub
fwait
outsl
shlb
scas
movsl
cmp
dec
mov
cld
cwtl
jp
mov
dec
pop
xor
bound
testl
enter
inc
ss
pop
pop
andb
test
adcl
push
xchg
inc
sti
xlat
das
mov
cmp
shlb
xor
inc
inc
loope
data16
icebp
cli
xchg
and
sbbb
ret
xchg
sub
sbb
addb
jno
or
push
push
repnz
and
ljmp
push
mov
lret
out
cltd
cwtl
jmp
dec
xor
jae
mov
push
mov
cmpsb
add
insl
movsl
inc
push
cwtl
sub
pop
cmp
mov
jmp
xor
enter
lcall
jl,pt
inc
cmp
push
nop
filds
push
in
xor
lahf
dec
push
sbb
xchg
lds
dec
lahf
xchg
out
xchg
push
insl
enter
shl
movsb
sarb
mov
cmp
enter
mov
aaa
dec
push
mov
mov
cmpsl
dec
xor
or
or
lods
cld
loopne
andb
xchg
xchg
nop
push
pop
sub
sahf
inc
insl
loop
fildll
mov
sub
or
clc
jg
or
inc
out
xor
mov
dec
and
jno
cmp
test
roll
hlt
dec
or
pop
jb
ljmp
jns
das
mov
testl
loop
movsb
cmc
jge
stos
dec
js
adc
int
cli
test
cmp
scas
gs
loopne
push
dec
setp
xor
ds
gs
montmul
cmpsb
ret
sub
fdivrs
or
jmp
add
clc
xchg
into
es
and
aas
test
xorb
mov
mov
gs
jbe
mov
lock
lcall
add
nop
aaa
inc
lods
cli
and
pop
dec
mov
movsb
pop
jg
or
insb
jno
mov
xor
pop
push
xchg
fsubrs
add
sub
cmpsb
rorb
lret
sbb
sbb
je
push
ja
mov
sbb
dec
sbb
mov
push
cs
std
fistpl
imul
nop
or
mov
icebp
das
mov
mov
push
xorl
lock
xchg
sub
int
orb
leave
push
lret
in
dec
pushf
cs
int
adc
fs
sbb
popf
push
hlt
sbb
fwait
pop
and
iret
jbe
repnz
xchg
pop
ljmp
xchg
icebp
repnz
ds
test
mov
xlat
imul
test
xchg
mov
loopne
fidivrl
and
xchg
xchg
adcb
mov
testl
mov
int3
mov
push
pop
sub
sarl
cli
xchg
add
xchg
leave
lods
cmp
or
ja
cmp
mov
inc
adc
cmp
xchg
movd
je
inc
adc
inc
adc
dec
mov
pop
into
ja
out
dec
daa
pop
xchg
orl
push
jmp
nop
fldt
cltd
dec
add
add
jb
mov
les
pop
bound
aaa
sar
outsb
insb
sub
data16
icebp
pop
neg
push
push
pusha
adc
xchg
jge
scas
inc
sub
andb
jbe
cwtl
insb
jecxz
call
dec
fildl
jle
add
jne
xor
lock
jl
and
mov
pop
fsin
scas
stc
jp
and
jns
add
nop
cmpsb
arpl
jp
sbb
mov
and
dec
sbb
addl
sahf
push
inc
outsb
lea
cmp
sbb
hlt
ss
dec
pop
push
push
or
mov
ret
dec
mov
adc
cmpsl
out
lods
stos
cmpsb
mov
jg
dec
lods
shl
out
inc
jbe
xor
in
pop
lock
pop
inc
ds
mov
sub
mov
pop
cmp
icebp
add
jo
sbb
cmpl
jb
inc
orb
adc
and
mov
push
push
cmp
adc
xchg
mov
dec
xchg
inc
fs
sbbb
dec
mov
inc
mov
fsts
mov
pop
inc
jg
xor
imul
jl
leave
cwtl
ss
cwtl
mov
stc
into
mov
pop
sub
add
mov
repz
loope
inc
push
out
and
jns
mov
into
mov
push
or
adc
push
jo
push
dec
loopne
stos
mov
lock
jae
xchg
pop
jmp
gs
stos
cltd
mov
jl
negb
sbbl
in
mov
int
enter
mov
aas
cltd
jae
xor
mov
jns
imul
and
iret
mov
xor
push
repnz
cld
mov
or
ss
inc
cmp
pop
inc
dec
loopne
mov
rcr
aaa
xor
movsb
mov
stos
ja
jl
call
test
scas
jle
movsl
lahf
aas
stos
enter
and
insw
xor
cmp
call
test
jnp
push
andb
enter
dec
mov
fs
and
dec
loop
push
or
sbb
enter
shl
dec
jb
mov
clc
push
ret
sbb
adc
adc
ds
loopne
test
mov
sbb
mov
jne
xchg
xlat
fldenv
ror
push
add
add
cmp
int
mov
or
aaa
jp
data16
xor
push
cltd
pop
adc
decl
gs
pushf
cmpsl
sub
aaa
fdivrs
rcll
rcr
lcall
stc
inc
and
cmpsl
cs
jb
jo
push
repz
in
imul
out
mov
sahf
dec
fnstcw
sbb
pushl
das
pop
pop
or
inc
sbb
jae
adc
push
dec
or
arpl
mov
sahf
daa
daa
mov
push
aam
jg
out
adc
hlt
xor
xor
test
or
imul
mov
addl
addr16
sahf
mov
cld
mov
push
insl
in
imul
shlb
cmc
sub
std
aad
mov
push
add
jecxz
int3
pop
out
add
add
mov
rcrb
das
mov
cmp
mov
xor
data16
xchg
out
cmpb
aam
mov
addr16
hlt
fistl
xchg
pop
cmp
ja
jl
movsl
fs
or
push
pop
cmpsl
mov
scas
jg
mov
fsts
and
inc
aas
cwtl
bound
gs
jne
fnstsw
jo
pop
loope
or
mov
es
cwtl
cs
jb
std
adc
in
fistpl
ljmp
ljmp
mov
iret
xchg
cmpsb
xor
push
mov
outsl
adc
and
mov
mov
and
test
adc
insl
js
push
std
mov
mov
call
in
pop
jge
cwtl
dec
sbb
add
fs
fstpl
mov
ret
adc
loop
add
lcall
loope
cmp
out
fstl
leave
test
sub
fisttps
outsl
inc
jns
mov
add
mov
int
add
add
xchg
dec
or
dec
sub
pop
jg
adc
inc
idivl
fidivl
fiaddl
xor
pop
pop
test
movsl
ret
adc
dec
mov
inc
and
push
push
mov
das
mov
mov
mov
shlb
js
xchg
pop
pop
xchg
arpl
jae
mov
xchg
repz
sahf
jno
fidivrs
repz
mov
test
sub
or
sub
aad
cmpsl
jl
and
dec
jecxz
push
inc
sbb
push
xchg
mov
inc
ficoml
or
and
rolb
enter
xchg
inc
sub
push
scas
push
push
adc
pop
xchg
sub
mov
decl
push
add
sub
inc
cwtl
js
cli
jecxz
pop
in
movsl
inc
gs
cmp
das
inc
mov
dec
sbb
loopne
out
lods
stc
shrl
and
dec
jecxz
mov
inc
sub
sahf
or
shll
in
lods
sub
ret
push
sbb
push
scas
sbb
mov
jnp
mov
scas
jecxz
inc
cmp
aaa
sub
ja
xor
cltd
mov
or
dec
pop
jle
divb
je
ljmp
ss
dec
frstor
pop
jno
mov
into
sti
xchg
int3
cmp
jne
dec
push
mov
sbb
out
adc
cmpb
cmp
pushf
xchg
sub
mov
repz
fs
sbb
adc
dec
adcl
mov
cs
fadd
lcall
shll
lret
fdivl
popa
imul
cwtl
sbb
js
sub
or
out
fsubrs
repz
add
adc
movsb
xor
push
xchg
imul
mov
sub
dec
adc
icebp
popf
jne
and
jg
fsubl
push
and
lret
inc
mov
call
notb
mov
jecxz
xor
out
push
popf
push
mov
popa
jge
fisubs
pushf
inc
lret
push
adc
dec
jb
inc
pop
mov
stos
dec
insl
jae
mov
mov
xchg
sub
xchg
sub
pop
outsb
and
dec
pop
xor
dec
clc
divl
aaa
xlat
mov
sub
push
push
or
daa
out
dec
les
jle
int
int
cmp
add
add
and
mov
test
xor
xchg
call
sub
mov
and
inc
jg
adc
mov
lock
inc
cmovno
into
in
sbb
push
adc
or
push
mov
repnz
notb
adc
mov
nop
mov
popa
test
cmp
mov
bound
dec
mov
pop
xchg
mov
push
fldt
mov
dec
rorb
mov
repnz
inc
cmc
pop
push
xor
sub
das
lret
push
mov
and
out
sbb
mov
unpckhps
ret
in
rcrl
sbb
lock
in
lret
jl
xchg
xchg
mov
scas
fcoms
sbb
sbb
gs
xchg
sbb
add
ficoml
mov
addr16
push
outsb
sbb
mov
cmp
scas
push
int
xchg
std
inc
xchg
sub
xchg
sbb
mov
and
pop
pop
sub
cmp
pusha
inc
ja
add
arpl
scas
ret
cmp
mov
pop
insb
sbb
xor
bound
cld
and
inc
mov
in
push
pop
pushf
test
imul
ret
ds
pushf
and
cmp
jne
fldt
fxch
pop
loope
shl
popa
cwtl
jbe
mov
dec
lcall
insb
add
mov
mov
mov
stos
sub
rorb
bndldx
pop
inc
jne
repz
push
negb
cli
and
outsb
shlb
ss
push
cmpsl
adc
cltd
mov
lock
pop
cmp
sahf
and
aaa
test
xchg
sbb
pop
aas
jl
add
inc
jmp
out
mov
sbb
cmp
rcll
add
clc
shrl
jmp
clc
mov
fidivrs
punpcklwd
dec
inc
lea
pop
lcall
add
addr16
adc
les
cli
aad
jne
movsb
add
mov
adc
mov
imul
xor
imul
inc
jno
add
dec
leave
add
mov
cmp
popf
jno
jnp
inc
adc
std
fsub
inc
lret
fisubs
xchg
test
sub
push
fmulp
std
pushl
std
dec
mov
inc
jo
mov
loope
mov
inc
cmp
cld
pop
insl
pusha
inc
xlat
imul
lods
push
pushf
in
push
insl
frstor
or
inc
lahf
scas
jne
push
lea
dec
not
push
pop
mov
jg
add
lock
mov
aaa
sub
aas
and
aaa
jo
sub
les
jg
and
ss
loopne
mov
mov
mov
fwait
popa
out
add
push
push
xchg
sbb
sub
adc
jne
jecxz
fnstenv
or
xchg
inc
push
cwtl
aaa
adc
cmp
imull
jae
cmp
hlt
mov
jecxz
sbb
clc
loope
sub
ds
cwtl
and
mov
push
lret
push
imul
and
cmpsl
cmpsl
mov
jb
fistl
inc
add
mov
xchg
ds
adc
push
mov
xchg
lret
xor
sub
mov
mov
jb
mov
outsb
inc
sahf
rcr
iret
clc
stc
in
data16
iret
dec
int3
or
mov
ds
imul
push
add
push
cmpsl
mov
sub
icebp
cmp
gs
addr16
loop
int
push
sarb
lods
stos
repnz
sbb
insl
add
jecxz
push
pusha
inc
xor
rcl
cld
bound
xchg
sbb
sbbb
jl
push
mov
lea
lcall
ds
mov
jns
imul
jecxz
out
in
pop
dec
inc
into
jecxz
jae
jae
mov
subb
pop
push
sub
mov
in
jb
or
ja
rclb
rorl
inc
push
insb
gs
inc
adc
inc
jg
jns
pop
outsl
mov
or
scas
out
pop
jmp
movsb
mov
jl
fistps
inc
xchg
and
repz
out
mov
pushl
test
das
sbb
or
insl
in
xchg
cmc
cld
or
dec
pop
lret
inc
jo
popf
out
or
sti
call
aaa
push
adcb
mov
cmp
iret
mov
adc
fmull
dec
cld
std
dec
pop
in
pop
jae
mov
or
cmpb
jae
fimuls
push
cmp
inc
sbb
mov
add
insl
xlat
in
cmp
or
shlb
leave
adc
loop
rep
daa
int3
or
stos
mov
mov
aas
dec
pop
pusha
push
loope
pop
sub
test
jne
sub
repz
out
mov
sbb
popa
scas
mov
mov
andb
push
cmp
and
cld
lahf
ja
into
fwait
clc
addr16
adc
mov
sbb
mov
in
push
inc
and
iret
xor
pop
icebp
mov
mov
inc
mov
xchg
lods
in
push
xor
arpl
pop
stos
movsl
sbb
rorl
pop
inc
xchg
lcall
adcl
les
insb
cmp
adc
add
adc
xor
repnz
aas
jle
idivl
fsts
xor
and
xchg
pop
lock
jno
xchg
cmpl
sbb
and
inc
test
test
enter
lahf
js
shlb
inc
mov
je,pn
stc
pusha
add
inc
push
mov
and
mov
jmp
cs
roll
mov
clc
test
xor
arpl
push
sahf
ret
int
das
pop
push
lahf
mov
and
fistps
mov
inc
mov
jg
mov
std
add
mov
xor
in
push
fstl
test
jnp
xchg
pop
jle
adc
mov
fstps
adc
mov
mov
mov
push
mov
add
mov
jp
add
and
jecxz
cmp
fidivrs
dec
adc
push
dec
mov
mov
inc
das
mov
pop
in
add
inc
mov
adc
outsl
add
add
fistpl
bound
mov
mov
mov
xor
xor
fdivs
jl
pop
imul
add
into
xchg
jge
push
cmpsl
idivb
shrb
add
push
xchg
sub
jns
sub
jecxz
in
mov
bound
adc
sbb
xlat
sbb
aad
cmc
dec
push
ret
lret
xchg
mov
pop
inc
inc
inc
popa
aaa
repnz
add
int3
dec
lock
imul
shlb
or
jne
mov
cltd
in
fistps
iret
or
out
imul
cs
mov
fnsave
sahf
mov
in
mov
dec
and
repnz
dec
push
aas
lahf
mov
pop
adc
dec
xchg
into
jecxz
mov
cmp
dec
das
add
sbb
mov
or
pushf
mov
pop
jae
movups
mov
mov
push
and
xor
pop
jmp
jmp
xchg
xchg
in
sbb
push
repnz
jnp
xor
psadbw
js
sbb
les
out
cmp
cld
inc
mov
mov
lret
sbb
std
lcall
mov
inc
mov
lods
in
cld
xchg
dec
aad
nop
cld
into
adc
cltd
mov
arpl
push
adc
fucomi
jg
push
push
inc
pushf
mov
test
jg
bound
cld
pop
test
rorb
fs
sbb
xor
pop
sbb
test
mov
sub
xor
stc
mov
fcmovnb
xchg
mov
out
es
or
test
push
push
push
mov
pop
xor
ficoms
andb
push
lds
mov
xchg
sbb
xorl
cmpb
dec
dec
and
inc
inc
sbb
lret
cld
adc
pushaw
add
push
fidivl
out
out
fldl
cmp
sbb
push
inc
xchg
ds
out
push
insb
dec
pop
xlat
out
jne
push
stos
arpl
lcall
mov
pop
repz
daa
imul
jle
test
fstpl
mov
rol
add
xor
popa
stos
shrb
mov
stos
push
icebp
sub
inc
xchg
or
pop
adc
movsl
push
add
mov
mov
mov
xor
mov
jb
sub
iret
pop
jl
pop
inc
and
push
movsb
xchg
jl
mov
fstl
mov
mov
xor
ss
or
fwait
cmp
inc
dec
cmp
sbb
pop
xchg
sbbl
adc
xchg
movswl
and
and
stos
das
std
sbb
orb
or
mov
popf
pop
sub
dec
push
and
sub
popa
pusha
inc
mov
cmpsb
add
das
sub
ja
pop
mov
sbb
insb
or
jp
add
cli
lock
jne
cmpsb
in
repnz
adc
rcrl
xor
jns
or
jg
lcall
pop
pop
fidivs
or
mov
xor
insb
repz
outsl
mov
daa
rcll
mov
cli
ror
arpl
sub
fcoml
xor
mov
adc
add
in
cmpsb
push
sub
lods
push
jno
ljmp
insb
and
pop
cmp
lahf
lret
pushf
insl
pushf
and
add
mov
adcl
xchg
xchg
imul
loop
mov
pop
mov
imul
pop
sahf
push
out
orb
clc
xor
bound
push
aaa
jnp
stc
jmp
add
std
stos
pushf
or
stos
xchg
cmpsb
jmp
out
push
jo
shlb
fldenv
jb
push
xlat
fwait
cmpsl
push
or
pop
std
fnstcw
inc
in
mov
mov
push
scas
mov
mov
fidivs
mov
sbb
sbb
fs
sbb
adc
mov
cmpsl
sbbb
xor
lcall
sarb
and
xchg
sarl
sub
fsts
sbb
or
mov
xor
xchg
adcb
stc
scas
mov
push
push
jp
in
mov
mov
ja
xor
xchg
es
inc
xor
push
stc
xor
xchg
or
loop
sbb
outsl
ret
jle
jmp
push
lahf
scas
mov
sbb
mov
out
hlt
aaa
jno
cli
sbb
xorb
cltd
in
mov
enter
enter
adcb
aad
outsl
push
xchg
sub
xor
inc
xchg
int3
sahf
xlat
push
aam
daa
fs
pop
inc
out
in
dec
add
xor
retw
jmp
jle
dec
jecxz
push
fs
jne
pop
ds
inc
push
ja
dec
jo
xchg
test
or
ret
inc
negb
xorl
xchg
xchg
ljmp
aas
xlat
mov
mov
shll
add
lahf
mov
and
pop
vpsubsb
pop
dec
pusha
push
add
mov
add
pop
pushf
jmp
imull
dec
jae
popa
mov
je
sub
or
jo
ret
fsub
pop
cli
pop
push
stos
repz
lea
jecxz
ss
aad
cltd
lods
dec
scas
hlt
mov
scas
test
int3
lods
fs
movsl
enter
push
or
aad
pop
and
pushf
fimull
iret
mov
and
lahf
ljmp
repz
loop
pop
mov
jo
mov
das
cmc
jbe
push
adc
dec
lret
pusha
sbb
int3
and
insb
cmp
test
cmp
push
pop
mov
add
pop
int3
hlt
mov
lods
js
xor
inc
mov
cmp
push
cmp
inc
rcr
scas
movsb
jge
dec
xlat
ljmp
mov
cli
and
mov
pop
fildl
mov
aad
outsl
mov
outsb
js
push
jb
nop
adc
mov
ret
mov
int3
mov
xor
cmpsb
jg
nop
lods
cmp
mov
lcall
pop
lock
cmp
xchg
out
les
frstor
cmp
sub
jne
or
insb
pushf
push
inc
ficoml
rcl
cltd
inc
jmp
sub
xlat
mov
xor
adc
loop
pop
pop
cmp
call
sub
test
pushf
inc
lret
mov
test
data16
rcrl
or
fcom
cltd
push
mov
xchg
int
lret
xchg
gs
pop
cmp
push
test
scas
mov
push
jmp
cmp
scas
jge
adc
sbb
sub
outsl
mov
mov
inc
inc
mov
insl
mov
inc
add
dec
psrad
mov
mov
pusha
xor
add
mov
xorl
stos
cwtl
mov
push
xchg
push
loopne
rcll
fsub
or
pop
mov
and
repnz
into
outsb
lret
call
cmp
sbb
mov
mov
xchg
fstl
lods
je
jae
xor
adc
scas
stos
jp
push
or
pop
js
ret
shrl
jge
add
or
das
push
push
cwtl
fisubrs
adc
loopne
outsb
andb
pushl
mov
ja
lock
add
movl
xor
sub
push
imull
cmpsb
or
jg
mov
mov
mov
inc
mov
adc
in
push
mov
stc
test
rcll
lods
fidivrs
outsb
fsubp
xchg
imul
test
imul
add
and
idivl
fisubs
mov
mov
add
xchg
or
sahf
mov
sbb
fnsave
sub
xor
xchg
ljmp
dec
ds
add
pop
ret
lods
inc
add
jmp
jno
jb
lcall
ja
bound
push
xorl
xor
xor
inc
in
in
aaa
js
inc
pop
imul
inc
rcll
int
mull
xchg
addl
cmpsl
dec
push
sbb
out
mov
fsubrl
lock
repnz
enter
fcom
push
mov
push
jo
xchg
mov
gs
lods
sub
imul
inc
int
cld
ret
jmp
iret
sub
loopne
cltd
dec
push
jbe
jg
mov
sub
mov
inc
cmpsl
pop
lret
or
jns
pop
inc
call
xor
xchg
mov
js
shl
popf
mov
fists
fcompl
adc
into
fcmovbe
popa
subl
into
xor
stos
insl
mov
cmp
scas
add
lahf
stc
subl
push
xor
fadds
pop
test
gs
mov
sub
mov
cmp
push
lods
mov
leave
frstor
pop
mov
xchg
jecxz,pn
cmp
rcrl
sub
ss
nop
push
sub
cltd
rolb
mov
outsl
and
inc
icebp
cmp
into
lods
test
cmp
arpl
imulb
pop
pop
addr16
cmp
cmp
lods
imul
mov
lock
xchg
or
lods
add
mov
mov
pop
push
xor
adc
mov
xor
push
cmc
aad
out
and
mov
ror
sahf
in
stos
pushf
repnz
mov
out
fsubp
aam
xor
mov
ja
cltd
jge
lods
mov
pop
mov
cmp
pop
xor
outsl
mov
add
mov
pop
cwtl
push
cmp
cltd
pop
adc
fdivs
cmpsb
insb
mov
jae
dec
jle
xor
pop
idivb
mov
cmpl
mov
pop
in
imul
jge
push
je
icebp
sub
sub
aam
clc
cmpsb
adc
xchg
insb
gs
cmp
js
push
outsl
test
add
sub
popf
xlat
enter
cmpsl
stos
out
lret
test
pop
outsb
jne
inc
push
jl
repnz
adcl
sbb
pop
in
out
sbb
je
xor
adc
mov
push
mov
sbb
mov
js
lods
mov
dec
jne
lods
andb
pop
inc
insb
mov
loop
cmpsb
loopne
out
jge
sarl
push
aaa
add
outsb
lock
add
mov
pop
aas
ret
andl
dec
pop
lods
lret
mov
push
outsb
cmpsb
add
mov
faddl
and
ficoms
or
in
push
pop
popa
lcall
and
in
mov
pop
sub
jl
shll
mov
outsb
je
gs
add
push
rolb
or
push
dec
addr16
lahf
mov
adc
xor
jnp
add
adc
addl
inc
mov
inc
cli
ds
ret
xor
out
jae
mov
movsl
loopne
faddl
xchg
ret
lds
mov
leave
test
sbb
jecxz
shlb
repnz
mov
iret
mov
add
hlt
das
movsb
enter
call
mov
fldl
xchg
loop
pop
adc
sbb
ja
pop
add
push
pop
mov
hlt
jae
add
std
daa
out
loop
in
push
movsb
cmpsb
icebp
push
dec
mov
and
push
leave
jnp
lods
pop
inc
push
scas
push
cltd
and
add
mov
subl
fwait
cmp
xchg
mov
inc
sbb
scas
je
xor
outsl
arpl
inc
push
in
pop
add
xchg
loopne
daa
dec
daa
call
adc
sbb
mov
hlt
push
test
inc
sti
ja
jge
xor
sub
jbe
gs
push
mov
arpl
sahf
add
xchg
cmp
pop
pop
data16
test
jp
out
pop
sbb
jbe
lea
add
xchg
scas
and
push
jbe
push
mov
leave
inc
cs
inc
les
out
lods
arpl
mov
inc
push
gs
repnz
xor
repz
pop
inc
xor
aaa
jmp
mov
repz
mov
xor
outsb
iret
pop
jge
enter
and
cmpsl
xchg
das
roll
xchg
sbb
fs
pop
jmp
mov
imul
fnstsw
ret
and
jp
insl
rorb
inc
and
jne
add
lret
inc
jo
cmpsl
push
testb
invd
mov
or
aaa
stos
cmp
mov
mov
sub
push
inc
movl
test
xchg
sub
je
push
push
rcr
jge
add
movsb
mov
jae
cs
push
xlat
xor
adc
dec
les
int
loop
sub
out
dec
std
jnp
mov
adc
mov
push
mov
aad
and
mov
out
lds
mov
jbe
or
insl
add
push
jo
hlt
mov
add
popf
arpl
addr16
in
push
dec
lret
lods
jmp
jne
icebp
sahf
sarb
mov
stos
mov
lret
aad
mov
test
sbb
mov
add
jle
mov
loop
xchg
jecxz
mov
mov
shrb
insl
int
and
inc
inc
inc
mull
fucomp
and
jmp
insb
adc
push
out
mov
xor
adc
popa
sub
mov
and
or
adc
ret
sub
sbb
cmc
add
and
inc
gs
sbb
cli
jge
fs
mov
mov
push
push
stos
aas
push
jb
xchg
adc
pop
mov
xchg
fildl
xchg
adc
mov
xor
int3
fnstenv
stos
out
push
mov
jno
jno
ljmp
dec
insl
mov
ret
dec
jne
fmull
inc
fidivrs
mov
movsl
mov
sub
xorl
and
gs
cs
add
cmp
sub
mov
and
lds
inc
adc
lods
es
lcall
cmc
clc
or
sbb
aaa
aam
pop
daa
jecxz
fsubrs
xchg
add
mov
imul
or
lcall
push
cmp
cmpsl
cmc
popf
loop
pop
cwtl
jmp
scas
mov
sbb
adc
pusha
mov
addr16
jnp
outsl
push
pop
out
xlat
inc
fcoms
lds
push
les
pop
ret
jge
jno
idiv
pop
adc
fwait
jo
aaa
mov
ljmp
popa
or
or
jbe
mov
into
cmp
push
and
xor
add
in
push
mov
cmp
sbb
inc
data16
jbe
repz
cwtl
xchg
adc
add
data16
mov
inc
cmpsb
sbb
xchg
jg
mov
xchg
movsl
pushf
and
xchg
popf
sahf
dec
out
sub
adc
xchg
aaa
hlt
mov
push
jne
pop
push
incl
pop
repnz
mov
jbe
mov
push
jb
xchg
cmp
pop
cmp
sbb
std
inc
push
dec
out
cmpsb
ret
mov
jge
adc
add
pop
cld
leave
mov
dec
pop
mov
clc
jl
pusha
in
dec
in
jno
pushf
mov
sub
insl
insl
arpl
cmp
lret
or
jbe
adc
add
jae
pop
inc
shl
in
sbb
outsl
sub
int3
unpckhps
rcll
push
push
pop
and
sbb
mov
and
or
aam
pop
std
iret
xor
repnz
mov
int3
loop
sbb
cmpl
cmp
adc
adc
pop
in
addr16
jo
adc
mov
cmc
jg
ljmp
dec
sub
and
lcall
sbb
adc
pushl
aaa
jecxz
xor
mov
mov
sbbl
mov
inc
xor
aas
mov
shrb
in
lock
sbb
test
or
mov
shlb
ret
out
sub
and
push
push
orb
xlat
pop
push
lret
movl
xchg
xor
aad
lods
pop
mov
jge
sbb
pop
adc
repz
popf
jno
enter
sbb
push
sbb
sti
jecxz
mov
xchg
bnd
push
jecxz
jg
pop
or
out
jle
jno
sbb
jb
and
inc
dec
push
fwait
in
cmp
fistpll
sbb
xor
xlat
or
or
dec
test
lods
and
jo
insl
imul
das
imul
mov
sbb
pusha
scas
mov
pop
fnstcw
mov
add
lods
ds
out
dec
les
sbb
lea
gs
arpl
mov
int
iret
mov
das
movsl
lds
ret
fildl
dec
in
out
les
push
add
or
push
pop
lret
mov
xorl
jne
xor
aad
mov
jns
roll
sahf
clc
std
sbb
sbb
ja
pop
xorl
sbbl
in
js
cwtl
mov
into
stc
sti
fs
cmp
stos
and
mov
jne
test
adc
push
fimull
push
lods
jo
fstpl
push
dec
or
add
sub
loopne
push
xor
sub
outsl
jmp
pop
ftst
div
cmp
jbe
inc
movsb
enter
out
repz
cmp
cmp
push
xchg
mov
add
je
es
into
mov
add
cltd
cmpsl
insl
pop
inc
push
bound
add
ljmp
hlt
cmpsl
aam
xchg
push
fistpl
test
mov
mov
xchg
pop
mov
jne
jb
sahf
xor
call
adc
push
in
lock
xlat
add
mov
mov
not
mov
xchg
or
adc
je
les
int
and
jg,pn
std
cltd
jbe
pop
or
adc
cli
movsb
mov
mov
test
or
jecxz
in
pop
pop
sti
mov
dec
inc
dec
ljmp
loope
lret
test
hlt
stc
mov
insl
jno
adc
dec
or
xchg
xchg
scas
rclb
or
pop
data16
add
ret
hlt
idivl
xchg
leave
inc
ret
shll
push
iret
test
stos
es
cmp
xor
cli
push
repz
lcall
scas
inc
out
outsb
out
push
mov
rorl
call
sub
rorl
jae
popf
or
inc
pop
and
jno
add
inc
or
out
nop
push
aaa
add
dec
mov
add
das
adc
mov
nop
stos
inc
cmp
cmpsl
or
cmp
sub
xlat
mov
into
mov
xchg
fists
mov
in
sub
jecxz
adc
jbe
jnp
loopne
mov
jns
les
clc
inc
stos
in
add
pop
inc
aas
fdiv
sbb
stos
pop
pop
jmp
xchg
mov
call
jae
jns
jns
mov
or
dec
scas
push
or
mov
cmp
add
into
jne
fnstenv
ret
adc
inc
mov
xor
idivb
pop
mov
ret
cmpb
cli
mov
jb
in
inc
jns
adc
cmp
and
cs
dec
jecxz
mov
dec
shlb
fisttpl
nop
push
jecxz
enter
mov
push
vpmacswd
nop
xchg
ss
inc
and
aam
ds
movaps
les
sub
repnz
sub
stos
addr16
adc
xlat
jge
nop
dec
repz
inc
loope
dec
xchg
scas
test
jl
fiaddl
mov
inc
push
dec
in
int
or
and
fcoms
pop
lcall
xchg
sbb
xchg
and
dec
repnz
jp
adc
mov
scas
in
mov
xchg
fwait
push
ret
mov
arpl
add
xlat
lret
sahf
lods
mov
cmp
xor
inc
and
mov
mov
and
lret
lret
and
mov
test
int
push
sub
sub
ret
divb
mov
xchg
hlt
fs
xchg
in
popa
jno
scas
pop
cmpsb
add
test
xchg
mov
fcoml
notb
ja
ljmp
push
aas
add
sti
je
aas
push
lea
mov
out
test
loop
cmp
mov
mov
mov
popf
sahf
out
jnp
aaa
push
rorl
jno
clc
fldcw
scas
and
push
out
or
xor
test
sub
sub
ljmp
in
jle
jmp
mov
data16
sbb
jnp
mov
and
or
scas
adc
pop
mov
into
int
cmp
inc
mov
push
lea
xor
or
inc
dec
in
pop
call
or
scas
sub
jle
pop
imul
ds
outsb
ret
les
call
sub
loop
enter
pop
sbb
cmpsb
cmp
cmc
mov
andb
mov
lret
fidivrs
sbb
and
cli
push
dec
fstpt
jo
xchg
mov
sbb
cli
popw
roll
aas
pop
xor
mov
scas
push
xor
int3
fldenv
imul
mov
loop
and
xor
mov
lahf
sub
fld
mov
jno
mov
add
pop
std
pop
inc
mov
outsb
data16
lahf
scas
sub
ss
lods
fiadds
ret
popa
jle
jl
fdivrp
dec
cmp
iret
ret
push
arpl
mov
mov
leave
jno
dec
mov
addl
cld
ja
push
xor
cmp
stos
loop
dec
push
cmpsb
out
mov
sarl
jg
lea
cmpsl
rorl
test
cmc
popf
sub
in
inc
clc
test
mov
cmp
sub
pop
push
mov
pop
mov
inc
mov
push
or
xchg
inc
pop
xlat
int
sub
dec
inc
out
call
in
push
inc
stc
or
xchg
push
scas
cwtl
lret
add
dec
loope,pn
xor
sti
fcoml
and
orb
stos
outsl
mov
daa
or
sub
outsl
jle
je
sub
test
jnp
cmp
vxorps
addr16
rcr
lods
inc
sbb
jo
stos
andl
pushf
cld
xchg
insb
adc
pop
pop
test
dec
lcall
push
xchg
or
add
movsb
cwtl
arpl
jle
push
pop
mov
inc
ret
xor
int3
into
or
adc
loopne
movsb
pop
sbb
call
shl
fdecstp
outsl
sbb
lock
mov
daa
fucom
mov
mov
arpl
cmc
fldcw
jo
fsubrl
in
int
enter
imul
cmpsl
loopne
pop
lods
mov
pop
les
std
add
mov
push
loopne
push
add
cmp
aaa
rolb
call
mov
mov
scas
lock
dec
xchg
or
test
cmp
or
idivl
test
cld
jmp
negb
les
mov
pop
cmp
or
sub
adc
sub
sbb
fildll
icebp
mov
jl
rorb
mov
fmul
inc
fidivl
bswap
or
dec
xchg
outsb
orb
popa
jg
lock
sahf
xchg
mov
mov
lret
push
dec
jno
xchg
vpsubb
jns
push
dec
push
xlat
xchg
cmp
push
mov
loop
mov
jns
sub
mov
or
leave
jns
jb
gs
iret
mov
roll
in
push
and
int3
jmp
jmp
call
ret
jb
es
adc
mov
push
jnp
push
xchg
and
xchg
push
jmp
addr16
push
inc
cmpsb
lock
in
xchg
jp
sbb
lret
add
lds
jp
negl
push
mov
mov
bound
fcomip
and
jnp
imul
movb
xor
push
mov
scas
lahf
sbb
jge
and
jnp
xchg
cmp
sahf
cmp
xlat
loop
repz
and
into
clc
pop
and
fs
shufps
pop
pop
dec
clc
jbe
mov
sbb
rcll
xchg
pop
ja
cmp
repz
cltd
xchg
imul
jecxz
add
adc
leave
xor
add
jbe
lods
outsl
jbe
or
push
xchg
pop
pop
dec
fiadds
scas
inc
push
test
sbb
and
movsb
sbb
lahf
popa
fisubrl
push
cmp
fnstenv
inc
sub
aaa
mov
mov
ds
jne
cmp
enter
mov
mov
divb
ds
int
aas
dec
pop
and
push
push
mov
or
faddl
out
and
ja
xchg
mov
sbb
out
pop
adc
xchg
inc
and
shlb
cwtl
push
xor
int
dec
enter
mov
adc
cltd
sub
xchg
into
jne
xor
cltd
push
xorb
aas
xchg
sbb
inc
adc
mov
xchg
mov
jecxz
andb
xchg
fadds
sahf
and
xchg
imulb
mov
mov
roll
and
shl
push
mov
shr
lret
xchg
push
jo
cmp
adc
jb
lea
jg
or
cwtl
xorb
clc
test
pop
pop
mov
and
jne
xchg
out
jbe
cmovge
jbe
pop
mov
int3
add
aad
adc
mov
fimull
ss
cltd
movsl
mov
insl
push
lahf
jp
fidivrs
inc
outsb
push
std
or
imul
xchg
and
add
cmp
in
sbb
sbb
jae
xor
add
jns
mov
xlat
adc
push
dec
mov
ret
insl
fsubrl
sub
bound
and
inc
pop
dec
in
lret
push
imul
sti
xor
fisttpl
jne
push
xchg
cli
aam
aam
in
mov
push
jae
add
das
sbb
test
test
leave
pusha
cmp
cmpsb
sbbl
mov
rolb
shll
das
sub
jge
push
int
aam
jae
and
push
or
dec
in
mov
push
push
sub
daa
sbb
cmp
fcompp
add
mov
jl
call
sub
inc
adc
fmull
xor
or
fmul
xor
pop
fnsave
ljmp
sbb
das
pop
in
rcr
mov
in
loope
scas
cmc
dec
xchg
jp
add
aad
imul
push
inc
fcmovnb
test
jno
dec
xchg
mull
dec
and
push
cmpsb
insb
adcb
sarl
ret
call
mov
mov
out
addr16
adc
ja
fwait
int3
mov
pop
sbb
adc
push
fucomip
sete
es
or
xor
dec
and
push
fisttpl
mov
xchg
mov
jg
cmp
in
push
imul
adc
stos
xlat
or
insb
into
out
mov
int
sahf
pop
xchg
mov
mov
icebp
inc
bnd
cltd
loop
mov
mov
repz
out
cmpsl
add
fsts
aam
addr16
mov
add
sbb
fsubr
sahf
outsl
mov
ret
jae
push
adc
pop
cmp
aad
lea
sahf
fdivrp
dec
or
mov
xlat
or
push
lcall
leave
dec
popf
mov
add
mov
xchg
and
inc
pop
mov
push
adc
inc
push
out
ficompl
stc
out
fldl
jb
push
pop
sti
push
jl
nop
dec
inc
xor
mov
mov
sub
scas
mov
out
sahf
push
hlt
add
js
pop
sub
pop
mov
inc
arpl
out
lock
aas
lock
std
xchg
outsb
pop
pushf
js
mov
dec
test
xchg
mov
dec
jne
cmpb
shll
scas
xor
mov
scas
mov
adc
lds
and
movsb
imul
mov
mov
daa
cltd
xor
mov
ret
addr16
or
fs
fdivr
addr16
and
hlt
lods
and
fdivrs
leave
mov
add
jl
stos
dec
dec
jl
cmp
cmp
in
jnp
test
cld
push
and
or
inc
inc
or
jbe
das
sbb
pop
shrb
adc
pop
cmp
pop
adc
cli
imul
pop
adc
and
enter
mov
roll
xchg
add
xor
clc
insb
repnz
and
cmp
std
push
push
shlb
cmc
xchg
jo
add
inc
test
jmp
leave
in
dec
inc
shll
or
ret
addr16
sbb
mov
pop
mov
push
cmp
adc
scas
or
jecxz
jecxz
mov
dec
daa
jnp
add
cli
lea
out
pop
cld
je
bound
sti
inc
lahf
incl
and
in
mov
test
push
add
aad
loopne
sarl
jle
fnstcw
outsl
mov
insl
scas
xor
rolb
in
dec
fstps
in
jno
sahf
imul
inc
cltd
sti
sbb
lods
out
mov
dec
cld
hlt
fsqrt
pop
mov
clc
loopne
pop
aas
hlt
mov
lcall
lret
clc
pop
ret
jae,pn
pop
out
and
or
mov
adcb
insb
or
inc
xchg
loopne
xor
sti
mov
pop
push
das
ss
cmp
pop
test
and
scas
cmp
ljmp
mov
xchg
dec
fwait
lret
sbb
mov
outsb
fstl
jo
sbb
scas
mov
lods
xor
jmp
into
insl
jbe
lods
cmp
jnp
or
in
add
mov
fnstsw
push
xchg
xlat
sub
dec
ret
dec
rorb
mov
je
andb
sub
cltd
jo
cs
aam
mov
adc
mov
sbb
enter
push
jl
cltd
mov
mov
jne
ret
sub
adc
in
iret
sbb
mov
dec
cld
sbb
cmc
idivl
mov
clc
dec
add
mov
adc
je
mov
icebp
xor
xchg
jne
mov
cmp
test
mov
push
sbb
push
xchg
adc
ret
loopne
push
psrld
addr16
shl
jno
xchg
push
arpl
jns
mov
jge
jecxz
push
and
pop
test
sub
mov
sub
rol
loope
sahf
test
loopne
js,pn
adc
test
cld
mov
mov
repz
add
mov
push
fdivl
lcall
xchg
addr16
or
cmp
xchg
int
aas
ret
mov
sub
test
cmp
inc
loopne
arpl
enter
jae
cmp
jp
xchg
adc
ret
xchg
jge
push
or
mov
push
rolb
or
cmp
adc
arpl
mov
inc
sahf
cmp
lea
and
jmp
and
inc
sbb
fidivrs
cli
rcrb
lahf
cmp
mov
xchg
mov
cs
pusha
cmc
sbb
xor
and
jnp
aam
and
mov
cmc
mov
sub
dec
mov
out
sub
add
testb
fistpll
or
sbb
xlat
xchg
popa
insb
in
jge
adc
xor
test
mov
mov
add
mov
mov
pop
stos
jns
jne
movsb
fildll
bound
nop
sbb
in
inc
and
popf
pop
add
shl
and
loopne
jmp
cltd
sbb
and
test
cmp
adc
push
scas
push
pop
push
mov
sub
das
push
daa
dec
mov
push
and
testb
cmpsb
cmp
ds
push
mov
aas
mov
cltd
popa
idivl
shll
sub
mov
or
dec
and
inc
mov
push
dec
sbb
cltd
mov
nop
xchg
aas
pushf
lret
and
or
push
add
add
gs
mov
xchg
dec
xor
sahf
lock
push
add
pop
je
mov
cmp
shrb
movsb
mov
mov
sbb
xchg
pop
mov
pushf
mov
es
stos
cmp
pop
popa
lods
jae
push
dec
rol
ljmp
mov
dec
mov
cmp
arpl
ja
lret
sbb
mov
je
addr16
jmp
cli
cli
lods
pop
inc
mov
adc
sub
call
test
ret
fsubr
inc
push
mov
fnstcw
jnp
jne
dec
cmp
outsb
cmp
mov
fstpt
mulb
cli
inc
stos
clc
pushf
ficomps
fcmovbe
pushf
mov
lock
mov
add
mov
imul
jmp
inc
bound
addl
adc
push
jmp
ficoms
std
in
test
xchg
or
shlb
sbb
fldl2e
adc
pushf
pop
adcb
dec
add
lods
mov
cltd
sub
stc
nop
outsl
icebp
pop
loope
das
jle
push
mov
or
bound
cmpb
jle
mov
jl
or
sub
ret
bsf
je
sub
cmp
test
inc
ss
inc
push
jg
mov
bound
mov
insl
insb
jge
jb
es
adc
xchg
xlat
idiv
jl
test
int3
ret
and
adc
sub
dec
cmp
adc
pop
sar
ror
xchg
mov
push
inc
xor
int
xor
mov
cmp
jbe
cmp
jnp
xchg
stos
and
in
cmp
iret
inc
fldcw
repz
mov
cmpsb
insb
fcmovnu
cmpsl
fdivr
scas
jns
or
push
mov
int3
rcrl
sub
jmp
pop
jle
in
mov
mov
mov
push
mov
addr16
sbb
push
insb
fmul
outsb
sbb
xchg
inc
lret
mov
fs
rolb
sub
fstpl
mov
add
push
faddl
cwtl
and
fdiv
daa
das
or
in
outsb
das
fwait
mov
test
mov
jg
add
xor
push
fidivs
cli
int3
cmp
data16
stos
or
push
dec
stos
sub
insl
jae
push
add
xor
xor
mov
add
mov
orb
test
add
shlb
enter
add
jnp
int3
jbe
sub
adc
pushf
inc
pusha
mov
dec
or
mov
jp
push
insb
shll
push
adc
aaa
jns
adc
cli
in
loop
pop
rol
pop
ds
add
inc
mov
aam
in
out
out
es
out
outsl
es
jb
mov
fwait
push
cmpsl
lcall
and
scas
jg
cli
lret
dec
imul
test
roll
je
or
xchg
mov
fsub
sti
idiv
pop
subl
js
mov
lods
mov
adc
aam
add
loop
cmp
pop
pop
ja
xor
stc
test
jmp
jg
inc
aaa
and
out
mov
lcall
loopne
or
imul
inc
push
gs
mov
jecxz,pt
pop
out
xlat
out
adc
jmp
pusha
shl
int
inc
xor
jge
or
add
sub
adcl
sti
xchg
and
outsb
movsl
enter
hlt
iret
mulb
jbe
pop
test
mov
fcmove
push
movsl
jmp
lret
int
test
loopne
out
fimuls
les
cmc
nop
je
scas
ret
enter
jno
sbb
cmc
stos
pop
pop
adc
sbb
mov
popa
jne
inc
pop
pop
pop
mov
popf
lcall
addr16
jg
pop
test
mov
adc
shlb
jmp
fistl
jmp
mov
pop
fnsave
pop
enter
dec
xchg
in
pop
lods
xorb
cmp
cmp
stos
mov
test
xchg
xchg
jle
pop
adc
imul
pop
mov
stos
decb
mov
sbb
mov
bound
les
lcall
xchg
aam
loop
or
js
daa
push
adc
pop
je
and
in
dec
fcompl
lods
push
or
imul
stos
push
adc
xchg
pop
mov
lds
orb
jmp
rcr
adc
jb
mov
decb
xchg
stos
insb
aad
inc
leave
hlt
iret
cmp
jne
lahf
lods
loopne
push
je
lret
lret
repnz
pop
fs
repz
rol
lea
sbb
jb
add
jecxz
dec
xchg
sbb
pusha
outsb
fldt
cld
push
int
jbe
or
insl
ds
in
xchg
out
ljmp
jmp
scas
xor
outsl
fdivrs
sub
pop
jo
call
aad
subb
or
lahf
lea
push
and
fs
or
sarb
in
mov
sbb
call
stos
inc
aaa
sub
sti
sbb
jb
loope
imul
push
and
ja
add
mov
ljmp
test
repz
pusha
sar
adc
pop
outsb
xor
stc
cmp
stos
les
xor
movl
lret
addb
imul
cli
bound
retw
rcl
mov
into
pushf
outsb
sbb
mov
pop
ret
lods
ljmp
jl
loope
cmpl
loopne
or
pop
or
pop
addb
fwait
out
cmp
stos
dec
or
cli
ret
mov
cmp
idiv
adcl
shll
movsb
jbe
jbe
cmp
pusha
and
fs
data16
xchg
push
jne
add
push
pushf
sti
or
xchg
fsts
aas
push
xchg
dec
movsl
cltd
jb
das
loop
xchg
repz
popf
sbb
gs
sbb
imul
push
push
sub
int3
sub
arpl
mov
sbb
push
xlat
lea
ficoms
adc
sbb
push
pop
mov
js
jmp
dec
push
jns
adc
push
ljmp
cmp
add
jb
push
fxch
xchg
js
push
aam
jb
in
iret
sti
fistpl
inc
rclb
fldcw
push
mov
jecxz
mov
mov
jmp
pop
xchg
fcoml
sahf
fcmovu
jne
adc
insl
insl
clc
roll
das
pop
and
jecxz
mov
mov
xchg
arpl
push
mov
push
mov
or
inc
fsubrp
out
push
dec
mov
jmp
inc
imul
mov
or
add
xor
mov
or
and
pusha
xchg
push
xchg
mov
js
inc
adc
cmp
movsb
stos
sar
jp
in
dec
lds
scas
lock
add
das
in
pop
dec
sbb
hlt
pop
jo
adc
into
xchg
je
jnp
add
shrl
jg
push
daa
hlt
adc
lea
out
xor
mov
negb
mov
ret
call
mov
cmp
lea
jns
cld
ss
or
push
lods
outsl
or
push
cwtl
pop
test
xchg
cwtl
pop
mov
lcall
or
divb
mov
mov
sbb
push
dec
mov
sub
inc
cmp
cs
mov
inc
cli
mov
mov
testl
dec
push
inc
sub
mov
xchg
out
pop
clc
fdivr
fnsave
das
outsb
loope
mov
das
push
sub
jp
in
pop
sub
mov
ljmp
sbb
mov
adc
xchg
stos
loopne
mov
icebp
xor
shll
xor
lock
push
mov
ss
push
cltd
lret
mov
pop
push
or
add
sub
enter
in
push
fldenv
jb
movsb
jns
mov
repnz
add
jno
push
fs
mov
fwait
sahf
fistpl
outsl
and
ret
ret
daa
sbb
test
sahf
push
aad
movsb
jo
sbb
push
fucom
push
inc
dec
mov
iret
les
mov
sbb
fwait
xchg
or
mov
fldt
mov
iret
sub
sub
cmp
pop
sbbl
dec
cwtl
add
mov
lahf
jecxz
pop
es
sbb
xor
adc
and
add
or
orl
popa
push
pop
outsl
sbb
shlb
jns
fstl
lcallw
push
out
imul
repz
add
cmp
dec
adc
in
push
repnz
mov
jns
lods
ljmp
sahf
sub
out
xchg
sti
in
inc
xchg
sahf
std
xchg
jns
mov
jle
dec
fiaddl
lods
js
jo
or
inc
fs
inc
and
outsl
mov
shl
fildll
jmp
cmc
add
dec
xor
lds
pusha
fs
es
in
loop
movsb
mov
xchg
dec
stc
aas
dec
dec
mov
mov
outsl
adc
aam
push
cs
gs
scas
push
dec
cli
aas
movsb
lret
mov
and
orb
push
mov
and
bt
int3
and
push
fiaddl
popa
out
and
in
or
lds
mov
aas
cltd
ja
xlat
and
das
mov
lret
adc
jge
mov
loopne
scas
mulb
scas
dec
jge
inc
loop
mov
jb
ss
movsb
push
iret
xor
dec
dec
adcb
fsubs
jl
leave
cmp
dec
repnz
js
xor
jno
outsb
cmp
jae
mov
rcrb
sub
sub
das
fstpt
cld
xor
push
fsubr
fnstcw
push
mov
ljmp
add
and
or
sbb
cmp
pop
out
popf
lahf
sbb
xchg
loopne
int3
test
test
mov
xchg
push
push
add
loopne
mov
jbe
dec
icebp
xchg
mov
add
pop
aas
rcrl
clc
add
fmuls
mov
adc
add
xor
adc
push
push
push
ret
icebp
hlt
sub
roll
pop
mov
ds
lock
cmpsb
pop
jb
pop
pop
dec
mov
jae
lods
pusha
inc
and
scas
sub
in
mov
mov
js
jbe
push
sub
lret
fwait
sbb
xchg
ljmp
add
dec
mov
incl
push
mov
pop
inc
pushf
lods
test
pop
stos
adc
xor
jle
push
dec
cmp
scas
jg
loope
adc
xchg
icebp
mov
jnp
or
add
jmp
rcll
nop
adc
pop
fldl
ffree
fsubrs
sbb
popf
inc
ja
leave
repz
aaa
jp
push
inc
sub
jl
lahf
insl
cwtl
jbe
xor
movsb
or
sti
gs
loop
ret
clc
gs
pop
add
out
xchg
mov
xchg
jp
cmpsl
push
je
out
xchg
lock
lods
xlat
push
mov
or
clc
outsl
hlt
insl
inc
lret
jg
sub
adc
jp
test
push
jne
and
stos
in
pop
push
push
lds
and
push
adc
cmp
dec
divl
sub
mov
add
js
adc
cli
fs
xchg
xchg
sahf
dec
xchg
add
mov
dec
scas
mov
push
cmp
aam
mov
stos
push
mov
cmp
jp,pt
push
lock
dec
adcb
push
mov
sub
loope
insl
jbe
out
lock
mov
xchg
fucomi
xchg
outsl
ds
and
push
jae
loope
mov
das
aas
push
sub
cli
loopne
loop
jmp
test
stc
cmp
mov
bound
je,pt
push
sub
outsl
and
jp
jns
push
data16
cmp
mov
hlt
sub
mov
push
xor
xchg
pop
or
mov
fadd
inc
push
scas
cltd
movsl
cmp
fldlg2
test
xchg
lods
inc
lahf
xchg
out
lods
test
jno
mov
pop
push
pop
in
orl
dec
cwtl
sbb
and
adc
loope
filds
shll
movsl
notl
pcmpeqd
int3
fiadds
orl
cmp
or
mov
test
mov
je
out
lcall
cmp
mov
xor
jp
repz
cmp
aam
es
lods
leave
dec
stos
cmpsb
cmp
ljmp
adc
xor
daa
or
jnp
movsb
sub
scas
and
pop
in
out
sbb
negb
roll
xor
inc
mov
mov
iret
push
add
std
sbb
stc
js
fsubrl
dec
push
xor
jp
add
and
adc
sbb
jle
inc
inc
repz
imul
or
rcl
stos
jbe
sbb
xchg
or
sub
mov
hlt
loopne
mov
push
test
lahf
adc
xor
lahf
and
mov
fisttpll
lods
mov
sbb
icebp
scas
add
fdivrs
xchg
stc
mov
cmp
xor
loopne
les
push
ficoml
push
test
mov
aaa
push
jp
and
lods
aam
xchg
call
aas
loope
lea
daa
dec
xchg
cld
inc
lods
mov
cmp
imul
mov
push
lahf
sub
xchg
push
mov
notb
lcall
xor
dec
or
and
ret
in
cmp
pop
es
adc
out
mov
repnz
outsb
test
pop
jg
mov
pop
movl
adc
insl
sbb
pushf
vpaddw
lock
mov
popf
dec
push
pop
data16
rcr
sub
jae
and
daa
andl
data16
int3
lods
dec
and
ljmp
lods
add
or
fildl
sbb
scas
insl
pop
push
iret
sub
imul
clc
add
sub
rorb
pop
xchg
inc
lret
incb
lods
xchg
and
insl
out
stc
int
and
sbb
sbb
add
dec
and
pop
dec
dec
mov
push
mov
sbb
jmp
mov
xor
or
dec
sbb
sbb
lret
pop
dec
xor
mov
mov
insl
cli
pop
mov
xchg
roll
push
sbb
add
push
sub
cld
push
imul
add
push
gs
push
sub
jmp
push
push
or
mov
mov
ss
popa
movsl
scas
jmp
addb
cmpsl
pop
andl
fadds
aaa
push
jge
mov
mov
arpl
imul
jp
aad
sahf
ss
les
dec
lahf
outsb
lahf
pop
xlat
jp
xor
scas
pushf
fcomps
or
in
lea
hlt
std
dec
pop
out
addb
mov
cmp
les
cmpsl
or
scas
hlt
or
enter
push
js
pop
scas
pop
je
icebp
inc
cwtl
faddl
sbb
push
lahf
pop
mov
pushf
or
aam
call
push
add
fst
xchg
pop
inc
stos
data16
pop
movsl
mov
add
imul
mov
xchg
ss
dec
add
pop
cwtl
push
jl
lods
push
ljmp
in
adc
mov
lock
fmuls
cli
add
push
mov
int
sahf
call
data16
daa
pushf
dec
xchg
sbb
and
imul
dec
xlat
ss
dec
push
dec
dec
fcmovbe
sbb
ret
sbb
pop
xchg
data16
and
xchg
std
adc
js
mov
mov
imul
lock
jbe
cltd
movl
mov
mov
jmp
lret
mov
sbb
imul
fidivrl
dec
mov
jns
cs
daa
mov
cmc
jne
mov
lods
mov
xchg
pop
dec
repnz
mov
jnp
add
aam
jmp
daa
add
cmp
xor
lcall
hlt
movl
cli
es
add
mov
lret
or
sbb
xchg
jl
out
mov
pop
jge
pop
add
add
imulb
sub
lods
jo
iretw
sbb
jle
xchg
jmp
rorb
cmp
inc
dec
repz
add
scas
test
dec
and
xor
xchg
and
xchg
adc
xchg
add
jge
scas
adc
dec
lret
fiaddl
sbb
sub
adc
outsb
adcl
cmp
dec
enter
test
sbb
mov
add
jecxz
into
cmpsl
or
cmpsb
add
xchg
cmpsl
movsl
cmpb
sub
jb
data16
xor
cmp
repnz
shr
inc
sub
mov
pop
inc
and
sub
pop
mov
les
or
sub
jecxz
cmc
adc
into
ss
fildl
or
popf
es
sub
sub
mov
mov
rcrb
pop
inc
xchg
inc
xor
subb
lds
icebp
out
insl
das
add
jbe
mul
repz
cmp
ret
into
mov
pop
add
notb
xlat
push
push
repz
jo
scas
test
stos
mov
add
int3
iret
mov
insl
int
sti
stos
fisubrl
enter
and
lahf
xchg
data16
hlt
cmp
and
jo
xchg
out
push
mov
jbe
push
movsl
shlb
jae
jmp
adc
dec
sbb
mov
jp
in
inc
in
dec
xlat
mov
push
fs
dec
cmp
mov
lcall
pop
add
add
mov
icebp
adc
add
xor
jae
xchg
xchg
push
mov
inc
dec
jo
mov
xor
pop
mov
sbb
jge
mov
popa
outsb
or
sub
sbb
xchg
push
push
pop
mov
xor
push
je
mov
pop
jnp
push
sti
sub
mov
xchg
mov
movsl
sub
mov
js
std
in
mov
push
movsw
xchg
and
push
jae
out
popf
stos
mov
inc
push
sbb
lcall
fsub
jg
movsl
and
mov
push
test
add
inc
xchg
fldl
out
mov
loop
xorb
clc
jnp
jo
or
pop
in
nop
or
sti
and
sub
flds
dec
sahf
shlb
or
cld
sub
hlt
ljmp
xchg
or
neg
mov
xor
test
inc
negb
sub
mov
and
rcll
psubusb
mov
sbb
sarl
into
mov
mov
and
dec
mov
dec
daa
pop
dec
int
dec
mov
jo
pop
jne
jle
jne
push
xor
adc
insl
inc
enter
mov
fcmovb
sarl
and
test
cmp
pop
test
jnp
inc
pop
jge
mov
and
pop
mov
push
xchg
jl
nop
add
sub
cli
xor
mov
and
idivl
xchg
jecxz
sub
aaa
fadd
mov
add
push
or
dec
sbb
cmp
pushf
sbb
rorl
stc
mov
addb
mov
push
cmp
cmp
es
and
iret
xor
scas
cmp
jle
popf
aas
imul
stos
lret
push
nop
aaa
scas
shll
or
addr16
pop
or
adc
xor
je
xor
shll
out
aam
stc
enter
xor
sub
fucomi
stos
outsl
and
iret
jb
or
int
outsb
mov
push
jo
aas
xchg
mov
push
xchg
xchg
pop
in
dec
xchg
and
loop
fiaddl
enter
push
mov
icebp
std
fisubrs
shl
icebp
cmp
test
ret
mov
fwait
dec
sbb
xor
mov
push
addb
dec
sub
mov
mov
aad
sbb
shl
in
js
jae
sbb
cmp
mov
fsubrl
mov
or
bound
inc
jne
pop
in
hlt
lods
lods
xchg
movsb
dec
sbb
xor
lahf
stc
cmp
inc
dec
loop
inc
mov
mov
dec
stc
out
popf
xchg
pop
dec
mov
arpl
xor
and
adc
movsb
jo
insl
xchg
call
pop
pop
subb
pop
mov
icebp
jnp
cmpb
jne
adc
test
mov
iret
cli
push
fistps
shrl
bound
leave
je
push
addr16
adcl
mov
fistl
pop
clc
inc
dec
pop
fsub
sub
fdivrp
pop
mov
sarl
mov
fistpll
mov
dec
jbe
sub
mov
mov
ret
hlt
insb
pop
jg
adc
jle
sub
lcall
lods
lods
in
in
adc
in
add
in
ret
cmp
mov
ret
fiadds
dec
hlt
xchg
xor
or
call
adc
and
add
or
xchg
add
sti
iret
mov
addr16
aaa
rcr
mov
adc
lock
or
cmpsl
jbe
call
or
cmp
mov
out
push
cmpsl
pop
bound
inc
mov
pop
lock
mov
test
dec
mov
xorb
push
mov
inc
loop
test
xor
sub
fsubr
push
cmovb
adc
jbe
in
loop
xor
repz
int
movsl
movsb
ficoml
xchg
lret
int3
cmp
rcll
jmp
std
stos
mov
xor
frstor
daa
stos
mov
nop
xor
jmp
cmp
mov
xorb
repnz
mov
adc
inc
inc
cmp
mov
and
out
movsl
jb
xchg
cli
push
ds
in
insl
jae
movsb
sub
adc
out
aam
push
aaa
pop
pop
fsubs
stos
enter
dec
es
jle
mov
out
pop
mov
js
shrl
inc
sbb
mov
mov
rcrl
pop
push
inc
lds
or
out
in
inc
jo
jge
xor
add
imul
adc
mov
repnz
imul
push
jns
mov
sbb
push
inc
stc
adcb
cmpsl
cld
mov
loope
cltd
xor
push
xor
or
das
std
jmp
andb
xor
shl
xchg
add
jns
rol
cmp
leave
cmp
popf
add
mov
xor
pop
idivb
jne
or
repz
stc
or
xlat
call
loop
xor
lahf
std
sbbl
add
adc
inc
stos
xor
fstpl
xor
mov
xchg
xor
dec
add
test
lret
test
sub
cli
shlb
dec
test
cmp
bound
sub
nop
nop
fnsave
adc
sbbl
push
scas
orb
inc
aaa
add
mov
sti
mov
pop
in
inc
pop
inc
daa
mov
nop
add
insb
or
xorb
cld
je
lret
mov
fld
xchg
stos
sbb
sbb
aad
int
inc
leave
shlb
add
inc
popf
ret
push
lods
lock
dec
cmp
call
fs
call
push
mov
cmpsb
mov
shll
push
cltd
aad
push
adc
pop
notl
push
sbbl
add
inc
sub
adc
stos
cli
or
gs
iret
popf
pop
pop
mov
dec
imul
dec
movsl
xor
xchg
xlat
mov
jno
loop
xor
sti
add
sbb
mov
arpl
dec
pop
jno
pop
dec
adc
call
in
mov
adc
lea
push
sbbl
mov
adc
clc
fistl
jnp
je
push
je
push
pusha
test
outsl
out
in
cltd
add
jbe
or
popf
dec
std
sub
mov
adc
ror
into
pusha
cmp
in
add
add
nop
pop
inc
in
jae
push
sbb
xchg
into
pop
jle
inc
sub
frstor
pop
lds
leave
in
dec
out
inc
mov
xor
in
sbb
sbb
add
int
dec
gs
cmp
pop
stos
into
shll
inc
in
or
psadbw
int
jae
das
add
cmp
jecxz
movsl
lods
sbb
inc
push
push
sbb
jmp
mov
negl
fcmovnbe
mov
fldenv
lret
cmpsb
ljmp
or
jge
xchg
out
cmp
xor
bound
or
iret
out
pop
frstor
int
ds
cmpsb
cld
mov
das
test
and
out
jl
sub
mov
out
filds
mov
mov
and
sbb
loope
shlb
mov
adc
out
popf
mov
iret
out
lods
lret
sar
iret
adc
jbe
dec
jle
cld
repz
stos
adc
pop
xchg
sti
jge
adcb
call
fidivl
aad
jns
jne,pt
jbe
ret
loope
ret
inc
addb
addr16
sarb
inc
mov
out
scas
movsl
xor
and
push
lock
lods
jae
nop
aad
dec
out
mov
arpl
insl
insb
mov
les
xor
xchg
leave
out
mov
out
dec
lock
shr
into
addr16
pop
clc
lahf
dec
std
push
or
test
mov
pop
ret
jge
cmp
push
and
jp
test
sub
mov
stc
mov
jl
bnd
fisubrs
repz
pop
test
push
test
scas
test
or
fstl
inc
mov
gs
daa
lcall
out
addr16
xor
pop
push
bound
enter
out
or
ret
in
jecxz
jae
call
mov
push
adcb
mov
push
out
cmp
out
lcall
add
sahf
aam
mov
int3
addr16
aad
call
out
mov
push
push
sti
addr16
fcmovb
push
or
lret
push
mov
sub
or
mulb
jl
mov
cwtl
es
cmp
movsl
xorb
push
test
enter
xor
in
in
movsb
jge
cmp
fwait
dec
xchg
cmp
add
cltd
bound
and
outsl
aad
addr16
arpl
fs
mov
lods
push
mov
sbb
xchg
push
enter
or
dec
xor
shl
pusha
fwait
jne
je
pusha
shll
mov
pop
int3
mov
bound
mov
xor
and
sbb
and
push
mov
ret
cmpxchg
jp
popa
pop
add
insb
insb
repnz
out
mov
in
fdivrs
loope
pop
cmpb
sub
jmp
mov
popf
das
pop
lret
mov
push
cmp
xor
dec
and
in
push
or
push
sub
pop
push
imul
les
jns
arpl
stc
or
jno
sbb
sbb
mov
shll
mov
fcompl
xor
test
cmpsb
mov
sub
scas
push
pushf
push
clc
loop
adc
inc
inc
into
popf
sub
dec
fnsave
xlat
push
add
add
frstor
ds
ret
jg
jnp
adc
test
mov
test
sub
jae
push
push
adc
imul
in
fs
xor
add
jl
mov
pusha
or
nop
push
xor
push
sub
adc
jbe
loope
mov
push
cmp
mov
fldenv
add
pop
lea
stc
xchg
xor
push
dec
hlt
mov
sub
add
mov
ficomps
sub
je
cs
imul
sahf
push
push
or
and
jae
imull
sarb
sub
mov
xorb
enter
out
mov
daa
inc
pusha
std
pusha
cld
mov
jne
mov
cmp
test
mov
sub
imul
inc
sub
cmp
mov
and
mov
fdecstp
dec
test
add
cs
imulb
stc
pop
imul
es
add
les
pop
test
dec
add
rolb
aas
lahf
stos
mov
adc
scas
or
in
sbb
push
dec
into
cltd
pusha
mov
and
or
sub
test
and
xor
clc
add
icebp
push
jo
adc
xchg
lcall
or
outsb
dec
lds
repnz
mov
mov
push
and
fstpl
mov
ja
es
out
movsb
sbb
jg
dec
xchg
test
mov
add
fsts
lea
push
mov
lea
notl
sbb
mov
lcall
or
in
sub
or
jne
out
movsl
adc
fs
xor
repnz
push
out
imul
add
hlt
cmp
gs
lret
incb
inc
add
mov
out
sarb
adc
stc
push
fcompp
mov
xor
insl
icebp
mov
mov
mov
es
xchg
pop
insb
and
icebp
push
sarb
loopne
mov
add
push
insl
jg
lea
test
add
pop
stc
mov
in
inc
dec
or
notb
cwtl
and
lods
inc
into
test
movsl
rcr
push
fldcw
ficompl
cmc
sbb
mov
pop
ret
sbb
cmc
cld
cmp
pushf
pop
stos
cltd
ljmp
lock
inc
sbb
inc
push
je
fistpll
shlb
cmp
xchg
sti
cmp
jo
cmovbe
icebp
out
mov
jno
adc
enter
adc
rcrb
inc
lret
call
or
sbb
sbb
mov
pop
in
es
lods
shlb
push
ss
int3
sub
ja
push
test
fs
icebp
cltd
push
imul
int3
cmp
sbb
pop
lahf
enter
pop
ret
jecxz
xor
adc
in
sbb
lcall
mov
scas
pop
jl
jp
inc
push
fcoms
out
dec
daa
jle
imul
sbb
es
outsb
aad
leave
jmp
jo
xor
roll
fnsave
rep
movsb
cs
pop
fimuls
mov
loop
mov
inc
mov
fdivrs
jl
sahf
in
add
mov
mov
cli
mov
and
inc
and
cmpsl
push
sti
mov
jno
mov
fsub
insb
repnz
lds
mov
sub
loopne
or
cmp
jns
call
xchg
cmpsl
fadd
add
sub
in
pop
shlb
loope
mov
or
inc
jns
je
dec
mov
and
push
outsb
or
jl
sbb
hlt
pusha
mov
aad
es
xchg
sbb
stos
fdivs
push
sub
mov
xchg
nop
mov
out
lods
sbb
clc
push
lea
cmpsl
adc
pushf
sarb
add
adc
jl
mov
ror
xchg
rcrl
stos
mov
add
cwtl
aas
and
adc
xchg
adcb
inc
mov
pusha
cld
and
es
jnp
push
xchg
pusha
mov
scas
fistpl
loop
add
andb
popf
imul
push
jge
negb
and
call
mov
push
nop
sub
jl
fcom
xchg
out
sbb
js
xchg
fbld
xorl
lods
dec
push
sbb
stos
push
sub
outsb
xchg
stc
adcl
sub
add
hlt
mov
lods
adc
mov
lcall
stos
jns
cmp
push
stos
pusha
mov
add
or
popa
std
and
pop
jae
pop
ret
dec
shlb
sub
add
adc
mov
addr16
mov
dec
dec
fistpl
adc
pop
xlat
xchg
cmp
mov
xchg
push
leave
cmpsl
add
mov
jmp
scas
cmpl
rorl
test
jo
jae
cmp
imull
xchg
rolb
xor
inc
and
or
cmpsl
cwtl
push
push
js
adc
lods
clc
jnp
add
inc
ds
mov
jno
subl
scas
dec
mov
sahf
cmp
push
in
mov
and
sub
sub
mov
insl
add
bound
push
inc
mov
jne
dec
mov
pop
jne
sub
add
mov
rorl
jne
pop
out
cli
aaa
and
in
add
jmp
adc
mov
sti
repz
xor
rorb
mov
ljmp
sbb
cmpsb
insl
imul
cwtl
lea
hlt
in
jno,pt
mov
cmp
test
nop
push
jne
rcrb
and
sahf
outsb
pop
dec
mov
shlb
lds
jns
in
out
adc
cli
dec
push
lcall
pop
dec
rorl
xchg
and
int
cld
mov
cmp
mov
insb
pop
add
cmp
add
popa
or
inc
sti
movsb
ret
movsb
push
out
cmp
push
jne
mov
dec
add
out
cmp
cld
repnz
mov
sbb
arpl
test
jne
push
pop
loopne
push
pop
int
repnz
cmp
add
sahf
leave
cld
xchg
hlt
call
mov
sub
mov
imul
stc
imul
out
mov
pop
sbb
sbb
pop
mov
xchg
repz
lcall
pop
sub
jmp
and
movsb
mov
hlt
jmp
mov
xchg
pop
push
mov
or
jmp
inc
xchg
enter
dec
lock
lds
addr16
rcrl
mov
leave
mov
lock
stos
xor
sbb
push
pop
pop
pop
cli
xlat
xchg
push
pop
bound
inc
push
xchg
lret
jb
cld
add
in
mov
mov
adc
aad
cwtl
cmpl
xchg
fucom
xor
negb
hlt
dec
xor
xchg
dec
sbb
lods
js
negl
jb
pop
jns
lcall
mov
xchg
stc
push
sahf
stos
enter
aad
stos
mov
pop
inc
call
and
lods
unpckhps
fisubrs
cli
icebp
aam
dec
inc
jnp
aaa
mov
arpl
insb
dec
sti
mov
jb
push
test
pop
mov
lock
mov
or
and
push
push
insb
pushf
xchg
loop
in
fisubl
and
lcall
push
lds
and
loopne
and
aas
lods
cmp
xor
sarl
icebp
mov
lock
cmc
pop
or
sti
hlt
mov
lds
sub
xor
jae
out
std
cs
fimuls
mov
jg
push
pop
sbb
les
cmp
push
mov
repnz
xor
stos
das
ret
faddl
cmp
in
das
jae
jp
enter
and
xchg
ret
sbb
xchg
outsl
mov
sbb
xor
add
jecxz
cmpsl
add
jae
lahf
testl
daa
xorb
sbb
or
push
inc
mov
in
push
leave
scas
sub
xchg
push
movsb
inc
dec
popf
loope
cli
pop
push
lock
filds
push
pop
push
ljmp
dec
xor
inc
ss
lcall
popa
push
xorl
jmp
pop
jns
mov
gs
pushf
imul
dec
and
sub
outsl
outsb
les
es
xchg
xchg
enter
adcl
cmpsb
dec
repz
pop
bound
movsb
sbb
jl
mov
arpl
daa
sub
mov
dec
add
hlt
rol
icebp
ja
pmulhuw
inc
loop
xor
int
mov
push
and
cmpb
mov
ret
xor
repz
pop
popa
loope
lahf
cmp
dec
inc
pop
aaa
stos
aad
adc
test
pop
into
xchg
mov
add
inc
sbb
or
inc
inc
sub
cmpsb
or
out
and
xchg
dec
pop
or
and
mov
sbb
and
mov
cltd
ficomps
rorb
dec
ds
sbb
ss
xchg
ja
jns
mov
bound
gs
dec
add
dec
jb
subl
aas
dec
xchg
idivb
mov
push
pop
xchg
jo
cmp
shlb
jno
or
jb
add
cmp
cmp
and
nop
ljmp
inc
and
movsb
xchg
aaa
incl
rolb
sbb
jl
jge
ret
mov
and
pop
and
rcrb
ss
ljmp
cmp
stos
andl
subl
hlt
test
or
sbbl
sarl
add
out
pop
mov
mov
xlat
das
idivl
and
or
sbb
inc
cmpl
push
push
and
aaa
iret
mov
imul
or
xor
pop
loop
sbb
mov
xchg
fcmovnu
out
push
xor
mov
mov
add
dec
gs
sub
ljmp
leave
js
or
add
out
aaa
lock
daa
sub
adc
push
imul
sbb
cmp
mull
hlt
adc
adc
pop
in
cmp
scas
subb
cltd
xchg
sub
mov
push
cld
fdivrl
and
test
pop
das
daa
lock
xor
lods
or
loop
test
pop
add
sbb
fwait
incb
xchg
push
xchg
xor
xor
or
xchg
fisttps
xchg
xchg
incb
roll
xlat
mov
sarl
test
lods
push
mov
into
jbe
in
cmp
dec
and
into
fwait
aas
inc
push
xchg
add
inc
mov
pusha
xor
adc
mov
dec
lret
mov
sub
mov
dec
mov
xchg
sahf
mov
cmc
fistl
jae
or
or
test
out
dec
ret
cmp
pop
xchg
adcl
sub
repz
scas
das
popa
mov
rcl
or
pop
repz
jle
arpl
pusha
clc
inc
stos
fmull
and
ret
mov
in
subl
xchg
jbe
stc
cmp
dec
lea
icebp
push
xchg
sub
xchg
rorl
test
xchg
das
mov
orl
leave
stos
cmp
inc
cmp
test
or
rol
pop
aad
rcrl
test
and
fidivrl
aaa
notl
les
mov
mov
fisttpl
bound
xlat
jmp
adc
jns
xchg
pop
test
sub
add
mov
loop
cmc
jne
mov
or
jnp
pop
fbld
adc
pop
mov
push
mull
popa
pusha
push
adc
mov
test
xchg
xor
call
rcr
xchg
stos
or
push
inc
mov
sbb
cmp
roll
jae
dec
shlb
pop
test
xor
xor
lea
jmp
lods
cmp
lahf
in
cltd
pop
and
das
jne
lea
cmpsl
cld
xor
dec
and
cmpsl
ficoml
xchg
fisubrl
mov
orl
push
into
stc
repz
repz
fstpt
ret
outsb
outsb
xlat
sbb
and
bound
fisttps
jno
mov
fs
mov
roll
mov
sahf
push
mov
jno
jg
bound
mov
shl
ljmp
xchg
mov
scas
push
dec
xchg
mov
jp
dec
push
pop
sbb
into
inc
push
repnz
aam
cmp
dec
or
loopne
int
mov
outsl
mov
jg
push
cltd
sub
dec
lahf
outsb
or
cmp
dec
dec
ficompl
cmp
add
or
rcr
adc
cmp
imul
push
pusha
imull
lret
enter
int
arpl
sub
jecxz
push
fwait
imul
cmp
sbb
insl
arpl
dec
push
jae
mov
xor
and
fisubs
jmp
aam
outsl
int
loope
test
cmp
and
mov
lcall
pop
mov
subl
inc
inc
stc
lret
and
aaa
in
pop
mov
cmp
sbb
xchg
adc
pop
push
divb
je
push
pop
test
sub
sub
shll
dec
and
or
mov
aad
push
outsb
cs
jmp
pop
cmp
fdivr
stos
and
cld
loope
push
xchg
jnp
pop
xchg
repz
add
dec
adc
ret
cltd
into
ror
lret
fbstp
and
cli
sbb
movsb
sub
jnp
mov
xchg
or
xor
jnp
mov
push
adc
or
mov
fwait
push
repnz
adc
leave
in
repz
test
lea
in
jge
icebp
and
dec
aad
lret
xchg
ret
push
sub
push
testl
leave
xchg
add
inc
test
lret
sarl
dec
leave
fs
or
int3
or
pusha
test
push
adc
leave
lods
mov
dec
xchg
mov
lcall
cmp
cmp
mov
filds
push
call
ljmp
cmp
dec
xchg
decl
es
rolb
cmpsb
mov
pop
gs
inc
pop
inc
gs
inc
movsl
push
sbb
lahf
add
xor
add
adc
pop
sbb
mov
mov
mov
mov
mov
xchg
in
lret
fdivrs
or
dec
dec
jl
sbb
sbb
shlb
cmp
fnsave
pop
cltd
dec
sbb
add
pop
pop
jle
lods
aas
in
sub
mov
cltd
adc
sti
push
scas
jns
in
ror
cmpsb
push
jno
mov
lcall
xchg
arpl
in
enter
test
push
cmp
ja
inc
pop
inc
pop
cs
je
mov
repnz
cmp
adc
jne
mov
jg
dec
xchg
jns
aad
lret
jecxz
scas
sub
dec
xor
xor
cltd
sub
enter
dec
dec
ss
pop
bound
pop
push
sbb
call
out
xor
lods
sbbb
push
jne
push
xchg
pop
and
shlb
dec
adc
pop
push
negl
push
sbb
xchg
pop
jne
cwtl
lea
fdivrs
sti
jecxz
fcmovu
xchg
cmpb
push
add
push
stos
cli
into
push
stos
lahf
notb
ret
sahf
mov
push
inc
cs
xlat
dec
push
mov
cmp
aas
dec
cmp
loop
sarb
or
movsb
std
les
fiaddl
leave
faddl
jne
lds
dec
inc
push
mov
repnz
loopne
scas
add
stos
push
aad
jecxz
ret
mov
inc
add
and
push
cmpl
scas
push
mov
lret
dec
jnp
int3
push
xor
add
outsl
xchg
jo
scas
or
push
pushf
mov
mov
sub
fisttps
push
aam
mov
adc
scas
mov
inc
pop
aad
xchg
gs
jle
in
arpl
mov
test
jmp
cmc
ds
lret
scas
push
xor
cmp
enter
ficoms
nop
clc
push
test
movsl
arpl
orl
jp,pn
pushl
jae
add
ret
stos
pop
jne
cmpsl
mov
js
add
mov
lods
adc
orl
pop
sbb
add
or
push
mov
xor
fldcw
sahf
inc
jecxz
mov
push
std
push
pop
icebp
std
adc
dec
pop
loop
jmp
xor
mov
dec
aas
or
push
xor
loop
scas
fcomps
out
cld
addb
movsl
inc
andb
inc
mov
pusha
sbb
nop
aas
mov
adc
mov
pusha
inc
in
push
fimuls
cs
and
scas
push
jge
sbb
mov
cli
pop
ss
or
pop
stc
mov
sbb
jnp
rol
pusha
shrb
sarb
roll
lods
sbb
test
in
add
gs
icebp
pop
jb
inc
xor
leave
xor
out
xchg
das
daa
push
into
imul
mov
orb
mov
mov
stos
push
std
and
mov
scas
into
fisubrs
mov
or
in
sub
adc
fs
test
adc
mov
cmp
gs
cwtl
test
adcb
mov
lret
mov
int3
lahf
and
xor
sbb
xor
lret
in
mov
clc
inc
cmpsl
nop
sarl
cli
adc
jbe
ss
mov
insl
in
dec
pop
jae
test
lea
shll
mov
mov
lahf
js
jle
dec
mov
es
cmpsb
in
sahf
jne
push
xlat
dec
out
dec
roll
and
push
ffreep
add
cmp
mov
aaa
in
jns
mov
jno
mov
lea
or
imulb
inc
mov
arpl
inc
rcr
pop
pusha
xchg
in
test
fsubrl
aaa
inc
mov
ret
ja
repnz
adc
sbb
jae
sbb
scas
cmpl
sti
pop
mov
jb
scas
jns
dec
stc
and
mov
mov
mov
mov
cli
test
and
xchg
or
jbe
into
je
into
sub
jge
lods
pop
jmp
xor
cli
xor
adc
ds
ja
das
xchg
inc
inc
sub
and
nop
adc
push
jmp
int
push
loopne
sbb
jecxz
loope
repz
les
push
mov
and
push
nop
dec
adc
or
adc
je
icebp
dec
xchg
arpl
xchg
sub
xor
mov
ss
ds
xchg
mov
mov
out
or
xchg
mov
cmp
hlt
push
mov
jmp
or
test
push
out
xchg
ret
adc
nop
or
shlb
clc
pop
and
mov
push
popf
mov
mov
leave
in
mov
sarb
rcll
xchg
and
mov
add
and
push
lcall
sbb
sub
pop
push
in
push
xlat
sbb
and
xchg
dec
inc
lahf
sbb
nop
dec
es
sub
push
pop
arpl
mov
fstpt
in
cwtl
pop
and
push
imul
cltd
lods
push
inc
mov
sbb
mov
enter
mov
negl
out
cmc
or
loop
stc
dec
scas
add
scas
lea
inc
test
mov
pop
ficoml
das
lea
mov
data16
mov
dec
popa
sbb
sbb
jmp
and
mov
xor
les
fcmovu
mov
push
rcr
pop
push
fmuls
jnp
fistpll
pusha
insb
cltd
gs
pop
mov
mov
das
sub
cmc
in
inc
arpl
lods
push
push
clc
jg
push
shll
test
popa
stos
add
shl
shll
int3
cmc
xchg
addl
jecxz
fisubl
ror
add
hlt
mov
xor
les
cmpsb
mov
negl
lods
sub
xor
repnz
ret
inc
and
outsl
fucomi
add
xchg
push
pop
mov
adc
incl
sub
in
mov
insb
adcb
xlat
add
add
mov
jo
addb
cmp
jns
fidivl
mov
fdivl
push
fcomip
mov
sbb
push
pop
sub
or
repz
fidivrs
cmc
popa
xchg
dec
inc
mov
sub
cmp
lock
pop
aaa
sti
mov
jecxz
mov
idivl
inc
add
jl
pop
in
cmp
cltd
xchg
bound
dec
mov
fs
inc
clc
mov
arpl
xchg
imul
mov
rclb
data16
dec
test
sub
or
sarl
ds
cmp
bound
cmp
jecxz
jl
xor
xor
aas
cmpsb
lahf
sti
aam
pushl
aad
cmp
test
push
mov
fwait
cmp
or
xchg
adc
push
lret
cmp
xchg
push
stos
repnz
jnp
jmp
dec
sub
xor
xchg
sti
mov
adc
insl
or
dec
cwtl
shll
cmp
or
push
xchg
mov
mov
jmp
pop
mov
fnstenv
pop
rcll
out
xchg
push
fwait
out
xor
lret
mov
mov
xchg
aaa
push
repnz
mov
mov
sbb
push
lds
xor
pop
xor
jl
adc
shlb
aaa
mov
into
fwait
aaa
movsb
fwait
push
and
shll
jne
jp
dec
pop
fwait
push
sub
mov
mov
aam
sub
fsubs
ljmp
add
jo
mov
sbb
cltd
push
sbb
loop
cmp
lods
push
and
adc
xlat
jecxz
cmp
xor
pop
test
mov
sar
cmp
mov
loop
mov
xchg
pop
inc
fwait
sub
je
jmp
xchg
mov
adc
pop
mov
jb
xor
imul
into
movsb
in
cmp
push
jg
es
repz
or
jle
ret
fdivs
add
insl
mov
adc
sub
push
add
sbb
dec
mov
pop
sub
fisttpll
inc
dec
cmp
xchg
pop
xor
inc
stos
pop
xchg
or
sub
loope
test
push
rolb
pop
xor
popa
rolb
push
ficoms
jp
mov
sbb
push
and
cltd
adc
scas
cmpsl
movsl
cmpsb
and
or
mov
xchg
lods
pop
fcomip
and
in
xchg
jecxz
ret
mov
out
or
jno
push
dec
push
lret
sub
in
testb
or
dec
sti
push
inc
movsb
ss
das
call
movsl
mov
andb
mov
add
int3
imul
add
cmp
sub
xchg
std
shrb
es
push
or
ret
repz
movb
add
inc
cld
ds
movsl
in
mov
dec
ss
pop
rcr
jecxz
push
push
cmp
mov
rcrb
dec
jnp
movl
lds
adc
cld
mov
xlat
add
in
push
sub
in
imul
fisubrl
enter
pop
add
sub
dec
lock
sbbl
stos
xor
ret
rclb
jae
pop
orl
mov
in
pop
sub
ret
mov
xor
int
inc
scas
dec
jmp
loop
xchg
test
dec
xor
xor
jno
fmuls
fistpll
in
pop
xchg
lods
sbb
or
mov
adc
fsubs
jl
adc
movsl
mov
inc
int
sbb
push
sbb
jbe
js
popf
int
jae
xchg
xor
adc
xor
iret
popa
hlt
mov
dec
xor
lea
test
and
ss
mov
mov
add
cmpsb
repz
in
mov
lods
add
aas
jns
cmp
fcmove
cltd
ljmp
nop
leave
and
hlt
icebp
movsb
enter
outsl
add
ret
add
nop
sahf
in
stc
push
jnp
hlt
jbe
push
fdivrl
fcomps
test
ret
pop
enter
mov
cvttps2pi
fcomps
in
std
adc
jmp
mov
fisttpll
xchg
adc
push
push
hlt
mov
inc
cmpsl
xchg
sbb
or
pop
mov
mov
shll
sbb
add
mov
sbb
and
sub
push
jg
add
cs
dec
in
scas
repnz
jmp
sbb
ss
out
shlb
mov
lea
or
mov
jmp
test
mov
xor
inc
fiadds
icebp
dec
fstp
icebp
mov
aad
icebp
out
loope
and
inc
mov
cmp
test
call
jmp
movb
mov
loopne
sbb
ja
stc
sbb
cmp
repz
mov
loopne
movsb
cmp
out
cltd
clc
mov
mov
ret
cmpsb
inc
jbe
or
inc
mov
inc
jnp
inc
add
push
jo
sbb
cmpsl
jns
aas
das
in
call
sub
stc
dec
pop
xchg
cld
les
enter
dec
mov
and
add
or
test
xor
aaa
imull
inc
push
push
lahf
sahf
gs
jg
sub
dec
or
cmpsl
sub
lret
daa
adc
adc
mov
inc
inc
push
pop
inc
int3
dec
mov
cmp
add
and
aaa
inc
rclb
ja
xchg
pop
and
pop
adc
or
dec
add
or
jg
or
jae
shrb
and
pop
xor
mov
hlt
mov
lret
test
in
xor
sbb
mov
sarb
sbb
xorl
jmp
dec
mov
test
fcomps
xor
shl
add
in
loope
mov
inc
outsl
lcall
arpl
pop
aas
jge
sub
push
cmc
push
notb
lahf
aaa
in
mov
xor
push
jns
xchg
xchg
aad
xchg
xchg
mov
mov
sbb
adc
sti
in
sti
xor
shll
add
iret
in
dec
lods
loopne
in
cld
or
jp
jb
or
jbe
int
mov
cltd
lods
stos
pop
aad
jmp
jmp
into
xor
movsb
push
daa
arpl
std
adc
out
and
and
imul
pop
mov
dec
scas
sub
outsl
xchg
mov
scas
and
loopne
xor
jb
dec
or
inc
push
xchg
mov
push
sti
lahf
push
mov
adc
outsl
adc
add
loopne
mov
fisubl
bound
and
mov
xchg
sbb
adc
mov
or
mov
pop
xor
repnz
adc
xchg
jb
or
dec
and
push
iret
jge
cmp
call
inc
orb
cmp
jg
dec
push
out
xchg
and
fldt
popf
sbb
sub
rorl
aaa
mov
jae
popf
lods
outsb
inc
mov
pop
push
dec
or
sub
imul
jno
dec
mov
jmp
xchg
test
push
popa
fwait
icebp
lcall
mov
pop
or
add
xor
push
push
cmpsb
imulb
pcmpeqd
xor
bound
xor
sub
mov
xchg
clc
mov
pushf
lahf
sbb
lods
jae
pop
and
insl
call
mov
and
add
dec
rolb
loopne
or
dec
fwait
orb
add
push
push
es
lods
iret
imul
lret
mov
mov
pop
rcrl
scas
mov
cmp
aam
inc
scas
adc
or
sbb
sub
xchg
push
jo
movsl
mov
jnp
mov
jb
fistl
and
jb
cli
cli
leave
clc
sbb
into
js
jp
cld
stos
inc
xor
das
dec
push
push
ja
std
jnp
jecxz
loop
hlt
or
sub
nop
add
mov
jo
xchg
jae
jbe
sahf
hlt
outsb
sbb
ffreep
sbb
mov
sarb
xor
pop
adcb
in
add
mov
sbb
dec
lcall
jnp
rcrl
stos
cmpsl
popa
andl
cltd
add
cwtl
dec
dec
stos
and
mov
dec
cmp
and
sahf
jp
push
clc
inc
mov
fxch
sbb
mov
jbe
pop
fmuls
out
dec
loope
mov
dec
mov
cmpsl
fnstcw
bound
cmp
mov
out
lods
mov
daa
xchg
lret
inc
movsb
mulb
mov
jns
inc
push
push
add
push
fmull
push
cmpsb
aaa
sahf
push
or
insl
jno
pusha
adc
inc
aam
xor
imul
test
subb
mov
jg
jecxz
jne
sbb
xchg
xchg
sbb
in
xchg
loope
mov
fsts
dec
popf
jmp
out
xchg
inc
mov
in
inc
ja
fmuls
ret
mov
daa
lods
loope
dec
sti
jnp
cwtl
into
movsb
xchg
sub
test
movsb
rcl
dec
fidivs
movsb
mov
imul
iret
or
mov
jb
movsl
xchg
aam
mov
dec
je
adc
cmpsl
xchg
mov
shl
xchg
idiv
data16
sub
fcomps
dec
pusha
add
outsl
xchg
inc
pop
rorl
test
add
leave
fs
testl
or
xor
iret
fidivrl
cmpsl
cmc
mov
insb
inc
aas
sub
fwait
cli
cmpsb
mov
dec
adc
das
mov
out
call
or
test
adc
outsb
sti
pop
fsubrl
stos
outsb
or
daa
push
push
pop
fs
pop
insb
scas
dec
mov
into
movsl
sbb
push
test
iret
out
and
cmpl
or
dec
cmp
xchg
bound
inc
mov
inc
push
jl
addl
scas
adc
xchg
adc
gs
push
mov
dec
pop
jp
xor
shll
data16
int3
jle
mov
sbb
js
dec
int
stc
pop
xchg
add
iret
mov
icebp
cltd
mov
mov
cli
bound
mov
jl
mov
or
xor
lds
cli
aam
and
aas
mov
stos
add
pushf
sub
mov
and
leave
pop
shlb
and
xor
inc
sub
xchg
push
movsb
lods
push
rclb
ficoms
dec
adc
cs
jns
sub
jnp
in
and
xchg
subb
jmp
and
ljmp
shll
push
sub
jge
std
jecxz
add
add
pop
insl
aam
loop
mov
dec
movsl
xchg
mov
pop
jle
add
or
and
data16
sub
in
addl
jge
mov
in
jge
sahf
inc
cltd
negb
xchg
fs
and
int3
pop
mov
mov
insb
sbb
sbb
push
xchg
mov
das
insb
hlt
dec
push
leave
cmpsb
pop
push
sbb
xchg
inc
insb
fwait
sub
notl
mov
testl
cmpsb
fdivl
mov
xchg
aad
jmp
cmp
lods
int3
jmp
aam
jae
inc
cmp
or
das
loopne
repz
scas
mov
mov
int
push
push
or
ucomiss
neg
lret
inc
ret
push
cmpsb
je
sub
out
rol
push
push
jns
xor
fisttpl
aad
pop
call
imul
inc
jno
mov
mov
and
arpl
in
inc
mov
jo
adc
movsl
push
sbb
xchg
sbb
data16
lret
xchg
jmp
ljmp
xchg
cld
leave
jg
fsts
mov
and
mov
xchg
pop
rcrb
add
jp
pop
sub
test
mov
mov
inc
mov
xchg
mov
pop
push
sub
cmp
fisubs
je
punpcklbw
les
add
test
ret
aas
lahf
test
mov
cmp
pop
iret
out
inc
addb
out
insb
mov
loop
and
test
inc
or
daa
sub
push
fxch
sub
mov
mov
call
out
imul
cmpsl
imul
lret
xlat
pop
push
jo
and
mov
insb
sbb
lds
mov
out
js
push
push
insl
cmp
insl
push
mov
popf
mov
add
sbb
mov
mov
out
push
cmpb
mov
or
orb
in
adc
pop
jmp
outsl
in
add
cmp
xchg
negb
push
inc
mov
add
cld
sbb
jmp
push
cmpsb
xchg
xchg
add
xchg
xor
cmp
cld
xorb
imul
arpl
sub
ss
jo
leave
xor
cli
iret
cmc
int3
adc
lahf
inc
les
xchg
fbstp
xor
inc
push
sbb
fstpl
mov
shl
inc
adc
push
rorl
les
mov
inc
out
icebp
out
inc
rcl
cmc
inc
in
inc
dec
xor
into
push
orb
cmp
sbbb
imul
aas
loope
push
jecxz
aam
mov
jl
stos
fbstp
ljmp
push
xchg
lds
incl
push
fidivrl
les
lahf
mov
mov
pusha
and
pop
sbb
push
pop
mov
push
scas
stos
mov
fmuls
inc
add
lods
test
mov
mov
pop
cmc
sub
push
sbb
xchg
cmpsb
pop
jbe
pop
mov
ret
sbb
xchg
lds
dec
sbb
inc
xchg
sti
test
sub
inc
push
outsb
outsl
mov
popa
or
pop
cmp
mov
mov
sub
and
rolb
sbb
pop
cmp
movsb
fdivrl
cmpsb
push
rorl
dec
xor
mov
inc
test
fwait
mov
sub
lret
lea
pop
lock
add
and
orb
stc
stos
loope
shrl
sbb
pop
add
adcl
or
jne
push
es
sub
pusha
mov
pop
movsb
fisubs
loopne
push
sbb
jecxz
sub
push
ss
inc
push
sub
mov
ljmp
fsubrl
fs
js
jg
lcall
int
add
mov
shrb
shlb
not
pop
sbb
lods
mov
mov
or
push
sub
fistps
mov
lret
mov
mov
iret
mov
mov
push
sbb
push
data16
and
pop
test
fimull
push
lcall
ljmp
dec
jmp
mov
cmp
scas
cmc
lea
aad
pop
pop
or
stc
dec
enter
jg
pop
js
imulb
mov
loope
stos
dec
xor
push
pop
lahf
jno
fisubs
jg
inc
negb
and
cli
or
mov
push
xchg
xor
cltd
dec
jmp
push
je
mov
scas
push
ret
and
cmpsb
adc
outsl
enter
add
inc
pop
movaps
cld
pushf
or
sub
mov
dec
xor
dec
xor
scas
clc
or
aaa
and
sbb
push
daa
stos
push
inc
pop
shlb
inc
xchg
outsb
sbb
xor
lret
cld
jmp
xchg
fwait
mov
scas
mov
xchg
loopne
push
ss
fldenv
rolb
or
mov
ss
enter
mov
fsubp
or
popa
ret
shll
lcall
lahf
jnp
jb
test
insl
xor
cmc
fsub
lods
jge
insb
stos
loop
xorl
in
cli
mov
dec
xchg
mov
and
xor
jl
int3
je
xor
push
dec
int3
leave
clc
ljmp
sbb
mov
loop
mov
fwait
xchg
lds
mov
jecxz
xor
stos
jb
mov
out
push
jb
imul
sahf
aad
mov
outsb
pop
cli
js
cmp
mov
rcrb
gs
sub
adc
stos
and
mov
mov
dec
push
std
dec
lods
dec
or
dec
cmpsb
jno
pop
push
xchg
sbb
movsb
out
xor
jge
add
mov
add
and
stc
jmp
aam
call
adc
movsl
stc
inc
pop
test
hlt
cmc
subb
dec
loop
push
out
inc
sbb
arpl
dec
cmpsl
or
popa
mov
push
push
movb
push
ss
outsl
sbb
push
pushf
bound
fs
xchg
fidivrs
xor
daa
lods
in
cli
xlat
lods
test
cld
mov
pop
push
mov
ljmp
adc
mov
jae
adc
inc
outsb
fcompl
mov
cmp
fwait
xchg
adc
pop
out
rcl
adc
imul
xchg
hlt
xchg
xchg
cmp
sti
inc
lretw
sbb
mov
mov
jmp
add
and
jg
xor
cld
cmpsb
int3
sub
arpl
pminub
ja
adc
fisttps
dec
add
icebp
adc
in
sub
int
dec
push
mov
scas
inc
xor
sub
sti
sahf
cmp
mov
mov
dec
scas
mov
lods
push
or
push
enter
in
bound
xchg
in
push
xor
shlb
cld
pop
lahf
sbbb
jl
or
jnp
add
and
lret
js
fdivl
flds
mov
aas
xchg
mov
lret
int
push
pop
clc
xor
test
test
int3
test
cs
inc
pop
ret
sbb
lock
movsl
or
fidivrs
stc
sti
xor
cld
cs
leave
dec
lret
and
ret
cmpsl
fisubrs
fs
cli
movsb
pop
mov
xchg
inc
xor
xor
push
cwtl
xor
movb
stos
imul
xor
ja
xchg
sti
push
inc
inc
lea
loopne
in
cmp
mov
pop
cltd
pushf
repz
stos
xchg
jne
push
cmp
add
jg
mov
loop
mov
cmp
dec
xchg
lret
push
sbbb
push
pop
xchg
mov
adc
out
or
adc
loope
sub
out
adc
in
push
lds
dec
jnp
mov
jnp
mov
xor
pop
pop
xchg
rolb
hlt
js
js
loope
pop
cmc
std
loope
sub
testb
cmpsl
shll
in
fs
or
pop
ret
ljmp
inc
mov
xchg
jmp
popf
sub
lods
xchg
cmp
ret
mov
lods
mov
mov
jo
push
lods
popa
mov
lcall
pop
lret
push
pop
and
sub
in
in
aaa
pop
sbb
les
mov
rcrl
fwait
or
addr16
daa
bound
test
jno
daa
push
test
arpl
test
mov
mov
fdivrl
dec
out
sbb
loope
shr
pop
or
push
xchg
inc
push
bound
sti
stos
cmove
mov
hlt
mov
lock
pop
add
clc
mov
mov
adc
and
out
cld
pusha
fsubrl
nop
bound
aad
fcomps
sbb
and
mov
int3
dec
jl
loopne
stc
iret
jecxz
inc
dec
mov
add
mov
dec
inc
clc
mov
in
dec
jp
inc
idivb
pusha
jbe
aaa
pop
sti
sti
mov
xchg
ret
and
push
sub
xchg
add
into
or
xchg
adc
mov
ret
pop
dec
push
mov
insb
cmp
call
in
cld
pop
inc
dec
adc
stc
jo
jle
sub
sub
sub
xchg
add
dec
adc
sbb
jne
mov
mov
mov
push
pop
pop
insl
pop
ja
dec
imul
cmc
test
test
and
adc
and
movsb
and
ljmp
in
cmpsb
sbb
daa
rcll
je
dec
or
mov
pop
push
push
sub
lsl
cmp
mov
lods
push
dec
mov
nop
add
das
sbb
push
fs
push
sahf
mov
insb
mov
cmp
inc
or
je
xlat
jbe
mov
pushf
cmpsl
in
push
test
push
push
push
mov
nop
dec
inc
icebp
cmpb
and
mov
ds
sbb
pop
xchg
test
and
mov
not
addr16
ja
stos
dec
mov
jmp
and
sbb
popf
jnp
cmp
mov
addb
fidivrl
xlat
jg
sbb
or
gs
push
rol
sbb
hlt
cmc
pop
adc
ret
int3
call
imull
push
insl
mov
mov
or
lcall
add
enter
bound
push
outsb
push
orl
nop
push
iret
in
lea
outsl
jg
in
loope
rorl
ficomps
push
xor
or
sbb
push
pop
cmp
cmp
cmp
inc
mov
adc
scas
aaa
and
arpl
fadds
jns
mov
ljmp
push
hlt
call
addr16
dec
cmp
test
leave
xchg
outsb
push
lea
pop
repnz
loopne
push
es
mov
dec
pop
mov
or
ficompl
cmp
rorl
lods
sbbb
stos
pop
popf
cmpsl
mov
push
jae
outsl
sub
pop
orl
cwtl
imull
jp
cmp
inc
xchg
ljmp
ficoml
stc
sub
es
mov
lods
in
pop
addb
js
fstps
das
or
dec
mov
jne
add
pushl
scas
dec
push
fmuls
shrl
or
stos
dec
pushf
sbb
jecxz
mov
sub
push
repnz
jl
pop
inc
push
mov
sub
into
cmpsb
movsb
jecxz
lods
icebp
jecxz
shll
mov
inc
cmpsl
subl
mov
ret
inc
mov
fwait
lcall
xchg
rol
dec
test
popf
mov
and
jmp
dec
and
jbe
jmp
imul
jecxz
adc
or
int3
mov
arpl
ss
repz
xchg
repnz
or
jbe
and
popf
push
std
push
xchg
les
ljmp
or
mov
and
pushf
imul
loop
mov
jp
pop
xorb
mov
cmp
jecxz
mov
mov
mov
add
sbb
dec
movsl
sub
cltd
adcb
push
add
fwait
mov
mov
xor
sbb
cwtl
mov
xchg
xor
pop
xorb
and
cmpsb
stos
mov
je
mov
dec
mov
mov
fcompl
or
sbb
out
adc
clc
jne
sarl
mov
push
cwtl
incb
xchg
mov
mov
inc
adc
movb
stc
lret
or
pop
insl
and
mov
nop
push
out
jne
mov
cmp
adc
lcall
pop
ljmp
mov
xchg
mov
xor
push
add
jne
cwtl
cmp
test
fstl
push
fsts
lret
xchg
mov
add
dec
rol
out
cmpl
push
les
pop
cs
mov
sarb
push
fwait
out
stos
stc
xchg
faddp
adc
mov
ja
add
imul
enter
sbbb
mov
out
fdivrs
lcall
sub
dec
jbe
fimull
fiaddl
roll
hlt
xor
enter
pop
mov
xor
xchg
sahf
in
mov
push
stc
ret
inc
sub
mov
sti
mov
jo
jmp
popf
adc
shlb
fwait
inc
addl
or
lea
cld
cmp
popf
adc
or
fcoms
ljmp
mov
mov
shlb
add
fistpl
mov
push
sbb
movsl
lahf
cmp
sbb
inc
mov
inc
fucomi
xor
add
jp
movsl
jecxz
lahf
sbb
aam
inc
fs
pop
dec
mov
and
mov
sbb
je
js
dec
adc
inc
mov
xchg
mov
mov
lret
sbb
insl
dec
inc
out
jmp
jle
sbb
ss
adc
dec
lcall
jp
dec
add
add
adc
aad
sub
imul
mov
popl
fistpll
dec
daa
sbb
scas
in
aam
scas
or
jl
mov
stos
and
stos
adc
call
cwtl
xor
sub
mov
add
push
dec
cld
mov
lret
cmp
add
sub
pusha
imul
xchg
push
xchg
or
mov
iret
movsl
clc
and
pop
xor
out
dec
mov
loopne
inc
pop
mov
jb
nop
dec
xor
mov
dec
sahf
in
mov
outsb
add
and
icebp
movl
sub
movsb
push
pushf
div
jns
psadbw
popl
fdivrs
stos
pop
adc
push
inc
adc
mov
push
jnp
roll
test
xor
fwait
mov
jl
cltd
cmpb
jle
mov
jmp
mov
lea
fsubs
mov
loope
je
pop
stos
icebp
loope
fimull
lret
leave
daa
and
or
mov
jne
fs
push
inc
xor
xor
jmp
mov
xor
sub
push
addr16
insl
cmpsl
sbb
jae
sbb
mov
inc
jge
mov
sbb
or
mov
mov
pop
hlt
mov
jbe
aam
add
mov
sbb
cs
push
mov
add
xlat
mov
pop
pop
addr16
and
xor
icebp
push
add
sbb
mov
scas
adc
mov
mov
mov
mov
stos
fs
lods
ja
cmp
adc
ret
shll
dec
sub
lcall
popf
mov
or
repz
and
jg
mov
es
popa
jnp
lret
cmpsl
and
add
popf
dec
sbb
repz
movsl
clc
jg
pusha
jns
bnd
arpl
sbb
or
and
icebp
mov
jnp
popa
push
cmc
push
dec
in
jmp
or
and
cmp
push
ja
ss
js
and
push
popf
shll
cmp
xchg
neg
das
inc
into
mov
pop
jl
xor
test
lods
test
addr16
xchg
add
ss
mov
inc
rol
adcl
adcl
jge
mov
mov
xchg
out
inc
popf
cmp
test
test
test
scas
test
push
or
jne
test
sbb
call
add
sbbl
aam
jns
je
iret
call
je
xor
lret
push
jg
lods
mov
mov
xchg
outsl
ljmp
jmp
outsb
cmp
xor
ss
sub
leave
icebp
idivb
inc
imul
cmp
adc
bound
test
xchg
pop
loope
std
mov
mov
scas
std
sti
movsl
mov
xchg
sbb
xchg
xor
imul
outsl
cmp
mov
add
xchg
adc
repz
test
imul
cmp
pop
add
add
mov
lods
adc
or
loope
ljmp
fisubrl
pop
mov
push
push
sub
pop
cmp
cmpsb
enter
test
mov
lock
cmp
mov
imul
dec
stc
mov
inc
lahf
pop
dec
sbb
sub
push
or
mov
jb
mov
sub
xor
mov
xchg
mov
xorl
xchg
jl
stc
fisttpll
xchg
ret
pop
jne
js
test
ds
fwait
or
jb
mov
ret
fdivrp
sub
xorb
sti
dec
mov
or
test
lcall
push
xlat
mov
in
fbld
add
inc
stos
jge
scas
dec
jg
aam
add
sub
push
dec
fimuls
sbb
scas
ja
push
add
add
into
pop
dec
insl
sbb
push
cmp
cmp
sub
pushf
shrb
fbstp
add
sub
stos
mov
push
mov
not
lret
push
cmp
xor
arpl
inc
sbb
fstpl
lods
jp
and
jbe
ss
rcrl
mov
stos
rcrl
pushf
int3
mov
add
push
xorl
cmpsl
push
jecxz
mov
xlat
jle
clc
pusha
dec
jle
inc
repz
xor
adc
ljmp
xor
sti
xchg
imul
jp
shll
adc
mov
and
jmp
jg
out
jl
dec
shll
lds
aas
outsb
adc
or
jp
in
shll
sbb
mov
rorl
mov
sub
add
int
in
cs
mov
sbb
dec
js
mov
mov
xchg
xchg
lcall
enter
xchg
das
roll
jmp
lods
xchg
push
dec
pushw
and
sbb
andnps
gs
mov
sub
or
xor
mov
add
push
xorb
fwait
push
mov
outsb
out
aam
inc
repnz
pop
in
add
cmp
jne
add
lcall
imul
cmp
es
add
inc
movsb
push
push
stos
mov
cwtl
sub
mov
es
xchg
push
jb
ret
push
add
mov
aaa
dec
lret
mov
sbb
lods
adc
fs
cltd
pushf
cmp
scas
cmp
lods
add
lock
xor
cmp
fwait
jnp
js
test
sub
mov
inc
jo
jp
and
mov
ljmp
lret
push
pop
xor
xlat
movsb
lds
sub
popl
adc
jae
cmpsb
aam
test
add
inc
or
add
pop
pop
sub
js
ds
cwtl
adc
loop
xor
int
mov
rolb
or
clc
es
mov
add
aas
adc
nop
stos
in
mov
test
shrb
out
leave
test
dec
mov
inc
xor
lods
mov
hlt
aad
add
sub
cld
lds
frstor
mov
shlb
jmp
dec
jo
call
adc
gs
pop
jo
pop
pop
aaa
idivb
inc
sub
push
push
or
or
jmp
js
sub
adc
push
push
mov
dec
aas
jbe
shr
mov
dec
loope
stc
cmp
mov
outsl
mov
xrelease
sub
add
sub
xchg
adc
ja
pop
decl
popf
fldcw
sub
lods
push
mov
fisubrl
push
fwait
std
ret
cmp
jns
mov
xor
pushf
sbb
mov
sub
aam
test
test
rorb
jns
insb
cmp
mov
mov
out
insl
int3
add
push
mov
out
mov
mov
stc
cmc
shlb
outsb
sti
inc
push
mov
dec
xor
into
fadds
add
ja
and
jns
fcomps
xchg
lret
mov
aas
aas
jmp
out
mov
push
inc
bound
adc
cmpsb
out
adc
cmp
inc
adc
pop
mov
pop
or
neg
sub
lea
adc
add
fwait
imul
lods
inc
loop
rorb
jl
mov
gs
push
sbb
and
test
icebp
inc
sbb
sbb
xor
in
lret
insb
andl
mov
mov
cwtl
lods
sub
in
scas
dec
imull
loopne
repnz
pop
jbe
repz
cmp
xor
ja
fisttpll
add
xor
mov
jo
push
lahf
aas
xchg
inc
mov
test
aam
pop
sub
out
pop
je
les
popf
ljmp
jb,pt
sbb
xor
aam
ljmp
dec
xchg
sbb
xor
pop
insl
jmp
xor
jno
jno
negb
in
xchg
mov
adc
inc
xchg
pop
dec
hlt
jmp
lret
mov
rolb
xor
sub
jge
jno
mov
inc
loop
mov
adc
into
ja
mov
mov
jecxz
mov
adc
shl
sbb
subl
outsb
mov
inc
sbb
adc
adc
mov
sbb
mov
insl
or
or
idivl
popf
xchg
scas
sbb
out
push
cmp
xchg
ret
jno
or
clc
mov
incl
push
fldcw
sahf
outsl
ds
pop
imul
outsb
inc
das
lcall
test
repz
pushw
imulb
pop
iret
fdivr
imul
sub
lods
movl
lods
inc
sbb
into
mov
test
fmull
inc
push
rolb
inc
cltd
pop
enter
loope
sub
rorb
je
aad
pop
fdivr
test
dec
aad
pushf
mov
xchg
add
add
xchg
inc
pushf
movsl
inc
lods
les
shrb
scas
lods
or
adc
and
mov
rcl
roll
test
jl
fwait
pop
pop
cli
xor
das
jae
popf
add
sti
push
data16
cs
pop
pusha
or
pop
lods
daa
add
shl
pop
sbb
sti
mov
sub
das
cmp
hlt
pushf
add
lods
test
adc
adc
push
js
mov
add
or
pop
les
mov
cmp
cmp
xchg
stos
sbb
ret
push
dec
aas
xor
mov
enter
call
xor
mov
adc
decl
int3
mov
mov
and
cld
cmpl
xor
inc
pop
cmp
imul
push
jle
pop
inc
enter
data16
xlat
and
into
lcall
cs
mov
dec
cmova
mov
mov
leave
sbb
test
out
rcrl
sub
sbb
je
adc
call
mov
mov
xlat
into
cmp
insl
push
loope
imul
mov
sub
shrl
fadds
xor
shlb
mov
and
sbb
mov
rorl
sbb
lods
or
or
sub
int3
mov
and
rorl
andl
nop
lods
mov
push
das
and
mov
cmc
shl
jmp
xor
inc
mov
lods
outsl
dec
movsl
adc
or
out
daa
cmpb
aas
adc
mov
jecxz
mov
or
pop
mov
dec
sub
and
js
pop
pop
xchg
xchg
xchg
push
ret
push
cmp
scas
xchg
jge
xchg
lcall
lock
daa
mov
aam
cmp
dec
mov
push
out
adc
adc
out
cltd
xor
add
cmp
jle
imul
lret
fildll
sti
jnp
nop
push
xor
pop
or
xor
cmp
aas
pop
push
std
fistpl
lds
mov
cmpsl
pop
sub
push
lods
imull
jno
sub
xorl
cmpsl
jno
and
jns
xor
lcall
test
insb
popl
mov
mov
inc
les
pop
sub
xor
xchg
adc
ss
mov
and
pop
arpl
pop
mov
dec
cmpl
mov
lret
and
negb
outsl
lock
mov
xchg
xchg
test
stc
jnp
lcall
cld
dec
mov
ja
jb
mov
scas
jnp
pop
std
sbb
outsb
adc
xchg
lcall
outsl
mov
dec
loop
stos
ret
outsb
mov
adc
pushf
and
mov
pop
das
enter
mov
xchg
add
or
in
cmp
dec
call
aaa
add
loop
sub
pop
sub
pop
aam
aam
push
pop
popa
fmuls
rorl
xor
les
or
mov
out
inc
enter
js
jno
imulb
sarl
stos
adc
fwait
or
cmp
mov
fidivs
cmp
test
call
stos
jne
cmc
dec
lock
mov
cmp
daa
fistps
std
int
mov
adc
pusha
call
cs
movb
push
fs
pop
xchg
mov
adc
xor
mov
adc
pusha
inc
fcomps
push
sarl
fwait
add
cmp
fs
mulb
add
add
cli
and
popa
jo
jg
inc
jl
mov
incl
mov
xchg
add
cmp
xchg
ficomps
jae
mov
decl
faddl
pop
ret
inc
mov
cmp
cmp
nop
pop
pop
cmpsl
inc
sbb
out
sahf
jmp
cmpsb
adc
inc
jns
inc
ja
sbb
jp
mov
inc
xor
push
subl
lret
das
cs
push
and
shr
pusha
fndisi(8087
sbb
mov
add
test
cmp
cmp
pop
or
sub
aas
faddl
pop
mov
mov
sbb
mov
es
jmp
pop
xchg
daa
call
cmp
inc
lods
dec
pop
in
jge
popa
jecxz
bound
shll
inc
jo
adc
xor
nop
fsubrs
cmp
pop
lea
add
mov
shrl
popf
jb
sbb
inc
mov
je
fwait
jno
xchg
insl
xchg
outsl
cld
fbld
mov
int3
cmp
inc
test
sbb
cmp
push
out
push
mov
hlt
repz
shufps
add
roll
aas
dec
adc
rcl
mov
jne
mov
lahf
repnz
outsb
mov
clc
test
mov
cld
pushf
xchg
add
cmp
adc
out
pop
mov
pop
fadds
push
xor
faddl
rcrl
out
lret
test
lret
and
cmp
bound
test
fcmovne
or
xchg
mov
jnp
daa
dec
push
mov
sbb
scas
mov
jo
pop
xor
mov
aam
xchg
movsl
mov
sub
fiadds
adc
mov
ret
loope
js
dec
scas
push
inc
test
pop
rcll
cs
lret
add
fnstcw
cmc
pop
inc
mov
push
inc
push
inc
test
fstl
mov
jns
adc
xchg
push
xor
push
pop
sub
out
shrl
jns
xor
adc
stc
ret
dec
mov
stc
sub
jmp
lea
loope
add
inc
clc
sbb
shl
mov
roll
add
lcall
pusha
mov
lds
lret
fdivrs
mov
cmp
dec
mov
pop
stos
dec
addr16
xor
xchg
jmp
push
cmpsl
xor
ja
add
jo
cmc
mov
lret
pop
jae
xor
adc
fcmovbe
repz
jecxz
mov
insl
repz
insl
mov
dec
pop
mov
ds
jae
mov
add
push
aad
lods
or
sahf
add
incl
test
push
xchg
and
xchg
adc
jle
dec
js
mov
dec
or
fadds
dec
mov
push
and
cmp
xor
mov
lds
push
cli
push
inc
push
lock
xchg
mov
mov
iret
or
add
mov
cmp
pop
lret
call
push
in
fisttpl
mov
pop
incl
adc
mov
inc
mov
pop
lahf
pop
push
into
je
repz
stc
orb
push
push
int3
in
aas
xor
scas
sbb
mov
cmp
loop
pop
into
lea
adc
push
jnp
insl
idivl
out
jge
in
ficoml
lds
jbe
mov
dec
dec
out
out
add
int
inc
mov
xor
pop
movsb
ja
into
loopne
push
and
aas
adc
mov
push
fdivrs
mov
inc
into
xor
fwait
jo
ss
ret
jmp
aaa
test
mov
cmp
inc
add
mov
push
jl
inc
jb
dec
stc
les
jle
mov
xchg
data16
dec
or
imul
and
mov
mov
jae
mov
pushf
mov
fs
fdivp
and
shl
inc
jle
es
cltd
shl
pop
insl
xor
inc
push
or
imul
in
push
sti
add
xlat
jle
jge
cmp
push
adc
sub
inc
vmovups
add
push
negl
jge
out
sub
dec
sbb
sub
and
in
push
mov
pop
push
fcoml
lds
sub
pop
aam
and
stos
int3
movsb
or
rcll
loopne
shrl
std
pop
xlat
das
in
jnp
les
dec
inc
xlat
push
xor
or
stos
xchg
cli
sti
jne
push
push
sbb
out
xchg
outsl
test
pop
test
ds
cmpsl
inc
filds
xchg
jbe
pop
xlat
addl
rolb
rolb
rol
popf
sbb
scas
daa
fdivrs
and
in
rcrb
les
scas
pop
stos
cwtl
cmp
mov
mov
shr
fldz
nop
data16
jge
jle
cmpsb
insb
iret
dec
push
in
cwtl
hlt
add
push
or
and
js
mov
jl
push
cli
loopne
pop
adc
mov
lret
sbb
and
xchg
pusha
jb
mov
dec
lods
xchg
mov
cmpsb
mov
xchg
es
sahf
clc
dec
lds
pop
add
leave
daa
outsl
or
mov
inc
sahf
pushf
jne
or
cmp
dec
mov
mov
mov
push
cmp
or
adc
stc
cmpsb
lea
sub
fcmovu
push
mov
call
sub
out
xor
popl
dec
icebp
pop
aad
testb
sti
outsb
jle
or
testb
pop
dec
xor
push
xchg
sub
je
arpl
jne
sbb
jge
stos
and
scas
adc
dec
sub
and
stc
mov
movsb
mov
pop
sbb
dec
dec
out
sarb
in
mov
cmp
lock
and
jecxz
movsb
loop
out
cmp
mov
and
adc
xor
jg
xchg
ja
ljmp
pop
ret
push
aas
xchg
push
in
sub
into
and
sahf
jnp,pt
ja
or
xlat
sbb
and
imul
addl
xchg
movsb
xchg
sbb
cld
jmp
or
fmuls
pusha
pusha
inc
js
aaa
jp
scas
out
xor
push
ss
shlb
jmp
push
outsl
psadbw
ja
pop
xchg
xor
xchg
add
loopne
jmp
pop
and
stos
jne
and
shl
mov
push
jnp
add
in
jge
cld
mov
cmp
stc
cmp
mov
ret
test
xchg
push
stc
cmp
pop
loopne
jb
xchg
jecxz
lock
lret
iret
push
xor
jg
rcr
ret
lret
inc
adc
je
mov
pop
cwtl
ret
cmp
aam
jnp
mov
or
cmp
cmpsb
lods
dec
mov
lret
std
dec
cwtl
fwait
pop
or
fsubr
rcll
pop
mov
and
scas
vpsubb
aaa
lea
icebp
fsubl
addl
fists
dec
inc
rcrb
jns
push
in
add
cmp
inc
inc
bound
leave
dec
cmc
pop
enter
xchg
or
arpl
pop
pop
iret
sbb
mov
out
orb
test
dec
or
shr
dec
ret
pop
mov
jns
insl
insl
adc
pop
cmc
mov
fcomi
sbb
jg
adc
shrl
and
inc
adc
and
ret
shll
ds
cld
popf
sbb
adc
in
fdivrl
mov
popf
sub
push
add
in
push
imulb
jl
inc
cmpsb
shrb
dec
dec
lahf
dec
lret
fists
cmp
popf
cmp
inc
jecxz
insl
das
lcall
call
loop
insl
jbe
mov
pop
xchg
mov
pusha
jecxz
or
negb
fmul
and
loop
push
mulb
stos
jge
sbb
mov
sbb
ret
fmuls
sbb
dec
jge
xlat
add
addb
add
in
movsb
ret
rcl
and
xchg
in
inc
pop
sub
mov
dec
insl
test
jb
clc
push
push
fcmove
push
jno
xor
rcll
ja
push
ret
push
mov
jmp
mov
je
ljmp
repz
in
mov
jne
dec
orb
mov
jne
fcmovnbe
addr16
std
adc
sub
jne
push
pop
cltd
mov
add
lahf
rcrl
mov
jge
pop
inc
sbb
mov
dec
mov
dec
adc
push
mov
add
or
arpl
dec
sub
lcall
lea
je
mov
stos
rcrb
pushf
pop
pop
outsb
push
mov
sub
sub
std
xchg
or
xchg
jb
rclb
mov
repz
or
jbe
pop
jle
push
pop
sbb
push
icebp
enter
or
add
or
icebp
dec
and
out
roll
and
sub
test
leave
jge
test
std
fwait
call
pushf
fistpl
in
xchg
xchg
dec
mov
cmp
jmp
dec
in
sub
int3
sbb
hlt
pop
arpl
test
imul
jmp
jns
decb
in
mov
cmpsl
jb
pop
insb
mov
mov
adc
dec
inc
xchg
push
decl
cwtl
fs
call
mov
imul
lds
sahf
or
scas
pop
sub
cld
hlt
popa
jb
jo
scas
mov
xlat
fwait
pop
aad
jbe
mov
push
repnz
xor
int
jmp
dec
jne
mov
mov
imul
mov
lret
xchg
add
daa
mov
or
add
fidivs
aad
xlat
dec
addr16
test
mov
fists
dec
pop
and
ret
mov
xchg
pop
into
loopne
mov
pop
adc
cwtl
sbb
arpl
addr16
test
and
push
lret
inc
lock
or
pop
adc
int3
push
stc
and
jns
jge
add
adc
jae
fmuls
xlat
mov
jo
and
bound
or
push
aas
cmc
cltd
pop
stos
pop
jg
jo
jno
mov
sbb
xchg
xchg
push
fs
pusha
inc
add
sti
loop
sub
mov
outsb
fbstp
inc
mov
pop
std
add
outsb
pop
sbb
or
cmp
fldt
xchg
sub
sub
hlt
jmp
scas
inc
and
arpl
and
fwait
xor
repnz
jb
fisubl
push
inc
xlat
jle
out
inc
xchg
aas
xor
pop
fidivs
jns
data16
and
imul
xor
add
movsb
jnp
in
lods
push
jb
lahf
fildll
shlb
addr16
jo
filds
adc
js
les
dec
lcall
push
inc
add
aas
leave
ret
pop
sub
adc
mov
xchg
sbb
aaa
mov
sarl
js
cmp
les
mov
enter
lods
push
call
xor
add
decb
add
lds
jne,pn
sub
or
int
xchg
adc
popf
xchg
subl
adc
mov
push
cmc
adc
adc
inc
mov
jns
jbe
adc
xchg
inc
adc
jle
nop
jp
push
arpl
lds
dec
mov
mov
mov
int
mov
adc
cmp
cmp
stos
mov
mov
movsl
mov
push
and
cs
test
rcll
add
cltd
dec
push
dec
jbe
mov
push
nop
cmc
mov
cli
mov
repz
xor
rcr
fnstenv
pusha
test
shll
push
inc
sbb
jae
call
add
pop
fldcw
imul
jb
dec
je
inc
jo
mov
es
cmc
inc
xchg
cltd
fisubl
cwtl
ljmp
and
jae
xchg
inc
test
insl
mov
sbb
test
sahf
mov
pop
lahf
or
js
cs
adc
in
mov
fstps
sub
add
outsl
popf
test
adc
shl
add
mov
out
in
sbb
push
push
cmp
inc
sub
or
mov
cmp
dec
mov
and
inc
mov
pop
pop
xchg
ja
sbb
and
pop
test
adc
xor
addb
push
enter
push
insl
inc
fisttps
mov
cltd
sub
jge
jmp
push
lods
xchg
rol
call
dec
add
stos
push
test
jmp
ror
sub
mov
faddl
pop
pusha
pop
out
lods
pop
movsb
ficomps
negb
cmp
and
mov
lcall
and
mov
das
stc
decl
adc
sub
loope
or
cmp
rcl
xor
out
xlat
std
xor
mov
or
mov
lods
loopne
push
pop
dec
rorl
addr16
loop
into
sbb
iret
inc
lea
push
xchg
mov
in
jg
add
adc
sti
push
mov
cmp
aas
and
negl
scas
dec
pusha
cs
push
imul
iret
fisubs
jecxz
adc
sub
mov
fimuls
test
cld
sub
xchg
mov
pop
ret
cwtl
ljmp
arpl
in
gs
inc
outsl
int
dec
stc
stc
lods
sub
test
out
add
mov
inc
jae
cmpsb
mov
gs
and
mov
cmp
jge
in
imul
sbb
adc
mov
pop
mov
mov
dec
mov
sbb
or
mov
xchg
loopne
lahf
xor
inc
fsts
daa
loopne
out
mov
ret
dec
add
leave
pop
sub
hlt
in
push
fcompl
mul
repnz
or
bnd
mov
jns
fiaddl
ret
pop
push
fmuls
flds
loope
movl
in
jb
cmp
dec
sub
mulb
adcl
std
xchg
xchg
adc
mov
aad
cwtl
in
mov
int
mov
xchg
mov
and
clc
fs
gs
lock
aaa
add
cmpl
cs
pop
scas
sbb
mov
pop
add
sub
jp
xchg
cwtl
loop
hlt
mov
cmp
mov
outsb
enter
inc
cmp
cmp
in
inc
enter
add
adc
jle
mov
fprem
stc
push
push
insb
sbb
add
jns
jb
in
xchg
adc
pusha
aas
ja
in
je
loope
cmp
lret
jns
mov
fsubrl
imul
dec
sbb
repz
and
or
push
negb
daa
ficomps
pop
inc
inc
movsl
enter
push
xchg
cmp
push
fdivrs
xor
sbb
push
fimull
dec
add
lea
out
sti
inc
cmc
inc
test
outsl
cmc
pop
push
in
loope
mov
or
sub
mov
sub
fdivs
pop
scas
jnp
shll
cmp
arpl
daa
xor
mov
push
mov
sub
xchg
int
mov
mov
stos
sub
jl
repnz
push
aam
adc
aad
ficompl
cwtl
addr16
or
inc
movsl
cmp
in
sbb
hlt
mov
pop
jbe
das
cmp
inc
mov
enter
xchg
pop
fcomp
insb
push
mov
inc
mov
mov
add
es
xchg
push
pop
cwtl
xor
test
or
inc
mov
xchg
fisubs
rcr
push
dec
je
jl
lea
push
daa
mov
mov
dec
jmp
ss
nop
leave
stos
sbbl
pop
pop
jle
roll
repnz
xchg
leave
xor
out
mov
xor
mov
pinsrw
mov
hlt
mov
mov
cmp
cmp
jecxz
aas
jg
push
xchg
xchg
mov
ret
test
push
mov
sub
inc
xor
fsubs
and
dec
mov
arpl
push
sbb
mov
pusha
shlb
or
cmp
cltd
cmp
repnz
mov
mov
xchg
inc
jg
sti
ljmp
inc
and
lret
inc
mov
push
sub
jnp
rcrl
lods
popf
bound
pop
notl
mov
add
push
cld
xchg
in
inc
or
ret
je
inc
sbb
mov
test
inc
and
pop
fwait
in
cmp
lds
vmwrite
mov
add
add
lea
popa
add
cmp
sarl
and
adcb
xchg
add
jnp
pop
inc
sub
or
fidivs
inc
mov
inc
sarb
into
or
pop
mov
push
mov
pop
jno
repnz
daa
inc
mov
in
dec
ja
test
push
cmp
sbb
add
dec
xchg
cmp
adc
and
imul
in
dec
sub
shlb
jae
jge
jo
aam
inc
iret
fmull
in
xchg
into
mov
js
xlat
rorb
dec
sub
aad
mov
imul
dec
std
into
dec
jo
sti
cmp
jecxz
push
or
scas
aad
jns
rcrl
enter
fistpll
inc
clc
dec
repz
jns
fnsave
inc
movsb
and
sbb
push
es
xor
dec
jo
inc
subb
push
ljmp
push
jecxz
or
in
xchg
lahf
inc
xchg
add
sbb
sub
mov
xor
bound
sarb
jmp
mov
add
dec
mov
movl
movb
in
loop
adc
out
jge
sbb
jbe
jne
jmp
pop
sub
push
sbb
test
cmpsl
sbb
lods
mov
les
fsubp
pushf
leave
mov
push
add
int3
sbb
inc
mov
outsb
push
sbb
or
jnp
mov
test
out
dec
je
out
dec
insl
js
adc
fimuls
push
adc
insb
xor
in
test
leave
push
add
pop
push
jnp
add
jmp
movsb
pop
or
movups
mov
xlat
aad
inc
jg
xor
leave
int3
clc
pop
and
mov
outsl
xchg
and
xchg
add
mov
in
lret
fdivrl
cmp
ljmp
push
push
clc
in
scas
push
fistl
xchg
lds
adc
pop
dec
xchg
in
ja
or
jbe
sbb
shrl
lret
cmpsl
adc
mov
push
cltd
movsl
sub
fsubs
ficoml
addb
and
imul
fldcw
inc
mov
jns
xlat
push
aad
and
dec
push
jg
sbb
aaa
or
sbb
ss
adc
aas
pop
adc
out
stos
jnp
push
insl
xor
adc
mov
mov
mov
inc
push
das
jl
aas
sbb
pop
mov
jge
dec
pop
int3
aad
cmp
adc
mov
fwait
xor
xorb
push
pusha
add
inc
mov
pop
xchg
jne
mov
and
or
mov
rcll
int
outsb
cmpsb
pop
and
test
cmp
popf
jmpw
pop
add
sbb
mov
jecxz
and
int
aad
inc
cmpsl
je
jl
mov
jae
negb
outsl
mov
and
cmpsl
outsb
or
and
mov
frstor
shl
dec
ds
mov
and
ja
push
adc
popa
or
adc
sbb
aad
ret
lret
ret
mov
fs
jno
mov
or
test
pop
sarb
pop
mov
bound
push
mov
fstps
sub
mov
sbb
inc
mov
pop
mov
inc
and
add
icebp
lods
adc
sbb
call
lcall
jle
dec
test
xor
ds
pushf
jae
adc
sub
enter
push
in
clc
gs
imul
psrlw
pushl
mov
pop
fdivrp
mov
push
insl
nop
mov
dec
scas
adc
xor
mov
fmuls
push
out
lea
or
addr16
xor
xor
xchg
lahf
or
in
mov
addl
stos
rorl
cmpsb
int
jge
scas
ja
pop
loop
add
cmp
hlt
mov
shrb
add
aas
mov
fldcw
pop
push
test
and
pop
jno
iret
sub
and
aam
pop
aam
adc
outsl
mov
inc
push
lea
push
flds
mov
rorl
retw
repnz
mov
pusha
ss
in
cli
hlt
xor
decl
out
pop
data16
out
or
pusha
push
popa
rorl
xor
in
inc
mov
fisubrl
in
jle
pushl
push
pushf
out
repz
xor
xchg
inc
sbb
mov
or
leave
cmc
push
add
out
xlat
dec
mov
adc
scas
stc
dec
xchg
dec
xor
test
shl
test
ja
aad
pop
idiv
pop
out
dec
es
fstl
or
pop
pop
aaa
jmp
push
cmp
dec
jl
dec
or
addr16
dec
add
sbb
loop
or
sarb
sbb
out
inc
fistpl
push
lock
shll
not
pop
scas
sbb
fsubl
mov
or
push
fidivl
into
repnz
ja
cmp
mov
xor
cmpsl
mov
scas
push
bound
mov
and
jb
gs
add
cmp
cltd
hlt
lret
add
sbb
popf
shrl
inc
nop
dec
mov
mov
inc
adc
pop
jbe
xor
dec
adcb
inc
adc
hlt
push
inc
sbb
lods
mov
es
sub
stc
or
add
in
lret
xchg
sub
mov
mov
aam
das
scas
mov
inc
mov
ljmp
dec
jnp
adc
testb
xor
pop
xchg
loopne
xor
insl
add
mov
mov
dec
fldenv
jmp
add
cld
sub
jb
sbb
shrb
outsl
fldcw
pop
lret
lock
add
pop
inc
scas
push
scas
xchg
lods
push
push
lods
scas
dec
sub
std
aam
push
out
sub
pop
jae
and
pop
and
pop
mov
sbb
cltd
fwait
bound
adc
push
cmp
push
add
pushf
cmp
repnz
pop
aaa
adc
notl
outsb
pop
adc
add
das
fs
mov
jecxz
sbbb
lods
aad
es
push
mov
push
cmp
sub
and
stos
sbb
sbb
mov
and
in
jmp
sahf
loope
add
cmp
fisubrl
js
mov
js
mov
mov
sub
push
dec
ss
dec
testb
jecxz
leave
fs
pushf
in
out
jg
sbb
pusha
stos
imul
adcl
ja
addr16
insl
inc
pop
cwtl
mov
ss
sub
dec
cmp
jg
andl
adc
addr16
xor
cmp
and
xchg
mov
aaa
cld
add
sahf
inc
sbb
sub
sub
xor
call
jl
xchg
jb
in
ret
daa
shll
inc
addb
sbb
nop
scas
push
cltd
mov
sahf
adc
fwait
mov
mov
into
jge
dec
enter
stc
inc
cmp
das
mov
outsb
push
add
addr16
push
insb
mov
xchg
pushf
orb
fstp
std
fnstcw
cmp
ss
std
adcb
daa
inc
jmp
or
and
mov
push
aaa
xor
inc
cmp
xchg
in
shrl
mov
outsl
xchg
pop
cmpl
or
ret
movsl
adc
lods
lret
roll
loope
leave
adc
jae
mov
scas
add
iret
out
inc
call
flds
pushf
sbb
shrb
mov
test
pop
aaa
or
mov
sbb
fdivrl
ljmp
dec
pop
sar
cwtl
jo
jnp
ss
das
cs
sbb
pop
adc
xor
jne
mov
push
out
xor
push
xchg
test
es
cmc
jns
repnz
stos
xor
mov
mov
bnd
pop
pusha
add
dec
pop
inc
xor
pop
mov
jmp
sub
loopne
mov
imul
xor
pop
stos
mov
jnp
or
xlat
dec
mov
push
push
xor
es
aad
jecxz
jmp
push
sti
jecxz
in
xchg
xlat
xchg
mov
pop
push
lods
ja
out
nop
xchg
cli
nop
out
xor
mov
subb
adc
add
insb
in
mov
xchg
jne
sahf
sar
cmpsb
cmpb
lret
inc
dec
es
fwait
xor
cld
sub
pop
fmull
adc
sbb
ss
add
jae
sub
enter
and
test
lods
sbb
adc
rcll
addl
inc
push
ja
or
dec
xchg
or
jne
icebp
cmp
call
inc
gs
pop
cmp
aam
push
push
cmp
lcall
shll
jb
test
cmc
xchg
mov
fs
sbbl
and
inc
mov
in
xchg
lcall
mov
mov
cmp
les
mov
cmpsl
inc
pop
ret
jbe
lret
arpl
adc
sti
xchg
cli
sahf
xor
cmp
xchg
dec
xchg
sub
cmpsl
adc
lcall
fbstp
push
cmpsb
nop
outsb
loope
and
xchg
xor
push
xchg
ret
movsl
adc
iret
push
scas
or
mov
inc
clc
adc
cmp
add
cmpsb
and
ja
les
lods
int
out
andb
jns
out
cmp
or
inc
xor
sbb
sbb
fwait
aas
aaa
cmp
je
cli
rep
xchg
mov
into
lahf
popf
addr16
pop
jbe
inc
mov
lock
ss
out
popf
sub
cmp
hlt
dec
fcompl
cmp
in
aaa
fcomps
int
jl
loop
popf
add
xchg
mov
cmp
adc
je
xlat
repz
sbb
xchg
rcll
aam
push
dec
and
mov
cmp
call
lcall
lret
lret
insl
sbb
mov
jl
and
outsb
dec
gs
pop
in
addb
sarb
add
icebp
notb
and
stos
int3
push
or
imul
dec
sbb
mov
popa
sahf
pop
push
fidivrl
inc
scas
or
fwait
in
or
test
sub
pop
mov
jae
pop
inc
mov
lods
mov
push
out
mov
test
xchg
popa
inc
push
in
xor
addl
xor
lret
sahf
pop
sbb
cmp
cmc
mov
loopne
pop
ljmp
mov
add
and
cmc
leave
adc
cmp
mov
pop
dec
add
mov
xor
sbb
or
mov
add
pop
pusha
das
mov
jbe
fistl
div
or
sub
mov
std
mov
add
mov
shll
clc
sti
or
push
jmp
lods
je
icebp
lods
inc
ds
xor
popa
pop
test
xor
test
inc
mov
lods
ja
sub
fsubs
cld
dec
test
add
inc
imul
sub
sbb
pop
pop
xor
mov
clc
popa
movsl
and
popf
xchg
stc
xchg
int3
push
adc
mov
inc
cmp
scas
arpl
dec
into
pop
gs
dec
and
int3
inc
pop
cmp
ja
mov
fwait
fsubrp
fwait
xor
mov
jbe
add
pushf
test
imul
ja
enter
dec
xorl
pusha
xlat
in
hlt
ret
lock
sbb
iret
aaa
stc
mov
in
lret
mov
cltd
popf
gs
sbb
ss
sub
mov
mov
andb
sar
ljmp
scas
fsubs
fsub
jbe
sub
lcall
idiv
xchg
pusha
call
imul
adcl
scas
xor
adc
and
add
jo
fmull
lods
lcall
in
in
loopne
das
popf
imul
cmpsb
daa
jle
jg
mov
jnp
sahf
pop
std
mov
bound
mov
ret
ss
out
cmp
xchg
loopne
mov
jae
dec
into
sub
movsb
pop
lcall
adc
fldt
add
mov
adc
sti
push
xchg
in
xor
les
dec
insl
pop
push
mov
cs
rclb
les
aam
push
inc
fcoms
push
push
xor
imul
cli
fwait
fwait
push
cli
adc
push
loop
and
icebp
adc
loope
mov
mov
lcall
and
mov
push
push
cmp
sti
pop
inc
adc
mov
addr16
and
in
cs
push
out
mov
je
int3
push
pop
es
filds
rcrl
lea
sub
insb
les
xor
loopne
xor
sbb
notl
push
sub
push
mov
mov
subb
mov
sub
pop
xchg
adc
ret
xor
pop
and
jle
inc
sub
pusha
das
mov
pop
into
daa
sub
icebp
xor
dec
mov
cltd
cltd
pop
mov
cmpsb
fbstp
inc
cmp
jo
xchg
jb
ss
orl
insb
xchg
push
int3
lcall
cmp
or
aas
xchg
mov
clc
cmp
push
mov
hlt
cmp
jbe
adc
popa
xchg
sub
push
sbbl
movsl
dec
filds
and
repnz
pop
out
loope
test
mov
xchg
sub
sarb
push
lods
out
aaa
outsl
pop
pop
push
push
sub
jae
cmp
icebp
add
push
sahf
call
and
adc
dec
pop
xchg
jge
pop
push
les
sarl
bound
mov
inc
movsl
stc
shl
fsubs
repnz
cmp
mov
add
push
test
inc
inc
mov
xchg
inc
xchg
ret
mov
cmp
mov
pop
dec
repnz
ret
jb
mov
adc
and
lret
cld
ficoml
cmp
sub
lds
mov
xchg
add
jmp
mov
divl
lds
into
mov
lahf
arpl
gs
cld
inc
mov
dec
addr16
fmul
or
xlat
dec
jmp
adc
leave
in
xor
clc
add
fsincos
popl
js
std
adc
adc
mov
loope
shld
jl
cmp
je
push
fcmovu
dec
sbb
or
fstp
scas
popf
aas
rcll
aam
bound
gs
movaps
fstpt
sbb
into
lahf
pusha
push
adc
loop
call
rolb
ljmp
test
pop
enter
jne
dec
mov
push
cmp
pop
add
jp
imul
je
jb
jo
adc
roll
sahf
adc
data16
sbb
loopne
cli
popf
pop
or
test
fmull
push
ljmp
mov
aam
das
xchg
sarb
pop
ret
jo
xor
adc
pop
mov
dec
add
repnz
sbb
mov
mov
ret
adc
jle
and
in
mov
or
in
adc
cmp
repz
lret
bound
mov
aad
insb
or
mov
clc
insl
jge
cmp
outsb
insl
or
push
insl
ds
sbb
mov
outsb
xor
in
iret
dec
pop
inc
sti
insl
iret
xchg
add
sub
enter
jns
add
pop
fsubrs
pusha
in
cmpsb
rcll
mov
call
pusha
adc
cmpsl
mov
dec
ficoml
xor
cwtl
movb
dec
addr16
mov
cmp
add
jb
and
fildl
shll
pop
jp
sbb
adc
clc
icebp
aas
push
icebp
mov
jbe
mov
dec
lret
idivb
andl
pop
ds
xchg
ja
mov
xchg
and
push
std
xor
mov
adc
lahf
cmpsb
out
jb
lahf
jb
hlt
push
call
mov
or
stos
int3
xrelease
add
sub
pop
scas
ret
jle
call
sti
sbb
pop
xlat
shll
mov
fwait
subl
pop
sbb
cmpsl
cmp
imul
fwait
sub
cmp
frstor
adc
pop
cmp
imul
mov
clc
mov
fs
xchg
sub
in
ret
imull
dec
call
mov
xchg
gs
sbb
mov
scas
push
sub
jns
ret
imul
test
cmpsb
or
in
mov
adc
cltd
addb
mov
lcall
movhps
repnz
loope
pushf
or
and
rorl
jbe
xchg
into
mov
lret
jmp
in
xchg
ds
shll
loop
xlat
out
shll
pushf
subb
mov
cs
xor
jo
or
dec
std
jns,pn
out
and
inc
cs
repz
decl
scas
push
add
push
sahf
sbb
and
push
addb
fbstp
fistpl
dec
jns
rclb
and
push
mov
ss
mov
dec
xchg
or
add
ljmp
sbb
mov
or
sti
push
jecxz
ds
cmc
enter
dec
ficoms
xor
gs
aaa
dec
int
mov
hlt
sbb
sbb
jne
adc
sbb
add
jmp
testb
lcall
mov
testl
pop
jl
adc
ficoml
xor
push
pop
push
adc
clc
jne
or
jecxz
movsl
dec
repnz
add
adc
cmp
subl
pop
xor
inc
mov
xorb
add
mov
out
cwtl
sbb
inc
aaa
sbb
arpl
enter
fcompl
mov
lret
ljmp
lahf
loopne
mov
sbbb
and
and
in
push
inc
mov
popf
mov
test
into
imul
subl
mov
nop
xchg
jne
cmpsl
pop
mov
fcomps
or
scas
xchg
in
xchg
adc
dec
dec
cmp
mov
add
in
decl
stos
fs
jae
pop
in
and
add
pop
dec
insl
movsb
out
nop
push
jmp
mov
cmp
loopne
filds
xchg
neg
jae
pop
jnp
add
out
push
jmp
mov
pop
mov
es
push
dec
sub
jle
arpl
pop
mov
gs
outsb
add
cltd
adc
inc
mov
pusha
and
mov
cmp
jns
test
sbb
xor
insl
cmpsl
mov
and
sbb
add
lcall
imull
push
push
mov
orb
mov
inc
mov
cmc
or
rcrb
out
insl
ret
mov
and
push
inc
jb
leave
pop
sbb
ds
stos
lea
pushf
repz
and
jp
clc
add
outsl
les
dec
arpl
insb
sbb
popa
or
pop
pop
enter
repz
mov
and
jp
push
push
movl
or
xchg
or
imul
and
mov
test
push
repz
pop
jl
cmpsl
daa
mov
frstor
lock
adc
jl
sbb
std
enter
xchg
lahf
cli
aas
or
fxch
imul
or
imul
push
std
xor
addr16
xchg
sub
fwait
mov
and
jne
rcl
mov
mov
ljmp
adc
or
fcompl
test
les
mov
inc
mov
cltd
dec
cld
xor
jae
loop
lahf
add
add
in
out
adc
gs
call
fildl
dec
or
pop
pop
mov
sar
inc
sbb
lods
imul
dec
gs
in
add
jo
sti
cmp
fldenv
jge
cmpsl
sub
or
and
mov
or
jg
mov
pop
cmp
test
sub
or
or
lds
je
add
pushf
out
lds
repz
or
dec
das
incb
rcll
popf
outsb
xor
sahf
inc
lea
mov
js
xor
and
repz
mov
cmp
ljmp
sbb
int3
fisubs
jo
xor
push
xor
push
add
mov
inc
push
push
mov
clc
ljmp
es
std
loope
cmp
inc
sub
mov
push
add
imul
mov
mov
vpcomd
ret
lea
mov
insl
xchg
andl
inc
and
adc
shlb
vpsubusw
mov
pop
shlb
add
or
lock
dec
or
fbstp
loop
idivb
adc
or
xlat
notb
fstl
dec
stos
jle
repz
cmpsb
icebp
fwait
adc
mov
imul
dec
jecxz
rolb
hlt
or
cwtl
movsl
push
fdivrl
mov
rcrl
movzbl
ja
jnp
mov
popl
movsl
aam
xor
sub
xchg
or
repnz
or
shlb
cmpsl
das
xchg
ret
xchg
or
pop
pop
or
pushw
xor
xchg
es
push
fiadds
jbe
xchg
loop
sarl
lcall
mov
out
or
xor
cmp
pop
outsl
fsts
mov
pop
dec
inc
adc
push
jg
cli
push
mov
mov
cltd
push
cltd
cmp
out
gs
fs
sti
loope
leave
jno
mov
test
jmp
dec
int3
popa
rcl
js
mov
mov
rcll
pop
ljmp
or
out
sbbb
mov
mov
dec
sub
iret
sub
and
iret
sub
cmc
or
dec
gs
std
jg
xchg
ffree
scas
xchg
adc
lds
adc
fs
movsb
fildl
fs
cs
sbb
and
out
cwtl
ror
mov
stos
push
xchg
sub
fucomp
aam
adc
mov
mov
lock
stc
cmp
sbb
xchg
mov
mov
mov
pop
add
mov
push
int
addr16
fcoms
xchg
mov
jo
or
inc
les
lock
sub
mov
fiadds
in
ja
sub
pop
jbe
lods
inc
inc
jns
push
and
les
jle
in
fistl
pop
stc
or
scas
mov
pop
jp
cmp
push
lahf
shll
jg
int
repnz
adc
add
loopne
add
jb
cltd
data16
xchg
and
ret
loopne
jbe
shll
sub
int
push
adc
mov
jge
mov
cmp
in
lea
pop
mov
push
les
jp
mov
or
pop
dec
icebp
sbb
push
aad
inc
into
mulb
adc
cli
push
dec
sbb
and
into
pusha
pop
cmovns
push
or
sbb
fstpt
xchg
ljmp
sub
mov
inc
inc
sbb
in
shl
arpl
push
cld
scas
push
shlb
push
cwtl
iret
pop
push
cmp
fs
mov
iret
mov
lret
clc
push
stos
rorb
and
outsb
loopne
pop
jl
ror
push
inc
mov
in
pop
mov
rolb
mov
pop
cmc
fdiv
xchg
js
dec
sbb
cmpsl
ss
mov
xchg
pop
pop
jo
and
shlb
js
in
cs
loopne
shlb
dec
pop
jge
leave
pushf
xlat
xor
and
mov
int
lds
test
and
mov
inc
mov
cmp
into
push
and
xchg
iret
jle
pop
push
cmp
or
movsl
clc
push
test
mov
out
push
aad
iret
scas
adc
jecxz
mov
lcall
and
imul
pop
ret
cmpsb
jns
dec
mov
xor
shll
cmp
inc
incl
lret
std
sbb
mov
sar
jg
ror
jge
push
lahf
pop
sbb
add
icebp
inc
xchg
mov
cmp
repnz
sbb
and
test
mov
fistpll
add
lods
cmp
xchg
pop
inc
xor
fildll
cld
int3
and
shlb
dec
lret
cmpsl
movsb
push
std
push
push
scas
add
jge
or
fs
iret
dec
jle
out
inc
aaa
jecxz
cmpsl
add
pop
sbb
mov
sbb
push
in
xor
fwait
testw
in
push
mov
sbb
fdivp
fstl
js
dec
in
imul
mov
data16
ljmp
lods
faddp
lea
mov
mov
stos
mov
dec
fisttpll
jmp
cli
addr16
imul
sbb
mov
iret
mov
lock
jecxz
testb
rclb
ret
in
inc
aad
xchg
jmp
mov
inc
push
inc
sbb
xchg
sbb
cmpsb
sub
and
adc
or
test
cmp
stc
and
push
sahf
fdivr
test
sbb
sub
mov
lret
jo
xchg
sub
shlb
xchg
cmp
dec
leave
lods
shlb
outsl
mov
or
mov
sub
sub
lcall
andb
cli
inc
js
mull
cs
popa
add
adc
nop
in
pop
es
add
sbb
dec
pop
adc
dec
out
in
nop
shlb
cmc
push
insl
jnp
push
aaa
xor
out
aam
rcr
loop
xchg
pop
mov
push
lea
cld
xlat
cld
mov
outsl
shll
mov
test
mov
jb
jge
rolb
in
xor
push
mov
mov
das
lret
int
jo
aaa
repnz
cmp
push
or
shl
imulb
inc
popf
nop
cltd
rcll
and
rcll
and
repnz
mov
testl
cs
pop
jle
pop
int3
sbb
repz
push
push
pusha
inc
popa
rcrl
stos
ds
daa
fwait
xbegin
jge
mov
and
xchg
xor
fstps
mov
std
arpl
std
cwtl
fldenv
loop
jns
sbb
sbb
sbb
loopne
mov
xor
mov
add
cmp
inc
rorl
mov
pusha
in
cmpsb
cli
sbb
jns
inc
jae
out
jne
or
lods
lods
subb
lahf
out
mov
fidivl
xor
in
cs
stc
out
cmp
sti
adc
push
mov
mov
lahf
sbb
and
jae
and
sti
pop
lods
sahf
ffreep
pop
fsubrp
cmpsl
cmp
pop
sbb
and
mov
aad
or
mov
jp
xchg
lcall
fwait
stos
int3
adc
dec
xchg
mov
fucomi
test
mov
xchg
mov
std
mov
add
pop
xchg
leave
xchg
add
or
dec
xchg
lods
out
sub
or
jecxz
mov
movsl
mov
cmc
pop
fildl
into
scas
sbb
jge
sti
ss
sub
jns
ljmp
jmp
jbe
pop
je
loope
enterw
jle
jbe
or
pushf
lock
dec
fiadds
clc
xchg
out
out
and
sbb
add
add
jecxz
cltd
mov
sbb
je
movsb
xchg
cltd
dec
repz
mov
mov
or
push
cmp
jg
std
mov
fstpl
xlat
lods
imul
or
fwait
xor
daa
jnp
daa
adc
add
mov
push
lahf
inc
inc
mov
xchg
inc
dec
cmp
ficomps
stos
mov
pop
ret
subb
lds
ss
rcrb
push
imul
dec
mov
out
ljmp
js
push
insl
push
lods
jl
adc
sbb
ret
xchg
out
or
popa
dec
xchg
xchg
xchg
jno
cmpsl
loop
add
mov
into
xorb
scas
out
or
cli
add
pop
outsl
fstps
ss
add
inc
lea
ja
and
repnz
push
or
loop
add
xchg
js
mov
in
mov
popf
ret
mov
cs
add
movsb
pop
mov
jecxz
adc
jnp
loope
jb
dec
jge
test
in
xor
inc
mov
mov
jo
xor
test
or
xchg
pop
cmp
scas
jle
outsb
inc
sub
and
inc
xor
fadd
sbb
loopne
sub
rcrl
jmp
inc
stc
mov
jge
mov
mov
xchg
scas
mov
or
test
mov
aas
roll
xor
stos
test
inc
jno
dec
loope
je
lahf
dec
arpl
or
das
test
xchg
adc
jmp
adc
ja
sarb
stc
pxor
add
or
in
push
clc
cmp
push
and
arpl
in
dec
outsl
jno
rclb
test
xor
pop
add
push
push
inc
pusha
xor
out
push
xchg
dec
xor
jmp
jno
cmpsl
bound
sbbb
mov
sub
xchg
pushf
sbb
pop
mov
movsb
movsb
or
cmp
inc
mov
pop
enter
mov
and
or
inc
fwait
mov
or
aaa
data16
aad
pop
mov
add
mov
aam
add
popf
and
and
sub
mov
jle
xchg
mov
cmpsb
movsb
adcb
fsubr
movsb
rclb
in
iret
shl
jecxz
cli
addr16
push
jns
fmull
icebp
and
cwtl
sub
cmp
adc
out
sahf
sbb
sub
add
or
adc
mov
adc
cmp
sub
pop
pop
mov
icebp
aad
scas
inc
mov
cmc
outsl
stos
arpl
jbe
sahf
cmp
add
adc
mov
cmpsl
loope
inc
cvtps2pi
fsts
nop
icebp
inc
xchg
minps
in
incb
std
pop
push
pop
std
jmp
add
hlt
imul
sub
fwait
enter
push
mov
xor
pop
push
lods
dec
incl
cmp
or
xchg
outsl
pop
int
or
pushf
jno
test
inc
stos
loopne
cmpsl
jo
xor
aam
add
mov
addps
add
cmpsb
sub
push
pop
test
push
mov
ljmp
mov
cmp
sbb
pop
mov
push
sbb
cmp
xor
scas
loope
push
jl
inc
clc
daa
enter
mov
xor
sub
push
pop
test
or
stos
xor
sub
and
pop
lock
sbb
mov
xor
arpl
xchg
push
fwait
adc
jae
mov
mov
sub
xchg
or
xchg
fwait
fs
add
cmp
mov
push
insl
mov
dec
cwtl
xchg
movsl
xor
pop
testl
push
aam
stos
int3
test
cld
add
inc
roll
jb
jno
cmpsl
in
in
faddl
push
sub
sbb
xor
out
cmp
insl
fstpt
jo
and
repnz
lcall
push
mov
cltd
and
punpcklbw
push
negb
roll
mov
fsubs
imul
sbb
ret
jg
and
or
cmp
lahf
push
lcall
lock
out
add
icebp
mov
cmp
jecxz
fcoml
cmpb
shll
sbb
dec
into
cmpsl
sbb
sahf
and
pop
das
xchg
in
push
jl
mov
fistpl
mov
lods
test
jl
sbb
sub
stos
ds
jae
mov
push
js
and
int
xor
jmp
popf
xchg
inc
pop
mov
push
jp
and
mov
mov
sub
insb
xchg
clc
mov
pop
rclb
xor
std
mov
movsb
pop
gs
inc
js
inc
add
out
jo
test
shl
ret
cmpsl
xor
and
inc
cli
aad
xchg
mov
mov
movsb
out
stos
or
fldl
jl
mov
dec
stos
inc
aad
mov
cmp
mov
cmp
sbb
in
aad
fwait
pop
xor
stos
xchg
cmc
pushf
xor
nop
pop
and
push
movsl
loope
ja
outsb
loopne
int3
loope
hlt
aaa
repz
pop
notl
cmp
out
jno
cmp
divb
aad
push
jno
enter
jg
or
je
jg
addr16
dec
mov
loope
cwtl
push
lret
outsl
and
pop
sahf
test
dec
cmp
mov
push
adc
cltd
dec
jge
ss
inc
add
pop
push
inc
es
jo
inc
aam
and
adc
in
cwtl
mov
push
push
dec
stos
pop
loop
lods
subb
mov
cmp
jge
mov
out
lods
shrl
and
jg
mov
fisttpll
notb
lea
mov
xor
scas
nop
jl
mov
xor
or
mov
pop
loop
cmp
adc
sub
pop
cmp
insb
sub
loopne
xlat
sahf
mov
repz
cmpsl
pop
mov
adc
lahf
lahf
adc
add
mov
test
cmp
stos
jae
fwait
jecxz
ficomps
loop
cli
jo
and
adc
pop
imul
shlb
es
mov
or
sbbl
pushf
pop
mov
mov
dec
sbb
aad
xchg
repz
out
je
inc
dec
mov
test
mov
rcrl
mov
jmp
jge
into
or
push
enter
pop
dec
inc
das
adc
cmc
cmc
mov
adc
sbb
test
dec
jle
dec
data16
leave
jnp
ds
leave
jmp
call
cld
in
mov
imul
sbb
icebp
inc
jl
mov
cli
jge
arpl
mov
pushl
out
or
test
adc
or
xchg
rorb
push
xchg
xor
test
inc
cmp
int
cmp
lret
in
xchg
and
lret
dec
ss
lret
xor
xchg
push
mov
and
test
test
push
mov
sub
jae
aad
mov
outsl
in
int
mov
add
mov
jecxz
fdivrs
dec
lods
outsl
test
pop
popa
xor
test
insb
jns
push
loopne
sub
je
sub
mov
jecxz
mov
push
jb
bound
push
mov
or
lock
jo
pusha
enter
dec
and
push
mov
xchg
jo
mov
neg
sbb
insl
or
dec
rclb
cmp
andl
cmpsl
pop
lods
mov
mov
divb
jg
xchg
or
mov
push
mov
lds
jl,pn
lcall
sbb
lcall
jmp
sbb
sub
ret
pop
outsb
mov
inc
jns
aad
mov
jne
inc
adcb
xchg
clc
jmp
movsb
pop
aad
movsl
test
pop
mov
xchg
pop
or
or
cwtl
mov
sub
dec
mov
sbb
pop
xorl
lret
xchg
popl
xchg
push
repnz
in
insb
sub
mov
sbb
pop
fidivrl
add
add
lret
or
pop
mov
mov
insl
jae
cs
mov
rorl
or
jge
out
out
sarb
js
rol
lods
mov
cmp
fcompl
aad
push
repnz
jp
jl
dec
sbb
aam
push
push
insb
out
push
sub
push
loop
add
int
jle
sbb
insl
adc
sub
mov
ret
or
add
mov
nop
jmp
ja
and
jecxz
and
jmp
fmul
xorl
aaa
mulb
mov
gs
or
jge
push
pushf
aad
stos
mov
sti
mov
scas
pop
xchg
xor
fnstenv
pop
pop
lods
mov
fstpl
mov
loop
mov
popa
testl
add
adc
inc
cmpsb
jae
in
lods
mov
std
sub
lcall
loope
sti
inc
jge
fistpl
pop
sbb
mov
loop
rorl
adc
jae
jae
dec
sub
mov
insl
outsb
decb
inc
out
pop
mov
cs
push
hlt
push
movsl
clc
sub
xor
jmp
cli
rcr
sub
sub
push
out
sub
jae
leave
adc
insl
sbb
inc
mov
push
xor
bound
movsb
fwait
popf
je,pn
lods
fs
mov
cmpsl
ss
cmpsl
test
push
lea
xchg
jae
sti
insl
lods
js
test
out
cltd
fwait
cmp
dec
mov
js
push
jecxz
icebp
bound
mov
add
sar
repnz
out
xchg
pushf
fsubrs
add
inc
lea
add
cmovb
jbe
wbinvd
or
mov
adc
pop
cwtl
ljmp
cltd
xor
daa
sbb
mov
stos
xlat
out
xor
pop
js
jl
lret
mov
push
inc
pop
leave
add
sub
add
ss
out
and
cmp
mov
mov
fwait
popa
pop
or
jb
add
mov
ret
das
or
or
cltd
xchg
popa
xor
ss
cmp
sub
bound
lds
popf
int3
pop
dec
imul
pop
lock
ffreep
mov
stos
jl
movsl
inc
nop
or
inc
pop
adc
gs
scas
mov
xchg
adc
ss
sub
rcll
sbb
jae
clc
pusha
repz
add
add
inc
cld
jp
loopne
popa
inc
mov
inc
ret
test
daa
adc
mov
stos
xchg
mov
jae
dec
mov
sbb
in
in
xlat
rcrb
dec
inc
hlt
imul
aas
test
jnp
jg
cli
and
jno
lock
push
aad
cmp
shrl
xor
or
pop
movsl
lret
inc
aaa
out
push
arpl
and
jns
pop
je
outsl
daa
mov
push
mov
jae
das
mov
pop
aam
mov
xor
sub
lret
adc
mov
cmc
lea
jg
in
je
or
adc
clc
sbb
bound
dec
pop
or
inc
push
mov
andb
cmpb
andb
stos
jo
cmp
lock
sub
jbe
pusha
xorl
in
sub
pop
jnp
int3
mov
ret
ret
fildl
mov
loope
xchg
sbb
std
roll
lea
or
mov
sbb
insb
xchg
sub
push
push
sub
lcall
pcmpgtd
pop
repz
mulps
iret
cld
lcall
rcll
mov
ds
idiv
xor
sbb
das
xchg
sub
mov
imul
call
clc
mov
lret
mov
xchg
repz
dec
xor
cld
xorb
jecxz
push
sbb
mov
add
dec
lahf
add
add
adc
mov
pusha
mov
mov
imul
int
push
outsb
jmp
jl,pn
outsl
arpl
ret
sbb
inc
pop
pop
jo
in
jo
stos
push
inc
xchg
adc
cli
imul
cmp
sub
sbb
scas
fnsave
jns
lcall
data16
sub
in
sbb
gs
cwtl
dec
popf
fsubrp
inc
mov
adc
testl
mov
jne
outsb
in
add
popf
inc
push
push
jne
and
rcll
movsl
inc
pop
adc
aad
outsl
sbb
sbb
cmp
mov
inc
push
lods
xchg
sbb
out
lcall
sbb
pop
in
jnp
cmp
mov
sahf
dec
clc
jae
sub
push
add
sahf
insl
outsl
dec
mov
push
dec
cltd
orl
movsl
sub
in
cmc
or
push
cmp
sbb
xchg
mov
mov
in
loopne
xchg
push
adc
fsub
sub
push
repz
xchg
dec
mov
mov
mov
sub
fxch
int3
and
daa
mov
test
mov
lahf
test
xlat
iret
inc
push
mov
and
scas
lret
mov
push
cmp
cmpsb
cmp
dec
mov
dec
addr16
testl
sub
sbb
add
cmp
cmp
cmp
jmp
mov
inc
sbb
jl
mov
sbb
pop
and
aas
dec
call
jb
fiaddl
roll
pop
jp
movsb
mov
hlt
sub
jbe
xchg
push
lods
dec
push
mov
dec
scas
ficompl
lock
divb
lcall
push
mov
into
movsl
daa
mov
cltd
cmp
cmc
fimull
xor
fdivs
mov
dec
sbb
popa
ds
add
xchg
lcall
jae
das
xor
out
xor
dec
je
imul
inc
add
inc
xchg
repnz
dec
lods
mov
mov
sarl
mov
cmp
mov
sub
mov
mov
ret
outsl
mov
ja
xchg
cwtl
lods
or
push
mov
lea
cwtl
stos
xorb
in
sbb
cld
popf
mov
and
inc
aad
push
cmp
or
jmp
jne
xor
daa
ja
dec
add
movsb
dec
movsb
inc
fucomp
and
clc
xchg
icebp
jnp
mov
mov
mov
xchg
int3
or
cmp
pushf
outsl
xchg
adc
arpl
dec
and
scas
sbb
mov
push
pop
test
mov
push
cltd
gs
xor
mov
dec
lret
shr
fiaddl
nop
clc
sbb
sub
inc
and
es
inc
movsb
filds
inc
ret
mov
call
push
xchg
mov
mov
xor
sarl
inc
cmp
cld
mov
std
stos
jg
dec
bound
lcall
and
je
aas
mov
and
add
jb
aaa
dec
dec
fs
es
add
mov
cmp
dec
xchg
ja
or
cmp
xchg
add
push
jmp
test
iret
mov
cmp
jge
cs
dec
inc
pop
fiadds
jno
or
push
push
add
jmp
and
sahf
js
pop
ja
out
adc
cmpsb
xor
mov
dec
cmp
ljmp
bound
adc
inc
pop
loope
data16
aaa
stc
shrl
mov
aaa
pop
mov
sub
or
xchg
push
mov
dec
arpl
lret
iret
in
xchg
outsb
in
and
xor
mov
stc
lret
out
testb
inc
aad
lock
outsb
mov
dec
js
inc
sub
stc
cli
sbb
out
imul
inc
xchg
or
dec
imul
das
stos
adc
mov
loop
enter
out
cmp
shr
jp
dec
cmp
xlat
ss
pop
sub
push
sarb
test
and
xchg
pop
inc
and
cmpsb
or
gs
mov
pop
add
and
push
push
lcall
loop
loopne
jle
lods
xor
xor
sub
mov
arpl
sbb
push
cwtl
imul
mov
mov
pop
mov
inc
or
push
das
push
out
ficoms
dec
pop
or
sbb
pop
fabs
fisttpl
xlat
mov
addr16
subl
inc
push
mov
outsb
mov
jnp
in
cmp
adc
fcmovu
push
sbb
nop
lcall
cwtl
xchg
sarb
pop
gs
jge
lahf
sti
mov
add
xor
stos
insl
ljmp
lods
jecxz
xor
and
xchg
xor
inc
sub
out
jge
jo
and
scas
mov
lret
inc
mov
xor
insb
xorb
inc
scas
or
mov
inc
pop
inc
roll
ret
inc
pop
out
rorb
mov
fidivrl
cltd
sub
mov
pop
xchg
cmp
popf
fldt
xchg
sbb
mov
iret
or
xor
adc
push
adc
pushf
aaa
mov
lcall
pop
nop
cmp
out
mov
jns
push
adcl
nop
popf
xor
or
cmp
pop
out
xor
jb
hlt
mov
daa
daa
jnp
mov
adcl
test
movsb
push
sub
loop
push
dec
loope
std
fldenv
or
sub
je
fwait
sub
int3
push
repnz
dec
cmp
lcall
xchg
sahf
xchg
fmuls
into
inc
dec
jns
lods
lcall
sbb
push
cmpb
outsb
stos
push
jbe
cwtl
add
mov
add
xchg
fimull
loop
les
dec
mov
in
or
sbb
pop
aam
mov
pop
aam
das
scas
hlt
mov
xor
xor
mov
and
bound
je
ds
mov
dec
inc
insl
sbb
pop
sub
xchg
mov
xchg
mov
pop
add
pop
dec
inc
mov
jns
das
jne
iret
sbb
push
jl
daa
adc
add
shrl
inc
ds
and
mov
dec
lea
iret
sub
mov
mov
ret
or
add
or
icebp
inc
call
insb
xchg
rcll
data16
push
sbb
jmp
mov
add
iret
inc
lea
hlt
sub
shl
dec
aas
bound
jg
addb
and
xor
xchg
pop
bound
rcll
lods
cmp
add
xor
mov
sub
dec
mov
and
jo
stos
adc
sbb
jmp
in
adc
dec
in
das
jmp
bound
mov
push
sbb
adc
ficoml
aad
mov
enter
sarl
xorb
idivb
lock
ret
rcll
insl
mov
lret
shrl
faddp
or
pop
cmp
cmp
lods
push
jns
cmc
in
xchg
mov
cmp
inc
add
cld
pop
fcomps
cmc
mov
incl
inc
in
add
cmp
movsb
scas
lock
push
jg
loop
xor
cmp
xor
xor
mov
test
cmp
xchg
and
pop
enter
push
push
imul
ss
aas
and
pop
pop
fwait
dec
loope
lods
inc
mov
add
mov
in
fwait
cld
mov
sbb
iret
dec
scas
xor
cmpsl
les
pop
mov
mov
pop
pushf
mov
aaa
test
fsubp
popf
in
xchg
addl
adc
sbb
aaa
pop
in
stc
mov
and
loopne
push
insb
mov
dec
add
jmp
inc
inc
sub
dec
sbbb
sub
int3
mov
xchg
out
inc
push
or
xchg
rolb
sahf
dec
sahf
cli
aad
das
or
clc
repz
cld
push
mov
mov
pop
inc
std
and
inc
jg
cmpsl
pop
push
xchg
addr16
cmpsb
or
jmp
dec
adc
mov
pusha
xlat
inc
mov
pop
loope
ds
xchg
jge
push
enter
xchg
push
sub
mov
push
pop
xor
cwtl
fisubrl
push
cld
popf
mov
add
cmp
fs
loopne
fwait
pop
ds
repnz
in
push
cmp
adc
jb
xchg
icebp
dec
push
fidivrs
rcll
pop
dec
pop
pop
and
in
movsl
xchg
cmp
cmc
cltd
jne
mov
lock
push
xchg
inc
push
or
adc
dec
mov
dec
ret
pop
xor
or
gs
mov
pop
lret
and
nop
cwtl
cmp
incl
xchg
lahf
test
addr16
xor
xor
xchg
outsb
in
outsb
ljmp
roll
pop
shl
mul
mov
xchg
mov
addb
mov
xor
pusha
pop
faddl
fucom
into
jo
sub
es
mov
loope
xorl
mov
and
xchg
inc
shl
mov
clc
aad
inc
sbb
cmc
adc
xor
daa
decb
inc
push
bound
pop
adc
pop
mov
pusha
out
pushf
stos
dec
push
into
cmp
mov
iret
stos
jecxz
jp
in
pop
mov
mov
in
xlat
jbe
mov
roll
mov
push
int3
mov
add
sti
clc
add
cmp
pusha
adc
inc
cli
pop
sbb
cmp
sahf
xor
aaa
cmc
xor
mulps
mov
xchg
inc
std
hlt
mov
sbb
jno
mov
or
inc
mov
mov
std
lds
inc
enter
sub
fidivrl
fnstsw
jecxz
push
inc
mov
bound
aaa
inc
add
add
or
js
fsubrs
sbb
cmc
sahf
repz
ljmp
jb
mov
repz
add
or
cli
decl
mov
and
fs
mov
clc
mov
sbb
mov
pop
loope
push
addr16
or
js
shrl
repz
mov
outsb
xor
pushf
mov
cmpsl
loop
faddl
rclb
xchg
sub
xor
mov
movsl
mov
xchg
add
lea
lcall
jge
int3
enter
and
mov
sbb
jge
clc
lcall
insl
insl
push
pop
dec
aaa
pop
sub
loop
push
sbb
imul
mov
out
and
add
cmp
fisttpll
and
sbb
push
js
dec
push
sbb
adc
das
lea
out
push
lahf
scas
lret
loop
int
int3
shll
outsb
push
jae
test
test
and
sub
xchg
pop
nop
push
in
les
xor
push
call
test
shll
mov
add
pop
mov
stos
push
xchg
int
std
pop
and
dec
cmp
shll
mov
jmp
je
pop
sub
pop
es
xor
jnp
insl
insb
or
inc
rcll
sbb
rol
aam
out
pop
sahf
test
popa
test
mov
jle
sub
mov
mov
pop
mov
inc
sahf
popf
or
xchg
sbb
in
add
sub
mov
mov
shrb
cltd
mov
pop
iret
mov
int3
mov
cmpsb
pop
mov
adc
push
inc
pop
sub
mov
cli
mov
addr16
inc
rol
xchg
inc
fs
cmpsb
icebp
push
ret
shl
push
in
ds
movsl
dec
sub
jno
cmp
fdivs
je
fcomps
mov
or
add
repz
jecxz
sahf
lcall
mov
mov
fldenv
push
pusha
in
dec
sar
sbb
mov
fidivs
sbb
gs
subl
jb
sub
lods
das
aas
add
outsb
ljmp
mov
or
mov
sub
jns
dec
pop
mov
ja
jmp
adc
sub
in
pop
xchg
popf
xor
xor
jl
or
aas
jge
mov
je
insl
inc
js
fldl
mov
fxch
stc
xor
jl
adc
jns
cmp
int
in
fs
pop
jbe
xlat
adc
iret
sbb
dec
roll
add
sbb
push
mov
in
sbb
mov
in
pop
push
ss
lret
or
stc
xor
xor
aam
mov
xchg
aad
popa
scas
cltd
dec
daa
and
mov
push
inc
test
pushf
or
fistps
mov
out
cmp
dec
lcall
fcmovnu
or
mov
dec
mov
int
xlat
push
lret
test
xchg
mov
das
mov
cld
pop
pop
adc
dec
inc
pushf
adc
cmc
jg
jecxz
xchg
add
cli
call
movsb
mov
je
and
push
mov
push
mov
and
ret
cld
jne
imul
cmp
out
cld
lods
test
test
fwait
mov
icebp
mov
ja
sbb
pusha
filds
push
aaa
rcrb
xor
or
daa
dec
repnz
arpl
fidivrl
pop
jb
push
add
mov
das
xchg
cmp
mov
inc
outsl
imul
fcos
scas
popf
adcl
or
mov
insl
and
dec
cltd
mov
sti
push
sub
mov
inc
jnp
cmp
aaa
lds
shlb
movsl
cmp
lea
mov
xchg
int3
mov
mov
cmp
or
lock
fsubrl
movsb
loopne
movsl
pusha
repz
shrl
je
clc
repz
or
lods
add
in
cs
push
icebp
jle,pn
sub
dec
rorb
and
gs
movsb
dec
sub
dec
fistpl
int
test
cmp
jle
das
xor
sbb
insl
ja
sbb
xchg
push
push
mov
clc
test
cmpsl
enter
jge
push
dec
mov
sti
mov
dec
mull
cmp
fcompl
and
xchg
mov
pop
cmc
inc
and
xor
into
xchg
movsl
popf
imul
xlat
xor
cmp
sub
mov
dec
lea
jge
hlt
imul
fistpll
test
mov
orb
adc
mov
push
or
pushf
cmp
push
add
lret
das
int3
push
out
flds
jge
adcb
inc
xchg
hlt
and
dec
enter
jno
add
jns
fsubl
add
xchg
mov
sarl
xchg
fidivrl
js
cmp
mov
push
and
push
xlat
push
stos
shr
movsl
push
pushf
mov
clc
inc
cmp
stos
mov
push
lock
mov
add
mov
mov
pushf
pop
inc
add
jne
cmpsl
fisubrs
notl
inc
pushf
mov
lds
pop
push
lcall
lea
repnz
xor
pop
inc
xor
adc
push
aaa
inc
out
ret
aaa
mov
mov
jge
pushf
fistpll
mov
xor
shll
js
pop
roll
cs
adc
adc
and
popa
mov
mov
and
ja
stos
xchg
and
push
cmpsl
les
idivb
orl
dec
sahf
add
jp
and
and
data16
push
je
lods
sub
repnz
test
sub
jp
inc
clc
pop
sbb
test
xor
mov
popf
cmpsl
insl
inc
mov
adcl
jp
jae
sbb
lds
push
cmpsb
loop
cld
out
daa
adc
xor
jmp
mov
sti
test
cmpsb
pusha
out
mov
jne
pusha
addr16
push
sub
ja
in
enter
adc
sbb
gs
jmp
jge
adc
gs
clc
fidivl
test
jne
xor
ret
cmp
mov
xchg
hlt
repz
inc
xor
mov
xlat
sbb
les
mov
shrd
sarl
pop
outsl
inc
out
mov
test
push
jb
dec
outsb
inc
mov
imul
adc
dec
in
adc
dec
mov
je
adc
mov
pusha
aad
adc
jne
outsl
loopne
sub
adc
adc
mov
jg
hlt
in
add
shlb
in
lods
or
stos
mov
rcll
call
add
lahf
loop
xor
push
popa
push
xchg
cltd
jnp
jne
jl
sbb
cld
mov
mov
in
pop
sbb
les
adc
lds
inc
pop
es
test
adc
inc
or
pop
jle
sub
jnp
inc
push
lock
push
adc
aam
rcr
and
shl
adc
xor
jne
dec
cmpb
cmp
in
inc
inc
xchg
and
icebp
inc
xchg
mov
or
sbb
mov
cld
addl
cmp
sub
aas
fistl
add
push
mov
outsb
xchg
nop
lahf
loop
stc
scas
mov
inc
or
xchg
cmp
mov
insl
lds
insl
mov
dec
cmp
popa
lahf
loop
gs
inc
test
in
fwait
in
jno
mov
mov
sbb
pop
fisubrs
or
xchg
icebp
fcmovbe
cmpsl
pop
and
xchg
sti
dec
push
mov
xor
add
xor
push
sbb
or
xchg
repz
dec
mov
jmp
jnp
outsl
xor
test
and
inc
lret
aas
pop
in
out
xor
cmpsl
xchg
mov
mov
test
add
nop
std
jle
cmp
jp
test
cmp
incb
stos
mov
cmp
mov
cmc
popf
dec
pop
pop
pop
jae
fs
mov
lock
call
push
popa
mov
dec
jl
sub
rep
mov
je
jl
fwait
pop
ret
jb
adc
test
lds
addr16
sub
js
dec
loop
xchg
imul
cmpsb
jecxz
cmp
jo
out
fiaddl
pop
sub
xor
xor
adc
aaa
cmp
mov
or
add
sbb
loope
jno
imul
aad
xchg
scas
push
dec
xorl
test
pop
ret
mov
in
test
jmp
gs
sbb
outsb
ja
mov
mov
mov
cmp
fcomi
ss
push
mov
and
das
mov
ret
sbb
cmp
jo
lock
ja
pusha
adc
mov
jbe
adc
mov
jecxz
and
pop
xchg
push
mov
fdivrp
mov
jb
scas
scas
cld
jmp
xchg
xor
jno
incb
dec
lock
inc
jb
add
pop
sub
imul
test
xor
mov
mov
movsb
xor
xchg
in
adc
adc
mov
pop
sbb
dec
push
lret
push
mov
jecxz
mov
rcrl
int
lods
iret
pushf
insb
and
xor
or
mov
mov
jp
int3
pop
ret
ret
imull
fs
inc
cwtl
lds
das
adc
jp
mov
sub
clc
out
fmuls
std
repnz
in
imul
and
dec
or
dec
pushf
mov
notb
icebp
pop
out
ljmp
ss
sbb
mov
xchg
fldl
loope
scas
cmpsl
pop
cmp
iret
in
or
lret
dec
mov
jp
adc
lock
roll
mov
loopne
xchg
sub
mov
pusha
arpl
ror
mov
mulb
add
lret
std
xchg
or
push
test
negl
outsl
lcall
xchg
cmp
pop
iret
je
xor
pop
pop
mov
cld
jns
jbe
sub
xor
and
mov
xchg
lea
cld
inc
push
xlat
aaa
mov
add
push
push
mov
add
xchg
xchg
or
xor
daa
jle
sbb
adc
and
cmpsb
loopne
call
fstpt
pop
movsb
cli
ret
sbb
push
fmuls
outsl
pop
fstl
mov
add
mov
pushl
ret
cs
hlt
shrb
xlat
add
xor
and
rcll
mov
cli
mov
nop
sbbb
jp
cmp
hlt
push
js
cmovl
clc
push
jecxz
dec
iret
int
stc
movsb
mov
dec
into
mov
imul
int3
int
fldcw
movsl
push
loop
cmp
outsl
pop
push
insl
and
hlt
mov
jae
std
gs
push
mov
jne
hlt
lret
ja
mov
mov
cmpsl
ret
pop
icebp
aam
sub
sub
and
cmc
xchg
mov
mov
insl
jmp
aad
out
add
test
ret
bound
inc
dec
out
lret
dec
inc
inc
pop
add
xchg
in
cmpsl
mov
adc
cmp
jmp
xorl
orl
mov
not
ret
dec
stc
movsl
mov
mul
cmp
cmp
jmp
xchg
and
sahf
jge
cli
sbb
pop
xorl
insl
dec
sbb
clc
push
fsubr
mov
push
mov
pushl
push
fwait
ret
fimuls
and
and
arpl
jnp
popf
aaa
js
pop
inc
lahf
mulb
fistpl
jmp
cmp
sub
push
adc
pop
pop
or
lock
int3
inc
xor
ret
cli
add
push
rolb
inc
jbe
lock
cld
cmp
popa
stc
loop
cltd
mov
add
jmp
inc
lods
arpl
cmp
sbb
je
inc
sub
lock
jl
lahf
mov
imul
dec
or
and
pop
or
cwtl
inc
and
and
scas
xor
xor
sub
aas
fldl
pop
loope
pusha
jbe
jne
push
mov
mov
adc
mov
mov
add
out
xor
mov
dec
pop
icebp
sub
xor
ds
jnp
pop
es
pop
repz
dec
add
mov
push
lret
cmc
dec
and
cmpsb
mov
insb
cld
push
into
adc
mov
jno
mov
add
mov
xor
dec
jl
cmp
mov
adc
inc
push
lods
pop
jae
sub
xchg
mov
pop
jne
inc
sub
out
hlt
loop
lods
cmc
das
or
and
xchg
or
pop
aas
xor
sub
das
hlt
sbb
cmp
cs
int3
sbb
stc
xor
icebp
sbb
inc
mov
adc
aas
xor
sbb
andnps
rorl
aas
pop
repnz
mov
jge
push
dec
mov
loope
hlt
adc
fwait
imul
dec
pop
mov
mov
adc
pop
popf
shlb
mov
adc
movsb
xchg
test
fcmovu
push
aas
fistps
scas
lods
sbb
push
outsl
imulb
xchg
mov
mov
ja
mov
inc
push
rcll
das
jge
iret
mov
push
test
insb
jp
pop
pop
test
pop
stos
data16
jnp
loop
add
mov
and
sbb
fcoml
sub
dec
in
push
push
adc
pop
loope
xchg
dec
mov
popf
cmp
dec
inc
jno
lods
mov
xor
outsb
test
cmp
jle
mov
sbb
xchg
les
xchg
movsl
or
xor
dec
sbb
or
mov
pop
add
mov
pushf
pop
mov
mov
dec
mov
adc
scas
or
out
movsb
jg
nop
jbe
cmp
jae
and
pop
cltd
cltd
cmp
xorb
fwait
xor
pop
or
addr16
inc
push
mov
int3
cwtl
lcall
jge
jmp
push
mov
pop
stos
insb
xor
push
insb
cmp
ljmp
xor
xor
clc
jp
push
cmovne
sbb
and
xchg
fistps
pop
mov
scas
pushf
fiaddl
xchg
clc
push
fwait
push
dec
or
lret
adc
ljmp
sub
out
add
ljmp
pop
dec
dec
hlt
jns
cmp
xchg
loope
sbb
dec
and
inc
in
sahf
hlt
insl
or
aam
mov
mov
imul
adcb
sub
add
xlat
xor
fwait
loopne
cwtl
dec
xor
fcmovnb
mov
test
cli
or
lret
or
call
sub
sbb
mov
jnp
in
pushf
cmp
mov
int3
jno
add
ds
adc
scas
mull
pop
int
push
cmc
data16
mov
xchg
xor
cmp
mov
cmpsb
fimuls
jne
popa
loope
dec
cmp
ljmp
hlt
inc
mov
icebp
outsb
faddp
out
out
fisttpll
mov
xrelease
sub
jg
dec
jbe
leave
xchg
pusha
mov
mov
ficompl
adc
or
inc
sub
dec
mov
push
xchg
lahf
sbb
mov
or
ret
bound
mov
mov
arpl
in
sub
and
xor
xchg
pop
xchg
sbbl
push
or
addl
in
fstpt
add
jae
xchg
cltd
shlb
push
xchg
add
sub
dec
xchg
and
push
test
int
and
ret
sub
add
lods
loope
adc
push
and
daa
scas
sbb
shll
dec
adc
int3
mov
xchg
ret
mov
fists
insl
dec
insb
lcall
inc
mov
adc
into
mov
or
data16
test
ja
orb
jecxz
test
cli
cmp
xchg
cli
cmp
adc
ret
xor
pop
test
enter
pop
aad
xchg
fisubrl
mov
arpl
fwait
jecxz
bound
jg
stc
jb
push
push
cmpsb
lret
xor
loopne
xlat
push
or
xchg
mov
dec
cltd
mov
push
repz
add
loop
xchg
mov
pop
in
fucom
test
inc
xor
adc
aaa
outsb
jl
mov
sbb
xchg
je
xchg
sbbl
inc
mov
into
dec
adc
jmp
xor
sub
cwtl
jne
movl
pop
ljmp
shrb
cmpsl
cmp
rolb
lret
and
jno
sbb
sbb
dec
mov
aad
out
pop
mov
outsl
pop
ret
ds
subl
mov
mov
test
or
pop
pop
xchg
fstpt
jg
enter
repnz
sbb
andl
rol
push
repz
push
add
mov
mov
hlt
pop
fwait
orl
adc
mov
ficompl
add
repnz
add
push
push
movsl
data16
in
sub
ret
test
inc
jmp
mov
adc
fidivrl
sbb
enter
mov
xchg
into
dec
cli
adc
in
mov
clc
dec
je
or
xor
dec
inc
imul
pop
mov
insb
mov
test
orl
push
imul
rclb
insl
mov
adc
imul
jge
clc
push
pusha
or
outsl
sub
movsb
into
imul
arpl
dec
daa
push
aaa
xlat
mov
ret
inc
jbe
outsb
mov
scas
xchg
faddl
jecxz
mov
jg
xchg
jns
leave
add
jp
loope
ret
and
dec
jno
lret
add
mov
ja
jno
loopne
scas
xchg
inc
movsl
or
lods
cli
sub
fdivl
mov
ret
mov
data16
in
pop
aam
inc
xor
out
cwtl
lea
jmp
jmp
xor
out
mov
mov
inc
adc
dec
xlat
hlt
lods
add
mov
pop
mov
dec
sbb
sub
inc
xor
insl
cltd
cmpsl
ss
adc
fs
xchg
jno
aad
rcll
outsl
mov
xor
in
sti
sbb
jg
xchg
sbb
test
xchg
ret
jnp
or
cvttps2pi
mov
loopne
movsb
mov
add
notb
not
cs
rcr
in
imul
and
push
inc
outsl
pop
sub
mov
cld
test
test
or
cmpsl
cwtl
or
add
xor
push
sub
mov
sbb
lods
add
mov
out
lret
mov
shll
imulb
adc
mov
rcll
inc
xchg
jb
sbb
or
jno
pop
dec
push
sub
adc
ret
pop
fwait
int
arpl
shr
dec
lds
pop
inc
xchg
notl
xor
pop
into
outsb
or
sub
les
and
jecxz
daa
push
mov
mov
xchg
jo
xchg
pop
push
repnz
and
inc
daa
add
push
push
fwait
cmp
sbb
sti
lods
mov
xor
cltd
mov
or
outsb
out
push
call
insl
cs
out
insl
test
icebp
flds
fistpl
fdivr
pop
stc
mov
add
push
or
daa
push
pop
leave
mov
dec
mov
arpl
lret
popf
clc
mov
bound
sar
sahf
inc
das
jae
add
call
inc
jmp
mov
jge
and
dec
jp
pop
xchg
mov
push
inc
push
mov
mov
shr
fs
mov
das
mov
mov
xchg
mov
test
pop
pop
cltd
push
mov
sbb
fwait
xchg
mov
mov
sbb
and
int3
movsl
sbb
call
push
and
push
loope
add
sub
inc
jle
int
cli
adc
imul
sub
mov
inc
inc
daa
repnz
mov
add
sbb
push
pushf
mov
mov
cmp
sbb
cltd
divb
stos
jno
mov
mov
fstpt
scas
rcrl
lods
popl
dec
adc
out
adc
xchg
add
add
mov
and
lret
orb
xor
test
jno
flds
shrl
xchg
xor
std
xor
popa
fldenv
pop
movsb
sbb
push
mov
enter
outsb
and
jp
aam
mov
xor
dec
insl
in
push
add
jne
xchg
imul
sbb
xchg
xchg
popf
daa
push
cs
cmp
push
jns
jnp
jle
push
dec
inc
and
movsb
in
mov
push
popa
repz
imul
dec
cmp
cld
adc
rcl
add
mov
mov
inc
xchg
adc
xchg
pop
jo
ret
cmp
daa
lock
insl
jecxz
inc
cmp
insb
in
sbb
xchg
or
and
fmul
dec
xor
scas
sahf
stc
push
xor
cmp
sub
add
call
rorl
stos
cmpsl
je
sub
xchg
pop
adc
or
mov
mov
insl
into
daa
shrb
push
insl
push
push
sub
imul
push
jl
iret
push
jmp
pop
ss
fbstp
jle
mov
enter
loope
or
cmp
fdivrs
jb
dec
loopne
loop
subb
daa
in
clc
xchg
xor
inc
jnp
xchg
cld
sub
sub
cli
test
sbb
lods
pusha
in
xchg
push
dec
dec
testb
out
xor
sbb
sahf
addr16
cmp
xchg
fnop
ss
and
hlt
jb
or
xchg
inc
pop
inc
ljmp
push
imul
sbb
jmp
pop
les
mov
into
dec
aas
jno
mov
cmp
fdivr
sahf
jb
lea
aas
sub
jle
mov
xor
xor
cs
adc
or
push
xchg
add
pop
or
out
ret
idivl
js
or
iret
ss
and
pushf
sbb
push
inc
xchg
adc
in
decb
ja
test
iret
and
shl
aam
test
xor
xchg
mov
mov
daa
xchg
lcall
sbb
jmp
into
stc
lock
popf
inc
cmp
cwtl
mov
daa
jo
cs
fdivrl
test
dec
in
add
sbb
cmp
pop
stos
out
mov
mov
sbb
in
fsubl
into
ficoms
popf
lret
mov
add
jg
cld
lahf
repnz
ficoms
mov
jno
out
xchg
out
push
or
mov
fbld
xor
js
xchg
mov
loop
mov
and
jno
scas
mov
sub
popf
adc
add
aaa
aad
in
ret
jno
xchg
daa
pop
jmp
iret
jl
mov
cmp
not
pop
imul
lods
test
dec
in
stos
jle
jecxz
call
fwait
shrb
push
mov
push
jecxz
cmpsl
das
andb
bound
mov
pop
out
mov
inc
cmp
icebp
fiadds
pop
je
repz
xchg
cli
and
jb
mov
inc
mov
stos
mov
push
enter
ret
dec
and
mov
adc
cmp
mov
lret
or
pop
xchg
ja
aad
sbb
push
test
es
sbb
test
stos
and
int3
lods
pop
push
dec
sti
or
xor
inc
xor
adc
mov
fisubs
push
cmpsb
stc
cmp
fistpll
out
xchg
adc
std
filds
jne
cmc
in
push
div
inc
jp
mov
daa
mov
aam
std
and
sub
clc
jl
sti
mov
xor
loope
mov
popa
add
mov
xor
and
mov
aaa
out
mov
repnz
data16
inc
cwtl
rcr
jecxz
mov
iret
mov
jnp
cmpsl
lret
push
sbb
std
stos
pop
cmp
shlb
enter
jnp
gs
jno
test
xchg
ss
xor
xchg
and
outsb
or
jns
es
in
loop
dec
ret
add
sub
shlb
jno
mov
dec
mov
int
pushf
hlt
xchg
push
popa
gs
xor
je
cmp
lods
iret
test
push
insb
xor
or
adc
stos
jg
pop
inc
jecxz
scas
xchg
mov
icebp
push
aad
stc
fwait
jl,pn
and
stos
add
hlt
fistps
aas
or
sbb
roll
sub
inc
jns
sub
pop
sub
pop
inc
jge
out
stos
push
imul
push
in
orl
jmp
sub
fildll
cmpl
push
scas
mov
in
aam
push
invd
dec
jae
inc
mov
mov
add
pop
or
dec
mov
mov
testl
imul
cmp
jnp
mov
lret
test
mov
cmpsb
fnsave
lahf
pop
stos
cmp
add
inc
pushf
mov
jb
and
pushf
lahf
mov
push
push
mov
mov
mov
lret
lcall
cltd
leave
push
sti
pop
xchg
add
xor
or
sbb
fiaddl
or
ljmp
pop
call
sahf
clc
mov
adc
ror
sahf
mov
push
sbb
xor
jae
outsb
add
jge
inc
sub
xor
test
or
push
sbbb
xor
xchg
jl
xlat
and
lods
pusha
insl
and
dec
cmpsb
std
mov
sbb
pushf
sbb
mov
jo
bound
adc
arpl
bound
dec
std
loopne
movsb
idivl
fst
cmp
mov
xor
jp
mov
xchg
sub
mov
ret
daa
mov
in
rcll
sbb
cltd
dec
lds
sbb
pushf
add
vpcmpgtd
mov
es
out
and
mov
cmp
ret
lods
xor
arpl
adc
iret
sarl
shl
es
xor
insb
addl
push
lahf
in
iret
shl
sbb
push
lods
jne
icebp
adc
add
js
pushf
les
or
loopne
or
in
pusha
xchg
sub
movsl
insl
scas
mov
test
popa
mov
dec
pop
mov
pop
inc
in
or
pop
jno
push
xor
cmc
popf
dec
in
divb
mov
stos
incb
or
inc
xor
int
mov
add
xchg
frstor
ficomps
add
cmp
jmp
xchg
jmp
or
pop
jg
lret
pop
jb
add
add
push
fisubrl
push
pusha
popf
loope
pusha
dec
addl
and
fs
shr
idivl
add
shl
popa
shll
insl
sahf
pushf
sbb
js
roll
stos
stos
xor
popa
int3
es
cld
test
add
test
mov
stos
add
sbb
adc
xor
insl
adc
jbe
and
or
sub
add
add
fldcw
rorl
addr16
fistpll
adc
sbb
xchg
mov
push
call
loop
cmpsl
insl
cmp
insl
cs
adc
mov
out
jne
dec
inc
and
pop
and
out
scas
mov
add
push
xchg
and
cmpl
shlb
cmp
mov
pusha
push
int3
cmp
adc
push
insb
or
lret
cmp
pop
stos
fldt
adc
lret
cld
push
je
cs
clc
or
setne
cld
sbb
mov
mov
adc
in
fdivr
out
pop
mov
je
sub
loope
mov
inc
push
lret
out
test
xlat
pop
sub
sahf
nop
mov
jne
or
xchg
das
push
repz
scas
sbb
out
sbb
cmp
fsub
sbb
add
mov
call
adc
and
jno
xchg
pop
sub
leave
xchg
and
jo
push
inc
pop
xchg
push
and
sbb
xchg
in
bound
xlat
cmp
cmp
and
jns
and
cmc
add
les
sbb
jmp
mov
push
sbb
sbb
imull
movsb
mov
rclb
sub
lods
mov
pop
leave
out
xorl
das
sub
jo
js
mov
push
or
adc
push
out
mov
sbb
mov
sbb
sub
or
shrb
loop
jae
lods
gs
dec
add
and
inc
push
nop
mov
fnstenv
push
xor
test
inc
out
adc
ret
filds
mov
sbb
nop
es
iretw
sub
push
pop
gs
aad
aas
mov
popf
icebp
xor
movsb
jae
frstor
mov
test
fwait
outsb
push
popf
jmp
push
and
fwait
jge
xrelease
ret
inc
rolb
mov
cwtl
inc
insb
push
xor
push
or
xchg
dec
push
and
dec
test
test
add
pop
mov
cld
in
lea
enter
inc
dec
cmp
movb
ret
mov
pop
in
inc
test
in
outsl
push
jnp
pop
adc
fistps
and
sub
sub
lea
inc
mov
bnd
mov
mov
cmp
test
test
mov
ds
adc
lea
dec
repz
fcompl
xchg
iret
testb
into
pop
lahf
adc
lret
adc
fists
jbe
cli
je
jecxz
test
mov
std
push
sub
sahf
adc
stos
les
nop
imul
adc
test
cmp
sub
outsl
mov
sub
cmc
popf
push
dec
cmp
stos
mov
out
push
arpl
inc
ljmp
scas
pop
out
mov
inc
out
mov
popf
mov
push
sub
adc
mov
shll
mov
or
pop
jb
int3
dec
xchg
out
out
nop
or
sub
adc
ja
gs
call
mov
push
xlat
mov
fsubl
or
push
mov
jmp
and
pop
mov
in
mov
mov
xor
pusha
xchg
xchg
push
mov
mov
stc
xor
cwtl
mov
loop
out
es
push
and
out
mov
mov
lea
lods
add
pop
in
jp
cmp
pusha
mov
or
outsb
arpl
ss
push
jb
pop
and
xlat
daa
sub
test
or
mov
mov
mov
dec
arpl
pop
pop
mov
addb
in
xchg
lret
cmp
fimuls
mov
or
call
enter
jp
out
sbb
in
cmp
mov
cmpsb
pop
push
out
dec
icebp
rorb
aad
add
in
mov
dec
inc
test
imul
test
jbe
fisubrs
push
rcrb
add
xchg
daa
arpl
push
xchg
cltd
repz
mov
push
gs
mov
pop
and
inc
cmc
pop
push
mov
out
shll
filds
xchg
and
mov
sub
xor
and
int3
push
fsubrs
test
sahf
out
pop
mov
nop
mov
jne
das
mov
sub
ljmp
sub
aaa
push
sbb
scas
add
xor
push
pop
fnstenv
xor
lods
leave
insl
sbb
dec
xor
mov
sbb
das
jne
sbb
cmp
cli
fmull
ret
sbb
add
scas
insb
sub
mov
or
sub
jnp
sti
aam
mov
mov
add
lods
loop
daa
fbld
sbb
fdivrl
fldenv
dec
fwait
rol
pop
xchg
gs
jb
adc
dec
adc
repz
inc
movsb
pop
push
sub
mov
pop
push
ja
mov
xor
pop
cltd
mov
fsubrs
int3
repnz
pushf
lock
lahf
fcmovnb
push
add
push
push
test
cmc
andb
stos
idivb
scas
jbe
shl
in
in
rol
daa
repz
pop
push
es
ds
or
mov
sbb
jbe
push
cmc
push
lahf
aam
cmp
stc
inc
in
dec
aam
cmp
cmp
ja
stos
pop
xchg
cmp
add
fcmovu
fcoms
in
je
nop
adc
shlb
rclb
stos
push
jbe
mov
mov
xchg
mov
adc
jnp
sarl
fcoml
inc
and
out
jle
sbbb
push
dec
jp
and
dec
stos
jmp
andb
sbb
mov
jecxz
fs
mov
mov
jae
push
leave
mov
cmpsb
push
and
iret
dec
rolb
int3
dec
fwait
push
mov
mov
leave
arpl
mov
ljmp
in
in
cmpsb
scas
fldenv
pop
leave
dec
jmp
aaa
push
clc
int3
adc
dec
shlb
insb
je
jp
cmp
cltd
sbb
rcr
out
mov
rorb
cli
in
adc
push
gs
mov
jp
in
in
push
xorb
push
data16
les
icebp
sti
sbb
call
inc
shlb
push
sahf
outsb
and
test
xchg
enter
cmp
jle
jmp
insl
pop
imul
ret
cmpsl
test
lahf
icebp
inc
fs
inc
adc
mov
fldenv
xor
xor
cmp
adc
in
insl
adc
lret
push
add
rcrb
fbld
cld
hlt
mov
int
xchg
xchg
rclb
push
cmp
movsb
cmp
cmc
add
mov
push
int
nop
adc
pop
mov
jnp
xor
test
push
sarb
mov
push
pop
cmp
jg
jle
push
stos
ds
mov
cs
in
roll
mov
and
pop
push
cltd
xchg
aaa
push
pop
sbb
dec
sub
ficoml
cmp
inc
xlat
pop
sbb
fs
movsl
arpl
or
cwtl
inc
bound
push
cmc
in
mov
cmp
incl
mov
lahf
aas
mov
cwtl
push
mov
sbb
jecxz
dec
add
cmc
mov
repnz
sub
sti
xchg
dec
daa
jno
dec
cmpsb
mov
ljmp
mov
cli
ret
add
xor
repnz
dec
in
sub
movd
sbb
jo
adc
or
jge
ror
popf
loope
adc
lea
in
adc
xor
mov
xchg
jl
sub
add
hlt
jnp
aad
faddl
popa
scas
mov
outsb
repnz
mov
je
inc
in
cltd
sbb
xchg
pop
cmp
sbb
aad
jbe
imul
movsb
mov
jmp
mov
out
aas
lods
arpl
mov
jl
mov
sti
idivl
daa
add
or
hlt
dec
xor
bound
scas
iret
pusha
loop
jbe
xchg
lret
inc
out
lds
inc
std
jne
mov
ljmp
dec
ljmp
hlt
std
fwait
scas
jg
lock
orl
ljmp
outsl
inc
inc
in
xor
sbb
and
sub
lahf
inc
xorb
icebp
xchg
jne
fnsave
inc
sahf
inc
mov
je
jp
push
popf
inc
mov
sbb
adc
adc
xor
pop
cltd
and
ja
mov
cmp
add
pop
iret
inc
xchg
stc
mov
xchg
cmp
loope
or
mov
xor
data16
xor
pop
jb
and
hlt
shlb
xchg
and
add
mov
fidivrl
jecxz
jbe
les
jmp
std
outsl
rcrb
in
pmullw
testb
pop
loopne
fwait
cmp
sub
cmp
fcmove
sbb
cmp
fwait
push
inc
mov
je
inc
cld
mov
rclb
inc
add
sbb
xchg
dec
or
lret
dec
test
push
icebp
cmp
xor
or
gs
outsb
pop
adc
fnsave
sbb
in
ds
mov
pop
or
mov
in
sbb
mov
fsubrs
in
arpl
xchg
dec
mov
mov
pop
sbb
outsb
fidivl
or
cmp
sbb
loopne
dec
icebp
dec
out
add
leave
xor
or
rcll
out
ficomps
mov
lock
xchg
pushf
pop
fimull
mov
loope
loop
xor
lock
inc
int3
and
lds
mov
das
mov
push
jb
dec
xor
or
clc
xor
add
adcl
repz
aaa
sub
les
xchg
dec
adc
imul
inc
out
inc
imull
sarl
jne
pop
int3
mov
mov
push
int
lock
pop
pop
inc
jnp
and
sub
cmp
dec
mov
testl
cmp
enter
subb
mov
jae
inc
lea
adc
jne
mov
inc
dec
rcrb
das
pop
lods
cmp
adc
jnp
ss
outsb
cmp
popf
mov
push
mov
dec
shll
mov
hlt
mov
cmp
or
in
xor
mov
ffreep
jg
mov
mov
lds
rolb
scas
inc
decb
pop
add
sub
jbe
stos
sbb
sahf
fiadds
inc
adc
pop
push
stc
loopne
jae
enter
fiadds
daa
hlt
iret
lock
stos
inc
sbb
jg
add
pop
mov
or
xor
adc
sbb
and
mov
std
mov
repnz
sbb
stc
ja
dec
jo
push
pop
inc
loop
cmpb
nop
mov
popa
push
jle
out
rclb
mov
mov
mov
rcr
inc
pop
fucomi
add
ficomps
vpsllw
cmpsb
sarb
and
xchg
in
push
mov
lods
xor
sbb
negl
and
and
push
int3
sbb
xchg
sbb
jle
lret
push
test
jl
sbb
mov
sbb
out
rol
cs
xchg
push
andb
xor
pop
imul
repz
mov
cmp
sbb
insl
jbe
xor
loope
adc
or
rclb
and
rcl
inc
pminsw
inc
sbb
stc
fnsave
or
mov
testl
inc
jg
jl
sub
lahf
jo
pushf
addl
cmp
lcall
push
pop
pop
cmp
xor
sub
push
outsb
aam
outsl
mov
mov
repnz
pop
mov
rcll
lret
xor
hlt
add
jg
iret
sahf
pop
decb
fistl
ret
xchg
dec
popa
lret
fisubs
adc
inc
test
test
adc
jb
pop
bound
roll
push
lods
push
fnstcw
add
and
xlat
pop
xchg
mov
cmp
pop
push
lea
fcoml
roll
xchg
decl
and
push
pop
dec
movsl
insb
cmp
and
test
dec
movsl
xor
nop
in
jo
add
aad
stos
daa
sub
and
inc
pop
lock
or
pushf
int
push
push
push
das
aad
arpl
pop
mov
or
push
orb
pop
mov
jmp
test
test
aas
mov
add
sub
push
dec
lds
sub
loope
cmpsl
ret
inc
pop
jne
add
fs
pop
pushf
jmp
jb
mov
or
mov
cmp
adc
or
pop
jge
flds
or
and
stc
mov
mov
nop
iret
popf
cmp
testb
shrl
incl
daa
dec
push
pop
imul
cmp
pop
jbe
inc
sub
push
pop
lcall
pop
je
mov
xor
les
int3
stc
iret
adc
ljmp
jge
mov
je
mov
ds
lret
sbb
or
call
in
dec
out
mov
or
leave
test
mov
int
outsl
dec
mov
loopne
sub
push
lock
mov
cmp
int
lret
mov
sti
repz
repnz
adc
lock
mov
and
xchg
dec
sbb
fidivs
pop
out
dec
mov
adc
add
xorl
mov
lcall
or
sbb
loope
ja
lahf
imul
aas
dec
and
mov
xchg
push
push
or
sbb
jge
out
loopne
loope
xchg
mov
mov
adc
cmp
push
aas
sbb
mov
push
lds
pop
out
adc
xlat
pop
test
das
xchg
xchg
dec
addr16
and
xchg
loope
or
or
jnp
lods
jle
in
out
ror
out
mov
dec
push
rcl
mov
push
fsubp
xor
jmp
inc
push
pop
je
pop
fsubrp
sbb
out
jmp
sub
mov
repz
leave
hlt
add
orl
sti
push
push
sub
xor
adc
test
dec
sub
js
lock
jmp
sbb
loopne
in
xchg
inc
fsubp
and
mov
iret
jo
out
idivl
sti
pop
jl
movsl
pop
mov
dec
test
divb
jns
fisubrl
sarb
nop
adc
pop
outsl
and
push
int
sti
push
inc
adc
loop
cvtpi2ps
or
ljmp
push
or
pop
in
bound
dec
aad
cmp
jmp
jge
ret
mov
ja
fisubs
inc
cs
lcall
and
cmp
cmp
jle
dec
cmp
test
mov
mov
addr16
dec
insb
fists
pushf
cmp
data16
aaa
mov
rcrb
jne
pop
icebp
and
cmp
xchg
sub
xchg
mov
ja
inc
mov
mov
sub
fucom
push
push
dec
lock
cmpsl
movsl
outsb
mov
xchg
push
in
and
dec
push
sbb
loope
xchg
scas
fs
sub
pop
dec
jbe
adc
popa
test
out
imulb
lods
rcll
pop
loopne
aas
xor
pop
push
pusha
and
xchg
sub
jno
and
cmp
add
xchg
pop
pop
js
or
cs
mov
push
pop
cltd
jmp
xchg
jo
jge
int3
dec
pop
mov
hlt
lcall
or
movsb
addr16
aad
push
cld
xchg
idivl
lea
js
mov
lods
sbb
test
push
sbb
ljmp
ss
dec
and
push
sbb
ss
popf
push
repz
insl
inc
in
pop
out
fmul
dec
cli
test
lock
xchg
xor
xor
inc
iret
cmp
outsb
sbb
jne
sbb
sbb
addl
sbb
out
mov
adc
pop
ss
sbb
gs
imul
lock
or
or
push
adc
fld
jmp
fcmovu
push
jge
repnz
mov
mov
cld
mov
hlt
jno
mov
and
mov
push
and
aaa
orl
jl
or
aad
sub
imul
push
lcall
pop
jbe
push
icebp
mov
xchg
fdivrs
push
inc
out
ja
or
test
inc
and
adc
scas
ds
mov
bound
xor
add
cmpl
push
cltd
add
imull
or
dec
push
sbb
mov
hlt
bound
jb
dec
pop
je
pop
out
or
cmp
add
sub
sbb
dec
mov
loop
and
sbbl
mov
out
or
mov
xchg
rcll
mov
mov
daa
mov
mov
fldenv
scas
inc
add
test
jno
xchg
push
pop
lods
in
mov
push
mov
lret
outsb
sti
loope
mov
mov
jb
mov
mov
ja
adc
js
push
xor
cmpsl
jp
push
add
dec
mov
mov
bound
sbb
cmp
mov
lds
add
mov
jg
fdivr
out
pop
test
sbb
nop
xor
push
or
dec
sub
clc
cmp
call
lcall
push
mov
in
lods
repz
lds
mov
dec
sub
inc
hlt
xchg
xor
ds
mov
jecxz
jnp
add
negb
sbb
testl
xchg
xlat
inc
leave
call
ror
ljmp
mov
insl
test
icebp
mov
in
sub
push
jl
shlb
push
and
push
adc
mov
cmc
or
icebp
pop
mov
add
ficoml
data16
push
loop
lcall
scas
aad
and
shll
jo
jne
imul
repz
pop
mov
popa
push
and
lods
adc
xchg
mov
outsl
jge
dec
jle
mov
shrl
inc
ret
push
subl
or
test
push
adc
mov
or
icebp
iret
leave
stos
add
cmp
sub
xchg
push
aad
iret
loope
mov
xor
test
jo
mov
push
push
cmpsl
or
mov
fisttpll
dec
aad
xor
pusha
sub
call
xor
jmp
out
cwtl
ja
xchg
rorl
pop
iret
mov
sbb
lcall
dec
out
or
pusha
cmp
fs
shlb
sub
add
inc
dec
lret
subb
mov
cli
ja
push
dec
cmp
cltd
mov
push
out
imul
sbb
negl
into
decl
mov
add
stc
lcall
jge
xchg
iret
sbb
loop
scas
inc
movsl
jo
inc
sub
cmc
fs
push
rcll
leave
les
pop
int
rorb
pop
push
or
sub
add
das
clc
jl
or
lahf
leave
jne
cli
insl
xchg
mov
mov
jnp
data16
nop
outsb
push
cmp
orl
imul
repnz
mov
jno
sbb
aas
popl
jb
incb
mov
mov
inc
adc
test
jb
add
rorb
jl
sub
mov
pop
mov
addb
jg
inc
mov
fcmovu
and
xchg
cmp
push
push
mov
sub
jae
lds
add
loope
rcrl
scas
or
fisttpll
jne
sarl
out
sbb
imul
cmp
dec
inc
mov
cld
and
add
outsl
adc
and
xor
stc
lods
jb
std
insl
jo
cmp
inc
inc
mov
push
cmp
dec
sqrtps
mov
push
jg
push
rcr
repz
add
jle
aad
jmp
or
scas
push
jne
jo
or
inc
adc
sub
mov
outsb
or
pop
sbb
cmp
loopne
inc
mov
adc
mov
faddl
mov
imul
pop
mov
inc
adc
mov
cli
enter
push
das
sbb
out
leave
pop
dec
lret
std
mov
mov
xor
sbb
fstl
push
in
sbb
mov
dec
outsb
movb
scas
xchg
mov
rolb
jns
daa
out
mov
sub
or
jmp
aas
cwtl
push
ret
das
lahf
xchg
push
push
cmp
mov
lahf
sbb
pop
je
ret
xor
inc
sub
test
xchg
and
add
mov
pop
jnp
fldl
sbbl
xor
push
pushw
in
mov
adc
xchg
dec
mov
adc
mov
add
cli
outsb
push
mov
cmc
mov
int
aam
mov
cli
in
push
cmpsl
out
shrb
and
cmp
cs
jge
sbb
mov
jmp
pop
insb
in
cmp
pushf
repz
push
inc
fs
inc
ret
aaa
mov
push
and
adc
adc
rcrl
inc
bound
test
fdivs
rol
mov
pop
ret
pop
mov
xchg
jno
call
xor
mov
das
lods
and
ljmp
add
out
add
lcall
push
int
cmpb
mov
mov
pop
inc
cmp
das
test
jmp
dec
nop
xchg
mov
hlt
cmpb
push
adc
cmp
cmp
mov
mov
xchg
dec
jns
sub
clc
ret
adc
mov
push
imul
jge
inc
mov
ja
arpl
push
lock
mov
mov
jnp
jb
push
and
pop
push
push
pop
inc
cltd
shrl
stos
outsl
arpl
jae
push
std
lock
jb
jmp
mov
ds
jmp
sbb
fcompl
xchg
add
add
sub
xchg
and
shll
push
in
shlb
inc
lds
pop
insb
or
decb
mov
sti
loopne
jmp
inc
and
ret
cld
scas
jp
cmp
je
out
push
or
sbb
and
mov
int3
jl
cs
popa
bound
test
fidivrl
sbb
mov
arpl
into
in
lcall
loope
mov
dec
lret
add
add
in
jnp
fs
add
test
cmp
repz
inc
ret
scas
jb
xchg
cmp
dec
jne
out
cmp
push
mov
sbb
jns
ret
sbb
mov
incl
sbb
jnp
imul
push
outsb
cmp
and
fsubl
ljmp
daa
dec
jb
std
xchg
sbb
aam
fs
add
push
jae
cmp
jl
and
fld
pop
dec
fisttpl
in
push
push
mov
cmp
or
mov
cmc
rorb
sbb
loopne
pop
cmc
rorl
pop
xchg
sbb
mov
cmpsl
fwait
xchg
mov
outsl
je
add
daa
push
loopne
lods
cmp
pop
popf
cmp
jge
mov
cltd
sub
aam
pop
push
add
fcoml
jb
lret
aam
fdivr
or
push
stc
add
and
scas
lret
les
cwtl
add
std
sub
pop
dec
movsl
mov
iret
fnsave
out
popf
rcrl
pop
push
dec
imul
subl
outsl
pop
inc
mov
jns
and
and
cmpsb
push
inc
xorb
pop
dec
jp
fs
cmp
negl
mov
mov
icebp
movsb
or
mov
xor
and
lret
push
mov
mov
int
aaa
mov
xchg
orb
insb
add
dec
sbb
mov
std
arpl
das
insb
sti
mov
mov
sarb
add
stos
xor
std
aad
loopne
lret
arpl
xor
shll
lea
je
nop
in
mov
int
fbstp
pop
xor
cmp
insl
insb
xchg
adc
loope
daa
jb
inc
push
pop
mov
idiv
shr
dec
jmp
push
jge
mov
cmp
sahf
dec
shrl
jp
mov
test
push
and
scas
push
jge
arpl
dec
jg
insl
cld
sub
jp
aad
cmp
push
jns
dec
pop
push
mov
pushf
movsl
fidivl
and
dec
pop
sti
mov
dec
aaa
add
loop
pushf
clc
sub
jle
pop
dec
dec
cltd
push
xlat
cld
sub
mov
jecxz
cmp
sbb
push
int
xchg
push
ds
fs
add
mov
fadds
insl
insb
sbb
sub
mov
mov
test
popa
mov
jecxz
add
iret
jl
xor
sarl
fidivl
lar
pop
sub
sub
push
cmp
mov
insl
sahf
or
cmp
lcall
insl
pop
mov
sbb
mov
les
push
arpl
shll
sti
lahf
push
data16
jmp
mov
in
push
pop
mov
jne
add
mov
fldl
add
mov
mov
dec
les
loopne
aas
test
cltd
mov
lahf
imul
sub
inc
cmpsl
hlt
and
jp
mov
and
inc
or
movsl
enter
push
fsubrl
mov
push
shll
leave
pop
out
cmc
out
cmpl
movsl
pop
sub
negb
add
cmp
iret
add
adc
in
ss
mov
push
mov
pop
pop
stos
and
jmp
xor
jns
jge
pop
pop
adc
lock
lods
imul
xchg
addb
cli
lods
int3
push
lcall
xor
insl
jmp
pop
mov
xor
push
xchg
xor
inc
in
inc
inc
pop
in
nop
mov
cltd
mov
mov
hlt
mov
xchg
mov
out
lods
in
dec
and
fldl
orl
xchg
movsl
sub
lahf
lods
in
push
push
scas
mov
lock
pop
xchg
adc
adcb
mov
pusha
xchg
ret
or
sub
mov
popf
sbb
in
dec
repnz
cmp
adc
push
mov
pop
lret
mov
push
mov
movsb
inc
xor
cmp
mov
xchg
arpl
shrl
lret
dec
iret
dec
popf
popa
lea
dec
adc
bound
xor
test
ret
mov
ds
add
out
loop
test
shll
cwtl
call
and
repz
push
aam
pop
cmpsb
cmp
ja
push
pop
push
adc
cmp
and
ljmp
call
pop
push
fildl
movsb
mov
lods
cmpsl
xor
xor
dec
and
mov
xor
sbbl
inc
push
lock
adcb
fsubs
and
xchg
mov
into
ret
pusha
cmp
xchg
xlat
pop
or
add
xchg
ljmp
inc
out
mov
and
mov
and
imul
negl
mov
mov
fnstenv
pop
inc
stos
and
pop
imul
lods
xchg
push
and
dec
mov
push
xchg
sub
lock
stos
cmp
xchg
insb
insb
out
xchg
or
es
imull
clc
ficoml
insl
pop
movsl
pop
rcrb
js
sub
xchg
insl
sbb
cmc
dec
aas
and
inc
jp
adc
data16
jl
stos
in
rcll
dec
mov
mov
and
aam
arpl
shlb
lea
lcall
ffreep
mov
sahf
dec
shr
adc
cmp
popa
sbb
sbb
roll
push
xlat
or
cmp
jle
out
mov
mov
push
add
iret
movsl
adc
mov
jbe
jmp
test
sub
mov
push
add
mov
cmp
adc
sbb
cmp
pop
xchg
mov
sub
cs
mov
jmp
dec
pop
or
dec
ret
nop
mov
sbb
mov
push
jbe
mov
pushf
mov
cmp
mov
scas
mov
push
iret
xchg
std
mov
xor
and
hlt
sbb
jns
addr16
out
jbe
pop
mov
jg
add
or
cmp
mull
pop
sbb
mov
cmp
ss
arpl
fiadds
negb
adcl
and
cmc
int3
xor
stos
dec
cmp
push
int3
mov
jmp
test
dec
push
into
bound
insb
add
push
sbb
shrl
in
decl
xor
sbb
insb
xor
lcall
nop
dec
call
clc
imulb
xchg
push
inc
int3
iret
pop
push
dec
xchg
icebp
xlat
cld
pop
insb
negl
pusha
mov
fldt
mov
cmp
push
adc
jp
fldl
dec
lds
fwait
jae
push
jno
out
sbb
inc
or
inc
cmp
stc
or
enter
inc
sbb
arpl
clc
mov
adc
ds
fcmovnu
adc
adc
pop
adc
mov
negb
cld
push
fcomps
mov
js
add
fwait
and
repz
lods
cmpsb
das
push
rcr
xchg
imul
adcb
ret
shlb
and
adc
mov
and
sub
xchg
mov
push
bound
push
loop
fbstp
popa
sbb
enter
mov
pop
push
roll
movsl
and
insl
add
sbb
enter
adc
arpl
arpl
movsb
pop
bound
mov
adc
lock
jle
xor
icebp
incl
pop
sub
test
xchg
outsl
cmpsb
adc
jmp
sbb
jle
loopne
fs
xor
dec
mov
enter
lcall
add
and
push
leave
jg
movsl
cmc
jle
jnp
in
mov
jl
dec
mov
dec
or
lcall
xchg
clc
cmp
cmp
dec
xor
fcompl
xor
scas
jp
sti
ror
jne
std
loop
xor
or
je
inc
jbe
mov
loop
fnstenv
jne
sub
in
loopnew
pop
movsb
fstp
test
std
cltd
pop
daa
or
shrb
jo
pop
xor
push
and
lods
pop
mov
mov
das
gs
and
mov
pushf
mov
lds
fisubl
jg
dec
xchg
gs
aad
hlt
loopne
rorb
rorb
fstps
aaa
jae
mov
les
inc
inc
sti
inc
add
in
mov
xchg
add
or
xor
mov
or
pop
and
sahf
daa
or
cmp
mov
push
mov
fidivrl
in
ss
out
es
es
lret
inc
add
call
jle
push
mov
dec
cwtl
dec
fs
jl
mov
jge
idivl
loop
push
add
xchg
jbe,pt
sarl
mov
add
fisubrl
sti
mov
iret
cmp
pop
pop
ljmp
or
lea
jl
push
sub
out
popf
jecxz
cld
inc
das
mov
inc
mov
mov
push
movsl
sarl
xchg
outsb
mov
fistl
jo
cmp
xorb
push
fwait
or
sub
mov
divb
mov
std
div
out
movsl
or
xchg
cmp
fldl
aaa
movsl
dec
cmc
movsl
das
adc
pushf
das
pusha
mov
int3
xchg
add
call
inc
ja
pop
inc
fildl
loopne
fdivr
test
mov
jmp
add
or
scas
cmp
add
loopne
dec
mov
inc
or
popa
sbb
sahf
mov
aad
inc
ljmp
and
aad
pop
push
push
mov
pop
pop
mov
sbb
mov
decb
in
mov
outsl
lock
jbe
mov
je
enter
nop
call
pop
loope
mov
adc
sti
pop
mov
add
mov
jmp
fwait
cmc
not
mov
add
arpl
test
test
sbb
push
mov
jb
xchg
test
in
das
aas
and
insl
xor
movsl
fisubs
pop
ljmp
xchg
mov
adc
pop
xlat
int3
mov
sbb
or
insb
dec
stc
stos
je
sarb
xlat
sbb
lret
imul
adc
adc
mov
and
xor
ss
mov
fisubl
sbb
jecxz
data16
dec
pop
adc
pop
fisttpl
xor
sarl
inc
sub
icebp
in
mov
push
cmc
bound
negl
sub
loope
loopne
lret
stos
loop
hlt
sbb
push
jp
push
mov
cld
mov
bound
je
push
into
sbb
out
xchg
cltd
dec
cmp
das
dec
lock
pop
sbb
ljmp
popf
call
cmp
scas
sub
hlt
popa
mov
int
cli
xor
pop
out
xchg
out
push
jg
daa
jb
into
xchg
inc
lds
pop
gs
das
sub
pop
dec
dec
pushf
mov
orb
rol
lret
lods
add
aaa
stc
pop
insl
or
leave
sbb
ljmp
iret
xor
add
repnz
popa
or
shll
adc
mov
jle
mov
inc
or
enter
xor
flds
jge
mov
mull
pusha
push
out
repz
dec
ljmp
mov
xor
pop
and
mov
push
xchg
push
out
iret
dec
das
jecxz
divl
repnz
sbbl
mov
arpl
lahf
jae
out
das
jp
dec
adc
pusha
gs
std
movsl
mov
orl
lahf
sahf
stos
xchg
pop
pop
push
adc
shrl
out
jge
mov
dec
and
and
sub
stc
fs
and
xchg
outsb
mov
insl
out
push
dec
lcall
int
adc
cmpsl
mov
xchg
mov
add
or
mulb
or
sub
out
xchg
pop
clc
push
or
mov
fwait
inc
adc
jecxz
push
push
push
xchg
inc
xor
inc
mov
mov
js
push
into
sub
vmptrld
insb
push
mov
dec
lea
mov
pop
aad
ror
fldcw
scas
mov
push
fwait
or
push
push
cli
jecxz
mov
aam
out
out
xchg
push
mov
les
andb
cld
push
or
mov
loop
dec
sbb
xchg
pop
shlb
cmpsl
test
mov
push
xor
xchg
icebp
mov
sbb
cli
fildll
mov
ljmp
stos
loope
cmp
mov
test
sbb
add
cmpsb
pusha
or
xor
das
xor
aas
sub
sbb
roll
mov
inc
mov
out
jp
sbbl
imul
gs
push
js
sub
inc
popf
push
dec
mov
cmc
mov
lea
sub
jl
rorl
daa
lcall
shll
icebp
xchg
sub
pusha
adc
xor
sbbl
shl
push
imull
lea
dec
or
les
test
sbb
jg
into
lea
dec
movsb
or
mov
ss
or
and
cmp
pushf
push
mov
xchg
in
xchg
cmp
adc
test
fisttpll
pushf
iret
in
sbb
adc
sbb
fwait
dec
mov
lret
nop
movsl
mov
aam
aas
call
add
and
inc
mov
lret
fstpl
push
mov
pop
nop
insb
inc
mov
sbb
clc
jo
es
mov
pusha
cmp
xchg
pop
mov
dec
js
xchg
addr16
pop
push
mov
rcrb
and
int
jne
and
push
mov
inc
jp
push
xor
mov
or
jecxz
xchg
cmc
loopne
push
rcrb
sbb
fmull
jp
test
dec
mov
fldl2t
add
repz
push
arpl
cld
mov
testl
shlb
push
cld
xor
mov
push
push
jns
mov
pop
ss
faddl
adc
jmp
ss
outsl
jl
inc
sbb
es
and
jle
es
or
cli
add
adc
and
scas
shl
fmull
or
int3
aam
jno
adc
sub
movb
movsl
pop
add
movsl
cmp
lea
pop
int3
xor
scas
xchg
dec
sub
stc
push
lret
dec
hlt
inc
push
repz
data16
bound
aam
cltd
out
sub
ret
test
sbb
mov
test
imull
addr16
xchg
cmp
js
fldenv
xorb
pop
ja
xor
and
dec
loop
mov
mov
fiadds
lret
loope
movsl
dec
xor
movsl
movsl
arpl
nop
test
aas
repz
inc
pop
outsl
cmc
mov
or
xor
adc
adc
gs
inc
fdivrl
in
cmp
call
add
push
push
adc
mov
ljmp
xor
out
pop
out
add
push
inc
jo
fiadds
scas
adc
pop
mov
mov
arpl
sbb
fstpt
push
in
or
sbb
aad
jae
jae
in
add
xor
in
jno
imulb
fadd
mov
xchg
lret
push
pop
loop
mov
fldt
lods
aas
mov
xor
or
outsb
repz
stc
cs
inc
lds
adc
push
pop
icebp
sbb
stos
jb
push
insb
jnp
xchg
mov
push
adc
pop
dec
mov
inc
jb
sbb
pushl
and
xchg
mov
cmp
fwait
mov
popf
pusha
pop
push
je
dec
hlt
mov
mov
mov
outsl
jg
adc
loop
mov
lds
xchg
ljmp
lahf
lcall
mov
cmp
cwtl
dec
scas
dec
mov
cs
outsl
xlat
push
lahf
inc
pop
jae
pop
fldenv
fildl
ret
dec
fdivrl
popa
pop
mov
mov
cmc
dec
push
fsubrs
js
mov
add
test
fiadds
mov
cmpsb
jecxz
jbe
popf
aas
jnp
push
out
aaa
add
mov
lods
sub
lcall
js
and
cmp
inc
dec
pop
mov
testb
lea
ror
arpl
in
sbb
cmp
popf
pop
jecxz
lahf
mov
add
leave
jb
int3
loopne
lret
sub
mov
push
or
bnd
test
mov
fwait
daa
sub
xchg
sub
mov
xchg
xchg
leave
sbb
lahf
push
out
push
cmp
cmpsb
into
mov
push
imul
ud2
pop
imul
lret
add
mov
repz
pop
inc
sbb
movsb
mov
add
dec
jmp
sbb
jmp
aam
in
fisttpl
es
cli
ud1
adc
aam
cmp
fildl
xor
add
dec
jns
popf
mov
pop
movsb
cmpsb
mov
ret
pushf
imul
push
lret
xchg
int
outsb
jecxz
arpl
and
push
sbbb
xor
fdivr
xchg
add
sub
test
test
mov
loope
test
push
sub
inc
in
xor
call
stos
cmpl
outsb
xor
mov
ret
xchg
fildl
ja
mov
jno
sub
inc
fcomps
and
or
loope
cli
push
ds
cs
xchg
dec
add
aas
mov
adc
and
lods
jo
je
push
xor
jmp
or
enter
or
popa
pop
cli
xchg
out
and
xchg
and
sti
xor
shlb
fildl
dec
cld
push
cmp
add
dec
sbb
stos
out
inc
sub
pop
sti
cmc
mov
pop
push
sub
or
cmp
cmpsl
pop
inc
outsb
sti
scas
pop
jg
push
and
jmp
cmp
jp
fbld
test
sbbb
nop
pop
fistpll
xchg
outsb
dec
xor
dec
or
adc
inc
lahf
andb
int
or
icebp
adc
dec
clc
dec
ds
jbe
xor
cld
mov
cmp
or
push
fdiv
dec
adc
and
jl
jecxz
sbb
pop
int3
cmp
aas
xchg
out
cmpb
push
movsb
mov
inc
mov
popa
push
shrb
loop
popa
mov
das
jae
adc
stc
or
and
push
notb
mov
repnz
pop
js
cmc
adc
or
xor
insb
add
cmc
adc
mov
clc
shlb
jl
icebp
jg
loopne
cmp
aad
jb
sbb
and
and
es
jb
lock
cmp
dec
movsl
jne
jle
ror
xor
sti
push
mov
mov
add
icebp
insb
mov
imul
outsl
icebp
arpl
iret
in
push
stc
push
andnps
inc
adc
sub
out
and
movb
lods
out
xlat
test
dec
out
push
and
push
insl
mov
dec
rorl
sub
adc
push
sbb
andb
out
fildl
fcomps
mov
xlat
pop
stos
adc
cs
adc
in
addr16
sub
jno
or
inc
push
xor
lods
and
mov
xchg
or
mov
or
arpl
sub
test
sub
imul
jmp
lock
aas
sub
iret
mov
das
call
xor
push
ss
scas
xor
sahf
mov
sbb
inc
aas
adc
inc
fxch
add
add
lret
pusha
cltd
xor
xchg
mov
mov
pop
or
rorl
sub
and
mov
cmp
sbb
aam
cmp
inc
cli
call
aam
ja
insl
out
insl
fs
jae
clc
cli
push
inc
clc
insb
sbb
lods
inc
andb
ss
jno
xor
lock
xorb
popl
mov
xor
hlt
adc
jno
shll
mov
push
fstl
push
cmp
scas
lea
stos
fmul
mov
icebp
test
inc
ret
adc
add
sbb
jnp
lds
lret
mov
pop
pop
mov
icebp
lret
std
std
imul
jg
add
cli
pop
aaa
es
popf
aam
adc
lret
mov
mov
add
xlat
jne
ds
dec
insl
xchg
lds
and
xor
push
push
add
movl
insl
mov
or
add
sub
mov
xlat
test
xor
lret
cmp
add
mov
fistl
lock
les
stos
iret
stos
ja
clc
inc
aad
adc
ffree
sub
jp
insl
push
dec
or
push
inc
xor
aaa
dec
pop
pop
xor
and
loope
cld
mov
lret
lret
sarl
inc
lahf
pop
rclb
cmp
add
mov
adc
jl
jle
aam
lret
testb
hlt
xchg
ss
pop
mov
cmp
cmpsl
add
mov
fnstenv
sbb
sbb
mov
jno
lods
push
or
nop
pop
test
cmpsb
aas
sub
imul
lahf
push
push
sahf
jg
bound
cmovb
cmp
imul
push
pop
imul
fwait
hlt
xor
mov
mov
push
dec
sub
fnstenv
push
lods
pop
and
outsb
dec
lods
shrb
fdivl
mov
loop
pop
cmp
sbb
cmp
dec
lcall
jl
mov
dec
sahf
mov
fidivs
outsb
cmp
cs
imulb
lahf
loope
mov
pusha
js
arpl
pushf
xor
pop
loop
jb
xor
sbb
pop
lret
sbbl
push
dec
push
xor
pop
lods
lds
and
mov
adc
lock
data16
xor
faddl
jp
mov
fwait
cmp
movsb
in
mov
xchg
mov
das
aam
mov
std
xchg
inc
ljmp
cmc
push
call
sub
sub
pop
je
sub
test
je
nop
pop
xchg
js
mov
adc
mov
sub
push
add
jp
imul
pop
mov
mov
aaa
addl
and
daa
dec
pop
jae
lods
xor
pop
dec
xchg
cwtl
test
insl
jle
movsl
mov
push
cwtl
push
fldenv
ja,pn
cmp
lcall
dec
cs
dec
mov
jns
stc
pusha
inc
arpl
jle
fs
add
push
lahf
clc
popa
cli
test
mov
xchg
test
sbb
dec
in
jne
adc
and
daa
cwtl
clc
js
mov
adc
xchg
ret
sub
inc
test
xor
fcoml
sbb
leave
dec
or
fstpl
or
je
ljmp
sti
sar
pushf
and
lods
and
and
out
jmp
push
pusha
sbb
cld
xor
cmp
mov
adc
daa
movsb
sbb
sbb
lock
inc
mov
divl
mov
jno
jecxz
add
fwait
imul
rcr
inc
push
pand
jae
add
jno
out
pop
out
ljmp
push
sub
xor
xchg
out
sbb
call
jl
mov
xor
fimull
mov
bound
sub
test
pop
adc
jnp
jno
cmp
adc
sbb
cltd
push
sahf
lcall
pop
out
clc
dec
adc
in
pop
jl
and
inc
push
and
add
loop
mov
into
fdivrl
or
pop
pop
stos
lock
fdivrs
cmc
mov
fstl
and
shl
stc
je
lcall
jle
xchg
mov
adc
repnz
add
or
and
xorl
or
sub
daa
bound
jbe
jl
jbe
ret
shl
pop
movsb
xor
mov
outsb
mov
into
cmc
test
dec
push
jo
scas
loop
into
lret
ljmp
ret
fucomp
cltd
or
sbb
push
and
repz
vmovshdup
mov
movsb
or
jnp
cli
xchg
out
fisttpl
scas
push
rcrl
sbb
mov
mov
and
scas
push
add
wbinvd
lret
lods
cs
clc
scas
shlb
repz
jmp
mov
jp
cli
mov
lods
lock
cld
shlb
inc
xor
dec
cld
aaa
notb
jo
dec
fsub
add
mov
lahf
movsb
add
adc
mov
sti
add
jle
jmp
sub
cltd
and
inc
mov
cmp
data16
dec
or
pshufw
sub
xor
shrb
aaa
mov
mov
pop
loopne
jnp
inc
dec
dec
sti
push
setb
cmp
adc
cmpsl
add
push
test
imul
addl
cmp
cmp
loopne
adc
imul
rcr
rcrl
adc
xorl
test
pop
xchg
stos
aad
rcll
push
pop
adc
or
mov
push
xor
fmul
out
dec
mov
and
cli
cmp
xor
mov
mov
inc
add
push
int
cmc
jns
sbb
mov
orb
addb
inc
jmp
jge
lret
dec
xchg
inc
mov
or
movsb
mov
lcall
fwait
lret
mov
lahf
and
stos
jge
cmp
pop
jb
arpl
sbbl
lcall
pusha
stos
jp
mov
das
pop
call
clc
add
insl
andb
in
mov
jmp
mov
je
lcall
outsb
cmp
fsubs
push
pop
mov
sub
cltd
test
push
jbe
int
stos
popf
mov
xchg
sbb
or
insl
movsb
fimuls
cmp
sbb
jae
je
je
repz
inc
scas
cmp
dec
xor
push
mov
fs
fdivs
shr
outsl
fwait
jecxz
mov
inc
and
mov
add
sarb
pop
mov
lahf
sti
cmc
cld
sub
mov
dec
push
imul
push
mov
cmpsl
rorl
xor
cmpsl
dec
jno
mov
push
fwait
push
jnp
adc
pop
push
stos
loope
cld
or
imul
push
mov
push
shlb
lahf
or
sti
adc
data16
push
sbb
hlt
shrl
xchg
movsl
dec
push
mov
repz
jl
pop
dec
ja
push
popa
lcall
fbld
mov
sbb
and
and
sbb
push
push
or
mov
dec
or
mov
inc
push
or
daa
test
jnp
mov
nop
mov
ret
cwtl
add
cmpsb
sub
fs
dec
push
subl
out
inc
cmpsl
imul
push
lods
xchg
mov
mov
cmc
mov
dec
into
mov
push
xor
gs
lods
and
leave
test
jg
inc
add
out
push
jae
std
popf
int
dec
gs
or
mov
sub
sub
shl
subb
out
add
push
pop
pop
add
fsub
inc
mov
xor
movzbl
sahf
fldenv
xchg
sub
adc
sbb
imul
popl
and
mov
ljmp
pop
xchg
mov
js
xor
cmp
fcmovnu
nop
pop
popa
dec
roll
pop
jne
mov
push
inc
xchg
or
ja
jae
jns
sub
fnstsw
xor
mov
dec
pop
dec
mov
xchg
dec
xorl
in
sarb
xlat
mov
mov
mov
notl
dec
xor
dec
fs
stos
adc
cmp
ja
push
sbb
mov
mov
add
fiadds
dec
push
lret
aas
mov
es
int
pop
mov
idivb
loopne
cmpb
mov
xchg
fisubrs
in
adc
idivl
pop
sti
sub
ret
xor
out
mov
pop
inc
dec
lods
stc
jp
jecxz
mov
je
cld
push
in
dec
movsl
lods
adc
dec
fwait
add
pop
mov
andl
lods
mov
sbb
push
std
sbb
jo
mov
lret
lret
fidivs
push
out
push
inc
fisubrs
rclb
dec
push
lahf
or
mov
mov
add
cmp
inc
jb
add
push
adc
cs
xchg
loope
jmp
pop
insl
xchg
and
loop
stos
mov
ljmp
stos
mov
std
add
aad
lret
rcrl
adc
sbb
adc
lcall
xchg
test
xor
lcall
mov
sti
adc
dec
xlat
popf
ljmp
scas
hlt
xchg
fldcw
jmp
xor
cmp
pushf
jne
or
xor
inc
mov
out
movsl
repz
repnz
adc
ljmp
pop
testl
int
aas
out
idivb
sahf
aaa
clc
shlb
lret
rcrb
xchg
mov
xor
mov
xor
mov
pop
adc
lahf
ret
cmp
mov
xlat
outsb
test
inc
xchg
xor
loope
push
mov
push
iret
jno
jp
rcr
sub
jge
in
loopne
cld
fnclex
rol
movsl
int3
orl
xchg
sub
add
rclb
or
test
scas
or
ret
jo
popa
adc
jle
out
and
jl
cmpsl
xchg
ret
jmp
lock
or
outsb
jge
not
mov
cld
cwtl
loopne
insb
xor
xor
int3
xlat
inc
roll
hlt
mov
sub
aam
mov
mov
les
stc
addr16
cltd
push
not
cltd
push
mov
jns
out
xor
mov
cld
fdivrs
xor
test
xchg
arpl
xor
xchg
cmpsl
andl
mov
xlat
and
pop
rorl
sub
push
jle
fisttps
repz
bound
push
out
stos
push
or
mov
addr16
and
and
mov
mov
inc
fisttps
jmp
jmp
add
or
das
pop
fstps
xor
sub
inc
aas
test
xlat
cmovo
decl
sarb
mov
ss
mov
int
add
pop
xor
pushf
sub
adc
inc
cld
out
loope
shlb
add
imul
jmp
fildl
shll
rorb
dec
pusha
out
stc
pop
cwtl
adc
lods
rcr
inc
jb
mov
mov
mov
mov
dec
push
push
xorl
jg
lock
das
jmp
or
arpl
push
test
adc
adc
jno
sahf
inc
mov
dec
ds
lock
test
dec
inc
sbb
mov
and
xor
dec
jle
jno
test
dec
aad
call
movsl
push
pop
push
rcrb
mov
mov
lock
or
sti
dec
das
inc
mov
js
xchg
adc
and
pop
pop
xor
gs
enter
nop
data16
out
mov
cmp
shll
xor
mov
cmp
fbld
test
jl
clc
test
adc
pop
imul
fldt
dec
outsb
outsl
sub
out
stos
dec
pop
shrb
jae
dec
bound
jne
pusha
dec
jp
lcall
adc
sbb
xchg
push
in
dec
sbb
jle
push
cltd
cmp
mov
push
test
mov
dec
sub
pop
das
sbb
ret
jp
aad
sbb
adc
leave
int
add
push
in
push
loop
xlat
cmp
imul
pop
std
movsl
stos
sub
adc
pop
call
cmp
roll
dec
ljmp
stc
ret
and
xchg
lock
dec
lods
fidivrs
insb
push
xor
shr
jno
test
cs
enter
cmpsl
cmp
sub
and
ficomps
cmp
mov
add
in
add
lock
int3
adc
jno
ja
push
and
xchg
xor
sub
lds
dec
fldenv
xor
cmp
xchg
or
push
jecxz
jle
cmp
add
push
test
xchg
sub
lods
or
nop
in
arpl
repnz
roll
andb
sbb
lea
fsubrl
push
out
xchg
add
stos
fnsave
pop
in
stc
sub
push
push
jb
sbb
iret
and
fstpl
mov
out
jmp
mov
jno
mov
cmp
push
xchg
cmp
stos
popf
in
xorb
popf
std
lcall
lret
xchg
xchg
int
or
pusha
inc
push
cmp
inc
push
cmp
pushl
xchg
sbb
mov
cmp
in
mov
and
int3
xor
iret
push
lods
dec
fadds
sub
cli
adc
in
std
jb
or
xchg
int
sbb
pop
and
jb
mov
imul
testl
mov
inc
jno
test
and
pop
insl
push
xchg
inc
xor
mov
jo
push
mov
mov
shlb
pop
pusha
or
std
scas
ljmp
cmp
mov
cmp
outsb
test
sbb
mov
add
fldcw
fistpl
xor
pop
popa
or
xchg
and
enter
dec
movsb
adc
mov
pushf
xchg
mov
pop
add
cmp
mov
fistps
jp
popa
dec
xlat
jbe
sbb
lcall
in
mov
stos
jnp
sub
fildl
inc
mov
push
out
out
push
pop
repnz
jae
lahf
mov
lahf
in
ja
dec
cmp
push
je
or
push
push
adc
cmc
lods
or
aaa
mov
ret
xor
gs
pop
int3
aas
je
loop
mov
xor
je
lret
jl
adc
iret
or
mov
xchg
dec
call
inc
pop
or
sti
mov
add
mov
loopne
pop
adc
arpl
clc
xchg
cmp
pop
push
sbb
in
pop
inc
mov
xchg
fnsetpm(287
loope
inc
gs
ja
and
push
mov
movsl
mov
std
shll
dec
sbb
bnd
jbe
into
cmp
cmp
dec
test
adc
cmp
or
icebp
pop
mov
data16
fistps
fwait
nop
xor
je
out
cmp
cmpsb
ret
xchg
push
xchg
xor
mov
dec
add
xor
adc
icebp
adc
stos
int3
and
mov
and
leave
jmp
jecxz
xchg
out
or
out
clc
test
sub
xlat
mov
mov
hlt
mov
sub
clc
jnp
aad
popa
mov
sahf
stos
xor
in
dec
lods
xchg
adc
mov
adc
pop
xor
lods
fnstcw
aad
mov
insb
add
mov
pop
movsw
imul
fwait
and
xor
clc
js
dec
jmp
nop
movsl
je
in
scas
xchg
icebp
cmpsb
push
adc
push
daa
stc
ja
leave
loope
pop
ret
fldcw
fwait
das
inc
sub
jl
mov
and
push
std
iret
push
fbstp
cmp
sbb
andb
adc
scas
inc
and
lock
lret
loopne
ror
xor
pop
cmp
movsb
mov
lahf
fidivl
dec
push
jmp
les
or
shll
pop
call
or
hlt
icebp
push
fdivl
dec
push
or
ljmp
mov
cmpsl
xchg
into
or
pop
data16
jg
test
cli
jge
sub
push
mov
cmpsl
mov
popa
and
js
cmp
and
add
mov
cmpl
mov
outsl
adc
insb
aad
ss
aas
dec
lret
bound
and
cmp
dec
jle
sub
sahf
add
add
test
and
les
adc
cmpsb
pop
add
inc
daa
imul
xchg
push
outsl
sub
loopne
pop
mov
jb
test
movsl
cltd
aam
movsl
sub
dec
out
dec
idiv
sti
inc
cmpsb
mov
rorb
sub
fcompl
fistl
push
push
push
adc
mov
push
cmp
mov
mov
cmp
xchg
or
mov
inc
daa
cmp
mov
pop
xchg
inc
test
jl
testl
aam
std
xor
sbb
or
mov
mov
pop
mov
cmp
adc
mov
test
xor
movsl
shlb
out
jg
mov
fwait
ja
cmp
mov
lret
xchg
pop
jbe
xchg
pusha
inc
pop
xor
ficompl
mov
iret
cmp
jne
sbb
mov
fsubrs
in
fwait
bswap
ljmp
loop
repnz
lret
dec
lret
fmull
insl
icebp
or
dec
jnp
add
add
loop
pop
arpl
pop
mov
test
mov
enter
and
xchg
test
sbb
jb
push
mov
lea
jne
inc
lret
daa
addr16
dec
lods
ds
lods
ljmp
push
cli
movsb
ljmp
ret
inc
mov
dec
cltd
insl
iret
push
rclb
push
pop
fcomi
ror
jmp
dec
mov
inc
jae
cmp
test
clc
cmp
mov
mov
cld
ret
aam
mov
stos
push
jp
stos
push
push
mov
adc
fnstcw
lods
jnp
mov
getsec
and
mov
mov
imul
mov
ret
pushf
stos
daa
es
or
lods
push
pop
push
mov
scas
xchg
lahf
scas
push
ja
mov
stos
mov
cwtl
pop
pushf
xchg
out
jmp
push
cwtl
mov
cmpsb
fbld
hlt
enter
push
jge
aas
dec
sub
xchg
loop
pop
xchg
mov
outsl
mov
or
add
movsl
xor
lahf
aaa
xor
xor
pop
sbb
xchg
cli
scas
adc
imul
cmpsl
shrl
cli
xchg
rcrb
sub
sbbl
mov
aaa
fists
fldl
mov
dec
push
orb
mov
je
scas
mov
jns
add
in
jb
leave
xchg
or
fsubrp
je
cmp
mull
and
mov
sub
int3
cli
xchg
iret
cmp
push
inc
and
pop
imul
sahf
or
data16
sbb
loop
fnstenv
fdivrs
in
push
inc
mov
loopne
std
jle
sbb
sub
loopne
cmc
sahf
pop
in
sbb
stos
xchg
cmp
fs
inc
jns
int
adc
mov
sti
jnp
loopne
std
inc
test
fcomps
push
push
into
insl
flds
data16
inc
cmpb
and
mov
ficoml
or
nop
xchg
pushf
lcall
dec
add
lahf
dec
pop
fsqrt
push
into
add
mov
movsb
adc
mov
std
cmpsl
push
cmp
dec
cld
pusha
pop
repz
push
adc
adc
add
push
or
outsb
push
mov
push
or
add
xor
fdivl
outsl
sub
aas
ss
shl
scas
mov
out
fstps
nop
lret
mov
scas
lods
sahf
push
outsl
sti
jno
push
les
rolb
add
sub
inc
test
and
adc
jmp
inc
sub
adc
data16
imul
mov
out
scas
cld
leave
in
adc
and
sub
xor
cwtl
xchg
rclb
clc
push
pop
test
xor
xlat
popa
jp
lods
sbb
aad
out
push
mov
jmp
incb
pop
mov
xchg
clc
cmpsl
dec
push
add
je
add
pop
push
fistps
jl
pop
pushf
lahf
mov
pop
jnp
psubsw
add
push
pusha
fs
cmpsl
sbb
cwtl
test
and
jbe
in
mov
add
cmp
inc
imul
push
xchg
xchg
lret
mov
popf
movsl
jmp
mov
and
ret
divl
and
inc
icebp
mov
mov
inc
cmc
cmp
lcall
sbb
outsl
mov
jge
orl
mov
xacquire
insb
and
daa
pop
dec
aaa
jo
sub
dec
repnz
inc
dec
mov
sar
push
mov
aaa
and
lret
test
cmp
or
xchg
arpl
jne
icebp
jne
rolb
ss
loope
and
orl
or
jno
sbbl
shr
sarb
jns
lock
ror
jnp
les
xchg
es
fsub
inc
outsl
mov
std
push
pop
addb
xchg
outsl
push
sbbb
mov
adc
shlb
enter
stos
mov
jns
insb
jae
clc
inc
rcrl
ret
mov
push
test
movsl
imull
jnp
jl
jae
ja
xor
test
hlt
and
mov
test
adc
inc
xchg
push
shrd
cmp
pop
pop
lds
dec
jp
pop
jecxz
add
jo
shlb
pop
fistps
push
or
or
push
dec
mov
dec
dec
jbe
mov
mov
xor
test
inc
jno
inc
js
adc
and
std
int3
movsb
mov
and
push
mov
or
xchg
lcall
lcall
pop
sbb
pop
sbb
enter
shlb
and
shl
cmp
sbb
push
pop
cmp
ret
xor
flds
movsb
fwait
lock
push
addb
xchg
into
inc
jns
push
lgs
pop
pop
test
gs
push
stos
xchg
rorl
sbbl
cltd
jl
cli
mov
dec
js
sbb
inc
scas
outsb
mov
push
fsub
lret
xchg
test
aam
push
test
mov
xchg
push
test
add
repnz
lea
enter
daa
icebp
add
cmp
mov
out
jbe
cli
pop
sub
shr
hlt
les
es
pop
jnp
lcall
aas
pusha
sbb
stc
cmp
cmp
xor
push
in
out
out
or
pop
clc
adc
adc
ds
inc
ja
lods
pop
mov
ja
ja
jae
cmp
adc
shrb
xlat
mov
ss
add
pusha
scas
dec
adc
test
aas
jne
mov
mov
lds
repnz
das
stc
mov
cmp
inc
add
mov
lret
sbb
adc
clc
out
sbb
push
icebp
push
jmp
push
cmpl
in
inc
pop
clc
add
push
subl
nop
dec
sub
inc
add
push
js
call
mov
std
sti
stos
xchg
or
cmp
lret
lea
rclb
add
mov
sbb
mov
les
sbb
pop
jno
out
bound
std
dec
push
adc
pop
scas
insb
aas
dec
dec
mov
ficompl
sub
fistpl
mov
outsl
adc
dec
jnp
cmp
xor
lahf
jnp
leave
sarl
pusha
add
roll
xchg
fistps
mulb
sub
adc
mov
mov
pop
pop
das
jno
jne
sbb
gs
das
rcrb
mov
jb
ljmp
push
xchg
fdivr
inc
hlt
mov
fsts
out
inc
pop
dec
push
cmpsl
cmp
popa
jge
mov
dec
inc
js
rcr
jp
into
mov
ret
pop
add
pusha
fildll
andl
cs
adc
and
jmp
aas
push
mov
popa
add
xlat
lret
fsubr
sub
cwtl
lahf
cltd
jp
add
cmp
add
push
cld
and
int
scas
push
xchg
es
daa
enter
pop
and
jnp
ret
roll
mov
inc
ds
xchg
js
mov
sbb
in
sub
test
lret
mov
adc
sti
lret
jp
xchg
sbb
movsb
xchg
scas
lods
mov
movsl
arpl
sbb
jnp
push
mov
xor
jmp
push
in
dec
pop
adc
cmpsb
ret
fsubp
fstl
stc
jnp
cld
push
lea
pop
sub
jmp
in
out
or
inc
stos
test
inc
loopne
cltd
xor
mov
cmpsb
jns
jp
std
icebp
lock
mov
outsl
add
stos
scas
xor
ljmp
int
and
dec
in
add
inc
push
test
out
fidivs
or
inc
push
mov
sbb
inc
fwait
sbb
adc
inc
sbb
add
cmp
adc
repz
xlat
andl
jb
and
mov
xchg
cmpsl
jae
adc
addr16
adc
pop
fisttpll
iret
test
gs
sti
mov
into
lret
int3
pop
loopne
and
pop
adc
xor
inc
fisubl
mov
add
pop
or
repnz
mov
aad
cmpsl
sahf
push
push
mov
cmpsl
sbb
outsb
stos
adc
mov
inc
loope
sbb
sub
sub
call
or
repnz
popf
pop
inc
xchg
aad
push
es
push
pop
or
fisubl
inc
mov
mul
in
cltd
aas
rcll
pop
leave
xchg
jnp
test
pushf
test
cs
hlt
inc
sbb
mov
cmpsl
pop
daa
cmpsl
loopne
xor
cltd
int
stc
pop
ss
push
push
pop
gs
adc
cltd
cltd
inc
nop
into
movsb
fwait
push
push
xchg
mov
sub
lock
and
popf
into
lahf
pop
xchg
or
arpl
outsb
cwtl
or
sbbl
cmc
int
mov
xor
shll
mov
out
aaa
fadd
sar
imul
and
clc
push
inc
ret
inc
arpl
pop
insl
fistpll
sbb
mov
adc
dec
dec
mov
outsb
hlt
mov
frstor
les
ljmp
out
rdpmc
dec
mov
icebp
xchg
shll
push
gs
ret
mov
popf
ss
aad
adc
mov
cmpb
and
inc
ljmp
insl
jp
or
int3
loop
jnp
cltd
push
or
mov
in
rcl
lods
xorl
mov
sub
movsb
adc
clc
xor
pop
pop
test
mov
sbb
cmc
aad
aas
mov
jmp
imul
jmp
into
rorl
xchg
cmp
xchg
xchg
mov
lahf
inc
mov
scas
mov
stos
popf
xor
repz
push
test
inc
xor
fnstsw
xchg
and
je
mov
fsubl
cmp
lods
or
inc
mov
nop
cmc
pop
jecxz
in
outsb
dec
jmp
jmp
push
scas
jo
movsl
inc
scas
adc
jmp
inc
cmp
cmpsl
ja
ljmp
arpl
mov
add
divl
sbb
mov
jge
int
out
pop
pop
gs
ficoms
scas
cmp
and
or
adc
pop
sbb
jb
mov
cmp
adc
stc
pop
arpl
fisttpll
adc
mov
data16
pop
lret
xchg
add
test
inc
push
adc
push
lds
sbb
add
cmp
mov
ss
fldl
in
cmp
das
add
movsl
hlt
pusha
insb
mov
andb
and
sub
cmp
push
jns
int
int3
jb
dec
daa
jno
aam
adc
dec
jns
fcmovnb
lea
cmp
cmp
sahf
mov
mov
ja
mov
mov
push
inc
pop
movsl
lcall
or
add
jle
mov
xchg
int3
mov
push
je
sub
fdivs
test
lds
ficoml
or
sub
sbb
lcall
popa
mov
jecxz
mov
jb
mov
pop
test
push
adc
outsl
lods
in
adc
lock
enter
sbb
out
jne
test
xchg
sub
pop
shl
dec
mov
cmp
addb
and
inc
pop
int
mov
inc
mov
ja
cltd
sbb
push
jno
jmp
mov
aaa
xlat
xor
insl
or
adcb
std
loope
mov
add
repz
or
out
aaa
mov
imul
adc
pop
inc
into
and
jg
mov
xchg
das
outsl
sbb
push
inc
mov
popa
outsl
sbb
jno
xchg
mov
mov
pushf
mov
js
stc
movsl
cs
test
xchg
dec
in
and
sbb
inc
mov
dec
std
aaa
out
jecxz
pop
mov
sub
adc
imul
gs
adc
adc
push
fdivrs
push
or
or
out
inc
mov
push
stos
bnd
fdiv
mov
outsl
add
aas
sbb
int3
pop
icebp
dec
mov
lds
dec
std
sub
inc
or
cld
sub
push
lea
arpl
dec
fistpl
test
mov
int3
ja
icebp
loopne
popl
stos
and
cmp
and
mov
fsubp
mov
clc
cmp
or
pop
inc
push
hlt
loopne,pn
leave
mov
xchg
xor
xor
and
je
or
jb
testl
fbld
shrl
lcall
jb
xor
lret
insb
dec
sarl
dec
add
daa
imul
pusha
mov
stos
and
loope
jle
jl
pop
ds
imul
adc
clc
mov
or
popf
addr16
aam
ret
sbb
sub
mov
mov
leave
pushf
mov
leave
or
jno
aas
adc
push
das
das
ret
lret
sbb
scas
repz
dec
xchg
jnp
dec
sbb
dec
xor
cmp
out
mov
add
ljmp
mov
push
jmp
pop
lcall
ljmp
inc
fidivrs
imul
pop
sti
sub
mov
jle
mov
and
leave
jg
pop
inc
and
jb
dec
inc
popf
in
mov
insl
push
or
cltd
test
push
out
mov
out
fincstp
sarl
loopne
outsb
orb
sbb
mov
js
cltd
addl
push
into
push
or
and
sub
xor
f2xm1
repnz
xchg
ds
jecxz
fsubrl
mov
out
pop
addb
mov
adc
ss
cmpsl
repz
mov
cmpsb
test
cmpsl
and
add
dec
push
sub
cwtl
push
xchg
fcomi
shlb
mov
push
dec
outsl
sahf
jp
inc
push
in
sahf
sbb
mov
sbb
sub
xchg
mov
pop
popa
gs
arpl
in
adc
stos
das
insl
dec
dec
push
dec
scas
sahf
jb
dec
push
xor
mov
mov
adc
inc
jp
das
mov
lea
sahf
pop
sub
fs
add
sbb
aam
lods
push
mov
sub
addr16
ds
adc
mov
insb
push
pop
mov
xor
jbe
pop
and
leave
mov
insb
add
sub
pop
dec
pop
xor
push
and
fwait
clc
andb
dec
popf
icebp
jbe
outsl
ds
xor
loopne
je
stos
ljmp
rorb
pop
es
insb
dec
jecxz
xchg
inc
pushf
andb
mov
push
dec
jb
lret
dec
out
jnp
fsubr
das
jns
xor
push
fistpll
iret
loop
ljmp
adc
or
jmp
decb
jae
in
cs
cmpsb
sub
scas
or
and
movsb
fwait
inc
sbb
pop
mov
bound
ds
and
cmp
loopne
xchg
inc
lahf
pop
push
mov
leave
andl
popa
fcomps
mov
stc
loopne
mov
mov
dec
pushf
sbb
fwait
cwtl
sbb
mov
cmp
outsl
stos
xchg
jmp
dec
jne
lock
jg
mov
stc
dec
pusha
sub
mov
push
and
rcr
fnsave
adc
pop
adc
or
pop
mov
loop
lret
aas
scas
xor
mov
xchg
hlt
aad
dec
sbb
sub
enter
data16
and
and
mov
push
ljmp
ret
lahf
scas
and
or
or
xor
pushf
xchg
jae
fisttpll
cmp
mov
in
hlt
sub
pop
jmp
ss
mov
int3
into
xchg
outsl
addr16
mov
dec
mov
or
and
not
je
push
ljmp
mov
movsl
push
jns
mov
test
scas
cmp
popf
cmp
inc
fwait
cmp
mov
jb
and
sbb
ja
gs
nop
mov
in
push
shrl
cmp
and
adc
adc
addb
jecxz
es
in
clc
pop
mov
in
and
mov
mov
mov
ret
inc
or
pop
in
sbb
dec
sub
xchg
push
and
xchg
sbb
rcll
pop
or
xchg
cld
ss
rorl
cmp
adc
leave
out
cltd
cltd
push
xchg
adc
clc
ljmp
cld
cld
mov
aad
popa
pop
cmc
ja
mov
mov
mov
clc
mov
idivb
or
add
jb
aaa
ja
sti
test
cld
sub
cltd
ja
mov
mov
aaa
daa
cmpsb
lcall
sub
test
loop
jno
jmp
mov
clc
xor
xlat
jmp
push
xchg
jns
add
aam
adc
std
adc
sahf
out
adcb
push
cmc
push
inc
sarb
push
mov
fwait
in
fwait
mov
sarl
cmp
pop
pop
mov
sbb
mov
notl
mov
pop
sbb
icebp
jns
xor
jae
jb
idiv
pushf
inc
das
xlat
jl
stos
sar
jno
mov
mov
movsl
xor
xchg
sbb
sbb
push
pop
cmp
js
jmp
lea
pop
sub
ljmp
xchg
sahf
out
imul
mov
out
sbb
mov
ret
push
sbb
je
add
mov
sub
in
scas
mov
mov
cmc
push
pmaxub
adc
mov
pop
inc
dec
int3
jae
lods
lret
inc
inc
add
bound
pusha
mov
cli
clc
roll
mov
leave
jg
lds
lret
cmp
test
dec
xchg
pop
xchg
outsb
js
mov
fidivs
mov
mov
adc
pop
pusha
jb
push
insl
sub
aad
sub
imul
dec
sub
es
lar
or
call
mov
push
rorb
or
mov
push
aas
cmp
push
jae
lods
pop
cltd
std
mov
pop
mov
pop
test
mov
loope
inc
mov
dec
mov
lods
lock
xlat
dec
dec
iret
rcrb
jecxz
popf
nop
pop
mov
clc
pusha
iret
out
jb
pop
add
xchg
mov
insl
sub
push
mov
jge,pt
and
mov
xchg
inc
stos
out
mov
lret
fwait
cmpsb
and
adc
loopne
jnp
out
add
js
sarb
pop
dec
jle
sub
inc
xchg
mov
mov
fnstsw
adc
rcr
dec
pop
mov
mov
ret
mov
xchg
push
jle
loopne
pop
nop
cmpsl
data16
sbb
dec
adc
jle
mov
sti
cltd
mov
and
sub
push
pop
mov
icebp
je
out
push
insl
pop
hlt
sub
pop
inc
pop
insb
je
inc
pop
aad
imul
movsb
aad
pushf
pop
add
imul
jge
fsubrs
jne
cmp
push
test
pop
sbb
js
stos
outsb
mov
pusha
sbb
adc
pop
fistl
icebp
inc
mov
cmpsl
shlb
cli
xlat
sarl
mov
imul
imul
push
pop
iret
or
mov
mov
sahf
cs
cld
repnz
mov
test
mov
lds
push
dec
sub
push
fnstsw
mov
stos
jno
or
push
mov
push
cmp
pop
pop
xor
xor
call
sbb
rcr
cmp
jg
add
mov
pop
inc
push
push
add
xorb
aam
mov
popa
cmp
mov
mov
or
mov
out
sarl
xor
mov
add
dec
inc
jmp
or
jne
jmp
mov
loope
cmpsb
in
jbe
mov
xlat
jge
movsl
mov
jp
clc
pop
into
dec
pop
cmp
loop
icebp
cwtl
add
pop
xor
push
sti
out
pop
mov
aas
fisttpl
aaa
jg
dec
hlt
xchg
add
aas
icebp
aaa
or
or
mov
ds
pop
jbe
pop
in
adc
insl
int3
or
xchg
fsubrs
daa
pxor
in
lds
es
inc
sub
aad
mov
outsl
mov
cmp
mov
das
push
add
lahf
xor
lcall
lret
push
xor
jl
gs
cmp
dec
pop
cltd
insb
popa
rcrl
loopne
mov
lea
ja
mov
mov
mov
mov
sub
push
push
mov
xchg
fidivrs
sub
mov
aaa
cmp
push
fsubrs
das
mov
push
mov
xchg
test
js
adc
fisttpl
dec
add
ljmp
push
flds
enter
outsb
mov
lods
jno
dec
push
into
adc
outsb
sbb
inc
pop
ret
sub
mov
add
sub
pusha
rclb
loope
jnp
ficoms
xor
lods
test
aas
jbe
pushl
inc
dec
dec
ja
enter
testb
mov
out
pop
push
mov
push
aad
cmc
in
ljmp
add
movsl
lahf
scas
pop
add
int3
sub
mov
shlb
cmp
and
out
mov
repz
rcrb
pop
gs
icebp
rcrl
and
add
fs
sub
pop
sbb
insl
pop
dec
pop
adcb
jo
push
fisubs
ds
pop
test
movsl
cmpsb
loopne
inc
outsb
fldcw
add
negb
ljmp
sbbb
and
cmpl
mov
dec
push
and
repnz
es
loopne
mov
cltd
aam
xchg
mov
scas
idiv
and
insb
and
push
sbb
fisubs
data16
add
mov
stc
push
mov
loop
and
cmp
mov
pusha
mov
jecxz
push
nop
jge
clc
mov
insl
and
cli
sub
ds
pop
jno
jbe
sbb
and
lea
xchg
and
dec
ss
mov
fisttpl
lock
in
loopne
gs
xchg
sahf
dec
push
loop
leave
add
roll
loopne
pusha
call
pop
in
cmp
xor
out
pop
push
push
pop
test
xchg
sub
pop
push
push
movsl
mov
leave
pop
sub
cmp
cld
cmp
jns
sub
popf
add
xor
pop
rcr
inc
lahf
das
dec
xchg
je
mov
enter
push
das
addb
daa
mov
addr16
mov
cmc
fwait
xor
xchg
mov
xchg
jmp
les
mov
push
dec
mov
stos
fimuls
cld
and
lods
mov
shrl
cmpb
xchg
cmpsb
int3
gs
push
xchg
jb
xchg
je
in
js
mov
xchg
cld
cmpsl
mov
sahf
test
push
leave
push
fcmovbe
out
mov
pop
int
xor
jge
lret
mov
int
cwtl
mov
mov
xchg
mov
jne
ds
enter
dec
js
outsb
hlt
push
mov
xchg
mov
aaa
cmp
xlat
out
sub
mov
aam
shlb
jno
and
movsl
mov
mov
repnz
jae
or
cmp
nop
jg
xchg
mov
xchg
xchg
pop
adc
es
add
arpl
mov
push
xor
jmp
jne
or
mov
mov
fs
les
adcb
inc
sbb
sub
xor
pusha
sbb
pusha
std
mov
adc
xor
repnz
and
and
or
dec
lock
daa
jno
mov
push
subl
xor
popa
arpl
xchg
pop
sub
mov
mov
sti
push
pop
pop
xor
pop
add
xor
or
int
call
adc
push
icebp
xor
leave
cltd
daa
out
fsubrl
ret
out
les
rcrb
rorl
jns
push
mov
xlat
shl
scas
lahf
orb
mov
inc
push
mov
roll
das
fsts
ljmp
rcrb
mov
outsl
stos
test
lea
in
hlt
inc
cmp
xor
in
sub
dec
ss
pop
inc
cmp
ret
push
adc
in
adc
std
pop
xor
jg
or
or
cmp
or
out
popa
shlb
lahf
add
xor
pop
pop
mov
mov
stc
jl
movsl
arpl
mov
cmc
mov
ja
test
inc
test
mov
sbb
xor
sbb
cld
mov
jae
scas
mov
xor
sbb
mov
add
lods
js
sbb
xor
xor
pop
in
rcr
inc
lahf
jmp
call
repnz
mov
out
xor
fdivl
out
stos
aas
pop
arpl
pusha
pop
pop
mov
lahf
int3
adc
push
lock
pop
rorb
shrb
add
jl
hlt
fdivl
cli
xchg
rolb
mov
test
gs
clc
fstl
test
cs
and
mov
arpl
aam
cmp
mov
adc
mov
dec
push
test
in
inc
and
les
pop
mov
mov
or
lret
pop
push
clc
sub
xchg
mov
and
cli
pop
or
arpl
out
jmp
aam
push
ror
je
shrl
adc
sbb
ljmp
std
lods
sub
inc
xor
fisubrs
push
cmpsb
stc
sbb
dec
shrl
into
adc
push
mov
adc
dec
popf
cli
mov
in
dec
cmp
inc
cli
jnp
shll
push
push
xlat
in
sbb
add
lcall
jge
xchg
fildl
arpl
sub
inc
stc
adcb
mov
jb
iret
jae
imul
outsb
or
cmp
pop
les
pop
ja
jle
mov
fs
push
mov
xchg
lds
xchg
test
into
out
iret
inc
pushf
inc
jmp
pop
ja
sbb
pop
push
lsl
test
andb
pop
push
xchg
scas
negb
stos
lret
cmpsl
stc
repnz
pop
push
out
std
mov
dec
cmp
test
inc
xchg
js
shll
mov
ret
mov
mulb
scas
mov
lods
lcall
fistpl
and
outsl
mov
or
fisubrs
or
lahf
mov
outsb
cmpsl
fdecstp
push
in
inc
push
add
notb
xchg
push
mov
xchg
jbe
cmp
sbb
shrl
outsl
gs
mov
push
imul
xchg
cmp
xchg
stos
pop
or
sbb
std
dec
lret
mov
mov
push
push
and
dec
dec
xchg
xchg
jae
test
push
and
push
subb
nop
test
mov
dec
aaa
xor
or
es
mov
add
add
daa
and
pop
test
xchg
sarl
test
stos
in
and
jb
xor
out
je
cmp
pop
inc
out
mov
in
sti
xor
cmpb
out
push
lret
cmp
mov
in
or
jb
xlat
inc
mov
and
xor
outsb
cmp
call
fs
xchg
inc
inc
in
imul
js
addb
lods
or
mov
adc
js
fisttpll
dec
stos
jne
arpl
push
jae
clc
cltd
movsl
ja
xchg
roll
adc
shlb
pop
push
push
mov
sbb
in
stos
mov
pushl
out
fcmovb
inc
xchg
inc
aad
bound
testb
and
mov
jmp
in
pop
sbb
or
adc
mov
fldenv
or
jge
mov
sbb
test
test
mov
inc
adc
mov
movsb
fmuls
dec
ja
scas
ljmp
sub
xchg
cmpsb
mov
mov
push
xchg
insl
outsl
cmp
sub
push
je
in
xlat
cmp
daa
mov
cmp
ret
xchg
in
sarb
cmp
and
rolb
cltd
ljmp
clc
and
dec
mov
leave
leave
mov
aad
or
mov
or
and
dec
cmpsl
add
sbb
loope
push
out
jge
mov
mov
and
shr
cli
out
mov
dec
push
cmpsl
aaa
and
into
call
mov
sub
inc
filds
jno
inc
mov
jb
out
mov
jle
adc
dec
shll
movsb
pop
xchg
fsubl
lds
ja
into
ds
mov
or
sub
aad
jo
inc
faddl
cmc
pusha
and
int
rcrb
adc
fsubl
pusha
pop
fiadds
insl
mov
jne
xor
add
call
pusha
loopne
data16
jmp
cld
mov
push
xlat
pop
cs
bound
and
xchg
out
iret
pop
inc
push
ret
lea
lret
inc
push
or
or
xor
inc
mov
jp
jmp
shll
loopne
inc
sbb
stc
dec
xchg
sbb
mov
push
nop
jb
sahf
sbb
sbb
outsl
punpckhbw
andb
daa
mov
xchg
sub
sbb
movsl
pop
mov
push
xor
outsb
out
sub
mov
or
bound
les
fdivs
adc
scas
inc
sbb
and
xchg
inc
and
mov
dec
test
shlb
push
leave
lds
ret
addb
lahf
fbld
push
sbb
arpl
or
push
popf
mov
in
in
inc
cmpsl
cmp
mov
xor
pop
add
jecxz
pop
dec
fs
fists
add
xchg
cltd
pusha
lock
push
and
ljmp
aad
into
addr16
arpl
pop
sti
mov
les
lods
punpckhbw
dec
mov
mov
xor
pop
push
xchg
lahf
fnstcw
fsubs
repz
push
data16
cltd
sub
popf
call
mov
incl
mov
fcmovu
lea
stos
adc
scas
cmp
or
orl
bound
movsl
stos
add
pop
lods
test
ja
xchg
push
int3
fisttps
ret
cs
cmpb
cld
int
lahf
and
xchg
sub
lahf
out
mov
jmp
shll
or
fdivs
mov
aam
pop
in
mov
cmp
and
inc
inc
sarb
pop
aam
imul
mov
inc
xor
aad
xor
and
cmpsl
es
xlat
mov
test
pop
add
or
xchg
cmp
mov
fsubrs
mov
lock
call
push
xchg
in
lret
dec
sub
mov
xor
out
or
enter
das
iret
adc
dec
in
jbe
and
and
lods
out
push
xor
test
jmp
xor
and
lea
dec
fs
sub
push
movsb
xor
mov
pop
mov
cmpsl
mov
add
aaa
add
mov
mov
mov
dec
clc
out
xlat
jmp
cs
and
xchg
mov
into
inc
mov
pop
mov
fcoml
mov
enter
loopne
aas
hlt
mov
or
push
outsb
pop
shll
nop
jae
jmp
sub
mov
outsb
fadd
fcmovnu
or
inc
add
cmp
lods
cltd
cltd
or
jns
and
push
aad
rolb
ret
ficompl
adc
xchg
addl
cmp
mov
xchg
popf
scas
sub
push
pop
aas
cld
clc
mov
inc
xor
mov
inc
sub
add
in
sbb
xchg
jp
lahf
push
iret
xor
outsb
mov
repnz
dec
fwait
mov
fsts
sahf
iret
xchg
adc
push
icebp
mov
rorl
lcall
sub
dec
stos
dec
adc
sub
or
mov
nop
push
xchg
lds
push
lcall
add
jg
in
lret
int3
mov
add
stos
icebp
hlt
jne
insl
arpl
mov
xchg
jge
cmc
pusha
mov
and
pop
mov
mov
insb
push
cltd
nop
popa
fstpl
not
iret
int
in
repz
lds
mov
popl
aam
mov
or
jb
adc
lods
xor
pushf
jl
mov
dec
add
sti
pop
inc
data16
adc
push
pushf
sarb
add
std
push
mov
stos
cmpsb
dec
jae
mov
xlat
jno
adc
out
test
shrb
cli
out
mov
inc
push
xchg
test
xor
iret
jnp
out
ja
addb
push
add
enter
bound
or
clc
or
and
jnp
push
push
adc
into
mov
ret
add
sbb
lret
cmc
xchg
jmp
in
pop
orl
addl
mov
jo
out
adc
mov
cwtl
xor
pushf
push
push
bound
mov
push
movsb
xlat
stos
mov
out
out
lcall
cmpsb
mov
mov
ret
movb
xchg
jge
or
call
fbld
add
addr16
cmp
or
push
pop
in
inc
cmp
adc
xorl
sub
orb
imul
add
dec
enter
and
and
repnz
rcrb
lahf
xchg
adc
into
adc
inc
loopne
mov
fisttps
jb
xor
add
mov
mov
outsb
ret
push
add
clc
push
sti
jmp
shlb
and
pop
adc
lcall
mov
mov
pop
cmpsl
ds
pusha
int3
cmp
out
std
ja,pn
shll
mov
clc
pop
sbb
stos
dec
out
nop
cmc
mov
dec
mov
lcall
adc
jecxz
fdiv
xchg
lcall
aaa
inc
testb
rclb
iret
sub
adc
addr16
cld
xchg
pushf
push
ljmp
out
call
add
les
jecxz
sti
cmpsb
mov
imul
jb
inc
mov
or
outsl
adc
adc
mov
and
fs
pop
jne
ret
add
sahf
dec
cwtl
sub
sub
jns
or
test
and
out
into
inc
sub
mov
jecxz
leave
aaa
add
mov
mov
mov
mov
inc
imul
sbb
pop
add
jo
rorl
dec
cltd
cltd
xchg
popa
inc
sub
mov
ds
cmp
xchg
movsb
dec
jae
es
outsl
or
lds
jns
push
stos
cwtl
pop
cmp
add
inc
pusha
and
and
div
push
test
sbb
mov
mov
sub
pop
divb
sub
sti
stos
pop
insb
cmp
sub
test
bound
aam
int3
cmc
dec
mov
ss
sbb
sti
cmc
shll
sub
mov
xchg
mov
lods
repz
rcrb
xchg
sbb
es
cltd
test
scas
inc
and
aam
pushf
out
or
adc
ljmp
xorl
xor
mov
cmpsl
inc
sub
add
inc
dec
ffreep
aad
mov
stc
mov
out
push
test
test
or
data16
mov
cmp
fmuls
and
xchg
jno
adc
adc
in
jp
add
faddl
test
fcmovnu
dec
xlat
push
gs
sahf
and
iret
stos
stos
mov
inc
in
insl
out
adc
mov
xor
stos
cmpsl
ljmp
aaa
incl
pop
sti
fwait
stc
and
dec
insl
add
fnstenv
scas
jp
mov
push
or
mov
pop
mov
dec
icebp
aas
jns
nop
or
mov
cli
jb
jp
jle
rcr
daa
and
push
sbb
mov
cmp
mov
or
cmpsl
mov
xchg
out
jle
fcmovne
stc
ja
jecxz
xor
sti
jle
push
pop
pop
push
repz
push
imul
shlb
dec
add
notb
sti
lret
sub
jp
test
les
es
xor
lcall
pop
scas
sub
sbb
roll
and
pop
repnz
add
dec
jne
and
in
pop
out
xchg
loope
mov
repz
mov
inc
mov
or
mov
pop
std
dec
das
mov
int3
in
cmp
jbe
jmp
cmpl
test
fimull
inc
xchg
fwait
sbb
dec
and
pop
mov
bound
push
out
pop
jge
dec
or
xor
push
adc
arpl
lcall
es
xchg
push
cmp
les
sub
frstor
adc
cld
jge
scas
add
popf
insl
jle
enter
adc
cmp
jnp
insb
inc
fstl
jmp
outsl
popa
mov
aad
popa
xor
push
and
push
movsb
lods
loope
adc
hlt
nop
scas
xor
dec
aam
inc
out
xor
out
sub
add
std
inc
out
or
and
mov
popf
xchg
jp
mov
push
int
xchg
add
or
inc
add
inc
andl
xor
mov
addl
lahf
jne
push
adc
shr
push
cs
and
add
ljmp
jmp
rol
xchg
cmp
or
xor
fcomps
jno
aam
sbb
pop
pop
repnz
xchg
push
pop
fnstcw
cmp
lea
bound
ficompl
pop
clc
sbb
neg
stos
ja
sbb
xor
daa
xorl
in
cmp
ds
stos
aas
loop
and
lds
pop
mov
push
add
int
dec
mov
outsb
mov
loop
loop
push
repnz
push
lock
inc
subl
call
push
hlt
das
push
aas
cmp
mov
enter
fstpt
push
cmpsl
fisttpl
fwait
sahf
negl
aad
push
push
jmp
push
xchg
add
in
xorb
cmp
push
cmp
loopne
stos
fwait
sarb
sub
or
or
out
arpl
adc
push
push
lods
lcall
popf
mov
pop
and
cltd
xchg
cmc
mov
mov
mov
adc
int3
pop
unpckhps
ljmp
aam
inc
jg
mov
sub
daa
inc
mov
jmp
jge
sbb
mulb
mov
pop
pop
mov
lds
cmc
addr16
pusha
mov
xchg
mov
popa
popf
jge
cmp
in
jne
ficompl
mov
data16
lock
orl
cmp
stc
cmp
lret
enter
test
mov
mov
cltd
fwait
xorl
or
mov
mov
pop
inc
jg,pn
sbb
mov
rclb
imul
adc
xlat
pop
sub
gs
xor
aam
xorl
fstpt
jae
sub
pop
test
setg
push
lock
sub
ss
cmpsl
jae
aaa
lea
jns
adc
mov
aam
push
push
xchg
mov
inc
add
push
arpl
in
xor
adc
loopne
xlat
adc
cmpl
jl
jge
pop
or
outsl
shl
dec
data16
xchg
enter
fcmovu
scas
ss
or
xor
sub
xchg
and
mov
mov
pop
std
mov
mov
fnsave
or
mov
inc
push
repz
bound
push
ss
cmpsb
das
lret
cmpsl
cld
iret
jp
push
repz
sarl
xchg
xchg
lcall
or
adc
int3
sub
ds
arpl
xor
push
outsb
mov
xchg
xor
jge
into
sbb
jg
bnd
insb
pop
dec
xor
loopne
or
rclb
mov
pop
sbb
sbb
xchg
mov
rcr
inc
rcr
bnd
scas
mov
insb
lea
inc
pop
les
sbb
lret
and
and
fsubrs
dec
adc
mov
cmpsb
sub
push
mov
popf
ficoms
outsb
scas
fimuls
mov
pop
mov
fistpl
clc
xchg
sbb
mov
push
jno
inc
in
rclb
dec
jle
int3
movsl
mov
dec
push
gs
dec
mov
insb
adc
mov
sub
push
shr
ja
out
sbb
mov
or
mov
insb
mov
rorb
xor
mov
inc
pop
loopne
jbe
xchg
xchg
xor
sahf
lret
inc
scas
in
ds
mov
mov
ret
pop
mov
sub
cld
mov
pop
fbld
aad
cmp
popf
lret
stos
sti
and
xchg
ja
jle
out
inc
es
xchg
or
aas
sub
and
push
stos
inc
outsb
inc
jge
xchg
rclb
data16
add
sbb
les
pop
pop
xor
ret
sbb
xchg
cmp
sbb
jno
and
push
lret
enter
rcrb
xchg
mov
add
es
cmp
mov
loopne
mov
jg
in
xchg
jne
out
int3
add
push
or
jb
add
fucom
push
push
xchg
push
scas
ja
adc
mov
roll
push
or
in
sbb
sub
cltd
inc
jmp
xor
mov
lret
mov
xchg
gs
sbb
mov
push
mov
into
or
push
cmp
lods
cld
into
xchg
flds
sub
and
enter
mov
repz
std
stc
push
fistpl
lds
movsl
xor
add
outsl
pushf
sub
in
in
shlb
ja
cvttps2pi
sarb
mov
movsl
add
cli
push
sub
outsl
arpl
xorl
dec
dec
ror
in
xchg
ljmp
outsb
xchg
or
loop
ror
popl
fidivl
rcll
je
or
mov
in
shll
fisttpl
mov
cmpsl
jb
std
es
dec
dec
push
stos
out
mov
std
leave
push
fsts
sbb
gs
ss
dec
dec
scas
dec
mov
aas
mov
rorl
mov
loopne
mov
rorb
push
inc
das
xor
inc
cs
hlt
add
aam
popa
hlt
xchg
mov
pushf
sbb
jne
lret
arpl
xor
call
dec
mov
cmp
inc
jmp
ret
lahf
mov
inc
ficomps
imul
inc
ret
cmp
lods
mov
inc
adc
dec
xchg
idivl
out
vaddsubps
or
push
add
xchg
jge
in
movsl
mov
mov
pop
sub
cmp
inc
roll
pushf
ret
fldl2t
jne
jg
das
jnp
je
dec
fcom
jl
or
adc
mov
int3
mov
dec
or
lds
faddl
int
push
or
inc
mov
cmp
mov
add
pop
dec
xchg
cld
lret
or
iret
movl
mov
mov
mov
mov
ret
cmp
add
lock
addr16
pop
cmp
gs
mov
test
das
or
jl
sbb
and
mov
pop
push
int3
jge
jb
cmp
pushf
movsb
lods
xchg
sub
mov
jno
sbb
cwtl
stos
rcrb
xchg
add
clc
repz
sti
sti
mov
test
dec
xchg
out
or
mov
sub
xchg
enter
mov
inc
out
lock
testb
outsl
cmp
es
jbe
push
pop
in
sub
and
inc
and
pop
nop
nop
shl
cli
cmp
xor
aad
jl
xchg
sub
push
lea
mov
stos
jg
bound
or
dec
jecxz
aaa
call
hlt
xchg
je
ds
in
sbb
dec
in
cmpsb
fnstcw
test
nop
adc
repz
pop
imulb
mov
mov
lds
xchg
mov
cmp
mov
sarl
int
js
dec
lea
std
adc
xor
mov
into
jge
and
dec
ret
js
or
xor
push
scas
test
and
mov
subl
xchg
add
sti
add
sahf
xchg
cmp
cmp
repnz
not
mov
ret
int
dec
sti
jbe
stos
movsb
fwait
out
pushl
pop
icebp
xor
xchg
sbb
jmp
inc
imul
push
sub
dec
pop
jle
movsb
adc
je
xchg
push
ret
cmp
cwtl
loop
xchg
test
mov
shr
dec
or
sub
out
mov
lods
les
sub
mov
cmc
les
add
and
mov
jno
fnstenv
mov
insl
stos
in
dec
mov
mov
pushf
lds
decl
dec
lds
sbb
adc
cli
incb
dec
add
sbb
jle
jae
cwtl
idiv
lods
loopne
scas
add
cmpsl
test
out
aam
cmc
add
xchg
das
orb
cld
in
xchg
xchg
adc
xor
xchg
push
ret
dec
mov
sbb
xor
nop
popf
aam
pop
sbb
gs
ja
andb
lea
jp
pop
testb
aad
popa
sbb
mov
cmp
xchg
cwtl
hlt
mull
leave
in
je
fpatan
gs
or
jne
pusha
xchg
jp
xchg
lock
and
cmc
frstor
jle
loop
mov
adc
sub
loop
rolb
jge
cmpsb
mov
cld
and
popa
insb
fnstsw
test
and
push
pop
fistl
adc
bound
mov
mov
and
int
enter
and
stos
lods
lock
nop
xor
jnp
out
jmp
xlat
sbb
cmp
inc
adc
cmp
or
xor
addr16
xchg
push
cmpsl
mov
cmc
cmp
addb
icebp
shrl
jae
cmpsb
inc
ret
pop
mov
mov
std
mov
dec
pop
xchg
hlt
cmpsl
fimuls
jno
icebp
dec
mov
fld
je
dec
fistps
mov
hlt
jle
adc
stos
movl
cmp
cmpb
mov
fmuls
adc
mov
push
nop
lret
or
xchg
or
add
and
xor
test
dec
xor
add
fmull
aam
sub
in
xorl
inc
addl
or
sbb
out
arpl
sbb
insb
dec
lcall
jg
xchg
adc
xchg
cmpsb
mov
pop
nop
lahf
xor
cld
and
movsb
mov
stos
jmp
xchg
or
lret
xor
orl
mov
mov
mov
add
or
xchg
shll
lea
lock
cmc
xchg
icebp
or
dec
aam
data16
dec
orb
aaa
xor
fsubrl
inc
dec
jno
mov
jnp
ss
push
cmp
int3
fmuls
push
mov
js
xlat
bound
sbb
cld
push
fwait
add
int
scas
push
cmp
cltd
and
jecxz
xchg
icebp
xchg
or
mov
sub
lock
lock
jmp
stc
daa
pop
fsubrl
add
xchg
clc
outsb
mov
fldl
dec
fists
sub
into
shl
mov
mov
je
inc
dec
out
lcall
cwtl
fnstsw
cmpsb
push
push
mov
dec
and
fwait
jmp
push
or
aaa
jmp
fsubl
fildl
xchg
pop
fcomps
cmc
sbb
inc
fidivrs
jp
gs
das
mov
pop
out
dec
mov
shl
cltd
jnp
mov
dec
lea
sti
movsl
inc
loope
and
mov
in
push
scas
xor
or
cli
push
push
pop
int
sahf
pusha
leave
daa
cmc
dec
pushf
loopne
mov
pop
test
jmp
adc
cmpb
pop
shrb
ljmp
int3
dec
int3
pop
sub
les
fisttpll
xor
dec
outsb
repnz
pop
cmpsb
push
add
or
sub
add
push
xchg
add
inc
jmp
sbbb
push
scas
addr16
fbld
add
pop
clc
cli
push
insl
clc
jecxz
cmp
lods
popa
dec
cmpsl
push
movsl
aas
add
inc
lea
mov
mov
shrb
out
hlt
push
adc
jmp
lahf
jmp
fstpt
add
jo
es
pop
jmp
ror
sbb
fstl
jno
push
je
xchg
jg
adc
sub
testb
adc
movsb
stc
subb
popa
xchg
std
xchg
jle
xor
enter
and
xchg
dec
mov
pop
jnp
xchg
enter
std
adc
xchg
push
push
test
lods
in
popf
or
cld
mov
addr16
cmc
pop
aaa
adc
fsubrs
aam
mov
cmc
cmp
pop
push
lret
dec
mov
outsl
xchg
call
xchg
add
mov
loop
xchg
rcrl
aad
icebp
jle
add
cli
fcoml
mov
cmp
mov
add
inc
mov
push
in
xchg
icebp
add
loopne
mov
cli
faddp
jns
into
loop
loop
mov
enter
sub
shll
adc
pop
mov
fwait
rclb
rorb
xchg
mov
cmpsl
mov
ret
mov
leave
ljmp
or
scas
pop
pop
dec
pop
loope
std
inc
lret
mov
fwait
repnz
sbb
addr16
jnp
xor
mov
xchg
lret
repz
int
cmp
push
dec
ret
fbstp
and
mov
push
sahf
xchg
push
fsubs
add
mov
dec
rsqrtps
stos
das
mov
mov
repnz
std
xchg
add
xor
and
hlt
push
or
inc
repz
aas
sbb
xor
imul
sahf
enter
pop
arpl
jo
mov
cmp
lcall
push
add
xchg
aad
cli
addb
pop
cmpl
jg
lret
sbb
gs
push
out
imul
push
xlat
cli
push
insl
sub
ljmp
mov
adc
adc
call
imul
data16
sub
enter
ss
xor
xorb
out
sbb
stc
xor
cmpl
test
xchg
outsl
inc
test
pushf
sub
test
dec
sub
adc
bound
sbb
dec
std
js
fildl
cld
xchg
dec
push
inc
stc
ss
jbe
xor
dec
adc
rorl
std
mov
pop
inc
jae
push
mov
cwtl
add
jae
js
jl,pt
test
add
inc
jge
mov
push
pop
inc
int
sbb
out
fwait
in
lea
in
rolb
pusha
inc
enterw
mov
mov
fadd
xor
es
push
cmp
jns
dec
mov
test
xor
scas
in
cli
or
jge
push
fiaddl
dec
jp
fwait
aaa
pop
xorb
pop
adc
mov
mov
mov
outsb
scas
out
dec
xor
fldl
test
je
mov
and
mov
mov
and
dec
out
sub
cmpsb
and
cltd
jno
cs
inc
sub
bound
jbe
scas
int3
xlat
stc
mov
outsb
in
xchg
pop
cmp
orl
xchg
mov
call
popf
inc
orb
mov
mov
stos
mov
in
jmp
mov
or
cwtl
add
aam
shll
popf
sbb
cmp
enter
adc
mov
cmp
inc
mov
push
push
decb
jmp
and
push
or
mov
outsl
clc
add
test
push
pop
shll
or
mov
mov
mov
orl
ja
sbb
inc
popa
xchg
xlat
pop
stc
xor
movb
mov
subl
stc
loope
inc
push
push
add
ja
nop
call
dec
jge
ss
cmpl
xchg
test
inc
int
add
push
lahf
cmp
mov
xor
std
push
jl
lea
or
and
sar
fimuls
stc
sti
fbstp
adc
pop
jb
jmp
cmp
push
aaa
push
popa
sbb
cmp
pushf
hlt
mov
inc
mov
leave
lods
call
in
and
pop
jo
outsb
aad
xchg
push
xor
inc
aaa
pop
xor
cmp
xchg
es
xchg
sub
xchg
aas
jo
sbbb
lods
xchg
push
dec
mov
dec
sub
jmp
cs
or
loopne
js
arpl
nop
mov
xchg
xorb
xor
and
sub
add
lret
lock
and
inc
mov
lea
pushf
mov
jl
lahf
je
imul
ror
mov
inc
or
rorb
cmpsl
cmp
mov
push
cmp
fiaddl
daa
mov
sarl
loop
and
adc
cmp
sub
nop
in
into
loopne
imul
jle
jnp
movsb
dec
bound
push
icebp
sub
aas
fdivrp
les
shll
add
imul
lods
shll
in
fdivrp
push
outsl
xchg
push
xor
lcall
adc
inc
push
int
add
jnp
stos
push
pop
adc
add
pop
addr16
cmpsb
lret
lret
or
jae
add
jecxz
test
test
cwtl
sahf
mov
adc
xchg
jbe
push
sarb
loop
sahf
xor
and
xor
jle
pushf
stc
aad
loop
xchg
test
sbb
dec
sahf
pop
mov
cmp
leave
dec
inc
sub
ficomps
push
xor
imul
sub
jle
push
mov
imul
sub
push
jp
cmc
fidivl
mov
jno
movsb
ljmp
jge
pop
ss
les
cmp
aas
pop
pop
mov
gs
add
jne
nop
daa
scas
cltd
movsl
js
test
push
sbb
mov
test
inc
mov
dec
out
xor
pop
js
movsb
mov
lahf
adc
dec
and
lea
lcall
inc
xor
rclb
dec
rcl
cmpsl
push
ror
push
add
inc
pop
adcl
in
stos
jge
inc
psubusb
in
leave
fdivrl
xor
sub
xchg
scas
pop
sub
sub
sbb
push
xchg
sbb
rorb
lea
fnstsw
icebp
mov
jae
loop
mov
popa
jecxz
or
jne
in
xor
xor
ret
or
addb
pop
mov
bound
jo
adc
xor
pop
mov
mov
push
fcom
lods
sbb
subl
std
cwtl
cmc
jp
aam
scas
scas
inc
cmpsb
jo
or
hlt
out
mov
push
fstp
jl
rcr
out
mov
add
sahf
add
inc
lcall
rorb
dec
insl
jno
popa
lods
dec
jle
xorb
cmp
stos
enter
and
lret
sub
sbb
pop
sbb
popf
mov
loope
dec
push
and
inc
and
mov
xchg
and
cmp
icebp
test
lret
shlb
push
test
cmc
icebp
das
cmc
pushf
imul
std
jns
int3
xor
mov
ss
push
rclb
jbe
jbe
and
insl
mov
out
adc
lock
popl
sarl
sbb
push
jge
int3
adc
cld
rcl
xchg
add
add
cs
mov
add
pop
dec
cmc
test
fsts
mov
fwait
xchg
outsl
mov
cmp
es
pop
and
push
jb
sahf
push
int
xchg
adc
cmp
gs
mov
jb
mov
scas
add
dec
aad
dec
pop
cmp
js
rolb
jne
inc
sub
dec
pop
mov
inc
subl
out
inc
mov
sub
sbb
push
xchg
pop
mov
test
push
shlb
arpl
popl
mov
and
mov
fdivrs
rcrl
mov
out
mov
mov
jb
outsl
push
addr16
test
sbb
sub
mov
negb
sbb
rcrb
xchg
jmp
and
mov
stc
mov
adc
fs
subb
push
cmp
xchg
push
pop
mov
addl
cmp
sub
dec
enter
inc
add
icebp
cmp
inc
push
or
sub
mov
add
jbe
faddl
inc
lret
jae
mov
dec
pusha
and
test
aad
ficomps
mov
into
sub
pop
popf
sub
popa
movsl
lods
adc
adc
shlb
or
mov
jb
mov
sub
fistps
fdivs
and
dec
mov
and
mov
out
fs
or
lcall
pop
bnd
add
cmpsb
sub
mov
aaa
std
xchg
fistpl
loop
mov
sbb
icebp
jmp
mov
push
dec
jne
fisttpll
repnz
faddl
int3
enter
xor
bound
mov
push
push
fidivs
push
xor
sub
sbb
fistl
nop
fstl
cltd
daa
xor
adc
in
lahf
dec
addr16
movsl
mov
sub
sub
mov
shrl
sbb
dec
aas
je
stos
out
shl
sbb
xlat
lret
addb
pop
test
and
xor
adc
inc
pop
push
adc
lods
cmc
push
scas
push
movsb
pop
add
int3
fisubl
lcall
mov
ret
cmp
les
mov
push
pop
xchg
and
dec
les
push
add
xchg
mov
or
jne
cmpsb
add
push
mov
or
scas
adc
fimull
mov
jb
std
or
iret
rol
jecxz
lgs
dec
out
lds
popf
sub
mov
arpl
mov
mov
pop
inc
push
and
ret
popa
cmp
inc
mov
jne
insb
aam
and
inc
mov
fisubrl
dec
add
sarl
sub
ljmp
mov
shl
and
cmp
xchg
loopne
and
jns
push
sub
sub
repnz
jo
mov
filds
sbbb
pop
sub
pusha
imul
ss
xor
push
pop
int3
jb
mov
daa
push
pop
cs
jbe
jl
test
sub
movsb
push
push
imul
testb
lods
pop
scas
add
loopne
mov
jp
or
daa
shr
rcr
leave
out
pop
and
xlat
sahf
xor
mov
or
cmp
cmp
add
pop
fsubrs
cmp
jns
insl
and
inc
pop
sbb
adc
fs
jg
push
adc
loope
cmp
jnp
push
fdivr
mov
inc
sub
fwait
test
loope
adc
addr16
mov
add
mov
jns
jmp
dec
int3
out
cmp
push
dec
jo
mov
cld
mov
fstpt
xchg
pop
mov
add
push
cmp
mov
mov
xchg
sub
lock
pop
push
mov
fstpl
bound
sbb
push
mov
pop
out
pop
jmp
push
jne
cld
mov
adc
inc
mov
jns
ret
in
aaa
aam
push
xlat
jo
incl
push
or
mov
nop
sub
xchg
push
hlt
or
sub
aas
xchg
cmp
cmp
push
sub
push
sbb
jno
imul
insl
aaa
or
out
push
mov
mov
pop
push
stos
pop
shlb
loopne
sbb
or
push
and
dec
ret
jmp
fwait
sbb
rorb
jle
stos
sbb
movsb
lret
repz
rolb
rcll
pop
ss
mov
popf
adc
mov
add
call
testl
or
imul
mov
out
mov
cmp
sbb
push
dec
xchg
test
inc
icebp
fisubrl
jbe
push
dec
mov
outsb
adc
mov
inc
cmpl
add
sub
sub
cmpsb
inc
enter
xor
jmp
adc
xchg
repz
or
cs
jnp
outsl
add
nop
and
jg
insb
andb
dec
enter
inc
fdivs
jmp
lea
lods
addb
lods
ficoms
adc
test
inc
pop
mov
scas
xchg
add
add
cmpl
aas
movsl
popl
test
jae
es
cmpsb
stos
fnsave
sub
fwait
pop
in
hlt
jne
adc
fldl
sub
add
fdivrl
idiv
es
pop
loopne
add
and
xchg
push
std
push
int3
outsb
stc
outsl
push
scas
pop
push
adc
ljmp
jmp
jbe
cmpsl
lock
sti
aad
scas
std
xor
sub
cltd
movsl
mov
jne
sbbb
and
dec
push
popa
add
inc
cmp
cmp
push
stos
xor
repnz
out
scas
shlb
fdivr
or
shlb
pop
xlat
insb
or
mov
inc
cmp
push
dec
in
mov
cmpsl
js
lock
jl
imul
insl
imul
xlat
fmuls
and
cmp
fsubs
aaa
or
mov
adc
in
mov
negl
cmp
jns
xchg
int3
mov
push
iret
ret
xchg
pusha
out
mov
pop
or
inc
scas
and
or
dec
fldt
adc
test
mov
out
cmp
sbb
out
cmp
jbe
loope
pop
and
dec
sbb
or
inc
mov
inc
popa
cmpsb
call
mov
add
add
lea
mov
negb
inc
gs
daa
es
mov
jne
fidivl
jb
scas
lahf
and
pop
lcall
mov
out
inc
mov
push
lcall
and
push
xchg
lret
imul
shlb
mov
or
cmc
pushf
int3
mov
push
adc
into
pop
aam
push
fwait
mov
and
in
orb
add
das
dec
adc
jbe
xchg
cmpsl
cmp
jno
es
xchg
jne
jo
mov
into
sub
push
mov
clc
cld
movl
es
repz
or
push
rcr
mov
loope
lret
daa
std
xor
mov
cld
shlb
rcrl
mov
cs
popf
ret
dec
movsl
pop
loop
sahf
push
pop
adcb
push
sbb
ss
or
jecxz
ds
ficoml
xchg
enter
out
add
mov
mov
divb
fisubrs
xor
dec
or
int
ljmp
rorl
and
sbb
mov
sub
ret
inc
loopne
jg
mov
shrl
in
or
push
adc
add
fwait
xchg
cltd
cld
mov
or
mov
stos
mov
aas
stos
mov
jno
xchg
or
mov
out
add
in
mov
mov
pop
mov
mov
aam
push
enter
addr16
xlat
rolb
xor
adc
arpl
sbb
or
out
xor
inc
loopne
mov
pop
je
lods
sub
jbe
out
das
aas
nop
inc
orl
lahf
push
dec
ljmp
in
lea
cmp
xlat
pop
cmp
out
sbb
mov
dec
inc
adc
popf
out
push
lea
or
push
cmp
fcomps
shrb
outsb
add
jns
xchg
repz
rorb
scas
js
int3
add
jl
jmp
add
sarb
lret
xorl
and
add
test
and
lcall
pusha
jl
repz
xor
mov
out
or
push
adc
push
in
xchg
pop
jnp
gs
loop
pusha
ljmp
mov
sub
pop
rorb
jno
dec
mov
mov
xchg
psubb
aas
dec
pop
fidivrs
out
outsb
xchg
js
imul
int3
jp,pt
or
xchg
int
or
pop
jb
sbb
or
arpl
xlat
inc
push
xchg
leave
inc
roll
je
xchg
adc
mov
sbb
lcall
sahf
mov
push
sub
add
jg
popf
sbb
sub
ljmp
test
inc
test
mov
or
mov
imul
jo
fcoms
cmp
or
jne
enter
add
fistl
mov
cmp
mov
pop
adc
adc
ds
into
or
adc
repz
jmp
dec
cwtl
xchg
jge
sub
stos
push
sub
mov
jl
pop
hlt
repz
add
sahf
movsl
test
aas
call
test
mov
xor
jl
push
sub
enter
pusha
add
push
idivl
lret
outsb
mov
lret
xorl
xchg
pop
movd
popl
sbb
and
mov
aam
testl
mov
xchg
je
adc
loopne
shrb
jbe
bound
xchg
insb
adc
es
ja
push
mov
lcall
out
ficoml
mov
out
data16
pop
or
ja
cmp
stos
add
sti
xchg
daa
inc
pop
sub
lock
cli
int3
sti
sbb
rcll
jae
insl
outsl
sub
or
stos
scas
add
loop
and
loop
fldt
cmp
pop
pop
cmc
fcoms
xchg
sti
add
jge
mov
and
mov
pop
enter
xor
shlb
jge
test
jecxz
jnp
xchg
test
fldt
ljmp
cmpsb
cwtl
test
int
out
insb
sbb
out
cmpsb
sub
fcoms
jmp
xor
add
sub
cmpsb
dec
ljmp
xor
fdivl
mov
dec
lret
fstpl
pop
dec
pop
xor
cwtl
pusha
in
jg
dec
xchg
gs
push
sub
mov
pusha
mov
fwait
mov
and
jmp
xor
mov
hlt
sub
and
scas
rorl
fdivrs
cwtl
lods
pusha
psrlq
dec
stc
mov
lahf
int
int
inc
cli
arpl
insb
out
sbb
xchg
insb
orb
pusha
movsl
cmpsb
adc
mov
xchg
pop
or
add
and
dec
add
mov
sub
iret
push
or
sbb
adc
arpl
inc
ds
mov
ret
sbb
addr16
or
filds
mov
cwtl
sub
sahf
subl
sub
push
cli
out
pop
sub
ja
or
dec
ret
xor
stos
inc
in
ret
cmpb
mov
sub
sbb
jnp
cmp
and
jnp
fwait
iret
jmp
sti
and
aam
dec
scas
pop
xchg
dec
js
hlt
mov
jae
hlt
aad
outsb
mov
push
xchg
push
testb
jl
pop
jo
inc
push
mov
dec
and
xor
rorl
xor
xchg
ss
stos
mov
push
mov
into
sti
in
push
out
jecxz
add
cmp
xorl
xor
sub
mov
repnz
dec
push
bound
sti
rcll
jecxz
movsb
andb
sbb
data16
lret
cli
jp
xrelease
iret
cmp
idivb
sahf
in
stos
push
jp
dec
mov
push
dec
sahf
enter
jecxz
ljmp
xor
push
addr16
repz
push
fcoms
mov
into
sub
adc
fdivrl
xchg
push
movsl
cmp
adcl
xchg
pop
pop
mov
pop
mov
fnstsw
mov
ret
inc
push
aas
pop
and
sub
enter
and
jmp
jb
add
movl
mov
rclb
mov
sub
jne
mov
cmpl
mov
lods
fprem1
adcl
inc
xor
lods
sub
sti
xchg
repz
daa
scas
movsb
sbb
pop
jbe
jp
stos
lret
mov
fstp
dec
sub
out
jmp
sbb
loop
pop
lods
lret
ficoml
addl
ret
mov
clc
in
out
or
pop
out
cmp
lret
shrb
cmpsb
mov
mov
mov
les
jne
xchg
cli
jmp
mov
fs
in
or
push
dec
cmp
cmpsl
cmpsb
loope
je
dec
stos
push
cwtl
and
sbb
imul
cmp
cmp
cld
stos
dec
imul
jmp
inc
cltd
inc
repnz
add
mov
push
addr16
inc
dec
mov
cmp
adc
inc
jmp
dec
inc
adc
aad
aaa
pop
push
cmp
inc
sbb
pop
pop
or
inc
fldenv
add
ja
das
sahf
or
enter
ds
or
popa
rol
mov
jno
std
stc
mov
add
enter
in
inc
insl
xchg
fdivs
insb
jmp
loop
lods
mov
lock
mov
cmpsl
or
mov
dec
bound
add
mov
mov
or
andb
pop
ss
scas
mov
cmp
sub
mov
or
mov
dec
jmp
jl
incb
mov
jne
dec
lds
pop
cmp
sub
mov
insl
pop
cmc
aam
int
pop
aas
cmp
mov
ljmp
xor
daa
fs
adc
out
or
gs
orb
adc
mov
leave
and
add
test
pop
out
mov
dec
fsubs
jg
leave
xchg
xor
or
jbe
pushf
jb
sbb
repz
jl
or
ja
mov
dec
mov
dec
or
or
jle
pushf
add
pop
rcrl
inc
in
cmp
sahf
xor
fldt
ss
dec
xchg
repz
fsubrp
dec
lahf
andb
jno
push
sbb
mov
loop
push
sbb
sahf
lea
call
jnp
cli
popf
adc
repnz
jge,pn
dec
push
aad
daa
jno
cmp
pop
in
rorb
imul
jp
out
mov
aaa
outsl
mov
xor
jge
pop
push
outsb
shl
xchg
inc
sbb
and
cmc
outsb
xchg
jge
and
les
int3
lods
inc
dec
shll
movsl
add
and
jae
pusha
mov
pop
mov
imul
inc
and
xorb
push
mov
push
lret
jmp
dec
push
xchg
pop
pushf
mov
bound
xchg
scas
mov
scas
mov
sub
mov
or
add
cmpsl
add
push
xor
jge
movsl
jl
loop
mov
lret
roll
mov
push
jne
cli
les
xchg
scas
out
shl
mov
cltd
sbb
shr
jp
mov
adc
cmc
mov
jb
jbe
jne
mov
incb
std
xchg
into
mov
jmp
dec
inc
aad
and
cmp
nop
mov
mov
adc
mov
cmp
pop
fldt
mov
out
xor
sub
jo
push
dec
mov
inc
mov
sbb
shl
dec
jae
mov
pop
adc
pop
xchg
jnp
or
mov
xchg
cs
std
pusha
fistl
mov
movsb
dec
imul
stos
add
mov
sub
fs
loope
ss
in
xchg
test
and
lcall
pop
xchg
inc
and
ret
rol
dec
pop
in
inc
sbb
mov
add
outsb
sahf
fldl
out
out
ret
jns
dec
lahf
stos
push
sbb
aam
nop
hlt
or
dec
dec
loope
cmp
push
xchg
or
lret
fdivrl
xchg
test
xor
push
mov
aas
pop
xchg
inc
adc
xchg
add
mov
pop
mov
pop
push
out
mov
cmp
and
push
push
testl
inc
add
loop
inc
leave
nop
mov
sti
xorl
jno
sub
aas
jno
adc
sahf
xor
push
dec
adc
inc
mov
std
xchg
das
lret
test
rclb
cmp
mov
es
loop
int3
das
adc
pusha
shlb
popa
aas
lock
js
out
xchg
idivb
inc
sbbb
loopne
xchg
sub
stos
or
inc
bound
adc
adc
cmpsl
mov
jecxz
cmpsl
insl
xchg
add
add
lret
jb
add
pop
jle
ret
xlat
scas
popa
fsubs
mov
in
inc
movsl
pop
xor
xlat
mov
aam
add
xor
popa
ret
mov
push
daa
je
adc
in
push
sbb
call
cs
jmp
or
int
cld
adcl
into
mov
inc
out
cmpsb
lods
jb
not
or
adc
call
addr16
shlb
loop
mov
repnz
in
xorl
xchg
cmp
sbb
addl
and
add
das
mov
pop
in
cmp
inc
pop
loopne
inc
push
inc
stc
jae
shrb
xor
faddl
imul
or
inc
negb
outsl
mov
loope
cmp
ds
subl
inc
add
test
or
and
xor
lret
cmc
add
mov
adcb
mov
pop
pop
jne
pop
push
push
enter
gs
xchg
mov
out
pop
sub
mov
rorb
aad
mov
cmpsb
mov
mov
addl
in
push
pop
and
lds
mov
xchg
fsts
fwait
or
xor
mov
jo
mov
jae
pop
pop
xchg
cmc
add
and
push
jnp
andb
ljmp
pusha
mov
movsl
pop
inc
and
shrb
pushf
out
pop
int
jae
pop
jb
repz
mov
push
xchg
pop
push
and
inc
dec
mov
and
test
loopne
movsl
iret
aas
jecxz
out
negb
mov
pushl
jge
sbb
adc
js
inc
or
movl
push
mov
jmp
sbb
add
movq
lds
in
mov
std
std
stos
cmp
mov
js
lret
into
xchg
sub
lds
lds
invd
fisubs
loop
dec
jp
sbbb
ficoms
gs
aam
cmp
inc
je
call
jbe
loopne
fs
lcall
xchg
or
pop
loop
cli
sbb
aam
jp
ret
fwait
addb
fwait
cwtl
sti
pop
popf
test
mov
xor
mov
fs
mov
outsb
cmp
mov
call
iret
jbe
icebp
jecxz
cmp
cli
loope
jmp
cmpsl
shl
push
cmp
pop
jae
out
aas
pop
pop
jbe
loop
adc
sbb
pop
fcmovu
add
cli
inc
out
cmpl
shrl
push
pop
lret
or
inc
cmpsb
test
push
rcr
imul
orl
xor
pop
daa
pop
in
js
pop
mov
shll
sarl
mov
int3
sbb
inc
call
cld
jle
sub
mov
arpl
rorb
xchg
cmp
movsl
daa
cs
popf
add
push
mov
test
stc
inc
aad
mov
mov
sahf
push
mov
stos
sbb
push
lods
sbbb
shl
mov
popa
sbb
es
sub
pop
and
dec
ja
jbe
fs
in
or
lret
xchg
testl
movsl
add
push
add
fidivrs
xchg
sub
mov
add
add
mov
xor
push
or
mov
or
arpl
sub
shrl
clc
mov
adc
outsb
and
iret
lock
sbb
cwtl
in
lock
add
movsb
shrb
sbb
xor
pop
je
idiv
inc
popa
jge
lea
jle
push
sahf
dec
mov
mov
mov
or
jg
insl
ret
or
push
out
inc
lahf
enter
cmp
pop
loopne
mov
in
mov
mov
rcrl
cs
jl
or
mov
mov
lods
adc
out
push
jmp
out
insb
mov
dec
lods
fucomp
mov
ret
in
bound
xor
adc
inc
fidivs
arpl
rcll
sbb
aas
ss
adc
xor
sbb
iret
mov
sub
stos
std
les
mov
xchg
es
mov
mov
lcall
mov
xchg
adc
mov
xor
jno
cld
push
push
jle
lahf
mov
fistpll
fs
xchg
loopne
xor
xchg
mov
mov
movsb
out
sub
insl
sub
sub
out
lret
sub
inc
xchg
pop
mov
cwtl
dec
xchg
into
jb
add
sbb
or
mov
ja
flds
jge
dec
addr16
xor
mov
jno
adc
pusha
jge
xchg
insb
push
nop
inc
aam
and
sbbb
insb
dec
xorb
adc
addr16
popa
xchg
adc
ja
add
mov
mov
femms
stc
pushf
sbb
rol
adc
dec
sub
andb
bound
ss
mov
xor
scas
loop
push
inc
add
cli
call
test
push
das
xor
push
mov
mov
dec
xchg
jns
insl
sbb
xor
jl
mov
idiv
es
pop
sub
inc
inc
mov
and
negl
hlt
jb
dec
add
insb
push
int3
pop
cmp
movsl
icebp
cmpsl
bound
inc
test
push
scas
mov
orb
jbe
mov
adc
jne
cmp
lea
mov
clc
adc
dec
cltd
scas
cmp
out
test
mov
or
sub
adc
test
push
cld
push
adcb
movsb
push
dec
int3
loop
insb
cmp
lcall
mov
je
add
cmp
in
adc
and
pop
jmp
addr16
pop
cs
xorl
pop
cmp
push
scas
sahf
icebp
bound
mov
sahf
insb
mov
jle
arpl
or
mov
fidivrl
push
add
dec
inc
mov
push
dec
cwtl
cmp
xor
sti
int3
loope
mov
inc
cmp
dec
dec
and
test
push
jnp
pop
fcomps
cmpsb
lock
pop
ja
mov
stc
push
cmp
cld
push
out
out
or
jns
xor
and
loop
out
sub
fmull
cmp
pop
add
aad
xor
add
mov
rcrb
divb
loop
sub
jno
add
andl
jnp
lds
ja
stc
lret
adc
loop
and
test
stos
out
test
in
arpl
lock
jl
lcall
je
out
sub
les
lea
cmp
stc
sahf
aaa
push
pop
xchg
pop
inc
rolb
dec
inc
jb
or
aas
and
ja
and
adc
jb
addr16
scas
mov
lahf
xchg
out
stc
lock
xor
psllq
popa
mov
orb
xchg
les
add
popf
jmp
and
lahf
mov
sbb
cmp
add
fsubrl
mov
arpl
mov
out
jns
test
or
aas
adc
loopne
out
add
jno
inc
stos
jns
jae
cmpsb
push
jae
xchg
add
sar
mov
setge
sub
mov
pusha
pop
xchg
in
adc
mov
push
outsb
pop
push
inc
pop
mov
add
leave
movsb
mov
cmpsl
pop
negb
mov
mov
iret
scas
popf
hlt
add
mov
insb
mov
stos
push
mov
dec
sbb
cltd
fcoml
pop
mov
xchg
add
lahf
lock
ss
dec
daa
fs
sub
mov
in
and
andb
loope
mov
inc
sbb
or
jle
mov
cli
lods
clc
add
add
jo
sub
iretw
jmp
sti
mov
mov
adc
mov
jp
xchg
mov
loope
lods
inc
sub
sbb
std
dec
out
outsb
push
cli
mov
lahf
push
sub
ret
xor
and
vcvtss2sd
cmc
and
fbstp
aam
mov
xchg
je
xchg
mov
jmp
add
hlt
jne
leave
out
or
push
and
leave
push
mov
je
mov
jae
lahf
xchg
jns
and
mov
clc
mov
mov
decl
leave
push
dec
jns
and
push
out
inc
leave
lret
sbb
in
xchg
in
push
xor
lock
popf
test
dec
vunpckhps
scas
push
mov
mov
mov
arpl
push
pop
divb
scas
cld
in
or
hlt
fs
cmp
into
dec
xchg
filds
in
cmp
or
push
in
inc
xor
add
aas
push
mov
addr16
cli
push
addr16
cmp
xchg
mov
mov
pop
cld
rcll
in
inc
dec
test
or
shl
inc
push
aaa
outsb
xchg
mov
add
jmp
push
bound
out
cmpsb
int
sahf
push
pop
sbb
xchg
mov
sub
pop
cmp
mov
into
inc
mov
stos
sbb
adc
jl
out
fsts
fucomip
sbb
outsl
jne
lea
cmpb
xchg
sbb
inc
ror
adc
or
dec
out
pop
fwait
push
rcrb
das
pop
cmpsb
mov
imul
push
sub
jp
call
cmpsl
or
jno
adc
repnz
xchg
push
xor
mov
mov
jle
mov
in
or
xor
dec
or
xlat
adc
int3
mov
dec
cmp
xor
sub
int
cmpl
or
dec
jmp
arpl
pop
mov
ret
add
pop
sbb
mov
xor
or
ljmp
mov
sub
lret
ja
mov
sub
aad
movsl
out
pop
or
pop
fildll
je
push
push
test
xor
iret
movsb
out
inc
pop
rcrl
bswap
pop
fnstenv
jmp
jge
rorb
dec
pop
and
fmuls
or
les
enter
pop
jmp
adc
sub
inc
dec
xor
xor
icebp
lret
lcall
popa
popf
lcall
sbb
ret
in
lds
pop
shll
aaa
loopne
xchg
add
adc
or
js
fisubrs
lret
js
mov
xchg
or
xchg
test
sti
es
xor
jecxz
xchg
add
inc
dec
cli
push
or
ljmp
cld
ljmp
jg
call
inc
xor
mov
mov
aad
lock
xlat
mov
mov
out
add
lret
iret
and
mov
sub
in
mov
ret
in
mov
lcall
addr16
jecxz
aam
enter
sbb
push
jecxz
inc
adc
aas
fwait
ret
mov
or
inc
dec
add
test
popf
pop
lds
rorb
jb
cmp
xchg
lea
iret
insl
xchg
jl
pop
negb
enter
decl
scas
test
push
mov
leave
add
cmp
out
cs
cltd
fldt
stos
xor
dec
fstpl
iret
push
mov
outsl
mov
xor
mov
adc
icebp
es
mov
inc
dec
sub
in
sub
test
gs
daa
jle
lock
lds
lea
push
insb
xchg
cmp
xchg
pop
repz
mov
mov
sysexit
jp
lods
mov
in
mov
push
dec
jmp
ss
jecxz
insb
lahf
out
lea
adc
test
jg
sahf
clc
int
xor
jno
loopne
sbb
inc
dec
dec
dec
outsb
jl
or
pop
sub
repz
or
push
in
adc
dec
sub
jnp
lret
pop
gs
adc
pop
pop
insb
inc
pop
pop
cmp
push
ja
xchg
testl
mov
xchg
cmp
insb
inc
hlt
fcmovnb
mov
dec
test
dec
push
in
int3
int3
sbb
loopne
sub
mov
stc
gs
push
idivl
mov
xchg
or
mul
ret
aam
xor
cmpl
andl
orl
pop
dec
add
or
pop
dec
xchg
pop
sub
loop
xchg
adc
lahf
push
lods
pop
mov
cmp
out
xchg
fisubs
xor
xchg
fbld
push
pop
sbb
adc
mov
imul
inc
int3
or
mov
sbb
jecxz
js
cmc
add
or
or
sbb
cmp
cwtl
rcl
cmpl
add
insl
mov
dec
clc
lcall
iretw
add
dec
pop
cwtl
cmp
sti
xchg
fimuls
stc
dec
xor
fimull
pop
xor
shrl
mov
adc
fistpl
hlt
mov
pop
int
rclb
lds
out
test
inc
cmp
push
adcb
mov
jbe
ss
or
in
inc
ljmp
sub
out
cwtl
lret
mov
mov
movsl
sbb
xor
loopne
cmpsb
xchg
lahf
data16
pop
xor
or
dec
rorl
jg
ljmp
sub
in
leave
mov
xlat
outsl
in
and
aaa
icebp
filds
jb
imulb
sub
fadds
mov
icebp
mov
push
addl
outsl
pop
test
shl
dec
jo
xor
stos
mov
shlb
addr16
fdivrp
into
push
jg
aam
mov
jae
into
lret
pop
pop
add
xchg
inc
cmp
sbb
mov
jo
stc
repnz
sahf
adc
es
rcrl
inc
and
sub
rcl
mov
stos
outsl
jmp
push
insb
das
cmpsb
jge
push
insb
add
cld
je
jne
xor
adc
mov
push
test
mov
pop
addr16
adc
pop
ja
mov
or
cs
sahf
fdivl
add
lods
pusha
out
sbb
outsl
lret
xor
mov
or
call
jnp
xchg
orl
inc
mov
fdivs
lret
inc
adc
mov
mov
sbb
int3
bound
pop
test
jno
sbb
leave
fwait
stos
leave
aas
jbe
mov
outsl
xor
push
repz
sti
loop
mov
cli
xchg
adc
data16
mov
insb
test
sub
add
inc
mov
sbb
pop
and
ret
test
push
adc
xor
mov
mov
outsl
in
sub
fxch
imul
lcall
loope
in
and
inc
loope
das
bound
movl
cmp
mov
filds
addr16
xchg
mov
push
stos
sub
popa
push
testl
std
ds
ja
push
cmpsb
test
mov
aad
pop
push
mov
add
sub
mov
popl
sbb
test
imul
popf
pop
loop
and
add
andl
sub
in
imul
xsha256
cmpsb
adc
insl
iret
dec
xor
cmp
or
sbb
push
dec
cmp
pop
sahf
xor
dec
imul
cmp
gs
sbbb
inc
adc
and
jb
jmp
sahf
into
mov
add
xchg
lock
or
mov
xor
fucomip
push
outsl
cmp
sarb
movsb
mov
push
bound
and
ret
std
add
add
xchg
adc
pop
out
cli
pusha
cld
ds
jge
xor
cld
aad
fstps
pop
cmp
jge
and
and
andb
outsl
int3
jnp
sbb
out
add
addb
adc
arpl
push
and
aad
push
sti
shrb
cmp
inc
mov
or
cmp
xor
stos
and
lods
roll
push
repnz
mov
jns
mov
mov
or
mov
adc
add
dec
movsb
jns
repz
sub
lods
or
add
jae
xchg
aaa
gs
sub
pop
es
xor
ljmp
or
sbb
sbb
cmp
orl
outsb
xchg
lret
lahf
outsb
in
inc
nop
ficoml
mov
fnstcw
xor
add
fs
es
sub
fcoms
clc
les
inc
or
dec
cld
lods
out
jle
out
xorps
imul
shrb
int
xchg
dec
adc
mov
in
mov
dec
flds
shrb
or
sbbl
push
or
or
shrb
adc
adc
shrl
jp
arpl
in
sub
adc
ret
push
lret
inc
mov
sbb
out
fstl
cmpsb
aaa
in
es
mov
cmp
mov
leave
outsb
pop
arpl
outsl
loopne
pop
testl
cmp
scas
cmp
sbb
fidivrs
shl
dec
push
les
stc
mov
pusha
push
dec
lahf
or
jo
pusha
xchg
cmp
pusha
or
sub
xchg
fisttpll
inc
in
into
out
int3
add
dec
and
push
cmp
pop
cmpsb
sbb
outsb
cmpsb
push
cmpsb
xchg
jp
jbe
inc
int
mov
out
dec
cld
test
inc
cmpsl
movsb
jecxz
or
and
popf
mov
cwtl
outsb
insl
pop
test
pop
cltd
dec
and
dec
sbb
dec
mov
out
pusha
les
mov
or
popa
push
mov
ja
add
fnsave
icebp
mov
dec
in
inc
lcall
sti
repnz
inc
sti
out
xor
jmp
xorl
push
jo
stos
inc
push
lret
and
inc
leave
mov
mov
std
mov
out
fiaddl
adc
scas
add
inc
xchg
mov
add
sbb
sub
inc
sub
pop
dec
inc
add
add
test
xlat
loope
bound
fsubrl
das
aas
xchg
xor
loope
pop
mov
inc
inc
mov
xchg
dec
mov
rcrb
mov
or
pop
pop
mov
inc
pusha
dec
rcll
cmp
leave
cwtl
push
pop
popf
out
jmp
mov
sub
orb
mov
mov
and
fs
or
int
loop
xorb
clc
into
fadds
sbb
push
jns
les
ficomps
test
ljmp
inc
pop
and
fcompl
imul
fnsave
fildl
cmp
repnz
fnstsw
leave
out
test
scas
loope
fstl
add
inc
mov
jb
pop
mov
xchg
pop
mov
sbb
cld
subl
inc
jecxz
inc
mov
fdecstp
ret
xor
mov
inc
jae
push
xchg
repnz
fstpt
adc
inc
sbb
cmpsb
aam
inc
push
sub
push
inc
cmp
xor
pusha
pop
fwait
mov
data16
push
pop
mov
cltd
mov
outsl
daa
mov
movl
mov
inc
jbe
cmc
xor
int3
sub
mov
sub
mov
cs
jmp
inc
aad
aam
mov
sti
out
insl
xchg
imul
leave
mov
es
lods
and
jne
xchg
pop
cmpsl
sbb
sbb
inc
fildll
sahf
enter
pushf
xor
push
inc
mov
fsts
mov
loope
or
decb
lahf
std
data16
jecxz
cmpsb
and
xor
mov
adc
shrl
cld
mov
or
shrl
mov
push
push
ret
sbb
mov
cmc
push
loopne
mov
filds
lcall
push
inc
movsb
sbb
ret
push
sbb
dec
pop
xor
lock
sbbb
jge
clc
jno
dec
mov
mov
daa
frstor
sbb
jg
push
and
or
mov
adc
mov
cmp
or
mov
xchg
xor
jp
jns
adc
mov
xor
push
pop
mov
orb
fildll
mov
test
jle
cmpsl
shr
sub
in
xor
hlt
xor
jmp
inc
iret
outsl
fs
add
or
mov
inc
out
and
orb
jne
lcall
fwait
mov
rol
mov
stos
leave
rcrb
pusha
jecxz
xor
inc
das
add
jg
ds
mov
rcrl
jmp
ds
sarl
aas
or
movsb
test
sahf
sbb
inc
bound
aas
xchg
xchg
xor
les
xor
mov
dec
dec
arpl
jb
inc
jge
lahf
ficoms
lods
jnp
pop
je
addr16
mov
call
rcrb
push
jno
mov
pusha
iret
in
addl
in
repnz
pop
add
add
xchg
sub
orb
push
icebp
shrb
pop
ss
pop
push
lock
mov
pop
mov
mov
ret
stos
add
les
xlat
std
or
push
aad
insb
pop
inc
jne
in
ljmp
cmp
stos
cli
mov
adc
shlb
ret
daa
pop
sbb
notb
movsb
bound
push
push
sub
dec
test
xorl
xor
add
or
sti
xchg
loope
xor
fs
int
ss
push
inc
jecxz
stos
push
mov
lahf
adc
stos
in
dec
jae
sti
xchg
xchg
sbb
add
push
scas
inc
sub
dec
push
xor
xchg
push
jo
mov
pop
mov
inc
push
cmp
ret
xor
cmp
nop
test
into
pop
pusha
pop
dec
in
movsb
scas
cwtl
and
aad
nop
cmp
pop
jnp
dec
js
and
mov
scas
repnz
mov
jl
imul
jle
into
shlb
add
dec
test
call
insl
leave
add
dec
icebp
or
enter
outsl
dec
sub
stos
add
mov
out
fisttps
loope
and
add
push
xchg
mov
popf
movsl
xchg
mov
xchg
fldenv
push
adc
mov
jb
gs
adc
push
fs
push
pop
jae
or
and
aad
iret
or
hlt
or
sbb
lahf
sbb
and
mov
push
daa
enter
and
fcomp
pushf
stos
mov
repnz
mov
scas
in
das
cmp
cmpsl
lcall
ret
inc
lock
int
jle
mov
popa
or
adc
mov
fmuls
sahf
loopne
sub
lcall
xor
cmp
xrelease
mov
xchg
mov
and
ds
popa
bndstx
insb
cmp
xchg
xchg
in
mov
mov
sub
repz
and
ret
jl
mov
sub
mov
jns
jmp
mov
sbb
insb
lahf
sub
das
sub
loop
outsb
fimull
pop
je
xlat
ficomps
pop
and
inc
dec
push
lcall
xchg
cmp
xchg
xchg
cmc
iret
daa
outsl
lds
shrb
or
cmp
cmp
jg
aam
lret
jo
sbb
xor
repnz
or
jge
in
stos
scas
mov
dec
lds
jecxz
lret
xchg
clc
int3
sbbb
push
push
dec
aas
mov
xor
mov
pusha
xchg
fucom
xorl
add
or
in
into
cmp
jbe
xor
and
out
fbstp
sti
jg
mov
and
arpl
addr16
xchg
test
xor
mov
shl
loop
lret
clc
es
xlat
hlt
ret
mov
or
push
das
das
mov
in
cld
mov
out
fucom
pop
je
xor
ret
jo
or
aas
mov
test
jl
cli
imul
test
leave
sti
lds
and
sub
cmp
in
test
cmp
roll
out
push
xor
and
sbb
and
add
loop
push
or
in
pushf
lea
test
inc
scas
fs
dec
filds
xchg
loope
adc
sbb
dec
movsl
add
jl
jae
cmp
push
pop
adc
xor
xchg
out
mov
adc
inc
xor
mov
pop
jecxz
repz
idivb
mov
mov
loop
pop
lahf
pop
lret
lods
lahf
aas
fcoms
addr16
xor
stos
cmpsb
lcall
push
mov
in
in
jno
inc
movsl
dec
or
push
ds
mov
js
lret
aam
mov
std
jl
sbb
sbb
sbb
mov
incb
icebp
mov
int3
cmp
xchg
dec
movsb
lret
into
jnp
add
sub
out
mov
popa
xor
push
xlat
jge
add
and
dec
jne
ret
jbe
lcall
ficoml
xchg
loope
mov
pop
xchg
loope
data16
fiadds
mov
add
aad
daa
insl
aad
adc
je
xor
sub
stos
cmp
aaa
xor
mov
xlat
xlat
movsb
pushf
repnz
pop
pop
insl
sbb
movsl
dec
add
xchg
jmp
push
daa
sbb
ret
sbbb
and
push
mov
adc
dec
inc
out
dec
jnp
sbb
add
sbb
inc
pop
xchg
add
cld
mov
jb
cmpsl
repnz
pusha
add
mov
cmpsb
xor
dec
or
dec
adc
insb
xchg
outsl
ror
and
or
cltd
mov
push
dec
lcall
add
cmp
les
mov
mov
or
dec
cmp
and
jb
jle
shrl
xor
dec
and
mov
lods
out
sbb
bound
push
aaa
dec
xor
ljmp
push
and
popf
stos
xchg
jg
pop
lds
and
cmp
lret
ret
ss
inc
movsl
push
cli
mov
mov
into
xchg
xchg
dec
dec
stos
dec
icebp
ljmp
call
in
pop
fisubl
aas
loop
movsb
sbb
xor
adc
fisubrs
leave
out
dec
aas
mov
mov
sbb
add
push
jnp
pushf
xchg
adc
cld
out
mov
add
mov
inc
out
push
pushf
movsl
mov
push
mov
fstpl
sbb
jae
xor
inc
or
mov
or
repnz
mov
or
or
cmp
add
rcll
pop
inc
je
aam
outsl
jl
lret
scas
mov
ret
in
mov
jns
cmp
mov
popa
sarl
sahf
dec
imul
sarb
daa
fisubs
sbb
push
addb
data16
adc
dec
pop
lahf
xor
ljmp
push
inc
ret
insl
popf
int
add
jo
gs
dec
mov
popa
lods
int3
push
dec
push
mov
pop
aam
rep
mov
fs
mov
pusha
arpl
shlb
fnstcw
rorl
jecxz
xor
adc
rorb
cli
jecxz
push
nop
dec
mov
jns
mov
pop
rclb
icebp
les
pushf
scas
mov
ficomps
xchg
and
inc
frstor
mov
out
mov
push
mov
jo
add
fwait
pusha
inc
pop
popf
push
sbb
imul
jecxz
and
add
repnz
inc
sbb
imul
mov
out
mov
js
lret
mov
mulb
cmpsb
lods
out
and
jmp
sbb
lcall
mov
jg
fnstenv
pop
outsl
dec
xchg
stc
sar
sbb
adc
dec
outsl
add
clc
testl
cmc
imul
jbe
push
insl
stos
orl
loopne
out
inc
adc
push
bound
mov
mov
xchg
dec
jmp
lret
push
or
pusha
fistl
and
xorb
sbb
mov
cmp
dec
es
jns
mov
xchg
insb
leave
adcb
call
aad
adc
ret
loopne
push
mov
loop
push
push
aad
int
mov
movsb
push
cmp
xchg
xor
int
add
adc
or
push
mov
jns
repz
jmp
aad
fldcw
pop
jnp
aad
lret
std
and
xor
add
lock
add
les
jae
adcl
test
scas
push
jb
add
inc
adc
jne
and
sbb
mov
sub
es
pop
xor
inc
stc
imull
mov
xchg
or
jae
lahf
data16
outsl
jo
nop
xchg
xor
adc
and
push
lods
fdivrs
mov
popl
loope
push
enter
ljmp
lds
mov
les
and
or
pop
test
test
xchg
xor
lret
test
sub
cmp
aam
ret
adc
pop
inc
add
push
xor
jne
test
xchg
or
mov
mov
les
cmp
ss
jne
mov
hlt
or
or
imul
dec
inc
push
mov
lock
xchg
fwait
test
out
sub
dec
dec
adc
sti
jns
outsb
test
dec
cmp
je
cmp
mov
repnz
xor
nop
fimull
pop
adcb
insl
cmp
and
sub
inc
jbe
mull
mov
mov
lea
inc
out
mov
inc
adc
cmpsb
sahf
mov
ds
sbb
movsl
pusha
or
mov
cmpsl
dec
dec
or
orb
push
test
nop
mov
hlt
enter
aad
daa
mov
xchg
lret
test
mov
lret
jo
and
nop
push
int3
xchg
adc
pop
jnp
cmp
jle
mov
int
xchg
orb
sti
add
roll
cld
and
sub
addb
xor
pop
pop
mov
ja
cli
push
ret
icebp
cmpsl
fmuls
shrl
bound
add
test
pop
lds
sbb
or
dec
cmc
inc
jns
xor
data16
stc
mov
mov
out
inc
movl
mov
mov
std
adc
mov
mov
imull
add
jbe
rorb
in
mov
pop
pop
jmp
or
pop
adc
sbbl
sub
out
mov
jmp
and
xor
push
inc
dec
leave
jno
cmp
outsb
insb
push
pop
repz
cmp
aas
in
das
test
push
cld
push
out
shll
in
push
lock
xchg
scas
cmpsl
cmp
jle
test
insb
mov
imul
sahf
and
mov
dec
sub
jno
aam
and
test
sbb
mov
outsl
cmpsl
sahf
cmp
fidivs
leave
mov
fistpl
rcrb
out
scas
mov
xor
or
movsb
mov
pusha
and
jp
mov
cmc
and
aad
push
or
sti
shr
cmpsb
mov
mov
push
test
pop
cmc
cld
addr16
int
mov
push
push
xor
stc
mov
popa
into
inc
loope
roll
aas
adc
xlat
xchg
ss
loope
inc
imul
imul
push
xor
popa
push
ret
jmp
in
sbb
cltd
mov
std
clc
shll
dec
and
inc
ljmp
xor
adc
leave
dec
in
subb
fs
ret
movsl
fldl
out
or
jmp
in
fistpl
push
jmp
adc
dec
push
dec
popf
aas
scas
jl
add
lods
rcll
fdivr
mov
decb
or
jecxz
sar
test
mov
pop
out
insb
call
out
or
add
repnz
mov
addl
outsl
ret
sub
mov
sub
mov
cmp
jl
mov
in
fprem
inc
ljmp
push
ss
jle
fucom
dec
mov
scas
in
and
call
inc
xor
xchg
into
push
mov
adc
cmpsl
mov
push
faddl
jp
mov
mov
popf
cwtl
mov
ret
sbb
adc
inc
imul
push
jns
sti
dec
scas
call
hlt
daa
fistps
leave
or
mov
push
test
jecxz
lcall
sub
mov
lret
mov
xor
les
pusha
add
std
clc
movsl
push
sub
mov
dec
sbb
push
in
or
jnp
mov
push
aad
mov
es
fwait
es
in
inc
xchg
imul
sub
sbb
sub
movsb
dec
mov
push
dec
cli
xor
lahf
mov
mov
ss
roll
cmpsb
repz
stc
jb
cld
pop
ret
inc
sahf
test
pop
test
jp
ret
loopne
pop
incb
sub
lods
jne
addb
sub
pushf
adc
shlb
in
ljmp
mov
sub
pop
pop
stos
mov
and
ret
mov
fistpll
mov
jge
inc
lret
shrl
aad
inc
push
pop
add
cmp
lret
addr16
popa
and
mov
push
cmpsl
jne
jb
lds
jbe
mov
shufps
mov
sub
gs
movsb
push
fmuls
daa
pop
and
mov
cwtl
jle
rorl
fdivr
fst
mov
xor
out
stc
stc
sub
add
or
xorl
shrb
mov
push
vhaddpd
add
dec
jge
ds
int3
sub
cli
cmp
stos
andl
xlat
mov
pusha
mov
jmp
jge
inc
dec
mov
popa
or
stos
loop
aad
notb
mov
je
xchg
mov
push
in
lds
shrl
lea
cwtl
in
cmc
mov
inc
add
leave
adc
movsl
xlat
mov
ljmp
mov
adc
xor
xchg
pop
decb
mov
pop
mov
xchg
xor
push
cmp
subb
es
imul
shl
xchg
jae
outsl
or
cwtl
cs
sub
xchg
outsb
xchg
addr16
pop
test
cmp
imul
loopne
fwait
jo
jne
adc
and
add
fcomps
aaa
and
sti
aam
fs
shll
inc
js
add
xor
js
jns
mov
fdivrl
push
xchg
sbb
cld
xchg
jo
roll
push
mov
arpl
dec
inc
enter
leave
lret
cmc
sub
fwait
jp
jnp
sbb
movl
mov
push
adc
dec
hlt
inc
sbb
popf
xchg
fs
mov
push
addb
mov
xchg
mov
and
test
pushf
enter
pop
adc
dec
aad
jmp
mov
cmpb
jne
scas
imul
push
xlat
jno
xchg
lds
jnp
pop
imulb
lret
jl
and
xchg
xchg
jecxz
leave
dec
mov
dec
loope
xchg
out
mov
fistl
loopne
sub
pop
mov
pop
fbld
push
out
cmc
mov
leave
scas
dec
pop
dec
int3
rolb
out
ja
imul
inc
jne
mov
cmp
push
inc
add
frstor
push
stc
xor
hlt
xchg
lahf
mov
fdivrl
add
xchg
mov
loop
and
je
cmp
ret
jmp
out
pop
es
inc
lret
cmpsb
push
or
arpl
out
inc
pop
cmp
sub
cmp
movsl
sbb
sub
mov
iret
stos
nop
mov
divb
into
push
dec
and
sub
dec
lea
fisttps
notl
pop
jg
push
mov
mul
xchg
pop
shrb
dec
mov
out
lods
xor
int3
aas
insl
add
mov
out
loope
push
out
push
mov
push
or
and
mov
movsb
imul
xor
inc
ret
notb
lods
mov
push
push
xor
jmp
lcall
mov
inc
sub
xchg
lea
pushf
icebp
testl
sub
adcb
cltd
pop
ja
out
inc
fadds
cld
sub
push
lcall
adc
add
pusha
sbb
repnz
jbe
imul
movsl
loope
icebp
dec
hlt
lods
scas
fldl2t
ffree
xchg
dec
jg
adc
pop
fstl
pop
cli
lods
jne
jg
fsub
add
outsl
inc
adc
pop
xchg
jl
adc
mov
pop
push
jl
clc
movsb
xchg
mov
or
sub
xchg
xchg
movsb
mov
sub
aas
out
sbb
or
out
pusha
pop
pop
jle
sub
cld
insb
xchg
jo
in
xor
adc
and
add
or
pushf
popa
and
add
push
pop
mov
xor
sub
xchg
pop
dec
jno
fs
dec
fwait
adc
dec
dec
xchg
xchg
xchg
dec
clc
sarl
xor
sub
sub
pusha
movsl
mov
test
ja
roll
push
aam
add
fcomip
lods
rep
lret
lret
xchg
sbb
push
add
dec
rclb
cmpsb
bound
lds
sub
xor
pop
iret
ja
inc
pushf
jecxz
inc
cmp
xchg
f2xm1
shrd
repnz
cmp
bound
cwtl
pop
clc
push
add
cmp
sahf
int
stc
fmull
rol
loope
mov
aam
xchg
add
mov
and
imul
xchg
push
fdivrs
popf
enter
pop
jecxz
jecxz
aas
out
cmp
mov
outsl
ja
adc
int
xchg
js
add
out
mull
rcl
fs
mov
mov
jl
les
cmp
cmp
pop
sarb
icebp
nop
jle
lcall
dec
mov
gs
lret
and
popa
mov
jne
pop
test
cli
inc
les
mov
int
les
and
outsb
ja
sub
aam
and
jnp
xor
sbb
xchg
push
cmp
inc
sbb
mov
mov
jnp
aad
mov
adc
aaa
imull
inc
loopne
push
add
jmp
sub
dec
das
jae
inc
into
ficoms
jns
popf
repz
in
mov
adcb
or
sbb
inc
in
loopne
mov
adc
rcr
testb
rorl
out
les
sub
out
pop
stos
aad
xchg
push
fcomip
mov
mov
mov
jb
mov
push
aam
mov
inc
push
lea
rcrb
pop
mov
bound
push
stos
push
je
pop
dec
push
aaa
je
xchg
pop
lcall
jmp
jge
or
movsb
out
mov
push
jne
ss
mov
aam
pushf
movsb
mov
sub
insl
sub
mov
popf
lods
ret
jge
into
mov
loop
xchg
jle
or
mov
dec
test
mov
in
sub
pop
andps
adc
iret
cmp
sbb
dec
adc
xchg
outsb
fstpt
je
bound
clc
mov
gs
enter
sbb
rcrb
cmp
lods
mov
je
jl
push
loope
lret
cmp
ret
repnz
cmp
xor
jb
mov
mov
mov
lret
jbe
or
push
outsb
and
and
jl
mov
push
test
xchg
aam
push
xchg
lcall
popa
mov
daa
rcrb
lret
insl
push
mov
and
fsubs
and
push
test
or
dec
call
out
dec
mov
rcrl
sbb
int
or
jae
pusha
mov
sub
jo
ss
mov
mov
insb
out
movsb
lcall
addr16
mov
aad
add
cmp
cmpsb
jbe
cltd
cmpsb
and
push
mov
outsb
adc
insl
outsl
mov
adc
jb
cmpsb
sub
in
loope
push
insl
out
mov
cltd
lahf
in
dec
push
add
mov
push
mov
pop
enter
fcoms
xchg
in
pop
xor
mov
xchg
jb
push
lods
scas
test
push
jne
ret
mov
push
jl,pt
outsb
std
shlb
mov
sbb
mov
xchg
out
fidivrl
sbb
sbb
jle
dec
cwtl
and
call
mov
in
jb
add
sbb
mov
mov
ljmp
jo
test
fwait
cmp
xchg
jnp
in
xchg
sbb
jno
or
movsl
push
mov
sldt
cmpsb
cmp
sub
xchg
lock
add
scas
xchg
lret
test
sub
push
sti
hlt
pushf
inc
dec
dec
push
es
ret
inc
cmp
sbb
dec
mov
mov
inc
xchg
cmp
push
stos
sub
mov
es
xchg
mov
dec
pusha
dec
jae
fs
insb
pop
mov
push
repz
lret
decb
negl
jecxz
jp
push
dec
push
outsl
mov
pop
out
add
int3
mov
shll
adc
pop
pusha
xchg
xor
mov
xchg
test
addr16
xor
xor
pusha
add
out
cmpsl
mov
loop
cwtl
fdivr
jnp
xor
xchg
cmp
cmc
sub
popf
adc
mov
add
imul
mov
das
js
imulb
mov
lcall
pop
fwait
xchg
dec
dec
rcl
jbe
cmc
mov
xor
fldcw
icebp
inc
ret
dec
popf
jmp
test
adc
push
mov
aam
mov
pop
cmp
adc
push
cs
pop
jmp
pop
mov
cmc
les
xchg
mov
mov
cmpsl
push
ret
repz
ficoms
call
imul
add
add
mov
iret
or
aad
in
xchg
or
lds
mov
mulb
test
xchg
and
cmp
push
mov
xchg
pop
divl
repz
pop
pop
into
xchg
movsl
mov
je
and
stos
jge
je
or
mov
sub
rorb
aaa
in
gs
inc
or
jmp
mov
inc
sub
in
adc
std
push
adc
dec
xchg
and
movsl
icebp
shl
sub
inc
xchg
cmpsb
mov
add
dec
loop
outsb
mov
sldt
repnz
clc
push
insb
stc
roll
lret
dec
pop
or
arpl
hlt
sub
gs
xchg
xor
fsubrp
cwtl
sbb
sbb
add
insb
and
push
pop
jb
xor
xor
idivb
es
xchg
xor
mov
stc
movsl
dec
pop
fistl
sbb
mov
stos
lods
xchg
inc
fcoml
mov
cs
adc
add
icebp
loope
push
sub
rol
arpl
loop
and
push
sub
adc
push
add
bound
cmp
shll
cmp
xorb
lret
sub
mov
imul
rorb
out
bound
push
jno
cmc
cmp
pop
dec
mov
xchg
negl
dec
cmpsl
divl
inc
daa
dec
cltd
ljmp
push
jmp
add
xor
int
xchg
xchg
inc
mov
push
shl
xor
pop
jo
lahf
lds
daa
loop
cmpsb
add
sbb
mov
sbb
cltd
push
lock
mov
cmp
sbb
push
data16
or
push
sahf
sti
sub
dec
xchg
lds
lahf
mov
inc
shl
jge
mov
xchg
pop
push
test
aas
adc
popf
mov
cmp
mov
clc
dec
add
xchg
pushf
loop
mov
xchg
and
test
je
fwait
hlt
int
push
mov
rolb
add
test
or
cmp
add
sbb
test
movsb
pop
xchg
dec
aaa
adc
cmp
pop
mov
sub
call
sbb
fcomps
iret
pop
mov
pop
hlt
repnz
mov
xchg
orl
dec
in
icebp
mov
orl
xchg
pop
add
push
mov
arpl
scas
hlt
sub
and
push
out
pop
aas
mov
mov
in
pop
sub
fwait
mov
sub
mov
je
shlb
mov
loopne
icebp
push
push
mov
push
sub
pop
lods
xchg
das
jae
dec
fs
jns
xor
mov
daa
pop
mov
cltd
inc
loope
fmuls
out
js
push
lods
in
shr
adc
iret
fsubrs
dec
inc
mov
jg
imul
jb
mov
into
int
mov
xacquire
aas
sbb
out
repnz
push
mov
push
fwait
outsb
push
sub
sub
and
popa
inc
and
ret
notl
popf
cltd
add
cmpsl
mov
xor
loopne
out
fidivrl
pop
lods
jno
jo
ljmp
cmp
int
or
int3
mov
scas
inc
gs
sahf
push
rol
aaa
mov
inc
jmp
push
popf
cmp
cwtl
or
int3
sarl
push
adc
xor
sub
mov
in
fcomps
fwait
dec
sub
mov
and
or
pop
mov
ja
adc
push
cli
xchg
xchg
cmp
mov
addl
mov
pop
call
cwtl
mov
add
adc
mov
fisttps
mov
scas
out
lods
nop
inc
mov
or
out
add
cs
in
insb
add
outsl
cmp
sub
jbe
or
sbb
cltd
push
mov
mov
mov
cmp
mov
inc
popa
cli
movsb
fcmove
ljmp
dec
xor
and
xor
int
jecxz
movsl
push
lods
sub
cmp
lret
in
sub
pop
push
jmp
mov
test
and
shll
jle
sbb
fidivrs
inc
push
sub
dec
adc
jo
aad
mov
xchg
push
fstl
movsl
jp
pop
cmp
repnz
pop
dec
mov
cmpsl
or
shrl
lret
cmpxchg
pop
lods
sbb
jb
push
icebp
xor
out
or
mov
addr16
jle
fstpl
sub
xchg
jp
iret
popa
xor
inc
out
stos
add
pop
mov
jmp
stc
scas
jb
sub
dec
xchg
jle
pop
test
jg
add
jg
dec
bound
xor
sbb
rorb
repz
jns
or
and
xor
pop
xchg
pop
dec
sbb
sub
movsb
cmp
add
lock
xor
jns
movsl
loopne
sbb
xchg
jp
dec
or
repnz
imul
js
fisttpl
cmpsb
dec
lds
xor
les
jl
pop
adc
lock
xor
cmp
shll
pop
adc
adc
mov
pcmpgtb
fwait
adc
mov
sbb
dec
inc
mov
xchg
jmp
rcll
faddl
inc
lret
arpl
add
cmp
and
push
xor
imul
xor
xchg
push
fistps
xor
std
in
inc
cmp
stos
pop
push
mov
aas
incl
cmp
cmpsb
out
xchg
mov
imul
xor
push
dec
push
or
push
sub
ja
setno
movsl
arpl
pop
mov
insb
cmp
repnz
dec
pop
in
pop
lret
push
inc
lret
aam
and
inc
push
jmp
callw
sbb
mov
push
ret
dec
into
jne
xchg
add
adc
sub
mov
sbb
cmpsl
in
loope
hlt
mov
xor
pushf
sub
jp
push
aam
push
loop
leave
sub
push
jg
lods
cmpsl
arpl
jle
pop
shr
push
out
inc
jmp
cmpsb
pop
push
and
ja
inc
mov
xchg
push
popf
dec
shrb
imul
push
iret
cli
dec
cmp
shl
insb
sahf
mov
inc
mov
mov
into
mov
mov
ss
mov
cs
pusha
addr16
push
xchg
dec
inc
fstpl
xchg
call
mov
pop
adc
dec
icebp
pop
adc
stc
rcl
cwtd
insb
insb
andl
mov
dec
dec
ss
inc
pushf
xchg
push
test
in
mov
hlt
mov
pop
jge
aam
sbb
arpl
mov
lods
mov
or
in
nop
es
mov
gs
adc
inc
mov
mov
add
ljmp
ret
jae
adc
xor
and
addr16
inc
mov
cmp
movb
cltd
push
push
add
mov
xchg
imul
cmpl
dec
inc
pop
sub
jae
stc
test
dec
outsb
xor
in
mov
cmpsl
flds
test
and
flds
gs
hlt
imulb
pop
or
cmp
mov
dec
jg
pop
and
mov
xor
repz
popa
test
ss
test
imul
jmp
or
cmpsb
mov
mov
insl
cs
jle
sahf
xor
mov
test
mov
sar
daa
mov
jns
or
pusha
mov
xor
adc
mov
enter
pop
adc
jl
mov
ficoms
mov
mov
fsubr
push
out
fs
ljmp
call
pop
ret
xchg
mov
out
lcall
adc
dec
sbb
jl
mov
add
jb
jg
nop
orl
sub
dec
and
push
lret
add
icebp
mov
decb
mov
jns
mul
jno
aad
or
jno
arpl
xor
xor
repnz
push
pop
imul
movsb
ret
jmp
rcll
dec
shr
pop
pop
inc
iret
add
fidivl
cmp
mov
inc
sub
pop
test
roll
mov
dec
or
sbb
push
push
mov
mov
pop
sub
out
add
push
cmpb
repnz
ja
mov
or
lock
int3
xchg
sub
movsl
jle
push
call
dec
sti
pop
fbld
adc
push
iret
mov
lock
or
out
negl
lods
push
lret
mov
xchg
dec
jno
rclb
dec
inc
movsl
xchg
dec
repz
adc
outsl
dec
dec
fnstcw
mov
push
rcrl
je
mov
add
xchg
inc
aam
scas
repz
xchg
insb
pop
hlt
lret
jnp
loop
xchg
adc
dec
xchg
jmp
test
mov
fstp
xor
mov
movsl
loopne
add
add
icebp
flds
js
sbb
and
xchg
lock
ret
add
test
dec
test
lahf
test
ja
dec
fcomip
int3
fisubrs
add
ja
cmp
cmpsb
sub
fwait
loopne
fistps
popf
xor
cld
rcl
dec
stos
into
ljmp
lcall
adc
das
andl
push
jnp
inc
subb
testb
xor
mov
pusha
add
inc
and
mov
xchg
cmp
push
in
mov
inc
mov
fdivrl
fs
dec
xor
mov
jne
sub
sub
jne
inc
cwtl
cmp
loop
add
sahf
ja
pop
fdecstp
pop
orl
insl
int
je
lds
xor
aad
sbb
jo
outsb
mov
push
icebp
dec
push
xchg
jmp
mov
mov
arpl
push
enter
lock
sbb
push
int
jo
lods
out
sub
mov
scas
fsubrs
mov
ret
xchg
add
xor
xor
add
push
sub
sbb
xchg
xlat
fimull
pop
ret
mov
mov
inc
push
inc
scas
aad
scas
mov
je
inc
adc
add
inc
mov
shld
sub
movsb
cmc
inc
repnz
notl
inc
inc
pop
push
mov
push
cmp
pop
mov
inc
mov
mov
lock
cmpsl
call
sub
add
fisttpll
push
pop
rcll
iret
scas
pushf
push
flds
or
or
scas
imul
ja
lock
xchg
stc
inc
mov
repz
push
inc
push
xlat
fimull
mov
fildl
repnz
scas
lock
add
lock
testb
stos
or
out
pusha
mov
out
repnz
and
mov
push
xlat
gs
pop
data16
sub
sti
fst
mov
int3
daa
mov
cltd
fsubr
mov
enter
mov
adc
push
addr16
push
sbb
push
adc
ret
fsubs
int
inc
sbb
js
cmp
push
cmpsb
inc
xchg
je
loop
mov
aam
icebp
dec
testl
jae
push
push
adc
cmp
pandn
add
arpl
ds
popl
call
rolw
cmpsl
pop
mov
jge
inc
sub
adc
mov
add
mov
xor
sub
inc
fmull
mov
in
inc
jne
mov
lea
push
push
jmp
nop
cmp
push
inc
adcl
sti
test
imul
addb
out
es
jle
adc
mov
add
mov
fimuls
icebp
mov
sub
xor
test
jecxz
in
test
mov
test
or
es
popa
push
sub
or
scas
jnp
mov
mov
and
cli
or
int3
imul
xor
outsl
clc
scas
mov
stos
sahf
lret
push
adc
ss
das
dec
inc
pop
repz
adc
mov
sbb
imul
push
inc
lock
pop
test
or
leave
loopne
jno
push
test
in
andb
jbe
pop
addr16
icebp
and
push
push
bound
pop
push
jae
sbb
push
ret
push
shlb
xor
dec
rolb
mov
jno
cmc
mov
shrb
fsubl
pop
xchg
dec
xor
mov
mov
repnz
inc
push
add
addb
sbb
jge
test
and
mov
xorb
dec
das
notb
cmpsl
mov
and
popa
jp
adc
jnp
sub
std
dec
push
mov
lods
xor
adc
into
div
jmp
push
call
sub
or
mov
add
test
sbb
sbb
pop
into
xchg
mov
mov
jbe
into
pop
push
cmp
sub
inc
jbe
sbb
cwtl
mov
adc
cld
mov
xchg
scas
jb
in
sub
outsl
lock
sar
cmpsb
out
mov
fcoml
pop
dec
outsb
xor
sahf
aas
xor
or
mov
mov
rep
insl
sbb
loope
or
cmpsb
and
xchg
icebp
pop
cwtl
fisttpll
out
add
xchg
sub
lock
out
pop
pop
or
loope
loopne
push
bound
aad
inc
sbb
mov
jl
aam
jl
fwait
je
jnp
mov
outsl
jbe
pop
jb
jmp
cmp
lret
loope
push
lds
arpl
lods
roll
pop
out
imul
in
popa
sbb
mov
inc
aam
fldl
outsb
xchg
insb
inc
sub
sbb
int
sbbl
mov
das
inc
push
out
cmp
test
mov
fwait
imul
lea
push
popa
adcb
cmp
jge
dec
mov
xchg
aad
addb
test
xchg
lcall
fisubrs
mov
call
and
cmp
sbb
add
bound
mov
cmp
mov
das
lahf
nop
adc
dec
and
push
mov
xlat
push
inc
mov
shl
hlt
movl
repz
stos
push
sub
repnz
mov
std
mov
imul
adc
xor
add
ja
inc
divl
lds
add
mov
xchg
inc
lret
popa
jne
lods
mov
mov
dec
aas
push
es
pop
dec
xor
fdiv
dec
cmp
lods
nop
dec
and
mov
out
push
lcall
adc
aam
cmp
mov
dec
enter
ss
lcall
pop
frstor
pop
mov
leave
fcmovne
mov
pop
sti
in
mov
std
pop
in
xchg
and
popa
mov
scas
cli
adc
mov
or
bound
lds
cmc
add
ss
pushf
sbb
adc
and
popf
add
js
mov
jae
mov
jno
sbb
or
jne
jle
add
ss
shl
jmp
cwtl
rclb
mov
fwait
mov
mov
sub
cmpsl
aaa
mov
hlt
jle
jb
shll
push
mov
mov
xor
inc
cmp
imulb
pop
mov
or
xlat
test
notb
mov
bswap
test
cmpsl
lods
sbb
cmp
dec
mov
idivl
sub
fiadds
pop
sbb
mov
jnp,pn
cmpsl
fcomps
xchg
lret
xchg
dec
aam
xlat
gs
dec
inc
and
dec
inc
or
push
mov
sub
mov
sbbl
xlat
inc
stos
push
pop
mov
sub
cmp
jo
mov
or
pop
movsb
fistpll
jmp
push
psrad
pop
sbb
nop
xor
and
sub
stos
jg
clc
jmp
push
addr16
cltd
ret
adc
pop
mov
jmp
mov
add
push
scas
sbb
sahf
and
xor
mov
xchg
add
es
sbb
lret
ficoms
cmpsl
ds
call
add
out
cmp
sbb
gs
fs
insl
dec
clc
jge
jnp
lret
dec
nop
bnd
mov
cmp
jns
scas
mov
sub
into
dec
lret
jmp
xchg
test
into
lea
dec
cmp
inc
cmpsl
sbb
adc
loopne
jo
cmpsb
lods
or
arpl
push
and
jmp
sbb
dec
push
xor
out
cmp
ss
les
push
hlt
ja
lret
loope
and
add
xchg
js
or
cmpsb
lcall
mov
insl
and
sbb
pop
icebp
xor
add
stos
mov
loop
cld
daa
cli
data16
sbb
nop
jo
repz
int
inc
iret
out
sbb
rorb
sub
stos
jmp
jbe
xor
adc
popa
orb
mulb
enter
ret
ret
and
js
fucomi
std
mov
jno
inc
jae
cmp
and
ret
cmp
mov
xlat
cmp
pop
repnz
mov
mov
fldcw
add
push
and
adc
cli
out
test
pop
adc
ret
hlt
shlb
jnp
mov
push
sub
mov
insl
mov
sbb
lock
fdiv
cmc
or
and
push
sub
rclb
pop
in
pop
in
inc
pop
rcl
pop
scas
mov
fisttpll
dec
cmp
mov
scas
lea
sbb
mov
cltd
or
mov
mov
cs
sub
inc
subl
or
cli
and
sub
and
sub
jl
fstp
pop
mov
adc
mov
mov
daa
in
popl
dec
push
dec
sbb
xor
cwtl
pop
or
ret
jne
pop
imul
fcoml
inc
inc
es
dec
mov
das
mov
pop
arpl
pop
xor
mov
push
scas
xchg
sarl
pusha
pop
in
and
cltd
nop
pop
mov
icebp
push
scas
cmp
out
xchg
gs
popf
mov
push
addr16
mov
sbbl
jge
lock
mov
mov
jecxz
fistl
cmp
or
jns
enter
cmp
or
xor
repz
out
shrl
jmp
hlt
pop
test
push
in
dec
outsl
mov
data16
int3
lret
inc
lock
arpl
ja
fildll
fdivrl
and
dec
xlat
bound
lahf
pop
movzbl
repnz
lods
xchg
out
out
mov
push
xchg
stos
add
aad
push
jnp
fildll
test
lock
daa
iret
cmpb
xor
repnz
loope
inc
sub
loope
jmp
rclb
inc
and
push
mov
dec
mov
or
and
pop
cmp
outsb
arpl
aas
popf
inc
das
sub
adc
imul
pusha
je
pop
dec
xchg
adc
gs
addr16
mov
rcl
mov
pop
adc
inc
cld
popa
dec
add
push
fwait
pop
out
jmp
ja
mov
pop
xor
pusha
stos
dec
test
repnz
mov
mov
add
ror
push
mov
in
sbb
and
and
repz
mov
lock
add
js
rcrb
push
jle
cwtl
lock
mov
test
sub
sub
mov
hlt
xchg
and
lods
xchg
icebp
dec
int3
jge
pop
loope
fcompl
sbb
shll
jge
je
outsb
add
ds
test
sub
clc
and
inc
mov
xor
test
setnp
fadd
xchg
lods
decl
mov
xor
pop
sub
loopne
pop
decl
enter
push
mov
neg
shll
test
pop
cmp
rolb
push
push
mov
insl
push
rcr
ret
nop
mov
mov
insb
add
outsb
mov
push
std
test
repz
jnp
ds
es
cmp
jo
cmp
leave
xchg
cmp
fcoml
aas
daa
inc
cmpb
lds
aas
pop
xor
icebp
insb
jge
sti
dec
xchg
mov
mov
js
pop
imul
movsl
test
xchg
jl
ljmp
scas
push
or
sbb
push
pop
jbe
add
dec
inc
out
in
inc
mov
fs
repnz
lret
inc
jae
push
and
xor
stos
push
inc
jns
cltd
cmpsb
cli
push
stc
es
lret
mov
cli
jl
jge
push
sbb
gs
lcall
jbe
addr16
adc
cmp
js
out
call
fdivp
mov
pop
and
sub
and
sbb
aaa
ret
mov
jp
and
xchg
je
mov
adc
jge
xchg
jnp
push
mov
dec
test
loopne
jns
xor
sub
pop
xchg
xor
xchg
inc
rclb
push
cs
or
mov
push
fcompl
mov
or
mov
pop
dec
sbb
iret
cmp
test
xchg
ja
sub
outsb
jmp
inc
or
jl
inc
int3
fistl
aas
cmp
jne
xchg
push
clc
mov
jecxz
cmp
jne
xchg
jb
xor
int
jecxz
sbb
xchg
arpl
addl
sbb
mov
ja
xor
and
add
adc
jg,pt
into
scas
mov
cmpsb
add
add
pusha
push
test
add
jge
cld
cmp
add
mov
movsl
and
push
jecxz
mov
xor
fwait
jl
pop
inc
xchg
dec
nop
adc
fbld
es
clc
bound
or
in
cmp
and
cli
mov
fdivl
mov
cmp
lea
sub
add
jne
call
mov
pop
pop
cs
in
sbb
sarb
out
div
jle
vcvttsd2si
fs
test
stc
mov
outsl
stos
mov
jbe
jb
das
xor
lcall
aad
jae
outsl
sbb
cmpsl
aaa
xchg
jecxz
ds
or
inc
cmp
out
mov
mov
mov
jno
pop
mov
dec
cmp
pop
aaa
fiaddl
sti
aaa
test
fstp
push
add
mov
sbb
mov
and
and
jecxz
gs
jmp
dec
lcall
xchg
sti
or
fcmovnbe
mov
xchg
aas
aaa
add
imul
push
pop
shrb
jae
add
push
adc
ds
mov
jae
xchg
lea
scas
out
int3
jge
mov
inc
jb
bound
ficoms
nop
lock
inc
mov
movsl
icebp
or
int3
rolb
lock
push
adc
mov
sub
pop
or
imul
mov
dec
fmuls
cmpsl
inc
ljmp
pushf
test
je
sub
dec
mov
xlat
sbb
cs
stos
mov
pop
push
xchg
jg
and
test
adc
pop
scas
divl
out
negl
mov
je
mov
rcrb
or
mov
icebp
mov
xor
xor
popa
and
mov
movsb
loopne
sbb
dec
cwtl
and
ficoml
xor
push
pushl
aad
dec
das
lds
in
fstpl
fwait
inc
icebp
jge
mov
ret
popa
push
stc
icebp
iret
mov
jg
xchg
fistpll
pop
or
sub
out
mov
scas
ja
pop
jg
xchg
mov
push
cli
sub
aam
fdivs
dec
adc
cld
lock
mov
sbb
jmp
ret
push
dec
loopne
or
test
jecxz
in
js
mov
and
rclb
fisubrs
cltd
cmc
lods
out
lret
imul
xor
pushf
dec
and
add
mov
ja
pop
int3
lret
push
jmp
insb
or
xor
movsb
hlt
aas
out
pop
or
xchg
hlt
lret
mov
shrb
xchg
sub
data16
dec
aaa
movsl
popa
xor
sarb
mov
fs
sub
pop
mov
xchg
jbe
dec
mov
sub
and
and
inc
clc
push
mov
inc
inc
dec
out
cwtl
pusha
in
movsl
lock
imul
lods
inc
ljmp
dec
imul
out
xlat
and
push
leave
jl
sbb
mov
push
add
hlt
push
xchg
mov
pop
cld
xlat
lret
aas
test
pop
lahf
stc
outsl
and
mov
jl
push
adc
subb
dec
icebp
xchg
ffree
test
repz
pop
mov
jb
or
cmpsb
out
shll
in
int3
test
xchg
pop
jbe
xor
repz
sbb
inc
insl
mov
roll
repnz
gs
pop
sar
add
fs
mov
cld
cs
cwtl
sub
fbstp
cmp
push
ret
repnz
adc
adc
out
sahf
sbb
insl
cmp
ds
push
std
mov
rclb
incl
adc
xor
add
ljmp
mov
nop
xor
into
xchg
lahf
movsb
xchg
mov
and
ffree
cmp
add
pop
mov
or
mov
divb
int3
push
mov
rcr
in
aas
aad
mov
lock
xchg
leave
jne
fidivl
push
icebp
inc
push
aas
push
lds
add
push
cmp
cmpsl
push
ja
cmp
or
mov
mov
shl
mov
pop
sub
fnstsw
lock
pop
xchg
mov
popa
lock
stos
and
sub
xor
mov
test
inc
adc
push
inc
scas
mov
stc
imulb
mov
or
pop
and
out
push
mov
addr16
add
xchg
ret
lret
push
loopne
and
jno
test
pop
out
mov
jg
test
jp
sbb
mov
xor
push
xchg
jl
outsb
lods
out
and
pop
loopne
dec
push
arpl
loope
sub
adc
loope
xchg
add
addb
cld
jle
cmp
mov
and
lret
jl
popa
sbb
push
push
xchg
das
mov
xorl
jp
jg
out
and
int
rolb
and
xor
mov
xchg
jmp
cmp
sub
mov
cmpsl
xor
xchg
mov
cmp
mov
int3
push
xchg
scas
aas
sbb
mov
push
imul
sub
and
mov
inc
inc
jno
adc
add
jns
mov
push
fwait
lock
adc
imul
fs
lret
in
outsl
pop
adc
push
fwait
add
jbe
js
fs
cli
jne
dec
push
mov
sahf
fucomip
rorl
imul
jg
stos
add
dec
cmp
lods
arpl
fucom
leave
mov
arpl
jp
xchg
sbb
addl
and
pop
loop
test
jb
outsl
mov
and
jns
repnz
xchg
in
jne
ror
mov
add
mov
xchg
mov
enter
xchg
ret
and
pop
clc
mov
cmp
xor
mov
out
imul
jmp
xchg
jae
test
sub
fsts
inc
inc
mov
xchg
rcr
dec
inc
pop
fisttpll
daa
pop
jl
sub
out
cmpb
aas
pusha
inc
jg
clc
aaa
mov
shl
outsl
cmpsb
lock
test
cs
fisttpl
pop
push
or
out
push
or
cmp
sbb
pusha
out
or
aaa
ds
push
and
cmp
inc
movb
insl
cmp
lods
nop
repz
and
daa
lock
shlb
or
add
pop
mov
and
dec
inc
lods
std
inc
sub
pusha
dec
xchg
sub
jle
cmpsl
call
loopne
add
jmp
add
dec
dec
dec
dec
sub
sub
dec
mov
inc
and
mov
sub
cld
aad
int
push
cmpb
sbb
inc
cmpsl
rcl
adc
mov
xor
dec
cmp
daa
enter
fdivrs
fisubs
adc
jae
test
or
fsubrs
mov
jecxz
lret
shrl
sbbl
shrl
pusha
shrb
jbe
xlat
lcall
xlat
xchg
stc
aaa
mov
sbb
and
xor
add
in
ja
sub
popa
adc
loopne
sbb
les
repnz
and
stc
mov
xor
xchg
inc
push
fs
mov
enter
adc
movsl
rclb
dec
mov
xchg
push
in
lods
outsl
std
pushf
push
xor
push
add
xor
jg
mov
shrb
mov
inc
inc
dec
xorb
mov
bound
sub
push
incl
ss
jnp
in
cmp
imul
pop
xor
pop
xor
or
lahf
pusha
push
mov
xor
pop
mov
orl
sub
or
jb
dec
or
sbbb
les
in
clc
addps
add
cmp
push
mov
adc
sub
mov
push
clc
mov
daa
mov
pop
inc
inc
addr16
dec
add
inc
mov
cmp
outsb
xchg
lahf
or
jae
cmp
pop
les
sbb
mov
movsb
je
das
lods
jg
test
or
mulb
mov
xor
push
out
adc
inc
iret
movsb
cld
and
jns
ret
cmpsb
syscall
test
jle
int
pop
iret
movsl
loopne
lret
mov
inc
out
sbb
xor
int
jmp
lods
mov
mov
popa
data16
mov
rclb
imul
xor
clc
xchg
push
jge
ret
and
lret
sub
je
clc
test
mov
fbld
adc
aad
mov
sub
pop
int3
jg
xchg
in
xchg
mov
bound
pop
add
cwtl
cwtl
fdivrp
mov
xor
add
mov
xchg
cld
je
pop
adcl
mov
roll
shrb
cmp
xchg
inc
sub
jne
stos
enter
mov
add
lds
mov
imul
mov
dec
or
hlt
out
add
xor
enter
imul
lock
pop
adc
sbb
daa
jg
loope
cmpsb
lret
jbe
cmp
pop
lea
test
sub
lret
mov
orl
add
aad
gs
js
les
and
popf
push
sahf
hlt
sarl
fucom
cmp
mov
aam
repz
test
scas
mov
xchg
mov
mov
lods
mov
std
mov
xchg
sarb
pusha
xor
sbb
gs
add
cmp
jmp
sbb
push
cmp
cmp
inc
xorl
mov
mov
gs
test
jmp
jecxz
push
cmp
dec
repz
lret
lcall
dec
add
dec
jmp
inc
adc
leave
mov
cmpsb
clc
les
cmc
push
mov
test
sub
cmc
sbb
xor
xor
xchg
cmpb
shrb
lods
repnz
jns
mov
shll
sub
mov
dec
mov
stos
std
testl
clc
sbb
pusha
mov
aas
push
dec
mov
sbb
dec
push
push
cltd
idivb
cli
mov
aaa
cmp
insb
jl
jecxz
dec
loop
shlb
imulb
pusha
and
or
out
pop
in
dec
and
std
test
sub
mov
scas
and
cld
mov
push
mov
fbld
test
dec
dec
jne
sbb
pop
ret
mov
jg
mov
arpl
xchg
add
jecxz
imul
push
loopne
aam
mov
cmp
mov
mov
dec
cltd
jecxz
dec
icebp
pop
mov
pusha
popf
pop
inc
fists
pop
idivl
jp
push
andl
nop
fisttpl
push
mov
test
jo
pop
loopne
test
or
test
arpl
ret
mov
jbe
je
adc
or
sbbl
das
mov
cmp
lods
in
xchg
push
sbb
adcl
les
add
adc
aam
xchg
arpl
icebp
popa
dec
pushf
adc
ja
lcall
mov
xor
xchg
xchg
notl
mov
dec
push
scas
stos
sub
or
jne
je
arpl
test
push
dec
jp
mov
push
inc
or
in
rcll
std
ficomps
xchg
outsl
fiaddl
sbb
sti
xor
neg
fildl
std
popl
jo
insl
pop
xchg
and
cmpsl
lods
mov
scas
call
push
movsl
jp
jle
movsl
xchg
sbb
adc
xor
movsb
in
mulb
pop
push
fldenv
int
inc
add
mov
iret
stos
in
cmp
jnp
stc
jo
ficomps
xchg
pop
sbb
sti
sarl
and
test
nop
cltd
fimuls
pop
mov
lret
pop
mov
jnp
popa
jnp
adcb
scas
jecxz
sti
mov
daa
pop
adc
sti
mov
lcall
or
movl
dec
or
lahf
mov
push
mov
movsb
clc
add
xor
or
sbb
outsb
insb
mov
jne
lds
push
inc
pop
lock
icebp
pop
ret
js
push
mov
fsubl
dec
sbb
insb
mov
loop
mov
jp
jecxz
mov
add
inc
sbb
jmp
mov
push
sti
pusha
pop
xlat
jl
cmp
int
data16
push
std
in
shlb
add
push
lahf
leave
ret
dec
mov
xchg
xchg
pop
pop
dec
movsb
mov
xor
hlt
jle
inc
stos
test
mov
sbb
sbbl
push
and
jmp
xchg
popa
mov
repnz
aaa
scas
leave
lds
idivb
sahf
cli
jg
push
cmpsl
fidivrl
cmpsb
push
aas
iret
mov
ss
imul
je
push
cli
mov
mov
sahf
xchg
adc
in
xchg
mov
jecxz
mov
mov
movl
ss
or
imul
and
add
add
jge
flds
pop
inc
xchg
and
cmp
xchg
and
test
loope
jl
xchg
jg
pushf
shll
in
daa
inc
cmpsb
aas
imul
aad
pop
mov
imul
mov
pop
clc
and
push
pop
push
jno
stos
js
mov
insb
inc
loope
inc
clc
pop
pop
mov
out
cmp
xchg
test
jo
dec
inc
push
mov
jle
mov
lock
setge
mov
sti
out
jmp
rcll
out
popf
add
roll
nop
fisttpll
sub
push
push
movsl
rep
int
out
adc
push
leave
punpckhwd
rorb
loop
ficompl
sbb
dec
inc
in
je
adc
inc
ret
add
in
lcall
stc
sub
inc
rcr
adc
mov
sbb
pop
xor
pop
movl
inc
or
lret
sub
add
daa
xchg
mov
pmulhw
aad
xchg
add
adc
xlat
out
shr
xor
jne
loop
pop
mov
xchg
adc
bound
std
stc
push
sub
sbb
mov
sub
iret
cmp
inc
mov
xchg
mov
jecxz
shl
add
or
sub
dec
jmp
inc
xchg
inc
and
dec
add
push
xchg
arpl
jmp
fsubrs
xchg
fstp
aaa
push
movsl
insl
dec
sbb
xorb
dec
ja
fcomip
je
dec
clc
and
jg
sbb
in
xchg
stc
sbb
inc
loop
xchg
mov
clc
mov
out
in
and
pusha
pop
ret
outsl
sub
sbb
mov
mov
outsb
adcl
repz
stc
in
fsubs
out
lret
adc
pop
ja
cld
inc
jp
and
stc
jg
lea
push
addr16
dec
clc
jge
xor
add
pop
insb
rcll
icebp
xor
add
loopne
jp
roll
cmp
adc
sub
mov
push
sbb
mov
sub
cmpb
or
sub
sbb
in
sbb
ss
jns
fdivl
in
sbbb
mov
int
inc
out
push
fimuls
pop
fnstsw
movsl
mov
int
mov
add
sti
push
mul
mov
sbb
test
jnp
andb
sar
in
jnp
fldenv
mov
and
mov
xchg
stos
xchg
add
mov
inc
sbb
or
xchg
fsubrs
jge
dec
cmp
jmp
push
jmp
mov
fnsave
sbb
dec
out
stc
pop
hlt
xchg
je
add
movsl
mov
ds
ret
mov
jp
sub
int
stc
pop
sub
sub
insl
adc
jns
add
jp
nop
mov
add
inc
pop
push
popf
jmp
mov
bound
xor
ja
dec
ja
in
nop
in
js
push
popf
pop
pop
and
je
xchg
mov
scas
xchg
fcoms
or
insb
inc
pushf
fs
xor
xor
out
jbe
jmp
pop
testb
push
jp
outsl
int3
push
mov
sub
fistpl
sub
mov
push
mov
movsb
xchg
and
fistpll
jle
jbe
and
insl
xor
mov
int
add
pop
test
sahf
es
or
sub
adc
xor
mov
mov
in
cmpsl
dec
mov
xor
mov
pusha
aad
mov
ja
xorl
xchg
nop
xor
xorb
aam
add
in
lock
inc
in
aad
imul
pop
cli
mov
mov
xchg
xchg
popf
stc
xchg
lods
mov
lods
pop
pop
pop
mov
inc
inc
mov
jb
mov
or
push
or
std
push
fwait
pop
mov
add
mov
adc
mov
or
jg
int3
pop
and
lea
pop
bnd
inc
mov
cli
ja,pn
xor
push
adc
dec
je
adc
and
xchg
add
std
or
fsubp
cld
fbld
test
add
insb
hlt
mov
clc
add
lahf
mov
fwait
pop
and
cmpsb
jl
add
inc
out
pop
adc
imul
fistps
xchg
cwtl
int3
movl
mov
test
subb
movsl
jo
jmp
xor
test
lret
push
adc
cmpsl
inc
pop
int
les
cmp
imul
popa
or
mov
scas
sub
push
popf
mov
idivl
mov
pop
repz
enter
sub
push
mov
or
mov
xor
jns
scas
pop
xor
lods
data16
mov
or
adc
out
inc
pop
rclb
cs
mov
roll
int3
mov
dec
or
push
nop
jo
jecxz
ja
stos
or
in
cmc
lea
adc
je
mov
sbb
mov
fnstsw
cwtl
push
in
add
jno
mov
jp
test
and
mov
xor
mov
lret
mov
cmpsl
sub
in
pop
lret
mov
or
cmp
mov
out
lea
fs
xor
test
jne
andl
fs
sbb
int3
and
xor
jmp
sbb
out
push
sar
mov
loope
add
inc
jle
push
iret
lret
add
sub
icebp
push
sub
pop
rcrb
popa
out
dec
inc
fmull
lcall
insb
stos
insb
enter
shll
and
xor
push
mov
cmp
lods
and
xchg
and
aaa
testb
mov
dec
cmp
mov
sbb
iret
or
mov
mov
pop
cmp
xor
das
and
pushl
or
inc
push
adcb
ret
xchg
push
mov
in
fldt
out
ljmp
jnp
mov
imul
addl
xlat
loope
mov
mov
out
into
adc
repz
push
mov
mov
inc
inc
fimuls
and
sub
adc
mov
rorb
je
adc
adc
xchg
xor
stos
popa
pop
daa
xor
cltd
dec
sbb
pop
jns
dec
jo
mov
jecxz
dec
jno
repz
stos
rcrl
xor
arpl
and
call
pop
imul
pop
fwait
dec
loop
mov
or
jle
outsb
dec
lcall
pusha
xchg
ja
add
gs
jne
mov
rorb
sbbb
les
nop
push
pushl
mov
sbb
xor
cld
jge
cwtl
addr16
out
pop
jns
outsl
push
cmp
sub
arpl
aam
jle
outsl
push
loopne
ja
das
inc
add
push
lds
xorl
sti
cmp
adc
xchg
xor
int
aad
outsb
xor
inc
cmpsb
jmp
repz
push
insb
xchg
push
xchg
call
clc
call
dec
cmp
iret
fcmovne
rcl
subl
add
mov
sub
inc
sbb
fcoms
jne
lods
bound
jg
mov
shll
pop
inc
out
and
or
inc
repnz
bound
nop
fadds
add
neg
insb
push
daa
jecxz
sbb
leave
lea
imul
gs
jecxz
gs
add
add
inc
and
mov
add
out
sub
inc
or
out
cli
fsts
mov
xchg
iret
and
add
mov
jp
xchg
popf
and
adc
in
mov
adc
mov
int3
popa
push
idiv
mov
xchg
out
or
mov
jecxz
jl
xchg
mov
nop
repnz
adc
dec
inc
les
negb
push
cmc
jne
adc
jo
aas
nop
inc
cmc
out
sbb
inc
movsl
jbe
or
fidivs
xchg
push
call
les
outsl
push
decl
and
sbb
mulb
push
out
sbb
ds
outsb
push
ljmp
mov
push
stos
shll
mov
cltd
not
or
out
xor
sub
mov
jp
push
adc
mov
lahf
rorb
inc
jns
push
add
fdivrs
or
sbb
push
sbb
aad
cli
stc
xchg
cmp
adc
cmpsl
dec
pop
jg
pop
dec
sub
loope
cltd
dec
insb
push
xor
movsl
lret
sbb
lock
mov
std
push
xor
sti
add
adc
inc
leave
push
repnz
out
push
dec
and
xchg
jg
std
cmp
xchg
xchg
out
int
loopne
jg
sbb
xor
mov
movsb
fwait
loope
jae
lock
cltd
bound
cld
jne
test
xor
cld
iret
inc
xor
sbb
icebp
xchg
in
jge
dec
xor
add
cmpsl
shll
sub
pushf
add
mov
xor
je
mov
repnz
idivl
jbe
xchg
sbbl
mov
mov
xor
cs
sarl
xchg
mov
add
sub
fistpl
ficoms
adc
add
mov
cli
and
shrb
sbb
sub
loope
cli
ss
std
enter
test
daa
inc
andl
xor
mov
jmp
imul
pop
lock
xor
iret
mov
gs
out
jnp
scas
push
adc
add
pop
cmp
ret
sub
ret
sbbb
test
dec
mov
mov
pop
mov
jmp
jo
icebp
mov
xor
enter
adc
xor
sbb
mov
cmpsb
sbb
pop
int3
adc
inc
popf
sti
or
stc
lret
and
faddl
push
inc
rcrb
sarl
adc
out
ljmp
scas
addr16
pop
mov
mov
stc
push
jge
pop
int
dec
dec
addr16
sub
daa
fwait
je
dec
push
fnsave
cmpsl
add
or
dec
pop
push
jmp
stc
shll
and
jecxz
pusha
leave
andl
and
cmp
test
fsubrs
jg
adc
into
xchg
stos
mov
pop
pushf
xchg
cli
push
xorb
lret
fcmove
out
adc
pusha
ret
fwait
mov
push
pusha
test
pusha
sbb
sbb
lock
popf
mov
int
jge
jae
push
inc
out
sub
popf
fcmovnbe
dec
lods
mov
aam
idiv
inc
pop
dec
mov
fwait
sti
mov
dec
lods
mov
cmp
mov
dec
shll
jge
cmpsl
fildll
or
in
add
mov
xlat
call
imul
in
mov
mov
mov
pop
pop
add
lret
mov
xchg
mov
and
or
cltd
ret
mov
aaa
pop
add
mov
xor
add
push
popf
push
and
mov
loope
aas
daa
adc
mov
subb
popf
aaa
imul
cmp
lcall
dec
dec
into
outsb
cmp
xor
in
mov
std
ja
sub
dec
out
inc
pop
pop
jo
xor
and
push
std
in
sub
jae
lods
rolb
adc
in
add
lret
movsl
dec
dec
inc
sub
mov
xor
repz
mov
mov
in
daa
push
imul
mov
enter
and
xrelease
mov
pusha
popf
rolb
pop
mov
jge
cmp
push
jns
mov
in
cmpsl
cmpsl
dec
shlb
jne
ret
ret
inc
negl
jb
inc
dec
sub
subb
inc
jno
jecxz
adc
iret
test
pop
lods
pop
lret
mov
jmp
sub
xchg
push
cwtl
call
sub
inc
shrl
sub
jecxz
inc
sub
aaa
jp
push
inc
mov
int3
pop
pop
adc
xor
and
pop
pop
push
xlat
movb
adc
mov
mov
mov
int3
xchg
inc
adc
out
dec
fwait
int3
jl
add
jmp
mov
adc
cmpsl
cmp
jae
cli
pop
mov
push
sbb
hlt
add
mov
sbb
in
notb
lahf
pop
mov
movsl
jp
repz
sbbl
neg
data16
jcxz
jge
cmp
push
lods
dec
push
inc
mov
adc
jp
and
repnz
icebp
push
sarb
or
test
jp
mov
or
fiaddl
mov
rcr
xor
sbb
xchg
inc
push
lds
notb
loope
stc
mov
jne
cs
jmp
lcall
sub
lahf
jns
test
pop
repnz
sbb
out
xor
je
jbe
scas
push
jo
add
dec
in
push
inc
push
cmp
dec
aam
aad
and
pop
lret
jnp
rcl
inc
push
nop
bound
cmp
cmp
and
push
jb
adc
cmp
and
in
aaa
mov
inc
or
shlb
xchg
data16
lods
sahf
mov
add
xchg
fs
cli
idivl
and
fs
cld
xchg
mov
push
mov
imul
outsb
bound
jno
jmp
or
mov
lock
cmp
loopne
inc
aad
jne
aad
mov
inc
cld
jecxz
push
pop
addr16
iret
enter
insb
test
push
pop
push
into
push
xchg
lods
pop
int
mov
rolb
cmp
mov
out
lds
xchg
cltd
jecxz
cmp
gs
bound
aam
push
mov
mov
add
mov
inc
sbb
repnz
sarb
pop
mov
jne
mov
imul
sbb
sbb
sbbb
lret
sysenter
add
mov
fidivrl
and
mov
push
imulb
test
push
jnp
fidivrs
mov
testl
pop
dec
das
add
and
adc
xchg
in
jmp
fisubs
mov
repz
test
inc
lea
and
jmp
mov
or
lea
mov
outsb
dec
mov
xchg
jno
mov
in
push
subb
push
add
cs
cli
cmc
and
out
imul
pop
jge
shll
sti
mov
in
inc
add
cmp
inc
pop
push
repz
and
std
js
fildl
dec
subb
xor
aas
and
clc
inc
xor
stos
xor
lcall
loope
mov
sbb
loopne
xchg
shrb
mulb
pop
xchg
sub
push
and
mov
js
or
or
mov
scas
dec
popa
int3
push
lahf
jno
xchg
push
cmp
dec
mov
pop
sub
hlt
push
lods
pop
mov
pusha
add
aas
jg
inc
inc
mov
jmp
inc
punpckhdq
aam
jno
adc
sub
arpl
sub
nop
incb
movsb
and
into
xor
push
in
and
xchg
lds
xlat
xor
stos
jecxz
mov
dec
or
fs
xor
testl
aad
add
adc
test
dec
bound
out
scas
fisubrs
in
ljmp
push
enter
fstpt
sub
nop
cld
iret
add
jle
xchg
add
pushf
test
enter
xor
or
sub
push
inc
mov
lea
cmc
jp
pop
add
and
out
std
ljmp
imul
sbb
or
mov
xor
and
cli
jp
movsb
xor
out
imul
mov
int3
loopne
dec
xor
scas
popa
enter
cs
into
idivl
pop
lret
arpl
or
pop
or
add
xchg
cwtl
mov
leave
dec
int3
xor
out
test
and
ljmp
fidivl
hlt
cmp
sbb
jecxz
or
insl
dec
mov
sbb
push
jle
loope
out
call
dec
fwait
sbb
or
mov
inc
mov
fsubrs
cmp
je
aam
jns
pushf
mov
mov
cltd
out
or
mov
popa
leave
imul
repz
movsb
pop
mov
xor
insl
xchg
ret
xor
mov
je
fcomps
je
xor
cmp
mov
stos
outsb
jge
pop
movsb
nop
adc
adc
fdivrs
inc
lods
out
mov
mov
enter
pop
lret
icebp
xchg
inc
sti
cmp
xchg
adc
adc
and
mov
cltd
sbb
pop
jns
adc
aad
mov
pop
inc
push
xchg
lret
xchg
xor
push
mov
jno
inc
mov
std
cmp
in
iret
out
jmp
ret
mov
dec
hlt
nop
shlb
inc
cmc
fldl
ret
or
cmc
pop
inc
xor
cmpb
dec
push
mov
hlt
xchg
pop
or
insl
mov
int3
sbb
sbb
es
js
lock
int3
mov
idiv
das
xor
gs
or
cmpb
inc
mov
cmp
dec
std
mov
adc
or
inc
jns
sarl
sbb
pushf
stc
pop
sar
xchg
les
lds
mov
sbb
pop
xor
dec
ss
cmpsb
dec
and
pop
sbb
ja
ss
aas
mov
xlat
sbbb
ja
mov
fisttpll
test
add
xor
lds
jg
cltd
adc
and
push
jecxz
movsl
dec
or
fs
sub
xchg
jge
imul
clc
xor
pop
iret
mov
std
lcall
notb
xchg
adc
xor
mov
lods
xor
inc
sub
add
outsl
mov
iret
fisubrs
int
mov
xchg
test
mov
dec
or
xor
clc
mov
push
addr16
enter
and
xor
int
jb
mov
in
mov
ljmp
cmpsb
fdiv
in
negl
adc
push
divb
ljmp
xor
or
js
sub
lahf
hlt
adc
jne
dec
add
inc
in
xchg
cmp
xor
out
mov
pop
mov
out
fcompl
sub
int3
insl
call
adc
cmp
jae
lret
dec
mov
jecxz
ret
out
push
rcrl
es
xlat
popa
xchg
sbb
movsb
je
cmp
insb
jmp
roll
loop
cmpsl
popf
or
leave
or
mov
rcl
mov
insb
ret
jnp
jg
push
push
fs
mov
lds
repnz
inc
addr16
and
sub
pushf
mov
cmp
push
dec
cs
nop
jmp
stc
stos
sub
mov
dec
adc
ds
gs
mov
ja
mov
notl
ret
test
sarl
mov
subl
dec
or
xchg
jne
out
les
adc
push
mov
fs
shl
push
mov
jl
nop
sbb
cwtl
into
stos
lods
push
pop
sbb
xor
adc
cmp
jl,pn
jae
add
ret
jae
in
inc
clc
cmc
mov
jmp
repnz
add
or
lds
cltd
ljmp
jae
pop
jne
mov
fldcw
xor
jmp
inc
sbb
xor
outsl
subl
inc
sbb
lcall
mov
stc
push
popf
lods
les
popa
xchg
dec
adc
test
push
xlat
push
stac
mov
pop
lock
and
movsl
pop
mov
loop
sub
mov
push
cmp
lea
imul
xlat
add
rolb
cmc
adc
push
lahf
inc
dec
test
lret
sbb
popf
cmp
add
mov
xchg
cld
movsb
test
or
inc
mov
ficomps
mov
popf
mov
das
mov
mov
ljmp
and
in
les
cmpsl
sub
ror
pop
jns
cmp
add
mov
arpl
xor
ficoml
rclb
jmp
cli
and
jge
aad
repz
mov
add
adc
das
js
pusha
push
jno
shr
imul
inc
adc
jge
mov
sahf
xor
dec
ret
inc
mov
lea
cmp
test
icebp
out
cmpsl
fsts
jle
mov
jo
out
add
lret
jno
lods
addl
inc
adc
and
and
xchg
das
cmp
inc
sub
xchg
mov
xchg
jmp
cmp
or
shrb
test
push
shll
out
jae
lret
dec
push
jnp
int3
ret
inc
stc
push
stos
inc
shr
mov
enter
mov
jb
fwait
sbb
xor
rcr
and
scas
or
push
rorb
into
mov
aas
mov
adc
mov
in
xor
cli
adc
lahf
iret
pushw
and
jbe
jp
add
xor
ds
popa
orb
inc
xchg
add
incl
int
loope
xor
call
pop
aaa
adc
in
add
and
jae
xchg
loopne
gs
xlat
adc
jb
sbb
out
loopne
dec
sahf
add
cli
in
dec
icebp
sahf
lea
movsb
cmp
adc
enter
sub
push
outsl
mov
cmp
add
cmpsb
sub
lcall
xchg
pop
inc
jae
scas
mov
cld
adc
and
mov
fcmovnb
pop
push
push
jle
test
test
or
sbb
movsl
push
roll
push
cmpsl
push
ds
leave
pop
or
add
adc
xlat
dec
mov
into
xchg
push
mov
mov
mov
roll
cmpsb
or
mov
fstps
shlb
in
hlt
sbb
stc
lea
dec
mov
and
dec
dec
test
popf
pop
lcall
lock
fs
sbb
cli
cvttps2pi
ret
push
jle
mov
or
inc
std
aad
jl
sub
cmpl
jp
inc
addr16
pushl
add
stos
hlt
mov
idivb
sub
and
es
subb
lock
addr16
test
lock
or
cmp
js
add
push
add
out
cmpb
lods
iret
vminss
xor
inc
dec
xor
test
inc
xor
or
scas
ret
lds
std
test
adc
ret
out
ja
insl
jnp
negb
popa
in
sub
arpl
stos
outsb
xchg
lock
fwait
dec
inc
stc
in
jae
pop
fmuls
movsl
iret
push
lds
fadd
cmc
mov
ds
addr16
push
stc
pop
jb
jg
mov
arpl
cmc
dec
push
cmpsl
jno
lret
stos
test
lret
adc
cs
sbb
out
fmul
mov
sahf
paddusb
inc
xchg
cltd
maxps
lods
ja
pop
mov
jge
xchg
inc
into
mov
sub
shl
jno
daa
sub
or
or
cmp
sbb
inc
sbb
std
call
pop
inc
mov
or
loop
push
mov
test
add
movsb
adc
sahf
push
in
xor
mov
cmp
cli
enter
inc
add
mov
fsubrp
test
les
sbb
mov
or
pop
out
rorb
adc
jbe
or
sub
imul
or
data16
jo
mov
lahf
add
pop
in
hlt
xlat
mov
cltd
fsubl
inc
lods
sbb
rcrl
sbb
or
in
push
rclb
imul
aad
jmp
and
sub
xchg
es
into
inc
push
push
repz
pusha
gs
pop
mov
lods
jge
bound
sub
jp
in
pop
mov
add
mov
stos
out
daa
dec
movsl
enter
jl
push
ds
cmpsb
pop
stos
arpl
pop
xor
push
jecxz
cld
jb
out
aaa
out
dec
mov
push
jae
hlt
pop
outsb
jae
jne
mov
iret
fld
dec
mov
xchg
cmp
cmp
inc
fwait
mov
inc
cmp
rorl
negb
mov
inc
ljmp
repz
mov
shll
sarb
sbb
shlb
mov
mov
out
loope
mov
xchg
sbb
dec
xorb
fincstp
xchg
popf
pop
bound
jp
clc
stc
xchg
push
or
cmpl
jle
and
add
fdivs
addr16
mov
test
aas
cwtl
pop
xchg
mov
or
cmp
xor
jl
jno
ret
adc
dec
xor
adc
pop
je,pt
das
idiv
and
cs
das
jb
add
repnz
mov
push
xchg
arpl
lret
and
cmc
scas
aam
add
lods
xor
inc
cmpsb
cli
idivb
sbb
xchg
inc
popa
pop
xchg
or
mov
jne
inc
and
fcmovnbe
mov
leave
mov
xlat
add
andl
pop
ss
testb
nop
popf
mov
inc
adc
and
inc
in
fs
adc
pop
push
cwtl
mov
or
stos
imul
cs
xlat
pop
std
nop
outsb
xor
cmp
push
test
pusha
incb
xlat
sub
rcrb
shrl
jbe
les
push
daa
adcl
xchg
jbe
inc
dec
je
cmp
or
ret
daa
or
and
ds
out
adcb
mov
clc
jbe
clc
mov
popa
push
mov
outsb
xchg
jmp
dec
nop
rolb
jecxz
loope
mov
adc
jne
mov
dec
mov
mov
sbb
sbb
ret
jle
cmpsl
mov
sub
std
repz
in
insl
xor
jmp
and
add
xchg
and
addr16
jle
sub
xor
mov
loop
inc
nop
faddl
sbb
fwait
aad
stc
jnp
scas
lods
test
inc
in
lcall
addr16
add
xlat
icebp
in
lods
xor
cmp
adc
mov
push
push
lahf
setno
sub
and
sbb
sbb
jecxz
sbb
jo
pusha
arpl
push
or
cmp
jne
xchg
and
mov
loop
xor
or
loope
shlb
sub
mov
mov
imul
aas
stc
or
movups
addb
js
lock
xchg
dec
or
aas
sub
clc
mov
lods
xchg
int
popa
movsl
hlt
andl
pushf
dec
ljmp
js
dec
mov
shl
les
mov
sarl
gs
sbb
mov
dec
add
sti
cmp
jmp
subb
sub
clc
push
fisttpl
adc
add
pushf
xchg
dec
imul
fidivrl
dec
cmp
sahf
and
jo
mov
cld
not
sub
adc
jg
push
jne
movsb
xor
add
adc
lea
aad
fldcw
inc
dec
add
rcl
repnz
pop
xchg
push
sub
shll
addr16
cmpb
fs
clc
mov
pusha
sub
in
jg
or
inc
jmp
insl
fcmove
push
inc
pop
sbb
inc
iret
aas
mov
loopne
or
shrb
aaa
adc
inc
aaa
xor
push
inc
jl
scas
imul
push
dec
rsqrtps
dec
fs
cli
popa
sub
mov
sahf
daa
rcll
dec
enter
call
pop
mov
mov
xlat
sbb
in
mov
jae
icebp
ffree
fdivrs
loop
inc
lcall
mov
cs
mov
cmp
inc
inc
fs
sahf
faddl
rcrb
sbb
imul
in
mov
pop
cmc
inc
sti
movsb
mov
dec
dec
jmp
pop
pusha
outsb
inc
pop
bound
testl
hlt
xor
xchg
imul
jnp
and
sub
mov
mov
dec
mov
xor
iret
shll
add
adc
mov
rol
outsl
pop
in
and
push
addl
mov
dec
cmpsb
sahf
cmpsb
daa
push
push
add
enter
cmp
sub
out
mov
or
jmp
aaa
xchg
cwtl
adc
mov
xchg
cmpsb
pop
movsl
adc
add
fcoml
ret
sbb
adc
movsb
cmp
cld
lea
jmp
xor
pop
mov
scas
gs
arpl
cmp
sbb
lock
icebp
push
mov
mov
mov
lret
mov
das
rolb
dec
in
cmp
cld
movsb
flds
ljmp
shlb
jle
xchg
nop
inc
into
out
ror
pop
ret
inc
mov
lret
push
shrb
inc
mov
dec
fmul
cmpsb
mov
repz
pop
and
fnsave
lods
hlt
mov
add
and
or
xchg
lret
popa
cwtl
mov
push
mov
dec
nop
pop
cli
adc
imul
shl
popa
adc
loop
sub
add
inc
cli
inc
add
sub
push
dec
rol
mov
sub
xchg
cmp
inc
pushf
in
sub
sbb
loopne
or
adc
loopne
repz
mov
imul
jo
enter
and
ret
or
mov
xchg
pop
into
aad
pushf
movsl
jle
into
icebp
or
mov
fcoms
jmp
xor
shrl
jbe
pushf
cmpsl
lock
mov
pop
fildl
ret
stc
push
push
or
push
inc
mov
lods
xor
jge
push
or
xor
mov
push
les
and
add
fnstenv
push
push
xchg
sbb
mov
cltd
aad
scas
daa
pop
icebp
inc
xor
cmpsb
xchg
ret
adc
mov
push
mov
jnp
insl
mov
jmp
pop
jns
mov
mov
cmpsl
sar
and
push
adc
sub
jne
nop
dec
les
aaa
lods
movsl
stc
mov
mov
fistps
jae
aad
test
ja
in
call
cld
push
mov
inc
sub
push
dec
pop
adc
adc
add
xchg
mov
add
in
je
mov
imul
shlb
pusha
test
and
xchg
push
cltd
ret
dec
mov
les
xchg
dec
pop
fwait
xchg
aad
ljmp
and
dec
iret
jbe
aam
xlat
and
rcll
popf
cmp
jnp
dec
rclb
cmc
out
mov
leave
test
xchg
in
jg
aam
adc
sub
jp
xchg
cwtl
ljmp
or
adc
inc
mov
sbb
mov
and
push
jmp
cmp
mov
xor
lahf
jle
scas
push
mov
sub
pop
in
mov
lods
out
adc
hlt
bound
jecxz
cmpsl
dec
mov
inc
dec
xchg
jmp
into
cmpsb
sarl
sub
int
incb
mov
jle
inc
mov
jne
xchg
and
fwait
add
bound
mov
or
fwait
sub
sub
xchg
ret
mov
xchg
and
lcall
fwait
sahf
sub
push
and
push
add
loop
cltd
add
mov
call
cmpsl
aad
mov
inc
xor
dec
fwait
imul
jg
push
jnp
test
enter
push
or
sbb
xchg
mov
add
push
repz
sub
pop
mov
xor
mov
jno
inc
adc
dec
jge
mov
mov
repz
test
subb
lret
repnz
inc
or
xchg
rorb
loope
movsb
xchg
outsb
sub
enter
mov
fwait
adc
test
sub
xor
push
dec
movl
aam
es
fldenv
ljmp
addl
add
or
xor
neg
insl
lock
gs
dec
addr16
fs
cltd
sub
push
and
jns
jno
mov
insb
imul
ret
push
daa
sub
dec
in
imul
sub
mov
fldt
xor
enter
icebp
lods
mov
in
shl
xchg
inc
jnp
mov
push
je
lret
pop
int
bnd
jecxz
sbb
xchg
mov
cmp
outsb
ss
popf
and
pop
sub
jo
xchg
clc
sbb
fildl
stos
xor
mov
pop
js
pop
lret
cwtl
lcall
lds
mov
jle
loope
xchg
js
pop
std
mov
cmpsl
mov
inc
lods
pusha
fistpl
adc
enter
push
ret
addb
dec
jne
fcompl
fs
aaa
movl
xor
jne
icebp
fwait
jne
jmp
out
inc
aas
pextrw
pop
or
pop
imul
pop
testl
pop
sahf
xor
pop
pop
addr16
push
mov
pop
test
xchg
sbb
push
mov
and
push
mov
push
mov
xchg
loopne
jl
or
dec
sub
roll
sub
dec
cs
mov
test
jb
loope
popa
cmp
sbb
sahf
mov
rorb
popf
add
xchg
jmp
pop
jl
fdivp
adc
icebp
pop
icebp
pop
hlt
js
out
pop
data16
xchg
out
fistpll
inc
lcall
aad
xor
test
pop
sbb
stos
lds
into
add
cmp
push
in
pop
jge
test
lds
mov
sbb
mov
push
ds
fs
addr16
daa
fdivs
push
loope
mov
enter
fisubs
adc
int
pop
mov
jno
roll
stc
xchg
mov
inc
aaa
push
leave
jne
fcmovne
xchg
lock
jge
imull
ljmp
mov
mov
push
cwtl
test
jne
mov
mov
stos
lret
cwtl
xchg
aaa
imul
pop
push
xor
pop
adc
int
ss
stos
and
xchg
out
sarb
adc
imul
inc
pop
jnp
add
std
cli
loop
scas
mov
ficoms
cmpsl
stc
mov
fdivs
andb
repz
shrb
stc
push
lods
das
mov
in
enter
push
jp
fists
mov
dec
adc
nop
imul
fwait
data16
icebp
fstpt
mov
sarb
xor
pop
mov
std
cli
cmpsl
cmp
sbb
ficompl
cmp
dec
push
jmp
roll
cmp
lods
push
mov
ss
cmp
jne
pop
fsubr
pop
inc
xor
rcrb
or
test
popa
xchg
xchg
fiaddl
sub
push
push
or
adc
pop
push
jmp
xchg
lea
popf
aas
pop
lcall
dec
dec
shlb
cmp
inc
inc
push
and
push
iret
repz
pop
or
movsb
cmp
sub
scas
dec
adc
fwait
jge
jo
sbb
loop
popl
loope
mov
je
enter
xor
sahf
push
int3
test
sub
ja
rcll
and
jae
cltd
jbe
push
xor
out
inc
or
adc
int3
pop
es
loop
push
push
rorl
push
xor
fldenv
imul
push
jp
outsb
shll
rorb
or
sub
ds
movsl
call
int
sub
mov
lahf
fisttpl
pop
mov
shlb
andb
dec
shll
aad
pop
pop
jecxz
jnp
aas
mov
or
bound
daa
hlt
push
ret
scas
mov
ljmp
sub
mov
ljmp
mov
push
xor
mov
shrb
xor
or
lret
decb
cmp
gs
bound
xchg
adc
in
sub
cld
test
or
out
and
fs
jl
mov
xchg
push
int3
cmp
bound
dec
lret
sbb
push
xor
push
mov
pop
cld
shlb
and
sub
pop
or
rcrl
pop
pop
inc
mov
loopne
outsb
lods
inc
xchg
jg
es
inc
int
clc
and
xor
sbb
into
or
sbb
mov
scas
pop
test
test
pop
dec
xor
aam
cmpsb
inc
lea
push
adc
cli
lret
push
inc
movsl
orl
scas
jno
outsb
jne
mov
fs
jno
ja
inc
enter
mov
inc
ret
and
mov
iret
xchg
pop
inc
mull
push
or
adc
xchg
repz
jb
inc
lahf
push
data16
pop
ret
sarb
or
sahf
cld
inc
sti
les
xchg
sub
jbe
xchg
xor
push
popa
sahf
enter
xchg
stc
in
insl
add
fcomps
pop
outsb
dec
aam
xchg
enter
rolb
iret
add
in
aaa
mov
jecxz
aaa
or
xchg
or
inc
loope
addr16
leave
mov
dec
loopne
mov
sahf
cld
lods
mov
rolb
mov
dec
pop
fstl
aas
mov
imul
jmp
push
pusha
in
lods
in
mov
insl
fxam
leave
arpl
adc
aaa
out
xchg
gs
mov
rol
xchg
test
rol
nop
sbb
xchg
fwait
daa
jo
dec
stc
in
mov
or
cmp
ret
out
dec
outsb
andb
mov
mov
push
mov
gs
ficompl
movsl
jns
inc
loope
push
and
mov
cmp
loopne
sti
mov
and
and
aad
cli
addl
sbbb
jae
je
sub
divl
into
push
int3
push
ret
mov
daa
insb
std
pop
movsb
loop
pushf
into
loopne
pop
push
add
mov
push
inc
arpl
aam
dec
rclb
sbb
pushf
cli
xchg
jmp
push
or
pmaxub
ja
fcoms
push
in
mov
push
push
sub
int3
push
stos
lahf
lods
cmpsb
xor
sarl
inc
xchg
add
mov
test
je
shr
dec
mov
and
loope
out
xchg
test
mov
xorw
out
mov
enter
jle
adc
cltd
test
dec
fwait
push
mov
lcall
mov
shll
xlat
pop
daa
testl
xor
imulb
mov
sub
sarl
mov
fs
stc
jge
lahf
xchg
dec
sbb
sbb
sbb
mov
push
mov
xor
rcr
pop
filds
aaa
das
add
add
mov
add
fildll
jecxz
out
adc
mov
add
mov
jp
or
pop
adc
mov
jmp
adc
xor
push
and
adc
sbb
shrl
dec
xor
bound
xchg
fadd
mov
aad
shll
jne
stos
jae
inc
mov
ret
jb
daa
or
sbb
pop
in
jne
test
rorl
lods
jge
push
out
jno
lret
out
pop
push
pop
in
loop
push
jbe
frstor
decl
out
pop
push
inc
bound
inc
adc
popa
lock
mov
dec
xor
push
ds
xchg
insl
and
jno
push
adc
jle
jecxz
xor
sbb
rcl
cli
popa
mov
cwtl
hlt
pop
insb
cwtl
pushf
mov
cmc
lret
shlb
pop
or
es
fadd
repz
loop
fimuls
xchg
adc
shl
fmull
movsb
and
rorl
pop
daa
jae
ljmp
jns
xor
insb
jg
in
adc
dec
jne
inc
push
jnp
jno
cmp
xchg
enter
dec
andl
jno
or
repnz
dec
fldenv
pop
xchg
ljmp
mov
out
fiadds
mov
inc
xlat
xor
and
adc
mov
outsl
mov
stc
push
inc
jge
inc
xor
or
push
cmp
cs
mov
mov
mov
mov
add
shlb
ret
popa
cmp
xchg
adc
dec
lret
jae
jecxz
mov
fsts
daa
insl
jno
and
xchg
arpl
inc
rolb
in
fs
insl
fisttps
sub
aas
cmp
lahf
bt
in
loope
lcall
insb
lea
push
int3
pop
ja
jmp
pop
pop
popa
bnd
mov
sub
or
scas
fwait
mov
xchg
mov
decb
dec
push
ja
or
mov
rcl
add
pusha
dec
cmp
gs
lea
jecxz
shll
or
push
pop
and
cwtl
xor
test
mov
xchg
nop
jo
inc
jmp
dec
ja
daa
mov
hlt
lcall
xchg
xor
jae
fnstenvs
add
stos
pop
mov
xchg
adc
outsb
lods
jl
cld
xor
jbe
mov
mov
outsb
js
sub
addr16
fstl
dec
xor
cmp
inc
lods
gs
jne
xchg
stos
push
mov
mov
lods
mov
jno
pushf
cmp
data16
fs
jl
stos
enter
add
movsb
cmovp
mov
and
mov
pop
adc
leave
scas
mov
cmpxchg
mov
jl
imul
call
xchg
xor
ss
adc
cmpsb
sbb
sub
dec
jns
mov
fsubrs
int
fs
out
add
mov
shlb
dec
inc
sti
imul
fstl
push
dec
pushf
mov
mov
dec
xor
outsl
movsb
inc
fnsave
icebp
pop
or
jp
je
pop
adc
add
lds
lret
pop
repnz
je
dec
repz
aas
xchg
sub
lcall
jg
dec
sub
xchg
inc
inc
sbb
lret
mov
orl
insb
mov
mov
cli
leave
imul
xchg
lock
pop
into
mov
popf
stos
lcall
aam
push
les
icebp
movsl
inc
sbb
fsubrs
adc
cmc
and
pushf
dec
pop
jne
cmp
iret
into
stc
roll
dec
movzbl
call
arpl
jge
pusha
sbb
ljmp
call
stos
inc
jae
xor
icebp
or
ror
hlt
adc
xchg
test
in
imul
xchg
js
inc
cli
test
xchg
mov
adc
jo
mov
popf
cmp
pusha
pop
add
add
aam
adc
aam
adc
pop
icebp
inc
inc
imul
push
push
sbb
inc
frstor
pop
push
hlt
push
inc
sbb
add
rorb
mov
sub
orl
jmp
shrb
outsl
push
adcb
cli
out
xchg
popa
pop
hlt
bound
movsl
popa
jo
or
add
jo
add
rclb
and
add
xorb
clc
insb
pop
sub
pop
and
mov
pushf
lea
mov
sbb
cmp
scas
insb
stos
ds
cmc
or
pop
stos
pop
cmpsb
test
sub
cmpsb
stos
out
dec
dec
sarl
inc
sar
fdivl
push
pop
pop
mov
in
fmuls
subl
xor
in
out
inc
mov
lods
lock
add
rcll
mov
mov
insl
inc
daa
mov
cmp
push
xchg
dec
pop
aam
sub
sub
mov
pop
xor
sub
add
ljmp
inc
in
push
in
das
stos
xlat
pop
lahf
mov
push
xchg
das
lods
or
mov
jbe
fs
lock
call
mov
push
loope
mov
mov
sbb
sarl
sub
shll
test
xchg
jl
divb
popf
push
dec
repnz
data16
int
xor
sub
shl
mov
ret
imul
lcall
adc
dec
dec
outsl
mov
roll
aaa
dec
fbld
sti
cmp
sbb
pop
push
cmp
icebp
dec
mov
cmpsl
cmp
in
add
mov
xchg
jne
inc
jp
shll
or
je
sub
push
sbb
and
into
into
pushf
jbe
adc
sbb
xlat
cwtl
fnsave
and
bound
mov
pop
mov
xchg
int
inc
cwtl
xchg
aas
inc
jge
or
mov
loop
data16
ljmp
xchg
testb
fwait
pop
cld
or
mov
sti
cwtl
outsb
test
push
jns
cmp
ret
out
out
jg
jno
ret
sub
cmp
in
add
sbb
add
hlt
cmp
sub
popa
mov
shlb
pushl
mov
mov
fnstenv
mov
xor
jg
cmpsl
outsl
mov
cwtl
loope
mov
push
loop
push
and
adc
pop
xor
push
and
push
xor
sahf
insl
jp
in
loop
lcall
popa
cmp
loop
add
in
or
inc
cmovae
pop
mov
jg
pushf
incb
insb
ret
jbe
dec
sub
test
or
lret
addr16
mov
dec
loop
movsl
in
loop
hlt
xchg
dec
adc
inc
stos
leave
out
outsb
test
lahf
lock
or
inc
xlat
push
shrl
aas
movsb
test
mov
icebp
in
das
out
pop
fmull
lods
dec
mov
pop
fcoml
pop
push
xchg
pop
jbe
sahf
cwtl
cmp
pop
addr16
outsl
cltd
mov
push
xchg
cs
adc
jae
xlat
push
sub
sti
div
and
cli
ds
push
inc
sbb
pop
es
aam
mov
jl
test
cmp
in
cmpsl
jle
sbb
notl
mov
sbb
sub
repnz
sub
jecxz
test
mov
gs
in
add
shr
sbb
sub
daa
pop
mov
cmpsb
or
into
jo
xor
jg
push
pop
sbb
xor
sub
inc
sub
jecxz
xchg
jl
aad
je
cmp
dec
xchg
mov
or
std
and
jge
push
xor
xchg
add
add
stos
rep
fsubrs
pop
loope
inc
imul
sbb
repnz
dec
fcoms
sbb
pop
sarb
or
enter
neg
push
push
fs
mov
aas
xlat
fadds
pop
adc
inc
in
sub
push
pushf
sub
mov
mov
loope
out
inc
icebp
mov
cltd
mov
push
call
adc
and
shl
inc
pop
push
add
dec
cmp
out
sbb
add
jnp
insb
sbb
cltd
sti
ja
adc
xor
les
lods
adc
cmpsl
pop
push
inc
sub
xchg
add
popf
inc
fwait
dec
hlt
mov
repnz
xchg
add
mov
and
leave
imul
xchg
mov
add
out
stc
popa
mov
inc
mov
addr16
add
mov
and
and
jle
imul
jle
adc
inc
mov
mov
jno
icebp
add
mov
xor
sbb
imul
dec
adc
in
ds
sti
and
xchg
ja
xor
add
cmp
adc
sub
push
adc
sbb
adc
inc
lcall
jecxz
int3
add
jmp
out
add
pushl
push
add
test
fxch
ret
imul
mov
cltd
insl
mov
ja
into
mov
jge
lea
pop
cmpsl
jne
in
fistl
jnp
jae
jg
mov
and
ljmp
aaa
pop
mov
pop
xchg
xchg
movsb
imul
ds
pop
lock
imul
mov
push
mov
xchg
push
lcall
lret
sub
inc
testb
aas
insb
int
add
mov
and
inc
pop
iret
jbe
cmc
pushf
imul
lret
fldcw
subb
cmpsl
notb
and
cmp
divb
clc
add
outsl
shll
jns
mov
in
fisttpll
fsts
push
xlat
inc
aad
jb
lret
xor
xchg
scas
push
mov
mov
js
inc
std
add
imul
cwtl
adc
ss
fstps
das
jbe
divl
mov
sub
aas
je
cmp
lret
cmc
repnz
dec
add
int3
sub
jns
jg
arpl
sbb
xor
mov
subl
popf
add
fidivrl
shrb
stos
js
mov
mov
stc
xchg
fucomip
pushf
cmp
les
xchg
cmc
pop
into
lcall
push
pop
cmpsl
adc
sub
sub
sub
jae
stc
adc
pop
or
push
je
cli
cmp
das
cld
scas
imul
inc
push
jae
or
jne
lret
inc
std
inc
stos
clc
movb
add
in
cmp
pusha
test
hlt
xor
test
aas
cli
sbb
mov
outsl
push
enter
sbb
jp
add
jo
and
xor
mov
rolb
lods
or
cltd
push
hlt
imul
data16
nop
in
les
add
inc
ds
jo
push
loope
frstor
mov
jae
dec
movsb
cli
adc
cmp
fstl
inc
push
or
dec
or
sti
xchg
ljmp
int3
xchg
push
dec
leave
mov
inc
dec
dec
inc
sbb
lahf
shlb
test
adc
fs
das
push
call
cltd
in
outsl
icebp
insb
cmp
push
cmc
pop
ss
lock
jns
pop
jle
mov
sti
or
fsub
aam
sbb
xor
cmp
and
mov
nop
or
or
push
out
mov
pushf
xchg
or
mov
lret
jmp
pop
mov
outsl
lahf
sub
xchg
pop
call
in
das
ss
jmp
ja
xchg
mov
mulb
shr
mov
loop
push
rol
es
sbb
mov
call
xchg
push
imul
lds
ficomps
adc
out
xchg
les
xchg
bound
mov
dec
out
push
and
xchg
incl
sbb
sbb
fildll
cmp
jno
mov
je
or
jne
scas
and
xor
das
mov
fwait
or
push
test
ja
lods
icebp
iret
pop
adc
mov
jno
shl
fisttpl
mov
in
jne
add
std
mov
adc
stc
jl
stos
xchg
das
into
add
insb
call
int3
loopne
fsubr
fidivrs
lea
push
add
mov
mov
xor
ret
iret
mov
pop
xchg
insb
aad
cmp
test
xor
aaa
inc
mov
test
jb
insl
lods
nop
es
push
mov
push
aam
mov
faddp
dec
mov
jnp
loope
mov
adc
mov
adc
sbb
stos
cmp
test
inc
inc
xor
pop
loopne
pop
dec
pop
mov
cmp
insb
push
sbb
xchg
outsb
jle
mov
loope
pop
push
push
push
sbb
cltd
shlb
lods
push
mov
dec
int3
xchg
mov
xchg
orl
inc
jne
push
and
imul
daa
jmp
shlb
shl
push
xchg
sbb
loopne
lods
xchg
int3
jge
xchg
fwait
popf
inc
scas
inc
push
mov
aad
jg
addr16
outsl
ja
or
lcall
test
xor
jno
jmp
test
mov
push
cmc
inc
cmp
movsb
push
inc
loope
repnz
outsb
jle
int3
xchg
std
mov
insb
mov
jae
fisubrs
in
and
mov
andl
inc
dec
dec
mov
sub
andl
sub
mov
dec
stos
fsubs
inc
push
mov
pop
cmp
and
xchg
sbb
fmuls
or
sar
mov
int
ds
jl
adc
mov
pop
jno
dec
ds
lea
sub
sub
icebp
pop
lret
sbb
out
lcall
jmp
or
push
cmp
out
ja
push
and
xchg
repz
lahf
dec
sub
mov
cmc
imul
out
dec
jae
and
mov
dec
lcall
xchg
fdivrs
push
cmc
xchg
jmp
lea
das
pop
xor
in
mov
mov
ret
sub
fwait
add
stos
std
loopne
inc
dec
cwtl
into
jne
pop
jl
mov
or
inc
call
dec
and
inc
loope
dec
gs
lds
sub
fsts
mov
inc
int
mov
pop
add
data16
xlat
call
in
and
sti
sbb
or
or
clc
je
push
adc
lea
and
andl
sbb
and
add
mov
test
adc
jno
shll
ss
inc
lods
cmp
or
jne
lock
aad
xor
mov
inc
call
mov
mov
xlat
test
fcompl
pushf
test
cmpsb
xchg
mov
pop
jb
push
cld
fwait
push
push
shrl
pop
sub
xlat
je
sbb
ret
es
lock
push
sti
fdivs
push
icebp
incl
mov
das
test
adc
mov
add
jno
insl
loopne
xlat
loop,pt
push
out
std
add
cmpsl
sbb
popf
inc
test
lea
icebp
inc
push
mov
jmp
push
jo
notb
jmp
fstp
cwtl
stos
jae
cld
pop
adc
push
xchg
dec
test
nop
mov
mulb
sbb
rolb
addr16
push
loopne
inc
out
mov
pop
aas
in
scas
jns
push
push
mov
scas
lea
or
loope
repnz
out
loop
cmp
cmp
gs
mov
pop
xchg
into
pop
inc
in
adc
mov
popa
fdivr
and
divb
push
inc
jb
jl
iret
rcr
xor
push
inc
mov
lea
adc
repnz
add
aas
outsl
lcall
jns
call
cmp
loop
xor
add
xchg
xchg
push
jae
jae
ljmp
cwtl
push
mov
mov
sbb
and
testl
out
test
aad
repz
xor
jmp
fdivrp
cmp
jp
jecxz
cmpb
adc
data16
adc
and
sbb
jge
dec
push
stc
jae
nop
jne
mov
std
mov
insb
pop
mov
mov
mov
or
xchg
call
pop
popa
jnp
mov
jl
xor
push
out
rolb
jno
rcrl
loopne
lret
aaa
mov
dec
mov
cmpsb
cmp
pushf
push
push
lcall
inc
in
sub
lods
lahf
cld
cmp
sbb
sub
mov
cmpb
mov
or
jp
pop
pop
call
push
cli
add
ljmp
or
ss
scas
inc
jns
out
movsb
nop
jmp
jg
mov
xchg
mov
repnz
cmpl
xchg
ret
inc
pop
sub
cltd
test
jmp
xchg
mov
inc
mov
inc
pop
cmp
add
push
divb
pop
loope
in
cmp
xchg
cltd
ss
adc
aas
or
mov
mov
mov
adc
or
popf
js
push
sbb
and
adc
std
and
arpl
addr16
stos
mov
cmpsb
adcl
notb
pop
rorb
aad
mov
imul
jl
fnsave
aas
neg
sbb
adc
ja
rcrb
push
sub
inc
or
jne
decl
in
push
movsb
cmpsb
jno
cmpb
repnz
cs
leave
aas
mov
cmp
insb
inc
mov
jg
das
aad
test
sbb
and
popf
push
stos
sbb
mov
test
sbb
and
xchg
mov
mov
jo
xor
push
lret
cltd
pop
leave
popa
cli
lods
icebp
addb
jp
dec
push
mov
add
adc
negl
jg
fidivrs
test
cmpsb
lock
aaa
lds
mov
or
xor
ret
fwait
das
or
das
push
sbb
mov
aas
leave
cwtl
out
lahf
and
xor
jns
pop
pavgw
andl
push
inc
mov
enter
or
sti
out
sbb
sub
inc
test
inc
xor
or
mov
xchg
dec
rorl
push
and
pop
sarl
xor
adc
js
rcl
ljmp
test
repnz
mov
jno
ljmp
jns
cmp
dec
add
std
xchg
dec
out
push
mov
mov
stos
fsubl
pop
push
cmp
xor
dec
mov
cmpsb
or
mov
js
and
in
ret
jo
and
sarb
pop
jg
insl
jl
imul
mov
and
out
sar
fildll
lock
cltd
lds
ljmp
shrb
mov
out
call
add
dec
push
mov
mov
mov
and
mov
imul
inc
bound
xchg
mov
or
out
push
xchg
sbb
mov
jge
pop
cmp
outsb
mov
sub
dec
in
push
or
push
cld
sbb
jne
jp
loopne
imul
les
sub
jecxz
sar
popf
jbe
test
add
pop
ss
rclb
leave
pop
pop
jno
mov
sub
cli
inc
xchg
aaa
inc
cmpsl
andl
adc
ja
fchs
xor
push
ja
ret
repnz
sub
shlb
pushf
dec
mov
jb
mov
ss
pop
pop
mov
fstl
enter
mov
add
sbb
jae
iret
out
in
xchg
outsl
cwtl
imul
sbb
push
rcrl
mov
mov
mov
xchg
popf
outsl
mov
add
or
fcomps
and
sbb
lret
lret
inc
das
cltd
call
out
imul
insl
push
stos
sarl
repnz
dec
fxch
cmp
mov
je
sub
inc
fsubp
cmp
and
push
clc
iret
inc
xorb
daa
push
dec
lret
and
outsb
dec
lahf
or
ss
and
xor
xchg
mov
xor
pushf
pop
test
pop
mov
pop
jecxz
or
mov
clc
sub
mov
cmpsb
adc
xor
lret
jp
std
xor
mov
pop
shlb
xor
pop
and
and
sbb
cmc
mov
test
and
push
push
fdivl
lea
xchg
mov
cmp
xlat
fcompl
mov
dec
stos
ds
push
mov
push
lea
or
shl
and
arpl
add
jns
int
mov
aas
xchg
mov
addr16
sub
leave
lcall
in
es
mov
mov
inc
inc
and
nop
cs
imul
in
sub
pop
push
cmp
fcmovnu
adc
mov
inc
sbb
stos
lock
in
fldenv
xchg
cmp
adc
fwait
dec
les
enter
inc
jae
inc
push
rclb
sbb
fiadds
repnz
and
jmp
add
inc
test
in
dec
ret
neg
dec
jbe
add
jbe
arpl
or
and
jnp
mov
xlat
pop
adc
jecxz
fildl
add
cmp
xor
sbb
in
psubd
sub
push
data16
adc
aas
subl
stos
je
adc
cmpsb
sub
fistpll
xchg
mov
mov
mov
and
add
and
adc
sub
xchg
test
into
sbb
inc
inc
cmp
add
stos
pop
mov
mov
push
pop
jge
popa
in
jae
jne
mov
pop
pop
int3
ljmp
mov
ret
xor
inc
sarl
clc
arpl
pusha
inc
sar
dec
cmp
jbe
mov
cld
push
dec
pop
push
sub
ret
pop
mov
dec
mov
pusha
iret
call
cmc
mov
pop
loope
std
mov
mov
xor
push
xor
in
mov
cmp
add
arpl
repz
mov
mov
insl
in
in
push
sbb
or
dec
ds
inc
insl
iret
sbb
mov
jno
mov
insl
lock
jns
addr16
nop
push
mov
xor
mov
and
xor
inc
and
or
rorl
jnp
test
lcall
add
divb
outsl
ds
jle
bound
mov
sub
test
jle
xor
or
icebp
xlat
fcmovnb
cmpsl
lret
inc
cmc
mov
mov
adc
dec
fadds
fucom
pop
bound
call
ret
pop
fisubs
xor
das
and
testb
cmp
sahf
sbb
sti
pop
mov
inc
push
sub
add
out
fwait
add
xchg
scas
inc
push
lret
pop
or
mov
loopne
inc
push
inc
or
aad
enter
mov
mov
jae
jne
out
cltd
push
rcrl
in
and
ror
or
mov
inc
in
xor
cmc
adc
push
mov
movsl
scas
or
rcll
daa
inc
push
mov
lds
mov
rcrl
mov
leave
sub
pop
negb
sbb
push
cld
loop
add
movsb
xor
mov
pop
mov
dec
lret
shll
repz
das
divl
into
sbb
lds
outsl
push
adc
xchg
jb
fimull
add
pop
xor
daa
xchg
mov
pop
frstor
add
or
insl
sub
xor
aad
sti
out
adc
out
xor
or
mov
outsb
dec
sub
leave
add
adc
push
daa
push
adc
hlt
cmp
fisubrs
and
inc
std
jb
testb
out
popf
addr16
in
and
inc
cmpsb
aad
cmc
andl
push
xchg
mov
shl
dec
sub
adc
repz
fidivl
rcrb
out
js
dec
out
fcomp
aam
lahf
fmuls
insb
divb
jmp
cld
or
ret
inc
sbb
insb
inc
iret
dec
ret
pop
or
cli
push
test
int
or
jmp
fsubrl
add
mov
pop
divl
add
pop
push
out
xor
mov
loope
mov
push
or
les
mov
enter
subb
sbb
jb
incl
shrl
popa
ss
aas
ja
mov
jno
les
pop
cmp
cmpsb
lods
popf
dec
out
mov
test
in
inc
or
test
in
adc
jae
pop
sbb
inc
in
jmp
shl
je
addl
cmc
stc
fildll
lahf
jecxz
data16
repz
and
in
stc
dec
mov
cmc
imul
outsl
add
fistl
xchg
push
movsl
jge
xor
mov
mov
mov
test
xor
scas
adc
dec
xor
jne
cli
jp
test
nop
mov
lds
add
sahf
sbb
std
roll
add
cmp
dec
in
mov
jle
fstl
adc
dec
inc
xchg
push
data16
mov
push
out
addr16
push
push
inc
lods
and
or
gs
pop
adcb
mov
xorl
fwait
jle
outsl
or
scas
vpsrlw
adc
pop
pop
nop
pusha
int
push
adc
in
cmp
xchg
sbb
aaa
sub
fbstp
je
aaa
xor
in
jge
xchg
loop
and
mov
movsl
lret
mov
sub
pushf
int
jge
out
cmp
mov
loop
cmp
inc
psubsw
mov
aad
insl
sub
fwait
into
aaa
les
lret
pop
and
mov
pop
loopne
repz
imul
sbb
lcall
xor
and
push
sbb
in
push
adc
cmpsl
jo
add
jae
popa
std
dec
or
int3
xorl
add
icebp
lock
dec
lea
outsb
mov
pop
fildl
lret
xchg
dec
cltd
xchg
pop
stos
and
adc
and
popl
add
fcomi
jbe
push
pop
mov
fbstp
and
ret
jp
out
push
pop
lds
mov
inc
cmp
mov
mov
cli
jle
sbb
add
push
insl
jge
outsb
in
fcoml
mov
gs
sbb
dec
stos
daa
pop
arpl
in
mov
xchg
rcr
and
xor
fidivl
sbb
adc
cs
out
sbb
scas
imul
sbb
dec
pop
inc
dec
leave
mov
push
or
jae
push
and
pop
call
dec
shlb
in
xchg
push
mov
jb
mov
mov
pop
cmpsl
int3
std
xchg
jno
lea
int3
hlt
add
sbb
mov
fbld
lods
pop
inc
test
ret
pushf
adc
push
pop
push
pop
out
cmpb
inc
flds
bt
nop
inc
jg
xor
jae
mov
sbb
test
bound
negl
je
cli
xchg
push
lahf
dec
aas
pop
gs
or
jecxz
pop
fs
sub
popa
sub
mov
leave
push
mov
push
jg
sub
jecxz
inc
jle
ret
fimuls
mov
dec
sub
add
stos
fnstenv
xchg
jge
orb
outsl
stos
or
or
mov
repnz
push
push
fldl
cmp
mov
mov
pop
popf
loope
pop
stos
adc
and
mov
push
cmp
add
xchg
push
add
test
lret
add
pop
stos
add
shl
or
inc
dec
test
inc
push
repz
mov
mov
arpl
add
xorps
shrl
roll
fadds
call
sub
sub
fbstp
fstl
pop
cmp
pop
xor
cmpsb
push
ja
imul
out
cli
push
push
xlat
jns
or
inc
shl
aas
mov
cli
xor
lods
mov
mov
icebp
push
sahf
in
jne
mov
push
or
les
fidivl
pop
push
les
ret
jge
stos
shll
xlat
sbb
fbld
je
cmpsl
fadds
xlat
ljmp
lds
cmc
movsl
fisubrl
and
cmp
or
bswap
or
insl
adc
mov
fmul
push
mov
pushf
adc
aad
jb
jp
fcmovbe
sub
sub
or
iret
insb
or
mov
push
sub
pop
cld
outsb
add
add
jbe
jecxz
mov
cmp
or
jmp
insb
mov
fdivr
pop
sti
lahf
mov
and
push
mov
fdivr
inc
lret
adc
gs
outsb
and
into
push
mov
xchg
xor
push
pop
dec
mov
adc
adc
xchg
out
fisubrl
loop
add
js
push
hlt
jns
xchg
imul
movsb
out
xchg
mov
xor
lret
mov
mov
jmp
mov
push
or
lds
adcl
aam
sub
shr
jb
jp
ret
mov
sbb
lea
fs
add
imul
movsb
mov
sbb
out
popf
mov
sti
repz
mov
mov
enter
int
xchg
jns
xchg
cmpsb
pop
not
adc
out
mov
or
stc
push
add
cmp
ret
pop
jg
jp
test
cmpl
push
repz
movsl
xchg
add
rorl
xchg
and
or
lds
push
fstps
xchg
iret
sub
daa
add
cmp
adc
adc
mov
adc
incl
lret
cli
jne
addl
xchg
pop
mov
dec
jle
jmp
inc
rorb
mov
mov
test
or
mov
rorb
mov
das
xchg
pop
cmpsb
jge
and
scas
leave
notb
lods
aad
or
push
lahf
mov
pop
xchg
sti
jmp
xchg
mulb
xchg
jmp
or
cmp
mov
adc
enter
lret
lret
dec
cmpsl
inc
pop
mov
dec
or
push
xor
js
ret
push
mov
call
data16
lret
aas
data16
rolb
sbb
pop
or
pop
fs
add
daa
test
nop
daa
into
jbe
ret
shr
sbb
in
adc
daa
mov
or
push
aaa
pop
mov
popa
ss
in
and
ljmp
add
shrl
push
stos
sbb
jmp
push
cmp
outsb
lahf
das
dec
fstps
popf
cmp
out
mov
clc
push
cmp
dec
dec
fwait
cmovno
lahf
jnp
stc
jle
jmp
mov
dec
mov
decl
pop
shlb
addl
jecxz
stos
stos
push
dec
mov
mov
push
dec
cmc
test
enter
xchg
jbe
mov
shrb
fildll
outsb
std
xchg
adc
pop
and
jbe
xchg
movq
pusha
divl
jo
mov
int3
mov
in
or
fiaddl
sti
xchg
xchg
lahf
mov
xor
scas
das
mov
scas
jmp
stos
xchg
gs
and
xchg
or
pushf
xchg
pop
js
pop
cmp
ret
gs
das
inc
and
in
mov
mov
push
mov
jge
mov
push
xor
mov
and
cmp
pop
cmp
out
inc
mov
loope
push
mov
push
fbstp
das
jle
lahf
and
testb
xorl
shll
cli
scas
xchg
jge
das
sbb
cmp
pop
push
or
lds
daa
cltd
xchg
push
imul
addr16
imul
mov
adc
out
xchg
orb
push
mov
arpl
add
xchg
cmp
adc
mov
pop
xor
xchg
loopne
adc
pop
inc
int
mov
cli
xor
aaa
and
xchg
add
int3
enter
pusha
sbb
mov
push
mov
loope
mov
mov
xchg
dec
mov
cmp
insl
pop
lods
push
mov
sahf
dec
cmpsb
push
loope
pop
loope
jo
xchg
roll
cmp
or
imul
jle
xor
aam
jl
inc
iret
inc
mov
leave
les
xor
mov
sub
jbe
inc
stc
loop
pop
push
push
shl
out
pop
nop
sub
or
xor
and
inc
pusha
jb
dec
inc
dec
stos
xchg
into
or
pop
inc
test
nop
jge
rcrl
aas
xchg
jno
dec
push
sub
dec
mov
lret
mov
int3
rcll
pop
mov
mov
mov
dec
xchg
jge
cmp
push
cld
sub
pop
jmp
mov
addr16
ljmp
add
movsb
add
call
fwait
mov
popf
subl
outsl
popa
mov
rorl
inc
les
pop
sbb
jne
xor
test
loopne
out
mov
pushf
movsb
outsl
mov
fbld
mov
jle
sub
imul
and
nop
xor
mov
inc
sub
lret
out
ljmp
sub
mov
ret
pop
mov
push
mov
mov
repnz
mull
push
jae
insl
gs
loop
fbld
outsb
inc
and
mov
pop
js
lock
aad
sti
in
push
pop
dec
in
pop
mov
inc
insb
lods
rcrl
rorb
push
cld
out
movsl
cmp
sub
das
add
stc
cli
xor
jecxz
sub
daa
xchg
and
sub
adc
fdivs
fstps
in
ror
or
ja
sbb
push
xchg
push
jb
sbb
or
add
cli
and
int
scas
out
popf
pop
add
inc
cmp
mov
int
lahf
hlt
into
pop
das
and
jle
push
cmpsb
mov
icebp
testb
fists
sub
dec
imul
add
mov
ficomps
out
fs
inc
dec
insl
es
negb
arpl
mov
or
fdiv
mov
jnp
test
fnsave
mov
aam
inc
push
iret
add
push
pusha
ljmp
pusha
hlt
sub
adc
insl
and
inc
movsl
xchg
hlt
call
fldt
mov
lods
pop
sub
lods
mov
dec
and
pop
mov
ror
jno
pop
cmc
inc
loop
jecxz
out
sbbl
cld
aad
stos
push
lret
add
outsb
leave
lcall
xchg
fcmovbe
mov
xchg
add
mov
adc
inc
std
data16
mov
or
iret
push
or
mov
fsubrs
mov
mov
pop
mov
scas
jns
mov
sbb
dec
in
lret
push
xchg
shl
in
pushf
inc
shl
mov
stos
hlt
xor
insl
dec
sahf
cmp
inc
scas
xchg
fidivrl
and
loopne
sbb
dec
mov
and
sub
dec
adc
pop
rclb
add
xor
cmp
data16
pop
xor
cmp
xor
fcompl
mov
cwtl
rcrl
mov
xor
pop
xchg
inc
popf
adc
fsubrl
jg
jns
pushf
repz
imul
jp
imul
lcall
sub
loop
mov
push
sbb
in
xor
lret
in
cmp
xor
mov
jne
sarb
je
pusha
orl
call
subb
inc
jbe
nopl
loope
mov
mov
xor
cmp
mov
pop
pop
sahf
enter
inc
jno
out
insb
jbe
mov
imul
xchg
or
inc
dec
les
adcl
iret
int
mov
lods
ljmp
inc
or
add
sub
jae
pop
mov
xchg
loopne
add
into
shll
jne
mov
test
scas
fldenv
jmp
push
fbstp
fnop
pushf
pop
pushf
aas
test
inc
mov
jmp
add
xorb
std
icebp
shlb
out
mov
iret
push
jno
jns
ret
xchg
out
cmc
or
inc
loopne
inc
test
daa
mov
rcr
sbb
test
sbb
push
loop
addr16
xor
stos
fsubr
mov
xlat
inc
adc
je
outsl
add
sbb
mov
data16
aas
in
add
push
popf
jne
sbb
pop
fadds
mov
xchg
lods
pop
push
aaa
inc
dec
lahf
jge
pop
adc
dec
shrl
dec
out
add
bound
pop
aaa
sarl
mov
or
ljmp
dec
rorl
imul
stos
test
test
push
addb
jg
sub
ffree
mov
sbb
xor
clc
sahf
fsubrp
xor
mov
shll
outsl
mov
push
or
and
lods
adc
mov
dec
mov
dec
fistl
sub
sbb
mov
mov
and
popa
dec
lods
cmp
cmpsl
int
push
mov
cmp
xor
pop
movsb
add
pop
adc
hlt
das
lock
stos
push
dec
adc
adc
repnz
sarl
push
mov
push
shlb
xchg
inc
cli
sub
clc
stos
mov
xor
dec
lahf
loopne
fcoml
arpl
cli
or
fmuls
adc
cmp
int3
fistl
pusha
jno
stos
scas
loope
addb
in
leave
roll
icebp
jb
rol
inc
pushf
daa
aaa
imul
push
sub
cmp
pop
cmp
xrelease
xchg
jne
push
mov
mov
scas
pop
lods
call
mov
icebp
in
adc
pop
les
jle
add
cmp
mov
inc
mov
hlt
pop
pusha
inc
sub
push
inc
pushf
jno
add
fwait
cltd
fadds
xchg
xchg
add
inc
mov
ret
cs
aas
mov
out
mull
add
mov
push
mov
and
jb
and
daa
lahf
aas
xchg
xchg
test
sub
out
fisttps
push
shrl
mov
dec
iret
adc
movsb
or
add
xlat
sbb
push
lods
pusha
fmul
movsb
imul
fsincos
xchg
ret
idivb
or
pop
movb
aas
negl
cmp
test
add
lea
and
fcoml
adc
sbb
add
addr16
and
inc
push
xchg
cmc
mov
mov
repnz
adc
pusha
pusha
scas
add
in
aam
pavgb
mov
iret
jnp
cli
xchg
xor
int
mov
add
or
addl
pop
ja
jmp
lea
out
bound
push
ja
inc
inc
test
pop
lods
ja
in
mov
jo
loopne
mov
inc
dec
dec
sti
pop
or
popf
cwtl
movsb
movsl
add
jns
rcrl
jp
sbbb
popl
xor
je
push
mov
ds
pushl
sbb
sti
dec
mov
js
xor
pop
jecxz
lock
mov
inc
lock
sbb
mov
or
lret
rorl
lock
dec
xchg
insl
shlb
int
xor
and
ficoml
das
cmp
push
inc
or
pushf
test
lea
ficomps
test
jp
icebp
push
daa
mov
jb
jns
dec
int
mov
push
pop
rolb
dec
mov
dec
sbb
xchg
sub
mov
add
dec
clc
push
pop
cmp
data16
js
ret
out
add
scas
aas
dec
jno
push
xchg
int3
cs
push
cwtl
dec
xchg
xchg
jae
dec
gs
daa
lods
cmp
add
movsb
scas
fcoms
mov
lods
jmp
out
inc
pop
dec
fldcw
mov
adc
push
lds
std
jge
fidivrl
add
or
fmulp
popa
xchg
xchg
loope
jbe
ret
and
stos
jae
stos
arpl
shl
scas
inc
push
xor
lret
test
scas
in
hlt
int
stc
sbb
out
nop
pop
push
push
mov
mov
loop
push
mov
incl
mov
xlat
sti
cli
xchg
sbb
jp
add
push
into
pop
jmp
sbb
repnz
adc
xchg
fcmovne
mov
xor
test
sub
dec
ja
cmp
call
icebp
push
mov
jns
test
adc
mov
repz
mov
xor
movsb
push
dec
dec
addr16
cmpsl
jl
jg
ret
clc
out
aas
divb
mulps
loope
sbb
cmpsl
cli
cmp
jg
pop
scas
cmpsl
aaa
push
push
pop
adc
rep
xor
sbb
mov
mov
iret
test
push
add
pop
shl
xlat
clc
bound
fiadds
movzbl
repnz
aam
lahf
inc
test
aam
repnz
in
lcall
jp
inc
add
inc
jne,pt
test
jecxz
movsb
mov
aaa
sbb
call
shll
mov
es
insb
xchg
add
lret
inc
mov
daa
and
sbb
rol
repnz
shr
divb
loop
jg
lock
rolb
add
pop
cltd
outsl
inc
mov
push
lods
sbb
cmpsb
sahf
pause
sub
sbb
outsl
mov
xorb
jg
xchg
repnz
fdivp
xchg
fstps
and
rolb
mov
sbb
push
add
push
int
and
fisttps
xchg
pop
jl
jg
jne
fbld
add
sub
ret
out
adc
dec
jge
cmp
push
cmpsl
pop
ds
imul
divb
xchg
dec
sub
xchg
sbb
into
repz
push
dec
or
sahf
leave
stc
mov
add
mov
mov
ljmp
pop
gs
add
mov
arpl
dec
pushf
cmc
dec
dec
adc
mov
push
mov
mov
sbb
xor
cmp
dec
cmp
cmpsl
sub
lds
cs
or
xchg
imul
pop
pop
sbb
push
shlb
inc
sbb
push
pop
or
int3
mov
or
jp
xor
fmull
insb
sti
pop
adc
pop
pop
push
push
in
int
and
jl,pt
sbb
out
adc
push
hlt
repnz
lahf
xchg
scas
clc
mov
insl
sub
call
fcomi
cmp
mov
sbb
pushf
pop
xor
shr
ret
jge
mov
add
mov
addr16
lods
cmp
dec
or
or
repnz
mov
cs
mov
or
xchg
lea
out
punpcklwd
lds
loope
add
imul
mov
lods
inc
mov
xor
pop
js
hlt
push
sbb
test
lcall
jge
push
and
dec
xor
or
pop
movl
mov
inc
xchg
push
add
test
daa
mov
popa
sbb
or
xor
fidivrl
aaa
mov
inc
adc
out
lahf
into
and
iret
test
fisubrs
lea
sbb
cwtl
pop
pop
lahf
icebp
cmp
sub
or
sbb
jg
push
adc
push
mov
xlat
xor
aad
hlt
pop
lods
jbe
fldt
test
dec
and
mov
ljmp
mov
ljmp
shrb
in
add
dec
lods
jno
stos
into
sub
and
cmp
stos
insl
out
stos
movsb
mov
fcmovnbe
add
add
pop
inc
insb
jg
mov
imul
es
dec
negl
add
xor
inc
cmp
dec
xchg
dec
xlat
pop
adc
pop
or
repnz
push
xchg
fldcw
jmp
and
push
adc
sahf
std
sbb
out
je
outsb
mov
loop
mov
xlat
lret
pop
pusha
adc
dec
adc
push
shlb
mov
test
fsts
fisttps
dec
dec
push
out
or
mov
mov
and
pop
cmpsl
adc
xchg
sub
xlat
fisubs
out
sub
sbbl
imul
mov
stos
push
and
call
cmp
push
sub
mov
pop
jecxz
pop
jbe
ficompl
cltd
int3
in
and
fisubl
imul
fcoml
int3
pop
mov
outsl
mov
sti
dec
inc
and
sahf
test
js
dec
in
imul
movb
xchg
mov
or
xor
and
addr16
add
in
dec
cmpsl
mov
stos
mov
and
xchg
fbld
adc
mov
sub
add
xor
push
cltd
imul
out
rcrl
add
xorb
and
add
inc
mov
in
or
jno
cmp
inc
outsb
cmp
or
jle
jo
xchg
movsb
inc
pop
xchg
fisttpll
and
push
xchg
mov
lcall
inc
and
pop
or
push
je
hlt
mov
xchg
dec
add
imul
xlat
adc
pop
mov
inc
or
icebp
fldenv
or
jo
repz
mov
jne
fstpl
hlt
xor
subl
mov
push
xlat
aad
sub
and
push
cwtl
jo
xor
pusha
data16
lret
sub
imul
or
mov
iret
pusha
and
cmp
pop
and
and
push
outsb
adc
fisubrs
inc
jne
mov
or
ret
mov
iret
xchg
loope
xchg
fmuls
dec
and
jb
mov
adc
pop
aas
les
arpl
call
sahf
pop
daa
mov
ret
mov
aaa
mov
pop
imul
xchg
leave
push
test
mov
dec
gs
lods
ja
ljmp
les
loopne
jnp
mov
mov
ljmp
xchg
mov
inc
dec
gs
sub
and
das
push
xchg
sub
pop
or
test
aaa
add
pop
inc
pop
inc
sti
lods
ljmp
fs
adc
cmpsb
cmp
sahf
push
leave
dec
decb
push
lock
inc
ficoml
xor
dec
clc
lods
out
bound
sarb
pop
in
fidivl
and
cli
mov
mov
lret
test
pop
div
data16
daa
add
shrl
sbb
push
and
cld
lret
sub
pop
jle
imul
scas
sbb
loope
mov
sub
iret
or
mov
mov
jl
jno
add
hlt
dec
mov
push
aaa
push
fwait
arpl
adc
outsl
pop
in
pop
or
pop
xor
adc
push
xor
jecxz
mov
pop
xlat
cmp
lock
jne
pop
xor
in
ret
js
pusha
aad
push
or
mov
out
jp
stos
pop
push
pop
repz
repnz
mov
cmp
in
in
mov
ret
sbb
pop
repz
addr16
or
jmp
aad
push
repnz
popa
pop
cmp
es
or
and
cmpsb
jmp
aad
dec
push
repnz
xor
clc
push
andb
js
test
push
popa
push
add
mov
xchg
out
sub
int3
add
cmp
rcrl
lock
or
rclb
adc
dec
scas
mov
rorb
ds
and
mov
rcl
mov
mov
idivl
cmp
scas
cmp
repnz
mov
cs
fimuls
out
sti
aam
mov
jmp
outsl
and
lds
cwtl
adcb
pop
mov
xor
xchg
push
ret
xchg
mov
sbb
cmp
mov
mov
loope
mov
mov
jg
jp
aaa
sub
mov
mov
push
mov
imul
jae
adc
jl
mov
ja
fstpt
cmp
icebp
sbb
dec
sti
xchg
jo
lret
sub
sti
push
jns
push
push
mov
std
adc
and
jle
cmp
dec
and
fsts
insl
je
pop
roll
out
lahf
jae
lahf
cld
xchg
loop
add
gs
jmp
add
add
ds
xchg
fcmovnbe
mov
lret
sub
jne
loope
inc
call
add
mov
adcl
mov
cmpb
fimull
stos
lret
push
mov
ret
sbb
jnp
fcmovnbe
dec
nop
jecxz
jno
push
inc
sbb
mov
loop
movsb
arpl
stos
shll
scas
cmc
mov
mov
loop
sbb
add
adc
mov
shlb
ljmp
or
lahf
jg
jecxz
xchg
push
hlt
pop
or
add
mov
icebp
cli
lret
ret
cld
test
arpl
mov
pop
cmp
testb
pop
xor
jp
add
adcb
jg
gs
insb
in
cs
fcmovne
or
xchg
or
add
xchg
test
test
aas
cmp
int3
mov
ds
mov
xchg
ljmp
outsb
movsl
mov
dec
int3
or
lock
adc
in
sub
aas
push
notb
mov
stc
popf
dec
out
cld
lods
fsts
jle
add
xor
pop
mov
dec
in
jle
sar
lfs
stos
inc
repnz
ljmp
add
mov
push
jo
sbb
insl
adc
cwtl
daa
and
testl
cmp
movsb
jno
bound
push
bound
xchg
scas
flds
aaa
rol
lret
mov
xor
mov
jg
mov
jbe
daa
or
addb
mov
les
and
sbb
ljmp
fstpl
pop
xor
pusha
repz
fstpl
add
hlt
adc
lods
les
fs
dec
int
pop
mov
xchg
inc
std
adc
mov
mov
add
mov
xlat
popa
jl
pop
insl
xchg
mov
or
inc
push
dec
jge
mov
gs
or
test
cmp
pop
inc
or
inc
push
mov
xor
and
add
inc
int3
pusha
lea
movl
mov
mov
adc
sbb
hlt
ret
mov
sbb
lahf
pop
pop
negb
pop
cmp
rclb
mov
jno
lahf
test
divl
test
xor
sub
mov
aas
sbb
pop
pusha
mov
pop
pop
scas
lret
jecxz
xor
push
loop
cmpsl
imul
or
movaps
mov
shlb
inc
stos
repz
inc
xor
jne
mov
mov
pop
or
jne
scas
inc
rcrl
mov
pushf
cmp
mov
repz
fdivr
or
clc
pop
out
add
dec
pop
out
cltd
test
mov
fists
in
sbb
fwait
leave
rorb
sbb
jmp
bound
stos
loopne
cs
movsl
daa
mov
rcll
pop
dec
js
pop
jmp
cld
jo
stos
out
push
int
sub
cmpsl
xchg
cli
repz
lahf
xor
rcrw
cli
add
pop
mov
pop
cmp
and
push
sbb
inc
enter
pop
dec
pop
cli
sbb
push
int3
or
mov
and
cltd
mov
adc
dec
push
js
sub
cmp
mov
lds
mov
inc
lds
loop
sub
inc
hlt
pop
jb
stos
nop
xor
jb
std
xchg
dec
sbb
int
jge
movsb
insl
paddq
push
lea
test
mov
faddl
cmc
xchg
or
sqrtps
insb
dec
mov
inc
push
les
fsubs
lds
test
push
test
add
or
gs
cmp
cmp
pop
inc
adc
addb
cs
clc
shrl
sbb
in
inc
bnd
mov
rorl
clc
movsb
pop
fcoms
fmul
fstpt
inc
mov
mov
adc
jno
into
cmpsb
xlat
imul
sub
and
in
cmp
pop
xchg
sbb
std
xlat
pop
aam
cs
leave
mov
mov
es
mov
jb
sbb
shlb
and
ret
cwtl
clc
repz
xor
xor
push
es
icebp
imul
pop
ljmp
sub
dec
and
inc
sbb
dec
mov
ret
lea
std
pop
sub
stc
or
stos
push
mov
adc
cltd
imul
jp
out
push
mov
add
pop
xchg
and
pop
or
add
push
nop
pushf
test
imul
inc
mov
lret
cmc
in
lea
hlt
sub
mov
ret
xchg
mov
cmc
ret
out
notl
jle
xchg
jne
dec
cmp
inc
adc
inc
loop
pop
mov
dec
xchg
lods
loopne
mov
sub
mov
jo
or
jl
pop
xchg
or
adc
xchg
aam
pop
aam
pop
nop
clc
fcmove
leave
xchg
test
mov
jb
sub
cmp
dec
cmp
jge
test
and
mov
pop
imul
cmp
jg
sub
popa
mov
outsb
popf
push
xchg
sbb
ret
aad
mov
sbb
and
or
test
xor
or
lods
or
cmp
jl
lea
push
inc
xchg
lods
std
popf
lahf
jbe
xor
lret
mov
std
cmp
cwtl
pusha
movsl
xchg
shr
movsl
sub
push
mov
shlb
in
incl
loopne
pop
jne
popa
stos
kxorb
testb
js
pop
xor
jae
mov
mov
stos
incl
xchg
cmp
jge
addr16
ss
outsl
scas
pop
lods
and
in
or
cmc
movsl
fcmove
add
cmp
xchg
lret
fdivs
ja
dec
xchg
cs
xchg
mov
addr16
mov
into
dec
js
clc
or
sar
pop
loope
push
adc
stos
dec
lock
jns
scas
mov
xor
jp
and
adcb
or
int
arpl
imul
icebp
jmp
inc
cld
into
clc
pop
daa
test
fcoml
inc
adc
adc
xchg
ja
aam
add
xchg
sbb
xchg
dec
imul
int3
mov
inc
adc
imul
and
call
or
pushf
pop
adc
test
negl
imul
pop
pop
into
push
imul
cmpb
dec
sbb
inc
jp
aas
js
cmpsb
sub
xorb
mov
add
jle
ret
mov
pop
adc
push
xor
xchg
popf
nop
inc
xchg
scas
fprem1
hlt
mov
dec
dec
or
popa
jae
pop
jp
fwait
rorb
jo
iret
xor
in
outsl
xchg
xchg
sub
add
sub
enter
data16
sbb
loope
inc
mov
inc
test
sar
int
cld
add
inc
lret
lods
lea
data16
into
dec
xor
fsubs
pop
in
dec
dec
inc
fwait
jl
sbb
lret
mov
adc
hlt
out
jns
push
mov
cwtl
test
jg
mov
das
std
cmc
ret
out
fldenv
lock
dec
ret
scas
popf
mov
in
and
sub
xlat
xchg
jno
mov
sub
and
or
je
aad
pushf
cs
xor
repz
mov
out
es
outsb
jle
xchg
aam
mov
mov
rcr
roll
xchg
mov
push
xor
add
inc
xor
mov
sub
aaa
push
mov
add
popa
adc
int3
adc
aam
stos
push
mov
mov
xchg
pop
mov
inc
dec
and
or
xchg
dec
in
mov
sbb
ljmp
pop
pop
in
pop
imul
sub
mov
test
xor
inc
mov
pusha
cmpsb
outsb
xor
fidivs
insb
or
push
mov
adc
out
xchg
xor
or
cwtl
push
xchg
data16
mov
mov
test
and
push
je
or
jmp
outsb
fsubrl
mov
scas
xor
shll
mov
jge
xor
sub
cmp
stos
int
scas
or
and
mov
sbb
cmp
jmp
cmp
add
add
sub
lret
popf
and
jmp
or
popa
shrl
xchg
test
mov
movsb
mov
inc
mov
add
cltd
sbb
lods
lods
ret
data16
fdivr
mov
fs
xlat
into
and
imul
or
jne
std
cmp
in
push
mov
xchg
in
jno
fstpt
ror
dec
pop
inc
loop
add
je
sub
je
mov
in
pop
adc
mov
in
aaa
aaa
xorb
repnz
bnd
inc
xchg
mov
shr
xchg
or
lods
popa
loop
cmpsb
xchg
int
xchg
in
push
jne
mov
leave
aaa
out
leave
int3
adc
dec
scas
jne
cwtl
xor
adc
xchg
mov
std
xchg
jecxz
inc
sub
lds
aad
xchg
jle
xchg
ret
xchg
mov
cmpsb
cwtl
movsb
leave
mov
int
outsl
and
cmp
rolb
test
mov
out
jnp
cli
pop
jno
jp
dec
pop
pop
sub
ret
repnz
cwtl
dec
fsts
lock
inc
rol
mov
idivb
icebp
xor
ljmp
adc
stc
push
jnp
test
adc
mov
jns
inc
mov
dec
dec
or
mov
pop
pop
or
or
test
inc
ja
or
loop
pop
popw
inc
enter
sbb
mov
xor
jno
cld
inc
cmp
jae
in
inc
mov
dec
dec
stc
mov
lock
jle
std
xchg
and
inc
and
inc
adc
insl
mov
and
ret
push
add
test
hlt
inc
adc
vmovaps
sbb
inc
in
jmp
pop
xor
mov
je
jge
mov
mov
cmp
mov
xor
xchg
stos
inc
in
cs
sub
mov
and
jmp
push
cmp
fcmovb
or
push
int3
lret
ja
in
jg
sbb
rcll
or
dec
xchg
cwtl
or
lock
mov
xor
mov
pop
stc
inc
enter
xchg
dec
mov
push
scas
xlat
mov
sbb
cltd
rclb
xchg
lea
adc
jge
fmull
call
xchg
cmp
out
pop
push
push
in
mov
les
push
jne
inc
xlat
arpl
sub
popf
es
xchg
loope
aad
mov
push
add
mov
sbb
mov
je
int3
dec
lods
test
hlt
dec
push
out
bound
push
mov
dec
fst
das
pushf
test
cmp
shlb
dec
xor
imul
or
mov
shll
iret
cmp
xchg
movsl
idivl
dec
mov
mov
divb
mov
mov
insb
adc
cmp
inc
push
jo
push
aam
scas
in
lcall
inc
adc
les
mov
fnstenv
cwtl
pop
sbb
add
scas
inc
fldt
cmp
mov
jbe
push
loope
enter
inc
pop
lahf
push
xchg
or
push
gs
dec
sub
xchg
jns
pop
cmp
icebp
outsb
testl
mov
les
stos
fistps
out
rcr
jge
jbe
inc
aas
or
ret
jl
arpl
push
xor
cmp
push
lret
mov
push
cmp
mov
sbb
dec
imul
cmp
add
sub
cli
add
lret
in
pop
xchg
lock
cmp
cmovle
adc
fsubl
dec
sti
sbb
shrd
pop
fwait
ret
pop
push
mov
pop
pop
lock
mov
cmp
movsb
inc
outsl
test
gs
xchg
stos
push
xor
mov
push
xorb
add
cwtl
dec
sbb
rcr
adc
mov
cmp
add
and
out
dec
sbb
mov
mov
sbb
inc
das
ret
fs
addr16
rorl
sub
cmpsb
dec
push
mov
add
xchg
movsb
ljmp
mov
xor
test
jae
adc
shr
pusha
xchg
mov
jecxz
test
je
inc
call
stos
pop
ret
mov
mov
out
mov
add
and
scas
inc
push
mov
xchg
lds
pop
pop
mov
movsl
lcall
mov
cmp
icebp
dec
sti
pop
rcr
push
xlat
xchg
dec
pop
mov
mov
adc
lret
sbb
pop
jg
dec
mov
andb
scas
in
stc
jae
shll
popf
xchg
stc
mov
fiaddl
cmp
pop
and
lds
ds
je
dec
pop
add
adc
hlt
pop
and
pop
add
fdiv
mov
jb
xchg
mov
into
cmp
pusha
push
xor
repz
mov
mov
dec
mov
loopne
shll
lods
mov
outsl
insb
pop
sar
ficompl
mov
or
and
flds
jp
lret
mov
mov
rorb
imul
mov
mov
shlb
push
les
in
or
adc
enter
adc
lods
or
lds
movsl
and
jne
shll
ret
xlat
sub
jbe
subb
xor
loope
ja
lods
add
stos
lds
push
bound
scas
jge
mov
push
xchg
mov
mov
or
cmp
insb
and
add
outsb
sbbl
roll
add
into
push
dec
cli
into
xchg
xchg
jle
inc
jno
rep
pop
js
gs
pushf
or
mov
add
movsl
cmp
adc
and
pop
xor
inc
mov
push
cmc
outsb
mov
adc
addr16
and
andl
loope
scas
jae
ret
pusha
imul
push
sub
cmp
pop
rorl
sbb
dec
inc
push
sar
in
lahf
daa
mov
sub
js
in
push
mov
ret
push
add
jb
int
mov
hlt
lods
jb
add
mov
mov
je
sti
test
sbb
nop
jmp
movsb
xchg
mov
and
jg
and
lock
imul
aam
or
addr16
cmp
jnp
dec
jmp
sub
daa
aas
pop
pop
and
add
jecxz
sarl
aam
sub
cmc
xchg
jno
stc
outsl
loop
xor
sti
pop
iret
imul
lahf
ja
sarb
into
mov
mov
loopne
mov
dec
aas
pop
sub
fisubrs
int
dec
je
push
in
mov
cvtps2pd
and
mov
jb
jae
or
stos
in
pop
push
mov
fsubp
xorb
jne
mov
add
loopne
js
mov
add
push
pop
lcall
add
jmp
insb
sub
xor
mov
in
mov
jecxz
test
call
xorb
stos
lods
mov
aad
jmp
jns
arpl
or
dec
sbb
jp
push
dec
out
cmp
xchg
pushf
and
or
xchg
xor
movsb
faddl
mov
in
ret
pop
into
sub
leave
cmp
sahf
pusha
pop
inc
lcall
inc
add
sub
pop
pop
xchg
mov
stc
or
dec
pushf
and
arpl
inc
inc
fwait
test
push
add
dec
adc
xor
jge
scas
mov
aam
mov
xchg
out
lock
cmpsl
mov
leave
push
ds
ror
fistpll
jne
movsl
lock
clc
or
lcall
xchg
xor
paddsw
xor
sub
mov
lahf
jg
sub
push
and
int
or
ja
bound
jge
aad
add
fidivrl
jo
xor
cli
and
xor
cld
sbb
jbe
sbb
out
inc
pop
xor
js
mov
or
ja
cmpsb
cmp
and
pop
sarb
pop
jg
adc
and
ljmp
hlt
jb
out
sahf
inc
jae
pop
cmpsl
std
inc
test
and
arpl
mov
lea
jg
inc
das
and
mov
dec
mov
adc
fs
and
lcall
adc
cltd
enter
sbb
js
iret
aas
sub
test
shlb
sbb
cmp
fidivrs
jne
mov
jo
dec
sub
mov
mov
or
sbb
sahf
xchg
imul
inc
sbb
mov
dec
aad
jbe
add
or
sub
mov
das
pop
xor
jne
adc
add
add
pop
cmp
enter
in
lea
daa
std
movsl
inc
lea
bound
pop
movsl
jno
and
dec
out
push
lret
dec
iret
xor
jne
dec
adc
rcl
dec
xchg
mov
dec
or
push
mov
mov
lods
mov
inc
push
push
cmp
adc
imulb
ljmp
inc
fadds
adc
or
scas
inc
add
popa
mov
mov
sbb
repnz
jnp
pop
pop
pop
cmp
xor
mov
adc
sbb
lret
jbe
shll
cmpsb
mov
aaa
pop
pop
cmp
jp
mov
fwait
xchg
lret
cmp
in
fld
sbb
scas
add
lds
jae
adcl
jl
inc
inc
xor
pusha
lret
or
inc
push
daa
enter
je
arpl
lods
test
jle
repnz
std
cmp
mov
pop
fstpl
sarb
ret
subb
int
fiadds
pop
push
pop
push
in
and
imul
movsb
iret
mov
adc
test
sub
push
sti
mov
fisubrl
cltd
xchg
in
ror
pop
es
idivl
cmp
fdivs
push
loopne
inc
mov
fstpt
in
std
adc
sbb
adc
xor
xchg
popf
test
jecxz
stos
test
mov
lds
lahf
jne
jmp
add
cld
faddl
fs
test
out
sub
out
loop
xchg
aas
mov
testl
jo
test
pop
cmpsl
loope
cmp
test
adc
add
cld
xor
inc
in
cwtl
jp
xlat
outsl
icebp
je
xor
in
out
rcrb
pop
imul
xor
xor
inc
aas
test
cli
int3
daa
nop
push
test
dec
mov
jp
lds
aam
xchg
jg
push
filds
test
adc
mov
and
push
ja
scas
fidivrs
test
ficoms
push
scas
dec
jns
xchg
mov
inc
gs
inc
mov
testb
loope
pushf
inc
and
loopne
mov
sbb
cmp
je
mov
clc
or
inc
or
sub
xor
sub
add
push
mov
mov
push
rcr
adc
popf
jle
mov
popa
movb
sbb
popa
or
push
push
mov
mov
xor
add
adc
jns
ja
adc
aaa
add
cli
pop
mov
xchg
in
int
mov
ja
cmpsb
inc
or
addl
jae
jae
and
push
jo
mov
push
lods
jns
jge
je
aaa
xchg
mov
jmp
cmp
cmp
push
dec
fdivrs
aas
ljmp
cmpsl
adc
inc
rolb
adc
or
sub
ss
or
divl
jp
test
add
push
ljmp
xchg
rorb
in
call
cmp
shrl
idivb
out
adc
mov
xor
testl
aas
cmpsb
xchg
sbb
rep
add
test
fsubr
cmc
fs
pop
addl
fucomi
mov
loope
xchg
or
xchg
imul
leave
mov
fs
in
mov
mov
mov
pop
pop
xchg
cmc
je
xorl
cli
fidivs
fwait
add
jno
inc
pop
inc
pushf
pop
pop
mov
adc
cmp
add
xorb
jae
dec
test
dec
cmp
mov
int3
out
in
adc
or
mov
xor
inc
outsb
outsl
test
lcall
shlb
stos
cmp
jae
ja
lret
inc
cmp
sub
xor
popa
repz
es
fsubp
adc
imul
adc
sub
orb
inc
xchg
in
fidivrl
push
daa
cmp
pop
xlat
popa
popa
pop
hlt
mov
rclb
add
inc
add
dec
popf
mov
sbb
outsl
cmp
xchg
push
adc
in
xchg
enter
sbb
xor
inc
out
mov
mov
add
cmp
and
fisttpll
outsb
das
insb
cmp
lret
or
pop
cmp
je
shrl
pop
jns
fisubrs
ja
cmp
mov
popw
fwait
inc
mov
xlat
inc
push
imul
push
mov
dec
mov
andw
inc
bound
mov
sahf
outsl
sub
shll
mov
and
or
in
sub
adc
mov
xchg
stc
cmp
mov
or
push
outsb
lahf
or
and
and
add
push
jmp
shlb
adc
dec
fcmovbe
mov
xchg
rcl
xchg
ja
mov
dec
adc
adc
push
out
scas
negb
xor
lock
out
in
mov
arpl
and
ficoms
or
nop
mov
or
out
push
fmull
mov
addl
and
aaa
add
cwtl
dec
xchg
mov
and
imul
les
shlb
cmp
popf
cmp
sbb
dec
lcall
fistl
jle
mov
push
push
jae
sbb
pop
adc
jne
repz
add
jne
inc
mov
lock
and
and
lret
lcall
nop
push
out
test
fcmovb
jle
mov
and
sti
popa
movl
mov
jae
movsb
xlat
adcl
lods
scas
xchg
rolb
mov
pop
aad
adc
pusha
mov
adc
cli
loop
loopne
jle
mov
mov
inc
call
test
mov
lret
jecxz
and
lds
cmc
inc
pop
lds
add
ljmp
sbb
or
inc
add
fdiv
xorb
enter
mov
pusha
iret
inc
mov
fwait
ret
cwtl
mov
jno
sahf
mov
sahf
inc
mov
mov
jp
ljmp
mov
mov
mov
add
fwait
mov
push
add
ds
jg
xor
sbb
jnp
addb
idivb
icebp
mov
lahf
or
in
push
jb
cs
ljmp
addr16
mov
push
faddp
repnz
add
inc
sti
mov
fwait
or
into
mov
das
jmp
test
shll
jbe
int3
sbb
pushf
aaa
dec
icebp
leave
pop
inc
test
dec
scas
adc
or
jo
in
fsubr
xchg
add
gs
rcr
xchg
ret
lret
dec
adc
xchg
push
pusha
fcmovu
cmc
pop
call
xchg
cmp
movsl
and
mov
nop
dec
out
jmp
mov
cmp
cmpsl
stc
pusha
insl
or
std
ss
push
outsl
cmp
scas
jbe
mov
push
and
xchg
shrl
scas
in
lock
sarl
add
addr16
enter
fs
mov
cmpsb
cld
push
ficomps
xor
xchg
jl
dec
pop
outsb
icebp
fimull
xchg
sahf
or
out
jmp
mov
jbe
pusha
nop
imul
jnp
orb
push
outsl
imul
int
mov
and
rcr
mov
mov
nop
mov
push
orl
out
jg
movsl
loop
bndstx
test
xchg
lods
in
aad
decl
stc
sub
pop
outsb
cltd
pop
lods
bound
int3
repz
xchg
roll
pop
dec
mov
xchg
call
insl
xchg
jl
shrb
movsl
sbbl
mov
fstpl
jg
mov
xchg
addr16
loope
xchg
adc
or
test
pop
in
sti
bound
jecxz
gs
dec
repnz
lret
mov
insl
dec
popa
mov
ljmp
xchg
cmpb
mov
je
jg
adc
dec
mov
pop
adc
jns
int
xchg
mov
xor
in
test
pop
aaa
sbb
sbb
repnz
test
push
cld
mov
shll
sbb
sti
out
enter
jns
lea
bound
cmp
jge
inc
bound
xlat
in
scas
std
adc
ja
adc
mov
clc
cltd
cwtl
sub
xor
imul
xor
lret
inc
add
mov
fsubr
lahf
repnz
mov
and
enter
insb
pop
std
je
fcmove
adc
pop
sbb
mov
jno
push
sbb
daa
add
push
outsl
fiadds
push
cmc
xlat
cmpsl
or
cld
xchg
pop
add
mov
dec
repnz
fiaddl
sahf
sahf
scas
fisttpll
inc
out
add
js
aad
jmp
jg
mov
out
fisttps
je
std
cli
dec
loop
jp
in
data16
lret
dec
mov
mov
sti
fadds
cmp
incb
mov
or
out
into
adc
ljmp
pop
rol
fistl
in
jp
rolb
pushl
into
inc
ficoms
mov
jb
cmpsb
mov
push
aam
inc
pop
mov
out
icebp
pusha
mov
mov
ljmp
cmp
mov
bnd
pop
call
clc
lds
xchg
notb
mov
and
push
jne
popf
mov
lea
mov
imulb
shlb
repz
jl
enter
or
adc
xchg
mov
arpl
add
xchg
mov
loope
cs
popf
cli
mov
popf
xor
pop
jl
into
jge
popf
mov
rcrb
fistps
hlt
xchg
and
and
mov
scas
je
lds
xchg
add
addr16
sbb
jl
jae
stos
xchg
pop
xor
mov
insb
stc
adc
push
sbb
xor
add
jg
das
sbb
xor
pavgb
je
sub
pop
xor
mov
add
sub
rorb
cs
ljmp
push
fwait
repnz
pop
inc
out
adc
push
sub
ja
adc
push
sbb
and
xchg
pop
stos
mov
mov
insl
icebp
data16
pop
add
add
sahf
inc
push
jecxz
jnp
test
pop
call
adc
fdivrs
fxch
out
mov
mov
in
stos
loop
push
call
cmpsl
jle
add
call
mov
orl
pop
sti
xor
aad
ss
dec
adc
xchg
jp
in
movsb
mov
test
or
add
pop
cmp
test
andb
inc
imul
and
or
outsl
xor
sub
stos
lcall
mov
mov
idivb
push
pop
inc
xor
lds
dec
jge
mov
lret
push
cmpsb
fs
imulb
add
insl
icebp
inc
dec
mov
jge
xor
sbb
lret
inc
insb
mov
ret
and
push
gs
fsubs
or
xor
and
ds
and
out
jns
pause
mov
aas
push
add
ds
push
mov
mov
movsl
daa
and
xchg
adc
dec
mov
and
frstor
aam
or
lcall
lahf
add
push
xor
ss
fstps
inc
bound
imul
add
xchg
or
sub
aam
fistl
fdivrl
int
cmp
cmp
aaa
dec
add
and
js
stos
jne
push
xchg
ss
loope
outsl
cmp
ret
push
dec
pop
jg
das
cltd
fcoms
xor
test
cwtl
cli
mov
popl
push
decb
mov
fs
lahf
cmpsl
ds
pop
mov
outsb
jle
push
jl
xor
adc
mov
lcall
das
xchg
es
or
data16
out
and
shr
dec
cli
or
or
imul
cmc
jmp
scas
mov
outsb
sub
sub
mov
or
es
sub
jmp
push
test
sbb
mov
pop
mov
stos
xlat
jmp
pushf
cmp
sahf
or
fistpl
pop
arpl
fwait
popf
sbb
cmpb
fmul
pusha
dec
and
cmovne
aas
xchg
idivl
mov
or
fwait
in
enter
sub
inc
loop
mov
xor
pushf
test
add
jbe
xchg
push
leave
out
dec
mov
daa
movsb
mov
sbb
sub
pop
loopne
jle
out
inc
push
xor
loopne
rorb
pusha
push
inc
mov
addb
sbb
cmpl
jbe
cli
std
mov
rcrb
xor
test
scas
ljmp
jp
sub
cmp
notb
repz
adc
push
popf
pop
pusha
or
aad
lea
add
lods
mov
mov
lahf
rorb
inc
mov
outsl
xor
movb
mov
mov
insl
pop
mov
mov
adc
xchg
movsb
cmc
icebp
dec
bswap
mov
lcall
in
stos
cmp
rclb
je
test
std
add
jg
out
lcall
fcmovnu
shlb
sub
rorb
jg
pop
stc
pop
test
sbb
in
sarl
call
fadd
ljmp
push
mov
inc
subl
and
out
fistps
push
mov
xchg
out
pop
outsl
enter
in
cmp
xor
mov
in
adc
sub
jmp
sahf
push
iret
mov
sub
jle
or
fucomp
jno
and
or
sub
pop
adc
push
in
xlat
push
inc
cmp
scas
add
gs
out
sbb
int3
xchg
mov
xchg
sbb
fnstsw
ret
push
mov
loope
std
inc
pop
inc
jg
rcrb
in
dec
push
inc
mov
insb
lods
push
mov
pushf
je
daa
sub
sub
xor
test
mov
lock
pop
hlt
js
lods
movsw
xor
or
ds
cmp
push
jbe
and
adc
inc
inc
icebp
mov
jnp
gs
lods
xchg
arpl
outsl
cmpsl
xchg
in
loope
and
and
stos
pusha
lret
mov
clc
xchg
adc
sub
and
xchg
and
nop
pop
test
fisubrs
cli
fnstcw
sar
jne
lods
in
popa
push
pop
les
pop
int
movsl
imul
sbb
stc
pop
add
jmp
sbb
fimull
sbb
rorb
cli
cmpsb
pop
xchg
out
jmp
mov
pop
arpl
lahf
lock
fisttps
fdivl
mov
ss
and
jp
and
shll
jmp
pop
add
sbb
testl
lock
mov
push
stc
push
mov
js
aam
loop
mov
xchg
cmc
lock
rep
movb
jo
hlt
adc
inc
sbb
mov
xchg
sbb
loope
pop
arpl
lods
ss
lret
bound
mov
enter
orl
mov
or
xchg
mov
repz
add
shrb
xchg
mov
dec
insb
test
lret
mov
vcvtss2sd
adc
fistpll
lcall
pusha
jne
popf
arpl
mov
stos
int3
icebp
inc
or
mov
mov
or
or
mov
and
push
fnstsw
scas
push
xor
mov
cld
bound
ret
mov
in
xor
loope
pop
mov
dec
and
push
movsl
repnz
inc
mov
jno
xchg
cli
jge
lods
sub
pop
fcomps
adc
sbbl
inc
push
rol
cmp
lods
dec
mov
xchg
insb
dec
dec
int3
mov
mov
dec
lret
xor
jmp
js
adc
out
scas
in
mov
mov
and
daa
xchg
mov
es
adc
adc
cmp
cwtl
sub
pop
jns
add
xor
call
and
icebp
dec
cmp
popf
xchg
or
sbb
out
xor
icebp
adc
cmpl
push
loop
into
ret
mov
mov
icebp
jge
xor
jo
lods
sub
cltd
xorl
jbe
enter
adc
cmp
xchg
aam
scas
and
lret
sub
xchg
sbb
jmp
popa
stos
inc
ficoml
pop
sarl
cmp
mov
jecxz
sbb
mov
or
mov
fwait
lock
mov
imul
in
add
sarb
mov
popf
xchg
xchg
ret
jl
stos
out
into
inc
mov
xchg
pop
lcall
hlt
popf
mov
push
push
jns
push
lret
leave
inc
insl
mov
shll
call
ja
cmp
leave
jno
add
mov
repz
xor
add
inc
ja
fs
popa
sub
xchg
in
jp
lret
xchg
cwtl
sub
fmuls
mov
rcrb
mov
lahf
je
lock
add
sub
xor
add
aaa
je
ret
subb
les
push
shrb
and
ficoml
lret
fimuls
and
push
inc
jns
adc
push
insl
mov
adc
cmpsl
sub
and
or
dec
mov
mov
lahf
nop
inc
int
loope
dec
std
jae
ljmp
aad
aas
or
jge
cmp
popf
push
shlb
imul
adc
cmpsl
enter
sahf
fs
adc
or
and
in
jno
mov
jns
add
inc
arpl
mov
adc
cmp
shrl
xor
and
adc
shrl
ficoml
test
add
pop
cltd
out
mov
xchg
push
icebp
nop
and
and
mov
out
xor
cs
adc
jl
dec
movsl
jp
nop
mov
dec
mov
insl
xchg
sub
xchg
aad
mov
pop
mov
jecxz
xchg
pop
sahf
xchg
scas
sub
xchg
pop
aas
bound
mov
push
ss
sbb
mov
sbb
out
lock
cmp
or
fs
dec
cmpsl
sub
jmp
les
sub
jg
xchg
cli
movsb
xchg
pop
lods
out
int3
pop
inc
hlt
dec
mov
mov
ss
daa
mov
jl
scas
sub
fsub
sti
jnp
test
int
loopne
out
push
or
sbb
jae
les
cmp
iret
add
bound
pushf
pop
xchg
pop
lods
jl
fisttpll
sub
test
mov
lds
xor
test
insb
jle
xchg
je
mov
mov
inc
adc
xchg
xor
fwait
stos
lret
sbb
fistpll
mov
and
mov
fdivrl
in
cld
test
ds
dec
pop
jge
clc
iret
sarl
dec
mov
das
and
icebp
dec
shl
adc
pushf
incl
push
mov
jbe
out
scas
mov
xchg
add
jle
jns
pop
add
insl
jmp
and
and
repz
lock
add
cli
add
mov
jns
repz
cli
and
mov
add
cmc
inc
inc
adc
insb
pop
xor
ljmp
mov
stos
jno
push
pop
cld
cmp
jbe
js,pt
dec
and
cmc
sbb
cmpsl
int
pop
dec
xor
mov
sbb
add
cmp
mov
sbbl
pop
adc
dec
hlt
or
push
loope
orl
dec
push
leave
jae
cld
sti
xchg
mov
xchg
mov
aas
sub
int
enter
scas
lods
ss
and
cmp
cmpps
loopne
and
es
out
mov
adc
scas
dec
movsl
jae
sti
adc
mov
adc
rcl
pop
cld
out
ror
mov
sub
test
pop
mov
orb
pop
inc
push
mov
fnsave
mov
jns
fimuls
push
push
pop
cmp
push
lea
leave
jnp
dec
outsl
std
int
cs
jp
add
addb
sar
scas
cs
push
shrb
int3
fdivrs
pop
jae
leave
addl
mov
lods
bound
add
scas
sub
push
xor
sub
ja
cmp
sbb
sbb
test
outsb
sub
xchg
rcrl
sub
jge
cmc
inc
ljmp
xchg
mov
dec
imul
call
inc
inc
mov
dec
ljmp
push
pop
jne
mov
xchg
add
jg
push
push
lea
fisubrs
jnp
mov
xlat
pusha
xchg
mov
dec
inc
sbb
popa
xor
push
cmp
icebp
std
inc
and
pushf
lea
sbb
pop
sub
test
je
jmp
shrb
pushl
xchg
mov
call
lods
push
cli
dec
repz
adc
inc
sti
scas
mov
sub
xor
sbb
out
imul
mov
addr16
lcall
mov
or
push
hlt
sarl
fwait
adc
int3
jae
inc
lds
jno
fistpll
loop
out
push
aas
lret
xchg
arpl
sbb
and
inc
adc
xor
popf
mov
push
pop
xor
daa
cmpsl
ds
jnp
mov
movsl
xor
cmp
mov
jle
lock
call
sbb
inc
xchg
cmp
orl
mov
loopne
mov
cmp
ret
add
dec
enter
test
dec
or
fisubrs
add
filds
xchg
and
dec
push
popa
movsb
jg
fisubs
loopne
negb
arpl
sbb
push
dec
mov
cmpsl
dec
ret
notl
pop
inc
cmp
mov
adc
mov
es
mov
add
pushf
and
lods
sub
pop
dec
es
or
mov
rcrl
xchg
pop
cmp
into
mov
push
lahf
or
xchg
or
rol
pop
lock
xchg
pusha
int3
js
cwtl
sbb
not
push
ficoml
dec
inc
movsl
std
dec
inc
out
popa
inc
sub
test
fstpl
xor
adc
jmp
arpl
imul
clc
mov
jmp
sbb
jle
in
inc
adc
enter
je
les
dec
call
xchg
roll
pop
addr16
jnp
je
movsb
xchg
xchg
mov
xchg
cli
sub
in
stos
cmpsb
loop
and
cld
xor
stos
clc
sbb
jg
out
dec
add
mov
jmp
psubd
xchg
leave
and
cmp
and
cld
xor
aas
icebp
test
fldt
mov
or
xor
xchg
add
adcb
js
popa
dec
out
int
xor
add
mov
jno
dec
sbb
add
ja
cli
inc
jb
mov
enter
scas
mov
mov
pop
xlat
repz
mov
adc
aam
xor
and
jne
mov
and
movb
mov
mov
adc
sub
mov
sbb
and
les
mov
fucomip
cli
jnp
notl
in
incb
and
mov
push
pop
inc
mov
push
xchg
mov
jne
aad
xchg
mov
mov
pop
fs
loope
and
out
cmpsb
jno
cmp
and
scas
sbb
add
jno
cmpsb
xlat
and
stc
cmp
mov
sub
sub
or
sbb
outsb
mov
jns
and
imul
mov
out
sub
rorl
insl
arpl
mov
icebp
push
push
lea
fsqrt
add
outsb
adc
fs
or
jle
sub
jo
jbe
cwtl
add
jno
xlat
cmp
push
repz
mov
repnz
and
jbe
push
mov
xor
or
les
push
push
int3
cltd
data16
pop
push
sbb
in
add
stos
lods
ret
dec
lcall
scas
pop
inc
je
mov
cltd
dec
pop
cli
test
xor
in
dec
cs
adc
adc
pop
pop
or
cli
inc
mov
cmp
add
subps
loopne
shll
popa
adc
sub
fisttpll
cwtl
push
fsubl
jg
fwait
imul
mov
lret
cmp
sbb
rorb
iret
xor
popa
and
inc
cmc
xchg
jb
pop
mov
cltd
lods
mov
pop
popa
jne
jge
stos
insl
shr
fwait
inc
jle
mov
std
daa
xchg
or
xor
jne
or
inc
and
roll
lret
xor
sub
and
rcrb
xor
int
test
test
scas
negl
pop
sahf
pop
loope
sti
cmpsb
mov
bound
out
push
jle
dec
mov
outsl
ss
or
ret
ds
scas
cld
jle
ret
fwait
out
mov
xchg
mov
adc
jle
adc
repz
les
mov
xor
cmpb
scas
sbbb
test
mov
jp
dec
js
xbegin
outsl
std
lock
cs
mov
inc
ss
nop
mov
out
sti
dec
stc
andl
xchg
fstpt
mov
adc
cld
fldcw
negl
pop
pop
jle
outsl
movsb
fnstsw
xor
inc
mov
daa
jo
or
ficoml
mov
jbe
imul
jbe
jl
push
mov
dec
jbe
and
push
fs
aad
imul
push
xchg
lret
dec
lods
je
dec
in
mov
scas
xlat
daa
mov
adc
clc
and
rcrb
lret
mov
sub
cmp
jne
mov
push
dec
outsl
jecxz
xchg
test
pop
loop
jnp
pop
dec
xchg
js
xchg
push
inc
mov
popf
stos
ret
dec
cmp
xlat
push
repnz
dec
aas
leave
xchg
in
mov
cmpsb
sub
mov
mov
out
xor
das
stos
dec
cmpsl
jbe
cmpb
cmpsl
xchg
rcl
je
gs
add
or
mov
addr16
pop
repz
pop
outsb
fimull
imul
xor
sbb
mov
bound
add
push
cmc
adc
lods
inc
fidivrl
daa
jecxz
inc
pop
insl
mov
add
jg
or
daa
mov
mov
sub
add
and
cli
mov
dec
push
insl
repnz
ja
lods
dec
xlat
sbb
xchg
add
mov
push
mov
insb
sub
add
xor
pop
mov
repz
in
mov
mov
psubsb
sbb
arpl
adc
in
nop
xchg
inc
pop
mov
loopne
in
mov
call
cmpsl
push
lret
adc
push
orb
aam
lret
outsb
mov
jns
dec
scas
mov
scas
imul
push
adc
xchg
scas
jns
push
cmc
xchg
rcr
or
lcall
in
jg
js
cwtl
rcrl
push
sub
ljmp
lods
and
out
mov
push
clc
adc
jne
jg
pop
enter
or
jo
mov
pop
iret
mov
push
cli
lea
add
in
int3
fwait
in
clc
cmc
je
mov
adc
cmpb
movsl
mov
or
dec
sbb
lods
inc
adc
inc
push
ss
pop
inc
mov
xlat
lds
fisttps
adc
decl
sbb
inc
insb
jae
cmp
adc
xor
pop
inc
ret
stos
scas
in
pop
or
loopne
mov
add
cmp
jo
push
das
cli
lret
ffree
sti
push
arpl
insl
and
enter
adc
iret
lock
cmovp
cli
mov
xchg
pop
sbb
mov
pop
pop
or
dec
jne
xor
ss
imul
jnp
out
jg
loop
adc
adc
pop
mov
xor
test
xchg
push
iret
popf
jge
sahf
cmp
xchg
sub
rorl
add
cs
jb
mov
outsb
shr
adc
neg
pop
jb
jl
pmaxsw
cmpsb
dec
testb
loopne
jb
pop
ss
data16
xor
sarl
mov
imul
out
int
ss
ror
jo
addl
lea
jp
xchg
arpl
into
jae
mov
and
lds
data16
mov
outsl
aad
and
lcall
push
sub
ja
jae
cltd
mov
jne
aas
pop
cmp
and
xchg
fst
push
jb
push
xchg
xchg
cmp
int3
pop
pop
sub
xor
xor
xor
jmp
and
cmc
das
xchg
mov
mov
xchg
xchg
xchg
xor
dec
xchg
popf
or
sbb
fisubl
jg
pop
mov
add
or
cmpsl
xor
loop
movsb
mov
jbe
adc
jl
or
jno
sub
mov
pop
outsl
out
mov
shlb
adc
pushf
je
push
cmp
push
repz
mov
test
mov
add
mov
push
lcall
mov
mov
sbbb
mov
pushf
jecxz
out
mov
add
xchg
sub
mov
add
js
adc
loope
test
or
xor
movsl
cmp
push
pop
add
imull
mov
shll
loop
jns
mov
dec
cmpb
lret
rcrl
or
sub
cmp
in
and
repz
push
inc
popa
arpl
sbb
push
roll
mov
mov
mov
jp
push
cmpsl
sarl
pusha
xlat
dec
stos
xchg
and
in
jl
jne
enter
fnstsw
call
and
lret
cmc
pushf
std
dec
jl
adc
out
js
es
jns
iret
insb
sub
adc
fwait
scas
push
clc
rol
ficomps
daa
jl
pop
cmpsl
sbb
or
filds
lods
jbe
xor
jge
dec
add
int
out
dec
mov
in
repnz
mov
adc
mov
xchg
jae
lock
test
test
mov
push
stos
test
bound
mov
adc
or
lahf
divl
dec
pop
lcall
lret
sbb
cltd
stc
and
pop
rcrl
loopne
aam
in
mov
xor
mov
xchg
inc
push
test
and
rcrb
mov
sub
enter
inc
cmp
hlt
inc
scas
iret
push
add
in
jp
inc
movsb
and
pop
pop
arpl
sub
cmp
test
lret
dec
pop
nop
cmp
push
je
mov
inc
and
daa
add
cmp
pop
cmp
sti
push
push
shlb
inc
xor
jecxz
mov
shlb
jnp
popa
arpl
out
int
dec
push
scas
addr16
and
sbb
lea
imul
and
fdivr
aad
push
aas
ds
mov
xchg
add
test
dec
inc
mov
add
and
pop
inc
pop
push
outsl
mov
aam
dec
dec
mov
idivl
inc
insl
dec
cltd
rcll
sbbb
insb
push
out
bnd
iret
enter
ss
out
sbb
aad
jle
cmc
shlb
out
xor
and
pop
push
cmp
dec
mov
pop
xchg
ja
add
cmp
adc
jmp
sti
mov
push
push
mov
jne
mov
icebp
mov
sti
adc
stos
add
test
cmp
add
sbb
xchg
fsubl
and
test
sub
rcrb
adc
loop
pop
jb
jne
xor
mov
lock
push
lahf
imul
fcomps
jb
sbb
jo
jb
fists
and
call
rcrb
lock
decb
mov
jnp
ror
xchg
add
mov
add
or
jno
jno
sub
test
movsb
push
repnz
xchg
inc
dec
in
subl
push
pop
flds
cmp
fldt
adc
push
fs
mov
popa
inc
push
lret
and
insl
and
out
hlt
repz
cld
arpl
jns
inc
xor
repz
mov
ss
sub
popf
mov
mov
loope
je
inc
aad
in
inc
xchg
and
xchg
xlat
imul
pop
add
mov
inc
fnstsw
jge
lods
push
shll
cwtl
ficoml
ret
pop
inc
ja
gs
xor
xchg
mov
sub
pop
dec
mov
dec
xor
or
pop
sub
cmpsl
add
jmp
dec
xchg
lret
mov
or
mov
scas
fwait
fs
adc
push
adc
scas
test
clc
movsl
out
jb
je
adc
mov
imull
pop
incl
mov
xchg
into
mov
mov
icebp
cmpsb
cmp
popa
retw
mov
in
rcrb
in
js
decb
sbb
cmpsl
and
sbb
cmp
pusha
mov
jb
int3
add
es
sbbl
das
xlat
pop
xor
push
mov
dec
out
pushf
sbb
dec
ss
jno
sahf
dec
int
daa
bound
jns
lahf
lcall
inc
cld
mov
and
lcall
scas
lret
out
mov
popf
jge
ja
inc
ds
ss
inc
sbb
out
aad
adc
cmpb
xchg
xchg
lahf
jb
js
add
lret
fstl
mov
cmp
dec
push
xchg
ret
mov
ret
inc
repnz
sub
lock
lods
movsb
aam
sub
enter
lock
ret
lret
mov
add
pop
inc
dec
push
stos
adc
sti
outsb
mov
inc
div
jmp
xchg
push
xchg
mov
test
fidivrl
sti
subb
les
push
add
loopne
xor
xchg
sub
nop
cltd
sub
shrb
cmpsl
xor
dec
xor
mov
clc
ss
mov
add
pop
or
or
js
daa
push
mov
es
mov
lods
sbb
add
push
push
add
test
daa
fsubl
ret
test
in
and
push
and
mov
adc
push
repnz
dec
adc
jae
nop
jg
ds
sbb
cmp
pop
cmp
repnz
in
sbb
xchg
movsb
mov
pop
xor
push
insb
or
or
mov
lahf
movsl
xor
mov
or
int3
sub
shrb
inc
inc
dec
sti
push
mov
or
idiv
test
jecxz
cmp
lahf
scas
pusha
and
sti
bound
cs
test
insb
inc
and
je
shll
sbb
mov
xchg
ret
negb
push
mov
xor
test
notl
or
mov
les
addr16
sbb
jle
pop
ficompl
mov
pop
testb
pop
xchg
lret
mov
mov
ja
and
push
add
cmp
loop
cmp
andb
jg
rcrb
jecxz
push
test
fdivrl
je
and
add
xchg
add
mov
les
and
out
xchg
sbb
rcl
leave
xchg
in
pop
scas
call
and
push
dec
inc
pop
pop
scas
ja
fldcw
shll
lock
adc
xor
adc
ljmp
ss
push
pop
dec
xchg
je
outsb
xchg
stos
pop
sbb
loopne
popf
inc
pop
ret
sti
or
fwait
int
jecxz
mov
mov
movsl
roll
outsl
adc
pop
lea
xchg
mov
mov
incb
xchg
iret
push
imul
sub
mov
push
add
data16
in
outsb
push
and
jecxz
sub
outsl
sub
jle
mov
leave
push
repnz
ljmp
test
cld
adc
jl
cmpsl
lock
mov
or
sbb
jns
push
in
jg
mull
inc
mov
out
pusha
mov
bound
push
pop
and
into
int
addl
iret
push
andl
test
xorl
jge
fisubl
jb
push
daa
and
imul
sarb
push
add
jmp
aaa
push
insb
ret
sti
leave
pop
sarb
add
jns
xchg
inc
cmp
notb
dec
sbb
sub
mov
jo
jp
jp
test
mov
call
xchg
sbb
push
xchg
and
pop
mov
sahf
call
jmp
lahf
push
and
push
jmp
fwait
push
and
lcall
jmp
pop
shll
cwtl
cmc
in
or
sbb
mov
hlt
daa
divl
xchg
outsl
and
mov
sbb
sti
inc
inc
sarb
add
mov
push
popa
test
ss
cwtl
add
test
mov
fsts
xchg
cmp
xchg
sti
push
iret
push
cmc
pop
xlat
dec
sbb
xor
fisubl
out
jns
loopne
mov
jbe
xchg
jnp
add
mov
mov
cmp
lock
dec
xchg
mov
test
inc
or
add
repnz
mov
repnz
adc
lods
xor
sti
fbld
les
enter
mov
mov
out
cmpsb
xchg
test
pop
dec
jle
dec
test
xlat
jno
test
mov
mov
xchg
sbb
adc
mov
out
pop
push
into
mov
fstl
push
pushf
push
lods
adc
cmp
clc
into
xchg
fmulp
data16
pop
cmp
fcomps
stos
sbb
mov
ja
dec
mov
inc
jl
filds
imul
xor
push
xchg
mov
mov
jns
or
movsb
fwait
pop
rcrl
or
mov
inc
rcl
and
movsb
dec
sbb
mov
cli
cmc
leave
xor
fstps
fldenv
pop
pop
insl
mov
adc
adc
sbb
xchg
arpl
ror
xor
pop
cmp
test
fisttps
pop
popf
sub
push
or
popf
mov
sarb
xor
inc
add
call
mov
fildll
cwtl
jae
out
xor
sbb
test
rorb
xchg
xchg
xor
fs
pop
sub
pop
mov
adc
mov
jmp
push
pop
push
imul
mov
movsbl
outsl
mov
in
js
insb
outsl
cwtl
cmp
les
mov
icebp
fidivrl
outsl
cli
add
dec
inc
xchg
jmp
xorb
in
lret
fsubr
dec
jmp
mov
lret
jbe
sti
sub
sub
xlat
popf
mov
imull
loop
fiaddl
pop
insl
inc
lds
dec
mov
mov
das
or
ret
dec
movsbl
fnsave
ret
jmp
xchg
mov
dec
sbb
insl
dec
jge
pushf
inc
jno
sti
inc
push
pop
mov
inc
shrd
xchg
cmp
cs
pinsrw
aad
xchg
pop
pop
mov
and
xor
mov
mov
jae
fdivrs
cmc
xlat
sub
bound
jmp
das
xor
mov
adc
lahf
rolb
aaa
arpl
mov
dec
mov
xor
dec
mov
int
mov
sbb
adc
push
xchg
xor
cmp
xor
add
dec
push
cmpsb
mov
imul
mov
sub
push
dec
insl
aas
sti
into
mov
movsb
ss
dec
jae
gs
ficoms
pusha
out
xchg
mov
ja
cmc
jo
in
and
ss
sahf
cwtl
mov
or
and
outsb
jge
or
je
push
jp
pop
insl
cltd
lcall
lds
mov
xor
stc
cmpps
dec
ret
push
adc
aad
ja
test
je
outsl
xchg
loop
cmpsb
negl
test
sub
ljmp
scas
ljmp
in
rol
and
cmp
ljmp
jns
cmp
and
fiaddl
push
int3
fs
pop
decb
or
int
cld
cmpb
inc
cli
je
icebp
cmpsl
pop
xchg
mov
or
mov
in
sub
je
fimuls
dec
push
jle
push
mov
aas
inc
movsb
call
cmc
icebp
xchg
push
mov
out
test
out
mov
out
insb
pop
in
push
pop
push
dec
mov
lret
push
test
pop
mov
jbe
xchg
ss
loop
outsb
add
in
les
dec
ret
jae
inc
in
add
and
mov
inc
push
shll
shl
xchg
push
cmp
lcall
cltd
adc
xchg
fstl
or
inc
pop
sub
loope
stos
and
lcall
dec
imul
clc
popf
xchg
insb
test
jo
inc
int
aad
mov
cmpsl
test
inc
jge
ret
jns
gs
or
outsb
bound
daa
fwait
je
xchg
adc
jge
pop
scas
xor
cwtl
jmp
das
sub
and
lcall
adc
pop
dec
adc
ljmp
ret
lock
adc
add
or
cli
loopne
repz
stos
ss
int3
or
xlat
outsl
sub
mov
xor
and
jmp
mov
popf
push
vunpcklps
jae
or
push
xchg
xchg
addr16
lret
xor
inc
repnz
fimull
rcrl
jmp
push
mov
add
aam
mov
enter
mov
xchg
xor
imul
dec
jp
or
imul
jb
cmp
or
mov
sub
int
sub
jecxz
fistl
icebp
mov
cwtl
lahf
jbe
in
pushf
mov
adc
mov
mov
es
dec
data16
std
pop
dec
add
push
xchg
movsl
inc
popa
enter
lea
aaa
les
add
or
insl
mov
pop
fs
xchg
dec
inc
out
popa
pop
add
or
inc
insb
push
jne
and
fdivrl
xchg
outsl
mov
fsubl
shrb
push
daa
inc
ret
mov
mov
mov
and
cmp
aam
mov
jg
hlt
jmp
pop
dec
jle
imul
and
jg
mov
dec
push
jl
fwait
xor
and
jge
mov
enter
call
movsb
fnstcw
stc
out
pushf
xchg
push
je
sbb
dec
leave
push
add
testl
movsb
inc
lods
cmpsl
and
xor
dec
push
add
mov
or
sub
sbb
fndisi(8087
mov
and
add
and
mov
lcall
scas
sbb
ret
push
mov
ss
repz
cmp
jne
jg
dec
mov
ja
insl
leave
hlt
mov
lods
pop
jecxz
into
push
xchg
das
sbb
repnz
add
mov
sbbl
push
rcrl
clc
fcompl
jns
sub
cmpsl
cmpb
adc
jg
xor
dec
bound
call
imul
pop
clc
dec
jnp
xchg
cwtl
lret
xchg
xchg
cmp
xchg
push
frstor
shll
scas
dec
xchg
inc
enter
test
std
jp
popa
shrl
mov
rcll
ljmp
das
mov
mov
fcoms
mov
lock
xorb
mov
clc
dec
push
lahf
push
cmp
cli
jmp
xchg
mov
inc
mov
push
sbb
xchg
sti
das
mov
sahf
or
cmp
lcall
jnp
push
ss
push
into
xchg
repz
sbb
dec
xchg
inc
call
add
cmpsl
insb
or
out
in
addr16
icebp
fldenv
pop
adc
pop
loope
or
inc
dec
jmp
andl
xor
and
loope
add
mov
push
out
lcall
sbb
aaa
jecxz
sahf
mov
jne
stc
cwtl
jbe
inc
dec
shlb
and
xchg
or
and
and
jl
mov
popa
int
mov
pop
addl
adc
pop
pop
push
cmpsl
cwtl
xchg
push
dec
scas
adc
lret
popf
jbe
push
cld
and
rcrb
jne
dec
insb
add
adc
inc
jle
sti
lods
cmp
ret
outsl
je
and
out
pop
popa
call
fdivl
repz
or
lods
mov
mov
pop
or
dec
scas
mov
cmpl
call
sbb
fdiv
and
fadds
cltd
xchg
lds
rcrl
mov
sbb
dec
or
xor
arpl
cmp
mov
mov
imul
or
out
out
sub
into
loop
and
das
jo
mov
push
sbb
jp
daa
jg
jmp
movsl
mov
lret
push
popa
sub
mov
aam
push
add
fnstcw
ret
das
movsl
mov
sahf
stc
dec
pop
popf
ds
mov
add
imul
in
data16
mul
cmc
stc
test
jg
push
lahf
ret
sahf
adc
lods
dec
mov
xchg
sbb
cmp
and
fdivrl
xchg
mov
or
pop
inc
and
mov
mov
fbstp
mov
lock
lds
push
mov
lret
pushf
xchg
mov
test
mov
ja
mov
add
pop
pop
ja
or
adc
dec
mov
pop
addr16
cs
ret
add
in
xchg
dec
std
cwtl
test
xor
lods
jg
leave
pop
dec
je
mov
sbb
inc
in
ficompl
mov
jo
xchg
push
jno
sub
jae
ljmp
dec
push
enter
fistl
fstpl
push
ror
dec
push
push
sbb
arpl
iret
shrl
inc
cltd
inc
jb
push
ja
xchg
cwtl
mov
jnp
test
imul
add
mov
das
cmp
imul
xorb
arpl
mov
or
add
cld
sub
ljmp
push
xchg
leave
nop
subb
mov
cmp
dec
jp
sub
adc
test
or
push
jmp
rolb
and
mov
fisubs
fstpt
arpl
adc
test
test
repnz
arpl
fsubrl
out
xchg
push
out
push
push
lea
ljmp
pop
mov
dec
lods
push
cmc
pop
and
xchg
sub
bound
pop
cwtl
negb
fs
sbbl
mov
cmc
inc
ljmp
ss
loopne
push
push
mov
idiv
ret
adc
dec
cmp
add
cmp
in
loop
mov
pop
push
push
insb
addr16
dec
stos
fdivs
mov
pop
movsb
cmp
sub
push
and
icebp
sbb
sub
sub
push
orps
lods
and
into
call
xlat
adc
xchg
or
cmpsl
dec
scas
aam
lahf
stos
lret
xor
bound
jno
enter
test
push
icebp
test
mov
sarl
sbb
pop
cmp
nop
test
and
adcb
sbb
push
cli
push
dec
bound
ret
rcrl
lret
cld
dec
mov
mov
push
pop
add
sti
aaa
call
xchg
pop
outsb
aas
or
dec
nop
inc
lods
sti
xor
mov
sti
push
sbb
nop
movsb
cmpsb
test
scas
add
cli
inc
jmp
hlt
cmc
shl
jnp
icebp
jo
gs
test
pop
popa
pop
lds
pop
mov
cmpxchg
xchg
sub
aas
dec
ja
cmc
inc
cmp
jno
or
in
mov
mov
ljmp
adc
jp
and
cmc
or
mov
shrl
loopne
sbb
lret
lods
testb
std
mov
add
pop
push
mov
sub
xchg
mov
popa
repz
je
into
add
cmp
notl
xor
adc
inc
push
addr16
pop
dec
xchg
or
fstpt
fstpl
rcll
pushf
in
sbb
mov
movsl
dec
dec
in
cmpsl
fldl
jecxz
mov
lcall
ret
dec
fldcw
into
out
xlat
outsl
inc
sarb
sub
aad
loop
repz
xchg
fiaddl
xor
arpl
daa
xor
and
test
flds
mov
xor
sub
test
fs
mov
sub
scas
leave
mov
repnz
inc
mov
loop
and
out
adc
push
sbb
mov
leave
repz
rcll
data16
jo
or
ljmp
lss
mov
shlb
mov
push
cltd
subb
clc
inc
sub
test
test
jns
push
imul
mov
cmc
or
in
push
rcrl
mov
pop
insb
mov
in
bound
clc
inc
pop
xor
push
mov
insb
aaa
fnsave
mov
or
sub
push
lahf
inc
lds
and
bound
psubq
jp
mov
daa
das
cmp
aaa
in
mov
push
push
xchg
into
mov
cmovo
mov
adc
mov
dec
xor
shrl
ret
movl
pop
daa
and
fwait
pop
fwait
jg
push
and
sti
and
arpl
or
sbb
ret
mov
mov
or
pop
jmp
add
ja
push
pop
push
loope
dec
orl
in
ds
dec
cmp
xchg
fs
cmp
sub
adc
popf
test
or
dec
cmp
mov
xor
or
fst
pop
scas
stc
cmpsb
imul
lods
aaa
xchg
mov
jo
sbb
mov
cmp
ret
sahf
hlt
test
sub
mov
fldenv
xor
xchg
cwtl
fsubrl
ficoml
das
or
inc
test
ret
adc
lret
repnz
sub
lret
cli
rep
mov
movsl
sub
mov
xchg
and
add
mov
sub
in
cmpl
out
inc
test
repz
gs
inc
jnp
pop
out
in
mov
fnstenv
loop
cmp
cmp
repz
lcall
jno
popf
push
mov
aam
xchg
cltd
aas
or
fs
jbe
outsl
sbb
push
push
fildll
nop
xchg
mov
inc
out
test
xchg
cmp
or
jb
test
cmc
ljmp
gs
push
mov
rcr
lods
or
mov
ret
inc
mov
in
dec
in
aas
mov
sub
sbb
negb
xchg
dec
pop
sarb
or
outsb
outsl
aam
adc
movsb
jmp
pop
cmp
xchg
cmp
icebp
out
mov
inc
pop
xor
pop
fbld
das
pop
cmp
and
rcll
mov
stos
outsb
arpl
pop
pop
push
cmpsl
sbb
lods
fdiv
or
repnz
lds
mov
add
sbb
cmpsl
iret
dec
cmp
xor
cmp
test
sub
pop
xchg
sub
xchg
push
arpl
cmp
lret
orb
jne
cmp
lds
sub
inc
lods
popf
loope
in
lcall
inc
dec
sbb
stos
in
inc
mov
icebp
adc
and
xlat
adc
mov
das
and
or
pop
pop
xchg
sub
packsswb
adc
push
mov
popf
jmp
pop
in
pusha
insl
imul
ss
icebp
cmp
xchg
lret
xor
lock
out
xor
lods
push
fdivr
push
fsub
jbe
jo
out
pop
mov
fs
inc
or
xor
in
nop
push
enter
fsubl
aas
ret
out
in
pop
sub
mov
inc
or
inc
jo
push
mov
dec
in
push
pop
out
addl
fisubrs
fs
daa
dec
leave
sbb
xor
cmp
mov
add
call
cwtl
pop
adc
add
push
jl
and
rcll
scas
pop
jle,pn
addr16
push
sbb
mov
sbb
cltd
inc
int3
clc
daa
dec
ljmp
rorl
push
xchg
iret
push
inc
or
data16
xchg
cmpsb
in
jo
mov
cmpb
enter
insb
outsb
lret
clc
dec
cmp
in
insl
or
adc
clc
xor
or
lods
jno
out
out
sub
jb
and
inc
adc
ja
lahf
inc
ret
out
cmp
xor
inc
das
aaa
jp
pop
inc
mov
lahf
sbb
jo
mov
sbb
cmpsb
push
mov
out
and
mov
cld
cmc
lods
iret
push
shl
xor
mov
xor
mov
cmp
jecxz
jb
jb
mov
xor
rcll
and
addr16
and
loope
dec
rcrb
jnp
pop
dec
out
jecxz
mov
fwait
popf
add
jno
sub
sbb
aaa
pop
outsb
daa
movsb
cmpsb
out
jmp
lods
push
into
in
mov
xor
adc
and
lds
push
mov
jb
mov
jp
xor
jne
stos
inc
push
xor
push
xor
cs
pushf
mov
bsf
or
mov
pop
cld
cmpsb
fidivrs
lock
dec
dec
mov
bnd
imul
divl
xor
stos
fimull
mov
gs
mov
fistpl
adc
aam
dec
jo
jbe
out
xchg
loopne
ret
dec
jnp
mov
sbb
xchg
dec
outsb
inc
loope
pop
rcrb
sarb
test
ffree
ret
ljmp
clc
mov
test
xchg
shr
repnz
pushl
fiaddl
mov
inc
test
shlb
or
rorb
into
lea
out
mov
call
xchg
int3
sbb
mov
ret
xchg
pushf
adc
cmp
push
or
mov
xchg
or
pop
or
adc
sbb
and
pop
mov
dec
sbb
negl
dec
xlat
aaa
fnstenv
rclb
arpl
and
inc
xor
outsl
in
mov
jge
mov
stos
lcall
jns
dec
dec
shl
mov
add
ret
jbe
fadd
jbe
add
loopne
leave
cmpsl
dec
cmpsl
out
and
push
ret
std
mov
jbe
imul
inc
or
shrl
cmpsb
jmp
lods
xchg
dec
mov
push
insl
mov
mov
push
pop
lock
das
push
mov
adc
enter
inc
sbb
mov
lret
mov
jns
inc
dec
push
adc
sti
loope
fs
call
xlat
dec
mov
add
add
ljmp
mov
sbb
loopne
sub
cli
fwait
push
aad
gs
sti
bound
out
bsr
test
jle
js
dec
push
fdivr
fsubrl
push
inc
pop
lock
jae
lock
adc
ret
sbb
test
test
dec
leave
leave
push
push
cli
xchg
jl
inc
adc
xor
test
push
inc
jge
or
or
push
ljmp
adc
pushf
aas
mov
mov
sub
mov
jnp
iret
inc
repnz
jno
inc
pop
daa
or
arpl
rolb
into
movb
xor
xchg
icebp
sub
xor
fstp
jecxz
fisttps
mov
pop
jns
mov
call
fdivp
xor
push
aas
dec
or
movsb
xor
sbb
xchg
iret
fmuls
inc
loopne
jl
ds
flds
dec
outsb
int
mov
fcomp
call
test
xchg
arpl
inc
push
jbe
fcmovnb
mov
insb
dec
sbb
shl
ret
lds
mov
adc
enter
call
add
ljmp
sarl
icebp
popf
decl
lea
jecxz
jmp
enter
cmp
es
aas
ret
mov
or
push
dec
test
dec
lods
xchg
fs
insb
testb
pop
and
fwait
mov
jge
gs
xchg
fists
dec
fsubrs
das
xchg
push
subl
movsl
lea
inc
iret
jnp
int3
sub
xlat
into
or
std
xor
mov
or
cld
dec
idiv
sub
sub
inc
test
sahf
fimuls
add
push
cmc
ljmp
stos
icebp
mov
mov
push
xchg
mov
inc
mov
sbb
xchg
xor
sbb
add
sbb
cmpsl
pop
mov
movsb
daa
inc
daa
or
hlt
movsl
add
xchg
nop
std
jbe
sub
or
sub
lcall
xlat
jns
es
pop
lea
ret
add
pop
adc
sub
sbb
mov
iret
mov
int
jp
pop
movsl
pop
loopne
dec
inc
sti
fsubl
pop
sbb
and
lret
lods
xchg
jns
leave
leave
inc
sbb
int
cmp
es
push
out
movsl
mov
add
sbb
shll
xchg
aad
push
pop
pop
in
xchg
mov
and
or
leave
push
push
sub
pop
dec
test
pusha
pop
jge
sub
sub
adc
sbb
mov
fldcw
ss
pushw
cli
iret
ja
int
js
sbbl
mov
xchg
lahf
jmp
push
jnp
sbb
ljmp
push
xor
mov
int
mov
mov
mov
dec
cmp
imul
jo
nop
dec
sub
inc
xchg
jne
mov
stc
flds
cwtl
int3
cmp
fs
imul
inc
mov
flds
mov
repz
inc
aad
mov
popf
pop
cmc
cmp
jno
fsts
scas
push
jae
push
push
push
cmp
pusha
mov
dec
inc
sub
mov
jns
pop
xchg
shr
shl
push
out
fidivrl
in
jecxz
imul
sarl
stc
mov
fidivrl
mov
in
test
and
pop
pop
dec
cmpl
push
in
push
jno
pop
cmp
and
testb
mov
inc
push
lods
scas
mov
adc
dec
xchg
ret
push
xor
xor
cli
shll
insb
cmpsb
repz
mov
pop
add
fistps
ret
cmc
ret
shlb
jo
scas
adc
aaa
out
dec
in
dec
es
int3
mov
mov
xor
cmp
imul
std
js
dec
jmp
aaa
pop
lahf
add
adc
data16
sarb
movq
sbb
das
or
push
mov
xor
jp
sub
xor
rep
cmp
mov
ficoms
jnp
xchg
add
xlat
xor
push
mov
push
xchg
andl
clc
mov
sub
sti
pop
sahf
sahf
lock
mov
scas
cmp
lcall
cmovno
insb
jg
inc
icebp
cmp
push
or
sbb
mov
inc
xlat
adc
fidivl
xor
out
lret
adc
adc
hlt
inc
stos
xor
sti
rclb
add
lock
pop
cld
add
aas
sub
or
frstor
adc
aas
cs
xchg
shll
imul
push
popf
mov
sub
sub
insb
lret
jg
sti
out
int
arpl
cmpsb
fidivrs
push
xor
inc
fcompl
add
pop
ficomps
add
sti
adc
shlb
icebp
std
sub
pop
dec
xchg
mov
xchg
mov
hlt
inc
mov
stos
bound
push
pop
cmp
in
pop
cld
adc
xchg
les
repnz
jnp
mov
xor
mov
and
pushf
jnp
std
outsl
pop
add
xor
mov
jle
fldl
mov
lret
cmpsb
outsb
popf
push
loope
notb
xorl
or
cli
cmp
out
push
add
mov
test
hlt
xchg
clc
dec
dec
jns
mov
outsl
arpl
jg
xchg
int3
sbb
jno
cltd
mov
or
cltd
mov
xor
jecxz
pop
add
fidivrs
inc
cld
cmp
insb
test
jmp
adc
xor
or
push
orb
xchg
pusha
movsb
jg
xor
cld
sbb
call
call
in
push
cmp
out
cli
fidivrl
pop
push
mov
dec
pop
adc
or
fisubrl
pop
dec
push
into
sbb
fbstp
jge
leave
pushf
xchg
mov
bound
dec
mov
inc
push
and
inc
jg
cmp
pop
adc
jb
shll
xor
aad
xchg
xchg
mov
clc
stc
xchg
mov
sub
sbb
mov
in
push
lock
cltd
adc
jno
movsl
leave
test
jle
pushf
in
inc
sti
push
or
adc
mov
pushf
out
mov
or
xor
pusha
int
sub
test
out
das
xlat
fisttps
ds
push
push
mov
mov
dec
or
jge
std
rolb
int
and
pop
fnstcw
in
adc
sub
ret
lods
push
inc
adc
shrb
cmp
push
ficoml
mov
pop
sti
mov
nop
xor
in
and
push
mov
fstpl
sbb
push
sub
test
add
push
jo
add
and
pusha
inc
dec
gs
insb
lahf
repz
fxch
mov
push
hlt
pusha
or
in
in
push
in
fldl
lods
jmp
inc
aad
insb
mov
fwait
mov
add
cwtl
movsb
icebp
push
mov
push
popf
rclb
cmp
mov
cs
mulb
push
call
aad
scas
or
adc
mov
and
mov
pop
mov
movsb
fldenv
or
test
xchg
xchg
jbe
dec
cmpxchg
enter
test
push
or
loopne
add
test
cwtl
push
filds
mov
scas
cmp
rol
scas
psllq
cli
mov
jl
sub
fs
cmp
fadd
or
outsl
roll
andb
je
stos
mov
mulb
adc
xchg
outsl
je
pop
add
or
daa
xorl
push
mov
jge
cmp
cmc
lds
dec
dec
mov
add
pop
xor
mov
je
mov
jmp
pop
dec
jae
lahf
pop
mov
bound
push
mov
cmp
fdivr
cmp
cmp
cmp
sahf
jb
sbb
push
ljmp
lahf
push
sbb
clc
dec
add
xor
lret
cmp
sub
les
loope
sub
stos
xor
mov
xchg
push
adc
lcall
mov
sub
std
sub
pusha
ficoml
shll
outsl
test
sbb
xchg
xor
xor
xchg
cs
call
push
or
and
pop
ret
or
lock
xor
lods
mov
sub
sub
movsb
push
dec
rolb
mov
xchg
xchg
imul
sub
dec
or
leave
pop
push
or
fstl
cmp
sarb
xor
dec
pop
push
jbe
lret
cmp
add
ss
inc
and
jo,pn
mov
and
fistpl
shr
mov
pop
pop
outsl
lock
adc
shlb
call
jb
pop
sbb
inc
jp
xchg
ret
test
mov
popf
cld
es
mov
data16
out
nop
jnp
loopne
ss
sub
testl
and
cs
adcl
push
mov
out
inc
call
mov
loop
ljmp
lods
pop
cltd
push
daa
mov
gs
xchg
aad
add
movb
in
daa
mov
mov
mov
addr16
test
ficoms
xchg
fwait
pushl
mov
dec
ss
push
sub
mov
pop
adc
push
mov
sub
out
sbb
mov
add
out
fscale
ds
xchg
sub
shr
xchg
mov
mov
call
outsl
in
aad
mov
lods
fwait
bnd
mov
jle
dec
out
std
pop
mov
jg
dec
or
sarl
lahf
cld
loopne
pop
stc
dec
jnp
inc
stos
mov
das
mov
jl
dec
mov
bound
adc
mov
pop
cmpsb
shll
sbb
mov
daa
imul
mov
inc
xchg
enter
jbe
add
addb
test
push
add
pop
enter
dec
das
aad
add
dec
in
sbb
jb
add
or
adc
cmp
cmpsb
push
jns
into
iret
fimuls
adc
adc
cmp
leave
jg
loopne
lret
inc
mov
sbb
fwait
mov
lods
xor
xlat
movsb
test
repnz
fistl
push
mov
pop
stc
mov
cmp
shlb
cwtl
stc
rcr
inc
inc
push
nop
lock
xor
cmp
enter
arpl
or
pop
cmp
insb
adc
fadds
in
iret
mov
add
cmp
ret
cmp
xchg
add
andl
dec
mov
mov
test
jmp
mov
jbe
xchg
test
nop
subb
dec
mov
popl
mov
in
push
adc
sub
sbb
clc
lcall
cmpsb
add
bound
aam
jne
clc
pushf
mov
mov
add
data16
inc
scas
jne
bound
outsb
push
cmp
xchg
jmp
push
jno
cmp
pop
stc
inc
mov
das
loope
pop
mov
out
inc
movsl
imul
addr16
inc
js
out
pop
lcall
sub
cmp
add
add
out
outsb
pop
leave
push
js
aam
iret
roll
mov
popf
and
je
imul
xor
fsqrt
mov
mov
or
sti
jnp
es
xchg
xor
and
loopne,pn
jmp
pushf
leave
movsl
jg
xchg
cwtl
subl
inc
mov
mov
push
es
clc
inc
cmp
out
xor
pop
jae
test
out
and
mov
ds
ret
les
lds
repz
xchg
jmp
mov
jb
lds
dec
inc
cmp
arpl
mov
call
repnz
mov
stos
inc
and
mov
ja
insb
aaa
pop
in
das
mov
stos
pusha
adc
pop
push
xchg
ja
out
sub
repnz
aad
test
sysret
fdivrl
dec
sbbl
xor
idivb
aad
stos
sbb
fimuls
in
outsb
inc
data16
mov
stc
repz
cmpb
xchg
adc
fst
jle
pop
in
xlat
xchg
lea
in
jno
mov
adc
lods
inc
dec
pop
fcomp
sbb
and
cmc
imul
punpckhwd
xchg
lods
loopne
out
push
fwait
enter
push
push
stc
add
rcrl
inc
fwait
aas
or
bound
insl
push
mov
xchg
js
out
and
mov
call
mov
cmp
int3
test
dec
iret
les
pop
lahf
mov
js
jecxz
adc
xchg
das
in
sbb
pop
pop
mov
adcb
jmp
sub
cs
popl
mov
adc
pop
jmp
lods
ret
jp
hlt
testl
dec
add
push
imul
add
cmp
pop
dec
adc
call
stos
hlt
inc
gs
mov
rcll
hlt
fdivrs
ficomps
les
xor
cli
fbld
cmp
lahf
cmc
or
imul
incl
adc
or
or
inc
jbe
adc
jecxz
mov
test
xchg
je
jno
cs
and
repnz
imul
cmp
fdivrl
out
shll
jmp
js
mov
addr16
cmpsb
incb
or
sub
fsubr
and
xor
xor
imul
dec
stos
lahf
lret
inc
cltd
aas
or
pushf
inc
movsb
sbb
call
ljmp
pop
cld
arpl
ds
pop
ret
movsb
push
dec
push
pushf
jge
xchg
sub
out
mov
in
les
inc
mov
stos
stos
shrl
mov
fimuls
loopne
out
outsb
pop
cld
adc
mov
xor
lcall
cmc
je
or
addr16
bound
inc
jns
lods
mov
stos
rcrl
add
push
mov
les
or
scas
daa
pushf
xchg
dec
jo
mov
mov
inc
fimull
out
xchg
fildll
sbb
inc
incb
mov
jns
push
mov
dec
push
in
dec
jno
in
call
lock
and
call
mov
and
push
fcomip
sbb
sub
cmpsl
push
jl
mov
cwtl
jo
pop
mov
sub
enter
sbb
jno
pop
sub
out
fyl2x
mov
fucomp
mov
sub
popf
insb
scas
mov
mov
sarl
sahf
insb
movsl
clc
std
and
jmp
inc
mov
xchg
push
adc
mov
iret
inc
fldcw
fs
sub
sub
lods
sbb
fbld
lock
adc
push
jbe
cli
cmc
mov
imul
push
rclb
dec
xchg
xor
imul
das
movups
pop
sbb
jno
repnz
add
cwtl
push
fwait
outsb
mov
jnp
mov
adc
aas
in
dec
push
mov
push
xor
mov
mov
repnz
add
je
in
sub
fisubs
lock
insb
sub
cld
jno
enter
jb
and
jl
pop
daa
and
loope
inc
mov
xchg
not
nop
cmp
pop
movb
and
pop
test
add
jg
mov
lock
hlt
shl
out
mov
dec
cmc
and
push
clc
orl
xchg
fsts
dec
es
mov
jp
dec
inc
and
pop
add
fcmovne
add
popa
jbe
push
mov
lock
add
pusha
scas
scas
sbb
pop
mov
cwtl
icebp
notb
add
mov
add
movsl
repnz
mov
cmpb
pop
test
test
movsl
xchg
out
dec
xor
mov
push
lods
clc
ljmp
aam
outsl
mov
bound
add
shl
mov
xchg
sbbb
loop
dec
or
fdivp
repnz
stos
mov
xchg
lahf
iret
sub
cwtl
bound
scas
addr16
xor
xchg
and
pop
add
push
jbe
or
or
popl
fistl
inc
inc
sbb
call
or
call
cmpsl
push
pushf
cmpsb
mov
je
shr
out
fldt
dec
fisubrs
pop
add
mov
pusha
subb
mov
mov
pushf
rcrl
fisttpl
jbe
dec
ret
mov
cmpsb
cld
xchg
fincstp
call
cmp
and
push
adc
xor
addr16
xor
xchg
push
jmp
mov
xchg
imul
test
jnp
in
xor
sbb
cmp
jno
repz
loopne
out
add
dec
mov
outsb
dec
sub
add
sbb
and
jbe
repnz
and
test
pushf
or
ja
rcll
in
jo
pop
into
mov
aad
aam
lock
push
and
push
cmp
insb
jg
ret
cmc
push
pop
add
leave
jmp
sub
in
gs
mov
dec
jo
push
sbb
xor
addr16
adc
js
negb
and
loope
mov
xchg
sub
aam
inc
loop
in
into
mov
int
out
lock
std
insb
ret
fs
xor
mov
pop
aaa
in
cmpsb
or
fwait
pop
and
pop
cwtl
out
push
pop
or
adc
loopne
cmp
dec
popa
fistpll
mov
xchg
movsl
inc
movsb
sbb
scas
jb
rclb
pop
imulb
lret
add
pop
dec
push
ljmp
pop
call
sub
insl
xor
xchg
outsl
mov
pop
jle
decl
outsl
int3
icebp
call
cmp
dec
gs
dec
xor
push
addb
adc
xchg
inc
add
mov
jl
jae
mov
loopne
scas
mov
jbe
iret
mov
enter
fnsave
mov
popa
cltd
xchg
sub
xchg
fadds
xchg
leave
lcall
sbb
gs
cs
xor
dec
dec
lods
sub
dec
xchg
fs
sbb
imul
outsl
and
ja
push
stos
xchg
fisttps
divl
fs
aad
lcall
adc
movl
jnp
jb
paddb
outsb
mov
fsubrs
cmp
lock
hlt
movsl
xor
xor
adc
jb
jge
incb
shlb
mov
cmp
jge
icebp
lret
dec
es
out
push
pop
sahf
add
movsb
cmp
jl
repz
das
or
lcall
cmpsl
add
xchg
push
cmp
dec
fstl
cwtl
dec
or
icebp
adc
test
add
cmp
stos
xor
inc
dec
push
pop
mov
or
mov
mov
ret
jno
out
mov
pop
adc
add
or
jnp
out
dec
orl
push
mov
jge
mov
jmp
es
dec
inc
mov
push
xchg
dec
lahf
mov
clc
lret
in
pop
push
enter
lcall
jns
jb
mov
out
adc
add
js
push
push
or
test
add
or
repnz
aas
adc
mov
mov
sbb
scas
push
fistpl
or
iret
in
lods
push
je
jge
je
adcb
mov
push
clc
shll
mov
xor
push
pop
add
repz
xchg
ja
xlat
inc
lods
dec
leave
mov
adc
imull
aad
xchg
push
clc
cmpsl
or
ficomps
or
cltd
cld
ret
or
movsb
call
mov
xchg
sbb
and
in
mov
les
test
mov
mov
push
mov
xchg
jmp
pop
scas
in
sahf
mov
pop
mov
int3
mov
inc
cli
cld
cmp
iret
out
jecxz
add
push
das
in
es
hlt
sbb
pop
cltd
push
hlt
xchg
je
mov
lea
icebp
xor
mov
lret
dec
jo
int3
das
adc
xor
jl
sbb
cs
lahf
lret
xchg
jb
push
mov
xchg
ljmp
sbb
testl
jmp
stos
sti
inc
popf
pop
ret
popa
lahf
cmp
aad
xor
in
insb
mov
out
dec
or
cmp
test
fdiv
stc
jmp
sub
cmp
xchg
jno
js
sbb
pusha
lahf
xor
mov
dec
dec
xor
mov
stos
ja
mov
out
insb
pop
xor
dec
mov
push
push
outsb
insl
pop
cwtl
call
jb
in
rorb
aaa
scas
es
mov
jg
dec
sbb
cmc
cmpsb
cli
xlat
aas
cmp
shl
lret
in
sbb
fimull
xchg
mov
std
adc
dec
push
lods
outsb
jmp
cmp
cmp
pop
mov
mov
xchg
adc
jae
cmp
adc
inc
push
rcrl
andl
andb
in
inc
push
enter
bound
test
jb
ds
mov
bound
movsl
out
sbb
mov
mov
xor
shll
jne
dec
dec
pop
mov
loope
aad
adc
pop
sahf
sbb
ret
add
mov
cmp
fimuls
insl
push
and
jle
sti
ret
fdivs
out
mov
pushf
inc
inc
push
push
adc
mov
rorb
mov
xor
ljmp
xlat
adc
jnp
mov
and
cmpsb
dec
les
adc
std
pushf
push
stos
push
mov
sbb
mov
mov
mov
sahf
xlat
bound
xchg
mov
inc
dec
push
call
loope
aaa
sub
inc
adc
jp
js
aas
mov
xor
dec
and
cmp
testb
jecxz
mov
gs
dec
loopne
sub
mov
xor
iret
sbb
pop
lea
push
jne
pop
nop
cltd
pop
sub
daa
mov
imul
or
pushf
adc
xor
movsb
lock
or
or
int3
sti
sub
lock
sbb
stos
pop
and
negl
xchg
stos
fisubs
pop
inc
jge
jae
push
testb
mov
shr
mov
js
test
pop
insb
shlb
test
fadd
mov
push
rorl
xchg
in
push
push
jp
add
inc
pop
push
dec
push
movsb
pop
test
ss
mov
or
mov
lods
jns
orb
sub
out
pushf
cs
scas
jecxz
cld
push
adc
adc
gs
pop
data16
popf
out
pop
mov
test
inc
push
sbb
inc
fbld
gs
leave
xchg
xor
sub
cmp
or
fcmovb
test
rclb
orb
arpl
imul
cwtl
or
push
mov
adcb
shlb
shlb
jae
nop
addb
dec
clc
pop
xchg
xchg
hlt
cwtl
push
cmp
das
push
pop
stos
mov
sbb
insb
cmp
lea
inc
aas
mov
dec
adcb
xchg
es
jecxz
jnp
insl
add
add
cmpsb
sbbb
test
ret
fsubrl
je
enter
jne
test
clc
sbb
lea
ret
push
in
or
icebp
rolb
mov
cmp
arpl
push
cmc
push
xor
inc
popf
sbbl
ss
loope
loope
sub
imul
inc
daa
shr
add
push
sahf
out
imul
aaa
fidivs
movsb
fistpl
lods
push
das
sbb
cmp
ficoml
movsl
fisttps
mov
push
sub
pop
pushl
add
mov
jg
sub
dec
jne
mov
add
gs
call
stos
xchg
bound
out
gs
sub
pop
inc
in
lods
push
jno
fs
clc
or
jecxz
fadds
out
ds
insb
outsl
mov
sub
out
and
int3
xlat
int
aad
mov
mov
das
mov
cmp
mov
cwtl
push
je
stos
push
fidivrs
mov
inc
sti
inc
pop
and
xchg
dec
fs
fmull
push
ljmp
pop
dec
aad
pop
xor
es
sbb
inc
scas
fisubrs
dec
add
pandn
cld
dec
add
lds
sahf
add
xor
enter
and
pop
out
jmp
fbstp
mov
xlat
cmp
pusha
adcb
test
sub
sti
and
addl
cmp
inc
add
mov
rcll
out
or
push
shrb
cld
and
cmp
fnstcw
xchg
and
mov
dec
outsb
sarl
sub
out
pop
inc
test
jnp
mov
loope
pushf
dec
test
inc
jbe
or
cld
xchg
idivb
xor
and
mov
test
shrb
pusha
push
pop
jl
pop
mov
repz
ret
ret
cltd
lds
add
cmc
xchg
xchg
outsl
lret
sbb
mov
lds
addl
pop
fisttpll
sbb
push
add
fnstcw
adc
sbb
xchg
insb
push
out
pop
and
jbe
push
test
pop
add
or
xchg
lret
mov
pushl
sub
sbb
and
lods
pushf
mov
sub
rorl
in
add
dec
dec
xchg
imul
dec
ss
test
fisttpl
xor
add
jo
dec
inc
cmpsl
test
push
call
inc
cmp
mov
add
out
lock
sub
add
jp
mov
add
pop
fs
add
lods
xchg
sbb
adc
pop
and
fsubs
insb
lods
cmp
nop
cmpsb
stos
inc
or
les
fisttpl
inc
lcall
notl
div
sbb
jo
int
push
inc
stos
sahf
push
ss
movsb
cs
das
push
xor
popa
jo
nop
stc
notb
test
repnz
adc
xchg
and
adc
pop
add
jns
sti
pop
pop
call
jg
hlt
test
gs
ljmp
dec
out
cmp
mov
dec
es
pop
test
jge
and
xchg
nop
push
dec
rorb
push
add
xorb
outsl
mov
mov
lods
in
pop
adc
lods
sbb
pop
je
xlat
dec
shll
xor
cmp
rorl
mov
lea
ljmp
pop
test
je
cld
inc
jp
mov
jnp
mov
mov
xlat
cmp
fld
push
cltd
xchg
stos
sbb
stos
jbe
inc
ds
aaa
int
std
in
add
cmp
in
daa
sar
fmuls
popw
and
dec
push
cli
in
jp
mov
sbb
jge
cmp
sbb
pop
adc
pop
sub
aam
loopne
and
dec
loope
dec
jne
mov
mov
cmpb
enter
xlat
clc
pop
xor
cmp
movsl
push
loopne
fisttpl
cmp
lds
mov
nop
aaa
fdivrs
aaa
jo
xchg
cmp
inc
arpl
fwait
lahf
add
sub
test
xchg
inc
test
and
ret
xor
into
nop
adc
mov
out
shll
adc
movl
ffree
shll
sarb
adc
decb
fs
sbb
mov
jo
jo
dec
es
fcoml
andl
adc
pop
scas
xor
in
and
daa
xlat
or
out
push
and
cmpsl
sbb
xor
mov
mov
mov
cmp
icebp
adc
stos
dec
xor
sar
pop
mov
jg
fnstsw
jle
divl
jg
insb
sbb
pop
inc
out
mov
in
js
out
push
dec
lds
inc
mov
mov
gs
sbb
cmp
loop
xlat
out
cmpsb
cmp
in
cld
cmpsl
sti
lods
mov
lret
shlb
dec
rorl
pop
inc
mov
mov
push
xchg
cltd
fisttpl
fwait
popf
arpl
push
push
dec
stos
and
add
fistpl
mov
pop
cmpsl
jmp
mov
pop
mov
and
scas
cmp
push
movl
cmpsl
jmp
addb
xchg
inc
lea
push
mov
push
lret
lock
aad
icebp
daa
sarb
into
pop
orl
stos
and
xchg
test
pop
push
cmp
cmp
aas
sarl
out
xchg
pop
cmp
pop
imul
fstpt
xchg
fisttpl
jbe
test
cmp
pop
mov
ja
xchg
mov
adc
cmp
sbb
imul
sbb
mov
test
loop
xchg
mov
xchg
or
cmpsl
popf
mov
jne
adc
dec
add
xchg
sub
sbb
hlt
xor
mov
adc
xor
popf
mov
jle
inc
out
or
adcl
rorl
mov
sub
jb
popf
mov
dec
or
push
adc
mov
push
js
je
fadds
insb
inc
jg
fsts
call
xchg
dec
aas
cmp
inc
fildll
mov
mov
sbb
ret
jns
sbb
mov
sar
push
test
js
sub
mov
out
sbb
call
rcrb
sahf
push
lret
push
dec
icebp
sbb
stc
mov
cmpb
add
in
dec
mov
push
pop
loopne
ds
and
cmp
stos
push
xlat
sub
dec
out
fidivs
sbb
mov
sub
flds
cli
cmpsb
mov
ljmp
out
or
clc
dec
sbbl
cmpsl
mov
mov
xor
ljmp
push
jne,pn
les
xor
ljmp
inc
mov
pop
rol
fnstenv
mov
mov
sub
clc
andl
mov
add
into
xor
stos
gs
insl
out
dec
cwtl
dec
rclb
jb
js
xchg
and
das
sti
mov
jbe
fwait
mov
pop
push
add
insb
fisubrl
inc
fnstsw
dec
mov
dec
inc
pop
adc
pop
std
adc
pop
aad
outsl
add
push
fsubrs
pop
fimuls
test
xor
add
add
loopne
adc
sub
push
jecxz
pop
cmpsb
or
sub
inc
jecxz
sub
adc
lods
push
or
aas
sbb
bnd
xchg
push
lret
out
mov
add
jecxz
sbb
loope
in
outsl
adc
repnz
cmp
mov
xchg
test
xchg
aas
and
je
cwtl
adc
vucomiss
sbb
add
rolb
cmp
popa
dec
sarl
ljmp
xchg
aad
insb
out
jbe
jge
push
xchg
mov
add
and
in
dec
inc
daa
jle,pn
pop
pop
ds
scas
xlat
xor
inc
inc
ds
mov
or
pushf
jo
pop
push
ja
or
imul
adc
cmp
in
xchg
ret
jae
stc
mov
mov
imulb
xchg
cwtl
lret
add
jb
movsl
mov
pop
or
pop
mov
int3
bound
xchg
cmp
mov
mov
mov
inc
xor
pop
int
call
mov
cmpsb
mov
pushf
inc
sti
xor
out
xor
mov
aam
jg
cmp
jbe
sti
fmuls
stc
pusha
mov
pop
jle
mov
test
scas
int3
sub
lods
adc
dec
fcompl
inc
jno
adc
inc
mov
dec
mov
sub
icebp
jo
push
clc
inc
divl
mov
jo
sbb
icebp
cmp
mov
and
mov
leave
dec
sbb
pop
adc
mov
cmp
dec
cmp
xlat
push
jecxz
inc
fildll
imul
jecxz
mov
or
sub
sahf
aaa
bnd
ret
push
sub
cmp
lret
fsubl
test
in
mov
shlb
push
sbb
pop
mov
push
xor
inc
cli
loopne
iret
jns
in
fwait
subl
repz
mov
out
mov
icebp
dec
out
scas
xchg
mov
mov
cmc
js
adc
bound
fsubrl
push
aad
pop
cmpsb
dec
aaa
loopne
pop
fcompl
loopne
test
les
dec
xchg
adc
scas
dec
in
hlt
outsb
fcmovne
dec
mov
ss
dec
add
pop
and
sti
xchg
roll
daa
or
inc
loop
fcmovnb
test
mov
data16
jmp
fisubrl
push
loop
sbb
mov
imul
fsub
jne
mov
dec
in
or
sbb
sub
int3
push
roll
stos
and
mov
mov
cld
push
repz
jb
cltd
push
jp
and
pop
jbe
sbb
ror
aas
std
mov
mov
sbbb
xchg
js
sbb
imul
xchg
sbbb
pop
std
add
jb
xchg
pop
xchg
lods
aas
fadds
testl
dec
fcomps
repz
push
mov
or
pop
or
sbb
data16
data16
add
sbb
leave
insb
ljmp
add
stos
mov
imul
test
imul
pop
dec
push
xchg
hlt
in
stos
jl
mov
repnz
push
sbb
movsb
mov
adc
bound
sbb
cmpsl
sbb
xchg
pop
addr16
ret
inc
add
xor
in
lahf
fsubp
movsb
dec
repz
mov
mov
dec
push
cwtl
sahf
xchg
shl
pop
xchg
xor
shlb
repnz
aas
leave
ret
fisubrs
mov
lods
xlat
das
xchg
mov
and
push
and
fdivrl
inc
add
mov
cmovl
xor
lods
aas
push
pop
ror
mov
das
in
inc
test
mov
mov
in
cmp
push
mov
jp
push
inc
push
jecxz
fldenv
mov
ret
cld
add
mov
dec
adc
mov
aas
lods
mov
xor
cmp
or
mov
cltd
push
mov
jle
aaa
cmp
hlt
loop
push
fildl
imul
jl
sti
pop
and
xor
jmp
stos
sarl
mov
push
nop
xchg
inc
pop
or
mov
push
inc
push
xor
pop
dec
adc
add
adc
cmpsb
pop
jne
sbb
pusha
int
arpl
sub
jae
sub
lock
and
popa
pop
jae
pop
xor
fmull
jp
push
pop
and
jl
fcomip
data16
sbb
lret
ljmp
pop
int3
cmpsb
test
not
xor
inc
gs
pop
jmp
subl
mov
fildl
lgs
inc
stc
ds
add
std
movl
fwait
xchg
jo
dec
cld
fwait
jns
aam
inc
cmp
xchg
aas
loop
sbb
fnstenv
loope
lcall
in
sbb
ret
xor
sub
jo
mov
aaa
pop
push
mov
xor
insb
dec
repnz
mov
inc
xchg
jbe
loope
xchg
out
sub
loopne
and
cwtl
jge
push
js
out
mov
jbe
les
jns
dec
cwtl
inc
push
movsb
jle
jnp
push
push
test
fsubrp
iret
dec
jmp
mov
push
sbb
and
mov
fsts
idivb
xlat
lea
mov
dec
or
jae
sbb
xor
push
cmp
pop
stos
dec
cmp
adc
lds
mov
jge
test
les
add
jns
sbb
and
push
movsb
stos
push
out
xor
repnz
nop
jl
mov
xchg
push
inc
lret
cmpb
orb
fisttps
mov
and
pop
decb
inc
mov
es
push
jp
or
xchg
stos
cmp
test
mov
and
add
mov
and
mov
sti
jle
loope
mov
in
xor
test
adcl
inc
in
adc
test
nop
add
sbb
in
cmp
enter
daa
pop
leave
push
mov
popa
lret
mov
pop
inc
push
negl
xchg
sub
je
jnp
sbb
dec
aaa
mov
inc
lods
adc
lock
mov
add
mov
nop
cli
mov
fwait
sbb
ja
into
jg
xchg
int3
cs
jbe
xor
dec
mov
mov
sarl
mov
mov
in
rcr
outsb
jne
cmp
cltd
out
jbe
cmp
push
xchg
xor
lret
cmp
mov
pusha
jg
ret
inc
cmp
adc
lods
mov
mov
jge
arpl
or
sbb
add
stc
jbe
inc
inc
in
cwtl
push
dec
dec
jb
addb
rcrl
jno
mov
adc
or
mov
aam
mov
mov
xchg
mov
add
test
leave
cmc
sub
push
pusha
mov
mov
jmp
jmp
dec
pop
daa
inc
repnz
dec
mov
pop
mov
enter
pusha
mov
fs
nop
push
fs
lods
dec
ljmp
fistl
pop
adc
push
daa
fsub
es
xchg
push
pop
test
ss
sub
sbb
dec
arpl
mov
mov
mov
pop
pop
adc
or
xchg
sub
cmp
test
sbb
xchg
fmull
int
inc
bound
mov
aad
aad
mov
iret
sbb
subl
mov
xchg
dec
pop
fwait
xchg
sub
xor
lret
sbb
inc
ja
ds
out
mov
or
in
rclb
xor
rcr
push
and
rorb
mov
or
push
ja
xor
sarb
daa
inc
sub
in
adcl
rol
mov
popl
data16
in
sbb
inc
or
popf
pop
adc
test
cmpsb
adc
enter
xchg
lahf
js
dec
pop
cmp
mov
mov
or
jecxz
push
mov
xlat
ffreep
sbb
cmp
pop
imul
icebp
dec
lds
jne
sbb
stc
jle
add
mov
or
mov
test
push
pusha
inc
test
sahf
inc
jmp
pop
out
sub
xchg
mov
sbb
dec
test
mov
stos
push
bound
cmp
stos
rclb
testb
loope
int
cs
repz
jg
or
aaa
addr16
pop
adc
int3
push
sti
mov
pop
push
stos
cmp
lds
aad
es
pop
inc
lcall
mov
mov
testb
mov
and
mov
aas
into
xchg
mov
jnp
mov
mov
inc
push
popf
fisttpl
push
adc
mov
adc
in
pop
jp
jmp
ficoms
shl
sbb
adc
aaa
outsb
daa
movb
mov
add
xlat
scas
sahf
mov
mov
mov
push
mov
jp
mov
gs
jle
cli
out
dec
scas
lret
enter
arpl
mov
jge
lea
pop
sti
xorl
aas
inc
cmpb
jae
sub
pop
imul
sarl
mov
xor
les
out
and
push
pop
dec
add
inc
push
scas
mov
push
inc
test
push
mov
fcmovnu
cmp
cmp
mov
or
cltd
adc
adc
fs
jle
adc
pop
adc
pushf
rorl
movsb
arpl
push
fld
xor
mov
add
aas
xchg
repnz
push
cmp
out
ret
call
imul
mov
enter
mov
mov
inc
fstps
jl
test
cmp
fs
fcoml
jp
es
pop
push
jne
test
lods
leave
or
xchg
pop
push
arpl
fnstsw
push
xchg
and
mov
push
imul
aad
add
rorl
cmpsb
or
fsts
mov
cmpsb
lahf
mov
nop
ds
push
andl
test
dec
jge
aas
lret
cwtl
or
cli
and
scas
and
flds
xchg
fistpll
bound
cmp
arpl
xchg
add
in
jg
push
mov
shrb
mov
scas
push
sbb
xor
adc
adc
fcmovbe
in
test
js
fldcw
data16
das
xchg
mov
xor
pusha
mov
imul
pop
frstor
sub
jno
test
mov
stc
jb
loop
stos
add
stos
or
xor
push
xchg
mov
rol
js
and
and
aad
inc
stc
pushf
push
jae
fidivrl
daa
sarl
fcom
pop
push
push
out
incl
lock
adc
jecxz
mov
mov
sub
daa
or
cmp
clc
xorl
bound
imul
jmp
pop
jo
mov
daa
hlt
outsl
popa
and
or
sti
or
pop
pushf
pop
xchg
sbb
sbb
int
aas
aaa
dec
dec
add
adc
stos
lds
rolb
shl
stc
sub
popa
daa
mov
cwtl
xchg
add
mov
in
sbb
jo
fs
cwtl
call
outsb
in
push
js
xor
hlt
sbb
push
fldenv
sti
jo
lcall
int3
push
mov
loopne
dec
repz
mov
mov
lcall
pop
rol
inc
jge
mov
pop
sbb
jmp
out
lock
in
outsl
xor
bnd
push
mov
xor
lods
and
mov
sub
inc
jg
das
cmpsb
cmpsb
stc
mov
int
cs
or
and
mov
sbb
test
cli
pop
rorb
rcl
push
lcall
mov
into
shrb
mov
cmp
test
and
or
sarb
cmp
fstp
mov
mov
push
and
pop
mov
inc
sub
divb
jmp
shll
cs
push
jecxz
mov
imul
fcomp
sbb
xor
cmpb
sarl
add
dec
sbb
jb
cltd
inc
jne
pop
imul
mov
notb
int3
push
mov
pop
pop
roll
xchg
rcrb
inc
mov
int3
ljmp
mov
orb
sbb
lds
insb
inc
inc
sub
imul
cmpb
scas
mov
pop
int
push
and
mov
inc
into
or
cmpsb
cmp
data16
push
jmp
sub
cmp
fistps
addr16
add
mov
scas
sti
cmp
cmp
dec
popa
xchg
xor
leave
xor
sbb
mov
test
in
mov
incl
sti
inc
jmp
and
xor
xchg
frstor
ja
call
dec
adc
sbb
adc
adc
jb
rcrl
test
mov
push
ss
loope
cwtl
lods
push
lods
pop
movsl
or
rolb
cmp
outsb
scas
lods
out
cmp
testb
dec
leave
test
xchg
lds
ds
ds
daa
testl
subb
jg
xorl
bound
mov
jmp
xor
ret
mov
das
sarb
clc
arpl
sub
adc
mov
lods
scas
and
cld
and
mov
cwtl
mov
pop
jb
leave
cmp
pop
lahf
les
in
lcall
cvtpi2ps
and
jl
hlt
call
push
out
xor
movsb
pushf
insb
jb
lock
and
imul
xchg
jo
xor
push
imul
mov
pop
sub
mov
add
adc
sub
jo
inc
fistpll
call
jnp
into
lock
inc
rclb
cmp
test
jge
dec
mov
je
push
adc
dec
insb
daa
push
jbe
sbb
scas
aaa
lock
ss
push
fimull
push
test
mov
jo
ja
push
jnp
incb
adc
push
popa
push
jmp
jle
add
hlt
cmp
fidivs
add
test
mov
incl
lds
ds
jp
pop
leave
mov
bound
xchg
mov
sub
pop
jb
jmp
mov
std
stos
dec
cmp
cmp
movsb
sar
daa
rclb
and
pusha
or
outsl
jnp
xor
or
cmp
cmp
jo
ret
mov
mov
scas
int3
pop
cmpsl
mov
cmc
dec
pop
stc
lret
test
cmpsl
es
out
jp
rcrl
out
inc
jp
xchg
and
or
jge
jae
push
in
test
cwtl
mov
stc
fistps
cli
mov
ret
lret
add
scas
insb
or
xor
out
fldt
fcomip
out
es
dec
mov
mov
adc
aad
push
lods
jecxz
xor
push
and
push
fs
std
inc
call
xor
push
and
or
cmpsb
repnz
dec
inc
sub
push
xor
int3
divl
std
hlt
pop
pop
sbb
and
mov
es
jecxz
mov
adc
shr
sub
popf
test
fdiv
inc
mov
mov
add
frstor
xchg
loop
mov
sub
scas
inc
sub
insb
sub
or
shr
push
fisttps
mov
sub
sbb
cmpb
jge
add
and
popa
or
stos
and
mov
aaa
or
scas
aas
inc
stos
sbbb
xchg
mov
mov
fildl
jo
sti
dec
sbb
lcall
sbb
and
mov
lds
mov
pop
mov
lea
xchg
shr
push
mov
mov
rolb
mov
test
xlat
and
enter
lods
add
cld
pcmpgtd
shl
mov
and
daa
dec
or
ret
add
mov
lret
jl
std
or
inc
jno
addr16
and
cmp
mov
adc
daa
icebp
addr16
movsb
shrb
pop
into
leave
add
inc
xchg
insb
subb
repnz
pop
adc
push
pop
mov
lea
push
into
push
push
scas
inc
lea
ret
cmp
mov
jae
push
dec
sbb
fcmovnu
push
mov
in
fdiv
jge
mov
xor
jg
add
pop
cmp
push
hlt
stos
push
add
jecxz
xchg
icebp
inc
movsl
jecxz
rcrl
aas
add
sub
test
outsb
jns
test
pop
sbb
call
sub
lahf
dec
out
pop
mov
dec
mov
mov
jge
xchg
or
inc
in
adc
aam
jge
sub
add
fidivrl
ljmp
jns
cltd
sbb
leave
fnsave
test
adc
and
inc
jmp
inc
iret
add
mov
rep
jno
out
cwtl
imul
sarb
cld
repnz
cmc
pop
mov
sbb
inc
in
neg
mov
stos
test
ret
out
int
mov
mov
cmc
lea
fists
sbb
mov
sub
add
imul
mov
cld
mov
les
sbb
adc
lea
int3
cmpsb
push
int
push
lods
mov
jo
cmp
or
mov
stos
pop
xchg
mov
mov
add
shrl
push
add
and
divb
mov
sbb
push
add
jmp
cli
xchg
test
fucomip
mov
xchg
sbb
xor
das
jg
mov
or
dec
sbb
dec
outsb
xchg
pop
std
add
das
mov
outsl
aaa
hlt
movsl
xor
dec
mov
sarl
sub
sbb
cli
scas
fs
mov
outsl
ljmp
pop
jb
pop
jg
jns
pop
jno
leave
mov
adc
or
mov
mov
popa
hlt
inc
mov
mov
and
inc
xchg
pop
lds
test
in
inc
mov
mov
clc
popf
and
sub
and
sub
cld
mov
enter
imul
rcrl
jns
jge
jg
mov
aaa
insb
subl
cli
mov
pop
xchg
sbb
mov
add
inc
roll
sub
loop
dec
pushf
and
sub
pusha
mov
mov
pop
cmp
push
in
and
sub
push
push
int
cmp
inc
enter
int
movsl
mov
pop
xchg
out
xlat
jb
loop
aaa
jle
ror
das
insb
jb
cmpsb
jle
outsb
dec
cmp
aaa
cmp
mov
fistl
lods
leave
aam
cli
jp
std
xor
test
orb
in
ret
mov
hlt
out
outsb
sbb
mov
adc
adcl
nop
and
cmpl
loop
mov
mov
lods
mov
mov
add
fcmovb
testl
or
rcr
cmpsb
adc
test
adc
cmp
movsb
pusha
push
inc
mov
and
add
push
jne
jns
add
and
outsb
out
adcb
push
mov
fldcw
sub
cmp
ja
pop
pop
add
scas
clc
sbb
cmpsb
loop
sbb
push
jnp
push
loope
jg
push
pop
cmp
lcall
xor
and
sbb
push
jecxz
push
dec
and
sub
inc
ja
push
out
xor
xor
nop
adc
add
xchg
add
testb
sbb
rorb
cmp
push
dec
scas
pop
cli
jmp
cli
mov
xor
sbb
test
ljmp
das
ja
mulb
fdivl
push
scas
cs
xchg
mov
enter
pop
popa
repz
mov
add
inc
push
add
dec
lock
jl
out
stos
bound
iret
nop
adc
push
xchg
in
cli
sub
jae
or
rol
inc
sub
xchg
cmp
jg
xorb
stos
jecxz
and
xchg
ja
cmp
ja
repz
xor
or
xchg
movl
cmc
arpl
mov
or
sbb
movsl
dec
clc
xchg
in
add
enter
pushf
xchg
push
lret
mov
cmp
or
push
mov
dec
pop
pop
pushf
adc
int3
and
int
in
and
xchg
cwtl
out
dec
inc
jo
push
or
push
push
sbb
lret
out
aad
out
push
test
mov
lcall
shrl
jb
subl
jmp
sbb
filds
dec
add
daa
lcall
push
pop
lret
stos
imul
xchg
insb
mov
lahf
inc
xor
mov
mov
push
push
mov
or
add
bnd
sub
loopne
shll
jle
jae
push
fstpl
unpckhps
xlat
mov
jg
icebp
jl
pop
ret
in
clc
mov
or
jp
stc
mov
popf
dec
xor
iret
ret
gs
adc
pop
shl
xor
arpl
data16
push
mov
loope,pn
jno
xchg
mov
xor
adc
orl
int3
pop
xchg
jg
cmpsl
dec
les
pop
jnp
push
cmpsb
dec
mov
addr16
jns
outsl
fbstp
cmp
cmp
pop
ljmp
loop
xchg
aam
in
test
jg
pop
loopne
movsl
repnz
cld
das
xor
shll
dec
push
push
xor
dec
adc
ret
xchg
add
ss
je
loop
lea
add
cli
sub
pop
dec
in
int
mov
sub
mov
rclb
push
jg
or
pop
dec
jl
jns
jge
mov
inc
adc
mov
or
fists
dec
sbbl
pop
repz
ja
sbb
call
cmp
xor
jnp
cld
cmpsl
jnp
push
pop
into
and
js
fistl
popa
in
pop
es
mull
add
adc
jmp
mov
lock
aas
add
clc
ret
xchg
inc
xchg
sbb
pushf
xor
icebp
xor
in
add
jns
mov
insb
es
push
mov
gs
mov
jns
add
repnz
xchg
adc
enter
or
test
push
inc
mov
jecxz
mov
sub
insb
out
push
stc
pop
int3
inc
sti
in
add
xchg
aas
fsts
adc
addr16
leave
sbb
adc
dec
out
mov
cmp
xchg
add
add
add
pusha
mov
loop
enter
xchg
cmpsb
jmp
push
sbb
sbb
popa
pop
xor
and
sub
xchg
and
ret
rcrl
repz
das
fistps
fwait
push
push
inc
cmc
bound
movsb
lea
out
jp
mov
mov
call
icebp
mov
sar
imul
push
adc
dec
fisttps
mov
cmp
push
jae
pushf
jo
or
lock
mov
shll
add
inc
add
or
and
out
mov
xchg
xchg
imul
lea
mov
pop
pop
cmc
fwait
andl
sti
cmp
outsl
push
hlt
out
aam
adc
xchg
fsts
test
xchg
add
xchg
fsubrp
setbe
fcompl
push
add
iret
inc
inc
lahf
dec
mov
imul
hlt
pusha
and
std
pop
fidivl
and
sti
into
cli
js
rcl
push
nop
inc
movsl
nop
mov
lea
lahf
sarl
das
orl
push
in
pop
xor
xchg
jg
test
stc
pop
repnz
push
add
add
jo
pusha
lea
pop
repz
mov
or
jnp
jl
in
xchg
and
cmp
xor
cmp
scas
cmp
adc
xchg
jmp
cltd
mov
icebp
pop
jno
vandnps
push
xlat
xlat
xorb
pop
fists
in
inc
pop
rclb
cmp
pop
jmp
xchg
cmp
push
push
mov
xchg
xor
ja
jmp
or
mov
fdivr
xor
push
xlat
cmp
es
xchg
in
cli
jne
cmpsl
scas
dec
into
cltd
jle
pop
adc
push
lret
cltd
inc
call
iret
adc
xchg
jne
rdpmc
sub
mov
sbb
movsb
add
scas
pop
aas
mov
or
jge
push
outsb
cmovs
fisubs
adc
or
add
test
xchg
inc
mov
push
shl
icebp
out
fistpll
leave
inc
xorb
ret
mov
xchg
xor
fnsave
pushf
dec
jae
pcmpgtb
jle
mov
popf
mov
aas
sub
inc
gs
lea
sub
inc
and
jne
push
dec
push
mov
stc
jno
xchg
jnp
jle
jp
inc
sbb
sahf
pinsrw
cwtl
add
sbb
sub
addb
shlb
hlt
add
shlb
cmp
pop
pop
mov
jae
xor
fucomi
cmp
out
jle
lods
and
adc
push
in
shlb
je
mov
bswap
cwtl
adc
in
cld
in
movsl
and
cmp
jo
sti
jbe
push
inc
negb
pop
mov
in
mov
xchg
and
jae
arpl
out
dec
push
xchg
and
sbb
inc
movhps
das
cs
inc
lahf
cmpb
fsubrl
xlat
out
insb
arpl
pop
popa
out
xor
xchg
adc
xor
and
adc
rorl
into
inc
pusha
pop
mov
cmpsb
jnp
out
movsl
mov
mov
xchg
jmp
ret
pop
xchg
pusha
xor
les
jp
roll
js
push
pusha
push
push
xchg
push
into
or
jne
push
in
push
and
pop
dec
sbb
ljmp
dec
cmp
adc
loopne
push
lret
dec
mov
scas
xor
hlt
negb
cmp
mov
cmpl
insb
lods
mov
sti
mov
movsb
je
inc
xchg
add
hlt
daa
push
xlat
into
mov
notb
or
lock
pop
nop
scas
mov
stos
movups
dec
repnz
stos
pop
dec
shl
xor
movsb
push
and
mov
into
arpl
mov
mov
in
adc
or
push
aas
cmp
add
adc
out
aad
mov
js
aaa
lret
addr16
and
mov
inc
xchg
mov
leave
pop
das
daa
mov
or
cmp
pop
lds
inc
push
adc
filds
pcmpeqw
sbb
popa
insb
pop
or
mov
daa
adc
ffreep
out
sbb
jne
call
jp
or
sahf
or
imul
sbb
cmp
imul
shll
imul
xor
lcall
adc
in
inc
mov
leave
xlat
mov
and
adc
mov
insb
cwtl
loopne
mov
and
and
pusha
addr16
fs
mov
inc
fldt
in
int3
rorl
push
xor
cmp
ficomps
adc
xchg
clc
dec
mov
mov
mov
pop
fiaddl
divl
ret
lcall
push
cmpsb
adc
ds
and
shlb
lcall
fbstp
push
das
loopne
aas
or
shlb
ljmp
cwtl
pop
xor
push
sub
add
xlat
pusha
push
lods
mov
sub
popl
ja
stos
pop
bound
aas
fs
jge
or
mov
jge
fldenv
and
dec
aam
sub
cld
fsqrt
and
xor
adc
pop
sub
xchg
ljmp
push
movsl
cmp
lcall
mov
mov
mov
mov
sbb
fwait
mov
adc
mov
push
push
cmc
jecxz
adc
jo
inc
std
popa
push
stos
sub
pop
in
rcl
xor
xor
lret
mov
sbb
inc
jb
xor
arpl
mov
pop
inc
call
stos
xchg
in
cmp
test
dec
push
repnz
adc
sar
push
repnz
repz
ror
push
popa
add
mov
das
in
push
movsb
cltd
xchg
int3
daa
insb
int
add
sbb
and
adc
mov
idiv
das
sbb
shlb
push
les
scas
mov
and
add
xor
loope
hlt
fists
sahf
pop
xchg
jb
jecxz
mov
out
dec
jmp
and
lret
lea
push
cmp
jge
test
adc
pop
sub
add
movsl
js
adc
cmp
inc
cmp
mov
arpl
xor
inc
test
or
dec
cs
lahf
adc
sbb
cli
or
in
push
or
lods
fisubrs
mov
cmp
std
sub
sbbl
rolb
mov
ficoml
mull
sbb
aad
adc
mov
out
and
or
jmp
mov
ljmp
cmpsl
pop
jo
sub
insl
pop
cmp
call
xchg
mov
cmc
jns
loope
push
pop
and
sarl
outsl
and
and
add
push
mov
inc
lock
clc
mov
clc
testl
aad
cwtl
int3
inc
inc
cmp
dec
or
andb
jb
aam
xor
test
sub
mov
scas
sbbb
sbb
cli
lods
repnz
pop
mov
push
ss
cmp
push
push
jo
es
loop
mov
out
push
mov
arpl
cmp
inc
int
stos
jecxz
push
xchg
push
es
push
enter
xchg
add
test
sbb
cmp
or
push
ror
mov
push
mov
clc
sbb
ficoml
push
mov
push
out
add
mov
sub
xchg
pop
jecxz
pop
sub
add
insl
call
aam
inc
lret
rcrb
mov
mov
and
ja
aam
pusha
push
dec
pushf
mov
mov
out
xor
jb
aaa
pop
fdivp
addl
mov
add
jl
notl
cld
jl,pn
sahf
ja
fisttpll
movsl
mov
adc
je
mov
push
push
fprem
je
mov
ret
pushf
loopne
cmp
mov
mov
pop
mov
mov
insl
iret
xor
mov
or
stos
imul
push
ljmp
je
mov
cli
sbb
jmp
pop
adc
xchg
arpl
add
das
dec
mov
leave
in
jg
xor
lds
adc
and
xchg
ds
stc
rcll
icebp
roll
and
push
test
outsl
mov
inc
mov
pop
xchg
scas
out
outsb
mov
mov
test
sbbb
mov
xor
xlat
and
mov
les
ret
movsl
push
out
sub
xchg
insl
je
push
xor
jbe
jae
push
or
cmpsb
add
cmp
cmpsl
lahf
loopne
cltd
scas
mov
pop
into
sub
fldl
out
out
mov
dec
jge
cmp
fs
cltd
adcb
cli
cltd
into
xor
mov
pop
pop
jge
push
cmpl
pop
test
add
inc
fildll
aad
cmp
aas
inc
ja
fcompl
fs
xchg
or
add
cmp
sbb
in
mov
in
out
inc
sahf
fdivrs
les
int3
and
testb
and
dec
repz
fimull
mov
out
or
jg
xor
or
cwtl
mov
push
push
enter
push
add
aaa
push
out
mov
loope
fdivrs
dec
pop
and
sbb
inc
andb
push
or
fwait
and
or
xor
and
addl
mov
xlat
add
cs
jne
or
test
add
rorb
mov
aaa
cwtl
aas
es
pop
pop
cmp
xor
daa
jae
jnp
mov
inc
push
sbb
and
incl
xchg
je
mov
adc
xchg
cmp
add
push
lods
xchg
xchg
push
fucomp
cmp
dec
adc
stos
loope
dec
popf
rcr
ja
sbbl
pop
testl
movsl
stc
shl
dec
push
pop
dec
fwait
adcb
aad
mov
leave
sbb
cs
arpl
shll
sub
dec
cmp
pop
lret
or
jp
shr
sbb
sahf
loop
inc
fldenv
mov
popf
test
fidivrl
lcall
testb
shl
add
push
and
jecxz
xor
shrb
xor
push
ss
mov
pop
jns
mov
testl
loopne
outsl
daa
fdivrl
addl
sbb
xor
xchg
xchg
sub
mov
push
inc
and
and
dec
cmpsl
icebp
arpl
jmp
fidivs
push
inc
adc
sub
hlt
shlb
jne
mov
inc
pop
test
in
in
inc
adcb
inc
mov
mov
cmp
push
iret
sub
fmuls
pushf
add
jg
xor
cmc
push
xchg
shrb
xorb
mov
and
inc
mov
mov
xchg
pop
shlb
cmpl
scas
aad
repz
fldpi
inc
inc
mov
xchg
mov
inc
data16
iret
dec
mov
inc
dec
int3
in
sub
adc
push
sti
imul
sub
loope
dec
mov
out
dec
fadd
or
rcl
cli
popa
mov
inc
fisubrl
mov
mov
push
mov
jbe
fidivrs
loopne
mov
cwtl
jl
add
lahf
insb
aas
jge
mov
mov
add
clc
icebp
cwtl
lret
movsl
sub
stos
push
popa
push
jbe
dec
adc
daa
mov
pop
jle
and
movsb
scas
and
jb
mov
sbb
sub
arpl
pop
sbb
cmp
stc
ss
mov
dec
js
dec
jl
inc
pop
lret
ljmp
sar
jbe
pop
movsl
xchg
or
cmpsb
pop
push
mov
xchg
xchg
outsb
fwait
stos
cltd
and
fmuls
xlat
pop
lea
rorl
stos
cli
mov
int
cmpsb
jecxz
gs
enter
ret
cmp
mov
inc
push
sbb
sbb
dec
pop
sahf
insl
imul
lods
popa
dec
loopne
mov
pushf
lahf
lds
shl
pushf
cmp
shlb
xchg
addl
out
and
pop
lea
test
sub
or
dec
fs
push
inc
adc
sub
shrb
aad
push
pop
test
mov
mov
add
lea
adc
cmp
aaa
mov
hlt
out
or
jae
sub
pushl
out
or
lcall
mov
out
loope
std
int3
inc
mov
outsb
jbe
lcall
jns
jecxz
and
jge
add
fs
and
std
ljmp
ret
out
stos
cltd
repnz
push
push
in
and
shlb
ficomps
mov
fiadds
repnz
cwtl
xor
mov
cmp
pusha
add
xorl
mov
jb
add
mov
test
out
clc
xlat
sbb
icebp
push
mov
std
subb
mov
mov
icebp
or
dec
pop
mov
mov
pop
or
lods
mov
and
mov
add
cmp
mov
mov
mov
push
xchg
and
mov
cmpb
gs
in
push
ret
xor
fdivl
add
movsl
add
sub
jo
pop
xlat
rcll
int3
imulb
test
inc
movsl
push
les
jne
sub
les
jo
cmc
sub
aad
dec
and
inc
js
pop
xor
cmp
lcall
lods
in
mov
into
in
fstpl
js
dec
std
ja
roll
aas
mov
jge
lea
std
mov
push
out
shll
js
out
or
dec
cmp
loope
inc
inc
jne
mov
lds
mov
jae
fldl
cmpsb
jbe
repz
aas
push
les
lock
mov
mov
arpl
in
jo
mov
lock
shrl
sbb
adc
mov
test
mov
push
adc
lods
push
inc
sti
sub
pop
sbb
int3
cmp
and
mov
xchg
add
fstpl
xchg
or
js
mov
push
sub
push
movd
jne
push
jle
lea
mov
push
dec
push
or
sbb
outsb
mov
xor
xlat
xchg
sahf
lret
or
js
jnp
andl
out
pushf
sub
jle
popf
cli
mov
sti
add
fdivr
je
out
push
jl
add
adc
daa
insl
mov
cmp
stc
xchg
cwtl
sub
pop
sbb
cld
adc
sub
in
sub
in
mov
add
roll
pop
mov
lret
sub
jecxz
test
xchg
popf
pop
add
lods
fcompl
movsl
jle
adc
in
popf
test
sbbb
loop
ficompl
push
mov
ss
dec
popa
maskmovq
notl
sub
inc
push
jo
fistps
popa
mov
xor
and
test
scas
cltd
je
bound
mov
mov
call
push
das
push
out
in
lret
jne
and
incb
imulb
subb
mov
inc
stos
repz
inc
sub
cmp
cmp
inc
mov
insl
push
movsl
popf
dec
sti
aaa
pusha
push
inc
inc
mov
pop
shrl
int3
imul
push
imul
adc
inc
rorl
cs
inc
sub
loop
aam
ja
push
pop
sti
mov
mov
xchg
jne
or
inc
add
cli
stc
js
mov
pop
mov
xchg
sbb
dec
test
out
imul
sub
adc
mov
or
jge
scas
jmp
call
sarl
or
jl
icebp
fs
and
xchg
mov
dec
jp
lret
ds
shll
dec
mov
pop
clc
clc
add
inc
pop
push
pop
pop
fwait
pop
xor
xchg
jg
pushf
sahf
jne
leave
add
xchg
or
or
jmp
int
pop
sub
loopne
in
ljmp
add
add
sbb
jl
call
mov
scas
inc
lock
adc
sub
pushf
rcrl
imul
ret
inc
sbbl
sub
pop
add
adc
rorb
cmc
lahf
xchg
dec
shll
cmp
sbb
cltd
icebp
gs
mov
stos
xchg
sub
xchg
xchg
nop
fidivrs
push
out
cmp
lods
fcmove
adc
sub
lret
ret
jae
mov
ret
mov
mov
js
inc
outsb
add
nop
sub
lds
mov
iret
cmpsb
arpl
sbb
popf
mov
push
add
sbb
pushf
dec
pmaxub
sti
aas
scas
lods
mov
or
or
pop
repz
popf
iret
out
xchg
sub
popf
out
mov
sahf
rcll
mov
sahf
xchg
movb
pop
ftst
or
adcb
push
xor
push
call
scas
xchg
out
ror
scas
inc
cmp
add
outsb
sti
mov
int
cmp
scas
mov
hlt
add
and
mov
outsl
or
push
repz
adc
ljmp
mov
mov
xchg
roll
mov
pop
addr16
jmp
rolb
mov
pop
push
lcall
inc
xchg
push
popa
or
push
and
add
cmp
aad
out
mov
push
pop
inc
mov
pop
pop
nop
sti
mov
mov
push
cmp
and
stos
pop
add
gs
mov
add
push
jmp
adc
sbb
jmp
xor
cli
lock
dec
sub
or
jge
inc
cmp
jecxz
jecxz
cmp
clc
mov
inc
push
mov
int
jbe
and
jle
dec
jp
cs
mov
jnp
cli
aas
das
jmp
cmp
aam
pusha
pusha
adc
bound
adc
repnz
fisubrl
add
jns
and
xor
sbb
ja
ret
mov
inc
xchg
in
fs
out
xchg
lea
sbb
push
fidivl
cmp
and
xchg
mov
inc
pop
stc
dec
dec
dec
outsl
sti
or
out
pop
subl
jecxz
add
cmp
cmp
popa
cmp
adc
into
lret
fldt
fildl
push
push
and
push
dec
mov
adc
jmp
and
inc
mov
xchg
rolb
pop
mov
lret
dec
adc
ds
mov
ja
cmpsl
stos
xor
lds
std
movsb
in
lock
mov
leave
out
call
sbb
or
scas
mov
test
mov
cld
movsl
bound
mov
mov
sub
push
cmp
mov
outsl
xor
dec
push
js
push
cmp
shrb
cmpsl
and
mov
lds
mov
mov
push
or
lea
push
sbb
daa
repnz
fildl
imul
and
cmpsl
test
mov
push
push
mov
shrl
daa
stos
pusha
sbb
ss
sub
inc
btc
or
fidivrl
lods
in
test
int3
push
mov
rorb
ret
into
incb
clc
jmp
jne
and
loopne
ret
repnz
sbb
mov
cli
mov
insb
push
loope
inc
jmp
inc
add
sbb
leave
rcrl
jbe
add
mov
mov
incl
enter
jno
andb
xchg
dec
jb
and
jge
xchg
loop
mov
lret
add
cli
and
xchg
cs
jns
dec
sbb
dec
add
cli
dec
roll
xor
or
rol
or
out
lret
lcall
inc
rolb
push
add
sti
mov
mov
fidivl
mov
sbb
clc
cltd
scas
jnp
stc
mov
cmc
std
out
xchg
push
pusha
pop
leave
gs
or
fwait
and
sbbb
mov
inc
gs
mov
imul
lcall
lcall
or
mov
rcrb
fwait
div
add
sub
mov
stos
xor
or
sbb
or
jl
lret
rcrb
dec
jle
push
rorb
inc
lcall
mov
inc
or
int3
lods
lods
int3
movsb
repz
mulb
sbb
dec
rol
jecxz
imul
sub
ja
jo
incb
sarl
mov
stos
mov
ds
into
scas
add
sarl
mov
mov
cmpsl
shlb
or
cmp
je
pusha
mov
mov
aas
scas
fwait
popf
insl
repz
add
adc
and
jecxz
outsb
push
sbb
fmull
xchg
sahf
xchg
xchg
fcoml
xor
or
movsl
scas
leave
xchg
jecxz
test
jae
lods
jbe
lret
sbb
jge
push
jns
loop
cmc
sub
dec
sbb
fisttps
inc
popa
adc
mov
or
mov
fs
xchg
movsl
inc
xor
mov
add
push
mov
orb
mov
xchg
outsb
push
les
call
xor
in
fwait
ds
and
add
shlb
popa
ret
pop
xchg
ficoml
mov
sub
scas
cmp
cmpsl
xor
sbb
dec
adc
loop
jl
adc
add
adcl
mov
aas
shl
cli
rcrl
fstps
divl
testb
inc
je
inc
icebp
cmpsl
xchg
sahf
sti
jae
inc
fldenv
xor
lds
lret
insb
xchg
in
inc
out
cmc
mov
mov
imul
ja
adc
dec
pop
lods
test
cli
push
sahf
lcall
scas
lahf
xchg
int3
mov
out
fsubs
xor
xor
adc
shrl
xchg
xchg
pop
mov
mov
jae
aaa
pop
dec
sbb
stos
mov
clc
xchg
aas
inc
pusha
xlat
test
pop
shll
test
outsl
add
aam
iret
mov
mov
dec
fisttpl
adc
mov
dec
push
mov
iretw
ret
ret
mov
aaa
mov
sarb
pop
sbb
xor
leave
jbe
cmp
or
out
jmp
cmp
aas
inc
fstps
mov
jecxz
popf
ja
fdivrl
push
jp
lods
loope
pusha
pop
jae
cmp
sbb
pop
movsb
loopne
imul
jno
xor
mov
jbe
sub
add
fiadds
andl
lcall
loope
jp
int
icebp
movsb
sbb
mov
icebp
push
xchg
add
xchg
hlt
je
jbe
mov
fsubr
out
pop
and
sbb
mov
ret
dec
and
mov
cmpsl
jge
mov
add
jle
push
push
sub
sbb
out
shll
pop
clc
pop
lock
mov
inc
negb
push
jmp
xchg
sahf
sahf
ja
jns
xor
push
sbb
jae
or
sbb
lods
out
cmp
outsb
pop
jmp
add
mov
sbb
imul
ljmp
es
push
imul
fs
ss
adc
iret
push
cmpb
lods
ljmp
cltd
aaa
cmpsl
mov
push
jns
mov
adc
sub
xor
xchg
pop
leave
cmp
aad
sbb
pop
aad
ret
fcmovbe
ss
and
pop
sbb
jne
or
sti
lea
pusha
sub
jl
xor
imul
and
xchg
repz
xor
in
ja
mov
js
insl
mov
imul
mov
mov
add
add
and
pop
or
pop
scas
add
fildl
sbb
cmp
mov
mov
das
and
in
vmulsd
mov
pusha
xlat
std
push
pusha
ficoms
xchg
mov
insb
xchg
rcrl
cmpsb
jns
adc
xlat
std
dec
jns
mov
ljmp
sub
cltd
inc
adc
std
and
outsb
scas
lret
add
lds
pop
push
mov
sub
fldt
out
mov
mov
in
cmp
cmc
jmp
xor
mov
push
insb
fs
stos
out
jnp
push
push
lods
xchg
mov
in
xor
or
sub
xor
add
lods
shrl
jg
adc
inc
adcb
enter
inc
jnp
pusha
pop
stc
mov
lret
inc
mov
flds
iret
pop
les
jl
pop
aad
mov
and
outsb
sub
push
cmp
enter
lds
fldenv
jge
jbe
ljmp
jl
jae
incl
daa
ja
sti
jb
mov
push
stos
xchg
lea
xchg
out
andl
push
test
shll
pop
in
repnz
adc
outsl
ret
push
mov
fdivs
lret
jmp
gs
and
inc
fmul
fucomi
das
jl
push
mov
xor
repnz
pop
pop
das
jno
jbe
dec
mov
cwtl
lods
into
or
les
sub
and
movsl
dec
icebp
movsb
xchg
repnz
ljmp
out
lret
daa
push
arpl
outsl
outsb
mov
mov
stc
dec
scas
stos
negb
neg
or
pop
adc
dec
fldenv
movsb
sub
or
sahf
jne
fistps
mov
stc
pop
push
cmpsb
sbb
dec
adc
out
clc
add
mov
add
iret
mov
jb
push
sbb
movsb
jne
adc
sub
psubq
in
pop
jmp
movsb
jle
daa
cwtl
xchg
nop
into
pop
push
fisttps
push
cmp
and
push
pop
fisubs
mov
stos
mov
sbb
repnz
jo
loope
xchg
clc
inc
inc
xchg
mov
aaa
push
stos
and
cmc
decl
mov
adc
shrb
sahf
iret
adc
js
data16
push
out
adc
and
xchg
ret
movb
xor
mov
fstpl
mov
adc
cwtl
sahf
mov
icebp
lock
xchg
fmul
fcoml
push
clc
bound
rcl
push
push
xor
insl
lods
xor
xor
ret
orl
shlb
cs
mov
sti
jg
mov
iret
pop
push
cs
out
loopne
enter
lret
fcoms
cmpsl
push
idivl
lahf
clc
je
mov
add
sbb
or
shr
scas
xchg
jns
imul
aaa
cmpsl
mov
comiss
push
jecxz
out
insl
cltd
sub
cmp
aam
lock
and
xchg
mov
sarb
je
push
push
sbb
lea
or
pusha
je
push
out
push
daa
push
or
sub
mov
nop
mov
aas
aam
shrl
and
in
pop
xchg
adc
xor
mov
aaa
sub
call
sahf
dec
mov
mov
call
dec
sti
cmpsb
out
jle
mov
scas
mov
xor
daa
mov
pop
sbb
int3
add
repz
mov
dec
or
cli
adc
xor
dec
mov
mov
add
repz
aaa
repnz
push
std
fcom
cmp
in
ljmp
pop
or
loop
int3
xor
jmp
xchg
mov
or
lret
pop
and
in
loopne
hlt
cmp
or
test
adc
mov
je
cmp
popf
adc
fwait
xor
xlat
mov
and
in
jnp
mov
lock
cmpsb
sbb
faddl
jmp
es
stc
sbb
stos
add
jge
andb
imul
lods
fwait
pop
cmpb
arpl
cwtl
rolb
into
sarl
daa
aaa
xlat
fidivl
sbb
pop
push
inc
push
loopne
bound
icebp
adc
push
cmp
dec
inc
xor
imul
sbb
test
jb
jmp
push
dec
int
or
inc
faddl
pushf
sub
ret
sbb
dec
sbb
fbld
pop
cvtpi2ps
xor
ds
pop
sbb
add
cwtl
xchg
je
testl
stos
imul
es
sub
inc
enter
push
out
es
cs
adc
fndisi(8087
and
adc
jle
adc
pop
xor
movb
mov
je
pop
stos
jg
pusha
push
xchg
clc
and
dec
push
lahf
movsl
cmp
imull
gs
loope
mov
mov
push
push
sbb
cmp
sarl
insl
es
xchg
jmp
push
aas
mov
bound
mov
inc
mov
lret
jae
cs
jg
test
out
adc
repz
stos
lcall
mov
mov
sub
rcr
mov
lock
mov
clc
enter
and
push
and
push
adc
out
jo
pop
fstpl
arpl
lds
jg
nop
test
xor
and
mov
jge
mov
jne
and
repnz
or
sub
mov
incl
mov
mov
in
lods
movsl
arpl
cmp
outsb
leave
sub
xchg
cltd
pop
test
and
dec
jmp
xchg
sahf
inc
sub
xor
jo
dec
or
push
push
cltd
in
xchg
mov
push
jbe
pop
ret
mov
xor
pop
imul
mov
push
jo
dec
shll
mov
data16
xchg
pop
in
and
inc
ds
push
fwait
mov
stos
xchg
bound
popf
shlb
insb
jg
add
xchg
xor
add
bnd
loopne
scas
les
outsl
shr
and
xchg
movsl
pop
lods
hlt
cwtl
cmpsb
cltd
sub
data16
lahf
jmp
nop
and
jae
pop
enter
adc
std
push
imul
in
mov
dec
lcall
out
sub
movsl
cmp
adc
pop
cmc
adc
dec
pusha
icebp
pop
sub
mov
xor
icebp
loopne
jbe
pop
cmpsb
std
ret
rol
stos
pop
jbe
add
imul
mov
int
loop
shlb
clc
mov
mov
add
lret
iret
aas
mov
lods
push
mov
arpl
adc
movsl
jge
dec
mov
adc
clc
loope
inc
xor
rclb
xchg
mov
pop
sbb
mov
cmp
mov
ljmp
lahf
adc
jmp
aad
inc
add
div
movsl
sbb
insl
mov
sub
ljmp
push
fsubr
out
mov
jp
cmp
arpl
outsl
xor
scas
pop
push
cmp
sbb
dec
jl
data16
adc
dec
arpl
adc
jae
arpl
shrb
addr16
jb
xchg
rcll
repz
add
xor
int3
xchg
pop
cmpl
stos
xchg
mov
test
adc
xor
cs
xchg
xchg
xchg
cmpsb
push
es
and
pop
stos
popa
rolb
pusha
in
push
stc
xor
sub
mov
ljmp
add
cmpsb
adc
adc
push
mov
adc
rorb
mov
daa
lea
adc
je
sbb
rclb
out
sbb
xor
add
add
cwtl
inc
push
fstps
push
sbb
xor
popf
ds
ja
xchg
rcrl
fildl
ljmp
jl
add
cmpsl
scas
insb
ss
arpl
add
mov
imul
or
adc
pushf
insb
ljmp
idivb
push
xchg
xchg
aaa
jno
repz
pop
add
sti
adc
jne
in
mov
or
in
loope
mov
xchg
clc
xor
lret
sub
movsl
lahf
aam
ret
and
mov
push
or
and
sbb
pushf
mov
int
in
insb
shl
pop
mov
jge
push
push
sub
mov
cmpsl
stos
sub
jnp
lahf
rcrl
mov
xchg
mov
fsubrs
mov
leave
dec
rolb
push
ret
jb
push
cmp
insl
cs
add
in
movsb
rorl
mov
imul
push
cwtl
jae
mov
les
add
inc
pop
leave
mov
jnp
scas
out
cmp
jecxz
adc
pusha
push
icebp
mov
outsb
xchg
scas
xlat
xchg
inc
lods
adc
xchg
popa
fmull
push
add
xlat
xchg
nop
hlt
mov
frstor
mov
mov
rolb
ss
fs
js
and
outsl
test
push
xchg
dec
pop
fildll
cli
fimuls
daa
jo
icebp
fsts
and
mov
loop
faddl
inc
aaa
das
mov
cmp
lahf
ds
sub
ret
add
loopne
gs
test
sbb
ret
pop
pusha
sub
fdivr
into
and
dec
loop
imul
adc
aas
pop
out
or
sub
adc
aaa
add
or
pushf
adc
add
mov
fwait
repnz
fs
push
cltd
xor
fcoml
ljmp
sbb
pop
cltd
mov
jo
jg
imul
or
sbb
jg
push
inc
sarb
push
jl
push
fildl
or
push
lret
xlat
pop
out
inc
mov
pusha
fs
push
cltd
and
lods
insl
xchg
inc
shlb
push
je
xor
fstpt
jp
out
stos
addb
xor
or
scas
push
or
insb
add
jo
inc
mov
push
pop
inc
in
lcall
dec
pushf
dec
sbb
mov
sbb
movl
call
leave
xchg
xchg
push
das
test
bound
aad
cmp
dec
cmp
and
sbb
mov
jmp
arpl
aam
lret
mov
mov
lods
adcb
sti
testl
adc
movsb
das
cmp
xor
iret
jnp
rorl
xchg
cltd
repnz
dec
iret
cs
jb
cs
repnz
fisttps
push
stc
xchg
scas
cli
cmpsl
ss
les
test
xor
loop
sahf
notl
mov
mov
push
xlat
add
test
pop
stos
push
dec
call
inc
mov
push
mov
dec
mov
push
lcall
aam
sub
je
std
in
jg
mov
mov
test
lock
pop
dec
sub
loop
mov
rcll
add
popa
movsl
cmp
xchg
push
in
notl
aam
jp
aaa
fsubp
insl
xchg
jecxz
push
cwtl
sti
sub
lea
je,pt
pop
sbb
aas
or
testl
pusha
out
in
outsb
add
xor
dec
lods
rcrb
aam
stc
mov
jle
ds
xchg
jnp
push
data16
enter
int
xor
mov
push
das
pop
jns
sub
sbb
cmp
sub
or
or
fstpl
ljmp
addb
mov
das
mov
int3
hlt
add
jg
jo
js
sti
xchg
scas
test
jg
lods
push
jb
inc
jp
jnp
in
or
lock
addr16
dec
jnp
dec
mov
pop
dec
pop
add
mov
or
pushf
jle
xchg
and
cli
push
adc
xchg
imul
pop
add
jno
int3
roll
jle
lret
or
sbb
lret
test
dec
out
mov
jns
sub
push
mov
xchg
mov
arpl
das
mov
or
adc
sub
dec
test
orb
xlat
lods
mov
xlat
xorl
icebp
add
ror
jg
fdivrs
cmpsb
pop
push
pop
ja
addr16
dec
cli
xchg
push
sub
jns
sub
inc
mov
ret
dec
and
sbb
dec
pop
out
loopne
iret
fcmovne
push
and
and
cltd
jo
jge
xor
xchg
xchg
push
sbbb
jns
mov
jmp
std
dec
xor
and
test
shl
jo
and
mov
movsb
mov
pushf
push
pop
mov
mov
sub
mov
out
addr16
pop
vmwrite
lahf
bound
pusha
out
fldt
sub
repz
mov
add
sahf
pusha
out
xchg
repz
repz
and
mov
lahf
mov
jb
sbbb
sti
or
mov
or
and
mov
inc
mov
pop
pop
pushf
aas
mov
fsub
jo
xchg
add
in
pop
loope
sti
mov
sub
cmp
cmpl
xor
sbb
or
push
sahf
sbb
cwtl
pop
cmp
test
jp
push
sbbb
push
mov
in
bound
jae
xchg
push
add
lret
xor
mov
adc
in
pop
jo
lcall
adc
inc
and
sub
hlt
in
add
mov
test
jne
leave
pop
movsl
adc
test
jmp
jmp
imulb
fsubs
movsb
xchg
push
fldcw
shlb
adc
mov
and
sub
bnd
ja
repz
lahf
in
cmpsl
movsl
jnp
cmpsl
jle
lret
push
into
out
sahf
jp
jmp
push
and
or
and
out
pop
mov
sbb
xlat
imul
mov
not
enter
divb
lods
mov
mov
adc
mov
jae
push
mov
fstpl
dec
sub
adc
jno
or
xchg
les
sbb
std
test
adc
movsl
xchg
xchg
daa
and
push
mov
mov
jno
xor
add
mov
rcrl
inc
rcrb
push
jne
adc
dec
and
mov
and
arpl
int3
mov
inc
pop
adc
mov
sbb
adc
mov
fwait
xlat
mov
jecxz
aad
jl
in
adc
out
xchg
fs
popf
xchg
out
in
sbb
mov
mov
rcrl
cld
pop
fwait
test
inc
dec
pop
fnstenv
adc
repz
int3
mov
inc
and
mov
jl
enter
test
xor
mov
test
les
and
xor
mov
mov
cmp
shlb
mov
xchg
shll
sub
xchg
shll
push
xorb
add
test
lss
sub
jmp
out
xchg
cwtl
jnp
and
adc
cmpsl
mov
mov
mov
push
and
fisttps
fwait
daa
fbstp
lods
adcb
or
negb
push
lock
jl
mov
adcb
jnp
inc
pop
ljmp
mov
push
pop
and
mov
in
mov
mov
xor
cmp
fisttpll
xchg
dec
ret
rcr
jg
sub
push
fimull
test
bnd
call
lea
mov
jp
call
jae
and
and
hlt
cld
mov
or
adc
xlat
loopne
and
loopnew
mov
insb
test
shlb
aaa
inc
cli
push
ret
mov
rol
mov
add
movsl
mov
jbe
in
aas
mov
insb
into
cmp
call
jmp
stc
repz
sbb
push
inc
jns
xchg
cmp
fimull
xchg
dec
xor
push
cs
pop
enter
mov
dec
js
jle
dec
add
mov
test
lret
xchg
lds
mov
mov
stc
mov
test
mov
dec
pop
cmp
or
pop
mov
cmpsb
mov
lods
xchg
cli
loopne
insl
lahf
outsl
int
push
movsl
dec
push
repz
push
push
push
aad
mov
ret
inc
mov
add
or
loop
ds
sbb
dec
jle
sub
repz
cltd
sub
add
popa
sti
rcrl
cwtl
and
dec
test
fprem
sahf
pop
mov
jle
out
test
repnz
ror
arpl
and
or
pop
push
movsb
shrl
sub
or
test
imul
or
out
cld
rcll
and
outsl
shlb
mov
cmp
out
outsl
inc
sbb
repnz
jb
cmp
adc
outsb
inc
aad
pop
adc
clc
test
xor
daa
outsl
sbbb
adc
fisttpll
or
or
sti
cwtl
ret
jo
in
test
inc
mov
or
orl
pop
xchg
push
and
cmp
and
sbb
mov
aad
cmpb
mov
call
xor
push
arpl
mov
rorl
dec
pop
xor
lahf
mov
mov
mov
shlb
sub
mov
mov
gs
jbe
jecxz
daa
cs
push
int
sub
stos
push
js
leave
lret
jmp
pop
pop
push
cs
xchg
ljmp
popa
in
add
inc
sbb
pusha
out
fildl
dec
adc
std
push
pop
mov
scas
jo
ret
xor
es
in
les
inc
adc
and
dec
test
in
stos
in
js
jnp
dec
cmp
sbb
jnp
cli
inc
pop
add
pushf
cmp
sahf
adc
dec
insl
sbb
xchg
loope
cmp
testl
ds
xchg
mov
ret
sarl
inc
rcrb
fmull
test
sbb
jo
mov
mov
ljmp
lods
mov
and
adc
stos
dec
xor
fnsave
cmp
xchg
and
jecxz
and
pop
jmp
loop
inc
mov
push
and
pop
cltd
call
mov
les
hlt
mov
dec
lret
stos
call
ja,pt
adc
testl
xor
mov
inc
shlb
xor
mov
mov
cmpsl
sbb
orl
sbbl
insb
mov
jmp
and
test
sub
mov
add
ja
mov
mov
int
adc
and
loop
mov
mov
aas
stc
outsb
jg
in
pop
mov
dec
jmp
lock
cmp
pop
add
andl
or
inc
dec
jb
lods
scas
xor
into
mov
jp
orl
mov
pop
dec
add
sbb
adc
jecxz
outsl
fdiv
repnz
jge
icebp
jbe
push
push
mov
cltd
inc
movsl
fst
add
int3
dec
js
orl
sub
mov
movsl
mov
orl
das
lock
mov
mov
loope
mov
scas
stos
sbb
call
pop
icebp
jne
mov
cmpsb
jb
loop
pop
pop
or
pop
push
enter
cld
xchg
cltd
data16
dec
add
pop
or
not
or
cltd
shrl
jae
call
fimull
hlt
adc
inc
xor
int3
bound
pop
xchg
lods
xor
pop
mov
mov
xor
mov
cmp
cmp
addr16
jno
sarl
addb
add
jmp
xor
stos
cli
lods
popa
hlt
cmp
icebp
std
inc
mov
xor
push
int
shll
out
sub
xchg
std
xlat
in
lds
imul
inc
add
in
loopne
jne
cmp
inc
fxch
adc
mov
out
in
inc
repnz
xlat
adc
lahf
cs
cmp
sub
xchg
mov
scas
les
sbbl
enter
std
in
xchg
lret
sbb
out
lea
int
out
sub
lds
lea
shrb
int3
sbb
movl
fldl
pop
jno
adc
nop
mov
test
or
lods
push
push
addl
int3
test
xor
js
mov
push
jge
jo
test
cmp
into
ljmp
mov
rolb
xlat
mov
fwait
jge
push
dec
xchg
sbb
hlt
mov
ficompl
addr16
xorl
aam
lea
xlat
fs
mov
into
aaa
cld
popl
data16
mov
pop
icebp
out
or
stos
cli
ret
mov
outsl
mov
push
sbb
cs
mov
in
sbb
data16
add
inc
jmp
push
xchg
scas
ficompl
daa
jno
xchg
fstps
jle
pushf
pminsw
inc
mov
xchg
sbb
mov
mov
push
dec
lods
inc
fwait
insl
sbb
imul
sbbb
push
in
xchg
aad
push
lahf
and
out
cmp
stos
int
xor
push
sahf
dec
push
pop
stos
aas
clc
inc
stc
stos
and
int
lea
fcmove
and
mov
sub
dec
cmp
pop
sub
pop
add
mov
cmp
ds
jg
mov
cmpsl
adc
xor
push
push
adc
test
xor
hlt
rcrl
lods
pop
movsl
insb
dec
js
or
rorl
jbe
and
minps
addr16
loop
notb
xor
sbb
inc
cmp
je
mov
repz
callw
adcl
les
leave
jne
mov
out
mov
adc
addl
and
mov
mov
adc
cmpl
pop
or
lcall
mov
lcall
or
inc
adc
daa
les
push
mov
gs
test
popf
les
fdivrp
aad
stc
and
dec
mulb
cmp
jle
in
out
mov
data16
loope
mov
inc
cmp
jecxz
xchg
lahf
xor
xor
jno
ret
inc
fwait
xchg
adc
mov
scas
or
cs
fsubrs
js
lret
shll
pop
in
ffreep
push
mov
adc
or
test
addr16
sahf
dec
ljmp
je
adc
pop
mov
mov
scas
repz
sub
jge
xlat
out
int
or
cwtl
jae
cltd
daa
xor
mov
dec
out
mov
idivl
mov
adc
or
adc
xor
andb
aam
mov
hlt
dec
movsb
sub
xor
data16
pop
mov
je
loope
outsb
std
jg
lret
pushf
inc
cwtl
mov
sbb
cmc
xor
jmp
mov
add
outsl
bound
xchg
pop
out
notl
sub
xchg
xchg
loop
and
adc
pop
sbb
ljmp
jno
popf
xor
aam
fwait
push
push
pop
fdivrl
rcrb
xchg
lcall
mov
jg
wrmsr
mov
jns
xchg
aam
imul
sbb
add
mov
lods
imul
outsl
xlat
and
sub
xchg
enter
adc
imul
jg
loop
xor
test
push
fdivl
decl
or
out
pushf
jle
std
pop
xor
insb
in
fcmovbe
je
cmp
mov
jae
fdivl
int3
push
pushf
loopne
ljmp
test
and
test
lret
dec
incl
fisttpll
scas
bound
pop
pushf
jge
push
dec
xchg
push
mov
scas
jo
sar
mov
cmc
js
lahf
test
arpl
shll
out
mov
lahf
sub
dec
mov
pop
or
jb
rorb
lcall
xchg
int
push
rclb
pop
mov
inc
mov
out
mov
lock
jp
std
das
jp
xchg
out
sub
xchg
icebp
pop
push
add
cmp
fdivrp
fsubrl
icebp
xlat
push
sub
sub
jno
push
inc
xchg
loopne
sbb
and
mov
mov
insb
pop
sbb
and
out
and
fnstsw
js
ficoml
test
scas
cmp
dec
aad
mov
jg
or
sahf
out
adc
out
pop
fiadds
xchg
insb
imul
lahf
mov
sbb
pop
insl
cmpsl
test
cmpsb
inc
int3
xor
sbb
leave
push
mov
add
or
mov
adc
xlat
xor
not
dec
nop
fucomp
jp
cs
dec
cmp
mov
cmpsb
xchg
xor
inc
cmp
imul
push
icebp
ds
add
fnstcw
cmp
fwait
addb
add
inc
sbb
or
add
sahf
in
fisubl
and
sub
and
jg
mov
adc
fiadds
arpl
fs
add
inc
pop
movsb
mov
adc
push
enter
jge
fldl
jle
jg
pusha
and
pop
xor
lahf
jecxz
dec
sbb
popf
dec
jns
sbb
jae
mov
add
lods
xor
js
mov
rol
sarl
rcrb
or
mov
outsl
inc
iret
lret
fdivrp
xchg
push
insb
lds
or
das
sbb
push
push
mov
jne
lds
sbb
insb
int3
divl
orl
mov
mov
pushf
fidivl
int3
jmp
mov
adc
outsb
mov
lahf
cmp
push
loopne
pop
mov
push
hlt
mov
mov
orb
cmp
adcb
push
fimull
xchg
mov
sbb
aaa
jbe
xchg
pop
pop
jl
adcb
mov
inc
stc
cmc
xor
mov
sub
ret
setne
das
clc
and
mov
int3
and
fs
adc
popf
add
mov
fisubrs
bound
xor
ret
testb
pop
pop
fs
repz
ja
pop
pop
iret
xlat
pop
mov
test
pop
push
jge
jp
cmp
jle
and
lods
lods
dec
adc
cmp
aam
idivb
and
outsl
adc
dec
sbb
mov
shll
or
scas
pop
jl
adc
ja
push
movl
sarl
cmpsb
fimull
inc
xchg
addr16
pop
pusha
dec
xor
push
mov
push
cli
cmp
mov
cwtl
jmp
add
stos
push
dec
jbe
nop
mov
add
jbe
addr16
movsl
cvtps2pi
add
dec
xor
stos
data16
clc
jle
in
and
je
push
addr16
loopne
negl
test
fsubs
jg
jmp
mov
call
pop
js
xchg
sbb
rcl
fbld
out
movsb
jp
loope
int
mov
gs
cmpl
jno
rol
lret
sti
iret
out
negb
clc
mov
mov
popa
xor
sahf
jp
or
test
cmp
daa
lahf
outsl
cs
fldt
sbb
loope
and
sbb
dec
push
dec
lods
frstor
dec
jnp
std
jae
sbb
incl
mov
jae
mull
xor
cmp
insb
pop
in
lcall
loopne
sub
imul
adc
jecxz
sub
pop
hlt
ja
shl
xor
pop
inc
loop
pop
ds
nop
push
mov
arpl
clc
outsl
push
adc
adc
js
xor
dec
iret
pop
pop
pushf
inc
ljmp
sub
test
test
test
daa
daa
insb
int
and
pop
and
mov
mov
loop
xor
sub
push
adc
push
call
shr
icebp
mov
popf
pop
push
pop
add
iret
xchg
icebp
sub
out
lods
lods
int3
pop
sti
mov
scas
movsl
add
icebp
jae
inc
adcb
lcall
dec
sub
cmp
mov
loope
fcomps
iret
dec
icebp
ret
pop
mov
mov
lock
aam
adc
test
lea
orl
push
stos
cmp
out
mov
lret
aaa
pusha
mov
sbb
out
xlat
push
push
xchg
insl
mov
insb
aad
mov
sub
outsl
mov
pop
add
std
add
aaa
leave
in
inc
je
out
cmpsb
xchg
sub
dec
jnp
pusha
pusha
je
pop
test
les
pop
cld
add
jb
mov
cmpsl
scas
daa
mov
dec
fs
or
movsb
je
in
aam
sbb
push
call
lahf
push
jge
mov
add
mov
pop
movsl
push
mov
test
or
pop
aas
adc
mov
sti
sahf
pop
mov
bnd
movsb
loop
adc
push
test
xor
mov
and
adc
xchg
fists
popf
stos
mov
push
shll
mov
mov
jge
inc
dec
out
cmpsl
out
fcoms
mov
xchg
mov
divb
mov
or
movsl
arpl
mov
inc
into
ret
dec
xchg
mov
ljmp
xor
jle
orb
ret
cmpsl
dec
sub
xchg
inc
stos
or
mov
mov
xor
inc
dec
add
shl
xor
sub
out
orb
cmpsb
iret
fs
jne
imull
add
mov
sub
push
adc
add
xchg
ja
push
dec
and
push
cmp
dec
mov
sahf
imul
repnz
fistl
adc
ficoml
dec
xor
imul
pusha
addr16
test
lret
or
stc
ret
mov
loopne
fwait
add
aad
dec
int
out
mov
mull
mov
hlt
scas
lods
outsb
or
pop
icebp
mov
cmp
rcll
cmp
in
lahf
and
sub
mov
mov
sub
inc
pop
or
or
outsl
rorl
neg
xchg
push
push
fsubrl
inc
inc
sbb
push
xchg
xor
xchg
xor
adc
push
cli
add
fimuls
in
sub
dec
mov
hlt
pop
sub
loop
shrb
add
xchg
cld
sbb
mov
fldenv
cli
sbb
or
cmc
icebp
cltd
ljmp
xchg
les
cltd
outsb
sub
cmp
fdiv
cmpsb
cmp
lret
shl
or
mov
shr
into
aam
xor
jle
daa
ja
and
sahf
addl
sarb
inc
adc
fs
faddp
stos
fsubrs
mov
nop
shl
xchg
scas
outsl
fisubrs
lock
lods
dec
fimuls
popf
lret
sbb
mov
cltd
jo
jge
jmp
mov
push
mov
pop
int
addr16
hlt
lods
fs
cmp
inc
add
lods
aad
sbb
mov
int
adc
pop
sbb
add
jbe,pn
mov
scas
rorb
pop
fs
fwait
cmp
cmp
xchg
test
inc
js
inc
into
push
xchg
push
xchg
movsb
scas
inc
push
insl
ret
sub
dec
add
xchg
cld
xor
mov
jb
cli
push
pop
xchg
outsl
std
push
or
iret
fwait
xchg
adc
into
nop
push
inc
loope
adcb
mov
shll
mov
iret
subl
sub
enter
jb
lahf
xchg
jns
mov
lods
or
mov
mov
mov
call
cmc
sarl
xchg
push
in
dec
popa
mov
insl
insb
and
daa
dec
xor
inc
mov
ss
mov
dec
dec
sbb
into
cwtl
mov
out
jae
jle
test
pop
stc
xchg
xchg
inc
ja
push
test
add
mov
xor
push
or
hlt
cmp
fsubr
imul
gs
dec
lea
push
add
adc
inc
pushf
cmc
mov
lea
loop
rorl
push
jnp
mov
add
repz
pop
fs
rorb
popa
add
mov
ret
pop
push
xchg
test
mov
mov
js
stos
arpl
cld
jmp
pop
lods
push
xchg
testl
jp
sbb
push
sbb
js
push
insb
mov
add
mov
je
rorb
imul
sbb
lcall
xchg
or
mov
test
jns
mov
insl
paddq
js
loop
cltd
cmp
shl
mov
out
pop
lret
out
inc
add
arpl
fimull
adc
outsl
push
push
dec
shlb
or
fwait
adcb
lds
add
popf
jo
mov
sbb
popf
daa
and
sbb
lret
xchg
call
sbb
rcl
call
sti
cmc
xor
pop
push
cli
inc
fdivrs
dec
jl
jecxz
lea
or
push
lods
xor
lock
mov
inc
popf
cmp
and
xchg
push
notl
insl
aad
data16
add
pop
stos
pushf
xchg
add
mov
pusha
jle
mov
inc
imul
inc
sub
dec
jg
rcr
bound
cs
imul
fwait
lahf
jbe
or
xor
ret
inc
pop
push
lods
xor
insl
pop
add
test
mov
fwait
push
ret
ret
mov
or
orb
and
xchg
sub
sbb
fiaddl
mov
mov
popa
inc
ljmp
mov
mov
xchg
lods
fcoms
mov
push
add
mov
aad
loopne
int3
xor
rclb
bound
xor
jmp
into
cmc
hlt
or
daa
mov
fcmovnb
xor
jmp
out
aam
pop
jbe
adc
mov
jae
and
int
mov
mov
xchg
cmc
mov
mov
push
jbe
add
add
mov
dec
mov
ret
lahf
int
inc
inc
push
cli
mov
dec
fldcw
and
es
mov
in
jmp
push
iret
cltd
mov
iret
sbb
dec
push
xchg
pop
push
insb
call
jnp
shl
clc
mov
sub
xor
aam
jge
sti
ret
rolb
pop
sub
mov
mov
stos
movb
cmp
xor
xchg
cmp
push
add
xor
lods
add
popa
jmp
jg
aas
lea
xor
mov
ret
cmc
lcall
mov
lcall
mov
adc
mov
in
into
jbe
mov
imul
subb
mov
stos
in
inc
sbb
movsl
loope
repz
pop
testl
ss
cmp
ss
dec
repz
add
mov
cmpsb
and
mov
jnp
cs
fcomps
inc
sub
pop
push
psubusw
dec
bound
stos
sub
mov
lret
lods
out
icebp
jle
push
xor
and
jg
ja
popf
je
movsb
ljmp
or
inc
mov
dec
add
cmp
adcw
pop
push
pop
or
arpl
inc
loope
or
sbb
int3
outsl
jne
loope
lods
hlt
xchg
gs
in
jbe
mov
stos
inc
repz
push
add
mov
mov
icebp
sub
hlt
xor
mull
push
sub
cmp
out
scas
sbb
js
movsl
sub
dec
sbb
push
bound
nop
test
add
mov
xor
sub
shl
insl
inc
xchg
adc
pop
lds
in
sub
pop
mov
aas
jp
popa
sub
adc
sbb
adc
mov
fcmovne
cmp
pop
fcmovnbe
imulb
lahf
ret
pushf
jmp
fnstcw
insb
push
rcl
push
xor
lret
dec
cs
or
inc
fs
mov
gs
sbb
out
jmp
jo
enter
bound
movsl
repnz
aad
push
xchg
mov
out
sub
js
call
mov
xor
out
hlt
dec
ficoms
or
jb
bound
cmp
scas
lret
inc
in
push
mov
xlat
out
ss
cld
outsl
cmc
mov
mov
bound
lret
mov
sahf
fisttps
adc
clc
shlb
mov
mov
shlb
or
js
cltd
sub
push
and
push
dec
test
mov
push
leave
out
cmc
data16
in
shll
adcl
jg
pushf
cmp
or
movsb
out
lret
test
lret
scas
ret
and
cmp
mov
ror
mov
stos
movsb
pop
mov
xor
popf
and
cs
imul
adcb
cld
jecxz
fs
pop
out
or
sub
mov
pop
call
mov
das
mov
xor
mov
inc
add
mov
out
jae
addr16
sub
int
je
push
xor
mov
pop
pop
dec
add
fnstcw
push
dec
shr
sahf
or
inc
int
add
out
scas
xlat
pop
inc
cli
mov
mov
sbb
mov
push
sub
mov
pop
in
push
jecxz
frstor
mov
lcall
sbb
push
cmpsb
cltd
jmp
push
mov
sub
jg
aaa
or
mov
cmp
jge
aam
nop
push
add
dec
in
inc
xchg
imul
add
les
stc
out
jnp
ljmp
jle
xlat
loopne
mov
pusha
pop
loope
add
jg
pop
in
mov
daa
or
ja
arpl
nop
dec
repnz
push
shr
in
cmpl
js
push
sbb
cmp
cmpsl
into
jl
pop
pop
fwait
out
cmp
mov
aas
das
sbb
pop
xrelease
fsubrs
into
das
pop
push
xchg
jecxz
xchg
jbe
mov
iret
jp
mov
xchg
sarl
push
ret
andl
lahf
xchg
jae
fimull
sbb
rclb
fadds
mov
mov
jp
idiv
push
pop
movsl
inc
jle
test
hlt
out
add
cli
mov
loope
fldl
notb
inc
dec
mov
mov
mov
jg
std
push
inc
or
pop
imul
mov
push
sbb
mov
mov
ljmp
mov
int
mov
mov
sub
cmpsl
pop
jecxz
cmp
cmp
fs
push
cwtl
cmp
fstl
adcb
addr16
inc
insl
xor
ja
cmc
inc
clc
push
ret
iret
pushf
pop
lret
lea
dec
in
sbb
cmp
jb
adc
loop
lods
push
test
add
push
inc
rol
repnz
adc
jg
sahf
jmp
add
stc
nop
into
jmp
clc
loop
shlb
in
pusha
movsb
mov
divb
cltd
mov
mov
iret
ds
in
xchg
clc
int
in
jp
dec
sbb
mov
xlat
cmpl
jg
xor
mov
into
lods
jge
mov
es
xlat
xchg
sbb
and
jg
add
add
mov
sbb
test
lds
mov
cltd
sbb
jecxz
es
enter
pop
add
jae
sub
call
stos
cltd
cmc
xchg
or
dec
mov
clc
in
cltd
sbb
sbb
adcb
int
mov
fiadds
aad
mov
shrb
shlb
sahf
pop
xor
mov
jmp
in
subl
out
jg
xor
xchg
push
test
inc
push
mov
xor
arpl
dec
xor
cmp
jg
and
push
aam
mov
loope
or
test
and
mov
out
ja
jl
add
jl
iret
or
cmpsb
insb
in
enter
rorl
shlb
adc
dec
test
jp
pusha
cvttps2pi
mov
pop
popa
jp
sub
in
inc
jno
pop
xchg
pusha
and
add
cmp
popf
setns
push
sub
mov
pushf
mov
mov
cmp
push
mov
fiaddl
inc
and
dec
xchg
fcoml
mov
adc
or
lcall
cmp
ljmp
es
int3
inc
dec
fisttpll
enter
and
outsl
ja
mov
or
push
push
out
iret
sub
jb
cmp
mov
das
jnp
inc
add
in
push
add
faddp
in
mov
ficomps
inc
xchg
lret
push
adc
insl
lods
call
mov
imull
dec
data16
inc
xchg
aad
out
sbbl
shlb
sub
jmp
and
lahf
in
roll
rep
xorb
lds
inc
iret
dec
jp
dec
bound
roll
rep
push
test
jns
mov
aad
sarl
repnz
sub
push
mov
xchg
repnz
inc
lods
icebp
dec
in
outsb
lret
pushf
jecxz
cmp
clc
rorb
cmp
lcall
jecxz
jnp
push
or
push
dec
fldenvs
lea
xorb
das
adc
mov
mov
push
mov
push
inc
push
and
sbb
fsubl
lahf
std
clc
pop
ljmp
pusha
repz
int3
in
jmp
aam
mov
sub
notb
inc
iret
mov
jnp
daa
faddl
popa
add
jecxz
mov
fidivrs
xor
mov
jge
fwait
xchg
dec
lret
out
repz
sub
push
mov
xlat
repnz
sahf
cmp
mov
inc
lret
lcall
mov
cmp
sub
dec
jne
bound
movsb
shlb
cmpsl
insb
and
subl
shll
adcl
scas
idiv
cmpsl
aas
and
dec
js
jle
mov
scas
ds
insb
inc
mov
incl
cmp
int3
scas
or
stc
or
stc
or
push
jns
lock
je
xor
lods
fwait
jb
mov
enter
mov
lcall
int
daa
push
dec
in
cs
stos
fwait
icebp
fbld
jp
xor
push
rcll
enter
push
cld
pop
lcall
mov
xchg
jg
sub
cmp
mov
pop
sub
cld
movsb
xor
ds
subb
fcompl
fwait
shlb
lods
lods
sbb
mov
imul
ds
pusha
ficoml
cmp
cld
add
lcall
aad
int3
mull
inc
mov
sub
sub
cli
or
lahf
add
fstpt
jns
cmc
ror
adc
cmp
fwait
xchg
add
push
dec
sti
mov
inc
das
scas
sub
leave
movsb
mov
sbb
ficomps
in
popa
sbb
jmp
dec
imul
imul
out
lret
cld
cmc
imul
leave
fstps
adc
outsb
or
aas
mov
jl
and
pushf
pop
sub
cmp
stc
sbb
jmp
sbb
mov
dec
sbb
je
sub
jg
js
xor
sub
mov
lea
cltd
fdivs
ja
fadds
mov
push
es
mov
fbstp
imul
stos
jle
xor
pop
jecxz
lds
pusha
push
jnp
orl
enter
xchg
fbstp
iret
enter
pushf
cwtl
adc
xchg
xchg
popa
push
dec
adc
enter
pop
loopne
sbb
mov
cmpsl
cmp
pop
pop
mov
mov
xchg
adc
test
cmp
nop
les
sbb
pop
push
test
xchg
imulb
lret
pop
dec
aas
dec
push
sbb
jne
push
add
ja
and
movsl
add
js
inc
mov
pop
push
lds
sub
mov
mov
or
push
insl
fistl
push
aaa
mov
push
mov
js
jae
inc
pushf
sar
sub
arpl
push
mov
dec
sahf
pop
pop
sahf
add
les
fisubrs
jns
call
fsubl
push
inc
scas
sub
mov
iret
xchg
leave
inc
mov
mov
sub
cmc
mov
sbb
lret
xchg
jmp
adc
push
push
push
mov
insl
ss
jg
cmc
cltd
std
shrl
dec
jl
push
push
shll
out
daa
shll
test
out
sub
add
mov
aaa
pop
stos
repz
lretw
gs
cmc
jnp
fbstp
stc
mov
test
lods
push
push
adc
sub
mov
int3
xlat
xchg
lret
mov
jne
and
aam
cwtl
lds
mov
sbb
mov
icebp
xor
sub
xor
int
adc
xorl
jle
mov
and
xor
iret
popf
sbb
lods
cltd
clc
xor
cmp
loopne
call
loop
mov
inc
pop
movsb
add
jns
mov
xor
ljmp
movsl
enter
sti
shr
mov
cmp
repnz
jmp
stos
push
ljmp
loop
movsb
mov
icebp
fs
scas
stc
mov
cmp
aam
dec
arpl
sbb
out
xor
push
inc
adc
dec
inc
leave
dec
cmp
in
pop
mov
insl
cmc
dec
pop
xor
cmp
fstl
dec
push
cmp
jle
inc
subb
cmp
push
jno
dec
or
das
sbb
push
aad
mov
test
outsl
dec
imul
movsl
test
repz
mov
testl
mov
mov
popf
rcl
push
sub
pop
mov
cwtl
pop
sbb
mov
scas
pusha
out
adc
sub
idivb
mov
sub
loope
lret
in
pop
push
xor
jg,pn
pop
int
pop
sbb
pop
inc
add
out
mov
xor
pop
push
fadd
test
push
xor
int3
mov
rcll
popl
push
cs
push
xchg
stc
mov
xor
adc
dec
xor
xchg
outsb
aaa
jmp
pop
xchg
jae
test
and
xchg
insl
mov
jmp
push
cs
mov
or
mov
int3
or
loopne
pop
adc
mov
xchg
mov
fisttps
adc
psubsw
fildll
mov
enter
lahf
mov
clc
push
mov
insl
int
mov
mov
jns
insl
push
call
push
fwait
pop
shll
cmc
imulb
sbb
mov
mov
cmpsl
sub
gs
dec
fs
lahf
mov
out
out
sub
addb
call
xchg
mov
insb
mov
mov
pop
xchg
cld
add
insl
pop
fsubrs
xor
lret
stc
pushf
sub
mov
mov
push
in
mov
or
stos
ds
in
xchg
hlt
scas
and
mov
addr16
iret
mov
shll
sbb
adcl
fimull
inc
mov
push
xchg
sub
cmc
mov
add
dec
aas
push
popf
or
int3
decb
jl
addl
dec
mov
imul
mov
in
je
lock
stos
mov
lret
push
adc
fidivs
aaa
mov
push
mov
imul
sbb
mov
addr16
mov
mov
test
repnz
ffree
ljmp
pop
inc
popf
mov
daa
sbb
fs
cmc
fs
push
dec
ss
ss
mov
stos
ja
add
lods
pop
into
and
jb
inc
int
mov
sti
ja
out
push
or
repz
adc
inc
in
and
jecxz
nop
call
mov
test
test
mov
pop
mov
push
pop
outsb
cmp
loop
ja
cmc
movsb
inc
and
sbb
jecxz
and
mov
push
mov
xchg
lret
mov
sbb
push
cmp
mov
inc
push
imul
shll
outsb
mov
lods
shlb
test
lds
outsb
pop
push
add
movsl
pop
fstpl
mulb
lret
cmp
xor
sbbl
sbb
andb
mul
test
mov
jmp
mov
loopne
sub
out
mov
stc
shl
sbb
add
out
sti
cmp
xlat
mov
dec
inc
push
cld
sub
cltd
or
sbb
sub
add
adc
inc
outsb
push
hlt
fst
cmp
in
and
aas
in
sbb
mov
out
rolb
aam
mov
andl
push
repnz
cmpsb
lret
cltd
jo
stos
pop
test
inc
add
int
mov
mov
insb
or
adc
jnp
xor
aad
add
mov
out
mov
xchg
xor
sub
jnp
inc
xchg
add
cmp
es
xlat
cmp
push
pushf
popa
repnz
jmp
xchg
pop
push
push
sub
mov
xor
xlat
cmc
into
addr16
xadd
xchg
mov
lret
fisubl
pop
adc
cmp
lods
scas
pop
cld
out
testb
sbb
xor
jle
stc
push
divb
sahf
inc
cmc
sarl
lock
dec
cmpsl
mov
int3
mov
mov
call
lods
lret
inc
mov
ja
insb
sahf
lock
rcll
adc
in
in
push
add
sbb
add
mov
rclb
jmp
ss
cmp
sbb
cmp
inc
jecxz
ljmp
or
pusha
xchg
cmp
xchg
pop
clc
push
sub
daa
fs
xchg
adc
ljmp
lock
js
imul
movsb
mov
mov
ljmp
int3
aas
mov
dec
pop
jp
xchg
add
stc
std
xor
scas
pop
leave
hlt
sub
mov
jecxz
icebp
mov
loopne
adc
jae
sbb
movsl
ficompl
lock
inc
decb
rol
clc
jnp
repz
push
fsubs
add
paddusb
dec
mov
sub
pop
in
lahf
arpl
inc
loop
xor
and
repz
movb
or
lahf
inc
pop
sbb
cmpsl
outsl
adc
mov
bound
stc
movsb
shl
cmpsb
dec
cmc
in
data16
aad
fstps
outsl
sbb
xor
stc
in
push
or
sar
pop
push
sub
ficomps
aaa
inc
scas
scas
divl
jno
call
hlt
push
push
sti
repz
xchg
add
insl
and
sbb
mov
popf
fdivrs
jae
inc
push
cmp
leave
mov
sarl
out
jg
test
jg
movl
xchg
xorl
or
popf
jmp
cmp
cmp
xchg
call
mov
xor
mov
aaa
scas
jno
or
insl
pop
lea
sub
sarb
add
lea
cmp
push
mov
leave
mov
add
inc
cmp
dec
push
push
dec
addr16
ja
xchg
sbb
adc
push
jo
mov
pop
push
sub
leave
dec
ja
adc
dec
popf
xchg
push
jne
push
int
sbb
add
lcall
aad
cmp
cmp
cwtl
in
add
std
mov
aaa
repnz
or
into
sub
inc
adc
fcom
rorb
xchg
sahf
adc
mov
jecxz
lea
jmp
aas
ret
pop
cmp
dec
add
lcall
cli
push
pop
adc
aaa
xor
stc
movsb
ror
push
xor
mov
cmpsb
scas
es
xchg
aam
jg
incl
dec
cmpsl
stos
sbb
mov
dec
mov
fdivrs
jle
jb
xlat
xchg
jo
out
ret
pop
outsb
mov
or
xchg
push
mov
popa
movsb
xorl
sub
adc
mov
and
cld
mov
mov
pop
fsubrl
cmpsb
push
push
mov
rolb
dec
shrb
insb
pop
loop
aad
enter
mov
cmp
ficoml
cld
jmp
stos
es
add
rcrb
mov
daa
pop
fildll
aaa
lret
cmp
je
xor
add
pop
xor
pop
xchg
dec
and
int3
jns
push
mov
or
jne
int3
mov
mov
int3
adc
lock
pop
cmp
ds
repnz
enter
test
pop
bound
into
jnp
mov
mov
pop
fldcw
aas
leave
push
arpl
mov
mov
xchg
mov
mov
jae
xor
sar
and
in
xor
mov
or
add
pop
or
jge
xchg
repnz
pop
and
pop
push
add
loopne
mov
dec
lcall
add
jl
mov
outsb
mov
scas
jbe
lret
inc
into
cmp
aaa
leave
ret
sub
jmp
mov
loop
cltd
mov
movsb
dec
push
roll
jg
or
xchg
xor
stc
sbb
or
enter
jbe
or
out
orl
punpckldq
pop
mov
and
into
fmull
push
dec
js
dec
and
ds
int3
or
test
cmp
out
js
jbe
dec
mov
xor
push
cmpsb
mov
test
push
xor
xor
or
mov
int
add
scas
out
mov
and
mov
lds
shlb
push
dec
xchg
dec
cltd
adc
mov
jbe
cmp
aad
jbe
and
mov
cmp
scas
sbb
jp
and
xchg
sbb
xchg
ret
adc
xchg
int3
mov
or
repnz
cmp
lcall
test
cmp
cltd
xchg
lahf
jno,pn
xchg
repz
fwait
stos
call
out
adc
fidivrl
aad
xchg
ljmp
dec
in
inc
cld
pop
jno
cmpsl
repnz
in
negb
xchg
sbb
adc
cld
jmp
insb
repz
xor
or
jae
pop
mov
cmp
mov
stos
pop
test
imul
mov
cmp
mov
mov
mov
cmpsl
mov
pop
mov
mov
add
in
cmp
lea
mov
into
cmc
pushl
and
cmp
ds
jnp
mov
sbb
repnz
inc
mov
lods
or
cs
or
cmp
pushf
adc
mov
sti
ret
jmp
cmp
cmp
ljmp
xor
xchg
cltd
sti
jp
pop
out
and
jmp
sbb
jb,pt
xor
jp
out
xchg
push
out
xchg
fstpt
mov
out
push
mov
xor
out
aad
stos
jecxz
outsl
data16
sub
fidivrs
cmp
call
ficoms
pop
mov
cmp
add
mov
cmp
movsb
test
or
mov
repnz
jb
xlat
loopne
adc
push
pop
jl
dec
xor
fsubrs
loope
outsl
stc
movsl
pop
xor
lock
mov
fildll
ret
inc
add
stc
jl
xchg
imul
jo
sbb
and
loop
pop
cmp
and
inc
pusha
mov
push
shl
inc
xchg
sar
jg
add
cmp
shlb
jl
and
in
dec
jecxz
out
jbe
insl
cmpsb
pop
pop
inc
movsl
xchg
pushf
sti
or
xchg
fcoms
push
xorl
loop
movsl
sbb
jge
inc
es
fs
add
jle
lock
mov
cmp
in
aaa
cmp
movsl
leave
add
cli
push
gs
fisubrl
test
xor
adc
jle
sub
addr16
xor
lcall
cmp
xchg
mov
cmp
je
xchg
inc
or
xchg
ret
mov
adc
int3
push
addl
std
cltd
pop
jl
clc
inc
outsb
cmp
xor
mov
push
insb
int3
jp
loop
mov
adc
ds
jl
stos
popa
push
adc
push
stos
ror
jae
mov
jle
pop
dec
shrl
int3
cmp
jns
mov
test
sbb
js
stos
or
mov
arpl
jp
pop
ljmp
add
mov
sbb
std
iret
pop
imul
out
call
push
test
pusha
jmp
xor
mov
stos
pushf
cmc
push
xorl
imul
pop
push
out
scas
and
test
pop
dec
mov
lods
dec
inc
mov
xor
sub
mov
scas
lods
or
pop
out
mov
mull
test
add
iret
mov
outsb
out
loopne
cmpl
testb
in
pushf
test
xchg
and
pop
inc
daa
jnp
mull
adc
leave
outsl
out
ss
fcoml
jo
adc
ds
and
notl
test
movsl
mov
lods
jle
push
sbb
inc
ds
inc
jmp
dec
lahf
adc
inc
addr16
adc
mov
je
test
shrb
jno
stos
push
les
mov
jp
mov
out
aam
xor
nop
xchg
ljmp
push
push
test
sub
or
jge
sbb
or
mov
jg
add
mov
insb
push
xchg
sub
lods
fsubrs
push
aad
lea
push
xchg
xor
orl
out
jns
jne
rolb
sub
cmp
adc
nop
stos
popa
lds
nopl
sub
push
subb
outsl
push
inc
push
je
or
or
push
add
into
xchg
in
inc
mov
in
daa
out
fmull
imul
mov
sbb
cmp
stos
mov
adc
add
mov
inc
adc
insb
das
sbb
jnp
mov
sub
mov
std
flds
mov
insb
addr16
mov
out
nop
pcmpeqb
jmp
mov
aaa
add
adc
pop
jnp
mov
in
cwtl
mov
rorb
notb
test
sbb
sbb
push
add
cmp
icebp
push
aam
mov
inc
test
push
sub
cmp
cmc
push
call
fldt
jnp
push
push
lods
mov
clc
shrl
mov
and
aad
imul
in
bound
mov
adc
test
mov
ficoml
nop
cwtl
rorb
push
testb
inc
sub
test
sahf
lock
xchg
daa
push
and
xchg
xchg
adc
dec
mov
xchg
inc
push
pusha
or
addb
mov
fildl
mov
dec
push
repnz
pushf
aam
pop
incl
out
push
fldcw
clc
ljmp
push
dec
xor
sarl
filds
cmp
dec
iret
mov
adc
loope
sbb
cmp
and
xor
imul
jae
ja
outsb
inc
movsb
mov
dec
mull
cmp
sti
mov
scas
arpl
ret
mov
fisubs
jge
push
mov
repnz
lods
stos
pop
push
call
loop
add
sub
and
stos
ret
push
movsb
adc
add
inc
ret
jmp
push
or
ja
stc
and
xchg
inc
xor
fwait
mov
mov
mov
mov
dec
jns
adc
jbe
sbb
and
dec
sub
jbe
fwait
mov
dec
ja
and
cli
leave
jbe
enter
pop
cld
lahf
jecxz
je
movsl
pop
ss
and
jmp
les
and
outsb
out
mov
xchg
xchg
hlt
cmp
scas
pushf
adc
inc
imul
popl
insb
sub
lea
les
mov
mov
sbb
jle
mov
stos
cmpsb
int3
push
pop
rol
sbb
les
dec
hlt
inc
mov
cmp
xor
popa
jp
inc
xor
je
cmpsb
push
inc
and
jne
sbb
mov
mov
or
push
add
icebp
and
cmp
xchg
add
stos
jno
sub
dec
inc
addb
pop
xor
movsb
call
movsl
inc
adc
add
mov
insb
cmp
cld
and
cltd
jns
mulb
das
sub
mov
cmp
mov
movsl
jp
loop
insl
push
jbe
fstpl
bound
or
outsl
sub
xlat
adc
fcomip
sbb
andl
test
mov
cmp
or
out
popa
fstl
dec
shrb
fnstsw
test
cltd
pop
fcompl
inc
arpl
iret
in
xor
andb
roll
cltd
or
out
mov
pop
ja
imul
test
cltd
loope
mov
jno
add
imul
pop
pop
and
xchg
push
pop
fwait
mov
cmp
arpl
mov
or
nop
dec
ret
enter
fdivrs
icebp
fldl
cmp
or
push
daa
push
sub
pop
mov
xchg
test
ret
xchg
imul
test
push
dec
out
and
stc
je,pn
jo
push
push
mov
stos
jbe
jo
fbstp
sbb
call
push
int
ss
std
pushf
sub
mov
shr
or
imul
mov
jp
xor
sahf
jecxz
in
xchg
jne
sub
popa
mov
mov
or
clc
lahf
fsubrs
std
xchg
mov
cwtl
leave
pop
les
push
out
inc
rcr
dec
mov
call
sub
xor
xor
pop
push
sbbl
mov
dec
leave
inc
pop
mov
lret
scas
or
pop
nop
cmp
mov
stos
adc
dec
mov
jae
movb
into
pop
cmp
pop
sub
repz
cmp
dec
popaw
cld
and
dec
repnz
mov
iret
popa
ret
xchg
adc
dec
shrb
lea
mov
inc
inc
es
inc
xor
ret
loop
icebp
or
mov
out
popf
mov
nop
mov
insl
sbb
push
stos
es
jo
adcb
cmp
ss
les
sbb
push
lock
je
fnop
fisttpll
push
sub
addr16
outsb
movsb
sub
outsb
rorb
pop
pop
es
push
xor
inc
pusha
cmpsl
add
mov
cli
dec
and
sbb
push
adc
pop
cli
in
rcr
shrb
add
and
loopne
mov
sub
xor
cmp
sbb
lods
xor
cli
ret
insb
sub
repnz
adc
lock
fst
gs
cmp
xchg
xchg
pop
stos
adc
lret
sbb
jns
roll
dec
leave
jno
cwtl
and
out
daa
in
mov
iret
xchg
xchg
addr16
repnz
jbe
cmpsb
or
aaa
xchg
push
pushf
and
mov
movsb
cmp
cmpsb
add
scas
pop
jae
sbb
stos
mov
into
ds
stos
lea
sarb
in
ja
push
xchg
in
and
mov
pop
pushf
in
dec
out
pop
mov
ja
dec
dec
insb
push
fcmovnb
test
xchg
cltd
in
inc
push
sub
mov
mov
arpl
rorb
ret
popa
inc
loopne
mov
lods
push
inc
cmp
sub
sub
fwait
push
mov
jle
mov
inc
gs
inc
mov
push
mov
inc
add
cmp
and
cmp
pushf
xchg
xchg
inc
cvtps2pi
xchg
dec
pop
mov
sub
jbe
inc
jns
lret
cmc
into
cmpsl
addr16
push
push
jns
and
push
xchg
jno
mov
aaa
outsl
jge
and
mov
inc
sub
dec
add
sbb
mov
stc
int3
cld
les
sbb
loopne
movsb
in
xchg
lods
roll
jo
cs
int
sahf
daa
lcall
ds
jge
js
mov
clc
aam
or
fstl
in
xor
mov
mov
dec
add
cmp
sbbb
repnz
pop
mov
dec
arpl
call
movsb
mov
mov
popa
movsl
stos
iret
lock
inc
adc
lods
inc
out
push
jno
cmp
jb
xor
ja
mov
rol
jl
push
mov
sub
sub
push
jge
scas
lock
push
loop
sahf
inc
fs
and
dec
sub
sub
aas
push
data16
test
xor
mov
mov
jg
in
mov
sahf
jge
iret
es
fcmovnu
lock
stos
call
jae
out
cmp
mov
fdivl
lahf
jmp
add
dec
outsl
xor
addr16
and
xchg
xchg
out
and
xchg
mov
mov
dec
fidivrs
lahf
es
ret
and
add
in
daa
data16
push
cmp
das
pop
loopne
push
ja
push
dec
jle
test
push
or
mov
pop
in
xchg
movb
es
sub
cwtl
dec
xchg
test
xchg
fstenv
stos
inc
xchg
and
shrl
mov
ds
pop
inc
fwait
xchg
and
repz
enter
pop
das
jge
test
jae
test
cs
mov
push
dec
iret
imul
fldcw
mov
jbe
jno,pn
fstps
pop
loope
adc
je
int
mov
xorb
stos
out
out
cmpb
lea
pop
adc
fstpl
pop
call
lock
subb
pop
cwtl
inc
add
inc
lods
sbb
repnz
dec
push
out
cs
mov
and
adc
mov
jecxz
cltd
outsb
jle
push
test
push
test
notl
in
rcr
dec
mov
in
push
add
sub
inc
mov
cld
xchg
sti
pop
roll
into
stos
inc
add
sahf
inc
pushf
inc
ds
into
cmpsl
aas
push
sbb
mov
les
mov
pop
mov
inc
xor
inc
cmpsb
jae
jecxz
sahf
jl
mov
jecxz
lods
ret
cmp
mov
mov
jno
insb
ds
push
or
dec
aas
movsl
jp
xor
dec
xor
cli
adc
push
mov
push
inc
loop
inc
shr
test
xor
jp
pop
xchg
popf
mov
ds
jle
out
dec
incb
loop
mov
lea
stos
jb
mov
pop
sub
cmp
cmp
flds
push
sbb
outsl
dec
test
xchg
mov
loopne
ds
inc
mov
pusha
arpl
mov
out
lahf
popf
mov
cs
mov
shr
js
pop
jp
rcrb
test
loope
adc
repnz
jp
jge
and
mov
push
dec
mov
stos
inc
call
sbb
cmpsb
orl
pop
push
adc
lret
popa
xor
jg
mov
cli
dec
push
test
adc
sub
daa
dec
sub
pop
adc
sbb
movsl
add
xchg
add
jae
xor
shll
xor
cld
lods
inc
jg
fisttps
das
sti
cmp
mov
cwtl
imul
fcoms
cmc
into
mov
out
push
loope
out
xor
jmp
mov
jae
pushf
loop
mov
mov
inc
or
ds
xor
xchg
xchg
push
or
loop
mov
xor
push
jmp
dec
ret
mov
pusha
mov
sbb
mov
pushf
mov
or
popl
dec
inc
fsincos
jb
movl
mov
add
inc
xor
daa
mov
imul
jge
cmpsl
mov
xlat
in
lahf
pop
sbb
inc
jne
sub
sbb
mov
lods
pushf
jg
mov
mov
dec
inc
inc
add
data16
and
aad
jb
mov
in
pop
es
mov
popa
or
loope
lods
divb
dec
clc
cmc
stos
adc
loop
test
xor
arpl
bswap
dec
xchg
lds
push
lret
adc
adc
mov
adc
popf
pop
lock
cmpsl
inc
in
mov
xor
ret
sahf
daa
out
pop
lret
lahf
lcall
fistpl
test
dec
jae
stos
mov
pop
lock
jne
aam
insb
in
cmc
cltd
imul
popf
fwait
xchg
sbb
int3
sbb
adc
icebp
inc
xchg
ljmp
mov
add
insl
in
aam
mov
cld
ret
push
adc
imul
xorl
cli
movsl
cmp
push
jecxz
xor
inc
xchg
cltd
push
lret
jecxz
sbb
mov
movsl
ffreep
mov
cmp
into
out
dec
fstpt
aad
fwait
daa
pop
pop
and
aaa
pop
repnz
mov
push
cmp
jno
jecxz
push
stos
scas
ss
add
add
cmp
sub
inc
inc
cs
xchg
mov
xchg
pop
mov
fwait
sub
mov
pop
sub
imul
ja
cmp
inc
or
jnp
ffreep
lcall
scas
arpl
lcall
cltd
pop
or
decb
into
loop
cmc
cli
into
add
mov
dec
push
imul
pop
fsub
jo
fsubrl
shll
lods
sub
xor
jns
popa
pop
rolb
and
lahf
cmp
cli
sbb
and
inc
repz
pusha
dec
hlt
sbb
jmp
push
mov
test
aad
arpl
mov
cmp
pushf
xchg
adc
sub
jns
push
mov
sub
mov
inc
mov
adc
cwtl
cmp
adc
push
mov
inc
imul
arpl
add
add
addb
aam
in
gs
mov
scas
cmp
mov
sub
fldcw
push
cmc
and
sti
cmp
scas
stos
cmpsb
add
cmp
mov
pop
out
jb
je
pop
aas
push
mov
adc
flds
pop
add
ret
movsb
pop
sub
or
dec
mov
lret
mov
hlt
xor
xor
lret
pop
std
btc
iret
rorl
mov
pop
fisubrs
and
jo
dec
adc
or
mov
int
sub
sub
jno
std
pusha
popf
les
inc
pop
mov
out
mov
sarb
pop
cltd
xor
cmpsl
test
or
or
fstpl
jecxz
dec
negb
loopne
push
dec
rcrl
jae
sbbl
clc
repz
jecxz
mov
mov
ss
pop
pop
sub
ret
bound
sbb
dec
ret
clc
adc
lock
pusha
xchg
sbb
cwtl
les
call
and
push
shrd
int3
cltd
jge
sub
lock
dec
sahf
xor
fwait
push
test
js
sbb
xor
mov
xchg
mov
adc
addb
jp
jno
gs
cltd
push
mov
in
je
inc
or
and
jmp
and
dec
or
imul
dec
or
and
insl
lds
sub
mov
dec
cltd
mov
cmpl
mov
movsb
xor
int3
jno
push
and
cmc
cs
push
lods
jl
sub
jo
jbe
jecxz
dec
cltd
mov
add
sahf
jle
ss
xchg
punpcklbw
int3
negl
sbb
in
cli
fstpt
fnstsw
pop
test
xorb
and
pop
mov
dec
jge
add
push
pop
shll
or
mov
pop
bound
es
orl
cmp
hlt
jmp
bound
hlt
xor
fisubs
add
mulb
sub
orb
adc
mov
jecxz
fimuls
push
outsl
jmp
add
or
push
dec
jbe
out
fadds
sti
cmpl
lret
pop
and
add
mov
loop
rcll
ret
popa
ja
lock
addr16
cmp
fst
repnz
sub
movsb
rcll
sbb
cmp
fwait
jne
xor
out
cmp
mov
pushf
fwait
push
out
sub
dec
iret
and
sbb
or
sub
mov
push
jno
add
mov
jecxz
pop
mov
and
mov
add
xchg
ss
pushf
lods
push
mov
push
mov
fnsave
dec
in
jle
cmp
clc
adc
mov
xor
mov
les
mov
test
sub
jmp
rorb
sub
or
sti
adc
andb
xlat
lods
inc
mov
dec
jno
jno
loope
sbb
rorl
mov
cmp
movsl
fimuls
lret
dec
psubb
fucomp
addb
fiadds
mov
in
in
int
das
cmpsl
jo
sub
inc
out
sarb
xchg
mov
sbb
insb
fmul
cmpsl
pop
inc
scas
cmp
out
loop
lea
negl
dec
js
mov
std
rclb
inc
sub
fmul
mov
jno
or
jns
jmp
movsl
inc
inc
and
sub
loopne
sbb
add
jg
jp
ret
jp
icebp
xor
aaa
inc
xchg
mov
jbe
xchg
push
mov
dec
in
lret
xchg
pavgb
dec
fwait
aam
mov
mov
sahf
sub
popf
fisttpll
xchg
dec
inc
xlat
add
jp
lret
xor
roll
or
cltd
lcall
mov
rcrl
mov
cmpsl
lret
jp
addr16
hlt
and
jnp
sub
pusha
xchg
inc
cmp
out
sbb
add
test
mov
mov
push
test
addr16
pop
sbb
cmpsb
cmpsb
movsl
pop
jb
dec
loop
mov
nop
mov
jg
lret
fwait
rcr
ret
sbb
out
mov
ret
cmp
adc
es
lods
push
push
inc
adc
rclb
pop
xchg
stc
outsl
pop
sbb
push
push
mov
sbb
jl
shrb
in
pusha
pop
xor
cmpsb
cmp
add
movsb
xor
mov
mov
jns
xor
fiaddl
add
fildl
cmp
decb
pop
ss
outsb
push
add
call
sub
addr16
test
inc
cmp
pop
repnz
aam
pop
xchg
lea
ret
into
clc
inc
xchg
inc
cmp
imul
out
arpl
inc
out
popa
frstor
sub
xor
stos
or
and
dec
arpl
mov
inc
pop
xchg
mov
sub
pusha
sbb
jnp
ljmp
inc
or
sbb
add
sub
lds
push
adc
pop
sbb
or
andb
and
testb
imul
ret
xchg
inc
enter
test
mov
dec
lret
inc
outsl
daa
test
mov
fstpl
dec
into
adc
pop
mov
lea
das
shll
jnp
les
into
push
loope
sub
cmpl
push
in
xchg
leave
push
aam
or
dec
mov
orb
jno
cmp
push
mov
or
mov
test
repnz
popf
in
hlt
fwait
popf
and
pop
mov
lret
inc
add
popf
jmp
dec
pop
test
inc
push
mov
and
adc
stos
rol
das
pop
push
push
sub
subb
xchg
sbb
push
fadds
js
pusha
jbe
filds
pop
push
les
lea
pusha
mov
push
sub
test
shrb
bound
xchg
out
jns
adc
and
rorl
xlat
pop
inc
js
lds
rorl
lods
sarb
and
mov
xor
cltd
std
cmp
sbb
sbb
ret
loopne
loop
inc
dec
xchg
push
cltd
int
add
cmpsb
add
xor
divl
iret
push
push
enter
and
outsb
cmc
sbbb
mov
addl
sbb
mov
xor
add
out
cmp
mov
xchg
mov
xchg
jb
xorb
jmp
stos
shlb
push
dec
push
add
xor
int3
pop
ljmp
jle
inc
loop
pop
add
fsubrp
fs
mov
pop
bound
popf
cld
or
jo
divl
push
push
dec
dec
add
mov
lcall
xlat
sahf
pusha
add
inc
jb
lods
mov
imul
mov
mov
cwtl
das
or
gs
adc
push
mov
incl
add
into
loop
je
in
lods
insb
pop
inc
add
in
movsb
mov
fcoms
jnp
xor
pop
int3
rcrl
repnz
popf
lret
jg
in
cwtl
lock
dec
repnz
mov
shrb
repz
xor
inc
mov
sbb
xor
mov
enter
dec
rolb
clc
in
in
push
stc
mov
lcall
adc
arpl
jge
fcmovne
pop
sbb
xlat
aaa
or
mov
sbb
rorb
out
sbb
fcompl
jp
sahf
mov
arpl
inc
call
dec
jne
mov
xchg
sti
pop
xlat
sub
pop
dec
imul
mov
mov
push
lods
inc
sahf
loop
push
je
out
add
movl
xor
in
push
xor
sahf
xor
cmp
es
jmp
out
addr16
cs
mov
xor
cli
cli
lahf
out
xchg
adc
pop
inc
syscall
pop
inc
icebp
cli
inc
arpl
cs
iret
cmpsb
je
dec
loop
mov
and
sbb
dec
mov
dec
fsubs
fs
add
mov
sarl
sti
push
mov
sbb
shlb
scas
outsl
inc
or
sub
xor
xchg
push
dec
cltd
adc
mov
sub
mov
add
cltd
cmp
das
mov
push
testb
mov
jp
cmp
pop
cmp
push
gs
sbb
dec
test
inc
cmp
inc
dec
push
dec
mov
mov
gs
jae
cmc
mov
mov
cmpsl
cmp
mov
inc
push
inc
xchg
and
sub
stos
in
sbb
popf
xchg
cld
sbb
mov
orl
dec
push
pop
jb
mov
mov
pushf
xchg
enter
or
test
or
fstpt
mov
cmp
out
lods
dec
shll
dec
dec
adc
jp
adc
jge
js
enter
cs
sbb
lds
add
cli
push
xchg
xor
in
bound
jo
orb
cli
lods
mov
push
or
mov
jmp
mov
cmp
jne
dec
aas
adc
aad
push
stc
das
add
testb
data16
rcl
ss
mov
jge
rcrb
daa
enter
ret
scas
ret
add
mov
loop
movsl
outsl
xor
adc
jmp
pop
jbe
dec
mov
stos
mov
in
cs
popa
in
or
mov
cld
xchg
lods
popa
mov
mov
cmp
cmp
cmp
lods
neg
push
inc
and
rolb
pcmpeqb
push
dec
aaa
rorb
int3
sub
sub
adc
jo
or
ja
sbb
lret
je
jno
aad
sub
and
sti
jne
xor
call
lock
sahf
xor
xchg
stos
inc
xchg
and
out
iret
arpl
mov
inc
lds
mov
lds
jecxz
into
repnz
fbld
popa
sbb
mov
inc
stos
xlat
mov
dec
mov
push
and
and
push
testl
pop
lods
stc
pop
fadds
adc
adc
pop
add
push
xor
xor
je
dec
jne
notb
cmpsl
lods
fidivs
push
mov
fs
xchg
xor
mov
in
stos
xchg
sbb
push
nop
xchg
out
fcomi
and
mov
shll
iret
imul
mov
out
mov
sti
pop
and
in
imul
mov
into
scas
leave
mov
cmp
popa
mov
js
insb
test
ret
das
int
jno
fs
call
jmp
pop
jl
fsubrs
mov
popa
sub
or
dec
jge
lcall
aaa
ja
and
add
lock
xor
fcomi
xlat
xchg
out
inc
jae
and
in
int
scas
fwait
insb
xchg
add
push
and
ds
jg
or
and
outsb
hlt
bound
sub
test
scas
xchg
out
test
addb
dec
pop
mov
sbb
aaa
fistpl
cmp
cmc
movsl
popf
sar
scas
mov
and
or
cmp
jns
jl
mov
mov
sbb
mov
movsb
insl
out
data16
cs
jle
jmp
pop
pop
scas
int3
out
adc
xchg
dec
mov
sub
into
or
mov
iret
dec
add
mov
ret
mov
shl
jg
pushf
and
sbb
inc
imul
jb
inc
cmp
dec
pop
or
into
jmp
pop
inc
add
pop
ds
stos
movsl
sbb
repz
inc
shll
jecxz
mov
in
addr16
mov
push
dec
cmpsb
inc
testb
std
lcall
mov
push
fisubrs
test
and
out
pop
out
js
xchg
or
jle
rorl
in
push
cmovo
ds
aad
js
lahf
jns
rolb
les
repz
adc
in
push
xor
dec
divl
repz
dec
cmpsb
test
jne
mov
xor
lcall
xor
cmp
adc
stos
lds
push
mov
dec
insb
pop
scas
leave
xchg
xchg
fsubrs
dec
rcll
push
aas
addl
stos
push
mov
xchg
arpl
jno
mov
andl
outsl
jb
xlat
arpl
lcall
mov
cmp
lret
in
popl
insb
jecxz
subb
in
imul
and
pop
inc
xchg
cmp
cld
jecxz
addr16
pusha
mov
fs
les
inc
nop
mov
sbb
pushf
cs
mov
repz
idivb
mov
sub
frstor
pop
push
faddp
inc
cwtl
cmpsb
cmc
mov
cmc
and
stc
mov
insb
mov
out
lret
idivl
xchg
mov
mov
cmpsl
xchg
xchg
sub
mov
xchg
mov
sub
mov
mov
movsl
xor
jb
enter
sbb
jb
rep
xor
popa
pop
add
adcl
iret
mov
cmp
into
mov
pop
movsb
cltd
push
popf
xor
rcl
sub
xchg
mov
adc
adc
and
lods
push
stos
test
fwait
hlt
scas
rcr
sub
inc
sbb
push
mulb
adc
and
fldenv
adc
rcll
in
and
mov
lcall
scas
pop
cld
mov
sbb
mov
cmp
xchg
icebp
dec
or
dec
imull
repnz
notl
or
imul
daa
push
and
cs
int3
insb
leave
adc
out
pop
or
std
inc
scas
pop
sub
cmp
cld
jae
pop
test
aad
aas
pop
enter
xchg
add
pop
and
mov
cs
mov
aam
incl
push
add
das
addr16
iret
sbbl
and
xor
in
aas
mov
sti
xlat
push
aad
ljmp
arpl
repnz
xlat
fs
jle
dec
insl
dec
gs
divl
scas
jnp
add
mov
add
pop
ljmp
daa
nop
dec
sub
hlt
push
sub
dec
lahf
inc
rolb
ljmp
fidivrs
jmp
ret
inc
push
subb
bnd
ljmp
popa
iret
mov
fidivs
sbb
call
loope
cmc
das
js
mov
push
je
xchg
sub
jnp
pop
idiv
dec
test
pop
repz
fistpll
insb
cmp
rcr
test
pushl
ja
in
test
je
mov
test
aad
fcoms
mov
mov
aad
in
adc
jmp
jp
and
std
clc
enter
xchg
outsb
push
xor
inc
push
lods
push
dec
sub
jmp
xchg
insb
aaa
push
loop
in
jnp
xchg
push
clc
stc
cmp
mov
dec
pop
stos
outsl
insl
fdivp
insl
pop
or
pop
and
mov
mov
pop
adc
popf
push
out
lods
sbb
inc
mov
sahf
pop
mov
push
mov
mov
test
lea
outsb
jp
adc
sahf
loop
fadds
pop
mov
jne
push
rolb
cli
xchg
shll
jle
inc
adc
or
pushf
mov
nop
or
cmp
test
ljmp
mulb
out
out
int3
enter
out
aam
jl
std
stos
leave
int3
pop
sbb
sti
cltd
jge
aam
imul
add
or
inc
jle
popf
push
and
push
mov
fcmovbe
sbb
or
lahf
and
pop
inc
dec
inc
aam
push
inc
inc
out
inc
ret
fsubrs
cmp
loope
das
leave
daa
enter
call
imul
jmp
or
notb
inc
inc
inc
adc
mov
popf
fwait
aaa
fcmovu
lds
cmp
outsl
xor
popf
jo
mov
mov
icebp
fdivl
mov
xchg
cltd
fisttps
adcl
xor
xchg
call
cmp
subb
insb
fistps
aam
push
enter
xor
push
fisttpll
push
jne
cmp
pop
outsl
sti
inc
sahf
iret
jnp
int3
lahf
adc
mov
dec
mov
jno
ret
cmc
sbb
icebp
unpcklps
sbb
ret
dec
mov
cs
mov
mov
pop
test
stos
in
inc
push
cmpsb
lret
pop
cmp
mov
jno
inc
fistpll
mov
out
iret
xlat
adcl
sbb
gs
lahf
daa
jle
pop
and
mov
lock
rol
leave
dec
lretw
mov
daa
mov
popa
dec
push
mov
jg
out
outsl
xlat
cmpsl
mov
pop
pop
mov
testl
pop
movl
negb
scas
and
adc
adc
lret
and
lcall
testb
dec
fs
incb
arpl
or
test
shll
lret
xlat
cld
dec
mov
aaa
push
stc
arpl
xchg
jg
loope
pop
push
add
sub
push
ljmp
inc
mov
xor
or
sbb
subb
jne
inc
push
cmc
sbb
fnsave
stos
std
popa
push
clc
mov
xchg
jmp
aad
add
xchg
movsb
test
mov
jnp
inc
ficoms
mov
leave
aad
movsb
aad
into
stos
enter
and
jae
int
mov
repnz
add
mov
leave
add
cli
inc
dec
mov
hlt
fidivl
scas
and
add
mov
xlat
movl
stc
xchg
into
mov
adc
es
jmp
cmpsb
dec
jle
add
scas
loop
movsl
loop
push
cwtl
jge
push
daa
popf
push
stos
popf
jg
cmpsb
dec
into
add
xchg
cli
jmp
lea
orl
dec
jbe
popf
pop
sbb
mov
add
lds
inc
ss
clc
inc
int
imul
clc
xchg
ljmp
lods
push
repz
xor
out
jg
lods
insl
inc
pop
movsl
or
ljmp
add
mov
roll
xchg
stos
adc
fildl
or
or
inc
dec
cmpb
lods
aam
int
sub
das
inc
sub
ljmp
xchg
dec
jo
add
mov
push
xor
lods
and
and
mov
mov
add
mov
repnz
scas
or
xor
aad
xor
inc
lcall
bound
int
popf
repz
inc
pop
inc
sbb
jbe
mov
push
or
jg
int
xor
frstor
imul
cwtl
in
and
jecxz
add
daa
add
mov
pusha
mov
push
mov
push
test
and
xor
mov
push
cmp
movsb
pop
test
sbb
xchg
push
xchg
popa
jge
xor
repnz
sbb
popa
ljmp
daa
xchg
jnp
xchg
cmpsb
sbb
cmovns
mov
loop
sbb
push
in
fwait
add
adc
dec
test
add
mov
loopne
fmull
push
adc
push
adc
int3
insl
lret
test
pop
sbb
adc
ret
mov
and
cmpb
outsb
push
mov
mov
fdiv
addr16
int
inc
sub
test
in
or
loopne
lahf
pop
mov
mov
dec
sub
pop
push
dec
jle
dec
add
add
push
jmp
mov
sub
push
cltd
sahf
std
movsl
sbb
test
xor
fnstsw
shll
push
xchg
pop
push
inc
cmp
jbe
pop
inc
or
xor
inc
mov
mov
outsb
jmp
push
sub
cmp
jns
mov
call
xchg
and
fwait
adc
push
xchg
inc
mov
dec
jbe
hlt
inc
arpl
or
sbb
in
add
jmp
push
sub
dec
and
mov
loopne
sub
sub
adc
ja
dec
dec
mov
pop
inc
and
icebp
cmp
addr16
sbb
jecxz
cmc
mov
stos
jne
jmp
cmp
ret
mov
push
xchg
imul
pop
icebp
adc
shrb
or
std
mov
inc
test
mov
mov
mov
lcall
jmp
or
xchg
jnp
out
xor
stos
aas
loop
hlt
cmpsl
rcrl
daa
scas
add
lea
mov
sub
aad
in
js
xchg
std
idiv
ret
push
add
sbb
test
test
jno
dec
or
daa
cwtl
xor
out
jbe
pop
mov
ja
jmp
or
js
pop
dec
or
sbb
in
imul
fwait
imul
xor
pop
fcmovnu
xor
fdivs
stos
ficomps
mov
call
in
repz
sub
movsl
push
push
insb
in
xchg
lods
dec
cmp
jg
cmp
sub
and
scas
and
sti
and
adc
lcall
push
adc
pop
aam
test
repnz
mov
push
arpl
cmp
push
cmp
iret
daa
lds
outsl
inc
arpl
cmp
and
xor
xchg
pop
scas
lds
mov
fcmovb
jo
xor
imul
js
adc
test
mov
scas
jecxz
aad
inc
or
sub
mov
and
fs
cmp
je
bound
mov
aas
pop
in
dec
into
push
std
xor
ss
lds
jmp
push
nop
pusha
jl
mov
popa
adc
mov
xchg
mov
inc
dec
stc
test
push
fnstsw
push
dec
or
repz
xor
out
and
push
and
ss
fsubs
in
xor
enter
xor
mov
and
cmpsb
sbb
ss
lahf
repnz
insl
sbb
in
hlt
and
pop
add
or
in
dec
mov
dec
xchg
sbb
sub
adc
popf
clc
lock
jne
add
sti
mov
jns
mov
daa
mov
cmp
out
sub
cmc
push
jbe
aad
mov
imul
jecxz
adc
xor
pop
pusha
dec
pop
in
imul
call
mov
cmp
cmp
pop
filds
pop
add
dec
sub
mov
jo
dec
jo
cmc
je
cld
cmp
pop
jo
and
inc
pop
sbb
loop
lock
movsb
mov
fwait
inc
and
push
jae
cltd
dec
xchg
rorw
mov
cmpsb
sti
cs
dec
mov
xor
js
pushf
sbb
sti
cmc
sbb
xchg
add
sahf
stc
dec
scas
inc
popf
lgs
ds
lods
testl
aam
push
shll
jl
mov
ss
or
add
pop
nop
add
and
jno
push
pop
das
ret
shlb
add
jge
jecxz
sub
cmpsl
lret
or
jnp
mulb
inc
mov
out
sahf
jb
mov
push
pop
fxch
xchg
mov
mov
data16
pop
test
dec
cmp
scas
add
scas
adcb
xor
inc
flds
fmulp
and
cld
lods
cmp
das
jle
sti
inc
out
stc
adc
minps
push
pop
mov
aaa
arpl
ret
jno
mov
jb
sbbb
and
faddl
xchg
jge
xorl
mov
xchg
out
into
cltd
push
cmpsb
jbe
cmp
push
add
lds
js
adc
scas
jnp
pop
inc
divl
mov
sub
inc
outsl
xor
xlat
ficoms
movsl
xlat
or
filds
sub
cli
stc
int3
leave
add
hlt
fldlg2
or
loopne
std
adc
mov
rcll
sub
loopne
adc
scas
mov
mov
sbb
and
aam
cli
pop
xchg
stos
cmp
out
pop
pop
lahf
sbb
divl
cld
jp
negb
pop
das
sbb
cmpsl
dec
xchg
mov
hlt
sub
mov
jecxz
jmp
mov
inc
fsubr
dec
mov
fwait
sbb
stos
sub
adc
imulb
lcall
ficoml
fidivs
jae
push
mov
inc
aas
add
int3
fstl
cmp
adc
in
mov
lret
pop
cs
scas
and
cld
jne
in
mov
mov
rorl
lcall
aas
fwait
push
imul
shrb
in
dec
dec
push
in
rcl
stos
xadd
int3
lahf
sti
inc
mov
in
or
clc
nop
xor
mov
sub
jl
stc
adc
mov
lock
outsl
mov
adc
adc
push
jbe
loop
pop
sbb
pop
xchg
int3
clc
dec
jns
lods
add
fmuls
leave
pushf
jae
adc
cmp
cmp
jge
push
mov
js
leave
sarl
fiadds
xchg
xchg
pop
imul
dec
cli
pop
jns
lods
inc
ljmp
cmc
aad
aas
fistpll
mov
inc
jb
int
in
mov
pushl
inc
or
jl
push
int3
jbe
mov
mov
mov
mov
fwait
shlb
push
cli
rcrb
bound
xchg
in
sbb
aas
bound
fwait
cmp
dec
shl
sbb
mov
sbb
ljmp
push
ret
xchg
lret
or
pop
dec
inc
int3
mov
loop
lret
mov
decl
lcall
data16
xchg
clc
xlat
int3
add
dec
adc
mov
gs
rorl
xor
mov
mov
loopne
add
or
fnsave
aas
mov
pop
int
loope
inc
push
mov
std
mov
outsl
jg
lods
outsb
dec
fcompl
sub
sbb
mov
and
repnz
xor
mov
fdiv
aaa
ljmp
pop
mov
mov
cmc
lahf
pop
int3
inc
loopne
add
mov
jbe
cmp
sub
rorb
imul
test
repnz
leave
into
icebp
lret
sahf
mov
dec
stos
mov
in
cs
jne
mov
mov
pop
and
loope
dec
mov
sub
mov
insb
aaa
js
dec
mov
pop
fwait
xchg
xchg
cmpsl
jecxz
inc
jo
xor
divb
add
cs
testl
insl
cld
cmc
mov
or
sarl
push
inc
dec
popfw
adc
fs
mov
aam
xchg
push
cmp
inc
or
loopne
push
sub
mov
mov
enter
imul
lcall
pop
sbb
cs
cmc
lret
insl
movsb
mov
sub
or
pop
xchg
gs
xchg
lret
add
les
jae
add
jp
enter
orl
leave
scas
mov
and
jl
xorl
dec
inc
dec
cmp
fnstcw
add
push
outsb
sbb
mov
sarb
test
and
dec
cs
cmp
cmp
aaa
jmp
jne
leave
cld
push
test
lods
push
xor
sub
push
jmp
xchg
push
dec
popa
fnstenv
adc
pop
lock
outsw
in
add
lock
xor
lods
push
xchg
jnp
popf
sub
xor
rolb
lcall
push
pop
leave
sahf
insb
sbb
or
jmp
lret
sub
test
cmpsw
sub
cmpsl
adc
push
adc
lcall
fstpl
stos
jmp
pop
inc
jle
shll
and
inc
clc
inc
lock
or
add
or
xor
seto
push
cmp
aad
pop
mov
jae
movsl
pop
lds
xor
aaa
jnp
sbb
hlt
xchg
cmp
test
out
adc
or
xor
cmp
jne
hlt
inc
cmp
lahf
mov
pop
pmulhw
xchg
mov
and
sbb
ss
sbb
cwtl
sbb
cmp
sub
lock
xor
and
gs
ret
jp
inc
mov
xor
cwtl
mov
popl
loopne,pt
sbb
enter
or
lcall
loope
fsubl
es
or
fadd
cli
jecxz
cmp
pop
jecxz
repz
rclb
dec
adc
jae
and
mov
daa
out
cwtl
and
jge
ficompl
pop
mov
mov
fs
lcall
cmp
or
aas
dec
cmp
stos
rcll
add
xchg
test
xchg
ss
mov
stos
inc
mov
push
pop
in
mov
lahf
xchg
push
add
out
scas
mov
lock
fldenv
inc
cmp
icebp
mov
icebp
pop
inc
xor
shrl
jg
dec
jl
loope
push
repz
js
arpl
cwtl
cmp
cmc
decl
xor
addl
pop
fistpl
adc
lea
mov
pop
aam
pop
push
fsts
aam
aad
dec
inc
mov
bnd
dec
in
and
mov
pop
pop
sub
jne
xchg
or
lcall
xlat
sub
adc
test
movsl
push
mov
add
cli
pop
cmp
hlt
je
popa
out
cmp
stos
std
and
imul
lods
dec
mov
xor
adc
lods
and
pop
negb
xlat
rcll
push
sbb
adc
cltd
cmp
push
leave
adc
and
enter
clc
mov
or
es
cmp
and
outsb
or
popf
pop
mov
xor
mov
icebp
jbe
mov
sub
stc
xor
int
mov
jo
pop
cmp
push
push
mull
adc
jns
mov
divb
std
cmp
add
pop
sbb
inc
out
sub
stos
jne
mov
inc
dec
jo
ja
int3
fsubr
sti
ja
cmc
xor
xor
fwait
mov
or
cmp
lret
in
xchg
pop
xor
pop
aam
arpl
cmp
les
sahf
pop
adc
lahf
sbb
fwait
popf
push
xor
jge
add
test
fdivl
sbb
sbb
push
xor
leave
and
dec
sub
jle
inc
gs
sti
push
adc
cltd
std
or
aaa
sarb
dec
pop
jnp
or
fiadds
sub
sbb
call
xor
ret
fbld
outsb
and
push
jecxz
lahf
scas
addl
aam
xor
aaa
push
into
lds
mov
loopne
cli
sbb
push
lcall
inc
sbb
hlt
mov
pusha
mov
and
lea
xchg
ljmp
out
jp
repnz
and
cmp
fs
loope
loopne
add
sbbb
mov
push
sti
sub
jle
adc
xchg
cli
push
fnsave
inc
jnp
inc
or
inc
jp
and
jp
jmp
nop
xor
sbb
fnstcw
inc
cmp
into
sbb
std
sbb
das
jp
in
repnz
or
sbb
daa
mov
cmp
or
add
loope
sbb
pop
into
inc
cmc
cmp
in
cwtl
mov
push
test
ret
cwtl
cmp
lahf
test
mov
jno
shr
ljmp
jnp
push
sbb
mov
add
outsl
add
or
add
push
aas
dec
test
and
test
imul
loopne
sub
xchg
jb
pop
sub
pop
leave
cmp
dec
mov
cld
sbb
xchg
cmc
stos
jge
dec
cmp
cmc
mov
roll
or
mov
add
fistpl
push
cmc
mov
and
and
and
lret
xor
cmpsb
xchg
sahf
push
sub
xlat
lods
xchg
popa
subl
andb
inc
aas
sbb
clc
inc
rorl
repnz
jne
insb
dec
jle
jb
mov
out
sbb
enter
jmp
into
imul
inc
adc
mov
sbb
lea
ljmp
pop
mov
xchg
inc
xor
enter
mov
in
xor
scas
mov
dec
mov
or
fcomps
jbe
inc
jl
xchg
xor
movsl
pop
jnp
stos
test
jmp
or
sbb
lea
xor
sbb
jno
es
push
mov
int3
inc
gs
add
adc
sbb
xchg
sahf
pushf
ds
std
dec
aam
push
cmpsl
push
out
aad
xlat
or
es
rcrb
addb
sti
cwtl
out
mov
loope
fmuls
jl
cmp
and
dec
fidivrs
lea
xor
out
or
mov
jns
fs
cmc
pop
add
lcall
shll
jbe
sbb
cmp
imul
jmp
aad
add
pop
pop
adc
sbb
aaa
arpl
mov
iret
test
popf
in
out
pusha
cmp
arpl
cmp
aaa
in
mov
jmp
pop
mov
lcall
stos
test
jmp
sub
es
inc
xchg
mov
insl
mov
ja,pt
and
mov
add
les
jbe
arpl
jae
mov
jae
es
adc
ret
dec
das
push
mov
or
in
icebp
xor
das
stc
cmc
mov
fists
mov
aam
icebp
shrb
xchg
fisubl
addb
jb
mov
rclb
std
rolb
xchg
addb
sti
dec
aad
push
dec
inc
sbb
in
jno
inc
scas
cmpsl
add
psadbw
and
adc
inc
dec
add
subl
push
ds
test
pop
sbb
pop
mov
push
mov
in
fdiv
pop
dec
sbb
push
mov
fcmovnu
ret
mov
mov
out
andl
mov
dec
iret
add
cmp
adc
cli
pusha
add
sub
aad
movsl
xor
ljmp
inc
imul
and
add
cwtl
loopne
push
jecxz
jle
inc
and
push
in
in
push
loop
imul
mulb
fsubl
repnz
popf
and
fimuls
mov
sub
adc
cld
pop
xor
mov
add
push
mov
aaa
ljmp
pop
das
iret
pop
loopne
in
pop
mov
cmp
add
lret
leave
and
dec
ss
or
sbb
ja
cmp
push
in
fmuls
fnsave
add
out
loopne
adc
jnp
stos
rcr
addr16
dec
test
rol
push
loop
test
psubsb
mov
xchg
sbb
push
and
xor
adc
in
dec
jns
dec
mov
cld
xchg
sub
jle
lods
add
lcall
imul
arpl
cmp
dec
xchg
xchg
adc
add
decl
push
mov
mov
in
jo
inc
lods
int3
add
adc
xchg
stos
test
stc
sub
jmp
les
or
es
sbb
adc
or
and
rcrl
jae
sub
nop
inc
cld
lods
jl
test
mov
mov
ljmp
pop
xlat
loop
fucomip
adc
outsb
sbb
popf
ljmp
or
sbb
ret
shrb
pop
fildll
mov
icebp
adc
rorb
mov
cwtl
or
mov
das
pusha
xor
fimuls
pop
cltd
fnstcw
iret
test
mov
test
addr16
test
cltd
mov
cld
lret
cmp
ds
dec
push
test
xchg
mov
adc
sub
dec
ficoms
jmp
cmp
xor
btc
icebp
cli
adc
test
loopne
into
or
daa
hlt
xchg
sti
jecxz
cmpsl
lahf
sarb
xor
add
mov
sub
in
pop
inc
mov
arpl
mov
hlt
xchg
xor
pop
inc
clc
cltd
and
cmpsl
fmul
jae
lcall
adc
pop
outsl
jno
inc
cmpsl
mov
out
and
jmp
jmp
add
mov
push
adcb
xchg
outsb
sbbl
cmp
mov
lahf
leave
in
add
sti
jle
mov
iret
push
sub
ficompl
xchg
xchg
test
pop
ja
push
movsl
jno
out
mov
mov
mov
push
cmpsl
sub
push
pop
xchg
punpckhbw
or
pop
daa
jmp
add
cmp
pop
rorl
cwtl
popa
and
movsl
or
jae
pop
xor
sub
or
int
test
in
mov
stos
loop
inc
movsl
push
stc
lahf
mov
inc
and
data16
and
sbb
adc
lahf
test
mov
pop
mov
cli
mov
mov
sub
push
stos
fidivrs
imul
pusha
xor
and
dec
sarl
fs
icebp
call
inc
xchg
pop
div
pop
xchg
in
test
xchg
shll
mov
jno
addr16
xlat
xor
and
or
ja
sahf
sbb
sahf
cmp
sbb
mov
out
rcl
mov
push
cli
inc
insl
mov
jnp
push
dec
lcall
adc
lret
loopne
xorb
cmpsb
add
adc
repnz
adc
mov
mov
cmp
movsb
mov
or
cmpb
pushf
scas
iret
push
stc
jle
jae
iret
and
loop
dec
ret
push
mov
dec
popa
dec
mov
into
loope
shll
xor
loop
nop
inc
mov
push
push
or
adc
stos
mov
decl
ja
jb
pop
mov
lahf
call
inc
mov
push
aam
inc
add
mov
cbtw
mov
mov
inc
shrb
test
lcall
repnz
cmpsl
mov
jmp
in
loopne
adc
popf
test
or
mov
mov
dec
cmp
mov
imul
ja
push
lds
daa
adc
adc
fwait
scas
mov
push
sub
lods
iret
push
adc
mov
aaa
stos
jge
cmpsl
lds
aam
jle
mov
iret
mov
cmp
fmuls
jae
test
into
out
daa
or
xor
pop
xor
sbb
mov
aad
adc
ficompl
sub
in
shll
lea
movd
orb
inc
shll
xorb
into
shrb
mov
xor
mov
mov
pop
adc
shll
and
or
mov
push
add
jb
fists
das
fmul
xchg
movsl
ja
aam
fdivrl
repz
jns
jl
jbe
or
pop
mov
cmp
pop
cmp
xchg
mov
xor
pop
sub
loop
jne
out
lahf
or
shll
mov
inc
mov
jge
mov
shrb
jnp
fidivl
mov
cmp
test
push
out
sbb
ret
or
into
push
lret
adc
push
popa
mov
cwtl
cmc
push
fmull
push
mov
fsubrl
push
cmp
jne
mov
testl
dec
dec
mov
sbb
into
lods
mov
add
adc
jge
lock
fiadds
inc
cmp
insb
in
lods
xor
push
test
andb
movups
xchg
nop
mov
sahf
dec
out
jmp
jmp
jne
into
xor
mov
push
ret
dec
dec
sarl
idivb
jnp
pop
xchg
xor
cmpsb
sub
sti
sub
sub
popf
imul
inc
subb
adc
jae
cmpsb
fsubs
je
add
mov
cmp
js
data16
jae
outsb
sub
jl
mov
mov
push
push
or
jge
dec
stos
add
adc
or
aam
or
jmp
in
mov
lods
add
adc
push
loope
add
or
or
inc
stos
in
bound
out
lods
mov
test
sbb
xor
xchg
pcmpeqd
push
stos
test
scas
jl
push
sub
or
xor
mov
ja
sbb
loop
xor
cmp
adc
push
and
sti
outsb
inc
push
scas
add
xlat
aam
test
dec
xor
xchg
popa
mov
addr16
dec
adc
sub
insl
iret
pop
add
mov
or
xchg
jns
mov
iret
mov
enter
cmc
insl
out
sbb
pop
bound
mov
out
cmc
adc
jns
test
call
or
dec
mov
jle
mov
ror
dec
pop
adc
mov
jne
les
push
add
mov
insb
xorb
pop
rorl
fldl
push
mov
or
shlb
ja
pop
mov
ja
mov
in
cmpsl
subps
sbb
out
adc
cmpl
nop
mov
sbb
mov
aas
jp
adc
in
popa
xlat
jg
adc
push
test
aaa
xorb
lret
mov
mov
sbb
or
mov
inc
ss
imul
sbb
dec
mov
fs
mov
and
test
movsb
test
jg
addr16
arpl
mov
and
frstor
jne
sub
lods
inc
inc
lret
testl
push
incl
out
inc
or
dec
jne
and
sbb
sbb
ret
mov
mov
lret
je
test
jp
popf
incb
andb
pop
loopne
push
dec
cmp
jo
aas
xor
jmp
test
bound
ljmp
ja
xchg
and
cli
push
cmp
mov
pop
xchg
mov
iret
and
or
cmp
lea
cmp
push
ss
inc
sbb
add
add
mov
in
and
push
outsb
add
jb
loope
les
jecxz
adc
in
jb
mov
mov
or
sub
fnsave
icebp
mov
jle
sub
or
xor
add
movsb
movsb
cmp
dec
clc
xchg
ds
in
sarb
sahf
push
or
inc
inc
sub
cwtl
and
pop
inc
rcr
std
mov
push
push
push
fidivrl
push
add
ds
and
call
mov
sub
in
dec
mov
push
mov
je
mov
jae
add
shll
and
inc
insb
mov
mov
xchg
test
and
push
mov
sub
xor
mov
arpl
call
ret
jle
sbb
cmp
lods
mov
jbe
mov
push
and
clc
inc
inc
lahf
xlat
mov
std
lods
xor
ds
inc
adc
les
ret
inc
sub
test
mov
mov
adc
mov
insb
inc
and
xchg
dec
pop
dec
fsubrs
popf
outsb
push
mov
sub
test
in
clc
push
in
rcr
adc
sbb
push
cs
cmp
cmpsb
adc
jno
pop
ds
pop
nop
sub
hlt
add
test
jb
repz
sub
or
and
add
mov
jge
pop
mov
loope
xchg
cmp
cs
xchg
pmulhw
inc
sub
xor
jae
insb
mov
or
cltd
mov
cli
mov
mov
orl
pop
out
lret
mov
adc
adc
out
adc
jo
or
test
pop
out
fwait
adc
push
mov
jne
pop
ret
sahf
mov
sub
or
pop
sbb
inc
fnstcw
push
xchg
push
popa
xor
scas
ja
adc
lret
ret
mov
jns
push
in
shll
pop
outsl
xlat
stos
and
or
sbb
pop
pcmpeqw
ss
loopne
xor
xchg
cmp
push
inc
stos
lds
ret
clc
pop
adc
loope
cs
aas
fists
xor
mov
rclb
int
cmp
scas
shll
xor
cmp
jns
add
xor
jnp
aaa
add
cld
sub
stos
inc
mov
sbb
dec
not
in
jge
mov
push
mov
sahf
repnz
pop
push
mov
notl
loope
dec
or
adc
mov
leave
dec
or
je
leave
pop
ss
jmp
dec
xor
dec
movsb
repz
mov
ja
mov
out
pop
aad
fcmovnu
test
cmp
cmp
pop
arpl
fsubrp
add
add
mov
adc
loop
xor
adc
lret
mov
out
stos
sub
xchg
and
je
xor
in
dec
ss
fsub
into
inc
lods
rorb
mov
in
arpl
push
lds
hlt
adc
adc
into
mov
mov
ss
pop
call
xlat
xor
push
aad
icebp
mov
cmp
ret
stos
mov
pusha
hlt
fsubl
dec
in
ret
shrl
das
add
or
movsl
push
divl
js
insl
call
xchg
push
addr16
outsl
mov
not
dec
inc
cwtl
mov
repnz
shl
andl
jle
mov
insl
and
mov
xor
pop
cwtl
lret
xchg
sub
mov
jne
cli
jns
add
and
inc
xchg
loop
in
and
out
sbbb
outsb
xchg
lds
adc
addr16
test
js
jmp
xor
xchg
cmpsl
test
mov
mov
inc
shll
sub
mov
movsb
mov
sbb
mov
sbb
or
insb
fsubs
in
jo
jns
mov
cld
xor
popf
ljmp
dec
inc
jmp
stos
xor
mov
icebp
cld
cmc
scas
out
mov
adc
inc
shlb
adc
xlat
sub
lods
fwait
or
dec
dec
and
pop
cwtl
dec
sbb
lahf
ret
lret
inc
out
fdivrp
shlb
adc
clc
int
mov
jl
cld
std
nop
and
or
shl
loop
out
outsb
gs
inc
pushl
arpl
addr16
imul
add
scas
adc
jge
icebp
fnstenv
scas
dec
and
sbb
int3
pop
and
out
dec
mov
pop
and
sub
mov
dec
mov
fiadds
int
int3
mov
lea
add
sub
int3
and
jmp
dec
mov
jae
imul
inc
nop
mov
xor
pushf
inc
insl
ss
arpl
mov
ficomps
mov
mov
dec
add
mov
mov
mov
rorl
mov
ror
add
pusha
cmp
jno
js
hlt
sarb
rorl
push
push
sbbl
sbb
je
xor
or
out
fucomip
decb
data16
inc
std
adc
jmp
clc
gs
or
xor
and
subl
sbb
dec
or
es
pop
aad
fsub
sbbb
jne
add
or
xchg
add
xor
cmp
scas
out
scas
xchg
lock
mov
jg
out
mov
and
mov
dec
push
int
add
add
les
test
sub
subb
mov
or
and
fisubrl
shl
add
test
popf
dec
fstpt
jb
aas
mov
sbb
sbb
mov
jmp
dec
addr16
or
cli
push
lret
push
pop
std
sub
std
lods
loopne
aam
push
mov
call
jbe
mov
push
sbb
test
outsl
das
xchg
sti
lea
push
mov
lcall
inc
jecxz
sbb
incb
insb
or
mov
sub
mov
sbb
dec
idiv
xor
out
pop
insb
scas
mov
pop
jns
aad
push
popa
sbb
push
mov
and
push
push
add
fwait
addr16
adc
aad
imul
out
jge
mov
bound
imul
iret
mov
dec
idivl
cmp
pop
lret
ss
mov
syscall
xor
stos
xchg
push
cmp
jg
mov
shrl
cmp
arpl
ja
out
jl
out
dec
fwait
mov
jge
outsl
call
enter
iret
adc
inc
pop
loop
nop
push
sbb
shll
or
scas
mov
sbb
sub
aam
sahf
sbb
mov
pop
mov
rcrb
push
sub
mov
adc
xchg
addl
scas
mov
outsb
idivl
cmp
inc
inc
scas
imul
xor
es
dec
adc
jae
mov
es
mov
inc
adcb
stos
mov
xchg
test
movsb
xor
push
sahf
or
cmp
bound
mov
jno
sub
testl
jmp
pop
leave
push
pop
jg
mov
xor
js
jae
mov
sub
jnp
push
and
dec
dec
leave
notl
movsl
push
out
enter
jne
rclb
cmp
add
fldt
or
mov
jbe
out
ss
xchg
or
mov
sub
test
enter
jg
add
addr16
icebp
cltd
cltd
in
into
lds
push
test
and
or
pop
stos
adc
jl
dec
mov
dec
or
das
lock
cld
test
xchg
arpl
cmp
hlt
mov
mov
sar
jb
mov
insl
in
inc
out
and
cmp
jle
jp
test
lea
cmp
cmp
add
adc
and
push
add
out
data16
inc
sbb
or
addr16
cmp
jae
imul
xchg
mov
jecxz
sbb
mov
fistpll
into
and
pop
ja
jne
fucom
cmp
repnz
lahf
daa
cmp
cmp
js
iret
jns
push
fmulp
out
gs
inc
pop
inc
pop
mov
add
icebp
ss
lds
repnz
pop
jle
mov
loop
cwtl
lret
ljmp
cmpsb
add
xor
mov
cwtl
in
ds
sub
push
gs
insl
icebp
or
add
shrb
mov
pop
ja
popa
jae
dec
rol
mov
gs
fs
lock
xor
jb
out
push
pop
ret
lds
rcrb
jmp
cmpsl
repnz
lock
jb
jae
and
xor
mov
hlt
mov
push
dec
mov
add
in
rcl
fldcw
les
mov
mov
movsl
jge
xor
xchg
ds
push
nop
addr16
cmpsb
les
jne
aad
mov
xor
repnz
imul
mov
cmc
cmp
and
mov
enter
xchg
in
call
xor
jb
stos
inc
sub
mov
add
fwait
adc
sub
pop
into
loop
aad
adc
in
cltd
lret
out
mov
int3
imul
xchg
push
dec
mov
inc
in
pop
icebp
cmpsb
addr16
push
inc
sti
stos
fstl
in
xor
loope
xor
mov
je
cmp
es
test
repnz
adc
push
mov
or
dec
lcall
ss
xchg
ja
xor
cmp
out
clc
idiv
scas
sub
subb
test
aam
mov
xchg
aam
out
stc
insb
lret
adc
out
jno
push
insl
xor
mov
pop
test
inc
xchg
iret
stc
hlt
jno
movsb
outsb
fidivrs
inc
dec
icebp
and
add
sub
test
and
lods
and
pop
movsb
cmp
sbb
jle
mov
add
addr16
mov
shr
rcl
mov
stos
cmp
cmp
shll
xchg
mov
imul
aas
sbb
lods
pop
popf
jg
imul
test
mov
test
add
mov
cmpsl
xor
mov
dec
pop
add
push
pusha
sahf
std
mov
jge
test
or
pop
push
mov
mov
push
or
daa
jp
lea
in
jle
movsl
stc
int3
test
inc
inc
fbstp
xchg
pushf
xchg
daa
not
and
mov
fstps
outsl
xchg
xor
sbb
movsb
es
movsb
push
aaa
xchg
add
pmulhuw
xlat
sub
inc
lds
cmpsl
mov
mov
jo
or
lcall
adc
mov
mov
pop
lahf
jge
xchg
fs
repz
jnp
dec
mov
xchg
data16
es
xor
fnstenv
fisubs
xchg
or
out
push
popf
stc
jg
jge
mov
xor
push
jne
xchg
addr16
jle
movl
ss
shrb
jne
mov
dec
addr16
xor
adc
mov
ss
fnstsw
cwtl
cs
rcll
sti
scas
sbb
je
adcb
stos
xor
in
push
push
lret
xchg
inc
push
mov
push
fisubrs
in
cmp
in
sbb
or
xor
and
sbb
data16
xor
sarb
mov
out
sbb
scas
adc
push
pushf
mov
cmpsb
movsl
out
les
cmp
rcrb
mov
sbb
in
xlat
jo
popf
push
enter
lods
cwtl
mov
movsl
mov
aam
fisubrs
orps
sbb
fld
push
inc
adc
fwait
mov
outsb
sub
into
inc
dec
jg
ror
dec
rol
lock
xchg
scas
ds
addb
dec
xchg
mov
fiadds
out
mov
dec
push
add
inc
imull
iret
jg
jns
mov
jbe
mov
mov
cmpsl
je
pop
int3
in
popf
icebp
inc
movsl
dec
pusha
xor
popf
pusha
lcall
inc
mov
leave
adc
pushf
mov
sub
mov
aas
sbb
addl
dec
sbb
sbb
mov
fidivrs
loop
sub
leave
jge
lock
aam
jne
std
cwtl
lea
lret
dec
loop
push
inc
sbb
lret
push
loop
push
rcl
mov
stc
fbld
rcll
mov
ja
adc
add
push
loop
std
fdivs
xor
bnd
loop
sub
shl
mov
sbb
push
dec
sub
stos
icebp
andb
sbb
mov
test
lret
inc
rclb
cmp
jge
popf
xor
xchg
dec
ss
mov
cld
daa
in
aad
push
sahf
adc
push
sarl
xor
mov
js
inc
shll
sub
loope
xchg
xchg
inc
pop
cmp
xor
shll
mov
ret
hlt
xor
push
inc
cmpsb
mov
sub
rcrl
mov
out
add
fisubrl
out
movsb
insb
imul
jecxz
mov
testb
shlb
inc
pop
loopne
mov
pushf
mov
fsubrs
out
cmp
gs
pop
dec
fimuls
imul
aaa
cmp
lret
sahf
in
hlt
sbb
dec
xchg
sub
sbb
lods
mov
movsl
jbe
bound
mov
sub
inc
push
int3
cs
mov
push
jg
mov
jmp
sbb
stos
xchg
fcomp
mov
and
xchg
or
fnstenv
call
out
cli
test
xchg
push
js
add
xorb
fs
sahf
mov
mov
sahf
jae
shl
inc
jmp
in
es
dec
repz
adc
aam
call
sbb
enter
cmpsb
mov
fwait
push
fildll
mov
aam
add
or
ret
pop
gs
movsb
mov
lea
lahf
dec
inc
cmp
sbb
das
ficoms
lock
iret
mov
jg
mov
mov
adc
insl
sub
xor
lea
and
cmpsl
popf
dec
les
sahf
jbe
xchg
jg
jae
mov
out
in
fisttps
or
mov
jp
sbb
mov
or
lcall
mov
or
mov
jmp
pusha
push
lcall
adc
mov
nop
mov
in
xor
and
stos
jmp
lea
repnz
mov
hlt
hlt
sbb
jmp
in
mov
inc
outsb
pop
gs
or
dec
inc
mov
fwait
out
in
xchg
dec
mov
cmc
fldl
fldcw
mov
dec
or
nop
dec
les
push
sarl
xchg
xorl
adc
stos
cmpsl
fmul
imul
xor
push
outsl
sub
xchg
mov
jle
add
lahf
into
pop
or
int
xor
ficoms
mov
mov
or
cwtl
jb
jmp
push
and
inc
pop
mov
mov
outsl
jne
lds
xchg
mov
xor
and
pop
mov
push
fiadds
mov
syscall
xor
rolb
cmp
std
mov
cmp
mov
lods
or
into
xor
jle
ret
lcall
sub
int
icebp
jae
sub
lock
add
adc
std
mov
or
xlat
das
cmp
push
jne
inc
popf
orb
push
push
loope
scas
fldcw
fistpl
add
mov
mov
dec
push
call
insl
cmpb
xchg
out
fidivl
cmp
movsb
pusha
add
aaa
and
add
sbb
cmpsl
jb
pop
xor
xchg
lcall
mov
xor
push
call
scas
shrl
jl
adc
leave
fldcw
scas
dec
dec
gs
scas
loope
das
cltd
mov
cwtl
int
mov
addr16
add
xor
loopne
bound
std
je
sub
push
lret
icebp
fucomi
sbb
das
bound
adc
xor
fwait
in
sbb
dec
add
push
sub
fcmovnu
js
cmp
add
mov
aas
sub
fcoms
test
insl
call
cmpsb
data16
add
or
adc
and
adc
adc
arpl
cmp
inc
jae
mov
mov
in
imul
mov
sub
push
cmpsl
mov
and
mov
push
mov
call
push
les
cli
jge
pop
push
jg
sbb
inc
mov
mov
lods
jnp
aad
fcom
mov
sub
imul
ret
jno
repz
scas
pop
sub
xlat
xorb
sbb
cmpb
xor
cs
jo
lods
push
sarl
mov
jne
cwtl
inc
arpl
jnp
dec
cmpl
mov
in
add
add
bound
mov
hlt
mov
adc
es
xor
push
cli
or
in
lods
inc
lret
mov
andb
pushf
inc
outsl
test
imul
xorb
aad
rclb
or
lock
pop
inc
mov
sbb
pop
loopne
shrb
mov
in
or
pop
mov
push
std
jae
popa
outsl
in
insb
es
stc
mov
sub
dec
xchg
sbb
fwait
pop
enter
popa
in
mov
mov
cwtl
push
stc
cmpsl
popa
lods
insl
or
pop
hlt
cmp
ja
push
mov
push
cld
insb
fistl
fisttpl
xchg
xchg
add
and
subl
add
jmp
and
cmp
clc
ret
nop
shl
sbb
aad
inc
test
pop
sub
push
in
cmp
fwait
outsl
les
movb
or
mov
call
pop
sbb
inc
inc
sbb
les
push
stc
and
xlat
cwtl
imul
dec
lret
mov
cmp
out
jmp
mov
inc
sbb
out
mov
es
mov
sbb
pop
mov
mov
dec
mov
aam
fisttpll
cld
inc
adc
jnp
jbe
stc
xor
shl
push
aas
sub
ss
add
inc
dec
popa
pop
mov
jo
lahf
lock
call
ret
push
mulw
jbe
pushf
outsb
lret
mov
xor
cmp
mov
js
fimuls
inc
fadds
stos
into
lret
add
loopne
mov
dec
mov
push
rcrb
add
scas
mov
sbb
jae
repz
dec
push
mov
mov
div
xor
mov
rcrl
inc
jb
ficompl
xlat
loopne
jbe
repz
push
mov
scas
jns
adc
shrl
jo
sub
rorl
or
adc
popf
pop
mov
xchg
mov
mov
mov
out
jbe
pop
sub
sahf
ljmp
jecxz
mov
cld
je
mov
jge
mov
imul
push
stos
jg
out
fmulp
mov
jge
lea
xchg
mov
roll
jae
clc
mov
jns
cwtl
add
je
mov
and
jmp
dec
push
loope
scas
xor
mov
xchg
loop
push
test
mov
xor
xor
daa
sub
fxch
mov
push
int
push
adc
insb
or
into
mov
jmp
call
inc
pop
inc
jnp
stos
js
insb
fs
pop
in
lods
mov
pop
xor
fucomp
xchg
cld
fldcw
xchg
jnp
xlat
pop
and
and
cld
or
or
movsb
pop
out
mov
inc
stos
add
cmp
xchg
roll
and
cmp
mov
fisubrs
push
movsl
pop
mov
jb
dec
rcll
mov
cmp
ret
sub
mov
pop
repz
icebp
xor
sub
push
jne
and
fwait
mov
xor
fsub
in
fwait
mov
push
in
shll
fdivl
lea
mov
pusha
xor
imul
jbe
loope,pn
arpl
pop
int3
xor
clc
push
or
aam
mov
outsb
cs
adc
enter
xchg
xchg
inc
je
dec
xchg
mov
fldt
cwtl
xchg
in
mov
scas
xchg
inc
popf
repz
jae
dec
lods
adc
or
cmp
jae
and
mov
xor
test
add
pop
icebp
xor
mov
mov
inc
inc
mov
shll
hlt
fmul
roll
ret
and
add
mov
pop
mov
jp
loop,pn
test
cld
out
out
jnp
addr16
std
testb
sahf
gs
stos
ret
test
das
fidivs
ljmp
mov
dec
insb
add
enter
lahf
xorl
fbstp
daa
loop
or
daa
ja
mov
mov
push
fsubs
lea
fadds
inc
pop
jno
dec
or
mov
push
cmpsl
repz
cld
es
divl
into
nop
bound
adc
dec
and
sbb
bound
cmpsb
hlt
hlt
cs
fiadds
inc
push
pusha
mov
jne
stc
iret
ficompl
and
dec
add
push
add
ficomps
add
fisubl
dec
mov
mov
orb
fs
fcompl
pop
outsb
stc
push
das
sub
aas
xchg
fmul
cld
orl
test
sbb
jg
fisttpll
adc
gs
fcmove
add
jmp
mov
fs
das
ljmp
pop
repz
push
sahf
push
enter
pushf
pop
outsb
or
sarb
jo
into
mov
jne
inc
inc
cld
push
addl
mov
outsl
std
adc
cli
rcrl
add
or
dec
sahf
add
add
inc
iret
outsl
xor
lcall
or
or
in
add
cmp
push
jns
pop
rcrl
testl
pop
movsb
push
repnz
or
add
cmpsl
fisubrl
and
mov
aas
dec
add
dec
cmpsb
and
lret
fwait
push
inc
push
push
push
les
pop
mov
pusha
in
or
xchg
lahf
sbb
daa
js
xchg
lock
shrb
out
inc
pop
lahf
stc
std
cli
clc
sahf
sbb
and
mov
ss
push
std
out
cmp
shl
loopne
adc
xor
repz
ficoml
push
lahf
push
push
add
insl
cmp
fisubrs
inc
mov
sbb
add
inc
mov
js
loope
dec
iret
scas
jmp
daa
call
mov
aaa
push
xor
and
in
cmp
adc
in
mov
dec
mov
inc
jae
xchg
jns
stos
mov
dec
movsl
test
xchg
popf
scas
jo
push
addb
iret
aad
fwait
jne
repnz
lock
jnp
xlat
xchg
jae
xchg
sbb
mov
repz
ljmp
pushf
insb
sbb
psubsb
int3
insl
pop
mov
dec
cs
and
mov
fsubrl
rol
or
jle
ja
insb
pop
push
enter
sub
data16
stos
hlt
lahf
add
fistpl
pop
imul
fwait
nop
sub
add
jl
push
jmp
xchg
roll
lahf
cmp
add
xor
xchg
push
cmp
push
add
shll
lock
push
cmp
xor
in
ja
push
dec
shll
push
mov
push
aad
mov
mov
cmc
aam
into
pusha
cmc
adcb
sbb
adc
cld
add
loop
imul
in
div
dec
push
fimuls
jmp
jmp
dec
jmp
adc
mov
jp
std
arpl
push
pop
adc
mov
add
ds
mov
adc
sti
sbb
je
adc
pusha
stos
in
inc
mov
inc
ret
je
add
dec
or
ret
add
adc
or
testb
shlb
mov
push
inc
lds
mov
ss
fs
mov
ss
cmpsb
and
pop
mov
add
xor
xorl
cwtl
out
dec
test
or
sbb
inc
mov
stos
insl
cs
inc
repz
stos
fs
cmp
cli
mov
xchg
scas
xlat
lret
or
mov
or
enter
sbb
imul
lret
jnp
jecxz
cmp
lea
and
push
das
add
lods
mov
mov
push
bound
shll
out
and
dec
das
ret
jnp
sbb
inc
dec
pusha
insb
xchg
push
push
idivl
inc
repz
sbb
repz
shlb
xor
xchg
mov
leave
xchg
lock
pop
adc
fs
sub
out
insl
imul
test
clc
push
test
sub
roll
inc
pop
mov
insb
std
test
sahf
cmp
or
cs
sub
test
fwait
dec
stos
cmp
cmp
push
lret
sbb
stos
fimuls
lods
lahf
js
test
cmpsl
rcrb
jecxz
add
jbe
jle
pop
sub
sahf
mov
out
lret
and
cmc
mov
mov
cmp
iret
rolb
out
aad
scas
outsl
into
xchg
loope
aad
movsb
subl
xchg
es
test
xorb
pusha
mov
movsl
je
orb
mov
mov
push
in
adc
ret
jmp
ret
leave
ret
add
sti
or
lret
dec
or
sub
push
xlat
sub
cmp
aam
and
in
inc
pop
cli
xorl
sarb
imul
dec
jmp
xchg
cmpl
rcll
inc
leave
in
sub
inc
adc
pop
pushf
pushf
mov
jns
pop
mov
sub
out
sbb
add
insl
add
pop
stc
mov
rsqrtps
adc
cmp
sbb
xor
aam
push
rorl
jo
cmp
xchg
jge
jmp
adc
sbb
nop
pop
mov
lods
ficoms
xchg
xchg
mov
mov
test
push
xchg
jns
aad
sbb
xor
aad
inc
push
cmpsb
pop
jne
sub
jnp
pop
sbb
in
mov
test
scas
dec
inc
inc
mov
insb
xchg
pusha
mov
cli
push
mov
cmp
adc
or
push
push
adc
cs
inc
mov
iret
add
pop
test
std
ds
xor
movsl
xchg
xchg
dec
add
mov
fs
lods
lea
adc
les
push
out
scas
popa
insl
and
jmp
scas
or
test
sahf
cmc
insl
xorl
jle
jnp
outsb
xchg
add
lcall
and
loopne
test
clc
sub
fsub
mov
movsl
test
cmp
and
xor
bswap
sub
add
push
lahf
sahf
or
adc
bound
aad
sub
das
cmp
adcl
aam
mov
mov
gs
inc
xor
mov
xchg
pushf
push
out
fbld
mov
enter
pop
mov
jnp
int3
mov
scas
shrl
sub
sti
jge
push
mov
add
cmp
mov
enter
leave
dec
enter
lret
sub
sub
xor
xchg
jb
pop
cmp
inc
mov
xor
aas
fcmovbe
out
fildl
push
cmp
lret
lret
lcall
cltd
jmp
xchg
stos
sbb
js
cs
or
stos
fcoml
lcall
mov
ret
add
or
mov
push
sub
inc
enter
ds
sbb
sub
fldt
cmp
cmp
shrl
lret
xor
cmp
pop
movsb
in
pop
dec
jno
sub
jg,pt
mov
into
insb
jnp
repnz
mov
rcll
mov
mov
clc
jg
movsb
shll
and
jecxz
pop
mov
xor
ss
test
mov
inc
pop
xor
xor
jmp
loopne
int
adc
gs
mov
sub
xchg
enter
mov
cmc
cmp
in
mov
mov
sbb
scas
aaa
jp
mov
cld
push
js
cmp
int
pop
mov
fnsave
adc
in
test
inc
or
iret
inc
add
inc
adc
in
into
test
clc
inc
sub
and
fdivr
es
nop
jae
enter
add
data16
ret
mov
mov
pop
adc
int3
xor
pop
nop
aas
lock
cmp
jae
enter
push
inc
les
movsb
mov
cmp
std
out
fmul
test
sub
int3
out
test
stc
cltd
inc
jg
loope
in
xlat
stos
inc
repz
in
fcmovnu
jns
test
push
mov
add
cld
push
fcmovb
stc
daa
adc
aam
leave
or
and
movb
inc
push
mov
inc
dec
test
cli
mov
stc
adc
and
sub
ret
into
push
lds
or
mov
xchg
das
xchg
inc
or
int
sub
lods
add
test
pop
cli
movsb
stos
lea
fwait
test
fsubrs
stos
mov
pushf
mov
mov
lods
fwait
movsl
xchg
adc
fisubrl
mov
scas
xor
xchg
mov
dec
mov
fmuls
bound
int
insb
or
cmp
lret
scas
ja
iret
xchg
cwtl
cltd
xorb
inc
mov
mov
mov
cmpsb
in
and
inc
pushf
adc
inc
xor
xchg
sub
jl
loop
lods
xchg
in
pop
pop
push
pop
mov
fwait
xchg
jne
shlb
je
lahf
jnp
cmp
pushf
push
cmp
sti
or
pusha
fcomip
mov
insb
jp
je
dec
adc
lods
mov
sbb
lcall
and
mov
xor
shll
pushf
out
cmp
fucomi
fs
out
ficoml
std
dec
dec
xlat
xchg
sbbl
push
pop
mov
jg
lock
loope
xchg
mov
add
mov
nop
mov
scas
les
and
lret
pop
adc
pop
xlat
lret
cs
fisubrl
dec
int3
cs
xchg
sub
push
das
add
out
inc
int3
js
push
add
mov
add
cmp
jmp
cmpsb
out
jp
mov
filds
les
in
int
imul
xchg
mov
cmpsl
xor
add
movsl
jp
out
movsb
and
imul
mov
je
mov
push
mov
xchg
dec
add
and
das
hlt
push
add
scas
or
and
or
push
gs
rorl
cwtl
out
cli
xchg
jno
xchg
aas
push
clc
fmull
dec
test
mov
push
pop
sub
jge
dec
xlat
mov
mov
jl
and
mov
pop
jno
adc
insl
jge
repnz
or
and
mov
ds
lock
lahf
add
push
mov
in
outsl
or
stc
dec
xorl
lds
fstpt
push
ret
fwait
in
js
jne
jne
pop
int
insl
add
push
das
cmp
lea
mov
ficoms
shll
xchg
mov
sbb
mov
or
lfs
pavgw
into
gs
fwait
test
psubd
dec
mov
loope
push
xchg
test
inc
fst
rcrl
add
das
lea
insl
fldenv
pop
add
xchg
test
sbb
jb
sahf
loope
or
cmp
imul
or
pushl
clc
mov
adc
int3
mov
ljmp
jl
popf
test
outsl
cmp
xor
jmp
cmp
adc
mov
push
out
mov
or
bound
adc
push
jge
mov
lds
cmpsb
sub
add
jp
cli
sub
les
add
add
cli
addb
pusha
cmpsl
mov
fdivrl
aad
js
clc
sbb
and
dec
shrb
in
pop
pop
data16
jbe
outsb
push
std
stos
stos
in
insl
adc
ret
add
into
inc
loope,pt
mov
subb
mov
add
push
mov
fstps
loope
xchg
jl
dec
sti
xchg
inc
imul
sar
cwtl
test
lret
cmp
aas
movsl
xor
iret
fs
cltd
iret
jge
clc
jecxz
cmpsb
scas
ds
add
xchg
xchg
lret
xchg
adc
pop
stc
aad
jo
mov
dec
add
loopne
outsl
out
jg
ficomps
aad
push
sub
addr16
fstpt
dec
push
inc
insl
add
out
insb
xchg
adc
inc
cwtl
mov
push
movsb
xchg
push
ficoms
in
fstpl
and
adc
in
mov
mov
add
push
pushf
or
and
pop
pop
sti
in
jb
andb
ljmp
fs
xor
outsl
mov
loope
and
push
aam
push
xchg
ret
sbb
das
adc
scas
js
or
jle
cld
dec
inc
ja
test
insl
add
jle
scas
ret
ds
dec
rcrb
adc
loopne
arpl
sarl
xor
arpl
shl
loope
lahf
add
add
xor
push
jb
jp
sub
test
bound
scas
dec
pushf
cmp
test
jne
add
cmpb
mov
sub
pusha
mov
jo
cmp
and
mov
jnp
test
idivb
cmpsl
inc
adc
ret
loop
or
jg
loope
lcall
js
sub
pop
dec
xor
jp
mov
cmp
andb
adc
inc
add
adc
cmp
inc
mov
pop
cwtl
divl
in
jecxz,pn
pop
aaa
mov
inc
sbb
iret
push
xorb
shll
pop
imull
jp
test
loopne
jle
mov
lock
lret
mov
decb
push
push
outsl
lcall
and
dec
jecxz
fwait
dec
aad
push
fisttps
add
sbb
xor
faddp
jae
js
pusha
or
imul
mov
cmp
test
or
cmp
cs
mov
cld
sub
xchg
and
and
loop
arpl
push
mov
addr16
in
and
xchg
loopne
jl
jg
adc
pusha
clc
call
lea
cmp
sub
add
jae
lahf
push
adc
repnz
test
adc
mov
sub
out
sub
pusha
ds
fisttpl
fisttpll
mov
xor
pop
jl
lea
in
adc
sbb
jnp
cmc
cmp
xchg
xchg
aad
stos
pop
inc
mov
sbb
push
cmp
fiadds
mov
mov
lea
cmp
or
pop
adc
jp
sbb
roll
ftst
int
mov
sbb
inc
out
aam
lock
test
sub
mov
ret
aad
or
call
aas
rclb
xor
pop
sbb
jmp
mov
inc
dec
or
cmp
xchg
adc
lret
push
lea
outsl
push
jno
dec
nop
fisttpl
mov
jmp
xchg
loopne
mov
dec
sub
insb
fldl
adc
jge
mov
pop
sub
mov
push
loope
xchg
add
lret
sbb
add
int
mov
add
stc
pop
lock
inc
ret
jns
sbb
repz
pop
lds
or
popl
mov
dec
popf
add
dec
movb
pop
icebp
mov
data16
push
jge
xorl
nop
scas
fsubl
std
inc
lret
js
lods
arpl
xchg
movsb
push
das
cltd
jb
jmp
lods
sub
repnz
inc
and
lods
mulb
negb
arpl
xchg
push
stos
fucom
xor
cli
adc
in
insl
push
shrl
pop
loope
push
into
mov
test
aam
push
sbb
loopne
sbb
mov
sub
insb
mov
push
mov
rcrb
aas
ljmp
cmp
jge
pop
popf
jmp
or
fucom
inc
fistpll
or
sti
les
and
inc
lret
jno
mov
ljmp
loopne
sbb
aam
ds
cmp
jmp
or
add
adc
insb
xor
mov
out
iret
xor
xchg
pop
ds
es
addr16
lcall
jbe
arpl
mov
cs
lods
jo
out
or
xchg
orb
mov
xor
adc
mov
or
pop
gs
mov
xchg
push
add
divl
pusha
test
sub
or
push
push
pop
sub
adc
or
xchg
cmpsl
and
add
jnp
repz
adc
jge
adc
push
push
sbb
int3
cmpsl
stos
ljmp
mov
in
insl
pop
and
lsl
sub
arpl
call
jle
sbb
cmp
daa
movsb
sarl
in
mov
imul
and
adcl
inc
add
mov
dec
icebp
adc
and
xor
sub
jecxz
adc
lret
shrl
scas
divl
sbbl
jno
imul
inc
imul
ds
mov
dec
pop
push
lret
rcll
xchg
js
lock
dec
aam
outsl
lea
bound
add
pop
dec
in
nop
or
sub
int
pop
icebp
mov
xor
jle
push
cmc
sti
rcrl
cmp
dec
jle
cmc
add
or
addr16
mov
xchg
jmp
jae
insl
lahf
loope
adc
mov
push
shll
mov
dec
dec
mov
mulb
fsub
outsl
add
mov
adc
xchg
imul
lret
aas
mov
lods
mov
mov
out
mov
js
loopne
loop
data16
cltd
push
or
push
sub
gs
add
mov
sahf
or
aas
in
movsl
cmp
sbb
mov
insl
cmp
jmp
adc
mov
rclb
fnstsw
jns
cs
inc
pop
push
dec
add
jbe
xchg
repz
pop
int3
push
mov
fcom
lcall
lds
mov
addl
jns
inc
addr16
lcall
negb
jg
add
mov
lods
lods
mov
fsubrl
dec
and
jne
cmp
sar
inc
in
push
sbb
in
fcmovu
or
mov
out
xchg
dec
fcmovnb
fnstcw
mov
xor
arpl
xchg
cli
lret
mov
push
sahf
xchg
cmp
shlb
mov
xor
inc
int
pop
inc
outsl
loopw
bound
into
push
lahf
sub
popa
outsl
sub
pop
jle
addr16
xchg
push
in
and
rorl
lock
cmp
and
stos
popf
mov
sbb
cmp
jb
cli
jmp
xchg
sbb
pop
sub
sarl
mov
jle
mov
adc
fstpt
bswap
es
out
sarl
and
cmpsl
pop
stos
rcrb
enter
fsubl
push
pop
leave
jecxz
js
test
xchg
mov
fsubl
aas
dec
jle
pop
hlt
fwait
test
xchg
movb
das
rcll
mov
jne
mov
outsl
mov
mov
hlt
inc
mov
mov
or
push
add
and
loop
lret
shll
rcll
aas
rorl
bound
push
dec
test
lcall
stc
push
mov
jg
add
mov
sbbb
cmp
addr16
adc
movsb
stos
cmpb
push
push
xchg
xchg
fs
mov
cmc
lea
pop
ret
jg
ror
xchg
xchg
jae
in
cmp
add
jle
pop
or
push
xor
shll
scas
add
cli
ret
pop
mov
adc
inc
pop
sub
outsb
adcb
arpl
pop
xchg
jle
pushf
pusha
mov
cmpsb
inc
xor
loopne
mov
nop
shrl
loope
imul
cmp
dec
inc
sbb
mov
mov
imul
shl
into
xchg
lcall
mov
sbb
inc
push
and
data16
loop
pop
or
cmc
mov
mov
inc
fcomp
add
in
outsl
popa
add
pushw
inc
loop
insl
dec
jmp
add
test
pop
xor
shrl
jecxz
and
test
repnz
add
dec
jmp
out
fisubs
or
inc
push
mov
cmp
xchg
bound
cltd
ret
sbb
loopne
xor
aas
xor
jmp
push
imul
jae
jb
jae
adc
sbb
xchg
sarl
dec
dec
push
cli
xchg
xchg
inc
out
or
testb
test
test
bound
push
add
mov
rorl
jno
jl
xlat
add
popf
xor
and
cmp
xchg
xor
test
es
popa
sub
mull
jne
and
aas
xchg
xor
add
sub
jne
push
nop
movsl
sahf
inc
fcomip
call
aam
jle
in
aad
push
cmp
lock
cmp
sbb
mov
sub
jmp
xor
mov
clc
enter
and
mov
gs
adcb
or
and
xlat
xor
out
roll
filds
sub
insb
gs
mov
pop
lcall
dec
dec
xchg
sbb
aad
scas
stos
loopne
sahf
xchg
lcall
mov
popa
jmp
dec
jne
fstl
repz
sbb
push
and
iret
cmpsl
jp
xor
in
lret
or
std
mov
adc
adc
adc
les
testb
pop
xchg
ret
hlt
add
lret
sbb
pop
jo
sub
insl
push
pop
sub
inc
iret
dec
loop
rclb
ja
pusha
jb
xchg
scas
stos
icebp
aam
test
daa
rolb
stos
dec
sub
xor
lret
adcl
in
cmp
cmp
jle
outsb
loopne
sbb
int
pop
loop
call
cltd
add
xchg
or
and
xchg
xchg
dec
push
loop
lret
mov
pop
push
mov
jne
jle
fiadds
and
inc
cltd
imul
cmp
mov
jno
push
inc
fs
mov
shl
mov
xor
adc
es
cmpsl
push
addb
mov
cmpsb
out
push
dec
scas
jbe
mov
push
ds
push
sub
sub
jmp
jmp
push
pop
filds
cmp
push
sbb
xorb
sub
lahf
fdivl
xlat
aad
out
test
subl
scas
push
fmuls
outsl
xchg
test
bswap
push
shrl
cltd
and
scas
and
xor
sub
jp
cld
sbb
addr16
jp
mov
mov
mov
add
add
xchg
pop
test
mov
sarb
rorl
push
daa
add
ficoms
xchg
test
in
and
push
or
pop
adc
nop
popa
aaa
daa
test
in
jae
xchg
cmpsl
arpl
add
or
inc
cmp
icebp
in
xchg
loopne
dec
jle
lock
pop
insl
pop
xor
in
aad
inc
in
sbbb
cmpsl
sub
or
xlat
cmp
ss
pop
es
and
lret
or
pop
aaa
int
sbb
mov
lds
xchg
insl
hlt
movaps
sub
xor
into
mull
aam
mov
aas
in
xor
mov
popl
ret
data16
movsl
pop
cmp
push
test
jge
les
mov
test
push
repz
stos
pop
add
aam
dec
iret
jg
adc
add
adc
les
dec
pusha
xor
prefetch
or
ljmp
call
cld
mov
daa
std
popf
scas
jae
movsb
sbb
aam
lock
imull
mov
loopne
insl
adc
cmp
sub
lahf
or
gs
sbb
and
arpl
push
jg
and
adc
out
add
pop
xor
scas
adc
in
pop
xor
enter
push
and
xor
pop
lcall
popf
sbb
jp
imul
sbb
mov
adc
incl
mov
mov
inc
dec
gs
xor
repz
shrl
outsl
mov
xor
mov
sbbl
dec
insl
push
mulb
mov
lock
addr16
mulb
sbb
sub
pop
movsb
fistpl
push
sub
arpl
and
push
jo
pop
adc
add
pop
or
test
enter
mov
add
sbbb
xchg
mov
stc
subb
jp
sub
mov
mov
jp
dec
dec
lods
test
mov
jae
mov
test
iret
dec
pop
ret
cmp
movsb
sub
lock
adc
bound
insl
out
imul
in
jmp
cmp
push
sbb
out
sub
lcall
sbb
andb
icebp
std
pop
into
cltd
mov
and
jnp
or
dec
pop
dec
pushf
stos
clc
hlt
das
js
inc
mov
repnz
mov
and
fsub
push
xor
mov
inc
in
mov
nop
sbb
mov
popf
shrl
pop
sub
mov
or
and
or
xchg
scas
dec
cmp
sub
cli
adc
sarl
jne
neg
ljmp
mov
xchg
pop
dec
popf
push
pop
mov
add
js
pop
jae
mov
mov
mov
aam
fmulp
in
pop
or
dec
mov
out
mov
lret
aas
out
fs
add
arpl
cmp
popa
jmp
repz
xchg
and
mov
adc
dec
inc
fcomip
cwtl
sbb
cmpsl
cmp
pusha
fwait
rcl
cs
mov
xor
add
mov
shll
xchg
loope
inc
adc
add
ret
lret
xor
inc
add
jb
data16
mov
push
sub
mov
xor
outsb
dec
test
notb
ret
xor
imulb
mov
nop
inc
aam
or
mov
or
loopne
dec
or
xchg
lret
cmp
xchg
mov
or
out
jo
scas
rorb
in
cltd
mov
jnp
xor
jb
lea
sbb
test
xchg
ljmp
push
lret
xor
or
dec
loopne
add
sub
xchg
mov
cmp
xor
mov
in
cmp
fsubr
call
or
xchg
fwait
gs
or
mov
mov
ret
popa
sti
mov
out
push
idivb
jno
push
or
lcall
add
enter
std
add
add
out
cmp
xor
mov
nop
in
jl
jno
jmp
pop
imul
in
stos
or
cmp
or
fwait
push
nop
pop
repz
or
cmp
jo
xchg
fisubs
jno
pop
lock
pushf
pop
loopne
dec
lods
incb
mov
ret
test
mov
fistpll
lret
lret
adc
or
repz
add
adc
lcall
fnstcw
mov
and
cmp
jnp
stos
mov
sbb
fldt
aas
inc
mov
sub
dec
or
out
nop
aam
in
sti
sub
pop
data16
scas
data16
je
cmp
xor
jp
int
roll
xchg
mov
or
movb
popf
push
adc
adc
lret
flds
call
push
jae
inc
mov
xchg
mov
in
jecxz
adc
adc
dec
jbe
jmp
sbb
ret
pop
scas
and
push
lahf
push
cs
fbstp
mov
punpckldq
pop
adc
and
pop
jmp
stos
mov
lcall
mov
inc
push
jae
mov
lds
jo
push
scas
push
mov
pop
cwtl
ss
lret
and
mov
mov
mov
sbb
pop
pop
dec
cmp
ss
jnp
and
cmp
mov
arpl
jmp
adc
push
xchg
pop
mov
jnp
sarl
jl
sarl
popa
sbb
or
add
pop
mov
stos
inc
mov
ja
stos
mov
shl
arpl
inc
sar
scas
aas
adc
inc
add
ss
or
xor
dec
addr16
daa
cmpsl
xor
scas
inc
jmp
jne
std
add
push
jb
int
repz
sub
dec
mov
xchg
jbe
add
ja
mov
mov
mov
shll
push
push
imul
adc
or
lret
ljmp
push
mov
popf
or
aad
popf
fcoml
repnz
push
sbb
and
sti
push
sub
dec
sub
add
inc
jbe
mov
insl
loope
cmp
jecxz
inc
or
gs
clc
lock
in
ss
test
sub
xchg
not
push
mov
and
xchg
jge
and
ja
ret
xchg
adc
mov
dec
xor
and
jmp
mov
mov
sbb
jno
sub
cmp
xchg
mov
subl
shlb
loopne
ret
imul
and
add
mov
mov
mov
icebp
das
je
cmp
inc
xor
js
aad
mov
sbb
inc
js
mov
mov
popa
in
outsl
and
xchg
jns
fwait
ret
lea
sbb
loop
scas
popf
lret
shl
insl
lahf
pop
xchg
outsl
inc
sbb
les
mov
adc
rcll
push
shlb
mov
add
pop
ja
aam
subb
test
cmp
mov
push
cmp
cmpb
inc
push
cmp
addr16
lods
shrb
out
clc
pusha
in
mov
cltd
mov
push
jmp
or
sbb
cmpsl
push
and
test
cmp
or
add
imul
or
lret
in
pop
cmpl
in
dec
test
jbe
cmp
inc
divb
dec
sub
int3
xchg
movsb
jo
cmp
lea
xchg
popl
aad
xor
jg
sub
and
cli
jbe
jmp
shlb
cli
cmc
cmpsl
rolb
push
sahf
scas
lret
mov
inc
scas
mov
inc
jns
test
rolb
pop
nop
jg
test
incb
sbbb
push
dec
data16
xor
stos
xor
xchg
in
loopne
leave
stc
shlb
addb
sbb
mov
add
push
jnp
inc
ret
out
sub
inc
ss
and
decb
push
jge
std
mov
and
shrb
pop
mov
and
lock
sbb
sbb
mov
ficomps
shrl
xlat
shrb
push
dec
inc
dec
pop
xchg
inc
jecxz
xchg
movsb
outsb
aad
inc
cli
loope
mov
xlat
jb
jmp
loope
xchg
movsb
lret
pop
ljmp
xor
cmp
xchg
pop
and
sbb
iret
movsb
cmp
cmp
repnz
or
mov
stos
inc
pop
addb
frstor
ds
rolb
sub
movsl
hlt
in
push
sub
imulb
leave
lods
pusha
rorl
cld
out
ds
popf
out
mov
inc
iret
testl
mov
and
pop
movb
or
push
add
jno
js
xchg
mov
pop
leave
mov
jl
jnp
les
ficompl
and
xor
adc
sbb
je
outsl
leave
movsb
nop
mov
sub
and
pop
xchg
pop
xor
int3
shl
cmpsl
lcall
cltd
xchg
notl
xor
lods
push
push
addr16
stos
inc
ss
cmpsl
dec
inc
xor
or
mov
movsl
pop
scas
jmp
lahf
arpl
lods
xor
aam
out
sub
adc
int
int3
sbbb
push
adc
nop
adc
sub
addr16
add
dec
sahf
mov
mov
icebp
mov
xchg
jl
iret
mov
leave
cwtl
arpl
jae
adc
aam
imul
mov
les
pop
mov
and
cld
jae
or
nop
or
sub
xor
inc
scas
sti
and
insb
mov
mov
aam
jmp
push
cmp
push
adc
push
fdivp
adc
jge
jmp
push
xchg
addl
rcl
ljmp
mulb
cmc
pusha
jp
inc
nop
in
mov
add
dec
inc
add
inc
cld
div
mov
lods
loop
dec
lods
dec
insl
int3
pop
jecxz
adc
or
jb
push
ficomps
push
jg
xchg
jmp
outsl
call
jge
arpl
jae
daa
cmc
lods
stos
push
test
xor
les
stos
jl
or
das
jmp
or
mov
icebp
xchg
aas
sub
dec
test
pop
ss
cld
jo
xlat
outsb
xchg
add
jmp
fs
push
mov
cmp
movsb
mov
sbb
xchg
add
dec
repnz
adc
shrl
jle
mov
xor
xchg
push
clc
mov
jmp
out
loopne
jmp
xlat
sti
inc
insl
aam
mov
jbe
or
scas
test
mov
in
jae
xchg
outsl
scas
sbb
xchg
and
push
pop
xchg
loope
adc
paddd
repz
adc
or
cwtl
xchg
push
xor
mov
mov
int
mov
push
mov
mov
add
add
adc
int3
fildl
lock
mov
and
stc
mov
stos
cmpsb
or
pusha
mov
mov
mov
lds
cmpsl
sti
pushf
sbb
sbb
sahf
cmp
cmp
sub
pop
sbb
out
aad
xor
das
shlb
sub
xor
pop
sub
scas
jns
in
mov
mov
inc
pushf
adc
adc
rclb
adc
insb
repnz
filds
sti
cmpl
push
vpaddw
push
xor
icebp
xor
cmc
mov
pop
pop
inc
int3
inc
mov
hlt
stos
movsl
jbe
pop
rcrl
leave
andb
cmp
outsl
cmp
addr16
xchg
mov
cli
loop
sub
sahf
leave
mov
imul
push
cmc
mov
imul
imul
inc
insl
or
movsb
mov
add
dec
psubusw
inc
mov
and
mov
pop
jbe
cmp
sub
scas
sbb
jp
xor
in
xor
pop
push
adc
stos
dec
std
inc
cmp
fwait
push
pop
sbb
mov
addr16
pop
nop
xor
sub
mov
popa
dec
jp
inc
pop
addr16
into
andb
pop
xor
mov
pop
inc
push
iretw
inc
cmp
jmp
cmp
xor
add
cmp
sarl
push
mov
pop
cmp
fisubrs
push
js
inc
add
mov
ds
xchg
adc
cmp
sub
nop
jecxz
mov
stos
pop
dec
jmp
and
loop
outsl
fsubl
call
sbb
and
shr
add
js
xchg
push
xchg
cltd
into
mov
lahf
sbb
dec
mov
rep
sarb
addr16
mov
lahf
insb
das
fxch
or
sbb
test
add
add
ljmp
pushf
adc
cmp
test
test
lods
insl
mov
ret
sub
rol
std
fldl
shl
cmc
clc
pop
mov
cmpsl
jecxz
mov
pop
nop
jg
mov
cmp
call
iret
pop
add
xor
ds
or
lds
movsl
cmp
sti
sbb
outsb
movsb
int3
jle
enter
mov
shl
bound
xor
pop
in
shlb
add
icebp
nop
xchg
jp
leave
sbb
out
cld
push
fsqrt
inc
sti
dec
cmp
push
xor
in
or
mov
pop
jo
or
inc
repnz
jp
lea
das
xchg
jb
stc
sbb
dec
push
ss
aad
or
inc
mov
cmp
jge
repz
pop
gs
popf
sub
stos
repnz
push
cltd
hlt
andb
aad
or
ljmp
sub
xchg
lock
hlt
jle
cmpsb
add
cmp
fiaddl
fs
test
ljmp
push
adc
call
fisubrs
leave
in
add
sbb
ds
or
mov
sub
loopne
in
mov
fcompl
loopne
rorl
arpl
and
dec
sti
inc
call
int3
in
aad
imul
ljmp
inc
mov
repnz
out
add
mov
test
imulb
push
test
cld
push
jge
test
outsb
mov
rcll
xchg
popf
scas
xor
dec
out
lock
fsub
outsb
mov
add
adc
mov
cltd
or
out
mov
lahf
stos
xchg
scas
stc
repz
hlt
lret
mov
repz
fwait
mov
xlat
repz
jle
icebp
lods
xchg
mov
jno
or
sti
dec
into
insb
ret
iret
push
dec
mov
xor
add
imul
pmaxsw
lea
das
cwtl
jnp
or
adc
mov
inc
out
add
dec
insl
daa
sub
rclb
adc
inc
repz
sahf
out
pop
inc
sarl
xor
mov
or
xlat
cli
pop
sti
sub
icebp
xchg
imul
xchg
xchg
ret
push
clc
jmp
scas
push
ret
cmp
xchg
mov
cmp
in
xchg
data16
neg
jnp
cmp
and
out
or
shr
out
cmp
and
mov
decb
ja
sarl
loopne
fwait
mov
ja
dec
gs
sub
arpl
pop
cmp
jle
in
pusha
inc
pop
mov
andl
xor
push
cs
xchg
xchg
mov
and
loop
int3
mov
lods
jmp
mov
loopne
in
mull
cmp
aaa
enter
scas
fsubrl
mov
int3
sbb
pop
sbbb
push
pop
mov
repz
adc
sub
pop
mov
fidivrs
mov
adc
fidivl
and
sub
adc
xor
cmp
stos
and
inc
pop
dec
pop
insb
xor
fcmovbe
and
push
cltd
inc
jp
adc
imul
sub
push
sahf
das
popf
negb
insl
test
sbb
pop
aas
stos
repnz
mov
xor
mov
mov
imul
aaa
inc
and
test
push
mov
test
test
lcall
push
andb
adc
xchg
xchg
add
rorl
mov
movsb
sbb
test
rcll
cmp
fnsave
das
jno
xchg
ficoms
cmp
xor
mov
cld
push
push
dec
mov
outsl
sbb
rol
lods
dec
pop
in
div
jmp
xchg
jmp
aas
xlat
xorb
test
pop
fsts
jns
push
pop
cmp
mov
ljmp
xor
pop
pop
xlat
cmc
in
lea
pop
test
int
push
psrld
xchg
pcmpeqd
inc
sbb
es
ljmp
jg
push
and
dec
mov
pop
fsubr
sbb
das
mov
imul
das
or
lock
out
and
cmp
jmp
push
add
sbb
inc
mov
inc
mov
ret
xchg
sbb
pop
sbb
jp
push
inc
jno
orb
push
clc
imul
imul
pop
out
out
push
jns
fisubs
cltd
sbb
dec
sahf
icebp
mov
cmp
leave
cmp
add
jo
jg
or
cmpsl
push
rcl
adc
inc
ret
dec
jmp
out
or
or
icebp
lods
dec
xchg
and
fsubrs
ss
aaa
inc
mov
fmulp
fsts
push
pop
xchg
and
outsl
es
pop
inc
ftst
leave
sti
push
js
push
or
out
mov
ja
int3
lods
xor
std
mov
negl
jns
outsl
cmp
lahf
jae
fs
or
out
lods
addr16
mov
mov
adc
pusha
inc
inc
mov
jne
inc
enter
sub
lods
mov
adc
test
daa
dec
push
pushf
dec
aam
push
pop
dec
pop
mov
aaa
clc
std
ljmp
outsl
mov
addr16
clc
or
mov
mov
js
testl
inc
sub
jecxz
movb
rorl
cmpb
leave
dec
cmp
lcall
bswap
jo
mov
int
in
daa
rorb
and
mov
ret
inc
imul
sub
mov
add
pushf
mov
hlt
popa
xchg
or
ret
add
aam
fldcw
jo
and
xchg
pop
cmp
movsl
stos
pop
rorb
push
imul
stos
dec
push
fstpt
lret
std
jge
pusha
loop
mov
cmpb
inc
sbb
pop
icebp
fistl
push
in
cmpsl
pop
xchg
add
lds
ds
push
xlat
jnp,pt
and
inc
jp
xchg
mov
sti
pop
add
int3
xchg
aaa
mov
xchg
iret
dec
jae
xchg
push
push
xchg
push
cmp
mov
jne
cmp
adcb
pop
fbstp
in
in
jg
lcall
pop
xchg
filds
mov
xor
pop
in
xor
cmc
sahf
jns
jnp
mov
jg
gs
lea
pop
push
mov
sbbb
cli
xchg
fcompl
or
int
sbb
xchg
jg
std
dec
or
xchg
fisubl
sbb
push
xor
mov
leave
int
cmp
xchg
pop
sahf
dec
mov
jmp
sti
adc
xchg
inc
and
inc
or
mov
fisttpl
dec
jge
dec
sbb
inc
cmp
sub
adc
cmpsb
cmp
stc
mov
test
xchg
mov
mov
jmp
adc
mov
imul
jmp
clc
addr16
test
in
je
fwait
mov
jecxz
sbb
jb
pop
mov
cmpsl
mov
xchg
rorb
push
vhaddps
xchg
idiv
pop
popf
xor
cmp
js
xor
add
cmp
movsb
push
push
lcall
mov
pop
movsl
inc
mov
add
rclb
int3
and
fwait
and
lahf
mov
sahf
je
mov
or
pop
push
xchg
jne
jb
cmp
push
dec
ss
jno
pop
xchg
test
out
inc
pop
push
jb
imul
xor
pop
inc
cltd
test
test
inc
mov
cmp
push
or
xor
xchg
xchg
adc
aam
rclb
jno
mov
inc
mov
mov
pop
pop
call
pop
add
insb
inc
or
mov
lahf
cmpsb
pop
xchg
gs
pop
or
test
mov
sbbb
jns
enter
inc
test
adc
cmp
push
cmpsl
mov
and
mov
sar
sti
rcr
mov
xchg
sbb
cld
bound
mov
or
movsb
adc
lcall
pushf
cmp
or
jmp
jns
ffree
push
aaa
in
insb
cmc
into
mov
add
mov
jb
in
or
xchg
arpl
mov
add
xor
fisubl
jp
repnz
cmp
adcb
in
faddp
ja
ss
lea
push
sub
cmpsb
cltd
sarl
mov
mov
mov
mov
jne
cmp
adc
mov
and
aaa
sbb
mov
bound
in
insb
xor
push
xchg
ja
insb
ss
jno
sub
push
scas
xchg
lea
std
scas
aas
or
mov
and
xor
inc
pushf
mov
aam
cmc
enter
fists
push
std
jnp
loopne
inc
icebp
jmp
pop
mov
cmpsl
addr16
xor
fildl
cld
cmp
cmc
in
fmuls
popa
dec
ret
jmp
pop
pusha
cmp
cmc
hlt
sbb
mov
es
cmc
movsl
push
inc
imul
mov
inc
jae
add
dec
fwait
xor
clc
mov
pop
test
pop
jmp
jp
fnstenv
xchg
mov
or
stos
cmp
xchg
out
mov
sub
popf
pop
jge
stos
inc
test
jg
iret
xchg
fwait
mov
imul
push
popa
in
sti
lahf
sbb
inc
test
add
mov
mov
sahf
pop
rcrb
add
rol
mov
shlb
in
in
cmpsl
movsb
nop
mov
daa
xchg
push
rclb
cmpsl
mov
sarb
mov
cmpsb
jne
dec
mov
sbb
clc
jle
or
sarl
xchg
out
mov
nop
out
dec
add
pop
aad
and
cwtl
push
mov
mov
loopne
movsb
dec
xor
inc
pusha
shlb
cltd
aaa
aaa
xchg
mov
hlt
sbb
pop
ljmp
jmp
mov
add
pop
fwait
add
aaa
xchg
pop
add
and
aaa
pop
push
in
cmc
iret
adc
ret
pop
out
in
fisubl
pop
cmp
sbb
test
jg
imul
mov
adc
and
cmpl
and
stos
mov
cli
enter
jo
cmp
in
xlat
lock
je
mov
mov
outsb
push
jo
xchg
jecxz
mov
lcall
loope
fs
mov
ljmp
es
outsl
movsl
add
mov
pop
sbb
jbe
xchg
loopne
mov
mov
js
decb
sbb
cmpsb
popf
jle
bound
iret
iret
mov
lds
incb
out
cmpsb
add
clc
or
mov
jb
sub
push
scas
xchg
add
sbb
bound
adc
clc
mov
je
add
cmp
cmpsl
addr16
jnp
jb
daa
add
adc
dec
inc
xchg
mov
sbb
into
shll
mov
add
or
jmp
push
lods
subb
out
flds
mov
aaa
push
push
mov
push
add
out
arpl
push
cld
xchg
test
scas
jo
shll
dec
mov
jecxz
lcall
dec
adc
sti
dec
pop
outsb
test
mov
jge
or
int3
or
into
pop
xor
xlat
jmp
pop
test
add
jns
xchg
fcompl
mov
inc
cld
cmp
sub
icebp
sub
or
jno
mov
sub
jbe
mov
mov
shr
xor
rolb
scas
fldenv
arpl
popf
in
adc
adc
movsl
mov
sbb
fstpl
xor
out
cmp
sbbl
jno
add
add
shlb
jno
cmp
and
movsb
in
jecxz
jb
pop
xchg
jmp
sub
cmp
adc
ljmp
sub
repz
sarl
sbb
arpl
dec
or
ja
ret
pop
fstp
stos
jns
cld
pop
pop
jge
ds
pop
outsb
mov
insl
push
std
mov
in
out
pop
adc
lcall
icebp
jne
mov
jmp
sub
jl
and
loop
pop
jnp
or
cmpsb
fiadds
dec
shr
push
add
in
add
jp
rclb
mov
and
imul
pushf
and
xchg
xor
inc
push
cld
sbb
mov
test
arpl
xchg
pop
push
jp
mov
movsb
sbbb
ret
inc
mov
sarb
mov
pop
loopne
stos
push
fldcw
in
or
xor
mov
icebp
and
lcall
xor
arpl
and
cmp
cmc
lods
movsb
cmp
mov
popf
sbb
jp
pop
fldcw
loope
mov
pop
bound
inc
xchg
cmpsb
pop
ds
sbb
out
jno
sbb
lea
add
lahf
stos
rcl
ret
imul
cmpsl
sbb
aaa
mov
push
mov
andl
les
mov
xor
pop
aam
push
out
out
jecxz
or
out
mov
ja
aas
xchg
stos
jle
shlb
inc
push
aad
lock
or
bnd
sub
inc
outsl
inc
rolb
push
testl
jae
repnz
dec
fdivs
sahf
pop
cmp
xor
cltd
syscall
inc
mov
jns
lods
jbe
out
test
jne
or
stos
imul
je
pusha
and
inc
dec
hlt
or
jae
ja
cmpsl
pop
xchg
mov
mov
dec
sub
orl
insb
sbb
cwtl
fmull
add
in
sub
add
push
in
jb
pop
std
cltd
std
repz
mov
je
inc
mov
scas
lods
fistps
jo
xlat
cltd
rorl
test
pop
imul
pop
aad
xchg
stos
fistl
sub
mov
aas
iret
and
std
fisttpl
pop
les
adc
push
pop
adc
inc
mov
mov
sbb
jne
shll
loope
dec
inc
pushf
mov
in
fildl
std
and
dec
mov
aam
iret
movsl
rorb
sarl
mov
pop
cwtl
cmp
pop
dec
cmc
push
and
test
adcl
and
pop
ljmp
js
fidivs
imul
mov
in
mul
mov
cwtl
lods
and
push
xor
xor
test
adc
sahf
jmp
clc
mov
test
aas
xchg
mov
sub
add
push
movsb
or
inc
pop
adc
ror
and
adc
jb
lock
shrb
ffree
rcrb
cmp
add
mov
push
mov
orl
xor
insb
push
jo
data16
enter
leave
cmpb
mov
push
pop
fmuls
cmp
adc
mov
sbb
fimull
lfs
mov
xlat
faddp
in
sub
fiadds
into
mov
or
pop
push
mov
xor
xchg
push
fcomp
ficoms
mov
nop
cmp
aam
lods
aam
pop
mov
xchg
or
xchg
xchg
sbb
and
inc
int3
mov
xor
cmp
neg
mov
pop
push
mov
xor
add
push
cmp
rclb
sahf
mov
cltd
ds
mov
jae
aam
out
xor
mov
or
xchg
ficompl
subb
mov
mov
pushf
sub
mov
call
fnstenv
jo
mov
push
jne
in
addr16
mov
mov
push
sarl
mov
cmp
stos
inc
and
icebp
push
sahf
test
pop
aaa
leave
dec
mov
insb
repnz
shl
jns
xchg
xchg
es
jg
xchg
sub
xor
ljmp
sbb
imul
pop
and
sub
lea
mov
mov
inc
mov
iret
push
cwtl
fisttpll
stos
inc
adc
and
jns
mov
andb
sub
mov
jo
lock
jl
fcomp
stos
testl
xchg
adcb
jle
loop
fstpt
mov
scas
data16
ss
jb
inc
shll
add
lock
sbb
jo
mov
cmp
imul
icebp
int3
or
xchg
mov
lahf
and
sbb
stos
pushf
cmpsb
lea
lret
subl
mov
xchg
fdiv
add
xor
add
mov
xor
setp
insb
xor
das
out
sti
dec
and
sbb
mov
repz
mov
lcall
mov
sbb
mov
or
cmp
lahf
ss
lahf
jae
mov
xor
xadd
pop
add
push
cmp
pop
std
mov
enter
jne
mov
lcall
fldcw
dec
call
and
mov
and
ljmp
movsb
fcoml
flds
sub
xchg
add
lea
mov
xchg
pop
and
stos
lea
sub
xor
mov
mov
sbb
sub
cmp
jbe
mov
mov
push
les
sub
dec
pop
in
pop
in
les
adcb
sbb
dec
push
sti
in
jecxz
xor
dec
pop
cs
add
test
push
mov
dec
les
mov
xchg
pushf
lret
out
lahf
subb
xchg
jg
and
pop
dec
movsb
outsb
pop
mov
leave
js
pop
mov
inc
enter
lods
aam
mov
fwait
jbe
test
scas
sti
mov
xor
shl
call
jae
jb
add
cmp
jo
mov
dec
imul
xor
lea
cmp
and
xor
push
mov
push
nop
test
jnp
xchg
lods
mov
test
int
scas
loopne
jmp
push
out
mov
shr
std
jae
cwtl
shrb
ljmp
pop
test
cmp
xlat
cmpsb
sbb
faddl
int
mov
xchg
mov
ljmp
jp
loope
aas
popf
mov
push
andb
adc
adc
push
and
shlb
inc
inc
sub
cmpsl
inc
push
int3
and
clc
pop
lret
jae
inc
mov
jno
inc
arpl
mov
insl
adcl
dec
push
mov
jbe
mov
mov
inc
inc
push
or
aas
test
jp
jmp
push
mov
fnstenv
icebp
imul
out
pusha
add
and
xchg
sbb
xchg
pop
pop
push
hlt
push
fdivs
xchg
or
pusha
pop
ds
les
jmp
dec
scas
dec
adc
outsl
lret
mov
jp
jl
and
pop
mov
mov
dec
test
and
cmp
insb
or
addr16
and
push
mov
inc
in
fisubrl
pop
xor
or
jle
mov
jnp
mov
inc
push
out
jnp
lcall
cmp
pop
add
adc
leave
std
out
xchg
cli
sbbb
xor
test
loope
mov
sbb
dec
sbb
pop
xlat
out
push
pop
and
xor
out
mov
fs
cwtl
jecxz
fildll
adc
dec
frstor
sahf
push
arpl
aaa
sub
sub
cmp
insl
or
add
daa
dec
js
es
in
sbb
mov
push
imul
mov
xchg
jmp
mov
loop
lock
ljmp
push
dec
inc
sub
jg
pop
sbb
popa
into
popf
jmp
rorl
in
js
sbb
repz
sbb
jl
add
xor
int3
popa
ret
push
ret
pop
lods
or
sbb
xor
enter
mov
out
stos
into
fdivr
inc
cmp
lret
cwtl
pop
test
lds
cmc
loope
test
movsl
lahf
je
clc
mov
jl
adc
jg
sbb
dec
cmp
pop
push
sub
xor
inc
sbb
dec
fwait
xchg
out
lds
push
cwtl
ret
hlt
insl
and
lods
push
cli
stos
pop
add
jl
mov
push
pop
inc
in
xor
pop
fiaddl
adc
cltd
pushf
and
pop
nop
mov
mov
popa
add
popa
push
dec
or
cmpb
andl
xor
dec
push
iret
loope
rcll
xlat
ss
ss
ficoms
aaa
inc
pop
rcr
xor
mov
adc
mov
sti
and
arpl
push
in
and
adc
daa
mov
xchg
mov
sbb
or
xchg
mov
insl
mov
push
popf
mov
sbb
stc
subb
xchg
addl
movsb
rcl
dec
xor
ret
daa
cmpsb
sub
jns
dec
cmp
shr
inc
cld
cmc
xor
adc
nop
sub
ret
jge
rcrb
sub
pushl
jns
lds
jp
jp
rcrb
and
shlb
pop
mov
outsb
sub
and
mov
or
add
ljmp
mov
roll
testb
jb
sub
dec
add
int
and
inc
mov
jecxz
add
cmp
pop
js
add
and
icebp
icebp
push
mov
cmp
mov
pop
pop
lea
push
hlt
and
mov
lret
mov
mov
movsl
in
xor
push
mov
notl
cmp
pushf
xor
mov
push
ja
jg
or
jo
dec
lea
mov
jbe
jno
xor
jbe
inc
jo
push
shlb
cmpsb
mov
sbb
xchg
testb
fs
lods
push
out
push
ljmp
in
or
das
mov
mov
arpl
ja
mov
insb
and
sub
aas
xor
sti
cmp
mov
mov
xchg
cmpsb
dec
sahf
xchg
push
lods
inc
dec
mov
in
mov
push
push
sbb
decb
in
adc
and
std
sbb
inc
rorl
and
sbb
cltd
ljmp
out
shrl
insb
mov
call
lret
mov
jb
lods
in
sub
jl
inc
dec
fdivr
mov
fistl
adc
lds
insb
sbb
add
xchg
and
ficoml
lahf
inc
cmpsl
mov
out
mov
jge
push
addr16
add
insl
add
sti
fstpt
scas
into
sbb
xor
sbb
arpl
movsl
sub
outsb
jmpw
push
rcrb
dec
out
push
sub
dec
xchg
idivb
xchg
lcall
cmp
sub
mov
jp
jae
jbe
in
mov
stos
jae
leave
rcl
jmp
popf
push
sbb
inc
xchg
jle
cmp
dec
dec
into
jnp
bound
pop
add
js
enter
cmp
sbb
ds
sub
xchg
mov
pop
daa
adc
add
lahf
addb
xchg
test
mov
out
xor
xor
leave
mov
xor
sbb
sti
jbe
ret
jno
fmuls
sbb
fisubrs
xlat
rorl
stos
cltd
call
mov
mov
cmpsb
and
add
and
adc
lods
loopne
cld
mov
in
fstps
loop
dec
movsl
ret
aad
mov
jne
sub
mov
inc
add
cmpsb
jge
imulb
dec
inc
ror
sbb
cmp
loopne
pop
scas
pop
sbb
cmpsl
sahf
mov
stc
mov
sbb
xchg
dec
and
mov
add
jne
ljmp
pop
test
and
repnz
dec
aas
es
xor
movsb
inc
cmpsl
or
pop
sbb
dec
fnstenv
xchg
movsl
orl
repz
loopne
insl
out
orl
fsubrl
adc
and
leave
ja
jns
dec
mov
aas
sarl
in
ja
js
or
mov
inc
clc
inc
cmp
outsb
push
out
add
dec
fnstsw
scas
dec
inc
setg
addl
push
sbb
xchg
shr
lock
jecxz
shlb
sti
fincstp
pop
repnz
iret
sbb
jl
mov
mov
dec
shl
mov
ss
jno
sub
and
mov
addr16
adc
xor
mov
xchg
xlat
inc
and
add
and
cmpsl
mov
mov
cli
jb
ja
mov
jo
dec
mov
adc
ja
movsl
or
or
dec
shll
push
popf
repnz
scas
jp
es
mov
icebp
jbe
pop
scas
push
scas
cld
imul
mov
mov
icebp
pushf
cs
dec
and
sub
cwtl
dec
xor
add
mov
cmp
push
xor
test
icebp
dec
push
testb
cmp
scas
dec
fs
stc
addr16
fstp
mov
dec
xor
mov
xlat
cmp
cmp
xor
cmp
inc
test
mov
jns
notb
sbb
stos
sub
cmc
push
mov
jg
or
push
dec
and
test
fdecstp
cmpsb
dec
inc
or
sti
popa
pop
and
dec
lea
mov
xor
jne
or
fcoms
das
cmc
cmp
popa
add
out
or
jg
out
stos
fdivrl
xchg
stc
in
ret
sbb
mov
sbb
rcl
andl
addr16
cwtl
jo
addr16
cmp
push
add
decl
adc
cmpsl
cs
or
push
pop
mov
sarl
aad
add
pop
lahf
mov
ret
sahf
les
repz
jg
xlat
insb
imul
sbb
xor
fbld
xchg
mov
lods
daa
fidivrl
jns
lock
sar
out
sbb
inc
cmp
add
popf
dec
mov
rcl
adc
dec
mov
and
icebp
mov
adc
insl
fdivrl
push
or
push
jb
mov
dec
add
push
loopne
mov
inc
rcrb
pop
add
or
adc
and
repnz
pop
mov
push
cs
or
std
push
and
jg
enter
rolb
dec
jp
jecxz
or
and
jae
andb
pop
stc
psubsb
mov
std
sbb
gs
js
dec
js
ss
inc
adc
push
jns
fmul
push
mov
xchg
enter
xchg
mov
movsb
xor
mov
cltd
bound
loope
loope
push
sbb
add
pop
dec
cltd
jo
aam
arpl
cwtl
movsb
je
or
lds
stos
fsubs
outsb
pusha
insb
or
xor
fistps
das
add
and
popf
push
pop
bound
jg
les
push
into
fiaddl
jno
and
scas
call
add
out
cmc
int
cwtl
mov
and
movsl
mov
ljmp
push
pop
loop
cmp
xchg
aas
jnp
cli
scas
xor
inc
inc
mov
aas
xor
sbb
cmp
adc
push
pushf
jbe
pop
mov
dec
xor
pop
pop
in
dec
sahf
dec
fldenv
mov
negb
jne
inc
pop
add
lds
jb
out
nop
out
xor
xor
mov
dec
mov
repnz
xchg
call
scas
insl
sbb
add
test
lret
popf
xchg
and
sbbl
leave
lea
xor
cmp
lock
cmc
sbbl
or
enter
repnz
or
and
stos
adc
scas
int3
or
adc
add
mov
loope
jb
lds
push
add
pop
mov
push
and
or
insl
mov
or
add
cmpsb
enter
imul
cli
fwait
xor
into
xchg
popf
cmp
xchg
push
and
rol
cli
dec
imul
or
jae
sahf
fldenv
push
test
in
call
clc
mov
sbb
jecxz
jno
cmp
sbb
lods
fwait
sub
insl
loop
dec
cmp
xor
bnd
test
lcall
sar
mov
xchg
inc
stos
mov
popa
bound
outsb
add
int
jge
inc
imul
out
pop
inc
fxch
add
rcrl
adc
sti
fcomps
cli
push
ljmp
bound
xchg
subb
pushf
rorl
hlt
push
clc
sub
fwait
pusha
sbb
cld
add
xchg
fsubrs
enter
push
and
pop
addr16
pushf
ret
cmp
nop
sbb
ljmp
jecxz
xchg
adc
mov
fucomip
insl
outsb
push
popa
or
mov
imul
fadds
cmp
jb
jecxz
imul
adc
lahf
loope
jns
inc
and
idivl
lds
add
andl
ret
cmpsl
es
lods
mov
aad
ljmp
les
mov
lock
add
pushf
jle
scas
lahf
jnp
or
stos
pop
dec
dec
cmp
push
sub
enter
fwait
daa
test
mov
addr16
fnsetpm(287
adc
aas
stos
repz
aam
insl
cmp
icebp
jl
adc
adc
lret
aas
jbe
dec
fdivl
jb
je
mov
lret
adc
lods
push
sbb
mov
inc
push
lcall
fwait
scas
jecxz
cmp
mov
dec
int
out
in
sub
cmpsl
stos
iret
jecxz
jge
shll
xor
pop
or
dec
push
pop
jecxz
hlt
repz
xchg
jno
test
adc
pop
sbb
and
pop
sub
push
les
ss
mov
mov
cltd
fstpl
push
call
aaa
int
dec
dec
and
aaa
cmp
insl
jo
aaa
add
xchg
arpl
xchg
adc
mov
mov
or
js
add
test
and
cmp
mov
push
std
add
inc
xor
inc
sub
add
jb
push
scas
push
dec
fwait
jmp
loope
lret
movsb
rorb
add
cwtl
xlat
cmp
xor
xchg
add
xor
sbb
cli
push
inc
mov
arpl
cmp
movsb
fwait
mov
inc
mov
shl
mov
inc
mov
lock
fwait
sub
mov
fsubrl
hlt
sub
ret
stos
rorb
mov
imul
mov
jecxz
out
jmp
subl
es
cs
add
hlt
ret
mov
aas
lret
sbb
insl
lock
roll
mov
xor
pop
jle
outsl
or
jle
inc
stos
test
ficompl
in
test
aam
mov
xor
xor
bound
test
nop
push
clc
add
gs
xor
mov
in
sub
inc
mov
adc
outsl
add
lea
add
xchg
imul
xlat
mov
mov
and
hlt
inc
pop
cltd
test
fbstp
pop
outsl
mov
push
iret
adc
pop
sub
cmpsl
iret
jmp
mov
into
dec
mov
xchg
jbe
int
or
in
adc
push
cwtl
sahf
dec
sbbl
mov
aam
je
daa
movsl
in
loope
fsubrs
call
repz
dec
repz
push
push
movsb
sti
fistps
lods
rorb
adc
mov
pushl
loop
hlt
mov
cmp
sahf
dec
push
scas
clc
adc
push
ret
xchg
jmp
pop
sbb
dec
scas
loop
and
dec
xchg
xchg
cwtl
mov
pop
in
int
cmp
mov
cmpl
popa
sbb
mov
cmp
inc
mov
daa
xchg
sti
jmp
lret
push
inc
pop
shlb
add
mov
mov
sbb
adc
shrb
pop
rolb
aad
or
aaa
and
aad
jle
add
or
aad
dec
ljmp
xchg
and
xor
hlt
incl
mov
into
and
mul
push
clc
mov
or
arpl
add
shlb
push
ds
or
or
inc
mov
mov
dec
pop
inc
cmp
cmp
mov
cmp
pop
push
and
jg
decb
pop
dec
popf
add
dec
mov
outsl
int3
pop
add
pop
aam
test
pop
inc
xor
inc
cmpsb
aas
pop
pop
cmp
daa
lret
mov
rcrb
imul
fsts
or
adc
ret
pop
sbb
aam
cs
push
cmpl
leave
cld
xchg
lods
das
loope
xchg
xor
fldcw
je
jle
cmc
cmp
sahf
cmp
ljmp
in
mov
push
divl
dec
lret
scas
fwait
and
adc
pushf
jno
mov
push
jns
cmp
push
xor
push
jne
pop
call
ss
or
cmpsl
and
lods
popf
das
loop
push
mov
mov
into
decl
pop
testb
shr
je
sbb
adc
dec
mov
inc
pop
in
test
dec
mov
dec
push
or
xor
mov
ret
outsb
imul
push
adc
js
jmp
insb
in
dec
inc
mov
mov
mov
mov
inc
shrl
jb
xchg
aas
dec
call
push
xor
mov
sbb
xor
repnz
add
dec
stc
jne
sub
mov
lret
test
notl
xor
mov
scas
mov
lret
and
mov
jns
pop
into
lret
mov
fiadds
packuswb
repz
or
and
xchg
orb
xor
shll
faddp
call
sub
mov
outsl
or
out
xor
push
xchg
add
test
dec
jmp
pop
pushf
popl
fnstcw
fs
clc
push
nop
pop
call
shll
test
lcall
testl
cmpsb
pop
sti
div
out
pusha
stc
dec
mov
aad
jno
jne
cmp
rorb
outsl
in
mul
add
lods
pop
scas
js
lahf
loopne
jle
pop
sbb
dec
adc
pop
mov
or
mov
jp
mov
imul
push
xor
gs
lahf
push
adc
push
lahf
aad
clc
lock
or
int
out
idiv
addr16
add
mov
cs
xchg
jg
cld
lock
jae
shll
repz
mov
adc
push
xor
pop
movsb
fmul
or
mov
pop
xchg
js
xchg
sub
push
xor
cmp
mov
popf
adc
movb
pop
or
inc
dec
or
cmp
sub
add
fisubs
mov
jbe
notb
inc
dec
fbld
push
jl
pop
sbb
frstpm(287
jle
fcoms
mov
sbb
xchg
sarb
sbb
mov
das
xchg
jo
dec
xchg
ret
jbe
mov
mov
cmc
xchg
or
dec
xor
loop
jo
xchg
sbb
cmpsl
movsb
add
adc
stos
mov
lea
dec
mov
rcrl
mov
mov
aam
jo
cmp
ljmp
mov
je
lret
push
rclb
scas
add
jge
add
dec
xor
and
stos
xchg
inc
mov
scas
sub
sub
sub
ffree
sbb
inc
xchg
and
mov
add
dec
lods
xor
mov
adc
cmp
imul
push
ljmp
sbb
lcall
jmp
int3
push
pop
jmp
imul
nop
mov
fildll
cmp
sub
lahf
xchg
cmp
aaa
out
popf
sbb
jne
mov
pop
mov
mov
outsb
cmp
sbb
bound
pusha
shr
xor
test
push
test
xchg
sarl
xchg
mov
repnz
push
movb
arpl
sahf
dec
rorb
jl
cwtl
movl
mov
outsb
push
outsb
xor
mov
outsb
pop
push
loope
pushl
fs
imul
outsl
mov
mov
jle
out
arpl
mov
mov
add
fistpl
outsb
or
adc
jbe
jecxz
orb
sbb
push
imul
lds
jmp
jmp
add
push
lret
mov
dec
cmp
mov
imul
xchg
fst
and
cmpsl
xchg
fmulp
bound
or
les
sbb
dec
outsl
fs
dec
movsl
sbb
xlat
sub
inc
push
or
mov
popa
out
mov
sahf
xchg
iret
lock
and
arpl
fimull
sti
int3
fwait
pop
loope
xor
xchg
fwait
int3
sub
sbb
and
xchg
dec
call
or
dec
pop
sbb
push
mov
xor
mov
mov
fs
or
xor
shll
enter
cltd
adc
xchg
add
pop
std
addb
sbb
aaa
loopne
xorl
movsl
mulb
and
jb
jge
pop
ret
jmp
in
adc
jg
xor
out
and
out
div
inc
xor
push
mov
dec
andb
push
dec
xchg
pop
enter
imul
mov
push
popf
push
clc
arpl
fstpl
push
lds
aas
arpl
movsl
enter
scas
dec
xor
shlb
sahf
clc
addb
mov
push
pop
shlb
xor
imul
hlt
sbb
iret
mov
mov
mov
jbe
ja
xor
mov
add
frstor
sub
sar
aam
mov
lods
es
jo
xchg
shrl
sbb
cmpsb
sub
pop
jl
lods
scas
mov
xchg
out
sbb
or
dec
add
pushf
sahf
stc
sub
mov
das
jg
loope
xchg
pop
or
mov
lods
cli
lods
aas
push
push
es
out
es
out
xchg
int
jo
and
inc
lret
leave
sub
fdivs
xchg
push
mov
shl
stos
dec
sub
es
sbb
xchg
mov
push
mov
nop
dec
repnz
pop
xchg
xor
notb
inc
es
xchg
dec
adc
stos
lods
bound
or
xor
or
inc
or
sub
jns
mov
pop
dec
jns
sub
int3
dec
imull
repz
ds
dec
inc
xchg
ljmp
xchg
mov
dec
mov
jg
mov
lock
inc
push
popf
mov
pushf
mov
cld
adc
ret
mov
xor
sub
inc
jns
daa
stos
cmp
outsl
insb
out
mov
ret
ljmp
and
daa
cmp
cli
dec
push
add
je
mov
fimuls
cwtl
out
cmp
push
mov
ja
push
cmp
push
mov
int
lods
dec
aas
add
mov
sbb
push
add
sbb
sub
nop
jge
dec
sbb
scas
or
std
mov
jae
shrb
shlb
inc
jge
mov
dec
cmpsb
lret
cld
clc
cld
sarb
push
mov
and
jg
push
adc
les
mov
jns
cld
data16
std
lret
adc
aam
bound
rcrl
add
adc
pop
and
cmp
stos
in
mov
inc
pop
aas
cwtl
fcoml
jp
sub
paddsb
es
out
add
add
xchg
push
pop
pop
push
push
loope
cmp
jp
jne
mov
in
lcall
push
hlt
decl
mov
cmc
adc
mov
dec
add
jnp
das
fs
pop
in
xor
xor
push
mov
out
and
mov
cld
add
or
sub
fs
pop
dec
pop
loope
xchg
mov
in
push
mov
sbb
jnp
mov
jmp
fnstenv
xchg
scas
dec
jae
xchg
int
stc
or
mov
pop
cmpl
sti
or
incl
int3
xchg
movsl
movsb
enter
lahf
jno
cmpsl
mov
clc
cmp
or
test
arpl
fstpl
enter
bound
aam
cltd
mov
lret
fistpll
push
pop
xor
adc
inc
inc
ficoms
cwtl
push
sbb
sub
gs
mov
in
scas
push
outsb
and
outsl
dec
loop
cltd
cmp
jns
dec
mov
hlt
sub
nop
out
outsb
push
clc
inc
cmp
cmpsb
mov
push
test
and
add
outsl
bound
inc
decl
sub
fcoml
inc
jns
lods
push
rolb
repz
mov
xchg
jns
imul
push
test
or
scas
xchg
xchg
fbstp
inc
outsl
jo
adc
scas
jp
inc
inc
out
lret
pop
mov
add
aad
shrb
pop
push
gs
cmp
ds
or
xor
xor
xchg
stos
daa
sbb
adc
push
sub
repnz
pusha
push
pusha
daa
data16
inc
mov
pop
and
imul
in
aas
data16
adc
mov
pop
decl
sbb
or
pop
pushf
sbb
pop
add
lret
subb
orl
xor
cmp
jno
xor
lea
pop
out
push
ret
bound
lret
fbstp
and
push
sar
or
dec
xchg
ror
jns
in
faddp
cmc
frstor
adc
daa
jl
loope
push
loopne
sbb
gs
or
cmp
das
out
fs
leave
mov
gs
push
add
mov
jl
add
lcall
dec
sbb
dec
rcl
inc
popf
xor
pushf
decl
lcall
jns
js,pn
cmp
pop
or
pushf
mov
inc
push
and
adc
adc
xchg
outsl
inc
stos
cwtl
or
xor
in
in
insl
mov
fdivl
mov
das
fs
cmpsl
insl
shlb
sub
addb
out
push
loop
or
test
mov
mov
pop
sub
popa
and
test
sub
mov
loope
xchg
gs
bound
inc
mov
inc
sti
inc
pop
mov
dec
aam
or
pop
jae
lods
mov
cld
lock
or
inc
and
xchg
jnp
movb
push
cmc
xchg
insl
lds
aad
jmp
je
push
repz
ror
xchg
addl
lea
pop
mov
pop
add
rorb
xchg
jecxz
das
inc
out
fdivrl
xchg
mov
and
enter
iret
pop
mov
cmpsb
mov
push
mov
cmc
sbb
std
clc
pop
and
push
pushf
xchg
popa
push
into
push
push
xchg
xlat
sub
repnz
inc
push
cltd
faddl
xchg
repnz
sbb
jmp
inc
rorl
xor
pushf
cmc
cmpsl
cmp
nop
mov
xchg
cmp
fnstcw
out
ss
jno
in
pop
mov
and
das
popa
daa
cltd
mov
daa
je
fsubp
jmp
xchg
pop
lret
popf
clc
into
in
jg
movsb
in
pusha
or
inc
jmp
xchg
int
and
loopne,pn
and
pop
sub
add
cmpsl
push
dec
pop
rorb
sub
push
scas
xor
insb
mov
pop
push
repz
jne
xchg
add
mov
movsl
cmpsb
cmp
push
loope
add
push
jns
in
adc
mov
and
hlt
ds
cmpsb
push
sbb
fwait
jae
lock
pusha
mov
sbb
out
xchg
lret
shlb
pop
into
mov
dec
out
cltd
pop
push
push
aas
ljmp
hlt
jmpw
mov
and
push
add
lcall
std
in
repnz
sub
adc
mov
and
out
adc
aad
jns
loopne
mov
adcl
or
cmp
andl
scas
and
cmp
sub
sbb
push
imul
in
psubusb
jnp
pop
pusha
cwtl
push
and
inc
xlat
out
int3
add
and
jg
add
push
popf
xchg
or
ret
mov
jne
cmc
push
inc
pushf
jne
cmp
fidivl
ljmp
mov
in
sbb
pusha
aad
adc
jmp
popa
and
pop
loope
lahf
adc
cmp
add
xchg
adc
mov
mov
mov
dec
out
xchg
ret
pop
paddw
orb
xor
jne
xlat
lret
adc
lods
xchg
scas
out
pop
repz
imull
push
sbb
nop
mov
repz
out
aas
sub
in
orb
push
mov
dec
out
mov
and
mov
xchg
bound
pop
pusha
push
add
lret
jle
into
push
lods
mull
xor
sub
dec
popa
loop
sub
xchg
xchg
gs
adc
lahf
mov
jge
cmp
inc
jb
or
cmc
pusha
jns
cwtl
int
loopne
sarb
sbb
sbb
fwait
sbb
mov
enter
clc
sbb
out
cmp
mov
jp
push
lahf
xchg
cli
enter
sbb
call
pop
add
add
fsubs
iret
jo
mov
mov
cmpsl
or
inc
mull
fdivl
out
ss
xchg
repnz
adc
jno
sahf
pop
bound
shlb
ja
sbb
push
ret
inc
mov
cli
andb
push
in
loope
push
sti
push
clc
lret
push
fisubrs
js
xlat
jns
pushf
outsb
in
dec
out
xor
ret
mov
mov
push
mov
daa
jecxz
loope
aas
cmp
inc
jns
inc
ss
mov
hlt
out
push
mov
inc
fnstsw
add
sub
ficoms
js
pop
outsl
imul
mov
jle
pop
insb
popa
pop
aam
lret
setae
adc
arpl
push
mov
dec
std
inc
stc
ljmp
ss
out
push
push
or
mov
out
icebp
add
push
inc
clc
mov
dec
dec
jge
cmpb
lock
insl
and
xor
in
scas
sub
mov
mov
mov
add
int
mov
and
inc
sub
sbb
pop
xchg
div
movl
add
cmp
pop
xor
out
pop
pop
fdivl
outsb
xor
out
decl
sbb
and
adc
ret
loop
aas
fdivs
cmp
mulb
outsb
hlt
dec
addr16
cmp
pop
ret
sub
and
scas
mov
fnstenv
das
ds
jecxz
push
adc
xchg
bnd
push
aam
mov
sbb
push
xlat
jle
fstp
xchg
cmpxchg
jbe
push
adc
fisttpl
mov
ja
out
mov
inc
xor
dec
fnstsw
pop
repz
push
pop
daa
out
mov
stos
jae
sar
sbb
movsb
xor
in
xchg
adc
dec
mov
pushf
mov
pushf
addr16
loopne
cmp
es
mov
or
pop
aas
loope
xchg
popf
popf
int3
repz
xchg
xor
xchg
adc
imul
jo
mov
outsl
jle
int3
leave
dec
cmp
movsb
test
outsl
test
pop
lods
push
daa
ss
fcoml
dec
pusha
cmp
jge
mov
test
xor
out
outsl
mov
xor
negl
dec
add
xor
mov
adc
sbb
dec
loope
pop
insb
xchg
push
jo
adc
je
cs
in
mov
dec
add
mov
dec
xor
push
cmp
adc
mov
popf
std
adc
inc
xchg
jae
jl
fcomi
and
mov
inc
jp
sti
jne
insl
adc
rclb
std
jl
adc
pop
mov
jns
das
xor
mov
jae
jb
movsb
fs
sub
jno
sub
lds
imul
and
imul
sub
movsl
lds
mov
adc
jo,pt
fwait
ds
in
xchg
or
imul
mov
bound
sti
and
jnp
mov
pushf
cmpl
xor
mov
movsb
jbe
popa
jo
repnz
sbb
imul
cmc
mov
or
inc
loope
nop
xor
cmp
js
lret
inc
enter
fstl
shll
enter
jns
adc
fsubs
push
cltd
push
sub
loope
pop
sti
dec
movsl
jbe
mov
pop
jg
out
cltd
mov
pushf
jb
mov
test
pusha
iret
xor
js
push
faddl
add
xlat
std
inc
mov
adc
scas
dec
mov
push
or
jns
push
std
xor
inc
xchg
jg
insb
xorb
sub
ja
add
push
int3
xchg
push
mov
push
sub
inc
lahf
mov
js
insb
addr16
hlt
sbb
push
lds
mov
mov
adc
xchg
popa
js
push
sub
cmpb
test
xchg
sub
push
cli
inc
sbb
addr16
cvtps2pi
leave
faddl
xchg
push
adc
mov
shl
shr
mov
arpl
jbe
ja
sub
mov
sbb
sbb
pop
push
dec
mov
add
cmp
mov
mov
pop
fdivrs
xchg
or
cli
int
and
jo
jae
gs
jne
adc
lret
stc
pop
testl
in
movsb
lods
pop
js
mov
jl
adc
movsl
mov
mov
adc
outsl
call
or
loope
cmp
loop
movsb
mov
sbb
sbb
scas
push
sub
cmpxchg
idiv
mov
int3
and
inc
mov
rclb
ss
lock
cmp
or
ss
mov
sbb
dec
xor
inc
repz
nop
rorl
mov
mov
sub
lahf
lea
mov
rorb
xchg
in
or
and
pop
push
das
lods
dec
stos
mov
aaa
xor
imul
xor
dec
insl
ficoml
jmp
ja
or
lret
cmp
mov
in
rep
xchg
test
mov
mov
cmpsl
cwtl
es
jne
ret
pop
push
pop
cli
pop
xchg
mov
arpl
jae
int3
ret
aaa
repz
or
adc
std
stos
lock
iret
mov
jae
inc
mov
ret
iret
aaa
cmp
xabort
mov
inc
shl
push
ss
sub
sub
out
mov
stos
je
test
adc
lea
in
repz
loop
test
or
push
out
jmp
mov
jbe
xor
jle
mov
mov
icebp
sbb
xchg
inc
cmp
mov
xchg
gs
or
in
cmpsb
lods
loopne
add
adc
and
repz
sbb
xor
nop
icebp
pop
daa
in
out
test
inc
cmpsb
loopne
cmp
push
adc
mov
or
push
push
mov
pop
les
and
add
stos
mov
aas
mov
mov
jne
int
ja
ss
ss
insl
sbb
or
adc
jp
sbb
mov
push
pop
lahf
dec
daa
mov
mov
movsb
sub
les
mov
es
arpl
xor
mov
rcrb
pop
call
lods
pop
stos
push
pop
xchg
mov
andl
nop
sbbl
stos
mov
xorb
mov
dec
loop
push
mov
mov
xlat
xor
mov
clc
adc
adc
mov
ja
loope
rorb
in
mov
push
aad
push
sbb
push
cmp
mov
cs
ja
mov
push
jno
xor
or
xchg
cli
test
mov
inc
inc
int
sbb
leave
insb
jns
fimull
jbe
xchg
mov
or
xor
je
mov
sbb
aas
sub
js
movsb
popa
leave
push
pushf
and
frstor
dec
cmpb
cmc
or
add
mov
xchg
cli
clc
rorb
adc
sbb
pusha
xchg
ljmp
mov
js
arpl
lret
inc
mov
add
das
pop
sbb
imul
inc
mov
xor
lock
mov
xchg
ret
and
jge
push
pop
jno
fisubrl
inc
add
mov
decl
mov
fadds
lea
or
fmul
je
xlat
mov
or
inc
stos
das
xlat
and
test
mov
cmp
lahf
mov
push
cld
xchg
into
and
xchg
imul
pushf
pusha
inc
add
fcmovu
jnp
push
loope
push
and
mov
jmp
adc
sbb
in
inc
push
adc
in
cwtl
ljmp
jle
lret
jmp
jmp
cmc
enter
xacquire
cwtl
scas
jl
xor
in
adc
pop
cmpl
ljmp
sbb
inc
fsubl
ss
fistps
jb
pop
and
push
dec
mov
add
push
push
dec
mov
sahf
xor
xchg
xor
mov
adc
mov
inc
test
sbb
les
ljmp
fcmovbe
push
test
in
das
ret
es
rorl
loope
dec
cmpsl
bound
das
cmp
or
shll
stos
lcall
sbb
sub
push
ds
sub
mov
insb
xor
add
shlb
push
inc
push
xchg
xchg
fsubrs
jle
jbe
fnstenv
mov
leave
jne
add
add
loopne
imul
xor
mov
jnp
sahf
mov
ja
mov
pop
mov
scas
dec
mov
jb
ja
es
outsl
push
pop
insb
sub
push
add
mov
les
or
sahf
jle
push
inc
add
sbb
jnp
dec
sub
dec
sti
popf
xchg
or
mov
mov
or
cwtl
iret
xchg
xor
mov
push
and
add
mov
imul
outsb
out
mov
movsl
jno
pusha
andnps
mov
es
dec
xlat
jnp
stos
shl
adc
mov
test
lock
inc
aam
inc
or
or
testb
clc
arpl
fwait
rorl
mov
out
dec
adc
add
pop
pop
ja
test
movsl
xor
mov
xchg
loop
clc
dec
incb
nop
pushf
jmp
adc
imull
ret
ret
dec
dec
xor
dec
cmpsl
and
cmp
cmc
mov
jo
test
mov
imul
test
sarl
xorl
lret
adc
sti
lods
xchg
pop
adc
in
adc
aas
and
mov
xchg
lods
push
jle
sub
jle
push
lods
xchg
mov
ja
or
lds
aaa
movsb
lcall
jns
cmpsl
lds
add
sub
sub
mov
icebp
stc
popa
add
in
and
dec
gs
mov
stos
pushf
js
punpcklbw
add
sti
jecxz
inc
inc
jl
repnz
dec
mov
xor
cld
out
jns
mov
mov
mov
fs
aas
imul
push
push
popa
fcmovu
or
daa
arpl
pop
shll
rorl
and
fistpll
test
xor
adc
sbb
daa
gs
aaa
xlat
movsl
aaa
jnp
arpl
push
mov
test
and
lcall
jne
test
mov
jns
inc
in
ds
test
jg
ret
movsb
ror
pushf
cmc
es
mov
out
sub
add
xadd
lods
stc
push
data16
sbb
rclb
pop
iret
mov
aad
sbb
sbb
js
insl
mov
enter
xchg
jbe
mov
jae
xchg
push
push
popf
lods
sbb
das
lods
push
push
mov
mov
dec
inc
pop
lret
inc
fisttps
addr16
ljmp
push
sub
fwait
shrb
fwait
and
movsb
andl
xchg
stos
and
insl
xchg
ja
sbb
mov
lret
outsl
mov
and
pop
add
cmpb
push
stos
mov
mull
jo
push
push
jb
wbinvd
mov
fimuls
mov
movsb
enter
mov
pop
sub
mov
ss
rorb
nop
adc
mov
cmp
xchg
or
imul
rcll
sbb
in
scas
and
mov
hlt
fisubrs
xor
loope
pop
inc
push
pusha
or
push
mov
adc
imul
leave
jg
and
sbb
rclb
fs
pop
cmpsl
adc
cmpl
inc
or
ret
mov
lret
and
push
mov
and
in
push
fcomps
push
push
adc
xchg
sbb
popf
dec
push
aas
icebp
scas
jge
outsb
clc
jecxz
add
lock
pop
cmp
cld
stc
or
sub
nop
jge
sub
cmpsl
imul
mov
in
mov
sbb
jg
orb
lret
and
inc
ret
or
scas
add
pop
fdivrs
xlat
cmpsl
mov
xchg
andb
xchg
cwtl
and
mov
repnz
mov
mulb
enter
filds
out
shr
or
push
stc
xor
das
sub
cmp
xchg
lods
cltd
sarl
pop
jg
rolb
xor
outsl
mov
aam
mov
mov
je
and
mov
cld
pop
pop
mov
sbb
jbe
stc
fisttpl
xchg
int
push
add
das
mov
into
push
sub
push
and
xchg
pop
mov
lea
xchg
out
mov
push
and
mov
adc
xchg
mov
xlat
add
data16
push
jnp
cvtps2pi
xchg
sti
and
mov
addr16
mov
aam
push
stos
add
jge
mov
daa
jne
mov
jl
imul
push
add
mov
cs
mov
enter
in
cmp
add
sub
push
or
cmp
aaa
lods
int
xchg
hlt
fwait
mov
test
mov
or
daa
pop
push
xchg
loope
push
daa
jae
xor
xor
in
mov
or
xor
xor
jbe
aam
jno
scas
jnp
popa
fdivl
cmp
add
loopne
aas
adc
xor
cmpsb
test
push
push
cmpsl
mov
and
jp
lock
pushw
aad
pop
jb
out
xor
aaa
int
xchg
call
mov
outsb
int
push
cmp
sahf
std
pusha
mov
mov
lds
stc
mov
jae
push
add
pusha
inc
xchg
jns
stos
test
xchg
je
stc
xchg
adcb
jmp
test
jbe,pt
cmp
test
out
loop
mov
add
or
test
test
stc
xor
or
scas
ljmp
add
pop
ret
fwait
ret
xor
ror
mov
cmp
mov
mov
push
popf
arpl
sbb
iret
mov
pop
pop
sub
daa
add
out
cmpsl
mov
stc
into
sub
push
icebp
call
cmc
xchg
int
jo
je
push
jns
xchg
and
mov
loope
lret
dec
cmc
test
repz
sti
js
dec
mov
xor
rdmsr
popl
mov
addr16
ret
rol
pop
das
pop
xor
and
addr16
inc
pop
fistps
mov
jo
pop
or
sar
jg
adc
push
sarl
pop
loope
sbb
xor
fwait
ds
in
push
mov
leave
jl
or
push
and
cmpsb
mov
adc
jns
adc
lret
cwtl
dec
ret
cmp
xchg
add
lret
popf
imul
test
ret
aad
movsl
mov
sti
inc
xor
pop
addr16
hlt
cmpl
repnz
jmp
mov
jo
jge
aad
cltd
or
xor
enter
sub
arpl
fimuls
int3
push
movsb
mov
dec
cmp
pop
jge
in
adc
inc
shll
pop
cmpb
mov
das
test
xor
fs
xchg
adc
and
jns
push
je
nop
es
mov
mov
mov
out
xchg
lret
fildll
addr16
or
xor
inc
rol
popl
test
outsb
xchg
out
in
lods
ja
lods
insb
shl
xlat
rcrb
sti
pop
std
test
arpl
loopne
adc
xchg
and
daa
pushf
cmp
lods
aad
ret
sbb
insb
aaa
fwait
iret
shlb
cmc
fidivl
xor
dec
imul
inc
outsl
inc
gs
mov
into
sub
arpl
outsl
aad
rcr
jle
in
pop
in
loop
fld
sub
int3
negl
inc
jmp
out
repz
jnp
pop
aam
add
sbb
sbb
ljmp
arpl
inc
test
shrl
neg
jne
lods
scas
add
ret
lret
add
out
add
push
mov
sarb
xor
fstpt
mov
sub
add
out
mov
xchg
pop
and
cltd
iret
addr16
out
stos
cmp
pop
xchg
xor
shll
nop
jmp
stos
cwtl
cmp
mov
push
cmp
pop
push
cmc
sub
jae
mov
in
mov
or
xlat
data16
fcoms
xchg
cltd
adc
out
call
xchg
and
mov
jmp
movsb
cmpsb
outsb
je
aad
lods
jge
pop
rcl
mov
fdivrl
xor
cs
lock
out
addl
push
lock
xchg
adc
add
sub
repz
data16
adc
nop
xor
xor
sahf
in
pop
cmp
in
cmpsl
rclb
fs
sbb
or
push
inc
popf
clc
xchg
pop
add
jne
popa
xchg
push
or
dec
pop
cs
jl
ds
pusha
pop
faddp
cmp
jge
sar
and
aaa
mov
xchg
jae
in
pop
dec
push
xlat
adc
jp
inc
sub
icebp
fdivrl
mov
sub
cmpsl
fldln2
pop
and
jmp
stos
aas
adc
icebp
jl
adc
out
jbe
lock
test
daa
in
mov
out
inc
shl
mov
push
mov
push
push
lret
fidivrs
xchg
cmp
mov
hlt
lods
loop
sub
mov
xchg
or
dec
imul
add
pop
syscall
sahf
in
in
out
mov
aas
inc
out
xchg
andb
push
push
mov
or
test
mov
jbe
inc
push
loop
mov
xchg
icebp
in
in
enter
rclb
je
cmp
mov
add
daa
test
enter
mov
push
sub
cmc
in
xchg
pop
mov
mov
test
cld
popf
push
clc
inc
fists
jb
push
jmp
andb
mov
pusha
daa
sbb
mov
cli
and
pop
loop
xchg
aam
rcll
pop
nop
lret
mov
sbb
int3
shll
test
adc
cli
imul
out
xchg
int
cmp
fildl
push
mov
cli
mov
adc
mov
outsb
mov
dec
inc
out
add
cli
pop
lahf
les
or
movsl
sub
push
pop
in
inc
or
lret
pop
xchg
shl
mov
mov
insl
and
stos
ret
icebp
repnz
inc
std
jne
outsb
fnstcw
xchg
stos
ret
daa
in
xchg
push
mov
shll
mov
jg
pop
out
dec
mov
push
mov
xchg
sbb
repz
stc
pusha
and
add
mov
jnp
pop
nop
stos
jecxz
jo
jl
cld
in
push
out
stos
mov
cs
leave
pop
dec
lret
mov
sahf
pop
sub
call
add
xorb
cmpsb
mov
fstpl
cld
out
stos
out
shll
ret
iret
daa
push
rorb
and
inc
jae
fstps
hlt
ret
mov
aaa
gs
repz
in
inc
cld
mov
and
icebp
push
nop
stc
mov
gs
les
enter
lret
enter
dec
or
jecxz
xchg
rorl
out
sahf
out
popa
fucom
pop
add
or
sahf
in
cmp
jge
push
mov
lahf
add
imul
cmc
mov
xchg
pop
push
push
dec
jl
incb
mov
stos
popa
ss
sub
push
lods
push
jg
pop
fwait
adc
push
imul
lahf
jo
stc
push
dec
inc
stos
or
jo
pop
fs
les
xor
out
popa
rcl
test
addr16
nop
xchg
loop
movsl
shl
sti
mov
sub
imul
push
fcmovne
nop
add
stos
mov
in
mov
mov
enter
inc
hlt
sbb
fidivrl
push
or
cli
data16
in
bound
dec
mov
xor
imul
cld
loope
idivb
fnstsw
lcall
repz
stos
sub
fisttps
mov
mov
in
xchg
push
ljmp
stos
repz
loop
inc
ret
inc
cmp
leave
es
jns
adc
popa
cmp
and
into
sub
push
mov
lahf
andb
fisubs
out
sbb
sbb
inc
outsl
jle
dec
mov
xchg
jge
cvttps2pi
cmpl
in
scas
repz
call
xor
add
xor
andl
and
or
xchg
out
xchg
cmp
call
sbb
push
cmc
adc
enter
fidivs
mov
loope
fisubrs
leave
mov
jae
in
push
adc
push
jno
adc
out
add
jbe
insw
push
out
sbb
and
inc
and
or
test
mov
repz
insl
test
adc
daa
iret
lcall
mov
mov
in
sbb
dec
leave
loopne
jl
lock
mov
push
lods
mov
inc
lods
cmp
mov
lds
in
push
fcom
add
dec
addr16
dec
or
negl
test
and
stos
nop
daa
sub
mov
or
leave
mov
test
fwait
icebp
pop
adc
jo
stos
adc
fisubl
jg
out
mov
cmp
ficoml
cmpsl
int3
jg
dec
xchg
push
and
push
and
lahf
or
ret
dec
les
aaa
pop
stc
clc
or
ds
jg
call
fwait
push
and
stos
es
stos
out
les
mov
mov
inc
mov
cld
sub
cltd
sti
iret
sub
test
cwtl
stos
dec
mov
negl
push
rcrl
adc
in
sbb
lods
mov
imul
sahf
repnz
jg
movsb
add
cmp
in
setnp
adc
loope
jne
fisttpl
mov
fisubrl
jg
inc
pop
and
js
jle
mov
and
jg
lret
pop
daa
rolb
rclb
cmpsb
jo
popa
aaa
lret
dec
or
xor
pop
cmp
sbb
mov
fmuls
or
clc
and
out
mov
loopne
sarb
loope
xchg
xor
ret
test
cmp
loopne
mov
outsb
mov
xchg
jl
fcomp
xorl
rorb
jl
push
add
je
bound
lret
lret
fisubrl
ret
push
add
xchg
aas
sbb
subb
push
pop
int
outsl
cli
xor
fcomip
pop
xorl
popf
mov
jno
xchg
cmp
add
mov
inc
or
int
jl
dec
cwtl
arpl
out
dec
and
cmp
push
and
pop
rorb
jmp
outsl
cmpsl
ljmp
ja
pop
mov
lods
cmp
jl
cmpsl
jg
xor
vpcmpgtb
mov
jne
jmp
cmp
mov
sub
mov
stos
pop
arpl
xchg
xor
inc
jl
ret
mov
loope
xchg
mov
xchg
xor
lcall
cmpl
fiaddl
addr16
push
sbb
pop
call
add
aad
pop
in
lds
push
imul
cmpsl
adc
addr16
xor
mov
jnp
sbb
stos
push
ret
jl
test
pop
mov
stos
pop
xchg
pushf
pop
lods
adc
adc
lds
jp
js
es
mov
adc
pop
and
jg
ss
dec
and
dec
xor
lret
and
xchg
fdivrs
fsubrl
lds
sbb
mov
or
and
andl
add
cmpsb
jne
orb
popl
and
dec
popl
aam
push
cmp
fimull
repnz
push
int
adc
cmc
xor
lahf
ja
fsubrl
and
in
lods
xchg
xor
subl
in
jl
sbb
lahf
push
mov
scas
jmp
pop
sub
dec
cmp
cmpb
dec
mov
cmp
leave
add
dec
outsb
inc
push
add
sub
sbb
mov
shll
inc
jg
jno
loop
loopne
mov
imul
inc
testb
mov
scas
leave
jl
mov
or
js
mov
mov
push
mov
xor
ficomps
or
out
mov
sub
and
insl
test
or
xchg
jnp
cmp
cmpl
sarb
push
cmp
gs
push
jl
out
jge
xchg
xorl
mov
leave
loope
adc
mov
stos
out
jno
push
lcall
sub
es
into
rorb
xor
xor
ds
jbe
jge
xchg
repz
pop
pop
inc
cmc
jg
nop
xchg
mov
adc
cmp
lea
mov
and
xor
push
divl
outsl
adc
out
pop
gs
cmc
into
mov
jmp
stos
inc
dec
or
cs
xor
inc
sahf
and
mov
pop
popf
rclb
scas
orb
or
mov
jg
push
and
sub
adc
lret
push
or
inc
jb
and
movsl
test
enter
jo
and
dec
outsl
and
fldcw
inc
sub
add
in
ficoml
mov
dec
mov
pushf
icebp
out
in
push
sub
add
pop
push
inc
loope
sub
inc
call
add
les
push
cmp
and
sbb
and
sub
cmc
xchg
cli
aam
sbbb
cmpl
test
cld
dec
enter
stos
xchg
rep
leave
xchg
clc
mov
loop
cld
inc
insb
adc
pop
or
in
add
xchg
pop
mov
add
or
aas
pushl
cmp
mov
movsb
aas
into
xchg
push
xchg
movsw
mov
and
dec
rolb
add
int3
call
xlat
pop
xchg
xchg
lods
cmp
mov
js
ds
push
arpl
mov
andnps
inc
repnz
lds
sbb
lret
outsl
sarl
mov
into
repz
lock
jle
cmp
test
cmp
mov
lret
out
js,pn
fs
loopne
fsubrs
jae
out
dec
out
sbb
std
in
ss
pusha
mov
mov
sbb
sub
aaa
and
outsb
jge
lret
lret
fwait
test
push
mov
sbb
xor
push
add
jge
push
lret
subb
push
or
mov
inc
leave
push
mov
jle
pop
into
sub
popa
jns
cwtl
roll
adc
jle
xorb
add
enter
stos
push
jno
xor
nop
inc
andb
inc
das
lret
fisubrs
das
rcrb
sbb
jne
js
outsb
push
inc
xlat
movsl
and
push
ret
and
sarb
pusha
test
mov
cmpsb
dec
mov
mov
movl
or
add
aad
test
cmc
rcll
or
push
mov
cmc
lret
lds
stc
cwtl
popf
sbb
dec
fxch
xchg
adc
mov
insb
mov
aam
jge
or
push
mov
ret
jecxz
ljmp
and
jbe
rol
pusha
mov
cld
add
shll
sbb
pop
pop
mov
pop
test
cmpsb
out
pop
sub
sbb
js
xchg
jmp
mov
xor
push
inc
lock
mov
inc
mov
dec
adcb
clc
jge
lret
adc
push
xchg
std
xchg
xchg
icebp
movsl
cmp
out
xchg
push
xchg
add
push
leave
aam
push
pusha
ljmp
push
jno
sub
movsl
nop
sub
sahf
test
push
jecxz
addl
mov
jp
in
sbb
icebp
repz
hlt
sti
lock
mov
rol
xor
jns
mov
addb
movl
popf
push
pop
into
das
mov
icebp
imul
jecxz
pop
adc
repnz
jg
mov
fmuls
sti
rcr
sbb
lock
out
sahf
popa
ds
scas
rolb
fbld
cmp
shrl
xchg
push
mov
cmp
iret
fcomp
jae
dec
std
xchg
lea
mov
sbb
push
jle
push
subb
fldcw
aam
out
clc
imul
stos
negb
ljmp
dec
in
push
mov
add
in
pop
insl
mov
sar
mov
push
push
or
jmp
int
popa
arpl
sti
push
push
sbb
add
iret
lods
cmp
push
sbb
adc
fnsave
ja
mov
sbb
mov
mov
inc
fldcw
jg
loopne
cmpsl
in
adc
fndisi(8087
mov
rorb
jbe
dec
mov
sbb
cld
and
in
das
sbb
in
es
imul
cli
add
mov
lret
fiadds
fwait
add
fisubrl
mov
fimuls
mov
push
imull
stos
sarb
fildl
rcrl
jb
outsl
jb
inc
insl
push
loopne
arpl
jmp
dec
data16
pop
dec
sbb
dec
jno
cmp
test
mov
jmp
fs
xor
fcmove
cmpsl
push
dec
test
jecxz
pusha
ret
and
or
cmp
adc
mov
nop
loope
xadd
xchg
clc
adcb
outsb
push
mov
fstpt
and
lods
dec
jb
cltd
rolb
scas
pop
pop
ds
stos
xorb
bound
shrb
xorl
xchg
sbb
push
adc
repnz
inc
add
andl
xchg
aad
ljmp
aaa
jge
cmp
ja
lock
mov
mov
ja
mov
mov
mov
rcrb
pop
jo
xchg
xor
ss
cwtl
jno
adc
lods
pop
mov
dec
push
sub
test
dec
dec
jge
fs
shl
cmp
into
ds
or
shr
xchg
mov
sbb
or
sub
aad
mov
dec
cmp
push
test
pop
cmc
cld
push
xlat
shl
nop
into
sub
add
xchg
ljmp
jge
push
push
popa
in
in
loope
xchg
xchg
dec
sub
mov
xchg
xchg
popf
adc
pop
insb
cld
and
in
cwtl
push
rol
repnz
icebp
dec
outsl
or
jno
dec
lods
adc
inc
sub
sub
loopne
cmp
mov
clc
mov
outsl
jne
test
dec
ljmp
faddl
or
dec
inc
jp
mov
in
xor
jb
mov
jmp
stos
fwait
outsb
mov
imul
jmp
mov
cltd
push
sahf
sub
jns
std
pop
lds
xor
jo
movsl
pop
fldcw
addr16
mov
outsl
rcrb
jae
xchg
sbb
dec
inc
in
out
sbb
loop
fdivr
push
in
enter
jae
clc
fwait
cmc
loop
shl
in
inc
jg
shll
sub
push
inc
stc
aaa
lds
xor
es
jo
push
dec
aas
push
addr16
popf
rcrb
mov
icebp
inc
sub
sub
jmp
rclb
mov
xchg
push
xchg
in
das
cmp
shrl
push
repz
outsb
cmp
mov
mov
aad
xchg
xor
pop
mov
aas
or
in
xlat
xor
mov
xchg
aaa
xchg
xor
xchg
clc
fs
mov
loop
movsb
loope
ret
pop
or
jecxz
add
xor
aas
sub
cmpsb
dec
clc
inc
cmp
sti
call
jb
out
std
test
bnd
pop
dec
dec
inc
lds
lret
mov
add
jae
repz
sbb
cmp
adc
rcrl
enter
mov
fcmove
sbb
mov
cwtl
pop
jmp
imul
cmc
xchg
popf
shrl
cmp
mov
and
les
es
fwait
adc
fstps
test
int
repz
cmp
sub
inc
jno
lods
cltd
pop
lcall
fwait
xchg
push
add
ffree
push
mov
iret
scas
js
sbb
pop
cmpl
clc
repz
push
xchg
sub
sub
push
mov
mov
mov
imul
aam
loope
stos
int
pop
js
xchg
std
pop
lahf
xor
in
and
stc
push
inc
outsl
cmp
je
mov
cmpb
stos
mov
int3
out
idivb
incl
mov
stos
sub
push
pop
push
jbe
test
jnp
push
ret
push
lods
mov
sbb
je
push
add
notl
int3
hlt
sub
inc
mov
add
cltd
mov
outsb
arpl
jnp
cmc
xchg
jmp
xor
test
jb
xchg
shlb
xor
pop
int
lcall
jg
xchg
sbb
and
imul
jnp
insl
popa
icebp
das
and
pop
stos
dec
inc
divb
and
add
stos
pop
cltd
lcall
aam
push
mov
cs
mov
out
pop
sub
bound
sub
xchg
sub
aam
aad
mov
fldl2e
inc
sub
inc
leave
cwtl
lret
in
xchg
stos
gs
mov
xor
repz
sbb
pop
shll
cmp
push
int3
jle
test
mov
cmc
xor
imul
lods
shl
ret
cmpsb
cmp
in
lret
insb
mov
xchg
std
xor
fnstenv
dec
ss
arpl
sub
lcall
jecxz
pop
ja
pop
push
inc
xor
push
repnz
jge
jns
or
or
fisubs
cwtl
loop
pop
dec
cmpb
ret
and
stos
adc
or
push
jge
add
jae
dec
mov
loop
fidivrs
mov
pop
aaa
bound
dec
movsb
stos
mov
aam
pop
shll
stos
and
mov
lods
cwtl
mov
mov
push
in
cltd
call
mov
jg
std
sub
popf
sbb
and
mov
or
xchg
iret
sub
and
jb
fnstcw
jb
js
jl
pop
lret
daa
cmpb
inc
leave
cwtl
test
daa
gs
xchg
mov
xlat
out
mov
push
mov
xor
fwait
jns
inc
inc
mov
inc
notb
push
repnz
inc
or
adcl
fxch
loope
outsb
jb
out
push
add
or
adc
iret
push
mov
xor
dec
in
aam
jae
movsl
fwait
sbb
cmpsb
sub
jle
sub
les
push
leave
mov
sbb
stc
dec
int
mov
push
int3
movsl
and
mov
addr16
stos
das
xchg
xlat
nop
jle
test
fildl
pusha
out
xchg
xchg
mov
nop
mov
push
arpl
xor
mov
jmp
icebp
rclb
xor
dec
mov
rcll
add
cmp
pushf
lret
enter
push
adc
inc
or
rcrb
jno
or
add
pop
bound
jbe
cli
mov
dec
inc
cmp
and
mov
mov
or
push
mov
or
mov
fnstenv
inc
mov
arpl
cvttps2pi
pop
stos
cwtl
out
stos
movsb
addr16
xlat
mov
adc
add
add
mov
insl
dec
xchg
and
rol
xchg
cs
cmp
call
insb
xchg
shrl
push
daa
adc
xor
andb
push
sbb
das
js
add
dec
pop
mov
mov
pop
mov
mov
push
dec
aaa
sahf
lret
jg
shl
das
pop
or
xor
push
sbb
loope
xchg
sub
lret
cwtl
insl
jg
add
push
sbb
rcll
push
adc
fildll
jp
sub
cmp
lcall
add
sub
dec
leave
mov
lea
out
push
jno
sub
inc
js
add
push
ds
repnz
pop
nop
ss
lret
dec
and
xor
mov
add
push
cltd
cmp
and
xor
or
cli
cmp
xorl
mov
jp
int3
adc
in
jmp
jge
inc
mov
push
ret
lds
xchg
sub
lret
add
add
repz
push
jo
mov
in
into
xchg
imul
sahf
jns
xchg
xchg
jnp
cli
sbb
mov
jns
movsb
add
cmp
mov
mov
mov
mov
in
mov
pop
or
mov
cld
lahf
call
shrl
outsb
addr16
lret
aad
ja
mov
jb
das
rcll
js
jo
loopne
lock
stc
lds
js
mov
sbb
jb
sbb
fwait
js
inc
jmp
xchg
inc
mov
aad
shlb
inc
dec
xor
out
adc
into
aad
fcoms
xchg
stos
inc
ds
popf
jl
pop
andb
lcall
test
sahf
cmp
sbb
aam
xchg
arpl
fwait
rorb
adc
xchg
movl
sub
sarb
mov
lahf
es
nop
jae,pn
push
and
jmp
sub
sbbb
add
pop
fs
pop
push
mov
jb
pusha
movsb
mov
mov
fnsave
aas
mov
pop
cmp
dec
aaa
jbe
jbe
dec
dec
jge
jmp
loopne
aam
mov
inc
mov
or
mov
push
add
stos
test
jp
pop
ret
pop
jb
jb
popa
add
sahf
cmp
adc
mov
jbe
sbb
adc
dec
dec
xor
sbb
aas
sub
outsl
mov
test
jo
jo
jo
mov
aad
cld
xor
mov
dec
fildll
cltd
sahf
push
pop
inc
std
lret
and
test
test
dec
out
pushf
inc
xor
imul
lock
push
sbb
cmp
dec
out
lods
or
outsl
ret
sbb
xchg
scas
addr16
lcall
aas
popa
sbb
sub
lds
rol
lret
mov
adc
sub
dec
jecxz
cli
aaa
popa
addl
xchg
mov
cltd
and
rep
inc
imul
leave
test
push
jno
aad
or
jno
adcl
or
dec
and
mov
sub
movsb
push
xorl
jne
sahf
minps
pushf
outsl
jmp
mov
addb
xor
lds
xchg
cwtl
pusha
mov
push
push
dec
sub
mov
aam
fistps
mov
pop
xchg
sbb
push
adc
std
mov
pop
int
mov
xor
jg
rol
addr16
or
dec
and
pop
addr16
xchg
or
in
aam
int3
mov
xchg
cli
in
les
int
push
sub
sbb
dec
mov
les
orps
inc
xor
arpl
repz
mov
movsl
mov
cmpsb
stc
je
jp
or
cmp
push
fs
dec
dec
js
push
dec
sti
cmp
cmp
call
in
stos
popa
xchg
jb
insl
add
sbb
add
lods
idivb
ss
dec
imul
sub
sti
xchg
hlt
stos
dec
daa
arpl
loopne
xchg
cmp
cmp
shl
bound
fiadds
sbb
push
int
mov
das
mov
cli
add
daa
arpl
sub
sbb
sub
pusha
dec
push
js
repnz
hlt
jl
aas
xor
and
mov
sbb
les
aam
and
mov
cmc
lahf
adc
pop
imul
imul
iret
mov
sub
mov
je
lea
fiaddl
pop
mov
mov
js
leave
xor
out
or
mov
mov
pop
les
int3
push
dec
dec
call
jnp
jle
inc
iret
dec
int
adc
decb
pop
add
xchg
xorb
mov
inc
imul
push
imul
pop
in
rcrb
daa
inc
mov
ret
mov
lret
push
mov
jno
lret
fs
leave
dec
push
dec
fmul
in
pop
insb
jno
ffreep
int3
int3
aam
add
hlt
mov
cmpsb
mov
popf
loop
cmpsb
cmp
mov
jbe
pop
loopne,pn
xchg
sub
jbe
jmp
call
fidivrs
sbb
jge
push
repnz
lods
and
idiv
aam
ret
bound
imul
mov
int
and
xchg
shlb
movsb
arpl
bnd
inc
push
addl
lahf
loop
ret
pop
push
adc
pushf
bound
and
mov
repnz
dec
mov
push
inc
enter
sub
mov
jnp
mov
jl
push
movsl
iret
sti
faddp
mov
data16
sbb
jecxz
mov
icebp
or
jle
test
mov
ljmp
filds
mov
cwtl
fyl2xp1
dec
inc
xor
inc
ss
rcl
pop
fidivs
cmp
stos
add
cltd
inc
leave
jge
roll
daa
inc
adcl
jns
dec
and
repnz
cmpsb
iret
iret
les
pop
aam
ja
movl
movsb
rorb
icebp
testb
fwait
cmp
movsb
cld
mov
fwait
mov
or
or
pop
adc
in
adc
add
cwtl
aaa
repz
cmp
mov
div
sbb
inc
sbbl
nop
jp
fildl
sarb
jl
sub
adc
dec
mov
out
movlps
ljmp
push
dec
inc
outsb
mov
ds
jecxz
ljmp
fwait
std
cld
fsub
pop
les
stos
mov
adc
out
jbe
sub
in
jbe
mulps
lods
mov
leave
test
mov
mov
pop
pusha
mov
mov
fcom
jmp
sbb
int
fidivl
cmpsl
aad
and
je
inc
leave
xchg
mov
mov
xor
lret
dec
in
pop
pmulhuw
dec
test
push
fisubl
fwait
rolb
and
jmp
pop
add
fdivrs
fbld
xchg
outsb
jmp
and
aas
and
ss
in
pushf
cmp
inc
jg
cld
jae
pop
insb
sbb
jb
cmc
push
pop
dec
xchg
test
jno
mov
call
xchg
xchg
leave
adc
dec
sub
bound
add
dec
sbb
clc
out
lods
push
xchg
sub
push
scas
std
add
pop
push
fsubr
push
sub
fnstenv
outsl
loopne
sbb
fs
inc
test
sbb
push
dec
or
push
lods
lcall
jne
test
mov
jb
add
mov
adc
icebp
dec
lods
cmp
jno
movsb
dec
rol
repnz
inc
mov
mov
or
push
mov
or
xchg
shlb
mov
jle
enter
sbbl
xlat
ror
in
push
mov
mov
adc
push
in
jae
push
fldcw
aam
out
sub
movsb
cmpsl
sub
push
pop
call
inc
xchg
push
dec
xor
dec
pop
cmpl
jmp
and
xor
movsl
mov
mov
cmp
jne
in
mov
out
repnz
push
sti
movmskps
imul
mov
out
add
pop
aaa
fists
loop
sbb
jp
les
filds
clc
mov
cmp
push
mov
ret
and
cltd
or
fnstcw
xor
cmp
lcall
imul
fdivl
push
dec
mov
jae
push
ljmp
cmpb
jno
dec
and
inc
sub
mov
xor
cmp
int3
scas
ret
aaa
xchg
dec
and
push
sbb
cmpl
mov
daa
lret
mov
inc
mov
js
push
or
and
mov
inc
xor
fldenv
or
or
std
pop
push
gs
pop
fisubl
ret
jne
lock
pop
mov
jnp
daa
jo
pop
aad
ud2
adc
or
mov
push
mov
out
inc
or
pop
push
and
xor
or
mov
ret
and
ficoms
adc
lcall
idivl
add
xorl
and
in
pop
insb
negl
mov
or
pop
addl
leave
insb
in
xchg
ror
pop
dec
dec
xor
das
enter
jbe
movsl
push
xor
pop
lods
sbb
mov
fbld
push
push
xchg
push
ds
cltd
in
add
add
inc
or
mov
sub
pop
cmpsb
outsb
shl
mov
xchg
repnz
mov
test
stc
fldcw
fsubrs
orb
adc
arpl
jne
inc
sbb
mov
stos
das
sti
dec
add
lds
fiadds
mov
xor
scas
jmp
or
and
add
pop
xchg
cmpsb
mov
cwtl
pop
imul
fwait
shll
push
add
xlat
test
push
iret
iret
dec
cli
stos
cmpl
pop
jb
jge
push
popa
push
xchg
sbb
adc
push
mov
push
push
mov
mov
inc
xchg
cmp
push
movsb
jno
jno
ss
or
jmp
cwtl
pop
pop
stc
repnz
lahf
add
ret
lret
or
and
mov
mov
dec
xchg
aaa
mov
iret
pop
jb
mov
inc
xchg
xchg
cmc
sbb
leave
es
cli
adc
sub
pop
xchg
xor
xchg
inc
mov
adc
lods
fidivl
adc
sbb
jge
test
subl
xchg
jb
loopne
lods
sbb
lods
imul
fnstenv
insb
addr16
addb
pusha
pop
adc
adc
xchg
xchg
xchg
and
add
int
repnz
lcall
nop
pop
lret
cmp
jbe
mov
mov
cwtl
cmpsl
jl
mov
mov
lods
add
mov
out
adc
stc
int
mov
sbb
mov
xchg
enter
aam
fildl
mov
scas
js
inc
jae
ljmp
mov
push
inc
pop
repnz
mov
std
insb
mov
push
or
lret
jnp
in
test
test
subl
adc
lcall
add
leave
lahf
rcrl
pushf
inc
jb
pop
pop
enter
inc
xchg
inc
mov
decb
pop
jno
or
lcall
inc
scas
mov
lds
jo
mov
scas
mov
rol
pop
and
es
rolb
inc
inc
push
scas
mov
jmp
call
int3
dec
cmp
ret
test
sub
xchg
xchg
cld
gs
not
cmp
xchg
jmp
daa
lcall
xlat
pop
dec
sub
nop
outsl
add
stos
lret
imul
cmp
xchg
xor
mov
in
add
jbe
inc
aas
lcall
sub
scas
jl
inc
lds
inc
cltd
pushf
cmpsb
insb
add
xchg
mov
in
ret
pushf
cld
movsb
lahf
mov
or
or
lret
lcall
sbb
xor
mov
cltd
dec
mov
xchg
pop
xchg
lcall
mov
and
dec
push
sub
and
push
mov
or
stos
push
bound
and
fidivrs
sahf
add
add
dec
jp
movsl
pop
inc
aad
mov
movsl
gs
and
or
les
inc
xchg
push
loop
xchg
cmpsb
pop
mov
addb
dec
cmpsl
roll
mov
sahf
outsl
vorps
pop
enter
outsb
cmp
sbb
cmp
lret
adcl
jno
aas
inc
sbb
inc
mov
and
jae
push
add
aam
mov
push
cmp
imul
mov
int3
push
lods
inc
add
mov
add
fsub
pop
ret
shrl
mov
xchg
loope
je
lcall
ss
sbb
pop
insb
mov
sbb
cmp
aad
pusha
push
mov
dec
arpl
repnz
sbb
pop
xchg
lods
mov
test
ds
xchg
jnp
add
sti
mov
pushf
cmpsb
into
jmp
and
icebp
fbld
subl
xor
mov
xchg
sbb
jmp
push
add
push
pushf
xchg
push
mov
shlb
xor
sarl
fwait
pop
lea
xchg
andb
sub
dec
xor
dec
rol
lods
lods
les
lcall
jg
shll
push
dec
in
push
ret
mov
sbb
or
jg
jle
and
and
mov
pop
cwtl
sub
sub
idiv
fs
mov
aas
sub
xchg
stos
imull
lock
mov
mov
sahf
out
xchg
ds
sub
subb
test
or
and
or
mov
call
push
out
or
sbb
adc
icebp
repz
adc
xchg
cmpsl
gs
fs
cmp
mov
lea
push
imul
ljmp
or
imul
popf
push
add
inc
hlt
jmp
mov
call
enter
push
mov
stc
push
push
push
addr16
mov
shll
jge
ja
les
add
mov
lea
jl
bound
xor
jae
ja
out
push
or
ja
pusha
subb
push
leave
push
mulb
in
in
mov
jbe
cmp
out
push
sub
cmpl
inc
int3
add
sbb
filds
dec
outsl
loope
data16
sub
das
adc
clc
loopne
push
cmp
sbb
dec
ret
push
cmc
and
inc
mov
sub
jae
xor
aas
pop
ds
xor
stc
push
add
mov
adc
insb
lea
push
jge
lds
sub
mov
xchg
jno
cmpsb
call
mov
push
rcll
popf
xchg
stos
xchg
jnp
pushf
push
out
jmp
cmc
out
mov
mov
icebp
jbe
xchg
call
clc
mov
mov
xchg
mov
outsb
dec
sbb
call
mov
cld
out
jne
or
in
mov
or
pop
shll
dec
inc
daa
or
das
ds
sub
adc
mov
mov
adc
iret
cli
call
ljmp
mov
out
inc
inc
out
push
in
sub
rorl
push
push
je,pt
js
aas
pop
test
stos
or
add
mov
pop
dec
stos
sub
loop
jb
jae
push
test
xchg
ljmp
test
mov
dec
jg
jnp
mov
dec
xchg
shrl
lock
mov
cmp
test
js
pop
dec
addr16
test
jae
jg
sbb
test
inc
fisubs
mov
push
arpl
ljmp
sbb
cmp
sbb
sahf
sub
add
test
shll
stos
dec
test
mov
loopne
movsb
rolb
insb
testb
sbb
sbb
scas
xchg
inc
mov
add
inc
fidivrl
sub
fbld
push
lds
xor
and
sub
xlat
arpl
cmc
cmpsl
xchg
jp
sbb
push
dec
lea
pop
aam
pushl
ret
fcoms
add
mov
out
xchg
mov
ret
add
sbb
push
stos
shll
xchg
jecxz
jecxz
scas
fists
sbb
inc
out
inc
jp
popf
xor
sbb
jno
divb
push
test
push
sub
jb
ret
lret
mov
mov
int
ds
aaa
cmc
stc
mov
add
mov
fucom
add
clc
fidivl
adc
out
jle
xor
xchg
dec
pop
mov
mov
add
mov
shlb
sub
dec
aaa
cwtl
addr16
test
xchg
sub
jl
cmp
out
hlt
sbb
cmp
xchg
inc
iret
and
or
orl
icebp
add
or
stos
and
insl
outsl
mov
adc
scas
in
pushf
fsts
xor
sahf
outsl
enter
cs
mov
dec
loope
push
icebp
into
cmp
sub
mov
fnsave
add
pop
adc
in
adc
adc
dec
pop
cwtl
stos
jmp
push
mov
mov
jno
fs
mov
jge
loop
cmc
sbb
mov
inc
fstp
sub
mov
ja
sub
les
jp
jne,pt
in
repnz
out
add
sbb
aad
and
and
ljmp
xorl
dec
xor
sarb
rclb
adc
icebp
addr16
arpl
sbb
cmp
popa
lods
jmp
cmc
cltd
jmp
pop
setl
shr
sarb
pop
jg
mov
adc
xchg
mov
jmp
mov
fcmove
or
mov
or
add
push
mov
subl
xchg
sbb
imul
inc
pop
inc
adc
rcrb
in
fstps
lret
pop
or
decl
inc
add
subb
inc
jg
pop
mov
cmp
jbe
in
mov
scas
insb
adc
lea
xchg
or
sub
inc
mov
movsb
sbbb
mov
mov
mov
jnp
shrl
push
mov
push
or
ds
and
push
imul
lock
out
sbb
out
pop
sub
sub
sub
push
clc
mov
push
add
jecxz
or
scas
jo
pop
rcr
mov
mov
sahf
js
mov
or
sub
mov
pop
xor
outsl
popa
mov
mov
lret
cltd
pop
xchg
cs
or
lret
jecxz
nop
or
adc
out
fnstenv
mov
jp
mov
cmp
addr16
and
jmp
loope
in
mov
cmc
and
adc
cmp
sbb
cmpsb
gs
xchg
pop
fstpt
lret
xor
jp
lret
dec
vmovdqu
das
push
cmp
inc
iret
js
xor
ds
cs
decl
cmp
jle
subb
mov
fnstsw
dec
rcrb
pop
add
jmp
jmp
lods
adcl
xor
cmc
scas
loope
int3
lea
adc
fsubl
das
pop
mov
rorl
xchg
and
cmp
in
in
outsb
fldcw
mov
push
lret
or
lahf
cld
ds
shl
arpl
sbb
cs
cs
lcall
xchg
xchg
mov
jns
inc
pop
imul
xchg
in
dec
outsb
dec
jnp
cmp
dec
xchg
push
movsb
pop
cmpsl
or
jne
scas
insl
sbb
xor
aas
lods
pop
shll
fucomip
js
cmpsl
imul
xor
fstpl
cmp
push
push
dec
push
lret
imul
and
adc
lea
inc
jg
sahf
sub
sbb
hlt
in
test
xchg
cld
ja
xor
mov
insl
loop
aaa
jp
aam
fidivrl
xor
push
ja
gs
inc
std
mull
pop
cmp
add
sbb
inc
mov
aam
ljmp
push
ffree
mov
stc
xchg
dec
pop
mov
mov
loop
and
ret
movsl
dec
roll
test
das
scas
or
sub
xor
jecxz
mov
pop
mov
enter
orl
xchg
icebp
jge
inc
shr
les
imul
lcall
lds
or
cmp
push
sbb
pop
sub
stc
mov
lahf
sbb
mov
push
imul
xor
pusha
xchg
mov
fdivs
inc
stos
xchg
add
sub
sbb
je
rolb
inc
pop
pop
and
sarb
pop
jb
mov
dec
es
mov
dec
add
jno
xor
sbb
das
enter
or
mov
sbb
push
fimull
sub
adc
xchg
push
or
jo
lret
int
mov
lret
lock
mov
not
jne
jecxz
xchg
daa
push
out
das
inc
inc
test
xchg
or
cmp
cltd
stc
inc
fdivr
idivb
jo
repz
cmp
xchg
inc
and
js
dec
ds
nop
outsb
mov
sbb
mov
or
sbb
dec
scas
push
in
inc
dec
pop
nop
jmp
pop
add
stc
jbe
int3
push
xchg
fdiv
sbb
add
jp
gs
jo
or
pushf
dec
repz
pusha
jle
ret
ret
je
negl
lahf
icebp
fsubrl
lret
stos
int
fistl
lahf
mov
lods
or
push
loop
fwait
loopne
jl
mov
shrl
xchg
les
adc
fwait
shrl
clc
test
daa
aaa
subl
sbb
jo
mov
adc
adc
push
test
movb
addb
adcl
inc
inc
or
ljmp
cmc
pop
icebp
ret
jg
js
testl
and
jecxz
out
fildll
xchg
cltd
cs
pop
jmp
das
rolb
push
jle
push
mov
ja
fs
pushf
loop
mov
fistps
addr16
fwait
jp
mov
and
lods
xorb
hlt
and
cmp
insb
and
sbb
push
addr16
adc
jne
pusha
iret
sbb
shlb
dec
dec
xchg
mov
sarb
xor
inc
movsl
call
cmpsb
sti
mov
inc
push
dec
test
pop
mov
push
outsb
push
add
jg
ds
scas
pop
int3
nop
jmp
jnp
cmp
shll
or
dec
and
pop
cmp
std
aaa
mov
repz
fsubrs
rclb
lods
mov
scas
or
es
xchg
sub
push
xor
pop
dec
jae
rorl
hlt
cld
sub
inc
xchg
das
cmp
pop
jnp
jp
sbb
jb
cmc
into
lahf
outsb
fnstenv
push
dec
es
fwait
and
push
shlb
add
sbb
fstpl
pop
mov
push
jne
inc
push
mov
and
mov
pop
mov
lret
pop
mov
or
repnz
mov
mov
dec
pop
loopne
fxch
jge
cli
test
stos
inc
mov
dec
scas
sbb
push
stos
clc
or
insb
xchg
mov
icebp
jl
xor
mov
mov
cmp
and
pop
out
test
rclb
popf
add
enter
jns
cld
push
sub
push
and
orb
xor
outsl
mov
push
xchg
sbb
test
je
fdivs
and
or
int
lahf
out
test
cwtl
nop
mov
nop
pop
mov
lock
popf
cld
clc
in
xchg
out
sub
push
and
ds
out
mov
dec
out
xor
jnp
mov
lds
push
xor
adc
add
xchg
call
daa
out
pop
pusha
sbb
push
enter
clc
imul
mov
inc
out
cs
and
sbbl
jg
insb
stc
xor
xchg
dec
scas
cmc
sbb
cli
out
out
cmp
sbb
dec
xchg
scas
hlt
and
adc
mov
add
test
cmc
xchg
cmp
mov
fs
rorl
adc
inc
pop
out
pop
dec
cmp
or
mov
mov
mov
jo
fisubs
out
inc
push
ja
aas
cmpsl
and
jge
cmp
in
sub
inc
ds
repnz
dec
pop
pusha
cmpsb
dec
loopne
mov
pop
aas
insb
in
xchg
rclb
pop
lods
movsl
stos
es
sub
lcall
fs
adc
push
xchg
js
mov
pushf
cltd
rol
sbb
dec
push
aaa
mov
cmp
fstps
mov
pop
in
fstps
or
dec
mov
dec
jbe
sub
jge
inc
jno
out
imul
dec
loop
mov
fisttpl
ret
in
pop
lahf
fwait
into
addr16
cs
mov
xor
daa
jp
fldt
dec
dec
jg
cmc
mov
add
jg
xor
insl
fwait
xchg
inc
ret
pop
adc
add
sbb
sbb
jnp
pusha
push
in
das
fiadds
movsl
pop
mov
sub
mov
outsl
xchg
es
inc
or
mov
and
fucomip
imul
leave
pushf
setl
push
or
into
movsl
sub
or
sahf
jb
xchg
mov
inc
cld
adc
mov
sub
cs
fsubp
jp
rorb
xchg
add
xlat
mov
add
dec
xor
mov
out
lret
mov
out
dec
xchg
push
mov
or
rolb
mov
jmp
imul
and
ds
or
dec
jmp
jecxz
mov
repz
add
stc
pop
inc
pop
add
push
ja
xchg
icebp
adc
pop
mov
sbb
mov
sbb
testl
out
sub
test
call
add
and
pop
lea
mov
sbb
or
sarb
jo
mov
addr16
jp
mov
pop
aas
cld
add
mov
enter
jmp
aam
mov
jg
movsl
and
pop
and
fstpl
pop
bound
push
jle
inc
adc
cwtl
in
add
or
sub
mov
add
test
fcom
mov
jmp
adc
enter
lret
std
pop
mov
out
cmc
imul
sub
mov
cmc
fs
inc
stc
decb
adc
pop
push
xorb
je
cmp
arpl
pop
ljmp
lods
in
sub
fucomi
add
or
sbb
jno
flds
dec
jp
mov
mov
cmp
dec
fldt
fs
arpl
into
outsl
pop
push
not
jo
add
testb
rorl
push
cwtl
lcall
les
int
xchg
nop
sub
cld
sub
jbe
xor
pop
push
test
cltd
std
jne
mov
das
sbb
add
sub
jbe
inc
mov
push
cld
xlat
jecxz
pusha
or
out
jbe
cs
lea
ds
xor
repnz
add
or
lret
pop
shrb
mov
mov
out
insb
shrb
or
mov
lahf
adc
xchg
xchg
adc
lahf
fists
mov
lret
and
cs
int3
enter
xor
addr16
cld
aaa
and
or
xchg
aad
fs
ret
frstor
pop
push
jle
jnp
std
aad
dec
xlat
add
dec
mov
mov
out
sub
adc
rcrb
nop
std
arpl
jg
pop
and
add
inc
rolb
and
test
cmp
in
inc
lcall
dec
lret
cmp
cmp
sub
iret
test
lret
outsl
mov
aam
pop
loope
xchg
pop
xor
loopne
push
repz
inc
dec
pusha
inc
mov
pop
push
movsb
and
fs
adc
dec
and
cld
scas
adc
push
cmp
stos
add
cli
mov
xor
inc
pop
or
sub
add
daa
push
xlat
pop
frstor
jns
push
jg
or
cmpsb
mov
push
gs
aad
fisubs
push
mov
es
push
sbb
jno
into
dec
inc
lret
fwait
sahf
push
pop
decl
sbb
add
sub
insl
push
movsb
call
cmc
or
insl
cmp
aaa
and
outsl
es
xchg
insb
adc
pop
and
mov
in
sbbl
pop
mov
mov
jmp
and
and
inc
add
test
lds
and
repnz
mov
adc
adc
out
stc
fwait
lcall
and
pop
and
xor
out
xor
ss
xor
pop
cltd
or
test
push
pop
sbb
push
cmp
sub
inc
out
and
xor
mov
pusha
addb
pushf
cwtl
shlb
sub
cmp
call
scas
addr16
cmp
or
jnp
scas
ss
insl
sbb
mov
out
cmpsl
jns
sub
mov
push
out
mov
inc
lods
and
scas
mov
xchg
rorb
mov
adc
aad
cmp
dec
jp
push
mov
int
rol
or
data16
pop
pop
subl
adc
mov
mov
adc
shr
xor
jo
nop
in
mov
mov
dec
test
mov
ja
xchg
ret
outsb
push
insb
pop
jp
stc
cld
icebp
jb
insl
arpl
iret
hlt
lcall
push
mov
xchg
push
mov
xchg
push
cwtl
push
lock
shrb
int
nop
fs
or
xor
cmc
mov
mov
test
and
add
cmp
or
dec
xlat
shlb
jne
jns
sahf
dec
xor
cmp
adc
push
add
jo
clc
inc
pop
fndisi(8087
add
mov
adc
stc
in
sub
mov
mov
inc
inc
jns
mov
pop
adc
xor
cli
movsb
insl
add
jp
je,pn
mov
jno
xchg
int3
cld
nop
pop
mov
cmp
xchg
hlt
and
call
lods
daa
arpl
stc
mov
push
sub
cmp
outsl
cmp
nop
push
and
and
add
mov
sbb
rorl
je
jae
mov
scas
mov
adc
pop
inc
and
daa
xor
and
ljmp
adc
mov
inc
pop
pushf
adc
sbb
mov
mov
adc
fs
or
push
xor
out
std
sbb
xchg
in
icebp
cmp
and
pop
mov
in
jmp
insb
dec
movsb
mov
mov
nop
or
jns
pop
xor
movsl
movsl
stc
xchg
adc
pop
pop
ret
in
mov
or
cmp
std
dec
cmp
jle
insb
pop
mov
daa
cmpsb
cli
fs
pop
push
cld
lcall
sahf
sub
lret
mov
lock
notl
dec
pop
and
nop
mov
cmc
je
je
xchg
data16
aam
enter
sub
mov
movsb
jne
adc
cmp
cmp
movsl
jae
or
fiadds
aas
xchg
jae
cld
cmp
shll
in
sbb
lods
mov
push
leave
xchg
fs
sub
es
pushf
popf
adc
out
inc
pusha
movsb
sub
ja
ja
repz
push
mov
pop
xchg
into
xor
jno
dec
add
popa
sbb
ret
dec
jl
mov
push
in
inc
xor
stos
dec
ljmp
bound
xchg
cmpsb
pop
sbb
add
push
sub
mov
mov
inc
xchg
outsl
mov
adc
sbb
mov
and
ret
mov
mov
ret
or
dec
sarl
in
and
div
jl
aas
jno
sbb
jecxz
popf
pop
leave
push
inc
and
dec
mov
push
enter
lret
sub
in
mov
fcmovnbe
add
movsb
fxch
add
outsb
pop
cmc
cmpsl
movsb
mov
push
cmp
test
test
divl
cmpl
adc
add
pop
pop
lahf
add
repz
xchg
dec
or
xchg
push
movb
cmp
cwtl
inc
data16
xchg
test
add
jns
fbld
mov
jb
pop
cli
xor
mov
pop
xchg
push
xchg
movsl
sbb
cmpsw
aad
xchg
clc
lds
inc
add
loop
icebp
fldl
cmp
into
and
sub
std
lret
aas
js
push
jno
push
xchg
testl
and
jbe
dec
dec
xchg
dec
add
loope
sub
pop
xchg
pop
and
or
or
rcl
ss
add
movsb
xchg
cmc
popf
pop
dec
sbb
lods
lods
pop
jne
mov
mov
mov
jge
xchg
lods
jns
leave
dec
popf
hlt
inc
lea
arpl
lahf
clc
dec
dec
sub
or
out
sbb
xchg
subl
fsubrs
dec
repz
hlt
roll
mov
mov
mov
mov
ret
mov
jmp
cmp
leave
mov
lea
mov
std
xor
enter
jo
jecxz
sub
clc
mov
sarl
xchg
push
cmp
outsb
out
sbb
sub
push
or
rcr
js
mov
adc
orl
dec
sahf
mov
pop
idivb
dec
ss
push
repz
in
mov
jns
mov
cmpb
pusha
ljmp
or
sub
xor
in
cwtl
mov
lcall
int
xlat
je
bound
gs
in
inc
xor
out
rcl
enter
int
js
test
es
and
dec
xlat
fnstenv
ljmp
aas
mov
dec
cmc
arpl
sub
dec
mov
sbbb
push
pop
ficoms
das
leave
call
fisubs
xor
faddp
ss
in
adc
movl
mov
iret
movsl
outsb
repz
movsb
xchg
inc
adc
cmpsl
push
push
cld
cmp
daa
xor
das
dec
aam
insl
loop
cli
push
rorl
add
xchg
push
mov
test
sub
out
sbb
jmp
adc
sahf
cmp
incb
mov
push
fdivl
rclb
xlat
daa
sar
into
pop
out
push
sbb
cmp
pop
cli
enter
aaa
movsb
imul
aad
sbb
int
clc
or
lret
ja
mov
mov
sub
lahf
outsl
fiadds
sub
mov
jnp
dec
js
lahf
fdivrl
pop
xor
dec
pop
push
mov
sbb
loope
jb
aad
xchg
test
into
sub
aad
mov
inc
adc
cmp
sbb
push
mov
scas
adc
into
mov
fcom
aam
paddq
insl
je
in
les
es
mov
jl
push
or
inc
mov
fsubr
lcall
ss
xorl
mov
jecxz
inc
mov
test
lods
cli
stos
mov
adc
icebp
mov
pusha
leave
cmp
mov
fimull
sahf
and
mov
ja
or
das
fnsave
scas
pusha
and
flds
sbb
xor
out
lods
jbe
clc
subb
es
mov
outsb
cmc
inc
notl
mov
imul
pop
cltd
xchg
sbb
push
lret
arpl
ret
into
sti
add
or
xchg
cmp
fsubs
mov
mov
test
enter
outsb
xor
movsl
dec
cwtl
and
jo
out
xchg
adc
cmpsl
add
fcomp
mov
pop
xchg
notb
orb
cmc
sub
cmpsb
rcll
loope
xchg
push
xchg
mov
mov
test
mov
in
ds
rorb
stc
lds
add
mov
ficoms
jns
mov
or
nop
bound
sub
add
sbb
pop
pop
in
xchg
sarb
into
aaa
int3
bound
jae
pop
and
jmp
push
push
ret
push
pop
call
gs
push
leave
imul
push
push
in
incb
call
ljmp
fsubrs
js,pn
cltd
push
scas
lds
ret
mov
popa
imulb
and
adcl
adc
pop
mov
ret
dec
sti
frstor
in
mov
imul
mov
fwait
sbb
rcrl
add
pop
ljmp
bound
sub
cmp
outsb
imul
pop
and
ja
mov
scas
sbb
cmp
or
and
mov
jbe
add
jo
jno
imul
adc
sbb
sbb
add
mov
imul
pop
push
sbb
dec
out
adc
aaa
or
enter
loop
dec
and
lcall
add
inc
sbb
inc
lcall
ss
adc
stos
push
stos
pop
ss
xor
cmp
mov
outsl
or
cmp
inc
mov
sar
xchg
cmp
inc
add
and
mov
pop
hlt
jb
inc
lock
adc
int3
sbb
jo
add
xchg
xor
cltd
faddl
mov
bound
dec
cmp
xorl
leave
jo,pn
push
adc
inc
rcrl
xchg
into
add
test
dec
roll
insb
imul
rcll
cmp
pushf
pusha
adc
xor
lods
hlt
arpl
sbb
mov
cmpsb
dec
int3
mov
popa
jmp
xchg
push
inc
out
jge
std
fsubl
into
pushf
in
adc
push
dec
or
lock
cmp
std
inc
out
cwtl
outsl
int
cmp
inc
jg
leave
jge
sub
fnstenv
push
test
in
insl
and
into
aas
je
test
cmpsl
jge
mov
sbb
lods
xor
lds
mov
scas
cmp
push
pusha
fnstcw
xor
mov
xchg
pop
dec
xchg
outsl
pop
pop
pop
push
sub
icebp
add
adc
xor
push
sbbl
mov
out
out
outsb
push
cmp
mov
dec
lcall
sbb
dec
xchg
push
inc
decb
cli
xor
aas
outsb
xor
mov
packssdw
rcr
add
inc
mov
inc
mov
or
std
push
cmpsl
push
push
mov
int
dec
adc
repnz
lods
jnp
je
sbb
roll
adc
dec
push
jecxz
add
mov
jl
add
outsb
jnp
pushf
pop
xchg
iret
adc
cmp
mov
fwait
popa
and
popf
inc
add
je
pop
cltd
mov
jne
adc
lods
xlat
sbb
mov
or
jmp
out
ffree
gs
xchg
push
test
add
jg
push
sub
daa
and
mov
mov
pop
roll
and
fisubrl
iret
xchg
sub
roll
aam
mov
add
enter
xlat
sti
push
mov
aad
outsl
aad
ja
rcl
inc
xlat
nop
pcmpgtb
popf
lds
std
imulb
cld
push
push
lea
outsl
out
or
enter
or
mov
xchg
loope
jge
mov
sbb
sub
xor
out
xchg
sub
ja
movsl
inc
movsb
jno
add
cmp
jle
mov
mov
mov
aaa
bound
ds
lret
es
fnstsw
xchg
lea
pop
hlt
int
ja
push
mov
sbb
in
sub
addl
sti
fsubrl
data16
mov
pop
jl
mov
insl
mov
push
jno
mov
push
sarl
sbbb
pop
sti
inc
pop
pop
in
jmp
iret
cmpsl
push
pusha
add
sbbb
mov
dec
fdivrl
cmp
push
adc
cli
aad
enter
pop
out
adc
add
ljmp
imull
aam
xor
cmc
and
sub
mov
pop
fildl
sahf
mov
pop
in
cmpsb
lods
sahf
gs
rolb
add
aad
pop
adc
push
push
jmp
add
dec
mov
cli
jmp
outsl
test
ficoml
push
fld
arpl
pop
loopew
dec
xchg
aam
popf
mov
icebp
dec
in
xchg
mov
inc
or
push
or
inc
arpl
push
sub
mov
inc
add
aaa
and
cmp
cmp
push
into
cmp
mov
mov
mov
jge
shr
in
jg
ret
imul
inc
sbb
je
push
fwait
inc
adc
or
addr16
movsb
mov
bound
mov
pop
fstpl
fldl
dec
lods
push
jmp
arpl
push
mov
xchg
dec
pop
mov
outsl
or
pop
sti
jg
push
add
repz
push
call
xchg
out
add
iret
shlb
imul
lock
imul
aaa
cmpsl
push
nop
push
jmp
sbb
in
cwtl
cmpsl
mov
mov
jne
ss
xorb
sbb
movsb
es
xchg
and
call
shll
outsl
cmp
sbb
add
ljmp
scas
pop
fs
sbb
mov
jmp
ret
lcall
test
mov
sarl
insl
shrb
jle
repz
adc
mov
and
sbb
push
fidivs
cltd
outsl
mov
pop
les
test
sahf
cmpsb
mov
push
into
movsb
xchg
jg
jnp
push
pop
xchg
ss
push
sahf
adc
or
add
lret
adc
shl
mov
test
xor
repz
lcall
cmpb
in
cs
mov
stc
push
push
jbe
outsl
shl
add
add
xor
adc
stos
pop
out
dec
lahf
pop
negb
jb
stc
and
mov
fwait
cmpsl
mov
adc
xchg
mov
je
mov
jno
outsl
mov
or
clc
xchg
arpl
addl
mov
or
and
testb
outsl
sbb
inc
pop
jnp
mov
test
xchg
mov
xchg
lret
xor
push
fmul
mov
add
cmp
les
cmp
inc
mov
aaa
mov
rol
ret
mov
sbb
popa
inc
and
add
sbb
dec
adc
repnz
cmpsl
mov
bound
mov
push
in
repnz
ret
mov
dec
jmp
push
push
shl
movsb
fwait
ret
xchg
out
sbb
mov
ss
ret
dec
fldt
add
cmp
pop
addb
or
das
int
sub
dec
ds
cmpsb
aas
cmc
cltd
shrb
pop
les
scas
aam
std
imul
and
xchg
push
push
ss
in
adc
outsl
ret
cwtl
mov
sbb
push
les
sbb
jle
mov
xor
imul
sub
sbb
outsb
mov
or
push
mov
push
cvtps2pd
scas
jmp
scas
mov
xchg
or
mov
mov
xchg
mov
mov
lret
hlt
xchg
es
cmpsl
jge
rorb
stc
test
into
lock
or
out
jmp
test
adc
cmp
mov
cmpsb
fistpl
enter
fmul
adc
xor
adc
mov
cmp
test
outsl
test
cltd
mov
cmp
ja
out
inc
sahf
jle
iret
mov
imul
es
out
xlat
xchg
daa
inc
fld
shrl
shrb
sti
loope
test
jns
push
sbb
mov
pushf
xor
sbb
das
xor
insl
and
xor
adc
mov
mov
cmp
gs
push
das
add
ljmp
ja
push
and
add
adc
testl
jl
arpl
test
or
xlat
call
lds
arpl
push
or
mov
ss
mov
adc
sub
nop
jb
les
in
add
popf
iret
out
push
sub
dec
sbb
jp
xor
clc
int3
inc
int
ljmp
mov
pop
push
bound
lea
cli
mov
xchg
adc
dec
fnstcw
xchg
lret
and
cmp
push
and
jns
pop
jp
jne
outsb
jg
sub
outsb
out
cmc
pop
jge
and
cwtl
pop
push
add
movsb
jecxz
cli
dec
dec
push
es
out
mov
and
mov
outsb
shlb
mov
rcrb
push
xchg
stc
sahf
inc
int
sti
push
and
ret
mov
insb
aam
shlb
test
and
or
cmpsl
ljmp
cmp
ss
lock
stos
lods
bound
stos
dec
mov
sub
popa
inc
push
xchg
cmp
pop
mov
push
repz
pushf
xor
and
push
stc
push
xor
jle
or
inc
cmp
inc
inc
inc
push
jp
xchg
xor
sbb
stos
pop
pop
bound
lds
cmpsb
dec
popa
or
aas
sub
lret
sub
ljmp
xchg
xchg
add
mov
out
ficoml
lods
cld
sub
pop
jne
int
jb
dec
add
mulb
insl
repnz
cmp
jp
xchg
les
out
out
mov
sbb
fsubl
hlt
pushl
inc
mov
gs
out
push
pop
or
mov
stos
jnp
sbbb
cltd
cmp
push
stc
cvtdq2ps
xlat
adc
pop
js
mov
in
pushf
cwtl
int
out
lcall
pushf
cltd
pop
pop
cmp
stos
mov
sbb
mov
and
xor
les
test
adcl
sbb
les
adc
cmpsb
xor
arpl
xlat
mov
jnp
fiaddl
loop
test
fstpl
lea
sub
add
xor
mov
or
sub
shlb
lea
fisttpl
dec
ljmp
lret
xchg
xor
cltd
stc
dec
out
dec
orb
mov
xor
sub
sbb
xchg
sbb
sub
data16
movsb
pop
mov
or
ret
repnz
mov
push
pushf
jb
scas
pop
mov
mov
and
out
cmpsb
cmp
mov
and
dec
enter
icebp
sbb
clc
push
jmp
movzbl
adc
push
mov
les
mov
or
orps
cmpsl
xchg
int
into
shl
mov
mov
mov
push
mov
out
not
mov
inc
popf
sub
lahf
pop
movb
idivl
xchg
cli
cmp
jle
negl
stos
fadd
dec
movsl
mov
push
xchg
inc
rcll
das
cmc
shr
xchg
sbb
cmc
mov
mov
lods
and
cli
fidivrl
in
pop
loop
in
inc
pop
leave
mov
jg
test
lret
mov
jno
cmp
xor
mov
fwait
sbb
cmpb
dec
xor
scas
dec
les
fs
arpl
ljmp
ret
popa
insb
das
mov
and
lock
inc
or
icebp
mov
adc
dec
loopne
add
lods
dec
ss
adc
push
test
int3
sbb
or
push
xlat
pop
xorb
jl
or
sub
int3
call
pop
fldenv
cwtl
lcall
lret
add
incb
loop
out
scas
loop
int
pop
xor
jnp
aaa
xchg
add
sub
xlat
imul
sub
jne
repz
sub
cmc
mov
push
imul
jge
jl
mov
popf
xchg
jg
and
mov
add
dec
loopne
jg
jl
or
pop
test
cltd
jno
sub
dec
daa
mov
mov
add
iret
ds
jo
xor
mov
sbb
fists
lret
pop
test
insb
push
mov
daa
xor
clc
into
or
push
mov
push
stos
das
stos
iret
fs
jae
scas
rcr
mov
aad
int
xor
in
test
fbld
xchg
mov
add
movl
mov
xor
pop
icebp
filds
shl
cmp
inc
mov
xchg
leave
dec
test
sbb
pop
idiv
test
push
fmuls
ljmp
test
testb
call
jmp
imul
mov
popa
aaa
out
add
call
clc
mov
add
lcall
stos
mov
ja
and
andl
cmp
in
adc
dec
dec
rcll
xor
movsl
adc
xor
push
es
imul
mov
mov
mov
clc
adc
jl
xor
mov
xor
leave
sub
outsl
fwait
xchg
ljmp
push
dec
pop
pop
aas
push
jecxz
subps
dec
sarl
lods
mov
push
xchg
cwtl
xor
jp
mov
cld
and
and
fs
inc
pop
repz
loope
pushf
loope
mov
imul
or
test
or
jne
adc
lea
das
inc
out
push
sti
lret
lahf
in
ja
and
dec
mov
dec
mov
outsb
add
out
sbb
fwait
and
or
movsl
inc
dec
sti
mov
dec
pop
stos
enter
pop
pop
jle
cmpsb
aam
xchg
icebp
idivl
xor
scas
insb
js
das
cmc
repnz
cwtl
bound
pop
push
push
ret
jno
test
or
jmp
arpl
out
rcrl
pushf
cld
rol
mov
faddl
stos
sub
repz
push
jns
gs
inc
sbb
into
jp
repz
and
out
jmp
sub
lds
pop
in
sub
orl
adc
mov
mov
pop
push
cmp
xchg
test
stos
fwait
gs
out
rol
inc
push
pushf
lret
stos
xchg
and
mov
dec
lcall
cmp
mov
pop
mov
aad
adc
xor
pop
imul
arpl
or
das
fstpt
int
or
fisttpl
dec
hlt
and
mov
je
pop
vpsrad
sti
push
mov
jle
jge
mov
cmp
idivb
ficompl
lahf
add
push
pop
pop
pop
dec
xchg
pop
pop
xor
insb
movsl
test
enter
fwait
mov
lahf
adc
push
dec
push
clc
es
adc
pop
inc
nop
divl
xlat
aam
mov
xchg
add
jne
pop
shll
xchg
mov
xlat
jnp
outsl
adc
adc
dec
call
push
push
mov
pop
mov
divb
push
aad
bound
lds
in
rcrb
inc
adc
adc
gs
out
arpl
mov
jne
scas
sub
nop
dec
test
lods
outsl
sbb
sub
gs
inc
lret
push
int
xchg
add
ja
pop
push
andl
scas
popf
jnp
pop
sub
repnz
into
cmp
inc
mov
or
lret
sub
andl
inc
repz
mov
and
jne
push
lea
mov
push
xchg
aaa
pop
push
xchg
mov
subb
sbb
sbb
mov
iret
sbb
or
popa
repnz
mov
adc
mov
inc
push
sbbl
rorb
rolb
sbb
inc
insl
xor
push
fdivrs
dec
cld
pop
pop
jge
cmpsb
retw
cmpsl
lock
pop
jns
icebp
shr
stos
dec
sub
test
pop
stos
int
imul
inc
fwait
test
cmp
inc
shlb
xchg
and
xchg
popf
insl
out
add
push
or
or
rcl
add
fnstsw
cmp
mov
in
out
xchg
cmp
pop
inc
add
out
xchg
fdivs
pop
in
insb
lea
jl
cmp
ljmp
les
sti
out
cmovg
mov
sahf
xchg
in
or
push
mov
and
lcall
cmp
out
pop
pop
mov
push
repnz
pop
aas
or
loopne
inc
add
lahf
loop
pop
shll
and
out
or
movsb
icebp
push
jno
push
push
lahf
add
pop
dec
mov
add
outsb
dec
sub
cs
test
mov
ljmp
or
out
sti
add
or
call
mov
jp
jp
aas
sub
cmp
jl
jg
push
push
stos
cmpl
aas
adc
add
push
js
insl
and
add
cltd
push
xor
sub
je
cld
pop
mov
repnz
sub
insb
sub
inc
jl
mov
rorb
or
cli
test
lret
cmp
sub
jl
cmp
push
stos
cmpsb
insl
or
fmul
mov
mov
movsl
fistpll
aam
xor
mov
jo
pop
shrb
icebp
pop
dec
mov
mov
pop
inc
and
jg
add
cld
add
movsb
cld
stc
test
push
in
jae
mov
mov
add
lods
fcompl
mov
or
mov
jle
mov
rcrb
call
sbb
inc
orb
icebp
rcll
bound
imul
movsb
cli
or
xchg
addb
add
stos
sbb
xchg
push
movsb
pop
and
mov
aad
and
push
inc
mov
dec
sbb
mov
adc
push
mov
sbb
bound
gs
stc
pop
mov
out
enter
sub
cmp
aas
inc
xchg
cmp
adc
push
jbe
lock
int3
pop
adc
es
pop
stos
mov
and
nop
and
inc
ds
out
test
sub
movsb
and
outsb
lret
dec
mov
pop
aaa
jg
pop
insb
ljmp
fidivrs
clc
ret
jae
ja
fdiv
push
cmpl
pop
movsl
mov
mov
popa
sub
outsb
xor
mov
and
mov
movsl
test
xchg
enter
into
mov
pop
xor
ja
pop
xor
gs
jle
repz
leave
ljmp
cmp
stos
lret
movsl
es
fnstcw
repnz
pop
int3
int3
mov
push
test
pop
js
or
push
jb
sbb
cmp
mov
insl
stos
ss
ja
setno
fistpl
mov
in
sarb
push
add
sbb
hlt
and
push
xchg
inc
pop
popf
sub
ljmp
and
dec
jno
jl
cmp
xor
pop
fcmovnbe
dec
ret
popa
loopne
imul
add
jl
add
sti
in
lret
fs
in
bound
fiadds
hlt
sti
les
jle
ficoms
insl
int
mov
push
test
mov
fcmove
push
mov
dec
cld
or
push
mov
xor
outsl
and
and
or
mov
pop
out
dec
testb
push
aaa
movb
xor
sar
cmp
lods
dec
movsb
aad
lcall
cmpl
add
rcll
fstpt
jecxz
mov
out
push
inc
sbb
gs
pop
xchg
orb
int
rolb
mov
lahf
test
into
in
shll
out
popf
out
out
lds
or
je
and
ficomps
inc
in
fidivl
push
pop
jne
add
inc
test
sarl
mov
sti
push
xchg
mov
adcl
sub
orb
arpl
and
add
adc
stc
fs
mov
arpl
pop
fdivl
mov
arpl
mov
ret
pushf
mov
mov
sbb
pop
mov
pop
dec
dec
int3
ret
jno
loop
mov
daa
iret
test
insl
aaa
sub
lods
jle
dec
mov
xor
sub
jg
mov
pop
dec
movsl
popf
into
or
jb
in
in
add
outsb
dec
dec
in
aam
add
mov
push
or
loop
dec
lret
clc
push
xor
xor
test
test
gs
xchg
xchg
data16
and
xor
add
pop
inc
mov
outsl
add
sub
mov
or
sub
xor
in
stos
push
cld
in
lret
sbb
xor
jmp
mov
sbb
push
test
push
inc
adc
mov
mov
test
fnstsw
inc
repnz
cmp
pushf
dec
out
xchg
cmp
inc
pop
ljmp
pop
movsl
popf
ds
lods
shlb
sub
mov
inc
pop
gs
imul
divl
orb
jle
ret
in
ret
loopne
or
in
and
insb
dec
in
popf
std
push
mov
lods
inc
mov
mov
and
or
jg
inc
test
inc
idivl
std
pop
mov
stos
repnz
out
test
push
push
xor
fnstcw
pop
jecxz
inc
ret
outsb
jl
rorl
dec
movsb
and
fisubl
jmp
dec
lcall
call
lds
inc
lret
sub
xor
xchg
jns
sub
pusha
addr16
loop
hlt
lds
popf
pop
stos
add
dec
add
add
int
rcrb
pop
mov
sbb
aaa
xchg
mov
lds
jmp
xor
xchg
or
test
fs
cmp
insb
fwait
xchg
sysret
lods
inc
add
bound
adc
dec
ss
out
and
lcall
or
mov
push
aad
cmp
outsb
ror
xor
pop
and
cmc
pop
addr16
movsl
fst
mov
inc
sbb
and
mov
out
adc
aam
cwtl
sbb
pop
imul
movsl
mov
xchg
pop
and
sbb
or
fldl
sarb
popf
orb
mov
jmp
jge
add
fisubl
and
lcall
negl
adc
xor
mov
cmp
repnz
in
inc
sti
sbb
cmp
cmp
push
or
push
sub
stos
pop
dec
out
rol
jg
clc
hlt
imul
ficompl
fwait
mov
dec
xlat
pop
xor
jb
fdivrp
sub
out
ljmp
popa
inc
jmp
and
fldt
xor
cmpsb
mov
pop
or
dec
mov
addr16
mov
aad
lods
aas
cwtl
aam
dec
filds
fldt
int3
mov
sub
xchg
fistl
add
adcl
xor
or
lds
inc
loopnew
lock
testb
push
enter
adc
out
in
mov
lds
sbb
lds
dec
std
jmp
cli
and
push
and
xchg
loope
ja
call
jp
or
pusha
and
lds
cwtl
xchg
mov
or
cmp
xor
int
cmc
insl
push
sub
movsl
cmp
xchg
fcompl
and
imul
in
mov
lock
adc
das
adc
mov
call
loop
gs
pop
pop
mov
test
adc
insl
add
les
sub
adc
mov
popa
leave
mov
adcl
mov
sbb
jg
pushf
push
gs
pop
sub
dec
ja
push
sbb
xchg
or
lods
jcxz
mov
mov
dec
scas
pop
cld
pusha
push
inc
inc
outsb
pop
jge
jne
sbbl
mov
cmp
in
ss
jmp
xor
mov
shlb
int
fdivrl
leave
cmp
inc
pop
cwtl
sahf
cli
sbb
out
dec
adc
mov
into
push
mov
and
hlt
xchg
enter
push
mov
mov
lret
insb
sub
nop
xor
int3
cld
loope
push
xchg
jp
aaa
push
jg
jnp
xchg
shll
cltd
mov
cmpsl
ret
lock
add
out
lds
pop
push
sbb
jne
cmp
cmp
mov
cld
cmc
push
jp
sbb
shll
dec
xchg
das
add
mov
cmp
mov
dec
pop
scas
mov
scas
push
cmp
jmp
iret
xchg
clc
stc
xchg
push
mul
dec
cmc
mov
fistpl
pop
pop
sub
lea
jne
loopne
es
out
sbb
sbb
jno
jge
push
scas
adc
repz
stc
sbb
adc
fildll
xor
shlb
in
lods
xchg
cmp
xchg
lods
and
in
cmpsb
pop
inc
and
pop
inc
in
jge
repnz
stc
jnp
sbb
mov
ljmp
pop
jmp
mov
popa
ficompl
cltd
ret
dec
inc
mov
in
into
add
jge
sub
push
dec
inc
fistpl
pop
test
pop
push
dec
lahf
iret
dec
pop
divb
out
pusha
cs
sbb
add
aas
inc
fcmovb
pop
pop
sub
xor
aam
push
xchg
fcomps
jbe
in
add
pop
call
into
push
xchg
xchg
stos
ret
call
in
lods
dec
cli
in
xchg
push
sahf
dec
lock
cmp
dec
cltd
dec
icebp
xchg
mov
in
imul
in
mov
lock
push
mov
addr16
hlt
lods
and
mov
in
cmp
inc
or
and
mov
push
mov
xor
leave
mov
sub
xchg
faddl
xchg
add
inc
jno
aas
loope
and
lret
rcrb
add
je
aam
cld
or
arpl
in
sub
je
sahf
repnz
popa
or
push
in
inc
lret
mov
xchg
push
inc
mov
jp
imul
fwait
nop
int
lods
jp
gs
mov
imul
mov
jecxz
sbb
int3
shrb
rep
or
push
pop
popa
adc
push
in
fdivl
add
xchg
leave
pushf
clc
out
mov
xor
cmc
in
sub
pop
in
sub
or
in
cmp
dec
adc
pop
push
xchg
int3
pop
test
jae
fs
xor
sub
xor
mov
push
xor
pushf
mov
lcall
nop
push
adc
mov
mov
fs
push
mov
cwtl
or
mov
mov
test
cwtl
aas
pop
mov
push
cmp
roll
movsb
orl
cs
sbb
xchg
lods
and
pop
push
xchg
cmp
push
cli
mov
jmp
mov
sub
testl
and
stc
add
xchg
imul
cwtl
inc
mov
sub
inc
movsb
sub
add
in
pop
subl
xchg
inc
push
rorb
imul
cmc
sub
jno
adc
xchg
cld
push
xor
xchg
cmpsl
mov
lahf
xchg
mov
xchg
stos
addb
jnp
jbe
pop
aad
jg
test
testl
sbb
cmc
in
mov
sub
gs
mov
xor
sub
sbb
mull
sbb
add
std
ficoms
mov
jne
add
xor
push
cmp
dec
or
outsb
add
loope
aam
pop
inc
ret
mov
loopne
mov
aas
sub
lcall
pop
sub
and
xchg
inc
mov
arpl
jl
in
xor
aam
sbb
lea
stos
mov
dec
lods
dec
fisttpll
mov
idivl
js
test
pop
jl
pshufw
xor
push
push
push
pop
stos
inc
clc
push
push
sbb
jb
mov
lret
xor
lods
mov
das
ret
and
call
test
punpcklbw
mov
mov
adc
pop
inc
and
js
push
in
push
jge
xor
fcomps
jge
cmp
jae
cmp
cwtl
push
out
and
dec
loope
cmp
cltd
and
xor
mov
xchg
jo
aam
fxch
cs
mov
mov
mov
imul
jp
outsl
xor
pop
movsb
pushf
jb
icebp
cs
adc
push
sti
xchg
pop
pop
jecxz
jb
dec
adc
into
repnz
jmp
std
stos
test
aad
xor
ret
divb
inc
ret
daa
xor
jge
or
lods
insl
cmp
ret
cmp
gs
dec
dec
lret
jg
push
dec
sub
cwtl
inc
cwtl
sub
movsl
dec
add
sub
xor
add
pop
inc
movsb
call
pop
std
pop
sarb
cmc
xchg
ds
xchg
add
sarl
in
ja
adc
inc
dec
aam
stos
mov
xchg
dec
mov
cmp
lds
pushf
fistps
les
int
pushf
ss
and
jle
incb
fadds
daa
dec
repz
sbb
rol
pop
arpl
sub
mov
mov
enter
popf
push
jb
mov
and
stc
jle
adc
jae
lret
push
ss
dec
rorl
clc
xor
scas
cmp
pop
push
and
das
out
addr16
pop
out
test
ljmp
hlt
cmp
mov
push
test
xlat
jae
xor
jl
and
hlt
mov
fadd
scas
hlt
add
mov
inc
addr16
movsb
cli
cli
dec
sub
enter
fsub
lods
fdivs
movsl
xchg
test
lcall
aas
shlb
mov
pop
and
enter
loopne
sbb
int3
add
jnp
sub
shlb
js
jmp
xchg
rcrl
mov
or
xor
jns
and
and
push
lods
sbb
sub
push
fstp
cltd
icebp
aas
xchg
xchg
mov
std
jne
jne
cmp
ja
pop
xor
outsb
ljmp
or
push
cld
test
das
adc
scas
mov
aad
fisubrl
cmp
sbb
sahf
aam
mov
pop
inc
js
push
jbe
test
sahf
ret
loopne
adc
adc
mov
fwait
mov
jbe
adc
fnstcw
std
jmp
notl
mov
sbbb
sub
lret
sub
mov
jle
mov
xor
cmp
outsb
stos
pop
test
scas
jle
int
sbb
call
leave
or
pusha
or
arpl
sbb
adc
jb
lcall
inc
mov
xchg
add
call
adc
mov
cmp
inc
mov
add
ret
jnp
mov
mov
popl
push
addb
fcompl
add
xchg
push
mov
repz
push
inc
test
push
lock
into
adc
in
stc
cmp
jb
les
imul
mov
push
sar
adcl
sar
pop
popa
enter
pop
mul
xchg
es
sub
arpl
pop
test
jl
and
ja
sbb
out
add
jle
repnz
sbb
imul
ss
hlt
cwtl
loop
pop
sub
push
mov
push
pop
ficoms
and
mov
xchg
mov
ja
dec
mov
xchg
jnp
xchg
movsb
inc
adc
pop
xor
jbe
cmp
in
pop
xchg
mov
in
je
push
call
pop
jae
fistpl
loopne
jmp
or
xorl
sarl
cmpsl
int
and
and
jp
arpl
cld
jg
sbb
jge
push
ret
in
or
push
inc
and
std
loope
cmp
cmpsb
mov
add
inc
mov
inc
sub
push
inc
out
xchg
cwtl
popa
dec
mov
pusha
push
test
daa
xor
je
or
aaa
fsubl
in
jecxz
pushl
aaa
cld
adc
mov
adc
leave
jae
enter
xchg
cmp
out
ss
xchg
sahf
and
adc
push
add
popaw
popa
mov
inc
push
ja
mov
mov
cs
movsl
inc
and
loope
cmp
jns
stc
and
adc
inc
pusha
and
inc
add
andl
loopne
jae
jmp
pshufw
mov
cmp
negb
fsubrs
xchg
push
pop
popf
outsb
or
shrb
scas
xchg
xor
dec
and
mov
mov
mov
mov
lret
xchg
lds
div
out
imul
xchg
das
aaa
dec
in
out
popf
cs
icebp
pop
mov
repnz
std
sub
add
xchg
cli
leave
mov
cmp
arpl
jnp
pusha
xchg
or
mov
fadd
idivb
insb
in
dec
aas
out
jo
inc
mov
cmpsb
and
mov
nop
orb
xchg
pop
aas
sub
shl
sub
pop
mov
adc
cli
jecxz
push
xlat
fsub
les
cmpsl
aam
sti
mov
ret
push
jo
xorb
test
mov
in
in
cmp
xchg
rcll
frstor
mov
outsl
cmp
dec
or
inc
int3
jno
add
adcb
mov
cltd
inc
or
repz
in
lret
stc
scas
fwait
dec
aad
cmp
rcl
mov
push
add
mov
mov
xchg
lods
dec
ficompl
out
dec
mov
sub
add
movsb
xchg
data16
cmove
sti
mov
pop
insl
jecxz
jg
xor
test
jo
test
dec
loopne
sbb
push
out
xor
and
mov
daa
cltd
sahf
jl
outsl
cmp
dec
fs
out
lahf
mov
mov
adc
movsb
je
or
xchg
fistps
push
arpl
inc
in
pop
jne
xchg
mov
pop
mov
mov
popa
inc
aad
ret
mov
cmpsl
test
xlat
mov
pop
inc
xchg
ss
lcall
leave
inc
in
in
outsl
cmpsl
mov
out
fisttpll
adc
jmp
mov
shll
mov
or
sub
ret
jae
addr16
in
in
inc
lods
cs
dec
leave
inc
add
mov
inc
in
mov
or
addr16
cwtl
daa
adc
shll
mov
jl
pop
lds
jne
aas
sarl
testb
jg
mov
fildl
orl
sbb
sbb
sub
adc
sub
mov
cwtl
dec
call
scas
movsb
add
aam
imul
sub
push
mov
mov
icebp
in
jle
dec
sti
pop
lds
dec
movsl
add
and
add
stc
outsb
sub
inc
into
rcrb
ret
inc
sbb
pushf
jp
add
hlt
add
jb
jl
out
addl
jle
pop
lret
xor
cwtl
xor
hlt
cmp
out
jb
arpl
inc
mov
out
add
cmp
dec
or
xchg
mov
test
andl
pop
xor
cmp
jl
xlat
gs
jmp
or
inc
fsubrl
dec
or
and
adc
lcall
out
lds
rcll
pop
mov
aas
xor
sub
fcoms
rcrl
lds
or
and
dec
xchg
inc
sbb
mov
xor
arpl
adc
jge
aad
pop
cmpsb
ror
shrl
lock
pop
mov
mov
and
cmpsl
xchg
jp
out
jne
adc
in
cwtl
xchg
jnp
aad
mov
enter
aas
in
inc
lea
imul
xchg
addr16
ljmp
jne
aam
rorl
cwtl
mov
arpl
jbe
loop
rcl
test
aas
jns
inc
jne
mov
jns
cmp
ds
movsl
imul
out
push
ljmp
and
push
push
lret
lea
cmp
sbb
pop
mov
sub
jno
push
imul
xor
jl
out
aaa
jb
mov
jmp
pushf
jge
ja
out
jno
mov
popa
xchg
ja
lcall
cmp
aaa
cmp
cltd
out
mov
push
sbb
shrb
mov
add
stos
mov
mov
das
xchg
aaa
repz
adc
xor
pop
add
les
cmpsl
adc
add
sahf
js
xor
leave
int3
push
mov
lcall
imul
call
xchg
cmp
inc
sbb
call
or
mov
fdivl
mov
jecxz
sub
and
xchg
mov
lock
sub
dec
loop
mov
or
sar
or
add
cmpsb
iret
mov
dec
sar
xchg
sub
popa
aad
ret
mov
test
ljmp
iret
aam
in
ja
xor
sub
test
mov
pop
stc
ret
inc
addl
jl
and
push
test
jb
mov
inc
mov
pop
shll
call
adc
sub
xor
sub
out
js
add
mov
fildl
add
inc
mov
mov
cwtl
or
jb
mov
clc
imul
and
in
shl
rol
jbe
lock
cli
and
outsl
cmp
add
pushf
dec
cmp
je
jnp
sbb
repnz
test
sti
dec
pop
or
or
call
push
mov
add
gs
lods
test
cmp
test
add
mov
and
mov
shll
or
jle
out
inc
es
mov
jnp
data16
stc
inc
div
dec
mov
shlb
fidivrl
mov
and
jg
popf
scas
or
pop
sub
pop
push
fstps
gs
std
rorb
lret
inc
cld
cmp
dec
inc
fwait
dec
test
xor
sahf
push
movsb
movb
aaa
adc
pop
push
daa
jns
jp
in
in
push
sub
das
mov
or
and
jno
ss
insb
cwtl
push
sbb
push
pop
xor
mov
insl
fs
je
fs
lcall
ss
jle
pop
test
jnp
sub
jp
mov
add
addb
adc
mov
push
push
ror
pop
mov
shr
or
add
call
or
insl
xchg
or
daa
pusha
jecxz
pop
mov
adc
xchg
inc
pop
add
fdivrs
pushf
pusha
mov
inc
sahf
inc
sarl
out
repnz
fdivp
test
sbb
ret
mov
fisubs
inc
fwait
mov
push
in
movsl
les
js
int
stos
subb
mov
add
iret
in
mov
pop
xchg
test
sbb
iret
push
pop
dec
rcrb
hlt
dec
or
outsl
sti
xor
and
imul
js
xor
sar
aaa
jnp
daa
shrl
adc
sub
loope
or
adc
mov
add
aam
lahf
out
movsl
std
call
ljmp
xorb
cs
aad
xchg
leave
in
push
mov
loopne
xchg
push
add
sahf
clc
out
pushf
xchg
pop
call
mov
mov
adc
nop
mov
xor
in
into
pop
sbb
iret
les
and
ljmp
aad
mull
mov
sbb
inc
pop
cmp
mov
repnz
les
test
aas
push
jbe
dec
popf
mov
rol
ds
mov
mov
test
out
xor
mov
pop
adc
subl
xchg
or
aas
ljmp
pop
mov
sti
xor
popf
xchg
add
shlb
fwait
sbb
xchg
fcoms
out
sbb
push
imul
jp
push
add
xchg
aad
jmp
js
dec
cmp
stc
out
or
xor
xchg
sbb
adcb
shll
dec
fwait
out
call
cmc
std
sub
mov
sub
adc
mov
pop
pop
rorb
into
mov
dec
int
data16
fistpl
mov
ret
in
or
test
mov
test
pop
mov
lahf
cmc
ret
fwait
and
inc
leave
sbb
add
adc
sbb
in
mov
pop
stc
xchg
shlb
movsl
les
jge
stos
loop
in
mov
imul
jae
mov
loop
data16
or
in
pop
flds
jmp
ljmp
ret
cmp
add
repnz
in
ds
adc
pop
xor
sbb
push
mov
test
dec
shl
in
test
aad
inc
setle
mov
imul
jp
xchg
enter
push
jnp
out
ja
shlb
add
mov
pop
jl
jmp
insl
movsb
sbb
add
jb
sub
xchg
push
mov
inc
adc
mov
out
aad
xor
mov
cmp
int
fbstp
mov
mov
and
ret
test
dec
push
sub
mov
lcall
leave
inc
cmp
push
cmp
enter
and
pop
jmp
pusha
ss
imul
test
xor
out
cmp
mov
leave
push
xchg
stc
or
dec
int
inc
stos
dec
dec
inc
dec
mov
mov
sbb
out
pop
out
adc
mov
mov
test
fimuls
push
or
test
sub
jl
test
cmp
mov
pop
popf
insl
pop
mov
insl
mov
fldl
enter
ljmp
pusha
imul
jmp
push
pop
ret
sub
mov
fcmovu
daa
mov
add
pop
cmc
dec
dec
sub
scas
cs
mov
xchg
pushf
in
push
xor
cmp
stos
sbb
das
jmp
jbe
stc
fs
push
mov
fcmovne
xorb
cld
pop
xor
push
add
adc
jp
jl
stc
jle
mov
xchg
les
cmpsb
popf
cs
fistl
loopne
push
fwait
call
and
stos
push
add
mov
xor
push
xchg
rorb
mov
fiadds
std
mov
sbb
int
pop
jp
cli
dec
xchg
pop
stc
pop
mov
or
jae
xchg
push
push
div
inc
je
inc
push
orl
mov
daa
and
cmp
cwtl
ret
inc
movsb
lods
aam
pop
jl
std
or
mov
xchg
mov
or
adc
adc
jmp
add
or
fmuls
fidivs
pop
dec
sarl
clc
xor
push
int3
scas
lret
imul
sbb
movsl
or
add
or
lds
mov
movsb
repnz
stos
mov
cltd
pop
jo
push
mov
outsb
js
shlb
jmp
jecxz,pn
mov
sbb
push
or
hlt
adc
bound
stos
lods
and
aad
test
andl
sahf
mov
adc
bound
int3
cmp
mov
aad
inc
int
or
xchg
iret
cltd
out
sbbl
out
sbb
lds
iret
insb
add
rcr
cmp
repnz
xchg
pop
sub
aam
cmp
addb
in
outsb
dec
pop
push
cmc
shll
stc
clc
pop
lock
push
loopne
xchg
cs
push
adcl
push
jo
lret
popa
jnp
mov
and
dec
push
dec
pop
pop
push
jno
jp
shl
lds
insl
sub
pop
fwait
pop
xlat
sti
cmpsb
js
cmp
push
popa
jae
xchg
sbb
sbb
adc
aad
fst
add
lea
inc
scas
popf
sub
add
mov
push
je
add
or
test
addr16
sar
je
aad
sbb
xchg
mov
movb
pushl
push
inc
leave
mov
mov
lds
adc
sub
mov
popa
and
dec
popa
xor
push
fnstcw
leave
jns
int3
inc
loop
mov
mov
aas
jbe
sub
push
jp
fbstp
shll
sbb
bound
ds
rcrl
push
in
push
in
std
xor
mov
push
fmul
cmpsb
pop
push
in
sub
in
adc
jmp
sub
fadds
pushf
pop
shl
movl
xchg
adcb
sti
or
mov
inc
sbb
or
mov
ds
fwait
xor
push
jmp
and
test
xor
pop
mov
hlt
jb
lcall
mov
outsl
jecxz
aaa
rcrl
loopne
adc
inc
mov
mov
add
outsb
pop
adc
insb
push
pusha
loopne
mov
cmp
push
pop
sbb
sub
adc
or
inc
sub
xor
lods
fildll
popa
ds
in
arpl
xchg
sub
or
nop
es
fistl
movsl
pop
nop
cmp
xchg
andl
lcall
dec
lock
fidivrs
cmp
inc
mov
jp
addl
push
pop
in
inc
imul
je
push
lods
or
mov
add
pop
inc
mov
int3
loope
cs
jo
rorb
push
fs
lods
xlat
aad
xchg
adc
shll
jmp
scas
push
adc
repz
sbb
pop
xchg
sub
jle
sbb
mov
mov
mov
or
pusha
arpl
movq
inc
pusha
sti
cmpsb
mov
mov
sub
jno
repnz
adc
hlt
adc
push
sub
sub
ds
cmp
arpl
fwait
subl
cs
lcall
je
xor
imul
cmp
mov
mov
pop
cld
adc
xchg
mov
xchg
dec
int3
xor
pop
mov
lods
adc
andl
xchg
lods
outsl
inc
or
inc
idiv
inc
insb
xor
jae
push
leave
sub
mov
cli
push
js
or
aam
enter
lock
adc
xchg
jle
sbb
arpl
subl
sub
mov
into
pop
mov
bound
mov
mov
xchg
jns
adc
rcll
mov
or
adc
push
out
xchg
outsb
jl
jne
mov
gs
cmc
adc
out
xor
inc
mov
into
cmp
pop
rclb
ret
in
dec
out
xlat
push
dec
aaa
cmc
dec
pop
insl
outsl
mov
mov
adc
adc
or
es
pusha
mov
les
xor
int3
lds
pop
and
out
mov
loope
add
mov
mov
enter
into
mov
repz
rolb
fcomps
inc
aaa
leave
imul
mov
mov
loop
fldcw
mov
xor
jns
pop
pop
inc
loopne
es
jmp
pop
sbb
stos
hlt
push
cmp
adc
mov
mov
es
and
movsl
mov
lock
or
stos
in
mov
dec
out
jno
test
data16
fdivrs
es
mov
test
pop
add
mov
jle
dec
nop
stc
push
ss
scas
push
mov
xchg
addr16
xchg
outsl
mov
lods
jmp
mov
jmp
rclb
mov
dec
pop
jle
inc
frndint
out
rorb
jecxz
inc
repz
bound
cmp
movsl
lretw
aas
aad
or
repnz
jle
add
adc
es
aam
inc
adc
pop
mov
enter
rcrl
xchg
out
sub
sub
push
aas
das
ret
cmp
out
dec
fwait
dec
xor
ss
stos
mov
cmp
lea
xchg
inc
sub
lret
fcomi
mov
sub
nop
jmp
imul
xor
das
sti
out
shll
aaa
and
ret
jecxz
fistpl
or
or
cmpsl
or
mov
lret
sub
outsl
movsb
insb
imul
ja
popf
pop
fisubs
cmpb
rcrb
add
enter
mov
lret
scas
pop
movl
lahf
hlt
jg
jl
dec
stc
pop
xchg
roll
out
or
inc
cwtl
lret
ds
adc
fs
inc
in
xor
mov
push
push
xchg
lahf
sub
pusha
inc
aaa
addr16
jp
mov
stc
in
movsl
sbbb
mov
out
jl
ja
jmp
xlat
add
adc
jmp
cmc
leave
cmpsl
push
leave
pop
popf
cmpsl
cmpsl
or
adc
add
pop
xchg
lods
mov
inc
push
mov
fnstsw
aam
mov
fcmovne
mov
jg
mov
jp
fsubs
or
cmp
or
scas
ljmp
push
sbb
add
call
cltd
loop
es
je
bound
je
cmpsb
adc
mov
mov
call
imul
xor
into
and
adc
jae
and
ja
pop
cld
shlb
mov
dec
js
adc
jl
mov
jno
pop
dec
or
jl
jo
call
jl
cmp
cmp
cmc
inc
xchg
andl
test
push
pop
shll
lret
int3
call
sbbb
add
pop
sbb
mov
fdecstp
jmp
jnp
pavgw
lods
mov
adc
hlt
and
sub
jbe
enter
dec
jnp
mov
mov
in
fwait
scas
add
std
push
addb
mov
insl
jno
test
adc
add
scas
in
scas
xchg
mov
cmp
out
mov
sub
imull
mov
test
leave
or
aaa
fldt
sbb
push
arpl
add
xchg
sbb
mov
xlat
jp
outsl
shll
ret
xlat
inc
xchg
jl
mov
cmp
xor
push
dec
jb
jge
insl
jnp
cli
leave
loopne
test
xor
adc
xor
jge
mov
or
pop
mov
cltd
repz
sub
imul
mov
orl
fldcw
hlt
sub
push
add
sub
ljmp
adc
cmp
ds
jb
push
lock
pusha
mov
jecxz
aam
jg
rcrb
add
xlat
mov
dec
fadd
test
ret
repz
ret
fimull
xlat
test
cmp
sbb
dec
pop
and
xor
pop
sub
loop
int3
xchg
jp
cld
test
fisttpl
mov
dec
cmpsb
jg
cmp
add
ja
mov
adc
mov
or
push
xchg
mov
jmp
dec
jbe
dec
mov
pop
outsb
inc
shrb
jmp
popf
dec
add
xor
adc
aam
xor
inc
dec
cmp
cmpsl
decl
cmp
push
imul
into
cmp
xor
xor
ljmp
xor
js
mov
repz
daa
js
xlat
adc
shl
push
pop
sbb
cmc
push
shlb
into
mov
repnz
stc
sahf
clc
out
adc
mov
jecxz
cmpsl
mov
dec
ret
js
outsl
cmp
push
xor
gs
jge
lea
mov
inc
out
add
adc
ljmp
bound
lock
sbb
cltd
push
gs
mov
jecxz
inc
lret
dec
add
imul
aad
jno
pop
in
shrl
pop
jns
loope
sti
lock
loopne
loopne
out
cmp
pop
push
arpl
adc
mov
inc
and
out
movsl
xchg
xor
insl
xchg
xchg
cmc
adc
stc
jae
sub
stc
and
mov
adc
mov
inc
popf
cs
lods
cli
add
push
or
scas
popa
mov
sbb
call
cli
and
cmp
fcomi
dec
ret
dec
test
push
lret
push
add
jg
dec
pop
sub
data16
push
dec
inc
pop
scas
inc
mov
pop
jle
cli
sahf
sbb
arpl
sub
mov
ss
mov
lret
pop
sbb
bound
out
sbb
xchg
inc
aas
div
sub
push
cmp
cs
pusha
xchg
lret
push
push
adc
loope
pop
sub
insb
clc
or
cmp
ljmp
push
das
cltd
lods
dec
pop
push
jbe
adc
es
jb
dec
xchg
je
mov
or
sub
sbb
daa
jg
ror
xchg
adc
ror
mov
xor
mov
lret
mov
cmp
js
nop
popf
in
and
xchg
jmp
xor
out
cmp
stos
aas
into
mov
xor
add
in
jne
mov
pusha
and
sahf
popf
aas
addl
jp
mov
in
mov
mov
xchg
pop
or
iret
xchg
faddl
repnz
out
ljmp
jg
mov
fisttpll
add
sbb
mov
pop
dec
mov
xchg
in
mov
test
jmp
xchg
mov
push
aaa
jg
es
std
ds
loopne
rcrl
rcrl
adc
fistpll
adc
lock
mov
cmp
in
xchg
pushf
inc
aas
mov
aas
add
xor
xchg
push
rclb
and
jnp
cli
insb
xor
ljmp
int3
push
mov
sbb
roll
jmp
mov
and
rol
xchg
rclb
mov
or
dec
idivl
fldt
arpl
js
sarb
jbe
call
popf
arpl
nop
mov
clc
repnz
cltd
mov
xchg
ret
loope
pop
enter
and
aad
arpl
sub
out
outsb
repz
jae
pop
mov
mov
cmp
mov
test
stos
movsb
popf
or
mov
in
mov
cltd
mov
mov
stos
test
roll
iret
cmp
or
filds
push
rorb
aam
aad
xchg
fildl
pushl
int3
fisttps
jg
mov
sti
aas
or
movsb
repnz
add
mov
and
adc
add
mov
jl
jne
lods
jnp
mov
jl
mov
push
pop
int3
push
jae
xchg
mov
icebp
inc
jbe
mov
lods
sbb
cmpsb
lods
nop
cs
inc
stc
outsl
vcvtps2pd
dec
add
sub
test
adc
adc
subb
jne
insb
addr16
imull
or
icebp
fiaddl
testb
inc
negl
add
iret
mov
cmc
mov
add
movsl
data16
xchg
outsb
cmp
les
mov
or
hlt
scas
incl
stos
push
data16
data16
sub
imul
xor
sbb
aam
xlat
push
es
push
sbb
jo
inc
cmpsb
mov
sahf
movsb
pop
ret
rcl
mov
shrl
jb
mov
push
out
mov
mulb
scas
les
lea
mov
xor
sahf
dec
movsb
hlt
cmp
add
or
sbb
mov
int3
xchg
imul
cwtl
cmp
stos
dec
push
cmp
andb
mov
xor
popa
into
cwtl
mov
loop
or
sub
das
mov
outsl
mov
pop
dec
jmp
scas
fimull
dec
das
sarb
popa
pushf
jne
inc
jecxz
mov
and
xchg
popa
scas
aam
add
cs
pop
pushf
mov
mov
adc
cmp
ss
fcompl
fisttpll
pop
add
scas
incb
pusha
jmp
mov
cmp
xor
adc
fdivrl
into
scas
jmp
push
xchg
jecxz
or
push
in
push
sbb
jnp
and
movsl
ja
or
sbb
hlt
add
ljmp
mov
lds
jnp
or
test
push
jle
mov
jns
sub
push
cwtl
sarb
push
inc
sbb
and
cltd
or
sbb
jmp
dec
and
jbe
inc
push
cmp
out
sub
data16
fdivrs
cmp
jne
mov
jecxz
jo
jo
pop
xor
push
xor
les
addr16
mov
fildll
jne
mov
sahf
ljmp
in
mov
xchg
enter
mov
push
pop
in
aam
enter
rcrb
mov
and
jmp
inc
dec
mov
inc
je
cwtl
mov
sub
je
loope
and
sub
push
lds
jmp
mov
sti
fldl
push
adc
lret
or
adc
push
and
lret
lret
ret
addb
or
insb
cli
or
scas
test
testl
adc
jns
jnp
jle
call
popa
negb
test
dec
test
push
fistpll
nop
shll
sub
lods
ljmp
cmp
jle
jae
inc
add
and
xchg
push
mov
dec
and
sbb
dec
sub
shll
mov
loopne
add
fimull
jno
and
or
stc
leave
or
push
sub
jns
mov
add
xor
jo
push
dec
add
in
ret
xlat
cmpsl
xchg
fisubrl
nop
mov
fwait
jmp
in
sbb
push
pop
cli
jge
mov
mov
shrb
sub
ljmp
inc
mov
mov
imul
leave
xchg
mov
xchg
adc
push
inc
clc
les
dec
in
pop
cld
shll
ficoms
mov
in
sbb
pop
in
test
cmpb
jo
outsl
movsb
xchg
sbb
push
mov
fbstp
cmpsb
scas
mov
stc
test
ret
in
fwait
sub
loope
lcall
in
int
jmp
jae
aam
loop
insl
nop
cld
jmp
jae
or
pop
push
mov
loope
lea
jg
orl
or
cmpsb
aaa
push
push
ja
movsb
daa
and
xchg
inc
inc
or
mov
pushf
or
pop
mov
das
or
fs
in
inc
push
pusha
mov
inc
sbb
add
pop
in
ficomps
movsb
jb
dec
popf
stos
shlb
ret
sbb
ljmp
xor
xor
jb
sub
shr
mov
ffreep
aam
ljmp
push
adc
das
adc
xchg
stc
les
mov
dec
jge
insl
adc
adc
scas
shlb
sbb
loop
push
dec
cmp
imull
mov
push
sub
mov
inc
cmpsl
and
cmpsl
sbb
addr16
lods
push
out
mov
clc
nop
push
push
push
test
dec
les
mov
scas
addr16
sbb
sbbl
xlat
fdivs
hlt
xor
add
ret
xchg
scas
outsb
push
daa
enter
pop
mov
jle
ret
jns
pop
jae
loop
add
inc
cmp
rcll
add
cmp
jp
sbb
sti
xlat
dec
or
mov
push
movsl
iret
push
mov
push
sahf
mov
jmp
add
and
aaa
aaa
cld
arpl
xchg
sarl
out
xchg
cld
push
jbe
cmp
jnp
fidivs
testl
lret
mov
dec
clc
pushf
or
cmp
ja
out
iret
mov
mov
inc
addr16
mov
mov
ficoml
shl
out
mov
cmc
scas
xor
xchg
enter
pop
xchg
sbb
loop
mov
loop
mov
ret
sbb
dec
ret
inc
adc
adc
mov
push
aam
lcall
aad
ret
mov
cmp
dec
icebp
bound
xchg
punpckhwd
jp
and
enter
adc
xor
cmpsb
into
scas
lcall
adc
xor
jecxz
pop
push
adc
jg
ret
xor
pop
les
and
sahf
fucomip
pop
adc
fsub
jns
cmp
hlt
shlb
icebp
jbe
mov
and
sbb
stc
jecxz
scas
lods
push
mov
cmpsb
cmpsb
mov
xlat
push
cmpsb
push
xchg
adc
repnz
jbe
ret
addr16
out
push
xchg
mov
insb
mov
aas
fwait
add
mov
movsl
test
fistl
adc
stos
popa
xor
hlt
inc
adc
jnp
xlat
test
cltd
es
gs
pop
cmp
mull
cmp
out
mov
repnz
cmp
les
outsb
iret
xchg
mov
popa
or
sub
mov
lods
imul
bound
call
inc
push
jb
sub
mov
xchg
pop
jl
sbb
pop
repnz
cmc
fidivrl
pop
mov
adc
icebp
jp
mov
push
aad
in
jb
cs
stc
lds
fildl
sbb
or
data16
xchg
subl
shll
pop
adc
xor
unpcklps
outsb
js
lahf
jmp
mov
ret
xchg
or
jecxz
jo
filds
xchg
xchg
fstpt
jle
fmuls
in
jl
fdivl
int
fnstsw
jno
inc
or
add
inc
inc
shrb
or
dec
orb
pop
mov
jl
pop
jne
mov
and
cmp
dec
or
sbb
insl
movsl
jae
mov
cmpsb
and
shlb
dec
sbb
mov
adc
sbb
inc
cmc
sti
xchg
cmp
mov
into
xchg
stc
addb
jecxz
adc
sbb
insl
jo
aad
and
cli
mull
mov
cli
jmp
shll
dec
test
sbb
into
int3
cmp
hlt
mov
or
int
loop
dec
rcll
call
in
sub
add
pop
lret
rorb
dec
imul
stc
jae
xchg
sbb
jmp
mov
mov
mov
and
rcll
mov
xorb
inc
lods
pop
in
push
cmp
adc
dec
sub
pop
out
sbbb
mov
in
and
insl
push
icebp
popa
xchg
dec
andl
xor
adc
xchg
xchg
pop
negb
xlat
data16
adc
mov
test
pushf
sbb
out
jle
cltd
dec
ds
leave
cli
rolb
push
or
data16
inc
jo
jb
pop
pop
aas
pop
mov
xchg
out
jb
jae
mov
hlt
in
shll
dec
xor
push
ds
jnp
dec
subb
fsub
sbb
ret
out
and
cltd
and
and
sbb
jbe
lret
shll
inc
jecxz
shl
and
hlt
mulb
mov
add
addps
jl
jne
out
mov
sbb
clc
xor
inc
mov
cmpsl
mov
xchg
or
push
jns
push
mov
mov
je
sbbb
in
outsb
jge
int
lds
jp
push
sbb
aad
ret
pop
jge
xchg
xor
xor
sbb
leave
data16
push
data16
test
lock
adc
inc
iret
outsb
negl
frstor
aaa
inc
dec
pop
dec
lods
mov
xor
push
mov
and
stos
lcall
lods
mov
push
loope
fimull
out
push
mov
das
lret
insb
mov
add
sbb
xor
repz
dec
cmc
cmovp
movsb
and
sub
mov
loop
in
pop
test
aam
sbb
jle
xlat
cmp
or
clc
dec
or
rcll
jp
add
icebp
adcb
imul
sbb
sub
pop
and
add
lods
push
dec
mov
adc
sub
aaa
inc
cwtl
add
cli
mov
sub
inc
das
int3
fimull
insl
sahf
sub
dec
or
lds
fiaddl
lahf
dec
xlat
es
add
fmull
xchg
stos
out
je
cltd
movsl
lcall
xchg
push
and
popa
inc
pop
outsb
fisttpl
test
and
leave
jne
and
and
xlat
mov
sub
mov
dec
cmc
test
enter
and
aas
jge
inc
mov
cmp
inc
mov
ret
mov
test
call
hlt
mov
add
sub
cmp
ret
testb
cmp
jae
mov
repnz
pop
sub
into
je
xor
ljmp
jle
stc
ror
sbb
jge
xor
cmp
jg
loop,pn
mov
jo
pushf
mov
aas
mov
pop
ret
pop
insl
cmp
adc
sbb
sub
aam
rorl
mov
std
test
fstl
movsb
mov
add
adc
divl
adc
pushf
cld
mov
rorl
xchg
xchg
aam
hlt
and
adc
lock
pop
mov
jne
repnz
mov
mov
inc
pop
xor
scas
imul
mov
movsl
cmpsl
mov
lds
xchg
bound
arpl
mov
mov
lret
and
jmp
cmp
out
dec
xchg
mov
test
sahf
or
ljmp
ds
jo
in
fcomps
pusha
push
sbb
or
and
bound
test
loope
ret
pop
lock
jecxz
arpl
dec
outsl
adc
aam
lock
pop
jecxz
dec
fisttpll
fisttpl
push
jl
int3
push
add
lret
xor
mov
pop
out
leave
sbb
lods
or
ret
jnp
adc
inc
pusha
jmp
fstl
ret
add
pop
insl
jg
lahf
sbb
jb
jg
cmp
in
adc
cmpl
dec
gs
jmp
pop
and
je
cltd
inc
ds
add
dec
out
repnz
addb
mov
in
ret
inc
or
jle
sahf
movsb
mov
jne
daa
pushf
xor
mov
hlt
mov
or
outsb
repz
push
cmp
out
testl
in
pop
test
inc
pop
icebp
push
push
and
jg
in
dec
test
sbb
add
outsl
popf
addr16
lret
sub
add
cmp
sbb
jle
xor
rolb
pop
push
jmp
jo
mov
sbb
sti
ja
cltd
push
movsl
ja
mov
clc
jg
jl
pusha
sbb
pushf
das
dec
movsl
lret
cmpsl
in
dec
into
mov
xor
bound
popf
and
inc
adc
fiaddl
mov
xlat
aaa
xlat
sub
adc
scas
imul
rclb
stos
mov
mov
inc
pop
leave
cs
jb
mov
shlb
das
into
adc
cmc
lods
pop
pop
jb
mov
loop
pop
pop
sub
out
lcall
call
je
lcall
mov
pop
jbe
out
sbb
mov
pop
cmc
nop
rcr
push
lahf
pop
push
adc
pushf
ss
sbb
and
jecxz
enter
push
cltd
pop
std
mov
hlt
push
fmul
popf
ret
jne
lea
cmpl
mov
fs
cwtl
mov
and
push
mov
ds
pop
iret
cmpsb
mov
pop
add
dec
repnz
pop
int
iret
sbb
mov
xchg
ljmp
jae
xor
mov
nop
lahf
jmp
js
mov
aam
mov
sahf
faddl
fsubl
fimull
les
cmpsl
push
mov
scas
sbb
xchg
add
adc
cmp
xchg
and
lock
and
scas
or
xchg
dec
ljmp
negl
out
sbb
rorl
popa
shll
mull
jle
mov
mov
sbb
cmp
shll
pop
push
fs
add
sub
push
das
xchg
jns
stos
and
dec
jbe
cs
push
pop
xchg
pop
stos
push
cmp
lods
icebp
pop
pop
pop
mov
jns
or
adc
pusha
dec
cmpsb
xchg
je
adc
into
movsb
movsl
push
addb
cwtl
mov
idiv
mov
xchg
in
inc
test
sahf
push
rcrb
cmp
lods
bound
dec
push
or
ret
test
or
add
out
xchg
std
jecxz
jo
dec
fst
adc
inc
push
add
cmp
and
es
mov
jae
fisttpl
jmp
mov
xchg
jo
or
xor
arpl
fwait
stos
inc
popf
jbe
shrb
pop
adc
sbb
notl
jb
fdivl
sub
sbb
dec
aaa
aad
out
add
cmp
push
sbbl
dec
nop
xchg
push
adc
cwtl
xchg
dec
add
ja
jl
iret
ret
xchg
sub
sbb
jge
scas
sub
rcl
or
insl
mov
mov
lret
test
mov
mull
ja
mov
mov
stc
push
test
inc
or
fucomip
push
add
out
push
pop
adc
shlb
mov
lds
mov
push
ja
cmp
repnz
cwtl
xor
loop
jmp
or
shll
fisubrs
lods
adc
imulb
pop
sti
mov
sti
in
call
loopne
loop
jae
dec
mov
mov
enter
dec
adc
imul
test
popa
cmp
repnz
xchg
mov
out
and
in
xchg
andl
leave
stc
aam
roll
push
fadds
cmp
out
cli
fmuls
jno
add
fwait
nop
cmc
stc
inc
dec
cltd
jno,pt
mov
jne
add
push
jb
cmp
cli
popa
sub
testb
jbe
shlb
cld
fs
pop
xchg
mov
push
sub
rclb
dec
aaa
mov
mov
pushf
push
mov
or
jmp
push
aas
icebp
inc
mov
mov
mov
cwtl
stos
lcall
pop
fwait
mov
aas
test
xor
lret
xor
aam
negl
sub
push
push
mov
push
lods
scas
popa
in
xchg
push
lret
movsl
pop
cmp
cli
je
xchg
or
xchg
lds
clc
xor
mulb
shl
mov
fidivrs
and
inc
dec
xor
sub
pop
push
rorl
out
mov
popf
enter
jb
fwait
adc
adcl
ret
sbb
lods
das
popa
leave
mov
lds
incl
int
sahf
pop
dec
nop
push
je
loop
and
mov
adc
xrelease
pushf
pop
or
mov
jg
jnp
sub
mov
sub
sub
push
and
dec
sub
sbb
sarl
mov
ljmp
pop
stos
push
mov
mov
jne
ljmp
mov
jg
xchg
loope
jg
sbb
call
mov
nop
push
and
lahf
fistl
mov
dec
xor
fcompl
icebp
adc
lea
pop
jle
mov
fwait
push
mov
xlat
xchg
divb
mov
and
sbb
fwait
cmpsb
jl
jg
test
adc
scas
xchg
hlt
push
adc
mov
push
pop
aam
pop
push
xchg
test
sub
in
and
push
sub
mov
inc
sar
aam
mov
mov
stc
fisttpl
cmpsb
jecxz
xor
pop
and
lods
push
in
iret
sbb
jg
dec
xrelease
jle
mov
xchg
leave
aam
fsubrp
push
dec
and
jae
mov
negb
inc
cmpsl
pushf
jg
xor
and
mov
and
cmpsb
pop
add
xchg
add
ja
add
mov
popf
dec
loope
and
dec
xchg
mov
out
lods
and
cltd
and
push
push
xchg
mov
movsl
pop
loope
fcoms
cmp
xchg
jb
mov
dec
lods
or
sbbb
pop
in
and
lea
add
add
out
lcall
adc
mov
mov
test
pop
sub
into
pop
shrb
shlb
mov
and
adc
cli
orl
jecxz
insl
adc
sar
rolb
inc
push
or
pop
push
pop
push
or
test
dec
loop
pop
int3
pop
jle
add
pop
pop
shlb
lcall
mov
lahf
inc
es
inc
mov
fsub
test
dec
sub
cmp
inc
fs
ljmp
push
xchg
sub
cld
and
pop
aaa
fwait
push
and
data16
in
jnp
ss
push
sahf
sar
outsl
les
lahf
xor
mov
adc
and
dec
push
or
adc
ds
sbb
iret
std
mov
or
enter
sbb
hlt
in
daa
ds
aad
and
mov
jmp
pushf
adc
and
dec
pop
and
dec
mov
mov
dec
addr16
out
sahf
pop
cld
cmp
cwtl
dec
pushf
pop
sub
add
sahf
xlat
scas
xchg
shr
push
clc
mov
cli
cmp
mov
scas
and
jns
and
mov
mov
xlat
sbb
ret
cmp
add
and
fwait
call
lods
nop
push
jns
hlt
rcrl
pop
sub
xchg
jp
jecxz
cmp
adc
lret
jg
inc
inc
aam
xchg
sti
xchg
cmp
push
inc
jge
dec
jbe
dec
into
les
call
push
je
or
cs
scas
shl
add
xlat
int
xchg
fwait
rcrl
mov
fcomi
or
push
or
test
sti
cmp
jbe
xchg
jno
dec
orl
or
mov
aas
and
cmp
aad
lock
movsb
jp
icebp
or
sbb
adc
push
mov
jle
inc
hlt
hlt
das
pop
sub
cmp
jb
ljmp
add
pop
test
pop
dec
cmpsl
pop
lods
aaa
nop
je
rorb
pop
mov
sub
jmp
xor
lods
ljmp
cli
arpl
cmp
sbb
subb
sbb
add
lahf
mov
sahf
mov
adc
sub
and
mov
xstore-rng
cmpsl
sbbl
scas
lret
inc
mov
mov
loop
cmp
jns
mov
out
mov
das
cmpsb
test
mov
fs
or
loopne
test
pop
xchg
movsb
out
lahf
in
mov
iret
and
cmp
rolb
das
es
mov
and
mov
cmpsl
int
fs
dec
lcall
xor
push
jne
sbb
fs
fdivrs
pop
sar
cltd
jnp
adc
adc
lods
fcos
mov
xchg
or
pusha
ficoml
inc
pop
dec
dec
push
xchg
cmp
orl
pop
mov
adc
idivl
push
and
or
xor
movups
es
bound
dec
test
movsl
sti
dec
daa
jnp
out
mulb
pushf
mov
or
fwait
mov
inc
jne
scas
lahf
dec
fs
movsb
mov
jae
pop
or
sbb
es
cmp
maskmovq
testl
cmpsl
inc
and
or
jbe
rcl
pop
jae
gs
std
ret
iret
xchg
push
or
pushf
daa
js
mov
xchg
test
mov
sbb
out
jp
aam
dec
xchg
pop
outsl
or
je
dec
repnz
mov
adc
sub
mov
xchg
mov
push
in
es
jle
les
xchg
imul
cli
outsb
xchg
daa
jp
out
jae
adc
es
push
pushf
and
push
and
pop
aaa
test
stos
shl
jno
mov
in
sub
stc
test
add
mov
push
mov
sub
cs
fdivr
sbb
mov
dec
sti
nopl
arpl
push
mov
xchg
mov
roll
mov
test
iret
sbb
stos
add
cs
mov
sub
inc
into
pushf
xlat
xor
dec
divb
cmp
out
lods
data16
and
or
rolb
cmpl
out
jmp
push
shll
xchg
pop
mov
jge
bswap
add
sub
in
fistpl
mov
call
ljmp
and
sub
dec
fisubl
mov
mov
mov
mov
mov
push
stc
and
and
mov
jg
pop
and
cmp
jg
cmp
sub
dec
jnp
pop
rorl
jle
sar
rol
scas
addr16
cli
pop
mov
xchg
add
push
cmp
cs
aaa
mov
lcall
pop
fldt
xchg
aaa
jae
icebp
sti
imul
adc
fsubrl
xchg
mov
pop
out
cmp
push
adc
or
in
dec
andb
inc
test
push
movsl
mov
pop
in
and
lret
rolb
out
cli
clc
ficompl
xchg
lods
adc
jle
add
mov
xchg
push
fistpl
push
mov
mov
xchg
loope
out
mov
out
jb
inc
sub
mov
mov
lods
and
dec
adc
and
testb
cmp
mov
out
pop
scas
shl
out
inc
mov
and
pop
adcl
fnsave
mov
popa
leave
lods
hlt
xor
mov
gs
cmp
push
adc
sbb
xchg
mov
push
or
lds
pop
out
mov
cmp
inc
movsb
insl
loopne
adc
arpl
jle
and
lret
add
and
xchg
cwtl
xchg
ret
dec
addl
cmp
cmp
ljmp
xlat
idivb
jmp
jae
loopne
xor
fdivrl
lahf
int
movups
mov
and
fsubl
lds
repz
jns
mov
in
adc
aam
cld
push
shlb
adc
or
hlt
push
mov
push
inc
sbb
xor
mov
fs
pop
xchg
imul
insl
mov
pop
sahf
mov
iret
inc
fidivl
xchg
lret
dec
movsb
xchg
sbb
das
cmpsb
pusha
xchg
sti
sbb
imul
movsb
jmp
pop
xchg
xor
dec
cmp
outsb
in
movsb
outsb
icebp
jp
adc
scas
rcrl
inc
dec
ret
mov
out
push
out
inc
inc
push
ds
mov
data16
out
adc
insb
mov
mov
rcl
in
repnz
movsb
insb
int3
cmp
push
js
mov
shr
arpl
jp
and
add
iret
xlat
cmp
or
xor
pop
push
sti
filds
or
int
cs
pop
js
addr16
jp
mov
inc
dec
and
lcall
jo
aas
pop
icebp
jb,pt
mov
dec
ds
cmpsb
dec
sbb
cli
outsl
stc
jne
dec
push
mov
mulb
mov
lods
loop
mov
lods
push
mov
loopne
mov
pop
insl
in
sub
repz
jne
adc
inc
jl
sub
pop
pop
loope
js
push
adcl
inc
icebp
nop
adc
and
frstor
je
fnstenv
ja
mov
lret
out
into
scas
mov
dec
icebp
repnz
xor
ljmp
aaa
pusha
push
or
mov
sub
pop
ret
xchg
outsb
pop
inc
fnsetpm(287
inc
sbb
sub
imul
sahf
popa
scas
mov
in
enter
je
inc
xlat
mov
mov
xor
mov
xchg
fcmovne
or
jb
sbb
sub
inc
paddb
mov
icebp
cld
adc
aad
xlat
jge
lret
mov
jecxz
inc
movsb
mov
loop
dec
jge
test
adcl
rol
mov
mov
xchg
push
mov
daa
sti
int3
sub
fs
adc
test
push
inc
pop
xchg
mov
mov
mov
roll
or
jge
pop
rcrl
xor
pop
or
paddq
imul
push
fiadds
inc
lds
mov
sub
mov
push
sub
sbb
in
or
test
adc
pop
jmp
mov
ja
lcall
addr16
and
daa
inc
in
stos
imul
arpl
xchg
in
lcall
fs
jns
lods
push
out
mov
pop
es
sbb
popa
jl
sarb
push
push
std
mov
testl
icebp
sahf
push
cmp
and
jmp
lcall
mov
out
gs
cld
arpl
add
sbb
cmp
insb
ljmp
popa
cmpsl
pusha
jbe
and
and
shl
sub
sbb
lds
fs
cmpsl
fildll
xor
jp
scas
icebp
mov
inc
xor
cwtl
xor
jge
or
pushf
adc
insl
movsl
mov
int3
mov
add
inc
rcll
or
xor
push
insl
bound
into
and
inc
int3
bound
xor
shll
or
sti
aaa
push
cmpsb
adc
jmp
in
or
leave
icebp
jmp
aam
pop
nop
jge
fmull
das
shrb
sti
mov
cmp
lcall
aam
imulb
rcr
adcb
xchg
adc
push
or
xor
xor
push
sahf
mov
repnz
iret
inc
pop
imul
jb
cwtl
test
outsl
add
movsb
push
mov
mov
xchg
adc
xor
ljmp
mov
ret
pop
hlt
repnz
shlb
ret
scas
dec
mov
in
fstp
sub
test
mov
xor
fistpl
loop
xchg
jmp
pop
insb
inc
stos
cmpsb
push
sbb
inc
mov
inc
enter
iret
xor
fdivs
pop
mov
sub
lods
test
fmull
xor
push
test
imul
pop
movsl
add
mov
sarl
frstor
inc
sti
insb
pop
jno
mov
call
stos
cs
dec
insl
add
bound
xchg
pop
adcb
xchg
pop
rorl
cltd
add
pop
xchg
ret
push
sub
mov
stos
ret
icebp
nop
loopne
mov
lods
sbb
arpl
test
dec
sbb
sbb
sub
mov
sub
sahf
inc
jecxz
out
call
inc
lods
loopne
outsb
xor
sbb
push
mov
sub
mov
mov
cli
add
cs
cwtl
sbb
cmp
mov
repnz
clc
add
gs
loope
and
xor
es
adc
inc
arpl
icebp
loope
aad
pop
push
jl
lahf
pushl
xchg
adc
dec
and
sub
mov
mov
cld
in
sahf
jmp
pop
mov
movb
mov
cmp
and
xchg
fdivp
icebp
dec
adc
xor
dec
test
or
cmp
inc
nop
negb
xlat
imulb
pop
pop
fs
lea
pop
cmp
push
lods
lcall
movsl
je
xorl
fidivrs
std
xor
arpl
rorl
push
dec
push
inc
int3
sub
ret
scas
inc
push
jns
adc
repnz
movsl
and
repz
mov
xor
jp
lret
mov
mov
ja
pop
jb
imul
lcall
or
popf
and
bound
mov
mov
pop
sbb
xchg
xchg
adc
mov
push
imul
es
ret
fildll
cmp
xchg
cwtl
push
fdiv
cltd
repz
out
sbb
dec
sub
or
leave
ret
leave
mov
xor
mov
push
test
mov
arpl
mov
sar
add
inc
out
ficoms
dec
loop
sbb
cmp
and
test
mov
enter
rcr
sbb
aas
fcoml
push
jno
jmp
fnstenv
adc
jo
mov
mov
cmp
dec
mov
inc
push
mov
xor
out
jmp
mov
jns
jb
sbb
push
fwait
xchg
mov
jo
and
jae
pop
push
pushf
adc
in
roll
ss
jo
mov
xchg
inc
and
mov
sub
push
xchg
test
popa
int3
dec
cld
mov
fwait
pushf
repnz
les
nop
inc
pop
into
push
leave
into
add
repnz
inc
sub
sub
shrl
lahf
jbe
push
sbb
mov
cmc
in
aad
mov
add
xlat
sbb
stos
jp
daa
mov
pop
inc
outsl
subb
dec
call
mov
sub
popf
pushf
and
pop
data16
adc
adc
repz
inc
mov
push
ds
pop
cs
sbb
mov
push
mov
push
jle
fstp
out
subl
outsb
adcb
adc
sub
nopl
adc
push
test
mov
and
test
xchg
or
lods
int
js
add
fisubrs
es
insl
movsl
push
inc
jno
in
dec
mov
jo
or
ljmp
sbb
sub
add
sti
fwait
xchg
lahf
xchg
shll
out
testb
push
fwait
mov
mov
or
xchg
jae
stc
sub
dec
fs
adc
dec
dec
cmp
fistpl
lds
pop
bound
ret
fstpt
xlat
or
insl
mov
lods
cmp
shrl
mov
jb
ret
fmulp
adc
les
cld
out
or
sbb
jle
pop
loopne
sbb
add
xchg
int
push
push
sahf
addr16
xchg
lds
aam
fwait
popa
sar
or
out
mov
aaa
daa
test
mov
xchg
xchg
xchg
jg
push
pop
or
pop
mov
mov
xorl
cmp
cmp
inc
call
and
outsb
fstpt
or
cmp
ret
push
lahf
scas
aam
fldenv
or
and
lcall
lret
repnz
push
stos
insl
add
mov
aad
adc
outsb
inc
xchg
shlb
xchg
stos
sub
hlt
stos
es
pusha
ret
xchg
add
xchg
jo
mov
loope
cmp
pop
imul
mov
dec
inc
xor
lea
cli
mov
ljmp
sub
cs
add
or
outsl
arpl
aas
adc
mov
pop
popa
and
add
insb
enter
or
xchg
add
mov
fisubrl
les
mov
push
pop
mov
insl
xor
dec
stos
fldl2t
add
sub
and
jno
inc
test
jb
lods
push
xor
test
mov
outsl
inc
push
sub
sub
jns
mov
xor
mov
loope
adc
scas
push
mov
inc
inc
sub
lea
dec
dec
pop
jno
scas
xorb
into
inc
cmpsb
mov
rcrl
xor
movsb
push
out
out
jmp
aaa
sub
pushf
pop
aam
outsb
shl
or
mov
testl
cld
push
sbb
inc
scas
cmc
out
sbb
jge
xchg
aas
jge
or
adc
pushf
jns
cmp
pop
sahf
jmp
cmp
sahf
xchg
mov
dec
sbb
mov
fwait
decb
lea
rclb
or
loop
es
hlt
adc
and
std
out
xchg
or
vxorps
inc
daa
add
sbb
dec
lahf
xchg
inc
adc
push
push
jb
push
push
adc
cmp
mov
movsl
sbb
flds
dec
fiadds
clc
or
stos
cmpl
or
gs
add
inc
push
sub
stos
push
ret
stos
dec
stos
idivb
pop
sbb
adcl
xchg
jb
dec
int3
in
in
inc
sub
add
inc
xchg
std
or
add
andl
call
cmp
ret
dec
lcall
dec
pop
gs
and
mov
pop
lods
jl
sbbl
fs
jb
hlt
cli
shlb
subl
push
popa
jnp
cmpsl
mov
fmull
pop
cli
cmpsl
test
pop
dec
adc
xchg
adc
aas
sbb
addb
cwtl
insb
repz
into
lds
add
ret
xor
pop
jle
add
enter
dec
mov
jno,pt
in
imul
pop
fwait
fs
push
push
jle
movsl
jne
cmpb
mov
outsl
add
jno
aaa
gs
test
out
in
mov
xor
push
pop
cmp
xchg
aam
xor
mov
mov
insl
xor
mov
inc
in
xor
std
add
cmpsl
mov
js
dec
mov
nop
testb
icebp
repnz
adc
fisubrs
and
in
and
dec
xchg
sbb
outsb
enter
sbb
insl
repz
push
push
leave
push
jo
cmp
lds
imul
in
pop
lea
pop
roll
xor
inc
aad
jle
jmp
mov
mov
push
mov
jl
mov
xor
push
mov
fisubrl
enter
xchg
push
cwtl
and
idivb
aad
scas
repnz
cmpb
lret
lea
and
adc
nop
mov
lods
cmp
xor
mov
sbb
test
xor
push
mov
cmp
jno
mov
sub
jmp
cmp
mov
int3
das
pop
repz
mov
movb
mov
inc
inc
fs
cmp
mov
xchg
shlb
inc
insb
sub
add
leave
out
ja
push
aas
data16
add
adc
push
push
adc
jg
jmp
repz
sbb
icebp
cmp
fwait
lock
sub
jl
popf
aam
rorb
cmp
xchg
lret
movsl
fcoms
cmpsl
add
das
jle
push
fists
add
sub
shlb
pop
leave
push
aaa
sbb
mov
imull
or
push
in
and
add
test
incb
pop
in
cmpl
in
mov
jne
pusha
add
fnstcw
sbb
dec
cmp
popa
sub
push
lahf
dec
fsin
int
int
stos
test
ficoml
sub
mov
cmp
imul
arpl
mov
insl
mov
aam
ret
inc
movsb
popf
inc
arpl
sub
jle
add
adc
mov
xchg
fnstsw
loope
loopne
sub
leave
sbb
lds
adc
rorb
sbb
or
aaa
hlt
stos
repz
push
js
daa
pop
repnz
mov
jae
cmp
idiv
mov
and
popl
subb
push
push
fisubrs
cld
sbb
xchg
inc
imul
scas
hlt
inc
cltd
push
arpl
dec
ret
lds
and
jae
shrl
sahf
sub
adc
inc
mov
iret
inc
dec
mov
xor
mov
xor
add
mov
leave
test
pushf
jmp
adc
or
cmp
cltd
jmp
data16
jle
and
sbb
xchg
mov
ja
outsl
jb
rorb
add
out
push
add
ljmp
mov
clc
test
sti
pop
sbb
cmp
jl
out
or
iret
sub
sub
and
sbb
aas
pop
pop
adc
xor
pop
dec
mov
xorb
jmp
jg
push
sahf
or
push
test
aad
addr16
or
fildll
cs
or
and
sbb
movsl
psubd
pop
cmp
sbbb
jge
cld
mov
ret
add
adc
in
ret
in
mov
leave
jl
mov
repnz
movsl
ja
mov
arpl
push
sbb
push
mov
jl
nop
inc
cmp
cs
dec
mov
in
cmpl
xor
jae
add
scas
aam
movsl
out
adc
imul
pop
andl
mov
shrb
fsubs
and
into
add
enter
mov
fsts
dec
out
iret
psubb
and
adc
push
dec
int3
push
arpl
sti
mov
roll
fisttpll
arpl
sbb
cmp
iret
push
cwtl
fsubp
jnp
push
adc
cmpl
clc
inc
orb
inc
lods
xchg
ret
es
inc
lcall
jnp
or
aas
shlb
pop
adc
imul
testl
jb
fiadds
mov
mov
aad
add
daa
fcom
mov
ljmp
clc
insb
test
mov
and
xchg
and
popf
xchg
add
adc
test
or
insb
cmp
cmpsl
and
xor
mov
sbb
xchg
aam
mov
sbb
out
dec
inc
xor
lods
testl
dec
call
jge
mov
dec
push
lock
sbb
sarl
lods
add
data16
fisubrl
dec
and
shll
addl
xor
xor
insb
int3
adc
and
mov
sbb
mov
daa
and
ret
lahf
call
push
orl
rcrb
stos
inc
xchg
inc
das
xchg
push
push
aad
scas
in
jo
and
xchg
add
loopne
icebp
xor
sbb
stc
mov
mov
jle
popf
jp
cmpsl
add
jmp
dec
mov
daa
or
xor
sub
xchg
dec
add
test
pop
adc
and
sarl
lock
in
pop
sub
mov
popf
hlt
xchg
vpackssdw
sbb
jp
andl
scas
in
ficomps
mov
jg
daa
push
and
pop
pop
xor
stos
adcb
imul
sub
xor
inc
ljmp
and
rclb
jae
in
arpl
push
jecxz
movsl
test
in
repz
stc
daa
pop
ljmp
adc
push
mov
call
cmpsb
adc
outsb
dec
push
arpl
or
fisubrl
add
jmp
cmp
pop
xchg
sub
inc
cmc
in
pushf
push
mov
xchg
mov
in
mov
rolb
sub
rolb
push
inc
fdivs
mov
xor
inc
jo
push
xchg
xchg
lea
sub
inc
pop
xchg
lods
ret
js
lea
mov
xchg
push
lcall
stos
dec
fcmovnb
and
pop
test
lock
adc
repz
adc
imull
push
nop
std
std
mov
pop
fwait
out
sub
add
imull
cmp
ret
add
mov
test
adc
xchg
dec
in
push
push
daa
pusha
jne
push
lret
lds
lods
bound
ret
fdivs
mov
inc
xor
rcll
test
sbb
rolb
mov
negl
lret
imul
lock
inc
dec
sahf
cwtl
push
sar
xchg
xor
in
xchg
scas
xchg
mov
rcl
cmp
cmp
pusha
sahf
pop
loope
test
sub
or
dec
outsb
lds
out
cmp
xor
mov
xor
loope
cmp
cli
and
into
pop
rcrb
ficompl
mov
adc
test
outsl
push
fdivl
pushf
sahf
adc
lahf
sub
mov
shrl
pop
clc
dec
int
iret
iret
out
das
hlt
rclb
adc
dec
pop
enter
mov
scas
jb
mov
out
or
mov
cwtl
mov
pop
dec
ja
in
add
xchg
ret
pop
sub
dec
movsb
or
fisttps
pop
jno
ds
or
ret
bnd
mov
push
cmp
jle
mov
leave
lea
test
mov
adc
inc
imul
xchg
or
xchg
mov
fisubl
dec
cmp
pop
ss
mov
add
jns
pop
inc
scas
xor
pop
aam
aaa
mov
je
movsl
jae
outsl
ljmp
cltd
jl
pushf
fiadds
cmp
cmp
add
inc
sub
add
push
lea
pop
jecxz
sarb
test
imul
mov
mov
lods
sub
cmp
pop
scas
mov
outsb
aad
pop
enter
xchg
repz
psadbw
dec
mov
cmp
cs
les
dec
mov
test
lods
sarl
inc
test
in
push
or
mov
jb
pop
sbb
cli
clc
xor
ds
xchg
loop
rclb
pusha
insb
pop
fldenv
and
shrl
sbb
mov
jns
push
jae
and
fsubl
mov
jle
inc
shrb
sbb
shrb
icebp
cmpsl
jns
mov
or
add
mov
push
inc
sbb
jne
cltd
pop
adc
sbb
lret
inc
jno
test
xor
imul
into
and
push
movsb
add
stc
mov
rol
insl
mov
addl
xchg
iret
leave
loopne
mov
xchg
mov
cmp
or
roll
fdiv
imul
push
movsb
and
call
cmp
or
mov
scas
push
sbb
nop
lret
sub
sub
xor
movsb
sarb
pop
add
xchg
je
jne
iret
in
insl
mov
lds
aas
pop
or
push
sub
xchg
lods
sti
mov
pop
in
jmp
scas
cs
cmp
call
test
pop
iret
lcall
sub
out
arpl
clc
cli
das
sti
jle
xor
adc
roll
adc
mov
je
dec
js
gs
fnstcw
clc
mov
sub
in
outsb
push
pop
mov
out
xchg
out
sub
jecxz
jne
adc
push
push
xor
adc
sbb
xlat
mov
mov
mov
fidivs
dec
shl
cmc
and
mov
push
das
aas
mov
sub
scas
shl
push
cmpsl
cmp
and
xor
es
out
jecxz
adc
mov
xchg
mov
out
pusha
ret
arpl
dec
test
jecxz
mov
cmpsb
push
cmp
adc
sbb
add
inc
andl
out
decl
push
and
push
pop
sbb
inc
push
lock
je
pop
or
inc
cmp
sarb
sbb
div
repnz
std
push
pop
xor
xchg
outsl
pop
mov
call
test
cmpsl
stos
cmp
jne
test
movb
scas
xor
icebp
arpl
and
std
sbb
add
mov
cmp
stc
dec
jno
sbb
je
and
pop
jns
push
cmp
inc
sti
sbb
or
cmp
cld
push
pop
ficomps
imul
sub
mov
cmpsl
mov
fadd
jns
push
shr
mov
or
fisubs
adc
mov
cld
lods
pop
add
push
and
inc
push
movsb
repz
mov
data16
jg
mov
cltd
int
xorl
jmp
jbe
aad
or
sbb
hlt
mov
push
xchg
sar
hlt
and
arpl
lret
xchg
inc
lds
add
xchg
mov
cmp
arpl
sahf
mov
and
mov
pusha
into
dec
or
icebp
test
inc
fcmovu
outsl
push
movsb
aaa
in
clc
jae
in
or
mov
stos
lods
and
loop
adc
xlat
mov
mov
lcall
cmp
call
cmpsb
mov
test
mov
in
or
lahf
pop
dec
test
mov
out
push
fisubs
dec
rcrb
xor
sbb
dec
mov
push
adc
idivl
popf
dec
fmull
jae
ja
dec
mov
jl
sub
xchg
hlt
pcmpgtd
mov
or
or
fildll
roll
mov
sub
jl
mov
cmp
cmp
xor
insb
rcrl
lods
jne
xor
pop
pop
in
or
push
outsl
aad
loop
inc
xor
call
bound
or
pop
or
jp
mov
nop
loope
in
movl
ljmp
sbb
jnp
psraw
mov
xor
push
icebp
cld
movsb
pop
outsl
sarb
daa
fdiv
sbb
cli
ret
mov
stos
or
pop
mov
jns
add
add
jo
jne
jae
mov
aam
popa
or
inc
mov
fcoml
cltd
xor
jae
outsl
daa
popa
lock
pop
or
ret
or
gs
sub
and
sbb
jo
or
and
cmpsl
push
rol
pop
jne
or
test
mov
mov
mov
jns
mov
jge
mov
sub
mov
cmp
rcr
out
int
pop
xor
mulb
movsl
inc
lea
in
add
mov
enter
dec
enter
rcrb
push
aam
jecxz
scas
mov
push
jl
sbbl
rcr
mov
jnp
jmp
push
xchg
jae
cmp
adc
jle
dec
test
ret
cmpsl
mov
and
pop
adc
xchg
mov
test
sarb
dec
xchg
xchg
nop
add
mov
js
inc
ffree
jns
xor
mov
out
cmp
out
cmp
stos
outsl
fwait
cmp
imul
outsl
fwait
cld
jl
pop
cli
mov
into
jmp
aad
cmp
adcb
aad
ljmp
xor
enter
leave
mov
test
add
mov
roll
xchg
or
xchg
negl
pop
sbb
jno
mov
push
int
movsb
stos
les
cmp
repz
or
fucomip
testl
inc
stc
xorl
adc
mov
in
jecxz
adc
jmpw
jecxz
fsubrs
cmp
dec
cli
inc
in
fs
jle
dec
mov
incb
arpl
ss
popf
lahf
aaa
imul
scas
popf
lret
lods
cmpsb
dec
sub
outsb
mov
sub
insb
pop
cli
scas
stc
dec
push
pop
cs
leave
insb
out
mov
sti
ja
adc
outsl
imul
inc
cmpsl
pop
lods
ja
sub
mov
sti
ret
cs
stos
mov
in
outsb
fisttps
pop
jle
scas
int
xchg
sub
push
sbb
pop
jne
xchg
or
cmp
std
add
ds
enter
fiadds
jne
pop
data16
xor
jl
or
lret
or
rclb
inc
cmp
clc
addr16
mov
js
in
fwait
cltd
les
sub
sti
popf
inc
loope
push
mov
int3
jmp
push
xchg
or
xchg
insb
mov
pop
dec
sbb
ljmp
aas
sub
inc
push
ficompl
sbb
xor
ljmp
mov
mov
ret
xchg
call
sarb
repnz
mov
jge
enter
iret
pop
inc
mov
aaa
cwtl
out
mov
add
xchg
inc
jb
popf
pop
sbb
cs
clc
movsl
and
popa
mov
pop
add
sbb
outsb
add
sbb
push
movsl
cmp
xchg
xor
xor
add
mov
jle
push
ret
mov
sub
stos
stos
cmpsl
mov
scas
or
imul
jg
inc
cmp
jmp
popf
out
rcpps
sub
into
mov
es
xor
or
arpl
in
pushf
jmp
sub
mov
push
arpl
fldl
scas
in
mov
push
into
int3
out
jge
pop
mov
lcall
sub
hlt
fcmovnu
xchg
int3
sbb
push
xchg
pop
bound
pop
add
lcall
mov
cmpsb
mov
lock
sbb
mov
outsb
movsl
cwtl
cmp
out
xlat
stos
cmp
sbbb
pop
or
mov
nop
sub
mov
mov
dec
mov
cmp
and
or
imulb
sbb
pusha
xchg
push
popa
cwtl
int3
adc
ds
cmp
jo
mov
push
jmp
add
jge
popa
push
es
and
loopne
rcrb
popl
fistpl
cs
mov
mov
jno
mov
subl
je
in
mov
popaw
rcr
and
push
int3
xor
dec
xchg
insl
xor
inc
inc
mov
scas
mov
xlat
lods
cli
or
pop
pusha
xchg
nop
xor
subb
ror
xchg
push
mov
hlt
aam
lahf
int3
dec
add
rclb
insb
subb
int3
out
dec
mov
cmp
push
cli
xchg
cld
adc
mov
int
and
add
pop
push
jl
test
or
fwait
jb
inc
shl
cmpsb
stc
add
mov
aam
movsl
jl
out
aaa
add
cmp
lds
and
inc
test
cltd
in
xchg
xchg
repnz
xchg
adc
jb
lock
xlat
mov
sbb
sbbl
stos
stos
loop
aaa
mov
adc
push
and
and
loope
jno
add
subb
sbb
push
in
lcall
jbe
pusha
imulb
data16
pushf
xchg
or
pusha
stc
xor
fnsave
mov
aas
push
mov
inc
sub
add
imul
nop
ds
sub
jl
push
adc
and
and
sub
cli
xor
icebp
xchg
push
test
fldt
push
jl
mov
push
mov
cmpsl
cmpsb
insl
and
scas
and
and
das
mov
ret
outsl
aas
mov
fldcw
add
ss
adc
or
icebp
std
movsl
add
cmpsl
cltd
and
jmp
dec
cltd
inc
mov
push
hlt
and
out
sub
xchg
shlb
das
or
hlt
push
xor
jnp
rorl
popf
xchg
in
push
insb
outsl
inc
ret
les
sub
adc
mov
stos
push
rcrb
sub
daa
xor
pop
hlt
loope
cli
jecxz
in
call
gs
fildl
je
push
mov
jbe
and
cmp
or
in
test
xchg
jae
push
xor
ja
or
in
das
push
stc
out
push
stos
mov
test
cmpsb
sbb
add
ds
push
jle
stc
mov
dec
cmp
xchg
mov
inc
sbb
lret
incb
jge
test
jl
lods
ret
fs
jg
xchg
call
int
mov
jecxz
fdivrs
jno
mov
lcall
add
or
push
icebp
or
jp
lods
data16
mov
jo
movsl
add
sahf
cld
pop
xor
cmp
xor
insl
sarb
hlt
push
adc
cmp
movsl
pusha
dec
add
into
mov
push
clc
in
in
stos
jmp
add
int3
call
cmp
mov
movsl
cmp
jb
xlat
pop
test
mov
xchg
mov
jns
or
and
push
xchg
fstps
push
aas
xor
sub
and
data16
or
ret
aas
jge
inc
sub
add
mov
pop
and
subl
mov
jne
sahf
daa
lods
push
jg
js
clc
add
gs
dec
out
mov
pop
mov
dec
fisubrl
pusha
and
dec
push
cmp
testl
xorb
dec
inc
push
ret
lods
mov
cmp
dec
das
xchg
sub
dec
mov
dec
xchg
cwtl
xorl
sub
mov
mov
xchg
cmp
mov
cmc
dec
psubusb
mov
int
mov
push
inc
aam
into
mov
jns
cltd
int
int3
movsl
adc
rclb
sbb
pop
xor
mov
lock
or
mov
sahf
xchg
in
pop
xchg
dec
xor
adc
in
mov
cmp
jb
and
outsl
out
dec
mov
in
add
loop
or
jae
sbb
fcomps
sbb
les
mov
cltd
rorl
adc
ret
adc
sbb
xchg
cmp
addb
jnp
gs
ja
call
jecxz
xlat
pop
push
mov
dec
rcr
or
sub
mov
nop
push
cmp
dec
cltd
adc
scas
popf
cmp
xchg
mov
aad
cmp
push
sub
cmp
sti
leave
mov
xor
xor
scas
pop
dec
dec
add
stos
loope
out
sarb
adc
inc
sbb
mov
out
sbb
jae
mov
add
out
leave
sub
jg
inc
adc
add
outsl
push
and
pop
cwtl
cmpsl
push
xchg
fcmovu
sbbb
nop
xor
jae
out
sub
jp
int
mov
xor
jmp
jb,pn
jle
lds
push
jg
rcll
lds
mov
pop
mov
stos
in
fstps
push
lods
mov
lret
call
jle
pop
ja
out
inc
push
lods
sahf
test
daa
fidivrs
jns
icebp
cld
and
push
xlat
aaa
and
mov
cwtl
push
cmc
jecxz
inc
out
inc
ss
xchg
xor
inc
out
aas
pop
pop
ficoms
mov
hlt
mov
stos
jle
dec
pop
cli
roll
cli
fidivl
xchg
cmc
divl
push
fidivs
push
cmp
mov
cmc
fidivl
in
mov
jns
fisttpll
in
data16
js
outsb
ss
repz
insl
cmp
jmp
push
out
jae
cli
das
dec
mov
sub
aam
outsl
xor
sbb
mov
subb
movsl
je
xchg
sbb
sbb
mov
mov
inc
adc
adc
and
mov
test
cmp
pop
dec
or
or
clc
insl
inc
pop
fsubrl
call
mov
lock
dec
out
fs
add
jnp
ja
sahf
movb
sbb
cmpsl
hlt
mov
shll
jne
fucom
in
rclb
shlb
test
ja
inc
xor
sbb
push
adcl
mov
dec
mov
mov
out
cmc
fisubl
pusha
repz
iret
movsb
jle
or
push
inc
sub
pop
popa
mov
xchg
xor
je
lret
push
hlt
dec
notl
fs
imul
jmp
add
dec
movsl
lods
fidivrs
call
stos
test
dec
mov
enter
and
jae
popf
sub
mov
pop
lods
mov
mov
adc
arpl
dec
mov
or
shrb
lds
inc
fwait
stc
push
sub
xchg
or
and
bound
jne
movsb
xor
cs
loop
cmp
das
addb
into
int3
mov
js
or
sub
repnz
js
dec
movsb
mov
and
cmp
xor
rcr
dec
shll
ljmp
mov
mov
shlb
jge
pop
insb
ljmp
test
or
dec
dec
aad
repnz
xor
int3
neg
push
into
fbld
sbbl
jno
mov
push
mov
into
lock
inc
xor
cmpsl
pusha
das
adc
stos
inc
add
cmp
imul
mov
mov
mov
jp
lods
or
pop
cmpsb
xchg
shr
jecxz
stos
or
insb
cmpsl
cmp
sub
pop
aam
adc
mov
push
mov
sar
jmp
xchg
mov
push
xor
clc
movsb
jle
rcrb
lods
rcll
into
sbb
stc
mov
fwait
push
sub
jbe
shlb
fdivr
leave
loope
fsin
push
sub
adc
inc
inc
les
rorl
sub
popa
icebp
jbe
imul
int3
jp
xchg
jbe
int3
mov
rcl
mov
xor
test
add
mov
lea
cmp
jge
xor
mov
and
push
pop
aas
pop
xchg
xchg
jno
add
cmp
gs
fcomps
mov
hlt
inc
push
mov
nop
xchg
arpl
cmp
enter
gs
cmp
aad
xchg
lods
loopne
mov
pshufw
leave
xor
idiv
and
add
fistpl
movsb
dec
sbbb
mov
leave
inc
out
ficoms
xor
and
call
adc
sub
hlt
inc
xchg
inc
xchg
pop
mov
lea
sub
mov
sub
mov
inc
cmp
imul
lcall
or
test
int
sub
inc
or
push
add
xor
xor
ret
mov
jge
sbb
xchg
xchg
jle
movsl
insb
or
or
mov
jnp
clc
push
adc
popf
int3
cs
je
pusha
mov
ficoms
mov
aaa
dec
pusha
cmpsb
in
rcrb
mulb
cmp
lahf
and
leave
dec
into
jge
mov
adc
aam
sub
jnp
cld
xchg
std
inc
push
mov
cmp
ffreep
lret
and
jns
cmp
outsb
push
jbe
lcall
xor
idivb
add
mov
cmp
pop
es
ficoml
and
or
pop
or
dec
xor
fidivrs
cmpsl
test
or
scas
push
lea
mov
jae
mov
mov
shll
mov
jle
push
jp
xlat
cmp
add
dec
sub
fldenv
enter
out
mov
js
ja
insl
cmpb
adc
push
jg
scas
sub
adc
imul
jl
mov
fbstp
adc
xchg
dec
adc
push
lock
xchg
popl
hlt
jg
inc
lock
es
and
hlt
cmp
cmc
addr16
add
sti
sbb
xchg
sub
jmp
ds
mov
xchg
scas
dec
in
in
xchg
xor
pop
push
sbb
pop
xor
mov
std
loop
mov
push
repnz
cld
dec
inc
out
int
stc
adc
jmp
cmp
and
cmp
add
sbb
xor
jo
mov
les
insb
or
xor
icebp
push
ret
or
popa
push
xchg
inc
daa
mov
adc
xor
nop
mov
shlb
xor
xchg
xchg
add
outsl
mov
add
inc
insl
adc
mov
pusha
mov
mov
lods
add
sub
mov
movsb
dec
cmpsb
sub
cmc
dec
ficomps
jne
pop
test
ret
jb
movsb
xor
movsb
inc
add
outsl
dec
mov
jno
pusha
outsl
repz
dec
adc
dec
and
add
push
jae
mov
arpl
icebp
mov
mov
jecxz
add
xor
mov
lcall
jnp
inc
jle
xor
fidivrl
inc
jo
mov
adc
sahf
cmp
inc
hlt
in
mov
jae
cmpsb
popf
addl
xchg
push
fs
push
jno
push
jecxz
pop
bound
adc
mov
imul
icebp
jle
fiaddl
int3
adc
mov
push
xchg
mov
inc
movsl
out
adc
je
xchg
xchg
or
and
in
mov
stos
bound
scas
shlb
lods
inc
jae
lret
stos
push
imulb
fwait
xchg
mov
pop
mov
pop
je
push
cmp
fwait
jns
xchg
sbb
or
jg
xchg
push
scas
xchg
push
mov
jns
inc
pop
pop
mov
fsubrl
jle
lds
into
ficoms
dec
inc
push
dec
xor
add
popf
cltd
and
mov
movsl
and
pop
xor
mov
add
xor
outsl
movsl
leave
xchg
sar
test
add
stc
scas
adc
fnsave
out
sbb
mov
rcrl
out
ss
cld
insb
rcrb
mov
fdivrs
lret
sahf
pop
jmp
push
sti
dec
scas
hlt
xor
jns
sbb
add
mov
jecxz
mov
pushf
enter
push
fimull
inc
cmpsl
adc
xor
enter
adc
sbb
adc
insl
mov
es
xchg
fcoms
xchg
mov
pop
mov
pop
leave
or
jns
cmp
push
mov
sub
mov
sbb
xchg
mov
add
int3
cs
loop
std
decb
xor
aaa
shll
sarb
icebp
test
or
pop
add
in
movsl
jb
adc
pop
psubusw
xlat
out
inc
adc
mov
xlat
xlat
pop
pop
jb
push
mov
in
das
cmpb
xor
mov
push
out
xor
xor
or
xor
or
inc
xor
sbb
mov
cmpsl
jne
or
push
out
stc
rcrb
gs
mov
dec
push
loope
loop
int
sub
lods
jne
adc
add
push
inc
lods
push
test
cmp
mov
clc
setns
mov
mov
js
cmpsb
and
jg
scas
pusha
add
les
jb
dec
test
xchg
data16
fwait
mov
sub
sbb
adc
mov
sub
lahf
push
fdivl
adc
jnp
dec
mov
or
jmp
add
idivl
mov
inc
cmp
jns
popf
xchg
fidivs
sarb
les
ret
mov
fwait
cli
lods
xchg
sub
fwait
cwtl
cmp
and
mov
mov
repnz
loop
ficoml
mov
cmp
les
movsb
cmp
push
dec
mov
jo
movsl
xchg
dec
das
jle
movsl
xor
js
pop
test
dec
push
rorb
jmp
arpl
mov
out
enter
jns
frstor
popa
xor
jno
sbb
into
mov
or
mov
mov
jo
add
push
test
into
or
repz
ret
or
jl
inc
xor
xlat
inc
inc
sar
lcall
in
lods
jg
dec
pop
cmp
rcll
fwait
cltd
sub
cs
push
scas
or
mov
add
xchg
cltd
sbb
xorl
daa
push
out
ja
dec
popf
fimuls
lret
or
repnz
lds
push
jmp
or
sahf
adcb
sarb
sub
mov
add
jle
arpl
push
cmpsb
movsb
sub
icebp
cmpsl
jae
out
add
gs
or
fisttpl
add
adc
mov
fcompl
adc
push
xchg
adc
xchg
out
ret
sub
or
jp
fisubs
pop
lea
rolb
es
jecxz
shll
nop
outsb
mov
loope
cs
loope
jmp
aas
push
outsb
push
fbld
push
or
or
les
ret
in
push
pop
mov
sub
cmpsl
add
jge
lods
adc
jecxz
and
test
jg
lea
cmc
jmp
es
imul
cmp
push
dec
arpl
inc
jl
and
cmpb
mov
rorb
je
jne
push
es
ret
in
inc
pop
adc
xchg
ficomps
insl
sbb
xchg
xchg
sub
addr16
movb
pop
fcmovnu
lea
jecxz
push
add
js
jl
sarb
mov
mov
shll
sbb
sub
pop
mov
sub
adc
stos
push
xchg
fldt
stos
sbb
mov
stc
lahf
mov
fldenv
dec
shll
or
cmpsb
and
lods
rcr
cltd
arpl
icebp
sbb
sub
adc
sbb
fcompl
popa
jns
in
hlt
mov
pop
aas
adc
into
dec
ret
push
sub
mov
pop
dec
fadd
push
insl
push
lret
das
mov
fdivrl
mov
aas
loope
outsb
imul
inc
dec
mov
adc
cs
fcmovnu
xchg
gs
jnp
pusha
lds
outsl
repz
pop
mov
sub
add
sub
iret
mov
pop
shlb
mov
jle
sbbl
mov
dec
scas
sbb
int
aam
cmpsb
stos
inc
jp
inc
adc
cmp
aad
and
pop
mov
dec
dec
out
mov
dec
insl
jle
dec
ja
pusha
and
xchg
jge
sub
clc
mov
xor
rorb
jbe
mov
pop
mov
ss
daa
out
adc
add
stc
ljmp
lock
or
daa
cmpl
movsb
outsb
ljmp
pop
adc
pushf
or
pushw
roll
mov
scas
leave
cld
int3
pop
mov
fsubl
cpuid
gs
rorl
ret
add
mov
popa
inc
sub
sub
loop
xchg
dec
cmp
jae
or
push
push
lds
test
and
or
sar
jmp
pop
adc
mov
aas
outsb
sbb
dec
cmpsl
addr16
mov
data16
aad
fwait
in
hlt
ja
cmp
popa
in
jne
adc
xchg
lods
adc
inc
lea
push
sub
test
xor
in
jno
dec
mov
rcrl
mov
sbb
ja
adc
push
jb
fldcw
cwtl
std
cmp
push
imul
enter
push
shll
out
lods
jp
push
iret
dec
xorl
sub
inc
inc
flds
and
xchg
add
mov
int
dec
cmp
mov
inc
mov
mov
sbb
bound
mov
jp
out
repz
lret
adc
lock
or
stos
imul
ret
inc
lods
insb
lods
or
mov
mov
rorb
pop
cs
aaa
xchg
xor
in
lea
mov
rol
ds
cld
enter
lret
mov
icebp
call
mov
sub
jne
outsl
mov
jo
jg
push
loope
cwtl
sub
xchg
ud2
xor
adc
pop
adc
mov
push
mov
mov
sahf
push
jecxz
jecxz
test
cmp
in
daa
sbb
aas
or
sub
jmp
lock
xor
adc
pop
popa
gs
in
mov
repz
pop
cmp
add
push
inc
ret
sub
jne
cmp
in
and
scas
rorb
dec
mov
subl
push
pop
sbb
repnz
dec
push
jb
sub
andb
add
out
mov
and
mov
pop
int
lods
mov
adc
xchg
jbe
hlt
sub
pusha
jl
or
and
pop
ret
scas
cs
bnd
or
cmp
lret
pop
icebp
repnz
push
jno
insb
popa
fucomp
xchg
mov
ret
movsb
cwtl
pop
inc
pop
js
dec
int
mov
push
in
mov
sbb
adc
test
into
leave
xchg
je
xchg
pushf
or
iret
and
fiaddl
cmp
cli
dec
std
cs
dec
adc
test
xor
push
out
push
or
je
orl
or
loopne
int
je
xor
ss
push
cmp
jbe
daa
daa
xchg
push
push
pop
lcall
fidivs
arpl
cmp
sti
cmp
add
stos
out
movsb
push
icebp
inc
sbb
jle
jge
iret
or
rcrb
sbb
or
insl
ljmp
hlt
in
mov
lret
ret
ss
fadd
sbb
inc
out
push
cmp
stc
jg
jle
mov
fcmovnb
cmp
sub
add
mov
jb
xchg
jnp
insb
call
pop
and
inc
mov
xchg
je
push
mov
test
fsubrs
pop
cmova
jnp
out
xor
cmp
scas
jp
enter
dec
or
adc
sbb
ficomps
js
pop
ss
in
mov
xor
push
or
mov
mov
inc
inc
in
and
insb
and
iret
clc
inc
jbe
mov
loope
mov
hlt
inc
jns
je
pop
pushf
sbbl
jg
sub
jno
ret
aad
cmpsl
or
pop
flds
jg
sbb
call
add
and
push
notl
aad
mov
js
leave
inc
lods
inc
mov
cmpl
sub
int
sub
aaa
pop
leave
jecxz
mov
outsb
mov
ficompl
add
bound
mov
xor
jb
sbb
ret
out
adc
adc
aad
pop
or
mov
dec
push
mov
jle
mov
pop
push
loope
and
mov
lods
mov
in
mov
loope
andl
push
sub
movsl
xchg
mov
lcall
pop
push
mov
and
fmull
fnstenv
pop
mov
lods
push
popf
mov
call
popf
in
sarb
and
dec
daa
pop
cwtl
fsubs
cltd
jne
outsb
idivb
xchg
push
push
bts
out
fstps
or
mull
sbb
xor
pop
lret
adc
iret
test
adc
repz
mov
iret
add
and
xlat
notl
shlb
daa
xor
out
icebp
jp
jmp
je
iret
jg
jmp
xchg
data16
xchg
sbb
loopne
pop
mov
sub
lock
xor
and
lahf
aad
addr16
sub
add
jp
push
mov
or
dec
mov
inc
call
adc
mov
adc
xchg
jnp
lods
fistps
daa
xor
or
gs
hlt
daa
test
addr16
xor
sbb
or
and
in
jne
dec
xchg
xchg
aaa
pop
push
add
xlat
sub
push
fstp
push
lods
inc
xlat
scas
scas
mov
jmp
icebp
sbb
movsl
push
dec
mov
cmp
lret
pop
les
les
add
stos
mov
rcl
mov
jns
mov
cmp
xor
push
dec
fsubs
push
mov
or
sbb
addr16
int
and
push
adc
mov
xlat
scas
inc
cld
fs
enter
fistl
sbb
mov
jo
jg
sbb
adc
xchg
mov
cmp
daa
pop
out
or
test
jmp
xchg
xchg
or
cmp
out
mov
pop
add
pop
pop
pop
cmp
inc
mov
xor
dec
pop
fistl
xchg
sbb
mov
loop
sub
in
add
xor
call
shrb
xor
mov
cmpsl
aas
pop
inc
inc
cmp
mov
add
push
daa
popa
cltd
cmpsl
bound
xor
out
push
rcrb
fs
scas
mov
jnp
push
push
dec
roll
lea
xchg
jp
out
addr16
push
int
lahf
imulb
jge
push
lock
pop
ret
fdivl
inc
addl
inc
jns
shr
pop
enter
xchg
iret
cmp
adc
jns
stos
iret
jp
jbe
mov
push
es
jmp
daa
xchg
icebp
rcrb
jb
mov
or
pop
xchg
xchg
data16
shlb
jae
mov
in
mov
jo
adc
jno
das
mov
cmp
call
insl
push
push
dec
mov
out
push
adc
jg
pop
rorb
lock
fmulp
movsb
js
cli
ret
pop
or
sub
mov
jns
sbb
push
inc
sub
imul
sbb
aad
jmp
xor
xor
shlb
mov
inc
and
inc
and
inc
jo
popa
sbb
dec
and
ret
sub
in
imul
pop
sbb
dec
test
cwtl
push
pop
cmp
repz
dec
nop
pusha
mov
divb
lods
mov
outsl
mov
iret
in
mov
pusha
lods
sbb
pop
push
dec
push
xchg
ficompl
lahf
inc
lcall
inc
sahf
mov
mov
out
push
out
inc
pop
sbb
stos
jbe
dec
rcrl
xor
and
paddw
jne
clc
mov
pop
pop
aaa
and
xchg
push
fs
jmp
xor
out
cmpb
push
cmp
mov
test
push
iret
add
popf
pop
aad
xor
in
loope
cwtl
out
fidivrl
test
adc
inc
jo
test
repz
mov
sbb
dec
inc
pop
pop
popa
cmp
test
pop
sub
ss
mov
xchg
sbb
in
dec
loopne
push
dec
cmp
insb
stos
dec
push
lds
fwait
iret
aam
call
in
dec
div
data16
dec
es
pop
cmp
inc
aaa
divl
jmp
dec
dec
mov
xchg
inc
mov
and
xor
stos
pop
add
push
xor
fxch
push
test
pop
es
addr16
test
mov
pop
cs
test
fcoms
pop
popl
xchg
ret
pop
mov
and
nop
dec
dec
xlat
xchg
icebp
clc
enter
push
sbb
rolb
mov
es
loope
add
dec
das
adc
xor
mov
sbb
cltd
cltd
dec
cmp
jecxz
xchg
sub
mov
jmp
call
int
test
inc
or
ret
adc
xchg
clc
cli
je
in
loop
push
xor
fcmovnb
sbb
into
add
fstp
mov
pop
cmp
lret
inc
lock
outsb
or
inc
rolw
cltd
rclb
dec
aaa
pop
sub
pop
inc
roll
sub
adc
in
in
les
push
adc
popa
stc
xor
hlt
xchg
iret
popa
xchg
lahf
and
stc
push
mov
jg
push
out
mov
into
pushf
clc
repnz
testl
movsb
sbb
in
dec
clc
sbb
mov
cmpsb
fistl
push
stc
inc
pop
inc
push
std
mov
je
test
insb
ror
lea
jge
adc
lahf
hlt
mov
adc
push
sub
jb
inc
jbe
les
pop
push
xor
push
loope
sbb
scas
rcrl
enter
cmc
xchg
int3
lea
xchg
cld
fstpt
insb
pop
add
pusha
test
gs
or
cs
sub
mov
sbb
push
shrl
rcrl
out
add
mov
xor
xlat
xor
jg
negb
cmp
call
imul
lea
push
and
mov
call
add
ret
int
xchg
pop
push
out
imul
inc
pop
jb
int
pop
hlt
outsl
aaa
nop
out
dec
ljmp
repz
sbb
loope
lock
cltd
push
dec
lods
or
mov
jge
stos
lret
sbb
lcall
lods
sahf
mov
or
orb
cmpsl
jae
rcrl
call
mov
mov
insb
xlat
repz
mov
jnp
pop
lret
sbb
mov
mov
jbe
sub
push
or
pop
sahf
cmc
in
jge
xchg
push
mov
adc
inc
push
pushf
add
popa
int3
add
in
rcl
xor
jg
adc
mov
xchg
dec
pop
call
cmp
stos
xor
les
mov
pop
or
dec
lcall
fmuls
fnsave
pop
jb
cmc
xchg
sub
xchg
pop
lock
jg
jo
mov
imul
sub
sbb
loop
and
inc
lods
sub
test
sub
jae
arpl
pop
add
daa
out
sbb
mov
aas
cmpb
push
loope
xlat
repz
adc
push
movsl
xor
hlt
pop
sbb
mov
xchg
sub
pushf
mov
fildll
sub
push
mov
repz
add
ss
or
pop
pop
mov
cvttps2pi
lret
lods
icebp
mov
jmp
ret
enter
sub
push
mov
test
test
adc
pop
cltd
into
cli
pop
add
cwtl
sbbb
mov
mov
enter
repnz
pop
gs
and
scas
insb
or
fstpl
cltd
in
cld
mov
adc
frstor
ja
dec
pop
adc
jl
pusha
inc
test
ds
int
dec
stos
mov
aam
hlt
jns
movsb
push
iret
test
rcrb
cld
xor
push
jl
pop
sahf
jbe
mov
mov
adc
std
mov
test
add
addb
push
jae
loope
pop
add
mov
in
out
jecxz
divl
xor
mov
in
bound
add
xor
test
nop
shl
mov
loop
fldl
stc
sahf
insl
push
and
and
je
sub
shl
roll
push
nop
jl
out
sbb
xor
xchg
pop
mov
fs
xor
mov
cwtl
je
mov
lahf
sub
mov
or
lret
es
lahf
dec
mov
addl
push
jle
add
add
jbe
mov
mov
cmp
dec
push
cli
and
xchg
mov
stos
imulb
jg
aad
mov
stc
sub
mull
and
ficoml
or
sbb
and
frstor
mov
daa
subw
loope
inc
iret
nop
dec
jbe
xchg
push
sbb
and
js
jno
mov
mov
inc
inc
inc
xor
sti
daa
jno
xchg
fcompl
je
xlat
push
ds
pop
lcall
sbb
xchg
ret
testb
xor
into
test
cmp
cmp
mov
cmpsb
or
lret
aas
into
stos
mov
pop
mov
jge
cmp
mov
and
fsubrl
pop
por
mov
dec
data16
cmpsb
addl
mov
fwait
inc
ljmp
xchg
xchg
push
push
sbb
jecxz
xor
push
inc
cmp
mov
loop
sbb
mov
jns
jo
test
leave
or
stos
pop
or
add
jp
orb
sbb
jae
mov
xchg
out
push
xor
movsl
sub
add
aas
push
cld
gs
rcrl
inc
movsb
dec
inc
std
addb
out
xchg
mov
push
enter
movsl
push
pusha
sub
push
hlt
insl
mov
pop
leave
dec
dec
in
mov
pop
test
fwait
and
lahf
push
ja
movb
enter
aaa
idiv
in
add
jnp
rcl
jne
push
mov
push
testl
ja
ret
clc
dec
test
adc
inc
sub
lock
outsl
jmp
data16
or
mov
and
leave
mov
loop
pop
push
addb
mov
movl
out
lahf
push
je
push
pop
lret
ror
cs
in
fsubl
ss
or
mov
shlb
push
shlb
adc
mov
cltd
mov
bound
jne
jl
dec
outsl
sub
jo
dec
loop
or
rcr
stos
repz
scas
fadds
iret
sbb
lret
xchg
fcmovbe
pop
insl
cltd
cltd
test
mov
cmp
sbb
sub
ret
dec
ds
or
dec
jne
sbb
rcr
sbb
xor
bound
mov
adc
push
popf
inc
jb
push
cmp
in
or
lret
or
sti
arpl
or
jae
ror
sbb
bound
es
add
dec
jle
mov
or
dec
jno
push
pushf
in
shlb
leave
pop
mov
cmp
in
enter
pop
add
fidivl
lret
inc
loopne
sbb
dec
aaa
ja
mov
cmp
mov
adc
popf
leave
sbb
cmp
sub
pop
insb
dec
pop
lods
fsubrs
push
cli
or
pop
cli
pop
mov
pop
and
popf
lds
jb
xchg
popf
adc
mov
dec
and
jno
mov
into
ret
or
lods
push
les
push
xor
mov
inc
adc
dec
add
aas
pop
popf
jnp
stc
pop
pop
repz
ret
adc
sbb
jne
jge
and
or
or
rcrb
in
sarl
pop
fistpl
iret
stos
iret
or
and
repz
ret
out
aaa
sub
adc
push
les
xor
jp
mov
dec
xlat
movsl
inc
xchg
sub
int3
lock
add
pop
addr16
mov
xor
scas
jl
dec
mov
pop
fcmovnb
pop
bound
cmpsl
jo
or
xchg
call
aad
into
jne
sbb
adc
outsl
dec
and
jb
and
clc
adc
mov
pop
jmp
mov
sahf
outsb
fiadds
push
sub
stos
mov
scas
ljmp
inc
es
je
sti
dec
fisubs
inc
jne
jp
out
jge
movsl
jl
jmp
push
or
into
jns
add
adc
push
andb
inc
lds
xchg
jg
daa
adc
or
and
cmp
and
or
arpl
rolb
cmp
inc
lock
mov
lahf
inc
inc
pop
xor
sbbl
add
jecxz
fwait
pop
cld
dec
pop
cmp
lods
dec
push
test
lcall
add
push
pop
mov
dec
xor
or
clc
push
mov
flds
mov
dec
scas
cwtl
ss
xchg
xor
lcall
mov
xor
stos
mov
cmp
jb
push
imul
daa
mov
pop
mov
loope
into
push
idivl
sahf
sti
xchg
mov
xchg
jmp
scas
inc
mov
mov
dec
jns
xor
mov
jo
cmp
or
mov
fdivs
xchg
pusha
lea
lcall
cwtl
fcomps
push
icebp
sarl
pop
ds
scas
in
jmp
adc
sahf
loope
divb
xor
fidivl
mov
inc
inc
push
shl
fisubl
shlb
jbe
pop
inc
jge
add
loop
jle
dec
icebp
ficompl
enter
jl
fnstsw
xchg
lea
out
outsb
in
mov
dec
pusha
jb
or
add
mov
in
mov
aam
int3
divl
popa
ja
pop
clc
xor
sub
ljmp
mov
push
adc
popa
clc
mov
push
adc
cmp
shrl
xor
pop
fdivrp
sti
scas
call
rorl
sbb
pop
in
gs
mulb
push
aaa
push
outsl
lods
dec
jns
bound
shrl
mov
ds
mov
ss
lea
mov
fsubp
cmpsl
sub
dec
stc
test
aas
movsb
out
scas
add
mov
cmpsl
test
ja
add
push
ljmp
inc
mov
lods
test
sti
jae
ror
xchg
cltd
loop
in
fldenv
std
fisubrs
stos
inc
dec
fldl
dec
cwtl
push
dec
popf
sti
adc
stos
out
sub
fstps
xchg
std
cmpsl
mov
ljmp
add
insl
mulb
push
out
repnz
cmp
push
aam
mov
cmp
jnp
invd
fdivrs
sub
aas
push
jnp
out
mov
js
pushf
in
addr16
stc
push
ljmp
pop
movsl
cmpsb
stc
mov
mov
cs
mov
and
and
ret
insb
adc
cmp
mov
shr
mov
lret
movsb
and
xor
ficomps
lds
shr
lcall
jns
xchg
call
push
lds
enter
addr16
mov
ss
sbb
ljmp
sbb
out
fistps
sub
mov
into
xor
das
leave
cmp
mov
fnstcw
ret
push
shlb
outsb
aam
inc
mov
pop
jo
popf
leave
mov
sbb
adc
mov
dec
push
notb
mov
leave
pop
stc
push
das
outsl
and
popa
push
xchg
push
rcl
lea
aam
xchg
aam
or
adc
mov
dec
adc
adc
cmp
cmp
cmp
fcmovnb
cmp
stos
scas
jbe
sub
pop
ds
leave
fwait
sbb
dec
cmpl
sub
or
cwtl
stc
inc
xchg
daa
lock
sahf
lret
or
lret
mov
mov
test
or
dec
xchg
xchg
dec
sub
mov
xchg
jae
out
pop
loop
into
aas
les
xchg
or
jae
xchg
sti
push
fsubs
sbb
mov
pop
cmc
add
bound
mov
mov
fsubrs
std
test
imul
stc
mov
sbb
cld
cmp
stc
repnz
pop
sub
lock
jns
dec
mov
ljmp
mov
es
mov
pop
enter
loope
push
jmp
ret
loop
orl
je
leave
mov
arpl
popf
xchg
xor
push
jmp
pop
push
outsb
outsb
pop
adc
mov
insl
mov
mov
outsb
popf
push
sub
sub
sarl
out
jbe
mov
push
dec
dec
jle
js
mov
lret
sub
ja
aam
clc
daa
xor
sbb
fimuls
xchg
addr16
pop
push
jp
roll
fbld
lods
aaa
cmp
test
cld
xor
or
sbb
mov
jp
sub
mov
add
mov
pop
lock
jns
xchg
std
ljmp
jmp
jo
sbb
jl
jg
jmp
aas
neg
mov
jl
cmp
leave
mov
andb
mov
or
jge
rcll
fmull
adc
or
xor
or
mov
add
dec
iret
jbe
adcb
add
lea
aam
jp
je
or
mov
adc
or
call
fcoms
push
pusha
adc
jecxz
mov
je
dec
rol
insl
jecxz
jbe
adc
mov
icebp
pushl
or
push
flds
outsl
inc
in
sub
aaa
mov
jns
xchg
decb
xchg
outsb
mov
mov
jmp
and
aam
dec
pop
jmp
add
out
add
repz
aas
and
fidivrl
pop
adc
icebp
cmp
xchg
xchg
in
and
cmpsl
cwtl
adc
add
mov
fwait
push
push
data16
clc
into
mov
jecxz
adcl
int
aas
pop
and
cmp
xchg
lret
mov
nop
int3
scas
test
adc
loopne
dec
ljmp
mov
xor
rolb
pop
sti
mov
sti
mov
icebp
lods
xor
xchg
or
or
inc
shlb
ret
je
push
std
leave
movsb
test
adc
out
cmpsl
push
shlb
jnp
push
divb
xor
sbb
sub
cwtl
stc
adc
popa
enter
xchg
shll
dec
cmp
outsb
ja
mov
dec
aam
clc
lock
or
jge
sbb
jae
or
jno
sub
mov
lods
adc
addr16
jne
lea
scas
xor
cmp
movsb
or
iret
rsm
inc
mov
pop
mov
jge
xor
pop
ret
dec
jge
je
mov
rcll
cmp
mov
mov
nop
hlt
hlt
hlt
lock
mov
mov
hlt
xchg
adc
pushf
jo
lret
icebp
xchg
jo
xchg
sub
mov
mov
sbb
lods
out
pusha
push
sbbb
mov
out
adc
add
pop
lcall
adc
into
or
cmp
std
lcall
pusha
sub
lret
call
lret
adc
pop
arpl
leave
pop
mov
imul
in
jne
dec
lds
out
pop
pop
clc
enter
inc
sar
xor
insb
adc
xchg
das
xchg
insl
jne
jnp
lahf
cmp
lods
jb
in
or
inc
pusha
addr16
xchg
inc
iret
and
ja
mov
xchg
mov
sub
outsl
pushf
pop
aaa
nop
dec
xor
xchg
test
dec
adc
in
pop
jnp
xchg
mov
sbbb
jnp
test
cmp
int
pop
cmpsl
int
in
pop
mov
jp
into
or
mov
mov
aam
loopne
or
push
jae
rorb
repnz
aas
xchg
mov
in
stos
das
pop
xchg
bound
xchg
sbb
out
sti
sub
push
repz
insb
mov
fiadds
jecxz
sbb
inc
fistpl
cli
adc
bound
adc
xchg
sub
out
fdiv
repz
mov
sbb
cmpsb
sbb
pushf
xchg
or
or
pop
and
pop
pop
pop
icebp
fldl
add
sub
pop
jbe
dec
sbb
push
clc
mov
ja
pop
lret
iret
add
mov
pop
xchg
xor
push
adc
push
mov
sub
add
leave
not
xchg
cmpb
xchg
test
jne
xchg
sarb
sbb
lods
mov
adc
jnp
cmpsl
xchg
mov
jge
xchg
jb
stc
adc
pop
in
fucomip
or
icebp
pop
and
repz
hlt
je
inc
gs
push
adc
stos
movsl
dec
jno
fwait
jp
jb
das
inc
insb
sbb
cs
mov
ret
adc
cmp
aas
in
sarl
sub
jg
mov
lcall
xor
jle
hlt
mov
xchg
int3
push
mov
lret
sbb
nop
xor
mov
in
and
outsb
mov
enter
lret
pusha
cltd
mov
int3
fdivs
mov
lahf
jmp
push
push
lods
jp
rcr
add
jbe
scas
cmp
loopne
and
cmp
jae
into
cmpsb
out
jg
push
das
loope
push
dec
dec
das
xchg
sbb
jno
mov
fyl2xp1
movl
sbb
pop
imul
mov
adc
jno
lods
mov
xlat
scas
lds
fsubrl
adc
jge
push
aad
sub
mov
das
xor
test
add
xor
push
dec
dec
push
scas
cli
pop
subb
add
or
jge
inc
sbb
cmpsb
mov
dec
mov
mov
lcall
mov
les
mov
mov
daa
mov
aas
cs
adc
les
fsubrs
into
icebp
cmc
or
mov
sbb
fmull
flds
adc
sbb
jl
sub
dec
and
fisubrl
daa
sbb
jg
add
dec
mov
sbb
adc
jbe
push
push
sbb
cld
test
push
add
xor
dec
mov
fbld
inc
imul
push
into
xor
out
fistpl
sub
sarb
push
test
and
inc
sahf
stc
xchg
add
popa
aaa
aas
call
xor
in
jle
lcall
pop
sub
push
adc
mov
inc
flds
jo
lea
data16
fistpl
cmp
mov
daa
lods
cmp
and
cmp
sub
loope
jmp
adc
stc
push
pusha
cwtl
shll
outsb
daa
pop
cmp
rcrl
subb
ret
addl
jae
cmp
pop
popa
push
iret
lock
push
je
stc
xchg
mov
mov
sub
inc
ljmp
sar
pop
fldenv
adc
test
sti
imul
adc
rep
mov
cmp
or
sub
incb
pop
push
cmp
orl
xor
sbb
pop
adc
jno
xchg
pop
adc
ja
ret
cmpsl
xchg
test
xchg
jle
mov
call
jmp
adc
js
bswap
cld
addr16
push
xchg
sub
daa
jne
and
rcll
les
mov
cmp
sub
mov
jne
jl
jnp
dec
or
pop
sub
sti
loop
pop
imul
mov
loope,pn
xor
imul
mov
mov
sub
adc
xor
sub
mov
cltd
xchg
jno
lcall
test
dec
incb
inc
pop
or
pop
xchg
push
pcmpeqd
orl
mov
fs
aas
cli
leave
cmpb
or
in
push
sbb
stos
je
sahf
int3
clc
mov
mov
cmp
mov
cmp
call
inc
sbb
or
or
cmpsl
mov
aas
popf
xchg
stos
outsl
test
ds
push
mov
xchg
test
xchg
inc
push
mov
orl
and
test
jmp
dec
loopne
clc
jo
cmp
int
and
aam
ss
mov
mov
push
adc
test
fidivs
xchg
scas
fisubrs
sub
jns
sti
mov
mov
mov
icebp
jns
push
xor
cli
adc
stos
fwait
add
adc
gs
mov
push
lcall
daa
fadds
std
jl
push
gs
popa
mov
adc
rolb
ret
test
scas
push
mov
cli
pusha
mov
int
rol
lods
add
sub
mov
push
pushf
mov
sar
lea
mov
xchg
add
fnclex
loope
insl
xchg
sub
and
js
mov
sbb
subb
loope
mov
cmp
inc
es
pop
sahf
faddp
cmpsb
int3
push
cli
dec
add
sub
jb
cld
cmp
push
push
cmp
in
jle
mov
jae
decl
lock
imul
xchg
sahf
ror
mov
jno
cmpsb
aas
popf
in
xchg
test
cwtl
sbb
dec
pop
inc
lods
sub
adc
mov
xor
je
pop
cmp
shll
pop
cmc
div
and
mov
xlat
sbb
pop
int3
jne
pop
lods
aaa
jb
jg
rorb
scas
gs
fadd
dec
inc
add
push
jge
std
aad
mov
sbb
lret
test
xchg
cli
flds
mov
lret
mov
fmull
lret
and
adc
inc
mov
jg
push
mov
sub
mov
jmp
xor
and
push
fimull
sub
and
stos
mov
mov
and
into
adc
testl
lods
jnp
int3
push
adc
imul
pop
mov
cmp
or
and
inc
je
xchg
pop
sbb
sub
dec
test
adc
fstpt
mov
ds
lret
sbb
inc
outsb
inc
filds
ja
sbb
out
inc
push
adc
test
bound
pusha
adc
push
cwtl
les
push
cmp
and
test
xor
cmp
inc
daa
enter
imul
jle
or
rorb
and
push
adc
cmc
mov
mov
add
fs
popa
ja
xchg
and
inc
push
pop
push
enter
or
loope
jno
mov
int3
or
push
ljmp
or
jae
sbb
mov
pop
push
cmp
cmp
xchg
sbb
sub
iret
cmc
sbb
mov
xchg
data16
mov
cmpsl
jne
fs
loop
pop
ret
jae
mov
aaa
movsb
test
and
add
into
repz
out
pop
data16
dec
ret
cmp
shlb
lret
sub
cmpl
inc
mov
out
mov
mov
arpl
aad
enter
test
shr
les
mov
out
out
fwait
mov
dec
iret
fists
and
xchg
fsubrl
arpl
daa
add
and
daa
jg
jo
lods
fldenv
or
clc
cmp
push
inc
pusha
pop
out
jmp
fistps
push
pop
cmc
push
dec
cli
cltd
sbb
mov
out
dec
stc
or
push
mov
mov
xchg
stos
bound
divb
pusha
and
fisubl
rclb
repnz
mov
outsl
je
sbb
pop
lret
pop
loop
sub
sbb
aas
movsb
aas
inc
sub
pop
out
xchg
cmpsb
xor
cli
mov
aad
and
jbe
incl
aaa
sahf
movsb
lahf
push
mov
iret
dec
sti
jo
aaa
ss
xor
insb
cli
lock
pop
lods
xchg
addl
adc
mov
shlb
xor
popa
js
or
or
jne
aam
cmp
pushf
jnp
adc
pop
dec
mov
pop
lea
cmc
gs
insb
xchg
cmpsl
adc
xchg
xor
pop
mov
inc
and
in
push
mov
sahf
mov
cmp
test
nop
shll
xor
mov
dec
pop
pop
jle
call
cltd
or
adc
mov
adc
jb
inc
shl
movsb
sub
push
dec
dec
mov
mov
xor
add
cwtl
xchg
mov
xor
adc
popa
fdivrl
cmp
scas
inc
ss
jno
pop
push
mov
jne
outsb
imul
sub
mov
pop
lcall
insb
iret
mov
pop
notb
cmp
rol
jnp
cld
jecxz
jp
pusha
inc
or
outsl
out
jg
mov
dec
push
ret
lods
sbb
sbb
sub
mov
subl
lahf
jae
arpl
push
scas
mov
mov
in
push
out
mov
aad
adc
imul
xchg
scas
cmp
dec
mov
xor
add
into
or
pop
push
pushf
pop
es
out
mov
cmp
mov
dec
ja
outsb
mov
shl
xor
xchg
rclb
sahf
mov
mov
int3
movsb
int
fsubrl
dec
test
test
push
push
int
mov
shlb
bound
in
inc
ss
mov
lock
in
adc
mov
ds
subb
aam
mov
lds
jge
aas
packsswb
jle
add
xor
pushf
outsl
inc
or
das
icebp
ficoms
clc
outsl
jl
orl
aas
pop
xor
bound
hlt
dec
sar
aas
je
and
jbe
in
add
cmp
cmp
adc
stos
mov
and
out
fcoms
dec
lcall
js
fists
xor
sbb
jbe
fwait
repnz
fwait
xor
dec
lret
mov
pop
xor
or
sbb
jp
sti
jge
sbb
iret
pop
sub
ds
insl
mov
loop
ret
push
test
sahf
scas
jecxz
push
fs
std
notb
mov
out
cmp
popa
xor
leave
out
iret
addr16
xchg
insb
lret
in
dec
lods
ljmp
inc
push
mov
adc
fidivrs
and
nop
or
adc
mov
xchg
addr16
xor
cli
ljmp
mov
sub
data16
mov
int3
leave
xor
cmp
ret
xchg
push
xor
dec
xchg
lcall
and
sub
data16
sbb
iret
inc
stos
jp
bound
sub
xor
or
cwtl
inc
sahf
jmp
jne
mov
or
ret
aaa
jae
push
jbe
ss
aam
std
lahf
push
lahf
adc
pusha
add
daa
push
test
shrb
repnz
sbb
sub
mov
test
test
xchg
jge
loope
mov
sbb
out
adc
bound
cs
out
cs
insb
pop
add
prefetchnta
dec
fiadds
xchg
aaa
loopne
clc
out
jne
out
ja
add
test
jecxz
xor
imul
dec
jge
xchg
dec
scas
mov
cmp
aas
add
rcrl
fdivrl
test
dec
inc
fmuls
aas
mov
xchg
jns
nop
imul
sub
mov
push
xchg
add
dec
fstpl
adc
inc
and
imul
mov
fwait
xor
add
inc
pop
ds
sarb
stos
mov
fldt
cmp
adc
push
insl
lret
cmp
push
or
lret
ja
cltd
test
xchg
and
out
mov
outsl
lret
dec
and
sub
movsl
mov
ret
icebp
jle
testl
sbb
sub
fdivp
ljmp
xor
data16
or
scas
jno
hlt
mov
ret
push
rclb
xchg
mov
jae
jecxz
xor
repnz
xchg
insb
sbb
ja
repnz
stos
and
fldenv
mov
push
cld
lcall
test
and
xchg
jnp
mov
xor
push
pop
pushf
aad
cltd
ficomps
cs
or
xchg
cmp
fs
fwait
pop
mov
gs
cmp
push
sub
in
inc
inc
imul
sub
inc
inc
popa
pop
imul
fistps
mov
xor
imull
iret
in
pop
pop
mov
mov
loope
testb
adc
mov
adc
inc
test
pop
jg
pop
xor
pop
xchg
pop
dec
lods
jmp
mov
ret
arpl
pop
inc
add
aam
pop
xor
xor
lds
pop
leave
ffree
out
xor
sbb
add
or
jle
mov
sub
sub
push
dec
pop
ljmp
decl
out
pushf
mov
hlt
jo
or
inc
out
inc
cltd
lahf
jmp
sub
lcall
jns
scas
repnz
in
sub
push
dec
in
iret
clc
ja
dec
dec
jb
hlt
inc
or
pop
push
loopne
jmp
adc
pop
data16
mov
sub
inc
jmp
leave
or
stos
inc
cmc
mov
insl
mov
add
hlt
pop
cmp
sub
inc
adc
lret
sarl
pop
fs
bound
cs
cmp
cli
cmpb
dec
int3
sbb
add
test
rol
lret
jmp
dec
mov
xor
pop
xchg
mov
shr
popf
push
and
loope
xor
ja
xor
push
xor
dec
dec
paddusb
sti
mov
pop
ljmp
lahf
add
fidivrl
dec
fldenv
inc
loopne
add
cmpsl
and
pop
shrl
cmpsb
mov
and
and
fldt
jge
jl
int
adcl
bnd
lret
loopne
pop
out
jns
cmp
aaa
mov
jae
pusha
push
stos
pop
push
clc
sbb
sbb
inc
adc
lods
movsb
fistps
jp
cld
subl
mov
jno
sbb
push
scas
or
inc
dec
sbb
lahf
in
rcll
jae
add
cmp
xchg
cmp
pusha
mov
adc
push
fwait
clc
and
push
out
sarb
lcall
in
xlat
and
inc
mov
mov
and
pushf
hlt
dec
push
pop
js
push
repnz
pop
shrl
imul
inc
cmp
jp
or
scas
lock
cmpsb
push
adc
or
inc
dec
jb
lcall
mov
pusha
xchg
mov
stc
in
sbb
je
mov
lods
mov
cltd
notb
lds
test
shlb
mov
out
mov
out
xchg
mov
hlt
adc
imul
fists
jno
divl
xchg
shr
hlt
rcr
xchg
jge
shlb
pop
gs
out
mov
cltd
bound
pop
movsb
inc
jae
jne
mov
inc
push
gs
fsubs
xor
mov
add
inc
or
movsl
mov
test
loop
sbb
frstor
aad
mov
sbb
lds
stos
fcmovne
cmp
inc
movsl
stos
hlt
cmp
push
push
test
adcl
dec
aaa
sub
ret
sbb
scas
pop
insb
mov
xchg
pop
sbb
lea
xor
cmc
mov
mov
sub
imul
adc
fsubrl
and
cmp
pop
js
push
add
xchg
outsb
pop
sub
faddl
inc
gs
inc
xchg
pop
popa
pop
test
dec
adc
cmpb
and
adc
and
add
add
mov
add
aad
inc
cmpsb
insb
bound
mov
in
ss
push
outsb
addb
inc
dec
lret
fwait
mov
cmp
adc
movsb
inc
es
cmp
jns
xchg
lea
adc
push
mov
std
lods
xor
jns
mov
mov
jp
call
test
loop
mov
adc
test
int
push
lods
and
dec
pop
lret
dec
lcall
adc
enter
mov
pop
mov
bound
fs
std
cli
aas
in
sbb
int
dec
test
or
xchg
movsl
adc
dec
mov
mov
and
ds
and
movsl
xor
jno
cmp
jmp
cmc
adc
pop
mov
out
pop
fstpt
aaa
sbb
mov
in
test
ss
daa
and
out
ret
mov
jp
inc
loope
bound
xchg
push
jo
mov
add
scas
dec
push
leave
cli
push
int3
imul
cmp
mov
rol
sub
mov
aas
mov
xor
and
ljmp
repz
mov
cmp
inc
inc
outsb
cli
jge
inc
icebp
out
and
mov
and
add
mov
pop
inc
adc
out
shrl
push
sbb
icebp
ds
mov
orb
add
xchg
dec
add
cmp
int3
pop
in
int3
push
stos
and
fldenv
xor
mov
xor
cwtl
pop
sub
shll
xor
ss
andb
xchg
fstpl
jnp
dec
subb
xchg
insb
xchg
divb
xor
hlt
mov
das
fstpt
or
fidivrs
cmpsb
test
adc
sbb
xchg
mov
ret
pcmpgtb
bound
mov
sahf
fs
mov
in
inc
enter
mov
or
outsb
cmp
mov
and
psubsb
mov
pop
xor
push
loop
repnz
pop
cmp
xchg
test
mov
ja
mov
and
add
inc
dec
inc
sbb
push
popf
and
and
xchg
imul
in
pop
imull
push
dec
push
repz
pop
cmc
mov
mov
jecxz
sahf
sarb
sti
shlb
push
ss
insl
das
and
mov
lahf
cli
add
popf
fs
or
aad
inc
dec
jno
adc
aas
xchg
movsl
mov
int
jle
or
mov
or
cmpsb
mov
add
iret
jp
rorl
test
add
hlt
in
addr16
and
dec
or
jnp
pop
mov
mov
in
out
inc
push
bound
pushf
push
int3
cmp
dec
xor
adc
popf
int3
mov
fs
stc
dec
cmpsb
xchg
repnz
in
loop
mov
push
nop
das
xchg
adcb
xor
fldl
mov
sar
adc
out
pop
lea
outsb
fists
fdivrl
sbb
imul
fs
ljmp
lret
out
push
mov
jmp
dec
idivl
push
rolb
and
push
loopne
js
jecxz
hlt
lods
mov
ljmp
daa
jp
and
xchg
cmpsl
dec
sbb
dec
je
xchg
mov
pop
outsb
lods
xchg
jge
in
jp
jg
call
cmpsl
jno
dec
cwtl
cltd
jge
repnz
pop
mov
or
push
push
sti
add
push
mov
add
stos
xor
inc
sbb
pop
sarl
jp
jne
dec
ja
in
std
push
pop
insl
dec
sbb
loopne
adc
into
cmp
mov
jno
mov
pop
addl
dec
mov
dec
mov
ret
outsl
rol
push
lcall
jns
dec
mov
int3
das
dec
lcall
jo
iret
call
push
insb
sub
jge
dec
xchg
sub
fcomip
repz
or
in
dec
std
sub
push
lahf
data16
lock
adc
mov
cmp
dec
addr16
sbb
out
aam
jnp
addr16
int3
into
or
mov
cmp
lret
and
mov
jo
cs
dec
add
push
mov
adc
sub
insb
jmp
xchg
adc
jno
jg
in
pop
cmp
in
int
mov
je
sub
jle
imul
lahf
cmp
jo
pusha
add
movsb
push
js
bound
push
lea
adc
mov
inc
cmp
or
push
xchg
mov
cmpsb
enter
inc
push
daa
sbb
fwait
mov
mov
pop
mov
jns
mov
or
cld
pusha
mov
in
mov
test
jno
cmp
movb
jb
out
cs
push
xchg
xchg
aaa
cmp
lods
inc
int3
into
xchg
push
rcrl
jg
outsl
loop,pn
ljmp
pop
addr16
into
dec
inc
stos
mul
les
pop
jae
dec
mov
scas
push
fabs
lock
sub
push
lahf
fsubrp
jae
jno
test
push
aad
loopne
out
cmp
and
pop
popf
inc
push
enter
cmpsb
cmp
jecxz
movsb
scas
mov
cli
loop
repz
push
jmp
pop
cli
cli
dec
dec
fstps
mov
jo
cmc
int
jae
adc
and
insb
mov
adcb
loop
insb
sarb
xchg
lea
int
xlat
cmp
adc
mov
int3
pop
imul
pop
ret
int3
loope
lods
jne
xor
jge
sub
lods
test
ljmp
cwtl
inc
xchg
push
inc
pusha
cs
loope
aaa
addb
lods
adc
fsubs
mov
jp
repz
push
inc
cmp
mov
and
pop
xor
dec
push
fstpt
cld
test
xor
sub
or
daa
add
mov
aaa
lret
jno
mov
out
xorl
mov
outsb
popa
mov
or
negl
movsb
pop
mov
mov
xor
test
bound
filds
mov
sub
dec
les
mov
les
int
pop
addl
imul
sub
mov
mov
add
stos
es
xchg
push
test
fstl
cmp
xchg
xchg
lods
gs
adc
sub
xor
sub
mov
cmpsl
mov
mov
dec
cmp
add
mov
insl
xor
pop
in
stc
fisubs
sub
jmp
and
jp
pop
out
sub
xor
xorl
sub
mov
in
shr
xlat
and
xchg
and
gs
scas
inc
movsb
sub
or
dec
lock
insb
mov
int
pop
mov
mov
xlat
lods
lea
dec
xchg
jl
pop
fbstp
fwait
mov
cmpl
cltd
imul
pop
inc
pop
mov
pop
insb
jmp
mov
int3
adcl
mov
xchg
xor
jae
leave
dec
xchg
fstps
inc
out
sub
add
inc
pop
pop
in
lds
pusha
vsubps
jns
and
test
jno
imul
mov
xchg
cmp
jg
xchg
mov
or
insb
mov
cmp
mov
decl
inc
mov
push
fwait
xor
lods
add
pop
push
loop
jae
inc
pop
jns
into
mov
data16
push
inc
aad
push
hlt
and
lahf
mov
dec
add
inc
fwait
sub
in
add
fwait
shr
movsb
sub
in
int
and
fmuls
push
shlb
aam
sbb
push
sbb
jge
push
stos
mov
shrb
cmpsl
pop
xor
push
aaa
mov
mov
mov
mov
ljmp
mov
aas
push
lods
mov
sub
mov
inc
mov
push
movsl
pop
sub
lock
clc
out
inc
bound
shrl
cli
dec
adc
push
mov
movsl
mov
jno
loopne
cwtl
lahf
adc
lods
je
xor
in
push
mov
repnz
icebp
or
stos
je
in
sbb
aam
out
daa
das
sti
xlat
sbb
int3
jnp
push
call
mov
arpl
in
stos
adc
adc
mov
lods
sub
mov
sbb
jbe
imul
fidivl
cmpsb
jge
sbb
dec
cltd
sbb
out
gs
frstor
cmp
jne
data16
and
inc
fs
int
fisttpl
mov
sub
pop
shrb
pop
inc
daa
mov
mov
mov
cmpsl
push
fisubl
sbb
add
enter
testb
add
std
nop
add
add
jae
das
into
es
aam
sbb
xchg
pop
push
stc
jbe
das
jecxz
mov
mov
icebp
adc
test
aad
lea
and
cmp
or
jecxz
in
jb
lret
xor
mov
adc
inc
leave
insb
repnz
leave
roll
inc
mov
mov
cltd
shlb
js
cmp
test
or
repz
sarl
or
jne
test
pop
inc
cmp
pop
xchg
mov
and
into
nop
ds
or
insl
sub
int
pushf
cmp
pop
je
adc
xor
sbbb
in
add
adc
and
xchg
xchg
into
cs
imul
sbb
push
xchg
outsb
cwtl
inc
and
aam
lock
xchg
div
into
jne
sarl
in
jmp
sbb
sbb
mov
fsubs
test
in
repz
mov
ret
adc
or
fmuls
adc
cltd
cmp
addl
and
add
scas
shrl
aad
mov
jmp
jae
dec
jbe
pushf
out
sub
add
dec
xchg
lret
dec
dec
push
pop
fbstp
mov
add
ljmp
mov
sar
lret
into
lods
pop
pop
or
in
mov
add
and
sbb
add
out
pop
outsb
into
jge
loopne
cmp
out
lods
test
test
out
or
jle
mov
pop
sbb
inc
sub
rolb
sub
xor
fidivrl
adc
or
ret
sbb
add
pop
sbb
or
shrl
push
add
outsl
sub
pop
loopne
or
xchg
ret
pop
rcl
mov
popa
enter
fisubl
ljmp
cmpl
test
cmp
test
pop
adc
scas
add
pop
out
fdivrl
mul
lea
stos
xchg
jo
iret
fcompl
xchg
roll
push
sbb
sub
out
mov
rorl
xchg
dec
mov
or
cmc
outsl
cmpsl
or
frstor
fld
add
xchg
and
adc
outsb
cmpsl
or
pop
daa
lcall
xlat
jg
sub
loop
rorl
insb
xchg
insl
dec
ds
cmp
decl
loope
rcll
xchg
pop
stos
add
mov
cmpsb
mov
inc
fldt
jl
push
mov
fadds
test
pusha
adc
loopne
xchg
jmp
jg
and
testb
out
cwtl
pop
sub
pop
push
loopne
add
push
pop
sub
cltd
jo
int
fcompl
cwtl
adc
xchg
fiaddl
in
dec
pop
lahf
push
push
and
jecxz
scas
and
arpl
jmp
nop
and
push
xchg
movsb
sub
jbe
mov
mov
insb
jne
inc
es
insb
xchg
stos
add
push
pop
xor
pushf
and
test
pop
and
cli
inc
inc
mov
in
and
or
mov
adc
pop
frstor
inc
mov
jg
sbb
pop
pushf
hlt
mov
mov
push
arpl
cwtl
inc
dec
rcrl
cmp
cwtl
out
cli
call
push
outsb
in
shll
add
pop
mov
adc
push
add
dec
mov
int3
dec
aaa
sahf
mov
adc
dec
fldcw
aad
jb
and
dec
sub
mov
fwait
in
sub
lods
push
pop
push
mov
movsl
jb
cmp
xchg
arpl
adc
mov
add
mov
pop
popl
jmp
mov
cmp
inc
nop
add
mov
imul
mov
and
push
cmpsb
ret
adc
js
push
sbb
mov
adc
push
ja
shrb
es
iret
leave
ds
xchg
pop
movsb
xchg
lock
adc
ljmp
popf
scas
mov
test
fwait
aaa
sti
mov
sbb
sbb
out
xor
iret
jg,pn
jns
xor
testb
and
mov
pop
movsb
xchg
ljmp
mov
repnz
lret
rclb
jbe
jecxz
jle
movsl
cmpsb
outsb
mov
imul
mov
imul
jmp
stos
adc
ljmp
or
pusha
rcll
mov
int
adc
fldenv
aam
mov
les
stos
lret
sbb
sbb
repnz
or
pusha
sub
jo
ss
jnp
mov
pop
cld
ror
pop
in
xor
cmp
mov
movsb
cmp
int3
outsl
mov
repz
jae
scas
jg,pn
push
mov
cmp
lods
sbbb
outsl
fmul
aas
call
sub
int
pop
jmp
lcall
mov
cli
rcr
or
xchg
repz
std
jo
xor
jge
iret
sub
xchg
xor
loop
xor
push
je
js
or
cmp
dec
hlt
push
pop
inc
or
fcomp
pop
ja
les
insl
insl
iret
jl,pn
lock
fs
jno
jle
sub
cld
fadd
es
outsl
dec
pop
sub
push
push
repz
in
jl
xchg
sub
sarl
and
out
xor
push
mov
scas
mov
mov
testb
adc
inc
movsb
sbb
jno
mov
fidivrl
ljmp
je
les
cmp
add
rolb
lret
and
cmp
ret
test
ja
jecxz
sub
orl
jns
clc
mov
inc
push
test
fistpll
sbb
ret
lea
jne
pop
ret
ss
or
fdivp
and
push
mov
iret
inc
inc
popa
xchg
inc
xchg
cmpb
mov
push
push
push
dec
out
fisttps
or
jmp
insb
xor
inc
out
or
test
pop
hlt
cli
out
hlt
push
das
shlb
sbb
fs
jnp
jne
adc
cmc
xor
mov
cmpsb
clc
dec
push
sbb
or
jo
cmp
push
jo
jns
add
test
add
mov
pusha
jmp
mov
ret
jg
xchg
insl
sbb
jbe
test
outsl
mov
cmpsl
sti
xor
loope
or
scas
mov
iret
test
test
mov
lret
stos
pop
sub
pop
outsl
out
xor
insb
jle
fs
cvttps2pi
imul
scas
int3
lret
mov
pop
push
mov
insl
cmpsb
testb
add
test
andl
mov
mov
shl
jp
ja
roll
loop
adc
test
cmc
xchg
xchg
mov
hlt
ficoml
fbstp
enter
nop
enter
mov
push
pop
sub
dec
sub
push
xchg
addr16
jmp
mov
pop
pop
in
or
rcrb
xchg
cmp
pop
push
mov
dec
pop
add
lea
mov
add
or
loope
push
pop
int
sbb
jno
xlat
popa
pop
daa
ja
mov
and
push
fnstcw
mov
inc
fwait
mov
mov
mov
xor
dec
fiadds
mov
jg
add
dec
mov
lret
push
jne
cmp
pop
mov
add
xchg
sbb
fisubrl
or
cmp
in
or
lock
out
mov
mov
je
inc
cmp
xchg
aad
ds
fptan
ret
jb
in
not
je
gs
loopne
jb,pt
icebp
call
sub
rorl
ljmp
jbe
cmp
data16
into
push
mov
push
jmp
sbb
ja
std
xor
in
popa
pop
hlt
outsb
out
aam
jo
pop
scas
sub
push
dec
rcrb
ja
fsubrl
mov
stos
cmp
push
mov
mov
int
sub
cwtl
push
les
pop
sub
sbb
sbb
sbb
sub
jnp
mov
mov
add
outsl
mov
cli
js
in
mov
scas
xchg
pusha
in
mov
push
pop
push
cmpsb
mov
jne
mov
ret
loop
push
sti
cmp
push
sti
js
xchg
in
xorb
jne
jno
mov
outsb
stos
cmpsl
mov
or
mov
xor
lds
lock
imul
popa
dec
and
shlb
add
pop
dec
lret
and
div
out
lret
push
add
and
test
pop
adc
xchg
stc
dec
push
mov
rclb
add
add
adc
notb
push
dec
clc
mov
add
sbb
out
bound
dec
mov
cmp
jmp
stos
repz
leave
test
pop
rcll
and
scas
shrl
mov
inc
das
lea
les
cwtl
scas
shl
inc
hlt
jno
pop
fmul
enter
inc
adc
pop
lahf
cmp
mov
cmc
bnd
mov
cltd
mov
ret
xchg
mov
cmp
fwait
pop
mov
xlat
bound
ljmp
flds
iret
fisubrl
mov
cmp
or
iret
push
push
imul
imul
cmc
push
rcl
jmp
scas
lret
xlat
dec
cmp
xlat
and
test
fs
adc
shrb
lcall
ja
cld
cmp
aad
cmp
sti
insb
push
iret
bound
iret
mov
inc
cmp
inc
movsl
iret
loop
sbb
inc
adc
stos
push
or
cli
in
fs
cwtl
push
inc
insl
cld
and
rorb
mov
fnstcw
xor
loope
push
or
outsb
loope
pop
ss
movsb
adc
leave
lcall
sarb
or
jae
push
jmp
cmpsl
or
cmp
push
lods
ret
mov
mov
scas
pusha
pop
mov
xor
sbb
imul
divl
cmpl
push
adc
mov
fiadds
xchg
cltd
sub
cmc
and
in
out
adc
lods
cmc
pop
jne
pop
ret
fwait
or
sarl
rcr
fcmovu
andb
adc
cmp
dec
mov
xchg
dec
jecxz
add
cmp
in
cli
push
pusha
cmpb
jne
xor
fnstsw
popa
mov
pop
sbb
or
fwait
bound
jp
jp
pop
rep
pop
add
jmp
test
add
fimuls
and
push
xorb
fcoml
pop
cmp
inc
xchg
sub
dec
leave
lret
pop
cmpsl
es
icebp
adcl
data16
lret
jns
mov
dec
mov
and
lahf
mov
test
mov
dec
imul
push
lods
jmp
dec
mov
mov
stos
repnz
push
mov
mov
iret
push
imul
mov
and
mov
mov
in
in
pop
push
inc
imul
imul
out
mov
mov
and
cmp
addr16
push
adc
cmpsl
and
sahf
mov
pop
mov
mov
cmc
mov
adc
out
cltd
js
out
sbb
mov
fdiv
incl
outsb
adc
bound
mov
pop
sub
pop
jae
dec
call
sti
aad
sbb
roll
fnsave
and
je
cmp
mov
adc
aas
xorl
mov
inc
xor
and
inc
push
and
jne
push
push
in
in
cmp
outsl
scas
mov
pop
xor
cmp
aam
or
push
repz
sub
dec
negl
stos
mov
ljmp
push
mov
nop
pop
inc
pushf
stc
arpl
sub
in
dec
movsl
cmpl
inc
mov
sub
push
pop
xor
jne
in
dec
xlat
in
mov
push
aam
inc
jne
pop
xchg
or
test
push
mov
push
sub
xor
jns
outsl
out
cmp
ljmp
pop
mov
inc
cltd
cmp
mov
sub
js
jmp
pushf
push
mov
or
enter
mov
adc
cli
addr16
add
fldenv
sub
add
mov
int3
es
cmp
cmp
repnz
and
gs
xor
out
in
push
pop
lcall
ja
inc
out
push
or
fs
std
lcall
int3
push
pop
movsl
xchg
or
mov
xor
sub
mov
cs
mov
cwtl
xchg
add
push
decl
mov
pop
xor
pop
out
pusha
stc
xor
callw
cmovb
int3
out
mov
mov
popa
shlb
int3
fucom
xor
into
in
push
sbb
icebp
mov
push
add
mov
les
cld
iret
aas
std
test
scas
xor
push
movsb
fsubl
fnstsw
xchg
jnp
sub
xchg
ret
stc
adc
mov
mov
pop
stc
sarb
mov
push
or
sub
jle
fs
mov
aad
or
mov
out
rorb
ljmp
mov
pop
arpl
lahf
cmp
and
sbb
mov
ljmp
loopne
inc
lods
inc
cmp
sti
push
addb
cli
mov
mov
sub
jge
hlt
ds
mov
xor
xchg
and
xor
dec
movsb
adc
pusha
lcall
sbb
lds
std
jg
mov
xor
notb
test
inc
jno
loop
mov
inc
test
xor
add
adc
stos
pop
std
out
pop
mov
push
shl
hlt
mov
xor
mov
inc
outsb
push
sbbb
mov
push
mov
inc
push
andl
cmpsl
jle
hlt
int3
subb
lret
mov
add
xor
or
sbb
inc
test
repnz
jb
imul
xchg
loopne
lcall
inc
lret
sbb
outsb
push
loopne
jns
test
js
mov
xchg
cltd
jg
dec
jecxz
mov
and
mov
push
popa
sbb
popl
mov
cmp
aam
insl
push
arpl
aam
inc
arpl
stos
insb
loop
inc
push
inc
movsl
movsb
and
sub
add
sbb
xor
dec
jmp
test
leave
and
test
fs
addr16
add
insb
ja
xchg
sbb
fldl
jnp
cwtl
mov
pop
adc
inc
outsb
jnp
aad
push
in
scas
in
pop
inc
jae
and
xchg
pop
mov
mulb
dec
movb
xlat
in
filds
push
rorl
es
ljmp
ss
add
xchg
mov
jge
daa
cltd
mov
loopne
lret
sub
mov
sub
js
aaa
lcall
add
xor
sti
xor
mov
outsb
inc
add
das
sub
lea
add
push
add
push
ret
lock
out
cmpl
orb
mov
pop
jmp
arpl
ret
mov
jg
dec
sbb
mov
stos
clc
fadds
xchg
inc
pop
mov
and
xchg
sub
jae
dec
jne,pt
pushf
leave
fwait
or
push
mov
clc
insl
dec
loopne
ljmp
int3
cmp
jmp
mov
popa
mov
test
je
mov
jnp
xor
cmp
scas
mov
sub
jne
jg
mov
add
xchg
push
lds
shll
fisubl
push
cmc
xchg
ss
jecxz
or
cmp
mov
adc
pop
jno
addr16
xchg
in
ret
cmp
test
cmp
aaa
push
push
idivl
xchg
sub
dec
loop
aad
ret
mov
mov
push
cmpl
mov
test
subb
loope
xchg
xchg
ret
mov
test
rcl
xor
sub
xor
mov
push
cmp
jecxz
push
into
dec
push
bound
push
jae
push
fidivs
sub
cld
scas
and
or
jns
fisubrl
in
call
call
push
push
lret
dec
movsb
jno
sbb
insl
bound
push
loop
inc
add
mov
pop
ljmp
fs
das
and
ret
cmp
filds
dec
test
inc
cmp
popl
cmp
ljmp
inc
pop
rolb
dec
and
sti
stc
mov
jbe
notl
insb
outsb
dec
or
out
push
mov
fistpl
push
roll
dec
inc
jp
inc
xor
mov
cmp
fstpt
popa
jae
out
adc
pop
out
inc
lret
fildl
in
cwtl
push
push
and
sub
cld
loopne
jl
mov
int3
mov
mov
push
movsb
adc
imul
nop
mov
mov
aam
mov
sbb
mov
mov
out
arpl
xorb
sahf
addr16
fwait
mov
fndisi(8087
dec
sub
lret
push
mov
push
leave
subb
jns
out
int3
jl
ljmp
subl
bt
jns
insl
mov
cmp
xor
or
push
dec
xchg
movsb
mov
rcll
xchg
lret
xchg
jne
or
out
xchg
jne
outsb
lea
insb
js
dec
xor
mov
outsb
pop
adc
mov
subb
sbb
mov
sbb
xchg
cwtl
cmpsb
mov
dec
mov
or
sbb
or
mov
pop
mov
stos
push
loope
clc
lds
cmp
popf
aam
sahf
lea
in
cmc
jbe
clts
or
popf
lods
rclb
sbb
cltd
sub
push
add
xchg
sbb
sbb
inc
lahf
test
xchg
jo
push
ds
stos
xor
lea
xor
bnd
mov
aaa
jg
jmp
mov
les
ja
mov
cltd
mov
adc
ror
test
and
outsl
add
xor
testl
lret
jmp
cld
aam
pop
fimuls
sub
outsb
dec
enter
scas
dec
js
mov
lock
xchg
lret
cmpsb
add
mov
pop
fstps
pop
sub
pop
pop
and
shll
inc
jb
bound
sbb
xchg
ljmp
roll
and
adc
push
push
xor
pusha
cmc
leave
je
mov
jnp
jno
jnp
fcmovu
pop
xor
stc
push
and
dec
imul
xor
inc
test
lods
xchg
ds
ja
out
movsb
mov
cltd
sub
inc
mov
adc
push
cltd
jbe
or
cmpsb
cli
sbb
sub
ret
adc
pushf
mov
jns
insl
jge
push
in
pop
aad
inc
inc
add
add
add
fwait
mov
movsb
test
out
loope
xchg
mov
ret
insl
or
in
arpl
jno
or
roll
push
decl
mov
jge
dec
or
sbb
and
mov
lret
ret
lcall
or
or
scas
popa
or
icebp
mov
push
sub
lea
pop
into
je
lds
enter
and
sbb
and
lods
fistps
pusha
xchg
sahf
lods
cmp
ret
lods
xor
cmp
push
lcall
popa
insb
jg
dec
popa
sub
jne
xchg
adc
sub
test
ror
int
aas
cld
mov
mov
pop
movsl
in
fsts
sbb
es
pusha
out
xor
movsl
arpl
out
insb
bound
fildl
jo
cmp
mov
xchg
jmp
add
mov
cmc
fldenv
stos
nop
add
outsb
jns
pop
aam
lcall
ss
push
mov
lods
cmp
inc
jns
xchg
sub
inc
aas
cmp
dec
mov
divl
in
loope
jno
insl
cmp
xchg
inc
leave
sub
leave
inc
dec
ret
call
test
std
push
shll
jae
lret
add
repnz
push
fidivrs
orb
push
sbb
daa
push
xchg
ja
sti
mov
clc
stos
xchg
out
cmpsb
orps
add
sub
and
pop
jg
push
idivl
fiaddl
int3
stos
mov
pop
cltd
test
jb
add
xor
enter
out
mov
mov
pop
lahf
xchg
or
addr16
xchg
aam
dec
sub
pushf
sub
cs
sbb
adc
sbbb
jg
inc
xor
test
sahf
or
ja
pusha
cmp
lock
mov
jns
xor
lahf
xchg
sub
sbb
dec
cld
push
fidivl
add
mov
ss
shrb
mov
inc
outsb
sbb
adc
mov
movsl
insl
cwtl
inc
aaa
mov
lahf
and
fisubs
xor
mov
xchg
mov
scas
sbb
mov
cwtl
movsl
gs
cli
xchg
hlt
ret
iret
inc
inc
mov
in
add
add
jno
jmp
cs
inc
xchg
mov
ret
das
imul
mov
adcb
push
jno
push
andnps
ret
icebp
repnz
subb
fcos
stos
pop
push
hlt
xchg
rolb
rclb
ja
jo
add
in
lcall
pop
sub
test
nop
mov
inc
and
pop
push
repz
stos
or
inc
push
and
adc
add
scas
inc
push
outsb
push
cmp
mov
xchg
aaa
cmp
in
stos
stc
and
in
push
add
jmp
ret
int
cmp
mov
pop
jnp
or
mov
mov
push
mov
xor
and
inc
mov
mov
imul
clc
xor
jbe
decl
jns
jge
flds
cli
or
jb
into
xlat
sbb
popf
aad
or
rcll
xor
sub
mov
pop
popf
jb
cld
aaa
push
je
fisubs
iret
xor
xorb
arpl
cmp
inc
test
push
pandn
leave
mov
in
xchg
mov
cs
testb
xlat
lods
lahf
fstpl
jno
out
lahf
iret
loop
dec
add
stos
cld
xchg
hlt
je
sub
popf
xor
pop
les
jp
xchg
push
fs
push
lods
arpl
pop
outsl
rcr
icebp
loopne
push
stc
stc
mov
pop
je
mov
es
rorl
xchg
loope
test
pop
jecxz
or
cmp
sbb
add
dec
push
push
add
push
mov
fbld
dec
or
mov
scas
js
ret
xchg
loop
cli
xor
mov
das
or
push
clc
mov
mov
out
dec
aas
push
rcl
mov
mov
pop
mov
adc
les
adc
dec
loope
push
es
sbb
sub
call
movsb
push
sub
int3
and
xor
ja
xchg
inc
push
mov
arpl
jg
dec
jno
push
push
mov
nop
mov
add
repnz
push
shlb
mov
jmp
xor
mov
stos
fs
mov
mov
outsl
fwait
or
lods
faddl
lahf
pop
pop
out
mov
out
mov
or
aas
repnz
mov
sub
ret
mov
xchg
cltd
out
cli
stos
ljmp
mov
xor
imul
lcall
inc
fisubl
or
dec
mov
hlt
into
test
stc
mov
jp
out
fistps
mov
mov
fnstsw
pop
lds
inc
lods
inc
xor
cmp
cmp
mov
imull
mov
movsl
clc
or
pop
jns
out
shrl
xchg
dec
mov
and
ss
imul
loop
test
mov
cmp
xlat
pop
jle
shrb
mov
and
xchg
cmc
pop
inc
and
xor
mov
xchg
das
push
push
push
and
cmpsl
pop
aaa
xchg
adc
mov
xor
sub
lret
ss
popa
shrl
dec
pop
lret
ja
mov
into
mov
jge
xor
mull
clc
js
lcall
ljmp
mov
or
lods
je
aaa
mov
rcl
sbb
lea
ja
cld
mov
inc
repnz
scas
aas
and
in
add
mov
cld
adc
jae
imul
cmc
in
pushf
inc
xchg
mov
push
mov
jg
adc
mov
push
pop
movsb
add
or
ss
xchg
rcll
int
xchg
adc
std
into
push
dec
testb
stos
adc
ret
lods
mov
add
loopw
push
jae
and
rolb
mov
lret
out
std
sbb
inc
sti
cli
push
mov
insb
mov
mov
sbb
fs
aad
insl
pop
gs
pop
add
ficomps
sub
adc
push
stos
add
sbbb
pushf
jg
popa
pop
es
mov
ja
rcrb
mov
and
add
in
inc
add
xor
mov
add
lds
test
cmp
or
mov
jnp
push
inc
push
outsb
inc
xor
inc
cmc
xchg
imul
sub
cwtl
or
lea
jns
jnp
add
mov
decl
mov
adc
xor
lds
pop
repnz
daa
hlt
fstl
inc
push
dec
lcall
jge
ror
or
insb
push
out
sti
out
cmp
push
push
stc
xor
mov
add
test
push
aad
xchg
add
imul
push
fnstsw
test
xchg
jae
ret
adc
push
dec
stos
test
dec
pop
mov
dec
inc
in
mov
movswl
pop
cmp
push
cltd
ret
sbb
jmp
pop
mov
nop
push
arpl
shlb
pop
je
pop
imul
in
mov
fbstp
or
mov
es
cmpsl
jb
mov
cli
and
ret
cmp
scas
sbbl
push
scas
push
dec
xchg
cmpsl
das
add
in
cmp
sub
adc
and
ss
push
fisttpl
jmp
push
decl
pop
and
or
arpl
pop
ror
fndisi(8087
xor
jae
jb
dec
ret
stc
xlat
xchg
ja
mov
loopne
dec
std
rcrb
ffree
adc
dec
idivl
mov
adc
insb
xchg
stos
inc
setg
xor
mov
and
push
repnz
js
jecxz
mov
inc
lahf
xchg
push
push
xchg
dec
in
inc
jae
cmp
int3
shl
xchg
insl
jge
shr
call
xor
hlt
mov
clc
jle
pushf
mov
ffree
and
inc
arpl
insb
outsb
jge,pt
xor
sub
inc
push
int3
cwtl
stos
icebp
mov
call
push
bound
test
pop
push
xor
xchg
es
cmp
and
fdiv
mov
pop
in
test
sub
xchg
pop
pop
jge
lcall
jecxz
mov
jbe
cmp
fs
orb
bound
lds
mov
or
inc
jmp
sbb
push
lods
and
push
xor
jmp
add
cs
adc
inc
jge
andl
cmpsb
pop
add
push
ret
ret
in
aad
movsl
into
in
loop
pop
hlt
mov
xorb
ja
pop
ss
mov
mov
call
in
mov
sub
mov
and
sub
jo
xor
aad
adc
mov
js
adc
fucomi
test
xchg
dec
sub
sub
mov
sbb
mov
push
fs
cmp
or
or
mov
sub
or
test
rcll
mov
push
fidivl
outsl
arpl
push
mov
jp
cmp
or
sbb
pop
test
hlt
inc
or
stc
adc
rcrl
pop
sub
xor
mov
test
dec
gs
add
pop
loopne
push
fwait
fwait
cmpl
mov
add
sbb
mov
mov
mov
outsb
xchg
jo
xor
xor
in
push
mov
les
ja
cmc
xchg
gs
ficoms
into
cmp
lods
adc
dec
loopne
add
cld
test
ja
mov
fisubl
pop
jl
push
xor
lods
sbb
out
orl
and
jns
shl
movl
test
xchg
xchg
sub
sbb
loopne
or
or
push
jne
sarb
leave
idivb
shrl
xor
add
cmp
pop
add
cmp
mov
sub
jbe
push
shll
jne
mov
sbbb
push
sbb
dec
lods
inc
mov
fwait
push
sub
pop
sub
in
rclb
fs
sub
enter
orl
or
cmp
lds
cmpsb
jg
nop
add
mov
sub
cmp
idiv
push
or
mov
in
dec
into
aam
dec
xor
leave
push
scas
sub
adc
aaa
addl
imulb
mov
in
push
dec
rcrl
adc
jmp
cmc
or
dec
xchg
mov
ljmp
sub
and
and
subl
xor
xchg
sub
in
push
call
call
lcall
pop
les
aaa
aad
rcr
ljmp
xchg
popa
cmp
push
lret
xlat
clc
push
and
push
adc
mov
jo
fistpl
sbb
sub
sbb
mov
xor
push
adc
mov
fs
jbe
rcll
lods
jmp
es
or
mov
bound
sub
das
adc
lea
adc
test
mov
lea
mov
dec
or
adc
rcll
sub
fidivl
jne
test
fstp
stc
mov
jae
mov
test
jae
sbbb
sbb
mov
xchg
ja
lcall
lret
mov
push
lret
cmp
xor
test
pop
not
mov
sub
call
mov
mov
dec
test
xor
clc
and
add
pop
cmp
fcmovnbe
aad
dec
mov
mov
in
inc
or
adc
or
sarl
jmp
int
fucomi
arpl
jg
cwtl
mov
adc
shlb
movsb
pusha
in
push
orb
scas
ds
pop
cltd
fwait
mov
mov
mov
cli
pop
mov
shl
cmp
mov
repnz
loop
push
mov
add
rcrl
bound
fiadds
and
add
mov
jns
dec
mov
out
idivb
nop
push
leave
scas
add
addr16
fwait
or
mov
sub
xor
stos
sbb
fdivr
cld
xor
xor
dec
add
jmp
push
jnp
jmp
clc
pushf
mov
xchg
arpl
repz
jle
cmp
movsl
mov
pushf
xlat
mov
xchg
jnp
lods
fistl
lret
dec
xor
xchg
fidivl
stos
xchg
or
in
xor
scas
cltd
pop
push
jmp
mov
mov
mov
push
test
mov
imul
scas
or
sbb
jo
rolb
sub
andl
inc
add
out
test
arpl
movsb
or
or
scas
leave
cmp
inc
mov
cmp
mov
push
xor
push
jb
in
jg
mov
stos
mov
clc
hlt
cmp
in
imul
jnp
mull
mov
in
push
jmp
add
cmpsl
sti
dec
push
int3
rorb
rcl
adc
sbb
sbb
divl
fwait
fcmovu
push
push
pop
shr
cmp
sub
arpl
mov
ret
mul
movsb
aas
jge
and
movsb
cmp
jb
dec
pop
push
lcall
or
mov
loop
push
mov
clc
rcll
push
push
std
outsb
mov
mov
jmp
cmp
push
jb
arpl
clc
lcall
mov
fiaddl
cmp
cmp
and
add
jno
je
fsts
sbb
pop
xchg
aam
sub
inc
inc
jmp
jl
add
movsb
aaa
arpl
insl
addl
cmp
iret
daa
mov
add
add
call
jge
mov
sub
loope
rep
test
sbb
jle
insb
push
xchg
xchg
mov
rcl
sbb
and
test
pop
push
push
xacquire
scas
pop
rorb
pusha
and
movsl
xor
lods
adc
loope
add
and
int3
jno
push
inc
push
adc
xor
fcom
push
stc
mov
and
lret
fadds
mov
xor
adc
xchg
dec
xor
mov
push
jle
dec
dec
dec
push
outsl
dec
addr16
imul
push
add
dec
mov
jno
inc
xorb
and
andl
sub
push
xchg
mov
xchg
adc
xlat
out
mov
iret
jnp
in
mov
hlt
mov
sbb
ret
into
insl
or
enter
fucom
push
mov
popa
aam
lods
fsubp
dec
stc
and
mov
mov
xor
inc
dec
out
and
aad
fcomp
inc
cmpsl
arpl
ret
push
mov
mov
insb
add
das
dec
call
push
push
dec
repnz
and
xchg
sub
jecxz
sbb
dec
js
and
sub
in
and
mov
pop
xchg
daa
ljmp
mov
sub
nop
xchg
decl
adc
aam
rolb
decb
sub
repnz
mov
pushf
dec
adc
xor
out
pushf
and
mov
and
fsubl
cmp
stc
xor
inc
xchg
mov
ss
push
pop
xchg
sbb
f2xm1
out
scas
arpl
shl
les
mov
mov
out
movsb
xor
repz
insl
cltd
sahf
das
add
ss
jne
repnz
clc
dec
mov
cmc
cmpsb
hlt
outsl
test
fsubrl
pop
jg
es
js
adc
js
inc
mov
xlat
sbb
loop
sub
xor
cmc
push
das
movsb
mov
ret
aas
fstl
stc
mov
int3
mov
add
addr16
sbb
das
negb
push
jmp
jno
sahf
imul
or
test
jns
pusha
les
notl
popa
fcompl
aad
push
mov
sbb
cld
repz
inc
cli
xor
add
mov
icebp
jl
loop
sub
mov
das
mov
xchg
push
mov
or
jecxz
push
jl
repz
xor
iret
cmpsl
rol
mov
xchg
dec
out
stos
jecxz
clc
cmpsb
add
push
adc
scas
push
jmp
jb
dec
leave
mov
pop
mov
movsl
and
popa
shlb
inc
outsl
cmp
cltd
lahf
add
xor
xlat
xchg
andl
fldl
mov
outsl
mov
int
inc
or
data16
dec
inc
lds
pop
movsl
das
mov
or
cli
rcrb
out
mov
jge
dec
scas
clc
repz
insb
mov
fnstenv
lock
jecxz
ss
cmc
push
jne
sbb
aam
jns
ljmp
xor
push
aas
jle
ret
xchg
pop
mov
ja
daa
gs
in
and
cmp
insl
fidivs
mov
popa
dec
sub
rcr
pop
ret
sub
xor
push
mov
or
mov
shrb
arpl
pop
out
pop
sbb
pop
xor
clc
loop
lahf
or
xchg
cmp
mov
lods
cmp
arpl
add
inc
pop
sbb
ja
pop
int
lcall
xor
xchg
cs
mov
add
fiaddl
arpl
std
xor
iret
in
nop
dec
aaa
mov
fldl
pop
push
and
fsubrs
jnp
sub
nop
lret
sub
sbb
mov
addr16
in
pop
dec
jp
cwtl
aad
xlat
cmp
orb
cltd
sbb
daa
mov
pop
jmp
push
jecxz
cs
dec
lret
pop
sahf
je
sub
ret
mov
inc
push
jne
int
jecxz
inc
outsb
pop
out
mov
dec
pop
fisubl
pop
fadds
sub
lds
inc
clc
in
or
fdivs
stc
cmpsb
and
nop
cmp
and
testl
inc
stos
daa
fisttps
add
in
gs
and
mov
xchg
loopne
pop
imul
rcrl
mov
inc
mov
cld
lods
sbb
add
xor
xor
fdivs
inc
inc
add
aaa
jns
pop
pop
add
sub
lahf
mov
dec
push
rorl
leave
ret
loope
enter
lahf
je
xor
fsubrl
ljmp
imul
inc
popf
and
out
pop
aas
aad
dec
pop
jge
push
add
notl
ljmp
jge
aam
jne
pop
addb
xchg
xor
push
in
mov
inc
mov
stc
dec
add
lea
imul
sub
sti
or
or
push
in
ret
mov
sbb
ss
xlat
frndint
jmp
mov
cmpsb
push
pop
popf
pop
test
cmp
jmp
arpl
pop
movsl
jg
mov
repz
adc
or
xor
mov
add
add
jb
mov
xchg
mov
out
and
popa
inc
inc
and
outsb
mov
int
jecxz
call
xor
cli
jl
and
shll
inc
jle
pop
fs
sbb
outsl
jmp
push
cmpsb
pop
pop
add
adc
lds
pop
xchg
jae
adc
pop
aad
sbb
loope
xchg
jo
push
test
mov
lahf
addl
jo
lods
mov
jmp
fs
cs
inc
in
mov
addr16
pop
sbb
mov
xchg
jle
mov
test
fcoms
cltd
mov
jns
sub
mov
scas
stc
add
dec
mov
inc
out
dec
ss
mov
jl
fldcw
sub
inc
addl
popf
add
push
dec
hlt
cmpsl
or
adc
popa
inc
fwait
sub
cmp
xchg
add
mov
mull
fists
mov
pop
mov
dec
je
push
ret
pusha
dec
ja
fldenv
xchg
jge
xchg
or
xchg
dec
repnz
inc
sbb
adcb
sub
adc
and
loope
push
xchg
pop
cld
mov
cli
sbb
inc
push
ss
and
inc
mov
xchg
mov
pop
jo
pop
xchg
xchg
and
adc
pushf
cmpsl
cld
hlt
inc
add
jb
cmpsb
loopne
mov
cli
ficoml
sub
xor
jecxz
notb
jl
ss
inc
into
data16
jecxz
out
xchg
out
adc
fdivrl
std
mov
lcall
push
lea
shrb
mov
sbb
pop
pushl
mov
mov
gs
cmp
jno
mov
test
cmp
sub
cmc
int
ret
dec
add
mov
lds
jge
popa
or
sub
pop
into
shlb
push
ret
in
pop
pop
clc
dec
mov
mov
push
mov
ret
roll
lods
jg
pop
test
push
jne
jb
sbb
sbb
out
out
push
push
mov
pop
add
push
inc
shll
repz
push
adc
mov
in
out
inc
mov
xor
les
sub
clc
push
ret
cwtl
jmp
dec
xchg
cmp
aad
cmp
pop
push
loope
pop
push
ljmp
fdivl
out
pop
repz
jno
test
pop
out
push
int
or
in
std
shlb
push
popf
sarl
stos
sub
jae
lods
pop
pusha
out
add
sti
loop
je
cmpsl
and
xchg
jns
fstps
dec
cltd
shlb
xor
out
jle
ds
dec
inc
pop
inc
pop
daa
mov
xlat
pop
mov
cmp
inc
sbb
mov
ret
lds
or
insb
cld
and
add
shr
pop
sub
adc
insb
cmc
sbb
or
inc
jp
mov
xchg
jge
ljmp
push
int3
in
fisttpll
cmc
adc
andl
mov
push
aaa
stos
or
jle
ljmp
pop
cmp
sbb
loopne
sub
inc
jb
adc
js
bswap
sub
out
loop
test
jg
mov
scas
pop
movsl
fsubr
push
in
mov
cmp
es
int
scas
negb
add
insl
mov
jae
sbb
movsb
lock
and
in
movsl
cmp
nop
pushf
test
push
pop
fidivrs
mov
fwait
lock
dec
jle
and
stc
sub
push
bound
sub
lahf
rcrb
pop
test
stos
bswap
and
outsb
rcrl
sub
call
push
pop
pop
sbb
fidivs
push
cltd
jb
add
aas
sub
inc
test
leave
jae
iret
xor
cmp
or
dec
aas
shll
rol
xchg
sbb
push
push
int3
add
dec
lret
jbe
addr16
jns
push
cmpsb
ret
or
jnp
inc
inc
pushf
rep
mov
mov
cwtl
mov
sub
add
ret
mov
push
dec
sub
jl
scas
cli
or
std
add
pop
lcall
dec
stc
sbb
jle
sbb
pop
xor
decl
mov
jmp
ret
fidivs
jp
test
add
and
and
outsl
push
pop
pop
aam
hlt
xchg
mov
subb
int
mov
jb
in
nop
mov
addl
les
gs
fstl
xor
push
adc
or
adcl
arpl
mov
ljmp
cmpb
and
pop
sarl
xor
xor
enter
xchg
out
neg
mov
test
fidivrl
pop
mov
jecxz
cmp
imul
aad
cmp
test
pop
and
adcb
xor
xor
fisttps
pusha
insb
mov
mov
sbb
mov
stc
shll
adc
inc
adc
movsl
repnz
push
dec
rorl
xor
aad
aaa
sbb
nop
add
pop
sarb
jge
test
dec
cmp
movsb
or
and
fcmovnb
cmpsb
pextrw
ror
arpl
call
cltd
not
popf
mov
dec
adc
aas
leave
popf
into
outsb
add
cld
mov
push
xchg
mov
cmpsb
and
fstps
ds
dec
in
mov
mov
and
scas
stos
rcll
pop
aaa
or
mulb
push
add
shll
adc
and
rol
dec
jae
xorb
mov
divb
inc
lods
inc
xor
inc
sti
lahf
popf
ss
stc
xchg
inc
xlat
out
clc
jae
xchg
lret
add
rol
mov
dec
cmpb
into
xlat
or
add
cli
movsl
inc
cmp
mov
in
testb
test
cwtl
out
dec
loopne
jb,pt
test
lds
sub
test
lock
das
in
sub
sbb
add
stos
into
sbb
lock
mov
fstpt
lds
inc
adc
jae
aaa
mov
lret
xchg
in
sub
fimuls
mov
aam
hlt
add
gs
xsave
mov
pop
enter
in
lret
mov
es
pop
fwait
mov
xchg
test
jp
push
out
mov
sub
outsb
xchg
sub
push
and
sub
clc
mov
jge
test
dec
scas
push
lret
stos
mov
xchg
movsb
push
xchg
and
adc
jbe
mov
or
pop
rcrl
inc
cmp
in
mov
mov
push
jmp
ret
push
xchg
rol
adc
je
cmp
pusha
inc
arpl
pop
push
out
leave
sar
and
in
sbb
int
in
pop
shlb
cltd
inc
dec
add
add
fsubrp
cmc
inc
mov
in
cltd
cmp
scas
push
mov
mov
jo
shlb
movsb
inc
mov
mov
and
aas
pop
pop
je
andb
rclb
dec
inc
pop
popf
push
call
popf
mov
adc
mov
add
call
in
jg
je
mov
je
cmc
or
cmp
fists
mov
dec
xor
mov
sub
xchg
ss
cmp
cmp
inc
pop
fldt
adc
movsb
nop
aas
stc
leave
jg
dec
xchg
xchg
in
adc
adc
push
cwtl
xor
jmp
fidivs
push
ss
sub
mov
sub
sub
loope
fwait
call
and
test
lea
lea
notl
lcall
mov
mov
iret
outsl
stc
aas
xchg
in
push
add
icebp
jb
std
cmp
pop
inc
pop
mov
jp
aas
adc
mulb
xchg
or
aam
pop
fnstsw
shll
xor
arpl
popf
inc
dec
bound
xorb
jle
test
int
std
cld
aam
fs
outsl
addb
lcall
or
or
mov
stos
dec
dec
dec
ret
mov
nop
jne
std
rorl
stc
lock
sti
add
nop
fistpll
pop
lock
aam
pop
hlt
sbb
xchg
dec
and
mov
rorl
cmp
xorb
lahf
movsl
sahf
push
dec
jno
inc
ljmp
pop
shl
mov
fstps
cmp
mov
je
repz
mov
jle
sub
sbb
sbb
lds
pop
loopne
test
or
mov
in
fistpl
imull
mov
popf
mov
mov
cli
int3
push
cli
les
push
jb
stos
nop
pop
push
and
fs
stos
loop
cs
adc
pop
or
arpl
fdivrp
icebp
inc
adc
rcrb
lar
sti
arpl
dec
loope
lds
test
inc
mov
lock
inc
add
aam
jnp
add
aas
pop
gs
mov
in
dec
and
push
pop
loop
mov
cs
pusha
pop
jne
pop
xorb
sbb
or
mov
add
mov
imul
cli
mov
pop
lods
subl
sbb
pusha
xor
jge
fdivr
jbe
cmp
inc
push
in
movsl
icebp
pop
repz
pop
orb
sbb
cmpl
inc
push
mov
js
mov
cmc
out
cmp
lcall
test
push
push
and
mov
fidivs
mov
pop
or
and
pop
push
je
pushf
xchg
cmpsl
pop
adc
push
cmc
divl
add
cld
jo
imul
in
out
or
push
shll
cmpsb
mov
push
rcll
sbb
adcl
xchg
mov
and
xorb
lret
aaa
xor
jnp
mov
push
pop
pop
pusha
xchg
xchg
or
in
pop
rolb
cmp
or
lcall
aad
jno
cmp
fldl
push
push
leave
xor
repnz
stos
sub
dec
jl
adc
add
mov
mov
inc
cld
pop
roll
add
dec
mov
fistl
daa
cwtl
fadd
lahf
mov
xchg
scas
into
fnstsw
fnsave
cltd
pop
dec
mov
sbb
cmp
jmp
cs
or
xchg
sub
movsb
jge
cmp
gs
ljmp
sbbb
add
test
add
cmp
xor
testl
lret
pushf
xlat
popf
pop
cmp
mov
std
mov
stc
mov
or
mov
cmp
mov
xchg
cmpsb
add
int3
dec
fwait
cmp
push
loopne
adc
addr16
dec
pop
lods
xchg
mov
cmpsb
push
cmpsb
int
cmc
add
push
adc
enter
pop
jge
jmp
jmp
inc
test
adc
push
xchg
or
repnz
mov
mov
mov
push
gs
fimull
mov
scas
xor
inc
std
adc
xchg
dec
mov
idiv
subb
loop
movsl
sti
pusha
stc
push
cmp
sub
sbb
mulb
or
call
push
dec
xchg
cmp
dec
mov
push
insl
mov
push
ret
mov
push
push
ror
fidivrs
sahf
push
cmpsb
xchg
xchg
gs
pop
xor
jne
out
imul
aas
bound
les
dec
sub
jne
push
adc
pop
mov
push
inc
lahf
dec
enter
loopne
sub
call
mov
cmp
sub
pminub
dec
inc
cld
adc
adc
repnz
cli
sbb
loope
mov
adc
xchg
mov
sarl
rcll
out
out
pop
je
mov
mov
adc
dec
mov
data16
fucomp
ss
mov
fcomps
mul
pop
mov
nop
std
cmp
jg
or
in
xabort
leave
mov
es
movsl
mov
imul
pop
mov
js
add
dec
ja
mov
repnz
lock
cmp
idivb
fs
lret
out
mov
js
sub
sub
cmp
fmull
mov
addr16
sbb
dec
pusha
inc
push
fwait
out
or
mov
test
ljmp
movb
inc
lods
fdivr
push
lods
fnstenv
and
adc
xchg
jg
or
movsb
outsl
fisttps
cli
cmp
xor
pushf
dec
scas
iret
dec
xchg
adc
inc
addb
mov
fsts
sbb
mov
xchg
dec
cmpsl
cmp
pop
push
fidivrs
jne
sbb
shlb
mov
jb
das
pop
mov
js
mov
js
or
ret
testb
lods
push
addr16
jge
loope
mov
shll
mov
mov
clc
divb
sub
test
cli
pop
pusha
in
outsb
out
sub
sahf
inc
xlat
or
ret
jp
inc
cmp
push
sbb
lds
jmp
imul
push
repnz
pusha
push
shr
shlb
in
testb
jnp
add
push
push
cmc
aaa
push
sub
fistps
daa
cwtl
pop
pop
inc
xchg
cwtl
mov
addl
xchg
mov
dec
aaa
sti
inc
jns
mov
repnz
mov
lcall
xor
cmpsl
xlat
int3
xchg
scas
adc
push
das
mov
mov
movsb
jl
pop
sub
cmp
lcall
fnsave
or
xor
shl
sub
mov
jnp
scas
push
jo
movsb
ja
iret
adcl
push
icebp
cltd
repz
or
or
lret
int
in
in
sub
mov
push
add
push
les
call
gs
cmp
aaa
jmp
lods
iret
cmp
inc
cmp
push
lods
lahf
and
out
xchg
cld
repz
jae
cmp
shll
loop
jno
stos
stc
mov
imulb
mov
aaa
cmp
daa
icebp
sub
jbe
rcl
pop
inc
cltd
inc
add
cmp
mov
cmp
push
pusha
jno
jne
mov
inc
xchg
inc
es
cmp
sar
clc
jne
push
call
imul
imul
mov
cmp
jecxz
in
and
dec
cmpsl
or
jl
shrb
xchg
add
push
popf
addr16
insb
jno
hlt
inc
mov
xchg
filds
scas
pop
adc
and
and
jno
cmp
push
lret
push
mov
sub
imul
dec
sbb
sbb
mov
mov
xchg
dec
mov
mov
hlt
push
insb
popa
xlat
adc
fmul
and
lret
inc
out
ja
xlat
pop
push
negl
mov
cld
sub
jbe
xchg
das
inc
cmp
sub
aaa
inc
mov
xchg
stc
sub
jne
xchg
insb
xchg
cmpsb
xchg
mov
fidivrs
xchg
out
rorb
out
xlat
xlat
xchg
loope
cmpsl
adc
adc
ficomps
lret
push
sub
mov
push
fwait
aaa
popa
ret
rcll
mov
lods
dec
dec
pop
mov
mov
call
loopne
push
js
and
stc
mov
pop
mov
xchg
or
and
xorb
or
push
mov
and
sub
adc
outsl
movsl
and
add
xchg
divl
mov
jo
mov
or
std
in
loope
idivl
mov
inc
pop
lahf
je
outsl
lock
mov
pop
and
stos
xchg
xor
dec
in
xor
push
imul
push
scas
into
cmp
and
ss
sti
sbb
mov
bound
adc
adc
aad
mov
jbe
hlt
loope
and
add
pusha
mov
ror
cmp
adc
push
pop
fsts
pusha
test
xchg
mov
inc
sub
ret
lds
mov
lahf
jns
pop
pop
inc
xor
mov
jb
sub
cmp
out
lods
insb
rcrl
add
push
insl
dec
mov
stc
sbb
das
aam
into
adc
add
mov
cltd
adc
push
cmpsb
js
jnp
rcll
subb
roll
int3
pushf
popf
fwait
jp
mov
xor
inc
xchg
mov
or
int
rcll
cmpsl
imul
inc
outsb
scas
pop
iret
mov
lret
adc
fbstp
push
mov
sti
out
mov
or
cmpl
clc
add
ret
xor
xor
stos
scas
and
leave
and
push
call
pushf
xchg
or
and
pop
pop
sbb
xchg
ds
loop
ret
stos
test
pop
push
cmp
nop
addb
sarl
cmpsl
out
add
push
cmc
inc
fidivrs
push
ja
adc
cmc
jle
sbb
enter
add
aaa
pop
addb
and
loopne
jnp
imul
adc
add
sub
outsb
in
inc
xchg
sub
test
pop
add
cmp
lock
sahf
pop
test
mov
xor
jns
push
call
fisttpl
add
mov
xchg
and
add
sub
mov
imul
sbb
or
jecxz
inc
or
cmpl
push
dec
in
clc
fs
mov
addr16
adc
jns
and
jg
pop
shrl
xchg
dec
out
mov
cmp
push
dec
insb
add
aas
leave
and
imul
xor
sub
mov
dec
cltd
dec
xor
xor
dec
jo
bound
inc
sub
push
mov
xchg
mov
mov
dec
test
xchg
test
gs
dec
test
inc
cmp
das
addb
ja
js
xor
hlt
adc
cmp
aad
lcall
and
out
inc
mov
add
stc
cwtl
xchg
mov
jno
jb
cmpsb
add
jno
xor
adc
xor
and
cmp
add
push
out
and
cli
repz
jno
lahf
dec
mov
or
mov
mov
adc
inc
ss
xchg
mov
les
test
mov
sbbl
lret
xchg
jmp
sbb
repnz
imul
or
loop
jle
and
sbb
das
out
inc
daa
xor
adc
fadds
mov
aam
dec
pop
in
mov
pop
ljmp
decl
cmpsb
enter
data16
leave
test
sbb
rcrb
out
movsb
jle
xor
adc
pop
or
sbb
insb
lcall
push
mov
roll
loope
pushf
sub
nop
jmp
add
nopl
and
mov
aaa
fildl
aam
imul
mov
sub
test
stc
pop
es
add
mov
addb
sub
xchg
lods
xlat
inc
inc
push
xchg
xor
ret
fiaddl
jno
loope
cmp
bound
push
adc
mov
lret
int
dec
pop
shlb
cmp
adc
bound
stos
movsb
xor
test
sarl
out
mov
adc
inc
mov
pop
inc
cmc
adc
fmull
jbe
push
cwtl
mov
iret
pop
mov
adc
es
lock
shlb
jmp
dec
int3
pop
jno
push
add
movsl
xor
stos
sarb
rol
sub
sub
push
das
mov
mov
push
add
xchg
daa
out
subl
adc
outsl
jno
lods
adc
inc
jle
mov
mov
xchg
pop
nop
xorl
cmp
jae
xchg
fwait
clc
xor
popa
cmpsl
imul
sub
lds
movsb
dec
loope
fildl
sub
xor
out
loopne
mov
jecxz
sub
mov
jbe
jbe
lahf
rep
push
push
sbb
negl
shlb
lds
dec
or
bound
dec
jle
mov
aas
fstps
inc
xchg
sub
cmp
hlt
and
xor
aaa
jl
sub
scas
push
xchg
adc
and
jle
pop
inc
inc
mov
sub
jo
shlb
inc
les
adc
mov
shlb
inc
leave
inc
mov
jp
mov
ds
sub
enter
xchg
dec
jg
sbb
xchg
fisubl
xchg
icebp
testb
sub
pop
es
push
fisttpl
xor
cwtl
in
pop
ljmp
ja
xor
test
rep
mov
pusha
in
lahf
xor
enter
stc
cwtl
mov
sti
enter
inc
fcompl
jno
ret
movsl
scas
push
out
imul
xchg
jns
call
stc
jae
pop
xchg
fldenv
xorl
loop
and
out
inc
rolb
sub
mov
insb
mov
cmp
cmc
sar
xchg
add
cmp
cli
dec
xchg
inc
mov
scas
sub
ja
add
in
cmp
ss
cltd
jecxz
mov
fucom
movsl
into
addr16
pushf
adc
push
jg
loopne
jns
imul
in
and
daa
shlb
or
rcrb
sub
mov
xor
jle
xor
cmpsb
inc
test
arpl
punpcklbw
pop
push
inc
int
xchg
adc
ljmp
jnp
pop
adc
cmp
vzeroupper
xchg
and
add
cld
shll
pop
loop
sbb
jae
fxch
hlt
icebp
jnp
movsl
dec
push
push
xchg
test
aaa
and
popa
pusha
lock
js
mov
and
xor
cs
inc
dec
cmp
or
adc
cmp
stos
sbb
add
push
sbb
sbb
out
or
mov
int
mov
roll
or
popw
in
jle
aas
fidivrl
adc
fstps
xchg
jae
mov
test
cmp
push
pop
imul
jle
dec
or
ret
add
enter
out
mov
and
sub
popf
sub
inc
and
inc
or
mov
aad
push
stos
push
outsl
xchg
jge
ret
push
imul
ficoms
sbbb
imul
sahf
mov
xor
mov
stos
xor
fnstenv
xchg
out
js
fdivs
rcrb
lods
ret
repnz
aas
and
aaa
pushf
pop
jle
popa
add
ret
cmp
loopne
jecxz
mov
dec
mov
sbb
jle
or
push
jne
pop
fistpl
scas
adc
fidivrs
lcall
addb
aam
push
repz
cmc
and
cmpsb
or
mulb
out
imul
inc
jg
stos
or
sahf
mov
jae
sub
loop
movsl
mov
cmc
xor
push
hlt
rolb
xchg
cmp
sahf
jl
cmc
cmpsl
out
out
adc
sub
add
lock
cs
pop
push
push
push
dec
inc
pop
pusha
push
cmpsb
js
pop
mov
cs
add
adc
mov
fildll
dec
xor
out
das
sub
xor
push
imulb
and
push
js
sbb
fcomi
aam
shr
cld
fcmovnu
fnstenv
jle
xor
clc
test
sbb
pop
xchg
jle
jg
xchg
inc
rorl
or
stos
mov
or
stc
push
out
mov
mov
lahf
push
sub
cmp
sbb
popf
stos
rorb
shl
pop
scas
hlt
lcall
cld
incl
lea
lods
jae
inc
xchg
jge
fisubrs
push
adc
and
xorl
daa
fldcw
out
stos
sbb
test
cmp
outsl
jl
mov
mov
stos
xor
jns
dec
pop
cmc
dec
ds
sub
rorb
sbb
dec
movsb
addl
lahf
dec
jecxz
pop
jbe
push
fucomi
jle
call
add
sub
mov
sub
popf
fdivl
lret
dec
pop
jbe
les
jl
scas
dec
cmp
cmp
mov
jmp
jle
lods
adc
out
xchg
notb
mov
mov
andl
lods
mov
mov
stc
push
data16
cmp
rolb
cmp
out
add
xchg
mov
adc
in
bound
or
mov
stos
dec
xchg
repnz
jb
hlt
cmp
cld
outsb
or
pop
aas
mov
jno
xchg
ljmp
fadd
push
leave
outsl
loope
movsl
xchg
cwtl
cli
scas
test
in
jae
xchg
pop
es
arpl
xchg
inc
sbb
insb
repnz
inc
jge
push
loop
sbb
popa
adc
jno
inc
orl
jnp
dec
pop
sbb
arpl
and
or
outsb
mov
sar
inc
bound
les
adc
pushf
fidivs
jns
mov
data16
push
lret
in
stc
pop
ja
mov
mov
clc
cmpl
or
scas
pusha
lods
and
outsb
hlt
adcl
cmp
adc
fwait
out
sbb
test
and
call
imul
adc
push
movsb
adc
mov
scas
pusha
je
inc
or
into
add
push
fwait
jle
aam
stc
cmp
cmp
inc
gs
jae
sbb
mov
mov
js
mov
aas
cltd
addb
fisubl
mov
lds
jbe
or
sbb
sbb
xchg
add
pop
mov
inc
adc
xor
add
popf
mov
add
mov
testb
push
mov
xor
and
mov
int
bnd
repz
cli
jmp
test
sub
fmul
push
pusha
adc
int3
mov
aaa
clc
aas
test
jg
push
jmp
mov
jmp
push
or
aaa
in
mov
or
adc
sbb
iret
loope
stc
stc
test
pop
ret
xchg
in
sarb
cmp
pop
mov
jns
or
or
sub
xlat
push
bnd
mov
mov
sub
cmp
push
cltd
sti
mov
lea
subl
test
or
or
loope
int
xchg
add
sbb
lock
mov
imul
inc
iret
sbb
mov
push
lea
mov
push
out
sbb
insl
testb
fs
mov
xor
popa
out
sbbl
or
and
popa
cs
scas
jnp
push
mov
xor
lret
sbb
aas
js
push
testl
mov
push
in
rorl
fcompl
fmulp
dec
fwait
sub
push
icebp
sub
pop
jb
int3
sub
ja
add
jp
je
fcmovnu
add
push
lods
out
xchg
fistps
call
les
mov
xlat
xchg
push
mov
in
xor
into
dec
push
es
mov
jp
icebp
inc
xchg
cmpsl
jno
out
xor
pop
or
push
outsb
xchg
dec
mov
fsubl
leave
mov
cmp
and
mov
js
outsl
mov
jp
ss
xor
je
cmp
mov
xor
mov
pop
int3
xchg
into
pop
ret
in
lods
insl
mov
sub
mov
dec
fs
jle
xor
cld
adc
dec
popa
js
daa
sub
dec
aas
leave
and
adc
sub
pop
ja
jp
pop
fsubrs
jg
loop
test
repz
repz
mov
gs
int3
shll
aas
fdivp
mov
pop
clc
xchg
leave
xchg
or
mov
rorl
jecxz
xor
and
add
lds
out
xor
mov
insb
xor
clc
cmp
ja
aad
lods
test
xsaveopt
dec
mov
int
xor
int3
pop
movsl
and
pop
pop
dec
movsb
std
mov
push
mov
test
or
fisubs
or
arpl
lds
fdiv
push
sub
je
push
in
inc
testl
cmp
jne
daa
sti
mov
pop
jbe
outsb
or
fsubs
add
mov
dec
enterw
push
pop
sarl
out
add
sbb
loope
sub
jnp
jnp
rcrb
mov
shr
jl
xchg
test
and
add
dec
jb
out
jo
mov
mov
dec
sub
sub
rorb
call
xor
xorl
cltd
enter
mov
and
push
push
scas
mov
mov
fidivs
aam
sbb
fmul
inc
jl
adcb
ljmp
lods
xchg
cmp
xor
out
repnz
in
xchg
pop
bound
insb
repz
mov
xor
inc
ds
sub
add
js
and
mov
lock
jp
test
xor
fisttps
cld
lea
cltd
sbb
or
daa
adc
ss
or
loopne
sub
lret
push
aaa
and
jae
loop
sbb
shll
push
dec
mov
aaa
ss
mov
xchg
xor
inc
mov
iret
xor
inc
cmp
cli
push
je
xchg
pop
test
shl
shrb
aam
xchg
test
inc
mov
xchg
mov
pusha
mov
push
push
pop
push
mov
pop
sub
xchg
lods
das
repnz
mov
loope
mov
int3
sahf
adc
pop
dec
pop
dec
xchg
cmc
jne
push
arpl
je
pop
scas
out
enter
mov
aam
std
add
scas
dec
cmpsb
sarb
cld
sbb
lea
mov
fbstp
shrb
jae
in
ss
inc
jbe
mov
test
jge
fistps
cltd
adc
and
jo
inc
ds
clc
adc
jle
mov
add
ljmp
mov
notl
jo
shll
cmp
adc
loop
add
mov
add
lock
jg
dec
adc
xchg
pushf
sahf
out
dec
jbe
adc
push
mov
jp
xlat
mov
lock
push
in
jne
adc
arpl
xchg
push
mov
lret
fiadds
cmp
lods
enter
adc
xor
cli
and
jge
int
push
rcrb
outsl
mov
pushf
inc
movsl
pushf
add
push
jns
cltd
pop
jnp
pmaxub
js
xchg
cmp
push
jmp
mov
xor
mov
and
outsb
loopne
sbb
fmuls
lret
adc
addr16
push
push
movsb
sub
dec
adc
enter
out
aam
loope
dec
jo
cmp
std
add
inc
add
orl
xor
fiaddl
mov
jae
inc
dec
aas
incl
adc
sub
clc
insl
push
loopne
jl
sbb
xchg
and
adc
loope
in
icebp
sub
xlat
das
xor
cwtl
das
push
scas
add
xchg
dec
or
mov
pop
orb
push
push
jnp
jb,pt
push
stc
fistpll
lds
leave
dec
test
stos
subl
loopne
divl
xchg
loopne
stos
xlat
aam
dec
inc
aas
pop
fdivl
inc
je
imul
int
adc
fadds
sub
pop
or
out
pop
push
cmp
addr16
jae
adc
push
cmp
test
cltd
sub
outsb
fcoml
inc
pop
push
xchg
inc
pop
into
jns
lcall
adc
daa
cmpsb
dec
fisubrs
call
lcall
push
shl
or
and
sbb
shll
lcall
add
aam
mov
lea
enter
sbb
mov
fcmovnu
xchg
cs
es
pusha
push
dec
or
ficompl
ss
sti
sub
lods
mov
inc
jnp
loop
mov
and
ret
ret
push
xor
adcl
inc
or
jnp
push
rorb
in
adc
inc
jmp
and
out
lret
outsl
das
loop
pop
dec
fstpl
push
and
pop
gs
testb
dec
sbb
mov
icebp
mov
ret
decb
out
push
cmp
inc
mov
fwait
repnz
lret
adc
in
out
movsb
lcall
in
xor
enter
je
jbe
dec
movsl
sbb
ret
mov
mov
jp
pop
adc
nop
mov
movswl
jg
add
push
pop
test
mov
test
sarb
insl
or
pop
fidivl
xchg
mov
fsubrs
add
push
mov
into
dec
mov
popa
jns
inc
dec
std
rol
push
daa
jmp
or
lods
mov
movsl
cmp
ss
jecxz
jp
inc
in
push
inc
cmp
mov
and
pop
pop
push
out
push
add
jae
subb
inc
sub
bnd
or
sub
fisubrl
daa
push
sub
cmp
sbb
mov
fcoml
insb
xor
lret
mov
or
mov
cli
push
xchg
sbb
push
add
sbb
sbb
arpl
sbb
sbb
push
ficomps
add
ror
mov
push
rolb
cmpsb
mov
or
pop
push
or
test
sbb
shlb
jmp
inc
enter
inc
mov
lar
sub
int
cmp
jae
les
jb
push
mov
push
int3
dec
mov
mov
cmc
and
das
or
cmp
cmp
ficoml
lea
sub
xor
rcll
jns
movsb
adc
cmpsl
dec
mov
push
dec
lods
pop
mov
sbb
aam
push
push
mov
xor
xor
cwtl
sbb
push
push
mov
jno
ja
rcll
arpl
inc
xor
in
divl
shl
dec
outsl
inc
pop
pop
ret
jno
lahf
shrb
out
outsb
xchg
inc
xchg
mov
push
lock
inc
insl
scas
pushf
orb
cltd
mov
jbe
testl
faddl
pop
ret
cmpsb
sbb
and
shrl
or
enter
sbb
add
mov
nop
inc
dec
push
daa
fcompl
ja
xchg
shrb
sbb
test
adc
enter
push
jle
pop
pop
dec
mov
mov
jbe
mov
inc
and
pop
scas
test
sub
test
lock
flds
repnz
pusha
jl
outsb
nop
std
out
jge
adc
je
fisubrs
xor
mov
adc
mov
jmp
cmp
jb
pop
mov
mov
sub
jecxz
cmp
or
push
ror
daa
andl
xor
inc
dec
gs
xchg
fdivrl
sarb
ss
test
or
jns
jp
xchg
repz
or
out
jp
lods
sub
mov
jmp
shll
arpl
fdiv
lcall
dec
outsl
lea
ja
out
lods
orl
callw
fnstenv
dec
mov
sbb
mov
hlt
popa
in
mov
pop
sbb
mul
sbb
and
movsl
inc
jns
and
bound
cmpsb
call
scas
pop
mov
sarl
mov
leave
inc
inc
inc
sub
adc
mov
enter
mov
mov
adc
inc
mov
scas
stos
jmp
inc
sub
cli
xor
fcoml
cmp
pop
dec
push
mov
insl
lahf
or
dec
xchg
stos
jmp
insb
int3
fidivl
add
sub
push
pop
mov
mov
sub
sbb
lcall
mov
push
push
xchg
jns
mov
scas
xchg
repz
mov
iret
repnz
inc
mov
jae
js
push
dec
mov
and
adc
inc
push
sbbb
xlat
ss
dec
or
push
test
cwtl
cmpsb
adc
andl
ret
mov
adc
push
scas
enter
adc
and
pop
mov
inc
stos
in
test
stc
sbb
insb
insb
popf
mov
xor
shll
in
mov
lods
sbb
or
jecxz
fldlg2
inc
pop
push
fidivs
jmp
js
loop
sbb
stc
icebp
push
or
scas
jb
rolb
pop
push
clc
std
cmp
xchg
and
scas
push
push
idivb
push
shlb
flds
pop
fsubrl
mov
mov
xor
test
xor
pop
lods
xlat
out
bswap
loop
add
scas
enter
scas
jae
pop
or
rorb
bound
fs
add
or
xchg
xor
cmp
ss
add
insl
jno
and
and
and
data16
adc
pop
test
mov
test
fs
or
sub
xchg
inc
lock
mov
inc
out
inc
aam
pop
filds
dec
iret
in
and
lret
and
lds
lock
mov
cmp
test
push
inc
lahf
ret
jno
fildll
in
shll
cmpl
xchg
jecxz
and
lret
fiaddl
and
pushf
in
pop
push
adc
test
adc
pop
sub
adc
push
cmpsl
stos
loopne
int3
xorb
jle,pn
arpl
jmp
inc
call
dec
in
xchg
xchg
inc
enter
in
mov
mov
cmp
push
xchg
adc
fistpl
lcall
fmul
lea
mov
cmp
and
fldt
cmp
xor
fsubs
cltd
push
jb
or
push
cmp
jno
stc
xchg
lret
ret
out
or
loop
fmul
mov
dec
push
jecxz
fcmovnb
cld
fcoml
mov
mov
add
sbb
and
rolb
inc
ss
pop
adc
cmpsl
cltd
sbb
xor
shll
sbb
jl
or
addr16
dec
jbe
sub
pop
push
imul
jmp
inc
lea
fcompl
in
sbb
andb
pop
arpl
pop
and
ds
xor
mov
push
ret
cmp
inc
ja
icebp
pop
pop
sbb
adc
adcb
cltd
inc
roll
sub
shrl
arpl
mov
ja
sahf
mov
mov
faddl
mov
call
and
sub
lret
test
mov
dec
sti
nop
mov
out
jmp
or
imul
scas
subb
fldl
mov
lock
adc
je
pusha
lds
fadds
and
daa
pop
gs
addr16
push
std
or
into
lcall
or
scas
bound
mov
jae
push
clc
mov
lcall
adc
jns
pop
icebp
cltd
push
mov
sbb
mov
mov
push
das
mov
push
adc
dec
inc
jmp
out
pop
cmp
fwait
movsl
jl
cld
insb
movsb
mov
rcl
mov
lods
add
scas
cmp
sub
sarb
repz
or
jb
scas
sub
insb
adc
testl
cmc
jne
push
inc
pop
push
push
lret
add
or
testl
icebp
daa
cmp
adc
loope
xchg
cld
lcall
jg
mov
cld
xor
mov
popf
dec
outsl
out
std
or
sbb
nop
push
jae
and
mov
add
mov
pop
stos
out
mov
pop
mov
xchg
jmp
pushf
lds
out
push
pop
and
lret
mov
lret
in
aad
sbb
cmpsb
popf
xchg
jg
test
daa
sbb
and
mov
ud2
bnd
pusha
lahf
enter
stos
lcall
push
sbb
inc
shl
mov
les
in
mov
push
fsubrl
pop
mov
mov
aaa
ja
push
les
xlat
jp
call
les
aad
sub
dec
shrl
lret
add
add
sahf
lods
jl
push
and
imul
mov
out
lret
cmp
lock
jnp
fbld
idivl
dec
in
cld
push
sub
aad
lahf
in
ss
pop
inc
dec
jo
jne
jne
out
and
jbe
inc
cmp
add
hlt
inc
dec
adc
pop
and
fyl2xp1
sub
nop
dec
inc
push
mov
mov
xchg
and
in
shrb
jecxz
pop
add
xor
shrl
aam
int
aad
dec
dec
dec
and
leave
test
orl
loopne
inc
pop
mov
mov
jg
iret
xor
push
push
clc
roll
sub
dec
fisttpll
cmp
popf
push
mov
add
repnz
ret
xor
xchg
pop
nop
mov
push
xchg
sub
adc
add
fildll
push
leave
test
movsl
mov
inc
xchg
jns
sbb
or
data16
mov
ss
jl
add
out
pop
nop
shrl
scas
dec
cmp
mov
inc
jo
leave
and
dec
cwtl
xlat
hlt
mov
jge
jp
incl
cwtl
addr16
in
jbe
xchg
loop
cmpsl
into
and
or
pop
and
jo
pushf
and
bound
xchg
and
xchg
imul
cltd
lahf
mov
ss
push
mov
cmp
jp
mov
push
es
sbb
pop
cmp
ret
aad
xor
inc
addr16
sahf
xor
rclb
lock
push
arpl
dec
scas
jmp
push
push
sub
jns
pop
inc
fs
xor
jmp
das
aas
mov
stc
rcrb
xor
sub
jae
lock
sbb
cmp
jnp
xchg
cmp
stos
int
sbb
and
insl
cmpsb
mov
loopne
dec
test
sub
pop
not
paddw
sbb
mov
jns
push
call
xchg
and
sub
test
orb
arpl
xchg
cmpsl
aas
and
out
mov
inc
cmc
jo
pop
add
pop
pop
and
jo
jg
xchg
movsb
in
mov
loop
pop
cmpsb
mov
mov
mov
fsubr
cmpsl
dec
es
enter
xchg
scas
inc
ljmp
inc
pop
xchg
inc
lret
cmc
inc
imul
into
jb
rolb
rcrb
sub
sbb
xchg
xor
shll
inc
sub
inc
cmp
push
lcall
sbb
ss
xchg
lret
dec
jge
scas
loope
aam
or
dec
mov
ljmp
fdivl
ljmp
mov
shlb
push
xchg
lret
or
outsl
mov
mov
pop
mov
in
jge
int
push
add
push
dec
insl
iret
nop
xchg
jmp
ftst
insb
sbb
imul
push
outsb
call
cmp
mov
fisubrs
sbb
and
ret
repz
add
dec
pop
icebp
std
cmpsl
and
movsl
mov
repnz
sub
mov
scas
mov
rcl
fstl
push
dec
imul
dec
push
pop
jne
pop
loopne
pop
ret
sti
fisubs
scas
fdivr
add
fisttps
movsl
mov
shrb
push
inc
cmp
cwtl
sbb
ret
leave
outsl
int
cmpsl
repnz
popa
in
out
ret
sbb
mov
rorb
or
flds
sbbl
fwait
cltd
xlat
mov
and
cmp
sub
pop
xor
inc
push
out
fists
mov
scas
add
js
xchg
jmp
loop
outsb
xor
inc
mov
outsl
mov
out
ret
sbb
fsubl
push
cld
inc
icebp
sub
sub
cs
cltd
cltd
fnclex
xchg
push
xlat
xchg
movsb
cmp
popa
sub
js
les
cmp
addb
mov
jge
lods
push
xchg
add
add
adc
fists
cmp
scas
dec
cmp
out
mov
pushf
adc
mov
fbstp
xchg
jo
inc
les
xor
xor
push
mov
push
jno
rorb
dec
push
dec
orb
imul
jae
aad
sub
or
or
adc
xchg
and
incb
mov
cmp
stc
mov
gs
inc
pop
sub
pop
pop
lret
pop
xor
inc
xchg
outsb
cmp
mov
js
orb
and
repz
stos
xchg
lret
mov
or
jp
push
mov
jno
pop
xchg
cmp
xor
sbb
pop
sub
xor
inc
fisubs
sub
adc
mov
ljmp
loopne
xchg
sub
mov
cmp
outsl
shll
inc
popf
bnd
inc
inc
and
inc
inc
daa
or
dec
out
cs
test
add
xchg
shlb
in
js,pn
outsl
mov
sti
enter
inc
fcompl
push
ret
loopne
pop
cmp
pop
add
je
mov
repnz
cmp
sbb
fistpll
mov
sbb
adc
mov
outsb
insl
lods
popa
cmp
pushf
or
das
scas
test
clc
in
pop
out
xchg
push
das
mov
addl
dec
les
into
fnstcw
push
pop
dec
es
mov
mov
cmpsl
std
mov
sbb
sbb
fucom
movsl
fnsave
addr16
jp
xor
dec
mov
fdivs
dec
pop
mov
xchg
in
adc
inc
int
stos
mov
push
clc
adc
xchg
xchg
and
jo
mov
js
leave
daa
cmpsl
adc
pushf
jno
and
or
testb
jp
push
push
adc
pop
xor
inc
iret
notl
aas
bound
sahf
ds
pop
dec
sub
mov
imul
pop
pushf
loop
mov
imul
pop
rol
dec
ds
jecxz
in
mov
hlt
sub
fsubs
sub
std
xchg
push
fildll
cltd
cmp
int3
mov
dec
inc
push
dec
stos
inc
jns
push
adc
pmullw
ret
xchg
xchg
or
out
adc
leave
mov
in
mov
int
lret
aaa
scas
adc
sub
imul
clc
or
or
pushf
mov
push
loop
cmp
iret
es
jg
daa
xchg
xorb
mov
push
sbb
sub
jp
cmp
iret
pop
cmp
not
inc
sahf
mov
in
lea
aam
leave
jnp
rorl
or
leave
pop
fimuls
add
jle
pop
js
mov
sub
jo
movsl
pop
mov
mov
fwait
push
mov
loop
mov
pop
inc
pop
movsb
dec
adc
jae
popfw
inc
sbb
mov
push
stos
repz
scas
jnp
and
lods
in
in
fistpl
adc
dec
pop
push
xor
dec
out
inc
sub
pop
cltd
notb
rcrb
loope
fucomp
in
test
pushf
addr16
into
xor
mov
pop
cli
sbb
pusha
lods
sbb
int3
fwait
pusha
fldz
sub
loope
push
add
mov
sbb
mov
lea
pop
mov
hlt
and
push
and
movsb
mulps
pop
sti
mov
imul
hlt
test
xor
imul
lea
jl
inc
pop
mov
mov
inc
out
xchg
mov
std
stc
xor
cmp
mov
lea
popa
pushf
mov
cmpsb
addr16
cmpsl
scas
inc
cld
xchg
pop
aam
cmp
sbb
adcb
mov
stos
cmc
xor
leave
stos
lods
dec
popa
pushf
add
dec
xchg
test
sbb
xor
ret
xorb
pop
pop
cmp
dec
mov
xor
jne
sub
notl
sub
adc
repz
jmp
es
mov
int
jle
es
fwait
lcall
in
fs
or
fwait
rcll
aaa
add
push
xchg
sub
fimull
jg
aam
pushf
cmp
inc
mov
mov
and
enter
mov
xchg
test
pop
rorb
cmpsl
stos
dec
lds
dec
or
mov
enter
xchg
mov
adcl
notl
mov
and
lods
xchg
test
out
arpl
je
mov
mov
clc
sub
fisubrl
pop
push
dec
subl
loop
xor
repnz
outsb
dec
push
fdivr
int
hlt
ds
hlt
inc
push
xlat
dec
sbb
mov
lret
outsl
popl
fsubl
xchg
fsubrl
int
push
mov
pop
sarb
xchg
arpl
push
popf
dec
and
in
sub
test
clc
push
pushf
xchg
push
in
es
and
push
ds
fisubs
mov
pop
push
arpl
adc
in
enter
fdivrl
popf
mov
lahf
movsb
repnz
int
das
flds
insl
sbb
xchg
cltd
xchg
mov
js
jno
cld
sarb
sub
mov
pop
adc
andb
cmp
scas
inc
or
adc
adc
repnz
xor
mov
xchg
lret
mov
repnz
dec
clc
xchg
cltd
mov
adc
shrl
jno
and
mov
push
fld
bswap
xchg
dec
jo
cmp
rcll
jp
add
lcall
mov
js
pop
xlat
push
mov
out
push
and
sbb
mov
mov
push
dec
stos
adcb
fsubrl
lret
pop
add
push
sub
xchg
xchg
pop
add
dec
mov
fs
out
or
or
mov
test
sub
pop
dec
nop
mov
push
add
incl
int3
fildl
and
jae
hlt
sarb
inc
mov
fwait
inc
lock
scas
cmpsb
shrl
cmpsl
or
in
sbb
aad
lea
mov
push
mov
mov
test
iret
jns
sub
add
inc
jmp
repnz
scas
push
xor
aad
in
inc
arpl
popf
and
jecxz
ljmp
dec
inc
iret
leave
js
shll
cmpl
pop
repz
dec
fdivl
out
imul
mov
add
adc
ja
lcall
fstp
mov
pop
cs
std
daa
in
inc
push
call
jo
mov
sbb
sub
ds
arpl
in
push
pop
inc
dec
push
cld
xor
enter
push
jnp
lret
mov
notb
dec
mov
aad
icebp
stc
add
leave
cmp
in
mov
pcmpeqd
test
adc
lret
ficoms
cmp
sbb
mov
add
push
loope
add
pop
shl
pop
clc
cwtl
or
in
stos
pusha
mov
dec
loopne
lcall
push
adcb
rcrl
fdivr
push
or
pop
or
ja
push
mov
inc
hlt
mov
add
jp
push
sub
pop
xchg
rolb
adc
xor
xor
cs
sti
mov
test
jnp
xchg
cmp
cmc
jnp
icebp
int3
repnz
pop
push
push
fadd
mov
jg
push
je
lret
mov
push
shlb
in
push
xchg
inc
pop
pop
movsb
dec
push
movsb
shlb
lods
repnz
dec
movsl
jmp
inc
mov
and
mov
mov
mov
adc
mov
out
nop
mov
in
test
mov
push
ret
push
xor
mov
and
mov
faddl
mov
lcall
dec
jbe
xor
stos
lock
cwtl
imul
fwait
jb
std
sub
xchg
mov
pusha
inc
cmp
lret
das
out
iret
mov
loop
subl
cmp
jmp
iret
sub
in
push
bound
jne
decb
jmp
shll
mov
dec
out
or
mov
adc
xchg
xor
mov
inc
bnd
xor
cmpsb
loop
inc
iret
jbe
popa
jge
enter
pushf
push
mov
enter
cmp
rcrl
mov
push
sbb
push
adc
popa
and
push
scas
inc
fs
rcr
je
add
xchg
cmpsb
dec
pop
lldt
icebp
mov
adc
addl
push
add
stos
xchg
push
lcall
or
sahf
sub
cmc
test
push
xchg
in
xchg
add
mov
test
dec
lods
push
call
add
adc
xchg
stc
sub
iret
movsl
xor
push
jl
mov
lock
rorl
mov
push
andb
shll
ret
popa
xor
clc
test
test
adc
mov
jle
and
dec
push
jbe
nop
jmp
ds
movsb
dec
iret
stos
pop
pop
mov
daa
xor
pop
xchg
and
movsb
enter
cmp
clc
es
jecxz
daa
cli
add
mov
cmp
push
dec
pop
subl
mov
add
test
int
xorb
dec
out
sbb
out
rcll
sbb
in
adcl
add
xchg
imul
pop
push
sbb
mov
xchg
loope
jo
gs
nop
mov
pop
into
sarb
imul
les
adc
and
out
inc
push
out
cmpsl
xor
pop
sti
inc
nopw
jecxz
push
movsl
fcmove
or
push
enter
xchg
lcall
pop
mov
mov
fldenv
mov
outsb
dec
adc
xchg
mov
lcall
leave
mov
sbb
out
int
cwtl
jg
in
stos
xor
cld
out
sarb
jmp
add
scas
mov
or
lods
fs
inc
adc
pop
mov
pop
aas
mov
and
fldl
inc
cmp
data16
clc
jmp
jp
pop
sub
mov
dec
pop
es
mov
xchg
out
pusha
lahf
push
or
dec
pop
sub
jle
mov
pushf
cltd
shl
lret
sub
cwtl
adc
mov
nop
fstpt
pop
repnz
inc
leave
popa
outsb
or
fists
xchg
push
mov
push
sbb
lret
xor
xor
jl
mov
dec
push
mov
lret
xchg
sbb
ret
push
stos
push
push
xor
and
or
movl
xchg
loop
jo
dec
jmp
xorl
xchg
loopne
or
and
rorl
sti
xchg
outsl
jecxz
cmp
mov
add
dec
enter
pmulhuw
cs
lret
popf
xor
insb
push
cmpsl
xor
out
cltd
loopne
leave
into
cmp
rcll
imul
xchg
out
fcompl
ret
popf
inc
jecxz
inc
ljmp
mov
lret
test
rcll
add
xor
loop
push
dec
mov
out
nop
iret
xor
pop
insl
dec
xchg
dec
imul
or
cmp
add
mov
jae
int
cmp
stos
lret
je
sahf
popf
clc
adc
popa
sub
in
fwait
fs
adc
mov
sti
sbb
jg
push
sarl
inc
push
insb
jnp
pop
sub
mov
pop
test
pop
inc
adc
repnz
mov
rorl
sahf
push
push
xchg
lahf
filds
test
pushf
dec
mov
push
pushf
imul
cmp
call
jb
sub
jl
mov
jp
and
add
sbb
sbb
mov
sbb
cmpsb
mov
mov
lock
jnp
out
mov
mov
push
push
inc
xor
loopne
out
mov
push
pop
lea
in
aas
roll
ss
clc
push
enter
adcl
mov
arpl
mov
push
xor
and
rcll
and
repz
shl
cmpsb
leave
mov
push
mov
mov
push
cmpsl
jnp
stos
rcrb
mov
mov
decb
pop
jp
mov
pop
in
stos
jno
jle
fwait
je
jnp
ljmp
xchg
add
cli
fwait
jp
into
loop
mov
jmp
cmpsl
pushf
mov
pop
mov
movsl
rorb
sbbl
mov
fisubrl
dec
rorl
lods
insb
cmpsl
std
sub
xchg
cmpsb
mov
push
dec
imul
js
ret
mov
adc
subl
popf
adc
in
in
cmp
mov
inc
loop
push
fldz
xor
push
arpl
icebp
and
add
push
xchg
xchg
dec
fdivr
xor
xor
jnp
xlat
pop
fcomps
fdivr
pop
cmpsl
je
xor
add
and
mov
arpl
arpl
in
mov
fs
lock
inc
pop
pop
sarb
scas
cmp
sbb
push
int3
jecxz
lock
scas
das
xchg
push
adc
mov
cmpsl
ret
pop
scas
imul
cmpsb
imul
movsl
fwait
adc
jae
sub
ljmp
clc
mov
xchg
mov
pop
in
sub
das
mov
test
test
fldenv
add
xchg
scas
cmp
jp
or
fistpll
das
sub
ja
pusha
pop
movsb
or
je
pushf
push
sahf
or
sbb
push
jae
dec
fcmovb
add
or
mov
pop
insb
mov
cmc
cli
lods
lods
inc
push
in
test
xlat
les
mov
mov
pop
clc
mov
lods
adc
pop
sub
stos
mov
dec
outsb
jb
xchg
lock
je
outsb
mov
dec
jnp
pusha
fwait
cmp
addb
ret
jae
push
dec
push
popa
hlt
and
ds
dec
lcall
shlb
popa
pop
clc
dec
inc
or
jp
ljmp
loopne
out
adc
mov
jne
sub
mov
pop
rcrl
sub
sbb
ja
subl
add
sbb
xor
je
mov
sub
sarl
ljmp
loope
mov
inc
or
xchg
xchg
ficomps
out
mov
mov
cmp
aam
test
jns
fldenv
sub
mov
mov
imul
xchg
xor
sbb
xchg
xchg
xchg
xor
in
or
test
movsb
aas
out
cltd
mov
clc
sbb
pushf
or
jp
add
mov
imul
mov
lret
vpunpckhbw
cmp
and
mov
adcb
in
mov
fisubl
pop
mov
jg
mov
pushf
int3
les
inc
xchg
mov
lret
repz
mov
sbb
divb
push
or
rorb
sub
pop
imul
mov
imul
fstpl
scas
sbb
sbb
xchg
in
push
mov
lcall
push
sbb
std
push
mov
mov
adc
sub
pop
testb
and
or
stos
sbb
jae
int3
xor
lods
jne
je
mov
iret
adc
loop
test
int
ret
add
cmp
and
push
or
add
sub
mov
jge
int3
xchg
cmp
hlt
push
push
xchg
das
inc
fs
mulb
adc
scas
fsubrl
xchg
fstps
testb
cwtl
adc
xchg
bound
sub
insl
or
les
fimull
cli
pop
add
repz
xor
jno
leave
mov
mov
push
nop
mov
loop
inc
pop
lds
jg
test
xor
pop
aad
add
imul
xor
andl
adc
test
addl
mov
cld
testl
inc
xchg
cwtl
pushf
push
test
in
add
cmp
pushf
mov
lahf
push
ds
sub
gs
mov
mov
out
push
push
lahf
mov
out
lahf
cmp
lods
xchg
movsb
mov
add
je
cld
inc
outsb
ja
jne
pop
outsb
or
pop
pushf
ret
popa
pop
in
sbbb
outsb
mov
insb
mov
fldcw
xchg
mov
pop
inc
xchg
pusha
and
adc
push
out
sub
inc
js
ja
mov
and
or
test
pop
jecxz
jae
stos
add
daa
stos
lea
dec
adc
sbb
cltd
sbb
cmpsl
fisttpl
sub
add
sub
jg
inc
aaa
inc
jb
jae
int
insl
dec
pop
out
in
outsb
xchg
mov
aaa
pop
ror
leave
pushf
mov
iret
or
jb
mov
imul
push
and
inc
insl
push
insl
xchg
and
loop
mov
div
xchg
inc
ss
dec
add
test
jmp
imulb
mov
out
pop
cmpsb
ficompl
lods
cmc
cwtl
lods
cmp
loope
mov
mov
mov
lods
cli
add
cli
cmp
adcl
add
test
aas
mov
mov
adc
sti
add
mov
cltd
rcll
and
sub
repnz
daa
adc
xchg
dec
push
push
xor
mov
mov
andb
mov
insl
test
int3
sub
xchg
aam
jge
pop
sbb
outsl
cltd
test
in
sarl
xor
lret
xor
xchg
adc
int3
daa
xor
pop
mov
sub
jecxz
insl
icebp
aaa
lea
and
mov
aad
push
mov
push
icebp
pop
stos
stc
mov
out
sub
stc
cvtdq2ps
xor
jecxz
sub
aaa
mov
or
cmpl
and
push
sbb
mov
fwait
cmp
sbb
sub
aad
dec
in
test
inc
loop
shll
xor
inc
inc
mov
test
jg
shll
jae
jo
inc
dec
jbe
rorl
adc
fldcw
mov
in
mul
div
sbb
outsl
and
dec
adc
mov
push
aaa
xlat
sbb
add
test
push
xor
mov
stos
cmp
das
sti
xchg
pushw
inc
in
mov
xchg
test
jg
push
imul
pop
filds
push
repnz
mov
xchg
push
movsb
sub
cli
rclb
jnp
dec
ds
test
xchg
push
rcl
jg
sub
xor
lret
and
lret
fistpl
and
lea
ds
rcl
inc
jno
es
clc
adc
mov
out
out
mov
xor
movsb
sub
xchg
lods
fcom
push
mov
push
lret
mov
mov
inc
rol
dec
xor
jae
movsl
lea
xlat
dec
outsb
dec
dec
ds
shrl
push
mov
js
loopne
push
mov
sti
adc
lret
jmp
push
xchg
loopne
fmuls
sbb
cmc
movsb
dec
addb
inc
add
rcrb
les
jnp
leave
js
int
mov
lock
sarb
jp
gs
add
fs
xlat
leave
and
neg
test
mov
cmp
hlt
test
adc
push
xor
mov
fimull
roll
or
rcpps
movsl
inc
mov
pusha
push
inc
out
mov
gs
movhps
inc
stc
mov
out
int3
dec
lock
cwtl
clc
add
andl
daa
cli
mov
sbb
addl
test
pop
mov
push
or
leave
das
pop
dec
jmp
push
mov
popa
clc
xchg
std
hlt
xchg
jnp
sub
adc
fnstsw
ja
jl
adc
loopne
sub
scas
mov
into
push
rorl
inc
push
ds
out
lods
cltd
cmpsb
decl
or
adc
adc
jmp
mov
or
xchg
sbb
adc
das
dec
cmp
push
loop
push
repz
xor
push
lock
repz
add
inc
fcmovne
shl
xor
dec
pop
je
mov
jae
add
mov
mov
and
push
fstps
cmpsl
mov
sub
loop
adc
and
pop
push
lds
pop
mov
add
scas
iret
popa
sbb
test
insb
xchg
dec
xchg
mov
lret
fists
sbb
data16
repz
sbb
scas
inc
mov
push
gs
adc
inc
js
cltd
in
mov
jno
xchg
pop
int
mov
lea
dec
inc
xor
imul
inc
jns
xor
mov
stos
mov
cmpb
cli
lcall
or
nop
mov
fcomps
mov
jns
mov
loopne
push
std
jp
sbb
leave
cs
pop
sub
or
test
add
and
xor
mov
fs
pop
and
repnz
add
mov
xchg
xorb
ja
popf
movsl
lcall
lock
imul
sub
mov
sbb
xchg
mov
cltd
clc
addr16
dec
lods
pmaxsw
jns
test
pop
jecxz
leave
pop
frstor
pop
mov
xchg
jne
push
dec
faddl
adc
in
xor
fsubrl
add
xchg
ljmp
cmp
xlat
sbb
negb
popf
xchg
pop
mov
mov
adc
out
int3
sbb
insb
jmp
sti
inc
in
adc
repz
dec
js
jo
mov
jo
sub
insb
pushf
push
aam
lds
mov
adc
in
sahf
mov
lahf
movsl
pusha
movsl
orl
mov
sbb
sahf
in
mov
mov
mov
cwtl
xchg
or
int3
xchg
into
fcomps
ss
out
or
incl
fcoml
pop
shr
data16
add
cmp
xchg
xchg
lods
ret
out
push
das
jbe
cmp
cmp
in
arpl
push
xchg
lods
lods
mov
jns
sub
fwait
ret
aas
mov
clc
jne
xchg
lock
fidivl
pop
insl
cltd
aas
dec
shll
xor
inc
icebp
ret
cmp
loop
ret
or
push
call
adc
adc
popl
jle
lods
cmp
or
addr16
mov
rcrl
sbb
shr
call
pop
scas
das
push
pop
add
inc
aas
cwtl
push
and
stc
dec
xchg
sbb
imul
xchg
lret
mov
xchg
cltd
out
mov
sti
xor
outsl
xor
pop
mov
adcl
das
adc
jle
adc
or
and
fsub
call
loope
test
xchg
repnz
dec
loopne
jns
xchg
inc
call
lret
popa
xor
mov
jnp
pushl
pavgb
xchg
xchg
mov
outsb
mov
sub
js
pop
adc
mov
cmpsb
addr16
push
clc
jmp
or
jle
scas
ja
sar
sbb
pop
pop
adcb
dec
pop
std
mov
inc
push
cmp
es
mov
push
pop
bndstx
xchg
xchg
jecxz
jp
or
cltd
das
inc
lea
mov
int
push
jle
jmp
je
cmp
mov
mov
xchg
and
movl
loope
popa
mov
sub
or
fistps
orb
les
inc
jb
xchg
movsl
lcall
mov
cmp
andb
rcr
and
inc
movsl
xchg
lods
or
mov
test
sti
xchg
inc
pop
roll
add
pop
cwtl
sub
add
ret
xchg
pop
sbb
cmp
pop
xor
mov
push
cltd
test
mov
add
nop
jno
xor
push
dec
push
mov
mov
in
loop
mov
scas
fstpt
mov
mov
aad
xchg
adc
push
xchg
arpl
cmp
and
jb
rorb
add
insb
mov
or
mov
push
inc
pop
shr
cmc
ret
sub
out
stos
in
lock
fcomi
xchg
addr16
add
and
dec
lahf
ds
and
push
xchg
sub
repz
pushf
mov
inc
mov
add
adcl
bound
push
jge
jb
inc
insb
cmp
gs
shlb
mov
jno
sti
pop
clc
sbb
mov
lea
push
hlt
adcl
int3
lods
icebp
inc
iret
jge
add
repnz
or
and
negl
movsl
mov
xor
loop
mov
sti
jno
dec
andb
jae
adc
into
addl
cmp
ja
pop
test
inc
lret
bound
add
ja
shll
pop
mov
or
movsb
jge
test
xchg
in
repnz
or
iret
fldenv
xlat
pop
mov
push
out
insb
and
loope
add
arpl
jmp
mov
inc
lcall
mov
ljmp
lock
push
movsb
push
push
dec
push
push
cs
push
adc
enter
hlt
and
xor
jne
add
std
push
loope
push
ljmp
cltd
jne
pop
dec
jae
jp
shrl
std
jg
mov
insl
outsl
cs
xor
addr16
inc
or
pop
stos
mov
icebp
push
add
jnp
jp
or
push
sbb
out
into
jp
push
adc
or
mov
cs
aam
js
lods
icebp
mov
xlat
cmp
pop
mov
sbb
inc
mov
jno
push
adc
lea
jg
loop
cmpsb
testb
arpl
or
in
inc
cmp
xchg
mov
cmpsb
scas
xor
out
fwait
dec
and
dec
jg
lods
int
mov
lahf
adc
dec
insl
inc
cli
push
insl
ret
mov
inc
dec
mov
mov
push
xchg
out
jecxz
test
cli
mov
push
jl
add
lret
jl
and
fistl
mov
xchg
adc
and
leave
hlt
scas
mov
das
jbe
enter
sar
mov
ret
out
xor
jg
and
add
cwtl
push
jg
sar
out
cmp
rcrb
out
enter
out
sbb
mov
ljmp
jb
jge
test
xor
pop
mov
pop
sub
adc
stos
add
cs
push
lahf
stos
imul
mov
cli
xchg
sahf
test
fadd
mov
std
mov
xchg
sbb
mov
push
xor
xor
mov
js
dec
pop
mov
pop
int3
adc
xor
and
push
insb
stc
sbb
mov
pop
push
cmpb
clc
or
sti
out
aad
xchg
imul
jo
push
jmp
cmp
pop
mov
das
xor
sbb
or
cli
scas
je
daa
int3
pop
cld
jle
sbb
mov
fidivrl
cmpsb
loop
xchg
mov
cs
loope
pop
cmp
mov
pop
cmpsl
test
mov
pop
lahf
std
jmp
popf
fdivl
mov
push
xchg
xor
sbb
outsl
push
and
mov
mov
out
movsb
sub
mov
and
xor
cmp
arpl
mov
into
xadd
lods
push
sbbb
inc
mov
aad
xchg
xchg
mov
mov
sbb
addr16
shlb
insb
or
push
daa
adc
lahf
mov
outsl
xchg
add
pop
rcrb
fidivrl
inc
popa
popf
dec
and
dec
mov
pop
paddw
xor
add
ret
out
arpl
push
xor
test
jmp
xor
mov
or
pop
in
cmp
ljmp
mov
fs
sub
out
imul
or
shlb
cmpsl
cld
shr
mov
std
in
pop
adc
xchg
sub
insl
loop
outsb
inc
jno
jmp
ret
sahf
popf
test
ds
dec
jmp
mov
outsl
xchg
xor
and
jmp
dec
add
sbbb
pop
dec
add
dec
inc
loop
xor
sahf
push
stos
sub
cmpsl
jne
cld
mov
and
jbe
lods
sbb
shll
shrl
sti
icebp
mov
cmpsb
ja
rclb
mov
rcll
mov
push
or
push
in
jne
jmp
jg
adcb
idivb
cli
dec
in
mov
or
jb
das
push
sti
adc
repnz
xlat
add
pop
popa
sbb
sti
enter
or
imul
incl
add
push
pop
sub
sub
cmp
sbb
dec
dec
pop
popl
mov
mov
sbb
les
sarl
shl
mov
aas
cmp
dec
in
loop
push
subl
adc
test
es
js
outsl
shl
aad
jge
mov
xor
push
bound
mov
jo
imul
push
dec
in
fimull
add
scas
inc
pop
mov
xor
clc
imul
add
mov
cs
sahf
push
imul
xlat
jo
xchg
lret
pop
inc
aaa
cmpsl
out
aad
add
sub
outsb
mov
adc
aaa
add
xlat
cmp
sbb
lea
loop
shl
xchg
ds
loop
and
rclb
sub
testl
cmp
test
sub
mulb
mov
pop
movsb
arpl
mov
pushaw
out
jae
mov
cmpsl
std
cmp
shl
and
loop
inc
aad
and
pushf
jge
test
in
push
mov
scas
sub
cmp
lods
shrb
leave
call
pushf
sahf
push
fwait
pop
mov
into
rol
cmp
sbb
lock
pcmpeqb
in
sub
mov
out
negl
push
aaa
cmp
push
loopew
add
and
push
cmp
lret
aam
mov
iret
shr
jl
xor
or
inc
dec
mov
inc
in
jns
mov
out
sahf
xchg
add
add
aaa
outsb
nop
test
xor
mov
movb
and
in
or
xor
cltd
gs
jne
data16
out
daa
lock
push
shlb
fbstp
mov
enter
cs
sbb
mov
jae
xchg
sti
cmp
sbb
clc
imulb
and
pop
mov
outsl
push
ss
mov
cmp
adcl
inc
ror
stos
push
aas
sbb
arpl
inc
sbb
push
or
ret
fdivs
addb
stc
add
jmp
pop
xor
cwtl
enter
mov
jo
xchg
cld
aam
loope
inc
insl
push
and
adc
out
jge
inc
sub
setbe
pop
cmpsl
pop
adc
flds
push
stos
arpl
mov
sub
mov
dec
in
lret
jbe
inc
xlat
mov
push
repnz
inc
jg
lods
movsb
mov
je
lock
jae
jbe
das
xchg
mov
pop
repz
lahf
inc
lods
mov
xchg
ljmp
shlb
push
test
dec
sbb
aam
sub
xchg
sbb
loop
add
nop
loop
push
push
jae
mov
push
fildll
clc
and
fiadds
or
rcr
adc
add
cltd
data16
fmull
dec
out
push
push
lea
stos
fwait
mov
mov
xchg
adc
dec
jge
in
sbb
fisubrl
push
aaa
das
adc
fnsave
sbb
push
out
scas
or
add
rcrb
pop
lret
jp
mov
add
fildl
mov
xor
mov
fists
sti
add
sti
js
outsl
subb
push
out
test
dec
push
aaa
sub
popf
adc
out
lods
int
lea
mov
lcall
pushl
pop
data16
pop
xor
jne
sbb
mov
mov
pop
and
adc
push
push
mov
fcoms
xchg
xor
jne
dec
cmpsl
push
faddp
sbb
adc
jecxz
add
xchg
jge
lods
sub
add
int3
xchg
mov
fsubl
adc
mov
insb
sbb
aas
push
ss
es
dec
movl
jne
xor
xchg
add
xor
clc
fidivs
aas
shl
add
test
mov
inc
scas
lret
test
in
xchg
out
icebp
xor
arpl
loopne
jge
push
jl
arpl
movsb
jbe
mov
ljmp
xchg
cli
xor
inc
sub
loop
out
xchg
lods
outsl
je
mull
add
std
cmpsl
cmpsl
outsb
int3
int3
or
sub
xchg
testb
rorl
jecxz
test
mov
mov
imul
nop
imul
lods
push
jl
loop
xor
mulb
xchg
jecxz
sub
jbe
pop
pop
add
mov
mov
sub
mov
cs
inc
add
repz
xchg
or
pop
xor
mov
push
arpl
test
in
push
xchg
jo
add
jo
cwtl
rorb
mov
jmp
loop
push
movsb
lods
lea
adc
jg
js
cmpsb
jne
stc
fisttps
mov
pop
iret
pop
adc
fnstcw
aaa
add
xchg
frstor
es
mov
das
mov
cld
stos
pop
sbb
push
loope
push
jae
testb
mov
test
scas
sub
gs
add
scas
jne
pushf
push
ret
pop
ror
jo
mov
aam
and
jbe
cmp
push
xchg
cmp
sub
int
aad
sub
pop
fistpll
ret
xchg
sbb
insl
add
in
mov
scas
shrb
lret
outsl
outsl
add
adc
mov
cmp
mov
sub
add
les
int
xor
mov
bound
rorb
dec
popa
mov
jo
loope
dec
mov
push
inc
out
dec
mov
and
sbb
enter
push
pop
fwait
dec
pop
push
sbb
pop
test
mov
je
subl
and
jp
sub
clc
push
xor
mov
inc
jbe
out
test
in
xchg
xchg
sbb
sub
push
mov
test
rol
and
pushf
ljmp
inc
inc
cmp
mov
xchg
out
sub
int
enter
mov
dec
inc
xchg
jns
xchg
xchg
adc
addb
adc
add
mov
outsb
out
xchg
adc
int
xor
sbb
xchg
lods
mov
data16
or
dec
fxch
mov
jne
inc
out
aas
jo
fbstp
push
mov
cmp
cmp
or
inc
jb
div
js
insl
ds
test
je
lahf
cli
cmp
shrb
sub
stc
or
push
xchg
jae
pop
sbb
xchg
xchg
filds
inc
popf
aas
lcall
cmp
jecxz
in
push
sbb
js
push
xorl
popf
and
push
jb
xchg
xchg
adc
call
xchg
shlb
ja
fdiv
in
in
or
test
lds
pop
xchg
cmpsl
movsl
add
push
push
loop
pop
jbe
add
stos
repnz
lea
mov
inc
sbb
jmp
lret
lods
cmp
icebp
pop
push
int
xor
push
inc
cli
std
mov
cmc
inc
movsb
imul
in
or
inc
jo
mov
sti
stos
in
mov
lret
push
adc
psrld
xor
shll
jge
in
sub
sbb
loop
inc
lods
jb
cmpsl
xchg
pusha
pusha
mov
jge
inc
popf
int3
faddl
hlt
add
push
xchg
pop
or
movsl
pop
dec
cs
cmp
outsl
dec
iret
jbe
adc
pusha
cmc
out
andl
into
dec
stos
add
pop
cmp
push
clc
push
mov
aam
clc
or
sub
aaa
iret
imul
xchg
dec
daa
jp
mov
fxsave
scas
and
mov
xor
js
sub
sub
out
lret
test
cli
aad
pushf
rolb
sarl
mov
repz
jnp
cmp
inc
mov
stos
test
fidivrl
nop
add
leave
xlat
aam
push
fldl
add
mov
mov
fs
mov
xor
outsb
sub
mov
sbb
and
in
xchg
shll
rol
pop
xchg
push
and
scas
sub
shrb
das
int3
mov
cmp
inc
pop
sub
movsb
jae
stos
mov
push
push
call
adc
add
and
repnz
dec
test
dec
fmul
add
lock
clc
xor
dec
sbb
inc
outsb
iret
inc
add
inc
cltd
mov
push
xlat
mov
lods
inc
insb
loope
jle
filds
imul
xchg
mov
or
push
movb
es
and
or
xchg
xor
stc
and
jne
inc
mov
inc
data16
lods
dec
push
or
inc
push
aaa
pop
aaa
or
jge
push
js
dec
imul
jnp
push
leave
fstps
xchg
cmp
mov
repz
loope
outsl
imul
cwtl
and
or
inc
jp
push
and
ja
cmp
repz
xor
mov
bound
hlt
push
jl
adc
push
js
jns
sub
or
rcrl
jecxz
aam
je
ret
je
add
movsb
cmpl
daa
mov
and
inc
mov
and
pop
cmp
shl
jle
and
xor
xor
cmp
inc
push
shr
dec
ret
int3
data16
in
pop
pop
lock
add
sahf
jbe
in
test
add
dec
jl
ja
loopne
fwait
mov
gs
nop
pop
mov
shll
scas
aaa
push
pusha
jnp
hlt
sbb
popf
push
clc
xor
mov
mov
mov
push
rolb
loopne
sbb
xlat
les
call
push
pushf
jb
insl
or
xor
stc
jle
scas
push
add
xchg
pop
addr16
cmp
mov
pusha
popa
adc
mov
and
lcall
clc
dec
pushf
inc
cmp
arpl
cmp
dec
repnz
push
aas
mov
aas
sub
fidivs
fwait
aaa
mov
addr16
cld
push
scas
pop
sbb
jmp
lods
cld
cs
jo
cmpsl
inc
fxtract
ret
mov
popa
add
mov
repnz
inc
jmp
sub
inc
jb
cs
aas
lret
outsb
icebp
les
pop
lds
push
cld
rorb
jbe
adc
outsb
xchg
or
mov
dec
clc
imul
cli
xor
es
popa
sub
fsubp
lea
adc
repnz
in
xor
xor
mov
add
pop
push
jbe
mov
xor
dec
cmp
xor
insl
das
movsl
sti
mov
cltd
jno
loopew
push
mov
pop
mov
pushf
outsl
or
ret
mov
xor
sub
popa
jbe
das
cmovge
push
dec
mov
pop
xchg
sbb
ja
mov
loop
pop
sub
adc
adc
pushf
pop
sub
cmp
sub
dec
fstl
push
shrb
push
jno
jl
ja
repnz
pushf
lods
mov
nop
mov
mov
popf
clc
inc
cli
xchg
pop
rolb
outsl
cld
jnp
addl
in
push
call
sbb
test
and
jne
test
incb
cltd
cmpb
sti
subl
inc
movsl
nop
call
leave
mov
or
sub
adc
push
adc
mov
movl
aas
adc
xchg
outsl
loop
cli
out
mov
orl
jg
mov
shl
push
mov
arpl
inc
xor
pop
jg
push
icebp
lcall
data16
adc
xchg
mov
sub
add
repnz
je
nop
hlt
leave
pop
icebp
cmpb
fwait
dec
scas
dec
std
jl
xchg
mov
xchg
std
dec
addl
out
jns
inc
or
mov
les
pop
sub
es
loopne
fldcw
popf
adcb
push
loope
std
in
popa
lds
cld
mov
mov
jmp
pop
lods
sub
xchg
fildl
sbb
aaa
shrl
xor
sbb
bound
xor
mov
mov
leave
jbe
in
cmp
test
dec
sbb
xchg
aam
jo
push
dec
lret
sub
inc
adc
std
or
test
add
inc
push
cmp
mov
loopne
les
rcl
mov
add
scas
outsb
push
push
std
pop
int
xchg
es
movsb
mov
into
xor
add
out
pop
cmpsl
jbe
pop
mov
mov
pop
xlat
pop
mov
cmp
mov
sub
and
inc
jo
popf
mov
pop
out
inc
sbb
ja
shr
repnz
and
dec
cmp
loopne
hlt
dec
adc
jno
loopne
mov
push
mov
insl
mov
insl
push
aam
inc
pop
dec
xlat
lods
in
sahf
imul
mov
dec
in
inc
and
sub
into
shr
and
ret
lock
not
inc
loop
daa
xchg
mov
dec
inc
idivb
push
repnz
lock
test
shll
mov
push
adc
adc
mov
push
shll
xlat
pop
inc
mov
fisubs
and
sti
mov
inc
jo
push
xor
aam
push
inc
jb
cmp
sbb
mov
push
insb
or
and
add
mov
popa
dec
mov
add
mov
pusha
cld
loopne
arpl
fldcw
cmpsb
dec
cmp
inc
into
push
sub
daa
je
in
xchg
out
test
push
bound
sbb
jnp
sub
shll
movsl
cmpsb
in
std
shrl
xor
add
ja
jmp
mov
cld
xchg
dec
lea
sbb
out
outsb
mov
pop
scas
aad
mov
adc
mov
push
push
jmp
ret
adc
or
fistps
push
outsl
cli
or
or
insl
jb
xchg
lods
cmp
cli
and
xchg
mov
mov
xchg
pop
fs
mov
and
shr
in
into
sub
pop
and
sarb
imul
push
adc
js
mov
lcall
add
lods
movd
jae
mov
add
mov
loope
adc
sub
pusha
loop
stos
int3
ds
mov
add
mov
cmp
xor
hlt
inc
loope
out
mov
lds
adc
subl
les
aaa
cmp
inc
pusha
and
js
ficomps
jae
dec
mov
adc
fwait
add
je
test
cmpsl
pop
out
mov
inc
push
cs
xchg
or
mov
and
hlt
arpl
mov
mov
add
pushf
jmp
and
clc
out
mov
or
stos
cmp
mov
sub
jle
rep
js
addr16
jbe
push
je
push
fcmove
shl
adc
xchg
mov
js
sub
and
xchg
add
jno
addr16
add
fdecstp
pop
jg
lods
dec
bound
and
mov
and
sub
and
inc
iret
in
mov
in
es
pop
push
ss
shlb
iret
add
inc
or
jae
scas
and
loopne
imul
insl
bound
ret
add
mov
insl
xor
in
jb
gs
jecxz
mov
aam
jg
mov
push
pop
push
imul
loop
ror
jmp
negb
mov
es
test
jl
push
sub
inc
mov
out
mov
sti
repz
pop
das
xor
lods
fists
mov
jge
pushl
imul
in
xchg
jl
dec
lcall
sti
dec
mov
imul
mov
mov
int
adc
movsbl
popf
mov
out
push
sbbb
mov
push
in
or
cmp
adc
cmpsb
or
negb
pop
push
lock
inc
xchg
pop
lds
adc
test
negb
push
pop
dec
out
outsb
mov
xlat
insl
ja
jmp
sub
and
jb
xor
fwait
divl
int
adc
cs
xor
es
mov
xchg
rclb
pop
shl
clc
out
aad
test
into
adc
mov
and
movl
cs
push
xchg
sbbb
fadds
or
imul
push
mov
mov
dec
shrb
aaa
push
xor
cli
pop
aaa
jbe
sar
pop
sub
push
add
or
mov
sub
imul
test
add
sarl
xor
mov
sar
pushf
jbe
test
xchg
sub
mov
jle
push
mov
loop
xor
rorl
xchg
push
and
xchg
sbb
mov
mov
repnz
push
adc
ja
stc
and
fcmovbe
jg
popf
arpl
and
add
sbb
outsl
mov
aam
cli
pushl
mov
shlb
mov
pop
ret
mov
or
inc
ljmp
stc
fmull
mov
push
push
movsl
je
mov
scas
xchg
hlt
lock
inc
lods
and
cmp
cmp
dec
sarb
sbb
cld
clc
xchg
and
mov
jmp
sub
or
sub
ret
jne
cs
hlt
xchg
sub
sbb
fildl
adc
sarb
xor
inc
int3
pop
pop
adc
fnop
test
cmpsb
cwtl
sarb
clc
in
mov
inc
sbb
lret
orl
jmp
clc
in
mov
gs
adc
pop
lods
cld
fs
inc
ss
or
sub
outsb
xchg
push
push
aam
mov
push
das
repz
pop
popa
and
movsl
jb
dec
sbb
add
aas
cmp
mov
jno
push
dec
pop
add
stc
test
adc
cmp
xchg
push
and
jo
loope
stc
pop
mov
xchg
mov
push
cmp
dec
push
sub
test
dec
push
push
int3
lahf
pop
push
leave
scas
js
push
bnd
push
roll
into
sub
sbb
xchg
xor
inc
xchg
and
dec
mov
xchg
imul
mov
xor
fisubrs
push
sbb
mov
addb
mov
aad
out
lea
shl
push
or
jnp
shr
cli
mov
stos
test
mov
std
xor
je
adc
sbb
fucomi
stos
jno
imul
in
lcall
sub
pop
out
push
ds
lods
cwtl
dec
mov
lret
mov
repz
inc
cmp
shll
adc
pop
dec
pop
lret
xchg
inc
cmp
scas
cld
mov
out
cmp
push
and
and
leave
testl
andb
loopne
dec
push
pop
jmp
cmp
sarb
mov
jb
fadd
cwtl
psubw
mov
jg
cmp
sub
cs
stos
ficomps
fbld
das
nop
add
adc
ret
cmp
pop
jmp
test
pop
push
push
push
insl
daa
pop
test
dec
fsubrs
rorl
push
push
addr16
inc
filds
popa
pop
pop
push
dec
cltd
test
jmp
and
dec
lods
jle
insl
sub
inc
push
mov
lret
mov
stc
jge
rol
mov
pop
sub
std
mov
popf
xchg
xor
pop
cld
popa
push
mov
cwtl
jle
xchg
or
imul
cmp
out
add
adc
adc
mov
ds
ja
in
cmp
lods
lret
adc
in
fwait
cmp
cs
jns
dec
ljmp
sbb
fsubs
inc
mov
in
ja
js
test
sbb
sub
adc
push
jne
incb
pushf
cs
outsl
or
ds
je
mov
pop
push
xor
addr16
hlt
bound
int
gs
cmc
test
lea
loopne
sbb
lret
fs
push
ret
pop
adc
cmp
adc
add
xor
add
int
sbb
push
push
jg
loope
insb
pusha
ficomps
lock
mov
adc
call
jecxz
sub
lock
jl
lahf
push
imul
out
xor
fcomi
or
movsl
mov
xchg
test
push
into
fildll
cld
insl
daa
popa
aaa
xchg
xchg
aas
dec
inc
push
fcompl
rorb
das
sub
loope
push
lret
mov
adc
jae
das
or
pop
lahf
fistps
inc
cmc
ja
xchg
mov
dec
cli
push
cmp
push
stc
sbb
push
addl
jne
jmp
mov
jb
and
jle
xchg
call
lock
adc
or
in
repz
mov
test
push
jae
into
mov
cmc
jle
push
call
xor
adc
xchg
loopw
mov
lods
or
daa
leave
cmpsl
mov
push
sub
xor
xlat
outsb
and
mov
stc
jb
jle
mov
cli
xor
ret
icebp
js
out
mov
dec
int
add
fildll
fisubrl
adc
dec
ja
xchg
or
lds
stos
nop
std
mov
sahf
push
xchg
pop
lahf
lcall
or
push
push
stos
add
rorl
jbe
xchg
inc
stos
mov
es
pop
loope
in
push
xchg
push
and
in
loopne
in
sbb
popf
dec
fwait
std
fimuls
inc
or
dec
stos
ds
insb
xor
mov
fsub
inc
pusha
sub
jl
sub
push
outsb
pop
popa
xchg
sbb
push
shll
leave
dec
ret
leave
cwtl
fisubl
sti
scas
sub
pop
jne
rclb
rorl
popa
repnz
push
xor
jle
mov
in
das
jns
mov
xor
ja
jmp
fidivrs
add
jns
ljmp
nop
fstpl
adc
adc
pop
add
adc
jno
inc
ror
aam
cltd
cwtl
sbbl
or
jae
mov
xchg
mov
pushf
bound
fdivs
push
es
test
das
mov
fwait
test
jae
leave
jl
mov
loopne
add
leave
lahf
mov
lret
push
pop
cmpsl
sbb
popa
push
in
test
sbb
pslld
js
frstor
add
call
xchg
std
and
add
xlat
xchg
mov
cltd
pop
cmpsb
xor
push
ret
lret
push
jae
sbb
pop
jg
jno
pop
int
push
aam
add
xor
lods
xchg
mov
push
imul
jmp
pop
ret
shrl
push
das
push
or
xchg
andb
int
in
and
lock
ret
jl
out
jp
or
xchg
loopne
mov
mov
scas
fwait
mov
ret
mov
or
sahf
cli
pop
sub
sub
cmp
in
jg
push
ja
cmc
push
cld
pop
mov
int3
push
mov
jne
enter
movsb
add
jnp
cmc
and
sbbb
push
xchg
in
sbb
cmp
cmp
das
cmp
xchg
jbe
pop
aaa
jnp
and
out
dec
jecxz
loope
jnp
mov
and
call
jg
cmp
insb
enter
lcall
ljmp
mov
jne
int3
cltd
insl
mov
or
roll
sbb
xorb
jae
and
test
cwtl
pop
psubsw
mov
pop
stos
push
fs
test
icebp
loope
loopne
cmc
cwtl
in
cmp
mov
inc
push
adc
outsl
testl
pushf
sbb
mov
sub
jne
dec
mov
sbb
fbld
test
ds
xor
je
inc
mov
das
mov
pop
repnz
inc
pop
mov
cmp
cli
xchg
mov
in
loopne
outsl
and
icebp
das
cmp
mov
test
repz
dec
pop
and
xlat
rorb
data16
fisubrs
ret
mov
push
jb
or
or
es
dec
push
mov
and
add
jo
loopne
jmp
ja
pop
push
mov
ljmp
sbb
outsb
push
mov
lret
inc
xor
push
mov
test
stc
jne
out
cmp
mov
popf
push
mov
sti
jbe
iret
mov
dec
mov
in
lock
jle
loopne
sbb
lahf
jl
fstps
push
lret
das
xchg
jbe
je
fistpl
cmp
stos
push
sahf
pop
or
mov
hlt
out
add
adc
jge
out
sub
xlat
pusha
mov
cld
insl
hlt
jg
cmp
sbb
mov
mov
sti
iret
adc
and
pop
mov
cmpsl
aam
adc
movsl
mov
push
repnz
xchg
inc
adc
in
push
xor
push
and
jb
mov
lods
lock
xor
dec
stos
stos
cmp
es
les
out
inc
push
int3
xchg
pop
jns
leave
or
xchg
mov
insb
imul
test
pop
fidivs
ss
and
mov
int
push
jbe
into
jnp
dec
push
mov
dec
or
aam
pop
adcb
add
neg
add
dec
lods
push
bnd
cltd
xchg
ljmp
push
clc
and
mov
scas
insb
gs
adc
out
cli
mov
cmc
js
pop
mov
pop
cmpsl
fcmovbe
ret
in
mov
fmul
imul
jge
scas
hlt
mov
xor
sbb
out
mov
lods
stos
in
pop
and
sbb
xlat
jle
enter
push
bnd
push
pushf
pop
add
js
inc
pop
adc
jb
add
int3
push
mov
mov
mov
stos
lcall
std
adc
mov
mov
repnz
mov
cs
mov
xor
fisttps
adc
lret
add
fs
xchg
loope
jl
lock
popl
pop
rclb
dec
ret
jecxz
std
das
dec
cmpsl
push
fwait
add
xlat
mov
xchg
pop
jecxz
bound
in
bound
popa
gs
cwtl
inc
lods
inc
inc
roll
loop
aas
dec
mov
pop
sahf
sarb
xchg
dec
pop
or
dec
or
xorb
loope
js
xchg
xlat
inc
lock
dec
or
add
jge
add
out
out
loopne
cmpsl
jp
inc
jle
cmp
pop
pop
inc
dec
nop
call
adc
outsl
imul
xchg
jge
cli
jecxz
xor
add
out
dec
cmpsb
xchg
and
push
adc
mov
jge
mov
jl
ret
jo
andl
xor
adc
arpl
mov
inc
sarl
sti
push
cmp
into
frstor
movsb
gs
imul
lret
js
fsubrp
and
pop
mov
pusha
pop
push
lahf
les
js
jno
mov
mov
push
sahf
xchg
and
pusha
jno
movl
imul
xlat
inc
push
sbb
vmovss
movsl
add
dec
jo
push
gs
adc
mov
dec
or
mov
xchg
mov
xor
arpl
shlb
lcall
movsb
push
jge
cwtl
pop
movsl
mov
add
repnz
mov
pushf
mov
mov
es
jbe
data16
sub
jge
dec
sbbb
mov
pop
test
ret
push
push
in
sbb
fwait
shrl
imul
add
xchg
xchg
xor
es
sbb
popf
dec
hlt
outsl
mov
xchg
lock
hlt
pop
repz
aad
and
sbb
call
movsl
in
add
pushf
sbb
add
or
add
push
js
jno
xchg
out
mov
mov
add
mov
ss
push
clc
les
fucomp
cmp
push
movsb
dec
adc
sub
mov
lds
lea
out
scas
ds
testb
mov
push
test
mov
pop
mov
adc
sub
iret
mov
xchg
mov
and
cmp
pop
cmpsl
ret
js
or
mov
ja
pop
xor
cmp
inc
jb
outsb
gs
jg
shll
ds
add
lea
adc
out
outsb
xor
sbb
clc
and
mov
fwait
xchg
dec
dec
sbb
or
xchg
cmpsb
add
xor
jg
dec
sub
push
jge
daa
push
or
xor
jno
popf
xor
mov
fstl
mov
xchg
xchg
add
adc
cmc
inc
and
jo
mov
lds
or
andl
and
push
add
outsb
sub
icebp
sbbb
xlat
in
inc
rcr
in
jg
movsb
fwait
push
pop
xor
lret
mov
pop
jo
notl
mov
movsb
fisttpl
dec
sbb
push
add
cmp
into
add
inc
incl
dec
out
and
sub
xchg
xorb
xchg
pcmpgtd
adc
jp
inc
push
sbb
sbb
push
pop
inc
pop
add
pop
rol
in
mov
insl
sbb
movsl
movsb
out
push
test
dec
icebp
cmp
inc
repnz
pop
xlat
jne
cmp
xchg
movsl
mov
push
mov
in
push
clc
jge
dec
inc
shrl
dec
sub
mov
pop
lock
xchg
cmp
pop
rcr
inc
add
inc
in
jmp
test
add
ret
pop
push
movsb
jp
aaa
das
add
fs
cmpsb
xchg
ret
outsl
ds
ds
roll
inc
cmp
jno
jmp
loope
adc
jmp
sub
cwtl
xor
and
aad
sbb
pop
cs
out
jecxz
repnz
js
iret
test
or
jo
andl
xchg
add
test
jbe
cli
cmpsl
mov
aad
dec
fwait
jns
nop
sbb
mov
and
sbb
ljmp
pop
xor
faddl
es
fildl
jae
jp
dec
popw
icebp
push
mov
sarl
aam
dec
movsb
fisttps
mov
out
jge
pop
mul
pop
movsb
adc
push
fdiv
push
mov
add
push
and
mov
icebp
adc
mov
mov
inc
call
popa
mov
cmp
adc
int
sub
hlt
es
dec
mov
sbb
stos
mov
mov
arpl
gs
dec
in
frstor
add
insl
add
ljmp
int
or
mov
or
adc
mov
inc
push
jnp
enter
out
inc
fcompl
idivb
xor
ss
fcomp
or
xchg
outsb
fcmovne
lahf
xor
sbb
aaa
mov
in
gs
repz
xor
xor
dec
call
pop
cmpsl
incb
add
daa
and
out
xlat
in
pop
cli
popf
xchg
mov
jecxz
ds
ljmp
or
push
jb
add
xor
sbb
lock
lea
xchg
adc
inc
add
dec
push
and
ret
cmp
xchg
ja
mov
rcr
rol
mov
int3
test
stos
loope
or
aaa
fdiv
and
aaa
xor
mov
xchg
jae
sbb
xchg
rorb
loop
sbbb
mov
mov
fwait
inc
test
scas
jae
push
xchg
test
sub
cmc
mov
cmp
dec
sub
sub
lods
jmp
stos
xor
shr
dec
sub
shl
icebp
cmp
fnstcw
imul
adc
int3
push
xor
sbb
mov
add
lahf
test
cmp
cmp
dec
cwtl
lcall
jp
push
and
xor
jecxz
and
fwait
std
in
xchg
popa
pop
add
push
rol
sbb
jl
pop
mov
jp
cmp
fs
aaa
xchg
push
stos
aad
scas
out
test
sbb
jmp
ja
cmpsb
xor
lret
cmp
dec
call
cltd
jne
push
sbb
mov
and
clc
push
out
pop
clc
push
test
ljmp
mull
ret
mov
mov
adc
insb
add
jg
cs
lea
leave
rclb
adc
imul
sbb
lock
test
pop
sbb
call
push
push
jae
cmpsl
cmpsb
test
inc
aaa
sub
sub
xor
pushf
fidivrl
cld
out
adc
cmp
ljmp
dec
jge
lahf
icebp
inc
bound
pop
sbb
fucomi
out
adc
ja
mov
xchg
push
mov
mov
pushl
cmp
out
inc
sub
icebp
cs
push
das
leave
pop
jecxz
out
mov
lcall
js
inc
xchg
mov
inc
cli
or
xchg
mov
cld
data16
push
cmp
and
sub
lds
mov
dec
jge
lods
cli
sbb
inc
cmpl
arpl
cmpsb
movsl
pop
and
fwait
push
xchg
icebp
or
add
jno
js
xor
add
fistpll
pop
das
sub
jmp
xchg
imul
ds
fidivs
sbb
rcrl
lea
hlt
mov
pop
subl
gs
jmp
stc
sub
ss
push
hlt
xchg
xchg
pushf
test
fldl
lcall
xor
pop
stos
loope
lcall
cmpsl
mov
daa
mov
shlb
adc
out
jns
gs
push
push
das
fs
jb
xor
insl
mulb
ljmp
ss
fists
ja
imul
imul
cmpb
and
mov
sub
inc
cwtl
adc
nop
roll
dec
into
lahf
loop
cwtl
dec
arpl
notl
sub
or
fwait
xor
or
ljmp
dec
imul
cmp
push
call
shll
ljmp
mov
xchg
nop
jp
lret
pop
mov
dec
fistpll
xchg
lret
mull
push
sbb
mov
jno
lods
out
sub
lcall
pop
repnz
sub
inc
leave
lcall
mov
ljmp
arpl
int3
jle
nop
or
and
into
hlt
cmp
and
lea
xchg
lds
pop
jl
mov
ret
jo
rorb
sbb
or
ficompl
push
jb
test
pop
fimuls
push
stos
push
add
or
aaa
pop
mov
out
sbb
rcl
push
movsb
lret
out
out
daa
in
repnz
push
icebp
addr16
scas
and
aad
adc
xchg
aaa
inc
pop
push
pop
pushf
stos
ss
mov
add
in
cmp
lock
or
mov
cld
mov
in
sbb
or
xchg
sbbl
test
les
imul
lods
cli
clc
iret
xchg
aas
dec
jmp
add
dec
xchg
add
stos
mov
addl
addr16
mov
xchg
les
or
push
popa
aad
inc
mov
je
xchg
fidivrs
sbb
scas
add
sbb
add
call
enter
inc
stos
jecxz
int3
pop
pop
call
and
lahf
mov
int3
add
fldenv
shll
test
aaa
cmp
std
cli
push
mov
jne
push
mov
or
rcrl
push
pop
xchg
repnz
test
shll
jo
mov
xchg
inc
cli
hlt
test
inc
sti
sbb
test
adc
mov
xchg
in
addl
sahf
std
imul
sub
popf
movsb
ret
lea
mov
adc
lea
fucom
jne
shlb
sub
lahf
mov
lds
pop
push
inc
adc
mov
outsl
cmp
pop
cmp
jg
dec
xor
pop
loop
aad
mov
push
xor
and
movsl
int3
dec
subb
pop
pop
mov
clc
orl
pop
cmpsl
pop
push
sbb
mov
jl
push
shrb
and
mov
je
or
sub
cwtl
push
sub
jno
imul
das
or
leave
adc
mov
fildl
push
popf
sahf
test
add
cmp
pop
xchg
or
or
xor
into
fidivs
xchg
add
xchg
ljmp
test
ret
icebp
outsl
lds
lods
jg
cpuid
dec
fsubrp
mov
dec
or
imul
fucomi
and
add
adc
push
lea
gs
dec
push
out
pop
jne
fstpt
outsl
bound
push
aas
mov
ljmp
push
and
pushl
test
push
push
cmp
jnp
push
movsb
lcall
lahf
sbb
mov
add
jae
and
add
jle
shll
xchg
dec
push
jnp
out
push
fnstsw
xor
add
inc
xlat
mov
pop
jecxz
sbb
mov
pusha
cmp
dec
fsubrs
out
jno
lods
xor
loopne
jne
mov
popf
in
iret
xlat
addl
mov
into
mov
mov
mov
bound
imul
ljmp
daa
xchg
int
je
insb
inc
xor
cmp
fstps
sbb
xchg
cltd
sbb
cmc
insb
aad
fcmovne
mov
or
in
out
sbb
pop
cmpsb
mov
fcomps
icebp
inc
and
mov
into
sub
mov
xor
out
mov
sahf
das
mov
mov
jmp
mov
test
rclb
push
jmp
sbb
xchg
test
rolb
push
jno
push
and
inc
push
push
out
int
pop
add
fistps
data16
push
arpl
xlat
adc
lods
pop
mov
out
repz
or
cmp
out
mov
int3
dec
adc
jmp
pop
js
mov
or
imul
xchg
rclb
js
jae
xchg
cmp
pop
jg
les
cmpsb
fcompl
rcrb
fwait
cmp
cmp
je
andl
jo
ja
adc
xor
jns
cmp
sub
lock
clc
jo
sbb
push
add
dec
jl
aaa
leave
mov
push
mov
pop
xor
mov
loopne
loop
aad
inc
jne
xchg
stos
add
sbb
fs
into
sub
daa
jge
sti
pop
call
icebp
subb
ja
cli
adc
out
test
sarl
xchg
jp
dec
jne
dec
push
dec
or
xchg
sti
mov
sbb
inc
mov
mov
arpl
fmuls
pop
push
cmpsl
adc
pop
nop
jbe
roll
les
sbb
pop
xor
mov
lods
fistpl
inc
push
jmp
lods
call
pop
test
add
in
repnz
out
mov
mov
bnd
test
push
add
popf
jle
mov
dec
add
cltd
mov
xchg
mov
push
xor
shll
fnstsw
aam
mov
push
push
call
xchg
dec
and
daa
bound
mov
and
pop
jge
pop
mov
ficoml
xchg
xor
lods
add
and
aam
cmpsb
aad
and
dec
fs
and
pop
ds
in
je
loope
cwtl
add
mov
push
out
cmpsl
in
and
sbb
mov
adc
testb
push
fs
sub
or
data16
mov
sbb
and
ja
and
sub
sub
fsts
movsl
js
sbb
inc
mov
jne
lret
int3
lds
inc
xchg
stos
mov
mov
gs
fdivrl
outsb
addr16
stos
lcall
scas
mov
test
ret
aaa
xchg
mov
inc
lea
sahf
xchg
adcb
sbb
cmp
dec
into
aaa
outsb
mov
stos
js
xchg
jo
pop
push
push
loopne
mov
cld
std
lods
add
cmp
cmp
xor
mov
rcrl
and
inc
jbe
pop
pmaddwd
jbe
mov
cmp
xlat
int3
jns
lock
cmc
sbb
sub
subb
inc
sbb
sbb
xchg
je
or
fimuls
icebp
stos
in
jnp
shl
aad
mov
inc
push
repz
fucomi
popa
pushf
popf
pop
fcoml
iret
test
xchg
xlat
ds
bound
xchg
cmp
adc
lods
dec
jp
in
push
mov
arpl
loope
push
orl
sub
xchg
jmp
fwait
sti
aam
aad
jo
sbb
and
mov
mov
mov
out
fidivrl
gs
js
cltd
push
out
aaa
scas
shll
or
sub
xor
adc
cmp
cmp
cmp
inc
push
inc
insl
xchg
xor
outsl
sub
int
jne
xor
sbb
and
push
inc
mov
shrl
aas
inc
pusha
xchg
mov
ret
repz
fsts
push
xchg
mov
and
pop
js
je
fs
and
sti
xor
and
test
jns
std
mov
xor
lock
or
fnsave
scas
mov
xchg
push
out
es
scas
mov
xchg
jo
add
pop
scas
aam
cmp
pop
add
in
stos
mov
lea
xchg
mov
icebp
loope
adc
call
push
notb
and
fmull
pop
pop
lds
shr
out
inc
pushl
daa
and
adc
xor
fwait
cmpsl
inc
mov
or
add
leave
test
mov
test
push
pushf
add
xchg
cmp
cltd
mov
lods
xchg
test
dec
dec
mov
mov
push
cli
add
xorb
icebp
xchg
or
lret
sbb
jg
das
aaa
jmp
mov
fcomi
jg
lcall
mov
rcl
or
sub
mov
lods
cmp
test
jns
pop
out
adc
or
jae
fwait
xor
mov
aas
pop
mov
adc
cmpsb
sub
add
xlat
ret
mov
in
das
inc
fs
out
arpl
pop
outsb
sahf
cmpsl
into
sbb
jb,pn
jno
push
movb
mov
fwait
or
push
dec
cmc
push
fcoml
mov
jge
lret
test
xchg
sbb
adc
pop
pop
pop
movl
ljmp
adc
cld
cmp
sahf
mov
mov
and
pop
mov
movsb
adc
dec
nop
fisubrl
cmc
inc
lods
inc
xchg
mov
inc
scas
mov
imul
add
cs
dec
ljmp
psrad
mov
mov
inc
xchg
cmp
add
sbb
lret
arpl
mov
mov
repnz
daa
pop
add
popf
xor
xorl
xchg
aam
stos
inc
mov
sti
inc
sbb
dec
pop
js
call
push
mov
addr16
nop
xchg
inc
mov
aad
inc
mov
xchg
fsts
sbb
imul
lret
pop
mov
jl
addr16
in
das
xlat
gs
mov
xlat
ficoml
out
iret
sti
xchg
and
jecxz
jnp
daa
push
out
mov
loopne
sahf
int
mov
adc
or
cmp
mov
inc
popa
mov
cmpsl
push
jno
cmp
rolb
jp
ret
jmp
pop
ret
dec
fbld
xor
push
je
addl
int3
cmp
pop
mov
rcrl
sbb
cmp
sti
enter
loop
fmull
cltd
xor
inc
mov
in
and
ljmp
into
ffree
rcl
gs
shlb
pop
leave
inc
out
pop
movsb
sbb
cmpsb
push
push
or
sbb
mov
push
push
jp
cli
push
or
subl
push
xor
push
sarb
iret
push
add
mov
mov
mov
lret
xor
out
mov
and
sbb
mov
gs
add
xor
sbb
aas
shll
sahf
mov
out
je
mov
add
inc
mov
repnz
add
adc
mov
and
or
jnp
daa
fimull
in
pop
out
or
fmuls
inc
rclb
outsl
xor
push
cli
clc
pop
je
cmp
into
jnp
icebp
fcoml
jmp
das
adc
jge
in
shl
or
push
xlat
sub
out
adc
cmp
xchg
mov
xchg
fnstcw
dec
aam
lahf
ds
push
push
mov
jae
js
xchg
cmp
jl
mov
xor
inc
sub
in
adc
fcompl
push
cmpsl
sbb
push
in
ljmp
xor
sbb
ss
adc
out
cs
push
sbb
addb
and
test
xchg
movsb
or
mov
push
mov
lock
jno
jle
and
fs
cs
bound
in
into
dec
ja
lock
ds
cmp
out
int3
ljmp
sub
mov
clc
test
repz
inc
fwait
push
push
gs
scas
sub
es
or
call
push
scas
lds
rcr
jmp
fistl
add
cs
mov
scas
jns
cmp
push
push
cmp
out
xchg
jl
rorl
mulb
sub
and
push
cmp
adc
inc
insb
sahf
push
xor
xchg
cmpb
lret
pop
gs
pop
out
lahf
lock
mov
out
lds
jns
mov
cld
mov
stc
aaa
dec
mov
mov
cs
xorb
xorb
shlb
setb
and
cwtl
lds
lock
imul
repz
xchg
sbb
sbb
dec
outsl
inc
gs
cmpsb
testl
inc
pushf
xor
hlt
loop
out
cmc
mov
in
jge
mov
inc
xor
mov
data16
iret
popa
loope
add
xor
int
and
mov
pushf
divl
mov
xor
push
leave
pop
dec
add
jmp
dec
mov
lds
js
xchg
mov
ljmp
inc
int
shl
lret
jno
cmc
push
popa
stos
jb
cmpb
cmpsb
jnp
jecxz
jns
adc
sbb
fldcw
addr16
push
int
xchg
mov
lods
ja
mov
icebp
es
add
stos
or
mov
and
or
xor
mov
inc
mov
loope
scas
jp
push
pop
or
cmp
mov
cltd
or
mov
dec
div
sub
popa
and
inc
push
shll
add
dec
test
dec
push
xchg
hlt
xchg
les
inc
sbbb
movsb
mov
insb
add
cmpsl
jae
mov
aas
mov
xchg
adc
cmp
andl
push
mov
shl
shl
add
inc
pop
and
jne
les
xchg
cmc
lret
push
fwait
cli
mov
cmp
or
cwtl
or
out
adc
mov
cmpsb
xchg
cld
cmc
out
lock
or
imul
inc
mov
push
stc
mov
daa
sarl
repz
mov
lret
call
pop
daa
cmp
repnz
sbbl
jmpw
rorl
loop
mov
rclb
xchg
mov
repnz
frstor
enter
ss
inc
or
loop
mov
lock
mov
inc
pop
xchg
push
adc
adc
or
andl
push
pushf
adc
insl
jns
mov
insb
xchg
stos
xor
out
fst
lret
mov
mov
fidivs
cmp
xor
dec
adc
sbb
jae
inc
in
pop
pushf
loope
mov
jne
mov
mov
iret
adc
inc
mov
mov
jl
xor
scas
ret
xchg
adc
mov
inc
xchg
inc
sub
loop
add
adc
arpl
dec
or
cld
mov
pusha
js
mov
mov
lea
mov
sahf
loopne
and
in
mov
sbb
mov
aad
test
or
call
push
ss
dec
xchg
js
xor
pop
out
int
sub
scas
jb
scas
or
add
lds
mov
js
jmp
in
xor
adc
popf
jbe
dec
je
inc
aam
mov
or
movsl
sti
sti
or
loop
mov
push
sbb
scas
scas
call
mov
int3
das
push
mov
adc
lods
xchg
outsb
bnd
jl
push
addr16
cli
test
adcl
outsb
sti
gs
fstps
dec
daa
jo
mov
mov
cmp
ss
dec
pop
out
xchg
ja
fists
cli
xor
push
jge
add
mov
mov
and
jmp
adc
into
push
gs
mov
cmpl
imul
jo
icebp
mov
mov
orb
and
jle
arpl
mov
out
sbbl
orl
lds
mov
jle
ret
std
sub
dec
jne
and
or
jns
lret
cld
lret
push
into
lds
dec
and
cmpsl
cli
push
stos
inc
cmp
hlt
inc
mov
pop
pop
fwait
add
ss
hlt
insb
sbb
cmp
std
fcoml
das
loope
dec
in
mov
js
jno
xlat
xchg
xchg
ret
shlb
push
adc
fwait
mov
loop
and
and
testl
sub
enter
pushf
dec
js
rcll
loopne
mov
xchg
sbb
xchg
lods
jnp
pop
cmp
cmc
shll
andl
out
roll
xchg
or
incl
popf
inc
shrb
fadds
movsb
push
mov
imul
das
xchg
or
stos
inc
in
push
imul
jecxz
aad
add
fisubs
mov
sbb
adc
and
add
pop
xchg
cmp
push
loope
cmp
jb
xor
jo
sarl
xchg
sbb
outsb
adc
add
stc
cmp
adc
stc
push
and
xchg
mov
enter
xchg
lahf
std
xor
dec
repnz
push
insb
faddl
or
sti
rcr
hlt
mov
xchg
jb
push
jecxz
stc
addr16
xchg
mov
xor
mov
pop
loope
and
adc
dec
inc
dec
gs
inc
andl
xor
outsl
cmpb
pushf
push
ds
int
jnp
lds
movsl
pop
mov
mov
test
xchg
sbb
mov
insb
push
xchg
and
mov
lret
loope
jns
jmp
cmpsl
enter
mov
inc
mov
test
addr16
in
or
jb
lret
sbb
decb
and
roll
ja
push
das
test
dec
nop
outsl
add
roll
mov
enter
fistpl
or
jmp
push
call
ds
push
int
sub
or
mov
ljmp
mov
jg
lahf
lea
xchg
cmp
cmc
inc
pop
xchg
loop
popf
mov
push
xchg
cli
push
jb
ss
push
out
cld
xor
mov
fistl
cwtl
into
inc
pop
sbb
push
cmc
popa
sarb
add
jbe
ret
addr16
cwtl
or
ja
shrl
push
or
xorb
out
sub
pop
jle
push
mov
xor
in
push
jp
mov
xchg
sti
test
mov
or
inc
mov
stos
inc
push
pop
ds
decb
mov
sbb
aam
test
rcll
pop
js
adc
xchg
fs
pushf
mov
cld
fstpt
int
loope
mov
jl
pop
mov
clc
stc
outsb
adc
sbb
mov
jl
pusha
or
shlb
and
std
cld
test
in
loop
xor
movsl
scas
pop
and
cmp
bound
sub
dec
loopnew
out
test
arpl
pop
add
dec
xchg
ret
xor
lahf
xchg
push
inc
out
pusha
ja
idiv
repnz
inc
ja
cwtl
push
mov
bnd
fwait
cmp
jne
mov
insb
inc
loope
sbb
xorl
imul
cmp
test
push
mov
test
hlt
jne
mov
xor
jmp
stos
sahf
jg
ret
push
sahf
sbb
lods
cmp
or
mov
daa
mov
cld
test
sub
movsl
add
in
sbbl
pop
cmp
sbb
xor
push
je
mov
xor
or
mov
sub
inc
iret
mov
jge
mov
mov
out
sbb
dec
pop
inc
xorl
daa
add
fimuls
mulb
pop
pop
dec
mov
mov
jbe
pop
jmp
imul
in
push
into
or
cmc
xchg
or
mov
mov
outsl
lds
and
rcll
int3
inc
jnp
sub
mov
gs
add
jb
jns
mov
pop
loope
jle
sub
xor
leave
lock
jle
sub
in
ja
ret
inc
popa
dec
inc
xor
and
push
test
dec
jne
push
in
push
insb
test
cld
and
ret
inc
or
fstsw
push
pop
adc
xchg
insb
xchg
mov
mov
mov
cmp
ret
test
dec
mov
push
xchg
ret
cli
push
mul
leave
mov
jo
mov
stos
or
mov
and
aad
daa
adc
das
push
out
add
push
push
cmpb
mov
fldenv
mov
es
aad
testl
movsl
or
mov
pop
dec
push
lds
andb
dec
xchg
sub
fstpl
xchg
sub
dec
mov
sti
shrb
adc
and
push
arpl
lds
clc
imul
scas
out
cwtl
cmp
mov
lock
xchg
mov
pop
mov
cmp
insl
scas
xor
push
lds
add
mov
das
mov
inc
push
mov
out
xor
cwtl
jecxz
mov
bound
mov
jbe
add
sub
adc
ss
insl
js
dec
call
add
or
sub
jle
mov
and
mov
daa
cmp
xchg
xor
daa
loopne
and
dec
jbe
adc
cmp
ret
mulps
push
sbb
repnz
gs
mov
inc
inc
mov
xor
jl
xor
out
jb
movsl
and
lea
repz
mov
das
adcb
xchg
aam
mov
loop
sbb
les
jo
mov
add
in
cmpl
pop
fnstenv
add
xor
stc
jle
inc
js
xorl
xor
jp
aad
mov
xchg
mov
aas
mov
adcl
or
insl
jns
mov
ja
in
push
lock
and
push
imul
push
fsubrp
sti
or
cmp
push
rcrl
arpl
push
lea
sbb
push
add
xchg
adc
daa
test
cltd
pop
xor
push
push
mov
lds
lods
sub
or
push
lahf
dec
iret
pop
out
les
andl
dec
mov
mov
enter
jg
aaa
pop
xchg
jbe
ja
mov
out
jne
call
out
sti
icebp
dec
mov
cmp
stos
shlb
cmp
lds
les
add
sub
jmp
popf
cmc
inc
inc
add
mull
in
add
out
cmp
pop
mov
dec
divl
stc
push
test
ds
mov
mov
mov
jmp
mov
cmovg
xor
mov
and
cmpsl
and
push
daa
shll
inc
cmp
sbbb
mov
mov
push
fwait
mov
xor
fstpt
adc
fnstenv
fnsave
es
dec
mov
sti
push
inc
ds
jae
and
push
rcl
test
mov
cs
fnsave
les
dec
test
pop
sub
push
rclb
ljmp
push
lahf
xchg
dec
adc
stc
mov
sarb
test
shlb
mov
fimuls
pushf
dec
repz
mov
sbb
das
sbb
xchg
xchg
cmp
imul
test
cwtl
xlat
inc
mov
cmc
adc
adc
in
stos
rclb
or
repz
enter
into
push
cmp
cwtl
xchg
bt
adc
shll
rcll
mov
js
mov
je
pop
in
pop
cmc
dec
pushf
push
cmp
stc
leave
inc
mov
add
pop
jne
push
push
pop
mov
gs
loopne
fwait
mov
dec
pop
jle
xchg
xor
cld
inc
push
mov
cli
sub
cmovs
adc
or
es
jno
or
stos
leave
lahf
fnstcw
movsb
in
push
lcall
xlat
hlt
in
mov
fwait
imul
mov
xchg
into
jnp
out
insl
adc
mov
jbe
xchg
ret
inc
sahf
sbb
fnsave
mov
sahf
mov
pop
push
push
mov
outsl
sbb
or
lret
icebp
push
mov
sbb
inc
mov
fsubr
mov
lcall
mov
movsb
pop
comiss
cmp
inc
cmp
jae
aas
mov
bound
jmp
pop
insl
jp
outsb
fucom
movsl
fadds
mov
mov
cli
cltd
call
out
sub
push
fs
in
xchg
xchg
testb
shlb
out
int
cmp
or
vpmacssww
sbb
xor
and
pop
movsb
mov
push
gs
pop
cmp
test
jmp
loopne
mov
clc
cltd
stc
bound
lahf
out
push
sarb
cwtl
cmpsl
dec
adc
clc
test
mov
or
add
inc
gs
daa
test
sub
push
add
stos
jle
insl
mov
out
sbb
test
scas
xchg
bound
ja
in
push
and
clc
or
push
int3
and
adc
xor
dec
nop
daa
xorl
sub
and
inc
or
xchg
cltd
das
inc
pushf
ja
andb
mov
mov
testb
movsb
sahf
mov
push
xorl
or
rcrl
outsb
bnd
lock
dec
loopne
adc
add
and
add
push
sub
jbe
les
lret
in
gs
sar
add
xor
in
ficoms
push
pop
sub
jno
mov
xchg
mov
pushf
or
fcmovbe
jmp
xchg
cs
dec
push
jmp
xor
push
and
mov
mov
leave
mov
icebp
mov
or
rcr
enter
cmp
pop
aam
pop
mov
test
das
jg
es
jge
xchg
sqrtps
pop
cmpsl
cli
int
mov
ret
dec
nop
mov
imul
fdivr
daa
es
cwtl
insb
int
int3
sbb
hlt
mov
xchg
popa
gs
icebp
jne
or
push
mov
lock
outsb
sbb
imul
iret
mov
out
sbb
dec
subl
inc
inc
mov
xorb
mov
or
bound
sub
fbstp
xor
sub
mov
fwait
movb
jns
and
push
loopne
add
fwait
cmp
xor
push
mov
inc
adc
pop
aas
xchg
mov
fs
mov
jns
lods
add
js
push
mulb
loop
cwtl
xlat
pop
hlt
sbb
rcr
push
inc
adc
jecxz
sub
jge
int3
push
inc
out
test
movsb
cmp
push
sbb
push
sbb
mov
mov
xor
stos
dec
adc
loop
push
cmp
rcr
lret
push
cmpsb
adc
mov
int
push
xor
test
stos
pop
mov
dec
xor
rcrl
fwait
pop
or
xor
push
bound
sbb
mov
pusha
rcrb
sbb
sbb
cmp
out
punpcklbw
pop
inc
xchg
out
pop
cmc
xor
mov
iret
in
dec
lods
mov
add
add
scas
dec
and
icebp
cmp
icebp
dec
mov
rorb
add
cltd
into
add
ret
mov
sbb
jmp
mov
cmp
fwait
fldt
outsb
icebp
push
push
or
movsl
movsl
lcall
cli
push
int3
mov
ja
or
pop
out
cmp
nop
into
xlat
pop
mov
pop
ljmp
mov
movl
inc
mov
sub
fdivrp
mov
inc
in
mov
sbb
cmp
add
imul
jp
insl
xchg
pop
loop
into
push
rorl
xchg
jno
and
adc
sahf
mov
mov
pusha
pop
loope
sbb
cld
lea
test
jl
insb
add
lock
cmc
into
push
enter
rclb
movsb
sbb
pop
push
xlat
dec
test
push
inc
repz
push
inc
push
jbe
scas
fisttpl
aaa
pop
or
or
mov
xchg
pushf
jne
pop
nop
mov
xchg
loope
ret
aaa
or
sbb
fbstp
cli
inc
pop
jbe
in
lods
push
in
in
sub
cmpb
sub
xor
into
jbe
enter
xor
mov
fwait
xchg
mov
push
jno
lret
inc
jbe
mov
push
xchg
add
mov
data16
fs
test
add
sbbb
popa
pop
xor
push
push
inc
je
xchg
fdivrs
cmp
xor
iret
ss
test
repz
in
sub
push
sub
roll
out
ucomiss
adc
sti
fdivrs
dec
adc
pop
fadd
imul
les
sahf
add
movsb
in
test
jo
push
dec
icebp
shll
mov
imul
xor
sbbb
pop
xchg
jnp
inc
fwait
inc
mov
hlt
sub
xchg
and
xlat
test
out
mov
rorl
addr16
movsb
xchg
add
and
repnz
stos
repnz
test
inc
push
push
push
out
int
sbbl
mov
add
je
fnsave
test
and
test
jb
sub
test
lods
xchg
sbb
jmp
test
mov
lret
mov
sub
pop
cmp
dec
test
iret
sahf
jo
test
adcl
sub
mov
out
cld
testl
test
xorl
in
jmp
push
fwait
rolb
cmp
or
xchg
aam
and
movb
popf
lahf
jb
aas
cs
int
jo
lds
pop
sub
sti
push
icebp
inc
and
lods
pop
mov
xchg
pop
or
popa
mov
jp
ret
pop
xchg
inc
sbb
adc
rorl
xor
mov
fildl
shrb
jg
scas
sub
aas
xchg
xor
or
stos
inc
push
mov
movsl
add
sbb
loop
lret
mov
pop
int
stc
ljmp
push
jnp
je
cmp
mov
dec
and
scas
or
sub
xchg
and
aaa
sbb
pop
xlat
bt
add
hlt
sbb
shll
shl
jne
jne
popl
pop
sti
movsl
pop
ret
movl
push
jge
nop
mov
nop
cmp
xor
mov
jo
push
mov
aam
xchg
xchg
xor
pop
mov
test
pusha
cld
push
popa
pop
sub
mov
xor
cmp
lods
jno
sub
test
arpl
loope
das
xchg
xor
in
mov
std
fisttpll
mov
mov
fimull
cmc
adcl
dec
fwait
ror
sub
lret
mov
mov
div
daa
inc
lods
mov
insl
adc
mov
add
cs
sub
jo
push
mov
xchg
arpl
cmp
sarb
mov
in
fmulp
sub
shlb
out
or
inc
rolb
push
pop
and
sahf
les
sub
leave
ja
xor
pop
pop
pushf
sub
pop
sbb
dec
xchg
maskmovq
mov
stos
insb
push
outsl
movsl
lahf
bound
cmp
loope
adc
movsl
mov
leave
das
pop
add
add
pop
xor
dec
pop
test
ss
addb
mov
jl
or
movsl
out
jmp
lret
lds
shll
addr16
ljmp
adc
or
rcrb
bound
or
cmp
stos
shl
es
incb
rorl
mov
mov
rcl
dec
in
mov
xchg
or
mov
stos
int
mov
pop
xor
rorl
int3
xchg
addb
adc
pop
mov
adc
std
stos
pop
imul
enter
mov
and
in
arpl
push
inc
sub
and
cwtl
cs
test
inc
inc
adc
cmpl
mov
scas
add
push
mov
sub
in
dec
cli
lcall
mov
push
hlt
jb
add
mov
lcall
push
mov
pop
or
push
adc
int3
fdivs
mov
push
int3
pop
outsb
dec
daa
inc
mov
inc
jae
fidivrl
gs
sub
addr16
xchg
xchg
fcompl
cli
repnz
loope
pop
sarb
repnz
jcxz
sub
loop
xchg
das
aaa
adc
sub
cmpsb
out
fwait
sbb
inc
out
mov
out
loope
sbb
imul
mov
loop
mov
sbb
in
mov
fistpl
lock
outsb
fcmove
lock
negb
adcb
inc
xchg
dec
or
divb
push
xchg
ficoms
es
jb
dec
xchg
mov
mov
fwait
inc
jmp
xchg
xchg
jg
dec
xlat
xor
into
jns
js
mov
xchg
shrl
pop
imul
xchg
or
es
adc
aas
loop
out
dec
mov
lret
iret
adc
xor
and
xor
cmp
adc
mov
lret
int3
push
das
adc
ljmp
cld
repz
mov
xchg
sub
cmp
dec
daa
stos
inc
inc
sti
sbb
lea
mov
and
scas
pop
mov
and
xor
push
cmpsl
dec
pop
dec
xchg
adc
fmull
sbb
push
adc
ja
ja
icebp
inc
call
movsl
add
imul
int3
xchg
dec
adc
test
mov
in
int3
pushl
jle
lcall
sti
pushf
movsl
insb
mov
pop
cltd
sub
mov
lret
or
jne
jbe
mov
cs
sbbb
mov
ficomps
xchg
mov
mov
orl
inc
pop
or
aam
sub
jns
jp
cwtl
pop
cmpsb
mov
mov
jp
cmp
scas
sub
stos
shrb
mov
mov
ja
sarl
shlb
dec
loope
xchg
insb
fcoms
adc
dec
inc
push
stos
mov
pop
xor
insl
add
cs
repz
xor
mov
jecxz
push
dec
add
lret
push
rcrb
jmp
test
sbb
test
add
mov
sub
pop
push
jmp
in
aam
mov
cmp
iret
enter
lahf
or
pop
aas
dec
int
mov
mov
lods
and
pop
addr16
bnd
pop
sub
addb
push
shrl
roll
mov
mov
leave
popa
push
repz
fsubrl
xchg
ja
test
sbb
outsb
jle
lcall
scas
mov
xor
int
xchg
sub
cli
and
std
fdivrs
repz
sub
xchg
push
lret
sbb
int3
rorl
mov
ret
in
arpl
mov
cmpsb
jo
inc
in
cmpsl
pop
sbbb
enter
ljmp
lods
jl
xor
jl
mov
adc
dec
xchg
sbb
movsb
mov
les
mov
and
pop
inc
add
jne
jle
mov
sbb
loopne
jle
pushf
jecxz
mov
add
dec
push
push
outsb
or
push
std
adc
xor
jb
pop
pop
pop
add
iret
add
adc
or
pushf
cmp
pop
cmpsl
mov
dec
imul
dec
test
and
loopne
call
jae
jbe
xor
and
rolb
fidivrs
shrl
push
shlb
mov
dec
mov
lahf
xchg
inc
inc
cmp
fstpt
es
stc
sbb
shll
sbb
cmp
je
inc
je
pushf
sti
push
pop
sbb
jp
jo
cmp
mov
sbb
fldenv
and
jecxz
rcl
shll
test
xor
push
movsb
sub
cmp
push
add
sub
aas
sbb
jnp
pop
mov
cltd
pop
fsubs
jle
loop
xchg
jbe
or
movswl
test
sbb
mov
cli
xchg
or
xchg
inc
jp
jae
mov
aam
movsl
push
dec
push
mov
fsubrp
pop
idivb
loopne
xor
pop
ret
mov
mulb
test
je
jbe
ja
fistl
mov
or
rcll
lahf
cmc
dec
pop
dec
mov
imul
add
inc
mov
and
mov
popa
test
add
addl
or
or
ss
jmp
test
cwtl
pop
in
mov
jns
enter
mov
dec
leave
mov
sub
push
mov
sub
fmull
add
pop
push
mov
push
repnz
mov
lret
pop
cmp
sbb
dec
xchg
mov
loopne
jnp
cs
ret
sahf
imul
push
mov
aad
push
pop
lods
push
cmpsb
int3
das
andb
fdiv
or
push
into
push
push
scas
adcl
xor
rclb
add
int
mov
mov
mov
in
stc
sub
lret
idivb
ret
push
xchg
jg
pop
and
mov
jno
jns
insb
aas
icebp
flds
imul
shrb
outsb
and
push
decl
mov
jno
cmp
pop
add
arpl
add
sbb
mov
roll
mov
push
jecxz
xchg
lea
mov
push
jne
pop
add
add
mov
mov
outsb
push
sub
mov
adc
enter
sub
sbb
push
sbb
adc
dec
jb
xchg
test
lahf
ret
sbb
adc
mov
xor
jb
sbb
adc
adc
mov
inc
sub
fistpll
xor
ret
sub
das
outsl
out
mov
cmp
mov
pop
lret
mov
inc
xor
add
addb
dec
sahf
test
jae
je
test
pop
inc
test
xor
orl
fldl
aaa
dec
aad
xchg
push
xchg
push
loope
imul
pop
pop
inc
and
popa
out
jae
mov
movb
adc
mov
dec
jo
ficomps
jns
bound
inc
push
jno
push
or
jnp
xor
shrl
shl
sbb
jle
xor
xchg
xchg
jp
adc
and
scas
xor
xor
mov
in
cmp
shlb
xchg
xchg
andl
jp
sarl
sbb
out
bound
loopne
push
hlt
jbe
xchg
inc
imul
fnstsw
filds
mov
or
psubd
popf
push
inc
daa
lahf
mov
dec
inc
je
push
verw
jbe
gs
sub
ret
mov
adc
mov
add
xchg
mov
insb
nop
lret
jb
or
clc
pop
negb
jge
imulb
pop
dec
adc
cmp
lahf
jge
nop
xor
cmp
and
push
popf
insb
testl
push
dec
rcl
in
scas
add
lods
mov
sarb
daa
push
inc
pop
cltd
mov
mov
paddw
shll
cs
and
push
fcoms
out
mov
clc
pop
lret
cwtl
adcl
or
lcall
cwtl
mov
cmp
ljmp
adc
push
push
adc
inc
test
fistps
xchg
mov
dec
ljmp
popa
sbb
adc
test
and
dec
or
push
mov
sti
test
sub
loopne
xchg
mov
movsb
loope
jg
neg
xor
test
test
mov
idivl
stc
mov
cli
test
push
inc
lea
in
inc
push
adc
and
inc
pop
push
inc
in
stos
mov
inc
aad
inc
and
xchg
adc
fdivl
movsl
movsb
mov
push
push
xchg
inc
dec
cwtl
cmp
shlb
out
fadd
mov
das
mov
pusha
dec
xchg
cmc
and
or
fstps
adc
mov
int
pop
test
bound
pop
std
cltd
adc
repz
out
sahf
and
mov
xchg
loop
subl
dec
iret
ss
in
jmp
clc
push
cs
addr16
sbb
repz
mov
push
sub
sbb
test
sbb
jns
sub
or
mov
push
mov
push
sbbb
gs
jne
xchg
push
mov
and
inc
mov
jl
xchg
and
xchg
incl
repnz
insb
jae
bound
fcomps
cwtl
mov
imul
sub
jmp
ret
push
lahf
cmp
jp
add
sbb
pop
xchg
ror
mov
jg
xchg
dec
dec
push
dec
aam
in
mov
mov
jg
sti
je
int3
xor
xor
insl
push
or
lods
jo
and
cmp
stc
mov
ja
sub
jnp
fldenv
mov
inc
pop
pmaddwd
adc
adc
je
mov
mov
es
sbb
rolb
scas
dec
mov
sbb
stos
xor
jp
ss
idivl
inc
int
mov
mov
xor
mov
or
cmp
loop
fwait
xorb
clc
xchg
cld
pop
mov
adc
cwtl
xor
sbb
test
ret
or
xchg
cmpsb
and
je
push
pusha
xor
jns
sbb
out
cwtl
pop
iret
int
icebp
int3
out
int
fidivrs
add
dec
push
or
add
dec
jecxz
xchg
insl
jae
scas
in
jne
inc
in
jle
mov
xlat
dec
xor
rclb
push
adc
das
and
call
enter
clc
mov
sub
mov
sub
fbld
xor
adc
hlt
sbb
sti
lahf
and
adc
test
es
stc
or
mov
fidivs
lock
imull
push
loop
enter
xchg
aad
fcomps
jge
sbb
sub
in
lret
dec
rcr
sub
fwait
mov
add
or
pop
std
cwtl
pop
xchg
cmp
test
mov
push
loop
test
pop
pop
ret
in
mov
sub
and
adc
or
mov
xorb
xor
xor
stos
push
dec
or
test
clc
inc
dec
xor
xchg
xchg
mov
faddp
xor
push
stos
jp
fcomps
mov
test
iret
testl
data16
mov
xor
jb
add
mov
and
divb
arpl
stos
push
sub
mov
imul
xor
iret
lds
insb
cwtl
xchg
sbb
jmp
arpl
insl
inc
sbb
xchg
adc
sub
adc
loop
scas
jg
out
sub
pop
lea
fmuls
adc
sbb
outsb
and
lcall
cmp
mov
ja
repz
mov
push
add
pop
xor
jecxz
lods
sarl
das
push
in
push
inc
fsubs
mov
es
cmc
adc
dec
fprem
push
addb
fmul
inc
call
in
xchg
jmp
loop
stos
sbbl
adc
add
mov
test
fucomi
mov
pop
push
in
enter
pop
and
aad
mov
scas
adc
std
mov
cmp
pop
mov
mov
jl
sub
cld
orb
and
fildll
mov
xchg
adc
or
jb
arpl
nop
mov
push
xchg
bound
or
push
xchg
imul
mov
lret
add
mov
ds
xchg
cli
cmc
mov
cli
jo
mov
inc
aaa
enter
dec
pop
loopne
jo
adc
dec
xlat
popa
and
and
dec
scas
push
push
dec
in
cmpsb
data16
jmp
push
cwtl
loope
movsl
popf
mov
out
mov
fidivl
loop
mov
dec
cmp
or
mov
std
mov
scas
mov
mov
and
in
sbb
iret
mov
add
pusha
ljmp
push
inc
ja
cmc
xor
mov
mov
hlt
cmp
mov
jecxz
inc
in
andl
pop
sub
inc
mov
xchg
lcall
cmp
xchg
mov
mov
add
mov
lahf
out
add
aaa
ja
xchg
xor
push
outsl
pop
repz
jb
icebp
add
mov
pop
or
sbb
cmp
outsb
lods
fsts
loopne
fs
out
frstor
ss
lret
jnp
loopne
xchg
jmp
movl
sub
xor
and
shlb
push
and
adc
xchg
adc
and
and
adc
mov
push
mov
push
mov
daa
lret
push
scas
inc
inc
je
sahf
inc
cli
push
cld
rcr
jecxz
or
adc
loopne
mov
push
jae
pop
jg
xor
mov
mov
push
adc
inc
fcom
mov
inc
inc
sub
jmp
fcmovbe
sbb
pushw
xor
lcall
sahf
or
mov
or
fsubs
sbb
mov
cltd
outsl
xchg
hlt
jbe
cwtl
push
push
outsl
fidivl
mov
mov
pop
push
push
sbb
push
mov
aaa
imul
jno
jnp
or
adc
sbb
xor
mov
lcall
lock
stos
pop
popf
sub
jl
and
inc
mov
dec
ljmp
push
push
pop
lret
sub
rolb
cmp
sub
inc
aad
dec
sbb
mov
into
add
cli
push
dec
orl
mov
out
stos
push
cmp
ret
addr16
sbb
insb
das
mov
fcoms
xchg
shll
sub
stos
mov
rolb
shrl
or
sarl
and
mov
cmc
jno
pop
lea
outsl
ret
jecxz
pushaw
stc
je
dec
test
ss
add
insb
add
shlb
pand
xor
rclb
shll
mov
mov
pop
out
test
add
pop
push
add
cmpsb
lcall
or
xchg
xchg
stos
inc
aam
fnstenv
aad
ud2
pop
leave
or
sub
cld
fwait
rol
rcll
sub
pop
and
and
mov
movsb
mov
pop
xlat
out
push
outsb
push
pop
jg
lods
push
jbe
dec
and
ljmp
lods
pop
das
test
xor
addl
lret
mov
mov
mov
pushf
pop
inc
out
sti
adc
mov
imul
xor
mov
in
dec
mov
aaa
lods
jp
das
cmp
lcall
cmp
pop
jge
cmp
mov
and
or
mov
dec
shl
push
out
cmp
mov
xor
push
push
lahf
or
push
jnp
sti
shr
mov
inc
les
aas
shlb
pusha
lahf
gs
aam
fdivrl
cli
jns
pop
idivl
inc
inc
pop
cld
xor
std
je
inc
in
orb
xchg
mov
mov
add
jmp
push
movsl
pop
mov
lods
adc
and
xchg
dec
and
out
mov
xchg
pop
cmpsl
jns
mov
clc
aas
mov
jno
mov
xchg
xor
in
pop
cmp
in
lret
cmp
cmp
sbb
pop
in
push
inc
jp
cmpsb
imull
dec
les
shl
ret
xchg
cmp
ljmp
mov
sub
or
out
in
movsl
bound
add
outsl
jne
ja
fisttpl
cmp
clc
add
repz
ret
ja
rcrb
add
test
lret
lcall
into
and
or
out
mov
out
inc
fcmovnu
push
in
lea
xchg
dec
pop
insl
fimull
mov
and
sub
ja
cmp
mov
inc
pop
lahf
add
ret
movsl
xor
inc
pop
cmp
adc
out
popf
jmp
sub
shrl
cmpl
data16
fstpl
mov
pop
lds
push
popf
sbb
or
jbe
mov
repz
push
stc
cmp
sbb
mov
push
shlb
pop
ljmp
outsl
insb
cmpl
pop
push
inc
clc
xor
loop
addr16
pop
push
push
xlat
addr16
out
mov
nop
jmp
ds
sbb
inc
push
sbb
mov
add
pop
xor
jmp
out
and
sbb
mov
lret
jmp
das
cld
sub
or
insl
or
sbb
adc
lret
test
nopl
fst
sbb
ljmp
mov
xor
pusha
rcll
std
sub
scas
das
inc
dec
mov
mov
rol
push
pop
and
sbb
jo
pop
cmpsb
in
cmpsb
mov
test
push
call
add
jp
sub
push
insl
xor
and
xchg
push
push
mov
cmp
js
cs
shll
ficoms
out
lret
or
cvtpi2ps
ja
sbb
fs
lret
push
inc
dec
in
mov
adc
inc
jl
adc
int
int3
test
push
aad
mov
push
mov
mov
cli
dec
jg
push
inc
cmc
test
jns
lahf
dec
imul
gs
jl
mov
jle
jle
mov
mov
pavgw
ret
or
call
push
inc
scas
add
or
ja
lock
mov
xchg
cwtl
cltd
jae
dec
xchg
aam
or
jecxz
mov
ss
add
outsb
in
cmpsb
jge
flds
sub
stos
idiv
popa
or
xlat
lds
dec
jge
adc
inc
outsl
aad
sub
inc
in
mov
mov
xchg
movsl
cs
sarb
xor
mov
ficoms
lret
ret
sub
in
bound
lods
xor
xabort
xor
mov
nop
int3
test
lret
lcall
adc
fnstsw
nop
shll
arpl
movsl
inc
jno
in
testb
dec
mov
jge
and
mov
ds
cmp
popa
mov
cmp
call
mov
and
ss
jne
aaa
test
dec
push
aaa
shlb
les
testb
stc
out
dec
xor
xor
or
mov
scas
pop
push
inc
test
lcall
clc
andb
sub
pop
cmp
pop
cmp
xor
in
shll
inc
ss
shll
adc
imul
in
loopne
mov
in
push
int3
outsl
imul
lods
pop
loop
les
cmp
nop
mov
pop
jnp
insb
adc
cmp
int3
add
lock
dec
cmp
arpl
push
xchg
inc
outsb
mov
push
test
in
test
jmp
shll
mov
push
mov
xor
sub
test
fstps
call
cmp
mov
jmp
push
push
out
adc
jbe
adc
sbb
dec
inc
ds
mov
stc
lea
sbb
and
int3
dec
add
leave
adc
shrb
mov
pop
mov
in
icebp
divb
mov
add
xor
scas
aaa
int3
lods
iret
add
cli
jns
xchg
imul
imul
push
int
pop
jbe
jge
iret
cmp
fwait
push
or
dec
pop
mov
outsb
in
stos
imul
mov
mov
test
mov
ret
pop
cmp
andb
add
sahf
bndldx
xor
inc
xchg
fnstsw
jnp
mov
es
lret
std
packuswb
push
shrb
mov
addr16
and
add
test
push
and
cmpsb
push
mov
and
jbe
push
add
loope
push
mov
pushf
inc
iret
jbe
adc
cmp
fcoms
and
push
dec
push
divl
arpl
lret
in
repnz
and
dec
and
out
rcrb
or
aaa
xchg
cli
ds
rol
stos
int3
repz
and
cmp
cmp
pop
es
iret
mov
into
xchg
inc
hlt
les
cmp
inc
mov
cmpl
xorl
pop
data16
push
mov
in
in
mov
arpl
lea
mov
cltd
cmp
adc
cwtl
aas
push
dec
add
and
out
insl
jns
jnp
xchg
xchg
push
xchg
jmp
mov
imul
add
or
push
push
push
loopne
test
inc
repz
xor
and
pop
cld
in
sbb
sbb
popa
orl
pop
pop
jg
sub
mov
stc
adc
xor
fnsave
test
ss
lret
dec
add
sbb
insb
int
and
fmulp
inc
enter
xor
xor
jecxz
mov
popf
dec
inc
push
pmulhuw
cmp
mov
ficomps
cmp
cmp
adcl
loope
jmp
adc
sub
arpl
sbbl
ja
es
cltd
cwtl
icebp
lods
ds
repnz
dec
dec
xchg
ja
or
pushf
push
pop
cs
cmpsb
dec
adc
icebp
inc
notl
jnp
jo
repz
cmp
and
push
sti
mov
mov
jmp
jecxz
mov
dec
rcrb
inc
add
sbb
mov
sub
or
mov
fdiv
pop
mov
and
xchg
and
adc
lret
pop
push
pop
inc
jo
push
stc
out
jae
adc
sub
lock
add
or
icebp
pop
xor
out
push
push
je
push
jp
xlat
push
dec
stc
in
sub
into
mov
push
dec
jb
add
sub
outsb
movsb
or
jle
add
sub
addr16
sahf
out
dec
hlt
xor
sarl
jns
rcrb
and
test
es
or
in
ja
sahf
inc
fcoml
fsub
sub
pop
mov
sub
dec
mov
call
aad
in
jge
dec
imul
or
lock
cmp
cld
adc
push
lods
adc
dec
fildl
addr16
fnsave
or
fistpl
cmpsb
sub
adc
lcall
ret
xchg
or
add
and
mov
dec
mov
cmp
testl
xchg
nop
jbe
daa
aad
jnp
adc
jp
test
sti
sub
and
daa
sarl
sbb
incl
in
sti
and
daa
dec
aad
xchg
jge
mov
lds
cmp
xchg
nop
xor
cmp
stos
pop
adc
pop
cmp
daa
in
jmp
insl
mov
jb
sbb
xor
inc
cmp
mov
mov
dec
mov
ret
test
xchg
ret
dec
mov
insl
mov
push
lahf
pop
xor
jge
pop
push
into
insb
movsl
and
hlt
mov
push
and
cmpsl
mov
sub
adc
addl
aas
incb
ja
cmp
out
imul
fildl
cs
dec
cli
pop
xor
cmp
or
push
inc
and
pop
ja
out
sti
sbb
xchg
sub
stos
and
or
xor
sub
inc
mov
call
inc
jns
fldl
divl
xor
fs
or
adc
dec
loopne
jge
xor
inc
mov
and
add
jae
xlat
xchg
in
arpl
fwait
sub
push
subb
jle
xor
dec
pop
aam
sahf
mov
mov
fwait
aas
and
insb
inc
cld
sbb
and
pavgb
push
jb
cmp
inc
or
insb
add
inc
subb
dec
pop
popa
and
shll
shr
insb
movsb
popl
aam
dec
adc
bound
and
push
outsb
pop
or
fmull
xchg
fcoms
aaa
inc
xor
adc
fcoml
mov
xchg
jno
jo
xor
je
add
fldt
push
push
popa
in
add
inc
xchg
jbe
adc
cmpsl
movsl
ss
add
ds
lock
insb
xor
sub
inc
imul
imul
andb
mov
dec
movsw
cmpsl
aad
dec
test
xchg
xchg
shlb
mov
mov
pop
fcomip
push
test
lods
insl
lahf
test
in
in
jl
popa
sahf
jmp
gs
pop
scas
repz
jp
imull
neg
dec
xor
cmpsb
add
xchg
pushf
cmp
mov
xchg
push
sub
fxch
dec
lret
and
mov
pop
add
adc
push
loopne
pop
loop
jo
mov
xchg
lock
inc
out
mov
fidivs
jbe
scas
mov
inc
jecxz
das
fst
mov
pop
js
mov
cmpb
adc
repnz
inc
popf
movsl
fistpl
sub
or
dec
pop
out
pop
lods
nop
mov
inc
lahf
iret
ds
and
mov
and
sbb
pop
cmpl
mov
jns
sbb
mov
test
push
pusha
adc
je
popa
pop
pop
push
scas
insl
arpl
cmp
movsb
mov
ret
dec
mov
push
scas
nop
lds
fadd
jmp
imul
cmp
or
xchg
inc
inc
mov
xor
sti
movsl
es
push
dec
mov
xlat
fildl
or
shr
dec
inc
pop
mov
cmc
fdivrs
adc
cmp
inc
jp
gs
cs
adc
jge
push
xor
roll
mov
jbe
add
dec
mov
cwtl
xlat
jle
add
mov
push
outsl
dec
push
gs
rorb
and
cmp
xchg
ss
add
adc
cld
loope
das
push
cmp
push
push
jecxz
pusha
xor
lds
orb
or
jbe
je
fwait
test
cwtl
cmp
inc
shrb
xchg
xchg
bound
orl
jnp
jb
popf
jge
xor
adc
pop
out
push
add
pop
shl
arpl
sub
dec
adc
add
dec
pop
leave
orl
dec
mov
cwtl
lods
inc
cmp
cmp
inc
ret
lods
rorb
adc
aam
cs
enter
idivb
ja
jmp
testl
inc
add
sub
mov
popf
mov
mov
lcall
and
js
mov
test
pusha
mov
hlt
repz
into
cmpl
hlt
lahf
and
fdivs
lock
adc
test
add
adc
mov
cmp
inc
inc
push
mov
ss
dec
mov
cld
jmp
inc
aad
aam
fwait
inc
jle
fcomp
cmpb
subl
call
testb
adc
xchg
stos
pusha
test
in
in
hlt
dec
pop
divl
pop
pop
dec
and
fistps
cmpsl
push
adc
mov
cmp
or
movsb
call
in
mov
in
adc
aam
jne
cld
jbe
mov
lds
mov
sahf
jb
inc
repz
adc
adcb
hlt
imul
cmp
lods
negl
dec
rcr
int
pop
cli
push
sub
mov
inc
sub
jmp
and
lods
into
dec
push
mov
pop
insl
xor
push
jecxz
pop
lods
adc
adc
or
pop
mov
rcll
std
push
inc
in
cmp
cltd
cltd
aaa
lea
xchg
dec
lret
repnz
sub
or
icebp
mov
stc
sbb
mov
adc
and
fnstenv
sub
stc
pop
inc
cs
push
stc
subb
jg
inc
push
test
lcall
push
push
add
mov
pop
lods
xchg
jne
fmuls
dec
dec
leave
dec
push
add
adc
icebp
jle
adc
movsl
mov
lret
gs
xor
and
jg
mov
sbb
push
int
adc
sub
and
sub
movsl
push
stc
sbb
sbb
push
push
das
add
stos
dec
push
jecxz
in
cmp
scas
and
sub
lods
cmpsl
out
push
shrd
push
cltd
push
test
add
push
push
out
inc
mov
jnp
les
orb
add
outsb
xor
pop
jg
out
jno
imul
xchg
or
das
sub
mov
dec
lods
adc
les
cmp
movsb
push
and
faddl
mov
adc
jb
ds
add
jg
jge
rep
scas
ret
xchg
push
mov
leave
push
cwtl
xor
mov
xor
roll
subb
in
movsb
bound
xor
jne
pushl
loope
addr16
add
pop
aas
cmpsl
xchg
mov
mov
mov
push
fmulp
out
sub
push
test
inc
and
push
jle
and
push
pop
sbb
mov
loopne
leave
dec
adc
jp
jl
inc
repz
punpckhbw
mov
rorb
push
dec
gs
push
xchg
fbld
mov
fstpt
pushf
fldenv
mov
push
jl
cmp
jno
xchg
xchg
mov
push
cli
adc
sub
cmpsl
cmp
stc
cld
cltd
or
sub
mov
data16
insb
and
add
pop
mov
dec
adc
dec
jmp
add
jnp
sti
loope
fcoml
mov
and
jp
pushl
fs
notb
fildll
fimuls
stos
dec
push
inc
imulb
cli
scas
fisubrs
push
and
mov
pop
or
fs
fdivl
stos
repz
outsl
and
add
subl
xor
inc
pop
adc
ret
pop
mov
fisubs
mov
arpl
xchg
pop
xlat
xchg
pop
cmp
loop
sbb
adc
dec
dec
mov
dec
pop
jge
repz
add
js
push
add
push
setg
stos
pop
push
fcmovnu
fisubl
in
jl
test
subb
ss
jmp
enter
sbb
call
int
pop
into
ds
mov
nop
sub
dec
inc
sub
lea
js
sti
aas
cmp
test
jbe
xchg
in
push
cmp
or
stc
shrb
pushf
int
test
stos
add
mov
movsb
dec
in
push
mov
rorl
and
ss
jns
inc
xor
dec
fdiv
mov
fistpll
lret
sbb
cmp
pop
or
jno
mov
nop
sbb
and
inc
xchg
shl
lret
movsl
mov
std
mov
out
rorb
and
jo,pn
jg
jmp
sahf
inc
jg
andb
xor
xchg
push
cmp
xchg
and
sub
add
dec
xchg
and
imul
loop
fisubl
sub
mov
add
dec
adc
cmp
xor
test
int
xchg
stc
out
testl
jl
in
add
addr16
push
push
sub
enter
pop
stc
insb
int3
mov
jg
sbb
mov
sub
dec
scas
sub
xor
cmp
mov
cmpsl
mov
std
sbbl
mov
and
insl
faddl
adc
int3
popf
daa
lods
fldcw
adc
jns
and
pusha
clc
jno
jo
pop
lahf
lea
inc
pushf
test
cmpsl
mov
and
pop
stos
cmovae
jns
jg
ret
jl
or
lret
pop
xlat
out
xor
xor
cmpb
and
cli
daa
mov
icebp
jp
mov
push
mov
mov
push
sbb
inc
aad
jo
cwtl
pop
jne
and
mull
scas
aas
stc
xchg
shll
ret
mov
lret
mov
cmp
movsb
inc
add
test
aam
enter
dec
adc
xchg
jo
jo
xchg
mov
iret
xor
ret
cmp
mov
cmpsb
mov
in
mov
pop
xor
mov
cld
movsb
pusha
and
adc
test
insl
jo
sbb
shll
push
cmp
cmp
mov
daa
add
pop
inc
ficompl
insb
and
sub
loop
fcompl
xchg
stc
lods
push
cmp
and
sbb
test
mov
cmc
xchg
cli
dec
xor
and
push
rcl
or
cmp
add
and
xchg
fisttps
push
cltd
into
call
xor
adc
int
addr16
dec
daa
ret
inc
es
pop
daa
test
cmpsb
cs
cwtl
sub
sbb
cmp
mulb
or
jmp
shl
inc
and
push
fnstsw
push
lock
inc
std
jnp
mov
xchg
lea
std
and
jle
mov
stc
xor
sbb
push
mov
pop
outsb
adc
outsb
cmpsl
mov
sti
jle
cmpsl
cld
mov
add
or
mov
xchg
cli
and
test
cli
pop
inc
mov
cmp
pop
add
xchg
pop
pop
jl
cmp
cmp
adc
mull
inc
subb
insb
lock
mov
sub
pushf
cwtl
sub
xchg
loope
sub
fldenv
ds
mov
xchg
add
or
cmp
or
out
sbbl
imul
xchg
rorb
or
sub
pusha
stos
mov
add
sub
inc
movsb
inc
fimull
pusha
jae
aaa
adc
pop
cltd
sub
frstor
xchg
pop
push
mov
inc
pushf
dec
in
mov
frstor
mov
rcrl
hlt
sub
ds
dec
xlat
pop
lods
cmp
cmp
lret
rcrb
add
bound
mov
pushf
jg
les
insl
test
out
mov
jmp
mov
pop
cmpsl
xchg
mov
or
je
test
push
inc
xchg
fmulp
mov
icebp
movsl
xchg
fs
repnz
mov
sbb
and
frstor
push
mov
mov
gs
sub
xor
pop
xchg
sub
pop
and
inc
rclb
mov
and
push
add
mov
adc
jbe
xlat
cmp
jno
hlt
and
mov
or
aam
outsb
arpl
mov
lock
pop
cmc
mov
fcomps
xor
movsb
mov
stc
push
mov
in
push
rdpmc
xor
test
xor
sub
push
inc
jae
push
div
pop
pop
fcomps
dec
test
and
push
subb
cmpsb
jmp
sahf
out
adc
lahf
push
inc
call
incb
pop
xor
mov
mov
lods
adc
jns
pop
jecxz
out
inc
bound
xor
movsl
mov
and
dec
shlb
add
jp
jmp
lret
mov
xchg
mov
into
fisubrs
movsl
dec
fs
idivl
push
lcall
mov
mov
ss
das
cmp
dec
inc
adc
xchg
and
cmp
test
push
push
fwait
jg
mov
out
xchg
sti
loope
push
cmp
repnz
rclb
push
inc
lcall
adc
sub
out
pop
rcr
mov
cs
addr16
outsl
bound
ja
xor
dec
xchg
js
pop
or
sub
and
mov
mov
adc
sbb
xchg
xchg
call
sbb
add
sbb
mov
ja
lcall
nop
lock
push
cmc
scas
pusha
xor
stos
push
loopne
je
push
ret
mov
fwait
sahf
pop
or
out
loope
push
js
sub
jns
imul
xlat
jecxz
std
fldl
arpl
add
mov
sbb
imul
push
mov
jae
add
xchg
arpl
push
mov
jmp
popa
movsl
fcoms
fdivrs
jo
pop
jno
ss
out
cmp
scas
xor
pop
jmp
shrb
pop
inc
xchg
int
add
fucomp
arpl
dec
or
jecxz
fwait
jnp
mov
dec
adc
xchg
bound
addb
pushf
and
pop
xorb
pop
and
in
mov
mov
and
shr
imul
dec
sub
dec
pop
jns
sub
mov
rcll
mov
fdivs
imul
inc
dec
stos
sbb
xor
cmp
popa
inc
xor
in
cwtl
xchg
in
and
pushf
xlat
mov
movsb
nop
cmp
bound
mov
push
mov
mov
xchg
mov
or
inc
adc
sub
add
in
gs
jge
dec
into
jo
rcrl
cwtl
dec
fucomp
cltd
mov
jmp
xorps
xor
inc
test
hlt
neg
jne
sub
push
sub
int3
mov
inc
push
mov
cmp
movsb
cmpsb
addl
sub
shlb
sbb
scas
icebp
push
in
fsubs
and
repnz
loope
cmpsb
cs
or
scas
xchg
out
cmpsl
or
enter
es
sbb
sbb
xor
fsubrs
in
imul
popa
outsb
add
ja
and
add
outsl
and
add
gs
add
jb
add
jae
add
add
mov
cli
jg
sub
data16
inc
inc
sbb
add
jmp
cmpsb
stos
cs
jne
insb
dec
xor
je
mov
xchg
je,pn
bnd
mov
insl
inc
push
mov
ds
lret
cmp
mov
repz
cli
std
pushf
lea
pop
xchg
pop
sub
cmp
cmc
outsl
aam
push
dec
and
loopne
sbb
rcrl
lods
sub
je
add
sub
in
fdivl
into
popf
cltd
aas
push
and
inc
jp
jp
addr16
adc
adc
leave
insb
mov
js
mov
int
add
cmp
add
xchg
pushf
clc
inc
push
xchg
sub
mov
out
mov
popf
inc
inc
or
jl
aam
test
cmpsb
mov
xchg
rclb
loop
inc
nop
and
push
int3
cmpsb
aas
add
cmpsl
lcall
adc
pop
pusha
mov
xor
pop
push
ret
push
inc
sti
popf
pushl
fdivs
mov
in
mov
mov
test
packuswb
inc
sbb
push
js
out
jle
cmp
jae
popa
rcr
shlb
push
iret
jmp
xorb
loope
int
lret
cmp
lods
xchg
loope
xor
mov
mov
lds
icebp
repz
movsl
lret
sbb
pop
adc
gs
xor
inc
mov
mov
nop
mov
add
pop
xor
jne
fwait
repz
jns
lods
xor
pop
xchg
xor
xor
neg
mov
popa
mov
pop
mov
and
dec
outsl
xor
mov
ret
and
mov
add
mov
shlb
inc
test
out
rcl
cltd
mov
sbb
mov
push
xchg
xor
cmp
lods
add
adc
push
and
ja
int
xchg
inc
xchg
sbb
pushaw
inc
mov
mov
loopne
mov
sbb
stos
jle
mov
pop
iret
mov
add
cmp
sub
mov
cs
or
into
daa
test
fimull
popf
andb
pusha
mov
out
or
and
mov
repnz
sbb
add
and
dec
sub
push
adc
lds
insl
mov
sbb
lds
flds
mov
sti
push
loope
inc
hlt
inc
aad
jle
gs
lods
and
cmp
pop
mov
adc
popf
dec
cmp
and
mov
insb
gs
xor
jo
mov
lahf
xor
and
adc
sub
rcl
clc
inc
jb
bound
inc
mov
pop
call
imul
int
mov
and
mov
icebp
add
push
sub
and
loope
adc
xchg
scas
mov
jl
or
test
jle
inc
and
push
jbe
data16
cltd
into
pop
test
jge
iret
cs
mov
lock
cmp
inc
xor
lds
mov
outsb
mov
xchg
inc
out
hlt
insl
das
divl
xor
mov
xchg
xor
mov
loope
mov
mov
mov
mov
push
test
or
adc
cmp
scas
mov
imul
fnsave
insb
movsl
ja
sbb
push
pusha
sbb
pop
lret
ds
cmpsl
sub
mov
pushf
push
int3
aaa
jecxz
adc
sbb
pop
xorl
rcrl
cmpsl
jns
daa
ja
ljmp
cmc
adc
adc
push
aas
cwtl
sahf
fiadds
push
aas
inc
sbb
xorb
bound
jmp
insb
jmp
stc
or
shl
stos
insl
xchg
gs
subl
loopne
mov
push
dec
adc
rcll
arpl
adc
scas
sbb
enter
addl
call
lea
xchg
mov
sub
repz
int3
ds
into
xor
or
add
xor
std
jp
push
xlat
in
or
inc
and
xchg
mov
xchg
insl
xchg
test
xor
pusha
jecxz
lock
aam
add
scas
push
add
push
xchg
dec
push
inc
loop
dec
sbb
pop
sbb
dec
jge
pop
sti
fnstcw
xchg
fistpl
jbe
out
jbe
loopne
xor
js
mov
cli
fidivrs
lahf
cmpsl
cmp
lods
popl
out
or
and
xor
xchg
inc
adc
lock
fsubrl
mov
test
daa
xchg
scas
out
popa
inc
loop
ljmp
mov
loopne
cmpsl
mov
outsl
and
fbstp
sub
test
in
nop
int3
ret
mov
xchg
sub
mov
pop
xchg
jno
jmp
push
fwait
or
add
mov
dec
mov
loop
or
je
jecxz
sub
pop
ja
pop
adc
adc
mov
test
jle
jns
clc
sbb
mov
lcall
inc
pop
add
dec
lcall
test
and
jo
lods
xlat
mov
arpl
jecxz
push
or
xchg
fistps
daa
push
ror
mov
mov
jns
lea
subl
mov
jns
daa
testb
loope
adc
daa
sbb
or
aas
out
repz
mov
xlat
test
cmp
subl
outsb
and
ret
add
and
leave
xchg
and
dec
sub
pavgw
mov
jp
gs
fstl
ds
mov
fs
cmp
pop
out
cmpsl
adc
sbb
cld
sub
sub
pop
in
clc
mov
rorb
sbb
jge
in
iret
push
fistl
adc
test
outsl
xchg
pop
repnz
push
fs
dec
jp
push
pop
dec
sub
mov
push
loopne
out
fwait
adc
add
aas
nop
mov
adcl
shll
mov
dec
lahf
dec
inc
stos
cmp
sbb
pop
int3
fisubrl
add
and
sbb
imul
adc
lods
into
xchg
mov
inc
and
mov
jg
inc
orl
add
add
cmpsb
inc
cmpsl
sbb
xchg
mov
mov
push
jp
or
sbb
or
pop
mov
lret
inc
ret
push
mov
ret
loope
mov
sub
pop
jmp
xchg
xlat
push
or
bound
lods
sbb
scas
jmp
and
sbb
jle
loopne
scas
sbb
movsl
cmpsb
jmp
xor
rcrl
das
repz
cmp
or
dec
xchg
shl
mov
jecxz
ds
jl
ss
movsl
or
add
push
cmp
pop
adc
outsb
fwait
lods
jb
rcrb
sub
aam
pop
mov
xor
adc
mov
jg
mov
sbb
jg
in
or
push
repz
and
enter
and
mov
in
sub
cmp
imul
iret
aam
jle
cmpsl
and
mov
adc
iret
decl
xor
mov
xor
xchg
cmpsb
mov
lahf
loope,pn
xor
fstps
gs
insb
xchg
scas
cmp
or
jmp
mov
mov
sbb
sbb
stos
scas
stos
jo
sbb
andl
daa
sbb
adc
adc
filds
add
lock
inc
pusha
adc
aad
xor
rcll
jb
loop
ds
or
scas
test
add
adc
mov
add
and
into
mov
inc
and
pop
dec
lea
in
popf
adc
fsubrp
fcompl
push
je
mov
hlt
outsb
aad
insl
loopne
inc
arpl
mov
and
ljmp
cmp
adc
mov
jb
dec
add
pop
loope
enter
pop
and
mov
int3
test
ficomps
aaa
dec
addr16
in
cmp
into
pop
mov
fisttpll
mov
cs
insb
push
test
and
fisubrs
test
insl
jae
jae
stc
and
jbe
fcmovnbe
sar
cmp
sbb
lea
pushf
adc
fidivrs
movntq
out
mov
mov
push
cmc
pop
lret
repnz
movsl
int3
lods
jl
into
pop
pushf
scas
lods
pusha
fcoml
rcrl
cmp
shrb
mov
mov
es
push
sub
push
mov
repnz
mov
or
push
hlt
stos
and
lcall
or
sbb
pop
lret
aaa
xor
mov
cmpsl
sbb
aaa
push
sub
sbb
pop
jg,pt
add
iret
aas
sub
rcrl
lock
out
xchg
repz
adc
pop
leave
sti
ficoms
mov
jne
and
push
ss
loope
popf
mov
pop
pop
dec
leave
sti
xchg
jecxz
push
or
push
lock
ds
fs
sbb
loope
dec
and
ds
mov
jne
pop
pop
stc
cmpsl
mov
push
or
add
shll
sbb
in
movsl
mov
push
cmp
mov
pushf
mov
jg
jo
add
push
pop
pop
push
in
outsl
popf
aam
ss
mov
mov
jae
mov
aad
cli
js
cs
mov
sub
add
outsl
int
pop
mov
jmp
or
shlb
ds
adc
mov
inc
scas
fwait
mov
dec
jp
add
sahf
lret
add
lahf
shll
aad
sub
pop
sar
push
out
cmpl
adc
push
xchg
test
pop
adc
cmp
inc
push
pop
mov
iret
pop
imul
adcb
aas
xchg
pop
cld
jecxz
mov
cs
sub
scas
ja
fdivrs
lods
inc
sarb
je
iret
lret
add
lods
or
xor
sbb
daa
paddsb
insl
mov
outsl
pop
not
pop
out
mov
mov
sbb
ja
cmp
cltd
cmc
mov
sbb
scas
jbe
pop
std
mov
xor
mov
mov
sub
or
ret
dec
or
jns
mov
xchg
sbb
enter
mov
pushf
cmp
enter
xchg
lret
inc
ss
dec
je
inc
or
push
lahf
mov
add
push
insl
rcr
clc
sbb
sbb
mov
scas
xchg
adc
es
cmp
int
push
test
and
xchg
aaa
shrb
pop
scas
lea
push
daa
les
sti
jmp
adc
cmp
and
push
mov
adc
mov
in
out
adc
inc
add
out
add
xor
jp
xor
adc
ss
clc
ds
stc
stos
xchg
cmc
lds
mov
jg
enter
jl
mov
mov
mull
loopne
sbb
stc
insb
sbb
leave
and
inc
xor
jb
jg
adc
push
jno
notb
xchg
adc
inc
js
xor
repnz
and
shl
dec
lret
xorl
inc
cli
jae
and
test
ret
lcall
pop
orl
mov
mov
inc
mov
int3
leave
ud0
jmp
sbb
mov
stos
xchg
mov
mov
xor
scas
adc
inc
push
sahf
aam
hlt
jp
mov
ret
scas
rcr
xchg
je
testb
pop
xor
lcall
addr16
in
sub
ret
insb
or
enter
jmp
mov
push
clc
cmpsl
adc
cmpsl
lret
or
jnp
dec
inc
arpl
mov
and
xchg
sbb
dec
lds
insl
inc
je
sbb
je
push
pop
push
push
jp
push
mov
dec
xchg
sbb
call
mov
js
out
cld
push
movd
push
xor
dec
mov
pushf
xchg
mov
and
lcall
hlt
xor
lcall
mov
cmp
stc
mov
frstor
inc
push
mov
jbe
aad
popa
inc
add
adc
sbb
in
jmp
mov
jne
ret
and
or
inc
aas
push
int3
addr16
adcb
mov
mov
sub
add
lret
iret
rorl
lock
sbb
repnz
xchg
ds
lods
scas
jnp
aam
shl
xchg
mov
pop
sbb
scas
jb
fdivrl
sbb
jmp
cwtl
fdivl
notb
imul
add
mov
fldenv
adc
stos
aam
insb
arpl
xchg
xor
outsl
or
or
scas
sub
jae
mov
rorl
jno
fiadds
and
jnp
clc
arpl
ret
repz
icebp
mov
cwtl
pop
pop
sti
xor
js
cmp
cmp
mov
xchg
pop
mov
inc
repnz
in
xor
mov
mov
in
popa
inc
pop
jno
data16
xor
sbb
sbb
or
push
add
sub
inc
cs
adc
lcall
add
inc
jge
push
mul
loope
dec
jno
mov
xchg
repnz
xor
jp
mov
xchg
not
mov
ds
xchg
das
iret
sbbb
xchg
sub
xor
pop
fcomi
pop
sar
addr16
pop
sub
ljmp
lahf
lods
bound
out
push
daa
std
enter
adc
fcomps
cmpsl
in
cli
dec
cmp
aad
mov
rcl
shll
test
pop
xor
stc
adc
sbb
aas
push
xor
xor
inc
and
mov
in
enter
mov
in
add
or
mov
rcrb
in
into
fisubrs
sbb
and
test
mov
or
and
into
sub
pop
movsb
test
cltd
std
and
in
xor
shll
fmull
mov
dec
mov
xor
pop
ja
jo
cmp
sarl
out
sub
test
rcrl
aam
pop
movl
inc
imul
enter
and
int3
add
and
int3
inc
mov
jmp
push
dec
imulb
xor
sbb
push
xor
jp
cmpsl
cs
fdivs
adc
jb
sti
cmpsb
xor
daa
imul
cmp
push
xchg
or
dec
adc
outsb
inc
adc
rcrl
lock
lahf
sbb
clc
lret
cmp
mov
cmp
mov
mov
mov
mov
test
rcr
and
fisubs
into
inc
and
and
push
pop
cmp
ret
inc
test
imul
mov
repnz
pusha
add
mov
pusha
sahf
sub
movsl
jo
cmpsl
sti
aaa
ret
addl
jbe
and
sub
lret
dec
xor
repnz
nop
pop
icebp
sbb
cmc
mov
sti
movzwl
inc
aam
mov
loope
rep
movb
cmp
cmp
in
mov
dec
std
lahf
call
xchg
xchg
out
push
inc
jmp
cs
pop
dec
mov
out
mov
add
jno
in
xchg
shr
push
cs
add
les
in
shl
push
jl
pop
mov
xlat
push
mov
or
ss
cmp
cmpsb
and
in
jnp
ret
sub
push
test
xchg
cltd
das
sbb
js
xlat
mov
sub
inc
jae
lods
pshufw
push
and
xchg
movq
outsb
stc
xchg
mov
mov
insb
ja
jae
push
andb
mov
imul
rorl
push
es
jmp
or
test
sub
pusha
fldt
rcrb
push
mov
into
pop
jae
scas
jecxz
scas
rcl
dec
xor
push
cltd
pop
out
add
leave
mov
inc
push
jb
int3
fstpt
aam
cs
add
scas
scas
das
mov
std
mov
ljmp
push
out
dec
in
add
lret
fistps
and
xor
sbb
cmc
js
or
jb
push
shrb
stc
mov
rclb
dec
push
push
mov
sub
jo
sbb
pop
ret
pop
xchg
ret
lret
add
and
pusha
sbb
loop
mov
test
push
in
call
mov
mov
mov
cmp
mov
sub
shl
inc
adc
pop
enter
lds
xor
jns
or
adc
lock
pop
sbb
lds
xchg
bound
shlb
sub
sub
cmpsb
sbb
push
xchg
pop
xchg
std
add
aad
and
ss
and
loopne
mov
push
fsubs
sub
in
dec
sub
mov
andl
mov
jmp
int
add
jno
in
and
xchg
mov
jns
in
icebp
cmp
loope
mov
xchg
std
push
fisubl
jle
sbb
popf
mov
mov
jecxz
out
sbb
adc
and
test
dec
test
aam
mov
out
add
aaa
arpl
xlat
mov
in
mov
pop
decb
fisttpl
sbb
cltd
sbb
push
jg
orl
scas
sbb
push
jl
push
push
test
rcrb
pop
cmpsb
pusha
imul
das
arpl
mov
test
dec
bound
rolb
bswap
adc
inc
div
lahf
inc
sub
in
sbb
lret
xlat
popa
or
jmp
test
jle
push
mov
sarb
xchg
xor
movsl
cmpsl
or
call
adc
out
xor
mov
shl
lret
push
roll
fists
add
push
aam
ret
shrl
icebp
lds
lret
test
cmp
stc
jp
cld
stos
pop
push
pop
mov
enter
gs
pop
outsl
cmp
je
test
push
fmul
jo
pop
sub
std
xchg
push
stc
fisubrl
cmp
cwtl
ret
pop
aad
xchg
ss
imul
icebp
xchg
cld
scas
mov
popf
and
push
pop
xor
loop
xchg
loop
xchg
pop
jmp
lods
jmp
lea
pop
mov
addr16
pusha
cmp
add
add
ret
mov
push
mov
add
cmp
add
pop
lock
fs
push
fwait
xchg
hlt
adc
mov
jmp
ret
das
or
pushf
mov
sub
push
push
insb
add
stc
cmp
xchg
out
in
push
out
dec
sub
or
fwait
pop
mov
xorb
dec
mov
lock
xlat
sub
pop
fucomp
inc
mov
mov
inc
push
mov
jbe
mov
pop
jno
mov
pop
aaa
dec
dec
stc
jnp
popf
icebp
dec
fisubl
pop
xor
mov
add
andb
ja
mov
xorb
push
sbb
fs
sub
in
cwtl
pop
adc
and
loopne
sbb
stc
push
sbb
pusha
outsb
push
add
fnsave
popa
movsb
inc
xchg
movsb
pushf
mov
sbbb
popa
push
xor
cmp
das
mov
lods
lods
into
jns
cmp
xor
push
lea
pop
cmpsb
inc
xchg
out
das
lods
sub
out
and
sbb
mov
dec
aad
faddl
fimull
mov
sbb
test
dec
leave
or
test
push
imul
cmc
iret
loopne
sub
add
pusha
cli
test
mov
fldt
dec
jnp
mov
pop
xchg
test
loopne
fsubr
jle
add
nop
pop
and
pop
popf
out
push
loope
lods
pop
ret
roll
mov
faddl
pop
sbb
testl
cmp
leave
lret
fstpl
popa
clc
push
pop
push
dec
rclb
cmc
sbb
and
mov
lea
sahf
mov
dec
dec
sbb
cmpsl
and
push
inc
and
int
in
cmp
push
pop
or
shll
adc
jle
jecxz
lods
cmp
inc
pop
xlat
jnp
mov
pop
xchg
xor
push
mov
hlt
insl
insb
ficoms
jb
mov
mov
mov
push
aas
bound
and
cs
testl
out
jne
sahf
sbb
push
js
fmuls
mov
scas
pop
mov
mov
sub
subb
lea
aad
mul
xchg
cmp
lahf
out
sub
iret
fnstenv
stos
push
aas
fwait
jb
dec
aas
fcomi
lcall
subb
fidivl
cmp
mov
out
jge
roll
or
xor
outsb
add
adc
ficomps
ljmp
rcl
adc
cwtl
gs
jb
lret
cwtl
cmp
movsb
shrl
cltd
and
jmp
shll
jecxz
or
in
xor
inc
rcr
push
xor
das
jb
stc
js
es
int
cld
in
fs
pop
or
mov
rorl
add
cmp
jbe
shlb
ss
add
pop
push
popa
mov
cmpsb
movsb
data16
dec
sti
xchg
sub
scas
sub
mov
cld
mov
sahf
sbb
mov
in
add
xor
lahf
cmpsb
mov
je
xchg
fldcw
popf
mov
or
adc
jno
and
add
push
xor
mov
adc
pop
inc
sahf
push
mov
scas
jo
mov
js
das
jg
dec
cmpsb
inc
mov
test
add
push
pop
sub
jmp
adc
pop
jb
subb
call
pop
scas
or
ljmp
ds
loopne
addr16
aad
sbb
sbb
sub
pop
inc
mov
out
dec
out
fisttpl
ss
sbb
or
icebp
add
lret
daa
in
cld
sar
mov
add
call
and
push
pop
addr16
adc
or
jmp
pop
xchg
inc
rcr
das
jge
jle
scas
ret
sbb
inc
incb
fiadds
xchg
mov
ljmp
mov
pop
in
inc
js
or
lahf
inc
sub
fisttps
lea
dec
lcall
and
insb
movsb
add
movsb
jb
sti
pop
bound
mov
outsb
mov
pop
scas
push
mov
js
cmp
xchg
fadds
inc
sbb
xor
and
sub
add
iret
mov
shrl
xor
jecxz
ss
and
js
or
cwtl
adc
lahf
sbb
and
sub
out
push
xchg
inc
pop
push
xchg
in
cltd
inc
inc
inc
pop
push
dec
out
add
mov
insb
and
push
xchg
in
or
mov
insl
inc
out
pushf
sbb
popf
push
int3
dec
xor
add
add
gs
gs
mov
in
mov
push
and
fprem1
sbb
pusha
es
lret
adc
push
cmp
sub
xchg
sbb
jl
push
or
lods
push
jmp
fdivs
jp
sbb
in
loope
inc
cmp
movsl
test
xchg
ja
cli
mov
pop
inc
mov
jmp
sub
jl
in
into
push
jmp
xchg
shlb
in
xchg
inc
or
sarl
nop
xor
xorl
adc
dec
push
push
mov
add
fdivs
mov
mov
ret
dec
fcoml
push
add
dec
xor
repz
fisubrs
dec
and
jmp
test
pop
out
mov
mulb
mov
cmp
scas
jge
pop
dec
test
push
mov
or
mov
and
mov
xchg
scas
ds
std
test
adcb
xchg
loop
fisubl
les
xchg
movsb
jbe
inc
jno
fildl
leave
fistl
ds
push
roll
cmc
into
xchg
cmpsl
stos
add
xor
cmc
xor
cmp
in
dec
jno
pushf
aas
enter
outsb
inc
outsl
or
outsb
pop
or
mov
xchg
sub
lods
incb
icebp
imul
jb
icebp
aad
nop
push
jbe
ja
repz
inc
mov
lea
scas
sti
in
add
add
sbb
adc
dec
sbb
xchg
fldt
xorl
dec
pop
stc
sub
fcompl
rcl
stos
hlt
xor
mov
sub
testl
stos
lock
mov
flds
or
sbb
mov
leave
mov
mov
sbb
subb
push
sbb
or
ret
int
add
fldl
lahf
or
cmpsl
fs
cld
pop
mov
adc
das
push
ret
dec
or
push
sub
xor
lret
pop
push
call
sbb
pop
stc
xor
sahf
fstl
jo
arpl
mov
movsl
sub
hlt
mov
outsb
aad
mov
subb
sbb
inc
mov
movsb
pushf
call
loope
or
in
notb
push
movsb
sbb
lods
cmp
fildl
adc
push
inc
adc
add
add
stos
out
push
loopne
nop
mov
mov
cli
int
je
mov
cwtl
mov
ds
rorl
push
movsl
cmpsb
testb
cld
addr16
push
dec
lcall
mov
xor
fsubrs
xor
mov
cwtl
adc
icebp
sub
add
xchg
dec
xchg
orl
sbb
scas
mov
lret
add
lods
adc
or
inc
fcomi
xor
push
adc
cmpsb
sub
divb
ds
sbb
mov
out
stc
pop
add
out
scas
test
arpl
add
push
arpl
add
push
into
incl
jmp
jle
enter
and
inc
cmp
dec
jne
and
pop
push
add
cmpsb
test
mov
sahf
imul
ret
cmp
add
mov
sub
sub
gs
inc
sub
inc
add
cmp
in
xor
in
sbb
add
mov
inc
into
bound
into
fsubrs
movsb
out
jge
push
stos
loope
mov
mov
and
or
and
jns
inc
imul
sbbl
dec
into
mov
leave
cmp
jb
jmp
lds
bound
pop
je
cwtl
pop
push
cmp
ljmp
fldl
inc
stc
cmp
lea
insb
pusha
scas
push
hlt
xorps
mov
popa
repnz
mov
je
enter
sub
int
shrb
push
in
mov
shlb
add
add
icebp
sbb
lahf
dec
mov
sbb
insl
add
data16
ljmp
mov
dec
int
fwait
repnz
xor
lret
xor
test
inc
cmp
iret
mov
inc
into
sub
mov
pop
test
das
lret
xor
mov
lahf
mov
pop
xor
push
rclb
cmpsb
pop
je
push
loop
jl
pop
loope
or
pop
cltd
mov
ja
mov
adc
bound
xlat
ret
aad
shl
nop
out
mov
sub
sbb
sti
xchg
popf
jno
cmc
sbb
enter
add
mov
cmp
sub
xor
aam
jge
inc
jnp
aad
lds
xor
jecxz
push
je
push
xor
dec
pusha
xchg
call
pop
sahf
cwtl
daa
xor
mov
cmp
loope
js
loopne
xchg
dec
lahf
cli
pop
lods
push
mov
ret
enter
sarl
pop
inc
and
mov
out
add
fistpl
movsb
or
or
loopne
daa
and
jne
xor
clc
push
jne
insb
stc
fwait
jle
arpl
lock
inc
mov
test
iret
add
jbe
and
sbb
call
lret
repz
decl
jg
cmpsb
daa
mov
call
mov
or
stos
inc
in
push
push
jo
idivb
cmpsl
xor
push
cmp
iret
frstor
movsl
sti
mov
sti
stos
cltd
push
lret
ret
imul
dec
add
in
xchg
xchg
fs
addl
lds
and
xor
mov
addr16
test
daa
push
testb
cli
repnz
testl
inc
rcr
pop
pop
ds
jecxz
fadds
fwait
mov
mov
movsl
inc
cmp
scas
popf
push
mov
xor
push
or
mov
enter
xlat
repz
mov
fisubl
push
icebp
inc
or
cli
cmp
test
mov
call
jmp
xchg
lret
mov
jae
and
cs
sti
inc
int
xor
add
je
lods
lahf
lea
out
popa
inc
or
or
outsb
shr
data16
int
loop
add
mov
mov
pop
adc
push
mov
popf
or
repz
sti
mov
lods
sahf
mov
nop
dec
popa
aam
add
cltd
inc
in
dec
fisttpl
cmp
jno
push
dec
gs
cli
xchg
mov
aaa
lock
imul
push
loopne
loope
mov
push
sbb
mov
lret
mov
jmp
jno
jl
gs
jae
add
sbb
jo
cmp
or
mov
imul
jecxz
call
or
jmp
sub
lds
adc
test
lea
inc
sub
pop
sbb
cltd
push
mov
cmp
ljmp
ficoms
xchg
pop
push
rolb
sbb
rcr
repnz
stos
mov
push
cmpsb
sbb
lret
mov
movsb
jbe
dec
lea
inc
rcl
or
gs
mov
shlb
in
flds
das
repnz
push
clc
dec
cmp
mov
jns
and
lods
notb
mov
imul
fistpl
dec
xchg
dec
jl
loope
inc
sub
sbb
cmpsb
out
and
xchg
leave
jmp
push
lock
pushf
xchg
jmp
jecxz
jp
sbb
cmpsb
pop
lret
or
push
cmp
jge
out
cmp
dec
pop
inc
dec
xor
gs
lods
ret
cmp
call
pop
cmp
mul
loope
repz
sbb
neg
hlt
jno
xor
cmp
mov
or
mov
ds
shlb
call
sub
mov
shl
popf
repnz
or
jb
int
int
out
cmp
push
inc
cs
flds
pop
add
xorl
aaa
mov
cmp
and
pop
out
xchg
push
jmp
pop
cltd
jno
movsl
pop
pop
nop
fwait
outsb
sbb
sbb
ds
or
adc
mov
cmpsb
mov
dec
aas
or
xchg
pusha
dec
sarl
and
into
stos
jbe
testl
loop
fcoml
mov
jecxz
mov
push
js
movsl
mov
adc
fs
lea
push
cmp
inc
dec
xor
ljmp
xchg
mov
sti
mov
xor
jae
jmp
mov
sbb
mov
mov
mov
pop
push
push
mov
insl
nop
aam
ret
xchg
in
xor
das
imul
aas
icebp
adc
jno
jb
or
insb
or
repz
pusha
and
xchg
dec
jae
sbb
or
jo
mov
sub
jne
sbb
inc
enter
repz
out
lret
mov
roll
sub
mov
scas
xchg
nop
add
cld
rol
mov
adcl
rcrl
cmpsl
inc
jg
mov
in
filds
adc
aad
nop
pop
and
pop
ja
mov
push
bound
in
aam
ficomps
dec
xchg
push
daa
adc
and
pop
xor
jg
mov
sbb
dec
push
int3
fisttpl
and
and
sbb
cmp
jbe
xchg
test
iret
cmp
fists
out
dec
jo
arpl
mov
test
add
mov
test
push
test
loopne
ds
jle
or
lock
xor
mov
loop
into
lds
mov
inc
fcomps
les
pop
and
iret
push
push
xchg
push
popl
sahf
stos
fnsave
dec
sub
adc
add
push
int
jmp
dec
shl
cwtl
out
mov
jnp
loopne
push
leave
aaa
and
sbb
mov
pusha
sahf
rcll
dec
or
fdivrl
or
lahf
cs
fs
jp
or
sbb
pop
clc
stos
add
scas
call
pop
and
in
mov
pop
adc
jns
notl
xchg
mov
pop
in
daa
mov
jmp
add
sub
cs
fwait
push
or
lods
cmp
js
mov
data16
daa
popf
push
dec
fistps
and
dec
xor
pushf
loopne
cmp
and
xchg
aas
ss
sbb
ficoml
mov
shll
pop
mov
mov
mov
and
push
xchg
test
aam
mov
cwtl
mov
pop
mov
jg
lret
cs
pop
pop
inc
das
sbb
lcall
fidivl
mov
jge
std
stc
xchg
jo
push
xor
push
dec
adc
fs
sbb
pop
int3
inc
dec
fdiv
fistpl
aas
dec
fdiv
add
sbb
push
sub
test
out
pop
xchg
push
push
mov
pop
mov
xor
movsl
idivl
cwtl
je
test
nop
pop
gs
or
cmp
dec
xchg
push
aaa
adc
jecxz
mov
jae
xchg
jne
jne
lahf
int3
pushf
test
jne
push
cli
jbe
frstor
xor
sarl
mov
mov
pop
roll
push
hlt
add
mov
inc
lcall
xlat
roll
xor
ret
mov
push
js
adc
add
fsts
gs
jne
pushw
iret
scas
pop
sub
mov
push
lods
ret
fcomps
cmpsl
inc
clc
repz
pop
cld
jg
out
pushf
xchg
dec
loope
out
dec
test
inc
mov
dec
in
insb
xchg
mov
call
push
pop
push
sub
mov
sbbl
xchg
lods
scas
jnp
ljmp
xchg
imul
pusha
lahf
mov
daa
push
pop
movsb
fidivs
lret
jns
popa
out
lods
dec
iret
test
cli
push
movsb
imul
stos
iret
jno
pop
mov
shlb
push
lahf
and
inc
outsb
jno
mov
andl
lret
jnp
and
xchg
movsl
in
cmpsb
fldl
push
nop
sbb
jne
rep
add
sub
sub
push
sahf
sahf
mov
adc
arpl
add
and
or
cmp
xchg
test
popf
xor
or
add
dec
pop
xlat
loope
mov
ljmp
mov
insl
stos
add
and
mov
xor
and
pushf
mov
stos
shl
int
outsl
or
mov
repz
fnstsw
sub
mov
pop
jo
xchg
loope
jno
inc
sti
sub
and
movnti
pushf
pop
mov
out
lods
clc
xor
or
lahf
push
xchg
add
insl
fcmove
pop
mov
lret
insl
jmp
nop
ret
or
jp
jns
inc
mov
lea
add
cltd
outsb
mov
inc
push
jne
mov
push
mov
mov
test
lds
out
mov
js
add
adc
sbb
pop
jo
mov
aad
push
jo
mov
cmpsb
int3
popf
push
cmpsb
ja
mov
jecxz
nop
mov
xchg
xchg
fld
cmp
mov
dec
sub
push
push
pop
decb
orl
jmp
sbb
adc
aas
shlb
jmp
in
frstor
inc
out
jg
outsl
xlat
add
mov
cwtl
sbb
mov
shlb
xchg
fistl
rorb
push
movsb
aaa
jno
pop
mov
inc
iret
pop
sub
dec
mov
xor
push
outsb
in
cmpb
or
ret
je
shlb
stos
daa
xchg
int3
mov
iret
mov
int3
lds
or
or
xor
aas
push
test
sub
dec
lcall
jb
xor
xchg
int
inc
in
dec
jmp
ja
pop
mov
pop
push
sbb
or
pop
popf
pop
mov
and
push
lret
pop
arpl
dec
nop
cmp
cmpsb
cs
rcll
xlat
pop
jnp
sub
pusha
mov
and
mov
test
xchg
mov
sbb
es
insl
fwait
mov
cmp
push
enter
cmp
mov
jge
iret
lahf
jmp
sub
jae
int
push
xchg
inc
dec
sub
test
xor
loope
in
cmp
scas
push
lds
jp
xchg
dec
in
xor
cmp
jle
cmpsl
add
pop
shll
fadd
xchg
ss
pop
push
outsb
and
add
jnp
cmp
sahf
mov
add
in
out
test
push
pop
push
cld
xchg
inc
pop
scas
sbb
scas
fiadds
std
or
test
pop
mov
out
popa
xor
psrlw
mov
adc
push
or
imul
stc
outsl
adc
scas
mov
clc
dec
xor
add
jp
push
pusha
pop
jp
stos
pop
mov
cmp
push
aad
and
jb
hlt
inc
ds
sahf
mov
cmpsl
dec
jne
mov
dec
adc
sub
ret
mov
jb
je
xchg
test
fisubl
inc
fadd
loopw
fcompl
aam
lods
xor
std
mov
pop
mov
dec
push
inc
rorl
les
sbb
lea
insl
in
and
jae
mov
and
mov
lahf
dec
xor
icebp
cmpsl
shll
int3
add
mov
jl
sarb
push
arpl
push
test
int3
fs
pop
cmp
ret
inc
mov
imul
jbe
dec
xchg
mov
shll
mov
sub
pop
or
adc
cltd
add
pop
cld
mov
fmulp
xor
or
xchg
sti
fidivrl
xlat
add
js
fidivs
xor
loop
outsb
cmpsl
inc
or
or
or
mov
sbb
push
jmp
and
inc
push
mov
outsl
and
xchg
push
mov
mov
mov
jg
lahf
pop
pop
sbb
inc
pop
cs
hlt
add
mov
adc
scas
push
popa
addb
lcall
imul
sbb
fidivl
sbb
sub
loopne
repnz
rcll
shll
aad
shlb
insb
unpcklps
aam
loope
pop
dec
push
adc
sub
ret
mov
ud1
sbbl
mov
xchg
or
loopne
or
jne
leave
call
pop
mov
clc
sub
pop
jns
in
cld
adc
sub
sbb
adc
inc
pop
or
xor
loop
je
scas
pop
sub
cmpb
push
adc
mov
inc
push
inc
hlt
jmp
ja
mov
mov
jle
cmp
ror
add
mov
repz
jb
or
xor
pusha
add
js
push
inc
jmp
xor
adc
and
add
cmp
das
lods
sub
pop
inc
lcall
mov
pusha
cltd
fldenv
out
fwait
call
push
and
xor
sbb
mov
pushl
es
decl
das
popa
mov
aas
lret
xor
mov
xchg
dec
mov
xor
negl
jp
sarb
repz
arpl
xchg
fistpl
pop
gs
lock
mov
mov
and
cmp
adc
shll
and
loop
pop
cmp
hlt
shlb
mov
mov
mov
and
cmpsl
hlt
mov
fs
shrb
jno
inc
aaa
rorb
aas
fnstcw
xchg
out
sbb
mov
mov
lea
jge
dec
jae
call
hlt
insl
jg
mov
xor
jmp
and
loopne
js
movsl
iret
push
cwtl
pop
fimuls
xchg
data16
mov
ja
stos
sub
mov
xchg
hlt
mov
sbb
shr
dec
fnstcw
xchg
popf
push
xchg
pop
pop
cmp
outsl
fcoml
jmp
jge
xchg
cmp
shrl
subb
in
pop
jp
pushw
mov
xor
pop
lret
push
push
dec
mov
loop
or
ret
ret
sub
push
mov
or
xchg
inc
mov
test
push
sub
sbb
or
popf
pop
sub
pop
mov
jmp
adc
sbb
dec
ljmp
out
scas
add
mov
inc
sub
js
dec
dec
sbb
mov
in
out
jbe
test
shll
jmp
cli
mov
lahf
ret
push
test
mov
aad
fldenv
arpl
mov
mov
fdivrl
and
cmp
cltd
das
outsb
test
cmp
adc
in
dec
cmp
add
pop
push
mov
inc
mov
cltd
or
xlat
sarl
mov
xchg
dec
fsubs
dec
mov
lret
popf
dec
fxam
rcll
out
push
dec
pusha
shrb
push
mov
add
shll
scas
mov
arpl
rclb
mov
xchg
roll
add
jnp
aas
cmp
outsl
test
inc
jnp
cmpsl
cmp
jno
shl
jns
mov
incb
int
rcll
dec
shll
iret
scas
rol
sbb
fisttps
push
daa
mov
mov
or
bound
dec
es
gs
sahf
in
fidivl
aam
dec
clc
call
leave
cmpsb
or
and
loopne
insl
mov
or
sub
sbb
jge
or
sbb
icebp
xchg
xchg
popf
inc
in
pop
jo
xchg
pop
cmp
xor
or
outsl
push
xchg
insl
mov
sbb
and
fstps
sbb
aaa
mov
pop
sub
loopne
imul
cmp
das
xlat
xchg
mov
pop
in
jge
movsl
test
jno
push
out
pop
adc
dec
jle
sub
fs
mov
mov
jg
pop
sarl
adc
pushf
xchg
and
pop
push
std
jge
cmp
inc
and
push
sbb
cmp
lcall
jge
xchg
ffreep
stos
fcomip
mov
xchg
mov
jecxz
sbb
pop
enter
lcall
adc
mov
jg
int
mov
pushf
push
lahf
push
dec
dec
pop
int
jo
mov
xlat
adc
aad
jmp
rcrb
or
sbb
xchg
xchg
hlt
xor
repnz
mov
and
rcll
mov
daa
xor
sbb
ret
arpl
cmp
cltd
push
jg
sub
sbb
lods
stc
jo
inc
jo
inc
test
cmp
and
xor
ret
add
lea
jno
les
xchg
adc
xor
imul
sbb
xor
int3
mov
testb
and
sti
cmc
mov
push
adc
stc
dec
ja
dec
mov
or
notl
fistl
xchg
cmp
ret
popf
mov
out
fwait
gs
clc
add
cmp
add
or
cmp
jno
pop
jns
jb
mov
imul
inc
pop
mov
lret
mov
fdivrl
fdivrl
inc
dec
stc
adc
stos
sub
sbb
xor
jp
loope
outsb
and
xor
push
xor
push
adc
nop
movsb
mov
test
sbb
or
mov
add
or
gs
in
dec
xor
pop
fdivr
cmpsl
in
fs
pop
clc
sub
je
jns
inc
iret
add
mov
aas
push
adc
mov
in
cwtl
imul
lds
add
xor
in
mov
int3
jne
mov
mulb
loopne
cmp
lea
fidivl
push
push
popf
arpl
cmc
scas
inc
cmc
inc
dec
jb
call
loope
sub
mov
mov
mov
mov
sub
pop
fdivrl
mov
mov
orl
pop
push
addr16
repnz
cs
mov
cltd
sub
jae
insb
hlt
mov
dec
sbb
cwtl
mov
inc
mov
test
shl
lods
mov
or
loope
popa
and
push
pop
out
fisubrs
inc
roll
pop
repnz
loopne
ret
add
add
sub
jo
sub
push
int
clc
mov
mov
pop
lods
call
int
sbb
sbb
js
push
mov
stos
jmp
dec
fwait
mov
or
fiadds
mov
pushf
inc
sbb
les
jmp
sub
sbb
sub
repz
ds
add
orl
ja
mov
cmpsl
and
mov
dec
out
sbb
adc
mov
movsl
jne
sub
adcl
aas
stos
cli
popf
cmp
cld
or
xchg
push
in
xor
notl
push
shll
mov
in
sub
jne
sbb
in
rcrl
xchg
jbe
mov
jnp
hlt
divb
pusha
ret
cmpsl
jae
pop
icebp
xorb
cwtl
xchg
and
push
fsubl
les
ret
cmovno
push
sbb
loop
pop
fmuls
rol
leave
rol
sahf
xchg
cmc
mov
adc
mov
and
ljmp
pop
mov
in
dec
test
mov
mov
cwtl
sti
bound
sbb
push
cmpsl
pusha
xchg
sbb
fildll
fxch
call
jne
jecxz
popa
icebp
xor
lret
hlt
js
gs
iret
imul
ja
sahf
scas
cmp
test
ficoml
repnz
insb
shl
pushf
push
xchg
dec
push
xorb
mov
je
push
add
enter
mov
iret
in
addr16
mov
mov
dec
ss
dec
repz
add
xor
add
testl
push
loopne
in
sub
movsb
mov
or
sub
dec
movl
in
push
jmp
icebp
sbb
jmp
cs
and
xchg
xor
outsl
inc
add
jo
enter
mov
pop
mov
test
xchg
xor
xchg
jbe
cmp
shl
sbb
mov
fdivrl
push
iret
repz
add
into
js
dec
mov
pop
pop
add
bound
fidivrl
hlt
mov
cmp
rcll
dec
ffree
fldt
adc
push
adc
iret
sbb
mov
xor
pop
push
xchg
cs
mul
rcll
add
das
out
testl
mov
in
and
aas
cmp
push
pop
popa
scas
push
cmp
sarl
leave
in
lods
dec
mov
movsl
aam
fisttpll
mov
xchg
jmp
mov
jne
inc
loopne,pn
push
push
dec
xor
inc
nop
popf
std
mov
mov
das
pop
mov
sub
insl
xor
lret
leave
repz
les
sbb
cmp
xlat
xor
add
jp
or
outsb
dec
icebp
lret
aad
push
cwtl
jne
lret
scas
stc
mov
rcl
inc
pop
fwait
mov
popf
sub
xor
sti
adc
cmp
push
jg
lcall
mov
lahf
pop
repnz
fistps
fidivs
adc
cli
and
xorw
pushf
loop
sbb
jns
xlat
inc
mov
or
xlat
xchg
fmull
dec
fnstcw
xchg
ds
cmp
test
mov
andb
test
jl
test
lds
mov
aas
test
mov
mov
pop
push
sub
xchg
repnz
inc
mov
and
rorl
and
out
dec
and
outsb
imul
dec
pop
inc
popf
fistpll
xchg
cmp
or
push
add
pop
sub
pop
or
mov
movsb
mov
cltd
in
jl
mov
adc
in
jge
aad
adc
mov
push
xchg
notb
mov
cmpsb
cwtl
rclb
fnsave
fstps
push
inc
out
lods
sahf
je
test
data16
cmp
in
cmp
push
cli
dec
in
test
and
inc
dec
dec
sahf
mov
pop
xchg
jecxz
popf
test
lods
mov
out
pop
adc
mov
clc
mov
mov
imul
mov
mov
adc
inc
push
punpcklbw
xor
or
insb
popa
mov
and
divb
pop
test
fcmove
fcmovnu
divb
push
gs
pop
push
stc
jo
fwait
aad
sub
adc
je
sub
rcrl
outsb
popf
jge
insb
mov
add
jb
push
mov
or
int3
rorb
inc
jp
cmp
adc
xor
dec
adc
aam
pop
or
or
cmp
mov
lock
ss
xchg
xchg
jl
outsl
jg
rcrb
in
sub
lahf
ss
adc
dec
shlb
pop
pop
add
xchg
test
aad
js
fs
aaa
inc
aam
fadd
xchg
mov
adc
outsb
and
rolb
push
xlat
xchg
mov
push
in
push
mov
push
and
cmpl
inc
test
loope
mov
xchg
imul
jmp
scas
xlat
je
sub
pop
jl
ret
xchg
or
mov
out
pushf
jecxz
inc
data16
xor
xor
sub
nop
mov
sahf
dec
sub
out
ljmp
notb
sbb
je
and
cmp
call
loop
sbb
cmp
and
and
inc
cmp
pop
and
pop
lahf
or
cmp
cmp
sub
cmpsl
sbb
lret
jo
pop
cmp
jl
popl
xchg
scas
push
cmp
and
adc
cmc
jns
int3
sub
imul
mov
push
push
mov
inc
xor
pusha
add
mov
inc
inc
or
adc
mov
mov
mov
iret
cmp
fdivl
mov
mov
push
dec
sub
shll
imul
std
cmp
loop
in
and
inc
dec
in
mov
clc
push
subl
test
mov
test
test
pop
repnz
inc
jge
mov
das
aad
std
adc
lods
add
fnstcw
cmpsl
sbb
ljmp
rorl
mov
and
inc
xor
add
std
adc
imul
push
xchg
shrb
mov
sub
cmc
lds
outsl
rcr
fwait
dec
xchg
outsb
mov
popa
mov
sub
or
or
inc
out
push
xorb
sbb
in
or
cmp
jg
push
jb
add
aas
ret
lea
popa
jnp
in
push
shlb
mov
pop
pop
mov
jg
nop
mov
xor
orb
mov
aas
int
repnz
ljmp
add
imulb
push
push
xchg
mov
sbb
mov
in
lods
jno
push
imulb
ret
nop
fidivrl
inc
ret
sub
fisttpll
hlt
sbb
mov
xchg
lcall
pushf
leave
sbb
add
pop
bound
adc
push
mov
popf
add
pop
mov
fucomi
pop
scas
pop
fisttpll
mov
and
and
mov
rclb
cli
movsb
cmp
in
xchg
pop
mov
movsl
in
dec
sbb
and
xor
push
sahf
inc
cmp
ret
gs
rcl
test
cs
push
add
fnsave
les
rclb
daa
ret
mov
mov
lret
pop
repz
add
xchg
loopne
mov
loopne
ja
rclb
mov
pop
fs
xchg
sarb
movsl
imul
sbb
adc
fs
and
loop
cmp
xchg
in
or
sbb
fcompp
xor
xchg
mov
sub
xchg
std
subb
icebp
xor
jg
push
inc
push
dec
cmpsl
cmp
fildl
cmp
sbb
jl
adc
xchg
add
mov
cmp
jnp
mov
cmp
cwtl
push
mov
sbb
das
sbb
icebp
mov
cs
das
sti
ja
test
nopl
push
jne
int
sbb
xor
adc
popa
cmp
fs
push
popf
sub
mov
jno
dec
sbb
sbb
lods
stos
pushw
and
cmp
movsb
lock
push
jo
lea
fdivs
xchg
jmp
addr16
popf
scas
outsb
cmpsl
pop
cmc
faddl
sbb
scas
pushf
xchg
je
mov
lock
loop
jnp
jge
mov
loope
push
inc
mov
sub
insl
pop
jnp
and
test
pop
sub
xor
sub
jmp
or
pop
inc
adc
mov
mov
je
jns
jne
ret
cmp
stc
int3
fcmove
cltd
stos
xorb
mov
dec
ljmp
int
fwait
ds
inc
jno
test
jle
pop
shr
jl
adc
push
adc
mov
pop
add
pop
lret
call
jl
sbb
push
std
ds
negl
xor
ljmp
jns
adc
xchg
cmp
nop
push
addr16
cmc
cmp
fistl
fwait
sub
pop
add
push
mov
sarl
dec
sub
xchg
add
mov
adc
rcll
sti
and
fwait
dec
and
or
add
notb
in
aaa
outsl
xchg
jne
push
mov
mov
in
nop
cmpsl
sbb
neg
aad
mov
cmp
push
cli
xlat
outsl
lcall
push
or
mov
stc
push
xchg
xor
inc
fs
jecxz
cwtl
or
jp
add
aam
jle
or
pop
push
rorl
fildl
and
flds
dec
adc
mov
testl
adc
bound
jge
icebp
inc
and
test
cbtw
lds
adc
mov
ret
addb
jae
pop
or
push
xchg
scas
test
pop
out
sbb
sub
in
mov
xchg
inc
inc
push
lods
xor
daa
or
cmp
xor
adc
add
cld
push
dec
ss
mov
add
loope
xor
in
mul
sbb
jb
jmp
jns
fisttpl
cmp
fpatan
lcall
sbb
std
sub
push
mov
aad
inc
mov
mov
push
mov
scas
pop
jecxz
fnstenv
vcvtpd2psy
outsl
int3
xchg
push
rcrl
shll
or
mov
add
mov
dec
pop
mov
dec
pop
stc
jg
addl
and
ret
and
out
mov
arpl
jne
mov
dec
mov
xor
sahf
adc
adc
mov
imul
jo
lods
add
lock
add
push
mov
push
data16
mov
dec
inc
fdivs
xor
or
xchg
mov
dec
andb
xchg
add
popf
out
rcr
mov
jp
lds
mov
pop
data16
js
sub
add
xor
adc
or
jp
test
sbb
aam
arpl
or
adcl
push
xor
pop
aas
imul
xchg
loopne
enter
test
adc
mov
movsl
ss
lahf
pop
mov
jl
inc
push
loope
push
lret
mov
and
cmp
aad
enter
shrl
jno
push
mov
adc
dec
cmpsl
gs
push
add
adc
rolb
movsl
mov
scas
push
pop
rorb
data16
scas
cmp
inc
pop
js
jmp
leave
fidivs
add
push
mov
push
pop
mov
push
jmp
je
mov
fs
push
rcrb
cmc
lret
iret
lcall
scas
outsb
cs
idiv
pop
leave
xchg
repz
inc
sahf
adc
mov
xchg
lds
dec
stc
jne
mov
imul
jle
dec
dec
mov
fcmovbe
scas
mov
dec
dec
cmp
mov
xchg
inc
push
cli
push
stc
push
inc
mov
out
jnp
and
sti
push
xor
insl
std
or
sub
outsl
cmp
jg
mov
adc
push
add
stc
push
sti
mov
mov
out
mov
xchg
loope
sub
add
jg
mov
pop
ljmp
mov
mov
ret
leave
pop
sbb
add
shll
fdivrs
dec
mov
shl
in
cld
sub
xchg
jns
mov
or
mov
lea
shll
in
xor
or
mov
ja
sbb
push
inc
inc
mov
shr
xchg
in
stos
jo
xor
ret
pushf
xlat
test
inc
jg
jecxz,pn
jp
lock
vpunpckhqdq
test
add
pop
call
scas
aaa
jno
and
movsl
test
push
jb
adc
push
js
or
test
cmp
jle
fisttps
pushf
or
addb
jle
push
scas
sub
xchg
push
xor
sub
outsb
rclb
cmp
mov
inc
sub
out
cmpsl
cld
mov
inc
push
addr16
pop
jg
mov
mov
jecxz
lret
jae
sahf
test
and
mov
cmp
sbb
pop
rcr
mov
mov
das
aad
sub
iret
addl
loop
add
ja
adc
cmp
repz
ja
xor
popa
popl
xor
dec
aaa
hlt
pop
imul
loope
lahf
shll
mov
test
ja
sbb
gs
adc
pusha
stos
pop
scas
subb
movsb
negl
or
imul
ds
hlt
movsl
cwtl
mov
into
in
je
cmpsb
cltd
jg
insb
mov
fstl
pop
lods
lock
js
popf
insl
xchg
jnp
out
arpl
call
pop
push
jnp
loop
lahf
jp
jb
mov
cmpsl
mov
cmp
xchg
mov
jge
fcom
fwait
mov
pop
adc
xor
packsswb
cmpsl
popf
ja
and
sub
loop
dec
mov
mov
pop
sub
add
div
insl
sub
pop
into
dec
jno
push
frstor
push
inc
adc
test
mov
jp
lret
jbe
and
ljmp
scas
sub
sub
cld
inc
sbb
sbb
lcall
push
leavew
repnz
loop
testl
call
mov
mov
xor
adcl
je
scas
push
jns
fisttpl
cmpsb
dec
pushf
nop
fwait
push
mov
mov
nop
lret
mov
inc
ret
mov
cwtl
or
push
rclb
call
sub
xchg
mov
cltd
or
add
dec
cltd
push
or
adc
inc
insb
push
mov
adc
les
mov
jp
mov
push
mov
ret
clc
movswl
lcall
mov
out
in
rcrb
jp
sub
mov
or
jno
bound
inc
mov
jmp
call
cmp
fbstp
dec
fs
sti
stc
xchg
mov
sahf
jl
fidivrs
xor
jnp
arpl
test
movsb
sub
sub
inc
jge
out
cs
mov
push
add
mov
dec
mov
inc
mov
ds
mov
xor
xor
xor
cmpb
fmull
insb
cmpsl
mov
js
add
inc
add
nop
adc
and
inc
lret
jo
sti
loope
les
jo
adcb
dec
notb
pop
sub
pop
jae
inc
pushf
pop
xor
ficoms
and
aas
mov
mov
dec
add
popf
mov
fisttps
ljmp
repz
sub
stos
into
movsl
cltd
inc
pop
dec
fs
jbe
push
lcall
daa
ficoms
mov
fwait
adc
out
loope
sahf
roll
sub
add
mov
jo
lret
jnp
or
inc
das
cmp
inc
fdivrs
in
adc
movsl
ja
stc
and
mov
test
jae
hlt
cmp
pop
pop
ret
xor
pop
int
sub
out
enter
xor
mov
jns
mov
cwtl
inc
dec
popf
pop
inc
push
jmp
out
out
push
ja
push
pop
push
mov
inc
push
inc
adc
add
add
insl
or
lods
jg
dec
xchg
aas
rorl
cli
pop
hlt
mov
in
cmp
xor
icebp
sbb
dec
sub
aas
nop
dec
push
cwtl
xor
jg
sbbb
cli
jp
lea
pusha
pop
test
jg
jmp
add
fmull
out
pusha
out
lea
insl
mov
xor
jmp
mov
adc
jecxz
fisttps
and
mov
jge
jmp
inc
mov
adc
int3
pop
stos
lret
dec
jns
filds
cmc
pop
pop
xor
fmuls
dec
dec
std
jae
push
dec
lret
jnp
mov
sbb
imul
outsb
movntps
mov
lods
fs
mov
xchg
push
je
test
lds
cmp
push
push
cmp
repz
inc
out
mov
sahf
and
loopne
out
pop
mov
dec
and
je
dec
ror
or
push
enter
jns
inc
jp
pop
insb
mov
fcompl
mov
mov
pop
xorb
adc
cmp
xor
jae
sub
dec
mov
mov
cmp
inc
xor
cwtl
out
mov
leave
xchg
jecxz
test
and
fadds
in
dec
loopne
adc
stos
push
inc
dec
out
out
push
and
sbb
add
cmp
mov
stos
cmp
ja
cltd
xchg
xchg
mov
mov
jns
or
push
sti
out
mov
pop
jle
jecxz
lret
popf
jg
subl
int
mov
das
stos
inc
pop
cld
pop
and
jb
jmp
ret
push
test
cmp
adc
je
aas
xor
sub
fnstsw
daa
xchg
loope
in
mov
into
fcomp
call
dec
out
push
sub
and
shlb
in
ss
sti
jl
xchg
xor
push
jae
xchg
je
out
or
adcl
in
cmpsl
fs
add
or
pop
mov
wbinvd
pop
out
add
popf
test
popl
or
jnp
shrl
sbb
iret
mov
jns
inc
test
ret
cmp
ss
lcall
insb
push
push
ja
call
push
dec
lock
mov
out
push
aad
je
dec
ret
jmp
pop
jae
flds
and
dec
movsl
iret
cmp
adc
cwtl
jns
sub
push
cmp
or
pop
jp
hlt
dec
inc
cltd
pop
stos
xor
adc
enter
push
and
pop
push
push
adc
cmp
sbb
push
inc
cmp
leave
push
and
pushl
cmp
sysenter
inc
scas
jmp
and
push
outsb
fadd
push
push
sub
dec
in
mov
xchg
adc
sti
xlat
jno
insb
push
clc
xchg
mov
push
cmp
xchg
test
pushf
cmpsb
jo
dec
daa
mov
adc
cmp
test
es
xchg
mov
pop
mov
mov
lods
movsl
loope
inc
in
adc
test
pop
add
xor
bound
outsb
movsb
loope
lds
cwtl
movsl
push
xor
fstpt
andb
push
divb
xchg
mov
jae
lea
shlb
jns
pop
cmpsl
mov
call
adc
ret
add
push
mov
stos
lcall
inc
mov
xchg
jne
inc
jg
insb
inc
aam
cmpsl
xchg
push
adc
mov
test
mov
pop
stos
inc
dec
leave
or
sbb
or
mov
cmp
insl
imul
movb
mov
sti
xlat
sarl
xlat
mov
sahf
mov
lcall
add
insl
mov
cli
push
dec
or
xchg
lods
jmp
pop
lods
test
push
dec
out
jmp
sub
out
and
mov
dec
cmp
in
push
roll
xor
mov
jb
inc
mov
outsl
inc
in
loop
pop
or
je
inc
es
fsub
pop
xchg
cmp
mov
dec
in
repz
frstor
xchg
and
push
jmp
fmull
or
or
sbb
mov
xor
rep
setp
push
pop
bound
pop
push
dec
daa
sbb
sbb
cmp
inc
clc
dec
xor
stos
scas
fldcw
and
pop
dec
mov
jbe
cltd
hlt
pusha
jl
fidivs
xor
cmc
flds
dec
cmp
scas
xchg
ret
push
daa
jp
xchg
push
daa
rorl
fbld
into
leave
scas
add
xchg
push
xor
testl
cmp
push
pop
call
pusha
fldl
loopne
push
jae
inc
std
sbb
loope
mov
faddl
cld
adc
inc
mov
ret
ljmp
stos
sub
popa
xor
aas
pop
test
test
jae
pop
ljmp
out
aam
insb
mov
arpl
push
cmp
and
and
or
pop
and
in
ret
and
xor
mov
out
adc
jb
and
lds
pop
mov
incl
out
inc
pop
add
mov
mov
lock
in
gs
mov
mov
jmp
aas
lret
lods
jbe
js
cmpsl
iret
pop
adc
pop
sete
pop
jne
sbb
shrb
mov
jle
jae
decb
jne
sbb
shlb
sbb
push
pusha
fwait
push
repnz
pop
in
sub
icebp
cs
cmpsl
push
hlt
add
lods
movl
lret
xchg
ficoml
jb
icebp
in
or
xor
dec
std
mov
xchg
jge
sub
ret
cmp
lods
mov
push
ret
scas
xchg
mov
jo
mov
iret
aam
scas
scas
pop
mov
sub
pop
dec
aam
or
adc
in
lahf
cwtl
repnz
loopne
mov
call
mov
cli
inc
add
cmp
push
dec
pop
in
mov
mov
movsl
insb
into
adc
push
xchg
fisubrl
scas
jnp
div
flds
jp
jne
in
mov
inc
inc
dec
imul
out
dec
repz
adc
lock
add
push
pop
xlat
imul
inc
mov
cmpsl
jo
mov
mov
movsb
mov
jp
push
scas
sbb
dec
mov
loope
lods
leave
add
fwait
xchg
mov
xchg
sub
or
push
out
movsb
xchg
xchg
add
stc
scas
fstpl
push
lds
ficompl
clc
out
sub
dec
jle
push
lds
lcall
movsl
jp
loope
xorl
in
stos
push
mov
push
mov
mov
fsts
rcr
mov
and
and
lret
fimuls
aad
shr
inc
add
lret
jle
dec
dec
inc
clc
push
or
mov
fcmovu
mov
jae
push
lds
stos
lret
cltd
in
lea
xchg
sahf
das
jle
pop
push
dec
sbb
push
mov
mov
sub
jns
sub
loope
fwait
call
outsl
cli
cmc
adc
pop
out
mov
lock
push
imul
stc
pop
xor
jmp
pop
ss
movsb
movsl
aam
pop
fisubrl
cmpsb
lret
mov
xor
lods
pushf
mov
lods
jbe
push
inc
ficompl
iret
mov
loop
sub
das
in
bound
jge
and
in
aaa
adc
mov
sub
ret
jo
cwtl
mov
inc
es
fildl
cltd
fdivl
mov
pop
cmp
push
lahf
and
sarl
mov
xor
mov
lock
cmc
push
push
shr
scas
nop
and
inc
mov
adc
lret
icebp
sbb
hlt
jmp
cvtdq2ps
clc
iret
lds
mov
fs
lret
js
dec
ds
inc
pop
mov
test
std
sbb
jae
and
out
sub
mov
inc
mov
pop
mov
test
leave
lret
jl
cltd
xor
in
pop
pop
jle
inc
ret
dec
test
push
lods
imull
jp
js
jns
or
pop
lret
shl
ja
jle
cmc
xor
cli
mov
sbb
das
fcompl
decl
ss
xor
push
xor
in
or
xor
int3
add
mov
jae
xor
aas
fmuls
les
mov
dec
dec
jae
popa
xor
rcll
mov
mov
mov
dec
cmpsl
roll
hlt
sub
add
push
cli
inc
inc
add
gs
mov
testb
pop
out
stc
repz
jmp
push
cmc
adcb
and
push
repnz
inc
pushf
in
stos
fistl
enter
pop
in
insb
icebp
notl
mov
insb
pop
sub
cmp
out
push
sub
xor
das
out
lock
insb
cmp
in
pop
and
pop
and
cmp
scas
add
out
int3
shl
test
jp
lock
mov
pop
cmpsl
cmc
mov
cmp
push
cmpl
sbb
xchg
addr16
adc
daa
test
stos
outsl
out
adc
hlt
rorl
or
lods
stos
out
mov
setl
cmpsl
mov
repnz
mov
subl
lret
test
test
or
pushf
fs
cmpsb
dec
rorb
icebp
or
xchg
adc
lds
mov
xor
pmulhw
inc
adc
popl
stos
push
dec
mov
push
and
out
scas
adc
popa
xor
mov
out
jo
mov
push
lcall
fs
fwait
cmp
sub
push
int3
fwait
daa
or
mov
sbbl
mov
outsb
imul
lea
mov
and
aaa
fst
mov
adc
or
cld
push
xchg
into
push
cmp
fstps
push
leave
xor
jg
push
mov
adc
cmp
das
adc
ss
cmpsb
inc
cmp
out
mov
dec
mov
pop
and
mov
push
inc
push
pushf
push
or
mov
fs
mov
icebp
dec
inc
aas
repnz
out
repz
imul
add
cmp
outsl
cld
xor
jl
cmp
xchg
loop
cmp
movsb
std
clc
out
pop
mov
mov
shr
pusha
mov
mov
into
mov
pop
test
insl
sbb
xlat
add
lock
push
sarb
fbld
xor
insb
mov
repz
jno
cmpsb
jne
aas
jg
inc
les
scas
dec
sti
jp
cmp
imul
add
inc
xor
or
nop
pushf
imul
leave
xchg
cli
fs
or
sub
push
mov
pop
push
popf
cmp
add
cli
push
mov
push
rolb
mov
lock
jns
sahf
pop
jno
bound
jmp
sub
inc
mov
xor
mov
stos
inc
xchg
stc
in
fnstenv
test
mov
adcl
sbb
imul
pop
clc
cmp
inc
sub
loope
jmp
add
cs
stc
fistps
sub
mov
mov
ret
inc
fwait
enter
mov
jecxz
in
repnz
ret
pop
or
fwait
and
fs
dec
adc
daa
test
pop
inc
ljmp
push
nop
aaa
push
push
pusha
xor
mov
in
popa
fstl
popa
inc
or
xchg
dec
cmp
ret
negb
int3
pusha
and
test
pushf
js
repz
jp
shlb
add
hlt
into
jnp
leave
sbb
out
aas
push
bound
insl
gs
outsl
pop
sub
mov
rcll
neg
jne
push
subl
pop
test
and
aam
mov
lcall
into
push
push
je
js
aam
je
cli
jno
bound
xchg
lds
jb
mov
jmp
inc
int
xchg
add
cmp
pop
xor
add
adc
mov
mov
fmull
in
dec
test
sub
iret
les
xchg
sbb
jmp
jecxz
inc
aam
cmc
jg
pusha
jbe
push
push
pop
imul
ljmp
dec
stos
jo
jmp
pop
out
stos
push
jecxz
pop
idiv
cmpsl
sbb
rorl
lods
mov
xorb
cmp
mov
push
push
popa
test
dec
and
imul
bound
scas
lcall
outsb
pop
aam
cmp
jno
jbe
es
andl
fisubs
push
das
dec
pop
inc
and
jnp
or
mov
mov
mov
mov
daa
std
rolb
sub
add
leave
lret
rol
ds
iret
vcmpss
or
inc
xor
mov
or
fdivs
mov
pop
lret
fchs
xor
push
xchg
fwait
push
mov
out
stc
bound
cmc
ja
and
pop
into
cmp
loopne
fdivrl
rol
and
inc
xchg
push
fidivs
push
ficoms
sbbb
pop
loopne
outsb
and
cmp
mov
mov
test
cmp
jne
icebp
jb,pn
out
and
adcl
int3
or
mov
cltd
mov
mov
fildll
mov
mov
es
jl
inc
jns
lcall
andl
mov
loop
jmp
sbbl
lret
push
push
decb
jo
daa
xor
arpl
stos
lock
pop
fxch
push
cwtl
mov
icebp
jg
jle
mov
rorl
pop
testb
stos
adc
cmp
popa
push
jg
lods
mov
xor
xor
xor
and
in
mov
es
add
jp
fwait
xor
mov
mov
imul
xor
xchg
inc
inc
or
xchg
mov
inc
sbb
push
cmp
fstpl
stos
cmp
dec
or
in
test
lahf
or
xchg
mov
xor
cmp
enter
mov
push
dec
push
jge
sub
aad
addl
sbb
add
inc
not
shll
fs
shrb
insb
test
in
rorl
aaa
aas
int
cmp
sbb
add
xor
dec
xor
add
jge
or
and
xchg
lahf
or
jmp
xor
outsb
pop
cmp
mov
into
lahf
sbb
pop
mov
std
mov
add
popf
jp,pn
add
loopne
jmp
or
shr
imul
in
loope
iret
xor
or
int3
cmc
repnz
ret
fdivl
inc
out
dec
push
pop
inc
push
adc
or
das
xor
ja
pop
shlb
xchg
scas
popa
in
test
dec
mov
push
pop
xchg
pop
pushf
sub
mov
xchg
dec
cwtl
test
sub
jb
add
bnd
inc
cmpsl
cs
dec
bound
pop
sub
or
pop
and
int3
out
and
mov
insb
jnp
or
sub
in
dec
jge
jecxz
and
xchg
icebp
xor
lds
add
sbb
pop
in
mov
add
loopne
sarb
out
xchg
add
jl
sbb
mov
mov
xor
outsb
repz
xchg
cmp
stc
addb
ljmp
jecxz
and
sbb
xlat
out
adc
cmp
mov
push
push
fs
push
out
std
xchg
cmp
cmp
scas
pop
push
int
prefetcht1
lcall
cmp
lods
je
pop
mov
lret
jecxz
popf
pop
mov
sub
jmp
mov
xchg
cmp
inc
mov
xor
fiadds
add
sbb
sar
lcall
xchg
addr16
addb
bound
push
bsr
movsl
pop
and
lret
shlb
jno
test
loop
ds
pop
bound
cld
jle
mov
mov
jns
mov
jne
xchg
call
jg
out
pop
orb
xchg
test
stc
insl
add
in
xchg
pop
adcb
or
jb
hlt
pop
sbb
inc
or
rorl
sub
and
jmp
lock
add
pop
dec
lret
leave
push
inc
push
adc
leave
push
sbb
loope
jp
push
js
lods
mov
icebp
call
rcll
mov
and
sub
loop
cmc
pop
inc
lret
cs
out
jb
test
stc
mov
jge
push
add
add
sub
jge
sub
push
into
in
push
clc
jle
push
mov
test
push
aad
xchg
repnz
adc
filds
push
sbbb
mov
pop
andl
enter
inc
incl
gs
nop
aam
jecxz
fisttpl
sbb
mov
push
mov
lods
jne
sbb
or
nop
adc
pusha
push
nop
and
push
xlat
or
je
lods
sar
cli
inc
mov
hlt
pop
icebp
rol
cmp
fld
xor
jae
pop
mov
xchg
lods
inc
and
jl
daa
sbb
sub
dec
orl
mov
mov
fstl
iret
cmp
ja
arpl
adc
lcall
pop
addr16
adc
pop
pop
in
xchg
das
mov
js
add
das
sbb
pop
pusha
jecxz
fimull
jle
and
push
loope
jae
mov
and
fidivrs
sbb
jge
ret
mov
mov
pusha
xchg
mov
push
cmp
inc
push
in
or
sub
call
call
out
aas
lahf
dec
push
rorb
cld
push
xchg
testl
adc
add
ror
ficoml
aam
dec
rol
aad
or
mov
clc
and
mov
or
mov
cmp
pop
jecxz
enter
cmpsl
sub
jle
stc
sbb
mov
jbe
ja
out
icebp
das
sahf
sbbl
sti
xchg
call
adc
add
clc
rcr
aam
fwait
pop
cmp
int3
popf
clc
mov
sub
cmpsb
rol
outsb
pop
inc
fwait
sub
xor
out
lret
sbb
xchg
mov
ss
repz
addr16
fs
pop
lret
cmpsb
xchg
insl
jno
iret
out
aad
fidivrs
fistl
lret
dec
addr16
leave
add
lea
sbb
sbb
cmp
int3
orb
fimull
aam
mov
sub
test
mov
xchg
and
int3
adc
xchg
push
pop
fidivrl
mov
cli
jge
sbb
mov
daa
and
insl
xchg
push
loope
rcr
mov
fsubs
sbb
test
lods
push
call
cmp
fbld
dec
adc
test
mov
sahf
shlb
adcb
and
dec
rorl
lea
scas
mov
pop
xchg
push
icebp
pop
add
idivb
fcoml
pusha
into
std
fnsave
in
test
cltd
and
xchg
mov
mov
enter
imul
aam
xor
jp
imul
fistl
mov
jae
aam
in
outsl
scas
ja
andps
dec
in
ficoms
and
or
mov
sti
xchg
rcll
push
outsl
mov
pop
sbbb
add
sub
adc
push
lcall
mov
xchg
mov
shr
mov
dec
sbb
inc
or
iret
and
out
outsl
sbb
scas
orb
jbe
outsb
shrl
out
xor
cmp
jne
outsl
les
or
push
jmp
push
xchg
xchg
imul
xor
sbb
fbld
pop
ficoml
pop
sbbb
lret
jbe
mov
push
testl
adcl
sbb
push
sub
xchg
clc
sub
dec
iret
xchg
jl
int
add
sub
dec
into
pop
jbe
pusha
scas
int
push
xchg
jne
pop
add
push
pop
mov
out
dec
mov
xor
std
xchg
cmp
repnz
shr
or
jae
mov
stos
pushf
scas
fistps
mov
mov
push
mov
push
loope
inc
imul
jg
mov
daa
xchg
xchg
xchg
pop
inc
cmp
or
cmp
imul
ds
jmp
inc
negl
dec
inc
inc
mov
lods
jo
lahf
aad
mov
xchg
pop
clc
dec
sbb
xchg
jb
pop
sbb
xlat
and
cmpsb
jg
divl
loopne
iret
scas
stc
aad
lahf
inc
xchg
add
push
jb
dec
ds
pusha
inc
aam
repz
popf
pop
cmp
mov
or
es
push
fld
cmp
dec
fwait
dec
and
out
aam
pop
push
vandnps
lods
inc
repz
push
insl
jl
or
sbb
test
mov
sar
mov
mov
cmp
sbb
jge
aam
popa
lret
push
cs
in
lahf
insb
push
cli
jno
push
mov
icebp
inc
out
cmp
mov
xchg
sub
lods
daa
imul
push
ret
and
push
cli
xchg
shlb
aad
push
dec
dec
or
sub
mov
sbb
cmp
insb
xchg
adc
mov
addr16
mov
sbb
mov
decl
dec
add
or
int3
loope
or
jae
jns
xlat
aam
call
sub
aas
in
mov
pop
ljmp
shll
xor
enter
cld
cli
xor
repnz
jne
push
jmp
sbb
shlb
aad
cs
sbb
or
js
mov
mov
ret
lret
outsb
out
xchg
pop
addl
mov
dec
mov
xor
in
pop
xor
mov
push
push
dec
js
loope
inc
mulb
rcrb
gs
insb
ss
xchg
rcr
stos
sbb
mov
mov
fistpl
lret
xorb
mov
add
scas
je
outsl
pop
popa
pop
pop
cmp
pop
imul
pop
pop
pop
std
stos
fsubl
add
jecxz
lods
jp
es
pushf
pop
adc
pop
out
dec
mov
addr16
outsb
sbb
xlat
int
sub
stos
je
scas
mov
bound
int3
pop
inc
adc
pop
jecxz
pop
loope
loop
xchg
icebp
xchg
adc
es
cmp
and
push
out
adc
mov
xchg
jp
jge
jecxz
and
push
subps
mov
jle
mov
lods
nop
lahf
insb
lods
inc
or
inc
fcmovne
aad
pop
adc
xchg
and
outsl
scas
popf
pop
dec
stos
sub
pop
push
jns
jle
pop
sar
xlat
lea
push
sbb
adc
xchg
pop
iret
outsl
inc
push
test
xchg
popa
popa
xor
xchg
cmp
adc
add
xor
out
dec
imul
loop
xchg
dec
sbb
mov
sub
jp
sbb
pop
pop
xchg
inc
repnz
mov
pop
pushf
in
insl
int3
inc
xor
jo
sarb
aad
jb
mov
push
mov
aad
mov
shl
out
mov
pushf
movsb
imul
sub
in
adc
push
jbe
lods
int
dec
jae
mov
out
int3
add
lods
mov
fbstp
xor
daa
jge
pop
repnz
and
popa
push
push
daa
jmp
es
fidivl
aaa
lods
push
lods
lahf
cmp
cmp
cmpsb
push
nop
or
xrelease
cmpsl
fcompl
imul
into
dec
jnp
add
outsl
add
gs
or
sbb
icebp
dec
in
sbb
jnp
stc
fs
jne
or
xor
lods
mov
cwtl
ret
loopne
shl
or
pop
xchg
dec
aaa
imul
mov
dec
sub
sbb
mov
insl
call
xor
dec
cs
int
enter
ljmp
jb
stos
push
adc
and
repz
lcall
mov
std
jmp
fisubl
xchg
mov
arpl
ljmp
stos
mov
inc
sbb
push
popa
sub
push
sub
int3
cmp
negb
xchg
outsl
dec
jae
sbb
mov
aad
jo
faddl
inc
and
nop
cwtl
lea
enter
dec
lea
xchg
jl
adc
iret
lret
and
mov
pushl
and
mov
add
or
mov
pusha
icebp
aaa
aad
push
mov
not
push
sbb
popa
out
xor
push
xor
dec
icebp
adc
outsb
addb
in
imul
adc
push
adc
fwait
movsb
cmp
xlat
or
stc
add
fstps
aaa
scas
fbld
out
in
nop
xchg
insl
dec
and
fidivl
adc
pushf
xchg
clc
cld
xchg
fs
dec
xchg
ret
cmp
fnstcw
jno
add
enter
mov
mov
arpl
jmp
aam
xor
pop
add
jmp
mov
xor
inc
dec
test
push
jae
sbb
stos
push
out
test
pop
pusha
cmc
push
pop
in
adcl
ficomps
cli
mov
fists
cmp
push
adc
jne
icebp
xchg
pusha
loopne
xchg
pop
sub
sub
arpl
cmpsb
mov
or
test
and
inc
iret
and
sti
loopne
mov
data16
mov
mov
fmuls
orl
popf
or
lock
or
insb
mov
cmpsb
jb
insl
imul
jae
test
push
push
inc
pop
pop
je
sahf
fwait
loope
cmp
mov
jge
sub
xchg
xchg
int
in
stc
mov
mov
mov
mov
fimull
xchg
add
xchg
mov
cs
jbe
add
jge
mov
lea
and
push
cmp
adc
in
rolb
xor
inc
sbb
mov
jp
mov
cli
mov
roll
data16
sbb
jnp
cmp
jle
ret
stc
inc
stos
ret
or
jecxz
out
loop
pop
push
xchg
test
push
xchg
pop
push
jge
outsb
sbb
jnp
arpl
js
dec
dec
sub
cmp
stc
daa
xchg
xchg
aam
push
or
xor
fsubs
push
scas
call
xor
or
sub
mov
adcl
test
xchg
sti
aas
in
push
jp
shll
push
push
lock
pop
xchg
repnz
mov
sub
imul
imul
mov
clc
lret
cmp
movsl
mov
fs
ret
movsb
push
mov
mov
ds
or
cmp
inc
mov
jg
dec
or
adc
xor
jp
jae
and
fadd
fisubs
icebp
fsubrl
mov
arpl
mov
hlt
adc
xor
xor
or
scas
jmp
sti
mov
jmp
imul
xchg
enter
and
in
aam
roll
insb
test
fwait
pop
and
push
jg
push
jge
mov
shlb
mov
mov
xchg
xor
mov
sub
leave
out
add
daa
into
xchg
mov
mov
loop
cmp
pop
bound
cmp
cmpsb
sti
movsb
sub
cmpl
mov
pop
adc
sbb
inc
hlt
arpl
mov
test
mov
rolb
data16
inc
push
xchg
and
jge
rcrl
sti
std
and
pop
and
sbb
nop
and
je
push
jg
rcll
sbb
stc
add
sbb
ss
mov
cmp
lret
dec
mov
ret
cmpsl
pop
out
cmc
and
mov
clc
pop
in
xchg
subb
out
fldl
shr
shll
and
pop
cmp
sbb
xor
adc
fnstsw
jge
xchg
cmpsb
inc
dec
sub
pop
push
jl
dec
sahf
mov
adc
sbb
dec
pushf
cli
xchg
clc
shrb
push
lahf
xchg
pop
dec
mov
les
pusha
dec
dec
sahf
outsl
mov
addl
ret
sbb
sbb
cltd
and
sbb
test
test
pop
inc
test
mov
in
pop
lods
cwtl
es
xor
cli
sbb
adc
lods
push
push
mov
pop
repz
mov
jnp
xlat
inc
sti
inc
mov
insb
fistps
mov
jne
add
add
or
fisttps
loop
adc
sub
inc
iret
sub
lcall
inc
cmp
cs
xchg
jno
cmp
imul
imul
jbe
in
xor
pop
in
jge
push
push
adcl
add
dec
out
pop
cmc
and
call
in
ljmp
jecxz
push
leave
sbb
mov
add
pushf
dec
dec
xorb
lods
pop
out
adc
inc
push
daa
andb
sbb
mov
nop
xor
adc
sub
adc
dec
sub
sbb
je
mov
mov
loope
movsl
inc
and
xor
divb
rclb
fdivs
addr16
shl
aaa
xchg
negb
cmpsb
push
push
jae
cmp
outsb
sahf
mov
sbb
iret
mov
clc
aaa
or
out
xchg
mov
subl
inc
cwtl
arpl
mov
mov
mov
jns
out
leave
dec
imul
mov
push
or
in
ret
daa
add
mov
pop
adc
test
lret
aaa
popa
nop
cmc
and
stos
fstp
and
lret
lret
and
outsl
shll
jns
ss
pop
mov
add
sub
bound
fadd
repz
dec
adc
lret
repnz
dec
call
mov
jns
pusha
ljmpw
xchg
jl
push
push
add
sbb
jmp
or
lods
dec
dec
iret
mov
lcall
aas
aam
sub
cwtl
aas
mov
dec
sbb
out
stos
jmp
adc
outsb
fdivr
cmpsl
pop
cmpsb
repz
cmpsl
or
js
lods
test
loopne
cmp
cmpb
and
loope
sub
add
push
dec
ljmp
rcr
cmp
inc
das
inc
fwait
push
jle
xchg
adc
aad
mov
push
mov
bnd
lret
repnz
pusha
mov
mov
js
call
mov
cltd
aas
roll
stc
ds
lods
xchg
inc
sbb
push
pop
mov
lea
iret
test
int3
lds
add
mov
vpackssdw
and
cmpsl
push
sahf
js
xor
push
mov
stos
cld
cmp
dec
mov
xchg
mov
ljmp
mov
dec
xchg
clc
dec
scas
fldl
xlat
jmp
lods
inc
cmp
adc
adc
push
stc
in
cmove
adc
and
ss
lcall
ficoml
xchg
push
adc
clc
push
jecxz
xor
and
comiss
ror
rclb
aad
mov
or
das
pop
jecxz
fistpll
out
pop
xorl
mov
sarl
push
lods
pop
or
aas
aad
ljmp
pop
xchg
inc
xor
or
popa
mov
sub
xor
mov
outsl
jbe
jmp
mov
rorl
pop
pop
arpl
idiv
out
xor
ret
dec
mov
mov
and
cmp
test
mov
mov
movsb
pop
adc
mov
sbbl
jne
imul
outsb
into
push
movsl
push
mov
ret
or
mov
arpl
pop
popf
test
xchg
cmp
inc
xchg
mov
add
cmp
mov
sbb
sub
scas
jle
faddp
push
push
mov
mov
js
push
mov
cmp
and
cmp
dec
sahf
int
or
fstp
les
xchg
lret
leave
xor
jae
xor
xchg
dec
dec
sub
mov
sbb
xchg
xor
lahf
pop
fadds
xlat
addb
mov
add
or
fidivrs
loop
pop
scas
movsl
js
loope
push
scas
dec
into
repz
js
pop
std
mov
adc
pop
jo
scas
sub
outsl
ss
lahf
sub
xchg
push
add
fstpt
idivb
aas
pop
ffree
mov
adc
push
loop
les
idivl
sar
rorb
mov
sbb
sbb
icebp
dec
xrelease
lock
xorb
jg
adc
pop
mov
repnz
ret
mov
cld
je
sub
mov
icebp
mov
idivb
xchg
jne
sub
push
nop
jmp
rcl
leave
cmp
mov
int3
fstps
ds
cmpsl
pop
outsl
xor
mov
sub
mov
fldenv
mov
pop
scas
ret
hlt
call
cwtl
and
push
dec
push
mov
testb
aad
jno
dec
ror
lock
in
sub
sub
bound
jg
mov
dec
jecxz
adc
cmp
mov
sahf
sbb
ss
mov
dec
mov
xchg
mov
jae
rcrl
aaa
add
push
xchg
into
jnp
pop
pop
xlat
gs
ret
movsl
jge
jno
xchg
test
lods
sbb
test
mov
push
ljmp
mov
sbb
shl
nop
mov
push
or
jb
popa
fdivs
push
in
pop
aad
cmp
jg
add
lea
pop
and
and
mov
cs
lock
inc
outsb
and
pop
fucomip
loope
int3
divl
movsl
adc
inc
push
or
jnp
sbb
sub
mov
cli
add
mov
inc
test
lahf
sbb
pop
add
jne
and
subb
pusha
loop
cld
insb
sub
stos
cmc
pop
jno
or
test
gs
sar
inc
mov
std
imul
adc
insl
lock
rol
jmp
and
lea
pop
adc
mov
sbb
fld
xor
lret
in
in
shll
mov
punpckldq
adc
xchg
jbe
scas
imul
fwait
int
imul
or
test
and
adc
jle
xchg
xchg
xchg
sbb
mov
sub
outsb
jae
jl
add
ret
jmp
out
xchg
add
xor
into
iret
and
xchg
in
push
out
pop
mov
orb
xchg
aas
cltd
mov
enter
aaa
dec
jmp
push
and
push
add
mov
in
dec
fbstp
jo
cmp
in
filds
imul
leave
test
cltd
aas
pop
cmp
dec
outsb
std
cmc
push
scas
fsub
cmp
aad
imul
fiaddl
data16
inc
rol
dec
loop
mov
cmp
sti
ss
mov
cmp
jge
adc
les
stc
lock
mov
add
mov
mov
pop
pushf
cs
shll
mov
aam
pop
into
mov
lds
orb
fistps
jmp
add
addl
cwtl
and
into
shll
cmc
push
pushf
push
adc
xchg
mov
sahf
sub
mov
ja
out
add
out
inc
jp
cmp
jge
pop
loope
and
push
out
dec
add
push
leave
aas
push
or
insl
outsb
mov
loope
add
out
mov
mov
out
out
mov
mov
sbb
mov
popa
fadd
jo
ljmp
cmpsl
mov
mov
pop
inc
mov
cs
sbb
add
push
insl
cmc
mov
mov
mov
pop
sub
pop
mov
sub
inc
fs
push
int
cli
cs
adc
lds
lock
adc
sarl
movl
mov
adc
add
sub
dec
inc
fisubs
xchg
mov
ret
test
imull
jae
push
ljmp
sub
mov
and
data16
clc
fisubs
ss
pop
stos
and
jmp
loop
outsb
or
stos
test
stos
lret
mov
out
sub
scas
inc
in
pop
or
jl
pop
fmull
clc
adc
loop
rclb
test
xchg
xchg
sbb
ret
mov
pop
adc
push
mov
ja
ja
cmp
popa
lea
loope
add
test
mov
dec
cmp
xchg
xlat
test
xchg
pop
or
fidivs
out
div
aam
dec
pop
stos
fcoml
or
mov
xchg
push
jl
sbb
nop
fisttps
dec
jge
loop
push
lock
test
fcmovbe
pop
push
xchg
scas
cmp
dec
xchg
cmp
dec
ja
orl
push
mov
sarl
add
aam
sub
test
inc
bsr
movsb
rcrl
fimull
movsb
mov
xchg
sub
mov
and
xchg
jg
mov
fbld
cmp
das
adc
fs
push
shl
mov
mov
xor
inc
loope
sbb
xor
xor
mov
sahf
add
or
fwait
xchg
stos
insb
push
xor
push
mov
fistpll
lock
imul
sub
loop
aam
pop
aas
ss
xor
xchg
inc
inc
mov
test
xchg
enter
sbb
jns
pop
push
test
inc
xor
enter
popa
ljmp
pop
jns
mov
js
fs
popa
adc
pushf
mov
nop
sub
jmp
ja
cmpsl
push
test
mov
push
inc
xchg
das
aas
lods
clc
outsl
dec
aaa
push
sub
pop
mov
or
je
xchg
out
dec
outsb
pop
or
dec
inc
dec
pop
aas
sbb
mov
sub
jo
mov
test
hlt
ss
sbb
push
sub
push
inc
xchg
mov
stc
and
and
in
xor
jp
je
cli
or
loopne
arpl
mov
jo
outsb
mov
out
rorb
adc
negb
push
cld
imul
xor
and
leave
mov
xchg
sub
mov
mov
pop
pop
pushf
add
ljmp
scas
xor
inc
adc
aas
stos
sahf
addb
lock
or
fsubrs
cmc
push
pop
cmpsl
add
clc
add
out
cmp
stos
leave
in
andb
fucom
or
push
call
sub
daa
cmp
cmp
fildll
test
int
mov
int
data16
pop
jo
sarb
jns
push
enter
enter
daa
push
je
mov
repz
xchg
and
leave
nop
or
inc
sub
adc
xor
imulb
call
pop
add
sbb
push
or
pop
enter
lret
daa
das
test
outsl
leave
mov
lods
lcall
jmp
addr16
outsb
jae
cli
add
jge
fcomip
jge
movl
testb
cli
in
out
and
mov
cmp
leave
and
lods
and
push
push
pop
xor
xchg
sbb
int3
inc
fcom
jo
dec
xchg
mov
ljmp
js
add
mov
ret
inc
push
sbb
out
push
sub
pop
jle
jb
std
je
pop
mov
dec
out
xor
push
jo
inc
mov
pusha
or
mov
add
jle
pop
jmp
or
push
mov
or
mov
call
inc
push
aam
fsubrp
mov
fs
out
enter
sbb
mov
cwtl
jmp
sub
xchg
movsb
xchg
in
pop
or
lcall
daa
inc
add
mov
add
stos
xor
rcr
mov
icebp
scas
xor
jb
lcall
pop
xchg
aam
xchg
subb
sti
shlb
jnp
mov
test
lock
mov
cmpsl
iret
shlb
dec
sahf
jno
loope
jne
rcrl
js
mov
xchg
fstps
in
jge
fcoms
or
xchg
jnp
ljmp
dec
jge
leave
adc
add
int
push
pop
xor
mov
dec
fistl
ljmp
jae
jl
cmpsb
push
je
xchg
dec
xchg
and
jno
scas
xchg
pop
cld
add
cmp
cmpsl
es
push
add
arpl
xlat
dec
jecxz
push
push
and
insl
cmp
inc
fcmovu
add
mov
insl
dec
inc
mov
leave
jne
jns
idivb
cmp
sub
lcall
inc
int3
mov
pop
lods
push
xchg
jae
idivl
xor
push
pop
pop
hlt
xchg
das
xor
jno
jmp
jo
mov
outsb
mov
daa
cmp
mov
roll
mov
iret
add
sbb
lock
pop
cwtl
das
mov
adc
jle
pop
push
sahf
xlat
pusha
js
in
mov
jo
in
mov
add
repnz
fiadds
into
cwtl
adc
and
mov
pop
scas
scas
lods
add
dec
pop
cld
mov
leave
fucomip
mov
xchg
sti
inc
outsl
dec
mov
jmp
or
sbb
clc
inc
call
jnp
cmp
xchg
jmp
inc
sub
test
pop
and
cmpsb
shrb
dec
adc
push
inc
ret
cmp
jae
inc
scas
xchg
test
pop
icebp
and
jno
and
leave
scas
sbb
out
lret
dec
add
inc
out
and
fldcw
adcb
push
add
sbb
jmp
jae
int3
push
push
jmp
lret
dec
pushf
lret
xor
rclb
inc
dec
leave
loopne
cs
mov
lcall
into
jae
xor
fdivrs
and
negl
cmpsl
lea
inc
mov
push
scas
xorb
cwtl
inc
push
jo
test
or
cmp
mov
test
outsb
cmp
mov
ja
push
pop
push
mov
pushf
jg
xchg
imul
cmp
sub
dec
cmp
cmp
daa
lret
mov
fimuls
or
in
stos
xchg
std
pop
orb
out
fistpl
pop
push
xor
int3
push
push
lea
mov
or
repnz
xchg
popa
cltd
mov
dec
push
adc
movsb
jge
into
dec
and
in
ret
cmp
cmp
fidivl
lret
add
jmp
or
mov
push
lahf
lods
xchg
stc
jmp
mov
clc
jecxz
out
in
inc
rcll
mov
cmp
cltd
enter
mov
mov
sahf
das
or
inc
xorl
sbb
inc
aaa
das
xchg
test
leave
push
sbb
mov
xchg
sbb
ds
idivb
xor
repnz
outsb
pop
xchg
xchg
jecxz
sahf
sub
imul
cwtl
shr
test
movsl
jge
iret
inc
movsb
sub
inc
aaa
mov
filds
push
iret
xchg
add
pop
stc
mov
je
inc
jl
mov
adcl
testl
stc
or
fnstenv
fs
loope
mov
jmp
lret
inc
cld
adc
loope
insl
sti
xor
pop
pop
fucomp
pop
push
jae
je
aaa
mov
xor
xor
push
push
mov
add
ja
lock
push
and
xor
sahf
sub
pop
mov
jo
mov
add
les
mov
add
repnz
loope
cmpsb
je
mov
call
in
sti
ss
divl
mov
leave
movsb
cmp
sbbl
dec
dec
stc
sbb
mov
cmp
mov
mov
cmpsl
push
movsl
xor
leave
pop
ret
jg
dec
shrl
out
pop
fcompl
sub
in
lods
movb
cmp
out
pop
popa
or
andb
test
jg
lret
fistpll
mov
icebp
mov
or
cs
xchg
sub
mov
xor
pop
scas
daa
pop
cmpsb
cmp
mov
repz
pushf
ljmp
lret
ret
test
movsb
pop
and
in
aaa
in
sti
mov
jb
shll
mov
in
xlat
jle,pn
daa
sbb
iret
scas
or
xor
jbe
mov
jmp
or
add
pop
fucomip
xchg
lds
lods
jns
daa
std
push
and
push
inc
jb
out
daa
add
xchg
repnz
cltd
pusha
lret
cli
or
lds
cmp
fistl
or
in
sahf
push
mov
std
popf
imul
in
scas
jo
jne
cmp
mov
jl
pop
xchg
out
sub
stc
movsl
or
xchg
daa
testl
jbe
xor
aaa
adc
aam
dec
xchg
mov
ss
cmp
jmp
std
mov
loop
fiaddl
inc
push
xor
pop
fcompl
mov
cmc
imulb
cld
paddusw
mov
in
out
les
aas
hlt
sub
test
add
mov
push
addb
outsb
jmp
lds
fwait
xlat
inc
outsl
out
cs
or
lds
repz
ret
cmpsb
mov
ljmp
mov
mov
dec
inc
ffreep
pusha
es
out
push
jp
cwtl
movsb
repnz
push
or
jne
test
out
outsb
mov
mov
pop
pop
dec
cli
lock
jge
movsl
fsubrs
xor
lods
pop
data16
mov
push
dec
jmp
into
dec
jo
jecxz
icebp
inc
push
mov
dec
loope
aam
sub
testl
mov
stos
xor
cmp
repz
push
and
or
pop
aas
mov
cltd
rcrl
pop
leave
js
fs
xor
nop
xchg
rorl
shl
sub
push
adc
loope
mov
js
pusha
adc
sbb
mov
aaa
sbb
in
repz
fimuls
rorb
andl
mov
add
ja
xchg
pop
aaa
popf
mov
test
cmp
sub
mov
inc
cmp
popa
lret
jno
aas
or
orb
scas
test
mov
or
xor
pop
mov
in
lods
lods
js
pushf
cmp
pop
lods
enter
shrl
fwait
dec
nop
jmp
popf
repz
pop
xchg
lea
dec
cmp
sub
bound
inc
mov
out
lahf
aas
in
pop
and
stc
push
mov
adc
sub
fmull
cmp
and
enter
jecxz
lea
xchg
out
xor
sub
mov
sub
sub
mov
adc
jg
jle
je
push
movsb
mov
push
mov
bound
xchg
dec
push
mov
popf
push
push
or
fildll
jmp
nop
int
and
jb
pushf
push
jp
pushf
sub
jmp
fwait
sbb
cli
fldcw
gs
mov
sbb
movl
test
and
decl
imulb
pop
mov
pop
and
insl
sub
aas
in
pusha
xor
and
test
ret
loope
pusha
popa
loopne
insl
xor
pusha
sbb
enter
mov
or
push
jmp
pop
shll
popf
pusha
xlat
inc
jl
sub
add
aad
repz
rolb
ror
jg
xchg
incb
mov
pop
jae
add
lock
jl
xcrypt-ofb
cmpsl
outsb
mov
loop
insb
mov
and
mov
pop
fsts
popa
mov
push
mov
mov
jne
std
es
fstps
imul
push
and
and
inc
aaa
jne
mov
repnz
xchg
inc
or
mov
push
repnz
aaa
pop
outsb
jge
dec
cmp
and
or
mov
outsl
add
pusha
stos
shl
or
inc
in
addr16
add
stos
icebp
cmpsb
sub
jo
dec
ds
push
iret
pop
movl
test
mov
rcrl
aam
xchg
nop
icebp
lret
loop
sbb
rcl
data16
push
add
push
adc
inc
insb
fwait
daa
fsubrl
out
int
xchg
fldt
push
mov
pop
or
jmp
sarl
lds
mov
xchg
mov
insl
sbb
stos
push
xchg
adc
adc
mov
jae
dec
sub
add
loop
je
adc
inc
stos
sbb
inc
mov
mov
sbb
mov
xor
lea
sbb
aaa
mov
andl
sbb
gs
int3
fbld
sub
xchg
mov
add
je
jb
and
push
shrb
pop
jno
jno
fwait
enter
insb
pop
scas
mov
and
add
inc
stc
sbb
or
push
aas
or
xor
xchg
mov
inc
repnz
roll
xor
lock
es
idiv
inc
arpl
pop
and
or
adc
stc
dec
jecxz
jae
imul
add
push
sahf
xor
pop
pop
xor
xchg
dec
ret
bound
scas
gs
xchg
sub
or
fs
sbb
fsubr
lods
lods
mov
add
shlb
mov
aam
adc
pop
pop
xor
pop
lds
mov
mull
sub
arpl
cmpsl
movsb
and
xor
inc
aam
mov
cmp
add
pop
add
pop
mov
xchg
inc
out
push
sbb
push
add
or
dec
testl
clc
icebp
or
or
data16
adc
sub
imul
lahf
stos
mov
mov
cmc
and
mov
mov
pushf
inc
and
sub
cwtl
jb
call
call
mov
cmp
xor
pop
fdivrp
xchg
int3
imul
addl
sbb
mov
es
bound
popl
sub
jecxz
adc
pop
and
adc
dec
mov
iret
pop
js
push
adcb
xchg
orb
outsl
mov
sub
sbb
xlat
mov
pusha
lcall
and
nop
mov
mov
idivb
arpl
add
jbe
in
pop
and
dec
dec
cmc
test
inc
xorl
jnp
add
lods
mov
adcb
pop
pop
inc
lods
mov
mov
repz
add
xchg
je
pop
pop
adc
jae
and
and
xorb
jge
add
adc
push
daa
cld
mov
das
mov
and
addr16
mov
cmp
dec
xchg
pop
into
bound
insb
dec
jmp
add
jnp
jb
cmp
mov
sbb
addr16
mov
jae
mov
sbb
fmul
inc
lods
aam
fldl2t
lea
popa
and
dec
insl
pop
jge
pop
repnz
sti
and
mov
scas
shll
add
or
leave
cli
pop
orb
sbb
mov
pop
mov
cmp
inc
lods
out
push
push
push
inc
fisubrl
adc
pop
fldl
in
imul
push
mov
cmc
mov
leave
adcl
stc
mov
xor
cmp
add
or
in
pop
pop
enter
sbb
xor
fnsave
mov
jecxz
cmp
test
cmpsl
fldl
push
ror
enter
mov
out
jo
mov
nop
js
sub
push
test
jo
fsub
enter
push
adc
xor
push
lock
jg
ret
out
xchg
lret
adc
std
inc
out
mov
jg
xchg
cmp
push
xchg
cs
cmp
std
movb
xchg
pop
inc
xor
subl
add
pop
pop
inc
hlt
cld
and
cmpsb
and
arpl
jbe
outsb
add
popf
push
push
dec
nop
stos
and
test
sar
xchg
adc
cld
js
mov
fisttps
mov
or
imul
dec
mov
pop
pushf
sbb
ljmpw
imulb
fidivrl
outsb
shll
lret
lds
sbb
mov
jo
mov
dec
push
lret
jl
or
lret
or
sub
rcrb
cmp
sbb
shl
inc
and
das
mov
popa
scas
fsubr
mov
pop
xor
popf
in
test
and
jne
lahf
sub
dec
jge
adc
mov
aad
jno
sbb
cmpsl
jl
int
shl
out
test
ja
jle
imul
fimuls
stos
hlt
and
daa
lcall
cmc
sbb
cmp
lret
mov
xor
loopne
cltd
lods
arpl
dec
add
xor
push
push
hlt
aas
jne
repz
jbe
cmp
clc
xchg
stos
xchg
ljmp
lahf
mov
or
mov
in
inc
push
subl
aaa
sbb
mov
nop
mov
mov
xlat
movsb
mov
xchg
or
movsl
sbb
add
xchg
or
and
pusha
pushf
cwtl
and
or
cmp
pop
mov
push
scas
pop
sub
xor
in
imul
in
mov
xlat
mov
imul
test
cmp
dec
xor
adc
push
xchg
sbb
pop
xor
inc
bound
push
dec
scas
imul
mov
lods
sbb
mov
mov
cli
cmp
lods
les
adc
push
push
test
push
push
clc
mov
push
push
mov
inc
sbb
or
jnp
mov
xchg
outsb
sub
out
jecxz
mov
add
popf
inc
sub
jns
insb
mov
push
adc
jecxz
fxch
adc
pop
jnp
push
xchg
movsb
sbb
dec
mov
movsl
lret
push
dec
cmp
ffreep
adc
mov
out
jb
stc
sub
fcoml
enter
lcall
fsubrp
call
out
inc
je
push
inc
sub
cmp
out
xchg
mov
rorl
sarl
adc
jno
xlat
shlb
outsl
xor
sub
popa
aaa
mov
cmp
hlt
dec
mov
leave
jmp
aad
int3
stos
sahf
add
adc
push
push
adc
xchg
or
add
bound
inc
loop
call
xlat
ret
or
mov
ror
imul
popf
dec
pop
adc
mov
xchg
xchg
xchg
test
jg
or
adc
xor
inc
into
pop
cli
je
ret
aaa
shlb
and
lea
cwtl
cmp
jne
sub
jnp
xor
dec
rol
popw
cmpsb
jns
inc
push
jnp
or
int3
cltd
and
mov
push
sub
add
or
ja
mov
xlat
jmp
daa
sub
push
dec
aaa
xchg
ret
iret
dec
shrl
repnz
aam
jmp
add
cld
mov
dec
movsb
jbe
in
push
push
stc
into
movl
pusha
stos
outsb
rcll
ja
add
fimuls
addr16
push
les
add
jge
test
mov
stc
fmuls
iret
movsl
and
mov
sbbl
popf
dec
jnp,pt
and
sub
shll
addr16
decl
jge
push
or
andl
stc
xchg
idivl
jne
inc
scas
aas
popa
or
or
std
adc
test
xchg
and
addr16
push
jo
cmpsb
ret
xor
cmp
mov
inc
pushf
mov
and
iret
or
sub
in
ret
xor
inc
mov
outsl
add
mov
imul
popa
sbb
fs
rol
jbe
lcall
jns
pop
iret
dec
daa
cld
mov
pop
and
and
pushl
aas
pop
xchg
loopne
sub
adc
dec
rorl
xchg
jp
shrl
push
int
repnz
fstpl
sti
sbb
jns
jge
and
push
out
mov
loopne
xchg
rolb
adc
shr
jecxz
adc
xchg
sub
lcall
sbb
push
pop
mov
addr16
mov
push
ret
mov
sahf
incl
pop
inc
cmp
xchg
cmp
popf
push
es
cmp
cmp
cmp
mov
push
rol
sbb
enter
cmp
sub
sbb
mov
std
mov
ret
inc
sub
push
popa
leave
popf
inc
ficomps
data16
cmp
stos
inc
js
pop
xchg
jnp
mov
das
mov
pop
pop
icebp
test
fiadds
inc
js
mov
es
sbb
ret
shll
mov
push
or
cmp
dec
imul
pop
sbb
pop
push
daa
repz
xchg
out
les
mov
arpl
dec
cmp
in
shrl
shlb
jmp
loope
shll
push
mov
cmpsb
in
inc
inc
dec
cmc
adc
push
cli
es
stc
dec
addb
mov
cs
jae
xor
ss
and
mov
and
ljmp
jne
stos
stc
mov
cltd
sub
addr16
fchs
dec
mov
call
or
adcb
cmp
sbb
inc
inc
or
rcll
push
sub
dec
pop
cmpsl
rorb
mov
jmp
or
or
pop
loop
imul
negl
mov
and
jg
mov
mov
movsl
arpl
cmp
scas
movsl
cmp
loope
aam
jle
popa
clc
jmp
ds
xlat
inc
mov
fld
loop
jno
dec
mov
sbb
xchg
shll
comiss
xor
fidivl
cwtl
sub
aam
inc
outsl
lock
inc
mov
adc
add
fsts
and
and
mov
pop
scas
ret
xor
add
mov
daa
int
jne
lcall
cmp
pop
jp
pop
cmpsl
icebp
xchg
loop
inc
test
inc
testb
hlt
xlat
mov
mov
ja
cld
xor
es
xchg
in
testl
lock
sbb
lods
pop
testb
ja
das
cltd
addb
jl
test
add
jne
pop
mov
call
in
out
adc
mov
pop
fsubr
scas
xchg
shll
mov
cwtl
aam
in
dec
pop
sahf
loopne
das
adc
mov
outsl
ljmp
pop
dec
dec
push
lods
lds
mov
adc
out
add
xchg
test
pop
ret
adc
lock
xchg
inc
dec
and
notl
inc
cs
insl
xor
sbb
cmpl
mov
aaa
add
jge
xor
pop
push
rcr
push
cmpsb
push
pusha
jbe
mov
xor
out
pop
lret
pusha
lret
jp
pop
lret
popf
pop
cmpsl
or
out
sub
out
and
xlat
mov
arpl
and
cmc
xchg
add
jmp
or
cmp
lea
nop
insb
loop
or
mov
int3
xchg
lea
jg
add
adc
adc
sbb
cmp
subl
mov
arpl
sbb
ljmp
sub
adc
push
push
ret
scas
sub
sar
cld
in
pop
fsubrp
and
and
nop
push
xor
icebp
pop
cmpsb
out
push
xchg
mov
mov
sbb
mov
cwtl
and
ret
mov
add
sub
out
or
sub
inc
nop
popa
dec
inc
fcomps
mov
test
frstor
pop
adc
outsb
mov
sbb
shll
gs
mov
jmp
or
jle
movb
inc
xor
mov
sti
sti
push
cld
push
shlb
adc
insl
pop
add
mov
dec
cwtl
mov
and
mov
sub
push
insl
pop
in
push
pusha
or
rcrl
or
ljmp
arpl
popf
jb
or
insb
add
rcl
insb
mov
and
pop
cs
insl
frstor
in
das
imul
xor
push
xchg
movsl
int3
aaa
pop
lock
add
or
inc
push
sub
test
in
inc
adc
lea
push
jg
out
in
mov
xchg
pop
inc
movsl
mov
jp
outsl
jo
incb
xchg
lahf
cmp
mov
jecxz
push
pop
push
stc
sbb
or
xchg
sbb
jnp
shlb
and
mov
adc
and
sahf
or
scas
pop
mov
inc
jno
add
push
and
sub
and
sahf
adcb
je
pushf
cmp
aad
lea
call
lods
fimuls
ss
andl
mov
out
xchg
adc
jbe
popa
lods
fs
loope
jmp
mov
mov
sbb
pop
push
add
jbe
in
pop
mov
enter
jecxz
inc
jb
dec
and
lods
popf
add
dec
inc
sub
jno
scas
sbb
aad
in
inc
pop
imul
mov
jnp
jb
test
fsincos
mov
xchg
sti
je
mov
scas
popf
inc
sbb
inc
xor
arpl
push
sbb
shl
jb
out
dec
lea
pop
gs
mull
stc
adc
das
fstpl
pop
jne
xchg
xor
jle
xor
xlat
xchg
aam
scas
mov
sub
lea
push
fwait
jmp
sbb
sub
inc
push
mov
pop
jecxz
pop
inc
xor
incl
lret
xchg
sbb
pop
mov
cmp
jecxz
push
jae
sbb
lret
jne
sub
popf
and
pop
ret
fs
std
arpl
or
jne
adc
and
inc
ljmp
sbb
pop
jb
mov
dec
in
pop
hlt
adc
cmp
mov
clc
ret
insl
xorb
mov
jo
ss
jg
dec
in
hlt
int3
mov
xor
jns
flds
push
jg
fildll
mov
mov
inc
xchg
es
dec
pop
cmp
lahf
add
adc
adc
comiss
jb
js
sbb
addr16
inc
stc
mov
mov
jb
fyl2x
sub
pop
call
push
and
pop
add
xlat
add
mov
push
sarb
stc
shlb
loop
adc
and
push
lock
rcl
mov
scas
scas
and
out
lock
adc
divb
add
cmp
dec
xchg
push
fdivr
xor
adc
jo
cli
cwtl
aam
cmp
sbb
mov
int
dec
cmp
lods
adc
cltd
clc
mov
scas
xchg
scas
adc
pop
adc
jnp
daa
dec
addr16
sti
jmp
sar
jae
sub
aam
and
cltd
inc
push
lret
cmp
dec
sub
inc
repz
cwtl
dec
movsl
aas
xchg
movsb
or
imul
rcl
sti
and
aaa
scas
mov
adc
sbb
mov
es
inc
jnp
pop
inc
jge
stos
mov
mov
sahf
inc
mov
inc
leave
pavgw
inc
test
pushf
or
enter
jbe
int3
dec
xchg
loopne
aam
mov
shll
jl
sbb
clc
wbinvd
add
int3
inc
cld
in
inc
jno
ljmp
cmpsb
loope
adc
xchg
sub
xor
loop
sub
addr16
stc
and
test
sahf
adc
push
mov
xchg
push
popf
mov
stc
pop
mov
fsubrs
jmp
outsl
sarb
mov
jae
stos
mov
inc
jecxz
mov
push
push
cltd
mov
mov
rorl
mov
push
dec
jmp
fs
add
mov
xor
jno
std
sub
inc
cmp
push
sbb
dec
dec
cmpsl
and
and
push
jg
adc
fwait
stos
or
dec
adc
sarb
xchg
notl
popa
pushf
pop
pop
mov
out
movsl
roll
mov
adc
imul
and
or
enter
sti
adc
xchg
cs
xchg
test
inc
mov
mov
push
mov
push
sub
push
in
mull
lcall
unpcklps
or
mov
scas
mov
mov
loope
dec
push
inc
xchg
adc
pop
jg
pop
inc
fimuls
push
pop
jmp
sbb
data16
pop
jns
inc
mov
outsl
stos
mov
pop
std
sub
cmp
cmpl
dec
cli
fcoms
inc
sub
shlb
rclb
jl
sti
mov
xchg
int3
adc
and
and
aam
and
dec
mov
xor
and
adc
aas
roll
es
mov
in
int3
xor
orb
push
push
inc
add
mov
inc
lea
jne
and
push
dec
cmp
mov
mov
sub
cmpl
sbb
mov
int3
stc
lock
xor
mov
push
cwtl
aad
adc
lret
jns
hlt
jae
fldenv
ret
pusha
xor
lcall
enter
negl
push
lret
push
jns,pt
push
orl
movsl
adc
and
push
ret
aaa
lcall
mov
shl
enter
jl
pop
jp
mov
xchg
pop
fprem1
dec
and
adc
je
test
std
xor
mov
shrb
jne
jmp
xchg
test
int
push
scas
outsl
mov
xor
fwait
insl
loopne
fimuls
pop
and
test
dec
lock
dec
popa
aam
and
cltd
fdivrs
mov
std
and
daa
fildll
fidivrs
push
cmpsl
fisubl
push
xor
pop
pop
adc
pop
xor
repz
jno
std
sub
stos
sub
std
xchg
push
jnp
std
jmp
sar
push
push
adc
add
inc
mov
xchg
aam
ljmp
pop
test
mov
js
pop
iret
test
lret
mov
add
adc
outsl
xor
int
push
adc
outsb
push
mov
sbb
loopne
dec
sub
add
add
xor
cmp
adc
xor
mov
pop
jle
dec
sbb
adc
add
inc
ret
ds
out
mov
jmp
jmp
lret
repz
mov
pop
scas
addr16
pop
ds
pop
stos
add
test
add
xchg
pop
sbb
scas
inc
push
pop
in
mov
mov
stc
xchg
xlat
cmp
sarl
data16
ss
cmp
inc
xor
pop
pop
das
outsl
out
mov
mov
cmp
push
int3
stc
push
adc
or
rorb
aas
movsb
pusha
push
in
out
mov
pop
negl
lahf
mov
add
cltd
mov
ficoms
mov
push
sahf
lahf
adc
jl
jecxz
push
ja
adc
sbb
jmp
test
and
mov
jecxz
add
mov
std
loop
loope
std
cmpsl
jecxz
cs
cmc
loop
mov
outsb
in
dec
xchg
or
pop
xchg
adc
je
inc
push
out
dec
pop
xchg
js,pt
pop
add
sub
xor
dec
jle
outsb
pop
insb
push
and
push
and
hlt
in
imul
xlat
cmp
add
sbb
mov
mov
or
mov
cwtl
adc
imul
mov
xor
jo
xor
popf
es
adc
loopne
push
rol
push
sbb
mov
inc
and
bound
cmp
cmpsl
pop
cmp
je,pt
mov
movsb
in
pop
or
incl
add
mov
or
sti
adc
add
add
sar
loop
add
add
mov
fisttps
inc
jbe
inc
lret
jmp
xor
int
adc
mov
dec
mov
push
cmp
imul
int
lahf
or
mov
push
les
xchg
inc
push
into
mov
pop
pop
xchg
push
leave
add
call
dec
push
hlt
out
outsl
sub
jmpw
inc
cmp
test
test
cmp
or
lret
adc
ss
jae
in
mov
xor
fs
xchg
jp
aam
jmp
shll
out
jne
fcmovb
fcom
pop
call
push
arpl
fisubl
std
xchg
pop
xor
popa
cmp
sub
xchg
outsb
and
add
or
hlt
cmpsb
je
mov
fdivs
pop
out
mov
setle
or
sub
into
movsb
cltd
out
push
addr16
fdivrs
lcall
nop
mov
lods
mov
adc
jecxz
xchg
and
ret
inc
xchg
test
aad
test
push
push
mov
data16
int
mov
inc
outsl
inc
outsb
leave
out
ljmp
mov
arpl
pop
jno
ja
and
sbb
push
movsb
cld
lcall
adc
mov
xor
jo
and
push
pop
mov
sbb
inc
add
and
mov
jb
pop
push
stc
test
mov
mov
and
pushf
lock
mov
mov
out
mov
dec
adc
push
mov
adc
repz
sarb
xchg
mov
xchg
xor
lods
hlt
mov
jg
cmpsb
hlt
mov
addr16
scas
jmp
lret
cli
mov
icebp
dec
scas
inc
mov
es
jecxz
adc
inc
mov
xchg
test
imul
ficomps
add
das
clc
xor
mov
and
fldenv
mov
ja
fistl
cmp
mov
scas
addb
sub
mov
ret
xor
dec
push
decl
mov
sub
mov
in
ds
cwtl
cmp
aam
jge
fisttpl
shll
sbb
adcl
sub
mov
nop
mov
rcll
mov
aaa
cmpsb
data16
mov
ret
xchg
sub
lds
stos
dec
or
mov
cmpsl
cmp
sub
shl
out
xchg
sbb
jo
enter
dec
add
add
pusha
sub
push
sarl
xchg
xor
fisttpl
call
push
xlat
push
cltd
cmp
cmpsl
xchg
push
dec
mov
xor
ret
or
repnz
sub
xchg
sbb
pop
pusha
stos
jl
dec
fisubrl
movsb
std
xor
mov
mov
nop
and
xchg
dec
ljmp
and
insb
jne
jo
and
xchg
in
inc
clc
ja
adc
into
pop
shlb
dec
push
sbb
andb
add
and
clc
jg
stos
jb
mov
mov
test
fcoml
pop
push
addr16
jae
shlb
xchg
adc
push
add
dec
and
outsl
add
inc
xchg
mov
cmp
jecxz
add
das
add
mov
lock
mov
push
ret
sub
fpatan
sahf
lea
pop
dec
jp
fs
jns
sbb
adc
ret
ret
aas
mov
imul
mov
inc
call
sbbb
nop
sbb
mov
cwtl
inc
popf
cmp
dec
data16
xchg
push
jmp
inc
divb
sub
jl
icebp
pop
push
xchg
sbb
lcall
inc
loopne
add
xchg
lcall
jp
fnsave
ja
jmp
jbe
repz
push
pop
xchg
add
test
push
es
addr16
inc
sub
sti
ds
mov
and
dec
add
and
or
jmp
aaa
std
sbb
mov
push
fimuls
ja
push
add
sbb
dec
js
or
dec
push
mov
add
inc
mov
pop
mov
out
pop
lds
int
insb
filds
jno
cmpsb
jmp
xor
sbb
ja
sbb
push
int3
mov
aam
call
enter
pop
leave
and
or
jns
repz
pop
mov
mov
fcmovnbe
ret
outsl
fnsave
les
lea
ss
popf
dec
es
pop
or
xchg
pop
push
rorb
insb
cmpsl
sbb
repz
xchg
test
mov
pop
test
sub
xchg
aad
enter
xor
in
add
push
es
pop
leave
lret
push
mov
sub
pop
mov
test
xor
imul
std
out
popw
inc
jge
pop
push
cltd
fldl
mov
push
lods
popf
or
lahf
or
popa
and
test
outsb
rclb
xchg
stos
nop
int
sarl
rcr
lcall
cmc
sarl
jge
insb
in
outsl
push
nop
lds
js
xchg
sbb
lods
or
and
mov
sbb
xchg
les
inc
insb
in
mov
in
jae
jb
stos
inc
loopne
push
das
adc
imul
arpl
mov
mov
popf
test
rcrb
cmpsl
push
pop
imull
shr
sbb
mov
hlt
lahf
packsswb
xchg
add
cmp
fimuls
rcrb
lea
push
sbb
push
mov
add
inc
scas
rcr
xor
mulb
cmpsl
lahf
mov
rolb
ret
inc
loop
mov
cld
push
orl
mov
push
stos
add
pop
add
mov
mov
sahf
mov
outsl
iret
lock
das
jo
xchg
xchg
xchg
popf
int3
lds
jnp
stc
mov
xchg
and
fs
repnz
inc
inc
xor
xor
notb
sbb
mov
xlat
faddl
jp
jno
popf
mov
jp
mov
mov
repz
adc
sti
outsb
andb
pushl
add
mov
ficompl
jne
xchg
imul
ja
popa
mov
mov
cwtl
jnp
push
mov
jg
inc
add
mov
xchg
add
xchg
push
sub
icebp
mov
xlat
in
aad
cmp
pushf
lods
or
filds
cltd
outsl
mov
pop
add
sahf
sub
pop
and
push
and
or
test
mov
pop
push
inc
daa
mov
jp
int3
in
pop
popa
int
sub
out
pushf
sbb
or
inc
sub
addb
sub
push
add
or
popf
mov
mov
adc
mov
pushf
cmovb
incl
xchg
ds
sub
and
orb
fst
sub
cmp
sub
outsb
mov
mov
mov
das
data16
and
cmp
xor
out
stc
xchg
push
pop
xchg
out
into
mov
sub
data16
das
je
das
ret
sub
dec
lea
mov
ret
pop
and
out
dec
sbb
ret
adc
or
pop
push
pop
cmp
lods
mov
ss
pop
mov
xor
push
adc
adc
test
loopne
inc
out
mov
dec
insb
shrl
or
rol
push
jbe
int3
push
jae
cld
fstl
hlt
cltd
int
mov
jg
sbb
fnstsw
mov
adc
push
shlb
mov
pop
or
enter
adc
cs
pushf
int
hlt
pop
movsl
mov
cmp
in
jns
iret
and
inc
loop
int3
xchg
jnp
loop
mov
push
sbb
push
mov
inc
ficoms
pop
popa
loop
cmpsl
inc
mov
jp
sub
shlb
gs
imul
or
andb
and
jle
xor
aad
mov
mov
shll
xchg
jecxz
and
mov
fwait
stos
int3
pop
leave
movsl
mov
adc
xchg
cmp
lret
lods
roll
fsubl
sbb
xchg
adc
inc
into
nop
push
gs
jg
icebp
dec
mov
test
ds
mov
out
addr16
addr16
popf
roll
or
hlt
jo
loop
das
xchg
iret
fs
mov
mov
xchg
scas
jae
jne
or
mov
push
push
push
out
mov
push
enter
imul
pop
and
inc
mov
dec
inc
inc
lods
cmp
les
sbb
add
and
shr
cltd
fisubs
sub
inc
das
insb
adc
leave
mov
bound
ficoms
stos
dec
mov
pushf
jbe
xlat
or
imul
xor
add
jmp
sti
mov
fwait
jle
lea
mov
pop
stos
add
out
mov
subb
xchg
jbe
scas
roll
inc
roll
inc
pusha
sahf
movsb
dec
xor
and
pop
imul
test
movsb
roll
sub
add
das
push
push
cmp
rcll
rcrb
and
push
and
jae
call
hlt
xor
in
pop
test
mov
sbb
fs
dec
sub
add
push
sbb
loop
loop
push
and
push
mov
cmpsl
stos
fcmovnu
push
push
fbld
ret
lret
sahf
es
mov
arpl
mov
and
into
push
xchg
sub
stos
pop
addr16
call
dec
dec
aad
popf
or
les
mov
ret
fdiv
xor
outsb
lcall
cwtl
lds
push
sbb
mov
pop
testl
bound
sub
pop
cmp
idivl
stos
adc
or
insl
out
insb
sbb
cwtl
and
jae
cmp
push
je
in
inc
icebp
std
pop
mov
pop
cld
fwait
mov
push
notb
mov
stc
cmc
cmp
push
push
rcr
push
pop
inc
mov
jmp
sub
inc
sbb
and
push
mov
imul
lret
dec
and
lds
sahf
pop
mov
into
mov
pop
xor
sahf
leave
int3
adc
adc
pop
and
aad
aas
xor
out
sahf
push
or
jo
hlt
imul
cmp
insb
in
inc
sbbl
ds
adc
in
stc
dec
dec
add
cmp
hlt
outsb
cmpsl
testl
sahf
xchg
mov
test
inc
movsb
jnp
mov
xchg
in
mov
loopne
fs
adc
dec
icebp
adc
push
jne
sahf
int3
rorb
jmp
movaps
sub
xor
cmp
sub
cmpsb
cmp
sbb
pop
movsl
fstl
aas
xor
pop
in
out
mov
fwait
nop
mov
add
cld
ja
push
pop
jno
xlat
lds
inc
push
cltd
mov
fimull
addr16
mov
adc
mov
jno
and
cli
mov
mov
fistpll
dec
sti
inc
dec
xchg
in
pop
fnstenv
adc
cmpsb
or
pop
out
mov
ja
dec
pslld
pop
dec
fs
add
sahf
push
jmp
rcll
mov
xchg
push
jns
ds
inc
sub
fsub
stos
aas
push
scas
dec
outsb
fldl
call
jnp
xor
pop
mov
sbb
fsubrs
dec
fwait
jle
jmp
ja
dec
ror
and
or
ret
sbb
mov
dec
ljmp
adc
inc
sbb
cmp
cmp
das
rcrl
movsb
xchg
ja
imul
pop
popa
addr16
push
outsl
aam
dec
nop
arpl
and
scas
jbe
pop
dec
aam
mov
mov
fadds
scas
mov
jns
test
decl
test
jns
xchg
cltd
cmp
int3
in
jmp
push
xchg
jge
xchg
or
scas
inc
sub
fisubs
pushf
imull
movsl
mov
out
loop
add
xchg
lea
arpl
or
pop
inc
loope
cwtl
dec
divb
pop
lcall
inc
ret
lock
and
jecxz
mov
std
dec
mov
cmp
fidivs
loop
jb
fsub
jbe
les
in
xchg
dec
jo
cmc
xchg
push
ss
pop
and
pop
daa
jno
jge
das
int
popa
repnz
mov
adc
dec
iret
mov
cmp
xchg
in
rcll
pop
popa
pop
mov
test
add
jge
jle
inc
and
add
fstpl
pop
dec
les
cwtl
imul
ljmp
out
rcr
mov
or
push
test
push
daa
shlb
add
and
mov
nop
in
ja
xchg
repz
jb
cmpsl
mov
pop
aas
cmp
fcmovne
jl
add
cli
xchg
adc
fs
inc
shll
test
pop
push
and
mov
sahf
dec
icebp
outsb
aas
lods
xchg
pop
loop
je
cli
xchg
movsl
imul
lret
mov
cmp
cmpsl
sti
sub
dec
imulb
lahf
mov
imul
inc
addr16
sbb
adc
shl
fwait
add
fcoml
imul
addr16
mov
scas
mov
aam
movsl
and
push
imulb
push
or
jp
mov
scas
mov
fcmovnb
adc
int3
jo
daa
sbb
lret
bound
aam
cmpsb
xchg
jno
fisubrl
mov
iret
cmc
mov
ds
xchg
lahf
cmpl
cld
fmuls
je
fwait
mov
xor
sub
push
das
das
adc
sbb
mov
rclb
or
fs
xlat
fcompl
sub
or
divb
xor
sbb
cltd
mov
cld
sub
fwait
adc
and
add
mov
fs
je
mov
add
mov
dec
mov
pop
add
movsb
xor
mov
mov
or
fists
inc
lods
jl
and
popf
push
push
xor
or
mov
mov
in
shll
lahf
lock
add
xchg
sbb
push
in
push
cli
sbb
cmc
rorl
xor
subb
push
ljmp
mov
sub
or
mov
xor
popa
adc
imul
sub
lods
popa
inc
int3
repnz
add
mov
add
test
daa
pop
xor
scas
sbb
test
incb
xor
ficomps
subl
testb
int
dec
sub
daa
sbb
ss
or
out
mov
ficoml
hlt
sub
mov
sub
repz
out
cmpsl
xchg
push
push
pop
repnz
dec
enter
inc
outsl
push
pmuludq
add
jb
inc
inc
bound
pop
push
sti
lahf
data16
pop
add
daa
fbstp
dec
add
test
jg
and
mov
xor
andl
push
sbb
sub
jns
shrb
inc
mov
call
jnp
repnz
loopne
lahf
and
and
pop
aam
pop
sub
adc
cmp
push
add
jl
cltd
movsb
add
cmpb
mov
and
enter
outsb
aaa
repz
aas
mov
aaa
push
pop
popf
out
inc
mov
lea
arpl
adc
push
inc
imul
sub
addr16
sub
push
jb
or
aaa
add
orl
in
xchg
xchg
push
push
sub
and
fs
mov
dec
ficoms
hlt
adc
popa
mov
into
push
push
adcb
jle
movsb
inc
sub
js
pop
and
inc
out
and
fnstcw
push
iret
push
mov
push
les
pop
dec
aas
push
adc
mov
lahf
jns
or
push
push
jne
lds
push
push
add
dec
jp
ja
outsb
sub
adc
and
es
stos
scas
in
jmp
ds
cmpsb
out
bound
xor
pop
je
mov
das
or
and
cmpxchg
in
push
mov
repnz
and
mov
mov
mov
push
dec
sahf
test
dec
enter
add
hlt
mov
aas
sub
adc
aam
or
popf
scas
sub
popa
mov
dec
or
add
clc
fwait
ss
icebp
lret
push
fistpll
fmul
push
xchg
jmp
or
push
mov
int3
fdivrp
lret
dec
inc
mov
and
ss
rolb
mov
mov
xor
fiaddl
mov
mov
cmp
xor
les
cmp
hlt
aam
aaa
addr16
in
and
cs
push
div
dec
and
out
aaa
ja
pop
jne
jnp
shll
dec
loopne
cmp
mov
inc
xchg
xchg
mov
loope
or
and
adc
jmp
lahf
sub
cli
ret
inc
addl
scas
push
icebp
in
shrl
sub
add
fcomps
popf
in
xor
sub
pop
dec
sbb
dec
jge
inc
push
dec
repz
scas
test
fwait
or
aam
cmp
jg
or
pushf
pop
pop
adcb
xlat
xchg
push
lods
jp
add
adc
pushf
cmpsb
fisubl
jmp
jnp
clc
mov
out
clc
mov
mov
xchg
pop
jmp
add
xor
jbe
insb
jae
and
sub
test
adcb
cmp
mov
into
push
negb
into
call
sub
ja
mov
daa
movl
pop
mov
je
js
shl
test
inc
fbstp
call
test
mov
dec
pop
or
mov
aad
test
mov
das
mov
test
cmpsb
test
xor
popf
mov
and
out
mov
and
mov
sub
in
aas
fwait
shrb
push
iret
inc
fdivrs
std
jecxz
loopne
push
push
cmp
sarb
incl
std
in
sbb
fisubl
dec
mov
out
mov
add
cmc
sub
in
xchg
or
mov
lcall
and
pop
ss
nop
jno
cmp
xchg
lcall
sub
and
or
fldenv
cld
xor
and
lahf
jg
mov
cmpsb
sub
insl
lret
lret
mov
mov
jg
addl
arpl
cmp
pop
cmp
xchg
mov
push
lahf
divl
sbb
inc
rorl
jae
out
dec
push
mov
orl
out
jnp
das
enter
sbb
fdivr
inc
and
jb
in
sbb
shrl
mov
or
inc
gs
ret
gs
mov
dec
pop
jne
mov
iret
jp
mov
jmp
adc
cmpsb
cmp
test
enter
mov
test
xchg
inc
pop
es
mov
ss
push
fstps
scas
adc
cmp
sub
pop
push
mov
xor
sti
xchg
nop
pop
mov
or
adc
scas
lahf
cmc
repnz
add
jge
cmp
sti
mov
jp
je
jae
fldcw
sub
or
dec
lret
pusha
push
sub
push
or
js
in
dec
mov
xchg
mov
fidivrl
jecxz
ret
cmp
aas
movsb
pusha
test
sbb
out
and
mov
cmp
adc
sub
das
aas
dec
push
sub
ficoms
scas
rorb
jbe
sti
mov
fwait
divb
and
mov
js
pop
push
xchg
adc
dec
lahf
mov
push
dec
dec
xor
dec
cmp
xchg
jbe
dec
mov
mov
sbb
jg
cmp
xor
outsb
int
pandn
aad
lock
xchg
add
int3
imul
popa
add
mov
or
mov
jb
scas
mov
jmp
ljmp
mov
repnz
or
mov
jle
les
in
pop
jbe
addr16
std
sbbb
je
xlat
mov
rclb
inc
je
std
jmp
popf
cmpl
cwtl
add
je
out
xlat
mov
lods
sbb
pop
sub
adc
in
mov
add
inc
mov
cli
xchg
mov
sbb
subb
push
xchg
shlb
sub
push
imul
scas
cli
fimull
xor
pop
push
push
jp
adc
clc
imul
in
inc
fdivl
jle
in
jb
addb
mov
test
icebp
fldpi
decb
pop
pop
in
out
inc
sbb
jmp
pop
outsb
add
xor
adcl
imul
dec
xor
add
and
aaa
jl
pop
cmpl
push
push
icebp
sub
xchg
iret
xchg
out
popf
dec
maskmovq
divl
out
xchg
test
xor
in
push
stc
sbb
std
fidivrs
in
push
pop
xchg
call
mov
adc
subl
push
and
or
inc
push
fwait
lds
xchg
pop
or
repz
jb
and
mov
div
aas
mov
roll
nop
paddq
pushf
lods
pop
push
xor
es
sub
nop
mov
fistpl
aas
lahf
mov
sbb
mov
and
inc
hlt
fstpt
adc
add
push
adc
inc
jo
out
mov
cmc
jle
add
lods
fisttpl
mov
push
rcrl
into
pop
sahf
push
add
sbb
addr16
fsubl
adcl
jmp
sti
adc
dec
fdivs
pop
jns
push
fnstsw
jp
stos
or
iret
cwtl
loopne
cli
dec
dec
pop
xor
rcrl
rorl
xor
aam
xchg
xchg
inc
sub
ficompl
pushf
sbb
rcll
mov
xor
pop
sti
inc
lcall
pop
jecxz
pop
xor
into
addr16
rcrl
jnp
lahf
xor
mov
jg
fs
push
and
lods
pop
jecxz
jbe
std
dec
mov
or
and
ret
adc
xchg
fwait
in
cmpsb
data16
xchg
mov
cmp
shl
stc
xchg
dec
and
aaa
dec
loopne
inc
addr16
jo
adc
push
lods
push
fadds
xchg
mov
pop
pop
pop
cld
xor
nop
test
jno
sbb
leave
pop
movsl
adc
cmp
mov
sbb
xchg
xchg
scas
adc
nop
cmpb
addl
or
cmp
and
or
loopne
jo
ja
push
out
mov
in
sub
jmp
loop
jbe
xchg
sbb
ja
cmpsl
cs
rcll
push
dec
sbb
icebp
pop
imul
mov
dec
push
pop
aaa
nop
subl
mov
mov
mov
scas
leave
jno
lret
jmp
es
inc
sysexit
mov
sub
cmp
xchg
pop
xchg
gs
mov
mov
cmp
sub
push
imul
jns
fdiv
adc
les
mov
sub
inc
and
and
xor
pop
xor
xlat
divl
lea
jmp
adc
imul
push
lds
mov
lods
push
or
jne
pop
push
rcr
add
lock
or
aad
mov
push
push
lea
nop
mov
or
fmull
xchg
test
adc
cmp
lods
or
push
adc
adc
lcall
repz
dec
add
outsl
orl
adc
fnstenv
add
jbe
fistpll
inc
and
icebp
push
sub
and
mov
int
jne,pt
dec
jb
pop
lods
shl
xor
mov
add
xor
pop
push
insl
cmp
lods
lcall
imul
adc
aaa
cmpl
int
test
daa
mov
fdivrs
sbb
and
lea
xor
ret
aaa
cltd
cmc
jne
dec
jae
and
popf
repnz
cmc
sbb
mov
adc
pop
cmpsl
pop
jb
ficompl
in
fs
dec
xchg
fildl
push
jg
int3
adc
in
jb
test
movl
movd
add
push
pushf
sub
and
aaa
xlat
push
dec
sub
pop
sub
sarl
mov
mov
sbb
mov
mov
mov
pop
pop
mov
or
arpl
mov
lahf
cmp
push
popf
sub
or
insl
dec
ficomps
out
mov
jl
and
xchg
cmp
mov
in
mov
dec
pop
push
popf
mov
out
add
std
or
sbb
pop
sbb
cli
test
add
pop
adc
imul
fcomps
xlat
call
out
jnp
jbe
mov
loopne
icebp
insl
rorl
je
outsl
out
cmpsl
sub
sbb
insl
xchg
xor
fnstcw
jl
inc
mov
hlt
mov
loopne
push
sub
adc
dec
or
out
into
mov
xor
push
andl
dec
insl
test
xor
push
adc
dec
xchg
in
shlb
aaa
cmp
push
xchg
xor
cltd
mov
jp
loopne
jecxz
mov
lahf
fisttpll
call
xor
mov
fsub
cmp
sbb
inc
sbb
mov
test
stos
icebp
inc
add
push
cmc
push
sbb
jno
mov
mov
fs
das
int3
incb
inc
mov
pop
add
adc
mov
add
dec
jne
mov
xor
cmp
stos
xchg
and
jbe
mov
addr16
cmc
je
sbb
aam
stos
pop
test
mov
jae
out
insb
jp
pop
xchg
sub
and
out
arpl
lods
idivb
mov
sbb
push
shlb
int3
bound
je
mov
adc
into
jmp
movsb
sbb
sbb
rorl
lcall
adc
hlt
mov
pop
dec
and
insb
adc
mov
push
and
mov
push
push
movsb
in
lea
lahf
fbstp
inc
or
mov
lea
add
pop
in
stos
std
jbe
ss
sahf
int3
test
add
rorl
loopne
xlat
shl
inc
roll
sub
mov
test
mov
addr16
sbbl
test
test
jno
mov
addr16
lock
mov
add
int
cmp
mov
ret
sbbl
pop
and
dec
add
cmc
inc
gs
mov
jle
neg
orl
cmp
pop
mov
xchg
or
pop
xchg
and
out
jo
ljmp
add
fistl
arpl
and
outsb
negb
xor
lods
mov
insl
mov
sub
xor
shrl
leave
lcall
push
test
nop
aam
sub
push
xchg
sahf
fistpll
or
ss
ljmp
and
mov
dec
jbe
out
test
cmp
gs
cmp
stos
sub
gs
push
sbb
mov
scas
arpl
fwait
std
cmp
loopne
or
jmp
adc
xor
jge
inc
inc
push
es
cmp
sbb
mov
cltd
es
adc
or
out
and
cmp
cmpsb
push
es
test
test
shlb
out
incl
jno
scas
mov
xchg
ja
cli
mov
insl
int3
cmp
add
inc
xor
push
je
adc
inc
stos
jl
and
sub
xor
loope
hlt
jecxz
jle
xor
pop
sahf
int3
mov
clc
push
imul
adc
fildll
sbbb
jp
hlt
cmpsl
adc
push
dec
out
in
fsubrs
cmpsl
xchg
cmpsl
out
aam
xchg
dec
mov
fnstcw
pop
in
rcll
xchg
int
inc
fildll
xchg
mov
mov
dec
inc
out
mov
inc
and
into
lcall
cli
cmpb
loop
sar
jle
push
add
jle
xchg
jmp
mov
lcall
xchg
add
mov
xchg
xlat
mov
test
into
test
stos
jns
fadd
repz
stos
fdivrs
js
xor
aaa
dec
xor
roll
or
pop
movsb
aad
sarb
sub
idivl
shll
dec
xchg
inc
dec
ret
push
nop
pop
pop
pop
inc
mov
mov
xchg
cmpsl
mov
push
in
test
lods
or
or
sub
pusha
movb
mov
xor
hlt
ss
add
sub
inc
rorb
pop
insb
inc
loopne
nop
add
in
into
inc
jg
lds
mov
push
stc
push
test
jns
popa
dec
sbb
fimull
mov
ljmp
xor
cwtl
fidivrs
mov
lods
mov
dec
xchg
pop
lcall
sarl
inc
bound
pop
test
std
lahf
fwait
lods
ja
data16
pop
loopne
rdmsr
mov
loopne
mov
xchg
ret
jns
gs
fs
inc
data16
xchg
cmp
rol
cmp
mov
sahf
push
dec
mov
pushf
pop
push
jae
xor
jae
xchg
mov
xchg
xor
sbb
loopne
je
jmp
mov
sbb
out
ret
daa
outsb
sbb
jno
jb
sub
add
stc
mov
popa
decl
cmpsl
cmp
jl
jb
jp
ret
lcall
insl
roll
shlb
pop
mov
bnd
xchg
dec
lods
lods
adc
inc
test
push
dec
movsl
das
jl
xchg
jecxz
loope
inc
push
add
call
dec
cs
xor
add
mov
insl
jl
dec
int
mov
test
test
movsl
jno
jbe
lods
shlb
push
sbb
jp
test
jae
aad
mov
push
into
cltd
jno
dec
dec
mulb
inc
add
daa
push
rol
dec
shrl
inc
or
mov
inc
mull
loopne
add
lock
jns
xlat
test
mov
repnz
dec
ret
mov
sbb
movsb
mov
or
ficoml
cmp
cmpsb
jmp
jne
add
add
cmc
sti
gs
int
mov
jo
mov
inc
clc
cmc
and
or
mov
repz
or
clc
mov
cld
mov
stc
inc
adc
and
lahf
inc
popf
cld
xchg
arpl
or
insb
jmp
inc
cmp
inc
mov
and
ffreep
mov
iret
lret
insl
gs
push
xchg
cltd
sbb
sbb
cmpsb
imul
xchg
xor
push
incl
jl
push
jecxz
xchg
push
push
aaa
mov
push
mov
mov
ja
sbb
jnp
aam
jp
out
xchg
and
or
imul
loop
dec
aas
and
mov
gs
and
sbbl
mov
insl
fistl
pop
jp
push
xadd
shrb
mov
push
mov
jne
lea
mov
pop
inc
pop
jno
inc
xor
sub
pop
jge
mov
adc
jl
test
jns
insb
rcr
in
sbb
sub
sbb
aas
lock
cmp
std
inc
sub
dec
or
and
jmp
mov
mov
enter
jno
pop
nop/reserved
test
loop
arpl
sbb
pop
call
dec
jae
inc
loope
mov
out
repz
sub
clc
imul
das
sub
cli
je
mov
clc
mov
xor
xchg
bound
scas
sbb
insl
hlt
xchg
decb
pushf
mov
sub
outsl
iret
push
mov
out
adc
adc
mov
push
gs
ljmp
mov
and
mov
in
ret
jmp
int3
das
in
inc
pop
enter
add
cmp
xor
jbe
xchg
fisttpll
mov
lcall
xchg
mov
cmp
jbe
loopne
and
std
push
mov
stc
lock
push
fcmovne
jp
xorb
mov
mov
or
push
mov
add
jge
sti
or
fstps
mov
lods
add
aad
fbld
lds
mov
inc
stc
jge
push
xor
mov
cmp
scas
lret
aam
fstl
jmp
adc
loope,pn
jno
and
lods
push
jno
jecxz
insb
ja
mov
jo
outsb
fmuls
mov
scas
in
mov
fisubrl
add
cmpsl
shll
mov
outsb
sbbl
popf
int
into
mov
pop
add
jp
pop
scas
push
ja
sub
xor
inc
fdivrl
cmp
fnstenv
lret
pop
inc
cmp
test
or
mov
ljmp
push
cmpsb
mov
xorl
out
subb
mov
call
addr16
push
fs
dec
pop
xor
sahf
test
jne
push
lcall
cmp
in
jbe
push
dec
fcmovnb
add
push
icebp
pop
aad
sti
pop
push
inc
ficoms
lds
ja
lret
movsl
dec
popf
sub
testb
hlt
outsb
test
sbb
fidivs
xchg
sub
pushf
ret
mov
faddp
andl
scas
inc
popa
jns
push
leave
mov
mov
push
jne
inc
test
insb
push
jp
push
and
les
popa
push
fmuls
rcrb
in
rcrb
push
xchg
rolb
or
jmp
adc
push
jmp
out
out
stc
sahf
mov
inc
je
add
clc
rcl
xor
push
mov
insl
lods
and
fsubl
mov
mov
imul
push
mov
in
call
fdivrs
adc
ds
pop
jbe
mov
cmpsl
mov
into
jns
pop
push
lcall
imul
add
fisubl
js
xlat
fwait
pusha
movsl
testl
loopne
hlt
inc
sbb
testl
enter
dec
imul
mov
cli
cmp
inc
sub
outsb
cmpsb
dec
lahf
js
ficoms
lahf
aam
jmp
cmp
xlat
mov
out
aad
loopne
enter
adc
loop
sub
loopne
sbb
xchg
mov
adc
jl
cmpsl
or
sub
je
push
fwait
push
cmc
mov
xchg
or
movsl
push
xor
clc
leave
test
clc
adc
xor
cwtl
loop
mov
mov
fisttpl
pop
mov
lret
movsl
mov
movsl
fcoms
adcb
mov
sbb
mov
jno
mov
std
lods
js
into
dec
inc
aas
xor
fsub
jle
mov
add
ja
jecxz
les
dec
lock
or
shrl
xorps
pusha
cmp
mov
add
push
dec
cmpb
cmpsb
mov
push
jb
dec
decb
sahf
mov
pop
dec
out
addb
xor
in
or
jg
push
cmpsl
lret
dec
cmc
ss
popa
popf
imul
fs
jge
inc
dec
mov
stos
cld
repz
aam
ds
or
add
jns
aas
out
jp
add
es
mov
enter
fimull
incb
gs
repz
jmp
clc
insl
aam
jecxz
aaa
or
mov
xor
movb
and
cmc
mov
lahf
dec
inc
jge
lcall
fwait
adc
push
bound
or
test
fdivr
data16
dec
out
in
pop
popf
lea
addr16
fisubs
hlt
aam
push
repnz
inc
bound
cmc
dec
adc
idivl
lcall
pop
test
xor
or
std
xor
xor
les
push
dec
adc
inc
xor
cwtl
or
lcall
dec
dec
and
inc
or
loop
push
aam
mov
dec
loope
pop
pop
orb
mov
xor
ljmp
test
inc
or
and
mov
jno
lcall
ret
mov
data16
scas
add
call
mov
jecxz
jo
out
rclb
sub
mov
js
sbb
xor
iret
inc
enter
leave
mov
xor
xor
or
pop
adc
in
aas
addr16
push
xor
push
aad
aaa
xor
es
xor
test
mov
push
scas
sar
xchg
ret
loopne
in
int
fisttpl
hlt
cs
minps
mov
and
sbb
pop
pop
xchg
arpl
jg
sub
ficomps
lret
sbb
cmp
jg
cmp
pop
jg
xor
pop
push
test
rcr
inc
dec
lock
push
icebp
cli
add
sbb
popf
aam
test
insl
xchg
enter
jg
jecxz
mov
hlt
enter
or
dec
mov
mov
sub
sbb
scas
test
or
data16
push
inc
nop
shll
sbb
jl
sub
jle
repz
xor
jo
sub
mov
ffree
xchg
inc
stos
arpl
xor
popa
fisubl
popa
jge
mov
jb
push
add
hlt
cmc
xchg
inc
push
nop
push
or
or
lds
ret
out
push
out
das
inc
sbb
adc
pop
fcmovu
insb
xchg
dec
cltd
sub
in
inc
cmpsl
or
mov
sub
adc
pushf
add
test
int
fisubrl
push
ret
andl
xor
std
shlw
adc
fidivrs
push
outsb
add
inc
aam
ret
jecxz
rcll
push
push
fwait
repnz
xor
inc
sahf
dec
fmul
adc
stc
cld
adc
or
add
cmc
or
fs
push
aam
or
fidivl
jno
icebp
out
out
ret
int3
dec
shl
xchg
dec
sub
sbb
nop
mov
jno
mov
aaa
xlat
fldl
pop
int3
mov
jnp
imul
add
movsl
gs
loop
jle
cmpsl
push
xchg
xor
aas
cmpsb
adc
fwait
dec
jo
js
outsl
into
add
repnz
mov
insl
cli
in
das
mov
pop
xchg
xchg
mov
shrl
cwtl
push
das
jae
and
js
dec
outsb
insl
xchg
add
fs
sbb
mov
xor
inc
mov
and
or
dec
rcr
popf
and
cltd
scas
add
push
jo
add
lock
inc
lcall
out
adc
push
adc
mov
rclb
cwtl
aad
xchg
cld
int3
enter
rcrl
jecxz
inc
inc
adc
icebp
pop
dec
imul
dec
push
add
cli
int
inc
adc
pop
jnp
das
mov
add
fsubrl
test
xor
dec
in
sahf
fadds
sbb
mov
test
lock
icebp
push
inc
cmp
fidivrs
sarb
into
and
cltd
sub
neg
mov
ss
cltd
push
push
outsl
aam
mov
push
sbb
mov
jl
pop
jo
out
pcmpgtd
loopne
sbb
mov
rcll
jo
xor
jne
clc
push
mov
xlat
jl
xchg
jl
incb
adc
mov
xor
jp
pop
sub
enter
lcall
add
aam
pop
jl
add
shlb
std
or
dec
adc
pushf
pop
and
jae
push
sbb
xchg
out
into
sub
outsl
xchg
and
mov
mov
lods
xchg
loopne
inc
adc
sbb
ljmp
inc
insb
add
test
dec
mov
ljmp
add
jle
ja
mov
cmp
xchg
mov
call
mov
and
js
out
pop
dec
andl
fcom
xor
cmp
inc
xor
dec
loope
lcall
sub
jg
push
mov
or
fisubrl
inc
push
mov
pop
fstpt
inc
add
subl
cmp
dec
fs
out
pop
cmc
lds
xorb
mov
xchg
xor
push
cmpsb
shrl
and
nop
mov
add
mov
notl
xchg
es
cld
clc
addr16
movsb
mov
out
cltd
test
jae
ja
push
sbb
push
and
stos
clc
mov
or
outsb
jb
dec
jo
pop
test
sahf
pop
pop
push
mov
stos
sub
lods
pop
mov
lret
mov
ret
bswap
mov
mov
aad
adc
push
mov
jns
sub
pop
dec
mov
gs
leave
fs
lock
inc
pop
div
sub
imul
mov
inc
seto
ss
dec
push
mov
xchg
pop
cmpsb
lods
mov
fdivrl
jmp
js
sub
adc
xchg
cltd
sub
and
lahf
push
mov
xchg
cmp
xor
xchg
pop
ret
and
hlt
cld
aam
adc
stos
mov
pop
icebp
lock
hlt
mov
cmp
adc
leave
adc
jle
dec
in
cmp
inc
pop
imul
or
jmp
fimuls
push
pop
cwtl
aaa
jne
stos
shl
xor
fisubl
or
push
xor
add
sbbb
fistpl
lsl
or
pop
lcall
add
sbb
int3
fiaddl
ja
jge
pop
and
arpl
jb
les
add
hlt
xchg
xor
dec
test
cmp
adc
rcr
pop
data16
jno
cmp
in
push
adc
aas
xchg
mov
fldl
and
xchg
nop
lods
cli
in
xor
and
daa
or
mov
push
negb
out
test
push
mov
nop
and
pop
test
scas
les
xchg
out
adc
fldenv
cwtl
inc
sub
addr16
sbb
popaw
xor
push
add
insb
pop
out
shlb
inc
pop
ds
xchg
lods
sbb
mov
cmp
mov
das
es
or
cmp
in
jecxz
mov
sti
andb
pop
sbb
add
sti
pop
or
shlb
mov
dec
or
inc
cltd
cwtl
xor
mov
push
push
popa
cmp
cmpb
inc
aad
sahf
shlb
ja
inc
mov
gs
sub
pusha
jns
mov
lds
daa
push
jle
fstpl
test
inc
sti
dec
xlat
cwtl
addr16
mov
sub
cmc
adc
imul
movsl
iret
lahf
leave
test
dec
xchg
fs
cmpsb
ja
sbb
lods
push
jns
dec
cmc
out
sbb
xchg
xlat
push
ss
and
enter
shr
sub
not
push
mov
add
mov
and
ss
mov
dec
push
mov
pop
in
sbb
dec
aam
out
dec
pop
sbb
notb
dec
movsl
in
lds
in
aas
cmc
sub
into
xor
or
lcall
push
lret
xchg
and
test
push
mov
jne
daa
push
push
popa
sbb
pop
jne
dec
popa
inc
pop
push
mov
push
aam
dec
outsb
xchg
jge
push
push
mov
idivl
xchg
pop
sbb
stc
loope
rclb
add
mov
jg
lods
inc
mov
cmp
mov
or
and
daa
or
mov
aam
scas
pop
popa
rolb
and
push
sbb
stc
out
shr
mov
subl
gs
in
mov
push
mov
xchg
jecxz
out
insb
in
pop
cmp
or
pop
imul
mov
pop
mov
jecxz
add
mov
out
mov
adc
sub
clc
xchg
push
popa
dec
pushl
daa
inc
in
repz
fwait
repnz
sbb
shr
outsb
arpl
dec
jbe
enter
and
and
or
andb
push
loopne
cwtl
mov
xchg
mov
dec
mov
inc
mov
or
js
fsub
lcall
jmp
cmpsl
mov
sbb
bound
and
arpl
push
mov
mov
xchg
mov
loope
mov
int
cmp
xchg
aam
pop
mov
push
in
clc
leave
inc
nopl
mov
dec
outsl
jne
cwtl
fmulp
outsb
sbb
es
movsb
ficoms
mov
and
icebp
jne
fcmovu
mov
movsl
sahf
jae
cmp
jecxz
jmp
ret
clc
and
scas
dec
stc
int
mov
lea
and
test
dec
push
xor
xchg
or
jno
or
fmulp
pop
sub
cmpsb
lock
mov
cli
sti
fst
sbb
clc
stc
cltd
in
aad
mov
test
xchg
lahf
dec
pop
pop
inc
dec
ds
arpl
mov
add
cmpsb
push
sbb
fs
popf
andl
lea
push
mov
sbb
inc
hlt
test
aad
movsl
outsb
inc
mov
xchg
mov
pop
inc
into
cmp
sbb
dec
mov
ds
loopne
add
cmp
movb
fwait
lds
in
add
test
test
hlt
adc
and
pop
pop
push
sti
pop
xor
and
scas
sbb
mov
lcall
test
je
pop
mov
fsubr
sarl
addb
test
clc
imul
xchg
adc
mov
aaa
mov
mov
jecxz
fisubl
mov
mov
scas
and
jns
sbb
pop
fidivl
dec
shlb
pushf
jle
bnd
mov
insb
or
jp
and
push
lahf
mov
ds
sti
int
rorl
sbb
jnp
ja,pt
adc
jne
ficompl
cmp
daa
dec
sbb
pop
xor
pop
mov
and
clc
push
xlat
ret
pushf
outsb
mov
imul
test
lds
inc
jl
push
cmpb
xchg
sti
and
popa
adc
cmp
sahf
xchg
or
or
loop
mov
xchg
sbb
xor
mov
or
or
push
cmp
outsl
mov
xor
fadds
pop
add
xor
jmp
adc
push
push
shl
adc
ret
jle
jo
adc
and
inc
jno
inc
loop
int3
xchg
jle
mov
cmp
out
int3
xchg
and
clc
sub
out
mov
cli
test
out
cmpsl
push
mov
fsubrl
jp
mov
sub
loopne
adc
dec
cmp
push
iret
cmp
pop
push
and
je
xchg
scas
adc
cmp
shll
cmpsl
adc
jne
ljmp
pusha
popa
in
and
jmp
mov
mov
xor
and
and
js
mov
dec
jmp
sti
mov
mull
sar
mov
xchg
test
mov
pusha
sbb
dec
adc
sti
push
call
inc
movsb
pop
aas
cmp
and
in
push
jns
fidivrl
mov
push
lret
loope
rclb
pop
repnz
mov
imul
aam
cld
or
cmp
mov
add
out
add
dec
repnz
adc
jne
stc
rcrb
loopne
addl
mov
add
movsl
loope
xchg
test
es
test
fldt
ss
lahf
adc
js
or
cmp
stos
sahf
fildl
inc
negl
idivb
adc
fs
mov
int3
cmp
cwtl
or
add
inc
or
inc
push
out
loopne
inc
popa
ret
xor
rorl
dec
mov
in
mov
data16
aad
cmp
dec
loopne
and
ror
int3
jecxz
aad
arpl
cli
xor
les
rcrb
jg
sbb
stos
cmp
jb
pop
jg
daa
lret
js
insb
pusha
add
shll
lods
in
mov
push
imul
in
add
mov
imul
add
js
jle
repz
subb
inc
pop
adc
adc
cmp
xor
cld
lods
fisubs
loope
leave
sub
or
jnp
outsb
inc
repnz
das
das
sub
inc
nop
mov
and
dec
pop
cmpsl
cmp
imul
jmp
add
push
lds
add
fsubs
cmpsb
pop
movsb
and
add
jl
mov
mov
inc
dec
push
cmp
pop
mov
dec
arpl
sub
test
jns
pushf
sbb
mov
incl
fwait
inc
les
imul
xchg
cmp
xchg
push
adc
jge
movsl
hlt
dec
test
push
mov
outsb
test
xchg
mov
popa
into
dec
jl
icebp
out
subl
lahf
pushf
push
gs
jo
mov
adc
push
call
fincstp
pop
fsubs
clc
loop
nop
push
dec
lcall
arpl
pop
lahf
cmpsb
jbe
nopl
mov
sub
cld
sub
outsl
mov
or
cwtl
ss
mov
mov
cmp
jae
add
sarb
jo
fs
adcl
jl
test
jbe
sbb
inc
enter
inc
xor
cmp
sbb
sub
pop
cs
nop
sub
pushf
sbb
mov
push
add
lret
gs
scas
pop
sbb
dec
hlt
or
scas
xchg
ss
je
push
jp
test
sti
cmp
sarl
sub
xchg
inc
sub
dec
lret
mov
mov
mov
add
adc
inc
jecxz
stos
out
rcrb
stos
jmp
mov
dec
andnps
inc
fwait
cmp
xchg
and
dec
ficompl
cmpsb
sub
out
fstpl
xchg
repz
out
stos
sahf
ret
xor
sbb
mov
insb
addr16
stos
decl
sti
sbb
popl
add
daa
mov
cmp
fcmovb
imul
pop
push
and
sbb
mov
out
mov
addl
ret
in
pop
jl
jge
sahf
cld
mov
add
jns
test
popa
mov
cltd
jg
pop
mov
jnp
movsb
in
loopne
adc
gs
sarl
mov
push
mov
shrb
lcall
sti
out
jo
or
loop
mov
rcll
xchg
mov
dec
into
das
pop
sbb
push
dec
hlt
push
mov
imul
sti
repnz
inc
mov
xor
jp
add
cmp
cmp
loope
adc
and
js
test
sar
sbb
jo
xor
div
rcr
ja
jno
aad
xchg
lret
push
ror
sub
mov
push
mov
mov
mov
inc
mov
gs
inc
in
cmp
mov
call
dec
int
push
ja
outsl
scas
mov
lock
add
jns
jmp
dec
dec
fildl
inc
nop
xor
stos
adc
pop
lret
xchg
add
dec
jo
inc
sub
adc
add
pop
inc
cld
test
aas
push
popa
sbbb
sub
test
out
int3
dec
xor
fs
pop
popa
push
cld
in
leave
fdivp
pop
pop
shrl
inc
lahf
xor
ret
jp
test
mov
cli
adc
adc
lds
sbb
adc
mov
es
push
add
jno
lcall
icebp
in
in
xor
push
add
adc
daa
ror
sysenter
pop
mov
mov
xor
sub
xor
and
call
pop
aam
push
imul
pop
lods
rolb
sub
lods
xchg
xchg
into
je
gs
mov
or
xor
mov
ffree
pop
insb
sarb
sahf
jl
and
mov
pop
pop
pop
js
mov
enter
jl
push
stos
mov
loope
jg
push
xor
pop
in
fidivrs
inc
cld
push
lods
aad
cmp
aam
aam
std
mov
stos
ret
xchg
popa
sub
cmp
fwait
adc
dec
lcall
pusha
and
shll
pop
or
jl
mov
sub
jg
stos
sbb
cltd
mov
jecxz
sti
push
arpl
pop
inc
sub
inc
aaa
push
lret
xchg
insl
shl
lods
add
mov
lea
push
mov
push
inc
sub
xor
mov
popa
push
pop
pop
insl
mov
shrl
sahf
or
je
ss
xor
flds
frstor
pop
push
stos
cmp
sbb
or
cmpsb
push
addl
cmp
shlb
sbb
lods
xchg
xor
xor
and
gs
dec
cli
je
adcb
push
fisttpl
mov
add
fwait
test
xorl
inc
dec
stc
jne
jns,pn
or
mov
icebp
bnd
push
icebp
mov
jnp
xchg
lea
sub
popf
decb
fisubrs
out
dec
int
push
jmp
or
fdiv
lods
rorl
in
icebp
xor
push
jbe
in
cs
addr16
or
jbe
gs
lods
andb
mov
and
jae
inc
sub
jmp
repz
stos
orb
xchg
sub
mul
sbb
jb
outsb
sbbb
xchg
fmull
pop
mov
loopne
push
jns
out
mov
cli
cli
sti
outsl
lret
fisubl
mov
popf
in
cmpsl
testl
inc
ljmp
leave
hlt
jecxz
das
jecxz
xor
mov
out
fdivr
fists
in
jl
lret
or
xchg
cmp
jns
lods
aaa
pop
lods
imul
repnz
sub
sbb
orb
imulb
inc
stos
or
xchg
sbbl
jne
push
add
je
pop
and
and
rclb
mov
sbb
sub
pop
popa
lret
fs
es
int3
mov
mov
inc
insb
ret
mov
fstl
imul
mov
push
test
shll
xchg
je
mov
adc
mov
xor
loopne
pop
cwtl
or
test
bound
xchg
loope
xchg
aas
mov
fsubl
and
or
and
mov
outsb
jnp
inc
inc
stos
sahf
fimuls
rcl
xor
mov
stos
popf
mov
ret
loope
lock
cmp
xchg
sbb
mov
mov
jo
jecxz
jecxz
or
or
adc
or
mov
push
shlb
addr16
insb
movsl
call
outsl
push
fwait
xchg
push
jne
xor
movsl
sbb
mov
xor
jne
pop
xor
mov
loope
in
int
scas
movsl
push
adc
ficoms
loop
push
add
insb
add
jno
and
xchg
in
cli
or
test
mov
mov
add
mov
fdivr
jge
pop
push
daa
inc
shrb
mov
xor
clc
movsl
jecxz
pop
jl
rcrb
mov
jl
add
mov
adc
inc
pop
and
mov
lahf
pop
std
stc
in
mov
imul
lret
dec
mov
cmpsl
add
std
loopne
pop
test
dec
call
fwait
mov
jbe
fmuls
xchg
mov
incl
xchg
lock
lea
xorl
mov
rorl
inc
mov
stos
push
gs
or
jnp
outsl
imul
out
cmp
test
dec
inc
call
ds
ret
negl
lods
dec
roll
add
fnstsw
inc
fs
mov
cmp
loope
cwtl
pop
pop
xor
sub
sub
jnp
loope
mov
dec
sbbl
cli
lods
mov
mov
jecxz
push
sub
loopne
or
test
sub
test
mov
sub
out
pop
push
pusha
mov
xlat
popa
xchg
ja
cmpsb
push
inc
add
fisubrl
jbe
je
call
ljmp
jne
mov
inc
cmp
sub
or
add
push
fmul
push
mov
pop
mov
cmp
cwtl
cmp
or
dec
push
push
add
and
ss
cmpl
sahf
xor
dec
es
and
xchg
cmp
int3
inc
mov
xchg
mov
mov
push
cmp
lods
imull
jmp
ret
lcall
pop
add
xchg
ds
xor
aam
xor
xchg
pop
scas
pop
sub
pop
add
push
rcll
mov
std
rcl
push
rcrb
mov
jno,pt
imul
dec
pusha
rcl
mov
ret
fimuls
jb
and
test
cmp
js
sub
add
jmp
cmpsb
insl
test
xchg
xor
push
loopne
loopne
pop
adc
sub
lea
mov
push
inc
cmpsb
dec
add
push
xchg
jl
sub
mov
jecxz
xchg
xor
cwtl
ss
scas
pop
pop
cmp
pop
ret
mov
push
xor
int
int
prefetch
xor
pushf
rorl
pushw
cmp
mov
into
data16
fxch
rcrb
xor
sti
mov
aaa
cmp
mov
ret
inc
mov
push
rorb
jo
daa
xor
lret
in
or
sbb
sub
jmp
xchg
fs
adc
adc
in
add
sub
cmp
mov
das
sub
loop
jo
pop
cwtl
adc
mov
loopne
shll
dec
dec
cmpsl
sbb
add
ret
jno
repz
pusha
xor
push
repz
lock
xchg
enter
sbb
adc
std
xchg
inc
cli
stos
pop
in
mov
sbb
aas
scas
insb
add
fadds
jle
scas
mov
pop
std
roll
push
add
sbb
pop
jmp
xor
pushf
xchg
sbb
dec
lds
adc
adc
pusha
inc
dec
out
push
inc
sub
clc
push
dec
add
out
or
ror
mov
xor
jbe
sbb
ss
enter
roll
js
jmp
testb
fisubrl
roll
mov
jp
sub
stos
movsb
xor
or
add
sbb
mov
jp
sub
inc
jp
pushf
sbb
and
or
cmp
jne
leave
shr
cmpl
jnp
popf
test
dec
mov
test
out
xchg
mov
shr
xor
movsl
test
and
mov
xchg
pop
mov
jb
xor
cmp
inc
aam
mov
out
pop
pop
jno
subb
jno
inc
dec
sbb
mov
sti
dec
sbb
cmpsl
pop
scas
insl
pop
xchg
into
dec
in
add
scas
push
inc
outsl
push
sahf
mov
dec
cmp
adc
mov
xor
dec
inc
fists
jmp
mov
dec
xchg
faddl
jmp
shrb
xchg
icebp
xor
mov
sub
add
ss
add
xlat
inc
movsb
outsl
addr16
into
lcall
mov
push
in
mov
das
pcmpgtb
xchg
jb
mov
std
fsts
sti
push
jp
xor
test
mov
dec
jnp
lret
mov
adc
call
stc
stc
hlt
mov
pop
dec
popa
xchg
out
sub
xor
mov
push
xor
fnstenv
lcall
sar
cmp
aaa
mov
jne
push
xchg
jle
addr16
lea
cld
cmova
and
mov
loop
out
imul
adc
flds
xchg
pop
or
or
js
push
jg
jne
movsb
faddl
jnp
cs
pop
or
leave
pop
pop
adc
iret
cmp
pop
adc
out
xchg
jo
hlt
les
or
xchg
or
push
or
lock
mov
sub
sub
push
ficompl
scas
ret
mov
leave
rorb
subb
push
jno
daa
xchg
sbb
xor
push
js
stos
jo
jle
nop
mov
movsb
ret
int
cwtl
icebp
push
ror
dec
popf
pop
lahf
je
and
or
sub
pop
xor
push
jge,pn
addr16
inc
push
ds
and
jns
inc
nop
in
mov
imul
insb
movsl
mov
andl
cltd
out
stos
ds
test
push
cmc
xchg
icebp
cmp
in
fwait
xor
sub
or
mov
loope
stos
repnz
test
das
imul
mov
xorb
adc
out
rorb
hlt
into
addl
and
imul
ds
jg
and
cmp
sti
or
adc
pop
in
shll
mov
mov
enter
xchg
add
adc
fidivrl
std
jne
pushf
mov
shlb
sub
push
and
jae
fildll
cld
push
fdivl
out
ret
lcall
lea
push
out
ja
xor
fiaddl
push
mov
add
add
adc
sti
jae
cmp
inc
cmp
idivb
adcl
push
inc
arpl
daa
mov
movsb
loope
xchg
add
xor
or
mov
pop
or
dec
stos
mov
mov
cwtl
pop
adc
aad
xor
xchg
jmp
pop
fsubs
jecxz
je
jae
test
sbb
jmp
cmpsb
add
pop
jns
shll
in
insb
in
arpl
or
repnz
cmp
daa
jg
repz
lods
data16
sbb
int3
inc
repnz
mov
aam
jmp
adc
orl
xchg
rcpps
mov
jl
jmp
ljmp
sub
scas
int3
cltd
xchg
das
add
mov
mov
icebp
pop
test
sarb
lcall
jns
inc
pushl
push
sbb
dec
cmp
scas
mov
aam
fisubl
adc
lcall
inc
mov
lcall
pop
icebp
imull
xlat
in
mov
lret
pop
jo
outsb
xchg
in
adcb
mov
or
xchg
dec
cmp
inc
je
xor
or
push
stos
mov
xchg
into
test
xor
scas
jl
imul
sbb
pop
jbe
fcoms
leave
sbb
daa
testl
mov
and
js
push
inc
sbb
sti
pop
movsl
sbb
lods
or
push
xchg
cmpsl
movaps
xor
cmp
adc
push
adc
jno
mov
aam
cmp
cld
cmpsb
jne
icebp
movsl
cmc
popa
cmp
lock
mov
ficoml
testb
cli
stos
cmpsb
dec
lock
and
mov
out
sbb
mov
and
mov
test
fdivrp
mov
bnd
sbb
aaa
cld
shl
pop
mov
ret
mov
sub
xor
mov
call
xchg
leave
push
push
test
addr16
push
mov
jae
mov
cmpsb
fsts
jg
sti
testl
dec
adc
push
addl
push
jns
outsl
mov
mov
cmp
vpunpcklbw
push
in
rcl
sbb
sbb
sbb
in
das
movsl
cld
insl
mov
popf
add
and
movsl
into
testl
in
imul
lock
push
lret
push
cmc
jbe
push
xor
cmc
or
out
pusha
sarb
daa
pop
gs
lret
jns
mov
inc
inc
ljmp
mov
xor
cmc
dec
jg
in
ss
inc
sbb
daa
add
movsl
pop
into
mov
fiadds
dec
ljmp
xchg
je
cmp
jp
sbb
or
into
adc
sub
in
xchg
xchg
iret
in
stos
jmp
gs
mov
mull
push
sbb
cmp
dec
xor
dec
xor
cmc
dec
cld
mov
and
sub
addw
sub
inc
push
jae
in
jno
jge
and
inc
fld
cmp
add
or
cld
outsl
jle
or
mov
adc
jecxz
jno
xor
dec
repnz
stc
data16
enter
sbb
pop
insl
neg
cwtl
icebp
pusha
xchg
mov
loop
rcll
clc
fldenv
fldenv
mull
popa
orl
out
mov
lahf
fmull
xlat
xlat
or
mov
inc
testb
jnp
and
xchg
xchg
lds
dec
and
lret
push
sub
and
pop
fwait
pop
lahf
or
shlb
or
jmp
dec
mov
xchg
xchg
int3
dec
dec
sbb
in
sahf
loope
push
mov
add
arpl
cmc
dec
sub
imul
repz
push
inc
xor
ds
mov
xor
push
pop
and
push
push
cs
push
ret
cmp
cmp
inc
and
fs
or
xchg
mov
std
cmpsb
pop
in
aam
sub
cltd
rolb
mov
out
xor
adc
in
jo
data16
dec
jle
jne
imul
sub
in
or
cmp
cwtl
in
gs
adc
fbstp
xor
out
push
in
outsb
xlat
aaa
mov
cmpsb
add
leave
and
mov
or
test
fldl
lret
sub
cmpsl
rcll
mov
jb
jno
insb
push
lahf
fidivl
cmpsl
add
pop
sbb
cmovl
test
cmp
mov
aam
scas
cmp
nop
mov
inc
xchg
adc
mov
ret
dec
test
xorl
mov
jg
cld
cmp
shl
call
jle
push
andb
test
xchg
sti
test
aam
jmp
in
js
cmp
bound
mov
popf
hlt
adc
push
push
stos
add
daa
push
cmp
inc
pop
insb
aaa
sub
loop
popf
lret
push
das
lock
add
sub
xchg
push
testb
ja
dec
call
jmp
xchg
scas
mov
adc
decb
lock
inc
sub
insb
test
in
cltd
inc
mov
popl
in
xor
fnsave
adc
fwait
pop
sbb
bound
and
jns
fcompl
sbb
in
mov
stc
xchg
fistpl
mov
ds
loop
movsl
and
gs
test
loopne
in
add
sub
xor
dec
cltd
mov
outsl
mov
mov
int
or
or
jg
movsb
lret
in
mov
cltd
adc
lea
out
dec
pop
test
dec
mov
repnz
add
adc
pop
xchg
sub
jl
cmp
mov
into
or
mov
push
pop
mov
and
lods
sbb
lods
fldl
shl
jl
pop
addl
pop
decl
cmp
xor
cli
sbb
xor
mov
out
lcall
in
lods
sbb
insl
nop
mov
ret
xchg
mov
mov
popf
stos
mov
pop
jae
insl
les
xchg
inc
mov
lds
sub
mov
xchg
stos
cld
jne
mov
sub
inc
and
mov
roll
ds
cld
adc
addl
adc
xor
std
stos
inc
pusha
xor
cmp
xchg
sbb
dec
adc
cmpsl
pop
sti
das
jo
rorb
xor
sub
lock
cmovne
mov
or
dec
popf
not
jp
mov
pop
pop
gs
lds
mov
push
addr16
xchg
cmp
and
and
test
repz
push
add
jmp
popf
sub
or
xor
test
mov
xchg
add
pushf
or
enter
inc
jmp
or
jl
dec
xor
mov
mov
imul
inc
call
inc
stc
leave
jl
adc
lods
cmpl
mov
mov
or
or
movsb
mov
cld
nop
mov
dec
addr16
mov
mov
jnp
or
pop
mov
or
mov
pop
inc
sbbl
inc
fdivrp
and
mov
aaa
cli
push
das
mov
sahf
rcll
add
ret
mov
pop
sbb
lods
mov
mov
mov
and
mull
xor
add
push
gs
ret
pop
mov
jl
push
outsl
xor
in
jae
cmpsl
or
pop
adcl
jno
shl
popa
in
stc
call
jge
mov
inc
add
add
mov
pop
push
out
push
sbb
and
push
testb
cld
cld
ret
in
dec
lahf
pop
cmp
insb
mov
jmp
ljmp
addl
jge
and
aam
ret
ljmp
xchg
mov
add
stos
adc
in
adc
push
je
into
pushf
in
push
sub
cmp
cmp
mov
push
in
dec
fbstp
add
cwtl
sub
xchg
sub
insl
scas
xor
sub
xchg
sub
pop
cmp
adc
js
xor
mov
add
sti
outsl
negb
mov
ss
xor
testl
sub
repnz
test
iret
mov
mov
test
sahf
js
and
scas
push
jp
nop
lds
outsb
mov
inc
mov
dec
mov
pop
lcall
inc
xor
adc
mov
add
fcomp
and
shll
pop
shrb
arpl
pop
imul
das
shll
sbb
test
inc
mov
inc
int3
mov
mov
xchg
add
mov
cmp
in
xor
adc
lret
jnp
xor
inc
cli
popf
push
scas
in
outsb
sub
add
imul
xor
mov
lods
pop
lock
aad
mov
sub
daa
into
movsb
fiadds
lfs
outsb
shl
cmp
fs
dec
dec
inc
mov
add
adc
rolb
mov
fimull
mov
add
sub
sarl
cmp
jp
xor
lret
xor
int3
int
dec
nop
xor
mov
sar
push
sub
aas
push
hlt
and
shlb
mov
inc
sbb
gs
stos
and
mov
and
xchg
dec
mov
addb
lock
and
xor
pop
enter
cs
cli
negb
jl
mov
mov
arpl
clc
popa
or
xchg
add
push
lahf
popa
add
jmp
adc
or
aaa
ror
push
mov
test
adc
cld
stc
xor
test
cmp
test
stc
cmpsl
push
mov
fs
mov
enter
xchg
mov
jae
fsts
xor
pop
mov
in
adc
inc
mov
pmaddwd
ret
mov
stc
scas
fwait
jecxz
jle
ss
fstp
mov
adc
int3
inc
push
lds
mov
cs
int3
push
repz
sub
loopne
iret
icebp
fisubrl
es
in
xor
shlb
sub
repz
add
scas
push
dec
mov
les
test
ret
xor
xorl
cmp
add
repnz
rorl
int
sub
fdivs
mov
shrl
jp
add
lods
fnstenv
out
push
outsl
cmc
ja
test
jmp
or
and
pop
cmp
sub
js
pop
pusha
adc
xchg
sbb
sbbb
icebp
dec
ljmp
adc
and
stos
mov
jnp
dec
cs
sahf
and
lcall
int3
dec
stos
xchg
into
mov
sbb
outsl
xor
ss
fsubrp
imul
divb
inc
enter
xchg
stos
imul
pop
pop
pop
arpl
hlt
mov
js
pop
outsl
xor
fnstsw
sub
jp
shll
dec
addr16
cmc
addr16
cmpsb
fwait
add
repz
repz
sbb
mov
or
mov
fistpll
mov
inc
mov
js
mov
shrd
mov
test
jae,pt
inc
ljmp
repz
push
out
lods
test
ret
pop
xor
das
je
cmp
ret
add
stos
movsb
shll
jg
add
xor
pop
decl
cltd
out
adc
jnp
xchg
push
les
or
mov
and
stos
sbb
cmp
popf
xor
cmpsb
sbb
popa
adc
cld
aad
popf
adc
jg
mov
pop
lock
stc
cmp
lds
xchg
mov
dec
xchg
dec
mov
das
sub
xchg
push
daa
es
jae
cmpsl
clc
adc
dec
fdivrs
scas
fimull
pop
mov
dec
in
aam
add
mov
cmp
dec
push
movsl
incl
adc
xchg
insl
xor
xchg
sarl
rorl
adc
notl
pop
call
lret
mov
cltd
mov
add
xor
mov
arpl
mov
in
mov
in
minps
ja
imul
add
mov
sub
ss
and
sub
popa
pop
add
xor
lahf
xor
stos
jne
xchg
repz
int
ljmp
cmp
xor
fistpl
or
inc
stos
cmp
arpl
aas
jg
push
lret
scas
mov
inc
mov
mov
stos
hlt
icebp
xor
rclb
cli
sbb
fsubl
jns
push
pop
sub
push
xor
or
sbb
sub
mov
mov
xor
test
xchg
mov
ret
lock
inc
add
pop
inc
mov
and
sub
push
shlb
push
push
and
lcall
pop
sti
imull
xchg
dec
movb
iret
mov
mov
xchg
in
sub
rorb
xchg
jl
dec
sbb
repz
dec
rorl
popf
mov
stc
pusha
push
or
pop
pushf
push
jb
push
adc
sbb
out
int3
sbb
in
jae
push
fmul
push
push
inc
rcrb
pop
out
addl
mov
sub
outsl
ja
jecxz
fmulp
adc
fwait
sub
scas
mov
mov
call
das
incl
lock
sbb
fcomps
inc
ficomps
ficompl
mov
adc
pop
jmp
sahf
push
shll
or
loopne
test
cmpb
push
mov
mov
aam
cmp
pushf
xlat
aam
jne
leave
out
sbb
xchg
aaa
mov
xchg
sbb
rorb
sbb
sub
pop
inc
test
or
dec
mov
and
jmp
ret
mov
add
jle
movsl
sti
sub
mov
into
adc
dec
mov
adc
lahf
sti
xor
xor
jb
sbb
add
add
movsb
incb
mov
addr16
fs
inc
pop
jnp
gs
rolb
mov
scas
jecxz
shr
aad
jge
ficompl
test
jp
mov
inc
adc
imul
add
fsubrl
nop
or
cld
rorl
flds
xor
loopne
adc
leave
roll
popf
jnp
sarl
cmpsl
inc
push
xor
cs
insl
xchg
and
mov
adc
push
aad
jbe
mov
mov
xlat
out
pop
jg
cltd
dec
cwtl
sbb
mov
enter
fcmovnbe
pop
push
push
fcomps
std
adc
dec
mov
sbb
push
rcll
sbb
pop
mov
push
pop
pop
stos
and
push
inc
push
cmpl
or
mov
push
xor
stos
push
sbb
cli
inc
les
imul
cli
mov
iret
popa
dec
in
sbb
arpl
out
mov
mov
mov
cld
jbe
outsl
cmpsb
add
or
sbb
add
clc
in
cmpsl
mov
dec
insl
jns
sub
xchg
jno
xchg
jmp
lock
or
jg
cmc
nopl
mov
add
into
cmpsb
pop
lahf
fdiv
in
xrelease
push
and
insl
js
fwait
gs
in
shlb
adc
enter
mov
cs
repnz
sub
dec
or
sub
lret
or
mov
in
es
mov
xchg
jecxz
adc
imul
into
sahf
pushf
adc
pusha
shrl
push
mov
and
push
pop
sahf
push
ss
pop
cmp
pop
pop
stos
pop
inc
mov
jl
not
sbb
dec
mov
jmp
or
data16
or
mov
mov
pop
lock
push
jp
mov
or
lds
push
imul
mov
cmpsl
loope
xchg
pop
dec
dec
pushf
dec
mov
rorb
shlb
lcall
xor
push
mov
fiaddl
adc
xchg
and
test
mov
push
inc
xchg
shrb
in
mov
or
mov
jae
cs
adc
mov
xor
mov
fiaddl
jecxz
daa
and
outsl
aad
mov
cmp
stos
mov
out
mov
xchg
pop
jl
fldt
je
push
push
cmc
pop
fidivl
mov
pop
mov
inc
aam
cwtl
xchg
std
mov
out
call
add
jnp
push
mov
sbb
mov
jno
mov
iret
call
out
jge
imul
mov
out
movsb
pop
in
jge
fcoml
cwtl
aad
test
push
dec
jae
inc
nop
fcompl
xor
xor
mov
int3
sub
mov
jge
mov
test
dec
cmp
xor
pop
push
decb
lret
stos
test
pop
mov
sub
stos
fsubrl
es
push
ret
loop
xchg
ja
ret
cltd
hlt
cli
aad
push
dec
jg
add
stos
lret
outsl
xchg
enter
or
scas
out
imul
adc
mov
sarl
xchg
push
sbb
add
xor
shlb
dec
adc
stos
fadd
lods
lret
rcrb
clc
dec
push
adc
push
and
xchg
xor
push
sub
test
or
scas
dec
inc
aas
jb
mov
lahf
mov
fwait
adc
imul
out
inc
fsubl
ret
gs
fildll
dec
mov
jmp
xchg
and
in
or
jge
mov
aad
fcompl
jns
pop
mov
xchg
push
push
imul
cmp
push
mov
xorl
inc
daa
std
dec
xchg
push
push
jnp
rol
push
ljmp
bound
mov
sub
test
stos
pushw
jmp
xchg
sbb
scas
sub
mov
call
sub
xchg
pop
mov
mov
pop
scas
ret
or
cmpsb
ja
dec
jp
das
enter
jle
cmp
cmp
sti
pop
push
mov
fs
ffreep
stc
out
mov
xchg
inc
sti
fdivs
xor
ds
sbb
movsl
arpl
inc
push
push
daa
mov
enter
test
mov
cs
es
lcall
daa
pop
test
pop
sub
out
cmp
push
mov
jb
push
xchg
lret
testl
add
mov
mov
aaa
stc
mov
popf
push
jb
scas
cmpsl
xor
scas
xor
and
in
fidivrl
aad
stos
loope
dec
adcb
or
jg
lea
fildl
int3
jl
shlb
je
arpl
iret
push
add
in
dec
jbe
insb
push
sub
les
mov
mov
push
adcb
mov
test
les
ja
call
push
push
int3
mov
fists
into
loop
jmp
fistpl
mov
push
jbe
sti
cmp
inc
cmp
xchg
lea
xor
insb
add
and
out
ret
movsb
jp
test
cmp
push
imul
outsl
lock
sbb
mov
cmp
cmpsl
lea
fucomp
jl
fsts
loopne
push
outsb
dec
std
mov
push
lahf
mov
in
cli
cwtl
incb
idiv
dec
cmc
and
loope
xor
sub
sub
add
and
clc
out
inc
sub
push
mov
mov
jecxz
sbb
ret
leave
leave
xor
mov
bound
test
and
mov
xchg
xor
add
mov
imul
pop
mov
popa
sbb
mov
faddl
mov
sub
adc
dec
and
jo
repz
enter
insb
add
or
add
pop
mov
inc
or
mov
jge
mov
popl
arpl
inc
xlat
pop
loope
pop
lcall
in
jbe
popa
dec
fld1
jg
ret
jmp
ss
imulb
cmp
xor
add
das
ljmp
daa
cmc
adc
mov
jbe
loopne
test
cmp
pop
inc
lock
outsb
clc
jg
dec
loope
or
cmc
idiv
int3
aam
pushf
sbb
xor
idiv
inc
stos
int3
addb
xor
outsb
adcl
stc
rolb
adc
in
xorb
mull
ljmp
ljmp
rclb
cmc
push
ljmp
pop
repnz
sub
sub
mulb
fistpl
andl
int3
or
rcrb
test
shll
decl
or
mov
jg
test
xchg
add
xchg
arpl
in
lahf
mov
cwtl
int3
fs
sar
xchg
xor
push
jo
xchg
aad
pop
pop
lods
nop
mov
mov
in
fwait
pop
shrb
lahf
mov
sub
sti
mov
push
jae
inc
fisubl
dec
inc
gs
mov
stos
dec
cld
cwtl
repz
mov
fnstenv
mov
and
shrb
mov
sbb
out
dec
dec
lds
jl
push
fwait
int
lahf
call
mov
or
mov
repnz
je
repnz
aam
fs
mov
std
in
dec
int3
sbb
and
hlt
jb
in
cwtl
xchg
jmp
xor
xor
fnstcw
scas
fbstp
jb
add
dec
pop
repz
push
ret
mov
pop
loop
movsl
jle
outsl
and
ffreep
orb
mov
and
jg
xchg
push
pop
enter
popf
aas
ss
scas
add
inc
std
fldcw
xchg
ja
push
fsubs
pop
aaa
call
mov
aam
test
mov
inc
and
push
aad
push
jl
mov
lods
dec
fisttpll
push
pop
mov
repz
adc
pop
mov
nop
sbb
rclb
pop
je
movlps
cwtl
loope
daa
pop
aam
hlt
jle
or
and
inc
mov
loope
mov
xchg
gs
mov
xor
in
rcrb
sbb
ljmp
cmp
mov
mov
cmp
sub
and
pop
hlt
aam
stos
arpl
into
ret
cmp
outsb
jecxz
xchg
dec
das
and
adc
push
clc
sbb
shrl
divl
mov
cmp
and
out
push
test
mov
add
jns
pop
lahf
ljmp
mov
jmp
xor
pcmpgtw
and
icebp
and
fmuls
mov
xchg
adc
aad
mov
push
fimuls
cmp
dec
aam
sub
dec
out
loope
push
mov
push
jge
xchg
add
dec
lods
or
mov
push
addl
fdivs
mov
out
dec
push
adc
mov
mov
mov
ja
mulb
insl
outsl
and
inc
rorl
mov
fistpll
ret
adc
and
jp
pop
fsubl
dec
and
cmp
out
mov
jb
lcall
or
cld
sbb
or
jle
repz
lods
fwait
js
popf
repz
inc
das
sbb
hlt
aas
scas
dec
ljmp
push
rorl
jecxz
sub
ret
jbe
push
ret
pushf
sub
adc
push
call
xchg
dec
js
hlt
fstps
inc
push
inc
inc
lret
add
bound
insb
out
or
add
sbbl
xchg
inc
pop
fisubl
in
jg
dec
fidivrs
test
shl
lcall
lret
xchg
in
jbe
jb
xorl
popf
jns
xchg
call
adc
xchg
push
rcl
pop
cs
cmp
das
sub
lods
loope
jo
push
loope
das
fstps
lods
jl
push
cmpl
add
pop
sahf
jp
std
add
add
icebp
cltd
mov
mov
lods
out
push
add
pop
dec
xor
in
sub
in
sahf
xchg
inc
rorb
xor
dec
dec
pop
lahf
mov
movsb
jge
out
or
rolb
push
popf
out
mov
iret
add
hlt
jecxz
cmpsl
adcl
fldt
in
xchg
jbe
cmp
xor
dec
jg
in
fs
mov
arpl
in
xorb
stc
sbb
gs
adc
pop
or
pop
std
mov
mov
icebp
xor
push
add
out
and
das
lahf
mov
loopne
icebp
cmp
pop
adc
push
mov
xor
insb
clc
inc
or
aad
inc
popf
jle
jae
jg
mov
or
cmc
hlt
xchg
sahf
scas
jle
inc
add
push
mov
pop
cmpsl
mov
fisttpl
stos
sub
pop
add
push
cmpsl
xchg
mov
ja
adc
imul
maskmovq
idivl
adc
jmp
out
inc
cwtl
subl
pop
dec
popf
lods
cmpsl
nop
push
in
add
loope
movsl
dec
and
mov
repnz
lretw
push
lcall
add
and
nop
mov
jmp
lahf
and
sbb
and
or
es
rcll
jp
stos
pop
add
test
sbb
jns
xor
mov
dec
inc
movsb
sbb
sub
jg
push
push
jno
mov
adcb
hlt
dec
sub
lcall
inc
mov
and
xor
in
sbb
xor
lods
or
push
dec
in
add
aad
pop
ja
sub
jg
out
cmp
rclb
and
inc
sub
mov
cmp
mov
mov
fs
add
push
shll
decl
inc
jnp
pop
aad
daa
mov
dec
push
nop
mov
cltd
mov
popf
push
sub
movl
push
pop
inc
xlat
sub
cmp
xchg
fstl
xchg
clc
fimuls
fidivrs
in
add
loop
loop
dec
shll
add
scas
xor
dec
cmpb
imull
or
dec
push
hlt
jo
call
mov
movsl
push
adc
or
subl
pmaxsw
sarl
test
je
push
shlb
popf
fucomi
scas
xchg
pop
in
sbb
imul
inc
mov
nop
cltd
xor
idivb
add
pop
testb
cmpsl
pop
dec
push
neg
and
or
outsb
mov
pop
lock
movsl
jmp
dec
int
lahf
lock
inc
cltd
inc
int3
test
adc
loop
rcll
mov
adc
push
test
addb
mov
je
addr16
sub
mov
pop
in
xchg
mov
aam
add
test
mov
outsb
xor
enter
inc
mov
sub
push
mov
add
clc
inc
ja
int3
stc
pusha
jp
pop
adc
inc
xchg
clts
int
push
popa
ja
mov
xor
fldenv
pop
xchg
int
mov
jecxz
push
rcrl
or
jmp
in
loope
xor
cmc
data16
adc
mov
jp
and
jge
mov
xchg
enter
dec
pop
push
dec
xlat
sbb
fdivs
sbb
jbe
xor
jns
fdivp
outsb
xor
mov
push
out
sub
push
pop
hlt
push
add
call
mov
add
add
mov
cwtl
repz
xor
pop
jae
xchg
int
mov
xchg
in
jle
jg
xchg
lcall
sbb
lds
inc
xchg
adc
push
loope
jbe
inc
and
add
stos
adc
and
je
xchg
sub
insl
mov
outsb
dec
jno
xor
and
aaa
test
out
cmc
rcrl
xor
xchg
icebp
jmp
push
inc
ja
and
xchg
cmpsb
mov
mov
scas
icebp
jne
pop
and
sub
bound
test
pop
pop
negb
mov
dec
lcall
cmp
vmovaps
test
outsl
ficompl
push
out
cwtl
inc
adc
scas
das
push
add
cmp
cmp
push
jp
mov
and
jae
sbbl
sbb
push
mov
loope
push
insl
mov
or
cli
push
mul
sar
ret
cs
jmp
jb
fnstcw
std
mov
xor
mov
out
cld
sti
aaa
mov
and
mulb
push
adc
inc
adc
mov
pusha
sti
in
dec
xor
in
add
mov
or
loope
push
int3
inc
xchg
jns
inc
scas
stos
nop
and
mov
dec
jmp
mov
notl
arpl
addl
aas
clc
xchg
mov
add
ljmp
fisubs
jle
hlt
nop
add
sub
movhps
ret
mov
or
jns
mov
insb
imul
mov
es
jns
ret
sbb
mov
add
test
out
rcl
out
lods
xor
inc
fnstsw
dec
pop
stc
mov
mov
mov
or
fnstcw
sub
sbbb
push
pop
cmpb
daa
mov
clc
insb
jb
jo
adc
dec
cs
ret
mov
lahf
xchg
fldl
lods
ja
cwtl
push
les
movsb
ljmp
pop
outsb
inc
nop
sbb
aas
inc
clc
cmpl
rolb
add
scas
xlat
mov
cmpsb
jnp
lahf
or
mov
add
cwtl
shr
scas
out
fists
push
in
inc
mov
ret
xlat
push
jno
xor
mov
adc
mov
mov
push
rcl
sub
sbb
nop
xor
cs
cmp
push
jp
cmp
mov
sahf
je
add
push
in
loop
mov
je
xlat
aaa
test
das
movsb
pop
imul
push
mov
mov
insl
in
rclb
movsb
mov
ds
add
mov
inc
dec
sub
push
sub
adc
mov
mov
insb
setle
cld
add
jp
into
jb
lods
add
in
push
jnp
fs
sub
fidivrs
jnp
mov
jmp
outsb
test
stos
fiadds
jo
cmp
dec
out
push
cmp
into
push
push
push
adc
mov
aad
rcrb
fldt
xchg
and
or
and
jl
das
dec
jno
call
fisttpll
sarl
cs
daa
inc
movsl
in
and
movsb
pop
rcrl
gs
pop
testl
daa
mov
in
fnstenv
dec
daa
cli
mov
push
sahf
mov
or
imul
inc
outsl
jg
or
aad
je
push
or
imul
sahf
mov
and
ja
sti
sbb
dec
mov
enter
dec
xchg
popa
xchg
popf
jge
mov
push
sub
mov
rclb
pusha
cwtl
push
mov
in
pop
push
psubusw
movsb
shll
fists
fwait
loopne
in
les
dec
xor
pop
repz
push
cmp
xorb
push
sub
jmp
adc
xor
cs
lret
push
xchg
mov
insb
adc
fildll
mov
es
mov
fwait
cmp
movsb
lds
dec
scas
add
mov
shlb
mov
scas
inc
cwtl
rcrl
jmp
enter
mov
dec
shll
push
bound
dec
lea
and
idivb
sahf
push
xor
sbb
pop
mov
xor
call
xchg
insb
sub
or
mov
out
orb
xlat
jmp
scas
int
cmpsl
dec
mov
add
jmp
fisubs
cmp
lock
stos
icebp
cwtl
adc
xor
daa
mov
mov
jge
jecxz
je
xor
jecxz
xchg
adc
push
xorl
push
xor
int
push
push
and
fnstsw
or
ss
cmpsb
and
xor
fabs
outsb
repz
sbbl
addr16
jb
out
fdivrl
nop
mov
fs
mov
fstpl
xchg
pop
js
cli
sarb
popf
jge
popl
push
les
xchg
push
jmp
jecxz
jp
test
or
bound
and
inc
mov
mov
iret
pusha
fwait
pop
mov
mov
sub
orb
repz
jg
and
push
lods
icebp
push
mov
sub
mov
pushf
inc
cltd
stos
mov
dec
loopne
add
cmpl
add
rcll
scas
daa
out
out
push
aad
mov
dec
in
out
mov
push
jl
mov
popf
imul
pop
and
cltd
mov
lcall
popf
enter
movsb
xor
sahf
push
and
ficompl
fisubrl
loope
call
xchg
repnz
add
test
int
iret
mov
cs
pop
xchg
xor
int
mov
jns
inc
mov
jnp
aaa
int3
out
push
xchg
cmpsb
cmpsb
xor
out
int
sti
xchg
pop
sarl
mov
mov
ss
movsb
ret
add
js
fistps
add
clc
xchg
nop
cli
shlb
adc
leave
mov
pop
or
fistpl
xchg
ret
call
lahf
push
repnz
xor
pop
lret
pushf
jb
sti
mov
jecxz
cmp
data16
clc
daa
fldt
push
cmpl
mov
mov
out
xchg
xchg
or
cld
push
or
outsb
pop
jo
repz
mov
enter
dec
mov
mov
xchg
xchg
cwtl
stc
pop
pop
insb
add
dec
jbe
mov
push
sub
and
aas
dec
mov
pop
pop
pop
sub
mov
pop
adc
int3
xchg
lods
popa
or
cltd
push
dec
mov
adc
cwtl
xchg
lods
mov
imul
les
out
andl
adc
mov
dec
pushf
sti
lahf
and
imul
pop
or
xor
addr16
lods
test
out
adc
jge
dec
xchg
xchg
and
inc
xchg
test
stos
data16
movsb
jae
pop
ss
or
push
mov
stos
wrmsr
adc
ja
outsb
insl
pusha
movsl
outsl
and
cmpsb
je
lock
movsl
and
mov
fidivs
test
xorb
cmpsl
xchg
sub
dec
mov
das
push
xor
stos
fidivl
pop
push
loop
push
pop
bound
sub
pushf
mov
mov
inc
stos
sbb
ljmp
inc
je
jno
mov
imul
sbb
cmp
jmp
sub
xor
push
lret
add
jo
scas
rcll
or
xchg
xor
mov
lret
ja
xchg
lea
notl
popl
xchg
inc
mov
mov
jbe
xchg
ret
aam
xchg
sbb
push
push
mov
mov
add
xor
pop
andl
pushf
inc
cmpsb
cmp
jecxz
test
stos
sbb
add
es
out
insb
mov
pusha
adc
divl
cmpsb
shrb
lock
dec
movsb
int3
cmpsb
pop
divl
jmp
mov
jne
stc
hlt
xchg
dec
sarl
ss
sbb
stc
push
cltd
test
push
jne
loop
sub
ret
dec
fimuls
inc
popf
ret
sar
sub
push
xor
and
xchg
xchg
pop
ficompl
negl
in
jle
add
movsb
out
sub
jg
and
cwtl
out
ret
into
or
pop
and
insb
push
adc
xor
sbb
cltd
push
cmp
push
mov
fdivrs
xchg
lock
cli
jno
pop
mov
add
xchg
xchg
ja
adc
arpl
cwtl
in
lods
movsl
sub
arpl
inc
xor
push
lret
xchg
jp
aas
icebp
xor
insb
jne
jo
shl
stos
mov
dec
mov
mov
mov
inc
insb
rcll
lcall
sub
mov
xchg
jne
or
mov
or
cmpsb
sub
in
cwtl
dec
sub
pop
jnp
push
sbb
xchg
mov
push
incb
mov
int
cmp
xchg
or
and
dec
into
mov
sbb
jmp
jb
mov
loopne
leave
aas
mov
pop
test
popf
pop
add
add
scas
cmc
add
cmp
bound
imul
aad
cwtl
movsb
aas
dec
repz
andb
inc
lock
sub
adc
clc
adc
push
lret
inc
out
fistl
fistps
mov
test
ret
fstl
adc
cmp
xchg
pusha
in
add
sub
insb
enter
and
out
je
cwtl
mov
rcr
bound
je
test
add
xchg
push
sub
dec
push
adc
sub
jmp
push
aad
jo
rcrb
dec
sub
lock
xchg
stos
popl
cmp
pop
inc
fldenv
iret
push
movsb
inc
imul
xorb
add
scas
jae
incb
jl
popf
add
inc
push
inc
or
aas
ds
and
shl
sti
dec
sbb
xchg
daa
cmc
and
and
sbb
push
lret
dec
cmpsb
bound
ffreep
into
inc
inc
cmp
pop
mov
sub
ret
repnz
or
xchg
sbb
mov
inc
pop
and
push
int3
mov
pop
jp
mov
mov
cmp
jo
clc
mov
push
and
push
cli
xchg
jb
cltd
xor
jae
adc
fildl
pop
pop
addb
lahf
jg
aad
orl
or
sbb
mov
aaa
or
ret
push
cmc
mov
add
ds
cmp
mov
xchg
scas
xchg
inc
mov
nop
jno
jecxz
and
push
dec
lcall
mov
pusha
mov
mov
out
push
add
sub
cmp
rep
push
fdivrl
ror
call
pop
daa
sub
roll
adc
imul
sbb
push
jae
neg
xchg
sbb
repz
inc
rorl
enter
inc
ss
add
push
std
shl
clc
data16
cmc
enter
je
or
and
lahf
lock
pusha
cmp
idivl
push
int
sbb
mov
sbb
inc
aaa
add
clc
mov
push
add
out
fdivrl
pop
les
lods
mov
and
inc
out
ret
mov
jg
test
jne
pop
fistl
cli
mov
add
push
insb
pop
inc
inc
or
aaa
mov
add
loopne
lcall
inc
and
inc
push
in
push
dec
sub
repnz
and
xor
pop
sbb
jmp
scas
rcll
mov
mov
lods
push
push
jae
loop
movsb
cli
sti
inc
ret
je
adc
jns
lock
mov
jle
jae
mov
push
mov
fistps
and
jl
jns
das
dec
insl
pop
out
int3
inc
xchg
sub
or
xorb
mov
mov
xchg
add
push
daa
inc
push
and
pop
or
movsl
sbb
popf
jbe
lret
xor
adc
addr16
addr16
cmpsb
test
push
fadds
or
stc
jmp
sub
mov
shrb
mov
dec
cmpsl
dec
pop
repnz
xchg
stos
insb
and
sbb
cmp
jge
cld
in
dec
insb
mov
shr
mov
cmp
pushf
ja
ss
xchg
xor
adc
lds
or
xchg
js
xchg
test
fucomp
dec
sarb
out
push
cmp
mov
xchg
daa
and
xchg
cmp
jp
cwtl
dec
inc
das
popa
jno
mov
out
or
ljmp
test
or
outsl
inc
mov
xor
pushf
jo
leave
cmp
push
jae
xor
aam
cmp
add
imul
std
and
sar
sbb
mov
leave
mov
push
xor
xor
sti
or
stc
dec
rol
cmp
mov
mov
ret
std
pop
in
into
jp
and
ret
push
mov
das
stos
mov
negl
pop
jns
in
pusha
popa
cmp
outsl
and
ret
stc
es
or
jb
and
pop
in
out
inc
std
inc
jecxz
aaa
ret
and
mov
test
nop
mov
mov
cltd
sub
add
sbb
out
xchg
lds
pushf
lock
pop
clc
rolb
int
cmp
repnz
int
pop
jmp
daa
xlat
addr16
lahf
rclb
mov
jle
mov
test
dec
mov
sub
adc
push
aad
cmp
lcall
dec
inc
add
cmp
xchg
xor
testb
jg
mov
sbb
add
xchg
aam
jns
sub
dec
enter
sub
test
cmp
rolb
jge
lret
jns
sahf
in
pop
test
dec
mov
xor
sbb
jp
xchg
lret
std
insl
sahf
cmp
xorl
addr16
inc
push
icebp
mov
xchg
popa
push
fs
dec
dec
sub
pop
outsb
bound
push
int3
push
int
bound
sbb
xchg
pop
negl
push
adcb
xchg
or
mov
cwtl
xchg
mov
stc
daa
adc
and
dec
arpl
lret
jo
mov
movsb
jne
int3
xor
mov
cmp
leave
out
dec
out
aad
xor
or
repnz
mov
pop
cmp
pop
mov
jno
ds
jle
add
stos
test
clc
cmp
mov
cmpsb
aad
ss
nop
xchg
pop
or
outsb
mov
and
call
sub
movsl
iret
lcall
cmovns
sti
std
sbb
xor
dec
shll
shrb
sti
lret
decl
fisttpll
jecxz
mov
int
sbbb
xor
ret
jmp
jae
fildll
xchg
cli
mov
icebp
out
std
popa
bound
in
mov
jmp
je
push
jbe
mov
sub
and
push
xlat
into
mov
push
mov
dec
mov
leave
jo
mov
scas
xchg
cmpsl
shll
lcall
xor
cli
shl
repz
fldcw
es
imull
lahf
inc
pusha
dec
clc
adc
mov
pop
cmp
xchg
loope
bound
xlat
and
leave
sbb
repz
pop
test
mov
iret
inc
sub
cmc
and
push
data16
fwait
mov
aas
lcall
push
add
pop
in
fnstcw
popf
test
fwait
and
mov
cmp
xchg
pusha
sub
mov
mov
sarl
jmp
lock
stc
dec
pop
lcall
andl
stos
mov
sbb
or
lds
outsl
jns
inc
add
aad
outsl
sub
test
out
aam
dec
mov
shr
add
push
cmp
mov
sahf
pusha
js
cmp
mov
pop
mov
ljmp
add
popf
push
cli
sub
push
out
shlb
jge
mov
and
push
addb
add
mov
fwait
popa
sbb
jns
sub
push
aaa
or
inc
int
pop
into
je
stc
inc
jmp
lds
js
insl
into
cmp
test
add
add
fcomp
lods
aam
jl
lock
ja
mov
enter
xchg
jnp
push
and
sub
divb
fmuls
dec
hlt
cmp
push
popf
lea
test
sarb
inc
sbb
int
mov
adc
mov
dec
negb
xor
hlt
xchg
add
dec
test
push
xchg
imul
cmp
jne
mov
movsl
and
mov
sbb
ljmp
sub
bound
mov
mov
mov
inc
mov
pop
pushf
mov
or
xchg
lea
mov
adc
or
cmp
out
push
push
movsl
sub
movzwl
jo
lea
pop
cmp
add
xor
jmp
loopne
in
add
cmpsl
ret
ret
daa
push
mov
jle
mov
adc
enter
or
jmp
pop
repnz
lods
ja
js
xorb
and
pop
or
dec
sbb
repnz
add
inc
aas
add
outsl
mov
dec
jecxz
les
inc
sahf
pop
sub
shlb
sub
sbbb
pop
cmp
gs
xchg
in
adc
pop
call
mov
sbb
mov
adc
dec
out
and
mov
sub
stos
jo
pushf
and
mov
sub
aas
adc
inc
data16
scas
les
pop
or
push
lea
push
call
sbb
adc
pop
mov
adc
adc
and
ljmp
xchg
or
dec
push
jmp
push
jp
xorl
data16
sbb
mov
add
outsl
lea
es
push
xchg
sub
cmpsb
xchg
scas
hlt
inc
xor
push
jg
sub
lret
cmpsl
inc
rcrl
sub
and
in
inc
dec
lcall
pop
cs
sbb
add
push
icebp
xor
add
jl
mov
jp
mov
pushf
and
fcoms
mov
sbbb
xlat
ja
arpl
nop
arpl
xlat
sbbl
rcrb
or
mov
sbb
adc
xchg
int
pop
pop
loopne
mov
jnp
aad
pusha
jbe
push
and
lods
aaa
sbb
ss
bound
repnz
popf
aas
cmp
stc
xor
fidivrl
and
sti
jnp
div
mov
jo
enter
dec
cld
loope
pop
sbb
test
fistpl
xor
xchg
lods
negb
nop
jb
mov
mul
jne
sysret
sbb
push
cmp
das
pop
sub
push
lods
push
jle
push
fs
test
and
in
sub
ja
or
cmc
out
rcrl
sbb
enter
fdivl
iret
cmp
test
jg
jo
ja
pop
and
daa
mov
adc
xchg
in
xor
imul
dec
hlt
data16
ljmp
jge
sub
jp
xchg
jns
ljmp
sbb
negb
pop
mov
movsb
ss
sbb
xchg
pop
fs
ljmp
ret
pusha
rcrl
pop
mov
js
sti
insb
cmp
sbbb
sbb
cmp
pop
lgs
xor
mov
leave
pop
sub
insb
in
std
cltd
cmpsl
scas
inc
aaa
jle
xor
mov
mov
dec
jmp
and
inc
into
lret
mov
mov
xchg
fs
test
call
ds
dec
cmp
and
fisubrs
jg
in
ss
push
cmpsl
mov
add
inc
sbb
inc
stos
xchg
cld
lods
ja
lahf
jbe
jmp
aaa
xchg
jbe
xor
fcoms
ret
sbb
and
in
xor
jno
movsl
inc
xor
mov
je
jno
mov
inc
jmp
add
add
mov
mov
and
add
mov
xor
push
mov
dec
add
push
xor
pop
mov
cmc
pop
sti
fadd
jbe
rcrb
scas
mov
sub
pop
shlb
sub
adc
test
xchg
dec
or
push
cmpsb
es
out
popf
xchg
mov
adc
push
lahf
cmc
xchg
push
dec
adc
test
xchg
add
cs
push
lods
addr16
pop
push
stc
or
je
mov
aad
movsb
stos
daa
fnstsw
pop
rorb
repnz
mov
dec
pushf
jg
fcoms
mov
fcmovnb
addl
ja
popl
and
pop
loop
aad
bound
cli
test
bound
dec
pop
or
add
popa
push
or
add
lds
fsubs
bnd
lahf
bound
jb
mov
dec
stos
addl
mov
cmp
pop
inc
mov
sub
rcrb
pushf
fwait
add
inc
cwtl
add
adc
out
insb
fiaddl
nop
js
sbb
sub
loop
aad
dec
in
cmpsl
cld
cmpsb
mov
xor
imul
popa
popf
out
stc
or
data16
das
inc
jno
lods
xchg
pop
es
xlat
fsubr
dec
inc
xchg
fsts
push
fsub
mov
out
pushf
lcall
pop
ret
out
stc
push
imul
mov
xchg
loop
pop
mov
xor
movsl
int
cmpl
and
dec
and
mov
fadd
fcomi
mov
dec
and
jo
push
push
xchg
lds
fdivl
jnp
push
mov
add
cmp
js
mov
sub
push
inc
dec
dec
enter
stos
in
jne
xchg
ret
xor
jle
iret
subl
xlat
aam
or
and
stos
pop
and
andl
subl
mov
fsts
jmp
jo
push
sti
sbb
inc
sahf
cwtl
cmp
xor
inc
lds
imul
pop
loopne,pt
loop
fwait
xchg
pop
jno
lahf
mov
ds
xchg
test
xor
dec
xor
addr16
popf
movsb
data16
roll
out
bound
pop
rcrl
jl
shll
add
jno
bound
les
xor
sub
add
xor
ret
cwtl
xor
jp
fwait
neg
sahf
add
cmp
idivl
adc
fucomi
movsb
jae
lods
push
icebp
das
test
jg
mov
mov
dec
xchg
mov
int3
mov
push
shlb
inc
xchg
mov
cmpsb
fcomp
outsl
lret
cwtl
cmp
sub
dec
addr16
mov
adc
sbb
xchg
nop
mov
movsb
cs
jmp
cmp
jb
lds
enter
mov
fwait
cmp
mov
xchg
mov
jmp
mov
push
sbb
aaa
test
popa
dec
xchg
jo
rolb
xor
push
push
sbb
fsubs
fmul
push
cmp
add
mov
jo
push
je
addr16
adc
adc
repz
data16
lret
out
sti
aam
lods
add
jl
xchg
fbstp
mov
mov
and
js
jne
ljmp
addr16
int3
jnp
clc
ss
push
push
cmp
rorl
arpl
mov
inc
jle
dec
out
das
mov
jmp
out
push
add
inc
xchg
in
pop
dec
dec
adc
pop
xchg
jle
test
mov
or
mov
and
imul
out
push
adc
daa
stos
iret
adc
mov
add
cmp
repz
xabort
in
sahf
mulb
test
test
dec
lds
jecxz
fst
mov
or
rcrb
sbb
mov
sub
shll
dec
insb
enter
in
xlat
sub
sub
jge
cmp
outsl
test
inc
xor
ljmp
xlat
cmp
outsb
and
popa
into
test
fnstcw
or
dec
fisubl
addr16
mov
fdivr
cmpsl
mov
dec
and
sti
mov
icebp
inc
adc
pop
mov
dec
inc
fstpl
xlat
cld
ja
fs
mov
jmp
jb
cmp
add
push
cmp
jge
rcll
mov
or
movsl
scas
inc
mov
dec
fld
jl
mov
push
repnz
xorb
push
sbb
in
jno
add
add
mov
out
adc
cmp
sub
shll
pusha
test
ret
cltd
mov
dec
out
sbb
lods
sbb
mov
pop
jb
cmc
icebp
sbb
bound
loop
loopne
je
loop
and
rcrl
push
and
add
fmulp
xchg
adc
ret
adc
lret
test
sbb
jne
sbb
adc
xor
pop
cmp
push
outsl
jl
dec
or
add
lock
movsl
sub
mov
add
jno
mov
jns
mov
sub
fsubrs
xor
xrelease
fwait
mov
faddp
adc
cmp
es
fwait
sbb
xor
dec
hlt
js
push
hlt
jmp
in
repnz
stos
inc
pop
jo
inc
inc
mov
push
repz
out
in
adc
pop
lcall
icebp
sahf
mov
adc
sbb
int
push
mov
mov
repnz
insb
repz
mov
les
ss
pop
pop
push
add
leave
or
inc
xchg
fstpl
lcall
lcall
jnp
mov
jnp
sahf
sbb
add
dec
cld
mov
cmp
fsts
lods
inc
sbb
call
dec
lods
or
popf
lcall
sbb
scas
sbb
cs
inc
cmp
cmp
sarb
into
or
scas
ljmp
sbb
movsl
ljmp
cmp
subl
pop
adc
pop
jno
iret
dec
push
inc
jg
sahf
pop
dec
cmpsl
mov
jge
mov
clc
mov
es
adc
jnp
dec
insb
xorb
jo
push
dec
repz
mov
sub
aad
push
push
rcrl
movsb
scas
adc
adc
inc
xor
mov
or
mov
das
mov
ja
dec
scas
jmp
push
xor
int
mov
je
dec
dec
insb
pop
or
xor
dec
add
sub
icebp
cwtl
sub
jne
mov
iret
push
call
dec
fbld
jo
mov
pop
cwtl
mov
jns
aam
fldl2e
repnz
fsubrl
cs
push
xchg
push
jg
je
sub
outsl
movntps
cmp
mov
and
jne
sub
std
or
mov
xchg
mov
imul
dec
sub
push
repz
movsb
adc
imul
out
xchg
mov
jnp
leave
xchg
int3
rclb
mov
push
mov
lcall
pop
jge
cmp
dec
ret
xchg
jp
pop
shlb
mov
ss
xor
adc
loope
out
xlat
cmpsl
leave
ljmp
mov
outsl
mov
inc
mov
cmp
popf
jbe
insb
mov
cs
sbb
sbb
mov
insl
scas
pop
in
in
gs
jle
sbb
nop
inc
out
adc
lret
roll
adcl
movsb
iret
popa
push
and
bound
lahf
xor
and
pusha
inc
add
adc
stos
inc
vmovups
nop/reserved
fistpll
rorl
inc
dec
ss
sbb
dec
adc
push
daa
mov
lret
fwait
shrl
ret
or
out
mov
popa
pop
fists
rcrl
push
sbb
nop
fiadds
clc
dec
test
mov
pop
sub
adc
call
lahf
pop
ds
cmp
dec
jno
fwait
sub
adc
cmc
popf
mov
xor
cli
inc
xchg
fsubr
xchg
push
xorl
lock
sbb
dec
cmpsb
aaa
jge
ss
imul
push
int
push
pop
aas
jmp
xchg
adc
fiadds
arpl
sbb
and
fistps
fisttpll
pop
sbb
cmp
out
dec
inc
sbb
outsb
lock
or
mov
mov
sahf
arpl
jge
inc
aas
divb
repz
imul
and
pop
pop
pop
enter
sahf
loopne
cltd
inc
inc
cmp
inc
aas
xchg
mov
imul
xchg
leave
dec
pushf
pop
push
movsl
leave
pop
lea
mov
sarb
pop
or
adcb
fdivrl
adc
xor
sahf
in
add
stos
sbb
cmc
xor
adc
jbe
dec
xchg
xchg
push
xchg
dec
call
sti
pop
popa
cmc
mov
int3
inc
add
lea
inc
push
mov
or
out
mov
scas
push
xor
lods
mov
sarb
xchg
enter
jmp
push
adc
lcall
sbb
dec
stc
jne
adc
xor
into
in
scas
lods
mov
fwait
scas
in
adc
je
xchg
cmp
or
lea
xlat
dec
inc
sub
je
enter
addr16
pop
shrl
clc
add
xchg
insl
cmp
mov
pop
ljmp
ret
mov
mov
les
into
shr
rclb
xchg
mov
pop
xlat
add
adc
mov
mov
pushf
addr16
insl
adc
inc
push
dec
aad
lds
dec
divb
call
or
inc
addr16
arpl
int3
scas
icebp
jmp
ror
in
mov
fwait
jp
call
xchg
jle
mov
outsb
fs
inc
pop
fs
clc
add
adc
rcl
loop
adc
or
fstl
inc
cltd
shrb
jp
sti
aad
int
aad
inc
lret
dec
lods
pop
xor
pop
push
adc
fdivp
push
pop
fidivl
adc
mov
jp
lret
lret
int3
xor
mov
mov
sahf
cltd
sbb
mov
shrb
sti
das
jp
iret
ljmp
mov
in
addr16
aam
mov
xchg
jmp
movsl
mov
and
and
pop
scas
adc
jmp
aad
ds
adc
in
and
cmp
mov
inc
stos
data16
jp
cmp
icebp
inc
mov
lret
iret
imul
out
inc
int
cld
lret
jg
and
mov
jb
popf
or
mov
pop
dec
dec
into
xor
cmp
cwtl
cltd
mov
in
mov
fnstcw
ret
jo
out
inc
cmp
movsb
out
dec
xor
stos
movb
and
pop
icebp
rcll
and
insl
sub
into
mov
aaa
xchg
sahf
mov
mov
sub
or
push
ljmp
mov
adc
out
test
and
in
add
scas
or
sub
pop
adc
cmp
add
mov
pop
lret
add
cwtl
dec
mov
js
jb
cmp
dec
leave
aam
shl
int
out
out
je
dec
mov
imul
and
push
int
pop
imul
mov
out
or
iret
dec
or
lret
and
push
leave
inc
ficompl
push
pop
jmp
scas
inc
dec
push
mov
push
mov
xchg
xlat
pop
mov
loope
shll
pop
and
or
flds
fcmovnb
mov
test
xchg
push
dec
out
fdivs
loopne
outsl
out
jl
bound
vpavgw
fsubrs
mov
push
jbe
repnz
mov
jae
jns
cmpl
enter
push
movsb
idivb
insb
mov
pop
movsb
jmp
out
mov
jae
xchg
mov
iret
lock
loop
gs
xlat
insl
jae
sub
repnz
sbb
mov
push
sbb
shll
subb
sahf
clc
fidivrl
outsb
push
fistps
jnp
cmp
stos
inc
add
push
mov
xor
add
dec
push
jae
outsl
faddl
movsl
insb
arpl
add
and
inc
mov
adc
add
xchg
stos
test
jne
out
popa
mov
sbb
cs
push
add
and
dec
cs
mov
subl
outsb
loop
aaa
gs
rol
or
or
fwait
out
jp
pmulhuw
push
jmp
pop
inc
iret
mov
dec
adc
cli
xchg
jp
push
cmp
ds
inc
cmp
cmp
or
dec
pop
lahf
lds
mov
add
loop
into
push
dec
js
adc
adc
jbe
enter
jnp
cs
xor
or
outsb
jecxz
cmp
hlt
ss
divl
enter
addl
dec
or
adc
sbb
cld
xchg
sbbb
jnp
jecxz
into
sbb
sub
incl
addr16
ret
add
xor
or
mov
in
pop
xchg
ror
cmpb
ficoml
test
dec
push
std
or
lea
jecxz
inc
or
scas
xor
push
or
add
es
mov
sbbb
sub
ja
and
and
iret
sti
push
push
mov
add
cmp
stc
jl
in
shrb
xor
loopne
jmp
pusha
inc
adc
sub
add
mov
iret
cmp
push
scas
jno
sbb
xchg
ret
pop
inc
pop
jge
push
rorl
rcl
xchg
mov
bound
int3
pusha
add
jge
nop
pop
icebp
pushl
mov
cmpsl
dec
adc
sbb
push
data16
stos
mov
adc
rorl
inc
mov
mov
jle
or
mov
cmp
fstl
xlat
push
push
dec
xchg
fldcw
call
loope
add
jnp
push
stos
push
jae
push
sti
pusha
xchg
lahf
mov
jb
sub
lods
popa
lea
repz
pop
mov
imul
fsts
jl
out
push
lret
mov
fnstenv
shrl
out
test
stc
ret
cwtl
pop
xchg
fildl
push
sub
jns
je
pop
aas
sub
test
add
out
jno
cwtl
lea
pop
inc
inc
and
pop
cmpsl
xchg
xchg
popa
loope
jns
add
lcall
mov
pop
sti
daa
fs
xor
mov
inc
rorl
xor
cli
sbb
movsb
rorb
xor
jnp
xchg
jbe
xchg
fcmove
pop
xchg
jnp
call
out
xor
movsb
jecxz
mov
aaa
enter
cmpsl
mov
mov
out
inc
jge
dec
test
add
fsubrl
dec
inc
ljmp
enter
cld
in
int3
mov
and
add
ja
and
push
int3
push
dec
shlb
cld
inc
xchg
pop
sub
out
dec
mov
cmp
dec
sbb
lret
adc
xchg
outsb
cmpsl
mov
test
lret
loop
pop
loopne
inc
jns
jg
lods
cli
lea
dec
pop
insb
gs
mov
adc
jle
inc
out
data16
enter
fldcw
mov
pop
add
call
and
jmp
clc
push
lods
ja
push
orl
push
cli
in
inc
mov
mov
aaa
xchg
les
ror
sahf
jbe
mov
popa
sub
lods
dec
add
insl
inc
mov
aam
jmp
sti
mov
fwait
dec
push
fcmovu
adc
ret
inc
aas
cli
cmc
fisubs
jmp
dec
mov
xchg
popf
jbe,pn
sub
cmpl
adc
inc
arpl
getsec
clc
cmp
jo
repnz
repz
je
call
mov
arpl
push
testl
xchg
repnz
sbb
mov
lds
sub
dec
cmp
std
inc
movsb
fisubl
into
aas
xorl
xor
jae
rolb
aas
stc
out
je
xlat
paddw
rol
mov
and
test
pusha
je
mov
and
test
push
clc
dec
shll
test
stos
out
test
sbb
inc
lea
jns
jge
rclb
fisubl
add
ljmp
xor
je
mov
orb
cld
stos
adc
leave
dec
icebp
mov
cmpsl
sbb
loop
in
or
add
mov
jae
dec
js
data16
shlb
lret
xchg
aad
sbb
scas
ja
mov
js
add
sub
adc
incb
mov
xor
clc
mov
fstpl
es
lods
inc
std
push
roll
jl
jbe
pop
hlt
test
icebp
lods
jb
or
jnp
push
pop
xchg
lret
sti
popa
add
in
cmc
push
jae
test
sub
inc
adc
fsts
addb
movsl
or
inc
notb
imul
cs
fidivs
lahf
lret
out
mov
xchg
cmpsb
cmpsl
mov
and
adc
loopne
stos
sbb
scas
jns
jnp
stos
mov
mov
popf
imul
sub
gs
fsubrp
dec
sbb
pop
sub
push
mov
nop
in
sub
sbb
popf
add
and
xor
push
es
les
mov
icebp
jge
cmp
xchg
movsb
or
push
ja
sub
imul
ljmp
add
pop
and
lds
shl
call
cmc
sub
loopne
cld
out
jp
xchg
mov
stc
push
and
movsl
push
push
inc
call
cltd
loopne
jns
call
mov
and
push
dec
xor
lret
adc
sub
fwait
lret
fnstcw
clc
pop
scas
mov
cmc
lcall
push
xor
pop
adc
mov
or
adc
push
loop
stos
mov
jo
repz
in
mov
sbb
repz
mov
mov
push
xor
sbb
mov
out
dec
icebp
fxch
stos
test
int3
scas
jo
adc
push
faddl
repz
sbb
jge
in
sub
nop
bound
cwtl
notl
mov
sub
mov
jae
push
pop
sub
pusha
loopne
adc
mov
jne
pushf
xchg
pop
sbb
sub
addr16
notb
pop
loopne
adcb
fs
gs
push
sti
inc
mov
data16
fs
lret
mov
shll
and
cmpsl
hlt
cmc
call
stos
dec
jmp
push
jl
push
or
data16
call
mov
jl
in
pusha
rorl
jp
mov
mov
and
stc
xchg
sti
mov
or
pop
test
and
lea
inc
iret
outsl
jp
adc
popa
mov
mov
inc
add
fildl
sub
dec
xchg
icebp
ret
into
and
les
hlt
xorl
push
scas
dec
mov
pop
fcomps
hlt
ret
outsl
les
lcall
jle
push
cmpsl
xchg
jno
adc
lods
loope
fsubrs
jne
shlb
or
aas
push
cmp
lret
and
xor
mov
xorb
sub
mov
xchg
push
mov
xchg
cli
rorb
cmpsb
scas
popa
jge
sub
leave
cltd
cmp
loopne
fcoms
jo
or
inc
jge
mov
cmpsl
adc
fs
add
mov
or
add
lcall
sti
cli
sub
mov
js
rcll
ja
mov
sub
mov
mov
lea
jge
or
sbb
mov
pop
mov
mov
out
sbb
push
adc
sbb
pop
cs
dec
je
add
mov
imul
test
je
mov
fists
sbb
push
sbb
and
cmpsl
loopne
add
add
out
cwtl
inc
lea
sub
mov
scas
lea
iret
add
mov
mov
pusha
cmp
adc
repz
or
sub
xor
xor
repz
mov
out
mov
int
insl
push
popa
or
pop
mov
jle
inc
push
fwait
adc
and
lds
test
leave
cmp
dec
mov
push
jnp
lret
sti
adc
sub
loop
in
rcr
cltd
mov
xor
or
or
cmp
ja
mov
icebp
mov
out
movsl
cmp
jbe
sub
adc
enter
or
lock
int3
cltd
sbb
sarb
ljmp
enter
or
sbb
jnp
outsl
add
outsl
sbb
sub
jbe
jmp
rcll
sbb
call
mov
iret
cmp
out
jnp
mov
push
imul
stos
mov
add
lods
inc
out
addr16
and
int3
xor
or
push
test
cmpsb
add
je
mov
insb
addr16
push
in
adc
mov
scas
fwait
mov
pop
decb
cmp
ljmp
lahf
imul
iret
je
mov
or
push
cmp
sub
fnstcw
test
xorl
ret
ret
dec
adc
aas
mov
xchg
xor
cmp
pop
stos
mov
shrl
shll
sbb
mov
add
sbb
repnz
lret
mov
lds
xchg
cmc
data16
out
js
loopne
xor
rcl
das
dec
fistpl
out
orl
push
out
dec
sbb
sbb
sub
movntq
out
or
xor
and
jno
mov
sbb
in
insl
loope
ljmp
pop
scas
inc
adc
mov
mov
dec
sbb
inc
push
cltd
push
dec
lret
sbb
inc
sbb
xor
or
ja
or
lcall
in
xchg
fcompl
push
aam
xchg
sub
cltd
mov
mov
push
les
xor
shl
push
ja
jne
mov
ja
cmp
xchg
sub
sbb
cmp
in
sub
cmc
imul
xchg
mov
dec
mov
cmp
addr16
mov
jns
lret
add
loope
jmp
mov
negl
mov
pop
out
adc
pop
in
cld
sbb
sbb
xchg
sub
pop
mov
faddp
cs
lea
loopne
lret
test
sbb
jne
mov
pop
pop
out
cmp
dec
test
mov
int
cmc
mov
inc
inc
and
mov
xchg
jbe
dec
les
or
mov
jge
mov
test
mov
cmp
ret
fisttpll
data16
adc
iret
ret
cwtl
flds
xchg
mov
pop
add
rorl
push
cmc
jge
shlb
hlt
add
lcall
loopne
mov
xor
xchg
mov
fidivrs
mov
in
testl
mov
test
sbbl
sbb
sub
dec
xchg
dec
stc
cwtl
cmpsb
mov
inc
js
sub
arpl
adc
aaa
mov
movl
xorl
ljmp
add
pop
xlat
addr16
int
inc
adcb
shrl
mov
aas
sbb
add
shrl
mov
movl
add
std
inc
popf
inc
mov
adc
icebp
mov
pop
push
in
dec
jb
or
xchg
mov
dec
dec
lahf
add
xchg
xor
pop
or
push
and
push
jge
insl
ss
add
xchg
sbb
add
jo
jo
lock
mov
mov
mov
sbb
lea
jge
out
int3
popa
adc
cmp
pusha
and
push
rorl
pop
es
cs
hlt
or
jp
scas
push
cmpsb
lods
fmuls
sbb
fdiv
add
rolb
fwait
sub
fildl
icebp
adc
shll
or
jno
sub
mov
pusha
or
bound
inc
inc
add
fcmovnu
cli
or
mov
hlt
dec
ficomps
jb
cmp
das
mov
add
iret
xor
out
aaa
cltd
rcl
idivb
sub
xchg
mov
out
jne
jecxz
mov
jle
cmp
in
push
jp
notl
mov
inc
mov
ljmp
jp
jp
xchg
int
ljmp
shlb
mov
sbb
call
shrb
cwtl
shrl
xchg
jns
or
fcompl
imul
mov
ret
pop
loop
mov
sahf
xchg
jae
adc
popa
sahf
adc
jo
gs
push
dec
jnp
ds
mov
aam
icebp
sub
add
mov
ss
sub
add
ja
fcomi
testl
mov
xor
adcl
dec
daa
cli
pushf
in
test
stos
cmp
xchg
or
dec
push
cmp
out
ret
into
je
ret
pop
xchg
push
add
cmp
or
div
mov
in
shll
xchg
mov
cmp
mov
ljmp
in
lret
dec
aaa
xor
imul
fldenv
fdivs
xchg
push
cmp
imul
int3
addr16
and
cmpsb
push
cltd
and
mov
dec
in
orb
in
ret
leave
add
and
push
enter
jmp
xchg
push
mov
jns
push
test
js
sub
fstpl
mov
pusha
cmpsl
pop
das
fdivp
add
xchg
mov
cld
mov
clc
jb
out
jp
testb
test
or
cltd
push
mov
leave
and
cmpsw
pop
push
faddp
mov
jmp
mov
xchg
xlat
or
inc
mov
jnp
pushf
pop
repz
scas
jns
sets
mov
xor
push
cs
fistl
fcomi
lahf
dec
insb
mov
mov
insb
mov
sahf
test
imul
sbb
ss
jl
and
mov
mov
or
xor
dec
pop
mov
mov
push
add
adc
mov
pop
pop
mov
cmc
sub
jp
cmpl
dec
inc
idivb
and
dec
add
cmpl
xor
mov
fimuls
adc
mov
aas
cwtl
mov
mov
addb
sahf
xor
fidivl
fnstenv
cvtps2pd
inc
sbb
sub
jp
in
fisubrl
pop
addr16
jbe
mov
push
dec
enter
mov
scas
add
jmp
lods
mov
insb
cs
fimull
fstl
dec
ja
shll
sub
imul
mov
leave
insl
cmp
xchg
mov
icebp
addr16
roll
pop
mov
add
subl
pop
pop
icebp
mov
mov
repz
les
jge
push
out
mov
imul
push
mov
mov
ljmp
xor
adc
roll
orb
dec
dec
mov
add
loope
xor
mov
bswap
fwait
xchg
ljmp
sub
fwait
in
fmuls
cmc
dec
push
out
or
out
outsb
mov
test
rcl
and
rolb
dec
push
add
sub
jg
jbe
gs
adc
xor
dec
call
popa
loop
gs
repz
push
xor
push
and
lods
in
mov
add
popa
cmpsb
cmpl
lods
cltd
js
or
js
xchg
jnp
jae
lods
and
mov
mov
mov
insl
shll
add
in
gs
jnp,pt
sub
cld
fdivs
xchg
sbb
xchg
nop
jno
mov
mov
ficoml
cmp
in
test
sbb
orl
cltd
jecxz
sti
or
enter
xor
xor
lea
mov
cmp
orb
pop
stos
pop
loope
or
aaa
stos
fiaddl
or
roll
xchg
inc
loop
mov
pop
in
jmp
sub
arpl
movsb
icebp
and
test
add
sub
push
cmp
xchg
sbbb
jne
add
jp
pop
push
aas
inc
fs
sbb
jp
cltd
ret
arpl
sub
push
push
cs
mov
bound
nop
or
mov
or
insb
and
cld
fidivrl
in
mov
jmp
adc
out
dec
cmpsb
fsubrl
shll
xchg
aas
mov
xchg
lock
lds
xlat
fcompl
popa
mov
mov
add
mov
mov
lcall
lea
das
adc
lahf
insb
xchg
jl
jbe
in
divb
dec
mov
and
dec
movsl
dec
dec
xor
lods
popf
aas
jbe
mov
sbb
pop
jp
pminsw
xor
lea
popa
dec
sarb
sbb
int3
bound
int
insl
test
cwtl
fisttps
cltd
mov
stos
sub
dec
mov
sbb
out
dec
testl
addr16
les
repz
and
pop
testb
movsb
data16
xchg
leave
data16
orl
mov
loope
gs
sub
mov
aad
and
jmp
repz
and
pushl
add
ficompl
mov
xchg
ja
and
mov
or
inc
fwait
adc
gs
scas
mov
mov
pop
repnz
sub
idiv
stos
pusha
lcall
pop
xchg
out
icebp
lea
lcall
lods
sub
adc
lea
insb
xor
mov
push
mov
std
sbb
ljmp
rol
mov
ficomps
push
loop
popa
sbb
jmp
dec
mov
jb
fdivs
out
and
sub
xlat
es
test
ds
testb
and
pop
insb
insb
pop
aaa
mov
mov
mov
jb
iret
mov
dec
test
call
or
fcoms
pop
sarl
jne
cmp
mov
cs
or
jmp
test
scas
lcall
xorb
out
push
pop
jnp
out
push
mov
cmp
or
test
jp
bound
jle
jge
mov
pop
pushf
fwait
sub
push
pop
mov
dec
js
or
in
pop
movsb
mov
and
imul
mov
cltd
sub
out
stos
lock
xor
pop
fstl
sbb
add
pop
mov
pop
sub
xchg
mov
cs
orb
cmp
call
add
mov
lock
fwait
cld
inc
xchg
call
loope
sbb
fimuls
and
push
ret
test
xchg
mov
xor
xchg
dec
dec
xor
jnp
pop
or
addr16
shlb
xor
std
jecxz
inc
lahf
push
ficoms
ss
adc
jb
jmp
lock
mov
aas
test
repz
jg
out
movsl
imul
push
pop
sbb
add
inc
push
movsl
xor
jb
test
adcb
por
stos
sub
cwtl
pop
lods
and
and
xor
pop
ret
sti
hlt
push
xor
addr16
jns
repnz
add
fwait
lods
sub
stc
repnz
stc
or
lea
fcmovbe
lods
pop
xlat
test
notl
ret
sti
sub
mov
and
stos
leave
xlat
add
fistps
adcb
outsb
sbb
insl
xchg
sti
roll
sbb
movsl
and
iret
insb
adc
fwait
mov
test
fsts
out
push
cmpsb
icebp
dec
stc
and
jne
inc
shr
jne
dec
mov
scas
pop
idivl
nop
xchg
decb
or
add
push
or
je
jne
or
jnp
ds
pop
mov
and
sbb
push
xchg
cmp
adc
aaa
cltd
test
dec
cmc
adc
int
aad
lea
call
or
xchg
push
pop
insb
xor
fwait
xor
push
jge
inc
shll
sub
lahf
call
cmp
es
mov
xchg
gs
sbb
sbb
outsl
sub
sbb
outsb
xlat
fdivl
ljmp
popf
leave
cltd
test
flds
in
rolb
outsb
jno
mov
sub
loop
sub
pop
in
xor
andl
jp
dec
pushf
push
dec
pop
add
aad
popf
pop
ja
dec
out
inc
xchg
scas
xor
imul
imul
andl
sbb
repz
and
loope
and
cmp
xor
outsb
add
in
xor
repnz
stos
cmp
out
mov
push
adc
and
scas
std
imul
dec
and
repz
xchg
xor
jne
fdivl
clc
add
and
pop
fxch
cmp
xor
inc
pop
call
mov
jnp
mov
pop
aaa
sub
mov
js
test
xlat
and
inc
sarb
pop
mov
add
cld
aas
inc
xchg
mov
and
stc
push
es
fnstcw
adc
repnz
in
fs
clc
cmp
push
push
pop
lods
sbb
cwtl
mov
movsl
test
cmc
add
sbb
out
cli
repz
xchg
outsb
insb
repnz
int
sbb
mov
mov
stos
rorl
add
dec
test
sbb
dec
int3
inc
pop
je
out
fdivl
push
or
lcall
dec
jo
jge
cs
repnz
lea
push
movsl
mov
push
cmp
sbb
andb
lods
cmpsl
mov
andl
cmp
addr16
cmp
ret
fistl
ss
inc
divb
aaa
ret
add
sbb
sti
mov
fxrstor
jo
and
or
xor
push
sar
call
out
out
mov
inc
adc
push
sbb
repz
mov
or
xor
movsl
cmp
imul
loope
dec
setae
test
and
mov
and
jbe
loope
add
mov
lahf
pop
mov
cmpsl
ret
pop
out
mov
inc
repz
mov
bound
sub
pop
lock
dec
call
mov
mov
xchg
adc
fwait
ret
out
cmp
movsb
dec
test
sbb
inc
movb
pop
es
out
sbb
in
iret
xor
pop
lods
in
stos
inc
ret
sbb
and
fisttps
in
xchg
cmp
mov
repnz
add
add
test
push
jle
mov
mov
jge
dec
xlat
or
lea
rorl
push
xchg
adc
push
icebp
push
out
pop
cmp
pop
add
sahf
dec
jne
pop
shlb
mov
mov
leave
pop
xor
popf
inc
mov
insl
scas
adc
dec
rcr
out
sub
fisubl
ss
jge
mov
je
push
out
mov
xchg
cmp
rolb
xchg
dec
dec
xchg
sbb
rolb
mov
dec
add
cmp
pop
sbb
gs
jle
sub
out
xor
or
inc
in
lret
jecxz
push
xchg
adc
mov
jae
jge
fldz
aam
mov
sub
push
imul
aam
dec
and
mov
xchg
lock
pop
movsl
orl
dec
test
fmull
es
arpl
aas
mov
std
ret
out
icebp
jp
test
dec
dec
dec
cmp
mov
push
mov
xor
inc
addr16
roll
xor
cltd
dec
add
icebp
jle
mov
cmp
add
pop
je
cmpb
rorw
inc
dec
outsb
aas
pop
dec
jae
push
jp
into
inc
cmp
pop
dec
scas
popf
mov
insl
enter
sbb
or
arpl
xchg
pop
sbb
xor
and
pushf
sbb
data16
mov
jae
dec
loop
movsb
ret
rol
movsl
insw
mov
or
mov
jle
mov
das
arpl
and
push
iret
flds
popa
mov
leave
or
sbb
cmp
fdivr
fcmovnb
lret
mov
test
add
push
pop
sarl
sbb
mov
xchg
cs
jno
pop
sti
lret
mov
ret
loopne
jmp
dec
cli
cld
jb
into
dec
xchg
jl
test
call
insb
mov
loope
loopne
add
in
lret
xchg
mov
in
mov
push
movsb
cmp
fdivrl
insl
adc
loope
push
adcl
cld
pop
jl
fdivl
mov
fs
push
imul
imul
jge
sbb
push
outsb
sub
mov
lcall
repz
icebp
dec
es
stos
push
mov
or
in
or
in
mov
mov
cs
push
push
dec
test
into
jl
in
sub
sbb
dec
jmp
mov
pop
mov
out
insl
outsl
push
aam
mov
adc
hlt
lods
push
fsubrs
inc
jecxz
jl
add
mov
pop
call
pop
rcr
loop
jno
lock
push
test
mov
imul
mov
lods
dec
and
jnp
das
rcrb
ds
cli
jne
jge
adc
cli
inc
ja
xor
rcrb
pop
mov
sbb
xlat
ljmp
gs
imul
mov
roll
test
lock
xor
push
ss
jno
jmp
xchg
testb
ss
int3
ljmp
push
rolb
mov
cmp
fs
mulps
jne
push
and
push
xchg
arpl
adc
cld
fcmovnbe
jecxz
cmp
cmpsl
jle
fdiv
leave
lods
or
and
pop
das
mov
hlt
pop
and
sbb
pop
fs
and
inc
adcl
scas
mov
popf
fldt
arpl
cld
clc
shrb
jb
lods
mov
jmp
mov
aam
inc
push
push
sbb
push
loop
dec
mov
dec
and
xchg
xchg
mov
sbb
fcompl
dec
inc
cmp
lods
cmpsl
cmp
cmp
lret
dec
xchg
mov
xor
test
xor
repz
adc
adc
xchg
dec
xor
push
call
jp
push
pop
test
imul
push
stc
enter
jno
sbb
inc
cld
les
inc
ljmp
add
add
adcb
or
xchg
adc
stos
dec
movl
jns
and
mov
jne
mov
cs
mov
pop
sub
outsb
repnz
or
clc
fists
jp
mov
dec
test
fcoml
cmc
xchg
outsl
pop
dec
gs
and
pop
outsl
and
mov
sbbl
and
mov
sbb
push
pop
lcall
subl
arpl
out
xchg
mov
sahf
inc
sub
xor
and
push
das
repz
adc
sub
inc
push
mov
adc
into
push
cld
outsb
push
iret
gs
in
cld
dec
mov
movsb
mov
nop
xchg
std
xchg
aad
int
ret
and
pop
and
sub
push
lock
jno
push
outsb
pop
jno
cmp
and
inc
sbb
cmc
add
std
cmp
pusha
orb
mov
jne
popf
orb
roll
push
shlb
vpsubusb
stc
icebp
sub
into
rolb
adc
inc
xor
xor
lcall
ds
jno
pop
pop
lret
or
jnp
push
arpl
mov
in
adc
xchg
mov
add
pop
enter
loopne
sbb
aam
out
mov
imul
repz
cmp
lock
sarl
dec
mov
shrl
imul
cwtl
repnz
pop
inc
push
mov
gs
dec
and
aas
ss
das
mov
out
xchg
push
jle
pop
int
addr16
scas
xor
out
cmp
lock
nop
iret
mov
inc
dec
sbbl
loop
push
fsubs
dec
inc
test
into
int
lcall
insb
das
notl
pop
xchg
push
leave
jns
cs
popf
xorl
fwait
or
adc
arpl
ss
mov
imul
cmpsl
cmp
cmpsb
mov
dec
testb
mov
xlat
add
mov
loop
push
xor
loop
jle
mov
pop
push
sub
out
icebp
dec
mov
push
pop
vaddpd
xor
xchg
sub
shll
xor
pop
je
mov
pop
movsb
cmp
sarb
addr16
roll
rolb
mov
int3
sti
das
rorb
mov
movsl
in
add
leave
jns
xor
imul
adc
rorl
decl
lea
or
cmp
pop
jl
mov
out
insb
inc
or
out
sahf
dec
sbb
and
cmp
out
dec
int3
ljmp
in
cld
sub
push
sub
testl
xor
leave
dec
mov
mov
shl
mov
inc
mov
or
shrl
sub
ds
inc
jne
out
out
jo
shlb
cmp
scas
icebp
xor
mov
jmp
icebp
scas
mov
add
int3
pop
gs
fldt
xor
xchg
mov
test
enter
inc
sbb
inc
inc
imul
xchg
orl
fs
add
inc
xor
and
stc
or
sub
jp
mov
push
jp
shrb
xlat
fwait
imul
and
mov
or
jne
mov
sbb
lcall
push
rolb
cwtl
and
mov
inc
shlb
mov
icebp
mov
mov
mov
mov
out
xlat
push
pop
leave
add
subl
jl
mov
jle
add
dec
mov
test
cmc
enter
out
mov
xchg
adc
sbb
xchg
xor
lret
movsl
xlat
xor
dec
xlat
push
add
aas
mov
add
gs
nop
lret
imul
cmp
fisttpl
jbe
test
addr16
loopne
shll
test
and
movsb
cs
das
fmuls
jmp
sbb
movb
mov
not
mov
into
imul
dec
int3
jns
jbe
sub
mov
addps
fwait
arpl
pusha
int
loopne
mov
jmp
lea
lret
inc
ss
pop
xchg
sub
iret
dec
aaa
and
jl
sub
cmpsl
ljmp
xchg
jne
mov
lret
sbb
std
jbe
xchg
out
testl
nop
xorl
adc
fimuls
test
mov
iret
fsubr
push
je
fwait
and
mov
repz
pop
jge
fists
mov
cwtl
fiaddl
cltd
test
leave
mov
cld
push
insb
enter
aas
push
out
mov
stos
sbb
mov
sbb
and
adc
mov
add
js
mov
and
mov
sti
adcl
sub
adc
rcrl
mov
pop
imul
xlat
inc
jge
dec
cwtl
daa
gs
sbb
scas
frstor
les
and
sbb
push
push
pop
andl
jo
mov
pop
inc
lcall
faddl
push
addr16
or
jle
inc
fldenv
pop
mov
aam
mov
arpl
mov
xor
lods
aam
mov
std
sbb
in
mov
fists
mov
xchg
in
sub
int
inc
push
jle
push
pop
das
add
dec
jl
shlb
mov
xchg
lds
and
cltd
sbb
sub
bound
bnd
cmp
mov
cmpsb
pusha
push
out
clc
dec
popl
adc
or
popf
mov
or
push
inc
xchg
into
pop
xor
pop
out
inc
sub
lret
xor
movsb
mov
dec
dec
xor
ljmp
add
into
aad
pop
add
mov
nop
cmp
add
int
mov
dec
adc
cmp
es
inc
xor
rcrb
cmpb
xchg
sub
daa
scas
js
push
sahf
ss
sahf
insb
dec
mov
jnp
mov
and
rorl
stos
fcmovu
in
or
mov
cmp
gs
popf
fucom
daa
inc
jbe
ja
out
mov
jno
adc
xchg
mov
pop
aad
mov
popf
lea
sbbl
ss
add
std
pop
decb
sbb
push
leave
push
divb
lretw
in
jecxz
outsb
fwait
aam
and
clc
dec
nop
pop
aad
in
jle
or
inc
adc
and
cmpsb
hlt
jno
es
ss
cltd
hlt
mov
sub
sub
in
inc
mov
fs
lock
pushfw
test
cwtl
inc
sbb
insl
xchg
mov
pusha
roll
hlt
cmpsl
mov
sbb
pop
aaa
sahf
inc
pop
mov
cmpsl
mov
and
and
push
fstl
xchg
cmp
jecxz
out
jge
mov
shll
ror
sbb
fildll
outsl
cmp
test
jno
push
and
pop
adc
repnz
xchg
pop
int3
inc
inc
jns
jecxz,pt
lret
imull
xor
gs
neg
mov
lret
call
dec
pop
mov
jmp
stos
pop
or
leavew
pop
lods
mov
fnstsw
push
cmpsl
loopne
sub
sbbb
jmp
xor
push
lcall
push
shll
mov
mov
bound
mov
dec
insb
or
ret
add
fucomi
pop
test
push
loopne
bound
xor
xor
repz
jnp
adc
mov
hlt
push
and
xchg
dec
jo
out
sbb
repz
add
test
mov
add
stos
into
and
sub
push
push
mov
pop
inc
call
mov
jle
movsb
lret
push
lret
sbb
jo
push
cli
into
mov
inc
gs
mov
jp
imul
addb
pop
lahf
arpl
shrb
fcomps
lcall
insb
outsb
lods
dec
fcmovnu
shlb
insb
xor
dec
insb
fdivrl
fcmovbe
mov
inc
dec
mov
in
mov
pop
test
or
jmp
inc
inc
fadd
int
enter
fsubs
cmp
or
ds
aas
push
sbb
mov
int3
sahf
mov
dec
mov
lea
or
dec
loop
sti
mov
and
inc
mov
lret
sbb
fs
add
jmp
inc
and
pop
std
aaa
popf
xchg
lds
in
sbb
aam
and
idivl
insl
int
loop
mov
int
adc
dec
xor
cmpsl
popw
outsl
in
test
pushf
push
lock
pop
add
mov
cmp
fwait
and
jp
dec
push
pop
test
sbb
sub
fdiv
rcl
cmpsl
add
scas
out
in
push
inc
inc
loopne
xchg
dec
lahf
into
in
stos
mov
jne
in
push
cli
pop
jge
rcll
rcrb
lds
aad
sbb
ret
mov
add
movsb
xchg
add
out
addb
and
xchg
frstor
and
arpl
fsubl
popa
xor
negl
rorb
shl
push
cmp
ljmp
aam
mov
pop
psubb
adc
scas
xchg
xor
add
out
mov
mov
xlat
and
and
pop
shlb
pop
adc
cmp
mov
js
xlat
pop
and
or
push
loop
mov
cmp
mov
aad
ss
repnz
in
or
mov
xor
pop
mov
mov
jne
add
shll
or
loop
jp
inc
arpl
sbb
and
cld
inc
jnp
shrb
lcall
push
xchg
out
push
loopne
push
je
les
inc
sub
sbbl
test
stos
out
adc
imul
sub
ljmp
pop
or
mov
in
push
outsl
sbb
lret
dec
cmp
int
sbb
movsl
outsb
faddl
rorl
add
adc
pop
dec
push
jo
dec
ds
das
loopne
mov
cwtl
scas
popa
movsb
dec
sub
fistps
pop
fisttpl
mov
lcall
sbb
lcall
ja
das
jmp
repnz
xchg
xchg
mov
into
dec
ret
push
js,pn
rolb
and
xchg
jae
mov
add
fcmovnu
push
aas
pop
pop
fwait
sub
mov
insb
out
pop
stc
leave
ficoms
mov
add
push
pop
add
cmp
inc
fadd
add
jle
mov
cltd
loopne
push
leave
arpl
stc
jo
stos
fmul
adc
clc
jl
mov
pop
pusha
bound
cwtl
xor
in
xchg
loope
adc
mov
cmp
push
inc
imul
mov
cmp
push
jge
pop
jbe
dec
imul
push
jl
fstl
pushf
arpl
mov
sbb
in
cmp
mov
aas
mov
loopne
enter
sarl
std
inc
and
sbb
mov
std
and
push
jns
sti
notl
and
dec
stos
pop
lret
int3
outsb
xor
jbe
shll
insl
xchg
push
lret
stos
jmp
mov
test
mov
sub
cltd
packuswb
jmp
inc
jae
add
sub
jp
cltd
adc
cmpsb
test
fcomps
adc
xchg
add
mov
or
out
xlat
xchg
push
out
test
inc
test
add
sbb
rcr
push
addr16
aad
sub
pop
lcall
shl
aad
cmpsl
pushf
xchg
xchg
cmp
js
les
or
pop
mov
mov
jne
iret
jne
dec
ljmp
idiv
mov
dec
fiaddl
xchg
sbb
pop
add
iret
sbb
dec
ja
test
dec
addr16
imul
jmp
out
adc
es
loop
in
dec
testl
push
mov
lock
pop
arpl
imul
outsb
add
inc
jo
lret
sub
rcrl
out
aas
sub
or
mov
addr16
push
sbb
dec
fwait
enter
js
mov
lret
das
test
jae
mov
push
push
rolb
adc
testl
inc
outsb
lods
inc
mov
cmp
rorl
repz
mov
sbb
push
test
push
hlt
loopne
repnz
insb
mov
push
pop
rcrb
and
in
mov
pop
in
nop
ficoms
aas
mov
dec
mov
cmc
loope
gs
push
pop
scas
addl
in
iret
dec
inc
adc
out
jne
lods
leave
arpl
xor
cmpsl
add
mov
jae
daa
jmp
popf
xor
std
lea
or
pop
fmulp
cmpsb
iret
pop
sub
in
pop
inc
rcl
repz
sbb
fldz
dec
jnp
fcmovbe
out
push
mov
or
or
sti
pop
mov
and
push
cmp
test
fldt
inc
popa
cmc
dec
mov
xchg
pop
mov
push
in
test
pop
or
pusha
daa
jae
push
jg
fildl
mov
xchg
mov
mov
mov
test
jge
popa
sub
jnp
ljmp
sub
mov
inc
call
lcall
pusha
lea
push
xchg
scas
pop
mov
outsl
int
or
dec
clc
mov
sub
dec
cltd
das
sbbl
loop
popa
arpl
sbb
or
in
out
xchg
xor
mov
sbb
xchg
cmpl
mov
sub
mov
cmp
push
mov
outsb
mov
cs
fdivrs
adc
mov
cwtl
adc
or
push
jnp
jge
jb
pop
sti
lods
lock
add
xorl
stos
movsl
jb
cmp
xchg
sti
mov
int
jge
decb
fwait
sbb
adc
bnd
dec
sbb
cltd
out
inc
insl
aad
adc
stos
test
cmpsb
es
sbb
or
ffree
mov
std
es
push
cmp
sbb
mov
cmpsl
fstps
add
popa
pop
ds
or
lds
xor
sub
lods
jge
add
or
xchg
mov
test
cmp
in
push
mov
pop
xchg
aas
push
sub
sbb
mov
mov
mov
push
lret
aaa
xchg
xchg
mov
or
leave
or
testb
aam
decl
push
pop
pushf
mov
sbb
push
jae
jge
inc
inc
incl
hlt
sbb
cmp
out
test
js
outsl
std
adc
mov
xor
repz
sti
out
orb
dec
loop
mov
cld
out
mov
addl
add
pop
roll
sahf
pusha
fucomi
inc
sub
pop
sub
daa
out
and
sahf
sub
jge
or
cmp
bound
xchg
mov
loope
testl
addr16
adc
test
cmpl
mov
or
sbb
mov
ljmp
jb
stos
mov
mov
and
les
loope
incl
mov
dec
xor
test
xchg
or
loope
jb
popf
jns
pop
dec
pop
test
sub
dec
sbbl
sub
sub
ja
xlat
call
adc
enter
add
pop
hlt
adc
vpsllw
sbb
fs
into
mov
hlt
sarb
xchg
xor
add
dec
int
fcomps
pop
cmpl
clc
lods
xor
mov
xor
shlb
jp
je
pop
fwait
cmp
or
in
clc
call
test
es
pop
das
sbb
sbb
adc
push
mov
fisttps
inc
imulb
or
pop
jbe
fcmovb
sbb
test
mov
adc
mov
xor
push
jecxz
pop
scas
imul
pushw
icebp
fadd
mov
xor
mov
push
jbe
subl
jg
inc
add
pop
fucomip
push
sbb
sbb
push
ds
sbb
int3
sub
jo
mov
xor
out
inc
mov
popa
scas
bound
repz
popf
lahf
stos
inc
add
bnd
outsl
test
cmpsb
cmp
push
into
jnp
in
push
je
adc
hlt
insb
xchg
sub
arpl
xor
adcl
icebp
in
jecxz
add
fnstsw
cli
rolb
lahf
adc
mov
aas
lock
fs
sub
repnz
into
mov
mov
pop
sbb
outsb
cmpsl
aaa
sub
pop
test
mov
xor
hlt
or
push
shll
cwtl
xchg
fs
test
jne
mov
jmp
enter
mov
repz
or
mov
stos
aas
test
stos
aaa
rclb
scas
jns
mov
add
mov
sbbl
xor
adc
sbb
mov
sub
add
cmc
and
xchg
adc
xor
jg
pop
rorl
fstp
and
sbb
inc
jbe
add
jae
pop
nop
je
jns
mov
das
cmp
push
in
dec
pop
sbb
leave
cmp
cld
xchg
out
push
adc
push
test
mov
mov
mov
mov
mov
cmp
xchg
xor
and
ja
iret
cmp
add
xchg
icebp
subl
jb
xchg
mov
fldcw
daa
sbb
rcrb
iret
insl
adc
loope
test
inc
or
xchg
jmp
adc
stos
lock
mov
rolb
jle
or
xchg
cmp
dec
push
rclb
xchg
xchg
outsb
sub
fdivl
into
aad
out
push
inc
pop
shlb
lods
out
andb
sahf
cli
jmp
push
iret
and
sbb
push
sub
push
push
into
jb
xchg
fnstenv
jge
mov
mov
push
aam
je
add
push
jmp
orb
pushf
ficompl
jecxz
mov
cmp
mov
shll
bound
and
adc
lock
xchg
push
xchg
push
sbb
stos
arpl
cmpsb
inc
xchg
mov
std
ja
inc
stc
push
icebp
dec
test
dec
shrl
add
insb
hlt
jae
sbb
xor
dec
mov
popa
sbb
pop
stos
dec
dec
mov
push
push
lea
mov
sbb
popf
adc
stos
enter
jns
xlat
pop
adc
fstpt
ret
xor
shl
insl
cmp
clc
idiv
psubsw
dec
sbb
push
jne
cltd
adc
sarb
dec
inc
mov
sbb
loope
sbb
lods
cmpsb
gs
and
int
ret
imul
out
insb
xor
mov
enter
push
filds
jge
shrb
cmc
popf
sbb
and
lods
lods
adc
das
les
dec
mov
mov
arpl
rcrb
and
adcl
jecxz
pop
and
cmp
lret
inc
mov
adc
lock
or
dec
pop
stos
fisttpll
xor
mov
sahf
xchg
jge
cmp
lret
sbb
jp
pop
or
pop
in
xchg
gs
xchg
fcoml
mov
fwait
xor
cmp
or
in
popaw
aaa
out
cmpsl
xor
sbb
jl
lret
inc
outsl
aad
movsb
aas
or
lcall
mov
repz
sub
lods
arpl
pop
mov
loopne
inc
lea
push
imul
int
fs
aas
addr16
adc
xlat
pushf
or
pop
sahf
adcl
adc
mov
ss
gs
adc
cltd
push
in
add
int
in
outsb
pop
insl
repnz
mov
and
mov
dec
data16
movsb
inc
test
aam
dec
xchg
sub
cs
movsl
sbb
inc
cmp
dec
daa
imul
mov
push
push
add
jo
cmp
movsl
push
mov
inc
stos
mov
iret
mov
repz
push
in
xchg
int
out
jmp
dec
repnz
icebp
and
mov
je
xchg
pop
movsl
jbe
mov
iret
jmp
jl
push
add
pop
ljmp
inc
jl
loop
fcompl
out
cmp
lret
jp
repz
cld
xor
adc
mov
jmp
or
scas
mov
mul
jmp
in
xchg
movsb
int
mov
aaa
dec
bswap
js
adc
imul
pop
fstpt
roll
xchg
sub
lods
push
adc
push
cltd
mov
dec
call
and
or
ja
xor
pop
xor
pusha
loopne
jp
push
sbb
arpl
cmc
es
mov
lea
mov
pop
arpl
in
xchg
cmp
sbb
sbb
ja
lret
shrb
inc
dec
push
movsb
cmp
das
adc
add
push
add
inc
cmp
fcoml
cmp
int
in
jb
pop
pop
xor
jb
mov
fidivrs
stc
xchg
out
inc
cmpsl
bound
add
lds
sub
hlt
xchg
into
push
and
xchg
fstpl
in
add
mov
stos
imul
sub
jo
mov
and
mov
mov
les
mov
sub
inc
xchg
jnp
mov
inc
clc
cmp
gs
iret
cmp
repz
out
loope
dec
sub
fsubr
call
sub
jmp
cmp
clc
or
movsl
sub
dec
jmp
cmp
xlat
xlat
mov
jo
das
lret
jb
fnstcw
mov
pop
jns
inc
mov
sub
inc
dec
lcall
mov
xor
push
nop
jmp
sbb
xor
test
push
adc
lods
inc
imul
push
leave
xchg
cltd
int3
fistps
je
push
xor
sbb
repz
js
dec
sbb
lods
or
sub
or
loope
mov
cmpsl
jns
jmp
xchg
push
add
mov
mov
in
dec
iret
out
jo
cmpsb
rol
fstpt
in
fdivr
or
lds
push
jl
push
je
pop
inc
pop
pop
test
int3
lret
push
gs
into
mov
adc
aaa
xor
or
push
mov
xorb
push
ds
push
pop
push
jg
xor
sbb
push
dec
add
clc
pop
jl
xchg
sbb
jecxz
pop
clc
xor
pop
popf
icebp
movsl
jae
shll
xchg
mov
aam
mov
jnp
sbb
cmp
dec
out
mov
push
pop
mov
or
dec
sahf
ljmp
imul
lcall
push
test
scas
adc
stc
notb
mov
mov
jl
testb
cmpsb
add
mov
pop
lret
sub
jns
loope
adc
loope
cwtl
andb
fistl
rcll
sub
inc
out
das
cmp
jnp
fstpt
pop
and
mov
cmc
je
leave
inc
subl
jg
mov
es
add
dec
js
mov
pop
inc
rol
lret
fadd
pop
mov
iret
sbb
cli
imul
pusha
lock
fxch
xor
jecxz
aas
cmpsl
ss
movsl
das
outsl
aas
or
push
push
add
push
push
add
cmpsl
pushf
mov
sbb
xorl
das
push
cli
jg
sub
arpl
xor
hlt
leave
ja
sub
or
testb
mov
sbb
jno
insb
xor
dec
add
sub
roll
jmp
cmp
roll
out
dec
cwtl
loop
adcl
popf
lahf
outsl
pop
xchg
jne
das
inc
jne
xchg
test
xchg
outsb
add
dec
sub
sub
in
in
or
call
xchg
imul
inc
and
fisttpll
jno
imul
push
int
or
or
jae
xor
cmpsl
lea
lods
dec
jmp
mov
fistl
sub
into
inc
push
andl
pop
mov
inc
pop
push
inc
xor
dec
aas
or
mov
lea
ja
or
mov
or
lret
add
ss
mov
mov
lcall
xor
jecxz,pt
dec
std
lea
ss
cmp
dec
jns
cmp
rclb
add
cli
lock
shlb
inc
icebp
and
jne
xchg
xchg
idiv
pop
cmp
cli
loope
mov
fmuls
jns
scas
push
jle
cli
in
jae
sahf
test
jmp
jp
lds
xor
or
int
ficoml
outsl
jmp
daa
adc
in
movb
and
sbb
cltd
out
popa
ds
cwtl
cmp
lcall
fsts
incb
push
mov
pop
and
insl
jmp
std
repz
mov
and
shlb
les
movsl
divl
call
repz
sbb
mov
xor
sbb
mov
jp
insb
lret
shlb
fldenv
mov
rcrl
xchg
cltd
iret
xlat
or
fwait
outsl
pop
push
adc
cmp
adc
insb
mov
lods
pushf
test
lea
push
add
inc
sbb
outsb
cmpsl
scas
leave
lret
iret
add
dec
mov
cs
in
push
mov
pop
cltd
and
outsb
repz
pop
call
pop
lds
loop
call
mov
pushf
jns
jecxz
pop
scas
test
pusha
mov
lcall
cmp
fnstenv
mov
add
pop
addr16
inc
pop
push
adc
ja
cld
pop
je
cmp
jmp
push
mov
inc
pop
imul
xchg
into
jl
inc
bound
fdivl
ds
mov
inc
ss
jbe
push
cmp
cli
xchg
icebp
add
fwait
mov
sub
xchg
xor
bound
lds
xchg
mov
cmp
nop
cmpsb
stos
test
mov
addr16
test
stos
pop
loopne
fwait
add
outsl
lret
mov
push
scas
fmull
mov
and
lcall
rolb
int
xchg
adc
lods
pop
push
mov
fisubl
cmp
mov
ja
pop
jp
imul
gs
xor
cs
cli
mov
pop
shll
push
hlt
inc
lods
sub
clc
pushf
sbb
and
push
lods
xor
out
mov
movsb
push
negl
cmp
aas
jae
popa
pusha
es
jne
lahf
imul
sbb
pop
outsl
pop
call
fldcw
xchg
insl
mov
cwtl
jne
dec
push
xchg
dec
mov
sarb
xlat
dec
repz
sub
xchg
sbb
xor
int
mov
dec
dec
dec
dec
scas
pop
push
xor
mov
and
popa
push
outsb
jns
bound
dec
movsl
lahf
shrl
add
repz
add
aas
stos
int
sbb
push
insb
xchg
xorb
popa
mov
add
ret
mov
push
mov
or
dec
int3
and
pop
adc
in
inc
iret
push
pop
popf
dec
stos
adc
in
dec
notb
cld
cmp
fisubs
sbb
dec
outsl
or
jno
cmp
das
sub
xchg
mov
stc
out
mov
jns
ds
test
cld
mov
call
sbb
out
add
in
cmpb
dec
adc
adc
sub
sarl
xchg
in
add
hlt
pop
jb
roll
inc
mov
inc
fdivl
sti
push
adc
cli
dec
call
cs
push
adc
xchg
lea
xchg
arpl
mov
pop
push
fwait
sarb
lock
sbbb
xor
xchg
or
xchg
aam
bound
sbbl
xchg
push
pop
mov
sbb
push
mov
xor
scas
aaa
rorl
jge
push
cmp
cltd
lret
aad
dec
and
jae
dec
lret
mov
call
out
xor
cmp
xor
pop
cmp
ret
icebp
xchg
je
cmp
sbbl
pusha
mov
test
pop
aaa
jbe
pop
pop
test
mov
hlt
fstps
xchg
xor
jge
pop
mov
mov
jno
fcoms
scas
and
call
aam
adc
inc
and
cltd
jp
sbb
jno
call
dec
aam
xchg
call
movsl
jmp
jle
mov
xchg
mov
dec
ds
sub
adc
xchg
sub
lret
or
push
pop
stc
or
inc
cld
adc
aad
loope
push
mov
lds
pop
and
shll
imull
inc
mov
leave
cwtl
add
lahf
fildll
xlat
adc
pop
fistl
ret
rorl
push
jge
ficomps
lea
pop
sarl
jmp
pop
cwtl
and
jge
push
nop
out
outsb
adc
mov
in
push
xor
add
cmp
jmp
mov
sti
cmp
cli
sub
movsb
std
lods
cmp
out
mov
insb
clc
ret
sbb
ljmp
mov
leave
cmp
xlat
ret
mov
mov
imul
fildl
mov
adc
daa
inc
xor
aad
adc
icebp
cwtl
lea
and
sti
lock
pushf
mov
mov
mov
xor
or
mov
or
push
scas
test
pop
repz
add
loop
ljmp
dec
jb
sbb
dec
lods
push
fildll
fistpl
xor
pop
push
lahf
xchg
add
shl
mov
or
jmp
in
es
fimull
lahf
dec
push
and
push
cs
rclb
inc
in
repz
stos
sub
dec
or
popw
xor
or
test
xchg
sub
mov
or
push
xchg
sbb
mov
mov
jmp
jp
out
jo
test
adc
imul
test
sbb
fs
shll
sbb
jl
in
and
test
dec
sub
lahf
mov
int3
cs
fildll
add
int3
xor
sub
inc
inc
pop
jbe
push
sub
loopne
and
aas
pop
sub
mov
mov
jb
jle
test
xchg
sbb
lods
sbb
cld
stos
in
jp
out
xor
pushf
ds
xor
fildl
std
cmp
xor
cld
cmc
inc
pop
lahf
push
pop
sbb
lea
inc
mov
adc
cmp
fiaddl
sub
push
push
cltd
das
lcall
or
insb
rcl
mov
pushf
or
int3
fcmovnu
push
mov
cltd
decl
lock
sahf
scas
mov
hlt
pushl
pop
jne
mov
rcll
adc
sbb
fsts
aaa
sahf
jnp
stos
mov
xor
sub
mov
into
fimull
mov
pop
int3
xor
sbb
inc
mov
mov
fisubrs
push
sub
div
jp
ss
icebp
mov
notb
js
mov
push
std
push
addr16
mov
mov
xchg
mov
sbb
xchg
jnp
test
fldt
dec
xor
jp
and
fimull
je
mov
inc
sahf
pop
sub
sub
aaa
lcall
jg
fiadds
xchg
jne
shrb
aam
in
es
add
mov
jge
sbb
ret
or
jns
dec
outsb
adc
insb
loop
pop
jb
mov
addb
scas
lcall
addr16
inc
out
jmp
mov
clc
ja
mov
out
into
lret
mov
fisubl
outsl
iret
loop
cwtl
mov
inc
dec
rclb
push
dec
and
shrb
fisubrl
xor
jge
fistpll
sbb
jo
int3
pusha
cmp
nop
add
dec
fdivl
cwtl
test
stc
pop
xor
cmp
fldcw
out
cmp
int3
shufps
push
pop
jno
scas
add
cmp
push
adc
int
inc
inc
pushf
xor
push
ficoml
pop
mov
mov
cmp
mov
xor
filds
cmp
and
or
add
lcall
stc
and
mov
jbe
cmpsb
jmp
dec
jg
push
int3
inc
in
loop
inc
mov
ret
test
leave
pop
insb
mov
je
cwtl
adc
xorl
mov
adc
ret
pushf
pop
out
bound
and
test
mov
xor
jmp
stos
int
in
push
sbb
ret
addr16
push
push
adc
push
xchg
and
inc
int3
js
pop
fisubl
inc
ss
dec
fs
mov
push
repnz
out
in
jne
out
fwait
sbb
inc
icebp
sub
cmc
lock
fs
mov
ja
je
pushf
aad
inc
adc
add
shll
push
push
pop
or
test
push
stos
fildl
inc
out
pop
clc
outsl
push
mov
loop
fistps
arpl
or
pop
int
sbb
fwait
pop
adc
leave
out
test
push
xchg
mov
ja
decl
movb
or
mov
into
jb
pop
inc
mov
adc
pop
into
cltd
mov
sbb
aas
or
sub
fsubrl
add
adc
popa
push
and
mov
test
xor
jb
ffreep
adc
data16
daa
add
popf
cmpsl
fldcw
push
les
stos
adc
popf
cmpsl
repz
jge
shlb
inc
push
mov
scas
mov
push
add
lret
mov
cmp
and
loopne
mov
gs
pop
imul
leave
push
outsl
popf
sar
popf
xor
mov
loop
add
iret
ds
out
subl
pop
hlt
or
mov
sub
je
xchg
add
mov
inc
cli
movsb
lods
and
push
int
sbb
push
clc
inc
bound
out
mov
mov
nop
loop
hlt
jne
add
mov
mov
cmp
jb
cli
push
add
and
jmp
pop
lret
jne
stos
adcb
mov
push
les
inc
mov
mov
lcall
imul
sti
aas
jmp
sbb
sbb
sub
popf
cld
mov
inc
xchg
pushf
int3
sub
addb
or
insb
sbb
mov
mov
ret
aad
lcall
addr16
lock
pusha
xorl
add
mov
jge
dec
stos
cs
fimuls
loop
dec
xchg
sahf
pop
cmc
add
adcl
adc
xlat
pop
xchg
rcl
insl
dec
sbb
hlt
fistps
in
movb
test
jno
loopne
mov
loope
fisubl
add
out
pusha
negl
or
insl
in
mov
imul
sbb
mov
jo
cltd
out
pushf
pop
sub
sbb
dec
icebp
lcall
out
movsl
cmp
inc
cld
cld
xchg
mov
inc
fsubrs
and
xor
movsb
adc
jbe
stos
mov
aaa
xadd
push
push
repz
pop
clc
aad
sub
mov
vmread
and
jno
andl
mov
mov
and
in
lods
pop
push
and
mov
scas
and
icebp
xchg
mov
cmp
cmpsb
fidivs
cmpl
loop
mov
dec
pop
fwait
jp
cmp
addr16
push
inc
xlat
popa
in
jl
outsl
add
pop
lret
repnz
mov
push
jnp
fs
movsb
sub
pop
shlb
cld
and
and
mov
pop
mov
or
xchg
jb
mov
lret
out
lds
ror
das
jo
outsl
dec
stos
mov
movsl
or
xchg
out
pop
or
popf
pop
andps
mov
xchg
push
xchg
cmc
fistps
rcrl
mov
pop
sti
outsl
test
push
aam
xor
fdivs
fstpl
push
ds
mov
in
or
xor
jns
dec
lods
leave
fdivl
mov
cmp
sub
and
xor
mov
aam
fisubs
and
leave
cmp
inc
mov
shl
push
add
push
jle
and
dec
jle
dec
and
addb
mov
clc
rorb
xor
inc
jne
icebp
xchg
mov
lock
mov
mov
push
fidivrl
mov
stos
push
imul
push
test
repz
fwait
and
xor
daa
daa
das
push
cmp
xor
cmp
out
dec
jne
mov
push
sahf
sahf
test
sub
imul
mov
pop
and
push
scas
jo
test
push
add
idivb
pusha
push
inc
dec
aas
mov
outsl
lahf
or
repnz
aam
es
cmc
adc
stos
test
mov
mov
pop
sbb
je
rcrl
mov
push
mov
pusha
fimuls
add
or
pop
lcall
jg
and
dec
add
jno
pop
mov
call
loope
push
es
jle
clc
adc
iret
jl
push
out
jns
push
repz
mov
jns
sub
sbb
popa
xor
xor
mov
orb
int
js
adc
inc
repnz
addb
lret
xchg
and
mov
push
mov
mov
call
cmc
insl
adc
repz
cmp
cmp
enter
cwtl
dec
sub
bound
push
fwait
addl
arpl
sbbb
jecxz
cmp
scas
fimuls
testb
push
out
fcomps
into
xor
mov
mov
adc
xor
lret
psubusw
xorl
orl
mov
adc
test
push
cld
or
arpl
add
mov
sub
movsb
and
sbb
aaa
aaa
aaa
jecxz
xchg
mov
inc
cli
inc
mull
mov
sub
in
add
inc
loopne
imul
ss
incl
pop
inc
xchg
enter
sub
sub
mov
mov
mov
sahf
test
mov
cmp
add
hlt
pop
push
add
test
pusha
jmp
sbb
fsubrl
add
push
fst
sbb
mov
add
psrad
mov
gs
sub
dec
pop
cltd
mov
xor
xor
or
mov
nop
fldenv
loopne
push
mov
in
dec
pop
lcall
or
lret
sbb
push
out
lcall
fcomip
gs
sub
int3
jns
fsubrs
out
add
push
cltd
xchg
adc
sahf
cmp
sub
push
pop
pop
push
or
jae
dec
or
add
incb
out
ja
cwtl
imul
adc
out
das
cmp
cmpsb
icebp
out
push
lahf
adc
jmp
sub
incl
push
push
pop
or
mov
movsb
xchg
ja
mov
pop
ljmp
frstor
out
cmp
and
nop
inc
ret
cmp
gs
fimuls
sbb
imul
subb
cltd
mov
cs
sbb
jp
jae
into
pop
fucomp
jp
lds
xchg
sahf
ljmp
and
and
sub
mov
adcl
sub
les
or
fldenv
sub
xor
mov
sarl
and
and
int
mov
and
cmpsb
inc
jmp
xor
sub
in
pop
dec
popl
mov
cmpsl
int3
push
and
sbb
inc
lret
loope
sub
xchg
pop
cmp
pop
divl
jmp
xor
push
sub
pop
dec
push
lods
sbbb
lods
or
dec
dec
test
pop
lods
xchg
push
push
adc
push
jge
xchg
ja
xchg
nop
sub
xorl
inc
sti
in
sub
cmp
jno
xorb
repnz
test
xchg
push
es
fstl
aam
mov
push
cmc
sar
adc
pop
add
xor
sub
arpl
xor
cmc
push
imul
mov
das
sahf
outsb
inc
push
sti
mov
sbb
cli
or
mov
test
aaa
push
call
xchg
icebp
and
jmp
mov
jmp
lds
inc
push
sbb
or
xchg
mov
jns
add
mov
outsb
pop
cmc
inc
push
fs
sbb
dec
sub
add
shlb
sti
cli
pop
movsl
in
repz
lods
push
jg
std
push
push
je
pop
fwait
or
push
out
sbb
inc
inc
scas
mov
inc
pusha
pushf
loopne
aad
mov
cltd
lret
sbb
ss
iret
xchg
dec
in
jge
lret
aaa
adc
add
push
aas
loop
lcall
add
cld
sbb
cmp
aas
xchg
add
lods
jno
sub
pusha
orb
repnz
jmp
xchg
xor
push
in
inc
mov
mov
dec
cmp
jb
mov
adc
popa
mov
std
into
and
cmc
push
or
adc
dec
repz
lods
or
hlt
add
adc
test
test
mov
in
mov
lods
sbb
js
push
leave
cmp
icebp
add
inc
mov
popa
xor
lahf
orl
pop
fldenv
pop
lcall
adc
rcl
fwait
sub
sub
and
mov
xchg
sarl
out
loop
xchg
mov
pop
cmp
jae
mov
iret
ds
cmp
stos
and
lods
sub
pushf
jb
jp
pop
push
outsl
stos
jns
mov
inc
das
cld
sbb
xchg
popf
aas
inc
outsb
push
dec
jl
fldl
adc
adc
jecxz
in
add
jne
dec
addr16
push
dec
mov
fdivs
in
lret
rclb
fstp
jb
sub
aaa
movsb
push
aas
andl
sub
or
mov
je
cmpsl
jecxz
pop
lcall
mov
iret
push
jecxz
icebp
xchg
and
outsb
aad
icebp
push
mov
and
jo
fstps
mov
or
inc
push
pop
pop
testl
push
mov
loope
jnp
clc
jge
mov
ss
fistps
sub
xor
cmp
and
push
xchg
jl
mov
dec
cwtl
cmp
inc
leave
sahf
mov
cmp
popa
xchg
jl
mov
pop
fstl
enter
dec
xchg
dec
mov
daa
dec
and
sbb
cmp
mov
xor
jecxz
pusha
rol
inc
outsl
stc
cmp
jb
xor
xchg
sbb
mov
stos
mov
decl
leave
sbb
or
lret
jge
cmpsl
xlat
push
mov
pop
jl
push
lret
xchg
scas
pop
test
dec
leave
fidivl
aaa
xchg
lcall
js
inc
and
andb
sahf
loop
dec
pusha
push
mov
imull
popf
in
addb
xor
ljmp
out
push
ret
test
add
dec
mov
or
push
adc
outsb
push
lea
jae
imul
inc
jae
jl
shl
dec
mov
mov
aam
xchg
inc
jne
cmpsl
out
and
lahf
jns
test
fbstp
inc
adc
xor
pop
loope
lret
popf
iret
rcrb
xlat
fadds
scas
sbb
loop
pop
sub
test
push
jecxz
sub
leave
pop
subb
sti
sub
push
pop
ljmp
inc
ret
adc
popf
sub
mov
fidivs
and
sti
je
out
nop
pop
cwtl
cltd
lret
outsl
int
arpl
dec
xor
and
ljmp
cmp
in
repnz
aad
jge
lahf
movsb
xchg
jo
jge
stc
jge
pop
divb
bound
xchg
pop
in
jns
lahf
jb
mov
push
orb
test
jge
and
movsl
push
push
adc
inc
clc
xchg
int3
in
orb
xor
insb
lret
dec
outsb
adc
jmp
inc
adc
xor
mov
adc
ljmp
sub
ds
xchg
xlat
pop
push
inc
fisubl
out
pop
out
cmp
jnp
mov
adc
push
cmpsb
sub
xchg
sub
push
test
and
mov
jg
in
sub
push
jmp
aam
imulb
jns
sub
stc
and
or
jl
add
inc
xchg
cmpsb
mov
mov
push
sti
push
cltd
mov
das
enter
push
adc
pop
cs
cmp
insb
or
xor
mov
sbb
push
sti
shrl
and
lds
add
add
pop
xchg
mov
test
mov
stc
cmp
mov
cmovae
scas
inc
fcmovnbe
sub
push
sub
sub
aaa
xchg
int3
sub
lods
stos
sub
xor
inc
mov
inc
xor
sub
adc
idivb
xor
test
sub
ret
jnp
mov
std
cli
pop
xchg
ret
push
dec
push
inc
dec
je
lret
cmpsl
hlt
shll
rol
lds
mov
jno
jg
xchg
mov
clc
xor
dec
sbb
or
inc
xor
mov
aam
testl
cli
popf
mov
mov
test
cmpb
and
popf
adc
mov
in
jecxz
in
push
out
jnp
das
leave
jno
xchg
icebp
jl
gs
mov
ds
into
nop
pop
and
jo
xor
data16
or
inc
inc
xchg
xchg
or
clc
mov
pop
test
cmpb
xchg
in
xchg
test
jmp
cmc
loopne
in
mov
sub
dec
cmc
add
xchg
jae
or
imul
mov
xchg
dec
jmp
sub
cmp
dec
xorl
dec
paddsw
jo
xor
out
ljmp
mulb
test
mov
decb
push
js
mov
mov
sahf
cmp
ret
shll
addr16
cli
cmp
xor
cld
or
xchg
jge
sbb
ret
pop
jne
mov
stc
push
add
orl
jo
jmp
jle
xchg
push
push
stos
call
inc
notb
jge
fwait
mov
pop
inc
jmp
pop
add
pop
xor
rolb
xor
push
es
mov
pop
pop
push
aam
adc
add
adc
js
outsl
or
daa
and
push
and
adc
push
or
jl
pop
xor
in
and
sahf
xchg
fiadds
stos
push
lea
in
mov
cmp
pop
push
movsl
mov
sti
xor
test
fadd
addb
pop
inc
mov
jl
popa
and
pop
push
test
shll
xchg
fcom
pop
or
and
mov
pusha
in
dec
cli
fs
popa
cmc
fwait
add
in
add
outsb
and
sbb
mov
hlt
inc
into
xor
ficoms
or
push
cld
mov
adc
fisttpll
dec
or
sub
mov
xchg
push
mov
or
xor
fisttps
insb
pop
fidivrs
cli
mov
and
out
push
arpl
lods
jmp
fstl
push
pop
or
jb
inc
stos
pop
push
mov
mov
in
stc
outsb
inc
or
xor
inc
mov
mov
mov
xchg
pop
in
daa
gs
scas
divl
jecxz
inc
mov
popa
jl
ds
cmp
and
sbb
and
pop
cmp
mov
mov
ret
aam
and
jmp
negl
sbb
mov
inc
dec
into
frstor
rcll
pop
cmp
sbb
mov
cs
cmp
mov
and
xchg
sub
sarb
mov
jae
jge
fisubrl
mov
mov
icebp
fbld
pusha
fidivs
addr16
mov
adc
push
jle
addr16
inc
adc
and
cmp
mov
ljmp
fnsave
xchg
ss
data16
jmp
and
mov
jne
gs
ja
xchg
jbe
pushf
pop
cld
or
out
jo
or
and
or
imul
test
lcall
pop
push
fidivl
in
out
xor
shlb
addr16
mov
enter
xor
mov
aad
rcrb
push
popf
inc
stos
jmp
xchg
jb
inc
loop
test
jl
loopne
cmpl
sahf
imul
jg
push
sub
cmp
mov
fucom
test
in
lret
pop
ss
scas
scas
xchg
jo
xor
push
flds
bound
inc
mov
xchg
loopne
imul
cmp
rcrb
xor
ret
mov
mov
pusha
test
out
sub
das
lea
and
sbb
mov
and
out
in
dec
inc
insb
bound
add
out
lods
fadds
push
movsb
sbb
out
clc
loop
dec
push
pop
adc
sbb
fs
inc
or
inc
into
sub
cmp
adc
imul
repz
int
dec
and
jmp
add
adc
test
xchg
and
in
and
mov
mov
ffreep
sbb
pop
cld
sbb
lcall
pushf
and
rclb
xchg
test
mov
jmp
dec
cmp
das
inc
inc
cvtpi2ps
mov
mov
orl
mov
pop
or
test
push
mov
push
adc
jns
inc
dec
inc
pop
cmp
xor
or
jp
ficoml
sub
mov
mov
dec
mov
ds
xor
and
mov
lock
loop
adc
or
and
pop
jae
lods
push
sub
ss
mov
incl
call
stc
enter
aas
push
push
sub
mov
xchg
clc
mov
adc
jp
ljmp
into
jnp
xor
dec
cwtl
loope
mov
subb
sti
shll
inc
or
inc
xor
adc
loopne
mov
xor
cli
insl
hlt
mov
imul
or
aaa
into
pop
xchg
jmp
int
ret
inc
out
pop
jbe
and
or
scas
push
xor
xor
loope
cwtl
push
dec
test
jle
add
sub
push
cmp
mov
xor
adc
rclb
dec
ret
xchg
cmp
add
cmp
loop
jp
sub
mov
aas
repnz
sahf
mov
mull
iret
and
das
popf
repz
sub
mov
xsha256
cmpsb
xchg
ds
cmp
int3
fisttpll
pop
dec
inc
pop
ja
shr
loope
inc
bound
jae
andl
loope
fmul
jg
test
pop
rorb
cmpl
mov
movsb
adc
push
inc
repnz
cmp
rorb
sahf
inc
push
nop
frstor
daa
lods
inc
cmp
lcall
arpl
mov
dec
dec
adc
jecxz
dec
imul
jno
in
scas
jl
push
testl
pop
adc
xchg
in
lock
cltd
ja
push
mov
dec
into
dec
dec
xchg
lods
aam
xchg
nop
xchg
mov
pusha
pop
popa
push
cs
push
sub
fldt
in
sub
ret
dec
rol
push
popa
sti
xchg
mov
movsb
ljmp
mov
push
mov
mov
jbe
mov
outsb
cmp
mov
sar
mov
iret
fcmovnu
adc
lret
xorl
js
jb
rorl
gs
out
add
movsl
std
rol
and
add
in
sti
mov
loopew
insl
movsb
repz
daa
outsl
subb
jo
movsl
sub
adc
movsb
cmp
dec
subb
fdivrs
inc
das
es
inc
or
gs
cmp
ret
mov
out
jmp
jb
mov
or
rol
sub
xchg
jecxz
jl
iret
sahf
push
mov
adc
stos
jmp
or
insb
cwtl
push
fisubrs
lcall
mov
sbb
cmp
xor
push
sbb
jge
pop
inc
or
xor
xchg
cmp
imul
mov
inc
into
cmp
push
add
mov
push
push
sete
push
sbb
and
push
add
popa
fmul
sar
hlt
lcall
leave
push
out
test
js
ret
jb
xchg
inc
pop
xlat
in
in
repnz
mov
test
movsl
cmp
mov
push
push
popa
dec
inc
and
in
sahf
jl
inc
daa
add
inc
xchg
mov
and
sarl
adc
movsb
mov
repnz
orb
and
mov
ja
dec
mov
dec
lea
stos
sub
jno
jle
xor
enter
out
lret
cli
push
sbb
cmp
hlt
or
jns
add
repz
pushf
xchg
pop
mov
dec
dec
adc
xchg
ret
pop
subl
xchg
inc
sub
dec
cmp
cmp
xchg
xor
sti
stos
scas
ret
imul
test
or
and
push
cmpsl
cmpsb
nop
push
lods
cmpl
or
fidivrs
iret
adc
inc
cmp
pop
cli
in
push
inc
bound
xchg
cmpsl
wbinvd
enter
fadd
rcrl
insl
loop
pop
pop
jmp
fidivrl
test
jmp
shll
xor
pop
mov
cmp
sbb
mov
inc
lock
and
pop
cmp
arpl
sub
or
push
xor
inc
jae
lret
lods
push
inc
daa
fmul
and
call
jne
add
mov
lcall
ficompl
inc
cmpl
adc
inc
cli
inc
cli
adc
aad
fstps
int3
pusha
dec
loopne
and
test
push
adc
mov
jo
hlt
mov
fadd
test
aaa
add
inc
adc
rorl
aaa
lods
xor
cmc
popa
mov
call
popa
inc
push
dec
cmc
repz
add
sub
flds
xchg
push
sar
cli
xchg
insl
xchg
xor
cmp
out
sub
inc
mov
mov
clc
sub
push
dec
bnd
mov
inc
jae
push
sub
pushw
aad
into
push
add
cmpsb
fwait
mov
into
pop
xor
inc
dec
sbb
mov
inc
mov
push
pusha
push
xchg
loop
mov
ss
jno
mov
add
punpcklbw
xlat
push
lcall
jge
push
es
xor
ds
adcl
loopne
outsb
sbb
xchg
and
movsl
out
and
leave
out
jo
daa
popf
mov
ret
push
cmc
inc
cli
shlb
cmp
cltd
dec
push
test
popf
push
xchg
popa
jge
mov
mov
fsubl
push
and
les
push
movsb
add
loopne
data16
rolb
dec
add
mov
push
cmp
cmp
ss
jnp
xor
ja
inc
clc
scas
xchg
jge
xorl
sbb
mov
fucom
cltd
aaa
insb
sub
mov
jmp
jecxz
xor
fwait
aad
push
loope
jne
insl
xchg
mov
addb
out
stos
int3
jmp
xor
fwait
neg
js
push
or
mov
jne
out
push
cli
xor
jp
fwait
ror
insb
mov
mov
sahf
out
stc
and
pop
fwait
xor
cli
cltd
int3
jle
and
lods
jnp
adc
aaa
add
ret
mov
push
or
push
das
adc
les
icebp
mov
xchg
dec
mov
mov
cmpl
mov
xlat
xlat
pop
push
dec
inc
shlb
jae
pop
jne
cs
lea
sbb
subb
push
mov
mov
cli
jns
cmp
nopl
mov
pushf
push
stc
and
cmp
cmp
push
sbb
aaa
addb
aas
pop
hlt
sub
sbb
lea
pop
dec
dec
cld
pop
in
lahf
fldl
shll
sub
out
addr16
or
nop
cmp
lea
add
scas
push
sbb
and
adc
jge
test
gs
repnz
pop
clc
subl
testl
push
push
test
pop
cmp
pop
xorb
movsb
dec
outsl
repnz
mov
adc
cmp
out
xchg
push
jae
push
push
mov
out
or
gs
sbb
mov
fidivs
jle
push
arpl
add
and
shrl
out
jmp
adc
insl
aas
pop
jge
loope
addb
lcall
cltd
mov
shll
mov
mov
daa
inc
and
or
jmp
sti
movsb
into
push
sub
and
or
insb
je
mov
mov
adc
jg
jbe
mov
pop
dec
jmp
adc
and
fistpll
sbb
loope
dec
sub
jp
data16
cs
and
jle
xchg
mov
sub
pop
pushf
sub
mov
test
jl
pop
add
mov
dec
sbb
call
ja
popf
and
fildl
stos
xor
fucomp
lock
add
pusha
mov
push
jmp
pusha
cmp
lea
lret
flds
scas
ficoms
test
add
mov
fisttpl
mov
push
shll
jae
pop
popa
pop
add
pop
pop
outsb
sub
mov
adc
int
jl
xchg
cmp
and
aam
jp
adc
je
push
insb
push
jge
lds
add
add
or
out
or
xor
or
leave
lcall
lock
inc
mov
mov
sbb
adc
out
es
add
shll
repnz
andl
fisubrs
and
mov
add
adc
pop
push
cmp
pop
rol
xchg
inc
xchg
jne
mov
dec
test
lods
cmp
dec
fbstp
jb
into
mov
outsl
sbbb
cwtl
jo
aas
test
lods
xorb
cmp
les
pop
push
cmp
push
pop
iret
cwtl
icebp
out
shl
jne
mov
mov
mov
icebp
xchg
mov
mov
jbe
or
pop
dec
loope
aad
mov
arpl
and
mov
cld
mov
stos
rcrl
rcrb
xor
push
push
daa
cmp
inc
push
ja
jo
insb
push
adcl
out
mov
sbb
sbb
push
add
xor
jb
and
push
loopne
cli
sbb
aaa
mov
jecxz
add
mull
adc
add
jne
adc
pop
in
mov
cmp
and
dec
shl
push
push
fdivl
jge
cmc
ret
mov
or
mov
dec
mov
mov
subb
sti
test
icebp
cmp
mov
pop
adc
enter
or
xor
xchg
call
ret
into
push
imul
dec
cld
or
aaa
pop
adc
jno
cld
loope
aam
test
popf
pop
push
sub
cld
and
aaa
loope
fsubrp
pusha
cli
mov
ds
fwait
cmp
jge
cmp
pop
cltd
sub
hlt
ss
add
pop
jg
inc
push
ja
mov
dec
jns
pop
jns
mov
fidivs
jns
popa
jmp
rcrl
fwait
std
cmpb
pop
xchg
lcall
stc
jb
xlat
scas
jo
push
cli
enter
or
push
pop
sub
adc
push
cmp
out
ja
push
in
cltd
jmp
test
jno
or
addl
jmp
cltd
scas
mov
mov
sbb
xchg
xchg
ret
sahf
mov
lret
fwait
lock
jne
jp
jle
mov
adc
loop
pushf
mov
xchg
mov
mov
test
mov
stos
daa
cmp
mov
imul
inc
les
jno
andl
sub
cltd
sub
mov
jle
das
mov
inc
cmp
cmovno
jg
adc
loope
cmpsl
mov
ds
das
mov
adc
inc
jge
testb
out
jg
adc
scas
out
mov
inc
inc
addr16
or
and
js
xor
cmc
inc
fwait
jl
mov
cmp
or
jno
test
popl
add
dec
or
push
fsubs
dec
jbe
xchg
aad
gs
loope
sub
lret
and
test
cs
xchg
psrld
jecxz
sbb
xchg
test
xchg
pop
pop
rolb
icebp
sbb
jne
push
movsl
hlt
dec
pop
les
push
mov
push
jp
mov
in
mov
inc
jae
mov
add
or
pop
inc
sbb
pop
dec
sbb
fs
xchg
test
xchg
sbb
mov
dec
pop
cld
add
nop
out
push
cmp
mov
std
sbb
imul
idivl
cmp
ficoml
pop
or
sbb
pop
sub
dec
xchg
arpl
stos
dec
and
mov
in
enter
fcoml
shl
mov
sub
pop
and
icebp
xchg
sahf
mov
cmp
or
add
and
ss
test
push
and
in
push
cmp
push
bound
mov
test
or
lea
inc
and
call
push
sub
lret
pop
jp
mov
mov
xchg
mov
loope
adc
scas
loope
ret
jmp
lcall
clc
clc
mov
push
push
bound
jbe
loopne
mov
dec
insl
pusha
mov
stos
mov
jns
out
mov
roll
fmuls
xchg
dec
cmpsb
out
xchg
je
loopne
sbb
insl
pop
test
call
jle
cmp
mov
out
scas
testb
shlb
adcl
repnz
cmp
movsl
mov
test
cs
cli
ret
cmp
out
loop
sbb
jno
jg
pusha
push
rcl
bound
push
push
or
aaa
daa
mov
jne
nop
mov
xchg
arpl
sti
jp
xchg
iret
gs
jl
sar
hlt
divb
jp
rcll
test
dec
jns
adc
sub
jns
sbb
hlt
in
repnz
push
out
fiadds
mov
incl
out
xchg
les
xor
mov
adc
ret
pop
adc
or
cltd
pop
mov
jp
jae
xor
out
mov
lods
and
or
aas
sar
es
aaa
fsubr
mov
and
mov
mov
push
fcoml
and
push
sti
pop
inc
aam
orb
mov
fdivrs
pop
out
lahf
xchg
push
fdivr
jns
and
jg
fisubl
pop
mov
sbbl
int
pop
mov
les
ss
lods
xor
cmp
lods
jp
add
insb
xor
cmc
arpl
imul
pop
std
ljmp
push
les
cmp
repnz
lods
popa
mov
int3
pop
pop
outsl
pop
test
xchg
andb
pop
mov
push
cld
add
leave
fwait
cwtl
jge
cmp
je
mov
popa
cmc
inc
inc
xchg
rcrb
fwait
pop
les
repnz
insl
dec
addr16
mov
test
inc
test
rol
jo
pusha
jno
aaa
adcl
lahf
and
out
xor
stos
les
pusha
shl
push
cmp
insl
push
push
pop
xorb
adc
loope
mov
fldcw
data16
call
jg
rcr
out
mov
lods
bound
dec
mov
sbb
jne
mov
jecxz
movsl
scas
lods
fists
and
loop
jbe
ja
mov
mov
subl
inc
dec
out
mov
and
dec
mov
inc
or
cs
leave
xor
adc
cld
xchg
sub
inc
and
and
dec
sbb
sub
pop
adc
xchg
mov
popl
fnstenv
mov
jae
jl
push
xor
or
movsl
data16
enter
clc
pop
mov
jae
mulb
test
mov
xlat
adc
adc
mov
xor
into
or
sub
cmp
or
std
pop
int3
cli
test
xchg
out
data16
xlat
ds
mov
push
iret
pop
fnsetpm(287
jg
fcomp
movsl
repnz
xor
test
cmovo
sbb
cmp
mov
push
jl
xchg
scas
icebp
xchg
cmp
cli
out
shrl
sub
inc
xor
mov
icebp
into
mov
sti
data16
mulb
adc
sarb
out
rorl
push
and
adc
movb
push
sub
dec
smsw
test
cmp
das
lret
push
repnz
mov
outsb
cwtl
pusha
stc
out
mov
push
loopne
adcb
popa
pushf
out
loopne
sub
loopne
arpl
and
jb
arpl
xchg
aaa
or
shlb
add
add
or
jno
jge
mov
sub
loope
dec
lds
cmpsb
mov
in
in
push
shlb
jmp
cmp
pop
mov
daa
push
imul
dec
sub
fiaddl
test
aam
mov
jle
fsts
xor
push
push
push
pop
or
jae
xor
loop
and
dec
dec
jb
outsb
out
inc
push
daa
xchg
mov
push
xchg
jns
fwait
jmp
jl
mov
ja
jg
inc
call
push
jecxz
mov
daa
cld
call
pop
dec
inc
aas
xlat
cltd
and
lahf
outsb
sub
push
jmp
adc
mov
int3
mov
cmp
jmp
movsb
sbb
mov
cltd
xchg
mov
pop
mov
and
pop
in
mov
push
les
insb
pop
sub
out
stos
andb
sbb
stc
gs
loope
push
xchg
push
mov
mov
cmp
jle
ja
sbb
insl
jl
dec
add
aas
pop
outsl
pop
xchg
loop
mull
negl
mov
outsl
inc
sbb
insb
mov
clc
xor
outsl
packuswb
lret
mov
aad
gs
sahf
fstpl
jle
mov
pop
out
das
lock
xor
cs
xor
subl
inc
and
aas
push
jmp
cmp
push
lahf
and
xor
cmp
icebp
mov
dec
lret
mov
subb
das
xor
inc
or
or
insb
sub
mov
pop
sub
jmp
dec
lds
jns
push
shlb
popa
inc
loop
arpl
shlb
cmp
sbb
push
pop
test
sahf
adc
adcl
cmpsl
sub
cld
stos
je
mov
les
dec
add
out
divl
or
icebp
std
ss
out
rcrb
std
stos
icebp
mov
cs
xor
movsl
je
jns
lock
scas
sbb
adc
mov
inc
pop
sbb
push
inc
iret
adc
rcrl
adcb
push
mov
push
in
xor
cmp
push
mov
ret
jl
jo
jo
insb
and
cmp
inc
popf
push
mov
cmc
shr
dec
aad
mov
jnp
insb
lcall
and
insl
jbe
dec
imul
add
stos
inc
sbb
mov
push
fsubl
std
and
inc
xlat
adcl
or
into
shl
bound
push
fdivrs
jnp
pop
pop
cvtps2pi
lcall
add
push
xchg
aam
ret
lret
mov
sub
sub
xor
push
inc
adc
inc
sar
or
repnz
push
dec
push
paddsw
clc
inc
cmp
fcoml
aaa
jg
xchg
outsb
inc
leave
jne
testl
and
mov
shll
mov
dec
stc
int3
mov
mov
mov
add
test
imul
stos
dec
mov
or
mov
mov
push
and
push
xlat
jge
ds
fcmovbe
mov
mov
rcrl
shlb
loop
outsl
lock
lcall
stos
fwait
shlw
push
inc
or
ja
mov
fs
pop
rcrb
or
aad
lods
pushf
jle
push
jae
mov
mov
cmp
negl
and
dec
mov
xchg
mov
xor
aad
xor
out
jge
aad
aam
in
stos
lret
nop
mov
sub
lock
in
scas
outsb
push
push
sub
push
xor
cwtl
js
stos
or
mov
sarb
pop
inc
inc
out
jg
fsubrl
xchg
je
jecxz
dec
push
push
fadd
divl
aas
ss
xorl
xor
fs
mov
dec
js
pop
adc
add
inc
lea
std
data16
inc
inc
ds
imul
das
mov
sub
lock
in
nop
stos
mov
dec
mov
iret
pusha
xor
inc
jb
bound
pusha
pop
nop
or
popf
aam
lcall
rcll
int3
sti
cmp
adc
mov
adc
pop
fwait
mov
pop
ret
and
out
fsts
scas
sahf
clc
pop
adc
push
icebp
ds
lock
xchg
sti
push
inc
fs
sub
daa
or
cmp
inc
sbb
and
pop
dec
lods
out
sbb
and
aad
loopne
lea
leave
call
arpl
xchg
push
mov
int3
les
cwtl
fwait
jo
test
dec
pop
das
dec
dec
xchg
cmpsb
inc
imul
test
sbb
dec
pop
jge
xchg
cmpsb
fsave
xchg
fnsave
lock
jmp
xor
pop
pop
push
push
mov
out
ss
mov
lods
mov
cli
push
push
shr
pop
les
pop
mov
into
dec
inc
lods
fcompl
add
adc
adc
mov
adc
inc
and
add
jp
cmp
sbb
push
ja
or
lret
daa
rolb
mov
cmp
nop
xchg
sub
xor
inc
and
xchg
fwait
and
xor
push
adc
mov
xchg
test
lahf
je
jle
pop
cmp
rcrb
out
ljmp
xlat
cmp
loop
inc
out
cmc
lods
xor
mov
push
lahf
das
jo
lods
loope
dec
cmp
xlat
jle
sub
dec
jns
fsubs
shl
mov
ljmp
add
and
loope
repnz
pusha
lcall
popa
sarl
jo
int
lret
mov
mov
cltd
stos
add
fcom
aam
daa
xchg
inc
lds
add
add
cmp
jne
xchg
imul
cmp
out
xchg
push
push
pop
hlt
xchg
fidivrs
aas
xchg
fistpll
xchg
ss
push
pop
imulb
negl
les
xor
call
sub
cmp
adc
dec
add
mov
sti
and
test
xchg
inc
mov
hlt
cmp
adcb
cmpsl
adc
xchg
outsl
in
adc
mov
pop
insb
add
sbb
mov
mov
mov
push
movsl
or
movsb
sbb
lods
pop
jmp
sbb
mov
test
jg
lods
daa
mov
mov
loopne
xchg
bound
and
pop
fsubrl
ret
movsb
jge
hlt
cltd
outsl
out
lret
movsb
lods
push
pop
cmp
out
pop
jno
loopne
and
enter
cli
mov
jle,pt
mov
enter
push
or
mov
xchg
out
add
ficompl
push
xchg
movsb
fadd
push
sub
jg
dec
jnp
add
insl
js
cmpsl
loopne
or
push
or
outsb
in
mov
or
jno
clc
fs
sub
dec
and
add
leave
push
or
mov
pop
sbb
enter
mov
lret
pop
cli
fistps
sarb
mov
cld
or
mov
xchg
loop
jmp
daa
jg
lea
fcoml
jl
shlb
testl
testb
and
sub
mov
aas
sub
mov
sbb
add
popa
mov
pop
ja
jl
cmp
lret
cmc
adc
mov
xchg
inc
out
push
sub
jbe
lea
int
dec
cld
cmc
push
xor
loop
lods
imul
imul
cs
push
xlat
jo
mov
sldt
je
mov
dec
std
sbb
incb
xchg
insl
adc
movl
mov
pop
rorb
push
xor
ret
mov
fs
push
cmp
cmpsb
cld
fs
out
xor
dec
je
mov
pop
sub
adc
cmp
ret
xchg
icebp
iret
sub
clc
xchg
roll
sbb
mov
cs
cmp
inc
cs
inc
in
aas
stos
inc
testl
lods
mov
mov
movsl
test
aam
cmp
mov
sub
fsubr
stc
pop
inc
mov
lret
push
adc
xor
push
inc
mov
add
in
sbbl
mov
inc
in
jmp
adc
icebp
outsl
dec
cmp
fidivrs
cld
aam
ljmp
cmpsl
leave
jnp
pop
clc
mov
call
pop
cmp
cltd
dec
jb
cmp
push
pop
jnp
cmpsl
clc
repnz
adc
jle
push
and
lea
aas
fsubl
pop
shlb
cmp
and
int
stos
inc
adc
cmp
dec
cld
add
sbb
cs
inc
fisttpll
sbb
test
xor
add
lret
push
sbb
call
mov
mov
xchg
leave
fisttpl
cli
lods
testb
cwtl
popa
mov
push
mov
xchg
push
sub
push
int
not
dec
insb
mov
js
push
mov
ja
or
test
lods
cmp
push
and
xchg
imul
pop
out
imul
lods
aad
lahf
mov
lods
pop
sbb
push
cmp
xchg
daa
lahf
je
xor
adc
xor
pushf
fistl
push
ljmp
fcomps
push
in
idivb
xchg
xor
jns
jge
dec
xor
bound
jmp
cmp
imul
xchg
int
mov
mov
aaa
pop
pop
jae
or
dec
pop
push
jno
pop
and
loopne
pop
je
xchg
daa
sbb
fidivrs
rolb
add
pop
cmp
mov
mov
call
and
inc
out
in
push
sbb
ja
sub
scas
adc
js
dec
leave
sub
in
xchg
inc
adc
pusha
sbb
dec
mov
push
leave
inc
adc
mov
push
iret
shlb
inc
sahf
dec
imul
and
lahf
mov
or
sbb
push
pop
pop
cwtl
and
mov
push
hlt
lds
nop
adc
mov
int3
icebp
pop
mov
into
or
dec
adc
pushf
sbb
cmpl
lds
out
insl
dec
xor
movsb
jne
jbe
sbb
imul
and
repnz
sarb
pop
cmp
ss
xor
test
or
rcl
pop
ljmp
push
jb
jp
inc
adc
hlt
test
sbb
dec
mov
jge
sbb
push
jge
es
imul
int3
mov
loope
sub
pop
mov
aam
jno
fwait
cmp
xor
or
xchg
cmp
sub
sbb
fwait
sbb
mov
dec
scas
jb
adc
aad
push
push
mov
shll
xchg
pop
cli
out
loope
enter
or
imull
inc
push
enter
push
mov
jne
jo
xchg
subl
ret
push
push
adc
sbb
rclb
jp
cltd
mov
pop
pop
lcall
add
adcl
repnz
mov
popa
add
dec
imul
or
out
lahf
insl
leave
mov
loopne
cmp
lret
xor
lods
cmpsb
repz
mov
shl
xor
jl
xor
dec
or
fidivrl
cmp
add
jo
jb
out
or
in
cmp
cmpsb
and
and
outsb
test
popa
dec
jno
repz
bound
fidivs
movsb
push
mov
inc
mov
sti
fisubs
mulb
jp
in
ja
int3
jg
imul
sbb
fildll
xor
mov
or
sub
jmp
jo
or
jbe
lds
mov
in
sub
dec
into
mov
pop
cmp
adc
scas
aam
loopne
aam
movsl
xor
xchg
mov
fimull
lcall
mov
xor
and
jbe
pop
mov
jge
movsl
pop
push
push
rcrl
push
adc
jg
inc
push
sti
popf
popa
call
xchg
loopne
mov
mov
adc
mov
test
jl
jns
scas
inc
push
xor
push
push
add
dec
xchg
jp
pop
lcall
pop
fstpl
dec
add
ja
test
jns
add
cs
pushf
pop
xchg
push
mov
push
xchg
imulb
xlat
fcmovnbe
ljmp
lret
stc
inc
int
ljmp
pop
jmp
and
jg
dec
sbb
fdivr
test
test
mov
dec
fcomps
lcall
cmp
pop
dec
call
mov
test
adc
hlt
pop
mov
ret
and
sbb
dec
push
imul
inc
inc
mov
sub
fcoms
adc
push
loopne
aam
int3
dec
dec
pop
insl
xchg
sahf
addr16
aas
adc
push
or
call
or
cs
sub
cmp
inc
imul
xlat
cmp
mov
sahf
cltd
iret
cwtl
push
jle
pop
pop
mov
push
cmpb
je
movsb
add
push
pop
divl
popa
mov
aam
xor
mov
push
mov
and
cs
fwait
rorl
aaa
adcl
adc
shll
imul
in
imul
popa
ss
shrb
xor
xor
out
pop
pop
push
inc
xchg
jle
aas
inc
dec
ret
dec
bound
sarb
xor
push
pop
dec
and
cltd
sbb
stos
or
pushf
jge
dec
pop
and
pop
push
push
mov
adc
pop
or
cwtl
aad
push
mov
xor
mov
xchg
loopne
sbb
sbb
mov
popa
icebp
jae
ds
fildll
add
daa
mov
pop
xchg
mov
dec
jo
xchg
jp
in
pop
xchg
mov
in
cmp
pop
mov
scas
jg
das
fcmovnbe
sub
outsb
sbb
in
xchg
fwait
bound
mov
cli
pop
je
or
or
lock
ret
jo
rolb
push
je
cmp
jbe
and
test
lock
aas
imul
ret
hlt
clc
fistpl
gs
pop
pop
test
pop
push
dec
mov
push
pop
fadds
nop
int3
and
fdivrp
inc
ss
hlt
outsb
mov
pop
lods
dec
mov
inc
and
xchg
lock
jnp
ljmp
add
imul
and
mov
inc
xor
fs
xchg
mov
add
mov
ret
ss
jge
in
call
sti
test
add
xchg
mov
out
dec
aas
dec
call
add
push
xchg
bound
aam
xor
or
in
mov
movsl
or
pushf
xor
xchg
jp
movsl
into
js
and
inc
xlat
jbe
xchg
pop
iret
andl
fcmovnbe
mov
int
repnz
add
mov
lret
add
mov
aam
addl
inc
inc
sbb
scas
mov
in
lret
jmp
dec
in
ret
repz
xor
ret
dec
sarb
mov
loop
mov
mov
xor
rclb
into
inc
dec
mov
sub
les
xchg
popf
push
cmc
mov
pop
movsb
mov
xchg
lds
cmp
inc
mov
loopne
add
dec
ffree
neg
lahf
jmp
jmp
popf
das
pop
frstor
sti
fwait
cmc
arpl
dec
test
xchg
pop
ret
aas
xchg
xlat
les
sub
and
or
scas
xchg
es
mov
mov
std
pop
lock
push
mov
sub
test
inc
cmp
fdivrs
sti
lea
stos
mov
int
push
iret
add
inc
push
xor
jmp
icebp
mov
lds
xchg
push
mov
jge
inc
ljmp
adc
push
enter
adc
mov
jb
enter
mov
cmp
mov
subl
enter
popf
xchg
xchg
hlt
nop
jge
mov
inc
xchg
inc
hlt
inc
shrl
hlt
repz
adc
ljmp
cmp
icebp
or
rol
mov
xlat
lret
pop
inc
push
fs
xchg
sub
testl
jg
movsl
cmp
jbe
aam
mov
push
or
aas
dec
shl
repz
imul
arpl
xchg
psrad
movsl
cmp
cmpl
cmpsl
outsb
adc
dec
hlt
bound
or
iret
das
fstps
js
add
sub
xlat
lret
mov
pop
ret
jnp
adc
xor
cmp
out
ret
test
and
leave
orl
jns
popa
loope
pop
arpl
dec
pop
cmp
sub
and
sub
inc
jle
shll
or
push
cld
daa
call
xchg
sarl
das
lock
mov
ret
push
gs
lods
push
cmp
test
xchg
adcl
into
sub
mov
sub
out
and
pop
lods
mov
sub
and
sarb
leave
and
mov
or
pop
jbe
jnp
movsb
push
out
rcrb
push
lret
loopne
cltd
ret
cmp
sub
test
mov
add
cmp
and
add
xchg
lods
mov
nop
insb
add
sbb
xchg
jp
adc
xor
inc
adc
movsb
das
rcr
out
xchg
adc
mov
into
cmp
scas
cltd
mov
jne
and
mov
lea
pop
ljmp
sub
lds
pushf
mov
mov
out
push
repz
ljmp
jnp
fwait
and
sarl
mov
dec
ljmp
or
repz
push
in
dec
mov
mov
sahf
rorl
jne
divl
insb
cmpsb
add
fsubrs
lret
mov
and
mov
inc
lods
push
loopne
pop
xor
xchg
inc
in
push
fisttpll
fdivrl
cmp
lcall
xchg
push
xchg
scas
insb
xor
pop
mov
jl
fs
pop
lock
inc
pusha
pop
jns
xchg
and
lea
mov
fldcw
adc
inc
ffreep
test
in
mov
jb
jae
inc
xor
sub
ljmp
testb
shll
imul
movsl
cmpsb
jnp
xchg
push
xor
push
frstors
sub
jmp
adc
pop
push
mov
addl
cmp
adc
lcall
dec
mov
add
fadds
pop
shll
pop
xchg
lods
adc
orb
fidivrl
das
xchg
cmp
xlat
pop
pop
push
cmp
dec
cmp
popa
lret
in
int
sti
and
aas
rcrb
and
fistpll
mov
push
inc
and
bnd
call
add
push
push
cld
lcall
jl
sbb
loope
mov
jno
jne
push
ljmp
sub
cld
push
xor
xor
sti
scas
add
adc
sbb
push
aad
push
mov
add
push
std
push
hlt
xchg
lcall
mov
addb
insl
cmp
imul
mov
mov
cwtl
pop
clc
dec
sahf
pop
scas
mov
pop
movsl
ja
fwait
or
pop
les
loope
mov
shld
xchg
mov
gs
stos
pop
sahf
or
outsl
jnp
enter
lea
xchg
mov
movntps
popa
or
dec
fwait
xchg
jbe
xor
or
dec
test
jae
iret
test
sub
cmp
or
sbb
fistpl
sub
cmp
roll
int3
inc
cmp
lahf
in
and
mov
cmpsl
cmp
pop
or
out
hlt
mov
scas
jns
inc
inc
pop
jb
mov
testb
loopne
mov
int
lret
mov
test
dec
pop
mov
in
mov
inc
mov
loopne
xchg
add
stc
aaa
addl
cli
adc
movsb
adc
mov
adcl
lods
cmp
xor
pusha
mov
xchg
xor
jae
pop
lret
mov
mov
xchg
fst
shlb
jo
xchg
xchg
lahf
les
scas
jg
inc
mov
push
fdivs
adc
pop
stos
mov
aas
aam
mov
push
or
xchg
add
pop
pop
cltd
jle
std
jb
jns
aad
out
adc
push
pop
push
mov
dec
mul
popa
dec
out
cmp
mov
out
shrl
add
xor
xchg
add
frstor
in
imul
mov
dec
adc
cli
or
loop
mov
lock
adc
mov
xor
push
mov
inc
out
nop
dec
xchg
cmp
xor
rcrl
cmc
mov
inc
sbb
mov
data16
mov
repnz
jo
jnp
rol
stos
fsubrs
in
lcall
xchg
xor
pop
pusha
outsb
les
test
mov
das
push
pop
jge
jnp
arpl
sub
cmp
xchg
xchg
daa
insl
or
mov
rcrl
push
mov
add
or
jge
mov
or
sub
out
add
mov
test
pushf
popa
sbb
ret
cmp
js
dec
fstpl
testb
call
cvttps2pi
push
mov
mov
xchg
ret
or
dec
movsb
nop
push
cmp
mov
sub
hlt
cmp
ror
sub
movsl
pop
inc
cwtl
lret
ljmp
push
mov
ret
push
xchg
mov
pop
inc
fwait
mov
inc
mov
pop
iret
pop
jl
imul
dec
out
std
inc
fildl
jl
andl
imul
jmp
cld
jb
xor
add
dec
in
ss
push
cs
cmpl
jp
mul
xchg
inc
imul
rorb
outsb
pop
push
push
push
mov
hlt
push
in
fwait
pop
mov
and
aas
mov
cmp
cmpsb
xor
cs
xchg
push
int
push
lret
pop
push
xlat
mov
cmp
mov
and
imul
xchg
rclb
and
inc
push
test
add
or
lea
out
cmp
or
mov
pusha
lock
sub
sahf
rcl
push
mov
daa
dec
cli
rol
cmp
cld
xchg
test
lret
xchg
mov
popa
rol
ds
cmpsb
jp
out
mov
imull
test
adc
aad
mov
shlb
xchg
dec
je
cld
cwtl
sarl
repz
mov
daa
aaa
mov
stc
dec
and
pop
pushf
or
scas
inc
aaa
jo
lret
rcl
daa
add
cmpl
xchg
flds
int
mov
mov
mov
mov
xchg
inc
mov
xchg
andps
mov
xor
pop
movsb
adc
jne
adc
and
je
cltd
cmp
test
das
lods
push
jg
xor
lods
and
inc
je
push
mov
stc
addb
xchg
out
orb
dec
sbb
cld
cli
fwait
or
ret
fldenv
xchg
xor
int3
ret
pop
movsl
push
outsl
sbb
ret
fsts
shrb
in
and
test
movsb
lods
mov
adc
scas
addr16
xchg
or
xlat
fs
addr16
fs
and
fbstp
xchg
repz
sub
lods
das
dec
xchg
gs
negb
aam
leave
push
sbb
ret
ja
imul
lea
mov
shrl
fsts
push
jmp
cmp
xchg
aam
push
in
add
and
mov
xchg
sub
and
mov
sub
popa
jae
push
popf
aad
gs
outsl
outsl
insb
pop
pop
push
xchg
mov
jo
lods
adc
stc
fnstsw
add
rorl
xchg
rcrb
stos
int
mov
mov
xor
cltd
jle
mulb
mov
xor
mov
outsb
out
pop
cmpl
adc
stos
aad
int
xor
jnp
shrb
enter
imul
ficoms
cmp
aam
mov
jecxz
jecxz
shl
dec
inc
adcb
cmpb
aas
xchg
jae
in
in
dec
dec
or
repnz
lods
loope
inc
xchg
out
xchg
inc
mov
cmp
std
jmp
decl
mov
xlat
ss
out
push
and
pop
cmp
xchg
and
popf
pusha
xor
inc
adc
mov
and
cwtl
inc
les
cmpsb
mov
sub
in
pop
add
addr16
orl
sub
cltd
or
pop
movsb
jmp
lds
pop
arpl
cmpsl
orl
test
ss
mov
cmpsl
xchg
inc
lret
lcall
rolb
cli
jl
xchg
xor
and
cmpsb
jp
xchg
es
shll
jns
sbb
sahf
add
mov
mov
js
mov
sbb
sbb
aam
test
add
out
pop
lahf
loop
ficoms
sub
sub
pop
dec
lea
mov
jnp
ja
cmp
xchg
into
cli
push
or
sti
push
xchg
adcl
leave
push
mov
dec
jnp
add
in
mov
pop
xor
stos
jg
adc
sbb
xor
daa
test
xchg
jo
sbb
cmp
mov
xchg
adc
sbb
cmp
call
int3
jp
mov
ja
pop
arpl
leave
mov
and
fdivr
inc
adc
insb
jge
insl
dec
mov
pop
pop
sbb
imul
mov
sub
pusha
pop
or
test
outsb
jge
outsb
dec
and
mov
cld
daa
jbe
repz
mov
jno
test
popa
aad
adc
xor
adc
push
bound
cmp
mov
pop
test
outsb
mov
loop
xchg
xchg
or
decb
insl
push
lret
js
mov
push
pusha
ljmp
jp
pusha
fs
ret
push
movsb
xchg
lods
lds
adc
inc
clc
lods
movsb
cld
setle
enter
push
pushf
mov
lods
clc
xchg
mov
rolb
ret
lods
cmpsl
cmpl
fsts
xchg
fwait
lret
mov
mov
je
push
pop
cmp
mov
pusha
jge
cmp
insb
mov
sbb
stos
sbb
sbb
sub
testl
movsl
jns
pop
sarl
addr16
or
or
xor
dec
mov
lret
jl
fwait
mov
jbe
or
mov
push
sbb
dec
gs
dec
sub
jmp
rorb
and
jo
or
mov
cs
popa
hlt
filds
adc
jmp
adc
lea
shlb
les
pop
add
cwtl
adc
popa
dec
das
in
add
mov
sub
jge
xor
out
mov
lahf
push
cmpb
dec
cmp
dec
push
and
xor
bound
test
fisubrl
in
test
cmpsl
outsb
jg
jnp
out
push
ret
sub
into
in
pop
jecxz
dec
stc
ret
lock
push
in
sbb
jne
je
mov
call
inc
ficomps
push
cmc
sub
sbb
xor
ja
jb
pop
mov
mov
inc
mov
add
cmp
repnz
dec
fldl2e
jmp
sub
xchg
inc
in
and
loop
adc
es
xchg
sbb
nop
sub
adc
rcrb
mov
sbb
std
xchg
movb
pop
test
mov
jnp
rorb
jae
xor
dec
test
out
test
sub
cs
xchg
ret
push
cltd
and
fisubrs
hlt
xor
gs
inc
std
xchg
rcrl
xchg
or
imul
dec
std
xorb
sub
dec
lock
mov
stos
pop
sub
dec
sbb
adc
push
orb
or
jbe,pt
push
mov
push
sub
sti
add
dec
fwait
mov
rorb
and
rorl
aad
cmpl
inc
sub
mov
ss
adcb
push
mov
adc
sub
cmpsl
add
xor
adc
cwtl
xor
push
inc
pop
stc
push
dec
cmp
subb
sbb
mov
sub
outsl
test
sbbl
nop
aas
mov
push
jnp
sbb
sarl
adcb
fldenv
sub
and
mov
mov
mov
lods
dec
outsb
and
adc
das
fidivl
lock
dec
rcll
pop
adcb
dec
sub
and
in
mov
inc
mov
daa
decb
add
aas
cmpsl
repz
and
mov
push
sti
out
lret
sbb
mov
add
fiadds
mov
inc
dec
std
scas
movsl
icebp
sbb
js
out
add
mov
sub
cli
adc
xchg
ja
repz
ret
mov
add
cltd
xchg
int
push
xlat
push
sbb
sub
sbb
outsl
lea
sbb
fs
pop
push
adc
fidivl
inc
pop
add
xlat
div
iret
jmp
jae
lahf
add
pusha
pop
nop
cmp
fldt
cmp
popa
push
cmp
dec
sbb
test
and
aas
out
sbb
cmp
mov
pop
pusha
jae
or
and
lret
mov
cmp
and
test
cmpl
add
jecxz
pop
subl
xchg
pop
xor
mov
jae
daa
pop
rorb
cmp
xchg
add
pop
dec
xchg
adc
inc
push
popa
cmp
repnz
data16
loop
js
mov
mov
adc
lret
cmp
int3
mov
pop
in
or
pop
lods
imul
incb
or
add
and
ret
cmc
mov
inc
mov
popf
adc
push
addr16
jecxz
push
mov
mov
aaa
scas
clc
test
out
jge
enter
jle
lock
jbe
push
xor
push
sahf
cmpsb
jge
cli
xor
dec
push
cs
shll
sti
adc
out
mov
gs
mov
lret
sub
sub
negb
or
loope
movsl
cmp
dec
sub
in
xor
mov
xchg
sbb
dec
and
mov
mov
pop
aam
inc
dec
xor
dec
pop
nop
out
aam
or
icebp
cmp
in
add
dec
cmpb
pusha
ja
cmpsl
mov
xlat
and
xchg
inc
and
fimuls
pop
loope
lods
ret
test
cmp
or
cld
jmp
add
imul
sub
jo
xchg
inc
mov
dec
push
nop
fadds
lret
shlb
repnz
sbb
mov
daa
inc
xor
and
mov
xor
jge
int
xchg
mov
pop
sbb
and
in
sbb
cmp
in
or
adc
sbb
rcrl
es
push
enter
ss
mov
ljmp
push
jmp
xchg
test
xor
in
mov
dec
dec
and
add
cmp
bound
nop
add
xchg
pop
fwait
mov
push
popa
out
and
hlt
pop
cltd
add
lahf
dec
sbb
sbb
lgs
xchg
adc
cli
call
jo
cwtl
lret
js
aaa
push
jns
push
fsubrs
sbb
jbe
lds
jl
jecxz
stos
xchg
test
mov
or
sti
in
adc
jno
sar
jmp
pop
mov
cli
add
or
sahf
pop
mov
pop
mov
xor
popfw
jge
ficoml
lcall
mov
sbb
mov
xchg
inc
inc
jbe
jbe
mov
adc
xchg
jae
push
inc
push
repz
test
mov
std
or
je
xor
adc
sbb
psubb
xor
pop
mov
ret
in
fwait
nop
je
loop
mov
pop
pop
jnp
cli
out
or
xor
lcall
xchg
xor
xchg
fldenv
xchg
mov
mov
in
or
filds
mov
push
in
mov
iret
cmpsb
dec
jp
filds
addr16
dec
aam
lahf
mov
dec
test
dec
mov
stos
in
mov
mov
lea
cwtl
arpl
repnz
and
daa
clc
mov
dec
jnp
sbb
push
movsb
push
sub
outsb
xchg
out
cmp
test
push
sub
call
dec
sub
push
xchg
and
jae
xchg
test
xchg
test
ficompl
outsl
std
pop
add
xchg
dec
fsubrs
fisttpl
out
imul
adc
test
cmpsb
lods
push
pop
data16
sub
insb
inc
out
pop
rcrb
stc
xor
push
lret
jmp
cmp
pop
stos
lds
rol
lock
mov
fidivrs
test
mov
pop
fprem1
mov
push
jecxz
idivb
xor
roll
push
aam
sub
mov
aas
mov
insl
sub
fs
nop
test
mov
add
rolb
mov
push
jns
in
gs
cmpsl
es
jb
into
sahf
movsl
cmc
popf
shl
xchg
push
jno
test
out
jmp
sbb
addl
mov
mov
xor
cmp
js
outsb
scas
xchg
lret
mov
inc
jle
adc
mov
jns
add
cmpsb
inc
push
or
jle
test
je
test
xor
lcall
out
inc
cmp
movb
inc
adc
pop
stos
daa
mov
sub
and
sahf
rolb
mov
out
inc
bound
mov
cld
dec
push
xor
lods
xor
int
sub
mov
jo
inc
and
mov
push
sahf
sbb
xor
negb
adc
or
jns
push
ss
xchg
inc
addl
jg
add
xor
lcall
mov
dec
fistps
orb
mov
js
addl
cmp
adc
es
inc
pusha
or
mov
jns
insb
or
gs
mov
stos
inc
jge
dec
xchg
push
gs
popf
jnp
rcr
dec
cmpsl
mov
add
mov
test
mov
fisubrl
cs
mov
dec
enter
and
lcall
movsl
or
mov
mov
test
loope
mov
sahf
icebp
iret
and
mov
mov
scas
jbe
jl
in
add
inc
inc
out
shll
add
cmp
inc
sbb
pop
scas
inc
out
fcmovne
fiadds
stc
push
xor
sub
adc
mov
sti
lcall
addl
adc
data16
icebp
jo
and
ja
hlt
push
nop
leave
add
fs
ficompl
xchg
shll
mov
movsl
std
lods
and
jge
jnp
loope
ja
xacquire
das
xchg
in
xor
cmc
push
sahf
addb
and
push
ret
popa
popf
mov
jnp
jns
cltd
jp
mov
aam
hlt
inc
stc
sbb
push
stc
ror
in
sub
sbb
les
pop
mov
jns
jg
test
mov
push
adc
jbe
jge
jne
sahf
ret
loop
js
dec
dec
pop
pop
cmp
sbb
dec
daa
mov
xchg
stos
inc
cmp
jmp
push
outsb
iret
inc
pop
push
mov
push
jle
imul
add
lahf
icebp
lock
cmpsl
push
mov
cld
mov
add
jae
mov
add
or
repnz
test
ljmp
ljmp
and
push
lret
fdivrl
jno
imul
andl
out
mov
adcl
loop
lahf
fiadds
enter
adc
dec
hlt
mov
movsb
cwtl
sti
add
jecxz
addr16
shll
push
mov
sub
out
int
and
xchg
mov
mov
stc
sub
mulb
lret
test
insl
add
mov
jbe
hlt
inc
call
inc
leave
sahf
leave
push
lock
and
add
pop
push
or
movsb
adc
out
sub
ljmp
lea
xor
dec
mov
mov
mov
mov
jne
daa
jb
call
sbb
aad
shll
jecxz
sub
adc
insb
and
inc
ss
or
les
xor
out
mov
inc
or
outsb
outsl
inc
xor
clc
das
rorb
cmp
mov
cmp
std
adc
rolb
pusha
les
push
xchg
xchg
mov
aaa
jmp
pop
cmpsl
jmp
test
fnstsw
jbe
sub
movsl
xor
mov
stos
movsl
and
or
sub
aaa
idivb
popa
aam
insl
test
icebp
or
fs
push
mov
cmp
push
out
out
aas
repz
bound
rcrb
or
imul
mov
mov
xchg
test
ds
add
or
mov
dec
daa
iret
pop
insb
jge
sub
insl
mov
mov
cvttps2pi
add
sbb
mov
push
insl
insl
lret
leave
dec
insl
jb
xor
lahf
mov
lcall
push
mov
inc
cwtl
adc
or
aas
inc
add
xchg
push
pushf
jne
stc
mov
cs
xchg
inc
and
dec
mov
aad
sti
test
adc
jnp
adc
adc
xor
mov
subl
xor
hlt
jp
inc
xchg
orl
adc
xchg
mov
int3
dec
fidivrl
mov
pop
mov
pushf
adc
or
mov
push
pop
es
cmc
clc
fisubrl
mov
ljmp
mov
pop
sbb
push
xor
into
cmp
leave
fnstsw
aaa
cmp
mov
shlb
xlat
aam
rolb
mov
pop
lods
inc
call
pop
mov
add
int
imul
test
sbb
cltd
xchg
xchg
cmpsb
sbb
jbe
dec
adc
outsl
ja
dec
xchg
dec
arpl
mov
fmulp
cmpsb
sbb
outsl
hlt
movsb
add
xchg
fcomps
mulb
call
dec
xchg
or
inc
mov
test
mov
xor
xor
mov
mov
pop
xor
xor
addr16
sub
mov
jl
jmp
subl
arpl
dec
loope
xor
roll
loopne
push
mov
daa
xlat
mov
xor
addr16
or
push
and
notb
add
jg
shll
not
mov
movl
and
dec
inc
repz
jge
sub
cmc
mov
shll
icebp
mov
jge
cmp
cld
popa
scas
sub
sub
sub
popa
xor
mov
cmc
and
in
fmull
insl
sbb
cmp
shrl
inc
hlt
fiadds
xor
push
push
in
push
jae
sbb
outsb
lcall
enter
enter
je
cs
add
mov
mov
add
xor
lods
testb
pop
mov
lea
add
pop
shll
jne
fildll
push
mov
pop
add
mov
loope
push
xor
aad
mov
popa
xor
mov
add
dec
lea
call
loop
lock
es
push
push
mov
test
dec
lret
ret
out
test
jb
repz
pop
mov
movsb
add
lock
sti
in
sbbb
and
mov
mov
gs
bound
int3
mov
xlat
mov
cmp
into
push
push
or
xor
or
into
test
stc
ret
lret
rolb
mov
iret
repnz
fsubrs
int3
and
mov
xor
dec
sub
dec
cmp
fidivl
adc
xor
cwtl
pusha
out
inc
cmp
enter
test
jb
repz
mov
push
sbbb
cld
fisubl
into
cs
xor
add
into
inc
es
dec
adc
sbb
add
sub
mov
and
push
orb
pushf
sahf
push
and
adc
ficoms
mov
stos
mov
mov
lock
insl
test
ret
ficompl
aad
repz
pop
push
jns
jge
pop
xor
adc
or
and
movsl
adcl
mov
adc
movsb
cmc
xor
roll
inc
outsl
cmp
adcb
adc
lock
dec
ds
fidivs
mov
add
and
pop
aad
dec
mov
sbb
and
test
sbb
adc
addr16
xchg
mov
push
outsl
es
or
ja
pop
and
sbb
ds
inc
mov
es
outsl
push
adc
and
nop
je
fs
stc
adcb
add
in
rcrl
push
negb
es
mov
or
and
or
aaa
jg
dec
repz
scas
push
jmp
out
iret
lods
cltd
sti
dec
arpl
and
in
addr16
mov
dec
sbb
jno
adc
mov
jns
cmc
ret
js
icebp
cld
pop
adc
int3
inc
repnz
pop
push
xchg
pop
std
xchg
and
popa
icebp
mov
add
and
xor
repz
cmp
xchg
lea
pop
inc
jecxz
out
push
lahf
leave
sbb
push
and
cs
inc
aad
sub
sbb
ss
jecxz
dec
pop
add
mov
mov
sbb
add
cltd
push
fnstsw
int
jbe
out
and
inc
insb
and
fcompl
mov
mov
dec
mov
aaa
fcompl
xchg
mov
ss
into
bnd
pop
loopne
mov
pop
jg
mov
arpl
mov
push
cmp
inc
cmp
dec
and
or
jle
push
ja
or
aaa
adc
jp
or
xor
dec
or
shll
popf
sub
pushf
cltd
add
push
cmp
out
sub
cmc
pop
inc
xor
outsb
mov
mov
sbbl
inc
pop
mov
insb
xor
fwait
in
add
add
adc
pushf
mov
inc
test
push
sub
ljmp
test
push
je
adc
adc
dec
leave
adc
dec
fisubrl
inc
jo
xchg
pop
dec
cwtl
adc
icebp
mov
cmp
les
ss
ss
lahf
pop
aaa
fnstcw
mov
out
ds
in
add
mov
mov
sub
arpl
sbb
xlat
lods
imul
pop
dec
lock
inc
xchg
or
and
xlat
popa
jp
inc
dec
dec
insl
cmp
mov
pushf
mov
and
mov
dec
mov
pop
mov
add
mov
pusha
repz
pop
out
and
push
test
int
sbb
mov
iret
adc
imul
in
fwait
mov
fcoml
inc
loop
roll
dec
pushf
aaa
add
jno
lods
jnp
jp
mov
xchg
nop
loopne
repnz
lods
dec
lret
andl
mov
cmp
hlt
lret
leave
mov
lcall
test
push
jno
sarb
leave
fnstcw
mov
and
insb
ret
pop
sub
lcall
hlt
sbb
andb
popa
and
fisttpl
ficoms
mov
aam
lcall
movsb
dec
cmpsl
lret
jno
pop
mov
insl
inc
arpl
notl
sub
scas
mov
loope
mov
repnz
es
or
test
lahf
shufps
sbb
fstpt
and
jo
lret
lcall
aas
sub
pop
xchg
loopne
push
add
ds
test
mov
or
iret
xlat
push
jp
mov
pop
jne
das
divb
mov
enter
int
push
fmul
dec
xor
adc
test
adc
jle
mov
jge
shll
inc
add
push
leave
mov
out
mov
lock
mov
push
xchg
push
pop
ret
pop
repnz
jnp
xlat
mov
and
mov
adc
xor
mov
dec
popf
lcall
xor
insb
loope
xchg
pop
jbe
sbb
test
xchg
xchg
call
cmovbe
jbe
jmp
ljmp
ljmp
cmpsl
or
movsl
pop
mov
mov
insb
dec
jae
rol
jmp
xchg
or
imul
movsl
ret
fucompp
ja
mov
arpl
nop
lret
inc
push
sub
add
comiss
xchg
mov
sbb
fbstp
pusha
push
pushf
not
jnp
cld
xchg
aaa
adc
adc
cltd
daa
repz
out
test
sti
into
mov
psrlq
xor
push
inc
sbb
sbb
enter
test
stos
testb
lret
int3
ja
push
outsl
cld
aam
aaa
mov
cli
mov
rdmsr
sbb
int
pop
out
cmpsb
adc
out
sub
rcr
int3
jl
cld
jmp
mov
repz
clc
inc
lods
jecxz
mov
mov
push
jecxz
sahf
lret
bound
lds
fs
adc
inc
fisttpl
xchg
sub
mov
hlt
lcall
mov
mov
not
ljmp
inc
fnsave
addr16
aas
sbb
int3
sahf
push
push
dec
push
ljmp
and
loope
pop
dec
lock
cmp
js
mov
fsubr
lods
repz
pop
adc
test
decl
js
mov
pop
xor
mov
or
push
sar
insb
pushf
cld
push
dec
add
jmp
dec
mov
frstor
aam
dec
push
dec
jbe
pop
push
jnp
cmp
data16
in
and
xchg
sub
stos
in
popl
xlat
pop
xchg
push
clc
jg
add
dec
fwait
in
cmp
inc
mov
dec
test
inc
or
and
mov
sub
push
rcrb
or
push
or
out
sub
loope
pop
inc
lock
mov
shrl
xchg
xchg
fistl
out
xor
pop
lahf
in
lock
jno
inc
push
out
pop
push
aad
mov
cli
fs
ret
mov
movsb
inc
cmp
outsl
fdivl
sub
add
dec
mov
mov
cmpsl
xor
negb
jbe
es
repz
cmc
lcall
push
icebp
push
test
xchg
ret
or
test
and
jmp
sbb
or
lock
leave
jbe
sub
mov
into
popf
sbb
iret
into
imul
popa
js
push
mov
lret
es
dec
sub
insb
push
jb
add
inc
mov
je
loopne
xchg
pop
repnz
es
dec
shll
repnz
sahf
push
mov
test
mov
rorl
sahf
xor
enter
mov
stos
dec
addr16
popa
pop
fsts
jae
cmp
adc
ja
lds
lcall
mov
xchg
sub
fiadds
adc
fnsave
cmpsl
inc
xchg
icebp
loopne
or
leave
mov
xchg
ljmp
lret
pop
dec
cwtl
mul
mov
xchg
imul
cmpsb
jmp
out
sahf
adc
add
hlt
mov
call
inc
subb
outsl
mov
xor
icebp
pop
sub
mov
mov
pop
lret
xchg
arpl
scas
push
repnz
movsl
xor
sarb
mov
aad
push
add
sbb
mov
iret
mov
lea
lcall
enter
pop
jne
jb
add
int3
fs
das
daa
dec
popf
test
inc
fidivl
repz
fmulp
jb
cld
outsb
push
inc
test
mov
les
add
add
fmull
jmp
or
sar
cmpb
xchg
adc
out
inc
push
jo
andl
lahf
xlat
clc
movsl
fdivrs
pop
dec
hlt
pop
call
xor
add
xchg
imul
movsb
int
dec
ds
adc
push
mov
or
je
xlat
das
adc
imul
xchg
ficoml
outsb
jne
frstor
sarl
cmp
popa
and
pop
dec
pop
xor
inc
add
fs
inc
dec
hlt
inc
iret
mov
int3
shr
dec
js
sub
add
lcall
sub
idivl
ja
leave
dec
jno
xor
imul
fnstsw
mov
sbb
xor
or
sub
jbe
pop
les
push
inc
fs
xchg
das
cmp
mov
daa
mov
pop
fidivrs
jmp
mov
pusha
inc
pop
lret
cmpsb
iret
sbb
int3
inc
das
xchg
pop
popa
pushf
xor
pop
mov
cmp
adc
mov
decl
rcrl
ficompl
cmp
jns,pt
in
cmp
lret
in
add
xor
dec
andl
repz
lret
cwtl
sub
sbb
imul
cli
scas
repz
or
dec
ds
arpl
test
addr16
jbe
outsb
push
cmp
and
je
mov
pop
cmp
xchg
push
insl
sbb
orl
ror
push
aaa
jno
stos
cmpsl
sbb
sahf
sti
lds
subb
xchg
cld
and
add
jge
pop
aaa
sbb
cmpsl
shll
adc
iret
adc
test
pop
mov
jne
outsl
les
cmp
inc
add
and
fldenv
repnz
xchg
popa
hlt
pop
cmp
bnd
jge
cs
pop
cmp
rcll
pop
orl
bswap
push
in
sbb
pop
mov
test
out
mov
sarl
imul
sub
in
xchg
mov
sub
fistps
cmpl
ds
and
aas
xchg
addr16
lods
mov
mov
sub
ja
pop
sub
movsb
mov
lea
xor
cmpb
lcall
in
inc
mov
pushf
clc
cld
add
data16
xchg
sub
fs
pop
pop
mov
adc
pop
hlt
pop
in
push
xor
mov
int3
loopne
shlb
bound
mov
jne
inc
pop
icebp
aaa
js
xorl
loopne
jo
add
jl
adc
lods
sbb
push
and
push
xchg
xchg
js
lret
sahf
push
sbbl
dec
sub
dec
push
push
or
int
popa
clc
pop
push
loop
lods
sahf
ret
mov
insb
ljmp
xor
out
out
aaa
pop
pop
fstl
dec
sbb
repz
in
aaa
push
jecxz
je
addr16
lds
mov
data16
aas
aad
dec
popl
xchg
in
dec
das
pop
mov
inc
pop
push
jecxz
add
shl
popf
cmpb
cmpsb
jno
lret
push
cli
aas
xchg
mov
loope
mov
filds
test
sub
movsb
cmc
pop
jne
push
bound
gs
and
mov
mov
dec
adc
scas
and
aas
int
movsl
mov
mov
cmpsl
ss
lea
push
insl
push
adc
rolb
pop
xlat
add
mov
fsubp
pop
insl
out
add
dec
loope
add
pop
mov
and
mov
insl
sub
mov
add
jnp
comiss
idivl
push
popf
jl
stc
fcomps
mov
adc
aaa
std
test
mov
in
repz
pop
dec
mov
ds
pop
and
call
cmpl
mov
xchg
dec
test
lea
pop
loope
sbbl
jl
clc
repnz
rorb
xor
jne
mov
pop
jmp
dec
rolb
xor
add
push
sbb
jne
lock
jno
cmpsb
or
outsl
mov
and
test
cltd
mov
mov
movsl
jmp
push
mov
fsubs
lahf
dec
mov
es
and
mov
pop
pop
pop
jmp
ret
rolb
cmp
lea
inc
loopne
dec
gs
fs
jno
call
in
xchg
sub
or
fdivrp
push
xor
bound
cmpsl
add
das
fwait
paddq
lods
icebp
and
or
clc
xor
imulb
pop
mov
imulb
pop
pop
subb
shlb
push
mov
lock
jae
cmp
dec
add
xchg
insb
inc
leave
lock
mov
or
aad
jmp
orl
jl
leave
jmp
loopne
test
pop
jg
pop
cwtl
adc
sbb
aaa
pop
xor
out
leave
push
jae
fnstenv
fcmove
mov
mov
push
add
dec
shrb
lret
or
sbb
mov
mov
xor
jb
xchg
sbb
enter
lods
ror
xorb
lods
and
mov
jae
call
or
mov
xchg
addr16
push
mov
mov
sub
sub
shll
stos
stc
fsubs
sahf
cmpsl
movsl
mov
repz
lret
dec
les
sub
inc
or
xchg
mov
fcompl
jno,pn
add
push
or
mov
scas
add
push
lahf
in
popf
imul
xor
loopne
sbb
sub
add
test
pushf
xor
push
fcmovne
mov
scas
pop
ja
xchg
dec
popa
das
dec
add
jne
inc
add
sbb
cwtl
adc
cld
je
call
push
mov
scas
in
popf
sti
aam
dec
mov
movsl
je
inc
pop
lcall
adc
leave
pushf
dec
shl
loope
negb
xor
lahf
xor
mov
fwait
jno
mov
xchg
sub
sbb
lds
aaa
pop
push
xchg
pop
dec
shlb
ss
pop
ficoml
mov
fdiv
clc
fsubrs
vcvttps2dq
frstor
das
xor
add
inc
in
sbb
sbb
and
fucomi
repz
ret
inc
jl
out
dec
stos
lcall
enter
push
mov
jne
pop
inc
mov
mov
cld
pop
xchg
xchg
ljmp
mov
jge
fistpl
ljmp
jnp
and
test
or
jno
sub
pop
out
cmpsb
int3
mov
add
push
dec
and
adc
shll
out
jns
loope
and
sahf
sbb
push
scas
aam
jl
das
add
mov
shlb
mov
sti
jle
ss
pop
sbb
push
push
adc
les
aam
and
les
sbb
cmp
add
or
cld
mov
cmp
fmull
pop
into
pop
stc
lcall
jo
mov
pop
sbb
mov
imull
js
jmp
dec
adc
cmpb
mov
les
push
loopne
xor
sbb
adc
add
sub
sub
imul
mov
test
movsl
lock
pop
mov
lea
add
jno
decl
js
gs
mov
or
orl
imul
pop
add
push
rol
stos
aam
and
ret
iret
dec
outsb
shr
sbb
negb
icebp
ja
enter
test
mov
pop
aad
add
maxps
call
popf
xchg
dec
lret
xchg
ljmp
popa
xor
out
ret
lods
call
xor
cmp
mov
call
jmp
pop
cs
dec
rorl
test
lods
in
js
push
pop
out
cltd
into
imul
fwait
mov
push
xor
mov
test
fldcw
test
fs
ljmp
stos
mov
addr16
imulb
fucompp
xor
xor
out
pusha
or
scas
sub
call
xor
test
pop
cmp
mov
int
lcall
and
les
ljmp
push
das
ds
outsb
mov
pop
add
mov
popf
out
xchg
jbe
fiaddl
fidivrs
sbb
lea
or
mov
sbb
outsb
inc
out
pop
sub
int
xchg
mov
mov
push
push
call
ja
loope
or
and
in
pusha
in
cmpsl
mov
and
das
gs
sub
mov
mov
xchg
stos
mov
jle
stc
or
lods
pop
mov
inc
mov
arpl
notb
mov
push
outsl
arpl
stos
or
xchg
sbb
adc
mov
movsb
cld
ljmp
mov
sub
mov
and
add
mov
adc
sbb
mov
je
jae
jnp
in
jl
inc
or
push
nop
dec
movsb
and
les
jmp
push
minps
add
ss
pop
andb
fcoms
xchg
push
lods
loope
mov
stos
sbb
addr16
dec
in
fistpl
stos
mov
outsb
andb
sub
rcrl
jl
mov
jbe
push
xchg
jle
pusha
or
ss
push
lods
scas
call
mov
loope
push
cli
jae
inc
dec
push
jno
sub
scas
and
push
lret
add
fptan
pushf
or
aad
or
div
call
sahf
out
or
add
add
mov
and
push
dec
addr16
jmp
xchg
mov
jnp
testl
cs
pop
mov
xchg
pushf
sub
dec
mov
rcrl
aad
jb
ds
leave
lds
stc
cwtl
fbstp
mulb
pop
xchg
jmp
and
outsb
push
fimull
or
gs
ja
mov
push
cmp
cmc
insb
icebp
jmp
es
aas
int3
sub
in
mov
sbb
loop
jp
sahf
and
or
jnp
push
mov
hlt
jecxz
xchg
sbb
xchg
cmp
push
jg
push
lcall
scas
inc
mov
int
mov
jae
and
pusha
das
out
loope
andl
insb
ror
mov
notb
dec
mov
je
mov
xor
inc
pushf
mov
mov
cmpsb
xor
loop
push
iret
daa
dec
clc
das
inc
mov
in
push
sbb
loopne
f2xm1
and
fistpll
out
push
clc
adc
and
mov
enter
call
stos
adc
adc
adc
outsb
sbb
add
and
add
cmp
loop
repnz
les
sbb
int3
push
inc
iret
out
push
sub
or
out
iret
sub
int3
jae
orb
push
outsl
sarb
in
inc
mov
movsb
push
cltd
mov
addr16
das
jnp
notl
xor
xor
add
mov
lcall
aam
xor
out
pop
jmp
es
inc
enter
inc
in
mov
in
in
ror
xchg
lret
and
iret
push
cmpsl
insb
mov
out
mov
inc
inc
dec
addr16
enter
cwtl
nop
jo
aam
pop
push
int
adc
std
xchg
jbe
sub
lock
mov
andps
ljmp
repz
or
arpl
fdivl
xchg
and
cmc
pop
mov
and
ja
xchg
cmp
lret
cmp
and
pop
dec
es
cmc
pop
adc
lock
xor
inc
mov
mov
out
ds
mov
ss
inc
std
pop
fsub
nop
stos
pop
xor
mov
push
aaa
jle
mov
cmp
or
push
aad
xchg
movsl
imul
mov
pop
jnp
mov
cmp
insl
or
in
mov
xchg
loop
add
mov
mov
jecxz
xor
shrl
outsl
mov
inc
nop
xor
addr16
jb
pop
test
inc
push
data16
in
sysexit
call
mov
iret
sbb
sub
les
scas
xchg
fs
dec
les
push
and
in
in
mov
mov
add
ss
and
dec
inc
int3
lea
adc
sub
mov
ret
ret
cli
orb
fwait
pop
add
mov
insl
in
push
out
inc
sbb
pop
push
sbb
or
sub
addr16
aas
std
inc
mov
movsb
mov
lds
js
and
lahf
push
imul
xor
and
notb
outsb
push
bswap
mov
adc
sbb
jns
add
pop
rorb
xchg
test
pusha
fidivl
mov
in
jg
cld
sarb
pop
dec
popa
cmpsb
sbb
mov
jns
jle
icebp
call
or
aas
xchg
cld
dec
test
push
sbb
fcomip
pop
jb
sti
std
popf
test
jp
iret
fs
pusha
jmp
dec
cmpsl
in
jl
pop
sbbl
lock
inc
xor
push
into
or
cwtl
push
ret
in
push
push
inc
jnp
add
pop
in
test
pop
popf
clc
pop
mov
dec
mov
lock
and
mov
sbb
push
loope
dec
xchg
test
sbb
jns
lret
fdiv
and
ficomps
cmc
fcoml
xor
sar
adc
xchg
bound
fs
push
cmp
xchg
add
jno
pop
jne
mov
cmp
into
jl
sub
cwtl
rorl
popa
mov
pop
sbb
popl
sbb
aad
or
lods
jle
cld
into
xchg
sub
repnz
xchg
popf
scas
scas
add
fisubs
adc
pop
dec
cmp
pop
jns
cwtl
add
jno
push
mov
jae
mov
hlt
ss
loope
xor
imul
xchg
call
cmp
fildl
mov
inc
popf
mov
bound
ror
hlt
adcl
mov
cmp
test
ljmp
cmp
xchg
xchg
insl
jg
push
loopne
lret
cmp
xchg
addr16
and
rorb
jbe
xor
pop
repnz
or
pop
and
dec
loop
jle
shrb
xchg
and
mov
fstps
test
dec
aaa
push
mov
mov
insl
cmp
das
popa
sub
addb
dec
add
xor
jmp
and
inc
sti
xor
mov
pop
je
stos
add
movsl
pop
sbb
cmp
inc
dec
or
shrl
mov
jns
ret
push
jge
in
dec
xor
int3
icebp
dec
cmp
mulb
fisubrl
add
mov
test
sti
call
call
jecxz
sub
adc
hlt
jmp
pop
mov
push
inc
mov
dec
push
jb
loope
hlt
push
xchg
lods
pop
sbb
jle
pop
clc
xchg
mov
cmp
push
push
xor
mov
xchg
jae
sti
nop
outsb
inc
sbb
scas
mov
or
adc
sub
ss
mov
movsl
enter
inc
sbb
sbb
inc
mov
lcall
jle
daa
call
clc
sbb
enter
mov
subb
pushf
sub
adc
sub
hlt
mov
in
lods
mov
xor
cmp
mov
sub
xchg
imul
inc
mov
jmp
cwtl
mov
lret
cltd
push
or
rcll
aad
sub
sbb
mov
imul
pop
out
push
test
xchg
cmp
jnp
jnp
push
inc
inc
push
add
push
shrb
mov
pop
mov
ljmp
in
add
adc
push
aam
jmp
bound
dec
scas
outsb
push
popa
enter
ret
sbb
lcall
inc
xor
xor
mov
je
sbb
outsl
mov
adc
movsb
mov
cs
xchg
cmp
in
mov
jle
aad
sbb
popf
es
dec
push
jl
out
jae
xchg
fwait
sbb
je
lcall
add
xchg
ja
stos
scas
or
in
mov
sub
inc
dec
scas
inc
xlat
xor
xchg
scas
dec
or
jmp
dec
and
sub
pop
aas
pop
outsl
loope
push
nop
xchg
aam
pop
adc
push
sub
xor
popf
cs
dec
sti
push
mov
das
out
mov
dec
stc
pop
cmp
mov
push
pop
nop
test
xor
lods
jecxz
insl
fidivrs
fwait
leave
mov
mov
jb
les
xlat
sbb
add
jg
cs
iret
insl
stos
or
cmp
lret
dec
sbb
and
fimull
or
push
imul
and
xchg
xchg
pop
pop
shl
icebp
mov
mov
and
pop
push
dec
jns
jmp
xor
xor
cmp
stos
mov
imul
pop
mov
lds
push
adc
add
and
mov
arpl
mov
clc
sahf
mov
pop
mov
push
addr16
add
add
aam
popf
adc
mov
push
mov
test
push
shr
or
clc
das
sbb
mov
enter
frstor
push
and
push
mov
outsl
push
jb
data16
cltd
xor
mov
insl
jo
icebp
mov
inc
jb
and
aaa
aam
jl
fistl
inc
cmp
iret
lea
adc
ret
dec
cmp
cmp
cli
add
fistl
inc
cmc
pop
pop
mov
test
imul
adcb
clc
ficoml
fisttpl
or
pop
sub
jle
daa
inc
lahf
jle
fldt
ljmp
mov
pop
jo
aaa
push
adc
lret
dec
mov
ljmp
cmp
cmp
inc
das
cmpsb
mov
mov
arpl
gs
push
dec
popf
out
popf
jmp
inc
popaw
inc
aas
dec
pop
dec
jne
jae
jp
aad
pop
stos
pop
lret
fsubrl
test
stos
gs
scas
cmpsl
addl
cmpsb
cltd
mov
adc
dec
test
sub
daa
push
dec
outsl
xorb
jb
pop
popf
es
xchg
out
mov
int
lahf
rcll
lds
stos
mov
mov
les
sub
cmp
rcrb
mov
sbb
sub
shl
jge
shlb
push
xor
cmpsb
mov
bswap
cmpsl
xchg
idivb
push
jecxz
adc
int3
add
rcll
sarb
xor
sub
movsl
inc
mov
testb
stc
pop
enter
pop
sbb
dec
mov
and
and
cli
sbb
sub
dec
mul
and
dec
mov
es
rcr
mov
out
jl
cmpsl
int3
decb
inc
out
sub
pop
outsl
dec
xchg
and
mov
or
xchg
xchg
jle
cmp
add
sahf
mov
bswap
dec
adc
pop
fdivr
repz
add
data16
ret
hlt
cwtl
mov
xor
jne
push
js
mov
adc
bound
movsb
mov
sbb
xchg
sbb
pop
mov
pop
mov
ja
xor
xor
cmp
arpl
rcr
mov
dec
mov
loop
mov
out
push
and
adc
addr16
rcrl
jb
mov
jecxz
jle
inc
add
lahf
mov
or
add
and
and
mov
in
pop
jb
ret
and
xor
lods
in
stc
push
mov
sbbl
mov
push
mov
sub
mov
jmp
cmp
xor
xor
addr16
and
repnz
pop
adcb
sbb
lds
mov
pop
shlb
adc
mov
adc
jne
fdivrl
and
add
aad
sub
sbb
ret
jmp
mov
lahf
or
fdivrl
test
popf
sub
into
aam
cmp
cmp
cmp
jge
jecxz
xchg
add
adc
movsl
int
aad
add
sbb
call
std
icebp
dec
stos
jo
fistpll
xchg
imul
inc
sub
dec
sbb
out
sbb
scas
dec
mov
fucomi
lock
mov
xchg
mov
xchg
cmpsb
and
movsb
xchg
cli
iret
sbb
insl
dec
sub
pop
in
inc
jcxz
cmp
in
out
lret
mov
pop
nop
mov
pusha
shll
sub
mov
mov
inc
das
sbb
add
mov
pop
out
add
and
push
lods
push
adc
mov
outsb
lcall
es
sbb
jne
or
mov
mov
mov
jnp
push
mov
push
lret
push
adc
cmp
sub
mov
sbb
in
stos
outsl
mov
stos
or
cmp
xor
xor
and
movsl
cmc
jl
jnp
bound
sahf
xlat
dec
and
pop
or
lock
or
roll
movsl
aaa
movsb
pop
xorb
sub
ret
test
sti
dec
loop
test
mov
bound
mov
ja
test
and
adc
inc
ret
cmp
and
shlb
mov
dec
popa
cld
aad
jb
mov
lahf
push
sbb
xchg
aaa
jnp
or
sub
call
adc
mov
pop
repz
jne
int
jo
into
pop
stos
or
bound
pop
pop
rclb
je
imul
mov
fisubrs
out
gs
pop
dec
xchg
mov
fs
mov
jmp
je
ljmp
push
push
jnp
nop
shlb
mov
xchg
xchg
mov
out
jge
pop
adcb
js
roll
fbld
test
sti
stos
lret
in
push
cmp
out
ds
add
pusha
gs
imul
pop
or
divb
sbb
lahf
jge
push
movsl
jge
jge
jns
cmp
aas
sahf
mov
std
andl
pop
xchg
jbe
ss
into
cmp
and
sub
data16
pop
hlt
scas
enter
push
inc
or
cwtl
xchg
adc
cld
sub
insl
sbb
push
mov
lcall
lcall
insl
jne
test
inc
stos
test
ds
fwait
outsl
mov
cld
cltd
or
scas
mov
fmuls
fwait
push
loope
xor
xchg
sbbl
mov
hlt
push
inc
jbe
aas
aaa
stc
mov
cmpsl
dec
clc
outsl
stc
stos
icebp
mov
jns
dec
fdivl
push
cli
enter
cmp
push
out
ret
and
mov
loope
and
sub
shrl
rcll
add
sub
lcall
inc
or
popf
jl
add
outsb
cs
out
add
popf
add
sub
or
mov
bound
xchg
inc
clc
iret
in
ret
bnd
ficomps
cmp
imul
sti
jno
shrb
dec
rcll
mov
iret
cmp
jbe
pusha
cmpb
adc
subb
fisubs
arpl
push
inc
sub
mov
fadds
adc
pusha
mov
push
ret
movsb
lahf
iret
add
mov
xorb
cmp
mov
movsl
mov
jle
bound
add
xchg
sahf
lock
jb
inc
cli
jle
hlt
add
jl
mov
adc
mov
xor
sti
ror
pop
in
outsb
lret
and
insl
lods
lods
adc
adc
add
pop
jge
cmc
lock
in
pop
adc
ret
dec
add
sbb
sbb
push
pushf
push
pop
data16
jmp
inc
push
add
enter
gs
pop
jae
nop
cmp
and
add
mov
pushf
shll
les
imul
jmp
in
mov
xchg
rolb
xor
adc
or
jl
inc
pop
sub
cmp
mov
rol
gs
enter
mov
mov
or
pop
out
shlb
cs
jl
sahf
movsl
in
pop
or
leave
jge
gs
inc
movsl
dec
xchg
pop
es
or
je
mov
cmp
push
jl
fbstp
insl
xor
in
fwait
cmp
rcr
pusha
push
cmp
mov
cmp
dec
lods
leave
bound
add
inc
sub
enter
push
inc
aas
into
cmp
cmp
orb
into
sub
add
mov
cmp
pop
out
in
add
scas
rcrl
sub
or
insb
xchg
sub
mov
jb
mov
gs
xchg
stos
jb
dec
jl
push
in
std
lret
sbb
hlt
add
ret
adc
mov
test
jo
fcoms
jns
push
int3
mov
ret
cli
sub
mov
mov
mov
outsb
cltd
jg
cld
scas
lds
jne
adc
jp
push
mov
fwait
mov
je
loopne
sbbl
xchg
xor
outsb
mov
in
pop
movsb
js
bound
into
mov
dec
mov
cltd
mov
aaa
fdivl
jns
pop
jnp
std
cltd
jo
sub
xchg
ret
out
dec
daa
in
inc
mov
cmp
js
sbb
fmuls
adc
je
loope
inc
mov
insb
sbb
repz
sbb
leave
sti
xchg
and
stc
nop
push
pop
lods
sub
sub
sbb
jg
mov
jnp
es
cmp
jnp
dec
sbb
rsm
adc
add
cli
jne
adc
or
jbe
mov
lret
push
in
xchg
int3
lahf
outsb
adc
sub
ljmp
cwtl
jecxz
sbb
or
adc
xor
mov
testl
test
in
xor
mov
pop
daa
inc
in
cmp
pop
sub
and
imul
mov
xor
lock
add
imul
lea
mov
or
mov
mov
cli
iret
das
inc
mov
push
pop
clc
add
gs
inc
jno
pusha
enter
cmpl
pop
cmp
and
arpl
mov
je
int
sti
sub
sub
lock
mov
cmp
pop
jle
adc
aas
or
popf
adc
call
and
enter
ljmp
scas
mov
mov
jg
clc
sahf
bound
inc
xchg
jecxz
cmpsb
ljmp
mov
sbb
dec
dec
dec
loopne
mov
adc
push
data16
xchg
dec
xchg
push
fsts
ret
mov
hlt
xchg
mov
push
lods
gs
test
adcl
les
scas
sar
aas
and
pop
lock
aad
jbe
js
outsb
pop
bound
ja
push
xchg
xor
sub
mov
in
incb
lock
outsb
lods
sbb
insb
or
sub
repnz
dec
xchg
add
cmp
mov
xor
aas
add
outsb
xchg
mov
call
mov
adc
mov
add
mov
sti
sub
call
daa
orl
filds
ret
mov
ret
sub
xor
adc
mov
mov
std
and
sar
adc
outsb
and
call
add
test
loope
into
pushf
fnsave
xor
mov
dec
arpl
ret
dec
pop
push
cmpsl
movsl
cmp
aad
scas
mov
jbe
push
inc
push
add
mov
xchg
popf
and
mov
lock
loopne
xor
iret
aaa
leave
inc
xchg
cmp
out
andb
fadds
jmp
adc
sub
xor
sarl
leave
xchg
sahf
bound
fdivl
cmp
jg
bound
adc
aas
cmp
nop
leave
test
cmpl
add
ljmp
or
test
add
push
mov
fwait
jno
lds
push
and
insb
xchg
rcll
inc
push
shr
push
insl
push
nop
xchg
or
adc
adc
jb
pushf
hlt
and
mov
loope
fwait
xor
dec
hlt
mov
add
adc
cmc
xchg
push
fldt
sub
arpl
add
mov
enter
pop
dec
adc
jnp
shll
mov
jp
sbb
and
pushw
cmpsb
sbb
adc
push
and
hlt
fcmovne
adc
lcall
dec
outsl
inc
mov
jecxz
inc
inc
imul
pop
popf
stos
jne
clc
popf
sbb
sahf
xchg
inc
lock
mov
push
imul
cmp
xor
lea
aas
push
cmp
push
daa
jl
push
loopne
jbe
cmovge
push
mov
xchg
test
sbb
and
pop
jl
mov
sub
int
mov
xchg
dec
add
or
mov
sub
mov
push
mov
inc
data16
js
repnz
fnstsw
gs
or
daa
push
jecxz
mov
dec
adc
out
and
or
jmp
push
call
lret
mov
mov
sub
call
stos
iret
sbb
out
in
inc
mov
and
fcoml
add
mov
in
and
mov
inc
imul
sbb
xchg
in
mov
sahf
in
push
out
push
mov
es
sbb
sub
pop
jp
dec
or
sti
inc
ljmp
std
jb
movsl
aas
fsubs
loop
sbb
mov
lds
cmp
pop
push
mov
mov
lcall
repnz
mov
ss
andl
pop
mov
int
lods
add
dec
movsb
lret
mov
aad
mov
sti
push
pop
add
jmp
mov
gs
jnp
xor
mov
sahf
dec
out
push
push
inc
xchg
adc
outsb
mov
sahf
push
leave
add
pop
lret
ds
xchg
jl
ds
cwtl
outsb
cmp
mov
fwait
sub
push
push
nop
cmp
popf
lods
mov
adc
mov
ss
mov
movsb
test
popf
jb
sub
cltd
dec
hlt
sahf
cmp
notb
sahf
push
cmpl
sub
out
lea
mulb
jl
lea
push
pop
cmp
pushf
add
lds
shrl
dec
mov
iret
cltd
fwait
mov
mov
mov
dec
or
shll
jmp
xchg
xchg
scas
cmp
lods
and
sbb
sbb
les
cmp
fbstp
or
sbb
fistl
pop
pop
push
repnz
inc
mov
fmulp
jnp
insl
lods
ret
push
ja
lods
iret
and
aam
cmp
dec
inc
sbb
daa
shll
xchg
adc
inc
mov
fwait
mov
nop
push
call
out
pop
outsl
sbb
jecxz
mov
shlb
xchg
jmp
andl
popf
test
out
test
xchg
or
mov
bound
outsl
mov
or
inc
sub
jecxz
mov
fimuls
jae
push
pop
cmp
clc
clc
inc
add
js
sub
outsb
ljmp
mov
pop
sahf
fdiv
jne
cmp
jmp
mov
pop
xchg
dec
call
std
jg
dec
pop
sub
cli
dec
sbb
push
fs
call
jbe
and
inc
mov
or
cmp
in
roll
insl
sbbl
lret
push
jo
jp
pusha
pop
movsb
or
aad
jmp
mov
cmp
dec
imul
inc
outsl
nop
cmp
jbe
imul
add
inc
adc
dec
outsl
inc
mov
ss
inc
sbb
and
fildl
jnp
arpl
mov
jno
add
gs
fcomps
mov
rorb
xchg
imul
sub
stos
dec
ljmp
xchg
adc
cli
jg
aam
and
std
fmull
mov
enter
cmc
movsl
sub
xor
inc
repz
mov
int3
hlt
insb
adcb
cmp
leave
mov
imul
push
xor
mov
push
cli
stos
mov
or
std
es
mov
pop
xchg
lds
nop
pushf
cli
push
push
sub
xor
pusha
cmp
inc
or
insb
iret
mov
lods
imul
jge
jno
imul
enter
insb
adc
push
or
insb
loop
jb
fidivs
and
ret
les
dec
mov
or
sbb
dec
add
dec
mov
push
push
mov
cld
add
sbbl
icebp
ds
dec
ret
mov
push
inc
adc
movsb
inc
lods
std
orb
lds
adc
push
mov
pop
and
xor
xor
cld
add
inc
daa
sbb
xchg
andb
inc
push
add
dec
int3
sub
and
sub
and
and
add
orl
push
lret
and
stc
adc
lea
popa
and
cltd
and
sub
jmp
push
test
sub
push
aas
and
push
xor
add
icebp
mov
js
xchg
push
ja
leave
and
dec
or
xchg
mov
and
pop
dec
pop
mov
sbb
int3
inc
jne
pop
xor
stos
mov
xchg
repnz
aad
mov
sbb
sti
int
push
jp
pop
fisttpl
pop
sbb
or
jmp
mov
mov
ljmp
jp
shlb
sbb
xchg
mov
sub
pop
stos
push
shrb
les
mov
adcb
sbb
jecxz
cmp
out
ret
sbb
lcall
sbb
xor
movsb
mov
mov
test
fidivrs
cmc
cmc
push
jbe
es
les
stos
sub
stc
stc
cwtl
bound
xchg
or
scas
shll
pop
notl
and
jp
pop
push
fdivrs
pop
and
pop
ret
adc
pop
outsl
inc
or
stc
lea
sbb
cld
fs
ja
arpl
fisubl
cmp
int
addr16
divb
pop
addr16
cmp
jo
xchg
adc
add
shl
movsb
popa
lret
or
mov
mov
mov
nop
push
lds
stc
arpl
insl
fcmovnu
xchg
push
sub
filds
jmp
cmpsl
loopne,pt
out
mov
stc
mov
aaa
push
test
mov
rclb
push
mov
bound
scas
xor
jns
out
xchg
insl
stc
in
add
or
sbb
adc
insb
rcl
xor
push
jp
lcall
add
cmp
mov
mov
jecxz
mov
sub
mulb
or
pcmpeqb
fbld
push
push
lds
shl
jl
and
cmpsb
inc
lods
icebp
dec
out
sbb
cbtw
sub
jns
jmp
dec
sub
mov
nop
mov
xor
clc
ret
jmp
pop
push
shlb
into
push
insl
mov
inc
in
dec
ljmp
mov
add
into
xor
cmpsb
inc
xchg
fidivs
dec
xchg
push
fidivrs
cmp
xchg
lock
rcr
or
mov
xor
clc
jge
orb
pop
insb
mov
mov
mov
add
incl
push
jno
push
xor
sahf
rorb
in
sbb
sub
mov
dec
adc
ds
cmpl
orl
or
sbb
popf
arpl
push
adc
stc
mov
ds
adc
jne
outsb
hlt
push
push
dec
pop
jno
pop
mov
inc
in
pop
and
add
fldenv
pop
ss
mov
iret
mov
xchg
mov
int
out
lds
fsubs
arpl
xchg
fnstenv
stos
push
push
cmpsb
jge
jge
inc
insl
das
xor
mov
cwtl
loop
dec
sbb
jecxz
inc
and
dec
sbb
out
push
lret
dec
rcrl
push
mov
sar
sahf
xor
mov
push
add
ds
mov
inc
imul
into
mov
add
or
xor
cs
movsb
shll
inc
cmc
icebp
fwait
scas
push
movsl
bound
mov
sub
adc
insl
push
dec
lret
leave
cmpsb
push
sbb
mov
popa
cmp
push
aaa
mov
push
mov
or
std
and
xchg
scas
pushf
pop
fdiv
in
push
cwtl
push
out
neg
aas
notb
fsubs
in
inc
mov
decl
mov
aam
or
out
jmp
insl
inc
xor
or
lods
mov
lret
loope
jo
test
bound
add
and
inc
dec
sbb
subl
mov
push
xchg
arpl
adc
pop
scas
adc
mov
push
lea
xor
push
shrl
mov
inc
inc
es
pop
jae
loop
repz
in
je
out
mov
adc
jo
xchg
rcl
mov
out
cmp
jp
or
jmp
imul
mov
fcmovu
faddl
dec
cld
test
push
repnz
adc
push
jnp
dec
or
push
push
mov
daa
fwait
adc
fdivs
into
movsb
cltd
std
sbb
dec
roll
dec
bound
mov
cltd
ret
jae
sbb
add
icebp
mov
ds
mov
aam
aam
out
aaa
xor
adc
cmc
fstps
repz
mov
adc
ja
push
xchg
xor
call
fsubrl
mov
loope
lea
rol
add
sbb
cli
xchg
mov
lret
xchg
xchg
push
hlt
arpl
adc
in
stc
fadds
lcall
sbb
lahf
jmp
lea
mov
stos
dec
sub
fwait
test
dec
test
jnp
in
pop
test
mov
add
or
mov
dec
mov
test
insl
loopne
out
lods
jno
mov
sti
or
lahf
leave
int
inc
fld
subb
adc
ds
lock
dec
pop
mov
divb
inc
lock
cmp
cmp
test
clc
xor
cltd
lcall
sbb
repz
in
sti
ja
pop
aad
xlat
scas
test
test
xchg
sub
cmp
mov
ja
aaa
test
sbb
sub
xchg
add
jge
inc
mov
xor
xorl
rol
dec
dec
ret
rcll
outsb
sbbb
push
inc
and
fldenv
lret
decl
gs
movsl
into
popf
test
rcl
xchg
mov
roll
jp
cmp
frstor
pop
pushf
jmp
mov
aad
movsl
cli
mov
jg,pn
sub
cwtl
jo
popf
inc
std
ja
inc
pop
or
leave
jnp
sub
jnp
cs
hlt
das
cmp
sbb
ret
jns
mov
or
test
repz
movsb
out
enter
push
fs
jp
dec
int
push
fcomps
dec
movsl
cmp
and
add
fildl
fdivs
push
rcr
dec
jl
lret
daa
sti
cmp
ret
mov
test
movsl
sbb
fdivl
hlt
inc
aas
jle
es
cwtl
fiaddl
int
out
and
xor
ja
idivb
nop
inc
cmc
add
outsb
stc
cs
clc
mov
xor
sbb
bound
sub
mov
das
xchg
xchg
data16
mov
mov
mov
xchg
in
lods
mov
push
popf
sbb
ss
pop
adc
sbb
stc
push
mov
push
hlt
sbb
bound
loop
test
sbb
in
scas
fs
fisubs
push
sbb
mov
mov
fstp
pop
add
sbb
mov
test
iret
int3
mov
rcrb
fstpt
mov
insb
and
lcall
addr16
dec
loop
or
outsl
mov
sub
out
sub
adc
out
in
xor
pop
push
leave
cmp
icebp
inc
xchg
aad
adc
icebp
std
mov
sbb
int3
loopne
dec
adc
xor
add
loopne
orb
sub
hlt
test
adc
cmp
inc
jb
das
ror
jns
cmp
stc
ja
sub
add
mov
imul
mov
int
imul
xchg
mov
inc
inc
dec
ljmp
add
and
jnp
in
mov
mov
out
popf
dec
push
imul
add
cmp
mov
popf
dec
test
lahf
mov
ficompl
into
inc
or
repnz
ror
cmp
or
inc
mov
push
xchg
or
insl
sbb
mov
leave
rolb
cmp
jne
sub
shlb
and
icebp
jae
shlb
jmp
xchg
dec
inc
mov
popf
cmp
sub
stos
imul
mov
mov
insb
lds
ljmp
dec
mov
mov
xor
in
hlt
and
les
add
and
hlt
xor
loope
pop
push
xor
cmp
push
and
add
mov
pop
sub
jecxz
lahf
inc
imul
shll
mov
loop
iret
push
outsl
leave
lcall
lods
in
push
sbb
icebp
repz
in
push
or
jge
jecxz
mov
and
xorb
and
sar
sub
int
insb
out
shrl
jno
jle
adc
push
pop
push
xor
int3
adc
mov
pop
ss
inc
and
shll
add
inc
adc
sub
cwtl
adc
mov
cmp
pop
lret
sarl
scas
gs
orl
sub
pop
and
or
shll
loopne
out
ljmp
ja
sub
sbb
mov
sbb
or
lret
inc
mov
cld
xor
adc
pop
mov
sbb
int3
cwtl
sub
push
sub
xor
imul
fs
xor
inc
int
js
mov
mov
sub
ljmp
push
rclb
ja
xor
sbb
aam
or
mov
pop
cltd
dec
mov
mov
mov
mov
mov
rclb
lret
sahf
inc
xor
jno
test
andl
dec
cmp
rorl
ljmp
xor
cs
scas
gs
int
popf
repnz
cld
push
mov
movsl
inc
xchg
je
stos
clc
ret
jecxz
cs
ja
fstpt
imul
push
iret
outsb
cmp
stos
ret
sbb
and
and
movsb
or
adc
pop
mov
fsubl
adc
lret
aad
xchg
mov
int
add
leave
jmp
xor
cli
push
and
jne
mov
nop
xchg
mov
jp
xchg
push
inc
xchg
add
pop
out
test
idivb
in
sti
jle
add
jb
mov
xchg
dec
xchg
adc
icebp
pop
jg
shrl
or
or
adc
cmp
mov
outsl
stc
cli
rorl
repz
popf
fbld
das
pop
rolb
stos
cmp
jno
pop
movsl
imul
in
popfw
jl
mov
mov
leave
loope
or
push
jbe
leave
int3
sbb
lods
dec
mov
sti
xor
pop
dec
pop
jno
and
sbb
cmpsl
and
mov
or
xchg
cmc
cmpsl
xchg
loopne
nop
mov
sub
mov
mov
cmc
xchg
jnp
inc
bound
sarl
mov
pop
sub
imull
pop
xchg
push
push
cmc
pop
mull
push
cmpsb
nop
lods
shr
dec
cmpl
insl
sub
notl
and
aam
das
cmp
insb
dec
sar
sub
push
daa
inc
or
sti
cmpl
fbld
test
add
xchg
push
test
jb
es
stos
jmp
jo
arpl
cltd
jl
loop
dec
sti
pop
out
out
sub
orb
cwtl
and
cmp
jge
iret
cmp
add
pop
sub
push
test
jno
cmp
xchg
in
inc
push
mov
test
jecxz
mov
ss
xor
xchg
fs
mov
jp
hlt
jnp
dec
mov
or
fwait
sbb
int3
loope
xor
and
popa
or
repnz
mov
or
mov
sbb
stos
sub
test
push
add
sbb
sahf
cld
enter
sbb
xchg
sbb
inc
xchg
std
jg
lds
dec
repz
jl
fistps
shlb
jmp
mov
add
cmc
sbb
and
mov
iret
sub
loope
mov
subb
enter
shrl
divb
add
jge
in
cld
aad
pop
loopne
cmp
out
imul
add
sub
test
inc
int3
mov
fcomp
jmp
ja
fs
mov
xor
dec
add
cmc
ja
jmp
push
mov
sub
popa
mov
ds
push
lds
loope
leave
test
cmp
jnp
ljmp
cltd
out
pop
push
xchg
out
orb
xchg
repz
add
cmpsl
ret
dec
pop
mov
repz
adc
xchg
push
dec
sub
jecxz
pushf
scas
xchg
loope
dec
stos
addl
sbb
nop
es
push
sbb
inc
push
cmp
ja
and
pop
insb
xchg
mov
mov
mov
in
pop
mov
adc
xchg
cwtl
xchg
jno
pop
inc
and
stc
inc
inc
sbb
loop
push
rorb
xchg
add
jl
mov
xor
and
fnstcw
xchg
je
adc
imul
push
mov
and
lods
leave
rol
cltd
and
push
pop
fcmovnb
divb
daa
add
push
sub
push
push
cmpsl
rcl
mov
test
int3
cmp
xor
rorb
dec
roll
stos
inc
scas
or
stc
lds
ja
push
bound
and
movsb
fsubrs
ret
dec
xor
dec
mov
cs
cli
push
mov
outsb
dec
xor
addr16
stos
aas
inc
xchg
mov
adc
pop
mov
inc
cwtl
data16
imul
repnz
add
xchg
test
inc
ret
mov
sbb
mov
popa
push
and
jae
jne
fcomps
cmpl
and
fs
sahf
xchg
lret
movl
es
ficoml
jbe
push
and
adc
dec
inc
into
hlt
push
dec
not
cmpsb
aad
jp
cmpsb
subb
inc
daa
xor
push
or
frstor
mov
fadds
or
cmp
cmp
and
imul
adc
jle
sub
ficoms
push
adc
cwtl
ja
dec
mov
cmpsb
add
ljmp
adc
insl
or
jb
push
repnz
cmp
xor
inc
adcb
out
push
inc
inc
rol
mov
push
cmp
inc
dec
sbb
and
outsb
mov
jge
es
movsb
mov
adc
pop
pop
mov
dec
mov
ja
pushf
push
cmpsl
xor
rcrb
inc
ja
jge
scas
or
dec
cld
cmp
xchg
mov
aad
bnd
xlat
xchg
inc
test
cltd
pop
dec
sbb
xchg
cmp
xor
sti
sub
mov
ljmp
sub
lret
jo
ljmp
imulb
mov
in
mov
jg
sbb
lods
xlat
inc
mov
cli
pop
js
inc
jg
mov
cld
jno
mov
xchg
mov
cmc
push
je
ljmp
jne
xorl
cmp
data16
clc
pop
inc
cmp
inc
sahf
xlat
lret
iret
mov
cltd
subl
pop
int
decl
ret
push
jl
fistl
inc
in
clc
dec
xor
cltd
fstpt
mov
dec
lret
adc
mov
loop
outsb
imul
sbb
sbb
dec
jno
repnz
fcmovnu
xchg
pop
rorl
enter
jo
je
inc
popa
mov
test
lock
jo
fbstp
xchg
add
iret
or
adc
mov
hlt
repz
popf
lods
ret
les
dec
and
pop
test
adc
int3
push
push
dec
dec
pop
inc
es
or
and
bound
add
mov
jecxz
push
shll
sti
aaa
cwtl
cmp
testl
lahf
jmp
and
add
out
inc
rorb
add
iret
or
sbb
mov
icebp
adc
xchg
sub
dec
inc
nop
aas
mov
xchg
mov
mov
mov
data16
and
push
pushf
daa
xchg
loope
or
xor
std
lret
int
mov
out
jl
adc
loopne
mov
cli
ret
pop
scas
mov
out
mov
fcoms
outsb
dec
lock
in
lods
mov
and
cmpb
push
add
adc
lret
mov
fsubs
mov
lcall
fdivs
xor
stc
jge
imul
jns
dec
ljmp
push
dec
mov
in
or
mov
mov
mov
movsl
in
dec
push
cli
in
ds
mov
icebp
dec
fldl2t
inc
lret
mov
or
test
mov
adc
ja
pop
imul
stc
push
sbb
add
jl
mov
mov
mov
das
mov
and
jp
lods
mov
cmp
cmpsb
dec
mov
adc
xchg
pop
xorb
fs
cs
inc
icebp
dec
dec
fdivl
pop
mov
mov
gs
inc
pop
push
mov
enter
mov
adc
mov
andl
ljmp
jecxz
mov
adc
sti
or
push
and
movb
sahf
fucomp
popa
push
into
and
std
mov
jmp
fs
aam
or
pop
sub
addr16
mov
mov
dec
stc
jg
mov
add
loopne
repz
loop
sbb
pop
mov
scas
xor
adc
lock
jmp
and
pop
and
mov
xor
sti
pop
loop
jns
jmp
cmp
sub
sub
inc
ljmp
scas
inc
jbe
cs
push
xor
fnstcw
and
push
xor
sti
pop
pop
data16
cmc
sub
cmp
bound
add
andl
mov
adc
mov
jno
sarl
addr16
inc
mov
scas
mov
push
cmp
add
int3
arpl
or
std
sbb
shrl
lret
fisubl
and
sbb
out
push
aad
add
push
push
insb
sub
pop
insl
or
ds
popa
sahf
push
insl
stc
add
std
push
jb
cli
insb
test
adc
cmc
pop
aad
movsl
outsb
push
push
xor
or
shlb
add
out
mov
mov
mov
movsl
arpl
xchg
stos
mov
inc
inc
ret
xchg
in
or
leave
enter
scas
adc
push
or
das
cmp
cltd
xor
pop
in
ja
jle
test
jo
ja
xchg
pop
mov
dec
push
push
cs
orb
inc
int3
rol
mov
pop
sub
scas
mov
aam
add
jns
das
fldenv
fcoms
and
inc
xchg
ss
sbb
pop
cmpsl
addr16
hlt
orb
lods
stos
dec
mov
aad
sti
mov
orl
lahf
fcmovnu
adc
dec
mov
add
stos
pushl
addb
mov
jnp
mov
xor
fistpl
pop
mov
ljmp
pop
push
and
cmp
jae
add
jno
xchg
into
mov
fwait
inc
add
popw
pop
cmpsb
in
xor
out
pop
vphaddubq
xchg
sbb
dec
addb
push
inc
and
adc
cmp
mov
inc
xor
in
adc
stos
addr16
out
sbb
filds
dec
scas
out
push
fsubrs
sub
ljmp
in
inc
lret
lahf
add
mov
icebp
mov
inc
mov
stc
dec
lret
scas
das
inc
cs
dec
decl
sbb
fdivrl
fwait
or
sbb
pop
xlat
lds
jb
in
js
lea
xor
and
xchg
andl
fwait
mov
jno
shl
das
in
mov
scas
push
js
lcall
sbb
rcrl
inc
orb
jmp
mov
adc
dec
lock
sub
inc
pop
mov
movl
addb
jb
cltd
or
jnp
aaa
ret
jno
add
pop
add
jae
mov
out
insl
scas
fsubs
cmpsb
push
mov
dec
sbb
aas
ret
out
aam
lea
mov
jl
xchg
xor
jnp
xchg
js
mov
shll
or
mov
jl
add
pop
inc
cmp
mov
or
aam
or
bound
test
adc
xchg
sub
jle
cs
ss
hlt
in
push
jno
ret
div
mov
lea
or
int3
xchg
jno
and
fstpt
mov
fwait
xchg
xchg
jmp
sub
cli
adc
iret
les
aad
jne
mov
fwait
cmpb
pusha
mov
add
mov
dec
xor
popa
or
test
cld
test
std
mov
add
test
inc
cmp
call
push
mov
cmpsl
inc
jns
sub
call
mov
cli
pop
in
adc
mov
xchg
inc
stos
pop
jmp
xchg
push
cmp
add
movsb
pop
incl
mov
imul
pop
adc
pop
psrad
loopne
xlat
hlt
mov
or
jns
mov
and
aam
mov
xor
hlt
inc
mov
shl
ja
inc
repz
mov
push
jp
repz
cmp
call
cmpsl
mov
cmp
push
scas
sbb
ret
imul
and
mov
fstpl
xchg
cmp
cltd
xchg
add
std
jbe
rcrb
mov
xlat
push
insl
repz
es
mov
dec
sbbl
scas
cmp
mov
or
arpl
adc
push
mov
and
cmp
xor
clc
mov
inc
cmp
ja
fcoml
xchg
aam
enter
push
jmp
xor
jns
pusha
cmp
dec
xchg
pop
cmp
mov
pop
cmpsl
lods
or
in
fisubs
insl
into
arpl
xchg
clc
pop
inc
shl
pop
mov
aam
add
pop
sub
cmp
aas
mov
out
xor
jo
and
inc
setp
popf
cmp
and
jecxz
sbb
mov
sbb
push
jp
mov
sub
je
mull
xchg
mov
xchg
xchg
aad
dec
sar
imul
cltd
cmp
sar
loop
cmp
sar
cmpsl
dec
inc
or
shlb
aad
mov
pop
pop
inc
in
push
iret
mov
xchg
test
in
repnz
dec
jge
int3
sbb
add
push
or
pop
das
lahf
insb
call
pop
cmp
inc
das
xchg
and
scas
insb
or
cmp
jl
or
or
adc
mov
jge
cltd
cmc
mov
and
aaa
sub
xchg
pop
les
lret
xor
pop
xchg
or
lock
inc
sbb
lahf
mov
cli
inc
dec
ret
shll
adc
pop
pop
and
jne
insb
add
clc
lcall
sbb
pop
xlat
xchg
jnp
shr
dec
mov
pop
call
idivb
or
sbb
ficoml
jmp
rclb
mov
xchg
lahf
jae
and
cmp
dec
imul
mov
popa
popf
push
imul
jns
int3
add
idivl
es
xlat
lcall
and
cmp
sbb
mov
mov
pusha
cwtl
movsl
xor
in
inc
lcall
and
ds
cltd
cmp
mov
addr16
aaa
mov
je
icebp
pop
inc
inc
dec
sti
xor
insb
xor
and
pusha
sub
mov
ss
js
adc
lret
mov
insb
loope
movsb
out
mov
movsb
xorl
lods
sti
mov
xchg
icebp
imul
xor
pop
sti
and
jns
js
adc
jecxz
lret
fwait
fmull
fildl
mov
jle
mov
mov
fwait
sbbb
xchg
imull
mov
ret
stos
mov
mov
or
aam
aas
popa
lds
sub
cmpl
jge
test
and
inc
sbb
cmp
and
in
jl
lea
jmp
pushf
add
dec
or
sbb
in
push
xor
nop
inc
nop
enter
push
jae
mov
jno
cltd
push
test
test
inc
test
fs
mov
ret
or
mov
insl
sub
dec
push
jmp
sub
mov
pusha
push
cli
fistpl
mov
xchg
cwtl
out
popa
fldl
pop
repz
repz
add
pop
fcmovb
pop
es
cmp
inc
lea
lea
popa
jo
ljmp
imul
int3
mov
or
test
xchg
adc
inc
fiaddl
push
out
dec
add
cmp
fcomp
mov
jp
mov
xchg
xor
roll
cli
cmp
jbe
mov
movsb
mov
jo
dec
dec
outsl
test
or
pop
hlt
rcll
aaa
dec
dec
bound
pop
jmp
ja
mov
sbb
jnp
sbb
ljmp
and
cs
jne
mov
nop
and
mov
push
jmp
inc
and
shll
and
ret
xchg
jmp
jp,pt
aas
rclb
mov
jae
fsubs
dec
jns
popf
lods
loopne
lock
test
xchg
je
jbe
sbb
stos
xor
sub
cmp
mov
add
push
jne
jbe
scas
scas
pop
mov
aas
mov
ret
js
fldenv
dec
lret
push
sahf
pop
insl
add
jno
push
xchg
fiaddl
xorb
cmp
in
arpl
push
rcl
or
test
out
int
lret
dec
fldl
xchg
push
pop
mov
std
das
lds
cmc
jns
lea
scas
lcall
lret
jb
aad
repz
in
in
mov
outsb
mov
enter
pushf
je
xchg
cmp
bound
cmp
xchg
mov
fdivs
xchg
mov
push
out
jecxz
add
push
add
cli
es
scas
dec
pop
fs
jo
xlat
and
sub
cmp
cmp
sub
xor
inc
add
push
in
xchg
insb
aad
shll
jl
rcrb
setno
lds
addb
jbe
in
lds
mov
xchg
stos
iret
fabs
mov
mov
mov
imul
in
daa
scas
fcmovnu
in
mov
pop
repz
adc
mov
pop
dec
push
mov
pop
xor
mov
arpl
adc
daa
mov
ds
je
hlt
xorb
mov
lds
mov
cltd
jge
cmpsl
dec
ret
cli
or
jbe
mov
push
adc
pusha
fldt
jno
or
jl
push
imul
cmc
jp
in
data16
cmp
jno
push
jb
data16
pushw
rdpmc
lods
pop
in
push
ss
sub
jne
mov
out
out
or
sub
mov
lret
addr16
push
popf
push
mov
jb
pop
jnp
out
call
jns
jle
in
lahf
mov
imul
idivb
xchg
mov
ret
push
or
std
imul
xor
add
testb
mov
jp
out
cltd
insb
ficomps
and
adc
jg
ds
int
dec
lods
push
xchg
cs
jl
jne
cmp
enter
pop
and
push
push
jmp
push
adc
test
and
in
mov
shlb
nop
out
push
adc
push
sub
jl
lods
mov
lret
xchg
nop
xorl
ja
ljmp
fiaddl
cmpsl
add
adc
sbb
push
stc
sahf
pusha
fidivrs
cmpsb
loop
add
sbb
repnz
mov
js
frstor
pop
stc
pop
bound
nop
data16
cmp
mov
xor
mov
mov
adc
mov
xor
mov
aad
pop
rcll
pop
inc
mov
int
pop
dec
dec
int3
lods
xor
push
or
arpl
insb
jnp
sbb
dec
sub
or
cmp
cmp
sarl
fsubrl
mov
cltd
xchg
mov
push
inc
dec
lahf
icebp
mov
iret
or
pop
shrb
ret
fcmovu
lret
jmp
sahf
decl
movsb
inc
fwait
add
push
pop
mov
aam
mov
mov
xor
lods
imul
or
loopne
icebp
ficompl
xchg
imul
adc
addr16
inc
mov
add
cmpsb
jb
pusha
aas
jmp
fistpl
jne
xchg
push
push
pop
mov
pop
test
or
inc
fcoml
xchg
jns
push
mov
outsl
dec
in
xchg
add
cwtl
jnp
or
mov
insb
lret
cwtl
pushf
outsl
fldl
call
mov
pop
lock
gs
dec
adc
jg
out
lcall
dec
push
cmp
adc
loop
loop
shr
mov
daa
push
loope
clc
dec
pop
rol
mov
incl
adc
adc
or
sub
out
mov
dec
sub
pop
adc
stos
mov
or
in
jle
sub
inc
pop
push
inc
xor
sbb
add
movsb
sub
ret
ds
cmp
dec
add
inc
mov
scas
fidivrs
inc
xlat
ret
ret
and
add
imul
push
mov
pshufw
aad
mov
out
push
fstps
stc
pop
sbb
mov
repz
orb
push
xor
clc
dec
sbb
ret
mov
cmpsb
inc
add
inc
sbb
test
inc
test
mov
xchg
ss
jmp
inc
fcomps
and
and
jb
mov
lahf
mov
or
xchg
into
mov
xor
ja
lahf
sub
or
int3
sub
in
jecxz
imul
lock
mov
sbbb
and
fistpll
orl
xor
in
add
inc
adc
and
jg
mov
std
loope
in
dec
arpl
xchg
push
push
mov
pop
repz
mov
mov
aad
jl
pop
xor
cmpsl
mov
lret
lods
rclb
fwait
push
cwtl
or
pop
sub
aaa
stos
push
jne
decl
xchg
add
mov
mov
push
insb
push
mov
lret
mov
mov
jnp
pop
js
cmc
jns
aaa
jle
jno
cmpsl
fcomps
jne
call
out
test
inc
mov
lock
dec
xor
pop
xchg
xchg
xchg
rcl
cld
mov
jae
mov
xchg
xor
push
xor
test
repnz
and
xchg
mov
jbe
xchg
sar
xchg
or
mov
decl
push
sub
add
iret
add
add
xor
jne
ret
sbb
loopne
pusha
scas
pusha
into
inc
dec
fcmovnb
inc
fimull
inc
cmpsb
loopne
lret
add
test
aam
cld
leave
mov
into
dec
push
lahf
test
test
mov
and
jbe
inc
sbb
stos
repz
scas
in
icebp
dec
movswl
aas
or
shrl
mov
mov
and
lret
jne
into
add
lods
inc
clc
fadds
xchg
push
loopne
mov
fists
mov
dec
addl
cltd
pop
mov
jecxz
int
mov
out
mov
repnz
sbb
and
lahf
pop
inc
daa
mov
pusha
sub
adc
mov
mov
fwait
sub
cmpsb
pop
jl
xor
xchg
lods
inc
insb
pop
fsub
adc
add
pop
stos
sarl
xor
js
cmp
sbb
mov
pop
in
insb
int
test
dec
and
in
movsl
xor
dec
push
mov
sbb
cs
addr16
fldt
call
ret
addl
arpl
arpl
jmp
in
xchg
lods
lret
cmc
lret
push
imul
cmpsb
outsl
xor
cmp
add
into
ljmp
clc
bnd
insl
es
push
adc
jo
jp
inc
imul
inc
js
lret
mov
jo
xor
mov
cmp
xlat
mov
dec
add
xchg
shrb
fdivrs
std
sahf
sbb
mov
jns
pop
inc
loopne
bound
jmp
push
decb
adc
fsubr
inc
enter
add
cs
rcrl
lock
xchg
mov
mov
pop
add
push
std
mov
enter
popa
cmp
fisttpl
shl
test
shll
aaa
in
push
scas
add
cmc
aas
xor
mov
adc
out
sub
aaa
dec
dec
in
mov
mov
add
or
scas
dec
pop
outsl
stc
mov
sub
inc
jg
iret
ret
sbb
mov
inc
add
jp
shl
mov
pop
and
mov
pop
fcompl
mov
dec
mov
movsb
dec
inc
xchg
mov
das
pop
jae
pop
imul
repz
pop
cmp
sbbw
shr
and
cmp
decl
lea
cld
hlt
mov
sbb
out
movsl
testl
rorl
jo
inc
dec
cmp
cltd
scas
xchg
aam
inc
loop
cwtl
adc
xchg
cmp
push
lds
jo
out
push
mov
sbbb
jne
out
dec
das
and
lea
popf
out
lret
jo
mov
arpl
mov
in
sub
jge
mov
fcomip
lods
push
jbe
mov
mov
call
and
popa
mov
in
test
imul
stc
mov
stos
data16
popa
mov
cmp
sbb
xor
push
jae
pop
cmp
push
scas
sub
and
inc
mov
mov
xchg
fwait
testb
xchg
sbb
rolb
adc
mov
jns
or
mov
sub
or
ja
xchg
sub
roll
pop
or
jae
pop
pop
pushf
jge
mov
mov
scas
fisttpl
out
jg
mov
fcoml
add
mov
xor
mov
pop
adc
lea
sbb
std
fistpl
outsb
movsl
ja
lods
fisubrs
xchg
loopne
sbb
daa
fmuls
add
sahf
mov
fisubrs
fwait
popa
js
test
xchg
ficomps
arpl
push
pop
fsubp
cmpsb
sarb
push
lods
jae
mov
movsl
sbb
jl
adc
repnz
scas
js
shll
mov
outsb
add
push
inc
cli
mov
in
sbb
and
loope
hlt
out
cmpsb
add
xchg
push
jns
popa
insw
pause
aas
rcll
push
sub
adc
pusha
jecxz
mov
arpl
fdivr
sarb
xor
fildl
jmp
cmp
jge
jle
pop
fldcw
pushf
xchg
mov
inc
leave
and
cli
loope
cwtl
pop
mul
push
jns
cltd
sub
fbstp
xchg
sbbl
xchg
pop
jae
sbbb
in
cli
lret
aas
push
mov
fsts
int
sub
mov
jne
das
aas
jbe
add
mov
sub
jnp
mov
xor
pop
dec
sbb
xchg
lock
sbb
iret
inc
fsubl
jle
push
cmp
pop
pusha
or
xor
popa
cmp
xor
enter
imul
mov
stos
ret
pushf
jp
adc
lea
push
push
cmp
cmp
out
adc
or
in
sub
stc
das
add
frstor
inc
jae
pop
inc
repz
es
insl
pop
icebp
push
int
xchg
add
in
jp
sub
dec
bound
clc
ja
aaa
mov
ja
pop
jl
imul
mov
daa
out
lock
xchg
or
xor
cli
cmp
cmp
pop
sbbl
mov
sub
sbbb
dec
xor
ja
dec
imul
cmp
lahf
shll
dec
sub
pop
push
sbb
pop
push
test
pushf
push
loope
xor
adc
xlat
mov
mov
js
gs
dec
cmc
dec
add
jl
mov
xchg
pop
jne
mov
rcr
ss
and
jnp
aas
lods
lret
sbb
movsb
dec
xchg
arpl
sarb
xor
jmp
mov
dec
insl
xor
mov
ljmp
cmpsl
daa
dec
push
outsb
mov
dec
xor
push
pop
outsb
mov
jp
call
or
mov
out
cwtl
xchg
mov
inc
lcall
lea
mov
cld
or
adc
jle
loopne
and
lret
mov
test
push
fdivrs
popf
cmp
std
xor
js,pt
cmovo
cwtl
std
ss
fisubrl
jge
test
loopne
cmp
addb
mov
idivl
aam
out
add
cmpb
add
adc
gs
add
outsb
mov
pop
or
mov
xchg
sub
lret
int3
sahf
sub
movsl
dec
dec
sarl
pop
mov
sahf
add
cli
jl
addr16
fmuls
pop
push
lds
push
scas
push
rcrb
aam
fwait
bound
ja
xchg
adc
jne
sbb
out
imul
add
inc
data16
inc
mov
push
pop
lods
sbb
and
xor
add
out
out
pop
rolb
dec
dec
addr16
imul
loop
test
cmp
mov
das
fsubl
mov
pop
ss
dec
out
jp
cltd
dec
sub
inc
or
and
mov
scas
in
push
in
shrb
add
rclb
push
repnz
sbb
mov
lods
imul
mov
dec
insb
lcall
and
std
sub
sub
xchg
jne
fsubs
sub
dec
lcall
pusha
shl
arpl
xchg
jne
push
in
jb
xor
dec
loopne
and
sub
xlat
out
sub
rol
fst
cs
adc
ljmp
int
cli
mull
loope
cmpsl
and
xchg
fwait
bound
push
inc
add
jmp
and
dec
ret
and
lret
daa
sub
sub
xchg
fsubs
lods
arpl
and
scas
and
jge
nop
lock
push
jnp
in
in
sbb
inc
cmpsl
pusha
dec
test
mov
lcall
cmpsb
jo
jns
pushl
in
dec
nop
cmpl
fiaddl
fisttps
xor
sarl
sub
and
mov
outsl
popf
pusha
popa
scas
in
cmp
fldcw
popf
das
sbb
not
mov
inc
cwtl
sub
test
iret
add
sub
inc
lret
and
lods
mov
mov
je
and
mov
sbb
sahf
cmp
jbe
pop
jg
pop
pusha
gs
cmpsb
movsl
shl
ret
scas
xor
fs
adc
mov
xor
xor
aad
jmp
and
or
inc
xorl
xchg
imul
jle
pop
sub
pop
test
scas
sbb
dec
mov
mov
cmpsb
mov
cwtl
jg
fwait
push
mov
iret
sub
push
subb
push
and
cmp
sub
mov
sbb
and
cmp
lds
pop
or
push
cs
testb
inc
or
pcmpgtd
sub
gs
les
jae
arpl
outsb
mov
xchg
inc
sub
enter
addr16
pop
xchg
sub
ja
test
stos
mov
push
mov
adc
push
push
inc
loop
lret
pop
push
mov
cltd
or
xchg
xor
sbbb
dec
xor
popa
testl
std
mov
outsb
mov
push
hlt
call
pop
repz
inc
push
mov
pop
push
daa
push
pushf
push
nop
push
sub
int
and
js
pushf
jmp
jb
jmp
pop
lds
loopne
aas
jg
sbb
lahf
imul
mov
dec
mov
pop
xchg
call
sub
or
js
imul
arpl
idiv
sarl
xor
sbb
sarb
bound
and
pop
mov
sbb
xchg
push
xchg
adc
cmp
sahf
jmp
mov
mov
mov
test
mov
mov
out
mov
add
out
push
movsb
and
pop
sbb
cmp
test
or
imul
sbb
jmp
mov
push
or
jbe
ljmp
mov
push
push
push
lea
ret
dec
test
test
in
mov
ds
push
inc
dec
inc
imul
ret
pop
push
fmuls
add
xorl
sbb
pusha
jg
and
out
nop
into
mov
cmp
inc
cli
imul
inc
pop
push
mov
int3
mov
das
add
sbb
in
inc
adc
push
or
lcall
dec
loop
jmp
mov
addr16
cmp
repz
sbbl
cwtl
mov
in
jo
cwtl
dec
mov
aad
dec
xor
out
shl
xlat
stc
mov
push
in
pop
xor
aam
imul
clc
inc
sbb
mov
dec
pop
cld
cmp
xor
xlat
pop
mov
xor
lahf
andb
rcl
push
jnp
imul
mov
sbb
mov
pop
dec
dec
pop
lods
cli
pop
loop
js
push
pop
cmpsb
orb
dec
push
push
ss
inc
ds
adc
mov
adc
aam
ret
imul
push
ss
mov
mov
xor
and
movsb
add
or
cmp
shlb
xchg
cld
out
hlt
inc
add
xor
cmpb
jmp
bound
jne
push
cld
test
sahf
pop
inc
xchg
push
pushf
inc
push
adc
mov
push
sub
sbb
pop
adc
popf
jl
xchg
ret
and
xor
inc
pop
add
inc
mov
fwait
test
repnz
gs
jns
stc
popa
test
sub
jae
add
jp
dec
in
lret
pushl
push
mov
and
push
adc
lds
adc
fdivl
les
mov
fwait
jb
push
mov
popf
add
sbb
cld
neg
jp
bound
inc
dec
negl
sbb
mov
fwait
in
test
mov
sbb
lea
push
call
aad
in
out
insb
movsb
int
inc
adc
decl
dec
xchg
jno
sbb
pop
xor
aam
jae
aam
or
jno
movsb
mov
imul
mov
and
sub
pop
iret
pop
imul
repnz
cmp
adc
dec
dec
idivl
pushf
adc
pop
dec
lcall
push
and
lcall
pop
fidivs
enter
testb
imul
mov
aaa
mov
jbe
cmc
sbb
inc
repnz
add
std
cltd
xor
lea
xchg
inc
andb
lods
daa
aas
jbe
imul
cmp
mulb
shl
sbb
cld
push
adc
cmp
scas
sbb
mov
sub
cmpb
add
cmpsb
bound
xchg
loope
lds
jnp
inc
cld
rcl
into
insl
jns
mov
int
and
mov
cmp
cmp
fldcw
imul
in
lahf
jecxz
imul
push
inc
arpl
sahf
push
mov
imul
adc
adc
add
out
scas
shrb
shl
aam
and
fnstenv
mov
in
or
imul
lahf
mov
jp
adc
push
push
fwait
lret
pop
cwtl
pop
lds
mov
es
aas
dec
out
lret
cwtl
mov
cld
mov
push
insl
fcompp
pop
mov
push
mov
adc
xchg
and
jp
mov
pushf
out
jle
xchg
xchg
inc
pusha
mov
lret
nop
jg
fldcw
daa
xchg
dec
in
das
jp
jmp
sahf
mov
add
xor
sbb
xchg
leave
movsb
bound
arpl
fs
test
mov
cmc
cmp
cmp
mov
xchg
mov
pop
out
push
sahf
jp
mov
or
jo
xchg
pop
fcomi
cld
xor
test
std
mov
inc
scas
sbb
push
repz
and
adc
xchg
cmp
lcall
xor
in
push
push
pop
push
mov
mov
in
push
movsl
xor
push
repz
test
adc
pop
loopne
jmp
mov
adc
aad
pop
xor
andl
add
orb
inc
push
rcll
pop
inc
mov
aad
cmc
or
gs
or
xchg
rorl
roll
lea
add
lret
push
sti
clc
mov
jle
mov
push
cmp
dec
adcl
out
mov
adc
aam
outsl
cltd
in
pop
sub
jmp
imulb
cmp
cmpsl
out
jmp
push
std
xchg
fsubp
sub
jno
aas
or
push
out
pop
add
sub
cmc
dec
adc
dec
cmpsb
push
rcll
xor
ljmp
rolb
push
call
negl
dec
lods
imul
pusha
mov
ret
js
add
sbb
dec
test
test
loop
cs
enter
imul
xor
mov
adc
add
dec
xchg
lret
data16
inc
push
mov
or
mov
dec
cmc
test
cs
dec
aaa
push
add
rcrl
mov
or
or
lcall
mov
sub
lret
pop
inc
adc
push
and
fdivr
es
mov
in
popa
mov
push
and
fcompl
into
inc
mov
xorb
in
cwtl
cld
sbb
addr16
je
jb
rol
ror
bound
fsts
mov
std
jecxz
lret
insl
ret
sbb
sub
scas
mov
add
dec
sbb
iret
pop
jo
sub
mov
sbb
and
inc
mov
mov
jae
lahf
movsl
xchg
jp
xchg
xor
inc
pop
ljmp
fsts
adc
push
imul
inc
mov
push
and
mov
insl
cmp
mov
fwait
pop
inc
jp,pn
andl
mov
mov
inc
shll
loope
ja
mov
dec
or
mov
lret
int
push
dec
repnz
fisubl
sub
add
les
push
add
jg
out
jmp
push
mov
sahf
inc
pusha
sub
mov
inc
pop
jns
push
ret
inc
jne
and
xchg
repnz
movb
jp
xor
stc
sti
stos
xor
repz
and
imul
in
clc
icebp
fidivl
and
xlat
pop
push
stos
lods
xchg
mov
pop
std
cmc
cltd
push
pop
addl
leave
rcr
inc
aam
fcmovnbe
imul
shlb
out
mov
mov
cmp
push
int3
sbb
fisttps
ss
adc
nop
mov
hlt
insl
add
and
ljmp
jbe
cmpsb
fdivl
pop
daa
fistpll
mov
shlb
lds
inc
xchg
adc
mov
or
scas
sbb
sahf
rcrl
insb
out
mov
and
pop
orl
lret
ficoml
mov
std
mov
mov
les
outsb
push
mov
cmp
add
pop
popf
test
xchg
and
jnp
xchg
daa
cs
lgs
add
or
or
pop
fcomps
cld
stos
fdivs
dec
popa
pop
mov
add
adc
repnz
loope
mov
cli
jns
pop
mov
pop
pusha
imul
mov
adcl
inc
enter
loope
roll
push
add
cmpsb
addb
inc
pop
pusha
cltd
sub
mov
or
shl
pop
cmp
jns
and
or
sub
dec
add
jmp
sbb
pop
or
or
and
aas
daa
push
fs
mov
cwtl
push
push
out
push
sar
inc
inc
and
lock
add
adc
jmp
nop
mov
sbb
ss
pushf
ljmp
push
jg
cs
imul
xchg
lret
std
jno
xor
subl
mov
jl
mov
and
push
loopne
jno
mov
jo
test
insb
hlt
and
arpl
ret
mov
ja
cli
push
xchg
sbb
pop
aam
loop
mov
sbb
cld
mov
mov
das
mov
fisttpl
repz
adc
icebp
mov
mov
adc
xor
sti
in
sbb
insb
lcall
movsb
mov
sbb
popf
mov
sub
es
popf
jmp
testl
or
pop
dec
push
test
jl
shrl
ret
sbb
jb
in
hlt
insb
into
pushf
bound
popa
mov
in
xor
sub
jecxz
xor
int3
pop
aam
test
add
and
jne
add
sub
cmpsb
xchg
out
cs
ret
bound
mov
mov
add
insl
pusha
mov
lret
push
dec
or
mov
leave
lahf
fsts
jbe
orb
add
rcll
sti
lret
add
jge
xchg
andb
dec
sbb
xchg
xor
cmp
push
mov
jle
or
jb
adc
mov
mov
int
arpl
add
lcall
jno
cld
pop
sahf
xor
shr
rcll
mov
sbb
pushf
inc
fbstp
xchg
cmpsb
in
sbb
fldl
test
jg
adc
push
or
in
mov
xchg
jmp
mov
or
mov
lock
sar
mov
jnp
mov
adc
push
in
sti
add
fadds
mov
xlat
leave
mov
push
pushf
fcomi
jmp
mov
fimuls
loope
je
lahf
sub
cmpsl
mov
test
aam
fcoml
inc
inc
dec
sub
stos
lret
xchg
fnstenv
xchg
adc
shlb
cmp
and
jns
push
sub
jge
jnp
cli
cmovae
outsb
cmc
push
xchg
clc
inc
cmp
or
shrl
shl
stos
andb
pushf
sbb
shll
lods
popf
and
les
adcl
xor
pop
cld
outsb
clc
int3
or
xchg
fwait
outsb
enter
push
jg
sti
inc
add
lahf
call
fildll
mov
lea
add
ljmp
je
into
rcr
sbb
cmpsl
rol
cmp
jb
sub
adc
sub
ss
jle
cs
add
jno
cmp
or
cli
test
std
push
inc
js
or
push
fisttps
sbb
scas
jne
sbb
xchg
adc
and
ds
fcoml
iret
xor
leave
cmp
xchg
add
xor
mov
push
ljmp
ljmp
xchg
sub
pop
out
mov
int
pop
mov
cmp
iret
insb
push
or
mov
aas
jmp
adc
lods
add
inc
lcall
roll
mov
mov
in
jb
xchg
je
mov
imul
testl
mov
mull
test
sahf
pop
aam
out
fnsave
mov
xchg
mov
addr16
cmp
mov
loopne
xchg
lret
xchg
add
push
push
lret
jle
stos
rcl
push
push
inc
sub
call
ss
mov
insb
jmp
and
in
lods
cmp
jo
adc
cli
int
pop
dec
inc
xchg
mov
divb
jno
mov
sbb
icebp
enter
mov
mov
and
push
push
cmp
cli
bound
mov
inc
sub
mov
pop
mov
jb
pop
sub
shll
int3
jnp
sbb
mov
ret
nop
push
pop
and
pusha
adcb
into
fiaddl
mov
leave
icebp
adcl
scas
repnz
fcoms
push
jne
pop
frstor
jge
movsl
pushl
lock
shll
movsl
mov
dec
sbb
dec
add
adc
inc
dec
jns
mov
jb
mov
push
adc
mov
fnstsw
into
or
push
adc
jg
rcll
cwtl
cwtl
fistpl
mov
mov
lds
sub
mov
dec
fstl
sub
inc
cwtl
jns
mov
or
or
out
xchg
or
push
roll
add
je
int3
ficoml
sub
lea
roll
push
pop
rolb
test
pop
popf
addr16
pop
xchg
mov
jae
inc
pop
cs
je
inc
bnd
inc
fcomi
in
and
data16
ja
test
mov
out
push
jne
cmp
cmp
ret
outsl
fistl
ret
stos
pop
inc
aad
push
mov
mov
mov
nop
pop
xchg
xor
mov
mov
adc
out
insl
in
dec
adc
ret
jl
mov
pop
push
aad
mov
stos
in
in
sahf
jns
cli
dec
and
pop
pusha
mov
aas
lods
gs
mov
cmpsl
leave
mov
pop
test
dec
test
dec
jecxz
aad
ret
insb
test
inc
or
xor
gs
jge
xor
jp
mov
sub
jg
pop
addr16
or
pop
movsb
cltd
xor
pop
adc
lock
jmp
mov
insb
push
out
lea
inc
mov
mov
jl
mov
or
add
xor
frstpm(287
das
mov
add
inc
fwait
outsl
adc
ret
inc
sub
push
dec
fimuls
mov
sbb
imul
ret
mov
scas
les
xchg
sub
mov
stos
xor
inc
mov
hlt
jp
dec
and
pop
inc
enter
and
mov
fwait
dec
inc
scas
stos
fchs
add
sub
loop
stos
js
cltd
in
cmc
mov
insb
fstpl
sub
sbb
mov
ret
into
mov
push
call
ret
ja
pop
aas
inc
fstpt
xchg
jle
xor
mov
push
addb
mov
inc
lret
shl
fst
testb
mov
push
jb
jge
inc
jns
iret
aaa
push
out
repz
dec
jge
jle
push
jbe
leave
xchg
lret
xchg
sbb
lahf
bound
daa
cmp
xchg
xor
lods
jmp
scas
sub
adc
in
pushf
out
mov
mov
lods
shll
adc
les
pop
cli
push
test
shll
inc
jmp
into
mov
sbb
or
movsl
mov
lods
mov
stos
test
leave
je
decb
cmp
cs
xor
lock
xchg
jecxz
sbbb
and
rcl
pop
sub
rcll
stos
jbe
mov
push
dec
pop
repnz
sub
call
insl
push
push
orb
call
cmp
mov
ss
jae
int
daa
push
push
shlb
ds
mov
sahf
pop
mov
cld
inc
or
sub
add
aas
sahf
dec
xor
or
add
cmp
cli
rorb
adc
xor
nop
xlat
les
inc
lods
jl
pop
movsb
fistpl
push
inc
pop
jg
dec
scas
push
push
fistpll
or
mov
sbb
jo
outsb
gs
or
pop
test
loope
aas
cltd
pop
ret
loope
in
fisubs
test
mov
sti
and
sbb
scas
add
mov
ljmp
in
mov
frstor
mov
addb
repz
hlt
sub
dec
insl
xlat
lea
sbb
mov
scas
cmp
jbe
dec
push
dec
sarb
sahf
jl
mov
mov
mov
jb
push
push
push
cmp
lret
jae
pop
inc
xchg
jl
adc
mov
sahf
push
sub
notl
mov
and
in
and
or
cmpsl
fldt
fcmovu
mov
sbb
clc
lret
cmc
dec
mov
jbe
ljmp
mov
inc
in
ret
cmpsb
cmp
adc
fdivl
jns
mov
sub
mov
std
sub
ja
adc
lea
outsl
ret
and
lahf
xor
outsl
fcoml
pusha
icebp
nop
sbb
nop
sbb
sub
mov
scas
mov
adc
xor
jnp
pusha
and
adc
ljmp
out
xor
push
adc
fcomps
int
stc
cmp
rolb
out
bound
adc
jg
sbb
push
dec
fstps
repz
mov
add
adcb
and
xor
ficompl
dec
mov
adc
std
push
mov
aad
sbb
xchg
lods
fwait
pop
into
xchg
ret
sbb
push
mov
in
push
jg
rolb
push
in
inc
insl
dec
std
sub
xchg
ds
scas
jmp
jmp
jb
xchg
mov
mov
bound
xchg
xor
negb
xlat
jae
push
mov
les
mov
ss
push
adc
mov
cli
pop
imul
xor
sahf
movsl
enter
sbb
mov
out
jge
push
jns
out
pmuludq
push
mov
xchg
push
add
mov
daa
inc
hlt
bound
add
test
fcompl
daa
xchg
sub
ljmp
xchg
mov
jne
sbb
or
pop
stos
xor
or
jo
pushf
mov
fisttpl
fmuls
mov
pop
pop
jmp
int3
nop
ja
bound
cmp
cmc
mov
inc
sar
push
cli
jno
arpl
mov
or
and
aaa
ljmp
lods
push
xor
jmp
insl
and
push
push
inc
sbb
inc
int
pop
ja
inc
dec
int
jg
std
data16
pop
imul
jl
push
push
dec
push
adc
pop
push
fwait
mov
mov
imul
cmp
add
add
out
mov
mov
add
ror
out
loope
negb
loopne
in
inc
mov
mov
pop
outsb
jbe
fwait
enter
in
sub
inc
pop
sbb
aas
jp
js
adc
xchg
aaa
mov
ljmp
mov
test
test
lea
faddl
pop
inc
mov
sbb
mov
mov
fsubs
sub
or
std
stc
fxch
adc
hlt
xchg
pop
aad
out
daa
xchg
sbb
repnz
cwtl
shlb
adc
dec
push
hlt
fs
aaa
push
int3
lcall
sti
jae
dec
xchg
and
dec
in
inc
iret
scas
sub
add
push
fsubrp
je
and
pop
insl
dec
mov
xor
jle
fprem1
les
jno
imul
mov
add
xor
lahf
out
hlt
adc
rdtsc
dec
push
sub
pop
out
mov
mov
push
into
push
iret
cmp
test
cmp
bound
mov
mov
or
outsb
cmp
cmpsl
test
jne
jb
cmp
cs
jne
fists
roll
std
adc
idivl
ret
mov
push
pop
push
xchg
dec
xor
aaa
pusha
and
mov
movsb
mov
mov
mov
cwtl
mov
fdivp
push
dec
data16
cld
out
fidivrl
xor
aam
mov
ss
jns
jb
clc
push
arpl
add
pushf
out
nop
jp
pop
sbb
cmc
add
sbb
outsl
cs
fwait
mov
and
mov
div
cli
dec
loop
mov
sbb
add
add
sti
push
bnd
int
add
adc
test
popa
divl
jp
and
sub
mov
test
mov
movsl
das
xchg
mov
jecxz
xchg
into
addb
aam
xchg
in
pop
xchg
push
and
imul
jl
mov
mov
mov
lock
jne
shlb
aaa
pop
adc
jle
sub
pop
jmp
sub
enter
and
scas
js
jne
mov
test
arpl
or
lock
mov
fdivrs
aam
sub
and
int3
sub
adc
lods
and
xchg
sub
mov
mov
lret
loopne
mov
in
push
addr16
ss
push
je
xor
rcrl
add
push
and
scas
sub
fisttpll
mov
mov
data16
cli
inc
cs
insl
inc
cltd
sbb
outsb
loopne
das
icebp
cs
enter
testl
jo
lea
bound
xor
cmp
aas
dec
fld
cli
xor
jmp
repz
ds
lods
ret
xchg
mov
fbld
shrb
in
add
call
out
bnd
mov
cmp
add
out
adc
push
ret
mov
xor
sbb
add
shlb
jmp
ja
pop
mov
clc
mov
jl
mov
lea
cmpsl
je
loop
sub
push
out
jne
call
ljmp
xchg
xorl
mov
fwait
stos
xor
outsl
shrl
leave
sbb
mov
insl
fistl
xor
pop
mov
enter
jb
mov
sub
mov
lds
psubsw
mov
mov
dec
in
nop
mov
xchg
and
loope
pop
cmp
cmp
orb
mov
scas
xor
aaa
mov
dec
xchg
stos
pop
loopne
mov
mov
ja
or
and
mov
xchg
and
lods
mov
dec
xor
sbbb
stc
cli
insl
fcoms
mov
add
push
sub
sub
test
xchg
je
ss
mov
loop
dec
push
cmp
jae
or
cs
mov
jae
aad
dec
add
pop
in
xchg
dec
push
cwtl
and
jmp
dec
idivb
or
stc
loope
fucomp
sahf
sahf
clc
mov
cmp
test
and
pop
pop
enter
cmp
stc
fld
std
cmpsb
pop
sub
push
xchg
xlat
cmc
fdivp
mov
add
mov
mov
adc
fwait
ret
insl
js
imul
mov
pop
mov
xchg
test
ficomps
or
mov
add
inc
sub
sbb
mov
push
push
in
jmp
and
add
mov
dec
pop
adc
cld
adc
aad
leave
pop
mov
or
xchg
aad
subl
pop
sub
inc
popf
fisttpl
insb
cmc
push
movhps
stos
leave
out
sbb
mov
popf
mov
cmpsl
sub
inc
mov
pop
movsl
jbe
test
call
ret
aad
push
ljmp
cmc
or
popf
lcall
inc
push
hlt
or
imul
push
xor
lret
int
fsubrl
sbb
and
and
sub
xorl
or
cmp
pop
aas
mov
cmp
push
addr16
dec
adc
dec
mov
mov
pop
push
popa
dec
mov
dec
inc
mov
ffreep
dec
xor
jl
ret
push
imul
add
adc
insb
xor
jl
aaa
jb
and
lds
in
push
movsl
push
xchg
and
dec
cmp
idiv
js
das
inc
sbb
jnp
psubd
mov
mov
in
les
mov
mov
jbe
ret
pop
mov
decb
sbb
rorl
mov
aad
rorl
xchg
out
jae
insl
mov
je
mov
xlat
push
pop
push
fbld
xchg
lods
mov
lds
push
repnz
daa
sub
sbb
push
pop
arpl
int3
xor
add
pop
shl
fsubrs
es
xchg
js
adc
mov
xchg
loop
add
ja
ret
mov
xchg
add
fs
in
mov
inc
xchg
repz
aam
out
dec
pop
xor
dec
push
add
arpl
and
and
cwtl
lock
pop
aas
ror
or
fs
push
and
js,pn
dec
push
pop
mov
out
cmpsb
scas
daa
fmulp
xor
xchg
mov
out
movsl
xor
mov
ret
and
mov
sbb
jmp
adc
lods
and
repnz
idiv
out
sub
jo
push
in
fists
xor
cmp
push
add
add
jl
jle
pop
jno
pop
sarb
jno
clc
inc
les
xorl
in
lret
cs
or
out
leave
aaa
mov
cmp
push
xchg
sti
icebp
insb
rclb
mov
cmp
enter
test
jge
repnz
jns
mov
loope
and
pushl
pop
xchg
jl
lret
test
mov
jg
mov
cmpsb
jmp
into
shr
mov
pusha
aad
or
dec
add
cmp
jbe
push
xor
pop
inc
inc
mov
cmp
jnp
mov
lahf
lret
stc
or
test
loope
dec
daa
lods
sub
call
ljmp
jns
daa
jg
les
add
in
xchg
fwait
or
mov
ss
mov
jno
xor
stos
inc
mov
pushf
pop
pop
sbb
frstor
es
push
movsb
mov
cs
pop
pop
cli
sbb
clc
outsl
pusha
mov
xchg
fcomp
push
aaa
mov
cmp
jb
movsl
rcrb
pop
add
loope
aaa
inc
lea
xor
xchg
fcomp
dec
rolb
fwait
add
mov
orl
xor
in
stos
push
loope
scas
ljmp
fs
fisubrs
in
mov
in
fcoml
push
sub
or
pop
pop
cmpsl
xchg
and
adc
loop
xchg
fcomps
jge
dec
fmul
or
fld
add
push
ja
shll
pop
mov
insb
aas
mov
clc
sub
mov
push
insb
inc
out
in
fs
rclb
hlt
adc
add
clc
arpl
push
inc
xchg
xchg
pop
jle
in
push
mov
pop
cmp
or
xor
in
in
sub
mov
inc
ret
and
fwait
mov
jmp
xor
mov
jl
add
outsb
test
jg
fsubs
mov
mov
std
add
mov
and
cltd
lds
adc
cmpsb
cltd
imul
dec
pop
or
fcomi
shrb
mov
mov
clc
pop
or
fisubs
in
sahf
fdiv
cltd
jo
out
loop
add
test
inc
mov
cmpsl
out
sbb
push
fldenv
aad
jnp
mov
ret
out
es
adcb
pop
push
xor
pop
add
out
sbb
mov
imul
cmp
arpl
cmc
dec
inc
cmp
mov
pop
punpckhdq
mov
sbb
sub
dec
fstps
pop
sbb
jle
xchg
int
inc
add
jmp
cwtl
inc
add
fistpll
adc
sub
sub
mov
repnz
mov
movsl
pop
xchg
cwtl
fistpll
aad
mov
and
lds
enter
cs
cli
mov
arpl
into
mov
adc
iret
xor
ja
int
rolb
sub
sti
jae
xor
mov
add
popa
sbb
jo
outsb
mov
mov
insb
dec
cld
clc
push
fst
lea
or
cwtl
xor
in
pop
xor
jne
mov
test
dec
cmpb
das
out
popa
sub
pop
cmp
sub
in
pop
mov
sarb
mov
add
enter
out
add
dec
xchg
cmp
in
push
mov
stos
xchg
ss
repnz
pop
xlat
pop
cmc
out
stc
and
rclb
fmul
cmp
fs
push
mov
and
outsl
repz
lea
fstpt
jo
ja
jp
adc
jns
xor
mov
dec
ret
lahf
mov
inc
popf
cmp
xorb
jl
stos
in
lock
mov
mov
int
arpl
and
mov
push
jle
mov
cmp
mov
sub
bound
mov
inc
mov
ljmp
push
enter
add
cmpsb
lahf
in
cwtl
daa
lret
push
push
lods
jecxz
inc
imul
xor
std
addr16
push
fcmovbe
or
and
orl
sbb
mov
fcmovbe
push
or
dec
and
fsubp
xchg
pop
pusha
fwait
mov
jbe
pop
test
testb
mov
inc
dec
push
jmp
push
mov
insl
mov
es
jno
mov
shll
test
or
imul
rolb
aas
jbe
out
rolb
mov
in
sub
inc
ds
in
push
ljmp
jns
pop
test
inc
mov
jno
arpl
scas
loop
ds
inc
or
jl
lock
fs
jae
test
leave
ret
and
je
pop
fs
pop
cmp
cmp
in
aaa
rcrl
shlb
pop
adc
add
insl
ljmp
push
ret
mov
in
push
adc
insb
mov
stos
cmp
cmovne
xor
cwtl
ret
and
in
cmp
fcomip
pop
mov
jbe
adc
push
sub
hlt
mov
repz
fs
rcrl
pop
fldt
clc
int3
fidivrs
pop
mov
rol
mov
sub
adc
mov
scas
insl
loop
or
mov
arpl
push
jb
jl
cld
dec
int
gs
popf
lahf
add
icebp
dec
push
cli
pop
pop
imul
push
mov
or
jmp
push
aam
addr16
xlat
xchg
mov
movsl
sub
or
mov
jb
mov
cli
or
or
jp
mov
ljmp
add
stos
xchg
sub
cs
dec
xchg
jle
mov
stos
ret
sub
out
inc
test
xchg
cmpsb
jne
mov
dec
jle
cmp
pop
sti
mulb
jnp
lods
outsb
mov
sbb
or
push
dec
mov
cwtl
xchg
and
rep
insb
and
hlt
popf
jmp
or
cli
ljmp
ficomps
repz
dec
aaa
push
jns
fs
xor
mov
add
mov
or
inc
rclb
mov
adc
mov
cmpsb
jbe
jns
pop
int3
shl
fistl
adc
dec
adc
ret
mov
pop
adc
push
movsb
ds
std
loopne
jge
adc
sub
in
adc
shlb
cmp
mov
pop
mov
lahf
out
add
enter
cmp
adc
andb
outsb
js
shl
cltd
shrb
enter
xchg
leave
ret
adc
das
outsl
adc
scas
ds
pop
adcl
mov
pop
in
shl
gs
xchg
xchg
popf
pop
jo
ret
lods
add
loopne
sti
jg
sti
jge
inc
mov
and
inc
int
dec
aad
int
sub
dec
sub
aam
mov
push
clc
mov
add
scas
or
das
dec
movsl
inc
icebp
mov
mov
mov
mov
dec
add
fisubs
jge
test
push
fs
ja
mov
nop
jge
pop
pop
popf
pop
sbb
cmpsl
movsb
shll
mov
insb
insb
outsb
dec
imul
aaa
loope
sub
or
or
dec
jecxz
sub
sahf
or
imul
xlat
rorl
lcall
mov
jnp
andb
movsl
cmp
aaa
sub
pop
cld
or
cmpsb
iret
mov
test
mov
dec
ljmp
cmp
inc
imul
adc
mov
fisttps
fcmovu
gs
insl
adc
push
popf
les
fs
mov
scas
or
mov
jmp
pop
rol
gs
sub
jg
movsb
cmpsb
addl
mov
push
repz
test
jb
mov
jmp
fimull
pusha
push
and
or
xlat
pushf
roll
aaa
shlb
and
dec
popa
fbld
enter
aas
clc
mov
jle
mov
mov
ret
mov
movsb
add
mov
ljmp
mov
jns
in
cmp
andl
mov
fs
cmp
cli
js
sbb
push
dec
inc
xchg
repnz
in
jmp
test
std
test
xor
bound
or
les
lods
and
lea
dec
sbbb
lock
scas
not
mov
out
cltd
dec
popf
sub
push
rol
int
clc
dec
lds
dec
movsb
bound
push
ficompl
cli
mov
pop
push
dec
mov
cmp
imul
sbb
adc
jo
jecxz
mov
dec
sub
aaa
sti
push
cmp
pop
insl
ljmp
lea
xor
jle
addr16
fmul
std
cmp
mov
push
jae
dec
sbb
jp
xchg
or
xchg
push
js
inc
mov
leave
dec
test
and
iret
notb
cmc
out
mul
inc
lock
lahf
mov
push
cmp
push
in
inc
in
adc
push
xor
arpl
xchg
and
push
dec
in
push
loopne
cwtl
mov
scas
inc
push
cmp
addl
das
sub
rorb
dec
inc
and
call
inc
xlat
jbe
adc
sbbb
lds
push
cmpb
cmc
insb
add
ret
mov
fwait
aam
xor
mov
xchg
and
mov
fisttpll
sub
or
lret
dec
fwait
xchg
sub
out
pop
lds
les
lret
pop
ss
push
ljmp
xor
mov
stos
push
ljmp
in
es
int
in
repnz
jge
arpl
sbb
mov
clc
dec
and
in
xchg
test
aam
hlt
xor
sbbl
icebp
mov
mov
push
leave
jmpw
jp
cmp
push
cltd
mov
fidivl
jbe
xchg
and
out
mov
dec
mov
inc
outsb
mov
push
daa
mov
sub
imulb
push
mov
xchg
pop
pop
mov
sub
shlb
jecxz
pushw
cmpsb
jo
xor
imul
cwtl
sar
pop
data16
mov
lea
pop
out
test
hlt
ficompl
bound
mov
stos
inc
sub
int
push
sahf
das
jmp
dec
test
out
mov
das
mov
int3
outsl
add
xchg
xchg
out
popa
clc
testl
iret
cmp
ret
aas
sbb
dec
loopne
pop
ret
jnp
adcb
pop
mov
pop
push
movsb
inc
aas
cmp
sti
xchg
mov
mov
mov
pushf
dec
jecxz
mov
mov
and
mov
rorl
rcr
mov
sbb
daa
es
stos
lock
or
sub
dec
xchg
mov
loopne
jo
push
ds
bswap
and
negl
push
xor
fistps
mov
lea
test
repz
lcall
fnstsw
dec
test
mov
insb
fbstp
mov
out
push
push
dec
fisttpl
aaa
gs
xchg
add
pusha
clc
add
add
std
push
and
ret
xchg
les
test
daa
jbe
or
and
test
lods
xchg
pop
mov
mov
js
add
mov
sub
push
ss
cmp
aas
int
test
rclb
rcrl
sub
push
adc
and
and
mov
pop
xor
cmp
lea
cmc
popa
outsl
push
sbb
mov
mov
loop
push
mov
cmp
jmp
lock
outsl
repnz
cmp
movsb
rcl
or
inc
mov
mov
lea
cli
add
sub
xor
popa
inc
adc
cmp
sub
pop
or
jmp
imul
adc
movzwl
and
mov
hlt
mov
icebp
xor
shrb
sarl
shll
xor
jnp
popf
mov
sub
fwait
inc
dec
xor
sub
shlb
clc
adc
xor
dec
sbb
ret
cs
in
mov
jno
mov
pop
jle
divl
mov
out
lods
sub
inc
in
mov
cmp
movsb
hlt
or
xchg
test
iret
jg
insb
jb
dec
cwtl
pop
loop
push
movsl
add
out
fisubrs
mov
addr16
and
sbb
insb
jmp
push
aad
lock
dec
add
js
lret
sarb
jg
sbb
adc
add
icebp
mov
test
inc
mov
mov
mov
sub
fcomip
cmc
or
or
in
mov
stos
mov
movntq
or
cld
push
stos
sti
fists
xchg
icebp
jl
nop
iret
push
rolb
notl
lcall
lds
aaa
pop
imul
xchg
popf
adc
lock
cmp
call
idivb
add
test
in
aam
lea
cld
mov
lahf
cmpl
hlt
and
lods
cmp
or
push
push
push
movsb
and
or
mov
imul
mov
mov
lea
movsb
stc
xchg
imulb
jmp
and
jb
cmp
dec
add
scas
fsubl
pusha
sub
test
fdivs
xchg
add
js
adc
sub
lods
jecxz
int3
fisubl
xchg
es
mov
std
mov
push
adc
push
push
or
xchg
add
mov
int
nop
dec
adc
fdivs
push
or
mov
lret
sti
adc
and
sti
push
jmp
mov
popf
scas
sbb
outsl
push
mov
pop
cmc
pusha
imul
cmpsb
dec
fwait
cmp
insb
mov
sbb
mov
xchg
lods
out
mov
and
or
and
nop
mov
jnp
push
in
mov
jg
data16
int3
sahf
jp
stc
push
push
je
repnz
ljmp
mov
push
jmp
popf
mov
dec
pop
cmpl
adc
lods
outsl
lret
clc
push
gs
insb
add
jne
cmp
push
ret
jb
or
mov
ret
fnsave
sbb
mov
test
or
std
push
pop
mov
scas
xor
out
and
mov
pop
dec
push
rcrl
fs
stc
xchg
xchg
lret
lret
mov
insb
dec
mov
push
ja
mov
push
aas
xlat
std
add
jle
inc
and
sub
push
in
sbb
cltd
lods
test
sbb
pop
pop
cmpsl
cmpsl
cli
pop
add
jnp
lock
mov
aad
out
out
icebp
pop
xchg
push
aas
pop
pop
xchg
testl
sub
pop
loop
mov
push
or
fldenv
hlt
and
or
stos
lock
dec
add
adc
inc
icebp
xor
sti
sbb
and
movaps
stc
pop
test
mov
rolb
mov
xor
hlt
data16
test
pusha
les
inc
dec
dec
pop
sti
leave
pop
aaa
sbb
insb
stc
cmp
or
pusha
ja
outsb
cmp
cmp
and
addr16
push
sti
cmp
loopne
cmp
out
mov
ror
sbb
sbb
in
aam
fdivrs
nop
iret
and
and
ret
sub
insb
jg
fcomip
daa
jmp
leave
cwtl
ds
jnp
or
jbe
mov
mov
push
lds
mov
adc
cmp
in
ret
pop
arpl
les
aam
jne
in
lock
in
pusha
mov
cmp
sahf
and
xor
out
cwtl
push
xlat
add
sbb
cld
push
adc
jae
int
movsb
xchg
js
mov
into
xor
xchg
inc
jge
push
pushf
mov
pop
movsb
dec
fstpt
imul
testb
inc
inc
inc
fisubs
outsl
push
fiadds
in
jbe
and
pop
call
dec
sahf
cltd
cwtl
into
adc
mull
xchg
mov
js
movb
in
insl
or
mov
data16
jle
jle
push
outsl
jns
inc
imul
adc
notb
lods
fwait
cmp
sbb
ss
jns
ficomps
push
stos
dec
sub
repz
or
jb
cmp
xchg
pop
pop
and
movsb
mov
jbe
dec
movsl
adc
mov
into
push
mov
aad
jecxz
mov
sbb
hlt
adc
inc
or
sbbb
dec
arpl
je
out
sbb
xor
adc
ficoml
mov
add
call
dec
lret
jl
adc
mov
fistpl
mov
vmread
cmpl
es
xchg
sahf
rol
in
ret
fnstcw
insb
sub
addr16
add
cwtl
xchg
andl
add
cmp
call
and
push
inc
fldt
or
into
add
push
or
icebp
mov
in
xor
and
fmul
aad
jnp
std
inc
shll
div
push
cmp
xor
cmp
outsl
cltd
rdpmc
mov
or
mov
fcoms
ja
shrb
je
pop
pop
mov
mov
cmp
out
mov
addr16
jge
jp
in
xor
push
jp
mov
and
out
stc
stos
ja
push
dec
fadds
std
shll
pop
xor
sub
and
fldt
mov
insl
sbb
pop
push
loope
xor
ret
pop
mov
push
lods
cmp
ret
js
mov
add
mov
out
push
inc
xchg
fsubr
pushf
insb
jp
push
fiadds
mov
mov
fsubs
and
out
ja
jecxz
sahf
cmp
mov
inc
sbb
jb
push
je
jbe
ret
ss
repz
push
jle
nop
push
cmpsl
jecxz
imul
xchg
push
ret
cmp
addr16
inc
cmpsl
loope
sti
adc
into
subl
jbe
mov
jmp
dec
xchg
add
shr
xchg
stc
mov
lret
cmp
out
or
inc
adc
add
lods
pop
mov
ljmp
inc
xchg
jne
adcb
and
fisubl
xor
ja
int3
xchg
add
jnp
cmovle
cli
loop
stos
or
fwait
sub
insl
mov
repnz
fiadds
inc
mov
scas
fwait
je
cwtl
pop
pushf
lret
sahf
sub
sbb
pop
jecxz
repz
imul
fs
xchg
in
ljmp
decb
stos
dec
or
fcmovne
dec
xor
insl
mov
cmpsl
cltd
xor
xchg
idivl
mov
pop
jmp
cmp
cmpsl
xchg
cmp
cmpl
fs
sbb
push
hlt
pop
outsl
sbb
stos
push
and
and
mov
imul
data16
inc
mov
sbb
cmpsl
and
sar
fisttpl
and
hlt
mov
out
push
adc
mov
test
and
push
fnstsw
in
inc
add
add
mov
fiadds
cwtl
cwtl
lahf
and
pop
mov
sahf
xor
std
aas
push
or
insb
repnz
cmc
and
ja
add
rcl
fmul
jp
bnd
nop
or
xorl
dec
enter
push
js
sub
sub
inc
pop
pushf
ja
xor
jnp
or
imul
in
push
jb
and
cld
adc
mov
mov
adc
sbb
or
xchg
das
ljmp
push
or
push
test
loope
jg
xchg
push
sub
adc
mov
or
jbe
mov
sub
xor
ret
jae
cmp
dec
ja
into
push
sahf
add
xor
out
adc
je
loopne
ljmp
imul
adc
bound
jmp
push
int3
xchg
sub
mov
iret
jge
fsubrs
lea
icebp
rol
filds
popf
pop
sbb
jo
stos
pop
jae
jno
imul
negb
pop
sbb
adc
repnz
sbb
femms
sub
and
lods
das
and
enter
addr16
pop
sub
pusha
add
jl
mov
stos
roll
movsb
push
add
lret
xor
xor
add
xor
xchg
lds
out
dec
addr16
sbb
movsl
jmp
mov
inc
lret
loop
lcall
pusha
dec
pop
add
stos
rcl
daa
pushf
mov
jbe
or
pop
js
xchg
jmp
jns
jo
push
push
inc
xor
dec
lahf
or
mov
dec
lock
scas
outsb
or
pusha
mov
fwait
cmp
out
sub
rcr
fisubrl
or
lods
movsl
pop
inc
out
adc
addr16
div
jmp
jmp
jge
add
jne
stc
push
and
leave
repnz
fcmovnu
addl
loopne
fs
iret
sarl
add
cmp
dec
push
mov
pop
mov
push
enter
sub
movsl
imul
inc
insb
repz
ds
inc
xchg
xor
xchg
in
fimuls
enter
and
cmp
sub
lods
mov
add
outsl
mov
ja
dec
rcll
push
outsl
push
ja
dec
andb
test
pop
and
out
pop
dec
xor
loopne
pushf
jno
test
push
pusha
xchg
stc
fmuls
push
std
cmp
mov
pop
ret
out
pop
call
mov
mov
cmp
add
dec
fs
xchg
jo
in
scas
jnp
mul
and
xchg
cmpsl
stos
inc
mov
add
shr
rcrl
fwait
mov
insb
mov
push
xchg
xlat
pop
fwait
mov
hlt
mov
or
sbb
in
sbb
cmp
xor
cltd
mov
shll
cmp
stos
sbb
orl
dec
and
mov
fcomps
movl
add
cli
pusha
and
rclb
cmpsl
clc
cmpsl
cmp
repz
cmp
insb
push
lahf
jge
adc
ficomps
or
cmc
cmp
adc
adc
es
into
in
popf
clc
ljmp
jno
addb
ja
inc
dec
inc
or
fstps
popl
sub
std
mov
je
outsb
inc
out
push
aaa
outsb
movsl
ljmp
outsb
xor
inc
int
lock
jae
sub
inc
push
lahf
arpl
stc
push
or
xchg
push
mov
insb
pop
dec
ds
dec
shl
xchg
sub
pop
jno
push
icebp
arpl
fadds
loop
enter
and
mov
out
dec
add
pop
leave
xchg
mov
xchg
push
dec
add
repz
outsl
or
dec
dec
repnz
popa
add
fwait
dec
test
ror
or
shl
mov
mov
jo
jge
sti
shl
mov
sbb
mov
push
cmp
xchg
sbb
jne
lret
sub
xor
roll
lods
sarl
fstpl
js
mov
jp
rorl
adc
jne
es
daa
movsb
sbb
mov
repz
in
dec
pop
xchg
push
test
mov
divl
icebp
xchg
sbb
inc
push
je
cmpsb
mov
inc
add
lock
and
fsubl
movsb
ret
loope
rorl
icebp
mov
jmp
inc
jecxz
scas
scas
mov
ret
push
scas
xchg
push
and
jp
jb
adc
test
dec
mov
fwait
jmp
lahf
mov
iret
popa
and
aaa
inc
jb
add
mov
fstp
jg
dec
lret
inc
leave
dec
pop
loop
fisubrs
or
inc
out
loope
push
stos
nop
test
cmp
mov
mov
fnsave
push
inc
jg
imul
rcl
mov
sbb
loop
fisubrs
aaa
xchg
scas
mov
mov
les
and
lret
dec
rol
jge
icebp
mov
cmp
mov
insb
push
aad
sbb
cmp
sbb
cmp
mov
cltd
cld
scas
mov
mov
shlb
or
xchg
mov
or
lahf
or
sub
mov
fdivr
pop
sbb
jne
jb
test
xor
shrb
xor
mov
subl
ljmp
or
aad
pop
mov
hlt
mov
lods
jmp
inc
xchg
add
lods
outsl
fstps
jl
mov
insl
insb
testl
xor
or
das
or
pop
ret
and
test
fisubs
mov
fisttps
push
mov
lock
push
or
pop
repz
pop
ret
xor
add
cmpl
push
in
mov
jg
lcall
mov
cmp
inc
xor
inc
mov
jp
cld
fildll
lret
shrl
in
mov
add
mov
fildl
mov
xchg
imul
int3
add
fs
jg
ret
dec
fwait
adc
cmp
add
mov
push
ds
mov
clc
add
xor
loopne
pop
lahf
in
lret
jae
mov
mov
xchg
dec
rcrb
push
cltd
fs
and
lock
push
mov
addr16
mov
pop
in
mov
cmp
ret
add
pop
sub
pop
xchg
repnz
jns
aas
movsb
push
pop
push
xchg
in
je
leave
inc
mov
fcom
sub
arpl
and
sbb
sbb
fnsave
and
cmp
scas
push
jb
xchg
or
mov
pop
push
arpl
incb
adc
test
int3
push
jbe
xchg
sbb
mov
add
jp
dec
test
xor
ljmp
cli
inc
nop
jae
repnz
mov
jmp
loopne
xlat
in
xchg
popa
mov
cmpsb
and
je
cmp
fs
add
sbb
or
inc
hlt
sub
add
gs
test
mov
lret
lock
adc
aas
scas
dec
mov
es
jns
es
pushf
in
pop
push
rcrb
je
lret
out
sbb
lahf
adc
lds
or
mov
cmpsl
cld
inc
or
pop
add
mov
pop
mov
and
into
clc
sub
xchg
push
dec
js
aam
cmp
into
mov
jo
mov
shlb
mov
cmpsl
xchg
aam
jnp
stos
xchg
sub
pop
out
dec
mov
jnp
inc
mov
popa
lods
mov
pop
adc
xchg
and
xchg
rcll
mov
pop
sbb
inc
dec
mov
je
push
in
jbe,pt
inc
stos
sub
pushf
push
aas
rorb
or
test
or
sti
jg
shlb
and
insb
cmpsl
daa
pop
cli
add
fucom
fwait
mov
clc
dec
pop
jl
or
lods
and
out
xor
adc
leave
jnp
mov
jl
movsl
sahf
psubsb
or
movsb
cmc
pop
mov
sub
out
sbb
mov
sub
insl
aad
out
sbb
call
shlb
clc
outsb
xor
pop
pop
addr16
call
movsb
or
cmp
mov
jns
sub
sbb
and
std
add
cwtl
adcl
arpl
and
fnstsw
outsl
sub
cmp
jl
orb
jl
xor
inc
add
roll
and
out
aas
mov
jne
pop
adc
mov
mov
or
sub
dec
or
xchg
adc
xchg
cmp
ja
and
pushf
add
or
cld
cld
mov
cmpl
cltd
or
fwait
arpl
mov
mov
inc
adc
sarb
and
sbb
or
out
sub
push
test
loope
sar
mov
sahf
pushf
push
aas
xorl
cmp
ret
xor
rorb
les
mov
enter
mov
shlb
ljmp
push
jbe
cs
sub
inc
enter
dec
les
leave
sarl
loope
mov
ja
icebp
insb
out
fdivs
or
mov
cmp
adc
or
movsb
in
mov
dec
frstors
punpckldq
lods
xchg
loope
lods
cltd
nop
dec
cs
mov
daa
into
or
nop
popf
into
and
bound
fcmovu
insl
fsubrl
lods
jg
imul
sbb
popf
sbb
xchg
lds
xor
jecxz
sbb
fmulp
clc
jmp
add
addb
test
insb
cmp
cltd
mov
or
inc
es
sub
mov
mov
enter
fwait
dec
imul
mov
cmpsb
test
cmp
test
xchg
cmp
xchg
call
adc
mov
repz
push
xchg
or
push
hlt
out
outsb
outsb
push
int3
dec
test
adc
shrl
das
xchg
xor
mov
jl
stos
bound
sbb
fmuls
adc
jbe
test
inc
xor
nop
testl
imul
mov
aam
lret
cmp
lds
insl
pop
push
xor
mov
lock
shr
test
push
cmp
cltd
or
xor
sub
cmpb
test
sub
xchg
or
xor
mov
cmpl
les
sbb
popa
mov
sub
adc
out
sbb
add
fcoml
imul
cmp
in
jne
jo
movl
sbb
imul
xchg
pop
dec
mov
jnp
mov
or
gs
xchg
push
pop
out
xchg
push
adc
notb
lahf
pop
lds
fistpl
mov
xchg
adc
fldl
mov
sub
fimuls
pop
push
jae
pop
testb
aas
fbstp
lods
outsl
add
loope
lret
sbb
mov
or
cmpsl
jae
inc
or
daa
insb
fsubr
adc
xor
outsb
cmp
jmp
insb
inc
mov
mov
fcompl
js
jle
and
dec
lods
dec
enter
pop
push
sub
in
cwtl
mov
insl
pop
fsubs
fsts
pop
add
mov
loopne
dec
test
jb
cwtl
mov
arpl
shlb
push
jp
daa
mov
out
imul
add
jns
sub
std
push
mov
test
and
mov
mov
ret
popf
add
add
arpl
xchg
xor
mov
dec
arpl
mov
in
cs
je
xchg
xor
mov
adcb
jbe
dec
xchg
jae
in
sbb
movsb
fnsave
xchg
dec
xor
or
shrb
lahf
inc
out
fisttpll
and
mov
jno
aas
sub
jge
stos
jl
and
xchg
insb
push
mov
pop
je
push
push
movsb
mov
cmp
cmp
fstps
jecxz
sarl
fs
test
push
ja
lds
jne
push
cmp
mov
insl
pop
aad
out
movsl
ffree
mov
std
out
fdivs
shr
or
push
test
ss
je
jp
cmp
mov
test
mov
jmp
daa
or
mov
push
jp
push
icebp
movsl
cmpl
pop
js
jg
pop
cmp
outsb
ret
test
push
sbb
into
dec
out
shll
jnp
cli
cmp
mov
rolb
sub
push
sbb
scas
aaa
xchg
sbb
dec
aas
mov
adc
mov
mov
out
imul
aaa
cmp
xchg
in
in
push
enter
inc
and
jl
cmp
cli
add
repnz
adc
push
lret
frstor
rcrb
lret
addb
sub
ss
mov
stos
xor
adc
lods
mov
mov
cli
ljmp
ljmp
xchg
dec
andl
and
cs
push
lods
sub
loopne
insb
int
sarl
or
jae
aad
mov
push
lcall
mov
inc
dec
rol
dec
xchg
ja
mov
inc
loopne
mov
jo
movsb
xchg
js
add
push
call
ljmp
mov
push
int3
and
outsb
iret
pop
nop
push
movsl
sbb
mov
das
mov
or
pop
push
add
andl
jbe
dec
add
push
ljmp
add
mov
das
mov
hlt
jnp
daa
test
inc
idivb
dec
push
int3
rol
xchg
sub
xchg
lods
cmp
add
inc
sbb
cwtl
xchg
scas
fwait
in
popf
test
add
jle
dec
and
mov
sub
and
cmp
pusha
adc
cmp
jl
and
xlat
popa
popa
aaa
hlt
pop
jb
cltd
dec
fmuls
pop
jno
rolb
xorb
lret
gs
and
aad
xchg
mov
jl
cmp
mov
ss
xor
fwait
pushf
push
xor
xor
out
loopne
stos
sbb
sub
fwait
loopne
int3
ljmp
mov
dec
mov
inc
sub
cmc
or
or
aam
push
push
lods
stos
sbb
sub
ja
sub
push
adc
std
push
sub
mov
bound
fs
or
jno
loop
push
out
gs
mov
scas
sub
mov
inc
push
mov
insl
test
dec
aaa
sbb
add
cwtl
adc
aam
cwtl
push
jbe
adc
add
movsb
idivl
imul
sub
test
cltd
pop
xlat
and
fs
in
mov
mov
mov
sbb
mov
stos
or
lcall
decl
out
cmp
and
sbb
imul
jo
popf
inc
int3
mov
in
mov
cmc
cmp
sbb
xlat
repnz
inc
fistl
mov
cli
jns
dec
mov
sub
fisubs
lcall
icebp
dec
mov
fsubs
imul
lds
push
sbb
mov
outsl
rorb
jne
scas
cli
negl
outsb
into
push
sbb
jmp
xlat
into
ja
lods
jae
mov
fdivl
enter
cltd
cmp
and
cmpsl
rolb
xchg
fwait
jecxz
fucomi
daa
fs
call
daa
call
and
mov
inc
or
sahf
xchg
mov
cmp
fdivrs
je
sbb
mov
mov
lds
mov
outsl
mov
popa
jb
xchg
fldcw
xchg
insl
daa
push
cmp
inc
add
lret
sub
iret
pop
shl
popa
and
lcall
cs
incb
jge
pop
pushf
jecxz
inc
in
lea
test
cmp
loope
sbb
sbb
mov
cli
imul
dec
andl
lret
inc
adc
addb
sbb
mull
push
ljmp
push
jp
ds
ss
sub
mov
inc
xchg
jg
enter
iretw
mov
in
stos
jne
xchg
xor
addr16
shrb
cmp
subb
xchg
rorl
or
push
adc
hlt
mov
out
in
mov
ret
ss
inc
outsb
mov
popa
or
add
add
or
loope
shrb
xchg
mov
psllq
je
xor
fnstsw
les
repnz
xor
sub
outsl
mov
shlb
adc
shll
dec
pop
mov
adc
or
daa
adc
out
push
ss
xchg
rcl
mov
pop
leave
addr16
and
clc
sti
mov
shlb
pushf
int3
pop
arpl
mov
shr
and
jb
push
movsl
scas
iret
fcompl
adc
fstps
add
aaa
bound
std
or
add
daa
mov
and
es
mov
insl
mov
jmp
lahf
lcall
or
adc
jno
sub
cli
xor
xchg
orl
sbb
gs
movl
imul
sub
mov
xchg
xchg
lds
data16
aam
mov
into
shr
rcrb
orps
into
hlt
lea
dec
ret
add
ror
into
cmp
dec
dec
lock
push
hlt
sbb
repnz
out
xchg
sahf
jae
mov
jecxz
das
rorb
and
pop
test
push
dec
mov
push
shrl
xor
inc
mov
adc
mov
sbb
test
popa
js
lcall
push
fbld
stc
testl
push
cmp
mulb
sbb
js
pop
dec
sub
jle
xor
pop
inc
jl
add
insb
sbb
mov
push
pusha
fadd
sbb
insl
cmc
fs
sub
sbbl
push
adc
xlat
inc
sahf
add
divl
and
nop
js
aas
hlt
rolb
out
rol
sub
cmpsl
js
sbb
iret
jmp
push
mov
mov
loop
dec
das
push
adc
stc
cli
inc
in
in
pop
cmc
insl
fiadds
inc
test
fldcw
inc
sbb
dec
push
out
dec
push
pop
clc
add
or
and
dec
sbb
outsb
inc
out
jno
mov
or
outsl
outsb
pop
mov
or
enter
adc
adc
int3
xchg
aad
xor
in
inc
sub
mov
mov
xor
scas
cmpsb
xchg
push
aam
clc
dec
stos
add
test
pop
sbb
cli
stc
clc
outsb
add
rol
jl
push
add
or
sub
jge
jbe
fimuls
mov
mov
gs
and
arpl
add
sub
and
lods
cmp
inc
sbb
aam
add
pop
test
mov
stos
popf
mov
daa
xchg
mov
adc
and
leave
push
repz
jnp
rcl
iret
daa
jo
mov
mov
pop
jle
out
shlb
out
movsl
mov
jno
sbb
push
mov
cmp
push
icebp
add
lcall
int3
lds
not
inc
add
ja
xchg
loopne
test
out
inc
jl
cs
cmpsb
mov
dec
orb
call
cmpsb
mov
jb
out
das
or
pushf
mov
inc
sbb
xor
or
cmpsb
shll
mov
sarb
subl
lcall
mov
and
xchg
leave
nop
hlt
sahf
sub
out
int3
dec
dec
popa
lock
push
xchg
aas
mov
insl
push
adc
clc
pop
pop
push
call
jns
test
dec
roll
pop
mov
cltd
pop
xchg
hlt
shlb
arpl
cmp
frstor
xchg
jo
in
inc
mov
int
in
ds
inc
jmp
xchg
in
xchg
xchg
insb
jmp
popf
xchg
xchg
test
mov
cmpsb
jne
rcrb
rcr
scas
xchg
or
inc
dec
gs
jg
or
pop
mov
and
add
or
pop
cld
leave
jmp
pop
std
insb
in
movsb
push
xlat
imul
aas
sub
mov
cmpsb
inc
fiaddl
shrb
fdivrl
lret
mov
movsl
shr
imul
inc
pop
and
cmc
sbbl
lock
mov
xchg
and
lahf
xchg
jge
fwait
psrlw
jb
or
or
call
jae
or
sub
xor
push
icebp
xor
fs
add
pop
jmp
cmp
cmp
dec
fildll
jecxz
dec
or
iret
sbb
loopne
xor
bnd
push
int
test
xchg
lret
inc
or
fwait
or
jmp
jo
insb
jle
pop
and
pop
inc
mov
adc
jae
mov
mov
rorl
dec
in
xchg
enter
dec
sti
dec
scas
cmpsb
sbb
and
pop
mov
cmp
dec
mov
mov
fsubs
sbb
cmp
pop
aas
int
xchg
test
shll
pop
add
rol
mov
sbb
xor
in
push
dec
push
je
push
mov
jmp
inc
nop
and
or
in
sbb
mov
js
push
or
mov
sub
pop
add
mov
loope
lret
fsubs
test
repz
cmp
or
or
push
fistl
sti
mov
test
sub
pop
in
and
add
inc
jg
xchg
addw
rorl
jae
push
xor
loop
inc
xchg
in
cltd
xchg
aas
ret
int
addr16
aas
sti
ljmp
frstor
xchg
stc
shl
xchg
mov
mov
mov
push
lods
inc
xchg
fwait
test
je
scas
pop
sbb
cmp
push
mov
lret
xchg
subl
movsb
mov
sbb
fwait
fwait
mov
cmp
dec
jecxz
adc
inc
sub
fisubrl
fs
shl
cmpl
data16
pop
pop
leave
xor
jg
enter
push
fnsave
outsb
movl
inc
bound
fsubl
clc
push
dec
call
stos
sub
push
aam
jl
fsub
jmp
orb
and
xor
shr
push
jb
ss
sub
cmp
sahf
mov
pop
daa
imul
fsts
or
jecxz
xchg
sub
or
xchg
push
push
repnz
xchg
aam
mov
fildl
icebp
repz
shrl
pop
iret
and
dec
pop
test
dec
nop
jne
outsl
add
in
sub
push
pop
mov
inc
aam
clc
dec
jl
pop
fidivl
push
test
xchg
xchg
jo
adc
lfs
pushf
aas
push
pop
movb
sbb
out
push
lcall
mov
pop
arpl
xor
sbb
jmp
mov
mov
pop
flds
movsl
add
add
repnz
cmp
xchg
push
sub
test
arpl
filds
adc
cmp
sysret
inc
test
ja
mov
dec
mov
adc
inc
push
xchg
adc
push
xor
pop
imul
xchg
inc
test
or
mov
lods
fisubrs
adc
xchg
in
sub
xchg
sub
mov
cwtl
iret
test
jbe
sbb
fcom
aam
pop
sub
fwait
adc
and
push
mov
inc
mov
leave
xchg
inc
ret
or
add
lods
sbb
or
daa
pop
sbb
xchg
add
int3
mov
dec
xor
fiadds
xchg
mov
ret
sub
hlt
mov
movsl
sbb
push
jns
jg
stos
inc
call
test
in
push
adc
jo
int
pushfw
mov
dec
adc
aaa
ss
jns
stos
pop
xchg
imul
mov
or
xchg
adc
out
mov
ss
cli
cmp
pop
out
mov
push
mov
cmp
imul
movsl
mov
cmp
dec
out
rorl
mov
fwait
std
jg
xor
adc
push
xchg
dec
or
dec
idivb
mov
push
or
dec
in
stc
popf
ds
sub
xor
sbb
nop/reserved
sbbl
call
sbb
sbb
cmpsb
add
mov
ficoml
pop
neg
lret
es
movsb
out
pop
test
arpl
adc
mov
sbb
jecxz
lret
loope
and
mov
test
sub
imul
testb
pop
stos
out
ja
out
mov
js
inc
or
xchg
es
mov
jl
push
loope
subb
push
xchg
fcompl
pop
in
and
xlat
and
mov
popf
pop
out
cmp
ficoms
pop
popf
shll
pop
jl
outsl
adc
arpl
sub
push
xchg
enter
dec
mov
xor
adc
xchg
xor
or
or
push
push
or
in
ret
std
data16
dec
xchg
pop
lds
jns
xchg
cwtl
pop
in
mov
lcall
dec
dec
pop
mov
sub
sub
mov
inc
pop
popf
pop
sbb
mov
or
lahf
outsb
fldt
mov
cmpsb
sub
sbb
sub
mov
jo
mov
cmp
inc
jb
dec
stc
shr
hlt
arpl
mov
loope
pop
sbb
fldenv
cmp
cli
shr
outsl
inc
mov
jb
movsb
fstpl
mov
cmp
sbb
clc
pushf
or
mov
and
fs
mov
mov
cmp
mov
sub
xor
add
adc
push
push
push
orps
mov
rcrb
dec
lock
mov
and
or
pop
mov
dec
dec
pop
pop
jnp
es
andb
add
add
das
out
stc
xor
jnp
adc
sbb
xchg
sbb
frstor
ds
sub
mov
int3
mov
leave
scas
into
cmpsb
enter
sub
jmp
js
mov
inc
pusha
xchg
ret
sub
dec
movsl
add
push
les
inc
mov
ret
insl
dec
xchg
jmp
sbb
ljmp
lea
inc
push
clc
mov
paddq
add
dec
aas
je
icebp
lods
inc
pop
mov
cmp
jae
and
jbe
mov
jo
loop
pop
mov
fstpl
inc
into
pop
or
addr16
push
sub
sub
inc
jbe
or
pop
and
push
subl
mov
in
std
or
inc
das
fnstenv
rcrw
xor
movsl
fldl
dec
xlat
or
mov
arpl
dec
dec
filds
mov
xchg
js
jbe
scas
lock
stc
mov
inc
jl
dec
inc
sub
inc
cmp
fcomps
sbb
push
mov
pop
push
xor
xor
rcrl
xchg
jno
test
aas
lock
adc
jns
out
les
out
int
int3
out
and
iret
mov
xlat
or
xlat
fwait
in
and
cli
xchg
add
push
lea
cmp
aad
bound
test
in
bound
pand
popa
popa
sub
les
ds
jo
xchg
add
mov
pop
or
sbb
jmp
leave
lret
repz
test
add
jbe
addr16
lods
loope
or
ret
in
adc
inc
dec
fs
lock
imul
or
bound
fidivrs
push
jbe
decl
jge
aas
repnz
adc
repz
jmp
cmp
adc
scas
push
ds
pop
fimull
sub
mov
movsb
addb
xor
pusha
cmp
sbb
dec
jo
daa
push
inc
push
mov
dec
xchg
xor
psrlq
mov
mov
mov
add
sub
mov
icebp
outsb
mov
std
mov
or
adc
sahf
xchg
dec
cmp
jp
add
lcall
stc
clc
pop
imul
inc
cmp
jbe
mov
ljmp
push
das
adc
cmp
loope
fsubrl
cmc
xchg
cmp
loopne,pn
jge
sub
sti
xor
pop
dec
sub
imul
push
and
popa
lock
loope
sub
clc
add
pshufw
int
scas
or
dec
sub
scas
and
push
fcoms
or
shll
add
xor
fnsave
dec
mov
rorb
aaa
push
insl
es
adc
adc
test
cwtl
sbb
shlb
int3
push
cmp
orl
add
test
and
xchg
push
pop
int
test
pop
and
hlt
or
fsubrs
mov
pushf
pop
jecxz
add
or
push
mov
mov
push
xor
enter
mov
xchg
in
and
pushf
lcall
xor
movsb
pop
mov
bound
sarl
add
xlat
enter
outsl
decb
dec
mov
jne
push
iret
cmp
sbb
test
or
sbb
sub
std
movsb
xchg
pop
mov
sbb
mov
out
add
lods
dec
push
pop
rcll
daa
lods
aam
fnstenv
cmp
add
in
mov
xchg
pusha
mov
lods
mov
stos
sub
mov
jp
gs
adcb
add
enter
dec
insl
in
xlat
jbe
out
add
push
cmpb
in
mov
jo,pt
dec
rcrl
aas
adc
push
dec
sbb
sbb
incb
mov
mov
sub
mov
imul
pop
sbb
cmpsl
test
pushf
push
cmpsb
mov
add
cltd
pusha
sbb
jno
lods
insb
mov
in
fisttpl
inc
lret
push
cs
in
jp
out
in
jns
loope
pop
or
or
addr16
mov
rcll
jle
cld
pop
add
lds
jns
fbld
mov
fistps
push
jbe
or
test
and
cmpsb
in
outsb
roll
inc
add
sub
push
movsb
pop
cmp
mulb
cmp
push
inc
cwtl
fwait
dec
adc
movsl
xchg
mov
xchg
fcom
or
int3
test
repnz
lods
and
iret
dec
cli
sub
lahf
sbb
out
or
or
pop
sbb
push
mov
push
leave
fcoms
sbb
sarb
mov
arpl
sbb
fwait
add
orb
ds
out
mov
jl
push
fcoml
das
push
in
aaa
cmpsl
pop
inc
out
sbb
jecxz
je
dec
cld
aam
shrl
out
ror
dec
icebp
outsb
stc
int3
xor
push
test
imul
sahf
mov
fmuls
out
mov
jmp
subb
nop
xor
jge
loope
cmp
aad
adc
jne
jge
pop
mov
call
lock
jle
mov
ja
adc
pop
popf
in
push
xor
mov
jns
lahf
test
xchg
jns
push
inc
in
or
cmpl
inc
mov
dec
test
mov
xlat
scas
in
lcall
pushf
mov
or
mov
xchg
push
mov
ret
je
sub
pop
bound
je
cwtl
cmp
add
adc
mov
dec
lock
cmpb
xor
or
pop
popf
mov
popf
jl
shlb
sub
ret
cmp
mov
daa
insl
xor
cld
and
test
push
ja
dec
mov
ljmp
pop
fiaddl
mov
pusha
mov
add
pop
sti
jg
clc
orl
cmp
fldt
add
rcrb
jo
lock
imul
inc
pusha
aas
xchg
mov
arpl
imul
out
push
xchg
test
or
ret
ja
jle
xchg
dec
cmc
pop
jmp
insb
stos
dec
gs
or
cmp
in
mov
out
aam
jae
push
int3
add
or
jge
into
or
out
jl
nop
es
jle
sbb
and
xor
pusha
add
mov
adc
or
push
add
fildll
lea
inc
mov
fstl
sarl
rcrl
xor
jne
rep
and
mov
mov
mov
repnz
mov
mov
mov
incb
jns
shlb
sub
or
mov
dec
cs
test
adc
push
mov
jle
jnp
ret
jmp
insl
sub
and
pop
aas
add
inc
and
dec
ret
dec
andb
cmp
cld
js
movsl
cld
movsb
xor
cmp
popf
xchg
int3
fldl
sub
push
ror
outsl
or
sbbl
cmc
lock
push
add
rol
dec
add
bound
test
jae
cmp
lods
mov
out
xchg
inc
pushf
add
adc
xchg
in
push
aas
xor
fisubrs
pop
orl
and
cmp
mov
flds
enter
push
push
ss
int
or
dec
or
pop
ja
mov
push
sub
push
mov
fbld
movsl
repz
or
sub
mov
cwtl
fcompl
sub
fcmovu
testb
xlat
ss
das
inc
popf
lcall
mov
cmp
sti
cmp
test
xchg
push
leave
dec
xchg
cs
mov
adc
xchg
shr
inc
jno
cmp
push
push
xchg
ret
addr16
dec
push
roll
pop
lcall
ror
fdiv
pop
aaa
movsb
mov
cmc
add
and
sub
mov
clc
ja
loope
js
cmc
arpl
notb
push
cmpsl
add
sbb
outsb
je
mov
ja
add
push
dec
stos
and
cmp
mov
cli
fdivp
cmp
xchg
fildl
loopne
pop
in
inc
adc
mov
pushf
clc
fldl
xor
xchg
movl
mov
pushw
movb
hlt
or
mov
sahf
push
mov
add
add
test
inc
pop
test
loop
dec
mov
push
sub
mov
sarb
mov
fimuls
xor
ss
jns
sub
sbb
jae
lahf
dec
inc
pusha
push
popf
xchg
decb
outsb
inc
dec
push
jl
mov
stos
data16
icebp
clc
push
and
pop
rcrb
cwtl
loope
sub
mov
mov
fisubl
jns
or
jo
jge
push
inc
jne
xchg
adc
xchg
ja
rclb
xor
lock
pop
stos
test
stos
arpl
cli
xchg
and
sahf
push
gs
imul
jbe
insl
mov
push
popf
push
hlt
sbb
sub
mov
and
adc
sbb
or
lock
rcl
adc
fisubs
into
pop
xchg
push
std
cwtl
mov
stos
adc
mov
push
mov
orb
or
push
jp
xorl
cmp
sbb
adc
cmpsl
lret
xor
xor
ds
jl
dec
aam
shrl
push
push
incb
adc
ficompl
icebp
push
js
sahf
decl
mov
push
cmp
cmp
hlt
inc
loopne
mov
cltd
int3
sbbb
mov
pop
lods
gs
dec
and
outsl
movsl
inc
dec
or
imul
cwtl
cmp
test
push
adc
in
jo
pop
cli
jl
mov
xchg
inc
push
lods
js
xchg
les
repz
rol
inc
xchg
and
sub
mov
pop
push
lds
popa
push
or
loopne
jne
scas
mov
push
js
idiv
mov
pop
inc
bound
rcrb
fstp
mov
xor
imul
and
mov
in
sbb
mov
adc
addr16
dec
adc
out
repnz
xor
or
ja
lock
insb
in
popa
in
mov
loope
sub
xlat
pop
push
mov
aaa
outsl
jno
mov
test
xchg
imul
and
add
xor
cmp
das
ds
mov
lods
add
sub
ficomps
cmpsl
and
jbe
pop
or
loope
mov
or
lret
popa
xchg
adc
mov
movsl
mov
roll
and
repz
repz
or
inc
dec
or
jne
cmp
into
mov
clc
sub
pop
mov
pop
mov
mov
xor
out
jne
das
dec
dec
cmp
popa
inc
cmp
daa
das
adc
xchg
gs
movsb
shrl
push
icebp
mov
pop
xchg
push
movb
mov
sub
adc
int3
mov
push
pop
into
xchg
aaa
add
push
cld
xchg
nop
testb
sub
mull
out
jae
add
in
sub
push
call
mul
adc
dec
inc
pop
mov
jb
push
xchg
xchg
dec
fisttpl
pop
sahf
movsl
ss
jp
cltd
insb
sbbl
mov
scas
cmp
and
push
mov
lea
stos
mov
stos
movntps
lods
sub
sbb
cmc
cmc
or
add
clc
dec
and
push
mull
sbb
imul
sbb
mov
lock
push
dec
cmpsl
call
test
leave
jg
or
test
lds
stos
dec
pop
jp
scas
mov
or
idivb
cmp
and
push
pop
ret
cmp
and
mov
lods
cmpsb
or
fsubs
xchg
aam
and
sub
in
push
pop
or
xlat
clc
sub
inc
les
inc
dec
fwait
inc
pop
jle
in
jo
dec
in
mov
or
push
je
enter
xchg
add
push
lock
xchg
aas
fcmovbe
push
lock
lds
aad
push
fildl
les
cmp
and
lea
sub
sbb
and
imul
lods
and
test
nop
mov
push
and
cli
push
jnp
enter
add
test
into
xchg
das
cmp
lock
jno
jle
cmp
xor
sub
xchg
cld
mov
inc
or
jle
dec
ja
aam
or
cwtl
adcl
sahf
arpl
fcmovnu
mov
sahf
sbb
ja
push
cmc
imul
sbb
sub
ja
adc
faddl
cwtl
push
stos
mov
cmpsl
fsubs
sbb
mov
xchg
in
sbb
divb
subl
stos
xchg
clc
pusha
popa
andb
mov
xor
cwtl
cmp
push
cmp
icebp
scas
dec
enter
push
in
add
ss
and
repz
jp
sahf
sbb
adc
ss
and
sbb
add
jne
aam
aam
adcl
inc
jns
cli
out
sub
dec
jne
cmc
cmp
push
cld
mov
push
jbe
mov
xchg
pop
add
push
dec
mul
out
inc
adc
xor
mov
lret
mov
sarl
mov
repz
jns
fsubs
into
ljmp
lea
pop
neg
add
cwtl
int
push
and
stos
jmp
cli
pop
sbb
outsl
jb
lods
dec
mov
adc
jle
mov
mov
cmp
ds
in
push
fwait
add
jp
bound
jo
repnz
push
popf
lea
pop
cmp
call
jge
xor
jle
into
jl
iret
fsubrl
leave
jecxz
add
lahf
bound
insl
xlat
pop
test
mov
scas
push
lret
or
aad
fptan
cmp
sub
in
arpl
mov
ds
pop
push
xor
and
jnp
dec
dec
xchg
and
mov
push
mov
shlb
add
and
in
sbb
add
cli
push
ret
roll
fdivs
scas
aas
dec
in
adc
ja
test
sbb
in
out
aaa
out
dec
sub
push
sub
fldl
fisttpl
shll
loopne
iret
add
test
lods
iret
cmpsb
mov
mov
pop
add
or
cmp
add
mov
iret
sub
sub
mov
lods
mov
imul
or
sub
lret
test
adc
push
mov
out
push
pop
outsl
xchg
insb
repnz
fdivr
stc
or
fsubl
subb
cs
cmp
fwait
mov
mov
xchg
ret
mov
jecxz
pop
cltd
cs
push
and
push
adc
ficompl
mov
dec
bound
repz
aas
int3
lds
xchg
cmp
sahf
pop
cmp
jecxz
dec
cmc
cmc
or
ds
in
aam
mov
adc
cmp
mov
inc
pop
sbb
jnp
test
sahf
arpl
push
loope
out
imul
dec
jns
iret
lret
cli
lods
and
mov
xchg
adc
push
pop
jnp
lods
aaa
sub
sbb
add
cli
enter
getsec
push
fwait
out
dec
sub
lds
fcmovnu
popa
mov
and
cmpsb
shlb
sub
mov
lock
out
push
out
pop
ljmp
pop
push
int
test
jae
sbb
repnz
sub
mov
inc
js
popf
mov
adc
mov
enter
outsl
push
add
jae
enter
jge
sbb
jo
jl
sub
out
std
jo
mov
call
mov
ds
je
mov
or
lods
xchg
adc
cmp
pusha
sbb
lods
stos
call
mov
mov
lcall
dec
jl
cmpxchg
js
push
lea
and
daa
jg
lock
fadds
mov
cmp
xchg
mov
mov
or
ljmp
bound
mov
dec
mov
fldenv
test
or
inc
ja
inc
bound
push
into
lea
or
pop
sbb
inc
or
shlb
ficomps
pop
ja
pusha
sbb
pushf
xchg
mov
mov
mov
jo
xor
pushf
out
movsb
lock
push
andl
imull
bnd
jge
str
sub
mov
movsl
jo
cmc
cs
lods
out
fxch
stc
or
cmp
xor
pop
pop
mov
mov
loop
mov
outsb
push
and
cmpsl
adc
in
mov
daa
rclb
insb
push
test
test
mov
cltd
xor
cli
or
mov
pop
popa
imul
jbe
clc
mov
adc
pop
flds
mov
arpl
jmp
loopne
fwait
xchg
ds
mov
insb
testb
pop
int
mov
fwait
inc
cmp
scas
outsl
popl
pop
je
in
xor
test
in
loopne
int
std
jge
or
fwait
dec
andb
sbb
nop
mov
das
or
and
jb
int3
icebp
inc
ss
jmp
mov
leave
out
dec
enter
test
xor
mov
add
mov
into
lods
lret
mov
pop
sub
sbb
sub
lret
sub
imul
aaa
xchg
dec
cmp
fistpll
ficomps
cmpl
repnz
mov
xchg
jae
outsb
mov
sti
dec
pop
dec
call
pop
out
and
lahf
fcom
pop
std
and
icebp
lret
shrb
rclb
rcr
negl
lahf
add
add
enter
addb
addr16
sbb
mov
pop
dec
mov
push
lret
push
outsb
mov
scas
xlat
rcrb
sub
jg
jae
add
ja
add
jg
jmp
fmuls
dec
sub
cltd
fs
sarl
add
inc
ror
in
push
imul
js
add
subps
test
xlat
sbb
jg
adc
sbb
in
insl
pop
pop
test
daa
xchg
mov
xchg
les
jb
hlt
lock
dec
clc
jno
fbstp
jns
fmull
mov
and
stos
repnz
fistpll
inc
aam
pop
lock
daa
ss
outsl
fsts
cld
mov
push
jo
or
adc
add
les
mov
mov
arpl
dec
incb
sarb
cmc
ljmp
or
repz
push
iret
in
cltd
mov
dec
xchg
in
call
outsb
add
fistps
or
push
cld
ror
mov
cmp
cmp
sub
shlb
clc
pop
lods
in
add
add
into
xor
sub
fmuls
stos
data16
pop
push
add
pop
mov
mov
and
rcrl
pop
insb
lahf
into
jg
cmp
popa
pop
popa
loop
push
push
scas
inc
xlat
stos
in
mov
adc
repnz
cmp
and
jle
pop
fidivs
mov
jmp
push
push
test
cmp
sub
mov
jge
sbb
mov
push
mov
pop
imul
cmc
and
pop
and
sbb
out
adc
mov
pop
orb
leave
adc
and
xor
nop
lods
xchg
inc
out
add
inc
jmp
add
mov
adc
xor
cmp
aad
sub
jno
adc
and
cwtl
pop
outsb
call
pop
rorb
push
nop
sub
jnp
lea
and
mov
dec
stc
dec
sub
mov
xchg
in
mov
xchg
mov
xchg
in
pop
mov
fst
ficoml
ds
jo
pop
push
dec
sbb
not
sub
outsb
js
inc
and
fneni(8087
cmc
cmp
inc
in
or
mov
pop
or
push
sbb
mov
imul
jg
cmp
jbe
mov
push
aaa
pop
push
jb
xor
add
jnp
das
sub
jae
sarl
mov
jge
out
insl
sahf
out
xchg
rorl
lahf
fbld
and
push
push
jae
dec
and
jb
js
push
shrl
cmp
jp
movsl
out
jecxz
xor
pop
pop
mov
gs
mov
mov
pop
gs
sbb
cmp
push
dec
xchg
divb
and
mov
test
ret
inc
mov
xchg
dec
andl
imul
mov
fs
push
in
push
jne
mov
sub
and
scas
sbb
adc
add
lock
int
dec
rcr
jbe
jno
aad
daa
xor
gs
fcoms
xor
in
push
mov
ljmp
ret
push
pop
add
testb
hlt
rclb
sbb
sub
pop
cmpsl
insb
sarl
out
jmp
add
add
fstps
xchg
ficompl
bswap
dec
mov
jle
decl
sahf
bound
and
nop
push
inc
daa
test
or
ja
adcl
aam
sbb
cmp
enter
xor
and
xor
inc
xchg
loop
mov
cmpsb
pop
dec
add
rcpps
out
cmp
fcomip
push
or
pop
repz
in
addb
push
cmp
insl
sbb
cmp
or
sahf
cmpsl
cmp
call
ret
shrb
inc
std
in
dec
xlat
filds
cld
loope
ja
push
pop
sbb
sahf
mov
or
js
pop
fcomps
dec
repz
std
dec
xchg
mov
xor
xor
mov
arpl
addr16
mov
pop
mov
cmp
in
pop
pop
mov
add
jo
stos
jp
and
mov
neg
push
dec
push
xchg
or
test
lea
imul
fists
cs
mull
stos
dec
inc
mov
das
push
mov
rcrl
dec
loope
hlt
clc
movsl
cmp
movsl
cs
or
jg
in
inc
cmpsb
jmp
das
stos
mov
addb
ds
test
neg
lods
inc
arpl
mov
dec
std
pop
repz
flds
jb
add
lea
pusha
in
popf
dec
jnp
jp
xchg
mov
insb
pop
mov
test
mov
or
inc
call
lret
mov
cmp
jl
and
stc
fsubp
pop
dec
push
xchg
push
cmp
mov
push
add
adc
mov
jmp
jb
xchg
ja
or
jne
adc
mov
xchg
cmp
add
dec
in
adc
or
jmp
lods
push
mov
xchg
negl
call
test
xor
or
push
repz
jle
xlat
push
push
mov
rorl
test
xchg
aaa
mov
jle
adc
je
add
cmp
sbb
add
aaa
sbb
push
mov
test
dec
mov
add
mov
inc
mov
adc
out
popa
jle
dec
mov
in
aad
inc
xor
push
lds
inc
pusha
xchg
and
imul
adc
das
and
sbb
mov
cmpsl
mov
out
das
add
lcall
iret
scas
inc
inc
stos
push
add
add
movsb
lret
inc
mov
jnp
pop
movsb
je
das
push
jno
pushf
rclb
imul
xor
fidivl
popf
pop
cmc
sar
aam
out
pop
xchg
inc
lea
mov
pop
out
enter
sbb
loopne
imul
cmc
sbb
fisttpll
sar
cmp
rcl
fimull
push
mov
and
and
aaa
sub
cmp
pop
mov
xor
insb
mov
ja
cmpb
pop
repnz
jbe
jmp
inc
enter
subl
jb
jp
pop
dec
jmp
loopne
mov
fnstsw
inc
pop
cmpsb
dec
mov
jmp
lds
pop
es
pop
ss
sbb
pop
in
int
lds
in
cmc
btc
cmc
push
sbb
push
fnstsw
inc
jae
or
andb
jnp
cmp
outsb
xor
sub
icebp
icebp
shr
mov
and
jnp,pn
xchg
jnp
and
lcall
jecxz
ret
sahf
test
imul
repz
imul
xchg
sub
ret
jo
mov
adc
mov
mov
mov
or
jg
pusha
add
push
movsb
adc
inc
ja
jns
lods
call
or
mov
mov
sub
rcrb
je
push
xchg
push
and
ljmp
push
or
adc
rolb
push
push
mov
push
push
and
clc
and
test
xor
out
push
pushf
jae
test
jp
arpl
fst
mov
stc
shl
imul
fistpll
lea
inc
repz
push
lds
and
test
mov
or
mov
fcoms
add
mov
je
lea
lods
sti
stos
cmp
into
xor
push
jae
lret
or
popa
xchg
lods
hlt
outsb
add
lods
pop
fsubl
add
insb
inc
xchg
sti
test
sbb
jmp
cmc
loope
aad
std
popf
lods
movsl
lds
jo
mov
add
orl
xchg
lret
call
call
push
add
dec
sbb
jecxz
movsb
push
stos
loopne
pop
push
xor
arpl
out
in
sub
cmpsl
adc
clc
in
jecxz
ficoms
jo
push
and
jns
mov
push
and
push
mov
call
sbb
cs
popa
push
mov
cmp
mov
scas
and
mov
jne
inc
and
cmp
cltd
dec
push
imul
outsl
lds
inc
add
xchg
mov
mov
fcmovb
jmp
jo
mov
les
repnz
add
test
xchg
iret
pop
cmpl
dec
mov
and
iret
ds
cmpsb
xchg
mov
jno
jp
mov
icebp
add
ret
in
mov
sbb
xor
xchg
xchg
fisttpll
mov
popa
and
pop
xchg
out
cmpsl
jge
lods
push
loope
jge
mov
data16
xchg
outsl
cmp
or
aaa
sub
push
jmp
inc
pop
mov
sub
call
aad
dec
pop
jnp
add
imull
pop
jmp
mov
loopne
mov
pop
adc
pop
ret
mov
ss
xor
mov
mov
push
cmpsl
ret
sbb
mov
xor
insl
aad
jg
mov
sti
mov
aam
decw
fiaddl
mov
shlb
cmp
sub
xchg
push
ficomps
jecxz
icebp
fimuls
test
add
enter
jnp
sub
leave
rorl
lret
push
mov
sbb
jmp
ss
inc
sbb
test
inc
mov
xchg
ja
adc
mov
daa
ud1
shlb
movsl
mov
mov
fs
cmp
pop
fiadds
int3
adc
push
cld
into
mov
nop
push
pusha
mov
ds
pop
cmpl
push
pop
adc
xchg
dec
and
lea
or
scas
dec
jno
imul
mov
lret
notl
cmp
ficoml
sbb
pop
jecxz
or
aad
jo
int
sub
mov
inc
cltd
fisubl
push
cli
and
mov
cmpsl
sub
je
adc
cmpsl
add
into
repnz
mov
mov
lret
cmp
pop
nop
data16
fs
inc
cwtl
sub
mov
xor
cmp
aas
pop
stc
xchg
outsb
jp
pop
js
leave
push
push
xchg
fisttpll
add
fstl
adc
out
xchg
inc
xor
insl
jns
mov
dec
mov
cmpsb
mov
das
mov
pushf
popa
gs
add
fsts
lret
add
sahf
sbb
xchg
imul
push
sbb
push
aam
mov
faddl
jmp
mov
add
aas
rcrl
push
mov
sahf
je
mov
mov
insl
mov
js
inc
mov
subl
mov
inc
fs
mov
xchg
aam
inc
int
jb
pop
std
repz
lock
es
mov
pusha
dec
pop
fsub
add
fmulp
dec
cmp
ret
pusha
pop
test
mov
xchg
in
add
fldenv
je
dec
mov
gs
mov
inc
test
cs
aad
fidivs
cmp
dec
mov
pop
jge
scas
pusha
push
fisubrl
xchg
dec
or
int3
xchg
sbb
gs
cmpsb
mov
dec
mov
mov
mov
and
aas
adc
sub
nop
aam
mov
aad
das
or
in
jle
repnz
test
or
add
cld
mov
js
stc
cmp
stos
movsl
mov
scas
rep
int3
daa
test
add
movnti
flds
and
das
cli
xor
sbb
mov
push
imul
insl
pop
xor
cmp
xchg
das
jp
adc
and
mov
xchg
and
xchg
dec
ds
or
in
mov
or
shrl
bound
inc
sbb
lahf
ret
inc
aad
loopne
jb
lcall
lds
adc
or
add
sbb
push
sete
push
mov
jecxz
dec
aaa
sbb
mov
mov
mov
mov
xlat
adcl
dec
jge
sahf
mov
mov
mov
mov
testb
xor
call
das
cmc
sub
sahf
nop
jns
imul
ror
aas
or
insl
shll
sbb
inc
cmp
jge
jl
les
hlt
not
rol
fwait
aaa
xchg
out
adc
test
pop
movsb
pop
rcrl
ds
jnp
cld
lock
out
test
imul
sub
cmpsb
cmpsl
sbb
cmp
xchg
or
mov
lods
sahf
jno
xor
inc
nop
push
mov
pushf
pop
and
ss
push
loope
repnz
test
addr16
lods
sahf
jle
jne
shll
fs
stc
sbb
cmpsl
stc
lret
push
leave
push
int3
sub
in
bound
inc
in
mov
cmc
mov
sbb
jl
jno
sub
loop
jbe
and
ss
rcrb
outsl
sbb
fldl
add
mov
scas
cs
push
cmp
fcoms
imul
mov
adc
cmpb
pop
and
and
lock
push
fisttps
fdivrl
jmp
popa
fldl
data16
jecxz
ljmp
xchg
cli
add
jae
adc
out
ret
xchg
pop
dec
scas
push
ds
cld
daa
xchg
imul
test
jbe
js
into
xor
dec
fnstsw
jle
or
mov
and
lahf
nop
cmp
inc
xlat
inc
pop
mov
cli
adc
adc
in
stos
cmp
outsb
or
cmp
adc
stos
cmp
or
jb
push
bound
incl
mov
popa
out
in
mov
test
addr16
cmpxchg
in
xor
mov
mov
aad
rcrb
call
mov
and
loope
popa
sbb
in
nop
adc
insl
fildl
and
data16
jns
fadd
arpl
std
pop
sbb
mov
and
movl
dec
lds
dec
sub
dec
sahf
pop
dec
pop
jmp
add
out
into
mov
rcr
cld
mov
xchg
mov
jmp
xchg
mov
das
add
imul
fs
test
sub
cmp
lds
or
sub
or
ret
xchg
xchg
aam
je
mov
std
aaa
or
add
aaa
fisubs
in
insl
test
sub
les
jbe
jb
push
jle
daa
pop
scas
sub
xchg
mov
adc
xchg
mov
and
mov
mov
jnp
shl
stos
rcll
scas
movsl
call
jl
rorl
pushf
js
pop
pop
adc
sbb
das
mov
inc
mov
fisttps
jae
imul
jnp
lods
pop
xchg
lcall
push
jbe
xchg
stos
aaa
sbb
mov
ret
dec
loope
dec
push
or
js
in
dec
sbb
inc
aaa
push
xor
push
imul
xchg
mov
repnz
int
and
pop
adc
rcrb
std
jmp
adc
aad
scas
add
fsubrl
mov
divb
inc
pop
fsubr
dec
adc
sbb
cld
mov
mov
test
mov
xchg
in
rclb
std
cmp
mov
dec
sub
fdivs
push
push
insl
push
scas
shlb
loopne
mov
loope
add
mov
or
cmp
pop
cwtl
push
push
cmp
div
mov
popf
stos
loop
mov
and
dec
push
cli
scas
pop
test
sub
popa
andb
aad
ds
sbb
test
or
mov
in
cmp
pop
test
mov
ret
mov
pop
push
xchg
mov
mov
xchg
inc
es
inc
stc
add
testl
aas
into
xchg
shll
xor
in
mov
inc
int
cmp
or
jmp
jp
inc
mov
push
fldt
jnp
dec
jmp
cmp
xor
jae
addb
sbb
adc
pop
sbb
movsl
das
push
stos
iret
test
or
add
mov
mov
mov
push
fldenv
dec
xchg
insb
mov
js
mov
cltd
test
pop
add
mov
add
pop
imul
out
mov
cld
add
push
mov
test
imul
and
clc
icebp
mov
js
push
imul
mov
inc
and
push
jg
and
push
sub
sbb
add
lcall
add
cmp
push
sub
push
outsl
mov
js
push
scas
jmp
mov
sub
adc
scas
sub
xchg
les
cmpsb
jae
ss
call
jno
adc
jae
icebp
push
inc
xor
inc
ds
hlt
push
add
aaa
pop
fcompl
xor
push
lahf
and
mov
rcll
faddl
insl
cmpsb
inc
sub
sbb
pop
or
inc
xchg
les
mov
mov
jl
inc
std
sahf
or
test
xchg
jb
mov
xchg
add
pop
lahf
shl
repnz
add
rorb
xchg
scas
ljmp
and
cwtl
iret
bnd
scas
mov
daa
fidivs
and
aas
insb
data16
shrl
add
pop
imul
adc
dec
push
ret
jns
push
bound
push
cld
call
cli
arpl
imul
and
movsb
sti
test
in
test
xchg
insl
pop
cmc
pop
fisubrs
je
addb
mov
lods
pusha
xor
jne
cltd
mov
xchg
int3
add
push
sbb
mov
stc
mov
lahf
and
repnz
and
nop
jl
rorl
sub
leave
jmp
mov
jmp
bound
sub
ret
insl
sub
stos
mov
sti
pop
mov
lds
mov
push
and
inc
clc
aas
cmpsb
popf
stc
dec
gs
in
mov
pop
insl
pop
movsl
xchg
pop
sub
adc
cmp
mov
and
push
fimuls
outsl
adc
loopne
pop
rcll
xchg
mov
mov
push
shrb
repnz
in
lods
pop
lcall
dec
adc
add
das
mov
xchg
push
jnp
sub
xor
test
sub
movq
lds
xchg
iret
push
lret
dec
imul
fsts
fdivl
adc
jnp
in
jae
loopne
fs
loope
push
mov
out
xor
adc
lea
push
pop
negb
push
xchg
mov
inc
push
pop
xor
icebp
mov
sbb
lods
test
je
push
out
add
mov
das
push
sub
pushf
push
sbb
jae,pt
xchg
imul
mov
loop
pop
nop
inc
jne
scas
jns
jae
xchg
mov
jae
jbe
sub
outsl
xor
push
bound
insb
lret
das
jnp
aam
sub
or
sub
dec
jecxz
mov
dec
repz
or
cltd
add
into
arpl
sub
xchg
sbb
cmc
xor
pop
xchg
aas
daa
or
xlat
push
jge
sub
xchg
jg
dec
xor
pusha
sahf
push
pop
inc
inc
cmp
xor
repnz
push
decb
jns
add
cs
test
add
call
xor
sarl
push
jae
dec
push
pop
cmc
icebp
and
lahf
imul
adc
mov
inc
aad
push
scas
insb
insl
les
sub
mov
push
and
aad
pop
sti
and
mov
sub
jecxz
test
pop
test
push
cmc
xchg
movl
shlb
or
xchg
lret
out
mov
push
loopne
and
lcall
sahf
xchg
mov
dec
testb
jnp
sub
fimuls
push
inc
push
in
mov
push
cltd
pop
push
lock
rcrl
adc
push
out
loop
xchg
cs
scas
or
inc
xchg
mov
dec
adc
call
fwait
or
data16
out
xor
int
adc
adc
repz
out
dec
jno
add
dec
aas
aam
das
xor
mov
out
mov
pop
fwait
test
and
in
pushf
xchg
cmc
push
jmp
popa
shr
add
dec
jecxz
cs
lret
mov
nop
das
jnp
mov
daa
inc
subb
clc
in
mov
mov
add
sub
icebp
popa
rorl
jp
cmc
test
mov
cli
mov
and
in
xchg
dec
pusha
xchg
frstor
cmpsb
test
or
fldt
bound
or
dec
jecxz
dec
mov
sti
call
pushf
inc
xchg
popa
inc
jb
adc
push
movsb
adcb
push
sub
inc
mov
sbb
addb
inc
cwtl
or
ja
stos
jns
mov
fs
sbb
xchg
sti
mov
ret
jl
stos
and
push
jmp
jns
pushf
int
sub
outsb
push
mov
adc
jle
orb
into
ds
imul
jb
test
outsl
pusha
mov
outsb
out
dec
fs
ret
imul
testb
cmp
out
mov
push
adc
add
fisttpll
pop
push
mov
cwtl
pop
pop
aas
cmp
pusha
out
inc
outsb
adc
call
jge
lods
je
adc
adc
hlt
push
out
repnz
das
add
sahf
dec
jne
mov
jge
sbb
in
xor
push
dec
lahf
fwait
xor
stos
sti
loope
pop
imul
dec
adc
movb
loope
mov
push
and
xor
cmp
mov
rcrl
loopne
cmc
aaa
bound
xchg
and
inc
enter
mov
rcrl
jb
jl
push
or
push
out
icebp
and
movsl
mov
inc
vcvtuqq2pd
loop
xchg
or
fstp
sbb
addl
add
rep
cmpsl
inc
dec
adc
lods
mov
out
cmc
in
xor
sbb
sub
dec
rolb
pop
sub
sahf
cmp
and
std
pushl
lahf
int
out
cmp
xor
xor
and
jle
mov
ret
jp
std
jmp
cmp
test
cmp
jg
adc
dec
das
int3
lock
dec
xchg
sbb
xchg
pusha
addr16
into
xchg
jecxz
xchg
mov
repz
lahf
sub
xorb
push
cmp
dec
jae
pop
ds
xchg
lock
mov
popa
inc
pmuludq
cmp
jnp
dec
and
outsb
cmp
ret
scas
mov
aam
push
mov
call
out
lock
cwtl
jmp
test
sbb
fst
out
test
xchg
xor
clc
outsl
cmp
rcrb
ret
call
dec
div
stos
fs
mov
movsl
add
daa
shll
xor
pop
into
inc
nop
pop
jno
inc
repnz
jbe
sti
mov
or
shll
mov
nop
scas
inc
mov
lret
bound
add
insl
and
mov
inc
aad
cmp
or
rcr
mov
lods
mov
mov
outsb
imul
push
cmc
arpl
loope
sbb
notl
mov
cmc
mov
add
or
pop
sub
adc
subb
xorl
mov
data16
or
ss
adc
and
push
jmp
stc
aaa
inc
insb
test
sar
mov
sub
nop
jae
aad
stos
jp
push
mov
adc
cmc
pop
mov
in
sub
stc
aaa
inc
lods
xchg
daa
cmp
jl
cli
push
out
or
rcrb
call
inc
add
cmpsl
jno
movsb
inc
scas
inc
push
shrl
cvtps2pd
xchg
fisttps
dec
inc
sub
mov
xchg
push
sbb
in
mov
ret
mov
jmp
xchg
add
cmp
mov
mov
rclb
lock
add
push
cmpsb
mov
arpl
or
negb
and
outsb
cltd
test
test
aaa
sbb
out
pop
dec
popf
pusha
lods
sbb
ret
push
rorl
jmp
jmp
daa
mov
jp
es
xchg
mov
mov
mov
out
movsb
repnz
cltd
and
loop
popf
mov
cmc
shr
inc
repz
loope
xor
icebp
enter
aad
xchg
mov
pop
ljmp
mov
vmovmskps
dec
xchg
cmp
decb
dec
or
dec
ret
dec
out
or
mov
scas
loope
inc
add
js
pop
sbb
mov
mov
push
adc
push
jne
stos
movsl
scas
pop
pop
icebp
or
inc
andb
jae
dec
test
sub
sbb
outsl
ja
das
add
mov
scas
cmc
mov
pusha
xlat
lods
mov
mov
or
add
cmp
add
inc
mov
inc
into
aas
and
cltd
ret
sbb
pop
outsb
push
xchg
jge
js
cmp
xchg
jnp
inc
pop
mov
lret
adc
jecxz,pn
hlt
push
and
ss
je
ljmp
dec
mov
cld
in
jmp
jno
outsl
int3
pusha
outsb
cli
rorl
sbbb
adc
and
xor
lret
pop
xor
xor
and
sub
xchg
psubusw
push
or
fmuls
pushf
mov
nop
mov
add
or
mov
adc
add
inc
dec
jne
icebp
lods
mov
popf
xchg
call
andl
icebp
push
dec
add
mov
pop
or
addr16
hlt
ret
pusha
mov
sar
mov
pop
jnp
test
lret
hlt
mov
xchg
movsl
ljmp
ret
add
xchg
dec
dec
pop
in
mov
jg
and
push
adc
xor
sbbl
negb
fiaddl
mov
mov
rorb
mov
jnp
xchg
leave
sub
push
sub
add
sbbl
and
jmp
lret
testb
shll
stos
add
inc
and
inc
push
out
xorb
movl
dec
add
mov
xchg
add
cmp
shl
push
cltd
sti
sbb
or
adc
mov
fwait
sbb
nop
jp
ret
leave
mov
push
pop
or
testl
add
mov
sub
andb
xchg
clc
jmp
enter
stc
mov
mov
mov
in
sbb
jmp
imul
sti
mov
push
push
jl
stc
xchg
sub
stc
and
pop
test
enter
call
add
iret
in
leave
es
jmp
dec
cmp
fstps
popf
cli
mov
jno
mov
pop
push
rcrl
pop
xchg
sbb
imul
jl
dec
ret
adc
mov
mov
dec
xor
cs
and
xchg
mov
int3
addl
or
ror
pop
test
mov
stos
push
movsb
inc
xchg
or
mov
inc
ret
xchg
sar
dec
push
mov
jge
xor
inc
jae
jo
pop
lret
clc
cwtl
mov
std
sbb
rcr
fwait
mov
enter
xchg
xchg
or
pop
lods
add
lods
ja
aad
movsl
test
mov
add
push
xchg
les
inc
clc
xchg
add
bound
mov
push
stos
sarl
xchg
push
movsb
cmp
lahf
bound
sub
inc
in
les
cmp
test
dec
aas
ds
push
repz
pusha
lock
sbb
push
jnp
mov
or
andb
loopne
jbe
dec
push
les
jb
idivl
cli
sbb
aas
and
pop
pop
call
adc
jae
fcmove
sbb
and
js
divl
rcrb
fistl
cltd
call
out
xchg
mov
mov
push
pop
add
pop
inc
movsl
mov
adc
push
jae
or
mov
pop
enter
ss
sub
dec
and
in
test
adc
or
jne
cmpsl
and
mov
and
bound
orl
jmp
mov
cmpsl
pop
faddl
icebp
sbb
jns
xor
dec
sub
mov
fs
add
fcoml
mov
popf
mov
jne
faddp
movsb
and
sbb
fsts
push
xlat
incl
mov
clc
rorl
stc
adc
lea
xor
shl
ret
pop
fiadds
orl
jp
push
pmulhw
dec
lds
test
push
or
pushl
hlt
fcomps
mov
shl
inc
jmp
xchg
pop
inc
stc
push
add
insb
fsts
mov
jo
stos
scas
and
rcrl
negb
and
mov
push
inc
rclb
cs
sub
jg
pop
inc
mov
pop
loope
cmp
aam
pusha
mov
push
imul
lods
insl
int
dec
mov
push
pop
out
xor
loope
xor
xor
jns
sti
fisttpl
push
push
repz
loope
in
test
sbb
je
fildl
fcmovnu
mov
add
icebp
push
push
jno
push
xor
sbb
test
xor
jl
mov
dec
gs
pop
and
pop
xchg
push
in
aam
sbb
std
dec
mov
jp
and
jle
mov
xor
xchg
add
in
jmp
in
mov
cmpsb
les
pop
clc
push
mov
and
push
dec
dec
data16
iret
xchg
adc
dec
dec
mov
push
jns
mov
hlt
fldl
dec
enter
mov
cld
or
enter
test
mov
mov
xchg
mov
xlat
and
push
mov
not
aaa
notl
lock
fwait
mov
mov
jmp
cmp
stc
cld
pop
sbb
adc
cwtl
jns
cltd
popa
or
sub
cmc
nop
insb
xor
lcall
rcll
in
push
push
xchg
and
xchg
xchg
push
stos
pusha
xchg
mov
xor
fldt
push
dec
cmp
insb
push
pop
jge
xchg
pop
or
and
xchg
push
hlt
xor
jg
add
ljmp
and
push
nop
dec
sub
cmp
and
dec
decb
jmp
mov
popa
pop
jmp
xchg
cmpsl
jp
loopne
jne
xchg
dec
or
fiadds
inc
cltd
mov
addb
adc
push
jb
xor
jne
test
push
stc
fcomps
push
roll
js
adc
aaa
inc
cli
push
jmp
mov
pop
cmpsb
sahf
mov
cmp
mov
mov
int3
mov
jbe
jb
arpl
daa
lahf
xchg
test
ret
je
and
sbb
xchg
call
sahf
or
jne
mov
in
inc
es
in
mov
cmp
push
je
or
inc
or
or
dec
jae
fldl
cmp
dec
call
pop
or
sub
inc
sub
xor
into
and
jp
in
jmp
stos
lea
xlat
out
fcomps
mov
lea
mov
lret
clc
js
jmp
push
xor
rclb
push
lods
cwtl
mov
jns
int3
push
test
jb
or
je
pop
xlat
mov
adc
sbb
xchg
pop
push
nop
sub
ret
add
test
aas
divb
je
nop
shl
test
inc
add
notb
pop
fdivr
or
push
mov
cwtl
or
dec
cmpsl
imul
daa
int
popa
xchg
xchg
jmp
loope
cmp
mov
out
xor
stos
ret
loop
xor
std
cli
test
in
fsubs
sub
mov
pop
ja
sbb
out
cmp
xor
mov
ds
test
aad
xor
pop
cli
movsl
sub
sarb
sbb
pop
mov
lret
nop
mov
iret
push
xlat
popa
mov
mov
cmp
pop
sbb
lret
jg
mov
cltd
cmp
mov
enter
jb
out
lods
mov
rolb
jl
mov
fs
pusha
adc
or
in
mov
cld
and
jbe
xchg
test
lea
iret
lcall
push
add
in
iret
stos
dec
push
iret
sbb
mov
add
mov
sbb
mov
rol
pop
nop
xchg
mov
lahf
mov
push
add
inc
pop
cmp
ret
ljmp
imul
fsubs
loopne
add
jmp
in
and
icebp
inc
popa
cltd
mov
mov
outsl
xlat
mov
add
pop
xchg
dec
add
icebp
or
cmpsl
lahf
popf
ficoms
fnstsw
cmpsb
ret
popf
lock
or
std
lcall
xor
fwait
mov
mov
lods
xchg
lret
ret
stos
and
xorl
cwtl
push
mov
sub
and
or
sahf
sbbb
add
sub
bound
je
pop
call
leave
daa
cmp
in
sub
xor
or
shlb
xchg
loop
aaa
outsb
roll
adc
sbb
jnp
pop
enter
jns
cmp
lea
scas
rorb
jno
sub
inc
push
rclb
int
or
xchg
adc
inc
xor
mov
cmp
xchg
jnp
test
in
xchg
pop
cli
jns
mov
js
jg
sbb
push
jns
xchg
dec
loope
push
aaa
out
push
stos
pop
xchg
mov
fwait
scas
jne
mov
inc
fsubrl
pop
mov
ss
mov
pop
jg
daa
decl
mov
dec
cmp
popa
cs
jo
clc
aad
call
sbb
add
shll
bound
repnz
mov
loop
mov
cmpb
xor
mov
cmpl
dec
gs
push
add
mov
hlt
mov
adc
out
cmp
mov
add
scas
or
push
mov
out
jo
pop
xorb
pop
inc
jmp
pop
stc
cmp
lcall
mov
fcmove
adc
push
sbb
stc
cmp
sbb
pop
mov
les
mov
cmpl
jae
mov
pushf
jo
mov
mov
cli
imul
push
jns
jbe
in
add
jb
ss
dec
imul
clc
je
inc
adc
mov
cmpsb
jo
loop
jge
push
je
mov
cmpl
outsb
mov
mov
and
cmpsb
or
popf
sub
aam
cmpl
dec
sbb
push
push
xchg
or
cmp
inc
adc
lahf
addl
adc
xchg
insb
cmp
sbb
mov
push
xor
loope
ret
xor
outsb
out
mov
mov
mov
xor
rcll
je
mov
rcrl
lods
lods
adc
sbb
stos
lods
fs
or
xchg
xchg
sbb
sbb
arpl
fsubr
test
scas
cmpsb
push
push
lds
inc
mov
bound
push
xlat
add
jmp
push
mov
xchg
jo
into
jnp
mov
loope
stc
das
fdivs
clc
test
repz
test
call
lret
inc
mov
mov
jg
out
cmp
mov
xchg
jecxz
dec
filds
inc
and
daa
add
sbb
std
adc
add
push
dec
rcrl
pusha
push
je
pop
stc
push
fcomps
std
rorl
jmp
fimuls
movsb
inc
testb
stos
dec
jp
imul
out
xchg
push
or
and
push
xor
daa
pop
loop
sti
pop
fstl
scas
int3
dec
and
cli
xor
and
push
and
dec
sbb
push
mov
xchg
cmpsl
lods
fsubrs
in
jae
push
mov
stos
jg
add
mov
sbbl
push
call
cmp
xchg
dec
lds
push
sbb
daa
sub
loopne
pop
sub
andb
push
xchg
fdivrl
dec
jg
pop
and
inc
mov
xor
addr16
and
stc
mov
add
xchg
pop
sbb
scas
bound
outsb
lds
addr16
ss
or
arpl
push
jae
cmp
popl
leave
mov
shrl
jmp
loop
jmp
fisubrl
mov
sbb
mulb
or
mov
xchg
outsb
stc
inc
and
pop
fcoms
data16
test
xor
xor
inc
stos
out
int3
mov
xor
xor
cmpsb
xchg
xchg
mov
dec
jmp
fstp
add
clc
das
mov
lock
jns
pop
add
ja
das
gs
mov
add
mov
fidivs
mov
sbb
sub
ret
sbb
lods
push
pop
xor
sub
push
or
inc
sarl
div
test
addr16
fldt
dec
cmpsb
xchg
stos
xor
xor
stos
jno
add
xchg
jmp
in
in
and
xor
rorl
stos
xchg
mov
xorb
sub
mov
test
orb
loope
repnz
or
cwtl
addr16
inc
pushl
xchg
les
push
scas
mov
pop
fidivl
pop
aam
pop
inc
out
push
fxch
daa
cmc
mov
dec
mov
stos
mov
lods
rolb
mov
jae
divl
lret
idivb
popf
test
cmc
mov
xor
cltd
pop
dec
sar
fstps
lret
ss
sarb
call
sbb
outsb
test
pop
xor
cmpsl
cmp
sbbl
mov
mov
push
xor
mov
lods
loope
mov
xchg
xor
adc
push
dec
add
fisttps
call
stc
shrb
shrb
push
adc
loop
push
ljmp
xor
ret
mov
mov
ja
and
cmp
popa
movsl
push
push
aad
outsb
dec
cwtl
aad
mov
frstor
pushf
test
out
or
jb
adcb
inc
clts
lds
inc
or
cwtl
mov
fucom
repnz
cmpsl
mov
movsl
call
andl
mov
sbb
imul
fstps
faddp
pop
add
adc
shll
mov
stos
call
sub
and
or
ficomps
mov
fisubrs
jmp
sub
xchg
jbe
mov
cmp
and
adc
mov
in
jmpw
movsb
insb
mov
fs
dec
sbb
pushw
insb
sub
lcall
shrl
scas
sti
jns
cmp
push
js
insl
cmp
dec
fisttpll
out
jg
sbb
or
lcall
or
inc
rcr
movsl
adc
insl
inc
inc
sub
and
pushf
rorl
je
scas
mov
add
dec
in
push
cmpsb
scas
xchg
mov
repz
nop
inc
loope
xchg
sbb
xor
xor
push
int
imul
call
mov
sahf
inc
or
add
mov
std
or
adc
lahf
test
ficoms
stos
jecxz
jbe
lret
outsb
dec
repz
jg
scas
data16
fdivs
xchg
idivb
mov
addr16
loop
rcll
subl
fucomi
mov
sub
push
mov
pop
mov
outsb
mov
pusha
ffree
jl
movsl
sub
add
sbb
imul
and
cli
sbb
out
mov
inc
sbb
sbb
into
xlat
mulb
insb
aad
sbbl
add
data16
mov
adc
push
das
cmc
sub
lods
lret
rcll
or
inc
mov
bnd
hlt
jmp
jo
int3
std
fnstenv
inc
adc
or
clc
cmp
scas
rorb
inc
inc
pusha
adc
movsl
push
xchg
mov
nop
jecxz
test
int3
popa
jmp
mov
add
fists
je
fisubrl
popa
push
xchg
xor
ds
mov
and
sbb
lea
out
mov
jmp
adc
and
jle
mov
mov
cwtl
mov
inc
sbb
adcl
leave
js
add
ret
inc
push
dec
mov
push
sub
rcrb
adc
xorl
das
xorb
icebp
popf
lock
dec
xor
ja
xchg
ja
jle
into
dec
ds
shl
mov
ffree
sbb
xchg
test
dec
sub
sub
pusha
jnp
sub
pop
sbb
mov
push
xchg
test
sub
shrl
cmp
or
sbb
sub
dec
push
les
mov
imul
fwait
xor
lds
lret
and
pusha
iret
add
icebp
mov
lea
movsb
fwait
mov
add
sahf
test
lcall
dec
jmp
xchg
sub
mov
es
inc
dec
dec
lcall
lock
pop
mov
lret
mov
mov
jns
lods
xlat
popf
jb
or
mov
loopne
dec
mov
sub
dec
dec
gs
pop
imul
jecxz
jno
lods
test
shlb
je
hlt
mov
adc
pop
xchg
jp
out
sbb
push
mov
push
repz
dec
xorb
dec
add
sub
in
pop
aam
xor
xchg
or
mov
mov
call
inc
lret
in
mov
rclb
push
aad
sub
mov
and
sbb
dec
out
mov
add
xor
push
nop
add
pop
xchg
push
jecxz
xorw
aaa
lret
sbb
test
xchg
out
ss
mov
fidivl
cli
mov
pop
lcall
leave
addr16
scas
jo
xor
xchg
inc
inc
je
imul
sbb
inc
mov
fs
cmpsl
movsb
push
sub
ja
jmp
int3
dec
inc
ret
jne
out
and
popa
stc
xchg
scas
dec
int3
sub
clc
dec
jle
popa
mov
movsb
mov
mov
icebp
and
sub
xor
adc
in
sub
stos
and
iret
jecxz
decl
xor
xchg
out
adc
dec
rol
stos
hlt
nop
movsl
add
adc
inc
pop
xchg
fcomi
mov
out
push
cmp
jl
mov
loop
shll
push
fisubrs
mov
sbb
add
add
es
push
je
adc
out
loope
mulps
fwait
jb
sub
outsb
mov
stos
or
xor
mov
ss
jle
lret
roll
mov
inc
fisubl
ja
push
add
dec
push
push
repz
jge
push
add
add
cmp
in
inc
shr
and
int3
or
les
push
xchg
and
push
or
xchg
outsl
cmc
adc
mov
test
loopne
fdivl
cld
in
out
push
ljmp
jl
and
je
jbe
or
jp
sub
arpl
fs
daa
dec
cmp
xor
push
push
jge
cmpb
mov
popa
fsubr
arpl
lret
jp
das
test
mov
and
sbb
lea
test
dec
push
xor
mov
mov
es
push
xor
gs
or
leave
xchg
xlat
sub
lret
mov
cltd
rol
aaa
aas
adc
cwtl
mov
pop
mov
test
aam
mov
and
cmp
js
fildll
sub
into
aam
adc
in
mov
jl
in
fucomip
adc
lret
scas
ret
cmp
loop
in
xchg
sub
sub
jge
cld
add
adc
sbb
lock
iret
repz
or
xchg
adc
js
ja
pusha
mov
mov
cwtl
hlt
in
scas
hlt
fimuls
adc
das
jbe
xchg
push
ret
es
sarb
jno
cmp
mov
jge
xchg
xor
jg
or
repnz
jns
jge
sub
jo
sarb
inc
mov
jne
or
mov
mov
cltd
pop
mov
add
mov
out
push
cmp
inc
into
pop
inc
popa
les
inc
js
les
sbb
ds
dec
idivb
aad
mov
xor
imul
mov
pop
mov
push
lcall
push
stc
cmp
add
shll
iret
fdivs
test
push
cmp
mov
in
or
jbe
je
jns
push
push
and
scas
cmpsb
iret
jb
xor
daa
dec
ret
mov
add
ja
xchg
rol
or
lcall
lock
xchg
adc
lcall
sub
popw
jo
sti
push
cmp
mov
sub
mov
adc
push
nop
jae
fadd
jnp
subb
scas
jnp
in
in
cmp
jmp
stc
or
stos
int3
fisubl
jno
insb
sahf
movsl
fldcw
pop
ret
scas
jg
xlat
popf
ljmp
xchg
mov
cmc
mov
pop
push
sbb
sbb
ficomps
out
fists
pop
fimuls
fisttpll
fcmovu
pushf
iret
jnp
loop
mov
cmp
jb
lahf
aaa
mov
scas
push
and
xchg
shll
push
xchg
fnstenv
and
mov
imul
es
cmp
icebp
lea
pop
mov
jb
imul
and
inc
stos
subb
repnz
in
inc
fnstsw
cmp
mov
fsubrs
jle
loopne
xchg
lods
data16
adc
in
xor
negb
fisttpll
mov
jae
shlb
cwtl
mov
call
call
sbb
rcrb
xchg
mov
pop
inc
icebp
pop
in
push
fstl
movl
sub
jb
adcl
adc
sbb
or
popf
push
mov
dec
inc
jle
push
mov
xchg
cmpsl
int
fsts
sbb
cld
lret
outsl
int
push
adc
mov
mov
out
sbb
push
pop
cld
test
js
std
pop
jns
mov
je
mov
xchg
movsb
andb
mov
aas
adc
jecxz
dec
mov
in
outsl
cmovo
inc
sub
sbb
adc
jnp
and
je
jmp
iret
adc
push
fs
mov
in
inc
mov
lock
push
push
ficompl
pop
out
push
addr16
aad
lds
pop
test
ret
mov
add
xchg
xor
xchg
lock
cmp
mov
pop
and
or
xor
dec
inc
movsl
pusha
jecxz
outsl
and
jnp
aas
test
cmc
jno
sti
icebp
sub
jmp
stos
add
dec
adc
mov
fs
or
push
stos
add
dec
das
dec
jbe
sbb
and
sub
xor
or
xor
sbb
mov
xor
jbe
cld
bnd
sti
and
or
sub
stos
inc
adc
das
dec
fldenv
adc
aas
jno
lock
sbb
cmpsb
lcall
stc
push
imul
add
cmc
lcall
ficomps
fsubrs
fiadds
inc
xchg
dec
loopne
leave
pcmpgtd
insl
mov
sub
fdivl
test
or
pop
or
test
lods
stos
xor
fisubrl
fwait
sahf
pushf
mov
sbbb
xchg
mov
enter
add
psubw
mov
orl
cmp
and
dec
jge
dec
or
dec
jle
dec
pop
fcoms
and
mov
jns
inc
jl
mov
pop
stos
and
sub
sbb
cmpl
mov
aad
gs
cmp
inc
push
mov
pop
mov
dec
nop
xor
leave
lret
xor
fistpll
mov
inc
int
test
call
mov
ljmp
push
add
sbb
sti
add
cmp
dec
sahf
leave
cmp
ljmp
mov
push
jb
add
sbb
mov
call
iret
pop
add
orb
cwtl
or
push
andl
add
and
sub
pop
or
fdivrl
aas
test
dec
mov
mov
sub
and
rcrl
jo
push
shlb
lcall
cmpsl
out
insl
fwait
inc
push
mov
mov
add
cltd
dec
insl
jae
aaa
aas
mov
loopne
mov
test
sarb
imul
test
add
and
mov
jne
lcall
xchg
mov
sbb
idiv
xor
mov
arpl
movsl
out
pop
scas
inc
enter
add
fldenv
xchg
orb
enter
cld
add
mov
inc
orl
in
cmp
rolb
out
into
cmp
xchg
leave
pop
daa
lahf
pop
popa
pop
gs
jns
loope
pop
jmp
sub
add
or
shrl
sbb
daa
cmp
pop
sbb
rcrl
xchg
mov
and
cmp
and
addl
or
mov
mov
cmpb
xor
mov
nop
in
in
mov
push
push
jg
pop
adcl
sub
shl
sub
inc
pop
cmp
jbe
lods
call
sarb
cmp
pop
loope
jbe
loopne
mov
inc
es
mov
test
loop
ja
push
ror
int3
mov
dec
icebp
mov
sti
mov
stos
hlt
mov
pop
test
mov
addl
insl
iret
jge
push
xor
scas
hlt
xchg
into
push
adc
push
pop
in
lahf
xor
in
fucomi
mov
sbb
je
dec
pop
mov
xor
ret
xor
shrl
inc
xor
rcrl
jnp
cmp
mov
mov
lahf
xor
lds
and
scas
in
pop
xorb
push
lods
mov
dec
fistpll
cmpsl
mov
mov
push
mov
dec
jns
out
pop
xchg
nop
negl
jne
gs
dec
xchg
je
sbb
jl
sub
testb
push
jns
pop
addr16
mov
nop
ja
nop
dec
cmp
ret
sbb
mov
mov
mov
adc
mov
or
pop
xchg
cmpsb
mov
sub
repz
les
push
fs
mov
and
aas
sbb
mov
and
jecxz
shrl
or
addr16
and
xor
xchg
bound
xchg
sbb
into
ljmp
inc
into
stos
ds
movb
mov
xor
movsl
fsubl
test
push
add
rcrb
orb
cmp
and
mov
ret
dec
mov
push
int3
sub
pmuludq
scas
shlb
es
jl
xchg
in
shlb
pushf
mulb
mov
popa
pop
and
and
mov
adc
scas
cmp
mov
push
nop
es
push
mov
pop
test
les
mov
inc
outsb
dec
xchg
fidivrl
ss
mov
jb
aam
ja
pushf
sub
jns
push
add
ret
jmp
scas
and
jbe
loop
in
stos
or
rsqrtps
iret
lock
and
loop
lret
daa
add
xor
fcoms
mov
jle
pop
mov
mov
lds
add
jge
scas
das
das
mov
mov
sbb
pushl
xlat
fwait
ja
adc
xchg
loopne
sbb
test
xchg
or
mov
arpl
popa
lods
call
jns
daa
and
lcall
sbb
and
out
mov
pop
jb
xor
cmpsb
xlat
popa
aad
in
out
aas
sti
addr16
xor
sbb
inc
in
insb
cmpsl
jge
inc
aad
aaa
xor
imul
dec
sub
pop
pop
cwtl
aad
add
cs
pushf
pop
iret
dec
lds
call
jne
fld1
xchg
push
xchg
enter
xchg
sbb
pop
lea
cmp
lret
push
pop
xchg
shll
in
xor
or
movsb
ja
test
adc
jae
addr16
or
add
pop
into
movl
mov
cmpsl
mov
aas
push
rcr
in
movsl
in
add
cmp
pushf
int
mov
ficoms
sub
push
sahf
sub
andl
and
imul
pop
dec
or
fsubrs
pop
sti
fwait
xor
negl
rcrb
popa
sub
pop
mov
mov
cmc
out
shll
sub
into
push
outsb
push
mov
cmpl
or
nop
push
and
js
scas
add
xlat
dec
push
add
je
adc
out
add
psrad
stos
jmp
push
mov
pop
insb
out
insb
push
shrl
push
push
xor
jbe
sbb
mov
das
mov
or
mov
shl
stos
mov
ret
pop
and
popa
xor
js
iret
dec
xchg
push
ret
jg
into
cmpsb
push
lahf
jg
js
arpl
cmpsl
stos
jne
fucomp
mov
fnsave
push
loope
fnop
lods
push
das
out
pop
cltd
movsb
into
push
imul
call
inc
subb
mov
xlat
repnz
adc
test
pushf
lret
nop
loop
hlt
or
fistl
inc
andl
sbbb
dec
add
inc
icebp
push
mov
ret
int3
xchg
add
xchg
jae
or
push
xchg
dec
movsl
lret
je
das
fwait
cmpsb
mov
xchg
sub
lahf
pop
mov
and
sub
fprem1
pcmpeqw
add
movsl
incb
ss
mov
xchg
outsl
ret
adc
push
cltd
pop
sub
loope
cmp
mov
mov
aaa
call
push
push
ljmp
test
mov
mov
mov
add
pop
pop
cltd
sub
or
clc
mov
stos
aaa
xchg
and
mov
adc
mov
lods
das
dec
adc
pop
in
movsl
jg
and
jmp
xchg
pop
lods
mov
cld
sub
mov
mov
and
jmp
lret
add
jne
rorb
inc
addl
push
cmpb
or
aam
xor
cmp
dec
shlb
cmp
xchg
rolb
push
lret
xor
test
jmp
insl
inc
leave
dec
jnp
popa
mov
loop,pt
sub
xchg
sub
lods
lea
outsl
mov
or
insl
out
cwtl
lods
or
inc
cmpb
pusha
push
xchg
insb
fwait
gs
push
ror
xorl
dec
pusha
push
xchg
test
cmp
sub
pop
out
cmpsl
sahf
mov
rorb
repz
scas
xor
adc
jo
test
sub
sbb
pop
sub
or
add
cmc
sti
cmp
loop
jp
mov
lcall
push
popa
xchg
jne
jle
addr16
sbb
and
icebp
xchg
or
or
cwtl
imul
aas
sub
sbb
scas
aad
stc
addl
daa
or
inc
pop
lea
add
jg
shl
fdivrs
fcoms
pop
pop
out
roll
mov
mov
mov
popf
jg
aas
mov
dec
jle
dec
and
inc
movsb
inc
pop
jle
gs
fucomi
mov
lock
jle
mov
mov
cs
push
ds
xchg
aam
dec
add
imul
mov
or
mov
js
mov
cs
cmp
arpl
inc
sbb
adc
pop
fidivs
jne
pop
outsb
scas
dec
out
xchg
das
cltd
aam
mov
push
rcr
sub
popa
lahf
repz
cwtl
inc
rcr
lret
insl
jno
adc
mov
lahf
scas
push
mov
mov
repz
into
pop
ja
lods
pop
mov
loopne
inc
test
fsubrp
mov
lret
xchg
negb
xor
lock
inc
xor
in
push
push
pop
xchg
inc
sti
sbbl
pop
in
rsqrtps
xchg
aad
dec
mov
fisubrs
sub
insb
push
neg
push
and
out
cmp
mov
mov
adc
shll
ror
inc
loopne
xchg
mov
xchg
mov
jle
fmull
or
fs
and
mov
mov
xor
clc
adc
push
fistpll
fwait
mov
jns
mov
mov
xor
f2xm1
cmc
imul
mov
aaa
cmp
pop
rcll
mov
cmpsb
adc
dec
or
int3
clc
clc
dec
movsl
jp
ret
jne
or
push
int
jecxz
mov
aaa
into
mov
cmc
outsl
in
fisttps
adc
shl
xchg
dec
xchg
add
pusha
stos
xor
inc
mov
push
jle
sub
jns
ss
push
mov
xor
and
dec
or
add
stos
mov
divl
ss
out
cs
dec
xor
xor
test
call
sarb
es
mov
ret
push
mov
inc
pop
xchg
out
sub
xchg
mov
iret
mov
fwait
popa
and
sbb
repnz
and
outsl
ret
jle
dec
cmp
loopne
call
sub
push
arpl
fcoms
mov
cltd
cmp
mov
push
xchg
data16
daa
loope
inc
les
sti
ja
inc
jno
ljmp
or
sbb
fistpl
xor
outsb
mov
xchg
push
xorb
jge
mov
inc
dec
xchg
lock
cmc
jmp
xorl
mov
mov
sahf
leave
mov
pop
ljmp
push
lock
ret
out
cmp
data16
and
clc
cmp
inc
insb
test
stc
movsb
cmp
jecxz
das
cwtl
xchg
push
lock
adc
popa
daa
and
pushf
sbbb
cmpb
sub
test
mov
insl
sbb
shlb
leave
or
cwtl
test
cltd
iret
fwait
ja
insb
inc
popa
push
xchg
pop
test
insb
jg
sbb
ds
mov
push
daa
sbb
insl
pop
and
decb
rclb
loope
loope
int
loop
or
sub
stos
or
mov
or
out
xor
mov
out
dec
xchg
jne
push
xor
xchg
jbe
enter
inc
mov
jo
cmp
jbe
movsl
fwait
or
sahf
hlt
fstps
cwtl
adc
inc
std
addb
xchg
lods
ljmp
stos
cwtl
cmc
std
push
or
lret
push
jge
enter
sarb
in
arpl
xor
mov
xor
xchg
pop
in
icebp
push
and
test
pop
mov
rcll
adc
in
sahf
lret
jmp
ljmp
or
jp
pop
test
int3
es
pop
mov
mov
pop
in
test
dec
xchg
iret
pop
fwait
push
repnz
ds
fistpl
xor
mul
int
push
xorl
adc
sbb
push
in
addb
mov
push
fst
pop
ret
pop
and
lods
lods
in
mov
mov
dec
in
jp
and
add
aas
push
pop
mov
inc
scas
ds
data16
push
or
es
cltd
push
test
fs
lret
lahf
pop
jl
jle
ret
mov
sbb
shlb
notl
bound
mov
out
add
das
xchg
push
push
std
jb
icebp
push
sub
or
shrl
data16
dec
push
mov
fisttpll
sbb
subl
cmpsb
lret
jb
leave
inc
gs
in
add
ljmp
xor
inc
jns
in
push
jb
jmp
mov
xchg
enter
sahf
inc
loopne
andb
or
jecxz
out
cli
mov
cmpl
dec
jecxz
popa
cmp
xor
jo
push
cltd
mov
enter
jno
sahf
inc
test
mov
popf
pop
push
lret
into
cld
adc
xor
adcl
add
fs
pmaddwd
add
imulb
repnz
adc
add
dec
push
daa
in
cmp
rorl
xor
mov
mov
jg
sahf
push
add
sahf
fidivs
sbb
jns
leave
js
dec
lret
iret
lds
xchg
pushf
dec
ss
jne
mov
scas
xchg
jns
xor
dec
cmpsl
xchg
cmp
aam
jb
mov
fdiv
push
sar
lock
aas
ja
jno
aad
mov
iret
pop
pop
cwtl
jno
xchg
rcr
xor
cmpsl
and
or
sbb
or
add
ljmp
movsl
mov
and
push
dec
sub
jae
int3
aam
stos
movsl
xor
bnd
or
xchg
leave
xchg
loop
test
inc
mov
repnz
xchg
andl
sahf
or
push
xor
mov
push
dec
xchg
dec
sub
sub
out
xchg
cld
hlt
insb
jecxz
xchg
mov
cs
test
js
cmpsl
mov
popf
mov
rorl
sbb
xor
mov
les
popa
ret
inc
mov
jb
pop
sbb
fisubrl
and
cmc
stc
into
dec
or
or
bound
dec
fcmovbe
mov
mov
out
fdivrl
mov
jp
mov
push
jge
and
loope
or
xor
push
cmp
shrl
lcall
push
test
sbb
pushf
in
jo
mov
addr16
jae
inc
dec
mov
rcll
inc
addb
push
mov
jns
lret
xchg
sbb
mov
sarl
cmp
adc
fcoms
dec
fisubl
mov
imul
push
ljmp
sub
xor
push
or
add
fcomps
adcl
mov
leave
pop
dec
icebp
add
enter
insl
lds
sub
sarl
mov
fwait
mov
insl
fcomps
test
out
push
jae
cltd
sbb
popa
pop
icebp
pushf
outsl
or
mov
xor
scas
adc
lahf
dec
movsb
cwtl
ja
in
mov
fucomip
pusha
jo
cwtl
dec
test
cld
gs
pop
fisubl
popa
sbb
mov
testl
ret
iret
add
or
push
pop
leave
adc
jge
pop
mov
push
mov
popa
rorb
fmuls
decb
data16
je
lods
mov
jne
push
xchg
cmc
xor
and
sbb
pop
aad
dec
ja
jbe
fwait
jl
inc
push
adc
aam
dec
bound
and
popa
roll
loop
adc
adc
int3
pushf
cmpb
aam
mov
sbb
cmc
mov
clc
xlat
push
inc
add
movsl
cmpsb
jbe
rclb
lock
mov
lea
bnd
loop
nop
aad
fldcw
out
inc
and
jo
and
xchg
mov
add
imul
ud0
clc
xlat
sbbl
repnz
sub
cs
call
xchg
xor
xchg
popf
push
sub
repnz
cli
bound
sub
hlt
push
popf
xlat
insl
jbe
jbe
mov
in
nop
daa
setp
jnp
push
je
xor
loop
mov
frstor
sbb
into
mov
pop
in
mov
mov
jge
mov
and
scas
pusha
xlat
mov
xchg
xlat
xchg
push
popa
push
cmp
out
mov
xor
dec
xchg
fdivrs
data16
mov
ret
in
std
and
mov
lahf
or
add
stos
push
lods
fistl
leave
mov
mov
push
lret
and
pop
scas
pop
push
lods
jg
repnz
inc
xchg
xor
sbb
adc
insb
movsb
sub
orl
or
test
sub
rorb
lret
test
cmp
lahf
lret
sahf
aaa
inc
push
out
out
lret
add
jbe
xor
pop
inc
enter
fcomp
and
shlb
pop
mov
inc
jae
mov
mov
fdiv
push
adc
aas
sub
pop
xlat
and
pop
adc
icebp
mov
cmp
dec
addr16
mov
mov
iret
loopne
testl
loope
jmp
aaa
in
cld
cmovp
push
outsl
xchg
mov
lds
xor
js
ror
lea
sub
xchg
int3
lods
dec
lea
fldt
movsl
test
pop
cmc
pop
or
fnstenv
nop
loop
sbbl
xchg
rcll
dec
imul
jle
gs
mov
xchg
int
cmp
pop
sub
and
scas
inc
pop
or
and
xor
insb
stos
ret
or
popf
outsb
add
int3
lahf
sbb
lret
fldenv
test
ss
xchg
xorl
cmp
mov
scas
out
jge
push
mov
arpl
lcall
and
call
jns
test
add
adc
pop
pop
inc
sbb
dec
test
movl
and
jo
pop
inc
add
and
xor
inc
ja
xchg
daa
int
call
xor
xor
mov
aaa
xor
rcr
fs
sbb
mov
pop
cmpb
push
push
mov
iret
or
jle
or
ljmp
ret
daa
mov
mov
mov
ljmp
xor
and
inc
and
jbe
bound
dec
movsl
and
inc
xor
popa
mov
cmc
jo
fwait
inc
push
dec
lds
xchg
jo
xchg
adc
stos
mov
cmpsl
imul
xchg
dec
cs
movsl
sub
pop
mov
xor
stos
mov
pop
pop
in
add
add
pop
push
mov
sub
push
xlat
ror
mov
pop
ds
ficomps
cltd
mov
loope
es
repnz
stos
xchg
fs
and
jmp
jmp
push
stc
and
fs
dec
aas
inc
leave
lahf
mov
sbb
dec
data16
or
ss
mov
std
and
xchg
jge
dec
fsubrs
pusha
xchg
nop
push
loop
jmp
sub
mov
es
cmp
std
out
mov
iret
add
int3
cld
or
push
leave
outsl
sbb
mov
subb
push
xor
out
dec
insl
push
test
sub
mov
je
dec
mov
repnz
adc
call
mov
lds
pop
mov
fidivrs
das
dec
movhps
xorl
mov
sbb
inc
cmp
lcall
push
adc
nop
lock
cmp
mov
pop
sbb
cwtl
or
sub
icebp
mov
out
xor
btl
fwait
mov
or
and
shlb
or
add
xor
addb
cmp
xor
rcrb
push
inc
nop
inc
add
dec
inc
ret
aad
insb
pop
fdivp
xchg
insl
add
pop
mov
es
out
xor
mov
fstpl
bound
add
std
mov
shl
and
jecxz
das
lret
jo
cltd
ret
insb
cld
mov
inc
mov
pusha
popf
mov
mov
gs
push
pop
pop
stc
fstl
xor
jo
xor
add
jbe
xor
cli
lods
shlb
and
pop
dec
ja
les
fsubs
jo
xor
movsl
cmpsl
jnp
mov
shlb
jo
in
mov
mov
add
inc
pop
mov
popa
xchg
icebp
mov
inc
mov
add
int3
out
xchg
inc
movsl
pop
xchg
aas
je
mov
stc
scas
cld
outsl
pop
xor
jb
add
sti
cmp
into
pop
jbe
and
jmp
dec
cltd
inc
and
fs
xorl
mov
xchg
outsl
push
and
fldenv
mull
lahf
testb
stos
call
inc
mov
clc
fwait
in
test
add
jg
das
insl
inc
add
into
jns
adc
stos
ljmp
dec
jl
clc
aaa
xchg
jg
pop
in
fstpl
xor
mov
jns
add
stc
int
cmpsb
jne
sub
movsl
xor
jns
subb
call
pop
roll
inc
call
loopne
pshufw
stos
mov
outsl
fdivrs
and
sub
xchg
movsl
popf
mov
sub
mov
dec
jo
mov
and
pop
and
xor
sti
cmp
pop
cmpsl
jmp
out
inc
mov
xchg
push
cmp
sub
inc
aaa
pop
aam
push
cli
dec
or
adc
imul
and
adc
mov
nop
jns
das
push
cmp
mov
fiaddl
mov
call
adc
nop
scas
out
sub
xor
jnp
js
ficoml
mov
xor
add
mov
rolb
es
jno
fsub
sbb
add
inc
in
mov
fisttpll
push
mov
icebp
xchg
call
push
inc
jno
negb
addb
jl
fcomp
bound
cwtl
rep
pop
lcall
aaa
sbb
arpl
push
andb
ret
cmp
iret
push
mov
stos
ds
push
mov
pop
lret
mov
movsb
popa
xchg
sub
adc
insb
mov
sub
clc
or
daa
repz
cmp
push
xchg
jne
or
adc
or
leave
or
mov
mov
loopne
repnz
and
enter
neg
hlt
cld
call
adc
loopne
adc
push
test
pop
cmp
or
inc
add
test
mov
std
push
jno
clc
lret
dec
sahf
pop
or
jnp
stos
push
scas
cli
outsb
dec
pop
mov
sbb
cltd
stos
hlt
les
sub
push
addr16
aad
xchg
dec
sub
scas
cmp
adc
push
jb
adc
and
enter
sub
cmp
in
dec
xchg
or
mov
jno
xor
mov
push
and
das
mov
sahf
sub
or
sbb
xlat
clc
dec
sti
pop
xor
dec
mov
gs
mov
testb
xor
jbe
enter
push
aad
ret
in
mov
pop
xor
in
push
mov
ja
std
push
add
xchg
arpl
push
mov
js
mov
daa
mov
xor
sbb
in
daa
xchg
call
or
jge
xor
pop
adc
movsb
in
movsb
js
mov
daa
add
arpl
sub
out
jg
repz
cld
mov
xor
add
shrb
push
jmp
xorl
and
pusha
pop
xchg
icebp
out
sub
jecxz
and
fsubs
out
xor
dec
jg
jnp
test
push
xchg
divl
dec
lcall
sub
pop
mov
jl
mov
mov
push
ljmp
pusha
push
lcall
add
ds
xchg
lock
shl
mov
xor
repz
mov
sarb
lock
movsl
dec
hlt
mov
ljmp
lcall
fisttps
adc
mov
and
dec
lcall
dec
imul
push
mov
or
xchg
and
mov
add
pushf
adc
sbb
fdivp
fsubl
sbbb
sub
add
in
ret
icebp
cmp
jo
loope
out
push
mov
repnz
pop
mov
adc
mov
loopne
or
push
push
in
adc
push
out
jnp
shrl
roll
sbb
out
xchg
sbb
mov
movsb
sbb
cld
mov
jbe
enter
inc
in
or
ss
loope
dec
in
xchg
lods
pushf
dec
icebp
mov
add
pop
xchg
sbb
aam
into
imul
and
ja
cmp
inc
and
sbb
test
cmp
test
xchg
sub
ds
jbe
inc
fisubrs
popl
inc
gs
and
pop
fmull
roll
loope
js
mov
push
adc
repz
std
test
add
outsb
or
test
pop
pop
xchg
add
cmp
dec
call
jnp
jge
ficoms
rorl
cmp
sti
cmp
mov
sub
rorl
cmpsl
outsl
stos
and
cmp
mov
ljmp
addl
scas
inc
movsb
popf
pop
cwtl
lea
pop
jge
adc
push
les
mov
mov
push
xor
dec
sub
pusha
pop
and
mov
cmc
out
fmuls
jmp
lods
ret
dec
popf
shrl
jmp
push
stc
shrb
into
imul
fldl
adc
xchg
in
pop
fldenv
jp
pop
jo
xor
push
inc
jge
jge
cmp
or
jl
mov
loopne
push
jno
mov
mov
outsl
es
mov
add
mov
popa
mov
mov
out
add
inc
test
outsb
stc
xor
mov
lock
mov
lock
cmpsl
jmp
loop
in
in
push
inc
cld
mov
sbb
lods
inc
lods
pop
pop
fidivl
leave
xlat
mov
pusha
dec
mov
popa
mov
call
xchg
cld
notl
cmpsb
movsb
dec
pop
cmc
jp
inc
fs
jns
pop
push
icebp
stos
xor
in
imul
jbe
and
cld
stc
rcrl
sbb
push
jge
pop
jle
mov
mov
call
cli
dec
add
inc
shlb
pop
das
xor
ja
cmp
mov
cltd
aaa
adc
adc
adc
jno
lea
sti
dec
mov
cmpsl
jg
pop
mov
je
gs
movl
or
enter
nop
add
pop
int
fcompl
arpl
movb
dec
inc
cmp
aaa
jp
nop
jno
insl
iret
inc
add
ret
xlat
xorl
lock
sub
aad
push
pop
shrb
cmovo
out
inc
int3
jg
imul
dec
jo
bound
sahf
and
inc
iret
ficompl
xor
repz
scas
fcoml
arpl
cld
adc
aaa
pop
lret
cmp
sbb
push
mov
sub
mov
cs
jle
xor
add
fcomps
lds
dec
adc
jg
mov
xor
jecxz
test
sub
scas
lcall
outsl
pop
inc
xchg
sub
sub
pop
daa
mov
push
mov
inc
std
mov
push
or
stos
and
movsl
sub
mov
in
inc
push
sub
push
das
stos
jnp
mov
into
xchg
cwtl
mov
jecxz
leave
cwtl
rolb
sub
rcll
dec
ljmp
mov
adc
push
or
leave
xchg
lds
out
ljmp
adc
sub
insb
or
fadd
mov
adcb
andl
add
jo
rclb
push
inc
fidivrl
in
xchg
push
cwtl
sti
sbb
das
aaa
int3
adc
jge,pn
add
xor
cli
scas
mov
mov
jecxz
cmp
xchg
jne
popa
jae
test
jno
sarb
out
hlt
or
inc
pop
mov
push
dec
mov
jecxz
pop
inc
sub
jno
inc
xlat
test
push
push
test
mov
sbb
push
pop
mov
addb
mov
pop
arpl
or
outsl
das
add
or
xchg
shrl
ds
pop
repz
mov
jg
scas
stc
adcl
mov
adc
and
mov
xor
and
lret
jo
int3
cltd
mov
cmp
cld
xchg
and
add
or
roll
xchg
lods
cmpsl
int
dec
jmp
jb
dec
scas
out
pusha
mov
xor
mov
adc
repnz
mov
daa
inc
stos
inc
xchg
les
leave
cli
movsb
mov
jl
test
sbb
and
loop
pusha
cmp
pop
or
add
add
call
rcll
cwtl
movsl
push
pop
add
jnp
pop
jle
ss
pushf
outsb
into
movsb
dec
outsl
pop
lods
sub
shl
pop
iret
stc
ss
repz
and
dec
mov
repz
pop
repnz
repz
imul
mov
imul
xchg
test
pusha
js
mov
push
xlat
cmp
cli
ljmp
mov
mov
inc
stos
sub
std
loop
es
or
std
sti
into
sub
mov
inc
xchg
push
cmp
aas
xchg
pop
or
lcall
jle
sbb
jle
cmp
mov
cmp
jne
inc
push
pop
push
or
dec
push
push
push
into
fcompp
inc
jbe
jno
xchg
popa
js
idivb
or
test
fwait
rsm
jmp
mov
mov
mov
jecxz
daa
imul
cmp
mov
push
lret
les
pushf
aaa
add
pop
and
mov
aam
mov
pop
ret
jo
dec
stos
inc
mov
fnstcw
in
es
fs
mov
iret
adc
rorl
xchg
inc
je
pop
jbe
jb
sub
nop
hlt
xchg
ljmp
inc
add
stc
int3
pop
cmp
test
mov
sub
pop
push
add
xchg
jo
pop
cmp
call
mov
mov
stos
in
aas
lahf
sub
sti
ja
test
testb
add
mov
push
loope
pop
lods
mov
or
jo
adc
ja
inc
iret
fnstcw
xchg
je
ljmp
es
or
out
leave
cld
xchg
popa
in
cmpsl
inc
and
push
adc
pop
sar
popf
fdivr
adcl
jo
lret
jl
out
es
push
out
negb
decb
into
addr16
dec
mull
hlt
cld
fists
mov
pop
mov
jp
cmp
push
fmuls
popa
ds
sbb
mov
mov
mov
xor
pop
jo
lock
mov
mov
sub
mov
sahf
enter
bound
adc
pop
mov
scas
or
insb
cmc
lahf
scas
pop
xorb
dec
jno
cmp
mov
cld
jo
jb
mov
aad
cmpsl
aas
icebp
test
out
xchg
cmp
cmp
jb
mov
push
mov
or
fld
cmp
lods
xchg
sbb
inc
jb
dec
popf
int
aam
adc
push
mov
loope
adc
fstpl
dec
sub
fstpt
aaa
outsl
cmpsb
jl
test
test
xor
rcll
ret
lret
dec
jle
push
mov
rclb
xlat
or
or
adc
pop
pop
nop
mov
or
dec
out
xor
sub
in
adc
push
xchg
add
lock
icebp
inc
call
pop
sub
ffreep
mov
stc
lds
imul
sub
fwait
imul
andl
out
sub
pop
negb
leave
xchg
mov
hlt
pop
jge
xchg
mov
dec
fcoml
pop
or
jle
and
cmp
push
stos
push
pop
sti
imul
lods
into
lds
shrl
add
stos
daa
jae
mov
shll
iret
add
add
incb
add
repz
dec
add
mov
jle
push
mov
add
imul
insl
sub
addr16
int
flds
or
jecxz
aas
stos
push
rorl
cltd
pop
cmp
in
loopne
push
repnz
push
std
dec
xchg
push
lret
outsb
sbb
xor
adc
push
mov
addr16
sbb
iret
rolb
xchg
xor
fildl
pop
pusha
dec
cmpsl
loop
add
loop
out
xor
lods
mov
add
xor
rclb
xlat
xor
lds
pop
and
movsl
loopne
mov
fists
push
xchg
cmpb
mov
stos
push
xchg
lock
aad
mov
lret
popa
jp
cmp
stos
subl
lahf
rolb
xchg
pop
xchg
fwait
jl
mov
push
sar
aaa
and
push
xor
mov
dec
mov
mov
push
enter
inc
cmp
add
scas
xchg
scas
xor
addl
out
adc
ljmp
pushf
dec
mov
stos
in
mov
push
mov
dec
jns
pop
into
mull
cmp
lods
push
adc
clc
and
sub
mov
dec
ss
mov
sarl
je
scas
add
sub
and
jae
out
les
cld
pop
loopne
popf
and
clc
jmp
aaa
xchg
rclb
sbb
aas
pop
cmpsl
mov
iret
jnp
jp
leave
pop
aas
movsb
cltd
stos
fwait
sub
loopne
mov
mov
enter
jno
pop
stos
lret
push
pop
jbe
cmp
test
or
aad
pop
lds
mov
ja
mov
mov
push
pushf
add
leave
pop
mov
stos
cltd
adc
scas
push
mov
les
aaa
ljmp
inc
fwait
mov
jo
mov
out
cmp
jmp
and
mov
and
or
mov
add
and
int3
dec
cmpsb
dec
xchg
fimuls
sbbb
lods
arpl
sub
add
xchg
xor
inc
stos
sbb
dec
jge
pop
fwait
stos
pop
inc
lods
jg
add
ja
sub
lock
sbb
cs
sbb
insl
dec
aad
mov
adc
pop
scas
cli
test
repz
in
popf
push
inc
cmp
loop
ret
scas
loopne
mov
push
rorb
call
sub
int
je,pt
cmp
addr16
sbb
shlb
sahf
lods
mov
cmp
pop
fcoml
hlt
mov
push
jae
cmp
push
adc
les
and
mov
cwtl
bound
fs
mov
fistpl
sbb
testb
lea
pop
add
inc
icebp
sti
inc
repnz
inc
adcl
lods
jecxz
xor
add
mov
dec
adc
mov
fcoml
xlat
lds
imul
subb
xchg
jg
ja
in
cmp
jmp
das
fldenv
xchg
outsb
sbb
mov
push
das
dec
pop
mov
out
mov
pop
cwtl
shrl
jns
loopne
jmp
dec
mov
xchg
cltd
push
fdivs
cmpsl
hlt
iret
dec
pop
out
pop
inc
dec
pop
pop
lea
les
stc
gs
add
adc
jle
adcb
jns
jg
or
lock
sbb
cwtl
xchg
int
jnp
xchg
adc
es
cwtd
sbb
inc
sbb
aad
dec
push
enter
int3
test
inc
xchg
mov
mov
sbb
mov
nop
insb
cmpsb
jmp
in
and
dec
negb
in
into
lea
xor
loop
push
outsl
mov
push
xchg
jae
sub
jl
out
pop
stos
nop
jmp
xchg
mov
ret
in
aas
lcall
xchg
jnp
outsb
stos
pop
neg
mov
cltd
fnsave
jmp
lea
je
jl
mov
adc
jns
fimuls
and
jae
or
out
mov
sub
int3
mov
out
sub
jg
pop
psllw
hlt
sbb
into
xor
xchg
cmp
mov
js
dec
jmp
ljmp
jl
pusha
pop
xor
jnp
sub
jge
scas
pusha
es
dec
pop
fisubl
inc
lcall
add
mov
aaa
mov
cli
lock
gs
ret
mov
or
mov
push
fwait
mov
ds
cld
pop
mov
testl
inc
test
je
rcr
movsb
pop
aad
sub
inc
dec
repnz
add
and
sbb
push
leave
pushf
lcall
paddusb
scas
sbb
push
in
jno
dec
sub
cli
cmp
sub
xchg
inc
jnp
cmc
or
bound
or
lods
push
es
es
in
out
cmpsl
cmpsl
in
test
out
jmp
xchg
jbe
add
loop
call
cwtl
push
outsb
cmpsb
mov
push
jae
pop
xor
in
ret
xchg
and
cld
inc
jl
roll
insb
xchg
jne
push
cmp
adc
mov
scas
idiv
cmp
rolb
cmp
sub
mov
sbb
pop
cmc
and
lahf
rorb
jle
xchg
jmp
pop
sbbb
addb
pop
lods
outsb
not
test
mov
cmp
cmp
jmp
insl
sarb
xor
out
dec
xchg
loopne
xor
scas
cltd
add
repz
adc
aas
cwtl
cmpsl
lods
jo
outsl
and
inc
cs
fisttps
cmp
outsl
inc
cld
mov
inc
int3
icebp
adc
movsbl
xchg
and
imull
jge
fbld
pop
rcrb
adc
jecxz
jp
ret
stos
mov
repz
or
pop
stc
inc
fnsave
cmc
in
dec
int
sub
cmpsl
push
xor
pop
inc
mov
mov
cltd
rorb
push
lret
jg
andl
jg
out
mov
jno
adc
call
mov
xor
sub
mov
mov
sub
lret
mov
jne
xchg
pop
mov
pop
rorb
jl
mov
jae
jp
add
mov
mov
and
pop
adc
out
ss
mov
imulb
out
pushf
fcomi
inc
jo
push
adc
sahf
clc
arpl
push
leave
push
je
dec
jg
push
pop
push
jg
aad
or
dec
stos
imul
sti
jle
clc
push
or
cmp
sbb
sbb
lods
sub
adc
or
sbb
sbb
or
cmpsl
xchg
pop
jo
push
adc
dec
adc
cmp
jl,pt
clc
loope
insl
jbe
and
outsl
jo
dec
or
imul
stos
fidivl
mov
xor
jle
andb
mov
lds
xor
sub
xlat
shll
mov
dec
add
pop
inc
sahf
adc
push
das
shll
out
inc
in
or
xlat
ret
jae
out
rolb
and
push
pop
or
jmp
xchg
sbbl
dec
add
cmp
push
cmpsb
rolb
scas
pop
rorb
loope
jecxz
out
inc
aad
imul
cmpsb
shll
lret
outsl
add
leave
and
dec
add
pop
fsubrl
xor
pop
out
iret
fnstcw
xor
aam
push
push
dec
scas
rcll
and
sbb
push
mov
daa
pxor
adc
mov
mov
sub
shrb
xor
xor
add
adc
out
xchg
mov
test
and
idivl
sub
ss
icebp
jmp
and
push
sub
mov
test
fldcw
mov
icebp
sub
or
add
outsl
fsub
loope
out
je
inc
mov
mov
shlb
mov
jae
out
psllw
stc
lahf
fs
xchg
loope
jno
mov
aas
xor
lahf
loopne
inc
adcl
jg
lods
mov
test
or
out
sub
inc
in
mov
sub
addb
arpl
je
cltd
xchg
mov
push
push
test
xchg
mov
pop
pop
mov
testl
push
mov
dec
ds
jb
cmp
xchg
push
mov
lock
repnz
sub
in
les
jne
jnp
adc
dec
mov
sbb
pop
mov
fwait
ret
xchg
xor
neg
andl
dec
gs
clc
mov
cmp
daa
add
cmpsl
ds
nop
leave
xchg
in
or
dec
inc
lahf
mov
pop
lahf
mov
mov
in
js
dec
inc
push
loop
repnz
push
popa
push
inc
dec
hlt
cltd
jmp
jp
lret
je
push
fstpt
call
cmp
add
push
mov
jp
or
and
lods
imul
sbb
iret
cwtl
mov
xchg
mov
mov
pop
fstps
inc
mov
jb
push
loope
aaa
and
cmp
mov
arpl
cs
rorb
hlt
jle
push
dec
xchg
add
sbb
mov
bound
shrl
nop
outsb
mov
cmp
pop
add
in
mov
lds
dec
sti
stos
mov
aaa
mov
stc
paddw
insb
inc
lds
sbb
inc
lahf
push
cltd
addr16
sub
xchg
mov
lahf
push
push
clc
xor
testb
sahf
insb
adc
mov
js
int
test
adc
jne
push
sbb
out
test
inc
mov
fildll
jo
jb
inc
cmp
into
mov
jge
adc
sbb
push
adc
mov
popa
test
sbb
and
out
mov
mov
jmp
sbb
xchg
test
jo
push
or
jmp
pop
adc
aas
lock
lret
cmp
movq
pusha
pop
mov
mov
pop
in
mov
bound
sbb
and
inc
mov
int3
add
std
xor
cvtps2pi
iret
cmp
lret
jae
xchg
or
js
idivb
aas
cmc
call
pop
xchg
sub
aaa
fiaddl
jle
lret
outsl
xchg
addr16
cmp
pop
sub
imul
sti
rcpps
repz
push
jno
cs
lret
fadd
add
bound
cmpsl
cmp
dec
lahf
mov
pop
sbb
out
jl
arpl
fisubrl
mov
push
lods
in
cmpsb
dec
or
pusha
icebp
outsl
das
cld
cltd
push
or
ror
xor
fs
addr16
movsl
lahf
sub
adc
jns
outsl
sar
cmp
gs
test
cmp
repnz
daa
or
mov
push
cmc
jg
mov
mov
les
pusha
in
pop
sbb
cmpl
xchg
push
test
pop
int
add
and
mov
and
mov
sahf
scas
jno
and
fcmovnu
cmpsb
sbb
iret
jo
vmptrld
lret
sub
cltd
addr16
add
shlb
test
inc
push
mov
mov
or
cmp
loope
and
lret
adc
loope
std
int3
sub
repnz
dec
adc
mov
inc
jnp
int
mov
leave
sub
cmc
fildl
imul
lea
mov
cmp
daa
sbb
movsb
adc
add
fwait
mov
leave
ja
pop
bound
cmp
or
or
stc
jbe
cmpsb
sahf
xlat
pop
mov
inc
sbb
inc
sar
push
add
dec
in
test
add
lods
lret
ja
xchg
in
ss
fnstcw
in
aas
jnp
cmc
outsb
sub
in
test
inc
push
cmpsl
sub
jle
loopne
sub
add
push
adc
into
aas
and
pop
repz
shr
mov
or
dec
ret
shlb
in
in
mov
int
xchg
stos
aad
push
sarl
mov
pop
adc
and
in
jne
cltd
jmp
aam
adc
mov
pusha
in
int
rcl
mov
or
in
test
mov
dec
cwtl
mov
es
sbb
sahf
je
jg
jl
jae
repz
movl
js
bound
fcmovne
out
jg
subl
add
gs
and
hlt
cld
jge
inc
jecxz
ljmp
mov
imul
xchg
xchg
ret
es
ss
or
cmp
and
cmpsl
js
push
js
adc
dec
add
mov
jae
mov
test
cmp
sbb
push
xchg
mov
test
loopne
or
pop
fwait
mov
imul
icebp
js
or
les
xchg
dec
cs
add
mov
mov
sbb
inc
lea
scas
dec
or
and
xchg
jge
push
xor
ds
outsl
iret
and
xor
sub
add
pop
es
imul
pop
mov
and
scas
pop
xchg
mov
inc
push
in
push
push
cmpsl
jb
add
mov
fldl
pushf
incl
and
lods
and
mov
les
push
and
mul
cmpl
or
fisttpll
js
je
loopne
out
lcall
push
movsl
sti
orl
cltd
mov
dec
mov
pop
and
dec
test
push
sub
pop
ret
inc
jns
jp
mov
fistpl
push
sub
ror
fnstcw
adc
pop
inc
xchg
jle
xchg
jg
jge
add
lds
mov
nop
cltd
mov
ficoml
clc
jle
pop
lcall
inc
inc
xlat
inc
xor
or
mov
sbb
cwtl
std
fcomip
imul
lret
mov
data16
jl
ficompl
mov
adcl
xor
iret
or
pop
jo,pt
dec
or
xor
ret
and
push
adc
je
pop
clc
ficompl
or
xlat
test
sbb
xor
dec
xor
pop
call
inc
andl
pop
mov
shrl
mov
fwait
cmpsl
mov
cmp
movsl
jae
mov
dec
pop
cs
data16
rolb
jne
jge
mov
jne
test
cmp
mov
mov
mov
sbb
add
xchg
pushf
push
xlat
cmp
mov
and
icebp
sti
adc
das
mov
xor
cmpsb
cmp
or
aad
mov
add
cmp
jl
sbb
xchg
les
sarl
cmp
lcall
adc
call
ljmp
jge
mov
cmc
mov
rorb
movsb
jge
add
bound
xchg
orb
insb
mov
push
mov
ja
repnz
dec
inc
and
rcll
mov
cmp
push
lret
inc
jae
jns
nop
or
mov
movsb
sub
push
fdivrp
inc
pcmpeqb
fdivl
pop
mov
push
xor
push
sub
test
dec
xchg
and
mov
aad
add
xchg
fs
fisttpll
jne
mov
pop
add
push
push
push
ljmp
insl
xchg
push
arpl
test
xchg
lahf
ret
shlb
lds
orl
adc
test
inc
ret
jg
aas
cltd
movsl
fcoml
push
cld
sti
push
in
test
add
ja
es
push
add
insl
sbb
test
xchg
mov
outsl
scas
push
fs
fsubrp
packssdw
push
fdivl
call
inc
pop
cs
mov
negl
xchg
in
test
xchg
jns,pn
push
test
mov
lods
sub
fdivrs
pop
and
jge
mov
xor
mov
mov
cli
pop
pop
fists
pop
xchg
popf
test
pop
lds
or
icebp
les
push
push
out
push
dec
movsb
xchg
adc
and
jle
jle
xor
cs
add
and
mov
or
mov
insb
and
xor
aam
lahf
incb
push
lock
dec
push
scas
test
popa
cmpsb
cli
xchg
fwait
sub
clc
ljmp
aam
movsl
pop
adc
hlt
sbb
add
jmp
mov
inc
and
lret
jns
cld
dec
and
into
cmpsb
int3
pop
and
mov
adc
loope
hlt
pop
adc
and
adc
daa
jge
mov
popa
dec
fsubl
push
xor
push
das
es
fldenv
push
aam
leave
ss
mov
dec
insb
jne
sahf
push
fsubl
sub
and
or
push
cmp
sub
xchg
jmp
aaa
into
mov
xor
and
mov
xor
ljmp
cmp
jne
out
mov
mov
xor
ret
xor
dec
stc
aaa
mov
cwtl
mov
mov
push
cmp
movb
movsb
iret
stos
fnstcw
sbb
std
push
icebp
and
sub
dec
je
loop
mul
mov
jns
int
mov
stos
jp
das
dec
pop
mov
lea
mov
add
xchg
push
xchg
loope
fdivs
mov
lods
push
sbb
gs
mulb
sbb
mov
adc
mov
loopne
fmul
xor
nop
push
pusha
cltd
mov
addr16
int
shl
inc
shlb
xor
pusha
pop
lcall
sbb
ss
movsl
push
pop
inc
sti
leave
cmpsb
cld
jb
gs
jmp
mov
mov
das
mov
ljmp
leave
fwait
sarb
jmp
sub
or
out
je
xor
pushf
sub
es
sti
fcomps
pop
lret
fxch
push
shlb
pop
push
jmp
and
push
cmp
cmpsl
shlb
jae
jge
js
cmpsl
loope
jecxz
in
xor
jbe
push
call
loop
or
jg
adc
cmpsl
lea
loope
sbb
or
aaa
adc
mov
popa
mov
scas
mov
mov
mov
pop
dec
or
cmpsb
and
pop
sti
adc
sbb
mov
movsb
xor
leave
mov
imul
mov
xchg
pop
and
adc
add
push
dec
pop
xchg
add
jae
ds
data16
movsb
and
in
xchg
addr16
push
bound
xor
out
push
std
inc
push
dec
test
out
imul
fsubrl
das
xchg
das
jmp
aam
test
cmp
stos
cli
pushf
inc
adcl
and
mov
lea
add
lea
rcrb
jl
test
add
xchg
sbb
jecxz
fs
pop
ja
push
ret
in
push
mov
add
in
popl
lods
clc
sub
and
int
in
push
aas
leave
enter
lods
push
xchg
push
das
sub
push
mov
mov
out
mov
cmpsb
std
xor
subb
in
pop
pop
out
xchg
in
outsb
mov
pop
push
push
mov
pop
sub
xor
and
sbb
lret
and
mov
sbb
lcall
push
aam
adc
pop
bound
or
inc
outsb
int
inc
ja
adc
dec
inc
inc
movb
jp
lcall
xor
pop
dec
stc
js
dec
xor
sbb
fsubrs
xchg
insb
repz
xchg
inc
sbb
push
inc
dec
or
jb
aam
sbb
enter
sub
lock
mov
js
push
or
outsb
stc
sub
in
gs
xor
jo
push
andl
fucomip
ret
sbb
pop
pop
push
shrb
mov
pop
in
dec
mov
jo
push
and
fcmovnb
stc
adc
xchg
movsl
or
int3
in
pop
cmp
out
cmp
fidivrs
mov
in
stc
xor
jp
xor
test
gs
in
add
push
sbb
or
cwtl
adc
pop
bound
int3
inc
aad
or
push
in
sahf
mov
shrb
fsubr
retw
cs
les
xorl
lret
sbb
sub
or
lcall
sub
and
stos
movsb
pop
ds
add
das
popa
lock
push
mov
popl
push
pop
mov
inc
push
inc
push
repnz
punpckhwd
clc
repz
inc
cmpsb
insl
stos
lock
or
mov
js
sub
loopne
adc
add
movsb
in
fsubrl
enter
sbb
cmp
fsub
sbb
add
push
out
sbb
mov
test
shll
dec
push
sti
jg
test
xor
jbe
sbb
dec
jmp
orl
mov
mov
cmpsb
sbb
and
stc
sar
jp
ljmp
dec
std
sub
xor
add
dec
mov
ljmp
jae
mov
adc
outsl
dec
scas
lock
orb
push
add
xchg
js
inc
pop
sbb
cmp
push
ret
mov
into
lds
xchg
subb
es
mov
add
xchg
aas
push
and
imul
dec
jb
or
fwait
xor
xorb
mov
nop
and
sbb
fwait
jl
push
lret
mov
mull
cwtl
jns
int
aam
push
inc
sahf
mov
call
popf
mov
push
jb
dec
fistpl
dec
xor
jecxz
jl
test
sub
dec
cmpsb
cmp
shll
test
mov
pop
jp
inc
movq
dec
or
aas
inc
jno
fsts
and
inc
inc
push
jne
sub
or
add
and
xlat
lds
push
cmp
call
or
aas
mov
inc
or
jle
push
aas
cltd
inc
sub
inc
fists
shll
mov
pushw
add
and
jbe
xor
adc
fisttpll
xchg
int3
sbb
ret
push
popf
dec
sbb
xor
aad
cmp
pop
jae
add
mov
dec
xchg
jno
lcall
scas
jl
jo
lea
les
mov
cmpb
add
div
dec
clc
sahf
fcmovnu
je
inc
or
cmp
cmp
or
mov
sbb
jmp
add
test
cmc
repnz
inc
mov
fidivs
jb
test
mov
stos
jecxz
and
push
aam
fimull
xor
or
sub
ljmp
jp,pn
cmc
adc
sub
stos
out
push
ret
ja
sbb
mov
inc
mov
in
xor
loopne
xchg
pop
xchg
dec
pop
adc
fdivrs
iret
add
fwait
xor
pop
in
pop
cmp
xchg
xchg
cld
es
shrl
add
or
test
movsl
jg
jp
popa
dec
movsb
pop
inc
mov
pop
ret
ds
imul
div
lret
lcall
repnz
mov
test
xchg
test
mov
in
xor
pop
fwait
pop
pop
pushf
jmp
fstps
jo
scas
or
xchg
testb
roll
sti
cmp
dec
mov
negl
add
xchg
incl
aas
pop
inc
fcompl
stc
jmp
add
or
inc
movsl
insb
mov
ss
cli
mov
ret
mov
in
xlat
sti
or
idiv
out
xor
lock
mov
push
data16
pop
roll
push
jno
or
sub
pop
call
test
aas
sahf
stc
inc
or
jno
mov
sahf
jge
js
in
imul
jge
mov
cmpl
mov
out
lret
roll
fs
or
test
cmpsw
mov
mov
add
mov
inc
dec
inc
neg
mov
inc
pusha
inc
jae
insb
pop
xor
jp
sub
mov
insb
stos
add
hlt
ret
outsb
mull
add
js
mov
int
mov
mov
xor
addr16
and
mov
add
jle
jno
cmpsb
push
repnz
lock
adc
test
xchg
bound
clc
and
lret
loop
test
fs
pop
enter
imul
sti
pop
stc
adc
pop
test
andl
pop
mov
mov
scas
adc
arpl
lret
lret
mov
in
inc
jmp
xor
aaa
jle
jp
or
jbe
mov
dec
inc
xchg
pop
loope
sbb
roll
test
cwtl
andl
in
cli
push
scas
int3
loope
sub
mov
sbb
push
jae
mov
pop
push
push
add
mov
stc
sbb
outsl
xor
cltd
ficompl
dec
pop
lcall
out
fcmovu
pusha
lds
aad
cmc
dec
rol
xchg
out
shll
jns
pop
sub
push
xor
sahf
xor
cmp
pop
or
xchg
cmpsb
dec
fst
fistps
in
out
sbb
adcl
jbe
adc
inc
sub
out
dec
xor
add
sub
xor
out
jo
mov
adc
lahf
add
js
jnp
pusha
imul
loop
call
mov
or
call
lcall
mov
shll
ds
notl
mov
leave
in
lods
clc
fsubrp
jmp
sbb
rol
push
push
sub
dec
add
lcall
add
mov
in
lods
mov
mov
mov
mov
xchg
mov
fndisi(8087
out
jl
and
lock
test
push
xchg
xlat
push
sbb
lods
and
rcl
pop
jb
mov
mov
cmp
pop
shlb
add
mov
fdivs
xchg
xlat
stc
lret
xor
sub
cmp
cmp
sbb
lds
add
hlt
daa
int3
dec
rolb
or
jle
jns
mov
ret
and
test
mov
cmp
jl
cmp
mov
popf
out
xor
std
fcoms
aas
lahf
inc
xor
and
jne
jns
div
add
mov
jne
mov
popf
loop
mulps
fidivl
cmpsb
iret
movsl
fdivrl
pop
cmp
jle
sbb
jg
testb
aas
lock
aas
jle
inc
lds
inc
cmp
push
add
mov
lods
data16
pop
int
mov
loopne
outsb
cwtl
or
pop
rcl
ror
aam
mov
pusha
push
mov
inc
push
push
xchg
xchg
sub
in
jge
sub
mov
or
ret
shrl
das
mov
mov
in
faddp
es
mov
sarl
lcall
cmpl
aaa
fisubl
pop
jae
jge
lds
jne
js
or
xchg
push
add
mov
mov
sub
lods
xchg
in
mov
sub
jmp
arpl
test
das
fistl
loop
pushfw
mov
fnstenv
fdivl
add
sbb
push
or
loope
jae
adc
movsl
andb
mov
push
test
aad
cld
xchg
fwait
rcl
jno
push
stc
ds
lds
scas
lahf
cmpsl
and
dec
iret
push
fs
test
rcrb
dec
test
dec
push
cmp
lret
lods
and
pushf
cmp
rorl
inc
xchg
mov
xor
cmpsb
fistpll
add
add
aad
xchg
adc
dec
addr16
inc
sbb
test
lret
popf
call
cli
push
test
clc
lret
mov
fcmovne
sbb
xor
inc
lret
test
mov
cli
adc
ja
and
je
adc
mov
jne
jecxz
bound
and
adc
inc
shl
aas
add
pop
cmpsb
adc
pop
in
neg
xlat
sbb
dec
dec
fistps
test
pop
testb
sti
or
cmpsl
jo
lea
mov
sbb
daa
lret
add
cmp
jnp
or
sbb
inc
jne
adc
mov
jae
je
loope
jmp
movsl
push
cld
sbb
lahf
scas
dec
and
test
scas
fsubl
cmpsl
mov
sub
out
inc
insl
jo
jp
sub
inc
or
int
sub
sub
in
mov
push
sub
les
add
in
movsb
or
bnd
xchg
insl
call
test
mov
inc
push
xor
sti
add
mov
insb
dec
sti
in
xor
xorl
xor
push
inc
cltd
cmp
mov
icebp
loop
cmp
fstpt
dec
ret
inc
push
fwait
inc
loop
xchg
mov
insb
dec
scas
mov
arpl
sar
sti
mov
test
lock
and
push
sarb
xchg
aad
sub
jno
sbb
mov
test
je
pop
and
jno
pusha
test
xchg
mov
rolb
pop
std
jle
pop
repnz
ljmp
dec
xchg
cld
or
cld
into
push
js
popf
int
mov
sbb
pop
xchg
fcompl
scas
movsb
mov
stos
or
xor
sbb
add
push
gs
aas
iret
addr16
add
cmp
jno
mov
inc
jns
les
pop
movb
inc
push
dec
jno
out
pop
test
cmova
push
fcoms
nop
popl
rol
ret
add
loope
sub
ljmp
hlt
nop
adc
in
jo
lcall
ffree
fisubrl
mov
leave
das
push
mov
xlat
sahf
sub
xchg
jns
pusha
dec
sub
std
cmp
inc
ljmp
sub
jp
and
fstps
xchg
mov
hlt
test
or
shl
cmpl
jge
push
pop
dec
pop
lahf
mov
ss
add
inc
lahf
dec
cmp
fidivrl
out
cltd
in
cmp
mov
jg
cmp
pop
adc
imulb
lahf
nop
push
sbb
sub
jno
add
push
pop
stos
int3
into
or
cmp
shlb
or
shl
rcr
pop
add
pusha
push
mov
ds
in
cmc
push
out
sub
test
out
xchg
xor
push
outsb
cwtl
and
es
mov
and
add
mov
jae
fnstcw
loopne
fsts
xlat
shrb
mov
mov
jg
sahf
adc
cld
jg
arpl
fidivs
and
jmp
push
mov
sub
hlt
mov
lea
jmp
xchg
and
adc
out
xchg
cmp
push
adc
in
dec
jecxz
or
mov
rclb
bound
sahf
mov
cmpsb
push
add
and
call
push
dec
repnz
mov
fistpll
and
js
sub
pop
xchg
idivl
pop
les
adc
and
cmpsb
pop
sbb
insl
xor
xor
jmp
inc
hlt
stos
out
ficomps
out
and
mov
ljmp
push
inc
in
in
jecxz
ret
mov
dec
xchg
test
iret
adc
or
repnz
mov
xor
mov
movsl
ret
sbb
in
cmp
mov
mov
mov
shrl
aaa
aam
mull
jecxz
data16
xor
ret
outsb
cmpsl
xchg
in
sbb
mov
mov
and
or
test
push
cmp
insb
test
insl
pop
jp,pn
dec
lahf
fldcw
sbb
fwait
jle
add
lds
sub
popa
aas
sub
push
in
shrb
fdivs
jo
adc
arpl
out
cmp
loopne
and
jg
iret
rcll
mov
repnz
bound
ret
jmp
dec
dec
sub
mov
mov
aas
jns
nop
clc
icebp
addr16
xchg
jl
and
jmp
add
aas
dec
dec
pop
subb
adc
hlt
dec
lcall
push
mov
pop
es
popf
lods
loopne
movsb
jne
pop
aam
repnz
daa
sti
jno
leave
mov
push
int
jo
or
mov
adc
cli
xchg
fs
int
pop
stc
add
cmp
imul
jne
mov
adc
jo
pop
sub
or
rorb
lock
outsl
push
ljmp
jne
ljmp
cld
stos
fldl
aaa
dec
pop
sbb
mov
loopne
xchg
leave
pop
ficompl
ds
lea
nop
xchg
mov
inc
loop
mov
into
push
mov
xor
sub
out
dec
aaa
mov
push
dec
fistpll
psraw
cli
out
push
add
fiadds
mov
fimuls
dec
pop
int3
mov
xor
pop
out
mov
imul
insl
int3
shl
sub
aaa
popf
or
sub
pop
adc
mov
jecxz
cmp
and
hlt
stos
call
sub
cmp
enter
push
pop
fwait
out
hlt
dec
xchg
outsb
sbb
or
imul
push
sub
pop
adc
mov
pop
push
jb
test
cmpl
mov
pop
mov
cmp
ret
fcoms
push
push
sub
ss
adc
iret
cld
mov
insb
out
jg
leave
sbb
fs
dec
mov
sahf
add
lds
or
or
dec
stos
insb
sbb
cli
mov
fstpl
mov
xlat
stos
test
rcrl
dec
xor
mov
ret
mov
add
push
adc
sti
cmp
bnd
rorb
dec
dec
xchg
test
push
cwtl
push
jl
xor
adc
sub
mov
lcall
loopne
or
cs
push
mov
xchg
ror
jb
cwtl
jb
push
pop
sbb
pop
call
pop
sub
mov
sbb
sbb
adc
inc
lods
cmpsb
or
adc
push
xchg
dec
mov
and
lods
cmp
clc
data16
movsl
pop
aas
mov
ljmp
sti
xor
sub
aaa
mov
jle
xor
inc
int3
ret
enter
dec
adc
mov
ljmp
and
insb
hlt
aad
cmp
xchg
add
fcoml
fildll
inc
add
push
int3
call
pushf
inc
cltd
ss
push
lahf
repnz
lods
insb
cmp
mov
loopne
mov
je
imulb
call
in
add
pop
mov
mov
mov
inc
std
sarb
loope
pop
adc
add
sahf
pushf
or
fwait
jae
les
nop
fs
mov
das
out
clc
mov
push
pop
leave
into
jns
jg
test
jne
in
dec
out
sub
jg
xor
cs
dec
inc
push
adc
jle
dec
cli
leave
lret
jae
adc
mov
pop
insb
dec
mov
outsb
hlt
lods
inc
or
mov
jle
xor
fldlg2
jg
dec
sbb
dec
pop
or
iret
mov
dec
rcrl
clc
fwait
pop
popf
adc
ss
mov
cmp
cmpsb
mov
lods
xor
mov
cli
cmp
add
sarb
rorl
in
int3
mov
cmpsl
test
dec
testl
cmc
mov
clc
jb
shll
fs
add
stos
mull
lods
sub
sti
sbb
rcr
rcrl
dec
ds
adc
fdivp
subl
adc
orl
xchg
add
insl
mov
popa
shlb
lcall
cmp
gs
lret
and
mov
repnz
rclb
mov
mov
stos
test
mov
out
inc
mov
cmp
xchg
sub
stos
into
mov
inc
fstpl
xor
dec
mov
dec
or
pop
loopne
and
out
in
xchg
aaa
mov
xor
add
xor
xchg
gs
xor
div
adc
adc
dec
lret
mov
outsl
fsub
push
hlt
or
pop
sbb
aaa
fisttpll
sub
stos
xchg
enter
out
fists
jae
pop
mov
data16
dec
std
fcompl
xchg
add
nop
mov
cmp
ds
es
repnz
mov
stc
mov
fisubrl
dec
lret
int
clc
fisubrs
call
stc
nop
pop
and
mov
push
push
bound
insb
dec
les
mov
test
mov
aad
xorb
je
out
subb
sar
adc
incl
repnz
pushfw
sub
fs
in
data16
mov
movsl
adc
idivl
xor
pop
loop
add
xchg
ss
inc
add
out
xchg
mov
mov
xlat
stos
add
adc
xchg
lock
cmp
into
jmp
lods
push
cmp
aas
test
lods
or
fwait
sbb
jmp
call
iret
imul
cmpsl
daa
stos
or
xor
pop
mov
aad
mov
cmp
cmpl
psrlq
jge
insb
pushf
push
leave
das
lea
push
iret
push
or
cmpsl
ret
in
or
jae
sub
filds
iret
mov
cmp
and
push
add
pop
push
mov
xchg
cltd
lcall
sarl
mov
mov
mov
or
or
inc
jo
sub
nop
jne
and
and
jnp
gs
add
jbe
aas
outsl
xchg
or
cli
xchg
gs
mov
xchg
inc
and
nop
inc
nop
pop
into
test
stos
aas
cmc
inc
cli
lahf
ret
xchg
icebp
movl
xor
loope
pop
std
fildll
push
cmp
push
test
push
icebp
ss
xor
scas
and
sub
dec
jo
add
dec
adc
jbe
adc
inc
popa
xor
or
xchg
lret
bound
xorl
fwait
lods
cmp
and
cmp
add
roll
push
mov
pop
mov
and
out
jno
stc
test
pushf
pop
xchg
std
xlat
jp
add
sub
sub
cwtl
popa
sahf
aam
ret
adc
sti
addl
sub
push
out
lahf
cltd
adc
cmpb
mov
jae
push
fcomps
movsb
pop
inc
fstpl
mov
in
fwait
or
xchg
movsb
in
std
mov
int3
in
fldt
rcll
sarb
ret
clc
xchg
ja
pusha
cmpsb
jae
cmpsl
mov
pop
test
mov
fsubr
add
adc
sub
jbe
inc
dec
hlt
mov
dec
cwtl
fdivs
xchg
dec
aad
and
outsl
cmp
fmull
xor
and
out
sub
fdiv
ret
xchg
push
push
xchg
inc
adc
push
jno
clc
mov
in
sbb
and
lret
scas
sbb
sbb
mov
dec
clc
cmpl
rcll
clc
xchg
repz
dec
sub
push
clc
fwait
repz
fdivs
push
cmpsl
leave
es
mov
or
lea
mov
movsl
out
mov
int3
mov
sbb
sub
adc
xchg
xor
rorb
mov
in
dec
xchg
xchg
xor
insl
scas
pop
and
scas
push
inc
fucomip
mov
xlat
push
mov
lahf
push
fdivl
hlt
ja
jl
xor
jl
inc
movsb
cmp
push
sahf
or
aam
movsb
and
add
jg
sub
push
mov
add
cltd
add
xor
and
lea
push
orl
sbb
xor
xchg
ljmp
mov
or
sub
outsb
aam
repnz
es
cmp
jno
fadd
fnstcw
cmpsb
jl
inc
xchg
push
fisubl
bound
jae
add
push
mov
add
or
add
pusha
xchg
pop
xchg
lock
push
jbe
icebp
add
push
jge
stc
xchg
pop
mov
cld
into
ss
push
add
adc
cli
cwtl
out
or
inc
push
test
mov
pop
xor
push
cmp
iret
aas
mov
add
push
mov
test
testb
mov
add
rorb
mov
mov
cmp
pop
dec
shl
fwait
les
jle
jnp
mov
sub
mov
inc
cmp
fs
mov
scas
pop
inc
iret
movzbl
sbbb
or
daa
aad
pop
adc
push
jge
inc
push
jle
inc
add
rclb
mov
iret
jg
mov
add
ret
inc
scas
sahf
inc
add
cmpsb
orb
sub
scas
dec
xor
or
call
sbb
cs
addl
mov
clc
cmp
and
and
push
leave
setle
testb
or
movsb
lahf
out
and
aaa
inc
or
jge
repnz
shrl
dec
arpl
mov
shll
faddl
out
xchg
and
or
mov
sbb
inc
jno
jne
sub
out
clc
clc
in
sub
jp
sti
iret
or
add
or
aaa
les
scas
dec
daa
mov
cwtl
mov
mov
fmull
pop
and
add
popf
xchg
iret
or
cwtl
fsubrp
cmp
adc
sbb
mov
sub
xchg
cmp
xchg
ljmp
jp
es
enter
sub
scas
inc
sbb
pop
inc
xor
and
or
pop
mov
mov
pop
cmc
lds
sbb
in
dec
popa
ret
xor
mov
jno
test
lret
movsl
mov
sub
sbb
not
xchg
ss
or
and
imul
adcb
test
jne
out
loopne
mov
push
lahf
sbb
mov
inc
aas
or
mov
jno
adcl
mov
rcrb
jns
mov
inc
shrb
test
mov
adc
aad
pushf
xor
rcr
dec
shr
dec
xor
ja
cmp
ficomps
mov
sahf
jecxz
fildll
out
cmpsb
xlat
inc
aas
and
xchg
dec
ss
sarl
mov
cmpsb
idivb
js
bound
xlat
jne
sbb
idivb
out
ja
pop
iret
mov
mov
fucomi
or
cmc
pop
cmp
sub
xlat
orl
push
test
and
adc
xor
sbb
pop
add
sbb
mov
jbe
lret
div
imul
shrb
xor
adc
in
jb
mov
lahf
or
idivl
int
push
jp
jp
jo
inc
xlat
sub
ret
mov
or
dec
jle
inc
lods
mov
and
xor
fwait
cltd
mov
jge
adc
inc
mov
shlb
popa
js
cmp
pop
adc
lret
pop
enter
xchg
outsb
test
pop
leave
or
adc
jge
aam
add
pop
call
imul
test
fmuls
lods
cmp
paddd
test
pop
outsb
sbb
cmp
inc
or
es
pusha
das
into
inc
je
lock
push
out
aaa
dec
or
cmp
pop
syscall
das
cs
add
jns
adc
movsl
pop
clc
movsl
cmc
lods
pop
pop
mov
inc
popa
mov
movsl
lods
shll
sbb
sahf
arpl
or
mov
adc
out
and
mov
mov
push
dec
icebp
test
mov
movsb
xchg
out
sbb
test
popa
insl
into
mov
ret
cli
fcmovbe
pop
rol
fadd
cmpl
ds
enter
sub
sti
cmp
std
jp
dec
stos
add
scas
or
fdivrs
movb
push
xor
adc
pop
push
iret
and
mov
fidivs
mov
jecxz
xor
clc
add
dec
pop
pushf
and
insl
xor
mov
and
xlat
mov
mov
add
pop
pslld
je
rorb
add
jle
and
stos
jle
and
in
jae
nop
mov
cmp
fidivs
jns
es
xlat
loope
push
cld
outsb
xchg
pop
adc
mov
xor
bound
or
rcll
or
test
popf
aaa
or
mov
lret
fwait
mov
mov
mov
int3
push
ja
js
addr16
pop
je
nop
cwtl
push
xor
pop
mov
push
imul
mov
sahf
cli
dec
subb
sub
aas
xor
lret
mov
in
or
out
test
movsb
stos
xchg
mov
dec
xor
cmp
mov
aam
in
push
push
mov
mov
test
mov
xor
mov
jp
out
push
cwtl
scas
dec
sub
dec
mov
inc
insl
pop
inc
call
push
mov
aaa
jnp
inc
mov
nop
cmp
jp
cmp
leave
pop
fwait
jle
imul
inc
dec
test
fidivl
pop
pop
fldcw
cmpsb
in
inc
ret
cmp
jp
jnp
inc
ljmp
dec
push
and
jae
xor
loop
fstps
inc
ret
cmp
adc
mov
dec
push
out
pop
pusha
push
pop
mov
pusha
mov
xchg
sub
xchg
xchg
add
sub
and
sub
pushf
sub
jbe
sbb
cli
and
movsl
add
lods
mov
or
mov
lcall
mov
jge
jle
jle
enter
fistpll
addr16
sbb
add
inc
push
mov
fcomps
push
aaa
das
fiaddl
js
push
daa
jg
jl
pop
or
mov
sub
jae
cs
scas
shrb
out
scas
xchg
fnstenv
test
jno
mov
cmp
and
xchg
inc
dec
sbb
cmp
pop
fsub
ljmp
shrl
adc
mov
test
adcl
enter
popl
pushf
xchg
cwtl
lret
mov
ljmp
pop
xchg
mov
inc
push
jmp
jle
je
cmpsb
in
mov
aas
aas
frstor
sub
dec
paddb
or
in
repnz
aam
popf
pop
cltd
push
sarb
xorps
or
mov
iret
xchg
pop
adcb
xchg
mov
in
jno
inc
mov
add
daa
dec
shrb
push
xchg
call
std
jecxz
xchg
ret
jle
hlt
gs
ds
rol
lgs
add
sbb
addr16
test
mov
sub
movsl
das
ljmp
popf
cmp
pop
hlt
jl
arpl
push
add
add
pop
daa
lds
fs
ret
pop
popf
pop
pop
jbe
dec
daa
jbe
jbe
les
mov
dec
jo
call
dec
xchg
mov
mov
mov
sub
pop
mov
ja
adc
decl
das
inc
mov
dec
mov
lret
fwait
js
leave
sbb
lock
mov
sub
sbb
mov
and
ljmp
dec
cmp
dec
shlb
pop
inc
lret
pusha
xor
cmp
nop
test
ja
imul
dec
push
mov
add
inc
jecxz
mov
adc
loope
sahf
fs
dec
outsl
cmpsb
add
jmp
add
outsl
fdivr
data16
call
daa
divl
jo
adcl
repz
aad
scas
aam
lods
divl
dec
xchg
aad
sbbl
imul
pop
mov
mov
sbb
ljmp
inc
icebp
adc
cmc
xchg
mov
cltd
cld
shl
aaa
in
pop
fiadds
ficompl
mov
sbb
arpl
and
adc
es
inc
hlt
xor
inc
icebp
faddl
dec
sbb
mov
xchg
adcl
push
les
stc
inc
and
repz
or
sar
into
dec
inc
sbb
sbb
test
cmc
mov
inc
int3
push
mov
out
fadd
and
movsl
xor
sbb
push
and
xchg
jp
sbb
mov
shll
in
int3
outsl
adc
or
push
imul
xchg
repnz
ret
push
scas
cmp
dec
fsubr
lea
xchg
cmp
xor
mov
mov
push
js
add
adc
jl
mov
add
cmpsl
popf
push
mov
enter
push
jecxz
sarb
jmp
adc
or
lods
nop
fidivs
pop
jmp
push
sbbb
les
lods
jb
cld
jmp
pop
cltd
addb
mov
add
xchg
add
leave
nop
xor
push
rolb
pop
and
shlb
push
popf
mov
adc
loopne
mov
xor
lods
clc
enter
inc
pop
mov
in
fisubl
push
fsubp
ret
test
xchg
int3
iret
cmpsb
aas
push
push
rcl
push
adc
and
sub
js
leave
icebp
sub
jg
inc
fs
push
add
lods
add
add
pop
sub
in
sub
jmp
push
insb
pop
add
scas
and
pop
cmp
insl
loop
inc
xor
imull
jb
cmp
xor
inc
dec
in
and
lret
jp
sarl
int3
movsl
fwait
xchg
mov
dec
lahf
mov
mov
pop
fdivrs
add
mov
xor
mov
jl
popf
push
in
das
rcl
jno
jle
sbb
insb
aas
jo
cltd
push
inc
jne
sub
enter
sahf
in
rorb
or
ret
scas
jle
xchg
sti
cmc
hlt
xor
ja
sbb
repnz
pop
fs
push
lods
or
xor
adc
xor
das
adc
mov
ss
mov
in
por
xor
push
imul
mov
pop
repz
xor
and
and
push
pop
or
sub
mov
xor
mov
mov
cmp
sub
jecxz
xchg
das
imul
adc
pop
movl
mov
ror
mov
ja
xlat
pushf
push
sti
lret
dec
scas
outsb
cli
hlt
repnz
outsl
mov
aaa
mov
or
xor
xchg
add
pop
adc
mov
push
sbb
ret
and
xor
cmp
ret
inc
int3
jecxz
jno
data16
mov
sub
push
xor
fs
cmp
and
sbb
inc
or
aas
roll
push
and
ljmp
cmp
push
mov
lea
mov
je
mov
or
imulb
pop
cmp
dec
das
mov
lea
pusha
sub
xchg
sbb
cmp
je
jl
cmpsb
sbb
pushf
clc
add
mov
adc
shll
cmp
daa
in
jne
pop
gs
mov
or
mov
scas
xchg
aad
jo
stos
cltd
xor
jns
lds
hlt
lret
ret
xlat
movsl
xor
sub
ds
outsl
dec
stos
out
sbb
cmpl
inc
decb
jo
stc
pop
jle
in
push
sbb
fs
lea
mov
inc
lahf
sar
xchg
xor
sbb
scas
sbb
xchg
call
sbb
rclb
push
in
loop
sbb
dec
jb
add
xchg
inc
jno
mov
mov
lods
mov
add
std
or
jle
push
test
test
sbb
jbe
pop
dec
sub
mov
imul
imul
lods
push
in
loope
fneni(8087
ja
mov
lret
outsb
mov
jne
testb
xor
out
fs
ret
jg
icebp
and
and
and
push
jge
mov
mov
dec
clc
xchg
pop
popf
jbe
shll
lock
stc
and
fildl
loop
pushf
jo
ja
or
mov
jne
jnp
sbb
xchg
push
mov
cmp
push
addr16
or
fdivl
cld
jl
stos
dec
arpl
xlat
push
clc
test
push
xor
shrb
fidivrl
in
lret
xor
mov
setnp
hlt
and
fistpl
jb
hlt
repz
and
jne
fidivrs
sahf
bound
inc
jle
cmp
fnstenv
and
xor
pop
ret
add
lock
push
insl
push
xchg
in
mov
fs
xlat
int
jns,pn
cwtl
inc
and
out
sahf
out
cltd
xor
pop
lea
xchg
mov
cwtl
cli
push
mov
jns
xor
mov
into
lods
mov
cli
xor
adc
fstl
jmpw
inc
xchg
sbb
sub
aad
or
nop
pop
sub
bound
sub
pop
lret
inc
mov
shr
mov
push
arpl
and
pop
out
sbb
xor
ficompl
ss
ret
inc
pop
xchg
cmp
adc
fists
mov
mov
mov
xchg
js
push
nop
fs
pop
pushf
push
pop
sbb
sahf
add
adc
lea
xchg
inc
imul
jp
jnp
xor
nop
or
pop
sbb
pop
and
shlb
ss
mov
jne
fbld
inc
dec
add
nop
into
gs
repz
lea
mov
inc
je
xchg
cli
dec
inc
inc
pop
push
jns
inc
mov
adc
adc
cs
inc
and
mov
out
test
cli
cmpsb
inc
jb
cvtps2pi
mov
or
push
nop
xchg
dec
or
push
in
insb
iret
lods
push
xor
cmp
pop
sub
lcall
dec
mov
gs
loop
lods
fsubrs
ja
xchg
popa
pop
andb
icebp
cmpsb
mov
imul
in
imul
xchg
rolb
jmp
leave
mov
popa
loope
shll
jbe
out
out
mov
jbe
mull
dec
movsb
test
adc
bound
ror
xor
jge
xor
popl
xor
mov
inc
jne
push
lods
mov
sub
push
fs
pop
sbb
mov
test
sub
scas
xchg
xchg
repnz
pop
outsb
sub
pop
or
add
roll
mov
es
fldl
int
mov
mov
int3
addl
rclb
in
xor
adc
and
imul
xchg
sbb
push
push
rcll
cmp
ljmp
or
cmp
mov
fwait
pop
jne
jmp
outsl
adc
cmpsb
das
imul
jne
xor
cmpsl
or
lcall
dec
out
xchg
rorl
js
push
inc
icebp
pop
adc
das
mov
in
aad
or
imul
and
in
lock
sar
pop
test
push
inc
xchg
cmp
push
fisttpll
insb
daa
push
lock
inc
push
in
pop
repnz
pusha
lods
shl
or
push
mov
sbb
push
pop
popa
pop
xor
inc
dec
inc
jmp
push
test
lahf
sahf
push
xchg
cmp
movl
push
or
xor
scas
shrb
sub
sarl
xchg
jle
xor
sub
add
push
push
test
inc
stos
ret
sbb
call
pusha
ss
rcll
push
lcall
popf
jecxz
add
or
sbb
cmp
cmpsb
addl
fimull
out
mov
gs
push
cli
jne
inc
push
xor
push
cmp
mov
push
xor
js
insl
addr16
testb
and
mov
pop
popa
xchg
call
mov
xchg
popa
in
or
jne
sub
pop
mov
in
into
mov
into
sbb
dec
sub
mov
dec
and
jo
mov
repnz
ret
mov
lret
cmp
inc
sahf
rcr
cmpsb
scas
xor
inc
stos
and
and
lcall
add
pop
subb
hlt
pop
cmp
adc
iret
fsubs
popa
xlat
sti
push
mov
mov
cmpsl
ja
aas
fstpt
jne
aam
outsb
jno
ret
add
jo
push
mov
stc
pushf
adc
test
mov
stc
push
clc
hlt
fs
jmp
jbe
jbe
add
xor
mov
mov
jno
in
jl
popf
add
pop
lahf
xchg
mov
rcrl
xor
les
cmp
mov
int
push
fcoml
idivb
ret
sbb
dec
je
mov
inc
mov
rorl
loopne
mov
mov
xor
push
ljmp
roll
cmp
mov
push
push
fwait
pop
lcall
pop
pop
cltd
or
and
scas
cmp
xchg
loopne
pop
mov
pop
push
das
xchg
add
in
sub
into
jl
xchg
inc
push
xchg
test
nop
fisubs
lahf
and
or
sub
bound
popa
out
cmp
push
movsb
inc
cmp
sbbl
add
addb
jb
mov
mov
or
mov
mov
lahf
xchg
inc
and
ss
sbb
adc
ret
cmp
dec
jl
add
mov
rclb
fdivl
dec
dec
movsl
adc
rclb
out
sbb
mov
dec
add
jp
jp
addr16
pop
lret
xchg
rcll
mov
xchg
rcrl
push
lods
ja
roll
cmp
add
or
jo
test
jl
adc
mov
mov
sahf
cmp
orb
inc
cmp
or
aaa
cli
lret
dec
cld
jnp,pn
sahf
stos
mov
mov
fsubrl
dec
adc
add
ror
jbe
popa
mov
cmpsl
pop
into
in
pop
add
ret
pop
adc
dec
test
dec
hlt
test
xchg
adc
sub
xchg
mov
adc
pop
test
repnz
sbb
dec
sti
push
push
push
mov
aad
push
sbb
enter
xchg
cmc
dec
insl
push
or
out
and
testl
clc
sahf
or
adc
adc
lods
ficompl
mov
clc
ficoms
adc
jp
and
loope
sbb
pop
mov
push
fmuls
push
out
cmp
loopne
cmp
jne
std
insb
xor
stos
dec
ds
xchg
inc
push
pop
scas
add
das
pop
pop
add
ds
pop
mov
outsb
inc
xchg
xorl
mov
pusha
or
rcrb
movsb
pop
shr
cltd
push
xor
xor
xor
dec
repnz
imul
mulb
testl
cmpl
pushf
insl
mov
mov
cmp
rcrl
jno
dec
test
rcrl
stos
inc
out
lret
mov
sbb
dec
jle
addb
push
in
pop
and
and
add
mov
inc
xchg
push
ljmp
nop
ret
pop
outsb
sub
mov
push
jns
add
incl
shll
or
pop
lea
lahf
push
lret
and
int
add
movsb
cmpsl
scas
push
shll
popf
mov
pop
jae
fldenv
in
adc
pop
outsb
int
loop
js
test
cmp
in
fwait
jno
push
jne
andl
push
push
je
inc
iret
adc
movsb
insl
xchg
mov
ss
sahf
fistpll
adc
aad
leave
aaa
pop
repnz
into
stos
adc
ret
adc
cmpsl
in
mov
aaa
bound
jb
test
std
mov
adc
dec
pop
shrb
xchg
mov
dec
sarb
sub
jg
lock
popf
and
add
pop
mov
into
imul
push
icebp
insl
ret
icebp
cmp
adcb
stos
pushf
outsb
lret
jnp
dec
test
insb
fcoml
add
sti
arpl
sub
cmp
push
les
xchg
adc
and
pushf
jl
cmp
je
jmp
fistpl
lret
test
in
iret
dec
incl
decl
xchg
int
out
int3
cmp
fsubr
mov
sahf
lret
mov
ja
les
lret
sub
subl
stos
pop
lods
push
push
je
sbb
mov
mov
ret
cs
in
mov
xchg
cmp
adc
pop
xchg
xor
add
adcl
inc
or
push
pop
sub
in
mov
xchg
ficompl
jne
add
sub
lock
mov
je
or
aaa
pusha
lds
fs
jl
sbb
sti
pop
popf
out
movsl
arpl
or
xchg
adc
outsl
into
inc
pop
xchg
push
orb
call
dec
andl
scas
sarl
push
mov
adc
mov
dec
jle
rcl
mov
cld
pop
jbe
lock
add
fucomp
les
cmp
mov
push
ds
roll
sti
inc
cmp
lods
mov
cwtl
inc
dec
adc
mov
in
ljmp
out
push
scas
movsb
inc
sub
insl
iret
sbb
push
xchg
fldenv
out
bound
adc
sbb
sbb
shr
xchg
aad
sbb
out
and
insb
es
mov
pop
aam
and
add
addr16
or
push
leave
cltd
test
jge
jp
dec
pushf
ret
jmp
xchg
mov
cmp
or
jmp
cli
pop
shl
cmp
sti
push
adc
inc
xchg
clc
mov
in
pusha
lcall
adc
sbb
jne
push
idiv
sub
or
xchg
adc
push
xchg
movsb
cltd
mov
dec
inc
icebp
loop
ret
add
sub
lods
mov
pushf
repnz
pop
mull
xchg
and
pop
scas
dec
loope
sub
shrl
cmp
cwtl
push
imul
push
fs
arpl
cltd
xchg
xor
faddp
and
hlt
mov
out
icebp
mov
es
mov
and
andl
out
cwtl
push
inc
mov
ret
cmc
mov
inc
jo
clc
and
rcl
testl
int3
push
aad
jecxz
popf
in
or
dec
insb
push
pop
in
gs
andb
jmp
es
xchg
ret
daa
and
incb
das
mov
lock
adc
xlat
inc
into
int
jo
loope
xor
insb
add
arpl
dec
and
inc
mov
es
add
cmp
lods
in
pop
xchg
mov
sbb
push
xchg
test
xchg
inc
mov
in
in
rorb
aad
cmp
jo
jbe
orb
popa
adc
mov
fwait
sti
out
cli
outsl
xor
iret
inc
fisubrl
mov
fidivl
loop
pushl
sbb
scas
jge
cmpl
mov
jo
sbb
rcr
fisttpl
sahf
test
jbe
rolb
sub
fnstcw
inc
hlt
mov
add
fwait
orl
cmp
xor
push
add
xchg
push
mov
mov
and
outsl
push
dec
add
jno
mov
push
mov
stos
daa
pop
shlb
aam
hlt
inc
out
xchg
push
and
adc
mov
icebp
enter
leave
and
xchg
or
dec
rclb
dec
int
mov
sbb
cmp
pop
or
pusha
jo
stc
jecxz
lret
lcall
test
inc
dec
pop
xor
test
call
cmp
imul
xchg
jge
sub
and
sub
imul
jle
shll
repnz
lods
ja
or
mov
mov
mul
es
pop
cmp
sub
sti
jae
xchg
cmc
out
cld
icebp
xor
imul
sahf
ss
inc
sbb
rcr
shll
mov
mov
lcall
into
in
dec
add
clc
rclb
std
mov
fwait
mov
in
sub
mov
in
pop
mov
inc
jnp
int
cli
sahf
jp
rclb
mov
pushf
mov
jae
ficomps
push
mov
repz
push
inc
xlat
jg
jne
mov
fwait
and
mov
das
movsl
mov
adc
pushl
cmp
loop
addl
lcall
mov
pop
mov
sub
adc
out
cs
ret
jno
mov
pop
aaa
jecxz
sub
fabs
pop
ljmp
dec
lods
add
inc
dec
pop
push
data16
or
sar
add
add
insl
xchg
jbe
sub
je
jne
stos
fisubrs
push
out
lods
add
mov
aad
sbb
mov
push
jb
repz
or
fdivs
ja
aas
cmp
shl
insb
js
inc
lret
lret
add
xor
push
xor
jecxz
je
aas
in
shl
dec
inc
mov
loope
mov
mov
lock
scas
pushf
cld
sub
sub
pusha
cmp
es
ljmp
lret
inc
push
stos
jg
cmp
test
in
sub
or
es
pop
mov
fidivl
in
pop
inc
es
jns
mov
add
fcmovnbe
rolb
jle
xor
into
rcrl
adc
andl
rorl
adc
lds
sub
sbb
dec
mov
out
es
jns
mov
add
xchg
push
push
mov
idiv
sub
push
push
daa
inc
push
and
ret
sub
jne
pushf
subb
push
push
stos
jmp
jecxz
push
addr16
inc
mov
and
push
mov
stos
sbbl
xlat
clc
inc
cmp
mov
pop
sbb
rorl
or
cmp
jg
mov
pop
mov
push
imul
dec
repnz
pop
aam
pop
xor
lahf
sbb
mov
mov
lret
gs
jmp
or
aas
dec
add
aam
cmp
fsub
push
test
jo
cs
mov
or
cltd
cmp
insl
add
mov
push
dec
add
dec
cmp
xorl
xchg
jno,pt
sub
in
mov
adc
add
adc
add
pop
ret
xor
cwtl
sub
jp
jae
jle
bswap
or
iret
popa
shr
mov
xor
stos
in
repnz
inc
mov
imul
lret
pop
cmpsl
inc
cli
ss
mov
mov
stos
lcall
jbe
cmpsl
repnz
adc
adc
fdivr
shl
push
ret
inc
icebp
adc
adc
adc
and
xor
or
pop
negb
add
es
sub
hlt
pop
out
inc
shl
inc
ss
fdivr
mov
fistl
stc
pop
cmp
cmpsl
enter
push
mov
cmpsl
ljmp
xchg
jmp
jb
xchg
stos
pop
out
pop
mov
icebp
and
mov
aas
hlt
dec
fldl
mov
xor
call
pop
sub
push
test
ss
or
xor
imul
cmpsb
xor
and
add
or
pop
and
scas
leave
rol
rol
stos
cmpsb
outsb
or
out
fisubrl
xchg
loope
jg
add
out
jl
imulb
leave
cs
mov
bound
mov
xchg
inc
andl
gs
add
imul
dec
fs
in
mov
mov
jns
fimull
es
aaa
rcr
mov
nop
mov
pop
dec
sbb
inc
push
ficoml
shll
or
push
movsl
into
mov
mov
add
gs
gs
pop
int3
dec
notl
pop
jle
sahf
roll
cmp
call
rclb
lret
mov
xchg
cmpsl
sti
les
add
negb
jp
pushf
pop
shl
out
push
enter
lea
nop
mov
sbb
sub
leave
pushf
test
xchg
push
pop
inc
xchg
test
jp
jns
outsl
das
ficoml
add
in
loope
hlt
jg
cltd
mov
and
and
add
cmp
call
jne
test
subl
shll
nop
leave
push
push
push
bound
shr
imul
iret
lret
mov
jns
das
movsb
push
inc
sub
test
sub
in
stc
int
mov
rolb
push
pop
jbe
mov
or
or
push
xor
inc
loope
mov
int
enter
cmpxchg
repz
mov
mov
cmp
sarb
push
inc
out
xor
daa
jo
jnp
pop
popa
popa
push
in
adc
jbe
cmpsl
cld
fadd
repz
fwait
cs
es
jg
adc
pop
mov
incb
rcrb
icebp
stc
and
mov
rcr
aam
xchg
push
jne
and
cmpsl
cmp
xchg
cmp
push
fsubrs
mov
mov
movsb
jge
cmp
jbe
das
fwait
rcrl
lods
jecxz
clc
pop
out
xor
adc
icebp
inc
ds
push
rcrb
mov
pop
incb
rol
push
daa
xor
loop
jg
dec
cmpsb
push
push
adc
je
cmp
inc
gs
jo
invd
xor
in
or
inc
stc
test
nop
dec
adc
lock
xor
pop
out
call
dec
gs
jb
jno
in
decb
adc
divl
addr16
mov
sub
cli
mov
push
add
sub
sbb
bound
pop
add
cld
and
inc
jp
sub
out
push
lea
fsubrl
cmp
mov
add
daa
pop
std
cmp
es
js
mov
adc
scas
lods
ficomps
push
sahf
pop
jmp
sbb
sub
out
cmp
jp
jno
xor
mov
fwait
in
and
mov
shll
test
pop
push
jp
push
jne
lock
enter
daa
jns
sarl
icebp
inc
mov
dec
rolb
lret
std
and
mov
in
push
int3
scas
stos
in
gs
loope
mov
insl
repnz
es
repz
fmulp
pop
dec
testl
mov
mov
cmp
scas
subl
jg
or
push
inc
add
hlt
cs
sbb
adc
xor
int3
ret
xor
xchg
leave
jmp
icebp
pusha
xchg
push
sub
mov
xchg
jno
shll
sub
jnp
or
clc
pop
dec
add
dec
push
jl
cmpsb
sub
pop
stos
pop
xchg
jecxz
and
mov
scas
lret
mov
in
or
cmpl
pop
data16
xor
push
ret
pop
mov
mov
xor
xor
test
loopne
fs
adc
fcompl
cmpsb
cmp
xchg
je
int3
movsl
cwtl
add
leave
shlb
add
jne
mov
cld
neg
jbe
bound
jmp
fcomi
mov
sub
push
adc
pop
mov
jbe
int3
sahf
mulb
mov
jmp
and
sbb
js
out
ja
xor
mov
push
jbe
dec
popf
or
or
inc
cmp
repz
pop
xchg
mull
sbb
pop
notb
bound
es
push
in
push
add
cli
and
add
loope
jae
ret
push
xchg
cmp
push
mov
jmp
jnp
pop
rorl
pop
xor
sbb
jne
enter
in
cmp
and
dec
lret
test
enter
in
pusha
pop
lahf
jl
sub
inc
cmp
mov
mov
mov
adc
fxch
in
lods
jge
sub
dec
jno
mov
cld
jge
test
mov
xchg
cmpsl
bound
clc
mov
ret
sbb
pop
mov
inc
mov
aaa
push
dec
mov
test
int
clc
push
xchg
inc
jecxz
ret
mov
shl
movsb
negl
fcoml
int3
roll
adc
fs
sarb
jo
inc
pusha
out
ja
call
inc
mov
les
inc
xchg
mov
pop
imul
xchg
mov
fadd
mov
xlat
jb
cmc
fcomip
lahf
insb
jp
lods
daa
sub
shl
adc
jmp
daa
ror
xchg
ja
ss
test
push
and
adcl
imul
aaa
imul
mov
mov
add
mov
sbb
xchg
rol
pop
xchg
inc
js
mov
or
lret
cwtl
les
cmp
lea
push
clc
xor
lahf
xorl
mov
lcall
and
shll
jnp
into
loop
mov
sbb
std
cmc
lret
dec
ja
arpl
dec
xchg
cmpsb
jns
adc
addr16
scas
jmp
mov
push
adc
clc
outsl
xchg
pop
pop
fsubrs
dec
mov
arpl
pusha
push
adc
ror
lcall
gs
mov
bnd
cltd
leave
inc
push
in
scas
rorb
psraw
mov
stos
mov
push
repnz
into
and
push
int
cs
and
rorb
pushf
adc
inc
pop
lds
ljmp
rcll
xlat
hlt
ljmp
push
in
shrl
sbb
popa
add
mov
stc
nop
sub
push
lret
push
icebp
inc
dec
loopne
dec
iret
hlt
cmp
sub
sub
scas
mov
movsb
lret
push
shlb
sbb
das
xchg
xlat
ljmp
add
nop
mov
popa
into
rolb
mov
jle
loope
xchg
inc
dec
repz
xlat
dec
and
arpl
adc
nop
sbb
push
aad
add
bound
xor
mov
fs
imul
pop
xor
fldenv
pushfw
fstpt
jne
in
xchg
mov
adc
fs
or
xchg
dec
enter
jns
outsl
sub
lds
mov
sub
sbb
adc
push
leave
xlat
mov
fcompl
cmpb
sub
sahf
in
lret
cltd
pop
or
xchg
inc
inc
pop
inc
xchg
mov
add
push
inc
cltd
pop
sub
inc
add
add
pop
push
dec
fldcw
pop
xchg
cmp
out
into
nop
movsb
lods
dec
mov
int
xor
into
inc
cmp
xor
cltd
roll
mov
aam
fucomp
or
mov
in
cmp
mov
stos
pop
mov
popa
jl
dec
mov
xor
movsl
iret
or
fxch
insb
loopne
lahf
xor
add
jecxz
into
cwtl
fbstp
cmp
outsl
add
jp
hlt
imul
lret
ja,pn
pop
pop
adc
in
das
inc
aad
andb
mov
lock
jecxz
mov
add
and
int3
rclb
mov
push
dec
sub
js
insb
pushf
test
xchg
mov
sub
fwait
lods
dec
rcll
sbb
rolb
mov
fcmovnb
fsubrl
popf
pusha
cmp
xor
mov
lods
out
cmp
into
jle
pop
ss
insl
cmp
sti
jns
jbe
shlb
adc
or
daa
ss
lret
jg
fucomip
or
enter
sbb
dec
push
and
iret
jne
dec
bound
lock
push
jl
arpl
jnp
roll
inc
ficompl
xor
arpl
jnp
bound
cmp
inc
test
jne
sbb
stc
mov
mov
mov
or
pop
dec
pushf
cmpsb
jnp
push
adc
jnp
mov
jo
fsubl
inc
mov
cld
mov
scas
fwait
pop
sbb
inc
adc
jb
shlb
mov
jae
leave
add
ret
pop
pop
push
adc
mov
ret
adc
cmpsb
xchg
add
dec
jecxz
cwtl
mov
lret
enter
xor
rorb
arpl
nop
cld
adc
pusha
lods
mov
and
fdivs
cmpsb
sub
rcrl
mov
jbe
cmpsl
hlt
in
jg
lret
iret
jecxz
adc
or
sbb
inc
loopne
xor
push
push
xor
lods
enter
or
loopne
mov
imul
aad
ljmp
and
shrb
outsl
pop
push
mov
mov
and
jle
lods
xor
fiadds
gs
jo
mov
inc
inc
out
movsb
in
xchg
dec
xchg
xor
sub
fadds
inc
jge
mov
stc
sub
add
push
and
xor
mov
push
inc
or
sub
std
sahf
rcrb
movsl
pop
jnp
mov
cmp
jno
int3
lock
pop
adc
leave
sub
out
and
mov
scas
aas
ret
add
fildll
mov
mov
enter
shrb
fcmovnb
sub
imul
mov
mov
jecxz
and
xchg
lret
in
fnstenv
cmp
fadd
jne
scas
xor
or
shl
sti
inc
gs
cmpl
iret
adc
mov
jge
mov
nop
test
jg
xor
push
out
jecxz
sahf
andb
ret
push
pop
int3
xor
add
test
mov
fmull
in
ds
pusha
pop
cltd
icebp
mov
jbe
in
movsb
cmpsl
jge
mov
xor
push
push
sbb
pop
test
push
mov
or
out
dec
inc
or
xor
movsb
mov
or
sarl
inc
push
push
loopne
mov
inc
fs
jg
push
push
and
or
dec
lcall
ja
scas
stos
dec
outsb
ret
enter
push
scas
pusha
fistpll
paddsw
mov
stc
popf
jmp
ret
inc
push
or
test
mov
inc
xor
shrl
das
cmpsb
cld
shl
shlb
push
add
das
bound
push
mov
repz
add
and
out
into
into
fildl
movsl
loop
jge
clc
cmpsl
test
loop
decb
scas
jne
scas
cwtl
nop
mov
xchg
jbe
sub
lods
loope
inc
jae
outsl
jmp
data16
cmp
pop
lock
gs
dec
jae
ljmp
or
and
xor
and
adc
insb
inc
out
cmp
add
pop
xor
jecxz,pt
gs
rorl
add
xor
dec
fs
insl
xor
rolb
dec
cmp
dec
imul
jp
leave
sti
iret
sub
rolb
xchg
or
xchg
cmpsb
push
mov
xchg
xlat
cltd
ja
insb
lcall
aam
add
xor
sub
jns
into
xchg
jbe
enter
int3
inc
in
bound
and
sahf
push
push
ss
adc
mov
dec
in
fdivp
sbb
push
mov
cmpsl
cmp
cltd
xor
jnp
jge
in
adc
xchg
lock
sub
mov
cmp
add
mov
sahf
inc
pop
lods
xor
mov
push
std
add
xchg
scas
outsb
adcl
pushf
sar
fbld
in
adc
stos
daa
mov
dec
push
fucomi
fldl
push
test
fmul
xor
popf
mov
sbb
mov
pusha
xchg
inc
adc
cltd
or
rorl
sub
xchg
icebp
in
inc
adc
movsb
test
cmp
mov
gs
es
adc
dec
imul
add
and
adc
jb
pop
int
hlt
daa
lea
scas
jmp
xchg
pop
sbbb
dec
cli
insb
test
push
push
lahf
xor
jb,pt
mov
pop
jp
mov
jns
rcr
hlt
jo
jg
adc
cwtl
ja
push
lock
sub
xor
cmc
es
or
mov
and
enter
pop
shlb
xor
push
push
fistl
mov
mov
adcb
dec
cmp
cmp
adc
dec
pop
sbb
out
pop
and
mov
mov
mov
clc
xor
stos
adc
lret
push
adc
lods
roll
andl
repz
repz
add
fdivl
test
mov
jae
or
pushf
jp
mov
adc
cmpsl
movsb
sbb
and
sub
gs
adc
sub
in
push
jne
testb
push
mov
mov
dec
ss
in
addr16
and
mov
mov
push
test
lret
fcomi
loope
cmp
out
in
test
jmp
jmp
scas
shll
jae
stos
sbb
js
mov
cmp
push
fs
cmp
and
inc
jo
mov
inc
inc
pop
orl
add
arpl
scas
adc
faddl
mov
jnp
pushf
push
mov
test
sarl
test
imul
xorl
out
cmp
dec
mov
add
loope
mov
pop
test
movb
stc
pop
inc
sarb
cmp
sub
xchg
fimull
push
jno
ds
jne
in
les
sub
das
faddp
cmp
cmpsb
movsb
cmp
push
shl
xchg
pop
mov
cs
lock
insl
push
push
push
xchg
clc
gs
add
andl
push
ficomps
dec
fiadds
adc
mov
gs
adcb
mov
xchg
add
ljmp
into
cmp
dec
jo
ret
sbb
inc
addb
jno
idivb
lret
andb
data16
aam
pop
xor
ss
cmp
mov
pusha
lcall
and
ret
loop
out
das
sub
dec
pushf
fstpt
cmpsb
popf
lds
imul
icebp
fs
cmp
sti
jb
xchg
repnz
mov
and
inc
sub
xchg
mov
pop
dec
pop
xor
hlt
ljmp
mov
cmpsb
in
sti
pop
outsl
bound
leave
int
lock
gs
lods
add
das
pushf
or
sbb
xor
sub
mov
dec
imul
lret
in
leave
add
cmp
dec
dec
push
and
pushf
adc
stos
rclb
ret
sbb
stos
xchg
and
sub
sub
mov
jns
jmp
negl
push
movsb
cmpsl
mov
fisttpl
lret
push
test
and
orb
push
mov
js
jo
les
adc
aad
ret
aad
mov
pop
sub
rorb
arpl
stc
xchg
dec
push
jmp
jle
orl
inc
pop
sbb
and
jo
xchg
jbe
and
lock
adc
add
xor
sahf
mov
dec
push
mov
push
jmp
jle
pop
push
pushf
addr16
int3
dec
push
in
icebp
es
jp
scas
mov
pushf
inc
dec
daa
out
sub
mov
push
pop
mov
xchg
pop
ja
push
and
int
in
sub
std
mov
sub
push
xchg
xchg
xchg
pop
sub
jns
and
mov
out
dec
adc
dec
push
aam
in
lds
jne
dec
in
jb
call
sbb
movsb
jb
mov
xor
aaa
cli
cwtl
jecxz
mov
cmp
xchg
sbb
insb
hlt
lds
loope
and
movl
mov
xchg
or
pushf
sarb
jecxz
pusha
inc
lock
gs
dec
mov
ja
mov
cmp
mov
icebp
mov
repnz
adc
dec
lahf
xor
mov
push
dec
mov
cmp
fbstp
mov
std
lea
mov
dec
pop
pcmpeqd
and
out
mov
je
popa
or
les
daa
adcb
push
out
sbb
jno
ljmp
lock
ds
mov
inc
inc
or
and
pop
jae
lcall
mov
daa
push
icebp
inc
sub
sbb
movsb
jno
je
dec
sti
pop
cmpl
fldl
in
jmp
movsl
out
out
mov
mov
pop
stc
mov
aad
fs
push
pop
or
dec
insb
repz
dec
popl
sub
push
or
sbb
sub
inc
mov
gs
pushf
xchg
cmp
cmpl
fmull
icebp
cmp
imul
fwait
pop
testl
xor
xor
aad
mov
adc
fstl
push
dec
cmp
sbb
pop
push
inc
fstpl
dec
pop
rol
enter
mov
adc
jne
mov
xor
mov
mov
jns
gs
xor
fs
push
xchg
fbstp
sub
pop
test
ds
push
std
in
push
fstpt
je
test
mov
and
mov
adc
bound
mov
jg
out
shrb
sbb
cmp
arpl
xor
mov
and
leave
inc
push
or
jg
push
dec
mov
dec
pop
and
or
scas
mov
pop
test
test
mov
je
push
js
shrl
iret
loop
xlat
xchg
in
dec
xchg
lods
cmp
sti
mov
fstps
cmc
fisubs
or
pop
inc
or
adc
push
aas
cmpsl
and
int3
pushw
shlb
mov
imul
mov
push
imul
pop
cmp
out
push
sub
push
daa
aam
lods
add
dec
mov
inc
mov
pop
es
lock
dec
xor
dec
and
popf
add
arpl
sti
ja
pop
jb
push
or
movsb
mov
cld
push
lret
lcall
je
bound
sbb
fcoms
movsl
cld
insb
jbe
js
repnz
jg
test
jae
pop
mov
ss
mov
cmc
dec
in
rorb
test
xchg
xor
pop
faddl
clc
notl
mov
inc
lret
cwtl
lea
dec
popa
mov
leave
in
inc
adc
sub
sub
std
ja
and
fistl
jns
gs
inc
sahf
loop
pop
push
lahf
mov
loope
push
fisttpl
add
movsl
mov
cmp
test
int3
mov
and
mov
mov
xchg
mov
sbb
iret
movsl
push
push
and
mov
mov
lret
push
jno
or
test
dec
loopne
xchg
mov
sbb
mov
or
mov
dec
leave
pusha
je
clc
and
add
mov
inc
orb
add
movsb
xor
lea
movsl
in
push
inc
mov
cmp
arpl
or
or
je
push
jmp
mov
mov
push
pop
ss
out
fnstenv
int
aas
data16
lahf
push
orb
mov
add
sub
in
dec
fwait
std
add
inc
leave
mov
inc
shll
cmpsb
pop
adc
push
int
sbb
rcr
jl
jle
icebp
or
pop
or
add
xchg
pop
pop
sbb
cltd
out
fstpl
or
js
hlt
lods
pop
imul
gs
add
add
sbb
and
movsl
sbb
mov
add
dec
inc
test
push
and
mov
addb
stos
push
mov
cmp
or
arpl
inc
mov
lds
sub
lock
js
rcrl
test
jge
mov
mov
std
pop
push
and
and
rcl
push
jnp
in
jecxz
xor
flds
mov
pop
jle
sub
inc
addr16
cmc
xor
adc
xor
cmc
jns
lods
popl
fldl
les
push
fs
ret
pop
cmpsb
jbe
pop
xchg
jbe
cs
adc
shlb
cltd
xor
mov
adc
jne
pop
xchg
inc
insl
and
inc
xchg
add
xor
fildl
dec
pop
sub
pop
cld
out
in
mov
mov
shlb
cmp
fucomi
push
lds
je
jbe
xchg
pop
subl
dec
pusha
xor
in
sbb
inc
sub
pop
mov
xlat
js
ljmp
mov
jbe
call
pusha
arpl
and
inc
int
aad
pop
jnp
into
test
push
push
xor
xor
addb
sub
and
cwtl
push
das
sub
jmp
bound
dec
add
push
cmp
adc
cmc
inc
out
inc
jnp
push
add
mov
jb
dec
add
scas
orb
pop
mov
leave
pop
push
mov
sbb
out
mov
xchg
enter
cli
sub
mov
sub
test
push
or
add
lahf
test
addr16
pop
mov
cwtl
cmpsb
mov
mov
outsl
out
push
ja
pop
mov
insb
xor
pop
mov
jg
push
pop
jmp
mov
or
in
fistpll
push
insl
inc
daa
sar
mov
repz
imul
sub
jl
inc
and
fstpl
rorl
inc
add
xor
xchg
ja
dec
movsl
cltd
adc
pop
fistps
mov
lds
test
dec
cmpsb
mov
add
repz
int
xor
push
jp
gs
stos
push
sahf
pusha
sti
jbe
call
decl
mov
xchg
jno
mov
insb
mov
jbe
cmpsb
in
mov
fcmovnbe
int3
pop
push
mov
fsts
icebp
ror
mov
mov
std
lret
sub
xor
cmc
dec
pop
push
mov
adc
sub
scas
sub
shl
in
sbb
inc
xor
cld
mov
dec
jecxz
aad
sub
popf
pushf
out
outsb
nop
les
in
std
and
addb
scas
pop
mov
sub
or
ret
sub
and
ss
push
push
or
mov
jb
out
dec
mov
cmc
sbb
and
inc
daa
push
aaa
pusha
shrl
mov
popa
cmp
or
push
pop
stc
xor
push
and
loope
jb
ljmp
add
add
push
adc
jae
cmp
sbb
or
ss
pop
or
pop
imul
enter
outsl
sbbl
inc
add
cmp
in
sub
pop
lods
mov
xlat
xchg
and
xchg
xchg
das
dec
scas
loope
mov
addr16
aad
add
jl
filds
enter
imul
mov
sub
bound
js
outsl
test
mov
je
xor
and
dec
repnz
sarl
ds
mov
sbb
jns
inc
xor
jle
repz
out
jg
mov
mov
adc
pextrw
jae
shrl
or
push
jne
sub
inc
jge
stos
loope
shll
mov
fcoml
jle
push
push
je
pop
or
cmp
sub
lods
sahf
stos
lods
fidivl
movsb
stc
or
out
mov
fs
mov
dec
xor
repnz
push
lods
mov
ljmp
pop
loope
imul
cmp
cmovne
int3
push
or
cld
mov
pop
and
adc
push
in
leave
ss
mov
or
or
sub
aad
pop
fdivrs
jecxz
xor
xchg
mov
cwtl
dec
out
push
add
popa
jns
xor
dec
dec
or
scas
loopne
inc
out
ficomps
in
or
fildll
add
ret
push
pop
aad
es
aam
fs
paddsb
mov
mov
jbe
add
adc
fbld
xor
icebp
mov
push
fiaddl
inc
inc
pop
loopne
inc
movsl
xor
lahf
lods
mov
push
mov
fcmovnbe
notl
enter
nop
insw
mov
push
pop
insb
cmp
decb
push
inc
mov
gs
loope
jl
shrl
fwait
cli
imul
leave
push
dec
jno
negb
cmp
scas
fsubr
shrb
int
and
andl
sar
jge
push
sbb
xchg
jmp
xchg
cmp
pop
data16
iret
pop
sbb
jo
jecxz
rclb
xchg
movsl
jnp
push
in
or
add
and
scas
scas
mov
stc
sbb
outsl
gs
icebp
jl
jle
ret
test
out
inc
insb
add
int
lret
in
xlat
xor
jg
mov
jb
out
dec
scas
scas
xor
or
insb
xor
aam
rcll
and
fmulp
movsl
mov
and
movsl
fiaddl
cli
jecxz
xchg
cli
add
cmp
icebp
int3
pusha
pop
cmp
add
dec
mov
mov
out
adc
es
sahf
or
stc
fbstp
sbb
push
lahf
test
aas
ficoml
dec
and
adc
cs
mov
test
xchg
mov
mov
sbb
cmp
mov
outsb
jno
les
dec
push
adc
sbb
mov
pop
and
lock
hlt
arpl
aad
and
repz
mov
adc
les
push
out
and
xchg
cmp
jge
inc
test
rorb
data16
lcall
mov
push
loop
addl
sbb
xchg
out
aaa
cmp
out
dec
fisubrl
std
nop
in
rclb
mov
mov
push
daa
cltd
jnp
and
dec
jecxz
popa
cmp
adc
inc
and
test
aad
cmc
ja
cmc
sahf
js
into
pop
cmp
xchg
mov
pop
dec
cmp
jg
add
inc
iret
insb
mov
gs
aam
lock
cmp
int
push
addr16
xchg
mov
ss
jl
jno
shrb
and
test
and
daa
cli
push
and
lret
sahf
popf
xor
xchg
negl
add
test
subb
xor
pop
inc
push
clc
jno
ret
mov
clc
enter
jne
cmp
xchg
repnz
out
pusha
sbb
pop
popf
jmp
iret
nop
cli
pop
mov
and
lods
enter
mov
add
leave
pop
lds
mov
sbb
mov
arpl
fwait
insl
mov
and
icebp
pushf
pop
in
or
push
test
mov
loop
imul
das
add
mov
clc
push
and
rcll
cmp
fsubrp
mov
mov
inc
inc
lock
pop
lds
lahf
clc
sub
int
mov
sysexit
fs
lods
in
mov
aad
sub
xor
test
mov
cmpsl
outsl
ljmp
xor
xor
dec
mov
repz
lock
es
out
dec
xor
sub
inc
jno
jb
sub
gs
push
inc
or
insb
in
cmp
out
or
push
adc
adc
scas
pop
out
mov
pushf
or
or
rcll
or
add
inc
orb
repz
idivb
jnp
mov
push
dec
sahf
int
mov
jmp
push
test
add
and
pusha
icebp
mov
xor
dec
testl
sub
hlt
xor
xchg
out
lahf
out
out
stos
pop
test
cmc
fwait
pop
jae
dec
sbb
mov
adc
fwait
call
rcl
sbb
stos
adc
movsl
xor
mov
pop
test
stos
sub
adc
jecxz
fmul
push
fnstsw
rol
mov
addb
sub
push
push
push
xchg
adcl
fdivrl
jne
xchg
or
or
xor
mov
push
jo
jmp
hlt
add
in
repz
int3
ret
sbb
jg
add
pushf
mov
inc
dec
aaa
push
xor
mov
mov
jge
repz
jnp
aam
icebp
stos
xchg
xlat
jg
xchg
and
repnz
push
clc
add
xor
mov
mov
outsb
neg
cmp
mov
jbe
mov
dec
and
adc
mov
hlt
rclb
add
and
jns
fldenv
jp
push
or
fldl
mov
mov
negb
and
mov
adc
pop
adc
cmp
stos
cmp
cmpsl
mov
xchg
push
clc
mov
test
lock
out
js
aam
mul
add
jge
lcallw
rcrb
es
push
add
fldt
sbb
jmp
lret
stos
jno
lret
cmp
mov
cltd
gs
push
sbb
xchg
call
jecxz
push
mov
adcb
jl
jb
iret
cmp
xor
add
mov
xchg
mov
test
lahf
xchg
xchg
cld
push
adc
shrl
adc
fisttps
add
dec
xlat
call
pusha
jecxz
pushl
mov
loope
aas
stc
lods
mov
hlt
in
sub
cmc
pop
subl
ss
addl
repnz
in
stos
xor
sub
push
in
jno
dec
cmp
inc
in
lea
cmp
push
fwait
pusha
fcoml
imul
xlat
out
dec
jnp
stos
repz
shrb
dec
popf
std
in
inc
sbb
stc
pushf
cmp
stc
mov
fdivrl
js
inc
in
out
sbb
sbb
frstor
jg
sub
popfw
jne
xchg
fistps
loope
adc
aaa
fadds
sub
hlt
sti
mov
fwait
imulb
out
push
xchg
adc
inc
repnz
mov
xor
clc
in
or
cmp
mov
testl
fistpll
aas
cwtl
hlt
push
mov
cmpsl
bound
loope
mov
inc
dec
mulb
inc
rorl
in
ficompl
xchg
outsb
cmpsl
scas
push
int
jmp
rclb
jge
sbb
xor
stos
xor
insl
mov
fildl
pop
ret
vaddpd
push
sbb
dec
movsb
jae
out
pop
aas
dec
test
stos
fwait
sbb
jne
dec
inc
cmp
mov
incl
mov
fisttpll
enter
cmpsb
insl
push
jo
fstps
sbb
mov
lea
push
xchg
mov
iret
aad
sbb
hlt
iret
push
add
lret
sbb
scas
icebp
outsl
cmpsb
and
dec
dec
or
xor
mov
cmp
dec
lods
adc
mov
stos
stc
cmp
inc
sarl
xchg
aad
dec
imul
shrb
xchg
dec
movb
mov
push
cmpsb
in
mov
stos
sbb
push
jle
test
lods
cmp
lods
dec
jnp
and
jnp
push
js
jmp
mov
push
xlat
enter
inc
push
xlat
push
dec
jae
mov
std
mov
sbb
push
or
mov
stc
xchg
movsb
dec
and
dec
mov
push
fwait
mov
mov
rcr
adc
stos
jl
jae
out
and
xchg
and
sub
pop
scas
std
or
loopne
leave
sbb
lods
mov
test
out
js
jecxz
jecxz
imul
jae
leave
nop
xorl
push
fcomi
xchg
sbb
add
int3
cmp
bound
inc
imul
dec
xor
mov
or
and
dec
mov
add
je
xchg
pop
xchg
mov
fadds
mov
movsb
in
mov
jle
vmovddup
sub
rcl
sub
les
mov
jge
xor
mov
jmp
jno
iret
push
push
pop
or
jecxz
movsl
rclb
inc
jmp
xchg
mov
sub
pop
in
push
iret
imul
jge
mov
std
mov
ret
adc
cmpsb
cmp
aad
shll
jge
rcrl
mov
sbb
js
pop
loop
mov
mov
lcall
getsec
movsl
jp
mov
pop
pusha
mov
xor
cmovns
icebp
sbb
xor
shrb
int
loope
test
mov
int3
in
dec
lcall
mov
or
xchg
rep
clc
mov
mov
pop
mov
mov
sub
adc
lret
inc
dec
out
mov
add
addb
enter
mov
mov
lods
scas
jne
adcl
xchg
jb
inc
je
mov
mov
scas
pop
rorl
mov
dec
jns
dec
test
xchg
rcll
mov
sahf
mov
mov
imul
cmp
cli
enter
mov
xor
or
pop
sbb
mov
mov
xor
xor
dec
pushf
jae
jae
sbb
and
xlat
out
pop
data16
in
xor
mov
in
jl
adc
test
xchg
out
adc
xlat
cmp
sub
cmc
adc
js
adc
sbbb
xchg
xor
xor
jbe
mov
jbe
in
stc
mov
mov
out
cmp
cli
ret
mull
sub
dec
add
out
addr16
mov
or
call
xchg
lea
stc
mov
fmulp
or
rcrb
fldcw
insl
cmp
mov
mov
loopne
xchg
loopne
shlb
jae
icebp
pop
loopne
rcrl
pop
push
test
or
rolb
jb
test
lea
in
add
shlb
jo
test
inc
ljmp
ret
mull
cli
mov
mov
pop
mov
jo
lahf
dec
push
jo
adc
sti
or
cli
mulb
movsb
test
or
sub
push
mov
xor
add
xor
adc
sub
icebp
mov
rcrb
jo
xor
sbb
xor
sbb
mov
or
xor
aam
add
mov
hlt
sub
in
movsb
addb
mov
cmp
and
dec
push
loope
push
hlt
lea
test
xchg
inc
in
inc
add
mov
push
sti
cmpsl
out
sbb
xchg
mov
cmp
rclb
inc
ret
cmp
cltd
lret
jns
pop
sub
or
mov
filds
clc
xor
cs
int
popa
or
mov
fistl
imul
lret
push
es
xor
adcl
cwtl
push
pusha
enter
dec
push
enter
popa
lcall
and
in
add
push
mov
xor
dec
hlt
out
mov
out
push
mov
dec
or
ret
mov
test
jbe
dec
jae
mov
data16
mov
fists
popa
jmp
push
ss
cmpsb
adc
adc
push
aas
xchg
fnstenv
jae
inc
push
inc
xor
cltd
mov
test
ret
sub
fucomp
testl
sarl
mov
and
into
mov
dec
les
jae
pop
sbb
repz
mov
mov
lods
and
xor
mov
cmp
daa
and
xchg
mov
test
ficoms
scas
mov
out
dec
add
loope
pop
jle
push
mov
bound
jecxz
and
pop
push
addr16
out
and
push
fimuls
test
ret
jbe
insl
lods
fs
int
push
lcall
xchg
pop
lcall
pop
lcall
sub
jns
xor
bound
lds
aas
stc
mov
or
pop
mov
adc
dec
jno
out
sub
js
jmp
jb
and
cltd
shr
pop
inc
xor
mov
orl
cld
or
into
jns
inc
inc
ja
test
nop
test
mov
shlb
cmp
xchg
sub
cmpsl
shrl
jle
lods
mov
arpl
ss
pop
sub
orl
and
pop
xchg
ljmp
push
test
data16
push
ja
mov
add
mov
dec
push
pushf
mov
shlw
sub
xor
xchg
shll
jl
faddl
insl
outsl
lret
ret
push
arpl
mov
inc
mov
out
mov
or
and
or
in
sahf
pop
mov
out
data16
in
loopne,pt
adc
movnti
push
jo
lret
mov
js
pushf
dec
xchg
sub
jne
orl
jne
xchg
rcl
daa
jnp
aam
fcoml
addr16
outsb
adc
mov
pop
imul
mov
insl
std
insl
adc
push
xlat
ror
rolb
xchg
cmpsl
xchg
mov
aaa
mov
popa
lds
mov
sub
movsb
ret
fld
sbb
lret
in
inc
popa
test
xor
sub
movsb
leave
jg
das
pop
lret
xor
sbb
xor
stos
mov
fdivrl
cs
sbb
clc
subb
aam
stos
xor
test
and
xchg
sub
sbb
decl
or
andl
or
adc
fimull
xchg
fildll
push
add
cmp
or
cmp
scas
dec
shlb
lea
mov
jne
shrl
cmp
jo
mov
shlb
cmp
gs
stc
gs
scas
cmp
push
jnp
mov
mov
aaa
xchg
push
mov
xlat
inc
dec
jno,pt
cmp
sbb
cmp
mov
push
mov
stos
in
xor
jg
mov
push
add
mov
add
insl
add
outsb
pushf
sarb
sub
mov
stc
adc
mov
loopne
shlb
cltd
stos
das
icebp
add
iret
or
sub
pop
or
mov
shlb
insl
stos
inc
packuswb
data16
push
test
inc
mov
fists
inc
pop
stos
sub
xchg
pop
inc
jmp
mov
dec
sti
aaa
aaa
dec
cld
icebp
repz
inc
push
xchg
cmc
std
call
sahf
cmc
mov
rorl
rcrl
xchg
les
cmp
bound
sub
cmp
pop
mov
dec
fstpt
cmc
jge
mov
xchg
arpl
mov
jmp
sbb
cmpsb
inc
adc
mov
gs
aad
addr16
sbb
jge
mov
ljmp
shll
icebp
gs
testb
cmp
bound
nop
dec
push
or
xchg
fsub
jb
inc
pop
dec
jg
scas
scas
dec
aad
mov
nop
ljmp
inc
add
loop
pushf
adcb
lret
pop
into
jae
jno
sti
out
outsb
jecxz
decl
lock
push
ds
out
fcoms
enter
jecxz
pop
cmpsl
xor
pop
jmp
shll
xor
lcall
and
rol
dec
out
cltd
aaa
bound
dec
sbb
mov
ret
inc
pushf
xchg
or
inc
cld
cltd
sarb
xchg
push
mov
adc
repz
or
inc
mov
cmp
mov
and
ss
movsb
stos
lcall
sub
cmpl
js
push
call
lret
ret
adc
xlat
test
lea
and
push
and
add
sbb
inc
sbb
jno
lds
lods
sbb
aas
fimuls
stos
pop
lret
fnsave
pop
insb
sarl
xor
lret
sbb
insb
loope
xchg
add
lock
int
jle
mov
arpl
bound
jae
inc
jb
add
push
and
lods
xchg
pusha
push
cmp
int3
cmc
pop
jmp
test
adc
inc
sbbl
int3
push
pop
std
cwtl
push
aam
adc
arpl
nop
lock
mov
bound
sahf
out
pop
mov
jg
dec
sahf
lcall
fldl
mov
decl
scas
cvttps2pi
jnp
shr
pop
lahf
pop
lea
jmp
gs
pop
jl
push
mov
test
pop
inc
pop
shll
inc
lods
stos
sbb
and
add
pushl
sbb
jge
data16
clc
xchg
pushf
stc
push
adc
in
push
cmp
fdivp
push
cli
mov
sbb
nop
jne
lock
inc
icebp
xchg
fmuls
repnz
lahf
mov
inc
push
push
rol
testl
inc
pop
jmp
je
xor
dec
je
add
sbb
mov
inc
sub
mov
jg
loope
sub
loopne
add
push
dec
dec
sbb
call
xor
stos
fnstcw
ret
loop
sub
aaa
insb
maxps
pushf
dec
lahf
cmp
mov
sbb
mov
add
stos
jns
inc
into
mov
loopne
mov
pop
pop
sbb
clc
mov
sub
out
in
jnp
fistpll
imul
scas
je
lahf
sbb
jge
mov
sbb
fildl
adc
sbb
inc
addl
iret
push
shrl
xchg
lret
scas
mov
mov
pop
repnz
or
xchg
mov
xlat
xor
sarb
sbb
and
add
xchg
mov
add
stos
add
mov
cmp
or
aaa
mov
test
shrl
pop
add
dec
xor
push
pop
arpl
push
adc
mov
xchg
cmpsl
add
adc
add
pop
cmp
mov
daa
repz
rcr
adc
jmp
arpl
inc
push
cmp
rolb
aam
jae
or
pop
lret
lods
adc
pop
into
fdivrs
outsl
lods
aam
icebp
sbb
dec
mov
pop
aaa
ficoml
add
inc
int
add
cmpsl
xchg
fwait
add
scas
jne
addl
push
dec
pop
pop
std
add
mov
rcr
in
pop
ljmp
xor
sub
test
mov
hlt
icebp
pushf
lret
adc
popf
filds
cwtl
lods
and
inc
stos
leave
and
inc
cld
leave
mov
fdivr
pushw
stc
scas
fld1
mov
out
jg
fists
or
adc
lret
loop
das
jns
dec
jp
or
mov
mov
test
daa
std
mov
mov
mov
fildll
int3
jge
test
mov
lahf
push
jns
test
jmp
cwtl
mov
push
inc
popf
adc
test
xor
hlt
jecxz
in
popa
mov
cmc
sbb
out
mov
push
sbb
nop
sub
leave
mov
push
jne
mov
push
ljmp
lret
push
jb
repz
leave
out
xchg
iret
outsb
inc
mov
add
ljmp
jp
sbb
aas
pop
mov
lds
mov
add
and
jbe
test
andb
test
test
cmp
loope
pop
pop
ds
lea
push
out
sbb
sahf
lcall
cmp
movsb
sbb
cld
insb
rol
xchg
mov
das
adc
sarb
mov
or
inc
sarl
in
xchg
or
int3
dec
bound
or
sbb
jnp
dec
mov
fwait
shlb
loopne
andl
mov
jp
add
xchg
mov
cmp
fstp
lds
cmp
lcall
lcall
imul
xchg
inc
dec
subl
adc
arpl
movsb
or
loop
mov
lods
add
rcrl
xchg
mov
mov
pop
dec
hlt
pop
js
ret
pop
cmp
scas
adc
jle
movl
push
xchg
outsl
jp
cmp
pop
aam
cwtl
pop
cmp
add
cld
stos
fidivl
xchg
js
fstps
inc
or
pop
ss
xchg
push
repz
sub
and
xor
out
xor
fldcw
nop
stos
xchg
data16
mov
or
inc
xchg
test
push
pop
jp
push
fsubl
cmp
into
dec
push
cmp
sub
lods
xchg
stc
daa
mov
jmp
icebp
mov
test
pop
outsl
pop
mov
pop
mov
mov
rclb
movsb
mov
or
pop
add
sub
call
addr16
out
test
stos
sahf
sub
sub
call
in
fiadds
lods
lods
add
stos
push
push
imul
lods
and
pusha
out
into
pusha
out
push
adc
or
cmpb
jle
add
lcall
bound
xchg
btr
fwait
or
subl
cli
into
js
rorb
imul
fdivrp
add
jl
inc
dec
jl
jg
fisttpl
orb
loop
movsb
cmc
and
adc
mov
out
stos
push
enter
cmc
sub
jmp
add
ret
mov
xchg
aas
sub
test
cmp
fcmovnb
mov
adc
pop
jge
aaa
mov
cmpsl
jae
stos
inc
rclb
push
pop
add
lods
xor
mov
cmpsb
roll
lods
mov
push
lods
push
sub
in
push
lock
dec
jmp
repz
mov
sub
bound
add
sub
lods
xor
mov
jg
jae
mov
lret
mov
scas
nop
or
push
jae
push
imul
jmp
andb
aaa
sbb
cmp
rcpps
out
sub
inc
les
pop
xlat
arpl
popa
push
leave
shll
in
lahf
mov
xor
pop
sbb
pop
idiv
xor
cmc
mov
inc
movsb
cmp
mov
pusha
leave
ret
dec
sti
aaa
test
ja
sbb
loope
aas
pop
mov
mov
ss
jne
sbb
push
nopl
std
ficompl
stos
fistpl
outsb
push
jns
jl
lds
cmc
scas
stos
pop
push
add
loop
xor
jb
mov
ljmp
test
das
and
xchg
cmp
mov
dec
add
xchg
jo
pop
jae
mov
cli
xor
cmp
lods
test
jne
or
outsb
jecxz
push
inc
stc
out
xor
pop
daa
decl
xor
das
icebp
lret
call
add
lcall
mov
jnp
loopne
xchg
mov
jmp
nop
arpl
inc
mov
and
mov
call
sbb
int3
loop
push
lds
dec
cmp
std
push
add
xchg
jno
fcoml
add
mov
and
in
scas
adc
mov
fcmovnbe
adc
mov
rcrb
cli
jg
xchg
aad
jb
shrb
xor
je
in
out
add
or
outsl
call
pushf
mov
jmp
push
insl
and
mov
shlb
add
pop
rolb
ffreep
popf
xor
cwtl
add
lods
pop
mov
cmpsb
sar
jecxz
out
dec
fstps
jns
nop
jge
in
fsub
inc
mov
in
and
les
mov
test
test
mov
jne
push
popf
adc
aas
mov
scas
enter
cmpl
dec
fistpl
jecxz
out
lret
cmp
push
mov
xorl
ret
jmp
sbb
push
stos
mov
push
pop
lods
sub
push
hlt
stos
push
into
daa
setle
aad
push
pusha
lcall
push
test
ret
movsb
add
in
shll
pmuludq
imul
cmc
das
scas
ret
and
or
sbb
aam
mov
imul
mov
into
sub
stc
push
fsubl
pop
jbe
xchg
mov
dec
test
mov
aas
test
adc
mov
add
es
sub
lods
loop
mov
add
movsb
neg
mov
or
lock
mov
movsb
insb
int
repz
pop
icebp
add
push
pop
outsl
sbbb
sbbb
test
jb
add
dec
push
push
pushf
push
xchg
cmp
pop
lahf
cmp
add
insl
add
xor
xor
mov
pushf
icebp
leave
cmp
push
dec
dec
xor
in
inc
adc
dec
sahf
imul
out
mov
clc
mov
bound
mov
inc
push
cmp
lds
dec
push
insb
push
jno
mov
inc
test
hlt
xchg
imul
pop
gs
cmc
add
or
mov
dec
push
ds
jne
add
insb
push
mov
or
loope
in
inc
inc
jle
jns
mov
inc
adc
fimull
stc
mov
stos
pop
pop
in
push
inc
xchg
sub
mov
loopne
dec
aaa
mov
repnz
xchg
add
push
cmpsl
outsb
das
insl
out
sbb
fsubl
ficomps
mov
or
ficompl
add
stc
sbb
xor
outsb
stos
inc
xchg
adc
ljmp
push
lods
and
cmp
jle
mov
mov
fbstp
js
daa
sbb
sub
in
gs
mov
mov
ja
xlat
mov
movsl
cli
psubd
add
fistpll
fidivl
jb
fiaddl
push
xlat
and
xchg
jge
add
xchg
jbe
push
push
mov
nop
mov
std
jae
mov
jne
inc
movsb
je
pop
sti
popl
mov
mov
mov
sub
or
push
mov
ds
loop
and
shrb
lock
popf
stc
sbb
shrb
add
dec
xor
int
push
ljmp
bound
aas
xlat
inc
in
movsl
xchg
sub
dec
mov
call
fsubrs
push
push
cmpb
pop
dec
cld
xchg
xor
nop
push
push
sbb
mov
je
ja
jb
imul
aam
and
push
fisttps
lar
fcmovne
cmp
aam
push
pop
fsubrp
nop
push
mov
aas
adc
pushf
mov
pop
ja
call
cmp
orl
xchg
loop
push
push
adc
ret
push
xchg
loop
scas
jne
test
pop
pop
mov
xchg
ret
push
das
es
cmc
gs
jle
push
xor
sbb
ret
scas
das
loope
inc
and
dec
ret
mov
sub
jp
shlb
into
in
pop
mov
inc
push
mov
mov
leave
pop
inc
pop
into
lret
xor
and
mov
hlt
ljmp
insl
lahf
dec
aad
insb
pop
iret
mov
and
test
jecxz
fisubl
stos
mov
jp
insl
iret
in
mov
pop
sti
dec
cmp
adc
sub
loop
sbb
add
aaa
loopne
xchg
cli
or
xchg
mov
repnz
lods
es
jae
jge
iret
mov
stc
scas
fnstenv
int
data16
cwtl
data16
push
xchg
mov
or
iret
push
add
ljmp
jp
jo
insl
push
loope
arpl
push
std
lret
cltd
test
mov
adc
call
jb
dec
and
ficomps
add
arpl
fwait
mov
inc
mov
jmp
and
aam
les
and
mov
lcall
mov
leave
dec
in
fldl
jmp
jne
cmp
int
outsl
in
call
inc
sub
jb
pop
call
lds
repnz
repnz
repz
iret
jmp
xchg
jno
xchg
pop
movsl
mov
xor
cmp
and
insb
dec
leave
pop
fidivl
lock
adc
jae
imul
dec
mov
xor
or
xchg
cmp
ss
arpl
rcll
xchg
lds
xlat
sahf
in
insl
xchg
jb
test
jae
mov
mov
add
push
outsl
adc
xchg
adc
sbb
addr16
and
inc
repnz
scas
pop
ss
sbb
or
and
jae
and
frstor
jns
mov
adc
mov
cs
dec
ds
lds
rcrb
jle
pop
push
jo
lods
pop
inc
jno
pusha
mov
pop
outsb
fcoms
xchg
adc
mov
pop
add
xlat
pop
pop
sbb
cwtd
orb
xor
jmp
pop
mul
mov
popa
sbb
gs
fcoms
push
pop
jmp
jl
sti
leave
jmp
test
std
ss
mov
mov
sub
ffree
incb
jge
xchg
add
xchg
cwtl
cmpl
mov
mov
lret
or
fdivr
jg
xchg
pop
jle
adc
popa
clc
stos
jge
fisttpll
inc
pop
jae
mov
orl
out
fisttpll
add
xchg
cmp
cmpsb
mov
push
rorb
int
incl
es
icebp
push
add
test
ret
xchg
jge
fisubrl
adcl
pop
hlt
iret
test
sub
xchg
scas
fcmovbe
repz
fidivrl
xchg
cmc
inc
push
clc
mov
mov
dec
hlt
cmp
mov
std
sbb
ret
jne
jl
cmp
xor
ja
push
jb
add
std
or
ja
dec
adc
ljmp
aam
dec
ret
xchg
pop
jno
fsub
xchg
and
popa
out
popa
jnp
dec
push
ret
loopne
test
add
out
out
cld
testb
imul
and
out
mov
and
inc
dec
jp
xchg
mov
mov
adc
je
push
mov
subb
push
inc
gs
ficoml
mov
cmp
sbb
mov
shll
stc
xor
in
xchg
popa
jecxz
mov
mov
shll
loopne
sub
ja
lret
je
sbb
fcmovnu
movl
jb
js
inc
jl
mov
int
das
or
ljmp
mov
ja
pop
jae
out
fsubl
pop
popf
out
or
sbb
mov
cwtl
inc
cwtl
pop
cli
jae
dec
pop
xor
xchg
xor
mov
lds
add
push
loopne
mov
stos
sbb
sahf
jno
mov
jmp
inc
mov
xlat
mov
adc
adc
or
mov
and
or
adc
fwait
mov
pop
lods
arpl
jge
push
fcomps
mov
sub
mov
repnz
data16
or
mov
or
xchg
fwait
mov
mov
sti
xchg
jno
jge
aas
pop
sbb
std
aas
and
mov
into
adc
mov
aaa
xor
sbb
adc
nop
lds
xor
stos
xor
xchg
push
fimull
xor
scas
fdivrl
push
cmc
inc
jne
ja
and
jo
in
jns
push
pop
mov
add
mov
call
imul
push
or
adc
mov
nop
dec
inc
out
maskmovq
idivl
ja
fsubr
pop
ljmp
data16
mov
vpackssdw
pop
xor
mov
les
xchg
aad
push
xchg
cmp
out
push
mov
fucomp
mov
daa
ss
mov
sbb
insl
sub
sti
adcl
movsl
scas
pop
lods
leave
mov
pop
aad
cmc
mov
mov
in
xor
mov
or
into
sbb
adc
fidivrs
cli
shlb
add
mov
and
shll
jmp
push
loopne
cmp
mov
stos
les
sbb
mov
inc
loop
inc
aaa
push
aas
iret
gs
push
hlt
pop
mov
adc
jne
sub
mov
pop
in
fiadds
inc
clc
stos
push
push
xchg
add
push
jmp
cmp
push
pushf
jne
xchg
dec
in
or
push
xlat
xchg
sub
lods
stos
cld
sbb
mov
xchg
xchg
into
popf
out
stos
stos
adc
jne
xor
cmc
in
adc
testb
fisttps
mov
cmpsl
xchg
gs
jmp
push
jb
wrmsr
fdivl
stos
sbb
loopne
or
mov
xchg
sbb
lret
test
shl
push
pop
xlat
pop
sbb
mov
mov
leave
push
pop
jmp
not
ror
sbb
add
pop
loopne
seto
push
cmpsl
push
dec
addb
add
ds
gs
cmp
movb
inc
inc
inc
popf
mov
xchg
adc
xor
sub
sbbb
sbb
orb
push
mov
sbb
cmp
movsl
dec
add
inc
jno
dec
adc
pusha
mov
mov
ss
stos
lret
add
and
jno
jmp
push
push
push
sbb
xchg
call
mov
jecxz
pop
stc
dec
pop
pushf
fnsave
mov
cwtl
adc
cmp
mov
jmp
jno
dec
addr16
movsl
xchg
add
in
imul
jg
xchg
pop
inc
add
gs
or
in
cmp
mov
test
in
xchg
mov
lsl
idivb
scas
add
xchg
cmpsl
scas
lret
push
mov
mov
es
adc
fidivrs
ljmp
xchg
push
xchg
mov
arpl
iret
loopne
in
cmpsb
addr16
or
ret
adcb
pop
mov
and
mov
push
aam
imull
into
pop
lods
add
incl
push
sub
mov
cmp
aas
fists
in
jnp
push
hlt
sbb
cltd
dec
or
ds
daa
int
mov
xor
imul
ret
cmp
mov
out
or
mov
jae
push
cmp
in
xchg
sbb
sbb
mov
int
iret
gs
and
xchg
ja
pop
xor
mov
sbb
fwait
int
mov
add
bnd
shl
and
pop
cmp
or
shrl
xchg
mov
sbb
inc
ss
jo
push
jns
adc
xor
dec
push
dec
inc
lcall
fimull
and
inc
sub
jae
mov
test
push
cmp
icebp
int
pop
mov
dec
loop
popa
mov
enter
mov
test
xor
mov
inc
je
cmpsl
imul
shlb
and
adc
pextrw
mov
sbb
imul
andl
inc
rolb
fs
pop
sar
sub
jo
leave
mov
ret
jne
movsl
and
std
ret
mov
mov
push
jp
pop
xchg
movsl
repnz
mov
loop
out
xor
gs
fildl
sub
mov
sbb
lock
scas
cmp
pop
push
dec
insb
fdivrl
push
nop
movsb
gs
mov
xor
and
arpl
ds
ficomps
movl
xlat
sub
fwait
leave
and
lea
jns
mov
ret
out
push
mov
push
scas
out
fcompl
lcall
inc
jbe
cmp
jl
pusha
stc
push
jae
xor
mov
cli
adc
mov
mov
fbstp
clc
or
out
cmpsb
sti
sbb
gs
and
imul
adc
xor
pusha
sbb
mov
ja
pop
and
jmp
sub
cmpsb
jae
stos
jae
arpl
sub
and
push
adc
pusha
scas
sub
jns
jle
push
lret
out
ljmp
jo
fwait
dec
mov
sub
rcll
or
nop
ret
notl
sub
jmp
xchg
and
pop
mov
shrb
mov
jp
outsb
push
jl
push
popf
mov
jp
jne
dec
pop
es
dec
sub
sub
out
inc
jg
mov
mov
inc
mov
jl
imul
stos
and
cmp
mov
loop
insb
ret
pop
push
dec
jne
scas
fidivl
cmpsb
mov
fiadds
out
sub
les
add
in
add
ja
mov
or
xor
shrl
fbld
dec
or
hlt
sub
inc
shll
cmp
movsl
rolb
pushf
pop
ret
hlt
cmp
shll
mov
in
pop
pop
jno
iret
pop
inc
lret
pop
stc
icebp
outsb
pusha
jecxz
aam
mov
lods
lods
ljmp
xchg
fbstp
inc
hlt
test
or
enter
not
mov
jge
push
outsl
mov
jp
xchg
xor
xchg
in
jbe
nop
xchg
cwtl
jl
pop
mov
xchg
into
inc
mov
pop
mov
test
movsb
movsb
scas
es
je,pt
shlb
les
and
inc
outsl
daa
mov
pushf
add
pop
xorl
imul
mov
pop
out
push
xor
push
and
std
lds
mov
fists
sbb
xlat
pop
dec
fwait
push
push
mov
xchg
mov
inc
cltd
lods
iret
je
les
cmpsl
pop
je
notl
rcll
add
push
jg
js
sub
mov
lods
movsb
je
outsb
and
and
dec
cmp
cmp
pop
fstpl
inc
add
mov
pop
test
adc
movsb
sub
xchg
push
cltd
or
xor
xchg
sub
push
xchg
and
jle
dec
lahf
in
or
mov
push
enter
repnz
cmp
xchg
daa
stos
cmp
popf
test
mov
mov
aaa
fs
leave
lds
pop
loopne
lahf
sbbl
jne
sbb
fidivl
mov
sbb
in
lret
dec
push
roll
aad
xchg
shl
ss
cmp
inc
add
dec
stos
cs
lds
cwtl
jne
pop
frstor
cmc
sbb
cmp
mov
mull
dec
adc
int3
jecxz,pt
scas
sub
sti
xor
hlt
sbb
cmp
imul
sub
dec
inc
mov
aad
sti
pop
loop
shlb
loope
dec
push
mov
adc
js
fidivs
xor
jno
xor
sti
repnz
add
clc
xchg
jle
mov
fsubrs
adc
loopne
push
outsl
jg
xor
lahf
das
pop
fsubl
sbb
xchg
or
mov
test
ss
sbb
sbb
imul
jno
shrl
ffree
pushf
les
dec
adc
push
xlat
mov
negb
sarl
sbb
popf
adc
inc
jecxz
adc
and
adc
addr16
scas
or
cli
jg
pop
int
fisubrs
push
cmc
mov
pop
cmpsb
lods
imul
mov
insl
test
inc
std
and
mov
insb
shl
dec
jns
enter
repz
jnp
add
movsl
outsl
loop
mov
out
sub
call
and
pop
int3
outsb
aas
fdivl
xor
add
mov
xor
outsl
in
das
inc
dec
test
cmp
sub
movsl
movsl
scas
imul
repz
jge
mov
ja
sub
mov
outsb
mov
mov
sahf
mov
adc
pop
and
mov
cmp
dec
pop
cs
ficompl
pop
insl
test
outsb
lret
aas
idiv
xchg
add
inc
lds
pop
testl
gs
loop
dec
gs
pop
xor
subb
into
stc
icebp
xor
mov
xchg
xchg
cs
addr16
pop
mov
sbb
push
test
jno
fcmovu
sub
lret
cmp
jp
xor
push
push
or
das
scas
push
faddl
inc
fiaddl
or
aam
icebp
xor
jnp
mov
cli
inc
xor
aas
xchg
add
cmpsb
mov
dec
movsl
outsb
call
adc
lods
or
outsb
pop
hlt
shlb
xor
mov
ljmp
cmp
pop
push
leave
push
cltd
addb
or
bound
pop
cld
mov
jne
jecxz
stos
jo
dec
fnstenv
and
jmp
sub
pop
aad
aam
adc
xchg
outsl
call
adc
addb
jmp
decb
mov
stos
faddl
aam
mov
dec
mov
sub
sbb
push
dec
xchg
pop
cmc
push
shll
adc
shl
cwtl
push
das
std
jbe
add
cli
mov
lods
sarb
xor
xchg
dec
jae
scas
push
mov
aas
incl
inc
xchg
pusha
push
sub
jo
fwait
cld
sub
leave
aas
or
xchg
jmp
inc
scas
dec
ja
lds
outsl
cltd
pusha
cmp
add
insb
jns
xchg
mov
xchg
mov
xor
sbb
neg
jl
ja
dec
into
bound
pushf
shlb
cmpsb
add
outsb
push
aam
push
cs
outsb
ljmp
inc
push
cmp
lret
mov
int3
inc
xchg
jp
and
mov
jbe
aas
lret
sahf
fsubs
xchg
scas
xchg
mov
jmp
ljmp
add
and
repz
push
lahf
cmp
mov
sbb
loop
into
ror
stos
xor
adc
ja
cltd
sub
push
push
repz
pop
mov
lods
pop
sub
xlat
fstl
and
cli
inc
jo
sub
cmp
ror
push
ss
test
pushf
and
loop
pop
mov
lcall
adc
aaa
lret
popa
add
sbb
mov
jae
mov
lret
inc
repz
mov
xor
adc
xor
xchg
inc
inc
push
mov
lahf
push
test
xchg
ds
hlt
pop
sti
mov
aam
inc
rorb
adc
xchg
stos
fisttpll
xchg
push
mov
cmp
or
in
iretw
mov
fcmovb
sar
xor
mov
call
mov
orb
push
adc
xor
mov
inc
jo
loope
jmp
cmovae
fwait
jp
or
cmp
sbb
mov
sub
xor
test
cmpsl
dec
push
adcl
cltd
and
divb
outsb
sub
jo
js
daa
imul
mov
push
cmpsl
or
mov
mov
cmpb
adc
mov
rcrl
mov
cmpsl
pusha
cmc
cli
mov
leave
loop
cld
imul
cmp
test
gs
mov
ja
push
mov
pop
lds
daa
lea
pop
loop
imul
inc
and
inc
xor
jl
mov
dec
cmp
xor
test
arpl
or
adc
inc
ds
sub
xor
insl
movsb
cltd
jp
int
pop
dec
cmpsl
cmp
push
mov
push
pop
mov
pop
lahf
add
mov
out
pushl
int3
dec
jecxz
or
jge
loope
push
pop
add
or
pop
xchg
daa
push
mov
insl
dec
mov
sub
mov
push
mov
scas
mov
rolb
add
cs
xchg
adc
fxch
int3
sbb
xlat
shlb
adcl
pop
int3
mov
add
test
dec
jbe
ja
pop
add
jo
sahf
sbb
ss
insb
lods
stc
call
lahf
jnp
shlb
push
pop
jno
sarl
mul
int3
push
inc
inc
jae
je
icebp
and
test
pop
mov
ds
shll
adc
jb
std
dec
push
xor
pop
icebp
xor
xlat
int3
ja
je
pop
mov
movsb
jb
aam
pop
fwait
jle
mov
sbb
scas
daa
ja
repnz
out
test
sarl
in
rcll
push
into
adc
shrb
movsl
add
in
ds
jbe
xor
stos
add
cmp
add
js
scas
mov
je
mov
xor
sub
xor
mov
mov
xor
movsb
sarb
mov
sub
inc
les
and
ret
push
push
inc
addb
adc
inc
lock
loop
xor
or
sub
cmc
addl
sub
jmp
divb
push
mov
fisttpl
fisttps
inc
jno
and
out
iret
sbb
mov
mov
loopne
jne
mov
pusha
mov
push
sbb
sbb
out
jg
mov
mov
pop
mov
jbe
lods
xchg
cmp
push
mov
imul
and
lods
dec
lock
cmpsb
dec
xor
dec
sub
xchg
mov
mov
mov
jne
lods
mov
sub
js
push
fmuls
out
std
insb
and
pop
loop
pop
inc
or
sbb
mov
aad
lcall
mov
cmc
cmpsl
gs
pop
ficompl
das
cmc
xor
add
jl
out
stos
lcall
xchg
lret
xor
test
jmp
clc
fdivl
jno
cmp
cltd
sbb
mov
jbe
into
loop
sti
add
ficoml
dec
int
iret
pop
or
jge
dec
inc
loop
adc
mov
lods
pop
push
fmuls
pop
rorb
loopne
cltd
inc
ljmp
adc
add
outsb
iret
jmp
adc
jmp
incb
loop
fstps
lahf
xchg
push
pop
gs
cmp
jl
fisttps
outsb
shrb
push
test
mov
push
cltd
ret
loope
lahf
sub
xlat
adc
ds
rcrl
cmpl
iret
push
dec
mov
jno
dec
fistps
inc
xchg
lret
fsts
sub
loopne
xor
and
jmp
cmpsl
lea
stos
pop
jl
push
jmp
inc
jnp
sub
ficoms
mov
cmpsb
mov
inc
cmp
xchg
mov
cltd
arpl
divb
inc
rep
mov
and
ja
mov
mov
xchg
lret
push
xlat
jo
test
push
std
and
in
int3
out
fld
sbb
xchg
cmc
xchg
lock
js
mov
mov
and
mov
dec
rorb
sub
pop
ds
test
mov
xor
push
xor
frstor
test
sbb
inc
inc
sti
add
dec
repnz
sarb
mov
loope
add
sbb
sbb
jge
std
notb
add
add
arpl
sbb
subb
push
pop
cs
sub
jbe
enter
lret
shrl
xchg
stc
push
test
stc
mov
adc
int
imul
incl
insb
lret
push
pushf
dec
imul
jg
call
bswap
ret
cmpb
dec
add
call
test
jne
rcll
mov
mov
inc
int3
xor
mov
pop
arpl
jns
push
into
inc
cmp
cld
or
or
pop
inc
inc
dec
sub
fs
fmuls
popf
enter
mov
cmp
mov
cmpb
push
in
divl
mov
ds
lcall
jmp
cmp
shl
insb
mov
imul
cmp
out
sti
xor
rclb
xchg
daa
out
push
icebp
cmp
cli
jo
outsl
sbb
add
xchg
sub
jno
lock
popf
xorb
inc
les
loop
fmul
out
out
xchg
loope
inc
jne
subb
sbb
pop
mov
cmpsb
pop
insl
sarl
shl
dec
xor
call
testl
jns
xchg
lret
cmp
lock
xor
mov
pop
sub
xchg
add
adc
or
adc
jb
push
inc
fwait
sti
insl
lds
cmpsl
dec
fsubrl
fwait
mov
and
repnz
arpl
rorb
adc
call
outsl
xor
push
leave
cwtl
mov
pop
iret
gs
dec
jb
cltd
stos
mov
dec
aad
xchg
inc
out
inc
mov
andl
jmp
mov
push
out
add
xchg
outsl
mov
mov
pop
fisttpll
push
mov
push
aad
dec
jp
leave
mov
pop
push
xchg
scas
shll
mov
jp
sub
shll
in
adc
roll
pop
mov
xchg
lret
lret
ret
cltd
test
aam
and
int
sbb
insl
aas
or
jne
pop
sub
in
movsb
push
es
in
dec
mov
mov
xor
dec
cmp
aam
xor
inc
movsw
sti
xchg
lods
mov
mov
inc
aam
jle
fisubs
loop
mov
ds
pop
jo
xor
inc
inc
lahf
pop
mov
and
pop
ret
stos
loopne
push
stos
xchg
xor
into
mov
mov
stos
scas
shll
lcall
lods
lds
xor
insb
add
push
insb
in
int
repz
roll
inc
addr16
cmp
std
ret
ret
jae
out
sbb
inc
rcrb
cld
shlb
stos
rcl
cmp
out
and
or
iret
or
fmull
lahf
cmpsb
movd
mov
xchg
mov
or
add
mov
shr
fdivl
daa
sbb
in
lahf
mov
xchg
jge
sub
call
mov
dec
dec
adc
sbb
xor
mov
xor
movb
mov
push
fsubl
mov
sub
xchg
jae
cmpsl
push
cs
mov
pop
lret
inc
mov
loopne
scas
imul
or
cmp
pop
sub
arpl
mov
pop
call
and
push
pusha
subl
aaa
and
sti
jmp
repnz
push
dec
scas
dec
inc
stos
rcl
notb
in
cld
xor
xor
clc
ja
leave
sbb
sbb
ds
push
lock
push
pop
int3
cmp
in
xor
mov
jnp
mov
outsl
imul
clc
out
bound
je
shrl
push
dec
cli
xchg
enter
mov
data16
fwait
pop
es
orb
adc
outsl
ficoml
lods
int3
and
outsb
mov
loopne
push
jo
cmp
cmp
adc
aaa
pushl
fcoml
jae
mov
jne
js
fnstcw
pop
xchg
clc
adc
insl
iret
xchg
les
mul
adc
sub
mov
jae
push
scas
jnp
inc
pop
and
adc
cmp
mov
insb
fwait
jge
outsb
iret
or
jno
mov
outsl
cs
push
cmp
fs
push
out
mov
cmp
pop
adc
push
int3
mov
push
mov
fdivl
ret
pop
cmpsb
cmpsb
imul
adc
inc
push
loop
add
mov
pusha
clc
aam
inc
pusha
aad
sbb
sbb
push
cmp
mov
sub
lret
loopne
inc
xor
mov
pop
test
aam
leave
xchg
lret
test
das
mov
scas
and
fmul
fsubl
and
stos
add
jmp
sbb
push
es
mov
mov
lret
fdivs
jo
shlb
popa
and
dec
out
xchg
hlt
jg
and
jl
add
fisubl
mov
lock
jns
pop
xchg
icebp
loope
jbe
mulb
mov
das
mov
inc
test
rclb
stos
imul
or
push
in
ret
daa
xchg
xor
fidivs
mov
in
push
mov
fcomi
les
sub
lret
push
daa
mov
loope
imull
daa
adcb
xchg
adc
pusha
pop
adc
clc
xchg
fistl
mov
mov
dec
lahf
dec
xchg
xchg
adc
push
int3
outsl
shl
sarb
xor
xor
aam
or
cmp
aas
adc
test
pop
bound
mov
pusha
in
test
inc
jp
cwtl
fcmovnbe
xchg
xchg
in
mov
addl
fildl
ret
xchg
insb
sbb
loopne
jo
faddl
cmp
aaa
dec
mulb
push
lgs
lahf
mov
xchg
add
push
test
sub
adc
lahf
mov
lret
in
mov
sbb
in
int
push
test
dec
xor
jmp
pop
sub
out
ret
jl
push
lds
call
mov
test
pop
push
or
icebp
dec
in
jno
stos
mov
loopne
test
fistl
sub
pop
sub
mov
xchg
insl
leave
xchg
pop
rcr
movsb
ss
xchg
fistps
lea
ja
cmp
mov
and
cmp
enter
adc
popf
adc
mov
add
sub
fs
push
add
lods
incl
stos
fnstcw
lods
lahf
push
rorb
idivb
add
sahf
xchg
sbb
mov
fistps
or
movsb
aas
leave
mov
scas
stos
mov
or
shll
xchg
adc
shl
cmp
inc
xor
push
nop
jns
mov
dec
rorb
xorb
add
loope
xchg
cli
cwtl
jae
in
sbb
mov
sbb
sub
cmc
insb
mov
mov
pusha
scas
ret
les
clc
les
pop
leave
out
pop
rcl
gs
loop
and
adcl
sbb
or
sub
xchg
mov
mov
inc
je
jmp
pushf
and
jb
inc
andb
lahf
sbb
dec
pop
fsubl
sbb
push
inc
in
cmp
sub
or
cmpl
bound
aad
ds
push
cmp
jp
jae
push
insb
push
mov
cmpsb
jg
dec
incb
aaa
repnz
flds
mov
mov
adc
pusha
sahf
mov
or
and
lock
fisttps
or
idivl
lahf
orl
iret
jns
shl
mov
sub
cmp
jmp
fnstsw
shll
ficompl
fbld
imul
sbb
les
xorb
dec
loop
fsubrl
cli
out
adc
jle
inc
dec
and
pop
dec
sub
aas
xor
subb
stc
shrl
push
or
add
adc
rcrl
jbe
inc
lret
ret
outsb
pusha
pop
je
inc
jg
leave
shll
adc
lock
aas
or
push
inc
mov
and
sub
dec
mov
mov
pop
aam
xchg
fbstp
pop
fnstcw
fcomps
sahf
call
test
cmp
mov
mov
incb
cmpsb
or
arpl
pusha
mov
inc
or
fsubl
dec
jle
and
jo
xor
lret
xchg
mov
out
mov
addl
jle
int
loope
scas
aad
movsb
arpl
testb
sub
jmp
aas
pushf
mov
loop
imul
pop
jae
lock
mov
push
xchg
adc
mov
test
mov
xchg
mov
or
mov
xchg
lock
cmp
push
addl
push
rorb
cmp
loope
mov
dec
adc
shr
test
mov
jae
movsl
jmp
ss
or
push
inc
stos
xchg
pop
into
clc
push
sub
mov
stc
test
add
pop
movsl
inc
int3
lods
dec
jl
dec
shl
ds
mov
testl
adc
ret
adc
subl
in
cmpsb
scas
leave
js
loop
push
mov
test
lret
xchg
inc
cmpb
lds
call
inc
lds
bound
jl
dec
inc
outsb
loopne
in
repz
clc
cli
pop
stc
enter
jb
jp
pop
inc
test
clc
pop
filds
scas
popf
fistpll
test
jnp
or
mov
dec
adc
xchg
icebp
lahf
cvttps2pi
arpl
hlt
or
shrl
and
jl
adc
stos
addr16
int
cmc
mov
jno
jp
in
jg
sub
adc
inc
or
push
out
or
push
int3
sub
inc
add
sahf
int3
aaa
add
inc
dec
repz
aad
and
xor
sub
shll
pop
cli
repz
jo
andb
push
hlt
dec
roll
xor
mull
mov
cli
insl
and
bound
out
rcr
inc
push
mov
ret
mov
aaa
fs
mov
pop
cltd
lds
imul
xchg
insl
ljmp
gs
das
sbb
addb
pusha
mov
mov
sub
or
js
imul
sbb
sbb
fwait
xchg
dec
cwtl
sub
mov
pop
test
je
inc
subl
test
inc
decb
orb
movsbl
cmp
popf
lea
push
push
push
test
testl
xor
addb
out
cmp
add
les
add
pop
mov
add
cmp
repnz
jecxz
jae
cs
dec
dec
xchg
and
jno
jecxz
mov
xor
cmp
icebp
shlb
movsl
out
sbb
aaa
das
lds
xchg
mov
and
push
xchg
mov
inc
mov
insb
pop
or
call
adc
pop
inc
js
loope
pop
cmp
sbb
push
stc
stos
xor
lods
xchg
jmp
scas
sbb
push
xchg
or
jnp
into
lods
dec
push
add
loopne
mov
or
push
mov
loop
xchg
pop
jl
or
into
cmp
mov
and
adcb
lods
jb
mov
sbb
or
popf
jmp
movaps
mov
mov
inc
pop
pop
mov
stc
push
xor
add
insb
and
movl
mov
dec
xor
cmpsb
pop
push
and
ljmp
pop
jno
and
sub
fnstsw
lea
dec
mull
int3
cmp
mov
cmc
test
cs
in
jb
cmpl
mov
testb
pop
jns
out
inc
fcomip
pop
bound
fcmove
mov
xchg
mov
cli
mov
xlat
mov
les
adc
push
xchg
pop
or
imul
mov
cmc
popa
gs
mov
adc
into
cmpsb
and
sarb
inc
jbe
pop
outsb
mov
cwtl
dec
dec
pop
daa
add
in
mov
shll
or
jo
cmp
movsb
pop
or
lahf
push
cmpsb
xor
sbb
add
pushf
cmpsl
insl
cmc
lds
jb
not
pop
data16
insb
xchg
dec
or
fdivrs
jbe,pn
into
sbb
ret
dec
inc
push
fcmove
or
xchg
sti
clc
add
mov
mov
xor
outsl
xor
leave
xor
xor
dec
xorl
inc
xchg
mov
pushf
push
inc
js
push
dec
sbb
imul
or
pop
cmp
pusha
xor
ret
fidivrs
mov
out
cmpsl
sahf
cwtl
nop
shrb
arpl
add
rol
popf
and
pusha
ja
push
sub
sti
lret
jle
movsb
bound
fists
or
cs
push
cmc
xor
rclb
mov
mov
sub
sbb
insl
scas
add
pop
cmpsl
iret
inc
pop
cmp
shll
and
adc
and
push
rolb
pop
nop
xor
push
call
mov
das
jp
xorl
shlb
mov
xchg
into
inc
int3
and
bound
cmpsb
cld
lahf
mov
xchg
je
cmp
and
push
into
je
and
mov
sub
xor
cmpsb
lret
loope
xchg
popf
out
xchg
fs
test
aam
mov
sbb
xchg
daa
call
jle
jecxz
into
lahf
mov
mov
out
or
pop
mov
sti
imul
adc
cmp
or
imul
stos
sbb
lock
jle
cmp
bnd
repnz
out
pop
lods
or
xchg
ljmp
jno
xchg
shr
dec
sbb
aam
mov
pop
mov
adc
sahf
cli
jo
lea
sbb
add
outsl
dec
sub
rcll
pop
jo
xchg
das
and
sbb
or
out
test
mov
xchg
mov
and
out
and
inc
bound
insl
insl
aam
xor
and
push
and
adc
fbld
push
movsb
outsl
add
push
movsl
dec
fcomip
xor
lcall
add
sub
sbb
mull
cmp
jo
pusha
jnp
add
stos
lcall
add
mov
pop
xor
inc
es
xor
cmp
xchg
cmp
push
mov
movsl
bound
mov
iret
pop
mov
inc
out
aad
xor
push
rorl
sub
pop
jmp
inc
inc
aaa
lds
adc
sbb
jg
les
notb
mov
xor
lret
outsl
or
cmc
fbld
mov
stc
cltd
cmp
mov
scas
cld
pop
add
push
loop
adc
out
jmp
pop
movsb
push
mov
shll
ja
pavgb
mov
sbb
cmp
aam
nop
and
and
fsubs
fst
icebp
out
repnz
sbb
sti
loope
jne
mov
into
mov
lret
outsl
xor
popa
push
cmpsb
in
lret
add
or
mov
mov
sbb
fdivrp
xor
outsl
jo
fs
jmp
in
inc
add
fcmovnbe
cmp
mov
xlat
or
sub
push
add
adc
sbb
mov
cs
pop
xchg
xchg
dec
aas
mov
in
jbe
call
adc
mov
mov
sub
lds
push
mov
inc
pop
jnp
xor
and
mov
in
repnz
pop
add
and
xlat
and
pop
pop
cmp
pop
push
jne
es
int
dec
and
jl
lret
imul
or
in
or
dec
hlt
adc
int3
mov
and
cwtl
lock
or
xchg
push
mov
int
lds
sub
movsl
adc
push
mov
push
push
jl
jle
lahf
cmp
mov
add
je
pop
loop
dec
dec
adc
push
iret
mov
xor
shrb
ret
xor
mov
sub
sbb
mov
gs
jp
and
out
aaa
hlt
dec
adc
jno
jns
cmp
pusha
push
idivl
aam
ficomps
daa
sbb
imul
or
sbbb
fucom
mov
stos
popf
xchg
insb
jae
mov
data16
aas
out
push
das
pop
push
imul
in
cmp
push
mov
data16
dec
out
lea
push
or
mov
push
or
push
lret
loop
sarb
les
jns
imul
fdivrp
ret
or
rol
loop
loope
stc
and
sahf
cwtl
repz
lahf
enter
push
or
out
pop
xchg
inc
or
jno
aam
jl
and
icebp
aas
mov
imul
sahf
mov
and
jbe
and
mov
mov
cld
jne
xchg
inc
adc
in
xor
nop
and
fs
cmpsl
adc
mov
xchg
dec
popa
aad
dec
lds
mov
xchg
outsl
pushf
loope
int
xor
test
xchg
shlb
mov
pop
pop
add
rcrb
or
xchg
gs
ljmp
sbb
mov
test
mov
shlb
and
mov
mov
sbbl
loopne
mov
push
jo
es
out
pop
xchg
arpl
dec
mov
xor
mov
add
mov
fs
jo
lds
clc
pop
adc
aam
inc
sbb
fcomp
loop
ljmp
int3
lock
sahf
imul
out
lds
mull
lods
xor
mov
xchg
sub
int
add
gs
inc
fsubrs
xlat
fwait
adc
adc
xor
inc
adc
pop
cmp
adc
cmc
fisttps
stc
xchg
and
insl
test
fmull
cmp
inc
push
or
ret
mov
cmp
movsl
adc
pavgw
popa
fistpll
mov
testl
mov
mov
inc
cmp
shll
mov
add
or
incl
scas
push
xchg
pop
sbbl
stos
push
ja
js
lahf
mov
out
and
jl
dec
ljmp
ss
adc
fimuls
push
push
dec
sbb
mov
outsb
fpatan
shl
nop
xor
fstps
data16
push
shlb
inc
repz
push
inc
or
mov
cs
daa
cmp
sbb
xchg
loop
cmovl
sbb
fsubr
les
lret
int3
les
pop
ffreep
add
popf
mov
mov
lahf
shrl
inc
addr16
inc
push
mov
mov
out
mov
pop
popf
in
lcall
jnp
mov
inc
test
jb
andl
out
insb
sbb
movsl
mov
push
scas
add
arpl
imul
ja
push
lds
jae
xorb
repz
adc
outsl
mov
dec
pop
or
fadd
cmpsl
clc
mov
and
mov
lcall
cltd
push
fidivrs
jb
sbb
cmp
xor
mov
inc
push
jb
mov
je
add
pop
add
lcall
mov
and
sbb
mov
flds
out
std
sbb
ljmp
ret
mov
in
xchg
jo
fmuls
gs
hlt
lret
mov
mov
neg
mov
push
cwtl
pop
je
cld
inc
xchg
imul
into
jge
fiadds
or
cmp
test
mov
xor
das
cmp
lods
inc
pop
mov
or
mov
sub
lahf
cltd
pop
xchg
fdivl
cld
lahf
xor
inc
mov
inc
scas
add
inc
mov
and
adc
pop
sub
scas
xchg
aaa
incb
push
push
test
jb
sub
push
lods
add
pop
jg
mov
fstpt
stc
arpl
stos
movsl
les
in
mov
imul
mov
popf
push
fwait
xchg
loopne
jno
das
aad
push
xor
push
andb
imul
or
cli
inc
rolb
shlb
lret
mov
stc
lret
pop
sti
cs
popa
dec
mov
mov
push
daa
sahf
fbld
add
and
mov
cmp
jge
dec
repz
dec
sbb
inc
inc
out
jo
sarl
mov
stos
std
stos
je
xchg
call
mov
pop
nop
cmp
xor
test
pop
call
cmp
inc
pop
arpl
xchg
sahf
das
inc
jae
jno
push
mov
xor
push
jge
xor
jns
fisttps
push
push
aam
mov
mov
push
xor
pop
enter
push
mov
pop
lret
pop
mov
dec
dec
in
aas
aam
and
xor
rcll
inc
js
repz
xor
jecxz
xchg
push
loop
jge
mov
rcrl
jmp
ds
dec
fnstcw
and
cmc
sarl
fisttpll
mov
jp
test
dec
addl
int
repnz
fwait
lret
data16
and
jg
addl
pop
and
add
call
jb
dec
add
inc
inc
xor
jecxz
pop
sub
ret
pop
lret
ljmpw
mov
mov
cltd
jbe
push
ss
sti
sub
lock
sbb
movsl
cmp
out
pop
ret
mov
aas
adc
sti
std
xorb
movsb
fsub
shlb
cmp
cltd
cltd
or
mov
popa
bound
mov
jns
or
aam
ss
aaa
stos
enter
je
mov
mov
adc
mov
std
in
add
mov
insb
jbe
adc
push
add
sarl
xor
add
push
jmp
ret
lock
shl
int3
mov
mov
leave
sti
mov
mov
inc
jae
outsb
inc
ret
xchg
das
cwtl
or
daa
insl
cmp
pop
movsl
data16
jb
adc
je
adc
repnz
out
stc
inc
mov
lods
fadds
sbb
inc
xor
and
es
inc
rolb
lret
mov
cmp
mov
push
adc
pop
add
mov
fisubs
mov
rcrl
movsl
inc
xor
jl
and
pop
cwtl
sub
and
shrb
outsl
movsb
mov
xor
add
inc
cli
fbstp
shlb
shll
ja
add
stos
jbe
iret
ljmp
adc
insb
cmp
mov
loope
aam
clc
cli
or
and
cmp
movsb
adc
mov
fistpl
aam
cmp
bound
cmp
xlat
dec
mov
les
rclb
or
cltd
addr16
adc
scas
mov
xchg
or
mov
and
inc
jg
jno
jecxz
pop
inc
xchg
loope
xchg
inc
or
dec
mov
jns
ret
sub
mov
mov
inc
outsl
test
mov
add
jg
cmp
mov
mov
ss
pop
inc
cwtl
mov
sub
jp
ds
mov
scas
pop
scas
je
rcr
push
stos
add
cli
lcall
hlt
fnstsw
cwtl
adcb
mov
jno
jae
push
cmp
in
add
pop
inc
ds
adc
push
xor
enter
leave
pop
inc
or
mov
lds
inc
dec
push
and
loope
xor
pop
in
mov
adc
es
pop
mov
loope
decl
xor
xor
lcall
lahf
or
xor
pop
inc
cwtl
pusha
jae
insb
xor
xor
mov
xor
mov
stos
test
sub
clc
ljmp
inc
pop
jb
mov
test
sub
outsl
jae
rorl
xor
jno
icebp
or
repnz
fsubrl
fmul
cltd
je
mov
fadds
pavgb
jo
mov
pop
cmc
cltd
xor
sbb
or
cltd
sub
cwtd
mov
cmp
fisubrl
or
loopne
cmpsb
xor
call
jb
rcll
hlt
sti
xchg
cs
mov
adc
es
sti
inc
push
repnz
sub
jl
dec
fsubrs
inc
mov
loopne
iret
push
lods
mov
pop
insb
lock
lock
test
xchg
loopne
aam
mov
in
cli
rolb
outsb
jge
sbb
xchg
imulb
outsl
test
add
jl
out
and
fwait
cmc
adc
push
rcll
inc
aad
adc
push
dec
inc
push
xchg
jnp
push
ret
or
enter
push
xor
xor
inc
jmp
out
test
fadds
and
jg
icebp
icebp
push
or
icebp
pop
inc
push
dec
jecxz
or
inc
pop
cmp
cwtl
ret
adc
outsb
mov
les
dec
inc
loop
dec
lret
jbe
in
lcall
jnp
adc
jmp
xchg
out
mov
pop
pop
add
xchg
lods
jbe
cmc
lret
pop
jp
dec
in
enter
push
pop
xchg
and
sbb
in
inc
push
fiaddl
pop
mov
insb
cld
jg
dec
and
int
ret
mov
lds
dec
xor
jne
push
adc
pop
sub
dec
pop
ds
fsts
rcll
frstor
xor
and
out
fstl
fsubr
lcall
cmp
xchg
icebp
sbb
sbb
push
dec
roll
dec
lahf
loope
movsb
dec
dec
sbb
xchg
mov
add
aas
out
mov
sub
test
or
daa
insl
cld
icebp
insl
lds
cs
mov
in
pcmpeqw
push
jp
push
call
hlt
cmpsl
add
pop
sub
mov
scas
mov
ret
lret
mov
xchg
xchg
into
adc
stc
mov
repnz
and
out
sub
ljmp
push
or
ljmp
sub
push
pusha
jne
aam
adc
sub
ret
jne
inc
adc
out
sbb
xchg
std
stos
je
lret
cli
daa
sbb
ss
fstps
in
inc
inc
aad
sbb
dec
mov
popa
jnp
xchg
test
repz
mov
jo
inc
mov
sbb
mov
fidivl
shrl
or
fwait
aas
push
jo
mov
jnp
or
push
push
and
fstl
hlt
bound
stc
lea
sahf
iret
xor
cmp
ss
push
jbe
je
add
push
push
mov
or
int
fldt
aas
cmp
pop
inc
into
push
enter
push
cmpsb
inc
sbb
inc
popf
xlat
pop
push
stc
and
rcll
dec
jae
dec
es
jbe
lea
cld
fwait
je
add
mov
loop
and
cs
std
out
dec
mov
gs
dec
cmp
icebp
repz
xor
int
sbb
in
jle
xchg
xchg
loop
lock
loop,pt
imul
hlt
dec
loop
mov
sub
int3
add
aaa
ljmp
lahf
movsl
ss
test
fimull
cwtl
aas
stos
mov
and
add
cwtl
je
imul
popa
xor
scas
hlt
jmp
mov
jle
rclb
fdiv
in
icebp
or
sbb
test
xchg
inc
dec
sbb
push
mov
mov
aad
dec
add
push
push
scas
inc
incl
outsb
inc
mov
les
jecxz
sbb
pop
inc
pop
aaa
loopne
add
dec
adc
inc
add
movsl
in
hlt
xchg
jbe
and
pusha
sub
xor
pusha
push
add
and
test
mov
ds
in
and
add
and
adcl
sbb
push
or
lods
dec
ja
lret
jns
cmpsb
xor
and
jecxz
out
lea
icebp
shlb
dec
std
adc
enter
and
cmp
repnz
sub
adc
in
sar
mov
or
xor
dec
fisttpl
movsl
pusha
sub
pop
xchg
shlb
cli
push
adc
aas
pop
pusha
xchg
enter
mov
aas
ja
int
test
les
inc
fcmovbe
cmp
dec
ret
inc
sub
sbb
aad
aad
push
jns
push
mov
out
in
xchg
cmp
sahf
push
and
inc
cmp
out
daa
popf
icebp
mov
add
push
repnz
jecxz
cmp
mov
push
imul
jp
fsubrs
lods
out
ja
aaa
test
cltd
push
sarb
movsb
movsb
push
jno
push
insl
sbb
push
inc
gs
pop
sbb
or
or
sub
repnz
mov
pop
aad
ss
mov
mov
shlb
cmp
movl
xchg
jmp
sbb
fmull
or
lods
je
jecxz
testb
mov
xchg
pop
jns
mov
xchg
fists
int
cmp
je
sbb
add
mov
mov
aas
jl
in
mov
movsl
mov
jne
test
je
ss
pop
lahf
sub
dec
sub
out
fisttpll
jmp
test
adc
mov
fidivrl
stos
xor
cltd
ljmp
imul
sti
test
cmp
push
sbb
mov
cmp
fists
jns
dec
jg
inc
dec
ficompl
ret
adc
cmp
jmp
addr16
mov
addr16
sbb
rcrb
bound
lret
push
jp
imul
cltd
and
data16
ja
jge
outsb
arpl
scas
cwtl
xchg
jmp
or
xorl
jg
adc
xchg
sahf
pop
subl
frstpm(287
push
sbb
cmp
or
dec
jge
xlat
push
cld
push
je
mov
mov
or
fldt
out
ret
popa
adc
pop
aad
and
gs
mov
push
pop
jns
out
scas
aam
lahf
rcrl
adc
sbbb
aaa
inc
mov
push
pop
int
lahf
jmp
scas
loop
push
push
or
fcmovne
xor
xor
push
fsubrs
adc
mov
mov
loopne
jge
xchg
dec
out
xor
sbb
push
pop
sub
dec
xor
test
cmp
sahf
into
mov
lret
lods
adc
jo
jl
xchg
lods
das
jo
lcall
adc
dec
mov
rcrl
cmp
inc
inc
minps
sar
in
dec
sub
rclb
mov
imul
dec
ds
push
nop
dec
dec
push
or
push
loopne
insl
in
in
adc
out
scas
inc
in
mov
mov
pop
and
rcrl
jl
daa
test
jne
mov
cmp
scas
pop
xor
out
cmp
jbe
leave
std
sub
rcll
mov
mov
popa
scas
add
loope
rcr
xchg
push
pushf
xor
enter
cwtl
das
pop
mov
mov
xorb
xor
jle
cld
imul
xchg
ljmp
mov
sti
cwtl
cmp
loop
ret
loope
sti
incl
ds
push
pop
fisttps
or
movsl
xchg
loope
push
mov
cli
in
pop
into
push
inc
dec
mov
mov
ffreep
cmp
adc
pop
sbb
outsb
sub
add
or
decl
stos
imul
aad
fsubrs
test
inc
mov
xchg
mov
cltd
jne
insb
add
jmp
ja
mov
mov
shlb
inc
xlat
hlt
test
sub
nop
cmpsb
sti
dec
neg
pop
out
ss
lds
fdivrs
jecxz
lea
add
cmp
sbb
ja
xchg
xchg
cmc
jno
or
setle
pop
cs
in
pop
mov
mov
push
pop
xor
and
pop
dec
jae
out
sub
loopne
sbb
xchg
add
and
fisubs
lcall
out
daa
mov
fs
xchg
shll
mov
jle
sub
sahf
jmp
pop
je
in
and
icebp
int3
add
in
hlt
lea
pusha
or
pop
into
xchg
push
jl
in
call
mov
mov
jbe
fwait
sub
fucom
test
dec
addb
jnp
mov
int
stos
pop
stos
xchg
add
pop
mov
sti
xchg
aas
cmpsl
imul
out
add
mov
inc
repnz
out
ds
fwait
in
lock
or
outsb
bnd
ss
fwait
inc
or
push
adc
arpl
cmp
arpl
pop
test
adc
sub
xchg
xor
ja
es
daa
adc
aas
xchg
xchg
mov
inc
int3
cmp
ja
out
ret
pusha
jle
push
in
jb
xor
xor
inc
stos
int
dec
and
imul
inc
add
data16
mov
jg
fisubs
shll
push
pop
shlb
mov
push
sub
std
neg
jle
roll
fwait
test
push
jae
pop
dec
lock
jle
and
aad
push
outsb
push
std
int
xchg
sub
or
shll
jl
lahf
mov
insb
cmp
adc
mov
jle
dec
xor
jle
idivl
sub
adc
inc
call
dec
and
lcall
dec
mov
das
ljmp
push
je
je
inc
inc
rcrl
sbb
push
push
andl
xchg
pop
mov
push
mov
int
lods
shrb
or
sub
bound
lds
test
int
or
pop
sbb
xchg
add
aas
jle
cltd
push
or
enter
cmp
xorl
jmp
ljmp
xchg
sbb
jecxz
add
stos
outsl
in
cmp
arpl
icebp
xor
sub
and
xchg
and
mov
loope
std
mov
sysret
inc
push
adc
roll
out
pop
pop
cmp
sub
inc
fistl
in
shrb
sub
cmp
cli
mov
insl
dec
inc
inc
mov
loopne
xchg
mov
xor
push
jecxz
arpl
fs
jno
push
jb
mov
mov
sub
jb
jne
cmp
js
pushf
sub
dec
adc
xchg
movsb
jl
subl
shrb
setg
inc
or
call
clc
scas
mov
mov
pop
jmp
pop
add
fsts
xor
xor
cmp
cmpsb
ss
test
das
adc
adc
mov
or
sub
int3
ljmp
int3
rorl
out
orb
cmpsl
push
sbb
bound
jb
loopne
leave
mov
movsb
xor
cltd
xchg
cltd
xor
mov
dec
mov
daa
gs
in
andb
lods
cmp
repnz
outsb
sbb
jo
aam
push
ret
dec
dec
fiadds
sub
inc
loopne
lcall
push
loop
aad
jne
ret
imul
mov
aam
in
jns
ja
xchg
clc
sub
insl
xchg
dec
dec
dec
lret
mov
pop
les
jge
jb
stos
aaa
pushf
out
div
inc
lcall
testl
mov
in
and
xchg
das
lock
shrl
push
jne
mov
xor
push
pop
mov
popf
xchg
mov
test
mov
pop
sbb
fwait
int
push
scas
jg
fistpl
add
repnz
loope
popf
or
sub
xor
gs
or
ja
dec
and
je
push
fstpl
les
jae
dec
or
in
roll
lods
fmul
je
jg
sbb
out
jb
lock
mov
inc
inc
cmc
xor
push
in
jle
ljmp
test
push
xorl
add
cmpsl
and
imul
jge
pop
rcrb
fnstsw
mov
push
mov
and
dec
push
pop
xchg
test
ficoml
test
and
dec
and
mov
cmpsb
in
stos
ljmp
stc
and
test
mov
xor
cli
icebp
xor
mov
and
lea
mov
scas
cmp
mov
add
add
popf
inc
sub
dec
sbb
mov
int3
leave
adc
addr16
cmp
outsl
orb
jecxz
sub
out
lahf
je
scas
lods
ffreep
push
pop
cmp
dec
outsb
andl
xchg
popf
mov
pop
sbb
stc
loop
jmp
cmpsl
mov
xor
cmp
rclb
jno
dec
sbb
jp
or
pop
xor
push
sarl
adc
and
aad
jo
xchg
xlat
and
daa
mov
adc
nop
arpl
mov
in
adc
dec
in
fwait
or
cmpsb
aas
jmp
loopne
sarl
push
iret
lcall
bound
flds
or
or
adc
adc
sbb
in
mov
sarb
mov
rorb
fadds
mov
pop
adc
push
adc
inc
pusha
xchg
jg
or
inc
stos
or
sbb
cmp
xor
aam
arpl
pop
fxch
lcall
stos
out
sbb
or
dec
xor
or
in
adc
xchg
mov
test
xor
jnp
mov
sub
cmp
fidivl
jno
cmc
mov
sahf
cmp
test
push
loopne
xchg
test
fld
xchg
sub
sub
jnp
xchg
adc
enter
or
push
cmp
movsb
sub
aam
pop
les
jecxz
add
push
cld
call
frstor
cwtl
cltd
push
insl
data16
decl
cwtl
lds
dec
sti
pop
imul
mov
dec
jp
jmp
push
xchg
fs
subb
repnz
fistpl
mov
jge
mov
aam
and
popf
mov
out
xchg
and
addr16
adc
loop
pop
test
dec
scas
sub
fsubr
sbb
fsubrs
test
stos
leave
ffree
enter
imul
cwtl
sbb
je
pop
ljmp
movsl
dec
xor
mov
dec
pcmpeqb
pop
pop
clc
mov
stos
in
mov
pushf
mov
sub
cmp
jo
xchg
mov
daa
add
mov
into
sub
imul
out
lock
out
or
dec
popa
jge
and
jae
cmp
cmp
sti
and
imul
sbb
push
mov
aam
popa
dec
cli
and
mov
loop
mov
out
je
jl
inc
add
sbb
and
leave
rcrl
xor
sub
xor
or
pop
jae
jns
pop
imul
pop
mov
lahf
jbe
sub
push
loope
push
cmp
push
ret
pop
lea
ret
mov
mov
les
ljmp
pop
lahf
iret
dec
mov
in
jnp
xlat
mov
push
jl
xchg
pop
jl
int
inc
xor
outsl
data16
or
or
test
jge
outsl
sbb
inc
cld
movsl
out
push
in
pop
fs
xor
add
jns
test
mov
add
or
cwtl
les
repnz
aad
fldt
pop
lar
sub
mov
jbe
fidivs
xor
ret
inc
cld
cmp
fcomp
scas
mov
mov
adcl
inc
sarl
cld
test
jmp
push
mov
rorl
pop
inc
lahf
xor
daa
clc
je,pt
xor
inc
and
sbb
xchg
xchg
jle
lods
into
pop
adc
out
add
aam
insb
lock
or
test
xchg
push
xor
sub
and
lods
xchg
mov
pushf
xchg
xor
mov
jmp
repnz
pusha
popf
add
mov
xchg
xchg
push
sbb
aad
filds
mov
roll
and
andl
jo
inc
mov
fmull
fldt
ja
mov
movsb
into
pop
pop
jg
mov
cmp
push
jmp
jl
xor
push
and
pop
mov
aas
pop
lods
cmpsb
stc
pop
lds
mov
xchg
cwtl
mov
shll
popf
dec
xorb
jb
sub
fstpt
fs
push
stos
jno
push
sbb
xor
arpl
xlat
cmpsl
push
xor
adc
mov
roll
fnstsw
cmp
jecxz
xchg
mov
insb
mov
sbb
cmpsl
adc
das
popf
pop
ja
fiadds
pop
lea
cwtl
subb
sbb
shlb
sub
lret
or
imulb
out
sbb
xor
mov
in
decl
jg
test
sbb
jo
call
xchg
xorl
adcb
jns
xor
jge
cs
scas
aam
int3
mov
xor
jne
sbbl
loopne
into
add
std
cs
jmp
fwait
dec
into
pop
movl
or
jbe
mov
pop
push
and
shrl
gs
sbb
lcall
or
ja
dec
pushf
add
insb
jns
rorb
dec
add
add
mov
add
mov
xlat
mov
hlt
daa
ret
xor
les
dec
mov
dec
daa
cld
mov
inc
xchg
sub
mov
xlat
cli
psubd
inc
out
mov
inc
xchg
inc
pop
or
adc
imul
cmp
mov
sub
jne
aas
es
pop
pop
js
pop
gs
inc
ss
pop
enter
and
cmpsl
ja
cmc
lcall
dec
cmc
and
jle
sub
mov
mov
and
das
in
fchs
aas
sub
fildl
adc
les
repz
sbb
xor
in
shlb
sahf
cs
shll
jae
dec
mov
push
pop
add
loope
jecxz
rcrb
push
hlt
inc
xrelease
fists
xor
int
movsl
repnz
test
mov
es
aas
leave
add
scas
mul
in
jge
cmp
decl
sub
stos
sti
adc
fstpt
mov
push
jne
fwait
xor
mov
pop
sbb
jmp
mov
call
in
daa
mov
jae
adc
inc
adcb
jne
mov
xchg
out
test
xchg
cltd
es
dec
push
shrl
pop
mov
adc
subb
aaa
ss
pusha
outsl
stos
cltd
sbb
add
xor
stos
pop
decl
les
adc
mov
pop
lcall
mov
inc
pop
imul
ss
adc
lret
adc
cmpsb
push
incl
xor
out
sub
lods
and
xor
mov
mov
push
xchg
push
in
in
dec
lods
jmp
bound
incb
loope
cmp
das
jb
mov
xor
mov
and
aam
jmp
jno
adc
mov
clc
mov
fcmovu
icebp
jg
xor
jne
cmp
test
dec
sbb
jge
sub
shrl
je
sbb
fwait
and
cmp
clc
xchg
mov
movsl
pop
das
pop
rol
sbb
dec
push
push
sub
fnsave
mov
fildl
cmpsb
loop
into
bound
jge
notb
sub
nop
cltd
mov
pop
loopne
push
enter
cmp
mov
jb
add
xor
rcr
xchg
divl
mov
adc
dec
xlat
mov
gs
xchg
xor
jle
bound
jge
push
mov
push
mov
call
cld
jns
aas
nop
out
cmpsl
loope
nop
inc
test
testl
push
daa
mov
xchg
add
lock
in
push
xor
fmuls
push
stc
dec
fcomps
push
mov
ds
out
pop
mov
in
mov
test
shll
stos
les
push
test
inc
mov
sbb
cmp
push
push
sbb
sbb
test
push
mov
aas
jl
ds
cmp
stos
or
jnp
pop
leave
and
adc
lds
inc
jl
test
mov
mov
adc
push
jl
cs
dec
ret
dec
inc
int3
mov
mov
repz
sbb
ret
cmpl
cld
ja
inc
imul
mov
adc
cmp
jecxz
dec
cmpsl
inc
fldlg2
inc
bound
xor
pop
sbb
jae
mov
dec
cli
filds
or
and
popf
shlb
aaa
lds
dec
rol
or
popa
test
pop
jo
es
shlb
imulb
lods
xchg
inc
in
mov
aad
jl
pop
dec
jg
inc
jmp
or
fimuls
jmp
test
xor
cmc
push
inc
cwtl
test
les
cmp
hlt
push
inc
clc
insl
xor
cmpsl
push
aaa
jmp
push
cltd
inc
int
out
push
or
or
lds
jns
adc
push
loopne
les
in
fidivrs
adc
mov
lret
add
lret
mov
jg
sbb
mov
dec
xchg
mov
call
leave
sub
fildl
mov
add
mov
cwtl
dec
mov
push
bound
shlb
rcr
les
dec
stos
and
sarb
add
inc
mov
xchg
xchg
cmp
xchg
dec
aad
in
movq
inc
popa
mov
aam
ss
xchg
mov
loop
fwait
lret
jecxz
pop
adc
es
cmp
in
arpl
sub
repz
ror
cmp
inc
cmp
inc
xor
dec
hlt
mov
mov
cli
pop
push
sbb
popf
scas
xchg
jp
pop
sbb
fists
vmovq
in
xchg
jb
jne
sti
mov
pop
cmp
xlat
and
ss
test
dec
push
jbe
xchg
adc
add
lods
cmp
ss
add
cmp
xchg
ja
push
jmp
push
lahf
and
add
iret
fidivrs
cmpsl
xor
int
adc
inc
je
test
jge
scas
hlt
test
sub
jbe
jne
subl
sub
mov
jae
push
call
in
mov
aad
repnz
iret
mov
dec
sub
add
mov
sub
int
js
mov
or
iret
xchg
outsb
mull
mov
xchg
iret
xchg
out
sbb
testb
and
xor
mov
bound
xchg
js
inc
repnz
jle
inc
jns
pop
or
cwtl
nop
pop
repz
cmp
push
xor
test
test
and
jbe
mov
inc
rclb
dec
mov
nop
mov
xor
int
push
xchg
cwtl
das
and
or
push
jnp
pop
jecxz
rorb
dec
in
enter
push
or
dec
mov
push
popa
dec
or
adcl
adc
mov
xorl
push
add
shl
push
push
xor
xor
ret
mov
fdivrs
inc
roll
sub
lcall
push
fs
faddl
rolb
jnp
mov
fdivr
repnz
mov
popa
adc
cmp
icebp
push
ja
mov
cmp
jbe
scas
mov
and
inc
bound
inc
es
fisubrl
lret
dec
or
aam
sbb
aam
mov
inc
mov
mov
das
int
ds
repz
stc
test
dec
jno
or
stos
inc
or
in
test
pop
push
rolb
jnp
je
push
movsb
call
jne
pop
adc
iret
push
xchg
or
sub
mov
aam
fs
movsb
and
sub
xchg
dec
jo
enter
addr16
dec
sti
mov
xchg
sbb
mov
lret
cmp
int
add
push
mov
ja
insb
jle
xchg
cmpl
scas
rolb
mov
xorl
loopne
mov
dec
subb
std
fildll
push
adcl
sahf
movsb
dec
outsb
scas
iret
jg
ret
cmp
ret
sbb
sarb
mov
cld
sub
add
pop
adc
mov
mov
push
xlat
jnp
mov
and
lds
jb
mov
and
push
loop
jp
jle
xchg
jno
fisubrl
loopne
mov
cmp
pushf
pop
fstpt
in
imul
sub
push
sub
add
div
add
pop
insl
fcoml
sub
fisubl
in
mov
dec
sbbb
add
out
pop
xchg
outsb
or
adc
fistpl
adc
cs
mov
pop
add
fbld
adcl
jno
test
sti
aaa
cmp
pusha
das
inc
repz
push
jo
ja
shlb
dec
pop
iret
mov
or
mov
js
sub
or
mov
or
add
icebp
icebp
sub
repnz
outsl
mov
mul
xchg
ds
dec
mov
in
dec
subb
sbb
and
sub
add
push
sbb
stos
sti
iret
xchg
mov
xchg
adc
arpl
xchg
repnz
jmp
sub
cmp
imul
cmpsb
xor
out
or
jo
out
xlat
push
xchg
xor
mov
pop
push
cmp
xor
bound
adc
bound
es
mov
mov
jecxz
mov
ja
jo
sub
xchg
jb
adc
inc
ja
ljmp
mov
lcall
pushf
gs
xchg
cwtl
stos
in
pop
mov
inc
xchg
shl
inc
mov
xor
jns
inc
pop
xor
xchg
push
addb
mov
inc
aas
mov
imulb
leave
je
fwait
clc
dec
lret
loope
in
rcr
imul
ret
jge
loopne
push
inc
aas
pop
mov
pop
jp
test
in
sbb
push
push
xlat
mov
popa
add
mov
inc
lahf
mov
jb
ficompl
mov
repz
js
mov
ss
xor
mov
add
push
and
dec
adc
adc
mov
pop
mov
cli
dec
xchg
out
push
test
out
mov
jo
adc
mov
sbb
lods
loop
jle
and
dec
pop
jno,pt
jl
jp
test
cmpb
fmull
dec
pop
dec
jbe
loop
es
ds
cmpsb
cmp
mov
pop
inc
imul
add
imul
xchg
jge
and
jecxz
lea
inc
pop
add
fcomip
mov
sbbb
les
pop
leave
mov
mov
cld
adc
repnz
mov
push
mov
add
out
jo
imull
mulb
jle
sub
jns
pop
jne
addb
and
addr16
cmpsb
loop
and
pop
and
daa
mov
push
pop
fstpl
push
test
loop
mov
inc
ja
cmp
sbb
or
dec
shrb
and
jns
and
jns,pn
mov
ret
jg
in
loope
jb
aad
mov
sub
sub
push
repz
xchg
stos
mov
icebp
cmp
mov
cmp
lret
push
dec
sahf
pop
test
xchg
mov
out
pop
jno
jbe
xor
push
and
add
pop
jbe
pop
movsl
mov
data16
fildll
xor
push
in
fsub
push
popl
lock
outsb
jae
add
shlb
pop
notl
test
cwtl
rcrb
sub
mov
push
xchg
push
or
jg
aam
and
popa
add
imul
enter
xchg
push
scas
xchg
mov
xchg
fcompl
arpl
lock
xchg
push
addr16
jae
or
loop
sbb
fistps
xor
sub
mov
in
add
jbe
scas
iret
xor
inc
int
push
mov
lea
pop
xor
xchg
cmp
jmp
add
lods
nop
int3
xchg
popa
inc
js
jge
xchg
add
ret
push
jg
imul
pop
in
xchg
clc
mov
xor
das
pop
or
lret
mov
arpl
movb
sbb
xchg
adc
int3
addr16
lock
xchg
mov
inc
push
mov
push
and
sub
fdivrl
sbb
fcmovnb
dec
add
pop
add
mov
sub
mov
sbb
or
cmp
jge
aam
ret
xor
adc
outsb
xchg
xor
outsb
pop
insl
pop
cltd
and
insb
pop
les
dec
aam
xchg
xchg
cmp
sub
insl
sahf
hlt
mov
scas
mov
ja
dec
movsl
jecxz
das
cmpb
xor
in
mov
inc
insb
movl
mov
or
sahf
idivl
mov
inc
dec
mov
sbb
shrb
adc
test
lret
dec
test
or
in
inc
cmp
imul
jp
sbb
les
jb
add
clc
iret
jle
sbb
cwtl
xchg
add
lret
imul
cmpsb
arpl
mov
test
xor
jns
push
and
push
jmp
outsb
into
pop
xor
cmp
xlat
mov
mov
pop
adc
xchg
xchg
jne
sub
mov
rcll
out
movsl
mov
push
in
pop
repz
jno
pop
or
inc
xor
pop
sub
sub
lret
lods
mov
sahf
cmpsl
insl
pusha
fcoml
jbe
sub
mov
pop
adc
pop
cwtl
les
inc
jne
sub
mov
out
fwait
imul
pop
jle
jp
or
xchg
mov
ret
push
jecxz
rol
push
dec
mov
aam
cs
sbb
hlt
push
push
pop
out
icebp
inc
aas
jecxz
pop
push
daa
cli
and
lret
pop
lock
rcrb
pop
pop
out
lret
mov
dec
fucomp
or
fldcw
pop
mov
loopne
push
sub
fimull
xor
stos
je
push
out
pop
daa
je
mov
fdivp
and
lods
fidivrs
push
aad
and
cld
mov
ret
push
cmp
push
aaa
aad
jg
lock
insb
dec
cwtl
lret
push
imul
jno
fucom
inc
test
sbb
sub
mov
jb
and
clc
sbb
loope
pushf
addr16
cwtl
xor
and
mov
inc
dec
stc
mov
xchg
mov
clc
lock
rolb
call
add
movsb
js
lahf
jo
and
fnsave
icebp
jmp
movsl
nop
pop
push
pop
jo
jp
in
dec
arpl
or
xchg
jne
mov
dec
pop
divb
icebp
aaa
push
and
or
add
and
lods
and
adc
add
lret
scas
xor
out
shrb
gs
jecxz
mov
jle
xor
minps
es
mov
lahf
icebp
jle
scas
orl
icebp
fldl
rcr
hlt
test
iret
imul
cmpsl
call
lods
imul
and
push
popf
cmp
dec
jmp
int
popf
ja
push
sub
sbb
mov
fs
cs
cmpb
into
mov
pop
inc
cmpsb
aas
and
subl
jecxz,pt
cmp
dec
clc
pusha
jnp
sti
test
rcrb
xchg
sbb
in
cld
shl
inc
shlb
stos
mov
sub
pop
mov
outsl
push
sub
fsub
cmp
ftst
mov
push
jg
cli
aaa
dec
sub
or
pop
in
push
loopne
lods
mov
add
jmp
shrl
xorb
mov
xchg
arpl
jae
adc
in
xor
sub
pop
sub
fmull
mov
lcall
dec
cwtl
gs
data16
mov
inc
jbe
jp
fimuls
je
cld
push
or
iret
scas
rcrl
or
and
xor
scas
inc
xchg
jecxz
xchg
add
cmc
out
cmpsb
fisubl
aaa
jo
mov
insb
mov
adc
mov
add
mov
mov
xor
cmp
cld
dec
mov
repnz
js
jmp
imulb
xchg
adc
ds
inc
cltd
add
jg
out
inc
fldenv
lock
jge
ds
pop
and
push
xor
outsb
add
icebp
outsl
cmp
enter
and
dec
xchg
sub
adc
aam
push
repnz
lcall
je
sbbb
pop
add
add
enter
sti
and
and
pushl
mov
scas
cmc
sbb
xor
test
pop
sub
and
aaa
stc
shrb
sahf
in
xlat
scas
in
cmp
pop
adc
insb
or
cld
pop
mov
push
xor
enter
stc
cmpsl
fsub
inc
pop
jns
test
fwait
sub
push
rclb
addr16
pushf
pop
inc
call
testb
jnp
push
or
stc
mov
loope
ljmp
out
ds
pop
popa
aas
shll
pop
fcompl
lods
cmp
stos
ret
das
pushf
outsl
shl
sahf
inc
or
jo
mov
xorb
lret
dec
push
sub
sahf
movsb
dec
adc
jge
adc
xchg
mov
inc
xchg
stos
dec
and
cltd
ret
adc
hlt
pop
leave
xchg
xor
cmp
push
or
mov
jg
dec
mov
push
in
pop
add
orl
outsb
mov
mov
or
push
lds
cmpsb
cmp
mov
sub
pop
cmp
call
mov
adc
inc
cmpsl
mov
or
stos
mov
jb
popa
push
push
mov
cmpsb
cmp
mov
leave
mov
fs
adc
aad
rclb
lcall
stos
pop
das
cmpsl
cmc
lock
mov
rclb
fists
adc
repz
sub
adc
adc
daa
mov
push
add
xchg
xor
and
xchg
sub
xchg
mov
frstor
mov
cmp
dec
pop
inc
adc
scas
or
pop
cmc
add
int3
dec
push
fmul
xchg
mov
push
inc
subb
das
push
fstp
sbb
dec
popa
pop
jne
mov
sbb
testl
pop
aad
ja
inc
out
sub
stc
xchg
bound
xchg
lods
out
jns
sbb
lret
popa
cli
jno
jns
xchg
imul
mov
dec
or
repz
adc
adc
lods
push
shr
mov
popa
and
xchg
leave
jg
xchg
mov
pop
lods
test
mov
stc
jnp
rcr
mov
add
test
movsb
not
fldl
push
mov
arpl
js
fcoml
push
cmp
into
cmc
and
in
imul
add
inc
aas
adc
adc
stos
pop
inc
bound
xor
mov
lret
dec
loop
pop
mulb
repnz
mov
clc
and
ret
icebp
scas
in
negb
jg
stos
xlat
cld
ljmp
cmpsb
pop
inc
jbe
sahf
adc
movsl
leave
cmpsb
xchg
rcr
cwtl
test
jmp
decb
test
in
pop
data16
rol
aam
sub
test
mov
cs
cwtl
push
inc
cwtl
jb
mov
loopne
jg
push
pop
and
mov
mov
lods
push
dec
pop
or
ds
or
imul
and
ss
rorb
fildll
dec
sub
inc
cmp
push
clc
cli
dec
ds
inc
cmpsl
int3
sub
in
jne
mov
gs
mov
push
jb
stos
outsb
mov
cmp
mov
ret
pop
adc
aaa
std
pop
xchg
or
cmp
pop
pop
inc
cmc
les
and
ficompl
push
mov
gs
mov
ds
jg
popf
dec
les
fildl
xchg
in
mov
push
repnz
inc
mov
inc
mov
add
jl
cltd
pushf
mov
push
cwtl
and
imul
daa
mov
scas
mov
mov
subl
sti
pusha
push
mov
xchg
mov
dec
jb
inc
out
aaa
stos
pop
mov
test
jle
das
pusha
mov
fdivrl
or
rcl
cli
add
dec
sub
inc
cwtl
jg
data16
ljmp
xor
gs
mov
mov
xor
mov
jo
cmp
aas
push
imul
movsl
dec
or
jecxz
fs
xchg
fucomip
stc
pop
push
ljmp
jge,pn
test
out
imul
sbb
push
lods
mov
pop
push
xor
iret
lahf
jl
sbb
mov
pop
or
inc
lods
pop
mov
and
jmp
pushf
js
cltd
jmp
repnz
lahf
xchg
add
popf
into
aam
out
stos
in
bound
leave
push
fabs
iret
xchg
int3
rcl
mov
cmp
pop
jg
or
jge
add
push
pop
inc
jo
inc
mov
pop
je
fdivl
nop
repz
subb
flds
dec
loope
fwait
std
aad
pop
es
loop
push
subl
pop
arpl
enter
mov
pop
mov
adc
outsb
mov
xor
sbb
sbb
shrb
nop
das
sti
out
sbb
fs
push
sti
flds
and
add
push
push
and
rcll
sbb
stos
push
pop
push
shrb
sub
int3
xchg
dec
sub
cs
repz
sbb
cmp
xorl
and
fildl
loope
iret
mov
mov
insl
xchg
hlt
jb
ss
pop
pushf
sub
testl
adc
pop
mov
lahf
xchg
in
jae
ret
orb
jo
and
mov
ret
lods
je
int3
sub
jge
xor
js
sub
rorb
loopne
add
bound
mov
popf
int3
jbe
cmp
shrl
mov
jp
enter
movb
sbb
pop
and
fidivs
cmc
loopne
setle
lods
or
cmp
addr16
or
push
repz
test
adc
mov
imul
jb
push
roll
dec
in
cmpsb
mov
jmp
sbb
mov
jnp
and
sbb
ljmp
xlat
inc
add
fisubl
insb
and
jae
and
xlat
adc
in
adc
push
xchg
pop
inc
mov
enter
sub
or
scas
pop
jno
adc
repnz
ss
xchg
in
jbe
push
leave
mov
mov
loop
jnp
mov
dec
xor
mov
inc
movsb
add
ret
sahf
ja
mov
and
in
mov
sahf
adc
loopne
xchg
lea
add
and
and
dec
scas
push
xor
iret
scas
ljmp
fisubs
push
cmp
lds
cli
fstp
pop
dec
pop
insl
jo
mov
int3
cltd
mov
in
pop
ljmp
in
inc
xchg
jb
addr16
cmc
and
pop
fistps
jne
stc
or
jns
jbe
push
insb
xor
test
stos
lcall
repnz
into
pop
and
and
fxch
and
cmp
loopne
adc
popa
outsb
adc
jo
mov
scas
ljmp
xchg
xor
sar
popa
jns
pop
cmp
lahf
push
cmp
push
movsb
xor
daa
inc
out
std
fistpll
and
aad
dec
xor
fnstcw
mov
repnz
push
lret
call
push
xchg
pop
or
cwtl
lahf
add
add
inc
jno
outsb
or
loop
mov
enter
pop
adc
add
popf
pop
push
sbb
push
mov
xchg
rolb
mov
fisubrs
repz
xchg
cmc
insb
mov
and
mov
mov
pop
jle
pop
into
and
stos
mov
stc
imul
leave
mov
dec
repnz
inc
mov
xor
or
fidivl
and
cltd
imul
sbb
andl
mov
shrl
xchg
enter
repnz
mov
dec
sub
pusha
outsl
push
mov
into
add
popa
call
fadds
push
lock
pop
ret
cmp
pop
pop
call
sti
popf
mov
test
jecxz
cmc
pop
test
xchg
add
pop
ds
loopne
or
decb
adc
sbb
insb
cmp
adc
jnp
movsl
fdivrl
inc
cmpsl
fldl
enter
loop
push
push
ret
les
cld
out
in
sbb
dec
dec
cmc
sub
sbb
out
sbb
xor
jae
mov
cmc
negl
jb
dec
mov
jecxz
mov
and
push
mov
idiv
dec
inc
sbb
scas
inc
fsts
popf
pop
mov
push
sub
jne
xor
popa
les
mov
daa
repnz
mov
fists
fisubl
jb
xor
gs
pop
out
lds
andb
fadds
add
sub
test
inc
frstor
pushf
xchg
dec
mov
push
int
shl
pop
xchg
pop
jo
push
lds
pop
int3
rol
and
adc
addr16
das
int
adc
jo
call
and
push
iret
idivl
sbb
sti
sarb
mov
sbb
push
sbb
notb
push
lahf
mov
dec
aas
leave
push
push
jno
cmpb
mov
or
ret
ljmp
ss
mov
insl
hlt
cmp
pop
xchg
cs
add
jae
dec
mov
aas
xor
push
and
fwait
pop
or
jo
push
xor
mov
sub
pop
and
cmc
enter
loopne
jae
mov
adc
mov
jae
xchg
lret
mov
xor
hlt
xchg
nop
mov
icebp
jne
mov
or
or
add
cld
mov
cmp
add
cwtl
rolb
inc
aas
xchg
pushw
fdivl
mov
pop
jb
or
aam
mov
mov
lds
cmp
ljmp
aas
call
mov
mov
adc
and
inc
xchg
mov
cmp
popf
insb
push
es
push
inc
jl
shll
add
sbb
inc
pop
nop
or
movsb
xor
inc
sub
test
mov
pushf
nop
popa
fwait
stos
aas
repnz
mov
sbb
xlat
and
fbld
jge
mov
insb
cmc
mov
push
imul
mov
movsl
das
scas
enter
jl
cmp
and
rcll
sub
fcmovnu
cld
lea
jns
add
arpl
mov
inc
std
rorl
push
push
lret
mov
movsl
cmc
or
sub
lret
ss
movsl
das
dec
xchg
js
mov
jl
cmc
testl
fbstp
lds
cltd
sbb
jle
adc
daa
fwait
push
xchg
cld
aas
cmc
ljmp
xor
rcrb
xchg
add
and
sbb
clc
mov
btsl
pop
lcall
sbb
repz
jne
mov
sub
test
je
sub
ficomps
pop
int3
push
mov
add
in
mov
or
ffree
add
sbb
mov
lods
dec
or
pushf
fmull
les
push
jg
pop
shll
test
ss
inc
popa
lods
pop
push
push
mov
dec
xchg
cmpsb
and
add
movsb
add
faddl
ss
gs
in
lock
sbb
sbb
cwtl
jae
cmp
fildl
add
push
lahf
in
adc
jg
int3
cmpsb
mov
test
repnz
es
mov
test
xor
stc
xor
mov
or
jne
xchg
cli
outsb
add
test
cmp
cld
pop
push
int
pusha
lret
frstor
inc
daa
xor
lods
cltd
imul
cmp
jns
inc
lock
and
incb
clc
mov
sarb
sub
loope
jae
dec
rorb
scas
imul
sub
scas
sbb
test
clc
inc
fdivrs
sahf
popa
fucomp
aas
imul
outsl
cmp
cld
aam
insl
or
jbe
mov
push
nop
push
fdivrs
cmp
push
sbb
outsb
cmp
xchg
lahf
lock
mov
mov
loope
cs
mov
bound
xor
adc
mov
jnp
out
repz
shll
test
mov
shl
adc
out
mov
iret
cmp
imul
ret
jbe
pop
ret
jge
lods
pop
jmp
shlb
insb
out
xchg
cmp
arpl
jns
in
bound
repz
mov
add
jno
mov
xor
adc
mov
enter
stos
lea
jge
mov
scas
pop
mov
cltd
lret
stos
cli
xchg
lea
loope
mov
inc
push
mov
fdivl
push
dec
mov
dec
and
jno
imul
mov
lcall
cmp
jp
mov
sbb
arpl
xchg
add
dec
xor
idivl
push
movsl
add
shld
sahf
sbb
lret
orb
je
push
or
mov
inc
mov
cmp
sub
or
dec
lea
or
add
rcrl
rcrl
and
test
fisubrs
or
cli
in
jecxz
and
sarb
arpl
pop
cs
cmpsb
pop
out
and
cs
inc
inc
gs
pushl
inc
imul
dec
dec
adc
mov
cld
and
push
outsl
int
sbb
xchg
test
orb
or
ret
cmpsb
lret
fwait
pusha
or
stos
jae
in
int3
movsb
mov
imul
xlat
enter
movsl
enter
daa
cmp
pop
stos
cmpsl
sbb
lahf
cltd
inc
ficomps
xchg
pop
insl
out
jno
aaa
das
rcrb
or
lea
cmp
cmp
icebp
and
incl
aam
adc
push
jmp
ficoml
fdivrp
test
shlb
clc
mov
je
cli
dec
cmp
xchg
add
mov
mov
movsl
mov
iret
jns
jmp
pop
out
jle
inc
fwait
cld
sbb
les
bound
jno
into
pop
jb
jge
roll
in
adc
popa
jbe
sbb
lock
pop
pop
xchg
lcall
cmp
sbb
adc
xchg
lret
dec
loop
popf
jmp
cmp
lods
fsubr
popf
xchg
pusha
imul
fisttps
mov
add
ja
push
inc
push
cs
int
insb
and
xor
mov
fsubrs
imul
in
push
push
pop
ja
fcmovnu
incl
sub
mov
mov
lret
fsubl
pop
subb
cmp
and
jecxz
xchg
icebp
xor
stos
or
jo
shll
xchg
mov
pop
ret
int
jns
loope
movsl
xchg
pop
test
pop
push
mov
and
fmul
out
test
aas
xchg
and
mov
repnz
fucomi
adc
sub
inc
cltd
mov
shrl
ret
or
xor
or
lcall
ds
in
rorb
repz
cmp
daa
sbb
adc
push
imul
sub
jl
jecxz
or
pop
dec
jns
xor
movb
and
mov
inc
sbb
or
movsl
cmp
fxch
test
les
or
push
clc
fldcw
into
inc
cs
adc
aas
or
xchg
fs
out
xchg
adc
sub
mov
mov
xor
inc
sbb
ret
dec
aaa
and
leave
mov
xor
push
nop
jl
cmp
mov
fsubrs
lret
loope
pop
adc
cltd
push
xchg
pop
loop
mov
pop
and
loop
int3
push
and
pop
outsl
scas
mov
dec
stc
push
aas
xchg
push
inc
adc
repz
jne
cmpsb
xor
or
sub
inc
jae
js
push
inc
call
add
mov
lea
cmc
cmp
and
std
aas
push
dec
cmp
sub
xchg
stos
push
movsl
or
xchg
fildll
stos
xchg
int
sbb
out
ja
pop
sarl
lea
sbb
pop
ret
and
sar
mov
inc
int3
dec
jl
int3
call
inc
fisttpll
inc
cmpsb
neg
jae
mov
mov
ffree
add
aad
pop
inc
add
fstpl
stos
cmp
cs
daa
push
mov
outsl
pop
xor
sub
das
adc
notl
rcrl
std
jbe
and
addr16
adc
fnstsw
mov
xchg
xor
mov
rcl
add
push
stos
in
add
cmp
jle
sub
or
or
aas
leave
call
dec
inc
lret
xor
xor
test
push
inc
imulb
sub
jmp
ja
xor
out
jnp
pop
lock
data16
pop
xchg
mov
or
fisubs
fistpl
adc
fcomps
addl
push
sbb
adc
cmp
pop
test
fidivl
mov
stc
push
add
dec
out
adc
out
and
js
ja
or
ds
add
pop
add
jbe
shlb
fsub
mov
push
movsl
mov
scas
insb
sahf
sti
or
lret
inc
test
popf
ret
fmull
jo
sub
sub
leave
scas
clc
push
push
pop
dec
push
add
push
jb
ds
xor
adc
imul
mov
add
clc
daa
shll
test
jne
pop
test
out
pop
test
sub
notl
jge
into
inc
mov
imul
xor
enter
inc
sub
pusha
and
nop
das
or
mov
pop
jmp
mov
and
mov
movsb
dec
out
and
push
cmpsl
fists
cmpb
ja
add
daa
cmp
test
cmp
inc
aas
pop
mov
pop
fsubs
stos
push
cmpsl
inc
xor
ja
mov
dec
pop
mov
sbb
data16
neg
push
repnz
or
push
lcall
sbb
fldenv
repnz
cmp
sbb
movsl
cs
rclb
rol
push
xchg
xchg
insl
cltd
jo
aam
mov
icebp
leave
in
cmpsl
stos
cltd
push
stc
imul
aad
inc
jo
jmp
push
push
icebp
mov
outsl
dec
aam
jle
inc
mov
fistpll
ss
cs
push
pop
imul
jns
lods
daa
push
adc
je
fcomi
jne
jnp
xor
xchg
faddp
pop
xchg
mov
fsincos
lcall
cmp
mov
xor
jnp
add
sbb
adc
mov
mov
and
adc
loop
fwait
loope
aaa
xchg
add
mov
js
cltd
xchg
push
enter
les
pop
fs
gs
lret
jl
mov
hlt
push
mov
mov
fsubr
negb
adc
out
mov
and
jmp
fs
cmpsl
adcb
pop
lcall
mov
mov
cmp
fldenv
mov
and
cmp
jmp
in
sbb
insb
cmp
lds
je
lock
in
sub
adc
fcomps
inc
movsb
push
mov
lret
add
jge
loop
jno
stos
icebp
mov
cld
mov
loop
aaa
aam
fimull
outsb
lahf
loopne
adc
jecxz
dec
mov
jmp
ldmxcsr
xchg
insl
adc
lret
ss
sub
fbstp
ss
push
movsl
clc
or
mov
repz
adc
fimull
fiaddl
xchg
or
test
shl
sbbb
cmpsl
jns
das
aaa
jecxz
pop
nop
cmp
pusha
lods
fildl
psubb
mov
xchg
xchg
in
andl
shll
xchg
push
sub
cmp
mov
dec
xor
inc
jne
inc
sub
or
jl
mov
mov
cld
fistpl
loope
js
shll
test
movsb
loopne
bound
lods
adc
pop
ja
in
scas
bound
mov
rorl
inc
xorl
gs
dec
mov
sub
adc
imul
and
sub
lods
push
add
xor
xlat
das
mov
movhlps
mov
dec
cmp
mov
pop
in
lcall
mov
push
xor
sub
push
mov
mov
pop
outsl
mov
sar
les
hlt
ficomps
cmpsb
test
sub
sbb
testl
and
xor
fs
pusha
dec
or
jo
lea
jp
jle
mov
jg
test
scas
les
mov
shll
and
insb
xor
lods
iret
sbb
jmp
std
dec
scas
push
repz
inc
jns
repnz
inc
ret
aaa
sub
cwtl
push
push
lods
pop
dec
push
pusha
loope
imul
cmpsl
pop
and
fnstenv
popf
ret
xchg
inc
popa
xchg
ja
pop
movsb
insb
add
dec
xchg
xchg
popf
pop
dec
fldcw
int
or
jp
movsb
pushf
aam
sub
sub
mov
ss
pop
movsl
je
aaa
sub
int3
sbbl
or
hlt
mov
adc
jns
mov
aaa
xchg
cld
jecxz
das
cmp
out
fwait
in
ror
hlt
arpl
add
xor
dec
pop
js
push
inc
fists
lea
loop
addr16
and
mov
mov
and
mov
cli
sbb
in
cwtl
fwait
adcl
fisubl
push
je
jns
jns
loop
int
adc
and
xchg
rorl
or
daa
mov
js
aam
test
test
mov
scas
jo
mov
fs
sub
test
hlt
jg
gs
mov
mov
dec
dec
aad
xor
imul
adc
neg
repnz
fwait
pop
pushf
push
xchg
cmpsl
push
in
pop
pushf
sbbb
repz
dec
push
les
test
sub
into
cmp
jbe
xor
and
mov
nop
dec
out
or
aaa
in
nop
and
xor
push
pop
jo
pusha
xchg
sub
repz
into
lds
repz
pop
jg
data16
fsubs
in
stos
gs
jno
push
inc
cmp
cli
mov
pusha
cs
mov
adc
lea
or
clc
jmp
test
ja
rorl
aad
mov
xchg
dec
adc
mov
adc
mov
sub
int3
inc
mov
jp
cmc
enter
xchg
flds
xor
sti
mov
xchg
repz
sbb
jecxz
xor
out
xchg
dec
je
or
sbb
in
lods
mov
loop
xor
not
mov
daa
movsb
call
push
aaa
xchg
jmp
ss
ds
mov
in
xchg
mov
test
add
add
sub
call
pop
inc
mov
adc
loope
sbbb
xchg
inc
add
decl
fsubrp
inc
out
push
insl
icebp
jl
pop
dec
in
xchg
push
mov
pusha
xor
fwait
xchg
pop
push
js
mov
sub
push
cmc
push
dec
adc
sbb
pusha
lcall
xchg
imul
push
scas
popf
cmp
jnp
divb
push
ret
iret
into
jo
icebp
lds
xchg
icebp
outsl
add
call
scas
inc
in
jns
ffreep
cli
adc
and
xor
xor
sbb
out
sub
jno
es
fsubl
xchg
and
mov
inc
inc
movsb
cmp
inc
xor
shll
xchg
mov
or
mov
xor
jg
mov
in
add
sarl
clc
mov
xor
dec
fmul
xor
mov
insb
xor
mov
or
mov
mov
dec
mov
sbb
lds
imul
pushf
fadds
sbb
push
mov
add
add
ret
inc
les
incb
pop
add
jnp
or
push
adc
addr16
addr16
adc
xor
inc
in
sub
pushf
inc
add
stos
ds
loop
xchg
shl
cmp
xchg
mov
test
inc
pop
aaa
or
into
mov
mov
add
pop
rclb
pop
xor
dec
in
adc
push
aam
js
xchg
sahf
cs
jo
adc
add
stos
xchg
popa
or
movsb
jge
fsubrl
mov
lods
and
fdiv
sbb
cltd
inc
ja
cmp
testb
pusha
mov
mov
sbb
gs
shlb
push
lcall
ffree
popl
shlb
int3
dec
lcall
pop
push
fnstsw
and
ss
fdivrl
fisubrs
cs
dec
mov
jae
lods
lret
popa
iret
sbb
xor
lock
xchg
xchg
lock
enter
sarl
mov
jbe
cli
cmp
mov
lahf
sbb
xor
push
mov
xor
icebp
movsb
gs
xchg
pop
int
stc
incb
sbb
je
cmp
psraw
inc
push
jp
add
jle
push
and
sub
mov
xchg
sbb
mov
ret
aaa
sarl
jo
push
stos
dec
or
subb
mov
mov
in
out
xchg
lods
adcl
jns
and
int3
into
shlb
adc
gs
movsb
insb
xor
inc
sub
nop
shrl
inc
loopne
pop
mov
cmp
xchg
loope
jo
and
arpl
test
inc
cmp
loopne
or
stc
aaa
jle
and
hlt
loop
mov
outsl
sub
jmp
rclb
popf
test
or
cmp
das
scas
in
lds
fstps
lock
push
repz
in
aaa
mov
mov
stc
and
dec
shll
dec
pusha
inc
inc
out
mov
sbb
add
enter
mov
and
insl
stc
cmpsb
outsb
sahf
dec
or
or
sbb
rcrl
sarb
xor
pop
scas
cmc
xchg
jmp
fldl
arpl
imul
dec
aam
mov
sub
or
mov
test
scas
shl
adc
xchg
std
scas
push
sub
hlt
es
xchg
push
inc
cmp
ret
ss
jg
out
xor
fcom
clc
adc
sub
scas
out
xor
js
xchg
out
lods
fs
movsl
sbb
jnp
imul
inc
push
decl
mov
inc
mov
dec
mov
push
clc
lock
movsb
cmpsb
jg
insb
pop
sub
cmpsb
fbld
dec
cmc
mov
aad
test
mov
pop
jns
pop
movsb
push
inc
dec
test
test
int3
pop
aas
add
and
test
pop
outsl
nop
stos
mov
xchg
outsl
loop
xor
icebp
dec
fidivrs
je
ss
push
insl
lds
xor
mov
xchg
push
xor
test
cmp
movsb
cli
je
jecxz
add
jne
pop
push
das
mov
cmc
xor
lcall
cmpsl
movsb
add
mul
insb
xchg
scas
daa
fwait
jno
pop
dec
xchg
pop
sub
lods
sbb
jb
jbe
push
iret
data16
inc
xchg
mov
mov
sbb
je
dec
sbb
mov
cmpb
add
cmp
std
push
cmc
xchg
loope
lea
jge
loop
inc
fbstp
push
cmc
mov
pop
cmp
sbb
into
xchg
fdiv
inc
dec
into
jne
das
dec
adc
dec
and
mov
xchg
fists
pop
dec
mov
dec
adc
repz
idivb
adc
rcrl
in
jo
outsl
add
xchg
and
stc
xchg
jge
addl
jnp
incb
icebp
adc
mov
sar
mov
mov
mov
inc
cmp
dec
cmp
mov
mov
mov
push
lret
pop
pop
nopl
ficoms
dec
insb
jne
inc
cmp
push
rcl
or
jnp
fbld
lret
test
outsb
push
pop
adc
inc
xchg
sub
imulb
add
adc
pop
leave
xchg
mov
jmp
pushaw
pop
das
sub
sub
clc
nop
ret
inc
lds
mov
fwait
call
mov
lahf
addr16
int3
push
add
popa
inc
rcl
xchg
xchg
sub
dec
dec
stos
xchg
inc
sbb
inc
fildll
jg
or
jle
or
cmp
je
mov
mov
repnz
sub
fisubrs
je
push
test
xchg
in
cwtl
sahf
or
fdivr
add
dec
add
out
adc
dec
rolb
int
mov
xlat
adc
pop
add
cmp
hlt
lahf
lret
mov
jmp
andl
int
or
aam
cmpsb
jb
lret
xchg
test
xchg
sub
cmp
stos
adc
add
cmp
fiadds
mov
sbb
cmp
sub
mov
mov
push
pop
mov
repz
das
orb
dec
add
sub
xor
cmpsl
ret
int3
loopne
cmp
adc
stos
push
inc
pop
or
lods
fsubr
leave
push
push
sub
fwait
sub
add
jmp
sbb
dec
inc
insl
mov
je
iret
mov
je
pusha
cmp
add
sub
fcmovu
adc
pop
test
add
sbb
cmpsl
je
mov
insl
hlt
dec
daa
out
lock
push
cmp
fstpl
gs
push
mov
in
cs
in
test
sbb
xchg
xchg
in
mov
das
jnp
mov
pop
lods
lret
cmp
lret
outsl
lahf
xorl
jb
in
mov
dec
out
xchg
scas
inc
imul
pop
sbb
mov
push
pop
push
repnz
jnp
xchg
xlat
xor
jne
rorl
scas
inc
fisubs
cmp
add
inc
inc
loopne
out
and
mov
ds
inc
icebp
std
outsb
sub
mov
loopne
ljmp
cs
push
imul
addr16
mov
mov
add
xchg
sti
pusha
xchg
sub
into
fnop
push
xchg
imul
popa
ljmp
les
xchg
cmp
std
ja
add
scas
pop
push
pushf
das
mov
mov
repz
add
pop
push
inc
xchg
add
adc
insb
mov
or
mov
test
push
push
xchg
test
int3
aaa
sbb
rolb
add
xor
jae
stos
adc
push
add
mov
lods
xor
sbb
js
xchg
pop
mov
inc
adc
inc
ss
fldt
outsb
ljmp
es
lock
pushf
mov
outsb
sub
std
push
es
and
in
jle
pop
xchg
jo
push
je
nop
and
push
mov
jb
inc
stos
shll
js
aad
dec
std
test
inc
ss
scas
cwtl
das
push
xlat
stos
outsl
aam
sti
mov
mov
imul
dec
sub
fldl
and
out
xor
pop
sub
into
inc
jle
pop
movsb
inc
fsubrs
mov
cmp
lret
cmp
pop
xchg
add
dec
xor
lods
or
push
push
sub
roll
shl
or
stos
mov
mov
in
sub
cs
xchg
sbb
out
and
sbb
sarl
enter
mov
and
cmp
xor
and
leave
jbe
vmovntpd
push
popf
add
insl
faddl
xchg
add
popa
cmc
rolb
sbb
xchg
loopne
test
mov
jl
push
xor
sbb
scas
pusha
gs
outsl
ficoms
rorb
adc
dec
loopne
andl
imul
push
jns
jbe
mov
adc
mov
and
ret
fistpl
xchg
adc
cmp
loop
mov
rclb
insl
movsb
fistl
pop
xchg
dec
sbb
in
push
sub
iret
inc
insl
scas
pop
xchg
cltd
in
cmp
mov
sub
push
mov
leave
subl
mov
je
out
repnz
int3
das
test
jne
mov
inc
js
or
push
pop
hlt
mov
popa
test
outsb
shr
incl
inc
xchg
out
test
sbbb
loop
pop
pop
push
sub
mov
bound
mov
repz
jae
enter
add
leave
sti
dec
test
out
call
add
cmp
inc
dec
mov
cmp
inc
inc
in
ss
ljmp
sub
out
inc
xor
gs
cmpsb
test
dec
loope
jle
lahf
mov
cwtl
push
and
mov
sbb
cmp
stos
rcrl
pop
hlt
adc
sub
cmpsb
push
data16
sbb
xchg
mov
adc
adc
dec
and
xchg
ret
dec
lds
xchg
daa
sub
mov
pop
jno
sti
sbb
inc
cmpl
loopne
mov
sti
mov
nop
mov
cmpb
jle
test
push
fildll
add
or
mov
lcall
leave
mov
test
cmpsb
jge
scas
in
int3
or
idivb
rcl
push
or
inc
jle
fstp
ret
sarl
push
cld
xchg
jecxz
mov
in
inc
inc
push
add
pop
sub
push
mov
imul
lret
lds
scas
push
imull
xorb
push
testl
dec
adc
inc
xlat
aad
ss
out
arpl
sub
rolb
push
pusha
shll
add
mov
pop
lds
pop
pushf
pop
xchg
sbbb
sbb
sub
mov
mov
scas
mov
cmc
sbb
fldenv
clc
mov
cwtl
mov
mov
push
subl
aas
hlt
push
xchg
aas
sarb
add
jmp
jnp
mov
cmc
adcb
sbb
pop
lahf
xor
leave
adc
clc
xchg
punpcklbw
and
data16
xchg
xor
ss
xor
sub
mov
sub
dec
popf
dec
cmp
sti
stos
inc
push
popf
loop
sub
lods
call
out
or
jl
mov
imul
out
jge
das
mov
jp
daa
int3
xor
push
rclb
mov
stos
outsl
dec
push
or
xor
cli
xchg
loop
lods
or
sub
call
fdivl
mov
aam
mov
movntps
mov
imul
aas
loopne
mov
dec
stos
insb
test
lods
add
jl
lret
sub
and
push
or
dec
clc
lea
cld
in
sbb
pop
cli
add
jmp
ret
dec
pop
mov
sub
sub
leave
stos
out
lock
mov
dec
adc
out
aas
pop
mov
add
iret
dec
mov
stos
mov
inc
enter
fnstcw
mov
outsl
inc
cmp
fdivrs
fnstsw
adcl
xor
pusha
out
orl
and
push
and
dec
cltd
mov
aaa
out
and
lods
sub
aas
xor
and
out
pop
leave
sub
stos
nop
mul
mov
pop
loop
shll
fwait
or
test
lods
or
daa
xor
add
xchg
bound
les
in
pop
cmp
cmp
fwait
ja
or
cmp
inc
mov
jg
mov
int3
mov
push
lock
jg
and
cmp
mov
call
jb
sbb
daa
jg
inc
lods
in
xchg
push
sbb
push
mov
testl
cld
and
rolb
adc
es
mov
or
lahf
sub
ret
and
add
andb
xlat
mov
push
fcom
out
icebp
pop
stc
fimull
clc
lods
fdivl
scas
mov
xchg
sub
icebp
push
push
add
aad
xchg
sub
popf
je
xchg
rcll
mov
add
fcoml
movsb
fstps
jne
shr
mov
rolb
loopne
subb
inc
sbb
dec
test
into
push
mov
addl
mov
in
rep
in
es
lret
inc
sub
sti
cmc
sub
scas
lret
sbb
in
insl
mov
and
xchg
stos
cmpsl
jns
leave
mov
ret
pop
leave
rcrl
scas
xchg
iret
les
shrl
or
mov
pop
push
adc
icebp
mov
mov
cmp
imul
movsb
push
lcall
adc
shll
outsl
or
testb
inc
fscale
scas
add
jmp
imul
xlat
scas
int
add
jle
dec
fcoml
mov
mov
loope
nop
lods
mov
je
push
jle
jbe
push
jmp
stc
cwtl
push
pop
in
jg
pop
stos
repnz
jmp
fsubrs
push
xor
rcrl
lret
mov
out
mov
stos
xchg
dec
mov
push
lret
sti
stos
mov
pop
cmp
sub
cmpl
mulb
inc
stc
daa
inc
test
bound
inc
jle
aaa
mov
or
xor
fprem
xchg
and
sub
dec
or
push
je
gs
data16
mov
shll
shlb
mov
cmp
xor
dec
xor
or
xchg
push
out
push
dec
popf
rorl
mov
mov
xchg
jnp
insb
fs
in
jne
pop
shll
inc
loope
push
lcall
sbb
adc
sti
fistl
mov
pop
fwait
jae
pop
rorb
sbb
pusha
sub
mov
ret
mov
pusha
dec
call
pop
shlb
leave
pop
lods
int3
js
inc
sbb
lret
xchg
in
cmp
xlat
vpunpcklqdq
ret
hlt
mov
mov
call
daa
outsb
sub
pop
hlt
cmp
test
popf
das
push
iret
inc
icebp
or
subb
mov
xchg
out
push
jo
daa
push
dec
push
add
lcall
mov
adc
mov
sub
adc
fldenv
dec
imul
cwtl
fs
ja
les
in
jbe
test
dec
int3
mov
pushf
in
daa
cmp
in
jns
out
jne
sub
in
jg
adc
jns
cmpsb
fs
icebp
inc
push
adc
cmp
in
cmp
fs
adc
repz
mov
inc
es
jnp
sub
pop
or
lock
jp
push
pop
popa
outsl
dec
ret
xor
stos
test
cmp
mov
push
lcall
notl
lea
fmull
jp
int3
xchg
cmp
add
insb
xor
aam
test
test
push
xchg
out
test
mov
sbb
push
pop
jl
shrb
call
movsb
push
stc
sbb
sbb
sbb
out
mov
int
pop
insl
daa
mov
pop
orl
sahf
inc
mov
jb
pusha
leave
or
pop
cmp
movsl
lds
push
out
jne
andb
jge
sub
jne
mov
cld
orb
inc
cli
inc
jb
lret
dec
push
xorb
int
push
ss
sbb
movsl
js
sub
inc
pop
hlt
loope
and
or
add
and
mov
aas
es
dec
fdivl
notl
shl
rolb
add
sub
aad
mov
adc
movsl
and
lcall
pop
or
dec
mov
adc
int3
jge
or
andb
pop
and
arpl
jno
movsl
cmpsl
pop
push
cmp
push
inc
xchg
mov
fisubl
aad
stc
mov
pop
movsl
popf
rcr
mov
stc
or
fistpll
pop
cli
add
sub
cmpsl
les
imul
mov
push
jb
cli
nop
shlb
push
test
and
cmp
insl
pop
enter
cmp
pushf
ficoml
jl
into
sbb
lock
aas
inc
and
scas
dec
dec
sub
add
out
pop
scas
iret
test
pop
push
lea
popf
std
pop
cmp
popf
cmovae
stc
out
hlt
insl
scas
sbb
ja
pop
loop
xor
imul
int3
adc
scas
dec
push
data16
dec
add
or
mov
push
test
jb
or
inc
push
daa
outsb
nop
fidivrs
push
testl
adc
dec
xchg
ljmp
movb
push
sbb
or
sti
idivl
lds
jmp
jbe
mov
cmpsl
popa
data16
gs
cmc
xor
mov
ret
cmp
fwait
hlt
cmp
lds
jecxz
dec
sti
inc
test
out
xor
jp
and
cmpb
sub
clc
xor
pop
xchg
int
inc
add
nop
jp,pn
jle
xor
subl
iret
dec
cs
rcrl
jne
iret
pusha
ja
mov
adc
inc
mov
shll
dec
adc
scas
psubsb
hlt
sub
push
adc
aad
iret
mov
nop
jnp
data16
aad
mov
mov
inc
int3
fcompl
aad
fiaddl
sbb
push
ss
sub
inc
fimull
mov
out
pop
push
notb
mov
test
xchg
or
aam
js
fdivl
fcomp
adc
xchg
stc
sub
jmp
insb
pop
imul
jge
shlb
repnz
sbb
insl
push
fidivl
int3
xchg
mov
out
lea
cli
shl
outsl
and
or
lea
dec
aas
jg
pusha
cmp
cli
pushf
in
or
leave
push
adcb
jle
test
lock
xchg
scas
push
dec
dec
jge
push
inc
pusha
jmp
jbe
and
mov
mov
in
xlat
cli
lock
sbb
shrb
movsb
dec
data16
add
mov
jmp
push
cli
imul
cld
or
pop
jnp
inc
fisubl
stos
add
fldpi
subb
adc
lret
push
fstl
mov
ret
sbb
xchg
cmp
adc
aas
push
cmp
popf
ljmp
adc
adc
inc
sbb
sub
gs
pusha
xchg
push
scas
nop
adc
shll
push
rcl
pop
addr16
push
xlat
mov
sub
stos
pop
leave
loopne
xchg
mov
ret
push
int3
jge
ss
push
pusha
xchg
ret
cld
mov
clc
cmpsl
jp
adc
ja
fsubrs
pop
sbb
loope
mov
push
jmp
fchs
and
lret
mov
add
cmp
xchg
push
pusha
inc
push
mov
rorb
cmc
jmp
jo
sub
imul
stos
sbb
xlat
mov
in
dec
mov
leave
test
push
add
sti
aas
mov
leave
loop
ficoms
or
adc
into
jmp
jmp
mov
mull
orb
mov
popf
xchg
xor
mov
int
mov
enter
dec
daa
cld
dec
fdivrs
push
pop
mov
loope
jg
cmp
bound
pop
in
pop
into
jmp
inc
leave
mov
stos
shrl
xchg
xchg
xor
jo
rolb
inc
mov
loopne
loop
push
xor
inc
dec
aaa
pop
push
adc
and
push
pop
daa
mov
scas
or
jne
imul
add
sub
aaa
dec
es
mov
outsl
push
cmc
cmc
sbb
cmp
out
sbb
testb
and
inc
mov
test
add
rol
lcall
mov
imul
outsl
cmpb
movsl
das
fisttps
sub
mov
pop
nop
mov
mov
dec
xchg
xchg
push
fmull
jno
shll
popf
xchg
js
cmp
xchg
sbb
pop
mov
xor
shrl
mov
nop
add
stc
dec
test
ja
mov
dec
pop
xchg
pop
cmp
inc
mov
fmuls
imul
add
xor
inc
into
or
mov
push
mov
mov
xor
out
rcll
int3
test
movntps
fs
or
xchg
cmp
es
sub
les
mov
popa
dec
xchg
insl
test
cmp
inc
mov
pop
jae
lcall
mov
mulb
sqrtps
inc
push
inc
sub
pop
shl
and
test
out
into
pusha
icebp
dec
adcb
popa
out
fimuls
loopne
jbe
pop
int
shl
or
jmp
jns
test
ret
mov
cmp
push
pop
sub
add
jecxz
push
jae
imul
scas
dec
sub
mov
or
jae
popa
in
loopne
out
xchg
jmp
lret
mov
loopne
inc
pushf
pop
lcall
stos
test
gs
jbe
shr
and
pop
and
push
cmc
cmpsl
push
mov
push
push
popf
sub
mov
inc
mov
jnp
sbb
ret
cmpsl
xchg
les
or
pcmpeqd
pushf
in
lret
fwait
pop
and
cld
incb
std
push
ficoml
out
test
add
mov
jbe
cs
push
divb
and
std
imul
jo
les
xor
lcall
mov
push
pop
mov
pop
inc
adc
sub
mov
adc
insl
adc
jne
cwtl
mov
add
lods
lea
mov
in
mov
add
jle
rcrl
popa
in
fwait
out
sbb
int3
lock
mov
jge
lahf
dec
pop
xor
fmul
fs
ja
mov
pusha
lock
std
mov
dec
insl
in
test
je
jecxz
gs
or
je
outsb
cli
or
add
mov
aam
push
pop
stos
xor
cmp
orl
and
enter
or
xor
lcall
pop
fsubl
lahf
xchg
mov
pop
cmp
mov
lods
outsl
add
scas
lods
add
ds
lcall
or
sub
add
mov
fisttpll
test
les
or
aas
dec
jb
daa
add
and
nop
lret
push
aam
shrb
xchg
push
iret
xor
lods
pop
jl
mov
cmpb
inc
mov
jo
lahf
push
mov
xchg
cmpsl
mov
fsub
ja
xor
inc
mov
sbb
lret
add
cmpsl
aam
outsl
fldcw
xchg
add
cmpsb
psubsw
ret
mov
pop
or
movb
insl
repnz
nop
cwtl
pusha
les
cmpsl
lds
inc
ds
pop
jle
xor
dec
push
ljmp
adc
les
clc
pushl
mov
xchg
int3
push
repz
sbb
cmpsb
jmp
mov
out
pop
or
cmp
xchg
in
adc
fisttpl
xchg
lea
mov
mov
or
in
call
ss
arpl
fists
jp
insb
sub
xchg
shrl
ret
cmpsl
and
mov
push
cmc
aad
or
ss
mov
mov
pusha
push
lcall
xchg
mov
lret
cld
sub
jle
in
dec
fsubrl
sub
jl
dec
das
stos
out
mov
inc
pmaxub
ja
cltd
cmp
sti
rcrb
sub
ret
int
sub
cmp
mov
arpl
pusha
adc
fimull
sti
das
test
inc
push
push
scas
cmc
insl
stc
das
cmp
xor
in
dec
mov
out
adc
cld
test
aam
enter
cwtl
cmp
lds
add
sar
loope
das
sbb
xor
iret
fsubl
pop
cmp
or
pop
vmwrite
sahf
fdivr
pop
std
jmp
shr
out
jmp
lahf
adc
mov
test
sbb
sub
jge
mov
sti
and
pop
lods
add
fimuls
mov
jl
jp
imul
sarl
xchg
ja
mov
mov
and
mov
repnz
push
movsl
push
hlt
add
fwait
test
pop
sbb
push
add
xchg
pushf
or
push
push
add
testl
mov
paddusb
icebp
inc
ss
loopne
scas
stos
jmp
fcmovb
or
jecxz
inc
loope
out
sbb
ds
xor
xchg
cmc
xchg
mov
mov
cmp
scas
and
add
nop
jne
or
or
jle
mov
movl
lods
fwait
loopne
int3
sbb
and
addb
jae
lea
shrl
insb
pop
mov
rolb
aas
xor
mov
outsb
jmp
jmp
mov
hlt
mov
mov
mov
clc
pop
jbe
sub
mov
out
sub
ds
imul
adc
lahf
mov
jnp
xchg
mov
lods
inc
and
gs
jl
test
mov
and
add
push
ret
outsl
icebp
cmpsb
hlt
insl
xor
jg
andl
dec
inc
inc
xlat
lahf
leave
in
frstor
sbb
jnp
jmp
arpl
fimull
cld
push
aaa
push
fstps
xchg
push
les
push
mov
add
ss
jp
data16
jne
fadds
jecxz
cli
pop
cmp
in
dec
cmc
cmp
lods
jmp
xor
push
std
imul
hlt
jmp
cmpsb
mov
mov
imul
fists
and
loop
adc
pop
pop
mov
out
inc
xchg
sub
sub
sub
sub
out
ror
es
add
fldcw
mov
pop
fiaddl
in
or
imul
jae
mov
into
jb
push
xchg
lods
nop
jo
mov
fisubrs
movsb
insb
pop
cmp
inc
push
rorl
inc
divl
sbb
jae
mov
adc
dec
pusha
xchg
iret
sub
push
ja
mov
push
cmp
pop
ss
xor
std
cmpsb
dec
out
mov
cmp
or
in
ficoml
add
movsb
or
push
and
daa
fmuls
sbb
push
push
addl
js
and
out
mov
pop
faddl
daa
jns
push
daa
mov
mov
or
and
mov
pop
lcall
pop
xor
dec
cmp
and
xchg
sub
push
push
cmp
sub
cs
dec
iret
pop
pop
cmp
js
lods
sub
dec
mov
out
xor
aad
and
push
outsb
ja
push
xlat
sub
push
lods
xor
sbb
inc
dec
mov
mov
scas
and
sub
pop
dec
or
cltd
cmc
call
cmp
cs
pusha
scas
dec
xchg
arpl
bound
aad
inc
vhaddpd
sti
fstl
adc
or
xor
sti
pop
push
aam
les
and
sub
lods
es
push
rcrb
fiadds
bnd
mov
repnz
cld
jecxz
imul
and
inc
dec
lods
shlb
push
xor
cmp
jp
mov
mov
gs
jge
in
cmc
mov
mov
test
stc
or
dec
int
filds
jge
mov
xor
arpl
lcall
sbb
rolb
add
leave
add
mov
loop
and
jle
xchg
mov
fnstenv
jb
add
mov
adcb
inc
adc
adc
arpl
or
cmpsl
inc
call
stc
dec
pop
xlat
gs
in
cld
negl
sti
movsl
push
rcll
ja
pop
fildl
repnz
push
xor
dec
pop
or
fs
cmp
arpl
data16
lods
adc
pop
push
xchg
or
in
or
cmp
loopne
mov
push
hlt
mov
ja
add
mov
lds
mov
hlt
add
sub
dec
mov
pop
lret
add
je
sahf
jb
push
push
fbstp
adc
jp
add
mov
icebp
subl
sub
dec
sub
ds
pop
js
pop
mov
fwait
mov
sti
sbb
popa
in
push
ret
les
ljmp
sbb
movsl
mov
insl
pusha
and
mov
mov
ret
dec
lock
dec
inc
mov
adc
jecxz
or
and
ret
push
push
pop
test
iret
cmp
and
push
push
out
jnp
mov
das
loope
push
repnz
fists
fdiv
adc
daa
rcr
xor
add
adc
outsl
fldz
aas
sub
or
imul
jl
jae
and
loope
inc
xor
aam
repnz
call
imul
cmp
stos
add
mov
les
fldcw
adc
jbe
outsl
cmp
push
pop
loop
jp
xchg
ret
lahf
iret
sub
and
adc
jae
mov
mov
jecxz
ds
push
out
add
fstps
push
and
filds
mov
dec
scas
adc
lods
jl
rcrb
mov
ret
sarb
sti
xchg
dec
fwait
inc
mov
inc
stos
repz
in
jp
add
or
int3
je
sbbl
jecxz
test
aas
je
push
cs
aas
push
mov
inc
cmpsl
shll
mov
pop
pop
xchg
std
push
dec
into
adc
mov
mov
xor
pop
mov
subl
test
dec
stc
mov
std
inc
ret
xor
dec
test
push
or
adc
imul
push
push
adc
add
bound
jmp
push
paddusb
test
clc
cmpl
cs
pop
or
aad
push
jo
mov
in
cmp
push
mov
scas
pop
inc
inc
mov
push
push
outsl
daa
bound
jecxz
std
xor
mov
loope
sbb
mov
aas
pop
mov
inc
xchg
stos
std
or
or
lcall
test
lods
decl
int3
xchg
mov
je
lds
xor
cltd
fcmovnu
fistl
inc
and
das
fsubl
and
lods
fistps
sti
sub
xchg
mov
shlb
pushf
xor
popf
sbb
xchg
pop
mov
add
and
das
fs
xchg
jbe
xchg
xchg
fcmovnb
mov
std
call
xor
push
int3
dec
adc
fs
out
das
adc
movsb
sub
lret
mov
jnp
pop
nop
sbb
adc
pop
push
jae
std
daa
sbb
mov
push
xorb
xchg
imull
cld
iret
jns
sbb
cmc
cld
mov
cmpsb
rcl
mov
xor
int
dec
daa
inc
sarl
shrb
push
insb
inc
mov
shll
push
xchg
mov
in
test
mov
and
jne
lods
fcom
mov
mov
fisubl
in
aad
mov
adc
out
jo
shrl
xchg
cli
rcrb
hlt
or
orb
or
pushf
inc
data16
sahf
pop
lods
pop
adc
je
rorb
mov
push
outsb
inc
jmp
andl
jg
and
adc
lods
icebp
inc
dec
aam
xchg
shll
out
gs
je
push
rolb
aam
or
loop
add
push
enter
stos
jp
insl
inc
pusha
mov
mov
lock
push
aam
jnp
xor
pop
jno
insl
xor
aas
adcl
dec
int
mov
insb
push
mov
mov
jne
sub
imul
push
push
mov
cmp
jo
hlt
dec
fs
xlat
sub
in
fwait
out
aas
pop
cwtl
fcoml
mov
aaa
lods
pop
add
je
pop
ret
adc
cmpsb
pop
stc
loope
outsb
cmp
jmp
int3
cmc
xor
inc
adc
push
out
pusha
push
jge
jno
push
mov
xor
inc
repz
xchg
loop
sbb
inc
mov
lock
in
stos
mov
filds
dec
pop
push
insb
mov
mov
icebp
fiadds
movsb
arpl
or
xor
lar
sbbb
mov
jns
pop
mov
lahf
movsl
out
jns
fs
mov
cld
roll
cmp
and
adc
insb
lahf
dec
out
stos
inc
test
jmp
pop
lret
popa
cmp
ja
cmpl
dec
sbb
push
andl
popf
scas
les
cltd
jae
xor
mov
jbe
orb
cmpsb
cmpsl
or
pop
lea
movsb
fdivrp
or
or
pusha
and
push
gs
scas
sbb
aam
sbb
adc
and
clc
jg
lds
sub
pop
subl
cltd
jmp
adc
outsb
add
ret
mov
push
dec
inc
in
xor
or
cli
arpl
mov
mov
int
mov
movsb
xchg
mov
out
dec
and
push
icebp
pusha
shl
movsb
push
xchg
in
sbb
int
pop
imul
xor
fadd
cmpsl
cwtl
fidivl
lahf
jbe
bound
sub
mov
hlt
jecxz
movsb
mov
js
mov
fs
aaa
and
sub
mov
add
imul
dec
and
js
pop
cmp
movb
popa
pop
mov
in
mov
addb
call
and
aaa
sub
sub
mov
lcall
out
inc
jle
out
test
xor
push
pop
and
cmp
nop
out
call
mov
pop
sub
into
popf
jno
jmp
fmuls
notb
pop
pop
xlat
dec
jg
mov
xor
sub
aam
loope
push
and
imul
mov
nop
pushf
neg
mov
loopne
xchg
mov
adc
mov
cld
and
inc
inc
in
push
loop
mov
fisttps
push
insl
jns
push
push
dec
cmp
push
xor
pop
pusha
cmp
int3
jns
imul
jno
hlt
pop
testb
je
mov
add
and
push
orb
cmpsb
jmp
leave
cmp
in
js
pop
in
xchg
daa
cmc
lcall
or
mov
mov
addr16
xlat
arpl
push
jb
aaa
test
sbb
inc
jb
ljmp
in
cmp
push
or
cmp
pop
lock
aam
addr16
jo
mov
ret
sbb
aad
out
out
xor
popf
xchg
cs
pop
dec
outsl
pop
sub
mov
icebp
pop
dec
mov
fs
sarb
pop
dec
xor
adc
fldt
jl
jns
into
xchg
inc
mov
rclb
mov
and
je
or
stos
pop
sub
pop
clc
jmpw
scas
in
sbb
or
loop
mov
inc
addr16
addr16
mov
push
outsb
cs
outsb
rorl
sub
gs
andb
add
outsb
lea
xchg
aad
adc
outsl
xchg
test
ss
stc
and
xor
scas
or
inc
rcrb
push
cmp
push
popa
loope
jp
lods
je
cld
lods
ja
insb
outsb
sub
ds
ja
repnz
gs
sub
xor
fbld
es
inc
lods
push
pop
sub
sub
div
inc
fcmove
rorl
sub
mov
subb
repz
jmp
cltd
ja
push
lods
and
pop
push
ds
rolb
clc
mov
cld
sbb
inc
inc
xchg
cli
xchg
pop
stos
push
mov
idivl
push
xor
adc
movsl
xor
xor
aam
aam
hlt
add
lret
into
sbbb
insl
lahf
scas
imul
add
rsqrtps
dec
loop
cmc
lods
push
jb
aaa
inc
xchg
push
xchg
mov
mov
enter
stos
ljmp
and
out
push
and
push
push
inc
mov
pushf
mov
femms
enter
sub
cmpsb
test
xor
cltd
inc
sbb
pop
jbe
addb
test
push
jnp
dec
stos
pop
fdivs
xchg
insb
jns
insl
iret
data16
inc
mov
push
loopne
in
imul
popf
es
mov
adc
roll
cmp
sbb
enter
fs
outsb
les
and
sub
scas
mov
inc
mov
add
add
pop
xchg
sub
sub
push
mov
aad
pop
ds
je
inc
test
push
aas
push
xlat
pop
adc
lea
cmpl
sbb
lret
ficoms
sub
out
push
hlt
inc
push
cmpsb
cli
adc
pop
scas
xlat
div
mov
int
jecxz
add
fcmovnbe
jno
sub
inc
ret
jge
loope
imul
cs
pop
ficompl
bound
mov
jno
outsl
aaa
rorb
push
cmpb
mov
jmp
jno
push
data16
imul
outsl
jl
cmc
push
cld
shr
scas
push
pop
jbe
add
jnp
pop
ss
dec
mov
cwtl
pop
mov
xchg
lods
mov
cmpl
repnz
pop
adc
lcall
stos
and
iret
imul
stos
out
adc
mov
js
jl
mov
jbe
arpl
fs
cmpsb
pop
and
idivl
add
mov
pop
inc
sub
out
or
sub
fstl
fadd
fcoml
lods
enter
fisubrl
push
jl
hlt
or
mov
jle
fiaddl
sub
dec
dec
jge
cwtl
mov
stos
out
lret
mov
pop
clc
or
sub
sub
mov
fsts
adc
shrb
inc
rclb
jb
cmpb
add
test
cmp
je
dec
mov
dec
out
pop
js
call
inc
adc
pushf
cmpsb
pop
mov
outsl
fsts
push
movsl
and
aaa
popf
sbb
dec
roll
rcrb
sbb
fwait
pop
sub
xchg
pop
mov
jp
rolb
pop
mov
mov
mov
jp
mov
js
inc
lods
xchg
pop
mov
mov
and
mov
add
icebp
scas
ljmp
popf
out
sub
add
push
dec
sbb
js
push
jo
dec
or
dec
xchg
aaa
sub
cwtl
and
daa
repz
shlb
lea
xchg
nop
pop
sub
in
loopne
cld
loop
mov
mov
int3
fdivrl
jne
xor
adc
mov
shrb
cli
sbb
enter
adc
mov
and
xchg
xchg
dec
jle
add
mov
jae
repz
cmp
xor
mov
push
adc
mov
lock
xlat
aas
jge
lahf
inc
pop
push
inc
fidivrl
and
sub
mov
mov
rorl
add
shll
mov
mov
pop
jne
rcll
insl
or
aam
arpl
scas
shll
dec
bound
fsubl
pop
pop
dec
sbb
mov
arpl
mov
les
into
jle
mov
pop
jb
outsb
sub
sarb
popf
repnz
and
sbb
mov
cli
gs
aaa
xchg
dec
mov
daa
cmp
sub
cmp
clc
insb
mov
repz
mov
loopne
out
mov
push
xchg
xchg
enter
repz
pop
inc
pop
lods
mov
sahf
sbb
loopne
xlat
outsb
mov
in
xor
scas
xchg
lea
sub
xor
int
lret
aad
mov
in
ret
pushf
jp
push
into
dec
ret
jg
cld
int3
sub
mov
mov
jmp
out
inc
push
mov
outsb
rorb
nop
orb
adc
jg
aas
xlat
mov
push
jmp
push
mov
test
xchg
jae
adc
int
push
repz
lock
mov
cmp
lods
stos
or
push
push
cmc
sbb
sbb
cli
fimuls
dec
or
add
aaa
shlb
add
sub
xor
and
add
das
add
gs
imul
lock
cmpsl
sbb
sub
xchg
fstenv
loop
add
xchg
out
ficoms
jne
repnz
int
jo
adc
in
std
orl
aaa
das
cld
jne
arpl
dec
aaa
bound
xor
add
pop
out
add
in
jno
jne
push
js
sub
xor
hlt
out
and
notb
inc
lea
rclb
xor
arpl
stos
pop
dec
lds
jae
add
push
xor
in
aad
jp
aam
xor
ja
lcall
lods
rcl
dec
cmp
lods
pcmpeqw
push
iret
cwtl
cwtl
sti
push
test
std
ret
lods
pushfw
lods
mov
inc
daa
lds
jno
sub
push
ljmp
pusha
fimuls
call
inc
ss
ljmp
xlat
cmp
add
xlat
pop
xor
push
sub
cmc
adc
push
leave
in
cli
add
and
or
rclb
mov
push
inc
clc
aad
dec
sarb
xor
out
ljmp
ja
fiadds
jb
jb
pop
fs
xor
add
mov
xchg
bound
gs
daa
xchg
or
fisubl
in
jmp
jno
mov
rcrb
lahf
loope,pn
dec
stos
add
sub
fisttpll
pop
cli
xor
mov
ljmp
imul
fxch
stos
scas
cmp
mov
cmp
xchg
fwait
shll
xor
cmp
repz
mov
push
sbb
dec
shll
sub
add
xchg
dec
mov
push
lahf
repnz
mov
push
fcoms
out
push
inc
fnstsw
out
dec
and
or
sarl
add
cli
in
sbb
mov
test
add
pop
pop
add
jo
or
andl
aas
inc
mov
dec
rorl
out
or
testl
xor
adc
popf
fidivrl
repnz
jle
sarl
xchg
fildll
cmp
es
mov
dec
mov
mov
aas
rorl
aam
shrl
pop
mov
fdivl
aaa
push
mov
adc
ja
mov
push
scas
dec
pop
sti
mov
sar
sub
loop
push
jbe
stos
bound
xchg
fnstenv
jmp
insl
in
jge
lds
adc
sarb
fsubrl
inc
dec
sbb
sbb
ja
dec
cmpsl
lret
in
xchg
mov
jo
call
cwtl
repz
inc
scas
inc
inc
inc
cmp
and
pop
lods
adc
into
test
pop
lods
stc
push
cmp
add
cld
das
iret
jb
xchg
mov
movsb
xchg
ja
int3
pop
lahf
mov
jno
and
lahf
jp
cwtl
mov
xlat
mov
mov
in
aas
lods
fs
lret
je
into
xchg
adc
fwait
je
into
mov
std
or
xchg
test
cmp
das
idivl
outsl
mov
pop
sahf
jbe
push
sbb
jle
push
fwait
and
mov
and
mov
pop
xchg
pusha
sbb
mov
lahf
icebp
cmpsl
dec
or
insb
mov
pop
je
call
sbb
rol
jnp
push
icebp
push
fwait
js
mov
add
ds
iret
xchg
jmp
mov
sarb
push
lds
rol
scas
mov
xchg
mov
xchg
fcoms
leave
test
pop
andb
stos
dec
les
mov
or
imul
fwait
sti
loope
ja
xchg
imul
data16
adc
and
arpl
add
ret
push
push
and
jle
daa
loop
loope
loop
dec
test
pushf
mov
fcoms
pop
das
add
cs
push
adc
jp
imul
jp
ja
dec
push
insl
mov
mov
sbb
adc
jns
cltd
jmp
push
fcmovb
mov
inc
xchg
pop
mov
mov
or
inc
nop
dec
aad
fsts
clc
dec
fabs
pop
xchg
out
mov
wbinvd
inc
pushf
imul
nop
push
sarl
push
jl
arpl
pop
push
icebp
in
inc
das
rolb
faddl
inc
mov
stos
outsb
pop
jmp
sub
cmp
xchg
mov
or
loop
and
inc
lods
xlat
popa
lds
dec
xchg
cmc
flds
jne
ret
arpl
repnz
cs
and
pop
out
daa
xchg
leave
pusha
xlat
and
cmp
scas
pop
ljmp
xor
lcall
dec
faddp
paddsb
leave
push
scas
dec
sahf
push
mov
iret
loope
mov
movsl
inc
or
mov
jns
stc
and
jbe
ret
outsl
in
std
or
mov
adc
cmp
mov
testl
and
and
pusha
lea
jge
int
idivl
aad
aam
lret
mov
out
iret
leave
or
not
pusha
mov
out
mov
adc
cs
jg
inc
push
movaps
in
js
jno
pop
call
outsl
roll
sub
ret
icebp
adc
iret
push
int
ja
nop
lcall
pop
lock
repnz
fisubs
pop
and
pop
data16
rolb
cmc
jnp
out
dec
nop
push
lret
pop
pop
clc
scas
lcall
push
imul
ja
repz
xorl
ret
shrl
cli
aaa
out
sub
or
cmp
shlb
lds
movsb
sahf
pusha
mov
pop
clc
ja
add
push
vmwrite
mov
xor
or
adc
popf
subl
popf
lret
pop
xlat
cmp
out
sub
sub
xor
push
cmp
out
sbb
xchg
loop
mov
cmp
or
mov
push
dec
gs
fsubl
cmp
fadd
cmp
push
xchg
xchg
aam
xlat
xchg
pop
mov
dec
pusha
inc
mov
stos
mov
sbb
push
cltd
adc
out
sbb
iret
or
xchg
ret
pop
js
pop
mov
and
cld
pop
orl
mov
iret
in
fisubrl
dec
ret
das
mov
pop
cli
cmc
nop
jl
sub
mov
in
dec
sub
shlb
and
insb
push
xlat
mov
mov
imul
pop
les
jae
sub
cmpsl
dec
popl
xchg
dec
test
mov
xor
or
push
aad
imul
cmp
lds
mov
lret
jbe
pop
jno
jecxz
add
push
es
out
xchg
push
adc
sbb
push
fsubrs
mov
adc
call
ret
int3
mov
out
inc
mov
push
repz
sub
xor
xor
dec
jnp
inc
lods
adc
xchg
mov
bound
sbb
mov
or
xchg
inc
cli
stos
xchg
aaa
int
out
mov
popf
into
out
lret
mov
jo
test
inc
pop
or
repnz
nop
scas
cmc
xchg
int
jge
jp
loop
jecxz
mov
js
roll
mov
outsl
cmpsb
mov
lcall
add
push
cmp
push
mov
add
adc
lahf
jnp
mov
pusha
mov
cmp
jmp
add
std
jg
fimuls
lahf
cmpsb
cmpl
loop
test
xchg
nop
jl
repnz
aas
add
jno
add
pop
adc
sbb
shrl
mov
cld
neg
sub
push
cmp
bound
je
or
mov
shrl
dec
pop
and
cmpsb
test
in
sbb
cltd
jmp
or
mov
lcall
push
imul
or
jnp
lock
jge
ja
repnz
rorb
mov
xor
je
scas
pop
xchg
out
into
push
in
mov
faddp
sti
jb
repz
fisubs
out
sub
adc
cmp
mov
and
and
cmp
movsl
gs
cltd
and
mov
xchg
repz
xor
adc
add
bound
push
mov
xor
mov
loop
stos
mov
push
sti
xchg
jge
repz
mov
pop
xor
sub
adc
insb
push
test
xor
push
mov
sbb
fcomi
aaa
lods
pop
js
fwait
inc
jl
pop
mov
cmp
mov
sub
call
or
mov
cld
sub
dec
mov
scas
pop
insl
jb
cs
pop
add
cmpl
jmp
out
clc
stos
test
xchg
js
xchg
ss
stc
rolb
pop
cmp
add
push
jb
cmp
mov
stc
lahf
mov
aaa
xchg
inc
in
mov
test
pop
cmc
inc
or
cmp
sbb
inc
into
sbb
cwtl
adc
lret
out
rorl
in
pop
cld
pushl
test
sbb
outsb
mov
cmpb
mov
xlat
outsb
mov
or
add
sbb
addl
jb
test
pushf
adc
mov
mov
dec
and
into
jecxz
das
push
mov
push
movsl
mov
jp
sub
push
fwait
cld
dec
mov
movsl
imul
or
jns
cmovno
jmp
cs
sub
test
cmp
mov
iret
aad
adc
popf
sbb
out
fildl
and
or
lock
dec
ret
mov
fisubs
test
dec
imul
lret
test
test
sahf
test
jge
jp
cs
cld
pop
orb
add
in
xchg
movsb
insb
in
std
dec
sbbl
mov
pop
ficoms
shll
cltd
sbb
sub
jp
xchg
xor
in
popf
dec
cld
mov
pop
mov
js
pop
push
dec
rcrb
adc
mov
roll
cmpsl
or
call
imul
add
shll
add
rcr
sbb
test
rdtsc
xchg
sub
cmpsb
jbe
hlt
cld
into
add
cmp
cmp
mov
imul
and
sbb
cmpb
mov
mov
lahf
out
pop
scas
stos
aam
nop
jge
inc
sub
xchg
adc
add
lret
mov
jp
xlat
push
sti
pop
and
xchg
clc
pop
mov
push
and
pop
ret
and
cmp
xchg
jg
hlt
test
adc
outsl
jg
lret
std
jp
cmpl
addr16
push
mov
lahf
mov
jbe
mov
pop
fstpl
or
xchg
jne
test
inc
in
inc
or
xor
cmpsb
and
sti
pop
push
outsb
test
or
mov
aas
shl
andb
int3
mov
pusha
addr16
fldl
arpl
ja
aad
and
aad
mov
shr
stos
int3
sbb
pop
mov
clc
in
jecxz
add
sbbb
push
lods
movsl
ds
fcmovnb
sahf
call
adc
cltd
jl
daa
mov
pop
imul
out
add
sahf
adc
sbb
out
insl
sbb
xor
mov
xchg
popa
adc
divl
lcall
addr16
jl
inc
stos
sub
stos
xchg
lock
test
icebp
mov
lret
shlb
adc
pop
add
test
loope
adc
mul
out
ss
lret
push
xchg
jmp
or
enter
out
outsb
or
into
and
dec
insb
rcrb
xor
and
pop
cwtl
inc
andl
dec
adc
into
xor
xor
inc
jnp
data16
mov
or
outsb
jns
push
mov
loop
sub
scas
sub
roll
adc
pop
sub
inc
mov
repz
xchg
xchg
aam
mov
cmp
pop
hlt
mov
dec
loope
mov
xchg
cmp
das
xchg
clc
jnp
insl
cwtl
js
adc
sub
mov
sbb
jb
sbb
ja
clc
adc
rcll
out
andb
xchg
pop
or
dec
clc
pop
cld
sbb
dec
ljmp
rorb
fs
inc
ret
mov
sub
lret
out
jns
aaa
hlt
jne
xchg
push
xchg
cmp
jae
xchg
popf
mov
mov
inc
aas
add
sub
xor
mov
into
mov
aas
pop
or
jo
adc
adc
imul
xchg
outsl
outsb
adc
ja
jl
rcrb
aam
cmp
insb
mov
imul
and
sbb
and
aad
mov
pop
cmpsb
inc
ret
mov
hlt
push
and
push
cmp
aam
ss
bound
in
outsl
pop
testl
rorl
push
mov
jmp
cwtl
mov
mov
xchg
hlt
sub
ret
xor
jecxz
inc
jmp
pop
mov
inc
sbb
cltd
cmp
aad
leave
xchg
add
loope
sbb
out
repnz
push
stc
mov
shl
xor
xor
std
cmp
jo
mov
jae
mov
sahf
and
mov
jno
mov
clc
push
leave
movsb
xchg
pushf
or
daa
xchg
cmpsb
lcall
add
cli
xchg
xor
fcmovbe
rcrb
ret
lret
out
fnstenv
mov
dec
or
add
xchg
and
inc
adc
clc
dec
fcmovnu
cld
mov
dec
sbb
jg
jne
mov
mov
and
xor
lret
int3
int
ja
mov
mov
int
mov
jmp
pop
test
or
int
jne
or
mov
jns
fwait
cmp
je
jl
inc
test
adcl
adc
popf
insb
mov
jnp
xchg
xlat
notl
sub
or
sub
inc
jg
rcll
push
add
and
mov
imul
xchg
leave
sub
pop
jmp
mov
imul
cwtl
fsubs
loope
ss
in
xlat
or
xor
and
add
jl
in
add
cld
push
mov
add
add
jp
out
sub
pop
adc
fildl
jne
jne
dec
std
test
mov
add
out
push
cltd
cmpsb
xor
lods
jmp
mov
cmp
popf
mov
or
insl
inc
insb
scas
pop
ret
imul
add
push
sbb
je
repnz
and
scas
lods
bound
adcb
xchg
push
jmp
clc
push
hlt
repz
add
and
xchg
in
push
inc
repz
xchg
or
das
push
jno
sub
xchg
je
je
inc
test
ja
insl
not
repnz
shr
adc
push
inc
inc
out
xchg
jnp
adc
add
inc
insb
pop
or
jnp
fwait
aaa
jg
xchg
lea
loopne
mov
add
aas
popa
xchg
dec
mov
out
push
push
adc
mov
scas
pop
ja
in
jle
inc
popa
cld
inc
aam
jle
add
scas
mov
das
adc
jmp
and
cld
and
and
rorb
inc
xchg
ljmp
test
leave
add
ja
ljmp
dec
or
aam
push
dec
rcr
mulb
lods
jno
xchg
ljmp
fildl
add
push
cmp
mov
sub
mov
mov
xchg
cmpsb
inc
push
push
test
fidivrl
stos
pusha
subl
out
xchg
sbb
fmul
jbe
loop
jl
sbb
add
fucomi
mov
dec
fsubl
mov
dec
stos
out
sub
cmp
pop
inc
and
outsb
sub
push
mov
mov
mov
mov
xchg
fldcw
dec
jbe
cs
sti
adc
cmp
addb
and
or
jns
push
sbb
repz
hlt
ja
in
addr16
into
lods
or
xchg
movsl
jl
dec
in
xchg
mov
mov
insl
or
lods
ljmp
call
clc
pusha
adc
sti
nop
lods
xchg
adcb
xchg
jge
lds
cmp
sub
or
mov
cmp
ret
push
xor
popa
or
add
cli
daa
xor
insb
fisubs
and
inc
divb
aas
std
push
daa
sbb
mov
ljmp
loopne
in
fistl
jmp
cmpsb
inc
shll
cmp
xchg
inc
in
dec
fsts
xchg
fisubrs
xchg
and
cmp
ss
mov
mov
jg
std
imul
pop
mov
cmpsl
lea
jno
jmp
sbb
les
jg
mov
xor
add
loope
cmp
xchg
sbb
push
push
xor
dec
inc
out
or
sub
inc
dec
fs
lods
push
sti
dec
lock
pusha
pushf
fiaddl
aas
lret
pop
aad
bound
mov
dec
icebp
pop
and
rclb
cmpsb
xor
and
adc
mov
and
push
xor
push
mov
rorb
sub
iret
dec
sub
mov
xchg
mov
lods
mov
mov
adc
jbe
into
iret
scas
xor
call
mov
and
test
jo
mov
and
add
mov
cmpsb
push
mov
ficoms
int3
mov
or
pop
cmp
sub
or
jne
jb
mov
pop
mov
pop
push
push
ficoml
dec
mov
sub
push
fdivrl
call
cmp
or
xchg
pop
ds
jbe
stc
jno
and
mov
push
inc
mov
mov
mov
dec
popa
out
dec
pop
lds
stos
scas
xor
aas
out
push
addb
in
jge
mov
fstps
insl
aaa
lock
outsb
sub
adc
jne
scas
adc
add
stos
and
push
lret
nop
sbbl
fnstenv
cmp
sub
sub
fldt
sbb
dec
push
and
scas
and
mov
adc
add
sbb
int
or
or
js
dec
addr16
fcompl
out
add
insl
in
xchg
xchg
mov
xor
lods
mov
dec
push
filds
jne
rorb
xchg
inc
or
push
les
lret
push
cmp
pop
loope
add
out
add
and
mov
jp
push
loope
cli
pop
loopne
or
lcall
xor
pop
imul
sahf
jnp
sbb
dec
push
pop
int
cmpsb
test
decl
jae
xchg
mov
xlat
aaa
cmp
sub
mov
mov
cld
es
dec
loope
insl
xchg
or
xchg
int
das
inc
ljmp
fadd
lds
pop
out
inc
lds
pop
xchg
lods
inc
xchg
inc
fsts
out
xor
mov
hlt
mov
mov
pop
push
jmp
shrl
mov
sub
mov
into
or
lahf
icebp
adc
xor
or
push
cmp
push
fisubl
mov
clc
mov
loope
cltd
inc
inc
ja
in
sub
sbb
div
jmp
cmp
aaa
call
or
xchg
imul
sub
push
push
movl
mov
sbb
cmp
test
inc
adc
fcomps
jle
jecxz
je
or
mov
cmpsl
aam
popa
addr16
and
jbe
test
jg
inc
inc
or
pop
dec
arpl
inc
push
xor
jae
cs
jne
xchg
mov
cli
jbe
push
xor
pushf
test
push
xor
ret
sahf
addb
push
mov
and
cmpsb
and
adc
sahf
add
mov
test
and
insb
mov
int3
sbb
mov
stc
ja
xchg
test
addb
scas
test
repnz
mov
cmp
fstps
stos
lcall
addr16
adc
cmpsl
inc
js
mov
mov
xchg
xor
pop
dec
mov
jl
rcll
lret
sbb
mov
ret
xor
daa
mov
mov
mov
cltd
cmp
pop
mov
jmp
lds
test
clc
mov
inc
daa
push
jl
sbb
jo
repz
das
jl
or
js
aam
push
rcrl
xor
mov
xor
mov
and
xor
mov
inc
call
xor
dec
les
xor
ror
pop
out
mov
add
or
test
rcrb
jbe,pt
pop
inc
mov
dec
test
cli
mov
cmc
sbb
sub
mov
repnz
jns
outsl
mov
mov
mov
cmc
repz
out
popa
jle
mov
stc
jb
and
cmp
jg
sbb
sbbb
jno
icebp
fsubrs
jle
push
sbb
scas
or
das
xchg
inc
test
aas
cmp
push
mov
repz
and
adc
mov
mov
fidivl
aas
push
lret
pop
pop
mov
mov
lret
or
mov
xor
pusha
xlat
sbb
mov
leave
mov
jecxz
push
fpatan
dec
fwait
sti
daa
jae
dec
cmp
xor
cli
out
int3
aas
mov
mov
nop
xchg
scas
jecxz
ss
pop
orb
adc
xchg
jmp
dec
adc
xor
cltd
mov
push
pop
adc
push
mov
add
mov
aaa
mov
mov
push
jns
loope
dec
push
test
popf
movsl
out
stos
int3
fldl
cld
or
jge
in
cmp
inc
shrl
lret
lret
push
mov
mov
push
out
sti
and
xor
in
sbb
popf
adcl
add
gs
and
es
mov
pop
filds
xlat
insl
adc
loopne
mov
cld
jne
cmpsl
xor
insb
jbe
push
andb
inc
jnp
push
mov
mov
mov
push
jnp
inc
adc
sbb
test
pushf
mov
push
jnp
jge
xor
mov
shlb
jmp
ljmp
sahf
loope
outsl
cmpsb
dec
push
inc
jae
addr16
std
push
sbb
jmp
icebp
out
adc
cs
out
dec
out
adc
cmp
adc
adc
sbb
iret
ss
outsb
jae
leave
lock
je
std
mov
in
mov
int3
pop
sub
jle
push
sub
cmp
ret
loop
push
loope
inc
inc
fistps
ret
mov
inc
sbb
shl
pushf
repnz
in
sbb
xchg
dec
inc
xor
dec
jb
stc
pop
sbb
insl
pop
insl
inc
mov
inc
mov
in
dec
dec
cmp
scas
dec
inc
sbb
cmp
dec
pop
scas
lock
add
jb
cmpsb
dec
insl
cwtl
dec
adc
test
adc
jne
outsb
add
das
lret
ss
xchg
mov
movsb
ja
in
push
push
ret
or
push
roll
shl
mov
xchg
fidivrl
sbb
adc
fnsave
mov
imul
cmp
mov
loopne
pop
arpl
mov
add
scas
gs
mov
dec
andb
jae
and
pop
adc
jmp
and
or
mov
cld
push
jle
into
lret
rcrb
adc
mov
pop
rorb
fstpl
dec
clc
nop
out
pop
adc
sbb
jno
push
inc
mov
movsb
jmp
popf
or
hlt
xor
xchg
and
pop
icebp
outsl
pop
fucomi
clc
das
cmc
adc
jno
imul
and
or
cmp
mov
jp
jne
fiaddl
rol
jne
bnd
clc
dec
rcrl
jp
loop
out
jae
xor
dec
out
pop
rcrb
aaa
repz
and
addr16
cmp
mov
push
add
push
test
push
int
dec
cmpsb
int3
adc
mov
add
mov
fisttps
test
sub
ds
or
test
inc
loop
inc
xchg
stc
mov
inc
stos
push
lahf
sub
pop
mov
mov
mov
lret
add
xchg
pusha
int3
jae
sti
push
jbe
addr16
enter
mov
cmc
jle
arpl
fidivrl
mov
inc
scas
fidivrl
push
xor
imul
push
xchg
xchg
xchg
insl
xor
jp
popf
adc
jmp
call
jl
rcl
fld
jns
daa
fstpl
insl
enter
lret
pop
fldcw
sbb
add
clc
outsb
arpl
cmpsl
sub
inc
or
mull
cmp
dec
pop
jp
mov
pusha
xchg
into
hlt
inc
aas
addr16
and
and
gs
call
dec
inc
fnsave
repz
roll
inc
pop
out
and
push
repz
mov
cmp
int
repnz
mov
sub
ss
test
add
sahf
enter
es
sbb
mov
add
loope
imul
cmp
sub
rorb
lods
lret
mov
out
sbb
divl
hlt
out
mov
xchg
leave
je
sub
mov
dec
stc
movsb
rcl
xchg
push
mov
nop
xchg
movsb
mov
and
lahf
dec
je
adc
hlt
sbb
into
ret
into
clc
jb
loopne
loopne
aam
add
loope
dec
sbb
stos
mov
imul
imul
mov
cmp
push
dec
ds
lahf
pop
xchg
pushw
js
movsb
and
leave
inc
pop
mov
jne
xchg
cltd
call
mov
in
pop
sahf
push
movsl
add
jnp
ss
mov
pop
pop
pop
mov
push
aad
popa
test
inc
dec
or
lcall
scas
pop
jp
add
fiaddl
movsl
add
mov
shl
sub
std
daa
daa
lret
push
shl
daa
sbb
loope
cmpsl
enter
mov
push
pop
shlb
jae
outsl
mov
or
sub
sub
inc
repnz
bound
add
in
ficompl
test
stos
ret
in
aaa
sub
or
jmp
cmp
in
xor
out
push
dec
or
or
cmp
and
pop
cltd
mov
push
movsb
insl
xchg
fucomip
mov
cli
mov
cmpsb
xlat
shlb
cmp
dec
enter
es
stc
test
xchg
movsl
xchg
rolb
mov
mov
fistpl
verr
push
out
ret
sti
gs
bound
data16
rcll
cmp
and
in
insb
in
sub
imul
incl
mov
mov
dec
daa
in
sahf
and
xor
mov
push
mov
push
push
inc
xor
inc
push
sbb
nop
pop
hlt
mov
cli
jne
popf
sbb
mov
xchg
bound
ds
ja
xchg
lea
pop
and
movsb
mov
push
clc
xchg
or
sub
xor
sub
rorl
and
fisubs
shrl
mov
lret
mov
or
sub
adcb
addr16
sbb
push
in
and
jne
jle
xor
mov
shlb
or
cwtl
hlt
add
nop
pop
mov
mov
inc
sub
jecxz
push
or
lods
leave
aas
das
adc
cld
jecxz
push
and
repnz
lahf
jns
in
adc
andb
mov
pop
repz
hlt
or
cmp
cmp
push
push
test
cwtl
fidivl
sbb
out
iret
mov
or
lahf
out
inc
in
inc
ret
scas
jne
add
cmp
int3
mov
add
and
or
shll
stos
jge
lea
adc
lock
xchg
push
xchg
xorb
loope
mov
add
out
movsb
fs
lret
push
cmpsb
mov
std
mov
pop
aaa
pop
in
or
pop
add
mov
jmp
pop
out
xchg
aam
xor
or
movsl
out
fbstp
or
sub
xor
fwait
pop
xlat
mov
rcrb
repnz
mov
mov
out
lock
flds
push
or
leave
pop
xchg
mov
hlt
dec
sarb
gs
cmp
dec
xor
movsb
xor
aad
xchg
pushl
dec
out
push
cmpsl
jae
arpl
out
mov
cmc
sbb
aas
clc
aaa
jne
call
ljmp
add
xchg
aaa
push
rorb
addr16
enter
cmp
xchg
cmp
or
int
fwait
jmp
movb
enter
lods
mov
aad
sbb
xchg
mov
sahf
push
xor
fimull
inc
push
mov
mov
mov
scas
push
cmp
stos
xor
jmp
dec
outsb
aas
out
and
ficoms
in
adc
iret
fistpll
rol
clc
cs
mov
repz
jnp
add
xor
lcall
popa
sbb
movsb
mov
cli
int
scas
movsb
sbb
push
iret
cmp
test
shrl
fcompl
mov
jae
jno
mov
and
sahf
inc
daa
pop
jns
or
xor
xchg
xchg
pushf
cmpsl
iret
lods
ja
dec
or
fs
gs
xchg
push
xor
jle
add
mov
lret
dec
push
jnp
aaa
fisttpl
jns
addr16
gs
pop
add
imul
out
dec
ss
or
bound
pusha
in
rcrl
pop
mov
inc
imulb
jnp
jmp
cmpl
outsb
sbb
lret
pop
aas
or
mov
mov
inc
add
mov
jge
mov
adc
iret
daa
inc
inc
push
push
fildl
inc
inc
movsb
and
test
xchg
or
imul
cmp
repnz
cs
or
push
mov
imul
icebp
inc
add
jmp
in
out
repz
xor
push
imul
mov
xchg
gs
adc
jmp
ss
imul
fwait
bound
jmp
iret
mov
pop
push
subb
pusha
loopne
inc
jl
out
out
jg
dec
xor
stos
dec
shl
push
addl
push
in
xchg
pop
out
into
mov
jne
cmp
ja
or
inc
mov
jnp
jp
xchg
imul
cmp
pslld
push
in
aaa
add
cld
lret
xor
mov
mov
insl
fwait
or
cltd
jno
into
dec
imul
pop
aas
cmp
cli
mov
sub
mov
shl
push
imul
cmp
push
mov
fidivs
pop
and
pop
cmp
inc
mov
jae
idivl
es
add
cmp
adc
outsl
aaa
inc
repnz
jbe
push
inc
inc
pop
pop
mov
sub
jno
and
daa
es
adc
arpl
sub
into
in
lods
pop
sub
or
lahf
ljmp
cli
mov
lods
stos
lds
les
daa
enter
dec
mov
xor
arpl
shl
lahf
cmpsl
sub
test
xor
mov
arpl
inc
negb
jb
cli
repz
ficoml
add
insb
sub
lods
shrl
jp
shlb
stc
add
imul
mov
mov
inc
pop
sbb
test
loope
repnz
ds
js
mov
ljmp
hlt
jle
pop
rorl
orb
cld
adc
sub
loope
cli
pushf
cmp
pop
arpl
pop
cmp
pop
call
outsb
dec
dec
lock
outsb
cmp
pop
xchg
mov
mov
and
scas
pop
and
cmp
adc
testl
ret
dec
daa
dec
inc
push
or
adc
push
push
or
jmp
outsl
addb
hlt
loopne
cmp
cmp
pop
nop
ljmp
cmc
fwait
icebp
xchg
sahf
mov
xchg
js
in
push
adc
cld
push
hlt
push
pushl
mov
mov
or
push
add
lock
sar
imull
popa
cmpsb
movsb
inc
or
jne
jb
sbb
inc
ret
pop
dec
inc
or
arpl
aam
inc
scas
or
cmp
push
shr
scas
push
lods
and
insb
adc
mov
shr
xchg
xor
mov
out
lahf
test
subb
sub
int3
dec
rcrl
test
and
add
or
jg
cmp
jae
fbld
lret
mov
and
ja
cmp
xchg
xchg
cmp
lods
icebp
icebp
pop
mov
test
lds
jo
cmp
push
into
ja
mov
adc
lahf
xchg
fdiv
je
fisubrl
les
xchg
pop
dec
dec
pop
mov
hlt
roll
cmp
sub
nop
dec
jg
or
mov
mov
mov
jns
ss
imul
popa
das
jbe
out
fwait
mov
stos
add
sub
dec
adc
leave
pmaddwd
fsubrs
and
mov
push
out
xor
nop
scas
xor
jle
fdivrs
andl
mov
sahf
xchg
sbb
sbb
mov
push
faddp
rorb
and
push
lea
pop
sub
cmovp
cmpsb
cmp
adc
sbb
add
add
sbb
push
loope
mov
mov
sbb
add
jmp
xlat
notb
imul
cmp
push
adc
sbb
fwait
add
std
sbb
nop
xor
jl
jmp
int
mov
sarl
insl
jb
mov
add
mov
push
push
sti
xacquire
test
orb
repnz
pop
or
xor
or
mov
int
adc
xchg
adc
mov
cmc
jle
fs
inc
dec
fistpll
jo
cmp
shlb
xor
sbb
sub
ret
push
add
cmp
pop
fst
jnp
aad
dec
ds
sbb
dec
pop
jmp
icebp
icebp
or
pop
jecxz
std
mov
shrl
xchg
mov
test
insb
lds
jno
pop
or
adc
sahf
mov
jo
pusha
imul
cmp
iret
sti
fldenv
mov
loop
jp
test
lock
pop
xrelease
xchg
mov
pop
insl
jmp
cmp
mov
jnp
add
mov
add
jne
push
aaa
mov
push
int3
mov
cld
adc
mov
jecxz
lods
in
jg
ror
enter
xchg
fwait
icebp
imul
sub
aaa
test
pop
shll
gs
in
mov
sbb
push
mov
fisubrl
adc
mov
sti
jae
fisubl
scas
jg
sahf
sbb
mov
aam
push
pop
xlat
or
insb
push
xchg
inc
aaa
lret
jne
adc
roll
jge
fsubl
jp
loope
inc
mov
jp
mov
sbb
sub
leave
mov
iret
xor
shll
mov
stos
lret
cmp
sbb
mov
outsl
cmc
call
xchg
sbb
pop
push
fadds
add
cmp
push
cmp
mov
lods
push
xlat
cltd
push
inc
fcmovnbe
js
add
pop
inc
leave
imul
lret
imul
insb
push
jl
repnz
cmp
mov
push
pop
pop
mov
push
ret
rorl
inc
and
jbe
es
cmp
cmp
and
jns
xchg
cmpsb
adc
jecxz
mov
lret
or
lret
add
popa
mov
xlat
or
pusha
lret
stos
les
sti
pop
movsl
lods
xor
sub
dec
insb
cmp
cltd
popa
xor
xor
adc
sub
sub
adc
cmpsb
les
inc
inc
cs
test
mov
je
fwait
lret
es
shl
pop
shll
jno
cltd
ds
daa
add
fisttpll
mov
test
dec
cmp
mov
shrb
pusha
jnp
cmp
lcall
push
mov
outsb
call
sar
in
or
clc
roll
push
jecxz
aad
pop
pushl
in
xlat
and
and
add
inc
fsub
aam
sarb
rcrl
fisttps
inc
es
imul
cmp
cltd
out
fdivrp
aad
push
add
in
shlb
adc
or
xchg
xor
scas
dec
out
addb
pop
sub
in
cli
cmp
push
in
jle
int3
out
push
sub
insb
shll
sbb
cmp
aaa
lods
xchg
mov
lods
cmp
movsl
push
sbb
cmp
push
call
jns
inc
or
inc
xor
daa
ret
push
cmpsl
xor
sbb
mov
outsb
pushf
lahf
dec
jecxz
xlat
enter
sbbb
sub
lock
mov
shlb
pop
aad
mov
outsb
mov
inc
xchg
inc
inc
xlat
lods
dec
sub
roll
out
dec
decl
or
or
cmp
push
mov
push
dec
shlb
aam
lret
arpl
lret
stos
pop
test
sub
dec
mov
inc
mov
arpl
push
jmp
or
dec
jae
fcoml
adc
icebp
mov
sbb
movsl
sub
lods
lret
xor
push
xlat
pop
sub
into
inc
xor
mov
enter
sub
inc
cwtl
std
movsl
xor
outsb
jmp
negl
lret
stos
pop
cwtl
dec
or
dec
xchg
xchg
test
subl
cmpsb
cmp
aaa
pop
stos
insl
sbb
std
je
push
hlt
in
stc
dec
mov
clc
daa
or
inc
xor
scas
add
inc
and
push
mov
loope
mov
xor
imul
xchg
data16
mov
icebp
in
mov
icebp
mov
imul
add
leave
ss
jae
or
push
and
inc
inc
jae
mov
enter
push
icebp
cmp
or
sub
inc
mov
into
out
inc
mov
pop
cwtl
jo
cwtl
shr
pusha
jle
data16
out
in
xchg
arpl
cmp
mov
lahf
mov
push
mov
mov
xchg
stos
fidivl
cmp
pop
sbb
clc
pop
out
and
inc
dec
nop
mov
loop
or
or
and
xchg
dec
cmp
in
inc
mov
bnd
sarb
mov
ljmp
in
icebp
push
pop
int3
loopne
mov
dec
add
int
cmc
cwtl
rcr
mov
or
in
pop
sbb
sbb
sub
mov
adc
stos
pop
and
jne
repz
cmc
in
test
insl
mov
insl
lds
mov
or
jae
ds
mov
cltd
inc
aas
adc
das
dec
enter
ds
cli
jbe
push
mov
jae
dec
or
daa
jns
pushf
jb
divb
mov
ja
stos
dec
push
outsb
cli
mov
cmp
push
outsb
mov
mov
pop
pushf
mov
testb
add
mov
jne
adc
shll
jns
in
outsl
daa
outsl
ds
shlb
lcall
xlat
pop
or
xchg
sbb
sahf
insb
and
leave
pop
out
jb
pop
mov
cmc
push
sbb
sbb
ret
cmc
fs
sbb
jns
push
xchg
in
leave
mov
jp
xor
mov
add
scas
add
inc
out
xlat
pop
out
xchg
jno
jge
das
cmp
in
cmpsl
mov
push
ja
push
fistpl
cwtl
je
imul
adc
icebp
pop
and
imul
inc
mov
enter
outsb
push
mov
or
js
and
mov
xchg
sub
xor
and
pop
hlt
dec
cltd
outsl
imul
and
push
adc
push
jns
or
mov
repz
dec
push
sub
jnp
mov
lret
adc
pusha
aas
repnz
rorl
or
imul
data16
sbb
test
fdivl
int
hlt
mov
call
icebp
jmp
push
add
or
dec
cwtl
jge
inc
clc
cld
pushf
out
mov
sub
cmp
aas
push
dec
add
fcoml
out
sub
scas
in
sbb
js
and
int3
cmpsl
out
fwait
pop
out
and
add
mov
fnstcw
ret
push
adc
cwtl
aaa
jmp
das
push
test
scas
in
jnp
pusha
inc
cmp
mov
aam
push
sbb
orb
insb
pop
and
push
fbld
bound
pop
mov
mov
fnstenv
insb
pop
sub
sbb
xchg
push
mov
andl
les
decb
aad
xlat
inc
test
mov
test
lahf
das
xor
xchg
data16
mov
notl
clc
cli
cs
mov
arpl
mov
add
dec
fbstp
jbe
fucomp
nop
add
call
call
push
mov
mov
subl
push
loop
dec
xor
push
push
lahf
cmp
or
outsl
pusha
add
add
aaa
lods
push
xchg
pop
imulb
cld
ja
fistps
imul
lahf
sbb
lahf
loop
sbb
stos
and
or
mov
ret
inc
jno
jecxz
les
iret
nop
lahf
divl
es
es
inc
jmp
inc
lds
insl
popa
dec
push
cmp
or
stos
jno
into
test
mov
mov
jmp
push
int3
outsl
out
stos
cmp
xorl
add
jl
aam
rcrb
mov
cltd
fistps
dec
stos
mov
insl
test
xor
imul
jb
inc
adc
lods
lahf
sub
cmp
sub
adc
jnp
mov
xchg
je
sahf
shlb
jb
rolb
dec
jmp
mov
lret
adc
je
fcoml
jg
add
lahf
fnstcw
div
and
cmp
adc
out
fwait
incl
sbb
jge
xchg
ret
dec
js
insb
out
addr16
insl
loopne
xchg
jno
mov
xchg
sbb
add
mov
lods
push
shll
ss
xchg
push
fists
mov
lds
dec
push
daa
or
bound
pop
imul
pop
call
shlb
and
cmpl
jno
rol
in
push
ljmp
mov
in
ficompl
jecxz
cs
test
mov
mov
cmc
and
xor
pop
or
imul
int3
out
and
push
cmpsl
inc
add
negb
cltd
mov
cmp
sbb
jecxz
mov
icebp
xorl
cld
fcmovnb
or
sbb
test
add
mov
test
xorl
scas
sahf
ljmp
ljmp
iret
js
pop
cltd
sbbl
xchg
fiaddl
lcall
push
jbe
add
and
xor
mov
sbb
push
ss
pushf
dec
test
inc
pushf
inc
add
dec
mov
pushf
cmp
dec
imull
pop
push
dec
je
push
jb
xor
out
loope
test
test
aam
mov
sbb
aad
jnp
mov
test
cld
loopne
dec
and
test
je
aam
mov
movsl
ret
cmp
pop
addl
jge
cli
adc
lea
push
into
inc
lea
mov
sbb
xchg
rcrl
outsl
mov
lock
add
lret
movsl
mov
mov
lods
xor
aam
and
frstor
adc
lret
cli
dec
adc
in
fildl
xor
faddl
push
xlat
imul
and
iret
popf
add
mov
rorb
jne
sub
mov
and
jp
mov
xchg
test
xor
lock
add
inc
pushl
outsb
sbb
jmp
lods
lock
test
sub
pop
pop
push
and
movsb
movsl
repz
int
dec
dec
xlat
push
xorb
dec
fwait
rcl
mov
test
mov
pop
sti
arpl
loopne
repz
xchg
out
sub
mov
aam
xchg
mov
test
mov
ljmp
out
or
inc
mov
xor
push
mulb
clc
or
mov
gs
mov
ret
sub
xchg
lret
adc
mov
mov
cld
andl
or
test
cli
popa
dec
lret
outsl
mov
scas
add
jb
mov
inc
push
push
arpl
daa
cwtl
add
in
subl
outsb
cltd
shl
cmc
cmp
test
loopne
out
scas
cmp
xchg
loope
cltd
xorl
sub
mov
icebp
mov
mov
dec
xchg
lds
sbb
scas
and
mov
xchg
inc
dec
dec
add
ret
test
stos
pop
sub
idivl
clc
mov
mov
pop
xor
stos
stos
fists
inc
jp
in
repnz
test
loope
test
or
fiadds
scas
lcall
mov
cltd
inc
imul
movsb
mov
mov
push
pop
fcmovne
mov
sub
fistps
ss
dec
push
inc
sub
test
out
aad
iret
imul
pushf
jl
lret
int
pop
stos
jecxz
pop
in
push
fisttpll
cmpsl
mov
nop
jmp
fisubs
add
loopne
sub
iret
pop
push
mov
ret
inc
cmpsb
imul
cs
push
fwait
je
mov
inc
pusha
ret
outsl
out
jno
push
cli
cwtl
pop
jmp
push
xor
sub
push
jecxz
aaa
cmp
mov
mov
outsl
subl
cmp
mov
fcoml
jle
jnp
xchg
mov
mov
outsb
lret
pop
sarl
inc
or
sbb
adc
mov
xchg
or
xchg
lret
jle
shlb
sbb
jmp
jecxz
jnp
popa
fsubs
arpl
gs
ljmp
dec
xchg
add
cmp
add
adc
add
lret
jne
jmp
cmp
inc
mov
mov
xchg
mov
fdivrs
xchg
shl
mov
mov
jl
push
out
cmp
rclb
hlt
mov
or
push
int3
mov
loope
and
lea
out
xlat
sbb
dec
arpl
cmp
iret
mov
xor
ljmp
xchg
dec
xor
into
jge
insb
aas
dec
fldpi
cmp
roll
and
xchg
mov
incl
mov
loop
shl
xor
mov
cmp
push
fstps
jno
insb
adc
mull
xchg
mull
js
sbb
cmpb
bound
dec
clc
fwait
into
sbb
fldcw
mov
mov
movsb
jg
dec
inc
mov
gs
jbe
mov
inc
jo
xor
xor
cmp
ficoms
add
add
push
push
mov
into
scas
test
dec
or
mov
notb
loope
pop
dec
insl
iret
or
pop
ljmp
push
mov
mov
sub
cli
or
jb
stos
sub
fidivl
mov
aam
lcall
je
add
mul
jl
cmp
mov
or
pop
adc
lahf
mov
enter
hlt
cwtl
gs
sub
mov
push
mov
movsb
mov
sbb
sbb
movsl
arpl
outsl
xchg
ror
aam
cmp
xchg
and
inc
mov
cmpsb
xor
ret
pop
push
and
ja
adc
rorb
mov
aas
add
push
ficoms
popf
mov
sub
sub
clc
or
mov
ljmp
mov
and
dec
cmpsl
out
fs
mov
mov
add
mov
mov
lds
dec
mov
jno
mov
rol
jns
inc
pusha
lock
insl
jns
adc
sahf
lea
jno
add
int3
mov
add
sbb
pop
add
ja
cmpsl
pop
push
sbb
sbb
icebp
inc
subl
sar
out
sbb
mov
lret
adc
aas
add
pop
loope
mov
jle
shr
lds
fisttpll
mov
ds
add
xchg
sbb
jb
sub
push
std
add
and
int3
pop
adc
adc
push
in
jp
aas
das
xor
ret
xchg
fsubrl
aaa
movsb
sub
std
add
xchg
dec
insl
mov
test
lods
fldcw
add
call
mov
ror
rcrb
rcrl
fs
pop
cli
sub
div
shll
faddl
push
push
add
push
xchg
idivb
mov
xor
jo
xor
cs
and
repnz
xor
dec
rcrb
in
and
mov
fsubrs
sub
jge
add
sub
mov
sar
cmc
in
or
sbb
push
push
inc
adc
inc
sub
dec
mov
lds
stos
add
scas
dec
ret
adc
add
sarl
mov
add
xchg
cmc
fdivrs
jmp
xor
and
mov
mov
lret
enter
sbb
scas
add
les
cld
xchg
mov
push
mov
aas
cs
lods
leave
add
jle
rol
xchg
mov
mov
rorl
cmpl
fldt
lea
add
xchg
push
pusha
call
jnp
das
into
fs
lcall
adc
negl
jns
test
sub
fs
in
rcrl
es
fadds
cwtl
js
pop
pop
push
push
shl
jmp
xchg
testb
adc
mov
fsubs
jl
dec
add
fisubl
ret
aas
popa
mov
ror
je
out
sub
dec
lds
pushf
dec
sub
cwtl
rcrl
adc
jae
nop
pop
stos
inc
inc
mov
fisttpll
mov
pop
inc
out
movsb
lds
dec
repnz
dec
mov
stc
cmp
mov
mov
fdivrs
cmp
movsl
cmpsl
lcall
not
sti
dec
adc
pop
cld
xor
int3
xor
mov
and
mov
fisttps
xor
xchg
dec
mov
mov
insl
push
dec
and
mov
mov
push
incb
rol
stos
sbb
adc
mov
mov
push
add
push
cli
cmpsb
or
jg
xchg
sbb
stos
inc
rorb
dec
cmp
loop
enter
mov
pop
je
cmc
cs
xchg
or
lret
cmp
out
xlat
repnz
repnz
hlt
mov
xlat
jbe
cmp
ret
aas
push
clc
mov
push
adc
ss
mov
add
adc
leave
jmp
insl
fcmovu
cmp
mov
fbld
imul
pop
in
mov
lea
mov
test
dec
add
ret
jle
inc
dec
stos
mov
push
fistpll
mov
movsb
jbe
into
pop
fs
pop
cwtl
das
push
pop
pop
cli
inc
imul
push
arpl
xchg
add
push
pop
bound
mov
outsl
movsl
pop
mov
fcomps
add
or
lea
mov
sysret
fdivrs
jo
dec
xchg
or
cmpsl
test
adc
pop
mov
cmpsb
or
lods
mov
xchg
cmp
loope
ss
sub
or
push
jp
add
lods
mov
sub
stos
bound
sti
ret
inc
rcrl
adcl
inc
add
mov
jno
cmp
or
jnp,pt
arpl
mov
outsb
loop
lret
sbb
cmpsb
stos
sbb
dec
out
or
and
shr
xlat
in
shrb
cwtl
ds
mov
rcrl
movsl
rcrb
jmp
and
out
adc
adc
mov
movsb
je
jo
adc
nop
mov
mov
or
les
fsin
jno
pop
aam
repz
loopne
repz
rorb
aam
jae
cs
pop
fiadds
jmp
jns
push
jle
inc
loop
lods
inc
jecxz
lret
je,pn
add
stos
in
arpl
mov
xor
loope
mov
sub
mov
shr
pushl
ljmp
xchg
addb
lea
bound
mov
push
test
push
mov
shll
inc
loopne
stos
es
in
andb
dec
in
fwait
test
in
mov
pop
jne
outsl
lds
aad
mov
xchg
push
hlt
cmp
adc
push
cmp
loope
out
sbbl
jge
sub
and
sbb
int3
sbb
jbe
add
ret
stos
or
scas
js
adc
xchg
fcomi
shrb
sbb
int3
in
push
ds
fldt
out
mov
outsl
mov
jecxz
ds
jnp
ja
xor
es
mov
add
cmp
pop
bound
fbld
xlat
sti
in
jg
pop
jbe
push
or
int
ret
es
adc
push
adc
ss
add
imul
jo
rolb
stos
sahf
sub
enter
fs
xor
pop
out
mov
insl
adc
lods
mov
subl
cwtl
and
lret
sbb
mov
push
pop
cmp
hlt
xchg
aas
sbb
dec
inc
mov
inc
xor
leave
cmp
aad
addr16
mov
mov
dec
pop
pop
pusha
in
xor
push
clc
fldcw
sti
sbb
sub
cmp
clc
dec
in
stos
fdivl
or
or
mov
add
jne
insb
xchg
pop
dec
ficomps
lods
mov
shlb
test
in
push
or
pop
pusha
bound
fwait
mov
push
cmp
add
in
sub
fisubl
les
jmp
pop
ret
cwtl
jno
mov
cli
cltd
cmp
and
mov
test
sub
fst
neg
in
ret
sbb
rol
pop
imul
xchg
cmpsb
and
in
mov
or
adc
sbb
push
inc
pop
fdivs
lret
ljmp
inc
sarb
and
shlb
mov
btc
scas
fwait
and
stc
xchg
pop
aaa
fcompl
pop
add
add
mov
xchg
into
or
cmovl
xchg
mov
push
fwait
ja,pt
sub
sti
dec
shlb
push
push
xchg
repnz
lret
pusha
push
jle
imul
mov
pop
mov
in
rcrl
shrb
push
jb
adc
and
aad
lahf
lret
sar
or
dec
or
jae
fisttpll
jae
sti
mov
mov
add
fsts
cmp
leave
sub
out
stos
ja
xor
fiadds
adc
jae
inc
push
mov
ljmp
mov
insb
mov
mov
xchg
into
pushw
fimuls
pop
add
orb
std
sbb
dec
fidivrs
iret
push
inc
imul
outsb
ficomps
push
repz
std
adc
mov
dec
xchg
inc
xlat
inc
xor
sar
lret
outsb
fmuls
mov
daa
sub
mov
mov
adc
xor
iret
movsb
ret
fisubrl
test
shrl
fcompp
and
cli
xchg
gs
inc
hlt
movsb
cmp
inc
pusha
inc
fcmovb
popa
adc
xchg
shll
jg
adc
dec
sub
icebp
fisttps
test
out
add
mov
mov
popl
dec
inc
addr16
push
movsb
jns
andb
mov
pop
jle
aas
and
pop
lods
jle
xor
loope
rcl
dec
stos
mov
mov
std
mov
scas
dec
hlt
jbe
std
setb
and
rol
outsb
dec
inc
imul
movsb
cmpsl
and
mov
dec
cmpsb
mov
jmp
iret
movsb
arpl
fdiv
popf
push
aad
xchg
push
push
xor
std
mov
mov
mov
sbb
lods
pop
dec
imulb
inc
xlat
adcb
je
or
push
sub
xchg
dec
jns
xor
or
testb
nop
cmc
jno
adc
movsl
andl
xchg
loopne
sbb
mov
inc
adc
out
pop
rcll
in
ret
mov
ficompl
inc
pop
jg
enter
and
pop
jge
inc
rolb
ror
je
mov
fsub
pop
cld
cmp
dec
jb
and
je
mov
sub
mov
in
ret
jg
mov
push
aad
add
push
add
xor
decl
out
cmp
orl
push
add
mov
subb
sbb
addr16
xchg
loope
push
xlat
inc
mov
das
dec
jg
sbb
xchg
ja
push
dec
stos
mov
sbb
jl
cmp
aas
shlb
bound
cmp
jle
pop
mov
js
repz
inc
out
stos
jmp
mov
nop
jbe
or
fidivrl
je
inc
mov
sub
sub
pop
cmp
jno
repnz
ss
fldcw
mov
xor
ljmp
ja
data16
imul
xor
adc
mov
ja
stc
out
push
dec
mov
out
jne
push
sahf
scas
stc
dec
mov
popf
xchg
icebp
mov
cmc
out
adc
ds
and
mov
cld
mov
mov
fwait
add
push
lcall
pop
inc
cltd
test
jg
dec
lds
pop
inc
andb
loope
or
sbb
jle
xchg
push
push
mov
mov
fistps
adc
xchg
add
mov
notl
dec
mov
pop
clc
daa
cld
sbb
and
push
inc
cmp
ret
into
add
mov
add
dec
jns
mov
xchg
adc
mov
jae
sub
or
pop
jge
les
xchg
nop
pop
pop
out
sub
or
ja
dec
std
imul
add
pop
dec
leave
dec
std
xchg
mov
in
xchg
ja
xchg
aas
lods
sub
insl
cmpsl
out
sub
test
pop
into
push
and
xor
scas
cmp
add
divb
and
nop
cli
ficoms
jb
nop
push
jge
arpl
out
dec
mov
ficoms
pop
sub
mov
fiadds
out
xchg
mov
cmp
je
mov
sub
shrl
ret
lcall
ret
adc
or
popf
jno
emms
out
mov
cwtl
xchg
fwait
das
fisubs
jg
adc
mov
sbb
dec
xchg
inc
push
or
and
sbb
out
je
mov
pop
push
xor
adc
in
das
and
aam
inc
inc
xor
mov
test
xor
pushl
xor
inc
adc
lods
cmpsb
mov
data16
jae
push
jae
pop
sub
add
mov
stc
jne
out
enter
sti
cmc
push
dec
mov
push
rcrb
in
xchg
pushl
dec
dec
rcrl
mov
loop
jl
pop
xor
ret
xchg
mov
mov
push
xchg
ja
mov
lret
cmp
xor
test
mov
cmc
mov
in
int3
mov
scas
jmp
push
lcall
daa
out
inc
fucom
fstl
push
xchg
cmpsl
jmp
loopne
jecxz
inc
js
ljmp
push
adc
mov
mov
inc
test
sti
or
lods
jno
testl
jbe
test
in
add
dec
mov
jns
jge
js
cmp
scas
and
cltd
dec
inc
xor
jbe
enter
popf
in
loop
pop
or
dec
mov
add
test
jmp
leave
mov
xchg
insb
dec
ljmp
nop
sbbb
idivl
jge
call
mov
call
pop
jge
lea
pop
iret
jnp
es
mov
jmp
sub
aas
out
bound
outsl
repz
jbe
dec
outsb
popa
andl
notl
mov
bsr
ljmp
cmp
fldcw
lock
jno
sbb
loopne
lcall
xchg
push
fsincos
xlat
xlat
mov
push
adc
iret
mov
fildll
jbe
in
mov
mov
cmp
call
test
push
movsb
jno
sub
cmp
adcb
mov
call
adc
mov
sbb
rorl
dec
into
mov
push
push
fldcw
pop
mov
jno
test
in
adc
nop
cmc
insl
or
rorb
out
out
in
cli
into
imul
loop
adc
sub
jns
push
ljmp
arpl
pop
imul
test
sbb
out
neg
mov
mov
mov
leave
mov
adc
push
neg
lock
mov
rcrl
push
les
cmpsl
mov
push
dec
aad
cld
pushf
inc
push
hlt
sub
fists
movsb
push
icebp
push
adc
dec
faddl
push
bound
pop
xor
iret
dec
sti
ret
jle
cmpsb
mov
xlat
xor
jae
cmp
xchg
aas
scas
pushaw
fimuls
in
daa
test
subb
adc
aas
lods
push
inc
jns
loop
ss
mov
mov
in
and
test
ret
push
xchg
xor
ret
fwait
adc
adc
sub
sub
push
mov
outsl
inc
mov
cmp
push
adc
add
mov
mov
adc
xor
mov
stc
lret
mov
sbb
rcrb
cmpsb
lret
jns
push
ret
les
xchg
bnd
push
sub
mov
cmpl
xchg
dec
jp
or
enter
jle
es
jmp
cmp
inc
xchg
iret
mov
mov
insl
ficoms
insb
ret
daa
jb
cmpb
std
mov
daa
sub
cmp
fiaddl
repnz
sub
cmp
cltd
rcrl
lcall
int3
sub
lock
sub
mov
insl
mov
outsb
push
jecxz
sahf
pop
xchg
mov
addr16
xor
cmpsb
inc
adc
insl
mov
or
sub
xchg
cmc
int3
cmp
cs
cmp
dec
les
test
mov
pop
sub
in
xchg
andb
repz
sbb
add
stc
pop
sub
inc
sahf
push
jnp
push
jbe
xor
iret
outsb
mov
or
stos
repz
std
arpl
push
subl
imul
scas
out
inc
adc
stos
or
sbb
inc
jmp
fdiv
xchg
sbb
nop
es
fs
mov
mov
test
test
mov
je
dec
inc
adc
sbb
and
and
inc
gs
mov
scas
sbb
dec
sub
push
je
lcall
adc
in
sbb
mov
cmp
xchg
adc
push
scas
mov
push
dec
mov
dec
inc
test
rcl
pop
mov
test
rcr
shll
inc
jae
sbb
das
mov
lds
lret
adc
xchg
pop
push
inc
movsb
lret
push
aad
jns
fisubrl
cmp
mov
jnp
cmp
inc
testb
pop
xchg
lock
mov
xor
lds
mov
push
mov
add
push
pop
mov
incl
push
cmpsl
push
add
cmp
sti
or
push
sbb
out
dec
pop
or
js
imul
stos
outsb
lds
ret
shr
inc
testl
test
mov
ss
pop
xor
add
sbb
lods
test
movb
mov
icebp
lcall
sub
ds
mov
xlat
mov
pop
sti
test
out
inc
sub
stc
ljmp
dec
call
pop
scas
leave
sub
pop
ret
xor
push
sub
xchg
mov
stos
or
inc
jp
ret
mov
jae
hlt
or
fidivl
push
clc
push
sub
add
dec
pop
out
cld
adc
inc
inc
lcall
movsl
insb
dec
adc
test
xor
aad
dec
xchg
add
dec
mov
push
xchg
lret
imul
mov
sub
sub
cmp
fisubrl
leave
and
and
sbb
dec
and
sub
sbb
push
roll
cmpsl
mov
in
adc
repnz
arpl
lds
bound
cmp
inc
lds
lret
mov
insl
xor
xor
dec
outsb
fcompl
hlt
test
dec
test
jmp
xor
mov
mov
iret
in
test
xchg
rcrl
out
das
xor
and
and
pop
idiv
xor
add
add
std
push
mov
push
cs
jae
enter
sub
jae
jecxz
add
inc
rorl
enter
insl
dec
or
or
pushf
dec
lods
mov
inc
aad
lods
inc
fidivrl
cmp
dec
clc
jns
cmp
sbb
push
sub
cmp
xchg
rcrb
or
inc
fstps
cmp
test
xor
jno
aaa
cmp
and
sub
pop
int
das
and
cld
xor
dec
pop
fists
dec
cmpsb
ret
pushf
call
mov
push
std
dec
rorb
addl
jbe
mov
push
cmc
lret
andb
add
iret
pusha
shrb
cmp
or
mov
dec
das
mov
xorl
in
leave
mov
xlat
int
dec
std
push
mov
mov
pop
es
cltd
lahf
lea
mov
mov
pop
je
adc
and
dec
cwtl
leave
dec
mov
mov
push
sub
divl
or
loope
fmulp
decb
cmpsb
mov
cltd
sbb
js
adc
ret
pop
lcall
ss
dec
and
test
xchg
xchg
sbb
adc
mov
mov
nop
jp
add
mov
call
add
popf
idivb
pop
push
jl
pop
dec
xor
je
fbld
xor
adc
xchg
cmpsb
nop
jo
int
ficoml
cmc
ds
xor
icebp
orl
inc
xlat
cli
adc
xchg
push
cmpsb
call
cld
fisttps
sub
insb
mov
push
push
jecxz
push
hlt
jp
adc
sbb
sti
adc
push
sub
mov
in
mov
pop
mov
mov
rcl
mov
mov
pop
xchg
orl
xor
out
or
cmp
xorl
movsl
ljmp
xchg
jno
fdivl
fisubl
stos
jle
mov
sbb
or
lcall
jnp
sub
sarb
and
ja
dec
mov
lret
jae
insl
pop
mov
jae
sbb
clc
outsl
jmp
fiaddl
neg
fstp
jp
or
and
aad
or
mov
sbb
iret
mov
insb
cwtl
sub
jb
and
jp
push
xor
rolb
inc
out
cwtl
gs
icebp
nop
into
ja
repz
aas
cmpsb
pop
mov
mov
shll
xchg
sub
dec
cmp
decb
push
mov
sbbb
mov
push
and
sarb
lods
bound
insb
into
mov
stos
mov
jp
in
jge
ja
iret
nop
mov
leave
mov
mov
pushf
fwait
rcr
cmpb
sub
cmpsl
sbb
sub
not
lret
lret
shll
pop
aad
mov
push
mov
clc
mov
mov
or
repz
push
add
mov
cmp
cltd
push
mov
mov
pusha
scas
sub
push
cmp
cmp
in
in
mov
in
sub
testb
jne
mov
jmp
imul
jo
dec
insb
js
pop
les
repz
stc
mov
and
sub
pop
out
sbb
xor
mov
scas
xchg
mov
and
inc
pop
cs
sbb
pop
fdivp
stos
jbe
sahf
inc
imul
add
inc
jnp
sarl
lock
pop
xor
subb
pusha
jge
and
dec
dec
imul
jge
xchg
xchg
les
cmp
jbe
dec
ret
pop
cmc
bound
xchg
cmpl
outsb
inc
inc
sub
les
and
cld
push
imul
inc
dec
pushf
loop
cmp
addl
outsl
mov
leave
xchg
push
jp
dec
add
je
sahf
in
int
adc
mov
in
mov
pop
add
sub
pop
jnp
adc
sub
dec
cmp
jecxz
dec
call
mov
mov
addr16
fsubrs
or
aam
aam
outsl
int3
xor
scas
cmp
icebp
fisubs
arpl
into
push
inc
jbe
cmc
push
mov
sbb
out
mov
mov
andb
es
push
test
scas
scas
stc
push
mov
dec
push
dec
iret
xchg
sbb
imul
mov
iret
jmp
iret
adc
ljmp
gs
push
inc
add
mov
xchg
pushf
cmp
cli
aaa
xlat
jne
inc
stc
fidivrs
lods
jne
cmc
sub
repnz
popa
jo
out
mov
out
or
inc
mov
into
xor
data16
mov
jnp
cmp
jg
addb
out
add
test
dec
jae
xor
jle
sub
mov
dec
jmp
mov
repz
shrb
jp
sbb
jmp
pop
dec
mov
lock
and
out
xchg
xor
mov
lock
add
mov
inc
jge
test
xchg
xchg
jns
popa
cmpsl
loope
adc
jnp
sti
ret
lret
or
mov
jne
push
repnz
mov
adc
mov
xchg
add
cs
jle
jae
ja
fsubl
xchg
cmp
xchg
mov
repz
cmpsl
or
cmc
or
sti
stos
pop
rcrb
mov
dec
sbb
cmpsl
sahf
loopne
insb
sub
sbb
xor
stos
push
lret
adc
sub
lea
mov
fidivrl
ret
andl
rorl
inc
jecxz
std
adc
mov
outsl
cmp
mov
out
mov
int3
mov
cmpsb
shr
add
jbe
mov
dec
stos
jns
lret
aad
push
rol
pop
test
sbb
outsb
bound
and
out
xor
sbb
sbb
dec
ret
xor
mov
aad
outsl
out
je
or
adc
lret
sub
dec
ljmp
mov
mov
stos
sub
js
adc
adc
ss
les
test
mov
loop
outsl
sub
daa
dec
push
shl
andb
xchg
and
mov
rcr
std
mov
fs
loope
jae
in
cli
ljmp
test
inc
inc
and
int
mov
ret
xchg
sbb
add
or
xchg
test
mov
xchg
dec
pop
xchg
cltd
jne
fbld
in
sub
xchg
mov
jb
fbld
aas
cmp
jg
or
loope
push
adc
pop
or
cmp
loop
dec
into
add
cmpsb
dec
pop
adc
xchg
cmp
mov
out
lock
sbb
adc
mov
dec
push
cld
into
hlt
mov
xor
sub
fisttpll
inc
lret
test
mov
les
movsb
jecxz
inc
mov
jge
scas
ss
push
mov
out
dec
rcrb
int
add
es
stc
and
xor
pop
xor
dec
jge
inc
jle
jne
jl
push
ja
pushf
mov
inc
arpl
mov
or
jbe
call
push
test
dec
lret
fidivrs
rcrl
jmp
mov
test
xor
adc
fs
ret
int3
jae
xchg
cs
jecxz
xchg
std
inc
jne
mov
and
jg
or
sbb
cli
lret
das
mov
lds
jge
add
xor
bound
xor
arpl
add
add
imul
adc
cmp
add
cmp
inc
fwait
add
imul
add
scas
add
mov
scas
add
cmp
jne
repz
jmp
mov
push
mov
sub
mov
mov
mov
mov
mov
mov
data16
data16
data16
data16
data16
data16
pushf
popl
mov
mov
mov
mov
lea
mov
mov
movl
mov
mov
movl
movl
mov
mov
mov
mov
call
mov
push
call
pop
push
call
push
call
cmpl
jne
push
call
pop
push
call
push
call
leave
ret
andl
ret
int3
int3
push
pushl
mov
mov
lea
sub
push
push
push
mov
xor
xor
push
mov
pushl
mov
movl
mov
lea
mov
ret
mov
mov
pop
pop
pop
pop
pop
mov
pop
push
ret
int3
int3
int3
int3
int3
int3
int3
mov
push
mov
sub
push
mov
push
mov
xor
push
mov
movb
movl
lea
cmp
je
mov
add
xor
call
mov
mov
add
xor
call
mov
testb
jne
mov
lea
mov
mov
mov
mov
cmp
je
lea
lea
mov
lea
mov
mov
mov
test
je
mov
call
movb
test
js
jg
mov
mov
cmp
jne
cmpb
je
mov
cmp
je
mov
add
xor
call
mov
mov
add
xor
call
mov
pop
pop
pop
mov
pop
ret
movl
jmp
mov
cmpl
jne
cmpl
je
push
call
add
test
je
mov
push
push
call
add
mov
mov
call
mov
cmp
je
push
push
mov
mov
call
mov
mov
mov
mov
cmp
je
mov
add
xor
call
mov
mov
add
xor
call
mov
mov
mov
call
mov
cmp
je
push
push
mov
call
jmp
int3
push
push
push
mov
mov
mov
push
push
push
push
push
push
pushl
mov
xor
mov
mov
mov
mov
mov
xor
mov
cmp
je
mov
cmp
je
cmp
jbe
lea
lea
mov
mov
cmpl
jne
push
mov
call
mov
mov
call
jmp
popl
add
pop
pop
pop
ret
mov
testl
mov
je
mov
mov
xor
call
push
mov
pushl
pushl
pushl
call
add
pop
mov
mov
mov
mov
ret
push
mov
mov
pushl
pushl
pushl
call
add
pop
ret
push
push
push
push
mov
xor
xor
xor
xor
xor
call
pop
pop
pop
pop
ret
mov
mov
mov
push
call
xor
xor
xor
xor
xor
jmp
push
mov
push
push
push
push
push
push
push
call
pop
pop
pop
pop
ret
push
mov
push
push
pushl
call
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
mov
mov
mov
cmp
je
xor
pop
ret
mov
add
cmpl
jne
xor
mov
cmp
sete
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
mov
mov
mov
add
movzwl
push
push
movzwl
xor
push
lea
test
je
mov
mov
cmp
jb
mov
add
cmp
jb
inc
add
cmp
jb
xor
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
mov
push
sub
push
push
push
mov
xor
xor
push
lea
mov
mov
movl
push
call
add
test
je
mov
sub
push
push
call
add
test
je
mov
shr
not
and
movl
mov
mov
pop
pop
pop
pop
mov
pop
ret
mov
mov
xor
cmpl
sete
mov
ret
mov
movl
xor
mov
mov
pop
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
xor
call
push
mov
mov
push
mov
push
call
add
pop
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
push
pushl
mov
xor
push
lea
mov
mov
mov
mov
cmp
je
cmpl
je
cmp
jbe
lea
mov
mov
mov
cmpl
jne
push
mov
call
mov
call
jmp
mov
mov
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
push
push
push
pop
pop
pop
pop
pop
ret
call
ret
int3
jmp
