test
je
mov
test
je
cmpb
je
push
call
pop
push
call
pop
xor
pop
pop
leave
ret
push
mov
lea
push
call
mov
pop
mov
push
call
pop
ret
push
mov
push
push
test
je
mov
lea
push
push
call
mov
test
je
mov
lea
push
push
push
call
mov
test
jne
mov
leave
ret
xor
leave
ret
mov
push
call
jmp
push
mov
push
push
push
mov
mov
mov
mov
mov
mov
call
test
jne
mov
mov
call
test
je
mov
mov
mov
lea
push
push
pushl
push
call
cmpl
je
mov
cmp
jne
pop
pop
pop
pop
ret
lea
mov
push
call
jmp
xor
jmp
push
mov
push
push
push
mov
mov
test
je
mov
push
xor
cmp
jne
call
cmp
je
mov
mov
call
pop
pop
leave
ret
cmp
jne
xor
jmp
push
call
cmp
pop
je
mov
call
mov
push
mov
call
push
xor
push
lea
call
mov
cmp
mov
pop
pop
pop
push
mov
push
jne
mov
push
call
test
js
mov
lea
call
mov
jmp
mov
dec
js
mov
cmp
jge
pushl
pushl
call
xor
ret
sub
fldl
push
fsubl
push
fstl
fldl
fsubl
fstl
fldl
fsubl
fsubp
fstpl
fldl
mov
fsubl
fsubp
fstpl
call
test
jne
mov
fldl
lea
fcompl
fnstsw
test
jnp
fldl
fcompl
fnstsw
test
jnp
mov
fldl
sub
fstpl
call
fstpl
fldl
fstpl
call
fldl
lea
fstpl
add
fstpl
fldl
fcompl
fnstsw
test
jnp
mov
fldl
lea
fcompl
fnstsw
test
jnp
mov
fldl
sub
fstpl
call
fstpl
fldl
fstpl
call
fldl
lea
fstpl
add
fstpl
fldl
fcompl
fnstsw
test
jnp
mov
fldl
lea
fcompl
fnstsw
test
jnp
mov
fldl
sub
fstpl
call
fstpl
fldl
fstpl
call
fldl
lea
fstpl
add
fstpl
fldl
fcompl
fnstsw
test
jnp
mov
fldl
lea
fcompl
fnstsw
test
jnp
fldl
sub
fstpl
call
fstpl
fldl
fstpl
call
fldl
add
fstpl
fstpl
pop
pop
add
ret
lea
jmp
lea
jmp
lea
jmp
lea
jmp
fldl
pop
fld
pop
fldl
fld
fxch
fstpl
fxch
fstpl
fldl
fstl
fxch
fstpl
fldl
fld
fxch
fstpl
fxch
fstpl
fxch
fstpl
fstpl
add
ret
lea
jmp
fldz
fcoml
fnstsw
test
jp
fcoml
fnstsw
test
jnp
fcoml
fnstsw
test
jnp
fstp
xor
ret
fcoml
fnstsw
test
jp
jmp
fcoml
fnstsw
test
jp
fcoml
fnstsw
test
jp
fstp
mov
ret
push
mov
sub
andl
push
push
mov
mov
push
lea
cmp
jb
xor
pop
pop
pop
leave
ret
push
mov
push
push
cmpl
je
cmpb
movl
movl
je
lea
push
movzbl
dec
je
dec
jne
push
push
mov
call
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
push
push
push
je
mov
mov
test
je
testb
je
mov
mov
mov
mov
and
je
mov
mov
mov
cmp
jne
test
je
mov
mov
cmpl
je
mov
push
push
push
mov
push
call
mov
add
mov
xor
pop
pop
pop
ret
xor
jmp
xor
jmp
mov
movl
xor
pop
pop
pop
ret
push
mov
sub
mov
xor
mov
andl
push
mov
push
mov
lea
lea
push
mov
mov
mov
push
movl
movl
movb
call
test
js
mov
lea
push
mov
mov
call
test
je
cmpl
je
testb
je
mov
add
push
call
test
pop
jne
push
call
pop
mov
mov
pop
xor
pop
call
leave
ret
mov
lea
push
call
test
pop
je
mov
mov
add
push
push
call
test
js
mov
jmp
push
mov
push
push
push
mov
push
mov
push
call
mov
andl
pop
push
mov
lea
call
mov
test
je
pushl
mov
push
call
lea
mov
call
push
call
pop
mov
pop
pop
leave
ret
push
push
call
mov
test
pop
je
push
push
push
call
add
mov
mov
xor
pop
ret
push
mov
sub
push
mov
mov
call
mov
test
je
movb
mov
test
je
mov
mov
call
andl
andl
lea
mov
mov
lea
mov
mov
mov
mov
cmp
jae
incl
mov
mov
lea
call
mov
mov
push
call
mov
jmp
lea
call
mov
mov
mov
pop
leave
ret
mov
call
pushl
mov
push
call
ret
push
mov
sub
mov
xor
mov
push
mov
push
mov
mov
push
push
call
xor
push
lea
mov
mov
call
mov
cmp
je
mov
mov
push
call
xor
test
js
mov
cmp
je
mov
lea
mov
push
mov
push
push
call
cmpl
movl
je
mov
mov
andl
lea
push
push
push
call
cmpl
movl
je
andl
lea
mov
mov
mov
lea
push
movl
movl
movb
mov
push
call
mov
push
lea
call
testb
je
mov
test
je
mov
call
mov
push
call
orb
andb
testb
je
mov
add
push
call
test
pop
je
lea
call
mov
push
call
xor
inc
mov
pop
pop
xor
pop
call
leave
ret
movl
jmp
movl
jmp
push
call
pop
jmp
mov
test
je
mov
push
call
xor
inc
ret
push
mov
sub
push
push
mov
andb
movzbl
push
and
push
push
pushl
mov
mov
xor
incl
lea
mov
mov
call
mov
orb
push
mov
call
mov
mov
cmp
jg
dec
lea
mov
call
decl
cmpl
ja
mov
mov
mov
xor
pop
and
xor
pop
xor
pop
leave
ret
mov
mov
mov
mov
mov
mov
mov
call
cmpl
mov
jne
mov
mov
mov
cmp
jae
push
push
mov
call
movl
mov
incl
cmp
mov
mov
mov
jge
jmp
int3
int3
int3
int3
sub
mov
xor
mov
mov
test
push
mov
push
mov
push
mov
push
mov
je
cmpl
jge
mov
mov
push
mov
call
push
push
call
add
test
je
push
push
call
add
test
je
orb
cmpl
movb
je
mov
mov
push
push
mov
call
mov
lea
lea
push
mov
mov
mov
push
movl
movl
movl
movb
call
test
js
mov
mov
add
mov
mov
mov
mov
mov
mov
push
lea
lea
mov
call
mov
sub
mov
add
lea
xor
mov
movl
call
lea
push
lea
call
mov
mov
call
lea
mov
call
mov
call
test
js
mov
test
je
mov
add
push
call
add
test
je
xor
mov
pop
pop
pop
pop
xor
call
add
ret
mov
mov
mov
movb
call
movb
mov
movb
jmp
push
mov
sub
mov
xor
mov
mov
test
push
push
push
je
xor
cmp
mov
jne
lea
mov
mov
push
lea
push
mov
movl
movl
mov
call
cmpb
jne
mov
call
mov
mov
mov
mov
cmp
je
mov
shr
and
jne
mov
push
mov
lea
mov
mov
call
mov
cmp
je
push
lea
call
mov
lea
push
push
call
mov
cmp
je
mov
lea
push
push
call
cmp
jbe
mov
mov
push
lea
mov
call
mov
lea
push
pushl
push
call
test
js
cmp
je
pushl
mov
lea
mov
call
mov
cmp
je
mov
push
push
call
lea
call
lea
call
incl
mov
cmp
jb
lea
call
lea
call
mov
cmp
je
cmp
je
lea
push
add
push
mov
mov
push
call
test
js
cmp
je
pushl
mov
lea
mov
call
mov
pushl
mov
push
call
lea
call
mov
cmp
je
mov
push
call
mov
xor
call
mov
cmp
mov
je
mov
push
call
mov
cmp
je
lea
xor
call
mov
push
mov
lea
mov
mov
call
mov
push
lea
call
mov
lea
push
mov
call
mov
push
mov
lea
mov
call
mov
cmp
je
mov
cmp
je
add
mov
pushl
xor
push
pushl
lea
inc
push
movl
movl
mov
mov
push
call
pushl
pushl
call
mov
pop
pop
pushl
lea
push
pushl
movl
push
movl
mov
mov
push
call
pushl
pushl
call
mov
pop
pop
pushl
lea
push
pushl
movl
push
movl
mov
mov
push
call
pushl
pushl
call
pop
pop
mov
mov
push
call
lea
mov
call
lea
call
lea
call
push
lea
push
mov
mov
call
mov
cmp
je
mov
cmp
jne
lea
call
lea
call
pushl
pushl
call
pop
pop
mov
pop
pop
xor
pop
call
leave
ret
push
call
cmp
pop
je
mov
xor
mov
stos
stos
xor
mov
push
mov
call
mov
pop
mov
lea
push
add
mov
push
push
call
test
jns
jmp
mov
push
mov
lea
mov
call
mov
cmp
je
push
lea
call
mov
lea
push
push
call
lea
call
jmp
push
lea
call
xor
call
jmp
push
mov
sub
push
lea
mov
test
jne
xor
mov
call
andl
andl
lea
mov
push
lea
lea
movl
mov
call
pushl
andl
mov
lea
call
mov
test
je
mov
push
push
call
xor
mov
call
lea
xor
call
lea
xor
call
lea
call
lea
call
pop
leave
ret
push
push
push
push
push
push
push
movl
lea
mov
mov
push
push
call
mov
mov
cmp
jne
lea
mov
mov
add
lea
cmp
jne
push
push
push
push
call
mov
cmp
jne
push
xor
push
lea
mov
mov
push
push
call
mov
cmp
je
testl
je
add
cmp
jne
push
push
lea
mov
mov
push
push
call
mov
cmp
je
testl
je
add
cmp
jne
push
push
push
lea
push
call
pop
pop
lea
pop
add
jmp
push
mov
and
mov
sub
cmpl
push
push
push
mov
jle
cmpl
jle
fldl
mov
fstl
fildl
fstl
fidivrl
fstl
fcompp
fnstsw
test
je
lea
fldl
sub
fldl
fmul
fxch
fstl
fmull
faddp
fstpl
call
call
fldl
fmull
mov
faddl
fstpl
call
add
call
test
mov
mov
mov
movl
jne
xor
cltd
idivl
cmp
mov
jg
lea
test
mov
mov
mov
jg
test
jg
test
jg
testb
jne
test
je
addl
mov
test
mov
jne
mov
pop
pop
pop
mov
pop
ret
mov
fildl
lea
fldl
fdivr
fxch
fstpl
fildl
fdiv
fstpl
fildl
fdiv
fstpl
fildl
mov
fdiv
fstpl
fildl
fdiv
fstpl
fildl
fdiv
fstpl
fildl
fdiv
fstpl
fidivrl
fstpl
call
mov
push
lea
push
lea
push
lea
push
lea
push
mov
mov
mov
call
test
je
addl
mov
test
mov
je
jmp
mov
and
neg
sbb
inc
ret
push
mov
mov
mov
push
push
xor
push
add
call
mov
neg
sbb
and
cmp
jne
xor
cmp
jne
mov
pop
pop
pop
ret
mov
jmp
push
lea
mov
call
mov
lea
push
push
call
test
js
mov
cmp
je
pushl
mov
pushl
push
call
mov
lea
call
mov
jmp
mov
mov
jmp
push
mov
and
push
push
mov
push
push
mov
testb
jne
push
lea
push
call
test
je
andb
cmpl
je
mov
test
jne
pushl
pushl
pushl
push
call
testb
jne
push
lea
push
call
test
je
mov
andb
test
je
cmp
je
mov
or
mov
xor
inc
pop
pop
pop
mov
pop
ret
cmp
jne
movzwl
mov
push
push
mov
push
mov
call
test
je
mov
mov
mov
pushl
xor
pushl
pushl
push
call
mov
movzwl
push
push
push
mov
call
test
je
mov
mov
jmp
push
push
pushl
mov
call
jmp
push
mov
call
test
je
orb
cmpl
jne
mov
push
push
mov
call
jmp
push
mov
sub
push
mov
mov
push
push
xor
push
lea
lea
movl
mov
mov
mov
call
mov
cmp
je
push
lea
mov
call
mov
lea
push
push
call
pushl
mov
lea
mov
call
mov
cmp
je
lea
push
mov
mov
push
call
cmp
jne
mov
mov
push
call
lea
call
lea
call
lea
call
inc
lea
call
mov
pop
pop
pop
leave
ret
push
mov
sub
push
xor
inc
cmpl
push
mov
jl
jg
cmpl
jbe
mov
mov
lea
push
call
test
je
push
mov
mov
mov
push
mov
call
pushl
mov
lea
push
push
movl
movl
mov
call
pushl
mov
pushl
call
mov
test
pop
pop
jne
mov
mov
push
call
test
jne
cmpb
mov
lea
je
push
call
test
mov
je
mov
mov
push
call
pushl
mov
mov
lea
push
push
movl
movl
mov
call
pushl
mov
pushl
call
test
pop
pop
jne
cmpb
je
pushl
mov
pushl
mov
lea
push
push
movl
movl
mov
call
pushl
mov
pushl
call
pop
pop
test
jne
mov
mov
lea
push
push
call
test
jne
xor
cmp
je
lea
push
mov
mov
mov
mov
push
push
call
mov
mov
andl
andl
lea
push
push
push
call
mov
mov
andl
andl
lea
push
push
push
call
mov
mov
andl
andl
lea
push
push
push
call
cmpb
mov
lea
je
push
call
test
mov
je
mov
mov
push
call
cmpl
jl
jg
cmpl
ja
mov
lea
push
movl
movl
mov
mov
push
call
pushl
mov
pushl
call
test
pop
pop
jne
mov
movl
movl
mov
mov
mov
call
push
push
lea
push
pushl
mov
call
pushl
mov
pushl
call
pop
pop
test
jne
pushl
mov
pushl
lea
push
movl
movl
mov
mov
push
call
pushl
mov
pushl
call
test
pop
pop
jne
pushl
mov
pushl
lea
push
movl
movl
mov
mov
push
call
pushl
mov
pushl
call
test
pop
pop
jne
pushl
mov
lea
push
movl
movl
mov
mov
push
call
pushl
mov
pushl
call
test
pop
pop
jne
movzwl
mov
push
lea
push
movl
movl
mov
mov
push
call
pushl
mov
pushl
call
test
pop
pop
jne
movzwl
mov
push
lea
push
movl
movl
mov
mov
push
call
pushl
mov
pushl
call
test
pop
pop
jne
mov
movl
movl
mov
mov
call
push
push
lea
push
pushl
call
pushl
mov
pushl
call
test
pop
pop
jne
xor
lea
call
mov
test
jne
lea
call
mov
test
je
mov
push
call
lea
call
mov
test
je
mov
push
call
lea
call
xor
pop
pop
pop
leave
ret
pushl
mov
pushl
lea
push
movl
movl
mov
mov
push
call
lea
mov
call
test
jne
pushl
mov
pushl
lea
push
movl
movl
mov
mov
push
call
lea
mov
call
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
push
push
mov
mov
xor
push
mov
call
mov
add
cmp
jne
push
call
xor
add
cmp
je
mov
mov
movl
mov
mov
mov
push
call
mov
cmp
mov
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
call
test
je
mov
push
call
add
test
je
mov
mov
push
push
push
mov
call
mov
test
js
mov
mov
push
call
pop
pop
mov
pop
pop
pop
ret
cmp
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
pop
pop
pop
pop
pop
ret
push
mov
mov
sub
cmpl
push
mov
jge
cmpl
je
push
mov
test
push
jne
cmpl
jne
pop
pop
pop
leave
ret
cmpl
je
xor
xor
mov
mov
mov
xor
push
pushl
push
push
pushl
push
push
call
jmp
testw
je
jmp
mov
cmpl
je
pushl
mov
pushl
mov
pushl
call
xor
ret
mov
add
jmp
push
mov
mov
test
jg
push
mov
call
test
jne
pushl
call
pop
ret
cmp
jle
jmp
mov
jmp
mov
mov
mov
push
push
call
xor
ret
push
mov
mov
sub
test
push
push
push
je
push
lea
xor
call
mov
cmp
ja
mov
push
push
push
lea
push
call
cmpl
jne
xor
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
mov
xor
mov
push
mov
push
push
mov
mov
lea
rep
xor
cmp
mov
mov
je
push
lea
call
push
push
lea
push
push
call
add
test
lea
js
mov
push
call
push
lea
push
push
call
add
test
js
mov
push
push
call
add
cmp
je
mov
lea
push
push
push
mov
movl
call
mov
push
push
push
push
push
call
mov
mov
mov
add
lea
push
push
lea
push
push
call
mov
test
jbe
mov
mov
xor
jmp
lea
mov
test
jne
add
add
cmp
jb
mov
push
call
mov
add
push
xor
mov
lea
mov
call
mov
cmp
je
mov
push
mov
call
test
js
lea
mov
call
lea
call
lea
call
xor
mov
pop
pop
pop
xor
call
mov
pop
ret
mov
mov
mov
lea
push
push
add
call
mov
mov
add
push
mov
push
push
call
mov
mov
mov
lea
push
push
push
push
call
mov
push
call
mov
add
jmp
push
mov
push
push
push
mov
mov
test
jne
cmp
je
incl
pop
leave
ret
cmpl
je
cmpl
jne
mov
xor
test
je
lea
push
push
mov
mov
push
call
mov
test
mov
je
mov
push
pushl
push
call
lea
call
jmp
incl
cmpl
jne
xor
push
mov
push
push
call
push
call
add
jmp
push
mov
and
sub
push
push
mov
xor
cmp
push
jne
mov
pushl
call
mov
call
cmp
jne
pop
pop
xor
pop
mov
pop
ret
push
call
cmp
pop
je
mov
lea
movl
mov
mov
mov
call
cmp
je
mov
mov
mov
mov
mov
push
call
mov
jmp
mov
mov
mov
mov
lea
lea
push
mov
mov
mov
call
push
lea
push
lea
push
mov
call
add
lea
push
mov
lea
call
mov
push
push
mov
mov
mov
lea
push
push
call
jmp
int3
int3
int3
sub
mov
mov
push
mov
push
push
mov
lea
push
push
call
sub
mov
sub
mov
mov
js
mov
sub
sub
js
mov
mov
mov
push
push
mov
call
push
mov
call
mov
call
mov
mov
call
mov
cmp
je
cmp
je
test
jne
cmpb
je
cmp
je
mov
mov
mov
pop
mov
mov
pop
mov
pop
add
ret
mov
sub
cltd
sub
sar
add
jmp
mov
sub
add
jmp
push
mov
push
push
mov
cmp
je
mov
mov
lea
mov
mov
mov
leave
ret
push
mov
sub
push
push
push
xor
mov
mov
push
lea
lea
mov
mov
mov
mov
call
pushl
mov
mov
mov
lea
call
mov
mov
xor
push
lea
lea
mov
mov
mov
call
pushl
mov
lea
mov
call
mov
cmp
je
cmp
jne
xor
inc
lea
call
lea
call
lea
call
lea
call
pop
pop
mov
pop
leave
ret
push
lea
mov
call
mov
lea
push
push
call
mov
mov
mov
lea
mov
call
jmp
push
mov
sub
push
push
push
pushl
xor
mov
lea
mov
call
mov
cmp
je
cmp
je
mov
mov
lea
call
mov
mov
lea
pushl
call
test
je
mov
mov
cmp
mov
jne
mov
cmp
mov
je
mov
push
call
mov
push
lea
mov
mov
call
mov
mov
lea
push
push
call
mov
cmp
je
mov
mov
push
push
movl
mov
mov
mov
push
call
lea
xor
call
push
call
mov
cmp
pop
je
pushl
xor
call
pop
push
push
pushl
call
mov
mov
mov
cmp
jne
mov
cmp
mov
je
mov
push
call
mov
mov
lea
push
push
call
cmp
jne
mov
cmp
jne
lea
call
lea
call
lea
call
lea
call
pop
pop
mov
pop
leave
ret
int3
push
mov
push
mov
push
mov
mov
test
je
push
mov
test
push
mov
mov
mov
mov
je
mov
mov
mov
mov
call
cmp
je
mov
test
je
test
js
xor
mov
mov
test
je
cmpl
jne
mov
test
jne
mov
cmpl
jne
mov
cmp
je
pop
pop
pop
xor
pop
pop
ret
mov
test
jne
mov
test
js
xor
mov
jmp
mov
jmp
mov
xor
cmp
je
push
add
mov
call
cmpl
je
mov
test
je
lea
push
push
call
mov
mov
mov
test
je
mov
test
je
mov
mov
call
test
je
cmp
je
mov
mov
push
push
push
push
mov
call
jmp
cmpl
je
push
lea
mov
call
cmpl
je
mov
test
je
lea
push
lea
call
mov
mov
mov
test
je
test
je
mov
jmp
mov
movl
jmp
mov
jmp
cmpl
je
push
call
test
pop
je
push
mov
mov
call
pop
push
call
pop
ret
xor
jmp
xor
mov
movl
mov
push
push
lea
mov
lea
mov
mov
mov
mov
mov
mov
mov
test
je
and
mov
call
mov
mov
mov
mov
mov
call
pop
mov
pop
ret
push
mov
push
push
push
push
push
mov
movzbl
lea
push
push
pushl
mov
pushl
call
test
js
mov
mov
mov
shr
mov
and
and
cmp
je
test
jne
mov
test
jne
test
jne
xor
pop
pop
pop
leave
ret
lea
push
pushl
mov
push
call
test
js
mov
jmp
test
jne
mov
mov
test
je
pushl
mov
push
push
pushl
mov
call
jmp
mov
mov
test
je
mov
and
or
mov
jmp
mov
cmp
jne
mov
cmpb
je
jmp
push
push
push
mov
push
push
mov
movl
movl
call
lea
call
lea
call
lea
call
lea
call
lea
call
mov
lea
pushl
call
andl
lea
pushl
call
andl
lea
mov
mov
lea
lea
cmp
pop
pop
jne
push
push
push
push
mov
call
mov
cmp
mov
jne
mov
test
je
mov
push
call
lea
cmpl
je
push
call
pop
pushl
call
andl
mov
test
pop
je
call
push
call
pop
mov
test
je
mov
push
call
mov
test
je
call
mov
test
mov
je
lea
push
call
test
pop
je
mov
test
jne
pushl
call
pop
lea
call
lea
call
pop
pop
pop
lea
pop
add
jmp
push
call
pop
jmp
mov
lea
push
mov
or
lock
dec
pop
je
ret
xor
inc
mov
mov
push
call
xor
jmp
push
mov
push
push
push
call
test
pop
je
mov
andl
test
movl
mov
je
mov
push
call
test
mov
je
mov
push
call
mov
mov
call
test
je
mov
push
push
push
call
test
pop
js
incl
lea
call
leave
ret
xor
jmp
int3
int3
int3
int3
int3
int3
sub
push
mov
push
push
push
mov
xor
test
mov
mov
je
push
call
mov
add
mov
mov
push
call
add
push
lea
lea
mov
mov
movl
call
cmpl
je
mov
mov
test
jne
test
jne
test
je
push
call
mov
add
test
je
test
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
je
test
je
push
call
add
xor
pop
pop
pop
pop
add
ret
xor
jmp
push
mov
sub
push
push
mov
xor
cmp
push
je
cmp
je
push
lea
mov
call
mov
lea
push
lea
push
call
test
js
pushl
mov
lea
mov
call
cmp
je
pushl
lea
mov
mov
call
mov
pushl
mov
push
call
xor
cmp
je
cmpl
mov
je
mov
mov
push
lea
mov
call
mov
mov
lea
push
push
call
test
mov
js
mov
test
je
mov
lea
push
push
mov
call
mov
cmp
ja
mov
lea
push
mov
call
mov
mov
lea
push
pushl
push
call
test
jne
mov
push
lea
mov
call
mov
mov
mov
lea
push
push
pushl
pushl
call
test
mov
jne
mov
mov
lea
push
push
call
cmpl
jne
lea
call
lea
call
lea
call
lea
call
mov
pop
pop
pop
leave
ret
mov
test
je
cmpl
jne
mov
push
call
ret
push
push
mov
xor
cmp
je
mov
cmp
push
lea
jne
mov
push
mov
call
cmp
je
mov
push
push
call
pop
pop
mov
test
pop
jne
mov
pop
pop
ret
push
call
pop
jmp
push
call
pop
jmp
mov
mov
and
neg
sbb
not
and
test
je
mov
mov
ret
xor
ret
push
mov
push
push
mov
cmp
push
jne
call
test
je
mov
mov
xor
push
mov
lea
mov
call
mov
cmp
je
mov
cmp
je
push
lea
mov
call
pushl
call
pop
push
lea
push
pushl
push
push
push
push
pushl
call
add
test
mov
js
mov
lea
call
lea
call
mov
pop
pop
pop
pop
ret
pushl
pushl
push
pushl
pushl
pushl
pushl
call
jmp
mov
push
mov
mov
mov
mov
mov
xor
push
push
mov
mov
mov
mov
push
mov
mov
andw
push
pushl
mov
mov
mov
mov
mov
mov
call
mov
pop
ret
push
mov
push
push
push
push
mov
cmp
jne
pop
pop
pop
leave
ret
cmp
je
mov
lea
cmpl
je
mov
mov
test
je
mov
push
mov
call
test
je
cmpl
jne
mov
test
je
mov
mov
test
je
add
push
pushl
call
lea
mov
mov
cmp
je
test
mov
jne
push
pushl
mov
call
lea
mov
mov
call
push
push
andl
movl
lea
mov
push
call
pushl
mov
push
push
push
call
lea
call
mov
mov
call
xor
mov
call
lea
call
jmp
mov
mov
mov
call
jmp
mov
push
call
jmp
push
mov
lea
mov
push
call
test
je
mov
test
je
pushl
pushl
call
pop
ret
push
push
mov
mov
push
mov
and
cmpl
jne
mov
and
mov
mov
mov
test
jne
or
xor
or
pop
pop
pop
ret
cmpl
je
jmp
pushl
mov
mov
pushl
mov
push
call
ret
mov
andl
mov
mov
pushl
mov
mov
push
call
pushl
call
test
pop
mov
je
pushl
call
pop
mov
ret
push
mov
push
push
push
mov
mov
mov
test
mov
je
mov
push
call
mov
andl
test
je
mov
lea
push
push
pushl
push
push
call
mov
lea
call
mov
pop
leave
ret
push
mov
push
push
push
mov
mov
test
je
test
je
sar
mov
mov
push
push
push
push
push
call
mov
mov
test
ja
andl
push
pop
mov
test
je
mov
cmp
jl
pop
pop
xor
pop
pop
ret
xor
jmp
mov
call
test
jne
mov
pushl
mov
push
call
incl
add
jmp
andl
mov
call
test
jne
mov
mov
pushl
mov
push
call
incl
cmp
jae
jmp
push
mov
push
lea
push
mov
call
test
je
pop
pop
ret
andl
mov
push
mov
call
xor
jmp
push
push
push
mov
mov
mov
push
push
lea
add
lea
add
lea
cmp
jne
test
jne
mov
cmp
mov
lea
jne
testb
movl
je
push
call
add
pop
pop
mov
pop
pop
pop
ret
push
push
mov
cmpl
push
jne
mov
push
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
cmp
je
push
call
test
pop
je
mov
mov
mov
test
mov
movl
mov
mov
jne
test
mov
je
mov
push
call
mov
mov
mov
neg
sbb
and
add
pop
pop
pop
ret
xor
mov
push
mov
call
cmp
jne
xor
jmp
mov
mov
mov
call
test
jne
mov
push
mov
call
test
jne
push
call
pop
cmp
je
mov
movl
mov
mov
mov
cmp
je
push
lea
xor
push
inc
call
mov
cmp
mov
je
jmp
xor
jmp
int3
push
mov
and
sub
mov
push
lea
push
mov
movl
push
xor
mov
movl
call
mov
mov
lea
lea
mov
add
call
mov
push
mov
push
mov
call
test
js
mov
mov
mov
call
test
jne
mov
lea
call
lea
call
mov
test
je
cmp
je
mov
test
movl
je
call
mov
mov
cmp
mov
jbe
mov
mov
mov
lea
mov
add
call
mov
xor
mov
lea
mov
mov
movl
call
mov
mov
mov
mov
mov
lea
call
cmp
jae
mov
add
cmp
mov
je
mov
mov
mov
lea
mov
lea
add
call
mov
push
lea
push
mov
call
test
js
mov
mov
mov
call
test
jne
mov
test
mov
je
addl
mov
mov
test
mov
jne
test
je
mov
call
mov
mov
cmpl
jne
test
mov
je
addl
mov
mov
test
mov
jne
test
je
mov
call
xor
jmp
mov
test
mov
je
addl
mov
mov
test
mov
mov
je
call
mov
lea
call
mov
test
je
cmp
jne
mov
test
je
call
mov
test
je
mov
movl
call
mov
mov
addl
test
je
mov
call
mov
test
jne
xor
pop
pop
pop
mov
pop
ret
push
lea
sub
mov
xor
mov
mov
test
push
mov
jne
mov
call
mov
mov
mov
mov
xor
pop
call
add
leave
ret
andl
mov
mov
mov
lea
mov
lea
mov
push
lea
movl
call
mov
lea
call
mov
mov
push
mov
call
pop
lea
call
lea
call
jmp
push
lea
sub
mov
xor
mov
mov
push
mov
lea
mov
mov
test
jne
push
xor
cmp
je
push
mov
push
lea
mov
call
mov
mov
cmp
mov
je
mov
push
call
mov
cmp
je
push
lea
mov
call
mov
mov
lea
push
push
push
call
test
mov
js
cmp
jne
lea
call
xor
lea
call
mov
pop
pop
mov
xor
pop
call
add
leave
ret
mov
mov
push
call
xor
jmp
mov
jmp
int3
push
mov
and
sub
mov
xor
mov
mov
push
mov
push
push
xor
mov
mov
mov
mov
mov
mov
mov
mov
cmp
mov
je
mov
andl
mov
cmp
mov
jne
push
lea
mov
mov
mov
call
mov
lea
push
call
mov
lea
mov
mov
movl
movl
mov
mov
mov
add
cmp
jne
mov
mov
lea
push
push
mov
call
fildl
fmull
fmull
fstps
flds
fadd
faddl
fistpl
mov
sar
cmp
mov
movl
jl
lea
fildl
mov
fmull
fstps
flds
fadd
faddl
fistpl
mov
mov
sar
mov
mov
add
mov
mov
add
mov
mov
mov
test
jne
test
jne
lea
call
mov
pop
pop
pop
xor
call
mov
pop
ret
test
je
cmp
jbe
push
lea
mov
call
mov
mov
mov
lea
push
push
mov
call
mov
mov
mov
mov
push
push
call
mov
mov
push
push
push
call
mov
mov
add
mov
mov
mov
add
add
push
push
mov
call
jmp
mov
add
push
call
add
test
jne
push
call
add
jmp
int3
int3
int3
int3
int3
int3
push
push
mov
xor
lea
sub
jmp
lea
mov
cmp
jne
cmp
jb
mov
cmp
jne
add
add
add
cmp
jl
pop
mov
pop
ret
pop
xor
pop
ret
mov
movl
xor
ret
push
mov
sub
push
mov
cmpl
push
push
mov
je
andl
xor
inc
testb
movl
mov
je
mov
mov
mov
mov
mov
orl
mov
push
mov
mov
mov
call
mov
pop
lea
push
mov
call
test
jne
pushl
lea
push
mov
call
cmpl
mov
je
testb
movl
jne
testb
jne
xor
pop
pop
pop
leave
ret
push
call
test
pop
je
push
mov
push
push
pop
call
xor
movl
mov
mov
movl
mov
push
push
mov
call
pop
pop
jmp
xor
jmp
cmpl
je
pushl
mov
mov
push
push
call
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
mov
mov
cmp
push
je
cmp
je
cmp
je
cmp
je
test
je
cmp
je
cmp
je
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
mov
mov
push
call
mov
mov
xor
pop
ret
xor
mov
mov
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
lea
jmp
mov
test
je
add
mov
or
ret
lea
jmp
cmpb
jne
xor
ret
mov
push
call
mov
mov
jmp
int3
int3
int3
int3
int3
int3
sub
push
push
push
movl
mov
mov
lea
add
lea
lea
cmp
jne
push
push
push
push
mov
call
mov
mov
lea
add
lea
cmp
jne
push
push
push
push
call
mov
cmp
jne
mov
push
call
mov
mov
lea
add
lea
lea
add
cmp
jne
push
push
push
push
mov
call
mov
cmp
jne
mov
mov
add
lea
lea
cmp
jne
push
push
push
push
mov
call
mov
cmp
jne
mov
mov
push
call
mov
push
call
mov
push
call
add
pop
pop
movl
pop
add
ret
movzbl
and
ret
push
mov
push
mov
mov
cmp
je
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
xor
pop
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
movl
jmp
mov
mov
call
test
jne
mov
mov
call
test
je
mov
test
je
lea
test
je
mov
push
call
xor
mov
mov
jmp
xor
jmp
push
mov
push
movl
call
mov
mov
test
je
push
call
add
mov
mov
mov
mov
test
je
mov
mov
test
je
push
call
add
testb
je
push
call
add
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
lea
push
mov
or
lock
dec
pop
je
ret
movl
mov
mov
push
call
xor
ret
push
mov
mov
sub
push
mov
push
xor
mov
push
mov
call
pushl
push
call
mov
mov
push
push
pushl
lea
call
xor
cmp
jne
lea
mov
mov
mov
push
lea
add
call
mov
push
call
mov
lea
mov
test
je
andl
mov
push
mov
mov
push
lea
push
call
lea
push
call
mov
call
mov
cmp
mov
jne
cmpb
je
mov
call
testb
mov
mov
mov
mov
mov
movb
mov
mov
je
pushl
lea
lea
call
mov
mov
mov
cmp
je
cmp
je
cmpb
mov
je
mov
mov
push
mov
mov
push
call
cmp
je
mov
mov
call
mov
xor
cmp
je
andl
mov
orl
cmp
mov
je
push
mov
mov
mov
mov
call
mov
push
lea
push
lea
push
pushl
mov
push
push
lea
call
push
pushl
push
push
call
mov
test
js
mov
test
je
mov
mov
mov
xor
mov
mov
lea
push
lea
push
pushl
mov
mov
push
call
cmp
jne
mov
mov
cmp
jne
mov
mov
mov
lea
push
push
mov
mov
mov
push
call
lea
push
call
lea
call
lea
push
call
xor
pop
pop
pop
leave
ret
call
cmp
je
mov
mov
mov
mov
mov
lea
push
lea
push
push
pushl
mov
pushl
mov
pushl
push
call
test
js
cmp
je
mov
mov
pushl
mov
call
mov
cmp
jne
lea
call
jmp
pushl
mov
call
cmp
pop
je
push
mov
push
push
pushl
lea
pushl
mov
push
call
mov
mov
movl
jmp
push
push
lea
push
push
push
pushl
lea
pushl
mov
push
mov
mov
call
mov
lea
push
push
push
call
jmp
int3
push
mov
xor
test
je
push
lea
mov
test
mov
je
add
movzbl
rol
xor
mov
test
jne
test
je
sub
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
mov
cmp
jne
mov
ret
cmp
jne
push
mov
test
je
mov
push
xor
test
lea
mov
je
add
movzbl
rol
xor
mov
test
jne
test
je
sub
mov
pop
mov
pop
ret
jmp
xor
pop
ret
mov
ret
int3
int3
int3
int3
int3
int3
int3
mov
mov
mov
mov
push
xor
cmp
lea
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
je
mov
mov
push
call
cmp
mov
mov
jne
xor
mov
mov
mov
mov
lea
mov
mov
cmp
je
push
call
cmp
je
mov
mov
mov
push
call
cmp
je
mov
mov
mov
call
mov
mov
mov
pop
mov
pop
ret
mov
call
mov
call
test
je
jmp
push
mov
sub
mov
xor
mov
andl
andw
push
mov
lea
push
mov
mov
mov
push
lea
movl
movl
call
pop
push
call
mov
pop
lea
push
call
pop
pushl
mov
push
push
push
push
call
add
lea
call
lea
call
testb
jne
testb
jne
mov
pop
mov
xor
pop
call
leave
ret
push
mov
sub
push
xor
cmp
je
lea
mov
mov
mov
lea
mov
lea
push
add
push
push
mov
movl
call
mov
mov
mov
add
lea
mov
call
mov
pop
leave
ret
pushl
pushl
call
mov
jmp
push
mov
and
sub
cmpl
push
push
je
mov
add
mov
mov
mov
add
mov
mov
mov
mov
mov
call
mov
mov
test
jne
push
lea
push
pushl
push
call
pop
pop
mov
pop
ret
push
mov
push
push
push
push
push
mov
mov
mov
movzbl
mov
call
andl
test
jne
push
push
mov
mov
mov
mov
lea
mov
push
push
call
cmpl
jne
pop
pop
pop
leave
ret
mov
mov
mov
cmp
jne
mov
mov
push
push
push
call
add
test
jne
inc
ret
xor
ret
mov
push
push
mov
push
pushl
or
push
call
mov
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
add
mov
mov
test
je
pushl
mov
push
call
xor
ret
push
lea
sub
mov
xor
mov
mov
push
push
mov
mov
push
mov
mov
xor
mov
push
lea
lea
mov
movl
mov
mov
mov
call
lea
push
mov
mov
pop
lea
mov
push
mov
mov
pusha
push
call
mov
add
into
loop
add
jb
push
shll
add
clc
pop
add
xchg
add
fadds
add
add
fs
jl
pushf
test
xchg
pop
scas
jbe
mov
add
pop
add
pop
add
pop
jno
mov
lock
add
add
outsl
add
mov
sub
push
mov
add
push
push
push
push
push
push
push
push
lea
push
push
push
call
add
stos
out
xchg
add
outsl
mov
je
stos
movl
stos
mov
out
addr16
in
add
in
fcomps
inc
in
push
push
push
push
lea
push
push
call
add
add
scas
lcall
add
add
mov
cmc
add
scas
addb
push
aam
jne
mov
add
cli
jle
in
in
lcall
push
push
push
push
call
popa
add
add
jmp
add
add
ljmp
movb
ficoms
pop
incb
mov
add
mov
mov
cmpsl
roll
mov
lcall
push
lea
push
call
mov
out
jmp
add
mov
popl
add
mov
mov
jbe
mov
add
push
add
add
addl
aad
shlb
pushf
cltd
mov
mov
add
lds
pop
add
mov
mov
mov
gs
pop
push
call
push
push
lea
push
push
push
call
test
mov
scas
int
aam
add
scas
add
iret
add
in
jno
cmpsb
add
add
add
add
add
fidivl
insb
std
icebp
add
add
mov
add
in
popa
mov
rcrb
jae
add
scas
loope
add
popa
add
cwtl
mov
add
sub
pop
push
push
push
push
push
lea
push
call
mov
mov
pop
xchg
fisubrl
add
fisubrl
fiadds
xchg
in
test
adcb
add
les
add
push
add
pop
out
in
into
cltd
out
add
pop
mov
sub
pop
call
push
push
call
add
lock
add
add
jb
aad
add
in
enter
add
mov
add
pop
out
shrb
loop
jmp
sub
pop
jmp
push
push
lea
push
push
call
nop
std
stc
stc
jmp
arpl
jb
add
add
mov
xchg
mov
lods
push
push
movl
mov
insb
jp
imul
add
lcall
push
push
push
push
push
push
push
push
call
clc
add
fstp
mov
add
mov
pop
add
addl
mov
mov
jb
add
jle
arpl
add
mov
add
cld
fs
ror
add
add
je
sub
pop
mov
push
push
push
push
push
call
ljmp
in
add
add
arpl
add
push
test
divl
addl
add
add
add
out
cltd
add
pop
add
add
add
mov
add
arpl
add
test
mov
rolb
add
add
add
add
add
gs
add
insb
lcall
pop
mov
push
push
push
lea
push
push
push
push
push
call
add
mov
add
add
add
add
popa
rcrl
add
add
scas
mov
mov
pop
mov
pushf
mov
add
movsl
add
add
add
lret
add
ja
add
popl
int
rclb
add
out
ret
add
pop
in
push
push
lea
push
push
push
push
call
pushf
add
add
add
add
std
add
add
jp
mov
xchg
push
in
add
xchg
add
add
sub
pop
add
add
push
push
push
lea
push
push
lea
push
push
call
jo
mov
push
add
add
out
jne
add
fidivrl
xchg
mov
add
mov
test
mov
sbb
add
loopne
lahf
add
repnz
jmp
in
lcall
pop
add
xor
adc
fisttpl
push
lea
push
push
lea
push
lea
push
lea
push
lea
push
lea
push
call
loop
pop
add
insb
popl
sti
xchg
add
add
popa
hlt
divl
add
data16
fwait
lds
push
push
into
push
in
fcomps
sbb
push
push
lea
push
push
push
push
call
mov
push
icebp
jno
mov
lahf
xchg
add
add
xchg
test
add
push
add
out
add
xchg
roll
ljmp
mov
data16
fwait
addl
add
mov
add
add
add
add
add
cwtd
push
pop
add
mov
add
les
add
push
push
add
rol
push
sub
add
lea
add
lea
sub
shr
pop
add
pop
push
push
lea
push
push
push
push
lea
push
call
pusha
rolb
shll
add
add
mov
mov
add
add
add
add
jb
pop
add
cli
mov
add
je
push
push
mov
add
add
mov
lea
push
add
mov
add
add
lcall
add
add
andl
pushl
push
push
lea
push
push
push
push
push
push
push
push
call
add
leave
mov
leave
add
push
add
arpl
movsl
mov
xchg
lock
push
loop
ret
fadds
outsl
jnp
int3
mov
add
xchg
bound
add
pop
rolb
add
stos
add
lods
arpl
add
lods
mov
lods
pop
add
mov
add
add
sub
pop
call
push
push
push
lea
push
push
push
push
call
roll
mov
jge
xlat
ffreep
rclb
mov
jmp
mov
loopne
stos
imul
xchg
jns
add
add
add
add
add
call
add
jmp
add
arpl
outsl
add
mov
push
cwtl
sub
pop
mov
push
push
push
push
call
jnp
gs
filds
bound
add
into
pop
cli
mov
add
jns
add
mov
add
sahf
add
loopne
out
testb
fidivrl
int3
add
fldenv
in
lock
lcall
inc
call
push
push
lea
push
push
lea
push
push
push
call
arpl
add
lds
movb
add
mov
add
add
add
mov
add
in
in
lea
push
push
lea
push
call
in
out
add
mov
mov
add
add
jp
add
in
pop
add
add
add
pop
xchg
add
fadds
jbe
jne
shll
or
add
pop
add
sub
pop
push
pushl
push
push
call
mov
mov
addl
jecxz
add
test
test
mov
push
jne
add
add
add
mov
lret
mov
add
add
mov
ret
in
clc
lcall
jne
push
lea
push
push
push
lea
push
lea
push
push
push
call
add
xchg
xchg
imul
lds
lahf
add
jl
mov
add
scas
jae
cli
stos
add
inc
sub
add
je
fstl
push
push
push
push
push
lea
push
call
mov
out
add
test
push
xchg
xchg
cli
mov
add
add
fidivl
add
fldl
mov
add
jb
ja
aam
in
fcompl
jne
push
push
push
push
call
cwtl
stos
push
loope
xchg
je
xchg
test
lock
lahf
add
gs
add
add
xorb
ficompl
js
add
add
add
add
int
add
mov
add
add
add
add
add
out
stos
add
hlt
push
add
xlat
add
add
mov
mov
jne
add
lcall
jne
call
push
push
rol
push
and
add
shl
sub
sub
sub
dec
pop
not
sub
pop
push
push
push
push
call
add
lds
addl
js
out
ret
faddl
add
scas
add
add
fadds
mov
push
fiaddl
data16
add
fidivl
cmpsl
push
add
popf
add
add
lcall
jne
call
push
push
lea
push
push
push
push
push
push
call
add
add
pop
add
subl
add
jle
lret
movsb
loope
stos
xchg
add
jecxz
roll
add
lea
mov
stos
jns
add
movsb
add
push
stc
aad
add
jbe
loopne
add
sub
pop
push
push
push
sub
push
push
pop
add
add
sub
add
lea
sub
ror
pop
rol
add
shl
pop
push
push
push
push
push
push
lea
push
push
call
leave
add
nop
insb
pusha
add
into
scas
add
lret
imul
idivb
xchg
movsl
add
push
popl
push
add
add
loope
movsl
pop
cmpsl
add
add
mov
add
xchg
jo
mov
jno
push
jle
add
jge
mov
lcall
push
push
push
push
push
push
push
push
lea
push
lea
push
push
call
gs
js
out
add
add
fiaddl
fldl
pop
add
xchg
clc
repnz
pop
rolb
mov
cmpsl
add
in
add
add
scas
shr
xchg
nop
movsb
enter
jle
mov
xlat
popa
add
mov
mov
add
addr16
mov
ljmp
pop
call
push
lea
push
push
push
push
push
push
call
test
outsl
popl
add
mov
push
fcmovb
mov
add
add
xchg
add
movsb
add
mov
add
jmp
push
mov
jns
mov
add
add
mov
add
xchg
jle
sub
pop
mov
push
push
push
push
lea
push
push
push
push
lea
push
lea
push
push
call
add
cmpsb
add
insb
faddl
push
jae
cwtl
add
flds
leave
lret
pop
cli
add
jp
in
faddl
xchg
testb
cmpsb
leave
out
add
pop
push
push
push
push
push
push
call
add
ljmp
insb
add
push
add
add
add
mov
add
add
mov
mov
int3
add
int3
add
push
mov
add
std
add
add
add
xchg
add
add
cmpsb
push
add
add
fwait
xchg
fdivr
add
in
in
pop
mov
add
push
push
call
hlt
add
add
js
jae
xchg
ffreep
lods
add
popa
push
stos
add
int
ljmp
add
icebp
mov
lcall
ret
add
add
push
push
push
push
call
add
lcall
add
test
xlat
xchg
scas
jl
lods
mov
push
add
push
mov
insb
xchg
add
add
pop
add
sub
pop
add
push
push
call
add
mov
movl
popf
pop
add
add
pop
clc
add
add
add
add
in
xchg
add
add
add
sub
pop
mov
xor
push
push
lea
push
push
push
call
gs
pop
add
add
add
movsb
jl
pop
xchg
stc
add
mov
roll
mov
xchg
add
jge
jecxz
fildl
jl
jp
mov
test
test
scas
add
add
jmp
mov
mov
add
ret
xchg
pop
sti
lock
sub
pop
add
push
push
push
push
call
roll
int
rolb
add
push
add
add
loopne
mov
pop
jmp
mov
jmp
mov
sub
pop
push
push
push
push
push
call
add
add
push
fucomi
test
mov
test
add
jge
add
mov
add
sahf
mov
not
pop
push
data16
add
pop
add
cmpsb
jns
add
ja
jns
aad
lcall
jl
in
lock
lcall
inc
or
adc
add
dec
lods
pop
push
lea
push
push
call
jmp
mov
outsl
add
hlt
pop
cmpsl
add
std
push
add
cmpsl
jb
add
out
test
add
out
add
add
in
call
add
pop
push
push
push
push
push
push
push
call
add
out
arpl
add
xlat
pop
jns
mov
lret
gs
shr
shll
mov
pop
mov
std
xchg
add
add
mov
add
mov
in
lcall
dec
add
xor
adc
pop
cmpsl
push
lea
push
push
push
lea
push
lea
push
call
add
mov
addl
add
add
xchg
fsubrp
mov
mov
pop
xlat
add
add
imul
faddl
jecxz
in
in
lcall
or
push
push
push
push
push
lea
push
push
push
push
push
call
add
js
add
add
xchg
jbe
shl
add
add
mov
enter
add
add
add
add
filds
jle
add
add
outsl
in
add
roll
mov
jle
loopne
ljmp
add
add
push
lea
push
push
lea
push
push
push
push
push
push
call
add
mov
add
out
stc
bound
test
lcall
mov
push
ficompl
fnsetpm(287
mov
imul
add
add
add
out
push
pop
add
push
push
push
push
lea
push
call
data16
add
jbe
add
add
filds
mov
mov
add
pop
pop
cwtl
jne
mov
add
add
sub
add
sub
pop
mov
xor
push
lea
push
push
push
push
lea
push
call
pop
add
add
add
add
shll
add
add
mov
subl
mov
push
add
iret
push
add
xorb
add
add
xchg
add
sub
pop
sub
push
lea
push
lea
push
lea
push
call
add
les
add
icebp
cld
mov
add
mov
add
mov
mov
push
mov
add
lret
add
loop
add
pop
aad
pop
in
fwait
enter
mov
lcall
push
push
push
push
push
push
push
push
push
call
add
lahf
pop
lahf
add
mov
fadds
addr16
ja
add
add
xchg
test
xchg
lcall
add
add
loopne
mov
flds
fnstsw
push
je
lds
in
add
sub
pop
rep
pop
push
push
push
push
push
lea
push
call
add
jb
icebp
stc
add
mov
gs
enter
xchg
add
incb
rcr
add
xchg
jl
mov
add
add
cwtl
mov
push
icebp
sub
pop
mov
add
push
push
push
lea
push
push
call
popa
les
data16
fwait
lock
mov
mov
stc
jnp
add
lds
add
pop
lock
add
jmp
mov
ljmp
add
mov
data16
test
add
out
add
jbe
jne
enter
lcall
ret
add
add
add
push
push
push
push
lea
push
call
fldl
pop
jmp
ffree
mov
add
cmpsl
pop
add
fsubr
xchg
add
add
add
add
lds
jo
sub
pop
mov
push
push
push
push
push
push
call
push
cmpsb
hlt
out
add
add
addb
out
icebp
xorl
add
jge
add
fcoms
add
xchg
lea
enter
in
pop
xor
push
push
push
push
lea
push
push
push
push
push
call
arpl
add
cltd
xchg
add
add
add
add
fadds
add
jno
add
add
scas
iret
mov
add
cmpsb
add
imul
add
add
add
mov
lcall
les
add
push
lea
push
push
push
push
push
push
push
call
mov
add
add
fninit
hlt
into
in
ljmp
push
jle
xchg
add
add
icebp
arpl
add
add
loope
add
scas
insb
xchg
addb
add
add
je
add
mov
imul
jp
out
stos
lcall
add
push
and
xor
adc
lea
push
push
push
push
push
push
lea
push
call
add
mov
testl
xchg
incb
add
stos
stc
add
xlat
ror
xchg
aad
lock
addr16
mov
leave
mov
cmpsb
add
lcall
adc
push
push
lea
push
push
call
fisubrs
mov
data16
add
xchg
add
mov
jecxz
add
add
testb
add
mov
cld
pusha
add
outsl
incb
add
test
clc
icebp
mov
pop
push
add
js
add
add
les
add
push
lea
push
push
lea
push
push
lea
push
push
lea
push
push
push
call
jnp
add
xchg
mov
push
fsts
out
not
data16
nop
add
pop
push
add
lret
mov
add
mov
loopne
mov
xchg
ja
in
lods
add
mov
push
push
push
push
push
push
push
push
call
shlb
loop
add
add
add
add
mov
lahf
add
add
add
add
add
lahf
addr16
add
sub
pop
xor
push
lea
push
call
pop
add
lds
add
add
insb
pop
add
loopne
in
fcoml
popa
xchg
add
mov
cmpb
out
filds
add
add
je
cmpsb
add
add
add
mov
add
shl
sub
pop
add
push
push
push
push
push
lea
push
push
push
call
shrl
add
mov
aad
add
fstps
fadds
mov
jl
imul
aad
movsb
icebp
add
add
add
imul
lds
repnz
add
jbe
ljmp
lcall
ret
push
push
push
push
push
call
lds
add
add
pop
lods
push
xchg
add
add
int
cli
testb
mov
add
pop
outsl
add
add
popa
mov
add
mov
add
add
lods
mov
add
mov
repnz
scas
mov
pop
pop
add
add
jnp
aam
push
push
add
mov
lcall
fsubrs
daa
mov
xor
add
rol
shl
sub
sub
xor
pop
shl
dec
pop
push
push
call
add
add
mov
add
push
push
add
rcll
xchg
cwtl
add
add
rcrl
rcl
in
add
data16
add
add
js
add
add
add
add
in
clc
lcall
jne
push
lea
push
lea
push
call
adcl
leave
xchg
imul
fiaddl
add
mov
mov
jp
add
mov
stc
fsubrp
xchg
flds
xchg
add
pop
add
addr16
pop
call
push
rol
pop
push
push
push
add
dec
push
push
pop
add
shl
ror
sub
ror
rol
add
shl
pop
not
pop
push
sub
add
sub
pop
push
push
lea
dec
pop
push
push
dec
inc
pop
call
mov
push
push
push
push
push
lea
push
lea
push
lea
push
lea
push
call
faddl
loope
add
xchg
add
test
imul
loop
add
rolb
ret
add
add
jne
imul
add
add
cltd
add
aad
jns
lcall
sti
add
add
add
add
int
add
push
rol
pop
push
push
lea
push
lea
push
push
push
push
push
call
std
add
jae
add
mov
std
add
add
fisttpl
mov
cwtl
mov
push
push
pop
add
fiadds
mov
push
cwtl
mov
fcmove
add
add
pop
hlt
push
push
push
push
push
push
lea
push
lea
push
lea
push
call
add
jl
mov
add
icebp
add
scas
push
mov
add
push
fsubrs
std
add
add
subb
mov
add
out
fldl
lret
add
add
add
jle
add
test
jmp
pop
add
sub
pop
add
add
push
inc
ror
shr
pop
add
push
add
ror
pop
mov
xor
push
shr
rol
pop
add
push
push
push
push
push
push
push
push
lea
push
push
call
add
popf
add
fucomip
pusha
bound
jmp
mov
sti
pop
testb
nop
xchg
lcall
out
fsubr
js
mov
ja
lret
add
out
add
add
add
xchg
pushf
in
push
add
lcall
mov
push
push
push
push
lea
push
push
call
add
add
mov
clc
loope
in
add
add
add
push
add
test
push
mov
mov
push
add
add
aad
test
in
out
enter
add
jb
loope
add
mov
ljmp
xor
push
lea
push
push
push
push
lea
push
push
push
push
call
cmpsb
into
roll
mov
ret
iret
add
mov
add
add
add
cld
lahf
add
mov
mov
add
add
pop
add
in
cmpsb
aam
add
add
in
fcompl
les
add
push
push
push
push
push
lea
push
push
call
jge
push
xlat
mov
scas
pushf
scas
xchg
loopne
popf
xchg
bound
push
add
add
push
in
add
add
add
mov
jae
rcr
push
gs
jge
jae
add
add
idivb
in
in
lcall
lock
push
push
push
push
lea
push
push
push
push
call
in
add
cli
pop
mov
std
lods
add
mov
cmc
jnp
add
mov
mov
ljmp
push
sub
pop
pop
push
lea
push
push
call
add
gs
add
xchg
add
add
cmc
add
add
xchg
mov
xchg
pop
pop
jo
add
icebp
add
jmp
push
add
sub
pop
mov
push
push
push
push
push
call
add
xchg
cltd
jo
push
cwtl
pop
fildll
fscale
add
add
push
ja
add
add
add
push
pusha
mov
mov
scas
movsb
cmpsl
cltd
push
fnsave
add
roll
add
fs
push
mov
int3
movsb
add
sub
pop
xor
push
push
push
lea
push
call
outsl
add
xchg
mov
insb
add
add
hlt
xchg
mov
flds
mov
add
iret
xchg
add
pushf
xchg
add
into
icebp
lods
jmp
push
add
cmc
pop
add
addb
in
lock
lcall
les
push
push
lea
push
push
push
push
call
push
pushf
add
sahf
mov
mov
push
add
add
enter
cmpsb
roll
lret
aad
add
add
add
lcall
movsb
push
inc
xor
pop
mov
xor
push
rol
pop
or
je
push
shl
shl
pop
mov
push
push
lea
push
lea
push
push
call
frstor
add
fbstp
std
fldz
popf
mov
add
add
iret
mov
add
pop
add
add
add
xor
push
push
push
push
lea
push
push
push
lea
push
push
call
frstor
lock
clc
cwtl
add
jmp
add
add
mov
add
add
lret
in
add
out
clc
mov
icebp
scas
add
add
xchg
ror
add
add
xchg
mov
lea
iret
sub
pop
add
push
sub
add
xor
pop
mov
push
push
push
push
push
push
push
call
push
fistps
add
imul
ljmp
add
stos
add
loop
pop
leave
add
lret
insb
mov
sahf
push
add
push
add
out
add
mov
push
add
add
jno
in
call
xor
push
push
push
push
push
call
add
add
lds
fnstenv
bound
add
add
add
popf
scas
push
add
add
add
lahf
jge
add
fcmovnu
sub
pop
add
push
push
push
lea
push
lea
push
push
push
push
call
ljmp
subl
movsl
fisubl
mov
mov
xchg
xchg
push
mov
add
lret
push
test
jmp
xchg
add
jecxz
add
add
add
add
xchg
add
add
lods
push
faddl
lahf
int3
iret
test
out
add
add
add
sub
pop
add
push
push
lea
push
push
call
add
jae
pop
add
movsb
imul
mov
gs
mov
mov
test
movsl
leave
add
loop
xchg
jne
xchg
add
lcall
jne
push
push
push
push
push
push
push
lea
push
push
push
push
call
fcmovnu
add
add
jle
add
add
add
add
xchg
add
fdivl
add
add
jnp
cli
mov
add
les
test
test
loop
bound
ffreep
add
add
lea
add
push
pushf
mov
in
add
ja
sub
pop
mov
xor
push
sub
shl
pop
add
pop
push
push
call
add
add
push
add
fsubr
stc
mov
lret
sti
mov
add
add
fld
jmp
add
add
add
mov
jno
je
add
lea
add
add
test
add
xchg
aad
jnp
sub
pop
rep
push
xor
pop
mov
push
push
push
lea
push
push
push
push
call
add
mov
fmul
jp
add
leave
add
cmc
add
ljmp
int
add
mov
add
mov
js
add
push
mov
add
lcall
or
push
lea
push
call
test
mov
mov
out
pushf
add
add
mov
cmc
mov
movsb
pushf
addb
add
mov
popf
add
fcmove
mov
mov
add
add
lcall
les
add
push
lea
push
push
call
out
insb
xchg
mov
lock
xchg
push
roll
pop
jne
jmp
lds
mov
nop
add
rcll
add
add
add
lods
add
push
push
shr
cltd
add
add
add
add
in
hlt
pop
or
je
push
lea
not
inc
pop
mov
add
push
lea
push
push
lea
push
push
lea
push
push
push
push
push
call
pusha
add
jne
add
add
xchg
mov
xchg
mov
int
add
add
xchg
mull
mov
add
add
add
push
add
add
ja
add
in
addl
mov
out
gs
add
jmp
add
pop
sub
pop
add
push
push
push
call
add
add
jb
mov
in
add
add
pop
mov
add
add
add
jne
mov
add
add
std
add
xchg
add
jle
add
rcr
nop
xchg
add
out
imul
enter
test
mov
push
fiaddl
sti
shl
je
int3
test
in
hlt
pop
rep
push
push
call
test
add
fisttpll
mov
add
add
ljmp
mov
add
movsl
add
out
pop
out
add
add
lcall
push
push
dec
sub
push
xor
add
add
not
sub
dec
dec
not
pop
rol
sub
pop
push
sub
pop
pop
push
rol
pop
mov
push
push
call
movsl
push
pop
add
add
stos
clc
mov
add
add
add
jle
add
add
add
add
enter
mov
pop
imul
add
add
mov
clc
pop
mov
push
lea
push
push
push
push
push
call
jmp
mov
clc
mov
hlt
scas
push
mov
mov
push
add
cwtl
int3
out
mov
pop
add
pop
add
hlt
data16
add
in
fdiv
add
add
popl
cmpsb
lds
xchg
add
sub
pop
mov
jmp
push
add
add
pop
push
push
add
not
inc
shl
pop
mov
push
push
push
push
push
lea
push
call
push
add
add
mov
add
jb
lods
out
push
stos
hlt
test
add
ljmp
add
in
jecxz
addb
fstpt
xchg
mov
fcomp
in
add
add
movsl
jmp
insb
jl
fldl
add
add
sub
pop
add
push
ror
pop
push
push
push
lea
push
lea
push
lea
push
push
lea
push
lea
push
push
call
add
stc
stc
add
jl
out
lret
xorb
add
in
xchg
testb
xchg
fdiv
testl
scas
add
add
out
mov
into
add
push
ljmp
xchg
mov
add
mov
add
add
sub
pop
push
push
shr
pop
push
push
xor
lea
add
pop
push
mov
push
push
push
lea
push
push
push
call
add
add
popa
mov
mov
lret
mov
add
movsl
movsl
mov
add
stc
add
lods
jbe
fadds
mov
add
out
add
cltd
add
push
scas
arpl
add
add
add
add
repnz
lcall
pop
push
lea
push
push
call
lock
rolb
add
add
add
pusha
add
jbe
mov
add
out
add
test
add
lods
mov
mov
test
jl
movb
push
add
push
add
fiaddl
shlb
lret
adcl
mov
sahf
out
cmc
add
pop
pop
pop
push
push
lea
push
call
xchg
mov
lret
movsb
pop
movsl
aad
in
add
xchg
in
add
mov
ja
add
mov
add
test
push
add
repnz
xchg
xchg
add
cmpsb
add
push
popa
mov
push
add
jne
add
cli
ja
pop
add
cld
add
add
pusha
pop
cwtl
sub
pop
leave
ret
push
push
push
push
push
push
push
call
mov
jne
cmpb
mov
jo
mov
fiadds
jle
jae
mov
lret
icebp
roll
les
add
add
sub
pop
push
push
pop
mov
add
push
push
push
call
add
test
add
add
mov
ljmp
xchg
cmpsb
in
lods
pop
clc
jmp
popl
add
add
add
and
roll
sub
pop
push
push
push
shl
pop
push
push
pop
push
movl
push
push
push
call
lods
add
lock
add
mov
add
adcb
push
gs
test
pushf
add
lcall
inc
clc
call
lea
push
push
push
lea
push
call
lods
lods
rcl
add
add
add
add
orb
cld
jbe
in
add
add
in
call
test
je
push
push
push
push
lea
push
push
call
add
hlt
add
add
add
flds
arpl
mov
cmpsb
roll
add
out
add
lock
ja
jno
lds
lret
pushf
rolb
add
add
fscale
sti
mov
add
add
mov
sub
pop
mov
push
add
shr
pop
pop
push
sub
add
shr
xor
pop
pop
pop
push
push
lea
push
push
lea
push
lea
push
lea
push
lea
push
push
push
call
sti
iret
pushf
xchg
jns
add
movsl
add
add
mov
add
add
popa
roll
iret
add
xchg
scas
mov
mov
pusha
add
add
add
lock
std
jbe
add
add
mov
mov
add
add
fcomps
leave
push
push
push
lea
push
call
rolb
push
add
push
jb
test
jbe
add
ret
cmpsl
push
std
add
jno
pusha
stos
add
add
in
add
push
add
add
add
lret
add
out
mov
mov
sub
pop
ret
push
push
add
pop
mov
push
lea
push
push
lea
push
push
push
push
call
call
push
add
jno
mov
movsl
add
lods
test
movsb
add
mov
mov
add
stos
xchg
add
cld
rcrl
add
mov
pop
add
push
shl
pop
push
push
push
push
lea
push
push
lea
push
call
pop
je
into
in
add
aad
mov
shll
jp
add
add
add
loope
xchg
push
leave
sub
pop
push
push
push
lea
push
push
push
lea
push
lea
push
push
call
add
cmpsl
add
loop
pop
fildl
add
jb
fiadds
lretw
ret
push
jp
mov
add
mov
add
pusha
add
bound
fdiv
add
add
jns
arpl
sub
pop
push
testl
push
push
push
push
lea
push
call
mov
jmp
add
add
mov
jne
add
icebp
add
fcoml
add
int3
add
add
add
mov
into
add
add
add
pop
iret
call
mov
pop
add
add
lds
add
hlt
jmp
test
rolb
test
divb
xchg
add
sub
pop
addl
push
add
not
xor
pop
push
push
push
call
add
add
push
add
add
add
xchg
lods
std
add
add
cli
popa
pop
push
add
add
add
cld
add
out
mov
fadds
jl
lcall
add
add
int
decl
push
push
push
push
lea
push
push
call
je
add
ljmp
test
add
fildl
mov
add
std
jmp
addr16
fadds
add
add
add
add
add
xchg
lcall
jne
push
push
push
push
push
push
push
push
call
cmpsl
pop
out
jo
add
add
mov
fwait
add
testl
add
lods
pushf
xchg
add
stos
add
add
mov
add
add
push
rolb
ljmp
mov
mov
pop
push
push
push
push
push
push
push
call
movsb
add
add
add
outsl
jae
cmpsl
insb
push
loope
add
iret
rolb
add
add
push
add
add
mov
shrb
add
mov
add
push
push
sub
pop
call
push
not
pop
cmpl
jne
push
push
call
hlt
aam
add
addr16
mov
lea
negb
jl
cltd
fwait
add
sarl
sub
pop
pop
push
push
push
push
push
lea
push
lea
push
push
push
lea
push
call
add
add
push
addb
movsb
mov
jmp
aam
fbstp
add
add
fdivl
add
aad
in
fcomps
pop
push
dec
ror
pop
pop
leave
push
lea
push
push
push
push
push
lea
push
call
add
add
add
js
add
ljmp
add
xorl
add
rcrb
cmpb
stc
out
xchg
add
jge
sub
pop
ret
push
push
push
push
call
sti
add
rcrb
add
fwait
xchg
add
add
rclb
mov
mov
insb
shr
mov
add
cmpsb
std
add
add
mov
mov
add
cli
fistpll
lock
push
push
push
call
shr
cld
add
xchg
mov
add
clc
cwtl
add
push
jle
in
popa
add
lock
arpl
rol
mov
stc
fnstcw
mov
divb
add
add
mov
push
sahf
add
mov
add
push
add
pop
push
push
lea
pop
push
push
sub
add
pop
push
push
push
sub
dec
ror
shl
pop
movl
push
push
push
push
push
push
push
push
push
lea
push
call
add
testl
add
enter
pushf
mov
add
push
loopne
out
out
test
frstor
out
jbe
mov
test
xchg
aam
fldcw
sub
pop
push
push
push
lea
push
push
lea
push
push
call
cld
pop
cmpsl
add
sti
stos
mov
add
sbb
add
cmpsl
popa
add
cmpsl
fisttpll
test
add
mov
add
add
jl
imul
in
hlt
add
add
sub
pop
call
push
push
call
sbb
add
data16
xchg
hlt
cltd
pop
scas
add
add
add
or
xchg
xchg
mov
test
add
add
add
mov
add
std
xchg
add
add
add
fs
sahf
mov
add
add
rcll
clc
mov
sub
pop
push
call
push
lea
push
push
lea
push
push
push
lea
push
push
push
call
add
movsb
in
mov
add
flds
add
mov
add
cmpsl
popa
mov
add
mov
add
test
mov
in
xchg
adcb
add
xchg
testb
jp
add
addb
add
int
leave
add
mov
push
out
jo
sub
pop
subl
push
push
push
push
push
push
push
push
push
lea
push
call
add
shlb
add
push
mov
mov
insb
push
lret
mov
mov
xlat
xchg
cmp
xchg
mov
lcall
jge
add
test
call
dec
outsl
push
lea
push
call
mov
popa
mov
add
add
add
in
push
pop
jmp
add
add
add
jl
out
mov
add
mov
xchg
add
mov
mov
je
hlt
sub
pop
pop
push
push
push
push
push
push
push
push
call
std
hlt
enter
add
lretw
mov
add
data16
add
add
mov
mov
add
pop
push
xor
lea
ror
pop
pop
leave
push
ror
pop
ret
push
sub
add
xor
sub
pop
push
push
push
lea
push
push
push
push
push
lea
push
call
mov
nop
add
out
push
imul
out
int3
int3
shrb
lahf
lock
add
xchg
insb
scas
add
incb
push
nop
leave
mov
hlt
add
add
stos
popf
add
add
add
add
add
mov
loope
add
js
add
mov
sub
pop
mov
push
push
push
push
push
push
push
lea
push
push
push
call
pop
test
mov
call
add
jae
add
mov
add
add
add
cmpsl
int3
push
mov
mov
out
aad
xchg
add
stos
lods
add
add
add
fucomi
jne
mov
lcall
add
fidivl
add
mov
stc
add
lock
sub
pop
add
push
push
pop
push
push
add
pop
push
push
push
push
call
mov
add
std
add
jle
add
add
test
std
cmpsb
scas
jbe
add
divl
out
fiadds
add
mov
lret
mov
add
cmpsl
jne
add
add
gs
add
add
add
add
push
push
pop
mov
lea
push
ror
pop
sub
mov
push
shr
add
pop
shr
push
rol
pop
add
push
lea
push
lea
push
push
push
push
push
push
push
call
fcom
add
add
add
add
lea
add
fadd
xchg
jbe
add
add
xchg
aad
clc
mov
iret
gs
add
add
add
add
shl
shll
push
add
mov
jecxz
add
cmpsl
mov
add
add
add
add
popa
push
add
sub
pop
mov
push
add
pop
mov
push
dec
pop
add
add
push
ror
add
pop
mov
push
xor
ror
ror
pop
mov
push
add
lea
dec
pop
cmp
jne
cmp
jne
push
rol
xor
rol
pop
mov
movl
push
dec
add
rol
add
pop
jmp
mov
push
ror
pop
mov
sub
jne
push
lea
push
lea
push
push
call
sti
jnp
add
add
add
aad
add
lods
mov
jmp
js
repnz
rolb
scas
int
jne
add
lods
imul
inc
adc
pop
movl
jmp
push
push
push
call
push
je
stos
int
pop
add
add
fstpt
lds
add
mov
add
ret
mov
mov
add
shr
add
enter
lods
fdivr
add
push
add
scas
push
add
pop
add
add
add
test
xchg
xchg
lcall
inc
cld
mov
push
lea
push
push
push
push
push
call
js
jmp
add
fnstsw
pop
add
pop
push
add
sahf
add
add
mov
pusha
lcallw
add
push
int3
lcall
push
nop
add
mov
add
fdiv
into
sub
pop
cmp
jne
push
push
push
push
push
push
call
add
add
add
add
add
add
in
add
add
add
add
pop
jae
pop
ret
add
stos
lock
pop
jns
scas
add
std
add
jmp
push
test
xchg
add
add
jp
movsb
add
lahf
add
lcall
pop
mov
push
ror
pop
movl
jmp
push
push
push
lea
push
push
push
push
push
push
push
call
stos
pop
push
add
shlb
test
add
add
int3
lret
add
test
in
add
add
add
scas
in
add
addb
mov
data16
add
movb
add
mov
add
jns
fisubs
in
add
add
jmp
in
fcomps
inc
cld
push
push
push
lea
push
push
push
lea
push
call
add
add
xchg
xlat
rol
add
add
bound
add
clc
add
mov
in
lock
jp
lcall
add
xchg
imul
mov
jae
jbe
repnz
pop
add
filds
lcall
cmpl
jne
push
push
lea
push
push
push
push
push
call
add
mov
into
xchg
add
add
add
leave
add
leave
popa
arpl
add
jp
add
xchg
shr
add
clc
fmuls
add
jo
rorb
add
add
add
add
inc
adc
ljmp
add
push
push
push
lea
push
push
call
add
gs
imul
mov
subb
fsubp
aad
mov
add
lock
mov
outsl
addb
cli
lahf
ljmp
je
xchg
add
arpl
mov
arpl
into
add
add
add
add
jmp
push
push
push
push
lea
push
push
push
push
push
call
jle
add
mov
add
enter
add
in
arpl
add
add
int
in
clc
add
pop
push
add
scas
std
add
add
add
insb
fs
add
aad
lret
add
lock
mov
lcall
pushl
push
lea
push
push
push
lea
push
call
add
mov
fisubrs
add
rolb
out
mov
mov
add
add
loop
mov
addr16
add
enter
mov
add
add
repnz
iret
push
mov
movsb
add
loopne
nop
add
xchg
push
cmc
test
xchg
add
add
addl
inc
or
rol
add
not
dec
pop
mov
push
push
push
push
lea
push
push
push
push
lea
push
call
leave
add
mov
movsl
sahf
jne
movb
js
jb
mov
mov
add
rolb
mov
add
mov
add
add
mov
pop
mov
mov
jb
mov
xor
hlt
jbe
jge
addl
xchg
add
add
sub
pop
mov
push
push
shl
lea
not
not
push
push
pop
add
add
ror
sub
add
sub
pop
add
sub
dec
pop
push
push
push
call
mov
pushf
add
jmp
add
out
in
add
add
push
jo
mov
add
imul
add
fildl
jge
je
add
addl
add
add
push
pop
pop
push
add
hlt
lcall
push
pop
call
cmpl
je
push
push
inc
lea
push
or
not
add
shl
sub
inc
pop
sub
shl
pop
push
push
call
in
mov
popf
add
add
ret
add
xchg
add
mov
mov
add
mov
jbe
int3
fs
test
fwait
add
cmpsb
fs
pop
mov
popf
mov
jo
pop
fwait
test
pop
add
add
enter
add
fiaddl
fldt
lcall
push
push
push
lea
push
push
push
call
fldl
mov
bound
add
add
add
add
mov
push
jecxz
movl
fwait
xchg
pop
call
push
push
lea
push
lea
push
push
push
push
push
push
call
in
mov
add
add
add
add
data16
add
add
pop
cmpl
je
push
push
ror
rol
push
or
not
add
not
sub
sub
pop
ror
sub
lea
pop
push
push
lea
push
push
push
call
add
mov
stc
mov
fdivrl
imul
pop
add
add
mov
cmpsb
add
mov
aam
push
add
in
mov
add
xchg
loopne
mov
jp
mov
xchg
add
push
xchg
lcall
push
inc
shr
ror
pop
call
push
lea
push
lea
push
push
push
push
push
push
lea
push
lea
push
call
fbstp
add
add
add
add
push
cltd
jbe
sarb
add
add
add
repnz
movsb
out
jge
add
lahf
jl
lahf
lret
add
lods
add
loopne
pushf
or
mov
cld
mov
cmp
pop
cmpl
je
push
push
dec
rol
ror
shr
push
xor
add
not
sub
shl
dec
add
shl
pop
add
pop
push
push
call
add
add
mov
add
je
int
add
add
add
add
mov
add
add
jnp
leave
push
jae
add
scas
js
jp
add
rcll
add
movl
faddp
out
add
add
sti
mov
fildl
mov
sub
pop
push
push
lea
push
lea
push
push
call
test
pop
shll
stc
pop
fs
pushf
add
movb
jo
mov
in
add
add
mov
mov
add
lcall
in
add
cmpl
je
push
push
shr
push
xor
add
not
sub
shr
xor
pop
inc
inc
add
pop
push
push
push
push
push
push
lea
push
call
insb
add
add
addr16
int3
add
leave
testl
lods
rolb
mov
leave
add
add
stos
pop
in
add
add
add
data16
addr16
add
test
add
sub
pop
push
call
push
push
push
push
call
fwait
adcl
add
push
int3
popa
add
jmp
aad
jl
lret
mov
mov
out
std
xchg
add
add
add
hlt
loop
add
add
add
int
pushf
fistps
mov
shrb
sti
add
leave
sub
pop
cmpl
je
push
push
push
or
inc
add
shr
sub
shl
ror
pop
shr
sub
sub
pop
push
lea
push
push
push
push
lea
push
call
add
add
add
add
add
std
add
add
add
repnz
hlt
jns
add
addr16
add
iret
add
add
add
aad
clc
jno
add
testl
add
add
sahf
pop
add
xchg
add
add
add
sub
pop
push
push
sub
add
pop
call
push
sub
not
dec
inc
pop
cmpl
je
push
push
sub
push
push
pop
add
ror
sub
sub
xor
rol
pop
not
inc
add
pop
push
push
lea
push
push
lea
push
push
call
incb
lret
lods
add
add
add
test
add
add
xchg
add
out
icebp
add
jns
arpl
lock
lret
add
in
gs
add
add
shll
add
xchg
mov
addb
ret
addl
inc
sub
shl
pop
call
cmpl
je
push
push
dec
dec
add
push
xor
add
ror
dec
shl
sub
add
inc
pop
shl
lea
pop
push
push
push
push
lea
push
call
orl
add
jnp
enter
cmc
add
lea
fdivrp
mov
push
xchg
stc
mov
add
out
add
push
cld
stos
add
fidivl
stc
sti
add
xchg
movb
add
rolb
mov
push
call
push
push
push
call
add
out
fsubs
mul
add
push
mov
add
mov
add
add
repnz
add
add
jnp
imul
js
int3
fldz
ret
sub
add
test
not
sub
not
push
and
add
ror
sub
pop
rol
pop
push
ror
pop
push
push
shl
add
ror
pop
call
push
push
push
push
push
push
push
lea
push
push
call
cli
jbe
xchg
popa
add
pop
sahf
mov
out
add
jnp
add
cltd
jne
pusha
scas
add
rcl
add
scas
add
int
rolb
nop
stc
pop
add
mov
pop
add
add
out
in
add
add
lcall
cmp
rol
je
push
push
rol
xor
sub
push
push
pop
add
sub
sub
dec
add
add
pop
lea
shl
sub
xor
pop
push
dec
pop
push
call
push
push
push
call
mov
test
add
add
stc
add
add
mov
add
mov
fwait
add
mov
pusha
pop
jl
lods
jne
add
add
fsub
movsb
add
mov
mov
into
add
idivb
add
push
xchg
add
lret
push
xchg
mov
xchg
hlt
lcall
cmp
test
add
add
sbb
mov
sub
sub
push
xor
add
add
sub
sub
inc
xor
add
pop
sub
pop
push
push
push
lea
push
push
push
push
lea
push
lea
push
call
cwtl
add
pop
add
add
jns
add
xlat
add
fiaddl
lea
outsl
mov
add
pop
jae
add
jb
je
lods
xacquire
hlt
subl
fiadds
add
add
into
stc
mov
add
add
out
add
int
mov
add
sub
pop
push
push
add
shr
xor
add
pop
call
push
inc
add
pop
cmpl
je
push
push
shl
push
or
inc
add
lea
dec
shr
sub
sub
not
pop
sub
shr
pop
push
push
call
add
mov
mov
mov
cmpsb
lahf
push
mov
add
lcall
add
add
jo
cltd
mov
mov
lahf
add
mov
imul
add
add
stos
add
lcall
push
lea
push
call
add
add
les
mov
into
movsb
add
mov
add
outsl
gs
pusha
add
je
pop
xlat
mov
bound
add
add
add
fstpt
lret
pusha
imul
lock
pushf
add
stc
add
ljmp
popf
cmc
add
lcall
daa
das
add
push
push
call
fwait
sbbb
pop
mov
xchg
cmpsb
mov
addb
mov
add
call
sub
pop
cmpl
je
push
push
ror
push
sub
add
xor
dec
sub
shl
ror
pop
pop
push
shr
add
pop
push
call
push
pop
cmpl
jne
push
lea
push
push
push
call
cmpsb
add
add
add
xchg
in
push
and
jo
add
mov
movsb
lods
add
xorl
mov
jp
pop
aam
add
lahf
add
int
int3
add
into
fildl
add
add
lahf
mov
add
cli
mov
in
aad
aam
cmpsl
shrb
ja
in
lock
mov
movl
push
push
call
into
popf
jb
iret
in
pop
add
pop
add
add
mov
lds
push
pop
movsb
add
add
stos
add
add
jp
leave
sub
pop
jmp
push
ror
pop
xor
push
ror
xor
ror
pop
pop
pop
push
push
push
call
repnz
pop
add
mov
push
add
cli
mov
add
add
add
leave
test
add
pop
jmp
addl
roll
add
sub
pop
pop
push
pop
pop
push
inc
sub
inc
pop
leave
push
ror
pop
ret
push
shr
xor
xor
sub
pop
push
push
pop
mov
push
push
lea
push
push
call
mov
mov
add
lret
add
out
mov
add
add
notb
add
add
add
popl
icebp
add
cltd
mov
scas
add
add
stc
lea
sub
pop
add
push
push
lea
push
lea
push
push
push
push
call
mov
fadds
add
xchg
mov
add
add
add
pop
cld
fistl
jne
mov
cmc
popa
xchg
mov
scas
add
stos
stos
sub
pop
cmpl
jne
push
push
sub
add
push
and
add
rol
sub
sub
shr
pop
shr
inc
pop
push
xor
sub
not
pop
pushl
push
push
push
push
push
lea
push
lea
push
push
call
add
add
pop
leave
fcomps
cld
add
out
add
add
shll
add
jp
xchg
jge
movsl
add
sub
pop
call
push
push
push
lea
push
lea
push
push
call
loope
testb
add
add
add
mov
lea
lods
mov
add
faddl
add
add
add
fs
mov
add
stc
int
int
sub
pop
push
push
sub
pop
call
push
not
inc
sub
add
pop
jmp
cmpl
je
push
shr
add
lea
pop
cmpl
jne
push
push
push
push
push
push
push
push
push
call
mov
add
add
mov
lea
mov
lahf
push
js
add
add
add
sti
jb
in
fcompl
inc
or
jg
push
push
lea
push
push
push
push
call
sahf
add
popa
imul
add
xchg
add
add
stos
cmc
mov
xchg
test
mov
in
popa
int3
mov
in
in
call
push
push
push
lea
push
push
call
xchg
popf
push
push
pop
lods
add
add
push
stc
xlat
fidivs
add
add
push
lahf
add
test
add
ret
jmp
push
push
push
push
push
push
push
push
push
call
ja
call
xchg
lret
fiadds
int3
xchg
pop
pop
jl
add
lock
js
push
mov
cmpl
stos
ljmp
add
add
xchg
add
lahf
add
mov
jae
add
add
add
in
add
add
push
data16
jno
add
mov
in
add
roll
mov
lcall
jge
add
test
sub
shr
add
push
push
pop
add
sub
add
shl
pop
shr
shr
dec
pop
push
xor
add
lea
pop
pushl
call
push
push
push
push
push
push
push
push
push
push
call
test
add
mov
scas
lods
push
add
lcall
mov
outsl
add
rcr
ja
jb
std
js
add
add
cmpsl
fs
mov
add
add
add
sub
pop
push
call
push
pop
jmp
cmpl
jne
push
lea
push
push
lea
push
push
call
pop
loop
jmp
int3
sti
roll
mov
leave
add
add
mov
add
add
add
int
in
in
lcall
add
add
push
sub
pop
mov
push
add
sub
pop
push
push
push
push
xor
add
shl
xor
sub
sub
lea
pop
shl
pop
push
lea
push
push
push
push
lea
push
push
push
lea
push
call
add
sbbb
mov
nop
jp
jae
je
add
add
pop
xchg
add
add
add
pushf
add
mov
test
mov
mov
add
add
scas
add
jb
add
add
add
sub
pop
pushl
push
push
push
push
lea
push
push
push
lea
push
push
push
call
in
add
iret
lock
mov
add
add
jo
pop
add
pop
push
data16
jbe
stc
movsl
add
fcmove
sahf
jno
add
push
sub
pop
call
push
push
push
call
add
aam
xchg
call
add
add
out
into
scas
add
jns
add
push
clc
mov
add
ror
add
add
xlat
test
clc
add
out
add
push
add
iret
jae
jns
rolb
jno
add
add
jb
lock
sub
pop
call
push
push
ror
dec
push
and
add
dec
sub
xor
pop
ror
ror
pop
push
push
lea
push
lea
push
lea
push
push
push
push
push
push
call
imul
mov
add
xchg
mov
lods
jo
push
icebp
fbstp
sti
sbb
imul
add
mov
popa
mov
in
rolb
add
fidivrl
in
fdivr
lcall
jne
push
sub
lea
pop
call
push
sub
sub
sub
pop
call
push
push
add
add
sub
push
sub
add
not
inc
lea
inc
sub
pop
inc
dec
dec
inc
pop
push
push
push
push
call
loope
add
add
test
add
fs
std
int3
sub
rcrb
movsl
orl
mov
lock
leave
loopne
jge
mov
loope
mov
sub
pop
pushl
call
push
push
call
add
cmpsl
faddp
xchg
data16
jp
push
add
push
ret
pushf
stos
mov
add
les
add
jno
mov
jb
fiaddl
jne
jge
add
add
lcall
shrb
ds
dec
push
inc
lea
push
or
not
add
rol
add
sub
dec
pop
lea
pop
push
push
push
push
push
push
call
stc
add
add
add
add
mov
add
faddp
add
je
mov
mov
stos
fisubs
add
mov
mov
fildl
add
f2xm1
mov
fiaddl
add
jns
fisubrl
ret
add
std
add
push
add
sub
pop
pushl
call
push
push
push
push
push
lea
push
call
repnz
push
jae
aad
mov
cmc
faddl
add
pusha
mov
test
add
add
aad
add
repnz
add
mov
jmp
mov
scas
add
ja
cwtl
test
ljmp
xchg
cltd
add
in
sub
pop
call
push
push
add
push
or
inc
add
lea
rol
sub
dec
lea
pop
sub
pop
push
ror
add
add
pop
pushl
call
push
dec
add
pop
call
push
push
sub
push
or
not
add
sub
sub
ror
inc
inc
pop
pop
push
add
pop
pushl
call
push
push
push
push
push
push
push
call
add
in
loope
fisubl
add
add
add
add
push
add
popl
jnp
mov
adcb
std
xlat
sub
pop
call
push
push
add
shl
push
or
not
add
dec
lea
add
sub
add
shr
pop
lea
sub
pop
push
push
lea
push
push
push
push
call
gs
mov
test
add
je
addl
je
jns
mov
popf
mov
flds
in
add
imul
lret
addb
in
call
pushl
push
add
xor
rol
pop
call
push
push
push
push
push
push
push
call
lds
mov
add
data16
add
add
add
add
outsl
add
in
add
add
movb
add
push
push
nop
faddl
jmp
add
cltd
add
into
mov
lcall
shrb
pop
jnp
push
sub
push
or
not
add
add
shl
add
ror
sub
inc
shl
sub
pop
shl
shl
pop
push
push
push
lea
push
call
xchg
pop
add
call
add
mov
popf
lds
loope
nop
fldl
add
mov
cltd
not
mov
lock
lcall
jne
push
push
push
push
push
push
call
test
add
jae
cwtl
mov
add
addr16
add
mov
test
add
add
add
push
mov
ficoms
jb
lods
add
fadds
sub
pop
call
push
lea
push
push
push
lea
push
push
push
push
push
push
call
add
test
cmpsb
filds
sti
jne
mov
push
out
add
mov
into
jmp
jb
pop
stc
roll
pop
add
imul
sahf
les
push
add
jae
in
add
jl
cmpsl
add
add
hlt
add
shrb
rorb
push
sub
push
push
pop
add
rol
rol
sub
sub
pop
inc
pop
push
add
sub
pop
pushl
push
inc
shr
add
pop
call
call
push
push
dec
lea
push
xor
add
shr
lea
add
inc
sub
pop
ror
add
pop
push
push
push
call
je
lahf
jo
fstps
fs
fwait
cld
cmc
jo
mov
add
xchg
cmpsb
addr16
into
add
add
loope
rcr
aam
stc
jmp
test
jae
xchg
add
add
lock
add
jmp
mov
pop
popf
ja
in
hlt
pop
pushl
push
lea
push
lea
push
lea
push
push
call
push
pop
loope
scas
jecxz
shlb
fwait
movsl
ret
push
jecxz
fcomps
movsb
out
add
add
add
cwtl
loopne
std
jl
xchg
add
mov
add
lock
add
add
vpshufd
xchg
fldl
mov
add
lea
push
shl
lea
pop
push
call
push
push
lea
push
xor
add
sub
shr
sub
sub
sub
xor
pop
add
pop
push
add
pop
pushl
push
lea
add
pop
call
push
lea
push
push
lea
push
lea
push
push
lea
push
call
add
add
movsl
mov
je
add
add
add
lock
add
mov
xchg
movl
add
mov
aad
lahf
add
xchg
in
add
mov
rorl
movsb
add
push
add
mov
imul
xchg
rclb
rolb
shrb
mov
roll
pop
ror
sub
push
or
not
add
sub
sub
sub
sub
shl
rol
pop
xor
sub
shr
pop
push
add
inc
pop
pushl
push
add
shr
pop
call
call
push
push
sub
push
or
not
add
lea
sub
sub
add
lea
dec
ror
pop
shr
pop
push
push
push
push
lea
push
lea
push
lea
push
push
push
push
call
pop
add
add
mov
add
push
add
jae
xlat
sar
mov
xchg
loopne
hlt
pop
xchg
add
popf
add
je
add
ja
lahf
cwtl
add
arpl
mov
ja
sub
pop
pushl
call
push
sub
pop
call
push
push
xor
push
push
pop
add
shr
sub
xor
pop
inc
rol
pop
push
push
push
lea
push
lea
push
push
call
xlat
stc
cmpsl
add
test
add
add
cmc
add
cmc
add
add
int3
aam
add
add
add
in
add
push
sahf
add
fidivs
add
pushf
add
hlt
popl
add
fiaddl
mov
out
mov
js
out
lods
cmpsl
add
add
xchg
add
call
pushl
call
push
push
shl
push
push
pop
add
inc
shr
xor
sub
shr
pop
dec
pop
push
push
add
add
sub
push
and
add
add
not
sub
sub
pop
lea
lea
sub
add
pop
push
xor
pop
call
pop
push
dec
dec
sub
pop
dec
jne
push
push
xor
sub
add
push
or
inc
add
sub
shr
sub
pop
ror
dec
pop
push
push
push
push
call
add
lret
add
jl
clc
in
addl
lcall
int
lods
je
add
int3
loopne
add
outsl
pop
sub
pop
pushl
push
lea
push
push
push
push
lea
push
push
call
icebp
jecxz
fiadds
jmp
cmpsb
add
insb
addl
fwait
add
cld
fldl
add
add
add
pushf
add
loope
imul
aam
add
sub
pop
call
push
push
lea
push
push
call
jo
jb
add
pop
add
ljmp
add
lods
add
loop
jge
data16
gs
add
mov
iret
add
add
xchg
jns
push
mov
cwtl
mov
fiadds
push
lock
add
add
add
push
popa
fldl
lea
add
sub
pop
lea
push
push
call
add
leave
add
add
loopne
loopne
addl
add
add
jge
add
scas
pushf
test
ljmp
fwait
sahf
mov
add
add
enter
add
roll
add
jne
add
add
add
add
xchg
jno
add
push
sub
pop
push
push
push
sub
pop
push
push
push
push
call
insb
add
add
push
leave
aad
in
add
push
sbb
mov
push
add
add
ja
add
add
add
mov
ret
add
imul
lcall
rclb
push
push
push
call
add
add
add
fists
jns
mov
xchg
add
cltd
mov
add
icebp
add
jle
mov
fcomps
stos
imul
pop
outsl
add
bound
jnp
hlt
add
pop
or
add
mov
in
push
add
push
sub
add
ror
sub
dec
sub
xor
shr
xor
pop
inc
inc
pop
push
push
lea
push
lea
push
call
mov
les
int3
add
movsl
add
scas
jmp
xchg
add
pop
mov
repnz
pop
push
mov
mov
add
roll
add
ja
jne
shr
add
add
mov
loope
add
add
out
lret
jbe
add
lcall
jne
push
lea
push
lea
push
push
push
push
push
call
pop
mov
lds
add
push
mov
add
pop
add
mov
lds
add
add
cmc
jge
sub
pop
call
push
push
not
not
pop
call
mov
push
push
not
push
or
not
add
add
sub
sub
add
add
pop
inc
inc
shl
add
pop
push
sub
lea
pop
pushl
call
push
push
push
push
push
push
lea
push
push
call
xchg
mov
sarl
jns
fldl
add
add
jbe
add
add
add
push
add
cwtl
add
pushf
shll
loopne
add
push
xchg
pop
jecxz
in
loopne
lea
push
xor
xor
add
pop
push
push
push
inc
shl
pop
push
push
push
push
push
push
lea
push
push
lea
push
call
push
add
shll
add
bound
pop
mov
xchg
imul
or
add
test
mov
lahf
jne
mov
add
xchg
fists
loop
insb
int
add
sub
pop
call
push
ror
pop
lea
push
push
sub
push
push
pop
add
sub
sub
rol
pop
ror
rol
pop
push
push
lea
push
push
push
push
push
call
add
sahf
pop
lea
xchg
jo
mov
movsb
add
add
repnz
ljmp
lret
jecxz
add
les
je
sub
pop
pushl
push
push
push
push
push
push
lea
push
push
call
cwtl
int3
adcb
add
add
cli
imul
add
add
add
push
leave
add
push
push
data16
mov
movsl
xchg
ficoms
add
add
cwtl
sub
pop
call
push
ror
rol
pop
push
call
push
push
add
not
push
or
not
add
add
add
lea
not
sub
xor
rol
pop
add
add
pop
push
push
push
lea
push
push
push
push
push
call
loopne
add
add
xchg
add
mov
add
aad
add
movsl
mov
in
add
push
mov
add
cwtl
out
add
add
add
mov
add
add
test
add
mov
mov
js
sub
pop
pushl
call
push
xor
add
pop
call
mov
push
push
push
push
push
call
popa
mov
loopne
add
add
add
add
add
enter
add
add
fwait
add
add
mov
lods
push
add
stos
rolb
nop
nop
sti
mov
in
push
testb
mov
fadds
sub
pop
lea
push
push
sub
sub
push
push
pop
add
sub
xor
sub
inc
pop
inc
pop
push
lea
push
push
push
push
lea
push
push
call
add
lret
mov
cmc
add
jnp
imul
xchg
pop
add
roll
jl
push
add
les
add
push
int3
lods
loopne
nop
pop
cmc
add
mov
in
pushl
push
shr
lea
add
pop
call
push
shr
not
add
pop
lea
push
push
push
push
push
push
call
add
ret
push
add
mov
enter
aad
add
js
add
out
cwtl
add
mov
sti
insb
ret
fwait
add
add
flds
clc
in
jb
out
stc
iret
add
fsubrs
push
add
lds
shlb
add
fadds
xchg
add
sub
pop
push
push
push
push
push
push
push
push
lea
push
push
push
call
add
lea
fmuls
add
add
out
flds
fstpt
add
lods
jmp
add
cmpb
decb
lcall
add
jne
push
push
dec
push
push
pop
add
add
sub
inc
shl
shr
pop
add
shr
pop
push
push
lea
push
push
lea
push
push
lea
push
call
mov
add
add
add
stos
out
push
mov
call
add
add
loope
add
add
pop
roll
mov
add
xchg
in
in
pop
fldt
add
test
add
add
push
push
push
push
lea
push
lea
push
call
xchg
add
filds
add
add
xchg
sahf
add
out
sahf
add
add
cmpsl
nop
jne
add
out
pusha
add
mov
add
add
add
mov
add
pop
call
push
push
dec
ror
add
push
push
pop
add
inc
sub
sub
pop
shr
lea
pop
push
add
shl
pop
pushl
push
push
push
call
mov
add
mov
rolb
mov
xchg
xchg
fistl
add
add
fs
js
std
add
lock
cmc
mov
add
mov
add
sub
pop
call
push
lea
push
lea
push
push
lea
push
lea
push
call
mov
out
add
hlt
add
stos
pop
pop
add
repnz
vrsqrtss
imul
test
test
pop
fiaddl
add
add
add
int
add
test
mov
mov
test
addl
neg
add
mov
nop
aad
mov
jno
cwtl
add
clc
add
call
lea
push
lea
push
push
push
push
call
jb
xabort
clc
add
test
fcoml
add
gs
xchg
add
add
ljmp
out
mov
push
insb
add
roll
lcall
shrb
pushf
loop
push
ror
inc
ror
xor
push
sub
add
xor
sub
sub
dec
xor
pop
xor
pop
push
push
push
push
call
pop
add
hlt
add
lret
pusha
add
add
fnstenv
aad
ljmp
pushf
in
fiaddl
nop
popl
addb
popl
mov
add
jp
lahf
mov
pop
cld
add
add
sahf
cmpsl
add
jmp
push
mov
into
add
lods
add
pop
pusha
xchg
lods
mov
sub
pop
pushl
call
push
push
push
push
push
lea
push
push
call
ljmp
testb
add
ficompl
add
add
shlb
push
call
add
push
add
add
into
xchg
arpl
jecxz
cld
xchg
sub
pop
call
jmp
push
lea
push
push
lea
push
lea
push
lea
push
call
mov
add
ror
test
fadds
mov
shr
add
sti
mov
add
add
lcall
pushl
mov
push
push
push
push
call
adc
in
pop
add
jno
add
mov
add
add
mov
vpcmpeqw
pop
add
xchg
test
add
add
xchg
add
add
popa
add
add
mov
add
jmp
push
push
ror
push
or
not
add
shl
sub
sub
add
add
add
pop
not
pop
push
add
pop
pushl
call
push
shl
pop
push
push
push
push
push
lea
push
push
call
add
add
mov
roll
xchg
push
push
sub
in
add
les
add
shrb
lock
pop
call
push
push
not
push
or
inc
add
not
sub
sub
ror
add
pop
rol
pop
push
push
push
lea
push
push
push
push
call
roll
pop
addr16
mov
add
jmp
int
add
addb
loopne
test
xchg
stc
mov
add
xchg
add
add
in
mov
lds
pop
add
jne
call
push
add
lea
sub
shr
pop
push
call
push
push
push
push
push
push
push
push
push
call
popf
add
add
jnp
add
jp
enter
add
pop
add
add
les
int3
add
push
mov
jp
add
cmpsl
pop
push
int3
out
add
sub
pop
leave
push
shr
pop
add
pop
push
push
push
push
push
push
push
push
push
push
call
cltd
add
add
add
jbe
xchg
add
insb
clc
add
lea
add
pop
mov
mov
scas
out
add
jmp
negb
add
add
add
add
add
leave
out
add
add
jo
add
xlat
add
add
sub
pop
pop
push
push
push
push
push
push
call
mov
icebp
mov
add
pop
outsl
add
add
idivl
in
add
movsl
add
lahf
stos
lcall
push
clc
sub
pop
pop
push
add
xor
pop
xor
inc
push
lea
push
push
push
push
push
lea
push
push
call
push
out
rolb
add
mov
jge
test
add
rorb
mov
addl
xlat
pop
roll
enter
add
into
add
mov
add
add
into
pop
icebp
jecxz
pop
add
data16
mov
add
lcall
or
push
push
push
lea
push
lea
push
call
pushf
loop
jae
add
add
fisttpll
bound
xchg
rolb
sahf
lahf
push
aad
push
pop
jl
mov
test
push
pop
jecxz
add
add
sahf
cmc
add
sub
pop
leave
ret
push
xor
pop
push
push
push
push
push
push
lea
push
lea
push
push
push
push
call
push
les
rcrb
incb
mov
add
movsl
in
sahf
pop
add
push
sti
roll
cmpsb
pusha
jbe
sub
pop
mov
cmpl
jne
push
xor
pop
mov
push
push
push
push
call
into
add
add
mov
movsb
out
lods
in
leave
lcall
add
mov
push
mov
xlat
add
loopne
add
add
add
add
push
add
mov
add
test
add
sub
pop
jmp
push
add
sub
pop
mov
push
push
push
push
push
push
lea
push
push
push
call
lock
add
add
xchg
add
mov
icebp
add
stc
mov
xchg
test
add
jb
int
add
fldl
add
add
add
shr
faddl
add
fistpll
lds
lcall
and
xor
push
lea
push
push
push
lea
push
push
lea
push
push
push
call
add
mov
mov
jecxz
add
jge
mov
arpl
pop
add
add
cwtl
jb
add
add
icebp
add
test
add
cmc
add
lods
add
int3
fst
mov
add
fbld
fcompl
push
cli
pop
sub
lea
push
push
push
call
add
add
mov
stos
rorl
add
flds
jns
xchg
xchg
pop
add
add
cmpsl
add
add
lock
add
nop
push
lods
add
jbe
out
out
fdivs
add
in
add
mov
add
add
cmpsb
mov
in
call
push
push
push
lea
push
push
push
push
push
push
call
stos
push
lret
jecxz
out
lods
add
xchg
sti
add
roll
arpl
add
jp
icebp
push
sti
leave
add
popl
mov
add
mov
test
aad
call
fldl
xchg
push
add
mov
add
push
cwtl
add
flds
mov
mov
call
fcompl
dec
decl
push
push
push
push
push
push
push
lea
push
push
call
out
add
add
rolb
sahf
pop
add
add
add
push
in
add
arpl
ret
repnz
add
mov
add
add
mov
cltd
mov
lea
rcl
stos
add
int
add
mov
xchg
add
nop
movsb
add
add
jmp
mov
cmp
sub
push
xor
pop
jmp
push
push
push
push
push
push
call
add
ret
mov
out
mov
pop
arpl
jmp
add
add
js
pusha
mov
roll
add
add
vandpd
add
add
mov
fiaddl
add
add
add
add
movb
xchg
mov
movsb
add
int
test
in
call
sub
push
sub
inc
pop
pushl
push
ror
dec
pop
pop
sub
push
add
dec
add
dec
pop
cmp
jne
push
push
push
push
push
push
call
add
jle
add
mov
add
jno
add
lock
int3
movsl
addl
std
add
cli
add
vandps
add
lods
enter
insb
pop
add
add
add
jnp
addb
fmuls
std
ljmp
call
mov
lea
push
push
push
lea
push
lea
push
lea
push
push
push
lea
push
push
call
push
lcall
xchg
add
faddl
fs
scas
movsl
add
addl
add
mov
add
add
lcall
jmp
push
push
lea
push
call
lods
add
add
add
mov
push
out
pop
add
add
fwait
add
add
add
add
fsub
add
add
add
lcall
jmp
sub
ror
sub
shr
pop
sub
pushl
push
add
add
pop
pop
push
add
dec
pop
shr
push
sub
sub
pop
and
push
shl
shl
pop
sub
cmp
jne
push
add
pop
leave
ret
push
xor
not
pop
push
push
rol
shl
pop
mov
push
sub
pop
add
push
push
pop
push
push
lea
push
push
lea
push
push
call
add
aam
testl
xchg
lcall
jns
xchg
les
test
out
xchg
test
add
cmpsb
add
push
add
add
stos
add
ljmp
in
add
lret
in
in
lcall
push
push
push
lea
push
lea
push
lea
push
push
call
shll
mov
xlat
add
add
les
mov
enter
add
add
into
add
add
testb
fiadds
jae
jne
jno
in
ret
gs
sub
pop
push
push
sub
pop
push
push
pop
mov
push
push
call
les
les
add
add
add
cmc
mov
xlat
cmpsl
add
add
add
fwait
add
out
add
lds
add
ljmp
iret
mov
push
hlt
arpl
lea
sub
push
lea
pop
mov
push
lea
push
push
lea
push
push
push
push
call
add
add
add
mov
flds
add
add
sahf
addr16
pop
add
push
ljmp
cld
imul
cwtl
movl
js
mov
nop
pop
sub
pop
shr
push
push
push
call
test
out
xchg
add
add
shll
in
add
arpl
mov
out
insb
ljmp
lret
mov
lahf
lret
loop
add
add
mov
push
push
sub
pop
add
push
push
push
push
push
push
call
outsl
fisubs
add
mov
push
fs
mov
jno
jmp
push
add
ror
hlt
aam
push
fistpll
fnsave
stc
add
lret
xlat
lods
sub
pop
mov
push
push
push
call
add
mov
add
mov
idiv
add
icebp
stos
jecxz
idivl
js
roll
pop
mov
sub
pop
add
push
push
call
xchg
rolb
pop
add
stos
decb
add
mov
add
pop
xchg
cltd
push
add
mov
out
jecxz
movl
in
icebp
fisubrs
xlat
div
xchg
mov
add
in
clc
pop
mov
push
xor
add
rol
pop
add
push
shr
shr
pop
xor
mov
push
push
call
je
stos
movsb
jno
add
loope
cltd
add
lds
xchg
fldl
add
add
add
loop
sub
pop
and
push
push
push
call
faddl
mov
add
hlt
add
xchg
add
pop
lds
cmpsl
fcoml
lods
lea
pop
add
xlat
lret
mov
mov
add
jns
push
add
jmp
imul
jl
fidivs
js
addb
add
test
pop
out
sbb
push
push
push
push
call
fwait
movsb
jecxz
add
pop
sti
fnstenv
add
stc
add
mov
add
mov
out
add
add
jo
push
add
xchg
jb
addl
ficomps
mov
jae
rcrl
jno
mov
aad
int3
add
rolb
inc
sub
add
pop
xor
inc
push
sub
not
pop
cmpb
jne
add
push
push
push
lea
push
call
add
std
add
add
add
sti
mov
add
add
xchg
add
jb
shll
jns
std
lock
push
mov
aam
add
pop
xchg
add
pop
mov
insb
push
mov
popf
in
mov
lret
sub
pop
cmp
je
push
push
push
push
push
lea
push
push
lea
push
lea
push
push
call
shlb
jp
lret
add
stc
add
mov
add
mov
ljmp
add
je
add
add
out
les
movsl
add
add
cwtl
lods
pushf
mov
jns
add
lcall
ret
adc
jnp
add
test
std
call
rol
ljmp
rclb
rol
je
pop
pop
push
inc
xor
add
sub
pop
pop
pop
push
push
push
push
lea
push
push
push
call
faddl
push
xchg
pusha
add
test
nop
jae
push
xchg
rolb
pop
add
add
loop
add
add
push
lret
add
sti
filds
add
int
sub
pop
pop
push
rol
pop
leave
push
push
lea
push
lea
push
push
call
push
jmp
loop
add
pushf
int
add
push
roll
loope
repnz
roll
jge
std
add
add
add
add
add
ret
test
repnz
mov
push
in
cmc
scas
test
bound
add
sub
pop
ret
mov
push
shl
dec
shl
xor
pop
add
push
push
push
lea
push
push
push
lea
push
lea
push
call
lods
mov
int
in
cltd
je
add
ficoms
cli
fbstp
mov
add
pop
outsl
repnz
add
add
mov
lret
push
mov
loopne
lcall
add
push
lea
push
lea
push
push
push
push
call
aad
mov
cltd
add
mov
jecxz
hlt
ljmp
add
mov
add
xorl
add
in
add
add
pop
gs
mov
mov
pop
ja
add
add
add
push
jnp
add
mull
push
push
push
push
push
push
lea
push
push
push
call
test
xchg
add
in
out
icebp
add
add
add
jns
add
add
mov
in
add
les
ret
add
lea
jbe
add
negb
xchg
mov
mov
add
jae
add
bound
push
mov
leave
aad
not
add
sub
pop
pop
push
rol
dec
add
shl
pop
call
push
push
push
push
push
push
push
push
push
push
call
std
cmpsb
stos
mov
jecxz
add
lds
mov
jnp
add
lods
jb
hlt
push
lea
add
lods
pop
add
int
add
pop
jecxz
into
mov
add
lret
in
fdivr
lcall
call
push
lea
push
push
push
push
push
push
push
push
lea
push
call
add
jecxz
add
add
in
jmp
out
add
addl
mov
add
push
add
push
call
lcall
xor
push
push
lea
push
push
push
call
add
add
xchg
cltd
repnz
add
add
sti
rorl
movb
add
mov
add
add
adcb
mov
add
add
add
hlt
mov
call
lret
add
push
mov
mov
mov
scas
loopne
in
in
pop
pop
pop
push
push
push
push
push
push
push
lea
push
call
add
add
clc
mov
popf
add
jbe
push
pop
add
imul
add
add
add
push
fcomps
pop
nop
cmpsb
int
mov
xchg
jecxz
bnd
add
add
movsl
sub
pop
pop
pop
push
inc
lea
not
add
pop
pop
leave
push
sub
shl
sub
pop
ret
push
push
push
push
push
call
mov
xchg
vandps
orb
std
add
add
push
scas
testl
jl
sti
jno
fstpt
loope
in
lock
lcall
in
add
push
pop
push
push
push
inc
sub
pop
push
push
push
push
push
push
push
push
push
push
push
call
js
hlt
js
add
add
add
add
popf
mov
add
xlat
cwtl
out
flds
add
add
jno
add
add
add
xchg
mov
clc
add
pop
mov
add
into
movl
add
pop
push
mov
push
shl
dec
pop
push
push
inc
sub
inc
pop
pop
lea
push
push
lea
push
push
call
addb
mov
test
mov
out
add
add
add
shlb
iret
add
add
add
add
add
jmp
lcall
ljmp
push
call
lcall
add
push
mov
imul
mov
jno
popa
add
std
flds
add
popa
add
add
add
add
add
mov
add
int
add
mov
out
push
jle
add
aad
js
popf
add
add
rcll
stos
add
lea
ljmp
ficoml
pop
mov
push
push
push
push
push
push
push
push
lea
push
push
call
insb
roll
add
subl
mov
jae
add
lods
rcrl
mov
jno
mov
add
mov
int3
add
clc
fildl
add
lret
stos
sub
pop
add
push
shl
shl
pop
pushl
push
not
pop
popl
push
push
push
push
call
hlt
xlat
add
ja
lods
add
xchg
lods
out
add
jecxz
xchg
cmpsb
ret
mov
push
pop
add
js
mov
test
add
int
add
push
shl
lret
lock
mov
push
push
push
push
push
push
call
add
add
add
int
cltd
test
pop
mov
add
mov
add
cli
add
add
call
fstpl
add
add
cmpsb
add
add
add
add
add
stc
push
push
push
lea
push
call
fists
std
add
leave
popa
add
add
add
add
stc
imull
test
add
mov
push
outsl
pop
jo
add
add
mov
add
mov
xchg
add
add
add
scas
iret
jge
popf
add
jbe
add
jp
in
lock
lcall
notb
pop
lea
push
push
push
push
call
addb
mov
add
pop
add
rolb
ljmp
xchg
mov
add
fldcw
in
add
loope
ljmp
fstl
pop
mov
add
lea
push
push
lea
push
push
call
add
add
add
lods
pop
lock
add
out
mov
out
add
add
imul
add
test
test
add
add
jge
add
add
push
roll
mov
add
add
rolb
xchg
ror
add
incb
into
add
call
mov
push
lea
push
push
push
push
push
push
lea
push
lea
push
push
call
scas
jno
aam
stos
addr16
repnz
add
bound
xchg
add
jb
xchg
add
jmp
jnp
leave
fimull
jb
add
aad
add
jb
add
add
add
add
push
xchg
jb
data16
xchg
out
add
addb
aad
in
fdivr
lcall
shll
rclb
rol
nop
push
lea
not
lea
pop
nop
xor
push
push
push
lea
push
call
add
outsl
add
mov
fcmovne
add
add
imul
add
shrb
add
cmpsl
int
int
mov
add
jne
add
jbe
ret
add
nop
mov
mov
sub
pop
nop
push
add
pop
nop
push
push
push
lea
push
push
call
loope
add
add
jne
gs
add
mov
scas
add
add
add
add
mov
cmpsb
add
movsl
insb
shll
js
jns
cwtl
add
insb
add
movsl
in
mov
add
push
add
aad
mov
pushf
add
xchg
add
push
lea
push
lea
push
push
lea
push
lea
push
call
lahf
je
loopne
fnstenv
add
add
push
add
jo
rolb
fadds
fucom
aad
add
add
loopne
xorb
fadds
call
push
aad
jmp
push
push
leave
neg
lret
lret
shlb
xlat
bound
lods
roll
jae
jp
jle
lret
sub
pop
nop
push
add
shr
pop
nop
cmpb
jne
push
inc
ror
pop
add
nop
push
push
call
roll
lahf
xchg
pop
mov
add
add
out
loope
lahf
fildll
xchg
leave
mov
add
add
add
loop
mov
add
add
add
lcall
push
pop
cmp
je
nop
push
inc
shr
pop
nop
inc
push
push
push
push
lea
push
call
add
bound
xchg
add
in
clc
aad
add
nop
into
fwait
ja
fdivrl
add
add
xchg
jmp
rolb
add
in
addl
mov
out
pop
mov
jne
jb
push
push
push
lea
push
call
add
js
mov
imul
add
repnz
mov
cld
add
add
add
loop
repnz
add
add
data16
add
add
add
mov
ror
add
sub
pop
xor
push
push
push
push
push
push
push
push
lea
push
push
call
add
mov
test
fdivr
outsl
xchg
cmpsl
mov
imul
pusha
mov
add
test
pop
add
add
lret
sub
pop
jmp
push
lea
push
push
push
call
aad
mov
std
add
add
add
lret
jbe
xchg
iret
push
add
cld
add
popa
push
add
add
add
add
ret
mov
rcl
add
cmc
sub
pop
mov
push
push
push
call
ret
push
ja
fcomi
mov
mov
add
add
add
add
mov
fdivrl
mov
add
add
into
jne
jne
jnp
aad
pop
push
pop
add
jmp
pop
add
movzwl
push
xor
rol
rol
pop
mov
push
push
lea
push
push
push
lea
push
lea
push
push
push
push
call
subb
arpl
add
ja
into
cmc
add
insb
mov
loopne
incb
filds
add
xchg
call
cmpsl
mov
jnp
pop
shl
add
in
arpl
leave
lret
jp
add
mov
pop
add
push
push
lea
push
lea
push
lea
push
push
call
imul
fcom
pusha
jp
mov
fnstcw
mov
add
add
mov
mov
add
mov
pop
mov
xor
push
push
push
push
push
push
lea
push
lea
push
push
call
mov
add
push
add
out
loopne
shll
push
in
mov
jecxz
movsl
add
add
add
add
add
shll
add
add
add
add
arpl
mov
push
mov
push
push
add
std
add
imul
fdivr
lcall
dec
nop
add
mov
jmp
xchg
push
lea
push
push
lea
push
push
lea
push
lea
push
push
call
add
mov
xchg
in
loope
mov
pop
add
jne
add
add
add
idivl
imul
roll
mov
fcompl
loope
push
shl
shr
xor
pop
xor
shl
push
shr
shr
not
pop
xor
push
sub
lea
pop
shl
xor
push
shr
xor
add
add
pop
mov
add
push
push
call
add
nop
jns
add
add
jge
add
add
lds
cmpsl
xchg
mov
mov
mov
add
add
add
lods
lock
add
pop
fiaddl
iret
cmpsl
mov
add
push
fcompl
mov
sub
pop
pop
push
push
push
push
call
add
xchg
test
xchg
lret
cmpsl
add
incb
add
popf
add
scas
xchg
pop
sti
add
add
add
pop
mov
ret
add
jmp
addl
scas
sub
pop
pop
push
add
pop
pop
push
rol
lea
pop
pop
push
lea
push
push
push
push
push
call
loope
add
add
add
add
mov
mov
addb
add
stos
fdivrl
push
into
add
jae
add
cmpsb
add
test
add
add
jle
aam
add
add
mov
mov
mov
int
stos
mov
push
push
add
sub
pop
leave
push
pop
ret
push
push
add
sub
pop
mov
push
dec
add
shl
pop
push
push
inc
pop
push
push
ror
ror
pop
push
push
push
push
push
push
push
call
mov
add
add
fs
loopne
in
add
imul
lods
add
add
movsl
lret
push
iret
add
bound
mov
jnp
add
lcall
mov
push
sub
pop
mov
push
sub
pop
mov
push
push
push
lea
push
lea
push
lea
push
push
push
push
push
call
mov
pop
add
lahf
push
add
cmc
arpl
pop
add
add
outsl
mov
mov
xchg
andl
pop
out
insb
js
jo
add
ja
fsubrl
xlat
addr16
in
add
enter
pop
test
je
mov
push
inc
pop
test
je
mov
push
dec
shl
not
pop
mov
push
rol
pop
mov
push
rol
pop
inc
cmp
je
push
ror
sub
inc
pop
test
je
mov
push
sub
dec
rol
pop
inc
cmp
je
push
shr
sub
pop
test
jne
push
push
push
push
lea
push
lea
push
push
push
call
scas
add
int3
jne
cmpsb
add
jbe
pushf
add
repnz
add
cmpb
jmp
jmp
mov
les
fwait
add
add
add
add
push
sub
pop
xor
push
rol
pop
pop
pop
push
lea
push
call
mov
mov
loope
nop
xchg
pop
aad
rolb
pusha
int
mov
divl
add
add
jno
add
movsl
stc
add
push
add
add
js
fidivrs
push
roll
pop
add
roll
add
stc
lods
sahf
add
add
clc
sub
pop
pop
pop
push
ror
not
inc
sub
pop
leave
ret
push
push
push
push
push
call
or
add
out
cld
pusha
cmc
loop
ret
add
add
mov
idivl
mov
nop
pop
push
mov
mov
add
mov
sahf
fcompl
and
add
into
mov
outsl
test
testl
in
lcall
push
push
add
pop
inc
push
push
push
call
push
push
add
clc
add
mov
cli
add
mov
arpl
fcmovbe
add
xchg
mov
flds
jle
add
mov
fadds
les
mov
ljmp
in
hlt
pop
cmp
jne
push
shl
xor
rol
add
pop
lea
push
push
push
lea
push
push
lea
push
lea
push
push
call
mov
pop
mov
lcall
add
fiadds
add
add
nop
add
div
xchg
shll
outsl
mov
shlb
movsl
hlt
jp
movl
add
fldenv
mov
add
add
mov
lret
add
sub
pop
mov
push
push
call
push
add
shll
add
lods
movsl
faddl
add
add
add
jp
andb
in
add
add
pop
fiaddl
mov
add
mov
add
add
jnp
add
test
mov
lds
mov
add
rcl
push
add
scas
cmpsl
push
xchg
popa
rolb
lcall
in
test
add
add
add
push
push
push
lea
push
call
scas
mov
jne
add
pop
insb
add
add
add
add
add
pop
add
fadds
loopne
test
inc
add
mov
mov
add
leave
enter
je
mov
push
add
rol
sub
ror
pop
add
push
shr
sub
sub
pop
cmp
je
jmp
push
push
push
lea
push
push
lea
push
lea
push
call
lds
add
icebp
add
add
add
xchg
add
add
mov
add
mov
add
add
pop
add
enter
adc
add
cmpsb
add
push
mov
add
add
lcall
rcrb
rorl
scas
or
pop
push
ror
add
ror
pop
pop
push
push
push
push
lea
push
lea
push
push
push
push
call
add
add
loop
add
add
xlat
out
jo
stos
add
jne
cmpsl
pop
scas
popf
jbe
cli
add
add
lcall
leave
push
lea
push
push
push
push
push
lea
push
push
call
xlat
add
icebp
test
add
sti
into
jle
insb
lcall
outsl
add
add
js
movsl
flds
adcb
add
add
flds
fsubp
add
leave
in
mov
add
mov
mov
std
lock
cld
add
pushf
repnz
lcall
or
push
dec
shl
dec
pop
lea
pop
push
xor
inc
pop
pop
push
push
push
push
push
push
push
call
add
stos
add
add
icebp
iret
fidivl
aam
add
rol
scas
add
lcall
arpl
movsb
add
mov
push
push
hlt
fwait
imul
add
lcall
push
rol
pop
pop
push
push
push
lea
push
push
call
insb
fiaddl
movb
add
mov
lods
test
icebp
scas
loope
mov
loopne
scas
add
pop
xlat
add
push
add
add
clc
add
imul
sub
pop
leave
push
shr
lea
add
pop
ret
mov
push
inc
pop
pop
push
lea
push
push
push
push
lea
push
lea
push
push
push
push
call
jbe
fildl
mov
add
add
cltd
cli
pop
data16
add
test
mov
lahf
xlat
add
mov
add
in
lret
outsl
mov
mov
mov
shll
lock
stos
movsb
xchg
add
add
add
in
fdivr
lcall
push
push
push
push
push
push
push
push
lea
push
push
call
push
cmc
movsb
les
add
push
add
push
add
mov
add
add
add
add
mov
pop
add
pop
test
cwtl
into
movsb
add
add
xchg
xchg
cmc
pop
pop
pushf
add
xchg
pop
mov
test
add
mov
sub
pop
pop
push
lea
ror
pop
pop
leave
push
push
push
push
push
push
push
lea
push
lea
push
push
call
lods
add
add
add
in
mov
mov
push
add
add
shl
add
mulb
testl
ret
xor
cmp
mov
icebp
adc
and
adc
inc
cmp
ja
cmp
iret
idivl
adc
popa
cmp
xor
adc
mov
add
pop
xchg
jns
push
jne
pop
and
push
mov
je
lcall
jmp
shrb
decl
push
sub
pop
ja
mov
loopne
cmp
adc
dec
hlt
lahf
dec
push
ficomps
movsb
xchg
mov
xchg
cltd
je
cmp
or
scas
stos
je
fwait
pushf
jae
rcrb
xchg
loop
sti
je
mov
pop
xchg
and
push
mov
cmp
cltd
jp
xor
ja
cwtl
ss
jno
jl
aaa
sbbb
sbb
pop
sbb
adc
and
mov
cmp
jle
xchg
sbb
xchg
ret
fidivrs
inc
rorl
pusha
jbe
xchg
aam
cltd
or
xor
vorps
adc
shrb
dec
pop
clc
movsb
dec
push
xor
mov
adc
xor
nop
aaa
xor
cmp
dec
lods
dec
addl
sarb
push
fcompl
jno
mov
rcll
scas
daa
inc
cmp
push
dec
testl
into
sbb
dec
sub
mov
mov
xor
mov
jno
movsl
cmp
cmpsl
mov
and
movsl
mov
xor
or
mov
xor
fcmovne
mov
pop
leave
and
pop
xor
xchg
popf
pop
lcall
push
mov
imul
gs
mov
scas
out
push
xchg
leave
fcmovnbe
incb
inc
mov
mov
adc
mov
daa
adc
jae
jecxz
and
xchg
cmp
jne
ficoml
std
mov
movsb
pop
push
mov
lcall
sub
test
int3
out
sahf
xor
xchg
sub
scas
lock
int3
or
inc
cmp
mov
ss
jge
add
mov
cmc
dec
faddp
fs
add
mov
dec
int
jo
mov
jp
das
adc
push
xchg
in
xchg
lods
cli
sub
push
fistpll
mov
popa
out
enter
push
add
ret
insb
shr
pushf
jns
mov
nop
mov
orb
pop
int3
jae,pt
nop
push
mov
jle
mov
call
inc
insl
sbb
add
xchg
pop
clc
out
push
and
push
cmp
daa
xchg
dec
lock
add
ljmp
sbb
mov
jno
icebp
inc
fldt
insb
aaa
and
mov
sub
jnp
out
test
bound
xor
xchg
cmc
and
cmp
mov
aas
cmp
outsb
out
and
out
mov
clc
mov
mov
stc
pop
nop
fdivl
jl
insl
neg
sarl
cmp
cmp
jle
mov
fcoml
mov
or
or
popf
pop
cmp
mov
enter
pop
mov
xor
sahf
cmp
movsl
cmp
in
std
data16
insb
movb
orl
roll
repnz
sbb
inc
inc
jecxz
shrb
sub
jbe
mov
xor
addb
adc
lods
fadd
into
lods
test
mov
add
xchg
repz
sub
lret
add
adc
sahf
fisubrs
enter
jae
mov
pop
jl
push
in
mov
lods
popf
inc
sbbl
mov
jbe
mov
xchg
mov
push
sbb
ret
loopne
arpl
push
inc
nop
rolb
iret
leave
push
lock
sarl
ljmp
pop
in
repz
cld
xor
xor
pop
adc
xchg
test
insb
push
in
mov
and
jecxz
out
lret
dec
push
loope
aad
push
adc
cmp
fcomps
psubusw
jmp
jne
jmp
pop
orl
ret
repz
in
in
push
lea
xchg
out
mov
pop
out
stos
mov
insl
mov
fincstp
sbb
jns
aaa
cmp
pushf
sahf
sbbl
mov
xorb
daa
cmp
add
pop
adc
dec
push
or
test
icebp
arpl
aas
fdiv
mov
mov
daa
push
sbb
adcb
lds
ret
sbb
das
pop
fimuls
neg
jo
cmp
cmp
jle
mov
or
add
popf
movsl
aad
hlt
cld
and
icebp
mov
lahf
in
cmp
mov
lods
xor
out
daa
mov
xor
cltd
insb
dec
int3
add
add
push
std
lret
adcl
paddusw
mov
pop
dec
mov
mov
jnp
inc
ljmp
cs
lods
scas
mov
and
sbb
jo
fmuls
xchg
jmp
jecxz
mov
push
insl
xchg
les
push
mov
cs
and
sbb
push
jnp
es
js
adc
jecxz
out
xor
pop
add
lods
mov
jle
leave
push
jmp
push
xor
and
cmc
fs
or
mov
mov
sub
mov
cld
fwait
and
test
lret
pop
int
jmp
test
loop
mull
data16
paddw
push
jo
imul
jle
idivb
mov
std
jecxz
and
cwtl
inc
mov
xor
mov
ljmp
sub
scas
sbb
mov
add
push
outsl
sub
shlb
cwtl
jp
jg
dec
and
aas
int3
push
lret
xchg
sub
neg
lock
test
inc
rcr
stos
flds
sarb
add
xchg
ficoml
gs
pop
movsb
mov
inc
mov
mov
dec
test
or
pop
call
mov
adc
mov
xchg
adc
out
cmp
jp
mov
and
mov
int3
aaa
xchg
fcomps
dec
jae
leave
xchg
sbb
lock
fdiv
int3
jmp
jp
sti
pop
aas
stos
jo
jge
cmp
out
out
mov
stc
sub
addr16
sub
out
lahf
push
js
inc
out
int
pop
mov
mov
mov
stc
push
iret
mov
movsb
stos
xor
test
xor
pop
xchg
push
dec
imul
xchg
push
xor
leave
dec
scas
pushf
mov
lret
jbe
dec
dec
mov
mov
mov
cmpsl
mov
xor
inc
and
mov
sub
movsb
xchg
add
movsl
pop
pop
jns
xor
mov
add
dec
adc
incb
mov
lahf
pop
mov
xlat
movsb
int
dec
and
aas
aad
roll
dec
dec
jl
data16
mov
jl
addb
dec
movsb
adc
sub
dec
jno
pop
mov
out
ja
in
xor
test
sbb
dec
pop
dec
iret
mov
jg
cmp
dec
sub
shr
pop
movsb
lret
in
orw
cs
sub
rcrl
push
into
xchg
mov
int
sbbb
adc
jle
lds
jnp
sbbb
xor
mov
inc
es
bound
push
sub
inc
call
mov
and
push
jbe
push
dec
cmp
addr16
popf
push
jecxz
ss
pushf
dec
cmp
fnsave
jnp
out
push
mov
jl
mov
scas
xchg
in
sbb
push
pop
xor
out
arpl
fldenv
das
sbb
movsb
push
xchg
sub
icebp
fbstp
mov
ret
dec
stos
pop
daa
fucomp
out
in
rorb
mov
sub
cmp
test
add
mov
in
inc
stc
outsl
hlt
shrl
ss
sbb
cli
or
adc
repnz
popa
jb
pop
push
bnd
call
jnp
shl
ret
dec
xchg
pop
imul
outsb
mov
pop
cmp
stos
cwtl
test
iret
repnz
lds
adc
jns
imul
into
scas
inc
jg
hlt
out
push
mov
outsb
dec
pop
sbb
push
xor
and
lret
and
sahf
repz
or
aas
add
push
pop
xor
push
lock
mov
inc
xchg
mov
jmp
shrl
es
dec
xchg
out
fwait
rcll
jle
jle
ljmp
out
pop
mov
cmp
push
rorl
xchg
cld
sub
cmp
jb
sti
xchg
cmp
or
popf
cs
fs
dec
jns
push
out
test
inc
ds
jnp
test
xchg
into
cmp
push
stos
lock
imul
jp
lock
mov
out
cmp
cmp
sbb
xchg
js
mov
push
mov
rolb
pop
and
sbb
jo
addr16
ljmp
push
pop
fsubs
enter
push
inc
jno
sub
adc
stos
mov
mov
dec
movsl
loope
push
cmp
sbb
xlat
and
out
nop
pop
jp
insb
fdivl
imul
mov
aas
sub
fists
test
dec
inc
mov
cmp
ds
push
fs
jmp
scas
lahf
adc
pop
jbe
sub
mov
adc
rorb
in
lret
int
enter
iret
inc
jge
cmp
jnp
inc
push
sub
push
and
push
jne
push
fdivrl
in
ja
jecxz
jl
aad
mov
aas
sbb
popa
jno
mov
add
sbb
ss
mov
cmp
cld
cmp
mov
bswap
adc
mov
xchg
jecxz
stos
movsb
xor
cltd
mov
fildl
addr16
dec
daa
jle
out
sti
es
pop
enter
add
adc
xchg
dec
cwtl
pop
outsl
dec
jns
imul
push
cmp
dec
lods
xchg
sbb
inc
adc
mov
mov
pop
sbb
iret
test
ficompl
clc
mov
or
inc
movsl
jp
jmp
std
js
mov
ret
adc
shr
jl
dec
iret
mov
pushf
imul
out
in
mov
adc
int
cmp
mov
cmp
ret
adc
les
ds
addr16
ret
cli
ja
arpl
pop
test
mov
mov
pop
hlt
jnp
mov
sub
dec
push
out
jns
stos
inc
aas
int3
mov
adc
mov
notl
mov
inc
xlat
movl
inc
lds
jne
fwait
shr
les
inc
xor
cmpsl
push
sub
sahf
mov
aad
pop
push
arpl
cmc
cmp
lock
loopew
sbb
or
add
or
dec
adc
sub
aaa
jne
push
dec
call
lea
lcall
insl
in
xorb
add
insl
push
mov
or
xchg
mov
or
inc
inc
add
jbe
cmp
adcb
mov
mov
popa
pop
xchg
jbe
mov
lcall
fs
push
cmp
call
mov
gs
xor
mov
or
jge
cmpsl
push
cltd
fwait
mov
add
stc
aad
pop
pop
aaa
mov
stos
adc
and
add
bound
sub
sbb
outsb
aaa
jae
fstpl
push
call
ljmp
in
add
and
repz
in
push
dec
cltd
mov
fiaddl
fdivrs
mov
aad
lods
mov
inc
push
scas
adc
shl
add
push
xor
xor
lock
imull
in
mov
inc
rcr
push
sub
push
test
add
xchg
rcrb
and
scas
das
push
mov
or
inc
notb
int
xor
sbb
jecxz
jns
stc
inc
fdivrl
mov
rcr
and
mov
or
or
jecxz
jbe
mov
mov
mov
pushf
sub
dec
add
and
inc
mov
mov
out
or
mov
cmp
clc
lods
roll
outsl
outsl
mov
imul
inc
ja
hlt
lahf
mov
imul
popf
mov
mov
cmp
mov
mov
push
adc
dec
lret
add
sbb
or
out
clc
roll
sbb
push
dec
push
mov
jg
imull
rcrl
jecxz
xor
popa
and
jle
cmc
dec
and
push
call
cmp
fisubrs
push
sub
cmp
repz
sub
adc
movsb
add
pop
fidivl
ja
in
inc
inc
fwait
std
outsl
aad
jmp
jnp
push
jno
insl
pop
mov
sub
add
inc
add
jl
inc
mov
cmp
adcb
insl
or
xor
nop
xchg
jnp
or
lock
inc
sbb
ss
jmp
add
push
mov
repz
jl
cmp
dec
fwait
sub
lret
lahf
testb
inc
ljmp
xchg
push
sahf
xchg
iret
imul
icebp
add
outsl
mov
jno
test
in
addr16
imul
loopne
adc
jp
stos
shr
pop
test
cli
push
jecxz
into
add
dec
or
fbld
fstl
xchg
clc
arpl
ljmp
out
subl
mov
lahf
mov
cmc
push
xorb
push
dec
hlt
imul
adc
cmpsl
jnp
in
mov
adc
stos
cltd
nop
lcall
xchg
mov
adc
shrl
dec
cmpsl
daa
test
les
cmpsb
repnz
jb
push
dec
mov
fscale
shlb
idivl
mov
sub
outsb
jecxz
loopne
leave
mov
call
call
pop
loopne
mov
xchg
orl
imul
clc
loope
jbe
inc
adc
adc
enter
cmp
pushf
les
adc
clc
xchg
bound
addl
shlb
and
push
repnz
es
jb
xor
dec
lods
outsl
shlb
xchg
out
add
jae
or
or
mov
and
mov
sub
in
iret
movsl
adc
dec
stos
popa
lret
cwtl
inc
mov
out
mov
std
or
mov
rcrb
pushf
lods
jge
cli
ret
nop
pop
or
add
xor
popa
data16
mov
mov
add
stos
push
mov
popf
into
mov
negl
push
sbb
lea
popa
pop
xchg
dec
xor
dec
fld
lcall
out
push
xor
sbb
pop
mov
pop
out
psubusb
scas
pop
push
in
cmp
lahf
mov
sahf
push
mov
jp
jecxz
lea
popf
xor
xchg
cmp
or
or
jns
inc
jecxz
inc
insb
sub
outsb
int3
in
jo
xchg
sbb
mov
enter
mov
movsb
mov
out
pop
mov
dec
xchg
cmpsb
cwtl
lret
cld
mov
add
out
clc
imul
dec
gs
sub
ljmp
or
pop
shr
sti
in
xor
lret
cmp
sar
pop
lock
int
out
mov
push
jae
js
push
jo
in
mov
je
std
fld
or
mov
lret
add
ds
fs
mov
push
imul
sti
ds
jle
ljmp
or
jle
or
rcl
jno
outsb
call
scas
mov
in
loopne
push
orb
nop
outsl
outsb
or
sbb
and
fldt
loopne
dec
or
cmp
test
cmpsb
pop
push
push
data16
insl
mov
cmp
je
outsb
xchg
mov
jecxz
mov
xchg
pop
cmp
call
dec
mov
jmp
mov
out
lds
std
inc
icebp
enter
xchg
ja
hlt
movsb
push
push
nop
rorl
or
xor
inc
xlat
xchg
mov
cli
lock
loopne
jnp
stos
ss
inc
stc
jno
shll
mov
xchg
aaa
lock
aas
pop
cmpb
and
mov
mov
daa
push
das
stos
arpl
sbb
cmp
push
mov
out
popf
or
sbb
das
test
movsl
cltd
cli
lcall
bound
das
lock
mov
cmp
jo
cmp
push
imul
dec
inc
pop
andb
and
mov
imul
adc
mov
and
ja
outsb
mov
adc
cmp
call
xchg
fwait
ss
push
add
in
cli
dec
pop
scas
movsb
rcrl
sahf
lods
add
jb
cmp
mov
shrb
daa
shll
mov
and
dec
fimull
push
ljmp
mov
mov
int
aas
mov
cld
and
mov
in
stos
jo
and
xor
pushf
sar
fisubrs
stc
add
stos
jo
or
and
stos
das
add
mov
subl
mov
rclb
cmp
addr16
inc
cmpsb
mov
pop
fisubrs
jns
mov
and
mov
or
pop
aaa
dec
out
xchg
mov
mov
push
xchg
pop
outsl
xor
cmp
mov
cmc
lret
push
adc
inc
or
mov
xlat
add
popa
test
sbb
push
xchg
call
sub
es
mov
xor
out
adc
pop
jns
pop
fwait
sbb
or
xchg
push
outsb
add
adc
adc
aaa
jg
lds
rcrb
or
sbb
std
lea
icebp
lea
sub
push
jne
xor
jecxz
call
std
dec
mov
pop
lods
pop
adc
inc
aam
in
scas
imul
cwtl
js
xor
pop
das
fwait
pusha
mov
pop
mov
mov
inc
dec
loopne
imul
xchg
sub
movsb
and
es
cld
pop
xor
mov
jb
or
cltd
jb
mov
jmp
and
rol
sub
les
and
push
das
cmpsl
xchg
ds
repz
mov
mov
cmp
bound
dec
xor
jmp
jg
lret
scas
loopne
movsb
mov
add
fldcw
sahf
fwait
push
dec
fstps
movsb
fisubrl
mov
bnd
sbbb
cmpsb
mov
mov
mov
xchg
lret
stc
cmp
loopne
insl
and
cmp
int
mov
repnz
xor
inc
cmp
or
scas
push
mov
sbb
mov
inc
mov
int
ret
mov
out
or
adc
out
stos
std
xchg
dec
pusha
lret
lods
aaa
and
jbe
xchg
inc
fistl
ja
inc
or
fisubl
lods
sub
jle
sub
and
adc
jne
fs
bound
std
inc
inc
mov
lea
int
inc
sub
sbb
inc
insl
inc
outsb
mov
int
loop
movsl
or
pop
dec
add
xchg
mov
push
mov
lcall
adc
and
rolb
push
sub
dec
cmp
dec
rolb
dec
sbb
daa
push
test
jmp
hlt
pop
add
dec
and
ds
fiadds
pop
add
lea
aas
mov
and
scas
std
movsl
hlt
daa
dec
test
push
dec
aad
ss
fmuls
xor
jg
cmp
sub
fstps
test
pop
mov
sti
mov
jnp
andl
or
bound
sbb
jno
sar
addl
test
test
mov
outsb
pusha
out
adc
push
fmuls
lock
mov
ja
dec
adc
testb
xorb
fdivp
stos
test
and
insb
stos
sub
shrb
inc
rcr
lods
xor
mov
loopne
lods
push
push
pop
mov
dec
and
nop
add
scas
call
push
repnz
mov
dec
push
jecxz
rcrl
jecxz
test
xor
mov
mov
push
cld
testl
pusha
or
add
or
inc
jb
push
ss
fmull
neg
ficoms
dec
inc
jl
in
xchg
inc
dec
or
in
fmuls
jle
lahf
sbb
mov
inc
pop
sub
adc
shll
pop
outsb
add
jnp
test
fisttpll
xor
in
xlat
stos
xchg
loope
add
add
idivb
mov
ja
sti
cld
sub
inc
test
adc
repz
ret
into
jno
push
loop
scas
pop
and
or
xor
mov
push
ds
pop
cmp
insb
pop
inc
dec
jecxz
cmp
test
out
imul
and
out
out
adc
add
mov
scas
pushf
clc
pop
call
sbb
fidivl
scas
clc
cmp
ss
mov
cmp
cmpsb
cwtl
ds
arpl
insl
repz
mov
jo
pop
cmp
add
adc
push
jbe
pop
icebp
jle
pop
dec
repz
cmpsl
fsts
mov
cmp
cmp
or
pop
cmp
aam
jns
push
mov
xlat
mov
inc
push
scas
sub
sbb
inc
xorl
enter
cmp
xor
outsb
sbb
mov
push
jle
sub
jno
mov
xchg
orb
cwtl
ds
and
clc
mov
add
xor
fmul
das
jge
push
mov
sbb
out
sar
test
fldt
lret
push
and
mov
ljmp
cmovge
pop
adc
fdivrl
test
pop
insl
pop
ja
jl
sbbb
call
pusha
stc
add
hlt
mov
mov
ror
movsb
jae
cld
xlat
cmp
scas
cs
ljmp
orl
fdivl
xchg
out
sbbl
mov
ss
dec
mov
mov
inc
cmpsb
popa
pusha
sbb
bound
fstps
jg
jmp
in
mov
pop
ficomps
loop
inc
adc
adc
push
inc
stos
leave
divl
ss
lret
add
push
stos
xor
mov
cmp
mov
cmpsb
loop
mov
ja
test
xchg
xchg
into
or
mov
fst
and
in
data16
or
jne
mov
lret
test
jl
stos
xor
aaa
mov
adc
xlat
aaa
sbb
pop
out
push
dec
imul
dec
xor
stos
mov
push
mov
and
add
add
repnz
fmull
sub
or
push
in
leave
mov
cmpsb
mov
xchg
dec
out
lcall
cltd
or
out
xchg
les
inc
dec
leave
push
insl
push
cli
hlt
mov
mov
and
fs
mov
dec
xchg
pop
mov
mov
push
imul
lcall
push
xor
or
jle
push
sbb
mov
inc
lods
sub
push
stos
dec
arpl
inc
sub
or
scas
imul
xor
in
insb
xor
loopne
inc
inc
and
addr16
jb
dec
jge
adc
lsl
jg
xchg
lea
add
aam
cwtl
xchg
cmp
jns
movsb
sub
divl
outsl
insl
gs
cmp
repz
mov
sbb
add
sbb
pop
lods
popf
jge
push
dec
jl
fldenv
and
mov
outsl
fwait
test
data16
shrb
sbb
lahf
xchg
mov
push
xchg
das
push
jle
lea
test
int
test
xor
mov
dec
outsb
or
jno
imul
xor
jo
mov
sub
sub
repz
vpsubsb
cwtl
pop
sbb
dec
movsl
add
nop
sbb
inc
inc
xlat
adc
mov
mov
pop
mov
es
cli
aas
jmp
stos
inc
jno
mov
cmp
shlb
xchg
jae
mov
dec
mov
bound
fimuls
imul
sarb
sbb
mov
xor
nop
jnp
fcompl
dec
repnz
test
add
inc
cs
pop
outsb
andl
stos
and
mov
jne
std
pavgw
cmp
push
movsl
insb
sub
lock
cli
fwait
outsl
jns
dec
out
sub
icebp
jl
in
sbb
push
cwtl
lds
les
test
xchg
cwtl
xchg
popf
fists
orl
mov
adcb
xor
fisttps
hlt
xlat
std
cmp
imul
push
xor
sarl
sbb
pusha
pop
dec
nop
cwtl
dec
inc
dec
rol
cmpsb
call
mov
lock
or
pop
je
push
xor
xchg
adc
pop
inc
inc
cmp
insl
mov
inc
xchg
mov
arpl
nop
push
es
mov
mov
loop
repz
imul
dec
cwtl
mov
shll
dec
cs
sub
sbb
xlat
cmp
fisubs
and
mov
xor
imul
into
fstl
add
hlt
test
xor
or
or
sub
dec
xchg
push
push
adc
sub
jno
ss
adc
inc
xchg
mov
add
repnz
ss
test
mov
jb
stc
push
loope
sbb
mov
mov
push
xchg
add
aaa
sub
sub
push
inc
movsl
jnp
mov
fiaddl
and
gs
outsl
decl
jbe
xor
imul
adc
mov
roll
fsubr
popa
movsb
mov
mov
enter
sub
mov
mov
movlps
mov
test
in
mov
jmp
test
xchg
lcall
ret
ja
sub
sbb
pop
in
negl
adc
sarl
sahf
or
pop
pop
aam
and
jp
jae
push
jp
and
scas
mov
sbb
dec
shrb
cltd
jb
testb
hlt
loopne
ret
iret
pop
inc
dec
fists
lcall
or
addr16
int3
mov
xor
popl
inc
adc
cli
ret
enter
or
xor
mov
addb
testl
push
fwait
stos
pop
daa
ljmp
lret
fsubp
and
addl
dec
xchg
clc
mov
rcrb
sti
test
cltd
cltd
or
mov
gs
shrb
sbb
jne
jno
xchg
fdivl
lret
jg
or
jo
sub
cli
mov
xchg
mov
jecxz
repz
stc
movsl
imul
lods
roll
jae
sub
inc
test
mov
cmp
repz
push
cli
fnstenv
xor
and
loop
pop
int3
stos
jmp
dec
das
sub
out
pop
cld
les
nop
adc
stc
loopne
sbb
sub
mov
and
js
push
mov
sub
cltd
push
push
idivw
fadd
pop
test
push
xchg
mov
js
cmpsb
imul
mov
sbb
out
mov
xlat
cwtl
mov
push
push
js
pop
xchg
mov
push
mov
stc
sahf
les
pop
mov
lds
loopne
cmp
jmp
dec
and
scas
jge
out
xchg
imul
fisttpl
jb
cli
aam
inc
mov
ljmp
outsl
call
out
lahf
or
mov
and
xchg
pop
enter
fdivr
decb
add
fistpl
cmpsl
ja,pt
loop
adcl
outsb
push
rolb
pop
push
fadds
insl
adc
and
mov
xor
fists
test
xchg
jecxz
mov
bound
ljmp
cmp
dec
xor
in
xchg
xchg
imul
jmp
xor
pop
cmc
ss
test
scas
stos
mov
test
ljmp
aaa
mov
mov
pop
adcb
nop
jge
sbb
test
cmp
test
int
push
xor
stc
fistpll
or
fs
push
adc
mov
jl
sbb
fiadds
les
or
adc
pop
ja
pop
stc
ss
addr16
in
ljmp
andl
mov
and
imul
shr
iret
ljmp
inc
pusha
pop
xchg
std
ss
ja
gs
outsb
pushf
pushf
out
dec
clc
xchg
stos
int
lds
add
mov
or
outsb
add
cmp
adc
jns
push
and
lods
outsb
sub
lret
mov
ficoms
push
fcmovu
lcall
enter
enter
bound
fdivrp
pop
inc
cli
push
pop
adc
sbb
popf
pusha
adc
adc
icebp
out
jge
mov
fnsave
in
cltd
mov
add
popa
test
inc
insb
pop
std
mov
xor
iret
or
inc
out
divl
adc
shlb
dec
mov
mov
mov
icebp
std
out
sbb
inc
add
jle
and
push
mov
push
jno
jg
add
shll
out
out
iret
push
fcompl
pop
std
xor
push
divb
or
or
push
aam
mov
popa
jl
lahf
sti
call
push
popa
pop
scas
mov
in
pop
sub
int3
xchg
mov
or
add
jnp
fwait
js
sbb
inc
dec
pop
push
inc
inc
mov
mov
jb
and
int3
bound
scas
lret
inc
jge
push
lods
adc
lds
negl
cli
jp
inc
fmul
add
jo
xor
enter
dec
arpl
into
pop
data16
mov
mov
fadd
dec
jge
xchg
ret
test
xor
addl
mov
repnz
cmp
jp
xchg
sub
out
mov
fiaddl
push
dec
ss
test
gs
cld
sbb
sbb
je
mov
sbb
xchg
jle
push
out
and
push
bound
pop
int3
or
popa
jne
gs
into
stos
pop
push
adc
dec
xor
ja
scas
in
xor
xchg
xchg
xlat
and
fsubs
scas
jmp
push
sbb
pop
ljmp
data16
mov
xor
lret
cmp
test
cmp
mov
test
mov
push
sub
lret
lock
and
xadd
sahf
push
sti
push
lahf
xor
outsb
ss
push
mov
push
inc
mov
test
insb
and
inc
adc
pop
jno
and
lret
insb
cmp
icebp
jmp
pop
lds
test
jmp
fwait
lods
cmc
xchg
cwtl
jp
mov
mov
out
addr16
dec
ljmp
dec
sti
scas
or
ja
roll
lods
mov
xor
loope
cltd
xor
mov
jl
xchg
jle
dec
pop
pop
pop
mov
xchg
push
jl
pop
loopne
insb
insb
lea
popa
mov
pop
lahf
js
dec
add
mov
cmpb
rclb
sub
out
mov
pop
lods
aam
or
adc
jge
or
push
push
add
mov
or
cmpb
sub
cli
fwait
inc
inc
pop
adc
or
stos
push
ror
xor
and
inc
stc
add
insl
pusha
lea
xor
divb
int
mov
jnp
jns
add
mov
test
decl
push
and
xor
fmull
into
dec
mov
inc
sbb
xor
mov
mov
sub
add
cli
push
ret
testb
aad
xchg
fs
cltd
mov
cmp
dec
sbb
or
cmp
je
insb
lahf
push
into
dec
xlat
jae
add
cmp
inc
cld
adc
popa
pop
mov
push
mov
xor
push
stos
ds
mov
ds
call
adc
or
jle
sub
andps
aaa
popa
push
push
pop
pop
cmpsb
inc
push
add
lcallw
stc
addr16
sbb
push
fwait
dec
inc
cmp
cmpl
mov
xchg
sbbb
jno
xchg
inc
add
loopne
xchg
xchg
dec
mov
ljmp
cmp
cs
arpl
cld
dec
into
insl
xchg
push
and
js
or
in
out
in
or
xchg
lock
and
sub
adc
jg
fxch
divb
and
in
and
xor
xchg
adc
cli
xlat
mov
arpl
popf
nop
jns
cld
xchg
mov
mov
int3
mov
or
repz
dec
sti
iret
or
repz
dec
and
loopne
pop
aad
lock
adc
mov
test
inc
mov
dec
and
test
lret
in
cmp
addr16
dec
adcl
jno
push
pop
or
push
cs
cmpsl
inc
in
cmp
lods
inc
inc
mov
jne
insl
idivw
push
mov
insb
pop
jmp
in
add
call
mov
xchg
sub
imul
stos
insb
mov
aaa
inc
fsubr
and
sub
pop
movsb
cld
or
leave
outsl
lock
fs
mov
pop
mov
lahf
cmp
and
aad
in
jae
std
std
cmpsb
jecxz,pn
stos
data16
mov
loop
pop
mov
lods
inc
pusha
cmp
out
pop
int
lahf
shr
hlt
jno
lea
imul
sbb
or
jb
push
and
lret
call
fcoms
jne
jne
pop
or
arpl
scas
adc
enter
dec
pop
les
mov
pusha
pop
je
sub
mov
fistps
pop
pop
mulb
or
xor
stos
popf
insb
outsl
daa
sub
inc
and
jge
stos
sahf
enter
sbb
push
adc
ficoml
sub
jae
xchg
cmp
cmpsl
insl
lea
xchg
jg
mov
ret
jno
call
idiv
push
push
fadds
push
fdivs
pop
loope
je
mov
inc
aaa
push
push
dec
addr16
out
fnstcw
shr
pop
in
push
or
push
dec
cwtl
push
ret
push
inc
stc
lcall
popf
clc
out
stc
jg
and
fnstcw
cmp
xor
int3
jl
out
lds
nop
mov
xchg
dec
clc
std
ja
mov
scas
mov
cmp
adc
out
ss
outsl
sbb
test
mov
iret
mov
or
in
cld
rcl
dec
das
fildl
jae
push
out
stc
rclb
je
movsb
pop
stc
inc
push
fnstcw
js
push
mov
mov
int
gs
shrl
mov
aas
daa
pop
pop
and
ss
pop
bnd
shrb
or
jb
adc
cltd
jno
lods
outsb
sub
push
xor
mov
idivl
shlb
bound
lret
cmp
mov
pop
in
lods
push
rclb
mov
jecxz
cmpb
outsl
pop
xchg
pop
cmp
xlat
xor
push
fwait
daa
cmc
push
cwtl
push
inc
dec
mov
mov
ss
out
pop
roll
cmp
idiv
scas
push
aad
cmp
add
sbb
xchg
pushf
jns
scas
movsb
loop
push
cmp
and
mov
shrl
sbb
dec
movsb
xchg
xchg
xor
incb
adc
adc
mov
jnp
leave
pop
ret
ret
call
jle
daa
flds
cmp
jne
dec
andl
std
in
xor
add
dec
jmp
jmp
mov
shrb
mov
frstor
mov
xorl
call
mov
cmp
mov
cmpsl
inc
insb
dec
add
ja
lahf
daa
jb
add
mov
test
or
xchg
fwait
cmp
mov
dec
mov
add
jmp
cld
gs
mov
ret
push
clc
and
mov
stc
out
mov
loopne
push
xor
icebp
add
insl
jns
sub
push
sbb
mov
pop
push
sti
aad
das
bound
imul
fcomp
or
push
das
fwait
inc
in
mov
adc
call
sbb
jl
adc
mov
sub
loop
xchg
jnp
inc
adc
sbb
push
mov
sbbb
xor
pop
and
pusha
push
xchg
mov
popf
repnz
popa
cmpsl
jns
jne
cld
adc
mov
xchg
int
scas
xchg
dec
mov
or
and
mull
out
das
loope
mov
inc
fbstp
pop
dec
xlat
jmp
cmp
mov
mov
or
lods
mov
push
aad
out
lcall
mov
test
pop
mov
popf
loopne
aad
shll
shl
jbe
pop
cmc
popa
aas
or
inc
loop
movl
sbb
sbb
and
je
pop
ljmp
add
mov
sarl
lcall
dec
xchg
mov
imul
and
into
je
loope
mov
pop
scas
ror
subl
cmc
enter
shll
daa
cs
int
dec
loop
inc
add
je
movsl
inc
loop
nop
xor
stc
add
jnp
outsl
mov
into
mov
movsb
xchg
pop
out
xchg
ljmp
aas
lret
sbb
pop
in
in
je
popf
mov
aaa
into
out
push
cwtl
inc
dec
arpl
imul
sahf
repz
jns
and
mov
cld
mov
sbb
inc
shlb
jl
insl
dec
fiaddl
xchg
outsb
sub
enter
add
out
mov
cmp
xor
aaa
lods
push
pcmpeqw
cld
insb
push
mov
mov
xor
mov
and
mov
scas
mov
adc
push
jp
jl
sbbb
lret
out
xor
fimuls
jae
or
jb
loop
mov
sbb
lcall
xchg
sub
pop
inc
adc
adc
int
dec
scas
add
lea
aas
call
adc
pop
sbb
add
and
jb
je
push
pop
jmp
pop
int
out
xchg
xor
pop
or
pop
jmp
gs
push
jo
cmc
ds
adc
xor
mov
inc
cli
popf
xchg
dec
add
out
push
fsubrl
shll
push
pop
mov
mov
mov
fs
jle
pop
testb
mov
push
xchg
jle
inc
jmp
jge
pushf
and
sub
fsubr
sarl
iret
push
int3
sub
xchg
cs
cmp
or
nop
cld
xchg
xchg
loope
mov
add
jmp
addr16
clc
ds
out
lock
out
add
repz
xchg
xchg
iret
pop
test
stos
mov
out
push
push
movsl
push
cmp
mov
sub
cmp
xor
ror
insb
mul
jmp
movsl
xchg
xchg
jecxz
jle
xchg
scas
das
jb
orl
cmp
sub
dec
idivl
xor
fwait
cmp
mov
sub
cmpl
sub
add
mov
test
xchg
cmpsl
sbb
aam
add
popa
pop
mov
xor
xor
inc
sub
jno
inc
lock
mov
sbb
mov
add
rcrl
xchg
or
or
jp
pop
jg
iret
fisubs
gs
push
lds
and
test
mov
or
pushf
cmp
adc
push
xchg
add
fildl
inc
or
int
push
sbb
dec
sbb
jmp
es
mov
out
pushf
mov
xor
dec
rclb
pop
push
mov
jne
ja
js
sub
lock
idivb
xor
xor
loope
aad
scas
dec
insl
insl
mov
imul
add
and
out
dec
dec
jns
dec
pop
mov
adc
pop
in
jmp
adc
lock
dec
rorl
xchg
pop
push
pop
into
fldl2e
in
hlt
pop
outsl
dec
lods
mov
jmp
adc
or
mul
leave
outsl
mov
lea
js
les
clc
or
add
or
loope
gs
and
push
and
push
imul
or
xor
ja
adc
mov
jns
subb
cmp
add
aas
jl
xor
jb
fwait
mov
pop
lock
push
mov
pop
fbstp
ret
cmpsl
jbe
xor
adc
dec
jle
loopne
sbb
sarb
xor
in
and
mov
pop
sahf
jbe
ljmp
xchg
icebp
mov
xor
mov
call
adc
gs
lar
in
sahf
lcall
push
in
xor
dec
addb
stos
inc
inc
test
fsubs
push
adc
pop
sub
dec
or
sbb
push
mov
mov
in
push
jle
push
jecxz
jg
mov
repnz
ja
ds
dec
clc
addb
push
xchg
and
dec
mov
lods
popa
mov
test
daa
aam
xlat
lods
and
pop
xchg
mov
dec
mov
and
and
icebp
xor
or
test
mov
mov
lcall
test
loopne
mov
in
enter
mov
test
daa
add
mov
dec
sbb
ljmp
sahf
cwtl
lret
into
shlb
js
mov
loope
push
push
cld
mov
cmp
ret
out
pop
jb
stos
fisubs
and
pop
push
aam
mov
add
leave
es
pop
jmp
ret
outsl
xchg
xor
add
int3
sbb
pop
ds
in
pop
leave
push
adc
repz
out
jle
sbb
mov
outsb
call
cmp
sar
pop
leave
mov
scas
mov
jmp
mov
mov
int
mov
xor
jns,pn
and
fidivl
scas
xchg
cmp
inc
lds
or
adc
adc
inc
xchg
xchg
push
ja
push
jno
cwtl
das
sahf
jmp
xchg
imul
daa
stos
xlat
into
pop
test
dec
fxch
xor
sti
and
xchg
mov
xchg
pop
repnz
addb
lahf
mov
cmc
es
arpl
mov
jmp
xchg
into
dec
xor
ds
ds
inc
leave
out
mov
andl
js
cmovs
xchg
mov
fmull
mov
push
adc
push
fistl
push
clc
dec
in
sub
inc
jno
cmp
popf
fsub
push
sbb
or
in
movsl
sub
push
clc
arpl
fwait
outsb
or
cwtl
ret
sub
push
xchg
or
loopne
and
dec
fsts
mov
or
add
aad
mov
cmpsb
dec
fidivrs
mov
dec
in
dec
leave
frstor
stos
cmp
cmp
jmp
xor
cmp
out
mov
sbb
mov
rolb
pop
loopne
mov
mov
repz
mov
mov
popf
cwtl
jns
daa
ja
cmp
gs
jg
lock
jb
push
gs
lods
mov
cmp
cmc
and
sub
adc
scas
pop
mov
xchg
les
mov
mov
add
movl
lret
mov
mov
clc
inc
cli
mov
imul
mov
fstpt
les
push
xchg
pop
push
repnz
adc
mov
cli
xor
sub
mov
je
data16
lods
mov
inc
shrb
sub
push
inc
sahf
xchg
movsb
ret
add
out
mov
repz
jnp
iret
mov
push
pop
daa
fistl
cmp
mov
mov
les
xchg
cmpsb
and
fsubs
aas
mov
push
cltd
repnz
out
int
test
insl
jle
jnp
pushw
dec
sahf
dec
gs
add
adc
aam
out
mov
fstpt
pop
shrl
xor
push
sub
fisubrl
xor
inc
andl
mov
scas
push
out
daa
mov
mov
fstpt
mov
adc
js
mov
dec
outsb
scas
arpl
icebp
pop
adc
scas
push
pop
push
cmc
gs
mov
sub
add
mov
mov
cmp
pop
jnp
jg
aam
ret
lods
mov
clc
pop
outsl
shll
push
add
outsl
int
in
jmp
hlt
xchg
xor
mov
popf
and
or
je
adcl
mov
push
js
or
lahf
xor
push
mov
cmpsl
sbb
or
inc
outsl
into
stc
cmp
and
sub
in
shlb
mov
push
pop
jmp
cmp
or
cmp
loope
push
add
cmp
stos
pop
sub
call
nop
cmp
jb
movsl
pop
adc
dec
sub
ret
push
lods
and
inc
pop
aad
cmp
pop
scas
ljmp
bound
lret
add
and
popf
mov
pop
scas
push
aam
test
and
jne
mov
sub
stos
lret
bound
adc
and
cmc
imul
std
sub
mov
xchg
and
daa
push
fcmovbe
addr16
jmp
test
pushf
sub
imul
jmp
push
notl
out
dec
loope
pop
adc
imul
mov
in
add
dec
and
push
das
ja
test
es
sub
jno
or
mov
pop
inc
push
xchg
data16
add
enter
aas
mov
sbb
loop
adc
popa
out
sub
pop
cld
jle
js
jl
in
mov
jns
mov
dec
notb
out
loopne
js
std
ds
jbe
mov
movsb
jmp
mov
popf
sbb
in
inc
and
xchg
xchg
mov
xor
and
mulb
shll
mov
out
jp
mov
int
ret
push
hlt
dec
hlt
inc
inc
sbb
pop
test
fwait
xor
mov
stos
xlat
push
mov
push
clc
fbstp
lock
jbe
ret
dec
lods
into
pusha
xchg
scas
test
pop
and
and
push
pop
mov
ljmp
mov
out
leave
xor
fcmovu
jmp
and
push
jo
enter
loopne
ret
pop
fsubs
aaa
xchg
aas
add
lock
out
dec
xor
rclb
lret
mov
mov
frstor
jg
jnp
insb
cmovs
hlt
popf
sbb
add
pushf
sub
out
pop
test
int
out
shll
xlat
mov
xor
loope
lods
out
movsb
in
cmp
cmp
test
dec
dec
sub
push
xorb
insb
movsb
pop
xchg
in
mov
adc
jmp
push
add
aad
loopne
in
xor
or
adcb
xchg
push
or
mov
cwtl
sbb
test
xor
jne
rclb
out
push
in
repz
inc
cltd
sub
scas
pop
sbb
sbb
mov
subb
mov
cmpsb
in
and
push
push
notb
mov
repnz
and
shll
sbb
rolb
xchg
mov
sbb
xchg
push
mov
cmc
hlt
cltd
stos
mov
mov
and
mov
aam
push
pop
es
insb
jle
lock
and
and
shll
jl
std
and
inc
mov
or
mov
mov
aam
loope
push
fiadds
dec
cld
xor
inc
test
cmpsb
out
dec
ret
push
and
sti
int
fimuls
adc
dec
adc
push
xor
adc
mov
dec
fs
mov
sub
repz
adc
mov
mov
or
push
mov
test
mov
aad
dec
into
fdivr
ss
mov
loopne
mov
adc
pop
xchg
inc
cltd
aam
jmp
cwtl
mov
loopne
sbb
cmp
test
outsl
jecxz
addr16
xchg
ljmp
insb
inc
ret
out
dec
es
cmpsl
movsl
stos
jb
dec
and
jecxz
add
dec
sti
cmp
jne
cwtl
stos
jb
cmp
dec
fimuls
push
cltd
aad
cmp
or
movsb
mov
cmp
fstpl
fcompl
mov
hlt
aad
out
jp
inc
or
pop
lahf
and
xchg
push
into
pusha
out
test
xlat
mov
dec
movsb
xchg
loopne
pop
test
cmp
jmp
aad
mov
xchg
dec
aaa
push
and
lods
in
add
inc
test
dec
shl
adc
xor
les
mov
insl
push
mov
cmp
inc
es
popa
inc
adc
jns
xorl
ljmp
lods
call
loopne
push
cmp
in
jno
js
imul
fstp
fprem
xchg
aad
test
mov
pop
out
xor
and
sub
std
or
insl
fistpl
inc
pop
sarl
fst
and
push
inc
or
pusha
cltd
out
sti
pop
xchg
jbe
in
rcrb
or
push
sbb
push
sub
orl
js,pt
mov
jmp
fs
pop
stos
test
add
imulb
pusha
mov
or
inc
mov
iret
ss
xchg
mov
les
shl
scas
pop
sbb
dec
icebp
mov
fisubrl
lahf
and
sti
pop
mov
push
and
adc
push
add
pop
inc
or
jp
sub
sbb
inc
stos
lahf
cmp
std
jmp
jge
push
data16
outsb
mov
movaps
mov
cmp
xchg
cmpsl
aam
mov
cs
or
in
dec
and
dec
mov
xchg
or
sbb
push
jbe
add
and
outsb
sub
imul
ret
sub
jecxz
mov
dec
jno
in
lcall
popf
push
insb
lods
aaa
fisubrl
jb
pop
xchg
imul
push
jae
and
or
inc
sub
sbb
cmpsl
push
fdivr
leave
repnz
xchg
dec
or
fidivl
ds
js
jno
adc
sub
cld
or
or
adc
test
movsl
sahf
sbb
movsl
push
jmp
cmp
inc
scas
inc
xchg
repnz
pop
stos
test
lods
sbb
loopne
ss
cmc
int3
bound
sbb
sbb
cmpsl
and
test
push
dec
aad
arpl
insl
fs
xchg
pop
or
push
jne
cwtl
enter
ss
adc
lods
add
in
add
ss
or
adcl
pop
lds
or
imul
or
cltd
imul
aam
mov
jecxz
stos
dec
jo
mov
out
testb
pcmpeqd
pop
pop
add
movsl
xor
es
scas
dec
xor
mov
add
aas
inc
shrl
dec
pop
into
ret
sarl
fwait
sbb
sbb
and
flds
jnp
repz
out
dec
gs
xor
loope
call
cmpsl
mov
sbb
cs
push
imul
sarb
pop
inc
xchg
inc
xchg
sti
test
fdivs
int3
out
mov
mov
in
jo
mov
ret
imul
daa
mov
mov
out
scas
jle
or
add
xchg
xorb
das
shrl
popa
xlat
or
mov
stc
in
mov
sub
or
pushf
fdivr
inc
sub
push
push
push
lret
ror
outsb
loopne
pop
mov
fstpt
adc
jne
aaa
dec
sahf
xor
inc
add
pop
inc
add
xchg
cmp
xchg
or
mov
xchg
xor
sbb
divl
out
enter
lcall
aam
mov
pop
push
jnp
mov
xor
mov
lret
mov
xchg
lahf
fdivs
push
clc
sti
pop
jle
mov
jle
rorb
ficoms
adc
sbb
jb
cwtl
lret
pop
leave
inc
xchg
jne
push
int
cmp
das
inc
cmc
leave
or
mov
ds
loope
add
fwait
or
mov
cld
lock
push
add
mov
xor
mov
mov
inc
sti
out
movb
cmpsb
push
inc
cmp
es
aad
ret
cmp
jne
mov
adc
push
sti
scas
stos
lds
add
sub
ljmp
adc
test
push
dec
mov
int
mov
dec
push
sbb
sbb
pushf
rolw
push
dec
cwtl
icebp
or
dec
arpl
jb
pop
shl
mov
dec
add
cli
xchg
stos
xorl
push
adc
jp
sarb
lds
jmp
ret
fptan
cmp
sub
cmpsl
iret
js
cli
out
sbb
jecxz
xor
nop
mov
in
shrl
cmp
mov
shrl
int
push
push
out
pusha
push
or
mov
jae
mov
mov
and
pushf
jle
sbb
jmp
cltd
inc
mov
mov
add
sub
out
pop
push
sbb
add
icebp
xlat
into
inc
xor
and
adc
pop
addr16
and
les
jmp
ja
jb
lret
push
pop
mov
jecxz
daa
sbbb
sbb
orb
mov
jmp
lds
in
ret
inc
inc
jmp
pushf
xor
push
sub
add
push
xchg
icebp
insl
inc
push
sbb
jl
push
push
mov
ror
cs
or
dec
insb
jbe
xor
clc
fildl
cmpl
and
add
filds
jbe
or
sbb
xchg
or
push
and
sti
mov
dec
inc
dec
dec
fstpl
inc
and
insl
push
xchg
sbb
in
call
or
into
add
insb
cwtl
add
icebp
jg
or
or
push
lret
jp
fwait
pop
ds
sahf
pushf
cmp
fwait
jb
jecxz
mov
sbb
mov
scas
mov
cmp
pusha
mov
test
mov
jnp
lret
ss
adc
inc
setno
lahf
jns
xor
xchg
hlt
sbb
and
pop
call
jle
nop
shl
repz
loope
rcrb
mov
or
pop
cmp
xchg
mov
add
fcoml
test
out
jp
xchg
shl
bound
sbb
mov
stc
xlat
jge
adc
rorb
mov
inc
aas
jp
test
repnz
push
cltd
sub
push
mov
xchg
push
fs
push
push
lods
and
push
fbld
xlat
pop
es
mov
iret
sbb
cwtl
iret
test
lret
jb
xchg
jo
in
pop
aas
mov
sbb
jp
repnz
repz
cmp
sub
cli
fstpt
mov
movsb
adc
mov
mov
xchg
loop
inc
orl
sbb
and
sbb
pop
rcl
shrb
sub
mov
xor
adc
fsubrs
jl
test
or
pop
rorb
adc
std
cmp
inc
adc
lea
mov
sbb
jbe
in
mov
jb
enter
cmp
inc
push
out
xor
mov
aam
xchg
xchg
ds
leave
addl
push
jns
jle
call
cmp
and
mov
subl
into
or
push
sbb
push
hlt
mov
mov
mov
xchg
jnp
push
test
les
aaa
loop
into
lret
mov
push
dec
add
shll
int3
lahf
or
mov
insl
stos
mov
dec
or
sbb
hlt
mov
loop
jle
sub
fisubrl
ja
arpl
inc
mov
jae
and
in
gs
mov
stos
xchg
add
test
cltd
or
mov
data16
pop
mov
dec
imul
pop
dec
mov
pop
add
push
push
pop
jno
cli
scas
das
movsb
add
jno
mov
dec
out
test
ficomps
mov
cmp
sub
test
arpl
mov
mov
xchg
xor
mov
and
mov
xor
cmp
jp
cmpsl
sub
pushf
test
hlt
lds
insb
sbb
loopne
pop
cmp
inc
mov
sub
dec
nop
dec
pop
sub
push
pop
xchg
mov
scas
add
mov
std
fs
pop
cwtl
shl
and
insb
mov
sbb
out
jbe
xor
xor
outsb
movb
add
inc
aas
push
add
aas
adc
adc
mov
repz
xchg
dec
mov
push
cmp
out
push
cmp
fstpl
inc
stos
sub
xchg
xchg
cmp
pop
and
push
sahf
xchg
mov
cmpb
std
adc
ret
mov
sub
and
loope
dec
push
testb
lcall
cmc
jg
mov
cmp
mov
add
adc
mov
lods
shlb
xchg
cmpxchg
into
add
dec
into
mov
sub
and
movsb
or
mov
cwtl
lret
test
dec
add
push
sbb
outsb
movsl
pop
push
adc
or
pusha
in
negl
out
mov
int
mov
inc
rol
add
or
push
iret
popf
mov
sub
jno
loope
fcompl
mov
jmp
xchg
pop
mov
pop
adc
adc
fiadds
popa
cwtl
xorb
mov
cmp
lods
mov
aas
pop
call
in
push
ds
inc
jno
xchg
adc
out
pop
and
lock
std
dec
loop
lahf
orb
mov
and
shlb
xchg
rorb
pop
test
xchg
sbb
push
inc
sarl
in
sar
jle
add
sbb
in
cmp
mov
test
lods
add
mov
mov
jo
and
movsb
xor
adc
cld
sub
ds
pop
mov
jb
stos
pop
movsl
inc
jno
sarl
or
leave
mov
lret
sarl
dec
out
jle
push
xchg
movsl
loop
cmpsl
enter
inc
pop
outsl
sbb
std
push
adc
sub
dec
das
jl
adcb
xchg
test
inc
mov
add
jne
lcall
sbb
fdivs
imul
xor
xchg
mov
in
or
popa
sahf
data16
jae
fidivl
flds
pop
fs
clc
mov
or
pushf
inc
xchg
cmpsb
push
dec
adc
mov
lret
mov
mov
aad
lds
in
push
cmc
push
clc
adc
cmpsl
nop
pop
js
lds
sub
into
test
mov
jb
shrl
jl
or
inc
scas
push
mov
call
dec
subl
push
adc
shll
sub
repz
pop
push
add
push
pushf
and
fsub
sbb
mov
aam
sahf
or
xor
test
and
adc
popf
stos
mov
mov
and
test
pop
popl
test
mov
andb
popa
test
cmp
or
and
jl
sbb
rorl
mov
rcrb
test
leave
sub
movsb
mov
loope
orl
ror
xor
sbb
xor
mov
mov
and
scas
inc
fwait
push
popf
aam
cmc
ret
push
jp
mov
lcall
lock
mov
fmul
inc
sub
fistps
sub
loope
movsl
sti
mov
mov
push
jmp
orb
incl
fdivl
cmc
data16
xor
aad
dec
dec
cmp
dec
fdivs
sbb
fisttpll
popf
dec
call
in
pop
lret
push
dec
fs
mov
cmp
push
jae
and
mov
xor
mov
pop
cltd
inc
enter
cmp
mov
or
shrl
out
sbb
cmp
in
ds
push
sbb
out
out
inc
xchg
int
shl
imul
jae
push
xor
adc
xchg
mov
mov
das
andl
and
push
pushf
adc
test
mov
mov
and
mov
and
shufps
lods
mov
dec
cmpsb
mov
pop
jns
gs
mov
and
scas
lea
clc
sbb
call
movsl
add
and
and
push
addr16
in
push
inc
stos
cmc
in
mov
mov
in
adc
int
subb
loop
pop
jecxz
pop
xor
adc
lock
inc
hlt
pop
push
stos
push
mov
inc
dec
inc
pop
xor
jle
stc
int3
pop
ss
and
out
cs
xor
xchg
fs
sbb
jmp
mov
fisubl
add
dec
and
stc
jp
les
cmpsl
cs
imul
or
or
mov
push
dec
int3
xor
ss
pop
cmp
jo
in
scas
rorb
mov
push
xchg
inc
icebp
lea
aas
test
jg
ja
xor
femms
adc
sbbb
out
xor
test
jmp
jg
test
pop
mov
ja
mov
popf
repz
int3
adcl
jg
gs
pop
popa
mov
push
daa
xchg
push
inc
clc
inc
mov
or
xchg
repz
ja
add
lds
pop
loop
and
pop
ljmp
xchg
lds
push
ljmp
test
inc
jne
cmpsb
sarb
push
lds
cs
and
inc
mov
xor
adc
or
xchg
add
mov
pop
sbb
jmp
js
jno
popf
push
dec
adc
mov
and
xchg
sub
arpl
xchg
push
or
fdivs
ror
popf
repz
sbb
and
mov
repz
scas
leave
jno
add
lods
in
fwait
lret
cmpb
dec
pop
fbld
sub
fdivl
gs
subb
les
arpl
lcall
pop
inc
enter
dec
mov
sub
xor
int3
ja
orb
movsb
aaa
sbb
dec
and
mov
loopne
mov
jns
fdivl
lods
leave
movsl
mov
call
xor
incl
inc
pusha
or
push
mov
addr16
es
mov
push
xor
inc
jnp
ret
sbb
push
sbb
insl
xchg
xor
arpl
sti
jne
pop
cmpsb
subl
mov
push
outsb
das
fisttps
adc
ds
insb
mov
cmp
test
leave
xor
rorb
fisubl
insl
mov
push
jge
mov
cltd
jmp
fisubl
bound
inc
dec
dec
xor
mov
mov
fsubrp
adc
or
adc
shlb
aaa
arpl
faddp
push
sti
jmp
leave
push
data16
fiadds
push
sub
lds
das
cwtl
push
sub
stos
or
sbbl
jge
and
push
mov
mov
or
test
cmp
mov
aas
ljmp
fistl
fdivs
mov
fdivs
notl
inc
not
add
xchg
lret
sbb
xor
xlat
cmp
pop
je
call
loop
mov
mov
outsl
shll
fdivr
adc
inc
push
popa
mov
ror
cmpsl
add
stc
push
lret
movsb
mov
fsubs
fdivp
in
daa
test
or
jg
xor
fbstp
ss
lret
psrlw
inc
sbb
out
ret
xchg
pop
or
push
movsl
ja
loop
pop
xlat
dec
mov
jno
das
sbb
sbb
push
stc
addl
mov
sub
rcrb
and
aas
inc
cmp
xchg
mov
inc
clc
cmp
sti
inc
andl
add
mov
xor
sub
dec
dec
fwait
in
and
mov
cmp
cmc
lahf
adc
xor
jle
pop
mov
push
ret
mov
lcall
push
and
add
push
sub
xor
inc
cmpsb
dec
dec
cmp
inc
lahf
movsb
subb
and
sbb
std
sti
repz
add
pop
imul
or
xchg
mov
imul
push
test
ret
pop
dec
mov
xchg
mov
cwtl
sbb
imul
int
ss
mov
jg
pmullw
push
cmp
js
lret
sti
jge
xchg
imul
outsb
inc
dec
hlt
sub
pop
xchg
push
push
xor
out
cmc
mov
mov
fidivs
data16
sti
aaa
in
out
xor
mov
js
or
fcompl
lods
mov
sbb
test
mov
mov
cmpsl
lcall
idiv
dec
xchg
mov
rcrb
into
stos
lea
sub
pusha
adc
mov
push
clc
sahf
in
mov
jnp
push
sti
aad
inc
int3
cmp
mov
int
sbb
xchg
xchg
incb
cmp
jno
sbb
shl
cwtl
and
cmp
xchg
in
iret
filds
repnz
dec
call
cmp
popa
loope
push
out
jg
shrb
jo
aad
mov
sub
in
idiv
data16
in
imul
fcom
cmp
aam
movsb
adc
mov
and
movsb
or
shlb
scas
pop
push
shrb
ja
mov
or
jecxz
out
mov
mov
mov
sub
jnp
pop
cmp
mov
dec
insl
or
aas
xor
shrb
loope
cmpsb
sbbb
xchg
ljmp
push
add
cmpsl
insl
test
jmp
jns
adc
add
mov
ret
dec
mov
jg
into
int3
sub
jne
mov
sbb
pop
les
or
ficoms
pop
test
xor
jne
xchg
lret
test
jp
in
nop
pop
inc
jl
mov
hlt
shrb
sbb
and
dec
cltd
mov
jnp
lods
out
pop
push
sbb
shll
scas
xchg
dec
clc
pop
ljmp
add
push
xor
add
add
mov
movsb
das
ror
test
daa
rorb
xor
ss
out
mov
je
int
jge
icebp
outsl
cmp
das
sub
test
and
lahf
mov
cli
jne,pt
mov
sbbl
mov
icebp
dec
jg
cmc
sub
or
mov
int3
and
push
stc
push
shlb
pop
imul
cmpsl
call
cwtl
adc
lahf
mov
aaa
cmp
das
jecxz
or
mov
sti
mov
jge
imul
inc
jecxz
xchg
add
mov
sub
mov
adc
adc
mov
mov
nop
pusha
and
lods
add
mov
dec
xchg
pop
inc
add
mov
out
xor
lret
mov
adc
xchg
adc
pop
loope
iret
daa
and
incb
popl
pop
and
mov
adc
int
es
sub
xchg
mov
test
aam
mov
shrb
mov
icebp
add
jmpw
stc
and
inc
jne
sbb
cmpsl
mov
xchg
stos
cltd
mov
lds
jl
cmpsb
bound
push
ds
adc
scas
ds
jg
dec
jmp
pop
sti
dec
pop
sbbl
mov
out
inc
aam
icebp
sub
rcrb
fwait
pop
dec
js
jno
push
in
dec
out
in
push
mov
movsb
adc
addr16
movsb
ljmp
lret
insl
jbe
mov
cmpsb
jp
xchg
call
int
lock
xor
arpl
subb
out
jle
sub
push
inc
sti
mov
daa
sub
or
push
or
les
insb
scas
jae
push
aas
loope
push
and
pop
loope
add
popl
cmp
mov
data16
pop
mov
jle
and
lods
push
and
pusha
fsubs
inc
popf
dec
icebp
stos
push
jecxz
hlt
or
inc
divb
xchg
call
int
leave
es
jge
adc
and
xlat
iret
je
notl
adc
add
enter
out
repnz
pop
test
push
cmp
insl
jmp
mov
inc
out
mov
dec
lock
faddl
hlt
add
cmp
lahf
add
into
xchg
sub
mov
xchg
out
insl
cs
inc
cmp
push
adc
js
ljmp
cmc
xor
xchg
cmp
jae
inc
nop
int
add
dec
mov
mov
ficoms
sbb
loope
or
inc
push
inc
push
inc
lret
in
push
pop
xor
and
cli
mov
shll
mov
sub
push
mov
jecxz
mov
pushf
sahf
repz
fcmovnbe
stos
add
imul
xor
adcl
loopne
daa
data16
dec
adc
jge
cli
jle
pop
inc
leave
rclb
push
out
dec
ds
jle
xchg
and
out
enter
and
test
cmpsl
dec
adc
dec
sbb
add
push
inc
mov
and
jo
fdivrp
xlat
test
out
mov
imul
pusha
xor
pop
push
jge
notl
fcompl
push
cmpl
jl
mov
fldt
xchg
xchg
lods
cmp
cmc
xchg
sub
cmp
fwait
inc
add
mov
ret
out
popf
dec
imul
movsl
enter
cmp
pop
fbstp
mov
loope
das
xchg
mov
mov
dec
xorb
out
cmc
pop
out
lret
adc
pop
push
mov
js
adc
mov
outsb
cld
jp
repz
adc
jo
xlat
testl
lods
mov
rol
mov
and
pop
inc
add
shrl
dec
xor
sub
call
test
ljmp
out
push
push
aad
push
arpl
movsb
js
jo
mov
mov
xchg
je,pt
cwtl
or
mov
out
mov
idiv
fidivl
insb
test
rorl
mov
mov
mov
pop
lret
sbb
fnstsw
push
pushf
imull
addr16
mov
xchg
addb
addb
mov
jno
pop
mov
cmp
mov
aaa
nop
and
loopne
iret
pop
mov
cmpsl
cli
jecxz
xor
dec
lods
xchg
dec
push
add
loope
mov
sbb
das
mov
fimuls
rcll
stc
movsb
mov
lods
repz
fisubl
fwait
mov
lods
in
lcall
jl
mov
insl
xchg
jo
jne
data16
push
mov
pop
lods
jns
test
pop
data16
mov
stc
xchg
pusha
mov
ja
daa
test
mov
jp
repz
pop
stos
cmp
inc
das
jg
xchg
shll
dec
aaa
xchg
sub
int
fcmove
shlb
repnz
dec
aad
fldt
imul
mov
loop
mov
push
push
add
test
repnz
out
sub
inc
cmp
adc
test
das
mov
or
add
outsb
and
aam
stc
rcrl
and
dec
adc
inc
inc
push
adc
xor
stos
push
fdivs
mov
popf
lea
ret
ljmp
dec
push
sub
test
jbe
push
ret
mov
mov
cltd
push
scas
mov
xor
out
inc
test
sbb
jnp
or
inc
push
jmp
jae
sbb
mov
leave
leave
pop
mov
shlb
and
test
lods
push
lcall
push
mov
into
or
sub
mov
ror
mov
lods
or
mov
cli
pop
cmp
stc
cmp
fsubr
out
sbb
into
sbb
mov
icebp
in
ret
pop
icebp
push
or
jmp
pop
notb
jg
inc
movl
pop
iret
push
push
aaa
subl
adc
fisubrl
das
inc
push
pop
jecxz
adc
pop
movsb
lret
rolb
enter
lahf
aad
out
scas
scas
mov
imul
out
xchg
sbb
por
test
cmp
cwtl
mov
out
xor
aad
push
jae
dec
stos
in
insb
shlb
leave
cli
xchg
ss
add
inc
dec
pop
lds
push
pop
out
or
movsl
jmpw
hlt
pop
jge
jge
stos
lods
inc
push
cli
in
scas
les
outsb
sub
movsb
sub
and
leave
cmc
mov
xlat
jno
outsl
dec
iret
add
push
jae
xchg
mov
push
push
insb
jbe
in
inc
aam
inc
fistps
fadds
cmp
and
stos
inc
fwait
mov
inc
cwtl
sbb
mov
push
ret
mov
loopne
xchg
push
andb
mov
and
cltd
hlt
es
cmpsl
lahf
pop
inc
nop
or
shll
fimuls
inc
push
decb
std
notb
in
test
sbb
movb
pop
repz
adc
outsb
test
inc
jp
test
cmp
aad
mov
xor
pop
xchg
jbe
cmp
shl
lret
addl
test
add
test
les
lds
mov
mov
subb
loope
push
jns
pop
xchg
test
aaa
push
push
jns
mov
or
push
dec
enter
xor
jae
fnsave
lret
jmp
or
and
cmp
mov
sub
mov
add
xor
xorb
xor
test
mov
mov
add
pop
mov
pop
decb
or
xchg
adc
rcll
lods
rol
mov
cmpsl
xchg
in
inc
add
fmull
mov
push
xchg
cmp
arpl
inc
jns
inc
adc
add
push
addr16
xchg
mov
add
ret
jmp
dec
scas
imul
in
ja
lds
movsl
jecxz
lret
rolb
adc
xor
push
iret
loope
push
adc
je
mov
lcall
cli
shll
and
punpcklbw
lods
inc
add
xor
insl
or
mov
push
cld
dec
orl
pop
fs
fsubr
cmp
imul
loop
push
es
pop
aam
pop
lret
dec
stos
fisubs
fstl
jo
rorl
ja
xor
jno
or
mov
aaa
add
pop
jle
pop
loopne
cmc
aas
pushf
jo
in
jg
cs
push
inc
xchg
cmp
je
fiaddl
gs
pop
leave
ds
sbb
push
repnz
mov
out
xlat
outsb
inc
sahf
cltd
scas
call
xor
std
enter
or
sbb
imul
fisttps
popf
aam
cld
and
dec
aas
cmp
jae
mov
xlat
xlat
and
pop
inc
ds
jns
pop
out
orl
cmp
fstpt
outsl
xor
mov
mov
outsl
push
pop
sub
xor
iret
mov
scas
popf
sbb
or
or
jecxz
jp
es
and
pushf
adc
es
jne
out
dec
sbb
sbb
mov
aam
mov
sub
push
loopne
mov
mov
jns
jne
mov
jmp
xor
je
mov
rorl
orl
and
mov
push
jmp
ret
cmpsl
inc
fldl
orl
pop
in
jne
sub
push
jl
pop
in
popa
mov
xor
jne
and
fsts
push
cltd
push
movsb
stos
dec
mov
dec
fisttpll
pop
bound
push
xor
jl
data16
sub
sub
fimuls
adc
jl
inc
mov
test
sarb
mov
or
loop
sbb
jge
jae
jae
and
rcrb
mov
sub
arpl
xchg
aaa
jno
dec
or
mov
dec
mov
jo
pop
inc
xor
jnp
xchg
icebp
aam
stos
dec
movsl
in
js
mov
arpl
sbb
mov
pop
jge
rcrb
or
xchg
sub
leave
push
jmp
stc
inc
mov
or
call
mov
arpl
cmc
cmpsl
mov
sub
xor
jecxz
jo
cmp
addr16
imul
dec
stos
and
aaa
int3
les
inc
ficomps
mov
loope
or
adc
push
inc
popa
and
adc
inc
xchg
xchg
xorl
call
adc
jae
movsb
fldt
adc
cld
lret
pop
dec
stc
mov
sahf
xor
ljmp
xchg
and
cmp
cwtl
xchg
data16
rcl
or
xor
jecxz
mov
fsubr
and
mov
cmp
div
pop
push
insb
xchg
mov
nop
das
xor
xorb
in
stos
adcl
out
jle
mov
das
dec
and
jge
inc
sahf
and
and
xor
pop
fisubs
imul
mov
inc
in
pop
push
jne
sti
sti
jge
jbe
jl
repnz
xchg
out
xor
pop
cltd
ja
xchg
mov
sub
int3
inc
mov
inc
int3
nop
fcmovb
adc
int
sub
jnp,pt
push
pop
test
hlt
test
cltd
inc
mov
sub
in
mov
rorb
mov
lahf
mov
nop
xchg
sub
jge
mov
das
add
pusha
loope
iret
adc
mov
pop
ret
loope
inc
lods
nop
test
popa
jle
adc
add
mov
mov
mov
out
fcmovbe
xchg
cmp
lea
imul
scas
push
inc
sbb
mov
clc
jbe
aad
nop
inc
dec
das
mov
loop
fstpl
mov
aas
out
push
mov
and
scas
adc
insb
dec
aas
hlt
mov
push
pop
je
test
addr16
pop
shrl
push
mov
xchg
icebp
sahf
and
ret
xchg
je
pop
push
bound
icebp
and
je
nop
cmp
shlb
cmp
jg
xor
pop
ljmp
inc
mov
cmpsl
cld
popa
jg
jne
push
cs
lret
and
out
jae
pop
sub
sbb
inc
test
xor
xor
aam
test
and
stos
pop
outsb
gs
mov
fs
ret
push
jecxz
fldt
in
jbe
or
inc
scas
or
mov
iret
xor
pop
jns
push
push
repz
mull
push
cmp
xchg
dec
scas
xchg
sbb
mov
rol
mov
ljmp
mov
cld
and
aaa
xchg
inc
rcr
fidivrl
lock
out
add
cltd
pop
jo
loop
test
icebp
push
mov
imul
sti
sub
push
test
mov
sarl
loop
fsub
adc
jo
inc
test
add
xorb
lcall
mov
lea
rcll
in
mov
fnstenv
mov
lret
aas
add
push
and
cmp
add
dec
rol
out
pop
jae
push
mov
clc
test
mov
and
sub
jae
or
imul
jmp
dec
repz
jns
xchg
aad
dec
cmp
and
mov
push
xchg
test
push
push
push
repz
push
jp
xchg
test
data16
in
jmp
popf
mov
jnp
ss
add
xchg
adc
ss
pop
sbb
inc
pushf
lock
mov
sahf
dec
into
sbb
cmc
push
ljmp
jns
jg
jnp
sub
pop
jl
outsb
push
gs
xchg
std
out
loopne
lods
sub
and
add
dec
xlat
fisubs
mov
jae
outsl
fcoml
jge
addr16
dec
inc
jle
mov
add
xchg
and
or
lods
data16
xchg
ja
cmp
repnz
sbb
adc
inc
xor
cmp
jg
lcall
sub
mulb
ljmp
sbb
jno
loope
shll
cmpsl
into
dec
pusha
lahf
ljmp
sar
data16
push
inc
repz
pushf
jns
scas
ss
sbb
mov
shll
out
das
lock
mov
mov
dec
test
cmp
dec
aaa
lock
adc
mov
sub
adc
or
lds
mov
nop
adc
ss
xchg
adc
push
testb
inc
pop
cmp
cmc
jmp
popa
lock
push
adc
je
sahf
pop
imul
push
push
add
xchg
shlb
scas
and
mov
ss
div
push
test
mov
jmp
sbb
xchg
aam
ret
pop
shll
and
das
add
icebp
mov
inc
cmp
test
push
rcll
add
or
andl
faddp
adc
xor
cmp
adc
dec
lret
cmpsb
pop
push
arpl
test
sub
dec
subb
xor
gs
shlb
lea
insb
pop
shrl
adc
xor
lea
repz
sub
adc
fnsave
fstpt
out
mov
stos
lock
add
xor
mov
inc
push
pop
mov
cld
mov
fmuls
iret
adc
mov
cmpsb
add
out
xor
mov
mov
rcrb
or
cs
icebp
test
test
or
seto
jne
or
popa
in
mov
popf
lods
push
cmpsb
enter
sbb
les
mov
in
call
shl
mov
jae
push
push
cmp
aas
popa
aaa
sub
or
clc
imul
std
mov
sub
fiadds
and
push
sbb
je
hlt
mov
fs
mov
iret
xchg
test
push
push
fsts
mov
xchg
aad
lret
add
dec
and
lret
mov
cmp
stos
sub
inc
repz
fwait
mov
xchg
inc
dec
fstpt
outsb
jno
mov
pop
fmuls
or
xchg
and
add
clc
mov
mov
repnz
xor
jg
and
dec
popf
scas
in
push
iret
les
mov
mov
dec
jns
ja
movsl
inc
leave
sbb
loop
out
in
call
scas
loopne
ds
ds
lods
push
mov
insb
lahf
sbb
xor
dec
push
mov
pop
push
stos
je
cmp
sarb
xor
je
stc
push
fucomip
add
repnz
cmp
mov
adc
dec
js
push
das
and
stos
cmp
in
fcmovne
mov
sub
jnp
stos
loop
push
pop
pushf
popf
push
sub
pop
addl
pushf
pop
ret
std
mov
mov
cmpsb
mov
sbb
or
mov
push
and
out
sub
cmp
pop
pusha
jae
xor
cmp
or
sub
sub
pop
sub
dec
push
xlat
pop
ds
dec
mov
or
and
int
xchg
inc
xchg
fstpl
gs
sbb
rcrl
pop
jnp
in
cmc
in
xor
sti
lret
xchg
xor
mov
sub
add
sbbl
flds
inc
add
xor
mov
orb
pop
sar
loopne
int
les
xor
lods
xor
imul
xchg
dec
xor
and
xor
fnstsw
dec
jae
sbb
inc
mov
xor
scas
dec
adc
out
mov
leave
out
push
ss
cli
test
hlt
ljmp
dec
mov
iret
sbb
rcrl
pop
dec
fnstsw
fs
addl
repnz
mov
sub
pop
mov
repnz
sbb
outsl
mov
fcomip
call
sbb
xchg
mov
dec
les
push
add
dec
inc
inc
lea
aaa
icebp
data16
push
lods
push
xchg
gs
xor
jmp
lret
xor
mov
adc
mov
xchg
pop
andb
xchg
xor
insb
repz
or
sbb
cmp
or
push
jp
aad
fisttpl
xor
inc
adc
jne
or
pop
movsb
cld
out
mov
dec
call
adc
xchg
pop
jno
inc
subb
fwait
dec
mov
push
mov
lahf
jp
jle
int
nop
ss
cmc
xchg
mov
nop
inc
xor
lods
je
pop
cmp
les
sub
pop
insl
jnp
frstor
pop
dec
pop
test
sbb
aam
adc
pop
std
mov
jno
xor
cld
xor
or
xchg
sbb
adc
out
mov
out
mov
imul
fldenv
adc
sub
push
pop
jns
add
pmulhuw
jl
adc
cmp
push
add
out
fisubl
xchg
sarl
add
popa
aaa
ljmp
add
test
loopne
cs
popa
cmp
and
mov
lods
mov
repnz
dec
popf
mov
pop
dec
movsb
inc
mov
xchg
xor
mov
and
cld
out
pop
mov
xor
sahf
jg
inc
add
mov
dec
cli
mov
lods
xor
sti
pusha
inc
mov
jno
mov
push
add
xor
mov
inc
sub
pop
rcl
xchg
fimull
imul
sbb
sub
pop
test
lahf
push
jg
cmc
fwait
dec
insb
ds
bound
cs
std
movd
inc
cld
dec
bnd
xor
out
setl
test
je
mov
push
stos
mov
xor
std
adc
cmpsl
ljmp
sbb
aad
sti
xchg
push
mov
mov
sbb
in
cmp
pop
stos
aam
movb
notb
es
adc
mov
out
xchg
into
arpl
pop
or
mov
lods
cmp
or
dec
xor
fisubrl
pop
or
pop
in
jo
int
jae
xor
xchg
push
xchg
push
ret
xchg
aam
jg
mov
cmp
jmp
mov
stos
cwtl
and
xchg
faddl
xor
and
cmp
sbb
clc
enter
xlat
and
loopne
ds
add
sbb
jns
mov
mov
test
aaa
lds
and
sbb
sbb
mov
sub
mov
adc
push
pop
push
xor
and
in
andb
sbbb
mov
lcall
dec
pop
lods
adc
mov
addl
daa
and
mov
jp
jmp
out
loop
daa
mov
dec
and
movsb
scas
icebp
fprem
cli
push
sbb
test
cmp
inc
dec
pop
lea
outsb
movsl
scas
int3
leave
dec
push
add
adc
mov
lods
xchg
fsubl
inc
push
bnd
dec
xchg
xchg
xchg
sbb
add
out
pop
add
lock
movsl
fsubrl
cmp
ficoms
add
addr16
aad
xchg
leave
int
daa
outsl
sub
lret
xchg
or
imul
mov
jo
pop
lret
cmpsb
fbstp
les
lds
leave
in
cwtl
jg
push
xchg
push
add
xor
lahf
bnd
dec
loope
loope
je
rcrl
repnz
std
jge
push
lret
insl
loop
in
popa
cmpb
lcall
lock
sbb
subps
jo
pop
out
sbb
cmp
mov
or
test
out
lcall
jl
int3
clc
xor
stc
sahf
iret
fs
dec
push
pop
aad
pop
fcomp
xor
sbb
fistps
push
or
mov
das
mov
inc
negl
test
and
jmp
sbb
fsubrp
inc
mov
mov
fists
daa
and
dec
imul
loope
cmp
ljmp
xor
pop
lcall
stos
mov
out
ret
test
and
icebp
inc
jo
mul
xor
ja
add
adc
rcrb
cmpl
sbb
sbb
jae
xchg
out
dec
push
xlat
adc
and
loope
push
inc
loop
fmulp
and
test
or
xor
mov
and
pop
repnz
mov
add
je
mov
and
or
pop
mov
mov
push
popa
mov
jecxz
leave
call
lret
lahf
add
aad
leave
fiadds
out
jp
cmp
and
push
cwtl
test
fwait
outsb
xchg
test
ds
js
inc
xor
push
push
mov
xchg
ja
mov
mov
aad
out
dec
lahf
jnp
mov
or
fistl
js
sub
out
push
movsl
and
dec
fcompl
xor
push
cmp
or
pushf
pavgw
dec
sbb
jge
adc
out
lret
inc
xchg
insb
das
movsl
stos
dec
mov
push
imul
xor
out
push
xchg
movsb
xor
or
xchg
outsl
and
fs
xchg
cmp
xor
testl
push
xor
jmp
pop
cltd
jp
push
push
mov
cmc
jb
ror
push
add
mov
sbbb
lahf
ds
jmp
sub
sarb
or
dec
pop
sub
jmp
adc
adc
sbb
add
push
and
fs
sbb
pop
daa
inc
pop
pop
fcmovnu
aaa
pop
aas
sti
pushf
rcl
cmpsb
xchg
jl
paddw
lahf
fwait
cltd
out
pop
pop
cmpsb
ljmp
stc
inc
mov
mov
push
xor
loopne
fildl
mov
imul
sub
clc
cwtl
hlt
call
add
or
das
es
adc
pop
cmp
push
sti
push
dec
out
pop
jnp
xchg
lret
mov
pop
dec
sar
sub
lea
int
and
popa
cmp
mov
xor
fsts
andl
sub
push
adc
mov
daa
dec
jae
xchg
cwtl
dec
dec
daa
cmp
pop
xchg
cld
dec
sahf
popf
int3
ss
js,pn
loopne
movsb
insl
or
std
jg
sbb
int
cmc
add
aam
sbb
subb
je
pop
inc
mov
mov
mov
pushf
call
add
out
aaa
cmc
sub
lcall
js
rclb
loop
data16
jns
jno
iret
mov
xchg
jg
and
push
xchg
push
out
lahf
iret
adc
adc
lcall
or
jb
cmp
mov
push
inc
and
cmp
sahf
add
push
cmpsl
sub
pop
aaa
xchg
sub
xor
sbb
xchg
test
cmp
cmpsl
fmull
push
cltd
and
inc
jne
lahf
sbb
add
dec
mov
inc
push
test
test
xor
or
scas
movhps
in
fcmovnb
mov
lock
daa
and
xchg
xchg
dec
push
addr16
mov
shlb
fidivl
out
mov
gs
popa
add
add
lods
mov
xchg
sahf
lahf
pop
jns,pn
lret
inc
inc
insb
mov
mov
push
or
jle
dec
cmp
daa
aas
push
xchg
add
mov
jbe
loop
jno
test
mov
sbbl
sub
daa
xchg
rorb
shl
aas
ret
adc
mov
pop
mov
dec
mov
std
mov
jbe
shlb
std
sub
ja
push
nop
xchg
dec
push
mov
and
xchg
movsl
pop
or
cmp
pop
cmp
js
push
and
mov
mov
in
push
xor
mov
pop
mov
dec
ror
imul
call
push
fsubs
call
pop
add
mov
fwait
ret
xor
lea
xchg
cmp
add
inc
imul
sahf
xchg
fs
push
movups
addb
add
dec
lcall
cwtl
mov
xor
adc
dec
lods
cmp
imul
jmp
out
popf
rcl
or
add
xor
clc
dec
sbb
outsl
xor
aam
movsb
mov
jb
add
int
shufps
xchg
mov
push
std
hlt
mov
pop
mov
repz
push
fs
inc
pop
mov
lcall
out
push
stos
jns
lock
mov
xchg
ljmp
int
and
loop
mov
xor
int
ljmp
sbb
jle
aad
loop
lock
outsl
iret
xlat
push
aaa
stos
xchg
inc
and
int
xchg
rolb
adc
leave
lea
add
sub
adc
popa
pop
inc
mov
add
int
sub
outsl
xchg
xchg
mov
dec
int3
sub
xor
sub
sbb
adc
and
lcall
sbb
sub
ret
mov
mov
mov
xchg
add
adc
push
in
vunpcklpd
sub
aam
jo
push
mov
cs
test
jne
lock
push
ja
mov
or
decl
mov
jno
dec
xor
das
imul
xor
inc
test
inc
int3
push
or
out
xchg
pop
inc
sbb
imul
movsb
adc
jecxz
push
ljmp
mov
dec
sbb
add
cmpsb
sbb
xchg
out
mov
mov
nop
push
jb
jle
or
push
es
sbb
enter
mov
jb
cmp
pusha
mov
sbb
insl
stos
outsl
cmp
pop
mov
data16
mov
scas
ss
push
adc
test
mull
popa
addr16
xchg
pop
ja
stos
or
dec
xchg
or
test
scas
mov
jne
sarl
ss
popa
inc
addl
repnz
outsl
lret
ret
movl
negl
aas
arpl
stc
xor
std
repnz
test
mov
pop
pop
rorl
dec
push
and
mov
push
insb
or
test
push
mov
test
subl
jo
push
xchg
and
repnz
lea
jmp
loop
xchg
mov
psubq
rorb
mov
icebp
add
pop
xor
ja
mov
stc
loope
imul
cmp
loope
mov
sub
loop
inc
jle
cmp
subb
push
jmp
divb
and
pop
mov
mov
aam
outsb
mov
les
and
mov
stos
les
dec
fldt
enter
push
enter
jg
popa
mov
pop
xchg
rcll
or
pop
mov
push
clc
jmp
test
jno
loop
jg
lar
call
xor
mov
imul
cld
sti
aas
ss
adcl
or
lahf
pand
sub
add
jno
jnp
mov
leave
mov
adc
imul
jns
es
mov
push
fldt
not
ljmp
sti
add
xchg
adc
fwait
mov
mov
jo
nop
inc
jo
mov
es
push
push
in
subb
jno
shlb
jmp
pop
cmp
insb
dec
sbbl
inc
notl
push
or
jmp
mov
jp
jae
xor
ljmp
xchg
jle
xchg
ret
in
xchg
pusha
loope
push
outsl
loopne
sbb
mov
mov
inc
push
sbb
sbb
pop
jle
out
nop
cli
leave
div
movsl
sbb
andl
xchg
fimull
loope
pusha
adc
cltd
and
js
or
and
subl
aad
mov
jmp
sub
enter
add
xchg
outsb
sbb
js
lods
mov
test
loopne
call
mov
dec
cmp
cmp
notb
adc
sbb
jge
or
test
dec
mov
xor
lds
dec
mov
inc
xchg
mov
sbb
nop
cmpsl
popa
cli
push
and
or
xchg
push
or
outsl
add
pop
push
ja
jl
inc
ret
and
mov
dec
leave
inc
cmpsb
out
scas
sub
mov
ficompl
add
cmp
sti
sar
mov
enter
lds
or
xchg
mov
ret
repz
dec
mov
stos
mov
stc
or
xor
lods
cmpsl
mov
mov
adc
es
cmp
push
test
shr
mov
popf
dec
xchg
adc
int
int3
push
lcall
dec
fbstp
jbe
clc
xchg
mov
les
icebp
pmaxsw
or
lea
mov
test
sub
jp
or
push
xchg
enter
out
push
call
dec
hlt
cld
std
test
lret
push
adc
push
pop
shll
xchg
cmc
cmp
cmpsb
mov
adc
shrb
out
jp
sbb
dec
inc
hlt
inc
sub
stos
mov
jp
adc
test
inc
mov
stos
push
or
jecxz
jb
sub
jno
jp
test
push
mov
pop
add
mov
push
lea
lea
sarl
aaa
cmpl
into
or
xor
fdivr
cmp
push
dec
pop
loopne
std
jle
and
add
scas
lods
mov
movsl
pushf
xchg
fcom
sbbb
or
outsb
lcall
dec
pop
cmp
adc
push
jbe
fwait
lret
cmp
cwtl
lret
aad
filds
fwait
xor
xor
jge
jg
cmp
movb
shlb
inc
jmp
lods
inc
movsb
adc
mov
scas
push
push
push
pop
pop
shll
gs
xchg
imul
ficompl
cmp
outsb
rcl
dec
mov
cs
mov
fcompl
fsts
icebp
jge
ret
cld
pop
mov
out
aad
and
repz
jg
xor
int3
jo
dec
je
stos
xchg
push
mov
pop
mov
test
js
mov
out
dec
dec
inc
mov
pop
dec
dec
mov
jb
nop
imul
sub
xor
mov
movsl
jl
ret
jmp
jg
xor
sahf
cwtl
adc
jbe
xor
ds
jnp
arpl
xchg
dec
cmp
pop
aad
pop
dec
lea
aad
and
xchg
cmpsb
outsb
mov
lea
jbe
xor
mov
es
mov
lods
das
das
insl
pusha
loope
rcrb
lds
aas
push
push
aas
std
aas
fdivl
shr
adc
rcr
pusha
cmp
add
bound
rolb
cmp
icebp
setb
or
idivb
fstpt
xor
cli
push
ljmp
in
movsl
add
mov
mov
push
sub
cld
push
outsb
mov
jp
adc
pushf
imull
mov
push
stos
leave
mov
ret
je
jg
aam
repnz
test
cmpsb
icebp
ficoml
add
orb
pop
call
pop
mov
je
lcall
sarb
cmp
clc
bound
jbe
sub
xlat
mov
jmp
insl
fldt
xor
mov
mov
sbb
movsl
or
xor
jno
sub
pop
dec
mov
std
in
mov
ja
inc
jo
mov
and
shl
push
xchg
push
out
sbb
mov
add
fdivrs
mov
sbb
add
sbb
test
mov
bound
das
test
das
sub
dec
adc
div
push
add
inc
mov
push
dec
jmp
leave
mov
sub
scas
ja
test
out
xor
push
inc
iret
sti
inc
mov
es
in
mov
xchg
rcll
cmp
mov
cli
scas
jnp
aas
mov
mov
gs
jne
cmp
add
pop
popa
loopne
pop
pop
adc
or
popa
push
and
mov
add
test
pop
popf
push
push
add
fcomps
pop
fildll
lods
mov
es
add
mov
addr16
jl
cmp
ret
mov
flds
mov
pop
fisttpl
xlat
pop
xor
popf
cmc
pop
lret
dec
stos
fucomip
fimull
ss
orl
mov
push
push
les
adc
jne
int3
sub
movsb
inc
call
cli
dec
push
ss
sub
cmp
add
push
movsl
sbb
pop
dec
mov
je
mov
dec
subl
movsl
pop
cmp
mov
imul
fucomi
jg
outsl
mov
xor
sti
nop
mov
mov
aad
hlt
inc
pusha
jg
stos
test
clc
test
push
cmp
mov
mov
stc
out
mov
mov
lahf
adc
push
test
pushf
sub
sub
dec
inc
cld
repnz
aaa
inc
mov
incl
xchg
das
xor
into
out
ficoml
lret
mov
insl
fs
sbbb
test
cltd
push
cld
inc
in
js
push
inc
inc
lcall
jb
add
and
repnz
in
out
das
fnstenv
loop
and
fildll
inc
sbb
pushf
fidivrs
das
das
dec
inc
mov
jle
mov
sbb
in
rclb
cmp
aaa
insl
out
loope
mov
jle
test
sub
dec
dec
jle
mov
adc
sbbl
mov
js
insb
test
and
sti
mov
aas
push
lock
pop
loop
adc
and
xor
mov
sbb
retw
push
ret
out
xlat
outsl
xlat
jecxz
add
gs
in
pop
pop
lahf
sub
inc
add
ret
incl
test
aaa
repnz
int
aad
fisubrs
aam
popa
mov
stc
adc
sub
add
addr16
int
mov
sbb
pop
cmp
push
sti
ret
push
dec
fwait
mov
sbb
add
pop
sahf
jb
pop
jmp
add
arpl
fstl
test
outsl
pop
imul
push
testb
pop
lds
sub
lods
mov
jns
cmpsb
jns
cmp
or
pusha
and
mov
push
mov
lahf
cmp
jecxz
add
sbb
ficomps
in
clc
ss
repz
loop
rcrb
cmp
or
lds
cmp
push
hlt
jbe
xor
xchg
xor
data16
add
in
inc
mov
jl
loopne
insb
shll
pusha
add
mov
movsb
push
push
jmp
push
lret
adc
or
lahf
ret
or
ret
addr16
jmp
push
xchg
pop
into
andl
daa
in
imul
xor
punpckhwd
mov
inc
stos
adc
jne
jecxz
je
sub
adc
adc
pop
push
jo
jg
mov
lret
jmp
sahf
pop
dec
or
cmpsl
repz
in
in
adc
shll
daa
ret
test
jns
xchg
pop
ja
sbb
iret
pop
loope
push
add
aaa
jae
jge
lcall
or
mov
aam
out
cltd
sbb
int3
outsl
xchg
jns
popf
jne
cmp
jmp
out
imul
call
jbe
movsl
lods
dec
lods
push
rolb
xchg
ja
addr16
lahf
jge
add
cmp
mov
rcll
dec
outsb
ja
popf
pop
add
pushf
cmp
mov
mov
testl
mov
xor
rolb
fistpl
fiaddl
test
add
dec
mov
je
lock
sbb
addr16
xchg
pop
popf
ja
test
jmp
hlt
sub
out
jno
lahf
pushf
push
repz
adc
rclb
pop
insb
lahf
cmc
pop
jp
xchg
push
sbb
movsl
cmpb
gs
fisubs
cmp
push
insb
push
sub
xor
dec
rolb
pop
inc
cmp
shl
and
test
stos
and
sbbb
sti
push
sbb
mov
scas
sbbl
test
add
xlat
pop
xchg
mov
push
insb
mov
arpl
rol
stos
and
sub
je
or
in
push
inc
in
jne
inc
repnz
adc
test
push
mov
loope
sub
imulb
push
xor
fisubrl
pusha
cwtl
fcompl
fwait
es
fwait
xchg
dec
stos
cmc
popa
in
std
daa
iret
call
xor
call
std
into
xor
add
pop
push
pop
subb
loop
lea
inc
mov
dec
cwtl
movsb
sbb
stc
movsl
adc
mov
jle
loop
pusha
push
aaa
clc
sbb
pop
pop
das
sub
int3
jp
and
sbb
push
addr16
push
mov
cmp
sbb
mov
pusha
sbb
cmp
mov
gs
or
mov
cmc
dec
sarb
hlt
jae
xor
loop
cmp
xchg
jo
xor
push
rcrl
arpl
add
inc
fsubrl
aaa
mov
xor
jg
pop
pushf
test
je
lods
aas
push
in
jp
jno
je
pop
insl
aas
push
mov
cmp
mov
inc
jo
pop
lret
cmpsl
outsb
pop
sub
idivl
test
add
mov
mov
bound
outsl
int
nop
cmpsb
mov
sbb
add
bound
stos
lock
jmp
loopne
in
or
inc
push
cmp
jmp
scas
push
loopne
adc
jns
imul
shl
jl
outsl
jbe
mov
sti
clc
dec
or
aad
xchg
push
xchg
scas
mov
fwait
push
mov
arpl
movsb
and
fsubr
cmp
adc
cmp
mov
push
sbb
leave
mov
mov
ds
xchg
or
mov
push
push
inc
push
popa
in
push
aas
clc
lret
or
imull
xchg
aam
inc
rcrl
pusha
xor
sub
pop
inc
push
and
xor
sarl
cmp
xchg
std
stos
pop
fs
ljmp
movsl
cltd
lcall
push
cli
scas
cmp
out
and
and
push
frstor
xchg
push
enter
stos
mov
xor
in
or
insl
jmp
in
cli
fxch
bound
cmp
push
push
mov
pop
cmp
add
push
pop
leave
aas
mov
mov
mov
out
bound
mov
pop
push
mov
push
sar
mov
int3
into
mov
mov
or
inc
fsin
inc
or
mov
inc
movsl
loop
jno
or
pushf
mov
xor
cmp
jg
test
inc
pop
lock
xor
mov
bound
adc
outsl
notl
cmp
push
or
inc
icebp
xchg
and
stos
imul
or
das
pop
or
movsl
xchg
and
sub
add
or
ret
or
test
cltd
cltd
pusha
add
loop
xor
pop
xor
pop
mov
push
repz
xchg
inc
xchg
pop
addr16
pop
push
out
and
and
fs
inc
pop
sahf
push
imul
push
sub
imul
pop
sbbl
frstor
jns
mov
xchg
dec
hlt
push
pop
dec
xorb
loope
leave
addr16
mov
add
dec
jae
xchg
add
fmul
lahf
push
mov
or
rcl
jns
mov
pop
stos
fwait
pop
mov
stos
mov
xchg
pop
mov
sahf
pop
ss
outsb
xor
jb
and
xchg
adc
xchg
push
loop
prefetcht2
xchg
pop
andb
fs
cmp
jmp
pop
aam
cmp
push
xchg
mov
mov
mov
cmpsl
mov
mov
xchg
xorl
stos
cmp
add
mov
adc
or
stos
nop
aad
xlat
imul
out
data16
les
push
or
push
fs
push
stos
idiv
dec
sbb
mov
mov
xchg
cmpsb
dec
and
sbb
popf
addr16
notl
push
mov
inc
in
sbb
lahf
insb
lea
outsl
imul
js
lcall
adc
xor
pusha
inc
xor
pop
scas
mov
out
mov
lea
fwait
sub
jg
adc
and
in
xchg
adc
ret
mov
push
push
dec
push
pusha
pop
add
push
mov
lods
mov
ds
jmp
hlt
ret
nop
inc
push
push
pop
int
unpckhps
xor
addr16
pop
mov
mov
sub
int
sbb
insl
and
add
sbb
mov
je
movsb
call
push
and
arpl
xlat
inc
mov
jmp
inc
in
add
icebp
mov
cmp
data16
fs
mov
pop
cmc
iret
fwait
dec
bound
lods
movsl
arpl
bound
mov
fimuls
push
dec
scas
out
or
mov
aam
les
sbb
xor
or
or
es
sbb
jecxz
jp
add
das
insl
adc
lods
test
dec
lock
lret
movsb
fisttpl
outsb
inc
arpl
jne,pn
cwtl
loopne
ficompl
jae
fnstenv
cmc
lret
or
inc
pop
dec
rorl
cmp
pop
cmpsl
fwait
pop
cmpsl
lods
xor
sbb
push
push
mov
cmpsl
cmp
fdivs
mov
in
pop
mov
dec
xor
mov
mov
movsl
mov
jae
jne
mov
push
loope
xchg
add
loope
dec
iret
pop
mov
dec
mov
cmc
xor
aas
idivb
cmpb
and
aad
aam
outsb
pop
in
adc
imulb
mov
in
and
jmp
fnstsw
mov
mov
jge
out
dec
jmp
mov
cltd
inc
dec
lods
mov
add
lret
jmp
sbb
add
push
xor
sbb
dec
sub
lods
aaa
repz
push
rcrb
pushf
leave
push
jg
xchg
cmp
aad
mov
xchg
cmpsb
ss
sahf
outsb
mov
dec
les
xchg
and
push
faddl
xor
cltd
lahf
dec
pop
push
imul
int
mov
sub
test
movsl
cmp
dec
lods
xchg
test
cmc
pushf
jmp
mov
int
push
lds
cltd
dec
pop
push
faddl
cs
test
daa
cld
sub
lea
ss
adc
dec
jno
gs
lret
cmpsb
js
stc
inc
pop
popa
jae
ja
lahf
dec
lahf
xchg
xchg
int
mov
stos
mov
lret
jae
nop
pop
mov
dec
fidivs
movsb
pop
xchg
lcall
lcall
sbb
ja
out
filds
sub
scas
jne
std
in
ja
mov
inc
bound
xchg
pop
repz
jbe
dec
mov
fs
pop
push
xchg
cs
fldl
pop
insl
shlb
aad
xchg
ret
sbb
jp
test
jns
sub
xchg
inc
lea
push
clc
sbb
jge
xchg
ljmp
test
mov
cli
jne
in
sbb
gs
je
pop
and
jns
mov
xchg
cmp
data16
out
adc
inc
in
call
jecxz
dec
cmp
add
out
jg
dec
jns
and
ja
fisttpl
in
xchg
in
jno
sbb
int
sbb
xchg
cmp
push
push
mov
jp
cmp
mov
ja
shrl
pop
and
mov
push
cmp
lods
inc
mov
push
dec
test
cmp
add
mov
icebp
aam
mov
lods
mov
lods
pop
outsl
inc
cmp
in
mov
adc
in
std
clc
xor
das
pop
and
das
xor
push
cmc
dec
sub
mov
push
pop
pop
xchg
pushf
lret
and
repz
inc
dec
dec
push
fsubs
dec
cmp
ja
loope
mov
movsl
aaa
push
mov
fcmovne
ljmp
daa
ss
fwait
mov
sbb
imul
int3
aad
pop
rcl
and
das
addr16
jo
add
jecxz
stos
inc
rolb
sbb
push
insb
or
icebp
xchg
mov
xlat
push
lock
mov
inc
add
inc
mov
and
pushf
jl
xchg
mov
lods
push
dec
mov
shll
lods
in
shrl
icebp
xor
lret
mov
or
mov
xor
jbe
mov
and
mov
leave
sbb
push
scas
xor
and
jbe
arpl
icebp
addl
gs
sbb
push
jecxz
subb
mov
outsl
cltd
test
or
iret
jge
mov
cltd
in
jns
fcoms
mov
mov
movups
dec
cs
dec
push
push
or
pop
jbe
pop
aaa
add
lock
push
xchg
neg
out
fnsave
jp
enter
push
dec
sahf
lret
cwtl
push
fdivl
lds
jne
cmp
dec
jp
lcall
and
mov
out
dec
sub
mov
dec
and
cmpl
cmp
mov
mov
cmp
fcompl
jnp
sub
xor
sbb
xchg
adc
sbb
mov
push
and
in
jbe
dec
jmp
sbb
xchg
lret
add
shll
add
faddl
lcall
xor
mov
pop
and
scas
sbb
dec
cmc
loope
push
je
sti
pop
mov
es
pop
mov
push
das
dec
sbb
xor
sbb
sub
outsl
adc
fiadds
cmp
jle
cltd
inc
mov
sbb
out
push
or
mov
hlt
sbb
test
sbb
inc
mov
and
jns
mov
mov
inc
es
adc
xor
les
mov
mov
ljmp
xchg
dec
xchg
test
pop
insl
pop
jge
ja
adc
xor
push
repz
pop
pop
inc
xchg
test
cmp
repnz
push
mov
addr16
inc
call
jns
fcoms
mov
jns
pop
loope
mov
jl
adcl
inc
mov
or
arpl
cmp
mov
adc
int
or
cmp
pmaxsw
jge
and
stos
xchg
mov
or
push
jg
mov
lock
pop
mov
adcl
xor
inc
outsb
call
push
loope
mov
dec
movsl
jl
mov
add
inc
jnp
mov
shr
or
push
cwtl
and
pop
xorl
and
call
addr16
push
sbb
xchg
dec
inc
sbb
mov
out
dec
cld
adc
mov
std
aas
scas
std
inc
lret
xchg
xchg
and
xor
mov
and
mov
bound
ja
out
or
jl
pop
push
ja
outsl
ljmp
mov
push
out
testl
cmp
in
or
mov
fs
jge
notb
movsb
xor
sbb
shrb
sbbl
movsl
cmp
sub
cmpsb
mov
shll
or
push
out
loopne
mov
jmp
inc
outsl
dec
pop
xchg
int
mov
xchg
aaa
rcll
cmp
in
and
mov
inc
ss
mov
mov
jo
xlat
dec
mov
lret
mov
mov
and
int
mov
int
sarl
mov
pop
test
shlb
fsubr
push
push
daa
subl
leave
mov
shlb
pop
popf
push
fcom
sbb
sbb
enter
ret
div
lods
jbe
rorb
pushf
mov
stos
mov
loop
mov
pop
hlt
sub
mov
mov
je
jmp
sti
mov
dec
imul
insb
add
mov
cmp
and
mov
ds
inc
xor
in
mov
mov
push
cmp
xor
mov
add
sub
push
out
adc
imull
xchg
sub
lret
ljmp
lcall
push
cmp
mov
jbe
into
sbb
ljmp
repnz
sbb
mov
jb
add
loopne
aam
repnz
mul
push
mov
push
mov
insb
inc
movsb
or
clc
lock
mov
cmp
sbb
ret
bound
inc
and
outsl
das
enter
jbe
jge
in
andl
push
push
jg
jp
pop
adc
jecxz
xchg
xchg
mov
add
xor
cmp
mov
pop
xchg
adc
add
jo
in
mov
fnstenv
push
in
bnd
scas
daa
and
in
sbb
movsl
add
inc
xor
push
int3
or
cmp
in
cmp
addr16
lea
xor
pop
mov
imul
inc
enter
mov
sbb
cmp
lret
inc
insb
jo
jnp
mov
sbb
pusha
pop
lahf
cwtl
jo
shrb
pop
xor
sbb
inc
int3
out
testl
scas
outsl
xor
sbb
ljmp
scas
pextrw
pusha
lods
mov
js
popa
mov
nop
sbb
imul
sbb
xchg
dec
outsb
dec
mov
scas
mov
js
repz
dec
jecxz
pop
xchg
lods
inc
imul
inc
les
cs
add
jne
andb
mov
push
pop
adc
repnz
sbb
mov
add
negb
add
xor
xchg
mov
mov
xchg
aad
sub
lock
adc
mov
dec
shl
fdiv
fistps
pushf
sub
and
aam
jecxz
stos
lods
into
test
sbbb
decl
scas
ss
adc
sbb
cmc
outsb
mov
fbstp
aas
pop
pop
sbb
sbb
mov
scas
fisttpll
mov
adc
test
inc
orb
jno
or
aam
cmp
popa
loopne
rolb
cmp
fdivrl
add
sub
and
aaa
out
cmp
or
subb
jg
pop
mov
jbe
aam
and
mov
lahf
xlat
scas
dec
mov
sub
shrb
jmp
or
cmp
dec
jbe
inc
xchg
cld
jecxz
pop
xchg
push
je
xor
mov
lods
pushf
shl
or
jno
or
insb
sub
out
dec
mov
mov
in
out
dec
xor
sahf
cmpsl
add
cmp
cwtl
inc
jmp
lea
xchg
inc
fists
xchg
pop
lcall
and
lods
push
jno
imul
out
push
sbb
daa
push
inc
mov
and
rolb
stc
pop
mov
push
dec
fwait
or
sub
icebp
enter
jp
adc
ret
sub
ficompl
mov
flds
sub
shlb
aas
sbb
fwait
adc
mov
inc
stos
dec
into
movsb
shrb
not
xchg
movsb
pop
sbb
pop
cmc
sti
clc
jmp
sti
int3
jp
lds
arpl
and
in
adc
fistpl
mov
mov
out
pop
sahf
movsb
mov
jl
ret
mov
shlb
outsb
clc
inc
and
jp
xor
out
add
test
fsubrl
add
pop
push
xor
push
fcompl
call
data16
sub
jecxz
call
cs
loope
and
inc
in
mov
iret
int3
test
pop
adc
mov
dec
sbb
pop
or
push
stc
xchg
test
and
pop
jl
push
pop
mov
adc
or
leave
xchg
pusha
push
inc
dec
bound
push
test
rorb
out
push
bound
filds
adc
add
cltd
les
pop
rorl
mov
in
adcb
sahf
fimull
add
stos
rorl
push
xchg
cmp
popf
movsl
in
dec
fcomps
in
mov
lret
test
jne
scas
pop
stc
sahf
stos
mov
cmp
dec
jae
inc
ss
sarl
inc
sbbl
ficoml
nop
adc
adc
sbb
es
shll
pop
inc
add
cmpsb
andb
clc
imulb
rcrl
into
sbb
sub
gs
sarb
mov
out
push
daa
add
cs
and
iret
repz
sub
mov
inc
mov
sub
jnp
jb
stos
inc
push
add
aaa
mov
arpl
ss
data16
inc
sti
out
pop
nop
sub
inc
mov
inc
adc
push
loope
mov
inc
push
es
mov
ljmp
adc
cmp
or
addb
adc
shr
or
popf
pop
xor
mov
dec
pusha
jg
inc
fs
xchg
mov
scas
pop
ret
sbb
mov
in
popf
fadd
fs
pop
jne
fldenv
repnz
inc
cmp
mov
imul
stos
push
pop
enter
xchg
ret
loope
dec
mov
lock
xor
daa
das
stos
pop
popa
aaa
push
in
lret
fwait
or
pop
faddl
ss
jb
aam
and
cmpsl
dec
movsl
jns
jb
fs
daa
inc
das
fmull
lahf
jecxz
clc
pop
dec
jo
push
cmp
cmp
cld
sar
das
mov
jle
dec
cmp
out
imul
ljmp
and
push
sub
aaa
insl
pushf
cmp
aad
or
mov
ja
ja
popf
stos
fucomi
sbb
mov
jnp
cmc
push
ficompl
push
jo
aad
mov
jnp
inc
cltd
push
and
in
call
shll
lds
mov
insl
mov
or
data16
lret
out
push
xchg
jnp
aaa
fbld
jp
push
mov
fimull
cmp
adc
inc
fmuls
jae
lds
or
std
movsl
loopne
dec
jmp
int
test
cwtl
mov
adc
adc
addl
loope
jmp
add
adc
cmp
pop
mov
mov
pop
out
mov
scas
in
adc
mov
jecxz
jge
mov
and
clc
test
fwait
insb
dec
ja
xor
call
outsb
out
sbb
pop
jne
arpl
fdivrl
lods
shll
popf
daa
rorl
push
mov
testb
fdivp
jge
fiadds
xor
sbb
adc
fidivrl
pop
pop
lahf
sub
cmc
push
bound
jae
loopne
ret
dec
cld
imul
jns
jae
cli
mov
mov
popf
adc
add
jnp
or
inc
push
mov
adc
mov
cmpsb
mov
scas
addb
dec
xchg
and
ja
andnps
pop
push
mov
stos
addr16
push
in
jne
cmp
push
jno
sbb
scas
push
lods
sbb
add
outsl
dec
fmul
mov
xchg
dec
pop
imul
sbb
es
push
push
lds
mov
add
dec
lea
jmp
sti
xchg
xchg
fistpll
int3
fstpl
mov
in
test
and
popa
lahf
or
sbb
jbe
jp
sub
jbe
and
or
cli
cmp
inc
adc
mov
iret
adc
cmp
loopne
sarb
flds
ss
jo
addr16
loope
ss
mov
test
enter
cmp
pop
inc
repnz
shl
pop
fsubrl
ds
sti
call
cmc
fcmovb
xor
lahf
outsb
or
leave
pop
sub
and
jmp
mov
jmp
sbbb
adc
js
int3
ja
inc
mov
hlt
aam
add
cwtl
sahf
sub
mov
sbb
in
icebp
jno
mov
xchg
ret
test
cld
out
fisttpl
pop
push
xor
or
leave
insb
imul
sub
scas
jl
push
jns
jp
pop
arpl
cmp
mov
xchg
ja
push
les
in
mov
and
pop
ror
stos
push
xrelease
inc
in
sub
sbb
mov
cmpsb
rcrl
inc
pushf
stos
mov
insl
dec
mov
mov
sbb
cs
inc
aas
sub
mov
aam
xor
popa
mov
test
sub
cmp
js
ret
push
xchg
mov
out
sbb
fsubs
scas
jbe
lea
fnsave
test
push
loop
addl
xor
dec
jp
pop
jle
les
ljmp
mov
push
xchg
in
sti
testb
dec
xchg
mov
punpcklbw
jnp
mov
hlt
jae
test
lock
dec
push
rol
in
push
iret
pop
stc
rcrl
jge
mov
cli
int
add
push
insl
inc
in
pop
incl
mov
test
test
adc
cmp
xor
popf
out
out
mov
enter
lods
and
mov
pop
stc
das
std
adc
mov
xchg
call
inc
or
jnp
out
cmp
pop
pop
bound
pushf
mov
cmp
cltd
xchg
ror
lods
lahf
cli
or
jbe
fdivrs
dec
cmp
pop
roll
addb
xor
pop
je
nop
push
aas
jge
mov
cs
inc
cwtl
ds
cmpsl
pop
push
xor
jp
movsb
gs
dec
scas
cltd
mov
or
mov
pop
mov
lcall
mull
mov
mov
sub
cmc
pop
fdivrl
xor
ficompl
into
lcall
es
outsl
cltd
sbb
jnp
ret
pop
inc
mov
ja
dec
imul
or
cltd
mov
dec
dec
rcrb
xchg
adc
out
adc
sbb
dec
mov
dec
push
mov
mov
inc
notl
mov
push
movsb
inc
add
and
movsl
or
and
push
mov
sti
les
loope
mov
sbb
decb
fs
mov
shll
stos
out
test
dec
mov
nop
xlat
xchg
dec
movsl
mov
clc
cmpsl
hlt
and
icebp
cwtl
or
xor
mov
push
aam
xchg
jl
cmp
fs
popf
push
lahf
jl
daa
add
push
cmc
testb
push
lahf
test
pop
mov
mov
xor
add
push
jp
ss
sbb
inc
gs
pop
xor
cli
popa
fstpt
push
fwait
and
mov
std
xor
adcl
jge
iret
out
adc
rorb
rclb
imul
stc
fcoml
and
cld
mov
vunpcklps
add
fwait
cld
mov
insb
je
jp
subb
jle
pop
sti
jno
xchg
test
aad
mov
mov
and
dec
sbb
dec
and
jns
jnp
mov
pop
mov
out
or
iret
es
sbb
repnz
push
scas
pop
xchg
pusha
movsb
jns
es
jns
add
mov
mov
mov
lret
mov
and
scas
imul
out
mov
insb
and
cld
mov
aas
pop
andb
stos
pop
sub
sarl
xchg
out
arpl
shrb
xor
adcb
insb
mov
inc
pushf
xor
jae
pop
mov
sbb
pop
jmp
stos
sub
gs
xchg
fildl
mov
dec
out
and
outsl
push
test
adc
inc
std
push
pop
rcrb
js
test
movsb
icebp
and
push
mull
repz
mov
sbb
xlat
push
bound
cmpsl
mov
loope
popa
es
movsb
sbb
pushf
pop
lods
adc
cwtl
clc
cmc
popa
mov
inc
fwait
cwtl
mov
scas
pop
xor
push
test
pop
mov
lock
inc
mov
xorb
rcrb
sbb
inc
repz
xchg
cmp
xchg
xchg
and
pop
push
adc
mov
imul
sbb
mov
xchg
sub
enter
jmp
and
jmp
jns
das
mov
xorl
imulb
test
jo
outsl
out
sub
pop
pop
or
dec
or
adc
mov
xchg
lret
xchg
mov
add
xlat
adc
fst
mov
xor
adc
dec
enter
jecxz
mov
mov
arpl
dec
mov
pop
jb
mov
pushf
ds
scas
and
pop
mov
ja
mov
sub
std
negb
fmull
cmp
push
into
add
in
fnstcw
shrl
dec
stos
rcrb
xchg
call
jno
xchg
ljmp
dec
insl
mov
call
mov
dec
movsl
cltd
mov
fisttpl
hlt
mov
inc
cli
xchg
mov
outsl
push
std
fdivr
jns
jns
scas
pop
lahf
lods
push
xor
dec
insb
movsb
mov
jno
loopne
xor
or
pop
xchg
mov
loopne
pop
mov
sub
xor
jge
jns
mov
xchg
cmp
outsl
mov
mov
cli
popa
aaa
mov
xchg
inc
push
mov
cld
aad
out
int3
repz
adc
aas
test
mov
sbbl
enter
sahf
add
icebp
rolb
scas
mov
pop
sbb
xlat
mov
jle
insb
scas
add
inc
test
xchg
outsb
js
pop
stc
sti
icebp
std
das
lret
mov
in
in
addr16
dec
movsb
cmpsb
xorb
mov
imul
iret
outsl
jo
sub
mov
or
pop
ja
add
jle
loopne
nop
sub
mov
and
loopne
xchg
and
insb
popf
and
adc
sbb
out
cmp
test
rorb
fisubrs
dec
lods
cmpsl
fidivs
jle
addr16
outsb
jb
bound
gs
jg
loope
mov
shlb
lahf
mov
or
dec
shrb
mov
dec
adc
push
inc
lock
test
cltd
mov
mov
mov
push
cmpb
repz
inc
mov
adc
aaa
push
jmp
jge
mov
cmc
mov
leave
ljmp
fstpl
repnz
sub
jl
fs
pop
mov
mov
ljmp
bound
mov
sbb
hlt
cmp
rcrl
popa
dec
sti
xor
ret
jno
addr16
xor
dec
dec
mov
mov
add
pop
xlat
hlt
in
dec
repnz
lcall
sub
stc
fdivrs
int
xor
mov
sub
out
sahf
mov
xchg
ret
inc
xchg
mov
sbb
cmp
test
fiadds
pop
mov
adc
aad
roll
mov
sbb
inc
mov
and
xor
sbb
push
xor
or
std
rolb
add
subb
stc
cli
arpl
xor
scas
fwait
xchg
dec
jne
mov
push
xor
aaa
loope
and
xor
sbb
mov
or
mov
jbe
mov
dec
cmpxchg
inc
popf
cmpsb
push
xlat
pop
push
pop
fwait
inc
mov
cmc
sub
iret
ds
hlt
dec
outsb
mov
testb
and
add
mov
cli
imulb
jbe
push
mov
shlb
daa
enter
leave
inc
mov
cmpsl
mov
push
jne
ret
test
cmp
jo
cmp
inc
into
pop
shlb
inc
ss
cltd
nop
pop
dec
repnz
adc
or
dec
push
ret
insb
ja
push
negb
sahf
cli
test
inc
ret
je
xor
je
push
cwtl
pop
xor
push
lds
jmp
stos
xchg
push
jns
lods
lock
xchg
cld
iret
sub
fnsave
je,pt
dec
adc
test
xchg
enter
ror
dec
xor
stos
jmp
adc
fcmovbe
xor
movsb
pusha
pop
mov
mov
enter
hlt
into
push
int3
int
jno
ljmp
int3
push
leave
cli
fs
out
or
fmuls
out
or
rcrl
jg
mov
xorl
insw
mov
push
dec
add
add
scas
inc
inc
mov
mov
jle
mov
leave
jnp
aad
xor
loopne
pop
lahf
rclb
cmp
lret
jne
push
daa
adc
xchg
mov
lahf
ds
push
inc
cmp
ret
aam
pop
inc
mov
adcb
xor
dec
out
mov
mov
xchg
mov
sub
lcall
fisubrs
jmp
inc
xlat
divl
sti
push
test
or
mov
push
rcr
in
lock
xchg
lods
sub
add
loopne
fs
sti
lahf
test
mov
out
nop
movb
lods
mov
ds
fstpt
outsb
or
rcrb
jb
pop
mov
fwait
sub
cs
jae
jne
or
ljmp
movsb
call
fistps
mov
cmp
xchg
sub
sub
pop
repz
xlat
mov
xchg
movsl
dec
xor
xchg
dec
push
into
ss
fdivrs
and
cmpsl
mov
dec
cmp
jg
ret
cmp
rol
imul
cmp
pop
pop
adc
mov
mov
or
in
add
add
cli
adc
push
mov
icebp
pop
aas
adc
jb
cmp
mov
cmpsb
xor
dec
jb
movsb
dec
push
or
cmc
cs
jmp
leave
mov
das
imul
and
inc
push
and
out
push
adc
xchg
pop
inc
jo
mov
je,pt
mov
or
in
xorl
or
cs
sub
out
sbb
js
jnp
imulb
negb
push
jnp
mov
negl
ret
test
xor
fnstsw
fwait
inc
dec
dec
mov
jbe
mov
lock
push
mov
hlt
mov
cmpsl
rclb
pop
js
fsub
call
daa
mull
ficompl
in
pop
imul
mov
push
jl
lock
fists
mov
mov
jbe
jp
dec
sbb
push
lret
fdiv
test
xor
jle
dec
js
rcrl
out
enter
xchg
push
cmpsl
iret
inc
orl
aaa
pop
fwait
dec
mov
xor
pop
sbb
dec
out
jecxz
push
jno
cmp
cmp
pusha
addb
inc
cltd
es
in
cmpsl
mulb
popf
movsb
ror
mov
cmpsl
in
in
inc
jl
out
decl
cmc
dec
dec
orl
mov
adc
test
mov
dec
add
and
jo
or
cmp
inc
jno
cli
fcmovb
or
sbbb
mov
repz
loop
std
pop
in
data16
and
and
mov
sahf
stos
or
dec
bound
notl
or
mov
call
pop
pop
movsl
es
ret
int3
push
cmc
in
stos
addb
dec
mov
mov
add
xchg
addr16
lods
outsl
mov
sub
fistpl
xchg
lea
sub
fcompl
pop
jp
mov
sub
sub
pop
cmp
cli
adc
scas
adc
xchg
mov
or
sbb
sub
int
sbb
sahf
sbb
test
xchg
repnz
mov
int
into
mov
outsb
outsl
sarl
test
mov
dec
lret
or
in
inc
mov
jno
in
lds
pop
movsl
fwait
xor
push
daa
les
mov
mov
adc
mov
xchg
ds
or
mov
out
mov
inc
dec
dec
arpl
movsl
push
aaa
arpl
js
test
iret
ljmp
bound
invd
nop
xor
nop
jp
divb
mov
dec
sub
add
lock
cmpsb
hlt
arpl
pop
pop
stos
pop
imul
mov
mov
adc
sub
imulb
add
pop
fs
inc
pop
sub
push
push
inc
fists
sub
cld
sub
ror
call
popf
add
sub
inc
jecxz
fwait
inc
dec
fldl
fs
mov
or
xchg
loopne
lods
push
mov
cmp
cmp
pop
enter
cmp
pop
call
or
fstps
jno
mov
xor
shll
movsl
add
in
push
inc
jle,pn
mov
ret
imul
into
dec
out
fstp
out
das
popa
imul
push
jns
mov
in
inc
inc
mov
addr16
aas
push
dec
jne
jns
inc
rcrl
fcomps
call
pop
jp
scas
js
in
hlt
push
mov
adc
xor
loopne
jnp
xchg
adc
inc
mov
fidivl
sar
and
pop
andb
add
outsb
incb
cli
xchg
push
sub
cld
pushf
pop
inc
add
pusha
lds
mov
lcall
mov
add
pop
popf
pop
popl
nop
cmp
cmp
lret
lahf
xchg
je
add
inc
and
imul
inc
inc
adc
addr16
ja
movsb
lret
lret
and
pop
into
dec
xor
push
push
shlb
rcrl
in
jnp
mov
fs
int
dec
insl
cltd
and
in
out
dec
xor
loope
sbb
std
adc
je
data16
cltd
call
out
push
adcb
push
pop
jmp
jg
push
add
jb
mov
push
movsl
sbb
mov
out
notb
and
jl
addr16
xlat
gs
adc
inc
in
sub
mov
lcall
fisubrl
jmp
test
arpl
adc
mov
popf
adc
xor
xor
clc
fucomp
icebp
clc
mov
pop
test
mov
gs
sub
add
cltd
mov
xor
mov
stos
scas
cmp
mov
leave
test
leave
mov
or
decl
fmul
mov
hlt
sub
aas
push
mov
inc
xchg
xor
cmp
mov
shll
and
cmp
mov
loope
or
jp
popa
sub
cltd
in
dec
mov
sub
insl
cld
cmp
inc
push
add
jg
mov
jg
insb
pop
push
cmp
mov
jb
adc
leave
xchg
jmp
cmpsl
adc
test
xor
or
aas
adc
dec
xchg
cs
mov
xor
test
mov
jbe
stos
mov
dec
push
lcall
push
sub
jb
mov
lret
add
adc
add
in
bound
movsb
ret
fstpt
shrb
add
je
loop
es
push
leave
movd
and
mov
outsl
mov
cmp
popa
sahf
pop
in
in
pop
pop
sub
cmpsl
jmp
lret
mov
roll
push
mov
pop
xchg
jge
or
aad
mov
fists
xchg
mov
cwtl
test
sub
inc
lds
dec
or
call
dec
push
call
mov
xchg
sahf
loopne
nop
push
sub
sub
rcrb
mov
int3
ss
push
xor
cmp
sahf
ljmp
ja
xorl
xchg
fwait
repz
inc
sub
sti
xor
lds
out
mov
jnp
inc
scas
pusha
in
inc
lcall
pop
enter
insb
je
je
pop
mov
jle
xchg
or
jle
mov
mov
push
sub
shr
xor
dec
and
sbb
push
inc
loope
arpl
mov
jp
sub
add
shrl
in
inc
push
scas
fs
sub
jg
or
loope
cs
js
cmpsb
mov
xacquire
pop
data16
shrl
jns
cmpb
cmp
stos
pushf
and
mov
scas
hlt
pop
dec
std
add
inc
push
jbe
mov
in
pop
dec
dec
jns
cmp
xchg
stos
push
sbb
cmpsl
loop
inc
jae
daa
sahf
jne
mov
gs
cltd
jb
stc
push
not
pop
jo
and
adc
fnsave
or
addr16
push
pop
push
inc
mov
aad
add
jle
xchg
mov
ljmp
jno
lret
icebp
inc
push
int3
or
push
xor
and
jmp
adc
push
repnz
pop
pushf
out
popf
aam
ret
out
push
mulps
pop
mov
das
and
dec
icebp
pop
push
data16
cmp
outsb
dec
lret
sbb
out
xor
gs
ret
and
or
inc
sub
pop
mov
pop
jne
repnz
leave
adc
mov
dec
mov
jge
pop
cmc
sahf
out
or
int
mov
push
and
add
or
sbb
adc
mov
lahf
xchg
sbb
mov
loop,pt
sbb
mov
testb
enter
arpl
adc
test
lock
jg
call
cmp
ds
jle
jl
out
repz
jae
xor
jp
xchg
pop
xchg
cli
fbld
daa
dec
mov
add
cld
cli
xorb
mov
mov
enter
lret
shlb
mov
adc
aaa
pop
jge
ss
mov
lods
fs
addr16
aaa
mov
push
adc
or
inc
xor
pusha
loope
cwtl
lock
add
test
dec
out
inc
in
sub
jecxz
and
and
inc
or
daa
pop
push
or
pop
cmpsb
add
inc
jmp
mov
imul
repnz
outsb
aas
paddq
and
xchg
sbb
in
add
dec
pushf
push
push
cwtl
inc
pop
repz
pop
nop
stos
das
push
xchg
popf
leave
jne
gs
adc
cltd
pop
das
movsl
xchg
adc
mov
sahf
mov
out
addl
enter
stos
rcrl
xlat
aad
orl
or
dec
mov
sub
xchg
lea
addr16
pop
cmpsb
fcmovnb
xor
popf
push
and
nop
adc
mov
lea
sbb
or
in
jecxz
xchg
add
sub
pop
sbb
ret
jmp
nop
cmp
mov
jno
ret
rolb
clc
xchg
mov
inc
rcrb
pop
fbstp
xor
les
ud0
add
in
call
sub
pop
sub
mov
sbb
call
adc
mov
fcmove
push
pop
push
inc
dec
js
or
mov
adc
adc
pusha
arpl
push
mov
cltd
lea
arpl
sbb
adc
shlb
sahf
mov
inc
movsb
test
lcall
add
iret
cmc
pop
push
sub
cli
lods
testl
test
mov
dec
sub
or
sahf
xor
push
fimull
push
jbe
jne
data16
mov
imul
pop
std
xor
adc
repz
inc
push
cwtl
push
push
lea
enter
jmp
jnp
cmp
out
lret
mov
xchg
jmp
fidivrs
dec
stos
in
pop
movb
into
and
inc
fnsave
hlt
rcrl
sahf
mov
pop
aam
jo
shlb
jo
adc
out
and
jae
shll
push
xor
mov
xlat
xchg
adc
or
aam
pop
add
pop
mov
xchg
push
rcrb
xchg
loop
fwait
sub
data16
xchg
cmp
sbb
ja
pop
mov
lock
stos
adc
mov
aam
push
inc
sub
stos
popa
mov
adc
out
cmp
stos
daa
xlat
or
mov
ljmp
lcall
pop
enter
cld
nop
xchg
inc
jne
mov
movsl
inc
or
mov
sbb
push
insb
mov
mov
dec
dec
insb
inc
mov
je
cmp
jnp
in
in
xor
xchg
std
jge
pop
cmpsl
cmp
out
in
nop
mov
xlat
push
fnstenv
faddl
lock
adc
rcrb
and
fs
roll
push
inc
lcall
cmp
pop
cmp
popf
in
inc
insl
xchg
xor
mov
les
and
add
jle
aad
js
lcall
push
fiaddl
dec
das
fidivs
insb
cli
sub
mov
sbb
inc
imul
stos
pop
rolb
sub
andb
nop
divl
inc
lock
test
sbb
lods
pop
jns
int
sbb
add
jno
je
jno
xor
pop
xor
mov
push
aas
stos
iret
xchg
sbb
repz
sub
test
pusha
mov
add
sub
sub
es
out
into
mov
mov
jne
aad
icebp
ret
imul
pop
xor
pop
add
jmp
inc
lret
sti
ret
xchg
push
add
pop
fs
cmp
loop
loop
mov
jmp
cmpsb
clc
jbe
xchg
mov
push
rorb
mov
cwtl
aad
nop
jo
mov
push
inc
push
shlb
inc
out
rep
outsl
iret
pop
in
pop
add
enter
cmp
pop
mov
xor
js
cltd
loope
das
dec
xchg
nop
or
mov
int3
adc
or
shlb
adc
sub
mov
cmp
cwtl
das
cltd
mov
mov
mov
das
enter
jle
adc
in
inc
fcmovne
cmp
push
aam
lret
jecxz
in
stos
cmpb
stc
mov
add
mov
adc
fistpl
and
sub
ss
js
push
popf
push
mov
push
rorl
mov
or
mov
out
dec
cmp
out
jne
cs
sbb
mov
test
stos
or
or
outsl
arpl
notl
loope
addl
inc
sbbl
scas
xor
pushf
leave
or
xchg
ja
mov
stos
dec
xchg
hlt
outsl
push
or
add
out
jae
pop
push
xorl
add
sahf
imul
sbbl
mov
fs
idivl
ss
add
gs
xlat
adc
mov
adc
adc
xor
enter
icebp
lea
cmp
fdivl
cmc
inc
std
pusha
shll
push
add
sti
cmp
lcall
out
insb
ljmp
in
adc
hlt
push
lea
add
arpl
jecxz
pop
adc
popa
cmp
es
and
and
test
ficomps
pop
outsl
lock
and
push
jecxz
sbb
push
inc
scas
jb
stos
pop
pop
and
fidivl
stos
adc
repz
push
xchg
push
jmp
loopne
enter
out
inc
add
rcll
outsl
ljmp
ljmp
dec
jge
sub
call
xchg
and
or
not
inc
mov
mov
cmc
mov
add
gs
ljmp
mov
iret
dec
or
repnz
xchg
in
rcr
push
aaa
aad
jae
call
rorl
jb
jae
mov
jp
pop
cltd
enter
jo
push
push
outsb
lahf
push
bound
adcl
bnd
mov
bound
adc
fnsave
or
ret
popa
es
add
stc
cmp
rcll
dec
repnz
pop
imul
insl
and
sub
add
movsl
or
jecxz
int
or
shlb
pusha
mov
push
test
jmp
or
aaa
push
call
bound
jmp
mov
and
shrl
scas
les
and
and
sbb
imul
jge
vsubpd
clc
inc
cmp
lea
cmp
mov
cmpsb
dec
fcoms
inc
add
xchg
fisubrl
mov
mov
xor
and
fstps
mov
loopne
or
out
clc
ljmp
aaa
adcl
sub
cmp
mov
ja
mov
in
stos
and
leave
adc
mov
or
lods
mov
imull
push
adc
jb
std
clc
jl
leave
repnz
jo
push
xlat
andl
pop
or
mov
lahf
push
inc
cmp
sub
fwait
xchg
outsb
daa
inc
out
test
push
push
dec
push
icebp
push
int3
push
jae
popa
call
jae
ljmp
nop
cmp
data16
adcl
stos
movsl
push
scas
loop
in
push
lods
daa
push
ret
add
dec
adc
jb
imul
std
setge
enter
xor
scas
fcoms
insl
pop
push
xchg
js
addr16
shlb
fisubrs
ret
stos
cmp
dec
push
js
gs
xor
pop
lret
push
dec
test
aam
adc
xchg
or
push
push
shll
lods
dec
movl
std
in
inc
xor
inc
addr16
sub
sti
fmull
in
pop
inc
mov
ljmp
sbbl
imul
fisttps
add
and
add
js
pop
iret
aas
cmp
sub
hlt
mov
sub
cmp
mov
push
aam
ficompl
pop
xor
push
fists
int
fnstenv
popf
push
mov
push
shll
add
pop
inc
add
out
sub
insb
mull
pushf
jnp
pushf
pop
imul
and
mov
sbb
std
popa
sar
popf
add
push
loope
push
ljmp
mov
loopne
popf
or
daa
cmpsb
cmp
lahf
cmp
cmp
ljmp
push
leave
mov
ficoms
xorl
or
aam
shrb
fmull
aam
xchg
pop
call
call
push
scas
loope
test
fsubrs
adc
test
dec
and
outsl
ds
sub
fs
inc
dec
cmp
sub
mov
dec
push
std
push
jmp
outsl
mov
sub
sub
jg
and
mov
repz
outsb
rol
push
sbb
fisubl
dec
cmp
pop
add
das
andb
pop
jne
jno
jnp
pop
lea
push
out
mov
and
inc
push
sar
jmp
pop
mov
push
xchg
ja
dec
push
adc
test
mov
cmpsb
pushf
rcl
inc
xchg
iret
sub
mov
pop
bound
push
push
rol
push
sbb
clc
dec
jbe
cmpsl
push
sub
xchg
push
std
dec
cmp
xchg
nop
pop
mov
mov
adc
cli
mov
jbe
ljmp
rorl
pushf
fldl
fcomi
adc
je
sar
push
pop
aas
adc
jp
and
std
mov
and
and
ja
mov
mov
daa
jmp
pushw
push
pop
pop
xor
pop
add
dec
leave
mov
xchg
push
subb
push
stc
xor
push
popa
jnp
mov
xor
push
mov
out
in
cli
fldt
es
pop
call
add
sbb
mov
movsl
cmpsb
cmc
std
jb
xor
adc
push
mov
andl
xchg
fdivp
ljmp
xchg
inc
je
pop
mov
popf
mov
dec
and
mov
stos
sub
rcrb
out
fidivrl
dec
lahf
fildll
adc
movsl
pop
or
sbb
xchg
xchg
insb
imul
dec
dec
imul
stos
out
addr16
push
loopne
scas
xchg
xchg
mov
pop
sub
cmc
push
jnp
xchg
mov
lods
cmp
push
lods
pop
aam
pop
stos
sbb
iret
xchg
inc
mov
inc
stos
dec
mov
sbb
push
sbb
cmp
push
test
es
pop
xor
and
and
cmpb
iret
push
sbb
cmp
inc
test
cmpsb
icebp
daa
dec
dec
add
std
test
stos
insl
shl
lea
out
push
outsb
cli
add
cmp
in
inc
lds
mov
fwait
xchg
jle
cmp
xor
je
mov
xchg
into
push
sbbb
cltd
jbe
stc
in
out
sub
movsb
add
je
jge
pop
enter
bound
fwait
mov
aas
cli
mov
lods
pusha
push
mov
or
xchg
dec
mov
fbstp
sub
cli
ret
adc
jae
xor
and
and
leave
sbb
in
fabs
mov
xor
mov
js
test
cld
pusha
dec
adc
notl
adc
rcrb
mov
sub
mov
rcl
mov
adc
xor
decl
mov
out
add
mov
sub
pop
and
ret
js
add
fsts
jl
push
lret
xchg
pop
xchg
add
jmp
inc
mov
push
into
sti
sbb
popa
dec
xchg
movsb
dec
pop
xchg
mov
ljmp
fnstcw
push
cmp
outsb
mov
push
mov
shrl
cld
enter
or
xchg
out
xlat
fidivrs
mov
sub
in
and
dec
popa
push
fsts
cs
mov
dec
sahf
int3
mov
fldt
lock
loop
js
push
adc
cmpsb
jg
xor
int
scas
cld
jae
jecxz
mov
scas
push
ljmp
pop
cmove
mov
mov
ss
lock
cld
mov
iret
xchg
addb
movsl
popf
lods
ja
loopne
aad
mov
mov
fisttpll
jmp
cli
cmp
inc
inc
cmp
shl
dec
inc
cmp
xor
xchg
mov
mov
add
push
pop
adc
add
xor
ret
push
testl
scas
idivl
cmpsl
push
lret
fdivs
jmp
cmp
pop
push
mov
add
mov
scas
adc
ss
aam
add
std
xchg
lahf
fmuls
mov
jecxz
rol
sbb
cmp
cmpb
and
mov
fcom
mov
stos
pop
sbb
psubb
jg
mov
push
dec
xchg
stos
loope
push
fidivl
gs
adc
vunpckhps
jne
je
std
push
xor
ret
es
sbb
adc
push
aam
imul
outsl
inc
xlat
jbe
pop
test
or
pusha
jb
fs
push
mov
mov
adc
push
movsb
add
sar
sub
push
loope
ja
ret
xor
mov
mov
out
popa
push
nop
nop
loop
rcll
divb
mov
cmp
mov
push
fs
mov
rcr
daa
jb
pop
add
pushf
fistps
arpl
sub
add
pop
or
rorl
push
movsb
dec
dec
mov
push
mov
jne
sbb
sahf
mov
shll
adc
mov
out
outsb
js
enter
cmp
es
cmp
push
test
push
ss
and
dec
aas
cmp
mov
push
scas
inc
ret
inc
xor
and
fisubs
gs
push
lods
cmp
push
movsl
inc
pop
pushf
sub
cmpsb
loope
test
lret
or
jae
cmc
adc
cmp
subl
movsb
cmp
loope
pop
jns
adc
jno
cmp
aas
dec
icebp
fs
rclb
in
add
fadds
gs
dec
mov
mov
in
rcll
cs
xor
sbb
outsl
pushf
enter
shll
adc
test
jns
lahf
push
inc
loopne
outsb
movsl
decb
add
inc
bound
xchg
scas
jp
sbb
xchg
cmp
lock
ss
cmp
xlat
sbb
fprem
sbbl
mov
das
xor
inc
jnp
lock
inc
nop
add
pop
adc
out
std
add
jno
sti
add
jl
push
cwtl
and
mov
add
mov
push
aad
scas
call
xor
sarb
mov
xor
xor
jns
out
push
test
fisttpl
jno
xchg
test
xchg
shrb
mov
sbb
or
jp
pop
in
sbb
add
dec
mov
mov
enter
mov
scas
adc
and
sahf
mov
mul
sarl
fiadds
cmc
cltd
jnp
sbb
inc
add
ljmp
add
in
fs
cmp
rcr
mov
fstps
in
dec
imul
jl
addr16
push
and
xlat
in
mov
rcl
or
adc
imul
xor
add
xchg
test
outsb
or
or
push
mov
ret
and
xor
push
jecxz
lahf
sbb
fnsave
hlt
inc
mov
hlt
xor
sub
xlat
jbe
ret
or
dec
pop
dec
push
mov
push
fildl
pusha
cli
pop
pop
push
rorl
sub
add
mov
lret
or
mov
or
sub
jecxz
shll
dec
lret
dec
add
mov
sbb
sbb
sub
dec
jmp
dec
mov
mov
aaa
add
int
xchg
leave
and
lret
jl
sbb
insl
cmpsb
xchg
or
dec
mov
xchg
fsubr
inc
js
adc
lret
sbbb
jae
push
call
call
sub
pop
cmp
popf
sbb
jmp
insb
fstp
inc
ret
mov
aad
and
and
xchg
fidivrs
inc
xor
pop
in
pop
inc
mov
ss
mov
inc
add
cmp
fs
repz
popa
or
mov
addr16
out
mov
popf
xchg
call
pusha
jbe
fadd
cmp
jo
pop
pop
cmp
jl
push
fidivl
adc
mov
pop
mov
dec
sahf
lock
sub
jecxz
pop
pop
mov
test
ss
aaa
mov
iret
sbbb
enter
xchg
adc
cmp
xchg
inc
inc
jnp
pop
les
sub
mov
cmpsb
mov
sti
and
push
icebp
sbb
nop
inc
fs
mov
stos
jo
mov
inc
sub
dec
aas
movsl
fdivr
gs
scas
lahf
ljmp
cmpl
popa
sarl
add
adc
mov
push
jns
test
jmp
or
jge
add
lahf
aas
add
sbb
mov
mov
pop
jge
imul
mov
push
lahf
adc
mov
mov
clc
ja
add
or
aas
dec
lods
mov
jo
sbb
cpuid
pop
and
and
aas
mov
push
fmuls
jo
mov
and
dec
push
xor
in
enter
cmp
sub
pop
cmp
adc
rcl
in
cs
dec
lret
sub
jmp
jns
push
xor
scas
mov
stos
fsubrs
les
jecxz
cmp
cmp
iret
cwtl
adc
and
je
xor
jmp
out
mov
pop
xchg
jbe
cmp
lock
nop
add
mov
and
cld
fsubl
lods
xchg
mov
xor
xchg
jmp
sar
adc
or
in
dec
inc
aad
cmpb
lcall
push
cmpsl
out
dec
addl
lahf
fwait
xor
and
adc
dec
add
nop
les
inc
negl
clc
lcall
pushf
xchg
xchg
leave
inc
imul
pop
push
lods
jo
inc
inc
dec
icebp
outsl
scas
sbb
mov
int3
cli
popf
push
outsb
aam
xchg
dec
incb
mov
inc
outsl
andb
ffreep
push
push
fwait
and
push
mov
daa
imulb
pop
jge
cmp
xchg
and
mov
jae
bnd
gs
popa
je
xchg
mov
push
fdivr
dec
fistps
inc
sub
daa
push
insb
clc
scas
jecxz
test
adc
mov
mov
mov
sub
xchg
iret
test
push
call
nop
xchg
jg
cmpsb
xor
or
stos
mov
ljmp
aaa
pop
jecxz
inc
xchg
cmp
dec
repnz
xor
pusha
decb
data16
or
rclb
leave
mov
xchg
mov
push
mov
xor
rorb
sbb
push
movsb
aas
dec
fiadds
pop
and
xchg
cmc
stos
out
push
in
cmp
stos
rcrl
mov
ror
jne
das
xchg
pop
lcall
nop
inc
enter
pop
mov
xchg
adc
lods
insl
lret
or
rol
sbb
scas
dec
dec
and
mov
inc
mov
aas
enter
xor
mov
repz
ret
je
sub
pop
gs
mov
jno
ljmp
paddd
fs
jg
xchg
adc
cmp
mov
xor
addr16
pop
cwtl
pop
adc
sbb
xchg
cmpsb
mov
lods
xor
cli
sahf
jne
in
sub
push
lods
sbb
sbb
imul
call
jle
inc
mov
icebp
inc
mov
stos
cmp
adc
js
jp
jecxz
mov
push
shl
inc
out
cmp
test
bound
fdivl
add
xchg
pushf
fiaddl
pop
test
mov
testl
pushf
dec
jecxz
popf
ret
loope
mov
scas
xchg
xchg
cmp
testl
imul
adc
sbb
das
mov
sbb
aas
mov
das
and
out
add
cmp
shll
inc
ficompl
movsl
sbb
jbe
mov
rcr
aaa
xor
clc
xchg
into
movsl
xchg
xchg
pop
fiaddl
jne
ds
mov
add
daa
jns
push
imul
adc
inc
repnz
loopne
cmp
sbb
in
xor
dec
sub
mov
fisubrs
sub
dec
or
sub
negb
ds
inc
xor
loop
out
mov
push
cld
and
stos
lcall
loopne
sbb
xchg
mov
scas
add
sub
call
push
mov
insb
mov
ficoms
inc
jne
sub
jo
mov
sti
insb
aad
pop
add
sub
lcall
fdivl
sub
mov
xchg
cmp
out
cmpsl
ds
push
sub
orb
mov
adc
imulb
mov
out
cld
aad
loop
pop
xor
inc
sbb
int
push
and
mov
xchg
ljmp
test
outsb
jle
sahf
cmp
clc
add
lea
mov
xchg
add
arpl
enter
xlat
adc
add
loope
push
sbb
inc
mov
hlt
jbe
lcall
jno
ja
xor
fstpl
test
or
in
outsl
aam
ja
xchg
push
pop
xchg
pop
jns
pop
jp
jl
add
mov
test
mov
fsubrl
xor
dec
push
inc
iret
je
daa
int
cltd
and
and
call
cmc
loopne
cld
addr16
shrb
and
xor
enter
inc
mov
hlt
lods
iret
sub
out
ret
out
xor
out
int
mov
or
xchg
or
pop
xor
js
sub
push
outsl
push
test
out
cs
jo
lods
and
in
aad
or
inc
sub
xchg
sbbl
out
sbb
jns
push
aas
dec
sbb
and
jmp
cmp
push
adcl
xchg
ficompl
adc
add
xchg
rorl
push
fs
adc
aaa
fsts
ss
cmpsl
sub
xchg
imul
xchg
jno
xchg
jae
mov
mov
inc
mov
mov
mov
fs
mov
push
cmp
xchg
in
js
jae
pop
or
push
xchg
rcl
add
or
dec
and
es
push
jo
push
addr16
pop
inc
rcrb
cmpsb
adc
mov
and
sub
mov
mov
xchg
adc
mov
fsubrl
sub
lods
xlat
mov
out
fisttpll
rclb
loope
mov
shlb
adc
push
adc
jge
jne
mov
pop
outsl
jns
pop
cmp
mov
dec
rcl
outsl
xchg
ja
aad
xchg
sub
repz
jno
into
repz
pop
push
ja
xchg
pop
cmp
aam
cltd
fs
jmp
and
cmp
test
dec
mov
in
xchg
xchg
jo
inc
in
bound
imul
xchg
push
jo
jnp
push
testb
mov
test
push
mov
fsubrp
sub
inc
loopne
sbb
mov
inc
lods
pop
add
add
mov
push
lret
rorb
xchg
mov
mulb
leave
pop
mov
jns
lods
dec
sbb
sahf
fldenv
dec
neg
inc
repz
fisubrl
inc
xor
into
adcb
enter
gs
data16
into
pop
mov
in
jge
sbb
xchg
fsts
js
sti
or
pop
fmul
inc
inc
clc
dec
xlat
mov
mov
das
or
push
loopne
fsubrs
jbe
les
push
outsb
ficomps
repnz
jl
mov
jl
xchg
es
loopne
out
adc
mov
mov
rorb
or
in
xor
in
and
xchg
test
sbb
xchg
loopne
scas
jmp
push
pop
jo
push
inc
sahf
repz
out
mov
iret
lcall
pusha
mov
mov
xchg
push
or
mov
mov
or
ficompl
and
jns
cs
xchg
fcoms
leave
fnstenv
adc
and
ja
add
in
adc
loope
add
repnz
nop
and
cwtl
adcl
sub
xchg
sub
in
mov
lock
add
push
icebp
sahf
lret
xor
sub
add
lahf
jle
mov
cmp
ss
mov
jae
mov
das
inc
jns
pop
bound
cmpsl
out
jl
dec
shrl
or
movsl
cmp
dec
je
xlat
test
les
je
aaa
pop
jae
or
ljmp
inc
lods
rcl
cmpsl
xchg
inc
inc
jbe
pop
call
mov
push
cmp
inc
inc
out
pushf
daa
lcall
and
mov
outsl
fs
shll
sbbb
pop
or
shrl
imulb
scas
xor
jns
pop
outsb
inc
fldl
and
repz
cmp
jns
andb
fisttpll
shrl
adc
loope
shll
jb
js
incl
mov
cmp
and
mov
xchg
or
sub
mov
cmp
xchg
int
pop
sbb
int
mov
add
push
scas
mov
int
pop
cltd
cmp
imul
mov
test
out
dec
push
lock
push
and
clc
mov
mov
movsb
jns
pop
push
jbe
outsw
rolb
mov
leave
dec
gs
in
cmp
mov
and
add
in
push
fisubrl
xchg
mov
stc
dec
stos
mov
dec
push
sub
or
shlb
hlt
into
dec
xor
add
cmp
pop
sbb
repnz
xor
jmp
push
arpl
imul
in
rcll
inc
mov
dec
sbb
outsb
orl
adc
jbe
pushf
ss
jmp
shrb
mov
sub
adc
inc
je
fimuls
fstpl
cmp
imul
pop
jge
fmulp
sub
hlt
mov
std
arpl
test
div
roll
aad
add
or
pop
fidivrl
xchg
push
dec
dec
in
xchg
jmp
dec
clc
push
jnp
ljmp
stc
lds
dec
xchg
loop
push
mov
inc
fbld
cs
add
popa
xchg
push
xchg
add
cmp
sbb
mov
sub
loopne
fists
cmp
inc
fisubrl
test
pop
push
mov
lock
cmp
cmpsb
xor
arpl
and
cmpsb
movntq
movsl
mov
outsb
sub
cld
add
mov
pop
aam
xchg
xor
xchg
jecxz
gs
xchg
mov
test
mov
cmp
js
cmpsb
xchg
cli
outsl
cmpl
in
xchg
aad
call
inc
cmp
xchg
out
xchg
shlb
mov
divb
inc
notl
pusha
jmp
out
stos
lods
imul
cmp
dec
inc
popa
xchg
xchg
mov
jbe
xlat
push
dec
jl
les
push
ret
outsl
mov
stc
jle
add
mov
call
dec
roll
mov
adcl
xor
mov
in
cmp
fpatan
daa
cmp
fistps
pop
push
mov
or
movsl
mov
mov
icebp
pop
mov
std
sbb
sbb
cmc
mov
xchg
sbb
or
mov
push
pushf
adc
js
enter
push
mov
lahf
cmp
fcmovnu
ja
bound
loop
int3
and
pushf
aaa
mov
shlb
xchg
jp
fcomi
xor
push
mov
inc
pop
inc
cs
mov
xchg
pop
mov
lds
fcompl
sbb
cltd
push
push
jecxz
add
repnz
mov
retw
imul
lock
mov
repnz
scas
mov
or
flds
xchg
sti
sub
mov
mov
lea
jb
test
adc
bnd
dec
rcll
push
rorl
push
repnz
or
das
jae
mov
xchg
in
inc
xor
shll
pusha
inc
push
sarl
xor
cmpsl
enter
data16
pushf
cld
mov
into
repz
shll
mov
scas
pop
xchg
aam
sub
pusha
movsl
cwtl
in
cs
into
mov
std
pop
popa
and
ret
adc
cmp
test
mov
lret
cmp
and
push
es
mov
inc
or
fbstp
lret
popa
scas
loope
fstpt
sahf
lods
xchg
push
fsts
test
lcall
mov
push
hlt
aaa
sub
add
jo
ljmp
mov
fldcw
aaa
sub
sbb
aad
andl
fsubrl
mov
cltd
aam
cld
jo
xchg
movsb
adc
mov
in
xchg
aas
mov
shl
dec
xor
lods
insb
mov
xchg
mov
cmp
mov
and
push
stos
fs
xchg
add
lds
loopne
loopne
and
inc
fbstp
push
daa
jp
adc
bound
fs
aaa
pop
ja
data16
lea
daa
add
lcall
pushf
mov
xor
mov
lret
cmp
lods
out
js
xor
lods
adc
in
or
mov
xor
mov
movsb
lret
arpl
cltd
popf
push
mov
imul
jp
enter
addr16
lcall
xor
dec
dec
cmp
lret
cmpsb
orl
cmpsb
mov
jg
bound
loop
mov
cmc
jle
push
dec
adc
sbb
xchg
stos
jno
jg
dec
leave
jnp
mov
jns
call
out
imul
adcl
popa
nopl
movsl
lahf
xchg
xor
mov
xchg
iret
cmpsl
or
push
xchg
mov
inc
dec
xlat
aam
nop
negb
arpl
iret
jno
das
pushf
sub
dec
dec
rorl
push
fildl
cmc
nop
xlat
fstpt
push
or
out
inc
lock
xlat
idivb
xor
pop
test
out
dec
clc
or
xchg
jecxz
push
movsl
jle
mov
mov
aam
int
insb
and
sub
rol
mov
jp
pop
faddl
lock
jg
lock
loopne
out
xor
inc
and
mov
leave
jbe
enter
cwtl
imul
add
cmp
lret
jne
scas
xor
mov
stos
mov
xchg
dec
add
jmp
adc
insb
sbb
xor
sub
or
int3
xlat
jnp
addr16
rclb
inc
pop
lock
lcall
iret
out
and
dec
mov
pop
jo
xchg
sub
mov
fdivrl
mov
frstor
inc
mov
imul
mov
mov
mov
mov
incb
sub
test
push
or
stc
cli
add
xchg
inc
outsb
xor
xor
stos
je
and
outsb
mov
rorl
insb
lret
movsl
and
fists
adc
popf
call
sub
push
bound
or
pop
aaa
and
test
int
mov
dec
es
ljmp
add
sarl
mov
mov
mov
cmp
sti
clc
rcl
int
je
mov
imul
push
cmp
pop
cmp
rcrb
ja
fmulp
lock
xchg
dec
sub
rorb
ret
jnp
aaa
jb
push
cmovne
jle
xorl
pop
mov
ret
dec
sbb
sbb
mov
pop
or
out
jecxz
cmp
scas
dec
push
imul
in
mov
ret
cmp
mov
xorb
aam
pop
jbe
or
cmp
lahf
aaa
mov
fucomi
popa
decb
mov
or
lahf
lock
or
mov
or
inc
mov
dec
push
jl
xor
out
cmpsl
jge
jb
cmpb
lock
ljmp
mov
mov
push
inc
jp
jg
outsl
cltd
aad
mov
jb
call
mov
aam
xchg
test
mull
insl
mov
jmp
mov
xor
push
cli
jl
jmp
test
jae
jle
lods
das
or
and
add
or
test
cmp
cmp
mov
push
fmuls
mov
or
xchg
test
andb
cmp
scas
push
mov
test
fnstcw
add
fs
sbb
push
inc
out
and
inc
push
mov
dec
lcall
sub
test
lea
jne
addr16
call
int3
sbbl
xchg
xchg
and
cli
mov
mov
cmp
mov
adc
dec
or
imul
fbstp
add
or
or
sbb
es
dec
add
pop
jmp
pop
sti
rolb
push
lea
jb
mov
sbb
or
push
mov
mov
mov
aad
aad
pushf
mov
mov
and
cmp
jmp
fcmovnu
pushf
xor
sub
shll
sti
xchg
std
jmp
mov
cltd
icebp
xor
jae
repz
les
mov
adc
fmull
xchg
add
mov
jmp
stc
jl
sub
test
pop
daa
lea
lods
lea
or
xor
pop
aaa
sub
or
mov
inc
cwtl
nop
push
pop
mov
sbb
out
inc
lret
xlat
sbb
nop
cmp
mov
inc
pop
add
xchg
out
adcb
sub
clc
and
jl
ja
movl
ss
mov
lret
or
dec
out
add
sub
cmpsb
das
out
or
cmp
aas
mov
push
call
dec
outsb
mov
dec
and
jle
adc
pop
ds
jg
mov
rcrl
daa
sub
jmp
pusha
movaps
mov
scas
lock
es
jp
mov
shll
dec
ja
adc
xchg
icebp
stos
cmc
ds
movsl
icebp
test
xchg
mov
mov
in
jp
jge
gs
mov
cmc
inc
lods
sub
and
addl
data16
addl
sub
mov
rcr
and
mov
add
sub
test
adc
subl
jecxz
das
aas
scas
xchg
push
out
sub
cmp
popa
test
jb
xor
pop
sbb
cli
insb
jb
xor
push
idiv
aas
shll
push
testl
inc
outsb
cmp
ret
mov
aam
lcall
dec
pop
sub
pop
into
jo
and
push
push
xchg
sahf
movsb
call
dec
dec
jle
rol
xchg
cmp
insl
cmc
pop
sbb
xor
std
orl
sbb
cmp
cmp
loope
hlt
data16
inc
pop
mov
rcr
add
or
repnz
or
lahf
movsb
add
int
add
stos
rolb
cmc
jne
test
test
mov
lea
cltd
lods
jp
and
scas
pop
jle
sahf
mov
dec
fistl
subb
aaa
mov
loopne
push
pushf
fldcw
outsb
push
and
push
jae
and
jo
std
sbb
cs
sbb
sbb
mov
jo
mov
pop
lods
or
fstpt
fs
adc
cmc
repnz
mov
sub
and
xor
mov
mov
js
lret
pop
fsubrl
xor
xor
mov
sub
leave
addr16
xor
push
sbb
or
rclb
jecxz
sub
push
lcall
aad
idivl
arpl
ljmp
xchg
mov
fiadds
mov
insl
mov
sti
mov
mov
lods
stos
in
sub
dec
out
sub
stc
xchg
jge
and
jp
fidivrl
sbb
dec
or
xchg
sti
rclb
pushf
jl
add
ficompl
mov
push
out
add
mov
sbb
lret
in
sub
and
imul
pop
jle
lds
sub
add
or
repz
push
call
cmp
les
add
cmp
hlt
pop
xor
xor
xorb
mov
jne
jl
or
mov
scas
in
ja
mov
push
mov
aaa
xor
aaa
inc
dec
mov
inc
pop
mov
imul
adc
mov
pop
fs
and
fwait
jns
mov
add
rcrb
divb
shr
shll
push
push
or
enter
fndisi(8087
mov
xchg
stos
xchg
mov
scas
adc
xor
push
sbb
sbb
mov
movsl
in
je
popf
cmc
cmc
pop
ficomps
cli
sti
aam
mov
inc
mov
or
adc
mov
adc
test
clc
aam
in
mov
in
orl
out
or
stos
mov
and
cwtl
jno
inc
and
outsb
cltd
jmp
in
and
dec
cs
es
js
jl
xchg
mull
ja
mov
iret
dec
stos
fsubrl
rolb
dec
cmpsl
dec
mov
rcr
int3
or
icebp
and
cli
test
pushf
jle
xchg
and
cmp
fs
jmp
mov
ret
adc
popf
cmp
jmp
xchg
mov
scas
ds
ds
push
jo
mov
sub
ficomps
push
mov
popf
repz
pop
xchg
nop
cli
popf
push
loop
leave
lret
and
ret
inc
pop
ja
mov
sub
jb
or
dec
or
test
test
mov
ror
repnz
push
xor
pop
aaa
filds
mov
mov
scas
sbb
ficompl
xchg
cltd
nop
cmp
mov
xchg
cltd
call
mov
push
ljmp
dec
nop
jmp
pop
and
xchg
ret
imull
int
daa
or
insb
test
or
ficoml
ret
pop
addr16
movsb
inc
call
scas
sbb
dec
sub
fisubrl
add
add
stos
add
pusha
dec
nop
aaa
push
mov
stos
jb
add
lret
inc
pop
ja
jl
dec
cmpl
andl
mov
lret
mov
cmp
pop
xchg
pop
pop
mov
cltd
sbb
bound
add
arpl
test
ljmp
pop
xchg
lds
repnz
jle
stos
imul
in
repnz
or
out
icebp
std
int
dec
test
cmpsl
lods
add
xchg
nop
cld
jp
and
pop
rcl
dec
xchg
shl
sub
movb
or
xchg
sti
je
ret
jo
adc
mov
js
sti
lret
mov
jge
mov
test
sahf
dec
imul
test
cmp
dec
leave
jnp
sarl
call
jnp
jnp
xchg
or
jnp
mov
xor
mov
mov
outsl
jb
repz
pop
push
call
sar
push
cmp
inc
sbb
cmpsb
or
pushf
add
jb
mov
scas
and
pop
fsubr
adc
or
lret
lock
mov
jg
lcall
paddb
mov
loope
or
lock
add
add
pushf
sbb
jle
dec
aaa
inc
sbb
and
outsb
sbb
pop
lahf
jl
mov
mov
andl
push
xchg
in
das
sub
aaa
and
cmpsl
push
rcrl
repz
add
xchg
add
pushf
dec
mov
or
lret
jmp
jp
mov
imul
adc
xchg
jne
cmp
mov
clc
mov
dec
out
pop
mov
mov
dec
sbb
xor
scas
pop
int
lock
call
add
lods
movsb
pop
testl
inc
out
aas
pushf
sbb
shl
pop
stos
ds
lret
aad
jge
in
push
test
imul
inc
cmp
loop
push
pushf
mov
shl
push
sub
xchg
inc
test
mov
inc
scas
jg
fadds
adc
cmp
fnstenv
les
movsl
in
and
sub
ficoms
add
cmpsb
cmp
jb
scas
inc
add
push
je
mov
insl
xchg
sbb
rorb
lret
movsb
mov
leave
ja
adc
popa
sub
or
fimull
fsub
dec
fsubrl
cld
and
mov
daa
lahf
sbb
mov
xchg
lds
pop
push
cmc
repnz
pop
mov
inc
out
add
lods
lret
mov
test
insb
cmp
and
bound
addb
mov
or
mov
pop
call
pop
pop
sbb
popa
mov
es
out
and
push
and
insl
mov
inc
subb
ror
push
jp
lcall
imul
add
dec
data16
test
pop
push
stc
shll
test
sbb
dec
sbb
stos
js
push
mov
mov
adc
push
push
pop
and
divb
xchg
lahf
cmp
mov
mov
ja
jecxz
cmp
in
fmuls
sbb
into
idivb
into
sub
into
push
std
dec
sub
sti
jno
jg
mov
push
cmp
xchg
add
ds
pop
js
inc
sti
push
xchg
in
inc
inc
iret
mov
cmp
push
cwtl
add
xchg
das
pusha
ror
sbbl
push
cmp
push
ljmp
insb
aas
xor
cmp
xchg
xor
data16
fiaddl
aam
outsl
lods
in
dec
jge
out
out
cmp
pushf
cmpl
jne
lret
stos
push
in
dec
ficompl
push
imul
or
jge
push
push
push
dec
sub
xchg
xor
lods
mov
push
and
mov
lds
pop
mov
add
push
aaa
push
fucom
add
inc
sti
stos
out
ret
out
xchg
shll
mov
adc
mov
push
push
sub
ss
push
in
pop
mov
mov
xchg
mov
aam
pop
mov
pop
int3
lahf
mov
cli
adc
lods
jp
lods
jb
dec
insb
fildl
aas
adcl
pop
inc
adc
fdivs
sub
nop
or
shr
sub
mov
in
sbb
out
cmp
and
mov
cmp
inc
dec
dec
jno
mov
test
out
or
ret
roll
mov
sub
int
mov
push
fistpl
rcrl
test
xchg
enter
pop
addr16
lods
ret
les
or
ffree
sub
inc
sbbb
mov
push
repz
sahf
jbe
lds
sub
dec
add
lret
cmp
hlt
ss
push
nop
sahf
aas
pop
shlb
jno
incb
popa
mov
xor
out
sub
dec
cld
mov
or
loop
push
addr16
imul
and
loope
add
push
mov
add
jae
mov
push
xchg
xchg
jns
jge
aam
dec
imul
cmp
cld
jmp
jae
std
sbb
jnp
jle
and
adc
pop
loopne
jno
xlat
dec
mov
xchg
mov
dec
das
inc
push
cmc
xor
fs
jbe
hlt
jle
dec
je
outsl
repz
mov
popa
jbe
mov
int3
sbb
lds
enter
add
mov
cmpsb
and
clc
and
pop
repz
pop
in
mov
push
jno
test
dec
test
daa
addl
cwtl
inc
scas
cmpsl
rcrl
mov
or
scas
or
sbb
xchg
insb
mov
popa
test
in
gs
ret
dec
sbb
jns
enter
in
sbb
gs
jbe
loope
pop
push
outsl
push
dec
pop
pop
movsb
arpl
repz
cmp
push
repz
out
pop
jl
jl
ss
sbb
mov
pop
scas
int
adc
jae
aaa
xor
shlb
scas
cmpb
gs
scas
test
jmp
inc
das
popa
mov
nop
imul
andl
push
cmc
lods
xor
pop
sub
cmp
call
ficompl
sbb
cmp
pop
mov
pushf
decb
aas
sahf
ret
pop
push
pop
loopne
push
loope
push
mov
mov
cli
daa
stos
inc
out
sbb
pop
push
inc
rorb
fidivl
mov
into
mov
sbb
rorl
xor
loope
dec
dec
cltd
and
ds
xor
xor
fucomip
mov
icebp
es
out
xchg
push
mov
es
xchg
ja
jb
and
sub
cmovnp
les
mov
mov
sub
lock
jmp
add
je
ret
pop
jne
jle
push
xor
fwait
nop
and
aam
dec
push
mov
xchg
xor
and
adc
lods
pop
andl
or
in
push
sbb
loope
scas
mov
sbb
mov
stos
jmp
mov
cmp
pushf
out
scas
pop
in
out
jb
nop
xlat
pushf
sbb
fidivrs
fsubl
aam
mov
paddw
mov
clc
adc
sbb
jg
mov
push
sysexit
cmpsl
mov
addb
pusha
mov
lds
bound
mov
add
add
iret
dec
dec
movsb
lret
adc
cs
xlat
mov
adc
lcall
aad
xor
js
lahf
jp
aaa
movsl
jno
or
fiadds
add
shl
outsl
shr
push
and
es
test
add
fnstsw
loop
faddl
xchg
aad
stc
add
push
imul
imul
xchg
fwait
adc
sub
insb
cmp
cmp
lcall
jg
lods
ja
addr16
inc
push
dec
cld
ret
xor
fcomps
fldenv
sub
mov
mov
dec
mov
push
lcall
fwait
jns
mov
iret
lods
mov
cmp
ret
xchg
lahf
push
clc
icebp
dec
dec
fcomp
addr16
add
inc
iret
push
push
push
adc
sub
or
cmp
sbb
xchg
jg
jl
jnp
pop
xchg
inc
dec
ret
and
stc
rcrl
mov
insb
leave
movsb
pop
jmp
lret
xor
call
insb
lret
repnz
and
or
mov
mov
leave
lods
add
mov
and
sub
sbb
inc
aad
cmp
mov
stos
dec
adc
mov
daa
dec
push
push
out
es
pop
mov
cmp
insl
js
inc
cmp
mov
xor
adc
outsl
fadds
sub
pop
push
push
push
jns
stc
movsl
pop
mov
das
pop
sub
test
andl
inc
xor
aaa
sahf
ja
into
mov
add
sbb
incl
mov
cmp
in
fcompl
jnp
repz
aas
lock
mov
dec
aaa
divl
sbb
add
loopne
xchg
shl
nop
ja
testb
mov
pop
jmp
jecxz
pushf
dec
dec
popa
sub
push
cli
inc
inc
ror
jae
sti
mov
sbb
out
out
shll
xorl
ljmp
int3
xchg
push
lcall
cmpb
xchg
dec
xchg
cltd
sbb
mov
movsb
adc
iret
add
into
icebp
aad
sbb
fsts
js
fsub
xchg
or
add
test
mov
dec
mov
repnz
out
or
fiaddl
aas
cmp
jae
neg
adcb
inc
pop
push
call
pop
fdivrs
add
dec
add
jnp
xchg
outsb
and
fwait
ror
lret
pop
je
enter
das
xlat
pop
aaa
fistl
pop
jge
je
jno
rclb
cli
jne
pushf
jecxz
das
cmp
pop
pop
pop
xchg
scas
sahf
jnp
in
js
and
sub
mov
enter
loopne
jmp
xor
xor
incl
inc
push
push
and
cmp
test
idivl
inc
fbstp
dec
sub
adcb
shlb
pop
test
in
dec
test
inc
jmp
fwait
and
mov
lcall
inc
int3
ret
mov
out
push
push
pop
xchg
jno
rclb
or
mov
imul
pop
outsb
repnz
sbbb
xchg
pushf
adc
out
rcrb
call
hlt
roll
in
or
popa
adc
mov
xchg
adc
push
dec
xchg
push
imul
lea
outsb
das
pop
sbb
jb
fcompl
xchg
sbb
popl
scas
cmp
push
add
dec
fsubrs
xor
lahf
js
sub
xor
ljmp
sbb
pop
lds
mulb
xchg
popf
notb
fdivrl
rcll
xor
adc
fs
xchg
and
gs
sahf
push
jle
xchg
in
sbb
push
xlat
pop
out
js
loope
lds
in
test
xchg
fwait
call
bound
mov
sub
daa
repnz
shlb
inc
lcall
orl
fnstcw
lea
aas
popf
lret
cmpsb
mov
ljmp
stc
xor
sbb
test
adc
sbb
incl
lcall
sbb
repnz
mov
sub
sbb
pop
push
adc
scas
hlt
sbb
xlat
sub
leave
xchg
ret
incb
ljmp
lock
mov
push
clc
repz
cmp
into
out
inc
pop
les
out
call
aas
je
mov
mov
add
cmp
iret
lcall
dec
jl
dec
mov
iret
push
lods
pop
leave
gs
outsl
pushf
pusha
lret
cld
add
xchg
loope
lcall
daa
dec
jmp
shrb
xor
outsl
xchg
lock
sbb
cmp
mov
jbe
mov
or
std
jecxz
jne
lods
lret
je
cltd
in
andb
test
dec
jmp
cmc
add
or
mov
add
xor
dec
mov
ja
push
xlat
jns
jae
or
push
cmp
out
fwait
sti
inc
test
mov
push
xor
sbb
sub
scas
mov
lock
xchg
and
fstpl
or
lea
mov
jae
cmp
push
mov
add
sub
add
std
ret
add
icebp
pushf
add
rclb
cmc
xchg
imul
movsl
mov
aad
fidivl
sub
cmp
shrl
sub
adc
add
es
inc
ret
pop
iret
cmc
mov
fldenv
mov
insb
jns
xchg
imul
adc
pop
and
mov
scas
movaps
mov
fdivs
sub
stos
mov
mov
and
addr16
outsb
test
faddl
clc
cmp
sbb
int3
mov
inc
mov
xchg
jmp
pop
pop
and
aaa
sub
xchg
insb
ret
jge
aaa
jecxz
and
xlat
cs
xor
jne
mov
mov
clc
mov
test
jae
mov
and
mov
mov
mov
mov
es
cmp
add
insl
ficompl
daa
sub
xchg
cld
decl
pop
xchg
stos
testl
xchg
adc
push
jmp
sbb
cld
aaa
mov
enter
lea
repz
cmp
mov
push
int
or
pop
ljmp
mov
sub
movsb
push
mov
adc
out
bound
xor
std
push
mov
iret
add
ficoms
xor
inc
jecxz
sbb
push
mov
xchg
adc
ss
xchg
fdivr
adc
pushf
xchg
mov
outsb
hlt
adc
out
dec
jnp
pusha
adc
hlt
iret
enter
and
xorl
insl
add
iret
or
insb
lcall
sahf
movsl
cmpsb
and
or
loop
movw
push
pop
xchg
pop
xchg
dec
and
xchg
jnp
fdivrs
push
sbb
push
mov
je
pop
or
pop
imul
pop
shl
mov
xchg
push
pop
jae
scas
cwtl
push
lret
in
or
pusha
xlat
stos
mov
nop
xchg
mov
packuswb
adc
shlb
movsb
bound
sbb
sbb
jne
push
xchg
hlt
lods
sub
xchg
mov
add
inc
dec
aas
shlb
sub
lods
cmp
inc
jo
pop
mov
jbe
aaa
shlb
jge
dec
sbb
add
xchg
decb
scas
and
mov
iret
stos
rol
faddl
fiaddl
cmc
rcrl
loope
sbb
mov
jecxz
es
enter
sbbl
in
lret
dec
mov
or
pop
scas
loopne
inc
lcall
cs
mov
jge
xchg
enter
into
lret
dec
inc
xor
add
lock
jnp
inc
div
in
stos
cmpsb
push
adc
mov
in
scas
dec
insb
xchg
inc
cmp
sbb
jecxz
pop
jge
in
pop
pop
stos
xorb
mov
cmp
mov
dec
mov
test
adc
push
xor
push
out
fiadds
daa
sbb
loope
xor
adc
pop
jp
aad
or
fbstp
dec
sub
pop
mov
lods
in
push
fwait
js
std
mov
pop
sub
in
jne
mov
jmp
sub
jle
jle
mov
inc
fwait
adc
add
push
std
imul
add
mov
add
je
enter
imul
add
cmp
xchg
cmc
mov
mov
ficomps
ficompl
loop
clc
loopne
mov
data16
sti
pushf
adc
and
adc
gs
jp
cmpsb
jmp
jp
cld
inc
out
inc
inc
push
mov
inc
mov
xor
shrb
sub
push
loope
xor
push
or
lock
mov
cmp
loopne
sub
mov
jb
xchg
mov
mov
jmp
lea
bound
mov
test
in
push
jecxz
mov
stos
div
pop
pop
push
in
lret
insl
shlb
loop
out
jecxz
cs
xor
fbstp
sub
xor
cmpsl
push
daa
push
insl
dec
jmp
pop
ljmp
movsl
push
repnz
mov
jo
add
outsb
jmp
scas
jno
inc
jo
adc
leave
push
dec
stos
xchg
push
xchg
mov
push
cmp
lret
mov
outsb
orl
bsf
jnp
push
stos
in
out
scas
lods
xchg
push
dec
fcoml
jne
mov
xchg
aam
dec
iret
jnp
out
pslld
sbb
jns
call
cmpsl
rolb
in
enter
aam
add
mov
cmpsb
cmpsl
add
mov
sti
lods
push
sarb
pop
roll
inc
mov
mov
cmp
lock
inc
add
xchg
sub
incb
adc
enter
int
test
aas
fsubrl
aaa
mov
sbb
ret
outsl
mov
fcomps
dec
outsl
jb
std
clc
inc
or
pop
mov
cmp
imul
arpl
xchg
mov
ret
dec
ljmp
lds
sub
adc
xor
or
jp
adcl
sarb
cli
adc
clc
or
cmpsb
scas
mov
pop
sbb
cs
mov
leave
mov
cmp
loope
and
or
mov
js
mov
sub
mov
pop
mov
mov
push
push
dec
inc
push
fisttpl
sub
jg
xlat
mov
inc
mov
int
mov
movsl
jo
jecxz
adc
lock
out
xchg
stc
mov
leave
dec
sti
mov
fimull
popa
movsb
adc
icebp
adc
jno
xor
les
sub
insl
iret
lahf
sbb
pop
int3
loope
ret
mov
and
insl
std
dec
xchg
dec
cmp
cmp
aad
lods
fmuls
cmp
jb
in
xlat
xchg
mov
jb
je
loope
test
sub
fldenv
fistps
addr16
mov
adc
adc
pop
pusha
aaa
pop
sub
or
dec
out
mov
pop
push
ficomps
pop
cmpl
push
aaa
jmp
cmp
mov
dec
inc
lock
pop
fistl
jecxz,pt
sbb
repz
sbb
sub
pop
pop
xchg
sbb
aad
fwait
fwait
dec
xchg
cmp
xchg
sbb
mov
pop
dec
les
xor
add
dec
in
inc
or
mov
ror
lcall
mov
inc
jl
call
sbb
lods
cs
les
push
mov
subl
loop
aas
and
sub
cs
es
aaa
out
inc
adc
dec
shl
lret
pop
inc
mov
mov
jge
sub
fsubl
test
jle
ja
xlat
lahf
xor
inc
cli
shll
stos
fbstp
lds
mov
dec
call
dec
stos
inc
fsubrl
or
pop
mov
aaa
dec
jecxz
cmpsl
ret
scas
dec
popa
loopne
push
fs
pop
lahf
xchg
outsl
push
push
push
outsb
cmp
jns
in
dec
stos
cmp
push
or
xchg
pop
daa
dec
sub
test
scas
adc
push
add
dec
jmp
pop
jle
mov
dec
sbb
ja
xchg
clc
cmp
sti
sbb
js
sub
std
mov
adc
test
mov
sub
aam
mov
nop
ret
mov
out
or
cmp
mov
rcrb
or
cmp
dec
bswap
ror
mov
sete
outsb
repz
int
inc
lods
xchg
xchg
mov
lods
inc
sar
fcompl
adc
int3
mov
fldl
mov
jmp
xchg
insl
jle
sub
or
cwtl
push
ljmp
cmp
push
push
pop
leave
sub
dec
jae
mov
lods
out
cld
sbb
cmpsb
and
fisubl
les
lock
stos
mov
pop
icebp
dec
and
or
scas
mov
push
cmp
jmp
add
mov
leave
aam
cmp
pop
jp
sbb
mov
jmp
adc
dec
xchg
push
aad
cmpsl
sti
fwait
popa
sub
dec
add
xchg
cmpl
pop
lods
jbe
mov
nop
outsb
popf
mov
inc
fcomi
je
sahf
repnz
test
iret
xchg
or
mov
inc
or
nop
test
cmp
in
int3
fimuls
stc
add
icebp
xchg
mov
mov
or
out
dec
or
outsl
and
mov
fisubrs
push
fwait
cmpl
pop
inc
aad
or
pop
sub
mov
ret
int
cli
fldenv
cld
add
scas
mov
sub
test
jb
scas
pop
bound
inc
rcrl
adc
jae
mov
mov
cld
and
push
in
sub
jl
pop
cmp
sahf
mov
pop
addb
mov
mov
repnz
push
sub
xor
adc
into
xlat
or
sar
push
rclb
xchg
ficompl
jmp
adc
adc
inc
lock
push
outsl
aas
out
pop
mov
jecxz
sub
fs
cmp
push
push
cmpsb
scas
xchg
jno
cmp
push
insb
dec
or
sub
fcmovb
mov
ss
mov
xchg
adc
add
loopne
mov
das
lods
push
lds
add
imul
out
lretw
movsb
cmpsb
dec
jmp
mov
xlat
xchg
gs
and
es
in
popf
dec
mov
inc
cwtl
sarb
sti
mov
jae
dec
cmpsl
mov
mov
cmpsb
daa
fstpt
pusha
ja
in
mov
mov
lock
inc
mov
out
sub
iret
jmp
les
sub
pop
data16
sbb
push
inc
in
push
ja
stos
sbbl
sbb
inc
push
shll
stos
xor
pop
jmp
sbb
shl
sbb
xor
mov
ljmp
lods
mov
imul
jge
setae
rolb
mov
lds
loopne
push
movsb
outsl
sbb
shl
and
test
sti
pusha
mov
pop
pop
lcall
mov
setle
in
cmpb
push
xor
adc
test
icebp
dec
imul
mov
or
mov
sbb
push
in
mov
xchg
dec
insb
or
xor
push
sti
in
imul
add
dec
mov
mov
xor
inc
mov
mov
cmc
fxch
dec
push
adc
jbe
scas
shlb
xchg
insl
fs
dec
adc
sti
xchg
jnp
fstpl
scas
ret
xor
aaa
xor
jl
dec
mov
fxch
mov
adc
cmp
mov
inc
sbbb
fdivrs
push
mov
pop
pop
out
xchg
inc
leave
mov
push
sbb
arpl
insb
sub
out
push
and
mov
arpl
lret
mov
and
fxch
adc
aaa
int
mov
mov
dec
lods
push
sbb
outsb
xchg
lea
ljmp
xchg
pop
pop
data16
push
ja
fwait
add
je
sbb
inc
xchg
std
leave
adc
sub
jae
mov
lea
pop
std
sub
pop
mov
xchg
cmp
dec
aas
inc
mov
dec
dec
insl
daa
mov
xchg
mov
inc
xorb
and
clc
cmp
mov
jmp
call
sahf
into
lods
call
push
sbb
scas
xor
jae
ret
cli
out
adc
in
dec
add
adc
pop
sti
inc
fsubl
and
push
cltd
adc
stos
xor
out
and
fadds
repnz
or
repnz
fistpll
inc
jge
in
lret
cmp
lea
jnp
sub
mov
scas
lahf
filds
sti
dec
xchg
mov
push
stc
aas
cltd
mov
dec
jno
sti
cmp
add
adc
in
andb
xchg
loop
loopne
aad
js
jecxz
xlat
mov
loope
jp
jo
inc
dec
les
mov
mov
wrmsr
mov
sbb
pop
sub
lret
mov
add
repz
js
lcall
mov
cltd
les
or
repz
outsl
inc
push
sarb
scas
or
fs
pop
jl
in
in
lds
dec
pop
cmp
aas
enter
xor
leave
leavew
addr16
push
xor
in
outsl
std
xchg
mov
loope
ficoml
mov
ja
or
pop
and
push
mov
mov
in
lret
sbb
dec
push
addr16
or
inc
cld
push
fnsave
fstp
push
out
stos
jnp
fld
jne
lods
enter
xchg
sub
bound
push
into
scas
daa
push
mov
sub
pop
add
sub
sub
icebp
xor
mov
loopne
adc
lret
lods
in
insb
push
mov
and
adc
push
jg
adc
repnz
ret
push
adcl
and
cmp
push
loopne
loop
inc
int3
clc
inc
jle
cmp
jne
jne
sub
js
in
adc
sbb
loope
lods
push
imul
mov
jno
push
insl
je
aam
push
mov
and
and
int3
mov
mov
push
xchg
push
test
scas
or
rcrb
pop
xchg
add
sbb
xor
std
pusha
rcrb
ds
pusha
dec
arpl
xchg
movsl
in
sub
cmpsb
ds
loope
jae
cltd
inc
push
cmp
push
jo
sub
cmp
cmp
lea
pop
dec
xor
cltd
ja
sbb
and
rcll
jno
fcoml
lds
xchg
shrl
sub
adc
xor
sub
jecxz
pop
xchg
xchg
push
dec
sbb
lds
imul
mov
push
cmp
mov
mov
ljmp
testl
mov
mov
pusha
sub
jge
sbb
xor
xor
movsl
iret
in
fldt
lods
inc
in
pop
jg
cmpsl
test
adc
dec
insl
push
adc
mov
psubq
sub
or
daa
xor
mov
xor
std
aad
cmp
pop
insl
fdivl
addr16
addr16
xor
fcmovbe
xchg
xchg
les
dec
add
cmp
dec
movsl
inc
adc
mov
out
iretw
int
test
jb,pt
sbb
mov
xchg
pop
pop
push
in
shll
sub
out
mov
cmp
adc
adc
adcb
std
pop
rcrb
nop
cmp
ficomps
les
adc
dec
push
lahf
pop
push
lret
je
mov
stos
adc
loopne
xor
cld
das
fimull
loopne
neg
mov
rolb
leave
test
in
lds
dec
mov
cmpsl
subl
or
jnp
in
xor
mov
inc
test
gs
mov
jbe
xchg
adc
orb
mov
leave
int3
aad
loopne
movsl
cmp
xor
mov
clc
fsts
repnz
inc
aaa
sti
xor
or
jecxz
and
in
xchg
inc
add
mov
sbb
cwtl
adc
mov
mov
stos
outsl
and
fnstcw
in
adc
ret
popf
add
pop
mov
mov
cli
mov
mov
sbb
or
out
int3
add
or
cmpsb
shlb
jecxz
cmc
fisubrs
movsl
xchg
insb
push
bound
mov
bound
inc
pop
or
lea
repnz
cmpsl
aam
mul
jo
pop
idivl
sbb
xchg
dec
fstps
mov
xchg
or
enter
ja
movsl
je
mov
test
ljmp
jl
dec
push
mov
push
in
jns
mov
sar
cmc
mov
inc
sahf
push
mov
mov
loope
mov
cli
sub
stos
es
jns
sahf
mov
mov
or
loop
mov
or
cmpsl
push
int
mov
test
push
cmpsb
cmp
mov
shrb
jge
push
popa
sahf
or
call
adc
clc
test
inc
sti
repz
cmpsl
mov
jb
pushf
add
lock
push
shlb
jmp
fists
popa
pop
lock
inc
add
in
int3
out
stc
movsb
cs
out
out
mov
pop
das
add
pop
imul
cmp
les
aam
cmpsb
dec
outsb
and
pop
inc
mov
in
mov
rclb
mov
mov
lcall
and
sbb
push
leave
adc
push
pop
daa
fnstenv
idivb
nop
jle
popf
std
leave
lret
push
iret
int
push
sbb
jne
pop
loop
into
adc
ss
pop
cwtl
push
xor
jae
xchg
jo
xorb
sahf
bound
add
mov
cld
dec
call
inc
inc
or
aas
mov
inc
out
in
sub
pop
addr16
outsl
mov
dec
daa
pop
inc
rcr
aaa
daa
into
ljmp
add
sub
adc
xor
fdivrs
dec
lock
pop
aas
cmpl
push
and
sbb
sbb
mov
insb
jnp
sbb
andl
out
es
jge
insb
cwtl
outsb
fs
pop
and
fnsave
add
repnz
inc
cmp
cmp
andb
push
xchg
aaa
or
test
inc
aaa
push
or
pushf
xlat
dec
pop
jp
rclb
adc
or
call
jmp
insb
mov
aam
call
pop
decl
push
ret
dec
push
xchg
stc
rcrb
xchg
out
js
mov
cltd
sub
imul
cmc
repnz
mov
add
sbb
pop
call
inc
pushf
pop
lock
cmp
sti
fnsave
out
inc
push
cmpsl
sub
bound
cmpsl
shll
mov
fwait
out
cmp
and
jo
sbb
push
pop
iret
inc
popa
in
sbb
orb
pop
js
iret
mov
shlb
inc
cmc
out
mov
mov
scas
movsb
dec
sub
inc
ja
fldt
mov
and
inc
sti
test
dec
mov
outsb
lods
push
fdivl
fiadds
push
adc
test
shll
ja
push
xchg
sub
add
daa
pushf
cmpsl
sahf
dec
push
addb
mov
jg
adc
lret
mov
fimull
movsb
inc
out
sub
loopne
arpl
cltd
xor
mov
popa
dec
or
add
inc
shlb
rcll
inc
stos
dec
xchg
fs
in
push
ret
adc
sbb
or
xor
shll
cmp
or
and
mov
int3
and
repnz
sarb
hlt
jo
in
push
fcmovb
ret
lock
mov
sub
push
and
sbb
add
xchg
popa
inc
mov
dec
jl
les
mov
fs
mov
fwait
andl
adc
das
in
sti
sbb
adc
pop
out
pop
xor
mov
insb
into
cmpsl
bound
inc
jl
xchg
or
aam
aaa
movsb
test
rorl
lret
lods
ds
sbb
leave
xchg
hlt
push
imull
push
mov
dec
pop
add
loopne
sub
in
outsl
rolb
adc
in
lods
inc
fmuls
pop
dec
and
mov
stos
inc
aad
in
mov
aaa
push
add
mull
incl
sbb
lcall
in
dec
test
in
sbb
or
xor
push
xor
mov
cwtl
sub
sbb
in
les
jmp
cwtl
ljmp
mov
dec
mov
jae
push
sbb
out
mov
in
stc
scas
inc
lcall
cmp
mov
mov
ljmp
xchg
add
in
pop
es
stc
mov
adc
jmp
mov
adc
aas
pop
push
js
stc
loop
xchg
sarb
dec
cmp
push
stos
dec
into
cs
xlat
push
xchg
pop
addb
cmp
xchg
mov
jmp
addr16
das
inc
out
pop
mov
adc
sbb
sbb
stos
mov
aas
xor
cmpsb
aas
into
lods
pop
mov
stos
jle
in
stc
add
clc
roll
out
cmpsb
into
and
clc
mov
ss
jmp
jmp
xchg
xchg
jl
fsubl
or
xor
dec
pusha
insb
push
cmova
and
outsb
mov
repnz
jle
popf
dec
xchg
daa
jge
mov
mov
sti
test
jmp
in
lret
ret
mov
imulb
pop
sbb
in
xchg
jge
dec
jmp
test
mov
mov
add
test
test
xchg
add
dec
mov
and
shll
or
or
leave
rcr
adc
push
xchg
pop
mov
imul
int
push
data16
pop
xor
add
enter
adc
mov
xlat
and
int
or
push
jo
dec
arpl
pop
loop
and
inc
in
push
lahf
adc
mov
push
mov
mov
push
cld
push
dec
lock
adc
pusha
push
mov
loope
cld
mul
add
cmp
dec
pop
push
movaps
ret
bnd
les
mov
nop
adc
xchg
push
cmp
push
arpl
mov
mov
mov
in
pop
add
and
je
mov
jmp
dec
or
jl
jae
sbb
flds
xchg
aam
iret
in
testb
movsl
adc
stc
aas
mov
sahf
stos
pop
test
add
arpl
and
xor
dec
and
fdivrl
dec
ficoml
js
in
testl
pop
jne
shlb
jae
pop
or
push
adc
cltd
arpl
xchg
mov
icebp
push
insb
mov
push
lock
test
pop
mov
movsl
adc
jle
lods
mov
ss
push
fidivrs
int3
in
ss
push
shlb
cmp
xchg
mov
sub
push
adc
idiv
movsb
inc
mov
mov
cmp
push
and
stos
sbb
mov
mov
jno
and
push
in
add
pop
insl
shr
cmp
sub
xchg
roll
loopne
test
stos
sub
mov
mov
sbb
stos
loop
sbb
xor
ja
adc
imul
mov
hlt
shr
in
in
pop
sub
adc
add
ljmp
icebp
xorb
mov
rcrb
int
inc
mov
data16
jnp
xchg
mov
dec
insb
cmp
or
lret
inc
sub
mov
or
adc
mov
and
lret
push
or
call
or
dec
shll
data16
loop
gs
sbb
pusha
sahf
or
or
fidivrl
lods
scas
test
fldenv
jmp
sahf
jp
or
mov
adc
xchg
xchg
cmp
lea
enter
aam
inc
shl
inc
cmpsl
adc
pop
cmp
cwtl
fwait
inc
sarl
pop
inc
xor
cmc
cmp
bound
mov
jp
fnsave
lods
push
test
out
and
mov
push
pop
cmpsl
push
or
cmp
stos
jle
lock
pop
mov
pop
xchg
not
jle
pop
push
ds
fsub
jle
aad
ljmp
es
sbb
pop
cltd
stos
add
shrd
sarl
mov
pop
push
xchg
iret
iret
lea
cmp
scas
loopne
lret
or
push
gs
xor
nop
add
or
imul
ret
sbb
insl
sbb
pop
movsb
jl
and
ljmp
push
loope
testb
fsubl
push
jne
out
fildl
xchg
inc
test
xor
and
sbb
pop
scas
testl
ljmp
pop
fs
xchg
sarb
sti
lock
mov
stc
loop
test
add
arpl
ljmp
fstl
lock
sub
xor
loopne
mov
aaa
in
lahf
out
push
xorl
mov
lock
jmp
or
xor
mov
xor
and
mov
xorl
dec
popa
clc
inc
pop
add
rcl
cmp
sbb
dec
inc
cmc
out
gs
jae
cmp
icebp
aaa
neg
fbld
ds
mov
or
add
std
rcrb
lock
and
or
ret
mov
mov
jl
xchg
xor
sahf
and
addr16
push
xchg
gs
ja
lahf
xor
icebp
std
and
pop
add
and
jbe
dec
pusha
decb
mov
dec
or
xor
imul
mov
xchg
sub
inc
scas
pop
pushf
xchg
mov
ret
pop
mov
and
xor
sub
mov
jo
cmp
jno
movsb
sbb
arpl
imul
cmp
mov
adc
fdivrl
add
incl
push
out
es
es
lods
xchg
pop
sbb
add
sub
push
out
xlat
in
icebp
adc
and
imul
stc
push
xor
es
cwtl
fwait
outsb
std
sub
sbb
add
fmuls
xor
movsb
cmpsb
push
jns
sub
xchg
or
dec
jae
or
jl
dec
jno
mov
inc
std
cmp
jno
add
xor
or
loope
leave
comiss
or
jge
inc
shl
loop
stos
ljmp
cltd
add
mov
sbbl
rcll
lret
pop
push
mov
push
cmpsl
jno
and
push
int
test
jecxz
insb
aas
call
rclb
xchg
cmp
in
dec
dec
sub
lock
fidivl
lret
mov
jnp
stos
mov
pop
out
ss
dec
adc
cmp
stos
add
addr16
push
in
xchg
jns
cmp
je
inc
xor
mov
iret
xchg
add
push
shrb
andb
aad
xchg
dec
xchg
cmp
jle
sbb
push
push
pushf
out
insb
popa
fs
mov
cwtl
mov
mov
mov
imul
enter
test
test
ds
mov
lods
sarb
aam
movsb
js
loopne
dec
bound
je
sub
pop
add
je
movsb
push
test
in
popaw
sbb
cmc
mov
cmpsl
mov
scas
or
pop
add
ljmp
jmp
mov
lahf
push
dec
xor
mov
fldt
mov
mov
push
loop
jp
or
shll
dec
call
loope
inc
sti
cmp
stc
jge
dec
popf
xchg
cmp
xorb
popa
xchg
jae
pop
shrl
push
mov
sub
cmp
in
lcall
jp
lahf
xor
cltd
sub
add
mov
daa
cmp
push
or
or
pop
jne
ljmp
repz
xchg
sbb
cltd
insb
pushf
mov
or
pop
mov
loopne
xchg
add
add
mov
arpl
mov
cmp
outsl
sbb
aam
into
dec
fnstcw
in
mov
add
jg
xchg
xchg
inc
inc
jg
jae
or
adc
incb
enter
fdivrs
sahf
adc
ja
lea
mov
in
cmpsb
inc
mov
xchg
shlb
sahf
cmp
inc
pop
mov
inc
sub
mov
repz
sub
fsubs
inc
xor
xchg
movsl
pop
sub
repz
mov
dec
xchg
cmp
dec
or
insb
pop
mov
push
mov
pop
xchg
ja
and
push
daa
push
ljmp
enter
mov
sub
sarb
mov
inc
clc
imul
adc
mov
xchg
shl
mov
add
or
shl
fistl
add
push
frstor
pop
push
cltd
cmp
test
in
andb
adc
push
adc
push
pop
imul
loop
loope
fidivrs
cmc
pop
lret
dec
sbb
clc
cmpsl
or
scas
sbb
pop
push
sbb
xchg
in
das
cwtl
add
xchg
pop
sbb
pop
xchg
jl
and
push
push
inc
loope
jns
xchg
mov
xchg
mov
and
mov
adc
inc
inc
sar
xor
repnz
int3
sarl
idivb
jg
data16
jb
cmp
xchg
pushf
mov
cmc
xchg
pop
push
gs
push
cmpl
or
stos
jbe
pop
inc
add
decl
jnp
or
lods
movb
push
loopne
mov
mov
aad
add
xor
jnp
mov
push
ljmp
test
mov
dec
ret
cmp
and
je
lahf
shr
mov
mov
mov
hlt
sub
jo
push
aad
int3
les
sbb
jb
pop
les
mov
add
js
les
test
lods
call
push
and
daa
mov
and
pushf
and
pusha
das
adc
xchg
jle
mov
sub
jmp
in
or
inc
push
call
orb
in
int
lds
ss
xchg
jmp
mov
sbb
mov
repnz
je
xchg
push
cmc
and
outsb
xor
cmp
aaa
incl
xor
inc
lahf
fstpt
adc
arpl
xor
stos
fidivs
cmp
aad
cmp
mov
jns
movsb
sub
jbe
leave
xor
add
into
and
fdiv
xor
shlb
mov
push
push
int
dec
dec
jo
testl
push
ret
movl
adc
dec
cmp
int
adc
push
jbe
dec
mov
fcoms
loop
inc
mov
jno
push
or
add
or
mov
mov
popf
data16
sbb
stos
loopne
insb
mov
xor
dec
clc
into
push
and
xor
dec
cmpsl
dec
inc
fidivs
inc
arpl
pop
ss
divl
push
notb
in
js
pop
xchg
adc
and
xchg
fiaddl
fldl
mov
jmp
cld
inc
fisttpll
je
les
daa
addl
inc
pop
js
fcompl
outsb
insb
in
notb
cli
and
idivl
nop
arpl
and
cmp
and
pop
popa
scas
loop
sahf
shrb
cmpsb
das
jbe
sbb
scas
adc
jae
push
push
enter
mov
fldl
pop
iret
or
add
mov
jbe
leave
sub
stc
aad
icebp
lods
inc
int3
fwait
push
les
push
lcall
sbbl
and
sub
xor
leave
lret
jecxz
ds
adc
ret
loope
jge
rorb
lods
fwait
jle
shll
dec
shr
negl
ret
adc
mov
std
mov
jge
fisttps
xlat
sbb
or
cmpsb
pop
clc
ja
pushf
xchg
popf
lods
andl
xchg
leave
jnp
test
dec
rcrb
lret
lea
es
xlat
xchg
fcoms
cwtl
outsl
arpl
jmp
mov
hlt
sub
mov
push
mov
insl
in
aas
repnz
jae
and
xchg
xor
pop
aad
nop
out
push
xor
inc
pop
pop
clc
add
dec
xchg
push
add
pop
sbb
std
xchg
push
lods
pop
and
pushf
sbb
ds
inc
sub
xchg
mov
fistps
out
mov
mov
jb
inc
scas
out
fisubs
je
mov
cmp
into
arpl
popf
mov
subl
movsb
imul
ret
aad
push
and
and
into
lahf
push
int3
test
inc
jno
mov
test
xor
imulb
nop
inc
ss
int3
call
in
mov
sub
or
lea
xchg
lock
mov
pop
sub
sbb
fadds
cmp
aad
test
xlat
pusha
outsb
loop
pop
jecxz
jno
inc
jnp
adc
or
mov
add
fnstcw
cmp
test
jo
mov
adc
pop
repz
insb
push
push
mov
ret
movsl
mov
ljmp
jp
xlat
xchg
mov
pop
dec
pop
insl
fisubrs
sbb
or
in
xorl
into
and
popa
xor
jge
xchg
lds
int3
ficoms
lahf
mov
stos
mov
lods
xchg
cmp
mov
sub
out
rclb
pop
das
lcall
jae
push
addr16
lock
and
sqrtps
fs
pusha
or
xchg
pop
or
test
fstl
out
dec
loopne
jb
hlt
ret
sbb
sbbb
movsl
adc
fwait
push
repz
test
sub
pop
fcmovb
sub
cmp
pop
dec
dec
arpl
mov
out
mov
std
jne
xor
mov
pop
neg
loope
mov
stos
ja
inc
mov
jae
or
pop
pop
cld
cmpsl
nop
adc
mov
mov
sarl
xor
pushl
cmp
fcoml
mov
pop
push
ror
jmp
test
ss
data16
in
push
jno
stc
testb
cld
inc
pusha
or
subl
jno
pop
adc
mov
mov
fisubl
pop
stc
lret
std
shlb
das
jmp
adc
xchg
movsl
es
js
movsb
and
push
out
dec
clc
xchg
movsb
sub
lahf
es
push
ja
cmc
adc
repz
add
inc
insl
cli
xchg
cmp
push
mov
popf
pushf
xchg
jns
repz
inc
shll
add
lahf
mov
jg
cmc
xor
into
mov
push
jecxz
cwtl
daa
movsl
inc
nop
nop
adc
addr16
sub
fs
push
popa
enter
cmpsl
rol
and
mov
sbb
sbb
iret
cltd
jmp
xor
in
lret
mov
or
inc
mov
cmc
xchg
in
roll
lret
lret
cwtl
mov
scas
mov
jg
push
cmc
sbb
jp
push
call
sbb
jae
push
inc
or
mov
jne
inc
xchg
arpl
or
fldcw
xor
mov
inc
mov
movq
ljmp
xor
cld
pop
mov
inc
les
pop
shlb
icebp
in
mov
or
pop
loope
sahf
std
push
mov
std
test
aam
in
pusha
cld
cmp
ljmp
and
pop
hlt
sub
push
sub
int
mov
bound
int3
inc
loope
imull
inc
into
leave
xchg
jle
cmp
mov
rorb
or
out
iret
rcr
rcl
mov
test
adc
leave
lods
dec
adc
test
mov
cld
add
mov
push
inc
inc
push
shlb
sbb
pushf
loope
mov
pop
lea
xchg
push
mov
int3
cs
lods
fstl
insb
dec
test
push
fwait
cld
xlat
ret
repz
jo
xor
add
adc
divb
jns
inc
sahf
cmp
hlt
aad
sbb
into
dec
xor
mov
or
call
jmp
sub
dec
loopne
imul
jne
das
adc
fnstenv
mov
pushf
jo
jecxz
pop
sub
lret
xchg
mov
cmp
and
push
lret
inc
int3
fstl
pop
adc
mov
mov
push
aam
inc
push
iret
cmpsl
pop
dec
shll
cld
dec
sub
mov
frstor
mov
nop
sub
or
mov
sub
lods
fiadds
das
inc
or
cmpsb
jno
pop
enter
sahf
sbb
lods
adc
je
or
addr16
loopne
xchg
sub
jecxz
jecxz
xchg
fcoml
pop
les
sbb
mov
iret
xchg
and
insb
xchg
mov
pushf
lds
push
add
mov
pop
add
adc
mov
faddl
icebp
mov
test
adc
mov
cwtl
pop
dec
inc
scas
push
sbb
int
sub
sub
xorb
mov
mov
sbb
sti
int
and
xlat
and
sbbb
pop
xchg
fdivrl
cmp
mov
cmp
push
cmp
sbbl
imul
xchg
lock
pop
add
ljmp
sar
in
sub
mov
nop
jns
adc
cmp
frstor
es
movsl
cli
call
arpl
jae
add
pop
jb
lahf
dec
sub
mov
adc
data16
rcl
add
pop
or
les
lds
add
cld
std
lret
fsubrl
cli
pushf
sbb
pop
mov
leave
adc
push
push
xchg
mov
jmp
ds
push
add
xor
test
testb
stc
movsb
sti
mov
mov
cmpsl
fisubrl
dec
cmpsb
inc
jnp
and
aam
cmp
mov
rcll
mov
push
mov
scas
xchg
stc
mov
mov
int
dec
xor
rcl
mov
hlt
and
js
stc
ja
sahf
adc
sahf
into
mov
loopne
and
lahf
out
jmp
lea
movsl
int
xchg
cmp
bound
daa
outsb
roll
fdivr
adc
jmp
mov
sbb
cmp
inc
test
or
les
jge
mov
mov
inc
insl
ret
es
imul
nop
jno
mov
push
imul
xchg
mov
call
outsl
and
mov
roll
fsub
cs
rclb
sbb
mov
outsb
loopne
mov
pop
leave
pusha
adc
xchg
pop
imul
bound
insb
loope
lcall
mov
int
xlat
aas
mov
cltd
jae
rol
cmp
mov
ret
push
mov
and
fldl
addr16
or
pop
xor
or
sub
mov
ficoms
lret
pop
mov
push
cmpsl
pop
daa
and
add
jg
mov
sub
dec
mov
push
or
xchg
and
cmp
bound
xor
movsb
cmpsl
sbb
mov
fldt
out
fs
dec
dec
xor
jns
cmp
xchg
je
jbe
subb
xor
inc
pop
add
and
or
std
xorb
xor
jmp
and
out
je
sbb
mov
dec
addr16
ja
sub
repz
pop
jecxz
test
loope
ret
cmp
sbb
dec
lds
push
and
xchg
sti
fisubs
dec
xor
adc
mov
or
stc
add
shlb
xchg
cmpb
scas
sbb
push
rclb
and
xor
adc
stos
cs
scas
and
push
mov
pop
push
scas
movsb
lock
xchg
or
xchg
je
ja
ljmp
nop
sub
and
xchg
inc
imul
inc
push
fisttps
rorl
and
pop
fcoms
pop
std
jmp
divl
jno
adc
sbb
add
and
mov
cwtl
lcall
or
sub
fwait
imul
add
pop
in
xchg
mov
xchg
and
dec
sahf
or
pop
adc
fcompl
jle
pop
sti
fsub
sbb
stos
push
imull
imul
fdivl
sbb
mov
std
lahf
mov
ja
and
sti
fiaddl
xchg
xlat
and
cmp
mov
mov
sub
movsl
dec
cwtl
sbb
fnstsw
pavgw
stos
push
iret
popl
cmp
sub
adc
mov
inc
jecxz
mov
leave
mov
icebp
push
dec
xchg
xchg
repz
xchg
rcrb
lods
movsb
adc
mov
orb
shlb
pop
push
insl
mov
mov
ffree
or
push
test
scas
mov
and
push
ret
xchg
lret
mov
mov
dec
xchg
xchg
insb
pcmpgtw
pop
int
bswap
jae
xor
out
out
or
mov
xchg
icebp
lret
add
adc
sbb
inc
inc
inc
dec
es
loope
jg
sti
mov
test
shll
xchg
outsb
dec
arpl
mov
add
adc
stos
ficoms
daa
je
lods
sbb
mov
jecxz
aad
pop
xchg
xchg
cmp
lea
mov
dec
call
pop
push
adc
das
repz
enter
pop
sub
cmc
int
lahf
bound
rcrl
gs
xchg
inc
outsl
rclb
cld
je
add
mov
rcll
dec
icebp
fsubs
cmc
lock
pop
aad
fisttps
fwait
scas
cld
pusha
and
sbb
fstps
pop
leave
inc
mov
pushf
std
outsl
xchg
add
jo
or
repz
ret
mov
pop
mov
inc
call
sbb
mov
movsl
push
in
push
jge
nop
bnd
jmp
pop
dec
or
xor
pop
cmp
stos
pop
jp
mov
sbbb
in
jns
ja
or
shrb
cmp
out
out
cmp
test
lret
jmp
lea
pusha
jb
sar
sahf
mov
sbb
out
dec
add
sub
daa
and
push
inc
fcompl
inc
aad
sbb
ss
movsl
xor
mov
jecxz
xlat
mov
out
dec
cltd
mov
mov
test
push
inc
dec
dec
int
adc
sub
out
cwtl
inc
std
and
mov
lret
lcall
rclb
mov
ret
mov
fwait
adcl
add
out
pop
leave
xor
xchg
sar
cmpsb
add
xchg
jecxz
pop
jge
cmp
jno
mov
fnstsw
pushf
imul
imul
dec
ds
lcall
mov
ret
dec
xchg
dec
xor
jae
xor
add
movsb
aad
pop
xor
std
xchg
add
sarb
leave
dec
aaa
dec
jns
outsl
adc
nop
mov
pop
je
and
mov
scas
in
pop
mov
or
andl
sub
shl
aam
cli
ret
pusha
and
xor
add
push
xor
add
inc
jecxz
inc
jmp
mov
pop
roll
pop
add
jne
insb
inc
sbb
inc
cmp
and
loop
jae
cld
into
inc
imull
imul
mov
jo
out
xlat
imul
dec
mov
mov
mov
push
hlt
pop
in
in
nop
popf
jecxz
popa
push
xor
xchg
push
loope
icebp
jmp
test
out
roll
pop
nop
lahf
sbb
subl
or
imul
dec
or
icebp
inc
scas
mov
test
inc
add
sub
jecxz
sbb
cmp
fists
push
xor
add
mov
jae
lea
mov
sbb
push
push
pop
xor
rorl
jmp
jp
fisubrs
or
mov
mov
inc
cmp
xchg
clc
imul
cltd
cmp
push
iret
xorb
xrelease
lock
sub
jg
ds
arpl
xor
stc
ja
jecxz
jp
or
cltd
fs
icebp
xor
hlt
bound
add
dec
xchg
adc
arpl
adc
mov
fnstsw
mov
mov
out
ret
adc
leave
out
cmp
xchg
int
test
stos
insl
inc
subb
push
sbb
int
imul
and
aaa
popf
outsw
jo
and
leave
dec
cmpsl
add
repz
rorl
xorb
in
out
loop
dec
in
ret
mov
adc
mov
out
int3
or
xlat
push
gs
in
sbb
mov
jnp
cli
sub
cwtl
rcll
in
cmpsb
pusha
outsl
push
push
test
jo
daa
or
test
popa
cmp
fiadds
jno
imull
cmp
inc
mov
inc
xchg
pushf
shl
lock
mov
lods
clc
xchg
aaa
fs
cltd
ds
sbb
scas
add
mov
xlat
xchg
xor
ret
jae
sbb
lods
and
jae
into
popa
test
inc
lret
rol
in
ret
mov
and
scas
sbb
sub
inc
adc
adc
inc
repnz
dec
push
jl
push
ljmp
cli
fidivrs
loopne
fwait
inc
call
jno
call
cmp
das
push
aas
inc
sbb
outsb
xor
or
icebp
and
es
dec
and
cmp
pop
xor
xchg
loope
out
jne
test
popa
aam
sub
dec
pusha
idivb
fldt
and
and
je
icebp
movl
push
hlt
hlt
pop
jle
push
and
jp
mov
and
mov
ds
iret
dec
test
xor
fisubrl
mov
das
stos
dec
outsw
jns
fidivrs
out
mov
repz
sub
dec
xor
pop
pop
les
loop
push
dec
push
xchg
orb
into
and
jnp
cmp
fs
pop
stos
sub
bound
pop
fmulp
jae
pop
lock
lcall
inc
xor
cmp
sbb
outsb
in
pop
icebp
push
insb
or
jge
mov
aaa
push
dec
mov
push
dec
mov
sarl
arpl
sbb
sbb
ljmp
push
orl
clc
mov
xor
stos
push
hlt
lea
fsubrl
sub
test
mov
sti
jmp
and
clc
testl
test
das
xchg
pushf
push
push
insl
cli
mov
arpl
jnp
into
shrb
ret
adc
loopne
test
push
gs
adc
fists
fistpl
rcr
sub
out
jb
pop
cld
cmc
pop
adc
or
xchg
or
orb
jae
in
ja
loopne
fs
ficompl
jne
mov
add
mov
xchg
test
insl
pusha
mov
fwait
js
push
ljmp
sub
cld
fdivs
jne
lahf
add
mov
in
daa
in
or
and
test
mov
push
lahf
lds
push
add
dec
jno
sarb
mov
pusha
inc
inc
divb
xchg
jl
push
das
lock
add
imul
lds
outsb
and
adc
lcall
push
pop
xchg
or
or
cltd
mov
pushf
adcb
push
std
outsb
aaa
mov
stc
mov
pop
cmp
ret
mov
jg
pushl
lret
pop
pop
xor
icebp
ret
mov
pop
cli
mov
sbb
bound
pop
repz
pop
jl
pop
pop
mov
stos
jge
push
int3
sahf
push
dec
mov
arpl
jns
imul
addr16
int3
in
push
icebp
jb
std
les
and
sub
test
icebp
mov
jb
in
sbb
out
xor
cmpsb
sub
lds
shl
push
shrb
push
rcrl
sbb
stc
into
int3
mov
out
js
js
sti
mov
out
js
inc
lods
mov
pop
insb
loope
mov
icebp
ss
mov
scas
adc
ret
test
push
out
dec
fists
mov
adc
xchg
pusha
into
imul
je
cltd
clc
xchg
push
pushf
mov
lea
cli
arpl
dec
mov
movsl
push
xor
data16
imul
in
fimuls
pop
xchg
cld
clc
inc
imul
in
lcall
loopne
sbb
sub
inc
clc
sbb
ja
jg
sbb
dec
pop
test
mov
push
add
inc
xor
mov
push
pop
scas
push
mov
push
je
mov
mov
cmp
xlat
inc
push
add
dec
sub
insl
cld
adcl
fistl
data16
and
pop
out
fnstenv
into
adc
mov
aaa
push
add
pop
cwtl
rcll
out
insb
loop
push
xor
sub
ret
push
mov
xor
xor
cld
push
cmpsl
pushf
sub
inc
ret
paddsb
inc
cmp
mov
outsl
jge
adc
inc
pop
cmp
ret
ret
push
jp
repz
sub
mov
scas
test
addr16
fcoms
push
dec
xchg
ds
fwait
inc
lods
push
ss
cmp
les
enter
in
cld
mov
je
xchg
out
out
scas
lret
inc
fwait
sbb
sub
and
mov
imul
arpl
ja
enter
mov
call
cmp
xchg
mov
ja
push
dec
mov
pushf
mov
movsl
shll
push
inc
lods
mov
lret
arpl
popa
jno
jmp
testl
sbb
push
sarl
adc
jmp
push
scas
insl
and
pushl
lret
pop
jecxz
out
jne
pop
dec
dec
jmp
dec
shl
mov
xor
jae
push
notl
std
mov
in
ret
mov
daa
adc
add
mov
push
sub
jmp
int3
adc
dec
xor
ss
sub
push
mov
dec
lea
push
adc
push
and
andb
aaa
test
lds
cmp
dec
int3
or
xor
sub
gs
jb
or
jnp
in
push
cmp
fwait
adc
inc
ljmp
out
lcall
sub
jne
add
fnstsw
lods
mov
mov
cwtl
jbe
out
fnstcw
and
cmp
lods
aas
jne
out
daa
xlat
inc
aas
and
push
sbb
mov
sbb
sti
inc
mov
movsl
mov
mov
xchg
ret
sub
in
pop
mov
int
mov
andb
and
push
jmp
dec
add
pushf
call
cltd
adcb
leave
imul
lahf
fnstenv
aas
or
lcall
xor
mov
push
mov
inc
pushf
mul
lds
mov
mov
outsb
mov
pop
ret
shrb
inc
inc
rorl
mov
and
mov
in
das
cmp
and
stos
push
popa
stos
cld
stos
cmpsb
push
mov
push
mov
dec
xchg
sahf
repnz
imul
lret
ss
mov
mov
push
pusha
fnstsw
xor
popa
adc
aad
movsb
sub
cli
inc
leave
dec
adc
xor
dec
lahf
icebp
xchg
int3
sbb
cmp
pop
adcb
lret
test
bndldx
lcall
xchg
sbb
dec
lahf
jmp
fmull
add
inc
add
mov
ja
xor
or
sub
and
sub
outsl
outsl
xchg
in
sub
in
dec
dec
ds
repz
xchg
call
inc
xor
jl
sbb
test
and
incl
sbb
xchg
adc
sub
jl
loopne
rcrl
or
jmp
pusha
dec
xor
int3
rcrl
ljmp
mov
inc
inc
psrlw
fldt
int
loopne
sbb
sub
inc
das
das
dec
xchg
aaa
inc
cmovge
lret
mov
xor
stc
mov
fcomps
enter
aas
mov
xor
out
mov
cmc
jne
inc
sub
mov
sti
outsb
aaa
sbb
mov
sarb
les
sbb
lods
push
jnp
push
pop
mov
leave
pop
pop
jo
les
test
popa
cs
cmp
push
mov
push
mov
adc
pop
push
push
int
mov
dec
mov
sub
mov
outsb
pop
mov
xchg
orb
lock
xchg
dec
jp
adc
test
mov
in
lods
adc
mov
sub
push
cmpsb
imul
lods
rorb
xchg
jnp
sbb
cmpsl
stos
nop
push
and
movsl
in
mov
sti
iret
mov
insl
test
jb
pop
int
loopne
mov
test
push
imul
cmp
mov
xor
and
stc
ret
stos
pop
mov
sub
jecxz
sub
into
mov
movsl
adc
push
shlb
pop
jge
lods
into
jp
cmp
aad
subb
cmpsl
stos
push
or
mov
rcrl
popa
test
movl
in
in
lds
and
sub
adc
aam
and
mov
insb
scas
sbb
and
bound
in
dec
popa
scas
pop
push
mov
dec
xchg
or
scas
cmp
mov
xor
insb
add
jbe
dec
mov
je
ret
and
or
icebp
out
cli
shl
xor
jp
pop
fiadds
inc
or
xor
aam
cmpb
jne
mov
jmp
hlt
push
in
mov
add
test
je
inc
or
test
mov
inc
and
mov
mov
adc
cmpsb
add
cmp
xchg
push
ljmp
adc
mov
loop
gs
cli
pop
gs
les
mov
gs
sbb
out
xabort
jmp
or
addr16
fcoml
jo
lods
dec
lds
lods
insl
push
popf
jns
adc
sub
cs
mov
cmp
sbb
pop
scas
mov
sti
cmpsb
sti
daa
jecxz
dec
pop
push
std
dec
push
data16
scas
push
jl
mov
mov
push
jbe
inc
mov
sbbb
jno
in
sbb
cmp
int3
sarl
imul
stc
dec
inc
aam
or
ljmp
sub
push
push
push
repnz
xchg
cld
aas
out
int3
sub
jle
jge
cmpsl
sub
outsb
push
xchg
inc
mov
loope
icebp
mov
xor
rclb
jnp
xor
or
ret
lcall
sub
sbb
int3
mov
loope
inc
and
mov
xor
jecxz
xchg
mov
insl
insl
loopne
jae
push
cli
mov
orl
adc
pusha
jecxz
out
dec
xchg
popa
xor
lahf
rcrb
mov
cmpsb
int3
sbb
loopne
movsl
mov
fs
pop
xchg
aad
lret
push
popa
out
pop
mov
aas
dec
cmpsb
xor
stos
xchg
aas
sub
jns
inc
loopne
shlb
mov
xor
flds
scas
push
mov
subl
data16
cmp
xchg
adc
xchg
inc
sbb
movb
ljmp
les
add
add
sub
ret
push
pop
mov
add
mov
ss
xor
mov
insl
sub
adc
pushf
mov
das
lret
and
in
xchg
rol
loop
push
xor
test
dec
dec
test
pop
and
sbb
lcall
imul
in
jp
add
adc
andl
lock
lret
test
mov
divb
or
loopne
cmp
inc
hlt
xchg
sbb
outsb
or
ret
nop
cmp
sub
stos
push
repz
aam
mul
xchg
icebp
mov
scas
mov
out
imul
cmp
pop
nop
pusha
add
or
std
jno
scas
jg
lcall
pop
push
ret
jecxz
xor
int
or
js
jl
mov
add
adc
xlat
mov
and
inc
add
push
fsubs
fwait
lods
pop
iret
cli
mov
pop
mov
cltd
dec
dec
aas
arpl
sub
shrl
xor
jb
push
in
dec
stc
dec
fwait
sti
xchg
jbe
sbb
data16
adc
push
inc
and
adc
mov
cmc
test
in
addb
lea
adc
lcall
repz
arpl
fcompl
sbbb
sti
loope
cmp
call
xchg
addl
adc
adc
and
adc
xor
adc
mov
adc
sbb
test
cltd
sub
lcall
pusha
sub
sbb
cmp
test
and
addr16
in
jne
shlb
rorl
or
je
sbb
jns
jge
lret
out
movsl
fsubrs
jecxz
std
pop
ja
jnp
mov
sti
jne
repz
pop
fcoml
shlb
push
xchg
mov
test
add
data16
in
scas
xchg
popf
dec
sub
mov
cmp
repz
adc
adc
jl
mov
sub
or
pop
loopne
iret
dec
cmp
and
lds
ret
popf
sbb
adc
sub
iret
je
and
pop
in
adc
mov
stos
jae
hlt
mov
nop
jbe
adc
lcall
repnz
popa
repz
mov
adc
lea
imul
ss
ja
add
and
and
xchg
mov
push
insb
idivl
leave
dec
and
sbb
push
jbe
mov
ds
fbstp
aam
in
xchg
mov
es
xor
push
push
cmp
sub
enter
test
adc
mov
or
xchg
fnstcw
out
aam
mov
arpl
or
sub
mov
js
mov
rolb
fwait
sbb
popf
inc
daa
decb
andl
lods
or
push
clc
pop
sahf
in
dec
inc
cmp
jno
adc
or
sahf
xchg
lods
mov
sub
mov
mov
add
jmp
pusha
sar
pushl
push
lods
mov
jbe
mov
sbb
call
add
sub
and
cltd
lret
aaa
xor
add
fwait
inc
rorl
push
push
pop
mov
mov
or
push
inc
pop
mov
xchg
and
cld
xlat
notb
xchg
or
int3
cli
lds
loopne
aas
jecxz
inc
sbb
or
lods
xchg
and
mov
or
mov
add
popf
jne
bound
push
jmpw
cmp
int
mov
cmp
cmp
pop
xchg
pop
sbb
pop
pop
lahf
or
scas
les
movl
mov
dec
inc
pop
push
adc
out
dec
testl
outsb
les
or
stos
ljmp
int3
test
push
mov
or
xchg
dec
or
dec
enter
pop
pop
cmp
add
mov
sub
ja
fwait
mov
dec
hlt
mov
inc
xchg
pop
add
adcb
push
jl
fisttps
pop
sbb
mov
push
ret
add
sbb
xor
dec
push
fsubrl
xchg
ret
jbe
jb
cwtl
mov
nop
int3
in
jge
push
jle
mov
loope
imul
and
jb
shrb
repz
push
pusha
insl
lea
or
leave
add
xor
mov
xor
sbb
push
xor
and
push
les
push
aam
aad
and
jb
jmp
ja
leave
lret
and
leave
outsb
cmpsb
sahf
out
xchg
sub
mov
or
test
je
stos
mov
ret
push
xor
outsl
andb
dec
cmpsl
xor
jl
leave
lret
push
mov
sbb
cmc
int3
imul
pop
jmp
sub
fs
inc
in
pop
add
loop
clc
inc
call
sub
xor
inc
xlat
push
add
mov
jmp
loop
mov
ret
mov
and
cmp
and
mov
adc
push
push
pop
mov
dec
dec
xchg
scas
orb
and
cs
ljmp
popf
cmp
addl
xor
push
jge
idivb
pop
dec
addb
adc
lcall
pop
push
inc
mov
push
cmp
daa
push
out
inc
aaa
mov
pop
fdivrs
add
push
fildl
sbbb
dec
addl
add
dec
and
das
pop
stc
out
cmpb
add
movsl
mov
push
mov
leave
cmc
cs
idivb
movb
repz
or
xchg
inc
sahf
mov
push
int3
aaa
testl
push
sahf
jne
xchg
pop
inc
inc
scas
mov
dec
push
inc
cld
out
pop
addr16
shll
mov
pop
cltd
mov
test
outsb
xor
mov
imul
ret
bound
jmp
xchg
dec
cli
push
insl
xor
xlat
push
mov
test
in
arpl
pop
add
and
arpl
xor
pusha
adc
mov
cmp
arpl
xchg
dec
out
orl
cmp
push
xor
scas
fdivrl
andb
repz
addps
mov
test
cs
push
add
mov
call
ja
lock
push
mov
aam
xchg
ljmp
fiadds
and
sbb
xchg
in
fwait
movsl
pop
ficoml
mov
inc
add
in
xchg
lods
aad
jp
mov
adc
inc
shll
mov
cmp
outsb
push
aaa
fistl
pop
sub
outsb
in
hlt
insl
je
movsb
addr16
popa
rol
jge
dec
gs
lds
push
push
fwait
cmc
fnstcw
addb
shr
mov
sbb
inc
js
mov
repnz
push
push
pop
and
in
adc
shrb
mov
xor
xchg
inc
nop
mov
roll
xor
rclb
xlat
out
je
inc
fnsave
lods
lahf
shl
sti
mov
jl
add
push
sbb
mov
xchg
xlat
jb
adc
xor
mov
adc
mov
add
clc
add
dec
mov
rcr
push
ret
lahf
lods
enter
rcr
inc
lret
mov
push
je
mov
aad
add
jbe
out
ljmp
mov
and
mov
jg
ds
add
push
push
jo
push
shrb
les
push
add
inc
dec
sbb
les
daa
rcrb
push
cmp
pop
jge
loopne
jbe
adc
ret
iret
mov
add
int
shll
push
sbbl
sahf
in
pop
xor
xor
mov
je
mov
fbld
push
xchg
cwtl
jle
ret
sbb
add
mov
das
push
mov
mov
cld
fsubl
test
sub
pcmpeqw
cmp
stos
and
or
or
lods
inc
fwait
jae
mov
mov
enter
inc
stos
ja
out
ja
lret
mov
outsb
imul
imul
sub
movsl
mov
cmpsb
xor
popl
sahf
jae
mov
scas
iret
gs
data16
scas
fisubrs
and
lods
lods
mov
idivb
into
cmc
lcall
rcrl
and
push
arpl
das
mov
loop
sbb
cltd
inc
xchg
das
mov
xchg
std
stos
loopne
andl
testb
xor
or
test
push
sbb
mov
std
adc
jnp
push
xchg
cmpsl
sbb
popf
xor
loopne
aam
push
imul
aad
and
inc
ja
adc
sbb
mov
cmpsb
push
push
es
es
bound
loop
xchg
mov
sahf
mov
dec
fwait
dec
repz
jns
mov
and
mov
icebp
inc
inc
aas
jnp
jecxz
mov
jp,pn
adc
and
mov
dec
and
push
jo
testl
sbb
mov
aaa
fadd
jle
rcr
sbb
aad
inc
outsb
gs
add
adc
arpl
cmpb
add
jg
ds
sti
rorl
dec
push
je
pop
and
mov
and
insb
lods
cmp
jmp
xchg
lods
add
sbb
xor
or
scas
or
mov
sti
test
inc
jae
lock
xchg
add
mov
mov
repz
sbb
outsl
sbb
int
push
retw
sbb
mov
test
and
mov
pop
jo
jge
in
push
push
sbb
mov
push
shlb
and
clc
divb
and
out
sbb
jo
test
inc
loop
mov
or
mov
jecxz
or
test
sti
cmpsb
adc
xchg
dec
inc
ror
cltd
mov
adc
adc
mov
int
bound
das
pop
in
add
in
mov
push
and
xlat
mov
rcl
jge
cmc
cmpsb
and
mov
or
inc
fcmovnbe
mov
test
add
pop
xor
ja
incl
and
stc
adc
push
and
js
or
mov
cmp
push
xor
push
pop
push
inc
inc
mov
xchg
es
mov
lock
push
pop
ret
xor
push
orl
dec
xor
aam
push
lret
ljmp
std
cmp
jmp
cltd
jns
testl
ror
lret
and
dec
sub
andl
dec
movsb
xorl
xor
adcl
ret
mov
jb
imul
gs
fisubrs
je
roll
xchg
dec
cmp
push
lds
mov
jecxz
or
into
sbb
and
mov
js
js
cmpb
fildll
shl
mov
or
pushf
mov
fiaddl
cwtl
adc
dec
mov
jp
out
or
push
leave
xchg
fmulp
fsubl
inc
loope
or
ficompl
cmp
xor
inc
push
dec
fs
sbb
shr
inc
push
fdiv
aad
incb
sti
je
rcll
mov
clc
inc
stos
xchg
xchg
dec
dec
xor
leave
adc
cmc
cmp
mov
cwtl
sub
pusha
push
push
sub
outsl
add
stos
adc
push
lods
add
leave
aad
arpl
outsb
lret
pop
ret
test
subps
jp
mov
jns
shll
dec
sahf
xor
jecxz
sbb
pushf
jg
dec
dec
dec
pop
push
leave
mov
cld
adc
sub
mov
jle
icebp
rolb
cmc
xor
scas
xchg
xchg
xor
jl
mov
js
arpl
loop
imull
jo
xchg
ret
fstpt
sub
fwait
jle
dec
inc
push
sub
jns
lret
pop
insl
inc
push
dec
jp
insl
jns
sbb
xchg
and
leave
das
cmp
push
mov
inc
stos
xor
int
push
fildl
push
negb
loope
fistpll
xor
mov
cli
in
iret
iret
mov
dec
ss
mov
sub
inc
xor
cwtl
scas
mov
aad
or
shll
dec
mov
inc
push
or
mov
inc
popa
sbb
mov
lods
sub
xchg
cmpsl
out
mov
xor
mov
cs
adc
notl
lcall
mov
xchg
pop
rcrb
or
sbb
mov
cmp
lcall
and
mov
je
fsts
pop
imul
cmp
jnp
mov
fdivs
jg
in
pusha
dec
jnp
jbe
mov
out
push
pop
push
push
jns
mov
xor
dec
iret
ret
push
fdivrs
lea
mov
ret
and
pop
xorl
jecxz
rcll
int3
pusha
test
xchg
in
je
mov
adc
adc
xor
sbbl
add
ja
jg
push
jae
bound
es
push
jns
mov
lcall
in
mov
pop
pop
jecxz
lods
mov
mov
sarl
es
add
shll
add
call
pop
ret
bound
inc
and
cmp
mov
mov
cld
fnstcw
push
add
nop
imul
sbb
stos
leave
jecxz
sar
jb
into
sbb
fisubs
and
add
xchg
pop
ljmp
xor
xchg
test
jb
aam
sbb
mov
arpl
aam
das
fists
int3
mov
jecxz
pop
aam
fwait
rcrl
lods
sbb
outsl
pop
add
pop
movups
jmp
push
sbb
xor
inc
inc
xor
cmp
mov
stos
xor
leave
flds
jcxz
in
jg
icebp
loop
push
fadds
test
ret
loopnew
cld
and
cmp
push
mov
push
adc
insl
jne,pn
int3
adc
je
or
xchg
mov
inc
aam
pop
add
and
push
imulb
jle
dec
insb
ja
sub
cmp
sbb
mov
jmp
mov
inc
jae
arpl
dec
jp
xchg
imul
jb
xchg
int3
sbb
jp
xchg
inc
push
sahf
movb
inc
lea
cmp
mov
xor
xchg
push
pop
pop
lcall
cwtl
hlt
jmp
lds
arpl
mov
push
out
cmp
out
pop
inc
jmp
xor
sbb
inc
lea
adc
pop
and
rcrl
inc
fildll
ret
jg
mov
push
movl
lret
enter
dec
fimull
xchg
add
and
das
mov
xlat
jnp
push
cmp
lods
mov
inc
test
jne
lock
test
xchg
and
mov
adc
dec
lods
adc
xor
out
fisubs
andl
pusha
icebp
adc
cmp
mov
sti
enter
shrb
pop
adc
pop
rclb
cmp
xlat
mov
cmc
push
xor
fwait
xchg
pop
cmpl
mov
adcl
mov
ss
mov
dec
jae
lret
mov
xchg
mov
in
xchg
xchg
mov
test
imul
lock
fisubrl
std
adcl
inc
loopne
adc
ss
lods
ficomps
movsb
scas
mov
lods
lock
add
lds
sarb
lahf
std
pop
mov
push
and
sub
imul
dec
push
sarb
mov
adc
repnz
or
mov
pop
jbe
pop
rorb
es
es
inc
insl
mov
push
add
lret
push
insl
mov
jnp
push
mov
jp
call
pushf
setle
lods
insl
jle
ret
negl
push
dec
iret
aam
push
sub
rcl
sbb
aad
movsl
dec
idivb
mov
push
push
icebp
push
and
ficomps
nop
mov
jnp
rcrb
loope
out
test
dec
sbb
data16
cwtl
nop
mov
das
test
aad
test
mov
pop
jg
lret
in
out
movzbl
xchg
dec
movsb
lea
inc
push
ret
xor
and
push
push
pusha
dec
aad
imull
xchg
mov
push
jae
pop
adc
xchg
and
icebp
xor
jmp
daa
cmp
icebp
repz
mov
dec
mov
add
mov
andl
mov
stos
sbb
or
rcl
out
jne
xchg
incl
add
cmp
push
adc
fs
dec
jp
push
xchg
or
mov
jb
mov
test
adc
xchg
and
push
ficoml
sbb
pusha
fldt
sub
jmp
cld
fcompl
mov
data16
orl
pop
mov
mov
xchg
pusha
mov
adc
xor
shll
xor
ret
dec
cmpsb
outsb
cmp
xchg
or
and
sub
pop
inc
jl
cwtl
mov
mov
lds
lods
js
daa
pusha
jecxz
arpl
sbb
add
dec
pop
inc
in
xor
mov
dec
lret
ljmp
xchg
dec
pop
int3
cmc
cmp
xchg
bound
out
cli
movsb
insl
push
ljmp
popf
adc
sahf
je
sbb
jmp
lock
and
inc
adc
jl
ror
mov
pusha
push
ret
test
roll
sar
imull
int
sbb
inc
dec
les
push
xchg
adc
andb
fcmovnbe
xor
imul
loopne
filds
cld
pop
lods
andl
mov
dec
adc
mov
adc
cmp
dec
daa
shr
xor
pop
enter
cmp
leave
loop
cmc
popa
mov
xlat
push
sbb
in
mov
mov
aam
test
xor
push
xlat
lea
das
push
out
and
insl
sub
stos
out
addb
movsl
stc
fdivr
cltd
xor
mov
aaa
inc
int
jno
pushf
stc
dec
in
sahf
mov
and
mov
cmpsl
bound
cmp
repz
aaa
fldcw
loop
pushf
insl
push
xor
rcrl
and
fsubl
jne,pt
shrl
inc
and
push
sub
mov
je
ss
sahf
or
xor
dec
or
pop
in
and
push
sbb
xchg
jp
adcb
lret
hlt
lds
gs
aam
sarb
stc
ret
pop
fidivs
mov
scas
pop
cmp
adc
mov
lds
push
das
and
xchg
inc
mov
cmp
pop
or
push
daa
and
xchg
call
mov
out
pusha
call
jmp
enter
or
and
clc
mov
mov
xchg
adc
mov
pop
jae
daa
test
fsubrl
and
aam
icebp
push
jno
in
fidivs
test
insl
push
xchg
bound
std
movsb
out
jle
sbb
fisttps
jb
fcompl
mov
mov
mov
dec
scas
xchg
push
push
adc
addr16
dec
dec
xchg
jne
pop
dec
lcall
mov
cmp
pop
pop
sbb
pop
add
sbb
pop
pop
pop
ljmp
fdivrs
fildll
call
adc
pop
pop
jo
pop
sub
arpl
cmp
adc
sti
arpl
movsl
add
jg
inc
test
jns
enter
sbbb
ficoml
mov
pop
cmp
aaa
xchg
insb
sbb
jge
fadd
adc
lea
inc
cmpsb
hlt
mov
popa
xchg
cmovs
mov
outsb
lods
and
xchg
and
shlb
xor
mov
xor
lret
inc
fdivrl
lret
sub
in
or
test
scas
ljmp
shr
and
cs
imul
mov
push
adc
movsl
jle
scas
addr16
dec
popa
inc
inc
pusha
pusha
ljmp
jb
test
sbb
and
jg
dec
xchg
fidivl
jbe,pn
pop
std
lret
pop
shlb
fwait
dec
scas
insl
lahf
imul
or
outsb
call
push
lret
fwait
push
push
sub
int
test
mov
test
inc
das
jo
int
push
mov
loope
and
rcrb
adc
movsl
cmp
sti
jne
js
cmp
stos
popa
imul
dec
mov
and
ret
pop
jb
popa
sbb
jge,pn
fwait
xchg
sbb
jmp
sbbl
add
adcb
xchg
mov
dec
jae
or
aaa
lds
repz
loop
cmpsb
add
scas
mov
push
cltd
add
cs
test
test
movsl
rolb
jbe
adc
mov
pop
ljmp
xchg
and
or
jo
call
mov
fmull
xor
daa
pop
imul
and
iret
mov
lret
add
lcall
lret
and
pusha
xchg
lock
mov
jae
cmpb
int3
lods
jne
xchg
add
add
pushf
out
loope
fwait
xchg
mov
push
dec
cmp
std
mov
arpl
fwait
sub
bound
sbb
lods
and
mov
mov
aaa
xor
out
insl
mov
and
pop
jae
sbb
mov
lods
cmpsb
xchg
sub
push
adc
movlps
mov
mov
dec
xor
jbe
aad
test
lds
rclb
roll
test
cmp
lret
mov
jb
das
jl
imul
dec
test
cmpsl
pop
arpl
fwait
enter
pop
inc
jns
cld
push
pop
cmpsl
lods
sub
in
cltd
inc
sub
shlb
xchg
and
add
subl
fadds
pop
adc
fwait
jns
sbbb
sub
jo
cmpsl
dec
call
imul
pop
orb
jg
add
push
jb
in
in
mov
pop
stos
dec
divb
imul
in
jb
movsb
mov
popf
mov
test
sub
xchg
jp
je
push
jl
xor
arpl
mov
fildl
mov
mov
mov
loop
sub
and
xor
out
xchg
dec
pop
cld
fldenv
cmc
int3
lea
cmp
stos
std
orl
push
int3
in
repnz
faddl
dec
insl
in
mov
mov
loope
adc
jae
testl
mulb
das
jle
and
mov
mov
cmp
shll
cmp
ljmp
test
idiv
call
pop
aaa
test
rcrb
imul
aaa
movaps
xchg
scas
push
out
mov
mov
xor
xchg
jns
jge
jnp
pop
in
push
cmp
mov
and
add
jne
mov
add
mov
js
add
sarl
adc
imul
sbb
sbb
pop
roll
jmp
cmp
or
adc
loope
data16
or
jl
subb
and
outsb
fistl
xchg
hlt
insl
lcall
jecxz
fst
lret
cmpsl
ljmp
fiadds
dec
pusha
lret
push
dec
dec
sbb
or
xor
xor
pop
data16
and
aam
movsb
nop
sbb
aaa
push
int3
popa
ret
mov
rclb
or
int
cmp
inc
in
aas
repz
adc
lret
mov
lds
test
hlt
cmpsb
hlt
adc
sbb
mov
xlat
mov
push
inc
nop
iret
dec
add
push
xchg
movsl
cmp
ret
jmp
dec
push
adc
mov
mov
insl
cmpsl
stc
dec
or
es
xchg
xor
pop
push
inc
xor
iret
jmp
pop
add
sarb
and
scas
push
and
mov
rorb
cmp
cld
mov
xchg
ficoml
mov
arpl
push
repz
jle
jmp
cltd
or
add
sub
das
xchg
sbb
push
fistps
pop
out
lcall
out
addr16
in
fisubrl
in
int3
in
mov
sbb
lds
jne
repnz
dec
mov
daa
into
shr
push
aad
xchg
cwtl
or
xchg
fcompl
icebp
cmpsl
add
jle
add
je
jb
loope
or
lret
inc
ret
cmc
mov
or
inc
dec
arpl
aad
sbb
div
lock
repz
push
jmp
imul
mov
jb
int3
cmp
mov
into
pop
hlt
loop
jle
xor
test
scas
mov
sbb
out
push
sub
aad
add
popa
fisubl
in
and
xor
and
mov
scas
sahf
and
adc
jecxz
test
std
test
ret
jns
push
mov
out
or
cmp
xor
lods
xchg
sbb
pop
sbb
dec
inc
push
adc
sti
fiadds
mov
xor
lods
mov
or
dec
das
aad
notb
gs
and
jnp
pusha
ljmp
cmc
sub
mov
xor
mov
in
rol
ljmp
mov
stc
aaa
popa
in
mov
push
sub
mov
jae
inc
jae
cmp
sbb
jmp
push
pop
mov
dec
xor
push
adc
fsubrp
pop
fistps
nop
push
aam
push
push
testb
inc
loope
push
fcmovnbe
add
decl
cmp
rolb
dec
gs
mov
dec
xchg
mov
in
jo
mov
es
fistpll
lock
mov
dec
mov
gs
mov
xchg
xor
addl
icebp
movsl
lea
orb
leave
push
dec
pop
in
push
loopne
andl
push
out
cmp
int3
dec
shrl
mov
or
lret
dec
daa
jge
divb
inc
mov
lods
ret
push
mov
sbb
lahf
insl
sti
mov
pop
mov
loop
and
popa
dec
xchg
inc
push
mov
movsb
cmp
xor
jb
xor
cmp
inc
in
cmc
xchg
jbe
sbb
and
hlt
mov
mov
jae
lahf
cmp
sub
sub
fs
cmpl
jp
sbb
enter
bound
into
pushf
sahf
dec
pop
cmp
js
pop
or
sbb
sbb
ljmp
fmul
rcrl
mov
sub
minps
bnd
out
das
jb
sahf
fs
pusha
mov
std
lret
dec
xchg
gs
or
push
pop
push
add
mov
or
test
sbb
lret
cld
or
jb
push
jbe
xchg
mov
lods
jge
mov
into
pop
shrl
out
sahf
adc
int3
shr
pop
cmpsl
iret
dec
int3
jo
incb
aam
jecxz
nop
pop
icebp
dec
adc
icebp
add
lods
and
and
repz
fsubp
add
pop
xchg
jmp
and
pusha
cltd
xor
aas
lds
testl
push
loop
ss
push
push
cmp
dec
in
jmp
sub
dec
dec
adc
fisubrl
ljmp
lahf
cmpsl
dec
push
fdivl
jecxz
mov
jns
fmuls
pop
push
xor
add
pop
jmp
or
nop
fisttpll
mov
mov
gs
stos
jg
roll
push
mov
loopne
cli
xlat
xlat
adcl
nop
lcall
pop
int
or
daa
adc
mov
add
xor
xor
shrl
jl
movsb
stc
adc
imul
lret
aas
mov
fstp
jno
pop
sbb
xchg
rorl
in
mov
xchg
xlat
aam
mov
pop
iret
dec
inc
mov
cmp
movsl
and
cmpl
mov
dec
add
mov
jb
xchg
push
jns
lock
mov
and
jmp
cmc
or
mov
out
test
pop
movsl
hlt
push
inc
cld
pop
into
mov
fs
jecxz
test
cmp
sti
sbb
push
sti
test
cmp
sub
adc
push
dec
sub
pop
mov
mov
add
cli
mov
lods
mov
loopne
movsb
pop
sbbl
out
ficomps
and
sbbl
cld
cmpsl
jae
sub
pop
ja
out
popw
andl
cld
push
sbb
mov
fsubs
sub
sbb
ret
xor
push
xor
mov
data16
jl
mov
pop
in
xor
and
jecxz
cld
inc
test
das
xor
ds
mov
test
add
inc
add
jo
fcmovu
imul
pushf
cld
fstpl
cli
sub
dec
loope
xchg
cmpsb
loope
stc
pop
test
cmp
in
push
loop
fdivr
fyl2xp1
mov
js
iret
mov
inc
jno
sti
shll
out
gs
add
fistpll
out
data16
dec
mov
outsl
or
les
lods
or
lds
shrl
out
out
mov
daa
push
mul
push
jns
inc
mov
jl
and
or
xchg
sbb
repz
add
jns
daa
xor
addr16
outsb
call
jbe
and
xchg
xchg
push
add
fs
loopne
movl
call
pop
repnz
or
gs
add
mov
xchg
cmpsb
and
fdivp
pop
sbb
cltd
sbbb
sub
das
test
xor
jp
pop
or
and
cmc
mov
bound
lcall
mov
and
jnp
cmp
and
loope
sub
out
xchg
pop
xor
dec
jp
adc
shll
push
in
jbe
pop
es
add
add
lea
add
push
xchg
sub
pushf
fsubrs
mov
js
dec
sti
jmp
mov
cmpsb
aaa
not
mov
dec
test
stc
mov
sub
or
jns
lods
shlb
stos
mov
mov
scas
push
cmp
negb
add
sti
xor
mov
test
outsl
lds
popa
jecxz
js
js
push
call
xor
and
pop
pushf
add
and
in
xchg
push
add
xlat
lret
popf
sub
dec
mov
or
cmp
or
pop
je
pop
xlat
mov
and
jo
mov
xor
adc
ret
stos
sbb
in
enter
xor
push
stc
das
out
add
mov
inc
dec
xchg
adc
ret
mov
xor
out
es
ror
push
into
in
jne
out
xor
pusha
mov
push
leave
repnz
in
fadds
mov
mov
cld
adc
xorl
push
test
mulb
std
jnp
cwtl
pop
adc
stos
lahf
cmpsb
dec
push
mov
add
stos
shlb
xadd
pop
cmp
jb
xor
pop
inc
ljmp
xchg
xchg
loopne
push
xchg
inc
cmp
call
add
or
in
jne
mov
cmp
dec
and
dec
fidivs
loopne
rcll
call
sbb
aam
add
sub
and
push
stos
inc
inc
pusha
lret
mov
es
aam
add
cmp
push
add
gs
push
pop
stc
or
xchg
jl
jno
fsubs
sbb
fnstsw
stos
mov
jns
push
push
ss
mov
aam
cmp
xor
xor
cmp
xlat
and
or
arpl
sahf
gs
mov
push
xor
data16
push
test
or
xchg
jns
filds
insb
jmp
mov
pop
and
inc
ja
push
sub
gs
orb
fidivl
idivb
arpl
xlat
scas
std
jne
out
btr
cmpsl
pop
xchg
xchg
xchg
jp
inc
movsb
jbe
test
dec
outsb
mov
fistl
xor
push
je
iret
xchg
cwtl
mov
inc
loop
jg
ret
xor
fistps
fidivrs
push
pop
pusha
mov
scas
or
mov
xchg
cmc
mov
std
push
outsb
xchg
push
and
cld
or
lds
jle
movsl
cmpsl
xor
and
imul
push
ds
pop
shlb
aam
adc
aad
jb
in
push
lret
je
xlat
cmpsb
push
pop
add
mov
inc
and
sbb
push
jne
das
push
push
imul
sbb
mov
sub
push
pop
lock
push
stos
push
dec
mov
pusha
loope
inc
fdivrl
push
jp
sub
jns
mov
mov
cmpsb
sbb
push
sti
inc
lret
sbb
or
mov
xor
pcmpeqd
bound
cwtl
dec
pop
dec
adc
xchg
xchg
jge
mov
ss
lods
dec
sub
scas
iret
xor
lcall
cltd
fsubp
jmp
xor
fldenv
inc
shlb
jle
xchg
fwait
sbb
jbe
mov
inc
es
xor
add
scas
mov
mov
roll
lcall
mov
sbb
shlb
pushf
cltd
lahf
dec
cmp
adc
jmp
sub
hlt
cmp
fdivrs
scas
repnz
rorb
pop
jge
xor
cmp
inc
jae
cmp
push
mov
aas
xchg
or
mov
or
aas
jne
cmp
cmp
mov
popf
jg
dec
fistps
shll
mov
xchg
lods
loopne
and
dec
sub
mov
sbb
rorb
mov
cmp
mov
bound
mov
test
adc
jbe
ficoms
mov
pop
stos
sarl
push
es
cmp
mov
dec
loopne
fidivl
push
inc
repnz
in
lret
mov
lea
movsl
sub
inc
movsb
fs
inc
fistpll
enter
cmpsl
test
int
inc
test
mov
es
pusha
mov
jp
xlat
add
repz
push
xchg
sti
push
pop
fdivrl
addr16
jmp
cld
mov
cmpsb
rcrl
pop
inc
popa
sbb
adc
push
mov
shl
iret
shrl
test
pop
jno
inc
add
push
lcall
mov
je
pop
je
add
mov
ret
imul
jecxz
das
fisubs
mov
les
stos
add
ret
inc
jle
push
and
push
push
mov
push
andps
adc
mov
lods
nop
pusha
dec
pop
cmp
movsl
js
push
dec
dec
fdivs
mov
ret
pop
sarb
scas
in
pop
andb
mov
rorl
sbb
rolb
cmpsb
out
and
or
mov
mov
dec
adc
in
add
cli
ret
in
ja
ret
and
fwait
pushf
mov
mov
in
out
icebp
xchg
gs
jno
mov
nop
ficomps
clc
sbb
popa
fisttpl
aaa
shll
cwtl
pop
pushf
cmp
shrl
jmp
sub
xchg
mov
out
arpl
stos
das
fmul
out
xchg
inc
out
lods
or
and
divb
pop
add
mov
movsl
cmpsb
cmp
pop
movsb
jbe
lret
pop
rclb
enter
into
loop
ljmp
jle
xchg
dec
addr16
lcall
mov
mov
cmp
ror
cmp
ja
add
sbb
dec
scas
sub
xor
cs
imulb
adc
rcrb
jne
in
jmp
mov
es
mov
imul
sub
rclb
stc
mov
sbb
add
jne
dec
std
inc
xor
sbb
das
ds
ds
fimull
fcomps
nop
xlat
dec
cld
xchg
mull
mov
pusha
decb
push
jecxz
pop
test
test
push
out
call
stos
jo
test
jno
inc
mov
mov
stc
out
mov
fwait
mov
sub
dec
xchg
lea
mov
xor
add
mov
popa
into
inc
ljmp
sub
daa
jg
adc
popa
jg
mov
mov
and
add
repz
xor
mov
jg
pop
pop
jg
cltd
pop
push
inc
sarb
hlt
sbb
mov
lods
push
jno
stc
xor
loopne
xlat
dec
repnz
pop
cmpsl
test
adc
cs
shlb
adc
inc
cltd
ret
sbb
jb
enter
push
mov
leave
jp
dec
and
in
bound
into
mov
es
jb
xchg
push
xchg
add
mov
movsb
aad
xor
fsubrl
pop
mov
dec
xlat
pusha
ficomps
lock
test
xchg
cld
and
sti
mov
imul
pop
push
xchg
es
fimuls
int3
test
adcb
add
mov
inc
stos
mov
das
faddl
adc
aaa
inc
mov
es
aad
fcomps
mov
jmp
testb
iret
nop
cltd
mov
sub
jns
hlt
sbb
pop
enter
pop
jae
mov
lret
adc
add
std
out
fs
sub
cwtl
or
jle
push
dec
ja
xchg
movsl
mov
addr16
hlt
or
js
or
insb
mov
stos
push
outsb
sbb
inc
dec
or
popf
cmp
outsl
hlt
inc
inc
imul
mov
sti
das
aam
adc
pop
test
leave
add
sub
mov
test
clc
mov
push
inc
in
aam
mov
pop
push
xchg
push
mov
cmp
stos
and
dec
jmp
aaa
inc
cmpsl
test
adc
fstpt
outsb
jbe
mov
test
xchg
hlt
rcrb
push
add
in
imul
jnp
inc
jecxz
cld
add
xor
jmp
mov
bound
sbb
pop
mov
sub
test
mov
mov
cld
pop
or
int3
lahf
push
adc
fstps
scas
test
mov
xor
dec
inc
repz
mov
outsl
test
adc
aad
mov
pop
xor
add
mov
shl
add
arpl
and
lret
ret
jno
loop
cmp
aad
mov
and
fwait
mov
mov
jne
insl
imul
push
push
shr
mov
bound
das
cmp
jp
or
jmp
or
mov
dec
sbb
inc
into
mov
mov
inc
int
jg
incb
loope
fdivs
dec
test
inc
rcrl
adc
cli
ret
cmp
push
mov
sbb
bound
jecxz
push
aam
xchg
inc
sub
xor
repnz
pop
pop
sbb
mov
cmp
test
mov
push
cmp
inc
hlt
out
mov
jmp
ret
jecxz
test
inc
mov
cmp
fldcw
imul
push
inc
fistpl
std
push
xor
pop
jne
xor
pop
ret
dec
call
inc
cld
xchg
mov
cs
or
loop
repz
pop
loopne
outsb
inc
loope
push
jnp
sub
neg
inc
es
in
sbb
pop
popf
lods
lods
add
fdivl
mov
xor
mov
xchg
adc
pop
jmp
or
ret
jne
inc
mov
shrb
fidivs
and
and
xchg
mov
ret
cmp
inc
dec
int
lock
addr16
jecxz
mov
ret
push
mov
mov
cld
pop
sub
xchg
mov
push
bnd
out
mov
iret
out
mov
cmp
lock
dec
icebp
cltd
clc
inc
mov
icebp
pop
jmp
sarl
popf
aad
mov
xor
test
aam
insb
or
daa
popf
sub
pop
jnp
es
into
cmc
addr16
jle
xor
sbbl
fs
insb
incb
loope
fucomip
movsb
xchg
aas
outsl
dec
mov
pop
repz
inc
lea
outsb
add
fstpt
outsb
mov
hlt
and
adc
fcoms
and
insl
test
mov
in
cli
xor
gs
pop
ja
xchg
jge
pop
push
sub
adc
xchg
das
sbb
cld
adc
mov
fistpll
jns
xor
ficoms
enter
mov
xor
xchg
mov
gs
fnsave
push
jb
out
mov
mov
loopne
pop
daa
mov
push
sti
add
jle
xchg
andb
xchg
mov
and
and
in
outsl
mov
jb
lods
imul
sbb
inc
inc
sbb
fldenv
ljmp
in
lret
xor
outsb
aas
in
cmp
jmp
pop
inc
cmpsl
daa
imul
js
shlb
mov
sbb
aad
lahf
inc
xchg
lea
cmp
push
xor
pop
in
dec
jo
stos
fs
xor
xor
cmp
cmpsb
xor
jl
cmc
and
notl
mov
dec
dec
loopne
and
or
adc
adc
pop
adc
lods
mov
call
jg
xchg
fisubrs
mov
and
arpl
fs
out
mov
mov
mov
popf
gs
and
xor
push
outsl
pop
push
fnstsw
inc
scas
rcrl
outsb
fmul
daa
cmp
rol
mov
xchg
inc
andps
idivb
jns
stc
ret
push
movsb
mov
add
fists
pop
enter
enter
mov
and
jnp
pushf
in
lcall
jp
movsl
cmp
dec
mov
gs
mov
cmpsb
mov
jnp
daa
int3
cmpl
sub
je
loopne
jmp
jl
mov
sub
insb
popf
cmp
sahf
rcl
and
pop
mov
mov
sub
adc
add
add
loopne
push
mov
jle
cwtl
mov
or
push
pop
and
xor
fadd
into
out
loop
push
mov
cmpsb
bound
add
sahf
lock
movl
pop
loopne
dec
in
lcall
cmp
inc
mov
sbb
fwait
stos
shrb
lods
enter
je
inc
cmp
int
in
iret
cmp
jae
sub
popa
mov
pop
scas
nop
pop
inc
xchg
call
xor
adc
and
jl
push
outsl
mov
mov
pop
or
mov
ss
out
pop
bound
and
mov
pop
out
push
lahf
je
push
lds
push
mov
rolb
mov
dec
gs
loopne
pop
jmp
pushf
jbe
lock
jmp
cld
jl
mov
pusha
xlat
inc
rcrl
ret
mov
fs
cmpsl
xchg
cwtl
scas
aad
inc
jne
cmp
fs
mov
test
adc
push
sbb
dec
pop
mov
rol
lods
mov
int3
data16
les
insb
adc
xlat
nop
sahf
lret
mov
pop
cmc
mov
lods
pop
mov
inc
imul
mov
mov
xor
adcb
lret
jmp
addr16
mov
test
in
or
xchg
dec
ljmp
xor
push
mov
add
inc
xchg
cwtl
or
sub
popl
push
pop
sub
nop
sahf
pop
push
stos
fisttpl
jle
cli
repnz
sbb
in
pop
std
insb
and
adc
sub
icebp
aad
pusha
cmp
pop
clc
adc
outsb
and
repz
outsb
leave
lret
cmp
nop
stos
cmp
inc
and
push
push
mov
test
stos
ds
lret
xchg
rclb
and
jge
and
lret
movsl
inc
je
ret
cmp
ret
ds
std
xor
addr16
and
data16
movsb
mov
gs
mov
mov
bound
js
loope
insb
mov
pop
mov
in
movsb
mov
mov
dec
pop
icebp
mov
pop
push
imul
loopne
sub
popa
dec
leave
test
fcoms
outsl
push
aad
stc
inc
push
adc
xor
or
adc
jbe
stos
adc
in
ljmp
mov
jp
mov
xchg
outsb
stos
outsb
add
aas
std
es
fistpll
sbb
mov
fdiv
add
in
and
fcompl
adc
add
and
push
push
xchg
leave
arpl
pusha
sub
ljmp
mov
xchg
sbb
js
xor
mov
jp
adc
add
andl
mov
mov
adc
movsb
ljmp
mov
jge
push
lods
mov
dec
or
cli
outsb
lahf
das
xchg
jecxz
cmpsb
ljmp
in
pop
fadd
cmp
out
filds
ret
and
pushl
mov
jmp
jl
mov
fldenv
and
rcrl
cmp
mov
cmp
mov
pop
xor
sub
mov
idivl
das
ficoml
sti
push
loop
xchg
jge
xor
ret
fidivrs
outsl
pop
xchg
inc
scas
inc
ror
lret
push
pusha
dec
cmpsb
sub
mov
mov
out
ffree
cld
pop
inc
nopl
insl
xchg
and
adc
js
xchg
loopne
stos
in
or
fsts
cmp
xlat
out
mov
gs
pop
lret
lock
cmp
aaa
pop
xchg
inc
xor
mov
pop
xor
pop
stos
mov
ds
insb
pop
pop
mov
adc
rol
shl
testl
scas
mov
xchg
and
jp
lock
cli
loope
test
add
insb
adc
xchg
push
mov
and
xchg
jns
cmpsb
xorl
gs
js
sbb
add
add
stos
cmc
fcomps
inc
xchg
testl
aas
out
pop
inc
ret
or
push
lcall
test
imul
inc
mov
repz
adc
dec
inc
leave
loope
xchg
add
test
push
dec
sti
nop
scas
xlat
adc
jl
add
mov
imulb
gs
add
lock
je
jle
cmp
mov
aam
sbb
test
inc
idiv
add
repnz
sbb
and
push
dec
in
push
imul
pop
xlat
cmpsb
dec
rclb
mov
mov
jae
xchg
mov
pop
mov
stos
push
and
scas
push
js
jb
test
daa
outsb
cwtl
add
add
repnz
jns
loop
testb
shll
jp
sbb
iret
sti
sub
pop
icebp
test
aad
lds
cmp
sti
pmaddwd
out
leave
xchg
rclb
and
mov
mov
sub
mov
test
stos
nop
fsts
mov
iret
fsubrs
ja
sbb
add
cmp
jae
fimull
cld
dec
or
aam
sbb
pop
push
pop
int3
sahf
mov
fdivr
push
rcrl
dec
call
sbb
mov
jne
cmpsl
xor
addb
jne
faddl
or
and
push
xchg
xchg
imul
nop
xchg
loopne
call
inc
mov
dec
pop
jp
sbb
nop
scas
cmp
out
pushl
push
or
xchg
sbb
fldenv
mov
adc
dec
inc
adcl
dec
in
xchg
cli
jno
loopne
pop
adc
js
mov
gs
mov
add
fwait
sub
add
xor
pop
jno
es
div
adc
mov
pop
sub
lretw
lea
cld
aaa
push
je
jg
jns
xchg
inc
int
and
das
in
add
popf
xor
adc
fildl
aam
ja
stc
cmpsb
sbb
lds
sub
and
jp
add
xchg
imul
in
or
jle
xlat
pop
mov
es
clc
inc
cli
in
xor
ss
inc
popf
jl
test
lods
xor
ret
mov
pop
cwtl
dec
push
in
mov
cmpsb
push
jb
cmc
xchg
pop
cmove
push
fwait
int
lret
fcmovu
loopne
mov
jnp
inc
call
push
xor
popa
das
lahf
in
pop
add
test
in
sbb
mov
outsb
fisubrl
jl
iret
mov
push
dec
mov
daa
out
lfs
sbb
sub
int3
das
jecxz
mov
adc
les
jbe
mov
test
fbld
and
sub
adc
pop
mov
aas
mov
jno
call
lret
das
and
mov
inc
add
scas
mov
or
mov
call
movsb
push
mov
sub
or
mov
mov
pop
addr16
or
or
cmp
sar
jmp
sarl
adc
cmp
sub
mov
mov
loop
xchg
push
sti
jg
sub
jbe
xchg
sub
adc
ds
fdiv
cli
pop
sbb
xor
and
mov
shlb
sbb
js
mov
mov
insl
inc
adc
xorb
test
movsb
sub
repnz
xor
xchg
push
push
arpl
repz
sub
xor
push
xor
sbb
arpl
push
and
sbb
lock
data16
shrb
std
and
xchg
xchg
cld
or
push
aaa
out
push
sbb
shr
push
outsb
imul
dec
push
es
add
imul
xor
test
jmp
add
das
ror
rorl
stos
add
and
mov
mov
cmp
in
fisubs
insb
sub
nop
pop
and
cmp
in
mov
mov
dec
mov
in
xchg
lods
jg
cli
fdivrl
cmp
aam
pop
dec
jbe
mov
ret
std
mov
push
lret
sub
ljmp
adc
idivb
das
pop
and
movsb
xor
mov
lret
or
jle
push
sbb
xchg
push
dec
into
push
repnz
test
rorb
dec
adc
fcoml
lret
pop
sub
or
call
push
frstor
push
imul
sbb
pushf
mov
push
cmp
stc
lcall
scas
loopne
lock
pushf
jbe
xchg
xor
and
cltd
push
std
mov
mov
mov
mov
lds
insl
insl
push
mov
insb
sbbb
mov
mov
aam
pushf
daa
movsl
lea
push
mov
cmc
rol
cmp
nop
cli
ret
mov
push
inc
lcall
sbb
jno
shll
mov
lret
add
sbb
fstpl
mov
in
push
outsb
das
xor
arpl
inc
jp
std
dec
inc
movsb
call
sti
inc
dec
dec
inc
add
int
jge
pop
or
mov
jge
fisubl
mov
sahf
idiv
pop
jne
mov
adc
into
cmc
stos
and
xchg
icebp
es
mov
pusha
mov
push
and
mov
popf
mov
add
ret
test
inc
add
xor
int3
outsb
hlt
jae
stos
sbb
add
iret
inc
lea
fwait
pop
jg
ret
and
xchg
inc
jnp
daa
in
mov
adc
loopne
and
sub
xor
ret
mov
and
cmp
mov
mov
iret
push
mov
xchg
into
fisttpll
jle
scas
cmpsb
adcb
jae
xchg
and
stc
jno
imul
leave
pop
aaa
push
mov
mov
fwait
repz
cmp
in
jo
add
ret
clc
ror
and
sub
lcall
sub
ficoml
xchg
not
or
add
adc
insl
lods
dec
loopne
inc
sbb
cmpsl
xchg
xchg
cmp
sti
sahf
adc
imul
mov
cli
add
dec
stos
and
xchg
loop
fs
ljmp
sub
ss
sti
mov
ffreep
sub
ja
cld
mov
arpl
jge
sub
mov
nop
push
cld
out
and
ret
lret
push
adc
sbb
ljmp
jbe
lods
pop
mov
or
or
inc
and
popf
sbb
pop
push
mov
push
jmp
add
jg
scas
mov
mov
aad
add
into
je
out
out
inc
cmp
fildl
lcall
or
jns
or
ljmp
xchg
inc
adc
or
movsbl
dec
xchg
mov
mov
repz
add
out
push
inc
ja
mov
mov
mov
sbb
mov
xchg
sub
xchg
faddl
or
repnz
das
cmpsb
fdivrl
push
pop
lcall
jle
mov
stos
ficoms
mov
adc
fdivs
jns
ficoml
pushf
xchg
into
adc
gs
int
aas
push
sbb
mov
popa
imul
inc
gs
gs
stc
jp
fisubrl
push
pop
ss
mov
popa
inc
mov
jno
jmp
sti
sub
dec
sbb
mov
xlat
mov
out
mov
inc
sub
pop
pop
cmpsb
jo
or
push
sahf
jle
add
mov
loop
in
popa
xor
scas
push
jbe,pt
scas
stos
nop
jmp
inc
jbe
cwtl
or
mov
push
mov
les
negl
dec
adc
mov
arpl
cmp
movsl
sbb
fistl
xor
pop
adcb
sub
inc
cld
arpl
sarl
add
add
mov
mov
out
inc
outsb
or
out
dec
pop
jmp
pusha
scas
push
aad
jmp
sub
sbb
sahf
inc
lret
out
and
dec
cld
add
mov
rorb
jge
std
adc
sarb
out
fdivs
dec
icebp
or
lahf
mov
fwait
adc
into
fsincos
and
mov
push
mov
loope
in
dec
mov
xor
jb
int3
cmpl
mov
pop
cmp
cli
lea
mov
xor
xor
je
pop
cmpsb
decl
lcall
shll
sub
sub
sbb
loope
lods
dec
out
pop
mov
push
movsl
mov
pop
push
pop
mov
and
sbb
or
xchg
or
js
leave
insl
and
xor
out
into
cmc
xor
jmp
jp
cmpsl
aam
sar
inc
sahf
lds
push
aad
stos
lods
sub
push
jns
xor
jp
xor
sbb
pop
ret
loop
cmp
xchg
sbb
adc
je
mov
lds
insl
std
hlt
pop
mov
shrb
inc
add
sbbb
hlt
mov
lahf
and
mov
cmp
aas
jne
jo
rep
lea
pop
push
popl
xchg
jns
inc
jle
imul
adc
popf
out
jae
notl
xchg
push
mov
sub
pop
mov
int
sbb
lahf
stos
popa
in
cld
push
or
mov
loope,pt
hlt
lock
xor
mov
inc
out
sbb
jmp
gs
dec
mov
inc
test
aas
das
and
cmp
inc
sbb
push
sti
or
fcmovne
push
push
push
jae
and
sbb
into
cmp
push
jge
fldl
pushf
leave
lock
mov
ret
xor
adc
dec
mov
ds
and
les
push
mov
add
dec
insl
mov
rorb
cmpsl
add
mov
mov
pop
aad
ja
fcmovu
sbb
xchg
pusha
scas
scas
rorl
shll
out
sbbb
cmp
clc
mov
andb
in
roll
add
mov
jle
mov
and
xchg
push
jb
mov
cmp
adc
shll
shl
jmp
cmp
scas
outsb
lcall
xchg
lock
aad
js
je
fisubrs
ret
xchg
das
ja
mov
sarl
pusha
inc
push
jne
dec
idiv
mov
jmp
jmp
adc
mov
xlat
adc
test
pop
mov
mov
mov
rorl
test
sub
push
mov
loopne
xchg
cmc
aas
jmp
push
outsb
cltd
aam
jmp
mov
out
jl
adc
add
cwtl
push
pop
cwtl
jge
add
inc
lock
inc
jge
mov
push
addr16
jg
dec
and
icebp
mov
test
mov
add
lock
jo
insl
addr16
shll
push
mov
cli
mov
orb
and
mov
cmpsb
aas
xchg
mov
xor
cmp
mov
out
rorb
fstps
scas
lock
rcll
push
cmpsl
sbb
shll
pop
push
jg
xchg
and
daa
push
iret
mov
addsd
mov
or
inc
out
test
cmc
movsb
int3
sbb
scas
dec
into
push
clc
add
repnz
clc
xor
addr16
push
movsb
repnz
sahf
jge
outsb
test
mov
popa
mov
ficompl
wbinvd
addr16
aam
pop
mov
pop
shlb
mov
xor
sbb
inc
mov
jge
or
fdivs
inc
adc
bound
xchg
loopne
push
dec
out
cmc
push
mov
inc
fldenv
in
test
mov
and
rorl
repnz
dec
div
imul
xchg
mov
scas
jmp
fldcw
mov
mov
jo
fnstsw
mov
jns
jb
es
jns
mov
pop
mov
sub
jp
sub
in
ds
in
mov
fnstcw
lahf
jb
jmp
ret
scas
inc
pop
xchg
push
xchg
lods
and
js
dec
adc
mov
sti
pop
and
jae
add
or
sub
leave
fadds
ljmp
inc
jno
ss
mov
xor
cmp
inc
pop
sub
push
sub
mov
ret
out
mov
xchg
push
xlat
pop
pop
mov
inc
loop
div
dec
sub
dec
lods
add
and
iret
sub
lret
push
clc
and
cs
sub
push
push
cmp
iret
lcall
push
sti
adc
psubsb
mov
sub
inc
ds
rorl
pusha
pop
push
rclb
in
push
int
adc
or
hlt
repnz
xchg
cmpsb
jg
aas
inc
fnsave
loope
jp
inc
cmp
fsubr
jnp
mov
adc
adc
mov
ds
fstpl
je
add
sub
int
sbb
pop
xor
push
mov
sbb
shr
dec
cli
cmp
mov
mov
sbb
sbb
decb
hlt
sbb
aas
shr
std
or
bound
es
jnp
das
jns
es
aad
pushf
mov
cli
push
clc
fcmovb
ss
mov
cmp
mov
mov
call
mov
cmpsl
repz
aaa
out
add
jns
pop
shll
sub
out
jg
adc
inc
mov
xlat
out
push
jecxz
mov
and
push
jl
loop
xor
js
into
pop
mov
call
jecxz
test
push
xchg
test
iret
jge
out
fmull
jl
jg
add
flds
in
mov
arpl
rclb
xor
cmp
inc
mov
xchg
jno
or
pop
rcrb
addb
aad
adc
lea
movsl
jae
add
jno
xchg
shrd
popl
adc
test
inc
jo
pop
lds
clc
andl
mov
je
cmc
shll
lods
push
sbb
pop
test
vshufps
ret
add
sbb
fs
cmp
fmuls
add
loop
loope
push
xchg
loopne
mov
das
mov
push
icebp
mov
jmp
xor
je
dec
aad
nop
out
pushf
pop
repz
xchg
mov
sub
sbb
cmp
inc
loop
jmp
add
pop
adc
push
in
push
sahf
aad
cmpsl
arpl
arpl
mov
jb
push
les
js
or
icebp
cltd
test
loope
xlat
fildl
pop
jne
outsl
cmc
push
xchg
mov
in
mov
xchg
test
int
cli
movsl
enter
movsl
ret
sbb
mov
or
outsl
mov
testl
push
lea
xchg
ficomps
mov
in
adc
jle
dec
mov
rcr
loope
jecxz
dec
push
out
adc
ja
fidivl
cmc
insb
pop
mov
nop
jnp
into
push
jbe
sub
mov
lcall
mov
jnp
or
popa
sub
sahf
imul
mov
sub
mov
mov
jne
or
mov
jmp
sbbl
sarl
inc
outsb
mov
xor
lahf
in
xchg
mov
mov
lods
ja
push
sub
pop
xor
sbb
mov
adcb
cmp
sub
scas
test
sbb
inc
mov
lods
ret
inc
mov
or
dec
mov
push
push
movsb
sbbl
sbb
jecxz
or
lods
push
push
stc
xor
pop
test
or
xchg
pop
aam
adcb
jno
inc
lods
push
push
jl
xchg
sarb
nop
or
lods
inc
lock
in
lock
stos
pop
cmp
call
movsl
push
inc
push
ss
push
popa
inc
mov
add
push
dec
fmuls
mov
or
ror
ja
jnp
fildl
pop
fistpl
sbb
jns
xchg
dec
fucomi
shr
push
mov
mov
aas
adc
mov
ss
mov
sub
into
std
in
xchg
popf
mov
mov
aad
arpl
pushf
mov
mov
sbb
scas
push
xchg
push
idivb
cmp
or
out
ficoms
mov
repnz
xchg
mov
rcr
mov
outsb
mov
xchg
push
pop
adc
jl
xchg
outsb
push
sbb
xchg
dec
push
popf
or
stos
mov
nop
inc
xor
loope
lock
mov
fsubrl
mov
mov
stc
pushf
push
jno
add
movsb
and
movl
add
adc
cmp
jmp
push
je
cmpsb
or
xchg
test
add
pop
fldcw
dec
fst
mov
test
fimuls
fstps
add
dec
ja
gs
pop
out
dec
test
inc
xor
aas
pop
inc
push
inc
add
cmp
arpl
shlb
dec
pop
ds
or
imul
aad
mov
lock
xor
jo
cmpl
stc
sarb
pop
sub
sahf
or
cmp
pop
xor
mov
mov
loope
xor
loop
aad
sahf
and
and
shll
pop
pop
add
mov
nop
test
in
push
jne
inc
inc
or
xor
or
push
bound
and
ret
cmpsb
xchg
iret
jb
xor
dec
call
movsl
mov
xor
inc
pop
popf
mov
outsl
dec
inc
hlt
push
cmc
mov
out
scas
dec
mov
cmc
pop
roll
xor
enter
inc
mov
mov
fs
add
dec
lret
std
inc
pop
gs
cmc
loop
jmp
xor
xor
out
stos
fistl
testl
int3
stc
mov
mov
int3
sti
mov
stos
xchg
inc
add
mov
gs
daa
movsl
mov
stos
xor
mov
cmc
pop
sub
dec
jmp
daa
jns
dec
repz
int
addr16
dec
aad
call
jecxz
xchg
movsb
add
insl
fdivp
jp
sar
aam
es
repz
out
xor
fcomps
pop
mov
pop
mov
jecxz
xor
add
cmpl
arpl
outsl
mov
or
pop
jbe
or
sbb
cs
pop
into
outsl
cmp
mov
enter
shlb
popa
xchg
into
add
xor
mulb
pushf
jp
pop
dec
fidivrs
xchg
imul
inc
sbb
mov
push
pushf
ja
sbb
arpl
shl
pop
xchg
out
ljmp
in
and
dec
dec
out
cmpl
xchg
fisubrs
jle
add
out
mov
or
in
add
scas
or
cmp
lahf
add
inc
and
dec
xchg
jecxz
add
mov
mov
aas
adc
adc
add
xor
lods
test
and
loope
push
or
mov
leave
jae
pop
adc
pushf
jns
dec
cld
loop
sbb
shll
jle
push
adc
jmp
inc
push
mov
inc
mov
mov
cmp
cmp
outsb
mov
push
in
or
jp
cmpsb
out
jp
jno
adc
sbb
popa
pop
xor
dec
rolb
sarb
sub
adc
mov
inc
sub
out
ret
iret
jno
dec
mov
hlt
or
adc
pop
sbb
push
xchg
and
mov
aaa
bound
xchg
xor
nop
xchg
leave
imul
arpl
fwait
mov
adc
xchg
push
arpl
inc
pushf
mov
add
loopne
jge
jae
test
arpl
fsubrl
jo
js
mov
jl
pop
xchg
push
cmp
fcomps
jmp
lret
pop
call
xchg
sbb
cmp
jg
push
imul
mov
lods
and
js
aas
adc
lods
repnz
out
and
lea
jg
jb
jecxz
test
sbb
aas
jge
xchg
pop
adc
ret
imull
sub
mov
jg
jo
jo
fadd
add
ja
mov
movsl
and
ret
cmp
sbb
sub
jbe
pop
out
stc
jmp
cld
lds
jne
cmp
int
pop
xchg
lods
icebp
xchg
push
cmp
cmp
iret
loopne
push
cmp
ljmp
mov
cld
mov
push
movsl
dec
jno
divl
mov
jnp
jae
push
sub
outsl
push
fwait
dec
jg
adc
dec
into
sub
or
rcrb
rep
sub
pusha
fs
jo
jge
mov
movsl
or
movsl
aaa
loop
jae
test
ss
jecxz
adc
mov
nop
addb
out
repz
movsb
enter
mov
inc
clc
ret
mov
enter
nop
addl
test
call
pop
ja
leave
movsl
cmpsl
and
add
jge
jmp
sarb
mov
popa
inc
fwait
int
add
push
out
jge
fbld
pop
ljmp
scas
push
fwait
adc
xchg
and
into
xchg
push
push
push
shr
lods
cwtl
pushf
int3
push
mov
jl
fadds
adc
sbb
jg
push
stc
cmc
push
js
scas
mov
loope
jnp
addr16
ret
call
dec
cld
mov
cmp
xchg
push
push
push
sbb
mov
pushf
sub
dec
sarb
scas
pop
add
xchg
mov
out
dec
out
scas
fildl
stc
xchg
adc
test
adc
xor
lret
scas
or
shrb
lods
fimuls
xor
and
or
repnz
jg
inc
cmpsb
rcrb
or
xor
lock
out
pop
xcrypt-ecb
cmpsl
dec
mov
xorb
jns
bound
xchg
push
pop
cmpsb
mov
add
fnstsw
fisubrl
xchg
pushf
cvtps2pi
push
sbbb
sbb
xor
in
lods
dec
bound
sub
ss
push
out
popa
mov
sahf
inc
sahf
mov
mov
pusha
xchg
cld
cmp
cmp
dec
ficoml
insb
jne
mov
sbb
adc
jg
popa
add
sbb
pushf
in
jae
out
add
fimuls
mov
mov
mov
cwtl
aaa
jnp
add
sub
adc
dec
scas
mov
jne
fs
sbb
xchg
aam
pushf
pop
mov
lahf
movb
iret
jle
addb
stos
leave
dec
or
pusha
add
insl
mov
push
jge
adc
fdiv
mov
imul
add
js
pop
add
mov
test
dec
sahf
std
sub
pushf
ja
fisttpl
sbb
scas
jb
popf
cwtl
mov
pushf
mov
jp
or
sti
mov
cmpl
cmp
outsl
cmp
xor
xchg
lahf
lret
orl
dec
repz
add
adcl
sub
mov
mov
sbb
lret
rcl
cmp
jl
fwait
ljmp
jbe
inc
sarl
loop
add
mov
loopne
out
leave
mov
jb,pt
sub
bnd
dec
and
inc
gs
add
sub
xor
icebp
sub
jp
adc
mov
push
icebp
je
cmc
xor
xchg
fimuls
es
cmc
in
lock
decb
cmc
int
adc
mov
sbb
mov
mov
push
inc
xchg
clc
aam
inc
cmp
lods
sub
dec
into
in
push
and
mov
in
inc
mov
xchg
mov
or
adc
jb
sub
dec
mov
int
mov
mov
jb
mov
lret
xchg
xchg
shrb
mov
mov
and
jb
or
mov
ror
pop
and
cld
jns
sbbl
stos
mov
loop
test
and
jle
movsl
iret
mov
xchg
xor
adc
fadd
cltd
scas
pop
sub
mov
xor
inc
lods
jecxz
std
mov
data16
xchg
xlat
test
and
and
xchg
in
mov
fcmovnu
cmp
dec
decl
inc
adc
sbb
or
mov
sub
xchg
cmp
xchg
mov
mov
ror
or
pushf
aaa
inc
pop
ja
test
cmp
pusha
jg
loopne
mov
out
cmp
js
mov
jg
dec
cmpsb
jp
sbb
mov
mov
cmc
loope
push
xchg
lock
jge
outsl
std
mov
sbb
mov
int
dec
or
into
outsb
aaa
scas
inc
mov
mov
das
inc
mov
test
cmc
data16
pop
mov
pop
scas
cmp
push
iret
ja
lods
lahf
mov
movsl
cs
out
xchg
mov
cmp
xlat
nop
call
test
sbbl
orb
pop
pop
in
or
jnp
cwtd
repz
addr16
scas
fistpl
test
cmp
pushf
sub
jge
lret
cltd
lds
rcll
jns
repnz
sbb
mov
lods
fildl
mov
pop
lahf
mov
cmp
dec
ret
jecxz
ja
shl
cmp
push
mov
lcall
je
gs
pop
cmp
xchg
je
sbb
pop
hlt
leave
mov
jmp
js
fsubs
adc
push
mov
jo
mov
fadds
jmp
mov
xor
ja
jmp
inc
gs
int
inc
or
adc
mov
mov
repz
pop
ret
int
cmpsb
pop
jo
sbb
filds
or
popf
xor
lods
inc
es
xor
mov
push
jnp
push
test
stc
ja
aaa
daa
dec
mov
and
and
enter
rclb
pushf
mov
cmpl
fmull
dec
test
popa
mov
push
dec
add
pop
xor
das
sbb
jb,pt
sti
jge
cmc
jbe
fnstsw
inc
push
loope
sub
push
shlb
fnstenv
data16
pushf
cs
cmp
xchg
fcomps
test
jl
inc
test
imul
and
push
push
inc
popa
cld
inc
mov
out
fisubs
push
add
fwait
std
idivl
jg
sahf
sti
adc
adc
outsl
and
mov
gs
rorb
xor
mov
outsl
gs
cmpsl
dec
push
jg
stos
lock
add
lret
out
dec
fsubl
jecxz
xor
adc
daa
jae
push
shlb
adc
mov
pop
dec
mov
rcrl
dec
inc
sbb
cmp
cmp
shrb
test
xor
inc
adc
jo
push
addl
dec
mov
lea
pop
mov
pop
daa
mov
cmpsl
inc
dec
inc
mov
sub
or
mov
cmp
loope
jne
iret
xor
sub
andb
jnp
popf
and
imul
push
jl
shll
sub
jns
sti
lods
mov
push
cmp
stc
lods
sub
gs
dec
inc
cmp
roll
test
out
push
xchg
out
outsl
aaa
dec
arpl
mov
dec
adc
push
incl
jecxz
int3
sti
mov
mov
out
sbb
cs
mov
cmpsl
rorb
jne
push
xor
mov
cltd
divb
ljmp
ljmp
and
cmp
ja
movsbl
popf
or
xchg
jae
sbb
stos
dec
jg
mov
dec
pop
rorb
sahf
cmpsl
xor
add
enter
xor
push
imul
lods
loopne
pusha
shl
inc
pop
mov
loopne
jp
mov
inc
ss
pop
xchg
mov
cs
fucom
jmp
add
mov
fdivs
fwait
bound
fs
test
out
fmulp
icebp
push
dec
loopne
push
jg
mov
and
push
sub
rcll
inc
outsl
cmp
sti
mov
jg
inc
xchg
andl
test
cmp
stc
movb
mov
adc
mov
popf
lcall
xor
and
adc
dec
rorb
and
sbb
in
scas
cmp
mov
push
mov
jno
push
ds
into
jbe
or
jno
mov
add
jae
test
jbe
jge
dec
push
into
mov
outsb
adc
adc
jnp
dec
mov
push
fdivrp
jae
pop
fbstp
or
mov
cmp
inc
mov
pop
sahf
jl
and
rcll
jb
xor
add
mov
in
out
lret
push
mov
stos
fsubrs
mov
sarb
sub
sbb
outsl
in
stos
arpl
dec
ja
iret
jle
jmp
pop
test
imul
dec
mov
sub
imul
jp
cmp
in
push
addr16
push
xchg
lea
dec
mov
adc
cmp
pop
ja
std
daa
mov
scas
in
jnp
and
jne
sbb
je
out
and
add
in
pop
pop
lods
push
sbb
andb
shll
cltd
lods
shl
enter
xor
sub
mov
push
test
inc
sbbl
stos
hlt
sti
test
lock
andb
pop
or
add
push
xchg
fwait
scas
scas
sti
fwait
gs
push
aad
mov
je
mov
ljmp
scas
or
inc
dec
cmpb
mov
jmp
in
das
lock
mov
inc
dec
popf
addr16
inc
xor
loop
cwtl
mov
cmpsl
loop
or
neg
sbb
sbb
push
dec
pop
jnp
mov
sbb
adc
cltd
push
test
dec
cmc
aam
out
dec
inc
and
and
push
sbb
lds
scas
xchg
es
in
cmp
outsl
jecxz
jns
icebp
xchg
inc
idivb
jp
mov
ljmp
dec
or
hlt
add
pop
xor
test
or
xor
jb
push
out
push
or
rcr
and
in
mov
rolb
scas
xor
xchg
cmpsb
push
mov
pop
xchg
fmuls
sub
add
decb
rorl
out
push
test
mov
fstps
cmp
lahf
clc
pushf
push
xchg
cltd
leave
jecxz
push
inc
jo
cmp
add
and
push
mov
imul
fwait
xor
dec
sub
mov
cmpl
inc
inc
mov
adc
push
cld
push
cmp
add
ja
data16
xchg
xchg
cmp
sub
mov
mov
das
pop
xor
pop
or
xor
insb
jnp
fcoml
or
mov
xor
mov
xor
aaa
pop
lea
in
icebp
sub
andl
js
mov
sub
push
lock
push
dec
out
pushf
xchg
push
sbb
push
push
mov
jae
jge
xchg
fldl
jnp
or
sub
test
jns
cs
and
push
dec
pop
or
in
loop
js
xor
inc
inc
mov
sbb
insl
jno
in
add
loope
scas
sub
inc
pop
sub
inc
mov
jge
fsub
frstor
push
popa
and
imul
out
adc
cmp
jle
dec
adc
fs
adc
jl
daa
in
in
sbb
sub
cs
pop
and
add
enter
movsl
cmpsb
sti
fucomip
insb
test
fistl
fwait
mov
xlat
jb
in
dec
jno
call
stos
push
mov
mov
add
pop
sub
das
jecxz
add
push
jmp
adc
jno
jg
mov
xor
fdivs
push
lret
in
push
nop
fs
cwtl
ret
cmpsb
adc
sub
lahf
call
popa
push
jl
ds
movsb
mov
lcall
jne
notb
dec
mov
je
xchg
mov
adc
nop
aas
adc
mov
xchg
inc
add
insl
stc
xor
cli
mov
stos
or
out
adc
mov
fistps
and
mov
cmp
cmp
pop
mov
mov
push
lret
xor
imul
add
in
aaa
add
adc
fwait
adc
mov
insb
jbe,pt
fisttpll
insl
mov
ret
icebp
cmp
stos
jmp
jbe
pop
or
mov
int
inc
mov
adc
mov
mov
outsb
xchg
loopne
adc
cmp
or
jo
adc
bound
xchg
enter
shr
mov
push
or
xor
call
into
in
push
std
lcall
sbb
lahf
jns
loopne
jns
outsl
gs
add
pop
js
mov
xchg
aad
or
loopne
fstps
jae
and
imul
stos
std
decb
daa
insb
sahf
add
stos
cmp
loopne
sub
lock
sub
into
ljmp
jae
pop
in
divl
daa
inc
and
inc
xchg
dec
xlat
ret
mov
and
sub
xor
lret
lret
mov
into
and
fs
inc
inc
loopne
cmpsl
fsubs
scas
and
xchg
ret
dec
popf
dec
adc
pop
fwait
dec
sub
inc
fcomps
in
imul
mov
add
cs
arpl
leave
ljmp
in
sbb
cmp
inc
push
fbstp
sub
data16
xchg
das
orl
testb
fsin
inc
paddq
xchg
inc
pop
inc
rorl
lahf
testl
sbb
aaa
add
fsts
jns
cmc
hlt
rcll
mov
movsl
cltd
mov
inc
in
insl
inc
in
inc
fisubrl
clc
popf
push
out
sub
mov
sbb
jecxz
xchg
or
inc
test
scas
lret
xchg
les
int3
and
pop
dec
fsubrl
inc
in
out
repnz
add
xchg
xor
mov
pop
nop
test
sbb
les
enter
mov
rcl
sbb
adc
adc
sub
int
and
mov
in
and
mov
cmp
inc
orb
fildl
push
imul
sub
icebp
push
mov
mov
mov
in
jp
rolb
dec
mov
mov
inc
xchg
loop
aas
sbb
or
add
add
outsb
mov
xor
dec
call
sub
push
add
push
mov
mov
mov
dec
lcall
pop
mov
jno
and
mov
popf
stc
adc
gs
cli
sbb
xlat
dec
aaa
sub
lahf
ljmp
stc
push
xchg
jp
jecxz
mov
mov
lahf
mov
ficoms
pop
arpl
cmp
push
mov
mov
mov
stos
leave
dec
adc
xor
loope
cmp
fildll
mov
mov
mov
int
add
adc
mov
lods
xor
addr16
ret
mov
sub
jnp
mov
mov
xchg
dec
and
xchg
loope
dec
jecxz
fsubrp
push
mov
push
cmp
rorl
lock
add
in
out
fsubrs
jne
cmp
jge
int3
push
sbb
fs
sarl
mov
mov
cmc
stc
gs
int
shr
ss
inc
dec
and
call
jbe
pop
shll
jge
ret
pusha
push
pop
mov
imul
loop
and
cmp
and
or
insl
jbe
mov
mov
fdiv
in
repnz
mov
or
push
jnp
sub
inc
mov
mov
mov
push
js
xor
faddl
daa
pop
subb
ljmp
cltd
and
insl
or
inc
inc
push
cld
lahf
sbb
sbbb
inc
movsl
cmp
jg
fdivp
adc
inc
movsl
lea
mov
xchg
push
cmp
jg
mov
mov
pop
jno
stos
insl
sti
dec
loop
push
in
xor
adc
add
int
sub
jle
jle
mov
sahf
dec
stc
adc
mov
dec
hlt
rol
pusha
xlat
movsl
jnp
ds
sub
popa
dec
mov
outsl
stc
mov
sbbb
mov
or
das
or
lods
push
testb
adc
shlb
movl
add
add
cli
sub
mov
or
sub
rsqrtps
inc
icebp
cltd
cld
dec
push
arpl
jecxz
jp
dec
mov
ret
clc
ret
lods
dec
mov
add
ja
das
sbb
js
stos
in
mov
mov
adc
xchg
sti
sbb
fcoml
and
ljmp
xor
mov
inc
data16
sub
mov
cmp
mov
push
mov
push
or
popa
lcall
mov
cmpsb
inc
imul
loop
xor
xor
sub
inc
pusha
inc
and
pop
in
das
mov
mov
bound
sbb
pop
rdtsc
pop
test
mov
test
es
dec
jg
test
xchg
dec
cs
adc
or
js
jl
test
out
dec
insl
jmp
mov
adc
sbb
jmp
pop
out
cltd
repnz
mov
cld
mov
adc
out
jae
mov
cli
aas
repz
add
ret
je
xlat
sub
repz
jne
lock
loope
outsl
ret
in
lods
les
mov
lret
pop
pop
and
test
test
aad
mov
outsb
shrb
mov
dec
movb
outsb
inc
loope
clc
icebp
xchg
cmp
and
jnp
cmp
sbb
or
div
and
iret
sub
mov
out
cli
push
mov
pop
imul
xchg
sahf
test
dec
imul
pop
andb
adc
pop
sbb
xchg
rcrl
cmp
call
cmc
movsb
dec
outsb
add
inc
lea
xor
test
cmc
std
sbb
dec
subb
adc
fdivl
or
jmp
adc
shll
or
sahf
test
pop
xor
add
fs
ss
fwait
loop
or
cs
jns
and
in
sub
mov
outsb
in
and
outsl
push
fcomp
add
pushf
xor
es
cli
stc
mov
scas
mov
lret
test
jg
arpl
inc
or
inc
stos
sub
js
jnp
push
repz
add
sbb
test
stos
xor
inc
stc
mov
jl
sub
decl
fcmovnbe
flds
push
js
shl
andb
addr16
movsb
daa
mov
pop
dec
mov
sahf
push
lods
nop
mov
cmpsb
daa
pop
sti
dec
sub
push
jb
inc
push
push
or
subb
popf
insb
xchg
fdivl
or
jae
pusha
fwait
push
movsl
jle
mov
mov
mov
sub
lcall
lock
adc
ljmp
mov
mov
push
stc
jo
or
enter
test
fldl
jb
adc
ds
adc
lcall
shl
es
and
mov
xor
cmc
in
push
mov
stos
push
repnz
and
aam
mov
out
dec
add
and
and
int3
decl
mov
inc
adc
in
pop
xor
pop
scas
push
mov
mov
imul
jg
out
out
imul
pop
clc
xchg
bound
std
in
addl
aad
in
push
test
cmp
xchg
cmpsl
lret
mov
fwait
sub
push
jb
sub
jp
jns
shrl
add
jb,pn
and
push
loop
les
xchg
mov
mov
cmpsb
inc
dec
lods
aas
loope
pushf
and
pop
mov
subb
xchg
lcall
rcl
repz
ljmp
lret
adcl
or
sbb
cmp
mov
call
lret
in
imul
imul
unpcklps
icebp
cli
xchg
ret
leave
mov
pop
pop
add
adc
dec
lret
mov
add
add
in
push
or
outsb
cltd
sbb
lcall
push
push
mov
ss
xlat
pop
and
testb
cmp
push
pushf
mov
jns
stos
inc
pop
sbb
xor
xchg
add
mov
pop
mov
jno
xchg
mov
pop
or
and
jno
add
outsl
xor
ret
mov
mov
mov
popf
lcall
gs
lcall
sub
mov
xor
hlt
icebp
xchg
xor
nop
or
or
daa
int
add
push
mov
dec
adc
jmp
sub
push
ret
getsec
mov
loope
adc
sahf
inc
and
jno
sub
jmp
add
push
ds
sub
lods
in
movd
xorl
push
ds
xor
sbb
sahf
sbb
jg
pop
popa
pop
lods
bound
test
sbbb
pop
push
cmp
jo
mov
test
pop
mov
xchg
test
adc
pop
mov
and
push
ljmp
outsl
and
popf
sahf
mov
fidivrl
xchg
lds
repz
adc
faddl
lret
sbb
and
mov
iret
dec
add
mov
pop
fs
out
ss
push
insb
lret
fisubs
jge
push
mov
add
loopne
sbb
iret
jp
push
pop
stos
lret
add
popf
and
jecxz
sub
fsubrs
lods
adc
stos
hlt
sbb
jne
rcl
push
das
rcrb
adc
mov
pop
addl
push
push
jecxz
out
jge
insb
push
cmpsl
mov
mov
sbb
pop
xor
cmp
divl
cs
test
dec
mov
icebp
jo
xchg
shl
fisubs
ret
aam
aas
xlat
call
mov
mov
orl
imul
fsubr
inc
aam
out
fiaddl
pause
push
insb
xchg
fsubrp
mov
dec
jo
loope
aaa
adc
aaa
push
fdivl
incb
and
aam
loope
mov
and
mov
sub
jae
or
mov
mov
dec
push
sbb
movsl
dec
xchg
inc
cltd
mov
call
fsubs
sbb
ljmp
xor
data16
into
ud1
outsl
jg
fidivrs
adcb
mov
mov
sbb
dec
xchg
xor
inc
mov
add
inc
fidivl
mov
ss
mov
dec
ret
mov
push
mov
lret
out
jnp
cmpsl
movsb
or
repz
mov
inc
pop
popf
enter
add
xorb
mov
loope
xchg
push
cld
les
jle
cltd
int3
dec
xchg
xchg
cmp
dec
in
push
cs
and
movsb
test
sub
rcrb
test
rorb
adc
mov
imull
xor
xchg
test
dec
pushf
insl
xor
cs
push
insl
es
pop
mov
pop
mov
sub
or
daa
je
dec
sbb
mov
mov
pop
mov
dec
push
xchg
jle
jb
lcall
or
add
movl
inc
jmp
and
test
jne
push
dec
mov
scas
push
xchg
out
xchg
hlt
xchg
mov
mov
adc
lahf
push
rolb
cmpsb
ret
push
mov
mov
push
lahf
in
rcrb
cmp
push
js
mov
mov
sbb
lret
hlt
fidivl
test
sub
shlb
cmp
adc
int3
inc
mov
cmp
mov
enter
in
test
movsb
jno
xchg
sbb
jecxz
pop
push
rcll
cmp
inc
das
push
mov
mov
push
xchg
insb
pop
ljmp
fildl
dec
filds
lret
addr16
stc
xor
xor
push
mov
sbb
jg
mov
mov
imul
add
int
inc
push
out
dec
xor
push
jb
imulb
mov
iret
stc
daa
adc
and
lret
inc
xchg
aam
mov
pop
stos
dec
out
and
xchg
loope
nop
andb
fiadds
fisttps
ja
cmpsb
out
xor
seta
pop
sar
adc
add
sbb
insl
sub
inc
outsb
fldenv
cmp
sbb
mov
inc
mov
lds
shrb
pop
jl
xor
inc
push
cmp
test
xchg
inc
int3
test
pop
js
jns
jecxz
jge
mov
adc
mov
pusha
and
push
gs
sbb
ja
cmp
jecxz
cs
dec
sbb
inc
push
xchg
sub
pop
insb
mov
fwait
arpl
mov
and
dec
aaa
mov
imul
in
stos
lret
mov
loop
xchg
mov
jg
ret
js
cmp
sahf
mov
enter
cmp
sbb
push
sub
mov
inc
mov
bound
mov
sahf
inc
lahf
xchg
dec
mov
orl
push
xchg
test
int3
xchg
jno
jl
int3
test
cmp
es
and
xor
lahf
lret
sub
add
push
push
data16
sub
xor
insb
out
mov
ret
cmp
lret
dec
es
insb
and
adc
inc
sahf
and
and
mov
stc
int
dec
push
jle
fsubs
enter
rcrb
jno
adc
or
xchg
pop
add
fcomip
xor
push
imul
inc
xchg
xchg
andb
ret
adc
data16
outsl
loop
jo
push
xchg
jae
mov
jae
ja
loop
lods
pop
sbb
dec
xor
fwait
out
cmp
push
rolb
test
hlt
popa
test
push
mov
ljmp
test
dec
sub
sub
sarl
mov
aas
xchg
add
push
xchg
and
ja
test
add
pop
pop
jbe
daa
insb
xor
dec
cmp
pop
pop
imul
sbbl
fadd
mov
dec
add
sub
stos
rorb
imul
add
repz
and
mov
dec
mov
test
inc
loop
and
and
test
js
jp
cmpsb
jecxz
fisttps
mov
mov
aad
sbb
xor
or
testb
xchg
inc
and
add
push
subb
dec
jecxz
gs
xchg
mov
in
pop
lock
or
nop
les
xor
inc
insb
cli
dec
push
inc
inc
add
iret
test
std
pop
test
in
lds
in
scas
push
rolb
add
mov
movsb
fs
dec
add
cltd
cmp
shrb
mov
sub
mov
push
les
pusha
cltd
add
mov
dec
daa
lods
andl
adc
ss
push
subb
xchg
cs
push
fmuls
mov
filds
xchg
mov
mov
shrb
loop
sarb
hlt
out
xchg
inc
xor
pop
out
enter
and
add
inc
mov
clc
sub
cmpsl
outsb
add
jne
adc
or
pop
dec
stc
jg
call
and
inc
mov
cmp
or
out
sub
dec
pusha
and
pop
repnz
shll
rorl
enter
cs
or
insl
xchg
sub
or
mov
push
xchg
sahf
or
nop
push
daa
in
je
sub
mov
add
xchg
loope
loope
jnp
xchg
hlt
nop
fwait
das
inc
and
imul
leave
in
jmp
add
enter
cmp
jnp
loopne
xor
jl
stc
pushf
stc
adc
ret
lock
sahf
lret
push
mov
mov
clc
fiaddl
xor
hlt
xchg
addr16
insl
out
push
hlt
fisubs
xchg
xlat
out
int3
cli
and
mov
roll
jns
jmp
add
push
push
cmp
out
inc
stos
push
les
dec
xchg
sbb
jl
xchg
xor
stos
test
mov
out
pop
jl
jg
inc
inc
adc
mov
ss
les
sbbb
and
push
call
lahf
dec
sbb
loope
leave
fnsetpm(287
and
pop
lods
lret
inc
jge
pop
and
aam
daa
jno
pop
inc
xchg
repnz
lret
and
add
ja
jae
push
inc
lcall
inc
jb
orw
mov
adc
push
fwait
and
arpl
push
std
inc
push
mov
add
cli
repnz
xor
jl
sub
cmp
lds
inc
jp
nop
push
mov
dec
mov
xlat
popf
sbb
xor
jp
cmc
stos
jns
cmp
mov
pop
les
sti
pop
dec
adc
ret
push
sbb
push
out
movsl
imul
mov
push
xor
stos
mov
cli
outsl
inc
pop
jge
jo
scas
loopne
push
jmp
cli
std
adc
push
stos
add
call
push
push
cmpl
in
bound
mov
int3
fisubl
jb
pop
push
jg
xchg
pop
movsl
pop
cs
cltd
or
loop
sbb
push
cwtl
and
and
or
sub
aam
sbb
inc
jg
mov
xor
pop
mov
scas
jg
mov
xchg
dec
fs
bound
pop
pop
inc
lcall
sbb
je
mov
stos
xor
movsb
sbb
and
cld
imul
mov
add
dec
xor
cmpsl
jge
add
lar
mov
xchg
or
xchg
jmp
xchg
push
call
jl
mov
arpl
jg
cmp
cmp
scas
cmc
sub
dec
lcall
fwait
loopne
pop
mov
fmul
cltd
jl
xchg
pushf
sti
mov
decl
and
adc
inc
mov
push
call
fs
in
xor
mov
ljmp
mov
sbb
push
lret
pop
pop
lret
cli
sahf
add
push
idivb
inc
pop
cli
in
cwtl
fwait
mov
push
ss
popf
enter
mov
pop
call
popa
push
sahf
shll
add
sti
push
addr16
fstpt
call
inc
stos
cmp
call
sub
es
daa
cmp
push
sub
dec
bound
pop
push
daa
cmpsl
jmp
gs
add
ds
and
int3
out
adc
adc
je
xor
bound
bound
clc
mov
xor
lcall
sbb
ss
test
pushf
out
jle
mov
mov
loopne
mov
stos
cmpsl
xchg
aam
jae
icebp
out
gs
or
lret
cwtl
cld
cmovbe
out
ss
cmp
pop
push
push
imul
xchg
gs
insl
rcrl
lret
lret
jmp
add
scas
rorb
pop
imul
cmp
pop
jns
lahf
ficompl
inc
daa
insb
outsb
sbb
push
sub
ljmp
gs
pop
es
leave
call
pop
int3
xor
inc
addr16
loop
outsb
add
sbb
push
jns
stos
push
cmp
cmpl
inc
movsb
lock
aas
stos
pop
cmpsb
mov
add
arpl
mov
insl
cltd
decl
dec
sbb
aad
imul
xchg
mov
jbe
mov
dec
dec
pop
pop
push
ja
test
dec
xchg
ljmp
fnstsw
imul
or
xchg
adc
shrb
out
pop
inc
adcb
sub
mov
jo
lret
out
shl
push
sbb
push
push
in
jge
fcompl
gs
jl
push
mov
mov
or
mov
clc
pop
das
data16
dec
or
dec
xor
nop
mov
loopne
adc
add
or
scas
test
or
pop
mov
cmpsb
enter
enter
loopne
jo
fs
dec
popa
out
sbb
inc
mov
jmp
js
leave
fadd
fucom
lods
xchg
mull
aam
stos
popf
arpl
xchg
insb
mov
add
xchg
inc
in
ja
mov
test
cmp
jno
hlt
sbb
mov
pop
test
add
dec
and
or
fnstsw
and
lock
jmp
popf
stc
adc
test
repz
icebp
dec
and
push
pop
enter
xor
xchg
sbb
out
nop
ds
sub
and
sub
loop
ja
jne
jns
enter
pushw
movsb
pop
or
xchg
inc
into
lods
cmp
dec
mov
jo,pn
push
push
insb
inc
add
pop
xor
jno
scas
lock
sub
lahf
jp
and
push
push
and
push
imul
scas
jnp
jge
movsb
xchg
insb
add
int3
mov
scas
mov
stos
js
adc
inc
je
fidivrs
in
gs
pusha
xorl
mov
jae
roll
repz
les
out
ds
mov
subb
xor
ds
inc
and
sub
mov
lods
push
mov
adc
inc
mov
jae
push
push
js
sub
out
sub
add
fnsave
or
cmpb
mov
jae
push
inc
sub
scas
aad
ficoml
loop
rclb
sub
xchg
push
cltd
and
pop
pop
dec
out
rclb
fcomps
push
outsb
mov
clc
popa
inc
stc
sbb
push
xchg
sbb
sbb
arpl
mov
outsb
mov
pop
xchg
jle
sub
jg
cmp
jp
std
repnz
dec
cmp
aad
inc
push
das
pop
imul
mov
xchg
and
xor
sub
lret
cmp
jne
sbb
scas
dec
roll
sub
mov
xor
rclb
rcll
and
adc
sub
fs
sbb
adc
xor
jne
and
rorb
xor
and
mov
adc
ret
push
pushf
jo
sbb
outsl
pop
stos
shrb
jbe
les
sub
outsb
popa
outsl
nop
loope
cmpsl
dec
mov
xchg
out
add
xor
loopne
dec
or
adc
in
xchg
mov
mov
push
sub
jecxz
or
out
pop
shll
or
imul
add
and
adc
push
inc
xor
mov
and
movsb
jnp
nop
insl
in
loopne
push
out
sbb
and
xchg
sub
daa
nop
insb
mov
lret
mov
int3
push
or
inc
js
inc
mov
aad
xchg
fucomip
xor
xchg
ret
ss
dec
ret
arpl
outsb
xor
nop/reserved
mov
stos
es
repz
dec
add
xchg
cmp
or
cmp
mov
mov
jnp
and
movsl
mov
jg
pop
out
adc
lods
mov
pop
ja
out
adc
inc
sbb
out
mov
and
jmp
xor
sbb
pop
jns
cwtl
add
cmp
adc
lods
pop
xchg
cmp
push
lock
movsb
xor
jae
incl
jmp
xor
mov
jg
and
fcomps
mov
in
fnstenv
lods
orb
movsl
test
xchg
bound
pop
mov
pop
iret
inc
jl
push
push
insl
std
xor
dec
icebp
jle
loope
lret
inc
iret
insb
orl
push
cwtl
scas
dec
mov
test
shll
lods
xchg
daa
imul
nop
push
pop
cmc
enter
stos
test
or
pop
jae
adc
jns
popf
sub
insb
and
shl
mov
push
fimuls
xchg
jp
and
fcmovbe
shlb
xchg
scas
decb
popa
mov
jb
cmpsb
ret
mov
fistpll
pushf
mov
mov
mov
movsl
in
ret
bound
sbb
jno
pop
xorb
mov
inc
sbb
out
dec
mov
dec
push
xchg
or
jl
push
dec
ret
fcoms
mov
mov
adc
pop
sub
mov
push
sarl
mov
cmp
add
xchg
int
add
es
pusha
lret
mov
ja
test
hlt
and
lcall
lahf
sbb
cmpsl
adc
push
pop
add
insl
adc
cmp
push
pop
roll
xchg
fldcw
cmp
rcrb
incb
popa
pop
pop
add
rcrl
lahf
add
addr16
cld
data16
loop
jecxz
out
jne
daa
cld
sub
cwtl
imull
cmpsl
add
inc
or
jns
mov
mov
mov
mov
pop
mov
dec
into
jge
cmpsb
ss
mov
aad
cld
iret
cld
jns
in
insl
mov
loopne
es
sahf
mov
add
repnz
lods
ja
mov
gs
jbe
out
mov
add
or
add
fs
push
fdivrs
pop
or
sub
mov
push
cmpsb
ljmp
movsb
std
insb
bound
cmp
sti
fbld
inc
push
stos
sub
je
adc
movsb
test
test
mov
icebp
cltd
rcll
push
js
imul
idivb
lret
lret
decl
bound
mov
adc
and
call
movsb
add
dec
ja
mov
sbb
inc
movb
or
cmp
sbb
popa
xchg
adc
out
xchg
xor
jg
fwait
push
pop
jge
aas
ret
fsubp
imul
stc
icebp
push
lods
stos
insb
and
mov
and
out
mov
fdiv
mov
dec
adc
fs
xchg
push
inc
adc
insl
xchg
sbb
pop
cs
xor
add
and
mov
outsl
cld
int
cltd
xor
les
adc
xchg
mov
xchg
add
inc
leave
cmp
jmp
andl
mov
push
dec
adc
mov
or
dec
fstp
into
or
dec
insl
xor
js
in
ret
mov
lods
mov
dec
fbld
inc
pushf
cmp
int
andl
xorb
aad
or
push
mov
mov
xchg
jecxz
ret
stos
mov
pusha
in
clc
sti
dec
pop
mov
push
or
iret
faddp
aam
cs
adc
in
inc
fsts
in
xchg
cmp
jae
cli
test
and
fs
cmp
ja
cs
in
and
or
popa
in
mov
aad
inc
cwtl
mov
ret
pop
mov
mov
inc
dec
sbb
push
mov
in
arpl
call
popa
jnp
adc
fildll
jmp
add
daa
or
jge
push
sub
sbbl
jle
mov
push
out
fld
arpl
inc
das
ds
clc
adc
fistpll
jb
orl
ret
and
call
jnp
inc
adc
cmp
inc
je
jg
out
and
sahf
shrb
jo
rcll
out
cltd
add
or
xchg
repnz
jle
pop
mov
inc
mov
orb
pusha
push
aaa
pop
imul
pushf
std
stos
ja
jae
xorl
push
sbb
fistl
add
scas
aam
mov
fistl
inc
sub
orl
push
and
insl
out
outsl
rcr
mov
sub
fwait
scas
xchg
sub
shrl
rcl
mov
mov
xchg
jno
test
cmc
ret
test
jne
imul
sahf
das
mov
imul
pusha
cmpsl
lahf
lds
mov
jb
aaa
scas
sti
mov
pop
mov
mov
int
popa
out
cmpsb
sbb
and
inc
pop
aaa
xchg
xor
dec
xlat
pusha
jnp
dec
mov
lcall
jae
add
adc
mov
xor
movsb
ret
gs
fistl
mov
xchg
sarb
push
sub
or
cmp
mov
scas
in
lret
dec
and
push
add
sbb
lahf
bound
and
je
adc
insl
in
xadd
bound
and
add
shrb
lock
mov
adc
adc
cmp
inc
xchg
mov
std
rsm
mov
iret
dec
mov
jle
xor
mov
int
xor
push
mov
mov
call
in
push
in
insb
int3
or
les
mov
les
add
sbb
icebp
push
stc
mov
cmp
jo
push
aad
pusha
ja
dec
pop
inc
imul
and
dec
adc
insl
cmp
xor
cmp
xchg
sbb
adc
hlt
adc
sub
dec
js
sbb
push
das
pop
aam
gs
pop
add
and
mov
icebp
mov
icebp
cmp
fisttps
mov
cmpsl
insl
and
push
mov
mov
adc
test
push
mov
jle
mov
icebp
scas
outsl
cmp
lock
cmp
pop
scas
hlt
frstor
lds
mov
scas
pop
mov
xchg
mov
jp
test
mov
jnp
mov
repnz
xchg
xchg
pop
popa
popf
insb
push
cmp
cmp
jecxz
or
out
int
adc
adc
call
popf
out
xlat
xor
xor
xchg
test
out
pop
push
lods
pop
pop
inc
jnp
lahf
mov
cmp
cmp
mov
jmp
inc
xor
movsb
loope
xchg
gs
fsubs
dec
add
dec
out
mov
mov
push
jae
out
mov
sub
xchg
adc
jle
insl
fwait
and
sub
cli
sahf
adc
xor
shlb
push
jge
pop
pop
shrl
loopne
movsb
dec
sub
sub
out
xor
xor
lock
mov
test
lret
sub
and
adc
mov
xor
adc
out
mov
pushf
and
aaa
or
xchg
lcall
mov
xor
ret
gs
adc
sub
sub
adc
cmp
inc
sub
call
cmp
mov
cmpsl
loope
pop
cwtl
fists
mov
dec
mov
jo
popa
ficoms
stos
je
call
mov
rol
jnp
loopne
movsl
mov
inc
std
sahf
outsl
push
dec
mov
sbb
nop
ret
pop
jno
stos
adc
push
mov
fnstsw
roll
js
jae
movsb
and
cmp
mov
orb
lods
into
add
cwtl
aam
push
inc
in
or
jmp
jle
ljmp
ficoml
cltd
ja
pop
fidivrs
cmpsb
xor
or
jge
dec
pop
sahf
icebp
les
cmc
scas
pop
adcb
push
lcall
dec
xor
cmp
jl
fs
fwait
aad
xchg
xor
lods
pop
aaa
stc
arpl
or
cld
and
or
mov
cmc
jge
aas
jae
out
daa
dec
fimuls
lcall
dec
jae
in
pop
or
lret
andl
mov
pop
stos
test
inc
fcmovb
jb,pn
ljmp
jl
or
insl
push
cmp
mov
fbld
jno
push
or
cmc
xor
sub
xor
xchg
cmpsb
insl
lahf
mov
fdivrl
mov
les
sarl
cmpsl
ds
fstl
orb
cs
push
out
mov
or
push
iret
adc
lds
cmp
cmpsb
mov
fnstsw
les
adcl
xchg
fmull
loopne
arpl
into
ja
repnz
mov
mov
cmp
mov
inc
pop
mov
push
fwait
int3
mov
add
test
xchg
or
es
push
imul
int3
lds
test
jmp
xchg
mov
cmpsl
bound
or
das
ss
imul
sarb
into
movsb
mov
fwait
mov
pop
loope
imulb
push
push
or
std
loop
push
jl
mov
push
xchg
insb
les
mov
in
dec
out
pop
movsl
xchg
test
ljmp
cltd
mov
add
push
das
mov
mov
or
mov
dec
repz
jmp
shll
nop
outsb
mov
movsl
inc
mov
shl
adc
xchg
adc
mov
dec
sub
decl
push
adc
mov
or
popa
pop
lret
mov
dec
je
dec
mov
xchg
ss
dec
mov
sub
jbe
mov
push
or
cwtl
outsb
repnz
pop
imul
cwtl
cmpsb
popa
fstpt
stos
shll
dec
loopne
mov
repnz
shrb
bound
xor
mull
rcll
pushf
ficompl
cmovno
pop
inc
add
and
iret
popf
in
push
add
mov
dec
pushf
cmpsb
fcomps
mov
adc
push
ret
aad
push
lds
sbb
cmp
or
lds
cmpsl
xchg
ds
push
jg
inc
das
xchg
sub
mov
push
lods
insb
ret
imul
adc
enter
inc
push
inc
ret
inc
add
sahf
mov
fdivrs
cwtl
je
push
inc
outsl
fsqrt
adc
jae
out
lea
hlt
push
ficoms
call
fmull
pop
jg
or
lret
pop
call
dec
mov
fdivl
add
add
je
mov
ret
rcll
loop
js
cmpsl
xor
xchg
loope
pop
rorl
sahf
and
aam
pop
jae
push
push
mov
jnp
out
mov
jne
stc
xchg
dec
adc
mov
mov
nop
xchg
aam
xchg
mov
movsl
or
fstpt
negl
sub
mov
add
cmc
xchg
dec
insl
pop
mov
mov
out
mov
dec
notb
sar
pop
inc
jg
dec
stc
and
push
push
test
pop
pop
lret
mov
pop
je
sub
jae
push
aaa
sbb
pop
sub
xorl
cltd
dec
inc
rcrl
jg
fbld
nop
jmp
ficomps
out
adc
cmp
std
shll
pop
xchg
clc
cmpb
imul
xor
das
aam
loop
xchg
jnp
push
push
push
sbb
jns
push
repz
sbb
aam
insl
sbb
and
inc
jnp
adc
adc
in
pushf
int3
jnp
jecxz
jp
clc
push
ret
sbb
sldt
rclb
dec
movsl
mov
ret
outsb
adc
jl
add
pop
mov
iret
sub
ret
mov
leave
pop
mov
mov
cmpsb
sub
daa
xchg
adc
pop
cwtl
imul
mov
adc
ret
sub
adc
push
push
and
rcrl
fstl
stc
movsl
push
lret
dec
mov
cmpsl
push
mov
jl
push
xchg
or
sbb
xchg
movsl
outsb
sarl
stc
bnd
xchg
sbb
mov
pop
shr
jno
out
or
fs
inc
fwait
je
mov
scas
gs
sar
shlb
or
rclb
jb
popa
xchg
sub
jns
sub
popf
movsl
fidivrl
mov
pop
mov
repz
popf
sti
popa
or
inc
lods
pop
push
lret
out
mov
hlt
mov
stc
es
ljmp
adc
iret
jmp
fistpll
sbb
xor
push
jge
lret
push
andb
mov
jae
ret
xchg
mov
loop
shlb
push
popl
mov
movsb
mov
jg
mov
rolb
leave
faddl
sti
pop
out
pop
rcrb
inc
ret
das
mov
js
pop
ret
push
gs
adcl
movsb
std
ficomps
and
inc
pop
mov
lods
push
in
out
iret
je
sub
xor
cmpsw
mulb
push
shll
and
xor
jge
cli
sub
clc
mov
cmp
xor
popf
out
negb
cmc
push
xor
jae
cmp
test
dec
sarl
dec
enter
add
pop
je
mov
stos
xchg
pop
cmp
addr16
mov
push
push
lds
lods
mov
out
mov
pushf
push
fcompl
adc
xor
pop
mov
imul
fistl
push
mov
mov
push
clc
jo
and
aaa
xchg
sbb
add
in
inc
xor
aaa
cltd
xor
fstl
mov
repnz
aad
fisubrs
xor
cmp
popf
dec
pushf
push
xchg
mov
outsl
xlat
mov
push
lods
pop
scas
sbb
fcoms
outsl
sub
lds
jle
icebp
push
enter
pop
mov
push
fisubrl
in
push
scas
les
xchg
xchg
adc
and
or
insl
xor
in
fsubrl
mulb
dec
fwait
data16
ds
inc
stos
aaa
shll
cmp
es
and
cmp
movsb
inc
subl
push
xchg
add
lea
rcrb
mov
xchg
push
imul
mov
iret
mov
rep
push
stc
mov
lret
sbb
mov
cmpsb
push
add
vpavgb
loope
popf
sbb
xlat
imul
sbb
shl
adc
lds
loopne
aaa
enter
nop
test
cld
mov
dec
xchg
sbb
push
insl
fnstenv
mov
inc
mov
pop
mov
nop
push
cmp
and
arpl
jbe
xchg
jmp
pop
stos
push
push
scas
mov
aad
push
adc
pop
sub
in
inc
or
xchg
test
lret
dec
sbb
cli
lgs
popa
xchg
popa
lds
mov
cmp
xchg
mov
nop
sarl
pushf
pop
xchg
or
pusha
in
cli
fsubr
xchg
mov
mov
loope
pop
xlat
test
sahf
sub
mov
out
xchg
xchg
xor
movsb
fsubs
out
sahf
inc
cmpsl
test
mov
xor
outsl
jmp
loop
cmp
xor
jne
mov
mov
adcb
ja
pop
out
mov
arpl
pushf
repz
int3
rcrl
int3
or
push
outsl
jno
in
lcall
out
mov
sub
imul
outsl
mov
cmc
push
jo
loop
or
imul
fsub
out
icebp
shl
sub
cld
jns
fsubrs
popf
and
pop
aad
xor
jns
jne
das
xor
popf
sub
push
data16
out
fmuls
ds
dec
adc
add
cmp
stos
mov
mov
xor
fmuls
jge
cmp
int
or
int
push
dec
inc
call
sahf
or
cmp
dec
jmp
lock
ds
aaa
mov
popf
lea
je
adcl
iret
mov
and
mov
lods
push
push
inc
sub
jg
add
fbstp
les
outsb
stos
sub
adc
into
fs
inc
pop
push
or
cs
mov
xchg
mov
cmp
mov
adcl
lods
xchg
inc
je
pop
es
push
or
popl
in
adc
int
pushf
cmp
cmp
jne
sub
test
xor
in
pop
leave
adc
mov
imul
jle
adc
into
cld
es
inc
inc
fldenv
aad
or
mov
add
aas
adc
test
push
js
xor
daa
lods
popf
fstpt
scas
sbb
jl
mov
mov
mov
mov
and
ss
push
sub
fs
and
fiadds
aas
and
mov
push
xchg
jb
add
loope
adc
loope
inc
sbb
fistpll
inc
cwtl
les
rolb
push
ror
xchg
lock
sub
cmc
xor
mov
or
flds
test
sets
fnstcw
jb
xchg
dec
hlt
xchg
pop
lahf
stc
test
repnz
adc
add
test
inc
jns
scas
jp
out
jnp
xchg
mov
ficoml
pusha
loopne
inc
inc
lock
mov
notb
sti
lods
nop
push
cld
push
ljmp
jl
cli
jno
dec
stos
ja
push
jl
pop
cmpsl
inc
std
pop
and
fstpl
jecxz
ror
mov
mov
movsb
ljmp
mov
insb
fldt
fwait
pop
mov
clc
push
dec
push
push
mov
fiaddl
int3
adc
sub
hlt
out
xchg
pop
movsl
sbb
mov
mov
xchg
into
pop
imul
pop
pop
push
add
push
push
or
jle
mov
mov
outsl
or
int3
xchg
fnstsw
and
adc
ret
push
mov
test
xor
sti
loopne
fnstcw
pusha
pop
aam
sub
jbe
sahf
pop
cmp
sbb
movsb
dec
fs
das
jo
inc
pop
pop
sbb
cld
addr16
xchg
outsb
add
push
aaa
std
add
or
xor
mov
xchg
mov
sbb
jae
repz
gs
test
out
push
or
sub
in
xchg
test
push
add
mov
and
dec
cli
imul
xor
insb
lock
jne
push
mov
jle
and
movsb
push
enter
inc
ds
or
ss
imul
mov
rorl
mov
adc
inc
adc
cmc
orl
pop
aad
mov
jne
mov
stos
jb
pop
test
outsl
xchg
in
push
movsl
cmc
push
jbe
stos
out
mul
lahf
jmp
rcll
jno
cmp
mov
mov
inc
in
cwtl
mov
lods
test
test
xchg
sub
mov
pop
push
jnp
push
ds
mov
in
stos
or
mov
xchg
mov
fnstenv
mov
mov
adc
lea
loop
dec
inc
filds
mov
push
sbbl
imul
pop
or
mov
cmc
bound
int3
mov
notl
mov
pop
inc
jp
mov
test
fistl
xorb
mov
fistps
jae
push
popa
sbb
arpl
divb
xor
es
cmpsl
insl
cmp
arpl
cmp
push
sahf
and
sub
mov
xchg
push
adc
ret
lods
ret
adc
adc
std
mov
adc
negl
pop
into
lods
out
inc
aam
fcmovbe
dec
popa
inc
inc
lcall
xor
ficomps
pushf
test
cmp
imul
stos
shll
lahf
jne
pop
int3
xlat
sbb
sarb
and
push
imul
aam
jl
add
ds
push
jmp
jns
mov
mov
fimull
or
pusha
ffreep
cli
push
addr16
inc
mov
and
shl
mov
gs
jbe
jecxz
aam
and
push
mov
scas
mov
jecxz
mov
dec
pop
dec
push
cmpsb
into
inc
imul
and
xchg
adc
or
mov
cmp
xor
or
out
fwait
sub
adc
and
test
data16
dec
test
fwait
int3
in
jne
pop
fidivrs
cmova
inc
push
add
outsl
jae
movsb
adc
mov
push
push
jg
outsl
scas
sbb
imul
mov
ret
adc
bound
outsl
sbb
or
mov
dec
idiv
mov
loop
mov
outsl
pop
jecxz
dec
gs
xor
aas
dec
push
roll
icebp
pop
ja
cmpsl
cmp
xchg
add
push
pop
jns,pt
add
jae
dec
mov
popf
lret
into
ret
lahf
fadd
out
sbb
arpl
loopne
aam
cwtl
xchg
lock
inc
ds
sbb
inc
mov
sbbl
dec
in
into
bound
lods
movsl
pop
mov
mov
xor
adc
cmp
pop
sub
xor
xor
jp
stos
jp
leave
ss
pop
loopne
out
adc
ret
dec
scas
mov
in
je
pop
or
scas
orl
push
cmp
sub
jecxz
ss
pop
mov
inc
aad
pop
mov
push
push
mull
sbb
push
in
mov
dec
data16
pop
pop
into
es
mov
stc
mov
pushf
jo
in
aam
aam
mov
leave
mov
repnz
dec
push
popa
lods
push
cmc
inc
cs
fildl
insl
add
xchg
loop
fwait
jno
xchg
out
cmp
test
movsl
jecxz
pop
call
mov
les
rorb
xchg
fs
les
xchg
sbb
cmp
xchg
xchg
rorb
roll
adc
cmp
jnp
xchg
insl
adc
push
in
mov
test
movsl
jge
and
arpl
lock
mov
scas
hlt
pop
mov
jecxz
pop
mov
jno
jecxz
adc
mov
xorb
aaa
mov
pop
cmp
das
dec
leave
lahf
inc
cmp
inc
ficomps
add
cmpsl
movsb
xlat
add
je
icebp
rolb
and
out
sub
cwtl
ds
clc
cmpl
push
mov
pop
ret
shrl
shll
leave
mov
xor
or
sub
or
pushf
mov
push
fldt
movsl
push
inc
dec
sub
std
lret
add
repz
test
cmp
cwtl
and
mov
mov
aaa
xor
out
mov
mov
xor
jns
mov
xchg
stc
xchg
mov
jle
xchg
nop
cmp
fsubr
lods
js
icebp
test
xor
adc
push
jecxz
stos
mov
mov
es
jle
jmp
or
xchg
jmp
inc
rcrl
testb
rorl
rorl
in
pop
and
xchg
ret
shl
mov
mov
mov
fcmovu
mov
jmp
xchg
or
fwait
or
adc
rolb
xchg
fwait
pop
or
lods
loop
or
mov
xor
jns
sbb
addr16
sbb
adc
ja
mov
and
lret
and
pusha
pop
dec
test
loopne
mov
pop
push
out
inc
inc
cltd
es
jl
scas
dec
mov
out
xchg
adc
movsb
pop
xchg
into
test
aas
rcr
lahf
pop
and
pop
pop
bound
and
cmc
movl
outsb
dec
out
mov
sbb
add
sbb
sub
push
scas
adc
sub
mov
imul
aad
add
mov
subb
popa
or
mov
mov
lods
xchg
mov
or
insb
xchg
jnp
push
es
cltd
loop
lods
sub
pop
sub
pushf
movsl
inc
cmp
and
jo
xlat
mov
bound
shrb
add
jns
inc
cmpsl
xlat
loope
push
je
xchg
loop
test
add
cmp
add
jae
lcall
mov
adc
inc
adc
dec
cmp
loopne
push
or
lret
dec
lret
xchg
test
jno
loop
xor
lea
jae
mov
mov
mov
gs
add
pop
movb
jl
lret
lods
pop
inc
sub
in
aad
je
clc
int
xor
push
data16
mov
into
nop
dec
adc
pop
mov
sbb
add
sub
jmp
xchg
sbb
push
test
adc
mov
rclb
push
in
mov
xchg
pushf
push
movsl
insb
inc
loopne
dec
pushf
sub
mov
jno
lds
and
andb
ficomps
jecxz
and
push
sbb
inc
or
cld
dec
es
loope
jns
or
pop
fnstenv
adc
adc
test
icebp
rorl
div
push
mov
sti
ja
outsb
add
mov
sarl
sbb
push
das
and
outsl
push
test
xchg
xchg
mov
xchg
in
nop
cmp
jo
inc
or
addl
cltd
leave
ja
dec
inc
sbb
mov
daa
jge
enter
inc
add
mov
or
aam
pop
inc
xchg
insl
lds
mov
cld
push
mov
leave
loope
jne
xlat
movsb
sub
stc
push
lret
loope
lods
inc
data16
sbb
pop
pusha
and
add
ja
jecxz
imul
int3
hlt
mov
insl
daa
int3
inc
ds
jp
pop
adc
mov
scas
fsts
push
mov
and
mov
out
sub
sbb
int3
imul
out
in
sahf
pop
loop
or
cmp
jp
lcall
cmp
xchg
sub
scas
stos
xor
jg
or
pop
mov
sub
pushf
or
push
fsubr
nop
in
xor
cwtl
ret
outsb
test
les
mov
outsb
pop
push
stc
int
ds
adc
lock
fldcw
and
jb
repnz
add
and
movsl
xchg
xchg
jg
inc
jmp
lea
int
out
push
loope
mov
icebp
mov
adc
dec
leave
lock
pop
dec
divl
push
repnz
lock
rolb
xor
movsl
sti
pop
outsb
dec
mov
das
mov
cmpsb
mov
int3
xor
rcrb
shlb
adc
sub
push
mov
and
bnd
jno
inc
cmpl
lret
or
cmp
divb
adc
popa
jne
pop
cmp
jne
pop
mov
shrl
in
and
ficoms
imul
jle
mov
aaa
mov
je
xor
dec
std
jno
push
add
adc
cmc
jb
decl
mov
adc
cli
bound
push
xchg
stos
sahf
out
clc
sbb
pusha
jecxz
out
andb
and
inc
call
inc
stos
push
pop
pop
sub
mov
mov
xchg
dec
dec
ja
je
imul
mov
add
test
ss
adc
loope
dec
pop
cmpb
enter
out
cmpsb
inc
sbb
inc
jnp
cmp
mov
mov
or
sub
pop
pop
ds
mov
mov
sbb
movsb
stos
sbb
mov
sub
cli
out
push
push
arpl
jne
popa
mov
add
aam
adc
cmc
jl
repz
stos
and
xchg
mov
sbb
movb
mov
mov
movsl
movsb
and
pusha
xlat
outsb
cld
adc
enter
mov
fsts
or
cmpsl
shll
fadds
rcr
lods
jne
xchg
aas
adc
popa
scas
stos
std
push
int3
das
cwtl
xchg
sti
les
pop
sahf
outsb
orl
add
push
insb
mov
mov
ret
aaa
mov
add
xchg
sub
jmp
inc
add
outsb
int3
xchg
stc
leave
dec
pop
call
sbb
sbb
cltd
bound
push
pmaxsw
outsb
xchg
mov
dec
xor
gs
mov
sahf
std
dec
pop
out
lcall
int3
xor
aam
clc
out
push
enter
and
adc
mov
test
mov
push
mov
inc
and
rol
or
jb
add
dec
and
pop
jl
xchg
mov
sbb
mov
iret
lcall
lods
dec
adc
pop
test
jmp
sub
pusha
jmp
mov
and
inc
mov
push
fpatan
mov
mov
push
push
lcall
shlb
loope
add
enter
lret
imul
mov
insl
lock
mov
and
fdivrl
inc
sti
pop
xchg
xchg
pop
xor
xchg
loop
repnz
nop
mov
nop
fldl
mov
mov
es
push
adc
test
jmp
dec
adc
mov
jo
mov
das
stos
xchg
int
ss
or
pop
mov
mov
sbb
dec
stc
jo
imul
inc
jbe
rol
adc
jp
sub
pop
mov
ja
pop
pop
mov
jl
ret
aas
sbb
mov
mov
xchg
or
loope
push
adc
aaa
adc
ror
aad
cmpsb
repnz
mov
mov
mov
jns
xchg
es
pop
addr16
adc
or
cs
sub
sbb
jge
cli
bnd
inc
mov
dec
test
dec
out
into
pusha
cmp
xchg
into
shl
ljmp
and
stc
fsubr
mov
push
pusha
cmpsb
sub
adc
mov
push
and
shl
and
or
push
fwait
pop
fs
sbb
scas
mov
mov
lret
lds
fs
sub
xor
lods
and
cwtl
cmp
jg
inc
je
in
cmp
lcall
pusha
xchg
mov
push
xchg
stc
inc
gs
fstpt
dec
cmp
pusha
mov
out
mov
iret
add
xchg
imul
rcll
cld
pop
mov
sub
loopne
or
xchg
lcall
insl
mov
cmp
loopne
fdivr
xlat
bound
sub
inc
mov
mov
adc
jg
call
test
xlat
les
pop
psubsw
sbb
adc
and
rorb
mov
xchg
xor
xchg
loope
push
lods
aam
test
lcall
cmpsl
outsb
jle
push
pop
pop
xor
mov
cmp
fsubs
fcmovnbe
jno
push
loop
mov
orb
mov
ljmp
mov
xchg
mov
mov
enter
scas
jp
xchg
ret
sub
out
jae
in
xor
std
push
nop
dec
pushf
testl
stos
jmp
pusha
jnp
push
cmpl
mov
inc
cmp
dec
aad
push
sbb
and
push
add
jb
dec
mov
add
sub
mov
sub
vminps
daa
add
mov
shrb
add
lea
xchg
cltd
sub
daa
lahf
scas
jmp
test
mov
sub
aaa
push
shrb
popf
movsl
push
xchg
sti
cmpsb
fiaddl
test
mov
pop
xor
cltd
loopne
cmc
cs
fbld
lds
dec
jp
ja
jmp
dec
bound
into
fldl
sbb
and
mov
jecxz
cmpsl
jmp
rorb
call
in
mov
mov
inc
push
lods
cmpb
lea
mov
sahf
dec
fwait
sub
mov
sbb
imul
pop
aas
and
mov
sarl
ja
xchg
outsl
add
sbb
and
push
lret
fmulp
inc
inc
push
cmp
pop
pusha
lds
jne
dec
jp
push
mov
jo
pop
dec
fisubl
dec
jp
vshufps
ja
cs
mov
sti
jo
out
dec
sbb
adc
inc
aad
aaa
xor
jecxz
sbb
sbb
lret
dec
lock
mov
stos
int3
sub
sub
adc
ljmp
arpl
xor
shlb
test
xor
dec
xchg
es
push
adc
fxtract
pop
cmp
scas
pop
mov
cmp
mov
pop
push
add
out
rcrb
lret
rcrb
js
stos
fldz
push
hlt
mov
mov
stos
stc
aas
scas
cmpsb
pop
mov
dec
mov
mov
outsb
jns
pop
cmp
ja
daa
ficomps
cmp
push
jns
xchg
out
jnp
popf
stc
sbb
or
mov
jecxz
out
adc
ret
shll
jmp
in
outsl
pop
push
fldenv
in
cmp
or
js
sarb
xlat
adcb
jo
lcall
or
loopne
ret
xorl
test
xchg
mov
clc
in
inc
mov
stc
fldl
repz
stc
mov
outsb
jmp
outsl
jecxz
and
out
cmpsl
jb
xchg
sbbl
pop
mov
in
and
xchg
in
test
les
sbb
push
aaa
in
daa
mov
cli
xor
add
stos
xchg
xchg
int
cmpsl
imul
xlat
test
pusha
ja
repnz
mov
das
insl
pusha
jp
loopne
mov
sub
clc
dec
lret
inc
outsl
jle
rcrl
xchg
jno
pop
mov
adc
test
push
mov
cs
push
loopne
cli
mov
mov
sbb
jle
adc
movsl
pop
ret
ds
or
and
inc
mov
gs
and
das
je
fistps
xchg
ret
fucomi
cmp
jne
fildl
lahf
sarb
jo
mov
iret
or
push
pop
mulb
xchg
iret
sub
sub
lods
pop
cmp
jae
mov
outsl
xchg
cmp
lret
outsb
sbb
dec
pop
dec
dec
pop
cmc
push
or
shlb
das
rcl
hlt
lods
pop
mov
fidivrs
mov
push
dec
mov
sbb
pusha
clc
repnz
sub
lahf
xor
mov
xor
iret
pop
push
xor
int
sbbb
imul
sbb
cmp
in
ret
pop
xchg
leave
mov
mov
inc
sub
lahf
inc
push
addr16
sub
ret
aaa
push
mov
mov
or
inc
ret
mov
pop
and
rcrb
pop
mov
outsb
inc
mov
daa
xor
jecxz
push
pop
pop
fbld
xor
es
push
gs
xor
dec
xorb
pop
repz
xchg
pop
mov
imul
jnp
inc
mov
xchg
add
jo
cmp
sub
mov
push
aam
adc
inc
add
jb
cmpsl
push
xchg
ret
lods
sub
pop
mov
adc
xchg
sub
jecxz
or
fistpll
cmc
subb
mov
or
and
dec
fmul
jno
pop
pop
mov
cld
pop
outsb
dec
adc
xchg
test
inc
bnd
gs
stos
loopne
mov
andl
popf
rorl
add
xchg
inc
int
in
ja
sbb
repnz
inc
sub
jmp
leave
popa
xchg
cmp
sti
or
inc
adc
mov
sbb
dec
enter
jge
repnz
out
sub
sahf
jl
jp
popa
sarl
in
test
lock
ret
icebp
rclb
repz
mov
push
fs
data16
bnd
mov
fwait
jmp
popa
ljmp
lret
orl
aaa
dec
sub
int
out
dec
add
aad
int
sbb
cmpsb
adc
cmp
data16
lods
pop
scas
rcrb
bound
xor
fldl
sub
punpckhdq
and
daa
fisttpll
int
mov
lcall
push
into
dec
pop
mov
sti
pushf
inc
call
dec
sub
in
scas
daa
call
outsb
jae
shll
sbb
xor
adc
rclb
jmp
sub
loop
jb
cli
mov
sub
sbb
mov
add
fisttpll
push
lds
jg
mov
push
test
xchg
shl
sbb
pop
daa
test
mov
dec
imul
fldpi
push
jb
mov
fsub
subb
sub
dec
jl
mov
ret
pop
loop
dec
sub
pop
pop
and
es
pop
aaa
outsb
lds
xchg
dec
add
add
push
pusha
xchg
adc
ret
outsb
js
notl
clc
mov
pop
fcmovb
or
push
and
and
arpl
stos
add
jno
sahf
lahf
xchg
sub
into
stc
int
daa
fucom
mov
repz
stos
int3
sub
jle
pop
mov
mov
push
cmp
adc
jmp
ror
dec
push
xchg
ret
loop
pop
popa
cs
xor
push
dec
rorl
outsb
and
sub
fimull
jne
loopne
cli
mov
mov
adc
push
dec
lock
inc
pop
xor
cld
or
pop
jmp
lret
sub
xor
dec
push
mov
inc
push
xchg
or
sub
stos
shl
push
dec
pop
aam
and
mov
sub
push
test
or
fildl
add
ljmp
sbb
fmuls
sysexit
popf
sub
bound
push
jge
xchg
out
fimuls
sbb
fwait
jmp
sbb
insl
mov
int3
push
fnstenv
push
lret
push
jmp
push
sub
rcr
and
dec
push
and
pop
jmp
hlt
rorl
call
dec
rorb
insl
mov
add
aad
pop
push
mov
repnz
jecxz
mov
stos
push
jbe
arpl
ret
daa
fs
inc
mov
pop
in
push
xchg
aas
out
mov
out
and
mov
jecxz
outsb
fistpl
xchg
inc
cld
rorb
push
out
jle
mov
xchg
jo
daa
pop
in
test
cmc
in
sub
test
jno
fsubl
xchg
daa
add
movsb
cmc
xchg
in
pop
scas
jle
call
in
xchg
push
sub
rorl
push
scas
in
jg
pop
and
and
or
fwait
ss
test
test
mov
int3
adc
popl
mov
xor
fiadds
out
xor
jno
cltd
push
nop
movb
stos
cmp
loope
addl
mov
leave
xchg
xchg
and
pusha
je
ja
std
add
repz
test
push
arpl
dec
les
pop
aam
push
mov
pop
test
inc
popa
inc
jmp
pop
push
xchg
or
mov
jae
or
icebp
movsb
jae
stos
pop
lea
push
mov
enter
mov
sbb
adc
daa
jmp
adc
lahf
xor
rclb
push
out
or
sbb
clc
jl
repnz
xchg
pop
je
outsl
jne
ljmp
lods
int3
push
push
adc
cld
pop
xlat
mov
pop
mov
pop
jmp
aas
cld
dec
xor
push
sub
cmp
lea
mov
rcrl
testl
inc
test
es
movsl
dec
or
jge
pushf
mov
adc
out
leave
rclb
aaa
add
arpl
fistpl
fisubs
movsb
imul
mov
clc
push
sbb
xor
xchg
iret
cmpb
out
mov
inc
pop
negb
jo
aas
xchg
or
and
shlb
adc
xchg
shrl
test
mov
pop
shll
movsb
or
add
sbb
enter
imul
push
mov
movsl
fsubs
or
sub
jns
movsb
dec
adc
jl
mov
cmp
dec
notb
jp
adc
ret
popl
xchg
clc
sahf
or
popf
fmull
adc
xor
popf
cmp
bound
aad
push
or
add
pushf
leave
push
dec
cs
mov
adc
xchg
xchg
rcl
inc
lcall
lods
mov
in
adc
mov
mov
ficompl
dec
int3
pushf
dec
mov
lcall
and
xor
xchg
xchg
incb
rorb
ljmp
int
adc
inc
outsb
aam
arpl
add
xor
pop
loop
add
push
test
mov
cmc
scas
cvtpi2ps
cltd
sbb
dec
jns
fnstsw
cli
cmp
push
push
adc
call
add
xchg
push
hlt
add
cli
lret
sti
mov
xlat
dec
pop
ficoml
push
inc
popf
repnz
fdivl
lcall
fwait
call
or
adc
adcb
xlat
stos
and
enter
sbb
cwtl
jge
jle
rclb
jg
roll
inc
out
je
lcall
jl
push
sbb
cld
sub
dec
jae
pop
mov
out
ret
mov
inc
int3
push
xorb
pop
pusha
mov
gs
cli
push
data16
fsub
lods
lds
xchg
adc
jae
popf
mov
arpl
adc
add
mov
rorl
arpl
in
mov
shrb
push
int
mov
test
or
pop
mov
dec
pop
and
test
inc
and
enter
xchg
adc
mov
les
shll
aam
popf
mov
ud0
push
or
add
or
outsb
insl
xor
ja
adc
pop
xor
or
add
pop
pop
push
or
sub
fnsave
jle
imul
in
xor
sbbb
lcall
push
add
or
lahf
popf
inc
xchg
cmp
jl
pop
in
scas
xchg
inc
push
imul
pop
rcr
and
pop
push
lahf
leave
cmpsl
and
ljmp
adc
push
ret
cmpsb
loop
test
pop
outsb
cwtl
into
cmc
rorl
jp,pn
cli
mov
push
push
ljmp
push
leave
aaa
cmp
stc
inc
cmp
cmp
push
mov
aas
cmp
movsb
fstps
dec
mov
out
push
mov
pop
mov
xor
packsswb
mov
in
outsl
xchg
xchg
adc
jns
gs
or
adc
fildll
test
jl
fdivl
mov
sbb
icebp
orl
push
outsb
cmp
cltd
lret
sbb
push
inc
dec
add
jge
and
cmp
fcomps
arpl
jnp
ret
cld
stc
mov
sub
icebp
pop
adc
pop
mov
xor
pop
addr16
divb
cs
jge
mov
dec
or
nop
or
mov
sahf
and
mov
jno
sub
ret
fisubrl
es
idiv
stos
les
arpl
repnz
nop
add
jmp
mov
nop
push
dec
mov
xor
push
aam
jmp
outsb
push
or
jle
cmp
jl
xor
inc
xchg
cltd
addr16
mov
mulb
push
mov
cmp
xor
imul
push
or
pop
stos
and
pop
pshufw
adc
inc
ret
out
push
insb
xchg
cmpsb
add
mov
or
jbe
cmp
mov
aaa
stos
mov
imul
dec
aas
test
pop
add
filds
mov
xchg
push
arpl
xor
stc
ret
call
adc
xor
punpckhwd
and
icebp
out
lds
int3
push
jge
mov
ffree
jp
mov
pop
xor
sbb
mov
cmp
inc
imul
jb
mov
mov
ds
cwtl
test
les
out
cli
das
jo
test
mov
fmul
jns
push
mov
sub
add
and
add
pop
in
pop
ja
pop
dec
movsl
fnstenv
inc
and
cmp
stos
clc
and
int3
or
add
roll
xor
pop
out
into
xchg
sbb
ds
iret
lods
xor
jno
inc
push
mov
hlt
jb
inc
leave
xchg
ret
orb
shll
adcl
or
jmp
jmp
push
jge
dec
or
mov
pop
mov
jge
and
imul
das
aas
sbb
cwtl
stos
in
mov
mov
jecxz,pn
xlat
cmpsl
sahf
xchg
scas
bnd
dec
mov
cmp
mov
aas
repnz
mov
push
mov
ficompl
cmp
insb
adc
mov
fsubs
sahf
pop
lret
xor
jb
ljmp
dec
mov
jecxz
xor
or
shll
dec
lock
xor
pushl
jle
add
movsl
ret
loope
idivl
ja
cmp
jge
cli
loop
jns
cmp
addb
jge
xor
and
jns
repz
mov
mov
cmpsb
out
cwtl
in
and
addb
jecxz
dec
nop
jp
or
into
cwtl
sub
xchg
cld
scas
ss
jnp
int
or
cmpsb
in
xchg
push
xor
mov
shrb
mov
adc
jno
sti
enter
ss
jmp
rcr
aaa
or
pop
roll
dec
push
lods
xor
jb
mov
das
push
sub
aas
test
dec
ret
js
test
test
push
jl
xor
jne
gs
push
sbb
add
dec
sub
jl
pop
mov
push
cmp
sub
and
xlat
sub
movsl
lods
mov
addr16
xor
imul
test
or
jo
push
mov
jmp
push
mov
sub
orb
lods
andb
ds
mov
insl
jnp
xchg
mov
mull
mov
xor
insb
and
lret
dec
stos
mov
das
sbb
jmp
inc
jmp
adc
jecxz
mov
dec
sub
jo
xorb
mov
pop
es
dec
add
jg
pop
fbstp
lods
xchg
jns
popf
mov
out
orl
mov
sub
push
leave
sarw
in
lahf
mov
cmp
orb
and
adc
jo
out
mov
and
les
inc
jle
das
jbe
pinsrw
mov
push
push
sti
pop
das
fimull
sub
mov
insl
inc
pop
push
js
pop
sbbl
mov
mov
jne
sub
push
std
stc
push
cmc
rcl
aam
mov
shll
sbb
xlat
out
sub
jne
add
out
xor
adc
mov
mov
in
lahf
mov
and
sti
stc
out
sbb
aam
lret
mov
iret
daa
cmc
adc
mov
sub
ret
mov
xchg
dec
daa
push
xor
jmp
mov
push
je
mov
decb
rcrb
negl
jmp
pop
ja
jmp
push
repnz
rcll
flds
lret
or
add
fldl
add
push
adc
mov
imul
sub
sub
xchg
mov
je
xor
xchg
mov
lea
je
pop
loope
enter
ss
sub
ljmp
ljmp
lcall
lds
push
in
xor
addb
adc
jnp
in
pop
dec
je
xchg
mov
pop
mov
jne
scas
orl
jg
mov
ljmp
add
sahf
sub
call
ljmp
aam
mov
xor
xchg
js
lock
aas
pop
leave
jbe
add
and
mov
add
jo
gs
leave
imul
pop
mov
mov
pushf
push
push
push
push
mov
mov
movsl
pop
xchg
xor
jbe
mov
loop
xchg
stc
and
leave
mov
add
inc
push
popf
repz
les
jmp
jl
rcrb
mov
adc
std
fidivrl
loopne
jle
into
and
adc
arpl
sbb
mov
pop
cmp
and
add
lds
sub
xchg
mov
hlt
rcrb
jno
jp
and
daa
inc
sbb
jle
testb
mov
or
addr16
enter
mov
out
adc
and
loope
in
repnz
pusha
shlb
inc
pop
out
mov
test
xchg
push
adc
ret
mov
fsub
rolb
outsb
test
loopne
cmp
sub
inc
and
or
xchg
dec
add
mov
dec
push
cmp
mov
scas
push
test
lret
or
mov
test
pop
sub
dec
mov
sub
jno
test
cmp
jmp
leave
shrb
pop
gs
lods
jae
and
mov
stos
loope
jo
andps
iret
les
push
rorl
inc
cmp
dec
dec
insl
int3
incl
lock
mov
xchg
mov
sti
jge
lret
inc
outsb
insb
adc
pop
in
xchg
loopne
adc
and
pusha
popa
push
lret
bound
xchg
rcrb
cmp
push
nop
das
insb
jne
rcll
imul
dec
xor
loopne
and
fstp
jne
clc
xchg
nop
jmp
dec
mov
cwtl
mov
cmpsb
dec
jnp
push
pop
out
jle
cmp
sbb
sub
lret
aam
cli
lds
and
sarb
push
push
pop
sbb
push
js
mov
sub
imul
imul
add
jl
inc
std
cmc
jbe
test
sub
jns
adc
xchg
sub
push
andb
mov
sahf
xchg
add
cwtl
push
repz
aas
mov
jb
loopne
sbb
fisubl
lret
fs
sub
cwtl
xor
push
in
js
sbbl
fs
scas
or
mov
rolb
and
cld
xorl
sbb
dec
lahf
jl
inc
sub
int3
mov
sbb
in
jbe
mov
and
aam
mov
push
stc
cld
mov
and
mov
popa
jl
xlat
mov
adc
addr16
inc
xchg
js
add
push
push
mov
cmpsb
outsl
adc
mov
jnp
dec
xor
xchg
mov
test
sar
or
into
add
jnp
push
jcxz
mov
jp
stos
in
xchg
lcall
xor
dec
into
inc
push
xchg
outsl
xlat
xor
inc
mov
leave
addl
fisubrs
out
mov
dec
aam
inc
imul
ja
std
sahf
lahf
cmc
xchg
xchg
or
imul
pop
inc
lods
sub
jle
lds
mov
std
push
dec
dec
xor
cmp
jne
inc
outsb
jno
pop
rorb
inc
sbb
adc
shlb
or
rclb
enter
es
sbb
dec
in
testb
insb
cmpsl
sbb
pop
push
xchg
clc
xor
and
loope
dec
sti
or
aad
pop
into
ret
fdivrs
sbb
mov
jle
mov
mov
shlb
xor
dec
inc
adc
arpl
push
lock
sbb
xchg
xchg
int3
mov
push
shl
dec
js
add
aam
into
cltd
mov
push
movsl
out
and
inc
inc
mov
call
inc
xlat
fnstenv
mov
sarb
xor
or
in
ja
negl
lcall
adc
mov
hlt
add
dec
mov
out
push
hlt
add
mov
cmp
aad
cmp
or
push
lret
insb
aad
into
in
mov
inc
mov
or
and
leave
punpcklbw
jo
add
push
arpl
and
hlt
push
dec
outsl
sub
xor
cwtl
and
cmp
insb
xchg
outsl
and
mov
loope
jg
xor
clc
filds
or
fisubl
daa
dec
jmp
es
cmpsb
xor
xor
loop
xor
push
testb
cmp
xor
or
dec
sbb
lock
fstpl
faddl
rorl
fisttpll
cmpsl
sub
loop
addb
jbe
test
mov
pop
pop
jne
adc
jo
shlb
cs
fwait
push
jl
popf
push
pop
addl
ljmp
jnp
scas
dec
in
fsubrl
outsl
sub
pop
into
imul
xchg
mov
sbb
xchg
repz
ss
daa
and
lcall
xchg
aas
arpl
inc
lret
push
mov
sbb
mulb
or
sahf
sbb
mov
push
loope
xchg
pop
push
xchg
push
lods
jg
inc
sbbl
pop
sbb
dec
andb
jbe
jne
add
dec
sub
movsb
or
test
xchg
xor
out
push
ds
mov
popf
aas
lahf
out
mov
mov
lret
repz
shll
push
hlt
lods
out
xchg
lret
sub
pop
jge
pop
lock
jo
push
mov
xlat
sahf
sahf
push
sub
lods
add
xchg
or
lds
jp
divl
imul
stos
add
xchg
cmp
cmc
sbb
and
push
cld
mov
and
sub
rcll
daa
push
fists
cwtl
lret
mov
sbb
xchg
cld
stc
mov
push
and
mov
scas
loope
pop
mov
or
cmp
pushf
cmc
mov
jp
jp
ret
jno
pop
dec
jo
or
nop
popa
fcmovnb
dec
outsb
xchg
push
push
lret
pop
leave
outsl
popf
lds
push
mov
xor
out
loop
and
push
fwait
mov
xchg
cli
out
dec
sbb
inc
orl
mov
mov
inc
mov
stc
ret
push
mov
js
push
cli
jns
clc
data16
pop
and
sub
jle
bound
shl
ret
imul
stos
mov
dec
dec
test
adc
and
lods
lret
and
js
test
cmp
mov
fisttpll
insl
outsb
mov
mov
loopne
mov
adc
daa
dec
loopne
cs
sbb
test
adc
imul
lock
mov
loop
pop
test
scas
add
out
incb
scas
scas
push
mov
test
mov
push
test
gs
fidivl
stc
je
rolb
and
lret
or
push
pop
aas
std
jbe
sbb
enter
into
push
repnz
lock
pop
cmc
jmp
add
or
cmp
daa
cmp
cmpl
insb
or
shr
nop
mov
insb
or
mov
mov
lret
dec
iret
sahf
add
hlt
sub
xorl
jmp
and
xchg
cs
int3
shlb
ja
fwait
test
inc
jge
clc
fistpll
adc
mov
lret
insb
pop
popf
and
rcrb
dec
ret
or
ret
into
adc
imul
lret
xchg
jns
fsubrp
mov
fs
mov
scas
dec
xchg
mov
jne
clc
mov
or
and
and
sbb
lock
sub
ret
loop
cmp
sti
mov
xor
jl
fidivrl
in
push
sti
or
push
or
popa
imul
gs
fnstsw
jge
insl
loop
repz
jg
xchg
mov
dec
pop
popa
adc
pop
sbb
out
shll
inc
inc
imul
sub
sub
inc
lods
shll
xor
test
lods
inc
outsl
dec
and
inc
adc
pop
stc
dec
ds
xchg
mov
psubusw
mov
sub
les
mov
call
roll
aaa
inc
gs
or
jns
xchg
mov
push
bound
rolb
ljmp
pop
testb
fcoml
out
jle
stos
sub
test
pop
and
repz
data16
dec
les
mov
mov
addr16
icebp
aaa
add
mov
in
or
mov
stc
shll
mov
cmpsb
dec
xor
add
daa
pushw
inc
test
test
in
or
push
xor
and
and
dec
stos
out
xchg
pop
por
cmp
pop
push
or
xchg
and
push
mov
fimull
inc
cld
shrb
mov
mov
jmp
dec
sbb
lret
push
int3
cltd
fisubs
into
mov
pop
and
js
ds
adc
xor
mov
inc
mov
inc
mov
or
xlat
cmp
and
enter
jmp
and
jle
cmpsb
jmp
add
sti
pop
cmc
in
xor
in
mov
xlat
dec
lcall
sub
jg
test
inc
or
mov
jp
xor
adc
pop
mov
mov
hlt
scas
neg
es
or
mov
cmpsl
stos
or
popw
fisubrs
in
retw
sti
jecxz
push
jns
mov
test
jle
sub
jl
js
ja
enter
dec
addr16
and
int
adc
dec
xchg
imull
lea
add
ja
mov
ljmp
xor
repnz
call
inc
xchg
lea
or
shr
popf
jno
scas
mov
mov
pop
mov
cld
dec
sub
pop
shll
addl
call
jge
mov
sbb
mov
xchg
dec
sti
outsb
add
aas
and
and
imul
lock
push
pop
sbb
dec
neg
adc
mov
mov
in
mov
loop
inc
in
outsb
inc
xchg
inc
mov
test
add
stos
repnz
les
adc
jae
mov
enter
cmpsl
pop
fcoms
fldt
aaa
lock
push
mov
pop
das
and
imull
lahf
gs
ret
inc
xchg
movsb
push
out
lea
shll
shrb
and
cli
xor
jne
xor
test
pop
sub
fucomp
pop
xlat
lds
or
push
mov
aad
ret
dec
mov
adc
stos
adc
push
cmp
test
push
pop
lret
mul
dec
sahf
sub
cltd
cli
mov
push
mov
mov
push
lock
loop
and
in
gs
cmp
fwait
rcrb
cltd
mov
fsubl
pop
xor
insb
imul
adc
pop
adc
test
in
pusha
xor
or
fidivrs
icebp
insb
addr16
repz
add
or
fwait
and
mov
out
xor
dec
adc
int
cmp
lcall
clc
xchg
rclb
nop
fildl
loope
mov
add
lret
add
iret
mov
jns
ljmp
dec
jle
icebp
inc
cli
imull
push
sub
pop
jno
stos
push
push
out
outsl
dec
in
aas
mov
ja
dec
mov
xor
ffreep
xor
jmp
push
in
fcompl
jne
fsub
in
push
jge
lahf
adc
sub
outsb
aas
mov
xchg
cmp
mov
cmp
daa
sbb
pop
shlb
insb
mov
and
xor
mov
movb
stos
jbe
inc
je
jb
xchg
insb
add
xchg
pop
lods
pushf
fbld
push
and
cmp
hlt
push
push
inc
sub
cwtl
leave
fstps
cmp
xorl
lahf
jae
adc
jp
aaa
xor
jmp
xor
dec
and
ljmpw
js
sub
sub
jl
call
jo
xchg
enter
push
inc
fcom
push
bnd
pop
adc
inc
inc
lahf
out
cmpsl
icebp
or
push
jne
adc
cmp
mov
cs
jp
mov
jle
cmp
pop
outsb
imul
insb
sbb
stos
mov
pop
xchg
and
enter
pop
shrb
or
loope
cmp
mov
jae
fadd
xchg
mov
push
mov
mov
jae
lock
subb
insl
aaa
ret
push
fs
and
cmpsl
or
sbb
sub
dec
mov
mov
iret
into
jo
mov
mov
scas
mov
cmp
xor
adc
sbb
addr16
jmp
mov
push
hlt
and
pop
popf
jae
push
popa
jb
push
aas
xorl
xor
mov
pop
inc
push
fimull
inc
pop
jecxz
ljmp
xchg
gs
cmp
dec
cmp
mov
fwait
push
xrelease
cmc
xor
or
jne
cmpb
notb
add
fdivs
mov
mov
idivl
xchg
jnp
cli
pop
push
xor
dec
xor
faddl
cmpsb
adc
lcall
and
or
xchg
dec
icebp
mov
push
push
mov
push
cmp
inc
mov
scas
stos
movsl
pop
int3
adc
inc
push
ret
jbe
js
mov
subb
sbb
jl
mov
std
inc
call
outsb
enter
dec
xor
or
or
xor
push
inc
test
ja
push
daa
push
jns
jno
mov
notl
jb
fwait
mov
pop
lds
sbbl
sbb
mov
mov
je
jb
sbb
pop
rcl
sbb
or
and
mov
scas
xor
sbb
jnp
addl
nop
mov
pop
pop
mov
xor
mov
scas
arpl
fidivrs
push
shr
gs
push
imul
popf
iret
es
daa
inc
push
ffreep
dec
pop
xorl
sbb
mov
sub
insl
jo
xor
movsl
lock
test
mov
sti
mov
xchg
cs
pushf
and
push
loope
jns
mov
aas
pop
cs
mov
pop
push
inc
mov
mov
and
xor
test
lock
ret
and
sbb
or
fmull
fisttpl
imul
lea
jle
mov
dec
cwtl
mov
dec
mov
pop
mov
out
repz
aas
dec
test
and
inc
aam
pop
xchg
xchg
outsb
cli
add
or
xlat
rclb
ret
in
mov
sahf
popa
xchg
adcb
adcl
sub
or
mov
mov
mov
jp
repz
or
nop
cmp
stos
fwait
lret
div
shll
or
sub
icebp
icebp
jl
shll
je
fcom
inc
adc
daa
mov
xor
push
sbb
pop
mov
je
push
xor
push
cmp
lods
push
stos
repnz
fs
mov
imul
in
loopne
lret
or
jmp
dec
adc
cltd
lret
xchg
jbe
mov
cltd
dec
dec
das
jle
jecxz
mov
jl
fstpt
stc
push
cmp
sub
inc
xchg
add
adc
jnp
pop
and
or
jge
cwtl
and
clc
aad
cwtl
int
ret
pop
pop
push
dec
mov
outsb
add
adc
or
or
fisubl
in
outsl
aad
jb
pop
mov
mov
dec
xchg
push
mov
mov
or
imul
pop
leave
dec
jne
dec
sarl
inc
ret
gs
push
xchg
fs
inc
sbb
cmpsb
jecxz
mov
adc
pushf
mov
jecxz
dec
fcomi
daa
lret
push
mov
sbb
and
test
and
stos
push
jb
jmp
inc
mov
lods
shrl
dec
xchg
rolb
subl
add
sub
add
pop
xor
mov
jg
insl
jno
enter
std
mov
stos
mov
insb
and
jle
sbb
xchg
std
ljmp
lods
add
test
test
sub
addb
pop
adc
popf
sahf
pop
in
cld
xor
push
fsts
dec
int
cmpsl
and
inc
adc
repz
push
das
mov
mov
jge
imul
fwait
stos
xchg
call
adc
dec
xor
jae
xchg
lods
pop
scas
cwtl
jae
fiadds
divl
sub
sbb
mov
dec
cmp
mov
cwtl
js
fsubrl
mov
jp
jge
add
xor
adcl
cltd
jl
dec
les
enter
arpl
imul
jne
adc
popa
ja
ret
in
loope
push
in
mov
inc
xor
fsubp
ds
inc
repnz
sbb
push
adc
lahf
mov
cmp
fwait
hlt
imul
jb
push
push
lret
adc
pop
sbb
cs
adc
les
lahf
fisttpll
jp
xor
nop
popf
adc
daa
sbb
mov
pop
pop
loop
mov
shrl
fwait
sub
test
or
pushf
fmulp
sbb
clc
pop
pop
in
inc
imul
rcll
xchg
or
or
xlat
xor
in
push
dec
mov
xor
test
push
adc
dec
enter
or
shrb
or
mov
jae
xchg
and
aaa
dec
loopne
out
xchg
cmp
add
xor
insl
adc
shrb
aas
cmp
add
inc
pusha
jge
dec
mov
inc
add
xchg
rorb
int
inc
and
jge
mov
in
dec
or
push
subb
mov
add
inc
or
mov
inc
mov
xchg
cmp
mov
jmp
jge
xchg
std
mov
or
les
pop
cmp
aad
mov
mov
or
movsl
movsb
nop
es
push
add
or
push
std
xor
in
std
sahf
add
movsl
int3
push
mov
stos
rcr
add
fcoml
sbb
cmpsl
pop
mov
pushf
aam
push
iret
dec
xor
mov
ds
out
sti
leave
pop
int3
and
mov
add
add
push
repz
hlt
xorb
aad
test
xchg
aam
fs
inc
fistl
and
comiss
push
scas
call
xor
inc
shlb
outsb
jbe
dec
adc
xlat
cmp
je
or
sbb
clc
jle
dec
popa
jmp
inc
inc
jno
push
mov
ljmp
jbe
lret
insl
xor
xor
sub
test
ss
scas
add
aas
stc
out
mov
xlat
mov
push
jmp
repnz
imulb
rcrl
sbb
add
fnstsw
jnp
int3
fwait
out
pushf
adc
mov
mov
ja
test
push
out
inc
hlt
cmp
ja
data16
call
xchg
dec
xchg
dec
stos
out
imul
push
adc
sub
or
adc
mov
ja
xchg
in
jle
mov
shr
add
jae
add
cli
mov
xchg
fsubrl
inc
shrb
xchg
or
paddd
in
sti
push
out
rcll
stos
pop
aaa
xchg
in
loopne
psubq
mov
dec
mov
or
mov
xchg
fcmovnu
sub
jno
add
push
and
ret
in
mov
and
cmpsb
jp
sbb
push
cmp
aad
rcrl
push
inc
lea
popl
std
rcl
ja
inc
push
shlb
cmpsb
fwait
jns
call
add
adc
call
or
popf
sbb
aaa
dec
add
fdivs
ss
pop
shlw
xchg
test
sub
inc
cmp
pop
mov
in
std
xchg
jg
aam
sbb
lret
mov
aaa
sub
pop
pop
pop
or
lds
shrb
push
pop
jo
lock
xchg
inc
mov
sbb
mov
fs
pop
mov
stos
mov
shll
cmpsb
or
push
enter
and
jle
push
sbb
mov
dec
clc
sub
int
jle
sti
out
mov
cmp
inc
add
movzbl
movsb
adc
push
add
pop
push
pop
jg
ror
mov
aam
movsb
inc
addr16
sbb
inc
in
inc
push
fimuls
test
test
popf
hlt
lahf
mov
mov
inc
dec
lret
mov
pop
and
xchg
cli
xchg
pop
inc
pusha
in
mov
cmc
dec
jo,pt
stos
lahf
icebp
dec
cmp
cmc
dec
hlt
dec
cmpsl
popf
enter
or
adc
xchg
cmc
mov
or
inc
out
pmaxsw
neg
push
or
call
mov
mov
int3
cmp
ds
or
lahf
in
jno
jl
aaa
sbb
mov
cmc
push
add
sub
dec
mov
sbb
mov
cwtl
xchg
mov
out
lods
outsl
cmp
push
stos
jae
std
lods
jns
xchg
xor
mov
mov
loop
addb
mov
and
sbb
imul
mov
sub
in
jne
xchg
mov
xor
sbb
jnp
add
sub
or
lahf
daa
and
mov
xchg
lea
mulb
mov
es
addr16
bound
inc
pop
push
mull
sub
sub
mov
inc
or
xor
xchg
stos
push
jno
cmp
adc
and
mov
loope
mov
adcb
mov
lret
je
sti
jne
xchg
andl
sti
and
or
mov
xchg
cmp
in
aaa
dec
das
cmp
cmp
test
xchg
sar
call
imul
les
cmc
xor
scas
stos
notl
outsb
add
push
push
sbb
mov
jmp
dec
xchg
add
cmpsl
inc
pop
inc
jp
add
popl
cmp
pinsrw
xor
dec
in
ds
pop
xchg
imul
fwait
xorb
leave
pop
push
mov
xchg
mov
dec
in
jge
test
jne
adc
mov
or
cmpsl
mov
addr16
in
xchg
iret
packsswb
leave
orl
cltd
leave
std
into
insl
fs
cmpb
fs
xchg
mov
dec
xchg
mov
or
int
jo
loope
push
jmp
inc
push
hlt
mov
mov
inc
mov
jl
into
sub
lea
out
repz
mov
in
or
hlt
es
push
xor
inc
adc
into
incb
mul
scas
adc
lahf
fcompl
sbb
repz
fs
movsb
mov
stos
fisubs
xchg
inc
in
xor
adcl
cs
inc
test
hlt
jmp
repz
jmp
push
push
in
lcall
sub
daa
movsb
repnz
sahf
mov
cmc
add
rep
fsub
addr16
pop
pusha
sub
xchg
xchg
cmp
in
es
pusha
loope
mov
push
push
shll
dec
icebp
pop
fnsave
loopne
mov
xor
jb
jo
popf
mov
xor
or
movsl
inc
jne
vmaxsd
mov
stos
or
mov
lret
icebp
adc
adc
outsb
xchg
mov
lea
sub
add
out
inc
add
cs
rcl
scas
inc
lock
xchg
pop
and
enter
insl
lock
call
push
sahf
mov
mov
leave
test
pop
lods
sub
iret
inc
int3
test
scas
add
pop
push
cmp
mov
add
mov
push
loopne
mov
adc
inc
jo
sti
adc
or
mov
cmp
je
cmp
or
jbe
orb
adc
divl
inc
ja
sub
mov
sbb
mov
fsts
inc
lret
cmp
mov
dec
push
sbb
fldenv
jb
lahf
stos
cmp
jbe
int
scas
or
in
adc
inc
cs
les
pop
push
loope
jno
insb
test
cmc
push
sbb
lret
aas
add
mov
pop
cmp
jl
out
pushf
xchg
or
jnp
test
pop
scas
push
pusha
cltd
push
sbb
lods
xchg
popf
add
addr16
enter
push
or
sub
xor
cmp
out
fistpll
adc
push
sti
pop
jmp
sub
or
mov
fsubrs
jge
popa
dec
push
add
xor
sbb
jp
push
stc
lds
adc
lret
orl
lea
gs
xchg
push
out
add
cmp
sbbl
lods
fadds
movsl
insb
push
add
mov
movsl
xor
lock
sbb
pop
repnz
popa
add
dec
pop
xchg
cmp
sub
mov
bound
sub
neg
bound
add
mov
outsb
bound
and
pop
js
test
test
mov
cmp
xor
aaa
adc
mov
aam
aas
leave
sbb
cmp
mov
pushf
xchg
cltd
sub
data16
mov
mov
or
popf
xchg
stos
push
rcrl
xlat
dec
jbe
mov
push
pop
cmp
jb
jbe
outsl
iret
adc
push
jo
add
sub
hlt
xor
js
negl
inc
or
fisubrl
sbb
imul
pop
adc
outsb
and
mov
fistl
mov
pop
pop
icebp
fsubs
sbb
push
out
lret
pop
les
cmc
fsubp
push
pop
xchg
fst
xchg
pop
imul
or
mov
idivl
add
scas
fisubrs
jbe
fisttps
dec
sub
imul
cmp
lods
and
inc
cli
xchg
inc
movsl
lcall
cmp
jae
add
inc
cmp
pop
js
push
out
xor
pop
fidivs
orl
push
xor
push
aaa
daa
adc
cli
sub
and
adc
mov
adc
stc
in
stos
cmpsl
loope
std
test
jbe
jle
call
aam
push
inc
push
hlt
dec
enter
fsub
xor
adc
sbbl
and
mov
add
adc
movsl
lock
lods
jecxz
xchg
jns
stc
lahf
xlat
add
cld
ret
jmp
push
jne
xchg
pushf
aam
xor
addb
ret
sbb
inc
jb
lahf
mov
movsl
ljmp
mov
test
ret
mov
in
jmp
or
aas
cmp
icebp
icebp
xchg
insb
loop
outsl
jl
add
sub
insl
das
pop
add
dec
and
sub
fisttps
inc
mov
and
cmc
or
arpl
lds
mov
scas
cmp
mov
inc
adc
pop
pop
push
leave
cmp
and
mov
ficomps
adc
or
push
orps
cld
mov
repnz
in
jmp
cs
sbbl
and
jle
in
jmp
jmp
or
sbb
mov
inc
test
test
dec
ret
cli
hlt
and
test
mov
inc
or
fbld
fld
aad
pop
and
push
lock
pop
pop
in
mov
repz
pop
pop
mov
stos
sub
fiadds
addb
cltd
cmc
es
mov
cmp
enter
stos
ret
add
cmp
test
inc
pop
adc
call
mov
cwtl
cs
daa
xor
jle
pop
xor
xchg
xchg
xor
pop
ds
mov
nop
mov
orl
or
mov
outsl
dec
je
int3
or
inc
outsb
lods
xor
add
call
mov
and
sbb
imul
or
mov
outsl
loop
sbb
push
cwtl
lret
stos
xchg
test
sbb
scas
rclb
subl
aas
mov
insl
mov
stc
jne
dec
arpl
movsl
push
lds
sbb
inc
imul
jae
dec
outsb
xor
aam
and
or
daa
decl
aam
mov
jae
aaa
pusha
push
mov
ret
fdivs
cs
cwtl
sbb
mov
mov
sbb
cmpsl
rcll
lods
and
dec
sub
faddl
jno
jae
pop
cmp
mov
cld
pusha
scas
push
or
scas
aad
mov
mov
or
or
in
orb
push
rolb
imul
and
dec
add
fwait
push
lea
push
sub
xlat
or
push
hlt
ljmp
xchg
mov
jg
adc
mov
mov
xor
xor
xor
scas
inc
popa
inc
scas
adc
test
sub
mov
fwait
aas
or
pushf
pop
pop
mov
add
lret
xchg
xchg
rcl
inc
popf
enter
and
pop
int3
jge
jecxz
rorb
jge
cmp
inc
lds
dec
sbbb
push
xchg
xor
pop
mov
pushf
push
mov
jp
or
add
xchg
pop
or
pop
mov
inc
sub
xchg
test
mov
pop
pop
incb
ss
sbb
jle
jns
sbb
mov
mov
push
and
lods
lcall
lods
push
dec
and
cmpsb
push
imul
inc
dec
dec
cmp
pop
pop
xchg
cmc
outsl
ds
repnz
loopne
cmp
sahf
adc
cmpsl
jne
outsb
push
xor
lock
es
xor
orl
jle
adc
stc
xchg
mov
mov
cmp
cli
push
mov
and
mov
jge
gs
or
sub
or
cmpsl
and
in
push
lret
loope
jmp
int3
test
jge
mov
cmp
nop
loope
mov
cmp
stos
sub
push
cmpb
sarl
andl
in
fwait
hlt
and
xor
lods
adc
imul
mov
push
scas
xorb
lds
sub
out
xchg
jmp
out
dec
call
lret
push
and
adc
addr16
push
test
xchg
xor
push
adcl
fadds
lds
cmpsb
pop
cld
push
data16
or
test
adc
icebp
jno
mov
dec
mov
insb
dec
stos
fildll
mov
inc
jb
push
iret
inc
cmp
jl
lock
xor
xor
out
daa
rorl
or
pusha
addr16
xchg
cmp
xchg
scas
inc
test
adc
jmp
fsubrl
sti
lahf
mov
cs
xchg
jae
sub
fnstenv
test
sub
lcall
xchg
push
out
xchg
mov
cli
insb
pop
scas
jl
cltd
jae
sahf
push
xor
in
dec
xchg
dec
stos
push
xchg
roll
insl
jmp
jbe
loop
mov
xor
test
push
pop
push
mov
mov
xor
aas
push
ljmp
inc
and
cmp
and
push
add
gs
xchg
mov
mov
repnz
inc
xchg
fsubl
lret
aad
cld
gs
es
aas
fadds
mov
and
jecxz
hlt
sub
mov
pop
lret
leave
enter
arpl
push
lret
shll
lods
lea
dec
sarl
cmp
in
xor
iret
popf
inc
inc
cld
test
add
daa
inc
js
xchg
cmpsl
jmp
dec
leave
les
std
mov
mov
inc
add
add
pop
or
or
rdseed
or
pop
mov
add
flds
mov
sti
clc
mov
call
inc
mov
xor
outsb
push
xchg
dec
jns
in
dec
aam
daa
lods
mov
xchg
out
lock
movsb
fdivrl
mov
sub
adc
sti
xor
test
mov
mov
mov
push
cmp
dec
cmp
push
mov
aaa
and
int
enter
test
push
sbb
int3
das
mov
mov
dec
jle
mov
mov
fs
push
jg
scas
sub
sarb
pop
mov
ret
fisubs
fldt
jo
std
movsb
adc
xor
xchg
stc
add
pusha
aaa
dec
add
xchg
bound
test
imul
or
add
fidivl
test
mov
or
push
fcompl
and
ja
aaa
clc
pusha
pop
jnp
mov
jmp
jns
mov
jge
adc
add
dec
inc
cmp
ja
outsl
jno
cmp
bound
je
imul
mov
and
dec
pop
ja
addr16
fistps
and
popf
fadds
dec
loopne
dec
das
fwait
xor
pop
dec
les
inc
and
das
je
sbb
test
mov
xchg
movhps
inc
adc
test
xchg
mov
push
pcmpgtw
mov
cltd
sub
aas
inc
aam
lds
out
xor
push
je
dec
fistps
jns
or
sbb
lahf
xchg
imul
jmp
pop
sbb
mov
mov
insb
mov
iret
jb
mov
outsl
xchg
cmp
inc
insl
clc
fwait
xorb
push
push
aaa
and
gs
icebp
or
mov
inc
mov
cltd
mov
and
sarl
lret
sub
addr16
sub
enter
add
xchg
sbb
pop
pushf
rolb
add
xorl
jmp
imul
jb
mov
imul
pop
into
dec
mov
aaa
adc
fs
scas
ror
adc
pushw
lahf
clc
ret
rcr
add
xor
fimuls
and
sbb
adc
cmp
icebp
xor
jno
leave
repnz
mov
sahf
sub
std
inc
sbb
pop
pop
repz
andl
cmp
loopne
and
jns
outsb
pop
flds
xchg
cmp
sbb
imul
xchg
scas
lock
mov
subl
mov
xchg
dec
cs
loope
add
out
cs
jnp
push
xchg
das
add
aad
or
lret
cmp
dec
mov
xor
sbb
xor
test
faddp
inc
mov
mov
push
adc
fisubl
mov
fidivs
int3
insl
and
shlb
lret
pop
out
jecxz
push
testb
push
cwtl
imul
add
pcmpgtb
mov
mov
jns
and
je
or
inc
push
mov
fsts
aad
lahf
mov
jb
add
inc
xor
imul
hlt
jnp
xor
and
push
inc
add
call
mov
mov
jno
inc
ret
jp
test
out
icebp
lods
js
scas
lret
mov
xor
xchg
push
pop
xchg
stc
int3
lret
jecxz
pop
aas
pop
pop
sub
aam
sub
imulb
mov
cli
setl
xchg
adc
cmpb
iret
xchg
filds
mov
lock
mov
pusha
mov
gs
imul
xchg
mulb
addl
mov
mov
and
push
insl
cmpb
xor
xlat
sub
jp
aaa
mov
sbb
or
cmp
cltd
popf
sbb
pusha
test
sub
aam
out
mov
jp
sbb
xchg
out
fnstsw
lret
mov
fs
xor
sbb
loop
pusha
add
nop
mov
jp
lock
repnz
test
frstor
add
pop
sahf
loope
ja
fildl
pop
imul
imulb
addr16
pop
rclb
push
pop
lcall
cmpsl
loope
adc
ret
sub
test
test
mov
pop
aam
xchg
pop
fistps
jo
scas
add
xor
xchg
xor
jmp
clc
xchg
inc
and
sub
lret
cmp
push
cltd
dec
jecxz
mov
int3
sbb
push
mov
xchg
ffree
les
add
mov
in
xlat
movsb
stos
add
mov
cmc
sub
inc
jb
inc
into
sub
popf
lods
loop
dec
insb
mov
negl
xabort
je
data16
sarb
cltd
gs
inc
jg
jne
or
xor
push
stos
sbb
xchg
adcl
das
cmc
divl
mov
roll
aad
xor
push
hlt
test
out
ret
add
lret
fiadds
xchg
mov
push
jne
fidivl
bound
lcall
lods
and
in
mov
lods
pop
shll
mov
pushf
jl
mov
sub
into
stos
inc
outsl
shl
or
sahf
dec
fstl
adc
dec
rcll
negb
cmp
push
cli
adc
repz
or
push
pop
sahf
mov
pop
push
mov
mov
jne
out
call
fldenv
pop
mov
test
push
into
mov
out
adc
mov
pop
cs
fmul
repnz
test
ljmp
inc
cmc
cmp
lahf
push
adc
cs
test
sti
and
outsl
out
dec
mov
jne
comiss
cmp
push
adc
daa
fs
out
xlat
fcmovbe
or
insb
js
sti
mov
decl
or
jecxz
dec
cmc
lods
pop
lahf
xor
ja
mov
mov
sbb
mov
mov
insl
loopne
xchg
inc
cmpsl
push
pop
cmp
xchg
mov
ret
popa
dec
adc
sbb
add
xchg
in
lds
dec
mov
cmp
pop
xlat
ss
test
push
push
test
movsb
in
sti
xor
jno
stc
shlb
pop
xchg
jg
xor
add
insb
jns
mov
jmp
dec
ljmp
sahf
cli
dec
sbb
cltd
test
lods
pop
cmpb
cltd
jg
xlat
mov
mov
xchg
pop
subb
add
jmp
mov
lods
addr16
sbb
adc
rolb
nop
push
stc
jns
mov
dec
outsl
mov
jg
mov
mov
mov
or
test
stos
fistpl
jae
daa
xor
cld
and
or
pop
xor
xor
jae
xor
cmp
cmc
sub
out
sub
and
roll
mov
cmpl
add
lcall
out
out
fisttps
mov
mov
pop
adc
outsl
addl
add
cmp
dec
push
test
lahf
insb
mov
add
call
jle
dec
ds
ficoms
mov
testl
mov
nop
hlt
insl
jecxz
clc
cmpb
jno
mov
sub
jae
push
rolb
fcompl
cli
movsl
je
cli
mov
daa
clc
jbe
xchg
xchg
imul
xor
lds
dec
sti
xchg
insb
jo
xchg
push
ljmp
mov
lods
out
sbb
add
xchg
les
jmp
mov
filds
add
mov
insb
out
fwait
stos
test
jbe
call
sub
rcrl
in
sub
loop
sbb
or
fcompl
sub
into
pop
pop
test
mov
fwait
mov
dec
push
jecxz
sahf
jno
push
jg
hlt
pop
pop
dec
cmpsl
int
adc
and
pop
aaa
add
popa
pop
inc
sbb
pushl
jnp
clc
cmp
cmp
mov
sub
push
xchg
nop
sahf
mov
xor
cwtl
test
xlat
sbb
test
fsubrs
aad
mov
cltd
adc
in
push
push
sbb
xlat
add
stos
dec
push
pusha
out
daa
mov
mov
mov
mov
push
mov
push
dec
inc
jl
fsubs
dec
sbb
or
addr16
sub
call
push
push
pop
pop
dec
test
cs
xchg
in
adc
int
in
jno
outsb
push
push
dec
in
stos
ret
cmp
adc
lea
shlb
imul
ljmp
fisubs
sub
xchg
fidivs
shll
add
push
dec
push
fists
ds
mov
out
inc
xor
sub
xor
inc
sbb
xchg
pop
or
inc
inc
mov
mov
in
out
insb
iret
push
and
dec
cmpsl
aad
pop
fsqrt
xchg
popa
dec
inc
jmp
cmc
dec
testb
xor
fdiv
xor
leave
jb
repnz
or
lret
aad
fs
mov
sahf
dec
xor
mov
and
test
adc
outsb
xchg
xor
rolb
sub
push
loope
insl
push
mov
sub
cmpsl
pop
xor
push
popf
xorl
insb
addr16
jbe
jns
sub
arpl
or
dec
xor
es
xchg
pushf
inc
movb
pushf
add
mov
and
pop
outsb
cld
adc
dec
lcall
mov
js
jno
inc
mov
cmp
xchg
dec
aas
ja
int3
into
idiv
dec
cli
call
movsl
ficoml
out
jnp
addr16
cmp
mov
pop
pop
pop
sti
mov
push
ljmp
mov
rclb
js
jb
popa
and
mov
sbb
test
mov
aam
cld
pextrw
pop
js
stos
test
call
xchg
rcl
adc
cmp
pop
jne
pop
inc
int3
mov
imul
mov
inc
inc
psrld
insl
cmc
repz
jg
adc
pop
jl
add
sti
push
outsl
mov
dec
xchg
fldl
std
pop
fwait
xchg
sbb
xchg
mov
sti
scas
orl
pop
outsb
sub
imul
push
dec
negb
rorl
xchg
adc
xor
leave
js
dec
std
repnz
sub
jne
out
mov
aas
pusha
xchg
or
adc
and
rol
cltd
adc
lret
dec
scas
lods
push
loopne
cld
or
or
sahf
les
adc
push
pop
jb
or
cmpsl
dec
mov
fcomi
imul
lods
lahf
mov
fsts
jecxz
int
cmp
insb
popa
pop
test
sbb
xor
stos
decl
pop
cmp
mov
sub
or
ret
sti
mov
das
mov
push
jne
cmpb
inc
dec
jle
push
leave
sbb
and
push
or
hlt
sahf
jg
inc
push
dec
cltd
lret
mov
sub
and
and
loop
pop
lret
jns
mov
cmpsl
adc
ret
hlt
test
push
push
jbe
jne
loopne
jle
out
or
xor
adc
in
push
mov
orl
cmp
xor
cmc
push
sahf
leave
sar
jno
shl
xchg
or
repnz
mov
adc
adc
xor
fs
test
pusha
push
js
jbe
std
inc
jno
shl
daa
pop
jbe
mov
inc
insb
call
xchg
cmc
mov
xorl
adc
popf
xchg
loopne
js
in
jne
sub
scas
lcall
gs
call
push
fists
add
lcallw
mov
jmp
or
pop
pusha
push
std
mov
pop
test
mov
mov
inc
lock
and
xor
or
pop
sub
pop
enter
bound
mov
imul
jbe
xchg
pop
out
mov
mov
or
push
insl
bnd
add
test
jle
add
dec
cs
jl
mov
push
imul
ss
jbe
mov
popf
fst
push
jo
jmp
cld
add
cwtl
inc
cmc
and
popf
in
xor
fwait
in
enter
lea
dec
mov
mov
sbb
add
std
mov
push
cmp
fadds
fs
movsl
and
ret
leave
test
ljmp
xlat
xchg
mov
push
repz
dec
inc
popa
dec
jo
insb
cmpsb
pop
mov
stos
and
push
xchg
insl
and
subb
jnp
enter
mull
and
and
aad
in
std
sbb
sub
decl
in
out
mov
test
cmp
mov
mov
sbb
ret
inc
in
pop
lldt
aaa
push
stos
inc
cmp
and
into
out
lahf
mov
mov
wrmsr
out
fidivrs
and
popa
stos
and
lahf
andl
or
sbb
jl
push
xchg
mov
mov
or
imul
fdivrl
lods
sub
pop
insb
fucomip
icebp
fisttps
in
mov
sbb
pop
negb
jmp
pop
push
jmp
mov
test
mov
orl
jge
pop
inc
mulb
push
add
cmp
push
js
push
xor
xchg
insl
mov
aaa
xchg
mov
cmp
and
mov
cmpsl
cmp
sbb
xor
mov
outsl
ret
pop
fs
dec
lock
xchg
mov
mov
fwait
push
and
push
fcoms
mov
pusha
xor
cmp
xchg
mov
imul
imul
dec
lods
es
inc
mov
xchg
cmp
rclb
jne
mov
inc
push
js
pop
cli
jle
ret
mov
es
ret
and
frstor
insb
ja
dec
mov
xchg
loopne
push
push
pop
mov
sub
icebp
push
pusha
mov
cmpsl
jecxz
mov
cmp
xchg
lods
lods
imul
enter
mov
je
dec
sub
cmp
or
test
ss
movsb
mov
enter
dec
add
rorb
add
fucomp
test
sbb
push
dec
cmpsl
and
cs
pop
xchg
adc
ds
mov
xchg
inc
sub
ficoms
fucom
int
sub
jp
push
idivl
mov
setl
repnz
fisubs
xor
jle
mov
repz
dec
rcrb
push
xchg
das
inc
cwtl
jecxz
aaa
adc
mov
mov
jle
jle
pop
inc
imul
inc
rcrb
pushf
imul
xor
ret
mov
inc
iret
add
stc
add
push
push
daa
or
repz
les
fucomp
jno
mov
in
ja
jne
lret
in
sub
add
or
outsb
mov
and
scas
push
jmp
scas
ror
addr16
adc
or
jb
sbb
inc
lret
sub
mov
out
ljmp
push
xchg
push
jg
iret
cmp
stos
lcall
cs
xchg
fs
lds
inc
out
mov
mov
ljmp
testb
pop
dec
sti
dec
pusha
dec
dec
lea
xor
pop
sub
pop
mov
pushf
mov
jmp
mov
ficoms
xor
and
or
rorb
lahf
test
fwait
jl
imul
cmc
cmpb
fwait
and
or
jmp
mov
shlb
pop
imul
sub
xlat
cmp
push
jecxz
jnp
daa
pushf
mov
adc
aam
aad
lcall
sbb
xchg
lret
aam
lods
insb
inc
outsb
fs
fnsave
hlt
sub
add
daa
xchg
movsl
sbb
inc
je
out
mov
out
sarb
push
sub
add
jno
mov
push
pop
aas
and
xlat
or
fwait
fwait
jge
sahf
mov
jle
data16
ret
sub
jbe
sub
int
mov
in
xor
in
inc
int
mov
cs
icebp
xlat
pop
inc
mov
lea
sub
insb
arpl
pop
fdivr
sbb
xchg
das
fcoml
repz
inc
add
add
in
cs
mov
and
or
je
leave
pushf
mov
movsl
or
loopne
shrb
mov
cmc
subb
movsb
sub
flds
arpl
inc
pop
inc
aas
scas
xchg
xchg
fsubl
ret
xor
in
insb
stos
pop
xlat
aad
test
push
insl
arpl
scas
stos
dec
aam
loopne
cld
jecxz
sub
out
adc
xchg
jo
in
xchg
adc
or
adc
pushl
and
inc
loop
sub
mov
test
or
jno
jl
dec
or
mov
inc
insb
dec
scas
xchg
inc
adc
into
adc
jmp
adc
test
mov
sbb
mov
decb
data16
mov
jmp
add
lcall
mov
test
adcl
push
xor
xlat
and
xor
out
sub
sub
dec
adc
push
xlat
push
shrb
mov
sbb
aad
lret
mov
stos
mov
stos
es
mov
dec
mov
mov
pop
fnstcw
xlat
addr16
mov
xchg
pop
fsubs
push
pop
push
jge
add
bound
fnstenv
sbb
jbe
or
sub
sbb
sub
test
fcomip
or
std
jge
jb
jae
fiadds
testl
adc
pop
or
sub
xchg
negl
adc
mov
sub
imul
xor
jl
out
push
mov
fcom
sbb
cmp
xchg
xchg
xchg
js
pop
sbb
pop
sbb
ja
sub
xlat
push
mov
push
mov
in
adc
fwait
loope
cld
lock
sbb
dec
in
xchg
add
sub
dec
jle
scas
and
outsl
pop
pop
jl
and
mov
pop
jns
inc
sbb
adc
fiaddl
jp
and
xchg
fistl
fmulp
ja
and
frstpm(287
adc
add
push
dec
mov
push
pushf
sbb
and
out
push
pop
push
and
ror
fcoms
sub
out
mov
xor
cmp
gs
mov
movsl
out
imul
aad
jle
icebp
pop
outsl
cmp
xlat
repz
lods
dec
imul
mov
jge
sahf
faddl
insb
int
xor
mov
scas
adc
shrb
jmp
inc
shlb
leave
fs
xchg
in
data16
shll
jecxz
and
and
and
push
mov
pop
add
je
cmp
pop
cmpsb
adc
add
fnstcw
add
out
icebp
loopne
mov
fadds
in
and
ljmp
sahf
jle
mov
adc
mov
imul
inc
enter
xchg
in
jo
jmp
in
jge
mov
and
lods
add
mov
dec
loop
fwait
sti
or
push
aas
aas
insb
lret
pusha
rolb
jecxz
sub
pop
and
jno
jnp
lcall
adc
mov
pusha
mov
adc
cmc
aam
test
decb
cli
stc
mov
sbb
movsb
push
rcr
push
or
out
pop
lea
pop
mov
cmpb
xor
and
cmp
sub
mov
outsl
xchg
push
imul
adc
inc
and
repnz
adc
leave
in
lret
popf
add
sub
xchg
jae
or
or
xchg
or
cmpsb
adc
int3
in
je
cmp
add
jbe
jp
mov
movsl
daa
inc
in
jns
shl
dec
cs
mov
adc
fcompl
loop
xchg
mov
and
orl
push
gs
or
dec
imul
idiv
add
decb
push
inc
jmp
mov
add
cmpsb
icebp
cli
das
inc
mov
call
xor
push
mov
ljmp
and
push
call
adc
mov
or
fldt
test
mov
fs
jge
jno
dec
fmuls
adc
or
xor
adc
jecxz
push
nop
jmp
jecxz
xchg
push
das
sub
mov
sub
arpl
iret
mov
push
xor
adc
pop
sti
pusha
adc
lret
sub
icebp
fwait
scas
fsts
xchg
test
test
cli
cld
push
lret
bound
incb
insb
scas
out
inc
fcoml
dec
test
or
mov
pop
fmul
test
es
addb
xchg
ret
into
andl
cmp
testl
mov
push
dec
jb
pop
addr16
fcmovb
dec
xor
add
in
aaa
add
shl
imul
stc
fwait
out
clc
dec
push
lahf
popf
and
fdivrl
fcoml
pushl
lds
cltd
lds
xor
out
les
in
push
fldl2e
insl
mov
jns
popf
ja
cmc
inc
and
ljmp
dec
hlt
cmpsl
ret
aam
lods
outsl
jecxz
test
movsb
sub
pop
pop
fidivrl
fisubrl
sub
xor
push
repz
pushf
outsb
in
mov
jle
mov
hlt
mov
mov
stos
mov
pop
ja
popf
in
loop
stos
sub
rep
jl
xchg
scas
pop
ss
es
xchg
adc
lock
inc
sub
cmovnp
xorb
mov
ss
mov
in
mov
popf
jmp
mov
pop
imul
lock
mov
movsb
popf
lahf
cmc
xlat
adc
xor
jno
pop
mov
adc
outsl
dec
or
movsb
stc
ljmp
sbb
mov
fbstp
leave
cmpsl
in
adc
pop
sub
inc
punpcklbw
iret
loopne
cmp
push
mov
sub
sbb
dec
pop
xchg
fsub
aad
and
fcmovbe
in
push
jle
dec
sub
inc
pop
popf
jnp
jl
orl
test
or
loopne
ja
inc
fcom
push
xchg
dec
mov
test
mov
cmp
test
sub
cltd
sub
lea
sub
fwait
jl
popa
push
xor
sar
xchg
leave
push
dec
mov
mov
push
dec
pop
fstp
ret
and
or
adc
bound
and
mov
mov
mov
fcompl
and
jecxz
jl
call
inc
ss
scas
in
push
lds
adc
shl
dec
lret
je
js
push
bswap
insl
lods
sbb
imul
cmpsb
mov
iret
sbb
pusha
mov
pusha
lahf
lods
and
sbb
ljmp
les
mov
fs
and
mov
out
hlt
out
mov
ret
xor
xchg
insb
sub
push
scas
push
scas
bound
inc
xlat
jp
sub
adc
fiaddl
inc
jmp
mov
cmp
ficoml
ljmp
popa
mov
jne
sub
aad
cli
pop
mov
sarl
sti
dec
jp
and
inc
sub
stc
rcll
pop
ficompl
out
repnz
test
stos
in
mov
enter
mov
sbb
repz
mov
mov
add
dec
das
testl
lods
cmpsb
or
push
sahf
test
cmp
int3
sbb
negb
aaa
lock
xor
imul
add
add
or
xchg
dec
mov
loop
lahf
mov
sub
lea
repz
or
mov
ss
ljmp
add
fs
pop
mov
xchg
push
pop
cmp
adc
movsl
mov
ljmp
xlat
adc
idivl
xlat
stos
pop
and
clc
dec
pop
sbb
mov
mov
mov
xchg
adc
xor
pop
mov
test
pop
ja
int3
lret
cmpl
adc
push
divb
mov
fldenv
repnz
xor
jbe
in
loop
loope
or
sub
clc
xchg
into
and
cmp
lcall
push
and
adc
jns
push
frstor
sub
out
mov
imul
orl
cmp
nop
inc
lea
shl
xor
jge
sub
pop
rclb
popa
adc
xlat
adc
xorl
ret
sub
dec
out
ja
add
sbb
addl
mov
push
push
pusha
icebp
mov
hlt
jb
ret
ja
jae
lds
ljmp
test
jmp
rorb
inc
ja
lods
gs
push
cmp
mov
add
push
mov
imul
nop
out
bound
shll
lret
ds
enter
hlt
out
cmpsl
sbb
clc
xchg
or
pusha
pushf
push
sub
sub
mov
push
dec
jo,pn
sub
mov
adc
jno
cmpsb
rclb
nop
std
sbb
push
out
inc
or
lcall
cmpsb
pop
out
or
dec
xor
sub
xor
mov
xor
inc
jmp
out
adc
cld
push
pop
ror
pop
scas
popa
std
sbb
sbbb
xchg
add
adc
fdivrl
xchg
outsb
pop
movsb
or
add
and
scas
pop
sahf
ja
and
xorb
inc
push
leave
iret
add
jns
xchg
hlt
mov
arpl
cmpsb
xchg
cmpsl
xor
add
or
daa
shlb
jbe
loope
xchg
fsub
mov
sbb
outsl
cmp
xor
ret
imul
sarb
xor
xchg
or
mov
mov
outsb
aaa
lock
dec
jge
or
inc
push
aam
fdivr
add
cmp
inc
mov
call
in
xlat
jae
xor
jg
outsb
xor
add
adc
push
sbb
lods
mov
jo
adc
jle
push
cwtl
jmp
filds
lods
in
roll
lock
ja
fdivrs
js
xchg
jmp
jge
inc
loopne
xor
fcmovb
fsts
sub
call
jno
out
cmp
loope
xorl
push
or
jle
pop
xchg
xchg
mov
dec
pop
aad
int
sbb
ja
adc
js
mov
pop
aad
outsb
mov
stos
mov
xor
test
test
sbb
gs
lea
leave
dec
lods
push
adc
loope
fcomi
push
dec
sub
mov
out
in
sub
or
das
jecxz
icebp
cmp
leave
mov
add
adc
add
mov
pop
mov
xchg
daa
cs
pop
inc
add
adc
lods
cltd
sbb
adc
xchg
loope
mov
sbb
push
dec
sub
jno
cmc
mov
push
fmull
lret
mov
cmp
je
int
test
mov
jg
leave
lods
mov
clc
inc
jns
popf
push
cmc
imulb
push
mov
lods
sub
sbb
add
insb
aaa
jnp
dec
in
add
or
cld
push
insl
fistpl
out
mov
fdivrs
jo
pop
rclb
shrb
test
fnsave
popf
stc
sub
push
xchg
jb
dec
adc
jle
jecxz
sub
push
gs
test
mov
call
dec
and
ficomps
mov
andnps
xor
sarl
mov
into
aaa
dec
pop
adc
ret
jg
pop
scas
push
mov
dec
mov
cmp
cmp
pop
dec
jno
and
pusha
pop
gs
inc
lds
test
pop
mov
add
mov
adc
mov
sub
in
adc
xor
ja
aas
pop
test
shl
xchg
sbb
sbb
cltd
cli
mov
pushf
sbb
aaa
push
or
out
aas
and
mov
fimull
sbb
lock
adc
rolb
mov
cld
out
mov
lahf
xor
xchg
adc
movsb
mov
ss
es
rcrb
ljmp
out
jecxz
cli
xor
xchg
push
shrl
out
bound
dec
in
insb
push
jle
mov
push
xor
xchg
mov
outsl
jmp
mov
sbb
pusha
call
adc
jne
mov
les
mov
arpl
fnstenv
inc
addr16
roll
pop
push
mov
adc
jae
pop
dec
add
xchg
dec
push
adc
sbb
dec
mov
fcomi
fs
xchg
sub
xchg
or
lret
xchg
xor
push
push
lock
mov
mov
cld
icebp
mov
insb
adcl
and
fmuls
fldl2t
push
dec
push
loopne
popa
jno
insb
or
fnstcw
popf
push
push
repnz
sbb
xlat
jb
das
xchg
mov
imul
jg
pushf
in
inc
decb
outsl
mov
add
mov
lds
leave
int
jmp
aam
pusha
cmpsl
push
push
mov
cmpsl
add
iret
jecxz
fisubrs
sti
rolb
and
pop
dec
rcrb
push
out
jge
pop
adc
mov
pop
in
pop
add
enter
ficompl
cs
imul
in
dec
fistps
push
add
push
pop
fcoml
jle
mov
ljmp
lock
roll
jge
fildl
daa
cwtl
jbe
imul
popa
aad
jbe
test
call
or
imul
xchg
in
es
adc
sub
sti
inc
mov
out
rorb
fsubl
pop
mov
test
inc
aas
aam
mov
popf
sub
addb
cmp
loope
out
pop
adc
push
sarl
lahf
push
lods
xor
cmp
jecxz
push
inc
sub
cwtl
mov
cld
sbb
jno
andb
inc
mov
mov
or
stos
sub
xlat
xor
icebp
mov
andb
out
sub
dec
sbb
subl
mov
nop
mov
cmp
in
sub
test
andb
je
insb
enter
inc
mov
mov
inc
mov
mov
js
add
or
in
jmp
imul
je
out
xor
jmp
add
mov
mov
call
sbb
push
bound
add
flds
fstpl
aaa
cmpsl
xor
add
mov
adc
bound
insl
mov
in
lds
push
imul
or
pop
jge
mov
add
mov
lahf
lea
pop
sub
jp
rcll
mov
loope
imul
dec
scas
enter
pop
sub
int
js
cli
dec
jl
mov
fwait
insl
push
in
inc
lods
cmc
or
or
or
inc
sbb
daa
int
push
push
jae
rorl
pop
dec
cmpsl
xchg
cmc
and
fsubl
sub
mov
or
jns
insb
pop
ljmp
mov
add
mov
ss
fldl
dec
stos
jnp
sbb
xchg
mov
cwtl
negl
xor
shlb
sbb
inc
and
xchg
inc
lahf
pusha
les
aam
es
xchg
lea
out
jecxz
adc
movsl
jae
pop
adc
and
xchg
mov
adc
or
jb
or
xchg
add
pop
add
movsb
add
ret
push
and
fwait
arpl
inc
push
ljmp
xor
jp
cmpb
jg
xor
mov
ret
jl
inc
pop
jo
mov
adc
fisubs
nop
test
and
xor
mov
cmp
cmpsl
repnz
xchg
inc
mov
mov
loopne
jle
cwtl
rclb
les
ljmp
jmp
fisubs
xor
sub
dec
lret
inc
add
xchg
test
int
or
xor
mov
adc
outsl
cmp
push
ja
nop
out
lods
sti
outsb
leave
std
adc
jg
cltd
cmp
mov
fwait
inc
and
in
xchg
scas
mov
mov
jmp
xor
jo
vmwrite
or
mov
mov
push
xor
jp
test
ja
add
jae
inc
bound
fs
mov
sti
imul
mov
inc
push
mov
pop
mov
jge
xchg
sub
sub
xchg
jge
or
out
xor
xchg
sub
push
into
or
cmp
in
lods
xchg
dec
cmp
pop
mov
mov
loop
pop
test
fldt
xor
aaa
fidivs
push
vmread
hlt
fildl
mov
inc
insb
fwait
or
or
jb
and
jb
sub
xchg
pop
jg
jnp
xor
mov
dec
mov
mov
rsm
push
mov
in
testb
mov
sub
cltd
leave
lods
das
cmp
std
jnp
dec
dec
fcomi
insl
sub
jbe
jns
fdiv
aas
fsubs
sbb
lods
pusha
jo
and
jno
lret
push
sub
xor
lds
aam
sub
push
jo
mov
xchg
addr16
in
outsl
or
push
mov
inc
cmp
xor
xchg
xchg
sti
test
push
dec
inc
out
out
stos
mov
mov
repz
push
mov
push
out
pop
sub
mov
es
loopne,pt
inc
fcomp
jb
addr16
sub
mov
push
bound
out
adc
push
test
jge
and
push
fstp
sbb
lea
cmp
jns
out
mov
mov
and
cmc
stos
insb
out
or
in
out
lret
pop
fisubl
in
sbb
imul
jno
aam
sub
jge
add
inc
mov
xor
in
push
mov
inc
sub
cli
popa
pop
stc
xchg
movsl
fwait
pop
dec
scas
es
ja
mov
mov
xor
lods
and
mov
dec
movsb
aaa
xchg
sub
aas
cmp
lock
cs
int
xchg
xchg
pop
out
lret
mov
aaa
fistpl
mov
icebp
aam
adc
lock
inc
jg
pop
jnp
repnz
xorb
sti
push
jne
test
xorb
sbb
stc
xchg
call
stos
dec
dec
mov
stos
inc
pop
clc
iret
daa
dec
insb
repnz
pop
cmp
ss
mov
push
leave
xchg
pop
addl
jne
ror
inc
ja
mov
leave
leave
mov
pop
or
mov
lods
mov
filds
push
icebp
fwait
rcrl
std
jmp
xchg
into
fidivrl
out
insb
push
data16
xchg
dec
pop
leave
add
lcall
aam
and
cmp
xchg
lret
jmp
insl
jmp
es
push
cmp
pop
pop
cmp
sbbl
xor
iret
sbb
xor
in
gs
xor
xchg
shr
cmc
xor
adc
add
cwtl
mov
cmp
sub
push
aaa
mov
push
outsl
mov
in
adc
mov
or
stc
in
adc
sbb
jmp
and
mov
push
shrb
xor
addb
mov
stos
pop
and
push
mov
jmp
dec
add
lret
fs
jle
int
repz
cli
nop
leave
lret
adc
add
push
les
lahf
jge
mov
shll
arpl
inc
jae
sbb
loope
or
imul
dec
sbbb
ret
push
sub
flds
outsl
xor
or
sbb
cwtl
mov
jle
mov
adc
cmp
insl
pushf
pop
push
aaa
aas
mov
adc
xor
mov
inc
mov
xor
lcall
add
pushf
pushf
mov
jg
dec
jl
cltd
cmp
loop
push
mov
xlat
in
out
pop
push
adc
pusha
movsb
mov
jae
test
pop
xor
cs
pop
inc
pusha
push
xchg
adcl
clc
popa
inc
shll
ja
popa
mov
cmp
out
stc
loopne
shl
daa
repnz
aas
and
sarb
daa
cltd
repz
adc
aas
jge
stos
xchg
pop
syscall
in
push
adc
inc
mov
push
lret
xchg
ret
or
loopne
das
mov
or
popa
push
and
cltd
addl
repz
inc
sbb
xor
addr16
push
adc
mov
sti
pop
and
pop
mov
xchg
adc
inc
lea
adc
sub
push
jnp
dec
push
dec
sti
mov
or
cli
jecxz
loope
cltd
fwait
stc
mov
inc
clc
adc
inc
sub
push
ja
mov
push
ficoms
add
jnp
popw
pop
pop
adcl
fstpl
sbb
es
adc
xchg
cmp
push
popa
push
nop
sbb
sahf
int3
leave
mov
shll
sbb
loop
mov
insb
outsl
ret
lret
cmp
test
push
jl
std
cli
xor
ljmp
or
mov
lret
dec
jg
repnz
loopne
mov
adc
xchg
sbb
mov
xor
jno
int
sbb
sbb
cmpsl
rorb
out
cmp
jmp
push
jae
outsl
mov
mov
fs
sub
sbb
sbb
dec
out
cmc
sahf
fildl
lahf
or
adc
aam
enter
aam
test
mov
mov
cmpsb
cmp
ss
test
sbb
xchg
fptan
xchg
cmp
mov
sub
das
imul
adc
mov
fsubrp
sub
mov
jecxz
popf
inc
xorb
mov
fstpt
pop
sbb
js
xchg
xchg
push
sub
mov
xlat
inc
repnz
adc
fwait
mov
mov
roll
xchg
xor
adc
add
fwait
loope
sub
pop
clc
pop
cmp
aas
jne
xorl
inc
add
pop
ss
test
loop
jae
aam
loopne
out
mov
xor
jne
adcl
call
mov
jo
mov
sti
sub
adc
pushf
mov
ret
lret
in
test
out
mov
icebp
outsl
int
lcall
repnz
addr16
in
das
pop
or
jmp
jecxz
inc
jp
dec
js
daa
rorl
push
mov
mov
aaa
outsb
sahf
out
pop
sbb
jl
mov
mov
inc
add
push
out
sub
push
and
adc
xor
and
bound
addb
aaa
mov
mov
pop
xor
sub
push
enter
add
popf
dec
loop
inc
push
iret
in
movsb
cmp
fisubs
insl
push
and
addr16
arpl
sub
negl
jns
or
enter
aaa
pop
int3
push
int
loop
push
mov
insl
orb
xor
jge
cmp
xor
iret
jge
cmp
andl
dec
push
ret
xchg
push
cmpsb
mov
xor
pop
dec
and
scas
inc
shlb
movsb
sub
popf
dec
int3
movsb
pop
sub
and
add
mov
push
insl
pop
dec
and
fldt
bound
mov
inc
stos
xchg
and
push
mov
faddl
and
jne
popf
adc
sub
xlat
xor
mov
seta
test
cli
testl
xchg
in
xchg
jmp
push
push
call
pop
sub
mov
dec
xor
add
movsl
mov
mov
popa
mov
mov
mov
out
mov
cmpsb
pop
insb
int3
mov
call
push
andl
xor
ds
xchg
rolb
xlat
jmp
test
popf
shlb
pop
dec
adc
and
popa
call
cmp
fiadds
xor
mov
adc
movsl
out
pop
addr16
jle
pusha
push
je
pop
arpl
lods
pop
pop
jns
sbb
jb
jne
mov
mov
sarl
jnp
add
inc
outsl
test
xchg
test
mov
pop
fdivrl
xor
hlt
add
scas
rorl
jge
or
mov
nop
in
push
push
cmp
push
sub
insb
test
insb
mov
cmp
add
cmc
mov
mov
and
xor
sub
pop
cmp
shr
leave
mov
pop
test
dec
push
add
shll
stc
add
arpl
dec
mov
xor
addr16
lret
gs
mov
ror
or
movsl
adc
iret
adc
lahf
cmpl
jl
icebp
outsl
pop
jnp
or
pop
sbb
sbb
mov
mov
jmp
je
and
out
jno
pop
sbb
xor
lea
mov
or
adc
xchg
jmp
jl
push
mov
jg
lahf
outsb
pop
push
mov
mov
arpl
xchg
mov
sti
mov
push
pop
ljmp
adc
test
sub
pop
bound
cli
ss
repnz
xor
mov
sub
cltd
mov
jg
lahf
lret
mov
jmp
xchg
les
std
loop
test
jae
insl
addb
lret
hlt
clc
jnp,pn
daa
jns
gs
add
dec
pop
sbb
fcmovb
std
mov
mov
loop
test
and
aam
scas
sub
jle
xchg
jns
add
scas
push
pop
sahf
jno
ljmp
iret
sub
jb
enter
xor
dec
cmpsl
popa
xchg
mov
jp
test
inc
push
sahf
fnstenv
and
inc
stos
pop
lods
mov
push
rcll
jbe
inc
sub
mov
pop
push
addr16
sub
test
outsl
xlat
repz
mov
dec
pop
fists
mov
push
sub
test
xchg
jmp
jecxz
inc
shr
jg
daa
fiadds
imul
fucomip
and
inc
ret
dec
sbb
sub
xchg
in
jne
call
mov
inc
addb
loopne
inc
jg
jbe
fisubl
cmp
je
mov
xor
add
add
ljmp
inc
sbb
mov
sbb
sti
adc
push
mov
mov
lock
inc
mov
and
mov
dec
mov
lods
inc
pop
ljmp
mov
and
movsb
fmuls
andb
in
ja
scas
loopne
cmpsb
icebp
pop
out
dec
cmp
jmp
ret
mov
mov
push
or
sub
xchg
clc
repnz
push
fcmove
sbb
adc
push
imul
ror
leave
xor
or
xchg
in
sub
add
mov
sbb
mov
xor
sbb
xchg
call
addr16
dec
pushf
mov
or
pop
and
cmpl
xchg
adc
dec
add
cmc
or
mov
ja
sub
push
adc
sbb
jno
xor
mov
ljmp
mov
shrl
and
fsubrs
pop
mov
adc
imul
imul
fsubl
cmc
fs
mov
xor
inc
or
addr16
mov
shrb
sahf
cwtl
lahf
lret
scas
js
or
xchg
mov
inc
and
dec
pop
enter
adc
sahf
subb
mov
jmp
aaa
scas
jb
inc
lods
jns
mov
mov
dec
mov
aam
lcall
cmp
pop
push
dec
outsb
int3
adc
xchg
add
movsl
pop
test
aas
mov
adc
cwtl
iret
adc
and
or
mov
push
and
cmp
les
and
test
mov
test
mov
lret
shrl
idivb
mov
pop
into
mov
movsl
movaps
sbb
call
cmp
sahf
push
popa
dec
and
imul
xor
cmp
inc
mov
xlat
push
xchg
lret
inc
dec
or
xchg
sub
inc
outsb
push
fnstcw
sbb
xorb
faddl
ljmp
fists
adc
rcrb
mov
lea
setae
xor
faddl
sbb
push
adc
mov
xlat
mov
lds
mov
mov
sbb
mov
out
cmp
test
mov
inc
lret
daa
jge
les
dec
mov
sub
adc
mov
je
andl
push
das
repz
stos
imul
mov
scas
fmull
aam
mov
mov
pop
jo
aad
imul
mov
popf
leave
sbb
enter
pop
and
add
adc
mov
push
xchg
xor
mov
or
popa
shrl
xchg
xchg
in
add
leave
add
push
mov
jecxz
mov
nop
push
test
add
sub
inc
ds
jbe
xchg
cld
imul
mov
pop
lods
and
add
dec
ret
jmp
adc
fidivl
sub
pop
cmp
cli
jmp
and
sbb
sub
mov
pushf
clc
icebp
add
pop
mov
xchg
and
xchg
clc
pop
add
rorl
fildll
cmovp
repnz
sarl
repz
ss
pop
sbb
push
xchg
or
add
ljmp
scas
pop
sbb
mov
aaa
lret
in
daa
lock
std
pop
push
xchg
cmp
jg
push
mov
adc
sarb
push
mov
je
inc
ljmp
loopne
add
cs
jmp
fs
xchg
dec
outsb
jnp
jbe
sub
imul
or
dec
or
sub
lods
mov
xor
scas
adc
cli
jmp
inc
pop
sbb
leave
fmull
xchg
gs
push
pop
aad
sti
xchg
xchg
or
cmp
imul
fwait
in
ljmp
pop
aaa
push
sahf
pop
mov
xchg
or
mov
sbb
inc
dec
pop
or
insl
mov
stos
mov
mov
cld
pop
das
mov
aam
fs
mov
mov
ret
pop
aaa
mov
push
inc
mov
and
adcb
fisubrl
push
adc
mov
ss
iret
mov
pop
ret
cli
and
push
xchg
iret
aad
fldt
cli
add
mov
lcall
ret
sbb
loop
aam
dec
lahf
arpl
call
pushf
sbbl
jns
pusha
mov
pop
mov
sub
ficoms
push
stos
pop
lahf
inc
adc
frstor
inc
adc
sbb
pop
pushw
push
call
loop
test
scas
jne
or
rol
mov
test
stos
mov
lds
mov
negb
xchg
adc
outsb
pushf
xor
lret
mov
lret
xor
pop
nop
or
ljmp
imul
cmp
and
inc
gs
popa
les
jp
dec
sti
or
add
je
lahf
into
fmull
xchg
dec
and
xor
mov
ret
stos
sub
adc
inc
out
std
pop
cwtl
mov
pmulhw
icebp
data16
gs
inc
icebp
lret
test
test
ret
jb
repnz
xlat
mov
es
lods
mov
iret
or
pop
mov
xchg
dec
int3
jb
mov
lret
lret
mov
jl
cmp
push
jg
sbb
jl
jg
or
bound
add
jbe
call
mov
es
pop
push
std
outsb
stos
xor
dec
loopne
sub
pmulhuw
add
mov
ss
pop
lret
mov
daa
mov
pop
inc
stos
shrb
jge
test
int
add
inc
cmp
xchg
je
mov
xor
xor
dec
in
test
insb
pop
insl
into
dec
mov
mov
or
stos
push
loope
mov
xor
mov
add
in
in
mov
mov
or
clc
push
jecxz
cmp
xlat
xor
decl
lret
push
in
shl
in
je
xor
cmp
ret
xchg
repz
insl
push
xor
stos
jge
mov
cmp
mov
adc
xor
mov
mov
enter
int
adc
ss
pop
ljmp
sbb
inc
xchg
inc
mov
filds
add
cmc
xchg
mov
dec
xorb
in
jae
les
std
inc
jp
or
jbe
sbb
ret
shrl
sub
sbb
jb
sbb
outsb
inc
les
sub
lods
aad
dec
iret
mov
mov
hlt
sub
fmuls
imul
shlb
in
rcll
pop
movsl
mov
mov
dec
or
les
pop
jns
lcall
and
popf
adc
inc
pop
movsb
push
outsl
imul
dec
jae
hlt
sub
dec
fwait
dec
add
rorb
jl
stos
rorb
ss
cmp
jae
ja
xchg
push
lea
lock
cmp
decb
dec
mov
sti
lods
push
dec
in
repz
push
mov
adc
popa
xor
xchg
inc
xchg
mov
lds
and
mov
and
stos
cmp
iret
stc
cmp
dec
xchg
and
mov
loopne
pusha
aas
flds
mov
lods
mov
or
dec
scas
ljmp
insb
cmp
sbb
inc
ret
inc
or
xor
mov
pop
mov
js
push
gs
imul
dec
cs
push
sub
and
lock
mov
ss
xchg
or
xchg
mov
ljmp
test
and
jnp
cs
mov
xchg
xchg
mov
leave
lods
cmp
or
mov
push
testb
mov
ljmp
adc
push
or
dec
adc
jae
outsb
stos
inc
ret
push
stos
mov
jae
pushf
mov
push
mov
stos
add
or
xchg
mov
cmp
bound
inc
data16
mov
mov
out
into
cmc
mov
mov
iret
jle
mov
test
cs
inc
and
out
mov
pop
inc
add
lods
jge
and
ror
pushf
xchg
int
mov
sbb
inc
mov
add
ds
test
mov
xchg
addr16
or
adc
mov
jp
cwtl
aas
dec
fistpl
fiaddl
aam
lods
and
cmp
jbe
loope
sbb
loopne
pop
out
mov
cmc
iret
aam
pop
clc
add
jl
add
decl
add
pusha
jbe
enter
test
push
imulb
xchg
add
mov
xchg
mov
lds
jecxz
ljmp
into
outsb
ss
push
push
push
mov
add
push
repz
pop
mov
mov
mov
scas
sub
mov
mov
push
mov
shl
mov
cltd
ret
dec
fnstenv
pop
mov
mov
js
stos
cmp
ror
or
int
hlt
lret
adc
into
cmc
mov
clc
rorb
xor
inc
xor
in
repnz
popf
popf
andl
imul
std
jb
sub
pop
out
scas
lock
push
jg
mov
xor
xor
jle
cld
dec
int
jg
cmp
push
fnstenv
mov
mov
roll
add
clc
cld
sub
daa
mov
sub
daa
mov
sbb
or
and
cmp
jge
ljmp
jb
gs
es
mov
push
xchg
fwait
rcrb
dec
dec
lock
bound
jmp
sti
jno
sbb
and
hlt
sbb
xor
dec
pop
inc
dec
ds
enter
cwtl
stos
lret
leave
pop
fs
pop
cmp
int3
cmpb
fwait
push
test
xlat
out
out
cs
aad
push
sub
ds
js
in
sbb
xor
xchg
out
lock
cltd
and
hlt
movsb
cli
sti
int
mov
jo
push
and
mov
or
cmpsl
xchg
jae
push
cmp
aam
push
mov
sbb
fstpl
std
sbb
lods
sti
shl
into
mov
imul
mov
mov
inc
mov
ret
lds
push
push
add
test
faddl
cli
loope
in
sub
add
iret
insl
xchg
xchg
sub
cltd
std
test
mov
mov
jnp
leave
push
jnp
loopne
imul
imul
jge
xchg
and
mov
and
outsb
mov
fsubp
push
mov
mov
pushf
xor
push
es
clc
fsubrs
sahf
mov
call
inc
or
xchg
cltd
addr16
lods
xchg
pop
shl
ret
adc
pushf
cmc
loope
jge
jne
cmpsb
addl
shll
aam
inc
jb
mov
sahf
pop
not
mov
or
and
lds
dec
adc
dec
inc
loope
mov
je
or
adc
rcl
jl
mov
nop
lods
leave
xor
imul
dec
sti
stos
rorl
pop
lds
xchg
data16
mov
cmpsb
jb
add
loop
jne
into
scas
orl
out
movsl
imul
sub
and
xchg
negl
js
std
cmp
jge
push
in
mov
mov
mov
das
int
ljmp
repnz
cli
inc
fimuls
push
xor
rcrb
dec
lret
pop
adc
popf
sahf
call
movsl
mov
cmpsb
addl
dec
clc
adc
cltd
cwtl
js
pushf
cli
test
scas
cmp
mov
xlat
sub
dec
aaa
aam
cltd
xor
mov
js
js
fsts
lcall
dec
cmp
push
mov
imul
pop
aam
dec
js
scas
clc
loop
xchg
xlat
add
clc
lds
ds
pusha
jg
mov
push
sbb
push
inc
and
fimull
stos
loop
cwtl
sub
ret
loop
jmp
jbe
adc
out
mov
pop
cmp
sarl
mov
iret
shrl
out
loop
jnp
iret
push
inc
dec
ljmp
in
imul
out
loop
data16
fsts
insl
ss
lods
sbb
loopne
daa
loop
cli
data16
mov
hlt
lds
inc
add
imul
sub
mov
push
pop
lret
stos
inc
adc
adc
adc
jns
adc
aas
or
lock
mov
lds
push
add
fcompl
inc
pop
or
mov
iret
push
test
sub
test
cmp
mov
add
fdivs
out
cli
arpl
sbbb
jnp
xchg
cmpsb
shll
dec
inc
rorb
xor
push
out
xchg
push
clc
imul
out
out
int
pusha
push
inc
xor
add
cli
jno
test
mov
push
or
inc
lcall
dec
leave
mov
iret
mov
cltd
ds
dec
mov
loop
xchg
rcl
test
mov
ja
sbb
push
fstpt
pop
adc
mov
mov
add
iret
fiadds
mov
roll
int
cmc
jne
dec
into
lds
pop
push
dec
xor
or
cmp
xchg
addl
mov
jbe
sbb
sub
in
jne
jp
mov
xchg
xchg
mov
repnz
testb
jge
insl
lea
aas
and
adc
mov
daa
div
out
into
daa
insl
adc
pop
aas
ror
xchg
iret
jb
xchg
jecxz
shlb
pusha
stos
pop
in
xchg
or
lahf
sahf
lea
scas
jno
imul
dec
and
xchg
out
je
fsincos
ror
imul
xchg
out
push
push
add
sbb
or
loopne
lods
ja
add
faddl
jmp
stos
ffreep
leave
dec
pushf
xor
pop
xchg
and
ret
sub
movsl
ret
test
rcr
sbb
mov
pop
mov
mov
mov
testb
adc
or
les
mov
dec
inc
imul
loope
rolb
jo
jge
adc
sbb
pop
test
lea
jae
bound
stc
loope
das
test
test
stos
into
out
push
xchg
aas
push
push
movsb
mov
xor
mov
lea
fprem
push
mull
mov
jno
jp
fidivrl
shld
adc
xchg
scas
icebp
or
addr16
cmp
mov
mov
mov
xor
and
call
push
jbe
xchg
xchg
adc
ja
dec
repnz
out
sub
test
sub
stos
push
dec
xor
lret
dec
and
mov
push
sbb
or
repz
push
adc
es
fcompp
push
add
subl
mov
imul
lods
push
or
jmp
pop
mov
sti
cld
fbstp
shll
shrl
stos
add
sbb
mov
xor
xor
aad
mov
outsl
imull
jle
sbb
test
mov
xor
jbe
mov
movl
in
ficomps
out
push
inc
xor
or
mov
xor
lahf
aas
add
arpl
hlt
mov
pusha
adc
imul
das
nop
pop
sbb
ljmp
jno
cmpsl
jmp
mov
repnz
xor
cltd
add
jo
jne
dec
inc
test
jbe
mov
iret
stos
insl
int3
pop
xor
ds
xlat
mov
cld
jbe
fstpt
xor
lahf
enter
jb
push
push
mov
arpl
je
dec
sub
stc
add
jge
mov
mov
cs
insl
ret
xor
jo
mov
or
sub
fdivrs
ret
lret
mov
mov
pop
dec
in
popf
fwait
mov
movsl
mov
dec
shr
aaa
pop
sbb
cmp
gs
cmp
ret
shlb
lahf
aam
push
push
pushf
ret
rclb
mov
cmpl
xorl
dec
call
pop
dec
push
bound
dec
cmpb
push
aaa
sbb
jne
mov
lods
shrl
jp
sbb
lock
or
rolb
inc
pop
outsb
or
int3
loop
lock
dec
xchg
push
aaa
lods
xchg
pop
pop
mov
xor
das
in
fcmovu
mov
bound
stc
mov
cmpsl
push
les
in
lds
cmp
jecxz
add
xorb
pop
jnp
fmuls
rol
lea
cltd
ds
outsl
xchg
xchg
das
xor
stos
outsb
cmp
jbe
stc
jmp
xchg
popf
sbb
inc
rcrl
add
loope
pushf
add
ror
push
xor
mov
fadds
pop
daa
adc
out
loope
sub
icebp
out
and
add
mov
jmp
btr
adc
int
rclb
jns
stos
sub
dec
add
cmpsb
or
xchg
addr16
int3
das
or
ficoms
xor
cld
hlt
cmp
outsl
inc
dec
mov
cs
lods
pop
lahf
dec
sbb
fsubrs
hlt
and
ljmp
xchg
scas
ja
mov
inc
outsl
xchg
subps
sub
ficoms
sub
lock
rcll
sbb
mov
mov
mov
dec
mov
add
imul
cmp
mov
mov
pop
push
mov
lret
movsb
push
stos
jb
mov
jle
aaa
repnz
out
mov
sbb
daa
or
fwait
mov
out
or
add
dec
adc
sbb
outsl
mov
jne
add
jg
mov
mov
mov
sbb
sub
and
jle
stos
mov
loopne
mov
push
push
xor
jmp
arpl
out
add
add
int
incl
gs
fildll
daa
out
icebp
dec
es
dec
add
imul
add
cmp
int
stc
add
mov
loop
repnz
add
mov
les
js
mov
cld
repz
out
xor
add
fwait
cmp
xchg
pop
or
gs
mov
cld
repnz
cmpsb
js
cli
mov
lock
xlat
out
sub
pop
xor
mov
lea
shrb
fs
dec
push
jae
fstl
andb
bound
jns
dec
cmp
fistpll
inc
int
mov
adc
aad
lock
xchg
pop
inc
dec
int3
inc
jae
cmc
or
push
cmp
dec
lea
call
push
pop
sbb
pop
popl
xor
and
subb
les
mov
pop
inc
mov
inc
mov
and
enter
inc
add
shll
xor
push
dec
movl
stos
and
dec
xor
clc
pop
pop
xchg
sbb
cli
jl
mov
ljmp
fs
adc
scas
jo
enter
sbb
aam
sub
imul
and
test
cmp
les
ret
xchg
mov
push
pusha
push
or
imul
loop
adc
sbb
jns
scas
xor
ja
sti
mov
jle
jb
imul
fiaddl
call
pop
adc
sub
sti
mov
xchg
xor
inc
sbb
push
add
enter
pushf
ja
daa
adc
cmp
push
pop
add
sahf
mov
push
pop
mov
sbbb
adcb
sbb
imul
stos
sbb
cmpsb
inc
stos
add
clc
or
test
and
aam
aas
insl
jae
pushf
fldenv
rdmsr
cmpsb
pop
repz
jle
xchg
test
mov
inc
cmp
jnp
addr16
ljmp
data16
iret
ficoml
add
imul
xor
push
sub
fimull
shll
cmp
add
add
das
into
cwtl
ljmp
insb
xor
mov
movsb
jl
xlat
xchg
xchg
cmp
aad
mov
add
mov
lret
daa
andb
daa
jl
mov
repz
push
and
dec
push
fnstsw
push
lods
in
mov
ret
cld
out
xchg
aam
pop
fs
sub
ljmp
cmpsl
inc
sbb
inc
xor
stos
mov
orb
int3
xor
adc
mov
pop
imul
push
jecxz
in
mov
int
xlat
sbb
mov
jp
mov
mov
out
inc
xor
dec
or
fildll
int
bound
and
add
rorl
push
popf
pusha
mov
xlat
ljmp
jp
popa
adc
xchg
mov
jge
and
and
xor
mov
dec
int
dec
cmpsb
test
mov
in
xlat
out
xchg
mov
push
repz
mov
jno
cmp
jecxz
call
mov
sub
and
out
daa
dec
xor
popa
pop
in
jae
lds
imul
je
pop
into
out
push
test
inc
push
jo
fmull
into
std
jnp
adc
dec
incl
jp
mov
sbb
mov
enter
jg
out
sub
dec
add
adc
popa
inc
sub
mov
movsl
in
push
out
pushf
movups
int3
dec
test
or
sbb
lret
mov
arpl
cmpsb
xchg
mov
xchg
leave
cmp
repz
jns
push
sub
inc
sbb
aaa
inc
dec
mov
mov
bnd
dec
inc
loope
xchg
sbb
sbb
sbb
fwait
stc
sub
mov
icebp
fs
lret
data16
dec
andl
fcmovne
adc
push
xchg
icebp
cld
mov
adc
and
xor
jmp
cmp
inc
dec
mov
mov
lahf
xor
sahf
cmp
mov
jp
adc
aad
fucomip
mov
jno
cmp
adc
pop
leave
mov
push
pop
jl
mov
pop
mov
mov
xchg
fwait
shl
rolb
movsl
gs
hlt
push
int3
dec
dec
jbe
mov
mov
lods
movsb
ret
mov
and
jecxz
in
and
mov
or
cmc
push
js
mov
adc
enter
or
in
mov
loop
outsl
xchg
sub
test
gs
xchg
mov
jns
loopne
cmp
imul
cmc
enter
cmpsb
mov
pop
mov
push
cmp
aam
out
outsl
and
mov
pop
std
xchg
pop
mov
mov
cmpsb
lcall
clc
or
and
stos
setb
repz
mov
or
stos
mov
fildll
adc
cmc
pop
pop
push
repnz
cwtl
in
leave
fistpll
fdiv
inc
sub
and
les
jp
hlt
mov
pop
push
ljmp
or
push
andb
mov
cmp
in
ret
inc
jne
xchg
pop
xchg
hlt
sub
nop
add
sub
fsubs
pop
pop
fs
mov
xor
dec
and
lods
lds
jb
cmpsb
sub
rol
dec
arpl
jo
cmpsb
aaa
push
orb
xchg
rorb
adc
sub
insb
pop
mov
iret
stos
enter
jne
movsl
add
mov
iret
cmc
arpl
lcall
sti
dec
xor
lcall
outsb
sub
shrb
mov
mov
push
mov
cmp
lds
sbb
and
push
pop
xchg
add
sbb
fiaddl
jmp
sbb
mov
mov
out
aad
mov
imul
pushf
jno
dec
mov
jb
loop
lret
fadd
lds
adc
fs
xlat
ror
outsl
jns
lods
js
cmp
movsl
enter
or
int
push
lods
std
cmpsl
in
mov
sahf
mov
or
ja
inc
int3
mov
push
insl
inc
scas
xchg
ja
jecxz
fwait
mov
inc
xchg
pop
repz
pop
and
push
shr
push
ret
jmp
leave
jne
xor
dec
gs
jle
pop
fsub
lcall
jecxz
scas
cwtl
adcl
xchg
or
dec
lcall
sarb
das
and
es
jo
int3
loopne
adc
addb
xorb
cmp
xchg
rclb
inc
add
lea
adc
cmp
adc
std
adc
ja
addr16
or
test
cmpsb
dec
inc
push
sub
jno
sti
mov
cmpsb
mov
pop
push
push
inc
cmc
xchg
scas
dec
test
mov
mov
jo
inc
fwait
testb
pop
scas
xchg
shll
mov
xchg
push
and
add
fistpl
mov
and
enter
inc
mov
imul
adc
xchg
jbe
push
push
xchg
ficoms
stc
add
xchg
movsb
into
push
ss
pop
mov
sbb
rorl
rcr
incb
pusha
sbb
pusha
adc
stos
sbb
mov
sub
mov
loop
leave
roll
jp
mov
in
and
lcall
je
push
xor
lret
repnz
lea
dec
fwait
mov
shrb
cld
rorl
inc
or
cmc
lods
call
inc
sbb
cmc
cmpsb
mov
lods
inc
fadds
add
add
adc
loop
jo
test
je
cmp
mov
xchg
fs
and
repnz
xlat
lds
inc
or
sub
leave
andb
sub
sub
sub
inc
mov
or
int
dec
cwtl
loope
add
shr
mov
xchg
and
push
movups
mov
icebp
fadd
inc
lock
push
sahf
pop
rcll
mov
cltd
sub
pusha
loop
iret
mov
decl
or
and
inc
aad
dec
scas
xchg
xor
jg
adc
movsl
sbb
test
push
lcall
outsb
jg
sbb
in
or
in
ds
mov
adc
dec
repnz
jle
popf
dec
jno
xchg
hlt
daa
nop
sbb
adc
aas
jae
xchg
divl
cmp
popa
mov
and
in
push
jo
fmul
popf
ret
int3
popf
out
jno
push
xor
dec
and
dec
mov
add
ja
bound
sti
lcall
enter
xchg
aas
dec
in
je
sahf
es
inc
pop
push
insb
sbb
andb
icebp
in
insl
jns
jb
rorl
lods
nop
lahf
cmp
jmp
in
adc
fwait
repz
dec
mulb
movsl
frstor
sbb
sub
mov
sbb
pop
lea
ja
add
sbb
pusha
dec
push
in
mov
mov
sbb
sub
add
lods
addr16
xchg
fisttps
pop
mull
ret
push
sub
mov
lcall
out
aaa
ljmp
or
stos
sahf
add
xor
rorb
mov
lret
push
outsb
std
cmc
repz
out
push
inc
out
jae,pt
std
aam
hlt
outsb
mov
adc
inc
sub
sbb
xchg
adc
stc
jp
test
pushl
test
imul
sub
ds
mov
mov
pop
push
mov
jmp
xchg
push
shr
hlt
fidivs
mov
fs
cltd
lret
stos
inc
lods
fiadds
int
imul
dec
jo
arpl
ds
push
imul
jmp
cli
andl
aas
mov
rolb
add
lahf
xchg
lcall
in
mov
inc
iret
xchg
xchg
and
in
es
mov
sbb
adc
push
pop
sbb
mov
jecxz
ficomps
mov
ss
or
int3
and
stc
loopne
mov
fdivrp
in
and
int3
call
out
popa
ljmp
cmp
dec
fsubrl
xor
mov
mov
lcall
mov
push
popa
push
inc
mul
push
ja
daa
fwait
icebp
dec
sbb
das
movb
push
loopne
jp
sub
ss
adc
sbb
mov
mov
xor
addr16
pusha
mov
in
xchg
in
inc
xor
mov
in
add
fnstenv
js
lret
movups
arpl
mov
lea
sub
add
out
les
fs
or
es
inc
daa
mov
mov
insl
xchg
add
xchg
mov
aaa
popf
add
mov
lret
pop
push
rcrb
stos
dec
imul
pop
test
mov
sub
mov
or
roll
mov
push
mov
cmp
es
pop
xchg
push
cmp
gs
pop
jmp
mov
xchg
incb
pop
and
loope
and
cmpsl
mov
in
sti
fistl
jle
xchg
jnp
addr16
aam
inc
sub
scas
mov
ret
adc
out
inc
cmpsl
push
xchg
xchg
sti
divl
mov
in
mov
std
dec
inc
sub
push
imul
xor
xor
movsl
sub
jg
pop
cmp
imul
mov
cmp
adc
push
adc
loope
rcrl
xor
ljmp
je
shll
enter
outsb
mov
imul
sbb
fisubrl
rcrw
xchg
scas
ja
sbb
addr16
aaa
xor
mov
mov
js
and
dec
ds
pop
xchg
aas
and
out
add
leave
adcb
rcrl
pushf
in
imul
test
test
jecxz
lahf
pushf
daa
fsts
sbbl
in
fisttps
jo
outsb
lret
mov
dec
dec
mov
xchg
inc
and
sbb
adc
jbe
cmpsb
daa
popa
push
jg
dec
mov
rcrb
jle
pop
lods
into
mov
insb
fadds
push
packssdw
outsl
pop
ss
xor
mov
clc
xchg
notl
test
lods
out
lods
sbb
test
cmp
pop
xor
outsl
inc
call
ss
mov
xlat
jns
and
inc
jecxz
xchg
or
inc
repz
xchg
sbb
lea
mov
test
ja
fdivrp
cmp
mov
pop
nop
cmp
and
dec
dec
adc
push
sub
and
leave
xor
mov
je
idivb
outsl
xchg
xchg
pop
in
lods
pop
dec
add
jg
jmp
in
adc
jbe
add
in
inc
out
mov
out
push
sbb
adc
jge
loope
cmp
jns
mov
sbb
mov
lods
cmpsl
dec
cmp
sub
jle
jmp
out
push
or
stos
xchg
xchg
and
sbb
xor
sub
daa
cmp
roll
insb
stos
je
nop
mov
divl
nop
rolb
pop
sbb
add
cli
push
jb
je
wrmsr
imul
sti
lock
xchg
mov
es
icebp
mov
test
cs
sbb
in
xchg
fbstp
daa
jns
and
fwait
lret
sbb
lods
add
insb
dec
pop
mov
dec
sbb
leave
sbb
imul
es
mov
cmp
xchg
sub
out
xchg
push
fcoms
cmp
add
hlt
and
mov
and
andb
xchg
fs
mov
xchg
dec
xor
jo
stos
mov
mov
gs
shrl
push
jnp
xchg
shlb
cli
xchg
cmp
cmp
cs
sbb
test
out
sub
je
js
push
push
ss
mov
ss
cld
and
mov
clc
sbb
cmp
shlb
test
fisttpll
push
add
mov
pop
jg
addr16
dec
outsb
mov
pop
cmp
aam
loopne
add
inc
adc
xor
adc
fcomp
add
xor
std
cmp
into
packssdw
jne
addr16
add
xchg
xchg
jg
cmc
jmp
sub
mov
xor
or
outsl
ja
jmp
imul
stos
inc
fnsave
push
enter
pop
subl
sbb
push
insl
and
subl
cmp
and
sbb
inc
or
mov
xor
repz
stos
movsl
insl
popf
shrl
add
adc
mov
sbb
clc
and
inc
enter
mov
jae
lret
pusha
scas
mov
and
mov
or
mov
sar
mov
dec
insl
cmp
push
pop
aad
stos
pop
inc
stos
sti
jp
push
pop
leave
mov
or
cmpb
mov
xchg
cltd
test
pusha
hlt
cmp
das
shll
aas
xor
cld
jno
scas
sbb
in
mov
je
dec
add
fndisi(8087
negl
xchg
pop
mov
loope
or
rcrb
stc
jo
push
lcall
sbb
inc
sbb
fld
or
sti
jmp
shrw
xchg
fs
mov
xchg
fildl
push
cmpsb
sbb
xlat
shrb
or
mov
xchg
popa
lahf
and
in
cs
aas
ljmp
add
push
inc
push
jge
test
out
arpl
daa
jl
cmpsl
adc
bound
int3
xchg
xchg
fwait
mov
dec
into
ja
scas
test
dec
loop
push
mov
jns
cmp
xor
ljmp
hlt
fistl
shrb
adc
movsl
inc
pusha
pop
pop
pop
test
sub
mov
out
neg
xchg
aaa
dec
mov
mov
cmpsb
cmp
test
cmpsl
xchg
jae
mov
sbb
inc
and
mov
dec
jns
pop
jl
add
mov
and
inc
scas
sub
das
lods
inc
adc
and
out
inc
mov
outsb
data16
and
jg
scas
pop
inc
add
cmpsl
or
dec
lods
mov
xchg
add
jmp
sub
sbb
rolb
sahf
or
xchg
es
sbb
sbb
dec
fmulp
pushl
outsl
insl
lods
pop
and
inc
xchg
jmp
xor
adc
rolb
mov
shl
aaa
xor
pushf
test
test
dec
mov
xchg
mov
mov
dec
incb
or
mov
mov
outsb
pop
jae
lahf
cmp
mov
fcom
jg
push
pusha
xchg
inc
sub
aam
je
mov
mov
add
xchg
inc
push
sub
xlat
enter
jmp
xor
cmp
loopne
add
lahf
jmp
ss
repz
xor
xchg
cmpsl
push
lret
out
mov
add
std
sbb
mov
ret
adc
push
inc
cwtl
lea
popa
or
cmp
xor
lret
xorb
add
mov
int
jmp
mov
shlb
add
stc
addr16
inc
addl
testl
sub
jo
loope
xor
pop
ss
push
adc
jg
inc
lahf
cld
push
sub
dec
jo
bound
pop
mov
fisubl
stos
filds
adc
sbb
test
stc
aas
int3
cmp
lods
mov
daa
fldt
mov
mov
out
aam
xchg
out
pop
cmp
je
sbb
into
lea
lcall
clc
sbb
jmp
add
clc
adc
fisubs
jno
movsl
dec
xor
mov
das
ljmp
sbb
lcall
adc
mov
imul
xor
sub
ds
pop
mov
dec
cmp
pop
pop
sub
imul
pop
sub
lods
push
imul
dec
xchg
xor
clc
mov
mov
push
inc
push
loope
sti
das
push
test
aas
dec
stc
cmp
subl
sti
lods
sbb
addr16
cmp
xchg
test
add
jae
cmp
clc
sub
fwait
cli
adc
and
inc
sbb
stos
in
mov
ficompl
popa
fwait
movsb
mov
loope
pop
scas
incl
pop
sbb
ds
les
aaa
push
jmp
inc
jecxz
mov
aam
push
sbb
sub
mov
ret
out
mov
and
scas
insb
and
jb
and
sub
jmp
jae
inc
fcoms
cmc
outsb
sub
adc
imul
insl
cmc
and
mov
ljmp
dec
adc
pop
in
mov
rorb
test
popf
movntq
xchg
pushf
add
inc
insb
imul
dec
stos
jbe
jae
lds
mov
pcmpgtb
daa
mov
sbbb
outsl
sbb
and
pop
fisubl
or
fwait
adc
push
and
lods
or
push
jbe
mov
pop
nop
subb
shll
icebp
lea
lds
jns
es
push
popf
mov
je
mov
sbb
lret
pop
jns
enter
stos
push
mov
mov
nop
sbb
adc
push
mov
popf
add
sub
ss
sbb
addl
sub
es
or
push
xor
lods
popa
popf
add
rcrl
arpl
inc
stos
arpl
push
sbb
insl
stos
je
pop
sbb
cld
cmp
push
lcall
cmp
cmp
pop
mov
pop
sbb
bound
sti
mov
inc
mov
mov
js
loopne
xor
mov
xor
insl
cmp
push
pop
in
test
add
movsb
sahf
push
fcomps
xlat
or
ficomps
push
xchg
mov
mov
jmp
movb
leave
dec
repnz
xlat
lods
inc
mov
pop
pop
jl
xor
js
lods
inc
add
lea
dec
in
aad
clc
lds
lcall
lcall
jge
jne
mov
sarl
push
out
aad
cwtl
inc
add
fnstcw
lcall
pop
pop
lods
test
pop
pop
and
outsl
dec
sarl
sbb
ret
les
jae
push
pushf
mov
adc
jns
xchg
cmp
pop
dec
aam
in
xchg
fidivs
pop
add
arpl
pop
add
sahf
pop
adc
adc
loop
lock
pop
mov
cs
test
pop
out
repnz
mov
out
cmp
xor
roll
or
sub
pop
rcll
add
inc
in
sbb
push
adc
sub
adc
subb
push
adc
test
jmp
in
cmc
lret
dec
or
and
rcll
pushf
shl
adc
inc
add
inc
sub
cmc
mov
mov
add
test
and
fldt
in
pop
mov
add
dec
jmp
jge
sub
xchg
push
add
in
rclb
lret
bound
adc
int
pushf
xlat
repz
jbe
mov
rorb
push
jbe
inc
push
xchg
flds
sarb
add
jno
mov
dec
pop
push
jg
sbb
lods
push
int
es
jl
sti
icebp
in
xchg
jp
js
movsb
dec
mov
cmpsl
pop
fstps
inc
mov
test
jecxz
enter
and
jge
hlt
orl
xor
int
jne
sbb
push
lret
or
mov
sbb
daa
dec
imul
push
jnp
sub
fdivl
add
jnp
fcmovb
push
adc
mov
sub
mov
out
ja
cwtl
jne
push
ja
out
rcrb
arpl
inc
sub
and
or
js
cld
sub
inc
add
dec
xchg
xor
mov
stos
sub
outsl
push
pop
popa
and
adc
inc
shrb
pushf
jo
pop
jl
mov
xor
out
fsubl
lock
fcompl
push
loopne
adc
sbb
sahf
or
rcll
inc
inc
dec
add
mov
xor
fildll
in
and
in
or
in
push
mov
dec
xchg
pop
adcb
sbb
mov
jmp
xchg
aaa
mov
xlat
and
push
cld
jp
mov
sarb
cmp
in
cmp
xchg
add
scas
jg
push
mov
std
shlb
push
repz
adc
or
sub
out
sub
fnstsw
sub
dec
jmp
or
mov
or
enter
and
inc
or
adc
jl
nop
mov
leave
ljmp
in
cwtl
shll
xor
mov
mov
mov
sbb
fnstsw
or
dec
repnz
cli
sbb
ret
sbb
aam
movsb
mov
loope
or
pop
shrl
xchg
daa
cli
inc
jb
addr16
xchg
rcr
dec
insb
fnsave
fisttps
cmc
inc
cmp
inc
dec
mov
and
inc
hlt
test
imul
adc
jge
xchg
leave
cmp
push
sub
mov
cmp
sbb
cmp
mov
xchg
adc
in
mov
jne
mov
mov
mov
ret
push
imul
mov
xchg
push
cmp
data16
jae
xor
test
mov
fistps
xchg
jmp
sub
sbb
jns
cmp
and
jp
fsubr
les
nop
sbb
mov
add
rcrl
rol
xchg
frstor
stc
mov
movsb
cmp
fistpl
fidivrl
shrb
mov
pop
ror
jne
or
sti
inc
xchg
es
inc
fisttpl
shrb
sbb
popf
test
and
movsb
or
jecxz
arpl
and
nop
mov
push
or
test
fcmovnu
shll
lock
jl
cwtl
pop
and
repz
or
or
add
in
test
xor
lret
push
in
pop
sbb
test
mov
ja
mov
pusha
or
add
fists
mov
mov
dec
jo
mov
mov
sti
outsl
xorl
out
sbb
push
std
sub
dec
pop
push
sbb
xchg
sbb
cmc
mov
dec
in
mov
mov
push
lret
imul
movsb
das
dec
jg
adc
sarb
adc
popf
mov
sti
in
sbb
sbb
rolb
lea
jle
xlat
cmp
jmp
fistl
inc
push
or
inc
repz
pop
dec
xlat
cmp
jp
sbbl
out
cwtl
dec
jno
lea
push
ret
icebp
sub
mov
imul
insl
push
adc
rcll
lcall
cmp
je
pop
inc
mov
sub
dec
stc
andb
imul
and
add
pop
into
aad
mov
mov
cmp
aad
rclb
insl
mov
test
fcom
fisubrs
dec
pop
ljmp
adc
and
outsb
pop
jnp
mov
mov
loopne
adc
in
mov
jecxz,pn
cmp
inc
pop
imul
call
clc
xchg
xor
and
push
lock
push
pop
or
inc
push
or
sbb
les
loop
test
push
jne
mov
pop
add
popa
dec
mov
mov
cmp
push
xor
dec
inc
aaa
sbb
movsb
pop
add
mov
push
cmp
fimuls
xchg
sti
and
and
xchg
iret
js
ret
and
push
sbb
and
in
jl
pop
sub
ret
clc
dec
xchg
push
outsb
or
mov
das
lret
fisttpl
aas
inc
dec
loop
lret
or
sbb
sub
push
sub
pop
bound
ds
cli
jg
xchg
pop
call
sbb
cmc
shlb
xor
push
aaa
daa
sti
repnz
cmpl
pusha
adc
jp
inc
add
out
xor
pop
add
lock
cmp
mov
pop
jge
cltd
jl
lahf
insb
sbb
lea
pop
ret
mov
stc
fwait
push
sbb
aam
shrb
fcmovu
pop
and
jmp
sub
jl
xor
inc
arpl
xchg
mov
in
pop
dec
inc
rorl
movsb
fld
dec
pop
outsb
sbb
sub
sbb
inc
loopne
pop
scas
adc
repnz
add
and
adc
jl
push
enter
add
push
out
insl
sti
nop
cmp
dec
fsubrs
mov
or
dec
mov
pop
inc
std
inc
mov
mov
leave
inc
add
out
cmc
mov
jae
je
imul
add
mov
inc
pushf
dec
les
lods
icebp
icebp
data16
lock
xchg
scas
insb
ret
scas
cmp
push
pop
fwait
call
xchg
adc
xor
test
cwtl
hlt
mov
je
dec
inc
push
out
ds
xchg
adc
adc
and
mov
push
sub
in
repz
je
call
add
fadds
sub
xchg
stos
cmp
and
push
call
mov
cmp
and
mov
mov
mov
lods
cmc
mov
push
mov
xchg
sbb
inc
and
rclb
int3
mov
pop
mov
push
dec
mov
jmp
in
adc
popf
mov
out
push
sarb
clc
ljmp
out
cmp
sub
mov
push
dec
dec
test
mov
dec
arpl
pop
pop
jns
stos
and
scas
in
inc
xchg
loopne
sbb
jae
pop
jecxz
xchg
mov
sub
mov
mov
enter
xchg
test
stc
jle
dec
sub
test
inc
cmp
jmp
shrl
inc
cmp
adc
xchg
pushf
fbstp
lods
roll
push
mov
daa
lret
adc
jnp
call
mov
inc
mov
xchg
orl
jo
sbb
pop
mov
add
mov
push
fcompl
cld
ja
out
sbb
pop
loopne
sbb
imul
fdivrp
repz
test
ja
xor
mov
dec
sub
fstpt
push
inc
mov
gs
or
shlb
cs
fcoms
nop
xor
cld
ret
clc
lea
mov
clc
cmp
sub
into
leave
pop
ja
add
loopne
pop
xchg
lds
in
mov
ret
cmp
jl
in
sbb
dec
sbb
in
shlb
cmpsl
sub
xchg
jnp
inc
or
adc
aaa
in
adc
lock
ret
sbb
mov
jecxz
lcall
jg
jno
push
mov
jbe
les
mov
xor
mov
out
fistps
sarb
imul
mov
scas
pop
jle
cwtl
adc
jb
mov
fdivs
inc
fwait
pushf
cmp
loopne
pop
inc
int
into
es
loop
mov
push
add
gs
not
jmp
jg
enter
repz
imul
cltd
fwait
mov
mov
ffree
mov
or
sbb
or
push
cmp
and
inc
stos
insl
lock
adc
add
pop
mov
xchg
js
sti
and
gs
push
js
xor
in
imul
push
stc
xchg
add
repz
mov
dec
ds
scas
nop
hlt
mov
xchg
mov
xchg
xchg
fs
fists
xchg
xor
sub
jge
aad
mov
and
mov
pop
iret
shr
ficomps
cmpsb
pop
mov
in
enter
add
lea
jns
mov
push
mul
push
jnp
jae
add
into
dec
push
pusha
test
mov
aad
xor
push
jo
pop
rcrb
lret
out
mov
pop
les
jmp
mov
jno
sub
pop
stos
stc
iret
mov
bound
fistl
jp
pop
pop
xor
lcall
mov
lods
fidivl
cmp
rcll
or
setp
dec
jo
push
insl
loope
imul
inc
out
icebp
fnstcw
or
push
mov
sbb
aaa
int
lcallw
or
mov
and
pop
mov
out
mov
jg
pop
inc
jns
repz
adc
add
in
outsl
adc
subl
push
lahf
shr
test
sub
push
sub
stos
or
or
dec
sbb
mov
js
fwait
loop
mov
shlb
lcall
leave
and
movsl
mov
bound
cmp
fists
inc
fisttpl
and
test
roll
sbb
out
pushf
addr16
cmp
das
push
aam
bound
jmp
testb
test
insl
orl
xor
pop
pop
xchg
lea
rcl
sub
les
inc
clc
aad
cmc
push
cmpsl
pushf
xchg
jns
dec
fucom
push
mov
shlb
dec
jns
gs
mov
sbb
pop
ja
mov
int3
jbe
lods
add
adc
sub
in
xchg
mov
pusha
pop
sub
pop
popf
aam
movsb
mov
fwait
add
adc
faddp
xchg
inc
not
sbb
xchg
mov
fdiv
aad
daa
sub
cmp
jmp
or
adc
dec
mov
sbb
bound
sbb
inc
outsl
adc
mov
add
mov
mov
xchg
arpl
inc
iret
sub
call
adc
jg
push
xchg
popa
sub
xchg
xor
shlb
mov
shlb
test
inc
pop
popa
orb
mov
testb
xlat
jle
ja
nop
dec
mov
imul
jmp
or
fisubs
cmp
mov
push
adc
sbb
jnp
cmp
xor
push
in
bound
adc
jns
fisubrl
movl
test
pop
in
mov
or
and
jcxz
pop
adc
insl
mov
push
addl
ret
adc
pop
ja
out
cld
inc
clc
fcmovbe
incl
ret
out
insb
in
js
loopne
mov
push
cs
and
out
jg
imul
pop
pop
call
sub
scas
fists
clc
test
inc
dec
dec
test
hlt
cli
and
loopne
call
push
sub
cmp
jnp
testb
ficoms
es
cld
scas
xchg
cmp
inc
jmp
cmp
std
pop
add
pusha
mov
sbb
add
and
call
iret
mov
fimuls
mov
push
std
inc
mov
ret
mov
pop
jge
add
fdivrl
aad
std
and
cld
xor
xchg
test
pop
xlat
loop
jae
adc
xor
stos
adc
js
fnsave
out
pop
push
lock
or
mov
pop
mov
or
xchg
loopne
push
mov
movsb
and
jmp
pop
mov
and
leave
nop
sub
clc
stos
xchg
std
pop
dec
lock
add
imul
scas
popa
adc
pop
jno
shr
aaa
pusha
fmull
fiadds
dec
xor
mov
xchg
and
jp,pn
aad
daa
std
mov
pop
test
sub
push
stos
xor
sbb
ret
xor
fld
in
ds
cmp
push
popa
sbb
aad
jp
push
pop
ret
pop
sub
cmpsl
xchg
sub
mov
daa
mov
stos
add
pusha
cli
dec
inc
sbb
xchg
adc
inc
aad
fadds
push
call
adc
out
in
and
pop
push
pop
add
shr
push
xchg
rorb
cs
inc
push
sub
in
loopne
call
pop
insl
sbb
pop
scas
sbb
cmp
dec
mov
pop
clc
scas
aas
lret
lock
inc
aas
mov
sbb
jmp
js
and
dec
xchg
ret
loopne
daa
xchg
pop
sbb
bound
lcall
and
jmp
jbe
inc
xchg
adcl
push
push
pushf
loop
gs
or
dec
push
pop
incb
shrl
jmp
incl
ljmp
jle
ja
std
push
push
pop
aad
push
sti
pushf
mov
int3
sub
stos
xlat
and
outsl
js
mov
arpl
mov
add
dec
or
or
call
xchg
stos
stc
sub
or
imul
push
outsb
pop
jno
inc
push
cmp
loope
xchg
dec
dec
xchg
std
inc
xor
dec
jle
mov
add
fcomps
lods
pop
mov
daa
sbb
inc
inc
stc
arpl
in
mov
test
mov
sbb
xchg
cmpsl
xchg
jmp
ret
cmp
lock
or
pop
jecxz
xchg
lods
fistpl
xchg
xchg
out
sbb
fwait
dec
rol
xor
xor
stos
dec
inc
jge
push
mov
out
bound
imul
pushf
sub
call
shl
xor
aaa
and
cmpsl
xor
adc
loop
jmp
adcl
ret
xlat
out
mov
rcr
sar
pop
cmp
sub
adc
push
fisubl
fidivl
mov
xlat
idiv
stos
movsb
xor
mov
dec
adc
pop
test
in
mov
cmp
movsb
pop
out
dec
adc
in
ret
stos
cmp
mov
fcomps
or
ret
lret
cmp
dec
clc
dec
in
dec
scas
dec
lock
jns
mov
inc
pop
pop
test
fildl
jge
adc
test
sub
jb
push
xchg
enter
and
stos
cmp
inc
bound
pop
inc
repz
cmp
mov
pop
lcall
sub
iret
orps
jge
je
mov
jbe
in
add
sub
pop
leave
scas
cs
push
mov
jnp
adc
jmp
inc
insl
cs
jl
scas
fwait
popf
xor
ja
and
je
jnp
inc
pop
pop
shlb
and
sbb
inc
cli
and
jbe
cmpsb
cmp
xor
aaa
and
jo
test
push
call
rorl
inc
xchg
xor
arpl
xor
jbe
lods
outsl
jg
fidivl
add
mov
enter
and
jns
mov
aaa
jns
add
push
testl
je
jg
cmp
aas
jns
fsubp
push
in
jl
dec
pop
leave
add
insl
cmp
lret
fisubrl
loopne
adc
mov
sub
test
dec
fsubrs
xor
mov
jge
cmp
pop
sub
daa
stos
pop
addr16
xchg
dec
scas
and
push
fwait
in
out
mov
cld
xor
adc
xor
lret
leave
les
std
or
xchg
mov
cmp
pop
dec
and
xchg
xchg
movsb
arpl
sub
pop
lgs
dec
push
xchg
clc
hlt
jno
out
cmpsb
xchg
in
mov
std
xchg
ss
decb
xor
jecxz
hlt
fimull
and
and
mov
and
inc
rol
jmp
ss
mov
mov
jno
lret
lods
xchg
xchg
sahf
loope
in
jg
push
sbb
repnz
cs
sbb
shrl
cmp
xchg
mov
ljmp
lods
push
cmc
icebp
mov
mov
jns
gs
jnp
in
mul
repz
repnz
adc
push
sbb
daa
jb
pop
aaa
negb
cmp
lcall
pushf
jnp
xchg
mov
mov
sarb
out
push
fwait
dec
inc
dec
aas
push
out
lret
in
dec
movl
xchg
leave
ja
jle
jl
jp
adc
les
aad
xchg
mov
cmp
add
leave
mov
orl
xchg
in
jnp
movsl
pop
pop
aas
cltd
in
mov
inc
out
mov
scas
shrb
fldenv
mov
adc
out
mov
inc
and
cltd
pop
lods
adc
aad
jle
push
pop
mov
repz
cli
shlb
jns
lods
je
xorl
sbb
fimull
int
mov
rclb
jecxz
rcr
cld
ret
les
push
xor
push
out
or
or
cmp
dec
call
test
scas
fstp
shr
enter
das
xor
cld
push
icebp
ljmp
sbb
stc
stc
fcomps
lret
repz
jg,pt
into
faddl
and
test
in
gs
cmpl
xor
and
push
xor
jmp
inc
dec
xchg
pop
es
jns
sub
mov
sbb
jp
nop
xchg
lods
push
xchg
div
jmp
aaa
sbb
cmc
pop
aas
sti
xor
mov
or
fcomp
pop
add
inc
pop
jle
neg
mov
cmpsl
mov
mov
dec
cmp
push
daa
in
hlt
mov
and
repnz
icebp
xor
testb
and
pop
cltd
cmp
adc
inc
insb
outsl
fisubrs
ret
stos
push
add
mov
in
jb
pop
clc
cmp
mov
inc
lds
and
inc
out
leave
inc
dec
adc
push
lcall
clc
xchg
mov
gs
inc
dec
push
stc
adc
inc
hlt
and
adc
xor
sarl
sbb
fidivs
bound
xchg
xlat
fsubl
mov
cli
pop
andb
cwtl
out
xchg
or
adc
ficompl
mov
push
pop
push
in
loope
cld
arpl
inc
push
ljmp
orl
mov
addr16
std
or
inc
cmp
bound
cmc
mov
repz
pushf
adc
jp
lcall
xor
scas
xchg
pop
loop
fcoml
adcl
mov
mov
mov
sti
out
sub
test
adcb
cmc
loope
mov
iret
adc
sub
cmpsb
jmp
lods
xor
ss
cmp
fldenv
rcrl
hlt
cltd
or
jmp
jmp
lock
mov
mov
cmc
xchg
jge
dec
les
jbe
out
jb
dec
sub
and
push
les
psrlq
push
incb
repnz
mov
es
xor
mov
cwtl
ret
push
mov
insb
inc
jmp
mov
mov
mov
sub
xchg
data16
orl
mov
ret
fiaddl
insl
inc
lea
jnp
outsb
pusha
fnclex
daa
mov
mov
pop
test
mov
mov
dec
mov
push
add
lret
fdiv
mov
out
lret
or
xor
xchg
cmp
xchg
bound
test
sub
xor
jnp
cwtl
mov
xchg
push
push
and
pop
out
data16
cmp
push
mov
xor
ficompl
test
subb
std
scas
vcvttps2dq
xchg
ret
aas
ud0
xor
push
xlat
sti
and
push
cmp
sub
fisttps
mov
jb
leave
cmp
scas
xor
sbb
adcb
int3
addb
xchg
push
adc
loopne
das
mov
pop
sbb
lret
idivb
add
cmc
sub
rcpps
jecxz
adcb
pop
addl
test
stos
repnz
cmpsb
inc
inc
adc
mov
lods
dec
pushf
mov
inc
test
lock
dec
gs
jmp
jp
and
jns
test
push
push
xchg
addl
or
cmp
mov
outsb
push
addl
lcall
sub
add
and
or
mov
inc
addb
push
pop
bound
inc
dec
jnp
pop
dec
pusha
call
out
xor
mov
add
pop
fsubs
add
push
mov
and
dec
xor
in
xor
jmp
mov
cmp
sub
inc
jb
mov
aaa
clc
xchg
pop
pop
les
cmp
es
jne
or
stc
mov
xchg
push
out
xchg
pop
dec
add
pushf
cmp
push
sahf
aaa
test
mov
mov
cltd
push
add
xchg
or
addr16
push
or
imul
or
and
mov
xor
mov
inc
mov
mov
lods
sti
dec
movsl
jb
in
lods
jle
mov
mov
push
sub
jne
xchg
push
pop
sub
jnp
out
in
mov
sub
push
jo
shll
inc
mov
hlt
cmp
cltd
sbb
jl
adc
push
fcoml
clc
adc
mov
jns
xlat
adc
jnp
test
cli
sahf
sbb
mov
test
movsb
je
orb
xor
jg
or
ss
es
lods
push
mov
test
mov
stos
or
cmp
pop
sbb
mov
dec
test
cmp
cmpsb
jae
sarb
loop
rep
mov
mov
xlat
mov
adc
adc
push
cmpsl
cmp
xor
call
sbb
jno
mov
stos
dec
outsl
sub
call
inc
xor
roll
adc
pop
mov
mov
stos
jp
or
cmc
cli
out
jp
imul
cmp
arpl
mov
push
enterw
ret
pop
pushf
rcl
inc
test
mov
cmpsl
push
ret
shl
repz
hlt
sub
pop
mov
adc
sub
sub
inc
pop
movsl
andnps
lcall
pop
stc
icebp
insb
xchg
in
and
rcrl
sub
repz
enter
int
and
gs
imul
lret
dec
cmp
inc
lcall
popf
cmp
cmc
roll
mov
insb
movsb
mov
xchg
cmp
cli
push
imul
push
mov
adc
sbb
add
dec
lret
mov
xor
fs
imul
aas
xchg
fwait
popa
adc
call
cmpsl
aam
lds
std
adc
dec
mov
or
dec
adc
xlat
ret
pop
ret
dec
or
mov
mov
sahf
push
ret
sub
inc
sub
imul
ja
movsl
fs
clc
pusha
push
in
mov
popf
sahf
pop
dec
mov
push
add
dec
push
icebp
lods
lret
xchg
into
jnp
int3
dec
sub
pop
inc
sbb
xchg
jbe
sub
inc
mov
add
jle
jns
scas
outsb
faddl
mov
push
pop
push
jne
add
dec
popa
addr16
inc
xor
sbb
icebp
xor
ss
xchg
pop
jne
into
add
std
sub
mov
mov
movsl
mov
aas
mov
push
in
pop
jno
loop
clc
inc
sbb
mov
xlat
mov
movsl
lds
sbb
out
jp
arpl
sub
mov
cwtl
nop
imul
add
adc
jmp
mov
mov
ds
mov
cmp
and
cmp
fdivr
pop
rcrb
xor
mov
mov
push
hlt
sarb
fisubl
insl
sbb
push
pop
insb
js
ret
pushf
sahf
xchg
dec
jo
cmp
pop
stos
repnz
sub
xor
fldenv
mov
add
sbb
pop
mov
fildl
mov
jg
push
and
mov
mov
push
and
cmc
bsf
sbb
adc
jmp
push
cltd
in
cmp
or
xlat
in
test
test
dec
xchg
in
subb
cmp
lock
mov
int
lret
aas
mov
scas
mov
xchg
add
fsubr
into
dec
adc
mov
add
adc
mov
mul
pop
push
lods
insl
jmp
cmp
dec
sbb
or
mov
xchg
adc
sbb
cmc
cli
jmp
scas
cmpsl
pushf
dec
pop
and
in
jns
mov
mov
adcl
nop
lret
stos
pushf
xchg
js
pop
iret
shlb
mov
push
xor
shll
aaa
jmp
mov
test
or
inc
pop
es
adc
std
mov
int3
int
imulb
jnp
xchg
fsub
insb
cmp
fdivrl
push
in
cmp
or
pushf
adc
arpl
cli
enter
mov
cmc
mov
int3
xor
mov
and
jno
mov
imul
mov
neg
xchg
xor
or
loopne
push
add
inc
pop
xor
ret
in
lds
jnp
out
push
je
sti
dec
and
mov
adc
in
les
orb
dec
test
out
movsl
in
adc
adc
lcall
jl
mov
or
bound
xor
test
outsl
sub
stc
into
in
divl
sub
mul
or
inc
sub
ds
adc
jecxz
pop
mov
xor
xchg
iret
mov
and
push
inc
mov
push
sbb
or
scas
dec
pop
ss
lea
mov
inc
loope
or
cmpl
jno
int
call
add
into
adc
xor
loop
mov
test
and
add
popf
roll
divb
setnp
jns
ret
popf
pop
add
icebp
adc
pop
aas
jb
mov
fwait
in
les
dec
push
call
and
ret
mov
push
stc
out
sub
jbe
xor
or
or
aaa
jecxz
mov
hlt
das
jge
icebp
lret
push
adc
pusha
das
push
xchg
lahf
xchg
jo
mov
sub
mov
aam
add
mov
dec
mov
mov
test
xor
adc
les
and
int
addb
dec
pushf
jmp
xor
mov
sub
xlat
inc
cmp
enter
mov
ljmp
mov
ja
pop
outsl
xchg
mov
add
cmc
bound
pusha
push
out
lds
gs
inc
and
adc
testl
inc
inc
cmp
leave
xchg
cmp
xor
out
out
lcall
fisubl
arpl
inc
sub
std
mov
fildll
lret
sbb
push
enter
imul
xchg
inc
sub
out
call
stos
cmp
repz
and
pop
mov
push
out
jmp
out
xor
adc
sahf
loopne
popa
xchg
mov
scas
xchg
jmp
test
in
or
lcall
pusha
push
fmull
out
pop
shrb
fwait
mov
fidivrl
xor
xorl
adc
popf
xor
and
fs
adc
sub
ljmp
dec
push
or
adc
mov
arpl
shlb
add
outsl
clc
in
je
and
imul
lret
dec
int3
dec
xor
jge
ss
mov
lock
cmp
pop
nop
mov
xor
jne
daa
dec
shlb
pop
leave
ficompl
jno
jp
cltd
mov
lock
les
ja
cltd
or
pop
cmp
cmpsb
bound
mov
mov
mov
sub
xchg
mov
addr16
xchg
js
rcll
test
cmpsb
and
pop
xor
mov
loopne
xor
or
gs
popa
jecxz
mov
xchg
lcall
sti
cmp
mov
xlat
roll
push
bound
mov
mov
repnz
mov
dec
stc
rcrb
jno
sbb
or
inc
push
sub
mov
and
fwait
pop
adc
lcall
jbe
insl
jp
es
addr16
nop
sub
sub
dec
cmp
inc
js
negb
cmpsb
pop
lret
iret
subb
arpl
push
xor
or
in
stc
stos
or
or
popa
cmp
sbb
mov
sub
popa
out
inc
or
aam
shl
pop
imul
and
hlt
push
xor
adc
push
pusha
push
or
add
jge
adc
fdivl
fisttps
mov
rolb
lock
mov
cmpsb
das
and
pop
or
mov
ljmp
es
jns
and
jl
popa
jno
scas
jge
popf
aad
sbb
out
xchg
push
inc
push
adc
jo
in
lock
add
leave
mov
push
inc
mov
fdivl
shrl
adc
xchg
jo
ljmp
jg
sbb
xchg
test
insb
cmpsl
jns
jp
pusha
rol
cmp
inc
xchg
push
lock
aad
and
cmpb
add
pushf
or
mov
add
in
jbe
mov
sub
in
mov
out
sahf
bound
cmp
dec
xchg
out
data16
clc
and
pop
cmc
jge
push
notl
xor
push
cmp
dec
push
pop
dec
push
add
cmc
xor
test
insb
push
fs
push
push
insl
rcll
jnp
xlat
outsl
xchg
pop
sub
dec
mov
push
movb
fs
xchg
repnz
dec
pop
xchg
sub
jnp
leave
adc
inc
push
push
or
sub
ret
xor
push
lret
cmpl
fldt
sti
sub
cmp
aad
stos
nop
adc
pop
or
sbb
shlb
cmp
test
sti
out
insl
cmp
jp
jg
jl
fistpl
adc
js
xchg
mov
cmc
xchg
add
bound
push
sub
stos
push
lds
test
out
les
out
jl
lret
popa
les
std
add
daa
inc
cmp
hlt
fld
xor
xchg
sbb
hlt
jle
jb,pn
in
dec
xor
xchg
movsl
mov
cmpsb
pop
in
mov
cmp
lds
jno
sti
mov
mov
jae
and
add
jg
sub
cmpsb
and
mov
hlt
sbb
jno
jg
jbe
adc
cmp
data16
xor
add
sbb
mov
and
or
stc
outsb
popl
ss
insb
jb
stos
xor
jecxz
lds
inc
mov
test
inc
scas
repnz
jl
xchg
and
rclb
or
mov
xchg
sbb
imul
pop
fadd
popa
lahf
popf
popa
mov
nop
sbb
push
sti
dec
ss
iret
pop
xchg
mov
daa
push
pop
sub
push
fiadds
push
adc
sahf
hlt
dec
mov
lock
mov
mov
sbb
ss
ret
push
stos
jp
ret
or
xchg
rclb
mov
js
mov
xor
xchg
sti
mov
loopne
push
adcl
fldcw
sarl
pop
jmp
popa
dec
add
mov
mov
xchg
push
imul
ja
lods
dec
xchg
xor
pop
ror
movsl
iret
je
ljmp
cmp
fisubl
in
cmp
push
push
aam
nop
add
pop
ljmp
dec
xlat
sbb
adc
mov
ret
mov
or
call
js
cs
call
pop
int
pusha
mov
xchg
sbb
add
adc
sub
ret
out
sub
and
mov
inc
imul
jno
sbb
testl
dec
push
pop
mov
or
xchg
mov
add
pushf
xchg
sbb
mov
call
push
jecxz
mov
enter
out
jg
add
arpl
dec
fs
cltd
and
lds
xlat
push
xor
enter
insb
sub
daa
bound
mov
push
call
jns
outsb
pop
mov
jo
movsl
pusha
push
gs
rcr
out
imul
not
out
xor
imulb
stc
aam
lods
mov
cmp
daa
xchg
push
icebp
sbbl
jbe
and
test
jmp
inc
mov
fidivs
xchg
adc
and
fbld
sbb
pop
sbb
ja
hlt
lods
xchg
fst
xor
push
add
nop
cmpsb
jl
sbb
push
sub
inc
or
scas
shlb
call
imul
ja
pop
sbb
sbb
pop
mov
push
repnz
out
xor
sbb
adc
movsl
pop
pop
mull
xchg
inc
inc
frstor
dec
enter
aaa
test
dec
sbb
pop
ljmp
or
cwtl
and
or
pushf
push
out
or
cs
out
push
dec
mov
test
pop
adc
rcrl
dec
int3
lret
push
cmp
scas
inc
mov
xor
mov
cs
sub
xchg
inc
es
lock
enter
add
fidivl
push
ret
out
mov
popa
and
sti
movsb
push
imull
adc
fwait
jl,pt
pop
subl
inc
push
xchg
fisttpll
sahf
xchg
dec
cmp
cld
inc
sub
icebp
jp
dec
loope
in
roll
out
scas
add
lret
mov
insb
jno
outsl
cmp
push
fistps
inc
sub
insb
movsl
mov
inc
sbb
jne
adcl
fmulp
push
daa
jb,pn
and
add
cltd
jnp
or
xor
loopne
xlat
cmpl
das
insb
xchg
mov
mov
xor
ret
aam
pusha
subb
jb
icebp
sbbw
sbb
add
lahf
pop
inc
cmc
mov
pop
sbb
fdivr
jb
mov
pusha
jns
mov
push
mov
out
adc
xor
dec
xor
mov
lock
mov
lcall
aas
adc
aaa
aaa
ret
fsubr
stc
in
mov
lahf
cmpsl
mov
aad
sbb
sti
lock
out
stos
adc
sti
cltd
cmp
imul
lahf
nop
out
shl
push
fisubl
xor
adc
data16
inc
inc
mov
jle
mov
sarl
xlat
pop
out
ds
shlb
xchg
test
adc
xchg
imul
out
pushf
insl
push
xlat
adc
xorl
xchg
hlt
jnp
sahf
jae
nop
fcom
lods
int3
or
rorl
lahf
inc
out
dec
cmp
mov
shl
mov
pusha
cmp
add
jmp
jbe
fdivp
xchg
inc
xor
and
dec
dec
out
mov
cmova
sbb
cs
fs
lret
pop
fsubr
sarb
dec
xchg
test
jo
pop
mov
aad
mov
xlat
pop
xor
test
movsb
rcrb
loope
cmp
inc
adc
repz
insb
insl
cwtl
dec
std
popf
jp
xchg
sbb
dec
push
adc
inc
lods
das
fildll
shrb
push
sub
addb
sub
or
add
mov
or
aam
test
adc
pop
sbb
arpl
js
lods
adc
mov
ds
and
bnd
jne
fsubr
out
push
daa
outsl
pusha
cmp
fisubs
pusha
subl
sbb
mov
mov
or
pop
mov
push
inc
adc
testb
xor
push
cli
or
or
lock
outsl
les
pop
jne
test
inc
mov
jno
push
sti
aas
mov
mov
xchg
inc
imul
pop
sbb
mov
pusha
push
jl
xor
add
jle
mov
leave
int3
bound
cmp
test
jb
rcrb
sbb
fmulp
es
adc
pusha
ljmp
and
add
repnz
stc
rol
mov
imul
dec
and
adc
scas
push
incl
movsb
jo
pusha
mov
pop
inc
xchg
int3
mov
loopne
ret
fwait
add
iret
jl
cmp
data16
jo
sbb
push
aaa
or
xchg
mov
cld
mov
fwait
sbb
mov
aaa
add
xor
data16
lahf
mov
loopne
push
xchg
xor
jo
xor
push
int3
inc
cmc
mov
adc
lock
sub
sub
jle
and
and
xchg
faddl
xchg
cmpsb
pushf
roll
mov
or
sub
fstpt
inc
jle
rorb
in
push
or
hlt
nop
push
neg
test
mov
icebp
loope
pushf
push
mov
andb
adcl
mov
mov
push
mov
push
push
adc
out
mov
orb
push
adc
iret
xor
test
popf
and
jp
add
or
js
sbb
out
loopne
in
cli
sbb
push
loop
clc
xor
aam
dec
push
fwait
xor
test
stc
and
push
and
stc
pop
inc
jne
shll
ds
fldenv
or
jmp
or
enter
aam
jo
jge
mov
fst
xchg
jl
gs
loope
adc
mov
aad
adc
ja
mov
fcoml
jbe
outsl
add
mov
fildll
mov
in
sub
test
sub
in
push
mov
jo
andb
cltd
pop
xchg
out
pop
add
data16
mov
and
je
xchg
cmp
cmpsl
pop
cmp
adc
cltd
sub
sbb
stos
fmull
or
jle
fistpl
inc
xchg
sbb
adc
cmp
je
inc
insb
adc
xchg
clc
testb
jmp
add
or
ficoml
loopne
loopne
cmpsl
js
cmp
xchg
xchg
je
pop
xchg
mov
sbb
fs
and
sub
les
jl
pushf
ja
jl
nop
cmp
in
xor
jno
fildll
mov
xchg
sub
jnp
sub
lock
adc
popf
loopne
mov
out
das
push
leave
xor
inc
loopne
fstpl
fs
inc
inc
inc
push
jo
hlt
add
xor
imul
arpl
out
stc
xor
mov
jg
xchg
push
jae
jge
mov
push
les
int3
cmp
ja
addb
cli
or
movsl
xchg
cwtl
pusha
sub
bound
jmp
in
lea
shr
xor
popa
push
sbb
imull
inc
fistps
inc
fcos
pop
mov
fistps
and
mov
mov
je
cmp
jmp
mov
mov
daa
mov
out
sbb
mov
pop
ja
mov
fsubrl
or
inc
cmpsb
jb
pusha
push
js
jo
je
stc
iret
push
sub
sub
lahf
lods
adc
xchg
repnz
cwtl
adcb
push
adc
and
push
mov
push
jno
test
mov
pop
sarl
imull
cmp
adc
mov
clc
orb
fdivs
sti
sbb
ss
inc
mov
lahf
out
roll
cmp
mov
repnz
iret
out
jecxz
pavgw
imul
es
xchg
js
das
shrl
adc
mov
xlat
sbb
mov
sbb
add
fbstp
inc
ret
mov
cld
in
hlt
rcll
jo
or
hlt
das
adc
outsl
sub
aas
or
lahf
mov
ret
dec
loope
add
imul
aad
xchg
push
dec
mov
adc
sti
addr16
insb
inc
arpl
scas
fcmovbe
jo
cwtl
sbb
jo
push
pop
mov
ret
or
dec
aam
jl
lods
dec
sub
push
dec
add
dec
xlat
mov
push
sbb
mov
lret
ret
in
mov
je
fcmovnb
loop
cmc
pop
push
js
sahf
in
sub
pop
loopne
inc
mov
int
push
js
push
ret
xor
or
stc
mov
call
iret
mov
adc
mov
cli
insl
xor
in
adc
mov
pop
sbb
jg
loopne
dec
xchg
or
test
fstl
push
jecxz
movsb
add
xor
inc
xchg
push
es
into
call
inc
popf
mov
shl
flds
mov
rorb
xor
pushf
ds
cwtl
stos
lods
push
lea
ljmp
ds
adc
pop
enter
aas
cmp
pop
push
cmpsl
mov
push
std
jg
sub
fstps
std
xchg
out
and
lret
bound
in
mov
sbb
ffree
xchg
lahf
movsb
ds
loopne
pop
pop
sbb
or
fsubs
sub
mov
push
pop
popf
jg
stos
push
adc
imul
orb
sbbl
push
and
test
sub
xor
or
jle
andb
jbe
or
mov
clc
mov
sbb
and
enter
outsl
mul
loope
jl
or
sub
shlb
inc
add
mov
fadds
nop
xchg
pop
cmp
cltd
add
ret
dec
xor
imul
dec
daa
icebp
popaw
sub
add
mov
popf
sbb
scas
or
push
inc
mov
rol
subb
cltd
sub
popa
stos
jbe
leave
mov
pop
sbb
add
fistl
in
mov
and
dec
in
push
mov
dec
mov
loopne
ret
es
and
adc
sbb
in
ss
mov
cmp
dec
mov
sahf
sahf
mov
es
cmp
push
ror
imulb
sbb
out
xchg
lret
sub
test
fnstsw
fcomps
lcall
mov
jecxz
in
addr16
pop
loop
xor
mov
xor
push
mov
xchg
and
cmp
mov
mov
sarb
jbe,pt
push
mov
xchg
mov
popa
adc
pop
aaa
in
leave
sbb
sub
sub
aas
addr16
enter
dec
lret
jp
jmp
lahf
adc
aad
and
sbb
adc
push
scas
sbb
add
pop
jnp
arpl
dec
mov
or
leave
pusha
test
stos
aam
inc
insb
and
jbe
cmpsb
push
cmp
cmpsl
test
bound
or
pop
push
jne
outsb
js
cli
pusha
jl
sahf
imul
push
bound
mov
fimuls
lds
xor
add
dec
jb
jg
cltd
pop
adc
data16
sub
mov
xor
mov
scas
loopne
movsb
cmp
mov
adc
out
mov
imul
dec
push
stos
gs
and
cmpsb
jp
sub
ror
call
jle
iret
pushf
mov
out
cld
and
test
out
ret
dec
mov
rcrl
pushf
inc
fstpt
sub
adc
cld
aad
lcall
pop
insb
xor
outsb
clc
fs
outsb
leave
cmovbe
test
fwait
stos
adc
adc
mov
popf
adc
or
mov
rol
loopne
mov
adc
sub
mov
push
xchg
xchg
mov
inc
mov
jb
flds
sbb
dec
fs
jns
push
adc
and
out
es
jb
jp
push
jae
dec
in
fsubrs
hlt
fs
dec
je
adc
add
or
sbb
aam
dec
dec
test
scas
pop
pop
pop
arpl
pop
int
sqrtps
jmp
das
insl
pop
sub
cmp
repz
cmp
adc
mov
fistpl
jno
or
bound
in
pop
push
adc
dec
jge
or
xchg
mov
loopne
xchg
aaa
adc
sub
jp
dec
dec
mov
lods
and
mov
lods
xor
insb
aas
jb
inc
push
aas
adc
mov
bound
mov
insb
arpl
jmp
push
jle
or
xchg
push
cmpsl
adc
push
ret
cmp
jle
in
lahf
cmpsb
pop
fs
out
imul
xchg
ficompl
addr16
fstl
cltd
shlb
fisubrs
pop
aam
sbb
fisubs
nop
pop
and
imul
cmp
stc
xchg
rcr
xchg
stos
repz
fwait
mov
mov
sub
leave
pushf
mov
and
inc
pop
mov
unpckhps
adc
filds
mov
inc
dec
loop
xchg
pop
or
lock
pop
imul
push
cmpsl
outsb
pushf
and
out
inc
dec
sar
xor
mov
cmp
sbb
aad
mov
mov
mov
rcrb
jb
addr16
jne
mov
pop
lds
xchg
sub
hlt
jnp
sub
ror
stos
cld
in
add
pop
cmp
loope
dec
xor
pop
mov
repnz
dec
sub
and
mov
sub
sbb
rcll
out
push
pop
iret
xor
push
aas
popf
jle
xchg
mov
mov
idivb
sti
mov
test
insb
iret
add
rolb
insl
xor
or
push
jle
dec
call
scas
out
pop
or
test
adc
cmp
clc
or
add
or
add
cmpsl
push
mov
sbb
xchg
sub
mov
addb
divl
jb
mov
gs
icebp
mov
lret
sbb
rorl
mov
dec
lret
cmpsb
divl
jle
les
sbb
ljmp
dec
sbb
lods
outsl
pop
ds
pop
mov
dec
jb
sub
lds
lcall
movsl
xor
in
cmc
je
arpl
fidivl
lea
mov
test
mov
aaa
jbe
pop
repz
pop
pop
pop
push
mov
push
cltd
xor
push
stc
repnz
insb
pop
xchg
lods
das
movsl
and
push
adc
js
add
sbb
mov
dec
dec
mov
or
dec
mov
mov
cmp
fdivrl
rcrl
fimull
divl
and
or
clc
je
fcomps
mov
addr16
or
iret
mov
mov
xchg
ja
cmpsb
scas
rcrb
inc
push
ds
aaa
arpl
pushf
add
adc
ficoml
dec
xchg
add
call
push
cwtl
ret
dec
scas
adc
push
scas
lods
inc
inc
iret
mov
mov
jle
inc
in
in
loopne
ja
jae
scas
pop
xchg
inc
jne
jge
pcmpeqb
cmpsb
loopne
xchg
pop
sub
push
ret
mov
loopne
in
fists
or
pop
nop
lods
jge
aad
add
mov
rolb
sarl
inc
ret
cli
rcl
add
mov
sub
aad
lods
sbb
or
jae
xlat
ret
pop
mov
repnz
cmp
ljmp
xchg
fsubrs
lock
mov
mov
xchg
pop
jmp
bound
movsb
mov
mov
xor
orb
xor
in
xchg
sub
aas
push
fwait
sbb
jb
int3
push
loop
xchg
jbe
dec
add
test
sbb
aaa
adc
mov
jae
lods
iret
inc
aas
pop
pushf
or
scas
jp
lds
xor
push
sti
insb
push
es
xchg
or
pop
cmpsl
jbe
jae
std
inc
or
dec
pop
cmpsl
xor
test
push
push
adc
fs
inc
arpl
and
xchg
push
out
mov
bound
and
push
mov
lcall
pop
mov
jno
out
inc
dec
sarb
ficoml
js
rorb
dec
aaa
mov
ds
test
fildl
inc
mov
lods
das
pop
cmp
sbb
jo
outsl
lods
aaa
xchg
movsb
and
adc
sbb
sub
mov
mov
dec
iret
jae
int
aam
and
xchg
push
repnz
je
add
sbb
scas
in
inc
adc
xchg
out
rolb
ja
popa
add
cmp
push
inc
out
adc
ja
out
ss
push
xor
rcrb
sbb
add
xchg
dec
mov
cmpsl
mov
int
add
loopne
mov
mov
pop
clc
xchg
fcomi
sub
and
dec
lds
jne
fidivs
cmp
mov
pop
adc
xchg
push
pop
fwait
adc
cmpsb
adc
lods
add
ret
jecxz
mov
inc
sti
cmc
loopne
movsl
jecxz
in
stc
ret
scas
or
insl
aam
pop
xor
mov
or
xorb
mov
jg
outsb
inc
ret
mov
lock
xchg
jecxz
addps
insl
jne
xor
mov
scas
jg
lahf
xor
sti
call
idivb
fs
pop
into
shrl
sub
movsb
mov
mul
sbb
xchg
xchg
fimull
pop
jmp
sti
dec
mov
xor
xchg
push
insb
mov
pop
scas
mov
cmpsb
cmp
mov
mov
pop
repnz
pusha
leave
sub
dec
xchg
dec
push
cs
je
sar
push
pop
mov
mov
push
mov
jge
mov
in
or
mov
pop
and
pop
mov
jo
pop
aaa
push
inc
xor
mov
mov
fisttpll
or
bound
fstpl
jg
daa
jmp
sbb
scas
movl
mov
test
popf
xor
repz
icebp
dec
jl
xchg
scas
stc
enter
aam
push
adc
add
stos
or
cmp
sub
jbe
stos
enter
mov
push
cld
sbb
int3
and
and
movsl
int
std
mov
inc
sbb
add
sbb
aam
pop
fwait
mov
and
pop
jle
jo
ljmp
cmp
je
xor
int
cmpl
inc
daa
aas
out
cmp
mov
xor
mov
xor
lods
not
jnp
movsl
pop
adc
jmp
dec
jmp
pop
addb
dec
in
adc
sahf
arpl
je
inc
pop
jecxz
and
adc
sahf
scas
cld
fnsave
in
jns
xor
aas
cmp
mov
xlat
lods
inc
in
mov
lea
xor
xlat
out
inc
int3
pop
shll
int
cltd
loopne
movsb
int
inc
cwtl
and
call
nop
mov
dec
jbe
pop
and
inc
lret
pop
xchg
pop
push
std
lret
and
nop
lahf
xor
push
lds
push
insb
outsb
add
repz
xor
jb
sub
pop
sahf
xor
call
mov
xchg
mov
push
jecxz
jb
adc
arpl
or
adc
cmpsb
add
or
xchg
mov
mov
sbb
gs
out
lahf
sbb
sti
jle
es
test
dec
repnz
lahf
scas
push
push
xor
pop
pusha
sub
ljmp
sub
mov
shrl
out
int
mov
loopne
jae
jo
in
mov
sbb
push
aad
push
sbb
and
test
xchg
inc
dec
fstps
in
mov
mov
loop
rclb
mov
xor
inc
cmp
shrb
setg
push
fwait
mov
cmpsb
jp
sbbb
shrb
push
xor
ret
jno
std
daa
inc
in
je
negb
sbb
iret
pop
lock
jp
loopne
pop
loope
sub
fildll
add
cmp
mul
jnp
jmp
rolb
jecxz
in
in
sub
fmull
cli
ja
inc
enter
gs
add
or
or
aam
sub
xchg
stos
repz
fisubs
pop
xlat
idivl
jnp
loop,pt
mov
mov
ljmp
inc
jle
jl
jp
adc
cmc
pop
loopne
adc
or
in
mov
cmp
cli
sub
xor
shll
cmp
fdiv
in
and
movsl
out
xorb
ljmp
fwait
dec
das
fildl
nop
insb
leave
and
sub
inc
pop
pop
std
adc
loope
addr16
fcomps
dec
out
pop
or
jo
mov
bound
adc
shrb
push
mov
mov
mov
sub
outsb
inc
mulps
push
and
add
mov
testb
mov
push
mov
popf
mov
test
mov
add
iret
call
xor
xchg
shrl
jmp
aaa
sahf
xorb
mov
mov
aaa
jnp
mov
into
and
in
inc
mov
xchg
add
jbe
mov
or
arpl
or
add
outsl
aam
jg
xchg
popa
dec
fildll
jne,pn
or
xchg
scas
xchg
rolb
cmp
popf
cwtl
xor
ds
adc
les
fbstp
adcl
inc
in
fwait
pop
jbe
or
gs
xor
add
js
jle
mov
in
add
dec
sub
pop
inc
aaa
mov
inc
std
push
lock
mov
les
adc
lock
in
in
scas
ljmp
rcll
jns
shrb
arpl
flds
xchg
mov
decl
test
inc
sbb
cmpsb
repz
mov
cmp
add
inc
mov
mov
and
sub
xchg
cwtl
fwait
xchg
sub
mov
movsb
insl
and
sub
dec
pop
lahf
jo
outsl
pop
jbe
mov
pop
jp
test
add
test
inc
or
mov
push
dec
mov
ret
add
lea
in
loop
movb
dec
shlb
or
mov
pop
hlt
inc
lea
sbb
push
iret
xor
xor
and
mov
jo
sbb
sub
push
fdivl
pop
pusha
cmp
repz
in
jbe
sub
popa
and
xor
push
sahf
mov
xor
xchg
mov
cld
jne
adc
ret
pop
imul
popl
dec
mov
sarb
imul
pushf
fbld
aad
out
dec
out
adc
mov
add
repnz
rclb
data16
insb
inc
xor
adc
pop
sbb
leave
add
scas
repz
jecxz
push
std
xor
adc
cmp
aad
iret
pop
jmp
iret
sarb
lret
out
adc
shlb
mov
leave
test
lcall
or
ja
lahf
push
jnp
xor
dec
aad
sub
clc
push
push
xchg
adc
and
mov
or
pop
daa
sub
aaa
xor
je
fildl
dec
ds
mov
pusha
sub
mov
in
cmpsb
push
out
dec
xor
add
in
les
fimull
andb
xchg
aad
jle
or
push
lret
xor
or
cmp
or
mov
pop
sarl
mov
inc
test
fadds
mov
cmp
add
dec
out
divl
pop
fcompl
repnz
sti
les
or
push
mov
je
mov
xor
cmp
sbb
mov
mov
cmp
push
sub
aas
add
adc
cwtl
pop
ficoms
mov
mov
cmp
mov
imul
ljmp
incl
mov
aad
fcmove
into
inc
adc
cmp
and
mov
cltd
les
inc
int
fistpl
clc
push
mov
out
repnz
andl
int3
sahf
xor
inc
jmp
pop
insb
mov
push
ljmp
out
in
je
jnp
outsb
inc
stos
push
gs
fucomi
add
rclb
dec
into
insb
pop
int3
fildl
xchg
movsl
xor
cld
xor
jne
lds
sub
cmc
sub
test
pop
xorl
and
pop
fsubrs
sbb
xchg
mov
mov
cmp
int3
mov
fidivs
pop
aam
je
rcl
mov
stos
leave
push
push
sub
fisttpl
hlt
ret
loope
loop
ss
das
iret
xchg
and
xchg
mov
ljmp
rol
in
popf
mov
enter
icebp
cmp
push
adc
into
jno
mov
and
jns
sub
punpcklwd
pop
lcall
lock
fs
out
cltd
pop
cld
lea
xorb
adc
pop
push
xchg
xchg
sbb
lcall
stos
ljmp
popa
cmpsl
cmp
pop
jo
popa
lret
add
sub
ror
sti
rorl
mov
push
in
fmul
cmp
xor
ja
push
push
lcall
imul
dec
mov
sbb
lret
fmulp
jmp
into
outsl
stos
out
pop
daa
cmpl
ss
ret
mov
add
mov
scas
aam
mov
xchg
xchg
jnp
adc
cmp
add
in
dec
pop
and
dec
xorl
ret
pusha
in
das
cmpsb
jno
sub
inc
stos
cmp
cwtl
dec
lods
repnz
je
or
ds
and
add
mov
sbb
push
mov
push
xor
ds
sbb
push
xchg
std
and
psubsb
jmp
pop
lahf
in
into
icebp
and
add
push
out
je
cmp
cmpsl
lea
ficoml
out
mov
cs
fsubrs
sub
push
lods
add
lods
loopew
mov
xor
xchg
scas
cmp
repz
adc
enter
lret
cmpsb
movsl
fldlg2
fidivs
sbb
bound
or
sub
lock
stc
ss
test
mov
push
or
xorb
repnz
paddd
xchg
hlt
dec
push
inc
sarb
push
jb
mov
mov
mov
repz
cmp
inc
imul
data16
out
lods
ljmp
lret
nop
outsl
pop
fwait
repz
mov
decb
repz
ljmp
popf
les
pusha
jno
fdivs
lods
addl
xor
std
mov
dec
mov
xor
cmp
or
test
jmp
jge
xchg
lret
mov
jmp
imul
cmp
sbb
cmp
adc
cltd
aam
mov
pop
mov
in
jne
scas
gs
jb
insl
add
dec
lds
xchg
clc
popf
aas
nop
aad
dec
mov
sub
or
jl
loop
jle
mov
jge
movsb
inc
xchg
mov
adc
js
dec
fwait
das
testb
dec
push
cmp
add
adcl
lahf
lahf
stos
mov
mov
pop
push
aad
jl
addr16
in
fcoml
out
leave
mov
dec
sahf
jmp
bnd
and
scas
pop
ret
inc
mov
int3
cld
push
hlt
repz
or
sbb
inc
pushf
andb
rcrb
je
repnz
scas
fsub
pop
sub
jne
sub
inc
les
cmp
nop
out
cmc
gs
lret
jno
add
jmp
aam
bound
inc
movsl
push
inc
rcll
pushf
testl
loop
nop
in
popa
test
dec
nopl
mov
push
mov
mov
xor
loopne
in
idivb
and
arpl
sbb
fcomps
xchg
push
dec
aaa
pushf
dec
test
add
jb
mov
cmpb
in
push
addl
and
loopne
sbb
mov
cmp
xor
out
sbb
and
dec
sub
icebp
jle
sahf
add
sahf
imul
mov
adc
push
xchg
sti
dec
cmp
sub
scas
jp
xor
inc
mov
imul
xchg
jmp
inc
imul
mov
cmc
sub
xchg
ljmp
adc
nopl
sarb
int3
pop
pop
icebp
pop
and
mov
jp
dec
scas
loope
pop
popa
xor
je
dec
bound
xor
int3
and
scas
pop
adcb
xchg
cmp
popf
pop
aam
jbe
outsl
rcl
cmpsb
mov
or
das
pop
dec
std
and
jg
hlt
xor
sti
jnp
jnp
into
mov
lahf
pop
call
mov
cld
dec
jecxz
jge
imul
fsubl
test
pushf
pusha
cwtl
cmpsb
test
outsl
aaa
es
cld
cmp
insl
cltd
in
in
rolb
out
fisubs
andl
or
or
cmc
outsl
fcoms
leave
xlat
or
cmc
cmp
adc
shll
lret
dec
sub
icebp
inc
pop
jmp
jmp
mov
xor
loop
ficomps
push
rcl
cmp
mulb
mov
add
dec
dec
jns
sub
repz
std
les
sub
xor
mov
mov
adc
test
jl
add
cmp
push
push
lods
scas
pop
icebp
mov
mov
mov
addb
scas
mov
cld
out
cmp
scas
push
adc
lods
add
bnd
mov
sbb
mov
inc
cmp
inc
adcl
clc
arpl
stos
jbe
mov
test
dec
insl
pop
xchg
xor
shlb
out
sbb
push
push
in
neg
sbb
push
shl
outsl
out
push
mov
gs
pop
inc
pop
push
pop
aam
push
int
mov
and
cmp
sahf
cmpsb
aas
add
jg
adc
into
jge
lds
mov
mov
dec
test
push
push
rcr
jns
add
push
pop
lahf
mov
fidivs
mov
mov
xchg
clc
notl
daa
hlt
pop
pop
sbb
dec
pop
mov
shlb
mov
lods
aad
or
pop
push
mov
mov
sbb
sub
repz
addb
add
adc
inc
sbb
xor
sbbb
adc
test
into
cmp
loope
add
leave
cmpsb
orb
jge
inc
cmp
loopne
and
and
stos
push
cmpsl
cmpl
ss
iret
cmp
ss
out
mov
pop
mov
negl
cmpsb
sbb
bound
das
mov
mov
add
fisubs
jbe
mov
icebp
loop
mov
jp
pop
or
push
pop
or
cld
push
js
inc
push
in
push
stos
dec
xchg
test
out
cmp
adc
aaa
xor
xor
hlt
out
add
imulb
das
fistpl
push
cli
inc
mov
cmpsl
punpcklwd
jmp
pop
sub
inc
sbb
leave
xchg
idiv
inc
xchg
jne
or
jle
mov
aaa
sub
imulb
mov
test
gs
cmpsl
jp
xlat
sub
mov
dec
mov
pop
xchg
mov
cld
movsl
mov
cmp
ret
mov
jge
mov
jb
stos
jo
xchg
xchg
and
sub
cmc
jb
dec
mov
fimull
loop
int
test
mov
scas
ss
push
cmp
pop
sub
fisubs
test
push
cli
add
pop
lods
out
add
cmp
sub
ja
cmc
lret
cmp
icebp
inc
adcb
pop
inc
mov
pop
rcll
cmp
xchg
fidivl
clc
aaa
addb
sbbl
lds
test
and
jbe
push
jb
jo
in
jp
int3
mov
fsts
adc
push
jnp
stos
adc
ss
test
outsb
sbbl
mov
jg
pop
jmp
adc
and
addr16
mov
sub
adc
stc
mov
nop
fldenv
movb
xchg
data16
pop
sti
aad
movsl
push
inc
adc
stos
fistpl
cmp
clc
mov
mov
jle
fstl
cmp
dec
push
mov
lahf
pop
popf
xlat
aas
out
jp
and
orb
stos
cld
jne
stos
mul
js
cmp
mov
sarb
leave
test
dec
int3
rolb
adc
insl
repnz
pop
ret
out
xchg
stos
cwtl
jbe
add
stc
aad
loope,pt
mov
adc
fsubs
push
sub
push
enter
cmpb
lcall
inc
hlt
ret
adc
pusha
adc
fistpll
sub
mov
push
and
enter
sub
fnsave
mov
testb
add
or
and
mov
mov
cmc
add
pop
test
out
cmp
pushf
jl
or
iret
mov
test
and
cmc
ds
sub
insb
push
jo
add
out
sti
pop
push
mov
push
shrb
rorl
mov
lret
and
xor
add
imul
scas
jae
jl
mov
loope
xchg
stc
inc
jno
call
and
cld
xchg
mov
add
mov
inc
adc
cmp
in
sbb
mov
adc
mov
mov
cmp
ret
out
mov
mov
adc
hlt
ds
adc
mov
pop
pop
pusha
insl
shll
rcrl
sbb
sbb
out
mov
js
xchg
add
inc
xor
outsb
cwtl
mov
cmp
cmp
push
xchg
ss
in
push
and
sbb
aad
outsb
jo
push
inc
scas
xchg
into
insb
mov
pop
cmp
add
lcall
cltd
insl
mov
jl
adc
dec
pop
aaa
iret
fucomi
cmpsb
cmp
int
mov
sbb
stos
push
or
das
insb
pushl
pop
push
insl
mov
scas
pop
hlt
imul
leave
sahf
lret
lcall
aaa
dec
jnp
fistpll
rcrb
mov
aad
lea
jge
loop
adc
hlt
push
ljmp
adc
test
pop
xchg
or
mov
xchg
xlat
rolb
leave
std
xchg
mov
shrb
aas
loope
pop
inc
fcmovnb
mov
jnp
cmpsl
hlt
arpl
aas
pop
mov
or
in
or
data16
arpl
push
les
add
les
iret
mov
ljmp
aaa
pop
mov
push
stc
xor
test
fstpt
call
es
popa
cld
inc
sbb
stos
subb
frstor
inc
aas
aaa
outsb
vunpcklps
cmpl
bound
stc
adc
mov
pusha
in
sbb
pop
lahf
les
xchg
ss
aaa
inc
bound
es
xchg
lea
jecxz
mov
jno
xor
sub
int3
adc
cmp
sub
dec
or
stos
cmp
aam
xchg
mov
push
jl
addl
clc
inc
arpl
test
imul
mov
jg
and
in
pop
mov
scas
test
mov
pop
mov
push
in
lods
mov
sti
add
sahf
xor
shl
sbb
jg
shlb
xchg
sbb
je
push
push
mov
scas
fmul
sbb
fwait
cmp
ljmp
shlb
in
cmp
ljmp
lods
jp
lock
add
dec
xorb
sbb
fwait
es
xchg
lret
cmp
adc
rclb
pushf
push
xlat
shlb
mov
fimuls
xchg
jmp
inc
cmp
jo
jns
sbb
push
mov
mov
ds
lea
fsubr
bnd
in
movsb
clc
stos
insb
enterw
cld
and
or
imul
outsl
push
pop
jo
ret
jno
mov
scas
dec
int3
mov
or
ret
fwait
push
insl
test
xchg
push
ss
sbb
sbb
pop
cmc
in
xor
mov
mov
bnd
adc
cmp
mov
and
aaa
cmp
mov
popa
ret
ljmp
cmpsl
movsb
dec
mov
dec
push
ds
cli
test
jae
pop
popa
xchg
dec
loopne
popf
dec
and
mov
mov
push
roll
sub
daa
jmp
mov
or
jns
push
push
in
sub
cmc
sub
pop
sub
lock
notl
aas
xor
std
lock
and
sbb
or
and
out
inc
and
pop
int
pop
pop
rcll
cmp
bswap
cmp
popf
mov
sbb
std
movsb
sub
fldenv
lock
test
aad
imul
xchg
jb
xor
adc
mov
inc
xchg
mov
fcomip
daa
enter
mov
in
out
dec
int3
sbb
dec
ficomps
scas
cmp
int3
push
ret
mov
dec
notl
imul
hlt
sbb
cwtl
gs
mov
les
adc
xchg
and
in
ds
sahf
jmp
xlat
cmp
loop
icebp
mov
adc
adc
mov
sahf
pusha
loop
outsl
cmpl
xor
ljmp
mov
adc
dec
push
test
xchg
stc
add
adc
inc
adc
jecxz
cltd
jb
mov
cs
jge
add
jp
cmp
pop
scas
fidivs
mov
loop
adc
dec
idiv
add
jbe
inc
pop
mov
xchg
cmp
or
in
test
inc
loop
fwait
sub
or
mov
ljmp
cld
jb
repnz
repz
or
out
push
jge
cltd
jb
inc
push
dec
rcr
jno
cmp
scas
movsb
adc
push
mov
movsb
pop
push
sbb
ficomps
cltd
iret
fwait
lcall
xchg
fstp
daa
aad
and
adc
inc
cmp
or
push
adc
gs
xchg
clc
mov
jo
or
lods
add
shll
ret
leave
sahf
jno
test
shll
aas
jp
insb
dec
dec
push
scas
std
insb
lea
mov
sarb
dec
pop
xor
adc
adc
ljmp
lods
cmp
jecxz
adc
and
sbb
xor
sti
fisttpll
sbb
enter
sti
jmp
out
outsl
sarb
pop
pop
movsl
les
stos
jno
mov
adc
ds
dec
rcrl
mov
cli
aad
popf
ja
xorb
lea
jmp
bound
adc
rcrb
mov
pushf
fwait
lahf
cmpsl
clc
or
iret
xchg
testb
xor
pusha
scas
sub
mov
or
test
sti
cmc
leave
cmp
xchg
scas
cli
shrb
inc
pop
insl
fisubrs
push
aad
jnp
add
repz
xchg
test
shlb
adcl
cmpsl
pop
imul
je
je
ss
imul
ficompl
movsl
pushf
rorb
sarl
lret
iret
xor
mov
int3
mov
jne
and
inc
loop
dec
dec
iretw
pusha
push
cmc
jb
mov
test
push
inc
cmpsb
loopne
rcll
or
jecxz
add
stos
and
out
daa
stos
lcall
insl
outsb
pop
push
ljmp
cmpsl
jp
push
push
mov
mov
fidivrl
jmp
cld
ficompl
shrl
test
sub
aaa
jae
pop
jno
arpl
add
outsl
dec
adc
fiaddl
sub
clc
adc
imul
add
dec
imul
mov
lahf
loop
iret
mov
out
imul
push
bound
sahf
sub
or
mov
mov
das
sub
shll
mov
sbb
pop
nop
punpcklbw
bound
xchg
or
and
sbb
test
pusha
lods
add
inc
lock
dec
jo
je
xchg
lret
mov
xchg
loopne
movsb
mov
fisubl
shlb
mov
mov
xor
shlb
jp
adc
lock
repz
sub
push
xchg
xor
addb
mov
negl
cmp
pop
xchg
jmp
add
dec
inc
pop
pusha
movsl
pop
es
or
mov
jle
or
fs
mov
xlat
sahf
ja
scas
fistl
add
jle
sbb
in
stos
std
xor
imul
and
adc
jmp
push
sbb
dec
add
jecxz
rolb
push
mov
inc
lcall
cmp
test
mov
cmp
sbb
mov
add
mov
xlat
cld
sbbl
icebp
cld
cmpl
dec
sahf
je
mov
xor
jb
and
mov
fwait
lret
add
imul
push
cmpsw
and
mov
test
pushf
test
cwtl
fisubrl
dec
sbb
xchg
sahf
mov
leave
pop
gs
adc
out
cli
pop
test
imul
insb
fidivl
dec
pop
mov
cmp
arpl
mov
push
and
outsl
or
std
mov
add
and
xchg
and
jmp
jae
jae
repz
out
dec
or
cltd
add
popf
test
cmpsb
jmp
hlt
lret
aad
stc
jge
cmpsl
mov
lods
and
jg
sbb
sti
mov
push
jl
xchg
scas
pop
aas
aaa
leave
fstps
je
xor
sbb
aaa
ret
mov
mov
imul
xchg
and
out
jle
sub
stc
cltd
ljmp
gs
enter
sbb
pop
pop
or
xor
pop
push
fs
sbb
lret
inc
ja
fcomps
xchg
outsb
stos
or
and
xor
fisttpl
mull
adc
xchg
cmpsl
shll
mov
pop
fcoml
out
or
out
mov
aad
or
aaa
mov
sub
outsl
cli
insl
mov
push
mov
lahf
jmp
frstor
mov
and
jp
dec
roll
mov
mov
sbb
int
adcb
out
cmp
dec
jnp
dec
in
jge
cmp
sub
mov
sub
pop
dec
xor
ret
push
je
call
stos
fiaddl
mov
add
adc
pop
fisttpl
and
xlat
shll
lods
add
jns
xchg
lock
ljmp
xor
push
fstl
and
cmpsb
jo
repz
aas
stc
jae
cmpsb
xor
mov
xor
mov
or
pop
repz
psubw
ret
xor
es
adc
in
sbb
push
lods
xlat
add
lods
psrad
xor
dec
enter
int
xchg
mov
in
aas
mov
mov
cmp
ret
shr
jp
sbb
xchg
xor
mov
test
or
cmp
add
mov
fdivs
xchg
jl
pop
xor
pusha
movsl
leave
fldenv
repnz
repnz
out
mov
movsb
xlat
mov
daa
rorb
les
jb
inc
mov
cmpsl
sbb
gs
out
dec
outsl
std
push
xor
push
shll
inc
lret
aad
scas
pop
in
ret
nop
daa
inc
mov
jp
iret
pop
pop
das
add
loop
mov
cmp
call
imulb
push
idivb
stc
inc
add
inc
adc
cmp
mov
ja
cltd
aad
int
ret
mov
test
scas
mov
dec
and
pushf
jne
das
scas
int
adc
fistps
insb
pop
xchg
mov
movsb
xor
enter
call
push
add
scas
fs
test
inc
cmpsb
sarb
cmp
xchg
mov
repz
popa
ja
sbb
mov
cli
out
or
je
sti
push
lock
jl
xorl
out
mov
push
mov
scas
stos
cltd
das
call
xchg
mov
jp
in
sbbl
enter
data16
jge
leave
add
sbb
push
or
test
test
jg
insb
stos
xlat
xchg
out
jns
imulb
mov
cmp
imulb
adcb
test
or
and
clc
dec
stc
frstor
enter
test
sbb
andl
ljmp
mov
fsubl
sahf
ds
lods
movsb
lods
ja
pusha
sahf
data16
data16
loopne
mov
jecxz
lods
icebp
shlb
fs
xorl
jae
cmpsb
add
add
out
and
test
dec
sub
xor
lods
inc
inc
inc
xor
push
cmp
mov
sub
faddl
sahf
scas
xlat
jns
cmp
inc
lds
imul
insb
std
rcrb
xor
mov
aad
orl
jmp
adc
pop
dec
clc
test
push
inc
add
push
ds
mov
mov
sbb
sbb
fidivl
mov
ret
aaa
fdiv
pop
fwait
jl
push
call
prefetchnta
inc
cli
and
sarl
jno
cli
inc
mov
xor
leave
scas
sbb
outsb
sarl
dec
push
cmp
inc
push
add
jecxz
and
xchg
in
and
and
mov
mov
in
dec
mov
lods
mov
jno
push
pop
jmp
adc
xor
lret
sbb
xchg
icebp
xor
fs
jae
imul
lret
sub
jecxz
in
ror
push
sbb
push
mov
pop
push
xor
dec
out
cmp
shrb
pop
cmp
jp
pop
mov
mov
pop
scas
inc
pop
xor
addr16
clc
stos
jge
mov
ja
add
adc
lds
xor
data16
mov
and
add
sub
es
daa
mov
lret
xor
test
add
popf
dec
loop
pop
into
call
adc
test
jg
add
mov
test
imulb
popf
xor
fwait
test
and
jl
fbstp
push
jecxz
xchg
cwtl
jecxz
jbe
bound
jmp
add
inc
ljmp
add
fst
int
mov
jae
and
mov
push
jecxz
lea
ret
inc
inc
sub
jno
and
inc
mov
xor
fists
pop
sub
jmp
fs
fstps
aam
or
push
add
stc
xchg
mov
push
pop
push
xlat
inc
and
aam
mul
inc
mov
hlt
shlb
push
pop
ja
mov
lds
push
pop
sub
cmpsb
or
mov
jmp
iret
jb
and
mov
add
and
stos
es
add
mov
sbb
mov
in
lea
ljmp
arpl
xlat
mov
xchg
sbb
push
cmc
xor
es
cltd
out
xlat
jne
add
arpl
mov
mov
jg
iret
jne
xor
movsl
push
ss
adcb
sub
add
mov
xchg
jae
movl
icebp
mov
andl
stc
or
sbb
stos
repnz
aas
subl
lods
lahf
pop
jmp
in
stos
fcmovnu
and
fcmovb
in
jge
test
sbbb
jecxz
fucomip
outsb
stos
mov
jne
hlt
xchg
mov
sub
stos
test
fcomip
jmp
out
jb
add
add
inc
add
bound
push
sub
scas
cs
inc
mov
ret
fdivr
adc
dec
mov
mov
mov
and
mov
or
cmpsb
sbb
inc
sbb
mov
push
iret
clc
mov
xchg
and
adc
cmp
pop
andb
or
and
in
lock
cmp
je
cwtl
cmp
fs
in
lock
mov
mov
xor
fs
jno
lcall
aaa
cwtl
mov
sbb
push
jb
arpl
ret
imul
bound
enter
adc
ds
shlb
cltd
xor
stos
movsb
jl
rorb
mov
aad
jne
cmc
inc
sahf
pop
sub
and
js
scas
sub
cmp
mov
mov
xor
push
push
jg
dec
xchg
mov
js
mov
pop
imul
imulb
popa
mov
movsb
adc
xchg
or
xor
pushf
add
inc
loopne
mov
outsl
inc
je
clc
inc
daa
mov
das
add
fisubs
fstps
xchg
mov
mov
loop
xchg
push
dec
push
in
call
loope
xchg
imul
orl
cwtl
push
lods
dec
fmul
cmp
cmc
into
cmp
pop
insb
mov
mov
xchg
ficoml
sbb
dec
xor
lret
rcr
pusha
nop
cmpsl
mov
cmpsb
pop
movsb
shrl
fwait
in
xor
pushl
sub
or
push
out
and
cmpl
jl
lods
jp
jns
stos
cwtl
and
jno
insl
movsl
outsb
pop
xchg
mov
mov
push
aad
adc
cmp
dec
sbb
in
pop
insl
ret
cli
repnz
cmp
xchg
jb
insl
mov
or
cwtl
mov
adc
push
pop
mov
loopne
invd
cmp
lea
xor
push
fstl
sub
daa
push
inc
mov
sub
out
xchg
scas
rolb
jmp
mov
adc
leave
es
sti
out
and
faddl
lock
fcoms
push
or
sbb
and
movsl
and
mov
mov
pushf
sahf
push
xchg
jle
fisubl
aaa
jnp
xor
inc
dec
mov
imul
sub
icebp
push
jmp
xchg
cli
orb
repnz
sub
cmpsb
mov
xchg
scas
mov
test
fimuls
cmp
mov
dec
enter
rorl
dec
adc
sub
mov
jp
leave
inc
jp
sub
xchg
jp
or
loop
sbb
dec
ja
mov
insb
mov
sbb
jno
xchg
call
pop
scas
xchg
push
push
cwtl
push
push
inc
xor
stos
lock
or
lds
enter
fisubl
xor
sub
sub
mov
jge
lods
add
cmp
andb
popa
mov
das
push
adc
mov
pop
dec
push
xchg
enter
shll
jns
dec
pop
jae
rcrb
outsl
std
xchg
adc
mov
pop
inc
cmpsl
iret
push
cwtl
mov
xor
push
xor
mov
clc
and
popa
xchg
dec
insl
hlt
push
jmp
repz
dec
insb
adc
getsec
inc
jb
cld
push
mov
in
loope
mov
popf
mov
enter
fxtract
and
shlb
hlt
mov
mov
jns
pop
pop
int
addr16
movsb
fs
xor
hlt
push
popw
adc
pop
sar
push
aam
mov
ja
out
ror
cmpsl
inc
cwtl
fwait
loope
sub
pop
jno
scas
mov
pop
mov
xchg
inc
aam
jo
js
jb
loope
xchg
je
add
fwait
in
mov
movsb
inc
cmp
rclb
mov
xchg
ret
pop
pop
mov
pop
enter
add
andl
lea
sub
ds
sbb
xor
sbb
fs
jle
jns
pushf
mov
jecxz
iret
xor
xlat
aad
dec
daa
and
lods
jg
mov
or
jl
call
jecxz
push
xchg
in
xchg
ret
jecxz
fdivrl
jb
out
leave
xchg
adc
sub
daa
ds
lcall
fisttpl
mov
ret
ljmp
xor
mov
movsb
lret
sbb
sahf
lods
push
pop
inc
lock
mov
mov
test
movlps
fs
fucom
in
push
dec
xchg
xor
sub
mov
push
loope
cmc
enter
idivl
int3
int3
call
test
shl
mov
jecxz
add
mov
aaa
cli
dec
lock
mov
xor
ret
ds
mov
pop
xor
into
cli
dec
pop
mov
cwtl
test
in
repz
or
pop
sbb
or
push
push
lcall
sub
pop
and
inc
lods
mov
sbb
and
pop
add
mov
sbb
cmp
dec
call
cmc
adc
and
test
pop
and
mov
out
movsb
and
cmc
ds
scas
sub
add
sbb
xchg
adc
shlb
dec
xchg
jle
pop
fcoms
insb
scas
xchg
add
inc
sbb
push
xor
mov
std
test
mov
in
sahf
adc
movsb
in
in
push
mov
das
pop
jbe
repz
sub
mov
fs
outsl
out
and
pop
cli
in
push
mov
cmp
std
mov
imul
jmp
out
pushf
inc
mov
add
rclb
jb
add
jbe
sti
in
mov
cmp
fisttpll
jae
sbb
jp
xor
bound
push
jnp
out
scas
loopne
mov
scas
fnstenv
ret
test
push
xchg
mov
inc
xor
inc
repz
enter
pushf
push
sbb
roll
call
mov
xchg
ficoms
xor
loop
orl
push
mov
ret
ss
adc
push
inc
adc
fistl
orb
add
mov
movsb
mov
jne
mov
and
push
aaa
in
cmpnltps
pop
or
cmc
pop
sbb
jb
pusha
sub
je
lcall
xlat
mov
nop
jle
ljmp
js
jno
lret
lods
sub
lcall
jo
scas
adc
sbb
push
pusha
push
ss
push
push
mov
xchg
lahf
in
adc
add
mov
cmp
push
pop
and
in
adc
lods
out
fiaddl
stc
pop
sahf
add
cmp
mov
lea
pop
and
outsb
mov
aad
inc
or
cli
or
lods
lea
dec
pop
dec
leave
in
loopne
sub
ss
pop
pop
or
dec
aas
test
fisubrs
jmp
pop
popf
imul
cmp
push
int
lret
arpl
jmp
and
xchg
insl
movsl
int3
adc
xlat
dec
arpl
cmpl
inc
arpl
jns
fidivs
shll
mov
arpl
adc
movsb
jae
mov
push
aas
push
roll
es
mov
push
cwtl
adc
fildl
xor
call
adc
pop
push
adc
testb
mov
xchg
and
int
lcall
outsl
sub
int
xor
loope
and
ds
jecxz
dec
lods
lret
leave
imull
call
adc
repnz
pop
insl
mov
pop
adc
inc
repnz
lcall
aas
inc
sahf
pop
add
imul
shll
repz
jns
lods
pop
pop
ljmp
xchg
cmpsb
cmp
dec
mov
mov
or
sbb
or
jno
int3
or
addr16
adc
imul
mov
pop
jnp
or
rorl
xor
jo
pop
lret
push
std
push
lahf
add
aaa
pop
shrb
sub
rcr
in
mov
inc
mov
cmp
xlat
jne
jmp
sub
pop
adc
xor
adc
mov
and
lds
icebp
aas
outsb
sbb
sbb
nop
sbb
stos
push
out
xor
cmp
out
or
int3
subl
nop
inc
dec
scas
sub
or
out
inc
mov
repz
daa
lret
mov
popa
sub
orb
xchg
and
je
scas
movsb
sbb
inc
jbe
stc
popa
xchg
in
add
jnp
addr16
testl
lret
fiaddl
pusha
sub
mov
push
mov
stos
imul
mov
mov
test
dec
ret
leave
lods
jb
lea
pop
mov
xchg
fdivr
cmp
out
pop
cltd
jmp
idivb
jb
jg
cmp
popa
sub
ss
testb
cmp
jnp
outsb
out
cmp
cmp
push
icebp
mov
sbb
and
rolb
or
mov
leave
ret
scas
inc
mov
cmpsl
ljmp
pusha
xchg
lods
lods
or
fsubrp
add
aad
out
cmp
loope
push
jae
fcomp
movsl
scas
xchg
add
outsb
push
loopne
or
sbb
testl
lret
lea
sub
ja
lods
iret
fdivrl
jne
test
and
fisttpll
cs
out
push
cmp
mov
arpl
rcrl
sbb
or
adc
ja
or
clc
or
xor
aaa
push
dec
and
lods
jge
hlt
sub
outsl
inc
mov
out
cmp
test
fwait
imul
jle
push
jbe
insl
repz
das
popa
mov
push
push
jp
cli
and
adc
cmp
push
shl
dec
dec
stos
cmpsb
out
sub
cli
call
mov
enter
jg
xchg
mov
and
add
mov
xchg
fidivs
sub
aad
mov
cli
dec
xor
dec
fsubs
outsb
ficomps
mov
and
push
out
cli
hlt
ret
es
pminub
pop
mov
pop
adc
scas
out
in
mov
push
push
insl
dec
ss
enter
notb
xor
push
pop
sbb
push
push
mov
mov
mov
adc
sbb
testl
outsl
lods
sub
mov
or
jg
das
aad
cmp
outsl
or
pop
xor
leave
fucomi
out
jb
popf
jge
mov
or
test
std
aam
fsubr
adc
fildl
pop
adc
dec
sbb
out
repz
sub
into
cmp
icebp
pop
shlb
aaa
xor
sahf
dec
pop
cli
arpl
and
pop
xchg
ljmp
xor
fidivl
fists
sub
pop
xor
adc
pop
icebp
scas
fwait
insb
jmp
jo
jmp
adc
xchg
inc
xchg
aas
cmp
mov
mov
jbe
pop
aas
lock
pop
inc
xor
jo
or
or
adcb
rorl
mov
divl
jbe
xor
loopne
shlb
and
push
cli
mov
ret
fistps
adc
rcrl
mov
push
shr
js
push
jnp
inc
cli
test
out
inc
test
and
sub
sub
or
add
sub
bound
fmuls
icebp
popf
cmp
jnp
dec
jae
dec
out
stc
push
mov
fnstcw
mov
ja
lahf
adc
pop
or
shrd
lds
inc
test
data16
les
popa
test
lret
push
adc
dec
fcmovb
ja
add
xchg
arpl
mov
call
cltd
lea
data16
lods
push
cmp
scas
push
shll
dec
lea
test
xor
in
iret
lret
xchg
sbb
mov
aad
mov
in
mov
sbb
ret
push
or
xor
les
cmpsl
push
jo
nop
cld
adc
xchg
mov
pop
jo
imul
popf
pop
mov
das
pop
jnp
dec
pop
out
adc
lret
jb
xlat
ja
pop
test
movsl
inc
sahf
dec
sub
push
push
xor
pop
or
pop
sbb
scas
or
insl
xor
gs
cmpsl
xor
mov
mov
dec
xor
and
repnz
out
xchg
mov
push
out
pop
sbb
cmp
cltd
adc
lds
scas
or
push
jo
jno
and
lret
mov
ret
xchg
mov
jge
xor
mov
fstpt
rclb
xor
pop
cld
inc
mov
inc
mov
mov
fcompl
xchg
or
in
pop
in
leave
xlat
pop
aam
pop
jne
fists
daa
fnstenv
rolb
das
push
nop
jecxz
jbe
aas
sub
add
pusha
pop
lret
adc
fsubl
jg
sub
add
fisttpl
outsb
les
rcll
addr16
jo
pop
dec
jnp
dec
sbb
dec
sbb
adc
je
sbb
clc
iret
lock
push
pop
cld
dec
aam
mov
divb
std
push
add
sti
fcoms
outsl
rcl
jno
mov
push
fidivs
int3
insl
jecxz
push
loop
out
mov
push
or
inc
movsl
inc
add
push
sub
dec
int
mov
xchg
dec
pop
adc
jge
push
shrb
insl
cmp
in
xor
sahf
mov
sbb
push
add
dec
in
cltd
in
mov
dec
nop
call
sub
in
insl
or
sub
push
test
push
sbb
add
imul
xchg
test
mov
ficoms
cmp
push
mov
lods
out
pop
scas
push
lret
hlt
in
cli
sbb
push
ss
dec
sahf
mov
in
rcr
cmp
lret
xchg
fidivs
jo
cmp
icebp
jb
into
adc
inc
add
lret
daa
adc
shlb
cli
jae
pop
sarl
movsl
jne
fdivl
add
push
aas
or
add
add
push
jb
fists
inc
jecxz
aas
jo
mov
cmc
stc
fcomps
push
jecxz
push
adc
inc
dec
bound
fsubr
imul
lret
mov
xchg
shrb
cmp
and
cmp
xor
inc
sub
jge
ja
or
mov
shrb
icebp
or
mov
xor
mov
inc
inc
cmpsl
sub
dec
popa
xchg
cltd
lods
xbegin
ret
mov
push
test
jl
push
loop
stos
xor
in
ss
scas
int
les
mov
loop
mov
pop
aas
jb
mov
shll
outsl
dec
lds
sbb
adc
out
mov
or
jge
add
leave
jmp
cmpsl
cmpsl
lret
xchg
aad
fdivs
push
adc
push
sbb
mov
jns
mov
push
movsl
xorb
sbb
notl
in
and
adc
mov
adc
mov
sbb
cmpsb
rcrl
roll
xlat
lret
xor
dec
xchg
jl
je
rclb
mov
daa
rcrl
pop
jae
sub
stos
nop
test
sti
fcomp
pop
add
lret
add
scas
repnz
stos
or
jbe
ss
mov
dec
mov
pusha
mov
pop
pushf
jae
outsb
cmp
push
fmull
divb
scas
xadd
or
cmp
sub
rorl
pop
xchg
mov
int3
lret
lcall
adc
dec
add
xor
pop
dec
and
and
sub
xchg
imul
cmp
sbb
and
or
or
pusha
pop
testl
test
scas
cmpsl
pop
repnz
js
inc
cmp
push
in
adc
sub
scas
xor
mov
push
cwtl
xchg
mov
xchg
cwtl
mov
mov
inc
je
jle,pn
dec
daa
inc
xchg
movsl
xchg
popa
imul
sbb
jno
cmp
std
jbe
push
dec
fsqrt
popa
test
sbb
mov
mov
jae
out
mov
fsts
arpl
in
imul
jg
mov
movsl
jb
call
pop
fmuls
pop
sub
push
in
jmp
mov
jg
movsl
out
sbb
push
dec
fldt
cmpsl
ficompl
xor
sbb
xchg
adc
sub
xchg
mov
out
int3
call
clc
dec
in
dec
pop
jge
mov
icebp
lea
fsts
pop
mov
push
sub
pusha
pop
pop
aad
aam
sti
fmull
lods
mov
inc
shrb
enter
fsubrs
dec
push
pop
repnz
sub
cmpsb
into
fidivrl
jae
enter
mov
cmpsl
mov
into
push
mov
xchg
daa
push
test
pop
push
inc
xchg
dec
sbb
ds
ljmp
stc
out
xor
pop
nop
mov
or
xor
popfw
xchg
mov
inc
imul
icebp
xchg
ret
and
in
mov
and
push
test
inc
iret
dec
iret
jns
xor
cmpsl
cmpsb
push
imul
xchg
in
sub
idivb
movsb
xor
xchg
jne
sbb
jne
in
inc
dec
fidivs
pop
ret
mov
stos
push
xchg
enter
xchg
scas
sbb
jnp
rol
fnsetpm(287
cs
test
lahf
add
xor
cmpsl
xchg
loopne
jne
mov
cmc
jnp
ljmp
cmp
pop
mov
cmp
scas
sbbb
xor
mov
arpl
movsb
fcoml
mov
in
cmpl
outsl
sbb
pop
mov
xchg
das
xchg
xor
sub
sub
dec
or
popa
inc
pop
divb
inc
mov
jne
xor
test
pop
and
cmc
outsb
jmp
lock
mov
add
rcrb
add
adc
fstl
jecxz
dec
aas
fdivl
ljmp
out
stc
mov
jmp
sub
in
mov
dec
movsb
imul
pop
lods
pop
dec
insb
into
stos
jns
jns
and
xor
pop
push
nop
pop
pushf
repz
fs
or
cmpsb
sti
mov
mov
int
dec
push
icebp
jo
sub
iret
lods
int3
mov
mov
ljmp
ret
aas
jmp
push
nop
lcall
das
sbb
cmp
mov
lods
and
mov
cli
sbb
insb
std
jmp
cli
pop
mov
int3
mov
insl
shr
rorl
rcl
movsb
ret
enter
stc
and
decb
inc
stos
dec
aas
fsubrs
fstpl
in
mov
xchg
adc
js
dec
sarl
repnz
cmp
push
xchg
and
cmp
inc
lock
mov
xchg
bound
mov
repz
dec
jae
out
push
dec
loopne
lods
fcmovu
lods
add
mov
jns
or
adc
imul
mov
lock
popf
lcall
loope
pop
xor
mov
add
inc
cltd
mov
aam
in
adc
shll
cmpsb
je
imul
addb
mov
xchg
xor
pop
jmp
shll
jmp
jno
push
or
adc
int3
mov
adc
mov
and
lcall
mov
testb
xchg
push
mov
repnz
ja
imul
push
rcr
cmpsb
cld
lock
rorl
popf
gs
jae
filds
mov
pop
popa
inc
and
pop
sub
movsl
loope
cmp
mov
ljmp
sbb
imul
or
dec
dec
loopne
xor
shl
jl
or
sbb
inc
adc
push
xor
enter
pop
dec
and
mov
pop
dec
inc
cmc
into
mov
xchg
ja
add
add
test
lcallw
sub
dec
fmuls
sbb
sar
call
pop
cmp
lods
push
lret
mov
lahf
and
push
pop
scas
pushf
mov
or
faddl
out
xor
into
xor
add
int3
mov
imul
inc
mov
xor
pop
fcoms
fdecstp
mov
mov
movsb
mov
ds
adc
xor
jg
aas
inc
loop
shrb
sub
fdivs
or
push
stos
mov
les
cmp
fsubl
mov
and
imul
in
sbb
jle
push
mov
dec
sbb
jnp
xor
mov
adc
lret
sbb
cmp
cli
test
sbb
pop
push
cmc
notb
add
imul
out
lods
cmp
lahf
out
sti
lods
add
cmp
jno
les
add
hlt
mov
xchg
clc
and
sbbb
daa
and
xor
push
ret
adc
sub
ss
cmpl
fwait
dec
aaa
aam
jecxz
xor
nop
imul
jecxz
cmc
sbb
xor
nop
push
fs
xchg
test
add
cmpsl
js
add
out
pop
repz
ja
and
inc
cmp
mov
mov
mov
btr
sub
lcall
aaa
leave
bound
xor
fldenv
scas
ljmp
pop
xlat
xor
xor
push
cmpsb
jg
mov
lret
jp
inc
sub
shll
xor
or
inc
sub
lret
es
fs
mov
push
clc
call
adc
cli
mov
fcomip
test
xorl
xchg
mov
pop
icebp
mov
andl
pop
pop
js
ds
xchg
cmp
das
sar
ljmp
xor
push
outsb
rcl
mov
mov
into
push
fadd
fsubrs
jp
jge
mov
adc
scas
ljmp
dec
scas
jne
xchg
shufps
fisubl
cmpsl
xchg
and
rcll
push
xlat
enter
mov
mov
clc
dec
jp
xor
xchg
sub
out
adc
loope
out
lds
outsb
sub
je
sub
push
fiaddl
out
imul
mov
pushf
push
sahf
sti
pop
scas
daa
test
cmpsb
sarl
xor
adc
mov
add
hlt
out
les
lds
scas
scas
mov
add
adc
or
sub
daa
decb
jg
mov
xor
lret
mov
pop
out
dec
mov
add
int3
rep
stos
xlat
mov
cmpsb
adc
fnstenv
xchg
xchg
push
mov
mov
ja
fldt
mov
aas
test
push
inc
jnp
popa
int3
mov
orl
jae
adc
rcll
pop
xor
insl
enter
in
mov
mov
mov
cmp
push
xchg
xor
enter
lcall
sbb
test
in
stos
mov
cmp
adc
mov
mov
mov
or
jg
xor
adc
repz
mov
adc
adc
adcb
sbb
test
rcrl
push
popl
xchg
push
out
outsb
das
push
xchg
jge
push
nop
andl
shll
out
push
ja
add
hlt
or
inc
mov
paddsb
out
fcomip
push
fwait
loop
jp
pop
xchg
sbb
movsb
stos
adc
xor
cli
fbld
fstl
or
cmp
es
pop
sti
lahf
or
mov
xchg
fcomi
icebp
repz
in
das
xchg
sbb
pusha
subl
adc
ljmp
inc
sbb
lods
out
lock
sub
push
enter
shrb
add
push
and
or
in
inc
sbb
jbe
jp
call
fbld
cli
fwait
out
pop
inc
fisttpl
and
or
pop
out
arpl
and
push
lock
shll
jne
cmpsl
jmp
dec
xchg
mov
mov
loopne
mov
xchg
nop
mov
loope
test
icebp
xchg
pop
mov
xor
outsl
sbb
notl
dec
in
arpl
jp
leave
hlt
xchg
pop
fmuls
sbb
jnp
loope
mov
sahf
out
pop
enter
mov
shrb
xchg
test
xchg
xchg
mov
cmp
test
pop
call
mov
lahf
sub
mull
ds
adc
push
hlt
scas
lcall
lret
jl
pop
jbe
pop
arpl
add
lcall
mov
mov
push
push
mov
ljmp
or
fmull
sub
into
les
jnp
bound
push
jp
fwait
inc
in
aaa
inc
in
faddl
pop
and
lea
in
daa
or
fadds
push
or
or
adc
inc
inc
popl
movsl
lea
inc
repz
mov
addb
mov
mov
mov
popf
aaa
bound
sub
outsb
testl
xor
mov
push
xor
lea
in
and
aas
xchg
jo
and
loope
adc
mov
jmp
mov
call
xor
sub
jb
push
out
and
subl
xlat
icebp
and
les
push
out
xor
sbb
mov
sub
les
push
sub
ljmp
or
mov
sub
aaa
mov
std
hlt
sub
dec
cmp
push
push
fildl
dec
mov
inc
cmc
jb
stc
add
mov
mov
movsl
cwtl
cmp
jmp
add
fdivs
addl
adc
push
and
les
add
push
push
xchg
push
popf
movsl
shlb
fisubrl
cld
das
adc
or
mov
sbb
insb
out
fs
push
mov
inc
repnz
mov
sbb
adc
push
pushf
call
pop
fisubl
cwtl
lods
out
test
and
push
lock
sarl
gs
pop
pop
bound
cmp
xor
jne
incb
xchg
pop
push
test
repz
mov
das
mov
int
out
or
cmc
aam
sbb
or
inc
iret
lods
incl
and
xlat
nop
or
lods
xchg
or
inc
mov
mov
nop
repz
adc
pop
subl
inc
into
sbb
sub
ljmp
adc
xchg
jp,pn
es
push
int3
and
lds
sbb
sub
lcall
xor
std
pop
lret
jne
and
inc
push
jge
ja
mov
loop
movsb
sbb
inc
push
gs
fists
inc
pop
das
xor
push
insl
lret
popa
jecxz
mov
imul
aam
push
sahf
mov
adc
xchg
sub
loopne
idivl
dec
int3
out
add
jne
xor
mov
fstpl
jno
cltd
cmp
pop
shll
fsubr
sub
lret
popa
push
insl
inc
sbb
push
fisubl
xor
in
loopne
jne
xlat
add
push
pop
enter
push
movsb
aad
sub
xchg
lahf
adc
cwtl
sbb
fwait
in
jb
sub
int
sahf
les
cmpsl
shr
or
mul
add
fildll
push
pushf
lret
sub
push
out
les
cmp
and
aam
popf
or
out
mov
mov
lea
les
jns
stos
pushl
orb
push
mov
or
jle
sub
cmp
xorl
imul
sub
sti
add
loope
mov
pop
xchg
pop
fidivrs
loop
or
js
fucompp
fidivrs
or
outsl
and
hlt
xor
addr16
fwait
adc
jne
in
jl
mov
mov
xor
rcll
dec
lea
adc
testb
mov
jb
mov
pop
mov
mov
lahf
pop
movsb
insb
sub
clc
and
xlat
push
ret
push
pop
fisubrs
push
sahf
or
adcb
in
xchg
inc
sub
and
push
repnz
mov
pop
sub
je
cwtl
stos
imul
popf
test
xchg
jnp
and
clc
or
xor
jg
sahf
sub
or
inc
inc
mov
das
bound
cmpsb
or
aas
xchg
add
js
xlat
ljmp
inc
insl
mov
push
mov
cmp
lret
movsb
mov
dec
xor
jae
fwait
cmp
mov
fistl
sbb
cli
ljmp
mov
add
in
cwtl
jo
sub
andb
and
scas
jae
into
adc
sub
pusha
dec
dec
sub
xrelease
xor
repnz
hlt
cltd
mov
setl
rorb
sbb
es
dec
sub
fcmovne
je
mov
adc
idivl
pop
ret
dec
push
sub
mov
repz
push
mov
sbb
aam
popa
hlt
in
sub
xor
ja
stos
cmp
or
mov
leave
jb
cmp
sub
mov
mov
scas
jns
mov
push
adc
call
push
xchg
xchg
in
dec
push
es
pop
inc
xor
lods
or
jmp
push
cs
cwtl
hlt
mov
pushf
sbb
test
and
insl
in
pushf
add
sbb
pop
jecxz
imul
movsl
cmp
mov
in
mov
shll
in
sbb
sbb
sub
jb
add
jb
push
std
outsl
sub
out
dec
jmp
test
mov
adc
add
cmp
rclb
nop
cmpsl
cmp
xor
or
test
pop
inc
mov
push
inc
scas
jns
xor
xlat
sti
sub
inc
mov
cmc
aas
add
xor
push
or
mov
addr16
cs
dec
aaa
stc
mov
or
fisttpl
mov
xor
adc
add
push
lret
and
sbb
jle
out
mov
mov
fsubs
inc
insb
push
repz
adc
mov
push
ds
pop
arpl
test
and
pop
adc
dec
stc
and
xor
jle
popa
jne
es
jle
jecxz
dec
xor
fsts
jecxz
fs
sbb
sbb
outsl
iret
sarl
test
xchg
jne
mov
divb
shll
jmp
xchg
mov
outsb
xchg
test
test
clc
faddl
cmc
lahf
sub
pop
je
jge
add
loop
cld
jmp
out
adc
and
mov
in
mov
pop
or
shll
push
out
mov
sub
inc
sbb
mov
sbb
cmp
sub
rcl
scas
lock
and
push
cltd
mov
lods
dec
scas
aam
push
orps
sub
dec
bound
pop
adc
cli
pop
out
add
or
popa
jp
pushf
pop
ds
fimull
fs
and
dec
aaa
adc
pop
je
jmp
hlt
sub
pop
fs
pop
mov
xchg
xchg
out
bound
cmp
stos
test
fidivrs
xlat
pop
mov
test
or
push
aad
out
lods
mov
lods
fcompl
sbb
xor
pusha
mov
mov
icebp
icebp
jl
pop
push
jo
cmp
mov
ret
jg
sbb
scas
xor
sub
adc
shlb
dec
mov
outsl
testl
inc
sub
mov
psubb
push
hlt
cs
mov
jmp
data16
mov
mov
movsb
hlt
es
call
sbb
sbb
push
sbb
pop
test
sbb
das
sbb
les
push
rcl
insb
mov
and
add
xchg
gs
dec
mov
lods
movsb
or
or
cmp
xor
out
inc
dec
mov
cmp
cwtl
inc
xor
int3
jno
xor
lods
jae
sub
cmpsl
dec
sbbb
pop
push
push
adc
sbb
test
push
repz
test
xor
nop
cmp
mov
pusha
pop
xchg
cmc
xchg
mov
xor
mov
xor
repnz
pushf
cld
dec
or
sahf
cmp
mov
pop
push
cmp
rcl
call
xchg
daa
xchg
inc
mov
mov
ficoms
fdiv
fs
pop
push
cmp
xor
sbb
and
xchg
xlat
movsb
js,pt
dec
dec
cs
roll
inc
or
inc
ss
movsl
pushf
outsl
jb
mov
test
in
jecxz
loop
mov
aad
jecxz
fisttpl
pushf
inc
lcall
xor
test
mov
int3
mov
outsb
xchg
addr16
pushf
aas
jbe
pop
or
insb
mov
in
dec
test
popa
pop
loop
lock
fs
mov
notb
outsb
xchg
and
push
xor
or
mov
inc
fnsave
out
and
inc
lods
mov
add
jmp
cmp
push
movsb
xchg
dec
jno
cmp
jg
xchg
call
cmpsb
mov
push
gs
and
bound
pop
stc
sahf
les
push
dec
out
xor
pop
into
jne
and
cltd
jecxz
cmp
jb
jns
xchg
test
inc
adc
xchg
inc
push
icebp
hlt
sbb
loopne
cld
push
push
adc
xchg
mov
sbb
fwait
fwait
push
rcl
ljmp
test
pop
es
neg
add
int3
jp
mov
std
mov
xchg
push
sub
out
data16
push
cmp
in
scas
insb
outsl
mov
popa
imul
aam
clc
std
adc
xchg
add
add
inc
lea
fstl
mov
mov
push
test
mov
jp
add
pop
add
jg
shlb
dec
lods
mov
outsb
mov
lret
iret
push
or
push
mov
mov
negl
rcrl
push
call
sbb
cltd
sub
mov
jae
movsl
call
incl
sbb
inc
fsubrl
adc
xchg
adc
andl
jmp
jp
pusha
pop
push
ljmp
cltd
sub
cmp
cmp
shrl
xchg
fsubs
and
je
jae
mov
and
repnz
sahf
and
inc
mov
xorb
movsl
sbb
es
adc
in
ljmp
imull
push
pop
or
mov
sub
cltd
mov
sbb
or
jecxz
mov
mov
inc
out
lcall
ljmp
lahf
out
gs
mov
imul
loop
sub
jle
lods
in
sub
and
sub
add
sbb
push
and
inc
sbb
loope
mov
ret
mov
pop
ret
jbe
mov
inc
mov
iret
or
jbe
sbb
inc
imul
std
mov
jl
ficoml
in
stos
add
aas
jmp
lea
inc
jge
pop
xchg
ret
sahf
mov
xor
cmp
push
rorb
ja
aas
mull
es
dec
xchg
push
shl
cwtl
lcall
test
cmp
js
sub
ds
pop
sbb
fldt
fcmovu
xchg
push
push
push
insb
cmp
sbbb
ret
subl
xor
pop
shrb
scas
ret
imul
add
ss
in
push
fildl
lods
aam
and
mov
fdiv
inc
insb
dec
repnz
pop
sub
fsub
shrl
sub
cmp
sub
outsl
dec
outsl
bound
mov
fimull
pop
add
ffree
loopne
iret
fdivl
cmp
or
jns
int3
dec
in
jae
xchg
imul
jnp
notb
sti
div
and
or
jge
xchg
xchg
repz
fdivrl
pop
loop
dec
popf
mov
pop
std
sahf
stos
fistl
mov
push
mov
orb
pop
scas
lret
push
lahf
imul
push
cwtl
mov
inc
orl
outsl
add
aaa
cmp
sub
rcll
lods
xor
repnz
cmp
sbb
inc
stos
cmovno
pusha
popf
xchg
xlat
mov
stos
pop
cmp
xor
sbb
jo
mov
iret
sbb
mov
mov
cwtl
std
iret
inc
and
or
repnz
mov
rcrb
ficompl
les
pop
cmp
jo
cmp
sbb
fcoml
lahf
push
push
pop
mov
pop
mov
push
jns
push
inc
jecxz
push
test
aas
or
xor
sbb
jp
data16
sub
sbb
shl
das
xor
and
fdivs
pop
stos
pop
push
ljmp
dec
mov
push
sbb
testb
add
movsl
mov
push
or
pop
push
push
jge
mov
ret
mov
cs
in
mov
cmpsb
sbb
push
nop
inc
mov
and
stos
mov
pop
cmp
mov
dec
int3
dec
lock
pushf
ret
insb
mov
pop
xor
cmp
mov
iret
push
inc
mov
mov
and
adc
push
imul
dec
sub
hlt
push
add
xlat
shr
fldcw
lea
push
sbb
sbb
xor
push
or
add
inc
std
mov
pop
inc
iret
xchg
pop
test
or
mov
jl
pop
or
xchg
movsl
shlb
cmp
cs
or
imul
movl
iret
sub
cmpsb
and
jnp
or
hlt
in
add
xor
mov
arpl
dec
call
stos
int
lcall
mov
sub
fisttpll
inc
fldl2e
imul
repz
adc
in
mov
sub
inc
dec
inc
es
addr16
pushf
dec
cmpsb
jecxz
imul
hlt
pop
in
ficoms
outsb
ret
out
insb
ja
mov
xor
ljmp
test
mov
aaa
dec
adc
mov
dec
iret
dec
sub
ds
imul
and
shrb
adcb
orb
je
cmpsb
and
test
inc
jecxz
cli
fistpll
outsl
sub
test
js
mov
outsl
repnz
push
divl
sub
fdivrs
imul
in
cli
cmp
jmp
adc
fsubrl
into
jno
sahf
cmpsb
cmp
lret
sub
or
dec
lret
inc
xchg
popf
hlt
lahf
pop
and
ror
jmp
aam
mov
fcmovnu
sub
aaa
pop
popa
aam
cmpsb
and
fsts
push
hlt
xchg
pop
aas
xchg
loopne
mov
add
sbb
mov
push
sub
xchg
add
or
pop
lds
mov
fisubs
cmp
incl
cwtl
ds
jmp
cmp
xlat
push
cmp
jne
lds
inc
pop
addr16
js
in
mov
xchg
int3
pop
addr16
inc
